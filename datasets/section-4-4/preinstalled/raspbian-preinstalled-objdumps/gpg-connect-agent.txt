
raspbian-preinstalled/gpg-connect-agent:     file format elf32-littlearm


Disassembly of section .init:

00012980 <.init>:
   12980:	push	{r3, lr}
   12984:	bl	14de0 <pclose@plt+0x1b34>
   12988:	pop	{r3, pc}

Disassembly of section .plt:

0001298c <gcry_xmalloc@plt-0x14>:
   1298c:	push	{lr}		; (str lr, [sp, #-4]!)
   12990:	ldr	lr, [pc, #4]	; 1299c <gcry_xmalloc@plt-0x4>
   12994:	add	lr, pc, lr
   12998:	ldr	pc, [lr, #8]!
   1299c:	andeq	fp, r2, ip, asr #6

000129a0 <gcry_xmalloc@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #176128	; 0x2b000
   129a8:	ldr	pc, [ip, #844]!	; 0x34c

000129ac <calloc@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #176128	; 0x2b000
   129b4:	ldr	pc, [ip, #836]!	; 0x344

000129b8 <raise@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #176128	; 0x2b000
   129c0:	ldr	pc, [ip, #828]!	; 0x33c

000129c4 <gpgrt_funlockfile@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #176128	; 0x2b000
   129cc:	ldr	pc, [ip, #820]!	; 0x334

000129d0 <gcry_malloc@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #176128	; 0x2b000
   129d8:	ldr	pc, [ip, #812]!	; 0x32c

000129dc <gpgrt_write@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #176128	; 0x2b000
   129e4:	ldr	pc, [ip, #804]!	; 0x324

000129e8 <gpgrt_read_line@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #176128	; 0x2b000
   129f0:	ldr	pc, [ip, #796]!	; 0x31c

000129f4 <getpwnam@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #176128	; 0x2b000
   129fc:	ldr	pc, [ip, #788]!	; 0x314

00012a00 <fsync@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #176128	; 0x2b000
   12a08:	ldr	pc, [ip, #780]!	; 0x30c

00012a0c <iconv_close@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #176128	; 0x2b000
   12a14:	ldr	pc, [ip, #772]!	; 0x304

00012a18 <iconv@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #176128	; 0x2b000
   12a20:	ldr	pc, [ip, #764]!	; 0x2fc

00012a24 <strcmp@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #176128	; 0x2b000
   12a2c:	ldr	pc, [ip, #756]!	; 0x2f4

00012a30 <gpgrt_vfprintf_unlocked@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #176128	; 0x2b000
   12a38:	ldr	pc, [ip, #748]!	; 0x2ec

00012a3c <strtol@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #176128	; 0x2b000
   12a44:	ldr	pc, [ip, #740]!	; 0x2e4

00012a48 <getpwuid@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #176128	; 0x2b000
   12a50:	ldr	pc, [ip, #732]!	; 0x2dc

00012a54 <strcspn@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #176128	; 0x2b000
   12a5c:	ldr	pc, [ip, #724]!	; 0x2d4

00012a60 <gpgrt_vfprintf@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #176128	; 0x2b000
   12a68:	ldr	pc, [ip, #716]!	; 0x2cc

00012a6c <setrlimit64@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #176128	; 0x2b000
   12a74:	ldr	pc, [ip, #708]!	; 0x2c4

00012a78 <read@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #176128	; 0x2b000
   12a80:	ldr	pc, [ip, #700]!	; 0x2bc

00012a84 <assuan_pending_line@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #176128	; 0x2b000
   12a8c:	ldr	pc, [ip, #692]!	; 0x2b4

00012a90 <fflush@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #176128	; 0x2b000
   12a98:	ldr	pc, [ip, #684]!	; 0x2ac

00012a9c <getuid@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #176128	; 0x2b000
   12aa4:	ldr	pc, [ip, #676]!	; 0x2a4

00012aa8 <sigprocmask@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #176128	; 0x2b000
   12ab0:	ldr	pc, [ip, #668]!	; 0x29c

00012ab4 <memmove@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #176128	; 0x2b000
   12abc:	ldr	pc, [ip, #660]!	; 0x294

00012ac0 <free@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #176128	; 0x2b000
   12ac8:	ldr	pc, [ip, #652]!	; 0x28c

00012acc <rl_free_line_state@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #176128	; 0x2b000
   12ad4:	ldr	pc, [ip, #644]!	; 0x284

00012ad8 <_gpgrt_putc_overflow@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #176128	; 0x2b000
   12ae0:	ldr	pc, [ip, #636]!	; 0x27c

00012ae4 <nanosleep@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #176128	; 0x2b000
   12aec:	ldr	pc, [ip, #628]!	; 0x274

00012af0 <add_history@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #176128	; 0x2b000
   12af8:	ldr	pc, [ip, #620]!	; 0x26c

00012afc <ferror@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #176128	; 0x2b000
   12b04:	ldr	pc, [ip, #612]!	; 0x264

00012b08 <assuan_set_log_cb@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #176128	; 0x2b000
   12b10:	ldr	pc, [ip, #604]!	; 0x25c

00012b14 <inet_pton@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #176128	; 0x2b000
   12b1c:	ldr	pc, [ip, #596]!	; 0x254

00012b20 <_exit@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #176128	; 0x2b000
   12b28:	ldr	pc, [ip, #588]!	; 0x24c

00012b2c <memcpy@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #176128	; 0x2b000
   12b34:	ldr	pc, [ip, #580]!	; 0x244

00012b38 <gpgrt_read@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #176128	; 0x2b000
   12b40:	ldr	pc, [ip, #572]!	; 0x23c

00012b44 <time@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #176128	; 0x2b000
   12b4c:	ldr	pc, [ip, #564]!	; 0x234

00012b50 <gcry_free@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #176128	; 0x2b000
   12b58:	ldr	pc, [ip, #556]!	; 0x22c

00012b5c <memcmp@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #176128	; 0x2b000
   12b64:	ldr	pc, [ip, #548]!	; 0x224

00012b68 <select@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #176128	; 0x2b000
   12b70:	ldr	pc, [ip, #540]!	; 0x21c

00012b74 <sleep@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #176128	; 0x2b000
   12b7c:	ldr	pc, [ip, #532]!	; 0x214

00012b80 <stpcpy@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #176128	; 0x2b000
   12b88:	ldr	pc, [ip, #524]!	; 0x20c

00012b8c <uname@plt>:
   12b8c:	add	ip, pc, #0, 12
   12b90:	add	ip, ip, #176128	; 0x2b000
   12b94:	ldr	pc, [ip, #516]!	; 0x204

00012b98 <dcgettext@plt>:
   12b98:	add	ip, pc, #0, 12
   12b9c:	add	ip, ip, #176128	; 0x2b000
   12ba0:	ldr	pc, [ip, #508]!	; 0x1fc

00012ba4 <strdup@plt>:
   12ba4:	add	ip, pc, #0, 12
   12ba8:	add	ip, ip, #176128	; 0x2b000
   12bac:	ldr	pc, [ip, #500]!	; 0x1f4

00012bb0 <__stack_chk_fail@plt>:
   12bb0:	add	ip, pc, #0, 12
   12bb4:	add	ip, ip, #176128	; 0x2b000
   12bb8:	ldr	pc, [ip, #492]!	; 0x1ec

00012bbc <gpgrt_set_alloc_func@plt>:
   12bbc:	add	ip, pc, #0, 12
   12bc0:	add	ip, ip, #176128	; 0x2b000
   12bc4:	ldr	pc, [ip, #484]!	; 0x1e4

00012bc8 <sysconf@plt>:
   12bc8:	add	ip, pc, #0, 12
   12bcc:	add	ip, ip, #176128	; 0x2b000
   12bd0:	ldr	pc, [ip, #476]!	; 0x1dc

00012bd4 <unlink@plt>:
   12bd4:	add	ip, pc, #0, 12
   12bd8:	add	ip, ip, #176128	; 0x2b000
   12bdc:	ldr	pc, [ip, #468]!	; 0x1d4

00012be0 <assuan_write_line@plt>:
   12be0:	add	ip, pc, #0, 12
   12be4:	add	ip, ip, #176128	; 0x2b000
   12be8:	ldr	pc, [ip, #460]!	; 0x1cc

00012bec <dup2@plt>:
   12bec:	add	ip, pc, #0, 12
   12bf0:	add	ip, ip, #176128	; 0x2b000
   12bf4:	ldr	pc, [ip, #452]!	; 0x1c4

00012bf8 <getrlimit64@plt>:
   12bf8:	add	ip, pc, #0, 12
   12bfc:	add	ip, ip, #176128	; 0x2b000
   12c00:	ldr	pc, [ip, #444]!	; 0x1bc

00012c04 <realloc@plt>:
   12c04:	add	ip, pc, #0, 12
   12c08:	add	ip, ip, #176128	; 0x2b000
   12c0c:	ldr	pc, [ip, #436]!	; 0x1b4

00012c10 <gpgrt_fflush@plt>:
   12c10:	add	ip, pc, #0, 12
   12c14:	add	ip, ip, #176128	; 0x2b000
   12c18:	ldr	pc, [ip, #428]!	; 0x1ac

00012c1c <dup@plt>:
   12c1c:	add	ip, pc, #0, 12
   12c20:	add	ip, ip, #176128	; 0x2b000
   12c24:	ldr	pc, [ip, #420]!	; 0x1a4

00012c28 <textdomain@plt>:
   12c28:	add	ip, pc, #0, 12
   12c2c:	add	ip, ip, #176128	; 0x2b000
   12c30:	ldr	pc, [ip, #412]!	; 0x19c

00012c34 <assuan_sendfd@plt>:
   12c34:	add	ip, pc, #0, 12
   12c38:	add	ip, ip, #176128	; 0x2b000
   12c3c:	ldr	pc, [ip, #404]!	; 0x194

00012c40 <tmpfile64@plt>:
   12c40:	add	ip, pc, #0, 12
   12c44:	add	ip, ip, #176128	; 0x2b000
   12c48:	ldr	pc, [ip, #396]!	; 0x18c

00012c4c <chdir@plt>:
   12c4c:	add	ip, pc, #0, 12
   12c50:	add	ip, ip, #176128	; 0x2b000
   12c54:	ldr	pc, [ip, #388]!	; 0x184

00012c58 <geteuid@plt>:
   12c58:	add	ip, pc, #0, 12
   12c5c:	add	ip, ip, #176128	; 0x2b000
   12c60:	ldr	pc, [ip, #380]!	; 0x17c

00012c64 <gpgrt_fputs_unlocked@plt>:
   12c64:	add	ip, pc, #0, 12
   12c68:	add	ip, ip, #176128	; 0x2b000
   12c6c:	ldr	pc, [ip, #372]!	; 0x174

00012c70 <__fxstat64@plt>:
   12c70:	add	ip, pc, #0, 12
   12c74:	add	ip, ip, #176128	; 0x2b000
   12c78:	ldr	pc, [ip, #364]!	; 0x16c

00012c7c <sigaction@plt>:
   12c7c:	add	ip, pc, #0, 12
   12c80:	add	ip, ip, #176128	; 0x2b000
   12c84:	ldr	pc, [ip, #356]!	; 0x164

00012c88 <gpg_err_code_from_errno@plt>:
   12c88:	add	ip, pc, #0, 12
   12c8c:	add	ip, ip, #176128	; 0x2b000
   12c90:	ldr	pc, [ip, #348]!	; 0x15c

00012c94 <fwrite@plt>:
   12c94:	add	ip, pc, #0, 12
   12c98:	add	ip, ip, #176128	; 0x2b000
   12c9c:	ldr	pc, [ip, #340]!	; 0x154

00012ca0 <readline@plt>:
   12ca0:	add	ip, pc, #0, 12
   12ca4:	add	ip, ip, #176128	; 0x2b000
   12ca8:	ldr	pc, [ip, #332]!	; 0x14c

00012cac <lseek64@plt>:
   12cac:	add	ip, pc, #0, 12
   12cb0:	add	ip, ip, #176128	; 0x2b000
   12cb4:	ldr	pc, [ip, #324]!	; 0x144

00012cb8 <gcry_check_version@plt>:
   12cb8:	add	ip, pc, #0, 12
   12cbc:	add	ip, ip, #176128	; 0x2b000
   12cc0:	ldr	pc, [ip, #316]!	; 0x13c

00012cc4 <waitpid@plt>:
   12cc4:	add	ip, pc, #0, 12
   12cc8:	add	ip, ip, #176128	; 0x2b000
   12ccc:	ldr	pc, [ip, #308]!	; 0x134

00012cd0 <tcsetattr@plt>:
   12cd0:	add	ip, pc, #0, 12
   12cd4:	add	ip, ip, #176128	; 0x2b000
   12cd8:	ldr	pc, [ip, #300]!	; 0x12c

00012cdc <strcpy@plt>:
   12cdc:	add	ip, pc, #0, 12
   12ce0:	add	ip, ip, #176128	; 0x2b000
   12ce4:	ldr	pc, [ip, #292]!	; 0x124

00012ce8 <fread@plt>:
   12ce8:	add	ip, pc, #0, 12
   12cec:	add	ip, ip, #176128	; 0x2b000
   12cf0:	ldr	pc, [ip, #284]!	; 0x11c

00012cf4 <bind_textdomain_codeset@plt>:
   12cf4:	add	ip, pc, #0, 12
   12cf8:	add	ip, ip, #176128	; 0x2b000
   12cfc:	ldr	pc, [ip, #276]!	; 0x114

00012d00 <gpgrt_flockfile@plt>:
   12d00:	add	ip, pc, #0, 12
   12d04:	add	ip, ip, #176128	; 0x2b000
   12d08:	ldr	pc, [ip, #268]!	; 0x10c

00012d0c <gpgrt_fclose@plt>:
   12d0c:	add	ip, pc, #0, 12
   12d10:	add	ip, ip, #176128	; 0x2b000
   12d14:	ldr	pc, [ip, #260]!	; 0x104

00012d18 <gpgrt_setvbuf@plt>:
   12d18:	add	ip, pc, #0, 12
   12d1c:	add	ip, ip, #176128	; 0x2b000
   12d20:	ldr	pc, [ip, #252]!	; 0xfc

00012d24 <opendir@plt>:
   12d24:	add	ip, pc, #0, 12
   12d28:	add	ip, ip, #176128	; 0x2b000
   12d2c:	ldr	pc, [ip, #244]!	; 0xf4

00012d30 <assuan_transact@plt>:
   12d30:	add	ip, pc, #0, 12
   12d34:	add	ip, ip, #176128	; 0x2b000
   12d38:	ldr	pc, [ip, #236]!	; 0xec

00012d3c <open64@plt>:
   12d3c:	add	ip, pc, #0, 12
   12d40:	add	ip, ip, #176128	; 0x2b000
   12d44:	ldr	pc, [ip, #228]!	; 0xe4

00012d48 <getenv@plt>:
   12d48:	add	ip, pc, #0, 12
   12d4c:	add	ip, ip, #176128	; 0x2b000
   12d50:	ldr	pc, [ip, #220]!	; 0xdc

00012d54 <gcry_malloc_secure@plt>:
   12d54:	add	ip, pc, #0, 12
   12d58:	add	ip, ip, #176128	; 0x2b000
   12d5c:	ldr	pc, [ip, #212]!	; 0xd4

00012d60 <gpgrt_fdopen@plt>:
   12d60:	add	ip, pc, #0, 12
   12d64:	add	ip, ip, #176128	; 0x2b000
   12d68:	ldr	pc, [ip, #204]!	; 0xcc

00012d6c <gcry_xrealloc@plt>:
   12d6c:	add	ip, pc, #0, 12
   12d70:	add	ip, ip, #176128	; 0x2b000
   12d74:	ldr	pc, [ip, #196]!	; 0xc4

00012d78 <assuan_pipe_connect@plt>:
   12d78:	add	ip, pc, #0, 12
   12d7c:	add	ip, ip, #176128	; 0x2b000
   12d80:	ldr	pc, [ip, #188]!	; 0xbc

00012d84 <puts@plt>:
   12d84:	add	ip, pc, #0, 12
   12d88:	add	ip, ip, #176128	; 0x2b000
   12d8c:	ldr	pc, [ip, #180]!	; 0xb4

00012d90 <malloc@plt>:
   12d90:	add	ip, pc, #0, 12
   12d94:	add	ip, ip, #176128	; 0x2b000
   12d98:	ldr	pc, [ip, #172]!	; 0xac

00012d9c <iconv_open@plt>:
   12d9c:	add	ip, pc, #0, 12
   12da0:	add	ip, ip, #176128	; 0x2b000
   12da4:	ldr	pc, [ip, #164]!	; 0xa4

00012da8 <__libc_start_main@plt>:
   12da8:	add	ip, pc, #0, 12
   12dac:	add	ip, ip, #176128	; 0x2b000
   12db0:	ldr	pc, [ip, #156]!	; 0x9c

00012db4 <strerror@plt>:
   12db4:	add	ip, pc, #0, 12
   12db8:	add	ip, ip, #176128	; 0x2b000
   12dbc:	ldr	pc, [ip, #148]!	; 0x94

00012dc0 <__vfprintf_chk@plt>:
   12dc0:	add	ip, pc, #0, 12
   12dc4:	add	ip, ip, #176128	; 0x2b000
   12dc8:	ldr	pc, [ip, #140]!	; 0x8c

00012dcc <localtime@plt>:
   12dcc:	add	ip, pc, #0, 12
   12dd0:	add	ip, ip, #176128	; 0x2b000
   12dd4:	ldr	pc, [ip, #132]!	; 0x84

00012dd8 <__ctype_tolower_loc@plt>:
   12dd8:	add	ip, pc, #0, 12
   12ddc:	add	ip, ip, #176128	; 0x2b000
   12de0:	ldr	pc, [ip, #124]!	; 0x7c

00012de4 <__ctype_toupper_loc@plt>:
   12de4:	add	ip, pc, #0, 12
   12de8:	add	ip, ip, #176128	; 0x2b000
   12dec:	ldr	pc, [ip, #116]!	; 0x74

00012df0 <__gmon_start__@plt>:
   12df0:	add	ip, pc, #0, 12
   12df4:	add	ip, ip, #176128	; 0x2b000
   12df8:	ldr	pc, [ip, #108]!	; 0x6c

00012dfc <rename@plt>:
   12dfc:	add	ip, pc, #0, 12
   12e00:	add	ip, ip, #176128	; 0x2b000
   12e04:	ldr	pc, [ip, #100]!	; 0x64

00012e08 <kill@plt>:
   12e08:	add	ip, pc, #0, 12
   12e0c:	add	ip, ip, #176128	; 0x2b000
   12e10:	ldr	pc, [ip, #92]!	; 0x5c

00012e14 <__ctype_b_loc@plt>:
   12e14:	add	ip, pc, #0, 12
   12e18:	add	ip, ip, #176128	; 0x2b000
   12e1c:	ldr	pc, [ip, #84]!	; 0x54

00012e20 <_gpgrt_get_std_stream@plt>:
   12e20:	add	ip, pc, #0, 12
   12e24:	add	ip, ip, #176128	; 0x2b000
   12e28:	ldr	pc, [ip, #76]!	; 0x4c

00012e2c <getcwd@plt>:
   12e2c:	add	ip, pc, #0, 12
   12e30:	add	ip, ip, #176128	; 0x2b000
   12e34:	ldr	pc, [ip, #68]!	; 0x44

00012e38 <getpid@plt>:
   12e38:	add	ip, pc, #0, 12
   12e3c:	add	ip, ip, #176128	; 0x2b000
   12e40:	ldr	pc, [ip, #60]!	; 0x3c

00012e44 <exit@plt>:
   12e44:	add	ip, pc, #0, 12
   12e48:	add	ip, ip, #176128	; 0x2b000
   12e4c:	ldr	pc, [ip, #52]!	; 0x34

00012e50 <gpg_strsource@plt>:
   12e50:	add	ip, pc, #0, 12
   12e54:	add	ip, ip, #176128	; 0x2b000
   12e58:	ldr	pc, [ip, #44]!	; 0x2c

00012e5c <gpgrt_fprintf_unlocked@plt>:
   12e5c:	add	ip, pc, #0, 12
   12e60:	add	ip, ip, #176128	; 0x2b000
   12e64:	ldr	pc, [ip, #36]!	; 0x24

00012e68 <assuan_new@plt>:
   12e68:	add	ip, pc, #0, 12
   12e6c:	add	ip, ip, #176128	; 0x2b000
   12e70:	ldr	pc, [ip, #28]!

00012e74 <strtoul@plt>:
   12e74:	add	ip, pc, #0, 12
   12e78:	add	ip, ip, #176128	; 0x2b000
   12e7c:	ldr	pc, [ip, #20]!

00012e80 <ttyname@plt>:
   12e80:	add	ip, pc, #0, 12
   12e84:	add	ip, ip, #176128	; 0x2b000
   12e88:	ldr	pc, [ip, #12]!

00012e8c <strlen@plt>:
   12e8c:	add	ip, pc, #0, 12
   12e90:	add	ip, ip, #176128	; 0x2b000
   12e94:	ldr	pc, [ip, #4]!

00012e98 <inotify_init@plt>:
   12e98:	add	ip, pc, #0, 12
   12e9c:	add	ip, ip, #172032	; 0x2a000
   12ea0:	ldr	pc, [ip, #4092]!	; 0xffc

00012ea4 <setsid@plt>:
   12ea4:	add	ip, pc, #0, 12
   12ea8:	add	ip, ip, #172032	; 0x2a000
   12eac:	ldr	pc, [ip, #4084]!	; 0xff4

00012eb0 <strchr@plt>:
   12eb0:	add	ip, pc, #0, 12
   12eb4:	add	ip, ip, #172032	; 0x2a000
   12eb8:	ldr	pc, [ip, #4076]!	; 0xfec

00012ebc <setenv@plt>:
   12ebc:	add	ip, pc, #0, 12
   12ec0:	add	ip, ip, #172032	; 0x2a000
   12ec4:	ldr	pc, [ip, #4068]!	; 0xfe4

00012ec8 <gpg_err_code_from_syserror@plt>:
   12ec8:	add	ip, pc, #0, 12
   12ecc:	add	ip, ip, #172032	; 0x2a000
   12ed0:	ldr	pc, [ip, #4060]!	; 0xfdc

00012ed4 <execv@plt>:
   12ed4:	add	ip, pc, #0, 12
   12ed8:	add	ip, ip, #172032	; 0x2a000
   12edc:	ldr	pc, [ip, #4052]!	; 0xfd4

00012ee0 <__open64_2@plt>:
   12ee0:	add	ip, pc, #0, 12
   12ee4:	add	ip, ip, #172032	; 0x2a000
   12ee8:	ldr	pc, [ip, #4044]!	; 0xfcc

00012eec <sigfillset@plt>:
   12eec:	add	ip, pc, #0, 12
   12ef0:	add	ip, ip, #172032	; 0x2a000
   12ef4:	ldr	pc, [ip, #4036]!	; 0xfc4

00012ef8 <assuan_send_data@plt>:
   12ef8:	add	ip, pc, #0, 12
   12efc:	add	ip, ip, #172032	; 0x2a000
   12f00:	ldr	pc, [ip, #4028]!	; 0xfbc

00012f04 <inotify_add_watch@plt>:
   12f04:	add	ip, pc, #0, 12
   12f08:	add	ip, ip, #172032	; 0x2a000
   12f0c:	ldr	pc, [ip, #4020]!	; 0xfb4

00012f10 <__errno_location@plt>:
   12f10:	add	ip, pc, #0, 12
   12f14:	add	ip, ip, #172032	; 0x2a000
   12f18:	ldr	pc, [ip, #4012]!	; 0xfac

00012f1c <__strcat_chk@plt>:
   12f1c:	add	ip, pc, #0, 12
   12f20:	add	ip, ip, #172032	; 0x2a000
   12f24:	ldr	pc, [ip, #4004]!	; 0xfa4

00012f28 <strncasecmp@plt>:
   12f28:	add	ip, pc, #0, 12
   12f2c:	add	ip, ip, #172032	; 0x2a000
   12f30:	ldr	pc, [ip, #3996]!	; 0xf9c

00012f34 <__sprintf_chk@plt>:
   12f34:	add	ip, pc, #0, 12
   12f38:	add	ip, ip, #172032	; 0x2a000
   12f3c:	ldr	pc, [ip, #3988]!	; 0xf94

00012f40 <__cxa_atexit@plt>:
   12f40:	add	ip, pc, #0, 12
   12f44:	add	ip, ip, #172032	; 0x2a000
   12f48:	ldr	pc, [ip, #3980]!	; 0xf8c

00012f4c <mkdir@plt>:
   12f4c:	add	ip, pc, #0, 12
   12f50:	add	ip, ip, #172032	; 0x2a000
   12f54:	ldr	pc, [ip, #3972]!	; 0xf84

00012f58 <memset@plt>:
   12f58:	add	ip, pc, #0, 12
   12f5c:	add	ip, ip, #172032	; 0x2a000
   12f60:	ldr	pc, [ip, #3964]!	; 0xf7c

00012f64 <gcry_calloc@plt>:
   12f64:	add	ip, pc, #0, 12
   12f68:	add	ip, ip, #172032	; 0x2a000
   12f6c:	ldr	pc, [ip, #3956]!	; 0xf74

00012f70 <strncpy@plt>:
   12f70:	add	ip, pc, #0, 12
   12f74:	add	ip, ip, #172032	; 0x2a000
   12f78:	ldr	pc, [ip, #3948]!	; 0xf6c

00012f7c <gpgrt_vasprintf@plt>:
   12f7c:	add	ip, pc, #0, 12
   12f80:	add	ip, ip, #172032	; 0x2a000
   12f84:	ldr	pc, [ip, #3940]!	; 0xf64

00012f88 <gcry_cipher_algo_name@plt>:
   12f88:	add	ip, pc, #0, 12
   12f8c:	add	ip, ip, #172032	; 0x2a000
   12f90:	ldr	pc, [ip, #3932]!	; 0xf5c

00012f94 <__printf_chk@plt>:
   12f94:	add	ip, pc, #0, 12
   12f98:	add	ip, ip, #172032	; 0x2a000
   12f9c:	ldr	pc, [ip, #3924]!	; 0xf54

00012fa0 <gpgrt_write_sanitized@plt>:
   12fa0:	add	ip, pc, #0, 12
   12fa4:	add	ip, ip, #172032	; 0x2a000
   12fa8:	ldr	pc, [ip, #3916]!	; 0xf4c

00012fac <gpgrt_fopen@plt>:
   12fac:	add	ip, pc, #0, 12
   12fb0:	add	ip, ip, #172032	; 0x2a000
   12fb4:	ldr	pc, [ip, #3908]!	; 0xf44

00012fb8 <link@plt>:
   12fb8:	add	ip, pc, #0, 12
   12fbc:	add	ip, ip, #172032	; 0x2a000
   12fc0:	ldr	pc, [ip, #3900]!	; 0xf3c

00012fc4 <write@plt>:
   12fc4:	add	ip, pc, #0, 12
   12fc8:	add	ip, ip, #172032	; 0x2a000
   12fcc:	ldr	pc, [ip, #3892]!	; 0xf34

00012fd0 <fileno@plt>:
   12fd0:	add	ip, pc, #0, 12
   12fd4:	add	ip, ip, #172032	; 0x2a000
   12fd8:	ldr	pc, [ip, #3884]!	; 0xf2c

00012fdc <rl_cleanup_after_signal@plt>:
   12fdc:	add	ip, pc, #0, 12
   12fe0:	add	ip, ip, #172032	; 0x2a000
   12fe4:	ldr	pc, [ip, #3876]!	; 0xf24

00012fe8 <__fprintf_chk@plt>:
   12fe8:	add	ip, pc, #0, 12
   12fec:	add	ip, ip, #172032	; 0x2a000
   12ff0:	ldr	pc, [ip, #3868]!	; 0xf1c

00012ff4 <gcry_xstrdup@plt>:
   12ff4:	add	ip, pc, #0, 12
   12ff8:	add	ip, ip, #172032	; 0x2a000
   12ffc:	ldr	pc, [ip, #3860]!	; 0xf14

00013000 <memchr@plt>:
   13000:	add	ip, pc, #0, 12
   13004:	add	ip, ip, #172032	; 0x2a000
   13008:	ldr	pc, [ip, #3852]!	; 0xf0c

0001300c <access@plt>:
   1300c:	add	ip, pc, #0, 12
   13010:	add	ip, ip, #172032	; 0x2a000
   13014:	ldr	pc, [ip, #3844]!	; 0xf04

00013018 <gcry_realloc@plt>:
   13018:	add	ip, pc, #0, 12
   1301c:	add	ip, ip, #172032	; 0x2a000
   13020:	ldr	pc, [ip, #3836]!	; 0xefc

00013024 <fclose@plt>:
   13024:	add	ip, pc, #0, 12
   13028:	add	ip, ip, #172032	; 0x2a000
   1302c:	ldr	pc, [ip, #3828]!	; 0xef4

00013030 <gpgrt_fputs@plt>:
   13030:	add	ip, pc, #0, 12
   13034:	add	ip, ip, #172032	; 0x2a000
   13038:	ldr	pc, [ip, #3820]!	; 0xeec

0001303c <pipe@plt>:
   1303c:	add	ip, pc, #0, 12
   13040:	add	ip, ip, #172032	; 0x2a000
   13044:	ldr	pc, [ip, #3812]!	; 0xee4

00013048 <gpgrt_snprintf@plt>:
   13048:	add	ip, pc, #0, 12
   1304c:	add	ip, ip, #172032	; 0x2a000
   13050:	ldr	pc, [ip, #3804]!	; 0xedc

00013054 <fcntl64@plt>:
   13054:	add	ip, pc, #0, 12
   13058:	add	ip, ip, #172032	; 0x2a000
   1305c:	ldr	pc, [ip, #3796]!	; 0xed4

00013060 <gcry_md_hash_buffer@plt>:
   13060:	add	ip, pc, #0, 12
   13064:	add	ip, ip, #172032	; 0x2a000
   13068:	ldr	pc, [ip, #3788]!	; 0xecc

0001306c <assuan_read_line@plt>:
   1306c:	add	ip, pc, #0, 12
   13070:	add	ip, ip, #172032	; 0x2a000
   13074:	ldr	pc, [ip, #3780]!	; 0xec4

00013078 <setlocale@plt>:
   13078:	add	ip, pc, #0, 12
   1307c:	add	ip, ip, #172032	; 0x2a000
   13080:	ldr	pc, [ip, #3772]!	; 0xebc

00013084 <sigemptyset@plt>:
   13084:	add	ip, pc, #0, 12
   13088:	add	ip, ip, #172032	; 0x2a000
   1308c:	ldr	pc, [ip, #3764]!	; 0xeb4

00013090 <popen@plt>:
   13090:	add	ip, pc, #0, 12
   13094:	add	ip, ip, #172032	; 0x2a000
   13098:	ldr	pc, [ip, #3756]!	; 0xeac

0001309c <fork@plt>:
   1309c:	add	ip, pc, #0, 12
   130a0:	add	ip, ip, #172032	; 0x2a000
   130a4:	ldr	pc, [ip, #3748]!	; 0xea4

000130a8 <assuan_release@plt>:
   130a8:	add	ip, pc, #0, 12
   130ac:	add	ip, ip, #172032	; 0x2a000
   130b0:	ldr	pc, [ip, #3740]!	; 0xe9c

000130b4 <putenv@plt>:
   130b4:	add	ip, pc, #0, 12
   130b8:	add	ip, ip, #172032	; 0x2a000
   130bc:	ldr	pc, [ip, #3732]!	; 0xe94

000130c0 <__explicit_bzero_chk@plt>:
   130c0:	add	ip, pc, #0, 12
   130c4:	add	ip, ip, #172032	; 0x2a000
   130c8:	ldr	pc, [ip, #3724]!	; 0xe8c

000130cc <strrchr@plt>:
   130cc:	add	ip, pc, #0, 12
   130d0:	add	ip, ip, #172032	; 0x2a000
   130d4:	ldr	pc, [ip, #3716]!	; 0xe84

000130d8 <gcry_set_outofcore_handler@plt>:
   130d8:	add	ip, pc, #0, 12
   130dc:	add	ip, ip, #172032	; 0x2a000
   130e0:	ldr	pc, [ip, #3708]!	; 0xe7c

000130e4 <nl_langinfo@plt>:
   130e4:	add	ip, pc, #0, 12
   130e8:	add	ip, ip, #172032	; 0x2a000
   130ec:	ldr	pc, [ip, #3700]!	; 0xe74

000130f0 <gpgrt_asprintf@plt>:
   130f0:	add	ip, pc, #0, 12
   130f4:	add	ip, ip, #172032	; 0x2a000
   130f8:	ldr	pc, [ip, #3692]!	; 0xe6c

000130fc <assuan_set_gpg_err_source@plt>:
   130fc:	add	ip, pc, #0, 12
   13100:	add	ip, ip, #172032	; 0x2a000
   13104:	ldr	pc, [ip, #3684]!	; 0xe64

00013108 <gpg_err_set_errno@plt>:
   13108:	add	ip, pc, #0, 12
   1310c:	add	ip, ip, #172032	; 0x2a000
   13110:	ldr	pc, [ip, #3676]!	; 0xe5c

00013114 <readdir64@plt>:
   13114:	add	ip, pc, #0, 12
   13118:	add	ip, ip, #172032	; 0x2a000
   1311c:	ldr	pc, [ip, #3668]!	; 0xe54

00013120 <gpg_strerror@plt>:
   13120:	add	ip, pc, #0, 12
   13124:	add	ip, ip, #172032	; 0x2a000
   13128:	ldr	pc, [ip, #3660]!	; 0xe4c

0001312c <gpgrt_fopencookie@plt>:
   1312c:	add	ip, pc, #0, 12
   13130:	add	ip, ip, #172032	; 0x2a000
   13134:	ldr	pc, [ip, #3652]!	; 0xe44

00013138 <putc@plt>:
   13138:	add	ip, pc, #0, 12
   1313c:	add	ip, ip, #172032	; 0x2a000
   13140:	ldr	pc, [ip, #3644]!	; 0xe3c

00013144 <getsockname@plt>:
   13144:	add	ip, pc, #0, 12
   13148:	add	ip, ip, #172032	; 0x2a000
   1314c:	ldr	pc, [ip, #3636]!	; 0xe34

00013150 <gpg_err_init@plt>:
   13150:	add	ip, pc, #0, 12
   13154:	add	ip, ip, #172032	; 0x2a000
   13158:	ldr	pc, [ip, #3628]!	; 0xe2c

0001315c <remove@plt>:
   1315c:	add	ip, pc, #0, 12
   13160:	add	ip, ip, #172032	; 0x2a000
   13164:	ldr	pc, [ip, #3620]!	; 0xe24

00013168 <fopen64@plt>:
   13168:	add	ip, pc, #0, 12
   1316c:	add	ip, ip, #172032	; 0x2a000
   13170:	ldr	pc, [ip, #3612]!	; 0xe1c

00013174 <gcry_create_nonce@plt>:
   13174:	add	ip, pc, #0, 12
   13178:	add	ip, ip, #172032	; 0x2a000
   1317c:	ldr	pc, [ip, #3604]!	; 0xe14

00013180 <gcry_control@plt>:
   13180:	add	ip, pc, #0, 12
   13184:	add	ip, ip, #172032	; 0x2a000
   13188:	ldr	pc, [ip, #3596]!	; 0xe0c

0001318c <strpbrk@plt>:
   1318c:	add	ip, pc, #0, 12
   13190:	add	ip, ip, #172032	; 0x2a000
   13194:	ldr	pc, [ip, #3588]!	; 0xe04

00013198 <socket@plt>:
   13198:	add	ip, pc, #0, 12
   1319c:	add	ip, ip, #172032	; 0x2a000
   131a0:	ldr	pc, [ip, #3580]!	; 0xdfc

000131a4 <gpgrt_fprintf@plt>:
   131a4:	add	ip, pc, #0, 12
   131a8:	add	ip, ip, #172032	; 0x2a000
   131ac:	ldr	pc, [ip, #3572]!	; 0xdf4

000131b0 <bindtextdomain@plt>:
   131b0:	add	ip, pc, #0, 12
   131b4:	add	ip, ip, #172032	; 0x2a000
   131b8:	ldr	pc, [ip, #3564]!	; 0xdec

000131bc <gcry_xcalloc@plt>:
   131bc:	add	ip, pc, #0, 12
   131c0:	add	ip, ip, #172032	; 0x2a000
   131c4:	ldr	pc, [ip, #3556]!	; 0xde4

000131c8 <gcry_set_log_handler@plt>:
   131c8:	add	ip, pc, #0, 12
   131cc:	add	ip, ip, #172032	; 0x2a000
   131d0:	ldr	pc, [ip, #3548]!	; 0xddc

000131d4 <gcry_set_fatalerror_handler@plt>:
   131d4:	add	ip, pc, #0, 12
   131d8:	add	ip, ip, #172032	; 0x2a000
   131dc:	ldr	pc, [ip, #3540]!	; 0xdd4

000131e0 <chmod@plt>:
   131e0:	add	ip, pc, #0, 12
   131e4:	add	ip, ip, #172032	; 0x2a000
   131e8:	ldr	pc, [ip, #3532]!	; 0xdcc

000131ec <__xstat64@plt>:
   131ec:	add	ip, pc, #0, 12
   131f0:	add	ip, ip, #172032	; 0x2a000
   131f4:	ldr	pc, [ip, #3524]!	; 0xdc4

000131f8 <isatty@plt>:
   131f8:	add	ip, pc, #0, 12
   131fc:	add	ip, ip, #172032	; 0x2a000
   13200:	ldr	pc, [ip, #3516]!	; 0xdbc

00013204 <unsetenv@plt>:
   13204:	add	ip, pc, #0, 12
   13208:	add	ip, ip, #172032	; 0x2a000
   1320c:	ldr	pc, [ip, #3508]!	; 0xdb4

00013210 <fputs@plt>:
   13210:	add	ip, pc, #0, 12
   13214:	add	ip, ip, #172032	; 0x2a000
   13218:	ldr	pc, [ip, #3500]!	; 0xdac

0001321c <strncmp@plt>:
   1321c:	add	ip, pc, #0, 12
   13220:	add	ip, ip, #172032	; 0x2a000
   13224:	ldr	pc, [ip, #3492]!	; 0xda4

00013228 <abort@plt>:
   13228:	add	ip, pc, #0, 12
   1322c:	add	ip, ip, #172032	; 0x2a000
   13230:	ldr	pc, [ip, #3484]!	; 0xd9c

00013234 <getc@plt>:
   13234:	add	ip, pc, #0, 12
   13238:	add	ip, ip, #172032	; 0x2a000
   1323c:	ldr	pc, [ip, #3476]!	; 0xd94

00013240 <gpgrt_fileno@plt>:
   13240:	add	ip, pc, #0, 12
   13244:	add	ip, ip, #172032	; 0x2a000
   13248:	ldr	pc, [ip, #3468]!	; 0xd8c

0001324c <close@plt>:
   1324c:	add	ip, pc, #0, 12
   13250:	add	ip, ip, #172032	; 0x2a000
   13254:	ldr	pc, [ip, #3460]!	; 0xd84

00013258 <gcry_strdup@plt>:
   13258:	add	ip, pc, #0, 12
   1325c:	add	ip, ip, #172032	; 0x2a000
   13260:	ldr	pc, [ip, #3452]!	; 0xd7c

00013264 <connect@plt>:
   13264:	add	ip, pc, #0, 12
   13268:	add	ip, ip, #172032	; 0x2a000
   1326c:	ldr	pc, [ip, #3444]!	; 0xd74

00013270 <closedir@plt>:
   13270:	add	ip, pc, #0, 12
   13274:	add	ip, ip, #172032	; 0x2a000
   13278:	ldr	pc, [ip, #3436]!	; 0xd6c

0001327c <assuan_socket_connect@plt>:
   1327c:	add	ip, pc, #0, 12
   13280:	add	ip, ip, #172032	; 0x2a000
   13284:	ldr	pc, [ip, #3428]!	; 0xd64

00013288 <ctermid@plt>:
   13288:	add	ip, pc, #0, 12
   1328c:	add	ip, ip, #172032	; 0x2a000
   13290:	ldr	pc, [ip, #3420]!	; 0xd5c

00013294 <__assert_fail@plt>:
   13294:	add	ip, pc, #0, 12
   13298:	add	ip, ip, #172032	; 0x2a000
   1329c:	ldr	pc, [ip, #3412]!	; 0xd54

000132a0 <tcgetattr@plt>:
   132a0:	add	ip, pc, #0, 12
   132a4:	add	ip, ip, #172032	; 0x2a000
   132a8:	ldr	pc, [ip, #3404]!	; 0xd4c

000132ac <pclose@plt>:
   132ac:	add	ip, pc, #0, 12
   132b0:	add	ip, ip, #172032	; 0x2a000
   132b4:	ldr	pc, [ip, #3396]!	; 0xd44

Disassembly of section .text:

000132b8 <.text>:
   132b8:	ldr	r3, [pc, #4072]	; 142a8 <pclose@plt+0xffc>
   132bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132c0:	sub	sp, sp, #708	; 0x2c4
   132c4:	ldr	r3, [r3]
   132c8:	str	r1, [sp, #40]	; 0x28
   132cc:	str	r3, [sp, #700]	; 0x2bc
   132d0:	str	r0, [sp, #44]	; 0x2c
   132d4:	bl	1ce50 <pclose@plt+0x9ba4>
   132d8:	bl	17434 <pclose@plt+0x4188>
   132dc:	ldr	r0, [pc, #4040]	; 142ac <pclose@plt+0x1000>
   132e0:	bl	1b6c4 <pclose@plt+0x8418>
   132e4:	add	r5, sp, #40	; 0x28
   132e8:	add	r6, sp, #44	; 0x2c
   132ec:	mov	r1, #1
   132f0:	ldr	r0, [pc, #4024]	; 142b0 <pclose@plt+0x1004>
   132f4:	bl	1c708 <pclose@plt+0x945c>
   132f8:	bl	17494 <pclose@plt+0x41e8>
   132fc:	mov	r2, r5
   13300:	mov	r1, r6
   13304:	mov	r0, #0
   13308:	bl	1ce54 <pclose@plt+0x9ba8>
   1330c:	mov	r0, #0
   13310:	bl	130fc <assuan_set_gpg_err_source@plt>
   13314:	ldr	r4, [pc, #3992]	; 142b4 <pclose@plt+0x1008>
   13318:	str	r6, [sp, #84]	; 0x54
   1331c:	ldr	r9, [pc, #3988]	; 142b8 <pclose@plt+0x100c>
   13320:	ldr	r6, [pc, #3988]	; 142bc <pclose@plt+0x1010>
   13324:	ldr	r8, [pc, #3988]	; 142c0 <pclose@plt+0x1014>
   13328:	ldr	r7, [pc, #3988]	; 142c4 <pclose@plt+0x1018>
   1332c:	str	r5, [sp, #88]	; 0x58
   13330:	mov	r5, #0
   13334:	mov	r3, #1
   13338:	str	r3, [r4, #8]
   1333c:	str	r3, [r4, #52]	; 0x34
   13340:	str	r3, [sp, #92]	; 0x5c
   13344:	mov	r2, #0
   13348:	str	r6, [sp]
   1334c:	mov	r1, r2
   13350:	mov	r0, r2
   13354:	add	r3, sp, #84	; 0x54
   13358:	bl	1ab68 <pclose@plt+0x78bc>
   1335c:	cmp	r0, #0
   13360:	beq	13438 <pclose@plt+0x18c>
   13364:	ldr	r3, [sp, #100]	; 0x64
   13368:	cmp	r3, r9
   1336c:	beq	13b78 <pclose@plt+0x8cc>
   13370:	bgt	133ac <pclose@plt+0x100>
   13374:	cmp	r3, #113	; 0x71
   13378:	beq	13b6c <pclose@plt+0x8c0>
   1337c:	ble	133ec <pclose@plt+0x140>
   13380:	cmp	r3, #115	; 0x73
   13384:	beq	13b28 <pclose@plt+0x87c>
   13388:	ldrlt	r5, [sp, #108]	; 0x6c
   1338c:	blt	13344 <pclose@plt+0x98>
   13390:	cmp	r3, #118	; 0x76
   13394:	beq	13b90 <pclose@plt+0x8e4>
   13398:	cmp	r3, #500	; 0x1f4
   1339c:	moveq	r3, #0
   133a0:	streq	r3, [r4]
   133a4:	beq	13344 <pclose@plt+0x98>
   133a8:	b	1340c <pclose@plt+0x160>
   133ac:	cmp	r3, r8
   133b0:	beq	13b60 <pclose@plt+0x8b4>
   133b4:	ble	13418 <pclose@plt+0x16c>
   133b8:	cmp	r3, r7
   133bc:	beq	13b54 <pclose@plt+0x8a8>
   133c0:	blt	13b44 <pclose@plt+0x898>
   133c4:	cmp	r3, #508	; 0x1fc
   133c8:	moveq	r3, #1
   133cc:	streq	r3, [r4, #36]	; 0x24
   133d0:	beq	13344 <pclose@plt+0x98>
   133d4:	ldr	r2, [pc, #3820]	; 142c8 <pclose@plt+0x101c>
   133d8:	cmp	r3, r2
   133dc:	moveq	r3, #0
   133e0:	streq	r3, [r4, #8]
   133e4:	beq	13344 <pclose@plt+0x98>
   133e8:	b	1340c <pclose@plt+0x160>
   133ec:	cmp	r3, #83	; 0x53
   133f0:	beq	13b38 <pclose@plt+0x88c>
   133f4:	cmp	r3, #84	; 0x54
   133f8:	ldreq	r3, [sp, #108]	; 0x6c
   133fc:	streq	r3, [r4, #44]	; 0x2c
   13400:	beq	13344 <pclose@plt+0x98>
   13404:	cmp	r3, #69	; 0x45
   13408:	beq	13b84 <pclose@plt+0x8d8>
   1340c:	mov	r3, #2
   13410:	str	r3, [sp, #96]	; 0x60
   13414:	b	13344 <pclose@plt+0x98>
   13418:	ldr	r2, [pc, #3756]	; 142cc <pclose@plt+0x1020>
   1341c:	cmp	r3, r2
   13420:	beq	13b1c <pclose@plt+0x870>
   13424:	ldrle	r3, [sp, #108]	; 0x6c
   13428:	strle	r3, [r4, #16]
   1342c:	movgt	r3, #1
   13430:	strgt	r3, [r4, #24]
   13434:	b	13344 <pclose@plt+0x98>
   13438:	bl	1c69c <pclose@plt+0x93f0>
   1343c:	subs	r6, r0, #0
   13440:	bne	14878 <pclose@plt+0x15cc>
   13444:	ldr	r3, [r4, #36]	; 0x24
   13448:	cmp	r3, #0
   1344c:	bne	13c14 <pclose@plt+0x968>
   13450:	ldr	r6, [sp, #92]	; 0x5c
   13454:	ldr	r3, [r4, #4]
   13458:	and	r6, r6, #256	; 0x100
   1345c:	orrs	r6, r6, r3
   13460:	bne	134cc <pclose@plt+0x220>
   13464:	ldr	r1, [sp, #44]	; 0x2c
   13468:	cmp	r1, #0
   1346c:	ble	134cc <pclose@plt+0x220>
   13470:	ldr	r7, [pc, #3672]	; 142d0 <pclose@plt+0x1024>
   13474:	b	13484 <pclose@plt+0x1d8>
   13478:	add	r6, r6, #1
   1347c:	cmp	r1, r6
   13480:	ble	134cc <pclose@plt+0x220>
   13484:	ldr	r3, [sp, #40]	; 0x28
   13488:	lsl	r8, r6, #2
   1348c:	ldr	r3, [r3, r6, lsl #2]
   13490:	ldrb	r2, [r3]
   13494:	cmp	r2, #45	; 0x2d
   13498:	bne	13478 <pclose@plt+0x1cc>
   1349c:	ldrb	r3, [r3, #1]
   134a0:	cmp	r3, #45	; 0x2d
   134a4:	bne	13478 <pclose@plt+0x1cc>
   134a8:	mov	r2, #5
   134ac:	mov	r1, r7
   134b0:	mov	r0, #0
   134b4:	bl	12b98 <dcgettext@plt>
   134b8:	ldr	r3, [sp, #40]	; 0x28
   134bc:	ldr	r1, [r3, r8]
   134c0:	bl	1c94c <pclose@plt+0x96a0>
   134c4:	ldr	r1, [sp, #44]	; 0x2c
   134c8:	b	13478 <pclose@plt+0x1cc>
   134cc:	ldr	r3, [pc, #3584]	; 142d4 <pclose@plt+0x1028>
   134d0:	ldr	r0, [r3]
   134d4:	bl	12fd0 <fileno@plt>
   134d8:	bl	131f8 <isatty@plt>
   134dc:	subs	r3, r0, #0
   134e0:	str	r3, [sp, #32]
   134e4:	bne	13bf4 <pclose@plt+0x948>
   134e8:	ldr	r3, [r4, #48]	; 0x30
   134ec:	ldr	r7, [sp, #44]	; 0x2c
   134f0:	cmp	r3, #0
   134f4:	beq	13570 <pclose@plt+0x2c4>
   134f8:	cmp	r7, #0
   134fc:	beq	14880 <pclose@plt+0x15d4>
   13500:	ldr	r3, [r4, #40]	; 0x28
   13504:	cmp	r3, #0
   13508:	beq	1353c <pclose@plt+0x290>
   1350c:	mov	r3, #0
   13510:	mov	r0, r3
   13514:	mov	r2, #5
   13518:	ldr	r1, [pc, #3512]	; 142d8 <pclose@plt+0x102c>
   1351c:	str	r3, [r4, #40]	; 0x28
   13520:	bl	12b98 <dcgettext@plt>
   13524:	ldr	r2, [pc, #3772]	; 143e8 <pclose@plt+0x113c>
   13528:	ldr	r1, [pc, #3500]	; 142dc <pclose@plt+0x1030>
   1352c:	bl	1c94c <pclose@plt+0x96a0>
   13530:	ldr	r7, [r4, #48]	; 0x30
   13534:	cmp	r7, #0
   13538:	beq	13578 <pclose@plt+0x2cc>
   1353c:	ldr	r7, [r4, #44]	; 0x2c
   13540:	cmp	r7, #0
   13544:	beq	135b4 <pclose@plt+0x308>
   13548:	mov	r7, #0
   1354c:	mov	r0, r7
   13550:	mov	r2, #5
   13554:	ldr	r1, [pc, #3452]	; 142d8 <pclose@plt+0x102c>
   13558:	str	r7, [r4, #44]	; 0x2c
   1355c:	bl	12b98 <dcgettext@plt>
   13560:	ldr	r2, [pc, #3712]	; 143e8 <pclose@plt+0x113c>
   13564:	ldr	r1, [pc, #3444]	; 142e0 <pclose@plt+0x1034>
   13568:	bl	1c94c <pclose@plt+0x96a0>
   1356c:	b	13578 <pclose@plt+0x2cc>
   13570:	cmp	r7, #0
   13574:	ldrne	r7, [sp, #40]	; 0x28
   13578:	ldr	r3, [r4, #44]	; 0x2c
   1357c:	cmp	r3, #0
   13580:	beq	135b4 <pclose@plt+0x308>
   13584:	ldr	r3, [r4, #40]	; 0x28
   13588:	cmp	r3, #0
   1358c:	beq	135b4 <pclose@plt+0x308>
   13590:	mov	r3, #0
   13594:	mov	r2, #5
   13598:	ldr	r1, [pc, #3384]	; 142d8 <pclose@plt+0x102c>
   1359c:	mov	r0, r3
   135a0:	str	r3, [r4, #44]	; 0x2c
   135a4:	bl	12b98 <dcgettext@plt>
   135a8:	ldr	r2, [pc, #3372]	; 142dc <pclose@plt+0x1030>
   135ac:	ldr	r1, [pc, #3372]	; 142e0 <pclose@plt+0x1034>
   135b0:	bl	1c94c <pclose@plt+0x96a0>
   135b4:	cmp	r5, #0
   135b8:	beq	135d4 <pclose@plt+0x328>
   135bc:	mov	r0, r5
   135c0:	ldr	r1, [pc, #3696]	; 14438 <pclose@plt+0x118c>
   135c4:	bl	12fac <gpgrt_fopen@plt>
   135c8:	cmp	r0, #0
   135cc:	movne	r5, r0
   135d0:	beq	148a0 <pclose@plt+0x15f4>
   135d4:	ldr	r3, [r4, #48]	; 0x30
   135d8:	cmp	r3, #0
   135dc:	bne	13c2c <pclose@plt+0x980>
   135e0:	ldr	r2, [r4, #40]	; 0x28
   135e4:	cmp	r2, #0
   135e8:	beq	13790 <pclose@plt+0x4e4>
   135ec:	add	r0, sp, #48	; 0x30
   135f0:	bl	12e68 <assuan_new@plt>
   135f4:	subs	r2, r0, #0
   135f8:	bne	148c4 <pclose@plt+0x1618>
   135fc:	ldr	r3, [r4, #52]	; 0x34
   13600:	ldr	r1, [r4, #40]	; 0x28
   13604:	and	r3, r3, #1
   13608:	ldr	r0, [sp, #48]	; 0x30
   1360c:	bl	1327c <assuan_socket_connect@plt>
   13610:	cmp	r0, #0
   13614:	bne	14984 <pclose@plt+0x16d8>
   13618:	ldr	r3, [r4]
   1361c:	cmp	r3, #0
   13620:	bne	14194 <pclose@plt+0xee8>
   13624:	add	r3, sp, #140	; 0x8c
   13628:	str	r3, [sp, #36]	; 0x24
   1362c:	ldr	r0, [sp, #48]	; 0x30
   13630:	bl	12a84 <assuan_pending_line@plt>
   13634:	cmp	r0, #0
   13638:	bne	13d04 <pclose@plt+0xa58>
   1363c:	ldr	r3, [sp, #36]	; 0x24
   13640:	add	r1, sp, #700	; 0x2bc
   13644:	mov	r2, #0
   13648:	str	r2, [r3], #28
   1364c:	cmp	r1, r3
   13650:	bne	13648 <pclose@plt+0x39c>
   13654:	mvn	r6, #0
   13658:	mov	r8, #1
   1365c:	mov	r3, #2048	; 0x800
   13660:	str	r2, [sp, #52]	; 0x34
   13664:	str	r2, [sp, #56]	; 0x38
   13668:	str	r3, [sp, #64]	; 0x40
   1366c:	cmp	r7, #0
   13670:	beq	137f4 <pclose@plt+0x548>
   13674:	ldr	r3, [r7]
   13678:	cmp	r3, #0
   1367c:	beq	137f4 <pclose@plt+0x548>
   13680:	cmp	r5, #0
   13684:	beq	13884 <pclose@plt+0x5d8>
   13688:	cmp	r8, #0
   1368c:	beq	13b04 <pclose@plt+0x858>
   13690:	add	r3, sp, #64	; 0x40
   13694:	add	r2, sp, #56	; 0x38
   13698:	add	r1, sp, #52	; 0x34
   1369c:	mov	r0, r5
   136a0:	bl	129e8 <gpgrt_read_line@plt>
   136a4:	subs	r9, r0, #0
   136a8:	bge	13be8 <pclose@plt+0x93c>
   136ac:	mov	r2, #5
   136b0:	ldr	r1, [pc, #3396]	; 143fc <pclose@plt+0x1150>
   136b4:	mov	r0, #0
   136b8:	bl	12b98 <dcgettext@plt>
   136bc:	mov	r8, #1
   136c0:	mov	r9, r0
   136c4:	bl	12f10 <__errno_location@plt>
   136c8:	ldr	r0, [r0]
   136cc:	bl	12db4 <strerror@plt>
   136d0:	mov	r1, r0
   136d4:	mov	r0, r9
   136d8:	bl	1c9b0 <pclose@plt+0x9704>
   136dc:	mov	r0, r5
   136e0:	bl	12d0c <gpgrt_fclose@plt>
   136e4:	ldr	r0, [pc, #3064]	; 142e4 <pclose@plt+0x1038>
   136e8:	bl	1c9b0 <pclose@plt+0x9704>
   136ec:	mov	r5, #0
   136f0:	mov	r3, #2048	; 0x800
   136f4:	cmp	r6, #20
   136f8:	str	r3, [sp, #64]	; 0x40
   136fc:	beq	14770 <pclose@plt+0x14c4>
   13700:	cmn	r6, #1
   13704:	beq	1366c <pclose@plt+0x3c0>
   13708:	rsb	r9, r6, r6, lsl #3
   1370c:	add	r3, sp, #704	; 0x2c0
   13710:	add	r9, r3, r9, lsl #2
   13714:	ldr	r3, [r9, #-552]	; 0xfffffdd8
   13718:	cmp	r3, #0
   1371c:	beq	1366c <pclose@plt+0x3c0>
   13720:	ldr	r0, [sp, #52]	; 0x34
   13724:	bl	12b50 <gcry_free@plt>
   13728:	ldr	r0, [r9, #-552]	; 0xfffffdd8
   1372c:	add	r0, r0, #4
   13730:	bl	12ff4 <gcry_xstrdup@plt>
   13734:	mov	fp, r0
   13738:	str	r0, [sp, #52]	; 0x34
   1373c:	bl	12e8c <strlen@plt>
   13740:	ldr	r3, [r9, #-552]	; 0xfffffdd8
   13744:	ldr	r3, [r3]
   13748:	cmp	r3, #0
   1374c:	strne	r3, [r9, #-552]	; 0xfffffdd8
   13750:	mov	r8, r0
   13754:	mov	sl, r0
   13758:	beq	13bb4 <pclose@plt+0x908>
   1375c:	cmp	sl, #0
   13760:	bne	138d8 <pclose@plt+0x62c>
   13764:	cmp	r5, #0
   13768:	beq	13850 <pclose@plt+0x5a4>
   1376c:	mov	r0, r5
   13770:	bl	12d0c <gpgrt_fclose@plt>
   13774:	ldr	r3, [r4]
   13778:	mov	r5, #0
   1377c:	cmp	r3, r5
   13780:	beq	136f0 <pclose@plt+0x444>
   13784:	ldr	r0, [pc, #2908]	; 142e8 <pclose@plt+0x103c>
   13788:	bl	1c94c <pclose@plt+0x96a0>
   1378c:	b	136f0 <pclose@plt+0x444>
   13790:	ldr	r6, [r4, #44]	; 0x2c
   13794:	cmp	r6, #0
   13798:	beq	141a4 <pclose@plt+0xef8>
   1379c:	mov	r1, r6
   137a0:	ldr	r0, [pc, #2884]	; 142ec <pclose@plt+0x1040>
   137a4:	bl	18c34 <pclose@plt+0x5988>
   137a8:	mov	r6, r0
   137ac:	add	r0, sp, #48	; 0x30
   137b0:	bl	12e68 <assuan_new@plt>
   137b4:	subs	r3, r0, #0
   137b8:	bne	148c4 <pclose@plt+0x1618>
   137bc:	mov	r2, r3
   137c0:	ldr	r1, [r4, #44]	; 0x2c
   137c4:	ldr	r0, [sp, #48]	; 0x30
   137c8:	bl	1327c <assuan_socket_connect@plt>
   137cc:	cmp	r0, #0
   137d0:	bne	14964 <pclose@plt+0x16b8>
   137d4:	ldr	r3, [r4]
   137d8:	cmp	r3, #0
   137dc:	bne	13e60 <pclose@plt+0xbb4>
   137e0:	mov	r0, r6
   137e4:	bl	12b50 <gcry_free@plt>
   137e8:	add	r3, sp, #140	; 0x8c
   137ec:	str	r3, [sp, #36]	; 0x24
   137f0:	b	1362c <pclose@plt+0x380>
   137f4:	ldr	r3, [sp, #32]
   137f8:	cmp	r5, #0
   137fc:	andeq	r3, r3, #1
   13800:	movne	r3, #0
   13804:	cmp	r3, #0
   13808:	beq	13ac4 <pclose@plt+0x818>
   1380c:	ldr	r0, [sp, #52]	; 0x34
   13810:	bl	12b50 <gcry_free@plt>
   13814:	ldr	r0, [pc, #2772]	; 142f0 <pclose@plt+0x1044>
   13818:	bl	1f6b0 <pclose@plt+0xc404>
   1381c:	mov	r5, r0
   13820:	str	r0, [sp, #52]	; 0x34
   13824:	bl	12e8c <strlen@plt>
   13828:	cmp	r0, #1
   1382c:	mov	r9, r0
   13830:	beq	13d54 <pclose@plt+0xaa8>
   13834:	ldr	r2, [sp, #64]	; 0x40
   13838:	cmp	r0, r2
   1383c:	bcc	13ba0 <pclose@plt+0x8f4>
   13840:	mov	r3, #0
   13844:	cmp	r0, #0
   13848:	str	r3, [sp, #64]	; 0x40
   1384c:	bne	138b8 <pclose@plt+0x60c>
   13850:	ldr	r3, [r4]
   13854:	cmp	r3, #0
   13858:	bne	13d48 <pclose@plt+0xa9c>
   1385c:	ldr	r0, [sp, #52]	; 0x34
   13860:	bl	12b50 <gcry_free@plt>
   13864:	ldr	r3, [pc, #2620]	; 142a8 <pclose@plt+0xffc>
   13868:	ldr	r2, [sp, #700]	; 0x2bc
   1386c:	mov	r0, #0
   13870:	ldr	r3, [r3]
   13874:	cmp	r2, r3
   13878:	bne	1493c <pclose@plt+0x1690>
   1387c:	add	sp, sp, #708	; 0x2c4
   13880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13884:	ldr	r0, [sp, #52]	; 0x34
   13888:	bl	12b50 <gcry_free@plt>
   1388c:	ldr	r0, [r7], #4
   13890:	bl	12ff4 <gcry_xstrdup@plt>
   13894:	str	r0, [sp, #52]	; 0x34
   13898:	bl	12e8c <strlen@plt>
   1389c:	ldr	r3, [sp, #64]	; 0x40
   138a0:	cmp	r0, r3
   138a4:	mov	r9, r0
   138a8:	bcc	13ba0 <pclose@plt+0x8f4>
   138ac:	cmp	r0, #0
   138b0:	str	r5, [sp, #64]	; 0x40
   138b4:	beq	13850 <pclose@plt+0x5a4>
   138b8:	mov	r8, #0
   138bc:	mov	r5, r8
   138c0:	mov	r2, #5
   138c4:	ldr	r1, [pc, #2600]	; 142f4 <pclose@plt+0x1048>
   138c8:	mov	r0, #0
   138cc:	bl	12b98 <dcgettext@plt>
   138d0:	bl	1c9b0 <pclose@plt+0x9704>
   138d4:	b	136f0 <pclose@plt+0x444>
   138d8:	ldr	r3, [sp, #64]	; 0x40
   138dc:	mov	r9, sl
   138e0:	mov	r8, #0
   138e4:	cmp	r3, #0
   138e8:	beq	138c0 <pclose@plt+0x614>
   138ec:	ldr	sl, [sp, #52]	; 0x34
   138f0:	mov	r2, r9
   138f4:	mov	r0, sl
   138f8:	mov	r1, #0
   138fc:	bl	13000 <memchr@plt>
   13900:	cmp	r0, #0
   13904:	beq	13920 <pclose@plt+0x674>
   13908:	mov	r2, #5
   1390c:	ldr	r1, [pc, #2532]	; 142f8 <pclose@plt+0x104c>
   13910:	mov	r0, #0
   13914:	bl	12b98 <dcgettext@plt>
   13918:	bl	1c94c <pclose@plt+0x96a0>
   1391c:	ldr	sl, [sp, #52]	; 0x34
   13920:	sub	r9, r9, #1
   13924:	mov	r1, sl
   13928:	ldrb	r3, [sl, r9]
   1392c:	cmp	r3, #10
   13930:	moveq	r3, #0
   13934:	strbeq	r3, [sl, r9]
   13938:	ldreq	sl, [sp, #52]	; 0x34
   1393c:	ldr	r3, [r4, #60]	; 0x3c
   13940:	moveq	r1, sl
   13944:	cmp	r3, #0
   13948:	bne	13cb4 <pclose@plt+0xa08>
   1394c:	add	r9, r6, #1
   13950:	add	r2, sp, #704	; 0x2c0
   13954:	rsb	r3, r9, r9, lsl #3
   13958:	add	r3, r2, r3, lsl #2
   1395c:	ldr	r3, [r3, #-564]	; 0xfffffdcc
   13960:	cmp	r3, #0
   13964:	bne	13d90 <pclose@plt+0xae4>
   13968:	ldrb	r3, [sl]
   1396c:	cmp	r3, #47	; 0x2f
   13970:	beq	13e8c <pclose@plt+0xbe0>
   13974:	ldr	r3, [r4]
   13978:	cmp	r3, #0
   1397c:	cmpne	r5, #0
   13980:	bne	13d80 <pclose@plt+0xad4>
   13984:	ldr	r3, [r4, #56]	; 0x38
   13988:	cmp	r3, #0
   1398c:	beq	13ab0 <pclose@plt+0x804>
   13990:	mov	r0, sl
   13994:	bl	15710 <pclose@plt+0x2464>
   13998:	subs	r9, r0, #0
   1399c:	ldreq	sl, [sp, #52]	; 0x34
   139a0:	beq	13ab0 <pclose@plt+0x804>
   139a4:	mov	r1, r9
   139a8:	ldr	r0, [sp, #48]	; 0x30
   139ac:	bl	12be0 <assuan_write_line@plt>
   139b0:	mov	fp, r0
   139b4:	mov	r0, r9
   139b8:	bl	12b50 <gcry_free@plt>
   139bc:	cmp	fp, #0
   139c0:	bne	1455c <pclose@plt+0x12b0>
   139c4:	ldr	r9, [sp, #52]	; 0x34
   139c8:	ldrb	r3, [r9]
   139cc:	cmp	r3, #0
   139d0:	cmpne	r3, #35	; 0x23
   139d4:	beq	136f0 <pclose@plt+0x444>
   139d8:	mov	r2, #3
   139dc:	ldr	r1, [pc, #2328]	; 142fc <pclose@plt+0x1050>
   139e0:	mov	r0, r9
   139e4:	ldr	sl, [sp, #48]	; 0x30
   139e8:	bl	189a0 <pclose@plt+0x56f4>
   139ec:	cmp	r0, #0
   139f0:	bne	13a3c <pclose@plt+0x790>
   139f4:	ldrb	r2, [r9, #3]
   139f8:	tst	r2, #223	; 0xdf
   139fc:	sub	r3, r2, #9
   13a00:	clz	r3, r3
   13a04:	lsr	r3, r3, #5
   13a08:	movne	r1, r3
   13a0c:	moveq	r1, #1
   13a10:	cmp	r1, #0
   13a14:	beq	13a3c <pclose@plt+0x790>
   13a18:	cmp	r2, #32
   13a1c:	orreq	r3, r3, #1
   13a20:	cmp	r3, #0
   13a24:	add	r9, r9, #3
   13a28:	beq	13a3c <pclose@plt+0x790>
   13a2c:	ldrb	r3, [r9, #1]!
   13a30:	cmp	r3, #9
   13a34:	cmpne	r3, #32
   13a38:	beq	13a2c <pclose@plt+0x780>
   13a3c:	mov	r2, #4
   13a40:	ldr	r1, [pc, #2232]	; 14300 <pclose@plt+0x1054>
   13a44:	mov	r0, r9
   13a48:	bl	189a0 <pclose@plt+0x56f4>
   13a4c:	cmp	r0, #0
   13a50:	bne	13a6c <pclose@plt+0x7c0>
   13a54:	ldrb	fp, [r9, #4]
   13a58:	and	r3, fp, #223	; 0xdf
   13a5c:	cmp	r3, #0
   13a60:	cmpne	fp, #9
   13a64:	moveq	fp, #1
   13a68:	movne	fp, #0
   13a6c:	mov	r1, fp
   13a70:	mov	r0, sl
   13a74:	add	r2, sp, #60	; 0x3c
   13a78:	bl	16b54 <pclose@plt+0x38a8>
   13a7c:	subs	r9, r0, #0
   13a80:	bne	14168 <pclose@plt+0xebc>
   13a84:	ldr	r3, [sp, #60]	; 0x3c
   13a88:	cmp	r3, #0
   13a8c:	beq	136f0 <pclose@plt+0x444>
   13a90:	cmp	r5, #0
   13a94:	beq	136f0 <pclose@plt+0x444>
   13a98:	ldr	r0, [pc, #2116]	; 142e4 <pclose@plt+0x1038>
   13a9c:	bl	1c9b0 <pclose@plt+0x9704>
   13aa0:	mov	r0, r5
   13aa4:	bl	12d0c <gpgrt_fclose@plt>
   13aa8:	mov	r5, #0
   13aac:	b	136f0 <pclose@plt+0x444>
   13ab0:	mov	r1, sl
   13ab4:	ldr	r0, [sp, #48]	; 0x30
   13ab8:	bl	12be0 <assuan_write_line@plt>
   13abc:	mov	fp, r0
   13ac0:	b	139bc <pclose@plt+0x710>
   13ac4:	cmp	r8, #0
   13ac8:	beq	13b04 <pclose@plt+0x858>
   13acc:	cmp	r5, #0
   13ad0:	bne	13690 <pclose@plt+0x3e4>
   13ad4:	mov	r0, r5
   13ad8:	bl	12e20 <_gpgrt_get_std_stream@plt>
   13adc:	add	r3, sp, #64	; 0x40
   13ae0:	add	r2, sp, #56	; 0x38
   13ae4:	add	r1, sp, #52	; 0x34
   13ae8:	bl	129e8 <gpgrt_read_line@plt>
   13aec:	subs	r9, r0, #0
   13af0:	blt	14940 <pclose@plt+0x1694>
   13af4:	beq	13850 <pclose@plt+0x5a4>
   13af8:	mov	r8, #1
   13afc:	ldr	r3, [sp, #64]	; 0x40
   13b00:	b	138e4 <pclose@plt+0x638>
   13b04:	ldr	r0, [sp, #52]	; 0x34
   13b08:	bl	12b50 <gcry_free@plt>
   13b0c:	mov	r3, #0
   13b10:	str	r3, [sp, #52]	; 0x34
   13b14:	str	r3, [sp, #56]	; 0x38
   13b18:	b	13acc <pclose@plt+0x820>
   13b1c:	ldr	r3, [sp, #108]	; 0x6c
   13b20:	str	r3, [r4, #20]
   13b24:	b	13344 <pclose@plt+0x98>
   13b28:	mov	r3, #1
   13b2c:	str	r3, [r4, #56]	; 0x38
   13b30:	str	r3, [r4, #60]	; 0x3c
   13b34:	b	13344 <pclose@plt+0x98>
   13b38:	ldr	r3, [sp, #108]	; 0x6c
   13b3c:	str	r3, [r4, #40]	; 0x28
   13b40:	b	13344 <pclose@plt+0x98>
   13b44:	ldr	r3, [r4, #52]	; 0x34
   13b48:	bic	r3, r3, #1
   13b4c:	str	r3, [r4, #52]	; 0x34
   13b50:	b	13344 <pclose@plt+0x98>
   13b54:	mov	r3, #1
   13b58:	str	r3, [r4, #32]
   13b5c:	b	13344 <pclose@plt+0x98>
   13b60:	mov	r3, #1
   13b64:	str	r3, [r4, #28]
   13b68:	b	13344 <pclose@plt+0x98>
   13b6c:	mov	r3, #1
   13b70:	str	r3, [r4, #4]
   13b74:	b	13344 <pclose@plt+0x98>
   13b78:	ldr	r0, [sp, #108]	; 0x6c
   13b7c:	bl	1de74 <pclose@plt+0xabc8>
   13b80:	b	13344 <pclose@plt+0x98>
   13b84:	mov	r3, #1
   13b88:	str	r3, [r4, #48]	; 0x30
   13b8c:	b	13344 <pclose@plt+0x98>
   13b90:	ldr	r3, [r4]
   13b94:	add	r3, r3, #1
   13b98:	str	r3, [r4]
   13b9c:	b	13344 <pclose@plt+0x98>
   13ba0:	cmp	r9, #0
   13ba4:	beq	13850 <pclose@plt+0x5a4>
   13ba8:	mov	r8, #0
   13bac:	mov	r5, r8
   13bb0:	b	138ec <pclose@plt+0x640>
   13bb4:	mov	r2, #4
   13bb8:	ldr	r1, [pc, #1860]	; 14304 <pclose@plt+0x1058>
   13bbc:	mov	r0, fp
   13bc0:	bl	1321c <strncmp@plt>
   13bc4:	cmp	r0, #0
   13bc8:	bne	13be0 <pclose@plt+0x934>
   13bcc:	ldrb	r3, [fp, #4]
   13bd0:	tst	r3, #223	; 0xdf
   13bd4:	beq	1375c <pclose@plt+0x4b0>
   13bd8:	cmp	r3, #9
   13bdc:	beq	1375c <pclose@plt+0x4b0>
   13be0:	ldr	r0, [pc, #1824]	; 14308 <pclose@plt+0x105c>
   13be4:	bl	1ca34 <pclose@plt+0x9788>
   13be8:	moveq	r8, #1
   13bec:	beq	1376c <pclose@plt+0x4c0>
   13bf0:	b	13af8 <pclose@plt+0x84c>
   13bf4:	ldr	r3, [pc, #1976]	; 143b4 <pclose@plt+0x1108>
   13bf8:	ldr	r0, [r3]
   13bfc:	bl	12fd0 <fileno@plt>
   13c00:	bl	131f8 <isatty@plt>
   13c04:	adds	r3, r0, #0
   13c08:	movne	r3, #1
   13c0c:	str	r3, [sp, #32]
   13c10:	b	134e8 <pclose@plt+0x23c>
   13c14:	bl	1deec <pclose@plt+0xac40>
   13c18:	mov	r2, r6
   13c1c:	ldr	r1, [pc, #1768]	; 1430c <pclose@plt+0x1060>
   13c20:	bl	1867c <pclose@plt+0x53d0>
   13c24:	str	r0, [r4, #40]	; 0x28
   13c28:	b	13450 <pclose@plt+0x1a4>
   13c2c:	mov	r0, #2
   13c30:	bl	12e20 <_gpgrt_get_std_stream@plt>
   13c34:	bl	13240 <gpgrt_fileno@plt>
   13c38:	str	r0, [sp, #140]	; 0x8c
   13c3c:	bl	1c828 <pclose@plt+0x957c>
   13c40:	mvn	r3, #0
   13c44:	str	r3, [sp, #148]	; 0x94
   13c48:	str	r0, [sp, #144]	; 0x90
   13c4c:	add	r0, sp, #48	; 0x30
   13c50:	bl	12e68 <assuan_new@plt>
   13c54:	subs	r1, r0, #0
   13c58:	bne	148c4 <pclose@plt+0x1618>
   13c5c:	ldr	r3, [r4, #52]	; 0x34
   13c60:	ldr	r2, [sp, #40]	; 0x28
   13c64:	add	r0, sp, #140	; 0x8c
   13c68:	and	r3, r3, #1
   13c6c:	str	r3, [sp, #8]
   13c70:	str	r0, [sp, #36]	; 0x24
   13c74:	str	r1, [sp, #4]
   13c78:	str	r1, [sp]
   13c7c:	mov	r3, r0
   13c80:	ldr	r1, [r2]
   13c84:	ldr	r0, [sp, #48]	; 0x30
   13c88:	bl	12d78 <assuan_pipe_connect@plt>
   13c8c:	cmp	r0, #0
   13c90:	bne	14924 <pclose@plt+0x1678>
   13c94:	ldr	r3, [r4]
   13c98:	cmp	r3, #0
   13c9c:	beq	1362c <pclose@plt+0x380>
   13ca0:	ldr	r3, [sp, #40]	; 0x28
   13ca4:	ldr	r0, [pc, #1636]	; 14310 <pclose@plt+0x1064>
   13ca8:	ldr	r1, [r3]
   13cac:	bl	1c94c <pclose@plt+0x96a0>
   13cb0:	b	1362c <pclose@plt+0x380>
   13cb4:	ldrb	r3, [sl]
   13cb8:	cmp	r3, #32
   13cbc:	cmpne	r3, #9
   13cc0:	bne	1394c <pclose@plt+0x6a0>
   13cc4:	mov	r2, sl
   13cc8:	ldrb	r3, [r2, #1]!
   13ccc:	cmp	r3, #9
   13cd0:	cmpne	r3, #32
   13cd4:	beq	13cc8 <pclose@plt+0xa1c>
   13cd8:	cmp	sl, r2
   13cdc:	bne	13cec <pclose@plt+0xa40>
   13ce0:	b	1394c <pclose@plt+0x6a0>
   13ce4:	strb	r3, [r1], #1
   13ce8:	ldrb	r3, [r2, #1]!
   13cec:	cmp	r3, #0
   13cf0:	bne	13ce4 <pclose@plt+0xa38>
   13cf4:	mov	r3, #0
   13cf8:	strb	r3, [r1]
   13cfc:	ldr	sl, [sp, #52]	; 0x34
   13d00:	b	1394c <pclose@plt+0x6a0>
   13d04:	add	r2, sp, #60	; 0x3c
   13d08:	mov	r1, #0
   13d0c:	ldr	r0, [sp, #48]	; 0x30
   13d10:	bl	16b54 <pclose@plt+0x38a8>
   13d14:	subs	r6, r0, #0
   13d18:	beq	1363c <pclose@plt+0x390>
   13d1c:	mov	r2, #5
   13d20:	ldr	r1, [pc, #1516]	; 14314 <pclose@plt+0x1068>
   13d24:	mov	r0, #0
   13d28:	bl	12b98 <dcgettext@plt>
   13d2c:	mov	r8, r0
   13d30:	mov	r0, r6
   13d34:	bl	13120 <gpg_strerror@plt>
   13d38:	mov	r1, r0
   13d3c:	mov	r0, r8
   13d40:	bl	1c94c <pclose@plt+0x96a0>
   13d44:	b	1363c <pclose@plt+0x390>
   13d48:	ldr	r0, [pc, #1480]	; 14318 <pclose@plt+0x106c>
   13d4c:	bl	1c94c <pclose@plt+0x96a0>
   13d50:	b	1385c <pclose@plt+0x5b0>
   13d54:	ldrb	r3, [r5]
   13d58:	cmp	r3, #4
   13d5c:	beq	13850 <pclose@plt+0x5a4>
   13d60:	ldr	r3, [sp, #64]	; 0x40
   13d64:	cmp	r3, #1
   13d68:	movls	r3, #0
   13d6c:	strls	r3, [sp, #64]	; 0x40
   13d70:	bls	138b8 <pclose@plt+0x60c>
   13d74:	mov	r8, #0
   13d78:	mov	r5, r8
   13d7c:	b	138e4 <pclose@plt+0x638>
   13d80:	mov	r0, sl
   13d84:	bl	12d84 <puts@plt>
   13d88:	ldr	sl, [sp, #52]	; 0x34
   13d8c:	b	13984 <pclose@plt+0x6d8>
   13d90:	mov	r0, sl
   13d94:	bl	12e8c <strlen@plt>
   13d98:	add	r0, r0, #8
   13d9c:	bl	129a0 <gcry_xmalloc@plt>
   13da0:	ldr	sl, [sp, #52]	; 0x34
   13da4:	mov	r3, #0
   13da8:	mov	r1, sl
   13dac:	mov	fp, r0
   13db0:	str	r3, [r0], #4
   13db4:	bl	12cdc <strcpy@plt>
   13db8:	mov	r3, #28
   13dbc:	add	r2, sp, #704	; 0x2c0
   13dc0:	mla	r3, r3, r9, r2
   13dc4:	mov	r0, sl
   13dc8:	mov	r2, #4
   13dcc:	ldr	ip, [r3, #-556]	; 0xfffffdd4
   13dd0:	ldr	r1, [pc, #1324]	; 14304 <pclose@plt+0x1058>
   13dd4:	str	fp, [ip]
   13dd8:	str	fp, [r3, #-556]	; 0xfffffdd4
   13ddc:	bl	1321c <strncmp@plt>
   13de0:	cmp	r0, #0
   13de4:	bne	13dfc <pclose@plt+0xb50>
   13de8:	ldrb	r3, [sl, #4]
   13dec:	tst	r3, #223	; 0xdf
   13df0:	beq	13e70 <pclose@plt+0xbc4>
   13df4:	cmp	r3, #9
   13df8:	beq	13e70 <pclose@plt+0xbc4>
   13dfc:	mov	r2, #6
   13e00:	ldr	r1, [pc, #1300]	; 1431c <pclose@plt+0x1070>
   13e04:	mov	r0, sl
   13e08:	bl	1321c <strncmp@plt>
   13e0c:	cmp	r0, #0
   13e10:	bne	13e38 <pclose@plt+0xb8c>
   13e14:	ldrb	r3, [sl, #6]
   13e18:	tst	r3, #223	; 0xdf
   13e1c:	bne	14268 <pclose@plt+0xfbc>
   13e20:	mov	r3, #28
   13e24:	add	r2, sp, #704	; 0x2c0
   13e28:	mla	r3, r3, r9, r2
   13e2c:	ldr	r2, [r3, #-548]	; 0xfffffddc
   13e30:	add	r2, r2, #1
   13e34:	str	r2, [r3, #-548]	; 0xfffffddc
   13e38:	mov	r3, #28
   13e3c:	add	r2, sp, #704	; 0x2c0
   13e40:	mla	r3, r3, r9, r2
   13e44:	ldr	r2, [r3, #-548]	; 0xfffffddc
   13e48:	cmp	r2, #0
   13e4c:	bne	136f0 <pclose@plt+0x444>
   13e50:	ldr	sl, [sp, #52]	; 0x34
   13e54:	mov	r6, r9
   13e58:	str	r2, [r3, #-564]	; 0xfffffdcc
   13e5c:	b	13968 <pclose@plt+0x6bc>
   13e60:	mov	r1, r6
   13e64:	ldr	r0, [pc, #1204]	; 14320 <pclose@plt+0x1074>
   13e68:	bl	1c94c <pclose@plt+0x96a0>
   13e6c:	b	137e0 <pclose@plt+0x534>
   13e70:	mov	r3, #28
   13e74:	add	r2, sp, #704	; 0x2c0
   13e78:	mla	r3, r3, r9, r2
   13e7c:	ldr	r2, [r3, #-548]	; 0xfffffddc
   13e80:	sub	r2, r2, #1
   13e84:	str	r2, [r3, #-548]	; 0xfffffddc
   13e88:	b	13e38 <pclose@plt+0xb8c>
   13e8c:	ldrb	r3, [sl, #1]
   13e90:	add	sl, sl, #1
   13e94:	mov	r2, sl
   13e98:	cmp	r3, #0
   13e9c:	bne	13eb0 <pclose@plt+0xc04>
   13ea0:	b	14554 <pclose@plt+0x12a8>
   13ea4:	ldrb	r3, [r2, #1]!
   13ea8:	cmp	r3, #0
   13eac:	beq	14554 <pclose@plt+0x12a8>
   13eb0:	cmp	r3, #9
   13eb4:	cmpne	r3, #32
   13eb8:	bne	13ea4 <pclose@plt+0xbf8>
   13ebc:	mov	r9, r2
   13ec0:	mov	r3, #0
   13ec4:	strb	r3, [r9], #1
   13ec8:	ldrb	r3, [r2, #1]
   13ecc:	cmp	r3, #32
   13ed0:	cmpne	r3, #9
   13ed4:	bne	13ee8 <pclose@plt+0xc3c>
   13ed8:	ldrb	r3, [r9, #1]!
   13edc:	cmp	r3, #9
   13ee0:	cmpne	r3, #32
   13ee4:	beq	13ed8 <pclose@plt+0xc2c>
   13ee8:	ldr	r1, [pc, #1076]	; 14324 <pclose@plt+0x1078>
   13eec:	mov	r0, sl
   13ef0:	bl	12a24 <strcmp@plt>
   13ef4:	subs	r1, r0, #0
   13ef8:	beq	14498 <pclose@plt+0x11ec>
   13efc:	ldr	r1, [pc, #1060]	; 14328 <pclose@plt+0x107c>
   13f00:	mov	r0, sl
   13f04:	bl	12a24 <strcmp@plt>
   13f08:	cmp	r0, #0
   13f0c:	beq	144d8 <pclose@plt+0x122c>
   13f10:	ldr	r1, [pc, #1044]	; 1432c <pclose@plt+0x1080>
   13f14:	mov	r0, sl
   13f18:	bl	12a24 <strcmp@plt>
   13f1c:	cmp	r0, #0
   13f20:	beq	144e8 <pclose@plt+0x123c>
   13f24:	ldr	r1, [pc, #1028]	; 14330 <pclose@plt+0x1084>
   13f28:	mov	r0, sl
   13f2c:	bl	12a24 <strcmp@plt>
   13f30:	subs	fp, r0, #0
   13f34:	beq	144a4 <pclose@plt+0x11f8>
   13f38:	ldr	r1, [pc, #1012]	; 14334 <pclose@plt+0x1088>
   13f3c:	mov	r0, sl
   13f40:	bl	12a24 <strcmp@plt>
   13f44:	subs	fp, r0, #0
   13f48:	beq	14450 <pclose@plt+0x11a4>
   13f4c:	ldr	r1, [pc, #996]	; 14338 <pclose@plt+0x108c>
   13f50:	mov	r0, sl
   13f54:	bl	12a24 <strcmp@plt>
   13f58:	subs	fp, r0, #0
   13f5c:	beq	1459c <pclose@plt+0x12f0>
   13f60:	ldr	r1, [pc, #980]	; 1433c <pclose@plt+0x1090>
   13f64:	mov	r0, sl
   13f68:	bl	12a24 <strcmp@plt>
   13f6c:	cmp	r0, #0
   13f70:	beq	145e4 <pclose@plt+0x1338>
   13f74:	ldr	r1, [pc, #964]	; 14340 <pclose@plt+0x1094>
   13f78:	mov	r0, sl
   13f7c:	bl	12a24 <strcmp@plt>
   13f80:	cmp	r0, #0
   13f84:	beq	14648 <pclose@plt+0x139c>
   13f88:	ldr	r1, [pc, #948]	; 14344 <pclose@plt+0x1098>
   13f8c:	mov	r0, sl
   13f90:	bl	12a24 <strcmp@plt>
   13f94:	cmp	r0, #0
   13f98:	ldreq	fp, [pc, #1048]	; 143b8 <pclose@plt+0x110c>
   13f9c:	beq	1428c <pclose@plt+0xfe0>
   13fa0:	ldr	r1, [pc, #928]	; 14348 <pclose@plt+0x109c>
   13fa4:	mov	r0, sl
   13fa8:	bl	12a24 <strcmp@plt>
   13fac:	cmp	r0, #0
   13fb0:	beq	1474c <pclose@plt+0x14a0>
   13fb4:	ldr	r1, [pc, #912]	; 1434c <pclose@plt+0x10a0>
   13fb8:	mov	r0, sl
   13fbc:	bl	12a24 <strcmp@plt>
   13fc0:	cmp	r0, #0
   13fc4:	beq	147a4 <pclose@plt+0x14f8>
   13fc8:	ldr	r1, [pc, #896]	; 14350 <pclose@plt+0x10a4>
   13fcc:	mov	r0, sl
   13fd0:	bl	12a24 <strcmp@plt>
   13fd4:	cmp	r0, #0
   13fd8:	beq	14804 <pclose@plt+0x1558>
   13fdc:	ldr	r1, [pc, #880]	; 14354 <pclose@plt+0x10a8>
   13fe0:	mov	r0, sl
   13fe4:	bl	12a24 <strcmp@plt>
   13fe8:	cmp	r0, #0
   13fec:	beq	147d8 <pclose@plt+0x152c>
   13ff0:	ldr	r1, [pc, #864]	; 14358 <pclose@plt+0x10ac>
   13ff4:	mov	r0, sl
   13ff8:	bl	12a24 <strcmp@plt>
   13ffc:	cmp	r0, #0
   14000:	beq	14c3c <pclose@plt+0x1990>
   14004:	ldr	r1, [pc, #848]	; 1435c <pclose@plt+0x10b0>
   14008:	mov	r0, sl
   1400c:	bl	12a24 <strcmp@plt>
   14010:	subs	fp, r0, #0
   14014:	beq	14c04 <pclose@plt+0x1958>
   14018:	ldr	r1, [pc, #832]	; 14360 <pclose@plt+0x10b4>
   1401c:	mov	r0, sl
   14020:	bl	12a24 <strcmp@plt>
   14024:	subs	fp, r0, #0
   14028:	beq	14b18 <pclose@plt+0x186c>
   1402c:	ldr	r1, [pc, #816]	; 14364 <pclose@plt+0x10b8>
   14030:	mov	r0, sl
   14034:	bl	12a24 <strcmp@plt>
   14038:	cmp	r0, #0
   1403c:	moveq	r3, #1
   14040:	streq	r3, [r4, #24]
   14044:	beq	136f0 <pclose@plt+0x444>
   14048:	ldr	r1, [pc, #792]	; 14368 <pclose@plt+0x10bc>
   1404c:	mov	r0, sl
   14050:	bl	12a24 <strcmp@plt>
   14054:	cmp	r0, #0
   14058:	streq	r0, [r4, #24]
   1405c:	beq	136f0 <pclose@plt+0x444>
   14060:	ldr	r1, [pc, #772]	; 1436c <pclose@plt+0x10c0>
   14064:	mov	r0, sl
   14068:	bl	12a24 <strcmp@plt>
   1406c:	cmp	r0, #0
   14070:	moveq	r3, #1
   14074:	streq	r3, [r4, #28]
   14078:	beq	136f0 <pclose@plt+0x444>
   1407c:	ldr	r1, [pc, #748]	; 14370 <pclose@plt+0x10c4>
   14080:	mov	r0, sl
   14084:	bl	12a24 <strcmp@plt>
   14088:	cmp	r0, #0
   1408c:	moveq	r3, #0
   14090:	streq	r3, [r4, #28]
   14094:	beq	136f0 <pclose@plt+0x444>
   14098:	ldr	r1, [pc, #724]	; 14374 <pclose@plt+0x10c8>
   1409c:	mov	r0, sl
   140a0:	bl	12a24 <strcmp@plt>
   140a4:	cmp	r0, #0
   140a8:	moveq	r3, #1
   140ac:	streq	r3, [r4, #56]	; 0x38
   140b0:	streq	r3, [r4, #60]	; 0x3c
   140b4:	beq	136f0 <pclose@plt+0x444>
   140b8:	ldr	r1, [pc, #696]	; 14378 <pclose@plt+0x10cc>
   140bc:	mov	r0, sl
   140c0:	bl	12a24 <strcmp@plt>
   140c4:	cmp	r0, #0
   140c8:	streq	r0, [r4, #56]	; 0x38
   140cc:	beq	136f0 <pclose@plt+0x444>
   140d0:	ldr	r1, [pc, #676]	; 1437c <pclose@plt+0x10d0>
   140d4:	mov	r0, sl
   140d8:	bl	12a24 <strcmp@plt>
   140dc:	cmp	r0, #0
   140e0:	beq	14acc <pclose@plt+0x1820>
   140e4:	ldr	r1, [pc, #660]	; 14380 <pclose@plt+0x10d4>
   140e8:	mov	r0, sl
   140ec:	bl	12a24 <strcmp@plt>
   140f0:	subs	r2, r0, #0
   140f4:	beq	14a7c <pclose@plt+0x17d0>
   140f8:	ldr	r1, [pc, #644]	; 14384 <pclose@plt+0x10d8>
   140fc:	mov	r0, sl
   14100:	bl	12a24 <strcmp@plt>
   14104:	subs	r2, r0, #0
   14108:	beq	14a2c <pclose@plt+0x1780>
   1410c:	ldr	r1, [pc, #628]	; 14388 <pclose@plt+0x10dc>
   14110:	mov	r0, sl
   14114:	bl	12a24 <strcmp@plt>
   14118:	cmp	r0, #0
   1411c:	beq	149b0 <pclose@plt+0x1704>
   14120:	ldr	r1, [pc, #612]	; 1438c <pclose@plt+0x10e0>
   14124:	mov	r0, sl
   14128:	bl	12a24 <strcmp@plt>
   1412c:	cmp	r0, #0
   14130:	beq	13850 <pclose@plt+0x5a4>
   14134:	ldr	r1, [pc, #596]	; 14390 <pclose@plt+0x10e4>
   14138:	mov	r0, sl
   1413c:	bl	12a24 <strcmp@plt>
   14140:	cmp	r0, #0
   14144:	beq	149a4 <pclose@plt+0x16f8>
   14148:	ldr	r1, [pc, #580]	; 14394 <pclose@plt+0x10e8>
   1414c:	mov	r0, sl
   14150:	bl	12a24 <strcmp@plt>
   14154:	cmp	r0, #0
   14158:	bne	14850 <pclose@plt+0x15a4>
   1415c:	ldr	r0, [pc, #564]	; 14398 <pclose@plt+0x10ec>
   14160:	bl	12d84 <puts@plt>
   14164:	b	136f0 <pclose@plt+0x444>
   14168:	mov	r2, #5
   1416c:	ldr	r1, [pc, #416]	; 14314 <pclose@plt+0x1068>
   14170:	mov	r0, #0
   14174:	bl	12b98 <dcgettext@plt>
   14178:	mov	sl, r0
   1417c:	mov	r0, r9
   14180:	bl	13120 <gpg_strerror@plt>
   14184:	mov	r1, r0
   14188:	mov	r0, sl
   1418c:	bl	1c94c <pclose@plt+0x96a0>
   14190:	b	13a90 <pclose@plt+0x7e4>
   14194:	ldr	r1, [r4, #40]	; 0x28
   14198:	ldr	r0, [pc, #384]	; 14320 <pclose@plt+0x1074>
   1419c:	bl	1c94c <pclose@plt+0x96a0>
   141a0:	b	13624 <pclose@plt+0x378>
   141a4:	bl	21134 <pclose@plt+0xde88>
   141a8:	subs	r8, r0, #0
   141ac:	beq	148dc <pclose@plt+0x1630>
   141b0:	ldr	r3, [r4, #32]
   141b4:	ldr	r2, [r4, #4]
   141b8:	cmp	r3, #0
   141bc:	clz	r2, r2
   141c0:	ldr	r1, [r4, #8]
   141c4:	lsr	r2, r2, #5
   141c8:	bne	14240 <pclose@plt+0xf94>
   141cc:	str	r1, [sp, #8]
   141d0:	str	r3, [sp, #24]
   141d4:	str	r3, [sp, #20]
   141d8:	strd	r2, [sp, #12]
   141dc:	stm	sp, {r3, r8}
   141e0:	mov	r1, r3
   141e4:	ldr	r2, [r4, #16]
   141e8:	add	r0, sp, #68	; 0x44
   141ec:	bl	20084 <pclose@plt+0xcdd8>
   141f0:	mov	r6, r0
   141f4:	mov	r0, r8
   141f8:	bl	21194 <pclose@plt+0xdee8>
   141fc:	cmp	r6, #0
   14200:	beq	14484 <pclose@plt+0x11d8>
   14204:	ldr	r0, [r4, #8]
   14208:	cmp	r0, #0
   1420c:	bne	148f4 <pclose@plt+0x1648>
   14210:	ldr	r3, [r4, #32]
   14214:	uxth	r2, r6
   14218:	cmp	r3, #0
   1421c:	beq	14524 <pclose@plt+0x1278>
   14220:	cmp	r2, #92	; 0x5c
   14224:	bne	148f4 <pclose@plt+0x1648>
   14228:	mov	r2, #5
   1422c:	ldr	r1, [pc, #360]	; 1439c <pclose@plt+0x10f0>
   14230:	bl	12b98 <dcgettext@plt>
   14234:	bl	1c94c <pclose@plt+0x96a0>
   14238:	mov	r0, #0
   1423c:	bl	12e44 <exit@plt>
   14240:	str	r6, [sp, #12]
   14244:	str	r6, [sp, #8]
   14248:	stm	sp, {r2, r6}
   1424c:	mov	r3, r1
   14250:	ldr	r2, [r4, #20]
   14254:	mov	r1, r6
   14258:	add	r0, sp, #68	; 0x44
   1425c:	bl	20628 <pclose@plt+0xd37c>
   14260:	mov	r6, r0
   14264:	b	141f4 <pclose@plt+0xf48>
   14268:	cmp	r3, #9
   1426c:	bne	13e38 <pclose@plt+0xb8c>
   14270:	b	13e20 <pclose@plt+0xb74>
   14274:	ldr	r9, [r3]
   14278:	ldr	r0, [r3, #4]
   1427c:	bl	12b50 <gcry_free@plt>
   14280:	ldr	r0, [fp, #1032]	; 0x408
   14284:	bl	12b50 <gcry_free@plt>
   14288:	str	r9, [fp, #1032]	; 0x408
   1428c:	ldr	r3, [fp, #1032]	; 0x408
   14290:	cmp	r3, #0
   14294:	bne	14274 <pclose@plt+0xfc8>
   14298:	ldr	r3, [pc, #400]	; 14430 <pclose@plt+0x1184>
   1429c:	ldr	r2, [pc, #252]	; 143a0 <pclose@plt+0x10f4>
   142a0:	str	r2, [r3]
   142a4:	b	136f0 <pclose@plt+0x444>
   142a8:	andeq	sp, r3, r0, asr #21
   142ac:	andeq	r5, r1, r0, ror r5
   142b0:	andeq	r9, r2, r4, ror #19
   142b4:	strdeq	lr, [r3], -r8
   142b8:	strdeq	r0, [r0], -r5
   142bc:	andeq	lr, r3, r0, lsl r0
   142c0:	strdeq	r0, [r0], -r9
   142c4:	strdeq	r0, [r0], -fp
   142c8:	strdeq	r0, [r0], -sp
   142cc:	strdeq	r0, [r0], -r7
   142d0:	andeq	r9, r2, r4, lsl #20
   142d4:	andeq	lr, r3, r8, lsr #3
   142d8:	andeq	r9, r2, ip, ror #20
   142dc:	muleq	r2, r0, sl
   142e0:	andeq	r9, r2, r0, lsr #21
   142e4:	ldrdeq	sl, [r2], -r8
   142e8:	andeq	r9, r2, r0, asr #25
   142ec:	andeq	r9, r2, r0, ror fp
   142f0:			; <UNDEFINED> instruction: 0x00029cbc
   142f4:	ldrdeq	r9, [r2], -r0
   142f8:	andeq	r9, r2, ip, ror #25
   142fc:	andeq	sl, r2, ip, asr #9
   14300:	ldrdeq	sl, [r2], -r0
   14304:	muleq	r2, ip, ip
   14308:	andeq	r9, r2, r4, lsr #25
   1430c:	strdeq	r9, [r2], -r8
   14310:	andeq	r9, r2, ip, lsl #22
   14314:	andeq	r9, r2, r0, asr #24
   14318:	strdeq	sl, [r2], -r4
   1431c:	andeq	r9, r2, ip, lsl sp
   14320:	andeq	r9, r2, r8, asr #22
   14324:	andeq	r9, r2, r4, lsr #26
   14328:	andeq	r9, r2, r8, lsr #26
   1432c:	andeq	r9, r2, r0, lsr sp
   14330:	andeq	r9, r2, r4, asr #26
   14334:	andeq	r9, r2, ip, asr #26
   14338:	andeq	r9, r2, r8, asr sp
   1433c:	andeq	r9, r2, r4, ror #26
   14340:	andeq	r9, r2, ip, lsl #27
   14344:	andeq	r9, r2, r4, lsr #27
   14348:			; <UNDEFINED> instruction: 0x00029db0
   1434c:			; <UNDEFINED> instruction: 0x00029db8
   14350:	andeq	r9, r2, r0, asr #27
   14354:	andeq	r9, r2, r0, lsl #28
   14358:	strdeq	r9, [r2], -r4
   1435c:	strdeq	r9, [r2], -ip
   14360:	andeq	r9, r2, r8, ror #14
   14364:	andeq	r9, r2, r0, asr lr
   14368:	andeq	r9, r2, r4, asr lr
   1436c:	andeq	r9, r2, ip, asr lr
   14370:	andeq	r9, r2, r4, ror #28
   14374:	andeq	r9, r2, r0, ror lr
   14378:	andeq	r9, r2, r8, ror lr
   1437c:	andeq	r9, r2, r0, lsl #29
   14380:	andeq	r9, r2, r4, ror #29
   14384:	andeq	r9, r2, r8, lsl #30
   14388:	andeq	r9, r2, ip, lsl #30
   1438c:	andeq	r9, r2, r8, asr #30
   14390:	andeq	r9, r2, ip, asr #30
   14394:	andeq	r9, r2, r4, asr pc
   14398:	andeq	r9, r2, ip, asr pc
   1439c:	ldrdeq	r9, [r2], -r0
   143a0:	andeq	lr, r3, r4, asr #11
   143a4:	andeq	r9, r2, r8, lsr sp
   143a8:	strdeq	r9, [r2], -r4
   143ac:			; <UNDEFINED> instruction: 0x0002a4b0
   143b0:	andeq	sl, r2, r4, lsl r5
   143b4:			; <UNDEFINED> instruction: 0x0003e1b0
   143b8:			; <UNDEFINED> instruction: 0x0003e1bc
   143bc:	muleq	r2, r4, sp
   143c0:	andeq	r9, r2, r0, ror #10
   143c4:	andeq	r9, r2, r0, ror sp
   143c8:	andeq	r9, r2, r4, ror sp
   143cc:	andeq	r9, r2, r8, asr r5
   143d0:	andeq	r0, r0, r9, ror #10
   143d4:	andeq	r9, r2, ip, asr ip
   143d8:	andeq	r9, r2, ip, ror ip
   143dc:	andeq	r9, r2, r8, asr #27
   143e0:	muleq	r2, r8, r4
   143e4:	andeq	r9, r2, ip, lsr #20
   143e8:	andeq	r9, r2, r4, ror #20
   143ec:	ldrdeq	r9, [r2], -r0
   143f0:	andeq	r9, r2, r0, lsr #23
   143f4:	andeq	r9, r2, ip, lsl ip
   143f8:	andeq	r9, r2, r8, ror #21
   143fc:	andeq	sl, r2, r8, lsl r5
   14400:	andeq	r9, r2, ip, ror fp
   14404:	andeq	r9, r2, r4, lsr #22
   14408:	andeq	r9, r2, ip, lsr pc
   1440c:	andeq	r9, r2, r4, lsr #29
   14410:	andeq	r5, r1, r0, ror #10
   14414:	muleq	r2, r8, r7
   14418:	andeq	r9, r2, r0, lsl lr
   1441c:	andeq	r9, r2, ip, lsl lr
   14420:	andeq	r9, r2, r4, lsl #29
   14424:	andeq	fp, r2, r0, lsr r0
   14428:	andeq	lr, r3, r0, asr #3
   1442c:	andeq	r9, r2, r8, lsl #28
   14430:	andeq	lr, r3, r8
   14434:	andeq	r9, r2, r8, lsr lr
   14438:	strdeq	sl, [r2], -ip
   1443c:	andeq	r9, r2, r8, asr #29
   14440:	andeq	r9, r2, r4, asr #30
   14444:	andeq	r9, r2, r0, lsl pc
   14448:	andeq	r9, r2, ip, ror #29
   1444c:			; <UNDEFINED> instruction: 0x00029ab0
   14450:	ldr	r3, [r4, #56]	; 0x38
   14454:	cmp	r3, #0
   14458:	beq	14588 <pclose@plt+0x12dc>
   1445c:	mov	r0, r9
   14460:	bl	15710 <pclose@plt+0x2464>
   14464:	subs	sl, r0, #0
   14468:	beq	14588 <pclose@plt+0x12dc>
   1446c:	mov	r2, fp
   14470:	mov	r1, fp
   14474:	bl	15078 <pclose@plt+0x1dcc>
   14478:	mov	r0, sl
   1447c:	bl	12b50 <gcry_free@plt>
   14480:	b	136f0 <pclose@plt+0x444>
   14484:	ldr	r3, [sp, #68]	; 0x44
   14488:	add	r2, sp, #140	; 0x8c
   1448c:	str	r2, [sp, #36]	; 0x24
   14490:	str	r3, [sp, #48]	; 0x30
   14494:	b	1362c <pclose@plt+0x380>
   14498:	mov	r0, r9
   1449c:	bl	1725c <pclose@plt+0x3fb0>
   144a0:	b	136f0 <pclose@plt+0x444>
   144a4:	ldr	r3, [r4, #56]	; 0x38
   144a8:	cmp	r3, #0
   144ac:	beq	14540 <pclose@plt+0x1294>
   144b0:	mov	r0, r9
   144b4:	bl	15710 <pclose@plt+0x2464>
   144b8:	subs	sl, r0, #0
   144bc:	beq	14540 <pclose@plt+0x1294>
   144c0:	mov	r2, fp
   144c4:	mov	r1, #1
   144c8:	bl	15078 <pclose@plt+0x1dcc>
   144cc:	mov	r0, sl
   144d0:	bl	12b50 <gcry_free@plt>
   144d4:	b	136f0 <pclose@plt+0x444>
   144d8:	mov	r0, r9
   144dc:	mov	r1, #1
   144e0:	bl	1725c <pclose@plt+0x3fb0>
   144e4:	b	136f0 <pclose@plt+0x444>
   144e8:	ldr	fp, [pc, #-312]	; 143b8 <pclose@plt+0x110c>
   144ec:	ldr	sl, [pc, #-336]	; 143a4 <pclose@plt+0x10f8>
   144f0:	ldr	r9, [fp]
   144f4:	b	14518 <pclose@plt+0x126c>
   144f8:	ldr	r3, [r9, #4]
   144fc:	cmp	r3, #0
   14500:	beq	14514 <pclose@plt+0x1268>
   14504:	add	r2, r9, #8
   14508:	mov	r1, sl
   1450c:	mov	r0, #1
   14510:	bl	12f94 <__printf_chk@plt>
   14514:	ldr	r9, [r9]
   14518:	cmp	r9, #0
   1451c:	bne	144f8 <pclose@plt+0x124c>
   14520:	b	136f0 <pclose@plt+0x444>
   14524:	cmp	r2, #77	; 0x4d
   14528:	bne	148f4 <pclose@plt+0x1648>
   1452c:	mov	r0, r3
   14530:	mov	r2, #5
   14534:	ldr	r1, [pc, #-404]	; 143a8 <pclose@plt+0x10fc>
   14538:	bl	12b98 <dcgettext@plt>
   1453c:	b	14234 <pclose@plt+0xf88>
   14540:	mov	r0, r9
   14544:	mov	r2, #0
   14548:	mov	r1, #1
   1454c:	bl	15078 <pclose@plt+0x1dcc>
   14550:	b	136f0 <pclose@plt+0x444>
   14554:	mov	r9, r2
   14558:	b	13ee8 <pclose@plt+0xc3c>
   1455c:	mov	r2, #5
   14560:	ldr	r1, [pc, #-444]	; 143ac <pclose@plt+0x1100>
   14564:	mov	r0, #0
   14568:	bl	12b98 <dcgettext@plt>
   1456c:	mov	r5, r0
   14570:	mov	r0, fp
   14574:	bl	13120 <gpg_strerror@plt>
   14578:	mov	r1, r0
   1457c:	mov	r0, r5
   14580:	bl	1c94c <pclose@plt+0x96a0>
   14584:	b	13850 <pclose@plt+0x5a4>
   14588:	mov	r2, #0
   1458c:	mov	r0, r9
   14590:	mov	r1, r2
   14594:	bl	15078 <pclose@plt+0x1dcc>
   14598:	b	136f0 <pclose@plt+0x444>
   1459c:	ldr	r3, [r4, #56]	; 0x38
   145a0:	cmp	r3, #0
   145a4:	beq	145d0 <pclose@plt+0x1324>
   145a8:	mov	r0, r9
   145ac:	bl	15710 <pclose@plt+0x2464>
   145b0:	subs	sl, r0, #0
   145b4:	beq	145d0 <pclose@plt+0x1324>
   145b8:	mov	r1, fp
   145bc:	mov	r2, #1
   145c0:	bl	15078 <pclose@plt+0x1dcc>
   145c4:	mov	r0, sl
   145c8:	bl	12b50 <gcry_free@plt>
   145cc:	b	136f0 <pclose@plt+0x444>
   145d0:	mov	r0, r9
   145d4:	mov	r2, #1
   145d8:	mov	r1, #0
   145dc:	bl	15078 <pclose@plt+0x1dcc>
   145e0:	b	136f0 <pclose@plt+0x444>
   145e4:	ldr	fp, [pc, #-564]	; 143b8 <pclose@plt+0x110c>
   145e8:	ldr	r0, [fp, #1036]	; 0x40c
   145ec:	cmp	r0, #0
   145f0:	beq	14610 <pclose@plt+0x1364>
   145f4:	ldr	r3, [pc, #-584]	; 143b4 <pclose@plt+0x1108>
   145f8:	ldr	r3, [r3]
   145fc:	cmp	r0, r3
   14600:	beq	14608 <pclose@plt+0x135c>
   14604:	bl	13024 <fclose@plt>
   14608:	mov	r3, #0
   1460c:	str	r3, [fp, #1036]	; 0x40c
   14610:	ldr	sl, [r4, #56]	; 0x38
   14614:	cmp	sl, #0
   14618:	bne	14790 <pclose@plt+0x14e4>
   1461c:	ldr	r1, [pc, #-628]	; 143b0 <pclose@plt+0x1104>
   14620:	mov	r0, r9
   14624:	bl	12a24 <strcmp@plt>
   14628:	cmp	r0, #0
   1462c:	bne	14708 <pclose@plt+0x145c>
   14630:	ldr	r3, [pc, #-644]	; 143b4 <pclose@plt+0x1108>
   14634:	ldr	r3, [r3]
   14638:	str	r3, [fp, #1036]	; 0x40c
   1463c:	mov	r0, sl
   14640:	bl	12b50 <gcry_free@plt>
   14644:	b	136f0 <pclose@plt+0x444>
   14648:	ldr	fp, [pc, #-664]	; 143b8 <pclose@plt+0x110c>
   1464c:	ldr	sl, [pc, #-664]	; 143bc <pclose@plt+0x1110>
   14650:	ldr	r9, [fp, #1032]	; 0x408
   14654:	b	1469c <pclose@plt+0x13f0>
   14658:	ldr	r2, [r9, #4]
   1465c:	cmp	r2, #0
   14660:	beq	14698 <pclose@plt+0x13ec>
   14664:	ldr	r3, [r9, #8]
   14668:	cmp	r3, #0
   1466c:	movne	r3, #118	; 0x76
   14670:	bne	14684 <pclose@plt+0x13d8>
   14674:	ldr	r3, [r9, #12]
   14678:	cmp	r3, #0
   1467c:	movne	r3, #112	; 0x70
   14680:	moveq	r3, #102	; 0x66
   14684:	add	r1, r9, #16
   14688:	str	r1, [sp]
   1468c:	mov	r0, #1
   14690:	mov	r1, sl
   14694:	bl	12f94 <__printf_chk@plt>
   14698:	ldr	r9, [r9]
   1469c:	cmp	r9, #0
   146a0:	bne	14658 <pclose@plt+0x13ac>
   146a4:	ldr	r9, [fp, #1032]	; 0x408
   146a8:	ldr	sl, [pc, #-756]	; 143bc <pclose@plt+0x1110>
   146ac:	ldr	fp, [pc, #-756]	; 143c0 <pclose@plt+0x1114>
   146b0:	b	146b8 <pclose@plt+0x140c>
   146b4:	ldr	r9, [r9]
   146b8:	cmp	r9, #0
   146bc:	beq	136f0 <pclose@plt+0x444>
   146c0:	ldr	r3, [r9, #4]
   146c4:	cmp	r3, #0
   146c8:	bne	146b4 <pclose@plt+0x1408>
   146cc:	ldr	r3, [r9, #8]
   146d0:	cmp	r3, #0
   146d4:	movne	r3, #118	; 0x76
   146d8:	bne	146ec <pclose@plt+0x1440>
   146dc:	ldr	r3, [r9, #12]
   146e0:	cmp	r3, #0
   146e4:	movne	r3, #112	; 0x70
   146e8:	moveq	r3, #102	; 0x66
   146ec:	add	r2, r9, #16
   146f0:	str	r2, [sp]
   146f4:	mov	r1, sl
   146f8:	mov	r2, fp
   146fc:	mov	r0, #1
   14700:	bl	12f94 <__printf_chk@plt>
   14704:	b	146b4 <pclose@plt+0x1408>
   14708:	ldrb	r3, [r9]
   1470c:	cmp	r3, #0
   14710:	beq	1463c <pclose@plt+0x1390>
   14714:	ldr	r1, [pc, #-856]	; 143c4 <pclose@plt+0x1118>
   14718:	mov	r0, r9
   1471c:	bl	13168 <fopen64@plt>
   14720:	cmp	r0, #0
   14724:	str	r0, [fp, #1036]	; 0x40c
   14728:	bne	1463c <pclose@plt+0x1390>
   1472c:	bl	12f10 <__errno_location@plt>
   14730:	ldr	r0, [r0]
   14734:	bl	12db4 <strerror@plt>
   14738:	mov	r1, r9
   1473c:	mov	r2, r0
   14740:	ldr	r0, [pc, #-896]	; 143c8 <pclose@plt+0x111c>
   14744:	bl	1c9b0 <pclose@plt+0x9704>
   14748:	b	1463c <pclose@plt+0x1390>
   1474c:	ldr	r3, [r4, #56]	; 0x38
   14750:	cmp	r3, #0
   14754:	beq	14784 <pclose@plt+0x14d8>
   14758:	mov	r0, r9
   1475c:	bl	15710 <pclose@plt+0x2464>
   14760:	subs	sl, r0, #0
   14764:	beq	14784 <pclose@plt+0x14d8>
   14768:	bl	12d84 <puts@plt>
   1476c:	b	1463c <pclose@plt+0x1390>
   14770:	ldr	r3, [pc, #-940]	; 143cc <pclose@plt+0x1120>
   14774:	ldr	r2, [pc, #-940]	; 143d0 <pclose@plt+0x1124>
   14778:	ldr	r1, [pc, #-940]	; 143d4 <pclose@plt+0x1128>
   1477c:	ldr	r0, [pc, #-940]	; 143d8 <pclose@plt+0x112c>
   14780:	bl	13294 <__assert_fail@plt>
   14784:	mov	r0, r9
   14788:	bl	12d84 <puts@plt>
   1478c:	b	136f0 <pclose@plt+0x444>
   14790:	mov	r0, r9
   14794:	bl	15710 <pclose@plt+0x2464>
   14798:	subs	sl, r0, #0
   1479c:	movne	r9, sl
   147a0:	b	1461c <pclose@plt+0x1370>
   147a4:	ldr	r3, [r4, #56]	; 0x38
   147a8:	cmp	r3, #0
   147ac:	beq	14834 <pclose@plt+0x1588>
   147b0:	mov	r0, r9
   147b4:	bl	15710 <pclose@plt+0x2464>
   147b8:	subs	sl, r0, #0
   147bc:	beq	14834 <pclose@plt+0x1588>
   147c0:	ldr	r0, [sp, #48]	; 0x30
   147c4:	mov	r1, sl
   147c8:	bl	151b4 <pclose@plt+0x1f08>
   147cc:	mov	r0, sl
   147d0:	bl	12b50 <gcry_free@plt>
   147d4:	b	136f0 <pclose@plt+0x444>
   147d8:	ldr	r3, [r4, #56]	; 0x38
   147dc:	cmp	r3, #0
   147e0:	beq	1486c <pclose@plt+0x15c0>
   147e4:	mov	r0, r9
   147e8:	bl	15710 <pclose@plt+0x2464>
   147ec:	subs	sl, r0, #0
   147f0:	beq	1486c <pclose@plt+0x15c0>
   147f4:	bl	15318 <pclose@plt+0x206c>
   147f8:	mov	r0, sl
   147fc:	bl	12b50 <gcry_free@plt>
   14800:	b	136f0 <pclose@plt+0x444>
   14804:	ldr	r3, [r4, #56]	; 0x38
   14808:	cmp	r3, #0
   1480c:	beq	14844 <pclose@plt+0x1598>
   14810:	mov	r0, r9
   14814:	bl	15710 <pclose@plt+0x2464>
   14818:	subs	r9, r0, #0
   1481c:	beq	14844 <pclose@plt+0x1598>
   14820:	ldr	r0, [pc, #-1100]	; 143dc <pclose@plt+0x1130>
   14824:	bl	1c94c <pclose@plt+0x96a0>
   14828:	mov	r0, r9
   1482c:	bl	12b50 <gcry_free@plt>
   14830:	b	136f0 <pclose@plt+0x444>
   14834:	mov	r1, r9
   14838:	ldr	r0, [sp, #48]	; 0x30
   1483c:	bl	151b4 <pclose@plt+0x1f08>
   14840:	b	136f0 <pclose@plt+0x444>
   14844:	ldr	r0, [pc, #-1136]	; 143dc <pclose@plt+0x1130>
   14848:	bl	1c94c <pclose@plt+0x96a0>
   1484c:	b	136f0 <pclose@plt+0x444>
   14850:	mov	r2, #5
   14854:	ldr	r1, [pc, #-1148]	; 143e0 <pclose@plt+0x1134>
   14858:	mov	r0, #0
   1485c:	bl	12b98 <dcgettext@plt>
   14860:	mov	r1, sl
   14864:	bl	1c9b0 <pclose@plt+0x9704>
   14868:	b	136f0 <pclose@plt+0x444>
   1486c:	mov	r0, r9
   14870:	bl	15318 <pclose@plt+0x206c>
   14874:	b	136f0 <pclose@plt+0x444>
   14878:	mov	r0, #2
   1487c:	bl	12e44 <exit@plt>
   14880:	mov	r2, #5
   14884:	ldr	r1, [pc, #-1192]	; 143e4 <pclose@plt+0x1138>
   14888:	mov	r0, r7
   1488c:	bl	12b98 <dcgettext@plt>
   14890:	ldr	r1, [pc, #-1200]	; 143e8 <pclose@plt+0x113c>
   14894:	bl	1c9b0 <pclose@plt+0x9704>
   14898:	mov	r0, #1
   1489c:	bl	12e44 <exit@plt>
   148a0:	bl	12f10 <__errno_location@plt>
   148a4:	ldr	r0, [r0]
   148a8:	bl	12db4 <strerror@plt>
   148ac:	mov	r1, r5
   148b0:	mov	r2, r0
   148b4:	ldr	r0, [pc, #-1136]	; 1444c <pclose@plt+0x11a0>
   148b8:	bl	1c9b0 <pclose@plt+0x9704>
   148bc:	mov	r0, #1
   148c0:	bl	12e44 <exit@plt>
   148c4:	bl	13120 <gpg_strerror@plt>
   148c8:	mov	r1, r0
   148cc:	ldr	r0, [pc, #-1256]	; 143ec <pclose@plt+0x1140>
   148d0:	bl	1c9b0 <pclose@plt+0x9704>
   148d4:	mov	r0, #1
   148d8:	bl	12e44 <exit@plt>
   148dc:	bl	12f10 <__errno_location@plt>
   148e0:	ldr	r0, [r0]
   148e4:	bl	12db4 <strerror@plt>
   148e8:	mov	r1, r0
   148ec:	ldr	r0, [pc, #-1284]	; 143f0 <pclose@plt+0x1144>
   148f0:	bl	1ca34 <pclose@plt+0x9788>
   148f4:	mov	r2, #5
   148f8:	ldr	r1, [pc, #-1292]	; 143f4 <pclose@plt+0x1148>
   148fc:	mov	r0, #0
   14900:	bl	12b98 <dcgettext@plt>
   14904:	mov	r4, r0
   14908:	mov	r0, r6
   1490c:	bl	13120 <gpg_strerror@plt>
   14910:	mov	r1, r0
   14914:	mov	r0, r4
   14918:	bl	1c9b0 <pclose@plt+0x9704>
   1491c:	mov	r0, #1
   14920:	bl	12e44 <exit@plt>
   14924:	bl	13120 <gpg_strerror@plt>
   14928:	mov	r1, r0
   1492c:	ldr	r0, [pc, #-1340]	; 143f8 <pclose@plt+0x114c>
   14930:	bl	1c9b0 <pclose@plt+0x9704>
   14934:	mov	r0, #1
   14938:	bl	12e44 <exit@plt>
   1493c:	bl	12bb0 <__stack_chk_fail@plt>
   14940:	mov	r2, #5
   14944:	ldr	r1, [pc, #-1360]	; 143fc <pclose@plt+0x1150>
   14948:	mov	r0, r5
   1494c:	bl	12b98 <dcgettext@plt>
   14950:	mov	r4, r0
   14954:	bl	12f10 <__errno_location@plt>
   14958:	ldr	r0, [r0]
   1495c:	bl	12db4 <strerror@plt>
   14960:	b	14910 <pclose@plt+0x1664>
   14964:	ldr	r4, [r4, #44]	; 0x2c
   14968:	bl	13120 <gpg_strerror@plt>
   1496c:	mov	r1, r4
   14970:	mov	r2, r0
   14974:	ldr	r0, [pc, #-1404]	; 14400 <pclose@plt+0x1154>
   14978:	bl	1c9b0 <pclose@plt+0x9704>
   1497c:	mov	r0, #1
   14980:	bl	12e44 <exit@plt>
   14984:	ldr	r4, [r4, #40]	; 0x28
   14988:	bl	13120 <gpg_strerror@plt>
   1498c:	mov	r1, r4
   14990:	mov	r2, r0
   14994:	ldr	r0, [pc, #-1432]	; 14404 <pclose@plt+0x1158>
   14998:	bl	1c9b0 <pclose@plt+0x9704>
   1499c:	mov	r0, #1
   149a0:	bl	12e44 <exit@plt>
   149a4:	mov	r0, #1
   149a8:	bl	1d184 <pclose@plt+0x9ed8>
   149ac:	b	136f0 <pclose@plt+0x444>
   149b0:	cmn	r6, #1
   149b4:	beq	14d64 <pclose@plt+0x1ab8>
   149b8:	mov	r9, #28
   149bc:	add	r3, sp, #704	; 0x2c0
   149c0:	mla	r9, r9, r6, r3
   149c4:	ldr	r0, [r9, #-540]	; 0xfffffde4
   149c8:	bl	12ff4 <gcry_xstrdup@plt>
   149cc:	ldr	r3, [r9, #-544]	; 0xfffffde0
   149d0:	cmp	r3, #0
   149d4:	mov	sl, r0
   149d8:	bne	14bec <pclose@plt+0x1940>
   149dc:	mov	r0, sl
   149e0:	bl	15710 <pclose@plt+0x2464>
   149e4:	ldr	r1, [pc, #-1508]	; 14408 <pclose@plt+0x115c>
   149e8:	subs	r9, r0, #0
   149ec:	movne	fp, r9
   149f0:	moveq	fp, sl
   149f4:	mov	r0, fp
   149f8:	bl	188d8 <pclose@plt+0x562c>
   149fc:	cmp	r0, #0
   14a00:	bne	14cd0 <pclose@plt+0x1a24>
   14a04:	mov	r0, r9
   14a08:	bl	12b50 <gcry_free@plt>
   14a0c:	mov	r0, sl
   14a10:	bl	12b50 <gcry_free@plt>
   14a14:	mov	r3, #28
   14a18:	add	r2, sp, #704	; 0x2c0
   14a1c:	mla	r3, r3, r6, r2
   14a20:	ldr	r2, [r3, #-560]	; 0xfffffdd0
   14a24:	str	r2, [r3, #-552]	; 0xfffffdd8
   14a28:	b	136f0 <pclose@plt+0x444>
   14a2c:	cmp	r6, #17
   14a30:	bgt	14d78 <pclose@plt+0x1acc>
   14a34:	mov	r3, #28
   14a38:	mov	r0, r9
   14a3c:	mla	r9, r6, r3, r3
   14a40:	add	r1, sp, #704	; 0x2c0
   14a44:	add	r3, r9, #4
   14a48:	add	r9, r1, r9
   14a4c:	ldr	r1, [sp, #36]	; 0x24
   14a50:	mov	sl, #1
   14a54:	add	r3, r1, r3
   14a58:	str	r3, [r9, #-556]	; 0xfffffdd4
   14a5c:	str	r2, [r9, #-560]	; 0xfffffdd0
   14a60:	str	r2, [r9, #-552]	; 0xfffffdd8
   14a64:	str	sl, [r9, #-548]	; 0xfffffddc
   14a68:	str	sl, [r9, #-544]	; 0xfffffde0
   14a6c:	bl	15990 <pclose@plt+0x26e4>
   14a70:	str	sl, [r9, #-564]	; 0xfffffdcc
   14a74:	str	r0, [r9, #-540]	; 0xfffffde4
   14a78:	b	136f0 <pclose@plt+0x444>
   14a7c:	cmp	r6, #17
   14a80:	bgt	14d78 <pclose@plt+0x1acc>
   14a84:	mov	r3, #28
   14a88:	mov	r0, r9
   14a8c:	mla	r9, r6, r3, r3
   14a90:	add	r1, sp, #704	; 0x2c0
   14a94:	add	r3, r9, #4
   14a98:	add	r9, r1, r9
   14a9c:	ldr	r1, [sp, #36]	; 0x24
   14aa0:	mov	sl, #1
   14aa4:	add	r3, r1, r3
   14aa8:	str	r3, [r9, #-556]	; 0xfffffdd4
   14aac:	str	r2, [r9, #-560]	; 0xfffffdd0
   14ab0:	str	r2, [r9, #-552]	; 0xfffffdd8
   14ab4:	str	r2, [r9, #-544]	; 0xfffffde0
   14ab8:	str	sl, [r9, #-548]	; 0xfffffddc
   14abc:	bl	12ff4 <gcry_xstrdup@plt>
   14ac0:	str	sl, [r9, #-564]	; 0xfffffdcc
   14ac4:	str	r0, [r9, #-540]	; 0xfffffde4
   14ac8:	b	136f0 <pclose@plt+0x444>
   14acc:	mov	r2, r9
   14ad0:	b	14ae8 <pclose@plt+0x183c>
   14ad4:	cmp	r3, #32
   14ad8:	cmpne	r3, #9
   14adc:	movne	r3, #1
   14ae0:	moveq	r3, #0
   14ae4:	beq	14ba8 <pclose@plt+0x18fc>
   14ae8:	mov	r1, r2
   14aec:	ldrb	r3, [r2], #1
   14af0:	cmp	r3, #0
   14af4:	bne	14ad4 <pclose@plt+0x1828>
   14af8:	cmp	r5, #0
   14afc:	beq	14ca0 <pclose@plt+0x19f4>
   14b00:	ldr	r0, [pc, #-1788]	; 1440c <pclose@plt+0x1160>
   14b04:	bl	1c9b0 <pclose@plt+0x9704>
   14b08:	mov	r0, r5
   14b0c:	bl	12d0c <gpgrt_fclose@plt>
   14b10:	mov	r5, #0
   14b14:	b	136f0 <pclose@plt+0x444>
   14b18:	ldr	r9, [sp, #48]	; 0x30
   14b1c:	add	r0, sp, #68	; 0x44
   14b20:	mov	r1, #100	; 0x64
   14b24:	bl	1ebbc <pclose@plt+0xb910>
   14b28:	add	r3, sp, #68	; 0x44
   14b2c:	mov	r0, r9
   14b30:	ldr	r2, [pc, #-1832]	; 14410 <pclose@plt+0x1164>
   14b34:	ldr	r1, [pc, #-1828]	; 14418 <pclose@plt+0x116c>
   14b38:	str	fp, [sp, #12]
   14b3c:	str	fp, [sp, #8]
   14b40:	str	fp, [sp, #4]
   14b44:	str	fp, [sp]
   14b48:	bl	12d30 <assuan_transact@plt>
   14b4c:	mov	r2, #1
   14b50:	ldr	r1, [pc, #-1860]	; 14414 <pclose@plt+0x1168>
   14b54:	mov	r9, r0
   14b58:	add	r0, sp, #68	; 0x44
   14b5c:	bl	1ec6c <pclose@plt+0xb9c0>
   14b60:	mov	r1, fp
   14b64:	add	r0, sp, #68	; 0x44
   14b68:	bl	1edfc <pclose@plt+0xbb50>
   14b6c:	cmp	r9, #0
   14b70:	movne	r1, #1
   14b74:	clz	r3, r0
   14b78:	lsr	r3, r3, #5
   14b7c:	moveq	r1, r3
   14b80:	cmp	r1, #0
   14b84:	mov	sl, r0
   14b88:	beq	14c68 <pclose@plt+0x19bc>
   14b8c:	mov	r0, r9
   14b90:	bl	13120 <gpg_strerror@plt>
   14b94:	ldr	r1, [pc, #-1924]	; 14418 <pclose@plt+0x116c>
   14b98:	mov	r2, r0
   14b9c:	ldr	r0, [pc, #-1928]	; 1441c <pclose@plt+0x1170>
   14ba0:	bl	1c9b0 <pclose@plt+0x9704>
   14ba4:	b	1463c <pclose@plt+0x1390>
   14ba8:	ldrb	r2, [r1, #1]
   14bac:	strb	r3, [r1]
   14bb0:	cmp	r2, #9
   14bb4:	cmpne	r2, #32
   14bb8:	moveq	sl, #1
   14bbc:	movne	sl, #0
   14bc0:	b	14bc8 <pclose@plt+0x191c>
   14bc4:	add	r9, r9, #1
   14bc8:	cmp	sl, #0
   14bcc:	bne	14bc4 <pclose@plt+0x1918>
   14bd0:	cmp	r2, #0
   14bd4:	beq	14af8 <pclose@plt+0x184c>
   14bd8:	ldr	r0, [pc, #-1984]	; 14420 <pclose@plt+0x1174>
   14bdc:	bl	1c9b0 <pclose@plt+0x9704>
   14be0:	cmp	r5, #0
   14be4:	bne	13aa0 <pclose@plt+0x7f4>
   14be8:	b	136f0 <pclose@plt+0x444>
   14bec:	ldr	r0, [r9, #-540]	; 0xfffffde4
   14bf0:	bl	12b50 <gcry_free@plt>
   14bf4:	ldr	r0, [pc, #-2008]	; 14424 <pclose@plt+0x1178>
   14bf8:	bl	12ff4 <gcry_xstrdup@plt>
   14bfc:	str	r0, [r9, #-540]	; 0xfffffde4
   14c00:	b	149dc <pclose@plt+0x1730>
   14c04:	ldr	r9, [pc, #-2020]	; 14428 <pclose@plt+0x117c>
   14c08:	ldr	sl, [pc, #-2020]	; 1442c <pclose@plt+0x1180>
   14c0c:	b	14c1c <pclose@plt+0x1970>
   14c10:	add	fp, fp, #1
   14c14:	cmp	fp, #256	; 0x100
   14c18:	beq	136f0 <pclose@plt+0x444>
   14c1c:	ldr	r3, [r9], #4
   14c20:	cmp	r3, #0
   14c24:	beq	14c10 <pclose@plt+0x1964>
   14c28:	mov	r2, fp
   14c2c:	mov	r1, sl
   14c30:	mov	r0, #1
   14c34:	bl	12f94 <__printf_chk@plt>
   14c38:	b	14c10 <pclose@plt+0x1964>
   14c3c:	ldr	r3, [r4, #56]	; 0x38
   14c40:	cmp	r3, #0
   14c44:	beq	14c94 <pclose@plt+0x19e8>
   14c48:	mov	r0, r9
   14c4c:	bl	15710 <pclose@plt+0x2464>
   14c50:	subs	sl, r0, #0
   14c54:	beq	14c94 <pclose@plt+0x19e8>
   14c58:	bl	15500 <pclose@plt+0x2254>
   14c5c:	mov	r0, sl
   14c60:	bl	12b50 <gcry_free@plt>
   14c64:	b	136f0 <pclose@plt+0x444>
   14c68:	mov	r2, #10
   14c6c:	bl	12e74 <strtoul@plt>
   14c70:	ldr	r3, [pc, #-2120]	; 14430 <pclose@plt+0x1184>
   14c74:	ldr	r2, [r4]
   14c78:	cmp	r2, #0
   14c7c:	mov	r1, r0
   14c80:	str	r0, [r3, #4]
   14c84:	beq	1463c <pclose@plt+0x1390>
   14c88:	ldr	r0, [pc, #-2140]	; 14434 <pclose@plt+0x1188>
   14c8c:	bl	1c94c <pclose@plt+0x96a0>
   14c90:	b	1463c <pclose@plt+0x1390>
   14c94:	mov	r0, r9
   14c98:	bl	15500 <pclose@plt+0x2254>
   14c9c:	b	136f0 <pclose@plt+0x444>
   14ca0:	ldr	r1, [pc, #-2160]	; 14438 <pclose@plt+0x118c>
   14ca4:	mov	r0, r9
   14ca8:	bl	12fac <gpgrt_fopen@plt>
   14cac:	subs	r5, r0, #0
   14cb0:	beq	14d84 <pclose@plt+0x1ad8>
   14cb4:	ldr	r3, [r4]
   14cb8:	cmp	r3, #0
   14cbc:	beq	136f0 <pclose@plt+0x444>
   14cc0:	mov	r1, r9
   14cc4:	ldr	r0, [pc, #-2192]	; 1443c <pclose@plt+0x1190>
   14cc8:	bl	1c94c <pclose@plt+0x96a0>
   14ccc:	b	136f0 <pclose@plt+0x444>
   14cd0:	ldr	r1, [pc, #-2200]	; 14440 <pclose@plt+0x1194>
   14cd4:	mov	r0, fp
   14cd8:	bl	188d8 <pclose@plt+0x562c>
   14cdc:	cmp	r0, #0
   14ce0:	beq	14a04 <pclose@plt+0x1758>
   14ce4:	mov	r2, #0
   14ce8:	mov	r1, r2
   14cec:	mov	r0, fp
   14cf0:	bl	12a3c <strtol@plt>
   14cf4:	mov	fp, r0
   14cf8:	mov	r0, r9
   14cfc:	bl	12b50 <gcry_free@plt>
   14d00:	mov	r0, sl
   14d04:	bl	12b50 <gcry_free@plt>
   14d08:	cmp	fp, #0
   14d0c:	bne	14a14 <pclose@plt+0x1768>
   14d10:	mov	r9, #28
   14d14:	add	r3, sp, #704	; 0x2c0
   14d18:	mla	r9, r9, r6, r3
   14d1c:	b	14d2c <pclose@plt+0x1a80>
   14d20:	ldr	sl, [r0]
   14d24:	bl	12b50 <gcry_free@plt>
   14d28:	str	sl, [r9, #-560]	; 0xfffffdd0
   14d2c:	ldr	r0, [r9, #-560]	; 0xfffffdd0
   14d30:	cmp	r0, #0
   14d34:	bne	14d20 <pclose@plt+0x1a74>
   14d38:	mov	sl, r0
   14d3c:	str	sl, [r9, #-556]	; 0xfffffdd4
   14d40:	ldr	r0, [r9, #-540]	; 0xfffffde4
   14d44:	str	sl, [r9, #-552]	; 0xfffffdd8
   14d48:	str	sl, [r9, #-548]	; 0xfffffddc
   14d4c:	str	sl, [r9, #-564]	; 0xfffffdcc
   14d50:	str	sl, [r9, #-544]	; 0xfffffde0
   14d54:	bl	12b50 <gcry_free@plt>
   14d58:	sub	r6, r6, #1
   14d5c:	str	sl, [r9, #-540]	; 0xfffffde4
   14d60:	b	136f0 <pclose@plt+0x444>
   14d64:	ldr	r0, [pc, #-2344]	; 14444 <pclose@plt+0x1198>
   14d68:	bl	1c9b0 <pclose@plt+0x9704>
   14d6c:	mov	r3, #2048	; 0x800
   14d70:	str	r3, [sp, #64]	; 0x40
   14d74:	b	1366c <pclose@plt+0x3c0>
   14d78:	ldr	r0, [pc, #-2360]	; 14448 <pclose@plt+0x119c>
   14d7c:	bl	1c9b0 <pclose@plt+0x9704>
   14d80:	b	136f0 <pclose@plt+0x444>
   14d84:	bl	12f10 <__errno_location@plt>
   14d88:	ldr	r0, [r0]
   14d8c:	bl	12db4 <strerror@plt>
   14d90:	mov	r1, r9
   14d94:	mov	r2, r0
   14d98:	ldr	r0, [pc, #-2388]	; 1444c <pclose@plt+0x11a0>
   14d9c:	bl	1c9b0 <pclose@plt+0x9704>
   14da0:	b	136f0 <pclose@plt+0x444>
   14da4:	mov	fp, #0
   14da8:	mov	lr, #0
   14dac:	pop	{r1}		; (ldr r1, [sp], #4)
   14db0:	mov	r2, sp
   14db4:	push	{r2}		; (str r2, [sp, #-4]!)
   14db8:	push	{r0}		; (str r0, [sp, #-4]!)
   14dbc:	ldr	ip, [pc, #16]	; 14dd4 <pclose@plt+0x1b28>
   14dc0:	push	{ip}		; (str ip, [sp, #-4]!)
   14dc4:	ldr	r0, [pc, #12]	; 14dd8 <pclose@plt+0x1b2c>
   14dc8:	ldr	r3, [pc, #12]	; 14ddc <pclose@plt+0x1b30>
   14dcc:	bl	12da8 <__libc_start_main@plt>
   14dd0:	bl	13228 <abort@plt>
   14dd4:	andeq	r9, r2, r0, lsr r5
   14dd8:			; <UNDEFINED> instruction: 0x000132b8
   14ddc:	ldrdeq	r9, [r2], -r0
   14de0:	ldr	r3, [pc, #20]	; 14dfc <pclose@plt+0x1b50>
   14de4:	ldr	r2, [pc, #20]	; 14e00 <pclose@plt+0x1b54>
   14de8:	add	r3, pc, r3
   14dec:	ldr	r2, [r3, r2]
   14df0:	cmp	r2, #0
   14df4:	bxeq	lr
   14df8:	b	12df0 <__gmon_start__@plt>
   14dfc:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14e00:	andeq	r0, r0, r4, lsl r3
   14e04:	ldr	r0, [pc, #24]	; 14e24 <pclose@plt+0x1b78>
   14e08:	ldr	r3, [pc, #24]	; 14e28 <pclose@plt+0x1b7c>
   14e0c:	cmp	r3, r0
   14e10:	bxeq	lr
   14e14:	ldr	r3, [pc, #16]	; 14e2c <pclose@plt+0x1b80>
   14e18:	cmp	r3, #0
   14e1c:	bxeq	lr
   14e20:	bx	r3
   14e24:	andeq	lr, r3, r8, lsl #3
   14e28:	andeq	lr, r3, r8, lsl #3
   14e2c:	andeq	r0, r0, r0
   14e30:	ldr	r0, [pc, #36]	; 14e5c <pclose@plt+0x1bb0>
   14e34:	ldr	r1, [pc, #36]	; 14e60 <pclose@plt+0x1bb4>
   14e38:	sub	r1, r1, r0
   14e3c:	asr	r1, r1, #2
   14e40:	add	r1, r1, r1, lsr #31
   14e44:	asrs	r1, r1, #1
   14e48:	bxeq	lr
   14e4c:	ldr	r3, [pc, #16]	; 14e64 <pclose@plt+0x1bb8>
   14e50:	cmp	r3, #0
   14e54:	bxeq	lr
   14e58:	bx	r3
   14e5c:	andeq	lr, r3, r8, lsl #3
   14e60:	andeq	lr, r3, r8, lsl #3
   14e64:	andeq	r0, r0, r0
   14e68:	push	{r4, lr}
   14e6c:	ldr	r4, [pc, #24]	; 14e8c <pclose@plt+0x1be0>
   14e70:	ldrb	r3, [r4]
   14e74:	cmp	r3, #0
   14e78:	popne	{r4, pc}
   14e7c:	bl	14e04 <pclose@plt+0x1b58>
   14e80:	mov	r3, #1
   14e84:	strb	r3, [r4]
   14e88:	pop	{r4, pc}
   14e8c:			; <UNDEFINED> instruction: 0x0003e1b8
   14e90:	b	14e30 <pclose@plt+0x1b84>
   14e94:	push	{r4, r5, r6, lr}
   14e98:	mov	r4, r0
   14e9c:	ldrb	r3, [r0]
   14ea0:	mov	r5, r1
   14ea4:	cmp	r3, #0
   14ea8:	beq	14fd4 <pclose@plt+0x1d28>
   14eac:	mov	r2, r0
   14eb0:	mov	r0, #0
   14eb4:	b	14ec8 <pclose@plt+0x1c1c>
   14eb8:	cmp	r3, #0
   14ebc:	add	r2, r2, #1
   14ec0:	beq	14ee0 <pclose@plt+0x1c34>
   14ec4:	mov	r0, ip
   14ec8:	cmp	r3, #37	; 0x25
   14ecc:	add	ip, r0, #1
   14ed0:	ldrb	r3, [r2, #1]
   14ed4:	bne	14eb8 <pclose@plt+0x1c0c>
   14ed8:	cmp	r3, #0
   14edc:	bne	14fb0 <pclose@plt+0x1d04>
   14ee0:	add	r0, r0, #2
   14ee4:	bl	129a0 <gcry_xmalloc@plt>
   14ee8:	ldrb	r3, [r4]
   14eec:	cmp	r3, #0
   14ef0:	beq	14fcc <pclose@plt+0x1d20>
   14ef4:	and	r1, r5, #1
   14ef8:	mov	r2, r0
   14efc:	mov	r5, #32
   14f00:	b	14f34 <pclose@plt+0x1c88>
   14f04:	cmp	r3, #43	; 0x2b
   14f08:	movne	lr, #0
   14f0c:	andeq	lr, r1, #1
   14f10:	cmp	lr, #0
   14f14:	strbne	r5, [r2, #-1]
   14f18:	movne	r3, ip
   14f1c:	bne	14f28 <pclose@plt+0x1c7c>
   14f20:	strb	r3, [r2, #-1]
   14f24:	mov	r3, ip
   14f28:	cmp	r3, #0
   14f2c:	add	r4, r4, #1
   14f30:	beq	14fa4 <pclose@plt+0x1cf8>
   14f34:	cmp	r3, #37	; 0x25
   14f38:	add	r2, r2, #1
   14f3c:	ldrb	ip, [r4, #1]
   14f40:	bne	14f04 <pclose@plt+0x1c58>
   14f44:	cmp	ip, #0
   14f48:	beq	14f20 <pclose@plt+0x1c74>
   14f4c:	ldrb	lr, [r4, #2]
   14f50:	cmp	lr, #0
   14f54:	beq	14f20 <pclose@plt+0x1c74>
   14f58:	cmp	ip, #57	; 0x39
   14f5c:	addhi	ip, ip, #9
   14f60:	cmp	lr, #57	; 0x39
   14f64:	lsl	ip, ip, #4
   14f68:	subls	lr, lr, #48	; 0x30
   14f6c:	uxtb	ip, ip
   14f70:	uxtbls	lr, lr
   14f74:	bls	14f88 <pclose@plt+0x1cdc>
   14f78:	cmp	lr, #70	; 0x46
   14f7c:	subls	lr, lr, #55	; 0x37
   14f80:	subhi	lr, lr, #87	; 0x57
   14f84:	uxtb	lr, lr
   14f88:	ldrb	r3, [r4, #3]
   14f8c:	add	ip, ip, lr
   14f90:	add	r4, r4, #2
   14f94:	cmp	r3, #0
   14f98:	strb	ip, [r2, #-1]
   14f9c:	add	r4, r4, #1
   14fa0:	bne	14f34 <pclose@plt+0x1c88>
   14fa4:	mov	r3, #0
   14fa8:	strb	r3, [r2]
   14fac:	pop	{r4, r5, r6, pc}
   14fb0:	ldrb	r1, [r2, #2]
   14fb4:	cmp	r1, #0
   14fb8:	ldrbne	r3, [r2, #3]
   14fbc:	addne	r2, r2, #2
   14fc0:	bne	14eb8 <pclose@plt+0x1c0c>
   14fc4:	add	r2, r2, #1
   14fc8:	b	14ec4 <pclose@plt+0x1c18>
   14fcc:	mov	r2, r0
   14fd0:	b	14fa4 <pclose@plt+0x1cf8>
   14fd4:	mov	r0, #1
   14fd8:	b	14ee4 <pclose@plt+0x1c38>
   14fdc:	push	{r4, r5, r6, r7, r8, lr}
   14fe0:	mov	r5, r0
   14fe4:	ldr	r7, [pc, #136]	; 15074 <pclose@plt+0x1dc8>
   14fe8:	mov	r6, r1
   14fec:	ldr	r4, [r7]
   14ff0:	cmp	r4, #0
   14ff4:	bne	15008 <pclose@plt+0x1d5c>
   14ff8:	b	15038 <pclose@plt+0x1d8c>
   14ffc:	ldr	r4, [r4]
   15000:	cmp	r4, #0
   15004:	beq	15038 <pclose@plt+0x1d8c>
   15008:	mov	r1, r5
   1500c:	add	r0, r4, #8
   15010:	bl	12a24 <strcmp@plt>
   15014:	cmp	r0, #0
   15018:	bne	14ffc <pclose@plt+0x1d50>
   1501c:	ldr	r0, [r4, #4]
   15020:	bl	12b50 <gcry_free@plt>
   15024:	subs	r0, r6, #0
   15028:	beq	15030 <pclose@plt+0x1d84>
   1502c:	bl	12ff4 <gcry_xstrdup@plt>
   15030:	str	r0, [r4, #4]
   15034:	pop	{r4, r5, r6, r7, r8, pc}
   15038:	mov	r0, r5
   1503c:	bl	12e8c <strlen@plt>
   15040:	mov	r8, #0
   15044:	add	r0, r0, #12
   15048:	bl	129a0 <gcry_xmalloc@plt>
   1504c:	mov	r1, r5
   15050:	mov	r4, r0
   15054:	str	r8, [r0, #4]
   15058:	add	r0, r0, #8
   1505c:	bl	12cdc <strcpy@plt>
   15060:	ldr	r3, [r7]
   15064:	mov	r0, r8
   15068:	str	r3, [r4]
   1506c:	str	r4, [r7]
   15070:	b	15020 <pclose@plt+0x1d74>
   15074:			; <UNDEFINED> instruction: 0x0003e1bc
   15078:	push	{r4, r5, r6, r7, r8, lr}
   1507c:	mov	r7, r1
   15080:	ldrb	r3, [r0]
   15084:	mov	r6, r0
   15088:	mov	r8, r2
   1508c:	cmp	r3, #0
   15090:	mov	r1, r0
   15094:	bne	150a8 <pclose@plt+0x1dfc>
   15098:	b	15148 <pclose@plt+0x1e9c>
   1509c:	ldrb	r3, [r1, #1]!
   150a0:	cmp	r3, #0
   150a4:	beq	15148 <pclose@plt+0x1e9c>
   150a8:	cmp	r3, #9
   150ac:	cmpne	r3, #32
   150b0:	bne	1509c <pclose@plt+0x1df0>
   150b4:	mov	r4, r1
   150b8:	mov	r3, #0
   150bc:	strb	r3, [r4], #1
   150c0:	ldrb	r3, [r1, #1]
   150c4:	cmp	r3, #32
   150c8:	cmpne	r3, #9
   150cc:	bne	150e0 <pclose@plt+0x1e34>
   150d0:	ldrb	r3, [r4, #1]!
   150d4:	cmp	r3, #9
   150d8:	cmpne	r3, #32
   150dc:	beq	150d0 <pclose@plt+0x1e24>
   150e0:	mov	r0, r4
   150e4:	bl	12e8c <strlen@plt>
   150e8:	add	r0, r0, #20
   150ec:	bl	129a0 <gcry_xmalloc@plt>
   150f0:	mov	r1, r4
   150f4:	mov	r5, r0
   150f8:	add	r0, r0, #16
   150fc:	bl	12cdc <strcpy@plt>
   15100:	ldr	r1, [pc, #72]	; 15150 <pclose@plt+0x1ea4>
   15104:	mov	r0, r6
   15108:	str	r7, [r5, #8]
   1510c:	str	r8, [r5, #12]
   15110:	bl	12a24 <strcmp@plt>
   15114:	cmp	r0, #0
   15118:	bne	1513c <pclose@plt+0x1e90>
   1511c:	ldr	r3, [pc, #48]	; 15154 <pclose@plt+0x1ea8>
   15120:	mov	r2, #0
   15124:	str	r2, [r5]
   15128:	ldr	r2, [r3]
   1512c:	str	r0, [r5, #4]
   15130:	str	r5, [r3]
   15134:	str	r5, [r2]
   15138:	pop	{r4, r5, r6, r7, r8, pc}
   1513c:	mov	r0, r6
   15140:	bl	12ff4 <gcry_xstrdup@plt>
   15144:	b	1511c <pclose@plt+0x1e70>
   15148:	mov	r4, r1
   1514c:	b	150e0 <pclose@plt+0x1e34>
   15150:	andeq	r9, r2, r0, ror #10
   15154:	andeq	lr, r3, r8
   15158:	push	{r4, r5, lr}
   1515c:	sub	sp, sp, #44	; 0x2c
   15160:	ldr	r4, [pc, #68]	; 151ac <pclose@plt+0x1f00>
   15164:	mov	r3, r1
   15168:	ldr	r2, [pc, #64]	; 151b0 <pclose@plt+0x1f04>
   1516c:	ldr	ip, [r4]
   15170:	mov	r5, r0
   15174:	mov	r1, #35	; 0x23
   15178:	mov	r0, sp
   1517c:	str	ip, [sp, #36]	; 0x24
   15180:	bl	13048 <gpgrt_snprintf@plt>
   15184:	mov	r1, sp
   15188:	mov	r0, r5
   1518c:	bl	14fdc <pclose@plt+0x1d30>
   15190:	ldr	r2, [sp, #36]	; 0x24
   15194:	ldr	r3, [r4]
   15198:	cmp	r2, r3
   1519c:	bne	151a8 <pclose@plt+0x1efc>
   151a0:	add	sp, sp, #44	; 0x2c
   151a4:	pop	{r4, r5, pc}
   151a8:	bl	12bb0 <__stack_chk_fail@plt>
   151ac:	andeq	sp, r3, r0, asr #21
   151b0:	andeq	r9, r2, r4, ror #10
   151b4:	push	{r4, r5, r6, r7, r8, lr}
   151b8:	mov	r5, r1
   151bc:	ldrb	r3, [r1]
   151c0:	mov	r6, r0
   151c4:	cmp	r3, #0
   151c8:	beq	15258 <pclose@plt+0x1fac>
   151cc:	mov	r2, r1
   151d0:	b	151e0 <pclose@plt+0x1f34>
   151d4:	ldrb	r3, [r2, #1]!
   151d8:	cmp	r3, #0
   151dc:	beq	15258 <pclose@plt+0x1fac>
   151e0:	cmp	r3, #32
   151e4:	cmpne	r3, #9
   151e8:	bne	151d4 <pclose@plt+0x1f28>
   151ec:	mov	r4, r2
   151f0:	mov	r3, #0
   151f4:	strb	r3, [r4], #1
   151f8:	ldrb	r3, [r2, #1]
   151fc:	cmp	r3, #32
   15200:	cmpne	r3, #9
   15204:	bne	15218 <pclose@plt+0x1f6c>
   15208:	ldrb	r3, [r4, #1]!
   1520c:	cmp	r3, #9
   15210:	cmpne	r3, #32
   15214:	beq	15208 <pclose@plt+0x1f5c>
   15218:	cmp	r3, #0
   1521c:	beq	15258 <pclose@plt+0x1fac>
   15220:	ldrb	r3, [r4]
   15224:	cmp	r3, #0
   15228:	beq	1525c <pclose@plt+0x1fb0>
   1522c:	mov	r2, r4
   15230:	b	15240 <pclose@plt+0x1f94>
   15234:	ldrb	r3, [r2, #1]!
   15238:	cmp	r3, #0
   1523c:	beq	1525c <pclose@plt+0x1fb0>
   15240:	cmp	r3, #9
   15244:	cmpne	r3, #32
   15248:	bne	15234 <pclose@plt+0x1f88>
   1524c:	mov	r3, #0
   15250:	strb	r3, [r2]
   15254:	b	1525c <pclose@plt+0x1fb0>
   15258:	ldr	r4, [pc, #164]	; 15304 <pclose@plt+0x2058>
   1525c:	mov	r1, r4
   15260:	mov	r0, r5
   15264:	bl	13168 <fopen64@plt>
   15268:	subs	r8, r0, #0
   1526c:	beq	152e0 <pclose@plt+0x2034>
   15270:	bl	12fd0 <fileno@plt>
   15274:	ldr	r3, [pc, #140]	; 15308 <pclose@plt+0x205c>
   15278:	ldr	r3, [r3]
   1527c:	cmp	r3, #0
   15280:	mov	r7, r0
   15284:	bne	152c8 <pclose@plt+0x201c>
   15288:	mov	r0, r6
   1528c:	mov	r1, r7
   15290:	bl	12c34 <assuan_sendfd@plt>
   15294:	cmp	r0, #0
   15298:	bne	152a8 <pclose@plt+0x1ffc>
   1529c:	mov	r0, r8
   152a0:	pop	{r4, r5, r6, r7, r8, lr}
   152a4:	b	13024 <fclose@plt>
   152a8:	bl	13120 <gpg_strerror@plt>
   152ac:	mov	r1, r7
   152b0:	mov	r2, r0
   152b4:	ldr	r0, [pc, #80]	; 1530c <pclose@plt+0x2060>
   152b8:	bl	1c9b0 <pclose@plt+0x9704>
   152bc:	mov	r0, r8
   152c0:	pop	{r4, r5, r6, r7, r8, lr}
   152c4:	b	13024 <fclose@plt>
   152c8:	mov	r3, r0
   152cc:	mov	r2, r4
   152d0:	mov	r1, r5
   152d4:	ldr	r0, [pc, #52]	; 15310 <pclose@plt+0x2064>
   152d8:	bl	1c9b0 <pclose@plt+0x9704>
   152dc:	b	15288 <pclose@plt+0x1fdc>
   152e0:	bl	12f10 <__errno_location@plt>
   152e4:	ldr	r0, [r0]
   152e8:	bl	12db4 <strerror@plt>
   152ec:	mov	r2, r4
   152f0:	mov	r1, r5
   152f4:	pop	{r4, r5, r6, r7, r8, lr}
   152f8:	mov	r3, r0
   152fc:	ldr	r0, [pc, #16]	; 15314 <pclose@plt+0x2068>
   15300:	b	1c9b0 <pclose@plt+0x9704>
   15304:	strdeq	sl, [r2], -ip
   15308:	strdeq	lr, [r3], -r8
   1530c:			; <UNDEFINED> instruction: 0x000295b4
   15310:	andeq	r9, r2, ip, lsl #11
   15314:	andeq	r9, r2, r8, ror #10
   15318:	push	{r4, r5, r6, r7, r8, lr}
   1531c:	mov	r2, r0
   15320:	ldrb	r3, [r0]
   15324:	mov	r5, r0
   15328:	cmp	r3, #0
   1532c:	bne	15340 <pclose@plt+0x2094>
   15330:	b	154e0 <pclose@plt+0x2234>
   15334:	ldrb	r3, [r2, #1]!
   15338:	cmp	r3, #0
   1533c:	beq	154e0 <pclose@plt+0x2234>
   15340:	cmp	r3, #9
   15344:	cmpne	r3, #32
   15348:	bne	15334 <pclose@plt+0x2088>
   1534c:	mov	r6, r2
   15350:	mov	r3, #0
   15354:	strb	r3, [r6], #1
   15358:	ldrb	r3, [r2, #1]
   1535c:	cmp	r3, #32
   15360:	cmpne	r3, #9
   15364:	bne	15378 <pclose@plt+0x20cc>
   15368:	ldrb	r3, [r6, #1]!
   1536c:	cmp	r3, #9
   15370:	cmpne	r3, #32
   15374:	beq	15368 <pclose@plt+0x20bc>
   15378:	cmp	r3, #0
   1537c:	movne	r2, r6
   15380:	bne	153a0 <pclose@plt+0x20f4>
   15384:	b	153b0 <pclose@plt+0x2104>
   15388:	cmp	r3, #32
   1538c:	cmpne	r3, #9
   15390:	movne	r3, #1
   15394:	moveq	r3, #0
   15398:	beq	15414 <pclose@plt+0x2168>
   1539c:	mov	r2, r0
   153a0:	ldrb	r3, [r2, #1]
   153a4:	add	r0, r2, #1
   153a8:	cmp	r3, #0
   153ac:	bne	15388 <pclose@plt+0x20dc>
   153b0:	ldr	r4, [pc, #304]	; 154e8 <pclose@plt+0x223c>
   153b4:	mov	r1, r4
   153b8:	mov	r0, r6
   153bc:	bl	13168 <fopen64@plt>
   153c0:	subs	r8, r0, #0
   153c4:	beq	154bc <pclose@plt+0x2210>
   153c8:	bl	12fd0 <fileno@plt>
   153cc:	bl	12c1c <dup@plt>
   153d0:	cmp	r0, #255	; 0xff
   153d4:	mov	r7, r0
   153d8:	bhi	1547c <pclose@plt+0x21d0>
   153dc:	ldr	r1, [pc, #264]	; 154ec <pclose@plt+0x2240>
   153e0:	ldr	r3, [pc, #264]	; 154f0 <pclose@plt+0x2244>
   153e4:	mov	r2, #1
   153e8:	ldr	r1, [r1]
   153ec:	add	r3, r3, r0, lsl #2
   153f0:	cmp	r1, #0
   153f4:	str	r2, [r3, #4]
   153f8:	bne	154a4 <pclose@plt+0x21f8>
   153fc:	mov	r1, r7
   15400:	mov	r0, r5
   15404:	bl	15158 <pclose@plt+0x1eac>
   15408:	mov	r0, r8
   1540c:	pop	{r4, r5, r6, r7, r8, lr}
   15410:	b	13024 <fclose@plt>
   15414:	ldrb	r1, [r0, #1]
   15418:	add	r4, r2, #2
   1541c:	strb	r3, [r0]
   15420:	cmp	r1, #32
   15424:	cmpne	r1, #9
   15428:	bne	1543c <pclose@plt+0x2190>
   1542c:	ldrb	r1, [r4, #1]!
   15430:	cmp	r1, #9
   15434:	cmpne	r1, #32
   15438:	beq	1542c <pclose@plt+0x2180>
   1543c:	cmp	r1, #0
   15440:	beq	153b0 <pclose@plt+0x2104>
   15444:	ldrb	r3, [r4]
   15448:	cmp	r3, #0
   1544c:	beq	153b4 <pclose@plt+0x2108>
   15450:	mov	r2, r4
   15454:	b	15464 <pclose@plt+0x21b8>
   15458:	ldrb	r3, [r2, #1]!
   1545c:	cmp	r3, #0
   15460:	beq	153b4 <pclose@plt+0x2108>
   15464:	cmp	r3, #32
   15468:	cmpne	r3, #9
   1546c:	bne	15458 <pclose@plt+0x21ac>
   15470:	mov	r3, #0
   15474:	strb	r3, [r2]
   15478:	b	153b4 <pclose@plt+0x2108>
   1547c:	mov	r1, r0
   15480:	ldr	r0, [pc, #108]	; 154f4 <pclose@plt+0x2248>
   15484:	bl	1c9b0 <pclose@plt+0x9704>
   15488:	cmn	r7, #1
   1548c:	beq	15408 <pclose@plt+0x215c>
   15490:	mov	r0, r7
   15494:	bl	1324c <close@plt>
   15498:	mov	r0, r8
   1549c:	pop	{r4, r5, r6, r7, r8, lr}
   154a0:	b	13024 <fclose@plt>
   154a4:	mov	r3, r0
   154a8:	mov	r2, r4
   154ac:	mov	r1, r6
   154b0:	ldr	r0, [pc, #64]	; 154f8 <pclose@plt+0x224c>
   154b4:	bl	1c94c <pclose@plt+0x96a0>
   154b8:	b	153fc <pclose@plt+0x2150>
   154bc:	bl	12f10 <__errno_location@plt>
   154c0:	ldr	r0, [r0]
   154c4:	bl	12db4 <strerror@plt>
   154c8:	mov	r2, r4
   154cc:	mov	r1, r6
   154d0:	pop	{r4, r5, r6, r7, r8, lr}
   154d4:	mov	r3, r0
   154d8:	ldr	r0, [pc, #28]	; 154fc <pclose@plt+0x2250>
   154dc:	b	1c9b0 <pclose@plt+0x9704>
   154e0:	mov	r6, r2
   154e4:	b	153b0 <pclose@plt+0x2104>
   154e8:	strdeq	sl, [r2], -ip
   154ec:	strdeq	lr, [r3], -r8
   154f0:			; <UNDEFINED> instruction: 0x0003e1bc
   154f4:	ldrdeq	r9, [r2], -r8
   154f8:	andeq	r9, r2, ip, lsl #11
   154fc:	andeq	r9, r2, r8, ror #10
   15500:	push	{r4, lr}
   15504:	mov	r2, #10
   15508:	mov	r1, #0
   1550c:	bl	12a3c <strtol@plt>
   15510:	cmp	r0, #255	; 0xff
   15514:	bhi	15548 <pclose@plt+0x229c>
   15518:	ldr	r4, [pc, #52]	; 15554 <pclose@plt+0x22a8>
   1551c:	add	r4, r4, r0, lsl #2
   15520:	ldr	r3, [r4, #4]
   15524:	cmp	r3, #0
   15528:	beq	1553c <pclose@plt+0x2290>
   1552c:	bl	1324c <close@plt>
   15530:	mov	r3, #0
   15534:	str	r3, [r4, #4]
   15538:	pop	{r4, pc}
   1553c:	ldr	r0, [pc, #20]	; 15558 <pclose@plt+0x22ac>
   15540:	pop	{r4, lr}
   15544:	b	1c9b0 <pclose@plt+0x9704>
   15548:	ldr	r0, [pc, #12]	; 1555c <pclose@plt+0x22b0>
   1554c:	pop	{r4, lr}
   15550:	b	1c9b0 <pclose@plt+0x9704>
   15554:			; <UNDEFINED> instruction: 0x0003e1bc
   15558:	andeq	r9, r2, r0, lsl #12
   1555c:	strdeq	r9, [r2], -r4
   15560:	push	{r4, lr}
   15564:	bl	1ec6c <pclose@plt+0xb9c0>
   15568:	mov	r0, #0
   1556c:	pop	{r4, pc}
   15570:	sub	r0, r0, #1
   15574:	cmp	r0, #40	; 0x28
   15578:	ldrls	pc, [pc, r0, lsl #2]
   1557c:	b	15680 <pclose@plt+0x23d4>
   15580:	andeq	r5, r1, r0, ror r6
   15584:	andeq	r5, r1, r0, lsl #13
   15588:	andeq	r5, r1, r0, lsl #13
   1558c:	andeq	r5, r1, r0, lsl #13
   15590:	andeq	r5, r1, r0, lsl #13
   15594:	andeq	r5, r1, r0, lsl #13
   15598:	andeq	r5, r1, r0, lsl #13
   1559c:	andeq	r5, r1, r0, lsl #13
   155a0:	andeq	r5, r1, r0, lsl #13
   155a4:	andeq	r5, r1, r0, lsl #13
   155a8:	andeq	r5, r1, r4, lsr #12
   155ac:	andeq	r5, r1, r0, lsl #13
   155b0:	andeq	r5, r1, ip, lsr #12
   155b4:	andeq	r5, r1, r0, lsl #13
   155b8:	andeq	r5, r1, r0, lsl #13
   155bc:	andeq	r5, r1, r0, lsl #13
   155c0:	andeq	r5, r1, r4, lsr r6
   155c4:	andeq	r5, r1, r0, lsl #13
   155c8:	andeq	r5, r1, ip, lsr r6
   155cc:	andeq	r5, r1, r0, lsl #13
   155d0:	andeq	r5, r1, r0, lsl #13
   155d4:	andeq	r5, r1, r0, lsl #13
   155d8:	andeq	r5, r1, r0, lsl #13
   155dc:	andeq	r5, r1, r0, lsl #13
   155e0:	andeq	r5, r1, r0, lsl #13
   155e4:	andeq	r5, r1, r0, lsl #13
   155e8:	andeq	r5, r1, r0, lsl #13
   155ec:	andeq	r5, r1, r0, lsl #13
   155f0:	andeq	r5, r1, r0, lsl #13
   155f4:	andeq	r5, r1, r0, lsl #13
   155f8:	andeq	r5, r1, ip, asr #12
   155fc:	andeq	r5, r1, r4, asr r6
   15600:	andeq	r5, r1, r8, asr r6
   15604:	andeq	r5, r1, r0, lsl #13
   15608:	andeq	r5, r1, r0, lsl #13
   1560c:	andeq	r5, r1, r0, lsl #13
   15610:	andeq	r5, r1, r0, lsl #13
   15614:	andeq	r5, r1, r0, lsl #13
   15618:	andeq	r5, r1, r0, lsl #13
   1561c:	andeq	r5, r1, r0, ror r6
   15620:	andeq	r5, r1, r0, ror #12
   15624:	ldr	r0, [pc, #92]	; 15688 <pclose@plt+0x23dc>
   15628:	bx	lr
   1562c:	ldr	r0, [pc, #88]	; 1568c <pclose@plt+0x23e0>
   15630:	bx	lr
   15634:	ldr	r0, [pc, #84]	; 15690 <pclose@plt+0x23e4>
   15638:	bx	lr
   1563c:	mov	r2, #5
   15640:	ldr	r1, [pc, #76]	; 15694 <pclose@plt+0x23e8>
   15644:	mov	r0, #0
   15648:	b	12b98 <dcgettext@plt>
   1564c:	ldr	r0, [pc, #68]	; 15698 <pclose@plt+0x23ec>
   15650:	bx	lr
   15654:	b	1deec <pclose@plt+0xac40>
   15658:	ldr	r0, [pc, #60]	; 1569c <pclose@plt+0x23f0>
   1565c:	bx	lr
   15660:	mov	r2, #5
   15664:	ldr	r1, [pc, #52]	; 156a0 <pclose@plt+0x23f4>
   15668:	mov	r0, #0
   1566c:	b	12b98 <dcgettext@plt>
   15670:	mov	r2, #5
   15674:	ldr	r1, [pc, #40]	; 156a4 <pclose@plt+0x23f8>
   15678:	mov	r0, #0
   1567c:	b	12b98 <dcgettext@plt>
   15680:	mov	r0, #0
   15684:	bx	lr
   15688:	andeq	r9, r2, r0, lsr #12
   1568c:	andeq	r9, r2, r4, asr r6
   15690:	andeq	r9, r2, r0, asr #12
   15694:	andeq	r9, r2, ip, asr r6
   15698:	andeq	r9, r2, ip, asr #12
   1569c:	strdeq	ip, [r2], -r0
   156a0:			; <UNDEFINED> instruction: 0x000296b4
   156a4:	andeq	r9, r2, r0, lsl #13
   156a8:	ldr	r3, [pc, #92]	; 1570c <pclose@plt+0x2460>
   156ac:	push	{r4, r5, r6, lr}
   156b0:	mov	r5, r0
   156b4:	ldr	r4, [r3]
   156b8:	cmp	r4, #0
   156bc:	bne	156d0 <pclose@plt+0x2424>
   156c0:	b	156ec <pclose@plt+0x2440>
   156c4:	ldr	r4, [r4]
   156c8:	cmp	r4, #0
   156cc:	beq	156ec <pclose@plt+0x2440>
   156d0:	mov	r1, r5
   156d4:	add	r0, r4, #8
   156d8:	bl	12a24 <strcmp@plt>
   156dc:	cmp	r0, #0
   156e0:	bne	156c4 <pclose@plt+0x2418>
   156e4:	ldr	r0, [r4, #4]
   156e8:	pop	{r4, r5, r6, pc}
   156ec:	mov	r0, r5
   156f0:	bl	12d48 <getenv@plt>
   156f4:	cmp	r0, #0
   156f8:	popeq	{r4, r5, r6, pc}
   156fc:	mov	r1, r0
   15700:	mov	r0, r5
   15704:	pop	{r4, r5, r6, lr}
   15708:	b	14fdc <pclose@plt+0x1d30>
   1570c:			; <UNDEFINED> instruction: 0x0003e1bc
   15710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15714:	mov	r9, #0
   15718:	sub	sp, sp, #12
   1571c:	mov	r6, r0
   15720:	str	r0, [sp, #4]
   15724:	ldrb	r3, [r6]
   15728:	cmp	r3, #0
   1572c:	beq	1584c <pclose@plt+0x25a0>
   15730:	mov	r0, r6
   15734:	mov	r1, #36	; 0x24
   15738:	bl	12eb0 <strchr@plt>
   1573c:	subs	r7, r0, #0
   15740:	beq	1584c <pclose@plt+0x25a0>
   15744:	ldrb	r4, [r7, #1]
   15748:	cmp	r4, #36	; 0x24
   1574c:	beq	15910 <pclose@plt+0x2664>
   15750:	cmp	r4, #123	; 0x7b
   15754:	beq	15858 <pclose@plt+0x25ac>
   15758:	tst	r4, #223	; 0xdf
   1575c:	add	r0, r7, #1
   15760:	beq	15930 <pclose@plt+0x2684>
   15764:	cmp	r4, #9
   15768:	mov	r5, r0
   1576c:	beq	15984 <pclose@plt+0x26d8>
   15770:	ldrb	r4, [r5, #1]!
   15774:	tst	r4, #223	; 0xdf
   15778:	beq	158f8 <pclose@plt+0x264c>
   1577c:	cmp	r4, #9
   15780:	cmpne	r4, #36	; 0x24
   15784:	bne	15770 <pclose@plt+0x24c4>
   15788:	sub	fp, r5, r7
   1578c:	mov	r3, #0
   15790:	strb	r3, [r5]
   15794:	ldrb	r3, [r7, #1]
   15798:	cmp	r3, #0
   1579c:	beq	15908 <pclose@plt+0x265c>
   157a0:	bl	156a8 <pclose@plt+0x23fc>
   157a4:	mov	sl, r0
   157a8:	strb	r4, [r5]
   157ac:	mov	r4, #0
   157b0:	cmp	sl, #0
   157b4:	beq	158cc <pclose@plt+0x2620>
   157b8:	mov	r0, sl
   157bc:	bl	12e8c <strlen@plt>
   157c0:	cmp	r0, fp
   157c4:	addls	r6, r7, r0
   157c8:	mov	r8, r0
   157cc:	subls	fp, r5, r6
   157d0:	bls	158d8 <pclose@plt+0x262c>
   157d4:	cmp	r9, #0
   157d8:	ldr	r6, [sp, #4]
   157dc:	movne	r6, r9
   157e0:	mov	r0, r6
   157e4:	bl	12e8c <strlen@plt>
   157e8:	add	r3, r8, #1
   157ec:	sub	r7, r7, r6
   157f0:	add	r0, r3, r0
   157f4:	bl	129a0 <gcry_xmalloc@plt>
   157f8:	mov	r1, r6
   157fc:	mov	r2, r7
   15800:	mov	fp, r0
   15804:	bl	12b2c <memcpy@plt>
   15808:	mov	r2, r8
   1580c:	add	r8, r8, r7
   15810:	mov	r1, sl
   15814:	add	r0, fp, r7
   15818:	add	r6, fp, r8
   1581c:	bl	12b2c <memcpy@plt>
   15820:	mov	r1, r5
   15824:	mov	r0, r6
   15828:	bl	12cdc <strcpy@plt>
   1582c:	mov	r0, r9
   15830:	bl	12b50 <gcry_free@plt>
   15834:	mov	r9, fp
   15838:	mov	r0, r4
   1583c:	bl	12b50 <gcry_free@plt>
   15840:	ldrb	r3, [r6]
   15844:	cmp	r3, #0
   15848:	bne	15730 <pclose@plt+0x2484>
   1584c:	mov	r0, r9
   15850:	add	sp, sp, #12
   15854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15858:	ldrb	r6, [r7, #2]
   1585c:	add	r0, r7, #2
   15860:	cmp	r6, #0
   15864:	beq	1584c <pclose@plt+0x25a0>
   15868:	mov	r5, r0
   1586c:	mov	r3, #0
   15870:	b	15880 <pclose@plt+0x25d4>
   15874:	ldrb	r6, [r5, #1]!
   15878:	cmp	r6, #0
   1587c:	beq	1584c <pclose@plt+0x25a0>
   15880:	cmp	r6, #123	; 0x7b
   15884:	addeq	r3, r3, #1
   15888:	beq	15874 <pclose@plt+0x25c8>
   1588c:	cmp	r6, #125	; 0x7d
   15890:	bne	15874 <pclose@plt+0x25c8>
   15894:	subs	r3, r3, #1
   15898:	bcs	15874 <pclose@plt+0x25c8>
   1589c:	ldrb	r4, [r5]
   158a0:	cmp	r4, #125	; 0x7d
   158a4:	beq	15960 <pclose@plt+0x26b4>
   158a8:	cmp	r4, #0
   158ac:	add	r0, r7, #1
   158b0:	sub	fp, r5, r7
   158b4:	bne	1578c <pclose@plt+0x24e0>
   158b8:	bl	156a8 <pclose@plt+0x23fc>
   158bc:	mov	r4, #0
   158c0:	mov	sl, r0
   158c4:	cmp	sl, #0
   158c8:	bne	157b8 <pclose@plt+0x250c>
   158cc:	mov	r8, sl
   158d0:	ldr	sl, [pc, #180]	; 1598c <pclose@plt+0x26e0>
   158d4:	mov	r6, r7
   158d8:	mov	r0, r7
   158dc:	mov	r2, r8
   158e0:	mov	r1, sl
   158e4:	bl	12b2c <memcpy@plt>
   158e8:	cmp	fp, #0
   158ec:	movne	r7, r6
   158f0:	beq	15838 <pclose@plt+0x258c>
   158f4:	b	1593c <pclose@plt+0x2690>
   158f8:	cmp	r4, #0
   158fc:	sub	fp, r5, r7
   15900:	beq	158b8 <pclose@plt+0x260c>
   15904:	b	1578c <pclose@plt+0x24e0>
   15908:	ldr	sl, [pc, #124]	; 1598c <pclose@plt+0x26e0>
   1590c:	b	157a8 <pclose@plt+0x24fc>
   15910:	add	r6, r7, #1
   15914:	mov	r0, r6
   15918:	bl	12e8c <strlen@plt>
   1591c:	mov	r1, r6
   15920:	add	r2, r0, #1
   15924:	mov	r0, r7
   15928:	bl	12ab4 <memmove@plt>
   1592c:	b	15724 <pclose@plt+0x2478>
   15930:	cmp	r4, #0
   15934:	moveq	fp, #1
   15938:	bne	15980 <pclose@plt+0x26d4>
   1593c:	add	fp, r7, fp
   15940:	mov	r0, fp
   15944:	bl	12e8c <strlen@plt>
   15948:	mov	r1, fp
   1594c:	mov	r6, r7
   15950:	add	r2, r0, #1
   15954:	mov	r0, r7
   15958:	bl	12ab4 <memmove@plt>
   1595c:	b	15838 <pclose@plt+0x258c>
   15960:	mov	r3, #0
   15964:	strb	r3, [r5]
   15968:	bl	159cc <pclose@plt+0x2720>
   1596c:	strb	r6, [r5], #1
   15970:	sub	fp, r5, r7
   15974:	mov	sl, r0
   15978:	mov	r4, r0
   1597c:	b	157b0 <pclose@plt+0x2504>
   15980:	mov	r5, r0
   15984:	mov	fp, #1
   15988:	b	1578c <pclose@plt+0x24e0>
   1598c:	muleq	r2, r8, r7
   15990:	ldr	r3, [pc, #48]	; 159c8 <pclose@plt+0x271c>
   15994:	cmp	r0, #0
   15998:	push	{r4, r5, r6, lr}
   1599c:	moveq	r0, r3
   159a0:	bl	12ff4 <gcry_xstrdup@plt>
   159a4:	mov	r4, r0
   159a8:	bl	15710 <pclose@plt+0x2464>
   159ac:	subs	r5, r0, #0
   159b0:	beq	159c0 <pclose@plt+0x2714>
   159b4:	mov	r0, r4
   159b8:	bl	12b50 <gcry_free@plt>
   159bc:	mov	r4, r5
   159c0:	mov	r0, r4
   159c4:	pop	{r4, r5, r6, pc}
   159c8:	muleq	r2, r8, r7
   159cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159d0:	sub	sp, sp, #52	; 0x34
   159d4:	ldr	r4, [pc, #3376]	; 1670c <pclose@plt+0x3460>
   159d8:	ldr	r6, [pc, #3376]	; 16710 <pclose@plt+0x3464>
   159dc:	ldr	r3, [r4, #1028]	; 0x404
   159e0:	ldr	r2, [r6]
   159e4:	cmp	r3, #50	; 0x32
   159e8:	str	r2, [sp, #44]	; 0x2c
   159ec:	bgt	15d84 <pclose@plt+0x2ad8>
   159f0:	ldr	r2, [pc, #3356]	; 16714 <pclose@plt+0x3468>
   159f4:	add	r3, r3, #1
   159f8:	mov	fp, r0
   159fc:	ldr	r5, [r2, #56]	; 0x38
   15a00:	str	r3, [r4, #1028]	; 0x404
   15a04:	cmp	r5, #0
   15a08:	bne	15af0 <pclose@plt+0x2844>
   15a0c:	ldrb	sl, [fp]
   15a10:	cmp	sl, #0
   15a14:	beq	15b00 <pclose@plt+0x2854>
   15a18:	cmp	sl, #32
   15a1c:	cmpne	sl, #9
   15a20:	movne	r3, #1
   15a24:	moveq	r3, #0
   15a28:	beq	15ad8 <pclose@plt+0x282c>
   15a2c:	mov	r7, fp
   15a30:	b	15a44 <pclose@plt+0x2798>
   15a34:	cmp	r8, #32
   15a38:	cmpne	r8, #9
   15a3c:	beq	15a94 <pclose@plt+0x27e8>
   15a40:	mov	r7, r9
   15a44:	ldrb	r8, [r7, #1]
   15a48:	add	r9, r7, #1
   15a4c:	cmp	r8, #0
   15a50:	bne	15a34 <pclose@plt+0x2788>
   15a54:	mov	r0, fp
   15a58:	bl	156a8 <pclose@plt+0x23fc>
   15a5c:	subs	r7, r0, #0
   15a60:	bne	15b04 <pclose@plt+0x2858>
   15a64:	mov	r0, r5
   15a68:	bl	12b50 <gcry_free@plt>
   15a6c:	ldr	r3, [r4, #1028]	; 0x404
   15a70:	sub	r3, r3, #1
   15a74:	str	r3, [r4, #1028]	; 0x404
   15a78:	ldr	r2, [sp, #44]	; 0x2c
   15a7c:	ldr	r3, [r6]
   15a80:	mov	r0, r7
   15a84:	cmp	r2, r3
   15a88:	bne	16708 <pclose@plt+0x345c>
   15a8c:	add	sp, sp, #52	; 0x34
   15a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a94:	sub	r3, r9, fp
   15a98:	cmp	r3, #3
   15a9c:	beq	15c28 <pclose@plt+0x297c>
   15aa0:	cmp	r3, #8
   15aa4:	beq	15b14 <pclose@plt+0x2868>
   15aa8:	cmp	r3, #9
   15aac:	beq	15b90 <pclose@plt+0x28e4>
   15ab0:	cmp	r3, #10
   15ab4:	bne	15d1c <pclose@plt+0x2a70>
   15ab8:	mov	r2, r3
   15abc:	ldr	r1, [pc, #3156]	; 16718 <pclose@plt+0x346c>
   15ac0:	mov	r0, fp
   15ac4:	str	r3, [sp, #4]
   15ac8:	bl	1321c <strncmp@plt>
   15acc:	ldr	r3, [sp, #4]
   15ad0:	cmp	r0, #0
   15ad4:	beq	16598 <pclose@plt+0x32ec>
   15ad8:	mov	r2, fp
   15adc:	mov	r1, r3
   15ae0:	ldr	r0, [pc, #3124]	; 1671c <pclose@plt+0x3470>
   15ae4:	bl	1c9b0 <pclose@plt+0x9704>
   15ae8:	mov	r7, #0
   15aec:	b	15a64 <pclose@plt+0x27b8>
   15af0:	bl	15990 <pclose@plt+0x26e4>
   15af4:	subs	r5, r0, #0
   15af8:	movne	fp, r5
   15afc:	b	15a0c <pclose@plt+0x2760>
   15b00:	ldr	r7, [pc, #3096]	; 16720 <pclose@plt+0x3474>
   15b04:	mov	r0, r7
   15b08:	bl	12ff4 <gcry_xstrdup@plt>
   15b0c:	mov	r7, r0
   15b10:	b	15a64 <pclose@plt+0x27b8>
   15b14:	mov	r2, r3
   15b18:	ldr	r1, [pc, #3076]	; 16724 <pclose@plt+0x3478>
   15b1c:	mov	r0, fp
   15b20:	str	r3, [sp, #4]
   15b24:	bl	1321c <strncmp@plt>
   15b28:	ldr	r3, [sp, #4]
   15b2c:	subs	sl, r0, #0
   15b30:	beq	15f34 <pclose@plt+0x2c88>
   15b34:	mov	r2, r3
   15b38:	ldr	r1, [pc, #3048]	; 16728 <pclose@plt+0x347c>
   15b3c:	mov	r0, fp
   15b40:	str	r3, [sp, #4]
   15b44:	bl	1321c <strncmp@plt>
   15b48:	ldr	r3, [sp, #4]
   15b4c:	cmp	r0, #0
   15b50:	bne	15ad8 <pclose@plt+0x282c>
   15b54:	add	r0, r7, #2
   15b58:	ldr	r1, [pc, #3020]	; 1672c <pclose@plt+0x3480>
   15b5c:	bl	18ba8 <pclose@plt+0x58fc>
   15b60:	ldrb	r3, [r0]
   15b64:	mov	r7, r0
   15b68:	cmp	r3, #0
   15b6c:	beq	15a64 <pclose@plt+0x27b8>
   15b70:	mov	r2, r0
   15b74:	mov	r1, #43	; 0x2b
   15b78:	cmp	r3, #32
   15b7c:	strbeq	r1, [r2]
   15b80:	ldrb	r3, [r2, #1]!
   15b84:	cmp	r3, #0
   15b88:	bne	15b78 <pclose@plt+0x28cc>
   15b8c:	b	15a64 <pclose@plt+0x27b8>
   15b90:	mov	r2, r3
   15b94:	ldr	r1, [pc, #2964]	; 16730 <pclose@plt+0x3484>
   15b98:	mov	r0, fp
   15b9c:	str	r3, [sp, #4]
   15ba0:	bl	1321c <strncmp@plt>
   15ba4:	ldr	r3, [sp, #4]
   15ba8:	subs	r1, r0, #0
   15bac:	beq	16588 <pclose@plt+0x32dc>
   15bb0:	mov	r2, r3
   15bb4:	ldr	r1, [pc, #2936]	; 16734 <pclose@plt+0x3488>
   15bb8:	mov	r0, fp
   15bbc:	str	r3, [sp, #4]
   15bc0:	bl	1321c <strncmp@plt>
   15bc4:	ldr	r3, [sp, #4]
   15bc8:	subs	r2, r0, #0
   15bcc:	beq	15ec4 <pclose@plt+0x2c18>
   15bd0:	mov	r2, r3
   15bd4:	ldr	r1, [pc, #2908]	; 16738 <pclose@plt+0x348c>
   15bd8:	mov	r0, fp
   15bdc:	str	r3, [sp, #4]
   15be0:	bl	1321c <strncmp@plt>
   15be4:	ldr	r3, [sp, #4]
   15be8:	subs	r2, r0, #0
   15bec:	bne	15ad8 <pclose@plt+0x282c>
   15bf0:	mov	r1, r2
   15bf4:	add	r0, r7, #2
   15bf8:	bl	12a3c <strtol@plt>
   15bfc:	mov	r8, r0
   15c00:	bl	13120 <gpg_strerror@plt>
   15c04:	mov	r7, r0
   15c08:	mov	r0, r8
   15c0c:	bl	12e50 <gpg_strsource@plt>
   15c10:	mov	r1, r7
   15c14:	mov	r2, r0
   15c18:	ldr	r0, [pc, #2844]	; 1673c <pclose@plt+0x3490>
   15c1c:	bl	1ea9c <pclose@plt+0xb7f0>
   15c20:	mov	r7, r0
   15c24:	b	15a64 <pclose@plt+0x27b8>
   15c28:	mov	r2, r3
   15c2c:	ldr	r1, [pc, #2828]	; 16740 <pclose@plt+0x3494>
   15c30:	mov	r0, fp
   15c34:	str	r3, [sp, #4]
   15c38:	bl	1321c <strncmp@plt>
   15c3c:	ldr	r3, [sp, #4]
   15c40:	cmp	r0, #0
   15c44:	bne	15ad8 <pclose@plt+0x282c>
   15c48:	cmp	r8, #32
   15c4c:	cmpne	r8, #9
   15c50:	bne	15c64 <pclose@plt+0x29b8>
   15c54:	ldrb	r3, [r9, #1]!
   15c58:	cmp	r3, #9
   15c5c:	cmpne	r3, #32
   15c60:	beq	15c54 <pclose@plt+0x29a8>
   15c64:	ldr	r1, [pc, #2776]	; 16744 <pclose@plt+0x3498>
   15c68:	mov	r0, r9
   15c6c:	bl	12a24 <strcmp@plt>
   15c70:	cmp	r0, #0
   15c74:	beq	165c0 <pclose@plt+0x3314>
   15c78:	ldr	r1, [pc, #2760]	; 16748 <pclose@plt+0x349c>
   15c7c:	mov	r0, r9
   15c80:	bl	12a24 <strcmp@plt>
   15c84:	cmp	r0, #0
   15c88:	beq	15ee8 <pclose@plt+0x2c3c>
   15c8c:	ldr	r1, [pc, #2744]	; 1674c <pclose@plt+0x34a0>
   15c90:	mov	r0, r9
   15c94:	bl	12a24 <strcmp@plt>
   15c98:	cmp	r0, #0
   15c9c:	beq	16668 <pclose@plt+0x33bc>
   15ca0:	ldr	r1, [pc, #2728]	; 16750 <pclose@plt+0x34a4>
   15ca4:	mov	r0, r9
   15ca8:	bl	12a24 <strcmp@plt>
   15cac:	cmp	r0, #0
   15cb0:	beq	16678 <pclose@plt+0x33cc>
   15cb4:	ldr	r1, [pc, #2712]	; 16754 <pclose@plt+0x34a8>
   15cb8:	mov	r0, r9
   15cbc:	bl	12a24 <strcmp@plt>
   15cc0:	cmp	r0, #0
   15cc4:	beq	166b4 <pclose@plt+0x3408>
   15cc8:	ldr	r1, [pc, #2696]	; 16758 <pclose@plt+0x34ac>
   15ccc:	mov	r0, r9
   15cd0:	bl	12a24 <strcmp@plt>
   15cd4:	cmp	r0, #0
   15cd8:	beq	166cc <pclose@plt+0x3420>
   15cdc:	ldr	r1, [pc, #2680]	; 1675c <pclose@plt+0x34b0>
   15ce0:	mov	r0, r9
   15ce4:	bl	12a24 <strcmp@plt>
   15ce8:	cmp	r0, #0
   15cec:	beq	166f8 <pclose@plt+0x344c>
   15cf0:	ldr	r1, [pc, #2664]	; 16760 <pclose@plt+0x34b4>
   15cf4:	mov	r0, r9
   15cf8:	bl	12a24 <strcmp@plt>
   15cfc:	cmp	r0, #0
   15d00:	bne	166dc <pclose@plt+0x3430>
   15d04:	ldr	r3, [pc, #2648]	; 16764 <pclose@plt+0x34b8>
   15d08:	ldr	r0, [pc, #2648]	; 16768 <pclose@plt+0x34bc>
   15d0c:	ldr	r1, [r3, #4]
   15d10:	bl	1ea9c <pclose@plt+0xb7f0>
   15d14:	mov	r7, r0
   15d18:	b	15a64 <pclose@plt+0x27b8>
   15d1c:	cmp	r3, #7
   15d20:	bne	15d94 <pclose@plt+0x2ae8>
   15d24:	mov	r2, r3
   15d28:	ldr	r1, [pc, #2620]	; 1676c <pclose@plt+0x34c0>
   15d2c:	mov	r0, fp
   15d30:	str	r3, [sp, #4]
   15d34:	bl	1321c <strncmp@plt>
   15d38:	ldr	r3, [sp, #4]
   15d3c:	cmp	r0, #0
   15d40:	beq	165ac <pclose@plt+0x3300>
   15d44:	mov	r2, r3
   15d48:	ldr	r1, [pc, #2592]	; 16770 <pclose@plt+0x34c4>
   15d4c:	mov	r0, fp
   15d50:	str	r3, [sp, #4]
   15d54:	bl	1321c <strncmp@plt>
   15d58:	ldr	r3, [sp, #4]
   15d5c:	subs	r2, r0, #0
   15d60:	bne	15ad8 <pclose@plt+0x282c>
   15d64:	mov	r1, r2
   15d68:	add	r0, r7, #2
   15d6c:	bl	12a3c <strtol@plt>
   15d70:	uxth	r1, r0
   15d74:	ldr	r0, [pc, #2540]	; 16768 <pclose@plt+0x34bc>
   15d78:	bl	1ea9c <pclose@plt+0xb7f0>
   15d7c:	mov	r7, r0
   15d80:	b	15a64 <pclose@plt+0x27b8>
   15d84:	ldr	r0, [pc, #2536]	; 16774 <pclose@plt+0x34c8>
   15d88:	bl	1c9b0 <pclose@plt+0x9704>
   15d8c:	mov	r7, #0
   15d90:	b	15a78 <pclose@plt+0x27cc>
   15d94:	cmp	r3, #1
   15d98:	bne	15ad8 <pclose@plt+0x282c>
   15d9c:	mov	r1, sl
   15da0:	ldr	r0, [pc, #2512]	; 16778 <pclose@plt+0x34cc>
   15da4:	str	r3, [sp, #4]
   15da8:	bl	12eb0 <strchr@plt>
   15dac:	ldr	r3, [sp, #4]
   15db0:	cmp	r0, #0
   15db4:	beq	15ad8 <pclose@plt+0x282c>
   15db8:	ldrb	r3, [r9, #1]
   15dbc:	add	r7, r7, #2
   15dc0:	cmp	r3, #9
   15dc4:	cmpne	r3, #32
   15dc8:	bne	15ddc <pclose@plt+0x2b30>
   15dcc:	ldrb	r3, [r7, #1]!
   15dd0:	cmp	r3, #9
   15dd4:	cmpne	r3, #32
   15dd8:	beq	15dcc <pclose@plt+0x2b20>
   15ddc:	cmp	r3, #0
   15de0:	beq	15ae8 <pclose@plt+0x283c>
   15de4:	mov	r2, #0
   15de8:	mov	r1, r2
   15dec:	mov	r0, r7
   15df0:	bl	12a3c <strtol@plt>
   15df4:	ldrb	r2, [r7]
   15df8:	tst	r2, #223	; 0xdf
   15dfc:	mov	r8, r0
   15e00:	bne	15e14 <pclose@plt+0x2b68>
   15e04:	b	15e1c <pclose@plt+0x2b70>
   15e08:	ldrb	r2, [r7, #1]!
   15e0c:	tst	r2, #223	; 0xdf
   15e10:	beq	15e1c <pclose@plt+0x2b70>
   15e14:	cmp	r2, #9
   15e18:	bne	15e08 <pclose@plt+0x2b5c>
   15e1c:	cmp	sl, #33	; 0x21
   15e20:	clzeq	r8, r8
   15e24:	lsreq	r8, r8, #5
   15e28:	cmp	r2, #0
   15e2c:	beq	16688 <pclose@plt+0x33dc>
   15e30:	cmp	r2, #9
   15e34:	cmpne	r2, #32
   15e38:	bne	15e54 <pclose@plt+0x2ba8>
   15e3c:	ldrb	r3, [r7, #1]!
   15e40:	cmp	r3, #9
   15e44:	cmpne	r3, #32
   15e48:	beq	15e3c <pclose@plt+0x2b90>
   15e4c:	cmp	r3, #0
   15e50:	beq	16688 <pclose@plt+0x33dc>
   15e54:	mov	r2, #0
   15e58:	mov	r1, r2
   15e5c:	mov	r0, r7
   15e60:	bl	12a3c <strtol@plt>
   15e64:	ldrb	r3, [r7]
   15e68:	tst	r3, #223	; 0xdf
   15e6c:	bne	15e80 <pclose@plt+0x2bd4>
   15e70:	b	15e88 <pclose@plt+0x2bdc>
   15e74:	ldrb	r3, [r7, #1]!
   15e78:	tst	r3, #223	; 0xdf
   15e7c:	beq	15e88 <pclose@plt+0x2bdc>
   15e80:	cmp	r3, #9
   15e84:	bne	15e74 <pclose@plt+0x2bc8>
   15e88:	cmp	sl, #42	; 0x2a
   15e8c:	beq	165e8 <pclose@plt+0x333c>
   15e90:	bls	15ef8 <pclose@plt+0x2c4c>
   15e94:	cmp	sl, #45	; 0x2d
   15e98:	beq	1664c <pclose@plt+0x33a0>
   15e9c:	bls	15f24 <pclose@plt+0x2c78>
   15ea0:	cmp	sl, #47	; 0x2f
   15ea4:	beq	165f0 <pclose@plt+0x3344>
   15ea8:	cmp	sl, #124	; 0x7c
   15eac:	bne	15f10 <pclose@plt+0x2c64>
   15eb0:	orrs	r3, r0, r8
   15eb4:	movne	r8, #1
   15eb8:	moveq	r8, #0
   15ebc:	ldrb	r2, [r7]
   15ec0:	b	15e28 <pclose@plt+0x2b7c>
   15ec4:	mov	r1, r2
   15ec8:	add	r0, r7, #2
   15ecc:	bl	12a3c <strtol@plt>
   15ed0:	lsr	r1, r0, #24
   15ed4:	and	r1, r1, #127	; 0x7f
   15ed8:	ldr	r0, [pc, #2184]	; 16768 <pclose@plt+0x34bc>
   15edc:	bl	1ea9c <pclose@plt+0xb7f0>
   15ee0:	mov	r7, r0
   15ee4:	b	15a64 <pclose@plt+0x27b8>
   15ee8:	bl	1deec <pclose@plt+0xac40>
   15eec:	bl	12ff4 <gcry_xstrdup@plt>
   15ef0:	mov	r7, r0
   15ef4:	b	15a64 <pclose@plt+0x27b8>
   15ef8:	cmp	sl, #37	; 0x25
   15efc:	beq	16624 <pclose@plt+0x3378>
   15f00:	cmp	sl, #38	; 0x26
   15f04:	beq	1660c <pclose@plt+0x3360>
   15f08:	cmp	sl, #33	; 0x21
   15f0c:	beq	16640 <pclose@plt+0x3394>
   15f10:	mov	r1, sl
   15f14:	ldr	r0, [pc, #2144]	; 1677c <pclose@plt+0x34d0>
   15f18:	bl	1c9b0 <pclose@plt+0x9704>
   15f1c:	mov	r7, #0
   15f20:	b	15a64 <pclose@plt+0x27b8>
   15f24:	cmp	sl, #43	; 0x2b
   15f28:	bne	15f10 <pclose@plt+0x2c64>
   15f2c:	add	r8, r8, r0
   15f30:	b	15ebc <pclose@plt+0x2c10>
   15f34:	ldrb	lr, [r9, #1]
   15f38:	add	r8, r7, #2
   15f3c:	cmp	lr, #0
   15f40:	beq	166c4 <pclose@plt+0x3418>
   15f44:	ldrb	r2, [r7, #3]
   15f48:	mov	r1, r8
   15f4c:	mov	ip, #1
   15f50:	cmp	lr, #92	; 0x5c
   15f54:	mov	r0, ip
   15f58:	beq	15f8c <pclose@plt+0x2ce0>
   15f5c:	cmp	r2, #0
   15f60:	add	r0, r1, #1
   15f64:	beq	161d4 <pclose@plt+0x2f28>
   15f68:	ldrb	r3, [r1, #2]
   15f6c:	mov	lr, r2
   15f70:	mov	sl, ip
   15f74:	cmp	lr, #92	; 0x5c
   15f78:	add	ip, ip, #1
   15f7c:	mov	r1, r0
   15f80:	mov	r2, r3
   15f84:	mov	r0, ip
   15f88:	bne	15f5c <pclose@plt+0x2cb0>
   15f8c:	cmp	r2, #0
   15f90:	beq	161d8 <pclose@plt+0x2f2c>
   15f94:	mov	r7, r1
   15f98:	sub	r3, r2, #34	; 0x22
   15f9c:	ldrb	lr, [r7, #2]!
   15fa0:	cmp	r3, #86	; 0x56
   15fa4:	ldrls	pc, [pc, r3, lsl #2]
   15fa8:	b	16180 <pclose@plt+0x2ed4>
   15fac:	andeq	r6, r1, r4, ror #2
   15fb0:	andeq	r6, r1, r0, lsl #3
   15fb4:	andeq	r6, r1, r0, lsl #3
   15fb8:	andeq	r6, r1, r0, lsl #3
   15fbc:	andeq	r6, r1, r0, lsl #3
   15fc0:	andeq	r6, r1, r4, ror #2
   15fc4:	andeq	r6, r1, r0, lsl #3
   15fc8:	andeq	r6, r1, r0, lsl #3
   15fcc:	andeq	r6, r1, r0, lsl #3
   15fd0:	andeq	r6, r1, r0, lsl #3
   15fd4:	andeq	r6, r1, r0, lsl #3
   15fd8:	andeq	r6, r1, r0, lsl #3
   15fdc:	andeq	r6, r1, r0, lsl #3
   15fe0:	andeq	r6, r1, r0, lsl #3
   15fe4:	andeq	r6, r1, r0, lsl #3
   15fe8:	andeq	r6, r1, r0, lsl #3
   15fec:	andeq	r6, r1, r0, lsl #3
   15ff0:	andeq	r6, r1, r0, lsl #3
   15ff4:	andeq	r6, r1, r0, lsl #3
   15ff8:	andeq	r6, r1, r0, lsl #3
   15ffc:	andeq	r6, r1, r0, lsl #3
   16000:	andeq	r6, r1, r0, lsl #3
   16004:	andeq	r6, r1, r0, lsl #3
   16008:	andeq	r6, r1, r0, lsl #3
   1600c:	andeq	r6, r1, r0, lsl #3
   16010:	andeq	r6, r1, r0, lsl #3
   16014:	andeq	r6, r1, r0, lsl #3
   16018:	andeq	r6, r1, r0, lsl #3
   1601c:	andeq	r6, r1, r0, lsl #3
   16020:	andeq	r6, r1, r0, lsl #3
   16024:	andeq	r6, r1, r0, lsl #3
   16028:	andeq	r6, r1, r0, lsl #3
   1602c:	andeq	r6, r1, r0, lsl #3
   16030:	andeq	r6, r1, r0, lsl #3
   16034:	andeq	r6, r1, r0, lsl #3
   16038:	andeq	r6, r1, r0, lsl #3
   1603c:	andeq	r6, r1, r0, lsl #3
   16040:	andeq	r6, r1, r0, lsl #3
   16044:	andeq	r6, r1, r0, lsl #3
   16048:	andeq	r6, r1, r0, lsl #3
   1604c:	andeq	r6, r1, r0, lsl #3
   16050:	andeq	r6, r1, r0, lsl #3
   16054:	andeq	r6, r1, r0, lsl #3
   16058:	andeq	r6, r1, r0, lsl #3
   1605c:	andeq	r6, r1, r0, lsl #3
   16060:	andeq	r6, r1, r0, lsl #3
   16064:	andeq	r6, r1, r0, lsl #3
   16068:	andeq	r6, r1, r0, lsl #3
   1606c:	andeq	r6, r1, r0, lsl #3
   16070:	andeq	r6, r1, r0, lsl #3
   16074:	andeq	r6, r1, r0, lsl #3
   16078:	andeq	r6, r1, r0, lsl #3
   1607c:	andeq	r6, r1, r0, lsl #3
   16080:	andeq	r6, r1, r0, lsl #3
   16084:	andeq	r6, r1, r0, lsl #3
   16088:	andeq	r6, r1, r0, lsl #3
   1608c:	andeq	r6, r1, r0, lsl #3
   16090:	andeq	r6, r1, r0, lsl #3
   16094:	andeq	r6, r1, r4, ror #2
   16098:	andeq	r6, r1, r0, lsl #3
   1609c:	andeq	r6, r1, r0, lsl #3
   160a0:	andeq	r6, r1, r0, lsl #3
   160a4:	andeq	r6, r1, r0, lsl #3
   160a8:	andeq	r6, r1, r0, lsl #3
   160ac:	andeq	r6, r1, r4, ror #2
   160b0:	andeq	r6, r1, r0, lsl #3
   160b4:	andeq	r6, r1, r0, lsl #3
   160b8:	andeq	r6, r1, r0, lsl #3
   160bc:	andeq	r6, r1, r4, ror #2
   160c0:	andeq	r6, r1, r0, lsl #3
   160c4:	andeq	r6, r1, r0, lsl #3
   160c8:	andeq	r6, r1, r0, lsl #3
   160cc:	andeq	r6, r1, r0, lsl #3
   160d0:	andeq	r6, r1, r0, lsl #3
   160d4:	andeq	r6, r1, r0, lsl #3
   160d8:	andeq	r6, r1, r0, lsl #3
   160dc:	andeq	r6, r1, r4, ror #2
   160e0:	andeq	r6, r1, r0, lsl #3
   160e4:	andeq	r6, r1, r0, lsl #3
   160e8:	andeq	r6, r1, r0, lsl #3
   160ec:	andeq	r6, r1, r4, ror #2
   160f0:	andeq	r6, r1, r0, lsl #3
   160f4:	andeq	r6, r1, r4, ror #2
   160f8:	andeq	r6, r1, r0, lsl #3
   160fc:	andeq	r6, r1, r4, ror #2
   16100:	andeq	r6, r1, r0, lsl #3
   16104:	andeq	r6, r1, r8, lsl #2
   16108:	cmp	lr, #0
   1610c:	beq	161d8 <pclose@plt+0x2f2c>
   16110:	ldrb	r2, [r1, #3]
   16114:	cmp	r2, #0
   16118:	beq	161c8 <pclose@plt+0x2f1c>
   1611c:	bic	r1, lr, #32
   16120:	sub	r1, r1, #65	; 0x41
   16124:	sub	r3, lr, #48	; 0x30
   16128:	uxtb	r1, r1
   1612c:	uxtb	r3, r3
   16130:	cmp	r3, #9
   16134:	cmphi	r1, #5
   16138:	bhi	16658 <pclose@plt+0x33ac>
   1613c:	bic	r3, r2, #32
   16140:	sub	r1, r2, #48	; 0x30
   16144:	sub	r3, r3, #65	; 0x41
   16148:	cmp	r1, #9
   1614c:	cmphi	r3, #5
   16150:	mov	r1, r7
   16154:	bhi	15f50 <pclose@plt+0x2ca4>
   16158:	mov	sl, ip
   1615c:	add	ip, ip, #1
   16160:	b	15f50 <pclose@plt+0x2ca4>
   16164:	cmp	lr, #0
   16168:	beq	166ac <pclose@plt+0x3400>
   1616c:	ldrb	r2, [r1, #3]
   16170:	mov	sl, ip
   16174:	mov	r1, r7
   16178:	add	ip, ip, #1
   1617c:	b	15f50 <pclose@plt+0x2ca4>
   16180:	cmp	lr, #0
   16184:	beq	161d8 <pclose@plt+0x2f2c>
   16188:	ldrb	r3, [r1, #3]
   1618c:	cmp	r3, #0
   16190:	beq	161c8 <pclose@plt+0x2f1c>
   16194:	sub	r2, r2, #48	; 0x30
   16198:	cmp	r2, #7
   1619c:	bhi	16654 <pclose@plt+0x33a8>
   161a0:	sub	r2, lr, #48	; 0x30
   161a4:	uxtb	r2, r2
   161a8:	cmp	r2, #7
   161ac:	bhi	16654 <pclose@plt+0x33a8>
   161b0:	sub	r2, r3, #48	; 0x30
   161b4:	cmp	r2, #7
   161b8:	mov	r1, r7
   161bc:	mov	r2, r3
   161c0:	bls	16158 <pclose@plt+0x2eac>
   161c4:	b	15f50 <pclose@plt+0x2ca4>
   161c8:	cmp	lr, #92	; 0x5c
   161cc:	mov	r0, ip
   161d0:	beq	161d8 <pclose@plt+0x2f2c>
   161d4:	add	r0, ip, #1
   161d8:	bl	129a0 <gcry_xmalloc@plt>
   161dc:	ldrb	r2, [r9, #1]
   161e0:	cmp	r2, #0
   161e4:	movne	r9, #92	; 0x5c
   161e8:	movne	lr, #39	; 0x27
   161ec:	movne	fp, #8
   161f0:	mov	r7, r0
   161f4:	mov	r3, r0
   161f8:	bne	16218 <pclose@plt+0x2f6c>
   161fc:	b	16424 <pclose@plt+0x3178>
   16200:	strb	r2, [r3], #1
   16204:	ldrb	r2, [r8, #1]
   16208:	add	r1, r8, #1
   1620c:	cmp	r2, #0
   16210:	beq	16424 <pclose@plt+0x3178>
   16214:	mov	r8, r1
   16218:	cmp	r2, #92	; 0x5c
   1621c:	bne	16200 <pclose@plt+0x2f54>
   16220:	ldrb	r1, [r8, #1]
   16224:	cmp	r1, #0
   16228:	beq	16424 <pclose@plt+0x3178>
   1622c:	sub	r2, r1, #34	; 0x22
   16230:	cmp	r2, #86	; 0x56
   16234:	ldrls	pc, [pc, r2, lsl #2]
   16238:	b	16520 <pclose@plt+0x3274>
   1623c:	andeq	r6, r1, r4, lsl #10
   16240:	andeq	r6, r1, r0, lsr #10
   16244:	andeq	r6, r1, r0, lsr #10
   16248:	andeq	r6, r1, r0, lsr #10
   1624c:	andeq	r6, r1, r0, lsr #10
   16250:	andeq	r6, r1, ip, ror #9
   16254:	andeq	r6, r1, r0, lsr #10
   16258:	andeq	r6, r1, r0, lsr #10
   1625c:	andeq	r6, r1, r0, lsr #10
   16260:	andeq	r6, r1, r0, lsr #10
   16264:	andeq	r6, r1, r0, lsr #10
   16268:	andeq	r6, r1, r0, lsr #10
   1626c:	andeq	r6, r1, r0, lsr #10
   16270:	andeq	r6, r1, r0, lsr #10
   16274:	andeq	r6, r1, r0, lsr #10
   16278:	andeq	r6, r1, r0, lsr #10
   1627c:	andeq	r6, r1, r0, lsr #10
   16280:	andeq	r6, r1, r0, lsr #10
   16284:	andeq	r6, r1, r0, lsr #10
   16288:	andeq	r6, r1, r0, lsr #10
   1628c:	andeq	r6, r1, r0, lsr #10
   16290:	andeq	r6, r1, r0, lsr #10
   16294:	andeq	r6, r1, r0, lsr #10
   16298:	andeq	r6, r1, r0, lsr #10
   1629c:	andeq	r6, r1, r0, lsr #10
   162a0:	andeq	r6, r1, r0, lsr #10
   162a4:	andeq	r6, r1, r0, lsr #10
   162a8:	andeq	r6, r1, r0, lsr #10
   162ac:	andeq	r6, r1, r0, lsr #10
   162b0:	andeq	r6, r1, r0, lsr #10
   162b4:	andeq	r6, r1, r0, lsr #10
   162b8:	andeq	r6, r1, r0, lsr #10
   162bc:	andeq	r6, r1, r0, lsr #10
   162c0:	andeq	r6, r1, r0, lsr #10
   162c4:	andeq	r6, r1, r0, lsr #10
   162c8:	andeq	r6, r1, r0, lsr #10
   162cc:	andeq	r6, r1, r0, lsr #10
   162d0:	andeq	r6, r1, r0, lsr #10
   162d4:	andeq	r6, r1, r0, lsr #10
   162d8:	andeq	r6, r1, r0, lsr #10
   162dc:	andeq	r6, r1, r0, lsr #10
   162e0:	andeq	r6, r1, r0, lsr #10
   162e4:	andeq	r6, r1, r0, lsr #10
   162e8:	andeq	r6, r1, r0, lsr #10
   162ec:	andeq	r6, r1, r0, lsr #10
   162f0:	andeq	r6, r1, r0, lsr #10
   162f4:	andeq	r6, r1, r0, lsr #10
   162f8:	andeq	r6, r1, r0, lsr #10
   162fc:	andeq	r6, r1, r0, lsr #10
   16300:	andeq	r6, r1, r0, lsr #10
   16304:	andeq	r6, r1, r0, lsr #10
   16308:	andeq	r6, r1, r0, lsr #10
   1630c:	andeq	r6, r1, r0, lsr #10
   16310:	andeq	r6, r1, r0, lsr #10
   16314:	andeq	r6, r1, r0, lsr #10
   16318:	andeq	r6, r1, r0, lsr #10
   1631c:	andeq	r6, r1, r0, lsr #10
   16320:	andeq	r6, r1, r0, lsr #10
   16324:	ldrdeq	r6, [r1], -r4
   16328:	andeq	r6, r1, r0, lsr #10
   1632c:	andeq	r6, r1, r0, lsr #10
   16330:	andeq	r6, r1, r0, lsr #10
   16334:	andeq	r6, r1, r0, lsr #10
   16338:	andeq	r6, r1, r0, lsr #10
   1633c:			; <UNDEFINED> instruction: 0x000164bc
   16340:	andeq	r6, r1, r0, lsr #10
   16344:	andeq	r6, r1, r0, lsr #10
   16348:	andeq	r6, r1, r0, lsr #10
   1634c:	andeq	r6, r1, r0, lsr #9
   16350:	andeq	r6, r1, r0, lsr #10
   16354:	andeq	r6, r1, r0, lsr #10
   16358:	andeq	r6, r1, r0, lsr #10
   1635c:	andeq	r6, r1, r0, lsr #10
   16360:	andeq	r6, r1, r0, lsr #10
   16364:	andeq	r6, r1, r0, lsr #10
   16368:	andeq	r6, r1, r0, lsr #10
   1636c:	andeq	r6, r1, r4, lsl #9
   16370:	andeq	r6, r1, r0, lsr #10
   16374:	andeq	r6, r1, r0, lsr #10
   16378:	andeq	r6, r1, r0, lsr #10
   1637c:	andeq	r6, r1, r8, ror #8
   16380:	andeq	r6, r1, r0, lsr #10
   16384:	andeq	r6, r1, ip, asr #8
   16388:	andeq	r6, r1, r0, lsr #10
   1638c:	andeq	r6, r1, r0, lsr r4
   16390:	andeq	r6, r1, r0, lsr #10
   16394:	muleq	r1, r8, r3
   16398:	ldrb	r2, [r8, #2]
   1639c:	cmp	r2, #0
   163a0:	beq	16424 <pclose@plt+0x3178>
   163a4:	ldrb	r0, [r8, #3]
   163a8:	cmp	r0, #0
   163ac:	beq	16660 <pclose@plt+0x33b4>
   163b0:	bic	r1, r2, #32
   163b4:	sub	r1, r1, #65	; 0x41
   163b8:	sub	sl, r2, #48	; 0x30
   163bc:	cmp	sl, #9
   163c0:	cmphi	r1, #5
   163c4:	bhi	16660 <pclose@plt+0x33b4>
   163c8:	sub	r1, r0, #48	; 0x30
   163cc:	bic	sl, r0, #32
   163d0:	uxtb	r1, r1
   163d4:	sub	sl, sl, #65	; 0x41
   163d8:	cmp	r1, #9
   163dc:	cmphi	sl, #5
   163e0:	bhi	16660 <pclose@plt+0x33b4>
   163e4:	cmp	r2, #57	; 0x39
   163e8:	addhi	r2, r2, #9
   163ec:	cmp	r0, #57	; 0x39
   163f0:	lsl	r2, r2, #4
   163f4:	uxtb	r2, r2
   163f8:	bls	1640c <pclose@plt+0x3160>
   163fc:	cmp	r0, #70	; 0x46
   16400:	subls	r1, r0, #55	; 0x37
   16404:	subhi	r1, r0, #87	; 0x57
   16408:	uxtb	r1, r1
   1640c:	add	r2, r2, r1
   16410:	strb	r2, [r3], #1
   16414:	ldrb	r2, [r8, #4]
   16418:	add	r8, r8, #4
   1641c:	cmp	r2, #0
   16420:	bne	16218 <pclose@plt+0x2f6c>
   16424:	mov	r2, #0
   16428:	strb	r2, [r3]
   1642c:	b	15a64 <pclose@plt+0x27b8>
   16430:	mov	r2, #11
   16434:	strb	r2, [r3], #1
   16438:	ldrb	r2, [r8, #2]
   1643c:	add	r1, r8, #2
   16440:	cmp	r2, #0
   16444:	bne	16214 <pclose@plt+0x2f68>
   16448:	b	16424 <pclose@plt+0x3178>
   1644c:	mov	r2, #9
   16450:	strb	r2, [r3], #1
   16454:	ldrb	r2, [r8, #2]
   16458:	add	r1, r8, #2
   1645c:	cmp	r2, #0
   16460:	bne	16214 <pclose@plt+0x2f68>
   16464:	b	16424 <pclose@plt+0x3178>
   16468:	mov	r2, #13
   1646c:	strb	r2, [r3], #1
   16470:	ldrb	r2, [r8, #2]
   16474:	add	r1, r8, #2
   16478:	cmp	r2, #0
   1647c:	bne	16214 <pclose@plt+0x2f68>
   16480:	b	16424 <pclose@plt+0x3178>
   16484:	mov	r2, #10
   16488:	strb	r2, [r3], #1
   1648c:	ldrb	r2, [r8, #2]
   16490:	add	r1, r8, #2
   16494:	cmp	r2, #0
   16498:	bne	16214 <pclose@plt+0x2f68>
   1649c:	b	16424 <pclose@plt+0x3178>
   164a0:	mov	r2, #12
   164a4:	strb	r2, [r3], #1
   164a8:	ldrb	r2, [r8, #2]
   164ac:	add	r1, r8, #2
   164b0:	cmp	r2, #0
   164b4:	bne	16214 <pclose@plt+0x2f68>
   164b8:	b	16424 <pclose@plt+0x3178>
   164bc:	strb	fp, [r3], #1
   164c0:	ldrb	r2, [r8, #2]
   164c4:	add	r1, r8, #2
   164c8:	cmp	r2, #0
   164cc:	bne	16214 <pclose@plt+0x2f68>
   164d0:	b	16424 <pclose@plt+0x3178>
   164d4:	strb	r9, [r3], #1
   164d8:	ldrb	r2, [r8, #2]
   164dc:	add	r1, r8, #2
   164e0:	cmp	r2, #0
   164e4:	bne	16214 <pclose@plt+0x2f68>
   164e8:	b	16424 <pclose@plt+0x3178>
   164ec:	strb	lr, [r3], #1
   164f0:	ldrb	r2, [r8, #2]
   164f4:	add	r1, r8, #2
   164f8:	cmp	r2, #0
   164fc:	bne	16214 <pclose@plt+0x2f68>
   16500:	b	16424 <pclose@plt+0x3178>
   16504:	mov	r2, #34	; 0x22
   16508:	strb	r2, [r3], #1
   1650c:	ldrb	r2, [r8, #2]
   16510:	add	r1, r8, #2
   16514:	cmp	r2, #0
   16518:	bne	16214 <pclose@plt+0x2f68>
   1651c:	b	16424 <pclose@plt+0x3178>
   16520:	ldrb	r2, [r8, #2]
   16524:	cmp	r2, #0
   16528:	beq	16424 <pclose@plt+0x3178>
   1652c:	ldrb	r0, [r8, #3]
   16530:	cmp	r0, #0
   16534:	beq	16660 <pclose@plt+0x33b4>
   16538:	sub	r1, r1, #48	; 0x30
   1653c:	uxtb	sl, r1
   16540:	cmp	sl, #7
   16544:	bhi	16660 <pclose@plt+0x33b4>
   16548:	sub	sl, r2, #48	; 0x30
   1654c:	uxtb	ip, sl
   16550:	cmp	ip, #7
   16554:	bhi	16660 <pclose@plt+0x33b4>
   16558:	sub	r0, r0, #48	; 0x30
   1655c:	uxtb	r0, r0
   16560:	cmp	r0, #7
   16564:	bhi	16660 <pclose@plt+0x33b4>
   16568:	add	r1, sl, r1, lsl #3
   1656c:	add	r8, r8, #4
   16570:	add	r0, r0, r1, lsl #3
   16574:	strb	r0, [r3], #1
   16578:	ldrb	r2, [r8]
   1657c:	cmp	r2, #0
   16580:	bne	16218 <pclose@plt+0x2f6c>
   16584:	b	16424 <pclose@plt+0x3178>
   16588:	add	r0, r7, #2
   1658c:	bl	14e94 <pclose@plt+0x1be8>
   16590:	mov	r7, r0
   16594:	b	15a64 <pclose@plt+0x27b8>
   16598:	add	r0, r7, #2
   1659c:	mov	r1, #1
   165a0:	bl	14e94 <pclose@plt+0x1be8>
   165a4:	mov	r7, r0
   165a8:	b	15a64 <pclose@plt+0x27b8>
   165ac:	add	r0, r7, #2
   165b0:	ldr	r1, [pc, #372]	; 1672c <pclose@plt+0x3480>
   165b4:	bl	18ba8 <pclose@plt+0x58fc>
   165b8:	mov	r7, r0
   165bc:	b	15a64 <pclose@plt+0x27b8>
   165c0:	bl	1d89c <pclose@plt+0xa5f0>
   165c4:	subs	r7, r0, #0
   165c8:	bne	15a64 <pclose@plt+0x27b8>
   165cc:	bl	12f10 <__errno_location@plt>
   165d0:	ldr	r0, [r0]
   165d4:	bl	12db4 <strerror@plt>
   165d8:	mov	r1, r0
   165dc:	ldr	r0, [pc, #412]	; 16780 <pclose@plt+0x34d4>
   165e0:	bl	1c9b0 <pclose@plt+0x9704>
   165e4:	b	15a64 <pclose@plt+0x27b8>
   165e8:	mul	r8, r0, r8
   165ec:	b	15ebc <pclose@plt+0x2c10>
   165f0:	cmp	r0, #0
   165f4:	beq	15ae8 <pclose@plt+0x283c>
   165f8:	mov	r1, r0
   165fc:	mov	r0, r8
   16600:	bl	29048 <pclose@plt+0x15d9c>
   16604:	mov	r8, r0
   16608:	b	15ebc <pclose@plt+0x2c10>
   1660c:	adds	r0, r0, #0
   16610:	movne	r0, #1
   16614:	cmp	r8, #0
   16618:	movne	r8, r0
   1661c:	moveq	r8, #0
   16620:	b	15ebc <pclose@plt+0x2c10>
   16624:	cmp	r0, #0
   16628:	beq	15ae8 <pclose@plt+0x283c>
   1662c:	mov	r1, r0
   16630:	mov	r0, r8
   16634:	bl	29268 <pclose@plt+0x15fbc>
   16638:	mov	r8, r1
   1663c:	b	15ebc <pclose@plt+0x2c10>
   16640:	clz	r8, r0
   16644:	lsr	r8, r8, #5
   16648:	b	15ebc <pclose@plt+0x2c10>
   1664c:	sub	r8, r8, r0
   16650:	b	15ebc <pclose@plt+0x2c10>
   16654:	mov	r2, r3
   16658:	mov	r1, r7
   1665c:	b	15f50 <pclose@plt+0x2ca4>
   16660:	add	r8, r8, #2
   16664:	b	16218 <pclose@plt+0x2f6c>
   16668:	bl	1e348 <pclose@plt+0xb09c>
   1666c:	bl	12ff4 <gcry_xstrdup@plt>
   16670:	mov	r7, r0
   16674:	b	15a64 <pclose@plt+0x27b8>
   16678:	bl	1dc68 <pclose@plt+0xa9bc>
   1667c:	bl	12ff4 <gcry_xstrdup@plt>
   16680:	mov	r7, r0
   16684:	b	15a64 <pclose@plt+0x27b8>
   16688:	mov	r3, r8
   1668c:	ldr	r2, [pc, #240]	; 16784 <pclose@plt+0x34d8>
   16690:	mov	r1, #35	; 0x23
   16694:	add	r0, sp, #8
   16698:	bl	13048 <gpgrt_snprintf@plt>
   1669c:	add	r0, sp, #8
   166a0:	bl	12ff4 <gcry_xstrdup@plt>
   166a4:	mov	r7, r0
   166a8:	b	15a64 <pclose@plt+0x27b8>
   166ac:	add	r0, sl, #2
   166b0:	b	161d8 <pclose@plt+0x2f2c>
   166b4:	bl	1e360 <pclose@plt+0xb0b4>
   166b8:	bl	12ff4 <gcry_xstrdup@plt>
   166bc:	mov	r7, r0
   166c0:	b	15a64 <pclose@plt+0x27b8>
   166c4:	mov	r0, #1
   166c8:	b	161d8 <pclose@plt+0x2f2c>
   166cc:	bl	1e354 <pclose@plt+0xb0a8>
   166d0:	bl	12ff4 <gcry_xstrdup@plt>
   166d4:	mov	r7, r0
   166d8:	b	15a64 <pclose@plt+0x27b8>
   166dc:	mov	r1, r9
   166e0:	ldr	r0, [pc, #160]	; 16788 <pclose@plt+0x34dc>
   166e4:	bl	1c9b0 <pclose@plt+0x9704>
   166e8:	ldr	r0, [pc, #156]	; 1678c <pclose@plt+0x34e0>
   166ec:	bl	1c94c <pclose@plt+0x96a0>
   166f0:	mov	r7, #0
   166f4:	b	15a64 <pclose@plt+0x27b8>
   166f8:	bl	1e36c <pclose@plt+0xb0c0>
   166fc:	bl	12ff4 <gcry_xstrdup@plt>
   16700:	mov	r7, r0
   16704:	b	15a64 <pclose@plt+0x27b8>
   16708:	bl	12bb0 <__stack_chk_fail@plt>
   1670c:			; <UNDEFINED> instruction: 0x0003e1bc
   16710:	andeq	sp, r3, r0, asr #21
   16714:	strdeq	lr, [r3], -r8
   16718:	strdeq	r9, [r2], -ip
   1671c:	andeq	r9, r2, r0, lsl #17
   16720:	muleq	r2, r8, r7
   16724:	andeq	r9, r2, r4, ror #15
   16728:	andeq	r9, r2, r8, lsl r8
   1672c:	andeq	r9, r2, r0, lsl r8
   16730:	strdeq	r9, [r2], -r0
   16734:	andeq	r9, r2, ip, lsr #16
   16738:	andeq	r9, r2, r8, lsr r8
   1673c:	andeq	r9, r2, r4, asr #16
   16740:	andeq	r9, r2, r8, lsr #14
   16744:	andeq	r9, r2, ip, lsr #14
   16748:	andeq	r9, r2, r0, lsr r7
   1674c:	andeq	r9, r2, r8, lsr r7
   16750:	andeq	r9, r2, r4, asr #14
   16754:	andeq	r9, r2, ip, asr #14
   16758:	andeq	r9, r2, r4, asr r7
   1675c:	andeq	r9, r2, r0, ror #14
   16760:	andeq	r9, r2, r8, ror #14
   16764:	andeq	lr, r3, r8
   16768:	andeq	r9, r2, r4, ror #10
   1676c:	andeq	r9, r2, r8, lsl #16
   16770:	andeq	r9, r2, r4, lsr #16
   16774:	andeq	r9, r2, r8, lsl #14
   16778:	andeq	r9, r2, ip, asr #16
   1677c:	andeq	r9, r2, r8, asr r8
   16780:	andeq	sl, r2, r0, lsl #15
   16784:	andeq	r9, r2, ip, ror r8
   16788:	andeq	r9, r2, r4, ror r7
   1678c:	andeq	r9, r2, r8, lsr #15
   16790:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16794:	sub	sp, sp, #1024	; 0x400
   16798:	ldr	r6, [pc, #892]	; 16b1c <pclose@plt+0x3870>
   1679c:	ldrb	r3, [r1]
   167a0:	sub	sp, sp, #8
   167a4:	ldr	r2, [r6]
   167a8:	cmp	r3, #0
   167ac:	mov	r5, r0
   167b0:	str	r2, [sp, #1028]	; 0x404
   167b4:	bne	167c8 <pclose@plt+0x351c>
   167b8:	b	16ac8 <pclose@plt+0x381c>
   167bc:	ldrb	r3, [r1, #1]!
   167c0:	cmp	r3, #0
   167c4:	beq	16ac8 <pclose@plt+0x381c>
   167c8:	cmp	r3, #32
   167cc:	cmpne	r3, #9
   167d0:	bne	167bc <pclose@plt+0x3510>
   167d4:	cmp	r3, #32
   167d8:	cmpne	r3, #9
   167dc:	bne	16b10 <pclose@plt+0x3864>
   167e0:	ldrb	r3, [r1, #1]!
   167e4:	cmp	r3, #9
   167e8:	cmpne	r3, #32
   167ec:	beq	167e0 <pclose@plt+0x3534>
   167f0:	cmp	r3, #0
   167f4:	mov	r7, r1
   167f8:	bne	16814 <pclose@plt+0x3568>
   167fc:	b	16820 <pclose@plt+0x3574>
   16800:	cmp	r3, #32
   16804:	cmpne	r3, #9
   16808:	movne	r3, #1
   1680c:	moveq	r3, #0
   16810:	beq	169dc <pclose@plt+0x3730>
   16814:	ldrb	r3, [r1, #1]!
   16818:	cmp	r3, #0
   1681c:	bne	16800 <pclose@plt+0x3554>
   16820:	ldr	r3, [pc, #760]	; 16b20 <pclose@plt+0x3874>
   16824:	ldr	r8, [r3, #1032]	; 0x408
   16828:	cmp	r8, #0
   1682c:	beq	16aa4 <pclose@plt+0x37f8>
   16830:	mov	r4, r8
   16834:	ldr	r0, [r4, #4]
   16838:	cmp	r0, #0
   1683c:	beq	16850 <pclose@plt+0x35a4>
   16840:	mov	r1, r7
   16844:	bl	12a24 <strcmp@plt>
   16848:	cmp	r0, #0
   1684c:	beq	16884 <pclose@plt+0x35d8>
   16850:	ldr	r4, [r4]
   16854:	cmp	r4, #0
   16858:	bne	16834 <pclose@plt+0x3588>
   1685c:	ldr	r3, [r8, #4]
   16860:	cmp	r3, #0
   16864:	beq	16880 <pclose@plt+0x35d4>
   16868:	ldr	r8, [r8]
   1686c:	cmp	r8, #0
   16870:	beq	16aa4 <pclose@plt+0x37f8>
   16874:	ldr	r3, [r8, #4]
   16878:	cmp	r3, #0
   1687c:	bne	16868 <pclose@plt+0x35bc>
   16880:	mov	r4, r8
   16884:	ldr	r9, [r4, #8]
   16888:	add	sl, r4, #16
   1688c:	cmp	r9, #0
   16890:	bne	169e4 <pclose@plt+0x3738>
   16894:	ldr	r3, [r4, #12]
   16898:	cmp	r3, #0
   1689c:	beq	168d8 <pclose@plt+0x362c>
   168a0:	ldr	r1, [pc, #636]	; 16b24 <pclose@plt+0x3878>
   168a4:	mov	r0, sl
   168a8:	bl	13090 <popen@plt>
   168ac:	subs	r8, r0, #0
   168b0:	beq	16af0 <pclose@plt+0x3844>
   168b4:	ldr	r3, [pc, #620]	; 16b28 <pclose@plt+0x387c>
   168b8:	ldr	r3, [r3]
   168bc:	cmp	r3, #0
   168c0:	beq	16924 <pclose@plt+0x3678>
   168c4:	mov	r1, r7
   168c8:	mov	r2, sl
   168cc:	ldr	r0, [pc, #600]	; 16b2c <pclose@plt+0x3880>
   168d0:	bl	1c9b0 <pclose@plt+0x9704>
   168d4:	b	16924 <pclose@plt+0x3678>
   168d8:	ldr	r1, [pc, #592]	; 16b30 <pclose@plt+0x3884>
   168dc:	mov	r0, sl
   168e0:	bl	13168 <fopen64@plt>
   168e4:	subs	r8, r0, #0
   168e8:	beq	16ad0 <pclose@plt+0x3824>
   168ec:	ldr	r3, [pc, #564]	; 16b28 <pclose@plt+0x387c>
   168f0:	ldr	r3, [r3]
   168f4:	cmp	r3, #0
   168f8:	beq	16924 <pclose@plt+0x3678>
   168fc:	mov	r1, r7
   16900:	mov	r2, sl
   16904:	ldr	r0, [pc, #552]	; 16b34 <pclose@plt+0x3888>
   16908:	bl	1c9b0 <pclose@plt+0x9704>
   1690c:	b	16924 <pclose@plt+0x3678>
   16910:	add	r1, sp, #4
   16914:	mov	r0, r5
   16918:	bl	12ef8 <assuan_send_data@plt>
   1691c:	cmp	r0, #0
   16920:	bne	16a4c <pclose@plt+0x37a0>
   16924:	mov	r2, #1024	; 0x400
   16928:	mov	r3, r8
   1692c:	mov	r1, #1
   16930:	add	r0, sp, #4
   16934:	bl	12ce8 <fread@plt>
   16938:	subs	r2, r0, #0
   1693c:	bne	16910 <pclose@plt+0x3664>
   16940:	mov	r0, r8
   16944:	bl	12afc <ferror@plt>
   16948:	cmp	r0, #0
   1694c:	bne	16a6c <pclose@plt+0x37c0>
   16950:	mov	r2, #0
   16954:	mov	r0, r5
   16958:	mov	r1, r2
   1695c:	bl	12ef8 <assuan_send_data@plt>
   16960:	cmp	r0, #0
   16964:	bne	16a38 <pclose@plt+0x378c>
   16968:	ldr	r3, [r4, #8]
   1696c:	cmp	r3, #0
   16970:	bne	169b8 <pclose@plt+0x370c>
   16974:	ldr	r3, [r4, #12]
   16978:	mov	r0, r8
   1697c:	cmp	r3, #0
   16980:	beq	169b4 <pclose@plt+0x3708>
   16984:	bl	132ac <pclose@plt>
   16988:	cmp	r0, #0
   1698c:	beq	169b8 <pclose@plt+0x370c>
   16990:	bl	12f10 <__errno_location@plt>
   16994:	mov	r9, #1
   16998:	ldr	r0, [r0]
   1699c:	bl	12db4 <strerror@plt>
   169a0:	mov	r1, sl
   169a4:	mov	r2, r0
   169a8:	ldr	r0, [pc, #392]	; 16b38 <pclose@plt+0x388c>
   169ac:	bl	1c9b0 <pclose@plt+0x9704>
   169b0:	b	169bc <pclose@plt+0x3710>
   169b4:	bl	13024 <fclose@plt>
   169b8:	mov	r9, #1
   169bc:	ldr	r2, [sp, #1028]	; 0x404
   169c0:	ldr	r3, [r6]
   169c4:	mov	r0, r9
   169c8:	cmp	r2, r3
   169cc:	bne	16b18 <pclose@plt+0x386c>
   169d0:	add	sp, sp, #1024	; 0x400
   169d4:	add	sp, sp, #8
   169d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169dc:	strb	r3, [r1]
   169e0:	b	16820 <pclose@plt+0x3574>
   169e4:	mov	r0, sl
   169e8:	bl	159cc <pclose@plt+0x2720>
   169ec:	subs	r7, r0, #0
   169f0:	beq	16a8c <pclose@plt+0x37e0>
   169f4:	bl	12e8c <strlen@plt>
   169f8:	mov	r1, r7
   169fc:	mov	r2, r0
   16a00:	mov	r0, r5
   16a04:	bl	12ef8 <assuan_send_data@plt>
   16a08:	mov	r8, r0
   16a0c:	mov	r0, r7
   16a10:	bl	12b50 <gcry_free@plt>
   16a14:	cmp	r8, #0
   16a18:	beq	16950 <pclose@plt+0x36a4>
   16a1c:	mov	r0, r8
   16a20:	bl	13120 <gpg_strerror@plt>
   16a24:	mov	r8, #0
   16a28:	mov	r1, r0
   16a2c:	ldr	r0, [pc, #264]	; 16b3c <pclose@plt+0x3890>
   16a30:	bl	1c9b0 <pclose@plt+0x9704>
   16a34:	b	16950 <pclose@plt+0x36a4>
   16a38:	bl	13120 <gpg_strerror@plt>
   16a3c:	mov	r1, r0
   16a40:	ldr	r0, [pc, #244]	; 16b3c <pclose@plt+0x3890>
   16a44:	bl	1c9b0 <pclose@plt+0x9704>
   16a48:	b	16968 <pclose@plt+0x36bc>
   16a4c:	bl	13120 <gpg_strerror@plt>
   16a50:	mov	r1, r0
   16a54:	ldr	r0, [pc, #224]	; 16b3c <pclose@plt+0x3890>
   16a58:	bl	1c9b0 <pclose@plt+0x9704>
   16a5c:	mov	r0, r8
   16a60:	bl	12afc <ferror@plt>
   16a64:	cmp	r0, #0
   16a68:	beq	16950 <pclose@plt+0x36a4>
   16a6c:	bl	12f10 <__errno_location@plt>
   16a70:	ldr	r0, [r0]
   16a74:	bl	12db4 <strerror@plt>
   16a78:	mov	r1, sl
   16a7c:	mov	r2, r0
   16a80:	ldr	r0, [pc, #184]	; 16b40 <pclose@plt+0x3894>
   16a84:	bl	1c9b0 <pclose@plt+0x9704>
   16a88:	b	16950 <pclose@plt+0x36a4>
   16a8c:	mov	r2, r7
   16a90:	ldr	r1, [pc, #172]	; 16b44 <pclose@plt+0x3898>
   16a94:	mov	r0, r5
   16a98:	bl	12ef8 <assuan_send_data@plt>
   16a9c:	mov	r8, r0
   16aa0:	b	16a0c <pclose@plt+0x3760>
   16aa4:	ldr	r3, [pc, #124]	; 16b28 <pclose@plt+0x387c>
   16aa8:	ldr	r9, [r3]
   16aac:	cmp	r9, #0
   16ab0:	beq	169bc <pclose@plt+0x3710>
   16ab4:	mov	r1, r7
   16ab8:	ldr	r0, [pc, #136]	; 16b48 <pclose@plt+0x389c>
   16abc:	bl	1c94c <pclose@plt+0x96a0>
   16ac0:	mov	r9, #0
   16ac4:	b	169bc <pclose@plt+0x3710>
   16ac8:	mov	r7, r1
   16acc:	b	16820 <pclose@plt+0x3574>
   16ad0:	bl	12f10 <__errno_location@plt>
   16ad4:	ldr	r0, [r0]
   16ad8:	bl	12db4 <strerror@plt>
   16adc:	mov	r1, sl
   16ae0:	mov	r2, r0
   16ae4:	ldr	r0, [pc, #96]	; 16b4c <pclose@plt+0x38a0>
   16ae8:	bl	1c9b0 <pclose@plt+0x9704>
   16aec:	b	169bc <pclose@plt+0x3710>
   16af0:	bl	12f10 <__errno_location@plt>
   16af4:	ldr	r0, [r0]
   16af8:	bl	12db4 <strerror@plt>
   16afc:	mov	r1, sl
   16b00:	mov	r2, r0
   16b04:	ldr	r0, [pc, #68]	; 16b50 <pclose@plt+0x38a4>
   16b08:	bl	1c9b0 <pclose@plt+0x9704>
   16b0c:	b	169bc <pclose@plt+0x3710>
   16b10:	mov	r7, r1
   16b14:	b	16814 <pclose@plt+0x3568>
   16b18:	bl	12bb0 <__stack_chk_fail@plt>
   16b1c:	andeq	sp, r3, r0, asr #21
   16b20:			; <UNDEFINED> instruction: 0x0003e1bc
   16b24:	strdeq	sl, [r2], -ip
   16b28:	strdeq	lr, [r3], -r8
   16b2c:	andeq	r9, r2, r4, lsl #18
   16b30:	andeq	r9, r2, ip, lsr #18
   16b34:	andeq	r9, r2, r8, asr #18
   16b38:	muleq	r2, ip, r9
   16b3c:	andeq	r9, r2, r8, asr #17
   16b40:	andeq	r9, r2, ip, ror r9
   16b44:	muleq	r2, r8, r7
   16b48:	andeq	r9, r2, r4, lsr #17
   16b4c:	andeq	r9, r2, r0, lsr r9
   16b50:	andeq	r9, r2, r8, ror #17
   16b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b58:	sub	sp, sp, #36	; 0x24
   16b5c:	mov	ip, r2
   16b60:	str	r2, [sp, #4]
   16b64:	ldr	r2, [pc, #1736]	; 17234 <pclose@plt+0x3f88>
   16b68:	mov	r3, #0
   16b6c:	ldr	r8, [pc, #1732]	; 17238 <pclose@plt+0x3f8c>
   16b70:	ldr	r2, [r2]
   16b74:	mov	r9, r0
   16b78:	mov	sl, r1
   16b7c:	mov	fp, r3
   16b80:	str	r2, [sp, #28]
   16b84:	str	r3, [ip]
   16b88:	add	r2, sp, #24
   16b8c:	add	r1, sp, #20
   16b90:	mov	r0, r9
   16b94:	bl	1306c <assuan_read_line@plt>
   16b98:	cmp	r0, #0
   16b9c:	bne	16c18 <pclose@plt+0x396c>
   16ba0:	cmp	sl, #0
   16ba4:	bne	16bb4 <pclose@plt+0x3908>
   16ba8:	ldr	r3, [r8]
   16bac:	cmp	r3, #1
   16bb0:	ble	16c50 <pclose@plt+0x39a4>
   16bb4:	ldrd	r0, [sp, #20]
   16bb8:	ldrb	r3, [r0]
   16bbc:	cmp	r3, #35	; 0x23
   16bc0:	beq	16c34 <pclose@plt+0x3988>
   16bc4:	cmp	r1, #0
   16bc8:	beq	16b88 <pclose@plt+0x38dc>
   16bcc:	cmp	r3, #68	; 0x44
   16bd0:	beq	16d00 <pclose@plt+0x3a54>
   16bd4:	cmp	fp, #0
   16bd8:	beq	16c6c <pclose@plt+0x39c0>
   16bdc:	ldr	r2, [pc, #1624]	; 1723c <pclose@plt+0x3f90>
   16be0:	ldr	r3, [pc, #1624]	; 17240 <pclose@plt+0x3f94>
   16be4:	ldr	r2, [r2, #1036]	; 0x40c
   16be8:	ldr	r3, [r3]
   16bec:	cmp	r2, #0
   16bf0:	beq	16bfc <pclose@plt+0x3950>
   16bf4:	cmp	r2, r3
   16bf8:	beq	16c6c <pclose@plt+0x39c0>
   16bfc:	mov	r1, r3
   16c00:	mov	r0, #10
   16c04:	bl	13138 <putc@plt>
   16c08:	ldr	r1, [sp, #24]
   16c0c:	cmp	r1, #0
   16c10:	bne	16c68 <pclose@plt+0x39bc>
   16c14:	mov	r0, #260	; 0x104
   16c18:	ldr	r3, [pc, #1556]	; 17234 <pclose@plt+0x3f88>
   16c1c:	ldr	r2, [sp, #28]
   16c20:	ldr	r3, [r3]
   16c24:	cmp	r2, r3
   16c28:	bne	17230 <pclose@plt+0x3f84>
   16c2c:	add	sp, sp, #36	; 0x24
   16c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c34:	ldr	r5, [pc, #1540]	; 17240 <pclose@plt+0x3f94>
   16c38:	mov	r2, #1
   16c3c:	ldr	r3, [r5]
   16c40:	bl	12c94 <fwrite@plt>
   16c44:	ldr	r1, [r5]
   16c48:	mov	r0, #10
   16c4c:	bl	13138 <putc@plt>
   16c50:	ldr	r0, [sp, #20]
   16c54:	ldrb	r3, [r0]
   16c58:	cmp	r3, #35	; 0x23
   16c5c:	beq	16b88 <pclose@plt+0x38dc>
   16c60:	ldr	r1, [sp, #24]
   16c64:	b	16bc4 <pclose@plt+0x3918>
   16c68:	ldr	r0, [sp, #20]
   16c6c:	ldrb	r3, [r0]
   16c70:	cmp	r3, #83	; 0x53
   16c74:	beq	16db4 <pclose@plt+0x3b08>
   16c78:	cmp	r1, #1
   16c7c:	bls	16c14 <pclose@plt+0x3968>
   16c80:	cmp	r3, #79	; 0x4f
   16c84:	beq	16d54 <pclose@plt+0x3aa8>
   16c88:	cmp	r1, #2
   16c8c:	bls	16c14 <pclose@plt+0x3968>
   16c90:	cmp	r3, #69	; 0x45
   16c94:	bne	16de4 <pclose@plt+0x3b38>
   16c98:	ldrb	r3, [r0, #1]
   16c9c:	cmp	r3, #82	; 0x52
   16ca0:	beq	16f4c <pclose@plt+0x3ca0>
   16ca4:	cmp	r3, #78	; 0x4e
   16ca8:	bne	16c14 <pclose@plt+0x3968>
   16cac:	ldrb	r3, [r0, #2]
   16cb0:	cmp	r3, #68	; 0x44
   16cb4:	bne	16c14 <pclose@plt+0x3968>
   16cb8:	ldrb	r3, [r0, #3]
   16cbc:	tst	r3, #223	; 0xdf
   16cc0:	bne	16c14 <pclose@plt+0x3968>
   16cc4:	ldr	r3, [pc, #1392]	; 1723c <pclose@plt+0x3f90>
   16cc8:	ldr	r5, [pc, #1392]	; 17240 <pclose@plt+0x3f94>
   16ccc:	ldr	r2, [r3, #1036]	; 0x40c
   16cd0:	ldr	r3, [r5]
   16cd4:	cmp	r2, #0
   16cd8:	beq	16ce4 <pclose@plt+0x3a38>
   16cdc:	cmp	r3, r2
   16ce0:	beq	16cf8 <pclose@plt+0x3a4c>
   16ce4:	mov	r2, #1
   16ce8:	bl	12c94 <fwrite@plt>
   16cec:	ldr	r1, [r5]
   16cf0:	mov	r0, #10
   16cf4:	bl	13138 <putc@plt>
   16cf8:	mov	fp, #0
   16cfc:	b	16b88 <pclose@plt+0x38dc>
   16d00:	ldrb	r3, [r0, #1]
   16d04:	cmp	r3, #32
   16d08:	bne	16bd4 <pclose@plt+0x3928>
   16d0c:	ldr	r5, [pc, #1320]	; 1723c <pclose@plt+0x3f90>
   16d10:	ldr	r2, [r5, #1036]	; 0x40c
   16d14:	cmp	r2, #0
   16d18:	bne	16eac <pclose@plt+0x3c00>
   16d1c:	ldr	r3, [r8, #24]
   16d20:	cmp	r3, #0
   16d24:	bne	170b0 <pclose@plt+0x3e04>
   16d28:	ldr	r3, [r8, #28]
   16d2c:	cmp	r3, #0
   16d30:	bne	16fcc <pclose@plt+0x3d20>
   16d34:	ldr	r5, [pc, #1284]	; 17240 <pclose@plt+0x3f94>
   16d38:	mov	r2, #1
   16d3c:	ldr	r3, [r5]
   16d40:	bl	12c94 <fwrite@plt>
   16d44:	ldr	r1, [r5]
   16d48:	mov	r0, #10
   16d4c:	bl	13138 <putc@plt>
   16d50:	b	16b88 <pclose@plt+0x38dc>
   16d54:	ldrb	r3, [r0, #1]
   16d58:	cmp	r3, #75	; 0x4b
   16d5c:	bne	16c14 <pclose@plt+0x3968>
   16d60:	ldrb	r3, [r0, #2]
   16d64:	tst	r3, #223	; 0xdf
   16d68:	bne	16c14 <pclose@plt+0x3968>
   16d6c:	ldr	r3, [pc, #1224]	; 1723c <pclose@plt+0x3f90>
   16d70:	ldr	r4, [pc, #1224]	; 17240 <pclose@plt+0x3f94>
   16d74:	ldr	r2, [r3, #1036]	; 0x40c
   16d78:	ldr	r3, [r4]
   16d7c:	cmp	r2, #0
   16d80:	beq	16d8c <pclose@plt+0x3ae0>
   16d84:	cmp	r2, r3
   16d88:	beq	16da0 <pclose@plt+0x3af4>
   16d8c:	mov	r2, #1
   16d90:	bl	12c94 <fwrite@plt>
   16d94:	ldr	r1, [r4]
   16d98:	mov	r0, #10
   16d9c:	bl	13138 <putc@plt>
   16da0:	ldr	r0, [pc, #1180]	; 17244 <pclose@plt+0x3f98>
   16da4:	mov	r1, #0
   16da8:	bl	15158 <pclose@plt+0x1eac>
   16dac:	mov	r0, #0
   16db0:	b	16c18 <pclose@plt+0x396c>
   16db4:	ldrb	r2, [r0, #1]
   16db8:	tst	r2, #223	; 0xdf
   16dbc:	bne	16ea0 <pclose@plt+0x3bf4>
   16dc0:	ldr	r3, [pc, #1140]	; 1723c <pclose@plt+0x3f90>
   16dc4:	ldr	r5, [pc, #1140]	; 17240 <pclose@plt+0x3f94>
   16dc8:	ldr	r2, [r3, #1036]	; 0x40c
   16dcc:	ldr	r3, [r5]
   16dd0:	cmp	r2, #0
   16dd4:	beq	16ce4 <pclose@plt+0x3a38>
   16dd8:	cmp	r2, r3
   16ddc:	bne	16ce4 <pclose@plt+0x3a38>
   16de0:	b	16cf8 <pclose@plt+0x3a4c>
   16de4:	cmp	r1, #6
   16de8:	bls	16c14 <pclose@plt+0x3968>
   16dec:	cmp	r3, #73	; 0x49
   16df0:	bne	16c14 <pclose@plt+0x3968>
   16df4:	ldrb	r3, [r0, #1]
   16df8:	cmp	r3, #78	; 0x4e
   16dfc:	bne	16c14 <pclose@plt+0x3968>
   16e00:	ldrb	r3, [r0, #2]
   16e04:	cmp	r3, #81	; 0x51
   16e08:	bne	16c14 <pclose@plt+0x3968>
   16e0c:	ldrb	r3, [r0, #3]
   16e10:	cmp	r3, #85	; 0x55
   16e14:	bne	16c14 <pclose@plt+0x3968>
   16e18:	ldrb	r3, [r0, #4]
   16e1c:	cmp	r3, #73	; 0x49
   16e20:	bne	16c14 <pclose@plt+0x3968>
   16e24:	ldrb	r3, [r0, #5]
   16e28:	cmp	r3, #82	; 0x52
   16e2c:	bne	16c14 <pclose@plt+0x3968>
   16e30:	ldrb	r3, [r0, #6]
   16e34:	cmp	r3, #69	; 0x45
   16e38:	bne	16c14 <pclose@plt+0x3968>
   16e3c:	ldrb	r3, [r0, #7]
   16e40:	tst	r3, #223	; 0xdf
   16e44:	bne	16c14 <pclose@plt+0x3968>
   16e48:	ldr	r3, [pc, #1004]	; 1723c <pclose@plt+0x3f90>
   16e4c:	ldr	r5, [pc, #1004]	; 17240 <pclose@plt+0x3f94>
   16e50:	ldr	r2, [r3, #1036]	; 0x40c
   16e54:	ldr	r3, [r5]
   16e58:	cmp	r2, #0
   16e5c:	beq	16e68 <pclose@plt+0x3bbc>
   16e60:	cmp	r3, r2
   16e64:	beq	16e7c <pclose@plt+0x3bd0>
   16e68:	mov	r2, #1
   16e6c:	bl	12c94 <fwrite@plt>
   16e70:	ldr	r1, [r5]
   16e74:	mov	r0, #10
   16e78:	bl	13138 <putc@plt>
   16e7c:	ldr	r1, [sp, #20]
   16e80:	mov	r0, r9
   16e84:	bl	16790 <pclose@plt+0x34e4>
   16e88:	subs	fp, r0, #0
   16e8c:	bne	16cf8 <pclose@plt+0x3a4c>
   16e90:	ldr	r1, [pc, #944]	; 17248 <pclose@plt+0x3f9c>
   16e94:	mov	r0, r9
   16e98:	bl	12be0 <assuan_write_line@plt>
   16e9c:	b	16b88 <pclose@plt+0x38dc>
   16ea0:	cmp	r1, #1
   16ea4:	bhi	16c88 <pclose@plt+0x39dc>
   16ea8:	b	16c14 <pclose@plt+0x3968>
   16eac:	cmp	r1, #2
   16eb0:	add	r4, r0, #2
   16eb4:	bls	16b88 <pclose@plt+0x38dc>
   16eb8:	mov	r3, r1
   16ebc:	mov	r6, #2
   16ec0:	mov	r1, r2
   16ec4:	b	16ee4 <pclose@plt+0x3c38>
   16ec8:	bl	13138 <putc@plt>
   16ecc:	ldr	r3, [sp, #24]
   16ed0:	add	r6, r6, #1
   16ed4:	cmp	r6, r3
   16ed8:	add	r4, r4, #1
   16edc:	bcs	16b88 <pclose@plt+0x38dc>
   16ee0:	ldr	r1, [r5, #1036]	; 0x40c
   16ee4:	ldrb	r0, [r4]
   16ee8:	cmp	r0, #37	; 0x25
   16eec:	bne	16ec8 <pclose@plt+0x3c1c>
   16ef0:	add	r2, r6, #2
   16ef4:	cmp	r2, r3
   16ef8:	bcs	16ec8 <pclose@plt+0x3c1c>
   16efc:	ldrb	r3, [r4, #1]
   16f00:	cmp	r3, #57	; 0x39
   16f04:	subls	r0, r3, #48	; 0x30
   16f08:	lslls	r0, r0, #4
   16f0c:	bls	16f20 <pclose@plt+0x3c74>
   16f10:	cmp	r3, #70	; 0x46
   16f14:	subls	r0, r3, #55	; 0x37
   16f18:	subhi	r0, r3, #87	; 0x57
   16f1c:	lsl	r0, r0, #4
   16f20:	ldrb	r3, [r4, #2]
   16f24:	cmp	r3, #57	; 0x39
   16f28:	subls	r3, r3, #48	; 0x30
   16f2c:	bls	16f3c <pclose@plt+0x3c90>
   16f30:	cmp	r3, #70	; 0x46
   16f34:	subls	r3, r3, #55	; 0x37
   16f38:	subhi	r3, r3, #87	; 0x57
   16f3c:	add	r0, r0, r3
   16f40:	add	r4, r4, #2
   16f44:	mov	r6, r2
   16f48:	b	16ec8 <pclose@plt+0x3c1c>
   16f4c:	ldrb	r3, [r0, #2]
   16f50:	cmp	r3, #82	; 0x52
   16f54:	bne	16c14 <pclose@plt+0x3968>
   16f58:	ldrb	r3, [r0, #3]
   16f5c:	ands	r1, r3, #223	; 0xdf
   16f60:	bne	16c14 <pclose@plt+0x3968>
   16f64:	mov	r2, #10
   16f68:	add	r0, r0, #3
   16f6c:	bl	12a3c <strtol@plt>
   16f70:	ldr	r4, [pc, #712]	; 17240 <pclose@plt+0x3f94>
   16f74:	subs	r1, r0, #0
   16f78:	mvneq	r1, #0
   16f7c:	ldr	r0, [pc, #704]	; 17244 <pclose@plt+0x3f98>
   16f80:	bl	15158 <pclose@plt+0x1eac>
   16f84:	ldr	r3, [pc, #688]	; 1723c <pclose@plt+0x3f90>
   16f88:	ldr	r2, [r3, #1036]	; 0x40c
   16f8c:	ldr	r3, [r4]
   16f90:	cmp	r2, #0
   16f94:	beq	16fa0 <pclose@plt+0x3cf4>
   16f98:	cmp	r2, r3
   16f9c:	beq	16fb8 <pclose@plt+0x3d0c>
   16fa0:	ldrd	r0, [sp, #20]
   16fa4:	mov	r2, #1
   16fa8:	bl	12c94 <fwrite@plt>
   16fac:	ldr	r1, [r4]
   16fb0:	mov	r0, #10
   16fb4:	bl	13138 <putc@plt>
   16fb8:	ldr	r2, [sp, #4]
   16fbc:	mov	r3, #1
   16fc0:	mov	r0, #0
   16fc4:	str	r3, [r2]
   16fc8:	b	16c18 <pclose@plt+0x396c>
   16fcc:	cmp	r1, #2
   16fd0:	add	r4, r0, #2
   16fd4:	bls	17228 <pclose@plt+0x3f7c>
   16fd8:	ldr	r5, [pc, #608]	; 17240 <pclose@plt+0x3f94>
   16fdc:	mov	r3, #1
   16fe0:	mov	r6, #2
   16fe4:	b	17010 <pclose@plt+0x3d64>
   16fe8:	mov	r0, fp
   16fec:	bl	13138 <putc@plt>
   16ff0:	ldr	r2, [sp, #24]
   16ff4:	add	r6, r6, #1
   16ff8:	cmp	r6, r2
   16ffc:	sub	r3, fp, #10
   17000:	add	r4, r4, #1
   17004:	clz	r3, r3
   17008:	lsr	r3, r3, #5
   1700c:	bcs	170a4 <pclose@plt+0x3df8>
   17010:	cmp	r3, #0
   17014:	ldr	r1, [r5]
   17018:	bne	17088 <pclose@plt+0x3ddc>
   1701c:	ldrb	fp, [r4]
   17020:	cmp	fp, #37	; 0x25
   17024:	bne	16fe8 <pclose@plt+0x3d3c>
   17028:	ldr	r3, [sp, #24]
   1702c:	add	r2, r6, #2
   17030:	cmp	r2, r3
   17034:	bcs	16fe8 <pclose@plt+0x3d3c>
   17038:	ldrb	r3, [r4, #1]
   1703c:	cmp	r3, #57	; 0x39
   17040:	subls	fp, r3, #48	; 0x30
   17044:	lslls	fp, fp, #4
   17048:	bls	1705c <pclose@plt+0x3db0>
   1704c:	cmp	r3, #70	; 0x46
   17050:	subls	fp, r3, #55	; 0x37
   17054:	subhi	fp, r3, #87	; 0x57
   17058:	lsl	fp, fp, #4
   1705c:	ldrb	r3, [r4, #2]
   17060:	cmp	r3, #57	; 0x39
   17064:	subls	r3, r3, #48	; 0x30
   17068:	bls	17078 <pclose@plt+0x3dcc>
   1706c:	cmp	r3, #70	; 0x46
   17070:	subls	r3, r3, #55	; 0x37
   17074:	subhi	r3, r3, #87	; 0x57
   17078:	add	fp, fp, r3
   1707c:	add	r4, r4, #2
   17080:	mov	r6, r2
   17084:	b	16fe8 <pclose@plt+0x3d3c>
   17088:	mov	r3, r1
   1708c:	mov	r2, #2
   17090:	mov	r1, #1
   17094:	ldr	r0, [pc, #432]	; 1724c <pclose@plt+0x3fa0>
   17098:	bl	12c94 <fwrite@plt>
   1709c:	ldr	r1, [r5]
   170a0:	b	1701c <pclose@plt+0x3d70>
   170a4:	subs	fp, fp, #10
   170a8:	movne	fp, #1
   170ac:	b	16b88 <pclose@plt+0x38dc>
   170b0:	cmp	r1, #2
   170b4:	bls	16b88 <pclose@plt+0x38dc>
   170b8:	mov	r3, #2
   170bc:	ldr	r5, [pc, #380]	; 17240 <pclose@plt+0x3f94>
   170c0:	str	fp, [sp, #8]
   170c4:	mov	r7, #18
   170c8:	mov	fp, r3
   170cc:	str	r9, [sp, #12]
   170d0:	sub	r2, fp, #2
   170d4:	ldr	r1, [pc, #372]	; 17250 <pclose@plt+0x3fa4>
   170d8:	mov	r0, #1
   170dc:	bl	12f94 <__printf_chk@plt>
   170e0:	mov	r6, fp
   170e4:	mov	r4, #0
   170e8:	b	17118 <pclose@plt+0x3e6c>
   170ec:	ldr	r3, [sp, #20]
   170f0:	ldr	r1, [pc, #348]	; 17254 <pclose@plt+0x3fa8>
   170f4:	mov	r0, #1
   170f8:	ldrb	r2, [r3, r6]
   170fc:	add	r4, r4, #1
   17100:	bl	12f94 <__printf_chk@plt>
   17104:	cmp	r4, #16
   17108:	add	r6, r6, #1
   1710c:	beq	17148 <pclose@plt+0x3e9c>
   17110:	cmp	r4, #8
   17114:	beq	17208 <pclose@plt+0x3f5c>
   17118:	ldr	r3, [sp, #24]
   1711c:	cmp	r3, r6
   17120:	bhi	170ec <pclose@plt+0x3e40>
   17124:	ldr	r3, [r5]
   17128:	mov	r2, #3
   1712c:	mov	r1, #1
   17130:	ldr	r0, [pc, #288]	; 17258 <pclose@plt+0x3fac>
   17134:	add	r4, r4, #1
   17138:	bl	12c94 <fwrite@plt>
   1713c:	cmp	r4, #16
   17140:	add	r6, r6, #1
   17144:	bne	17110 <pclose@plt+0x3e64>
   17148:	ldr	r3, [r5]
   1714c:	mov	r2, #3
   17150:	mov	r1, #1
   17154:	ldr	r0, [pc, #252]	; 17258 <pclose@plt+0x3fac>
   17158:	bl	12c94 <fwrite@plt>
   1715c:	mov	r4, fp
   17160:	b	171b4 <pclose@plt+0x3f08>
   17164:	ldr	r3, [sp, #20]
   17168:	ldrb	r9, [r3, r4]
   1716c:	tst	r9, #128	; 0x80
   17170:	bne	1719c <pclose@plt+0x3ef0>
   17174:	bl	12e14 <__ctype_b_loc@plt>
   17178:	lsl	r3, r9, #1
   1717c:	ldr	r2, [r0]
   17180:	ldrh	r3, [r2, r3]
   17184:	bic	r3, r3, #16320	; 0x3fc0
   17188:	bic	r3, r3, #61	; 0x3d
   1718c:	lsl	r3, r3, #17
   17190:	lsr	r3, r3, #17
   17194:	cmp	r3, #16384	; 0x4000
   17198:	beq	17218 <pclose@plt+0x3f6c>
   1719c:	mov	r1, r6
   171a0:	mov	r0, #46	; 0x2e
   171a4:	bl	13138 <putc@plt>
   171a8:	add	r4, r4, #1
   171ac:	cmp	r7, r4
   171b0:	beq	171dc <pclose@plt+0x3f30>
   171b4:	ldr	r3, [sp, #24]
   171b8:	ldr	r6, [r5]
   171bc:	cmp	r3, r4
   171c0:	bhi	17164 <pclose@plt+0x3eb8>
   171c4:	mov	r1, r6
   171c8:	mov	r0, #32
   171cc:	add	r4, r4, #1
   171d0:	bl	13138 <putc@plt>
   171d4:	cmp	r7, r4
   171d8:	bne	171b4 <pclose@plt+0x3f08>
   171dc:	ldr	r1, [r5]
   171e0:	mov	r0, #10
   171e4:	bl	13138 <putc@plt>
   171e8:	ldr	r3, [sp, #24]
   171ec:	add	fp, fp, #16
   171f0:	cmp	r3, fp
   171f4:	add	r7, r7, #16
   171f8:	bhi	170d0 <pclose@plt+0x3e24>
   171fc:	ldr	fp, [sp, #8]
   17200:	ldr	r9, [sp, #12]
   17204:	b	16b88 <pclose@plt+0x38dc>
   17208:	ldr	r1, [r5]
   1720c:	mov	r0, #32
   17210:	bl	13138 <putc@plt>
   17214:	b	17118 <pclose@plt+0x3e6c>
   17218:	mov	r1, r6
   1721c:	mov	r0, r9
   17220:	bl	13138 <putc@plt>
   17224:	b	171a8 <pclose@plt+0x3efc>
   17228:	mov	fp, #1
   1722c:	b	16b88 <pclose@plt+0x38dc>
   17230:	bl	12bb0 <__stack_chk_fail@plt>
   17234:	andeq	sp, r3, r0, asr #21
   17238:	strdeq	lr, [r3], -r8
   1723c:			; <UNDEFINED> instruction: 0x0003e1bc
   17240:			; <UNDEFINED> instruction: 0x0003e1b0
   17244:	ldrdeq	r9, [r2], -r0
   17248:	ldrdeq	r9, [r2], -r4
   1724c:	andeq	r9, r2, ip, asr #19
   17250:			; <UNDEFINED> instruction: 0x000299b4
   17254:	andeq	r9, r2, r0, asr #19
   17258:	andeq	r9, r2, r8, asr #19
   1725c:	ldrb	r3, [r0]
   17260:	cmp	r3, #0
   17264:	beq	173a4 <pclose@plt+0x40f8>
   17268:	mov	r2, r0
   1726c:	b	1727c <pclose@plt+0x3fd0>
   17270:	ldrb	r3, [r2, #1]!
   17274:	cmp	r3, #0
   17278:	beq	173a4 <pclose@plt+0x40f8>
   1727c:	cmp	r3, #9
   17280:	cmpne	r3, #32
   17284:	bne	17270 <pclose@plt+0x3fc4>
   17288:	push	{r4, r5, r6, r7, r8, lr}
   1728c:	mov	r4, r2
   17290:	mov	r3, #0
   17294:	strb	r3, [r4], #1
   17298:	ldrb	r3, [r2, #1]
   1729c:	cmp	r3, #9
   172a0:	cmpne	r3, #32
   172a4:	bne	172b8 <pclose@plt+0x400c>
   172a8:	ldrb	r3, [r4, #1]!
   172ac:	cmp	r3, #9
   172b0:	cmpne	r3, #32
   172b4:	beq	172a8 <pclose@plt+0x3ffc>
   172b8:	cmp	r3, #0
   172bc:	beq	17384 <pclose@plt+0x40d8>
   172c0:	ldr	r3, [pc, #228]	; 173ac <pclose@plt+0x4100>
   172c4:	cmp	r1, #0
   172c8:	mov	r5, r0
   172cc:	ldr	r0, [r3, #56]	; 0x38
   172d0:	beq	17344 <pclose@plt+0x4098>
   172d4:	cmp	r0, #0
   172d8:	moveq	r6, r0
   172dc:	bne	17390 <pclose@plt+0x40e4>
   172e0:	mov	r0, r4
   172e4:	bl	12e8c <strlen@plt>
   172e8:	add	r0, r0, #5
   172ec:	bl	129a0 <gcry_xmalloc@plt>
   172f0:	ldr	r2, [pc, #184]	; 173b0 <pclose@plt+0x4104>
   172f4:	mov	r1, r4
   172f8:	mov	r3, r0
   172fc:	mov	r7, r0
   17300:	ldr	r0, [r2]
   17304:	str	r0, [r3], #4
   17308:	mov	r0, r3
   1730c:	bl	12cdc <strcpy@plt>
   17310:	mov	r0, r7
   17314:	bl	159cc <pclose@plt+0x2720>
   17318:	mov	r4, r0
   1731c:	mov	r0, r7
   17320:	bl	12b50 <gcry_free@plt>
   17324:	mov	r1, r4
   17328:	mov	r0, r5
   1732c:	bl	14fdc <pclose@plt+0x1d30>
   17330:	mov	r0, r4
   17334:	bl	12b50 <gcry_free@plt>
   17338:	mov	r0, r6
   1733c:	pop	{r4, r5, r6, r7, r8, lr}
   17340:	b	12b50 <gcry_free@plt>
   17344:	cmp	r0, #0
   17348:	beq	17374 <pclose@plt+0x40c8>
   1734c:	mov	r0, r4
   17350:	bl	15990 <pclose@plt+0x26e4>
   17354:	subs	r6, r0, #0
   17358:	beq	17374 <pclose@plt+0x40c8>
   1735c:	mov	r0, r5
   17360:	mov	r1, r6
   17364:	bl	14fdc <pclose@plt+0x1d30>
   17368:	mov	r0, r6
   1736c:	pop	{r4, r5, r6, r7, r8, lr}
   17370:	b	12b50 <gcry_free@plt>
   17374:	mov	r1, r4
   17378:	mov	r0, r5
   1737c:	pop	{r4, r5, r6, r7, r8, lr}
   17380:	b	14fdc <pclose@plt+0x1d30>
   17384:	mov	r1, #0
   17388:	pop	{r4, r5, r6, r7, r8, lr}
   1738c:	b	14fdc <pclose@plt+0x1d30>
   17390:	mov	r0, r4
   17394:	bl	15990 <pclose@plt+0x26e4>
   17398:	subs	r6, r0, #0
   1739c:	movne	r4, r6
   173a0:	b	172e0 <pclose@plt+0x4034>
   173a4:	mov	r1, #0
   173a8:	b	14fdc <pclose@plt+0x1d30>
   173ac:	strdeq	lr, [r3], -r8
   173b0:	ldrdeq	r9, [r2], -ip
   173b4:	ldr	r1, [pc, #16]	; 173cc <pclose@plt+0x4120>
   173b8:	ldr	r3, [pc, #16]	; 173d0 <pclose@plt+0x4124>
   173bc:	mov	r2, #0
   173c0:	str	r0, [r1]
   173c4:	str	r2, [r3]
   173c8:	bx	lr
   173cc:	muleq	r3, r0, r1
   173d0:	muleq	r3, ip, r1
   173d4:	ldr	r3, [pc, #4]	; 173e0 <pclose@plt+0x4134>
   173d8:	str	r0, [r3]
   173dc:	bx	lr
   173e0:	muleq	r3, ip, r1
   173e4:	ldr	r2, [pc, #40]	; 17414 <pclose@plt+0x4168>
   173e8:	push	{lr}		; (str lr, [sp, #-4]!)
   173ec:	mov	ip, #0
   173f0:	ldr	lr, [pc, #32]	; 17418 <pclose@plt+0x416c>
   173f4:	ldr	r1, [pc, #32]	; 1741c <pclose@plt+0x4170>
   173f8:	ldr	r3, [pc, #32]	; 17420 <pclose@plt+0x4174>
   173fc:	str	r0, [r2]
   17400:	mov	r2, #1
   17404:	str	r0, [lr]
   17408:	str	ip, [r1]
   1740c:	str	r2, [r3]
   17410:	pop	{pc}		; (ldr pc, [sp], #4)
   17414:	andeq	lr, r3, r8, lsl #3
   17418:	andeq	lr, r3, r0, lsr #3
   1741c:			; <UNDEFINED> instruction: 0x0003e1b4
   17420:	muleq	r3, ip, r1
   17424:	push	{r4, lr}
   17428:	bl	12acc <rl_free_line_state@plt>
   1742c:	pop	{r4, lr}
   17430:	b	12fdc <rl_cleanup_after_signal@plt>
   17434:	push	{lr}		; (str lr, [sp, #-4]!)
   17438:	sub	sp, sp, #12
   1743c:	ldr	r2, [pc, #48]	; 17474 <pclose@plt+0x41c8>
   17440:	ldr	r3, [pc, #48]	; 17478 <pclose@plt+0x41cc>
   17444:	str	r2, [sp, #4]
   17448:	str	r3, [sp]
   1744c:	ldr	r2, [pc, #40]	; 1747c <pclose@plt+0x41d0>
   17450:	ldr	r3, [pc, #40]	; 17480 <pclose@plt+0x41d4>
   17454:	ldr	r1, [pc, #40]	; 17484 <pclose@plt+0x41d8>
   17458:	ldr	r0, [pc, #40]	; 17488 <pclose@plt+0x41dc>
   1745c:	bl	1f90c <pclose@plt+0xc660>
   17460:	ldr	r3, [pc, #36]	; 1748c <pclose@plt+0x41e0>
   17464:	ldr	r2, [pc, #36]	; 17490 <pclose@plt+0x41e4>
   17468:	str	r2, [r3]
   1746c:	add	sp, sp, #12
   17470:	pop	{pc}		; (ldr pc, [sp], #4)
   17474:	strdeq	r2, [r1], -r0
   17478:	andeq	r2, r1, r0, lsr #25
   1747c:	ldrdeq	r7, [r1], -r4
   17480:	andeq	r7, r1, r4, lsr #8
   17484:			; <UNDEFINED> instruction: 0x000173b4
   17488:	andeq	r7, r1, r4, ror #7
   1748c:	andeq	lr, r3, ip, lsr #3
   17490:	andeq	sl, r2, r8, lsl #14
   17494:	push	{r4, lr}
   17498:	mov	r0, #6
   1749c:	ldr	r4, [pc, #28]	; 174c0 <pclose@plt+0x4214>
   174a0:	ldr	r1, [pc, #28]	; 174c4 <pclose@plt+0x4218>
   174a4:	bl	13078 <setlocale@plt>
   174a8:	mov	r0, r4
   174ac:	ldr	r1, [pc, #20]	; 174c8 <pclose@plt+0x421c>
   174b0:	bl	131b0 <bindtextdomain@plt>
   174b4:	mov	r0, r4
   174b8:	pop	{r4, lr}
   174bc:	b	12c28 <textdomain@plt>
   174c0:	andeq	sl, r2, r4, lsr #14
   174c4:	muleq	r2, r8, r7
   174c8:	andeq	sl, r2, r0, lsl r7
   174cc:	push	{r4, r5, r6, lr}
   174d0:	mov	r1, #0
   174d4:	ldr	r0, [pc, #88]	; 17534 <pclose@plt+0x4288>
   174d8:	bl	12cf4 <bind_textdomain_codeset@plt>
   174dc:	subs	r4, r0, #0
   174e0:	beq	1750c <pclose@plt+0x4260>
   174e4:	mov	r0, r4
   174e8:	bl	12ff4 <gcry_xstrdup@plt>
   174ec:	ldr	r1, [pc, #68]	; 17538 <pclose@plt+0x428c>
   174f0:	mov	r4, r0
   174f4:	ldr	r0, [pc, #56]	; 17534 <pclose@plt+0x4288>
   174f8:	bl	12cf4 <bind_textdomain_codeset@plt>
   174fc:	subs	r5, r0, #0
   17500:	beq	17524 <pclose@plt+0x4278>
   17504:	mov	r0, r4
   17508:	pop	{r4, r5, r6, pc}
   1750c:	mov	r0, #14
   17510:	bl	130e4 <nl_langinfo@plt>
   17514:	subs	r4, r0, #0
   17518:	bne	174e4 <pclose@plt+0x4238>
   1751c:	mov	r0, r4
   17520:	pop	{r4, r5, r6, pc}
   17524:	mov	r0, r4
   17528:	bl	12b50 <gcry_free@plt>
   1752c:	mov	r4, r5
   17530:	b	17504 <pclose@plt+0x4258>
   17534:	andeq	sl, r2, r4, lsr #14
   17538:	andeq	sl, r2, ip, lsr #14
   1753c:	push	{r4, lr}
   17540:	subs	r4, r0, #0
   17544:	popeq	{r4, pc}
   17548:	mov	r1, r4
   1754c:	ldr	r0, [pc, #12]	; 17560 <pclose@plt+0x42b4>
   17550:	bl	12cf4 <bind_textdomain_codeset@plt>
   17554:	mov	r0, r4
   17558:	pop	{r4, lr}
   1755c:	b	12b50 <gcry_free@plt>
   17560:	andeq	sl, r2, r4, lsr #14
   17564:	push	{r4, r5, r6, lr}
   17568:	mov	r5, r0
   1756c:	bl	174cc <pclose@plt+0x4220>
   17570:	mov	r1, r5
   17574:	mov	r2, #5
   17578:	mov	r4, r0
   1757c:	mov	r0, #0
   17580:	bl	12b98 <dcgettext@plt>
   17584:	cmp	r4, #0
   17588:	mov	r5, r0
   1758c:	beq	175a4 <pclose@plt+0x42f8>
   17590:	mov	r1, r4
   17594:	ldr	r0, [pc, #16]	; 175ac <pclose@plt+0x4300>
   17598:	bl	12cf4 <bind_textdomain_codeset@plt>
   1759c:	mov	r0, r4
   175a0:	bl	12b50 <gcry_free@plt>
   175a4:	mov	r0, r5
   175a8:	pop	{r4, r5, r6, pc}
   175ac:	andeq	sl, r2, r4, lsr #14
   175b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   175b4:	subs	r5, r0, #0
   175b8:	mov	r6, r1
   175bc:	beq	176bc <pclose@plt+0x4410>
   175c0:	ldr	r8, [pc, #376]	; 17740 <pclose@plt+0x4494>
   175c4:	ldr	r4, [r8]
   175c8:	cmp	r4, #0
   175cc:	bne	175e0 <pclose@plt+0x4334>
   175d0:	b	17628 <pclose@plt+0x437c>
   175d4:	ldr	r4, [r4]
   175d8:	cmp	r4, #0
   175dc:	beq	17628 <pclose@plt+0x437c>
   175e0:	mov	r1, r5
   175e4:	add	r0, r4, #8
   175e8:	bl	12a24 <strcmp@plt>
   175ec:	cmp	r0, #0
   175f0:	bne	175d4 <pclose@plt+0x4328>
   175f4:	ldr	r3, [r4, #4]
   175f8:	cmp	r3, #0
   175fc:	beq	17628 <pclose@plt+0x437c>
   17600:	ldr	r2, [r3, #4]
   17604:	cmp	r6, r2
   17608:	bne	1761c <pclose@plt+0x4370>
   1760c:	b	176d8 <pclose@plt+0x442c>
   17610:	ldr	r2, [r3, #4]
   17614:	cmp	r2, r6
   17618:	beq	176d8 <pclose@plt+0x442c>
   1761c:	ldr	r3, [r3]
   17620:	cmp	r3, #0
   17624:	bne	17610 <pclose@plt+0x4364>
   17628:	mov	r1, #0
   1762c:	mov	r0, #5
   17630:	bl	13078 <setlocale@plt>
   17634:	cmp	r0, #0
   17638:	beq	176bc <pclose@plt+0x4410>
   1763c:	bl	13258 <gcry_strdup@plt>
   17640:	subs	r9, r0, #0
   17644:	beq	176bc <pclose@plt+0x4410>
   17648:	mov	r1, r5
   1764c:	mov	r0, #5
   17650:	bl	13078 <setlocale@plt>
   17654:	cmp	r0, #0
   17658:	beq	176f8 <pclose@plt+0x444c>
   1765c:	ldr	r1, [pc, #224]	; 17744 <pclose@plt+0x4498>
   17660:	ldr	r0, [pc, #224]	; 17748 <pclose@plt+0x449c>
   17664:	bl	131b0 <bindtextdomain@plt>
   17668:	mov	r2, #5
   1766c:	mov	r1, r6
   17670:	mov	r0, #0
   17674:	bl	12b98 <dcgettext@plt>
   17678:	mov	r1, r9
   1767c:	mov	r7, r0
   17680:	mov	r0, #5
   17684:	bl	13078 <setlocale@plt>
   17688:	ldr	r1, [pc, #180]	; 17744 <pclose@plt+0x4498>
   1768c:	ldr	r0, [pc, #180]	; 17748 <pclose@plt+0x449c>
   17690:	bl	131b0 <bindtextdomain@plt>
   17694:	cmp	r4, #0
   17698:	beq	17704 <pclose@plt+0x4458>
   1769c:	mov	r0, #12
   176a0:	bl	129d0 <gcry_malloc@plt>
   176a4:	cmp	r0, #0
   176a8:	ldrne	r3, [r4, #4]
   176ac:	strdne	r6, [r0, #4]
   176b0:	strne	r3, [r0]
   176b4:	strne	r0, [r4, #4]
   176b8:	b	176e0 <pclose@plt+0x4434>
   176bc:	mov	r0, #0
   176c0:	bl	12b50 <gcry_free@plt>
   176c4:	mov	r1, r6
   176c8:	mov	r2, #5
   176cc:	mov	r0, #0
   176d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   176d4:	b	12b98 <dcgettext@plt>
   176d8:	ldr	r7, [r3, #8]
   176dc:	mov	r9, #0
   176e0:	mov	r0, r9
   176e4:	bl	12b50 <gcry_free@plt>
   176e8:	cmp	r7, #0
   176ec:	beq	176c4 <pclose@plt+0x4418>
   176f0:	mov	r0, r7
   176f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   176f8:	mov	r0, r9
   176fc:	bl	12b50 <gcry_free@plt>
   17700:	b	176c4 <pclose@plt+0x4418>
   17704:	mov	r0, r5
   17708:	bl	12e8c <strlen@plt>
   1770c:	add	r0, r0, #12
   17710:	bl	129d0 <gcry_malloc@plt>
   17714:	subs	r4, r0, #0
   17718:	beq	176e0 <pclose@plt+0x4434>
   1771c:	mov	r1, r5
   17720:	add	r0, r4, #8
   17724:	bl	12cdc <strcpy@plt>
   17728:	ldr	r2, [r8]
   1772c:	mov	r3, #0
   17730:	str	r2, [r4]
   17734:	str	r4, [r8]
   17738:	str	r3, [r4, #4]
   1773c:	b	1769c <pclose@plt+0x43f0>
   17740:	andeq	lr, r3, ip, asr #11
   17744:	andeq	sl, r2, r0, lsl r7
   17748:	andeq	sl, r2, r4, lsr #14
   1774c:	push	{r4, r5, r6, r7, lr}
   17750:	ldrb	r6, [r0]
   17754:	cmp	r6, #48	; 0x30
   17758:	beq	17820 <pclose@plt+0x4574>
   1775c:	sub	r7, r6, #48	; 0x30
   17760:	uxtb	ip, r7
   17764:	cmp	ip, #9
   17768:	movhi	ip, #0
   1776c:	bhi	177ac <pclose@plt+0x4500>
   17770:	ldrb	r4, [r0, #1]
   17774:	sub	lr, r4, #48	; 0x30
   17778:	add	r5, r0, #1
   1777c:	mov	ip, #0
   17780:	b	17790 <pclose@plt+0x44e4>
   17784:	ldrb	r4, [r5, #1]!
   17788:	sub	r7, r6, #48	; 0x30
   1778c:	sub	lr, r4, #48	; 0x30
   17790:	add	ip, ip, ip, lsl #2
   17794:	uxtb	lr, lr
   17798:	cmp	lr, #9
   1779c:	mov	r6, r4
   177a0:	add	ip, r7, ip, lsl #1
   177a4:	mov	r0, r5
   177a8:	bls	17784 <pclose@plt+0x44d8>
   177ac:	str	ip, [r1]
   177b0:	ldrb	r1, [r0]
   177b4:	cmp	r1, #46	; 0x2e
   177b8:	bne	17838 <pclose@plt+0x458c>
   177bc:	ldrb	r4, [r0, #1]
   177c0:	add	lr, r0, #1
   177c4:	cmp	r4, #48	; 0x30
   177c8:	beq	17844 <pclose@plt+0x4598>
   177cc:	sub	ip, r4, #48	; 0x30
   177d0:	uxtb	r1, ip
   177d4:	cmp	r1, #9
   177d8:	movhi	r1, #0
   177dc:	bhi	17800 <pclose@plt+0x4554>
   177e0:	mov	r1, #0
   177e4:	ldrb	r4, [lr, #1]!
   177e8:	add	r1, r1, r1, lsl #2
   177ec:	add	r1, ip, r1, lsl #1
   177f0:	sub	ip, r4, #48	; 0x30
   177f4:	uxtb	r0, ip
   177f8:	cmp	r0, #9
   177fc:	bls	177e4 <pclose@plt+0x4538>
   17800:	str	r1, [r2]
   17804:	ldrb	r2, [lr]
   17808:	cmp	r2, #46	; 0x2e
   1780c:	movne	r2, #0
   17810:	beq	1785c <pclose@plt+0x45b0>
   17814:	str	r2, [r3]
   17818:	mov	r0, lr
   1781c:	pop	{r4, r5, r6, r7, pc}
   17820:	ldrb	r4, [r0, #1]
   17824:	sub	lr, r4, #48	; 0x30
   17828:	uxtb	ip, lr
   1782c:	cmp	ip, #9
   17830:	movhi	r7, #0
   17834:	bhi	17778 <pclose@plt+0x44cc>
   17838:	mov	lr, #0
   1783c:	mov	r0, lr
   17840:	pop	{r4, r5, r6, r7, pc}
   17844:	ldrb	r1, [r0, #2]
   17848:	sub	r1, r1, #48	; 0x30
   1784c:	cmp	r1, #9
   17850:	bls	17838 <pclose@plt+0x458c>
   17854:	mov	ip, #0
   17858:	b	177e0 <pclose@plt+0x4534>
   1785c:	ldrb	r0, [lr, #1]
   17860:	add	r2, lr, #1
   17864:	cmp	r0, #48	; 0x30
   17868:	beq	178ac <pclose@plt+0x4600>
   1786c:	sub	r1, r0, #48	; 0x30
   17870:	uxtb	r0, r1
   17874:	cmp	r0, #9
   17878:	movhi	lr, r2
   1787c:	movhi	r2, #0
   17880:	bhi	17814 <pclose@plt+0x4568>
   17884:	mov	lr, r2
   17888:	mov	r2, #0
   1788c:	ldrb	r0, [lr, #1]!
   17890:	add	r2, r2, r2, lsl #2
   17894:	add	r2, r1, r2, lsl #1
   17898:	sub	r1, r0, #48	; 0x30
   1789c:	uxtb	r0, r1
   178a0:	cmp	r0, #9
   178a4:	bls	1788c <pclose@plt+0x45e0>
   178a8:	b	17814 <pclose@plt+0x4568>
   178ac:	ldrb	r1, [lr, #2]
   178b0:	sub	r1, r1, #48	; 0x30
   178b4:	cmp	r1, #9
   178b8:	bls	17838 <pclose@plt+0x458c>
   178bc:	mov	r1, #0
   178c0:	b	17884 <pclose@plt+0x45d8>
   178c4:	cmp	r1, #0
   178c8:	push	{r4, lr}
   178cc:	mov	r4, r0
   178d0:	beq	17900 <pclose@plt+0x4654>
   178d4:	mov	r0, r1
   178d8:	bl	129f4 <getpwnam@plt>
   178dc:	cmp	r0, #0
   178e0:	popeq	{r4, pc}
   178e4:	cmp	r4, #0
   178e8:	ldr	r0, [r0, #20]
   178ec:	beq	178f8 <pclose@plt+0x464c>
   178f0:	pop	{r4, lr}
   178f4:	b	12ff4 <gcry_xstrdup@plt>
   178f8:	pop	{r4, lr}
   178fc:	b	13258 <gcry_strdup@plt>
   17900:	bl	12a9c <getuid@plt>
   17904:	bl	12a48 <getpwuid@plt>
   17908:	cmp	r0, #0
   1790c:	bne	178e4 <pclose@plt+0x4638>
   17910:	pop	{r4, pc}
   17914:	push	{r4, r5, r6, r7, r8, lr}
   17918:	sub	sp, sp, #200	; 0xc8
   1791c:	ldr	r8, [pc, #188]	; 179e0 <pclose@plt+0x4734>
   17920:	mov	r5, r1
   17924:	str	r0, [sp, #4]
   17928:	ldr	r3, [r8]
   1792c:	str	r3, [sp, #196]	; 0xc4
   17930:	bl	12e8c <strlen@plt>
   17934:	mov	r6, r0
   17938:	ldr	r0, [r5], #4
   1793c:	cmp	r0, #0
   17940:	str	r0, [sp, #8]
   17944:	beq	1797c <pclose@plt+0x46d0>
   17948:	bl	12e8c <strlen@plt>
   1794c:	add	r4, sp, #12
   17950:	add	r7, sp, #196	; 0xc4
   17954:	add	r6, r6, r0
   17958:	b	1796c <pclose@plt+0x46c0>
   1795c:	bl	12e8c <strlen@plt>
   17960:	cmp	r7, r4
   17964:	add	r6, r6, r0
   17968:	beq	179cc <pclose@plt+0x4720>
   1796c:	ldr	r0, [r5], #4
   17970:	cmp	r0, #0
   17974:	str	r0, [r4], #4
   17978:	bne	1795c <pclose@plt+0x46b0>
   1797c:	add	r0, r6, #1
   17980:	bl	129d0 <gcry_malloc@plt>
   17984:	subs	r5, r0, #0
   17988:	beq	179b0 <pclose@plt+0x4704>
   1798c:	ldr	r1, [sp, #4]
   17990:	cmp	r1, #0
   17994:	beq	179b0 <pclose@plt+0x4704>
   17998:	add	r4, sp, #8
   1799c:	mov	r0, r5
   179a0:	bl	12b80 <stpcpy@plt>
   179a4:	ldr	r1, [r4], #4
   179a8:	cmp	r1, #0
   179ac:	bne	179a0 <pclose@plt+0x46f4>
   179b0:	ldr	r2, [sp, #196]	; 0xc4
   179b4:	ldr	r3, [r8]
   179b8:	mov	r0, r5
   179bc:	cmp	r2, r3
   179c0:	bne	179dc <pclose@plt+0x4730>
   179c4:	add	sp, sp, #200	; 0xc8
   179c8:	pop	{r4, r5, r6, r7, r8, pc}
   179cc:	mov	r0, #22
   179d0:	bl	13108 <gpg_err_set_errno@plt>
   179d4:	mov	r5, #0
   179d8:	b	179b0 <pclose@plt+0x4704>
   179dc:	bl	12bb0 <__stack_chk_fail@plt>
   179e0:	andeq	sp, r3, r0, asr #21
   179e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179e8:	sub	sp, sp, #148	; 0x94
   179ec:	ldr	r7, [pc, #1020]	; 17df0 <pclose@plt+0x4b44>
   179f0:	mov	r9, r0
   179f4:	mov	r0, r1
   179f8:	ldr	r3, [r7]
   179fc:	mov	fp, r2
   17a00:	mov	r6, r1
   17a04:	str	r3, [sp, #140]	; 0x8c
   17a08:	bl	12e8c <strlen@plt>
   17a0c:	and	r8, r9, #1
   17a10:	mov	r5, r0
   17a14:	ldr	r0, [fp], #4
   17a18:	cmp	r0, #0
   17a1c:	str	r0, [sp, #12]
   17a20:	addeq	r5, r5, #1
   17a24:	beq	17a64 <pclose@plt+0x47b8>
   17a28:	bl	12e8c <strlen@plt>
   17a2c:	add	r5, r5, #2
   17a30:	add	r4, sp, #16
   17a34:	add	sl, sp, #140	; 0x8c
   17a38:	add	r5, r5, r0
   17a3c:	b	17a54 <pclose@plt+0x47a8>
   17a40:	bl	12e8c <strlen@plt>
   17a44:	cmp	sl, r4
   17a48:	add	r0, r0, #1
   17a4c:	add	r5, r5, r0
   17a50:	beq	17bf0 <pclose@plt+0x4944>
   17a54:	ldr	r0, [fp], #4
   17a58:	cmp	r0, #0
   17a5c:	str	r0, [r4], #4
   17a60:	bne	17a40 <pclose@plt+0x4794>
   17a64:	ldrb	r3, [r6]
   17a68:	add	r5, r5, #1
   17a6c:	cmp	r3, #126	; 0x7e
   17a70:	beq	17b6c <pclose@plt+0x48c0>
   17a74:	mov	r4, #0
   17a78:	mov	fp, r4
   17a7c:	mov	r3, #1
   17a80:	str	r3, [sp, #4]
   17a84:	cmp	r8, #0
   17a88:	mov	r0, r5
   17a8c:	beq	17c08 <pclose@plt+0x495c>
   17a90:	bl	129a0 <gcry_xmalloc@plt>
   17a94:	mov	sl, r0
   17a98:	cmp	r4, #0
   17a9c:	beq	17d0c <pclose@plt+0x4a60>
   17aa0:	mov	r1, r4
   17aa4:	mov	r0, sl
   17aa8:	bl	12b80 <stpcpy@plt>
   17aac:	ldr	r3, [sp, #4]
   17ab0:	add	r1, r6, r3
   17ab4:	bl	12b80 <stpcpy@plt>
   17ab8:	mov	r4, r0
   17abc:	mov	r0, fp
   17ac0:	bl	12b50 <gcry_free@plt>
   17ac4:	ldr	r1, [sp, #12]
   17ac8:	cmp	r1, #0
   17acc:	addne	fp, sp, #16
   17ad0:	movne	r6, #0
   17ad4:	movne	r5, #47	; 0x2f
   17ad8:	bne	17b00 <pclose@plt+0x4854>
   17adc:	b	17b3c <pclose@plt+0x4890>
   17ae0:	mov	r0, r4
   17ae4:	add	r6, r6, #1
   17ae8:	strb	r5, [r0], #1
   17aec:	bl	12b80 <stpcpy@plt>
   17af0:	ldr	r1, [fp], #4
   17af4:	cmp	r1, #0
   17af8:	mov	r4, r0
   17afc:	beq	17b3c <pclose@plt+0x4890>
   17b00:	cmp	r6, #0
   17b04:	bne	17ae0 <pclose@plt+0x4834>
   17b08:	ldrb	r3, [sl]
   17b0c:	cmp	r3, #47	; 0x2f
   17b10:	bne	17ae0 <pclose@plt+0x4834>
   17b14:	ldrb	r3, [sl, #1]
   17b18:	cmp	r3, #0
   17b1c:	bne	17ae0 <pclose@plt+0x4834>
   17b20:	mov	r0, r4
   17b24:	bl	12b80 <stpcpy@plt>
   17b28:	ldr	r1, [fp], #4
   17b2c:	add	r6, r6, #1
   17b30:	cmp	r1, #0
   17b34:	mov	r4, r0
   17b38:	bne	17b00 <pclose@plt+0x4854>
   17b3c:	tst	r9, #2
   17b40:	beq	17b50 <pclose@plt+0x48a4>
   17b44:	ldrb	r3, [sl]
   17b48:	cmp	r3, #47	; 0x2f
   17b4c:	bne	17c20 <pclose@plt+0x4974>
   17b50:	ldr	r2, [sp, #140]	; 0x8c
   17b54:	ldr	r3, [r7]
   17b58:	mov	r0, sl
   17b5c:	cmp	r2, r3
   17b60:	bne	17dec <pclose@plt+0x4b40>
   17b64:	add	sp, sp, #148	; 0x94
   17b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b6c:	ldrb	r3, [r6, #1]
   17b70:	cmp	r3, #0
   17b74:	cmpne	r3, #47	; 0x2f
   17b78:	beq	17cc4 <pclose@plt+0x4a18>
   17b7c:	cmp	r8, #0
   17b80:	add	r0, r6, #1
   17b84:	beq	17d20 <pclose@plt+0x4a74>
   17b88:	bl	12ff4 <gcry_xstrdup@plt>
   17b8c:	mov	sl, r0
   17b90:	mov	r1, #47	; 0x2f
   17b94:	mov	r0, sl
   17b98:	bl	12eb0 <strchr@plt>
   17b9c:	cmp	r0, #0
   17ba0:	movne	r3, #0
   17ba4:	strbne	r3, [r0]
   17ba8:	mov	r0, sl
   17bac:	bl	12e8c <strlen@plt>
   17bb0:	mov	r1, sl
   17bb4:	mov	r4, r0
   17bb8:	mov	r0, r8
   17bbc:	bl	178c4 <pclose@plt+0x4618>
   17bc0:	mov	fp, r0
   17bc4:	mov	r0, sl
   17bc8:	bl	12b50 <gcry_free@plt>
   17bcc:	cmp	fp, #0
   17bd0:	beq	17cfc <pclose@plt+0x4a50>
   17bd4:	mov	r0, fp
   17bd8:	bl	12e8c <strlen@plt>
   17bdc:	add	r3, r4, #1
   17be0:	str	r3, [sp, #4]
   17be4:	mov	r4, fp
   17be8:	add	r5, r5, r0
   17bec:	b	17a84 <pclose@plt+0x47d8>
   17bf0:	cmp	r8, #0
   17bf4:	bne	17ddc <pclose@plt+0x4b30>
   17bf8:	mov	r0, #22
   17bfc:	mov	sl, r8
   17c00:	bl	13108 <gpg_err_set_errno@plt>
   17c04:	b	17b50 <pclose@plt+0x48a4>
   17c08:	bl	129d0 <gcry_malloc@plt>
   17c0c:	subs	sl, r0, #0
   17c10:	bne	17a98 <pclose@plt+0x47ec>
   17c14:	mov	r0, fp
   17c18:	bl	12b50 <gcry_free@plt>
   17c1c:	b	17b50 <pclose@plt+0x48a4>
   17c20:	bl	1d89c <pclose@plt+0xa5f0>
   17c24:	subs	r5, r0, #0
   17c28:	beq	17d88 <pclose@plt+0x4adc>
   17c2c:	bl	12e8c <strlen@plt>
   17c30:	mov	r4, r0
   17c34:	mov	r0, sl
   17c38:	bl	12e8c <strlen@plt>
   17c3c:	cmp	r8, #0
   17c40:	add	r0, r4, r0
   17c44:	add	r0, r0, #2
   17c48:	beq	17d30 <pclose@plt+0x4a84>
   17c4c:	bl	129a0 <gcry_xmalloc@plt>
   17c50:	mov	r4, r0
   17c54:	ldrb	r3, [r5]
   17c58:	cmp	r3, #47	; 0x2f
   17c5c:	bne	17c6c <pclose@plt+0x49c0>
   17c60:	ldrb	r2, [r5, #1]
   17c64:	cmp	r2, #0
   17c68:	beq	17d54 <pclose@plt+0x4aa8>
   17c6c:	mov	r1, r5
   17c70:	mov	r0, r4
   17c74:	bl	12b80 <stpcpy@plt>
   17c78:	mov	r3, #47	; 0x2f
   17c7c:	mov	r1, sl
   17c80:	strb	r3, [r0], #1
   17c84:	bl	12cdc <strcpy@plt>
   17c88:	mov	r0, r5
   17c8c:	bl	12b50 <gcry_free@plt>
   17c90:	mov	r0, sl
   17c94:	bl	12b50 <gcry_free@plt>
   17c98:	mov	r0, r4
   17c9c:	bl	12e8c <strlen@plt>
   17ca0:	cmp	r0, #2
   17ca4:	bls	17cbc <pclose@plt+0x4a10>
   17ca8:	sub	r3, r0, #2
   17cac:	add	r2, r4, r3
   17cb0:	ldrb	r3, [r4, r3]
   17cb4:	cmp	r3, #47	; 0x2f
   17cb8:	beq	17d68 <pclose@plt+0x4abc>
   17cbc:	mov	sl, r4
   17cc0:	b	17b50 <pclose@plt+0x48a4>
   17cc4:	ldr	r0, [pc, #296]	; 17df4 <pclose@plt+0x4b48>
   17cc8:	bl	12d48 <getenv@plt>
   17ccc:	subs	r4, r0, #0
   17cd0:	movne	fp, #0
   17cd4:	beq	17dc0 <pclose@plt+0x4b14>
   17cd8:	ldrb	r3, [r4]
   17cdc:	cmp	r3, #0
   17ce0:	beq	17d00 <pclose@plt+0x4a54>
   17ce4:	mov	r0, r4
   17ce8:	bl	12e8c <strlen@plt>
   17cec:	mov	r3, #1
   17cf0:	str	r3, [sp, #4]
   17cf4:	add	r5, r5, r0
   17cf8:	b	17a84 <pclose@plt+0x47d8>
   17cfc:	mov	r4, fp
   17d00:	mov	r3, #1
   17d04:	str	r3, [sp, #4]
   17d08:	b	17a84 <pclose@plt+0x47d8>
   17d0c:	mov	r1, r6
   17d10:	mov	r0, sl
   17d14:	bl	12b80 <stpcpy@plt>
   17d18:	mov	r4, r0
   17d1c:	b	17abc <pclose@plt+0x4810>
   17d20:	bl	13258 <gcry_strdup@plt>
   17d24:	subs	sl, r0, #0
   17d28:	bne	17b90 <pclose@plt+0x48e4>
   17d2c:	b	17b50 <pclose@plt+0x48a4>
   17d30:	bl	129d0 <gcry_malloc@plt>
   17d34:	subs	r4, r0, #0
   17d38:	bne	17c54 <pclose@plt+0x49a8>
   17d3c:	mov	r0, r5
   17d40:	bl	12b50 <gcry_free@plt>
   17d44:	mov	r0, sl
   17d48:	bl	12b50 <gcry_free@plt>
   17d4c:	mov	sl, r8
   17d50:	b	17b50 <pclose@plt+0x48a4>
   17d54:	mov	r0, r4
   17d58:	mov	r1, sl
   17d5c:	strb	r3, [r0], #1
   17d60:	bl	12cdc <strcpy@plt>
   17d64:	b	17c88 <pclose@plt+0x49dc>
   17d68:	add	r0, r4, r0
   17d6c:	ldrb	r3, [r0, #-1]
   17d70:	cmp	r3, #46	; 0x2e
   17d74:	moveq	r3, #0
   17d78:	moveq	sl, r4
   17d7c:	strbeq	r3, [r2]
   17d80:	bne	17cbc <pclose@plt+0x4a10>
   17d84:	b	17b50 <pclose@plt+0x48a4>
   17d88:	cmp	r8, #0
   17d8c:	beq	17d44 <pclose@plt+0x4a98>
   17d90:	ldr	r3, [pc, #96]	; 17df8 <pclose@plt+0x4b4c>
   17d94:	ldr	r4, [r3]
   17d98:	bl	12f10 <__errno_location@plt>
   17d9c:	ldr	r0, [r0]
   17da0:	bl	12db4 <strerror@plt>
   17da4:	ldr	r2, [pc, #80]	; 17dfc <pclose@plt+0x4b50>
   17da8:	mov	r1, #1
   17dac:	mov	r3, r0
   17db0:	mov	r0, r4
   17db4:	bl	12fe8 <__fprintf_chk@plt>
   17db8:	mov	r0, #2
   17dbc:	bl	12e44 <exit@plt>
   17dc0:	mov	r1, r4
   17dc4:	mov	r0, r8
   17dc8:	bl	178c4 <pclose@plt+0x4618>
   17dcc:	subs	fp, r0, #0
   17dd0:	mov	r4, fp
   17dd4:	beq	17d00 <pclose@plt+0x4a54>
   17dd8:	b	17cd8 <pclose@plt+0x4a2c>
   17ddc:	ldr	r2, [pc, #28]	; 17e00 <pclose@plt+0x4b54>
   17de0:	mov	r1, #432	; 0x1b0
   17de4:	ldr	r0, [pc, #24]	; 17e04 <pclose@plt+0x4b58>
   17de8:	bl	1cd10 <pclose@plt+0x9a64>
   17dec:	bl	12bb0 <__stack_chk_fail@plt>
   17df0:	andeq	sp, r3, r0, asr #21
   17df4:	andeq	sl, r2, r0, ror r7
   17df8:	muleq	r3, r8, r1
   17dfc:	andeq	sl, r2, r8, ror r7
   17e00:	andeq	sl, r2, r4, lsr r7
   17e04:	andeq	sl, r2, r4, asr r7
   17e08:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e0c:	mov	fp, r1
   17e10:	ldrb	r1, [r0]
   17e14:	mov	r7, r0
   17e18:	mov	r6, r2
   17e1c:	cmp	r1, #0
   17e20:	beq	17ff4 <pclose@plt+0x4d48>
   17e24:	mov	r4, r0
   17e28:	mov	r5, #0
   17e2c:	rsb	r8, r0, #1
   17e30:	b	17e48 <pclose@plt+0x4b9c>
   17e34:	add	r5, r5, #1
   17e38:	add	r0, r8, r4
   17e3c:	ldrb	r1, [r4, #1]!
   17e40:	cmp	r1, #0
   17e44:	beq	17e8c <pclose@plt+0x4be0>
   17e48:	cmp	r1, #37	; 0x25
   17e4c:	cmpne	r1, #58	; 0x3a
   17e50:	moveq	r3, #1
   17e54:	movne	r3, #0
   17e58:	cmp	r1, #10
   17e5c:	orreq	r3, r3, #1
   17e60:	cmp	r3, #0
   17e64:	bne	17e34 <pclose@plt+0x4b88>
   17e68:	subs	r0, fp, #0
   17e6c:	beq	17e38 <pclose@plt+0x4b8c>
   17e70:	bl	12eb0 <strchr@plt>
   17e74:	cmp	r0, #0
   17e78:	bne	17e34 <pclose@plt+0x4b88>
   17e7c:	add	r0, r8, r4
   17e80:	ldrb	r1, [r4, #1]!
   17e84:	cmp	r1, #0
   17e88:	bne	17e48 <pclose@plt+0x4b9c>
   17e8c:	add	r0, r0, r5, lsl #1
   17e90:	add	r0, r0, #1
   17e94:	cmp	r6, #0
   17e98:	beq	17fd4 <pclose@plt+0x4d28>
   17e9c:	bl	129a0 <gcry_xmalloc@plt>
   17ea0:	ldrb	r5, [r7]
   17ea4:	cmp	r5, #0
   17ea8:	mov	r6, r0
   17eac:	beq	17fec <pclose@plt+0x4d40>
   17eb0:	mov	r4, #0
   17eb4:	mov	r3, #37	; 0x25
   17eb8:	mov	r2, #97	; 0x61
   17ebc:	b	17f38 <pclose@plt+0x4c8c>
   17ec0:	cmp	r5, #37	; 0x25
   17ec4:	beq	17f84 <pclose@plt+0x4cd8>
   17ec8:	cmp	r5, #10
   17ecc:	beq	17fa8 <pclose@plt+0x4cfc>
   17ed0:	cmp	fp, #0
   17ed4:	beq	17fc8 <pclose@plt+0x4d1c>
   17ed8:	mov	r1, r5
   17edc:	mov	r0, fp
   17ee0:	bl	12eb0 <strchr@plt>
   17ee4:	mov	r3, #37	; 0x25
   17ee8:	mov	r2, #97	; 0x61
   17eec:	cmp	r0, #0
   17ef0:	beq	17fc8 <pclose@plt+0x4d1c>
   17ef4:	lsr	r1, r5, #4
   17ef8:	cmp	r1, #9
   17efc:	addls	r1, r1, #48	; 0x30
   17f00:	addhi	r1, r1, #87	; 0x57
   17f04:	and	r5, r5, #15
   17f08:	strb	r3, [sl]
   17f0c:	strb	r1, [r8]
   17f10:	add	r1, r4, #2
   17f14:	add	r4, r4, #3
   17f18:	cmp	r5, #9
   17f1c:	add	r8, r6, r4
   17f20:	addls	r5, r5, #48	; 0x30
   17f24:	addhi	r5, r5, #87	; 0x57
   17f28:	strb	r5, [r6, r1]
   17f2c:	ldrb	r5, [r7, #1]!
   17f30:	cmp	r5, #0
   17f34:	beq	17f74 <pclose@plt+0x4cc8>
   17f38:	add	r9, r4, #1
   17f3c:	cmp	r5, #58	; 0x3a
   17f40:	add	r8, r6, r9
   17f44:	add	sl, r6, r4
   17f48:	bne	17ec0 <pclose@plt+0x4c14>
   17f4c:	add	r1, r4, #2
   17f50:	mov	r0, #51	; 0x33
   17f54:	strb	r3, [r6, r4]
   17f58:	strb	r0, [r6, r9]
   17f5c:	strb	r2, [r6, r1]
   17f60:	ldrb	r5, [r7, #1]!
   17f64:	add	r4, r4, #3
   17f68:	add	r8, r6, r4
   17f6c:	cmp	r5, #0
   17f70:	bne	17f38 <pclose@plt+0x4c8c>
   17f74:	mov	r3, #0
   17f78:	strb	r3, [r8]
   17f7c:	mov	r0, r6
   17f80:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f84:	add	r1, r4, #2
   17f88:	mov	r0, #50	; 0x32
   17f8c:	strb	r5, [sl]
   17f90:	add	r4, r4, #3
   17f94:	strb	r0, [r8]
   17f98:	mov	r0, #53	; 0x35
   17f9c:	strb	r0, [r6, r1]
   17fa0:	add	r8, r6, r4
   17fa4:	b	17f2c <pclose@plt+0x4c80>
   17fa8:	add	r1, r4, #2
   17fac:	mov	r0, #48	; 0x30
   17fb0:	add	r4, r4, #3
   17fb4:	strb	r3, [sl]
   17fb8:	strb	r0, [r8]
   17fbc:	strb	r2, [r6, r1]
   17fc0:	add	r8, r6, r4
   17fc4:	b	17f2c <pclose@plt+0x4c80>
   17fc8:	mov	r4, r9
   17fcc:	strb	r5, [sl]
   17fd0:	b	17f2c <pclose@plt+0x4c80>
   17fd4:	bl	129d0 <gcry_malloc@plt>
   17fd8:	subs	r6, r0, #0
   17fdc:	beq	17f7c <pclose@plt+0x4cd0>
   17fe0:	ldrb	r5, [r7]
   17fe4:	cmp	r5, #0
   17fe8:	bne	17eb0 <pclose@plt+0x4c04>
   17fec:	mov	r8, r6
   17ff0:	b	17f74 <pclose@plt+0x4cc8>
   17ff4:	mov	r0, #1
   17ff8:	b	17e94 <pclose@plt+0x4be8>
   17ffc:	ldrb	r3, [r0]
   18000:	mov	r2, r0
   18004:	cmp	r3, #0
   18008:	beq	1803c <pclose@plt+0x4d90>
   1800c:	mov	r0, #0
   18010:	and	r3, r3, #192	; 0xc0
   18014:	cmp	r3, #128	; 0x80
   18018:	addne	r0, r0, #1
   1801c:	cmn	r1, #1
   18020:	beq	1802c <pclose@plt+0x4d80>
   18024:	subs	r1, r1, #1
   18028:	bxeq	lr
   1802c:	ldrb	r3, [r2, #1]!
   18030:	cmp	r3, #0
   18034:	bne	18010 <pclose@plt+0x4d64>
   18038:	bx	lr
   1803c:	mov	r0, r3
   18040:	bx	lr
   18044:	cmp	r2, #0
   18048:	beq	180b0 <pclose@plt+0x4e04>
   1804c:	add	r2, r0, r2
   18050:	push	{r4, r5, r6, lr}
   18054:	sub	r0, r0, #1
   18058:	sub	r6, r2, #1
   1805c:	sub	r1, r1, #1
   18060:	ldrb	lr, [r0, #1]!
   18064:	ldrb	ip, [r1, #1]!
   18068:	mov	r2, lr
   1806c:	cmp	lr, ip
   18070:	mov	r3, ip
   18074:	sub	r5, lr, #97	; 0x61
   18078:	sub	r4, ip, #97	; 0x61
   1807c:	beq	18098 <pclose@plt+0x4dec>
   18080:	cmp	r5, #25
   18084:	bicls	r2, lr, #32
   18088:	cmp	r4, #25
   1808c:	bicls	r3, ip, #32
   18090:	cmp	r3, r2
   18094:	bne	180a8 <pclose@plt+0x4dfc>
   18098:	cmp	r0, r6
   1809c:	bne	18060 <pclose@plt+0x4db4>
   180a0:	mov	r0, #0
   180a4:	pop	{r4, r5, r6, pc}
   180a8:	sub	r0, r2, r3
   180ac:	pop	{r4, r5, r6, pc}
   180b0:	mov	r0, r2
   180b4:	bx	lr
   180b8:	push	{r4, r5, r6, lr}
   180bc:	mov	r4, r0
   180c0:	mov	r0, r1
   180c4:	mov	r6, r1
   180c8:	bl	12e8c <strlen@plt>
   180cc:	mov	r1, r6
   180d0:	mov	r2, r0
   180d4:	mov	r5, r0
   180d8:	mov	r0, r4
   180dc:	bl	1321c <strncmp@plt>
   180e0:	cmp	r0, #0
   180e4:	bne	18134 <pclose@plt+0x4e88>
   180e8:	ldrb	r2, [r4, r5]
   180ec:	add	r0, r4, r5
   180f0:	tst	r2, #223	; 0xdf
   180f4:	sub	r3, r2, #9
   180f8:	clz	r3, r3
   180fc:	lsr	r3, r3, #5
   18100:	movne	r1, r3
   18104:	moveq	r1, #1
   18108:	cmp	r1, #0
   1810c:	beq	18134 <pclose@plt+0x4e88>
   18110:	cmp	r2, #32
   18114:	orreq	r3, r3, #1
   18118:	cmp	r3, #0
   1811c:	popeq	{r4, r5, r6, pc}
   18120:	ldrb	r3, [r0, #1]!
   18124:	cmp	r3, #9
   18128:	cmpne	r3, #32
   1812c:	beq	18120 <pclose@plt+0x4e74>
   18130:	pop	{r4, r5, r6, pc}
   18134:	mov	r0, #0
   18138:	pop	{r4, r5, r6, pc}
   1813c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18140:	subs	r5, r1, #0
   18144:	beq	181f0 <pclose@plt+0x4f44>
   18148:	mov	r4, r0
   1814c:	mov	r8, r2
   18150:	bl	12de4 <__ctype_toupper_loc@plt>
   18154:	ldrb	r3, [r8]
   18158:	mov	r1, r5
   1815c:	add	r9, r4, r1
   18160:	mov	r5, r4
   18164:	ldr	r0, [r0]
   18168:	ldr	sl, [r0, r3, lsl #2]
   1816c:	b	18180 <pclose@plt+0x4ed4>
   18170:	cmp	lr, #0
   18174:	beq	181f8 <pclose@plt+0x4f4c>
   18178:	mov	r1, lr
   1817c:	mov	r5, r3
   18180:	mov	r3, r5
   18184:	sub	lr, r1, #1
   18188:	ldrb	r2, [r3], #1
   1818c:	ldr	r2, [r0, r2, lsl #2]
   18190:	cmp	r2, sl
   18194:	bne	18170 <pclose@plt+0x4ec4>
   18198:	cmp	r3, r9
   1819c:	add	r4, r8, #1
   181a0:	ldrb	ip, [r8, #1]
   181a4:	beq	18204 <pclose@plt+0x4f58>
   181a8:	ldrb	r6, [r3]
   181ac:	ldr	r2, [r0, ip, lsl #2]
   181b0:	ldr	r6, [r0, r6, lsl #2]
   181b4:	cmp	r6, r2
   181b8:	bne	181e8 <pclose@plt+0x4f3c>
   181bc:	add	fp, r5, r1
   181c0:	add	r1, r3, #1
   181c4:	b	181dc <pclose@plt+0x4f30>
   181c8:	ldrb	r2, [r1], #1
   181cc:	ldr	r6, [r0, ip, lsl #2]
   181d0:	ldr	r7, [r0, r2, lsl #2]
   181d4:	cmp	r7, r6
   181d8:	bne	181e8 <pclose@plt+0x4f3c>
   181dc:	cmp	fp, r1
   181e0:	ldrb	ip, [r4, #1]!
   181e4:	bne	181c8 <pclose@plt+0x4f1c>
   181e8:	cmp	ip, #0
   181ec:	bne	18178 <pclose@plt+0x4ecc>
   181f0:	mov	r0, r5
   181f4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181f8:	mov	r5, lr
   181fc:	mov	r0, r5
   18200:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18204:	cmp	ip, #0
   18208:	bne	18170 <pclose@plt+0x4ec4>
   1820c:	b	181f0 <pclose@plt+0x4f44>
   18210:	cmp	r1, #0
   18214:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18218:	beq	18268 <pclose@plt+0x4fbc>
   1821c:	ldrb	r6, [r2]
   18220:	add	r8, r1, #1
   18224:	add	r8, r2, r8
   18228:	sub	r3, r6, #97	; 0x61
   1822c:	cmp	r3, #25
   18230:	add	r8, r0, r8
   18234:	andls	r6, r6, #223	; 0xdf
   18238:	add	r7, r0, r1
   1823c:	ldrb	r1, [r0]
   18240:	add	r3, r0, #1
   18244:	mov	r9, r0
   18248:	sub	r0, r1, #97	; 0x61
   1824c:	cmp	r0, #25
   18250:	bicls	r1, r1, #32
   18254:	cmp	r6, r1
   18258:	mov	r0, r3
   1825c:	beq	18274 <pclose@plt+0x4fc8>
   18260:	cmp	r7, r3
   18264:	bne	1823c <pclose@plt+0x4f90>
   18268:	mov	r9, #0
   1826c:	mov	r0, r9
   18270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18274:	cmp	r3, r7
   18278:	add	lr, r2, #1
   1827c:	ldrb	ip, [r2, #1]
   18280:	beq	182d4 <pclose@plt+0x5028>
   18284:	sub	sl, r8, r3
   18288:	b	18298 <pclose@plt+0x4fec>
   1828c:	ldrb	ip, [lr, #1]!
   18290:	cmp	lr, sl
   18294:	beq	182c4 <pclose@plt+0x5018>
   18298:	ldrb	r1, [r3]
   1829c:	sub	r4, ip, #97	; 0x61
   182a0:	add	r3, r3, #1
   182a4:	sub	r5, r1, #97	; 0x61
   182a8:	cmp	r5, #25
   182ac:	bicls	r1, r1, #32
   182b0:	cmp	r4, #25
   182b4:	mov	r4, ip
   182b8:	bicls	r4, ip, #32
   182bc:	cmp	r4, r1
   182c0:	beq	1828c <pclose@plt+0x4fe0>
   182c4:	cmp	ip, #0
   182c8:	bne	1823c <pclose@plt+0x4f90>
   182cc:	mov	r0, r9
   182d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   182d4:	cmp	ip, #0
   182d8:	bne	18268 <pclose@plt+0x4fbc>
   182dc:	b	1826c <pclose@plt+0x4fc0>
   182e0:	push	{r4, lr}
   182e4:	subs	r4, r2, #0
   182e8:	sub	sp, sp, #8
   182ec:	beq	18340 <pclose@plt+0x5094>
   182f0:	cmp	r0, #0
   182f4:	beq	18348 <pclose@plt+0x509c>
   182f8:	cmp	r4, #1
   182fc:	beq	1835c <pclose@plt+0x50b0>
   18300:	ldrb	r3, [r1]
   18304:	cmp	r3, #0
   18308:	beq	1835c <pclose@plt+0x50b0>
   1830c:	sub	ip, r1, #1
   18310:	add	r2, ip, r4
   18314:	add	r1, r1, #1
   18318:	mov	ip, r0
   1831c:	b	1832c <pclose@plt+0x5080>
   18320:	ldrb	r3, [r1], #1
   18324:	cmp	r3, #0
   18328:	beq	18338 <pclose@plt+0x508c>
   1832c:	cmp	r1, r2
   18330:	strb	r3, [ip], #1
   18334:	bne	18320 <pclose@plt+0x5074>
   18338:	mov	r3, #0
   1833c:	strb	r3, [ip]
   18340:	add	sp, sp, #8
   18344:	pop	{r4, pc}
   18348:	mov	r0, r4
   1834c:	str	r1, [sp, #4]
   18350:	bl	129a0 <gcry_xmalloc@plt>
   18354:	ldr	r1, [sp, #4]
   18358:	b	182f8 <pclose@plt+0x504c>
   1835c:	mov	ip, r0
   18360:	b	18338 <pclose@plt+0x508c>
   18364:	push	{r4, r5, r6, lr}
   18368:	mov	r5, r0
   1836c:	ldrb	r4, [r0]
   18370:	cmp	r4, #0
   18374:	beq	183f0 <pclose@plt+0x5144>
   18378:	bl	12e14 <__ctype_b_loc@plt>
   1837c:	mov	r1, r5
   18380:	ldr	r2, [r0]
   18384:	b	18394 <pclose@plt+0x50e8>
   18388:	ldrb	r4, [r1, #1]!
   1838c:	cmp	r4, #0
   18390:	beq	183f8 <pclose@plt+0x514c>
   18394:	lsl	r4, r4, #1
   18398:	ldrh	r3, [r2, r4]
   1839c:	ands	r3, r3, #8192	; 0x2000
   183a0:	bne	18388 <pclose@plt+0x50dc>
   183a4:	ldrb	r2, [r1]
   183a8:	cmp	r2, #0
   183ac:	strb	r2, [r5]
   183b0:	movne	ip, r5
   183b4:	beq	183f0 <pclose@plt+0x5144>
   183b8:	ldr	lr, [r0]
   183bc:	lsl	r2, r2, #1
   183c0:	ldrh	r2, [lr, r2]
   183c4:	ands	r2, r2, #8192	; 0x2000
   183c8:	moveq	r3, r2
   183cc:	beq	183d8 <pclose@plt+0x512c>
   183d0:	cmp	r3, #0
   183d4:	moveq	r3, ip
   183d8:	ldrb	r2, [r1, #1]!
   183dc:	cmp	r2, #0
   183e0:	strb	r2, [ip, #1]!
   183e4:	bne	183b8 <pclose@plt+0x510c>
   183e8:	cmp	r3, #0
   183ec:	strbne	r2, [r3]
   183f0:	mov	r0, r5
   183f4:	pop	{r4, r5, r6, pc}
   183f8:	strb	r4, [r5]
   183fc:	mov	r0, r5
   18400:	pop	{r4, r5, r6, pc}
   18404:	push	{r4, r5, r6, lr}
   18408:	mov	r5, r0
   1840c:	ldrb	r4, [r0]
   18410:	cmp	r4, #0
   18414:	beq	18458 <pclose@plt+0x51ac>
   18418:	bl	12e14 <__ctype_b_loc@plt>
   1841c:	mov	r2, r5
   18420:	mov	r1, #0
   18424:	ldr	r0, [r0]
   18428:	lsl	r4, r4, #1
   1842c:	ldrh	r3, [r0, r4]
   18430:	ands	r3, r3, #8192	; 0x2000
   18434:	moveq	r1, r3
   18438:	beq	18444 <pclose@plt+0x5198>
   1843c:	cmp	r1, #0
   18440:	moveq	r1, r2
   18444:	ldrb	r4, [r2, #1]!
   18448:	cmp	r4, #0
   1844c:	bne	18428 <pclose@plt+0x517c>
   18450:	cmp	r1, #0
   18454:	strbne	r4, [r1]
   18458:	mov	r0, r5
   1845c:	pop	{r4, r5, r6, pc}
   18460:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18464:	subs	r9, r1, #0
   18468:	beq	184c8 <pclose@plt+0x521c>
   1846c:	mov	r7, r2
   18470:	mov	sl, r0
   18474:	mov	r4, r0
   18478:	add	r8, r0, r9
   1847c:	mov	r5, #0
   18480:	ldrb	r1, [r4]
   18484:	mov	r0, r7
   18488:	bl	12eb0 <strchr@plt>
   1848c:	mov	r6, r4
   18490:	add	r4, r4, #1
   18494:	cmp	r0, #0
   18498:	moveq	r5, r0
   1849c:	beq	184a8 <pclose@plt+0x51fc>
   184a0:	cmp	r5, #0
   184a4:	moveq	r5, r6
   184a8:	cmp	r4, r8
   184ac:	bne	18480 <pclose@plt+0x51d4>
   184b0:	cmp	r5, #0
   184b4:	beq	184c8 <pclose@plt+0x521c>
   184b8:	mov	r3, #0
   184bc:	sub	r0, r5, sl
   184c0:	strb	r3, [r5]
   184c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184c8:	mov	r0, r9
   184cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184d0:	ldr	r2, [pc]	; 184d8 <pclose@plt+0x522c>
   184d4:	b	18460 <pclose@plt+0x51b4>
   184d8:	muleq	r2, r4, r7
   184dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   184e0:	subs	r9, r1, #0
   184e4:	beq	1853c <pclose@plt+0x5290>
   184e8:	mov	r7, r2
   184ec:	mov	sl, r0
   184f0:	mov	r4, r0
   184f4:	add	r8, r0, r9
   184f8:	mov	r6, #0
   184fc:	ldrb	r1, [r4]
   18500:	mov	r0, r7
   18504:	bl	12eb0 <strchr@plt>
   18508:	mov	r5, r4
   1850c:	add	r4, r4, #1
   18510:	cmp	r0, #0
   18514:	moveq	r6, r0
   18518:	beq	18524 <pclose@plt+0x5278>
   1851c:	cmp	r6, #0
   18520:	moveq	r6, r5
   18524:	cmp	r4, r8
   18528:	bne	184fc <pclose@plt+0x5250>
   1852c:	cmp	r6, #0
   18530:	beq	1853c <pclose@plt+0x5290>
   18534:	sub	r0, r6, sl
   18538:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1853c:	mov	r0, r9
   18540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18544:	ldr	r2, [pc]	; 1854c <pclose@plt+0x52a0>
   18548:	b	184dc <pclose@plt+0x5230>
   1854c:	muleq	r2, r4, r7
   18550:	push	{r4, lr}
   18554:	mov	r1, #47	; 0x2f
   18558:	mov	r4, r0
   1855c:	bl	130cc <strrchr@plt>
   18560:	cmp	r0, #0
   18564:	beq	18574 <pclose@plt+0x52c8>
   18568:	add	r0, r0, #1
   1856c:	pop	{r4, lr}
   18570:	b	12ff4 <gcry_xstrdup@plt>
   18574:	mov	r0, r4
   18578:	pop	{r4, lr}
   1857c:	b	12ff4 <gcry_xstrdup@plt>
   18580:	push	{r4, r5, r6, lr}
   18584:	mov	r1, #47	; 0x2f
   18588:	mov	r5, r0
   1858c:	bl	130cc <strrchr@plt>
   18590:	cmp	r0, #0
   18594:	beq	185bc <pclose@plt+0x5310>
   18598:	sub	r4, r0, r5
   1859c:	add	r0, r4, #1
   185a0:	bl	129a0 <gcry_xmalloc@plt>
   185a4:	mov	r2, r4
   185a8:	mov	r1, r5
   185ac:	bl	12f70 <strncpy@plt>
   185b0:	mov	r2, #0
   185b4:	strb	r2, [r0, r4]
   185b8:	pop	{r4, r5, r6, pc}
   185bc:	ldr	r0, [pc, #4]	; 185c8 <pclose@plt+0x531c>
   185c0:	pop	{r4, r5, r6, lr}
   185c4:	b	12ff4 <gcry_xstrdup@plt>
   185c8:	andeq	sl, r2, r4, lsr #26
   185cc:	push	{r0, r1, r2, r3}
   185d0:	mov	r0, #1
   185d4:	push	{r4, lr}
   185d8:	sub	sp, sp, #8
   185dc:	ldr	r4, [pc, #60]	; 18620 <pclose@plt+0x5374>
   185e0:	add	r3, sp, #20
   185e4:	mov	r2, r3
   185e8:	ldr	ip, [r4]
   185ec:	ldr	r1, [sp, #16]
   185f0:	str	r3, [sp]
   185f4:	str	ip, [sp, #4]
   185f8:	bl	179e4 <pclose@plt+0x4738>
   185fc:	ldr	r2, [sp, #4]
   18600:	ldr	r3, [r4]
   18604:	cmp	r2, r3
   18608:	bne	1861c <pclose@plt+0x5370>
   1860c:	add	sp, sp, #8
   18610:	pop	{r4, lr}
   18614:	add	sp, sp, #16
   18618:	bx	lr
   1861c:	bl	12bb0 <__stack_chk_fail@plt>
   18620:	andeq	sp, r3, r0, asr #21
   18624:	push	{r0, r1, r2, r3}
   18628:	mov	r0, #0
   1862c:	push	{r4, lr}
   18630:	sub	sp, sp, #8
   18634:	ldr	r4, [pc, #60]	; 18678 <pclose@plt+0x53cc>
   18638:	add	r3, sp, #20
   1863c:	mov	r2, r3
   18640:	ldr	ip, [r4]
   18644:	ldr	r1, [sp, #16]
   18648:	str	r3, [sp]
   1864c:	str	ip, [sp, #4]
   18650:	bl	179e4 <pclose@plt+0x4738>
   18654:	ldr	r2, [sp, #4]
   18658:	ldr	r3, [r4]
   1865c:	cmp	r2, r3
   18660:	bne	18674 <pclose@plt+0x53c8>
   18664:	add	sp, sp, #8
   18668:	pop	{r4, lr}
   1866c:	add	sp, sp, #16
   18670:	bx	lr
   18674:	bl	12bb0 <__stack_chk_fail@plt>
   18678:	andeq	sp, r3, r0, asr #21
   1867c:	push	{r0, r1, r2, r3}
   18680:	mov	r0, #3
   18684:	push	{r4, lr}
   18688:	sub	sp, sp, #8
   1868c:	ldr	r4, [pc, #60]	; 186d0 <pclose@plt+0x5424>
   18690:	add	r3, sp, #20
   18694:	mov	r2, r3
   18698:	ldr	ip, [r4]
   1869c:	ldr	r1, [sp, #16]
   186a0:	str	r3, [sp]
   186a4:	str	ip, [sp, #4]
   186a8:	bl	179e4 <pclose@plt+0x4738>
   186ac:	ldr	r2, [sp, #4]
   186b0:	ldr	r3, [r4]
   186b4:	cmp	r2, r3
   186b8:	bne	186cc <pclose@plt+0x5420>
   186bc:	add	sp, sp, #8
   186c0:	pop	{r4, lr}
   186c4:	add	sp, sp, #16
   186c8:	bx	lr
   186cc:	bl	12bb0 <__stack_chk_fail@plt>
   186d0:	andeq	sp, r3, r0, asr #21
   186d4:	push	{r0, r1, r2, r3}
   186d8:	mov	r0, #2
   186dc:	push	{r4, lr}
   186e0:	sub	sp, sp, #8
   186e4:	ldr	r4, [pc, #60]	; 18728 <pclose@plt+0x547c>
   186e8:	add	r3, sp, #20
   186ec:	mov	r2, r3
   186f0:	ldr	ip, [r4]
   186f4:	ldr	r1, [sp, #16]
   186f8:	str	r3, [sp]
   186fc:	str	ip, [sp, #4]
   18700:	bl	179e4 <pclose@plt+0x4738>
   18704:	ldr	r2, [sp, #4]
   18708:	ldr	r3, [r4]
   1870c:	cmp	r2, r3
   18710:	bne	18724 <pclose@plt+0x5478>
   18714:	add	sp, sp, #8
   18718:	pop	{r4, lr}
   1871c:	add	sp, sp, #16
   18720:	bx	lr
   18724:	bl	12bb0 <__stack_chk_fail@plt>
   18728:	andeq	sp, r3, r0, asr #21
   1872c:	b	12a24 <strcmp@plt>
   18730:	push	{r4, r5, r6, lr}
   18734:	mov	lr, r0
   18738:	ldrb	ip, [r0]
   1873c:	cmp	ip, #9
   18740:	cmpne	ip, #32
   18744:	bne	18758 <pclose@plt+0x54ac>
   18748:	ldrb	ip, [lr, #1]!
   1874c:	cmp	ip, #9
   18750:	cmpne	ip, #32
   18754:	beq	18748 <pclose@plt+0x549c>
   18758:	sub	r6, ip, #48	; 0x30
   1875c:	mov	r0, #0
   18760:	uxtb	r3, r6
   18764:	cmp	r3, #9
   18768:	mov	r1, #0
   1876c:	pophi	{r4, r5, r6, pc}
   18770:	lsl	r2, r1, #2
   18774:	lsl	r3, r0, #2
   18778:	adds	r3, r3, r0
   1877c:	orr	r2, r2, r0, lsr #30
   18780:	ldrb	ip, [lr, #1]!
   18784:	adc	r2, r2, r1
   18788:	adds	r4, r3, r3
   1878c:	adc	r5, r2, r2
   18790:	adds	r0, r4, r6
   18794:	adc	r1, r5, r6, asr #31
   18798:	sub	r6, ip, #48	; 0x30
   1879c:	uxtb	r3, r6
   187a0:	cmp	r3, #9
   187a4:	bls	18770 <pclose@plt+0x54c4>
   187a8:	pop	{r4, r5, r6, pc}
   187ac:	ldrb	r2, [r0]
   187b0:	sub	r3, r2, #48	; 0x30
   187b4:	uxtb	r1, r3
   187b8:	cmp	r1, #9
   187bc:	bls	187e4 <pclose@plt+0x5538>
   187c0:	sub	r3, r2, #65	; 0x41
   187c4:	cmp	r3, #5
   187c8:	subls	r3, r2, #55	; 0x37
   187cc:	lslls	r3, r3, #4
   187d0:	bls	187e8 <pclose@plt+0x553c>
   187d4:	sub	r3, r2, #97	; 0x61
   187d8:	cmp	r3, #5
   187dc:	bhi	1882c <pclose@plt+0x5580>
   187e0:	sub	r3, r2, #87	; 0x57
   187e4:	lsl	r3, r3, #4
   187e8:	ldrb	r2, [r0, #1]
   187ec:	sub	r0, r2, #48	; 0x30
   187f0:	uxtb	r1, r0
   187f4:	cmp	r1, #9
   187f8:	bls	1880c <pclose@plt+0x5560>
   187fc:	sub	r1, r2, #65	; 0x41
   18800:	cmp	r1, #5
   18804:	bhi	18814 <pclose@plt+0x5568>
   18808:	sub	r0, r2, #55	; 0x37
   1880c:	add	r0, r0, r3
   18810:	bx	lr
   18814:	sub	r1, r2, #97	; 0x61
   18818:	cmp	r1, #5
   1881c:	bhi	1882c <pclose@plt+0x5580>
   18820:	sub	r0, r2, #87	; 0x57
   18824:	add	r0, r0, r3
   18828:	bx	lr
   1882c:	mvn	r0, #0
   18830:	bx	lr
   18834:	subs	r3, r1, #0
   18838:	beq	18840 <pclose@plt+0x5594>
   1883c:	b	17ffc <pclose@plt+0x4d50>
   18840:	mov	r0, r3
   18844:	bx	lr
   18848:	sub	r0, r0, #65	; 0x41
   1884c:	cmp	r0, #25
   18850:	movhi	r0, #0
   18854:	movls	r0, #1
   18858:	bx	lr
   1885c:	sub	r0, r0, #97	; 0x61
   18860:	cmp	r0, #25
   18864:	movhi	r0, #0
   18868:	movls	r0, #1
   1886c:	bx	lr
   18870:	sub	r3, r0, #97	; 0x61
   18874:	cmp	r3, #25
   18878:	bicls	r0, r0, #32
   1887c:	bx	lr
   18880:	sub	r3, r0, #65	; 0x41
   18884:	cmp	r3, #25
   18888:	orrls	r0, r0, #32
   1888c:	bx	lr
   18890:	ldrb	r3, [r0]
   18894:	cmp	r3, #0
   18898:	bxeq	lr
   1889c:	mov	r1, r0
   188a0:	tst	r3, #128	; 0x80
   188a4:	moveq	r2, #1
   188a8:	movne	r2, #0
   188ac:	sub	ip, r3, #65	; 0x41
   188b0:	cmp	ip, #25
   188b4:	movhi	r2, #0
   188b8:	andls	r2, r2, #1
   188bc:	cmp	r2, #0
   188c0:	orrne	r3, r3, #32
   188c4:	strbne	r3, [r1]
   188c8:	ldrb	r3, [r1, #1]!
   188cc:	cmp	r3, #0
   188d0:	bne	188a0 <pclose@plt+0x55f4>
   188d4:	bx	lr
   188d8:	cmp	r0, r1
   188dc:	beq	18998 <pclose@plt+0x56ec>
   188e0:	push	{r4, r5, lr}
   188e4:	ldrb	r2, [r0]
   188e8:	ldrb	r3, [r1]
   188ec:	cmp	r2, #0
   188f0:	bne	18938 <pclose@plt+0x568c>
   188f4:	b	1896c <pclose@plt+0x56c0>
   188f8:	cmp	r3, r2
   188fc:	sub	ip, r2, #97	; 0x61
   18900:	beq	18928 <pclose@plt+0x567c>
   18904:	cmp	ip, #25
   18908:	sub	r4, r3, #97	; 0x61
   1890c:	mov	lr, r2
   18910:	bicls	lr, r2, #32
   18914:	cmp	r4, #25
   18918:	bicls	r3, r3, #32
   1891c:	cmp	r3, lr
   18920:	mov	r5, r2
   18924:	bne	18980 <pclose@plt+0x56d4>
   18928:	ldrb	r2, [r0, #1]!
   1892c:	ldrb	r3, [r1, #1]!
   18930:	cmp	r2, #0
   18934:	beq	1896c <pclose@plt+0x56c0>
   18938:	cmp	r3, #0
   1893c:	bne	188f8 <pclose@plt+0x564c>
   18940:	sub	r3, r2, #97	; 0x61
   18944:	cmp	r3, #25
   18948:	mov	r5, r2
   1894c:	mov	r3, #0
   18950:	bhi	18964 <pclose@plt+0x56b8>
   18954:	bic	r5, r2, #32
   18958:	sub	r2, r3, #97	; 0x61
   1895c:	cmp	r2, #25
   18960:	bicls	r3, r3, #32
   18964:	sub	r0, r5, r3
   18968:	pop	{r4, r5, pc}
   1896c:	cmp	r3, #0
   18970:	movne	r5, #0
   18974:	bne	18958 <pclose@plt+0x56ac>
   18978:	mov	r0, #0
   1897c:	pop	{r4, r5, pc}
   18980:	ldrb	r3, [r1]
   18984:	cmp	r3, r2
   18988:	beq	18978 <pclose@plt+0x56cc>
   1898c:	cmp	ip, #25
   18990:	bls	18954 <pclose@plt+0x56a8>
   18994:	b	18958 <pclose@plt+0x56ac>
   18998:	mov	r0, #0
   1899c:	bx	lr
   189a0:	cmp	r2, #0
   189a4:	cmpne	r0, r1
   189a8:	beq	18a10 <pclose@plt+0x5764>
   189ac:	push	{r4, r5, lr}
   189b0:	sub	r1, r1, #1
   189b4:	sub	r4, r0, #1
   189b8:	b	189c4 <pclose@plt+0x5718>
   189bc:	cmp	r3, ip
   189c0:	bne	18a08 <pclose@plt+0x575c>
   189c4:	ldrb	r3, [r4, #1]!
   189c8:	sub	ip, r3, #65	; 0x41
   189cc:	cmp	ip, #25
   189d0:	ldrb	ip, [r1, #1]!
   189d4:	mvn	lr, r4
   189d8:	add	lr, lr, r2
   189dc:	sub	r5, ip, #65	; 0x41
   189e0:	orrls	r3, r3, #32
   189e4:	cmp	r5, #25
   189e8:	orrls	ip, ip, #32
   189ec:	cmn	r0, lr
   189f0:	moveq	lr, #1
   189f4:	movne	lr, #0
   189f8:	cmp	r3, #0
   189fc:	moveq	lr, #1
   18a00:	cmp	lr, #0
   18a04:	beq	189bc <pclose@plt+0x5710>
   18a08:	sub	r0, r3, ip
   18a0c:	pop	{r4, r5, pc}
   18a10:	mov	r0, #0
   18a14:	bx	lr
   18a18:	cmp	r1, r0
   18a1c:	beq	18a24 <pclose@plt+0x5778>
   18a20:	b	18044 <pclose@plt+0x4d98>
   18a24:	mov	r0, #0
   18a28:	bx	lr
   18a2c:	cmp	r0, r1
   18a30:	beq	18a90 <pclose@plt+0x57e4>
   18a34:	ldrb	r2, [r0]
   18a38:	ldrb	ip, [r1]
   18a3c:	cmp	r2, #0
   18a40:	beq	18a78 <pclose@plt+0x57cc>
   18a44:	clz	r3, ip
   18a48:	lsr	r3, r3, #5
   18a4c:	b	18a68 <pclose@plt+0x57bc>
   18a50:	ldrb	r2, [r0, #1]!
   18a54:	ldrb	ip, [r1, #1]!
   18a58:	clz	r3, ip
   18a5c:	cmp	r2, #0
   18a60:	lsr	r3, r3, #5
   18a64:	beq	18a78 <pclose@plt+0x57cc>
   18a68:	cmp	ip, r2
   18a6c:	orrne	r3, r3, #1
   18a70:	cmp	r3, #0
   18a74:	beq	18a50 <pclose@plt+0x57a4>
   18a78:	cmp	ip, r2
   18a7c:	beq	18a90 <pclose@plt+0x57e4>
   18a80:	sxtb	r2, r2
   18a84:	sxtb	r0, ip
   18a88:	sub	r0, r2, r0
   18a8c:	bx	lr
   18a90:	mov	r0, #0
   18a94:	bx	lr
   18a98:	push	{r4, r5, r6, r7, r8, lr}
   18a9c:	subs	r7, r3, #0
   18aa0:	mov	r4, r0
   18aa4:	beq	18b04 <pclose@plt+0x5858>
   18aa8:	cmp	r7, r1
   18aac:	bhi	18afc <pclose@plt+0x5850>
   18ab0:	sub	r1, r1, r7
   18ab4:	adds	r5, r0, r1
   18ab8:	bcs	18afc <pclose@plt+0x5850>
   18abc:	cmp	r0, r2
   18ac0:	mov	r6, r2
   18ac4:	beq	18b04 <pclose@plt+0x5858>
   18ac8:	mov	r2, r7
   18acc:	mov	r1, r6
   18ad0:	mov	r0, r4
   18ad4:	bl	18044 <pclose@plt+0x4d98>
   18ad8:	cmp	r0, #0
   18adc:	beq	18b04 <pclose@plt+0x5858>
   18ae0:	add	r4, r4, #1
   18ae4:	cmp	r5, r4
   18ae8:	bcc	18afc <pclose@plt+0x5850>
   18aec:	cmp	r6, r4
   18af0:	bne	18ac8 <pclose@plt+0x581c>
   18af4:	mov	r0, r6
   18af8:	pop	{r4, r5, r6, r7, r8, pc}
   18afc:	mov	r0, #0
   18b00:	pop	{r4, r5, r6, r7, r8, pc}
   18b04:	mov	r0, r4
   18b08:	pop	{r4, r5, r6, r7, r8, pc}
   18b0c:	push	{r4, r5, r6, lr}
   18b10:	mov	r5, r0
   18b14:	ldrb	r4, [r0]
   18b18:	cmp	r4, #0
   18b1c:	beq	18b40 <pclose@plt+0x5894>
   18b20:	bl	12dd8 <__ctype_tolower_loc@plt>
   18b24:	mov	r3, r5
   18b28:	ldr	r2, [r0]
   18b2c:	ldr	r2, [r2, r4, lsl #2]
   18b30:	strb	r2, [r3]
   18b34:	ldrb	r4, [r3, #1]!
   18b38:	cmp	r4, #0
   18b3c:	bne	18b28 <pclose@plt+0x587c>
   18b40:	mov	r0, r5
   18b44:	pop	{r4, r5, r6, pc}
   18b48:	cmp	r2, #0
   18b4c:	beq	18ba0 <pclose@plt+0x58f4>
   18b50:	push	{r4, r5, r6, r7, r8, lr}
   18b54:	sub	r4, r0, #1
   18b58:	add	r8, r4, r2
   18b5c:	sub	r7, r1, #1
   18b60:	ldrb	r5, [r4, #1]!
   18b64:	ldrb	r6, [r7, #1]!
   18b68:	cmp	r5, r6
   18b6c:	beq	18b88 <pclose@plt+0x58dc>
   18b70:	bl	12de4 <__ctype_toupper_loc@plt>
   18b74:	ldr	r3, [r0]
   18b78:	ldr	r2, [r3, r5, lsl #2]
   18b7c:	ldr	r3, [r3, r6, lsl #2]
   18b80:	cmp	r2, r3
   18b84:	bne	18b98 <pclose@plt+0x58ec>
   18b88:	cmp	r8, r4
   18b8c:	bne	18b60 <pclose@plt+0x58b4>
   18b90:	mov	r0, #0
   18b94:	pop	{r4, r5, r6, r7, r8, pc}
   18b98:	sub	r0, r5, r6
   18b9c:	pop	{r4, r5, r6, r7, r8, pc}
   18ba0:	mov	r0, r2
   18ba4:	bx	lr
   18ba8:	cmp	r0, #0
   18bac:	bxeq	lr
   18bb0:	mov	r2, #1
   18bb4:	b	17e08 <pclose@plt+0x4b5c>
   18bb8:	cmp	r0, #0
   18bbc:	bxeq	lr
   18bc0:	mov	r2, #0
   18bc4:	b	17e08 <pclose@plt+0x4b5c>
   18bc8:	push	{r0, r1, r2, r3}
   18bcc:	push	{r4, lr}
   18bd0:	sub	sp, sp, #8
   18bd4:	ldr	r4, [pc, #80]	; 18c2c <pclose@plt+0x5980>
   18bd8:	ldr	r0, [sp, #16]
   18bdc:	ldr	r3, [r4]
   18be0:	cmp	r0, #0
   18be4:	str	r3, [sp, #4]
   18be8:	beq	18c1c <pclose@plt+0x5970>
   18bec:	add	r3, sp, #20
   18bf0:	mov	r1, r3
   18bf4:	str	r3, [sp]
   18bf8:	bl	17914 <pclose@plt+0x4668>
   18bfc:	ldr	r2, [sp, #4]
   18c00:	ldr	r3, [r4]
   18c04:	cmp	r2, r3
   18c08:	bne	18c28 <pclose@plt+0x597c>
   18c0c:	add	sp, sp, #8
   18c10:	pop	{r4, lr}
   18c14:	add	sp, sp, #16
   18c18:	bx	lr
   18c1c:	ldr	r0, [pc, #12]	; 18c30 <pclose@plt+0x5984>
   18c20:	bl	13258 <gcry_strdup@plt>
   18c24:	b	18bfc <pclose@plt+0x5950>
   18c28:	bl	12bb0 <__stack_chk_fail@plt>
   18c2c:	andeq	sp, r3, r0, asr #21
   18c30:	muleq	r2, r8, r7
   18c34:	push	{r0, r1, r2, r3}
   18c38:	push	{r4, lr}
   18c3c:	sub	sp, sp, #8
   18c40:	ldr	r4, [pc, #144]	; 18cd8 <pclose@plt+0x5a2c>
   18c44:	ldr	r0, [sp, #16]
   18c48:	ldr	r3, [r4]
   18c4c:	cmp	r0, #0
   18c50:	str	r3, [sp, #4]
   18c54:	beq	18c90 <pclose@plt+0x59e4>
   18c58:	add	r3, sp, #20
   18c5c:	mov	r1, r3
   18c60:	str	r3, [sp]
   18c64:	bl	17914 <pclose@plt+0x4668>
   18c68:	cmp	r0, #0
   18c6c:	beq	18ca0 <pclose@plt+0x59f4>
   18c70:	ldr	r2, [sp, #4]
   18c74:	ldr	r3, [r4]
   18c78:	cmp	r2, r3
   18c7c:	bne	18c9c <pclose@plt+0x59f0>
   18c80:	add	sp, sp, #8
   18c84:	pop	{r4, lr}
   18c88:	add	sp, sp, #16
   18c8c:	bx	lr
   18c90:	ldr	r0, [pc, #68]	; 18cdc <pclose@plt+0x5a30>
   18c94:	bl	12ff4 <gcry_xstrdup@plt>
   18c98:	b	18c68 <pclose@plt+0x59bc>
   18c9c:	bl	12bb0 <__stack_chk_fail@plt>
   18ca0:	bl	12f10 <__errno_location@plt>
   18ca4:	ldr	r3, [pc, #52]	; 18ce0 <pclose@plt+0x5a34>
   18ca8:	ldr	r3, [r3]
   18cac:	ldr	r2, [r0]
   18cb0:	cmp	r2, #22
   18cb4:	moveq	r2, #37	; 0x25
   18cb8:	moveq	r1, #1
   18cbc:	ldreq	r0, [pc, #32]	; 18ce4 <pclose@plt+0x5a38>
   18cc0:	movne	r2, #22
   18cc4:	movne	r1, #1
   18cc8:	ldrne	r0, [pc, #24]	; 18ce8 <pclose@plt+0x5a3c>
   18ccc:	bl	12c94 <fwrite@plt>
   18cd0:	mov	r0, #2
   18cd4:	bl	12e44 <exit@plt>
   18cd8:	andeq	sp, r3, r0, asr #21
   18cdc:	muleq	r2, r8, r7
   18ce0:	muleq	r3, r8, r1
   18ce4:	muleq	r2, ip, r7
   18ce8:	andeq	sl, r2, r4, asr #15
   18cec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18cf0:	mov	r6, r2
   18cf4:	mov	r7, r3
   18cf8:	mov	r8, r0
   18cfc:	mov	r5, r1
   18d00:	bl	12eb0 <strchr@plt>
   18d04:	cmp	r0, #0
   18d08:	beq	18d94 <pclose@plt+0x5ae8>
   18d0c:	mov	r4, #1
   18d10:	b	18d18 <pclose@plt+0x5a6c>
   18d14:	mov	r4, r3
   18d18:	add	r0, r0, #1
   18d1c:	mov	r1, r5
   18d20:	bl	12eb0 <strchr@plt>
   18d24:	add	r3, r4, #1
   18d28:	cmp	r0, #0
   18d2c:	bne	18d14 <pclose@plt+0x5a68>
   18d30:	add	r0, r4, #2
   18d34:	mov	r1, #4
   18d38:	bl	12f64 <gcry_calloc@plt>
   18d3c:	subs	r9, r0, #0
   18d40:	beq	18d8c <pclose@plt+0x5ae0>
   18d44:	str	r8, [r9]
   18d48:	mov	r0, r8
   18d4c:	mov	r1, r5
   18d50:	bl	12eb0 <strchr@plt>
   18d54:	subs	r3, r0, #0
   18d58:	beq	18d9c <pclose@plt+0x5af0>
   18d5c:	mov	r8, r9
   18d60:	mov	r4, #1
   18d64:	add	r0, r3, #1
   18d68:	strb	r6, [r3]
   18d6c:	str	r0, [r8, #4]!
   18d70:	mov	r1, r5
   18d74:	bl	12eb0 <strchr@plt>
   18d78:	add	r4, r4, #1
   18d7c:	subs	r3, r0, #0
   18d80:	bne	18d64 <pclose@plt+0x5ab8>
   18d84:	cmp	r7, #0
   18d88:	strne	r4, [r7]
   18d8c:	mov	r0, r9
   18d90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d94:	mov	r0, #2
   18d98:	b	18d34 <pclose@plt+0x5a88>
   18d9c:	mov	r4, #1
   18da0:	b	18d84 <pclose@plt+0x5ad8>
   18da4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18da8:	mov	r8, r0
   18dac:	mov	r6, r1
   18db0:	bl	1318c <strpbrk@plt>
   18db4:	cmp	r0, #0
   18db8:	beq	18f70 <pclose@plt+0x5cc4>
   18dbc:	mov	r5, #1
   18dc0:	b	18dc8 <pclose@plt+0x5b1c>
   18dc4:	mov	r5, r3
   18dc8:	add	r0, r0, #1
   18dcc:	mov	r1, r6
   18dd0:	bl	1318c <strpbrk@plt>
   18dd4:	add	r3, r5, #1
   18dd8:	cmp	r0, #0
   18ddc:	bne	18dc4 <pclose@plt+0x5b18>
   18de0:	add	r5, r5, #2
   18de4:	tst	r5, #-1073741824	; 0xc0000000
   18de8:	lsl	r5, r5, #2
   18dec:	bne	18ebc <pclose@plt+0x5c10>
   18df0:	mov	r0, r8
   18df4:	bl	12e8c <strlen@plt>
   18df8:	add	r0, r0, #1
   18dfc:	adds	r0, r5, r0
   18e00:	movcs	r7, #1
   18e04:	movcc	r7, #0
   18e08:	bcs	18ebc <pclose@plt+0x5c10>
   18e0c:	bl	129d0 <gcry_malloc@plt>
   18e10:	subs	r9, r0, #0
   18e14:	beq	18ec8 <pclose@plt+0x5c1c>
   18e18:	add	r5, r9, r5
   18e1c:	mov	r1, r8
   18e20:	mov	r0, r5
   18e24:	bl	12cdc <strcpy@plt>
   18e28:	mov	r4, r5
   18e2c:	sub	r8, r9, #4
   18e30:	mov	sl, r7
   18e34:	mov	r1, r6
   18e38:	mov	r0, r4
   18e3c:	bl	1318c <strpbrk@plt>
   18e40:	cmp	r0, #0
   18e44:	beq	18ed0 <pclose@plt+0x5c24>
   18e48:	strb	sl, [r0]
   18e4c:	ldrb	r3, [r4]
   18e50:	cmp	r3, #32
   18e54:	cmpne	r3, #9
   18e58:	bne	18e6c <pclose@plt+0x5bc0>
   18e5c:	ldrb	r3, [r4, #1]!
   18e60:	cmp	r3, #9
   18e64:	cmpne	r3, #32
   18e68:	beq	18e5c <pclose@plt+0x5bb0>
   18e6c:	sub	r3, r0, #1
   18e70:	cmp	r3, r4
   18e74:	bcc	18eac <pclose@plt+0x5c00>
   18e78:	ldrb	r2, [r0, #-1]
   18e7c:	cmp	r2, #9
   18e80:	cmpne	r2, #32
   18e84:	bne	18eac <pclose@plt+0x5c00>
   18e88:	sub	r1, r4, #1
   18e8c:	b	18ea0 <pclose@plt+0x5bf4>
   18e90:	ldrb	r2, [r3]
   18e94:	cmp	r2, #9
   18e98:	cmpne	r2, #32
   18e9c:	bne	18eac <pclose@plt+0x5c00>
   18ea0:	strb	sl, [r3], #-1
   18ea4:	cmp	r3, r1
   18ea8:	bne	18e90 <pclose@plt+0x5be4>
   18eac:	str	r4, [r8, #4]!
   18eb0:	add	r7, r7, #1
   18eb4:	add	r4, r0, #1
   18eb8:	b	18e34 <pclose@plt+0x5b88>
   18ebc:	mov	r0, #12
   18ec0:	bl	13108 <gpg_err_set_errno@plt>
   18ec4:	mov	r9, #0
   18ec8:	mov	r0, r9
   18ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18ed0:	ldrb	r3, [r4]
   18ed4:	cmp	r3, #32
   18ed8:	cmpne	r3, #9
   18edc:	bne	18ef0 <pclose@plt+0x5c44>
   18ee0:	ldrb	r3, [r4, #1]!
   18ee4:	cmp	r3, #9
   18ee8:	cmpne	r3, #32
   18eec:	beq	18ee0 <pclose@plt+0x5c34>
   18ef0:	mov	r0, r4
   18ef4:	bl	12e8c <strlen@plt>
   18ef8:	sub	r0, r0, #1
   18efc:	adds	r3, r4, r0
   18f00:	bcs	18f38 <pclose@plt+0x5c8c>
   18f04:	ldrb	r2, [r4, r0]
   18f08:	cmp	r2, #9
   18f0c:	cmpne	r2, #32
   18f10:	bne	18f38 <pclose@plt+0x5c8c>
   18f14:	mov	r1, #0
   18f18:	b	18f2c <pclose@plt+0x5c80>
   18f1c:	ldrb	r2, [r3]
   18f20:	cmp	r2, #9
   18f24:	cmpne	r2, #32
   18f28:	bne	18f38 <pclose@plt+0x5c8c>
   18f2c:	strb	r1, [r3], #-1
   18f30:	cmp	r3, r4
   18f34:	bcs	18f1c <pclose@plt+0x5c70>
   18f38:	lsl	r3, r7, #2
   18f3c:	add	r2, r3, #8
   18f40:	add	r2, r9, r2
   18f44:	add	r3, r9, r3
   18f48:	cmp	r5, r2
   18f4c:	mov	r2, #0
   18f50:	str	r4, [r9, r7, lsl #2]
   18f54:	str	r2, [r3, #4]
   18f58:	beq	18ec8 <pclose@plt+0x5c1c>
   18f5c:	ldr	r3, [pc, #20]	; 18f78 <pclose@plt+0x5ccc>
   18f60:	ldr	r2, [pc, #20]	; 18f7c <pclose@plt+0x5cd0>
   18f64:	ldr	r1, [pc, #20]	; 18f80 <pclose@plt+0x5cd4>
   18f68:	ldr	r0, [pc, #20]	; 18f84 <pclose@plt+0x5cd8>
   18f6c:	bl	13294 <__assert_fail@plt>
   18f70:	mov	r5, #8
   18f74:	b	18df0 <pclose@plt+0x5b44>
   18f78:	andeq	sl, r2, r8, asr #14
   18f7c:	andeq	r0, r0, r2, lsl r5
   18f80:	andeq	sl, r2, r4, asr r7
   18f84:	ldrdeq	sl, [r2], -ip
   18f88:	push	{r4, r5, r6, r7, r8, lr}
   18f8c:	mov	r6, r2
   18f90:	ldrb	r3, [r0]
   18f94:	cmp	r3, #32
   18f98:	bne	18fa8 <pclose@plt+0x5cfc>
   18f9c:	ldrb	r3, [r0, #1]!
   18fa0:	cmp	r3, #32
   18fa4:	beq	18f9c <pclose@plt+0x5cf0>
   18fa8:	cmp	r6, #0
   18fac:	beq	1900c <pclose@plt+0x5d60>
   18fb0:	mov	r4, #0
   18fb4:	sub	r5, r1, #4
   18fb8:	mov	r7, r4
   18fbc:	str	r0, [r5, #4]!
   18fc0:	mov	r1, #32
   18fc4:	bl	12eb0 <strchr@plt>
   18fc8:	add	r4, r4, #1
   18fcc:	subs	r3, r0, #0
   18fd0:	beq	19004 <pclose@plt+0x5d58>
   18fd4:	mov	r0, r3
   18fd8:	strb	r7, [r0], #1
   18fdc:	ldrb	r3, [r3, #1]
   18fe0:	cmp	r3, #32
   18fe4:	bne	18ff4 <pclose@plt+0x5d48>
   18fe8:	ldrb	r3, [r0, #1]!
   18fec:	cmp	r3, #32
   18ff0:	beq	18fe8 <pclose@plt+0x5d3c>
   18ff4:	cmp	r3, #0
   18ff8:	beq	19004 <pclose@plt+0x5d58>
   18ffc:	cmp	r6, r4
   19000:	bne	18fbc <pclose@plt+0x5d10>
   19004:	mov	r0, r4
   19008:	pop	{r4, r5, r6, r7, r8, pc}
   1900c:	mov	r4, r6
   19010:	b	19004 <pclose@plt+0x5d58>
   19014:	push	{r4, r5, r6, r7, r8, lr}
   19018:	subs	r7, r2, #0
   1901c:	beq	1906c <pclose@plt+0x5dc0>
   19020:	mov	r4, #0
   19024:	sub	r5, r1, #4
   19028:	mov	r6, r4
   1902c:	b	19048 <pclose@plt+0x5d9c>
   19030:	strb	r6, [r0], #1
   19034:	ldrb	r3, [r3, #1]
   19038:	cmp	r3, #0
   1903c:	beq	19064 <pclose@plt+0x5db8>
   19040:	cmp	r7, r4
   19044:	beq	19064 <pclose@plt+0x5db8>
   19048:	str	r0, [r5, #4]!
   1904c:	mov	r1, #58	; 0x3a
   19050:	bl	12eb0 <strchr@plt>
   19054:	add	r4, r4, #1
   19058:	subs	r3, r0, #0
   1905c:	mov	r0, r3
   19060:	bne	19030 <pclose@plt+0x5d84>
   19064:	mov	r0, r4
   19068:	pop	{r4, r5, r6, r7, r8, pc}
   1906c:	mov	r4, r7
   19070:	b	19064 <pclose@plt+0x5db8>
   19074:	push	{r4, r5, r6, lr}
   19078:	sub	sp, sp, #32
   1907c:	ldr	r4, [pc, #220]	; 19160 <pclose@plt+0x5eb4>
   19080:	cmp	r0, #0
   19084:	ldr	r3, [r4]
   19088:	str	r3, [sp, #28]
   1908c:	beq	19154 <pclose@plt+0x5ea8>
   19090:	mov	r5, r1
   19094:	add	r3, sp, #12
   19098:	add	r2, sp, #8
   1909c:	add	r1, sp, #4
   190a0:	bl	1774c <pclose@plt+0x44a0>
   190a4:	subs	r6, r0, #0
   190a8:	beq	19154 <pclose@plt+0x5ea8>
   190ac:	cmp	r5, #0
   190b0:	beq	19124 <pclose@plt+0x5e78>
   190b4:	add	r1, sp, #16
   190b8:	mov	r0, r5
   190bc:	add	r3, sp, #24
   190c0:	add	r2, sp, #20
   190c4:	bl	1774c <pclose@plt+0x44a0>
   190c8:	subs	r1, r0, #0
   190cc:	beq	19154 <pclose@plt+0x5ea8>
   190d0:	ldr	r3, [sp, #4]
   190d4:	ldr	r2, [sp, #16]
   190d8:	cmp	r3, r2
   190dc:	subne	r3, r3, r2
   190e0:	beq	190f4 <pclose@plt+0x5e48>
   190e4:	cmp	r3, #0
   190e8:	mvnlt	r0, #0
   190ec:	movge	r0, #1
   190f0:	b	19128 <pclose@plt+0x5e7c>
   190f4:	ldr	r3, [sp, #8]
   190f8:	ldr	r0, [sp, #20]
   190fc:	cmp	r3, r0
   19100:	bne	19140 <pclose@plt+0x5e94>
   19104:	ldr	r3, [sp, #12]
   19108:	ldr	r0, [sp, #24]
   1910c:	cmp	r3, r0
   19110:	bne	19140 <pclose@plt+0x5e94>
   19114:	mov	r0, r6
   19118:	bl	12a24 <strcmp@plt>
   1911c:	subs	r3, r0, #0
   19120:	bne	190e4 <pclose@plt+0x5e38>
   19124:	mov	r0, #0
   19128:	ldr	r2, [sp, #28]
   1912c:	ldr	r3, [r4]
   19130:	cmp	r2, r3
   19134:	bne	1915c <pclose@plt+0x5eb0>
   19138:	add	sp, sp, #32
   1913c:	pop	{r4, r5, r6, pc}
   19140:	sub	r3, r3, r0
   19144:	cmp	r3, #0
   19148:	mvnlt	r0, #0
   1914c:	movge	r0, #1
   19150:	b	19128 <pclose@plt+0x5e7c>
   19154:	mov	r0, #-2147483648	; 0x80000000
   19158:	b	19128 <pclose@plt+0x5e7c>
   1915c:	bl	12bb0 <__stack_chk_fail@plt>
   19160:	andeq	sp, r3, r0, asr #21
   19164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19168:	sub	sp, sp, #12
   1916c:	mov	r7, r1
   19170:	str	r2, [sp]
   19174:	bl	13258 <gcry_strdup@plt>
   19178:	subs	r3, r0, #0
   1917c:	str	r3, [sp, #4]
   19180:	beq	1934c <pclose@plt+0x60a0>
   19184:	mov	r6, #0
   19188:	ldr	r9, [pc, #464]	; 19360 <pclose@plt+0x60b4>
   1918c:	mov	r5, r6
   19190:	mov	r8, r6
   19194:	mov	r4, r3
   19198:	mov	fp, r3
   1919c:	mov	r1, r9
   191a0:	mov	r0, fp
   191a4:	bl	12a54 <strcspn@plt>
   191a8:	adds	sl, fp, r0
   191ac:	beq	1924c <pclose@plt+0x5fa0>
   191b0:	ldrb	fp, [sl]
   191b4:	cmp	fp, #10
   191b8:	beq	19268 <pclose@plt+0x5fbc>
   191bc:	subs	r1, sl, r4
   191c0:	beq	191d0 <pclose@plt+0x5f24>
   191c4:	mov	r0, r4
   191c8:	bl	17ffc <pclose@plt+0x4d50>
   191cc:	mov	r1, r0
   191d0:	cmp	r7, r1
   191d4:	bgt	19280 <pclose@plt+0x5fd4>
   191d8:	ldr	r3, [sp]
   191dc:	sub	ip, r1, r7
   191e0:	cmp	r3, r1
   191e4:	sublt	r1, r1, r3
   191e8:	lsl	ip, ip, #1
   191ec:	sub	r0, r7, r5
   191f0:	addlt	ip, ip, r1, lsl #2
   191f4:	cmp	ip, r0
   191f8:	movlt	ip, #0
   191fc:	movge	ip, #1
   19200:	cmp	r5, #0
   19204:	movne	r5, ip
   19208:	moveq	r5, #0
   1920c:	cmp	r5, #0
   19210:	movne	sl, r8
   19214:	ldrbne	fp, [r8]
   19218:	cmp	fp, #0
   1921c:	beq	19300 <pclose@plt+0x6054>
   19220:	mov	fp, sl
   19224:	mov	r1, #10
   19228:	strb	r1, [fp], #1
   1922c:	ldrb	r1, [sl, #1]
   19230:	cmp	r1, #32
   19234:	beq	192b0 <pclose@plt+0x6004>
   19238:	mov	r6, #0
   1923c:	mov	r5, r6
   19240:	mov	r8, r6
   19244:	mov	r4, fp
   19248:	b	1919c <pclose@plt+0x5ef0>
   1924c:	ldr	sl, [sp, #4]
   19250:	mov	r0, sl
   19254:	bl	12e8c <strlen@plt>
   19258:	add	sl, sl, r0
   1925c:	ldrb	fp, [sl]
   19260:	cmp	fp, #10
   19264:	bne	191bc <pclose@plt+0x5f10>
   19268:	add	r4, sl, #1
   1926c:	mov	r5, #0
   19270:	mov	fp, r4
   19274:	mov	r8, r5
   19278:	mov	r6, #1
   1927c:	b	1919c <pclose@plt+0x5ef0>
   19280:	cmp	fp, #0
   19284:	beq	19300 <pclose@plt+0x6054>
   19288:	ldrb	r0, [sl, #1]
   1928c:	add	fp, sl, #1
   19290:	cmp	r0, #32
   19294:	bne	192a4 <pclose@plt+0x5ff8>
   19298:	ldrb	r0, [fp, #1]!
   1929c:	cmp	r0, #32
   192a0:	beq	19298 <pclose@plt+0x5fec>
   192a4:	mov	r5, r1
   192a8:	mov	r8, sl
   192ac:	b	1919c <pclose@plt+0x5ef0>
   192b0:	ldrb	r1, [sl, #2]
   192b4:	cmp	r1, #32
   192b8:	bne	19358 <pclose@plt+0x60ac>
   192bc:	add	r2, sl, #3
   192c0:	mov	r4, r2
   192c4:	add	r2, r2, #1
   192c8:	ldrb	r1, [r4]
   192cc:	cmp	r1, #32
   192d0:	beq	192c0 <pclose@plt+0x6014>
   192d4:	mov	r0, r4
   192d8:	bl	12e8c <strlen@plt>
   192dc:	mov	r6, #0
   192e0:	mov	r1, r4
   192e4:	mov	r5, r6
   192e8:	mov	r8, r6
   192ec:	mov	r4, fp
   192f0:	add	r2, r0, #1
   192f4:	mov	r0, fp
   192f8:	bl	12ab4 <memmove@plt>
   192fc:	b	1919c <pclose@plt+0x5ef0>
   19300:	ldr	r4, [sp, #4]
   19304:	mov	r0, r4
   19308:	bl	12e8c <strlen@plt>
   1930c:	ldr	r2, [pc, #80]	; 19364 <pclose@plt+0x60b8>
   19310:	mov	r1, r0
   19314:	mov	r0, r4
   19318:	bl	18460 <pclose@plt+0x51b4>
   1931c:	cmp	r6, #0
   19320:	bne	1934c <pclose@plt+0x60a0>
   19324:	ldrb	r3, [r4]
   19328:	cmp	r3, #0
   1932c:	beq	1934c <pclose@plt+0x60a0>
   19330:	mov	r0, r4
   19334:	bl	12e8c <strlen@plt>
   19338:	sub	r0, r0, #1
   1933c:	ldrb	r3, [r4, r0]
   19340:	cmp	r3, #10
   19344:	ldreq	r3, [sp, #4]
   19348:	strbeq	r6, [r3, r0]
   1934c:	ldr	r0, [sp, #4]
   19350:	add	sp, sp, #12
   19354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19358:	add	r4, sl, #2
   1935c:	b	192d4 <pclose@plt+0x6028>
   19360:	andeq	sl, r2, r0, lsl #16
   19364:	andeq	sl, r2, r4, lsr #29
   19368:	push	{r4, r5, r6, lr}
   1936c:	mov	r5, r1
   19370:	ldr	r1, [r0, #8]
   19374:	mov	r4, r0
   19378:	ands	r3, r1, #32768	; 0x8000
   1937c:	bne	193c4 <pclose@plt+0x6118>
   19380:	ldr	r2, [r0]
   19384:	orr	r1, r1, #32768	; 0x8000
   19388:	str	r1, [r0, #8]
   1938c:	str	r3, [r0, #28]
   19390:	str	r3, [r0, #32]
   19394:	str	r3, [r0, #36]	; 0x24
   19398:	str	r3, [r0, #12]
   1939c:	ldr	r2, [r2]
   193a0:	str	r3, [r0, #40]	; 0x28
   193a4:	cmp	r2, #0
   193a8:	str	r3, [r0, #44]	; 0x2c
   193ac:	str	r3, [r0, #48]	; 0x30
   193b0:	str	r3, [r0, #52]	; 0x34
   193b4:	blt	1951c <pclose@plt+0x6270>
   193b8:	mov	r3, #0
   193bc:	str	r3, [r4, #24]
   193c0:	pop	{r4, r5, r6, pc}
   193c4:	ldr	r3, [r0, #12]
   193c8:	cmp	r3, #0
   193cc:	beq	193b8 <pclose@plt+0x610c>
   193d0:	cmp	r5, #0
   193d4:	ldr	r3, [r0, #16]
   193d8:	beq	19460 <pclose@plt+0x61b4>
   193dc:	cmn	r3, #6
   193e0:	mov	r6, r2
   193e4:	mov	r2, #5
   193e8:	beq	194c4 <pclose@plt+0x6218>
   193ec:	cmn	r3, #5
   193f0:	beq	194d8 <pclose@plt+0x622c>
   193f4:	cmn	r3, #4
   193f8:	beq	194ec <pclose@plt+0x6240>
   193fc:	cmn	r3, #3
   19400:	beq	19524 <pclose@plt+0x6278>
   19404:	cmn	r3, #12
   19408:	beq	19554 <pclose@plt+0x62a8>
   1940c:	cmn	r3, #7
   19410:	beq	19584 <pclose@plt+0x62d8>
   19414:	cmn	r3, #10
   19418:	beq	195b4 <pclose@plt+0x6308>
   1941c:	cmn	r3, #11
   19420:	mov	r0, #0
   19424:	ldreq	r1, [pc, #496]	; 1961c <pclose@plt+0x6370>
   19428:	ldrne	r1, [pc, #496]	; 19620 <pclose@plt+0x6374>
   1942c:	bl	12b98 <dcgettext@plt>
   19430:	mov	r3, r0
   19434:	ldr	r2, [r6]
   19438:	mov	r1, r5
   1943c:	ldr	r0, [pc, #480]	; 19624 <pclose@plt+0x6378>
   19440:	bl	1c9b0 <pclose@plt+0x9704>
   19444:	ldr	r3, [r4, #12]
   19448:	cmp	r3, #1
   1944c:	moveq	r3, #0
   19450:	streq	r3, [r4, #12]
   19454:	beq	193b8 <pclose@plt+0x610c>
   19458:	mov	r0, #2
   1945c:	bl	12e44 <exit@plt>
   19460:	ldr	r6, [r0, #40]	; 0x28
   19464:	ldr	r2, [pc, #444]	; 19628 <pclose@plt+0x637c>
   19468:	cmp	r6, #0
   1946c:	moveq	r6, r2
   19470:	cmn	r3, #3
   19474:	beq	19538 <pclose@plt+0x628c>
   19478:	cmn	r3, #12
   1947c:	beq	19568 <pclose@plt+0x62bc>
   19480:	cmn	r3, #6
   19484:	beq	19598 <pclose@plt+0x62ec>
   19488:	cmn	r3, #7
   1948c:	beq	195c8 <pclose@plt+0x631c>
   19490:	cmn	r3, #8
   19494:	beq	19500 <pclose@plt+0x6254>
   19498:	cmn	r3, #9
   1949c:	beq	19600 <pclose@plt+0x6354>
   194a0:	cmn	r3, #11
   194a4:	mov	r2, #5
   194a8:	beq	195e4 <pclose@plt+0x6338>
   194ac:	ldr	r1, [pc, #376]	; 1962c <pclose@plt+0x6380>
   194b0:	mov	r0, #0
   194b4:	bl	12b98 <dcgettext@plt>
   194b8:	mov	r1, r6
   194bc:	bl	1c9b0 <pclose@plt+0x9704>
   194c0:	b	19444 <pclose@plt+0x6198>
   194c4:	ldr	r1, [pc, #356]	; 19630 <pclose@plt+0x6384>
   194c8:	mov	r0, #0
   194cc:	bl	12b98 <dcgettext@plt>
   194d0:	mov	r3, r0
   194d4:	b	19434 <pclose@plt+0x6188>
   194d8:	ldr	r1, [pc, #340]	; 19634 <pclose@plt+0x6388>
   194dc:	mov	r0, #0
   194e0:	bl	12b98 <dcgettext@plt>
   194e4:	mov	r3, r0
   194e8:	b	19434 <pclose@plt+0x6188>
   194ec:	ldr	r1, [pc, #324]	; 19638 <pclose@plt+0x638c>
   194f0:	mov	r0, #0
   194f4:	bl	12b98 <dcgettext@plt>
   194f8:	mov	r3, r0
   194fc:	b	19434 <pclose@plt+0x6188>
   19500:	mov	r0, r5
   19504:	mov	r2, #5
   19508:	ldr	r1, [pc, #300]	; 1963c <pclose@plt+0x6390>
   1950c:	bl	12b98 <dcgettext@plt>
   19510:	mov	r1, r6
   19514:	bl	1c9b0 <pclose@plt+0x9704>
   19518:	b	19444 <pclose@plt+0x6198>
   1951c:	ldr	r0, [pc, #284]	; 19640 <pclose@plt+0x6394>
   19520:	bl	1cab8 <pclose@plt+0x980c>
   19524:	ldr	r1, [pc, #280]	; 19644 <pclose@plt+0x6398>
   19528:	mov	r0, #0
   1952c:	bl	12b98 <dcgettext@plt>
   19530:	mov	r3, r0
   19534:	b	19434 <pclose@plt+0x6188>
   19538:	mov	r0, r5
   1953c:	mov	r2, #5
   19540:	ldr	r1, [pc, #256]	; 19648 <pclose@plt+0x639c>
   19544:	bl	12b98 <dcgettext@plt>
   19548:	mov	r1, r6
   1954c:	bl	1c9b0 <pclose@plt+0x9704>
   19550:	b	19444 <pclose@plt+0x6198>
   19554:	ldr	r1, [pc, #240]	; 1964c <pclose@plt+0x63a0>
   19558:	mov	r0, #0
   1955c:	bl	12b98 <dcgettext@plt>
   19560:	mov	r3, r0
   19564:	b	19434 <pclose@plt+0x6188>
   19568:	mov	r0, r5
   1956c:	mov	r2, #5
   19570:	ldr	r1, [pc, #216]	; 19650 <pclose@plt+0x63a4>
   19574:	bl	12b98 <dcgettext@plt>
   19578:	mov	r1, r6
   1957c:	bl	1c9b0 <pclose@plt+0x9704>
   19580:	b	19444 <pclose@plt+0x6198>
   19584:	ldr	r1, [pc, #200]	; 19654 <pclose@plt+0x63a8>
   19588:	mov	r0, #0
   1958c:	bl	12b98 <dcgettext@plt>
   19590:	mov	r3, r0
   19594:	b	19434 <pclose@plt+0x6188>
   19598:	mov	r0, r5
   1959c:	mov	r2, #5
   195a0:	ldr	r1, [pc, #176]	; 19658 <pclose@plt+0x63ac>
   195a4:	bl	12b98 <dcgettext@plt>
   195a8:	mov	r1, r6
   195ac:	bl	1c9b0 <pclose@plt+0x9704>
   195b0:	b	19444 <pclose@plt+0x6198>
   195b4:	ldr	r1, [pc, #160]	; 1965c <pclose@plt+0x63b0>
   195b8:	mov	r0, #0
   195bc:	bl	12b98 <dcgettext@plt>
   195c0:	mov	r3, r0
   195c4:	b	19434 <pclose@plt+0x6188>
   195c8:	mov	r0, r5
   195cc:	mov	r2, #5
   195d0:	ldr	r1, [pc, #136]	; 19660 <pclose@plt+0x63b4>
   195d4:	bl	12b98 <dcgettext@plt>
   195d8:	mov	r1, r6
   195dc:	bl	1c9b0 <pclose@plt+0x9704>
   195e0:	b	19444 <pclose@plt+0x6198>
   195e4:	ldr	r1, [pc, #120]	; 19664 <pclose@plt+0x63b8>
   195e8:	mov	r0, #0
   195ec:	bl	12b98 <dcgettext@plt>
   195f0:	mov	r1, r0
   195f4:	ldr	r0, [pc, #108]	; 19668 <pclose@plt+0x63bc>
   195f8:	bl	1c9b0 <pclose@plt+0x9704>
   195fc:	b	19444 <pclose@plt+0x6198>
   19600:	mov	r0, r5
   19604:	mov	r2, #5
   19608:	ldr	r1, [pc, #92]	; 1966c <pclose@plt+0x63c0>
   1960c:	bl	12b98 <dcgettext@plt>
   19610:	mov	r1, r6
   19614:	bl	1c9b0 <pclose@plt+0x9704>
   19618:	b	19444 <pclose@plt+0x6198>
   1961c:	strdeq	sl, [r2], -r8
   19620:	andeq	sl, r2, r4, lsl #18
   19624:	andeq	sl, r2, r4, lsl r9
   19628:	andeq	sl, r2, r4, asr #16
   1962c:	andeq	sl, r2, r8, lsl #20
   19630:	andeq	sl, r2, ip, ror #16
   19634:	andeq	sl, r2, r4, lsl #17
   19638:	muleq	r2, r0, r8
   1963c:			; <UNDEFINED> instruction: 0x0002a9b8
   19640:	andeq	sl, r2, ip, asr #16
   19644:	andeq	sl, r2, r4, lsr #17
   19648:	andeq	sl, r2, r0, lsr #18
   1964c:			; <UNDEFINED> instruction: 0x0002a8b8
   19650:	andeq	sl, r2, r8, asr #18
   19654:	andeq	sl, r2, ip, asr #17
   19658:	andeq	sl, r2, r0, ror r9
   1965c:	ldrdeq	sl, [r2], -ip
   19660:	muleq	r2, ip, r9
   19664:	strdeq	sl, [r2], -r8
   19668:	andeq	r9, r2, r4, asr #18
   1966c:	ldrdeq	sl, [r2], -r8
   19670:	tst	r1, #16
   19674:	and	r1, r1, #7
   19678:	push	{r4, r5, r6, r7, r8, lr}
   1967c:	movne	r7, #0
   19680:	moveq	r7, #10
   19684:	cmp	r1, #3
   19688:	mov	r6, r0
   1968c:	str	r1, [r0, #20]
   19690:	mov	r5, r2
   19694:	beq	196b4 <pclose@plt+0x6408>
   19698:	cmp	r1, #4
   1969c:	beq	196f4 <pclose@plt+0x6448>
   196a0:	cmp	r1, #1
   196a4:	beq	196b4 <pclose@plt+0x6408>
   196a8:	str	r2, [r6, #24]
   196ac:	mov	r0, #1
   196b0:	pop	{r4, r5, r6, r7, r8, pc}
   196b4:	bl	12f10 <__errno_location@plt>
   196b8:	mov	r1, #0
   196bc:	mov	r2, r7
   196c0:	mov	r4, r0
   196c4:	mov	r0, r5
   196c8:	str	r1, [r4]
   196cc:	bl	12a3c <strtol@plt>
   196d0:	sub	r3, r0, #-2147483647	; 0x80000001
   196d4:	cmn	r3, #3
   196d8:	bls	196e8 <pclose@plt+0x643c>
   196dc:	ldr	r3, [r4]
   196e0:	cmp	r3, #34	; 0x22
   196e4:	beq	19770 <pclose@plt+0x64c4>
   196e8:	str	r0, [r6, #24]
   196ec:	mov	r0, #0
   196f0:	pop	{r4, r5, r6, r7, r8, pc}
   196f4:	ldrb	r4, [r2]
   196f8:	tst	r4, #128	; 0x80
   196fc:	bne	19728 <pclose@plt+0x647c>
   19700:	bl	12e14 <__ctype_b_loc@plt>
   19704:	ldr	r2, [r0]
   19708:	b	19718 <pclose@plt+0x646c>
   1970c:	ldrb	r4, [r5, #1]!
   19710:	tst	r4, #128	; 0x80
   19714:	bne	19728 <pclose@plt+0x647c>
   19718:	lsl	r3, r4, #1
   1971c:	ldrh	r3, [r2, r3]
   19720:	tst	r3, #8192	; 0x2000
   19724:	bne	1970c <pclose@plt+0x6460>
   19728:	cmp	r4, #45	; 0x2d
   1972c:	beq	19780 <pclose@plt+0x64d4>
   19730:	bl	12f10 <__errno_location@plt>
   19734:	mov	r4, #0
   19738:	mov	r2, r7
   1973c:	mov	r1, r4
   19740:	mov	r8, r0
   19744:	mov	r0, r5
   19748:	str	r4, [r8]
   1974c:	bl	12e74 <strtoul@plt>
   19750:	cmn	r0, #1
   19754:	str	r0, [r6, #24]
   19758:	beq	19764 <pclose@plt+0x64b8>
   1975c:	mov	r0, r4
   19760:	pop	{r4, r5, r6, r7, r8, pc}
   19764:	ldr	r3, [r8]
   19768:	cmp	r3, #34	; 0x22
   1976c:	bne	1975c <pclose@plt+0x64b0>
   19770:	mvn	r3, #11
   19774:	str	r3, [r6, #16]
   19778:	mvn	r0, #0
   1977c:	pop	{r4, r5, r6, r7, r8, pc}
   19780:	mov	r2, #0
   19784:	mvn	r3, #11
   19788:	str	r2, [r6, #24]
   1978c:	str	r3, [r6, #16]
   19790:	mvn	r0, #0
   19794:	pop	{r4, r5, r6, r7, r8, pc}
   19798:	push	{r1, r2, r3}
   1979c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197a0:	sub	sp, sp, #8
   197a4:	ldr	r8, [pc, #188]	; 19868 <pclose@plt+0x65bc>
   197a8:	ldr	r4, [sp, #44]	; 0x2c
   197ac:	ldr	r3, [r8]
   197b0:	cmp	r4, #0
   197b4:	str	r3, [sp, #4]
   197b8:	moveq	r5, r4
   197bc:	beq	19840 <pclose@plt+0x6594>
   197c0:	cmp	r0, #0
   197c4:	add	r2, sp, #48	; 0x30
   197c8:	mov	r9, r0
   197cc:	ldr	r6, [pc, #152]	; 1986c <pclose@plt+0x65c0>
   197d0:	ldr	fp, [pc, #152]	; 19870 <pclose@plt+0x65c4>
   197d4:	movne	r7, #2
   197d8:	moveq	r7, #1
   197dc:	mov	sl, r2
   197e0:	mov	r5, #0
   197e4:	str	r2, [sp]
   197e8:	b	19818 <pclose@plt+0x656c>
   197ec:	mov	r1, r4
   197f0:	mov	r0, r7
   197f4:	blx	r2
   197f8:	mov	r0, r4
   197fc:	bl	12e8c <strlen@plt>
   19800:	add	sl, sl, #4
   19804:	ldr	r4, [sl, #-4]
   19808:	str	sl, [sp]
   1980c:	cmp	r4, #0
   19810:	add	r5, r5, r0
   19814:	beq	19840 <pclose@plt+0x6594>
   19818:	ldr	r2, [r6]
   1981c:	cmp	r2, #0
   19820:	bne	197ec <pclose@plt+0x6540>
   19824:	cmp	r9, #0
   19828:	mov	r0, r4
   1982c:	ldrne	r3, [pc, #64]	; 19874 <pclose@plt+0x65c8>
   19830:	ldreq	r1, [fp]
   19834:	ldrne	r1, [r3]
   19838:	bl	13210 <fputs@plt>
   1983c:	b	197f8 <pclose@plt+0x654c>
   19840:	ldr	r2, [sp, #4]
   19844:	ldr	r3, [r8]
   19848:	mov	r0, r5
   1984c:	cmp	r2, r3
   19850:	bne	19864 <pclose@plt+0x65b8>
   19854:	add	sp, sp, #8
   19858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1985c:	add	sp, sp, #12
   19860:	bx	lr
   19864:	bl	12bb0 <__stack_chk_fail@plt>
   19868:	andeq	sp, r3, r0, asr #21
   1986c:	ldrdeq	lr, [r3], -r0
   19870:			; <UNDEFINED> instruction: 0x0003e1b0
   19874:	muleq	r3, r8, r1
   19878:	ldr	r3, [pc, #48]	; 198b0 <pclose@plt+0x6604>
   1987c:	ldr	r3, [r3]
   19880:	cmp	r3, #0
   19884:	beq	1989c <pclose@plt+0x65f0>
   19888:	cmp	r0, #0
   1988c:	movne	r0, #2
   19890:	moveq	r0, #1
   19894:	mov	r1, #0
   19898:	bx	r3
   1989c:	cmp	r0, #0
   198a0:	ldrne	r3, [pc, #12]	; 198b4 <pclose@plt+0x6608>
   198a4:	ldreq	r3, [pc, #12]	; 198b8 <pclose@plt+0x660c>
   198a8:	ldr	r0, [r3]
   198ac:	b	12a90 <fflush@plt>
   198b0:	ldrdeq	lr, [r3], -r0
   198b4:	muleq	r3, r8, r1
   198b8:			; <UNDEFINED> instruction: 0x0003e1b0
   198bc:	ldr	r3, [pc, #4]	; 198c8 <pclose@plt+0x661c>
   198c0:	str	r0, [r3]
   198c4:	bx	lr
   198c8:	ldrdeq	lr, [r3], -r0
   198cc:	ldr	r3, [pc, #244]	; 199c8 <pclose@plt+0x671c>
   198d0:	push	{r4, lr}
   198d4:	mov	r4, r0
   198d8:	ldr	r3, [r3, #4]
   198dc:	cmp	r3, #0
   198e0:	beq	198f0 <pclose@plt+0x6644>
   198e4:	blx	r3
   198e8:	cmp	r0, #0
   198ec:	bne	19980 <pclose@plt+0x66d4>
   198f0:	sub	r0, r4, #10
   198f4:	cmp	r0, #31
   198f8:	ldrls	pc, [pc, r0, lsl #2]
   198fc:	b	199c0 <pclose@plt+0x6714>
   19900:	muleq	r1, r0, r9
   19904:	muleq	r1, r8, r9
   19908:	andeq	r9, r1, r0, asr #19
   1990c:	andeq	r9, r1, r0, lsr #19
   19910:	andeq	r9, r1, r8, lsr #19
   19914:			; <UNDEFINED> instruction: 0x000199b0
   19918:			; <UNDEFINED> instruction: 0x000199b8
   1991c:	andeq	r9, r1, r0, asr #19
   19920:	andeq	r9, r1, r0, asr #19
   19924:	andeq	r9, r1, r0, asr #19
   19928:	andeq	r9, r1, r0, asr #19
   1992c:	andeq	r9, r1, r0, asr #19
   19930:	andeq	r9, r1, r0, asr #19
   19934:	andeq	r9, r1, r0, asr #19
   19938:	andeq	r9, r1, r0, asr #19
   1993c:	andeq	r9, r1, r0, asr #19
   19940:	andeq	r9, r1, r0, asr #19
   19944:	andeq	r9, r1, r0, asr #19
   19948:	andeq	r9, r1, r0, asr #19
   1994c:	andeq	r9, r1, r0, asr #19
   19950:	andeq	r9, r1, r0, asr #19
   19954:	andeq	r9, r1, r0, asr #19
   19958:	andeq	r9, r1, r0, asr #19
   1995c:	andeq	r9, r1, r0, asr #19
   19960:	andeq	r9, r1, r0, asr #19
   19964:	andeq	r9, r1, r0, asr #19
   19968:	andeq	r9, r1, r0, asr #19
   1996c:	andeq	r9, r1, r0, asr #19
   19970:	andeq	r9, r1, r0, asr #19
   19974:	andeq	r9, r1, r0, asr #19
   19978:	andeq	r9, r1, r8, lsl #19
   1997c:	andeq	r9, r1, r8, lsl #19
   19980:	pop	{r4, lr}
   19984:	b	2294c <pclose@plt+0xf6a0>
   19988:	ldr	r0, [pc, #60]	; 199cc <pclose@plt+0x6720>
   1998c:	pop	{r4, pc}
   19990:	ldr	r0, [pc, #56]	; 199d0 <pclose@plt+0x6724>
   19994:	pop	{r4, pc}
   19998:	ldr	r0, [pc, #52]	; 199d4 <pclose@plt+0x6728>
   1999c:	pop	{r4, pc}
   199a0:	ldr	r0, [pc, #48]	; 199d8 <pclose@plt+0x672c>
   199a4:	pop	{r4, pc}
   199a8:	ldr	r0, [pc, #44]	; 199dc <pclose@plt+0x6730>
   199ac:	pop	{r4, pc}
   199b0:	ldr	r0, [pc, #40]	; 199e0 <pclose@plt+0x6734>
   199b4:	pop	{r4, pc}
   199b8:	ldr	r0, [pc, #36]	; 199e4 <pclose@plt+0x6738>
   199bc:	pop	{r4, pc}
   199c0:	mov	r0, #0
   199c4:	pop	{r4, pc}
   199c8:	ldrdeq	lr, [r3], -r0
   199cc:	muleq	r2, r8, r7
   199d0:	andeq	sl, r2, ip, lsr #26
   199d4:	andeq	sl, r2, r0, lsr #20
   199d8:	andeq	sl, r2, r8, lsr #26
   199dc:	strdeq	sl, [r2], -r4
   199e0:	andeq	sl, r2, r8, ror ip
   199e4:	andeq	sl, r2, r4, lsr #20
   199e8:	push	{r4, r5, lr}
   199ec:	mov	r0, #11
   199f0:	sub	sp, sp, #12
   199f4:	bl	198cc <pclose@plt+0x6620>
   199f8:	mov	r2, #0
   199fc:	mov	r1, r0
   19a00:	mov	r0, r2
   19a04:	bl	19798 <pclose@plt+0x64ec>
   19a08:	mov	r0, #12
   19a0c:	bl	198cc <pclose@plt+0x6620>
   19a10:	subs	r2, r0, #0
   19a14:	beq	19a2c <pclose@plt+0x6780>
   19a18:	mov	r0, #0
   19a1c:	str	r0, [sp]
   19a20:	ldr	r3, [pc, #268]	; 19b34 <pclose@plt+0x6888>
   19a24:	ldr	r1, [pc, #268]	; 19b38 <pclose@plt+0x688c>
   19a28:	bl	19798 <pclose@plt+0x64ec>
   19a2c:	mov	r0, #13
   19a30:	bl	198cc <pclose@plt+0x6620>
   19a34:	mov	ip, #0
   19a38:	ldr	r3, [pc, #252]	; 19b3c <pclose@plt+0x6890>
   19a3c:	str	ip, [sp]
   19a40:	ldr	r1, [pc, #248]	; 19b40 <pclose@plt+0x6894>
   19a44:	mov	r5, r3
   19a48:	mov	r4, #20
   19a4c:	mov	r2, r0
   19a50:	mov	r0, ip
   19a54:	bl	19798 <pclose@plt+0x64ec>
   19a58:	mov	r0, r4
   19a5c:	bl	198cc <pclose@plt+0x6620>
   19a60:	mov	r3, #0
   19a64:	mov	r2, r5
   19a68:	add	r4, r4, #1
   19a6c:	subs	r1, r0, #0
   19a70:	mov	r0, r3
   19a74:	beq	19a7c <pclose@plt+0x67d0>
   19a78:	bl	19798 <pclose@plt+0x64ec>
   19a7c:	cmp	r4, #30
   19a80:	bne	19a58 <pclose@plt+0x67ac>
   19a84:	mov	r0, #14
   19a88:	bl	198cc <pclose@plt+0x6620>
   19a8c:	subs	r1, r0, #0
   19a90:	beq	19aa4 <pclose@plt+0x67f8>
   19a94:	mov	r3, #0
   19a98:	mov	r0, r3
   19a9c:	ldr	r2, [pc, #152]	; 19b3c <pclose@plt+0x6890>
   19aa0:	bl	19798 <pclose@plt+0x64ec>
   19aa4:	mov	r0, #10
   19aa8:	bl	198cc <pclose@plt+0x6620>
   19aac:	subs	r1, r0, #0
   19ab0:	beq	19ac4 <pclose@plt+0x6818>
   19ab4:	mov	r3, #0
   19ab8:	mov	r0, r3
   19abc:	ldr	r2, [pc, #120]	; 19b3c <pclose@plt+0x6890>
   19ac0:	bl	19798 <pclose@plt+0x64ec>
   19ac4:	mov	r0, #15
   19ac8:	bl	198cc <pclose@plt+0x6620>
   19acc:	subs	r1, r0, #0
   19ad0:	beq	19ae0 <pclose@plt+0x6834>
   19ad4:	mov	r2, #0
   19ad8:	mov	r0, r2
   19adc:	bl	19798 <pclose@plt+0x64ec>
   19ae0:	mov	r0, #18
   19ae4:	bl	198cc <pclose@plt+0x6620>
   19ae8:	subs	r1, r0, #0
   19aec:	beq	19afc <pclose@plt+0x6850>
   19af0:	mov	r2, #0
   19af4:	mov	r0, r2
   19af8:	bl	19798 <pclose@plt+0x64ec>
   19afc:	mov	r0, r4
   19b00:	bl	198cc <pclose@plt+0x6620>
   19b04:	mov	r2, #0
   19b08:	add	r4, r4, #1
   19b0c:	subs	r1, r0, #0
   19b10:	mov	r0, r2
   19b14:	beq	19b1c <pclose@plt+0x6870>
   19b18:	bl	19798 <pclose@plt+0x64ec>
   19b1c:	cmp	r4, #40	; 0x28
   19b20:	bne	19afc <pclose@plt+0x6850>
   19b24:	mov	r0, #0
   19b28:	add	sp, sp, #12
   19b2c:	pop	{r4, r5, lr}
   19b30:	b	19878 <pclose@plt+0x65cc>
   19b34:	andeq	r9, r2, ip, lsr r6
   19b38:	andeq	sl, r2, ip, ror sp
   19b3c:	strdeq	ip, [r2], -r0
   19b40:	andeq	sl, r2, r4, lsr #29
   19b44:	ldr	r3, [pc, #1504]	; 1a12c <pclose@plt+0x6e80>
   19b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b4c:	sub	sp, sp, #28
   19b50:	ldr	r3, [r3]
   19b54:	mov	r7, r0
   19b58:	str	r3, [sp, #20]
   19b5c:	str	r1, [sp, #8]
   19b60:	bl	199e8 <pclose@plt+0x673c>
   19b64:	mov	r2, #0
   19b68:	mov	r0, r2
   19b6c:	ldr	r1, [pc, #1468]	; 1a130 <pclose@plt+0x6e84>
   19b70:	bl	19798 <pclose@plt+0x64ec>
   19b74:	mov	r0, #42	; 0x2a
   19b78:	bl	198cc <pclose@plt+0x6620>
   19b7c:	cmp	r0, #0
   19b80:	beq	19b90 <pclose@plt+0x68e4>
   19b84:	ldrb	r3, [r0]
   19b88:	cmp	r3, #49	; 0x31
   19b8c:	beq	1a044 <pclose@plt+0x6d98>
   19b90:	mov	r0, #41	; 0x29
   19b94:	bl	198cc <pclose@plt+0x6620>
   19b98:	mov	r3, #0
   19b9c:	ldr	r2, [pc, #1420]	; 1a130 <pclose@plt+0x6e84>
   19ba0:	mov	r1, r0
   19ba4:	mov	r0, r3
   19ba8:	bl	19798 <pclose@plt+0x64ec>
   19bac:	ldr	r3, [r7, #12]
   19bb0:	cmp	r3, #0
   19bb4:	beq	19c60 <pclose@plt+0x69b4>
   19bb8:	ldr	r2, [r7]
   19bbc:	cmp	r2, #0
   19bc0:	beq	19c38 <pclose@plt+0x698c>
   19bc4:	mov	r4, r7
   19bc8:	mov	r6, #0
   19bcc:	b	19c14 <pclose@plt+0x6968>
   19bd0:	ldrb	r8, [r3]
   19bd4:	cmp	r8, #64	; 0x40
   19bd8:	beq	19c08 <pclose@plt+0x695c>
   19bdc:	bl	12e8c <strlen@plt>
   19be0:	cmp	r8, #124	; 0x7c
   19be4:	mov	r5, r0
   19be8:	beq	19f5c <pclose@plt+0x6cb0>
   19bec:	cmp	r5, #34	; 0x22
   19bf0:	movle	r3, #1
   19bf4:	movgt	r3, #0
   19bf8:	cmp	r5, r6
   19bfc:	movle	r3, #0
   19c00:	cmp	r3, #0
   19c04:	movne	r6, r5
   19c08:	ldr	r3, [r4, #16]!
   19c0c:	cmp	r3, #0
   19c10:	beq	19ca0 <pclose@plt+0x69f4>
   19c14:	ldr	r0, [r4, #4]
   19c18:	cmp	r0, #0
   19c1c:	beq	19c08 <pclose@plt+0x695c>
   19c20:	ldr	r3, [r4, #12]
   19c24:	cmp	r3, #0
   19c28:	bne	19bd0 <pclose@plt+0x6924>
   19c2c:	bl	12e8c <strlen@plt>
   19c30:	mov	r5, r0
   19c34:	b	19bec <pclose@plt+0x6940>
   19c38:	ldrb	r3, [r3]
   19c3c:	cmp	r3, #64	; 0x40
   19c40:	bne	19f40 <pclose@plt+0x6c94>
   19c44:	ldr	r3, [sp, #8]
   19c48:	tst	r3, #32
   19c4c:	beq	19c60 <pclose@plt+0x69b4>
   19c50:	mov	r2, #0
   19c54:	mov	r0, r2
   19c58:	ldr	r1, [pc, #1236]	; 1a134 <pclose@plt+0x6e88>
   19c5c:	bl	19798 <pclose@plt+0x64ec>
   19c60:	mov	r0, #19
   19c64:	bl	198cc <pclose@plt+0x6620>
   19c68:	subs	r4, r0, #0
   19c6c:	beq	19c90 <pclose@plt+0x69e4>
   19c70:	mov	r2, #0
   19c74:	mov	r0, r2
   19c78:	ldr	r1, [pc, #1200]	; 1a130 <pclose@plt+0x6e84>
   19c7c:	bl	19798 <pclose@plt+0x64ec>
   19c80:	mov	r2, #0
   19c84:	mov	r1, r4
   19c88:	mov	r0, r2
   19c8c:	bl	19798 <pclose@plt+0x64ec>
   19c90:	mov	r0, #0
   19c94:	bl	19878 <pclose@plt+0x65cc>
   19c98:	mov	r0, #0
   19c9c:	bl	12e44 <exit@plt>
   19ca0:	ldr	r3, [r7, #12]
   19ca4:	add	r6, r6, #10
   19ca8:	ldrb	r3, [r3]
   19cac:	cmp	r3, #64	; 0x40
   19cb0:	bne	19f44 <pclose@plt+0x6c98>
   19cb4:	ldr	r3, [r7]
   19cb8:	cmp	r3, #0
   19cbc:	beq	19c44 <pclose@plt+0x6998>
   19cc0:	ldr	fp, [pc, #1136]	; 1a138 <pclose@plt+0x6e8c>
   19cc4:	ldr	sl, [pc, #1136]	; 1a13c <pclose@plt+0x6e90>
   19cc8:	add	r7, r7, #16
   19ccc:	mov	r2, #5
   19cd0:	ldr	r1, [r7, #-4]
   19cd4:	mov	r0, #0
   19cd8:	bl	12b98 <dcgettext@plt>
   19cdc:	bl	2294c <pclose@plt+0xf6a0>
   19ce0:	subs	r5, r0, #0
   19ce4:	beq	19cf4 <pclose@plt+0x6a48>
   19ce8:	ldrb	r3, [r5]
   19cec:	cmp	r3, #64	; 0x40
   19cf0:	beq	19eb0 <pclose@plt+0x6c04>
   19cf4:	ldr	r1, [r7, #-16]
   19cf8:	cmp	r1, #255	; 0xff
   19cfc:	bgt	19de0 <pclose@plt+0x6b34>
   19d00:	mov	ip, #0
   19d04:	add	r9, sp, #16
   19d08:	mov	r3, ip
   19d0c:	strb	r1, [sp, #16]
   19d10:	mov	r0, ip
   19d14:	mov	r2, r9
   19d18:	ldr	r1, [pc, #1056]	; 1a140 <pclose@plt+0x6e94>
   19d1c:	strb	ip, [sp, #17]
   19d20:	bl	19798 <pclose@plt+0x64ec>
   19d24:	ldr	r3, [r7, #-12]
   19d28:	cmp	r3, #0
   19d2c:	movne	r4, #3
   19d30:	beq	19f24 <pclose@plt+0x6c78>
   19d34:	ldr	r2, [r7, #-16]
   19d38:	mov	r8, #0
   19d3c:	cmp	r2, #256	; 0x100
   19d40:	movlt	ip, #44	; 0x2c
   19d44:	movge	ip, #32
   19d48:	str	r8, [sp]
   19d4c:	mov	r0, r8
   19d50:	mov	r2, fp
   19d54:	mov	r1, r9
   19d58:	strb	ip, [sp, #16]
   19d5c:	strb	r8, [sp, #17]
   19d60:	bl	19798 <pclose@plt+0x64ec>
   19d64:	cmp	r5, r8
   19d68:	add	r4, r4, r0
   19d6c:	beq	19d7c <pclose@plt+0x6ad0>
   19d70:	ldrb	r3, [r5]
   19d74:	cmp	r3, #124	; 0x7c
   19d78:	beq	19fac <pclose@plt+0x6d00>
   19d7c:	mov	r2, #0
   19d80:	mov	r0, r2
   19d84:	mov	r1, sl
   19d88:	add	r4, r4, #3
   19d8c:	bl	19798 <pclose@plt+0x64ec>
   19d90:	cmp	r6, r4
   19d94:	ble	19db8 <pclose@plt+0x6b0c>
   19d98:	ldr	r8, [pc, #932]	; 1a144 <pclose@plt+0x6e98>
   19d9c:	mov	r2, #0
   19da0:	add	r4, r4, #1
   19da4:	mov	r0, r2
   19da8:	mov	r1, r8
   19dac:	bl	19798 <pclose@plt+0x64ec>
   19db0:	cmp	r6, r4
   19db4:	bne	19d9c <pclose@plt+0x6af0>
   19db8:	cmp	r5, #0
   19dbc:	bne	19e08 <pclose@plt+0x6b5c>
   19dc0:	mov	r2, #0
   19dc4:	mov	r0, r2
   19dc8:	ldr	r1, [pc, #864]	; 1a130 <pclose@plt+0x6e84>
   19dcc:	bl	19798 <pclose@plt+0x64ec>
   19dd0:	ldr	r3, [r7], #16
   19dd4:	cmp	r3, #0
   19dd8:	bne	19ccc <pclose@plt+0x6a20>
   19ddc:	b	19c44 <pclose@plt+0x6998>
   19de0:	mov	r2, #0
   19de4:	mov	r0, r2
   19de8:	mov	r1, sl
   19dec:	bl	19798 <pclose@plt+0x64ec>
   19df0:	ldr	r3, [r7, #-12]
   19df4:	mov	r4, #3
   19df8:	cmp	r3, #0
   19dfc:	addne	r9, sp, #16
   19e00:	bne	19d34 <pclose@plt+0x6a88>
   19e04:	b	19d98 <pclose@plt+0x6aec>
   19e08:	ldrb	r3, [r5]
   19e0c:	cmp	r3, #0
   19e10:	cmpne	r6, r4
   19e14:	blt	1a080 <pclose@plt+0x6dd4>
   19e18:	cmp	r3, #0
   19e1c:	beq	19dc0 <pclose@plt+0x6b14>
   19e20:	cmp	r3, #10
   19e24:	mov	r8, #0
   19e28:	ldr	r4, [pc, #788]	; 1a144 <pclose@plt+0x6e98>
   19e2c:	bne	19e84 <pclose@plt+0x6bd8>
   19e30:	ldrb	r3, [r5, #1]
   19e34:	cmp	r3, #0
   19e38:	beq	19dc0 <pclose@plt+0x6b14>
   19e3c:	mov	r2, #0
   19e40:	mov	r0, r2
   19e44:	ldr	r1, [pc, #740]	; 1a130 <pclose@plt+0x6e84>
   19e48:	bl	19798 <pclose@plt+0x64ec>
   19e4c:	mov	r9, #0
   19e50:	mov	r2, #0
   19e54:	add	r9, r9, #1
   19e58:	mov	r0, r2
   19e5c:	mov	r1, r4
   19e60:	bl	19798 <pclose@plt+0x64ec>
   19e64:	cmp	r6, r9
   19e68:	bne	19e50 <pclose@plt+0x6ba4>
   19e6c:	ldrb	r3, [r5, #1]
   19e70:	add	r5, r5, #1
   19e74:	cmp	r3, #0
   19e78:	beq	19dc0 <pclose@plt+0x6b14>
   19e7c:	cmp	r3, #10
   19e80:	beq	19e30 <pclose@plt+0x6b84>
   19e84:	mov	r2, #0
   19e88:	mov	r0, r2
   19e8c:	add	r1, sp, #16
   19e90:	strb	r3, [sp, #16]
   19e94:	strb	r8, [sp, #17]
   19e98:	bl	19798 <pclose@plt+0x64ec>
   19e9c:	ldrb	r3, [r5, #1]
   19ea0:	add	r5, r5, #1
   19ea4:	cmp	r3, #0
   19ea8:	bne	19e7c <pclose@plt+0x6bd0>
   19eac:	b	19dc0 <pclose@plt+0x6b14>
   19eb0:	ldrb	r3, [r5, #1]
   19eb4:	cmp	r3, #0
   19eb8:	beq	19dd0 <pclose@plt+0x6b24>
   19ebc:	cmp	r3, #10
   19ec0:	add	r5, r5, #1
   19ec4:	mov	r4, #0
   19ec8:	ldr	r8, [pc, #608]	; 1a130 <pclose@plt+0x6e84>
   19ecc:	bne	19f04 <pclose@plt+0x6c58>
   19ed0:	ldrb	r3, [r5, #1]
   19ed4:	cmp	r3, #0
   19ed8:	beq	19dc0 <pclose@plt+0x6b14>
   19edc:	mov	r2, #0
   19ee0:	mov	r0, r2
   19ee4:	mov	r1, r8
   19ee8:	bl	19798 <pclose@plt+0x64ec>
   19eec:	ldrb	r3, [r5, #1]
   19ef0:	cmp	r3, #0
   19ef4:	add	r5, r5, #1
   19ef8:	beq	19dc0 <pclose@plt+0x6b14>
   19efc:	cmp	r3, #10
   19f00:	beq	19ed0 <pclose@plt+0x6c24>
   19f04:	mov	r2, #0
   19f08:	mov	r0, r2
   19f0c:	add	r1, sp, #16
   19f10:	strb	r3, [sp, #16]
   19f14:	strb	r4, [sp, #17]
   19f18:	bl	19798 <pclose@plt+0x64ec>
   19f1c:	ldrb	r3, [r5, #1]
   19f20:	b	19ef0 <pclose@plt+0x6c44>
   19f24:	cmp	r5, #0
   19f28:	beq	19f38 <pclose@plt+0x6c8c>
   19f2c:	ldrb	r2, [r5]
   19f30:	cmp	r2, #124	; 0x7c
   19f34:	beq	1a0bc <pclose@plt+0x6e10>
   19f38:	mov	r4, #3
   19f3c:	b	19d98 <pclose@plt+0x6aec>
   19f40:	mov	r6, #10
   19f44:	mov	r3, #0
   19f48:	mov	r0, r3
   19f4c:	ldr	r2, [pc, #476]	; 1a130 <pclose@plt+0x6e84>
   19f50:	ldr	r1, [pc, #496]	; 1a148 <pclose@plt+0x6e9c>
   19f54:	bl	19798 <pclose@plt+0x64ec>
   19f58:	b	19cb4 <pclose@plt+0x6a08>
   19f5c:	bl	23580 <pclose@plt+0x102d4>
   19f60:	ldr	r3, [r4, #12]
   19f64:	add	r2, r3, #1
   19f68:	ldrb	r3, [r3, #1]
   19f6c:	cmp	r3, #61	; 0x3d
   19f70:	beq	19f84 <pclose@plt+0x6cd8>
   19f74:	cmp	r3, #124	; 0x7c
   19f78:	cmpne	r3, #0
   19f7c:	add	r5, r5, #1
   19f80:	beq	19bec <pclose@plt+0x6940>
   19f84:	cmp	r0, #0
   19f88:	beq	19f98 <pclose@plt+0x6cec>
   19f8c:	and	r3, r3, #192	; 0xc0
   19f90:	cmp	r3, #128	; 0x80
   19f94:	addne	r5, r5, #1
   19f98:	ldrb	r3, [r2, #1]!
   19f9c:	cmp	r3, #0
   19fa0:	cmpne	r3, #124	; 0x7c
   19fa4:	bne	19f84 <pclose@plt+0x6cd8>
   19fa8:	b	19bec <pclose@plt+0x6940>
   19fac:	ldrb	ip, [r5, #1]
   19fb0:	add	r3, r5, #1
   19fb4:	str	r3, [sp, #12]
   19fb8:	cmp	ip, #61	; 0x3d
   19fbc:	bne	1a014 <pclose@plt+0x6d68>
   19fc0:	mvn	r8, r5
   19fc4:	add	r8, r8, r4
   19fc8:	add	r4, r5, #2
   19fcc:	mov	r5, #0
   19fd0:	mov	r2, #0
   19fd4:	mov	r0, r2
   19fd8:	mov	r1, r9
   19fdc:	strb	ip, [sp, #16]
   19fe0:	strb	r5, [sp, #17]
   19fe4:	bl	19798 <pclose@plt+0x64ec>
   19fe8:	mov	r3, r4
   19fec:	add	r2, r8, r4
   19ff0:	ldrb	ip, [r4], #1
   19ff4:	cmp	ip, #0
   19ff8:	cmpne	ip, #124	; 0x7c
   19ffc:	bne	19fd0 <pclose@plt+0x6d24>
   1a000:	mov	r4, r2
   1a004:	mov	r5, r3
   1a008:	cmp	ip, #0
   1a00c:	addne	r5, r5, #1
   1a010:	b	19d7c <pclose@plt+0x6ad0>
   1a014:	mov	r2, r8
   1a018:	mov	r0, r8
   1a01c:	ldr	r1, [pc, #288]	; 1a144 <pclose@plt+0x6e98>
   1a020:	bl	19798 <pclose@plt+0x64ec>
   1a024:	ldrb	ip, [r5, #1]
   1a028:	ldr	r3, [sp, #12]
   1a02c:	add	r4, r4, #1
   1a030:	cmp	ip, #124	; 0x7c
   1a034:	cmpne	ip, r8
   1a038:	moveq	r5, r3
   1a03c:	bne	19fc0 <pclose@plt+0x6d14>
   1a040:	b	1a008 <pclose@plt+0x6d5c>
   1a044:	mov	r0, #40	; 0x28
   1a048:	bl	198cc <pclose@plt+0x6620>
   1a04c:	mov	r2, #0
   1a050:	mov	r4, r0
   1a054:	mov	r1, r0
   1a058:	mov	r0, #1
   1a05c:	bl	19798 <pclose@plt+0x64ec>
   1a060:	ldrb	r3, [r4]
   1a064:	cmp	r3, #0
   1a068:	beq	19b90 <pclose@plt+0x68e4>
   1a06c:	mov	r2, #0
   1a070:	ldr	r1, [pc, #184]	; 1a130 <pclose@plt+0x6e84>
   1a074:	mov	r0, #1
   1a078:	bl	19798 <pclose@plt+0x64ec>
   1a07c:	b	19b90 <pclose@plt+0x68e4>
   1a080:	mov	r2, #0
   1a084:	mov	r0, r2
   1a088:	ldr	r1, [pc, #160]	; 1a130 <pclose@plt+0x6e84>
   1a08c:	bl	19798 <pclose@plt+0x64ec>
   1a090:	ldr	r8, [pc, #172]	; 1a144 <pclose@plt+0x6e98>
   1a094:	mov	r4, #0
   1a098:	mov	r2, #0
   1a09c:	add	r4, r4, #1
   1a0a0:	mov	r0, r2
   1a0a4:	mov	r1, r8
   1a0a8:	bl	19798 <pclose@plt+0x64ec>
   1a0ac:	cmp	r6, r4
   1a0b0:	bne	1a098 <pclose@plt+0x6dec>
   1a0b4:	ldrb	r3, [r5]
   1a0b8:	b	19e18 <pclose@plt+0x6b6c>
   1a0bc:	mov	r2, r3
   1a0c0:	ldr	r1, [pc, #124]	; 1a144 <pclose@plt+0x6e98>
   1a0c4:	mov	r0, r3
   1a0c8:	str	r3, [sp, #12]
   1a0cc:	add	r8, r5, #1
   1a0d0:	bl	19798 <pclose@plt+0x64ec>
   1a0d4:	rsb	r5, r5, #3
   1a0d8:	b	1a0f8 <pclose@plt+0x6e4c>
   1a0dc:	mov	r2, #0
   1a0e0:	ldr	r3, [sp, #12]
   1a0e4:	mov	r0, r2
   1a0e8:	mov	r1, r9
   1a0ec:	strb	ip, [sp, #16]
   1a0f0:	strb	r3, [sp, #17]
   1a0f4:	bl	19798 <pclose@plt+0x64ec>
   1a0f8:	add	r4, r5, r8
   1a0fc:	mov	r2, r8
   1a100:	ldrb	ip, [r8], #1
   1a104:	cmp	ip, #0
   1a108:	cmpne	ip, #124	; 0x7c
   1a10c:	bne	1a0dc <pclose@plt+0x6e30>
   1a110:	cmp	ip, #0
   1a114:	movne	r5, r8
   1a118:	moveq	r5, r2
   1a11c:	ldr	r3, [r7, #-12]
   1a120:	cmp	r3, #0
   1a124:	bne	19d34 <pclose@plt+0x6a88>
   1a128:	b	19d90 <pclose@plt+0x6ae4>
   1a12c:	andeq	sp, r3, r0, asr #21
   1a130:	strdeq	ip, [r2], -r0
   1a134:	muleq	r2, r4, sp
   1a138:	muleq	r2, r0, sp
   1a13c:	andeq	r9, r2, r8, asr #19
   1a140:	andeq	sl, r2, ip, lsl #27
   1a144:	andeq	sl, r2, r4, lsr #29
   1a148:	andeq	sl, r2, r0, lsl #27
   1a14c:	ldr	ip, [pc, #2540]	; 1ab40 <pclose@plt+0x7894>
   1a150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a154:	sub	sp, sp, #108	; 0x6c
   1a158:	mov	r6, r1
   1a15c:	str	r1, [sp, #16]
   1a160:	mov	r4, r0
   1a164:	ldm	ip, {r0, r1, r2, r3}
   1a168:	add	r5, ip, #16
   1a16c:	add	lr, sp, #40	; 0x28
   1a170:	stm	lr, {r0, r1, r2, r3}
   1a174:	add	lr, ip, #32
   1a178:	ldm	r5, {r0, r1, r2, r3}
   1a17c:	add	r5, sp, #56	; 0x38
   1a180:	add	ip, ip, #48	; 0x30
   1a184:	stm	r5, {r0, r1, r2, r3}
   1a188:	ldm	lr, {r0, r1, r2, r3}
   1a18c:	add	lr, sp, #72	; 0x48
   1a190:	stm	lr, {r0, r1, r2, r3}
   1a194:	ldm	ip, {r0, r1, r2, r3}
   1a198:	add	ip, sp, #88	; 0x58
   1a19c:	stm	ip, {r0, r1, r2, r3}
   1a1a0:	ldr	r7, [r6]
   1a1a4:	cmp	r7, #0
   1a1a8:	beq	1a4b4 <pclose@plt+0x7208>
   1a1ac:	mov	r7, #0
   1a1b0:	mov	r5, r6
   1a1b4:	str	r7, [sp, #20]
   1a1b8:	str	r7, [sp, #12]
   1a1bc:	mov	r9, r7
   1a1c0:	mov	r6, r7
   1a1c4:	ldr	r8, [pc, #2424]	; 1ab44 <pclose@plt+0x7898>
   1a1c8:	ldr	sl, [pc, #2424]	; 1ab48 <pclose@plt+0x789c>
   1a1cc:	b	1a1d4 <pclose@plt+0x6f28>
   1a1d0:	mov	r6, ip
   1a1d4:	ldr	fp, [r5, #4]
   1a1d8:	cmp	fp, #0
   1a1dc:	beq	1a244 <pclose@plt+0x6f98>
   1a1e0:	mov	r1, r8
   1a1e4:	mov	r0, fp
   1a1e8:	bl	12a24 <strcmp@plt>
   1a1ec:	cmp	r0, #0
   1a1f0:	moveq	r9, #1
   1a1f4:	beq	1a244 <pclose@plt+0x6f98>
   1a1f8:	mov	r1, sl
   1a1fc:	mov	r0, fp
   1a200:	bl	12a24 <strcmp@plt>
   1a204:	cmp	r0, #0
   1a208:	moveq	r3, #1
   1a20c:	streq	r3, [sp, #12]
   1a210:	beq	1a244 <pclose@plt+0x6f98>
   1a214:	ldr	r1, [pc, #2352]	; 1ab4c <pclose@plt+0x78a0>
   1a218:	mov	r0, fp
   1a21c:	bl	12a24 <strcmp@plt>
   1a220:	cmp	r0, #0
   1a224:	moveq	r3, #1
   1a228:	streq	r3, [sp, #20]
   1a22c:	beq	1a244 <pclose@plt+0x6f98>
   1a230:	mov	r0, fp
   1a234:	ldr	r1, [pc, #2324]	; 1ab50 <pclose@plt+0x78a4>
   1a238:	bl	12a24 <strcmp@plt>
   1a23c:	cmp	r0, #0
   1a240:	moveq	r7, #1
   1a244:	ldr	r3, [r5, #16]!
   1a248:	add	ip, r6, #1
   1a24c:	cmp	r3, #0
   1a250:	bne	1a1d0 <pclose@plt+0x6f24>
   1a254:	cmp	r9, #0
   1a258:	addeq	ip, r6, #2
   1a25c:	beq	1a4c4 <pclose@plt+0x7218>
   1a260:	ldr	r3, [sp, #12]
   1a264:	cmp	r3, #0
   1a268:	bne	1a284 <pclose@plt+0x6fd8>
   1a26c:	add	r3, sp, #56	; 0x38
   1a270:	ldr	lr, [sp, #16]
   1a274:	ldm	r3, {r0, r1, r2, r3}
   1a278:	add	lr, lr, ip, lsl #4
   1a27c:	add	ip, ip, #1
   1a280:	stm	lr, {r0, r1, r2, r3}
   1a284:	ldr	r3, [sp, #20]
   1a288:	cmp	r3, #0
   1a28c:	bne	1a2a8 <pclose@plt+0x6ffc>
   1a290:	add	r3, sp, #72	; 0x48
   1a294:	ldr	lr, [sp, #16]
   1a298:	ldm	r3, {r0, r1, r2, r3}
   1a29c:	add	lr, lr, ip, lsl #4
   1a2a0:	add	ip, ip, #1
   1a2a4:	stm	lr, {r0, r1, r2, r3}
   1a2a8:	cmp	r7, #0
   1a2ac:	addeq	r3, sp, #88	; 0x58
   1a2b0:	ldreq	lr, [sp, #16]
   1a2b4:	ldmeq	r3, {r0, r1, r2, r3}
   1a2b8:	addeq	ip, lr, ip, lsl #4
   1a2bc:	stmeq	ip, {r0, r1, r2, r3}
   1a2c0:	mov	r2, #0
   1a2c4:	mov	r1, r2
   1a2c8:	mov	r0, r4
   1a2cc:	bl	19368 <pclose@plt+0x60bc>
   1a2d0:	ldr	fp, [r4]
   1a2d4:	ldr	r9, [r4, #28]
   1a2d8:	ldr	r3, [r4, #4]
   1a2dc:	ldr	r8, [fp]
   1a2e0:	mov	r1, fp
   1a2e4:	adds	r2, r8, #0
   1a2e8:	movne	r2, #1
   1a2ec:	cmp	r9, #0
   1a2f0:	movne	r2, #0
   1a2f4:	cmp	r2, #0
   1a2f8:	ldr	r7, [r3]
   1a2fc:	mov	r2, r3
   1a300:	beq	1a31c <pclose@plt+0x7070>
   1a304:	ldr	r0, [r4, #8]
   1a308:	tst	r0, #16
   1a30c:	bne	1a4d4 <pclose@plt+0x7228>
   1a310:	sub	r8, r8, #1
   1a314:	add	r7, r7, #4
   1a318:	mov	r9, #1
   1a31c:	cmp	r8, #0
   1a320:	beq	1a4a8 <pclose@plt+0x71fc>
   1a324:	ldr	sl, [r4, #36]	; 0x24
   1a328:	ldr	r5, [r7]
   1a32c:	cmp	sl, #0
   1a330:	str	r5, [r4, #40]	; 0x28
   1a334:	moveq	r1, #1
   1a338:	moveq	r0, sl
   1a33c:	bne	1a37c <pclose@plt+0x70d0>
   1a340:	ldrb	r2, [r5]
   1a344:	cmp	r2, #45	; 0x2d
   1a348:	beq	1a3ac <pclose@plt+0x7100>
   1a34c:	ldr	r6, [r4, #32]
   1a350:	cmp	r6, #0
   1a354:	bne	1a508 <pclose@plt+0x725c>
   1a358:	ldr	r2, [r4, #8]
   1a35c:	tst	r2, #4
   1a360:	bne	1a4dc <pclose@plt+0x7230>
   1a364:	str	r1, [r4, #36]	; 0x24
   1a368:	ldr	r2, [r4, #36]	; 0x24
   1a36c:	ldr	r5, [r7]
   1a370:	cmp	r2, #0
   1a374:	str	r5, [r4, #40]	; 0x28
   1a378:	beq	1a340 <pclose@plt+0x7094>
   1a37c:	ldr	r2, [r4, #8]
   1a380:	ands	r2, r2, #2
   1a384:	streq	r2, [r4, #16]
   1a388:	moveq	r1, fp
   1a38c:	moveq	r2, r3
   1a390:	bne	1a4dc <pclose@plt+0x7230>
   1a394:	str	r8, [r1]
   1a398:	str	r7, [r2]
   1a39c:	ldr	r0, [r4, #16]
   1a3a0:	str	r9, [r4, #28]
   1a3a4:	add	sp, sp, #108	; 0x6c
   1a3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3ac:	ldrb	r2, [r5, #1]
   1a3b0:	cmp	r2, #45	; 0x2d
   1a3b4:	beq	1a468 <pclose@plt+0x71bc>
   1a3b8:	cmp	r2, #0
   1a3bc:	beq	1a34c <pclose@plt+0x70a0>
   1a3c0:	ldr	r2, [sp, #16]
   1a3c4:	ldr	r6, [r4, #32]
   1a3c8:	ldr	r2, [r2]
   1a3cc:	cmp	r6, #0
   1a3d0:	str	r2, [sp, #20]
   1a3d4:	bne	1a514 <pclose@plt+0x7268>
   1a3d8:	ldr	r1, [r4, #8]
   1a3dc:	mov	r2, #1
   1a3e0:	tst	r1, #32
   1a3e4:	add	r1, r5, r2
   1a3e8:	str	r2, [r4, #32]
   1a3ec:	str	r1, [sp, #12]
   1a3f0:	beq	1a664 <pclose@plt+0x73b8>
   1a3f4:	ldr	r0, [sp, #20]
   1a3f8:	cmp	r0, #0
   1a3fc:	beq	1a9e4 <pclose@plt+0x7738>
   1a400:	ldr	r2, [sp, #16]
   1a404:	str	sl, [sp, #28]
   1a408:	str	r5, [sp, #32]
   1a40c:	str	r4, [sp, #24]
   1a410:	mov	r5, r6
   1a414:	mov	sl, r1
   1a418:	mov	r4, r2
   1a41c:	mov	r6, r3
   1a420:	ldr	r0, [r4, #4]
   1a424:	cmp	r0, #0
   1a428:	beq	1a43c <pclose@plt+0x7190>
   1a42c:	mov	r1, sl
   1a430:	bl	12a24 <strcmp@plt>
   1a434:	cmp	r0, #0
   1a438:	beq	1a5d4 <pclose@plt+0x7328>
   1a43c:	ldr	r1, [r4, #16]!
   1a440:	add	r5, r5, #1
   1a444:	cmp	r1, #0
   1a448:	bne	1a420 <pclose@plt+0x7174>
   1a44c:	ldr	r5, [sp, #32]
   1a450:	mov	r3, r6
   1a454:	ldr	sl, [sp, #28]
   1a458:	ldr	r4, [sp, #24]
   1a45c:	ldrb	r1, [r5, #1]
   1a460:	mov	r6, #1
   1a464:	b	1a530 <pclose@plt+0x7284>
   1a468:	str	r0, [r4, #32]
   1a46c:	ldrb	r2, [r5, #2]
   1a470:	cmp	r2, #0
   1a474:	bne	1a6c8 <pclose@plt+0x741c>
   1a478:	ldr	r2, [r4, #8]
   1a47c:	tst	r2, #8
   1a480:	bne	1a7cc <pclose@plt+0x7520>
   1a484:	orr	r2, r2, #256	; 0x100
   1a488:	subs	r8, r8, #1
   1a48c:	str	r2, [r4, #8]
   1a490:	str	r1, [r4, #36]	; 0x24
   1a494:	add	r7, r7, #4
   1a498:	add	r9, r9, #1
   1a49c:	bne	1a368 <pclose@plt+0x70bc>
   1a4a0:	mov	r1, fp
   1a4a4:	mov	r2, r3
   1a4a8:	mov	r8, #0
   1a4ac:	str	r8, [r4, #16]
   1a4b0:	b	1a394 <pclose@plt+0x70e8>
   1a4b4:	ldr	r5, [sp, #16]
   1a4b8:	mov	ip, #1
   1a4bc:	str	r7, [sp, #20]
   1a4c0:	str	r7, [sp, #12]
   1a4c4:	add	r3, sp, #40	; 0x28
   1a4c8:	ldm	r3, {r0, r1, r2, r3}
   1a4cc:	stm	r5, {r0, r1, r2, r3}
   1a4d0:	b	1a260 <pclose@plt+0x6fb4>
   1a4d4:	mov	r9, #0
   1a4d8:	b	1a324 <pclose@plt+0x7078>
   1a4dc:	mvn	ip, #0
   1a4e0:	mov	r0, #2
   1a4e4:	str	r5, [r4, #24]
   1a4e8:	add	r8, r8, ip
   1a4ec:	add	r7, r7, #4
   1a4f0:	add	r9, r9, #1
   1a4f4:	mov	r1, fp
   1a4f8:	mov	r2, r3
   1a4fc:	str	ip, [r4, #16]
   1a500:	str	r0, [r4, #20]
   1a504:	b	1a394 <pclose@plt+0x70e8>
   1a508:	ldr	r2, [sp, #16]
   1a50c:	ldr	r2, [r2]
   1a510:	str	r2, [sp, #20]
   1a514:	add	r2, r5, r6
   1a518:	str	r2, [sp, #12]
   1a51c:	ldr	r2, [sp, #20]
   1a520:	cmp	r2, #0
   1a524:	ldr	r2, [sp, #12]
   1a528:	ldrb	r1, [r2]
   1a52c:	beq	1a9ec <pclose@plt+0x7740>
   1a530:	ldr	r2, [sp, #20]
   1a534:	mov	ip, r1
   1a538:	cmp	r1, r2
   1a53c:	beq	1a9f4 <pclose@plt+0x7748>
   1a540:	ldr	r2, [sp, #16]
   1a544:	add	r2, r2, #16
   1a548:	b	1a558 <pclose@plt+0x72ac>
   1a54c:	cmp	lr, r1
   1a550:	add	r2, r2, #16
   1a554:	beq	1a5f0 <pclose@plt+0x7344>
   1a558:	ldr	lr, [r2]
   1a55c:	mov	r0, r2
   1a560:	cmp	lr, #0
   1a564:	bne	1a54c <pclose@plt+0x72a0>
   1a568:	cmp	r1, #63	; 0x3f
   1a56c:	cmpne	r1, #104	; 0x68
   1a570:	beq	1ab34 <pclose@plt+0x7888>
   1a574:	ldr	r2, [r0, #8]
   1a578:	ldr	r1, [sp, #12]
   1a57c:	tst	r2, #128	; 0x80
   1a580:	add	r6, r6, #1
   1a584:	mvnne	r2, #6
   1a588:	mvneq	r2, #1
   1a58c:	str	r6, [r4, #32]
   1a590:	str	r1, [r4, #24]
   1a594:	str	r2, [r4, #16]
   1a598:	ldr	r2, [sp, #12]
   1a59c:	mov	r1, fp
   1a5a0:	ldrb	r0, [r2, #1]
   1a5a4:	mov	r2, r3
   1a5a8:	cmp	r0, #0
   1a5ac:	andne	sl, sl, #1
   1a5b0:	moveq	sl, #1
   1a5b4:	cmp	sl, #0
   1a5b8:	beq	1a394 <pclose@plt+0x70e8>
   1a5bc:	mov	r3, #0
   1a5c0:	sub	r8, r8, #1
   1a5c4:	add	r7, r7, #4
   1a5c8:	add	r9, r9, #1
   1a5cc:	str	r3, [r4, #32]
   1a5d0:	b	1a394 <pclose@plt+0x70e8>
   1a5d4:	ldr	r2, [sp, #16]
   1a5d8:	mov	r3, r6
   1a5dc:	ldr	r4, [sp, #24]
   1a5e0:	mov	r6, #1
   1a5e4:	ldr	ip, [r2, r5, lsl #4]
   1a5e8:	add	r0, r2, r5, lsl #4
   1a5ec:	mov	sl, r6
   1a5f0:	cmp	ip, #0
   1a5f4:	beq	1a67c <pclose@plt+0x73d0>
   1a5f8:	ldr	r1, [r0, #8]
   1a5fc:	str	ip, [r4, #16]
   1a600:	ands	r2, r1, #7
   1a604:	beq	1a66c <pclose@plt+0x73c0>
   1a608:	ldr	r2, [sp, #12]
   1a60c:	eor	sl, sl, #1
   1a610:	ldrb	r0, [r2, #1]
   1a614:	cmp	r0, #0
   1a618:	andne	r0, sl, #1
   1a61c:	moveq	r0, #0
   1a620:	cmp	r0, #0
   1a624:	bne	1a9d0 <pclose@plt+0x7724>
   1a628:	ldr	r2, [r7, #4]
   1a62c:	cmp	r2, #0
   1a630:	beq	1a688 <pclose@plt+0x73dc>
   1a634:	ldrb	ip, [r2]
   1a638:	cmp	ip, #45	; 0x2d
   1a63c:	bne	1a6ac <pclose@plt+0x7400>
   1a640:	ldrb	ip, [r2, #1]
   1a644:	cmp	ip, #0
   1a648:	beq	1a6ac <pclose@plt+0x7400>
   1a64c:	tst	r1, #8
   1a650:	beq	1a6ac <pclose@plt+0x7400>
   1a654:	str	r0, [r4, #20]
   1a658:	mov	r1, fp
   1a65c:	mov	r2, r3
   1a660:	b	1a5bc <pclose@plt+0x7310>
   1a664:	mov	r6, r2
   1a668:	b	1a51c <pclose@plt+0x7270>
   1a66c:	add	r6, r6, #1
   1a670:	str	r6, [r4, #32]
   1a674:	str	r2, [r4, #20]
   1a678:	b	1a598 <pclose@plt+0x72ec>
   1a67c:	ldr	r2, [sp, #12]
   1a680:	ldrb	r1, [r2]
   1a684:	b	1a568 <pclose@plt+0x72bc>
   1a688:	tst	r1, #8
   1a68c:	mvneq	r0, #2
   1a690:	strne	r2, [r4, #20]
   1a694:	movne	r1, fp
   1a698:	movne	r2, r3
   1a69c:	moveq	r1, fp
   1a6a0:	moveq	r2, r3
   1a6a4:	streq	r0, [r4, #16]
   1a6a8:	b	1a5bc <pclose@plt+0x7310>
   1a6ac:	mov	r0, r4
   1a6b0:	bl	19670 <pclose@plt+0x63c4>
   1a6b4:	sub	r8, r8, #1
   1a6b8:	add	r7, r7, #4
   1a6bc:	add	r9, r9, #1
   1a6c0:	ldm	r4, {r1, r2}
   1a6c4:	b	1a5bc <pclose@plt+0x7310>
   1a6c8:	add	r6, r5, #2
   1a6cc:	mov	r0, r6
   1a6d0:	mov	r1, #61	; 0x3d
   1a6d4:	str	r3, [sp, #20]
   1a6d8:	bl	12eb0 <strchr@plt>
   1a6dc:	subs	r3, r0, #0
   1a6e0:	str	r3, [sp, #12]
   1a6e4:	ldr	r3, [sp, #20]
   1a6e8:	bne	1a7f0 <pclose@plt+0x7544>
   1a6ec:	ldr	r2, [sp, #16]
   1a6f0:	ldr	r2, [r2]
   1a6f4:	cmp	r2, #0
   1a6f8:	str	r2, [sp, #20]
   1a6fc:	beq	1a7a8 <pclose@plt+0x74fc>
   1a700:	ldr	fp, [sp, #16]
   1a704:	add	r5, fp, #4
   1a708:	ldr	r0, [r5, sl, lsl #4]
   1a70c:	cmp	r0, #0
   1a710:	beq	1a724 <pclose@plt+0x7478>
   1a714:	mov	r1, r6
   1a718:	bl	12a24 <strcmp@plt>
   1a71c:	cmp	r0, #0
   1a720:	beq	1a8ec <pclose@plt+0x7640>
   1a724:	add	sl, sl, #1
   1a728:	ldr	r3, [fp, sl, lsl #4]
   1a72c:	cmp	r3, #0
   1a730:	bne	1a708 <pclose@plt+0x745c>
   1a734:	mov	r0, r6
   1a738:	mov	fp, r3
   1a73c:	bl	12e8c <strlen@plt>
   1a740:	str	r4, [sp, #24]
   1a744:	ldr	r5, [sp, #16]
   1a748:	ldr	r4, [sp, #20]
   1a74c:	mov	sl, r0
   1a750:	str	r0, [sp, #28]
   1a754:	ldr	r0, [r5, #4]
   1a758:	cmp	r0, #0
   1a75c:	beq	1a774 <pclose@plt+0x74c8>
   1a760:	mov	r2, sl
   1a764:	mov	r1, r6
   1a768:	bl	1321c <strncmp@plt>
   1a76c:	cmp	r0, #0
   1a770:	beq	1a830 <pclose@plt+0x7584>
   1a774:	ldr	r4, [r5, #16]!
   1a778:	add	fp, fp, #1
   1a77c:	cmp	r4, #0
   1a780:	bne	1a754 <pclose@plt+0x74a8>
   1a784:	ldr	r3, [sp, #12]
   1a788:	ldr	r4, [sp, #24]
   1a78c:	cmp	r3, #0
   1a790:	beq	1a7a0 <pclose@plt+0x74f4>
   1a794:	ldr	r2, [sp, #12]
   1a798:	mov	r3, #61	; 0x3d
   1a79c:	strb	r3, [r2]
   1a7a0:	ldr	fp, [r4]
   1a7a4:	ldr	r3, [r4, #4]
   1a7a8:	mvn	r2, #1
   1a7ac:	str	r6, [r4, #24]
   1a7b0:	str	r2, [r4, #16]
   1a7b4:	sub	r8, r8, #1
   1a7b8:	add	r7, r7, #4
   1a7bc:	add	r9, r9, #1
   1a7c0:	mov	r1, fp
   1a7c4:	mov	r2, r3
   1a7c8:	b	1a394 <pclose@plt+0x70e8>
   1a7cc:	add	r6, r5, #2
   1a7d0:	mov	r0, r6
   1a7d4:	mov	r1, #61	; 0x3d
   1a7d8:	str	r3, [sp, #20]
   1a7dc:	bl	12eb0 <strchr@plt>
   1a7e0:	subs	r3, r0, #0
   1a7e4:	str	r3, [sp, #12]
   1a7e8:	ldr	r3, [sp, #20]
   1a7ec:	beq	1a7a8 <pclose@plt+0x74fc>
   1a7f0:	ldr	r2, [sp, #12]
   1a7f4:	mov	r3, #0
   1a7f8:	strb	r3, [r2]
   1a7fc:	ldrb	r3, [r5, #2]
   1a800:	cmp	r3, #0
   1a804:	moveq	r3, #61	; 0x3d
   1a808:	strbeq	r3, [r2]
   1a80c:	ldreq	fp, [r4]
   1a810:	ldreq	r3, [r4, #4]
   1a814:	beq	1a7a8 <pclose@plt+0x74fc>
   1a818:	ldr	r3, [sp, #16]
   1a81c:	ldr	r3, [r3]
   1a820:	cmp	r3, #0
   1a824:	str	r3, [sp, #20]
   1a828:	bne	1a700 <pclose@plt+0x7454>
   1a82c:	b	1a794 <pclose@plt+0x74e8>
   1a830:	ldr	r2, [sp, #16]
   1a834:	add	r3, fp, #1
   1a838:	mov	r0, r4
   1a83c:	ldr	r1, [r2, r3, lsl #4]
   1a840:	lsl	r3, r3, #4
   1a844:	cmp	r1, #0
   1a848:	ldr	r4, [sp, #24]
   1a84c:	add	sl, r2, r3
   1a850:	beq	1ab2c <pclose@plt+0x7880>
   1a854:	sub	r3, r3, #16
   1a858:	add	r3, r2, r3
   1a85c:	sub	r2, r3, sl
   1a860:	add	r2, r2, #32
   1a864:	str	r7, [sp, #20]
   1a868:	str	r8, [sp, #24]
   1a86c:	str	r9, [sp, #32]
   1a870:	str	fp, [sp, #36]	; 0x24
   1a874:	ldr	r9, [sp, #28]
   1a878:	mov	r7, r3
   1a87c:	str	r4, [sp, #28]
   1a880:	mov	fp, r0
   1a884:	mov	r4, r1
   1a888:	mov	r8, r2
   1a88c:	ldr	r0, [sl, #4]
   1a890:	cmp	r0, #0
   1a894:	beq	1a8c4 <pclose@plt+0x7618>
   1a898:	mov	r2, r9
   1a89c:	mov	r1, r6
   1a8a0:	bl	1321c <strncmp@plt>
   1a8a4:	cmp	r0, #0
   1a8a8:	bne	1a8c4 <pclose@plt+0x7618>
   1a8ac:	cmp	r4, fp
   1a8b0:	bne	1aaa4 <pclose@plt+0x77f8>
   1a8b4:	ldr	r2, [sl, #8]
   1a8b8:	ldr	r3, [r5, #8]
   1a8bc:	cmp	r2, r3
   1a8c0:	bne	1aaa4 <pclose@plt+0x77f8>
   1a8c4:	add	r7, r7, #16
   1a8c8:	ldr	r4, [r7, #16]
   1a8cc:	add	sl, sl, r8
   1a8d0:	cmp	r4, #0
   1a8d4:	bne	1a88c <pclose@plt+0x75e0>
   1a8d8:	add	r4, sp, #28
   1a8dc:	ldr	r7, [sp, #20]
   1a8e0:	ldm	r4, {r4, r9, fp}
   1a8e4:	ldr	r8, [sp, #24]
   1a8e8:	mov	sl, fp
   1a8ec:	ldr	r2, [sp, #12]
   1a8f0:	cmp	r2, #0
   1a8f4:	movne	r3, #61	; 0x3d
   1a8f8:	strbne	r3, [r2]
   1a8fc:	cmp	sl, #0
   1a900:	beq	1a938 <pclose@plt+0x768c>
   1a904:	ldr	r3, [sp, #16]
   1a908:	ldr	r3, [r3, sl, lsl #4]
   1a90c:	cmp	r3, #32768	; 0x8000
   1a910:	beq	1ab34 <pclose@plt+0x7888>
   1a914:	ldr	r2, [pc, #568]	; 1ab54 <pclose@plt+0x78a8>
   1a918:	cmp	r3, r2
   1a91c:	beq	1a98c <pclose@plt+0x76e0>
   1a920:	ldr	r2, [pc, #560]	; 1ab58 <pclose@plt+0x78ac>
   1a924:	cmp	r3, r2
   1a928:	beq	1aa80 <pclose@plt+0x77d4>
   1a92c:	ldr	r2, [pc, #552]	; 1ab5c <pclose@plt+0x78b0>
   1a930:	cmp	r3, r2
   1a934:	beq	1aa00 <pclose@plt+0x7754>
   1a938:	ldr	r3, [sp, #16]
   1a93c:	add	r2, r3, sl, lsl #4
   1a940:	ldr	r3, [r3, sl, lsl #4]
   1a944:	ldr	r1, [r2, #8]
   1a948:	str	r3, [r4, #16]
   1a94c:	tst	r1, #7
   1a950:	beq	1a9a4 <pclose@plt+0x76f8>
   1a954:	ldr	r3, [sp, #12]
   1a958:	cmp	r3, #0
   1a95c:	beq	1aad8 <pclose@plt+0x782c>
   1a960:	ldrb	r3, [r3, #1]
   1a964:	cmp	r3, #0
   1a968:	beq	1aa60 <pclose@plt+0x77b4>
   1a96c:	ldr	r3, [sp, #12]
   1a970:	adds	r2, r3, #1
   1a974:	beq	1aa60 <pclose@plt+0x77b4>
   1a978:	mov	r0, r4
   1a97c:	bl	19670 <pclose@plt+0x63c4>
   1a980:	ldr	fp, [r4]
   1a984:	ldr	r3, [r4, #4]
   1a988:	b	1a7b4 <pclose@plt+0x7508>
   1a98c:	ldr	r3, [r4, #8]
   1a990:	ands	r5, r3, #64	; 0x40
   1a994:	bne	1a938 <pclose@plt+0x768c>
   1a998:	bl	199e8 <pclose@plt+0x673c>
   1a99c:	mov	r0, r5
   1a9a0:	bl	12e44 <exit@plt>
   1a9a4:	ldr	r3, [sp, #12]
   1a9a8:	cmp	r3, #0
   1a9ac:	mvnne	r3, #5
   1a9b0:	ldreq	r2, [sp, #12]
   1a9b4:	strne	r3, [r4, #20]
   1a9b8:	ldrne	fp, [r4]
   1a9bc:	ldrne	r3, [r4, #4]
   1a9c0:	ldreq	fp, [r4]
   1a9c4:	ldreq	r3, [r4, #4]
   1a9c8:	streq	r2, [r4, #20]
   1a9cc:	b	1a7b4 <pclose@plt+0x7508>
   1a9d0:	add	r2, r2, #1
   1a9d4:	mov	r0, r4
   1a9d8:	bl	19670 <pclose@plt+0x63c4>
   1a9dc:	ldm	r4, {r1, r2}
   1a9e0:	b	1a5bc <pclose@plt+0x7310>
   1a9e4:	ldrb	r1, [r5, #1]
   1a9e8:	mov	r6, r2
   1a9ec:	ldr	r0, [sp, #16]
   1a9f0:	b	1a568 <pclose@plt+0x72bc>
   1a9f4:	ldr	r0, [sp, #16]
   1a9f8:	ldr	ip, [sp, #20]
   1a9fc:	b	1a5f8 <pclose@plt+0x734c>
   1aa00:	ldr	r3, [sp, #16]
   1aa04:	ldr	r3, [r3]
   1aa08:	cmp	r3, #0
   1aa0c:	beq	1aa58 <pclose@plt+0x77ac>
   1aa10:	ldr	r6, [pc, #328]	; 1ab60 <pclose@plt+0x78b4>
   1aa14:	ldr	r5, [pc, #328]	; 1ab64 <pclose@plt+0x78b8>
   1aa18:	ldr	r4, [sp, #16]
   1aa1c:	b	1aa2c <pclose@plt+0x7780>
   1aa20:	ldr	r3, [r4, #16]!
   1aa24:	cmp	r3, #0
   1aa28:	beq	1aa58 <pclose@plt+0x77ac>
   1aa2c:	ldr	r2, [r4, #4]
   1aa30:	cmp	r2, #0
   1aa34:	beq	1aa20 <pclose@plt+0x7774>
   1aa38:	ldr	r3, [r4, #8]
   1aa3c:	ands	r0, r3, #64	; 0x40
   1aa40:	bne	1aa20 <pclose@plt+0x7774>
   1aa44:	str	r0, [sp]
   1aa48:	mov	r3, r6
   1aa4c:	mov	r1, r5
   1aa50:	bl	19798 <pclose@plt+0x64ec>
   1aa54:	b	1aa20 <pclose@plt+0x7774>
   1aa58:	mov	r0, #0
   1aa5c:	bl	12e44 <exit@plt>
   1aa60:	tst	r1, #8
   1aa64:	movne	r3, #0
   1aa68:	mvneq	r3, #2
   1aa6c:	strne	r3, [r4, #20]
   1aa70:	streq	r3, [r4, #16]
   1aa74:	ldr	fp, [r4]
   1aa78:	ldr	r3, [r4, #4]
   1aa7c:	b	1a7b4 <pclose@plt+0x7508>
   1aa80:	mov	r0, #16
   1aa84:	bl	198cc <pclose@plt+0x6620>
   1aa88:	mov	r3, #0
   1aa8c:	ldr	r2, [pc, #204]	; 1ab60 <pclose@plt+0x78b4>
   1aa90:	mov	r1, r0
   1aa94:	mov	r0, r3
   1aa98:	bl	19798 <pclose@plt+0x64ec>
   1aa9c:	mov	r0, #0
   1aaa0:	bl	12e44 <exit@plt>
   1aaa4:	ldr	r2, [sp, #12]
   1aaa8:	ldr	r4, [sp, #28]
   1aaac:	cmp	r2, #0
   1aab0:	movne	r3, #61	; 0x3d
   1aab4:	strbne	r3, [r2]
   1aab8:	mvn	r3, #7
   1aabc:	str	r3, [r4, #16]
   1aac0:	ldr	r7, [sp, #20]
   1aac4:	ldr	r8, [sp, #24]
   1aac8:	ldr	r9, [sp, #32]
   1aacc:	ldr	fp, [r4]
   1aad0:	ldr	r3, [r4, #4]
   1aad4:	b	1a7b4 <pclose@plt+0x7508>
   1aad8:	ldr	r2, [r7, #4]
   1aadc:	cmp	r2, #0
   1aae0:	beq	1aa60 <pclose@plt+0x77b4>
   1aae4:	ldrb	r3, [r2]
   1aae8:	cmp	r3, #45	; 0x2d
   1aaec:	beq	1ab10 <pclose@plt+0x7864>
   1aaf0:	mov	r0, r4
   1aaf4:	bl	19670 <pclose@plt+0x63c4>
   1aaf8:	sub	r8, r8, #1
   1aafc:	add	r7, r7, #4
   1ab00:	add	r9, r9, #1
   1ab04:	ldr	fp, [r4]
   1ab08:	ldr	r3, [r4, #4]
   1ab0c:	b	1a7b4 <pclose@plt+0x7508>
   1ab10:	tst	r1, #8
   1ab14:	beq	1aaf0 <pclose@plt+0x7844>
   1ab18:	ldr	r3, [sp, #12]
   1ab1c:	ldr	fp, [r4]
   1ab20:	str	r3, [r4, #20]
   1ab24:	ldr	r3, [r4, #4]
   1ab28:	b	1a7b4 <pclose@plt+0x7508>
   1ab2c:	mov	sl, fp
   1ab30:	b	1a8ec <pclose@plt+0x7640>
   1ab34:	ldr	r1, [r4, #8]
   1ab38:	ldr	r0, [sp, #16]
   1ab3c:	bl	19b44 <pclose@plt+0x6898>
   1ab40:	andeq	sl, r2, r4, lsl #16
   1ab44:	andeq	r9, r2, r4, asr pc
   1ab48:	andeq	fp, r2, r4, lsl #20
   1ab4c:	ldrdeq	sl, [r2], -r0
   1ab50:	ldrdeq	sl, [r2], -ip
   1ab54:	andeq	r8, r0, r1
   1ab58:	andeq	r8, r0, r2
   1ab5c:	andeq	r8, r0, r3
   1ab60:	strdeq	ip, [r2], -r0
   1ab64:	andeq	sl, r2, ip, ror #27
   1ab68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab6c:	cmp	r0, #0
   1ab70:	sub	sp, sp, #252	; 0xfc
   1ab74:	stm	sp, {r0, r3}
   1ab78:	ldr	r3, [pc, #2536]	; 1b568 <pclose@plt+0x82bc>
   1ab7c:	ldr	r3, [r3]
   1ab80:	str	r3, [sp, #244]	; 0xf4
   1ab84:	ldr	r3, [sp, #288]	; 0x120
   1ab88:	str	r3, [sp, #8]
   1ab8c:	beq	1af84 <pclose@plt+0x7cd8>
   1ab90:	mov	fp, r2
   1ab94:	ldr	r0, [sp, #4]
   1ab98:	bl	19368 <pclose@plt+0x60bc>
   1ab9c:	ldr	r3, [fp]
   1aba0:	cmp	r3, #0
   1aba4:	beq	1aebc <pclose@plt+0x7c10>
   1aba8:	mov	sl, #0
   1abac:	mov	r3, #0
   1abb0:	mov	r4, r3
   1abb4:	mov	r6, r3
   1abb8:	mov	r8, r3
   1abbc:	str	r3, [sp, #20]
   1abc0:	str	r3, [sp, #16]
   1abc4:	str	r3, [sp, #12]
   1abc8:	cmp	sl, #0
   1abcc:	beq	1ac38 <pclose@plt+0x798c>
   1abd0:	rsb	r3, sl, #3
   1abd4:	add	r2, sp, #248	; 0xf8
   1abd8:	add	r3, r2, r3, lsl #2
   1abdc:	sub	sl, sl, #1
   1abe0:	ldr	r9, [r3, #-216]	; 0xffffff28
   1abe4:	cmn	r9, #1
   1abe8:	cmpne	r9, #10
   1abec:	bne	1ac50 <pclose@plt+0x79a4>
   1abf0:	cmn	r9, #1
   1abf4:	ldrne	r3, [fp]
   1abf8:	addne	r3, r3, #1
   1abfc:	strne	r3, [fp]
   1ac00:	cmn	r4, #1
   1ac04:	beq	1af78 <pclose@plt+0x7ccc>
   1ac08:	cmp	r4, #2
   1ac0c:	beq	1acec <pclose@plt+0x7a40>
   1ac10:	cmp	r4, #3
   1ac14:	beq	1af98 <pclose@plt+0x7cec>
   1ac18:	cmp	r4, #4
   1ac1c:	beq	1afcc <pclose@plt+0x7d20>
   1ac20:	cmn	r9, #1
   1ac24:	beq	1b064 <pclose@plt+0x7db8>
   1ac28:	mov	r8, #0
   1ac2c:	cmp	sl, #0
   1ac30:	mov	r4, r8
   1ac34:	bne	1abd0 <pclose@plt+0x7924>
   1ac38:	ldr	r0, [sp]
   1ac3c:	bl	13234 <getc@plt>
   1ac40:	mov	r9, r0
   1ac44:	cmn	r9, #1
   1ac48:	cmpne	r9, #10
   1ac4c:	beq	1abf0 <pclose@plt+0x7944>
   1ac50:	cmn	r4, #1
   1ac54:	beq	1abc8 <pclose@plt+0x791c>
   1ac58:	cmp	r4, #0
   1ac5c:	beq	1ac90 <pclose@plt+0x79e4>
   1ac60:	cmp	r4, #1
   1ac64:	beq	1abc8 <pclose@plt+0x791c>
   1ac68:	cmp	r4, #2
   1ac6c:	beq	1ad6c <pclose@plt+0x7ac0>
   1ac70:	cmp	r4, #3
   1ac74:	bne	1ae88 <pclose@plt+0x7bdc>
   1ac78:	bics	r3, r9, #127	; 0x7f
   1ac7c:	beq	1ae64 <pclose@plt+0x7bb8>
   1ac80:	strb	r9, [sp, #44]	; 0x2c
   1ac84:	mov	r8, #1
   1ac88:	mov	r4, #4
   1ac8c:	b	1abc8 <pclose@plt+0x791c>
   1ac90:	bics	r4, r9, #127	; 0x7f
   1ac94:	beq	1acc4 <pclose@plt+0x7a18>
   1ac98:	cmp	r8, #98	; 0x62
   1ac9c:	addle	r3, sp, #248	; 0xf8
   1aca0:	ldrgt	r2, [sp, #4]
   1aca4:	addle	r3, r3, r8
   1aca8:	mvngt	r3, #3
   1acac:	strgt	r3, [r2, #16]
   1acb0:	mvngt	r4, #0
   1acb4:	strble	r9, [r3, #-204]	; 0xffffff34
   1acb8:	addle	r8, r8, #1
   1acbc:	movle	r4, #2
   1acc0:	b	1abc8 <pclose@plt+0x791c>
   1acc4:	bl	12e14 <__ctype_b_loc@plt>
   1acc8:	lsl	r3, r9, #1
   1accc:	ldr	r2, [r0]
   1acd0:	ldrh	r3, [r2, r3]
   1acd4:	tst	r3, #8192	; 0x2000
   1acd8:	bne	1abc8 <pclose@plt+0x791c>
   1acdc:	cmp	r9, #35	; 0x23
   1ace0:	bne	1ac98 <pclose@plt+0x79ec>
   1ace4:	mov	r4, #1
   1ace8:	b	1abc8 <pclose@plt+0x791c>
   1acec:	ldr	r5, [sp, #8]
   1acf0:	add	r3, sp, #248	; 0xf8
   1acf4:	mov	r6, #0
   1acf8:	ldr	r4, [r5]
   1acfc:	add	r8, r3, r8
   1ad00:	cmp	r4, r6
   1ad04:	strb	r6, [r8, #-204]	; 0xffffff34
   1ad08:	beq	1b0e0 <pclose@plt+0x7e34>
   1ad0c:	ldr	r0, [r5, #4]
   1ad10:	cmp	r0, #0
   1ad14:	beq	1ad28 <pclose@plt+0x7a7c>
   1ad18:	add	r1, sp, #44	; 0x2c
   1ad1c:	bl	12a24 <strcmp@plt>
   1ad20:	cmp	r0, #0
   1ad24:	beq	1adf8 <pclose@plt+0x7b4c>
   1ad28:	ldr	r4, [r5, #16]!
   1ad2c:	add	r6, r6, #1
   1ad30:	cmp	r4, #0
   1ad34:	bne	1ad0c <pclose@plt+0x7a60>
   1ad38:	ldr	r5, [r5, #8]
   1ad3c:	ldr	r3, [sp, #4]
   1ad40:	tst	r5, #64	; 0x40
   1ad44:	str	r4, [r3, #16]
   1ad48:	bne	1ad64 <pclose@plt+0x7ab8>
   1ad4c:	add	r8, sp, #44	; 0x2c
   1ad50:	mov	r0, r8
   1ad54:	ldr	r1, [pc, #2064]	; 1b56c <pclose@plt+0x82c0>
   1ad58:	bl	12a24 <strcmp@plt>
   1ad5c:	subs	r4, r0, #0
   1ad60:	bne	1ae24 <pclose@plt+0x7b78>
   1ad64:	mov	r8, r4
   1ad68:	b	1abc8 <pclose@plt+0x791c>
   1ad6c:	bics	r5, r9, #127	; 0x7f
   1ad70:	bne	1ac98 <pclose@plt+0x79ec>
   1ad74:	bl	12e14 <__ctype_b_loc@plt>
   1ad78:	lsl	r3, r9, #1
   1ad7c:	ldr	r2, [r0]
   1ad80:	mov	r7, r0
   1ad84:	ldrh	r3, [r2, r3]
   1ad88:	tst	r3, #8192	; 0x2000
   1ad8c:	beq	1ac98 <pclose@plt+0x79ec>
   1ad90:	ldr	r4, [sp, #8]
   1ad94:	add	r3, sp, #248	; 0xf8
   1ad98:	add	r3, r3, r8
   1ad9c:	ldr	r8, [r4]
   1ada0:	strb	r5, [r3, #-204]	; 0xffffff34
   1ada4:	cmp	r8, #0
   1ada8:	beq	1b1ec <pclose@plt+0x7f40>
   1adac:	ldr	r0, [r4, #4]
   1adb0:	cmp	r0, #0
   1adb4:	beq	1adc8 <pclose@plt+0x7b1c>
   1adb8:	add	r1, sp, #44	; 0x2c
   1adbc:	bl	12a24 <strcmp@plt>
   1adc0:	cmp	r0, #0
   1adc4:	beq	1b1c0 <pclose@plt+0x7f14>
   1adc8:	ldr	r8, [r4, #16]!
   1adcc:	add	r5, r5, #1
   1add0:	cmp	r8, #0
   1add4:	bne	1adac <pclose@plt+0x7b00>
   1add8:	ldr	r6, [r4, #8]
   1addc:	ldr	r3, [sp, #4]
   1ade0:	tst	r6, #64	; 0x40
   1ade4:	str	r8, [r3, #16]
   1ade8:	beq	1b204 <pclose@plt+0x7f58>
   1adec:	mov	r6, r5
   1adf0:	mov	r8, r5
   1adf4:	b	1ace4 <pclose@plt+0x7a38>
   1adf8:	ldr	r2, [r5, #8]
   1adfc:	ldr	r3, [sp, #4]
   1ae00:	ands	r1, r2, #64	; 0x40
   1ae04:	mov	r8, r0
   1ae08:	str	r4, [r3, #16]
   1ae0c:	bne	1ac2c <pclose@plt+0x7980>
   1ae10:	ands	r3, r2, #7
   1ae14:	bne	1b42c <pclose@plt+0x8180>
   1ae18:	ldr	r2, [sp, #4]
   1ae1c:	str	r3, [r2, #20]
   1ae20:	b	1af58 <pclose@plt+0x7cac>
   1ae24:	ldr	r3, [sp, #4]
   1ae28:	ldr	r7, [r3, #52]	; 0x34
   1ae2c:	cmp	r7, #0
   1ae30:	bne	1ae44 <pclose@plt+0x7b98>
   1ae34:	b	1af44 <pclose@plt+0x7c98>
   1ae38:	ldr	r7, [r7]
   1ae3c:	cmp	r7, #0
   1ae40:	beq	1af44 <pclose@plt+0x7c98>
   1ae44:	mov	r1, r8
   1ae48:	add	r0, r7, #4
   1ae4c:	bl	12a24 <strcmp@plt>
   1ae50:	cmp	r0, #0
   1ae54:	bne	1ae38 <pclose@plt+0x7b8c>
   1ae58:	mov	r4, r0
   1ae5c:	mov	r8, r4
   1ae60:	b	1abc8 <pclose@plt+0x791c>
   1ae64:	bl	12e14 <__ctype_b_loc@plt>
   1ae68:	lsl	r3, r9, #1
   1ae6c:	ldr	r2, [r0]
   1ae70:	ldrh	r3, [r2, r3]
   1ae74:	tst	r3, #8192	; 0x2000
   1ae78:	strbeq	r9, [sp, #44]	; 0x2c
   1ae7c:	moveq	r8, #1
   1ae80:	moveq	r4, #4
   1ae84:	b	1abc8 <pclose@plt+0x791c>
   1ae88:	cmp	r4, #4
   1ae8c:	bne	1ac98 <pclose@plt+0x79ec>
   1ae90:	ldr	r2, [sp, #12]
   1ae94:	mov	r5, r8
   1ae98:	cmp	r2, #0
   1ae9c:	beq	1b0ac <pclose@plt+0x7e00>
   1aea0:	ldr	r3, [sp, #16]
   1aea4:	sub	r3, r3, #1
   1aea8:	cmp	r3, r8
   1aeac:	bls	1af14 <pclose@plt+0x7c68>
   1aeb0:	add	r8, r8, #1
   1aeb4:	strb	r9, [r2, r5]
   1aeb8:	b	1abc8 <pclose@plt+0x791c>
   1aebc:	ldr	r6, [sp]
   1aec0:	mov	r0, r6
   1aec4:	bl	13234 <getc@plt>
   1aec8:	mov	r4, r0
   1aecc:	mov	r0, r6
   1aed0:	str	r4, [sp, #32]
   1aed4:	bl	13234 <getc@plt>
   1aed8:	mov	r5, r0
   1aedc:	mov	r0, r6
   1aee0:	str	r5, [sp, #36]	; 0x24
   1aee4:	bl	13234 <getc@plt>
   1aee8:	cmp	r5, #187	; 0xbb
   1aeec:	cmpeq	r4, #239	; 0xef
   1aef0:	movne	r4, #1
   1aef4:	moveq	r4, #0
   1aef8:	cmp	r0, #191	; 0xbf
   1aefc:	orrne	r4, r4, #1
   1af00:	cmp	r4, #0
   1af04:	str	r0, [sp, #40]	; 0x28
   1af08:	movne	sl, #3
   1af0c:	bne	1abac <pclose@plt+0x7900>
   1af10:	b	1aba8 <pclose@plt+0x78fc>
   1af14:	ldr	r3, [sp, #16]
   1af18:	ldr	r0, [sp, #12]
   1af1c:	add	r3, r3, #50	; 0x32
   1af20:	mov	r1, r3
   1af24:	str	r3, [sp, #16]
   1af28:	bl	13018 <gcry_realloc@plt>
   1af2c:	cmp	r0, #0
   1af30:	beq	1b4f4 <pclose@plt+0x8248>
   1af34:	add	r8, r8, #1
   1af38:	strb	r9, [r0, r5]
   1af3c:	str	r0, [sp, #12]
   1af40:	b	1abc8 <pclose@plt+0x791c>
   1af44:	ldr	r3, [sp, #4]
   1af48:	tst	r5, #128	; 0x80
   1af4c:	mvnne	r4, #6
   1af50:	mvneq	r4, #1
   1af54:	str	r4, [r3, #16]
   1af58:	ldr	r3, [pc, #1544]	; 1b568 <pclose@plt+0x82bc>
   1af5c:	ldr	r2, [sp, #244]	; 0xf4
   1af60:	mov	r0, r4
   1af64:	ldr	r3, [r3]
   1af68:	cmp	r2, r3
   1af6c:	bne	1b534 <pclose@plt+0x8288>
   1af70:	add	sp, sp, #252	; 0xfc
   1af74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af78:	ldr	r3, [sp, #4]
   1af7c:	ldr	r4, [r3, #16]
   1af80:	b	1af58 <pclose@plt+0x7cac>
   1af84:	mov	r1, r3
   1af88:	ldr	r0, [sp, #4]
   1af8c:	bl	1a14c <pclose@plt+0x6ea0>
   1af90:	mov	r4, r0
   1af94:	b	1af58 <pclose@plt+0x7cac>
   1af98:	ldr	r3, [sp, #20]
   1af9c:	cmp	r3, #0
   1afa0:	bne	1b0d0 <pclose@plt+0x7e24>
   1afa4:	ldr	r3, [sp, #8]
   1afa8:	add	r6, r3, r6, lsl #4
   1afac:	ldr	r3, [r6, #8]
   1afb0:	tst	r3, #7
   1afb4:	bne	1b0c8 <pclose@plt+0x7e1c>
   1afb8:	ldr	r2, [sp, #4]
   1afbc:	mov	r3, #0
   1afc0:	str	r3, [r2, #20]
   1afc4:	ldr	r4, [r2, #16]
   1afc8:	b	1af58 <pclose@plt+0x7cac>
   1afcc:	ldr	r3, [sp, #20]
   1afd0:	cmp	r3, #0
   1afd4:	beq	1b040 <pclose@plt+0x7d94>
   1afd8:	ldr	r3, [sp, #12]
   1afdc:	cmp	r3, #0
   1afe0:	beq	1b054 <pclose@plt+0x7da8>
   1afe4:	ldr	r3, [sp, #12]
   1afe8:	mov	r6, #0
   1afec:	ldr	r1, [pc, #1404]	; 1b570 <pclose@plt+0x82c4>
   1aff0:	strb	r6, [r3, r8]
   1aff4:	mov	r0, r3
   1aff8:	bl	1318c <strpbrk@plt>
   1affc:	subs	r5, r0, #0
   1b000:	beq	1b028 <pclose@plt+0x7d7c>
   1b004:	mov	r4, r5
   1b008:	strb	r6, [r4], #1
   1b00c:	mov	r0, r4
   1b010:	bl	18364 <pclose@plt+0x50b8>
   1b014:	cmp	r4, r6
   1b018:	beq	1b028 <pclose@plt+0x7d7c>
   1b01c:	ldrb	r3, [r5, #1]
   1b020:	cmp	r3, r6
   1b024:	bne	1af78 <pclose@plt+0x7ccc>
   1b028:	ldr	r0, [sp, #12]
   1b02c:	bl	12b50 <gcry_free@plt>
   1b030:	ldr	r3, [sp, #4]
   1b034:	mvn	r4, #9
   1b038:	str	r4, [r3, #16]
   1b03c:	b	1af58 <pclose@plt+0x7cac>
   1b040:	ldr	r3, [sp, #8]
   1b044:	add	r6, r3, r6, lsl #4
   1b048:	ldr	r3, [r6, #8]
   1b04c:	tst	r3, #7
   1b050:	bne	1b134 <pclose@plt+0x7e88>
   1b054:	ldr	r3, [sp, #4]
   1b058:	mvn	r4, #5
   1b05c:	str	r4, [r3, #16]
   1b060:	b	1af58 <pclose@plt+0x7cac>
   1b064:	ldr	r3, [sp, #4]
   1b068:	ldr	r0, [r3, #52]	; 0x34
   1b06c:	cmp	r0, #0
   1b070:	beq	1b084 <pclose@plt+0x7dd8>
   1b074:	ldr	r4, [r0]
   1b078:	bl	12b50 <gcry_free@plt>
   1b07c:	subs	r0, r4, #0
   1b080:	bne	1b074 <pclose@plt+0x7dc8>
   1b084:	ldm	sp, {r0, r2}
   1b088:	mov	r3, #0
   1b08c:	str	r3, [r2, #52]	; 0x34
   1b090:	bl	12afc <ferror@plt>
   1b094:	subs	r4, r0, #0
   1b098:	beq	1b128 <pclose@plt+0x7e7c>
   1b09c:	ldr	r3, [sp, #4]
   1b0a0:	mvn	r4, #4
   1b0a4:	str	r4, [r3, #16]
   1b0a8:	b	1af58 <pclose@plt+0x7cac>
   1b0ac:	cmp	r8, #98	; 0x62
   1b0b0:	bgt	1b188 <pclose@plt+0x7edc>
   1b0b4:	add	r3, sp, #248	; 0xf8
   1b0b8:	add	r3, r3, r8
   1b0bc:	add	r8, r8, #1
   1b0c0:	strb	r9, [r3, #-204]	; 0xffffff34
   1b0c4:	b	1abc8 <pclose@plt+0x791c>
   1b0c8:	tst	r3, #8
   1b0cc:	bne	1afb8 <pclose@plt+0x7d0c>
   1b0d0:	ldr	r3, [sp, #4]
   1b0d4:	mvn	r4, #2
   1b0d8:	str	r4, [r3, #16]
   1b0dc:	b	1af58 <pclose@plt+0x7cac>
   1b0e0:	ldr	r3, [sp, #8]
   1b0e4:	mov	r6, r4
   1b0e8:	ldr	r5, [r3, #8]
   1b0ec:	ldr	r3, [sp, #4]
   1b0f0:	tst	r5, #64	; 0x40
   1b0f4:	str	r4, [r3, #16]
   1b0f8:	beq	1ad4c <pclose@plt+0x7aa0>
   1b0fc:	b	1ad64 <pclose@plt+0x7ab8>
   1b100:	add	r3, sp, #248	; 0xf8
   1b104:	add	r8, r3, r8
   1b108:	ldr	r3, [sp, #12]
   1b10c:	add	r0, sp, #44	; 0x2c
   1b110:	strb	r3, [r8, #-204]	; 0xffffff34
   1b114:	bl	13258 <gcry_strdup@plt>
   1b118:	subs	r3, r0, #0
   1b11c:	str	r3, [sp, #12]
   1b120:	bne	1b14c <pclose@plt+0x7ea0>
   1b124:	mvn	r4, #10
   1b128:	ldr	r3, [sp, #4]
   1b12c:	str	r4, [r3, #16]
   1b130:	b	1af58 <pclose@plt+0x7cac>
   1b134:	ldr	r3, [sp, #12]
   1b138:	cmp	r3, #0
   1b13c:	beq	1b100 <pclose@plt+0x7e54>
   1b140:	ldr	r3, [sp, #12]
   1b144:	ldr	r2, [sp, #20]
   1b148:	strb	r2, [r3, r8]
   1b14c:	ldr	r4, [sp, #12]
   1b150:	mov	r0, r4
   1b154:	bl	18364 <pclose@plt+0x50b8>
   1b158:	ldrb	r3, [r4]
   1b15c:	cmp	r3, #34	; 0x22
   1b160:	beq	1b454 <pclose@plt+0x81a8>
   1b164:	mov	r2, r4
   1b168:	ldr	r4, [sp, #4]
   1b16c:	ldr	r1, [r6, #8]
   1b170:	mov	r0, r4
   1b174:	bl	19670 <pclose@plt+0x63c4>
   1b178:	cmp	r0, #0
   1b17c:	beq	1b440 <pclose@plt+0x8194>
   1b180:	ldr	r4, [r4, #16]
   1b184:	b	1af58 <pclose@plt+0x7cac>
   1b188:	mov	r0, #150	; 0x96
   1b18c:	bl	129d0 <gcry_malloc@plt>
   1b190:	subs	r7, r0, #0
   1b194:	str	r7, [sp, #12]
   1b198:	beq	1b124 <pclose@plt+0x7e78>
   1b19c:	mov	r2, r8
   1b1a0:	add	r1, sp, #44	; 0x2c
   1b1a4:	mov	r0, r7
   1b1a8:	bl	12b2c <memcpy@plt>
   1b1ac:	mov	r3, #150	; 0x96
   1b1b0:	add	r8, r8, #1
   1b1b4:	str	r3, [sp, #16]
   1b1b8:	strb	r9, [r7, r5]
   1b1bc:	b	1abc8 <pclose@plt+0x791c>
   1b1c0:	ldr	r3, [r4, #8]
   1b1c4:	ldr	r2, [sp, #4]
   1b1c8:	tst	r3, #64	; 0x40
   1b1cc:	moveq	r6, r5
   1b1d0:	str	r8, [r2, #16]
   1b1d4:	moveq	r4, #3
   1b1d8:	mov	r8, r5
   1b1dc:	beq	1abc8 <pclose@plt+0x791c>
   1b1e0:	mov	r6, r8
   1b1e4:	mov	r4, #1
   1b1e8:	b	1abc8 <pclose@plt+0x791c>
   1b1ec:	ldr	r3, [sp, #8]
   1b1f0:	ldr	r6, [r3, #8]
   1b1f4:	ldr	r3, [sp, #4]
   1b1f8:	tst	r6, #64	; 0x40
   1b1fc:	str	r8, [r3, #16]
   1b200:	bne	1b1e0 <pclose@plt+0x7f34>
   1b204:	add	r8, sp, #44	; 0x2c
   1b208:	mov	r0, r8
   1b20c:	ldr	r1, [pc, #864]	; 1b574 <pclose@plt+0x82c8>
   1b210:	bl	12a24 <strcmp@plt>
   1b214:	cmp	r0, #0
   1b218:	beq	1b414 <pclose@plt+0x8168>
   1b21c:	ldr	r1, [pc, #840]	; 1b56c <pclose@plt+0x82c0>
   1b220:	mov	r0, r8
   1b224:	bl	12a24 <strcmp@plt>
   1b228:	subs	r4, r0, #0
   1b22c:	bne	1b4a0 <pclose@plt+0x81f4>
   1b230:	ldr	r0, [sp]
   1b234:	bl	13234 <getc@plt>
   1b238:	ldr	r8, [r7]
   1b23c:	str	r4, [sp, #28]
   1b240:	cmn	r0, #1
   1b244:	cmpne	r0, #10
   1b248:	moveq	r3, #1
   1b24c:	movne	r3, #0
   1b250:	cmp	r3, #0
   1b254:	mov	r6, r0
   1b258:	movne	r6, #10
   1b25c:	movne	r3, #1
   1b260:	moveq	r3, #0
   1b264:	str	r3, [sp, #24]
   1b268:	lsl	r3, r6, #1
   1b26c:	bics	r2, r6, #127	; 0x7f
   1b270:	ldrh	r3, [r8, r3]
   1b274:	and	r3, r3, #8192	; 0x2000
   1b278:	bne	1b3f0 <pclose@plt+0x8144>
   1b27c:	cmp	r3, #0
   1b280:	bne	1b334 <pclose@plt+0x8088>
   1b284:	mov	r3, #1
   1b288:	ldr	r4, [sp, #24]
   1b28c:	mov	r8, r3
   1b290:	mov	r0, r6
   1b294:	add	r3, sp, #248	; 0xf8
   1b298:	add	r2, r3, r2
   1b29c:	cmp	r4, #0
   1b2a0:	strb	r0, [r2, #-104]	; 0xffffff98
   1b2a4:	bne	1b54c <pclose@plt+0x82a0>
   1b2a8:	ldr	r0, [sp]
   1b2ac:	bl	13234 <getc@plt>
   1b2b0:	cmn	r0, #1
   1b2b4:	cmpne	r0, #10
   1b2b8:	bne	1b544 <pclose@plt+0x8298>
   1b2bc:	mov	r3, #20
   1b2c0:	mov	r4, #1
   1b2c4:	mov	r0, #10
   1b2c8:	ldr	r2, [r7]
   1b2cc:	ldrh	r3, [r2, r3]
   1b2d0:	tst	r3, #8192	; 0x2000
   1b2d4:	bne	1b368 <pclose@plt+0x80bc>
   1b2d8:	cmp	r8, #98	; 0x62
   1b2dc:	ble	1b538 <pclose@plt+0x828c>
   1b2e0:	cmp	r4, #0
   1b2e4:	mov	r9, r4
   1b2e8:	bne	1b54c <pclose@plt+0x82a0>
   1b2ec:	ldr	r0, [sp]
   1b2f0:	bl	13234 <getc@plt>
   1b2f4:	cmn	r0, #1
   1b2f8:	cmpne	r0, #10
   1b2fc:	mov	r6, r0
   1b300:	bne	1b48c <pclose@plt+0x81e0>
   1b304:	mov	r6, #10
   1b308:	mov	r3, #20
   1b30c:	mov	r0, r6
   1b310:	mov	r2, #1
   1b314:	str	r2, [sp, #24]
   1b318:	ldr	r8, [r7]
   1b31c:	ldrh	r3, [r8, r3]
   1b320:	tst	r3, #8192	; 0x2000
   1b324:	beq	1b500 <pclose@plt+0x8254>
   1b328:	bics	r3, r0, #127	; 0x7f
   1b32c:	mov	r6, r0
   1b330:	bne	1b37c <pclose@plt+0x80d0>
   1b334:	ldr	r3, [sp, #24]
   1b338:	cmp	r3, #0
   1b33c:	bne	1b54c <pclose@plt+0x82a0>
   1b340:	ldr	r0, [sp]
   1b344:	bl	13234 <getc@plt>
   1b348:	ldr	r8, [r7]
   1b34c:	cmn	r0, #1
   1b350:	cmpne	r0, #10
   1b354:	moveq	r3, #1
   1b358:	mov	r6, r0
   1b35c:	streq	r3, [sp, #24]
   1b360:	moveq	r6, #10
   1b364:	b	1b268 <pclose@plt+0x7fbc>
   1b368:	mov	r3, r8
   1b36c:	mov	r6, r0
   1b370:	mov	r8, r2
   1b374:	mov	r9, r3
   1b378:	str	r4, [sp, #24]
   1b37c:	ldr	r3, [sp, #4]
   1b380:	ldr	r4, [r3, #52]	; 0x34
   1b384:	add	r3, sp, #248	; 0xf8
   1b388:	add	r2, r3, r9
   1b38c:	cmp	r4, #0
   1b390:	mov	r3, #0
   1b394:	strb	r3, [r2, #-104]	; 0xffffff98
   1b398:	beq	1b3bc <pclose@plt+0x8110>
   1b39c:	add	r1, sp, #144	; 0x90
   1b3a0:	add	r0, r4, #4
   1b3a4:	bl	12a24 <strcmp@plt>
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	1b268 <pclose@plt+0x7fbc>
   1b3b0:	ldr	r4, [r4]
   1b3b4:	cmp	r4, #0
   1b3b8:	bne	1b39c <pclose@plt+0x80f0>
   1b3bc:	add	r0, r9, #8
   1b3c0:	bl	129d0 <gcry_malloc@plt>
   1b3c4:	subs	r8, r0, #0
   1b3c8:	beq	1b124 <pclose@plt+0x7e78>
   1b3cc:	add	r0, r8, #4
   1b3d0:	add	r1, sp, #144	; 0x90
   1b3d4:	bl	12cdc <strcpy@plt>
   1b3d8:	ldr	r2, [sp, #4]
   1b3dc:	ldr	r3, [r2, #52]	; 0x34
   1b3e0:	str	r8, [r2, #52]	; 0x34
   1b3e4:	str	r3, [r8]
   1b3e8:	ldr	r8, [r7]
   1b3ec:	b	1b268 <pclose@plt+0x7fbc>
   1b3f0:	cmp	r3, #0
   1b3f4:	movne	r9, #0
   1b3f8:	bne	1b37c <pclose@plt+0x80d0>
   1b3fc:	mov	r2, r3
   1b400:	mov	r3, #1
   1b404:	ldr	r4, [sp, #24]
   1b408:	mov	r8, r3
   1b40c:	mov	r0, r6
   1b410:	b	1b294 <pclose@plt+0x7fe8>
   1b414:	mov	r3, #1
   1b418:	mov	r6, r5
   1b41c:	mov	r8, r5
   1b420:	str	r3, [sp, #20]
   1b424:	mov	r4, #3
   1b428:	b	1abc8 <pclose@plt+0x791c>
   1b42c:	tst	r2, #8
   1b430:	beq	1b0d0 <pclose@plt+0x7e24>
   1b434:	ldr	r3, [sp, #4]
   1b438:	str	r1, [r3, #20]
   1b43c:	b	1af58 <pclose@plt+0x7cac>
   1b440:	ldr	r0, [sp, #12]
   1b444:	bl	12b50 <gcry_free@plt>
   1b448:	ldr	r3, [sp, #4]
   1b44c:	ldr	r4, [r3, #16]
   1b450:	b	1af58 <pclose@plt+0x7cac>
   1b454:	ldr	r5, [sp, #12]
   1b458:	add	r4, r5, #1
   1b45c:	ldrb	r3, [r5, #1]
   1b460:	cmp	r3, #0
   1b464:	beq	1b164 <pclose@plt+0x7eb8>
   1b468:	mov	r0, r4
   1b46c:	bl	12e8c <strlen@plt>
   1b470:	ldrb	r3, [r5, r0]
   1b474:	cmp	r3, #34	; 0x22
   1b478:	moveq	r3, #0
   1b47c:	ldreq	r2, [sp, #12]
   1b480:	strbeq	r3, [r2, r0]
   1b484:	b	1b164 <pclose@plt+0x7eb8>
   1b488:	mov	r6, r0
   1b48c:	mov	r2, #0
   1b490:	lsl	r3, r6, #1
   1b494:	str	r2, [sp, #24]
   1b498:	mov	r0, r6
   1b49c:	b	1b318 <pclose@plt+0x806c>
   1b4a0:	ldr	r3, [sp, #4]
   1b4a4:	ldr	r4, [r3, #52]	; 0x34
   1b4a8:	cmp	r4, #0
   1b4ac:	beq	1b4d0 <pclose@plt+0x8224>
   1b4b0:	mov	r1, r8
   1b4b4:	add	r0, r4, #4
   1b4b8:	bl	12a24 <strcmp@plt>
   1b4bc:	cmp	r0, #0
   1b4c0:	beq	1adec <pclose@plt+0x7b40>
   1b4c4:	ldr	r4, [r4]
   1b4c8:	cmp	r4, #0
   1b4cc:	bne	1b4b0 <pclose@plt+0x8204>
   1b4d0:	ldr	r2, [sp, #4]
   1b4d4:	tst	r6, #128	; 0x80
   1b4d8:	mvnne	r3, #6
   1b4dc:	mvneq	r3, #1
   1b4e0:	mov	r6, r5
   1b4e4:	str	r3, [r2, #16]
   1b4e8:	mov	r8, r5
   1b4ec:	mvn	r4, #0
   1b4f0:	b	1abc8 <pclose@plt+0x791c>
   1b4f4:	ldr	r0, [sp, #12]
   1b4f8:	bl	12b50 <gcry_free@plt>
   1b4fc:	b	1b124 <pclose@plt+0x7e78>
   1b500:	ldr	r3, [sp, #24]
   1b504:	cmp	r3, #0
   1b508:	bne	1b54c <pclose@plt+0x82a0>
   1b50c:	ldr	r0, [sp]
   1b510:	bl	13234 <getc@plt>
   1b514:	mov	r3, #1
   1b518:	str	r3, [sp, #24]
   1b51c:	mov	r3, #20
   1b520:	cmn	r0, #1
   1b524:	cmpne	r0, #10
   1b528:	bne	1b488 <pclose@plt+0x81dc>
   1b52c:	mov	r0, #10
   1b530:	b	1b318 <pclose@plt+0x806c>
   1b534:	bl	12bb0 <__stack_chk_fail@plt>
   1b538:	mov	r2, r8
   1b53c:	add	r8, r8, #1
   1b540:	b	1b294 <pclose@plt+0x7fe8>
   1b544:	lsl	r3, r0, #1
   1b548:	b	1b2c8 <pclose@plt+0x801c>
   1b54c:	ldr	r3, [fp]
   1b550:	ldr	r4, [sp, #28]
   1b554:	add	r3, r3, #1
   1b558:	mov	r6, r5
   1b55c:	str	r3, [fp]
   1b560:	mov	r8, #0
   1b564:	b	1abc8 <pclose@plt+0x791c>
   1b568:	andeq	sp, r3, r0, asr #21
   1b56c:	strdeq	sl, [r2], -r0
   1b570:	andeq	sl, r2, r8, lsl #28
   1b574:	andeq	sl, r2, ip, lsl #28
   1b578:	push	{r4, r5, r6, lr}
   1b57c:	subs	r4, r0, #0
   1b580:	sub	sp, sp, #16
   1b584:	beq	1b5a0 <pclose@plt+0x82f4>
   1b588:	cmp	r4, #1
   1b58c:	beq	1b678 <pclose@plt+0x83cc>
   1b590:	cmp	r4, #2
   1b594:	beq	1b5fc <pclose@plt+0x8350>
   1b598:	add	sp, sp, #16
   1b59c:	pop	{r4, r5, r6, pc}
   1b5a0:	mov	r0, #11
   1b5a4:	bl	198cc <pclose@plt+0x6620>
   1b5a8:	mov	r5, r0
   1b5ac:	mov	r0, #13
   1b5b0:	bl	198cc <pclose@plt+0x6620>
   1b5b4:	mov	r6, r0
   1b5b8:	mov	r0, #14
   1b5bc:	bl	198cc <pclose@plt+0x6620>
   1b5c0:	ldr	ip, [pc, #240]	; 1b6b8 <pclose@plt+0x840c>
   1b5c4:	ldr	r2, [pc, #240]	; 1b6bc <pclose@plt+0x8410>
   1b5c8:	mov	r3, r6
   1b5cc:	str	r2, [sp]
   1b5d0:	mov	r1, r5
   1b5d4:	str	r4, [sp, #12]
   1b5d8:	str	ip, [sp, #8]
   1b5dc:	ldr	r2, [pc, #220]	; 1b6c0 <pclose@plt+0x8414>
   1b5e0:	str	r0, [sp, #4]
   1b5e4:	mov	r0, #1
   1b5e8:	bl	19798 <pclose@plt+0x64ec>
   1b5ec:	mov	r0, #1
   1b5f0:	add	sp, sp, #16
   1b5f4:	pop	{r4, r5, r6, lr}
   1b5f8:	b	19878 <pclose@plt+0x65cc>
   1b5fc:	mov	r0, #42	; 0x2a
   1b600:	bl	198cc <pclose@plt+0x6620>
   1b604:	cmp	r0, #0
   1b608:	beq	1b618 <pclose@plt+0x836c>
   1b60c:	ldrb	r3, [r0]
   1b610:	cmp	r3, #49	; 0x31
   1b614:	beq	1b63c <pclose@plt+0x8390>
   1b618:	mov	r0, #41	; 0x29
   1b61c:	bl	198cc <pclose@plt+0x6620>
   1b620:	mov	r3, #0
   1b624:	ldr	r2, [pc, #140]	; 1b6b8 <pclose@plt+0x840c>
   1b628:	mov	r1, r0
   1b62c:	mov	r0, r3
   1b630:	bl	19798 <pclose@plt+0x64ec>
   1b634:	mov	r0, #0
   1b638:	bl	12e44 <exit@plt>
   1b63c:	mov	r0, #40	; 0x28
   1b640:	bl	198cc <pclose@plt+0x6620>
   1b644:	mov	r2, #0
   1b648:	mov	r4, r0
   1b64c:	mov	r1, r0
   1b650:	mov	r0, #1
   1b654:	bl	19798 <pclose@plt+0x64ec>
   1b658:	ldrb	r3, [r4]
   1b65c:	cmp	r3, #0
   1b660:	beq	1b618 <pclose@plt+0x836c>
   1b664:	mov	r2, #0
   1b668:	ldr	r1, [pc, #72]	; 1b6b8 <pclose@plt+0x840c>
   1b66c:	mov	r0, #1
   1b670:	bl	19798 <pclose@plt+0x64ec>
   1b674:	b	1b618 <pclose@plt+0x836c>
   1b678:	mov	r0, #40	; 0x28
   1b67c:	bl	198cc <pclose@plt+0x6620>
   1b680:	mov	r2, #0
   1b684:	mov	r5, r0
   1b688:	mov	r1, r0
   1b68c:	mov	r0, r4
   1b690:	bl	19798 <pclose@plt+0x64ec>
   1b694:	ldrb	r3, [r5]
   1b698:	cmp	r3, #0
   1b69c:	beq	1b6b0 <pclose@plt+0x8404>
   1b6a0:	mov	r0, r4
   1b6a4:	mov	r2, #0
   1b6a8:	ldr	r1, [pc, #8]	; 1b6b8 <pclose@plt+0x840c>
   1b6ac:	bl	19798 <pclose@plt+0x64ec>
   1b6b0:	mov	r0, #2
   1b6b4:	bl	12e44 <exit@plt>
   1b6b8:	strdeq	ip, [r2], -r0
   1b6bc:	andeq	sl, r2, r4, lsl lr
   1b6c0:	andeq	sl, r2, r4, lsr #29
   1b6c4:	ldr	r3, [pc, #4]	; 1b6d0 <pclose@plt+0x8424>
   1b6c8:	str	r0, [r3, #4]
   1b6cc:	bx	lr
   1b6d0:	ldrdeq	lr, [r3], -r0
   1b6d4:	push	{r4, lr}
   1b6d8:	mov	r4, r0
   1b6dc:	ldr	r0, [r0]
   1b6e0:	cmp	r0, #2
   1b6e4:	cmnne	r0, #1
   1b6e8:	bne	1b708 <pclose@plt+0x845c>
   1b6ec:	mov	r0, r4
   1b6f0:	bl	12b50 <gcry_free@plt>
   1b6f4:	ldr	r3, [pc, #20]	; 1b710 <pclose@plt+0x8464>
   1b6f8:	mvn	r2, #0
   1b6fc:	mov	r0, #0
   1b700:	str	r2, [r3]
   1b704:	pop	{r4, pc}
   1b708:	bl	1324c <close@plt>
   1b70c:	b	1b6ec <pclose@plt+0x8440>
   1b710:	andeq	lr, r3, r0, lsl #3
   1b714:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b718:	mov	r6, r0
   1b71c:	ldr	r7, [pc, #504]	; 1b91c <pclose@plt+0x8670>
   1b720:	sub	sp, sp, #28
   1b724:	mov	r4, r1
   1b728:	ldr	r3, [r7]
   1b72c:	cmp	r3, #0
   1b730:	beq	1b758 <pclose@plt+0x84ac>
   1b734:	mov	r0, #2
   1b738:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1b73c:	ldr	r3, [r7]
   1b740:	cmp	r3, r0
   1b744:	beq	1b750 <pclose@plt+0x84a4>
   1b748:	mov	r0, r3
   1b74c:	bl	12d0c <gpgrt_fclose@plt>
   1b750:	mov	r3, #0
   1b754:	str	r3, [r7]
   1b758:	cmp	r6, #0
   1b75c:	beq	1b8e4 <pclose@plt+0x8638>
   1b760:	ldr	r1, [pc, #440]	; 1b920 <pclose@plt+0x8674>
   1b764:	mov	r0, r6
   1b768:	bl	12a24 <strcmp@plt>
   1b76c:	cmp	r0, #0
   1b770:	beq	1b8d4 <pclose@plt+0x8628>
   1b774:	mov	r2, #6
   1b778:	ldr	r1, [pc, #420]	; 1b924 <pclose@plt+0x8678>
   1b77c:	mov	r0, r6
   1b780:	bl	1321c <strncmp@plt>
   1b784:	mov	r4, r0
   1b788:	mov	r0, r6
   1b78c:	bl	12e8c <strlen@plt>
   1b790:	cmp	r4, #0
   1b794:	add	r4, r0, #20
   1b798:	bne	1b84c <pclose@plt+0x85a0>
   1b79c:	ldrb	r3, [r6, #6]
   1b7a0:	cmp	r3, #0
   1b7a4:	beq	1b84c <pclose@plt+0x85a0>
   1b7a8:	mov	r8, #1
   1b7ac:	mov	r0, r4
   1b7b0:	bl	129a0 <gcry_xmalloc@plt>
   1b7b4:	mov	r1, r6
   1b7b8:	mvn	r4, #0
   1b7bc:	mov	r5, r0
   1b7c0:	add	r0, r0, #16
   1b7c4:	bl	12cdc <strcpy@plt>
   1b7c8:	mov	r3, #0
   1b7cc:	str	r3, [r5, #12]
   1b7d0:	stmib	r5, {r3, r8}
   1b7d4:	str	r4, [r5]
   1b7d8:	ldr	r1, [pc, #328]	; 1b928 <pclose@plt+0x867c>
   1b7dc:	mov	r2, #0
   1b7e0:	str	r1, [sp, #20]
   1b7e4:	add	r1, sp, #24
   1b7e8:	str	r2, [sp, #16]
   1b7ec:	ldmdb	r1, {r0, r1}
   1b7f0:	ldr	ip, [pc, #308]	; 1b92c <pclose@plt+0x8680>
   1b7f4:	str	r2, [sp, #8]
   1b7f8:	add	r3, sp, #8
   1b7fc:	ldr	r2, [pc, #300]	; 1b930 <pclose@plt+0x8684>
   1b800:	stm	sp, {r0, r1}
   1b804:	str	r2, [sp, #12]
   1b808:	mov	r0, r5
   1b80c:	ldm	r3, {r2, r3}
   1b810:	ldr	r1, [pc, #284]	; 1b934 <pclose@plt+0x8688>
   1b814:	str	r4, [ip]
   1b818:	bl	1312c <gpgrt_fopencookie@plt>
   1b81c:	subs	r4, r0, #0
   1b820:	beq	1b90c <pclose@plt+0x8660>
   1b824:	mov	r3, #0
   1b828:	mov	r1, r3
   1b82c:	mov	r2, #1
   1b830:	mov	r0, r4
   1b834:	bl	12d18 <gpgrt_setvbuf@plt>
   1b838:	mov	r3, #0
   1b83c:	stm	r7, {r4, r8}
   1b840:	str	r3, [r7, #8]
   1b844:	add	sp, sp, #28
   1b848:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b84c:	mov	r2, #9
   1b850:	ldr	r1, [pc, #224]	; 1b938 <pclose@plt+0x868c>
   1b854:	mov	r0, r6
   1b858:	bl	1321c <strncmp@plt>
   1b85c:	cmp	r0, #0
   1b860:	moveq	r8, #2
   1b864:	beq	1b7ac <pclose@plt+0x8500>
   1b868:	mov	r0, r4
   1b86c:	bl	129a0 <gcry_xmalloc@plt>
   1b870:	mov	r1, r6
   1b874:	ldr	r9, [pc, #192]	; 1b93c <pclose@plt+0x8690>
   1b878:	ldr	r8, [pc, #192]	; 1b940 <pclose@plt+0x8694>
   1b87c:	mov	r5, r0
   1b880:	add	r0, r0, #16
   1b884:	bl	12cdc <strcpy@plt>
   1b888:	mov	r3, #0
   1b88c:	str	r3, [r5, #4]
   1b890:	str	r3, [r5, #12]
   1b894:	str	r3, [r5, #8]
   1b898:	b	1b8ac <pclose@plt+0x8600>
   1b89c:	bl	12f10 <__errno_location@plt>
   1b8a0:	ldr	r3, [r0]
   1b8a4:	cmp	r3, #4
   1b8a8:	bne	1b8cc <pclose@plt+0x8620>
   1b8ac:	mov	r2, r9
   1b8b0:	mov	r1, r8
   1b8b4:	mov	r0, r6
   1b8b8:	bl	12d3c <open64@plt>
   1b8bc:	cmn	r0, #1
   1b8c0:	mov	r4, r0
   1b8c4:	str	r0, [r5]
   1b8c8:	beq	1b89c <pclose@plt+0x85f0>
   1b8cc:	mov	r8, #0
   1b8d0:	b	1b7d8 <pclose@plt+0x852c>
   1b8d4:	mov	r0, #2
   1b8d8:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1b8dc:	bl	13240 <gpgrt_fileno@plt>
   1b8e0:	mov	r4, r0
   1b8e4:	mov	r0, #20
   1b8e8:	bl	129a0 <gcry_xmalloc@plt>
   1b8ec:	mov	r8, #0
   1b8f0:	mov	r5, r0
   1b8f4:	str	r4, [r0]
   1b8f8:	strb	r8, [r0, #16]
   1b8fc:	str	r8, [r0, #4]
   1b900:	str	r8, [r0, #12]
   1b904:	str	r8, [r0, #8]
   1b908:	b	1b7d8 <pclose@plt+0x852c>
   1b90c:	mov	r0, #2
   1b910:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1b914:	mov	r4, r0
   1b918:	b	1b824 <pclose@plt+0x8578>
   1b91c:	ldrdeq	lr, [r3], -r8
   1b920:	andeq	sl, r2, r4, lsl r5
   1b924:	andeq	sl, r2, r0, lsr lr
   1b928:	ldrdeq	fp, [r1], -r4
   1b92c:	andeq	lr, r3, r0, lsl #3
   1b930:	andeq	ip, r1, r0, asr #32
   1b934:	andeq	sl, r2, r8, lsr lr
   1b938:	andeq	sl, r2, ip, lsr lr
   1b93c:			; <UNDEFINED> instruction: 0x000001b6
   1b940:	andeq	r0, r0, r1, asr #8
   1b944:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b948:	sub	sp, sp, #28
   1b94c:	ldr	r6, [pc, #688]	; 1bc04 <pclose@plt+0x8958>
   1b950:	cmp	r0, #1
   1b954:	ldr	r3, [r6]
   1b958:	str	r3, [sp, #20]
   1b95c:	beq	1ba34 <pclose@plt+0x8788>
   1b960:	ldr	r4, [pc, #672]	; 1bc08 <pclose@plt+0x895c>
   1b964:	mov	r5, r0
   1b968:	mov	r7, r1
   1b96c:	ldr	r3, [r4, #12]
   1b970:	ldr	r0, [r4, #4]
   1b974:	cmp	r3, #0
   1b978:	bne	1ba4c <pclose@plt+0x87a0>
   1b97c:	ldr	r3, [r4, #16]
   1b980:	orrs	r0, r0, r3
   1b984:	bne	1bbe4 <pclose@plt+0x8938>
   1b988:	ldr	r3, [r4, #100]	; 0x64
   1b98c:	orrs	r3, r0, r3
   1b990:	bne	1ba74 <pclose@plt+0x87c8>
   1b994:	ldr	r3, [r4, #12]
   1b998:	cmp	r3, #0
   1b99c:	beq	1bacc <pclose@plt+0x8820>
   1b9a0:	cmp	r7, #0
   1b9a4:	bne	1b9fc <pclose@plt+0x8750>
   1b9a8:	ldr	r2, [r4, #16]
   1b9ac:	ldr	r3, [r4, #12]
   1b9b0:	ldr	r1, [r4, #100]	; 0x64
   1b9b4:	orr	r3, r3, r2
   1b9b8:	ldr	r2, [r4, #4]
   1b9bc:	orr	r3, r3, r1
   1b9c0:	orrs	r3, r3, r2
   1b9c4:	beq	1b9fc <pclose@plt+0x8750>
   1b9c8:	ldr	r1, [r4]
   1b9cc:	ldrb	r3, [r1, #2]
   1b9d0:	tst	r3, #1
   1b9d4:	beq	1bb30 <pclose@plt+0x8884>
   1b9d8:	ldr	r3, [r1, #16]
   1b9dc:	ldr	r2, [r1, #8]
   1b9e0:	cmp	r3, r2
   1b9e4:	bcs	1bb30 <pclose@plt+0x8884>
   1b9e8:	ldr	r2, [r1, #4]
   1b9ec:	add	r0, r3, #1
   1b9f0:	str	r0, [r1, #16]
   1b9f4:	mov	r1, #32
   1b9f8:	strb	r1, [r2, r3]
   1b9fc:	cmp	r5, #7
   1ba00:	ldrls	pc, [pc, r5, lsl #2]
   1ba04:	b	1bbf0 <pclose@plt+0x8944>
   1ba08:	andeq	fp, r1, r4, lsr sl
   1ba0c:	andeq	fp, r1, r4, lsr sl
   1ba10:	andeq	fp, r1, r4, lsr sl
   1ba14:	andeq	fp, r1, r4, lsr sl
   1ba18:	andeq	fp, r1, r4, lsr sl
   1ba1c:	andeq	fp, r1, r0, lsl fp
   1ba20:	andeq	fp, r1, r0, lsr #22
   1ba24:	andeq	fp, r1, r8, lsr #20
   1ba28:	ldr	r1, [r4]
   1ba2c:	ldr	r0, [pc, #472]	; 1bc0c <pclose@plt+0x8960>
   1ba30:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1ba34:	ldr	r2, [sp, #20]
   1ba38:	ldr	r3, [r6]
   1ba3c:	cmp	r2, r3
   1ba40:	bne	1bbec <pclose@plt+0x8940>
   1ba44:	add	sp, sp, #28
   1ba48:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ba4c:	cmp	r0, #0
   1ba50:	ldr	r8, [r4]
   1ba54:	beq	1bb80 <pclose@plt+0x88d4>
   1ba58:	mov	r1, r8
   1ba5c:	ldr	r0, [pc, #428]	; 1bc10 <pclose@plt+0x8964>
   1ba60:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1ba64:	ldr	r0, [r4, #4]
   1ba68:	ldr	r3, [r4, #100]	; 0x64
   1ba6c:	orrs	r3, r0, r3
   1ba70:	beq	1b994 <pclose@plt+0x86e8>
   1ba74:	ldr	r3, [r4, #104]	; 0x68
   1ba78:	cmp	r3, #0
   1ba7c:	beq	1bb64 <pclose@plt+0x88b8>
   1ba80:	add	r0, sp, #16
   1ba84:	blx	r3
   1ba88:	cmp	r0, #0
   1ba8c:	beq	1bb64 <pclose@plt+0x88b8>
   1ba90:	ldr	r1, [pc, #380]	; 1bc14 <pclose@plt+0x8968>
   1ba94:	cmp	r0, #1
   1ba98:	ldr	r8, [pc, #376]	; 1bc18 <pclose@plt+0x896c>
   1ba9c:	ldr	r9, [r4]
   1baa0:	movne	r8, r1
   1baa4:	bl	12e38 <getpid@plt>
   1baa8:	mov	r1, r8
   1baac:	ldr	r3, [sp, #16]
   1bab0:	mov	r2, r0
   1bab4:	mov	r0, r9
   1bab8:	bl	12e5c <gpgrt_fprintf_unlocked@plt>
   1babc:	ldr	r3, [r4, #12]
   1bac0:	cmp	r3, #0
   1bac4:	bne	1bb3c <pclose@plt+0x8890>
   1bac8:	ldr	r3, [r4, #100]	; 0x64
   1bacc:	ldr	r2, [r4, #16]
   1bad0:	orrs	r3, r3, r2
   1bad4:	beq	1bb3c <pclose@plt+0x8890>
   1bad8:	ldr	r1, [r4]
   1badc:	ldrb	r3, [r1, #2]
   1bae0:	tst	r3, #1
   1bae4:	beq	1bb58 <pclose@plt+0x88ac>
   1bae8:	ldr	r3, [r1, #16]
   1baec:	ldr	r2, [r1, #8]
   1baf0:	cmp	r3, r2
   1baf4:	bcs	1bb58 <pclose@plt+0x88ac>
   1baf8:	ldr	r2, [r1, #4]
   1bafc:	add	r0, r3, #1
   1bb00:	str	r0, [r1, #16]
   1bb04:	mov	r1, #58	; 0x3a
   1bb08:	strb	r1, [r2, r3]
   1bb0c:	b	1b9a0 <pclose@plt+0x86f4>
   1bb10:	ldr	r1, [r4]
   1bb14:	ldr	r0, [pc, #256]	; 1bc1c <pclose@plt+0x8970>
   1bb18:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bb1c:	b	1ba34 <pclose@plt+0x8788>
   1bb20:	ldr	r1, [r4]
   1bb24:	ldr	r0, [pc, #244]	; 1bc20 <pclose@plt+0x8974>
   1bb28:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bb2c:	b	1ba34 <pclose@plt+0x8788>
   1bb30:	mov	r0, #32
   1bb34:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bb38:	b	1b9fc <pclose@plt+0x8750>
   1bb3c:	ldr	r3, [r4, #4]
   1bb40:	cmp	r3, #0
   1bb44:	beq	1b9a0 <pclose@plt+0x86f4>
   1bb48:	ldr	r1, [r4]
   1bb4c:	ldrb	r3, [r1, #2]
   1bb50:	tst	r3, #1
   1bb54:	bne	1bae8 <pclose@plt+0x883c>
   1bb58:	mov	r0, #58	; 0x3a
   1bb5c:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bb60:	b	1b9a0 <pclose@plt+0x86f4>
   1bb64:	ldr	r8, [r4]
   1bb68:	bl	12e38 <getpid@plt>
   1bb6c:	ldr	r1, [pc, #176]	; 1bc24 <pclose@plt+0x8978>
   1bb70:	mov	r2, r0
   1bb74:	mov	r0, r8
   1bb78:	bl	12e5c <gpgrt_fprintf_unlocked@plt>
   1bb7c:	b	1babc <pclose@plt+0x8810>
   1bb80:	bl	12b44 <time@plt>
   1bb84:	str	r0, [sp, #16]
   1bb88:	add	r0, sp, #16
   1bb8c:	bl	12dcc <localtime@plt>
   1bb90:	mov	r1, r0
   1bb94:	mov	r0, r8
   1bb98:	ldr	ip, [r1]
   1bb9c:	ldr	r3, [r1, #16]
   1bba0:	ldr	r2, [r1, #20]
   1bba4:	str	ip, [sp, #12]
   1bba8:	ldr	ip, [r1, #4]
   1bbac:	add	r2, r2, #1888	; 0x760
   1bbb0:	str	ip, [sp, #8]
   1bbb4:	ldr	ip, [r1, #8]
   1bbb8:	add	r3, r3, #1
   1bbbc:	str	ip, [sp, #4]
   1bbc0:	ldr	r1, [r1, #12]
   1bbc4:	add	r2, r2, #12
   1bbc8:	str	r1, [sp]
   1bbcc:	ldr	r1, [pc, #84]	; 1bc28 <pclose@plt+0x897c>
   1bbd0:	bl	12e5c <gpgrt_fprintf_unlocked@plt>
   1bbd4:	ldr	r0, [r4, #4]
   1bbd8:	ldr	r3, [r4, #16]
   1bbdc:	orrs	r0, r0, r3
   1bbe0:	beq	1b988 <pclose@plt+0x86dc>
   1bbe4:	ldr	r8, [r4]
   1bbe8:	b	1ba58 <pclose@plt+0x87ac>
   1bbec:	bl	12bb0 <__stack_chk_fail@plt>
   1bbf0:	mov	r2, r5
   1bbf4:	ldr	r0, [r4]
   1bbf8:	ldr	r1, [pc, #44]	; 1bc2c <pclose@plt+0x8980>
   1bbfc:	bl	12e5c <gpgrt_fprintf_unlocked@plt>
   1bc00:	b	1ba34 <pclose@plt+0x8788>
   1bc04:	andeq	sp, r3, r0, asr #21
   1bc08:	ldrdeq	lr, [r3], -r8
   1bc0c:	andeq	sl, r2, r0, lsr #29
   1bc10:	andeq	lr, r3, ip, ror #11
   1bc14:	andeq	sl, r2, r4, asr lr
   1bc18:	andeq	sl, r2, r8, asr #28
   1bc1c:	andeq	sl, r2, r8, lsl #29
   1bc20:	muleq	r2, r0, lr
   1bc24:	andeq	sl, r2, r0, lsl #29
   1bc28:	andeq	sl, r2, r0, ror #28
   1bc2c:	andeq	sl, r2, r8, lsr #29
   1bc30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc34:	sub	sp, sp, #20
   1bc38:	mov	r5, r3
   1bc3c:	ldr	r8, [sp, #56]	; 0x38
   1bc40:	ldr	r4, [pc, #868]	; 1bfac <pclose@plt+0x8d00>
   1bc44:	cmp	r8, #0
   1bc48:	mov	sl, r0
   1bc4c:	ldrbne	r3, [r8]
   1bc50:	ldr	r0, [r4]
   1bc54:	streq	r8, [sp, #12]
   1bc58:	subne	r3, r3, #8
   1bc5c:	clzne	r3, r3
   1bc60:	lsrne	r3, r3, #5
   1bc64:	strne	r3, [sp, #12]
   1bc68:	cmp	r0, #0
   1bc6c:	mov	r7, r1
   1bc70:	mov	r6, r2
   1bc74:	ldr	fp, [sp, #60]	; 0x3c
   1bc78:	beq	1bf0c <pclose@plt+0x8c60>
   1bc7c:	bl	12d00 <gpgrt_flockfile@plt>
   1bc80:	ldr	r3, [r4, #8]
   1bc84:	cmp	r3, #0
   1bc88:	cmpne	sl, #1
   1bc8c:	bne	1bf38 <pclose@plt+0x8c8c>
   1bc90:	ldr	r9, [sp, #12]
   1bc94:	mov	r3, #0
   1bc98:	mov	r1, r9
   1bc9c:	mov	r0, sl
   1bca0:	str	r3, [r4, #8]
   1bca4:	bl	1b944 <pclose@plt+0x8698>
   1bca8:	cmp	r9, #0
   1bcac:	addne	r8, r8, #1
   1bcb0:	cmp	r8, #0
   1bcb4:	beq	1be5c <pclose@plt+0x8bb0>
   1bcb8:	cmp	r5, #0
   1bcbc:	ldr	r9, [r4]
   1bcc0:	beq	1bcd4 <pclose@plt+0x8a28>
   1bcc4:	mov	r1, r9
   1bcc8:	mov	r0, r5
   1bccc:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bcd0:	ldr	r9, [r4]
   1bcd4:	cmp	r7, #0
   1bcd8:	beq	1bef8 <pclose@plt+0x8c4c>
   1bcdc:	ldr	fp, [pc, #716]	; 1bfb0 <pclose@plt+0x8d04>
   1bce0:	mov	r5, r8
   1bce4:	b	1bd34 <pclose@plt+0x8a88>
   1bce8:	cmp	r8, r5
   1bcec:	moveq	r2, #0
   1bcf0:	beq	1bd10 <pclose@plt+0x8a64>
   1bcf4:	ldr	r2, [r4, #16]
   1bcf8:	ldr	r0, [r4, #4]
   1bcfc:	orrs	r2, r2, r0
   1bd00:	beq	1bd10 <pclose@plt+0x8a64>
   1bd04:	ldr	r0, [pc, #680]	; 1bfb4 <pclose@plt+0x8d08>
   1bd08:	bl	12e8c <strlen@plt>
   1bd0c:	add	r2, r0, #2
   1bd10:	sub	r3, r7, r5
   1bd14:	add	r3, r3, #1
   1bd18:	mov	r0, r9
   1bd1c:	stm	sp, {r3, r5}
   1bd20:	ldr	r1, [pc, #656]	; 1bfb8 <pclose@plt+0x8d0c>
   1bd24:	mov	r3, fp
   1bd28:	bl	12e5c <gpgrt_fprintf_unlocked@plt>
   1bd2c:	ldr	r9, [r4]
   1bd30:	add	r5, r7, #1
   1bd34:	mov	r1, #10
   1bd38:	mov	r0, r5
   1bd3c:	bl	12eb0 <strchr@plt>
   1bd40:	subs	r7, r0, #0
   1bd44:	bne	1bce8 <pclose@plt+0x8a3c>
   1bd48:	mov	r1, r9
   1bd4c:	mov	r0, r5
   1bd50:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bd54:	ldrb	r3, [r8]
   1bd58:	cmp	r3, #0
   1bd5c:	beq	1be5c <pclose@plt+0x8bb0>
   1bd60:	mov	r0, r8
   1bd64:	bl	12e8c <strlen@plt>
   1bd68:	add	r0, r8, r0
   1bd6c:	ldrb	r3, [r0, #-1]
   1bd70:	cmp	r3, #10
   1bd74:	beq	1be5c <pclose@plt+0x8bb0>
   1bd78:	mov	r3, #1
   1bd7c:	cmp	r6, #0
   1bd80:	str	r3, [r4, #8]
   1bd84:	beq	1bf78 <pclose@plt+0x8ccc>
   1bd88:	ldr	r1, [r4]
   1bd8c:	mov	r0, #10
   1bd90:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bd94:	mov	r3, #0
   1bd98:	str	r3, [r4, #8]
   1bd9c:	ldr	r1, [sp, #12]
   1bda0:	mov	r0, sl
   1bda4:	bl	1b944 <pclose@plt+0x8698>
   1bda8:	ldr	r1, [r4]
   1bdac:	ldr	r0, [pc, #520]	; 1bfbc <pclose@plt+0x8d10>
   1bdb0:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bdb4:	ldr	r9, [pc, #516]	; 1bfc0 <pclose@plt+0x8d14>
   1bdb8:	ldr	r1, [r4]
   1bdbc:	ldr	fp, [pc, #504]	; 1bfbc <pclose@plt+0x8d10>
   1bdc0:	ldr	r8, [pc, #508]	; 1bfc4 <pclose@plt+0x8d18>
   1bdc4:	ldr	r7, [pc, #508]	; 1bfc8 <pclose@plt+0x8d1c>
   1bdc8:	mov	r5, #1
   1bdcc:	str	r5, [r4, #8]
   1bdd0:	ldrb	r0, [r6], #1
   1bdd4:	cmp	r0, #0
   1bdd8:	beq	1be30 <pclose@plt+0x8b84>
   1bddc:	cmp	r0, #92	; 0x5c
   1bde0:	str	r5, [r4, #8]
   1bde4:	beq	1be80 <pclose@plt+0x8bd4>
   1bde8:	cmp	r0, #13
   1bdec:	beq	1be90 <pclose@plt+0x8be4>
   1bdf0:	cmp	r0, #10
   1bdf4:	beq	1bea0 <pclose@plt+0x8bf4>
   1bdf8:	ldrb	r3, [r1, #2]
   1bdfc:	tst	r3, #1
   1be00:	beq	1be74 <pclose@plt+0x8bc8>
   1be04:	ldr	r3, [r1, #16]
   1be08:	ldr	r2, [r1, #8]
   1be0c:	cmp	r3, r2
   1be10:	bcs	1be74 <pclose@plt+0x8bc8>
   1be14:	ldr	r2, [r1, #4]
   1be18:	add	ip, r3, #1
   1be1c:	str	ip, [r1, #16]
   1be20:	strb	r0, [r2, r3]
   1be24:	ldrb	r0, [r6], #1
   1be28:	cmp	r0, #0
   1be2c:	bne	1bddc <pclose@plt+0x8b30>
   1be30:	ldr	r2, [r4, #8]
   1be34:	cmp	r2, #0
   1be38:	bne	1bedc <pclose@plt+0x8c30>
   1be3c:	cmp	sl, #5
   1be40:	beq	1bf68 <pclose@plt+0x8cbc>
   1be44:	cmp	sl, #6
   1be48:	beq	1bf88 <pclose@plt+0x8cdc>
   1be4c:	mov	r0, r1
   1be50:	add	sp, sp, #20
   1be54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be58:	b	129c4 <gpgrt_funlockfile@plt>
   1be5c:	cmp	r6, #0
   1be60:	beq	1bf48 <pclose@plt+0x8c9c>
   1be64:	ldr	r3, [r4, #8]
   1be68:	cmp	r3, #0
   1be6c:	beq	1bd9c <pclose@plt+0x8af0>
   1be70:	b	1bd88 <pclose@plt+0x8adc>
   1be74:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1be78:	ldr	r1, [r4]
   1be7c:	b	1bdd0 <pclose@plt+0x8b24>
   1be80:	mov	r0, r7
   1be84:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1be88:	ldr	r1, [r4]
   1be8c:	b	1bdd0 <pclose@plt+0x8b24>
   1be90:	mov	r0, r8
   1be94:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1be98:	ldr	r1, [r4]
   1be9c:	b	1bdd0 <pclose@plt+0x8b24>
   1bea0:	mov	r0, r9
   1bea4:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bea8:	ldrb	r3, [r6]
   1beac:	cmp	r3, #0
   1beb0:	streq	r3, [r4, #8]
   1beb4:	ldreq	r1, [r4]
   1beb8:	beq	1bdd0 <pclose@plt+0x8b24>
   1bebc:	ldr	r1, [sp, #12]
   1bec0:	mov	r0, sl
   1bec4:	bl	1b944 <pclose@plt+0x8698>
   1bec8:	ldr	r1, [r4]
   1becc:	mov	r0, fp
   1bed0:	bl	12c64 <gpgrt_fputs_unlocked@plt>
   1bed4:	ldr	r1, [r4]
   1bed8:	b	1bdd0 <pclose@plt+0x8b24>
   1bedc:	str	r0, [sp, #12]
   1bee0:	mov	r0, #10
   1bee4:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bee8:	ldr	r3, [sp, #12]
   1beec:	ldr	r1, [r4]
   1bef0:	str	r3, [r4, #8]
   1bef4:	b	1be3c <pclose@plt+0x8b90>
   1bef8:	mov	r2, fp
   1befc:	mov	r0, r9
   1bf00:	mov	r1, r8
   1bf04:	bl	12a30 <gpgrt_vfprintf_unlocked@plt>
   1bf08:	b	1bd54 <pclose@plt+0x8aa8>
   1bf0c:	ldr	r0, [pc, #184]	; 1bfcc <pclose@plt+0x8d20>
   1bf10:	mvn	r1, #0
   1bf14:	bl	1b714 <pclose@plt+0x8468>
   1bf18:	ldr	r0, [r4]
   1bf1c:	cmp	r0, #0
   1bf20:	bne	1bc7c <pclose@plt+0x89d0>
   1bf24:	ldr	r3, [pc, #164]	; 1bfd0 <pclose@plt+0x8d24>
   1bf28:	ldr	r2, [pc, #164]	; 1bfd4 <pclose@plt+0x8d28>
   1bf2c:	ldr	r1, [pc, #164]	; 1bfd8 <pclose@plt+0x8d2c>
   1bf30:	ldr	r0, [pc, #164]	; 1bfdc <pclose@plt+0x8d30>
   1bf34:	bl	13294 <__assert_fail@plt>
   1bf38:	ldr	r1, [r4]
   1bf3c:	mov	r0, #10
   1bf40:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bf44:	b	1bc90 <pclose@plt+0x89e4>
   1bf48:	cmp	sl, #5
   1bf4c:	ldr	r1, [r4]
   1bf50:	bne	1be44 <pclose@plt+0x8b98>
   1bf54:	ldr	r3, [r4, #8]
   1bf58:	cmp	r3, #0
   1bf5c:	beq	1bf68 <pclose@plt+0x8cbc>
   1bf60:	mov	r0, #10
   1bf64:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bf68:	ldr	r0, [r4]
   1bf6c:	bl	129c4 <gpgrt_funlockfile@plt>
   1bf70:	mov	r0, #2
   1bf74:	bl	12e44 <exit@plt>
   1bf78:	cmp	sl, #5
   1bf7c:	ldr	r1, [r4]
   1bf80:	bne	1be44 <pclose@plt+0x8b98>
   1bf84:	b	1bf60 <pclose@plt+0x8cb4>
   1bf88:	ldr	r3, [r4, #8]
   1bf8c:	cmp	r3, #0
   1bf90:	bne	1bfa0 <pclose@plt+0x8cf4>
   1bf94:	ldr	r0, [r4]
   1bf98:	bl	129c4 <gpgrt_funlockfile@plt>
   1bf9c:	bl	13228 <abort@plt>
   1bfa0:	mov	r0, #10
   1bfa4:	bl	12ad8 <_gpgrt_putc_overflow@plt>
   1bfa8:	b	1bf94 <pclose@plt+0x8ce8>
   1bfac:	ldrdeq	lr, [r3], -r8
   1bfb0:	muleq	r2, r8, r7
   1bfb4:	andeq	lr, r3, ip, ror #11
   1bfb8:	andeq	sl, r2, r8, ror #29
   1bfbc:	strdeq	sl, [r2], -r0
   1bfc0:	strdeq	sl, [r2], -ip
   1bfc4:	strdeq	sl, [r2], -r8
   1bfc8:	strdeq	sl, [r2], -r4
   1bfcc:	andeq	sl, r2, r4, lsl r5
   1bfd0:	andeq	sl, r2, r8, lsl lr
   1bfd4:	strdeq	r0, [r0], -r1
   1bfd8:	andeq	sl, r2, r4, asr #29
   1bfdc:	ldrdeq	sl, [r2], -ip
   1bfe0:	push	{r1, r2, r3}
   1bfe4:	mov	r3, #0
   1bfe8:	push	{r4, lr}
   1bfec:	sub	sp, sp, #20
   1bff0:	ldr	r4, [pc, #68]	; 1c03c <pclose@plt+0x8d90>
   1bff4:	ldr	r2, [sp, #28]
   1bff8:	add	ip, sp, #32
   1bffc:	ldr	r1, [r4]
   1c000:	stm	sp, {r2, ip}
   1c004:	str	r1, [sp, #12]
   1c008:	mov	r2, r3
   1c00c:	mov	r1, #1
   1c010:	str	ip, [sp, #8]
   1c014:	bl	1bc30 <pclose@plt+0x8984>
   1c018:	ldr	r2, [sp, #12]
   1c01c:	ldr	r3, [r4]
   1c020:	cmp	r2, r3
   1c024:	bne	1c038 <pclose@plt+0x8d8c>
   1c028:	add	sp, sp, #20
   1c02c:	pop	{r4, lr}
   1c030:	add	sp, sp, #12
   1c034:	bx	lr
   1c038:	bl	12bb0 <__stack_chk_fail@plt>
   1c03c:	andeq	sp, r3, r0, asr #21
   1c040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c044:	mov	r4, r0
   1c048:	ldr	r8, [pc, #1564]	; 1c66c <pclose@plt+0x93c0>
   1c04c:	ldr	r0, [r0, #8]
   1c050:	sub	sp, sp, #180	; 0xb4
   1c054:	ldr	r3, [r8]
   1c058:	cmp	r0, #0
   1c05c:	mov	r7, r1
   1c060:	mov	r9, r2
   1c064:	str	r3, [sp, #172]	; 0xac
   1c068:	ldr	r6, [r4]
   1c06c:	beq	1c228 <pclose@plt+0x8f7c>
   1c070:	cmn	r6, #1
   1c074:	beq	1c178 <pclose@plt+0x8ecc>
   1c078:	ldr	sl, [pc, #1520]	; 1c670 <pclose@plt+0x93c4>
   1c07c:	str	r6, [sl]
   1c080:	cmp	r9, #0
   1c084:	beq	1c15c <pclose@plt+0x8eb0>
   1c088:	mov	r5, r9
   1c08c:	b	1c09c <pclose@plt+0x8df0>
   1c090:	subs	r5, r5, r0
   1c094:	add	r7, r7, r0
   1c098:	beq	1c15c <pclose@plt+0x8eb0>
   1c09c:	mov	r2, r5
   1c0a0:	mov	r1, r7
   1c0a4:	mov	r0, r6
   1c0a8:	bl	12fc4 <write@plt>
   1c0ac:	cmp	r0, #0
   1c0b0:	bge	1c090 <pclose@plt+0x8de4>
   1c0b4:	bl	12f10 <__errno_location@plt>
   1c0b8:	ldr	r3, [r0]
   1c0bc:	cmp	r3, #4
   1c0c0:	beq	1c09c <pclose@plt+0x8df0>
   1c0c4:	ldr	r5, [pc, #1448]	; 1c674 <pclose@plt+0x93c8>
   1c0c8:	ldr	r3, [r5, #112]	; 0x70
   1c0cc:	cmp	r3, #0
   1c0d0:	bne	1c134 <pclose@plt+0x8e88>
   1c0d4:	ldr	r3, [r4]
   1c0d8:	cmn	r3, #1
   1c0dc:	beq	1c15c <pclose@plt+0x8eb0>
   1c0e0:	mov	r0, #2
   1c0e4:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c0e8:	bl	13240 <gpgrt_fileno@plt>
   1c0ec:	bl	131f8 <isatty@plt>
   1c0f0:	cmp	r0, #0
   1c0f4:	beq	1c134 <pclose@plt+0x8e88>
   1c0f8:	bl	12f10 <__errno_location@plt>
   1c0fc:	ldrb	r3, [r4, #16]
   1c100:	cmp	r3, #0
   1c104:	mov	r5, r0
   1c108:	mov	r0, #2
   1c10c:	beq	1c338 <pclose@plt+0x908c>
   1c110:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c114:	mov	r6, r0
   1c118:	ldr	r0, [r5]
   1c11c:	bl	12db4 <strerror@plt>
   1c120:	add	r2, r4, #16
   1c124:	ldr	r1, [pc, #1356]	; 1c678 <pclose@plt+0x93cc>
   1c128:	mov	r3, r0
   1c12c:	mov	r0, r6
   1c130:	bl	131a4 <gpgrt_fprintf@plt>
   1c134:	ldr	r3, [r4, #12]
   1c138:	cmp	r3, #0
   1c13c:	beq	1c15c <pclose@plt+0x8eb0>
   1c140:	ldr	r0, [r4]
   1c144:	cmn	r0, #1
   1c148:	beq	1c15c <pclose@plt+0x8eb0>
   1c14c:	bl	1324c <close@plt>
   1c150:	mvn	r3, #0
   1c154:	str	r3, [r4]
   1c158:	str	r3, [sl]
   1c15c:	ldr	r2, [sp, #172]	; 0xac
   1c160:	ldr	r3, [r8]
   1c164:	mov	r0, r9
   1c168:	cmp	r2, r3
   1c16c:	bne	1c64c <pclose@plt+0x93a0>
   1c170:	add	sp, sp, #180	; 0xb4
   1c174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c178:	mov	r3, #0
   1c17c:	add	r6, r4, #16
   1c180:	mov	r0, r6
   1c184:	str	r3, [r4, #12]
   1c188:	mov	r2, #6
   1c18c:	ldr	r1, [pc, #1256]	; 1c67c <pclose@plt+0x93d0>
   1c190:	bl	1321c <strncmp@plt>
   1c194:	cmp	r0, #0
   1c198:	bne	1c1a8 <pclose@plt+0x8efc>
   1c19c:	ldrb	r3, [r4, #22]
   1c1a0:	cmp	r3, #0
   1c1a4:	bne	1c23c <pclose@plt+0x8f90>
   1c1a8:	mov	r2, #9
   1c1ac:	ldr	r1, [pc, #1228]	; 1c680 <pclose@plt+0x93d4>
   1c1b0:	mov	r0, r6
   1c1b4:	bl	1321c <strncmp@plt>
   1c1b8:	mov	sl, #1
   1c1bc:	strh	sl, [sp, #60]	; 0x3c
   1c1c0:	cmp	r0, #0
   1c1c4:	addeq	r5, r4, #25
   1c1c8:	movne	r5, r6
   1c1cc:	ldrb	fp, [r5]
   1c1d0:	cmp	fp, #0
   1c1d4:	beq	1c454 <pclose@plt+0x91a8>
   1c1d8:	mov	r0, r5
   1c1dc:	bl	12e8c <strlen@plt>
   1c1e0:	cmp	r0, #106	; 0x6a
   1c1e4:	bls	1c3a4 <pclose@plt+0x90f8>
   1c1e8:	ldr	r5, [pc, #1156]	; 1c674 <pclose@plt+0x93c8>
   1c1ec:	mvn	r3, #0
   1c1f0:	str	r3, [r4]
   1c1f4:	ldr	r3, [r4, #4]
   1c1f8:	ldr	r2, [r5, #112]	; 0x70
   1c1fc:	cmp	r3, #0
   1c200:	bne	1c500 <pclose@plt+0x9254>
   1c204:	cmp	r2, #0
   1c208:	beq	1c510 <pclose@plt+0x9264>
   1c20c:	ldr	r6, [r4]
   1c210:	cmn	r6, #1
   1c214:	beq	1c554 <pclose@plt+0x92a8>
   1c218:	mov	r2, #0
   1c21c:	mov	r3, #1
   1c220:	str	r2, [r4, #4]
   1c224:	str	r3, [r4, #12]
   1c228:	ldr	sl, [pc, #1088]	; 1c670 <pclose@plt+0x93c4>
   1c22c:	cmn	r6, #1
   1c230:	str	r6, [sl]
   1c234:	beq	1c0c4 <pclose@plt+0x8e18>
   1c238:	b	1c080 <pclose@plt+0x8dd4>
   1c23c:	add	r5, r4, #22
   1c240:	mov	r0, r5
   1c244:	bl	12e8c <strlen@plt>
   1c248:	add	r0, r0, #1
   1c24c:	bl	129d0 <gcry_malloc@plt>
   1c250:	subs	sl, r0, #0
   1c254:	beq	1c4f4 <pclose@plt+0x9248>
   1c258:	ldrb	r3, [r4, #22]
   1c25c:	cmp	r3, #91	; 0x5b
   1c260:	beq	1c364 <pclose@plt+0x90b8>
   1c264:	mov	r1, r5
   1c268:	bl	12cdc <strcpy@plt>
   1c26c:	mov	r1, #58	; 0x3a
   1c270:	mov	r0, sl
   1c274:	bl	12eb0 <strchr@plt>
   1c278:	cmp	r0, #0
   1c27c:	beq	1c38c <pclose@plt+0x90e0>
   1c280:	ldrb	r3, [r0, #1]
   1c284:	add	ip, r0, #1
   1c288:	sub	r3, r3, #48	; 0x30
   1c28c:	uxtb	r2, r3
   1c290:	cmp	r2, #9
   1c294:	bhi	1c38c <pclose@plt+0x90e0>
   1c298:	ldr	r5, [pc, #996]	; 1c684 <pclose@plt+0x93d8>
   1c29c:	b	1c2b0 <pclose@plt+0x9004>
   1c2a0:	add	r3, r3, r3, lsl #2
   1c2a4:	add	r3, r2, r3, lsl #1
   1c2a8:	cmp	r3, r5
   1c2ac:	bhi	1c38c <pclose@plt+0x90e0>
   1c2b0:	ldrb	r1, [ip, #1]!
   1c2b4:	sub	r2, r1, #48	; 0x30
   1c2b8:	uxtb	lr, r2
   1c2bc:	cmp	lr, #9
   1c2c0:	bls	1c2a0 <pclose@plt+0x8ff4>
   1c2c4:	adds	r2, r1, #0
   1c2c8:	movne	r2, #1
   1c2cc:	cmp	r3, #0
   1c2d0:	moveq	r2, #1
   1c2d4:	cmp	r2, #0
   1c2d8:	bne	1c38c <pclose@plt+0x90e0>
   1c2dc:	rev16	r3, r3
   1c2e0:	mov	r1, #2
   1c2e4:	strh	r3, [sp, #18]
   1c2e8:	strb	r2, [r0]
   1c2ec:	str	r2, [sp, #20]
   1c2f0:	str	r2, [sp, #24]
   1c2f4:	str	r2, [sp, #28]
   1c2f8:	mov	r3, r1
   1c2fc:	add	r2, sp, #20
   1c300:	add	r5, sp, #16
   1c304:	mov	fp, #16
   1c308:	strh	r1, [sp, #16]
   1c30c:	mov	r0, r3
   1c310:	mov	r1, sl
   1c314:	str	r3, [sp, #12]
   1c318:	bl	12b14 <inet_pton@plt>
   1c31c:	ldr	r3, [sp, #12]
   1c320:	cmp	r0, #1
   1c324:	beq	1c650 <pclose@plt+0x93a4>
   1c328:	mov	r0, sl
   1c32c:	bl	12b50 <gcry_free@plt>
   1c330:	ldr	r5, [pc, #828]	; 1c674 <pclose@plt+0x93c8>
   1c334:	b	1c1ec <pclose@plt+0x8f40>
   1c338:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c33c:	ldr	r7, [r4]
   1c340:	mov	r6, r0
   1c344:	ldr	r0, [r5]
   1c348:	bl	12db4 <strerror@plt>
   1c34c:	mov	r2, r7
   1c350:	ldr	r1, [pc, #816]	; 1c688 <pclose@plt+0x93dc>
   1c354:	mov	r3, r0
   1c358:	mov	r0, r6
   1c35c:	bl	131a4 <gpgrt_fprintf@plt>
   1c360:	b	1c134 <pclose@plt+0x8e88>
   1c364:	add	r1, r4, #23
   1c368:	bl	12cdc <strcpy@plt>
   1c36c:	mov	r1, #93	; 0x5d
   1c370:	mov	r0, sl
   1c374:	bl	12eb0 <strchr@plt>
   1c378:	cmp	r0, #0
   1c37c:	beq	1c38c <pclose@plt+0x90e0>
   1c380:	ldrb	r3, [r0, #1]
   1c384:	cmp	r3, #58	; 0x3a
   1c388:	beq	1c560 <pclose@plt+0x92b4>
   1c38c:	mov	r0, #22
   1c390:	bl	13108 <gpg_err_set_errno@plt>
   1c394:	mov	r0, sl
   1c398:	bl	12b50 <gcry_free@plt>
   1c39c:	ldr	r5, [pc, #720]	; 1c674 <pclose@plt+0x93c8>
   1c3a0:	b	1c1ec <pclose@plt+0x8f40>
   1c3a4:	mov	r1, r5
   1c3a8:	mov	r2, #107	; 0x6b
   1c3ac:	add	r0, sp, #62	; 0x3e
   1c3b0:	bl	12f70 <strncpy@plt>
   1c3b4:	mov	r3, #0
   1c3b8:	add	r0, sp, #62	; 0x3e
   1c3bc:	strb	r3, [sp, #169]	; 0xa9
   1c3c0:	bl	12e8c <strlen@plt>
   1c3c4:	mov	r3, sl
   1c3c8:	ldr	sl, [pc, #700]	; 1c68c <pclose@plt+0x93e0>
   1c3cc:	add	r5, sp, #60	; 0x3c
   1c3d0:	add	fp, r0, #2
   1c3d4:	mov	r0, r3
   1c3d8:	mov	r2, #0
   1c3dc:	mov	r1, #1
   1c3e0:	bl	13198 <socket@plt>
   1c3e4:	cmn	r0, #1
   1c3e8:	str	r0, [r4]
   1c3ec:	ldreq	r5, [pc, #640]	; 1c674 <pclose@plt+0x93c8>
   1c3f0:	beq	1c1f4 <pclose@plt+0x8f48>
   1c3f4:	mov	r2, fp
   1c3f8:	mov	r1, r5
   1c3fc:	bl	13264 <connect@plt>
   1c400:	cmn	r0, #1
   1c404:	beq	1c4c8 <pclose@plt+0x921c>
   1c408:	ldr	r6, [r4]
   1c40c:	cmn	r6, #1
   1c410:	bne	1c218 <pclose@plt+0x8f6c>
   1c414:	ldr	r5, [pc, #600]	; 1c674 <pclose@plt+0x93c8>
   1c418:	ldr	r3, [r5, #112]	; 0x70
   1c41c:	cmp	r3, #0
   1c420:	bne	1c508 <pclose@plt+0x925c>
   1c424:	ldr	r3, [r4, #4]
   1c428:	cmp	r3, #0
   1c42c:	moveq	r3, #1
   1c430:	streq	r3, [r4, #4]
   1c434:	ldr	r3, [r5, #112]	; 0x70
   1c438:	ldr	sl, [pc, #560]	; 1c670 <pclose@plt+0x93c4>
   1c43c:	cmp	r3, #0
   1c440:	mvn	r3, #0
   1c444:	str	r3, [sl]
   1c448:	str	r3, [r4]
   1c44c:	bne	1c134 <pclose@plt+0x8e88>
   1c450:	b	1c15c <pclose@plt+0x8eb0>
   1c454:	ldr	r5, [pc, #536]	; 1c674 <pclose@plt+0x93c8>
   1c458:	ldr	r3, [r5, #108]	; 0x6c
   1c45c:	blx	r3
   1c460:	subs	r1, r0, #0
   1c464:	ldrb	r3, [r1]
   1c468:	beq	1c668 <pclose@plt+0x93bc>
   1c46c:	cmp	r3, #0
   1c470:	str	r1, [sp, #12]
   1c474:	beq	1c1ec <pclose@plt+0x8f40>
   1c478:	bl	12e8c <strlen@plt>
   1c47c:	ldr	r1, [sp, #12]
   1c480:	add	r0, r0, #7
   1c484:	cmp	r0, #106	; 0x6a
   1c488:	bhi	1c1ec <pclose@plt+0x8f40>
   1c48c:	mov	r2, #107	; 0x6b
   1c490:	add	r0, sp, #62	; 0x3e
   1c494:	bl	12f70 <strncpy@plt>
   1c498:	mov	r2, #108	; 0x6c
   1c49c:	ldr	r1, [pc, #492]	; 1c690 <pclose@plt+0x93e4>
   1c4a0:	add	r0, sp, #62	; 0x3e
   1c4a4:	bl	12f1c <__strcat_chk@plt>
   1c4a8:	add	r0, sp, #62	; 0x3e
   1c4ac:	strb	fp, [sp, #169]	; 0xa9
   1c4b0:	bl	12e8c <strlen@plt>
   1c4b4:	add	r5, sp, #60	; 0x3c
   1c4b8:	mov	r3, sl
   1c4bc:	add	sl, sp, #62	; 0x3e
   1c4c0:	add	fp, r0, #2
   1c4c4:	b	1c3d4 <pclose@plt+0x9128>
   1c4c8:	ldr	r5, [pc, #420]	; 1c674 <pclose@plt+0x93c8>
   1c4cc:	ldr	r2, [r4, #4]
   1c4d0:	ldr	r3, [r5, #112]	; 0x70
   1c4d4:	orrs	r3, r2, r3
   1c4d8:	beq	1c600 <pclose@plt+0x9354>
   1c4dc:	ldr	r0, [r4]
   1c4e0:	bl	1324c <close@plt>
   1c4e4:	mvn	r3, #0
   1c4e8:	str	r3, [r4]
   1c4ec:	ldr	r3, [r5, #112]	; 0x70
   1c4f0:	b	1c41c <pclose@plt+0x9170>
   1c4f4:	bl	12b50 <gcry_free@plt>
   1c4f8:	ldr	r5, [pc, #372]	; 1c674 <pclose@plt+0x93c8>
   1c4fc:	b	1c1ec <pclose@plt+0x8f40>
   1c500:	cmp	r2, #0
   1c504:	beq	1c434 <pclose@plt+0x9188>
   1c508:	ldr	r6, [r4]
   1c50c:	b	1c228 <pclose@plt+0x8f7c>
   1c510:	mov	r0, #2
   1c514:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c518:	bl	13240 <gpgrt_fileno@plt>
   1c51c:	bl	131f8 <isatty@plt>
   1c520:	cmp	r0, #0
   1c524:	beq	1c408 <pclose@plt+0x915c>
   1c528:	mov	r0, #2
   1c52c:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c530:	mov	r5, r0
   1c534:	bl	12f10 <__errno_location@plt>
   1c538:	ldr	r0, [r0]
   1c53c:	bl	12db4 <strerror@plt>
   1c540:	ldr	r1, [pc, #332]	; 1c694 <pclose@plt+0x93e8>
   1c544:	mov	r2, r0
   1c548:	mov	r0, r5
   1c54c:	bl	131a4 <gpgrt_fprintf@plt>
   1c550:	b	1c408 <pclose@plt+0x915c>
   1c554:	ldr	sl, [pc, #276]	; 1c670 <pclose@plt+0x93c4>
   1c558:	str	r6, [sl]
   1c55c:	b	1c0c8 <pclose@plt+0x8e1c>
   1c560:	ldrb	r3, [r0, #2]
   1c564:	add	lr, r0, #2
   1c568:	sub	r3, r3, #48	; 0x30
   1c56c:	uxtb	r2, r3
   1c570:	cmp	r2, #9
   1c574:	bhi	1c38c <pclose@plt+0x90e0>
   1c578:	ldr	r5, [pc, #260]	; 1c684 <pclose@plt+0x93d8>
   1c57c:	b	1c590 <pclose@plt+0x92e4>
   1c580:	add	r3, r3, r3, lsl #2
   1c584:	add	r3, r2, r3, lsl #1
   1c588:	cmp	r3, r5
   1c58c:	bhi	1c38c <pclose@plt+0x90e0>
   1c590:	ldrb	r1, [lr, #1]!
   1c594:	sub	r2, r1, #48	; 0x30
   1c598:	uxtb	ip, r2
   1c59c:	cmp	ip, #9
   1c5a0:	bls	1c580 <pclose@plt+0x92d4>
   1c5a4:	cmp	r1, #0
   1c5a8:	clz	r2, r3
   1c5ac:	lsr	r2, r2, #5
   1c5b0:	moveq	r1, r2
   1c5b4:	movne	r1, #1
   1c5b8:	cmp	r1, #0
   1c5bc:	bne	1c38c <pclose@plt+0x90e0>
   1c5c0:	mov	r2, #10
   1c5c4:	rev16	r3, r3
   1c5c8:	strh	r3, [sp, #34]	; 0x22
   1c5cc:	strh	r2, [sp, #32]
   1c5d0:	mov	r3, r2
   1c5d4:	strb	r1, [r0]
   1c5d8:	str	r1, [sp, #36]	; 0x24
   1c5dc:	str	r1, [sp, #40]	; 0x28
   1c5e0:	str	r1, [sp, #44]	; 0x2c
   1c5e4:	str	r1, [sp, #48]	; 0x30
   1c5e8:	str	r1, [sp, #52]	; 0x34
   1c5ec:	str	r1, [sp, #56]	; 0x38
   1c5f0:	add	r5, sp, #32
   1c5f4:	add	r2, sp, #40	; 0x28
   1c5f8:	mov	fp, #28
   1c5fc:	b	1c30c <pclose@plt+0x9060>
   1c600:	mov	r0, #2
   1c604:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c608:	bl	13240 <gpgrt_fileno@plt>
   1c60c:	bl	131f8 <isatty@plt>
   1c610:	cmp	r0, #0
   1c614:	beq	1c4dc <pclose@plt+0x9230>
   1c618:	mov	r0, #2
   1c61c:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1c620:	mov	fp, r0
   1c624:	bl	12f10 <__errno_location@plt>
   1c628:	ldr	r0, [r0]
   1c62c:	bl	12db4 <strerror@plt>
   1c630:	mov	r3, sl
   1c634:	mov	r2, r6
   1c638:	ldr	r1, [pc, #88]	; 1c698 <pclose@plt+0x93ec>
   1c63c:	str	r0, [sp]
   1c640:	mov	r0, fp
   1c644:	bl	131a4 <gpgrt_fprintf@plt>
   1c648:	b	1c4dc <pclose@plt+0x9230>
   1c64c:	bl	12bb0 <__stack_chk_fail@plt>
   1c650:	mov	r0, sl
   1c654:	str	r3, [sp, #12]
   1c658:	ldr	sl, [pc, #44]	; 1c68c <pclose@plt+0x93e0>
   1c65c:	bl	12b50 <gcry_free@plt>
   1c660:	ldr	r3, [sp, #12]
   1c664:	b	1c3d4 <pclose@plt+0x9128>
   1c668:	udf	#0
   1c66c:	andeq	sp, r3, r0, asr #21
   1c670:	andeq	lr, r3, r0, lsl #3
   1c674:	ldrdeq	lr, [r3], -r8
   1c678:	andeq	sl, r2, r4, asr pc
   1c67c:	andeq	sl, r2, r0, lsr lr
   1c680:	andeq	sl, r2, ip, lsr lr
   1c684:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1c688:	andeq	sl, r2, r0, ror pc
   1c68c:	muleq	r2, r8, r7
   1c690:	andeq	sl, r2, r0, lsl #30
   1c694:	andeq	sl, r2, r8, lsl #30
   1c698:	andeq	sl, r2, r4, lsr pc
   1c69c:	ldr	r3, [pc, #16]	; 1c6b4 <pclose@plt+0x9408>
   1c6a0:	cmp	r0, #0
   1c6a4:	movne	r2, #0
   1c6a8:	ldr	r0, [r3, #116]	; 0x74
   1c6ac:	strne	r2, [r3, #116]	; 0x74
   1c6b0:	bx	lr
   1c6b4:	ldrdeq	lr, [r3], -r8
   1c6b8:	ldr	r2, [pc, #12]	; 1c6cc <pclose@plt+0x9420>
   1c6bc:	ldr	r3, [r2, #116]	; 0x74
   1c6c0:	add	r3, r3, #1
   1c6c4:	str	r3, [r2, #116]	; 0x74
   1c6c8:	bx	lr
   1c6cc:	ldrdeq	lr, [r3], -r8
   1c6d0:	ldr	r3, [pc, #12]	; 1c6e4 <pclose@plt+0x9438>
   1c6d4:	cmp	r0, #0
   1c6d8:	mvn	r1, #0
   1c6dc:	moveq	r0, r3
   1c6e0:	b	1b714 <pclose@plt+0x8468>
   1c6e4:	andeq	sl, r2, r4, lsl r5
   1c6e8:	ldr	r3, [pc, #4]	; 1c6f4 <pclose@plt+0x9448>
   1c6ec:	str	r0, [r3, #108]	; 0x6c
   1c6f0:	bx	lr
   1c6f4:	ldrdeq	lr, [r3], -r8
   1c6f8:	ldr	r3, [pc, #4]	; 1c704 <pclose@plt+0x9458>
   1c6fc:	str	r0, [r3, #104]	; 0x68
   1c700:	bx	lr
   1c704:	ldrdeq	lr, [r3], -r8
   1c708:	cmp	r0, #0
   1c70c:	push	{r4, r5, r6, lr}
   1c710:	mov	r4, r1
   1c714:	ldr	r5, [pc, #60]	; 1c758 <pclose@plt+0x94ac>
   1c718:	beq	1c734 <pclose@plt+0x9488>
   1c71c:	mov	r1, r0
   1c720:	mov	r2, #79	; 0x4f
   1c724:	add	r0, r5, #20
   1c728:	bl	12f70 <strncpy@plt>
   1c72c:	mov	r3, #0
   1c730:	strb	r3, [r5, #99]	; 0x63
   1c734:	and	r1, r4, #1
   1c738:	and	r2, r4, #2
   1c73c:	and	r3, r4, #4
   1c740:	and	r4, r4, #256	; 0x100
   1c744:	str	r1, [r5, #16]
   1c748:	str	r2, [r5, #12]
   1c74c:	str	r3, [r5, #100]	; 0x64
   1c750:	str	r4, [r5, #112]	; 0x70
   1c754:	pop	{r4, r5, r6, pc}
   1c758:	ldrdeq	lr, [r3], -r8
   1c75c:	cmp	r0, #0
   1c760:	beq	1c7b0 <pclose@plt+0x9504>
   1c764:	ldr	r2, [pc, #76]	; 1c7b8 <pclose@plt+0x950c>
   1c768:	ldr	r3, [r2, #16]
   1c76c:	ldr	r1, [r2, #12]
   1c770:	adds	r3, r3, #0
   1c774:	movne	r3, #1
   1c778:	cmp	r1, #0
   1c77c:	str	r3, [r0]
   1c780:	orrne	r3, r3, #2
   1c784:	strne	r3, [r0]
   1c788:	ldr	r3, [r2, #100]	; 0x64
   1c78c:	cmp	r3, #0
   1c790:	ldrne	r3, [r0]
   1c794:	orrne	r3, r3, #4
   1c798:	strne	r3, [r0]
   1c79c:	ldr	r3, [r2, #112]	; 0x70
   1c7a0:	cmp	r3, #0
   1c7a4:	ldrne	r3, [r0]
   1c7a8:	orrne	r3, r3, #256	; 0x100
   1c7ac:	strne	r3, [r0]
   1c7b0:	ldr	r0, [pc, #4]	; 1c7bc <pclose@plt+0x9510>
   1c7b4:	bx	lr
   1c7b8:	ldrdeq	lr, [r3], -r8
   1c7bc:	andeq	lr, r3, ip, ror #11
   1c7c0:	ldr	r3, [pc, #88]	; 1c820 <pclose@plt+0x9574>
   1c7c4:	push	{r4, lr}
   1c7c8:	mov	r4, r0
   1c7cc:	ldr	r0, [r3]
   1c7d0:	cmp	r0, #0
   1c7d4:	beq	1c7f8 <pclose@plt+0x954c>
   1c7d8:	bl	13240 <gpgrt_fileno@plt>
   1c7dc:	cmn	r0, #1
   1c7e0:	sub	r3, r0, r4
   1c7e4:	clz	r3, r3
   1c7e8:	lsr	r3, r3, #5
   1c7ec:	moveq	r3, #0
   1c7f0:	cmp	r3, #0
   1c7f4:	bne	1c818 <pclose@plt+0x956c>
   1c7f8:	ldr	r3, [pc, #36]	; 1c824 <pclose@plt+0x9578>
   1c7fc:	ldr	r3, [r3]
   1c800:	cmn	r3, #1
   1c804:	sub	r0, r3, r4
   1c808:	clz	r0, r0
   1c80c:	lsr	r0, r0, #5
   1c810:	moveq	r0, #0
   1c814:	pop	{r4, pc}
   1c818:	mov	r0, #1
   1c81c:	pop	{r4, pc}
   1c820:	ldrdeq	lr, [r3], -r8
   1c824:	andeq	lr, r3, r0, lsl #3
   1c828:	ldr	r3, [pc, #20]	; 1c844 <pclose@plt+0x9598>
   1c82c:	ldr	r0, [r3]
   1c830:	cmp	r0, #0
   1c834:	beq	1c83c <pclose@plt+0x9590>
   1c838:	b	13240 <gpgrt_fileno@plt>
   1c83c:	mvn	r0, #0
   1c840:	bx	lr
   1c844:	ldrdeq	lr, [r3], -r8
   1c848:	push	{r4, lr}
   1c84c:	ldr	r4, [pc, #52]	; 1c888 <pclose@plt+0x95dc>
   1c850:	ldr	r0, [r4]
   1c854:	cmp	r0, #0
   1c858:	popne	{r4, pc}
   1c85c:	ldr	r0, [pc, #40]	; 1c88c <pclose@plt+0x95e0>
   1c860:	mvn	r1, #0
   1c864:	bl	1b714 <pclose@plt+0x8468>
   1c868:	ldr	r0, [r4]
   1c86c:	cmp	r0, #0
   1c870:	popne	{r4, pc}
   1c874:	ldr	r3, [pc, #20]	; 1c890 <pclose@plt+0x95e4>
   1c878:	mov	r2, #672	; 0x2a0
   1c87c:	ldr	r1, [pc, #16]	; 1c894 <pclose@plt+0x95e8>
   1c880:	ldr	r0, [pc, #16]	; 1c898 <pclose@plt+0x95ec>
   1c884:	bl	13294 <__assert_fail@plt>
   1c888:	ldrdeq	lr, [r3], -r8
   1c88c:	andeq	sl, r2, r4, lsl r5
   1c890:	andeq	sl, r2, r0, lsr #28
   1c894:	andeq	sl, r2, r4, asr #29
   1c898:	ldrdeq	sl, [r2], -ip
   1c89c:	push	{r1, r2, r3}
   1c8a0:	mov	r3, #0
   1c8a4:	push	{r4, lr}
   1c8a8:	sub	sp, sp, #20
   1c8ac:	ldr	r4, [pc, #68]	; 1c8f8 <pclose@plt+0x964c>
   1c8b0:	ldr	r2, [sp, #28]
   1c8b4:	add	ip, sp, #32
   1c8b8:	ldr	r1, [r4]
   1c8bc:	stm	sp, {r2, ip}
   1c8c0:	str	r1, [sp, #12]
   1c8c4:	mov	r2, r3
   1c8c8:	mov	r1, r3
   1c8cc:	str	ip, [sp, #8]
   1c8d0:	bl	1bc30 <pclose@plt+0x8984>
   1c8d4:	ldr	r2, [sp, #12]
   1c8d8:	ldr	r3, [r4]
   1c8dc:	cmp	r2, r3
   1c8e0:	bne	1c8f4 <pclose@plt+0x9648>
   1c8e4:	add	sp, sp, #20
   1c8e8:	pop	{r4, lr}
   1c8ec:	add	sp, sp, #12
   1c8f0:	bx	lr
   1c8f4:	bl	12bb0 <__stack_chk_fail@plt>
   1c8f8:	andeq	sp, r3, r0, asr #21
   1c8fc:	push	{lr}		; (str lr, [sp, #-4]!)
   1c900:	sub	sp, sp, #12
   1c904:	mov	r3, #0
   1c908:	stm	sp, {r1, r2}
   1c90c:	mov	r2, r3
   1c910:	mov	r1, r3
   1c914:	bl	1bc30 <pclose@plt+0x8984>
   1c918:	add	sp, sp, #12
   1c91c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c920:	push	{lr}		; (str lr, [sp, #-4]!)
   1c924:	sub	sp, sp, #12
   1c928:	str	r2, [sp]
   1c92c:	mov	r2, #0
   1c930:	str	r3, [sp, #4]
   1c934:	mov	r3, r1
   1c938:	mov	r1, r2
   1c93c:	bl	1bc30 <pclose@plt+0x8984>
   1c940:	add	sp, sp, #12
   1c944:	pop	{pc}		; (ldr pc, [sp], #4)
   1c948:	b	1bfe0 <pclose@plt+0x8d34>
   1c94c:	push	{r0, r1, r2, r3}
   1c950:	mov	r3, #0
   1c954:	push	{r4, lr}
   1c958:	sub	sp, sp, #16
   1c95c:	ldr	r4, [pc, #72]	; 1c9ac <pclose@plt+0x9700>
   1c960:	ldr	r2, [sp, #24]
   1c964:	add	ip, sp, #28
   1c968:	ldr	r0, [r4]
   1c96c:	stm	sp, {r2, ip}
   1c970:	mov	r1, r3
   1c974:	mov	r2, r3
   1c978:	str	r0, [sp, #12]
   1c97c:	mov	r0, #2
   1c980:	str	ip, [sp, #8]
   1c984:	bl	1bc30 <pclose@plt+0x8984>
   1c988:	ldr	r2, [sp, #12]
   1c98c:	ldr	r3, [r4]
   1c990:	cmp	r2, r3
   1c994:	bne	1c9a8 <pclose@plt+0x96fc>
   1c998:	add	sp, sp, #16
   1c99c:	pop	{r4, lr}
   1c9a0:	add	sp, sp, #16
   1c9a4:	bx	lr
   1c9a8:	bl	12bb0 <__stack_chk_fail@plt>
   1c9ac:	andeq	sp, r3, r0, asr #21
   1c9b0:	push	{r0, r1, r2, r3}
   1c9b4:	mov	r3, #0
   1c9b8:	push	{r4, lr}
   1c9bc:	sub	sp, sp, #16
   1c9c0:	ldr	r4, [pc, #96]	; 1ca28 <pclose@plt+0x977c>
   1c9c4:	ldr	r2, [sp, #24]
   1c9c8:	add	ip, sp, #28
   1c9cc:	ldr	r0, [r4]
   1c9d0:	mov	r1, r3
   1c9d4:	stm	sp, {r2, ip}
   1c9d8:	str	r0, [sp, #12]
   1c9dc:	mov	r2, r3
   1c9e0:	mov	r0, #4
   1c9e4:	str	ip, [sp, #8]
   1c9e8:	bl	1bc30 <pclose@plt+0x8984>
   1c9ec:	ldr	r2, [pc, #56]	; 1ca2c <pclose@plt+0x9780>
   1c9f0:	ldr	r1, [pc, #56]	; 1ca30 <pclose@plt+0x9784>
   1c9f4:	ldr	r3, [r2, #116]	; 0x74
   1c9f8:	cmp	r3, r1
   1c9fc:	addle	r3, r3, #1
   1ca00:	strle	r3, [r2, #116]	; 0x74
   1ca04:	ldr	r2, [sp, #12]
   1ca08:	ldr	r3, [r4]
   1ca0c:	cmp	r2, r3
   1ca10:	bne	1ca24 <pclose@plt+0x9778>
   1ca14:	add	sp, sp, #16
   1ca18:	pop	{r4, lr}
   1ca1c:	add	sp, sp, #16
   1ca20:	bx	lr
   1ca24:	bl	12bb0 <__stack_chk_fail@plt>
   1ca28:	andeq	sp, r3, r0, asr #21
   1ca2c:	ldrdeq	lr, [r3], -r8
   1ca30:	andeq	r7, r0, pc, lsr #10
   1ca34:	push	{r0, r1, r2, r3}
   1ca38:	mov	r0, #5
   1ca3c:	push	{lr}		; (str lr, [sp, #-4]!)
   1ca40:	sub	sp, sp, #20
   1ca44:	ldr	r3, [pc, #40]	; 1ca74 <pclose@plt+0x97c8>
   1ca48:	ldr	r2, [sp, #24]
   1ca4c:	add	ip, sp, #28
   1ca50:	ldr	lr, [r3]
   1ca54:	mov	r3, #0
   1ca58:	stm	sp, {r2, ip}
   1ca5c:	mov	r1, r3
   1ca60:	mov	r2, r3
   1ca64:	str	lr, [sp, #12]
   1ca68:	str	ip, [sp, #8]
   1ca6c:	bl	1bc30 <pclose@plt+0x8984>
   1ca70:	bl	13228 <abort@plt>
   1ca74:	andeq	sp, r3, r0, asr #21
   1ca78:	push	{r4, lr}
   1ca7c:	mov	r4, r0
   1ca80:	bl	1dc44 <pclose@plt+0xa998>
   1ca84:	cmp	r0, #0
   1ca88:	beq	1ca9c <pclose@plt+0x97f0>
   1ca8c:	mov	r1, r4
   1ca90:	mov	r0, #0
   1ca94:	pop	{r4, lr}
   1ca98:	b	1b714 <pclose@plt+0x8468>
   1ca9c:	bl	12f10 <__errno_location@plt>
   1caa0:	ldr	r0, [r0]
   1caa4:	bl	12db4 <strerror@plt>
   1caa8:	mov	r1, r0
   1caac:	ldr	r0, [pc]	; 1cab4 <pclose@plt+0x9808>
   1cab0:	bl	1ca34 <pclose@plt+0x9788>
   1cab4:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1cab8:	push	{r0, r1, r2, r3}
   1cabc:	mov	r0, #6
   1cac0:	push	{lr}		; (str lr, [sp, #-4]!)
   1cac4:	sub	sp, sp, #20
   1cac8:	ldr	r3, [pc, #40]	; 1caf8 <pclose@plt+0x984c>
   1cacc:	ldr	r2, [sp, #24]
   1cad0:	add	ip, sp, #28
   1cad4:	ldr	lr, [r3]
   1cad8:	mov	r3, #0
   1cadc:	stm	sp, {r2, ip}
   1cae0:	mov	r1, r3
   1cae4:	mov	r2, r3
   1cae8:	str	lr, [sp, #12]
   1caec:	str	ip, [sp, #8]
   1caf0:	bl	1bc30 <pclose@plt+0x8984>
   1caf4:	bl	13228 <abort@plt>
   1caf8:	andeq	sp, r3, r0, asr #21
   1cafc:	push	{r0, r1, r2, r3}
   1cb00:	mov	r3, #0
   1cb04:	push	{r4, lr}
   1cb08:	sub	sp, sp, #16
   1cb0c:	ldr	r4, [pc, #72]	; 1cb5c <pclose@plt+0x98b0>
   1cb10:	ldr	r2, [sp, #24]
   1cb14:	add	ip, sp, #28
   1cb18:	ldr	r0, [r4]
   1cb1c:	stm	sp, {r2, ip}
   1cb20:	mov	r1, r3
   1cb24:	mov	r2, r3
   1cb28:	str	r0, [sp, #12]
   1cb2c:	mov	r0, #7
   1cb30:	str	ip, [sp, #8]
   1cb34:	bl	1bc30 <pclose@plt+0x8984>
   1cb38:	ldr	r2, [sp, #12]
   1cb3c:	ldr	r3, [r4]
   1cb40:	cmp	r2, r3
   1cb44:	bne	1cb58 <pclose@plt+0x98ac>
   1cb48:	add	sp, sp, #16
   1cb4c:	pop	{r4, lr}
   1cb50:	add	sp, sp, #16
   1cb54:	bx	lr
   1cb58:	bl	12bb0 <__stack_chk_fail@plt>
   1cb5c:	andeq	sp, r3, r0, asr #21
   1cb60:	push	{r1, r2, r3}
   1cb64:	mov	r3, #0
   1cb68:	push	{r4, lr}
   1cb6c:	sub	sp, sp, #20
   1cb70:	ldr	r4, [pc, #72]	; 1cbc0 <pclose@plt+0x9914>
   1cb74:	ldr	r1, [sp, #28]
   1cb78:	add	ip, sp, #32
   1cb7c:	ldr	lr, [r4]
   1cb80:	mov	r2, r0
   1cb84:	stm	sp, {r1, ip}
   1cb88:	mov	r0, #7
   1cb8c:	mov	r1, r3
   1cb90:	str	lr, [sp, #12]
   1cb94:	str	ip, [sp, #8]
   1cb98:	bl	1bc30 <pclose@plt+0x8984>
   1cb9c:	ldr	r2, [sp, #12]
   1cba0:	ldr	r3, [r4]
   1cba4:	cmp	r2, r3
   1cba8:	bne	1cbbc <pclose@plt+0x9910>
   1cbac:	add	sp, sp, #20
   1cbb0:	pop	{r4, lr}
   1cbb4:	add	sp, sp, #12
   1cbb8:	bx	lr
   1cbbc:	bl	12bb0 <__stack_chk_fail@plt>
   1cbc0:	andeq	sp, r3, r0, asr #21
   1cbc4:	push	{r0, r1, r2, r3}
   1cbc8:	mov	r3, #0
   1cbcc:	push	{r4, lr}
   1cbd0:	sub	sp, sp, #16
   1cbd4:	ldr	r4, [pc, #80]	; 1cc2c <pclose@plt+0x9980>
   1cbd8:	ldr	r0, [sp, #24]
   1cbdc:	add	ip, sp, #28
   1cbe0:	ldr	r1, [r4]
   1cbe4:	str	r0, [sp]
   1cbe8:	subs	r0, r0, r3
   1cbec:	mov	r2, r3
   1cbf0:	movne	r0, #1
   1cbf4:	str	r1, [sp, #12]
   1cbf8:	str	ip, [sp, #4]
   1cbfc:	mov	r1, r3
   1cc00:	str	ip, [sp, #8]
   1cc04:	bl	1bc30 <pclose@plt+0x8984>
   1cc08:	ldr	r2, [sp, #12]
   1cc0c:	ldr	r3, [r4]
   1cc10:	cmp	r2, r3
   1cc14:	bne	1cc28 <pclose@plt+0x997c>
   1cc18:	add	sp, sp, #16
   1cc1c:	pop	{r4, lr}
   1cc20:	add	sp, sp, #16
   1cc24:	bx	lr
   1cc28:	bl	12bb0 <__stack_chk_fail@plt>
   1cc2c:	andeq	sp, r3, r0, asr #21
   1cc30:	mov	r1, #0
   1cc34:	mov	r0, #1
   1cc38:	b	1bfe0 <pclose@plt+0x8d34>
   1cc3c:	push	{r4, r5, r6, r7, r8, lr}
   1cc40:	subs	r7, r0, #0
   1cc44:	mov	r4, r1
   1cc48:	mov	r5, r2
   1cc4c:	beq	1cccc <pclose@plt+0x9a20>
   1cc50:	ldrb	r3, [r7]
   1cc54:	cmp	r3, #0
   1cc58:	bne	1ccb4 <pclose@plt+0x9a08>
   1cc5c:	cmp	r5, #0
   1cc60:	bne	1cc70 <pclose@plt+0x99c4>
   1cc64:	ldr	r0, [pc, #132]	; 1ccf0 <pclose@plt+0x9a44>
   1cc68:	pop	{r4, r5, r6, r7, r8, lr}
   1cc6c:	b	1cbc4 <pclose@plt+0x9918>
   1cc70:	ldr	r0, [pc, #124]	; 1ccf4 <pclose@plt+0x9a48>
   1cc74:	ldrb	r1, [r4], #1
   1cc78:	bl	1cbc4 <pclose@plt+0x9918>
   1cc7c:	cmp	r5, #1
   1cc80:	sub	r5, r5, #2
   1cc84:	beq	1cc64 <pclose@plt+0x99b8>
   1cc88:	add	r5, r5, #1
   1cc8c:	ldr	r6, [pc, #100]	; 1ccf8 <pclose@plt+0x9a4c>
   1cc90:	add	r5, r4, r5
   1cc94:	ldrb	r1, [r4], #1
   1cc98:	mov	r0, r6
   1cc9c:	bl	1cbc4 <pclose@plt+0x9918>
   1cca0:	cmp	r4, r5
   1cca4:	bne	1cc94 <pclose@plt+0x99e8>
   1cca8:	cmp	r7, #0
   1ccac:	popeq	{r4, r5, r6, r7, r8, pc}
   1ccb0:	b	1cc64 <pclose@plt+0x99b8>
   1ccb4:	mov	r1, r7
   1ccb8:	ldr	r0, [pc, #60]	; 1ccfc <pclose@plt+0x9a50>
   1ccbc:	bl	1cafc <pclose@plt+0x9850>
   1ccc0:	cmp	r5, #0
   1ccc4:	beq	1cc64 <pclose@plt+0x99b8>
   1ccc8:	b	1cc70 <pclose@plt+0x99c4>
   1cccc:	cmp	r2, #0
   1ccd0:	popeq	{r4, r5, r6, r7, r8, pc}
   1ccd4:	ldr	r0, [pc, #24]	; 1ccf4 <pclose@plt+0x9a48>
   1ccd8:	ldrb	r1, [r4], #1
   1ccdc:	bl	1cbc4 <pclose@plt+0x9918>
   1cce0:	cmp	r5, #1
   1cce4:	sub	r5, r5, #2
   1cce8:	bne	1cc88 <pclose@plt+0x99dc>
   1ccec:	pop	{r4, r5, r6, r7, r8, pc}
   1ccf0:	strdeq	ip, [r2], -r0
   1ccf4:			; <UNDEFINED> instruction: 0x0002afbc
   1ccf8:	andeq	r9, r2, r0, asr #19
   1ccfc:			; <UNDEFINED> instruction: 0x0002afb8
   1cd00:	mov	r1, r0
   1cd04:	ldr	r0, [pc]	; 1cd0c <pclose@plt+0x9a60>
   1cd08:	b	1cafc <pclose@plt+0x9850>
   1cd0c:	andeq	sl, r2, r4, asr #31
   1cd10:	push	{lr}		; (str lr, [sp, #-4]!)
   1cd14:	sub	sp, sp, #12
   1cd18:	mov	r3, r1
   1cd1c:	str	r2, [sp]
   1cd20:	ldr	r1, [pc, #12]	; 1cd34 <pclose@plt+0x9a88>
   1cd24:	mov	r2, r0
   1cd28:	mov	r0, #6
   1cd2c:	bl	1c89c <pclose@plt+0x95f0>
   1cd30:	bl	13228 <abort@plt>
   1cd34:	andeq	sl, r2, r4, ror #31
   1cd38:	push	{lr}		; (str lr, [sp, #-4]!)
   1cd3c:	sub	sp, sp, #12
   1cd40:	stm	sp, {r1, r2}
   1cd44:	mov	r2, r0
   1cd48:	ldr	r1, [pc, #8]	; 1cd58 <pclose@plt+0x9aac>
   1cd4c:	mov	r0, #6
   1cd50:	bl	1c89c <pclose@plt+0x95f0>
   1cd54:	bl	13228 <abort@plt>
   1cd58:	andeq	fp, r2, r4
   1cd5c:	push	{r4, r5, r6, lr}
   1cd60:	ldr	r5, [pc, #44]	; 1cd94 <pclose@plt+0x9ae8>
   1cd64:	ldr	r3, [r5]
   1cd68:	cmp	r3, #0
   1cd6c:	popeq	{r4, r5, r6, pc}
   1cd70:	ldr	r4, [r3]
   1cd74:	ldr	r3, [r3, #4]
   1cd78:	blx	r3
   1cd7c:	ldr	r0, [r5]
   1cd80:	bl	12ac0 <free@plt>
   1cd84:	subs	r3, r4, #0
   1cd88:	str	r4, [r5]
   1cd8c:	bne	1cd70 <pclose@plt+0x9ac4>
   1cd90:	pop	{r4, r5, r6, pc}
   1cd94:	andeq	lr, r3, r0, asr r6
   1cd98:	sub	r2, r0, #1
   1cd9c:	cmp	r2, #1
   1cda0:	bhi	1cde4 <pclose@plt+0x9b38>
   1cda4:	cmp	r1, #0
   1cda8:	push	{r4, lr}
   1cdac:	mov	r4, r1
   1cdb0:	beq	1cdd0 <pclose@plt+0x9b24>
   1cdb4:	cmp	r0, #1
   1cdb8:	movne	r0, #2
   1cdbc:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1cdc0:	mov	r1, r0
   1cdc4:	mov	r0, r4
   1cdc8:	pop	{r4, lr}
   1cdcc:	b	13030 <gpgrt_fputs@plt>
   1cdd0:	cmp	r0, #1
   1cdd4:	movne	r0, #2
   1cdd8:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1cddc:	pop	{r4, lr}
   1cde0:	b	12c10 <gpgrt_fflush@plt>
   1cde4:	mvn	r0, #0
   1cde8:	bx	lr
   1cdec:	push	{r4, r5, r6, lr}
   1cdf0:	ldr	r6, [pc, #84]	; 1ce4c <pclose@plt+0x9ba0>
   1cdf4:	ldr	r5, [r6]
   1cdf8:	cmp	r5, #0
   1cdfc:	beq	1ce2c <pclose@plt+0x9b80>
   1ce00:	ldr	r3, [r5, #4]
   1ce04:	cmp	r0, r3
   1ce08:	popeq	{r4, r5, r6, pc}
   1ce0c:	mov	r3, r5
   1ce10:	b	1ce20 <pclose@plt+0x9b74>
   1ce14:	ldr	r2, [r3, #4]
   1ce18:	cmp	r2, r0
   1ce1c:	popeq	{r4, r5, r6, pc}
   1ce20:	ldr	r3, [r3]
   1ce24:	cmp	r3, #0
   1ce28:	bne	1ce14 <pclose@plt+0x9b68>
   1ce2c:	mov	r4, r0
   1ce30:	mov	r0, #8
   1ce34:	bl	12d90 <malloc@plt>
   1ce38:	cmp	r0, #0
   1ce3c:	strne	r0, [r6]
   1ce40:	strne	r4, [r0, #4]
   1ce44:	strne	r5, [r0]
   1ce48:	pop	{r4, r5, r6, pc}
   1ce4c:	andeq	lr, r3, r0, asr r6
   1ce50:	bx	lr
   1ce54:	ldr	r3, [pc, #136]	; 1cee4 <pclose@plt+0x9c38>
   1ce58:	push	{r4, r5, r6, lr}
   1ce5c:	str	r0, [r3, #4]
   1ce60:	ldr	r0, [pc, #128]	; 1cee8 <pclose@plt+0x9c3c>
   1ce64:	bl	29534 <pclose@plt+0x16288>
   1ce68:	mov	r0, #0
   1ce6c:	bl	2338c <pclose@plt+0x100e0>
   1ce70:	ldr	r0, [pc, #116]	; 1ceec <pclose@plt+0x9c40>
   1ce74:	bl	12cb8 <gcry_check_version@plt>
   1ce78:	subs	r4, r0, #0
   1ce7c:	beq	1ceb8 <pclose@plt+0x9c0c>
   1ce80:	bl	13150 <gpg_err_init@plt>
   1ce84:	ldr	r0, [pc, #100]	; 1cef0 <pclose@plt+0x9c44>
   1ce88:	bl	12bbc <gpgrt_set_alloc_func@plt>
   1ce8c:	mov	r0, #0
   1ce90:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1ce94:	mov	r0, #1
   1ce98:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1ce9c:	mov	r0, #2
   1cea0:	bl	12e20 <_gpgrt_get_std_stream@plt>
   1cea4:	ldr	r0, [pc, #72]	; 1cef4 <pclose@plt+0x9c48>
   1cea8:	bl	198bc <pclose@plt+0x6610>
   1ceac:	ldr	r0, [pc, #68]	; 1cef8 <pclose@plt+0x9c4c>
   1ceb0:	pop	{r4, r5, r6, lr}
   1ceb4:	b	1c6e8 <pclose@plt+0x943c>
   1ceb8:	mov	r2, #5
   1cebc:	ldr	r1, [pc, #56]	; 1cefc <pclose@plt+0x9c50>
   1cec0:	bl	12b98 <dcgettext@plt>
   1cec4:	mov	r5, r0
   1cec8:	mov	r0, r4
   1cecc:	bl	12cb8 <gcry_check_version@plt>
   1ced0:	ldr	r2, [pc, #20]	; 1ceec <pclose@plt+0x9c40>
   1ced4:	ldr	r1, [pc, #36]	; 1cf00 <pclose@plt+0x9c54>
   1ced8:	mov	r3, r0
   1cedc:	mov	r0, r5
   1cee0:	bl	1ca34 <pclose@plt+0x9788>
   1cee4:	andeq	lr, r3, r0, asr r6
   1cee8:	andeq	ip, r1, ip, asr sp
   1ceec:	andeq	fp, r2, ip, lsr #32
   1cef0:	andeq	r3, r1, r8, lsl r0
   1cef4:	muleq	r1, r8, sp
   1cef8:	strdeq	lr, [r1], -r0
   1cefc:	andeq	fp, r2, r4, lsr r0
   1cf00:	andeq	fp, r2, r8, asr r0
   1cf04:	andeq	r0, r0, r0
   1cf08:	ldrb	r3, [r0, #1]
   1cf0c:	mov	r2, r0
   1cf10:	cmp	r3, #0
   1cf14:	beq	1cfc0 <pclose@plt+0x9d14>
   1cf18:	ldrb	r1, [r0, #2]
   1cf1c:	cmp	r3, #114	; 0x72
   1cf20:	movne	r0, #0
   1cf24:	moveq	r0, #256	; 0x100
   1cf28:	cmp	r1, #0
   1cf2c:	bxeq	lr
   1cf30:	ldrb	r3, [r2, #3]
   1cf34:	cmp	r1, #119	; 0x77
   1cf38:	orreq	r0, r0, #128	; 0x80
   1cf3c:	cmp	r3, #0
   1cf40:	bxeq	lr
   1cf44:	cmp	r3, #120	; 0x78
   1cf48:	ldrb	r3, [r2, #4]
   1cf4c:	orreq	r0, r0, #64	; 0x40
   1cf50:	cmp	r3, #0
   1cf54:	bxeq	lr
   1cf58:	cmp	r3, #114	; 0x72
   1cf5c:	ldrb	r3, [r2, #5]
   1cf60:	orreq	r0, r0, #32
   1cf64:	cmp	r3, #0
   1cf68:	bxeq	lr
   1cf6c:	cmp	r3, #119	; 0x77
   1cf70:	ldrb	r3, [r2, #6]
   1cf74:	orreq	r0, r0, #16
   1cf78:	cmp	r3, #0
   1cf7c:	bxeq	lr
   1cf80:	cmp	r3, #120	; 0x78
   1cf84:	ldrb	r3, [r2, #7]
   1cf88:	orreq	r0, r0, #8
   1cf8c:	cmp	r3, #0
   1cf90:	bxeq	lr
   1cf94:	cmp	r3, #114	; 0x72
   1cf98:	ldrb	r3, [r2, #8]
   1cf9c:	orreq	r0, r0, #4
   1cfa0:	cmp	r3, #0
   1cfa4:	bxeq	lr
   1cfa8:	cmp	r3, #119	; 0x77
   1cfac:	ldrb	r3, [r2, #9]
   1cfb0:	orreq	r0, r0, #2
   1cfb4:	cmp	r3, #120	; 0x78
   1cfb8:	orreq	r0, r0, #1
   1cfbc:	bx	lr
   1cfc0:	mov	r0, r3
   1cfc4:	bx	lr
   1cfc8:	bx	lr
   1cfcc:	push	{r4, r5, lr}
   1cfd0:	sub	sp, sp, #28
   1cfd4:	ldr	r4, [pc, #160]	; 1d07c <pclose@plt+0x9dd0>
   1cfd8:	mov	r1, sp
   1cfdc:	mov	r0, #4
   1cfe0:	ldr	r3, [r4]
   1cfe4:	str	r3, [sp, #20]
   1cfe8:	bl	12bf8 <getrlimit64@plt>
   1cfec:	mov	r1, sp
   1cff0:	cmp	r0, #0
   1cff4:	movne	r2, #0
   1cff8:	movne	r3, #0
   1cffc:	mov	r0, #4
   1d000:	strdne	r2, [sp, #8]
   1d004:	mov	r2, #0
   1d008:	mov	r3, #0
   1d00c:	strd	r2, [sp]
   1d010:	bl	12a6c <setrlimit64@plt>
   1d014:	cmp	r0, #0
   1d018:	beq	1d038 <pclose@plt+0x9d8c>
   1d01c:	bl	12f10 <__errno_location@plt>
   1d020:	ldr	r3, [r0]
   1d024:	mov	r5, r0
   1d028:	sub	r3, r3, #22
   1d02c:	bics	r3, r3, #16
   1d030:	moveq	r0, #1
   1d034:	bne	1d054 <pclose@plt+0x9da8>
   1d038:	ldr	r2, [sp, #20]
   1d03c:	ldr	r3, [r4]
   1d040:	cmp	r2, r3
   1d044:	bne	1d050 <pclose@plt+0x9da4>
   1d048:	add	sp, sp, #28
   1d04c:	pop	{r4, r5, pc}
   1d050:	bl	12bb0 <__stack_chk_fail@plt>
   1d054:	ldr	r1, [pc, #36]	; 1d080 <pclose@plt+0x9dd4>
   1d058:	mov	r2, #5
   1d05c:	mov	r0, #0
   1d060:	bl	12b98 <dcgettext@plt>
   1d064:	mov	r4, r0
   1d068:	ldr	r0, [r5]
   1d06c:	bl	12db4 <strerror@plt>
   1d070:	mov	r1, r0
   1d074:	mov	r0, r4
   1d078:	bl	1ca34 <pclose@plt+0x9788>
   1d07c:	andeq	sp, r3, r0, asr #21
   1d080:	andeq	fp, r2, r4, lsr #1
   1d084:	push	{r4, lr}
   1d088:	sub	sp, sp, #24
   1d08c:	ldr	r4, [pc, #76]	; 1d0e0 <pclose@plt+0x9e34>
   1d090:	mov	r1, sp
   1d094:	mov	r0, #4
   1d098:	ldr	r3, [r4]
   1d09c:	str	r3, [sp, #20]
   1d0a0:	bl	12bf8 <getrlimit64@plt>
   1d0a4:	cmp	r0, #0
   1d0a8:	bne	1d0c0 <pclose@plt+0x9e14>
   1d0ac:	ldrd	r2, [sp, #8]
   1d0b0:	mov	r1, sp
   1d0b4:	mov	r0, #4
   1d0b8:	strd	r2, [sp]
   1d0bc:	bl	12a6c <setrlimit64@plt>
   1d0c0:	ldr	r2, [sp, #20]
   1d0c4:	ldr	r3, [r4]
   1d0c8:	mov	r0, #1
   1d0cc:	cmp	r2, r3
   1d0d0:	bne	1d0dc <pclose@plt+0x9e30>
   1d0d4:	add	sp, sp, #24
   1d0d8:	pop	{r4, pc}
   1d0dc:	bl	12bb0 <__stack_chk_fail@plt>
   1d0e0:	andeq	sp, r3, r0, asr #21
   1d0e4:	ldr	r3, [pc, #8]	; 1d0f4 <pclose@plt+0x9e48>
   1d0e8:	mov	r2, #1
   1d0ec:	str	r2, [r3]
   1d0f0:	bx	lr
   1d0f4:	andeq	lr, r3, r8, asr r6
   1d0f8:	push	{r4, r5, r6, lr}
   1d0fc:	mov	r5, r0
   1d100:	ldr	r4, [pc, #48]	; 1d138 <pclose@plt+0x9e8c>
   1d104:	ldr	r3, [r4, #4]
   1d108:	cmp	r3, #0
   1d10c:	beq	1d120 <pclose@plt+0x9e74>
   1d110:	mov	r3, #8
   1d114:	str	r3, [r5]
   1d118:	ldr	r0, [pc, #28]	; 1d13c <pclose@plt+0x9e90>
   1d11c:	pop	{r4, r5, r6, pc}
   1d120:	mov	r1, #8
   1d124:	add	r0, r4, r1
   1d128:	bl	13174 <gcry_create_nonce@plt>
   1d12c:	mov	r3, #1
   1d130:	str	r3, [r4, #4]
   1d134:	b	1d110 <pclose@plt+0x9e64>
   1d138:	andeq	lr, r3, r8, asr r6
   1d13c:	andeq	lr, r3, r0, ror #12
   1d140:	push	{r4, lr}
   1d144:	sub	sp, sp, #8
   1d148:	ldr	r4, [pc, #48]	; 1d180 <pclose@plt+0x9ed4>
   1d14c:	mov	r0, sp
   1d150:	mov	r1, #4
   1d154:	ldr	r3, [r4]
   1d158:	str	r3, [sp, #4]
   1d15c:	bl	13174 <gcry_create_nonce@plt>
   1d160:	ldr	r2, [sp, #4]
   1d164:	ldr	r3, [r4]
   1d168:	ldr	r0, [sp]
   1d16c:	cmp	r2, r3
   1d170:	bne	1d17c <pclose@plt+0x9ed0>
   1d174:	add	sp, sp, #8
   1d178:	pop	{r4, pc}
   1d17c:	bl	12bb0 <__stack_chk_fail@plt>
   1d180:	andeq	sp, r3, r0, asr #21
   1d184:	b	12b74 <sleep@plt>
   1d188:	push	{r4, r5, r6, lr}
   1d18c:	sub	sp, sp, #24
   1d190:	ldr	r6, [pc, #144]	; 1d228 <pclose@plt+0x9f7c>
   1d194:	cmp	r0, #0
   1d198:	ldr	r3, [r6]
   1d19c:	str	r3, [sp, #20]
   1d1a0:	beq	1d20c <pclose@plt+0x9f60>
   1d1a4:	ldr	r3, [pc, #128]	; 1d22c <pclose@plt+0x9f80>
   1d1a8:	add	r5, sp, #12
   1d1ac:	add	r4, sp, #4
   1d1b0:	umull	r2, r3, r3, r0
   1d1b4:	lsr	r3, r3, #18
   1d1b8:	str	r3, [sp, #4]
   1d1bc:	rsb	r2, r3, r3, lsl #5
   1d1c0:	rsb	r2, r2, r2, lsl #6
   1d1c4:	add	r3, r3, r2, lsl #3
   1d1c8:	sub	r0, r0, r3, lsl #6
   1d1cc:	rsb	r3, r0, r0, lsl #5
   1d1d0:	add	r0, r0, r3, lsl #2
   1d1d4:	lsl	r0, r0, #3
   1d1d8:	str	r0, [sp, #8]
   1d1dc:	b	1d1f8 <pclose@plt+0x9f4c>
   1d1e0:	bl	12f10 <__errno_location@plt>
   1d1e4:	ldr	r3, [r0]
   1d1e8:	cmp	r3, #4
   1d1ec:	bne	1d20c <pclose@plt+0x9f60>
   1d1f0:	ldm	r5, {r0, r1}
   1d1f4:	stm	r4, {r0, r1}
   1d1f8:	mov	r1, r5
   1d1fc:	mov	r0, r4
   1d200:	bl	12ae4 <nanosleep@plt>
   1d204:	cmp	r0, #0
   1d208:	blt	1d1e0 <pclose@plt+0x9f34>
   1d20c:	ldr	r2, [sp, #20]
   1d210:	ldr	r3, [r6]
   1d214:	cmp	r2, r3
   1d218:	bne	1d224 <pclose@plt+0x9f78>
   1d21c:	add	sp, sp, #24
   1d220:	pop	{r4, r5, r6, pc}
   1d224:	bl	12bb0 <__stack_chk_fail@plt>
   1d228:	andeq	sp, r3, r0, asr #21
   1d22c:	tstmi	fp, #2096	; 0x830
   1d230:	bx	lr
   1d234:	bx	lr
   1d238:	ldr	r3, [pc, #184]	; 1d2f8 <pclose@plt+0xa04c>
   1d23c:	ldr	r3, [r3]
   1d240:	cmp	r3, #0
   1d244:	cmpne	r0, #0
   1d248:	beq	1d2f0 <pclose@plt+0xa044>
   1d24c:	ldrb	r3, [r0]
   1d250:	cmp	r3, #45	; 0x2d
   1d254:	bne	1d2f0 <pclose@plt+0xa044>
   1d258:	ldrb	r3, [r0, #1]
   1d25c:	cmp	r3, #38	; 0x26
   1d260:	bne	1d2f0 <pclose@plt+0xa044>
   1d264:	ldrb	r3, [r0, #2]
   1d268:	add	r0, r0, #2
   1d26c:	sub	r1, r3, #48	; 0x30
   1d270:	cmp	r1, #9
   1d274:	bhi	1d2c8 <pclose@plt+0xa01c>
   1d278:	mov	ip, r0
   1d27c:	push	{lr}		; (str lr, [sp, #-4]!)
   1d280:	ldrb	r3, [ip, #1]!
   1d284:	sub	lr, r3, #48	; 0x30
   1d288:	cmp	lr, #9
   1d28c:	bls	1d280 <pclose@plt+0x9fd4>
   1d290:	cmp	r3, #0
   1d294:	bne	1d2c0 <pclose@plt+0xa014>
   1d298:	cmp	r2, #0
   1d29c:	beq	1d2b0 <pclose@plt+0xa004>
   1d2a0:	mov	r1, r3
   1d2a4:	mov	r2, #10
   1d2a8:	pop	{lr}		; (ldr lr, [sp], #4)
   1d2ac:	b	12a3c <strtol@plt>
   1d2b0:	mov	r1, r2
   1d2b4:	pop	{lr}		; (ldr lr, [sp], #4)
   1d2b8:	mov	r2, #10
   1d2bc:	b	12a3c <strtol@plt>
   1d2c0:	mvn	r0, #0
   1d2c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2c8:	cmp	r3, #0
   1d2cc:	bne	1d2f0 <pclose@plt+0xa044>
   1d2d0:	cmp	r2, #0
   1d2d4:	beq	1d2e4 <pclose@plt+0xa038>
   1d2d8:	mov	r1, r3
   1d2dc:	mov	r2, #10
   1d2e0:	b	12a3c <strtol@plt>
   1d2e4:	mov	r1, r2
   1d2e8:	mov	r2, #10
   1d2ec:	b	12a3c <strtol@plt>
   1d2f0:	mvn	r0, #0
   1d2f4:	bx	lr
   1d2f8:	andeq	lr, r3, r8, asr r6
   1d2fc:	b	12c40 <tmpfile64@plt>
   1d300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d304:	mov	r1, #1
   1d308:	mov	r8, r0
   1d30c:	mov	r0, #0
   1d310:	bl	13054 <fcntl64@plt>
   1d314:	cmn	r0, #1
   1d318:	beq	1d45c <pclose@plt+0xa1b0>
   1d31c:	mov	r6, #0
   1d320:	mov	r1, #1
   1d324:	mov	r0, r1
   1d328:	bl	13054 <fcntl64@plt>
   1d32c:	cmn	r0, #1
   1d330:	beq	1d488 <pclose@plt+0xa1dc>
   1d334:	mov	r4, #0
   1d338:	mov	r1, #1
   1d33c:	mov	r0, #2
   1d340:	bl	13054 <fcntl64@plt>
   1d344:	cmn	r0, #1
   1d348:	beq	1d3b8 <pclose@plt+0xa10c>
   1d34c:	ldr	r3, [pc, #392]	; 1d4dc <pclose@plt+0xa230>
   1d350:	cmp	r4, #2
   1d354:	cmpne	r6, #2
   1d358:	moveq	r7, #1
   1d35c:	ldr	r5, [r3]
   1d360:	movne	r7, #0
   1d364:	mov	r9, #0
   1d368:	cmp	r5, #0
   1d36c:	beq	1d3ac <pclose@plt+0xa100>
   1d370:	cmp	r6, #1
   1d374:	beq	1d404 <pclose@plt+0xa158>
   1d378:	cmp	r4, #1
   1d37c:	beq	1d420 <pclose@plt+0xa174>
   1d380:	cmp	r9, #1
   1d384:	beq	1d43c <pclose@plt+0xa190>
   1d388:	cmp	r7, #0
   1d38c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d390:	mov	r3, r8
   1d394:	mov	r0, r5
   1d398:	ldr	r2, [pc, #320]	; 1d4e0 <pclose@plt+0xa234>
   1d39c:	mov	r1, #1
   1d3a0:	bl	12fe8 <__fprintf_chk@plt>
   1d3a4:	mov	r0, #3
   1d3a8:	bl	12e44 <exit@plt>
   1d3ac:	cmp	r7, #0
   1d3b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3b4:	b	1d3a4 <pclose@plt+0xa0f8>
   1d3b8:	bl	12f10 <__errno_location@plt>
   1d3bc:	ldr	r3, [r0]
   1d3c0:	cmp	r3, #9
   1d3c4:	bne	1d34c <pclose@plt+0xa0a0>
   1d3c8:	mov	r1, #1
   1d3cc:	ldr	r0, [pc, #272]	; 1d4e4 <pclose@plt+0xa238>
   1d3d0:	bl	12d3c <open64@plt>
   1d3d4:	cmp	r0, #2
   1d3d8:	beq	1d4b4 <pclose@plt+0xa208>
   1d3dc:	cmp	r4, #0
   1d3e0:	bne	1d3a4 <pclose@plt+0xa0f8>
   1d3e4:	ldr	r3, [pc, #252]	; 1d4e8 <pclose@plt+0xa23c>
   1d3e8:	ldr	r5, [r3]
   1d3ec:	cmp	r5, #0
   1d3f0:	beq	1d3a4 <pclose@plt+0xa0f8>
   1d3f4:	cmp	r6, #1
   1d3f8:	bne	1d390 <pclose@plt+0xa0e4>
   1d3fc:	mov	r7, r6
   1d400:	mov	r9, #2
   1d404:	mov	r3, r8
   1d408:	ldr	r2, [pc, #220]	; 1d4ec <pclose@plt+0xa240>
   1d40c:	mov	r1, #1
   1d410:	mov	r0, r5
   1d414:	bl	12fe8 <__fprintf_chk@plt>
   1d418:	cmp	r4, #1
   1d41c:	bne	1d380 <pclose@plt+0xa0d4>
   1d420:	mov	r1, r4
   1d424:	mov	r3, r8
   1d428:	ldr	r2, [pc, #192]	; 1d4f0 <pclose@plt+0xa244>
   1d42c:	mov	r0, r5
   1d430:	bl	12fe8 <__fprintf_chk@plt>
   1d434:	cmp	r9, #1
   1d438:	bne	1d388 <pclose@plt+0xa0dc>
   1d43c:	mov	r1, r9
   1d440:	mov	r3, r8
   1d444:	ldr	r2, [pc, #168]	; 1d4f4 <pclose@plt+0xa248>
   1d448:	mov	r0, r5
   1d44c:	bl	12fe8 <__fprintf_chk@plt>
   1d450:	cmp	r7, #0
   1d454:	bne	1d390 <pclose@plt+0xa0e4>
   1d458:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d45c:	bl	12f10 <__errno_location@plt>
   1d460:	ldr	r3, [r0]
   1d464:	cmp	r3, #9
   1d468:	bne	1d31c <pclose@plt+0xa070>
   1d46c:	mov	r1, #0
   1d470:	ldr	r0, [pc, #108]	; 1d4e4 <pclose@plt+0xa238>
   1d474:	bl	12d3c <open64@plt>
   1d478:	cmp	r0, #0
   1d47c:	moveq	r6, #1
   1d480:	movne	r6, #2
   1d484:	b	1d320 <pclose@plt+0xa074>
   1d488:	bl	12f10 <__errno_location@plt>
   1d48c:	ldr	r3, [r0]
   1d490:	cmp	r3, #9
   1d494:	bne	1d334 <pclose@plt+0xa088>
   1d498:	mov	r1, #1
   1d49c:	ldr	r0, [pc, #64]	; 1d4e4 <pclose@plt+0xa238>
   1d4a0:	bl	12d3c <open64@plt>
   1d4a4:	cmp	r0, #1
   1d4a8:	mov	r4, r0
   1d4ac:	movne	r4, #2
   1d4b0:	b	1d338 <pclose@plt+0xa08c>
   1d4b4:	cmp	r4, #2
   1d4b8:	cmpne	r6, #2
   1d4bc:	moveq	r7, #1
   1d4c0:	movne	r7, #0
   1d4c4:	cmp	r4, #0
   1d4c8:	bne	1d3ac <pclose@plt+0xa100>
   1d4cc:	ldr	r3, [pc, #20]	; 1d4e8 <pclose@plt+0xa23c>
   1d4d0:	mov	r9, #1
   1d4d4:	ldr	r5, [r3]
   1d4d8:	b	1d368 <pclose@plt+0xa0bc>
   1d4dc:	muleq	r3, r8, r1
   1d4e0:	andeq	fp, r2, r8, asr #2
   1d4e4:	andeq	fp, r2, r4, asr #1
   1d4e8:			; <UNDEFINED> instruction: 0x0003e1b0
   1d4ec:	ldrdeq	fp, [r2], -r0
   1d4f0:	strdeq	fp, [r2], -r8
   1d4f4:	andeq	fp, r2, r0, lsr #2
   1d4f8:	subs	r2, r0, #0
   1d4fc:	bxne	lr
   1d500:	ldr	r1, [pc, #4]	; 1d50c <pclose@plt+0xa260>
   1d504:	ldr	r0, [pc, #4]	; 1d510 <pclose@plt+0xa264>
   1d508:	b	1c94c <pclose@plt+0x96a0>
   1d50c:	andeq	fp, r2, r8, lsl #3
   1d510:	andeq	fp, r2, ip, lsr #3
   1d514:	b	1315c <remove@plt>
   1d518:	push	{r4, r5, r6, r7, r8, lr}
   1d51c:	subs	r8, r2, #0
   1d520:	mov	r6, r0
   1d524:	mov	r7, r1
   1d528:	beq	1d5dc <pclose@plt+0xa330>
   1d52c:	ldr	r3, [r8]
   1d530:	cmp	r3, #0
   1d534:	bne	1d5d4 <pclose@plt+0xa328>
   1d538:	mov	r1, r7
   1d53c:	mov	r0, r6
   1d540:	bl	12dfc <rename@plt>
   1d544:	cmp	r0, #0
   1d548:	bne	1d558 <pclose@plt+0xa2ac>
   1d54c:	mov	r4, #0
   1d550:	mov	r0, r4
   1d554:	pop	{r4, r5, r6, r7, r8, pc}
   1d558:	ldr	r3, [pc, #184]	; 1d618 <pclose@plt+0xa36c>
   1d55c:	ldr	r4, [r3]
   1d560:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1d564:	cmp	r0, #0
   1d568:	beq	1d54c <pclose@plt+0xa2a0>
   1d56c:	ldr	r3, [r8]
   1d570:	lsl	r4, r4, #24
   1d574:	and	r4, r4, #2130706432	; 0x7f000000
   1d578:	uxth	r0, r0
   1d57c:	cmp	r3, #0
   1d580:	orr	r4, r4, r0
   1d584:	beq	1d60c <pclose@plt+0xa360>
   1d588:	cmp	r4, #0
   1d58c:	beq	1d54c <pclose@plt+0xa2a0>
   1d590:	bl	20e08 <pclose@plt+0xdb5c>
   1d594:	mov	r3, #0
   1d598:	str	r3, [r8]
   1d59c:	mov	r2, #5
   1d5a0:	ldr	r1, [pc, #116]	; 1d61c <pclose@plt+0xa370>
   1d5a4:	mov	r0, #0
   1d5a8:	bl	12b98 <dcgettext@plt>
   1d5ac:	mov	r5, r0
   1d5b0:	mov	r0, r4
   1d5b4:	bl	13120 <gpg_strerror@plt>
   1d5b8:	mov	r2, r7
   1d5bc:	mov	r1, r6
   1d5c0:	mov	r3, r0
   1d5c4:	mov	r0, r5
   1d5c8:	bl	1c9b0 <pclose@plt+0x9704>
   1d5cc:	mov	r0, r4
   1d5d0:	pop	{r4, r5, r6, r7, r8, pc}
   1d5d4:	bl	20d94 <pclose@plt+0xdae8>
   1d5d8:	b	1d538 <pclose@plt+0xa28c>
   1d5dc:	bl	12dfc <rename@plt>
   1d5e0:	cmp	r0, #0
   1d5e4:	beq	1d54c <pclose@plt+0xa2a0>
   1d5e8:	ldr	r3, [pc, #40]	; 1d618 <pclose@plt+0xa36c>
   1d5ec:	ldr	r4, [r3]
   1d5f0:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1d5f4:	cmp	r0, #0
   1d5f8:	beq	1d54c <pclose@plt+0xa2a0>
   1d5fc:	lsl	r4, r4, #24
   1d600:	and	r4, r4, #2130706432	; 0x7f000000
   1d604:	uxth	r0, r0
   1d608:	orr	r4, r4, r0
   1d60c:	cmp	r4, #0
   1d610:	bne	1d59c <pclose@plt+0xa2f0>
   1d614:	b	1d54c <pclose@plt+0xa2a0>
   1d618:	andeq	lr, r3, r4, asr r6
   1d61c:	andeq	fp, r2, ip, asr #3
   1d620:	subs	r3, r1, #0
   1d624:	push	{r4, lr}
   1d628:	moveq	r1, r3
   1d62c:	mov	r4, r0
   1d630:	beq	1d64c <pclose@plt+0xa3a0>
   1d634:	ldrb	r1, [r3]
   1d638:	cmp	r1, #0
   1d63c:	beq	1d64c <pclose@plt+0xa3a0>
   1d640:	mov	r0, r3
   1d644:	bl	1cf08 <pclose@plt+0x9c5c>
   1d648:	mov	r1, r0
   1d64c:	mov	r0, r4
   1d650:	pop	{r4, lr}
   1d654:	b	12f4c <mkdir@plt>
   1d658:	b	12c4c <chdir@plt>
   1d65c:	subs	r3, r1, #0
   1d660:	push	{r4, lr}
   1d664:	moveq	r1, r3
   1d668:	mov	r4, r0
   1d66c:	beq	1d688 <pclose@plt+0xa3dc>
   1d670:	ldrb	r1, [r3]
   1d674:	cmp	r1, #0
   1d678:	beq	1d688 <pclose@plt+0xa3dc>
   1d67c:	mov	r0, r3
   1d680:	bl	1cf08 <pclose@plt+0x9c5c>
   1d684:	mov	r1, r0
   1d688:	mov	r0, r4
   1d68c:	pop	{r4, lr}
   1d690:	b	131e0 <chmod@plt>
   1d694:	ldr	r3, [pc, #476]	; 1d878 <pclose@plt+0xa5cc>
   1d698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d69c:	sub	sp, sp, #28
   1d6a0:	ldr	r3, [r3]
   1d6a4:	mov	r9, r0
   1d6a8:	str	r3, [sp, #20]
   1d6ac:	bl	12e8c <strlen@plt>
   1d6b0:	cmp	r0, #5
   1d6b4:	bls	1d84c <pclose@plt+0xa5a0>
   1d6b8:	sub	r0, r0, #6
   1d6bc:	add	r6, r9, r0
   1d6c0:	mov	r0, r6
   1d6c4:	ldr	r1, [pc, #432]	; 1d87c <pclose@plt+0xa5d0>
   1d6c8:	bl	12a24 <strcmp@plt>
   1d6cc:	cmp	r0, #0
   1d6d0:	bne	1d84c <pclose@plt+0xa5a0>
   1d6d4:	bl	12f10 <__errno_location@plt>
   1d6d8:	mov	r1, #8
   1d6dc:	ldr	r8, [pc, #412]	; 1d880 <pclose@plt+0xa5d4>
   1d6e0:	ldr	r7, [pc, #412]	; 1d884 <pclose@plt+0xa5d8>
   1d6e4:	ldr	fp, [pc, #412]	; 1d888 <pclose@plt+0xa5dc>
   1d6e8:	mov	sl, r0
   1d6ec:	add	r0, sp, r1
   1d6f0:	ldr	r3, [sl]
   1d6f4:	str	r3, [sp, #4]
   1d6f8:	bl	13174 <gcry_create_nonce@plt>
   1d6fc:	ldrd	r4, [sp, #8]
   1d700:	b	1d72c <pclose@plt+0xa480>
   1d704:	ldr	r0, [sl]
   1d708:	cmp	r0, #17
   1d70c:	bne	1d85c <pclose@plt+0xa5b0>
   1d710:	ldrd	r4, [sp, #8]
   1d714:	ldr	r3, [pc, #368]	; 1d88c <pclose@plt+0xa5e0>
   1d718:	adds	r4, r4, r3
   1d71c:	adc	r5, r5, #0
   1d720:	subs	r8, r8, #1
   1d724:	strd	r4, [sp, #8]
   1d728:	beq	1d850 <pclose@plt+0xa5a4>
   1d72c:	mov	r2, #62	; 0x3e
   1d730:	mov	r3, #0
   1d734:	mov	r0, r4
   1d738:	mov	r1, r5
   1d73c:	bl	2935c <pclose@plt+0x160b0>
   1d740:	mov	r3, #0
   1d744:	mov	r0, r4
   1d748:	mov	r1, r5
   1d74c:	ldrb	ip, [r7, r2]
   1d750:	mov	r2, #62	; 0x3e
   1d754:	strb	ip, [r6]
   1d758:	bl	2935c <pclose@plt+0x160b0>
   1d75c:	mov	r2, #62	; 0x3e
   1d760:	mov	r3, #0
   1d764:	bl	2935c <pclose@plt+0x160b0>
   1d768:	mov	r3, #0
   1d76c:	mov	r0, r4
   1d770:	mov	r1, r5
   1d774:	ldrb	ip, [r7, r2]
   1d778:	ldr	r2, [pc, #272]	; 1d890 <pclose@plt+0xa5e4>
   1d77c:	strb	ip, [r6, #1]
   1d780:	bl	2935c <pclose@plt+0x160b0>
   1d784:	mov	r2, #62	; 0x3e
   1d788:	mov	r3, #0
   1d78c:	bl	2935c <pclose@plt+0x160b0>
   1d790:	mov	r3, #0
   1d794:	mov	r0, r4
   1d798:	mov	r1, r5
   1d79c:	ldrb	ip, [r7, r2]
   1d7a0:	ldr	r2, [pc, #216]	; 1d880 <pclose@plt+0xa5d4>
   1d7a4:	strb	ip, [r6, #2]
   1d7a8:	bl	2935c <pclose@plt+0x160b0>
   1d7ac:	mov	r2, #62	; 0x3e
   1d7b0:	mov	r3, #0
   1d7b4:	bl	2935c <pclose@plt+0x160b0>
   1d7b8:	mov	r0, r4
   1d7bc:	mov	r1, r5
   1d7c0:	ldrb	ip, [r7, r2]
   1d7c4:	add	r3, pc, #156	; 0x9c
   1d7c8:	ldrd	r2, [r3]
   1d7cc:	strb	ip, [r6, #3]
   1d7d0:	bl	2935c <pclose@plt+0x160b0>
   1d7d4:	mov	r2, #62	; 0x3e
   1d7d8:	mov	r3, #0
   1d7dc:	bl	2935c <pclose@plt+0x160b0>
   1d7e0:	mov	r0, r4
   1d7e4:	mov	r1, r5
   1d7e8:	ldrb	ip, [r7, r2]
   1d7ec:	add	r3, pc, #124	; 0x7c
   1d7f0:	ldrd	r2, [r3]
   1d7f4:	strb	ip, [r6, #4]
   1d7f8:	bl	2935c <pclose@plt+0x160b0>
   1d7fc:	mov	r2, #62	; 0x3e
   1d800:	mov	r3, #0
   1d804:	bl	2935c <pclose@plt+0x160b0>
   1d808:	mov	r1, fp
   1d80c:	mov	r0, r9
   1d810:	ldrb	r3, [r7, r2]
   1d814:	strb	r3, [r6, #5]
   1d818:	bl	1d620 <pclose@plt+0xa374>
   1d81c:	cmp	r0, #0
   1d820:	bne	1d704 <pclose@plt+0xa458>
   1d824:	ldr	r0, [sp, #4]
   1d828:	bl	13108 <gpg_err_set_errno@plt>
   1d82c:	mov	r0, r9
   1d830:	ldr	r3, [pc, #64]	; 1d878 <pclose@plt+0xa5cc>
   1d834:	ldr	r2, [sp, #20]
   1d838:	ldr	r3, [r3]
   1d83c:	cmp	r2, r3
   1d840:	bne	1d864 <pclose@plt+0xa5b8>
   1d844:	add	sp, sp, #28
   1d848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d84c:	mov	r0, #22
   1d850:	bl	13108 <gpg_err_set_errno@plt>
   1d854:	mov	r0, #0
   1d858:	b	1d830 <pclose@plt+0xa584>
   1d85c:	mov	r0, #0
   1d860:	b	1d830 <pclose@plt+0xa584>
   1d864:	bl	12bb0 <__stack_chk_fail@plt>
   1d868:	rsceq	r7, r1, r0, lsl r8
   1d86c:	andeq	r0, r0, r0
   1d870:	ldrcc	r1, [fp], r0, ror #7
   1d874:	andeq	r0, r0, r0
   1d878:	andeq	sp, r3, r0, asr #21
   1d87c:	strdeq	fp, [r2], -r0
   1d880:	strdeq	sl, [r3], -r8
   1d884:	andeq	fp, r2, r4, rrx
   1d888:	strdeq	fp, [r2], -r8
   1d88c:	andeq	r1, r0, r1, ror #28
   1d890:	andeq	r0, r0, r4, lsl #30
   1d894:	b	12ebc <setenv@plt>
   1d898:	b	13204 <unsetenv@plt>
   1d89c:	push	{r4, r5, r6, lr}
   1d8a0:	mov	r4, #100	; 0x64
   1d8a4:	b	1d8d0 <pclose@plt+0xa624>
   1d8a8:	bl	12e2c <getcwd@plt>
   1d8ac:	mov	r3, r0
   1d8b0:	cmp	r5, r3
   1d8b4:	mov	r0, r5
   1d8b8:	beq	1d8ec <pclose@plt+0xa640>
   1d8bc:	bl	12b50 <gcry_free@plt>
   1d8c0:	bl	12f10 <__errno_location@plt>
   1d8c4:	ldr	r3, [r0]
   1d8c8:	cmp	r3, #34	; 0x22
   1d8cc:	bne	1d8e8 <pclose@plt+0xa63c>
   1d8d0:	add	r0, r4, #1
   1d8d4:	bl	129d0 <gcry_malloc@plt>
   1d8d8:	mov	r1, r4
   1d8dc:	lsl	r4, r4, #1
   1d8e0:	subs	r5, r0, #0
   1d8e4:	bne	1d8a8 <pclose@plt+0xa5fc>
   1d8e8:	mov	r3, #0
   1d8ec:	mov	r0, r3
   1d8f0:	pop	{r4, r5, r6, pc}
   1d8f4:	push	{r4, r5, r6, lr}
   1d8f8:	mvn	r3, #0
   1d8fc:	subs	r4, r1, #0
   1d900:	str	r3, [r0]
   1d904:	beq	1d940 <pclose@plt+0xa694>
   1d908:	mov	r5, r0
   1d90c:	bl	12e98 <inotify_init@plt>
   1d910:	cmn	r0, #1
   1d914:	mov	r6, r0
   1d918:	beq	1d988 <pclose@plt+0xa6dc>
   1d91c:	mov	r1, r4
   1d920:	mov	r2, #1024	; 0x400
   1d924:	bl	12f04 <inotify_add_watch@plt>
   1d928:	cmn	r0, #1
   1d92c:	movne	r4, #0
   1d930:	strne	r6, [r5]
   1d934:	beq	1d95c <pclose@plt+0xa6b0>
   1d938:	mov	r0, r4
   1d93c:	pop	{r4, r5, r6, pc}
   1d940:	ldr	r3, [pc, #100]	; 1d9ac <pclose@plt+0xa700>
   1d944:	ldr	r4, [r3]
   1d948:	lsl	r4, r4, #24
   1d94c:	and	r4, r4, #2130706432	; 0x7f000000
   1d950:	orr	r4, r4, #55	; 0x37
   1d954:	mov	r0, r4
   1d958:	pop	{r4, r5, r6, pc}
   1d95c:	ldr	r3, [pc, #72]	; 1d9ac <pclose@plt+0xa700>
   1d960:	ldr	r5, [r3]
   1d964:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1d968:	subs	r4, r0, #0
   1d96c:	lslne	r5, r5, #24
   1d970:	andne	r5, r5, #2130706432	; 0x7f000000
   1d974:	uxthne	r4, r4
   1d978:	mov	r0, r6
   1d97c:	orrne	r4, r5, r4
   1d980:	bl	1324c <close@plt>
   1d984:	b	1d938 <pclose@plt+0xa68c>
   1d988:	ldr	r3, [pc, #28]	; 1d9ac <pclose@plt+0xa700>
   1d98c:	ldr	r5, [r3]
   1d990:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1d994:	subs	r4, r0, #0
   1d998:	lslne	r5, r5, #24
   1d99c:	andne	r5, r5, #2130706432	; 0x7f000000
   1d9a0:	uxthne	r4, r4
   1d9a4:	orrne	r4, r5, r4
   1d9a8:	b	1d938 <pclose@plt+0xa68c>
   1d9ac:	andeq	lr, r3, r4, asr r6
   1d9b0:	mvn	r3, #0
   1d9b4:	cmp	r1, #0
   1d9b8:	push	{r4, r5, r6, r7, r8, lr}
   1d9bc:	str	r3, [r0]
   1d9c0:	beq	1da30 <pclose@plt+0xa784>
   1d9c4:	mov	r5, r0
   1d9c8:	mov	r0, r1
   1d9cc:	bl	13258 <gcry_strdup@plt>
   1d9d0:	subs	r6, r0, #0
   1d9d4:	beq	1da84 <pclose@plt+0xa7d8>
   1d9d8:	bl	12e98 <inotify_init@plt>
   1d9dc:	cmn	r0, #1
   1d9e0:	mov	r7, r0
   1d9e4:	beq	1daa8 <pclose@plt+0xa7fc>
   1d9e8:	mov	r1, #47	; 0x2f
   1d9ec:	mov	r0, r6
   1d9f0:	bl	130cc <strrchr@plt>
   1d9f4:	ldr	r2, [pc, #208]	; 1dacc <pclose@plt+0xa820>
   1d9f8:	mov	r1, r6
   1d9fc:	cmp	r0, #0
   1da00:	movne	r3, #0
   1da04:	strbne	r3, [r0]
   1da08:	mov	r0, r7
   1da0c:	bl	12f04 <inotify_add_watch@plt>
   1da10:	cmn	r0, #1
   1da14:	beq	1da4c <pclose@plt+0xa7a0>
   1da18:	mov	r4, #0
   1da1c:	mov	r0, r6
   1da20:	bl	12b50 <gcry_free@plt>
   1da24:	str	r7, [r5]
   1da28:	mov	r0, r4
   1da2c:	pop	{r4, r5, r6, r7, r8, pc}
   1da30:	ldr	r3, [pc, #152]	; 1dad0 <pclose@plt+0xa824>
   1da34:	ldr	r4, [r3]
   1da38:	lsl	r4, r4, #24
   1da3c:	and	r4, r4, #2130706432	; 0x7f000000
   1da40:	orr	r4, r4, #55	; 0x37
   1da44:	mov	r0, r4
   1da48:	pop	{r4, r5, r6, r7, r8, pc}
   1da4c:	ldr	r3, [pc, #124]	; 1dad0 <pclose@plt+0xa824>
   1da50:	ldr	r5, [r3]
   1da54:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1da58:	subs	r4, r0, #0
   1da5c:	lslne	r5, r5, #24
   1da60:	andne	r5, r5, #2130706432	; 0x7f000000
   1da64:	uxthne	r4, r4
   1da68:	mov	r0, r7
   1da6c:	orrne	r4, r5, r4
   1da70:	bl	1324c <close@plt>
   1da74:	mov	r0, r6
   1da78:	bl	12b50 <gcry_free@plt>
   1da7c:	mov	r0, r4
   1da80:	pop	{r4, r5, r6, r7, r8, pc}
   1da84:	ldr	r3, [pc, #68]	; 1dad0 <pclose@plt+0xa824>
   1da88:	ldr	r5, [r3]
   1da8c:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1da90:	subs	r4, r0, #0
   1da94:	lslne	r5, r5, #24
   1da98:	andne	r5, r5, #2130706432	; 0x7f000000
   1da9c:	uxthne	r4, r4
   1daa0:	orrne	r4, r5, r4
   1daa4:	b	1da28 <pclose@plt+0xa77c>
   1daa8:	ldr	r3, [pc, #32]	; 1dad0 <pclose@plt+0xa824>
   1daac:	ldr	r5, [r3]
   1dab0:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1dab4:	subs	r4, r0, #0
   1dab8:	lslne	r5, r5, #24
   1dabc:	andne	r5, r5, #2130706432	; 0x7f000000
   1dac0:	uxthne	r4, r4
   1dac4:	orrne	r4, r5, r4
   1dac8:	b	1da74 <pclose@plt+0xa7c8>
   1dacc:	streq	r0, [r0], #-1536	; 0xfffffa00
   1dad0:	andeq	lr, r3, r4, asr r6
   1dad4:	mov	r0, #0
   1dad8:	bx	lr
   1dadc:	push	{r4, r5, r6, r7, r8, lr}
   1dae0:	sub	sp, sp, #120	; 0x78
   1dae4:	ldr	r5, [pc, #316]	; 1dc28 <pclose@plt+0xa97c>
   1dae8:	mov	r4, #110	; 0x6e
   1daec:	mov	r2, sp
   1daf0:	ldr	r3, [r5]
   1daf4:	add	r1, sp, #4
   1daf8:	str	r3, [sp, #116]	; 0x74
   1dafc:	str	r4, [sp]
   1db00:	mov	r8, r0
   1db04:	bl	13144 <getsockname@plt>
   1db08:	subs	r7, r0, #0
   1db0c:	bne	1db98 <pclose@plt+0xa8ec>
   1db10:	ldrh	r3, [sp, #4]
   1db14:	cmp	r3, #1
   1db18:	bne	1db70 <pclose@plt+0xa8c4>
   1db1c:	ldr	r3, [sp]
   1db20:	cmp	r3, #2
   1db24:	bls	1db84 <pclose@plt+0xa8d8>
   1db28:	cmp	r3, #110	; 0x6e
   1db2c:	bhi	1dbd4 <pclose@plt+0xa928>
   1db30:	sub	r0, r3, #1
   1db34:	sub	r4, r3, #2
   1db38:	bl	129d0 <gcry_malloc@plt>
   1db3c:	subs	r6, r0, #0
   1db40:	beq	1dbec <pclose@plt+0xa940>
   1db44:	mov	r2, r4
   1db48:	add	r1, sp, #6
   1db4c:	bl	12b2c <memcpy@plt>
   1db50:	strb	r7, [r6, r4]
   1db54:	ldr	r2, [sp, #116]	; 0x74
   1db58:	ldr	r3, [r5]
   1db5c:	mov	r0, r6
   1db60:	cmp	r2, r3
   1db64:	bne	1dc24 <pclose@plt+0xa978>
   1db68:	add	sp, sp, #120	; 0x78
   1db6c:	pop	{r4, r5, r6, r7, r8, pc}
   1db70:	mov	r1, r8
   1db74:	ldr	r0, [pc, #176]	; 1dc2c <pclose@plt+0xa980>
   1db78:	mov	r6, r7
   1db7c:	bl	1c9b0 <pclose@plt+0x9704>
   1db80:	b	1db54 <pclose@plt+0xa8a8>
   1db84:	mov	r1, r8
   1db88:	ldr	r0, [pc, #160]	; 1dc30 <pclose@plt+0xa984>
   1db8c:	mov	r6, r7
   1db90:	bl	1c9b0 <pclose@plt+0x9704>
   1db94:	b	1db54 <pclose@plt+0xa8a8>
   1db98:	ldr	r3, [pc, #148]	; 1dc34 <pclose@plt+0xa988>
   1db9c:	mov	r6, #0
   1dba0:	ldr	r4, [r3]
   1dba4:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1dba8:	cmp	r0, #0
   1dbac:	lslne	r4, r4, #24
   1dbb0:	andne	r4, r4, #2130706432	; 0x7f000000
   1dbb4:	uxthne	r0, r0
   1dbb8:	orrne	r0, r4, r0
   1dbbc:	bl	13120 <gpg_strerror@plt>
   1dbc0:	mov	r1, r8
   1dbc4:	mov	r2, r0
   1dbc8:	ldr	r0, [pc, #104]	; 1dc38 <pclose@plt+0xa98c>
   1dbcc:	bl	1c9b0 <pclose@plt+0x9704>
   1dbd0:	b	1db54 <pclose@plt+0xa8a8>
   1dbd4:	mov	r2, r4
   1dbd8:	mov	r1, r8
   1dbdc:	ldr	r0, [pc, #88]	; 1dc3c <pclose@plt+0xa990>
   1dbe0:	mov	r6, r7
   1dbe4:	bl	1c9b0 <pclose@plt+0x9704>
   1dbe8:	b	1db54 <pclose@plt+0xa8a8>
   1dbec:	ldr	r3, [pc, #64]	; 1dc34 <pclose@plt+0xa988>
   1dbf0:	ldr	r4, [r3]
   1dbf4:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1dbf8:	cmp	r0, #0
   1dbfc:	lslne	r4, r4, #24
   1dc00:	andne	r4, r4, #2130706432	; 0x7f000000
   1dc04:	uxthne	r0, r0
   1dc08:	orrne	r0, r4, r0
   1dc0c:	bl	13120 <gpg_strerror@plt>
   1dc10:	mov	r1, r8
   1dc14:	mov	r2, r0
   1dc18:	ldr	r0, [pc, #32]	; 1dc40 <pclose@plt+0xa994>
   1dc1c:	bl	1c9b0 <pclose@plt+0x9704>
   1dc20:	b	1db54 <pclose@plt+0xa8a8>
   1dc24:	bl	12bb0 <__stack_chk_fail@plt>
   1dc28:	andeq	sp, r3, r0, asr #21
   1dc2c:	andeq	fp, r2, r0, lsr #4
   1dc30:	andeq	fp, r2, r0, asr r2
   1dc34:	andeq	lr, r3, r4, asr r6
   1dc38:	andeq	fp, r2, r0, lsl #4
   1dc3c:	andeq	fp, r2, r0, lsl #5
   1dc40:	ldrdeq	fp, [r2], -r0
   1dc44:	push	{r4, lr}
   1dc48:	bl	12c1c <dup@plt>
   1dc4c:	cmp	r0, #0
   1dc50:	blt	1dc60 <pclose@plt+0xa9b4>
   1dc54:	bl	1324c <close@plt>
   1dc58:	mov	r0, #1
   1dc5c:	pop	{r4, pc}
   1dc60:	mov	r0, #0
   1dc64:	pop	{r4, pc}
   1dc68:	ldr	r0, [pc]	; 1dc70 <pclose@plt+0xa9c4>
   1dc6c:	bx	lr
   1dc70:	andeq	fp, r2, r8, lsr r3
   1dc74:	push	{r4, r5, r6, lr}
   1dc78:	mov	r1, #0
   1dc7c:	bl	1867c <pclose@plt+0x53d0>
   1dc80:	mov	r1, #0
   1dc84:	mov	r4, r0
   1dc88:	ldr	r0, [pc, #48]	; 1dcc0 <pclose@plt+0xaa14>
   1dc8c:	bl	1867c <pclose@plt+0x53d0>
   1dc90:	mov	r1, r0
   1dc94:	mov	r5, r0
   1dc98:	mov	r0, r4
   1dc9c:	bl	1872c <pclose@plt+0x5480>
   1dca0:	mov	r6, r0
   1dca4:	mov	r0, r5
   1dca8:	bl	12b50 <gcry_free@plt>
   1dcac:	mov	r0, r4
   1dcb0:	bl	12b50 <gcry_free@plt>
   1dcb4:	clz	r0, r6
   1dcb8:	lsr	r0, r0, #5
   1dcbc:	pop	{r4, r5, r6, pc}
   1dcc0:	andeq	fp, r2, r4, asr #6
   1dcc4:	push	{r4, r5, r6, lr}
   1dcc8:	cmp	r0, #0
   1dccc:	ldr	r5, [pc, #152]	; 1dd6c <pclose@plt+0xaac0>
   1dcd0:	ldr	r4, [r5]
   1dcd4:	bne	1dce8 <pclose@plt+0xaa3c>
   1dcd8:	cmp	r4, #0
   1dcdc:	beq	1dcf8 <pclose@plt+0xaa4c>
   1dce0:	mov	r0, r4
   1dce4:	pop	{r4, r5, r6, pc}
   1dce8:	mov	r0, r4
   1dcec:	bl	12b50 <gcry_free@plt>
   1dcf0:	mov	r3, #0
   1dcf4:	str	r3, [r5]
   1dcf8:	bl	1dc68 <pclose@plt+0xa9bc>
   1dcfc:	mov	r2, #0
   1dd00:	ldr	r1, [pc, #104]	; 1dd70 <pclose@plt+0xaac4>
   1dd04:	mov	r6, r0
   1dd08:	bl	18c34 <pclose@plt+0x5988>
   1dd0c:	mov	r1, #0
   1dd10:	mov	r4, r0
   1dd14:	bl	1300c <access@plt>
   1dd18:	cmp	r0, #0
   1dd1c:	beq	1dd5c <pclose@plt+0xaab0>
   1dd20:	mov	r2, #0
   1dd24:	ldr	r1, [pc, #72]	; 1dd74 <pclose@plt+0xaac8>
   1dd28:	mov	r0, r6
   1dd2c:	str	r4, [r5]
   1dd30:	bl	18c34 <pclose@plt+0x5988>
   1dd34:	mov	r1, #0
   1dd38:	mov	r4, r0
   1dd3c:	bl	1300c <access@plt>
   1dd40:	cmp	r0, #0
   1dd44:	beq	1dd5c <pclose@plt+0xaab0>
   1dd48:	mov	r0, r4
   1dd4c:	bl	12b50 <gcry_free@plt>
   1dd50:	ldr	r4, [r5]
   1dd54:	mov	r0, r4
   1dd58:	pop	{r4, r5, r6, pc}
   1dd5c:	ldr	r0, [r5]
   1dd60:	bl	12b50 <gcry_free@plt>
   1dd64:	str	r4, [r5]
   1dd68:	b	1dce0 <pclose@plt+0xaa34>
   1dd6c:	andeq	lr, r3, r8, ror #12
   1dd70:	andeq	fp, r2, r0, asr r3
   1dd74:	andeq	fp, r2, ip, asr r3
   1dd78:	push	{r4, lr}
   1dd7c:	ldrb	r4, [r0]
   1dd80:	cmp	r4, #0
   1dd84:	beq	1dda4 <pclose@plt+0xaaf8>
   1dd88:	mov	r4, r0
   1dd8c:	bl	12e8c <strlen@plt>
   1dd90:	add	r0, r4, r0
   1dd94:	ldrb	r3, [r0, #-1]
   1dd98:	cmp	r3, #47	; 0x2f
   1dd9c:	movne	r4, #0
   1dda0:	beq	1ddac <pclose@plt+0xab00>
   1dda4:	mov	r0, r4
   1dda8:	pop	{r4, pc}
   1ddac:	mov	r0, r4
   1ddb0:	bl	12ff4 <gcry_xstrdup@plt>
   1ddb4:	mov	r4, r0
   1ddb8:	bl	12e8c <strlen@plt>
   1ddbc:	sub	r0, r0, #1
   1ddc0:	add	r3, r4, r0
   1ddc4:	cmp	r4, r3
   1ddc8:	bcs	1dda4 <pclose@plt+0xaaf8>
   1ddcc:	ldrb	r2, [r4, r0]
   1ddd0:	cmp	r2, #47	; 0x2f
   1ddd4:	bne	1dda4 <pclose@plt+0xaaf8>
   1ddd8:	mov	r1, #0
   1dddc:	b	1ddec <pclose@plt+0xab40>
   1dde0:	ldrb	r2, [r3]
   1dde4:	cmp	r2, #47	; 0x2f
   1dde8:	bne	1dda4 <pclose@plt+0xaaf8>
   1ddec:	strb	r1, [r3], #-1
   1ddf0:	cmp	r4, r3
   1ddf4:	bne	1dde0 <pclose@plt+0xab34>
   1ddf8:	mov	r0, r4
   1ddfc:	pop	{r4, pc}
   1de00:	ldr	r0, [pc]	; 1de08 <pclose@plt+0xab5c>
   1de04:	bx	lr
   1de08:	andeq	fp, r2, r4, asr #6
   1de0c:	push	{r4, lr}
   1de10:	ldr	r0, [pc, #80]	; 1de68 <pclose@plt+0xabbc>
   1de14:	bl	12d48 <getenv@plt>
   1de18:	subs	r4, r0, #0
   1de1c:	beq	1de2c <pclose@plt+0xab80>
   1de20:	ldrb	r3, [r4]
   1de24:	cmp	r3, #0
   1de28:	bne	1de38 <pclose@plt+0xab8c>
   1de2c:	ldr	r4, [pc, #56]	; 1de6c <pclose@plt+0xabc0>
   1de30:	mov	r0, r4
   1de34:	pop	{r4, pc}
   1de38:	bl	1dd78 <pclose@plt+0xaacc>
   1de3c:	cmp	r0, #0
   1de40:	movne	r4, r0
   1de44:	mov	r0, r4
   1de48:	bl	1dc74 <pclose@plt+0xa9c8>
   1de4c:	cmp	r0, #0
   1de50:	bne	1de30 <pclose@plt+0xab84>
   1de54:	ldr	r3, [pc, #20]	; 1de70 <pclose@plt+0xabc4>
   1de58:	mov	r2, #1
   1de5c:	mov	r0, r4
   1de60:	strb	r2, [r3, #4]
   1de64:	pop	{r4, pc}
   1de68:	andeq	fp, r2, ip, ror #6
   1de6c:	andeq	fp, r2, r4, asr #6
   1de70:	andeq	lr, r3, r8, ror #12
   1de74:	push	{r4, r5, r6, lr}
   1de78:	subs	r4, r0, #0
   1de7c:	beq	1de8c <pclose@plt+0xabe0>
   1de80:	ldrb	r3, [r4]
   1de84:	cmp	r3, #0
   1de88:	bne	1dec0 <pclose@plt+0xac14>
   1de8c:	bl	1de0c <pclose@plt+0xab60>
   1de90:	ldr	r5, [pc, #80]	; 1dee8 <pclose@plt+0xac3c>
   1de94:	mov	r6, #0
   1de98:	mov	r4, r0
   1de9c:	ldr	r0, [r5, #8]
   1dea0:	bl	12b50 <gcry_free@plt>
   1dea4:	mov	r0, r4
   1dea8:	mov	r1, #0
   1deac:	bl	1867c <pclose@plt+0x53d0>
   1deb0:	str	r0, [r5, #8]
   1deb4:	mov	r0, r6
   1deb8:	pop	{r4, r5, r6, lr}
   1debc:	b	12b50 <gcry_free@plt>
   1dec0:	bl	1dd78 <pclose@plt+0xaacc>
   1dec4:	ldr	r5, [pc, #28]	; 1dee8 <pclose@plt+0xac3c>
   1dec8:	subs	r6, r0, #0
   1decc:	movne	r4, r6
   1ded0:	mov	r0, r4
   1ded4:	bl	1dc74 <pclose@plt+0xa9c8>
   1ded8:	cmp	r0, #0
   1dedc:	moveq	r3, #1
   1dee0:	strbeq	r3, [r5, #4]
   1dee4:	b	1de9c <pclose@plt+0xabf0>
   1dee8:	andeq	lr, r3, r8, ror #12
   1deec:	push	{r4, r5, r6, lr}
   1def0:	ldr	r5, [pc, #44]	; 1df24 <pclose@plt+0xac78>
   1def4:	ldr	r4, [r5, #8]
   1def8:	cmp	r4, #0
   1defc:	beq	1df08 <pclose@plt+0xac5c>
   1df00:	mov	r0, r4
   1df04:	pop	{r4, r5, r6, pc}
   1df08:	bl	1de0c <pclose@plt+0xab60>
   1df0c:	mov	r1, r4
   1df10:	bl	1867c <pclose@plt+0x53d0>
   1df14:	mov	r4, r0
   1df18:	str	r0, [r5, #8]
   1df1c:	mov	r0, r4
   1df20:	pop	{r4, r5, r6, pc}
   1df24:	andeq	lr, r3, r8, ror #12
   1df28:	ldr	r3, [pc, #12]	; 1df3c <pclose@plt+0xac90>
   1df2c:	ldrb	r0, [r3, #4]
   1df30:	clz	r0, r0
   1df34:	lsr	r0, r0, #5
   1df38:	bx	lr
   1df3c:	andeq	lr, r3, r8, ror #12
   1df40:	ldr	r0, [pc]	; 1df48 <pclose@plt+0xac9c>
   1df44:	bx	lr
   1df48:	andeq	r9, r2, r8, ror fp
   1df4c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1df50:	mov	r2, #0
   1df54:	ldr	r8, [pc, #884]	; 1e2d0 <pclose@plt+0xb024>
   1df58:	sub	sp, sp, #188	; 0xbc
   1df5c:	mov	r7, r1
   1df60:	ldr	r3, [r8]
   1df64:	str	r2, [r1]
   1df68:	mov	r9, r0
   1df6c:	str	r3, [sp, #180]	; 0xb4
   1df70:	bl	1deec <pclose@plt+0xac40>
   1df74:	ldr	r5, [pc, #856]	; 1e2d4 <pclose@plt+0xb028>
   1df78:	ldr	r4, [pc, #856]	; 1e2d8 <pclose@plt+0xb02c>
   1df7c:	ldr	r6, [pc, #856]	; 1e2dc <pclose@plt+0xb030>
   1df80:	bl	12a9c <getuid@plt>
   1df84:	mov	r3, r4
   1df88:	mov	r2, r6
   1df8c:	mov	r1, #47	; 0x2f
   1df90:	str	r0, [sp]
   1df94:	add	r0, sp, #132	; 0x84
   1df98:	bl	13048 <gpgrt_snprintf@plt>
   1df9c:	add	r2, sp, #8
   1dfa0:	add	r1, sp, #132	; 0x84
   1dfa4:	mov	r0, #3
   1dfa8:	bl	131ec <__xstat64@plt>
   1dfac:	cmp	r0, #0
   1dfb0:	bne	1dfc4 <pclose@plt+0xad18>
   1dfb4:	ldr	r3, [sp, #24]
   1dfb8:	and	r3, r3, #61440	; 0xf000
   1dfbc:	cmp	r3, #16384	; 0x4000
   1dfc0:	beq	1e008 <pclose@plt+0xad5c>
   1dfc4:	ldr	r4, [r5], #4
   1dfc8:	cmp	r4, #0
   1dfcc:	bne	1df80 <pclose@plt+0xacd4>
   1dfd0:	ldr	r3, [r7]
   1dfd4:	orr	r3, r3, #2
   1dfd8:	orr	r3, r3, #128	; 0x80
   1dfdc:	str	r3, [r7]
   1dfe0:	bl	1deec <pclose@plt+0xac40>
   1dfe4:	bl	12ff4 <gcry_xstrdup@plt>
   1dfe8:	mov	r4, r0
   1dfec:	ldr	r2, [sp, #180]	; 0xb4
   1dff0:	ldr	r3, [r8]
   1dff4:	mov	r0, r4
   1dff8:	cmp	r2, r3
   1dffc:	bne	1e298 <pclose@plt+0xafec>
   1e000:	add	sp, sp, #188	; 0xbc
   1e004:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e008:	ldr	r4, [sp, #32]
   1e00c:	bl	12a9c <getuid@plt>
   1e010:	cmp	r4, r0
   1e014:	beq	1e02c <pclose@plt+0xad80>
   1e018:	ldr	r3, [r7]
   1e01c:	cmp	r9, #0
   1e020:	orr	r3, r3, #4
   1e024:	str	r3, [r7]
   1e028:	beq	1dfd8 <pclose@plt+0xad2c>
   1e02c:	add	r0, sp, #132	; 0x84
   1e030:	bl	12e8c <strlen@plt>
   1e034:	add	r2, r0, #7
   1e038:	cmp	r2, #46	; 0x2e
   1e03c:	mov	r3, r0
   1e040:	bls	1e050 <pclose@plt+0xada4>
   1e044:	ldr	r3, [r7]
   1e048:	orr	r3, r3, #1
   1e04c:	b	1dfd8 <pclose@plt+0xad2c>
   1e050:	ldr	r2, [pc, #648]	; 1e2e0 <pclose@plt+0xb034>
   1e054:	add	r1, sp, #132	; 0x84
   1e058:	add	ip, r1, r0
   1e05c:	ldrb	lr, [r2, #6]
   1e060:	ldrh	r1, [r2, #4]
   1e064:	ldr	r0, [r2]
   1e068:	add	r2, sp, #132	; 0x84
   1e06c:	str	r0, [r2, r3]
   1e070:	strh	r1, [ip, #4]
   1e074:	add	r2, sp, #8
   1e078:	add	r1, sp, #132	; 0x84
   1e07c:	strb	lr, [ip, #6]
   1e080:	mov	r0, #3
   1e084:	bl	131ec <__xstat64@plt>
   1e088:	cmp	r0, #0
   1e08c:	bne	1e17c <pclose@plt+0xaed0>
   1e090:	ldr	r3, [sp, #24]
   1e094:	and	r3, r3, #61440	; 0xf000
   1e098:	cmp	r3, #16384	; 0x4000
   1e09c:	beq	1e1c8 <pclose@plt+0xaf1c>
   1e0a0:	ldr	r3, [r7]
   1e0a4:	cmp	r9, #0
   1e0a8:	orr	r3, r3, #4
   1e0ac:	str	r3, [r7]
   1e0b0:	beq	1dfd8 <pclose@plt+0xad2c>
   1e0b4:	ldr	r3, [pc, #552]	; 1e2e4 <pclose@plt+0xb038>
   1e0b8:	ldrb	r3, [r3, #4]
   1e0bc:	cmp	r3, #0
   1e0c0:	beq	1e1ac <pclose@plt+0xaf00>
   1e0c4:	ldr	r3, [r7]
   1e0c8:	orr	r3, r3, #32
   1e0cc:	str	r3, [r7]
   1e0d0:	bl	1deec <pclose@plt+0xac40>
   1e0d4:	mov	r4, r0
   1e0d8:	bl	12e8c <strlen@plt>
   1e0dc:	mov	r2, r4
   1e0e0:	add	r1, sp, #112	; 0x70
   1e0e4:	mov	r3, r0
   1e0e8:	mov	r0, #2
   1e0ec:	bl	13060 <gcry_md_hash_buffer@plt>
   1e0f0:	add	r0, sp, #112	; 0x70
   1e0f4:	mov	r1, #120	; 0x78
   1e0f8:	bl	1e79c <pclose@plt+0xb4f0>
   1e0fc:	subs	r5, r0, #0
   1e100:	beq	1e044 <pclose@plt+0xad98>
   1e104:	mov	r3, #0
   1e108:	mov	r2, r5
   1e10c:	ldr	r1, [pc, #468]	; 1e2e8 <pclose@plt+0xb03c>
   1e110:	add	r0, sp, #132	; 0x84
   1e114:	bl	18bc8 <pclose@plt+0x591c>
   1e118:	mov	r4, r0
   1e11c:	mov	r0, r5
   1e120:	bl	12b50 <gcry_free@plt>
   1e124:	cmp	r4, #0
   1e128:	beq	1e22c <pclose@plt+0xaf80>
   1e12c:	add	r2, sp, #8
   1e130:	mov	r1, r4
   1e134:	mov	r0, #3
   1e138:	bl	131ec <__xstat64@plt>
   1e13c:	cmp	r0, #0
   1e140:	beq	1e204 <pclose@plt+0xaf58>
   1e144:	bl	12f10 <__errno_location@plt>
   1e148:	ldr	r3, [r0]
   1e14c:	mov	r5, r0
   1e150:	cmp	r3, #2
   1e154:	beq	1e23c <pclose@plt+0xaf90>
   1e158:	ldr	r3, [r7]
   1e15c:	cmp	r9, #0
   1e160:	orr	r3, r3, #1
   1e164:	str	r3, [r7]
   1e168:	bne	1dfec <pclose@plt+0xad40>
   1e16c:	mov	r0, r4
   1e170:	bl	12b50 <gcry_free@plt>
   1e174:	ldr	r3, [r7]
   1e178:	b	1dfd8 <pclose@plt+0xad2c>
   1e17c:	bl	12f10 <__errno_location@plt>
   1e180:	ldr	r3, [r0]
   1e184:	cmp	r3, #2
   1e188:	bne	1e044 <pclose@plt+0xad98>
   1e18c:	ldr	r1, [pc, #344]	; 1e2ec <pclose@plt+0xb040>
   1e190:	add	r0, sp, #132	; 0x84
   1e194:	bl	1d620 <pclose@plt+0xa374>
   1e198:	cmp	r0, #0
   1e19c:	beq	1e1e8 <pclose@plt+0xaf3c>
   1e1a0:	ldr	r3, [r7]
   1e1a4:	orr	r3, r3, #16
   1e1a8:	b	1dfd8 <pclose@plt+0xad2c>
   1e1ac:	add	r0, sp, #132	; 0x84
   1e1b0:	bl	12ff4 <gcry_xstrdup@plt>
   1e1b4:	mov	r4, r0
   1e1b8:	cmp	r4, #0
   1e1bc:	bne	1dfec <pclose@plt+0xad40>
   1e1c0:	ldr	r3, [r7]
   1e1c4:	b	1dfd8 <pclose@plt+0xad2c>
   1e1c8:	ldr	r4, [sp, #32]
   1e1cc:	bl	12a9c <getuid@plt>
   1e1d0:	cmp	r4, r0
   1e1d4:	bne	1e0a0 <pclose@plt+0xadf4>
   1e1d8:	ldr	r3, [sp, #24]
   1e1dc:	tst	r3, #63	; 0x3f
   1e1e0:	bne	1e0a0 <pclose@plt+0xadf4>
   1e1e4:	b	1e0b4 <pclose@plt+0xae08>
   1e1e8:	add	r2, sp, #8
   1e1ec:	add	r1, sp, #132	; 0x84
   1e1f0:	mov	r0, #3
   1e1f4:	bl	131ec <__xstat64@plt>
   1e1f8:	cmp	r0, #0
   1e1fc:	beq	1e090 <pclose@plt+0xade4>
   1e200:	b	1e044 <pclose@plt+0xad98>
   1e204:	ldr	r3, [sp, #24]
   1e208:	and	r3, r3, #61440	; 0xf000
   1e20c:	cmp	r3, #16384	; 0x4000
   1e210:	beq	1e254 <pclose@plt+0xafa8>
   1e214:	ldr	r3, [r7]
   1e218:	cmp	r9, #0
   1e21c:	orr	r3, r3, #8
   1e220:	str	r3, [r7]
   1e224:	bne	1dfec <pclose@plt+0xad40>
   1e228:	b	1e16c <pclose@plt+0xaec0>
   1e22c:	ldr	r3, [r7]
   1e230:	orr	r3, r3, #1
   1e234:	str	r3, [r7]
   1e238:	b	1dfd8 <pclose@plt+0xad2c>
   1e23c:	cmp	r9, #0
   1e240:	beq	1e274 <pclose@plt+0xafc8>
   1e244:	ldr	r3, [r7]
   1e248:	orr	r3, r3, #64	; 0x40
   1e24c:	str	r3, [r7]
   1e250:	b	1dfec <pclose@plt+0xad40>
   1e254:	ldr	r5, [sp, #32]
   1e258:	bl	12a9c <getuid@plt>
   1e25c:	cmp	r5, r0
   1e260:	bne	1e214 <pclose@plt+0xaf68>
   1e264:	ldr	r3, [sp, #24]
   1e268:	tst	r3, #63	; 0x3f
   1e26c:	bne	1e214 <pclose@plt+0xaf68>
   1e270:	b	1dfec <pclose@plt+0xad40>
   1e274:	ldr	r1, [pc, #112]	; 1e2ec <pclose@plt+0xb040>
   1e278:	mov	r0, r4
   1e27c:	bl	1d620 <pclose@plt+0xa374>
   1e280:	cmp	r0, #0
   1e284:	beq	1e29c <pclose@plt+0xaff0>
   1e288:	ldr	r3, [r7]
   1e28c:	orr	r3, r3, #16
   1e290:	str	r3, [r7]
   1e294:	b	1e16c <pclose@plt+0xaec0>
   1e298:	bl	12bb0 <__stack_chk_fail@plt>
   1e29c:	add	r2, sp, #8
   1e2a0:	add	r1, sp, #132	; 0x84
   1e2a4:	mov	r0, #3
   1e2a8:	bl	131ec <__xstat64@plt>
   1e2ac:	cmp	r0, #0
   1e2b0:	beq	1e1b8 <pclose@plt+0xaf0c>
   1e2b4:	ldr	r2, [r5]
   1e2b8:	ldr	r3, [r7]
   1e2bc:	cmp	r2, #2
   1e2c0:	orrne	r3, r3, #1
   1e2c4:	orreq	r3, r3, #64	; 0x40
   1e2c8:	str	r3, [r7]
   1e2cc:	b	1e16c <pclose@plt+0xaec0>
   1e2d0:	andeq	sp, r3, r0, asr #21
   1e2d4:	andeq	fp, r2, r8, lsl #6
   1e2d8:	andeq	fp, r2, ip, ror r5
   1e2dc:	andeq	fp, r2, r8, ror r3
   1e2e0:	muleq	r2, ip, r3
   1e2e4:	andeq	lr, r3, r8, ror #12
   1e2e8:	andeq	fp, r2, r4, lsl #7
   1e2ec:	strdeq	fp, [r2], -r8
   1e2f0:	push	{r4, r5, lr}
   1e2f4:	sub	sp, sp, #12
   1e2f8:	ldr	r5, [pc, #64]	; 1e340 <pclose@plt+0xb094>
   1e2fc:	ldr	r4, [pc, #64]	; 1e344 <pclose@plt+0xb098>
   1e300:	ldr	r0, [r5, #12]
   1e304:	ldr	r3, [r4]
   1e308:	cmp	r0, #0
   1e30c:	str	r3, [sp, #4]
   1e310:	beq	1e32c <pclose@plt+0xb080>
   1e314:	ldr	r2, [sp, #4]
   1e318:	ldr	r3, [r4]
   1e31c:	cmp	r2, r3
   1e320:	bne	1e33c <pclose@plt+0xb090>
   1e324:	add	sp, sp, #12
   1e328:	pop	{r4, r5, pc}
   1e32c:	mov	r1, sp
   1e330:	bl	1df4c <pclose@plt+0xaca0>
   1e334:	str	r0, [r5, #12]
   1e338:	b	1e314 <pclose@plt+0xb068>
   1e33c:	bl	12bb0 <__stack_chk_fail@plt>
   1e340:	andeq	lr, r3, r8, ror #12
   1e344:	andeq	sp, r3, r0, asr #21
   1e348:	ldr	r0, [pc]	; 1e350 <pclose@plt+0xb0a4>
   1e34c:	bx	lr
   1e350:	andeq	fp, r2, r8, lsl #7
   1e354:	ldr	r0, [pc]	; 1e35c <pclose@plt+0xb0b0>
   1e358:	bx	lr
   1e35c:	muleq	r2, r4, r3
   1e360:	ldr	r0, [pc]	; 1e368 <pclose@plt+0xb0bc>
   1e364:	bx	lr
   1e368:	andeq	fp, r2, r4, lsr #7
   1e36c:	ldr	r0, [pc]	; 1e374 <pclose@plt+0xb0c8>
   1e370:	bx	lr
   1e374:	andeq	fp, r2, r8, asr #7
   1e378:	ldr	r0, [pc]	; 1e380 <pclose@plt+0xb0d4>
   1e37c:	bx	lr
   1e380:	andeq	sl, r2, r0, lsl r7
   1e384:	ldr	r0, [pc]	; 1e38c <pclose@plt+0xb0e0>
   1e388:	bx	lr
   1e38c:	ldrdeq	fp, [r2], -ip
   1e390:	push	{r4, r5, lr}
   1e394:	sub	sp, sp, #12
   1e398:	ldr	r5, [pc, #96]	; 1e400 <pclose@plt+0xb154>
   1e39c:	ldr	r4, [pc, #96]	; 1e404 <pclose@plt+0xb158>
   1e3a0:	ldr	r0, [r5, #16]
   1e3a4:	ldr	r3, [r4]
   1e3a8:	cmp	r0, #0
   1e3ac:	str	r3, [sp, #4]
   1e3b0:	beq	1e3cc <pclose@plt+0xb120>
   1e3b4:	ldr	r2, [sp, #4]
   1e3b8:	ldr	r3, [r4]
   1e3bc:	cmp	r2, r3
   1e3c0:	bne	1e3fc <pclose@plt+0xb150>
   1e3c4:	add	sp, sp, #12
   1e3c8:	pop	{r4, r5, pc}
   1e3cc:	ldr	r0, [r5, #12]
   1e3d0:	cmp	r0, #0
   1e3d4:	beq	1e3ec <pclose@plt+0xb140>
   1e3d8:	mov	r2, #0
   1e3dc:	ldr	r1, [pc, #36]	; 1e408 <pclose@plt+0xb15c>
   1e3e0:	bl	185cc <pclose@plt+0x5320>
   1e3e4:	str	r0, [r5, #16]
   1e3e8:	b	1e3b4 <pclose@plt+0xb108>
   1e3ec:	mov	r1, sp
   1e3f0:	bl	1df4c <pclose@plt+0xaca0>
   1e3f4:	str	r0, [r5, #12]
   1e3f8:	b	1e3d8 <pclose@plt+0xb12c>
   1e3fc:	bl	12bb0 <__stack_chk_fail@plt>
   1e400:	andeq	lr, r3, r8, ror #12
   1e404:	andeq	sp, r3, r0, asr #21
   1e408:	strdeq	fp, [r2], -r0
   1e40c:	push	{r4, lr}
   1e410:	ldr	r4, [pc, #72]	; 1e460 <pclose@plt+0xb1b4>
   1e414:	ldr	r3, [r4, #20]
   1e418:	cmp	r3, #0
   1e41c:	bne	1e438 <pclose@plt+0xb18c>
   1e420:	ldr	r3, [r4, #24]
   1e424:	cmp	r3, #0
   1e428:	bne	1e44c <pclose@plt+0xb1a0>
   1e42c:	bl	13258 <gcry_strdup@plt>
   1e430:	str	r0, [r4, #24]
   1e434:	pop	{r4, pc}
   1e438:	ldr	r3, [pc, #36]	; 1e464 <pclose@plt+0xb1b8>
   1e43c:	ldr	r2, [pc, #36]	; 1e468 <pclose@plt+0xb1bc>
   1e440:	ldr	r1, [pc, #36]	; 1e46c <pclose@plt+0xb1c0>
   1e444:	ldr	r0, [pc, #36]	; 1e470 <pclose@plt+0xb1c4>
   1e448:	bl	1cd38 <pclose@plt+0x9a8c>
   1e44c:	ldr	r3, [pc, #16]	; 1e464 <pclose@plt+0xb1b8>
   1e450:	ldr	r2, [pc, #28]	; 1e474 <pclose@plt+0xb1c8>
   1e454:	ldr	r1, [pc, #16]	; 1e46c <pclose@plt+0xb1c0>
   1e458:	ldr	r0, [pc, #24]	; 1e478 <pclose@plt+0xb1cc>
   1e45c:	bl	1cd38 <pclose@plt+0x9a8c>
   1e460:	andeq	lr, r3, r8, ror #12
   1e464:	andeq	fp, r2, r0, lsl r3
   1e468:	andeq	r0, r0, sp, lsl #8
   1e46c:	strdeq	fp, [r2], -ip
   1e470:	andeq	fp, r2, r4, lsl r4
   1e474:	andeq	r0, r0, lr, lsl #8
   1e478:	andeq	fp, r2, r0, lsr r4
   1e47c:	push	{r4, lr}
   1e480:	mov	r3, #1
   1e484:	ldr	r4, [pc, #664]	; 1e724 <pclose@plt+0xb478>
   1e488:	sub	r0, r0, #1
   1e48c:	str	r3, [r4, #20]
   1e490:	cmp	r0, #11
   1e494:	ldrls	pc, [pc, r0, lsl #2]
   1e498:	b	1e714 <pclose@plt+0xb468>
   1e49c:	andeq	lr, r1, r0, lsl #10
   1e4a0:	andeq	lr, r1, r4, lsr r5
   1e4a4:	andeq	lr, r1, r0, asr #10
   1e4a8:	andeq	lr, r1, r4, ror r5
   1e4ac:	andeq	lr, r1, r8, lsr #11
   1e4b0:	ldrdeq	lr, [r1], -ip
   1e4b4:	andeq	lr, r1, r0, lsl r6
   1e4b8:	andeq	lr, r1, r4, asr #12
   1e4bc:	andeq	lr, r1, r8, ror r6
   1e4c0:	andeq	lr, r1, ip, lsr #13
   1e4c4:	andeq	lr, r1, r0, ror #13
   1e4c8:	andeq	lr, r1, ip, asr #9
   1e4cc:	ldr	r0, [r4, #60]	; 0x3c
   1e4d0:	cmp	r0, #0
   1e4d4:	popne	{r4, pc}
   1e4d8:	ldr	r3, [r4, #24]
   1e4dc:	mov	r2, r0
   1e4e0:	cmp	r3, #0
   1e4e4:	movne	r0, r3
   1e4e8:	ldrne	r1, [pc, #568]	; 1e728 <pclose@plt+0xb47c>
   1e4ec:	ldreq	r1, [pc, #568]	; 1e72c <pclose@plt+0xb480>
   1e4f0:	ldreq	r0, [pc, #568]	; 1e730 <pclose@plt+0xb484>
   1e4f4:	bl	18c34 <pclose@plt+0x5988>
   1e4f8:	str	r0, [r4, #60]	; 0x3c
   1e4fc:	pop	{r4, pc}
   1e500:	ldr	r0, [r4, #28]
   1e504:	cmp	r0, #0
   1e508:	popne	{r4, pc}
   1e50c:	ldr	r3, [r4, #24]
   1e510:	mov	r2, r0
   1e514:	cmp	r3, #0
   1e518:	movne	r0, r3
   1e51c:	ldrne	r1, [pc, #528]	; 1e734 <pclose@plt+0xb488>
   1e520:	ldreq	r1, [pc, #528]	; 1e738 <pclose@plt+0xb48c>
   1e524:	ldreq	r0, [pc, #516]	; 1e730 <pclose@plt+0xb484>
   1e528:	bl	18c34 <pclose@plt+0x5988>
   1e52c:	str	r0, [r4, #28]
   1e530:	pop	{r4, pc}
   1e534:	mov	r0, #0
   1e538:	pop	{r4, lr}
   1e53c:	b	1dcc4 <pclose@plt+0xaa18>
   1e540:	ldr	r0, [r4, #32]
   1e544:	cmp	r0, #0
   1e548:	popne	{r4, pc}
   1e54c:	ldr	r3, [r4, #24]
   1e550:	mov	r2, r0
   1e554:	cmp	r3, #0
   1e558:	movne	r0, r3
   1e55c:	ldrne	r1, [pc, #472]	; 1e73c <pclose@plt+0xb490>
   1e560:	ldreq	r1, [pc, #472]	; 1e740 <pclose@plt+0xb494>
   1e564:	ldreq	r0, [pc, #472]	; 1e744 <pclose@plt+0xb498>
   1e568:	bl	18c34 <pclose@plt+0x5988>
   1e56c:	str	r0, [r4, #32]
   1e570:	pop	{r4, pc}
   1e574:	ldr	r0, [r4, #36]	; 0x24
   1e578:	cmp	r0, #0
   1e57c:	popne	{r4, pc}
   1e580:	ldr	r3, [r4, #24]
   1e584:	mov	r2, r0
   1e588:	cmp	r3, #0
   1e58c:	movne	r0, r3
   1e590:	ldrne	r1, [pc, #432]	; 1e748 <pclose@plt+0xb49c>
   1e594:	ldreq	r1, [pc, #432]	; 1e74c <pclose@plt+0xb4a0>
   1e598:	ldreq	r0, [pc, #400]	; 1e730 <pclose@plt+0xb484>
   1e59c:	bl	18c34 <pclose@plt+0x5988>
   1e5a0:	str	r0, [r4, #36]	; 0x24
   1e5a4:	pop	{r4, pc}
   1e5a8:	ldr	r0, [r4, #40]	; 0x28
   1e5ac:	cmp	r0, #0
   1e5b0:	popne	{r4, pc}
   1e5b4:	ldr	r3, [r4, #24]
   1e5b8:	mov	r2, r0
   1e5bc:	cmp	r3, #0
   1e5c0:	movne	r0, r3
   1e5c4:	ldrne	r1, [pc, #388]	; 1e750 <pclose@plt+0xb4a4>
   1e5c8:	ldreq	r1, [pc, #388]	; 1e754 <pclose@plt+0xb4a8>
   1e5cc:	ldreq	r0, [pc, #368]	; 1e744 <pclose@plt+0xb498>
   1e5d0:	bl	18c34 <pclose@plt+0x5988>
   1e5d4:	str	r0, [r4, #40]	; 0x28
   1e5d8:	pop	{r4, pc}
   1e5dc:	ldr	r0, [r4, #48]	; 0x30
   1e5e0:	cmp	r0, #0
   1e5e4:	popne	{r4, pc}
   1e5e8:	ldr	r3, [r4, #24]
   1e5ec:	mov	r2, r0
   1e5f0:	cmp	r3, #0
   1e5f4:	movne	r0, r3
   1e5f8:	ldrne	r1, [pc, #344]	; 1e758 <pclose@plt+0xb4ac>
   1e5fc:	ldreq	r1, [pc, #344]	; 1e75c <pclose@plt+0xb4b0>
   1e600:	ldreq	r0, [pc, #316]	; 1e744 <pclose@plt+0xb498>
   1e604:	bl	18c34 <pclose@plt+0x5988>
   1e608:	str	r0, [r4, #48]	; 0x30
   1e60c:	pop	{r4, pc}
   1e610:	ldr	r0, [r4, #52]	; 0x34
   1e614:	cmp	r0, #0
   1e618:	popne	{r4, pc}
   1e61c:	ldr	r3, [r4, #24]
   1e620:	mov	r2, r0
   1e624:	cmp	r3, #0
   1e628:	movne	r0, r3
   1e62c:	ldrne	r1, [pc, #300]	; 1e760 <pclose@plt+0xb4b4>
   1e630:	ldreq	r1, [pc, #300]	; 1e764 <pclose@plt+0xb4b8>
   1e634:	ldreq	r0, [pc, #244]	; 1e730 <pclose@plt+0xb484>
   1e638:	bl	18c34 <pclose@plt+0x5988>
   1e63c:	str	r0, [r4, #52]	; 0x34
   1e640:	pop	{r4, pc}
   1e644:	ldr	r0, [r4, #56]	; 0x38
   1e648:	cmp	r0, #0
   1e64c:	popne	{r4, pc}
   1e650:	ldr	r3, [r4, #24]
   1e654:	mov	r2, r0
   1e658:	cmp	r3, #0
   1e65c:	movne	r0, r3
   1e660:	ldrne	r1, [pc, #256]	; 1e768 <pclose@plt+0xb4bc>
   1e664:	ldreq	r1, [pc, #256]	; 1e76c <pclose@plt+0xb4c0>
   1e668:	ldreq	r0, [pc, #192]	; 1e730 <pclose@plt+0xb484>
   1e66c:	bl	18c34 <pclose@plt+0x5988>
   1e670:	str	r0, [r4, #56]	; 0x38
   1e674:	pop	{r4, pc}
   1e678:	ldr	r0, [r4, #64]	; 0x40
   1e67c:	cmp	r0, #0
   1e680:	popne	{r4, pc}
   1e684:	ldr	r3, [r4, #24]
   1e688:	mov	r2, r0
   1e68c:	cmp	r3, #0
   1e690:	movne	r0, r3
   1e694:	ldrne	r1, [pc, #212]	; 1e770 <pclose@plt+0xb4c4>
   1e698:	ldreq	r1, [pc, #212]	; 1e774 <pclose@plt+0xb4c8>
   1e69c:	ldreq	r0, [pc, #140]	; 1e730 <pclose@plt+0xb484>
   1e6a0:	bl	18c34 <pclose@plt+0x5988>
   1e6a4:	str	r0, [r4, #64]	; 0x40
   1e6a8:	pop	{r4, pc}
   1e6ac:	ldr	r0, [r4, #68]	; 0x44
   1e6b0:	cmp	r0, #0
   1e6b4:	popne	{r4, pc}
   1e6b8:	ldr	r3, [r4, #24]
   1e6bc:	mov	r2, r0
   1e6c0:	cmp	r3, #0
   1e6c4:	movne	r0, r3
   1e6c8:	ldrne	r1, [pc, #168]	; 1e778 <pclose@plt+0xb4cc>
   1e6cc:	ldreq	r1, [pc, #168]	; 1e77c <pclose@plt+0xb4d0>
   1e6d0:	ldreq	r0, [pc, #88]	; 1e730 <pclose@plt+0xb484>
   1e6d4:	bl	18c34 <pclose@plt+0x5988>
   1e6d8:	str	r0, [r4, #68]	; 0x44
   1e6dc:	pop	{r4, pc}
   1e6e0:	ldr	r0, [r4, #44]	; 0x2c
   1e6e4:	cmp	r0, #0
   1e6e8:	popne	{r4, pc}
   1e6ec:	ldr	r3, [r4, #24]
   1e6f0:	mov	r2, r0
   1e6f4:	cmp	r3, #0
   1e6f8:	movne	r0, r3
   1e6fc:	ldrne	r1, [pc, #124]	; 1e780 <pclose@plt+0xb4d4>
   1e700:	ldreq	r1, [pc, #124]	; 1e784 <pclose@plt+0xb4d8>
   1e704:	ldreq	r0, [pc, #56]	; 1e744 <pclose@plt+0xb498>
   1e708:	bl	18c34 <pclose@plt+0x5988>
   1e70c:	str	r0, [r4, #44]	; 0x2c
   1e710:	pop	{r4, pc}
   1e714:	ldr	r2, [pc, #108]	; 1e788 <pclose@plt+0xb4dc>
   1e718:	ldr	r1, [pc, #108]	; 1e78c <pclose@plt+0xb4e0>
   1e71c:	ldr	r0, [pc, #108]	; 1e790 <pclose@plt+0xb4e4>
   1e720:	bl	1cd10 <pclose@plt+0x9a64>
   1e724:	andeq	lr, r3, r8, ror #12
   1e728:	andeq	fp, r2, r0, lsr #10
   1e72c:	andeq	fp, r2, r4, lsr #10
   1e730:	andeq	fp, r2, r8, lsr r3
   1e734:	andeq	fp, r2, r8, asr #8
   1e738:	andeq	fp, r2, ip, asr r4
   1e73c:	andeq	fp, r2, r8, ror #8
   1e740:	andeq	fp, r2, ip, ror #8
   1e744:	muleq	r2, r4, r3
   1e748:	andeq	fp, r2, r8, ror r4
   1e74c:	andeq	fp, r2, r0, lsl #9
   1e750:	andeq	fp, r2, ip, lsl #9
   1e754:	andeq	fp, r2, r4, lsr #9
   1e758:	ldrdeq	fp, [r2], -r0
   1e75c:	andeq	fp, r2, ip, ror #9
   1e760:	andeq	fp, r2, r0, lsl #10
   1e764:	andeq	fp, r2, ip, lsl #10
   1e768:	andeq	fp, r2, r4, lsl r5
   1e76c:	andeq	fp, r2, r8, lsl r5
   1e770:	andeq	fp, r2, ip, lsr #10
   1e774:	andeq	fp, r2, r8, asr #10
   1e778:	andeq	fp, r2, ip, asr r5
   1e77c:	andeq	fp, r2, ip, ror #10
   1e780:			; <UNDEFINED> instruction: 0x0002b4b8
   1e784:	andeq	fp, r2, r0, asr #9
   1e788:	andeq	fp, r2, r4, lsr #6
   1e78c:	andeq	r0, r0, lr, ror r4
   1e790:	strdeq	fp, [r2], -ip
   1e794:	mov	r0, #1
   1e798:	b	1dcc4 <pclose@plt+0xaa18>
   1e79c:	ldr	r2, [pc, #748]	; 1ea90 <pclose@plt+0xb7e4>
   1e7a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e7a4:	add	r3, r1, #7
   1e7a8:	cmp	r3, r2
   1e7ac:	bhi	1e98c <pclose@plt+0xb6e0>
   1e7b0:	ldr	r2, [pc, #732]	; 1ea94 <pclose@plt+0xb7e8>
   1e7b4:	lsr	r8, r3, #3
   1e7b8:	mov	r9, r1
   1e7bc:	mov	r4, r0
   1e7c0:	umull	r1, r0, r2, r8
   1e7c4:	umull	r2, r3, r2, r3
   1e7c8:	lsr	r0, r0, #2
   1e7cc:	lsr	r3, r3, #5
   1e7d0:	add	r0, r0, r0, lsl #2
   1e7d4:	sub	r0, r8, r0
   1e7d8:	add	r3, r0, r3, lsl #2
   1e7dc:	lsl	r3, r3, #1
   1e7e0:	cmp	r0, #2
   1e7e4:	movhi	r0, r3
   1e7e8:	addls	r0, r3, #1
   1e7ec:	bl	129d0 <gcry_malloc@plt>
   1e7f0:	subs	sl, r0, #0
   1e7f4:	beq	1e984 <pclose@plt+0xb6d8>
   1e7f8:	cmp	r8, #4
   1e7fc:	bls	1ea88 <pclose@plt+0xb7dc>
   1e800:	ldr	r0, [pc, #656]	; 1ea98 <pclose@plt+0xb7ec>
   1e804:	add	r2, r4, #5
   1e808:	add	r3, sl, #8
   1e80c:	ldrb	lr, [r2, #-4]
   1e810:	ldrb	r4, [r2, #-3]
   1e814:	ldrb	fp, [r2, #-5]
   1e818:	ldrb	ip, [r2, #-2]
   1e81c:	ldrb	r1, [r2, #-1]
   1e820:	lsl	r6, lr, #4
   1e824:	lsl	r7, fp, #2
   1e828:	lsl	r5, r4, #1
   1e82c:	and	r6, r6, #16
   1e830:	orr	r6, r6, r4, lsr #4
   1e834:	and	r7, r7, #28
   1e838:	lsl	r4, ip, #3
   1e83c:	and	r5, r5, #30
   1e840:	orr	r7, r7, lr, lsr #6
   1e844:	orr	r5, r5, ip, lsr #7
   1e848:	asr	lr, lr, #1
   1e84c:	and	r4, r4, #24
   1e850:	asr	ip, ip, #2
   1e854:	orr	r4, r4, r1, lsr #5
   1e858:	and	lr, lr, #31
   1e85c:	and	ip, ip, #31
   1e860:	and	r1, r1, #31
   1e864:	ldrb	ip, [r0, ip]
   1e868:	ldrb	r4, [r0, r4]
   1e86c:	ldrb	fp, [r0, fp, lsr #3]
   1e870:	ldrb	r7, [r0, r7]
   1e874:	ldrb	lr, [r0, lr]
   1e878:	ldrb	r6, [r0, r6]
   1e87c:	ldrb	r5, [r0, r5]
   1e880:	ldrb	r1, [r0, r1]
   1e884:	sub	r8, r8, #5
   1e888:	cmp	r8, #4
   1e88c:	strb	ip, [r3, #-3]
   1e890:	strb	r4, [r3, #-2]
   1e894:	strb	fp, [r3, #-8]
   1e898:	strb	r7, [r3, #-7]
   1e89c:	strb	lr, [r3, #-6]
   1e8a0:	strb	r6, [r3, #-5]
   1e8a4:	strb	r5, [r3, #-4]
   1e8a8:	strb	r1, [r3, #-1]
   1e8ac:	mov	r4, r2
   1e8b0:	mov	ip, r3
   1e8b4:	add	r2, r2, #5
   1e8b8:	add	r3, r3, #8
   1e8bc:	bhi	1e80c <pclose@plt+0xb560>
   1e8c0:	sub	r8, r8, #1
   1e8c4:	cmp	r8, #3
   1e8c8:	ldrls	pc, [pc, r8, lsl #2]
   1e8cc:	b	1e96c <pclose@plt+0xb6c0>
   1e8d0:	andeq	lr, r1, r4, lsr #19
   1e8d4:	ldrdeq	lr, [r1], -r0
   1e8d8:	andeq	lr, r1, r0, lsr #20
   1e8dc:	andeq	lr, r1, r0, ror #17
   1e8e0:	ldrb	r0, [r4, #1]
   1e8e4:	ldrb	r3, [r4, #2]
   1e8e8:	ldrb	r5, [r4]
   1e8ec:	ldrb	r2, [r4, #3]
   1e8f0:	lsl	lr, r0, #4
   1e8f4:	and	lr, lr, #16
   1e8f8:	orr	lr, lr, r3, lsr #4
   1e8fc:	lsl	r4, r5, #2
   1e900:	lsl	r3, r3, #1
   1e904:	and	r4, r4, #28
   1e908:	and	r3, r3, #30
   1e90c:	ldr	r1, [pc, #388]	; 1ea98 <pclose@plt+0xb7ec>
   1e910:	orr	r3, r3, r2, lsr #7
   1e914:	orr	r4, r4, r0, lsr #6
   1e918:	asr	r6, r2, #2
   1e91c:	asr	r0, r0, #1
   1e920:	lsl	r2, r2, #3
   1e924:	and	r0, r0, #31
   1e928:	and	r6, r6, #31
   1e92c:	and	r2, r2, #24
   1e930:	ldrb	r7, [r1, r0]
   1e934:	ldrb	r8, [r1, lr]
   1e938:	ldrb	r4, [r1, r4]
   1e93c:	ldrb	lr, [r1, r3]
   1e940:	ldrb	r5, [r1, r5, lsr #3]
   1e944:	ldrb	r0, [r1, r6]
   1e948:	ldrb	r3, [r1, r2]
   1e94c:	strb	r4, [ip, #1]
   1e950:	strb	r5, [ip]
   1e954:	strb	r7, [ip, #2]
   1e958:	strb	r8, [ip, #3]
   1e95c:	strb	lr, [ip, #4]
   1e960:	strb	r0, [ip, #5]
   1e964:	strb	r3, [ip, #6]
   1e968:	add	ip, ip, #7
   1e96c:	ldr	r1, [pc, #288]	; 1ea94 <pclose@plt+0xb7e8>
   1e970:	add	r9, r9, #4
   1e974:	mov	r3, #0
   1e978:	umull	r2, r9, r1, r9
   1e97c:	strb	r3, [ip]
   1e980:	strb	r3, [sl, r9, lsr #2]
   1e984:	mov	r0, sl
   1e988:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e98c:	bl	12f10 <__errno_location@plt>
   1e990:	mov	sl, #0
   1e994:	mov	r3, #22
   1e998:	str	r3, [r0]
   1e99c:	mov	r0, sl
   1e9a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9a4:	ldrb	r0, [r4]
   1e9a8:	ldr	r1, [pc, #232]	; 1ea98 <pclose@plt+0xb7ec>
   1e9ac:	mov	r3, ip
   1e9b0:	lsl	r2, r0, #2
   1e9b4:	and	r2, r2, #28
   1e9b8:	ldrb	r0, [r1, r0, lsr #3]
   1e9bc:	ldrb	r2, [r1, r2]
   1e9c0:	strb	r0, [r3], #2
   1e9c4:	strb	r2, [ip, #1]
   1e9c8:	mov	ip, r3
   1e9cc:	b	1e96c <pclose@plt+0xb6c0>
   1e9d0:	ldrb	lr, [r4]
   1e9d4:	ldrb	r3, [r4, #1]
   1e9d8:	ldr	r1, [pc, #184]	; 1ea98 <pclose@plt+0xb7ec>
   1e9dc:	add	ip, ip, #4
   1e9e0:	lsl	r2, lr, #2
   1e9e4:	and	r2, r2, #28
   1e9e8:	orr	r2, r2, r3, lsr #6
   1e9ec:	asr	r0, r3, #1
   1e9f0:	lsl	r3, r3, #4
   1e9f4:	and	r0, r0, #31
   1e9f8:	and	r3, r3, #16
   1e9fc:	ldrb	r4, [r1, r2]
   1ea00:	ldrb	lr, [r1, lr, lsr #3]
   1ea04:	ldrb	r2, [r1, r0]
   1ea08:	ldrb	r3, [r1, r3]
   1ea0c:	strb	r4, [ip, #-3]
   1ea10:	strb	lr, [ip, #-4]
   1ea14:	strb	r2, [ip, #-2]
   1ea18:	strb	r3, [ip, #-1]
   1ea1c:	b	1e96c <pclose@plt+0xb6c0>
   1ea20:	ldrb	r3, [r4, #1]
   1ea24:	ldrb	lr, [r4]
   1ea28:	ldrb	r2, [r4, #2]
   1ea2c:	ldr	r1, [pc, #100]	; 1ea98 <pclose@plt+0xb7ec>
   1ea30:	lsl	r0, r3, #4
   1ea34:	lsl	r4, lr, #2
   1ea38:	and	r4, r4, #28
   1ea3c:	and	r0, r0, #16
   1ea40:	orr	r4, r4, r3, lsr #6
   1ea44:	orr	r0, r0, r2, lsr #4
   1ea48:	asr	r3, r3, #1
   1ea4c:	lsl	r2, r2, #1
   1ea50:	and	r3, r3, #31
   1ea54:	and	r2, r2, #30
   1ea58:	ldrb	r5, [r1, r4]
   1ea5c:	ldrb	r4, [r1, lr, lsr #3]
   1ea60:	ldrb	lr, [r1, r0]
   1ea64:	ldrb	r0, [r1, r3]
   1ea68:	ldrb	r3, [r1, r2]
   1ea6c:	strb	r5, [ip, #1]
   1ea70:	strb	r4, [ip]
   1ea74:	strb	lr, [ip, #3]
   1ea78:	strb	r0, [ip, #2]
   1ea7c:	strb	r3, [ip, #4]
   1ea80:	add	ip, ip, #5
   1ea84:	b	1e96c <pclose@plt+0xb6c0>
   1ea88:	mov	ip, sl
   1ea8c:	b	1e8c0 <pclose@plt+0xb614>
   1ea90:	andeq	r0, r8, r7
   1ea94:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1ea98:	andeq	fp, r2, r4, lsl #11
   1ea9c:	push	{r0, r1, r2, r3}
   1eaa0:	push	{r4, lr}
   1eaa4:	sub	sp, sp, #16
   1eaa8:	ldr	r4, [pc, #100]	; 1eb14 <pclose@plt+0xb868>
   1eaac:	add	r3, sp, #28
   1eab0:	mov	r2, r3
   1eab4:	ldr	ip, [r4]
   1eab8:	ldr	r1, [sp, #24]
   1eabc:	add	r0, sp, #8
   1eac0:	str	ip, [sp, #12]
   1eac4:	str	r3, [sp, #4]
   1eac8:	bl	12f7c <gpgrt_vasprintf@plt>
   1eacc:	cmp	r0, #0
   1ead0:	blt	1eaf8 <pclose@plt+0xb84c>
   1ead4:	ldr	r2, [sp, #12]
   1ead8:	ldr	r3, [r4]
   1eadc:	ldr	r0, [sp, #8]
   1eae0:	cmp	r2, r3
   1eae4:	bne	1eb10 <pclose@plt+0xb864>
   1eae8:	add	sp, sp, #16
   1eaec:	pop	{r4, lr}
   1eaf0:	add	sp, sp, #16
   1eaf4:	bx	lr
   1eaf8:	bl	12f10 <__errno_location@plt>
   1eafc:	ldr	r0, [r0]
   1eb00:	bl	12db4 <strerror@plt>
   1eb04:	mov	r1, r0
   1eb08:	ldr	r0, [pc, #8]	; 1eb18 <pclose@plt+0xb86c>
   1eb0c:	bl	1ca34 <pclose@plt+0x9788>
   1eb10:	bl	12bb0 <__stack_chk_fail@plt>
   1eb14:	andeq	sp, r3, r0, asr #21
   1eb18:	andeq	fp, r2, r4, lsr #11
   1eb1c:	push	{r0, r1, r2, r3}
   1eb20:	push	{r4, lr}
   1eb24:	sub	sp, sp, #16
   1eb28:	ldr	r4, [pc, #76]	; 1eb7c <pclose@plt+0xb8d0>
   1eb2c:	add	r3, sp, #28
   1eb30:	mov	r2, r3
   1eb34:	ldr	ip, [r4]
   1eb38:	ldr	r1, [sp, #24]
   1eb3c:	add	r0, sp, #8
   1eb40:	str	r3, [sp, #4]
   1eb44:	str	ip, [sp, #12]
   1eb48:	bl	12f7c <gpgrt_vasprintf@plt>
   1eb4c:	ldr	r2, [sp, #12]
   1eb50:	ldr	r3, [r4]
   1eb54:	cmp	r0, #0
   1eb58:	movlt	r0, #0
   1eb5c:	ldrge	r0, [sp, #8]
   1eb60:	cmp	r2, r3
   1eb64:	bne	1eb78 <pclose@plt+0xb8cc>
   1eb68:	add	sp, sp, #16
   1eb6c:	pop	{r4, lr}
   1eb70:	add	sp, sp, #16
   1eb74:	bx	lr
   1eb78:	bl	12bb0 <__stack_chk_fail@plt>
   1eb7c:	andeq	sp, r3, r0, asr #21
   1eb80:	push	{r4, lr}
   1eb84:	mov	r4, r0
   1eb88:	ldr	r0, [r0, #8]
   1eb8c:	cmp	r0, #0
   1eb90:	beq	1ebac <pclose@plt+0xb900>
   1eb94:	ldr	r1, [r4]
   1eb98:	bl	24674 <pclose@plt+0x113c8>
   1eb9c:	ldr	r0, [r4, #8]
   1eba0:	bl	12b50 <gcry_free@plt>
   1eba4:	mov	r3, #0
   1eba8:	str	r3, [r4, #8]
   1ebac:	ldr	r0, [r4, #12]
   1ebb0:	bl	13108 <gpg_err_set_errno@plt>
   1ebb4:	mov	r0, #0
   1ebb8:	pop	{r4, pc}
   1ebbc:	push	{r4, lr}
   1ebc0:	mov	r4, r0
   1ebc4:	mov	r3, #0
   1ebc8:	str	r1, [r0, #4]
   1ebcc:	mov	r0, r1
   1ebd0:	str	r3, [r4]
   1ebd4:	str	r3, [r4, #12]
   1ebd8:	bl	129d0 <gcry_malloc@plt>
   1ebdc:	cmp	r0, #0
   1ebe0:	str	r0, [r4, #8]
   1ebe4:	popne	{r4, pc}
   1ebe8:	bl	12f10 <__errno_location@plt>
   1ebec:	ldr	r3, [r0]
   1ebf0:	str	r3, [r4, #12]
   1ebf4:	pop	{r4, pc}
   1ebf8:	push	{r4, lr}
   1ebfc:	mov	r4, r0
   1ec00:	mov	r3, #0
   1ec04:	str	r1, [r0, #4]
   1ec08:	mov	r0, r1
   1ec0c:	str	r3, [r4]
   1ec10:	str	r3, [r4, #12]
   1ec14:	bl	12d54 <gcry_malloc_secure@plt>
   1ec18:	cmp	r0, #0
   1ec1c:	str	r0, [r4, #8]
   1ec20:	popne	{r4, pc}
   1ec24:	bl	12f10 <__errno_location@plt>
   1ec28:	ldr	r3, [r0]
   1ec2c:	str	r3, [r4, #12]
   1ec30:	pop	{r4, pc}
   1ec34:	ldr	r3, [r0, #12]
   1ec38:	cmp	r3, #0
   1ec3c:	bxne	lr
   1ec40:	ldr	r2, [r0]
   1ec44:	cmp	r2, r1
   1ec48:	bhi	1ec54 <pclose@plt+0xb9a8>
   1ec4c:	str	r3, [r0]
   1ec50:	bx	lr
   1ec54:	ldr	r3, [r0, #8]
   1ec58:	sub	r2, r2, r1
   1ec5c:	str	r2, [r0]
   1ec60:	add	r1, r3, r1
   1ec64:	mov	r0, r3
   1ec68:	b	12ab4 <memmove@plt>
   1ec6c:	ldr	ip, [r0, #12]
   1ec70:	clz	r3, r2
   1ec74:	cmp	ip, #0
   1ec78:	lsr	r3, r3, #5
   1ec7c:	movne	r3, #1
   1ec80:	cmp	r3, #0
   1ec84:	bxne	lr
   1ec88:	ldr	r3, [r0]
   1ec8c:	push	{r4, r5, r6, lr}
   1ec90:	mov	r6, r1
   1ec94:	ldr	r1, [r0, #4]
   1ec98:	mov	r5, r2
   1ec9c:	add	r2, r3, r2
   1eca0:	cmp	r2, r1
   1eca4:	mov	r4, r0
   1eca8:	ldr	r0, [r0, #8]
   1ecac:	bcc	1ecd0 <pclose@plt+0xba24>
   1ecb0:	add	r3, r5, #1024	; 0x400
   1ecb4:	add	r1, r3, r1
   1ecb8:	str	r1, [r4, #4]
   1ecbc:	bl	13018 <gcry_realloc@plt>
   1ecc0:	cmp	r0, #0
   1ecc4:	beq	1ecf0 <pclose@plt+0xba44>
   1ecc8:	ldr	r3, [r4]
   1eccc:	str	r0, [r4, #8]
   1ecd0:	mov	r2, r5
   1ecd4:	mov	r1, r6
   1ecd8:	add	r0, r0, r3
   1ecdc:	bl	12b2c <memcpy@plt>
   1ece0:	ldr	r2, [r4]
   1ece4:	add	r5, r2, r5
   1ece8:	str	r5, [r4]
   1ecec:	pop	{r4, r5, r6, pc}
   1ecf0:	bl	12f10 <__errno_location@plt>
   1ecf4:	ldr	r1, [r4]
   1ecf8:	ldr	r3, [r0]
   1ecfc:	ldr	r0, [r4, #8]
   1ed00:	cmp	r3, #0
   1ed04:	moveq	r3, #12
   1ed08:	str	r3, [r4, #12]
   1ed0c:	pop	{r4, r5, r6, lr}
   1ed10:	b	24674 <pclose@plt+0x113c8>
   1ed14:	cmp	r1, #0
   1ed18:	beq	1ed2c <pclose@plt+0xba80>
   1ed1c:	push	{r4, lr}
   1ed20:	bl	1ec6c <pclose@plt+0xb9c0>
   1ed24:	mov	r0, #0
   1ed28:	pop	{r4, pc}
   1ed2c:	mov	r0, #0
   1ed30:	bx	lr
   1ed34:	push	{r4, r5, r6, lr}
   1ed38:	mov	r5, r0
   1ed3c:	mov	r0, r1
   1ed40:	mov	r4, r1
   1ed44:	bl	12e8c <strlen@plt>
   1ed48:	mov	r1, r4
   1ed4c:	mov	r2, r0
   1ed50:	mov	r0, r5
   1ed54:	pop	{r4, r5, r6, lr}
   1ed58:	b	1ec6c <pclose@plt+0xb9c0>
   1ed5c:	push	{r1, r2, r3}
   1ed60:	push	{r4, r5, r6, lr}
   1ed64:	mov	r5, r0
   1ed68:	ldr	r4, [pc, #136]	; 1edf8 <pclose@plt+0xbb4c>
   1ed6c:	sub	sp, sp, #20
   1ed70:	add	r3, sp, #40	; 0x28
   1ed74:	ldr	r0, [r4]
   1ed78:	mov	r2, r3
   1ed7c:	str	r0, [sp, #12]
   1ed80:	ldr	r1, [sp, #36]	; 0x24
   1ed84:	add	r0, sp, #8
   1ed88:	str	r3, [sp, #4]
   1ed8c:	bl	12f7c <gpgrt_vasprintf@plt>
   1ed90:	cmp	r0, #0
   1ed94:	blt	1eddc <pclose@plt+0xbb30>
   1ed98:	ldr	r6, [sp, #8]
   1ed9c:	mov	r0, r6
   1eda0:	bl	12e8c <strlen@plt>
   1eda4:	mov	r1, r6
   1eda8:	mov	r2, r0
   1edac:	mov	r0, r5
   1edb0:	bl	1ec6c <pclose@plt+0xb9c0>
   1edb4:	ldr	r0, [sp, #8]
   1edb8:	bl	12b50 <gcry_free@plt>
   1edbc:	ldr	r2, [sp, #12]
   1edc0:	ldr	r3, [r4]
   1edc4:	cmp	r2, r3
   1edc8:	bne	1edf4 <pclose@plt+0xbb48>
   1edcc:	add	sp, sp, #20
   1edd0:	pop	{r4, r5, r6, lr}
   1edd4:	add	sp, sp, #12
   1edd8:	bx	lr
   1eddc:	bl	12f10 <__errno_location@plt>
   1ede0:	ldr	r3, [r0]
   1ede4:	cmp	r3, #0
   1ede8:	moveq	r3, #12
   1edec:	str	r3, [r5, #12]
   1edf0:	b	1edbc <pclose@plt+0xbb10>
   1edf4:	bl	12bb0 <__stack_chk_fail@plt>
   1edf8:	andeq	sp, r3, r0, asr #21
   1edfc:	ldr	r2, [r0, #12]
   1ee00:	mov	r3, r0
   1ee04:	cmp	r2, #0
   1ee08:	bne	1ee30 <pclose@plt+0xbb84>
   1ee0c:	cmp	r1, #0
   1ee10:	ldr	r0, [r0, #8]
   1ee14:	ldrne	r2, [r3]
   1ee18:	strne	r2, [r1]
   1ee1c:	mov	r1, #0
   1ee20:	mov	r2, #12
   1ee24:	str	r1, [r3, #8]
   1ee28:	str	r2, [r3, #12]
   1ee2c:	bx	lr
   1ee30:	b	1eb80 <pclose@plt+0xb8d4>
   1ee34:	push	{r4, r5, r6, lr}
   1ee38:	sub	sp, sp, #8
   1ee3c:	ldr	r6, [pc, #148]	; 1eed8 <pclose@plt+0xbc2c>
   1ee40:	subs	r5, r1, #0
   1ee44:	ldr	r3, [r6]
   1ee48:	str	r3, [sp, #4]
   1ee4c:	beq	1eeb8 <pclose@plt+0xbc0c>
   1ee50:	ldr	r3, [r0, #12]
   1ee54:	cmp	r3, #0
   1ee58:	bne	1eec8 <pclose@plt+0xbc1c>
   1ee5c:	ldr	r1, [r0]
   1ee60:	mov	r2, #12
   1ee64:	ldr	r4, [r0, #8]
   1ee68:	str	r1, [r5]
   1ee6c:	str	r3, [r0, #8]
   1ee70:	str	r2, [r0, #12]
   1ee74:	cmp	r4, #0
   1ee78:	beq	1ee88 <pclose@plt+0xbbdc>
   1ee7c:	ldr	r1, [r5]
   1ee80:	cmp	r1, #0
   1ee84:	bne	1eea4 <pclose@plt+0xbbf8>
   1ee88:	ldr	r2, [sp, #4]
   1ee8c:	ldr	r3, [r6]
   1ee90:	mov	r0, r4
   1ee94:	cmp	r2, r3
   1ee98:	bne	1eed4 <pclose@plt+0xbc28>
   1ee9c:	add	sp, sp, #8
   1eea0:	pop	{r4, r5, r6, pc}
   1eea4:	mov	r0, r4
   1eea8:	bl	13018 <gcry_realloc@plt>
   1eeac:	cmp	r0, #0
   1eeb0:	movne	r4, r0
   1eeb4:	b	1ee88 <pclose@plt+0xbbdc>
   1eeb8:	ldr	r3, [r0, #12]
   1eebc:	mov	r5, sp
   1eec0:	cmp	r3, #0
   1eec4:	beq	1ee5c <pclose@plt+0xbbb0>
   1eec8:	bl	1eb80 <pclose@plt+0xb8d4>
   1eecc:	mov	r4, r0
   1eed0:	b	1ee74 <pclose@plt+0xbbc8>
   1eed4:	bl	12bb0 <__stack_chk_fail@plt>
   1eed8:	andeq	sp, r3, r0, asr #21
   1eedc:	mov	r3, r0
   1eee0:	ldr	r0, [r0, #12]
   1eee4:	cmp	r0, #0
   1eee8:	bne	1ef00 <pclose@plt+0xbc54>
   1eeec:	cmp	r1, #0
   1eef0:	ldr	r0, [r3, #8]
   1eef4:	ldrne	r3, [r3]
   1eef8:	strne	r3, [r1]
   1eefc:	bx	lr
   1ef00:	push	{r4, lr}
   1ef04:	bl	13108 <gpg_err_set_errno@plt>
   1ef08:	mov	r0, #0
   1ef0c:	pop	{r4, pc}
   1ef10:	push	{r4, lr}
   1ef14:	ldr	r4, [pc, #72]	; 1ef64 <pclose@plt+0xbcb8>
   1ef18:	ldr	r3, [r4]
   1ef1c:	cmp	r3, #0
   1ef20:	popeq	{r4, pc}
   1ef24:	mov	r3, #0
   1ef28:	ldr	r0, [r4, #4]
   1ef2c:	str	r3, [r4]
   1ef30:	bl	12fd0 <fileno@plt>
   1ef34:	add	r2, r4, #8
   1ef38:	mov	r1, #2
   1ef3c:	bl	12cd0 <tcsetattr@plt>
   1ef40:	cmp	r0, #0
   1ef44:	popeq	{r4, pc}
   1ef48:	bl	12f10 <__errno_location@plt>
   1ef4c:	ldr	r0, [r0]
   1ef50:	bl	12db4 <strerror@plt>
   1ef54:	pop	{r4, lr}
   1ef58:	mov	r1, r0
   1ef5c:	ldr	r0, [pc, #4]	; 1ef68 <pclose@plt+0xbcbc>
   1ef60:	b	1c9b0 <pclose@plt+0x9704>
   1ef64:			; <UNDEFINED> instruction: 0x0003e6b0
   1ef68:	andeq	fp, r2, r4, asr #11
   1ef6c:	push	{r4, r5, lr}
   1ef70:	sub	sp, sp, #20
   1ef74:	ldr	r4, [pc, #108]	; 1efe8 <pclose@plt+0xbd3c>
   1ef78:	ldr	r5, [pc, #108]	; 1efec <pclose@plt+0xbd40>
   1ef7c:	ldr	r2, [r4, #68]	; 0x44
   1ef80:	ldr	r3, [r5]
   1ef84:	cmp	r2, #0
   1ef88:	str	r3, [sp, #12]
   1ef8c:	beq	1efb8 <pclose@plt+0xbd0c>
   1ef90:	ldr	r0, [r4, #72]	; 0x48
   1ef94:	ldr	r2, [sp, #12]
   1ef98:	ldr	r1, [pc, #80]	; 1eff0 <pclose@plt+0xbd44>
   1ef9c:	ldr	r3, [r5]
   1efa0:	cmp	r0, #0
   1efa4:	moveq	r0, r1
   1efa8:	cmp	r2, r3
   1efac:	bne	1efe4 <pclose@plt+0xbd38>
   1efb0:	add	sp, sp, #20
   1efb4:	pop	{r4, r5, pc}
   1efb8:	mov	r0, sp
   1efbc:	bl	13288 <ctermid@plt>
   1efc0:	cmp	r0, #0
   1efc4:	beq	1efdc <pclose@plt+0xbd30>
   1efc8:	bl	12ba4 <strdup@plt>
   1efcc:	str	r0, [r4, #72]	; 0x48
   1efd0:	mov	r3, #1
   1efd4:	str	r3, [r4, #68]	; 0x44
   1efd8:	b	1ef94 <pclose@plt+0xbce8>
   1efdc:	ldr	r0, [r4, #72]	; 0x48
   1efe0:	b	1efd0 <pclose@plt+0xbd24>
   1efe4:	bl	12bb0 <__stack_chk_fail@plt>
   1efe8:			; <UNDEFINED> instruction: 0x0003e6b0
   1efec:	andeq	sp, r3, r0, asr #21
   1eff0:	ldrdeq	fp, [r2], -ip
   1eff4:	push	{r4, lr}
   1eff8:	ldr	r4, [pc, #136]	; 1f088 <pclose@plt+0xbddc>
   1effc:	ldr	r3, [r4, #76]	; 0x4c
   1f000:	cmp	r3, #0
   1f004:	popne	{r4, pc}
   1f008:	ldr	r3, [r4, #80]	; 0x50
   1f00c:	cmp	r3, #0
   1f010:	beq	1f04c <pclose@plt+0xbda0>
   1f014:	ldr	r3, [pc, #112]	; 1f08c <pclose@plt+0xbde0>
   1f018:	ldr	r0, [r3]
   1f01c:	cmp	r0, #0
   1f020:	str	r0, [r4, #4]
   1f024:	beq	1f05c <pclose@plt+0xbdb0>
   1f028:	ldr	r3, [r4, #84]	; 0x54
   1f02c:	cmp	r3, #0
   1f030:	beq	1f038 <pclose@plt+0xbd8c>
   1f034:	blx	r3
   1f038:	ldr	r0, [pc, #80]	; 1f090 <pclose@plt+0xbde4>
   1f03c:	bl	29534 <pclose@plt+0x16288>
   1f040:	mov	r3, #1
   1f044:	str	r3, [r4, #76]	; 0x4c
   1f048:	pop	{r4, pc}
   1f04c:	bl	1ef6c <pclose@plt+0xbcc0>
   1f050:	ldr	r1, [pc, #60]	; 1f094 <pclose@plt+0xbde8>
   1f054:	bl	13168 <fopen64@plt>
   1f058:	b	1f01c <pclose@plt+0xbd70>
   1f05c:	bl	1ef6c <pclose@plt+0xbcc0>
   1f060:	mov	r4, r0
   1f064:	bl	12f10 <__errno_location@plt>
   1f068:	ldr	r0, [r0]
   1f06c:	bl	12db4 <strerror@plt>
   1f070:	mov	r1, r4
   1f074:	mov	r2, r0
   1f078:	ldr	r0, [pc, #24]	; 1f098 <pclose@plt+0xbdec>
   1f07c:	bl	1c9b0 <pclose@plt+0x9704>
   1f080:	mov	r0, #2
   1f084:	bl	12e44 <exit@plt>
   1f088:			; <UNDEFINED> instruction: 0x0003e6b0
   1f08c:	muleq	r3, r8, r1
   1f090:	andeq	lr, r1, r0, lsl pc
   1f094:	andeq	fp, r2, r8, ror #11
   1f098:	andeq	fp, r2, ip, ror #11
   1f09c:	ldr	r3, [pc, #16]	; 1f0b4 <pclose@plt+0xbe08>
   1f0a0:	mov	r2, r0
   1f0a4:	cmn	r0, #1
   1f0a8:	ldr	r0, [r3, #80]	; 0x50
   1f0ac:	strne	r2, [r3, #80]	; 0x50
   1f0b0:	bx	lr
   1f0b4:			; <UNDEFINED> instruction: 0x0003e6b0
   1f0b8:	ldr	r3, [pc, #16]	; 1f0d0 <pclose@plt+0xbe24>
   1f0bc:	adds	r2, r0, #0
   1f0c0:	movne	r2, #1
   1f0c4:	ldr	r0, [r3, #88]	; 0x58
   1f0c8:	str	r2, [r3, #88]	; 0x58
   1f0cc:	bx	lr
   1f0d0:			; <UNDEFINED> instruction: 0x0003e6b0
   1f0d4:	push	{r0, r1, r2, r3}
   1f0d8:	push	{r4, r5, r6, lr}
   1f0dc:	sub	sp, sp, #8
   1f0e0:	ldr	r4, [pc, #128]	; 1f168 <pclose@plt+0xbebc>
   1f0e4:	ldr	r5, [pc, #128]	; 1f16c <pclose@plt+0xbec0>
   1f0e8:	ldr	r6, [sp, #24]
   1f0ec:	ldr	r1, [r4, #88]	; 0x58
   1f0f0:	ldr	r3, [r5]
   1f0f4:	cmp	r1, #0
   1f0f8:	str	r3, [sp, #4]
   1f0fc:	bne	1f13c <pclose@plt+0xbe90>
   1f100:	ldr	r3, [r4, #76]	; 0x4c
   1f104:	cmp	r3, #0
   1f108:	beq	1f15c <pclose@plt+0xbeb0>
   1f10c:	add	ip, sp, #28
   1f110:	mov	r3, ip
   1f114:	mov	r2, r6
   1f118:	mov	r1, #1
   1f11c:	ldr	r0, [r4, #4]
   1f120:	str	ip, [sp]
   1f124:	bl	12dc0 <__vfprintf_chk@plt>
   1f128:	ldr	r3, [r4, #92]	; 0x5c
   1f12c:	add	r3, r3, r0
   1f130:	ldr	r0, [r4, #4]
   1f134:	str	r3, [r4, #92]	; 0x5c
   1f138:	bl	12a90 <fflush@plt>
   1f13c:	ldr	r2, [sp, #4]
   1f140:	ldr	r3, [r5]
   1f144:	cmp	r2, r3
   1f148:	bne	1f164 <pclose@plt+0xbeb8>
   1f14c:	add	sp, sp, #8
   1f150:	pop	{r4, r5, r6, lr}
   1f154:	add	sp, sp, #16
   1f158:	bx	lr
   1f15c:	bl	1eff4 <pclose@plt+0xbd48>
   1f160:	b	1f10c <pclose@plt+0xbe60>
   1f164:	bl	12bb0 <__stack_chk_fail@plt>
   1f168:			; <UNDEFINED> instruction: 0x0003e6b0
   1f16c:	andeq	sp, r3, r0, asr #21
   1f170:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f174:	sub	sp, sp, #76	; 0x4c
   1f178:	ldr	r6, [pc, #624]	; 1f3f0 <pclose@plt+0xc144>
   1f17c:	ldr	sl, [pc, #624]	; 1f3f4 <pclose@plt+0xc148>
   1f180:	ldr	r2, [r6, #80]	; 0x50
   1f184:	ldr	r3, [sl]
   1f188:	cmp	r2, #0
   1f18c:	str	r3, [sp, #68]	; 0x44
   1f190:	bne	1f3e0 <pclose@plt+0xc134>
   1f194:	ldr	r5, [r6, #88]	; 0x58
   1f198:	cmp	r5, #0
   1f19c:	bne	1f3d0 <pclose@plt+0xc124>
   1f1a0:	ldr	r3, [r6, #76]	; 0x4c
   1f1a4:	mov	r4, r0
   1f1a8:	cmp	r3, #0
   1f1ac:	mov	r9, r1
   1f1b0:	beq	1f2e0 <pclose@plt+0xc034>
   1f1b4:	mov	r1, r4
   1f1b8:	mov	r3, #0
   1f1bc:	ldr	r0, [pc, #564]	; 1f3f8 <pclose@plt+0xc14c>
   1f1c0:	str	r3, [r6, #92]	; 0x5c
   1f1c4:	bl	1f0d4 <pclose@plt+0xbe28>
   1f1c8:	mov	r0, #50	; 0x32
   1f1cc:	bl	129a0 <gcry_xmalloc@plt>
   1f1d0:	cmp	r9, #0
   1f1d4:	ldr	r4, [r6, #4]
   1f1d8:	mov	r7, r0
   1f1dc:	bne	1f310 <pclose@plt+0xc064>
   1f1e0:	mov	r8, #50	; 0x32
   1f1e4:	ldr	fp, [pc, #528]	; 1f3fc <pclose@plt+0xc150>
   1f1e8:	b	1f20c <pclose@plt+0xbf60>
   1f1ec:	cmp	r4, #160	; 0xa0
   1f1f0:	ble	1f284 <pclose@plt+0xbfd8>
   1f1f4:	sub	r3, r8, #1
   1f1f8:	cmp	r3, r5
   1f1fc:	ble	1f264 <pclose@plt+0xbfb8>
   1f200:	strb	r4, [r7, r5]
   1f204:	add	r5, r5, #1
   1f208:	ldr	r4, [r6, #4]
   1f20c:	mov	r0, r4
   1f210:	bl	12fd0 <fileno@plt>
   1f214:	mov	r2, #1
   1f218:	add	r1, sp, #64	; 0x40
   1f21c:	bl	12a78 <read@plt>
   1f220:	cmp	r0, #1
   1f224:	bne	1f2a0 <pclose@plt+0xbff4>
   1f228:	ldrb	r4, [sp, #64]	; 0x40
   1f22c:	cmp	r4, #10
   1f230:	beq	1f2b4 <pclose@plt+0xc008>
   1f234:	cmp	r9, #0
   1f238:	ldreq	r3, [r6, #92]	; 0x5c
   1f23c:	addeq	r3, r3, #1
   1f240:	streq	r3, [r6, #92]	; 0x5c
   1f244:	cmp	r4, #4
   1f248:	beq	1f27c <pclose@plt+0xbfd0>
   1f24c:	cmp	r4, #9
   1f250:	bne	1f1ec <pclose@plt+0xbf40>
   1f254:	sub	r3, r8, #1
   1f258:	cmp	r3, r5
   1f25c:	mov	r4, #32
   1f260:	bgt	1f200 <pclose@plt+0xbf54>
   1f264:	add	r8, r8, #50	; 0x32
   1f268:	mov	r0, r7
   1f26c:	mov	r1, r8
   1f270:	bl	12d6c <gcry_xrealloc@plt>
   1f274:	mov	r7, r0
   1f278:	b	1f200 <pclose@plt+0xbf54>
   1f27c:	mov	r0, fp
   1f280:	bl	1c94c <pclose@plt+0x96a0>
   1f284:	bl	12e14 <__ctype_b_loc@plt>
   1f288:	lsl	r3, r4, #1
   1f28c:	ldr	r2, [r0]
   1f290:	ldrh	r3, [r2, r3]
   1f294:	tst	r3, #2
   1f298:	beq	1f1f4 <pclose@plt+0xbf48>
   1f29c:	b	1f208 <pclose@plt+0xbf5c>
   1f2a0:	ldrb	r3, [sp, #64]	; 0x40
   1f2a4:	cmp	r3, #10
   1f2a8:	movne	r5, #1
   1f2ac:	movne	r3, #4
   1f2b0:	strbne	r3, [r7]
   1f2b4:	cmp	r9, #0
   1f2b8:	bne	1f2e8 <pclose@plt+0xc03c>
   1f2bc:	mov	r3, #0
   1f2c0:	ldr	r2, [sp, #68]	; 0x44
   1f2c4:	strb	r3, [r7, r5]
   1f2c8:	ldr	r3, [sl]
   1f2cc:	mov	r0, r7
   1f2d0:	cmp	r2, r3
   1f2d4:	bne	1f3b4 <pclose@plt+0xc108>
   1f2d8:	add	sp, sp, #76	; 0x4c
   1f2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2e0:	bl	1eff4 <pclose@plt+0xbd48>
   1f2e4:	b	1f1b4 <pclose@plt+0xbf08>
   1f2e8:	ldr	r0, [r6, #4]
   1f2ec:	bl	12fd0 <fileno@plt>
   1f2f0:	ldr	r2, [pc, #264]	; 1f400 <pclose@plt+0xc154>
   1f2f4:	mov	r1, #2
   1f2f8:	bl	12cd0 <tcsetattr@plt>
   1f2fc:	cmp	r0, #0
   1f300:	bne	1f398 <pclose@plt+0xc0ec>
   1f304:	mov	r3, #0
   1f308:	str	r3, [r6]
   1f30c:	b	1f2bc <pclose@plt+0xc010>
   1f310:	mov	r0, r4
   1f314:	bl	12fd0 <fileno@plt>
   1f318:	ldr	r1, [pc, #224]	; 1f400 <pclose@plt+0xc154>
   1f31c:	bl	132a0 <tcgetattr@plt>
   1f320:	cmp	r0, #0
   1f324:	bne	1f3b8 <pclose@plt+0xc10c>
   1f328:	ldr	lr, [pc, #208]	; 1f400 <pclose@plt+0xc154>
   1f32c:	add	ip, sp, #4
   1f330:	mov	r8, #1
   1f334:	ldm	lr!, {r0, r1, r2, r3}
   1f338:	str	r8, [r6]
   1f33c:	stmia	ip!, {r0, r1, r2, r3}
   1f340:	ldm	lr!, {r0, r1, r2, r3}
   1f344:	ldr	r8, [sp, #16]
   1f348:	stmia	ip!, {r0, r1, r2, r3}
   1f34c:	bic	r8, r8, #120	; 0x78
   1f350:	ldm	lr!, {r0, r1, r2, r3}
   1f354:	stmia	ip!, {r0, r1, r2, r3}
   1f358:	ldm	lr, {r0, r1, r2}
   1f35c:	stm	ip, {r0, r1, r2}
   1f360:	mov	r0, r4
   1f364:	str	r8, [sp, #16]
   1f368:	bl	12fd0 <fileno@plt>
   1f36c:	add	r2, sp, #4
   1f370:	mov	r1, #2
   1f374:	bl	12cd0 <tcsetattr@plt>
   1f378:	cmp	r0, #0
   1f37c:	beq	1f1e0 <pclose@plt+0xbf34>
   1f380:	bl	12f10 <__errno_location@plt>
   1f384:	ldr	r0, [r0]
   1f388:	bl	12db4 <strerror@plt>
   1f38c:	mov	r1, r0
   1f390:	ldr	r0, [pc, #108]	; 1f404 <pclose@plt+0xc158>
   1f394:	bl	1ca34 <pclose@plt+0x9788>
   1f398:	bl	12f10 <__errno_location@plt>
   1f39c:	ldr	r0, [r0]
   1f3a0:	bl	12db4 <strerror@plt>
   1f3a4:	mov	r1, r0
   1f3a8:	ldr	r0, [pc, #84]	; 1f404 <pclose@plt+0xc158>
   1f3ac:	bl	1c9b0 <pclose@plt+0x9704>
   1f3b0:	b	1f304 <pclose@plt+0xc058>
   1f3b4:	bl	12bb0 <__stack_chk_fail@plt>
   1f3b8:	bl	12f10 <__errno_location@plt>
   1f3bc:	ldr	r0, [r0]
   1f3c0:	bl	12db4 <strerror@plt>
   1f3c4:	mov	r1, r0
   1f3c8:	ldr	r0, [pc, #56]	; 1f408 <pclose@plt+0xc15c>
   1f3cc:	bl	1ca34 <pclose@plt+0x9788>
   1f3d0:	ldr	r0, [pc, #52]	; 1f40c <pclose@plt+0xc160>
   1f3d4:	bl	1c9b0 <pclose@plt+0x9704>
   1f3d8:	mov	r0, #2
   1f3dc:	bl	12e44 <exit@plt>
   1f3e0:	ldr	r0, [pc, #40]	; 1f410 <pclose@plt+0xc164>
   1f3e4:	bl	1c9b0 <pclose@plt+0x9704>
   1f3e8:	mov	r0, #2
   1f3ec:	bl	12e44 <exit@plt>
   1f3f0:			; <UNDEFINED> instruction: 0x0003e6b0
   1f3f4:	andeq	sp, r3, r0, asr #21
   1f3f8:	muleq	r2, ip, sp
   1f3fc:	andeq	fp, r2, r4, lsl #13
   1f400:			; <UNDEFINED> instruction: 0x0003e6b8
   1f404:	andeq	fp, r2, r4, asr #11
   1f408:	andeq	fp, r2, ip, ror #12
   1f40c:	andeq	fp, r2, r4, lsr r6
   1f410:	andeq	fp, r2, r4, lsl #12
   1f414:	push	{r1, r2, r3}
   1f418:	cmp	r0, #0
   1f41c:	push	{r4, r5, r6, lr}
   1f420:	sub	sp, sp, #12
   1f424:	ldr	r5, [pc, #156]	; 1f4c8 <pclose@plt+0xc21c>
   1f428:	ldr	r6, [sp, #28]
   1f42c:	ldr	r3, [r5]
   1f430:	str	r3, [sp, #4]
   1f434:	bne	1f4a4 <pclose@plt+0xc1f8>
   1f438:	ldr	r4, [pc, #140]	; 1f4cc <pclose@plt+0xc220>
   1f43c:	ldr	r3, [r4, #88]	; 0x58
   1f440:	cmp	r3, #0
   1f444:	bne	1f484 <pclose@plt+0xc1d8>
   1f448:	ldr	r3, [r4, #76]	; 0x4c
   1f44c:	cmp	r3, #0
   1f450:	beq	1f4bc <pclose@plt+0xc210>
   1f454:	add	ip, sp, #32
   1f458:	mov	r3, ip
   1f45c:	mov	r2, r6
   1f460:	mov	r1, #1
   1f464:	ldr	r0, [r4, #4]
   1f468:	str	ip, [sp]
   1f46c:	bl	12dc0 <__vfprintf_chk@plt>
   1f470:	ldr	r3, [r4, #92]	; 0x5c
   1f474:	add	r3, r3, r0
   1f478:	ldr	r0, [r4, #4]
   1f47c:	str	r3, [r4, #92]	; 0x5c
   1f480:	bl	12a90 <fflush@plt>
   1f484:	ldr	r2, [sp, #4]
   1f488:	ldr	r3, [r5]
   1f48c:	cmp	r2, r3
   1f490:	bne	1f4c4 <pclose@plt+0xc218>
   1f494:	add	sp, sp, #12
   1f498:	pop	{r4, r5, r6, lr}
   1f49c:	add	sp, sp, #12
   1f4a0:	bx	lr
   1f4a4:	add	r3, sp, #32
   1f4a8:	mov	r1, r6
   1f4ac:	mov	r2, r3
   1f4b0:	str	r3, [sp]
   1f4b4:	bl	12a60 <gpgrt_vfprintf@plt>
   1f4b8:	b	1f484 <pclose@plt+0xc1d8>
   1f4bc:	bl	1eff4 <pclose@plt+0xbd48>
   1f4c0:	b	1f454 <pclose@plt+0xc1a8>
   1f4c4:	bl	12bb0 <__stack_chk_fail@plt>
   1f4c8:	andeq	sp, r3, r0, asr #21
   1f4cc:			; <UNDEFINED> instruction: 0x0003e6b0
   1f4d0:	push	{r4, r5, r6, r7, r8, lr}
   1f4d4:	mov	r4, r1
   1f4d8:	ldr	r6, [pc, #432]	; 1f690 <pclose@plt+0xc3e4>
   1f4dc:	mov	r5, r3
   1f4e0:	ldr	r1, [r6, #88]	; 0x58
   1f4e4:	adds	r3, r1, #0
   1f4e8:	movne	r3, #1
   1f4ec:	cmp	r0, #0
   1f4f0:	movne	r3, #0
   1f4f4:	cmp	r3, #0
   1f4f8:	popne	{r4, r5, r6, r7, r8, pc}
   1f4fc:	cmp	r2, #0
   1f500:	mov	r7, r0
   1f504:	beq	1f688 <pclose@plt+0xc3dc>
   1f508:	ldrsb	r3, [r4]
   1f50c:	cmp	r3, #0
   1f510:	blt	1f628 <pclose@plt+0xc37c>
   1f514:	add	lr, r4, r2
   1f518:	sub	lr, lr, #1
   1f51c:	mov	r0, r4
   1f520:	b	1f530 <pclose@plt+0xc284>
   1f524:	ldrsb	ip, [r0, #1]!
   1f528:	cmp	ip, #0
   1f52c:	blt	1f628 <pclose@plt+0xc37c>
   1f530:	cmp	lr, r0
   1f534:	bne	1f524 <pclose@plt+0xc278>
   1f538:	cmp	r5, #0
   1f53c:	cmpne	r2, r5
   1f540:	movls	r5, r2
   1f544:	cmp	r1, #0
   1f548:	beq	1f560 <pclose@plt+0xc2b4>
   1f54c:	mov	r2, r5
   1f550:	mov	r1, r4
   1f554:	mov	r0, r7
   1f558:	pop	{r4, r5, r6, r7, r8, lr}
   1f55c:	b	250b4 <pclose@plt+0x11e08>
   1f560:	ldr	r3, [r6, #76]	; 0x4c
   1f564:	cmp	r3, #0
   1f568:	bne	1f57c <pclose@plt+0xc2d0>
   1f56c:	cmp	r7, #0
   1f570:	bne	1f54c <pclose@plt+0xc2a0>
   1f574:	bl	1eff4 <pclose@plt+0xbd48>
   1f578:	b	1f584 <pclose@plt+0xc2d8>
   1f57c:	cmp	r7, #0
   1f580:	bne	1f54c <pclose@plt+0xc2a0>
   1f584:	cmp	r5, #0
   1f588:	popeq	{r4, r5, r6, r7, r8, pc}
   1f58c:	bl	12e14 <__ctype_b_loc@plt>
   1f590:	sub	r4, r4, #1
   1f594:	ldr	r8, [pc, #248]	; 1f694 <pclose@plt+0xc3e8>
   1f598:	add	r5, r4, r5
   1f59c:	mov	r7, r0
   1f5a0:	b	1f5dc <pclose@plt+0xc330>
   1f5a4:	bl	13138 <putc@plt>
   1f5a8:	ldrb	r3, [r4]
   1f5ac:	cmp	r3, #10
   1f5b0:	beq	1f670 <pclose@plt+0xc3c4>
   1f5b4:	cmp	r3, #0
   1f5b8:	mov	r2, r8
   1f5bc:	mov	r1, #1
   1f5c0:	mov	r0, #48	; 0x30
   1f5c4:	ldr	ip, [r6, #4]
   1f5c8:	bne	1f614 <pclose@plt+0xc368>
   1f5cc:	mov	r1, ip
   1f5d0:	bl	13138 <putc@plt>
   1f5d4:	cmp	r5, r4
   1f5d8:	popeq	{r4, r5, r6, r7, r8, pc}
   1f5dc:	ldrb	r3, [r4, #1]!
   1f5e0:	ldr	lr, [r7]
   1f5e4:	ldr	r2, [r6, #4]
   1f5e8:	mov	r0, #92	; 0x5c
   1f5ec:	lsl	ip, r3, #1
   1f5f0:	mov	r1, r2
   1f5f4:	ldrh	ip, [lr, ip]
   1f5f8:	tst	ip, #2
   1f5fc:	bne	1f5a4 <pclose@plt+0xc2f8>
   1f600:	mov	r0, r3
   1f604:	bl	13138 <putc@plt>
   1f608:	cmp	r5, r4
   1f60c:	bne	1f5dc <pclose@plt+0xc330>
   1f610:	pop	{r4, r5, r6, r7, r8, pc}
   1f614:	mov	r0, ip
   1f618:	bl	12fe8 <__fprintf_chk@plt>
   1f61c:	cmp	r5, r4
   1f620:	bne	1f5dc <pclose@plt+0xc330>
   1f624:	pop	{r4, r5, r6, r7, r8, pc}
   1f628:	mov	r1, r2
   1f62c:	mov	r0, r4
   1f630:	mov	r2, #0
   1f634:	bl	237bc <pclose@plt+0x10510>
   1f638:	cmp	r5, #0
   1f63c:	mov	r4, r0
   1f640:	beq	1f654 <pclose@plt+0xc3a8>
   1f644:	bl	12e8c <strlen@plt>
   1f648:	cmp	r5, r0
   1f64c:	movcc	r3, #0
   1f650:	strbcc	r3, [r4, r5]
   1f654:	mov	r0, r7
   1f658:	mov	r2, r4
   1f65c:	ldr	r1, [pc, #52]	; 1f698 <pclose@plt+0xc3ec>
   1f660:	bl	1f414 <pclose@plt+0xc168>
   1f664:	mov	r0, r4
   1f668:	pop	{r4, r5, r6, r7, r8, lr}
   1f66c:	b	12b50 <gcry_free@plt>
   1f670:	ldr	r1, [r6, #4]
   1f674:	mov	r0, #110	; 0x6e
   1f678:	bl	13138 <putc@plt>
   1f67c:	cmp	r5, r4
   1f680:	bne	1f5dc <pclose@plt+0xc330>
   1f684:	pop	{r4, r5, r6, r7, r8, pc}
   1f688:	mov	r5, r2
   1f68c:	b	1f544 <pclose@plt+0xc298>
   1f690:			; <UNDEFINED> instruction: 0x0003e6b0
   1f694:	muleq	r2, r8, r6
   1f698:	muleq	r2, ip, sp
   1f69c:	mov	r3, #0
   1f6a0:	mov	r2, r1
   1f6a4:	mov	r1, r0
   1f6a8:	mov	r0, r3
   1f6ac:	b	1f4d0 <pclose@plt+0xc224>
   1f6b0:	push	{r4, r5, r6, lr}
   1f6b4:	ldr	r4, [pc, #220]	; 1f798 <pclose@plt+0xc4ec>
   1f6b8:	ldr	r2, [r4, #80]	; 0x50
   1f6bc:	ldr	r3, [r4, #88]	; 0x58
   1f6c0:	orrs	r3, r2, r3
   1f6c4:	bne	1f750 <pclose@plt+0xc4a4>
   1f6c8:	ldr	r3, [r4, #96]	; 0x60
   1f6cc:	cmp	r3, #0
   1f6d0:	beq	1f750 <pclose@plt+0xc4a4>
   1f6d4:	ldr	r2, [r4, #100]	; 0x64
   1f6d8:	cmp	r2, #0
   1f6dc:	beq	1f750 <pclose@plt+0xc4a4>
   1f6e0:	ldr	r2, [r4, #76]	; 0x4c
   1f6e4:	mov	r5, r0
   1f6e8:	cmp	r2, #0
   1f6ec:	beq	1f78c <pclose@plt+0xc4e0>
   1f6f0:	mov	r2, #0
   1f6f4:	cmp	r5, r2
   1f6f8:	ldr	r0, [pc, #156]	; 1f79c <pclose@plt+0xc4f0>
   1f6fc:	movne	r0, r5
   1f700:	str	r2, [r4, #92]	; 0x5c
   1f704:	blx	r3
   1f708:	subs	r6, r0, #0
   1f70c:	beq	1f76c <pclose@plt+0xc4c0>
   1f710:	bl	12e8c <strlen@plt>
   1f714:	add	r0, r0, #1
   1f718:	bl	129a0 <gcry_xmalloc@plt>
   1f71c:	mov	r1, r6
   1f720:	mov	r5, r0
   1f724:	bl	12cdc <strcpy@plt>
   1f728:	mov	r0, r5
   1f72c:	bl	18364 <pclose@plt+0x50b8>
   1f730:	mov	r0, r5
   1f734:	bl	12e8c <strlen@plt>
   1f738:	cmp	r0, #2
   1f73c:	bhi	1f75c <pclose@plt+0xc4b0>
   1f740:	mov	r0, r6
   1f744:	bl	12ac0 <free@plt>
   1f748:	mov	r0, r5
   1f74c:	pop	{r4, r5, r6, pc}
   1f750:	mov	r1, #0
   1f754:	pop	{r4, r5, r6, lr}
   1f758:	b	1f170 <pclose@plt+0xbec4>
   1f75c:	ldr	r3, [r4, #100]	; 0x64
   1f760:	mov	r0, r6
   1f764:	blx	r3
   1f768:	b	1f740 <pclose@plt+0xc494>
   1f76c:	mov	r0, #2
   1f770:	bl	129a0 <gcry_xmalloc@plt>
   1f774:	mov	r3, #4
   1f778:	mov	r5, r0
   1f77c:	strb	r6, [r0, #1]
   1f780:	strb	r3, [r0]
   1f784:	mov	r0, r5
   1f788:	pop	{r4, r5, r6, pc}
   1f78c:	bl	1eff4 <pclose@plt+0xbd48>
   1f790:	ldr	r3, [r4, #96]	; 0x60
   1f794:	b	1f6f0 <pclose@plt+0xc444>
   1f798:			; <UNDEFINED> instruction: 0x0003e6b0
   1f79c:	muleq	r2, r8, r7
   1f7a0:	push	{r0, r1, r2, r3}
   1f7a4:	push	{r4, r5, lr}
   1f7a8:	sub	sp, sp, #20
   1f7ac:	ldr	r4, [pc, #120]	; 1f82c <pclose@plt+0xc580>
   1f7b0:	add	r3, sp, #36	; 0x24
   1f7b4:	mov	r2, r3
   1f7b8:	ldr	ip, [r4]
   1f7bc:	ldr	r1, [sp, #32]
   1f7c0:	add	r0, sp, #8
   1f7c4:	str	ip, [sp, #12]
   1f7c8:	str	r3, [sp, #4]
   1f7cc:	bl	12f7c <gpgrt_vasprintf@plt>
   1f7d0:	cmp	r0, #0
   1f7d4:	blt	1f810 <pclose@plt+0xc564>
   1f7d8:	ldr	r0, [sp, #8]
   1f7dc:	bl	1f6b0 <pclose@plt+0xc404>
   1f7e0:	mov	r5, r0
   1f7e4:	ldr	r0, [sp, #8]
   1f7e8:	bl	12b50 <gcry_free@plt>
   1f7ec:	ldr	r2, [sp, #12]
   1f7f0:	ldr	r3, [r4]
   1f7f4:	mov	r0, r5
   1f7f8:	cmp	r2, r3
   1f7fc:	bne	1f828 <pclose@plt+0xc57c>
   1f800:	add	sp, sp, #20
   1f804:	pop	{r4, r5, lr}
   1f808:	add	sp, sp, #16
   1f80c:	bx	lr
   1f810:	bl	12f10 <__errno_location@plt>
   1f814:	ldr	r0, [r0]
   1f818:	bl	12db4 <strerror@plt>
   1f81c:	mov	r1, r0
   1f820:	ldr	r0, [pc, #8]	; 1f830 <pclose@plt+0xc584>
   1f824:	bl	1ca34 <pclose@plt+0x9788>
   1f828:	bl	12bb0 <__stack_chk_fail@plt>
   1f82c:	andeq	sp, r3, r0, asr #21
   1f830:	andeq	fp, r2, r0, lsr #13
   1f834:	mov	r1, #1
   1f838:	b	1f170 <pclose@plt+0xbec4>
   1f83c:	push	{r4, r5, r6, lr}
   1f840:	ldr	r4, [pc, #148]	; 1f8dc <pclose@plt+0xc630>
   1f844:	ldr	r3, [r4, #88]	; 0x58
   1f848:	cmp	r3, #0
   1f84c:	popne	{r4, r5, r6, pc}
   1f850:	ldr	r3, [r4, #76]	; 0x4c
   1f854:	cmp	r3, #0
   1f858:	beq	1f8c8 <pclose@plt+0xc61c>
   1f85c:	ldr	r5, [r4, #80]	; 0x50
   1f860:	cmp	r5, #0
   1f864:	bne	1f8bc <pclose@plt+0xc610>
   1f868:	ldr	r3, [r4, #92]	; 0x5c
   1f86c:	cmp	r3, #0
   1f870:	popeq	{r4, r5, r6, pc}
   1f874:	ldr	r1, [r4, #4]
   1f878:	mov	r0, #13
   1f87c:	bl	13138 <putc@plt>
   1f880:	ldr	r3, [r4, #92]	; 0x5c
   1f884:	cmp	r3, #0
   1f888:	ble	1f8a8 <pclose@plt+0xc5fc>
   1f88c:	ldr	r1, [r4, #4]
   1f890:	mov	r0, #32
   1f894:	bl	13138 <putc@plt>
   1f898:	ldr	r3, [r4, #92]	; 0x5c
   1f89c:	add	r5, r5, #1
   1f8a0:	cmp	r5, r3
   1f8a4:	blt	1f88c <pclose@plt+0xc5e0>
   1f8a8:	ldr	r1, [r4, #4]
   1f8ac:	mov	r0, #13
   1f8b0:	bl	13138 <putc@plt>
   1f8b4:	ldr	r0, [r4, #4]
   1f8b8:	bl	12a90 <fflush@plt>
   1f8bc:	mov	r3, #0
   1f8c0:	str	r3, [r4, #92]	; 0x5c
   1f8c4:	pop	{r4, r5, r6, pc}
   1f8c8:	bl	1eff4 <pclose@plt+0xbd48>
   1f8cc:	ldr	r5, [r4, #80]	; 0x50
   1f8d0:	cmp	r5, #0
   1f8d4:	beq	1f868 <pclose@plt+0xc5bc>
   1f8d8:	b	1f8bc <pclose@plt+0xc610>
   1f8dc:			; <UNDEFINED> instruction: 0x0003e6b0
   1f8e0:	push	{r4, r5, r6, lr}
   1f8e4:	bl	1f6b0 <pclose@plt+0xc404>
   1f8e8:	mov	r4, r0
   1f8ec:	bl	1f83c <pclose@plt+0xc590>
   1f8f0:	mov	r0, r4
   1f8f4:	bl	24868 <pclose@plt+0x115bc>
   1f8f8:	mov	r5, r0
   1f8fc:	mov	r0, r4
   1f900:	bl	12b50 <gcry_free@plt>
   1f904:	mov	r0, r5
   1f908:	pop	{r4, r5, r6, pc}
   1f90c:	ldr	ip, [pc, #32]	; 1f934 <pclose@plt+0xc688>
   1f910:	push	{r4, lr}
   1f914:	ldr	r4, [sp, #8]
   1f918:	ldr	lr, [sp, #12]
   1f91c:	str	r0, [ip, #84]	; 0x54
   1f920:	str	r1, [ip, #104]	; 0x68
   1f924:	strd	r2, [ip, #108]	; 0x6c
   1f928:	str	r4, [ip, #96]	; 0x60
   1f92c:	str	lr, [ip, #100]	; 0x64
   1f930:	pop	{r4, pc}
   1f934:			; <UNDEFINED> instruction: 0x0003e6b0
   1f938:	push	{r4, r5, r6, lr}
   1f93c:	ldr	r4, [pc, #68]	; 1f988 <pclose@plt+0xc6dc>
   1f940:	ldr	r3, [r4, #88]	; 0x58
   1f944:	cmp	r3, #0
   1f948:	popne	{r4, r5, r6, pc}
   1f94c:	ldr	r3, [r4, #104]	; 0x68
   1f950:	cmp	r3, #0
   1f954:	popeq	{r4, r5, r6, pc}
   1f958:	ldr	r2, [r4, #76]	; 0x4c
   1f95c:	mov	r5, r0
   1f960:	cmp	r2, #0
   1f964:	beq	1f974 <pclose@plt+0xc6c8>
   1f968:	mov	r0, r5
   1f96c:	pop	{r4, r5, r6, lr}
   1f970:	bx	r3
   1f974:	bl	1eff4 <pclose@plt+0xbd48>
   1f978:	ldr	r3, [r4, #104]	; 0x68
   1f97c:	mov	r0, r5
   1f980:	pop	{r4, r5, r6, lr}
   1f984:	bx	r3
   1f988:			; <UNDEFINED> instruction: 0x0003e6b0
   1f98c:	push	{r4, lr}
   1f990:	ldr	r4, [pc, #64]	; 1f9d8 <pclose@plt+0xc72c>
   1f994:	ldr	r3, [r4, #88]	; 0x58
   1f998:	cmp	r3, #0
   1f99c:	popne	{r4, pc}
   1f9a0:	ldr	r3, [r4, #108]	; 0x6c
   1f9a4:	cmp	r3, #0
   1f9a8:	popeq	{r4, pc}
   1f9ac:	ldr	r2, [r4, #76]	; 0x4c
   1f9b0:	cmp	r2, #0
   1f9b4:	beq	1f9c4 <pclose@plt+0xc718>
   1f9b8:	mov	r0, #1
   1f9bc:	pop	{r4, lr}
   1f9c0:	bx	r3
   1f9c4:	bl	1eff4 <pclose@plt+0xbd48>
   1f9c8:	ldr	r3, [r4, #108]	; 0x6c
   1f9cc:	mov	r0, #1
   1f9d0:	pop	{r4, lr}
   1f9d4:	bx	r3
   1f9d8:			; <UNDEFINED> instruction: 0x0003e6b0
   1f9dc:	b	1ef10 <pclose@plt+0xbc64>
   1f9e0:	ldr	r3, [pc, #12]	; 1f9f4 <pclose@plt+0xc748>
   1f9e4:	ldr	r3, [r3, #112]	; 0x70
   1f9e8:	cmp	r3, #0
   1f9ec:	bxeq	lr
   1f9f0:	bx	r3
   1f9f4:			; <UNDEFINED> instruction: 0x0003e6b0
   1f9f8:	push	{r4, r5, r6, lr}
   1f9fc:	adds	ip, r1, #0
   1fa00:	ldr	lr, [pc, #108]	; 1fa74 <pclose@plt+0xc7c8>
   1fa04:	sub	r4, r2, #1
   1fa08:	movne	ip, #1
   1fa0c:	ldr	r5, [lr]
   1fa10:	ands	ip, ip, r5, asr r4
   1fa14:	bne	1fa20 <pclose@plt+0xc774>
   1fa18:	mov	r0, #0
   1fa1c:	pop	{r4, r5, r6, pc}
   1fa20:	ldr	r1, [r1]
   1fa24:	tst	r1, #1024	; 0x400
   1fa28:	beq	1fa18 <pclose@plt+0xc76c>
   1fa2c:	cmp	r0, #0
   1fa30:	mov	r4, r3
   1fa34:	beq	1fa58 <pclose@plt+0xc7ac>
   1fa38:	ldr	r3, [lr, #4]
   1fa3c:	cmp	r3, #0
   1fa40:	beq	1fa58 <pclose@plt+0xc7ac>
   1fa44:	mov	r1, r2
   1fa48:	mov	r2, r4
   1fa4c:	blx	r3
   1fa50:	cmp	r0, #0
   1fa54:	beq	1fa18 <pclose@plt+0xc76c>
   1fa58:	cmp	r4, #0
   1fa5c:	beq	1fa6c <pclose@plt+0xc7c0>
   1fa60:	mov	r1, r4
   1fa64:	mov	r0, #7
   1fa68:	bl	1c948 <pclose@plt+0x969c>
   1fa6c:	mov	r0, #1
   1fa70:	pop	{r4, r5, r6, pc}
   1fa74:	andeq	lr, r3, r4, lsr #14
   1fa78:	push	{r4, r5, r6, lr}
   1fa7c:	mov	r6, r0
   1fa80:	ldr	r5, [pc, #180]	; 1fb3c <pclose@plt+0xc890>
   1fa84:	sub	sp, sp, #24
   1fa88:	cmp	r2, #0
   1fa8c:	ldr	r0, [r5]
   1fa90:	moveq	r4, r2
   1fa94:	str	r0, [sp, #20]
   1fa98:	beq	1faa8 <pclose@plt+0xc7fc>
   1fa9c:	ldrb	r4, [r2]
   1faa0:	cmp	r4, #0
   1faa4:	bne	1fac4 <pclose@plt+0xc818>
   1faa8:	ldr	r2, [sp, #20]
   1faac:	ldr	r3, [r5]
   1fab0:	mov	r0, r4
   1fab4:	cmp	r2, r3
   1fab8:	bne	1fb38 <pclose@plt+0xc88c>
   1fabc:	add	sp, sp, #24
   1fac0:	pop	{r4, r5, r6, pc}
   1fac4:	mov	ip, r3
   1fac8:	ldr	lr, [pc, #112]	; 1fb40 <pclose@plt+0xc894>
   1facc:	ldr	r0, [pc, #112]	; 1fb44 <pclose@plt+0xc898>
   1fad0:	cmp	ip, #0
   1fad4:	str	r2, [sp]
   1fad8:	mov	r3, r1
   1fadc:	moveq	r2, r0
   1fae0:	movne	r2, lr
   1fae4:	ldr	r1, [pc, #92]	; 1fb48 <pclose@plt+0xc89c>
   1fae8:	add	r0, sp, #16
   1faec:	bl	130f0 <gpgrt_asprintf@plt>
   1faf0:	cmp	r0, #0
   1faf4:	blt	1fb2c <pclose@plt+0xc880>
   1faf8:	mov	r3, #0
   1fafc:	mov	r0, r6
   1fb00:	str	r3, [sp, #12]
   1fb04:	str	r3, [sp, #8]
   1fb08:	str	r3, [sp, #4]
   1fb0c:	str	r3, [sp]
   1fb10:	mov	r2, r3
   1fb14:	ldr	r1, [sp, #16]
   1fb18:	bl	12d30 <assuan_transact@plt>
   1fb1c:	mov	r4, r0
   1fb20:	ldr	r0, [sp, #16]
   1fb24:	bl	12b50 <gcry_free@plt>
   1fb28:	b	1faa8 <pclose@plt+0xc7fc>
   1fb2c:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1fb30:	uxth	r4, r0
   1fb34:	b	1faa8 <pclose@plt+0xc7fc>
   1fb38:	bl	12bb0 <__stack_chk_fail@plt>
   1fb3c:	andeq	sp, r3, r0, asr #21
   1fb40:	andeq	fp, r2, r0, asr #13
   1fb44:	muleq	r2, r8, r7
   1fb48:	andeq	fp, r2, r8, asr #13
   1fb4c:	mov	r3, #0
   1fb50:	push	{r4, r5, r6, lr}
   1fb54:	mov	r4, r0
   1fb58:	str	r3, [r0]
   1fb5c:	mov	r6, r1
   1fb60:	mov	r0, r2
   1fb64:	ldr	r1, [pc, #128]	; 1fbec <pclose@plt+0xc940>
   1fb68:	mov	r5, r2
   1fb6c:	bl	12a24 <strcmp@plt>
   1fb70:	cmp	r0, #0
   1fb74:	beq	1fbe4 <pclose@plt+0xc938>
   1fb78:	ldr	r1, [pc, #112]	; 1fbf0 <pclose@plt+0xc944>
   1fb7c:	mov	r0, r5
   1fb80:	bl	12a24 <strcmp@plt>
   1fb84:	ldr	r3, [pc, #104]	; 1fbf4 <pclose@plt+0xc948>
   1fb88:	ldr	r1, [pc, #104]	; 1fbf8 <pclose@plt+0xc94c>
   1fb8c:	cmp	r0, #0
   1fb90:	movne	r1, r3
   1fb94:	mov	r0, r6
   1fb98:	mov	r2, #0
   1fb9c:	bl	186d4 <pclose@plt+0x5428>
   1fba0:	subs	r5, r0, #0
   1fba4:	beq	1fbd8 <pclose@plt+0xc92c>
   1fba8:	mov	r1, #0
   1fbac:	bl	23f48 <pclose@plt+0x10c9c>
   1fbb0:	str	r0, [r4]
   1fbb4:	mov	r0, r5
   1fbb8:	bl	12b50 <gcry_free@plt>
   1fbbc:	ldr	r0, [r4]
   1fbc0:	cmp	r0, #0
   1fbc4:	beq	1fbd8 <pclose@plt+0xc92c>
   1fbc8:	mvn	r1, #0
   1fbcc:	bl	24110 <pclose@plt+0x10e64>
   1fbd0:	cmp	r0, #0
   1fbd4:	popeq	{r4, r5, r6, pc}
   1fbd8:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1fbdc:	uxth	r0, r0
   1fbe0:	pop	{r4, r5, r6, pc}
   1fbe4:	ldr	r1, [pc, #16]	; 1fbfc <pclose@plt+0xc950>
   1fbe8:	b	1fb94 <pclose@plt+0xc8e8>
   1fbec:	andeq	fp, r2, ip, asr lr
   1fbf0:	andeq	sl, r2, ip, lsl #11
   1fbf4:	andeq	fp, r2, r4, lsl r7
   1fbf8:	strdeq	fp, [r2], -r4
   1fbfc:	ldrdeq	fp, [r2], -r8
   1fc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc04:	sub	sp, sp, #12
   1fc08:	mov	fp, r3
   1fc0c:	mov	r3, #6
   1fc10:	ldr	r5, [pc, #232]	; 1fd00 <pclose@plt+0xca54>
   1fc14:	ldr	sl, [pc, #232]	; 1fd04 <pclose@plt+0xca58>
   1fc18:	ldr	r9, [pc, #232]	; 1fd08 <pclose@plt+0xca5c>
   1fc1c:	ldr	r6, [pc, #232]	; 1fd0c <pclose@plt+0xca60>
   1fc20:	str	r0, [sp, #4]
   1fc24:	mov	r8, r1
   1fc28:	mov	r7, r2
   1fc2c:	str	r3, [sp]
   1fc30:	mov	r4, #0
   1fc34:	b	1fc7c <pclose@plt+0xc9d0>
   1fc38:	mov	r0, r5
   1fc3c:	bl	1d188 <pclose@plt+0x9edc>
   1fc40:	mov	r3, #0
   1fc44:	mov	r2, r3
   1fc48:	mov	r1, r8
   1fc4c:	mov	r0, fp
   1fc50:	bl	1327c <assuan_socket_connect@plt>
   1fc54:	add	r4, r4, r5
   1fc58:	lsl	r2, r5, #1
   1fc5c:	subs	r3, r0, #0
   1fc60:	beq	1fcc4 <pclose@plt+0xca18>
   1fc64:	cmp	r2, r6
   1fc68:	movlt	r5, r2
   1fc6c:	ldr	r2, [pc, #156]	; 1fd10 <pclose@plt+0xca64>
   1fc70:	movge	r5, r6
   1fc74:	cmp	r4, r2
   1fc78:	bgt	1fcf4 <pclose@plt+0xca48>
   1fc7c:	sub	r3, sl, r4
   1fc80:	cmp	r7, #0
   1fc84:	umull	r2, r3, r9, r3
   1fc88:	beq	1fc38 <pclose@plt+0xc98c>
   1fc8c:	ldr	r2, [sp]
   1fc90:	lsr	r3, r3, #18
   1fc94:	cmp	r3, r2
   1fc98:	bge	1fc38 <pclose@plt+0xc98c>
   1fc9c:	mov	r2, #5
   1fca0:	ldr	r1, [pc, #108]	; 1fd14 <pclose@plt+0xca68>
   1fca4:	mov	r0, #0
   1fca8:	str	r3, [sp]
   1fcac:	bl	12b98 <dcgettext@plt>
   1fcb0:	ldr	r3, [sp]
   1fcb4:	ldr	r1, [sp, #4]
   1fcb8:	mov	r2, r3
   1fcbc:	bl	1c94c <pclose@plt+0x96a0>
   1fcc0:	b	1fc38 <pclose@plt+0xc98c>
   1fcc4:	cmp	r7, #0
   1fcc8:	beq	1fcf4 <pclose@plt+0xca48>
   1fccc:	mov	r2, #5
   1fcd0:	ldr	r1, [pc, #64]	; 1fd18 <pclose@plt+0xca6c>
   1fcd4:	str	r3, [sp]
   1fcd8:	bl	12b98 <dcgettext@plt>
   1fcdc:	ldr	r1, [sp, #4]
   1fce0:	bl	1c94c <pclose@plt+0x96a0>
   1fce4:	ldr	r3, [sp, #48]	; 0x30
   1fce8:	mov	r2, #1
   1fcec:	str	r2, [r3]
   1fcf0:	ldr	r3, [sp]
   1fcf4:	mov	r0, r3
   1fcf8:	add	sp, sp, #12
   1fcfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd00:	ldrdeq	r0, [r0], -r1
   1fd04:	subseq	r8, fp, pc, ror sp
   1fd08:	tstmi	fp, #2096	; 0x830
   1fd0c:	andeq	r4, pc, r0, asr #4
   1fd10:	subeq	r4, ip, pc, lsr fp
   1fd14:	andeq	fp, r2, r4, lsr r7
   1fd18:	andeq	fp, r2, r0, ror #14
   1fd1c:	push	{r4, r5, r6, lr}
   1fd20:	mov	r5, r0
   1fd24:	ldr	r0, [pc, #68]	; 1fd70 <pclose@plt+0xcac4>
   1fd28:	mov	r4, r1
   1fd2c:	bl	12d48 <getenv@plt>
   1fd30:	cmp	r0, #0
   1fd34:	beq	1fd60 <pclose@plt+0xcab4>
   1fd38:	mov	r2, #10
   1fd3c:	mov	r1, #0
   1fd40:	bl	12a3c <strtol@plt>
   1fd44:	ldr	r3, [pc, #40]	; 1fd74 <pclose@plt+0xcac8>
   1fd48:	str	r0, [r3]
   1fd4c:	mov	r1, r5
   1fd50:	str	r4, [r3, #4]
   1fd54:	ldr	r0, [pc, #28]	; 1fd78 <pclose@plt+0xcacc>
   1fd58:	pop	{r4, r5, r6, lr}
   1fd5c:	b	12b08 <assuan_set_log_cb@plt>
   1fd60:	ldr	r3, [pc, #12]	; 1fd74 <pclose@plt+0xcac8>
   1fd64:	mov	r2, #128	; 0x80
   1fd68:	str	r2, [r3]
   1fd6c:	b	1fd4c <pclose@plt+0xcaa0>
   1fd70:	andeq	fp, r2, r0, lsl #15
   1fd74:	andeq	lr, r3, r4, lsr #14
   1fd78:	strdeq	pc, [r1], -r8
   1fd7c:	ldr	r3, [pc, #12]	; 1fd90 <pclose@plt+0xcae4>
   1fd80:	cmp	r0, #0
   1fd84:	moveq	r0, #128	; 0x80
   1fd88:	str	r0, [r3]
   1fd8c:	bx	lr
   1fd90:	andeq	lr, r3, r4, lsr #14
   1fd94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fd98:	sub	sp, sp, #16
   1fd9c:	ldr	r7, [pc, #716]	; 20070 <pclose@plt+0xcdc4>
   1fda0:	ldr	r5, [sp, #48]	; 0x30
   1fda4:	mov	r6, r0
   1fda8:	mov	r8, r2
   1fdac:	ldr	r0, [r7]
   1fdb0:	mov	r9, r3
   1fdb4:	mov	r1, #0
   1fdb8:	str	r0, [sp, #12]
   1fdbc:	str	r1, [sp]
   1fdc0:	add	r1, sp, #4
   1fdc4:	mov	r0, sp
   1fdc8:	bl	210f8 <pclose@plt+0xde4c>
   1fdcc:	subs	r4, r0, #0
   1fdd0:	beq	1fe50 <pclose@plt+0xcba4>
   1fdd4:	mov	r2, #0
   1fdd8:	mov	r1, r4
   1fddc:	mov	r0, r5
   1fde0:	bl	2138c <pclose@plt+0xe0e0>
   1fde4:	subs	r2, r0, #0
   1fde8:	beq	1fdc0 <pclose@plt+0xcb14>
   1fdec:	ldr	r1, [sp, #4]
   1fdf0:	cmp	r1, #0
   1fdf4:	beq	1fe2c <pclose@plt+0xcb80>
   1fdf8:	mov	r3, #0
   1fdfc:	mov	r0, r6
   1fe00:	bl	1fa78 <pclose@plt+0xc7cc>
   1fe04:	mov	r4, r0
   1fe08:	cmp	r4, #0
   1fe0c:	beq	1fdc0 <pclose@plt+0xcb14>
   1fe10:	ldr	r2, [sp, #12]
   1fe14:	ldr	r3, [r7]
   1fe18:	mov	r0, r4
   1fe1c:	cmp	r2, r3
   1fe20:	bne	2006c <pclose@plt+0xcdc0>
   1fe24:	add	sp, sp, #16
   1fe28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe2c:	mov	r1, r4
   1fe30:	mov	r3, #1
   1fe34:	mov	r0, r6
   1fe38:	bl	1fa78 <pclose@plt+0xc7cc>
   1fe3c:	uxth	r3, r0
   1fe40:	cmp	r3, #174	; 0xae
   1fe44:	mov	r4, r0
   1fe48:	bne	1fe08 <pclose@plt+0xcb5c>
   1fe4c:	b	1fdc0 <pclose@plt+0xcb14>
   1fe50:	mov	r0, r5
   1fe54:	add	r2, sp, #8
   1fe58:	ldr	r1, [pc, #532]	; 20074 <pclose@plt+0xcdc8>
   1fe5c:	bl	2138c <pclose@plt+0xe0e0>
   1fe60:	subs	r5, r0, #0
   1fe64:	beq	1fe74 <pclose@plt+0xcbc8>
   1fe68:	ldr	r3, [sp, #8]
   1fe6c:	cmp	r3, #0
   1fe70:	moveq	r5, #0
   1fe74:	mov	r1, #0
   1fe78:	mov	r0, r1
   1fe7c:	bl	13078 <setlocale@plt>
   1fe80:	subs	r4, r0, #0
   1fe84:	beq	1ff40 <pclose@plt+0xcc94>
   1fe88:	bl	13258 <gcry_strdup@plt>
   1fe8c:	subs	sl, r0, #0
   1fe90:	beq	1ffc4 <pclose@plt+0xcd18>
   1fe94:	ldr	r1, [pc, #476]	; 20078 <pclose@plt+0xcdcc>
   1fe98:	mov	r0, #0
   1fe9c:	bl	13078 <setlocale@plt>
   1fea0:	cmp	r8, #0
   1fea4:	beq	1ff9c <pclose@plt+0xccf0>
   1fea8:	mov	r2, r8
   1feac:	mov	r3, #0
   1feb0:	ldr	r1, [pc, #452]	; 2007c <pclose@plt+0xcdd0>
   1feb4:	mov	r0, r6
   1feb8:	bl	1fa78 <pclose@plt+0xc7cc>
   1febc:	mov	r4, r0
   1fec0:	mov	r1, sl
   1fec4:	mov	r0, #0
   1fec8:	bl	13078 <setlocale@plt>
   1fecc:	mov	r0, sl
   1fed0:	bl	12b50 <gcry_free@plt>
   1fed4:	cmp	r4, #0
   1fed8:	bne	1fe10 <pclose@plt+0xcb64>
   1fedc:	mov	r1, #0
   1fee0:	mov	r0, #5
   1fee4:	bl	13078 <setlocale@plt>
   1fee8:	subs	r4, r0, #0
   1feec:	beq	1ff6c <pclose@plt+0xccc0>
   1fef0:	bl	13258 <gcry_strdup@plt>
   1fef4:	subs	r8, r0, #0
   1fef8:	beq	1ffc4 <pclose@plt+0xcd18>
   1fefc:	ldr	r1, [pc, #372]	; 20078 <pclose@plt+0xcdcc>
   1ff00:	mov	r0, #5
   1ff04:	bl	13078 <setlocale@plt>
   1ff08:	cmp	r9, #0
   1ff0c:	beq	1ffd0 <pclose@plt+0xcd24>
   1ff10:	mov	r2, r9
   1ff14:	mov	r0, r6
   1ff18:	mov	r3, #0
   1ff1c:	ldr	r1, [pc, #348]	; 20080 <pclose@plt+0xcdd4>
   1ff20:	bl	1fa78 <pclose@plt+0xc7cc>
   1ff24:	mov	r4, r0
   1ff28:	mov	r1, r8
   1ff2c:	mov	r0, #5
   1ff30:	bl	13078 <setlocale@plt>
   1ff34:	mov	r0, r8
   1ff38:	bl	12b50 <gcry_free@plt>
   1ff3c:	b	1fe10 <pclose@plt+0xcb64>
   1ff40:	ldr	r1, [pc, #304]	; 20078 <pclose@plt+0xcdcc>
   1ff44:	bl	13078 <setlocale@plt>
   1ff48:	cmp	r8, #0
   1ff4c:	beq	20018 <pclose@plt+0xcd6c>
   1ff50:	mov	r3, r4
   1ff54:	mov	r2, r8
   1ff58:	ldr	r1, [pc, #284]	; 2007c <pclose@plt+0xcdd0>
   1ff5c:	mov	r0, r6
   1ff60:	bl	1fa78 <pclose@plt+0xc7cc>
   1ff64:	mov	r4, r0
   1ff68:	b	1fed4 <pclose@plt+0xcc28>
   1ff6c:	ldr	r1, [pc, #260]	; 20078 <pclose@plt+0xcdcc>
   1ff70:	mov	r0, #5
   1ff74:	bl	13078 <setlocale@plt>
   1ff78:	cmp	r9, #0
   1ff7c:	beq	20040 <pclose@plt+0xcd94>
   1ff80:	mov	r3, r4
   1ff84:	mov	r2, r9
   1ff88:	mov	r0, r6
   1ff8c:	ldr	r1, [pc, #236]	; 20080 <pclose@plt+0xcdd4>
   1ff90:	bl	1fa78 <pclose@plt+0xc7cc>
   1ff94:	mov	r4, r0
   1ff98:	b	1fe10 <pclose@plt+0xcb64>
   1ff9c:	cmp	r5, #0
   1ffa0:	cmpne	r0, #0
   1ffa4:	beq	20000 <pclose@plt+0xcd54>
   1ffa8:	mov	r2, r0
   1ffac:	mov	r3, r8
   1ffb0:	ldr	r1, [pc, #196]	; 2007c <pclose@plt+0xcdd0>
   1ffb4:	mov	r0, r6
   1ffb8:	bl	1fa78 <pclose@plt+0xc7cc>
   1ffbc:	mov	r4, r0
   1ffc0:	b	1fec0 <pclose@plt+0xcc14>
   1ffc4:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   1ffc8:	uxth	r4, r0
   1ffcc:	b	1fe10 <pclose@plt+0xcb64>
   1ffd0:	cmp	r5, #0
   1ffd4:	cmpne	r0, #0
   1ffd8:	beq	1fff8 <pclose@plt+0xcd4c>
   1ffdc:	mov	r2, r0
   1ffe0:	mov	r3, r9
   1ffe4:	mov	r0, r6
   1ffe8:	ldr	r1, [pc, #144]	; 20080 <pclose@plt+0xcdd4>
   1ffec:	bl	1fa78 <pclose@plt+0xc7cc>
   1fff0:	mov	r4, r0
   1fff4:	b	1ff28 <pclose@plt+0xcc7c>
   1fff8:	mov	r4, r9
   1fffc:	b	1ff28 <pclose@plt+0xcc7c>
   20000:	mov	r0, r8
   20004:	mov	r1, sl
   20008:	bl	13078 <setlocale@plt>
   2000c:	mov	r0, sl
   20010:	bl	12b50 <gcry_free@plt>
   20014:	b	1fedc <pclose@plt+0xcc30>
   20018:	cmp	r5, #0
   2001c:	cmpne	r0, #0
   20020:	beq	1fedc <pclose@plt+0xcc30>
   20024:	mov	r2, r0
   20028:	mov	r3, r8
   2002c:	ldr	r1, [pc, #72]	; 2007c <pclose@plt+0xcdd0>
   20030:	mov	r0, r6
   20034:	bl	1fa78 <pclose@plt+0xc7cc>
   20038:	mov	r4, r0
   2003c:	b	1fed4 <pclose@plt+0xcc28>
   20040:	cmp	r5, #0
   20044:	cmpne	r0, #0
   20048:	moveq	r4, r9
   2004c:	beq	1fe10 <pclose@plt+0xcb64>
   20050:	mov	r2, r0
   20054:	mov	r3, r9
   20058:	mov	r0, r6
   2005c:	ldr	r1, [pc, #28]	; 20080 <pclose@plt+0xcdd4>
   20060:	bl	1fa78 <pclose@plt+0xc7cc>
   20064:	mov	r4, r0
   20068:	b	1fe10 <pclose@plt+0xcb64>
   2006c:	bl	12bb0 <__stack_chk_fail@plt>
   20070:	andeq	sp, r3, r0, asr #21
   20074:	muleq	r2, r0, r7
   20078:	muleq	r2, r8, r7
   2007c:	andeq	fp, r2, r4, lsr #15
   20080:	muleq	r2, r8, r7
   20084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20088:	sub	sp, sp, #84	; 0x54
   2008c:	ldr	r5, [pc, #1356]	; 205e0 <pclose@plt+0xd334>
   20090:	str	r3, [sp, #24]
   20094:	ldr	r3, [sp, #120]	; 0x78
   20098:	mov	r6, r0
   2009c:	str	r3, [sp, #28]
   200a0:	ldr	r3, [sp, #124]	; 0x7c
   200a4:	mov	ip, #0
   200a8:	ldr	lr, [r5]
   200ac:	str	r3, [sp, #32]
   200b0:	ldr	r3, [sp, #144]	; 0x90
   200b4:	add	r0, sp, #40	; 0x28
   200b8:	str	ip, [r6]
   200bc:	mov	fp, r1
   200c0:	mov	r7, r2
   200c4:	str	lr, [sp, #76]	; 0x4c
   200c8:	str	ip, [sp, #44]	; 0x2c
   200cc:	ldr	r9, [sp, #140]	; 0x8c
   200d0:	str	r3, [sp, #20]
   200d4:	bl	12e68 <assuan_new@plt>
   200d8:	subs	r4, r0, #0
   200dc:	bne	20280 <pclose@plt+0xcfd4>
   200e0:	bl	1e2f0 <pclose@plt+0xb044>
   200e4:	mov	r2, r4
   200e8:	ldr	r1, [pc, #1268]	; 205e4 <pclose@plt+0xd338>
   200ec:	bl	18624 <pclose@plt+0x5378>
   200f0:	subs	r8, r0, #0
   200f4:	beq	203a0 <pclose@plt+0xd0f4>
   200f8:	mov	r3, r4
   200fc:	mov	r2, r4
   20100:	mov	r1, r8
   20104:	ldr	r0, [sp, #40]	; 0x28
   20108:	bl	1327c <assuan_socket_connect@plt>
   2010c:	ldr	r3, [sp, #128]	; 0x80
   20110:	cmp	r0, #0
   20114:	cmpne	r3, #0
   20118:	mov	sl, r0
   2011c:	beq	202ac <pclose@plt+0xd000>
   20120:	cmp	r7, #0
   20124:	beq	20134 <pclose@plt+0xce88>
   20128:	ldrb	r3, [r7]
   2012c:	cmp	r3, #0
   20130:	bne	202f8 <pclose@plt+0xd04c>
   20134:	mov	r0, #1
   20138:	bl	1e47c <pclose@plt+0xb1d0>
   2013c:	mov	sl, #0
   20140:	str	sl, [sp, #36]	; 0x24
   20144:	mov	r7, r0
   20148:	ldr	r3, [sp, #132]	; 0x84
   2014c:	cmp	r3, #0
   20150:	bne	2032c <pclose@plt+0xd080>
   20154:	cmp	r9, #0
   20158:	beq	20170 <pclose@plt+0xcec4>
   2015c:	ldr	r0, [sp, #20]
   20160:	mov	r3, #0
   20164:	ldr	r2, [pc, #1148]	; 205e8 <pclose@plt+0xd33c>
   20168:	mov	r1, #50	; 0x32
   2016c:	blx	r9
   20170:	bl	1deec <pclose@plt+0xac40>
   20174:	mov	r1, #0
   20178:	bl	186d4 <pclose@plt+0x5428>
   2017c:	subs	r9, r0, #0
   20180:	beq	203f8 <pclose@plt+0xd14c>
   20184:	mov	r0, #0
   20188:	bl	12a90 <fflush@plt>
   2018c:	cmp	r0, #0
   20190:	bne	20440 <pclose@plt+0xd194>
   20194:	ldr	r2, [pc, #1104]	; 205ec <pclose@plt+0xd340>
   20198:	ldr	r3, [pc, #1104]	; 205f0 <pclose@plt+0xd344>
   2019c:	cmp	sl, #0
   201a0:	str	r2, [sp, #52]	; 0x34
   201a4:	str	r3, [sp, #60]	; 0x3c
   201a8:	movne	r2, #4
   201ac:	movne	r3, #5
   201b0:	moveq	r3, #4
   201b4:	moveq	r2, #3
   201b8:	add	r1, sp, #80	; 0x50
   201bc:	add	r2, r1, r2, lsl #2
   201c0:	add	r3, r1, r3, lsl #2
   201c4:	ldr	r1, [pc, #1064]	; 205f4 <pclose@plt+0xd348>
   201c8:	mov	r4, #0
   201cc:	strne	sl, [sp, #64]	; 0x40
   201d0:	str	r9, [sp, #56]	; 0x38
   201d4:	str	r1, [r2, #-28]	; 0xffffffe4
   201d8:	str	r4, [r3, #-28]	; 0xffffffe4
   201dc:	bl	1deec <pclose@plt+0xac40>
   201e0:	ldr	r2, [pc, #1040]	; 205f8 <pclose@plt+0xd34c>
   201e4:	mov	r1, r0
   201e8:	add	r0, sp, #48	; 0x30
   201ec:	bl	1fb4c <pclose@plt+0xc8a0>
   201f0:	subs	sl, r0, #0
   201f4:	beq	20348 <pclose@plt+0xd09c>
   201f8:	ldr	r0, [sp, #48]	; 0x30
   201fc:	cmp	r0, #0
   20200:	beq	204bc <pclose@plt+0xd210>
   20204:	bl	24008 <pclose@plt+0x10d5c>
   20208:	mov	r3, #0
   2020c:	str	r3, [sp, #48]	; 0x30
   20210:	mov	r0, r9
   20214:	bl	12b50 <gcry_free@plt>
   20218:	ldr	r0, [sp, #36]	; 0x24
   2021c:	bl	12b50 <gcry_free@plt>
   20220:	mov	r0, r8
   20224:	bl	12b50 <gcry_free@plt>
   20228:	cmp	sl, #0
   2022c:	bne	202cc <pclose@plt+0xd020>
   20230:	ldr	r3, [sp, #136]	; 0x88
   20234:	cmp	r3, #0
   20238:	beq	20248 <pclose@plt+0xcf9c>
   2023c:	ldr	r3, [sp, #44]	; 0x2c
   20240:	cmp	r3, #0
   20244:	beq	204d8 <pclose@plt+0xd22c>
   20248:	mov	r3, #0
   2024c:	str	r3, [sp, #12]
   20250:	str	r3, [sp, #8]
   20254:	str	r3, [sp, #4]
   20258:	str	r3, [sp]
   2025c:	mov	r2, r3
   20260:	ldr	r1, [pc, #916]	; 205fc <pclose@plt+0xd350>
   20264:	ldr	r0, [sp, #40]	; 0x28
   20268:	bl	12d30 <assuan_transact@plt>
   2026c:	subs	r4, r0, #0
   20270:	beq	203bc <pclose@plt+0xd110>
   20274:	ldr	r0, [sp, #40]	; 0x28
   20278:	bl	130a8 <assuan_release@plt>
   2027c:	b	20290 <pclose@plt+0xcfe4>
   20280:	bl	13120 <gpg_strerror@plt>
   20284:	mov	r1, r0
   20288:	ldr	r0, [pc, #880]	; 20600 <pclose@plt+0xd354>
   2028c:	bl	1c9b0 <pclose@plt+0x9704>
   20290:	ldr	r2, [sp, #76]	; 0x4c
   20294:	ldr	r3, [r5]
   20298:	mov	r0, r4
   2029c:	cmp	r2, r3
   202a0:	bne	205dc <pclose@plt+0xd330>
   202a4:	add	sp, sp, #84	; 0x54
   202a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202ac:	mov	r0, r8
   202b0:	bl	12b50 <gcry_free@plt>
   202b4:	cmp	sl, #0
   202b8:	beq	20230 <pclose@plt+0xcf84>
   202bc:	ldr	r3, [pc, #832]	; 20604 <pclose@plt+0xd358>
   202c0:	uxth	r2, sl
   202c4:	cmp	r2, r3
   202c8:	beq	202e0 <pclose@plt+0xd034>
   202cc:	mov	r0, sl
   202d0:	bl	13120 <gpg_strerror@plt>
   202d4:	mov	r1, r0
   202d8:	ldr	r0, [pc, #808]	; 20608 <pclose@plt+0xd35c>
   202dc:	bl	1c9b0 <pclose@plt+0x9704>
   202e0:	lsl	r4, fp, #24
   202e4:	ldr	r0, [sp, #40]	; 0x28
   202e8:	and	r4, r4, #2130706432	; 0x7f000000
   202ec:	bl	130a8 <assuan_release@plt>
   202f0:	orr	r4, r4, #77	; 0x4d
   202f4:	b	20290 <pclose@plt+0xcfe4>
   202f8:	mov	r1, #124	; 0x7c
   202fc:	mov	r0, r7
   20300:	bl	12eb0 <strchr@plt>
   20304:	subs	sl, r0, #0
   20308:	beq	2031c <pclose@plt+0xd070>
   2030c:	ldrb	r3, [sl, #1]
   20310:	cmp	r3, #45	; 0x2d
   20314:	beq	204e4 <pclose@plt+0xd238>
   20318:	mov	sl, r4
   2031c:	ldr	r3, [sp, #132]	; 0x84
   20320:	str	sl, [sp, #36]	; 0x24
   20324:	cmp	r3, #0
   20328:	beq	20154 <pclose@plt+0xcea8>
   2032c:	mov	r2, #5
   20330:	ldr	r1, [pc, #724]	; 2060c <pclose@plt+0xd360>
   20334:	mov	r0, #0
   20338:	bl	12b98 <dcgettext@plt>
   2033c:	mov	r1, r7
   20340:	bl	1c94c <pclose@plt+0x96a0>
   20344:	b	20154 <pclose@plt+0xcea8>
   20348:	mov	r3, sl
   2034c:	mov	r2, sl
   20350:	mov	r1, r8
   20354:	ldr	r0, [sp, #40]	; 0x28
   20358:	bl	1327c <assuan_socket_connect@plt>
   2035c:	subs	sl, r0, #0
   20360:	beq	20494 <pclose@plt+0xd1e8>
   20364:	ldr	r3, [sp, #36]	; 0x24
   20368:	mov	r2, r4
   2036c:	cmp	r3, r4
   20370:	mov	r0, r3
   20374:	add	r1, sp, #52	; 0x34
   20378:	moveq	r0, r7
   2037c:	bl	2266c <pclose@plt+0xf3c0>
   20380:	subs	sl, r0, #0
   20384:	beq	20534 <pclose@plt+0xd288>
   20388:	bl	13120 <gpg_strerror@plt>
   2038c:	mov	r1, r7
   20390:	mov	r2, r0
   20394:	ldr	r0, [pc, #628]	; 20610 <pclose@plt+0xd364>
   20398:	bl	1c9b0 <pclose@plt+0x9704>
   2039c:	b	201f8 <pclose@plt+0xcf4c>
   203a0:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   203a4:	subs	r4, r0, #0
   203a8:	lslne	r3, fp, #24
   203ac:	andne	r3, r3, #2130706432	; 0x7f000000
   203b0:	uxthne	r4, r4
   203b4:	orrne	r4, r3, r4
   203b8:	b	20274 <pclose@plt+0xcfc8>
   203bc:	ldr	r3, [sp, #32]
   203c0:	mov	r1, fp
   203c4:	str	r3, [sp]
   203c8:	ldr	r0, [sp, #40]	; 0x28
   203cc:	ldrd	r2, [sp, #24]
   203d0:	bl	1fd94 <pclose@plt+0xcae8>
   203d4:	uxth	r3, r0
   203d8:	cmp	r3, #251	; 0xfb
   203dc:	mov	r7, r0
   203e0:	beq	20518 <pclose@plt+0xd26c>
   203e4:	cmp	r0, #0
   203e8:	ldr	r0, [sp, #40]	; 0x28
   203ec:	bne	2052c <pclose@plt+0xd280>
   203f0:	str	r0, [r6]
   203f4:	b	20290 <pclose@plt+0xcfe4>
   203f8:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   203fc:	subs	r4, r0, #0
   20400:	lslne	r3, fp, #24
   20404:	uxthne	r4, r4
   20408:	andne	r3, r3, #2130706432	; 0x7f000000
   2040c:	orrne	r4, r3, r4
   20410:	mov	r0, r4
   20414:	bl	13120 <gpg_strerror@plt>
   20418:	mov	r1, r0
   2041c:	ldr	r0, [pc, #496]	; 20614 <pclose@plt+0xd368>
   20420:	bl	1c9b0 <pclose@plt+0x9704>
   20424:	mov	r0, r8
   20428:	bl	12b50 <gcry_free@plt>
   2042c:	ldr	r0, [sp, #40]	; 0x28
   20430:	bl	130a8 <assuan_release@plt>
   20434:	ldr	r0, [sp, #36]	; 0x24
   20438:	bl	12b50 <gcry_free@plt>
   2043c:	b	20290 <pclose@plt+0xcfe4>
   20440:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   20444:	subs	r4, r0, #0
   20448:	lslne	r3, fp, #24
   2044c:	andne	r3, r3, #2130706432	; 0x7f000000
   20450:	uxthne	r4, r4
   20454:	orrne	r4, r3, r4
   20458:	bl	12f10 <__errno_location@plt>
   2045c:	ldr	r0, [r0]
   20460:	bl	12db4 <strerror@plt>
   20464:	mov	r1, r0
   20468:	ldr	r0, [pc, #424]	; 20618 <pclose@plt+0xd36c>
   2046c:	bl	1c9b0 <pclose@plt+0x9704>
   20470:	mov	r0, r8
   20474:	bl	12b50 <gcry_free@plt>
   20478:	ldr	r0, [sp, #40]	; 0x28
   2047c:	bl	130a8 <assuan_release@plt>
   20480:	mov	r0, r9
   20484:	bl	12b50 <gcry_free@plt>
   20488:	ldr	r0, [sp, #36]	; 0x24
   2048c:	bl	12b50 <gcry_free@plt>
   20490:	b	20290 <pclose@plt+0xcfe4>
   20494:	ldr	r0, [sp, #48]	; 0x30
   20498:	cmp	r0, #0
   2049c:	bne	20204 <pclose@plt+0xcf58>
   204a0:	mov	r0, r9
   204a4:	bl	12b50 <gcry_free@plt>
   204a8:	ldr	r0, [sp, #36]	; 0x24
   204ac:	bl	12b50 <gcry_free@plt>
   204b0:	mov	r0, r8
   204b4:	bl	12b50 <gcry_free@plt>
   204b8:	b	20230 <pclose@plt+0xcf84>
   204bc:	mov	r0, r9
   204c0:	bl	12b50 <gcry_free@plt>
   204c4:	ldr	r0, [sp, #36]	; 0x24
   204c8:	bl	12b50 <gcry_free@plt>
   204cc:	mov	r0, r8
   204d0:	bl	12b50 <gcry_free@plt>
   204d4:	b	202cc <pclose@plt+0xd020>
   204d8:	ldr	r0, [pc, #316]	; 2061c <pclose@plt+0xd370>
   204dc:	bl	1cafc <pclose@plt+0x9850>
   204e0:	b	20248 <pclose@plt+0xcf9c>
   204e4:	ldrb	r3, [sl, #2]
   204e8:	cmp	r3, #45	; 0x2d
   204ec:	bne	20318 <pclose@plt+0xd06c>
   204f0:	mov	r0, r7
   204f4:	bl	13258 <gcry_strdup@plt>
   204f8:	subs	r3, r0, #0
   204fc:	str	r3, [sp, #36]	; 0x24
   20500:	beq	205b8 <pclose@plt+0xd30c>
   20504:	mov	r1, #124	; 0x7c
   20508:	bl	12eb0 <strchr@plt>
   2050c:	mov	sl, r0
   20510:	strb	r4, [sl], #1
   20514:	b	20148 <pclose@plt+0xce9c>
   20518:	lsr	r3, r0, #24
   2051c:	and	r3, r3, #127	; 0x7f
   20520:	cmp	r3, #4
   20524:	ldr	r0, [sp, #40]	; 0x28
   20528:	beq	20564 <pclose@plt+0xd2b8>
   2052c:	mov	r4, r7
   20530:	b	20278 <pclose@plt+0xcfcc>
   20534:	add	r3, sp, #44	; 0x2c
   20538:	str	r3, [sp]
   2053c:	ldr	r2, [sp, #132]	; 0x84
   20540:	ldr	r3, [sp, #40]	; 0x28
   20544:	mov	r1, r8
   20548:	ldr	r0, [pc, #168]	; 205f8 <pclose@plt+0xd34c>
   2054c:	bl	1fc00 <pclose@plt+0xc954>
   20550:	mov	sl, r0
   20554:	ldr	r0, [sp, #48]	; 0x30
   20558:	cmp	r0, #0
   2055c:	beq	20210 <pclose@plt+0xcf64>
   20560:	b	20204 <pclose@plt+0xcf58>
   20564:	str	r4, [sp, #12]
   20568:	str	r4, [sp, #8]
   2056c:	str	r4, [sp, #4]
   20570:	str	r4, [sp]
   20574:	mov	r3, r4
   20578:	mov	r2, r4
   2057c:	ldr	r1, [pc, #156]	; 20620 <pclose@plt+0xd374>
   20580:	bl	12d30 <assuan_transact@plt>
   20584:	cmp	r0, #0
   20588:	movne	r4, r7
   2058c:	bne	20274 <pclose@plt+0xcfc8>
   20590:	ldr	r3, [sp, #132]	; 0x84
   20594:	cmp	r3, #0
   20598:	ldreq	r0, [sp, #40]	; 0x28
   2059c:	beq	203f0 <pclose@plt+0xd144>
   205a0:	mov	r2, #5
   205a4:	ldr	r1, [pc, #120]	; 20624 <pclose@plt+0xd378>
   205a8:	bl	12b98 <dcgettext@plt>
   205ac:	bl	1c94c <pclose@plt+0x96a0>
   205b0:	ldr	r0, [sp, #40]	; 0x28
   205b4:	b	203f0 <pclose@plt+0xd144>
   205b8:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   205bc:	subs	r4, r0, #0
   205c0:	lslne	r3, fp, #24
   205c4:	andne	r3, r3, #2130706432	; 0x7f000000
   205c8:	uxthne	r4, r4
   205cc:	mov	r0, r8
   205d0:	orrne	r4, r3, r4
   205d4:	bl	12b50 <gcry_free@plt>
   205d8:	b	20274 <pclose@plt+0xcfc8>
   205dc:	bl	12bb0 <__stack_chk_fail@plt>
   205e0:	andeq	sp, r3, r0, asr #21
   205e4:	ldrdeq	fp, [r2], -r8
   205e8:	andeq	fp, r2, ip, lsl #16
   205ec:	andeq	fp, r2, r8, ror #16
   205f0:	andeq	fp, r2, r4, ror r8
   205f4:	andeq	fp, r2, ip, lsl #17
   205f8:	andeq	fp, r2, ip, asr lr
   205fc:	strdeq	fp, [r2], -ip
   20600:			; <UNDEFINED> instruction: 0x0002b7b0
   20604:	andeq	r0, r0, r3, lsl #2
   20608:			; <UNDEFINED> instruction: 0x0002b8b8
   2060c:	andeq	fp, r2, r4, ror #15
   20610:	muleq	r2, r8, r8
   20614:	andeq	fp, r2, r4, lsr #16
   20618:	andeq	fp, r2, r4, asr #16
   2061c:	ldrdeq	fp, [r2], -r8
   20620:	andeq	fp, r2, r4, lsl #18
   20624:	andeq	fp, r2, r8, lsl r9
   20628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2062c:	sub	sp, sp, #52	; 0x34
   20630:	ldr	r5, [pc, #828]	; 20974 <pclose@plt+0xd6c8>
   20634:	mov	r6, r0
   20638:	mov	ip, #0
   2063c:	ldr	lr, [r5]
   20640:	mov	r9, r3
   20644:	ldr	r3, [sp, #100]	; 0x64
   20648:	add	r0, sp, #16
   2064c:	str	ip, [r6]
   20650:	str	r1, [sp, #8]
   20654:	mov	r8, r2
   20658:	str	lr, [sp, #44]	; 0x2c
   2065c:	str	ip, [sp, #20]
   20660:	ldr	sl, [sp, #96]	; 0x60
   20664:	str	r3, [sp, #12]
   20668:	bl	12e68 <assuan_new@plt>
   2066c:	subs	r4, r0, #0
   20670:	bne	207c4 <pclose@plt+0xd518>
   20674:	bl	1e390 <pclose@plt+0xb0e4>
   20678:	mov	r3, r4
   2067c:	mov	r2, r4
   20680:	mov	r1, r0
   20684:	mov	fp, r0
   20688:	ldr	r0, [sp, #16]
   2068c:	bl	1327c <assuan_socket_connect@plt>
   20690:	cmp	r0, #0
   20694:	cmpne	r9, #0
   20698:	mov	r7, r0
   2069c:	beq	2078c <pclose@plt+0xd4e0>
   206a0:	cmp	r8, #0
   206a4:	beq	207f0 <pclose@plt+0xd544>
   206a8:	ldrb	r3, [r8]
   206ac:	cmp	r3, #0
   206b0:	beq	207f0 <pclose@plt+0xd544>
   206b4:	ldr	r3, [sp, #88]	; 0x58
   206b8:	cmp	r3, #0
   206bc:	bne	20808 <pclose@plt+0xd55c>
   206c0:	cmp	sl, #0
   206c4:	beq	206dc <pclose@plt+0xd430>
   206c8:	ldr	r0, [sp, #12]
   206cc:	mov	r3, #0
   206d0:	ldr	r2, [pc, #672]	; 20978 <pclose@plt+0xd6cc>
   206d4:	mov	r1, #50	; 0x32
   206d8:	blx	sl
   206dc:	bl	1deec <pclose@plt+0xac40>
   206e0:	mov	r1, #0
   206e4:	bl	1867c <pclose@plt+0x53d0>
   206e8:	subs	r9, r0, #0
   206ec:	beq	20878 <pclose@plt+0xd5cc>
   206f0:	mov	r0, #0
   206f4:	bl	12a90 <fflush@plt>
   206f8:	cmp	r0, #0
   206fc:	bne	20824 <pclose@plt+0xd578>
   20700:	ldr	r2, [pc, #628]	; 2097c <pclose@plt+0xd6d0>
   20704:	ldr	r3, [pc, #628]	; 20980 <pclose@plt+0xd6d4>
   20708:	str	r9, [sp, #36]	; 0x24
   2070c:	str	r0, [sp, #40]	; 0x28
   20710:	strd	r2, [sp, #28]
   20714:	bl	1deec <pclose@plt+0xac40>
   20718:	ldr	r2, [pc, #612]	; 20984 <pclose@plt+0xd6d8>
   2071c:	mov	r1, r0
   20720:	add	r0, sp, #24
   20724:	bl	1fb4c <pclose@plt+0xc8a0>
   20728:	subs	r7, r0, #0
   2072c:	beq	208b4 <pclose@plt+0xd608>
   20730:	ldr	r0, [sp, #24]
   20734:	cmp	r0, #0
   20738:	beq	208f8 <pclose@plt+0xd64c>
   2073c:	bl	24008 <pclose@plt+0x10d5c>
   20740:	mov	r3, #0
   20744:	str	r3, [sp, #24]
   20748:	mov	r0, r9
   2074c:	bl	12b50 <gcry_free@plt>
   20750:	cmp	r7, #0
   20754:	beq	20794 <pclose@plt+0xd4e8>
   20758:	mov	r0, r7
   2075c:	bl	13120 <gpg_strerror@plt>
   20760:	mov	r1, fp
   20764:	mov	r2, r0
   20768:	ldr	r0, [pc, #536]	; 20988 <pclose@plt+0xd6dc>
   2076c:	bl	1c9b0 <pclose@plt+0x9704>
   20770:	ldr	r0, [sp, #16]
   20774:	bl	130a8 <assuan_release@plt>
   20778:	ldr	r3, [sp, #8]
   2077c:	lsl	r4, r3, #24
   20780:	and	r4, r4, #2130706432	; 0x7f000000
   20784:	orr	r4, r4, #92	; 0x5c
   20788:	b	207a8 <pclose@plt+0xd4fc>
   2078c:	cmp	r0, #0
   20790:	bne	20864 <pclose@plt+0xd5b8>
   20794:	ldr	r3, [sp, #92]	; 0x5c
   20798:	cmp	r3, #0
   2079c:	bne	207d8 <pclose@plt+0xd52c>
   207a0:	ldr	r3, [sp, #16]
   207a4:	str	r3, [r6]
   207a8:	ldr	r2, [sp, #44]	; 0x2c
   207ac:	ldr	r3, [r5]
   207b0:	mov	r0, r4
   207b4:	cmp	r2, r3
   207b8:	bne	20970 <pclose@plt+0xd6c4>
   207bc:	add	sp, sp, #52	; 0x34
   207c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207c4:	bl	13120 <gpg_strerror@plt>
   207c8:	mov	r1, r0
   207cc:	ldr	r0, [pc, #440]	; 2098c <pclose@plt+0xd6e0>
   207d0:	bl	1c9b0 <pclose@plt+0x9704>
   207d4:	b	207a8 <pclose@plt+0xd4fc>
   207d8:	ldr	r3, [sp, #20]
   207dc:	cmp	r3, #0
   207e0:	bne	207a0 <pclose@plt+0xd4f4>
   207e4:	ldr	r0, [pc, #420]	; 20990 <pclose@plt+0xd6e4>
   207e8:	bl	1cafc <pclose@plt+0x9850>
   207ec:	b	207a0 <pclose@plt+0xd4f4>
   207f0:	mov	r0, #4
   207f4:	bl	1e47c <pclose@plt+0xb1d0>
   207f8:	ldr	r3, [sp, #88]	; 0x58
   207fc:	cmp	r3, #0
   20800:	mov	r8, r0
   20804:	beq	206c0 <pclose@plt+0xd414>
   20808:	mov	r2, #5
   2080c:	ldr	r1, [pc, #384]	; 20994 <pclose@plt+0xd6e8>
   20810:	mov	r0, #0
   20814:	bl	12b98 <dcgettext@plt>
   20818:	mov	r1, r8
   2081c:	bl	1c94c <pclose@plt+0x96a0>
   20820:	b	206c0 <pclose@plt+0xd414>
   20824:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   20828:	subs	r4, r0, #0
   2082c:	ldrne	r3, [sp, #8]
   20830:	uxthne	r4, r4
   20834:	lslne	sl, r3, #24
   20838:	andne	sl, sl, #2130706432	; 0x7f000000
   2083c:	orrne	r4, sl, r4
   20840:	bl	12f10 <__errno_location@plt>
   20844:	ldr	r0, [r0]
   20848:	bl	12db4 <strerror@plt>
   2084c:	mov	r1, r0
   20850:	ldr	r0, [pc, #320]	; 20998 <pclose@plt+0xd6ec>
   20854:	bl	1c9b0 <pclose@plt+0x9704>
   20858:	ldr	r0, [sp, #16]
   2085c:	bl	130a8 <assuan_release@plt>
   20860:	b	207a8 <pclose@plt+0xd4fc>
   20864:	ldr	r3, [pc, #304]	; 2099c <pclose@plt+0xd6f0>
   20868:	uxth	r2, r0
   2086c:	cmp	r2, r3
   20870:	bne	20758 <pclose@plt+0xd4ac>
   20874:	b	20770 <pclose@plt+0xd4c4>
   20878:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   2087c:	subs	r4, r0, #0
   20880:	ldrne	r3, [sp, #8]
   20884:	uxthne	r4, r4
   20888:	lslne	sl, r3, #24
   2088c:	andne	sl, sl, #2130706432	; 0x7f000000
   20890:	orrne	r4, sl, r4
   20894:	mov	r0, r4
   20898:	bl	13120 <gpg_strerror@plt>
   2089c:	mov	r1, r0
   208a0:	ldr	r0, [pc, #248]	; 209a0 <pclose@plt+0xd6f4>
   208a4:	bl	1c9b0 <pclose@plt+0x9704>
   208a8:	ldr	r0, [sp, #16]
   208ac:	bl	130a8 <assuan_release@plt>
   208b0:	b	207a8 <pclose@plt+0xd4fc>
   208b4:	mov	r3, r7
   208b8:	mov	r2, r7
   208bc:	mov	r1, fp
   208c0:	ldr	r0, [sp, #16]
   208c4:	bl	1327c <assuan_socket_connect@plt>
   208c8:	subs	r3, r0, #0
   208cc:	bne	20904 <pclose@plt+0xd658>
   208d0:	ldr	r0, [sp, #24]
   208d4:	str	r3, [sp, #8]
   208d8:	cmp	r0, #0
   208dc:	beq	20934 <pclose@plt+0xd688>
   208e0:	bl	24008 <pclose@plt+0x10d5c>
   208e4:	ldr	r3, [sp, #8]
   208e8:	mov	r0, r9
   208ec:	str	r3, [sp, #24]
   208f0:	bl	12b50 <gcry_free@plt>
   208f4:	b	20794 <pclose@plt+0xd4e8>
   208f8:	mov	r0, r9
   208fc:	bl	12b50 <gcry_free@plt>
   20900:	b	20758 <pclose@plt+0xd4ac>
   20904:	mov	r2, r7
   20908:	add	r1, sp, #28
   2090c:	mov	r0, r8
   20910:	bl	2266c <pclose@plt+0xf3c0>
   20914:	subs	r7, r0, #0
   20918:	beq	20940 <pclose@plt+0xd694>
   2091c:	bl	13120 <gpg_strerror@plt>
   20920:	mov	r1, r8
   20924:	mov	r2, r0
   20928:	ldr	r0, [pc, #116]	; 209a4 <pclose@plt+0xd6f8>
   2092c:	bl	1c9b0 <pclose@plt+0x9704>
   20930:	b	20730 <pclose@plt+0xd484>
   20934:	mov	r0, r9
   20938:	bl	12b50 <gcry_free@plt>
   2093c:	b	20794 <pclose@plt+0xd4e8>
   20940:	add	r3, sp, #20
   20944:	str	r3, [sp]
   20948:	ldr	r2, [sp, #88]	; 0x58
   2094c:	ldr	r3, [sp, #16]
   20950:	mov	r1, fp
   20954:	ldr	r0, [pc, #40]	; 20984 <pclose@plt+0xd6d8>
   20958:	bl	1fc00 <pclose@plt+0xc954>
   2095c:	mov	r7, r0
   20960:	ldr	r0, [sp, #24]
   20964:	cmp	r0, #0
   20968:	beq	20748 <pclose@plt+0xd49c>
   2096c:	b	2073c <pclose@plt+0xd490>
   20970:	bl	12bb0 <__stack_chk_fail@plt>
   20974:	andeq	sp, r3, r0, asr #21
   20978:	andeq	fp, r2, r8, ror #18
   2097c:	andeq	fp, r2, ip, lsl #17
   20980:	andeq	fp, r2, r8, ror #16
   20984:	andeq	sl, r2, ip, lsl #11
   20988:	andeq	fp, r2, r8, lsr #19
   2098c:			; <UNDEFINED> instruction: 0x0002b7b0
   20990:	ldrdeq	fp, [r2], -r0
   20994:	andeq	fp, r2, r4, asr #18
   20998:	andeq	fp, r2, r4, asr #16
   2099c:	andeq	r0, r0, r3, lsl #2
   209a0:	andeq	fp, r2, r4, lsr #16
   209a4:	andeq	fp, r2, r0, lsl #19
   209a8:	push	{r4, r5, r6, r7, r8, lr}
   209ac:	sub	sp, sp, #40	; 0x28
   209b0:	ldr	r5, [pc, #192]	; 20a78 <pclose@plt+0xd7cc>
   209b4:	mov	r6, r1
   209b8:	mov	r8, r0
   209bc:	ldr	r3, [r5]
   209c0:	add	r0, sp, #20
   209c4:	mov	r1, #64	; 0x40
   209c8:	mov	r7, r2
   209cc:	str	r3, [sp, #36]	; 0x24
   209d0:	bl	1ebbc <pclose@plt+0xb910>
   209d4:	ldr	r3, [pc, #160]	; 20a7c <pclose@plt+0xd7d0>
   209d8:	mov	r4, #0
   209dc:	cmp	r6, #2
   209e0:	ldr	r1, [pc, #152]	; 20a80 <pclose@plt+0xd7d4>
   209e4:	mov	r0, r8
   209e8:	movne	r1, r3
   209ec:	str	r4, [sp, #12]
   209f0:	add	r3, sp, #20
   209f4:	str	r4, [sp, #8]
   209f8:	str	r4, [sp, #4]
   209fc:	str	r4, [sp]
   20a00:	ldr	r2, [pc, #124]	; 20a84 <pclose@plt+0xd7d8>
   20a04:	bl	12d30 <assuan_transact@plt>
   20a08:	subs	r6, r0, #0
   20a0c:	beq	20a40 <pclose@plt+0xd794>
   20a10:	mov	r1, r4
   20a14:	add	r0, sp, #20
   20a18:	bl	1edfc <pclose@plt+0xbb50>
   20a1c:	bl	12b50 <gcry_free@plt>
   20a20:	str	r4, [r7]
   20a24:	ldr	r2, [sp, #36]	; 0x24
   20a28:	ldr	r3, [r5]
   20a2c:	mov	r0, r6
   20a30:	cmp	r2, r3
   20a34:	bne	20a74 <pclose@plt+0xd7c8>
   20a38:	add	sp, sp, #40	; 0x28
   20a3c:	pop	{r4, r5, r6, r7, r8, pc}
   20a40:	mov	r2, #1
   20a44:	ldr	r1, [pc, #60]	; 20a88 <pclose@plt+0xd7dc>
   20a48:	add	r0, sp, #20
   20a4c:	bl	1ec6c <pclose@plt+0xb9c0>
   20a50:	mov	r1, r6
   20a54:	add	r0, sp, #20
   20a58:	bl	1edfc <pclose@plt+0xbb50>
   20a5c:	cmp	r0, #0
   20a60:	str	r0, [r7]
   20a64:	bne	20a24 <pclose@plt+0xd778>
   20a68:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   20a6c:	uxth	r6, r0
   20a70:	b	20a24 <pclose@plt+0xd778>
   20a74:	bl	12bb0 <__stack_chk_fail@plt>
   20a78:	andeq	sp, r3, r0, asr #21
   20a7c:	strdeq	fp, [r2], -ip
   20a80:	strdeq	fp, [r2], -r8
   20a84:	andeq	lr, r1, r4, lsl sp
   20a88:	muleq	r2, r8, r7
   20a8c:	ldr	r3, [pc, #8]	; 20a9c <pclose@plt+0xd7f0>
   20a90:	mov	r2, #1
   20a94:	str	r2, [r3]
   20a98:	bx	lr
   20a9c:	andeq	lr, r3, ip, lsr #14
   20aa0:	push	{r4, r5, r6, lr}
   20aa4:	sub	sp, sp, #288	; 0x120
   20aa8:	ldr	r4, [pc, #108]	; 20b1c <pclose@plt+0xd870>
   20aac:	cmp	r2, #0
   20ab0:	mov	r6, r1
   20ab4:	ldr	r3, [r4]
   20ab8:	mov	r5, r0
   20abc:	str	r3, [sp, #284]	; 0x11c
   20ac0:	beq	20adc <pclose@plt+0xd830>
   20ac4:	add	r2, sp, #4
   20ac8:	mov	r1, #0
   20acc:	bl	12c7c <sigaction@plt>
   20ad0:	ldr	r3, [sp, #4]
   20ad4:	cmp	r3, #1
   20ad8:	beq	20b00 <pclose@plt+0xd854>
   20adc:	add	r0, sp, #148	; 0x94
   20ae0:	str	r6, [sp, #144]	; 0x90
   20ae4:	bl	13084 <sigemptyset@plt>
   20ae8:	mov	r3, #0
   20aec:	mov	r0, r5
   20af0:	add	r1, sp, #144	; 0x90
   20af4:	mov	r2, r3
   20af8:	str	r3, [sp, #276]	; 0x114
   20afc:	bl	12c7c <sigaction@plt>
   20b00:	ldr	r2, [sp, #284]	; 0x11c
   20b04:	ldr	r3, [r4]
   20b08:	cmp	r2, r3
   20b0c:	bne	20b18 <pclose@plt+0xd86c>
   20b10:	add	sp, sp, #288	; 0x120
   20b14:	pop	{r4, r5, r6, pc}
   20b18:	bl	12bb0 <__stack_chk_fail@plt>
   20b1c:	andeq	sp, r3, r0, asr #21
   20b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b24:	mov	r7, r0
   20b28:	ldr	r4, [pc, #392]	; 20cb8 <pclose@plt+0xda0c>
   20b2c:	sub	sp, sp, #12
   20b30:	ldr	r3, [r4, #4]
   20b34:	cmp	r3, #0
   20b38:	bne	20c98 <pclose@plt+0xd9ec>
   20b3c:	ldr	r3, [r4, #8]
   20b40:	mov	r2, #1
   20b44:	cmp	r3, #0
   20b48:	str	r2, [r4, #4]
   20b4c:	beq	20b54 <pclose@plt+0xd8a8>
   20b50:	blx	r3
   20b54:	mov	r2, #1
   20b58:	ldr	r1, [pc, #348]	; 20cbc <pclose@plt+0xda10>
   20b5c:	mov	r0, #2
   20b60:	bl	12fc4 <write@plt>
   20b64:	mov	r0, #0
   20b68:	bl	1c75c <pclose@plt+0x94b0>
   20b6c:	subs	r4, r0, #0
   20b70:	beq	20b88 <pclose@plt+0xd8dc>
   20b74:	bl	12e8c <strlen@plt>
   20b78:	mov	r1, r4
   20b7c:	mov	r2, r0
   20b80:	mov	r0, #2
   20b84:	bl	12fc4 <write@plt>
   20b88:	mov	r2, #9
   20b8c:	ldr	r1, [pc, #300]	; 20cc0 <pclose@plt+0xda14>
   20b90:	mov	r0, #2
   20b94:	bl	12fc4 <write@plt>
   20b98:	cmp	r7, #64	; 0x40
   20b9c:	bhi	20c34 <pclose@plt+0xd988>
   20ba0:	ldr	r3, [pc, #284]	; 20cc4 <pclose@plt+0xda18>
   20ba4:	ldr	r1, [r3, r7, lsl #2]
   20ba8:	cmp	r1, #0
   20bac:	bne	20ca0 <pclose@plt+0xd9f4>
   20bb0:	ldr	r4, [pc, #272]	; 20cc8 <pclose@plt+0xda1c>
   20bb4:	ldr	r9, [pc, #272]	; 20ccc <pclose@plt+0xda20>
   20bb8:	ldr	r8, [pc, #272]	; 20cd0 <pclose@plt+0xda24>
   20bbc:	mov	r5, r1
   20bc0:	mov	sl, r7
   20bc4:	mov	r6, #5
   20bc8:	cmp	r4, sl
   20bcc:	and	r3, r5, #1
   20bd0:	mov	r1, r4
   20bd4:	mov	r0, sl
   20bd8:	ble	20c74 <pclose@plt+0xd9c8>
   20bdc:	cmp	r4, #1
   20be0:	orreq	r3, r3, #1
   20be4:	cmp	r3, #0
   20be8:	moveq	r5, r3
   20bec:	beq	20c1c <pclose@plt+0xd970>
   20bf0:	bl	29048 <pclose@plt+0x15d9c>
   20bf4:	mov	r2, #1
   20bf8:	mov	r1, r9
   20bfc:	cmp	r0, #0
   20c00:	mov	r0, #2
   20c04:	bne	20c1c <pclose@plt+0xd970>
   20c08:	bl	12fc4 <write@plt>
   20c0c:	mov	r0, sl
   20c10:	mov	r1, r4
   20c14:	bl	29268 <pclose@plt+0x15fbc>
   20c18:	mov	sl, r1
   20c1c:	smull	r2, r3, r8, r4
   20c20:	subs	r6, r6, #1
   20c24:	asr	r4, r4, #31
   20c28:	rsb	r4, r4, r3, asr #2
   20c2c:	bne	20bc8 <pclose@plt+0xd91c>
   20c30:	b	20c44 <pclose@plt+0xd998>
   20c34:	ldr	r1, [pc, #152]	; 20cd4 <pclose@plt+0xda28>
   20c38:	mov	r2, #1
   20c3c:	mov	r0, #2
   20c40:	bl	12fc4 <write@plt>
   20c44:	mov	r2, #20
   20c48:	ldr	r1, [pc, #136]	; 20cd8 <pclose@plt+0xda2c>
   20c4c:	mov	r0, #2
   20c50:	bl	12fc4 <write@plt>
   20c54:	mov	r2, #0
   20c58:	mov	r0, r7
   20c5c:	mov	r1, r2
   20c60:	bl	20aa0 <pclose@plt+0xd7f4>
   20c64:	mov	r0, r7
   20c68:	add	sp, sp, #12
   20c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c70:	b	129b8 <raise@plt>
   20c74:	bl	29048 <pclose@plt+0x15d9c>
   20c78:	mov	r2, #1
   20c7c:	mov	fp, r0
   20c80:	add	r1, r9, r0
   20c84:	mov	r0, #2
   20c88:	bl	12fc4 <write@plt>
   20c8c:	cmp	fp, #0
   20c90:	movne	r5, #1
   20c94:	b	20c0c <pclose@plt+0xd960>
   20c98:	bl	129b8 <raise@plt>
   20c9c:	b	20b3c <pclose@plt+0xd890>
   20ca0:	mov	r0, r1
   20ca4:	str	r1, [sp, #4]
   20ca8:	bl	12e8c <strlen@plt>
   20cac:	ldr	r1, [sp, #4]
   20cb0:	mov	r2, r0
   20cb4:	b	20c3c <pclose@plt+0xd990>
   20cb8:	andeq	lr, r3, ip, lsr #14
   20cbc:	strdeq	ip, [r2], -r0
   20cc0:	andeq	fp, r2, r0, lsr #20
   20cc4:	andeq	sp, r3, r4, asr #21
   20cc8:	andeq	r2, r0, r0, lsl r7
   20ccc:	andeq	fp, r2, ip, lsr #20
   20cd0:	strbtvs	r6, [r6], -r7, ror #12
   20cd4:	ldrdeq	r9, [r2], -r0
   20cd8:	andeq	fp, r2, r8, lsr sl
   20cdc:	push	{r4, lr}
   20ce0:	subs	r4, r0, #0
   20ce4:	bne	20d68 <pclose@plt+0xdabc>
   20ce8:	ldr	ip, [pc, #140]	; 20d7c <pclose@plt+0xdad0>
   20cec:	mov	r3, r1
   20cf0:	mov	r2, #1
   20cf4:	ldr	r1, [pc, #132]	; 20d80 <pclose@plt+0xdad4>
   20cf8:	mov	r0, #2
   20cfc:	str	r3, [ip, #8]
   20d00:	bl	20aa0 <pclose@plt+0xd7f4>
   20d04:	mov	r2, #1
   20d08:	mov	r0, r2
   20d0c:	ldr	r1, [pc, #108]	; 20d80 <pclose@plt+0xdad4>
   20d10:	bl	20aa0 <pclose@plt+0xd7f4>
   20d14:	mov	r2, #1
   20d18:	ldr	r1, [pc, #96]	; 20d80 <pclose@plt+0xdad4>
   20d1c:	mov	r0, #15
   20d20:	bl	20aa0 <pclose@plt+0xd7f4>
   20d24:	mov	r2, #1
   20d28:	ldr	r1, [pc, #80]	; 20d80 <pclose@plt+0xdad4>
   20d2c:	mov	r0, #3
   20d30:	bl	20aa0 <pclose@plt+0xd7f4>
   20d34:	mov	r2, #1
   20d38:	ldr	r1, [pc, #64]	; 20d80 <pclose@plt+0xdad4>
   20d3c:	mov	r0, #11
   20d40:	bl	20aa0 <pclose@plt+0xd7f4>
   20d44:	mov	r2, r4
   20d48:	ldr	r1, [pc, #52]	; 20d84 <pclose@plt+0xdad8>
   20d4c:	mov	r0, #10
   20d50:	bl	20aa0 <pclose@plt+0xd7f4>
   20d54:	mov	r2, r4
   20d58:	mov	r1, #1
   20d5c:	mov	r0, #13
   20d60:	pop	{r4, lr}
   20d64:	b	20aa0 <pclose@plt+0xd7f4>
   20d68:	ldr	r3, [pc, #24]	; 20d88 <pclose@plt+0xdadc>
   20d6c:	mov	r2, #169	; 0xa9
   20d70:	ldr	r1, [pc, #20]	; 20d8c <pclose@plt+0xdae0>
   20d74:	ldr	r0, [pc, #20]	; 20d90 <pclose@plt+0xdae4>
   20d78:	bl	13294 <__assert_fail@plt>
   20d7c:	andeq	lr, r3, ip, lsr #14
   20d80:	andeq	r0, r2, r0, lsr #22
   20d84:	andeq	r0, r2, ip, lsl #21
   20d88:	andeq	fp, r2, ip, lsl #20
   20d8c:	andeq	fp, r2, r0, asr sl
   20d90:	andeq	fp, r2, r8, ror #20
   20d94:	push	{r4, r5, r6, lr}
   20d98:	sub	sp, sp, #136	; 0x88
   20d9c:	ldr	r4, [pc, #88]	; 20dfc <pclose@plt+0xdb50>
   20da0:	ldr	r5, [pc, #88]	; 20e00 <pclose@plt+0xdb54>
   20da4:	ldr	r6, [r4, #12]
   20da8:	ldr	r3, [r5]
   20dac:	cmp	r6, #0
   20db0:	str	r3, [sp, #132]	; 0x84
   20db4:	bne	20df0 <pclose@plt+0xdb44>
   20db8:	add	r0, sp, #4
   20dbc:	bl	12eec <sigfillset@plt>
   20dc0:	add	r1, sp, #4
   20dc4:	add	r2, r4, #16
   20dc8:	mov	r0, r6
   20dcc:	bl	12aa8 <sigprocmask@plt>
   20dd0:	ldr	r1, [sp, #132]	; 0x84
   20dd4:	ldr	r2, [r5]
   20dd8:	mov	r3, #1
   20ddc:	cmp	r1, r2
   20de0:	str	r3, [r4, #12]
   20de4:	bne	20df8 <pclose@plt+0xdb4c>
   20de8:	add	sp, sp, #136	; 0x88
   20dec:	pop	{r4, r5, r6, pc}
   20df0:	ldr	r0, [pc, #12]	; 20e04 <pclose@plt+0xdb58>
   20df4:	bl	1cab8 <pclose@plt+0x980c>
   20df8:	bl	12bb0 <__stack_chk_fail@plt>
   20dfc:	andeq	lr, r3, ip, lsr #14
   20e00:	andeq	sp, r3, r0, asr #21
   20e04:	andeq	fp, r2, r0, ror sl
   20e08:	push	{r4, lr}
   20e0c:	ldr	r4, [pc, #44]	; 20e40 <pclose@plt+0xdb94>
   20e10:	ldr	r3, [r4, #12]
   20e14:	cmp	r3, #0
   20e18:	beq	20e38 <pclose@plt+0xdb8c>
   20e1c:	mov	r2, #0
   20e20:	add	r1, r4, #16
   20e24:	mov	r0, #2
   20e28:	bl	12aa8 <sigprocmask@plt>
   20e2c:	mov	r3, #0
   20e30:	str	r3, [r4, #12]
   20e34:	pop	{r4, pc}
   20e38:	ldr	r0, [pc, #4]	; 20e44 <pclose@plt+0xdb98>
   20e3c:	bl	1cab8 <pclose@plt+0x980c>
   20e40:	andeq	lr, r3, ip, lsr #14
   20e44:	muleq	r2, r0, sl
   20e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e4c:	sub	sp, sp, #28
   20e50:	cmp	r3, #0
   20e54:	str	r3, [sp, #20]
   20e58:	addeq	r3, r2, #1
   20e5c:	addeq	r3, r1, r3
   20e60:	streq	r3, [sp, #20]
   20e64:	str	r0, [sp, #12]
   20e68:	ldr	r0, [sp, #20]
   20e6c:	mov	r9, r1
   20e70:	mov	r7, r2
   20e74:	bl	12e8c <strlen@plt>
   20e78:	ldr	r3, [sp, #12]
   20e7c:	ldr	r8, [r3, #4]
   20e80:	cmp	r8, #0
   20e84:	str	r0, [sp, #16]
   20e88:	beq	20fd8 <pclose@plt+0xdd2c>
   20e8c:	ldr	r6, [r3, #8]
   20e90:	mvn	r3, #0
   20e94:	str	r3, [sp, #8]
   20e98:	sub	r6, r6, #4
   20e9c:	mov	r4, #0
   20ea0:	b	20ed0 <pclose@plt+0xdc24>
   20ea4:	bl	1321c <strncmp@plt>
   20ea8:	subs	r3, r0, #0
   20eac:	str	r3, [sp, #4]
   20eb0:	mov	r0, fp
   20eb4:	bne	20ec4 <pclose@plt+0xdc18>
   20eb8:	bl	12e8c <strlen@plt>
   20ebc:	cmp	r0, r7
   20ec0:	beq	20f8c <pclose@plt+0xdce0>
   20ec4:	add	r4, r4, #1
   20ec8:	cmp	r8, r4
   20ecc:	beq	20f00 <pclose@plt+0xdc54>
   20ed0:	ldr	r5, [r6, #4]!
   20ed4:	mov	r2, r7
   20ed8:	add	fp, r5, #8
   20edc:	cmp	r5, #0
   20ee0:	mov	r1, r9
   20ee4:	lsl	sl, r4, #2
   20ee8:	mov	r0, fp
   20eec:	bne	20ea4 <pclose@plt+0xdbf8>
   20ef0:	str	r4, [sp, #8]
   20ef4:	add	r4, r4, #1
   20ef8:	cmp	r8, r4
   20efc:	bne	20ed0 <pclose@plt+0xdc24>
   20f00:	ldr	r3, [sp, #8]
   20f04:	cmn	r3, #1
   20f08:	beq	20fd8 <pclose@plt+0xdd2c>
   20f0c:	ldr	r3, [sp, #16]
   20f10:	add	r0, r7, #13
   20f14:	add	r0, r0, r3
   20f18:	bl	129d0 <gcry_malloc@plt>
   20f1c:	subs	r4, r0, #0
   20f20:	beq	20ffc <pclose@plt+0xdd50>
   20f24:	ldr	r2, [sp, #64]	; 0x40
   20f28:	add	r3, r4, #8
   20f2c:	str	r2, [r4, #4]
   20f30:	mov	r1, r9
   20f34:	mov	r2, r7
   20f38:	mov	r0, r3
   20f3c:	bl	12b2c <memcpy@plt>
   20f40:	add	r2, r7, #1
   20f44:	add	r7, r4, r7
   20f48:	mov	fp, #0
   20f4c:	ldr	r1, [sp, #20]
   20f50:	strb	fp, [r7, #8]
   20f54:	add	r3, r0, r2
   20f58:	str	r3, [r4]
   20f5c:	mov	r0, r3
   20f60:	bl	12cdc <strcpy@plt>
   20f64:	ldr	r5, [sp, #12]
   20f68:	ldr	r6, [sp, #8]
   20f6c:	ldr	r3, [r5, #8]
   20f70:	ldr	r0, [r3, r6, lsl #2]
   20f74:	bl	12b50 <gcry_free@plt>
   20f78:	ldr	r3, [r5, #8]
   20f7c:	mov	r0, fp
   20f80:	str	r4, [r3, r6, lsl #2]
   20f84:	add	sp, sp, #28
   20f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f8c:	ldr	r5, [r5]
   20f90:	str	r4, [sp, #8]
   20f94:	mov	r0, r5
   20f98:	bl	12e8c <strlen@plt>
   20f9c:	ldr	r3, [sp, #16]
   20fa0:	cmp	r0, r3
   20fa4:	bne	20ec4 <pclose@plt+0xdc18>
   20fa8:	mov	r2, r3
   20fac:	ldr	r1, [sp, #20]
   20fb0:	mov	r0, r5
   20fb4:	bl	12b2c <memcpy@plt>
   20fb8:	ldr	r3, [sp, #12]
   20fbc:	ldr	r2, [sp, #64]	; 0x40
   20fc0:	ldr	r0, [sp, #4]
   20fc4:	ldr	r3, [r3, #8]
   20fc8:	ldr	r3, [r3, sl]
   20fcc:	str	r2, [r3, #4]
   20fd0:	add	sp, sp, #28
   20fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20fd8:	ldr	r3, [sp, #12]
   20fdc:	ldr	r3, [r3]
   20fe0:	cmp	r3, r8
   20fe4:	beq	2100c <pclose@plt+0xdd60>
   20fe8:	ldr	r3, [sp, #12]
   20fec:	str	r8, [sp, #8]
   20ff0:	add	r8, r8, #1
   20ff4:	str	r8, [r3, #4]
   20ff8:	b	20f0c <pclose@plt+0xdc60>
   20ffc:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   21000:	uxth	r0, r0
   21004:	add	sp, sp, #28
   21008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2100c:	add	r8, r8, #10
   21010:	mov	r0, r8
   21014:	mov	r1, #4
   21018:	bl	12f64 <gcry_calloc@plt>
   2101c:	subs	r4, r0, #0
   21020:	beq	20ffc <pclose@plt+0xdd50>
   21024:	ldr	r2, [sp, #12]
   21028:	ldr	r3, [r2, #4]
   2102c:	ldr	r0, [r2, #8]
   21030:	cmp	r3, #0
   21034:	addne	r3, r0, r3, lsl #2
   21038:	subne	ip, r3, #4
   2103c:	subne	r2, r4, #4
   21040:	subne	r3, r0, #4
   21044:	beq	21058 <pclose@plt+0xddac>
   21048:	ldr	r1, [r3, #4]!
   2104c:	cmp	r3, ip
   21050:	str	r1, [r2, #4]!
   21054:	bne	21048 <pclose@plt+0xdd9c>
   21058:	ldr	r5, [sp, #12]
   2105c:	str	r8, [r5]
   21060:	bl	12b50 <gcry_free@plt>
   21064:	str	r4, [r5, #8]
   21068:	ldr	r8, [r5, #4]
   2106c:	b	20fe8 <pclose@plt+0xdd3c>
   21070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21074:	sub	sp, sp, #12
   21078:	ldr	r7, [r0]
   2107c:	cmp	r7, #0
   21080:	beq	210ec <pclose@plt+0xde40>
   21084:	mov	r8, r2
   21088:	mov	fp, r1
   2108c:	str	r0, [sp, #4]
   21090:	ldr	r6, [r1]
   21094:	mov	r4, #0
   21098:	b	210a4 <pclose@plt+0xddf8>
   2109c:	cmp	r7, r4
   210a0:	bls	210ec <pclose@plt+0xde40>
   210a4:	ldr	r5, [r6, r4, lsl #2]
   210a8:	lsl	r9, r4, #2
   210ac:	cmp	r5, #0
   210b0:	mov	r1, r8
   210b4:	add	r0, r5, #8
   210b8:	add	r4, r4, #1
   210bc:	beq	2109c <pclose@plt+0xddf0>
   210c0:	bl	12a24 <strcmp@plt>
   210c4:	subs	sl, r0, #0
   210c8:	bne	2109c <pclose@plt+0xddf0>
   210cc:	mov	r0, r5
   210d0:	bl	12b50 <gcry_free@plt>
   210d4:	ldr	r3, [sp, #4]
   210d8:	ldr	r6, [fp]
   210dc:	ldr	r7, [r3]
   210e0:	str	sl, [r6, r9]
   210e4:	cmp	r7, r4
   210e8:	bhi	210a4 <pclose@plt+0xddf8>
   210ec:	mov	r0, #0
   210f0:	add	sp, sp, #12
   210f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   210f8:	ldr	r3, [r0]
   210fc:	cmp	r3, #9
   21100:	bhi	21128 <pclose@plt+0xde7c>
   21104:	add	r2, r3, #1
   21108:	str	r2, [r0]
   2110c:	ldr	r2, [pc, #28]	; 21130 <pclose@plt+0xde84>
   21110:	cmp	r1, #0
   21114:	addne	r0, r2, r3, lsl #3
   21118:	ldrne	r0, [r0, #4]
   2111c:	strne	r0, [r1]
   21120:	ldr	r0, [r2, r3, lsl #3]
   21124:	bx	lr
   21128:	mov	r0, #0
   2112c:	bx	lr
   21130:	andeq	fp, r2, ip, lsr #21
   21134:	push	{r4, r5, r6, lr}
   21138:	mov	r1, #12
   2113c:	mov	r0, #1
   21140:	bl	12f64 <gcry_calloc@plt>
   21144:	subs	r4, r0, #0
   21148:	beq	21178 <pclose@plt+0xdecc>
   2114c:	ldr	r3, [pc, #60]	; 21190 <pclose@plt+0xdee4>
   21150:	mov	r1, #4
   21154:	ldr	r0, [r3]
   21158:	cmp	r0, #0
   2115c:	moveq	r0, #8
   21160:	str	r0, [r4]
   21164:	bl	12f64 <gcry_calloc@plt>
   21168:	cmp	r0, #0
   2116c:	mov	r5, r0
   21170:	str	r0, [r4, #8]
   21174:	beq	21180 <pclose@plt+0xded4>
   21178:	mov	r0, r4
   2117c:	pop	{r4, r5, r6, pc}
   21180:	mov	r0, r4
   21184:	bl	12b50 <gcry_free@plt>
   21188:	mov	r4, r5
   2118c:	b	21178 <pclose@plt+0xdecc>
   21190:			; <UNDEFINED> instruction: 0x0003e7bc
   21194:	push	{r4, r5, r6, lr}
   21198:	subs	r5, r0, #0
   2119c:	popeq	{r4, r5, r6, pc}
   211a0:	ldr	r3, [r5]
   211a4:	sub	r2, r3, #9
   211a8:	cmp	r2, #49	; 0x31
   211ac:	bls	211f4 <pclose@plt+0xdf48>
   211b0:	ldmib	r5, {r1, r2}
   211b4:	cmp	r1, #0
   211b8:	beq	211e0 <pclose@plt+0xdf34>
   211bc:	mov	r4, #0
   211c0:	ldr	r3, [r2, r4, lsl #2]
   211c4:	add	r4, r4, #1
   211c8:	subs	r0, r3, #0
   211cc:	beq	211d8 <pclose@plt+0xdf2c>
   211d0:	bl	12b50 <gcry_free@plt>
   211d4:	ldmib	r5, {r1, r2}
   211d8:	cmp	r1, r4
   211dc:	bhi	211c0 <pclose@plt+0xdf14>
   211e0:	mov	r0, r2
   211e4:	bl	12b50 <gcry_free@plt>
   211e8:	mov	r0, r5
   211ec:	pop	{r4, r5, r6, lr}
   211f0:	b	12b50 <gcry_free@plt>
   211f4:	ldr	r2, [pc, #12]	; 21208 <pclose@plt+0xdf5c>
   211f8:	ldr	r1, [r2]
   211fc:	cmp	r3, r1
   21200:	strhi	r3, [r2]
   21204:	b	211b0 <pclose@plt+0xdf04>
   21208:			; <UNDEFINED> instruction: 0x0003e7bc
   2120c:	push	{r4, r5, lr}
   21210:	subs	r4, r1, #0
   21214:	sub	sp, sp, #12
   21218:	beq	21268 <pclose@plt+0xdfbc>
   2121c:	ldrb	r3, [r4]
   21220:	cmp	r3, #0
   21224:	beq	21268 <pclose@plt+0xdfbc>
   21228:	mov	r5, r0
   2122c:	mov	r1, #61	; 0x3d
   21230:	mov	r0, r4
   21234:	bl	12eb0 <strchr@plt>
   21238:	cmp	r4, r0
   2123c:	beq	21268 <pclose@plt+0xdfbc>
   21240:	cmp	r0, #0
   21244:	beq	21274 <pclose@plt+0xdfc8>
   21248:	mov	r3, #0
   2124c:	sub	r2, r0, r4
   21250:	mov	r1, r4
   21254:	mov	r0, r5
   21258:	str	r3, [sp]
   2125c:	bl	20e48 <pclose@plt+0xdb9c>
   21260:	add	sp, sp, #12
   21264:	pop	{r4, r5, pc}
   21268:	mov	r0, #55	; 0x37
   2126c:	add	sp, sp, #12
   21270:	pop	{r4, r5, pc}
   21274:	mov	r2, r4
   21278:	add	r1, r5, #8
   2127c:	add	r0, r5, #4
   21280:	add	sp, sp, #12
   21284:	pop	{r4, r5, lr}
   21288:	b	21070 <pclose@plt+0xddc4>
   2128c:	push	{r4, r5, r6, lr}
   21290:	subs	r4, r1, #0
   21294:	sub	sp, sp, #8
   21298:	beq	212fc <pclose@plt+0xe050>
   2129c:	ldrb	r3, [r4]
   212a0:	cmp	r3, #0
   212a4:	beq	212fc <pclose@plt+0xe050>
   212a8:	cmp	r2, #0
   212ac:	beq	212e4 <pclose@plt+0xe038>
   212b0:	mov	r6, r0
   212b4:	mov	r0, r4
   212b8:	mov	r5, r2
   212bc:	bl	12e8c <strlen@plt>
   212c0:	mov	r2, #0
   212c4:	str	r2, [sp]
   212c8:	mov	r3, r5
   212cc:	mov	r1, r4
   212d0:	mov	r2, r0
   212d4:	mov	r0, r6
   212d8:	bl	20e48 <pclose@plt+0xdb9c>
   212dc:	add	sp, sp, #8
   212e0:	pop	{r4, r5, r6, pc}
   212e4:	add	r1, r0, #8
   212e8:	mov	r2, r4
   212ec:	add	r0, r0, #4
   212f0:	add	sp, sp, #8
   212f4:	pop	{r4, r5, r6, lr}
   212f8:	b	21070 <pclose@plt+0xddc4>
   212fc:	mov	r0, #55	; 0x37
   21300:	add	sp, sp, #8
   21304:	pop	{r4, r5, r6, pc}
   21308:	cmp	r0, #0
   2130c:	push	{r4, r5, r6, r7, r8, lr}
   21310:	clz	r4, r1
   21314:	lsr	r4, r4, #5
   21318:	moveq	r4, #1
   2131c:	cmp	r4, #0
   21320:	bne	21374 <pclose@plt+0xe0c8>
   21324:	ldrb	r3, [r1]
   21328:	cmp	r3, #0
   2132c:	beq	21374 <pclose@plt+0xe0c8>
   21330:	ldr	r8, [r0, #4]
   21334:	cmp	r8, #0
   21338:	beq	21374 <pclose@plt+0xe0c8>
   2133c:	ldr	r6, [r0, #8]
   21340:	mov	r7, r1
   21344:	sub	r6, r6, #4
   21348:	ldr	r5, [r6, #4]!
   2134c:	mov	r1, r7
   21350:	cmp	r5, #0
   21354:	add	r4, r4, #1
   21358:	add	r0, r5, #8
   2135c:	beq	2136c <pclose@plt+0xe0c0>
   21360:	bl	12a24 <strcmp@plt>
   21364:	cmp	r0, #0
   21368:	beq	2137c <pclose@plt+0xe0d0>
   2136c:	cmp	r4, r8
   21370:	bne	21348 <pclose@plt+0xe09c>
   21374:	mov	r0, #0
   21378:	pop	{r4, r5, r6, r7, r8, pc}
   2137c:	ldr	r3, [r5, #4]
   21380:	cmp	r3, #0
   21384:	ldreq	r0, [r5]
   21388:	pop	{r4, r5, r6, r7, r8, pc}
   2138c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21390:	subs	sl, r2, #0
   21394:	movne	r3, #0
   21398:	strne	r3, [sl]
   2139c:	cmp	r0, #0
   213a0:	clz	r4, r1
   213a4:	lsr	r4, r4, #5
   213a8:	moveq	r4, #1
   213ac:	cmp	r4, #0
   213b0:	sub	sp, sp, #8
   213b4:	bne	21490 <pclose@plt+0xe1e4>
   213b8:	ldrb	r3, [r1]
   213bc:	cmp	r3, #0
   213c0:	beq	21490 <pclose@plt+0xe1e4>
   213c4:	ldr	r8, [r0, #4]
   213c8:	mov	r7, r1
   213cc:	cmp	r8, #0
   213d0:	mov	r9, r0
   213d4:	beq	2140c <pclose@plt+0xe160>
   213d8:	ldr	r6, [r0, #8]
   213dc:	sub	r6, r6, #4
   213e0:	ldr	r5, [r6, #4]!
   213e4:	mov	r1, r7
   213e8:	cmp	r5, #0
   213ec:	add	r4, r4, #1
   213f0:	add	r0, r5, #8
   213f4:	beq	21404 <pclose@plt+0xe158>
   213f8:	bl	12a24 <strcmp@plt>
   213fc:	cmp	r0, #0
   21400:	beq	2149c <pclose@plt+0xe1f0>
   21404:	cmp	r8, r4
   21408:	bne	213e0 <pclose@plt+0xe134>
   2140c:	mov	r0, r7
   21410:	bl	12d48 <getenv@plt>
   21414:	subs	r4, r0, #0
   21418:	beq	214f4 <pclose@plt+0xe248>
   2141c:	ldrb	r3, [r4]
   21420:	cmp	r3, #0
   21424:	beq	214c0 <pclose@plt+0xe214>
   21428:	mov	r0, r7
   2142c:	bl	12e8c <strlen@plt>
   21430:	mov	r2, #1
   21434:	str	r2, [sp]
   21438:	mov	r3, r4
   2143c:	mov	r1, r7
   21440:	mov	r2, r0
   21444:	mov	r0, r9
   21448:	bl	20e48 <pclose@plt+0xdb9c>
   2144c:	ldr	r8, [r9, #4]
   21450:	cmp	r8, #0
   21454:	beq	21490 <pclose@plt+0xe1e4>
   21458:	ldr	r6, [r9, #8]
   2145c:	mov	r5, #0
   21460:	sub	r6, r6, #4
   21464:	ldr	r4, [r6, #4]!
   21468:	mov	r1, r7
   2146c:	cmp	r4, #0
   21470:	add	r5, r5, #1
   21474:	add	r0, r4, #8
   21478:	beq	21488 <pclose@plt+0xe1dc>
   2147c:	bl	12a24 <strcmp@plt>
   21480:	cmp	r0, #0
   21484:	beq	21518 <pclose@plt+0xe26c>
   21488:	cmp	r8, r5
   2148c:	bne	21464 <pclose@plt+0xe1b8>
   21490:	mov	r0, #0
   21494:	add	sp, sp, #8
   21498:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2149c:	cmp	sl, #0
   214a0:	beq	214b4 <pclose@plt+0xe208>
   214a4:	ldr	r3, [r5, #4]
   214a8:	cmp	r3, #0
   214ac:	movne	r3, #1
   214b0:	strne	r3, [sl]
   214b4:	ldr	r0, [r5]
   214b8:	add	sp, sp, #8
   214bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   214c0:	ldr	r1, [pc, #116]	; 2153c <pclose@plt+0xe290>
   214c4:	mov	r0, r7
   214c8:	bl	12a24 <strcmp@plt>
   214cc:	cmp	r0, #0
   214d0:	bne	21428 <pclose@plt+0xe17c>
   214d4:	bl	12e80 <ttyname@plt>
   214d8:	cmp	r0, #0
   214dc:	beq	21428 <pclose@plt+0xe17c>
   214e0:	mov	r0, #0
   214e4:	bl	12e80 <ttyname@plt>
   214e8:	subs	r4, r0, #0
   214ec:	bne	21428 <pclose@plt+0xe17c>
   214f0:	b	21490 <pclose@plt+0xe1e4>
   214f4:	ldr	r1, [pc, #64]	; 2153c <pclose@plt+0xe290>
   214f8:	mov	r0, r7
   214fc:	bl	12a24 <strcmp@plt>
   21500:	cmp	r0, #0
   21504:	bne	21490 <pclose@plt+0xe1e4>
   21508:	bl	12e80 <ttyname@plt>
   2150c:	cmp	r0, #0
   21510:	bne	214e0 <pclose@plt+0xe234>
   21514:	b	21490 <pclose@plt+0xe1e4>
   21518:	cmp	sl, #0
   2151c:	beq	21530 <pclose@plt+0xe284>
   21520:	ldr	r3, [r4, #4]
   21524:	cmp	r3, #0
   21528:	movne	r3, #1
   2152c:	strne	r3, [sl]
   21530:	ldr	r0, [r4]
   21534:	add	sp, sp, #8
   21538:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2153c:	muleq	r2, r0, r7
   21540:	ldr	ip, [r1]
   21544:	cmp	r0, #0
   21548:	push	{r4, r5, lr}
   2154c:	lsrne	lr, ip, #31
   21550:	moveq	lr, #1
   21554:	cmp	lr, #0
   21558:	bne	215bc <pclose@plt+0xe310>
   2155c:	ldr	r5, [r0, #4]
   21560:	cmp	r5, ip
   21564:	bls	215bc <pclose@plt+0xe310>
   21568:	ldr	r0, [r0, #8]
   2156c:	add	lr, r0, ip, lsl #2
   21570:	ldr	r0, [r0, ip, lsl #2]
   21574:	cmp	r0, #0
   21578:	bne	215c4 <pclose@plt+0xe318>
   2157c:	add	ip, ip, #1
   21580:	cmp	r5, ip
   21584:	popls	{r4, r5, pc}
   21588:	ldr	r4, [lr, #4]!
   2158c:	cmp	r4, #0
   21590:	beq	2157c <pclose@plt+0xe2d0>
   21594:	cmp	r3, #0
   21598:	add	ip, ip, #1
   2159c:	str	ip, [r1]
   215a0:	ldrne	r1, [r4, #4]
   215a4:	add	r0, r4, #8
   215a8:	strne	r1, [r3]
   215ac:	cmp	r2, #0
   215b0:	ldrne	r3, [r4]
   215b4:	strne	r3, [r2]
   215b8:	pop	{r4, r5, pc}
   215bc:	mov	r0, #0
   215c0:	pop	{r4, r5, pc}
   215c4:	mov	r4, r0
   215c8:	b	21594 <pclose@plt+0xe2e8>
   215cc:	push	{r4, r5, r6, r7, r8, lr}
   215d0:	mov	r6, r1
   215d4:	mov	r7, r2
   215d8:	mov	r4, r3
   215dc:	mov	r5, r0
   215e0:	bl	1303c <pipe@plt>
   215e4:	cmn	r0, #1
   215e8:	beq	2162c <pclose@plt+0xe380>
   215ec:	cmp	r7, #0
   215f0:	ldreq	r3, [pc, #256]	; 216f8 <pclose@plt+0xe44c>
   215f4:	ldreq	r1, [pc, #256]	; 216fc <pclose@plt+0xe450>
   215f8:	ldreq	r0, [r5]
   215fc:	ldrne	r1, [pc, #252]	; 21700 <pclose@plt+0xe454>
   21600:	ldrne	r3, [pc, #252]	; 21704 <pclose@plt+0xe458>
   21604:	ldrne	r0, [r5, #4]
   21608:	cmp	r4, #0
   2160c:	moveq	r1, r3
   21610:	bl	12d60 <gpgrt_fdopen@plt>
   21614:	cmp	r0, #0
   21618:	str	r0, [r6]
   2161c:	movne	r4, #0
   21620:	beq	21690 <pclose@plt+0xe3e4>
   21624:	mov	r0, r4
   21628:	pop	{r4, r5, r6, r7, r8, pc}
   2162c:	ldr	r3, [pc, #212]	; 21708 <pclose@plt+0xe45c>
   21630:	ldr	r7, [r3]
   21634:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   21638:	mov	r2, #5
   2163c:	ldr	r1, [pc, #200]	; 2170c <pclose@plt+0xe460>
   21640:	subs	r4, r0, #0
   21644:	lslne	r7, r7, #24
   21648:	uxthne	r4, r4
   2164c:	andne	r7, r7, #2130706432	; 0x7f000000
   21650:	mov	r0, #0
   21654:	orrne	r4, r7, r4
   21658:	bl	12b98 <dcgettext@plt>
   2165c:	mov	r7, r0
   21660:	mov	r0, r4
   21664:	bl	13120 <gpg_strerror@plt>
   21668:	mov	r1, r0
   2166c:	mov	r0, r7
   21670:	bl	1c9b0 <pclose@plt+0x9704>
   21674:	mvn	r3, #0
   21678:	mov	r2, #0
   2167c:	str	r3, [r5, #4]
   21680:	str	r3, [r5]
   21684:	mov	r0, r4
   21688:	str	r2, [r6]
   2168c:	pop	{r4, r5, r6, r7, r8, pc}
   21690:	ldr	r3, [pc, #112]	; 21708 <pclose@plt+0xe45c>
   21694:	ldr	r6, [r3]
   21698:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   2169c:	mov	r2, #5
   216a0:	ldr	r1, [pc, #104]	; 21710 <pclose@plt+0xe464>
   216a4:	subs	r4, r0, #0
   216a8:	lslne	r6, r6, #24
   216ac:	andne	r6, r6, #2130706432	; 0x7f000000
   216b0:	uxthne	r4, r4
   216b4:	mov	r0, #0
   216b8:	orrne	r4, r6, r4
   216bc:	bl	12b98 <dcgettext@plt>
   216c0:	mov	r6, r0
   216c4:	mov	r0, r4
   216c8:	bl	13120 <gpg_strerror@plt>
   216cc:	mov	r1, r0
   216d0:	mov	r0, r6
   216d4:	bl	1c9b0 <pclose@plt+0x9704>
   216d8:	ldr	r0, [r5]
   216dc:	bl	1324c <close@plt>
   216e0:	ldr	r0, [r5, #4]
   216e4:	bl	1324c <close@plt>
   216e8:	mvn	r3, #0
   216ec:	str	r3, [r5, #4]
   216f0:	str	r3, [r5]
   216f4:	b	21624 <pclose@plt+0xe378>
   216f8:	strdeq	sl, [r2], -ip
   216fc:	andeq	fp, r2, r4, asr #23
   21700:	ldrdeq	fp, [r2], -r0
   21704:	andeq	sl, r2, r8, lsr lr
   21708:	andeq	lr, r3, r4, asr r6
   2170c:	ldrdeq	fp, [r2], -ip
   21710:	strdeq	fp, [r2], -r8
   21714:	push	{r4, r5, r6, lr}
   21718:	mov	r4, r0
   2171c:	bl	1303c <pipe@plt>
   21720:	cmn	r0, #1
   21724:	beq	21730 <pclose@plt+0xe484>
   21728:	mov	r0, #0
   2172c:	pop	{r4, r5, r6, pc}
   21730:	ldr	r3, [pc, #40]	; 21760 <pclose@plt+0xe4b4>
   21734:	ldr	r5, [r3]
   21738:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   2173c:	mvn	r3, #0
   21740:	str	r3, [r4, #4]
   21744:	str	r3, [r4]
   21748:	cmp	r0, #0
   2174c:	lslne	r5, r5, #24
   21750:	andne	r5, r5, #2130706432	; 0x7f000000
   21754:	uxthne	r0, r0
   21758:	orrne	r0, r5, r0
   2175c:	pop	{r4, r5, r6, pc}
   21760:	andeq	lr, r3, r4, asr r6
   21764:	push	{r4, r5, r6, lr}
   21768:	sub	sp, sp, #24
   2176c:	ldr	r6, [pc, #248]	; 2186c <pclose@plt+0xe5c0>
   21770:	ldr	r0, [pc, #248]	; 21870 <pclose@plt+0xe5c4>
   21774:	ldr	r3, [r6]
   21778:	str	r3, [sp, #20]
   2177c:	bl	12d24 <opendir@plt>
   21780:	subs	r5, r0, #0
   21784:	mvnne	r4, #0
   21788:	beq	21800 <pclose@plt+0xe554>
   2178c:	mov	r0, r5
   21790:	bl	13114 <readdir64@plt>
   21794:	cmp	r0, #0
   21798:	beq	217d4 <pclose@plt+0xe528>
   2179c:	ldrb	r3, [r0, #19]
   217a0:	sub	r3, r3, #48	; 0x30
   217a4:	cmp	r3, #9
   217a8:	bhi	2178c <pclose@plt+0xe4e0>
   217ac:	mov	r2, #10
   217b0:	mov	r1, #0
   217b4:	add	r0, r0, #19
   217b8:	bl	12a3c <strtol@plt>
   217bc:	cmp	r4, r0
   217c0:	movlt	r4, r0
   217c4:	mov	r0, r5
   217c8:	bl	13114 <readdir64@plt>
   217cc:	cmp	r0, #0
   217d0:	bne	2179c <pclose@plt+0xe4f0>
   217d4:	mov	r0, r5
   217d8:	bl	13270 <closedir@plt>
   217dc:	cmn	r4, #1
   217e0:	addne	r0, r4, #1
   217e4:	beq	21800 <pclose@plt+0xe554>
   217e8:	ldr	r2, [sp, #20]
   217ec:	ldr	r3, [r6]
   217f0:	cmp	r2, r3
   217f4:	bne	21868 <pclose@plt+0xe5bc>
   217f8:	add	sp, sp, #24
   217fc:	pop	{r4, r5, r6, pc}
   21800:	mov	r4, sp
   21804:	mov	r1, r4
   21808:	mov	r0, #7
   2180c:	bl	12bf8 <getrlimit64@plt>
   21810:	cmp	r0, #0
   21814:	bne	21830 <pclose@plt+0xe584>
   21818:	ldr	r0, [sp, #8]
   2181c:	cmn	r0, #1
   21820:	beq	21830 <pclose@plt+0xe584>
   21824:	cmn	r0, #-2147483647	; 0x80000001
   21828:	moveq	r0, #256	; 0x100
   2182c:	b	217e8 <pclose@plt+0xe53c>
   21830:	mov	r1, r4
   21834:	mov	r0, #7
   21838:	bl	12bf8 <getrlimit64@plt>
   2183c:	cmp	r0, #0
   21840:	bne	21850 <pclose@plt+0xe5a4>
   21844:	ldr	r0, [sp, #8]
   21848:	cmn	r0, #1
   2184c:	bne	21824 <pclose@plt+0xe578>
   21850:	mov	r0, #4
   21854:	bl	12bc8 <sysconf@plt>
   21858:	cmp	r0, #0
   2185c:	bge	21824 <pclose@plt+0xe578>
   21860:	mov	r0, #20
   21864:	b	217e8 <pclose@plt+0xe53c>
   21868:	bl	12bb0 <__stack_chk_fail@plt>
   2186c:	andeq	sp, r3, r0, asr #21
   21870:	andeq	fp, r2, r0, lsr #24
   21874:	push	{r4, r5, r6, r7, r8, lr}
   21878:	mov	r6, r1
   2187c:	mov	r4, r0
   21880:	bl	21764 <pclose@plt+0xe4b8>
   21884:	cmp	r6, #0
   21888:	mov	r7, r0
   2188c:	beq	21900 <pclose@plt+0xe654>
   21890:	cmp	r0, r4
   21894:	movgt	r5, #0
   21898:	ble	218e8 <pclose@plt+0xe63c>
   2189c:	ldr	r3, [r6, r5, lsl #2]
   218a0:	add	r2, r6, r5, lsl #2
   218a4:	cmn	r3, #1
   218a8:	beq	218d4 <pclose@plt+0xe628>
   218ac:	cmp	r3, r4
   218b0:	movne	r0, r5
   218b4:	bne	218c4 <pclose@plt+0xe618>
   218b8:	b	218f4 <pclose@plt+0xe648>
   218bc:	cmp	r3, r4
   218c0:	beq	218f8 <pclose@plt+0xe64c>
   218c4:	ldr	r3, [r2, #4]!
   218c8:	add	r0, r0, #1
   218cc:	cmn	r3, #1
   218d0:	bne	218bc <pclose@plt+0xe610>
   218d4:	mov	r0, r4
   218d8:	bl	1324c <close@plt>
   218dc:	add	r4, r4, #1
   218e0:	cmp	r7, r4
   218e4:	bne	2189c <pclose@plt+0xe5f0>
   218e8:	mov	r0, #0
   218ec:	pop	{r4, r5, r6, r7, r8, lr}
   218f0:	b	13108 <gpg_err_set_errno@plt>
   218f4:	mov	r0, r5
   218f8:	add	r5, r0, #1
   218fc:	b	218dc <pclose@plt+0xe630>
   21900:	cmp	r0, r4
   21904:	ble	218e8 <pclose@plt+0xe63c>
   21908:	mov	r0, r4
   2190c:	add	r4, r4, #1
   21910:	bl	1324c <close@plt>
   21914:	cmp	r7, r4
   21918:	bne	21908 <pclose@plt+0xe65c>
   2191c:	mov	r0, #0
   21920:	pop	{r4, r5, r6, r7, r8, lr}
   21924:	b	13108 <gpg_err_set_errno@plt>
   21928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2192c:	sub	sp, sp, #20
   21930:	ldr	lr, [pc, #444]	; 21af4 <pclose@plt+0xe848>
   21934:	mov	r8, r2
   21938:	ldr	ip, [sp, #56]	; 0x38
   2193c:	ldr	r2, [lr]
   21940:	subs	r4, r1, #0
   21944:	mov	r5, r0
   21948:	str	r8, [sp]
   2194c:	str	r3, [sp, #4]
   21950:	str	r2, [sp, #12]
   21954:	str	ip, [sp, #8]
   21958:	ldr	r7, [sp, #60]	; 0x3c
   2195c:	ldr	r6, [sp, #64]	; 0x40
   21960:	moveq	r0, r4
   21964:	beq	2198c <pclose@plt+0xe6e0>
   21968:	ldr	r0, [r4]
   2196c:	cmp	r0, #0
   21970:	beq	2198c <pclose@plt+0xe6e0>
   21974:	mov	r3, r4
   21978:	mov	r0, #0
   2197c:	ldr	r2, [r3, #4]!
   21980:	add	r0, r0, #1
   21984:	cmp	r2, #0
   21988:	bne	2197c <pclose@plt+0xe6d0>
   2198c:	mov	r1, #4
   21990:	add	r0, r0, #2
   21994:	bl	131bc <gcry_xcalloc@plt>
   21998:	mov	r1, #47	; 0x2f
   2199c:	mov	r9, r0
   219a0:	mov	r0, r5
   219a4:	bl	130cc <strrchr@plt>
   219a8:	cmp	r0, #0
   219ac:	str	r0, [r9]
   219b0:	beq	21aa8 <pclose@plt+0xe7fc>
   219b4:	add	r0, r0, #1
   219b8:	str	r0, [r9]
   219bc:	cmp	r4, #0
   219c0:	beq	219e8 <pclose@plt+0xe73c>
   219c4:	ldr	r3, [r4]
   219c8:	cmp	r3, #0
   219cc:	beq	219e8 <pclose@plt+0xe73c>
   219d0:	mov	r1, r4
   219d4:	mov	r2, r9
   219d8:	str	r3, [r2, #4]!
   219dc:	ldr	r3, [r1, #4]!
   219e0:	cmp	r3, #0
   219e4:	bne	219d8 <pclose@plt+0xe72c>
   219e8:	cmn	r8, #1
   219ec:	add	sl, sp, #4
   219f0:	mov	r4, #0
   219f4:	ldr	fp, [pc, #252]	; 21af8 <pclose@plt+0xe84c>
   219f8:	beq	21a14 <pclose@plt+0xe768>
   219fc:	add	r4, r4, #1
   21a00:	cmp	r4, #3
   21a04:	beq	21a4c <pclose@plt+0xe7a0>
   21a08:	ldr	r8, [sl], #4
   21a0c:	cmn	r8, #1
   21a10:	bne	219fc <pclose@plt+0xe750>
   21a14:	adds	r1, r4, #0
   21a18:	movne	r1, #1
   21a1c:	mov	r0, fp
   21a20:	bl	12ee0 <__open64_2@plt>
   21a24:	cmn	r0, #1
   21a28:	str	r0, [sl, #-4]
   21a2c:	bne	219fc <pclose@plt+0xe750>
   21a30:	bl	12f10 <__errno_location@plt>
   21a34:	ldr	r0, [r0]
   21a38:	bl	12db4 <strerror@plt>
   21a3c:	ldr	r1, [pc, #180]	; 21af8 <pclose@plt+0xe84c>
   21a40:	mov	r2, r0
   21a44:	ldr	r0, [pc, #176]	; 21afc <pclose@plt+0xe850>
   21a48:	bl	1ca34 <pclose@plt+0x9788>
   21a4c:	mov	r8, sp
   21a50:	mov	r4, #0
   21a54:	ldr	r0, [r8], #4
   21a58:	cmp	r0, r4
   21a5c:	beq	21a70 <pclose@plt+0xe7c4>
   21a60:	mov	r1, r4
   21a64:	bl	12bec <dup2@plt>
   21a68:	cmn	r0, #1
   21a6c:	beq	21ab8 <pclose@plt+0xe80c>
   21a70:	add	r4, r4, #1
   21a74:	cmp	r4, #3
   21a78:	bne	21a54 <pclose@plt+0xe7a8>
   21a7c:	mov	r1, r7
   21a80:	mov	r0, r4
   21a84:	bl	21874 <pclose@plt+0xe5c8>
   21a88:	cmp	r6, #0
   21a8c:	beq	21a94 <pclose@plt+0xe7e8>
   21a90:	blx	r6
   21a94:	mov	r1, r9
   21a98:	mov	r0, r5
   21a9c:	bl	12ed4 <execv@plt>
   21aa0:	mov	r0, #127	; 0x7f
   21aa4:	bl	12b20 <_exit@plt>
   21aa8:	mov	r0, r5
   21aac:	bl	12ff4 <gcry_xstrdup@plt>
   21ab0:	str	r0, [r9]
   21ab4:	b	219bc <pclose@plt+0xe710>
   21ab8:	cmp	r4, #0
   21abc:	ldreq	r4, [pc, #60]	; 21b00 <pclose@plt+0xe854>
   21ac0:	beq	21ad8 <pclose@plt+0xe82c>
   21ac4:	ldr	r3, [pc, #56]	; 21b04 <pclose@plt+0xe858>
   21ac8:	ldr	r2, [pc, #56]	; 21b08 <pclose@plt+0xe85c>
   21acc:	cmp	r4, #1
   21ad0:	moveq	r4, r3
   21ad4:	movne	r4, r2
   21ad8:	bl	12f10 <__errno_location@plt>
   21adc:	ldr	r0, [r0]
   21ae0:	bl	12db4 <strerror@plt>
   21ae4:	mov	r1, r4
   21ae8:	mov	r2, r0
   21aec:	ldr	r0, [pc, #24]	; 21b0c <pclose@plt+0xe860>
   21af0:	bl	1ca34 <pclose@plt+0x9788>
   21af4:	andeq	sp, r3, r0, asr #21
   21af8:	andeq	fp, r2, r4, asr #1
   21afc:	andeq	fp, r2, r8, lsr ip
   21b00:	andeq	ip, r2, ip, ror #25
   21b04:	andeq	fp, r2, r0, lsr ip
   21b08:	andeq	fp, r2, r4, lsr ip
   21b0c:	andeq	fp, r2, r4, asr ip
   21b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b14:	sub	sp, sp, #116	; 0x74
   21b18:	ldr	sl, [pc, #248]	; 21c18 <pclose@plt+0xe96c>
   21b1c:	ldr	r3, [sl]
   21b20:	str	r3, [sp, #108]	; 0x6c
   21b24:	bl	21764 <pclose@plt+0xe4b8>
   21b28:	mov	r1, #4
   21b2c:	mov	r9, r0
   21b30:	mov	r0, #32
   21b34:	bl	129ac <calloc@plt>
   21b38:	subs	r8, r0, #0
   21b3c:	beq	21be0 <pclose@plt+0xe934>
   21b40:	cmp	r9, #0
   21b44:	ble	21c0c <pclose@plt+0xe960>
   21b48:	mov	r5, #0
   21b4c:	mov	r4, r5
   21b50:	mov	r6, #32
   21b54:	b	21ba0 <pclose@plt+0xe8f4>
   21b58:	add	r7, r5, #1
   21b5c:	cmp	r7, r6
   21b60:	bcc	21b8c <pclose@plt+0xe8e0>
   21b64:	cmp	r6, #256	; 0x100
   21b68:	movcc	r3, #32
   21b6c:	movcs	r3, #256	; 0x100
   21b70:	add	r6, r6, r3
   21b74:	mov	r0, r8
   21b78:	lsl	r1, r6, #2
   21b7c:	bl	12c04 <realloc@plt>
   21b80:	subs	fp, r0, #0
   21b84:	beq	21bfc <pclose@plt+0xe950>
   21b88:	mov	r8, fp
   21b8c:	str	r4, [r8, r5, lsl #2]
   21b90:	add	r4, r4, #1
   21b94:	cmp	r9, r4
   21b98:	mov	r5, r7
   21b9c:	beq	21bd4 <pclose@plt+0xe928>
   21ba0:	mov	r2, sp
   21ba4:	mov	r1, r4
   21ba8:	mov	r0, #3
   21bac:	bl	12c70 <__fxstat64@plt>
   21bb0:	cmn	r0, #1
   21bb4:	bne	21b58 <pclose@plt+0xe8ac>
   21bb8:	bl	12f10 <__errno_location@plt>
   21bbc:	ldr	r3, [r0]
   21bc0:	cmp	r3, #9
   21bc4:	bne	21b58 <pclose@plt+0xe8ac>
   21bc8:	add	r4, r4, #1
   21bcc:	cmp	r9, r4
   21bd0:	bne	21ba0 <pclose@plt+0xe8f4>
   21bd4:	add	r5, r8, r5, lsl #2
   21bd8:	mvn	r3, #0
   21bdc:	str	r3, [r5]
   21be0:	ldr	r2, [sp, #108]	; 0x6c
   21be4:	ldr	r3, [sl]
   21be8:	mov	r0, r8
   21bec:	cmp	r2, r3
   21bf0:	bne	21c14 <pclose@plt+0xe968>
   21bf4:	add	sp, sp, #116	; 0x74
   21bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bfc:	mov	r0, r8
   21c00:	bl	12ac0 <free@plt>
   21c04:	mov	r8, fp
   21c08:	b	21be0 <pclose@plt+0xe934>
   21c0c:	mov	r5, r8
   21c10:	b	21bd8 <pclose@plt+0xe92c>
   21c14:	bl	12bb0 <__stack_chk_fail@plt>
   21c18:	andeq	sp, r3, r0, asr #21
   21c1c:	cmp	r1, #0
   21c20:	beq	21c30 <pclose@plt+0xe984>
   21c24:	mov	r3, r2
   21c28:	mov	r2, #0
   21c2c:	b	215cc <pclose@plt+0xe320>
   21c30:	b	21714 <pclose@plt+0xe468>
   21c34:	cmp	r1, #0
   21c38:	beq	21c48 <pclose@plt+0xe99c>
   21c3c:	mov	r3, r2
   21c40:	mov	r2, #1
   21c44:	b	215cc <pclose@plt+0xe320>
   21c48:	b	21714 <pclose@plt+0xe468>
   21c4c:	b	21714 <pclose@plt+0xe468>
   21c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c54:	sub	sp, sp, #76	; 0x4c
   21c58:	ldr	sl, [pc, #976]	; 22030 <pclose@plt+0xed84>
   21c5c:	ldr	ip, [pc, #976]	; 22034 <pclose@plt+0xed88>
   21c60:	ldr	r5, [sp, #116]	; 0x74
   21c64:	ldr	r6, [sl]
   21c68:	cmp	r5, #0
   21c6c:	str	r6, [sp, #68]	; 0x44
   21c70:	ldrd	r6, [sp, #120]	; 0x78
   21c74:	strd	r0, [sp, #16]
   21c78:	ldm	ip, {r0, r1}
   21c7c:	mov	ip, #0
   21c80:	strne	ip, [r5]
   21c84:	cmp	r6, #0
   21c88:	strd	r2, [sp, #24]
   21c8c:	ldr	r4, [sp, #112]	; 0x70
   21c90:	movne	r3, #0
   21c94:	strne	r3, [r6]
   21c98:	ldr	fp, [sp, #128]	; 0x80
   21c9c:	cmp	r7, #0
   21ca0:	movne	r3, #0
   21ca4:	add	lr, sp, #44	; 0x2c
   21ca8:	add	r9, sp, #52	; 0x34
   21cac:	add	r8, sp, #60	; 0x3c
   21cb0:	strne	r3, [r7]
   21cb4:	lsr	r4, r4, #4
   21cb8:	mvn	r3, #0
   21cbc:	cmp	r5, #0
   21cc0:	stm	lr, {r0, r1}
   21cc4:	stm	r9, {r0, r1}
   21cc8:	stm	r8, {r0, r1}
   21ccc:	and	r4, r4, #1
   21cd0:	str	ip, [sp, #32]
   21cd4:	str	ip, [sp, #36]	; 0x24
   21cd8:	str	ip, [sp, #40]	; 0x28
   21cdc:	str	r3, [fp]
   21ce0:	beq	21d00 <pclose@plt+0xea54>
   21ce4:	mov	r3, r4
   21ce8:	mov	r0, lr
   21cec:	mov	r2, #1
   21cf0:	add	r1, sp, #32
   21cf4:	bl	215cc <pclose@plt+0xe320>
   21cf8:	subs	r3, r0, #0
   21cfc:	bne	21dbc <pclose@plt+0xeb10>
   21d00:	cmp	r6, #0
   21d04:	beq	21d24 <pclose@plt+0xea78>
   21d08:	mov	r3, r4
   21d0c:	mov	r0, r9
   21d10:	mov	r2, #0
   21d14:	add	r1, sp, #36	; 0x24
   21d18:	bl	215cc <pclose@plt+0xe320>
   21d1c:	subs	r3, r0, #0
   21d20:	bne	21e3c <pclose@plt+0xeb90>
   21d24:	cmp	r7, #0
   21d28:	beq	21d48 <pclose@plt+0xea9c>
   21d2c:	mov	r3, r4
   21d30:	mov	r0, r8
   21d34:	mov	r2, #0
   21d38:	add	r1, sp, #40	; 0x28
   21d3c:	bl	215cc <pclose@plt+0xe320>
   21d40:	subs	r3, r0, #0
   21d44:	bne	21dd8 <pclose@plt+0xeb2c>
   21d48:	bl	1309c <fork@plt>
   21d4c:	cmn	r0, #1
   21d50:	str	r0, [fp]
   21d54:	beq	21e64 <pclose@plt+0xebb8>
   21d58:	cmp	r0, #0
   21d5c:	beq	21fe8 <pclose@plt+0xed3c>
   21d60:	ldr	r0, [sp, #44]	; 0x2c
   21d64:	cmn	r0, #1
   21d68:	beq	21d70 <pclose@plt+0xeac4>
   21d6c:	bl	1324c <close@plt>
   21d70:	ldr	r0, [sp, #56]	; 0x38
   21d74:	cmn	r0, #1
   21d78:	beq	21d80 <pclose@plt+0xead4>
   21d7c:	bl	1324c <close@plt>
   21d80:	ldr	r0, [sp, #64]	; 0x40
   21d84:	cmn	r0, #1
   21d88:	beq	21d90 <pclose@plt+0xeae4>
   21d8c:	bl	1324c <close@plt>
   21d90:	cmp	r5, #0
   21d94:	ldrne	r3, [sp, #32]
   21d98:	strne	r3, [r5]
   21d9c:	cmp	r6, #0
   21da0:	ldrne	r3, [sp, #36]	; 0x24
   21da4:	strne	r3, [r6]
   21da8:	cmp	r7, #0
   21dac:	movne	r3, #0
   21db0:	ldrne	r2, [sp, #40]	; 0x28
   21db4:	moveq	r3, r7
   21db8:	strne	r2, [r7]
   21dbc:	ldr	r1, [sp, #68]	; 0x44
   21dc0:	ldr	r2, [sl]
   21dc4:	mov	r0, r3
   21dc8:	cmp	r1, r2
   21dcc:	bne	21fe4 <pclose@plt+0xed38>
   21dd0:	add	sp, sp, #76	; 0x4c
   21dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21dd8:	ldr	r0, [sp, #32]
   21ddc:	cmp	r0, #0
   21de0:	beq	21f3c <pclose@plt+0xec90>
   21de4:	str	r3, [sp, #16]
   21de8:	bl	12d0c <gpgrt_fclose@plt>
   21dec:	ldr	r3, [sp, #16]
   21df0:	ldr	r0, [sp, #44]	; 0x2c
   21df4:	cmn	r0, #1
   21df8:	beq	21e08 <pclose@plt+0xeb5c>
   21dfc:	str	r3, [sp, #16]
   21e00:	bl	1324c <close@plt>
   21e04:	ldr	r3, [sp, #16]
   21e08:	ldr	r0, [sp, #36]	; 0x24
   21e0c:	cmp	r0, #0
   21e10:	beq	21f58 <pclose@plt+0xecac>
   21e14:	str	r3, [sp, #16]
   21e18:	bl	12d0c <gpgrt_fclose@plt>
   21e1c:	ldr	r3, [sp, #16]
   21e20:	ldr	r0, [sp, #56]	; 0x38
   21e24:	cmn	r0, #1
   21e28:	beq	21dbc <pclose@plt+0xeb10>
   21e2c:	str	r3, [sp, #16]
   21e30:	bl	1324c <close@plt>
   21e34:	ldr	r3, [sp, #16]
   21e38:	b	21dbc <pclose@plt+0xeb10>
   21e3c:	ldr	r0, [sp, #32]
   21e40:	cmp	r0, #0
   21e44:	beq	21f74 <pclose@plt+0xecc8>
   21e48:	str	r3, [sp, #16]
   21e4c:	bl	12d0c <gpgrt_fclose@plt>
   21e50:	ldr	r3, [sp, #16]
   21e54:	ldr	r0, [sp, #44]	; 0x2c
   21e58:	cmn	r0, #1
   21e5c:	beq	21dbc <pclose@plt+0xeb10>
   21e60:	b	21e2c <pclose@plt+0xeb80>
   21e64:	ldr	r3, [pc, #460]	; 22038 <pclose@plt+0xed8c>
   21e68:	ldr	r4, [r3]
   21e6c:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   21e70:	mov	r2, #5
   21e74:	ldr	r1, [pc, #448]	; 2203c <pclose@plt+0xed90>
   21e78:	subs	r3, r0, #0
   21e7c:	lslne	r4, r4, #24
   21e80:	uxthne	r3, r3
   21e84:	andne	r4, r4, #2130706432	; 0x7f000000
   21e88:	orrne	r3, r4, r3
   21e8c:	mov	r0, #0
   21e90:	str	r3, [sp, #16]
   21e94:	bl	12b98 <dcgettext@plt>
   21e98:	ldr	r3, [sp, #16]
   21e9c:	mov	r4, r0
   21ea0:	mov	r0, r3
   21ea4:	bl	13120 <gpg_strerror@plt>
   21ea8:	mov	r1, r0
   21eac:	mov	r0, r4
   21eb0:	bl	1c9b0 <pclose@plt+0x9704>
   21eb4:	ldr	r0, [sp, #32]
   21eb8:	ldr	r3, [sp, #16]
   21ebc:	cmp	r0, #0
   21ec0:	beq	21f90 <pclose@plt+0xece4>
   21ec4:	bl	12d0c <gpgrt_fclose@plt>
   21ec8:	ldr	r3, [sp, #16]
   21ecc:	ldr	r0, [sp, #44]	; 0x2c
   21ed0:	cmn	r0, #1
   21ed4:	beq	21ee4 <pclose@plt+0xec38>
   21ed8:	str	r3, [sp, #16]
   21edc:	bl	1324c <close@plt>
   21ee0:	ldr	r3, [sp, #16]
   21ee4:	ldr	r0, [sp, #36]	; 0x24
   21ee8:	cmp	r0, #0
   21eec:	beq	21fac <pclose@plt+0xed00>
   21ef0:	str	r3, [sp, #16]
   21ef4:	bl	12d0c <gpgrt_fclose@plt>
   21ef8:	ldr	r3, [sp, #16]
   21efc:	ldr	r0, [sp, #56]	; 0x38
   21f00:	cmn	r0, #1
   21f04:	beq	21f14 <pclose@plt+0xec68>
   21f08:	str	r3, [sp, #16]
   21f0c:	bl	1324c <close@plt>
   21f10:	ldr	r3, [sp, #16]
   21f14:	ldr	r0, [sp, #40]	; 0x28
   21f18:	cmp	r0, #0
   21f1c:	beq	21fc8 <pclose@plt+0xed1c>
   21f20:	str	r3, [sp, #16]
   21f24:	bl	12d0c <gpgrt_fclose@plt>
   21f28:	ldr	r3, [sp, #16]
   21f2c:	ldr	r0, [sp, #64]	; 0x40
   21f30:	cmn	r0, #1
   21f34:	beq	21dbc <pclose@plt+0xeb10>
   21f38:	b	21e2c <pclose@plt+0xeb80>
   21f3c:	ldr	r0, [sp, #48]	; 0x30
   21f40:	cmn	r0, #1
   21f44:	beq	21df0 <pclose@plt+0xeb44>
   21f48:	str	r3, [sp, #16]
   21f4c:	bl	1324c <close@plt>
   21f50:	ldr	r3, [sp, #16]
   21f54:	b	21df0 <pclose@plt+0xeb44>
   21f58:	ldr	r0, [sp, #52]	; 0x34
   21f5c:	cmn	r0, #1
   21f60:	beq	21e20 <pclose@plt+0xeb74>
   21f64:	str	r3, [sp, #16]
   21f68:	bl	1324c <close@plt>
   21f6c:	ldr	r3, [sp, #16]
   21f70:	b	21e20 <pclose@plt+0xeb74>
   21f74:	ldr	r0, [sp, #48]	; 0x30
   21f78:	cmn	r0, #1
   21f7c:	beq	21e54 <pclose@plt+0xeba8>
   21f80:	str	r3, [sp, #16]
   21f84:	bl	1324c <close@plt>
   21f88:	ldr	r3, [sp, #16]
   21f8c:	b	21e54 <pclose@plt+0xeba8>
   21f90:	ldr	r0, [sp, #48]	; 0x30
   21f94:	cmn	r0, #1
   21f98:	beq	21ecc <pclose@plt+0xec20>
   21f9c:	str	r3, [sp, #16]
   21fa0:	bl	1324c <close@plt>
   21fa4:	ldr	r3, [sp, #16]
   21fa8:	b	21ecc <pclose@plt+0xec20>
   21fac:	ldr	r0, [sp, #52]	; 0x34
   21fb0:	cmn	r0, #1
   21fb4:	beq	21efc <pclose@plt+0xec50>
   21fb8:	str	r3, [sp, #16]
   21fbc:	bl	1324c <close@plt>
   21fc0:	ldr	r3, [sp, #16]
   21fc4:	b	21efc <pclose@plt+0xec50>
   21fc8:	ldr	r0, [sp, #60]	; 0x3c
   21fcc:	cmn	r0, #1
   21fd0:	beq	21f2c <pclose@plt+0xec80>
   21fd4:	str	r3, [sp, #16]
   21fd8:	bl	1324c <close@plt>
   21fdc:	ldr	r3, [sp, #16]
   21fe0:	b	21f2c <pclose@plt+0xec80>
   21fe4:	bl	12bb0 <__stack_chk_fail@plt>
   21fe8:	mov	r0, #25
   21fec:	bl	13180 <gcry_control@plt>
   21ff0:	ldr	r0, [sp, #32]
   21ff4:	bl	12d0c <gpgrt_fclose@plt>
   21ff8:	ldr	r0, [sp, #36]	; 0x24
   21ffc:	bl	12d0c <gpgrt_fclose@plt>
   22000:	ldr	r0, [sp, #40]	; 0x28
   22004:	bl	12d0c <gpgrt_fclose@plt>
   22008:	ldr	r2, [sp, #28]
   2200c:	ldr	r3, [sp, #64]	; 0x40
   22010:	str	r2, [sp, #8]
   22014:	ldr	r2, [sp, #24]
   22018:	str	r3, [sp]
   2201c:	str	r2, [sp, #4]
   22020:	ldrd	r0, [sp, #16]
   22024:	ldr	r3, [sp, #56]	; 0x38
   22028:	ldr	r2, [sp, #44]	; 0x2c
   2202c:	bl	21928 <pclose@plt+0xe67c>
   22030:	andeq	sp, r3, r0, asr #21
   22034:			; <UNDEFINED> instruction: 0x0002bbbc
   22038:	andeq	lr, r3, r4, asr r6
   2203c:	andeq	fp, r2, ip, ror #24
   22040:	push	{r4, r5, r6, r7, r8, r9, lr}
   22044:	sub	sp, sp, #20
   22048:	mov	r6, r0
   2204c:	ldr	r5, [sp, #52]	; 0x34
   22050:	mov	r7, r1
   22054:	mov	r8, r2
   22058:	mov	r9, r3
   2205c:	bl	1309c <fork@plt>
   22060:	cmn	r0, #1
   22064:	str	r0, [r5]
   22068:	beq	22088 <pclose@plt+0xeddc>
   2206c:	cmp	r0, #0
   22070:	mov	r4, r0
   22074:	movne	r4, #0
   22078:	beq	220e0 <pclose@plt+0xee34>
   2207c:	mov	r0, r4
   22080:	add	sp, sp, #20
   22084:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22088:	ldr	r3, [pc, #124]	; 2210c <pclose@plt+0xee60>
   2208c:	ldr	r5, [r3]
   22090:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   22094:	mov	r2, #5
   22098:	ldr	r1, [pc, #112]	; 22110 <pclose@plt+0xee64>
   2209c:	subs	r4, r0, #0
   220a0:	lslne	r5, r5, #24
   220a4:	andne	r5, r5, #2130706432	; 0x7f000000
   220a8:	uxthne	r4, r4
   220ac:	mov	r0, #0
   220b0:	orrne	r4, r5, r4
   220b4:	bl	12b98 <dcgettext@plt>
   220b8:	mov	r5, r0
   220bc:	bl	12f10 <__errno_location@plt>
   220c0:	ldr	r0, [r0]
   220c4:	bl	12db4 <strerror@plt>
   220c8:	mov	r1, r0
   220cc:	mov	r0, r5
   220d0:	bl	1c9b0 <pclose@plt+0x9704>
   220d4:	mov	r0, r4
   220d8:	add	sp, sp, #20
   220dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   220e0:	mov	r0, #25
   220e4:	bl	13180 <gcry_control@plt>
   220e8:	ldr	r3, [sp, #48]	; 0x30
   220ec:	str	r4, [sp, #8]
   220f0:	str	r3, [sp]
   220f4:	str	r4, [sp, #4]
   220f8:	mov	r3, r9
   220fc:	mov	r2, r8
   22100:	mov	r1, r7
   22104:	mov	r0, r6
   22108:	bl	21928 <pclose@plt+0xe67c>
   2210c:	andeq	lr, r3, r4, asr r6
   22110:	andeq	fp, r2, ip, ror #24
   22114:	push	{r4, r5, r6, r7, r8, r9, lr}
   22118:	subs	r8, r3, #0
   2211c:	ldr	r7, [pc, #376]	; 2229c <pclose@plt+0xeff0>
   22120:	sub	sp, sp, #12
   22124:	mov	r9, r0
   22128:	ldr	r3, [r7]
   2212c:	mov	r6, r1
   22130:	str	r3, [sp, #4]
   22134:	mvnne	r3, #0
   22138:	strne	r3, [r8]
   2213c:	cmn	r1, #1
   22140:	beq	22270 <pclose@plt+0xefc4>
   22144:	clz	r5, r2
   22148:	lsr	r5, r5, #5
   2214c:	b	22164 <pclose@plt+0xeeb8>
   22150:	bl	12f10 <__errno_location@plt>
   22154:	mov	r4, r0
   22158:	ldr	r0, [r0]
   2215c:	cmp	r0, #4
   22160:	bne	22218 <pclose@plt+0xef6c>
   22164:	mov	r2, r5
   22168:	mov	r1, sp
   2216c:	mov	r0, r6
   22170:	bl	12cc4 <waitpid@plt>
   22174:	cmn	r0, #1
   22178:	beq	22150 <pclose@plt+0xeea4>
   2217c:	cmp	r0, #0
   22180:	moveq	r0, #62	; 0x3e
   22184:	bne	221a0 <pclose@plt+0xeef4>
   22188:	ldr	r2, [sp, #4]
   2218c:	ldr	r3, [r7]
   22190:	cmp	r2, r3
   22194:	bne	22298 <pclose@plt+0xefec>
   22198:	add	sp, sp, #12
   2219c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   221a0:	ldr	r3, [sp]
   221a4:	ands	r2, r3, #127	; 0x7f
   221a8:	bne	221f8 <pclose@plt+0xef4c>
   221ac:	asr	r3, r3, #8
   221b0:	uxtb	r0, r3
   221b4:	cmp	r0, #127	; 0x7f
   221b8:	beq	22278 <pclose@plt+0xefcc>
   221bc:	cmp	r0, #0
   221c0:	beq	22260 <pclose@plt+0xefb4>
   221c4:	cmp	r8, #0
   221c8:	strne	r0, [r8]
   221cc:	movne	r0, #1
   221d0:	bne	22188 <pclose@plt+0xeedc>
   221d4:	mov	r2, #5
   221d8:	ldr	r1, [pc, #192]	; 222a0 <pclose@plt+0xeff4>
   221dc:	mov	r0, r8
   221e0:	bl	12b98 <dcgettext@plt>
   221e4:	mov	r1, r9
   221e8:	ldrb	r2, [sp, #1]
   221ec:	bl	1c9b0 <pclose@plt+0x9704>
   221f0:	mov	r0, #1
   221f4:	b	22188 <pclose@plt+0xeedc>
   221f8:	mov	r2, #5
   221fc:	ldr	r1, [pc, #160]	; 222a4 <pclose@plt+0xeff8>
   22200:	mov	r0, #0
   22204:	bl	12b98 <dcgettext@plt>
   22208:	mov	r1, r9
   2220c:	bl	1c9b0 <pclose@plt+0x9704>
   22210:	mov	r0, #1
   22214:	b	22188 <pclose@plt+0xeedc>
   22218:	bl	12c88 <gpg_err_code_from_errno@plt>
   2221c:	mov	r2, #5
   22220:	ldr	r1, [pc, #128]	; 222a8 <pclose@plt+0xeffc>
   22224:	mov	r5, r0
   22228:	mov	r0, #0
   2222c:	bl	12b98 <dcgettext@plt>
   22230:	mov	r8, r0
   22234:	ldr	r0, [r4]
   22238:	bl	12db4 <strerror@plt>
   2223c:	mov	r1, r6
   22240:	mov	r2, r0
   22244:	mov	r0, r8
   22248:	bl	1c9b0 <pclose@plt+0x9704>
   2224c:	cmp	r5, #0
   22250:	uxthne	r0, r5
   22254:	bne	22188 <pclose@plt+0xeedc>
   22258:	mov	r0, #0
   2225c:	b	22188 <pclose@plt+0xeedc>
   22260:	cmp	r8, #0
   22264:	strne	r0, [r8]
   22268:	bne	22188 <pclose@plt+0xeedc>
   2226c:	b	22258 <pclose@plt+0xefac>
   22270:	mov	r0, #55	; 0x37
   22274:	b	22188 <pclose@plt+0xeedc>
   22278:	mov	r0, r2
   2227c:	ldr	r1, [pc, #40]	; 222ac <pclose@plt+0xf000>
   22280:	mov	r2, #5
   22284:	bl	12b98 <dcgettext@plt>
   22288:	mov	r1, r9
   2228c:	bl	1c9b0 <pclose@plt+0x9704>
   22290:	mov	r0, #115	; 0x73
   22294:	b	22188 <pclose@plt+0xeedc>
   22298:	bl	12bb0 <__stack_chk_fail@plt>
   2229c:	andeq	sp, r3, r0, asr #21
   222a0:			; <UNDEFINED> instruction: 0x0002bcb4
   222a4:	ldrdeq	fp, [r2], -r8
   222a8:	strdeq	fp, [r2], -r8
   222ac:	andeq	fp, r2, r8, lsl #25
   222b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222b4:	sub	sp, sp, #36	; 0x24
   222b8:	mov	sl, r1
   222bc:	str	r0, [sp, #16]
   222c0:	ldr	r0, [pc, #896]	; 22648 <pclose@plt+0xf39c>
   222c4:	ldr	ip, [sp, #72]	; 0x48
   222c8:	str	r3, [sp, #12]
   222cc:	cmp	ip, #0
   222d0:	ldr	r0, [r0]
   222d4:	movne	r3, #0
   222d8:	str	ip, [sp, #4]
   222dc:	mov	r7, r2
   222e0:	str	r0, [sp, #28]
   222e4:	strne	r3, [sp, #8]
   222e8:	beq	225e0 <pclose@plt+0xf334>
   222ec:	cmp	r7, #0
   222f0:	beq	2260c <pclose@plt+0xf360>
   222f4:	ldr	ip, [sl]
   222f8:	cmn	ip, #1
   222fc:	beq	225a0 <pclose@plt+0xf2f4>
   22300:	ldr	r3, [sp, #4]
   22304:	ldr	r9, [pc, #832]	; 2264c <pclose@plt+0xf3a0>
   22308:	sub	r3, r3, #4
   2230c:	mov	r6, r3
   22310:	mov	r4, sl
   22314:	mov	r8, r7
   22318:	mov	r5, #0
   2231c:	str	r3, [sp, #20]
   22320:	ldr	r2, [r9]
   22324:	cmp	r2, #0
   22328:	beq	22358 <pclose@plt+0xf0ac>
   2232c:	ldr	r3, [r2]
   22330:	cmp	r3, ip
   22334:	bne	2234c <pclose@plt+0xf0a0>
   22338:	b	225b8 <pclose@plt+0xf30c>
   2233c:	ldr	r1, [r3]
   22340:	cmp	r1, ip
   22344:	beq	22380 <pclose@plt+0xf0d4>
   22348:	mov	r2, r3
   2234c:	ldr	r3, [r2, #8]
   22350:	cmp	r3, #0
   22354:	bne	2233c <pclose@plt+0xf090>
   22358:	add	r3, r5, #1
   2235c:	mvn	fp, #0
   22360:	cmp	r7, r3
   22364:	str	fp, [r6, #4]!
   22368:	beq	223ac <pclose@plt+0xf100>
   2236c:	ldr	ip, [r4, #4]!
   22370:	cmn	ip, #1
   22374:	beq	225a0 <pclose@plt+0xf2f4>
   22378:	mov	r5, r3
   2237c:	b	22320 <pclose@plt+0xf074>
   22380:	add	r2, r2, #8
   22384:	ldr	r1, [r3, #8]
   22388:	mov	r0, r3
   2238c:	str	r1, [r2]
   22390:	ldr	fp, [r3, #4]
   22394:	bl	12b50 <gcry_free@plt>
   22398:	add	r3, r5, #1
   2239c:	cmp	r7, r3
   223a0:	sub	r8, r8, #1
   223a4:	str	fp, [r6, #4]!
   223a8:	bne	2236c <pclose@plt+0xf0c0>
   223ac:	cmp	r8, #0
   223b0:	beq	22598 <pclose@plt+0xf2ec>
   223b4:	ldr	r3, [sp, #12]
   223b8:	clz	r6, r3
   223bc:	lsr	r6, r6, #5
   223c0:	b	223d4 <pclose@plt+0xf128>
   223c4:	bl	12f10 <__errno_location@plt>
   223c8:	ldr	r3, [r0]
   223cc:	cmp	r3, #4
   223d0:	bne	22454 <pclose@plt+0xf1a8>
   223d4:	mov	r2, r6
   223d8:	add	r1, sp, #24
   223dc:	mvn	r0, #0
   223e0:	bl	12cc4 <waitpid@plt>
   223e4:	cmn	r0, #1
   223e8:	mov	r4, r0
   223ec:	beq	223c4 <pclose@plt+0xf118>
   223f0:	cmp	r0, #0
   223f4:	beq	22614 <pclose@plt+0xf368>
   223f8:	ldr	r3, [sl]
   223fc:	cmp	r0, r3
   22400:	beq	22604 <pclose@plt+0xf358>
   22404:	mov	r2, sl
   22408:	mov	r3, #0
   2240c:	b	22420 <pclose@plt+0xf174>
   22410:	ldr	r1, [r2, #4]!
   22414:	lsl	r0, r3, #2
   22418:	cmp	r1, r4
   2241c:	beq	22574 <pclose@plt+0xf2c8>
   22420:	cmp	r5, r3
   22424:	add	r3, r3, #1
   22428:	bne	22410 <pclose@plt+0xf164>
   2242c:	mov	r0, #12
   22430:	ldr	fp, [sp, #24]
   22434:	bl	129d0 <gcry_malloc@plt>
   22438:	cmp	r0, #0
   2243c:	beq	2261c <pclose@plt+0xf370>
   22440:	ldr	r3, [r9]
   22444:	stm	r0, {r4, fp}
   22448:	str	r3, [r0, #8]
   2244c:	str	r0, [r9]
   22450:	b	223d4 <pclose@plt+0xf128>
   22454:	mov	r4, r0
   22458:	mov	r0, r3
   2245c:	bl	12c88 <gpg_err_code_from_errno@plt>
   22460:	mov	r2, #5
   22464:	ldr	r1, [pc, #484]	; 22650 <pclose@plt+0xf3a4>
   22468:	str	r0, [sp, #12]
   2246c:	mov	r0, #0
   22470:	bl	12b98 <dcgettext@plt>
   22474:	mov	r5, r0
   22478:	ldr	r0, [r4]
   2247c:	bl	12db4 <strerror@plt>
   22480:	mov	r1, r0
   22484:	mov	r0, r5
   22488:	bl	1c9b0 <pclose@plt+0x9704>
   2248c:	ldr	r3, [sp, #12]
   22490:	ldr	r2, [sp, #4]
   22494:	ldr	r4, [pc, #440]	; 22654 <pclose@plt+0xf3a8>
   22498:	add	r7, r2, r7, lsl #2
   2249c:	ldr	r5, [pc, #436]	; 22658 <pclose@plt+0xf3ac>
   224a0:	ldr	r6, [pc, #436]	; 2265c <pclose@plt+0xf3b0>
   224a4:	sub	r7, r7, #4
   224a8:	ldr	r8, [sp, #20]
   224ac:	ldr	r9, [sp, #16]
   224b0:	b	224dc <pclose@plt+0xf230>
   224b4:	mov	r2, #5
   224b8:	mov	r1, r4
   224bc:	mov	r0, #0
   224c0:	bl	12b98 <dcgettext@plt>
   224c4:	ldr	r1, [r9]
   224c8:	bl	1c9b0 <pclose@plt+0x9704>
   224cc:	mov	r3, #1
   224d0:	cmp	r8, r7
   224d4:	add	r9, r9, #4
   224d8:	beq	22544 <pclose@plt+0xf298>
   224dc:	ldr	r2, [r8, #4]!
   224e0:	cmn	r2, #1
   224e4:	beq	224d0 <pclose@plt+0xf224>
   224e8:	ands	r0, r2, #127	; 0x7f
   224ec:	bne	224b4 <pclose@plt+0xf208>
   224f0:	asr	r2, r2, #8
   224f4:	uxtb	r2, r2
   224f8:	cmp	r2, #127	; 0x7f
   224fc:	beq	225c4 <pclose@plt+0xf318>
   22500:	cmp	r2, #0
   22504:	beq	224d0 <pclose@plt+0xf224>
   22508:	ldr	r3, [sp, #8]
   2250c:	cmp	r3, #0
   22510:	streq	r2, [r8]
   22514:	moveq	r3, #1
   22518:	beq	224d0 <pclose@plt+0xf224>
   2251c:	mov	r2, #5
   22520:	mov	r1, r5
   22524:	bl	12b98 <dcgettext@plt>
   22528:	ldr	r1, [r9]
   2252c:	ldrb	r2, [r8, #1]
   22530:	bl	1c9b0 <pclose@plt+0x9704>
   22534:	cmp	r8, r7
   22538:	mov	r3, #1
   2253c:	add	r9, r9, #4
   22540:	bne	224dc <pclose@plt+0xf230>
   22544:	ldr	r0, [sp, #8]
   22548:	str	r3, [sp, #4]
   2254c:	bl	12b50 <gcry_free@plt>
   22550:	ldr	r3, [sp, #4]
   22554:	uxth	r0, r3
   22558:	ldr	r3, [pc, #232]	; 22648 <pclose@plt+0xf39c>
   2255c:	ldr	r2, [sp, #28]
   22560:	ldr	r3, [r3]
   22564:	cmp	r2, r3
   22568:	bne	22644 <pclose@plt+0xf398>
   2256c:	add	sp, sp, #36	; 0x24
   22570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22574:	ldr	r3, [sp, #4]
   22578:	add	r0, r3, r0
   2257c:	ldr	r3, [r0]
   22580:	cmn	r3, #1
   22584:	bne	22630 <pclose@plt+0xf384>
   22588:	ldr	r3, [sp, #24]
   2258c:	subs	r8, r8, #1
   22590:	str	r3, [r0]
   22594:	bne	223d4 <pclose@plt+0xf128>
   22598:	mov	r3, #0
   2259c:	b	22490 <pclose@plt+0xf1e4>
   225a0:	ldr	r3, [pc, #184]	; 22660 <pclose@plt+0xf3b4>
   225a4:	ldr	r3, [r3]
   225a8:	lsl	r3, r3, #24
   225ac:	and	r3, r3, #2130706432	; 0x7f000000
   225b0:	orr	r0, r3, #55	; 0x37
   225b4:	b	22558 <pclose@plt+0xf2ac>
   225b8:	mov	r3, r2
   225bc:	ldr	r2, [pc, #136]	; 2264c <pclose@plt+0xf3a0>
   225c0:	b	22384 <pclose@plt+0xf0d8>
   225c4:	mov	r2, #5
   225c8:	mov	r1, r6
   225cc:	bl	12b98 <dcgettext@plt>
   225d0:	ldr	r1, [r9]
   225d4:	bl	1c9b0 <pclose@plt+0x9704>
   225d8:	mov	r3, #115	; 0x73
   225dc:	b	224d0 <pclose@plt+0xf224>
   225e0:	lsl	r0, r2, #2
   225e4:	bl	129d0 <gcry_malloc@plt>
   225e8:	subs	r3, r0, #0
   225ec:	str	r3, [sp, #4]
   225f0:	ldrne	r3, [sp, #4]
   225f4:	strne	r3, [sp, #8]
   225f8:	bne	222ec <pclose@plt+0xf040>
   225fc:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   22600:	b	22558 <pclose@plt+0xf2ac>
   22604:	ldr	r0, [sp, #4]
   22608:	b	2257c <pclose@plt+0xf2d0>
   2260c:	mov	r3, r7
   22610:	b	22544 <pclose@plt+0xf298>
   22614:	mov	r3, #62	; 0x3e
   22618:	b	22490 <pclose@plt+0xf1e4>
   2261c:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   22620:	cmp	r0, #0
   22624:	beq	223d4 <pclose@plt+0xf128>
   22628:	mov	r3, r0
   2262c:	b	22490 <pclose@plt+0xf1e4>
   22630:	mov	r1, r4
   22634:	ldr	r0, [pc, #40]	; 22664 <pclose@plt+0xf3b8>
   22638:	bl	1c9b0 <pclose@plt+0x9704>
   2263c:	mov	r3, #1
   22640:	b	22490 <pclose@plt+0xf1e4>
   22644:	bl	12bb0 <__stack_chk_fail@plt>
   22648:	andeq	sp, r3, r0, asr #21
   2264c:	andeq	lr, r3, r8, lsr r8
   22650:	andeq	fp, r2, ip, lsr sp
   22654:	ldrdeq	fp, [r2], -r8
   22658:			; <UNDEFINED> instruction: 0x0002bcb4
   2265c:	andeq	fp, r2, r8, lsl #25
   22660:	andeq	lr, r3, r4, asr r6
   22664:	andeq	fp, r2, r8, lsr #26
   22668:	bx	lr
   2266c:	push	{r4, r5, r6, r7, lr}
   22670:	sub	sp, sp, #20
   22674:	mov	r7, r1
   22678:	mov	r6, r2
   2267c:	mov	r5, r0
   22680:	bl	12a9c <getuid@plt>
   22684:	mov	r4, r0
   22688:	bl	12c58 <geteuid@plt>
   2268c:	cmp	r4, r0
   22690:	beq	226b0 <pclose@plt+0xf404>
   22694:	ldr	r3, [pc, #392]	; 22824 <pclose@plt+0xf578>
   22698:	ldr	r0, [r3]
   2269c:	lsl	r0, r0, #24
   226a0:	and	r0, r0, #2130706432	; 0x7f000000
   226a4:	orr	r0, r0, #59	; 0x3b
   226a8:	add	sp, sp, #20
   226ac:	pop	{r4, r5, r6, r7, pc}
   226b0:	mov	r1, #1
   226b4:	mov	r0, r5
   226b8:	bl	1300c <access@plt>
   226bc:	subs	r4, r0, #0
   226c0:	bne	22718 <pclose@plt+0xf46c>
   226c4:	bl	1309c <fork@plt>
   226c8:	cmn	r0, #1
   226cc:	beq	22760 <pclose@plt+0xf4b4>
   226d0:	cmp	r0, #0
   226d4:	bne	22740 <pclose@plt+0xf494>
   226d8:	mov	r0, #25
   226dc:	bl	13180 <gcry_control@plt>
   226e0:	bl	12ea4 <setsid@plt>
   226e4:	cmn	r0, #1
   226e8:	beq	227d4 <pclose@plt+0xf528>
   226ec:	ldr	r0, [pc, #308]	; 22828 <pclose@plt+0xf57c>
   226f0:	bl	12c4c <chdir@plt>
   226f4:	subs	r4, r0, #0
   226f8:	bne	227d4 <pclose@plt+0xf528>
   226fc:	bl	1309c <fork@plt>
   22700:	cmn	r0, #1
   22704:	beq	227d4 <pclose@plt+0xf528>
   22708:	cmp	r0, #0
   2270c:	beq	227dc <pclose@plt+0xf530>
   22710:	mov	r0, r4
   22714:	bl	12b20 <_exit@plt>
   22718:	ldr	r3, [pc, #260]	; 22824 <pclose@plt+0xf578>
   2271c:	ldr	r4, [r3]
   22720:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   22724:	cmp	r0, #0
   22728:	beq	22754 <pclose@plt+0xf4a8>
   2272c:	lsl	r4, r4, #24
   22730:	and	r4, r4, #2130706432	; 0x7f000000
   22734:	uxth	r0, r0
   22738:	orr	r0, r4, r0
   2273c:	b	226a8 <pclose@plt+0xf3fc>
   22740:	mov	r2, r4
   22744:	mov	r1, r4
   22748:	bl	12cc4 <waitpid@plt>
   2274c:	cmn	r0, #1
   22750:	beq	227b4 <pclose@plt+0xf508>
   22754:	mov	r0, #0
   22758:	add	sp, sp, #20
   2275c:	pop	{r4, r5, r6, r7, pc}
   22760:	mov	r2, #5
   22764:	ldr	r1, [pc, #192]	; 2282c <pclose@plt+0xf580>
   22768:	mov	r0, r4
   2276c:	bl	12b98 <dcgettext@plt>
   22770:	mov	r4, r0
   22774:	bl	12f10 <__errno_location@plt>
   22778:	ldr	r0, [r0]
   2277c:	bl	12db4 <strerror@plt>
   22780:	mov	r1, r0
   22784:	mov	r0, r4
   22788:	bl	1c9b0 <pclose@plt+0x9704>
   2278c:	ldr	r3, [pc, #144]	; 22824 <pclose@plt+0xf578>
   22790:	ldr	r4, [r3]
   22794:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   22798:	cmp	r0, #0
   2279c:	beq	22754 <pclose@plt+0xf4a8>
   227a0:	lsl	r3, r4, #24
   227a4:	and	r3, r3, #2130706432	; 0x7f000000
   227a8:	uxth	r0, r0
   227ac:	orr	r0, r3, r0
   227b0:	b	226a8 <pclose@plt+0xf3fc>
   227b4:	bl	12f10 <__errno_location@plt>
   227b8:	ldr	r0, [r0]
   227bc:	bl	12db4 <strerror@plt>
   227c0:	mov	r1, r0
   227c4:	ldr	r0, [pc, #100]	; 22830 <pclose@plt+0xf584>
   227c8:	bl	1c9b0 <pclose@plt+0x9704>
   227cc:	mov	r0, r4
   227d0:	b	226a8 <pclose@plt+0xf3fc>
   227d4:	mov	r0, #1
   227d8:	bl	12b20 <_exit@plt>
   227dc:	cmp	r6, #0
   227e0:	subne	r6, r6, #4
   227e4:	bne	227f4 <pclose@plt+0xf548>
   227e8:	b	22800 <pclose@plt+0xf554>
   227ec:	bl	12ff4 <gcry_xstrdup@plt>
   227f0:	bl	130b4 <putenv@plt>
   227f4:	ldr	r0, [r6, #4]!
   227f8:	cmp	r0, #0
   227fc:	bne	227ec <pclose@plt+0xf540>
   22800:	mov	r2, #0
   22804:	mvn	r3, #0
   22808:	str	r2, [sp, #8]
   2280c:	str	r2, [sp, #4]
   22810:	mov	r1, r7
   22814:	mov	r0, r5
   22818:	str	r3, [sp]
   2281c:	mov	r2, r3
   22820:	bl	21928 <pclose@plt+0xe67c>
   22824:	andeq	lr, r3, r4, asr r6
   22828:	andeq	r9, r2, r8, ror fp
   2282c:	andeq	fp, r2, ip, ror #24
   22830:	andeq	fp, r2, ip, ror #26
   22834:	cmn	r0, #1
   22838:	bxeq	lr
   2283c:	mov	r1, #15
   22840:	b	12e08 <kill@plt>
   22844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22848:	sub	sp, sp, #12
   2284c:	ldr	r9, [pc, #228]	; 22938 <pclose@plt+0xf68c>
   22850:	str	r1, [sp]
   22854:	mov	r1, #64	; 0x40
   22858:	str	r2, [sp, #4]
   2285c:	bl	12eb0 <strchr@plt>
   22860:	ldr	r8, [pc, #212]	; 2293c <pclose@plt+0xf690>
   22864:	mov	r4, r0
   22868:	cmp	r4, #0
   2286c:	beq	228b4 <pclose@plt+0xf608>
   22870:	add	r5, r4, #1
   22874:	mov	r0, r5
   22878:	mov	r1, #64	; 0x40
   2287c:	bl	12eb0 <strchr@plt>
   22880:	ldrb	r3, [r4, #1]
   22884:	sub	r3, r3, #65	; 0x41
   22888:	cmp	r3, #25
   2288c:	mov	r7, r0
   22890:	bhi	228a8 <pclose@plt+0xf5fc>
   22894:	cmp	r0, #0
   22898:	bne	228c4 <pclose@plt+0xf618>
   2289c:	mov	r0, r7
   228a0:	add	sp, sp, #12
   228a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228a8:	mov	r4, r7
   228ac:	cmp	r4, #0
   228b0:	bne	22870 <pclose@plt+0xf5c4>
   228b4:	mov	r7, r4
   228b8:	mov	r0, r7
   228bc:	add	sp, sp, #12
   228c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228c4:	sub	r6, r0, r5
   228c8:	mov	fp, r9
   228cc:	mov	r0, #5
   228d0:	mov	sl, #0
   228d4:	b	228f0 <pclose@plt+0xf644>
   228d8:	add	sl, sl, #1
   228dc:	cmp	sl, #10
   228e0:	beq	228a8 <pclose@plt+0xf5fc>
   228e4:	ldr	fp, [r8, sl, lsl #3]
   228e8:	mov	r0, fp
   228ec:	bl	12e8c <strlen@plt>
   228f0:	cmp	r6, r0
   228f4:	bne	228d8 <pclose@plt+0xf62c>
   228f8:	mov	r0, fp
   228fc:	mov	r2, r6
   22900:	mov	r1, r5
   22904:	bl	12b5c <memcmp@plt>
   22908:	cmp	r0, #0
   2290c:	bne	228d8 <pclose@plt+0xf62c>
   22910:	ldr	r3, [sp]
   22914:	ldr	r2, [pc, #32]	; 2293c <pclose@plt+0xf690>
   22918:	str	r4, [r3]
   2291c:	add	r3, r2, sl, lsl #3
   22920:	ldr	r2, [sp, #4]
   22924:	str	r7, [r2]
   22928:	ldr	r7, [r3, #4]
   2292c:	mov	r0, r7
   22930:	add	sp, sp, #12
   22934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22938:	strdeq	fp, [r2], -r0
   2293c:	andeq	fp, r2, r0, lsr #27
   22940:	cmp	r0, #0
   22944:	bxeq	lr
   22948:	b	22844 <pclose@plt+0xf598>
   2294c:	push	{r4, r5, r6, r7, r8, lr}
   22950:	sub	sp, sp, #32
   22954:	ldr	r8, [pc, #336]	; 22aac <pclose@plt+0xf800>
   22958:	ldr	r7, [pc, #336]	; 22ab0 <pclose@plt+0xf804>
   2295c:	mov	r5, r0
   22960:	ldr	r3, [r8]
   22964:	ldr	r2, [r7]
   22968:	cmp	r3, #0
   2296c:	str	r2, [sp, #28]
   22970:	bne	22984 <pclose@plt+0xf6d8>
   22974:	b	229b8 <pclose@plt+0xf70c>
   22978:	ldr	r3, [r3]
   2297c:	cmp	r3, #0
   22980:	beq	229b8 <pclose@plt+0xf70c>
   22984:	ldr	r2, [r3, #4]
   22988:	cmp	r5, r2
   2298c:	bne	22978 <pclose@plt+0xf6cc>
   22990:	ldr	r4, [r3, #8]
   22994:	cmp	r4, #0
   22998:	beq	229c0 <pclose@plt+0xf714>
   2299c:	ldr	r2, [sp, #28]
   229a0:	ldr	r3, [r7]
   229a4:	mov	r0, r4
   229a8:	cmp	r2, r3
   229ac:	bne	22a90 <pclose@plt+0xf7e4>
   229b0:	add	sp, sp, #32
   229b4:	pop	{r4, r5, r6, r7, r8, pc}
   229b8:	cmp	r5, #0
   229bc:	beq	22a88 <pclose@plt+0xf7dc>
   229c0:	add	r2, sp, #8
   229c4:	add	r1, sp, #4
   229c8:	mov	r0, r5
   229cc:	bl	22844 <pclose@plt+0xf598>
   229d0:	subs	r6, r0, #0
   229d4:	beq	22a88 <pclose@plt+0xf7dc>
   229d8:	mov	r0, r5
   229dc:	bl	12e8c <strlen@plt>
   229e0:	mov	r4, r5
   229e4:	add	r1, r0, #100	; 0x64
   229e8:	add	r0, sp, #12
   229ec:	bl	1ebbc <pclose@plt+0xb910>
   229f0:	b	22a0c <pclose@plt+0xf760>
   229f4:	add	r2, sp, #8
   229f8:	add	r1, sp, #4
   229fc:	mov	r0, r4
   22a00:	bl	22844 <pclose@plt+0xf598>
   22a04:	subs	r6, r0, #0
   22a08:	beq	22a38 <pclose@plt+0xf78c>
   22a0c:	ldr	r2, [sp, #4]
   22a10:	mov	r1, r4
   22a14:	sub	r2, r2, r4
   22a18:	add	r0, sp, #12
   22a1c:	bl	1ec6c <pclose@plt+0xb9c0>
   22a20:	mov	r1, r6
   22a24:	add	r0, sp, #12
   22a28:	bl	1ed34 <pclose@plt+0xba88>
   22a2c:	ldr	r4, [sp, #8]
   22a30:	adds	r4, r4, #1
   22a34:	bne	229f4 <pclose@plt+0xf748>
   22a38:	mov	r1, r4
   22a3c:	add	r0, sp, #12
   22a40:	bl	1ed34 <pclose@plt+0xba88>
   22a44:	mov	r2, #1
   22a48:	ldr	r1, [pc, #100]	; 22ab4 <pclose@plt+0xf808>
   22a4c:	add	r0, sp, #12
   22a50:	bl	1ec6c <pclose@plt+0xb9c0>
   22a54:	add	r0, sp, #12
   22a58:	mov	r1, #0
   22a5c:	bl	1ee34 <pclose@plt+0xbb88>
   22a60:	subs	r4, r0, #0
   22a64:	beq	22a94 <pclose@plt+0xf7e8>
   22a68:	mov	r0, #12
   22a6c:	bl	129a0 <gcry_xmalloc@plt>
   22a70:	ldr	r3, [r8]
   22a74:	str	r5, [r0, #4]
   22a78:	str	r4, [r0, #8]
   22a7c:	str	r3, [r0]
   22a80:	str	r0, [r8]
   22a84:	b	2299c <pclose@plt+0xf6f0>
   22a88:	mov	r4, r5
   22a8c:	b	2299c <pclose@plt+0xf6f0>
   22a90:	bl	12bb0 <__stack_chk_fail@plt>
   22a94:	bl	12f10 <__errno_location@plt>
   22a98:	ldr	r0, [r0]
   22a9c:	bl	12db4 <strerror@plt>
   22aa0:	mov	r1, r0
   22aa4:	ldr	r0, [pc, #12]	; 22ab8 <pclose@plt+0xf80c>
   22aa8:	bl	1ca34 <pclose@plt+0x9788>
   22aac:	andeq	lr, r3, r0, asr #15
   22ab0:	andeq	sp, r3, r0, asr #21
   22ab4:	muleq	r2, r8, r7
   22ab8:	strdeq	fp, [r2], -r8
   22abc:	push	{r4, r5, r6, r7, r8, lr}
   22ac0:	mov	r7, r0
   22ac4:	mov	r8, r1
   22ac8:	mov	r6, r2
   22acc:	bl	12f10 <__errno_location@plt>
   22ad0:	ldr	r3, [r0]
   22ad4:	cmp	r3, #22
   22ad8:	beq	22b44 <pclose@plt+0xf898>
   22adc:	ldr	r4, [pc, #200]	; 22bac <pclose@plt+0xf900>
   22ae0:	mov	r5, r0
   22ae4:	ldr	r0, [r4, #8]
   22ae8:	cmp	r0, #0
   22aec:	beq	22b1c <pclose@plt+0xf870>
   22af0:	mov	r3, #1
   22af4:	str	r3, [r4, #8]
   22af8:	cmp	r6, #0
   22afc:	popeq	{r4, r5, r6, r7, r8, pc}
   22b00:	ldr	r2, [pc, #168]	; 22bb0 <pclose@plt+0xf904>
   22b04:	ldr	r1, [pc, #168]	; 22bb4 <pclose@plt+0xf908>
   22b08:	mov	r3, #0
   22b0c:	str	r1, [r2]
   22b10:	str	r3, [r4, #12]
   22b14:	str	r3, [r4, #16]
   22b18:	pop	{r4, r5, r6, r7, r8, pc}
   22b1c:	mov	r2, #5
   22b20:	ldr	r1, [pc, #144]	; 22bb8 <pclose@plt+0xf90c>
   22b24:	bl	12b98 <dcgettext@plt>
   22b28:	mov	r7, r0
   22b2c:	ldr	r0, [r5]
   22b30:	bl	12db4 <strerror@plt>
   22b34:	mov	r1, r0
   22b38:	mov	r0, r7
   22b3c:	bl	1c94c <pclose@plt+0x96a0>
   22b40:	b	22af0 <pclose@plt+0xf844>
   22b44:	cmp	r7, #0
   22b48:	ldr	r4, [pc, #92]	; 22bac <pclose@plt+0xf900>
   22b4c:	beq	22b64 <pclose@plt+0xf8b8>
   22b50:	ldr	r1, [pc, #92]	; 22bb4 <pclose@plt+0xf908>
   22b54:	mov	r0, r7
   22b58:	bl	12a24 <strcmp@plt>
   22b5c:	cmp	r0, #0
   22b60:	beq	22b9c <pclose@plt+0xf8f0>
   22b64:	mov	r3, #1
   22b68:	ldr	r0, [r4, #4]
   22b6c:	str	r3, [r4, #4]
   22b70:	cmp	r0, #0
   22b74:	bne	22af8 <pclose@plt+0xf84c>
   22b78:	mov	r2, #5
   22b7c:	ldr	r1, [pc, #56]	; 22bbc <pclose@plt+0xf910>
   22b80:	bl	12b98 <dcgettext@plt>
   22b84:	mov	r2, r7
   22b88:	mov	r1, r8
   22b8c:	bl	1c94c <pclose@plt+0x96a0>
   22b90:	cmp	r6, #0
   22b94:	popeq	{r4, r5, r6, r7, r8, pc}
   22b98:	b	22b00 <pclose@plt+0xf854>
   22b9c:	mov	r3, #1
   22ba0:	ldr	r0, [r4]
   22ba4:	str	r3, [r4]
   22ba8:	b	22b70 <pclose@plt+0xf8c4>
   22bac:	andeq	lr, r3, r4, asr #15
   22bb0:	andeq	lr, r3, r4, lsl #3
   22bb4:	andeq	sl, r2, ip, lsr #14
   22bb8:	andeq	fp, r2, ip, ror #29
   22bbc:	andeq	fp, r2, r0, asr #29
   22bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22bc4:	sub	sp, sp, #76	; 0x4c
   22bc8:	mov	r7, #0
   22bcc:	str	r3, [sp, #36]	; 0x24
   22bd0:	ldr	r3, [pc, #1932]	; 23364 <pclose@plt+0x100b8>
   22bd4:	str	r1, [sp, #28]
   22bd8:	add	r1, r0, r1
   22bdc:	ldr	r3, [r3]
   22be0:	str	r0, [sp, #32]
   22be4:	str	r3, [sp, #68]	; 0x44
   22be8:	ldr	r3, [sp, #28]
   22bec:	ldr	sl, [pc, #1908]	; 23368 <pclose@plt+0x100bc>
   22bf0:	cmp	r3, #0
   22bf4:	str	r2, [sp, #24]
   22bf8:	sub	fp, r1, #1
   22bfc:	str	r7, [sp, #16]
   22c00:	str	r7, [sp, #20]
   22c04:	beq	22d10 <pclose@plt+0xfa64>
   22c08:	ldr	r3, [sp, #32]
   22c0c:	mov	r9, #0
   22c10:	mov	r5, r9
   22c14:	mov	r8, r9
   22c18:	sub	r6, r3, #1
   22c1c:	ldr	r4, [sp, #20]
   22c20:	b	22c80 <pclose@plt+0xf9d4>
   22c24:	tst	r3, #128	; 0x80
   22c28:	bne	22da8 <pclose@plt+0xfafc>
   22c2c:	ldr	r1, [sp, #24]
   22c30:	cmn	r1, #1
   22c34:	beq	22c68 <pclose@plt+0xf9bc>
   22c38:	cmp	r3, #127	; 0x7f
   22c3c:	cmpne	r3, #31
   22c40:	bls	22e40 <pclose@plt+0xfb94>
   22c44:	cmp	r3, r1
   22c48:	beq	22e40 <pclose@plt+0xfb94>
   22c4c:	cmp	r1, #0
   22c50:	sub	r2, r3, #92	; 0x5c
   22c54:	clz	r2, r2
   22c58:	lsr	r2, r2, #5
   22c5c:	moveq	r2, #0
   22c60:	cmp	r2, #0
   22c64:	bne	22f50 <pclose@plt+0xfca4>
   22c68:	add	r9, r9, #1
   22c6c:	mov	r7, #0
   22c70:	cmp	r4, #0
   22c74:	strbne	r3, [r4], #1
   22c78:	cmp	fp, r6
   22c7c:	beq	22cec <pclose@plt+0xfa40>
   22c80:	cmp	r7, #0
   22c84:	ldrb	r3, [r6, #1]!
   22c88:	beq	22cac <pclose@plt+0xfa00>
   22c8c:	add	r1, r3, #64	; 0x40
   22c90:	lsr	r2, r3, #7
   22c94:	uxtb	r1, r1
   22c98:	cmp	r1, #61	; 0x3d
   22c9c:	movls	r2, #0
   22ca0:	andhi	r2, r2, #1
   22ca4:	cmp	r2, #0
   22ca8:	bne	22e14 <pclose@plt+0xfb68>
   22cac:	cmp	r8, #0
   22cb0:	beq	22c24 <pclose@plt+0xf978>
   22cb4:	eor	r2, r3, #128	; 0x80
   22cb8:	cmp	r2, #63	; 0x3f
   22cbc:	add	r2, r5, #1
   22cc0:	str	r2, [sp, #12]
   22cc4:	bls	22d58 <pclose@plt+0xfaac>
   22cc8:	cmp	r4, #0
   22ccc:	bne	22fa0 <pclose@plt+0xfcf4>
   22cd0:	ldr	r3, [sp, #12]
   22cd4:	mov	r5, #0
   22cd8:	cmp	fp, r6
   22cdc:	add	r9, r9, r3, lsl #2
   22ce0:	mov	r8, r5
   22ce4:	mov	r7, #1
   22ce8:	bne	22c80 <pclose@plt+0xf9d4>
   22cec:	ldr	r3, [sp, #20]
   22cf0:	cmp	r3, #0
   22cf4:	bne	22d24 <pclose@plt+0xfa78>
   22cf8:	add	r0, r9, #1
   22cfc:	bl	129a0 <gcry_xmalloc@plt>
   22d00:	ldr	r3, [sp, #28]
   22d04:	cmp	r3, #0
   22d08:	str	r0, [sp, #20]
   22d0c:	bne	22c08 <pclose@plt+0xf95c>
   22d10:	ldr	r3, [sp, #20]
   22d14:	ldr	r4, [sp, #20]
   22d18:	cmp	r3, #0
   22d1c:	ldr	r9, [sp, #28]
   22d20:	beq	22cf8 <pclose@plt+0xfa4c>
   22d24:	ldr	r3, [sp, #36]	; 0x24
   22d28:	cmp	r3, #0
   22d2c:	bne	231bc <pclose@plt+0xff10>
   22d30:	ldr	r3, [sp, #36]	; 0x24
   22d34:	strb	r3, [r4]
   22d38:	ldr	r3, [pc, #1572]	; 23364 <pclose@plt+0x100b8>
   22d3c:	ldr	r2, [sp, #68]	; 0x44
   22d40:	ldr	r0, [sp, #20]
   22d44:	ldr	r3, [r3]
   22d48:	cmp	r2, r3
   22d4c:	bne	23350 <pclose@plt+0x100a4>
   22d50:	add	sp, sp, #76	; 0x4c
   22d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d58:	add	r2, sp, #72	; 0x48
   22d5c:	add	r2, r2, r5
   22d60:	and	r1, r3, #63	; 0x3f
   22d64:	strb	r3, [r2, #-12]
   22d68:	ldr	r3, [sp, #16]
   22d6c:	subs	r8, r8, #1
   22d70:	orr	r3, r1, r3, lsl #6
   22d74:	str	r3, [sp, #16]
   22d78:	bne	22f94 <pclose@plt+0xfce8>
   22d7c:	ldr	r3, [pc, #1512]	; 2336c <pclose@plt+0x100c0>
   22d80:	ldr	r7, [r3, #12]
   22d84:	cmp	r7, #0
   22d88:	beq	23018 <pclose@plt+0xfd6c>
   22d8c:	cmp	r4, #0
   22d90:	bne	230f8 <pclose@plt+0xfe4c>
   22d94:	ldr	r3, [sp, #12]
   22d98:	mov	r7, #0
   22d9c:	add	r9, r9, r3
   22da0:	mov	r5, r7
   22da4:	b	22c78 <pclose@plt+0xf9cc>
   22da8:	and	r2, r3, #224	; 0xe0
   22dac:	cmp	r2, #192	; 0xc0
   22db0:	beq	22ffc <pclose@plt+0xfd50>
   22db4:	and	r2, r3, #240	; 0xf0
   22db8:	cmp	r2, #224	; 0xe0
   22dbc:	beq	23040 <pclose@plt+0xfd94>
   22dc0:	and	r2, r3, #248	; 0xf8
   22dc4:	cmp	r2, #240	; 0xf0
   22dc8:	beq	230dc <pclose@plt+0xfe30>
   22dcc:	and	r2, r3, #252	; 0xfc
   22dd0:	cmp	r2, #248	; 0xf8
   22dd4:	beq	23120 <pclose@plt+0xfe74>
   22dd8:	and	r2, r3, #254	; 0xfe
   22ddc:	cmp	r2, #252	; 0xfc
   22de0:	beq	23188 <pclose@plt+0xfedc>
   22de4:	cmp	r4, #0
   22de8:	beq	22e08 <pclose@plt+0xfb5c>
   22dec:	str	r3, [sp]
   22df0:	mov	r0, r4
   22df4:	mov	r3, sl
   22df8:	mvn	r2, #0
   22dfc:	mov	r1, #1
   22e00:	bl	12f34 <__sprintf_chk@plt>
   22e04:	add	r4, r4, #4
   22e08:	add	r9, r9, #4
   22e0c:	mov	r7, #1
   22e10:	b	22c78 <pclose@plt+0xf9cc>
   22e14:	cmp	r4, #0
   22e18:	beq	22e38 <pclose@plt+0xfb8c>
   22e1c:	str	r3, [sp]
   22e20:	mov	r0, r4
   22e24:	mov	r3, sl
   22e28:	mvn	r2, #0
   22e2c:	mov	r1, #1
   22e30:	bl	12f34 <__sprintf_chk@plt>
   22e34:	add	r4, r4, #4
   22e38:	add	r9, r9, #4
   22e3c:	b	22c78 <pclose@plt+0xf9cc>
   22e40:	cmp	r4, #0
   22e44:	beq	2305c <pclose@plt+0xfdb0>
   22e48:	mov	r7, r4
   22e4c:	mov	r2, #92	; 0x5c
   22e50:	strb	r2, [r7], #1
   22e54:	cmp	r3, #13
   22e58:	ldrls	pc, [pc, r3, lsl #2]
   22e5c:	b	22f64 <pclose@plt+0xfcb8>
   22e60:	strdeq	r2, [r2], -r0
   22e64:	andeq	r2, r2, r4, ror #30
   22e68:	andeq	r2, r2, r4, ror #30
   22e6c:	andeq	r2, r2, r4, ror #30
   22e70:	andeq	r2, r2, r4, ror #30
   22e74:	andeq	r2, r2, r4, ror #30
   22e78:	andeq	r2, r2, r4, ror #30
   22e7c:	andeq	r2, r2, r4, ror #30
   22e80:			; <UNDEFINED> instruction: 0x00022eb8
   22e84:	andeq	r2, r2, r4, ror #30
   22e88:	ldrdeq	r2, [r2], -r0
   22e8c:	muleq	r2, ip, lr
   22e90:	andeq	r2, r2, r0, lsr pc
   22e94:	andeq	r2, r2, r0, lsl pc
   22e98:	mov	r7, #0
   22e9c:	subs	r4, r7, #0
   22ea0:	add	r9, r9, #2
   22ea4:	movne	r3, #118	; 0x76
   22ea8:	strbne	r3, [r4], #1
   22eac:	movne	r7, #0
   22eb0:	b	22c78 <pclose@plt+0xf9cc>
   22eb4:	mov	r7, #0
   22eb8:	subs	r4, r7, #0
   22ebc:	add	r9, r9, #2
   22ec0:	movne	r3, #98	; 0x62
   22ec4:	strbne	r3, [r4], #1
   22ec8:	movne	r7, #0
   22ecc:	b	22c78 <pclose@plt+0xf9cc>
   22ed0:	cmp	r7, #0
   22ed4:	add	r9, r9, #2
   22ed8:	beq	232c0 <pclose@plt+0x10014>
   22edc:	mov	r3, #110	; 0x6e
   22ee0:	strb	r3, [r4, #1]
   22ee4:	mov	r7, #0
   22ee8:	add	r4, r4, #2
   22eec:	b	22c78 <pclose@plt+0xf9cc>
   22ef0:	cmp	r7, #0
   22ef4:	add	r9, r9, #2
   22ef8:	beq	232c0 <pclose@plt+0x10014>
   22efc:	mov	r3, #48	; 0x30
   22f00:	strb	r3, [r4, #1]
   22f04:	mov	r7, #0
   22f08:	add	r4, r4, #2
   22f0c:	b	22c78 <pclose@plt+0xf9cc>
   22f10:	cmp	r7, #0
   22f14:	add	r9, r9, #2
   22f18:	beq	232c0 <pclose@plt+0x10014>
   22f1c:	mov	r3, #114	; 0x72
   22f20:	strb	r3, [r4, #1]
   22f24:	mov	r7, #0
   22f28:	add	r4, r4, #2
   22f2c:	b	22c78 <pclose@plt+0xf9cc>
   22f30:	cmp	r7, #0
   22f34:	add	r9, r9, #2
   22f38:	beq	232c0 <pclose@plt+0x10014>
   22f3c:	mov	r3, #102	; 0x66
   22f40:	strb	r3, [r4, #1]
   22f44:	mov	r7, #0
   22f48:	add	r4, r4, #2
   22f4c:	b	22c78 <pclose@plt+0xf9cc>
   22f50:	cmp	r4, #0
   22f54:	movne	r7, r4
   22f58:	movne	r3, #92	; 0x5c
   22f5c:	strbne	r3, [r7], #1
   22f60:	beq	231ac <pclose@plt+0xff00>
   22f64:	cmp	r7, #0
   22f68:	add	r9, r9, #4
   22f6c:	beq	231b4 <pclose@plt+0xff08>
   22f70:	str	r3, [sp]
   22f74:	mov	r0, r7
   22f78:	ldr	r3, [pc, #1008]	; 23370 <pclose@plt+0x100c4>
   22f7c:	mvn	r2, #0
   22f80:	mov	r1, #1
   22f84:	add	r4, r7, #3
   22f88:	bl	12f34 <__sprintf_chk@plt>
   22f8c:	mov	r7, #0
   22f90:	b	22c78 <pclose@plt+0xf9cc>
   22f94:	ldr	r5, [sp, #12]
   22f98:	mov	r7, #0
   22f9c:	b	22c78 <pclose@plt+0xf9cc>
   22fa0:	cmp	r5, #0
   22fa4:	beq	231a4 <pclose@plt+0xfef8>
   22fa8:	add	r5, r4, r5, lsl #2
   22fac:	add	r7, sp, #60	; 0x3c
   22fb0:	ldrb	r1, [r7], #1
   22fb4:	mov	r0, r4
   22fb8:	mov	r3, sl
   22fbc:	str	r1, [sp]
   22fc0:	mvn	r2, #0
   22fc4:	mov	r1, #1
   22fc8:	add	r4, r4, #4
   22fcc:	bl	12f34 <__sprintf_chk@plt>
   22fd0:	cmp	r5, r4
   22fd4:	bne	22fb0 <pclose@plt+0xfd04>
   22fd8:	ldrb	r3, [r6]
   22fdc:	str	r3, [sp]
   22fe0:	mvn	r2, #0
   22fe4:	mov	r3, sl
   22fe8:	mov	r1, #1
   22fec:	mov	r0, r5
   22ff0:	bl	12f34 <__sprintf_chk@plt>
   22ff4:	add	r4, r5, #4
   22ff8:	b	22cd0 <pclose@plt+0xfa24>
   22ffc:	mov	r5, #1
   23000:	strb	r3, [sp, #60]	; 0x3c
   23004:	and	r3, r3, #31
   23008:	mov	r7, r8
   2300c:	str	r3, [sp, #16]
   23010:	mov	r8, r5
   23014:	b	22c78 <pclose@plt+0xf9cc>
   23018:	ldr	r3, [sp, #36]	; 0x24
   2301c:	cmp	r3, #0
   23020:	beq	230ac <pclose@plt+0xfe00>
   23024:	cmp	r4, #0
   23028:	bne	23160 <pclose@plt+0xfeb4>
   2302c:	ldr	r3, [sp, #12]
   23030:	mov	r5, #0
   23034:	add	r9, r9, r3
   23038:	mov	r8, r5
   2303c:	b	22c78 <pclose@plt+0xf9cc>
   23040:	strb	r3, [sp, #60]	; 0x3c
   23044:	and	r3, r3, #15
   23048:	mov	r7, r8
   2304c:	str	r3, [sp, #16]
   23050:	mov	r5, #1
   23054:	mov	r8, #2
   23058:	b	22c78 <pclose@plt+0xf9cc>
   2305c:	cmp	r3, #13
   23060:	ldrls	pc, [pc, r3, lsl #2]
   23064:	b	231ac <pclose@plt+0xff00>
   23068:	andeq	r3, r2, r0, lsr #1
   2306c:	andeq	r3, r2, ip, lsr #3
   23070:	andeq	r3, r2, ip, lsr #3
   23074:	andeq	r3, r2, ip, lsr #3
   23078:	andeq	r3, r2, ip, lsr #3
   2307c:	andeq	r3, r2, ip, lsr #3
   23080:	andeq	r3, r2, ip, lsr #3
   23084:	andeq	r3, r2, ip, lsr #3
   23088:			; <UNDEFINED> instruction: 0x00022eb4
   2308c:	andeq	r3, r2, ip, lsr #3
   23090:	andeq	r3, r2, r0, lsr #1
   23094:	muleq	r2, r8, lr
   23098:	andeq	r3, r2, r0, lsr #1
   2309c:	andeq	r3, r2, r0, lsr #1
   230a0:	add	r9, r9, #2
   230a4:	mov	r7, #0
   230a8:	b	22c78 <pclose@plt+0xf9cc>
   230ac:	ldr	r2, [sp, #16]
   230b0:	sub	r3, r2, #128	; 0x80
   230b4:	cmp	r3, #127	; 0x7f
   230b8:	bhi	2313c <pclose@plt+0xfe90>
   230bc:	cmp	r4, #0
   230c0:	ldr	r5, [sp, #12]
   230c4:	add	r9, r9, #1
   230c8:	beq	232b4 <pclose@plt+0x10008>
   230cc:	ldr	r8, [sp, #36]	; 0x24
   230d0:	strb	r2, [r4], #1
   230d4:	mov	r7, r8
   230d8:	b	22c78 <pclose@plt+0xf9cc>
   230dc:	strb	r3, [sp, #60]	; 0x3c
   230e0:	and	r3, r3, #7
   230e4:	mov	r7, r8
   230e8:	str	r3, [sp, #16]
   230ec:	mov	r5, #1
   230f0:	mov	r8, #3
   230f4:	b	22c78 <pclose@plt+0xf9cc>
   230f8:	add	r5, r4, r5
   230fc:	add	r2, sp, #60	; 0x3c
   23100:	sub	r3, r4, #1
   23104:	ldrb	r1, [r2], #1
   23108:	strb	r1, [r3, #1]!
   2310c:	cmp	r3, r5
   23110:	bne	23104 <pclose@plt+0xfe58>
   23114:	ldr	r3, [sp, #12]
   23118:	add	r4, r4, r3
   2311c:	b	22d94 <pclose@plt+0xfae8>
   23120:	strb	r3, [sp, #60]	; 0x3c
   23124:	and	r3, r3, #3
   23128:	mov	r7, r8
   2312c:	str	r3, [sp, #16]
   23130:	mov	r5, #1
   23134:	mov	r8, #4
   23138:	b	22c78 <pclose@plt+0xf9cc>
   2313c:	ldr	r3, [sp, #12]
   23140:	cmp	r4, #0
   23144:	lsl	r8, r3, #2
   23148:	bne	23280 <pclose@plt+0xffd4>
   2314c:	mov	r7, #0
   23150:	add	r9, r9, r8
   23154:	mov	r5, r7
   23158:	mov	r8, r7
   2315c:	b	22c78 <pclose@plt+0xf9cc>
   23160:	add	r5, r4, r5
   23164:	add	r2, sp, #60	; 0x3c
   23168:	sub	r3, r4, #1
   2316c:	ldrb	r1, [r2], #1
   23170:	strb	r1, [r3, #1]!
   23174:	cmp	r5, r3
   23178:	bne	2316c <pclose@plt+0xfec0>
   2317c:	ldr	r3, [sp, #12]
   23180:	add	r4, r4, r3
   23184:	b	2302c <pclose@plt+0xfd80>
   23188:	strb	r3, [sp, #60]	; 0x3c
   2318c:	and	r3, r3, #1
   23190:	mov	r7, r8
   23194:	str	r3, [sp, #16]
   23198:	mov	r5, #1
   2319c:	mov	r8, #5
   231a0:	b	22c78 <pclose@plt+0xf9cc>
   231a4:	mov	r5, r4
   231a8:	b	22fdc <pclose@plt+0xfd30>
   231ac:	mov	r7, #0
   231b0:	add	r9, r9, #4
   231b4:	mov	r4, r7
   231b8:	b	22c78 <pclose@plt+0xf9cc>
   231bc:	ldr	r7, [pc, #432]	; 23374 <pclose@plt+0x100c8>
   231c0:	mov	r6, #0
   231c4:	strb	r6, [r4]
   231c8:	ldr	r0, [r7]
   231cc:	ldr	r1, [pc, #420]	; 23378 <pclose@plt+0x100cc>
   231d0:	bl	12d9c <iconv_open@plt>
   231d4:	cmn	r0, #1
   231d8:	mov	r5, r0
   231dc:	beq	23318 <pclose@plt+0x1006c>
   231e0:	ldr	r3, [sp, #20]
   231e4:	sub	r4, r4, r3
   231e8:	add	r0, r4, #1
   231ec:	tst	r0, #-268435456	; 0xf0000000
   231f0:	lsl	r0, r0, #4
   231f4:	str	r4, [sp, #52]	; 0x34
   231f8:	str	r0, [sp, #56]	; 0x38
   231fc:	str	r3, [sp, #44]	; 0x2c
   23200:	bne	23354 <pclose@plt+0x100a8>
   23204:	bl	129a0 <gcry_xmalloc@plt>
   23208:	add	r3, sp, #56	; 0x38
   2320c:	str	r3, [sp]
   23210:	add	r2, sp, #52	; 0x34
   23214:	add	r3, sp, #48	; 0x30
   23218:	add	r1, sp, #44	; 0x2c
   2321c:	mov	r4, r0
   23220:	mov	r0, r5
   23224:	str	r4, [sp, #48]	; 0x30
   23228:	bl	12a18 <iconv@plt>
   2322c:	cmn	r0, #1
   23230:	bne	232c8 <pclose@plt+0x1001c>
   23234:	ldr	r6, [pc, #304]	; 2336c <pclose@plt+0x100c0>
   23238:	ldr	r0, [r6, #20]
   2323c:	cmp	r0, #0
   23240:	beq	232e0 <pclose@plt+0x10034>
   23244:	mov	r3, #1
   23248:	ldr	r0, [sp, #20]
   2324c:	str	r3, [r6, #20]
   23250:	bl	12b50 <gcry_free@plt>
   23254:	mov	r0, r4
   23258:	bl	12b50 <gcry_free@plt>
   2325c:	ldr	r2, [sp, #24]
   23260:	ldr	r1, [sp, #28]
   23264:	ldr	r0, [sp, #32]
   23268:	mov	r3, #0
   2326c:	bl	22bc0 <pclose@plt+0xf914>
   23270:	str	r0, [sp, #20]
   23274:	mov	r0, r5
   23278:	bl	12a0c <iconv_close@plt>
   2327c:	b	22d38 <pclose@plt+0xfa8c>
   23280:	add	r7, r4, r8
   23284:	add	r5, sp, #60	; 0x3c
   23288:	ldrb	r1, [r5], #1
   2328c:	mov	r0, r4
   23290:	mov	r3, sl
   23294:	str	r1, [sp]
   23298:	mvn	r2, #0
   2329c:	mov	r1, #1
   232a0:	add	r4, r4, #4
   232a4:	bl	12f34 <__sprintf_chk@plt>
   232a8:	cmp	r4, r7
   232ac:	bne	23288 <pclose@plt+0xffdc>
   232b0:	b	2314c <pclose@plt+0xfea0>
   232b4:	mov	r7, r4
   232b8:	mov	r8, r4
   232bc:	b	22c78 <pclose@plt+0xf9cc>
   232c0:	mov	r4, r7
   232c4:	b	22c78 <pclose@plt+0xf9cc>
   232c8:	ldr	r3, [sp, #48]	; 0x30
   232cc:	ldr	r0, [sp, #20]
   232d0:	str	r4, [sp, #20]
   232d4:	strb	r6, [r3]
   232d8:	bl	12b50 <gcry_free@plt>
   232dc:	b	23274 <pclose@plt+0xffc8>
   232e0:	mov	r2, #5
   232e4:	ldr	r1, [pc, #144]	; 2337c <pclose@plt+0x100d0>
   232e8:	bl	12b98 <dcgettext@plt>
   232ec:	mov	r8, r0
   232f0:	bl	12f10 <__errno_location@plt>
   232f4:	ldr	r7, [r7]
   232f8:	ldr	r0, [r0]
   232fc:	bl	12db4 <strerror@plt>
   23300:	mov	r2, r7
   23304:	ldr	r1, [pc, #108]	; 23378 <pclose@plt+0x100cc>
   23308:	mov	r3, r0
   2330c:	mov	r0, r8
   23310:	bl	1c94c <pclose@plt+0x96a0>
   23314:	b	23244 <pclose@plt+0xff98>
   23318:	mov	r2, #1
   2331c:	ldr	r1, [pc, #84]	; 23378 <pclose@plt+0x100cc>
   23320:	ldr	r0, [r7]
   23324:	bl	22abc <pclose@plt+0xf810>
   23328:	ldr	r0, [sp, #20]
   2332c:	bl	12b50 <gcry_free@plt>
   23330:	ldr	r3, [pc, #52]	; 2336c <pclose@plt+0x100c0>
   23334:	ldr	r2, [sp, #24]
   23338:	ldr	r1, [sp, #28]
   2333c:	ldr	r0, [sp, #32]
   23340:	ldr	r3, [r3, #16]
   23344:	bl	22bc0 <pclose@plt+0xf914>
   23348:	str	r0, [sp, #20]
   2334c:	b	22d38 <pclose@plt+0xfa8c>
   23350:	bl	12bb0 <__stack_chk_fail@plt>
   23354:	ldr	r2, [pc, #36]	; 23380 <pclose@plt+0x100d4>
   23358:	ldr	r1, [pc, #36]	; 23384 <pclose@plt+0x100d8>
   2335c:	ldr	r0, [pc, #36]	; 23388 <pclose@plt+0x100dc>
   23360:	bl	1cd10 <pclose@plt+0x9a64>
   23364:	andeq	sp, r3, r0, asr #21
   23368:	andeq	fp, r2, r4, lsl #30
   2336c:	andeq	lr, r3, r4, asr #15
   23370:	muleq	r2, r8, r6
   23374:	andeq	lr, r3, r4, lsl #3
   23378:	andeq	sl, r2, ip, lsr #14
   2337c:	andeq	fp, r2, r4, lsr #30
   23380:	andeq	fp, r2, ip, lsr #29
   23384:	andeq	r0, r0, r3, lsl #5
   23388:	andeq	fp, r2, ip, lsl #30
   2338c:	push	{r4, r5, r6, lr}
   23390:	subs	r5, r0, #0
   23394:	beq	23498 <pclose@plt+0x101ec>
   23398:	mov	r0, r5
   2339c:	bl	12e8c <strlen@plt>
   233a0:	cmp	r0, #3
   233a4:	bhi	233d8 <pclose@plt+0x1012c>
   233a8:	ldrb	r3, [r5]
   233ac:	mov	r4, r5
   233b0:	cmp	r3, #0
   233b4:	bne	23410 <pclose@plt+0x10164>
   233b8:	ldr	r3, [pc, #392]	; 23548 <pclose@plt+0x1029c>
   233bc:	ldr	r2, [pc, #392]	; 2354c <pclose@plt+0x102a0>
   233c0:	ldr	r1, [pc, #392]	; 23550 <pclose@plt+0x102a4>
   233c4:	mov	r0, #0
   233c8:	str	r1, [r2]
   233cc:	str	r0, [r3, #12]
   233d0:	str	r0, [r3, #16]
   233d4:	pop	{r4, r5, r6, pc}
   233d8:	mov	r2, #3
   233dc:	ldr	r1, [pc, #368]	; 23554 <pclose@plt+0x102a8>
   233e0:	mov	r0, r5
   233e4:	bl	18a18 <pclose@plt+0x576c>
   233e8:	cmp	r0, #0
   233ec:	bne	233a8 <pclose@plt+0x100fc>
   233f0:	ldrb	r3, [r5, #3]
   233f4:	cmp	r3, #95	; 0x5f
   233f8:	cmpne	r3, #45	; 0x2d
   233fc:	addne	r4, r5, #3
   23400:	ldrbeq	r3, [r5, #4]
   23404:	addeq	r4, r5, #4
   23408:	cmp	r3, #0
   2340c:	beq	233b8 <pclose@plt+0x1010c>
   23410:	ldr	r1, [pc, #320]	; 23558 <pclose@plt+0x102ac>
   23414:	mov	r0, r4
   23418:	bl	188d8 <pclose@plt+0x562c>
   2341c:	cmp	r0, #0
   23420:	beq	233b8 <pclose@plt+0x1010c>
   23424:	ldr	r1, [pc, #304]	; 2355c <pclose@plt+0x102b0>
   23428:	mov	r0, r4
   2342c:	bl	188d8 <pclose@plt+0x562c>
   23430:	cmp	r0, #0
   23434:	beq	233b8 <pclose@plt+0x1010c>
   23438:	ldr	r1, [pc, #288]	; 23560 <pclose@plt+0x102b4>
   2343c:	mov	r0, r4
   23440:	bl	188d8 <pclose@plt+0x562c>
   23444:	cmp	r0, #0
   23448:	beq	233b8 <pclose@plt+0x1010c>
   2344c:	ldr	r1, [pc, #272]	; 23564 <pclose@plt+0x102b8>
   23450:	mov	r0, r4
   23454:	bl	188d8 <pclose@plt+0x562c>
   23458:	cmp	r0, #0
   2345c:	beq	233b8 <pclose@plt+0x1010c>
   23460:	ldr	r1, [pc, #256]	; 23568 <pclose@plt+0x102bc>
   23464:	mov	r0, r4
   23468:	bl	188d8 <pclose@plt+0x562c>
   2346c:	ldr	r6, [pc, #248]	; 2356c <pclose@plt+0x102c0>
   23470:	cmp	r0, #0
   23474:	bne	234a8 <pclose@plt+0x101fc>
   23478:	ldr	r3, [pc, #200]	; 23548 <pclose@plt+0x1029c>
   2347c:	ldr	r1, [pc, #200]	; 2354c <pclose@plt+0x102a0>
   23480:	mov	r2, #1
   23484:	mov	r0, #0
   23488:	str	r6, [r1]
   2348c:	str	r2, [r3, #12]
   23490:	str	r0, [r3, #16]
   23494:	pop	{r4, r5, r6, pc}
   23498:	mov	r0, #14
   2349c:	bl	130e4 <nl_langinfo@plt>
   234a0:	mov	r5, r0
   234a4:	b	23398 <pclose@plt+0x100ec>
   234a8:	mov	r0, r4
   234ac:	mov	r1, r6
   234b0:	bl	188d8 <pclose@plt+0x562c>
   234b4:	cmp	r0, #0
   234b8:	beq	23478 <pclose@plt+0x101cc>
   234bc:	mov	r1, r6
   234c0:	mov	r0, r5
   234c4:	bl	12d9c <iconv_open@plt>
   234c8:	cmn	r0, #1
   234cc:	mov	r4, r0
   234d0:	beq	23518 <pclose@plt+0x1026c>
   234d4:	bl	12a0c <iconv_close@plt>
   234d8:	mov	r1, r5
   234dc:	mov	r0, r6
   234e0:	bl	12d9c <iconv_open@plt>
   234e4:	cmn	r0, #1
   234e8:	mov	r4, r0
   234ec:	beq	23530 <pclose@plt+0x10284>
   234f0:	bl	12a0c <iconv_close@plt>
   234f4:	ldr	r3, [pc, #76]	; 23548 <pclose@plt+0x1029c>
   234f8:	ldr	ip, [pc, #76]	; 2354c <pclose@plt+0x102a0>
   234fc:	mov	r2, #0
   23500:	mov	r1, #1
   23504:	mov	r0, r2
   23508:	str	r5, [ip]
   2350c:	str	r1, [r3, #16]
   23510:	str	r2, [r3, #12]
   23514:	pop	{r4, r5, r6, pc}
   23518:	mov	r0, r5
   2351c:	mov	r1, r6
   23520:	mov	r2, #0
   23524:	bl	22abc <pclose@plt+0xf810>
   23528:	mov	r0, r4
   2352c:	pop	{r4, r5, r6, pc}
   23530:	mov	r0, r6
   23534:	mov	r1, r5
   23538:	mov	r2, #0
   2353c:	bl	22abc <pclose@plt+0xf810>
   23540:	mov	r0, r4
   23544:	pop	{r4, r5, r6, pc}
   23548:	andeq	lr, r3, r4, asr #15
   2354c:	andeq	lr, r3, r4, lsl #3
   23550:	andeq	fp, r2, r4, asr pc
   23554:	andeq	fp, r2, r0, asr pc
   23558:	andeq	fp, r2, r8, asr pc
   2355c:	andeq	fp, r2, r0, ror #30
   23560:	andeq	fp, r2, r4, ror #30
   23564:	andeq	fp, r2, ip, ror #30
   23568:	andeq	fp, r2, ip, ror pc
   2356c:	andeq	sl, r2, ip, lsr #14
   23570:	ldr	r3, [pc, #4]	; 2357c <pclose@plt+0x102d0>
   23574:	ldr	r0, [r3]
   23578:	bx	lr
   2357c:	andeq	lr, r3, r4, lsl #3
   23580:	ldr	r3, [pc, #4]	; 2358c <pclose@plt+0x102e0>
   23584:	ldr	r0, [r3, #12]
   23588:	bx	lr
   2358c:	andeq	lr, r3, r4, asr #15
   23590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23594:	sub	sp, sp, #32
   23598:	ldr	r8, [pc, #520]	; 237a8 <pclose@plt+0x104fc>
   2359c:	ldr	r5, [pc, #520]	; 237ac <pclose@plt+0x10500>
   235a0:	ldr	r7, [r8, #12]
   235a4:	ldr	r3, [r5]
   235a8:	cmp	r7, #0
   235ac:	str	r3, [sp, #28]
   235b0:	bne	23714 <pclose@plt+0x10468>
   235b4:	mov	r4, r0
   235b8:	ldr	r0, [r8, #16]
   235bc:	cmp	r0, #0
   235c0:	bne	23668 <pclose@plt+0x103bc>
   235c4:	ldrb	r3, [r4]
   235c8:	cmp	r3, #0
   235cc:	beq	2379c <pclose@plt+0x104f0>
   235d0:	mov	r2, r4
   235d4:	tst	r3, #128	; 0x80
   235d8:	ldrb	r3, [r2, #1]!
   235dc:	addeq	r0, r0, #1
   235e0:	addne	r0, r0, #2
   235e4:	cmp	r3, #0
   235e8:	bne	235d4 <pclose@plt+0x10328>
   235ec:	add	r0, r0, #1
   235f0:	bl	129a0 <gcry_xmalloc@plt>
   235f4:	ldrb	r3, [r4]
   235f8:	cmp	r3, #0
   235fc:	mov	r6, r0
   23600:	mov	r2, r0
   23604:	beq	23644 <pclose@plt+0x10398>
   23608:	mvn	lr, #63	; 0x3f
   2360c:	mvn	ip, #127	; 0x7f
   23610:	sxtb	r1, r3
   23614:	cmp	r1, #0
   23618:	movlt	r0, r2
   2361c:	orrlt	r3, lr, r3, lsr #6
   23620:	strblt	r3, [r0], #2
   23624:	strbge	r3, [r2], #1
   23628:	ldrb	r3, [r4, #1]!
   2362c:	andlt	r1, r1, #63	; 0x3f
   23630:	orrlt	r1, ip, r1
   23634:	strblt	r1, [r2, #1]
   23638:	movlt	r2, r0
   2363c:	cmp	r3, #0
   23640:	bne	23610 <pclose@plt+0x10364>
   23644:	mov	r3, #0
   23648:	strb	r3, [r2]
   2364c:	ldr	r2, [sp, #28]
   23650:	ldr	r3, [r5]
   23654:	mov	r0, r6
   23658:	cmp	r2, r3
   2365c:	bne	237a4 <pclose@plt+0x104f8>
   23660:	add	sp, sp, #32
   23664:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23668:	ldr	sl, [pc, #320]	; 237b0 <pclose@plt+0x10504>
   2366c:	ldr	r0, [pc, #320]	; 237b4 <pclose@plt+0x10508>
   23670:	ldr	r1, [sl]
   23674:	bl	12d9c <iconv_open@plt>
   23678:	cmn	r0, #1
   2367c:	mov	r9, r0
   23680:	beq	2377c <pclose@plt+0x104d0>
   23684:	ldrb	r3, [r4]
   23688:	cmp	r3, #0
   2368c:	moveq	r7, r3
   23690:	moveq	r0, #1
   23694:	beq	236b8 <pclose@plt+0x1040c>
   23698:	mov	r2, r4
   2369c:	tst	r3, #128	; 0x80
   236a0:	ldrb	r3, [r2, #1]!
   236a4:	addeq	r7, r7, #1
   236a8:	addne	r7, r7, #6
   236ac:	cmp	r3, #0
   236b0:	bne	2369c <pclose@plt+0x103f0>
   236b4:	add	r0, r7, #1
   236b8:	bl	129a0 <gcry_xmalloc@plt>
   236bc:	str	r4, [sp, #12]
   236c0:	mov	r6, r0
   236c4:	mov	r0, r4
   236c8:	bl	12e8c <strlen@plt>
   236cc:	add	r3, sp, #24
   236d0:	str	r3, [sp]
   236d4:	add	r2, sp, #20
   236d8:	add	r3, sp, #16
   236dc:	add	r1, sp, #12
   236e0:	str	r6, [sp, #16]
   236e4:	str	r7, [sp, #24]
   236e8:	str	r0, [sp, #20]
   236ec:	mov	r0, r9
   236f0:	bl	12a18 <iconv@plt>
   236f4:	cmn	r0, #1
   236f8:	beq	23720 <pclose@plt+0x10474>
   236fc:	ldr	r3, [sp, #16]
   23700:	mov	r2, #0
   23704:	strb	r2, [r3]
   23708:	mov	r0, r9
   2370c:	bl	12a0c <iconv_close@plt>
   23710:	b	2364c <pclose@plt+0x103a0>
   23714:	bl	12ff4 <gcry_xstrdup@plt>
   23718:	mov	r6, r0
   2371c:	b	2364c <pclose@plt+0x103a0>
   23720:	ldr	r0, [r8, #24]
   23724:	cmp	r0, #0
   23728:	beq	23744 <pclose@plt+0x10498>
   2372c:	mov	r3, #1
   23730:	mov	r1, r4
   23734:	mov	r0, r6
   23738:	str	r3, [r8, #24]
   2373c:	bl	12cdc <strcpy@plt>
   23740:	b	23708 <pclose@plt+0x1045c>
   23744:	mov	r2, #5
   23748:	ldr	r1, [pc, #104]	; 237b8 <pclose@plt+0x1050c>
   2374c:	bl	12b98 <dcgettext@plt>
   23750:	mov	r7, r0
   23754:	bl	12f10 <__errno_location@plt>
   23758:	ldr	sl, [sl]
   2375c:	ldr	r0, [r0]
   23760:	bl	12db4 <strerror@plt>
   23764:	mov	r1, sl
   23768:	ldr	r2, [pc, #68]	; 237b4 <pclose@plt+0x10508>
   2376c:	mov	r3, r0
   23770:	mov	r0, r7
   23774:	bl	1c94c <pclose@plt+0x96a0>
   23778:	b	2372c <pclose@plt+0x10480>
   2377c:	ldr	r1, [sl]
   23780:	mov	r2, #1
   23784:	ldr	r0, [pc, #40]	; 237b4 <pclose@plt+0x10508>
   23788:	bl	22abc <pclose@plt+0xf810>
   2378c:	mov	r0, r4
   23790:	bl	23590 <pclose@plt+0x102e4>
   23794:	mov	r6, r0
   23798:	b	2364c <pclose@plt+0x103a0>
   2379c:	mov	r0, #1
   237a0:	b	235f0 <pclose@plt+0x10344>
   237a4:	bl	12bb0 <__stack_chk_fail@plt>
   237a8:	andeq	lr, r3, r4, asr #15
   237ac:	andeq	sp, r3, r0, asr #21
   237b0:	andeq	lr, r3, r4, lsl #3
   237b4:	andeq	sl, r2, ip, lsr #14
   237b8:	andeq	fp, r2, r4, lsr #30
   237bc:	ldr	r3, [pc, #4]	; 237c8 <pclose@plt+0x1051c>
   237c0:	ldr	r3, [r3, #16]
   237c4:	b	22bc0 <pclose@plt+0xf914>
   237c8:	andeq	lr, r3, r4, asr #15
   237cc:	b	12d9c <iconv_open@plt>
   237d0:	b	12a18 <iconv@plt>
   237d4:	b	12a0c <iconv_close@plt>
   237d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237dc:	sub	sp, sp, #540	; 0x21c
   237e0:	ldr	fp, [pc, #1084]	; 23c24 <pclose@plt+0x10978>
   237e4:	mov	sl, r1
   237e8:	mov	r4, r0
   237ec:	ldr	r3, [fp]
   237f0:	ldr	r9, [pc, #1072]	; 23c28 <pclose@plt+0x1097c>
   237f4:	str	r3, [sp, #532]	; 0x214
   237f8:	bl	12e38 <getpid@plt>
   237fc:	ldr	r2, [pc, #1064]	; 23c2c <pclose@plt+0x10980>
   23800:	mov	r1, #16
   23804:	mov	r3, r0
   23808:	add	r0, sp, #516	; 0x204
   2380c:	bl	13048 <gpgrt_snprintf@plt>
   23810:	add	r0, sp, #124	; 0x7c
   23814:	bl	12b8c <uname@plt>
   23818:	mov	r1, #47	; 0x2f
   2381c:	cmp	r0, #0
   23820:	mov	r0, sl
   23824:	addeq	r6, sp, #189	; 0xbd
   23828:	ldrne	r6, [pc, #1024]	; 23c30 <pclose@plt+0x10984>
   2382c:	bl	130cc <strrchr@plt>
   23830:	cmp	r0, #0
   23834:	subne	r8, r0, sl
   23838:	ldreq	r3, [pc, #1012]	; 23c34 <pclose@plt+0x10988>
   2383c:	moveq	r5, #1
   23840:	streq	r3, [sp, #12]
   23844:	ldr	r3, [r9]
   23848:	mov	r0, r6
   2384c:	str	r3, [r4]
   23850:	movne	r5, r8
   23854:	moveq	r8, r5
   23858:	strne	sl, [sp, #12]
   2385c:	str	r4, [r9]
   23860:	bl	12e8c <strlen@plt>
   23864:	add	r5, r0, r5
   23868:	add	r0, r5, #48	; 0x30
   2386c:	bl	129d0 <gcry_malloc@plt>
   23870:	add	r5, r5, #47	; 0x2f
   23874:	cmp	r0, #0
   23878:	mov	r7, r0
   2387c:	str	r0, [r4, #16]
   23880:	beq	23ab4 <pclose@plt+0x10808>
   23884:	mov	r0, r6
   23888:	bl	12e8c <strlen@plt>
   2388c:	ldr	r3, [sp, #12]
   23890:	mov	r1, r5
   23894:	str	r3, [sp]
   23898:	ldr	r2, [pc, #920]	; 23c38 <pclose@plt+0x1098c>
   2389c:	mov	r3, r8
   238a0:	str	r4, [sp, #4]
   238a4:	str	r0, [r4, #24]
   238a8:	mov	r0, r7
   238ac:	bl	13048 <gpgrt_snprintf@plt>
   238b0:	ldr	r7, [r4, #16]
   238b4:	mov	r0, r7
   238b8:	bl	12e8c <strlen@plt>
   238bc:	str	r0, [r4, #20]
   238c0:	add	r7, r7, r0
   238c4:	sub	r5, r5, r0
   238c8:	bl	12e38 <getpid@plt>
   238cc:	mov	r1, r5
   238d0:	mov	r3, r6
   238d4:	ldr	r2, [pc, #864]	; 23c3c <pclose@plt+0x10990>
   238d8:	str	r0, [sp]
   238dc:	mov	r0, r7
   238e0:	bl	13048 <gpgrt_snprintf@plt>
   238e4:	b	238f8 <pclose@plt+0x1064c>
   238e8:	bl	12f10 <__errno_location@plt>
   238ec:	ldr	r5, [r0]
   238f0:	cmp	r5, #4
   238f4:	bne	23a70 <pclose@plt+0x107c4>
   238f8:	mov	r0, #0
   238fc:	bl	13108 <gpg_err_set_errno@plt>
   23900:	mov	r2, #420	; 0x1a4
   23904:	mov	r1, #193	; 0xc1
   23908:	ldr	r0, [r4, #16]
   2390c:	bl	12d3c <open64@plt>
   23910:	cmn	r0, #1
   23914:	mov	r5, r0
   23918:	beq	238e8 <pclose@plt+0x1063c>
   2391c:	add	r1, sp, #516	; 0x204
   23920:	mov	r2, #11
   23924:	bl	12fc4 <write@plt>
   23928:	cmp	r0, #11
   2392c:	bne	239fc <pclose@plt+0x10750>
   23930:	mov	r0, r6
   23934:	bl	12e8c <strlen@plt>
   23938:	mov	r1, r6
   2393c:	mov	r2, r0
   23940:	mov	r0, r5
   23944:	bl	12fc4 <write@plt>
   23948:	mov	r7, r0
   2394c:	mov	r0, r6
   23950:	bl	12e8c <strlen@plt>
   23954:	cmp	r7, r0
   23958:	bne	239fc <pclose@plt+0x10750>
   2395c:	mov	r2, #1
   23960:	ldr	r1, [pc, #728]	; 23c40 <pclose@plt+0x10994>
   23964:	mov	r0, r5
   23968:	bl	12fc4 <write@plt>
   2396c:	cmp	r0, #1
   23970:	bne	239fc <pclose@plt+0x10750>
   23974:	mov	r0, r5
   23978:	bl	1324c <close@plt>
   2397c:	cmp	r0, #0
   23980:	bne	23bb4 <pclose@plt+0x10908>
   23984:	ldr	r5, [r4, #16]
   23988:	add	r2, sp, #16
   2398c:	mov	r1, r5
   23990:	mov	r0, #3
   23994:	bl	131ec <__xstat64@plt>
   23998:	cmp	r0, #0
   2399c:	beq	23ac8 <pclose@plt+0x1081c>
   239a0:	bl	12f10 <__errno_location@plt>
   239a4:	ldr	r7, [r4, #16]
   239a8:	ldr	r6, [r0]
   239ac:	mov	r5, r0
   239b0:	mov	r0, r6
   239b4:	bl	12db4 <strerror@plt>
   239b8:	mov	r1, r7
   239bc:	mov	r2, r0
   239c0:	ldr	r0, [pc, #636]	; 23c44 <pclose@plt+0x10998>
   239c4:	bl	1c9b0 <pclose@plt+0x9704>
   239c8:	mov	r0, r6
   239cc:	bl	13108 <gpg_err_set_errno@plt>
   239d0:	ldr	r6, [r5]
   239d4:	ldr	r3, [r4]
   239d8:	mov	r0, r6
   239dc:	ldr	r5, [r4, #16]
   239e0:	str	r3, [r9]
   239e4:	bl	12db4 <strerror@plt>
   239e8:	mov	r1, r5
   239ec:	mov	r2, r0
   239f0:	ldr	r0, [pc, #592]	; 23c48 <pclose@plt+0x1099c>
   239f4:	bl	1c9b0 <pclose@plt+0x9704>
   239f8:	b	23a30 <pclose@plt+0x10784>
   239fc:	bl	12f10 <__errno_location@plt>
   23a00:	ldr	r6, [r0]
   23a04:	ldr	r3, [r4]
   23a08:	mov	r0, r6
   23a0c:	ldr	r7, [r4, #16]
   23a10:	str	r3, [r9]
   23a14:	bl	12db4 <strerror@plt>
   23a18:	mov	r1, r7
   23a1c:	mov	r2, r0
   23a20:	ldr	r0, [pc, #544]	; 23c48 <pclose@plt+0x1099c>
   23a24:	bl	1c9b0 <pclose@plt+0x9704>
   23a28:	mov	r0, r5
   23a2c:	bl	1324c <close@plt>
   23a30:	ldr	r0, [r4, #16]
   23a34:	bl	12bd4 <unlink@plt>
   23a38:	ldr	r0, [r4, #16]
   23a3c:	bl	12b50 <gcry_free@plt>
   23a40:	mov	r0, r4
   23a44:	bl	12b50 <gcry_free@plt>
   23a48:	mov	r0, r6
   23a4c:	bl	13108 <gpg_err_set_errno@plt>
   23a50:	mov	r7, #0
   23a54:	ldr	r2, [sp, #532]	; 0x214
   23a58:	ldr	r3, [fp]
   23a5c:	mov	r0, r7
   23a60:	cmp	r2, r3
   23a64:	bne	23c20 <pclose@plt+0x10974>
   23a68:	add	sp, sp, #540	; 0x21c
   23a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a70:	ldr	r3, [r4]
   23a74:	mov	r0, r5
   23a78:	str	r3, [r9]
   23a7c:	ldr	r6, [r4, #16]
   23a80:	bl	12db4 <strerror@plt>
   23a84:	mov	r1, r6
   23a88:	mov	r7, #0
   23a8c:	mov	r2, r0
   23a90:	ldr	r0, [pc, #436]	; 23c4c <pclose@plt+0x109a0>
   23a94:	bl	1c9b0 <pclose@plt+0x9704>
   23a98:	ldr	r0, [r4, #16]
   23a9c:	bl	12b50 <gcry_free@plt>
   23aa0:	mov	r0, r4
   23aa4:	bl	12b50 <gcry_free@plt>
   23aa8:	mov	r0, r5
   23aac:	bl	13108 <gpg_err_set_errno@plt>
   23ab0:	b	23a54 <pclose@plt+0x107a8>
   23ab4:	ldr	r3, [r4]
   23ab8:	mov	r0, r4
   23abc:	str	r3, [r9]
   23ac0:	bl	12b50 <gcry_free@plt>
   23ac4:	b	23a54 <pclose@plt+0x107a8>
   23ac8:	mov	r0, r5
   23acc:	bl	12e8c <strlen@plt>
   23ad0:	ldr	r7, [sp, #36]	; 0x24
   23ad4:	add	r0, r0, #2
   23ad8:	bl	129d0 <gcry_malloc@plt>
   23adc:	subs	r6, r0, #0
   23ae0:	beq	239a0 <pclose@plt+0x106f4>
   23ae4:	mov	r1, r5
   23ae8:	bl	12b80 <stpcpy@plt>
   23aec:	ldr	r3, [pc, #348]	; 23c50 <pclose@plt+0x109a4>
   23af0:	mov	r1, r6
   23af4:	ldrh	r3, [r3]
   23af8:	strh	r3, [r0]
   23afc:	mov	r0, r5
   23b00:	bl	12fb8 <link@plt>
   23b04:	add	r2, sp, #16
   23b08:	mov	r1, r5
   23b0c:	mov	r0, #3
   23b10:	bl	131ec <__xstat64@plt>
   23b14:	cmp	r0, #0
   23b18:	bne	23bc8 <pclose@plt+0x1091c>
   23b1c:	ldr	r3, [sp, #36]	; 0x24
   23b20:	add	r7, r7, #1
   23b24:	cmp	r3, r7
   23b28:	mov	r0, r6
   23b2c:	beq	23bdc <pclose@plt+0x10930>
   23b30:	bl	12bd4 <unlink@plt>
   23b34:	mov	r0, r6
   23b38:	bl	12b50 <gcry_free@plt>
   23b3c:	ldr	r0, [r4, #16]
   23b40:	bl	12bd4 <unlink@plt>
   23b44:	ldrb	r3, [r4, #8]
   23b48:	orr	r3, r3, #4
   23b4c:	strb	r3, [r4, #8]
   23b50:	mov	r0, sl
   23b54:	bl	12e8c <strlen@plt>
   23b58:	add	r0, r0, #6
   23b5c:	bl	129d0 <gcry_malloc@plt>
   23b60:	cmp	r0, #0
   23b64:	mov	r7, r0
   23b68:	str	r0, [r4, #4]
   23b6c:	beq	23bec <pclose@plt+0x10940>
   23b70:	mov	r1, sl
   23b74:	bl	12b80 <stpcpy@plt>
   23b78:	ldr	r2, [pc, #212]	; 23c54 <pclose@plt+0x109a8>
   23b7c:	ldrb	r1, [r4, #8]
   23b80:	tst	r1, #4
   23b84:	moveq	r7, r4
   23b88:	mov	r3, r0
   23b8c:	ldr	r0, [r2]
   23b90:	ldrh	r2, [r2, #4]
   23b94:	str	r0, [r3]
   23b98:	strh	r2, [r3, #4]
   23b9c:	beq	23a54 <pclose@plt+0x107a8>
   23ba0:	mov	r1, r7
   23ba4:	ldr	r0, [pc, #172]	; 23c58 <pclose@plt+0x109ac>
   23ba8:	mov	r7, r4
   23bac:	bl	1cafc <pclose@plt+0x9850>
   23bb0:	b	23a54 <pclose@plt+0x107a8>
   23bb4:	bl	12f10 <__errno_location@plt>
   23bb8:	ldr	r6, [r0]
   23bbc:	cmp	r6, #4
   23bc0:	bne	23a04 <pclose@plt+0x10758>
   23bc4:	b	239d4 <pclose@plt+0x10728>
   23bc8:	mov	r0, r6
   23bcc:	bl	12bd4 <unlink@plt>
   23bd0:	mov	r0, r6
   23bd4:	bl	12b50 <gcry_free@plt>
   23bd8:	b	239a0 <pclose@plt+0x106f4>
   23bdc:	bl	12bd4 <unlink@plt>
   23be0:	mov	r0, r6
   23be4:	bl	12b50 <gcry_free@plt>
   23be8:	b	23b50 <pclose@plt+0x108a4>
   23bec:	bl	12f10 <__errno_location@plt>
   23bf0:	ldr	r3, [r4]
   23bf4:	str	r3, [r9]
   23bf8:	ldr	r5, [r0]
   23bfc:	ldr	r0, [r4, #16]
   23c00:	bl	12bd4 <unlink@plt>
   23c04:	ldr	r0, [r4, #16]
   23c08:	bl	12b50 <gcry_free@plt>
   23c0c:	mov	r0, r4
   23c10:	bl	12b50 <gcry_free@plt>
   23c14:	mov	r0, r5
   23c18:	bl	13108 <gpg_err_set_errno@plt>
   23c1c:	b	23a54 <pclose@plt+0x107a8>
   23c20:	bl	12bb0 <__stack_chk_fail@plt>
   23c24:	andeq	sp, r3, r0, asr #21
   23c28:	andeq	lr, r3, r0, ror #15
   23c2c:	andeq	fp, r2, ip, lsl #31
   23c30:	andeq	fp, r2, r4, lsl #31
   23c34:	andeq	sl, r2, r4, lsr #26
   23c38:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   23c3c:	andeq	fp, r2, r4, lsr #31
   23c40:	strdeq	ip, [r2], -r0
   23c44:	andeq	fp, r2, ip, lsr #31
   23c48:	andeq	sl, r2, r4, asr pc
   23c4c:	andeq	ip, r2, r4, lsl r0
   23c50:	muleq	r2, ip, r6
   23c54:	andeq	fp, r2, r8, ror #31
   23c58:	strdeq	fp, [r2], -r0
   23c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c60:	mov	r4, #0
   23c64:	ldr	r9, [pc, #692]	; 23f20 <pclose@plt+0x10c74>
   23c68:	sub	sp, sp, #108	; 0x6c
   23c6c:	mov	r8, r0
   23c70:	ldr	r3, [r9]
   23c74:	str	r4, [r1]
   23c78:	ldr	r5, [r0, #24]
   23c7c:	str	r1, [sp, #8]
   23c80:	add	r5, r5, #12
   23c84:	cmp	r5, #81	; 0x51
   23c88:	str	r3, [sp, #100]	; 0x64
   23c8c:	bls	23ccc <pclose@plt+0x10a20>
   23c90:	mov	r0, r5
   23c94:	bl	129d0 <gcry_malloc@plt>
   23c98:	cmp	r0, r4
   23c9c:	mov	r7, r0
   23ca0:	mov	sl, r0
   23ca4:	beq	23e50 <pclose@plt+0x10ba4>
   23ca8:	mov	r1, r4
   23cac:	ldr	r0, [r8, #4]
   23cb0:	bl	12d3c <open64@plt>
   23cb4:	cmn	r0, #1
   23cb8:	mov	r6, r0
   23cbc:	beq	23ee0 <pclose@plt+0x10c34>
   23cc0:	add	r3, sp, #16
   23cc4:	str	r3, [sp, #4]
   23cc8:	b	23cec <pclose@plt+0x10a40>
   23ccc:	mov	r1, r4
   23cd0:	ldr	r0, [r0, #4]
   23cd4:	bl	12d3c <open64@plt>
   23cd8:	cmn	r0, #1
   23cdc:	mov	r6, r0
   23ce0:	beq	23e58 <pclose@plt+0x10bac>
   23ce4:	add	r7, sp, #16
   23ce8:	str	r7, [sp, #4]
   23cec:	mov	fp, r7
   23cf0:	mov	r4, #0
   23cf4:	b	23d24 <pclose@plt+0x10a78>
   23cf8:	cmp	r0, #0
   23cfc:	blt	23f14 <pclose@plt+0x10c68>
   23d00:	add	fp, fp, r0
   23d04:	add	r4, r4, r0
   23d08:	subs	r2, r5, r4
   23d0c:	movne	r2, #1
   23d10:	cmp	sl, #0
   23d14:	movne	r1, r2
   23d18:	moveq	r1, #0
   23d1c:	cmp	r1, #0
   23d20:	beq	23db0 <pclose@plt+0x10b04>
   23d24:	sub	r2, r5, r4
   23d28:	mov	r1, fp
   23d2c:	mov	r0, r6
   23d30:	bl	12a78 <read@plt>
   23d34:	cmn	r0, #1
   23d38:	mov	sl, r0
   23d3c:	bne	23cf8 <pclose@plt+0x10a4c>
   23d40:	bl	12f10 <__errno_location@plt>
   23d44:	ldr	r2, [r0]
   23d48:	cmp	r2, #4
   23d4c:	beq	23d08 <pclose@plt+0x10a5c>
   23d50:	ldr	r1, [r8, #4]
   23d54:	ldr	r0, [pc, #456]	; 23f24 <pclose@plt+0x10c78>
   23d58:	str	r2, [sp, #8]
   23d5c:	bl	1c94c <pclose@plt+0x96a0>
   23d60:	mov	r0, r6
   23d64:	bl	1324c <close@plt>
   23d68:	ldr	r3, [sp, #4]
   23d6c:	ldr	r2, [sp, #8]
   23d70:	cmp	r7, r3
   23d74:	beq	23d88 <pclose@plt+0x10adc>
   23d78:	mov	r0, r7
   23d7c:	str	r2, [sp, #4]
   23d80:	bl	12b50 <gcry_free@plt>
   23d84:	ldr	r2, [sp, #4]
   23d88:	mov	r0, r2
   23d8c:	bl	13108 <gpg_err_set_errno@plt>
   23d90:	mvn	r6, #0
   23d94:	ldr	r2, [sp, #100]	; 0x64
   23d98:	ldr	r3, [r9]
   23d9c:	mov	r0, r6
   23da0:	cmp	r2, r3
   23da4:	bne	23f10 <pclose@plt+0x10c64>
   23da8:	add	sp, sp, #108	; 0x6c
   23dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23db0:	mov	r0, r6
   23db4:	str	r1, [sp, #12]
   23db8:	bl	1324c <close@plt>
   23dbc:	cmp	r4, #10
   23dc0:	ldr	r1, [sp, #12]
   23dc4:	ble	23ec4 <pclose@plt+0x10c18>
   23dc8:	ldrb	r2, [r7, #10]
   23dcc:	cmp	r2, #10
   23dd0:	bne	23e8c <pclose@plt+0x10be0>
   23dd4:	strb	r1, [r7, #10]
   23dd8:	mov	r0, r7
   23ddc:	bl	12a3c <strtol@plt>
   23de0:	cmn	r0, #1
   23de4:	mov	r6, r0
   23de8:	beq	23e8c <pclose@plt+0x10be0>
   23dec:	cmp	r0, #0
   23df0:	beq	23e90 <pclose@plt+0x10be4>
   23df4:	cmp	r5, r4
   23df8:	beq	23e14 <pclose@plt+0x10b68>
   23dfc:	ldr	r3, [sp, #4]
   23e00:	cmp	r7, r3
   23e04:	beq	23d94 <pclose@plt+0x10ae8>
   23e08:	mov	r0, r7
   23e0c:	bl	12b50 <gcry_free@plt>
   23e10:	b	23d94 <pclose@plt+0x10ae8>
   23e14:	add	r0, r8, #16
   23e18:	add	r1, r7, #11
   23e1c:	ldm	r0, {r0, r3, r4}
   23e20:	mov	r2, r4
   23e24:	add	r0, r0, r3
   23e28:	bl	12b5c <memcmp@plt>
   23e2c:	cmp	r0, #0
   23e30:	bne	23dfc <pclose@plt+0x10b50>
   23e34:	add	r4, r7, r4
   23e38:	ldrb	r3, [r4, #11]
   23e3c:	cmp	r3, #10
   23e40:	moveq	r3, #1
   23e44:	ldreq	r2, [sp, #8]
   23e48:	streq	r3, [r2]
   23e4c:	b	23dfc <pclose@plt+0x10b50>
   23e50:	mvn	r6, #0
   23e54:	b	23d94 <pclose@plt+0x10ae8>
   23e58:	bl	12f10 <__errno_location@plt>
   23e5c:	ldr	r5, [r8, #4]
   23e60:	ldr	r4, [r0]
   23e64:	mov	r0, r4
   23e68:	bl	12db4 <strerror@plt>
   23e6c:	mov	r1, r5
   23e70:	mov	r2, r0
   23e74:	ldr	r0, [pc, #172]	; 23f28 <pclose@plt+0x10c7c>
   23e78:	bl	1c94c <pclose@plt+0x96a0>
   23e7c:	mov	r0, r4
   23e80:	bl	13108 <gpg_err_set_errno@plt>
   23e84:	mvn	r6, #0
   23e88:	b	23d94 <pclose@plt+0x10ae8>
   23e8c:	mvn	r6, #0
   23e90:	ldr	r2, [r8, #4]
   23e94:	mov	r1, r6
   23e98:	ldr	r0, [pc, #140]	; 23f2c <pclose@plt+0x10c80>
   23e9c:	bl	1c9b0 <pclose@plt+0x9704>
   23ea0:	ldr	r3, [sp, #4]
   23ea4:	cmp	r7, r3
   23ea8:	beq	23eb4 <pclose@plt+0x10c08>
   23eac:	mov	r0, r7
   23eb0:	bl	12b50 <gcry_free@plt>
   23eb4:	mov	r0, #22
   23eb8:	bl	13108 <gpg_err_set_errno@plt>
   23ebc:	mvn	r6, #0
   23ec0:	b	23d94 <pclose@plt+0x10ae8>
   23ec4:	ldr	r1, [r8, #4]
   23ec8:	ldr	r0, [pc, #96]	; 23f30 <pclose@plt+0x10c84>
   23ecc:	bl	1c94c <pclose@plt+0x96a0>
   23ed0:	ldr	r3, [sp, #4]
   23ed4:	cmp	r7, r3
   23ed8:	bne	23eac <pclose@plt+0x10c00>
   23edc:	b	23eb4 <pclose@plt+0x10c08>
   23ee0:	bl	12f10 <__errno_location@plt>
   23ee4:	ldr	r5, [r8, #4]
   23ee8:	ldr	r4, [r0]
   23eec:	mov	r0, r4
   23ef0:	bl	12db4 <strerror@plt>
   23ef4:	mov	r1, r5
   23ef8:	mov	r2, r0
   23efc:	ldr	r0, [pc, #36]	; 23f28 <pclose@plt+0x10c7c>
   23f00:	bl	1c94c <pclose@plt+0x96a0>
   23f04:	mov	r0, sl
   23f08:	bl	12b50 <gcry_free@plt>
   23f0c:	b	23e7c <pclose@plt+0x10bd0>
   23f10:	bl	12bb0 <__stack_chk_fail@plt>
   23f14:	bl	12f10 <__errno_location@plt>
   23f18:	ldr	r2, [r0]
   23f1c:	b	23d50 <pclose@plt+0x10aa4>
   23f20:	andeq	sp, r3, r0, asr #21
   23f24:	andeq	ip, r2, r0, asr #32
   23f28:	andeq	ip, r2, r4, lsr #1
   23f2c:	andeq	ip, r2, r0, lsl #1
   23f30:	andeq	ip, r2, r0, rrx
   23f34:	ldr	r3, [pc, #8]	; 23f44 <pclose@plt+0x10c98>
   23f38:	mov	r2, #1
   23f3c:	str	r2, [r3, #4]
   23f40:	bx	lr
   23f44:	andeq	lr, r3, r0, ror #15
   23f48:	push	{r4, r5, r6, lr}
   23f4c:	mov	r5, r0
   23f50:	ldr	r4, [pc, #152]	; 23ff0 <pclose@plt+0x10d44>
   23f54:	mov	r6, r1
   23f58:	ldr	r3, [r4, #8]
   23f5c:	cmp	r3, #0
   23f60:	beq	23fc8 <pclose@plt+0x10d1c>
   23f64:	cmp	r5, #0
   23f68:	beq	23fe4 <pclose@plt+0x10d38>
   23f6c:	cmp	r6, #0
   23f70:	bne	23fdc <pclose@plt+0x10d30>
   23f74:	mov	r1, #28
   23f78:	mov	r0, #1
   23f7c:	bl	12f64 <gcry_calloc@plt>
   23f80:	subs	r3, r0, #0
   23f84:	beq	23fe4 <pclose@plt+0x10d38>
   23f88:	ldr	r1, [r4, #4]
   23f8c:	mvn	r2, #0
   23f90:	cmp	r1, #0
   23f94:	str	r2, [r3, #12]
   23f98:	beq	23fbc <pclose@plt+0x10d10>
   23f9c:	ldrb	r2, [r3, #8]
   23fa0:	ldr	r1, [r4]
   23fa4:	mov	r0, r3
   23fa8:	orr	r2, r2, #2
   23fac:	str	r3, [r4]
   23fb0:	strb	r2, [r3, #8]
   23fb4:	str	r1, [r3]
   23fb8:	pop	{r4, r5, r6, pc}
   23fbc:	mov	r1, r5
   23fc0:	pop	{r4, r5, r6, lr}
   23fc4:	b	237d8 <pclose@plt+0x1052c>
   23fc8:	ldr	r0, [pc, #36]	; 23ff4 <pclose@plt+0x10d48>
   23fcc:	bl	29534 <pclose@plt+0x16288>
   23fd0:	mov	r3, #1
   23fd4:	str	r3, [r4, #8]
   23fd8:	b	23f64 <pclose@plt+0x10cb8>
   23fdc:	mov	r0, #22
   23fe0:	bl	13108 <gpg_err_set_errno@plt>
   23fe4:	mov	r3, #0
   23fe8:	mov	r0, r3
   23fec:	pop	{r4, r5, r6, pc}
   23ff0:	andeq	lr, r3, r0, ror #15
   23ff4:	ldrdeq	r4, [r2], -ip
   23ff8:	str	r1, [r0, #12]
   23ffc:	bx	lr
   24000:	ldr	r0, [r0, #12]
   24004:	bx	lr
   24008:	push	{r4, lr}
   2400c:	subs	r4, r0, #0
   24010:	popeq	{r4, pc}
   24014:	ldr	r2, [pc, #188]	; 240d8 <pclose@plt+0x10e2c>
   24018:	ldr	r1, [r2]
   2401c:	cmp	r1, #0
   24020:	beq	24050 <pclose@plt+0x10da4>
   24024:	cmp	r4, r1
   24028:	ldr	r3, [r1]
   2402c:	bne	24048 <pclose@plt+0x10d9c>
   24030:	b	240d0 <pclose@plt+0x10e24>
   24034:	cmp	r4, r3
   24038:	ldr	r2, [r3]
   2403c:	beq	24068 <pclose@plt+0x10dbc>
   24040:	mov	r1, r3
   24044:	mov	r3, r2
   24048:	cmp	r3, #0
   2404c:	bne	24034 <pclose@plt+0x10d88>
   24050:	ldrb	r3, [r4, #8]
   24054:	tst	r3, #2
   24058:	beq	24080 <pclose@plt+0x10dd4>
   2405c:	mov	r0, r4
   24060:	pop	{r4, lr}
   24064:	b	12b50 <gcry_free@plt>
   24068:	str	r2, [r1]
   2406c:	mov	r3, #0
   24070:	str	r3, [r4]
   24074:	ldrb	r3, [r4, #8]
   24078:	tst	r3, #2
   2407c:	bne	2405c <pclose@plt+0x10db0>
   24080:	tst	r3, #1
   24084:	beq	24098 <pclose@plt+0x10dec>
   24088:	ldr	r0, [r4, #4]
   2408c:	cmp	r0, #0
   24090:	beq	24098 <pclose@plt+0x10dec>
   24094:	bl	12bd4 <unlink@plt>
   24098:	ldr	r0, [r4, #16]
   2409c:	cmp	r0, #0
   240a0:	beq	240b8 <pclose@plt+0x10e0c>
   240a4:	ldrb	r3, [r4, #8]
   240a8:	tst	r3, #4
   240ac:	bne	240b8 <pclose@plt+0x10e0c>
   240b0:	bl	12bd4 <unlink@plt>
   240b4:	ldr	r0, [r4, #16]
   240b8:	bl	12b50 <gcry_free@plt>
   240bc:	ldr	r0, [r4, #4]
   240c0:	bl	12b50 <gcry_free@plt>
   240c4:	mov	r0, r4
   240c8:	pop	{r4, lr}
   240cc:	b	12b50 <gcry_free@plt>
   240d0:	str	r3, [r2]
   240d4:	b	2406c <pclose@plt+0x10dc0>
   240d8:	andeq	lr, r3, r0, ror #15
   240dc:	ldr	r3, [pc, #40]	; 2410c <pclose@plt+0x10e60>
   240e0:	mov	r2, #0
   240e4:	ldr	r0, [r3]
   240e8:	str	r2, [r3]
   240ec:	cmp	r0, r2
   240f0:	bxeq	lr
   240f4:	push	{r4, lr}
   240f8:	ldr	r4, [r0]
   240fc:	bl	24008 <pclose@plt+0x10d5c>
   24100:	subs	r0, r4, #0
   24104:	bne	240f8 <pclose@plt+0x10e4c>
   24108:	pop	{r4, pc}
   2410c:	andeq	lr, r3, r0, ror #15
   24110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24114:	sub	sp, sp, #148	; 0x94
   24118:	ldr	sl, [pc, #996]	; 24504 <pclose@plt+0x11258>
   2411c:	ldrb	r3, [r0, #8]
   24120:	ldr	r2, [sl]
   24124:	ands	r5, r3, #2
   24128:	str	r2, [sp, #140]	; 0x8c
   2412c:	movne	r5, #0
   24130:	bne	24158 <pclose@plt+0x10eac>
   24134:	ands	r8, r3, #1
   24138:	mov	r6, r0
   2413c:	moveq	r7, r1
   24140:	moveq	r4, r8
   24144:	mvneq	r9, #0
   24148:	beq	24190 <pclose@plt+0x10ee4>
   2414c:	ldr	r1, [r0, #4]
   24150:	ldr	r0, [pc, #944]	; 24508 <pclose@plt+0x1125c>
   24154:	bl	1cafc <pclose@plt+0x9850>
   24158:	ldr	r2, [sp, #140]	; 0x8c
   2415c:	ldr	r3, [sl]
   24160:	mov	r0, r5
   24164:	cmp	r2, r3
   24168:	bne	24500 <pclose@plt+0x11254>
   2416c:	add	sp, sp, #148	; 0x94
   24170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24174:	bl	12f10 <__errno_location@plt>
   24178:	ldr	fp, [r0]
   2417c:	cmp	fp, #2
   24180:	bne	244dc <pclose@plt+0x11230>
   24184:	ldr	r0, [pc, #896]	; 2450c <pclose@plt+0x11260>
   24188:	bl	1c94c <pclose@plt+0x96a0>
   2418c:	ldrb	r3, [r6, #8]
   24190:	tst	r3, #4
   24194:	bne	242e4 <pclose@plt+0x11038>
   24198:	ldr	r1, [r6, #4]
   2419c:	ldr	r0, [r6, #16]
   241a0:	bl	12fb8 <link@plt>
   241a4:	add	r2, sp, #16
   241a8:	ldr	r1, [r6, #16]
   241ac:	mov	r0, #3
   241b0:	bl	131ec <__xstat64@plt>
   241b4:	subs	r5, r0, #0
   241b8:	bne	244b0 <pclose@plt+0x11204>
   241bc:	ldr	r3, [sp, #36]	; 0x24
   241c0:	cmp	r3, #2
   241c4:	beq	244a0 <pclose@plt+0x111f4>
   241c8:	add	r1, sp, #12
   241cc:	mov	r0, r6
   241d0:	bl	23c5c <pclose@plt+0x109b0>
   241d4:	cmn	r0, #1
   241d8:	mov	r5, r0
   241dc:	beq	24174 <pclose@plt+0x10ec8>
   241e0:	bl	12e38 <getpid@plt>
   241e4:	ldr	r3, [sp, #12]
   241e8:	cmp	r5, r0
   241ec:	beq	243ec <pclose@plt+0x11140>
   241f0:	cmp	r3, #0
   241f4:	beq	2421c <pclose@plt+0x10f70>
   241f8:	mov	r1, #0
   241fc:	mov	r0, r5
   24200:	bl	12e08 <kill@plt>
   24204:	cmp	r0, #0
   24208:	beq	2421c <pclose@plt+0x10f70>
   2420c:	bl	12f10 <__errno_location@plt>
   24210:	ldr	r3, [r0]
   24214:	cmp	r3, #3
   24218:	beq	24460 <pclose@plt+0x111b4>
   2421c:	cmn	r9, #1
   24220:	beq	243e0 <pclose@plt+0x11134>
   24224:	subs	r3, r5, r9
   24228:	movne	r3, #1
   2422c:	cmp	r7, #0
   24230:	beq	244f0 <pclose@plt+0x11244>
   24234:	cmp	r4, #0
   24238:	moveq	r3, #1
   2423c:	cmp	r3, #0
   24240:	bne	243d8 <pclose@plt+0x1112c>
   24244:	cmp	r4, #800	; 0x320
   24248:	lsllt	r4, r4, #1
   2424c:	blt	24264 <pclose@plt+0x10fb8>
   24250:	cmp	r4, #800	; 0x320
   24254:	beq	243a0 <pclose@plt+0x110f4>
   24258:	cmp	r4, #8000	; 0x1f40
   2425c:	lsllt	r4, r4, #1
   24260:	blt	243a4 <pclose@plt+0x110f8>
   24264:	cmp	r7, #0
   24268:	ble	24278 <pclose@plt+0x10fcc>
   2426c:	cmp	r4, r7
   24270:	movge	r4, r7
   24274:	sub	r7, r7, r4
   24278:	ldr	r3, [pc, #656]	; 24510 <pclose@plt+0x11264>
   2427c:	add	r8, r8, r4
   24280:	cmp	r8, r3
   24284:	bgt	243ac <pclose@plt+0x11100>
   24288:	ldr	r3, [pc, #644]	; 24514 <pclose@plt+0x11268>
   2428c:	add	r2, sp, #16
   24290:	str	r2, [sp]
   24294:	umull	r3, lr, r3, r4
   24298:	mov	r3, #0
   2429c:	lsr	lr, lr, #6
   242a0:	mov	r2, r3
   242a4:	rsb	r0, lr, lr, lsl #5
   242a8:	mov	r1, r3
   242ac:	add	r0, lr, r0, lsl #2
   242b0:	str	lr, [sp, #16]
   242b4:	sub	r0, r4, r0, lsl #3
   242b8:	rsb	ip, r0, r0, lsl #5
   242bc:	add	ip, r0, ip, lsl #2
   242c0:	mov	r0, r3
   242c4:	lsl	ip, ip, #3
   242c8:	str	ip, [sp, #20]
   242cc:	bl	12b68 <select@plt>
   242d0:	b	2418c <pclose@plt+0x10ee0>
   242d4:	bl	12f10 <__errno_location@plt>
   242d8:	ldr	r5, [r0]
   242dc:	cmp	r5, #4
   242e0:	bne	24410 <pclose@plt+0x11164>
   242e4:	mov	r0, #0
   242e8:	bl	13108 <gpg_err_set_errno@plt>
   242ec:	mov	r2, #420	; 0x1a4
   242f0:	mov	r1, #193	; 0xc1
   242f4:	ldr	r0, [r6, #4]
   242f8:	bl	12d3c <open64@plt>
   242fc:	cmn	r0, #1
   24300:	mov	fp, r0
   24304:	beq	242d4 <pclose@plt+0x11028>
   24308:	bl	12e38 <getpid@plt>
   2430c:	ldr	r2, [pc, #516]	; 24518 <pclose@plt+0x1126c>
   24310:	mov	r1, #16
   24314:	mov	r3, r0
   24318:	add	r0, sp, #124	; 0x7c
   2431c:	bl	13048 <gpgrt_snprintf@plt>
   24320:	add	r1, sp, #124	; 0x7c
   24324:	mov	r2, #11
   24328:	mov	r0, fp
   2432c:	bl	12fc4 <write@plt>
   24330:	cmp	r0, #11
   24334:	bne	2435c <pclose@plt+0x110b0>
   24338:	ldr	r3, [r6, #20]
   2433c:	ldr	r1, [r6, #16]
   24340:	ldr	r2, [r6, #24]
   24344:	add	r1, r1, r3
   24348:	mov	r0, fp
   2434c:	bl	12fc4 <write@plt>
   24350:	ldr	r3, [r6, #24]
   24354:	cmp	r0, r3
   24358:	beq	24478 <pclose@plt+0x111cc>
   2435c:	bl	12f10 <__errno_location@plt>
   24360:	ldr	r7, [r6, #4]
   24364:	mvn	r5, #0
   24368:	ldr	r4, [r0]
   2436c:	mov	r0, r4
   24370:	bl	12db4 <strerror@plt>
   24374:	mov	r1, r7
   24378:	mov	r2, r0
   2437c:	ldr	r0, [pc, #408]	; 2451c <pclose@plt+0x11270>
   24380:	bl	1c9b0 <pclose@plt+0x9704>
   24384:	mov	r0, fp
   24388:	bl	1324c <close@plt>
   2438c:	ldr	r0, [r6, #4]
   24390:	bl	12bd4 <unlink@plt>
   24394:	mov	r0, r4
   24398:	bl	13108 <gpg_err_set_errno@plt>
   2439c:	b	24158 <pclose@plt+0x10eac>
   243a0:	mov	r4, #2000	; 0x7d0
   243a4:	cmp	r7, #0
   243a8:	bgt	2426c <pclose@plt+0x10fc0>
   243ac:	ldr	r3, [pc, #364]	; 24520 <pclose@plt+0x11274>
   243b0:	ldr	r3, [r3]
   243b4:	cmp	r3, #0
   243b8:	beq	24444 <pclose@plt+0x11198>
   243bc:	cmp	r6, r3
   243c0:	beq	243b0 <pclose@plt+0x11104>
   243c4:	ldrb	r2, [r3, #8]
   243c8:	tst	r2, #1
   243cc:	beq	243b0 <pclose@plt+0x11104>
   243d0:	ldr	r3, [pc, #332]	; 24524 <pclose@plt+0x11278>
   243d4:	b	24448 <pclose@plt+0x1119c>
   243d8:	mov	r4, #50	; 0x32
   243dc:	b	24264 <pclose@plt+0x10fb8>
   243e0:	mov	r9, r5
   243e4:	mov	r3, #0
   243e8:	b	2422c <pclose@plt+0x10f80>
   243ec:	cmp	r3, #0
   243f0:	beq	2421c <pclose@plt+0x10f70>
   243f4:	ldr	r0, [pc, #300]	; 24528 <pclose@plt+0x1127c>
   243f8:	bl	1c94c <pclose@plt+0x96a0>
   243fc:	ldrb	r3, [r6, #8]
   24400:	mov	r5, #0
   24404:	orr	r3, r3, #1
   24408:	strb	r3, [r6, #8]
   2440c:	b	24158 <pclose@plt+0x10eac>
   24410:	cmp	r5, #17
   24414:	beq	241c8 <pclose@plt+0x10f1c>
   24418:	mov	r0, r5
   2441c:	ldr	r4, [r6, #4]
   24420:	bl	12db4 <strerror@plt>
   24424:	mov	r1, r4
   24428:	mov	r2, r0
   2442c:	ldr	r0, [pc, #248]	; 2452c <pclose@plt+0x11280>
   24430:	bl	1c9b0 <pclose@plt+0x9704>
   24434:	mov	r0, r5
   24438:	mov	r5, fp
   2443c:	bl	13108 <gpg_err_set_errno@plt>
   24440:	b	24158 <pclose@plt+0x10eac>
   24444:	ldr	r3, [pc, #228]	; 24530 <pclose@plt+0x11284>
   24448:	mov	r1, r5
   2444c:	ldr	r2, [pc, #220]	; 24530 <pclose@plt+0x11284>
   24450:	ldr	r0, [pc, #220]	; 24534 <pclose@plt+0x11288>
   24454:	bl	1c94c <pclose@plt+0x96a0>
   24458:	mov	r8, #0
   2445c:	b	24288 <pclose@plt+0x10fdc>
   24460:	mov	r1, r5
   24464:	ldr	r0, [pc, #204]	; 24538 <pclose@plt+0x1128c>
   24468:	bl	1c94c <pclose@plt+0x96a0>
   2446c:	ldr	r0, [r6, #4]
   24470:	bl	12bd4 <unlink@plt>
   24474:	b	2418c <pclose@plt+0x10ee0>
   24478:	mov	r2, #1
   2447c:	ldr	r1, [pc, #184]	; 2453c <pclose@plt+0x11290>
   24480:	mov	r0, fp
   24484:	bl	12fc4 <write@plt>
   24488:	cmp	r0, #1
   2448c:	bne	2435c <pclose@plt+0x110b0>
   24490:	mov	r0, fp
   24494:	bl	1324c <close@plt>
   24498:	subs	r5, r0, #0
   2449c:	bne	2435c <pclose@plt+0x110b0>
   244a0:	ldrb	r3, [r6, #8]
   244a4:	orr	r3, r3, #1
   244a8:	strb	r3, [r6, #8]
   244ac:	b	24158 <pclose@plt+0x10eac>
   244b0:	bl	12f10 <__errno_location@plt>
   244b4:	mvn	r5, #0
   244b8:	ldr	r4, [r0]
   244bc:	mov	r0, r4
   244c0:	bl	12db4 <strerror@plt>
   244c4:	mov	r1, r0
   244c8:	ldr	r0, [pc, #112]	; 24540 <pclose@plt+0x11294>
   244cc:	bl	1c9b0 <pclose@plt+0x9704>
   244d0:	mov	r0, r4
   244d4:	bl	13108 <gpg_err_set_errno@plt>
   244d8:	b	24158 <pclose@plt+0x10eac>
   244dc:	ldr	r0, [pc, #96]	; 24544 <pclose@plt+0x11298>
   244e0:	bl	1c94c <pclose@plt+0x96a0>
   244e4:	mov	r0, fp
   244e8:	bl	13108 <gpg_err_set_errno@plt>
   244ec:	b	24158 <pclose@plt+0x10eac>
   244f0:	mov	r0, #13
   244f4:	bl	13108 <gpg_err_set_errno@plt>
   244f8:	mvn	r5, #0
   244fc:	b	24158 <pclose@plt+0x10eac>
   24500:	bl	12bb0 <__stack_chk_fail@plt>
   24504:	andeq	sp, r3, r0, asr #21
   24508:	ldrdeq	ip, [r2], -r8
   2450c:	andeq	ip, r2, r0, ror r1
   24510:	ldrdeq	r0, [r0], -fp
   24514:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   24518:	andeq	fp, r2, ip, lsl #31
   2451c:	strdeq	ip, [r2], -r8
   24520:	andeq	lr, r3, r0, ror #15
   24524:	andeq	ip, r2, r8, asr #1
   24528:	andeq	ip, r2, r8, lsl #3
   2452c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24530:	muleq	r2, r8, r7
   24534:	ldrdeq	ip, [r2], -r4
   24538:	andeq	ip, r2, r8, lsr #3
   2453c:	strdeq	ip, [r2], -r0
   24540:	andeq	ip, r2, r4, lsr #2
   24544:	andeq	ip, r2, r8, asr r1
   24548:	push	{r4, r5, r6, lr}
   2454c:	sub	sp, sp, #8
   24550:	ldr	r6, [pc, #260]	; 2465c <pclose@plt+0x113b0>
   24554:	ldr	r3, [pc, #260]	; 24660 <pclose@plt+0x113b4>
   24558:	ldr	r2, [r6]
   2455c:	str	r2, [sp, #4]
   24560:	ldr	r4, [r3]
   24564:	cmp	r4, #0
   24568:	beq	245d0 <pclose@plt+0x11324>
   2456c:	ldrb	r4, [r0, #8]
   24570:	mov	r5, r0
   24574:	tst	r4, #2
   24578:	movne	r4, #0
   2457c:	bne	245d0 <pclose@plt+0x11324>
   24580:	ands	r4, r4, #1
   24584:	beq	245ec <pclose@plt+0x11340>
   24588:	mov	r1, sp
   2458c:	bl	23c5c <pclose@plt+0x109b0>
   24590:	cmn	r0, #1
   24594:	mov	r4, r0
   24598:	beq	24618 <pclose@plt+0x1136c>
   2459c:	bl	12e38 <getpid@plt>
   245a0:	cmp	r4, r0
   245a4:	bne	245fc <pclose@plt+0x11350>
   245a8:	ldr	r3, [sp]
   245ac:	cmp	r3, #0
   245b0:	beq	245fc <pclose@plt+0x11350>
   245b4:	ldr	r0, [r5, #4]
   245b8:	bl	12bd4 <unlink@plt>
   245bc:	subs	r4, r0, #0
   245c0:	bne	24634 <pclose@plt+0x11388>
   245c4:	ldrb	r3, [r5, #8]
   245c8:	bic	r3, r3, #1
   245cc:	strb	r3, [r5, #8]
   245d0:	ldr	r2, [sp, #4]
   245d4:	ldr	r3, [r6]
   245d8:	mov	r0, r4
   245dc:	cmp	r2, r3
   245e0:	bne	24658 <pclose@plt+0x113ac>
   245e4:	add	sp, sp, #8
   245e8:	pop	{r4, r5, r6, pc}
   245ec:	ldr	r1, [r0, #4]
   245f0:	ldr	r0, [pc, #108]	; 24664 <pclose@plt+0x113b8>
   245f4:	bl	1cafc <pclose@plt+0x9850>
   245f8:	b	245d0 <pclose@plt+0x11324>
   245fc:	mov	r1, r4
   24600:	ldr	r0, [pc, #96]	; 24668 <pclose@plt+0x113bc>
   24604:	bl	1c9b0 <pclose@plt+0x9704>
   24608:	mov	r0, #13
   2460c:	bl	13108 <gpg_err_set_errno@plt>
   24610:	mvn	r4, #0
   24614:	b	245d0 <pclose@plt+0x11324>
   24618:	bl	12f10 <__errno_location@plt>
   2461c:	ldr	r5, [r0]
   24620:	ldr	r0, [pc, #68]	; 2466c <pclose@plt+0x113c0>
   24624:	bl	1c9b0 <pclose@plt+0x9704>
   24628:	mov	r0, r5
   2462c:	bl	13108 <gpg_err_set_errno@plt>
   24630:	b	245d0 <pclose@plt+0x11324>
   24634:	bl	12f10 <__errno_location@plt>
   24638:	ldr	r1, [r5, #4]
   2463c:	mvn	r4, #0
   24640:	ldr	r5, [r0]
   24644:	ldr	r0, [pc, #36]	; 24670 <pclose@plt+0x113c4>
   24648:	bl	1c9b0 <pclose@plt+0x9704>
   2464c:	mov	r0, r5
   24650:	bl	13108 <gpg_err_set_errno@plt>
   24654:	b	245d0 <pclose@plt+0x11324>
   24658:	bl	12bb0 <__stack_chk_fail@plt>
   2465c:	andeq	sp, r3, r0, asr #21
   24660:	andeq	lr, r3, r0, ror #15
   24664:	andeq	ip, r2, ip, lsr #4
   24668:	andeq	ip, r2, ip, ror #4
   2466c:	andeq	ip, r2, r8, asr #4
   24670:	muleq	r2, r4, r2
   24674:	mvn	r2, #0
   24678:	b	130c0 <__explicit_bzero_chk@plt>
   2467c:	push	{r4, r5, r6, lr}
   24680:	sub	sp, sp, #216	; 0xd8
   24684:	ldr	r4, [pc, #160]	; 2472c <pclose@plt+0x11480>
   24688:	mov	r5, r0
   2468c:	mov	r6, r1
   24690:	ldr	r3, [r4]
   24694:	str	r3, [sp, #212]	; 0xd4
   24698:	bl	1872c <pclose@plt+0x5480>
   2469c:	cmp	r0, #0
   246a0:	moveq	r0, #1
   246a4:	bne	246c0 <pclose@plt+0x11414>
   246a8:	ldr	r2, [sp, #212]	; 0xd4
   246ac:	ldr	r3, [r4]
   246b0:	cmp	r2, r3
   246b4:	bne	24728 <pclose@plt+0x1147c>
   246b8:	add	sp, sp, #216	; 0xd8
   246bc:	pop	{r4, r5, r6, pc}
   246c0:	mov	r1, r5
   246c4:	mov	r2, sp
   246c8:	mov	r0, #3
   246cc:	bl	131ec <__xstat64@plt>
   246d0:	cmp	r0, #0
   246d4:	beq	246e0 <pclose@plt+0x11434>
   246d8:	mov	r0, #0
   246dc:	b	246a8 <pclose@plt+0x113fc>
   246e0:	mov	r1, r6
   246e4:	add	r2, sp, #104	; 0x68
   246e8:	mov	r0, #3
   246ec:	bl	131ec <__xstat64@plt>
   246f0:	cmp	r0, #0
   246f4:	bne	246d8 <pclose@plt+0x1142c>
   246f8:	ldrd	r0, [sp]
   246fc:	ldrd	r2, [sp, #104]	; 0x68
   24700:	cmp	r1, r3
   24704:	cmpeq	r0, r2
   24708:	bne	246d8 <pclose@plt+0x1142c>
   2470c:	ldrd	r0, [sp, #96]	; 0x60
   24710:	ldrd	r2, [sp, #200]	; 0xc8
   24714:	cmp	r1, r3
   24718:	cmpeq	r0, r2
   2471c:	moveq	r0, #1
   24720:	movne	r0, #0
   24724:	b	246a8 <pclose@plt+0x113fc>
   24728:	bl	12bb0 <__stack_chk_fail@plt>
   2472c:	andeq	sp, r3, r0, asr #21
   24730:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24734:	mov	r2, #5
   24738:	mov	r4, r0
   2473c:	mov	r8, r1
   24740:	mov	r0, #0
   24744:	ldr	r1, [pc, #268]	; 24858 <pclose@plt+0x115ac>
   24748:	bl	12b98 <dcgettext@plt>
   2474c:	mov	r2, #5
   24750:	ldr	r1, [pc, #260]	; 2485c <pclose@plt+0x115b0>
   24754:	mov	r5, r0
   24758:	mov	r0, #0
   2475c:	bl	12b98 <dcgettext@plt>
   24760:	mov	r2, #5
   24764:	ldr	r1, [pc, #244]	; 24860 <pclose@plt+0x115b4>
   24768:	mov	r7, r0
   2476c:	mov	r0, #0
   24770:	bl	12b98 <dcgettext@plt>
   24774:	mov	r2, #5
   24778:	ldr	r1, [pc, #228]	; 24864 <pclose@plt+0x115b8>
   2477c:	mov	r6, r0
   24780:	mov	r0, #0
   24784:	bl	12b98 <dcgettext@plt>
   24788:	mov	r1, r4
   2478c:	mov	r9, r0
   24790:	mov	r0, r5
   24794:	bl	254e8 <pclose@plt+0x1223c>
   24798:	subs	r5, r0, #0
   2479c:	bne	2484c <pclose@plt+0x115a0>
   247a0:	ldrb	r1, [r4]
   247a4:	cmp	r1, #0
   247a8:	beq	247c8 <pclose@plt+0x1151c>
   247ac:	mov	r0, r7
   247b0:	bl	12eb0 <strchr@plt>
   247b4:	cmp	r0, #0
   247b8:	beq	247c8 <pclose@plt+0x1151c>
   247bc:	ldrb	r3, [r4, #1]
   247c0:	cmp	r3, #0
   247c4:	beq	2484c <pclose@plt+0x115a0>
   247c8:	mov	r0, r6
   247cc:	mov	r1, r4
   247d0:	bl	254e8 <pclose@plt+0x1223c>
   247d4:	cmp	r0, #0
   247d8:	bne	24844 <pclose@plt+0x11598>
   247dc:	ldrb	r1, [r4]
   247e0:	cmp	r1, #0
   247e4:	beq	24804 <pclose@plt+0x11558>
   247e8:	mov	r0, r9
   247ec:	bl	12eb0 <strchr@plt>
   247f0:	cmp	r0, #0
   247f4:	beq	24804 <pclose@plt+0x11558>
   247f8:	ldrb	r5, [r4, #1]
   247fc:	cmp	r5, #0
   24800:	beq	24844 <pclose@plt+0x11598>
   24804:	ldr	r1, [pc, #76]	; 24858 <pclose@plt+0x115ac>
   24808:	mov	r0, r4
   2480c:	bl	188d8 <pclose@plt+0x562c>
   24810:	cmp	r0, #0
   24814:	beq	2484c <pclose@plt+0x115a0>
   24818:	ldrb	r1, [r4]
   2481c:	cmp	r1, #0
   24820:	beq	24840 <pclose@plt+0x11594>
   24824:	ldr	r0, [pc, #48]	; 2485c <pclose@plt+0x115b0>
   24828:	bl	12eb0 <strchr@plt>
   2482c:	cmp	r0, #0
   24830:	beq	24840 <pclose@plt+0x11594>
   24834:	ldrb	r3, [r4, #1]
   24838:	cmp	r3, #0
   2483c:	beq	2484c <pclose@plt+0x115a0>
   24840:	mov	r5, r8
   24844:	mov	r0, r5
   24848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2484c:	mov	r5, #1
   24850:	mov	r0, r5
   24854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24858:	andeq	r9, r2, r4, asr #30
   2485c:	andeq	ip, r2, r4, asr #5
   24860:	andeq	ip, r2, r8, asr #5
   24864:	andeq	ip, r2, ip, asr #5
   24868:	mov	r1, #0
   2486c:	b	24730 <pclose@plt+0x11484>
   24870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24874:	mov	r2, #5
   24878:	mov	r4, r0
   2487c:	ldr	r1, [pc, #444]	; 24a40 <pclose@plt+0x11794>
   24880:	mov	r0, #0
   24884:	bl	12b98 <dcgettext@plt>
   24888:	mov	r2, #5
   2488c:	ldr	r1, [pc, #432]	; 24a44 <pclose@plt+0x11798>
   24890:	mov	r6, r0
   24894:	mov	r0, #0
   24898:	bl	12b98 <dcgettext@plt>
   2489c:	mov	r2, #5
   248a0:	ldr	r1, [pc, #416]	; 24a48 <pclose@plt+0x1179c>
   248a4:	mov	r5, r0
   248a8:	mov	r0, #0
   248ac:	bl	12b98 <dcgettext@plt>
   248b0:	mov	r2, #5
   248b4:	ldr	r1, [pc, #400]	; 24a4c <pclose@plt+0x117a0>
   248b8:	mov	r7, r0
   248bc:	mov	r0, #0
   248c0:	bl	12b98 <dcgettext@plt>
   248c4:	mov	r2, #5
   248c8:	ldr	r1, [pc, #384]	; 24a50 <pclose@plt+0x117a4>
   248cc:	mov	r9, r0
   248d0:	mov	r0, #0
   248d4:	bl	12b98 <dcgettext@plt>
   248d8:	mov	r2, #5
   248dc:	ldr	r1, [pc, #368]	; 24a54 <pclose@plt+0x117a8>
   248e0:	mov	r8, r0
   248e4:	mov	r0, #0
   248e8:	bl	12b98 <dcgettext@plt>
   248ec:	mov	r1, r4
   248f0:	mov	sl, r0
   248f4:	mov	r0, r5
   248f8:	bl	254e8 <pclose@plt+0x1223c>
   248fc:	cmp	r0, #0
   24900:	beq	2490c <pclose@plt+0x11660>
   24904:	mov	r0, #0
   24908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2490c:	mov	r0, r6
   24910:	mov	r1, r4
   24914:	bl	254e8 <pclose@plt+0x1223c>
   24918:	cmp	r0, #0
   2491c:	bne	249bc <pclose@plt+0x11710>
   24920:	mov	r0, r7
   24924:	mov	r1, r4
   24928:	bl	254e8 <pclose@plt+0x1223c>
   2492c:	cmp	r0, #0
   24930:	bne	24994 <pclose@plt+0x116e8>
   24934:	ldrb	r5, [r4]
   24938:	cmp	r5, #0
   2493c:	beq	249c4 <pclose@plt+0x11718>
   24940:	mov	r0, r8
   24944:	mov	r1, r5
   24948:	bl	12eb0 <strchr@plt>
   2494c:	cmp	r0, #0
   24950:	beq	2499c <pclose@plt+0x116f0>
   24954:	ldrb	r3, [r4, #1]
   24958:	cmp	r3, #0
   2495c:	beq	24904 <pclose@plt+0x11658>
   24960:	mov	r0, r9
   24964:	mov	r1, r5
   24968:	bl	12eb0 <strchr@plt>
   2496c:	cmp	r0, #0
   24970:	bne	249c4 <pclose@plt+0x11718>
   24974:	mov	r1, r5
   24978:	mov	r0, sl
   2497c:	bl	12eb0 <strchr@plt>
   24980:	cmp	r0, #0
   24984:	beq	249c4 <pclose@plt+0x11718>
   24988:	ldrb	r3, [r4, #1]
   2498c:	cmp	r3, #0
   24990:	bne	249c4 <pclose@plt+0x11718>
   24994:	mvn	r0, #0
   24998:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2499c:	mov	r0, r9
   249a0:	mov	r1, r5
   249a4:	bl	12eb0 <strchr@plt>
   249a8:	cmp	r0, #0
   249ac:	beq	24974 <pclose@plt+0x116c8>
   249b0:	ldrb	r3, [r4, #1]
   249b4:	cmp	r3, #0
   249b8:	bne	249c4 <pclose@plt+0x11718>
   249bc:	mov	r0, #1
   249c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   249c4:	ldr	r1, [pc, #116]	; 24a40 <pclose@plt+0x11794>
   249c8:	mov	r0, r4
   249cc:	bl	188d8 <pclose@plt+0x562c>
   249d0:	cmp	r0, #0
   249d4:	beq	249bc <pclose@plt+0x11710>
   249d8:	ldr	r1, [pc, #104]	; 24a48 <pclose@plt+0x1179c>
   249dc:	mov	r0, r4
   249e0:	bl	188d8 <pclose@plt+0x562c>
   249e4:	cmp	r0, #0
   249e8:	beq	24994 <pclose@plt+0x116e8>
   249ec:	ldrb	r5, [r4]
   249f0:	cmp	r5, #0
   249f4:	beq	24904 <pclose@plt+0x11658>
   249f8:	mov	r1, r5
   249fc:	ldr	r0, [pc, #72]	; 24a4c <pclose@plt+0x117a0>
   24a00:	bl	12eb0 <strchr@plt>
   24a04:	cmp	r0, #0
   24a08:	beq	24a18 <pclose@plt+0x1176c>
   24a0c:	ldrb	r3, [r4, #1]
   24a10:	cmp	r3, #0
   24a14:	beq	249bc <pclose@plt+0x11710>
   24a18:	mov	r1, r5
   24a1c:	ldr	r0, [pc, #48]	; 24a54 <pclose@plt+0x117a8>
   24a20:	bl	12eb0 <strchr@plt>
   24a24:	cmp	r0, #0
   24a28:	beq	24904 <pclose@plt+0x11658>
   24a2c:	ldrb	r0, [r4, #1]
   24a30:	clz	r0, r0
   24a34:	lsr	r0, r0, #5
   24a38:	rsb	r0, r0, #0
   24a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a40:	andeq	r9, r2, r4, asr #30
   24a44:	andeq	ip, r2, r8, asr #5
   24a48:	ldrdeq	ip, [r2], -r0
   24a4c:	andeq	ip, r2, r4, asr #5
   24a50:	andeq	ip, r2, ip, asr #5
   24a54:	ldrdeq	ip, [r2], -r8
   24a58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24a5c:	mov	r2, #5
   24a60:	mov	r4, r0
   24a64:	mov	r9, r1
   24a68:	mov	r0, #0
   24a6c:	ldr	r1, [pc, #344]	; 24bcc <pclose@plt+0x11920>
   24a70:	bl	12b98 <dcgettext@plt>
   24a74:	mov	r2, #5
   24a78:	ldr	r1, [pc, #336]	; 24bd0 <pclose@plt+0x11924>
   24a7c:	mov	r5, r0
   24a80:	mov	r0, #0
   24a84:	bl	12b98 <dcgettext@plt>
   24a88:	mov	r2, #5
   24a8c:	ldr	r1, [pc, #320]	; 24bd4 <pclose@plt+0x11928>
   24a90:	mov	r6, r0
   24a94:	mov	r0, #0
   24a98:	bl	12b98 <dcgettext@plt>
   24a9c:	mov	r2, #5
   24aa0:	ldr	r1, [pc, #304]	; 24bd8 <pclose@plt+0x1192c>
   24aa4:	mov	r7, r0
   24aa8:	mov	r0, #0
   24aac:	bl	12b98 <dcgettext@plt>
   24ab0:	mov	r1, r4
   24ab4:	mov	r8, r0
   24ab8:	mov	r0, r5
   24abc:	bl	254e8 <pclose@plt+0x1223c>
   24ac0:	subs	r5, r0, #0
   24ac4:	beq	24ad4 <pclose@plt+0x11828>
   24ac8:	mov	r5, #1
   24acc:	mov	r0, r5
   24ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24ad4:	mov	r0, r6
   24ad8:	mov	r1, r4
   24adc:	bl	254e8 <pclose@plt+0x1223c>
   24ae0:	cmp	r0, #0
   24ae4:	bne	24acc <pclose@plt+0x11820>
   24ae8:	ldrb	r6, [r4]
   24aec:	cmp	r6, #0
   24af0:	beq	24b14 <pclose@plt+0x11868>
   24af4:	mov	r0, r7
   24af8:	mov	r1, r6
   24afc:	bl	12eb0 <strchr@plt>
   24b00:	cmp	r0, #0
   24b04:	beq	24b84 <pclose@plt+0x118d8>
   24b08:	ldrb	r3, [r4, #1]
   24b0c:	cmp	r3, #0
   24b10:	beq	24ac8 <pclose@plt+0x1181c>
   24b14:	ldr	r1, [pc, #192]	; 24bdc <pclose@plt+0x11930>
   24b18:	mov	r0, r4
   24b1c:	bl	188d8 <pclose@plt+0x562c>
   24b20:	cmp	r0, #0
   24b24:	beq	24ac8 <pclose@plt+0x1181c>
   24b28:	ldr	r1, [pc, #176]	; 24be0 <pclose@plt+0x11934>
   24b2c:	mov	r0, r4
   24b30:	bl	188d8 <pclose@plt+0x562c>
   24b34:	cmp	r0, #0
   24b38:	beq	24ac8 <pclose@plt+0x1181c>
   24b3c:	ldr	r1, [pc, #160]	; 24be4 <pclose@plt+0x11938>
   24b40:	mov	r0, r4
   24b44:	bl	188d8 <pclose@plt+0x562c>
   24b48:	cmp	r0, #0
   24b4c:	beq	24acc <pclose@plt+0x11820>
   24b50:	ldrb	r6, [r4]
   24b54:	cmp	r6, #0
   24b58:	beq	24b7c <pclose@plt+0x118d0>
   24b5c:	mov	r1, r6
   24b60:	ldr	r0, [pc, #108]	; 24bd4 <pclose@plt+0x11928>
   24b64:	bl	12eb0 <strchr@plt>
   24b68:	cmp	r0, #0
   24b6c:	beq	24ba8 <pclose@plt+0x118fc>
   24b70:	ldrb	r3, [r4, #1]
   24b74:	cmp	r3, #0
   24b78:	beq	24ac8 <pclose@plt+0x1181c>
   24b7c:	mov	r5, r9
   24b80:	b	24acc <pclose@plt+0x11820>
   24b84:	mov	r1, r6
   24b88:	mov	r0, r8
   24b8c:	bl	12eb0 <strchr@plt>
   24b90:	cmp	r0, #0
   24b94:	beq	24b14 <pclose@plt+0x11868>
   24b98:	ldrb	r3, [r4, #1]
   24b9c:	cmp	r3, #0
   24ba0:	beq	24acc <pclose@plt+0x11820>
   24ba4:	b	24b14 <pclose@plt+0x11868>
   24ba8:	mov	r1, r6
   24bac:	ldr	r0, [pc, #36]	; 24bd8 <pclose@plt+0x1192c>
   24bb0:	bl	12eb0 <strchr@plt>
   24bb4:	cmp	r0, #0
   24bb8:	beq	24b7c <pclose@plt+0x118d0>
   24bbc:	ldrb	r3, [r4, #1]
   24bc0:	cmp	r3, #0
   24bc4:	movne	r5, r9
   24bc8:	b	24acc <pclose@plt+0x11820>
   24bcc:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24bd0:	andeq	ip, r2, r8, ror #5
   24bd4:	strdeq	ip, [r2], -r8
   24bd8:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24bdc:	andeq	ip, r2, r0, lsl #6
   24be0:	andeq	ip, r2, r8, lsl #6
   24be4:	andeq	ip, r2, ip, lsl #6
   24be8:	push	{r4, r5, r6, r7, lr}
   24bec:	ldrb	r6, [r0]
   24bf0:	cmp	r6, #48	; 0x30
   24bf4:	beq	24cf8 <pclose@plt+0x11a4c>
   24bf8:	sub	r7, r6, #48	; 0x30
   24bfc:	uxtb	ip, r7
   24c00:	cmp	ip, #9
   24c04:	movhi	ip, #0
   24c08:	bhi	24c48 <pclose@plt+0x1199c>
   24c0c:	ldrb	r4, [r0, #1]
   24c10:	sub	lr, r4, #48	; 0x30
   24c14:	add	r5, r0, #1
   24c18:	mov	ip, #0
   24c1c:	b	24c2c <pclose@plt+0x11980>
   24c20:	ldrb	r4, [r5, #1]!
   24c24:	sub	r7, r6, #48	; 0x30
   24c28:	sub	lr, r4, #48	; 0x30
   24c2c:	add	ip, ip, ip, lsl #2
   24c30:	uxtb	lr, lr
   24c34:	cmp	lr, #9
   24c38:	mov	r6, r4
   24c3c:	add	ip, r7, ip, lsl #1
   24c40:	mov	r0, r5
   24c44:	bls	24c20 <pclose@plt+0x11974>
   24c48:	str	ip, [r1]
   24c4c:	ldrb	r1, [r0]
   24c50:	cmp	r1, #46	; 0x2e
   24c54:	bne	24d10 <pclose@plt+0x11a64>
   24c58:	ldrb	lr, [r0, #1]
   24c5c:	add	ip, r0, #1
   24c60:	cmp	lr, #48	; 0x30
   24c64:	beq	24d18 <pclose@plt+0x11a6c>
   24c68:	sub	r0, lr, #48	; 0x30
   24c6c:	uxtb	r1, r0
   24c70:	cmp	r1, #9
   24c74:	movhi	r1, #0
   24c78:	bhi	24c9c <pclose@plt+0x119f0>
   24c7c:	mov	r1, #0
   24c80:	ldrb	lr, [ip, #1]!
   24c84:	add	r1, r1, r1, lsl #2
   24c88:	add	r1, r0, r1, lsl #1
   24c8c:	sub	r0, lr, #48	; 0x30
   24c90:	uxtb	lr, r0
   24c94:	cmp	lr, #9
   24c98:	bls	24c80 <pclose@plt+0x119d4>
   24c9c:	str	r1, [r2]
   24ca0:	ldrb	r2, [ip]
   24ca4:	cmp	r2, #46	; 0x2e
   24ca8:	bne	24d10 <pclose@plt+0x11a64>
   24cac:	ldrb	lr, [ip, #1]
   24cb0:	add	r0, ip, #1
   24cb4:	cmp	lr, #48	; 0x30
   24cb8:	beq	24d30 <pclose@plt+0x11a84>
   24cbc:	sub	r1, lr, #48	; 0x30
   24cc0:	uxtb	r2, r1
   24cc4:	cmp	r2, #9
   24cc8:	movhi	r2, #0
   24ccc:	bhi	24cf0 <pclose@plt+0x11a44>
   24cd0:	mov	r2, #0
   24cd4:	ldrb	lr, [r0, #1]!
   24cd8:	add	r2, r2, r2, lsl #2
   24cdc:	add	r2, r1, r2, lsl #1
   24ce0:	sub	r1, lr, #48	; 0x30
   24ce4:	uxtb	ip, r1
   24ce8:	cmp	ip, #9
   24cec:	bls	24cd4 <pclose@plt+0x11a28>
   24cf0:	str	r2, [r3]
   24cf4:	pop	{r4, r5, r6, r7, pc}
   24cf8:	ldrb	r4, [r0, #1]
   24cfc:	sub	lr, r4, #48	; 0x30
   24d00:	uxtb	ip, lr
   24d04:	cmp	ip, #9
   24d08:	movhi	r7, #0
   24d0c:	bhi	24c14 <pclose@plt+0x11968>
   24d10:	mov	r0, #0
   24d14:	pop	{r4, r5, r6, r7, pc}
   24d18:	ldrb	r1, [r0, #2]
   24d1c:	sub	r1, r1, #48	; 0x30
   24d20:	cmp	r1, #9
   24d24:	bls	24d10 <pclose@plt+0x11a64>
   24d28:	mov	r0, #0
   24d2c:	b	24c7c <pclose@plt+0x119d0>
   24d30:	ldrb	r2, [ip, #2]
   24d34:	sub	r2, r2, #48	; 0x30
   24d38:	cmp	r2, #9
   24d3c:	bls	24d10 <pclose@plt+0x11a64>
   24d40:	mov	r1, #0
   24d44:	b	24cd0 <pclose@plt+0x11a24>
   24d48:	subs	r0, r2, #0
   24d4c:	push	{r4, lr}
   24d50:	beq	24d60 <pclose@plt+0x11ab4>
   24d54:	mov	r1, r0
   24d58:	ldr	r0, [pc, #12]	; 24d6c <pclose@plt+0x11ac0>
   24d5c:	bl	1ca34 <pclose@plt+0x9788>
   24d60:	mov	r0, r1
   24d64:	bl	13120 <gpg_strerror@plt>
   24d68:	b	24d54 <pclose@plt+0x11aa8>
   24d6c:	andeq	ip, r2, ip, lsr #6
   24d70:	cmp	r1, #20
   24d74:	mov	ip, r2
   24d78:	beq	24dd4 <pclose@plt+0x11b28>
   24d7c:	ble	24db0 <pclose@plt+0x11b04>
   24d80:	cmp	r1, #50	; 0x32
   24d84:	moveq	r0, #6
   24d88:	beq	24da4 <pclose@plt+0x11af8>
   24d8c:	cmp	r1, #100	; 0x64
   24d90:	moveq	r0, #7
   24d94:	beq	24da4 <pclose@plt+0x11af8>
   24d98:	cmp	r1, #40	; 0x28
   24d9c:	moveq	r0, #5
   24da0:	movne	r0, #4
   24da4:	mov	r2, r3
   24da8:	mov	r1, ip
   24dac:	b	1c8fc <pclose@plt+0x9650>
   24db0:	cmp	r1, #0
   24db4:	moveq	r0, #1
   24db8:	beq	24da4 <pclose@plt+0x11af8>
   24dbc:	cmp	r1, #10
   24dc0:	moveq	r0, #2
   24dc4:	movne	r0, #4
   24dc8:	mov	r2, r3
   24dcc:	mov	r1, ip
   24dd0:	b	1c8fc <pclose@plt+0x9650>
   24dd4:	mov	r0, #3
   24dd8:	b	24da4 <pclose@plt+0x11af8>
   24ddc:	ldr	r3, [pc, #84]	; 24e38 <pclose@plt+0x11b8c>
   24de0:	ldr	r0, [r3]
   24de4:	cmp	r0, #0
   24de8:	bne	24e30 <pclose@plt+0x11b84>
   24dec:	push	{r4, lr}
   24df0:	ands	r2, r2, #1
   24df4:	mov	r4, r1
   24df8:	mov	r1, #1
   24dfc:	str	r1, [r3]
   24e00:	beq	24e18 <pclose@plt+0x11b6c>
   24e04:	ldr	r1, [pc, #48]	; 24e3c <pclose@plt+0x11b90>
   24e08:	mov	r2, #5
   24e0c:	bl	12b98 <dcgettext@plt>
   24e10:	mov	r1, r4
   24e14:	bl	1ca34 <pclose@plt+0x9788>
   24e18:	mov	r0, r2
   24e1c:	ldr	r1, [pc, #28]	; 24e40 <pclose@plt+0x11b94>
   24e20:	mov	r2, #5
   24e24:	bl	12b98 <dcgettext@plt>
   24e28:	mov	r1, r4
   24e2c:	bl	1ca34 <pclose@plt+0x9788>
   24e30:	mov	r0, #0
   24e34:	bx	lr
   24e38:	andeq	lr, r3, ip, ror #15
   24e3c:	andeq	ip, r2, r4, asr #6
   24e40:	andeq	ip, r2, ip, ror r3
   24e44:	push	{r4, r5, r6, r7, lr}
   24e48:	subs	r7, r2, #0
   24e4c:	mov	r6, r0
   24e50:	sub	sp, sp, #12
   24e54:	mov	r0, r1
   24e58:	beq	24e90 <pclose@plt+0x11be4>
   24e5c:	ldrsb	r2, [r1]
   24e60:	cmp	r2, #0
   24e64:	blt	24eb8 <pclose@plt+0x11c0c>
   24e68:	sub	lr, r7, #1
   24e6c:	add	lr, lr, r1
   24e70:	rsb	r4, r1, #1
   24e74:	b	24e84 <pclose@plt+0x11bd8>
   24e78:	ldrsb	ip, [r1, #1]!
   24e7c:	cmp	ip, #0
   24e80:	blt	24ebc <pclose@plt+0x11c10>
   24e84:	cmp	r1, lr
   24e88:	add	r5, r4, r1
   24e8c:	bne	24e78 <pclose@plt+0x11bcc>
   24e90:	mov	ip, #0
   24e94:	mov	r1, r0
   24e98:	mov	r2, r7
   24e9c:	mov	r0, r6
   24ea0:	str	ip, [sp]
   24ea4:	bl	12fa0 <gpgrt_write_sanitized@plt>
   24ea8:	mov	r4, r0
   24eac:	mov	r0, r4
   24eb0:	add	sp, sp, #12
   24eb4:	pop	{r4, r5, r6, r7, pc}
   24eb8:	mov	r5, #0
   24ebc:	cmp	r3, #0
   24ec0:	moveq	r2, r3
   24ec4:	ldrbne	r2, [r3]
   24ec8:	mov	r1, r7
   24ecc:	bl	237bc <pclose@plt+0x10510>
   24ed0:	mov	r1, r6
   24ed4:	mov	r7, r0
   24ed8:	bl	13030 <gpgrt_fputs@plt>
   24edc:	mov	r4, r0
   24ee0:	mov	r0, r7
   24ee4:	bl	12b50 <gcry_free@plt>
   24ee8:	cmn	r4, #1
   24eec:	movne	r4, r5
   24ef0:	mov	r0, r4
   24ef4:	add	sp, sp, #12
   24ef8:	pop	{r4, r5, r6, r7, pc}
   24efc:	push	{r4, lr}
   24f00:	mov	r1, #0
   24f04:	ldr	r0, [pc, #28]	; 24f28 <pclose@plt+0x11c7c>
   24f08:	bl	131c8 <gcry_set_log_handler@plt>
   24f0c:	mov	r1, #0
   24f10:	ldr	r0, [pc, #20]	; 24f2c <pclose@plt+0x11c80>
   24f14:	bl	131d4 <gcry_set_fatalerror_handler@plt>
   24f18:	mov	r1, #0
   24f1c:	ldr	r0, [pc, #12]	; 24f30 <pclose@plt+0x11c84>
   24f20:	pop	{r4, lr}
   24f24:	b	130d8 <gcry_set_outofcore_handler@plt>
   24f28:	andeq	r4, r2, r0, ror sp
   24f2c:	andeq	r4, r2, r8, asr #26
   24f30:	ldrdeq	r4, [r2], -ip
   24f34:	push	{r4, r5, r6, lr}
   24f38:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   24f3c:	ldr	r1, [pc, #40]	; 24f6c <pclose@plt+0x11cc0>
   24f40:	mov	r2, #5
   24f44:	subs	r4, r0, #0
   24f48:	mov	r0, #0
   24f4c:	uxthne	r4, r4
   24f50:	bl	12b98 <dcgettext@plt>
   24f54:	mov	r5, r0
   24f58:	mov	r0, r4
   24f5c:	bl	13120 <gpg_strerror@plt>
   24f60:	mov	r1, r0
   24f64:	mov	r0, r5
   24f68:	bl	1ca34 <pclose@plt+0x9788>
   24f6c:	andeq	ip, r2, r4, lsr #7
   24f70:	push	{r4, lr}
   24f74:	bl	12f88 <gcry_cipher_algo_name@plt>
   24f78:	ldr	r1, [pc, #24]	; 24f98 <pclose@plt+0x11cec>
   24f7c:	mov	r4, r0
   24f80:	bl	12a24 <strcmp@plt>
   24f84:	ldr	r3, [pc, #16]	; 24f9c <pclose@plt+0x11cf0>
   24f88:	cmp	r0, #0
   24f8c:	movne	r0, r4
   24f90:	moveq	r0, r3
   24f94:	pop	{r4, pc}
   24f98:	ldrdeq	ip, [r2], -r0
   24f9c:	andeq	ip, r2, r8, asr #7
   24fa0:	push	{r4, r5, r6, lr}
   24fa4:	subs	r5, r0, #0
   24fa8:	mov	r4, r2
   24fac:	beq	24fd8 <pclose@plt+0x11d2c>
   24fb0:	mov	r6, r1
   24fb4:	mov	r2, #5
   24fb8:	ldr	r1, [pc, #52]	; 24ff4 <pclose@plt+0x11d48>
   24fbc:	mov	r0, #0
   24fc0:	bl	12b98 <dcgettext@plt>
   24fc4:	mov	r3, r4
   24fc8:	mov	r2, r6
   24fcc:	mov	r1, r5
   24fd0:	pop	{r4, r5, r6, lr}
   24fd4:	b	1c94c <pclose@plt+0x96a0>
   24fd8:	mov	r2, #5
   24fdc:	ldr	r1, [pc, #20]	; 24ff8 <pclose@plt+0x11d4c>
   24fe0:	bl	12b98 <dcgettext@plt>
   24fe4:	mov	r2, r4
   24fe8:	ldr	r1, [pc, #12]	; 24ffc <pclose@plt+0x11d50>
   24fec:	pop	{r4, r5, r6, lr}
   24ff0:	b	1c94c <pclose@plt+0x96a0>
   24ff4:	ldrdeq	ip, [r2], -r4
   24ff8:	andeq	ip, r2, r4, lsl #8
   24ffc:	andeq	sl, r2, ip, ror #27
   25000:	cmp	r0, #0
   25004:	beq	25028 <pclose@plt+0x11d7c>
   25008:	ldrb	r3, [r0]
   2500c:	cmp	r3, #45	; 0x2d
   25010:	bxne	lr
   25014:	ldrb	r2, [r0, #1]
   25018:	ldr	r3, [pc, #16]	; 25030 <pclose@plt+0x11d84>
   2501c:	cmp	r2, #0
   25020:	moveq	r0, r3
   25024:	bx	lr
   25028:	ldr	r0, [pc]	; 25030 <pclose@plt+0x11d84>
   2502c:	bx	lr
   25030:	andeq	ip, r2, r0, asr #8
   25034:	cmp	r0, #0
   25038:	beq	2505c <pclose@plt+0x11db0>
   2503c:	ldrb	r3, [r0]
   25040:	cmp	r3, #45	; 0x2d
   25044:	bxne	lr
   25048:	ldrb	r2, [r0, #1]
   2504c:	ldr	r3, [pc, #16]	; 25064 <pclose@plt+0x11db8>
   25050:	cmp	r2, #0
   25054:	moveq	r0, r3
   25058:	bx	lr
   2505c:	ldr	r0, [pc]	; 25064 <pclose@plt+0x11db8>
   25060:	bx	lr
   25064:	andeq	ip, r2, ip, asr #8
   25068:	b	24e44 <pclose@plt+0x11b98>
   2506c:	push	{r4, lr}
   25070:	sub	sp, sp, #8
   25074:	ldr	r4, [pc, #52]	; 250b0 <pclose@plt+0x11e04>
   25078:	strb	r3, [sp]
   2507c:	mov	r3, #0
   25080:	ldr	ip, [r4]
   25084:	strb	r3, [sp, #1]
   25088:	mov	r3, sp
   2508c:	str	ip, [sp, #4]
   25090:	bl	24e44 <pclose@plt+0x11b98>
   25094:	ldr	r2, [sp, #4]
   25098:	ldr	r3, [r4]
   2509c:	cmp	r2, r3
   250a0:	bne	250ac <pclose@plt+0x11e00>
   250a4:	add	sp, sp, #8
   250a8:	pop	{r4, pc}
   250ac:	bl	12bb0 <__stack_chk_fail@plt>
   250b0:	andeq	sp, r3, r0, asr #21
   250b4:	mov	r3, #0
   250b8:	b	24e44 <pclose@plt+0x11b98>
   250bc:	push	{r4, r5, r6, lr}
   250c0:	subs	r4, r1, #0
   250c4:	mov	r5, r0
   250c8:	beq	250ec <pclose@plt+0x11e40>
   250cc:	mov	r0, r4
   250d0:	bl	12e8c <strlen@plt>
   250d4:	mov	r2, r0
   250d8:	mov	r1, r4
   250dc:	mov	r0, r5
   250e0:	mov	r3, #0
   250e4:	pop	{r4, r5, r6, lr}
   250e8:	b	24e44 <pclose@plt+0x11b98>
   250ec:	mov	r2, r4
   250f0:	ldr	r4, [pc]	; 250f8 <pclose@plt+0x11e4c>
   250f4:	b	250d8 <pclose@plt+0x11e2c>
   250f8:	muleq	r2, r8, r7
   250fc:	cmp	r2, #0
   25100:	bxeq	lr
   25104:	push	{r4, r5, r6, lr}
   25108:	sub	r6, r2, #1
   2510c:	mov	r5, r0
   25110:	add	r6, r1, r6
   25114:	sub	r4, r1, #1
   25118:	ldrb	r3, [r4, #1]!
   2511c:	mov	r1, r5
   25120:	lsr	r3, r3, #4
   25124:	cmp	r3, #9
   25128:	add	r0, r3, #55	; 0x37
   2512c:	addls	r0, r3, #48	; 0x30
   25130:	bl	13138 <putc@plt>
   25134:	ldrb	r3, [r4]
   25138:	mov	r1, r5
   2513c:	and	r3, r3, #15
   25140:	cmp	r3, #9
   25144:	add	r0, r3, #55	; 0x37
   25148:	addls	r0, r3, #48	; 0x30
   2514c:	bl	13138 <putc@plt>
   25150:	cmp	r4, r6
   25154:	bne	25118 <pclose@plt+0x11e6c>
   25158:	pop	{r4, r5, r6, pc}
   2515c:	cmp	r1, #0
   25160:	push	{r4, r5, r6, r7, r8, r9, lr}
   25164:	sub	sp, sp, #12
   25168:	beq	25328 <pclose@plt+0x1207c>
   2516c:	sub	r5, r0, #1
   25170:	sub	r1, r1, #1
   25174:	mov	r7, r2
   25178:	add	r6, r0, r1
   2517c:	mov	r2, r5
   25180:	mov	r0, #1
   25184:	b	251b8 <pclose@plt+0x11f0c>
   25188:	cmp	ip, r7
   2518c:	beq	25274 <pclose@plt+0x11fc8>
   25190:	cmp	r7, #0
   25194:	sub	r3, ip, #92	; 0x5c
   25198:	clz	r3, r3
   2519c:	lsr	r3, r3, #5
   251a0:	moveq	r3, #0
   251a4:	cmp	r3, #0
   251a8:	addeq	r0, r0, #1
   251ac:	bne	25288 <pclose@plt+0x11fdc>
   251b0:	cmp	r2, r6
   251b4:	beq	251e0 <pclose@plt+0x11f34>
   251b8:	ldrb	ip, [r2, #1]!
   251bc:	cmp	ip, #127	; 0x7f
   251c0:	cmpne	ip, #31
   251c4:	bhi	25188 <pclose@plt+0x11edc>
   251c8:	cmp	ip, #13
   251cc:	cmpne	ip, #10
   251d0:	bne	25274 <pclose@plt+0x11fc8>
   251d4:	cmp	r2, r6
   251d8:	add	r0, r0, #2
   251dc:	bne	251b8 <pclose@plt+0x11f0c>
   251e0:	bl	129d0 <gcry_malloc@plt>
   251e4:	ldr	r9, [pc, #336]	; 2533c <pclose@plt+0x12090>
   251e8:	mov	r8, r0
   251ec:	mov	r4, r0
   251f0:	b	25228 <pclose@plt+0x11f7c>
   251f4:	cmp	r3, r7
   251f8:	beq	252d4 <pclose@plt+0x12028>
   251fc:	cmp	r7, #0
   25200:	sub	r2, r3, #92	; 0x5c
   25204:	clz	r2, r2
   25208:	lsr	r2, r2, #5
   2520c:	moveq	r2, #0
   25210:	cmp	r2, #0
   25214:	strbeq	r3, [r4]
   25218:	moveq	r4, r0
   2521c:	bne	252d4 <pclose@plt+0x12028>
   25220:	cmp	r5, r6
   25224:	beq	25260 <pclose@plt+0x11fb4>
   25228:	ldrb	r3, [r5, #1]!
   2522c:	add	r0, r4, #1
   25230:	cmp	r3, #127	; 0x7f
   25234:	cmpne	r3, #31
   25238:	bhi	251f4 <pclose@plt+0x11f48>
   2523c:	mov	r2, #92	; 0x5c
   25240:	cmp	r3, #10
   25244:	strb	r2, [r4]
   25248:	bne	25290 <pclose@plt+0x11fe4>
   2524c:	mov	r3, #110	; 0x6e
   25250:	cmp	r5, r6
   25254:	strb	r3, [r4, #1]
   25258:	add	r4, r4, #2
   2525c:	bne	25228 <pclose@plt+0x11f7c>
   25260:	mov	r3, #0
   25264:	mov	r0, r8
   25268:	strb	r3, [r4]
   2526c:	add	sp, sp, #12
   25270:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25274:	and	r1, ip, #247	; 0xf7
   25278:	sub	r3, ip, #11
   2527c:	cmp	r1, #0
   25280:	cmpne	r3, #1
   25284:	bls	251d4 <pclose@plt+0x11f28>
   25288:	add	r0, r0, #5
   2528c:	b	251b0 <pclose@plt+0x11f04>
   25290:	cmp	r3, #13
   25294:	moveq	r3, #114	; 0x72
   25298:	strbeq	r3, [r4, #1]
   2529c:	addeq	r4, r4, #2
   252a0:	beq	25220 <pclose@plt+0x11f74>
   252a4:	cmp	r3, #12
   252a8:	beq	252f8 <pclose@plt+0x1204c>
   252ac:	cmp	r3, #11
   252b0:	beq	25308 <pclose@plt+0x1205c>
   252b4:	cmp	r3, #8
   252b8:	beq	25318 <pclose@plt+0x1206c>
   252bc:	cmp	r3, #0
   252c0:	bne	252dc <pclose@plt+0x12030>
   252c4:	mov	r3, #48	; 0x30
   252c8:	strb	r3, [r4, #1]
   252cc:	add	r4, r4, #2
   252d0:	b	25220 <pclose@plt+0x11f74>
   252d4:	mov	r2, #92	; 0x5c
   252d8:	strb	r2, [r4]
   252dc:	str	r3, [sp]
   252e0:	mvn	r2, #0
   252e4:	mov	r3, r9
   252e8:	mov	r1, #1
   252ec:	add	r4, r4, #4
   252f0:	bl	12f34 <__sprintf_chk@plt>
   252f4:	b	25220 <pclose@plt+0x11f74>
   252f8:	mov	r3, #102	; 0x66
   252fc:	strb	r3, [r4, #1]
   25300:	add	r4, r4, #2
   25304:	b	25220 <pclose@plt+0x11f74>
   25308:	mov	r3, #118	; 0x76
   2530c:	strb	r3, [r4, #1]
   25310:	add	r4, r4, #2
   25314:	b	25220 <pclose@plt+0x11f74>
   25318:	mov	r3, #98	; 0x62
   2531c:	strb	r3, [r4, #1]
   25320:	add	r4, r4, #2
   25324:	b	25220 <pclose@plt+0x11f74>
   25328:	mov	r0, #1
   2532c:	bl	129d0 <gcry_malloc@plt>
   25330:	mov	r4, r0
   25334:	mov	r8, r0
   25338:	b	25260 <pclose@plt+0x11fb4>
   2533c:	muleq	r2, r8, r6
   25340:	push	{r4, lr}
   25344:	bl	2515c <pclose@plt+0x11eb0>
   25348:	cmp	r0, #0
   2534c:	popne	{r4, pc}
   25350:	bl	24f34 <pclose@plt+0x11c88>
   25354:	push	{r4, r5, r6, r7, lr}
   25358:	mov	r6, r0
   2535c:	ldr	lr, [pc, #380]	; 254e0 <pclose@plt+0x12234>
   25360:	mov	r7, r1
   25364:	sub	sp, sp, #44	; 0x2c
   25368:	ldm	lr!, {r0, r1, r2, r3}
   2536c:	add	ip, sp, #4
   25370:	ldr	r5, [pc, #364]	; 254e4 <pclose@plt+0x12238>
   25374:	stmia	ip!, {r0, r1, r2, r3}
   25378:	ldm	lr, {r0, r1}
   2537c:	ldr	r3, [r5]
   25380:	stm	ip, {r0, r1}
   25384:	mov	r0, r6
   25388:	str	r3, [sp, #36]	; 0x24
   2538c:	bl	27128 <pclose@plt+0x13e7c>
   25390:	clz	r3, r7
   25394:	lsr	r3, r3, #5
   25398:	cmp	r0, #0
   2539c:	movne	r4, #1
   253a0:	moveq	r4, r3
   253a4:	cmp	r4, #0
   253a8:	movne	r4, #0
   253ac:	beq	253cc <pclose@plt+0x12120>
   253b0:	ldr	r2, [sp, #36]	; 0x24
   253b4:	ldr	r3, [r5]
   253b8:	mov	r0, r4
   253bc:	cmp	r2, r3
   253c0:	bne	254dc <pclose@plt+0x12230>
   253c4:	add	sp, sp, #44	; 0x2c
   253c8:	pop	{r4, r5, r6, r7, pc}
   253cc:	mov	r0, r6
   253d0:	bl	2716c <pclose@plt+0x13ec0>
   253d4:	subs	r6, r0, #0
   253d8:	beq	254b8 <pclose@plt+0x1220c>
   253dc:	mov	r3, r4
   253e0:	mov	r2, #1
   253e4:	mov	r1, #3
   253e8:	bl	272d8 <pclose@plt+0x1402c>
   253ec:	mov	r1, sp
   253f0:	mov	r0, r6
   253f4:	bl	28978 <pclose@plt+0x156cc>
   253f8:	cmp	r0, #6
   253fc:	sbcs	r3, r1, #0
   25400:	bge	25414 <pclose@plt+0x12168>
   25404:	ldr	r4, [sp]
   25408:	cmp	r4, #0
   2540c:	streq	r4, [r7]
   25410:	beq	254a4 <pclose@plt+0x121f8>
   25414:	add	r1, sp, #28
   25418:	mov	r2, #6
   2541c:	mov	r0, r6
   25420:	bl	27978 <pclose@plt+0x146cc>
   25424:	cmn	r0, #1
   25428:	beq	254cc <pclose@plt+0x12220>
   2542c:	ldr	r2, [sp, #4]
   25430:	add	r1, sp, #8
   25434:	add	r0, sp, #28
   25438:	bl	12b5c <memcmp@plt>
   2543c:	cmp	r0, #0
   25440:	beq	25498 <pclose@plt+0x121ec>
   25444:	ldr	r2, [sp, #12]
   25448:	add	r1, sp, #16
   2544c:	add	r0, sp, #28
   25450:	bl	12b5c <memcmp@plt>
   25454:	cmp	r0, #0
   25458:	beq	25498 <pclose@plt+0x121ec>
   2545c:	add	r0, sp, #28
   25460:	ldr	r2, [sp, #20]
   25464:	add	r1, sp, #24
   25468:	bl	12b5c <memcmp@plt>
   2546c:	cmp	r0, #0
   25470:	beq	25498 <pclose@plt+0x121ec>
   25474:	ldrb	r3, [sp, #28]
   25478:	tst	r3, #128	; 0x80
   2547c:	beq	254b0 <pclose@plt+0x12204>
   25480:	tst	r3, #64	; 0x40
   25484:	asreq	r3, r3, #2
   25488:	andne	r3, r3, #63	; 0x3f
   2548c:	andeq	r3, r3, #15
   25490:	cmp	r3, #8
   25494:	bne	254b0 <pclose@plt+0x12204>
   25498:	mov	r4, #1
   2549c:	mov	r3, #0
   254a0:	str	r3, [r7]
   254a4:	mov	r0, r6
   254a8:	bl	26e80 <pclose@plt+0x13bd4>
   254ac:	b	253b0 <pclose@plt+0x12104>
   254b0:	mov	r4, #0
   254b4:	b	254a4 <pclose@plt+0x121f8>
   254b8:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   254bc:	mov	r4, r6
   254c0:	uxth	r0, r0
   254c4:	str	r0, [r7]
   254c8:	b	253b0 <pclose@plt+0x12104>
   254cc:	ldr	r3, [r6, #56]	; 0x38
   254d0:	mov	r4, #0
   254d4:	str	r3, [r7]
   254d8:	b	254a4 <pclose@plt+0x121f8>
   254dc:	bl	12bb0 <__stack_chk_fail@plt>
   254e0:	andeq	ip, r2, r4, lsl r3
   254e4:	andeq	sp, r3, r0, asr #21
   254e8:	push	{r4, r5, r6, r7, r8, lr}
   254ec:	mov	r5, r0
   254f0:	ldr	r7, [pc, #88]	; 25550 <pclose@plt+0x122a4>
   254f4:	mov	r6, r1
   254f8:	b	25520 <pclose@plt+0x12274>
   254fc:	bl	12f28 <strncasecmp@plt>
   25500:	cmp	r0, #0
   25504:	beq	25548 <pclose@plt+0x1229c>
   25508:	ldrb	r0, [r5, r4]!
   2550c:	cmp	r0, #124	; 0x7c
   25510:	ldrbeq	r0, [r5, #1]
   25514:	addeq	r5, r5, #1
   25518:	cmp	r0, #0
   2551c:	popeq	{r4, r5, r6, r7, r8, pc}
   25520:	mov	r1, r7
   25524:	mov	r0, r5
   25528:	bl	12a54 <strcspn@plt>
   2552c:	mov	r1, r6
   25530:	subs	r4, r0, #0
   25534:	mov	r2, r4
   25538:	mov	r0, r5
   2553c:	bne	254fc <pclose@plt+0x12250>
   25540:	mov	r0, r4
   25544:	pop	{r4, r5, r6, r7, r8, pc}
   25548:	mov	r0, #1
   2554c:	pop	{r4, r5, r6, r7, r8, pc}
   25550:	andeq	ip, r2, r4, asr r4
   25554:	push	{r4, r5, r6, lr}
   25558:	sub	sp, sp, #32
   2555c:	ldr	r4, [pc, #196]	; 25628 <pclose@plt+0x1237c>
   25560:	cmp	r1, #0
   25564:	cmpne	r0, #0
   25568:	ldr	r3, [r4]
   2556c:	str	r3, [sp, #28]
   25570:	bne	25590 <pclose@plt+0x122e4>
   25574:	mov	r0, #0
   25578:	ldr	r2, [sp, #28]
   2557c:	ldr	r3, [r4]
   25580:	cmp	r2, r3
   25584:	bne	25624 <pclose@plt+0x12378>
   25588:	add	sp, sp, #32
   2558c:	pop	{r4, r5, r6, pc}
   25590:	mov	r5, r1
   25594:	add	r3, sp, #12
   25598:	add	r2, sp, #8
   2559c:	add	r1, sp, #4
   255a0:	bl	24be8 <pclose@plt+0x1193c>
   255a4:	subs	r6, r0, #0
   255a8:	beq	25574 <pclose@plt+0x122c8>
   255ac:	mov	r0, r5
   255b0:	add	r3, sp, #24
   255b4:	add	r2, sp, #20
   255b8:	add	r1, sp, #16
   255bc:	bl	24be8 <pclose@plt+0x1193c>
   255c0:	cmp	r0, #0
   255c4:	beq	25574 <pclose@plt+0x122c8>
   255c8:	ldr	r2, [sp, #4]
   255cc:	ldr	r3, [sp, #16]
   255d0:	cmp	r2, r3
   255d4:	ble	255e0 <pclose@plt+0x12334>
   255d8:	mov	r0, #1
   255dc:	b	25578 <pclose@plt+0x122cc>
   255e0:	bne	25574 <pclose@plt+0x122c8>
   255e4:	ldr	r2, [sp, #8]
   255e8:	ldr	r3, [sp, #20]
   255ec:	cmp	r2, r3
   255f0:	bgt	255d8 <pclose@plt+0x1232c>
   255f4:	bne	25574 <pclose@plt+0x122c8>
   255f8:	ldr	r2, [sp, #12]
   255fc:	ldr	r3, [sp, #24]
   25600:	cmp	r2, r3
   25604:	bgt	255d8 <pclose@plt+0x1232c>
   25608:	bne	25574 <pclose@plt+0x122c8>
   2560c:	mov	r1, r0
   25610:	mov	r0, r6
   25614:	bl	12a24 <strcmp@plt>
   25618:	cmp	r0, #0
   2561c:	bge	255d8 <pclose@plt+0x1232c>
   25620:	b	25574 <pclose@plt+0x122c8>
   25624:	bl	12bb0 <__stack_chk_fail@plt>
   25628:	andeq	sp, r3, r0, asr #21
   2562c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25630:	subs	r5, r0, #0
   25634:	mov	r7, r1
   25638:	mov	r6, r2
   2563c:	beq	257d4 <pclose@plt+0x12528>
   25640:	ldrb	r4, [r5]
   25644:	cmp	r4, #32
   25648:	cmpne	r4, #9
   2564c:	bne	25660 <pclose@plt+0x123b4>
   25650:	ldrb	r4, [r5, #1]!
   25654:	cmp	r4, #9
   25658:	cmpne	r4, #32
   2565c:	beq	25650 <pclose@plt+0x123a4>
   25660:	cmp	r4, #45	; 0x2d
   25664:	beq	258a4 <pclose@plt+0x125f8>
   25668:	ldr	r1, [pc, #584]	; 258b8 <pclose@plt+0x1260c>
   2566c:	mov	r0, r5
   25670:	bl	12a24 <strcmp@plt>
   25674:	cmp	r0, #0
   25678:	beq	25690 <pclose@plt+0x123e4>
   2567c:	ldr	r1, [pc, #568]	; 258bc <pclose@plt+0x12610>
   25680:	mov	r0, r5
   25684:	bl	12a24 <strcmp@plt>
   25688:	cmp	r0, #0
   2568c:	bne	256ec <pclose@plt+0x12440>
   25690:	ldr	r0, [pc, #552]	; 258c0 <pclose@plt+0x12614>
   25694:	bl	1c94c <pclose@plt+0x96a0>
   25698:	ldr	r2, [r6, #4]
   2569c:	cmp	r2, #0
   256a0:	beq	256cc <pclose@plt+0x12420>
   256a4:	ldr	r5, [pc, #536]	; 258c4 <pclose@plt+0x12618>
   256a8:	add	r4, r6, #8
   256ac:	ldr	r1, [r4, #-8]
   256b0:	mov	r6, r4
   256b4:	add	r4, r4, #8
   256b8:	mov	r0, r5
   256bc:	bl	1c94c <pclose@plt+0x96a0>
   256c0:	ldr	r2, [r4, #-4]
   256c4:	cmp	r2, #0
   256c8:	bne	256ac <pclose@plt+0x12400>
   256cc:	ldr	r3, [r6]
   256d0:	cmp	r3, #77	; 0x4d
   256d4:	bne	2579c <pclose@plt+0x124f0>
   256d8:	ldr	r0, [r7]
   256dc:	str	r0, [r7]
   256e0:	mov	r7, #0
   256e4:	mov	r0, r7
   256e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   256ec:	sub	r4, r4, #48	; 0x30
   256f0:	cmp	r4, #9
   256f4:	bls	257a4 <pclose@plt+0x124f8>
   256f8:	mov	r0, r5
   256fc:	ldr	r1, [pc, #452]	; 258c8 <pclose@plt+0x1261c>
   25700:	bl	18da4 <pclose@plt+0x5af8>
   25704:	subs	r8, r0, #0
   25708:	beq	25894 <pclose@plt+0x125e8>
   2570c:	ldr	fp, [r8]
   25710:	cmp	fp, #0
   25714:	beq	2589c <pclose@plt+0x125f0>
   25718:	ldr	r9, [pc, #428]	; 258cc <pclose@plt+0x12620>
   2571c:	mov	r4, r8
   25720:	mov	r5, #0
   25724:	b	25734 <pclose@plt+0x12488>
   25728:	ldr	fp, [r4, #4]!
   2572c:	cmp	fp, #0
   25730:	beq	25788 <pclose@plt+0x124dc>
   25734:	ldrb	r3, [fp]
   25738:	cmp	r3, #0
   2573c:	beq	25728 <pclose@plt+0x1247c>
   25740:	ldr	r1, [r6, #4]
   25744:	cmp	r1, #0
   25748:	beq	25838 <pclose@plt+0x1258c>
   2574c:	mov	sl, r6
   25750:	b	25764 <pclose@plt+0x124b8>
   25754:	add	sl, sl, #8
   25758:	ldr	r1, [sl, #4]
   2575c:	cmp	r1, #0
   25760:	beq	25838 <pclose@plt+0x1258c>
   25764:	mov	r0, fp
   25768:	bl	12a24 <strcmp@plt>
   2576c:	cmp	r0, #0
   25770:	bne	25754 <pclose@plt+0x124a8>
   25774:	ldr	fp, [r4, #4]!
   25778:	ldr	r3, [sl]
   2577c:	cmp	fp, #0
   25780:	orr	r5, r5, r3
   25784:	bne	25734 <pclose@plt+0x12488>
   25788:	mov	r0, r8
   2578c:	bl	12b50 <gcry_free@plt>
   25790:	ldr	r0, [r7]
   25794:	orr	r0, r5, r0
   25798:	b	256dc <pclose@plt+0x12430>
   2579c:	mov	r0, #0
   257a0:	bl	12e44 <exit@plt>
   257a4:	bl	12f10 <__errno_location@plt>
   257a8:	mov	r2, #0
   257ac:	mov	r1, r2
   257b0:	mov	r4, r0
   257b4:	mov	r0, r5
   257b8:	str	r2, [r4]
   257bc:	bl	12e74 <strtoul@plt>
   257c0:	cmn	r0, #1
   257c4:	beq	25888 <pclose@plt+0x125dc>
   257c8:	ldr	r3, [r7]
   257cc:	orr	r0, r0, r3
   257d0:	b	256dc <pclose@plt+0x12430>
   257d4:	cmp	r1, #0
   257d8:	beq	256e4 <pclose@plt+0x12438>
   257dc:	ldr	r0, [pc, #236]	; 258d0 <pclose@plt+0x12624>
   257e0:	bl	1c94c <pclose@plt+0x96a0>
   257e4:	ldr	r1, [r6, #4]
   257e8:	cmp	r1, #0
   257ec:	addne	r6, r6, #8
   257f0:	ldrne	r4, [pc, #220]	; 258d4 <pclose@plt+0x12628>
   257f4:	bne	2580c <pclose@plt+0x12560>
   257f8:	b	25828 <pclose@plt+0x1257c>
   257fc:	add	r6, r6, #8
   25800:	ldr	r1, [r6, #-4]
   25804:	cmp	r1, #0
   25808:	beq	25828 <pclose@plt+0x1257c>
   2580c:	ldr	r2, [r7]
   25810:	ldr	r3, [r6, #-8]
   25814:	tst	r2, r3
   25818:	beq	257fc <pclose@plt+0x12550>
   2581c:	mov	r0, r4
   25820:	bl	1cbc4 <pclose@plt+0x9918>
   25824:	b	257fc <pclose@plt+0x12550>
   25828:	ldr	r0, [pc, #168]	; 258d8 <pclose@plt+0x1262c>
   2582c:	bl	1cbc4 <pclose@plt+0x9918>
   25830:	mov	r7, #0
   25834:	b	256e4 <pclose@plt+0x12438>
   25838:	mov	r1, r9
   2583c:	mov	r0, fp
   25840:	bl	12a24 <strcmp@plt>
   25844:	cmp	r0, #0
   25848:	streq	r0, [r7]
   2584c:	moveq	r5, r0
   25850:	beq	25728 <pclose@plt+0x1247c>
   25854:	mov	r0, fp
   25858:	ldr	r1, [pc, #124]	; 258dc <pclose@plt+0x12630>
   2585c:	bl	12a24 <strcmp@plt>
   25860:	cmp	r0, #0
   25864:	mvneq	r5, #0
   25868:	beq	25728 <pclose@plt+0x1247c>
   2586c:	mov	r2, #5
   25870:	ldr	r1, [pc, #104]	; 258e0 <pclose@plt+0x12634>
   25874:	mov	r0, #0
   25878:	bl	12b98 <dcgettext@plt>
   2587c:	ldr	r1, [r4]
   25880:	bl	1c94c <pclose@plt+0x96a0>
   25884:	b	25728 <pclose@plt+0x1247c>
   25888:	ldr	r3, [r4]
   2588c:	cmp	r3, #34	; 0x22
   25890:	bne	256dc <pclose@plt+0x12430>
   25894:	mvn	r7, #0
   25898:	b	256e4 <pclose@plt+0x12438>
   2589c:	mov	r5, fp
   258a0:	b	25788 <pclose@plt+0x124dc>
   258a4:	bl	12f10 <__errno_location@plt>
   258a8:	mov	r3, #22
   258ac:	mvn	r7, #0
   258b0:	str	r3, [r0]
   258b4:	b	256e4 <pclose@plt+0x12438>
   258b8:	ldrdeq	r9, [r2], -r0
   258bc:	andeq	r9, r2, r4, asr pc
   258c0:	andeq	ip, r2, r4, ror r4
   258c4:	andeq	ip, r2, ip, lsl #9
   258c8:	muleq	r2, r8, r4
   258cc:	andeq	ip, r2, r4, asr #9
   258d0:	andeq	ip, r2, r8, asr r4
   258d4:	andeq	ip, r2, r0, ror r4
   258d8:	strdeq	ip, [r2], -r0
   258dc:	muleq	r2, ip, r4
   258e0:	andeq	ip, r2, r0, lsr #9
   258e4:	push	{r4, r5, r6, lr}
   258e8:	sub	sp, sp, #16
   258ec:	ldr	r5, [pc, #244]	; 259e8 <pclose@plt+0x1273c>
   258f0:	ldr	r3, [r0]
   258f4:	mov	r4, r0
   258f8:	ldr	r2, [r5]
   258fc:	cmp	r3, #3
   25900:	str	r2, [sp, #12]
   25904:	beq	25990 <pclose@plt+0x126e4>
   25908:	cmp	r3, #2
   2590c:	bne	259e0 <pclose@plt+0x12734>
   25910:	ldr	r6, [r0, #60]	; 0x3c
   25914:	cmp	r6, #0
   25918:	beq	259d8 <pclose@plt+0x1272c>
   2591c:	ldr	r2, [r0, #44]	; 0x2c
   25920:	add	r3, sp, #8
   25924:	str	r3, [sp]
   25928:	str	r2, [sp, #8]
   2592c:	ldr	r3, [r0, #48]	; 0x30
   25930:	ldr	r2, [r0, #76]	; 0x4c
   25934:	mov	r1, #4
   25938:	ldr	r0, [r0, #64]	; 0x40
   2593c:	blx	r6
   25940:	subs	r3, r0, #0
   25944:	strne	r3, [r4, #56]	; 0x38
   25948:	beq	25970 <pclose@plt+0x126c4>
   2594c:	mov	r2, #0
   25950:	str	r2, [r4, #44]	; 0x2c
   25954:	ldr	r1, [sp, #12]
   25958:	ldr	r2, [r5]
   2595c:	mov	r0, r3
   25960:	cmp	r1, r2
   25964:	bne	259d4 <pclose@plt+0x12728>
   25968:	add	sp, sp, #16
   2596c:	pop	{r4, r5, r6, pc}
   25970:	ldr	r1, [r4, #44]	; 0x2c
   25974:	ldr	r2, [sp, #8]
   25978:	cmp	r1, r2
   2597c:	beq	2594c <pclose@plt+0x126a0>
   25980:	ldr	r0, [pc, #100]	; 259ec <pclose@plt+0x12740>
   25984:	bl	1c94c <pclose@plt+0x96a0>
   25988:	mov	r3, #63	; 0x3f
   2598c:	b	2594c <pclose@plt+0x126a0>
   25990:	ldr	r3, [pc, #88]	; 259f0 <pclose@plt+0x12744>
   25994:	ldr	r1, [r0, #36]	; 0x24
   25998:	ldr	r3, [r3]
   2599c:	add	r6, r1, #8192	; 0x2000
   259a0:	cmp	r3, #0
   259a4:	bne	259c4 <pclose@plt+0x12718>
   259a8:	mov	r1, r6
   259ac:	ldr	r0, [r4, #48]	; 0x30
   259b0:	bl	12d6c <gcry_xrealloc@plt>
   259b4:	str	r6, [r4, #36]	; 0x24
   259b8:	mov	r3, #0
   259bc:	str	r0, [r4, #48]	; 0x30
   259c0:	b	25954 <pclose@plt+0x126a8>
   259c4:	mov	r2, r6
   259c8:	ldr	r0, [pc, #36]	; 259f4 <pclose@plt+0x12748>
   259cc:	bl	1cafc <pclose@plt+0x9850>
   259d0:	b	259a8 <pclose@plt+0x126fc>
   259d4:	bl	12bb0 <__stack_chk_fail@plt>
   259d8:	ldr	r0, [pc, #24]	; 259f8 <pclose@plt+0x1274c>
   259dc:	bl	1cab8 <pclose@plt+0x980c>
   259e0:	ldr	r0, [pc, #20]	; 259fc <pclose@plt+0x12750>
   259e4:	bl	1cab8 <pclose@plt+0x980c>
   259e8:	andeq	sp, r3, r0, asr #21
   259ec:	andeq	ip, r2, r8, asr #12
   259f0:	andeq	lr, r3, ip, lsr r8
   259f4:	andeq	ip, r2, r8, ror #11
   259f8:	andeq	ip, r2, ip, lsr #12
   259fc:	andeq	ip, r2, r0, lsl r6
   25a00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25a04:	cmp	r1, #3
   25a08:	ldr	r8, [sp, #32]
   25a0c:	mov	r6, r0
   25a10:	mov	r9, r3
   25a14:	ldr	r5, [r0]
   25a18:	ldr	r4, [r8]
   25a1c:	beq	25ad4 <pclose@plt+0x12828>
   25a20:	cmp	r1, #4
   25a24:	beq	25a4c <pclose@plt+0x127a0>
   25a28:	cmp	r1, #1
   25a2c:	beq	25ba0 <pclose@plt+0x128f4>
   25a30:	cmp	r1, #5
   25a34:	beq	25bec <pclose@plt+0x12940>
   25a38:	cmp	r1, #2
   25a3c:	movne	r7, #0
   25a40:	beq	25b40 <pclose@plt+0x12894>
   25a44:	mov	r0, r7
   25a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a4c:	cmp	r4, #0
   25a50:	moveq	r7, r4
   25a54:	beq	25ac8 <pclose@plt+0x1281c>
   25a58:	mov	sl, r3
   25a5c:	mov	r2, r4
   25a60:	mov	r1, sl
   25a64:	mov	r0, r5
   25a68:	bl	12fc4 <write@plt>
   25a6c:	cmn	r0, #1
   25a70:	beq	25a90 <pclose@plt+0x127e4>
   25a74:	cmp	r0, #0
   25a78:	ble	25a5c <pclose@plt+0x127b0>
   25a7c:	subs	r4, r4, r0
   25a80:	add	sl, sl, r0
   25a84:	bne	25a5c <pclose@plt+0x127b0>
   25a88:	mov	r7, r4
   25a8c:	b	25ac4 <pclose@plt+0x12818>
   25a90:	bl	12f10 <__errno_location@plt>
   25a94:	ldr	r3, [r0]
   25a98:	cmp	r3, #4
   25a9c:	beq	25a5c <pclose@plt+0x127b0>
   25aa0:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   25aa4:	uxth	r7, r0
   25aa8:	bl	12f10 <__errno_location@plt>
   25aac:	ldr	r0, [r0]
   25ab0:	bl	12db4 <strerror@plt>
   25ab4:	add	r1, r6, #20
   25ab8:	mov	r2, r0
   25abc:	ldr	r0, [pc, #552]	; 25cec <pclose@plt+0x12a40>
   25ac0:	bl	1c9b0 <pclose@plt+0x9704>
   25ac4:	sub	r4, sl, r9
   25ac8:	str	r4, [r8]
   25acc:	mov	r0, r7
   25ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25ad4:	cmp	r4, #0
   25ad8:	beq	25cd8 <pclose@plt+0x12a2c>
   25adc:	ldr	r7, [r0, #12]
   25ae0:	cmp	r7, #0
   25ae4:	movne	r3, #0
   25ae8:	strne	r3, [r8]
   25aec:	mvnne	r7, #0
   25af0:	beq	25b0c <pclose@plt+0x12860>
   25af4:	b	25a44 <pclose@plt+0x12798>
   25af8:	bl	12f10 <__errno_location@plt>
   25afc:	ldr	r3, [r0]
   25b00:	mov	sl, r0
   25b04:	cmp	r3, #4
   25b08:	bne	25bb8 <pclose@plt+0x1290c>
   25b0c:	mov	r2, r4
   25b10:	mov	r1, r9
   25b14:	mov	r0, r5
   25b18:	bl	12a78 <read@plt>
   25b1c:	cmn	r0, #1
   25b20:	beq	25af8 <pclose@plt+0x1284c>
   25b24:	cmp	r0, #0
   25b28:	mvneq	r7, #0
   25b2c:	moveq	r3, #1
   25b30:	streq	r3, [r6, #12]
   25b34:	str	r0, [r8]
   25b38:	mov	r0, r7
   25b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25b40:	cmp	r5, #1
   25b44:	bls	25b90 <pclose@plt+0x128e4>
   25b48:	ldr	r7, [pc, #416]	; 25cf0 <pclose@plt+0x12a44>
   25b4c:	ldr	r3, [r7]
   25b50:	cmp	r3, #0
   25b54:	bne	25c74 <pclose@plt+0x129c8>
   25b58:	ldr	r3, [r6, #4]
   25b5c:	cmp	r3, #0
   25b60:	bne	25b90 <pclose@plt+0x128e4>
   25b64:	ldr	r3, [r6, #8]
   25b68:	cmp	r3, #0
   25b6c:	beq	25c04 <pclose@plt+0x12958>
   25b70:	mov	r0, r5
   25b74:	bl	1324c <close@plt>
   25b78:	ldr	r3, [r7]
   25b7c:	cmp	r3, #0
   25b80:	beq	25b90 <pclose@plt+0x128e4>
   25b84:	mov	r1, r5
   25b88:	ldr	r0, [pc, #356]	; 25cf4 <pclose@plt+0x12a48>
   25b8c:	bl	1cafc <pclose@plt+0x9850>
   25b90:	mov	r0, r6
   25b94:	bl	12b50 <gcry_free@plt>
   25b98:	mov	r7, #0
   25b9c:	b	25a44 <pclose@plt+0x12798>
   25ba0:	mov	r7, #0
   25ba4:	str	r7, [r0, #12]
   25ba8:	str	r7, [r0, #4]
   25bac:	str	r7, [r0, #8]
   25bb0:	mov	r0, r7
   25bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25bb8:	cmp	r3, #32
   25bbc:	moveq	r0, #0
   25bc0:	beq	25b34 <pclose@plt+0x12888>
   25bc4:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   25bc8:	uxth	r7, r0
   25bcc:	ldr	r0, [sl]
   25bd0:	bl	12db4 <strerror@plt>
   25bd4:	add	r1, r6, #20
   25bd8:	mov	r2, r0
   25bdc:	ldr	r0, [pc, #276]	; 25cf8 <pclose@plt+0x12a4c>
   25be0:	bl	1c9b0 <pclose@plt+0x9704>
   25be4:	mov	r0, #0
   25be8:	b	25b34 <pclose@plt+0x12888>
   25bec:	mov	r2, r4
   25bf0:	mov	r0, r3
   25bf4:	ldr	r1, [pc, #256]	; 25cfc <pclose@plt+0x12a50>
   25bf8:	bl	182e0 <pclose@plt+0x5034>
   25bfc:	mov	r7, #0
   25c00:	b	25a44 <pclose@plt+0x12798>
   25c04:	ldrb	r3, [r6, #20]
   25c08:	cmp	r3, #0
   25c0c:	beq	25b70 <pclose@plt+0x128c4>
   25c10:	ldr	r9, [pc, #232]	; 25d00 <pclose@plt+0x12a54>
   25c14:	add	r8, r6, #20
   25c18:	ldr	r4, [r9]
   25c1c:	cmp	r4, #0
   25c20:	bne	25c34 <pclose@plt+0x12988>
   25c24:	b	25c88 <pclose@plt+0x129dc>
   25c28:	ldr	r4, [r4]
   25c2c:	cmp	r4, #0
   25c30:	beq	25c88 <pclose@plt+0x129dc>
   25c34:	ldr	r3, [r4, #4]
   25c38:	cmn	r3, #1
   25c3c:	bne	25c28 <pclose@plt+0x1297c>
   25c40:	mov	r1, r8
   25c44:	add	r0, r4, #8
   25c48:	bl	12a24 <strcmp@plt>
   25c4c:	cmp	r0, #0
   25c50:	bne	25c28 <pclose@plt+0x1297c>
   25c54:	ldr	r3, [r7]
   25c58:	str	r5, [r4, #4]
   25c5c:	cmp	r3, #0
   25c60:	beq	25b90 <pclose@plt+0x128e4>
   25c64:	mov	r1, r8
   25c68:	ldr	r0, [pc, #148]	; 25d04 <pclose@plt+0x12a58>
   25c6c:	bl	1cafc <pclose@plt+0x9850>
   25c70:	b	25b90 <pclose@plt+0x128e4>
   25c74:	add	r1, r0, #20
   25c78:	mov	r2, r5
   25c7c:	ldr	r0, [pc, #132]	; 25d08 <pclose@plt+0x12a5c>
   25c80:	bl	1cafc <pclose@plt+0x9850>
   25c84:	b	25b58 <pclose@plt+0x128ac>
   25c88:	ldr	r3, [r7]
   25c8c:	cmp	r3, #0
   25c90:	bne	25cc8 <pclose@plt+0x12a1c>
   25c94:	mov	r0, r8
   25c98:	bl	12e8c <strlen@plt>
   25c9c:	add	r1, r0, #12
   25ca0:	mov	r0, #1
   25ca4:	bl	131bc <gcry_xcalloc@plt>
   25ca8:	mov	r1, r8
   25cac:	mov	r4, r0
   25cb0:	add	r0, r0, #8
   25cb4:	bl	12cdc <strcpy@plt>
   25cb8:	ldr	r3, [r9]
   25cbc:	str	r4, [r9]
   25cc0:	stm	r4, {r3, r5}
   25cc4:	b	25b90 <pclose@plt+0x128e4>
   25cc8:	mov	r1, r8
   25ccc:	ldr	r0, [pc, #56]	; 25d0c <pclose@plt+0x12a60>
   25cd0:	bl	1cafc <pclose@plt+0x9850>
   25cd4:	b	25c94 <pclose@plt+0x129e8>
   25cd8:	ldr	r3, [pc, #48]	; 25d10 <pclose@plt+0x12a64>
   25cdc:	ldr	r2, [pc, #48]	; 25d14 <pclose@plt+0x12a68>
   25ce0:	ldr	r1, [pc, #48]	; 25d18 <pclose@plt+0x12a6c>
   25ce4:	ldr	r0, [pc, #48]	; 25d1c <pclose@plt+0x12a70>
   25ce8:	bl	13294 <__assert_fail@plt>
   25cec:	andeq	ip, r2, ip, lsr #14
   25cf0:	andeq	lr, r3, ip, lsr r8
   25cf4:	andeq	ip, r2, r0, asr #13
   25cf8:	andeq	ip, r2, r4, lsl #13
   25cfc:	muleq	r2, r8, r6
   25d00:	strdeq	lr, [r3], -r0
   25d04:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25d08:	andeq	ip, r2, r8, lsr #13
   25d0c:	andeq	ip, r2, r4, lsl #14
   25d10:	andeq	ip, r2, ip, asr #9
   25d14:	andeq	r0, r0, r6, asr #3
   25d18:	andeq	ip, r2, ip, ror #12
   25d1c:	andeq	ip, r2, ip, ror #29
   25d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d24:	sub	sp, sp, #20
   25d28:	ldr	r6, [pc, #512]	; 25f30 <pclose@plt+0x12c84>
   25d2c:	ldr	r8, [sp, #56]	; 0x38
   25d30:	mov	fp, #0
   25d34:	ldr	r2, [r6]
   25d38:	cmp	r1, #3
   25d3c:	str	r2, [sp, #12]
   25d40:	mov	r7, r0
   25d44:	mov	sl, r3
   25d48:	ldr	r9, [r0]
   25d4c:	ldr	r2, [r8]
   25d50:	str	fp, [sp, #4]
   25d54:	beq	25e1c <pclose@plt+0x12b70>
   25d58:	cmp	r1, #4
   25d5c:	beq	25d9c <pclose@plt+0x12af0>
   25d60:	cmp	r1, #1
   25d64:	streq	fp, [r0, #12]
   25d68:	streq	fp, [r0, #8]
   25d6c:	beq	25d80 <pclose@plt+0x12ad4>
   25d70:	cmp	r1, #5
   25d74:	beq	25e9c <pclose@plt+0x12bf0>
   25d78:	cmp	r1, #2
   25d7c:	beq	25eac <pclose@plt+0x12c00>
   25d80:	ldr	r2, [sp, #12]
   25d84:	ldr	r3, [r6]
   25d88:	mov	r0, fp
   25d8c:	cmp	r2, r3
   25d90:	bne	25f18 <pclose@plt+0x12c6c>
   25d94:	add	sp, sp, #20
   25d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d9c:	cmp	r2, #0
   25da0:	moveq	fp, r2
   25da4:	beq	25e14 <pclose@plt+0x12b68>
   25da8:	mov	r4, fp
   25dac:	mov	r5, r3
   25db0:	str	r2, [sp, #4]
   25db4:	b	25dd0 <pclose@plt+0x12b24>
   25db8:	ldrd	r2, [sp, #4]
   25dbc:	sub	r2, r2, r3
   25dc0:	cmp	r2, #0
   25dc4:	add	r5, r5, r3
   25dc8:	str	r2, [sp, #4]
   25dcc:	beq	25e10 <pclose@plt+0x12b64>
   25dd0:	add	r3, sp, #8
   25dd4:	mov	r1, r5
   25dd8:	mov	r0, r9
   25ddc:	str	r4, [sp, #8]
   25de0:	bl	129dc <gpgrt_write@plt>
   25de4:	subs	fp, r0, #0
   25de8:	beq	25db8 <pclose@plt+0x12b0c>
   25dec:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   25df0:	uxth	fp, r0
   25df4:	bl	12f10 <__errno_location@plt>
   25df8:	ldr	r0, [r0]
   25dfc:	bl	12db4 <strerror@plt>
   25e00:	add	r1, r7, #20
   25e04:	mov	r2, r0
   25e08:	ldr	r0, [pc, #292]	; 25f34 <pclose@plt+0x12c88>
   25e0c:	bl	1c9b0 <pclose@plt+0x9704>
   25e10:	sub	r2, r5, sl
   25e14:	str	r2, [r8]
   25e18:	b	25d80 <pclose@plt+0x12ad4>
   25e1c:	cmp	r2, fp
   25e20:	beq	25f1c <pclose@plt+0x12c70>
   25e24:	ldr	r3, [r0, #12]
   25e28:	cmp	r3, #0
   25e2c:	strne	fp, [r8]
   25e30:	mvnne	fp, #0
   25e34:	bne	25d80 <pclose@plt+0x12ad4>
   25e38:	mov	r1, sl
   25e3c:	mov	r0, r9
   25e40:	add	r3, sp, #4
   25e44:	bl	12b38 <gpgrt_read@plt>
   25e48:	cmn	r0, #1
   25e4c:	mov	fp, r0
   25e50:	beq	25e70 <pclose@plt+0x12bc4>
   25e54:	ldr	r3, [sp, #4]
   25e58:	cmp	r3, #0
   25e5c:	mvneq	fp, #0
   25e60:	moveq	r2, #1
   25e64:	streq	r2, [r7, #12]
   25e68:	str	r3, [r8]
   25e6c:	b	25d80 <pclose@plt+0x12ad4>
   25e70:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   25e74:	uxth	fp, r0
   25e78:	bl	12f10 <__errno_location@plt>
   25e7c:	ldr	r0, [r0]
   25e80:	bl	12db4 <strerror@plt>
   25e84:	add	r1, r7, #20
   25e88:	mov	r2, r0
   25e8c:	ldr	r0, [pc, #164]	; 25f38 <pclose@plt+0x12c8c>
   25e90:	bl	1c9b0 <pclose@plt+0x9704>
   25e94:	ldr	r3, [sp, #4]
   25e98:	b	25e68 <pclose@plt+0x12bbc>
   25e9c:	mov	r0, r3
   25ea0:	ldr	r1, [pc, #148]	; 25f3c <pclose@plt+0x12c90>
   25ea4:	bl	182e0 <pclose@plt+0x5034>
   25ea8:	b	25d80 <pclose@plt+0x12ad4>
   25eac:	mov	r0, fp
   25eb0:	bl	12e20 <_gpgrt_get_std_stream@plt>
   25eb4:	cmp	r9, r0
   25eb8:	beq	25ee8 <pclose@plt+0x12c3c>
   25ebc:	mov	r0, #1
   25ec0:	bl	12e20 <_gpgrt_get_std_stream@plt>
   25ec4:	cmp	r9, r0
   25ec8:	beq	25ee8 <pclose@plt+0x12c3c>
   25ecc:	ldr	r3, [pc, #108]	; 25f40 <pclose@plt+0x12c94>
   25ed0:	ldr	r3, [r3]
   25ed4:	cmp	r3, #0
   25ed8:	bne	25f04 <pclose@plt+0x12c58>
   25edc:	ldr	r3, [r7, #4]
   25ee0:	cmp	r3, #0
   25ee4:	beq	25ef8 <pclose@plt+0x12c4c>
   25ee8:	mov	r0, r7
   25eec:	bl	12b50 <gcry_free@plt>
   25ef0:	mov	fp, #0
   25ef4:	b	25d80 <pclose@plt+0x12ad4>
   25ef8:	mov	r0, r9
   25efc:	bl	12d0c <gpgrt_fclose@plt>
   25f00:	b	25ee8 <pclose@plt+0x12c3c>
   25f04:	mov	r2, r9
   25f08:	add	r1, r7, #20
   25f0c:	ldr	r0, [pc, #48]	; 25f44 <pclose@plt+0x12c98>
   25f10:	bl	1cafc <pclose@plt+0x9850>
   25f14:	b	25edc <pclose@plt+0x12c30>
   25f18:	bl	12bb0 <__stack_chk_fail@plt>
   25f1c:	ldr	r3, [pc, #36]	; 25f48 <pclose@plt+0x12c9c>
   25f20:	ldr	r2, [pc, #36]	; 25f4c <pclose@plt+0x12ca0>
   25f24:	ldr	r1, [pc, #36]	; 25f50 <pclose@plt+0x12ca4>
   25f28:	ldr	r0, [pc, #36]	; 25f54 <pclose@plt+0x12ca8>
   25f2c:	bl	13294 <__assert_fail@plt>
   25f30:	andeq	sp, r3, r0, asr #21
   25f34:	andeq	ip, r2, ip, lsr #14
   25f38:	andeq	ip, r2, r4, lsl #13
   25f3c:	andeq	ip, r2, r4, asr #14
   25f40:	andeq	lr, r3, ip, lsr r8
   25f44:	andeq	ip, r2, r4, asr r7
   25f48:	ldrdeq	ip, [r2], -r8
   25f4c:	andeq	r0, r0, r2, ror #4
   25f50:	andeq	ip, r2, ip, ror #12
   25f54:	andeq	ip, r2, ip, ror #29
   25f58:	push	{r4, r5, r6, lr}
   25f5c:	sub	sp, sp, #16
   25f60:	ldr	r5, [pc, #108]	; 25fd4 <pclose@plt+0x12d28>
   25f64:	mov	r3, #32
   25f68:	cmp	r0, #0
   25f6c:	ldr	r2, [r5]
   25f70:	mov	r4, r1
   25f74:	str	r2, [sp, #12]
   25f78:	str	r3, [sp, #8]
   25f7c:	beq	25fc4 <pclose@plt+0x12d18>
   25f80:	ldr	r6, [r0, #60]	; 0x3c
   25f84:	cmp	r6, #0
   25f88:	beq	25fc4 <pclose@plt+0x12d18>
   25f8c:	add	r3, sp, #8
   25f90:	str	r3, [sp]
   25f94:	mov	r2, #0
   25f98:	mov	r3, r1
   25f9c:	ldr	r0, [r0, #64]	; 0x40
   25fa0:	mov	r1, #5
   25fa4:	blx	r6
   25fa8:	ldr	r2, [sp, #12]
   25fac:	ldr	r3, [r5]
   25fb0:	mov	r0, r4
   25fb4:	cmp	r2, r3
   25fb8:	bne	25fd0 <pclose@plt+0x12d24>
   25fbc:	add	sp, sp, #16
   25fc0:	pop	{r4, r5, r6, pc}
   25fc4:	mov	r3, #63	; 0x3f
   25fc8:	strh	r3, [r4]
   25fcc:	b	25fa8 <pclose@plt+0x12cfc>
   25fd0:	bl	12bb0 <__stack_chk_fail@plt>
   25fd4:	andeq	sp, r3, r0, asr #21
   25fd8:	push	{r4, r5, r6, r7, r8, lr}
   25fdc:	sub	sp, sp, #56	; 0x38
   25fe0:	ldr	r8, [pc, #120]	; 26060 <pclose@plt+0x12db4>
   25fe4:	subs	r4, r0, #0
   25fe8:	ldr	r3, [r8]
   25fec:	str	r3, [sp, #52]	; 0x34
   25ff0:	beq	26044 <pclose@plt+0x12d98>
   25ff4:	ldr	r7, [pc, #104]	; 26064 <pclose@plt+0x12db8>
   25ff8:	add	r1, sp, #20
   25ffc:	mov	r0, r4
   26000:	ldr	r5, [r4, #80]	; 0x50
   26004:	ldr	r6, [r4, #84]	; 0x54
   26008:	bl	25f58 <pclose@plt+0x12cac>
   2600c:	ldr	r3, [r4, #44]	; 0x2c
   26010:	mov	r2, r6
   26014:	str	r3, [sp, #8]
   26018:	ldr	r3, [r4, #40]	; 0x28
   2601c:	mov	r1, r5
   26020:	str	r3, [sp, #4]
   26024:	ldr	r3, [r4, #52]	; 0x34
   26028:	str	r3, [sp]
   2602c:	mov	r3, r0
   26030:	mov	r0, r7
   26034:	bl	1cafc <pclose@plt+0x9850>
   26038:	ldr	r4, [r4, #76]	; 0x4c
   2603c:	cmp	r4, #0
   26040:	bne	25ff8 <pclose@plt+0x12d4c>
   26044:	ldr	r2, [sp, #52]	; 0x34
   26048:	ldr	r3, [r8]
   2604c:	cmp	r2, r3
   26050:	bne	2605c <pclose@plt+0x12db0>
   26054:	add	sp, sp, #56	; 0x38
   26058:	pop	{r4, r5, r6, r7, r8, pc}
   2605c:	bl	12bb0 <__stack_chk_fail@plt>
   26060:	andeq	sp, r3, r0, asr #21
   26064:	andeq	ip, r2, r8, ror #14
   26068:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2606c:	mov	r4, r0
   26070:	ldr	r7, [pc, #1204]	; 2652c <pclose@plt+0x13280>
   26074:	ldr	r6, [pc, #1204]	; 26530 <pclose@plt+0x13284>
   26078:	sub	sp, sp, #24
   2607c:	ldr	r0, [r7]
   26080:	ldr	r3, [r6]
   26084:	cmp	r0, #0
   26088:	mov	r9, r1
   2608c:	mov	r8, r2
   26090:	str	r3, [sp, #20]
   26094:	bne	261d8 <pclose@plt+0x12f2c>
   26098:	ldr	r5, [r4]
   2609c:	cmp	r5, #1
   260a0:	beq	263a0 <pclose@plt+0x130f4>
   260a4:	cmp	r5, #0
   260a8:	bne	264c8 <pclose@plt+0x1321c>
   260ac:	ldr	r1, [r4, #40]	; 0x28
   260b0:	ldr	r2, [r4, #44]	; 0x2c
   260b4:	cmp	r1, r2
   260b8:	bhi	264e0 <pclose@plt+0x13234>
   260bc:	ldr	r0, [r4, #48]	; 0x30
   260c0:	sub	r2, r2, r1
   260c4:	str	r2, [r4, #44]	; 0x2c
   260c8:	add	r1, r0, r1
   260cc:	bl	12ab4 <memmove@plt>
   260d0:	ldr	r2, [r4, #44]	; 0x2c
   260d4:	str	r5, [r4, #40]	; 0x28
   260d8:	cmp	r2, r8
   260dc:	mov	r1, r2
   260e0:	bcs	26160 <pclose@plt+0x12eb4>
   260e4:	ldr	r3, [r4, #52]	; 0x34
   260e8:	cmp	r3, #0
   260ec:	beq	26160 <pclose@plt+0x12eb4>
   260f0:	ldr	r3, [r7]
   260f4:	cmp	r3, #0
   260f8:	bne	263a8 <pclose@plt+0x130fc>
   260fc:	cmp	r9, #0
   26100:	beq	263a0 <pclose@plt+0x130f4>
   26104:	ldr	r5, [r4, #76]	; 0x4c
   26108:	cmp	r5, #0
   2610c:	beq	26404 <pclose@plt+0x13158>
   26110:	ldr	r3, [r7]
   26114:	cmp	r3, #0
   26118:	bne	26434 <pclose@plt+0x13188>
   2611c:	ldr	r0, [r4, #48]	; 0x30
   26120:	bl	12b50 <gcry_free@plt>
   26124:	ldr	r0, [r4, #72]	; 0x48
   26128:	bl	12b50 <gcry_free@plt>
   2612c:	mov	r2, #88	; 0x58
   26130:	mov	r1, r5
   26134:	mov	r0, r4
   26138:	bl	12b2c <memcpy@plt>
   2613c:	mov	r0, r5
   26140:	bl	12b50 <gcry_free@plt>
   26144:	ldr	r3, [r7]
   26148:	cmp	r3, #0
   2614c:	beq	263a0 <pclose@plt+0x130f4>
   26150:	mov	r0, r4
   26154:	bl	25fd8 <pclose@plt+0x12d2c>
   26158:	mvn	r0, #0
   2615c:	b	261b0 <pclose@plt+0x12f04>
   26160:	cmp	r2, #0
   26164:	bne	261c8 <pclose@plt+0x12f1c>
   26168:	ldr	r0, [r4, #56]	; 0x38
   2616c:	cmp	r0, #0
   26170:	bne	26494 <pclose@plt+0x131e8>
   26174:	ldr	r8, [r4, #60]	; 0x3c
   26178:	cmp	r8, #0
   2617c:	beq	263a0 <pclose@plt+0x130f4>
   26180:	ldr	r3, [r4, #52]	; 0x34
   26184:	cmp	r3, #0
   26188:	bne	26198 <pclose@plt+0x12eec>
   2618c:	ldr	r3, [r4, #56]	; 0x38
   26190:	cmp	r3, #0
   26194:	beq	2620c <pclose@plt+0x12f60>
   26198:	cmp	r5, r1
   2619c:	bcs	263a0 <pclose@plt+0x130f4>
   261a0:	ldr	r3, [r4, #48]	; 0x30
   261a4:	add	r2, r5, #1
   261a8:	str	r2, [r4, #40]	; 0x28
   261ac:	ldrb	r0, [r3, r5]
   261b0:	ldr	r2, [sp, #20]
   261b4:	ldr	r3, [r6]
   261b8:	cmp	r2, r3
   261bc:	bne	264dc <pclose@plt+0x13230>
   261c0:	add	sp, sp, #24
   261c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   261c8:	ldr	r8, [r4, #60]	; 0x3c
   261cc:	cmp	r8, #0
   261d0:	beq	26198 <pclose@plt+0x12eec>
   261d4:	b	26180 <pclose@plt+0x12ed4>
   261d8:	ldr	r0, [r4, #40]	; 0x28
   261dc:	ldr	r3, [r4, #36]	; 0x24
   261e0:	ldr	r2, [r4, #44]	; 0x2c
   261e4:	add	r1, r3, r0
   261e8:	sub	r1, r1, r2
   261ec:	sub	r2, r2, r0
   261f0:	str	r1, [sp, #4]
   261f4:	str	r2, [sp]
   261f8:	ldr	r0, [pc, #820]	; 26534 <pclose@plt+0x13288>
   261fc:	ldr	r2, [r4, #84]	; 0x54
   26200:	ldr	r1, [r4, #80]	; 0x50
   26204:	bl	1cafc <pclose@plt+0x9850>
   26208:	b	26098 <pclose@plt+0x12dec>
   2620c:	ldr	r3, [r4, #36]	; 0x24
   26210:	ldr	r0, [r7]
   26214:	sub	r3, r3, r2
   26218:	cmp	r0, #0
   2621c:	str	r3, [sp, #12]
   26220:	bne	263bc <pclose@plt+0x13110>
   26224:	cmp	r3, #0
   26228:	beq	2642c <pclose@plt+0x13180>
   2622c:	ldr	r3, [r4, #48]	; 0x30
   26230:	add	r2, sp, #12
   26234:	add	r3, r3, r1
   26238:	str	r2, [sp]
   2623c:	mov	r1, #3
   26240:	ldr	r2, [r4, #76]	; 0x4c
   26244:	ldr	r0, [r4, #64]	; 0x40
   26248:	blx	r8
   2624c:	ldr	r1, [r4, #44]	; 0x2c
   26250:	ldr	r3, [sp, #12]
   26254:	ldr	r2, [r7]
   26258:	add	r1, r1, r3
   2625c:	cmp	r2, #0
   26260:	str	r1, [r4, #44]	; 0x2c
   26264:	mov	r5, r0
   26268:	beq	262d8 <pclose@plt+0x1302c>
   2626c:	cmp	r0, #0
   26270:	ldr	r8, [r4, #80]	; 0x50
   26274:	ldr	sl, [r4, #84]	; 0x54
   26278:	beq	26508 <pclose@plt+0x1325c>
   2627c:	cmn	r0, #1
   26280:	beq	26448 <pclose@plt+0x1319c>
   26284:	bl	13120 <gpg_strerror@plt>
   26288:	ldr	r3, [sp, #12]
   2628c:	mov	r1, r8
   26290:	str	r3, [sp, #4]
   26294:	mov	r2, sl
   26298:	mov	r3, r5
   2629c:	str	r0, [sp]
   262a0:	ldr	r0, [pc, #656]	; 26538 <pclose@plt+0x1328c>
   262a4:	bl	1cafc <pclose@plt+0x9850>
   262a8:	ldr	r1, [r4, #44]	; 0x2c
   262ac:	cmp	r1, #0
   262b0:	str	r5, [r4, #56]	; 0x38
   262b4:	beq	263a0 <pclose@plt+0x130f4>
   262b8:	ldr	r5, [r4, #40]	; 0x28
   262bc:	cmp	r5, r1
   262c0:	bls	26198 <pclose@plt+0x12eec>
   262c4:	ldr	r3, [pc, #624]	; 2653c <pclose@plt+0x13290>
   262c8:	ldr	r2, [pc, #624]	; 26540 <pclose@plt+0x13294>
   262cc:	ldr	r1, [pc, #624]	; 26544 <pclose@plt+0x13298>
   262d0:	ldr	r0, [pc, #624]	; 26548 <pclose@plt+0x1329c>
   262d4:	bl	13294 <__assert_fail@plt>
   262d8:	cmn	r0, #1
   262dc:	bne	26410 <pclose@plt+0x13164>
   262e0:	mov	r3, #0
   262e4:	add	r2, sp, #16
   262e8:	str	r2, [sp]
   262ec:	str	r3, [sp, #16]
   262f0:	ldr	r5, [r4, #60]	; 0x3c
   262f4:	ldr	r2, [r4, #76]	; 0x4c
   262f8:	mov	r1, #2
   262fc:	ldr	r0, [r4, #64]	; 0x40
   26300:	blx	r5
   26304:	cmp	r0, #0
   26308:	bne	2646c <pclose@plt+0x131c0>
   2630c:	ldr	r0, [r4, #64]	; 0x40
   26310:	cmp	r0, #0
   26314:	beq	26324 <pclose@plt+0x13078>
   26318:	ldr	r3, [r4, #68]	; 0x44
   2631c:	cmp	r3, #0
   26320:	bne	2648c <pclose@plt+0x131e0>
   26324:	mov	r3, #0
   26328:	mov	r2, #1
   2632c:	cmp	r9, #0
   26330:	str	r3, [r4, #64]	; 0x40
   26334:	str	r3, [r4, #60]	; 0x3c
   26338:	str	r2, [r4, #52]	; 0x34
   2633c:	ldr	r1, [r4, #44]	; 0x2c
   26340:	beq	2641c <pclose@plt+0x13170>
   26344:	cmp	r1, r3
   26348:	bne	262b8 <pclose@plt+0x1300c>
   2634c:	ldr	r5, [r4, #76]	; 0x4c
   26350:	cmp	r5, r3
   26354:	beq	263a0 <pclose@plt+0x130f4>
   26358:	ldr	r3, [r7]
   2635c:	cmp	r3, #0
   26360:	bne	264f4 <pclose@plt+0x13248>
   26364:	ldr	r0, [r4, #48]	; 0x30
   26368:	bl	12b50 <gcry_free@plt>
   2636c:	ldr	r0, [r4, #72]	; 0x48
   26370:	bl	12b50 <gcry_free@plt>
   26374:	mov	r2, #88	; 0x58
   26378:	mov	r1, r5
   2637c:	mov	r0, r4
   26380:	bl	12b2c <memcpy@plt>
   26384:	mov	r0, r5
   26388:	bl	12b50 <gcry_free@plt>
   2638c:	ldr	r3, [r7]
   26390:	cmp	r3, #0
   26394:	beq	263a0 <pclose@plt+0x130f4>
   26398:	mov	r0, r4
   2639c:	bl	25fd8 <pclose@plt+0x12d2c>
   263a0:	mvn	r0, #0
   263a4:	b	261b0 <pclose@plt+0x12f04>
   263a8:	ldr	r2, [r4, #84]	; 0x54
   263ac:	ldr	r1, [r4, #80]	; 0x50
   263b0:	ldr	r0, [pc, #404]	; 2654c <pclose@plt+0x132a0>
   263b4:	bl	1cafc <pclose@plt+0x9850>
   263b8:	b	260fc <pclose@plt+0x12e50>
   263bc:	ldr	r2, [r4, #84]	; 0x54
   263c0:	ldr	r1, [r4, #80]	; 0x50
   263c4:	ldr	r0, [pc, #388]	; 26550 <pclose@plt+0x132a4>
   263c8:	bl	1cafc <pclose@plt+0x9850>
   263cc:	ldr	r3, [sp, #12]
   263d0:	cmp	r3, #0
   263d4:	bne	26480 <pclose@plt+0x131d4>
   263d8:	ldr	r2, [r7]
   263dc:	cmp	r2, #0
   263e0:	beq	26428 <pclose@plt+0x1317c>
   263e4:	ldr	r2, [pc, #360]	; 26554 <pclose@plt+0x132a8>
   263e8:	ldr	r0, [pc, #328]	; 26538 <pclose@plt+0x1328c>
   263ec:	strd	r2, [sp]
   263f0:	ldr	r2, [r4, #84]	; 0x54
   263f4:	ldr	r1, [r4, #80]	; 0x50
   263f8:	bl	1cafc <pclose@plt+0x9850>
   263fc:	ldr	r1, [r4, #44]	; 0x2c
   26400:	b	262b8 <pclose@plt+0x1300c>
   26404:	str	r5, [r4, #52]	; 0x34
   26408:	mvn	r0, #0
   2640c:	b	261b0 <pclose@plt+0x12f04>
   26410:	cmp	r0, #0
   26414:	bne	262ac <pclose@plt+0x13000>
   26418:	b	262b8 <pclose@plt+0x1300c>
   2641c:	cmp	r1, #0
   26420:	bne	262b8 <pclose@plt+0x1300c>
   26424:	b	263a0 <pclose@plt+0x130f4>
   26428:	ldr	r2, [r4, #44]	; 0x2c
   2642c:	mov	r1, r2
   26430:	b	262b8 <pclose@plt+0x1300c>
   26434:	ldr	r2, [r4, #84]	; 0x54
   26438:	ldr	r1, [r4, #80]	; 0x50
   2643c:	ldr	r0, [pc, #276]	; 26558 <pclose@plt+0x132ac>
   26440:	bl	1cafc <pclose@plt+0x9850>
   26444:	b	2611c <pclose@plt+0x12e70>
   26448:	ldr	r0, [pc, #268]	; 2655c <pclose@plt+0x132b0>
   2644c:	str	r3, [sp, #4]
   26450:	str	r0, [sp]
   26454:	mov	r3, r5
   26458:	mov	r2, sl
   2645c:	mov	r1, r8
   26460:	ldr	r0, [pc, #208]	; 26538 <pclose@plt+0x1328c>
   26464:	bl	1cafc <pclose@plt+0x9850>
   26468:	b	262e0 <pclose@plt+0x13034>
   2646c:	bl	13120 <gpg_strerror@plt>
   26470:	mov	r1, r0
   26474:	ldr	r0, [pc, #228]	; 26560 <pclose@plt+0x132b4>
   26478:	bl	1c9b0 <pclose@plt+0x9704>
   2647c:	b	2630c <pclose@plt+0x13060>
   26480:	ldr	r8, [r4, #60]	; 0x3c
   26484:	ldr	r1, [r4, #44]	; 0x2c
   26488:	b	2622c <pclose@plt+0x12f80>
   2648c:	bl	12b50 <gcry_free@plt>
   26490:	b	26324 <pclose@plt+0x13078>
   26494:	ldr	r3, [r7]
   26498:	cmp	r3, #0
   2649c:	beq	263a0 <pclose@plt+0x130f4>
   264a0:	ldr	r5, [r4, #80]	; 0x50
   264a4:	ldr	r4, [r4, #84]	; 0x54
   264a8:	bl	13120 <gpg_strerror@plt>
   264ac:	mov	r2, r4
   264b0:	mov	r1, r5
   264b4:	mov	r3, r0
   264b8:	ldr	r0, [pc, #164]	; 26564 <pclose@plt+0x132b8>
   264bc:	bl	1cafc <pclose@plt+0x9850>
   264c0:	mvn	r0, #0
   264c4:	b	261b0 <pclose@plt+0x12f04>
   264c8:	ldr	r3, [pc, #108]	; 2653c <pclose@plt+0x13290>
   264cc:	ldr	r2, [pc, #148]	; 26568 <pclose@plt+0x132bc>
   264d0:	ldr	r1, [pc, #108]	; 26544 <pclose@plt+0x13298>
   264d4:	ldr	r0, [pc, #144]	; 2656c <pclose@plt+0x132c0>
   264d8:	bl	13294 <__assert_fail@plt>
   264dc:	bl	12bb0 <__stack_chk_fail@plt>
   264e0:	ldr	r3, [pc, #84]	; 2653c <pclose@plt+0x13290>
   264e4:	ldr	r2, [pc, #132]	; 26570 <pclose@plt+0x132c4>
   264e8:	ldr	r1, [pc, #84]	; 26544 <pclose@plt+0x13298>
   264ec:	ldr	r0, [pc, #84]	; 26548 <pclose@plt+0x1329c>
   264f0:	bl	13294 <__assert_fail@plt>
   264f4:	ldr	r2, [r4, #84]	; 0x54
   264f8:	ldr	r1, [r4, #80]	; 0x50
   264fc:	ldr	r0, [pc, #112]	; 26574 <pclose@plt+0x132c8>
   26500:	bl	1cafc <pclose@plt+0x9850>
   26504:	b	26364 <pclose@plt+0x130b8>
   26508:	ldr	r0, [pc, #68]	; 26554 <pclose@plt+0x132a8>
   2650c:	str	r3, [sp, #4]
   26510:	str	r0, [sp]
   26514:	mov	r3, r5
   26518:	mov	r2, sl
   2651c:	mov	r1, r8
   26520:	ldr	r0, [pc, #16]	; 26538 <pclose@plt+0x1328c>
   26524:	bl	1cafc <pclose@plt+0x9850>
   26528:	b	263fc <pclose@plt+0x13150>
   2652c:	andeq	lr, r3, ip, lsr r8
   26530:	andeq	sp, r3, r0, asr #21
   26534:	andeq	ip, r2, r0, lsr #15
   26538:	andeq	ip, r2, r0, ror #17
   2653c:	andeq	ip, r2, r8, ror #9
   26540:	andeq	r0, r0, r4, ror r7
   26544:	andeq	ip, r2, ip, ror #12
   26548:	andeq	ip, r2, ip, lsl #16
   2654c:	andeq	ip, r2, r4, lsr #16
   26550:			; <UNDEFINED> instruction: 0x0002c8b0
   26554:	andeq	ip, r2, r8, lsl #6
   26558:	andeq	ip, r2, r0, asr r8
   2655c:	andeq	ip, r2, r8, ror r9
   26560:	andeq	ip, r2, r0, lsr #18
   26564:	andeq	ip, r2, r4, lsl #17
   26568:	andeq	r0, r0, pc, ror #13
   2656c:	strdeq	ip, [r2], -r4
   26570:	strdeq	r0, [r0], -r4
   26574:	andeq	ip, r2, ip, lsr r9
   26578:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2657c:	subs	r7, r0, #0
   26580:	beq	26640 <pclose@plt+0x13394>
   26584:	ldr	r8, [pc, #200]	; 26654 <pclose@plt+0x133a8>
   26588:	ldr	r3, [r8]
   2658c:	cmp	r3, #0
   26590:	bne	26618 <pclose@plt+0x1336c>
   26594:	ldr	r3, [pc, #188]	; 26658 <pclose@plt+0x133ac>
   26598:	ldr	r4, [r3]
   2659c:	cmp	r4, #0
   265a0:	beq	26634 <pclose@plt+0x13388>
   265a4:	ldr	sl, [pc, #176]	; 2665c <pclose@plt+0x133b0>
   265a8:	mov	fp, #0
   265ac:	mvn	r9, #0
   265b0:	ldr	r5, [r4, #4]
   265b4:	cmn	r5, #1
   265b8:	beq	265f0 <pclose@plt+0x13344>
   265bc:	add	r6, r4, #8
   265c0:	mov	r0, r6
   265c4:	mov	r1, r7
   265c8:	bl	12a24 <strcmp@plt>
   265cc:	cmp	r0, #0
   265d0:	bne	265f0 <pclose@plt+0x13344>
   265d4:	ldr	r3, [r8]
   265d8:	cmp	r3, #0
   265dc:	bne	26604 <pclose@plt+0x13358>
   265e0:	mov	r0, r5
   265e4:	bl	1324c <close@plt>
   265e8:	str	r9, [r4, #4]
   265ec:	mov	fp, r0
   265f0:	ldr	r4, [r4]
   265f4:	cmp	r4, #0
   265f8:	bne	265b0 <pclose@plt+0x13304>
   265fc:	mov	r0, fp
   26600:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26604:	mov	r1, r6
   26608:	mov	r0, sl
   2660c:	bl	1cafc <pclose@plt+0x9850>
   26610:	ldr	r5, [r4, #4]
   26614:	b	265e0 <pclose@plt+0x13334>
   26618:	mov	r1, r7
   2661c:	ldr	r0, [pc, #60]	; 26660 <pclose@plt+0x133b4>
   26620:	bl	1cafc <pclose@plt+0x9850>
   26624:	ldr	r3, [pc, #44]	; 26658 <pclose@plt+0x133ac>
   26628:	ldr	r4, [r3]
   2662c:	cmp	r4, #0
   26630:	bne	265a4 <pclose@plt+0x132f8>
   26634:	mov	fp, r4
   26638:	mov	r0, fp
   2663c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26640:	ldr	r3, [pc, #28]	; 26664 <pclose@plt+0x133b8>
   26644:	mov	r2, #204	; 0xcc
   26648:	ldr	r1, [pc, #24]	; 26668 <pclose@plt+0x133bc>
   2664c:	ldr	r0, [pc, #24]	; 2666c <pclose@plt+0x133c0>
   26650:	bl	13294 <__assert_fail@plt>
   26654:	andeq	lr, r3, ip, lsr r8
   26658:	strdeq	lr, [r3], -r0
   2665c:	andeq	ip, r2, r0, lsr #19
   26660:	andeq	ip, r2, r4, lsl #19
   26664:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   26668:	andeq	ip, r2, ip, ror #12
   2666c:	andeq	ip, r2, ip, ror r9
   26670:	ldr	r3, [pc, #140]	; 26704 <pclose@plt+0x13458>
   26674:	push	{r4, r5, r6, lr}
   26678:	cmp	r2, #0
   2667c:	mov	r6, r1
   26680:	mov	r5, r0
   26684:	mov	r0, r1
   26688:	mov	r1, #43	; 0x2b
   2668c:	movne	r4, #384	; 0x180
   26690:	moveq	r4, r3
   26694:	bl	12eb0 <strchr@plt>
   26698:	cmp	r0, #0
   2669c:	beq	266c4 <pclose@plt+0x13418>
   266a0:	mov	r0, r5
   266a4:	bl	26578 <pclose@plt+0x132cc>
   266a8:	cmp	r0, #0
   266ac:	moveq	r1, #2
   266b0:	bne	266fc <pclose@plt+0x13450>
   266b4:	mov	r2, r4
   266b8:	mov	r0, r5
   266bc:	pop	{r4, r5, r6, lr}
   266c0:	b	12d3c <open64@plt>
   266c4:	mov	r1, #119	; 0x77
   266c8:	mov	r0, r6
   266cc:	bl	12eb0 <strchr@plt>
   266d0:	subs	r1, r0, #0
   266d4:	beq	266b4 <pclose@plt+0x13408>
   266d8:	mov	r0, r5
   266dc:	bl	26578 <pclose@plt+0x132cc>
   266e0:	cmp	r0, #0
   266e4:	bne	266fc <pclose@plt+0x13450>
   266e8:	mov	r2, r4
   266ec:	mov	r0, r5
   266f0:	ldr	r1, [pc, #16]	; 26708 <pclose@plt+0x1345c>
   266f4:	pop	{r4, r5, r6, lr}
   266f8:	b	12d3c <open64@plt>
   266fc:	mvn	r0, #0
   26700:	pop	{r4, r5, r6, pc}
   26704:			; <UNDEFINED> instruction: 0x000001b6
   26708:	andeq	r0, r0, r1, asr #4
   2670c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26710:	sub	sp, sp, #52	; 0x34
   26714:	ldr	r9, [pc, #564]	; 26950 <pclose@plt+0x136a4>
   26718:	cmp	r1, #2
   2671c:	mov	r5, r0
   26720:	ldr	ip, [r9]
   26724:	mov	r4, r2
   26728:	mov	r6, r3
   2672c:	str	ip, [sp, #44]	; 0x2c
   26730:	beq	26880 <pclose@plt+0x135d4>
   26734:	cmp	r1, #3
   26738:	beq	26818 <pclose@plt+0x1356c>
   2673c:	cmp	r1, #4
   26740:	bne	26860 <pclose@plt+0x135b4>
   26744:	ldr	sl, [pc, #520]	; 26954 <pclose@plt+0x136a8>
   26748:	orrs	r3, r0, r2
   2674c:	moveq	r3, #1
   26750:	ldr	r2, [sl]
   26754:	movne	r3, #0
   26758:	cmp	r6, #0
   2675c:	movne	r4, r3
   26760:	moveq	r4, #0
   26764:	cmp	r2, #0
   26768:	beq	268c4 <pclose@plt+0x13618>
   2676c:	cmp	r6, #0
   26770:	beq	2691c <pclose@plt+0x13670>
   26774:	mov	r1, r6
   26778:	ldr	r0, [pc, #472]	; 26958 <pclose@plt+0x136ac>
   2677c:	bl	1cafc <pclose@plt+0x9850>
   26780:	cmp	r4, #0
   26784:	beq	26860 <pclose@plt+0x135b4>
   26788:	ldr	r3, [sl]
   2678c:	cmp	r3, #0
   26790:	beq	267a0 <pclose@plt+0x134f4>
   26794:	mov	r1, r6
   26798:	ldr	r0, [pc, #444]	; 2695c <pclose@plt+0x136b0>
   2679c:	bl	1cafc <pclose@plt+0x9850>
   267a0:	ldr	r3, [pc, #440]	; 26960 <pclose@plt+0x136b4>
   267a4:	ldr	r4, [r3]
   267a8:	cmp	r4, #0
   267ac:	beq	2693c <pclose@plt+0x13690>
   267b0:	ldr	fp, [pc, #428]	; 26964 <pclose@plt+0x136b8>
   267b4:	mov	r8, #0
   267b8:	b	267d4 <pclose@plt+0x13528>
   267bc:	mov	r0, r5
   267c0:	bl	12a00 <fsync@plt>
   267c4:	mov	r8, r0
   267c8:	ldr	r4, [r4]
   267cc:	cmp	r4, #0
   267d0:	beq	26864 <pclose@plt+0x135b8>
   267d4:	ldr	r5, [r4, #4]
   267d8:	cmn	r5, #1
   267dc:	beq	267c8 <pclose@plt+0x1351c>
   267e0:	add	r7, r4, #8
   267e4:	mov	r0, r7
   267e8:	mov	r1, r6
   267ec:	bl	12a24 <strcmp@plt>
   267f0:	cmp	r0, #0
   267f4:	bne	267c8 <pclose@plt+0x1351c>
   267f8:	ldr	r3, [sl]
   267fc:	cmp	r3, #0
   26800:	beq	267bc <pclose@plt+0x13510>
   26804:	mov	r1, r7
   26808:	mov	r0, fp
   2680c:	bl	1cafc <pclose@plt+0x9850>
   26810:	ldr	r5, [r4, #4]
   26814:	b	267bc <pclose@plt+0x13510>
   26818:	ldr	r3, [pc, #308]	; 26954 <pclose@plt+0x136a8>
   2681c:	ldr	r3, [r3]
   26820:	cmp	r3, #0
   26824:	bne	268e8 <pclose@plt+0x1363c>
   26828:	cmp	r5, #0
   2682c:	beq	26860 <pclose@plt+0x135b4>
   26830:	ldr	r2, [r5, #76]	; 0x4c
   26834:	cmp	r2, #0
   26838:	bne	26844 <pclose@plt+0x13598>
   2683c:	b	26944 <pclose@plt+0x13698>
   26840:	mov	r2, r3
   26844:	ldr	r3, [r2, #76]	; 0x4c
   26848:	cmp	r3, #0
   2684c:	bne	26840 <pclose@plt+0x13594>
   26850:	ldr	r3, [pc, #272]	; 26968 <pclose@plt+0x136bc>
   26854:	ldr	r1, [r2, #60]	; 0x3c
   26858:	cmp	r1, r3
   2685c:	beq	2692c <pclose@plt+0x13680>
   26860:	mvn	r8, #0
   26864:	ldr	r2, [sp, #44]	; 0x2c
   26868:	ldr	r3, [r9]
   2686c:	mov	r0, r8
   26870:	cmp	r2, r3
   26874:	bne	2694c <pclose@plt+0x136a0>
   26878:	add	sp, sp, #52	; 0x34
   2687c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26880:	ldr	r3, [pc, #204]	; 26954 <pclose@plt+0x136a8>
   26884:	ldr	r3, [r3]
   26888:	cmp	r3, #0
   2688c:	bne	268d0 <pclose@plt+0x13624>
   26890:	orrs	r3, r5, r4
   26894:	moveq	r3, #1
   26898:	movne	r3, #0
   2689c:	cmp	r6, #0
   268a0:	moveq	r3, #0
   268a4:	cmp	r3, #0
   268a8:	beq	26860 <pclose@plt+0x135b4>
   268ac:	mov	r0, r6
   268b0:	bl	26578 <pclose@plt+0x132cc>
   268b4:	adds	r0, r0, #0
   268b8:	movne	r0, #1
   268bc:	rsb	r8, r0, #0
   268c0:	b	26864 <pclose@plt+0x135b8>
   268c4:	cmp	r4, #0
   268c8:	bne	267a0 <pclose@plt+0x134f4>
   268cc:	b	26860 <pclose@plt+0x135b4>
   268d0:	cmp	r6, #0
   268d4:	ldr	r1, [pc, #144]	; 2696c <pclose@plt+0x136c0>
   268d8:	ldr	r0, [pc, #144]	; 26970 <pclose@plt+0x136c4>
   268dc:	movne	r1, r6
   268e0:	bl	1cafc <pclose@plt+0x9850>
   268e4:	b	26890 <pclose@plt+0x135e4>
   268e8:	cmp	r0, #0
   268ec:	mvneq	r6, #0
   268f0:	add	r1, sp, #12
   268f4:	ldrdne	r6, [r0, #80]	; 0x50
   268f8:	moveq	r7, r6
   268fc:	bl	25f58 <pclose@plt+0x12cac>
   26900:	str	r4, [sp]
   26904:	mov	r2, r7
   26908:	mov	r1, r6
   2690c:	mov	r3, r0
   26910:	ldr	r0, [pc, #92]	; 26974 <pclose@plt+0x136c8>
   26914:	bl	1cafc <pclose@plt+0x9850>
   26918:	b	26828 <pclose@plt+0x1357c>
   2691c:	ldr	r1, [pc, #84]	; 26978 <pclose@plt+0x136cc>
   26920:	ldr	r0, [pc, #48]	; 26958 <pclose@plt+0x136ac>
   26924:	bl	1cafc <pclose@plt+0x9850>
   26928:	b	26860 <pclose@plt+0x135b4>
   2692c:	ldr	r3, [r2, #64]	; 0x40
   26930:	mov	r8, #0
   26934:	str	r4, [r3, #8]
   26938:	b	26864 <pclose@plt+0x135b8>
   2693c:	mov	r8, r4
   26940:	b	26864 <pclose@plt+0x135b8>
   26944:	mov	r2, r5
   26948:	b	26850 <pclose@plt+0x135a4>
   2694c:	bl	12bb0 <__stack_chk_fail@plt>
   26950:	andeq	sp, r3, r0, asr #21
   26954:	andeq	lr, r3, ip, lsr r8
   26958:	andeq	ip, r2, r8, lsl #20
   2695c:	andeq	ip, r2, r8, lsr #20
   26960:	strdeq	lr, [r3], -r0
   26964:	andeq	ip, r2, r4, asr #20
   26968:	andeq	r5, r2, r0, lsl #20
   2696c:	ldrdeq	r9, [r2], -r0
   26970:			; <UNDEFINED> instruction: 0x0002c9bc
   26974:	andeq	ip, r2, r0, ror #19
   26978:	andeq	ip, r2, r0, ror #20
   2697c:	cmp	r0, #0
   26980:	bxeq	lr
   26984:	ldr	r2, [r0, #76]	; 0x4c
   26988:	cmp	r2, #0
   2698c:	bne	26998 <pclose@plt+0x136ec>
   26990:	b	269bc <pclose@plt+0x13710>
   26994:	mov	r2, r3
   26998:	ldr	r3, [r2, #76]	; 0x4c
   2699c:	cmp	r3, #0
   269a0:	bne	26994 <pclose@plt+0x136e8>
   269a4:	ldr	r3, [pc, #48]	; 269dc <pclose@plt+0x13730>
   269a8:	ldr	r1, [r2, #60]	; 0x3c
   269ac:	cmp	r1, r3
   269b0:	beq	269c4 <pclose@plt+0x13718>
   269b4:	mov	r0, #0
   269b8:	bx	lr
   269bc:	mov	r2, r0
   269c0:	b	269a4 <pclose@plt+0x136f8>
   269c4:	ldr	r0, [r2, #64]	; 0x40
   269c8:	ldr	r3, [r0, #16]
   269cc:	cmp	r3, #0
   269d0:	bne	269b4 <pclose@plt+0x13708>
   269d4:	add	r0, r0, #20
   269d8:	bx	lr
   269dc:	andeq	r5, r2, r0, lsl #20
   269e0:	ldr	r3, [pc, #32]	; 26a08 <pclose@plt+0x1375c>
   269e4:	ldr	r3, [r3]
   269e8:	cmp	r3, #0
   269ec:	beq	26a00 <pclose@plt+0x13754>
   269f0:	push	{r4, lr}
   269f4:	bl	25fd8 <pclose@plt+0x12d2c>
   269f8:	mov	r0, #0
   269fc:	pop	{r4, pc}
   26a00:	mov	r0, #0
   26a04:	bx	lr
   26a08:	andeq	lr, r3, ip, lsr r8
   26a0c:	cmp	r0, #3
   26a10:	push	{r4, r5, r6, lr}
   26a14:	bhi	26a74 <pclose@plt+0x137c8>
   26a18:	cmp	r1, #0
   26a1c:	mov	r5, r1
   26a20:	beq	26a88 <pclose@plt+0x137dc>
   26a24:	mov	r6, r0
   26a28:	mov	r1, #88	; 0x58
   26a2c:	mov	r0, #1
   26a30:	bl	131bc <gcry_xcalloc@plt>
   26a34:	mov	r4, r0
   26a38:	mov	r0, r5
   26a3c:	str	r6, [r4]
   26a40:	bl	129a0 <gcry_xmalloc@plt>
   26a44:	ldr	r1, [pc, #68]	; 26a90 <pclose@plt+0x137e4>
   26a48:	mov	r2, #0
   26a4c:	str	r5, [r4, #36]	; 0x24
   26a50:	ldr	r3, [r1, #4]
   26a54:	str	r2, [r4, #84]	; 0x54
   26a58:	add	r3, r3, #1
   26a5c:	str	r3, [r1, #4]
   26a60:	str	r3, [r4, #80]	; 0x50
   26a64:	str	r2, [r4, #72]	; 0x48
   26a68:	str	r0, [r4, #48]	; 0x30
   26a6c:	mov	r0, r4
   26a70:	pop	{r4, r5, r6, pc}
   26a74:	ldr	r3, [pc, #24]	; 26a94 <pclose@plt+0x137e8>
   26a78:	mov	r2, #1104	; 0x450
   26a7c:	ldr	r1, [pc, #20]	; 26a98 <pclose@plt+0x137ec>
   26a80:	ldr	r0, [pc, #20]	; 26a9c <pclose@plt+0x137f0>
   26a84:	bl	13294 <__assert_fail@plt>
   26a88:	ldr	r0, [pc, #16]	; 26aa0 <pclose@plt+0x137f4>
   26a8c:	bl	1cab8 <pclose@plt+0x980c>
   26a90:	strdeq	lr, [r3], -r0
   26a94:	andeq	ip, r2, r0, lsl r5
   26a98:	andeq	ip, r2, ip, ror #12
   26a9c:	andeq	ip, r2, r8, ror #20
   26aa0:	andeq	ip, r2, ip, asr #21
   26aa4:	mov	r3, r1
   26aa8:	push	{r4, r5, r6, r7, r8, lr}
   26aac:	mov	r1, #119	; 0x77
   26ab0:	sub	sp, sp, #8
   26ab4:	mov	r6, r0
   26ab8:	mov	r0, r3
   26abc:	mov	r7, r2
   26ac0:	bl	12eb0 <strchr@plt>
   26ac4:	mov	r1, #8192	; 0x2000
   26ac8:	cmp	r0, #0
   26acc:	movne	r0, #2
   26ad0:	moveq	r0, #0
   26ad4:	bl	26a0c <pclose@plt+0x13760>
   26ad8:	mov	r5, r0
   26adc:	mov	r0, #44	; 0x2c
   26ae0:	bl	129a0 <gcry_xmalloc@plt>
   26ae4:	mov	ip, #1
   26ae8:	mov	r1, ip
   26aec:	ldr	r3, [pc, #144]	; 26b84 <pclose@plt+0x138d8>
   26af0:	mvn	r2, #0
   26af4:	str	r6, [sp]
   26af8:	mov	r4, r0
   26afc:	add	r8, r0, #20
   26b00:	mov	r0, r8
   26b04:	str	r6, [r4]
   26b08:	str	r7, [r4, #4]
   26b0c:	str	ip, [r4, #16]
   26b10:	bl	12f34 <__sprintf_chk@plt>
   26b14:	ldr	r1, [pc, #108]	; 26b88 <pclose@plt+0x138dc>
   26b18:	mov	r3, #0
   26b1c:	ldr	r2, [pc, #104]	; 26b8c <pclose@plt+0x138e0>
   26b20:	ldr	r1, [r1]
   26b24:	str	r4, [r5, #64]	; 0x40
   26b28:	cmp	r1, r3
   26b2c:	str	r2, [r5, #60]	; 0x3c
   26b30:	str	r3, [r4, #12]
   26b34:	str	r3, [r4, #4]
   26b38:	str	r3, [r4, #8]
   26b3c:	beq	26b64 <pclose@plt+0x138b8>
   26b40:	ldr	r0, [pc, #72]	; 26b90 <pclose@plt+0x138e4>
   26b44:	cmp	r7, #0
   26b48:	ldr	r1, [r5, #80]	; 0x50
   26b4c:	ldr	r2, [r5, #84]	; 0x54
   26b50:	ldr	r3, [pc, #60]	; 26b94 <pclose@plt+0x138e8>
   26b54:	str	r8, [sp]
   26b58:	movne	r3, r0
   26b5c:	ldr	r0, [pc, #52]	; 26b98 <pclose@plt+0x138ec>
   26b60:	bl	1cafc <pclose@plt+0x9850>
   26b64:	mov	r3, #0
   26b68:	mov	r2, #1
   26b6c:	mov	r1, #3
   26b70:	mov	r0, r5
   26b74:	bl	2670c <pclose@plt+0x13460>
   26b78:	mov	r0, r5
   26b7c:	add	sp, sp, #8
   26b80:	pop	{r4, r5, r6, r7, r8, pc}
   26b84:	strdeq	ip, [r2], -r8
   26b88:	andeq	lr, r3, ip, lsr r8
   26b8c:	andeq	r5, r2, r0, lsl #20
   26b90:	strdeq	ip, [r2], -r4
   26b94:	muleq	r2, r8, r7
   26b98:	andeq	ip, r2, r0, lsl #22
   26b9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26ba0:	subs	r7, r1, #0
   26ba4:	ldr	r8, [pc, #684]	; 26e58 <pclose@plt+0x13bac>
   26ba8:	sub	sp, sp, #48	; 0x30
   26bac:	mov	r4, r0
   26bb0:	ldr	r1, [r8]
   26bb4:	mov	r9, r2
   26bb8:	mov	r6, r3
   26bbc:	str	r1, [sp, #44]	; 0x2c
   26bc0:	beq	26d08 <pclose@plt+0x13a5c>
   26bc4:	cmp	r0, #0
   26bc8:	beq	26c68 <pclose@plt+0x139bc>
   26bcc:	ldrb	r3, [r0]
   26bd0:	cmp	r3, #45	; 0x2d
   26bd4:	beq	26c5c <pclose@plt+0x139b0>
   26bd8:	mov	r2, #1
   26bdc:	mov	r1, #0
   26be0:	mov	r0, r4
   26be4:	bl	1d238 <pclose@plt+0x9f8c>
   26be8:	cmn	r0, #1
   26bec:	bne	26dbc <pclose@plt+0x13b10>
   26bf0:	cmp	r9, #0
   26bf4:	bne	26d18 <pclose@plt+0x13a6c>
   26bf8:	ldr	r3, [pc, #604]	; 26e5c <pclose@plt+0x13bb0>
   26bfc:	ldr	r5, [r3]
   26c00:	cmp	r5, #0
   26c04:	beq	26c34 <pclose@plt+0x13988>
   26c08:	ldr	r7, [r5, #4]
   26c0c:	cmn	r7, #1
   26c10:	beq	26c28 <pclose@plt+0x1397c>
   26c14:	mov	r1, r4
   26c18:	add	r0, r5, #8
   26c1c:	bl	12a24 <strcmp@plt>
   26c20:	cmp	r0, #0
   26c24:	beq	26dd0 <pclose@plt+0x13b24>
   26c28:	ldr	r5, [r5]
   26c2c:	cmp	r5, #0
   26c30:	bne	26c08 <pclose@plt+0x1395c>
   26c34:	ldr	sl, [pc, #548]	; 26e60 <pclose@plt+0x13bb4>
   26c38:	ldr	r3, [sl]
   26c3c:	cmp	r3, #0
   26c40:	bne	26e34 <pclose@plt+0x13b88>
   26c44:	mov	r1, r6
   26c48:	mov	r2, #0
   26c4c:	mov	r0, r4
   26c50:	bl	26670 <pclose@plt+0x133c4>
   26c54:	mov	r7, r0
   26c58:	b	26d2c <pclose@plt+0x13a80>
   26c5c:	ldrb	r3, [r0, #1]
   26c60:	cmp	r3, #0
   26c64:	bne	26bd8 <pclose@plt+0x1392c>
   26c68:	ldr	r3, [pc, #500]	; 26e64 <pclose@plt+0x13bb8>
   26c6c:	cmp	r9, #0
   26c70:	mov	r1, #8192	; 0x2000
   26c74:	mov	r0, r9
   26c78:	moveq	r7, #0
   26c7c:	ldr	r4, [pc, #484]	; 26e68 <pclose@plt+0x13bbc>
   26c80:	movne	r4, r3
   26c84:	bl	26a0c <pclose@plt+0x13760>
   26c88:	ldr	sl, [pc, #464]	; 26e60 <pclose@plt+0x13bb4>
   26c8c:	mov	r6, r0
   26c90:	mov	r0, r4
   26c94:	bl	12e8c <strlen@plt>
   26c98:	mov	r9, r0
   26c9c:	add	r0, r0, #24
   26ca0:	bl	129a0 <gcry_xmalloc@plt>
   26ca4:	mov	r3, #1
   26ca8:	add	r2, r9, r3
   26cac:	mov	r1, r4
   26cb0:	str	r7, [r0]
   26cb4:	str	r3, [r0, #16]
   26cb8:	mov	r5, r0
   26cbc:	add	r0, r0, #20
   26cc0:	bl	12b2c <memcpy@plt>
   26cc4:	ldr	r3, [sl]
   26cc8:	ldr	r2, [pc, #412]	; 26e6c <pclose@plt+0x13bc0>
   26ccc:	cmp	r3, #0
   26cd0:	mov	r3, #0
   26cd4:	str	r5, [r6, #64]	; 0x40
   26cd8:	str	r2, [r6, #60]	; 0x3c
   26cdc:	str	r3, [r5, #12]
   26ce0:	str	r3, [r5, #4]
   26ce4:	str	r3, [r5, #8]
   26ce8:	bne	26d84 <pclose@plt+0x13ad8>
   26cec:	ldr	r2, [sp, #44]	; 0x2c
   26cf0:	ldr	r3, [r8]
   26cf4:	mov	r0, r6
   26cf8:	cmp	r2, r3
   26cfc:	bne	26e54 <pclose@plt+0x13ba8>
   26d00:	add	sp, sp, #48	; 0x30
   26d04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d08:	cmp	r0, #0
   26d0c:	bne	26bf0 <pclose@plt+0x13944>
   26d10:	mov	r6, #0
   26d14:	b	26cec <pclose@plt+0x13a40>
   26d18:	mov	r1, r6
   26d1c:	ldr	r2, [sp, #80]	; 0x50
   26d20:	mov	r0, r4
   26d24:	bl	26670 <pclose@plt+0x133c4>
   26d28:	mov	r7, r0
   26d2c:	cmn	r7, #1
   26d30:	beq	26d10 <pclose@plt+0x13a64>
   26d34:	ldr	sl, [pc, #292]	; 26e60 <pclose@plt+0x13bb4>
   26d38:	mov	r1, #8192	; 0x2000
   26d3c:	mov	r0, r9
   26d40:	bl	26a0c <pclose@plt+0x13760>
   26d44:	mov	r6, r0
   26d48:	mov	r0, r4
   26d4c:	bl	12e8c <strlen@plt>
   26d50:	add	r0, r0, #24
   26d54:	bl	129a0 <gcry_xmalloc@plt>
   26d58:	mov	r3, #0
   26d5c:	mov	r1, r4
   26d60:	str	r3, [r0, #16]
   26d64:	str	r7, [r0]
   26d68:	mov	r5, r0
   26d6c:	add	r0, r0, #20
   26d70:	bl	12cdc <strcpy@plt>
   26d74:	mov	r0, r4
   26d78:	bl	12ff4 <gcry_xstrdup@plt>
   26d7c:	str	r0, [r6, #72]	; 0x48
   26d80:	b	26cc4 <pclose@plt+0x13a18>
   26d84:	add	r1, sp, #12
   26d88:	mov	r0, r6
   26d8c:	ldr	r7, [r6, #80]	; 0x50
   26d90:	ldr	r9, [r6, #84]	; 0x54
   26d94:	bl	25f58 <pclose@plt+0x12cac>
   26d98:	ldr	r3, [r5]
   26d9c:	mov	r2, r9
   26da0:	str	r3, [sp, #4]
   26da4:	mov	r1, r7
   26da8:	mov	r3, r4
   26dac:	str	r0, [sp]
   26db0:	ldr	r0, [pc, #184]	; 26e70 <pclose@plt+0x13bc4>
   26db4:	bl	1cafc <pclose@plt+0x9850>
   26db8:	b	26cec <pclose@plt+0x13a40>
   26dbc:	mov	r1, r6
   26dc0:	mov	r2, #0
   26dc4:	bl	26aa4 <pclose@plt+0x137f8>
   26dc8:	mov	r6, r0
   26dcc:	b	26cec <pclose@plt+0x13a40>
   26dd0:	ldr	sl, [pc, #136]	; 26e60 <pclose@plt+0x13bb4>
   26dd4:	mvn	r3, #0
   26dd8:	str	r3, [r5, #4]
   26ddc:	ldr	r3, [sl]
   26de0:	cmp	r3, #0
   26de4:	bne	26e44 <pclose@plt+0x13b98>
   26de8:	mov	r6, #0
   26dec:	mov	r2, #0
   26df0:	mov	r3, #0
   26df4:	str	r6, [sp]
   26df8:	mov	r0, r7
   26dfc:	bl	12cac <lseek64@plt>
   26e00:	mvn	r3, #0
   26e04:	mvn	r2, #0
   26e08:	cmp	r1, r3
   26e0c:	cmpeq	r0, r2
   26e10:	bne	26d38 <pclose@plt+0x13a8c>
   26e14:	bl	12f10 <__errno_location@plt>
   26e18:	ldr	r0, [r0]
   26e1c:	bl	12db4 <strerror@plt>
   26e20:	mov	r1, r7
   26e24:	mov	r2, r0
   26e28:	ldr	r0, [pc, #68]	; 26e74 <pclose@plt+0x13bc8>
   26e2c:	bl	1c9b0 <pclose@plt+0x9704>
   26e30:	b	26cec <pclose@plt+0x13a40>
   26e34:	mov	r1, r4
   26e38:	ldr	r0, [pc, #56]	; 26e78 <pclose@plt+0x13bcc>
   26e3c:	bl	1cafc <pclose@plt+0x9850>
   26e40:	b	26c44 <pclose@plt+0x13998>
   26e44:	mov	r1, r4
   26e48:	ldr	r0, [pc, #44]	; 26e7c <pclose@plt+0x13bd0>
   26e4c:	bl	1cafc <pclose@plt+0x9850>
   26e50:	b	26de8 <pclose@plt+0x13b3c>
   26e54:	bl	12bb0 <__stack_chk_fail@plt>
   26e58:	andeq	sp, r3, r0, asr #21
   26e5c:	strdeq	lr, [r3], -r0
   26e60:	andeq	lr, r3, ip, lsr r8
   26e64:	andeq	ip, r2, r0, asr #8
   26e68:	andeq	ip, r2, ip, asr #8
   26e6c:	andeq	r5, r2, r0, lsl #20
   26e70:	andeq	ip, r2, r8, ror fp
   26e74:	andeq	ip, r2, r0, asr #22
   26e78:	andeq	ip, r2, r8, asr fp
   26e7c:	andeq	ip, r2, ip, lsl fp
   26e80:	ldr	r3, [pc, #324]	; 26fcc <pclose@plt+0x13d20>
   26e84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e88:	sub	sp, sp, #52	; 0x34
   26e8c:	ldr	r3, [r3]
   26e90:	mov	r6, #0
   26e94:	subs	r4, r0, #0
   26e98:	str	r6, [sp, #8]
   26e9c:	str	r3, [sp, #44]	; 0x2c
   26ea0:	beq	26fa4 <pclose@plt+0x13cf8>
   26ea4:	ldr	r8, [pc, #292]	; 26fd0 <pclose@plt+0x13d24>
   26ea8:	ldr	sl, [pc, #292]	; 26fd4 <pclose@plt+0x13d28>
   26eac:	ldr	r9, [pc, #292]	; 26fd8 <pclose@plt+0x13d2c>
   26eb0:	b	26f38 <pclose@plt+0x13c8c>
   26eb4:	ldr	r7, [r4, #60]	; 0x3c
   26eb8:	cmp	r7, #0
   26ebc:	beq	26f00 <pclose@plt+0x13c54>
   26ec0:	add	r3, sp, #8
   26ec4:	ldr	r2, [r4, #76]	; 0x4c
   26ec8:	ldr	r0, [r4, #64]	; 0x40
   26ecc:	mov	r1, #2
   26ed0:	str	r3, [sp]
   26ed4:	mov	r3, #0
   26ed8:	blx	r7
   26edc:	subs	r7, r0, #0
   26ee0:	beq	26f00 <pclose@plt+0x13c54>
   26ee4:	mov	r0, r6
   26ee8:	bl	13120 <gpg_strerror@plt>
   26eec:	mov	r1, r0
   26ef0:	mov	r0, r9
   26ef4:	bl	1c9b0 <pclose@plt+0x9704>
   26ef8:	cmp	r6, #0
   26efc:	moveq	r6, r7
   26f00:	ldr	r0, [r4, #72]	; 0x48
   26f04:	bl	12b50 <gcry_free@plt>
   26f08:	ldr	r0, [r4, #48]	; 0x30
   26f0c:	cmp	r0, #0
   26f10:	beq	26f28 <pclose@plt+0x13c7c>
   26f14:	ldr	r2, [r4, #36]	; 0x24
   26f18:	mov	r1, #0
   26f1c:	bl	12f58 <memset@plt>
   26f20:	ldr	r0, [r4, #48]	; 0x30
   26f24:	bl	12b50 <gcry_free@plt>
   26f28:	mov	r0, r4
   26f2c:	bl	12b50 <gcry_free@plt>
   26f30:	subs	r4, r5, #0
   26f34:	beq	26fa8 <pclose@plt+0x13cfc>
   26f38:	ldr	r3, [r4]
   26f3c:	ldr	r5, [r4, #76]	; 0x4c
   26f40:	cmp	r3, #2
   26f44:	beq	26f80 <pclose@plt+0x13cd4>
   26f48:	ldr	r3, [r8]
   26f4c:	cmp	r3, #0
   26f50:	beq	26eb4 <pclose@plt+0x13c08>
   26f54:	add	r1, sp, #12
   26f58:	mov	r0, r4
   26f5c:	ldr	r7, [r4, #80]	; 0x50
   26f60:	ldr	fp, [r4, #84]	; 0x54
   26f64:	bl	25f58 <pclose@plt+0x12cac>
   26f68:	mov	r2, fp
   26f6c:	mov	r1, r7
   26f70:	mov	r3, r0
   26f74:	mov	r0, sl
   26f78:	bl	1cafc <pclose@plt+0x9850>
   26f7c:	b	26eb4 <pclose@plt+0x13c08>
   26f80:	mov	r0, r4
   26f84:	bl	258e4 <pclose@plt+0x12638>
   26f88:	subs	r6, r0, #0
   26f8c:	beq	26f48 <pclose@plt+0x13c9c>
   26f90:	bl	13120 <gpg_strerror@plt>
   26f94:	mov	r1, r0
   26f98:	ldr	r0, [pc, #60]	; 26fdc <pclose@plt+0x13d30>
   26f9c:	bl	1c9b0 <pclose@plt+0x9704>
   26fa0:	b	26f48 <pclose@plt+0x13c9c>
   26fa4:	mov	r6, r4
   26fa8:	ldr	r3, [pc, #28]	; 26fcc <pclose@plt+0x13d20>
   26fac:	ldr	r2, [sp, #44]	; 0x2c
   26fb0:	mov	r0, r6
   26fb4:	ldr	r3, [r3]
   26fb8:	cmp	r2, r3
   26fbc:	bne	26fc8 <pclose@plt+0x13d1c>
   26fc0:	add	sp, sp, #52	; 0x34
   26fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fc8:	bl	12bb0 <__stack_chk_fail@plt>
   26fcc:	andeq	sp, r3, r0, asr #21
   26fd0:	andeq	lr, r3, ip, lsr r8
   26fd4:	andeq	ip, r2, r4, asr #23
   26fd8:	andeq	ip, r2, r0, ror #23
   26fdc:	andeq	ip, r2, r0, lsr #23
   26fe0:	push	{r4, r5, r6, r7, r8, lr}
   26fe4:	sub	sp, sp, #16
   26fe8:	ldr	r8, [pc, #172]	; 2709c <pclose@plt+0x13df0>
   26fec:	subs	r7, r0, #0
   26ff0:	ldr	r3, [r8]
   26ff4:	str	r3, [sp, #12]
   26ff8:	beq	27044 <pclose@plt+0x13d98>
   26ffc:	ldr	r3, [r7]
   27000:	cmp	r3, #2
   27004:	beq	27064 <pclose@plt+0x13db8>
   27008:	mov	r4, r7
   2700c:	add	r6, sp, #8
   27010:	ldr	r5, [r4, #60]	; 0x3c
   27014:	ldr	r2, [r4, #76]	; 0x4c
   27018:	cmp	r5, #0
   2701c:	moveq	r4, r2
   27020:	beq	2703c <pclose@plt+0x13d90>
   27024:	ldr	r0, [r4, #64]	; 0x40
   27028:	mov	r3, #0
   2702c:	str	r6, [sp]
   27030:	mov	r1, #6
   27034:	blx	r5
   27038:	ldr	r4, [r4, #76]	; 0x4c
   2703c:	cmp	r4, #0
   27040:	bne	27010 <pclose@plt+0x13d64>
   27044:	mov	r0, r7
   27048:	bl	26e80 <pclose@plt+0x13bd4>
   2704c:	ldr	r2, [sp, #12]
   27050:	ldr	r3, [r8]
   27054:	cmp	r2, r3
   27058:	bne	27098 <pclose@plt+0x13dec>
   2705c:	add	sp, sp, #16
   27060:	pop	{r4, r5, r6, r7, r8, pc}
   27064:	ldr	r3, [r7, #72]	; 0x48
   27068:	cmp	r3, #0
   2706c:	beq	27088 <pclose@plt+0x13ddc>
   27070:	ldrb	r2, [r3]
   27074:	cmp	r2, #0
   27078:	beq	27008 <pclose@plt+0x13d5c>
   2707c:	mov	r0, r3
   27080:	bl	1315c <remove@plt>
   27084:	b	27008 <pclose@plt+0x13d5c>
   27088:	bl	2697c <pclose@plt+0x136d0>
   2708c:	subs	r3, r0, #0
   27090:	beq	27008 <pclose@plt+0x13d5c>
   27094:	b	27070 <pclose@plt+0x13dc4>
   27098:	bl	12bb0 <__stack_chk_fail@plt>
   2709c:	andeq	sp, r3, r0, asr #21
   270a0:	mov	r1, #8192	; 0x2000
   270a4:	mov	r0, #3
   270a8:	b	26a0c <pclose@plt+0x13760>
   270ac:	push	{r4, r5, r6, lr}
   270b0:	mov	r4, r0
   270b4:	mov	r0, #1
   270b8:	mov	r6, r1
   270bc:	bl	26a0c <pclose@plt+0x13760>
   270c0:	ldr	r3, [r0, #36]	; 0x24
   270c4:	cmp	r3, r6
   270c8:	bne	27104 <pclose@plt+0x13e58>
   270cc:	cmp	r6, #0
   270d0:	addne	r5, r4, r6
   270d4:	subne	r5, r5, #1
   270d8:	subne	r3, r4, #1
   270dc:	rsbne	lr, r4, #1
   270e0:	beq	270fc <pclose@plt+0x13e50>
   270e4:	add	r2, lr, r3
   270e8:	ldrb	ip, [r3, #1]!
   270ec:	ldr	r1, [r0, #48]	; 0x30
   270f0:	cmp	r3, r5
   270f4:	strb	ip, [r1, r2]
   270f8:	bne	270e4 <pclose@plt+0x13e38>
   270fc:	str	r6, [r0, #44]	; 0x2c
   27100:	pop	{r4, r5, r6, pc}
   27104:	ldr	r3, [pc, #12]	; 27118 <pclose@plt+0x13e6c>
   27108:	ldr	r2, [pc, #12]	; 2711c <pclose@plt+0x13e70>
   2710c:	ldr	r1, [pc, #12]	; 27120 <pclose@plt+0x13e74>
   27110:	ldr	r0, [pc, #12]	; 27124 <pclose@plt+0x13e78>
   27114:	bl	13294 <__assert_fail@plt>
   27118:	andeq	ip, r2, ip, lsl r5
   2711c:	andeq	r0, r0, sl, asr #9
   27120:	andeq	ip, r2, ip, ror #12
   27124:	andeq	ip, r2, r4, lsl #24
   27128:	cmp	r0, #0
   2712c:	beq	27164 <pclose@plt+0x13eb8>
   27130:	ldrb	r3, [r0]
   27134:	cmp	r3, #45	; 0x2d
   27138:	bne	27148 <pclose@plt+0x13e9c>
   2713c:	ldrb	r3, [r0, #1]
   27140:	cmp	r3, #0
   27144:	beq	27164 <pclose@plt+0x13eb8>
   27148:	push	{r4, lr}
   2714c:	mov	r2, #1
   27150:	mov	r1, #0
   27154:	bl	1d238 <pclose@plt+0x9f8c>
   27158:	adds	r0, r0, #1
   2715c:	movne	r0, #1
   27160:	pop	{r4, pc}
   27164:	mov	r0, #1
   27168:	bx	lr
   2716c:	push	{lr}		; (str lr, [sp, #-4]!)
   27170:	sub	sp, sp, #12
   27174:	mov	r2, #0
   27178:	str	r2, [sp]
   2717c:	ldr	r3, [pc, #12]	; 27190 <pclose@plt+0x13ee4>
   27180:	mov	r1, #1
   27184:	bl	26b9c <pclose@plt+0x138f0>
   27188:	add	sp, sp, #12
   2718c:	pop	{pc}		; (ldr pc, [sp], #4)
   27190:	andeq	r9, r2, ip, lsr #18
   27194:	push	{lr}		; (str lr, [sp, #-4]!)
   27198:	sub	sp, sp, #12
   2719c:	ldr	r3, [pc, #20]	; 271b8 <pclose@plt+0x13f0c>
   271a0:	str	r1, [sp]
   271a4:	mov	r2, #2
   271a8:	mov	r1, #1
   271ac:	bl	26b9c <pclose@plt+0x138f0>
   271b0:	add	sp, sp, #12
   271b4:	pop	{pc}		; (ldr pc, [sp], #4)
   271b8:	andeq	r9, r2, r0, ror sp
   271bc:	push	{lr}		; (str lr, [sp, #-4]!)
   271c0:	sub	sp, sp, #12
   271c4:	mov	r1, #0
   271c8:	str	r1, [sp]
   271cc:	ldr	r3, [pc, #12]	; 271e0 <pclose@plt+0x13f34>
   271d0:	mov	r2, #2
   271d4:	bl	26b9c <pclose@plt+0x138f0>
   271d8:	add	sp, sp, #12
   271dc:	pop	{pc}		; (ldr pc, [sp], #4)
   271e0:	andeq	ip, r2, r8, lsl ip
   271e4:	mov	r2, #0
   271e8:	b	26aa4 <pclose@plt+0x137f8>
   271ec:	mov	r2, #1
   271f0:	b	26aa4 <pclose@plt+0x137f8>
   271f4:	mov	r3, r1
   271f8:	push	{r4, r5, r6, r7, r8, lr}
   271fc:	mov	r1, #119	; 0x77
   27200:	sub	sp, sp, #8
   27204:	mov	r6, r0
   27208:	mov	r0, r3
   2720c:	mov	r7, r2
   27210:	bl	12eb0 <strchr@plt>
   27214:	mov	r1, #8192	; 0x2000
   27218:	cmp	r0, #0
   2721c:	movne	r0, #2
   27220:	moveq	r0, #0
   27224:	bl	26a0c <pclose@plt+0x13760>
   27228:	mov	r5, r0
   2722c:	mov	r0, #54	; 0x36
   27230:	bl	129d0 <gcry_malloc@plt>
   27234:	mov	ip, #1
   27238:	mov	r1, ip
   2723c:	ldr	r3, [pc, #120]	; 272bc <pclose@plt+0x14010>
   27240:	mvn	r2, #0
   27244:	str	r6, [sp]
   27248:	mov	r4, r0
   2724c:	add	r8, r0, #20
   27250:	mov	r0, r8
   27254:	str	r6, [r4]
   27258:	str	r7, [r4, #4]
   2725c:	str	ip, [r4, #16]
   27260:	bl	12f34 <__sprintf_chk@plt>
   27264:	ldr	r1, [pc, #84]	; 272c0 <pclose@plt+0x14014>
   27268:	mov	r3, #0
   2726c:	ldr	r2, [pc, #80]	; 272c4 <pclose@plt+0x14018>
   27270:	ldr	r1, [r1]
   27274:	str	r4, [r5, #64]	; 0x40
   27278:	cmp	r1, r3
   2727c:	str	r2, [r5, #60]	; 0x3c
   27280:	str	r3, [r4, #12]
   27284:	str	r3, [r4, #8]
   27288:	beq	272b0 <pclose@plt+0x14004>
   2728c:	ldr	r0, [pc, #52]	; 272c8 <pclose@plt+0x1401c>
   27290:	cmp	r7, #0
   27294:	ldr	r1, [r5, #80]	; 0x50
   27298:	ldr	r2, [r5, #84]	; 0x54
   2729c:	ldr	r3, [pc, #40]	; 272cc <pclose@plt+0x14020>
   272a0:	str	r8, [sp]
   272a4:	movne	r3, r0
   272a8:	ldr	r0, [pc, #32]	; 272d0 <pclose@plt+0x14024>
   272ac:	bl	1cafc <pclose@plt+0x9850>
   272b0:	mov	r0, r5
   272b4:	add	sp, sp, #8
   272b8:	pop	{r4, r5, r6, r7, r8, pc}
   272bc:	andeq	ip, r2, ip, lsl ip
   272c0:	andeq	lr, r3, ip, lsr r8
   272c4:	andeq	r5, r2, r0, lsr #26
   272c8:	strdeq	ip, [r2], -r4
   272cc:	muleq	r2, r8, r7
   272d0:	andeq	ip, r2, r4, lsr #24
   272d4:	b	271e4 <pclose@plt+0x13f38>
   272d8:	push	{r4, r5, r6, r7, r8, lr}
   272dc:	sub	sp, sp, #48	; 0x30
   272e0:	ldr	r4, [pc, #212]	; 273bc <pclose@plt+0x14110>
   272e4:	cmp	r1, #1
   272e8:	ldr	ip, [r4]
   272ec:	str	ip, [sp, #44]	; 0x2c
   272f0:	beq	27310 <pclose@plt+0x14064>
   272f4:	bl	2670c <pclose@plt+0x13460>
   272f8:	ldr	r2, [sp, #44]	; 0x2c
   272fc:	ldr	r3, [r4]
   27300:	cmp	r2, r3
   27304:	bne	273b8 <pclose@plt+0x1410c>
   27308:	add	sp, sp, #48	; 0x30
   2730c:	pop	{r4, r5, r6, r7, r8, pc}
   27310:	ldr	r3, [pc, #168]	; 273c0 <pclose@plt+0x14114>
   27314:	mov	r5, r0
   27318:	mov	r6, r2
   2731c:	ldr	r3, [r3]
   27320:	cmp	r3, #0
   27324:	bne	27368 <pclose@plt+0x140bc>
   27328:	cmp	r5, #0
   2732c:	beq	27360 <pclose@plt+0x140b4>
   27330:	ldr	r2, [r5, #76]	; 0x4c
   27334:	cmp	r2, #0
   27338:	bne	27344 <pclose@plt+0x14098>
   2733c:	b	273a0 <pclose@plt+0x140f4>
   27340:	mov	r2, r3
   27344:	ldr	r3, [r2, #76]	; 0x4c
   27348:	cmp	r3, #0
   2734c:	bne	27340 <pclose@plt+0x14094>
   27350:	ldr	r3, [pc, #108]	; 273c4 <pclose@plt+0x14118>
   27354:	ldr	r1, [r2, #60]	; 0x3c
   27358:	cmp	r1, r3
   2735c:	beq	273a8 <pclose@plt+0x140fc>
   27360:	mvn	r0, #0
   27364:	b	272f8 <pclose@plt+0x1404c>
   27368:	cmp	r0, #0
   2736c:	mvneq	r7, #0
   27370:	add	r1, sp, #12
   27374:	ldrne	r7, [r0, #80]	; 0x50
   27378:	ldrne	r8, [r0, #84]	; 0x54
   2737c:	moveq	r8, r7
   27380:	bl	25f58 <pclose@plt+0x12cac>
   27384:	str	r6, [sp]
   27388:	mov	r2, r8
   2738c:	mov	r1, r7
   27390:	mov	r3, r0
   27394:	ldr	r0, [pc, #44]	; 273c8 <pclose@plt+0x1411c>
   27398:	bl	1cafc <pclose@plt+0x9850>
   2739c:	b	27328 <pclose@plt+0x1407c>
   273a0:	mov	r2, r5
   273a4:	b	27350 <pclose@plt+0x140a4>
   273a8:	ldr	r3, [r2, #64]	; 0x40
   273ac:	mov	r0, #0
   273b0:	str	r6, [r3, #4]
   273b4:	b	272f8 <pclose@plt+0x1404c>
   273b8:	bl	12bb0 <__stack_chk_fail@plt>
   273bc:	andeq	sp, r3, r0, asr #21
   273c0:	andeq	lr, r3, ip, lsr r8
   273c4:	andeq	r5, r2, r0, lsl #20
   273c8:	andeq	ip, r2, r0, asr #24
   273cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   273d0:	sub	sp, sp, #48	; 0x30
   273d4:	ldr	r7, [pc, #492]	; 275c8 <pclose@plt+0x1431c>
   273d8:	ldr	lr, [r0]
   273dc:	mov	ip, #0
   273e0:	cmp	lr, #2
   273e4:	ldr	lr, [r7]
   273e8:	mov	r4, r0
   273ec:	mov	r6, r1
   273f0:	mov	r9, r2
   273f4:	mov	r8, r3
   273f8:	str	lr, [sp, #44]	; 0x2c
   273fc:	str	ip, [sp, #8]
   27400:	beq	27588 <pclose@plt+0x142dc>
   27404:	ldr	r3, [r4, #84]	; 0x54
   27408:	cmp	r3, #63	; 0x3f
   2740c:	bgt	275a0 <pclose@plt+0x142f4>
   27410:	mov	r0, #88	; 0x58
   27414:	bl	129a0 <gcry_xmalloc@plt>
   27418:	mov	r2, #88	; 0x58
   2741c:	mov	r1, r4
   27420:	mov	r5, r0
   27424:	bl	12b2c <memcpy@plt>
   27428:	ldr	r0, [r4, #72]	; 0x48
   2742c:	cmp	r0, #0
   27430:	beq	27438 <pclose@plt+0x1418c>
   27434:	bl	12ff4 <gcry_xstrdup@plt>
   27438:	ldr	r2, [r4]
   2743c:	mov	r3, #0
   27440:	cmp	r2, #3
   27444:	str	r0, [r5, #72]	; 0x48
   27448:	str	r3, [r4, #60]	; 0x3c
   2744c:	str	r3, [r4, #64]	; 0x40
   27450:	str	r3, [r4, #68]	; 0x44
   27454:	str	r3, [r4, #52]	; 0x34
   27458:	beq	27534 <pclose@plt+0x14288>
   2745c:	cmp	r2, #1
   27460:	moveq	r2, #8192	; 0x2000
   27464:	ldrne	r0, [r4, #36]	; 0x24
   27468:	moveq	r0, r2
   2746c:	streq	r3, [r4]
   27470:	streq	r2, [r4, #36]	; 0x24
   27474:	bl	129a0 <gcry_xmalloc@plt>
   27478:	ldr	sl, [pc, #332]	; 275cc <pclose@plt+0x14320>
   2747c:	ldr	r3, [r5, #24]
   27480:	ldr	r1, [r5, #16]
   27484:	ldr	r2, [r5, #20]
   27488:	adds	r1, r3, r1
   2748c:	ldr	r3, [r5, #28]
   27490:	str	r5, [r4, #76]	; 0x4c
   27494:	ldr	ip, [sl]
   27498:	ldr	r5, [r5, #84]	; 0x54
   2749c:	adc	r3, r3, r2
   274a0:	str	r9, [r4, #64]	; 0x40
   274a4:	str	r8, [r4, #68]	; 0x44
   274a8:	mov	r9, #0
   274ac:	mov	r8, #0
   274b0:	add	r5, r5, #1
   274b4:	str	r3, [r4, #28]
   274b8:	cmp	ip, #0
   274bc:	mov	r3, #0
   274c0:	str	r6, [r4, #60]	; 0x3c
   274c4:	str	r1, [r4, #24]
   274c8:	str	r5, [r4, #84]	; 0x54
   274cc:	strd	r8, [r4, #16]
   274d0:	strd	r8, [r4, #8]
   274d4:	str	r3, [r4, #44]	; 0x2c
   274d8:	str	r3, [r4, #40]	; 0x28
   274dc:	str	r3, [r4, #32]
   274e0:	str	r0, [r4, #48]	; 0x30
   274e4:	bne	27548 <pclose@plt+0x1429c>
   274e8:	cmp	r6, #0
   274ec:	moveq	r5, r6
   274f0:	beq	27518 <pclose@plt+0x1426c>
   274f4:	add	r3, sp, #8
   274f8:	str	r3, [sp]
   274fc:	mov	r1, #1
   27500:	mov	r3, #0
   27504:	ldr	r2, [r4, #76]	; 0x4c
   27508:	ldr	r0, [r4, #64]	; 0x40
   2750c:	blx	r6
   27510:	subs	r5, r0, #0
   27514:	bne	275b0 <pclose@plt+0x14304>
   27518:	ldr	r2, [sp, #44]	; 0x2c
   2751c:	ldr	r3, [r7]
   27520:	mov	r0, r5
   27524:	cmp	r2, r3
   27528:	bne	275c4 <pclose@plt+0x14318>
   2752c:	add	sp, sp, #48	; 0x30
   27530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27534:	mov	r3, #2
   27538:	mov	r0, #8192	; 0x2000
   2753c:	str	r3, [r4]
   27540:	str	r0, [r4, #36]	; 0x24
   27544:	b	27474 <pclose@plt+0x141c8>
   27548:	add	r1, sp, #12
   2754c:	mov	r0, r4
   27550:	ldr	r6, [r4, #80]	; 0x50
   27554:	bl	25f58 <pclose@plt+0x12cac>
   27558:	mov	r2, r5
   2755c:	mov	r1, r6
   27560:	mov	r3, r0
   27564:	ldr	r0, [pc, #100]	; 275d0 <pclose@plt+0x14324>
   27568:	bl	1cafc <pclose@plt+0x9850>
   2756c:	ldr	r3, [sl]
   27570:	cmp	r3, #0
   27574:	beq	27580 <pclose@plt+0x142d4>
   27578:	mov	r0, r4
   2757c:	bl	25fd8 <pclose@plt+0x12d2c>
   27580:	ldr	r6, [r4, #60]	; 0x3c
   27584:	b	274e8 <pclose@plt+0x1423c>
   27588:	bl	258e4 <pclose@plt+0x12638>
   2758c:	subs	r5, r0, #0
   27590:	bne	27518 <pclose@plt+0x1426c>
   27594:	ldr	r3, [r4, #84]	; 0x54
   27598:	cmp	r3, #63	; 0x3f
   2759c:	ble	27410 <pclose@plt+0x14164>
   275a0:	ldr	r0, [pc, #44]	; 275d4 <pclose@plt+0x14328>
   275a4:	bl	1c9b0 <pclose@plt+0x9704>
   275a8:	mov	r5, #89	; 0x59
   275ac:	b	27518 <pclose@plt+0x1426c>
   275b0:	bl	13120 <gpg_strerror@plt>
   275b4:	mov	r1, r0
   275b8:	ldr	r0, [pc, #24]	; 275d8 <pclose@plt+0x1432c>
   275bc:	bl	1c9b0 <pclose@plt+0x9704>
   275c0:	b	27518 <pclose@plt+0x1426c>
   275c4:	bl	12bb0 <__stack_chk_fail@plt>
   275c8:	andeq	sp, r3, r0, asr #21
   275cc:	andeq	lr, r3, ip, lsr r8
   275d0:	muleq	r2, r8, ip
   275d4:	andeq	ip, r2, r8, ror #24
   275d8:			; <UNDEFINED> instruction: 0x0002ccb0
   275dc:	mov	r3, #0
   275e0:	b	273cc <pclose@plt+0x14120>
   275e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   275e8:	mov	r6, r1
   275ec:	ldr	sl, [pc, #596]	; 27848 <pclose@plt+0x1459c>
   275f0:	ldr	r9, [pc, #596]	; 2784c <pclose@plt+0x145a0>
   275f4:	sub	sp, sp, #48	; 0x30
   275f8:	ldr	r3, [sl]
   275fc:	ldr	r1, [r9]
   27600:	cmp	r3, #0
   27604:	mov	r3, #0
   27608:	mov	r8, r2
   2760c:	str	r1, [sp, #44]	; 0x2c
   27610:	str	r3, [sp, #8]
   27614:	mov	r7, r0
   27618:	bne	27748 <pclose@plt+0x1449c>
   2761c:	ldr	r2, [r7]
   27620:	bic	r3, r2, #2
   27624:	cmp	r3, #1
   27628:	bne	27658 <pclose@plt+0x143ac>
   2762c:	ldr	r3, [r7, #76]	; 0x4c
   27630:	cmp	r3, #0
   27634:	bne	27814 <pclose@plt+0x14568>
   27638:	mov	r5, #0
   2763c:	ldr	r2, [sp, #44]	; 0x2c
   27640:	ldr	r3, [r9]
   27644:	mov	r0, r5
   27648:	cmp	r2, r3
   2764c:	bne	27828 <pclose@plt+0x1457c>
   27650:	add	sp, sp, #48	; 0x30
   27654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27658:	ldr	r5, [r7, #60]	; 0x3c
   2765c:	cmp	r5, #0
   27660:	movne	r4, r7
   27664:	bne	276c4 <pclose@plt+0x14418>
   27668:	ldr	r4, [r7, #76]	; 0x4c
   2766c:	cmp	r4, #0
   27670:	beq	2782c <pclose@plt+0x14580>
   27674:	ldr	r0, [r7, #48]	; 0x30
   27678:	bl	12b50 <gcry_free@plt>
   2767c:	ldr	r0, [r7, #72]	; 0x48
   27680:	bl	12b50 <gcry_free@plt>
   27684:	mov	r0, r7
   27688:	mov	r2, #88	; 0x58
   2768c:	mov	r1, r4
   27690:	bl	12b2c <memcpy@plt>
   27694:	mov	r0, r4
   27698:	bl	12b50 <gcry_free@plt>
   2769c:	b	2763c <pclose@plt+0x14390>
   276a0:	cmp	r8, #0
   276a4:	beq	276e0 <pclose@plt+0x14434>
   276a8:	ldr	r3, [r4, #64]	; 0x40
   276ac:	cmp	r3, r8
   276b0:	beq	276e0 <pclose@plt+0x14434>
   276b4:	ldr	r4, [r4, #76]	; 0x4c
   276b8:	cmp	r4, #0
   276bc:	beq	276d8 <pclose@plt+0x1442c>
   276c0:	ldr	r5, [r4, #60]	; 0x3c
   276c4:	cmp	r6, r5
   276c8:	beq	276a0 <pclose@plt+0x143f4>
   276cc:	ldr	r4, [r4, #76]	; 0x4c
   276d0:	cmp	r4, #0
   276d4:	bne	276c0 <pclose@plt+0x14414>
   276d8:	ldr	r0, [pc, #368]	; 27850 <pclose@plt+0x145a4>
   276dc:	bl	1cab8 <pclose@plt+0x980c>
   276e0:	cmp	r2, #2
   276e4:	beq	277d8 <pclose@plt+0x1452c>
   276e8:	cmp	r5, #0
   276ec:	ldr	r0, [r4, #64]	; 0x40
   276f0:	beq	27718 <pclose@plt+0x1446c>
   276f4:	add	r3, sp, #8
   276f8:	ldr	r2, [r4, #76]	; 0x4c
   276fc:	mov	r1, #2
   27700:	str	r3, [sp]
   27704:	mov	r3, #0
   27708:	blx	r5
   2770c:	subs	r5, r0, #0
   27710:	bne	27800 <pclose@plt+0x14554>
   27714:	ldr	r0, [r4, #64]	; 0x40
   27718:	cmp	r0, #0
   2771c:	beq	2772c <pclose@plt+0x14480>
   27720:	ldr	r3, [r4, #68]	; 0x44
   27724:	cmp	r3, #0
   27728:	bne	27774 <pclose@plt+0x144c8>
   2772c:	cmp	r7, r4
   27730:	ldr	r4, [r4, #76]	; 0x4c
   27734:	beq	27784 <pclose@plt+0x144d8>
   27738:	cmp	r4, #0
   2773c:	beq	2776c <pclose@plt+0x144c0>
   27740:	ldr	r0, [pc, #268]	; 27854 <pclose@plt+0x145a8>
   27744:	bl	1cab8 <pclose@plt+0x980c>
   27748:	add	r1, sp, #12
   2774c:	ldrd	r4, [r0, #80]	; 0x50
   27750:	bl	25f58 <pclose@plt+0x12cac>
   27754:	mov	r2, r5
   27758:	mov	r1, r4
   2775c:	mov	r3, r0
   27760:	ldr	r0, [pc, #240]	; 27858 <pclose@plt+0x145ac>
   27764:	bl	1cafc <pclose@plt+0x9850>
   27768:	b	2761c <pclose@plt+0x14370>
   2776c:	ldr	r0, [pc, #232]	; 2785c <pclose@plt+0x145b0>
   27770:	bl	1cab8 <pclose@plt+0x980c>
   27774:	bl	12b50 <gcry_free@plt>
   27778:	mov	r3, #0
   2777c:	str	r3, [r4, #64]	; 0x40
   27780:	b	2772c <pclose@plt+0x14480>
   27784:	cmp	r4, #0
   27788:	beq	27840 <pclose@plt+0x14594>
   2778c:	ldr	r0, [r7, #48]	; 0x30
   27790:	bl	12b50 <gcry_free@plt>
   27794:	ldr	r0, [r7, #72]	; 0x48
   27798:	bl	12b50 <gcry_free@plt>
   2779c:	mov	r2, #88	; 0x58
   277a0:	mov	r1, r4
   277a4:	mov	r0, r7
   277a8:	bl	12b2c <memcpy@plt>
   277ac:	mov	r0, r4
   277b0:	bl	12b50 <gcry_free@plt>
   277b4:	ldr	r3, [sl]
   277b8:	cmp	r3, #0
   277bc:	beq	27638 <pclose@plt+0x1438c>
   277c0:	ldr	r2, [r7, #84]	; 0x54
   277c4:	ldr	r1, [r7, #80]	; 0x50
   277c8:	ldr	r0, [pc, #144]	; 27860 <pclose@plt+0x145b4>
   277cc:	bl	1cafc <pclose@plt+0x9850>
   277d0:	mov	r5, #0
   277d4:	b	2763c <pclose@plt+0x14390>
   277d8:	mov	r0, r4
   277dc:	bl	258e4 <pclose@plt+0x12638>
   277e0:	subs	r5, r0, #0
   277e4:	ldreq	r5, [r4, #60]	; 0x3c
   277e8:	beq	276e8 <pclose@plt+0x1443c>
   277ec:	bl	13120 <gpg_strerror@plt>
   277f0:	mov	r1, r0
   277f4:	ldr	r0, [pc, #104]	; 27864 <pclose@plt+0x145b8>
   277f8:	bl	1c9b0 <pclose@plt+0x9704>
   277fc:	b	2763c <pclose@plt+0x14390>
   27800:	bl	13120 <gpg_strerror@plt>
   27804:	mov	r1, r0
   27808:	ldr	r0, [pc, #88]	; 27868 <pclose@plt+0x145bc>
   2780c:	bl	1c9b0 <pclose@plt+0x9704>
   27810:	b	2763c <pclose@plt+0x14390>
   27814:	ldr	r3, [pc, #80]	; 2786c <pclose@plt+0x145c0>
   27818:	ldr	r2, [pc, #80]	; 27870 <pclose@plt+0x145c4>
   2781c:	ldr	r1, [pc, #80]	; 27874 <pclose@plt+0x145c8>
   27820:	ldr	r0, [pc, #80]	; 27878 <pclose@plt+0x145cc>
   27824:	bl	13294 <__assert_fail@plt>
   27828:	bl	12bb0 <__stack_chk_fail@plt>
   2782c:	ldr	r3, [pc, #56]	; 2786c <pclose@plt+0x145c0>
   27830:	mov	r2, #1680	; 0x690
   27834:	ldr	r1, [pc, #56]	; 27874 <pclose@plt+0x145c8>
   27838:	ldr	r0, [pc, #60]	; 2787c <pclose@plt+0x145d0>
   2783c:	bl	13294 <__assert_fail@plt>
   27840:	ldr	r0, [pc, #56]	; 27880 <pclose@plt+0x145d4>
   27844:	bl	1cab8 <pclose@plt+0x980c>
   27848:	andeq	lr, r3, ip, lsr r8
   2784c:	andeq	sp, r3, r0, asr #21
   27850:	ldrdeq	ip, [r2], -r0
   27854:	muleq	r2, ip, sp
   27858:	andeq	ip, r2, ip, asr #25
   2785c:	andeq	ip, r2, r0, ror sp
   27860:	andeq	ip, r2, r4, asr sp
   27864:	strdeq	ip, [r2], -r4
   27868:	andeq	ip, r2, r0, lsr #18
   2786c:	andeq	ip, r2, r4, lsr r5
   27870:	andeq	r0, r0, sl, lsl #13
   27874:	andeq	ip, r2, ip, ror #12
   27878:	andeq	ip, r2, r4, ror #25
   2787c:	strdeq	ip, [r2], -r0
   27880:	andeq	ip, r2, r4, lsr #26
   27884:	ldr	r3, [r0]
   27888:	push	{r4, r6, r7, lr}
   2788c:	sub	r3, r3, #2
   27890:	cmp	r3, #1
   27894:	bls	27958 <pclose@plt+0x146ac>
   27898:	ldr	r3, [r0, #40]	; 0x28
   2789c:	ldr	r2, [r0, #44]	; 0x2c
   278a0:	mov	r4, r0
   278a4:	cmp	r3, r2
   278a8:	bhi	27944 <pclose@plt+0x14698>
   278ac:	ldrd	r6, [r0, #8]
   278b0:	orrs	r1, r6, r7
   278b4:	bne	278f4 <pclose@plt+0x14648>
   278b8:	cmp	r3, r2
   278bc:	bcs	2790c <pclose@plt+0x14660>
   278c0:	ldr	r0, [r4, #48]	; 0x30
   278c4:	add	r1, r3, #1
   278c8:	str	r1, [r4, #40]	; 0x28
   278cc:	ldrb	r0, [r0, r3]
   278d0:	cmp	r2, r1
   278d4:	bcc	27930 <pclose@plt+0x14684>
   278d8:	ldr	r3, [r4, #16]
   278dc:	ldr	r2, [r4, #20]
   278e0:	adds	r3, r3, #1
   278e4:	adc	r2, r2, #0
   278e8:	str	r3, [r4, #16]
   278ec:	str	r2, [r4, #20]
   278f0:	pop	{r4, r6, r7, pc}
   278f4:	ldrd	r0, [r0, #16]
   278f8:	cmp	r0, r6
   278fc:	sbcs	r1, r1, r7
   27900:	blt	278b8 <pclose@plt+0x1460c>
   27904:	mvn	r0, #0
   27908:	pop	{r4, r6, r7, pc}
   2790c:	mov	r2, #1
   27910:	mov	r1, r2
   27914:	mov	r0, r4
   27918:	bl	26068 <pclose@plt+0x12dbc>
   2791c:	cmn	r0, #1
   27920:	beq	27904 <pclose@plt+0x14658>
   27924:	ldr	r1, [r4, #40]	; 0x28
   27928:	ldr	r2, [r4, #44]	; 0x2c
   2792c:	b	278d0 <pclose@plt+0x14624>
   27930:	ldr	r3, [pc, #40]	; 27960 <pclose@plt+0x146b4>
   27934:	ldr	r2, [pc, #40]	; 27964 <pclose@plt+0x146b8>
   27938:	ldr	r1, [pc, #40]	; 27968 <pclose@plt+0x146bc>
   2793c:	ldr	r0, [pc, #40]	; 2796c <pclose@plt+0x146c0>
   27940:	bl	13294 <__assert_fail@plt>
   27944:	ldr	r3, [pc, #20]	; 27960 <pclose@plt+0x146b4>
   27948:	ldr	r2, [pc, #32]	; 27970 <pclose@plt+0x146c4>
   2794c:	ldr	r1, [pc, #20]	; 27968 <pclose@plt+0x146bc>
   27950:	ldr	r0, [pc, #20]	; 2796c <pclose@plt+0x146c0>
   27954:	bl	13294 <__assert_fail@plt>
   27958:	ldr	r0, [pc, #20]	; 27974 <pclose@plt+0x146c8>
   2795c:	bl	1cab8 <pclose@plt+0x980c>
   27960:	andeq	ip, r2, r8, asr #10
   27964:			; <UNDEFINED> instruction: 0x000007b9
   27968:	andeq	ip, r2, ip, ror #12
   2796c:	andeq	ip, r2, ip, lsl #16
   27970:	andeq	r0, r0, sp, lsr #15
   27974:	andeq	ip, r2, r0, lsl #28
   27978:	ldr	r3, [r0]
   2797c:	push	{r4, r5, r6, r7, r8, lr}
   27980:	sub	r3, r3, #2
   27984:	cmp	r3, #1
   27988:	bls	27ac0 <pclose@plt+0x14814>
   2798c:	mov	r6, r2
   27990:	ldrd	r2, [r0, #8]
   27994:	mov	r7, r0
   27998:	mov	r5, r1
   2799c:	orrs	r3, r2, r3
   279a0:	beq	279e8 <pclose@plt+0x1473c>
   279a4:	cmp	r6, #0
   279a8:	beq	27ab8 <pclose@plt+0x1480c>
   279ac:	mov	r4, #0
   279b0:	b	279c8 <pclose@plt+0x1471c>
   279b4:	cmp	r5, #0
   279b8:	add	r4, r4, #1
   279bc:	strbne	r0, [r5], #1
   279c0:	cmp	r4, r6
   279c4:	beq	27a04 <pclose@plt+0x14758>
   279c8:	mov	r0, r7
   279cc:	bl	27884 <pclose@plt+0x145d8>
   279d0:	cmn	r0, #1
   279d4:	bne	279b4 <pclose@plt+0x14708>
   279d8:	cmp	r4, #0
   279dc:	bne	27a04 <pclose@plt+0x14758>
   279e0:	mvn	r4, #0
   279e4:	b	27a04 <pclose@plt+0x14758>
   279e8:	mov	r4, #0
   279ec:	cmp	r6, r4
   279f0:	bhi	27a0c <pclose@plt+0x14760>
   279f4:	ldrd	r2, [r7, #16]
   279f8:	adds	r0, r2, r4
   279fc:	adc	r1, r3, r4, asr #31
   27a00:	strd	r0, [r7, #16]
   27a04:	mov	r0, r4
   27a08:	pop	{r4, r5, r6, r7, r8, pc}
   27a0c:	ldr	r1, [r7, #40]	; 0x28
   27a10:	ldr	r8, [r7, #44]	; 0x2c
   27a14:	cmp	r1, r8
   27a18:	bcs	27a6c <pclose@plt+0x147c0>
   27a1c:	sub	r3, r8, r1
   27a20:	sub	r8, r6, r4
   27a24:	cmp	r8, r3
   27a28:	movcs	r8, r3
   27a2c:	cmp	r5, #0
   27a30:	add	r4, r8, r4
   27a34:	addeq	r8, r8, r1
   27a38:	streq	r8, [r7, #40]	; 0x28
   27a3c:	beq	27a64 <pclose@plt+0x147b8>
   27a40:	ldr	r3, [r7, #48]	; 0x30
   27a44:	mov	r2, r8
   27a48:	add	r1, r3, r1
   27a4c:	mov	r0, r5
   27a50:	bl	12b2c <memcpy@plt>
   27a54:	ldr	r3, [r7, #40]	; 0x28
   27a58:	add	r5, r5, r8
   27a5c:	add	r8, r3, r8
   27a60:	str	r8, [r7, #40]	; 0x28
   27a64:	cmp	r4, r6
   27a68:	bcs	279f4 <pclose@plt+0x14748>
   27a6c:	mov	r2, #1
   27a70:	mov	r1, r2
   27a74:	mov	r0, r7
   27a78:	bl	26068 <pclose@plt+0x12dbc>
   27a7c:	cmn	r0, #1
   27a80:	beq	27a9c <pclose@plt+0x147f0>
   27a84:	cmp	r5, #0
   27a88:	add	r4, r4, #1
   27a8c:	strbne	r0, [r5], #1
   27a90:	cmp	r6, r4
   27a94:	bhi	279ec <pclose@plt+0x14740>
   27a98:	b	279f4 <pclose@plt+0x14748>
   27a9c:	ldrd	r2, [r7, #16]
   27aa0:	adds	r0, r2, r4
   27aa4:	adc	r1, r3, r4, asr #31
   27aa8:	cmp	r4, #0
   27aac:	strd	r0, [r7, #16]
   27ab0:	bne	27a04 <pclose@plt+0x14758>
   27ab4:	b	279e0 <pclose@plt+0x14734>
   27ab8:	mov	r4, r6
   27abc:	b	27a04 <pclose@plt+0x14758>
   27ac0:	ldr	r0, [pc]	; 27ac8 <pclose@plt+0x1481c>
   27ac4:	bl	1cab8 <pclose@plt+0x980c>
   27ac8:	andeq	ip, r2, r0, lsr lr
   27acc:	push	{r4, r5, r6, r7, r8, lr}
   27ad0:	subs	r5, r2, #0
   27ad4:	beq	27ba4 <pclose@plt+0x148f8>
   27ad8:	ldr	r3, [r0]
   27adc:	mov	r4, r0
   27ae0:	cmp	r3, #1
   27ae4:	bhi	27bb8 <pclose@plt+0x1490c>
   27ae8:	ldr	r2, [r0, #36]	; 0x24
   27aec:	mov	r6, r1
   27af0:	ldr	r3, [r0, #44]	; 0x2c
   27af4:	ldr	r1, [r0, #40]	; 0x28
   27af8:	cmp	r5, r2
   27afc:	movcs	r5, r2
   27b00:	sub	r3, r3, r1
   27b04:	cmp	r3, r5
   27b08:	bcs	27b54 <pclose@plt+0x148a8>
   27b0c:	mov	r7, #0
   27b10:	b	27b30 <pclose@plt+0x14884>
   27b14:	ldr	r3, [r4, #40]	; 0x28
   27b18:	cmp	r3, #1
   27b1c:	bne	27b90 <pclose@plt+0x148e4>
   27b20:	ldr	r3, [r4, #44]	; 0x2c
   27b24:	str	r7, [r4, #40]	; 0x28
   27b28:	cmp	r3, r5
   27b2c:	bcs	27b80 <pclose@plt+0x148d4>
   27b30:	mov	r2, r5
   27b34:	mov	r1, #0
   27b38:	mov	r0, r4
   27b3c:	bl	26068 <pclose@plt+0x12dbc>
   27b40:	cmn	r0, #1
   27b44:	bne	27b14 <pclose@plt+0x14868>
   27b48:	ldr	r1, [r4, #40]	; 0x28
   27b4c:	ldr	r3, [r4, #44]	; 0x2c
   27b50:	sub	r3, r3, r1
   27b54:	cmp	r3, r5
   27b58:	movcc	r5, r3
   27b5c:	cmp	r5, #0
   27b60:	beq	27b88 <pclose@plt+0x148dc>
   27b64:	ldr	r3, [r4, #48]	; 0x30
   27b68:	mov	r0, r6
   27b6c:	add	r1, r3, r1
   27b70:	mov	r2, r5
   27b74:	bl	12b2c <memcpy@plt>
   27b78:	mov	r0, r5
   27b7c:	pop	{r4, r5, r6, r7, r8, pc}
   27b80:	mov	r1, #0
   27b84:	b	27b54 <pclose@plt+0x148a8>
   27b88:	mvn	r5, #0
   27b8c:	b	27b78 <pclose@plt+0x148cc>
   27b90:	ldr	r3, [pc, #52]	; 27bcc <pclose@plt+0x14920>
   27b94:	ldr	r2, [pc, #52]	; 27bd0 <pclose@plt+0x14924>
   27b98:	ldr	r1, [pc, #52]	; 27bd4 <pclose@plt+0x14928>
   27b9c:	ldr	r0, [pc, #52]	; 27bd8 <pclose@plt+0x1492c>
   27ba0:	bl	13294 <__assert_fail@plt>
   27ba4:	ldr	r3, [pc, #32]	; 27bcc <pclose@plt+0x14920>
   27ba8:	ldr	r2, [pc, #44]	; 27bdc <pclose@plt+0x14930>
   27bac:	ldr	r1, [pc, #32]	; 27bd4 <pclose@plt+0x14928>
   27bb0:	ldr	r0, [pc, #40]	; 27be0 <pclose@plt+0x14934>
   27bb4:	bl	13294 <__assert_fail@plt>
   27bb8:	ldr	r3, [pc, #12]	; 27bcc <pclose@plt+0x14920>
   27bbc:	ldr	r2, [pc, #32]	; 27be4 <pclose@plt+0x14938>
   27bc0:	ldr	r1, [pc, #12]	; 27bd4 <pclose@plt+0x14928>
   27bc4:	ldr	r0, [pc, #28]	; 27be8 <pclose@plt+0x1493c>
   27bc8:	bl	13294 <__assert_fail@plt>
   27bcc:	andeq	ip, r2, r8, asr r5
   27bd0:	andeq	r0, r0, r2, lsr #16
   27bd4:	andeq	ip, r2, ip, ror #12
   27bd8:	muleq	r2, ip, lr
   27bdc:	andeq	r0, r0, r1, lsl r8
   27be0:	andeq	ip, r2, ip, asr lr
   27be4:	andeq	r0, r0, r2, lsl r8
   27be8:	andeq	ip, r2, r8, ror #28
   27bec:	ldr	r3, [r0]
   27bf0:	push	{r4, r5, r6, lr}
   27bf4:	cmp	r3, #1
   27bf8:	bls	27c60 <pclose@plt+0x149b4>
   27bfc:	ldr	r3, [r0, #44]	; 0x2c
   27c00:	ldr	r2, [r0, #36]	; 0x24
   27c04:	mov	r4, r0
   27c08:	cmp	r3, r2
   27c0c:	mov	r5, r1
   27c10:	beq	27c34 <pclose@plt+0x14988>
   27c14:	cmp	r2, r3
   27c18:	bls	27c4c <pclose@plt+0x149a0>
   27c1c:	ldr	r2, [r4, #48]	; 0x30
   27c20:	add	r1, r3, #1
   27c24:	str	r1, [r4, #44]	; 0x2c
   27c28:	mov	r0, #0
   27c2c:	strb	r5, [r2, r3]
   27c30:	pop	{r4, r5, r6, pc}
   27c34:	bl	258e4 <pclose@plt+0x12638>
   27c38:	cmp	r0, #0
   27c3c:	popne	{r4, r5, r6, pc}
   27c40:	ldr	r3, [r4, #44]	; 0x2c
   27c44:	ldr	r2, [r4, #36]	; 0x24
   27c48:	b	27c14 <pclose@plt+0x14968>
   27c4c:	ldr	r3, [pc, #20]	; 27c68 <pclose@plt+0x149bc>
   27c50:	ldr	r2, [pc, #20]	; 27c6c <pclose@plt+0x149c0>
   27c54:	ldr	r1, [pc, #20]	; 27c70 <pclose@plt+0x149c4>
   27c58:	ldr	r0, [pc, #20]	; 27c74 <pclose@plt+0x149c8>
   27c5c:	bl	13294 <__assert_fail@plt>
   27c60:	ldr	r0, [pc, #16]	; 27c78 <pclose@plt+0x149cc>
   27c64:	bl	1cab8 <pclose@plt+0x980c>
   27c68:	andeq	ip, r2, r4, ror #10
   27c6c:	andeq	r0, r0, r5, asr #16
   27c70:	andeq	ip, r2, ip, ror #12
   27c74:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   27c78:	andeq	ip, r2, ip, lsr #29
   27c7c:	ldr	r3, [r0]
   27c80:	push	{r4, r5, r6, r7, r8, lr}
   27c84:	cmp	r3, #1
   27c88:	bls	27d18 <pclose@plt+0x14a6c>
   27c8c:	cmp	r2, #0
   27c90:	mov	r5, r0
   27c94:	mov	r7, r1
   27c98:	mov	r6, r2
   27c9c:	beq	27ce4 <pclose@plt+0x14a38>
   27ca0:	ldr	r3, [r5, #44]	; 0x2c
   27ca4:	ldr	r4, [r5, #36]	; 0x24
   27ca8:	cmp	r3, r4
   27cac:	bcs	27cec <pclose@plt+0x14a40>
   27cb0:	sub	r4, r4, r3
   27cb4:	cmp	r4, r6
   27cb8:	ldr	r0, [r5, #48]	; 0x30
   27cbc:	movcs	r4, r6
   27cc0:	add	r0, r0, r3
   27cc4:	mov	r2, r4
   27cc8:	mov	r1, r7
   27ccc:	bl	12b2c <memcpy@plt>
   27cd0:	ldr	r3, [r5, #44]	; 0x2c
   27cd4:	subs	r6, r6, r4
   27cd8:	add	r3, r3, r4
   27cdc:	str	r3, [r5, #44]	; 0x2c
   27ce0:	bne	27d00 <pclose@plt+0x14a54>
   27ce4:	mov	r0, #0
   27ce8:	pop	{r4, r5, r6, r7, r8, pc}
   27cec:	mov	r0, r5
   27cf0:	bl	258e4 <pclose@plt+0x12638>
   27cf4:	cmp	r0, #0
   27cf8:	beq	27ca0 <pclose@plt+0x149f4>
   27cfc:	pop	{r4, r5, r6, r7, r8, pc}
   27d00:	mov	r0, r5
   27d04:	bl	258e4 <pclose@plt+0x12638>
   27d08:	cmp	r0, #0
   27d0c:	popne	{r4, r5, r6, r7, r8, pc}
   27d10:	add	r7, r7, r4
   27d14:	b	27ca0 <pclose@plt+0x149f4>
   27d18:	ldr	r0, [pc]	; 27d20 <pclose@plt+0x14a74>
   27d1c:	bl	1cab8 <pclose@plt+0x980c>
   27d20:	strdeq	ip, [r2], -r4
   27d24:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27d28:	mov	r6, r3
   27d2c:	ldr	r3, [sp, #40]	; 0x28
   27d30:	cmp	r1, #3
   27d34:	mov	r5, r0
   27d38:	mov	r7, r2
   27d3c:	ldr	fp, [r3]
   27d40:	beq	27ef0 <pclose@plt+0x14c44>
   27d44:	cmp	r1, #4
   27d48:	beq	27d9c <pclose@plt+0x14af0>
   27d4c:	cmp	r1, #1
   27d50:	beq	28350 <pclose@plt+0x150a4>
   27d54:	cmp	r1, #5
   27d58:	beq	283a0 <pclose@plt+0x150f4>
   27d5c:	cmp	r1, #2
   27d60:	movne	r9, #0
   27d64:	bne	27e4c <pclose@plt+0x14ba0>
   27d68:	ldr	r3, [r0]
   27d6c:	cmp	r3, #2
   27d70:	beq	283f8 <pclose@plt+0x1514c>
   27d74:	ldr	r9, [r0, #4]
   27d78:	cmp	r9, #0
   27d7c:	bne	283b8 <pclose@plt+0x1510c>
   27d80:	ldr	r3, [pc, #2184]	; 28610 <pclose@plt+0x15364>
   27d84:	ldr	r3, [r3]
   27d88:	cmp	r3, #0
   27d8c:	bne	283e8 <pclose@plt+0x1513c>
   27d90:	mov	r0, r5
   27d94:	bl	12b50 <gcry_free@plt>
   27d98:	b	27e4c <pclose@plt+0x14ba0>
   27d9c:	ldr	r2, [r0, #12]
   27da0:	cmp	r2, #0
   27da4:	beq	28564 <pclose@plt+0x152b8>
   27da8:	ldr	r2, [r0, #20]
   27dac:	cmp	r2, #512	; 0x200
   27db0:	add	r4, r2, fp
   27db4:	bhi	28574 <pclose@plt+0x152c8>
   27db8:	ldr	r8, [pc, #2132]	; 28614 <pclose@plt+0x15368>
   27dbc:	cmp	r4, r8
   27dc0:	ldrhi	sl, [pc, #2128]	; 28618 <pclose@plt+0x1536c>
   27dc4:	bls	28040 <pclose@plt+0x14d94>
   27dc8:	cmp	r4, sl
   27dcc:	bls	28000 <pclose@plt+0x14d54>
   27dd0:	mov	r3, #1024	; 0x400
   27dd4:	mov	r1, #10
   27dd8:	b	27de0 <pclose@plt+0x14b34>
   27ddc:	mov	r1, r2
   27de0:	lsl	r3, r3, #1
   27de4:	cmp	r4, r3
   27de8:	add	r2, r1, #1
   27dec:	bcs	27ddc <pclose@plt+0x14b30>
   27df0:	cmp	r1, #31
   27df4:	lsr	fp, r3, #1
   27df8:	bgt	285d4 <pclose@plt+0x15328>
   27dfc:	orr	r1, r1, #224	; 0xe0
   27e00:	mov	r0, r7
   27e04:	bl	27bec <pclose@plt+0x14940>
   27e08:	ldr	r2, [r5, #20]
   27e0c:	cmp	r2, #0
   27e10:	beq	27e54 <pclose@plt+0x14ba8>
   27e14:	cmp	r2, #512	; 0x200
   27e18:	bne	285e8 <pclose@plt+0x1533c>
   27e1c:	ldr	r1, [r5, #16]
   27e20:	mov	r0, r7
   27e24:	bl	27c7c <pclose@plt+0x149d0>
   27e28:	subs	r9, r0, #0
   27e2c:	bne	27ee4 <pclose@plt+0x14c38>
   27e30:	sub	r4, r4, #512	; 0x200
   27e34:	mov	r3, #0
   27e38:	cmp	r4, fp
   27e3c:	str	r3, [r5, #20]
   27e40:	bhi	27e60 <pclose@plt+0x14bb4>
   27e44:	cmp	r4, r3
   27e48:	bne	2800c <pclose@plt+0x14d60>
   27e4c:	mov	r0, r9
   27e50:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e54:	cmp	r4, fp
   27e58:	mov	r9, r2
   27e5c:	bls	2800c <pclose@plt+0x14d60>
   27e60:	mov	r2, fp
   27e64:	mov	r1, r6
   27e68:	mov	r0, r7
   27e6c:	bl	27c7c <pclose@plt+0x149d0>
   27e70:	cmp	r0, #0
   27e74:	bne	28028 <pclose@plt+0x14d7c>
   27e78:	sub	r4, r4, fp
   27e7c:	clz	r3, r9
   27e80:	lsr	r3, r3, #5
   27e84:	cmp	r4, r8
   27e88:	movls	r2, #0
   27e8c:	andhi	r2, r3, #1
   27e90:	cmp	r2, #0
   27e94:	add	r6, r6, fp
   27e98:	bne	27dc8 <pclose@plt+0x14b1c>
   27e9c:	cmp	r4, #0
   27ea0:	moveq	r3, #0
   27ea4:	cmp	r3, #0
   27ea8:	beq	27e4c <pclose@plt+0x14ba0>
   27eac:	ldr	r3, [r5, #20]
   27eb0:	cmp	r3, #0
   27eb4:	bne	285c0 <pclose@plt+0x15314>
   27eb8:	cmp	r4, r8
   27ebc:	bhi	285ac <pclose@plt+0x15300>
   27ec0:	ldr	r0, [r5, #16]
   27ec4:	cmp	r0, #0
   27ec8:	beq	283c8 <pclose@plt+0x1511c>
   27ecc:	mov	r1, r6
   27ed0:	mov	r2, r4
   27ed4:	bl	12b2c <memcpy@plt>
   27ed8:	mov	r9, #0
   27edc:	str	r4, [r5, #20]
   27ee0:	b	27e4c <pclose@plt+0x14ba0>
   27ee4:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   27ee8:	uxth	r9, r0
   27eec:	b	27e30 <pclose@plt+0x14b84>
   27ef0:	cmp	fp, #0
   27ef4:	beq	285fc <pclose@plt+0x15350>
   27ef8:	ldr	r9, [r0, #28]
   27efc:	cmp	r9, #0
   27f00:	bne	28034 <pclose@plt+0x14d88>
   27f04:	mov	r8, r9
   27f08:	mov	sl, #2
   27f0c:	ldr	r2, [r5, #4]
   27f10:	cmp	r2, #0
   27f14:	bne	27f9c <pclose@plt+0x14cf0>
   27f18:	ldr	r3, [r5, #12]
   27f1c:	cmp	r3, #2
   27f20:	beq	28178 <pclose@plt+0x14ecc>
   27f24:	cmp	r3, #0
   27f28:	beq	28554 <pclose@plt+0x152a8>
   27f2c:	ldr	r0, [r5, #24]
   27f30:	cmp	r0, #0
   27f34:	strne	r2, [r5, #24]
   27f38:	bne	27f80 <pclose@plt+0x14cd4>
   27f3c:	ldr	r3, [r7, #32]
   27f40:	cmp	r3, #0
   27f44:	bne	28110 <pclose@plt+0x14e64>
   27f48:	ldr	r1, [r7, #40]	; 0x28
   27f4c:	ldr	r3, [r7, #44]	; 0x2c
   27f50:	cmp	r1, r3
   27f54:	bcs	28110 <pclose@plt+0x14e64>
   27f58:	ldr	r3, [r7, #16]
   27f5c:	ldr	r2, [r7, #20]
   27f60:	ldr	r0, [r7, #48]	; 0x30
   27f64:	adds	r3, r3, #1
   27f68:	str	r3, [r7, #16]
   27f6c:	adc	r2, r2, #0
   27f70:	add	r3, r1, #1
   27f74:	str	r2, [r7, #20]
   27f78:	str	r3, [r7, #40]	; 0x28
   27f7c:	ldrb	r0, [r0, r1]
   27f80:	cmp	r0, #191	; 0xbf
   27f84:	bgt	280a4 <pclose@plt+0x14df8>
   27f88:	cmp	r0, #0
   27f8c:	str	r0, [r5, #4]
   27f90:	mov	r2, r0
   27f94:	str	sl, [r5, #12]
   27f98:	beq	28178 <pclose@plt+0x14ecc>
   27f9c:	cmp	r2, #0
   27fa0:	beq	28098 <pclose@plt+0x14dec>
   27fa4:	cmp	r2, fp
   27fa8:	movcc	r4, r2
   27fac:	movcs	r4, fp
   27fb0:	mov	r2, r4
   27fb4:	mov	r1, r6
   27fb8:	mov	r0, r7
   27fbc:	bl	27978 <pclose@plt+0x146cc>
   27fc0:	cmp	r4, r0
   27fc4:	ble	28074 <pclose@plt+0x14dc8>
   27fc8:	cmn	r0, #1
   27fcc:	ldr	r3, [r5, #4]
   27fd0:	addne	fp, fp, r0
   27fd4:	moveq	r0, #0
   27fd8:	add	r3, r0, r3
   27fdc:	mov	r2, fp
   27fe0:	mov	r1, r5
   27fe4:	ldr	r0, [pc, #1584]	; 2861c <pclose@plt+0x15370>
   27fe8:	bl	1c9b0 <pclose@plt+0x9704>
   27fec:	mov	r9, #89	; 0x59
   27ff0:	ldr	r3, [sp, #40]	; 0x28
   27ff4:	mov	r0, r9
   27ff8:	str	r8, [r3]
   27ffc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28000:	mov	r1, #233	; 0xe9
   28004:	mov	fp, #512	; 0x200
   28008:	b	27e00 <pclose@plt+0x14b54>
   2800c:	mov	r2, r4
   28010:	mov	r1, r6
   28014:	mov	r0, r7
   28018:	bl	27c7c <pclose@plt+0x149d0>
   2801c:	mov	fp, r4
   28020:	cmp	r0, #0
   28024:	beq	27e4c <pclose@plt+0x14ba0>
   28028:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   2802c:	uxth	r9, r0
   28030:	b	27e78 <pclose@plt+0x14bcc>
   28034:	mov	r8, #0
   28038:	mvn	r9, #0
   2803c:	b	27ff0 <pclose@plt+0x14d44>
   28040:	ldr	r0, [r0, #16]
   28044:	cmp	r0, #0
   28048:	beq	2847c <pclose@plt+0x151d0>
   2804c:	mov	r1, r6
   28050:	add	r0, r0, r2
   28054:	mov	r2, fp
   28058:	bl	12b2c <memcpy@plt>
   2805c:	ldr	r2, [r5, #20]
   28060:	mov	r9, #0
   28064:	add	r3, r2, fp
   28068:	str	r3, [r5, #20]
   2806c:	mov	r0, r9
   28070:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28074:	ldr	r2, [r5, #4]
   28078:	subs	fp, fp, r0
   2807c:	sub	r2, r2, r0
   28080:	add	r6, r6, r0
   28084:	add	r8, r8, r0
   28088:	str	r2, [r5, #4]
   2808c:	beq	27ff0 <pclose@plt+0x14d44>
   28090:	cmp	r2, #0
   28094:	bne	27fa4 <pclose@plt+0x14cf8>
   28098:	cmp	fp, #0
   2809c:	bne	27f0c <pclose@plt+0x14c60>
   280a0:	b	27ff0 <pclose@plt+0x14d44>
   280a4:	cmp	r0, #223	; 0xdf
   280a8:	bgt	28130 <pclose@plt+0x14e84>
   280ac:	ldr	r2, [r7, #32]
   280b0:	sub	r3, r0, #192	; 0xc0
   280b4:	cmp	r2, #0
   280b8:	lsl	r3, r3, #8
   280bc:	str	r3, [r5, #4]
   280c0:	bne	2814c <pclose@plt+0x14ea0>
   280c4:	ldr	r0, [r7, #40]	; 0x28
   280c8:	ldr	r2, [r7, #44]	; 0x2c
   280cc:	cmp	r0, r2
   280d0:	bcs	2814c <pclose@plt+0x14ea0>
   280d4:	ldr	r2, [r7, #16]
   280d8:	ldr	r1, [r7, #20]
   280dc:	ldr	ip, [r7, #48]	; 0x30
   280e0:	adds	r2, r2, #1
   280e4:	str	r2, [r7, #16]
   280e8:	adc	r1, r1, #0
   280ec:	add	r2, r0, #1
   280f0:	str	r1, [r7, #20]
   280f4:	str	r2, [r7, #40]	; 0x28
   280f8:	ldrb	r2, [ip, r0]
   280fc:	add	r3, r3, #192	; 0xc0
   28100:	str	sl, [r5, #12]
   28104:	add	r2, r2, r3
   28108:	str	r2, [r5, #4]
   2810c:	b	27f9c <pclose@plt+0x14cf0>
   28110:	mov	r0, r7
   28114:	bl	27884 <pclose@plt+0x145d8>
   28118:	cmn	r0, #1
   2811c:	bne	27f80 <pclose@plt+0x14cd4>
   28120:	ldr	r0, [pc, #1272]	; 28620 <pclose@plt+0x15374>
   28124:	bl	1c9b0 <pclose@plt+0x9704>
   28128:	mov	r9, #89	; 0x59
   2812c:	b	27ff0 <pclose@plt+0x14d44>
   28130:	cmp	r0, #255	; 0xff
   28134:	beq	28190 <pclose@plt+0x14ee4>
   28138:	and	r2, r0, #31
   2813c:	mov	r3, #1
   28140:	lsl	r2, r3, r2
   28144:	str	r2, [r5, #4]
   28148:	b	27f9c <pclose@plt+0x14cf0>
   2814c:	mov	r0, r7
   28150:	bl	27884 <pclose@plt+0x145d8>
   28154:	cmn	r0, #1
   28158:	beq	2846c <pclose@plt+0x151c0>
   2815c:	ldr	r2, [r5, #4]
   28160:	str	sl, [r5, #12]
   28164:	add	r2, r2, #192	; 0xc0
   28168:	add	r2, r2, r0
   2816c:	cmp	r2, #0
   28170:	str	r2, [r5, #4]
   28174:	bne	27f9c <pclose@plt+0x14cf0>
   28178:	clz	r9, r8
   2817c:	mov	r3, #1
   28180:	lsr	r9, r9, #5
   28184:	rsb	r9, r9, #0
   28188:	str	r3, [r5, #28]
   2818c:	b	27ff0 <pclose@plt+0x14d44>
   28190:	ldr	r3, [r7, #32]
   28194:	cmp	r3, #0
   28198:	bne	2829c <pclose@plt+0x14ff0>
   2819c:	ldrd	r2, [r7, #40]	; 0x28
   281a0:	cmp	r2, r3
   281a4:	bcs	2829c <pclose@plt+0x14ff0>
   281a8:	ldr	r1, [r7, #16]
   281ac:	ldr	r0, [r7, #20]
   281b0:	ldr	ip, [r7, #48]	; 0x30
   281b4:	adds	r1, r1, #1
   281b8:	str	r1, [r7, #16]
   281bc:	adc	r0, r0, #0
   281c0:	add	r1, r2, #1
   281c4:	str	r1, [r7, #40]	; 0x28
   281c8:	str	r0, [r7, #20]
   281cc:	ldrb	r2, [ip, r2]
   281d0:	ldr	r1, [r7, #40]	; 0x28
   281d4:	cmp	r1, r3
   281d8:	lsl	r2, r2, #24
   281dc:	str	r2, [r5, #4]
   281e0:	bcs	282c8 <pclose@plt+0x1501c>
   281e4:	ldr	r0, [r7, #16]
   281e8:	ldr	ip, [r7, #20]
   281ec:	ldr	lr, [r7, #48]	; 0x30
   281f0:	adds	r0, r0, #1
   281f4:	str	r0, [r7, #16]
   281f8:	adc	ip, ip, #0
   281fc:	add	r0, r1, #1
   28200:	str	r0, [r7, #40]	; 0x28
   28204:	str	ip, [r7, #20]
   28208:	ldrb	r1, [lr, r1]
   2820c:	orr	r2, r2, r1, lsl #16
   28210:	ldr	r1, [r7, #40]	; 0x28
   28214:	str	r2, [r5, #4]
   28218:	cmp	r1, r3
   2821c:	bcs	28300 <pclose@plt+0x15054>
   28220:	ldr	r0, [r7, #16]
   28224:	ldr	ip, [r7, #20]
   28228:	ldr	lr, [r7, #48]	; 0x30
   2822c:	adds	r0, r0, #1
   28230:	str	r0, [r7, #16]
   28234:	adc	ip, ip, #0
   28238:	add	r0, r1, #1
   2823c:	str	r0, [r7, #40]	; 0x28
   28240:	str	ip, [r7, #20]
   28244:	ldrb	r1, [lr, r1]
   28248:	orr	r2, r2, r1, lsl #8
   2824c:	ldr	r1, [r7, #40]	; 0x28
   28250:	str	r2, [r5, #4]
   28254:	cmp	r1, r3
   28258:	bcs	28338 <pclose@plt+0x1508c>
   2825c:	ldr	r3, [r7, #16]
   28260:	ldr	r0, [r7, #20]
   28264:	ldr	ip, [r7, #48]	; 0x30
   28268:	adds	r3, r3, #1
   2826c:	adc	r0, r0, #0
   28270:	str	r3, [r7, #16]
   28274:	add	r3, r1, #1
   28278:	str	r0, [r7, #20]
   2827c:	str	r3, [r7, #40]	; 0x28
   28280:	ldrb	r0, [ip, r1]
   28284:	orr	r2, r0, r2
   28288:	cmp	r2, #0
   2828c:	str	r2, [r5, #4]
   28290:	str	sl, [r5, #12]
   28294:	bne	27f9c <pclose@plt+0x14cf0>
   28298:	b	28178 <pclose@plt+0x14ecc>
   2829c:	mov	r0, r7
   282a0:	bl	27884 <pclose@plt+0x145d8>
   282a4:	ldr	r3, [r7, #32]
   282a8:	cmp	r3, #0
   282ac:	lsl	r2, r0, #24
   282b0:	str	r2, [r5, #4]
   282b4:	bne	282c8 <pclose@plt+0x1501c>
   282b8:	ldr	r3, [r7, #44]	; 0x2c
   282bc:	ldr	r1, [r7, #40]	; 0x28
   282c0:	cmp	r1, r3
   282c4:	bcc	281e4 <pclose@plt+0x14f38>
   282c8:	mov	r0, r7
   282cc:	bl	27884 <pclose@plt+0x145d8>
   282d0:	ldr	r2, [r7, #32]
   282d4:	ldr	r3, [r5, #4]
   282d8:	cmp	r2, #0
   282dc:	lsl	r2, r0, #16
   282e0:	and	r2, r2, #16711680	; 0xff0000
   282e4:	orr	r2, r2, r3
   282e8:	str	r2, [r5, #4]
   282ec:	bne	28300 <pclose@plt+0x15054>
   282f0:	ldr	r3, [r7, #44]	; 0x2c
   282f4:	ldr	r1, [r7, #40]	; 0x28
   282f8:	cmp	r1, r3
   282fc:	bcc	28220 <pclose@plt+0x14f74>
   28300:	mov	r0, r7
   28304:	bl	27884 <pclose@plt+0x145d8>
   28308:	ldr	r2, [r7, #32]
   2830c:	ldr	r3, [r5, #4]
   28310:	cmp	r2, #0
   28314:	lsl	r2, r0, #8
   28318:	uxth	r2, r2
   2831c:	orr	r2, r2, r3
   28320:	str	r2, [r5, #4]
   28324:	bne	28338 <pclose@plt+0x1508c>
   28328:	ldr	r3, [r7, #44]	; 0x2c
   2832c:	ldr	r1, [r7, #40]	; 0x28
   28330:	cmp	r1, r3
   28334:	bcc	2825c <pclose@plt+0x14fb0>
   28338:	mov	r0, r7
   2833c:	bl	27884 <pclose@plt+0x145d8>
   28340:	cmn	r0, #1
   28344:	beq	28544 <pclose@plt+0x15298>
   28348:	ldr	r2, [r5, #4]
   2834c:	b	28284 <pclose@plt+0x14fd8>
   28350:	ldr	r3, [pc, #696]	; 28610 <pclose@plt+0x15364>
   28354:	ldr	r3, [r3]
   28358:	cmp	r3, #0
   2835c:	bne	283d8 <pclose@plt+0x1512c>
   28360:	ldr	r3, [r5, #12]
   28364:	cmp	r3, #0
   28368:	movne	r3, #0
   2836c:	strne	r3, [r5, #8]
   28370:	bne	28388 <pclose@plt+0x150dc>
   28374:	ldr	r3, [r5]
   28378:	cmp	r3, #0
   2837c:	streq	r3, [r5, #4]
   28380:	ldrne	r3, [r5, #4]
   28384:	str	r3, [r5, #8]
   28388:	mov	r9, #0
   2838c:	str	r9, [r5, #28]
   28390:	str	r9, [r5, #16]
   28394:	str	r9, [r5, #20]
   28398:	mov	r0, r9
   2839c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   283a0:	mov	r2, fp
   283a4:	mov	r0, r6
   283a8:	ldr	r1, [pc, #628]	; 28624 <pclose@plt+0x15378>
   283ac:	bl	182e0 <pclose@plt+0x5034>
   283b0:	mov	r9, #0
   283b4:	b	27e4c <pclose@plt+0x14ba0>
   283b8:	ldr	r0, [pc, #616]	; 28628 <pclose@plt+0x1537c>
   283bc:	bl	1c9b0 <pclose@plt+0x9704>
   283c0:	mov	r9, #0
   283c4:	b	27d80 <pclose@plt+0x14ad4>
   283c8:	mov	r0, #512	; 0x200
   283cc:	bl	129a0 <gcry_xmalloc@plt>
   283d0:	str	r0, [r5, #16]
   283d4:	b	27ecc <pclose@plt+0x14c20>
   283d8:	mov	r1, r0
   283dc:	ldr	r0, [pc, #584]	; 2862c <pclose@plt+0x15380>
   283e0:	bl	1cafc <pclose@plt+0x9850>
   283e4:	b	28360 <pclose@plt+0x150b4>
   283e8:	mov	r1, r5
   283ec:	ldr	r0, [pc, #572]	; 28630 <pclose@plt+0x15384>
   283f0:	bl	1cafc <pclose@plt+0x9850>
   283f4:	b	27d90 <pclose@plt+0x14ae4>
   283f8:	ldr	r3, [r0, #12]
   283fc:	cmp	r3, #0
   28400:	beq	2859c <pclose@plt+0x152f0>
   28404:	ldr	r4, [r0, #20]
   28408:	cmp	r4, #191	; 0xbf
   2840c:	bls	28530 <pclose@plt+0x15284>
   28410:	cmp	r4, #8384	; 0x20c0
   28414:	bcs	28490 <pclose@plt+0x151e4>
   28418:	sub	r6, r4, #192	; 0xc0
   2841c:	mov	r0, r2
   28420:	lsr	r1, r6, #8
   28424:	add	r1, r1, #192	; 0xc0
   28428:	bl	27bec <pclose@plt+0x14940>
   2842c:	cmp	r0, #0
   28430:	beq	28588 <pclose@plt+0x152dc>
   28434:	bl	12f10 <__errno_location@plt>
   28438:	ldr	r0, [r0]
   2843c:	bl	12db4 <strerror@plt>
   28440:	mov	r1, r0
   28444:	ldr	r0, [pc, #488]	; 28634 <pclose@plt+0x15388>
   28448:	bl	1c9b0 <pclose@plt+0x9704>
   2844c:	bl	12ec8 <gpg_err_code_from_syserror@plt>
   28450:	uxth	r9, r0
   28454:	ldr	r0, [r5, #16]
   28458:	bl	12b50 <gcry_free@plt>
   2845c:	mov	r3, #0
   28460:	str	r3, [r5, #16]
   28464:	str	r3, [r5, #20]
   28468:	b	27d80 <pclose@plt+0x14ad4>
   2846c:	ldr	r0, [pc, #452]	; 28638 <pclose@plt+0x1538c>
   28470:	bl	1c9b0 <pclose@plt+0x9704>
   28474:	mov	r9, #89	; 0x59
   28478:	b	27ff0 <pclose@plt+0x14d44>
   2847c:	mov	r0, #512	; 0x200
   28480:	bl	129a0 <gcry_xmalloc@plt>
   28484:	ldr	r2, [r5, #20]
   28488:	str	r0, [r5, #16]
   2848c:	b	2804c <pclose@plt+0x14da0>
   28490:	mov	r1, #255	; 0xff
   28494:	mov	r0, r2
   28498:	bl	27bec <pclose@plt+0x14940>
   2849c:	cmp	r0, #0
   284a0:	bne	28434 <pclose@plt+0x15188>
   284a4:	lsr	r1, r4, #24
   284a8:	mov	r0, r7
   284ac:	bl	27bec <pclose@plt+0x14940>
   284b0:	cmp	r0, #0
   284b4:	bne	28434 <pclose@plt+0x15188>
   284b8:	lsr	r1, r4, #16
   284bc:	mov	r0, r7
   284c0:	uxtb	r1, r1
   284c4:	bl	27bec <pclose@plt+0x14940>
   284c8:	cmp	r0, #0
   284cc:	bne	28434 <pclose@plt+0x15188>
   284d0:	lsr	r1, r4, #8
   284d4:	mov	r0, r7
   284d8:	uxtb	r1, r1
   284dc:	bl	27bec <pclose@plt+0x14940>
   284e0:	cmp	r0, #0
   284e4:	bne	28434 <pclose@plt+0x15188>
   284e8:	uxtb	r1, r4
   284ec:	mov	r0, r7
   284f0:	bl	27bec <pclose@plt+0x14940>
   284f4:	mov	r9, r0
   284f8:	adds	r3, r4, #0
   284fc:	movne	r3, #1
   28500:	cmp	r9, #0
   28504:	movne	r3, #0
   28508:	cmp	r3, #0
   2850c:	beq	28524 <pclose@plt+0x15278>
   28510:	mov	r2, r4
   28514:	mov	r0, r7
   28518:	ldr	r1, [r5, #16]
   2851c:	bl	27c7c <pclose@plt+0x149d0>
   28520:	mov	r9, r0
   28524:	cmp	r9, #0
   28528:	beq	28454 <pclose@plt+0x151a8>
   2852c:	b	28434 <pclose@plt+0x15188>
   28530:	mov	r1, r4
   28534:	mov	r0, r2
   28538:	bl	27bec <pclose@plt+0x14940>
   2853c:	mov	r9, r0
   28540:	b	284f8 <pclose@plt+0x1524c>
   28544:	ldr	r0, [pc, #240]	; 2863c <pclose@plt+0x15390>
   28548:	bl	1c9b0 <pclose@plt+0x9704>
   2854c:	mov	r9, #89	; 0x59
   28550:	b	27ff0 <pclose@plt+0x14d44>
   28554:	ldr	r2, [pc, #228]	; 28640 <pclose@plt+0x15394>
   28558:	ldr	r1, [pc, #228]	; 28644 <pclose@plt+0x15398>
   2855c:	ldr	r0, [pc, #228]	; 28648 <pclose@plt+0x1539c>
   28560:	bl	1cd10 <pclose@plt+0x9a64>
   28564:	ldr	r2, [pc, #212]	; 28640 <pclose@plt+0x15394>
   28568:	ldr	r1, [pc, #220]	; 2864c <pclose@plt+0x153a0>
   2856c:	ldr	r0, [pc, #212]	; 28648 <pclose@plt+0x1539c>
   28570:	bl	1cd10 <pclose@plt+0x9a64>
   28574:	ldr	r3, [pc, #212]	; 28650 <pclose@plt+0x153a4>
   28578:	ldr	r2, [pc, #212]	; 28654 <pclose@plt+0x153a8>
   2857c:	ldr	r1, [pc, #196]	; 28648 <pclose@plt+0x1539c>
   28580:	ldr	r0, [pc, #208]	; 28658 <pclose@plt+0x153ac>
   28584:	bl	13294 <__assert_fail@plt>
   28588:	uxtb	r1, r6
   2858c:	mov	r0, r7
   28590:	bl	27bec <pclose@plt+0x14940>
   28594:	mov	r9, r0
   28598:	b	284f8 <pclose@plt+0x1524c>
   2859c:	ldr	r2, [pc, #156]	; 28640 <pclose@plt+0x15394>
   285a0:	ldr	r1, [pc, #180]	; 2865c <pclose@plt+0x153b0>
   285a4:	ldr	r0, [pc, #156]	; 28648 <pclose@plt+0x1539c>
   285a8:	bl	1cd10 <pclose@plt+0x9a64>
   285ac:	ldr	r3, [pc, #156]	; 28650 <pclose@plt+0x153a4>
   285b0:	ldr	r2, [pc, #168]	; 28660 <pclose@plt+0x153b4>
   285b4:	ldr	r1, [pc, #140]	; 28648 <pclose@plt+0x1539c>
   285b8:	ldr	r0, [pc, #164]	; 28664 <pclose@plt+0x153b8>
   285bc:	bl	13294 <__assert_fail@plt>
   285c0:	ldr	r3, [pc, #136]	; 28650 <pclose@plt+0x153a4>
   285c4:	mov	r2, #964	; 0x3c4
   285c8:	ldr	r1, [pc, #120]	; 28648 <pclose@plt+0x1539c>
   285cc:	ldr	r0, [pc, #148]	; 28668 <pclose@plt+0x153bc>
   285d0:	bl	13294 <__assert_fail@plt>
   285d4:	ldr	r3, [pc, #116]	; 28650 <pclose@plt+0x153a4>
   285d8:	ldr	r2, [pc, #140]	; 2866c <pclose@plt+0x153c0>
   285dc:	ldr	r1, [pc, #100]	; 28648 <pclose@plt+0x1539c>
   285e0:	ldr	r0, [pc, #136]	; 28670 <pclose@plt+0x153c4>
   285e4:	bl	13294 <__assert_fail@plt>
   285e8:	ldr	r3, [pc, #96]	; 28650 <pclose@plt+0x153a4>
   285ec:	ldr	r2, [pc, #128]	; 28674 <pclose@plt+0x153c8>
   285f0:	ldr	r1, [pc, #80]	; 28648 <pclose@plt+0x1539c>
   285f4:	ldr	r0, [pc, #124]	; 28678 <pclose@plt+0x153cc>
   285f8:	bl	13294 <__assert_fail@plt>
   285fc:	ldr	r3, [pc, #76]	; 28650 <pclose@plt+0x153a4>
   28600:	mov	r2, #796	; 0x31c
   28604:	ldr	r1, [pc, #60]	; 28648 <pclose@plt+0x1539c>
   28608:	ldr	r0, [pc, #108]	; 2867c <pclose@plt+0x153d0>
   2860c:	bl	13294 <__assert_fail@plt>
   28610:	andeq	lr, r3, ip, lsr r8
   28614:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   28618:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2861c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   28620:	andeq	ip, r2, r0, lsr #30
   28624:	andeq	sp, r2, ip, asr r0
   28628:	andeq	sp, r2, ip, rrx
   2862c:	andeq	sp, r2, r4, asr #32
   28630:	andeq	sp, r2, ip, lsl #1
   28634:	andeq	sp, r2, r4, lsr #1
   28638:	andeq	ip, r2, r8, asr #30
   2863c:	andeq	ip, r2, r0, ror pc
   28640:	andeq	ip, r2, r4, lsl #11
   28644:	andeq	r0, r0, r5, ror r3
   28648:	andeq	ip, r2, ip, ror #12
   2864c:	andeq	r0, r0, lr, asr #7
   28650:	andeq	ip, r2, r4, ror r5
   28654:	muleq	r0, r6, r3
   28658:	andeq	ip, r2, ip, asr #31
   2865c:	andeq	r0, r0, r2, lsl r4
   28660:	andeq	r0, r0, r5, asr #7
   28664:	andeq	sp, r2, r4, lsr #32
   28668:	andeq	sp, r2, r8, lsl r0
   2866c:	andeq	r0, r0, lr, lsr #7
   28670:	strdeq	ip, [r2], -r0
   28674:			; <UNDEFINED> instruction: 0x000003b3
   28678:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2867c:	andeq	ip, r2, ip, ror #29
   28680:	ldr	r3, [r0]
   28684:	push	{r4, r5, r6, lr}
   28688:	cmp	r3, #1
   2868c:	bls	286b4 <pclose@plt+0x15408>
   28690:	mov	r4, r0
   28694:	mov	r0, r1
   28698:	mov	r5, r1
   2869c:	bl	12e8c <strlen@plt>
   286a0:	mov	r1, r5
   286a4:	mov	r2, r0
   286a8:	mov	r0, r4
   286ac:	pop	{r4, r5, r6, lr}
   286b0:	b	27c7c <pclose@plt+0x149d0>
   286b4:	ldr	r0, [pc]	; 286bc <pclose@plt+0x15410>
   286b8:	bl	1cab8 <pclose@plt+0x980c>
   286bc:	andeq	sp, r2, r4, asr #1
   286c0:	push	{r4, r5, r6, r7, r8, lr}
   286c4:	sub	sp, sp, #40	; 0x28
   286c8:	ldr	r6, [pc, #152]	; 28768 <pclose@plt+0x154bc>
   286cc:	mov	r4, r0
   286d0:	mov	r8, r1
   286d4:	ldr	r3, [r6]
   286d8:	mov	r7, r2
   286dc:	str	r3, [sp, #36]	; 0x24
   286e0:	b	286e8 <pclose@plt+0x1543c>
   286e4:	mov	r4, r3
   286e8:	mov	r0, r4
   286ec:	bl	258e4 <pclose@plt+0x12638>
   286f0:	cmp	r0, #0
   286f4:	bne	2873c <pclose@plt+0x15490>
   286f8:	ldr	r3, [r4, #76]	; 0x4c
   286fc:	cmp	r3, #0
   28700:	bne	286e4 <pclose@plt+0x15438>
   28704:	ldr	r5, [r4, #44]	; 0x2c
   28708:	mov	r0, r8
   2870c:	cmp	r5, r7
   28710:	movcs	r5, r7
   28714:	mov	r2, r5
   28718:	ldr	r1, [r4, #48]	; 0x30
   2871c:	bl	12b2c <memcpy@plt>
   28720:	ldr	r2, [sp, #36]	; 0x24
   28724:	ldr	r3, [r6]
   28728:	mov	r0, r5
   2872c:	cmp	r2, r3
   28730:	bne	28764 <pclose@plt+0x154b8>
   28734:	add	sp, sp, #40	; 0x28
   28738:	pop	{r4, r5, r6, r7, r8, pc}
   2873c:	add	r1, sp, #4
   28740:	mov	r0, r4
   28744:	ldr	r5, [r4, #80]	; 0x50
   28748:	ldr	r6, [r4, #84]	; 0x54
   2874c:	bl	25f58 <pclose@plt+0x12cac>
   28750:	mov	r2, r6
   28754:	mov	r1, r5
   28758:	mov	r3, r0
   2875c:	ldr	r0, [pc, #8]	; 2876c <pclose@plt+0x154c0>
   28760:	bl	1cab8 <pclose@plt+0x980c>
   28764:	bl	12bb0 <__stack_chk_fail@plt>
   28768:	andeq	sp, r3, r0, asr #21
   2876c:	strdeq	sp, [r2], -r4
   28770:	ldr	r3, [r1]
   28774:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28778:	cmp	r3, #1
   2877c:	bhi	28834 <pclose@plt+0x15588>
   28780:	ldr	r3, [r0]
   28784:	mov	r8, r0
   28788:	cmp	r3, #2
   2878c:	bne	28820 <pclose@plt+0x15574>
   28790:	ldr	r5, [r0, #56]	; 0x38
   28794:	cmp	r5, #0
   28798:	mvnne	r7, #0
   2879c:	bne	28808 <pclose@plt+0x1555c>
   287a0:	mov	r0, #32768	; 0x8000
   287a4:	mov	r9, r1
   287a8:	bl	129a0 <gcry_xmalloc@plt>
   287ac:	mov	r7, r5
   287b0:	mov	r6, r0
   287b4:	b	287dc <pclose@plt+0x15530>
   287b8:	cmp	r5, r0
   287bc:	mov	r2, r0
   287c0:	mov	r1, r6
   287c4:	mov	r0, r8
   287c8:	movcc	r5, r4
   287cc:	bl	27c7c <pclose@plt+0x149d0>
   287d0:	cmp	r0, #0
   287d4:	bne	287f8 <pclose@plt+0x1554c>
   287d8:	add	r7, r7, r4
   287dc:	mov	r2, #32768	; 0x8000
   287e0:	mov	r1, r6
   287e4:	mov	r0, r9
   287e8:	bl	27978 <pclose@plt+0x146cc>
   287ec:	cmn	r0, #1
   287f0:	mov	r4, r0
   287f4:	bne	287b8 <pclose@plt+0x1550c>
   287f8:	cmp	r5, #0
   287fc:	bne	28810 <pclose@plt+0x15564>
   28800:	mov	r0, r6
   28804:	bl	12b50 <gcry_free@plt>
   28808:	mov	r0, r7
   2880c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28810:	mov	r1, r5
   28814:	mov	r0, r6
   28818:	bl	24674 <pclose@plt+0x113c8>
   2881c:	b	28800 <pclose@plt+0x15554>
   28820:	ldr	r3, [pc, #32]	; 28848 <pclose@plt+0x1559c>
   28824:	ldr	r2, [pc, #32]	; 2884c <pclose@plt+0x155a0>
   28828:	ldr	r1, [pc, #32]	; 28850 <pclose@plt+0x155a4>
   2882c:	ldr	r0, [pc, #32]	; 28854 <pclose@plt+0x155a8>
   28830:	bl	13294 <__assert_fail@plt>
   28834:	ldr	r3, [pc, #12]	; 28848 <pclose@plt+0x1559c>
   28838:	ldr	r2, [pc, #24]	; 28858 <pclose@plt+0x155ac>
   2883c:	ldr	r1, [pc, #12]	; 28850 <pclose@plt+0x155a4>
   28840:	ldr	r0, [pc, #20]	; 2885c <pclose@plt+0x155b0>
   28844:	bl	13294 <__assert_fail@plt>
   28848:	muleq	r2, r4, r5
   2884c:	andeq	r0, r0, pc, lsr #17
   28850:	andeq	ip, r2, ip, ror #12
   28854:	andeq	sp, r2, ip, ror r1
   28858:	andeq	r0, r0, lr, lsr #17
   2885c:	andeq	sp, r2, ip, lsr r1
   28860:	ldr	r3, [r0]
   28864:	push	{r4, lr}
   28868:	cmp	r3, #1
   2886c:	bls	288a0 <pclose@plt+0x155f4>
   28870:	ldr	r3, [r0, #76]	; 0x4c
   28874:	mov	r4, r0
   28878:	cmp	r3, #0
   2887c:	popeq	{r4, pc}
   28880:	mov	r2, #0
   28884:	ldr	r1, [r4, #60]	; 0x3c
   28888:	mov	r0, r4
   2888c:	bl	275e4 <pclose@plt+0x14338>
   28890:	ldr	r3, [r4, #76]	; 0x4c
   28894:	cmp	r3, #0
   28898:	bne	28880 <pclose@plt+0x155d4>
   2889c:	pop	{r4, pc}
   288a0:	ldr	r0, [pc]	; 288a8 <pclose@plt+0x155fc>
   288a4:	bl	1cab8 <pclose@plt+0x980c>
   288a8:			; <UNDEFINED> instruction: 0x0002d1bc
   288ac:	ldr	r3, [r1]
   288b0:	push	{r4, r5, r6, lr}
   288b4:	sub	r3, r3, #2
   288b8:	cmp	r3, #1
   288bc:	bhi	288f4 <pclose@plt+0x15648>
   288c0:	ldr	r3, [r0]
   288c4:	mov	r5, r0
   288c8:	sub	r3, r3, #2
   288cc:	cmp	r3, #1
   288d0:	bhi	28908 <pclose@plt+0x1565c>
   288d4:	mov	r4, r1
   288d8:	mov	r0, r1
   288dc:	bl	28860 <pclose@plt+0x155b4>
   288e0:	mov	r0, r5
   288e4:	ldr	r2, [r4, #44]	; 0x2c
   288e8:	ldr	r1, [r4, #48]	; 0x30
   288ec:	pop	{r4, r5, r6, lr}
   288f0:	b	27c7c <pclose@plt+0x149d0>
   288f4:	ldr	r3, [pc, #32]	; 2891c <pclose@plt+0x15670>
   288f8:	mov	r2, #2176	; 0x880
   288fc:	ldr	r1, [pc, #28]	; 28920 <pclose@plt+0x15674>
   28900:	ldr	r0, [pc, #28]	; 28924 <pclose@plt+0x15678>
   28904:	bl	13294 <__assert_fail@plt>
   28908:	ldr	r3, [pc, #12]	; 2891c <pclose@plt+0x15670>
   2890c:	ldr	r2, [pc, #20]	; 28928 <pclose@plt+0x1567c>
   28910:	ldr	r1, [pc, #8]	; 28920 <pclose@plt+0x15674>
   28914:	ldr	r0, [pc, #16]	; 2892c <pclose@plt+0x15680>
   28918:	bl	13294 <__assert_fail@plt>
   2891c:	andeq	ip, r2, r0, lsr #11
   28920:	andeq	ip, r2, ip, ror #12
   28924:	andeq	sp, r2, ip, ror #3
   28928:	andeq	r0, r0, r1, lsl #17
   2892c:	andeq	sp, r2, ip, lsr #4
   28930:	push	{r4, r5, lr}
   28934:	orrs	ip, r2, r3
   28938:	ldr	r1, [r0, #24]
   2893c:	ldr	lr, [r0, #16]
   28940:	ldr	ip, [r0, #28]
   28944:	ldr	r5, [r0, #20]
   28948:	strd	r2, [r0, #8]
   2894c:	movne	r4, #1
   28950:	moveq	r4, #0
   28954:	mov	r2, #0
   28958:	adds	r1, r1, lr
   2895c:	mov	r3, #0
   28960:	adc	ip, ip, r5
   28964:	str	r4, [r0, #32]
   28968:	str	r1, [r0, #24]
   2896c:	str	ip, [r0, #28]
   28970:	strd	r2, [r0, #16]
   28974:	pop	{r4, r5, pc}
   28978:	push	{r4, lr}
   2897c:	sub	sp, sp, #112	; 0x70
   28980:	ldr	r4, [pc, #156]	; 28a24 <pclose@plt+0x15778>
   28984:	cmp	r1, #0
   28988:	ldr	r3, [r4]
   2898c:	str	r3, [sp, #108]	; 0x6c
   28990:	movne	r3, #0
   28994:	strne	r3, [r1]
   28998:	b	289a0 <pclose@plt+0x156f4>
   2899c:	mov	r0, r3
   289a0:	ldr	r3, [r0, #76]	; 0x4c
   289a4:	cmp	r3, #0
   289a8:	bne	2899c <pclose@plt+0x156f0>
   289ac:	ldr	r2, [r0, #60]	; 0x3c
   289b0:	ldr	r3, [pc, #112]	; 28a28 <pclose@plt+0x1577c>
   289b4:	cmp	r2, r3
   289b8:	movne	r0, #0
   289bc:	movne	r1, #0
   289c0:	beq	289dc <pclose@plt+0x15730>
   289c4:	ldr	r2, [sp, #108]	; 0x6c
   289c8:	ldr	r3, [r4]
   289cc:	cmp	r2, r3
   289d0:	bne	28a20 <pclose@plt+0x15774>
   289d4:	add	sp, sp, #112	; 0x70
   289d8:	pop	{r4, pc}
   289dc:	ldr	r3, [r0, #64]	; 0x40
   289e0:	mov	r2, sp
   289e4:	mov	r0, #3
   289e8:	ldr	r1, [r3]
   289ec:	bl	12c70 <__fxstat64@plt>
   289f0:	cmp	r0, #0
   289f4:	ldrdeq	r0, [sp, #48]	; 0x30
   289f8:	beq	289c4 <pclose@plt+0x15718>
   289fc:	bl	12f10 <__errno_location@plt>
   28a00:	ldr	r0, [r0]
   28a04:	bl	12db4 <strerror@plt>
   28a08:	mov	r1, r0
   28a0c:	ldr	r0, [pc, #24]	; 28a2c <pclose@plt+0x15780>
   28a10:	bl	1c9b0 <pclose@plt+0x9704>
   28a14:	mov	r0, #0
   28a18:	mov	r1, #0
   28a1c:	b	289c4 <pclose@plt+0x15718>
   28a20:	bl	12bb0 <__stack_chk_fail@plt>
   28a24:	andeq	sp, r3, r0, asr #21
   28a28:	andeq	r5, r2, r0, lsl #20
   28a2c:	andeq	sp, r2, r8, ror #4
   28a30:	b	28a38 <pclose@plt+0x1578c>
   28a34:	mov	r0, r3
   28a38:	ldr	r3, [r0, #76]	; 0x4c
   28a3c:	cmp	r3, #0
   28a40:	bne	28a34 <pclose@plt+0x15788>
   28a44:	ldr	r3, [pc, #20]	; 28a60 <pclose@plt+0x157b4>
   28a48:	ldr	r2, [r0, #60]	; 0x3c
   28a4c:	cmp	r2, r3
   28a50:	ldreq	r3, [r0, #64]	; 0x40
   28a54:	ldreq	r0, [r3]
   28a58:	mvnne	r0, #0
   28a5c:	bx	lr
   28a60:	andeq	r5, r2, r0, lsl #20
   28a64:	ldr	r3, [r0, #24]
   28a68:	ldr	r2, [r0, #16]
   28a6c:	ldr	ip, [r0, #28]
   28a70:	ldr	r1, [r0, #20]
   28a74:	adds	r0, r3, r2
   28a78:	adc	r1, ip, r1
   28a7c:	bx	lr
   28a80:	push	{r4, r5, r6, r7, lr}
   28a84:	mov	r7, r3
   28a88:	ldr	r3, [r0]
   28a8c:	sub	sp, sp, #12
   28a90:	bics	r3, r3, #2
   28a94:	mov	r4, r0
   28a98:	mov	r6, r2
   28a9c:	beq	28b10 <pclose@plt+0x15864>
   28aa0:	ldr	r3, [r4, #76]	; 0x4c
   28aa4:	mov	r0, #0
   28aa8:	mov	r1, #0
   28aac:	cmp	r3, #0
   28ab0:	mov	r3, #0
   28ab4:	strd	r6, [r4, #24]
   28ab8:	strd	r0, [r4, #16]
   28abc:	strd	r0, [r4, #8]
   28ac0:	str	r3, [r4, #40]	; 0x28
   28ac4:	str	r3, [r4, #32]
   28ac8:	str	r3, [r4, #56]	; 0x38
   28acc:	beq	28b00 <pclose@plt+0x15854>
   28ad0:	ldr	r0, [pc, #172]	; 28b84 <pclose@plt+0x158d8>
   28ad4:	bl	1cafc <pclose@plt+0x9850>
   28ad8:	ldr	r3, [r4, #76]	; 0x4c
   28adc:	cmp	r3, #0
   28ae0:	beq	28b00 <pclose@plt+0x15854>
   28ae4:	mov	r2, #0
   28ae8:	ldr	r1, [r4, #60]	; 0x3c
   28aec:	mov	r0, r4
   28af0:	bl	275e4 <pclose@plt+0x14338>
   28af4:	ldr	r3, [r4, #76]	; 0x4c
   28af8:	cmp	r3, #0
   28afc:	bne	28ae4 <pclose@plt+0x15838>
   28b00:	mov	r0, #0
   28b04:	add	sp, sp, #12
   28b08:	pop	{r4, r5, r6, r7, pc}
   28b0c:	mov	r4, r5
   28b10:	ldr	r5, [r4, #76]	; 0x4c
   28b14:	cmp	r5, #0
   28b18:	bne	28b0c <pclose@plt+0x15860>
   28b1c:	ldr	r3, [pc, #100]	; 28b88 <pclose@plt+0x158dc>
   28b20:	ldr	r2, [r4, #60]	; 0x3c
   28b24:	cmp	r2, r3
   28b28:	bne	28b7c <pclose@plt+0x158d0>
   28b2c:	ldr	r1, [r4, #64]	; 0x40
   28b30:	mov	r2, r6
   28b34:	mov	r3, r7
   28b38:	ldr	r0, [r1]
   28b3c:	str	r5, [sp]
   28b40:	bl	12cac <lseek64@plt>
   28b44:	mvn	r3, #0
   28b48:	mvn	r2, #0
   28b4c:	cmp	r1, r3
   28b50:	cmpeq	r0, r2
   28b54:	strne	r5, [r4, #44]	; 0x2c
   28b58:	bne	28aa0 <pclose@plt+0x157f4>
   28b5c:	bl	12f10 <__errno_location@plt>
   28b60:	ldr	r0, [r0]
   28b64:	bl	12db4 <strerror@plt>
   28b68:	mov	r1, r0
   28b6c:	ldr	r0, [pc, #24]	; 28b8c <pclose@plt+0x158e0>
   28b70:	bl	1c9b0 <pclose@plt+0x9704>
   28b74:	mvn	r0, #0
   28b78:	b	28b04 <pclose@plt+0x15858>
   28b7c:	mvn	r0, #0
   28b80:	b	28b04 <pclose@plt+0x15858>
   28b84:	muleq	r2, r0, r2
   28b88:	andeq	r5, r2, r0, lsl #20
   28b8c:	andeq	sp, r2, ip, ror r2
   28b90:	ldr	r3, [r0, #72]	; 0x48
   28b94:	cmp	r3, #0
   28b98:	beq	28ba4 <pclose@plt+0x158f8>
   28b9c:	mov	r0, r3
   28ba0:	bx	lr
   28ba4:	b	2697c <pclose@plt+0x136d0>
   28ba8:	cmp	r0, #0
   28bac:	bxeq	lr
   28bb0:	ldr	r2, [r0, #76]	; 0x4c
   28bb4:	cmp	r2, #0
   28bb8:	bne	28bc4 <pclose@plt+0x15918>
   28bbc:	b	28be8 <pclose@plt+0x1593c>
   28bc0:	mov	r2, r3
   28bc4:	ldr	r3, [r2, #76]	; 0x4c
   28bc8:	cmp	r3, #0
   28bcc:	bne	28bc0 <pclose@plt+0x15914>
   28bd0:	ldr	r3, [pc, #36]	; 28bfc <pclose@plt+0x15950>
   28bd4:	ldr	r1, [r2, #60]	; 0x3c
   28bd8:	cmp	r1, r3
   28bdc:	beq	28bf0 <pclose@plt+0x15944>
   28be0:	mov	r0, #0
   28be4:	bx	lr
   28be8:	mov	r2, r0
   28bec:	b	28bd0 <pclose@plt+0x15924>
   28bf0:	ldr	r0, [r2, #64]	; 0x40
   28bf4:	add	r0, r0, #20
   28bf8:	bx	lr
   28bfc:	andeq	r5, r2, r0, lsl #20
   28c00:	cmp	r0, #0
   28c04:	beq	28c38 <pclose@plt+0x1598c>
   28c08:	ldr	r2, [r0, #76]	; 0x4c
   28c0c:	cmp	r2, #0
   28c10:	bne	28c1c <pclose@plt+0x15970>
   28c14:	b	28c54 <pclose@plt+0x159a8>
   28c18:	mov	r2, r3
   28c1c:	ldr	r3, [r2, #76]	; 0x4c
   28c20:	cmp	r3, #0
   28c24:	bne	28c18 <pclose@plt+0x1596c>
   28c28:	ldr	r3, [pc, #44]	; 28c5c <pclose@plt+0x159b0>
   28c2c:	ldr	r1, [r2, #60]	; 0x3c
   28c30:	cmp	r1, r3
   28c34:	beq	28c40 <pclose@plt+0x15994>
   28c38:	ldr	r0, [pc, #32]	; 28c60 <pclose@plt+0x159b4>
   28c3c:	bx	lr
   28c40:	ldr	r0, [r2, #64]	; 0x40
   28c44:	ldr	r3, [pc, #20]	; 28c60 <pclose@plt+0x159b4>
   28c48:	adds	r0, r0, #20
   28c4c:	moveq	r0, r3
   28c50:	bx	lr
   28c54:	mov	r2, r0
   28c58:	b	28c28 <pclose@plt+0x1597c>
   28c5c:	andeq	r5, r2, r0, lsl #20
   28c60:	andeq	sp, r2, r8, asr #5
   28c64:	push	{r4, r5, r6, lr}
   28c68:	subs	r5, r1, #0
   28c6c:	mov	r4, r0
   28c70:	bne	28cac <pclose@plt+0x15a00>
   28c74:	ldr	r3, [r0]
   28c78:	cmp	r3, #0
   28c7c:	beq	28ca0 <pclose@plt+0x159f4>
   28c80:	ldr	r3, [pc, #124]	; 28d04 <pclose@plt+0x15a58>
   28c84:	ldr	r1, [r4, #60]	; 0x3c
   28c88:	cmp	r1, r3
   28c8c:	bne	28cf0 <pclose@plt+0x15a44>
   28c90:	mov	r0, r4
   28c94:	mov	r2, #0
   28c98:	pop	{r4, r5, r6, lr}
   28c9c:	b	275e4 <pclose@plt+0x14338>
   28ca0:	ldr	r0, [pc, #96]	; 28d08 <pclose@plt+0x15a5c>
   28ca4:	bl	1cafc <pclose@plt+0x9850>
   28ca8:	b	28c80 <pclose@plt+0x159d4>
   28cac:	mov	r1, #32
   28cb0:	mov	r0, #1
   28cb4:	bl	131bc <gcry_xcalloc@plt>
   28cb8:	ldr	r3, [r4]
   28cbc:	mov	lr, #0
   28cc0:	mov	r1, #1
   28cc4:	mov	ip, r0
   28cc8:	mov	r2, ip
   28ccc:	mov	r0, r4
   28cd0:	str	r5, [ip, #24]
   28cd4:	str	r3, [ip]
   28cd8:	str	r1, [ip, #12]
   28cdc:	mov	r3, lr
   28ce0:	str	lr, [ip, #4]
   28ce4:	ldr	r1, [pc, #24]	; 28d04 <pclose@plt+0x15a58>
   28ce8:	pop	{r4, r5, r6, lr}
   28cec:	b	273cc <pclose@plt+0x14120>
   28cf0:	ldr	r3, [pc, #20]	; 28d0c <pclose@plt+0x15a60>
   28cf4:	mov	r2, #2528	; 0x9e0
   28cf8:	ldr	r1, [pc, #16]	; 28d10 <pclose@plt+0x15a64>
   28cfc:	ldr	r0, [pc, #16]	; 28d14 <pclose@plt+0x15a68>
   28d00:	bl	1cd38 <pclose@plt+0x9a8c>
   28d04:	andeq	r7, r2, r4, lsr #26
   28d08:	andeq	sp, r2, ip, asr #5
   28d0c:			; <UNDEFINED> instruction: 0x0002c5b4
   28d10:	andeq	ip, r2, ip, ror #12
   28d14:	andeq	sp, r2, r0, lsl r3
   28d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d1c:	sub	sp, sp, #12
   28d20:	ldr	r8, [r2]
   28d24:	ldr	sl, [r1]
   28d28:	clz	ip, sl
   28d2c:	lsr	ip, ip, #5
   28d30:	mov	r9, r2
   28d34:	str	r3, [sp, #4]
   28d38:	mov	r2, r3
   28d3c:	cmp	r8, #1
   28d40:	movls	r3, ip
   28d44:	orrhi	r3, ip, #1
   28d48:	cmp	r3, #0
   28d4c:	str	r1, [sp]
   28d50:	mov	r4, r0
   28d54:	ldr	r7, [r2]
   28d58:	bne	28d90 <pclose@plt+0x15ae4>
   28d5c:	cmp	r7, #1
   28d60:	bls	28f28 <pclose@plt+0x15c7c>
   28d64:	cmp	r7, #256	; 0x100
   28d68:	movcc	r8, r7
   28d6c:	movcs	r8, #256	; 0x100
   28d70:	mov	r0, sl
   28d74:	mov	r1, r8
   28d78:	bl	12d6c <gcry_xrealloc@plt>
   28d7c:	ldr	r3, [sp]
   28d80:	mov	sl, r0
   28d84:	str	r0, [r3]
   28d88:	str	r8, [r9]
   28d8c:	b	28da0 <pclose@plt+0x15af4>
   28d90:	cmp	r8, #1
   28d94:	orrls	ip, ip, #1
   28d98:	cmp	ip, #0
   28d9c:	bne	28d64 <pclose@plt+0x15ab8>
   28da0:	mov	fp, sl
   28da4:	mov	r6, #0
   28da8:	b	28dfc <pclose@plt+0x15b50>
   28dac:	ldr	ip, [r4, #16]
   28db0:	ldr	lr, [r4, #20]
   28db4:	ldr	r5, [r4, #48]	; 0x30
   28db8:	adds	ip, ip, #1
   28dbc:	str	ip, [r4, #16]
   28dc0:	adc	lr, lr, #0
   28dc4:	add	ip, r0, #1
   28dc8:	str	lr, [r4, #20]
   28dcc:	str	ip, [r4, #40]	; 0x28
   28dd0:	ldrb	ip, [r5, r0]
   28dd4:	mov	r0, ip
   28dd8:	mov	r5, fp
   28ddc:	cmp	r0, #10
   28de0:	add	r6, r6, #1
   28de4:	strb	ip, [r5], #1
   28de8:	beq	28ef8 <pclose@plt+0x15c4c>
   28dec:	sub	r0, r8, #1
   28df0:	cmp	r0, r6
   28df4:	beq	28e30 <pclose@plt+0x15b84>
   28df8:	mov	fp, r5
   28dfc:	ldr	r0, [r4, #32]
   28e00:	cmp	r0, #0
   28e04:	bne	28e18 <pclose@plt+0x15b6c>
   28e08:	ldr	r0, [r4, #40]	; 0x28
   28e0c:	ldr	ip, [r4, #44]	; 0x2c
   28e10:	cmp	r0, ip
   28e14:	bcc	28dac <pclose@plt+0x15b00>
   28e18:	mov	r0, r4
   28e1c:	bl	27884 <pclose@plt+0x145d8>
   28e20:	cmn	r0, #1
   28e24:	beq	28f0c <pclose@plt+0x15c60>
   28e28:	uxtb	ip, r0
   28e2c:	b	28dd8 <pclose@plt+0x15b2c>
   28e30:	cmp	r8, r7
   28e34:	beq	28e94 <pclose@plt+0x15be8>
   28e38:	ldr	r3, [pc, #252]	; 28f3c <pclose@plt+0x15c90>
   28e3c:	mov	r0, sl
   28e40:	cmp	r8, r3
   28e44:	movls	r3, #256	; 0x100
   28e48:	movhi	r3, #1024	; 0x400
   28e4c:	add	r2, r8, r3
   28e50:	cmp	r7, r2
   28e54:	movcc	r8, r7
   28e58:	movcs	r8, r2
   28e5c:	mov	r1, r8
   28e60:	bl	12d6c <gcry_xrealloc@plt>
   28e64:	ldr	r3, [sp]
   28e68:	mov	sl, r0
   28e6c:	str	r0, [r3]
   28e70:	add	r5, r0, r6
   28e74:	str	r8, [r9]
   28e78:	b	28df8 <pclose@plt+0x15b4c>
   28e7c:	mov	r0, r4
   28e80:	bl	27884 <pclose@plt+0x145d8>
   28e84:	cmn	r0, #1
   28e88:	beq	28edc <pclose@plt+0x15c30>
   28e8c:	cmp	r0, #10
   28e90:	beq	28edc <pclose@plt+0x15c30>
   28e94:	ldr	r2, [r4, #32]
   28e98:	cmp	r2, #0
   28e9c:	bne	28e7c <pclose@plt+0x15bd0>
   28ea0:	ldr	r2, [r4, #40]	; 0x28
   28ea4:	ldr	r0, [r4, #44]	; 0x2c
   28ea8:	cmp	r2, r0
   28eac:	bcs	28e7c <pclose@plt+0x15bd0>
   28eb0:	ldr	r0, [r4, #16]
   28eb4:	ldr	ip, [r4, #20]
   28eb8:	ldr	lr, [r4, #48]	; 0x30
   28ebc:	adds	r0, r0, #1
   28ec0:	str	r0, [r4, #16]
   28ec4:	adc	ip, ip, #0
   28ec8:	add	r0, r2, #1
   28ecc:	str	ip, [r4, #20]
   28ed0:	str	r0, [r4, #40]	; 0x28
   28ed4:	ldrb	r0, [lr, r2]
   28ed8:	b	28e8c <pclose@plt+0x15be0>
   28edc:	cmp	sl, r5
   28ee0:	bcs	28f14 <pclose@plt+0x15c68>
   28ee4:	ldr	r3, [sp, #4]
   28ee8:	mov	r1, #10
   28eec:	mov	r2, #0
   28ef0:	strb	r1, [fp]
   28ef4:	str	r2, [r3]
   28ef8:	mov	r3, #0
   28efc:	mov	r0, r6
   28f00:	strb	r3, [r5]
   28f04:	add	sp, sp, #12
   28f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28f0c:	mov	r5, fp
   28f10:	b	28ef8 <pclose@plt+0x15c4c>
   28f14:	ldr	r3, [pc, #36]	; 28f40 <pclose@plt+0x15c94>
   28f18:	ldr	r2, [pc, #36]	; 28f44 <pclose@plt+0x15c98>
   28f1c:	ldr	r1, [pc, #36]	; 28f48 <pclose@plt+0x15c9c>
   28f20:	ldr	r0, [pc, #36]	; 28f4c <pclose@plt+0x15ca0>
   28f24:	bl	13294 <__assert_fail@plt>
   28f28:	ldr	r3, [pc, #16]	; 28f40 <pclose@plt+0x15c94>
   28f2c:	mov	r2, #2560	; 0xa00
   28f30:	ldr	r1, [pc, #16]	; 28f48 <pclose@plt+0x15c9c>
   28f34:	ldr	r0, [pc, #20]	; 28f50 <pclose@plt+0x15ca4>
   28f38:	bl	13294 <__assert_fail@plt>
   28f3c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   28f40:	ldrdeq	ip, [r2], -r8
   28f44:	andeq	r0, r0, r1, lsr #20
   28f48:	andeq	ip, r2, ip, ror #12
   28f4c:	andeq	sp, r2, r4, asr r3
   28f50:	andeq	sp, r2, ip, lsr #6
   28f54:	cmp	r2, #0
   28f58:	push	{r4, r5, r6, r7, r8, lr}
   28f5c:	mov	r4, r0
   28f60:	bne	29038 <pclose@plt+0x15d8c>
   28f64:	cmp	r1, #0
   28f68:	mov	r5, r1
   28f6c:	popeq	{r4, r5, r6, r7, r8, pc}
   28f70:	ldr	r3, [r4, #32]
   28f74:	mov	r0, r4
   28f78:	cmp	r3, #0
   28f7c:	beq	28fd8 <pclose@plt+0x15d2c>
   28f80:	bl	27884 <pclose@plt+0x145d8>
   28f84:	sub	r5, r5, #1
   28f88:	cmn	r0, #1
   28f8c:	popeq	{r4, r5, r6, r7, r8, pc}
   28f90:	cmp	r5, #0
   28f94:	bne	28fc8 <pclose@plt+0x15d1c>
   28f98:	pop	{r4, r5, r6, r7, r8, pc}
   28f9c:	ldrd	r2, [r4, #16]
   28fa0:	cmp	ip, r5
   28fa4:	movcs	ip, r5
   28fa8:	adds	r6, r2, ip
   28fac:	sub	r5, r5, ip
   28fb0:	adc	r7, r3, #0
   28fb4:	cmp	r5, #0
   28fb8:	add	r1, r1, ip
   28fbc:	str	r1, [r4, #40]	; 0x28
   28fc0:	strd	r6, [r4, #16]
   28fc4:	popeq	{r4, r5, r6, r7, r8, pc}
   28fc8:	ldr	r3, [r4, #32]
   28fcc:	mov	r0, r4
   28fd0:	cmp	r3, #0
   28fd4:	bne	28f80 <pclose@plt+0x15cd4>
   28fd8:	ldr	r1, [r4, #40]	; 0x28
   28fdc:	ldr	r3, [r4, #44]	; 0x2c
   28fe0:	cmp	r1, r3
   28fe4:	sub	ip, r3, r1
   28fe8:	bcc	28f9c <pclose@plt+0x15cf0>
   28fec:	b	28f80 <pclose@plt+0x15cd4>
   28ff0:	ldr	r2, [r4, #44]	; 0x2c
   28ff4:	ldr	r3, [r4, #40]	; 0x28
   28ff8:	cmp	r3, r2
   28ffc:	sub	ip, r2, r3
   29000:	bcs	29028 <pclose@plt+0x15d7c>
   29004:	ldrd	r0, [r4, #16]
   29008:	str	r2, [r4, #40]	; 0x28
   2900c:	ldr	r3, [r4, #40]	; 0x28
   29010:	adds	r6, r0, ip
   29014:	adc	r7, r1, #0
   29018:	cmp	r3, r2
   2901c:	strd	r6, [r4, #16]
   29020:	sub	ip, r2, r3
   29024:	bcc	29004 <pclose@plt+0x15d58>
   29028:	mov	r0, r4
   2902c:	bl	27884 <pclose@plt+0x145d8>
   29030:	cmn	r0, #1
   29034:	popeq	{r4, r5, r6, r7, r8, pc}
   29038:	ldr	r3, [r4, #32]
   2903c:	cmp	r3, #0
   29040:	bne	29028 <pclose@plt+0x15d7c>
   29044:	b	28ff0 <pclose@plt+0x15d44>
   29048:	cmp	r1, #0
   2904c:	beq	29258 <pclose@plt+0x15fac>
   29050:	eor	ip, r0, r1
   29054:	rsbmi	r1, r1, #0
   29058:	subs	r2, r1, #1
   2905c:	beq	29224 <pclose@plt+0x15f78>
   29060:	movs	r3, r0
   29064:	rsbmi	r3, r0, #0
   29068:	cmp	r3, r1
   2906c:	bls	29230 <pclose@plt+0x15f84>
   29070:	tst	r1, r2
   29074:	beq	29240 <pclose@plt+0x15f94>
   29078:	clz	r2, r3
   2907c:	clz	r0, r1
   29080:	sub	r2, r0, r2
   29084:	rsbs	r2, r2, #31
   29088:	addne	r2, r2, r2, lsl #1
   2908c:	mov	r0, #0
   29090:	addne	pc, pc, r2, lsl #2
   29094:	nop			; (mov r0, r0)
   29098:	cmp	r3, r1, lsl #31
   2909c:	adc	r0, r0, r0
   290a0:	subcs	r3, r3, r1, lsl #31
   290a4:	cmp	r3, r1, lsl #30
   290a8:	adc	r0, r0, r0
   290ac:	subcs	r3, r3, r1, lsl #30
   290b0:	cmp	r3, r1, lsl #29
   290b4:	adc	r0, r0, r0
   290b8:	subcs	r3, r3, r1, lsl #29
   290bc:	cmp	r3, r1, lsl #28
   290c0:	adc	r0, r0, r0
   290c4:	subcs	r3, r3, r1, lsl #28
   290c8:	cmp	r3, r1, lsl #27
   290cc:	adc	r0, r0, r0
   290d0:	subcs	r3, r3, r1, lsl #27
   290d4:	cmp	r3, r1, lsl #26
   290d8:	adc	r0, r0, r0
   290dc:	subcs	r3, r3, r1, lsl #26
   290e0:	cmp	r3, r1, lsl #25
   290e4:	adc	r0, r0, r0
   290e8:	subcs	r3, r3, r1, lsl #25
   290ec:	cmp	r3, r1, lsl #24
   290f0:	adc	r0, r0, r0
   290f4:	subcs	r3, r3, r1, lsl #24
   290f8:	cmp	r3, r1, lsl #23
   290fc:	adc	r0, r0, r0
   29100:	subcs	r3, r3, r1, lsl #23
   29104:	cmp	r3, r1, lsl #22
   29108:	adc	r0, r0, r0
   2910c:	subcs	r3, r3, r1, lsl #22
   29110:	cmp	r3, r1, lsl #21
   29114:	adc	r0, r0, r0
   29118:	subcs	r3, r3, r1, lsl #21
   2911c:	cmp	r3, r1, lsl #20
   29120:	adc	r0, r0, r0
   29124:	subcs	r3, r3, r1, lsl #20
   29128:	cmp	r3, r1, lsl #19
   2912c:	adc	r0, r0, r0
   29130:	subcs	r3, r3, r1, lsl #19
   29134:	cmp	r3, r1, lsl #18
   29138:	adc	r0, r0, r0
   2913c:	subcs	r3, r3, r1, lsl #18
   29140:	cmp	r3, r1, lsl #17
   29144:	adc	r0, r0, r0
   29148:	subcs	r3, r3, r1, lsl #17
   2914c:	cmp	r3, r1, lsl #16
   29150:	adc	r0, r0, r0
   29154:	subcs	r3, r3, r1, lsl #16
   29158:	cmp	r3, r1, lsl #15
   2915c:	adc	r0, r0, r0
   29160:	subcs	r3, r3, r1, lsl #15
   29164:	cmp	r3, r1, lsl #14
   29168:	adc	r0, r0, r0
   2916c:	subcs	r3, r3, r1, lsl #14
   29170:	cmp	r3, r1, lsl #13
   29174:	adc	r0, r0, r0
   29178:	subcs	r3, r3, r1, lsl #13
   2917c:	cmp	r3, r1, lsl #12
   29180:	adc	r0, r0, r0
   29184:	subcs	r3, r3, r1, lsl #12
   29188:	cmp	r3, r1, lsl #11
   2918c:	adc	r0, r0, r0
   29190:	subcs	r3, r3, r1, lsl #11
   29194:	cmp	r3, r1, lsl #10
   29198:	adc	r0, r0, r0
   2919c:	subcs	r3, r3, r1, lsl #10
   291a0:	cmp	r3, r1, lsl #9
   291a4:	adc	r0, r0, r0
   291a8:	subcs	r3, r3, r1, lsl #9
   291ac:	cmp	r3, r1, lsl #8
   291b0:	adc	r0, r0, r0
   291b4:	subcs	r3, r3, r1, lsl #8
   291b8:	cmp	r3, r1, lsl #7
   291bc:	adc	r0, r0, r0
   291c0:	subcs	r3, r3, r1, lsl #7
   291c4:	cmp	r3, r1, lsl #6
   291c8:	adc	r0, r0, r0
   291cc:	subcs	r3, r3, r1, lsl #6
   291d0:	cmp	r3, r1, lsl #5
   291d4:	adc	r0, r0, r0
   291d8:	subcs	r3, r3, r1, lsl #5
   291dc:	cmp	r3, r1, lsl #4
   291e0:	adc	r0, r0, r0
   291e4:	subcs	r3, r3, r1, lsl #4
   291e8:	cmp	r3, r1, lsl #3
   291ec:	adc	r0, r0, r0
   291f0:	subcs	r3, r3, r1, lsl #3
   291f4:	cmp	r3, r1, lsl #2
   291f8:	adc	r0, r0, r0
   291fc:	subcs	r3, r3, r1, lsl #2
   29200:	cmp	r3, r1, lsl #1
   29204:	adc	r0, r0, r0
   29208:	subcs	r3, r3, r1, lsl #1
   2920c:	cmp	r3, r1
   29210:	adc	r0, r0, r0
   29214:	subcs	r3, r3, r1
   29218:	cmp	ip, #0
   2921c:	rsbmi	r0, r0, #0
   29220:	bx	lr
   29224:	teq	ip, r0
   29228:	rsbmi	r0, r0, #0
   2922c:	bx	lr
   29230:	movcc	r0, #0
   29234:	asreq	r0, ip, #31
   29238:	orreq	r0, r0, #1
   2923c:	bx	lr
   29240:	clz	r2, r1
   29244:	rsb	r2, r2, #31
   29248:	cmp	ip, #0
   2924c:	lsr	r0, r3, r2
   29250:	rsbmi	r0, r0, #0
   29254:	bx	lr
   29258:	cmp	r0, #0
   2925c:	mvngt	r0, #-2147483648	; 0x80000000
   29260:	movlt	r0, #-2147483648	; 0x80000000
   29264:	b	29398 <pclose@plt+0x160ec>
   29268:	cmp	r1, #0
   2926c:	beq	29258 <pclose@plt+0x15fac>
   29270:	push	{r0, r1, lr}
   29274:	bl	29050 <pclose@plt+0x15da4>
   29278:	pop	{r1, r2, lr}
   2927c:	mul	r3, r2, r0
   29280:	sub	r1, r1, r3
   29284:	bx	lr
   29288:	cmp	r3, #0
   2928c:	cmpeq	r2, #0
   29290:	bne	292b4 <pclose@plt+0x16008>
   29294:	cmp	r1, #0
   29298:	movlt	r1, #-2147483648	; 0x80000000
   2929c:	movlt	r0, #0
   292a0:	blt	292b0 <pclose@plt+0x16004>
   292a4:	cmpeq	r0, #0
   292a8:	mvnne	r1, #-2147483648	; 0x80000000
   292ac:	mvnne	r0, #0
   292b0:	b	29398 <pclose@plt+0x160ec>
   292b4:	sub	sp, sp, #8
   292b8:	push	{sp, lr}
   292bc:	cmp	r1, #0
   292c0:	blt	292e0 <pclose@plt+0x16034>
   292c4:	cmp	r3, #0
   292c8:	blt	29314 <pclose@plt+0x16068>
   292cc:	bl	293a8 <pclose@plt+0x160fc>
   292d0:	ldr	lr, [sp, #4]
   292d4:	add	sp, sp, #8
   292d8:	pop	{r2, r3}
   292dc:	bx	lr
   292e0:	rsbs	r0, r0, #0
   292e4:	sbc	r1, r1, r1, lsl #1
   292e8:	cmp	r3, #0
   292ec:	blt	29338 <pclose@plt+0x1608c>
   292f0:	bl	293a8 <pclose@plt+0x160fc>
   292f4:	ldr	lr, [sp, #4]
   292f8:	add	sp, sp, #8
   292fc:	pop	{r2, r3}
   29300:	rsbs	r0, r0, #0
   29304:	sbc	r1, r1, r1, lsl #1
   29308:	rsbs	r2, r2, #0
   2930c:	sbc	r3, r3, r3, lsl #1
   29310:	bx	lr
   29314:	rsbs	r2, r2, #0
   29318:	sbc	r3, r3, r3, lsl #1
   2931c:	bl	293a8 <pclose@plt+0x160fc>
   29320:	ldr	lr, [sp, #4]
   29324:	add	sp, sp, #8
   29328:	pop	{r2, r3}
   2932c:	rsbs	r0, r0, #0
   29330:	sbc	r1, r1, r1, lsl #1
   29334:	bx	lr
   29338:	rsbs	r2, r2, #0
   2933c:	sbc	r3, r3, r3, lsl #1
   29340:	bl	293a8 <pclose@plt+0x160fc>
   29344:	ldr	lr, [sp, #4]
   29348:	add	sp, sp, #8
   2934c:	pop	{r2, r3}
   29350:	rsbs	r2, r2, #0
   29354:	sbc	r3, r3, r3, lsl #1
   29358:	bx	lr
   2935c:	cmp	r3, #0
   29360:	cmpeq	r2, #0
   29364:	bne	2937c <pclose@plt+0x160d0>
   29368:	cmp	r1, #0
   2936c:	cmpeq	r0, #0
   29370:	mvnne	r1, #0
   29374:	mvnne	r0, #0
   29378:	b	29398 <pclose@plt+0x160ec>
   2937c:	sub	sp, sp, #8
   29380:	push	{sp, lr}
   29384:	bl	293a8 <pclose@plt+0x160fc>
   29388:	ldr	lr, [sp, #4]
   2938c:	add	sp, sp, #8
   29390:	pop	{r2, r3}
   29394:	bx	lr
   29398:	push	{r1, lr}
   2939c:	mov	r0, #8
   293a0:	bl	129b8 <raise@plt>
   293a4:	pop	{r1, pc}
   293a8:	cmp	r1, r3
   293ac:	cmpeq	r0, r2
   293b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   293b4:	mov	r4, r0
   293b8:	movcc	r0, #0
   293bc:	mov	r5, r1
   293c0:	ldr	lr, [sp, #36]	; 0x24
   293c4:	movcc	r1, r0
   293c8:	bcc	294c4 <pclose@plt+0x16218>
   293cc:	cmp	r3, #0
   293d0:	clzeq	ip, r2
   293d4:	clzne	ip, r3
   293d8:	addeq	ip, ip, #32
   293dc:	cmp	r5, #0
   293e0:	clzeq	r1, r4
   293e4:	addeq	r1, r1, #32
   293e8:	clzne	r1, r5
   293ec:	sub	ip, ip, r1
   293f0:	sub	sl, ip, #32
   293f4:	lsl	r9, r3, ip
   293f8:	rsb	fp, ip, #32
   293fc:	orr	r9, r9, r2, lsl sl
   29400:	orr	r9, r9, r2, lsr fp
   29404:	lsl	r8, r2, ip
   29408:	cmp	r5, r9
   2940c:	cmpeq	r4, r8
   29410:	movcc	r0, #0
   29414:	movcc	r1, r0
   29418:	bcc	29434 <pclose@plt+0x16188>
   2941c:	mov	r0, #1
   29420:	subs	r4, r4, r8
   29424:	lsl	r1, r0, sl
   29428:	orr	r1, r1, r0, lsr fp
   2942c:	lsl	r0, r0, ip
   29430:	sbc	r5, r5, r9
   29434:	cmp	ip, #0
   29438:	beq	294c4 <pclose@plt+0x16218>
   2943c:	lsr	r6, r8, #1
   29440:	orr	r6, r6, r9, lsl #31
   29444:	lsr	r7, r9, #1
   29448:	mov	r2, ip
   2944c:	b	29470 <pclose@plt+0x161c4>
   29450:	subs	r3, r4, r6
   29454:	sbc	r8, r5, r7
   29458:	adds	r3, r3, r3
   2945c:	adc	r8, r8, r8
   29460:	adds	r4, r3, #1
   29464:	adc	r5, r8, #0
   29468:	subs	r2, r2, #1
   2946c:	beq	2948c <pclose@plt+0x161e0>
   29470:	cmp	r5, r7
   29474:	cmpeq	r4, r6
   29478:	bcs	29450 <pclose@plt+0x161a4>
   2947c:	adds	r4, r4, r4
   29480:	adc	r5, r5, r5
   29484:	subs	r2, r2, #1
   29488:	bne	29470 <pclose@plt+0x161c4>
   2948c:	lsr	r3, r4, ip
   29490:	orr	r3, r3, r5, lsl fp
   29494:	lsr	r2, r5, ip
   29498:	orr	r3, r3, r5, lsr sl
   2949c:	adds	r0, r0, r4
   294a0:	mov	r4, r3
   294a4:	lsl	r3, r2, ip
   294a8:	orr	r3, r3, r4, lsl sl
   294ac:	lsl	ip, r4, ip
   294b0:	orr	r3, r3, r4, lsr fp
   294b4:	adc	r1, r1, r5
   294b8:	subs	r0, r0, ip
   294bc:	mov	r5, r2
   294c0:	sbc	r1, r1, r3
   294c4:	cmp	lr, #0
   294c8:	strdne	r4, [lr]
   294cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   294d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   294d4:	mov	r7, r0
   294d8:	ldr	r6, [pc, #72]	; 29528 <pclose@plt+0x1627c>
   294dc:	ldr	r5, [pc, #72]	; 2952c <pclose@plt+0x16280>
   294e0:	add	r6, pc, r6
   294e4:	add	r5, pc, r5
   294e8:	sub	r6, r6, r5
   294ec:	mov	r8, r1
   294f0:	mov	r9, r2
   294f4:	bl	12980 <gcry_xmalloc@plt-0x20>
   294f8:	asrs	r6, r6, #2
   294fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   29500:	mov	r4, #0
   29504:	add	r4, r4, #1
   29508:	ldr	r3, [r5], #4
   2950c:	mov	r2, r9
   29510:	mov	r1, r8
   29514:	mov	r0, r7
   29518:	blx	r3
   2951c:	cmp	r6, r4
   29520:	bne	29504 <pclose@plt+0x16258>
   29524:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29528:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   2952c:	andeq	r4, r1, ip, asr #11
   29530:	bx	lr
   29534:	ldr	r3, [pc, #12]	; 29548 <pclose@plt+0x1629c>
   29538:	mov	r1, #0
   2953c:	add	r3, pc, r3
   29540:	ldr	r2, [r3]
   29544:	b	12f40 <__cxa_atexit@plt>
   29548:	andeq	r4, r1, r0, asr #21

Disassembly of section .fini:

0002954c <.fini>:
   2954c:	push	{r3, lr}
   29550:	pop	{r3, pc}
