
raspbian-preinstalled/arm-linux-gnueabihf-ld.bfd:     file format elf32-littlearm


Disassembly of section .init:

000131c4 <.init>:
   131c4:	push	{r3, lr}
   131c8:	bl	1489c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc44>
   131cc:	pop	{r3, pc}

Disassembly of section .plt:

000131d0 <calloc@plt-0x14>:
   131d0:	push	{lr}		; (str lr, [sp, #-4]!)
   131d4:	ldr	lr, [pc, #4]	; 131e0 <calloc@plt-0x4>
   131d8:	add	lr, pc, lr
   131dc:	ldr	pc, [lr, #8]!
   131e0:	andeq	r3, fp, r0, lsr #28

000131e4 <calloc@plt>:
   131e4:	add	ip, pc, #0, 12
   131e8:	add	ip, ip, #733184	; 0xb3000
   131ec:	ldr	pc, [ip, #3616]!	; 0xe20

000131f0 <strstr@plt>:
   131f0:	add	ip, pc, #0, 12
   131f4:	add	ip, ip, #733184	; 0xb3000
   131f8:	ldr	pc, [ip, #3608]!	; 0xe18

000131fc <bfd_get_reloc_code_name@plt>:
   131fc:	add	ip, pc, #0, 12
   13200:	add	ip, ip, #733184	; 0xb3000
   13204:	ldr	pc, [ip, #3600]!	; 0xe10

00013208 <bfd_emul_get_commonpagesize@plt>:
   13208:	add	ip, pc, #0, 12
   1320c:	add	ip, ip, #733184	; 0xb3000
   13210:	ldr	pc, [ip, #3592]!	; 0xe08

00013214 <raise@plt>:
   13214:	add	ip, pc, #0, 12
   13218:	add	ip, ip, #733184	; 0xb3000
   1321c:	ldr	pc, [ip, #3584]!	; 0xe00

00013220 <elf32_arm_fix_exidx_coverage@plt>:
   13220:	add	ip, pc, #0, 12
   13224:	add	ip, ip, #733184	; 0xb3000
   13228:	ldr	pc, [ip, #3576]!	; 0xdf8

0001322c <bfd_get_section_by_name_if@plt>:
   1322c:	add	ip, pc, #0, 12
   13230:	add	ip, ip, #733184	; 0xb3000
   13234:	ldr	pc, [ip, #3568]!	; 0xdf0

00013238 <cplus_demangle_name_to_style@plt>:
   13238:	add	ip, pc, #0, 12
   1323c:	add	ip, ip, #733184	; 0xb3000
   13240:	ldr	pc, [ip, #3560]!	; 0xde8

00013244 <htab_hash_string@plt>:
   13244:	add	ip, pc, #0, 12
   13248:	add	ip, ip, #733184	; 0xb3000
   1324c:	ldr	pc, [ip, #3552]!	; 0xde0

00013250 <bfd_scan_vma@plt>:
   13250:	add	ip, pc, #0, 12
   13254:	add	ip, ip, #733184	; 0xb3000
   13258:	ldr	pc, [ip, #3544]!	; 0xdd8

0001325c <register_ld_plugin_object_p@plt>:
   1325c:	add	ip, pc, #0, 12
   13260:	add	ip, ip, #733184	; 0xb3000
   13264:	ldr	pc, [ip, #3536]!	; 0xdd0

00013268 <strcmp@plt>:
   13268:	add	ip, pc, #0, 12
   1326c:	add	ip, ip, #733184	; 0xb3000
   13270:	ldr	pc, [ip, #3528]!	; 0xdc8

00013274 <strtol@plt>:
   13274:	add	ip, pc, #0, 12
   13278:	add	ip, ip, #733184	; 0xb3000
   1327c:	ldr	pc, [ip, #3520]!	; 0xdc0

00013280 <elf32_arm_setup_section_lists@plt>:
   13280:	add	ip, pc, #0, 12
   13284:	add	ip, ip, #733184	; 0xb3000
   13288:	ldr	pc, [ip, #3512]!	; 0xdb8

0001328c <bfd_make_writable@plt>:
   1328c:	add	ip, pc, #0, 12
   13290:	add	ip, ip, #733184	; 0xb3000
   13294:	ldr	pc, [ip, #3504]!	; 0xdb0

00013298 <bfd_elf32_arm_set_vfp11_fix@plt>:
   13298:	add	ip, pc, #0, 12
   1329c:	add	ip, ip, #733184	; 0xb3000
   132a0:	ldr	pc, [ip, #3496]!	; 0xda8

000132a4 <strcspn@plt>:
   132a4:	add	ip, pc, #0, 12
   132a8:	add	ip, ip, #733184	; 0xb3000
   132ac:	ldr	pc, [ip, #3488]!	; 0xda0

000132b0 <bfd_elf_record_link_assignment@plt>:
   132b0:	add	ip, pc, #0, 12
   132b4:	add	ip, ip, #733184	; 0xb3000
   132b8:	ldr	pc, [ip, #3480]!	; 0xd98

000132bc <printf@plt>:
   132bc:	add	ip, pc, #0, 12
   132c0:	add	ip, ip, #733184	; 0xb3000
   132c4:	ldr	pc, [ip, #3472]!	; 0xd90

000132c8 <bfd_make_section_with_flags@plt>:
   132c8:	add	ip, pc, #0, 12
   132cc:	add	ip, ip, #733184	; 0xb3000
   132d0:	ldr	pc, [ip, #3464]!	; 0xd88

000132d4 <read@plt>:
   132d4:	add	ip, pc, #0, 12
   132d8:	add	ip, ip, #733184	; 0xb3000
   132dc:	ldr	pc, [ip, #3456]!	; 0xd80

000132e0 <fflush@plt>:
   132e0:	add	ip, pc, #0, 12
   132e4:	add	ip, ip, #733184	; 0xb3000
   132e8:	ldr	pc, [ip, #3448]!	; 0xd78

000132ec <bfd_make_readable@plt>:
   132ec:	add	ip, pc, #0, 12
   132f0:	add	ip, ip, #733184	; 0xb3000
   132f4:	ldr	pc, [ip, #3440]!	; 0xd70

000132f8 <bfd_wrapped_link_hash_lookup@plt>:
   132f8:	add	ip, pc, #0, 12
   132fc:	add	ip, ip, #733184	; 0xb3000
   13300:	ldr	pc, [ip, #3432]!	; 0xd68

00013304 <bfd_generic_link_read_symbols@plt>:
   13304:	add	ip, pc, #0, 12
   13308:	add	ip, ip, #733184	; 0xb3000
   1330c:	ldr	pc, [ip, #3424]!	; 0xd60

00013310 <bfd_arch_mach_octets_per_byte@plt>:
   13310:	add	ip, pc, #0, 12
   13314:	add	ip, ip, #733184	; 0xb3000
   13318:	ldr	pc, [ip, #3416]!	; 0xd58

0001331c <bfd_elf_get_runpath_list@plt>:
   1331c:	add	ip, pc, #0, 12
   13320:	add	ip, ip, #733184	; 0xb3000
   13324:	ldr	pc, [ip, #3408]!	; 0xd50

00013328 <memmove@plt>:
   13328:	add	ip, pc, #0, 12
   1332c:	add	ip, ip, #733184	; 0xb3000
   13330:	ldr	pc, [ip, #3400]!	; 0xd48

00013334 <bfd_hash_traverse@plt>:
   13334:	add	ip, pc, #0, 12
   13338:	add	ip, ip, #733184	; 0xb3000
   1333c:	ldr	pc, [ip, #3392]!	; 0xd40

00013340 <bfd_set_default_target@plt>:
   13340:	add	ip, pc, #0, 12
   13344:	add	ip, ip, #733184	; 0xb3000
   13348:	ldr	pc, [ip, #3384]!	; 0xd38

0001334c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>:
   1334c:	add	ip, pc, #0, 12
   13350:	add	ip, ip, #733184	; 0xb3000
   13354:	ldr	pc, [ip, #3376]!	; 0xd30

00013358 <bfd_emul_get_maxpagesize@plt>:
   13358:	add	ip, pc, #0, 12
   1335c:	add	ip, ip, #733184	; 0xb3000
   13360:	ldr	pc, [ip, #3368]!	; 0xd28

00013364 <free@plt>:
   13364:	add	ip, pc, #0, 12
   13368:	add	ip, ip, #733184	; 0xb3000
   1336c:	ldr	pc, [ip, #3360]!	; 0xd20

00013370 <fgets@plt>:
   13370:	add	ip, pc, #0, 12
   13374:	add	ip, ip, #733184	; 0xb3000
   13378:	ldr	pc, [ip, #3352]!	; 0xd18

0001337c <bfd_make_section_anyway_with_flags@plt>:
   1337c:	add	ip, pc, #0, 12
   13380:	add	ip, ip, #733184	; 0xb3000
   13384:	ldr	pc, [ip, #3344]!	; 0xd10

00013388 <ferror@plt>:
   13388:	add	ip, pc, #0, 12
   1338c:	add	ip, ip, #733184	; 0xb3000
   13390:	ldr	pc, [ip, #3336]!	; 0xd08

00013394 <filename_cmp@plt>:
   13394:	add	ip, pc, #0, 12
   13398:	add	ip, ip, #733184	; 0xb3000
   1339c:	ldr	pc, [ip, #3328]!	; 0xd00

000133a0 <bfd_stat@plt>:
   133a0:	add	ip, pc, #0, 12
   133a4:	add	ip, ip, #733184	; 0xb3000
   133a8:	ldr	pc, [ip, #3320]!	; 0xcf8

000133ac <cplus_demangle_set_style@plt>:
   133ac:	add	ip, pc, #0, 12
   133b0:	add	ip, ip, #733184	; 0xb3000
   133b4:	ldr	pc, [ip, #3312]!	; 0xcf0

000133b8 <memcpy@plt>:
   133b8:	add	ip, pc, #0, 12
   133bc:	add	ip, ip, #733184	; 0xb3000
   133c0:	ldr	pc, [ip, #3304]!	; 0xce8

000133c4 <mmap64@plt>:
   133c4:	add	ip, pc, #0, 12
   133c8:	add	ip, ip, #733184	; 0xb3000
   133cc:	ldr	pc, [ip, #3296]!	; 0xce0

000133d0 <_bfd_elf_tls_setup@plt>:
   133d0:	add	ip, pc, #0, 12
   133d4:	add	ip, ip, #733184	; 0xb3000
   133d8:	ldr	pc, [ip, #3288]!	; 0xcd8

000133dc <bfd_openr@plt>:
   133dc:	add	ip, pc, #0, 12
   133e0:	add	ip, ip, #733184	; 0xb3000
   133e4:	ldr	pc, [ip, #3280]!	; 0xcd0

000133e8 <bfd_elf32_arm_set_cortex_a8_fix@plt>:
   133e8:	add	ip, pc, #0, 12
   133ec:	add	ip, ip, #733184	; 0xb3000
   133f0:	ldr	pc, [ip, #3272]!	; 0xcc8

000133f4 <lrealpath@plt>:
   133f4:	add	ip, pc, #0, 12
   133f8:	add	ip, ip, #733184	; 0xb3000
   133fc:	ldr	pc, [ip, #3264]!	; 0xcc0

00013400 <bfd_hash_newfunc@plt>:
   13400:	add	ip, pc, #0, 12
   13404:	add	ip, ip, #733184	; 0xb3000
   13408:	ldr	pc, [ip, #3256]!	; 0xcb8

0001340c <bfd_elf32_arm_allocate_interworking_sections@plt>:
   1340c:	add	ip, pc, #0, 12
   13410:	add	ip, ip, #733184	; 0xb3000
   13414:	ldr	pc, [ip, #3248]!	; 0xcb0

00013418 <ftell@plt>:
   13418:	add	ip, pc, #0, 12
   1341c:	add	ip, ip, #733184	; 0xb3000
   13420:	ldr	pc, [ip, #3240]!	; 0xca8

00013424 <memcmp@plt>:
   13424:	add	ip, pc, #0, 12
   13428:	add	ip, ip, #733184	; 0xb3000
   1342c:	ldr	pc, [ip, #3232]!	; 0xca0

00013430 <_obstack_newchunk@plt>:
   13430:	add	ip, pc, #0, 12
   13434:	add	ip, ip, #733184	; 0xb3000
   13438:	ldr	pc, [ip, #3224]!	; 0xc98

0001343c <stpcpy@plt>:
   1343c:	add	ip, pc, #0, 12
   13440:	add	ip, ip, #733184	; 0xb3000
   13444:	ldr	pc, [ip, #3216]!	; 0xc90

00013448 <bfd_alloc@plt>:
   13448:	add	ip, pc, #0, 12
   1344c:	add	ip, ip, #733184	; 0xb3000
   13450:	ldr	pc, [ip, #3208]!	; 0xc88

00013454 <bfd_get_section_contents@plt>:
   13454:	add	ip, pc, #0, 12
   13458:	add	ip, ip, #733184	; 0xb3000
   1345c:	ldr	pc, [ip, #3200]!	; 0xc80

00013460 <dcgettext@plt>:
   13460:	add	ip, pc, #0, 12
   13464:	add	ip, ip, #733184	; 0xb3000
   13468:	ldr	pc, [ip, #3192]!	; 0xc78

0001346c <strdup@plt>:
   1346c:	add	ip, pc, #0, 12
   13470:	add	ip, ip, #733184	; 0xb3000
   13474:	ldr	pc, [ip, #3184]!	; 0xc70

00013478 <bfd_get_reloc_size@plt>:
   13478:	add	ip, pc, #0, 12
   1347c:	add	ip, ip, #733184	; 0xb3000
   13480:	ldr	pc, [ip, #3176]!	; 0xc68

00013484 <_bfd_elf_map_sections_to_segments@plt>:
   13484:	add	ip, pc, #0, 12
   13488:	add	ip, ip, #733184	; 0xb3000
   1348c:	ldr	pc, [ip, #3168]!	; 0xc60

00013490 <rewind@plt>:
   13490:	add	ip, pc, #0, 12
   13494:	add	ip, ip, #733184	; 0xb3000
   13498:	ldr	pc, [ip, #3160]!	; 0xc58

0001349c <dlclose@plt>:
   1349c:	add	ip, pc, #0, 12
   134a0:	add	ip, ip, #733184	; 0xb3000
   134a4:	ldr	pc, [ip, #3152]!	; 0xc50

000134a8 <bfd_reloc_type_lookup@plt>:
   134a8:	add	ip, pc, #0, 12
   134ac:	add	ip, ip, #733184	; 0xb3000
   134b0:	ldr	pc, [ip, #3144]!	; 0xc48

000134b4 <_obstack_begin@plt>:
   134b4:	add	ip, pc, #0, 12
   134b8:	add	ip, ip, #733184	; 0xb3000
   134bc:	ldr	pc, [ip, #3136]!	; 0xc40

000134c0 <getpwd@plt>:
   134c0:	add	ip, pc, #0, 12
   134c4:	add	ip, ip, #733184	; 0xb3000
   134c8:	ldr	pc, [ip, #3128]!	; 0xc38

000134cc <bfd_elf_get_dt_soname@plt>:
   134cc:	add	ip, pc, #0, 12
   134d0:	add	ip, ip, #733184	; 0xb3000
   134d4:	ldr	pc, [ip, #3120]!	; 0xc30

000134d8 <realloc@plt>:
   134d8:	add	ip, pc, #0, 12
   134dc:	add	ip, ip, #733184	; 0xb3000
   134e0:	ldr	pc, [ip, #3112]!	; 0xc28

000134e4 <bfd_elf_get_dyn_lib_class@plt>:
   134e4:	add	ip, pc, #0, 12
   134e8:	add	ip, ip, #733184	; 0xb3000
   134ec:	ldr	pc, [ip, #3104]!	; 0xc20

000134f0 <dlerror@plt>:
   134f0:	add	ip, pc, #0, 12
   134f4:	add	ip, ip, #733184	; 0xb3000
   134f8:	ldr	pc, [ip, #3096]!	; 0xc18

000134fc <xrealloc@plt>:
   134fc:	add	ip, pc, #0, 12
   13500:	add	ip, ip, #733184	; 0xb3000
   13504:	ldr	pc, [ip, #3088]!	; 0xc10

00013508 <bfd_hash_table_free@plt>:
   13508:	add	ip, pc, #0, 12
   1350c:	add	ip, ip, #733184	; 0xb3000
   13510:	ldr	pc, [ip, #3080]!	; 0xc08

00013514 <textdomain@plt>:
   13514:	add	ip, pc, #0, 12
   13518:	add	ip, ip, #733184	; 0xb3000
   1351c:	ldr	pc, [ip, #3072]!	; 0xc00

00013520 <strcasecmp@plt>:
   13520:	add	ip, pc, #0, 12
   13524:	add	ip, ip, #733184	; 0xb3000
   13528:	ldr	pc, [ip, #3064]!	; 0xbf8

0001352c <concat@plt>:
   1352c:	add	ip, pc, #0, 12
   13530:	add	ip, ip, #733184	; 0xb3000
   13534:	ldr	pc, [ip, #3056]!	; 0xbf0

00013538 <filename_ncmp@plt>:
   13538:	add	ip, pc, #0, 12
   1353c:	add	ip, ip, #733184	; 0xb3000
   13540:	ldr	pc, [ip, #3048]!	; 0xbe8

00013544 <bfd_target_list@plt>:
   13544:	add	ip, pc, #0, 12
   13548:	add	ip, ip, #733184	; 0xb3000
   1354c:	ldr	pc, [ip, #3040]!	; 0xbe0

00013550 <bfd_get_error@plt>:
   13550:	add	ip, pc, #0, 12
   13554:	add	ip, ip, #733184	; 0xb3000
   13558:	ldr	pc, [ip, #3032]!	; 0xbd8

0001355c <bfd_arch_get_compatible@plt>:
   1355c:	add	ip, pc, #0, 12
   13560:	add	ip, ip, #733184	; 0xb3000
   13564:	ldr	pc, [ip, #3024]!	; 0xbd0

00013568 <fwrite@plt>:
   13568:	add	ip, pc, #0, 12
   1356c:	add	ip, ip, #733184	; 0xb3000
   13570:	ldr	pc, [ip, #3016]!	; 0xbc8

00013574 <xmalloc@plt>:
   13574:	add	ip, pc, #0, 12
   13578:	add	ip, ip, #733184	; 0xb3000
   1357c:	ldr	pc, [ip, #3008]!	; 0xbc0

00013580 <bfd_set_error@plt>:
   13580:	add	ip, pc, #0, 12
   13584:	add	ip, ip, #733184	; 0xb3000
   13588:	ldr	pc, [ip, #3000]!	; 0xbb8

0001358c <xmalloc_set_program_name@plt>:
   1358c:	add	ip, pc, #0, 12
   13590:	add	ip, ip, #733184	; 0xb3000
   13594:	ldr	pc, [ip, #2992]!	; 0xbb0

00013598 <lseek64@plt>:
   13598:	add	ip, pc, #0, 12
   1359c:	add	ip, ip, #733184	; 0xb3000
   135a0:	ldr	pc, [ip, #2984]!	; 0xba8

000135a4 <xstrdup@plt>:
   135a4:	add	ip, pc, #0, 12
   135a8:	add	ip, ip, #733184	; 0xb3000
   135ac:	ldr	pc, [ip, #2976]!	; 0xba0

000135b0 <bfd_get_gp_size@plt>:
   135b0:	add	ip, pc, #0, 12
   135b4:	add	ip, ip, #733184	; 0xb3000
   135b8:	ldr	pc, [ip, #2968]!	; 0xb98

000135bc <bfd_elf32_arm_use_long_plt@plt>:
   135bc:	add	ip, pc, #0, 12
   135c0:	add	ip, ip, #733184	; 0xb3000
   135c4:	ldr	pc, [ip, #2960]!	; 0xb90

000135c8 <bfd_elf32_arm_keep_private_stub_output_sections@plt>:
   135c8:	add	ip, pc, #0, 12
   135cc:	add	ip, ip, #733184	; 0xb3000
   135d0:	ldr	pc, [ip, #2952]!	; 0xb88

000135d4 <strcpy@plt>:
   135d4:	add	ip, pc, #0, 12
   135d8:	add	ip, ip, #733184	; 0xb3000
   135dc:	ldr	pc, [ip, #2944]!	; 0xb80

000135e0 <dlopen@plt>:
   135e0:	add	ip, pc, #0, 12
   135e4:	add	ip, ip, #733184	; 0xb3000
   135e8:	ldr	pc, [ip, #2936]!	; 0xb78

000135ec <fread@plt>:
   135ec:	add	ip, pc, #0, 12
   135f0:	add	ip, ip, #733184	; 0xb3000
   135f4:	ldr	pc, [ip, #2928]!	; 0xb70

000135f8 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>:
   135f8:	add	ip, pc, #0, 12
   135fc:	add	ip, ip, #733184	; 0xb3000
   13600:	ldr	pc, [ip, #2920]!	; 0xb68

00013604 <bfd_get_section_by_name@plt>:
   13604:	add	ip, pc, #0, 12
   13608:	add	ip, ip, #733184	; 0xb3000
   1360c:	ldr	pc, [ip, #2912]!	; 0xb60

00013610 <bfd_elf_get_needed_list@plt>:
   13610:	add	ip, pc, #0, 12
   13614:	add	ip, ip, #733184	; 0xb3000
   13618:	ldr	pc, [ip, #2904]!	; 0xb58

0001361c <bfd_elf_discard_info@plt>:
   1361c:	add	ip, pc, #0, 12
   13620:	add	ip, ip, #733184	; 0xb3000
   13624:	ldr	pc, [ip, #2896]!	; 0xb50

00013628 <bfd_create@plt>:
   13628:	add	ip, pc, #0, 12
   1362c:	add	ip, ip, #733184	; 0xb3000
   13630:	ldr	pc, [ip, #2888]!	; 0xb48

00013634 <bfd_link_add_undef@plt>:
   13634:	add	ip, pc, #0, 12
   13638:	add	ip, ip, #733184	; 0xb3000
   1363c:	ldr	pc, [ip, #2880]!	; 0xb40

00013640 <bfd_link_hash_lookup@plt>:
   13640:	add	ip, pc, #0, 12
   13644:	add	ip, ip, #733184	; 0xb3000
   13648:	ldr	pc, [ip, #2872]!	; 0xb38

0001364c <bfd_elf32_arm_get_bfd_for_interworking@plt>:
   1364c:	add	ip, pc, #0, 12
   13650:	add	ip, ip, #733184	; 0xb3000
   13654:	ldr	pc, [ip, #2864]!	; 0xb30

00013658 <bfd_init@plt>:
   13658:	add	ip, pc, #0, 12
   1365c:	add	ip, ip, #733184	; 0xb3000
   13660:	ldr	pc, [ip, #2856]!	; 0xb28

00013664 <fnmatch@plt>:
   13664:	add	ip, pc, #0, 12
   13668:	add	ip, ip, #733184	; 0xb3000
   1366c:	ldr	pc, [ip, #2848]!	; 0xb20

00013670 <bfd_hash_table_init_n@plt>:
   13670:	add	ip, pc, #0, 12
   13674:	add	ip, ip, #733184	; 0xb3000
   13678:	ldr	pc, [ip, #2840]!	; 0xb18

0001367c <lbasename@plt>:
   1367c:	add	ip, pc, #0, 12
   13680:	add	ip, ip, #733184	; 0xb3000
   13684:	ldr	pc, [ip, #2832]!	; 0xb10

00013688 <open64@plt>:
   13688:	add	ip, pc, #0, 12
   1368c:	add	ip, ip, #733184	; 0xb3000
   13690:	ldr	pc, [ip, #2824]!	; 0xb08

00013694 <bfd_printable_name@plt>:
   13694:	add	ip, pc, #0, 12
   13698:	add	ip, ip, #733184	; 0xb3000
   1369c:	ldr	pc, [ip, #2816]!	; 0xb00

000136a0 <bfd_get_arch_info@plt>:
   136a0:	add	ip, pc, #0, 12
   136a4:	add	ip, ip, #733184	; 0xb3000
   136a8:	ldr	pc, [ip, #2808]!	; 0xaf8

000136ac <bfd_set_error_handler@plt>:
   136ac:	add	ip, pc, #0, 12
   136b0:	add	ip, ip, #733184	; 0xb3000
   136b4:	ldr	pc, [ip, #2800]!	; 0xaf0

000136b8 <getenv@plt>:
   136b8:	add	ip, pc, #0, 12
   136bc:	add	ip, ip, #733184	; 0xb3000
   136c0:	ldr	pc, [ip, #2792]!	; 0xae8

000136c4 <bfd_emul_set_commonpagesize@plt>:
   136c4:	add	ip, pc, #0, 12
   136c8:	add	ip, ip, #733184	; 0xb3000
   136cc:	ldr	pc, [ip, #2784]!	; 0xae0

000136d0 <puts@plt>:
   136d0:	add	ip, pc, #0, 12
   136d4:	add	ip, ip, #733184	; 0xb3000
   136d8:	ldr	pc, [ip, #2776]!	; 0xad8

000136dc <bfd_hash_allocate@plt>:
   136dc:	add	ip, pc, #0, 12
   136e0:	add	ip, ip, #733184	; 0xb3000
   136e4:	ldr	pc, [ip, #2768]!	; 0xad0

000136e8 <bfd_elf32_arm_set_stm32l4xx_fix@plt>:
   136e8:	add	ip, pc, #0, 12
   136ec:	add	ip, ip, #733184	; 0xb3000
   136f0:	ldr	pc, [ip, #2760]!	; 0xac8

000136f4 <bfd_set_symtab@plt>:
   136f4:	add	ip, pc, #0, 12
   136f8:	add	ip, ip, #733184	; 0xb3000
   136fc:	ldr	pc, [ip, #2752]!	; 0xac0

00013700 <malloc@plt>:
   13700:	add	ip, pc, #0, 12
   13704:	add	ip, ip, #733184	; 0xb3000
   13708:	ldr	pc, [ip, #2744]!	; 0xab8

0001370c <bfd_elf32_arm_set_target_params@plt>:
   1370c:	add	ip, pc, #0, 12
   13710:	add	ip, ip, #733184	; 0xb3000
   13714:	ldr	pc, [ip, #2736]!	; 0xab0

00013718 <__libc_start_main@plt>:
   13718:	add	ip, pc, #0, 12
   1371c:	add	ip, ip, #733184	; 0xb3000
   13720:	ldr	pc, [ip, #2728]!	; 0xaa8

00013724 <htab_find_slot@plt>:
   13724:	add	ip, pc, #0, 12
   13728:	add	ip, ip, #733184	; 0xb3000
   1372c:	ldr	pc, [ip, #2720]!	; 0xaa0

00013730 <bfd_elf32_arm_vfp11_erratum_scan@plt>:
   13730:	add	ip, pc, #0, 12
   13734:	add	ip, ip, #733184	; 0xb3000
   13738:	ldr	pc, [ip, #2712]!	; 0xa98

0001373c <bfd_elf32_arm_process_before_allocation@plt>:
   1373c:	add	ip, pc, #0, 12
   13740:	add	ip, ip, #733184	; 0xb3000
   13744:	ldr	pc, [ip, #2704]!	; 0xa90

00013748 <__gmon_start__@plt>:
   13748:	add	ip, pc, #0, 12
   1374c:	add	ip, ip, #733184	; 0xb3000
   13750:	ldr	pc, [ip, #2696]!	; 0xa88

00013754 <bfd_set_format@plt>:
   13754:	add	ip, pc, #0, 12
   13758:	add	ip, ip, #733184	; 0xb3000
   1375c:	ldr	pc, [ip, #2688]!	; 0xa80

00013760 <getopt_long@plt>:
   13760:	add	ip, pc, #0, 12
   13764:	add	ip, ip, #733184	; 0xb3000
   13768:	ldr	pc, [ip, #2680]!	; 0xa78

0001376c <bfd_octets_per_byte@plt>:
   1376c:	add	ip, pc, #0, 12
   13770:	add	ip, ip, #733184	; 0xb3000
   13774:	ldr	pc, [ip, #2672]!	; 0xa70

00013778 <glob64@plt>:
   13778:	add	ip, pc, #0, 12
   1377c:	add	ip, ip, #733184	; 0xb3000
   13780:	ldr	pc, [ip, #2664]!	; 0xa68

00013784 <bfd_bwrite@plt>:
   13784:	add	ip, pc, #0, 12
   13788:	add	ip, ip, #733184	; 0xb3000
   1378c:	ldr	pc, [ip, #2656]!	; 0xa60

00013790 <exit@plt>:
   13790:	add	ip, pc, #0, 12
   13794:	add	ip, ip, #733184	; 0xb3000
   13798:	ldr	pc, [ip, #2648]!	; 0xa58

0001379c <feof@plt>:
   1379c:	add	ip, pc, #0, 12
   137a0:	add	ip, ip, #733184	; 0xb3000
   137a4:	ldr	pc, [ip, #2640]!	; 0xa50

000137a8 <bfd_hash_lookup@plt>:
   137a8:	add	ip, pc, #0, 12
   137ac:	add	ip, ip, #733184	; 0xb3000
   137b0:	ldr	pc, [ip, #2632]!	; 0xa48

000137b4 <bfd_record_phdr@plt>:
   137b4:	add	ip, pc, #0, 12
   137b8:	add	ip, ip, #733184	; 0xb3000
   137bc:	ldr	pc, [ip, #2624]!	; 0xa40

000137c0 <bfd_elf_get_bfd_needed_list@plt>:
   137c0:	add	ip, pc, #0, 12
   137c4:	add	ip, ip, #733184	; 0xb3000
   137c8:	ldr	pc, [ip, #2616]!	; 0xa38

000137cc <strtoul@plt>:
   137cc:	add	ip, pc, #0, 12
   137d0:	add	ip, ip, #733184	; 0xb3000
   137d4:	ldr	pc, [ip, #2608]!	; 0xa30

000137d8 <strlen@plt>:
   137d8:	add	ip, pc, #0, 12
   137dc:	add	ip, ip, #733184	; 0xb3000
   137e0:	ldr	pc, [ip, #2600]!	; 0xa28

000137e4 <bfd_close_all_done@plt>:
   137e4:	add	ip, pc, #0, 12
   137e8:	add	ip, ip, #733184	; 0xb3000
   137ec:	ldr	pc, [ip, #2592]!	; 0xa20

000137f0 <bfd_elf_set_dyn_lib_class@plt>:
   137f0:	add	ip, pc, #0, 12
   137f4:	add	ip, ip, #733184	; 0xb3000
   137f8:	ldr	pc, [ip, #2584]!	; 0xa18

000137fc <strchr@plt>:
   137fc:	add	ip, pc, #0, 12
   13800:	add	ip, ip, #733184	; 0xb3000
   13804:	ldr	pc, [ip, #2576]!	; 0xa10

00013808 <bfd_hide_sym_by_version@plt>:
   13808:	add	ip, pc, #0, 12
   1380c:	add	ip, ip, #733184	; 0xb3000
   13810:	ldr	pc, [ip, #2568]!	; 0xa08

00013814 <bfd_get_arch@plt>:
   13814:	add	ip, pc, #0, 12
   13818:	add	ip, ip, #733184	; 0xb3000
   1381c:	ldr	pc, [ip, #2560]!	; 0xa00

00013820 <bfd_putl32@plt>:
   13820:	add	ip, pc, #0, 12
   13824:	add	ip, ip, #733184	; 0xb3000
   13828:	ldr	pc, [ip, #2552]!	; 0x9f8

0001382c <fprintf@plt>:
   1382c:	add	ip, pc, #0, 12
   13830:	add	ip, ip, #733184	; 0xb3000
   13834:	ldr	pc, [ip, #2544]!	; 0x9f0

00013838 <getpagesize@plt>:
   13838:	add	ip, pc, #0, 12
   1383c:	add	ip, ip, #733184	; 0xb3000
   13840:	ldr	pc, [ip, #2536]!	; 0x9e8

00013844 <bfd_getb16@plt>:
   13844:	add	ip, pc, #0, 12
   13848:	add	ip, ip, #733184	; 0xb3000
   1384c:	ldr	pc, [ip, #2528]!	; 0x9e0

00013850 <bfd_elf32_arm_init_maps@plt>:
   13850:	add	ip, pc, #0, 12
   13854:	add	ip, ip, #733184	; 0xb3000
   13858:	ldr	pc, [ip, #2520]!	; 0x9d8

0001385c <bfd_get_next_section_by_name@plt>:
   1385c:	add	ip, pc, #0, 12
   13860:	add	ip, ip, #733184	; 0xb3000
   13864:	ldr	pc, [ip, #2512]!	; 0x9d0

00013868 <bfd_elf_parse_eh_frame_entries@plt>:
   13868:	add	ip, pc, #0, 12
   1386c:	add	ip, ip, #733184	; 0xb3000
   13870:	ldr	pc, [ip, #2504]!	; 0x9c8

00013874 <__errno_location@plt>:
   13874:	add	ip, pc, #0, 12
   13878:	add	ip, ip, #733184	; 0xb3000
   1387c:	ldr	pc, [ip, #2496]!	; 0x9c0

00013880 <unlink_if_ordinary@plt>:
   13880:	add	ip, pc, #0, 12
   13884:	add	ip, ip, #733184	; 0xb3000
   13888:	ldr	pc, [ip, #2488]!	; 0x9b8

0001388c <bfd_elf_size_dynamic_sections@plt>:
   1388c:	add	ip, pc, #0, 12
   13890:	add	ip, ip, #733184	; 0xb3000
   13894:	ldr	pc, [ip, #2480]!	; 0x9b0

00013898 <bfd_iterate_over_targets@plt>:
   13898:	add	ip, pc, #0, 12
   1389c:	add	ip, ip, #733184	; 0xb3000
   138a0:	ldr	pc, [ip, #2472]!	; 0x9a8

000138a4 <memset@plt>:
   138a4:	add	ip, pc, #0, 12
   138a8:	add	ip, ip, #733184	; 0xb3000
   138ac:	ldr	pc, [ip, #2464]!	; 0x9a0

000138b0 <putchar@plt>:
   138b0:	add	ip, pc, #0, 12
   138b4:	add	ip, ip, #733184	; 0xb3000
   138b8:	ldr	pc, [ip, #2456]!	; 0x998

000138bc <strncpy@plt>:
   138bc:	add	ip, pc, #0, 12
   138c0:	add	ip, ip, #733184	; 0xb3000
   138c4:	ldr	pc, [ip, #2448]!	; 0x990

000138c8 <bfd_get_unique_section_name@plt>:
   138c8:	add	ip, pc, #0, 12
   138cc:	add	ip, ip, #733184	; 0xb3000
   138d0:	ldr	pc, [ip, #2440]!	; 0x988

000138d4 <_obstack_free@plt>:
   138d4:	add	ip, pc, #0, 12
   138d8:	add	ip, ip, #733184	; 0xb3000
   138dc:	ldr	pc, [ip, #2432]!	; 0x980

000138e0 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>:
   138e0:	add	ip, pc, #0, 12
   138e4:	add	ip, ip, #733184	; 0xb3000
   138e8:	ldr	pc, [ip, #2424]!	; 0x978

000138ec <bfd_get_mach@plt>:
   138ec:	add	ip, pc, #0, 12
   138f0:	add	ip, ip, #733184	; 0xb3000
   138f4:	ldr	pc, [ip, #2416]!	; 0x970

000138f8 <fileno@plt>:
   138f8:	add	ip, pc, #0, 12
   138fc:	add	ip, ip, #733184	; 0xb3000
   13900:	ldr	pc, [ip, #2408]!	; 0x968

00013904 <bfd_link_hash_traverse@plt>:
   13904:	add	ip, pc, #0, 12
   13908:	add	ip, ip, #733184	; 0xb3000
   1390c:	ldr	pc, [ip, #2400]!	; 0x960

00013910 <objalloc_free_block@plt>:
   13910:	add	ip, pc, #0, 12
   13914:	add	ip, ip, #733184	; 0xb3000
   13918:	ldr	pc, [ip, #2392]!	; 0x958

0001391c <getopt_long_only@plt>:
   1391c:	add	ip, pc, #0, 12
   13920:	add	ip, ip, #733184	; 0xb3000
   13924:	ldr	pc, [ip, #2384]!	; 0x950

00013928 <fclose@plt>:
   13928:	add	ip, pc, #0, 12
   1392c:	add	ip, ip, #733184	; 0xb3000
   13930:	ldr	pc, [ip, #2376]!	; 0x948

00013934 <bfd_set_gp_size@plt>:
   13934:	add	ip, pc, #0, 12
   13938:	add	ip, ip, #733184	; 0xb3000
   1393c:	ldr	pc, [ip, #2368]!	; 0x940

00013940 <bfd_openw@plt>:
   13940:	add	ip, pc, #0, 12
   13944:	add	ip, ip, #733184	; 0xb3000
   13948:	ldr	pc, [ip, #2360]!	; 0x938

0001394c <bfd_make_section_anyway@plt>:
   1394c:	add	ip, pc, #0, 12
   13950:	add	ip, ip, #733184	; 0xb3000
   13954:	ldr	pc, [ip, #2352]!	; 0x930

00013958 <bfd_set_error_program_name@plt>:
   13958:	add	ip, pc, #0, 12
   1395c:	add	ip, ip, #733184	; 0xb3000
   13960:	ldr	pc, [ip, #2344]!	; 0x928

00013964 <munmap@plt>:
   13964:	add	ip, pc, #0, 12
   13968:	add	ip, ip, #733184	; 0xb3000
   1396c:	ldr	pc, [ip, #2336]!	; 0x920

00013970 <make_relative_prefix@plt>:
   13970:	add	ip, pc, #0, 12
   13974:	add	ip, ip, #733184	; 0xb3000
   13978:	ldr	pc, [ip, #2328]!	; 0x918

0001397c <bfd_demangle@plt>:
   1397c:	add	ip, pc, #0, 12
   13980:	add	ip, ip, #733184	; 0xb3000
   13984:	ldr	pc, [ip, #2320]!	; 0x910

00013988 <setlocale@plt>:
   13988:	add	ip, pc, #0, 12
   1398c:	add	ip, ip, #733184	; 0xb3000
   13990:	ldr	pc, [ip, #2312]!	; 0x908

00013994 <bfd_scan_arch@plt>:
   13994:	add	ip, pc, #0, 12
   13998:	add	ip, ip, #733184	; 0xb3000
   1399c:	ldr	pc, [ip, #2304]!	; 0x900

000139a0 <bfd_cache_close_all@plt>:
   139a0:	add	ip, pc, #0, 12
   139a4:	add	ip, ip, #733184	; 0xb3000
   139a8:	ldr	pc, [ip, #2296]!	; 0x8f8

000139ac <strrchr@plt>:
   139ac:	add	ip, pc, #0, 12
   139b0:	add	ip, ip, #733184	; 0xb3000
   139b4:	ldr	pc, [ip, #2288]!	; 0x8f0

000139b8 <fputc@plt>:
   139b8:	add	ip, pc, #0, 12
   139bc:	add	ip, ip, #733184	; 0xb3000
   139c0:	ldr	pc, [ip, #2280]!	; 0x8e8

000139c4 <globfree64@plt>:
   139c4:	add	ip, pc, #0, 12
   139c8:	add	ip, ip, #733184	; 0xb3000
   139cc:	ldr	pc, [ip, #2272]!	; 0x8e0

000139d0 <xexit@plt>:
   139d0:	add	ip, pc, #0, 12
   139d4:	add	ip, ip, #733184	; 0xb3000
   139d8:	ldr	pc, [ip, #2264]!	; 0x8d8

000139dc <bfd_close@plt>:
   139dc:	add	ip, pc, #0, 12
   139e0:	add	ip, ip, #733184	; 0xb3000
   139e4:	ldr	pc, [ip, #2256]!	; 0x8d0

000139e8 <bfd_plugin_target_p@plt>:
   139e8:	add	ip, pc, #0, 12
   139ec:	add	ip, ip, #733184	; 0xb3000
   139f0:	ldr	pc, [ip, #2248]!	; 0x8c8

000139f4 <elf32_arm_build_stubs@plt>:
   139f4:	add	ip, pc, #0, 12
   139f8:	add	ip, ip, #733184	; 0xb3000
   139fc:	ldr	pc, [ip, #2240]!	; 0x8c0

00013a00 <sprintf@plt>:
   13a00:	add	ip, pc, #0, 12
   13a04:	add	ip, ip, #733184	; 0xb3000
   13a08:	ldr	pc, [ip, #2232]!	; 0x8b8

00013a0c <bfd_getb32@plt>:
   13a0c:	add	ip, pc, #0, 12
   13a10:	add	ip, ip, #733184	; 0xb3000
   13a14:	ldr	pc, [ip, #2224]!	; 0x8b0

00013a18 <putc@plt>:
   13a18:	add	ip, pc, #0, 12
   13a1c:	add	ip, ip, #733184	; 0xb3000
   13a20:	ldr	pc, [ip, #2216]!	; 0x8a8

00013a24 <bfd_check_format_matches@plt>:
   13a24:	add	ip, pc, #0, 12
   13a28:	add	ip, ip, #733184	; 0xb3000
   13a2c:	ldr	pc, [ip, #2208]!	; 0x8a0

00013a30 <bfd_putl16@plt>:
   13a30:	add	ip, pc, #0, 12
   13a34:	add	ip, ip, #733184	; 0xb3000
   13a38:	ldr	pc, [ip, #2200]!	; 0x898

00013a3c <bfd_elf_size_dynsym_hash_dynstr@plt>:
   13a3c:	add	ip, pc, #0, 12
   13a40:	add	ip, ip, #733184	; 0xb3000
   13a44:	ldr	pc, [ip, #2192]!	; 0x890

00013a48 <bfd_emul_set_maxpagesize@plt>:
   13a48:	add	ip, pc, #0, 12
   13a4c:	add	ip, ip, #733184	; 0xb3000
   13a50:	ldr	pc, [ip, #2184]!	; 0x888

00013a54 <bfd_elf_set_dt_needed_name@plt>:
   13a54:	add	ip, pc, #0, 12
   13a58:	add	ip, ip, #733184	; 0xb3000
   13a5c:	ldr	pc, [ip, #2176]!	; 0x880

00013a60 <fopen64@plt>:
   13a60:	add	ip, pc, #0, 12
   13a64:	add	ip, ip, #733184	; 0xb3000
   13a68:	ldr	pc, [ip, #2168]!	; 0x878

00013a6c <bfd_errmsg@plt>:
   13a6c:	add	ip, pc, #0, 12
   13a70:	add	ip, ip, #733184	; 0xb3000
   13a74:	ldr	pc, [ip, #2160]!	; 0x870

00013a78 <qsort@plt>:
   13a78:	add	ip, pc, #0, 12
   13a7c:	add	ip, ip, #733184	; 0xb3000
   13a80:	ldr	pc, [ip, #2152]!	; 0x868

00013a84 <bfd_canonicalize_reloc@plt>:
   13a84:	add	ip, pc, #0, 12
   13a88:	add	ip, ip, #733184	; 0xb3000
   13a8c:	ldr	pc, [ip, #2144]!	; 0x860

00013a90 <htab_find@plt>:
   13a90:	add	ip, pc, #0, 12
   13a94:	add	ip, ip, #733184	; 0xb3000
   13a98:	ldr	pc, [ip, #2136]!	; 0x858

00013a9c <bfd_elf32_arm_set_byteswap_code@plt>:
   13a9c:	add	ip, pc, #0, 12
   13aa0:	add	ip, ip, #733184	; 0xb3000
   13aa4:	ldr	pc, [ip, #2128]!	; 0x850

00013aa8 <bfd_set_assert_handler@plt>:
   13aa8:	add	ip, pc, #0, 12
   13aac:	add	ip, ip, #733184	; 0xb3000
   13ab0:	ldr	pc, [ip, #2120]!	; 0x848

00013ab4 <getrusage@plt>:
   13ab4:	add	ip, pc, #0, 12
   13ab8:	add	ip, ip, #733184	; 0xb3000
   13abc:	ldr	pc, [ip, #2112]!	; 0x840

00013ac0 <strpbrk@plt>:
   13ac0:	add	ip, pc, #0, 12
   13ac4:	add	ip, ip, #733184	; 0xb3000
   13ac8:	ldr	pc, [ip, #2104]!	; 0x838

00013acc <htab_create@plt>:
   13acc:	add	ip, pc, #0, 12
   13ad0:	add	ip, ip, #733184	; 0xb3000
   13ad4:	ldr	pc, [ip, #2096]!	; 0x830

00013ad8 <bindtextdomain@plt>:
   13ad8:	add	ip, pc, #0, 12
   13adc:	add	ip, ip, #733184	; 0xb3000
   13ae0:	ldr	pc, [ip, #2088]!	; 0x828

00013ae4 <bfd_check_format@plt>:
   13ae4:	add	ip, pc, #0, 12
   13ae8:	add	ip, ip, #733184	; 0xb3000
   13aec:	ldr	pc, [ip, #2080]!	; 0x820

00013af0 <bfd_openr_next_archived_file@plt>:
   13af0:	add	ip, pc, #0, 12
   13af4:	add	ip, ip, #733184	; 0xb3000
   13af8:	ldr	pc, [ip, #2072]!	; 0x818

00013afc <bfd_hash_table_init@plt>:
   13afc:	add	ip, pc, #0, 12
   13b00:	add	ip, ip, #733184	; 0xb3000
   13b04:	ldr	pc, [ip, #2064]!	; 0x810

00013b08 <xmemdup@plt>:
   13b08:	add	ip, pc, #0, 12
   13b0c:	add	ip, ip, #733184	; 0xb3000
   13b10:	ldr	pc, [ip, #2056]!	; 0x808

00013b14 <bfd_get_reloc_upper_bound@plt>:
   13b14:	add	ip, pc, #0, 12
   13b18:	add	ip, ip, #733184	; 0xb3000
   13b1c:	ldr	pc, [ip, #2048]!	; 0x800

00013b20 <bfd_map_over_sections@plt>:
   13b20:	add	ip, pc, #0, 12
   13b24:	add	ip, ip, #733184	; 0xb3000
   13b28:	ldr	pc, [ip, #2040]!	; 0x7f8

00013b2c <bfd_new_link_order@plt>:
   13b2c:	add	ip, pc, #0, 12
   13b30:	add	ip, ip, #733184	; 0xb3000
   13b34:	ldr	pc, [ip, #2032]!	; 0x7f0

00013b38 <bfd_set_start_address@plt>:
   13b38:	add	ip, pc, #0, 12
   13b3c:	add	ip, ip, #733184	; 0xb3000
   13b40:	ldr	pc, [ip, #2024]!	; 0x7e8

00013b44 <bfd_section_already_linked_table_init@plt>:
   13b44:	add	ip, pc, #0, 12
   13b48:	add	ip, ip, #733184	; 0xb3000
   13b4c:	ldr	pc, [ip, #2016]!	; 0x7e0

00013b50 <_bfd_fix_excluded_sec_syms@plt>:
   13b50:	add	ip, pc, #0, 12
   13b54:	add	ip, ip, #733184	; 0xb3000
   13b58:	ldr	pc, [ip, #2008]!	; 0x7d8

00013b5c <bfd_link_check_relocs@plt>:
   13b5c:	add	ip, pc, #0, 12
   13b60:	add	ip, ip, #733184	; 0xb3000
   13b64:	ldr	pc, [ip, #2000]!	; 0x7d0

00013b68 <fseek@plt>:
   13b68:	add	ip, pc, #0, 12
   13b6c:	add	ip, ip, #733184	; 0xb3000
   13b70:	ldr	pc, [ip, #1992]!	; 0x7c8

00013b74 <elf32_arm_size_stubs@plt>:
   13b74:	add	ip, pc, #0, 12
   13b78:	add	ip, ip, #733184	; 0xb3000
   13b7c:	ldr	pc, [ip, #1984]!	; 0x7c0

00013b80 <bfd_section_already_linked_table_free@plt>:
   13b80:	add	ip, pc, #0, 12
   13b84:	add	ip, ip, #733184	; 0xb3000
   13b88:	ldr	pc, [ip, #1976]!	; 0x7b8

00013b8c <__xstat64@plt>:
   13b8c:	add	ip, pc, #0, 12
   13b90:	add	ip, ip, #733184	; 0xb3000
   13b94:	ldr	pc, [ip, #1968]!	; 0x7b0

00013b98 <isatty@plt>:
   13b98:	add	ip, pc, #0, 12
   13b9c:	add	ip, ip, #733184	; 0xb3000
   13ba0:	ldr	pc, [ip, #1960]!	; 0x7a8

00013ba4 <fputs@plt>:
   13ba4:	add	ip, pc, #0, 12
   13ba8:	add	ip, ip, #733184	; 0xb3000
   13bac:	ldr	pc, [ip, #1952]!	; 0x7a0

00013bb0 <strncmp@plt>:
   13bb0:	add	ip, pc, #0, 12
   13bb4:	add	ip, ip, #733184	; 0xb3000
   13bb8:	ldr	pc, [ip, #1944]!	; 0x798

00013bbc <abort@plt>:
   13bbc:	add	ip, pc, #0, 12
   13bc0:	add	ip, ip, #733184	; 0xb3000
   13bc4:	ldr	pc, [ip, #1936]!	; 0x790

00013bc8 <getc@plt>:
   13bc8:	add	ip, pc, #0, 12
   13bcc:	add	ip, ip, #733184	; 0xb3000
   13bd0:	ldr	pc, [ip, #1928]!	; 0x788

00013bd4 <elf32_arm_next_input_section@plt>:
   13bd4:	add	ip, pc, #0, 12
   13bd8:	add	ip, ip, #733184	; 0xb3000
   13bdc:	ldr	pc, [ip, #1920]!	; 0x780

00013be0 <close@plt>:
   13be0:	add	ip, pc, #0, 12
   13be4:	add	ip, ip, #733184	; 0xb3000
   13be8:	ldr	pc, [ip, #1912]!	; 0x778

00013bec <xcalloc@plt>:
   13bec:	add	ip, pc, #0, 12
   13bf0:	add	ip, ip, #733184	; 0xb3000
   13bf4:	ldr	pc, [ip, #1904]!	; 0x770

00013bf8 <dcngettext@plt>:
   13bf8:	add	ip, pc, #0, 12
   13bfc:	add	ip, ip, #733184	; 0xb3000
   13c00:	ldr	pc, [ip, #1896]!	; 0x768

00013c04 <_bfd_elf_match_sections_by_type@plt>:
   13c04:	add	ip, pc, #0, 12
   13c08:	add	ip, ip, #733184	; 0xb3000
   13c0c:	ldr	pc, [ip, #1888]!	; 0x760

00013c10 <dlsym@plt>:
   13c10:	add	ip, pc, #0, 12
   13c14:	add	ip, ip, #733184	; 0xb3000
   13c18:	ldr	pc, [ip, #1880]!	; 0x758

00013c1c <bfd_set_arch_info@plt>:
   13c1c:	add	ip, pc, #0, 12
   13c20:	add	ip, ip, #733184	; 0xb3000
   13c24:	ldr	pc, [ip, #1872]!	; 0x750

00013c28 <bfd_arch_bits_per_address@plt>:
   13c28:	add	ip, pc, #0, 12
   13c2c:	add	ip, ip, #733184	; 0xb3000
   13c30:	ldr	pc, [ip, #1864]!	; 0x748

00013c34 <bfd_plugin_open_input@plt>:
   13c34:	add	ip, pc, #0, 12
   13c38:	add	ip, ip, #733184	; 0xb3000
   13c3c:	ldr	pc, [ip, #1856]!	; 0x740

00013c40 <bfd_hash_set_default_size@plt>:
   13c40:	add	ip, pc, #0, 12
   13c44:	add	ip, ip, #733184	; 0xb3000
   13c48:	ldr	pc, [ip, #1848]!	; 0x738

00013c4c <bfd_seek@plt>:
   13c4c:	add	ip, pc, #0, 12
   13c50:	add	ip, ip, #733184	; 0xb3000
   13c54:	ldr	pc, [ip, #1840]!	; 0x730

00013c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>:
   13c58:	add	ip, pc, #0, 12
   13c5c:	add	ip, ip, #733184	; 0xb3000
   13c60:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00013c68 <.text>:
   13c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c6c:	sub	sp, sp, #44	; 0x2c
   13c70:	ldr	r6, [pc, #2736]	; 14728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad0>
   13c74:	str	r1, [sp, #24]
   13c78:	str	r0, [sp, #28]
   13c7c:	bl	3ed6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b114>
   13c80:	ldr	r1, [pc, #2724]	; 1472c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad4>
   13c84:	str	r0, [sp, #20]
   13c88:	mov	r0, #5
   13c8c:	bl	13988 <setlocale@plt>
   13c90:	ldr	r1, [pc, #2708]	; 1472c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad4>
   13c94:	mov	r0, #0
   13c98:	bl	13988 <setlocale@plt>
   13c9c:	ldr	r1, [pc, #2700]	; 14730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad8>
   13ca0:	ldr	r0, [pc, #2700]	; 14734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadc>
   13ca4:	bl	13ad8 <bindtextdomain@plt>
   13ca8:	ldr	r0, [pc, #2692]	; 14734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadc>
   13cac:	bl	13514 <textdomain@plt>
   13cb0:	ldr	r3, [sp, #24]
   13cb4:	ldr	r2, [pc, #2684]	; 14738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0>
   13cb8:	ldr	r3, [r3]
   13cbc:	mov	r4, r2
   13cc0:	mov	r0, r3
   13cc4:	str	r3, [r2]
   13cc8:	bl	1358c <xmalloc_set_program_name@plt>
   13ccc:	add	r1, sp, #24
   13cd0:	add	r0, sp, #28
   13cd4:	bl	3e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad70>
   13cd8:	bl	13658 <bfd_init@plt>
   13cdc:	ldr	r0, [r4]
   13ce0:	bl	13958 <bfd_set_error_program_name@plt>
   13ce4:	ldr	r0, [pc, #2640]	; 1473c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae4>
   13ce8:	bl	13aa8 <bfd_set_assert_handler@plt>
   13cec:	str	r0, [r6]
   13cf0:	ldr	r0, [pc, #2632]	; 14740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae8>
   13cf4:	bl	136ac <bfd_set_error_handler@plt>
   13cf8:	str	r0, [r6, #4]
   13cfc:	ldr	r0, [pc, #2624]	; 14744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaec>
   13d00:	bl	3ee08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1b0>
   13d04:	ldr	r9, [sp, #28]
   13d08:	ldr	r5, [sp, #24]
   13d0c:	cmp	r9, #1
   13d10:	ble	1412c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4d4>
   13d14:	ldr	r8, [pc, #2604]	; 14748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf0>
   13d18:	mov	r7, #1
   13d1c:	b	13d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd4>
   13d20:	add	r7, r7, #1
   13d24:	cmp	r9, r7
   13d28:	beq	1412c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4d4>
   13d2c:	ldr	r4, [r5, #4]!
   13d30:	mov	r2, #10
   13d34:	mov	r0, r4
   13d38:	mov	r1, r8
   13d3c:	bl	13bb0 <strncmp@plt>
   13d40:	cmp	r0, #0
   13d44:	bne	13d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8>
   13d48:	ldrb	r2, [r4, #10]
   13d4c:	ldr	r3, [pc, #2552]	; 1474c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf4>
   13d50:	add	r0, r4, #10
   13d54:	cmp	r2, #0
   13d58:	str	r0, [r3]
   13d5c:	bne	14138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e0>
   13d60:	ldr	r3, [pc, #2536]	; 14750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf8>
   13d64:	ldr	r4, [r3]
   13d68:	cmp	r4, #0
   13d6c:	beq	14148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f0>
   13d70:	mov	r0, r4
   13d74:	bl	137d8 <strlen@plt>
   13d78:	ldr	r3, [pc, #2516]	; 14754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafc>
   13d7c:	cmp	r0, #0
   13d80:	str	r0, [r3]
   13d84:	beq	13da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148>
   13d88:	sub	r0, r0, #1
   13d8c:	ldrb	r2, [r4, r0]
   13d90:	cmp	r2, #47	; 0x2f
   13d94:	moveq	r2, #0
   13d98:	streq	r0, [r3]
   13d9c:	strbeq	r2, [r4, r0]
   13da0:	ldr	r0, [pc, #2480]	; 14758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb00>
   13da4:	bl	13340 <bfd_set_default_target@plt>
   13da8:	cmp	r0, #0
   13dac:	bne	13dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174>
   13db0:	mov	r2, #5
   13db4:	ldr	r1, [pc, #2464]	; 1475c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb04>
   13db8:	bl	13460 <dcgettext@plt>
   13dbc:	ldr	r1, [pc, #2452]	; 14758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb00>
   13dc0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   13dc4:	mov	r0, #1
   13dc8:	bl	139d0 <xexit@plt>
   13dcc:	ldr	r4, [pc, #2444]	; 14760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb08>
   13dd0:	ldr	r7, [pc, #2444]	; 14764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb0c>
   13dd4:	ldr	r8, [pc, #2444]	; 14768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb10>
   13dd8:	mov	fp, #1
   13ddc:	mvn	r9, #0
   13de0:	mov	sl, #58	; 0x3a
   13de4:	ldr	r0, [pc, #2432]	; 1476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb14>
   13de8:	strb	sl, [r7, #72]	; 0x48
   13dec:	str	fp, [r7, #12]
   13df0:	str	fp, [r7, #4]
   13df4:	str	fp, [r7]
   13df8:	str	fp, [r7, #48]	; 0x30
   13dfc:	str	r9, [r7, #84]	; 0x54
   13e00:	str	r9, [r7, #88]	; 0x58
   13e04:	str	r9, [r4, #20]
   13e08:	str	fp, [r8, #16]
   13e0c:	str	fp, [r8, #20]
   13e10:	strb	r9, [r8, #24]
   13e14:	bl	136b8 <getenv@plt>
   13e18:	ldr	r2, [r4]
   13e1c:	ldrh	r3, [r4, #4]
   13e20:	orr	r2, r2, #67108864	; 0x4000000
   13e24:	orr	r2, r2, #1024	; 0x400
   13e28:	ldr	r1, [pc, #2368]	; 14770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb18>
   13e2c:	str	r2, [r4]
   13e30:	ldr	r2, [pc, #2364]	; 14774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1c>
   13e34:	and	r3, r3, r1
   13e38:	str	r2, [r4, #76]	; 0x4c
   13e3c:	add	r2, r4, #56	; 0x38
   13e40:	ldr	ip, [pc, #2352]	; 14778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb20>
   13e44:	str	r2, [r4, #60]	; 0x3c
   13e48:	orr	r3, r3, #8512	; 0x2140
   13e4c:	mov	r2, #5
   13e50:	ldr	r1, [pc, #2340]	; 1477c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb24>
   13e54:	orr	r3, r3, #12
   13e58:	str	ip, [r4, #24]
   13e5c:	strh	r3, [r4, #4]
   13e60:	ldr	ip, [pc, #2328]	; 14780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb28>
   13e64:	strb	sl, [r4, #10]
   13e68:	str	ip, [r4, #80]	; 0x50
   13e6c:	str	r2, [r4, #108]	; 0x6c
   13e70:	str	fp, [r4, #84]	; 0x54
   13e74:	str	r9, [r4, #92]	; 0x5c
   13e78:	str	r9, [r4, #96]	; 0x60
   13e7c:	str	r9, [r4, #100]	; 0x64
   13e80:	clz	r3, r0
   13e84:	lsr	r3, r3, r2
   13e88:	ldr	r0, [pc, #2204]	; 1472c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad4>
   13e8c:	str	r3, [r1]
   13e90:	bl	2f8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc60>
   13e94:	ldr	r3, [sp, #24]
   13e98:	ldr	r0, [pc, #2276]	; 14784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c>
   13e9c:	ldr	sl, [sp, #28]
   13ea0:	str	r3, [sp, #12]
   13ea4:	bl	136b8 <getenv@plt>
   13ea8:	ldr	r3, [pc, #2264]	; 14788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb30>
   13eac:	cmp	r0, #0
   13eb0:	movne	r3, r0
   13eb4:	cmp	sl, fp
   13eb8:	str	r3, [sp, #16]
   13ebc:	bgt	13fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x394>
   13ec0:	ldr	r0, [sp, #16]
   13ec4:	bl	2d748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19af0>
   13ec8:	ldr	r1, [sp, #24]
   13ecc:	ldr	r0, [sp, #28]
   13ed0:	bl	2d4f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19898>
   13ed4:	ldr	r3, [pc, #2224]	; 1478c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb34>
   13ed8:	ldr	sl, [pc, #2224]	; 14790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb38>
   13edc:	str	r0, [r3]
   13ee0:	bl	211fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd5a4>
   13ee4:	bl	2d278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19620>
   13ee8:	bl	2d318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196c0>
   13eec:	mov	r3, #0
   13ef0:	ldr	r0, [sp, #28]
   13ef4:	ldr	r1, [sp, #24]
   13ef8:	str	r3, [sl]
   13efc:	bl	19b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ee0>
   13f00:	ldr	r0, [r7, #92]	; 0x5c
   13f04:	cmp	r0, #0
   13f08:	bne	144d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x880>
   13f0c:	bl	31b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1deb4>
   13f10:	bl	2d3a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1974c>
   13f14:	ldr	r3, [r6, #12]
   13f18:	cmp	r3, #0
   13f1c:	beq	144f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x89c>
   13f20:	ldr	r3, [pc, #2156]	; 14794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb3c>
   13f24:	ldr	r3, [r3]
   13f28:	cmp	r3, #0
   13f2c:	bne	14434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7dc>
   13f30:	ldr	r3, [r8, #44]	; 0x2c
   13f34:	cmp	r3, #0
   13f38:	movne	r2, #1
   13f3c:	bne	13f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2f8>
   13f40:	ldrb	r3, [r4]
   13f44:	and	r3, r3, #3
   13f48:	subs	r2, r3, #2
   13f4c:	movne	r2, #1
   13f50:	ldrb	r3, [r4, #1]
   13f54:	ldr	r1, [r8, #36]	; 0x24
   13f58:	bic	r3, r3, #16
   13f5c:	orr	r3, r3, r2, lsl #4
   13f60:	cmp	r1, #0
   13f64:	strb	r3, [r4, #1]
   13f68:	bne	144e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x888>
   13f6c:	bl	24154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104fc>
   13f70:	ldr	r3, [sp, #28]
   13f74:	cmp	r3, #2
   13f78:	beq	144c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x86c>
   13f7c:	ldrb	r3, [r4, #7]
   13f80:	tst	r3, #32
   13f84:	beq	13f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x340>
   13f88:	ldrb	r3, [r4]
   13f8c:	and	r3, r3, #3
   13f90:	cmp	r3, #3
   13f94:	bne	14298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x640>
   13f98:	ldr	r3, [sl]
   13f9c:	cmp	r3, #0
   13fa0:	bne	14168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x510>
   13fa4:	ldr	r2, [pc, #2028]	; 14798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb40>
   13fa8:	ldr	r3, [r8, #36]	; 0x24
   13fac:	ldr	r0, [r2]
   13fb0:	orrs	r0, r0, r3
   13fb4:	beq	14158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x500>
   13fb8:	mov	r0, #0
   13fbc:	bl	139d0 <xexit@plt>
   13fc0:	sub	r1, sl, #1
   13fc4:	cmp	r1, fp
   13fc8:	ble	14118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4c0>
   13fcc:	ldr	r3, [sp, #12]
   13fd0:	add	r9, fp, #2
   13fd4:	add	r2, r3, r2
   13fd8:	ldr	r3, [r2, #4]
   13fdc:	str	r3, [sp, #16]
   13fe0:	cmp	sl, r9
   13fe4:	mov	fp, r9
   13fe8:	ble	13ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268>
   13fec:	ldr	r3, [sp, #12]
   13ff0:	mov	r2, #2
   13ff4:	ldr	r1, [pc, #1952]	; 1479c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb44>
   13ff8:	ldr	r5, [r3, fp, lsl #2]
   13ffc:	add	r9, fp, #1
   14000:	mov	r0, r5
   14004:	bl	13bb0 <strncmp@plt>
   14008:	lsl	r2, fp, #2
   1400c:	cmp	r0, #0
   14010:	bne	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14014:	ldrb	r1, [r5, #2]
   14018:	cmp	r1, #0
   1401c:	beq	13fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x368>
   14020:	ldr	r1, [pc, #1912]	; 147a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb48>
   14024:	mov	r0, r5
   14028:	bl	13268 <strcmp@plt>
   1402c:	cmp	r0, #0
   14030:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14034:	ldr	r1, [pc, #1896]	; 147a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4c>
   14038:	mov	r0, r5
   1403c:	bl	13268 <strcmp@plt>
   14040:	cmp	r0, #0
   14044:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14048:	ldr	r1, [pc, #1880]	; 147a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb50>
   1404c:	mov	r0, r5
   14050:	bl	13268 <strcmp@plt>
   14054:	cmp	r0, #0
   14058:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   1405c:	ldr	r1, [pc, #1864]	; 147ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb54>
   14060:	mov	r0, r5
   14064:	bl	13268 <strcmp@plt>
   14068:	cmp	r0, #0
   1406c:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14070:	ldr	r1, [pc, #1848]	; 147b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb58>
   14074:	mov	r0, r5
   14078:	bl	13268 <strcmp@plt>
   1407c:	cmp	r0, #0
   14080:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14084:	ldr	r1, [pc, #1832]	; 147b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5c>
   14088:	mov	r0, r5
   1408c:	bl	13268 <strcmp@plt>
   14090:	cmp	r0, #0
   14094:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14098:	ldr	r1, [pc, #1816]	; 147b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb60>
   1409c:	mov	r0, r5
   140a0:	bl	13268 <strcmp@plt>
   140a4:	cmp	r0, #0
   140a8:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   140ac:	ldr	r1, [pc, #1800]	; 147bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb64>
   140b0:	mov	r0, r5
   140b4:	bl	13268 <strcmp@plt>
   140b8:	cmp	r0, #0
   140bc:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   140c0:	ldr	r1, [pc, #1784]	; 147c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb68>
   140c4:	mov	r0, r5
   140c8:	bl	13268 <strcmp@plt>
   140cc:	cmp	r0, #0
   140d0:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   140d4:	ldr	r1, [pc, #1768]	; 147c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6c>
   140d8:	mov	r0, r5
   140dc:	bl	13268 <strcmp@plt>
   140e0:	cmp	r0, #0
   140e4:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   140e8:	ldr	r1, [pc, #1752]	; 147c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb70>
   140ec:	mov	r0, r5
   140f0:	bl	13268 <strcmp@plt>
   140f4:	cmp	r0, #0
   140f8:	beq	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   140fc:	ldr	r1, [pc, #1736]	; 147cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb74>
   14100:	mov	r0, r5
   14104:	bl	13268 <strcmp@plt>
   14108:	cmp	r0, #0
   1410c:	addne	r3, r5, #2
   14110:	strne	r3, [sp, #16]
   14114:	b	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   14118:	mov	r2, #5
   1411c:	ldr	r1, [pc, #1708]	; 147d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb78>
   14120:	bl	13460 <dcgettext@plt>
   14124:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14128:	b	13fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x388>
   1412c:	ldr	r3, [pc, #1560]	; 1474c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf4>
   14130:	ldr	r0, [pc, #1692]	; 147d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7c>
   14134:	str	r0, [r3]
   14138:	bl	133f4 <lrealpath@plt>
   1413c:	ldr	r3, [pc, #1548]	; 14750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf8>
   14140:	str	r0, [r3]
   14144:	b	13d64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c>
   14148:	ldr	r3, [pc, #1540]	; 14754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafc>
   1414c:	mvn	r2, #0
   14150:	str	r2, [r3]
   14154:	b	13da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148>
   14158:	mov	r2, #5
   1415c:	ldr	r1, [pc, #1652]	; 147d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb80>
   14160:	bl	13460 <dcgettext@plt>
   14164:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14168:	ldr	r5, [pc, #1644]	; 147dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb84>
   1416c:	ldr	r3, [r5]
   14170:	cmp	r3, #0
   14174:	bne	142b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x658>
   14178:	bl	2d304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196ac>
   1417c:	ldr	r9, [r7, #76]	; 0x4c
   14180:	cmp	r9, #0
   14184:	beq	141a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x550>
   14188:	ldr	r1, [pc, #1616]	; 147e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb88>
   1418c:	mov	r0, r9
   14190:	bl	13268 <strcmp@plt>
   14194:	cmp	r0, #0
   14198:	bne	145c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96c>
   1419c:	ldr	r3, [pc, #1600]	; 147e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8c>
   141a0:	ldr	r3, [r3]
   141a4:	str	r3, [r7, #80]	; 0x50
   141a8:	bl	25d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12130>
   141ac:	ldrb	r3, [r4]
   141b0:	ldr	r2, [r4, #48]	; 0x30
   141b4:	and	r3, r3, #3
   141b8:	cmp	r3, #2
   141bc:	ldr	r3, [r2, #40]	; 0x28
   141c0:	biceq	r3, r3, #64	; 0x40
   141c4:	orrne	r3, r3, #64	; 0x40
   141c8:	str	r3, [r2, #40]	; 0x28
   141cc:	ldr	r2, [r4, #12]
   141d0:	tst	r2, #1
   141d4:	beq	14204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ac>
   141d8:	ldr	r1, [r4, #48]	; 0x30
   141dc:	ldr	r3, [pc, #1540]	; 147e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb90>
   141e0:	cmp	r2, #5
   141e4:	ldr	r0, [r1, #40]	; 0x28
   141e8:	ldr	r2, [pc, #1532]	; 147ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb94>
   141ec:	and	r3, r3, r0, lsr #5
   141f0:	orrne	r3, r3, #16384	; 0x4000
   141f4:	orreq	r3, r3, #147456	; 0x24000
   141f8:	and	r2, r2, r0
   141fc:	orr	r3, r2, r3, lsl #5
   14200:	str	r3, [r1, #40]	; 0x28
   14204:	bl	2a87c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c24>
   14208:	ldr	r3, [r7, #80]	; 0x50
   1420c:	cmp	r3, #0
   14210:	beq	14280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x628>
   14214:	bl	21a7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde24>
   14218:	ldr	r3, [r8, #12]
   1421c:	cmp	r3, #0
   14220:	beq	14234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dc>
   14224:	ldr	r0, [r7, #80]	; 0x50
   14228:	cmp	r0, #0
   1422c:	beq	1428c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x634>
   14230:	bl	30414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7bc>
   14234:	ldr	r3, [pc, #1460]	; 147f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb98>
   14238:	ldr	r3, [r3]
   1423c:	cmp	r3, #0
   14240:	beq	14248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   14244:	bl	307d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb78>
   14248:	ldr	r3, [r8, #40]	; 0x28
   1424c:	cmp	r3, #0
   14250:	bne	145ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x954>
   14254:	bl	2d2d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19678>
   14258:	bl	1ffb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc358>
   1425c:	ldr	r3, [r6, #16]
   14260:	ldr	r0, [r7, #4]
   14264:	orrs	r0, r0, r3
   14268:	bne	142cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674>
   1426c:	ldr	r3, [r5]
   14270:	cmp	r3, #0
   14274:	bne	1469c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa44>
   14278:	mov	r0, #1
   1427c:	bl	139d0 <xexit@plt>
   14280:	ldr	r3, [r8, #12]
   14284:	cmp	r3, #0
   14288:	beq	14234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dc>
   1428c:	ldr	r3, [pc, #1360]	; 147e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8c>
   14290:	ldr	r0, [r3]
   14294:	b	14230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d8>
   14298:	mov	r2, #5
   1429c:	ldr	r1, [pc, #1360]	; 147f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9c>
   142a0:	mov	r0, #0
   142a4:	bl	13460 <dcgettext@plt>
   142a8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   142ac:	b	13f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x340>
   142b0:	mov	r2, #5
   142b4:	ldr	r1, [pc, #1340]	; 147f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba0>
   142b8:	mov	r0, #0
   142bc:	bl	13460 <dcgettext@plt>
   142c0:	ldr	r1, [sp, #16]
   142c4:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   142c8:	b	14178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x520>
   142cc:	ldr	r0, [r4, #48]	; 0x30
   142d0:	bl	139dc <bfd_close@plt>
   142d4:	cmp	r0, #0
   142d8:	beq	14678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa20>
   142dc:	ldrb	r3, [r4]
   142e0:	and	r3, r3, #3
   142e4:	cmp	r3, #2
   142e8:	ldreq	r9, [pc, #1292]	; 147fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba4>
   142ec:	beq	14418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c0>
   142f0:	ldr	r3, [r8, #8]
   142f4:	ldr	r9, [pc, #1280]	; 147fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba4>
   142f8:	cmp	r3, #0
   142fc:	beq	14418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c0>
   14300:	ldr	r4, [r9]
   14304:	mov	r0, r4
   14308:	bl	137d8 <strlen@plt>
   1430c:	cmp	r0, #3
   14310:	mov	r6, r0
   14314:	bls	14348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f0>
   14318:	sub	r3, r0, #4
   1431c:	add	r4, r4, r3
   14320:	mov	r0, r4
   14324:	ldr	r1, [pc, #1236]	; 14800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba8>
   14328:	bl	13520 <strcasecmp@plt>
   1432c:	cmp	r0, #0
   14330:	beq	14418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c0>
   14334:	mov	r0, r4
   14338:	ldr	r1, [pc, #1220]	; 14804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbac>
   1433c:	bl	13520 <strcasecmp@plt>
   14340:	cmp	r0, #0
   14344:	beq	14418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c0>
   14348:	mov	r0, #4096	; 0x1000
   1434c:	bl	13574 <xmalloc@plt>
   14350:	mov	r5, r0
   14354:	add	r0, r6, #5
   14358:	bl	13574 <xmalloc@plt>
   1435c:	ldr	r4, [r9]
   14360:	mov	r1, r4
   14364:	mov	sl, r0
   14368:	bl	1343c <stpcpy@plt>
   1436c:	ldr	r2, [pc, #1164]	; 14800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba8>
   14370:	ldr	r1, [pc, #1168]	; 14808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb0>
   14374:	mov	r3, r0
   14378:	ldr	r0, [r2]
   1437c:	ldrb	r2, [r2, #4]
   14380:	str	r0, [r3]
   14384:	mov	r0, r4
   14388:	strb	r2, [r3, #4]
   1438c:	bl	13a60 <fopen64@plt>
   14390:	ldr	r1, [pc, #1140]	; 1480c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb4>
   14394:	mov	r6, r0
   14398:	mov	r0, sl
   1439c:	bl	13a60 <fopen64@plt>
   143a0:	cmp	r6, #0
   143a4:	mov	r8, r0
   143a8:	beq	1470c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab4>
   143ac:	cmp	r8, #0
   143b0:	bne	143d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x77c>
   143b4:	b	146f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa98>
   143b8:	mov	r3, r8
   143bc:	mov	r2, r4
   143c0:	mov	r1, #1
   143c4:	mov	r0, r5
   143c8:	bl	13568 <fwrite@plt>
   143cc:	cmp	r4, r0
   143d0:	bne	146b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa60>
   143d4:	mov	r3, r6
   143d8:	mov	r2, #4096	; 0x1000
   143dc:	mov	r1, #1
   143e0:	mov	r0, r5
   143e4:	bl	135ec <fread@plt>
   143e8:	subs	r4, r0, #0
   143ec:	bgt	143b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x760>
   143f0:	mov	r0, r6
   143f4:	bl	13928 <fclose@plt>
   143f8:	mov	r0, r8
   143fc:	bl	13928 <fclose@plt>
   14400:	cmn	r0, #1
   14404:	beq	146d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7c>
   14408:	mov	r0, sl
   1440c:	bl	13364 <free@plt>
   14410:	mov	r0, r5
   14414:	bl	13364 <free@plt>
   14418:	ldr	r3, [r7, #52]	; 0x34
   1441c:	cmp	r3, #0
   14420:	bne	14604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ac>
   14424:	mov	r3, #0
   14428:	mov	r0, r3
   1442c:	str	r3, [r9]
   14430:	bl	139d0 <xexit@plt>
   14434:	mov	r2, #5
   14438:	ldr	r1, [pc, #976]	; 14810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb8>
   1443c:	mov	r0, #0
   14440:	bl	13460 <dcgettext@plt>
   14444:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   14448:	ldr	r0, [pc, #964]	; 14814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc>
   1444c:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   14450:	ldr	r3, [r6, #12]
   14454:	cmp	r3, #0
   14458:	beq	145b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95c>
   1445c:	ldr	r0, [pc, #948]	; 14818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc0>
   14460:	bl	13574 <xmalloc@plt>
   14464:	ldr	r9, [pc, #944]	; 1481c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc4>
   14468:	mov	r5, r0
   1446c:	ldr	r0, [r6, #12]
   14470:	bl	13490 <rewind@plt>
   14474:	b	1448c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x834>
   14478:	mov	r3, #0
   1447c:	strb	r3, [r5, r0]
   14480:	mov	r1, r5
   14484:	mov	r0, r9
   14488:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   1448c:	ldr	r3, [r6, #12]
   14490:	mov	r2, #8192	; 0x2000
   14494:	mov	r1, #1
   14498:	mov	r0, r5
   1449c:	bl	135ec <fread@plt>
   144a0:	cmp	r0, #0
   144a4:	bne	14478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x820>
   144a8:	ldr	r0, [r6, #12]
   144ac:	bl	13490 <rewind@plt>
   144b0:	mov	r0, r5
   144b4:	bl	13364 <free@plt>
   144b8:	ldr	r0, [pc, #852]	; 14814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc>
   144bc:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   144c0:	b	13f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d8>
   144c4:	ldr	r3, [pc, #716]	; 14798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb40>
   144c8:	ldr	r3, [r3]
   144cc:	cmp	r3, #0
   144d0:	beq	13f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x324>
   144d4:	b	13fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x360>
   144d8:	bl	13c40 <bfd_hash_set_default_size@plt>
   144dc:	b	13f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4>
   144e0:	bl	223a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe750>
   144e4:	mov	r1, r0
   144e8:	ldr	r0, [pc, #816]	; 14820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc8>
   144ec:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   144f0:	b	13f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x314>
   144f4:	ldr	r0, [r8, #88]	; 0x58
   144f8:	ldr	r5, [pc, #804]	; 14824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcc>
   144fc:	cmp	r0, #0
   14500:	beq	14520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c8>
   14504:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   14508:	mov	r3, #1
   1450c:	str	r3, [r5]
   14510:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   14514:	ldr	r3, [r6, #12]
   14518:	cmp	r3, #0
   1451c:	bne	13f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c8>
   14520:	add	r0, sp, #36	; 0x24
   14524:	bl	2d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19784>
   14528:	ldr	r2, [sp, #36]	; 0x24
   1452c:	cmp	r2, #0
   14530:	mov	r3, r0
   14534:	bne	14690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa38>
   14538:	ldr	r9, [pc, #744]	; 14828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd0>
   1453c:	mov	r0, r2
   14540:	ldr	r1, [pc, #740]	; 1482c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd4>
   14544:	mov	r2, #5
   14548:	str	r3, [r9]
   1454c:	str	r3, [sp, #12]
   14550:	bl	13460 <dcgettext@plt>
   14554:	ldr	r3, [sp, #12]
   14558:	mov	r2, #1
   1455c:	mov	r1, r0
   14560:	mov	r0, r3
   14564:	bl	19754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5afc>
   14568:	mov	r3, #1
   1456c:	str	r3, [r5]
   14570:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   14574:	ldr	r3, [pc, #536]	; 14794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb3c>
   14578:	mov	r2, #0
   1457c:	str	r2, [r9]
   14580:	ldr	r3, [r3]
   14584:	cmp	r3, r2
   14588:	beq	13f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d8>
   1458c:	ldr	r0, [r6, #12]
   14590:	cmp	r0, r2
   14594:	bne	14434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7dc>
   14598:	mov	r2, #5
   1459c:	ldr	r1, [pc, #652]	; 14830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd8>
   145a0:	bl	13460 <dcgettext@plt>
   145a4:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   145a8:	b	14448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f0>
   145ac:	bl	28020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143c8>
   145b0:	b	14254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5fc>
   145b4:	add	r0, sp, #36	; 0x24
   145b8:	bl	2d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19784>
   145bc:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   145c0:	b	144b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x860>
   145c4:	mov	r0, r9
   145c8:	ldr	r1, [pc, #572]	; 1480c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb4>
   145cc:	bl	13a60 <fopen64@plt>
   145d0:	cmp	r0, #0
   145d4:	mov	r9, r0
   145d8:	str	r0, [r7, #80]	; 0x50
   145dc:	bne	141a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x550>
   145e0:	mov	r0, #1
   145e4:	bl	13580 <bfd_set_error@plt>
   145e8:	mov	r0, r9
   145ec:	mov	r2, #5
   145f0:	ldr	r1, [pc, #572]	; 14834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbdc>
   145f4:	bl	13460 <dcgettext@plt>
   145f8:	ldr	r1, [r7, #76]	; 0x4c
   145fc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14600:	b	141a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x550>
   14604:	bl	3ed6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b114>
   14608:	ldr	r3, [pc, #468]	; 147e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8c>
   1460c:	ldr	r2, [sp, #20]
   14610:	ldr	r5, [pc, #544]	; 14838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe0>
   14614:	ldr	sl, [pc, #544]	; 1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe4>
   14618:	sub	r4, r0, r2
   1461c:	ldr	r0, [r3]
   14620:	bl	132e0 <fflush@plt>
   14624:	mov	r2, #5
   14628:	ldr	r1, [pc, #528]	; 14840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe8>
   1462c:	mov	r0, #0
   14630:	ldr	r6, [r5]
   14634:	bl	13460 <dcgettext@plt>
   14638:	smull	sl, fp, r4, sl
   1463c:	ldr	ip, [pc, #512]	; 14844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbec>
   14640:	asr	r1, r4, #31
   14644:	ldr	r3, [pc, #236]	; 14738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0>
   14648:	rsb	r1, r1, fp, asr #18
   1464c:	ldr	r2, [r3]
   14650:	mov	r3, r1
   14654:	mul	r1, ip, r1
   14658:	sub	r4, r4, r1
   1465c:	str	r4, [sp]
   14660:	mov	r1, r0
   14664:	mov	r0, r6
   14668:	bl	1382c <fprintf@plt>
   1466c:	ldr	r0, [r5]
   14670:	bl	132e0 <fflush@plt>
   14674:	b	14424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7cc>
   14678:	mov	r2, #5
   1467c:	ldr	r1, [pc, #452]	; 14848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf0>
   14680:	bl	13460 <dcgettext@plt>
   14684:	ldr	r1, [r4, #48]	; 0x30
   14688:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1468c:	b	142dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x684>
   14690:	bl	2f8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc58>
   14694:	ldr	r9, [pc, #396]	; 14828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd0>
   14698:	b	14568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x910>
   1469c:	mov	r2, #5
   146a0:	ldr	r1, [pc, #420]	; 1484c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf4>
   146a4:	bl	13460 <dcgettext@plt>
   146a8:	ldr	r3, [pc, #332]	; 147fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba4>
   146ac:	ldr	r1, [r3]
   146b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   146b4:	b	14278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x620>
   146b8:	mov	r2, #5
   146bc:	ldr	r1, [pc, #396]	; 14850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf8>
   146c0:	mov	r0, #0
   146c4:	bl	13460 <dcgettext@plt>
   146c8:	mov	r1, sl
   146cc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   146d0:	b	143d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x77c>
   146d4:	mov	r2, #5
   146d8:	ldr	r1, [pc, #372]	; 14854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfc>
   146dc:	mov	r0, #0
   146e0:	bl	13460 <dcgettext@plt>
   146e4:	mov	r1, sl
   146e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   146ec:	b	14408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b0>
   146f0:	mov	r2, #5
   146f4:	ldr	r1, [pc, #348]	; 14858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc00>
   146f8:	mov	r0, r8
   146fc:	bl	13460 <dcgettext@plt>
   14700:	mov	r1, sl
   14704:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14708:	b	143d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x77c>
   1470c:	mov	r2, #5
   14710:	ldr	r1, [pc, #324]	; 1485c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc04>
   14714:	mov	r0, r6
   14718:	bl	13460 <dcgettext@plt>
   1471c:	ldr	r1, [r9]
   14720:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14724:	b	143ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x754>
   14728:	andeq	r7, ip, r0, lsl #26
   1472c:	andeq	r2, r5, ip
   14730:			; <UNDEFINED> instruction: 0x00050cbc
   14734:	ldrdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   14738:	andeq	r8, ip, r0, ror #3
   1473c:	andeq	r8, r2, r8, lsl #28
   14740:	andeq	r8, r2, r4, lsr lr
   14744:	ldrdeq	r9, [r2], -r4
   14748:	ldrdeq	r0, [r5], -r4
   1474c:	andeq	r8, ip, r4, lsl r1
   14750:	andeq	r8, ip, ip, ror #3
   14754:	andeq	r8, ip, r8, lsl #1
   14758:	andeq	r0, r5, r0, ror #25
   1475c:	strdeq	r0, [r5], -ip
   14760:	andeq	r8, ip, ip, lsl #1
   14764:	andeq	r8, ip, r4, ror r1
   14768:	andeq	r8, ip, r8, lsl r1
   1476c:	andeq	r0, r5, ip, lsr #26
   14770:			; <UNDEFINED> instruction: 0xffffceb3
   14774:	andeq	r0, r5, r0, asr #26
   14778:	andeq	r7, ip, r8, asr #7
   1477c:	andeq	r8, ip, r4, lsl #1
   14780:	andeq	r0, r5, r8, asr #26
   14784:	andeq	r0, r5, r0, asr sp
   14788:	andeq	r0, r5, r8, lsr #25
   1478c:	ldrdeq	r8, [ip], -ip
   14790:	andeq	r7, ip, ip, lsr ip
   14794:	andeq	r8, ip, r4, ror #3
   14798:	andeq	r8, ip, r0, lsl #1
   1479c:	andeq	r0, r5, ip, asr sp
   147a0:	andeq	r0, r5, r0, lsl #27
   147a4:	andeq	r0, r5, r8, lsl #27
   147a8:	muleq	r5, r0, sp
   147ac:	muleq	r5, r8, sp
   147b0:	andeq	r0, r5, r0, lsr #27
   147b4:	andeq	r0, r5, r8, lsr #27
   147b8:			; <UNDEFINED> instruction: 0x00050db0
   147bc:			; <UNDEFINED> instruction: 0x00050dbc
   147c0:	andeq	r0, r5, r8, asr #27
   147c4:	ldrdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   147c8:	ldrdeq	r0, [r5], -ip
   147cc:	andeq	r0, r5, r8, ror #27
   147d0:	andeq	r0, r5, r0, ror #26
   147d4:	andeq	pc, r4, r4, lsr #9
   147d8:			; <UNDEFINED> instruction: 0x00050ebc
   147dc:	strdeq	r8, [ip], -r0
   147e0:	andeq	r3, r4, ip, ror r8
   147e4:	strdeq	r7, [ip], -ip
   147e8:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   147ec:	mcr2	0, 0, r0, cr0, cr15, {0}
   147f0:	andeq	r8, ip, ip, lsr r0
   147f4:	andeq	r0, r5, r0, lsl #29
   147f8:	ldrdeq	r0, [r5], -r4
   147fc:	andeq	r7, ip, r0, asr #7
   14800:	andeq	r0, r5, r0, ror #30
   14804:	andeq	r0, r5, r8, ror #30
   14808:	andeq	r4, r8, r4, lsr #26
   1480c:	andeq	sp, r4, r4, lsl #23
   14810:	andeq	r0, r5, r8, lsl #28
   14814:	andeq	r0, r5, r8, asr #28
   14818:	andeq	r2, r0, r1
   1481c:	andeq	pc, r4, r0, lsl #26
   14820:	ldrdeq	r2, [r5], -ip
   14824:	andeq	r8, ip, r0, lsr r0
   14828:	andeq	r7, ip, r0, lsr #23
   1482c:	strdeq	r0, [r5], -r0	; <UNPREDICTABLE>
   14830:	andeq	r0, r5, r8, lsr #28
   14834:	andeq	r0, r5, r4, ror #29
   14838:	andeq	r7, ip, r8, asr #14
   1483c:	tstmi	fp, #2096	; 0x830
   14840:	andeq	r1, r5, r4, lsl r0
   14844:	andeq	r4, pc, r0, asr #4
   14848:	andeq	r0, r5, ip, lsr pc
   1484c:	andeq	r0, r5, r8, lsl #30
   14850:	ldrdeq	r0, [r5], -r4
   14854:	strdeq	r0, [r5], -r4
   14858:	andeq	r0, r5, r0, lsr #31
   1485c:	andeq	r0, r5, r0, ror pc
   14860:	mov	fp, #0
   14864:	mov	lr, #0
   14868:	pop	{r1}		; (ldr r1, [sp], #4)
   1486c:	mov	r2, sp
   14870:	push	{r2}		; (str r2, [sp, #-4]!)
   14874:	push	{r0}		; (str r0, [sp, #-4]!)
   14878:	ldr	ip, [pc, #16]	; 14890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc38>
   1487c:	push	{ip}		; (str ip, [sp, #-4]!)
   14880:	ldr	r0, [pc, #12]	; 14894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3c>
   14884:	ldr	r3, [pc, #12]	; 14898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc40>
   14888:	bl	13718 <__libc_start_main@plt>
   1488c:	bl	13bbc <abort@plt>
   14890:	andeq	pc, r3, ip, ror #10
   14894:	andeq	r3, r1, r8, ror #24
   14898:	andeq	pc, r3, ip, lsl #10
   1489c:	ldr	r3, [pc, #20]	; 148b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc60>
   148a0:	ldr	r2, [pc, #20]	; 148bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc64>
   148a4:	add	r3, pc, r3
   148a8:	ldr	r2, [r3, r2]
   148ac:	cmp	r2, #0
   148b0:	bxeq	lr
   148b4:	b	13748 <__gmon_start__@plt>
   148b8:	andeq	r2, fp, r4, asr r7
   148bc:	muleq	r0, r4, r3
   148c0:	ldr	r0, [pc, #24]	; 148e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc88>
   148c4:	ldr	r3, [pc, #24]	; 148e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8c>
   148c8:	cmp	r3, r0
   148cc:	bxeq	lr
   148d0:	ldr	r3, [pc, #16]	; 148e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc90>
   148d4:	cmp	r3, #0
   148d8:	bxeq	lr
   148dc:	bx	r3
   148e0:	andeq	r7, ip, r8, lsr r7
   148e4:	andeq	r7, ip, r8, lsr r7
   148e8:	andeq	r0, r0, r0
   148ec:	ldr	r0, [pc, #36]	; 14918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc0>
   148f0:	ldr	r1, [pc, #36]	; 1491c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc4>
   148f4:	sub	r1, r1, r0
   148f8:	asr	r1, r1, #2
   148fc:	add	r1, r1, r1, lsr #31
   14900:	asrs	r1, r1, #1
   14904:	bxeq	lr
   14908:	ldr	r3, [pc, #16]	; 14920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc8>
   1490c:	cmp	r3, #0
   14910:	bxeq	lr
   14914:	bx	r3
   14918:	andeq	r7, ip, r8, lsr r7
   1491c:	andeq	r7, ip, r8, lsr r7
   14920:	andeq	r0, r0, r0
   14924:	push	{r4, lr}
   14928:	ldr	r4, [pc, #24]	; 14948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf0>
   1492c:	ldrb	r3, [r4]
   14930:	cmp	r3, #0
   14934:	popne	{r4, pc}
   14938:	bl	148c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc68>
   1493c:	mov	r3, #1
   14940:	strb	r3, [r4]
   14944:	pop	{r4, pc}
   14948:	andeq	r7, ip, ip, lsl #20
   1494c:	b	148ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc94>
   14950:	push	{r4, r5, r6, r7, r8, lr}
   14954:	mov	r2, #9
   14958:	ldr	r6, [pc, #88]	; 149b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd60>
   1495c:	mov	r4, r0
   14960:	mov	r5, r1
   14964:	ldr	r3, [r6]
   14968:	mov	r1, #1
   1496c:	ldr	r0, [pc, #72]	; 149bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd64>
   14970:	bl	13568 <fwrite@plt>
   14974:	cmp	r4, r5
   14978:	bhi	149a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd50>
   1497c:	sub	r5, r5, r4
   14980:	bic	r5, r5, #1
   14984:	add	r5, r5, #2
   14988:	ldr	r7, [pc, #48]	; 149c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd68>
   1498c:	add	r5, r4, r5
   14990:	ldrsh	r2, [r4], #2
   14994:	mov	r1, r7
   14998:	ldr	r0, [r6]
   1499c:	bl	1382c <fprintf@plt>
   149a0:	cmp	r4, r5
   149a4:	bne	14990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd38>
   149a8:	ldr	r1, [r6]
   149ac:	mov	r0, #10
   149b0:	pop	{r4, r5, r6, r7, r8, lr}
   149b4:	b	139b8 <fputc@plt>
   149b8:	andeq	r7, ip, r8, asr #14
   149bc:	andeq	r3, r4, r0, ror #13
   149c0:	andeq	r3, r4, ip, ror #13
   149c4:	ldr	r3, [pc, #48]	; 149fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda4>
   149c8:	ldr	ip, [pc, #48]	; 14a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda8>
   149cc:	cmp	r1, #155	; 0x9b
   149d0:	push	{r4, lr}
   149d4:	mov	r4, r0
   149d8:	ldr	r2, [pc, #36]	; 14a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdac>
   149dc:	ldr	r3, [r3, r1, lsl #2]
   149e0:	movle	r2, ip
   149e4:	ldr	r1, [pc, #28]	; 14a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb0>
   149e8:	bl	1382c <fprintf@plt>
   149ec:	mov	r1, r4
   149f0:	mov	r0, #41	; 0x29
   149f4:	pop	{r4, lr}
   149f8:	b	139b8 <fputc@plt>
   149fc:	andeq	pc, r3, ip, ror r5	; <UNPREDICTABLE>
   14a00:	strdeq	r3, [r4], -r0
   14a04:	strdeq	r3, [r4], -r8
   14a08:	andeq	r3, r4, r0, lsl #14
   14a0c:	ldr	r3, [pc, #64]	; 14a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdfc>
   14a10:	ldr	r3, [r3]
   14a14:	cmp	r3, #0
   14a18:	bxeq	lr
   14a1c:	push	{r4, r5, r6, lr}
   14a20:	mov	r2, r0
   14a24:	ldr	r5, [pc, #44]	; 14a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe00>
   14a28:	mov	r4, r1
   14a2c:	ldr	r1, [pc, #40]	; 14a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe04>
   14a30:	ldr	r0, [r5]
   14a34:	bl	1382c <fprintf@plt>
   14a38:	mov	r1, r4
   14a3c:	ldr	r0, [r5]
   14a40:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   14a44:	ldr	r1, [r5]
   14a48:	mov	r0, #10
   14a4c:	pop	{r4, r5, r6, lr}
   14a50:	b	139b8 <fputc@plt>
   14a54:	andeq	r8, ip, r4, lsl r0
   14a58:	andeq	r7, ip, r8, asr #14
   14a5c:	andeq	r3, r4, r8, lsl #14
   14a60:	ldr	r3, [pc, #124]	; 14ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8c>
   14a64:	push	{r4, r5, r6, lr}
   14a68:	mov	r4, r0
   14a6c:	ldr	r3, [r3]
   14a70:	cmp	r3, #0
   14a74:	bne	14abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe64>
   14a78:	ldr	r2, [pc, #104]	; 14ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe90>
   14a7c:	ldr	r3, [r2]
   14a80:	sub	r3, r3, #1
   14a84:	cmp	r3, #18
   14a88:	bhi	14aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe50>
   14a8c:	add	r3, r2, r3, lsl #2
   14a90:	mov	r1, #0
   14a94:	mov	r2, r4
   14a98:	ldr	r3, [r3, #4]
   14a9c:	ldr	r0, [pc, #72]	; 14aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe94>
   14aa0:	pop	{r4, r5, r6, lr}
   14aa4:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14aa8:	mov	r2, r4
   14aac:	mov	r1, #0
   14ab0:	ldr	r0, [pc, #56]	; 14af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe98>
   14ab4:	pop	{r4, r5, r6, lr}
   14ab8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14abc:	mov	r2, #5
   14ac0:	ldr	r1, [pc, #44]	; 14af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9c>
   14ac4:	mov	r0, #0
   14ac8:	bl	13460 <dcgettext@plt>
   14acc:	mov	r5, r0
   14ad0:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   14ad4:	mov	r1, r0
   14ad8:	mov	r0, r5
   14adc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   14ae0:	b	14a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe20>
   14ae4:	andeq	r7, ip, r0, asr sp
   14ae8:	andeq	r7, ip, r0, lsl sl
   14aec:	andeq	r3, r4, ip, asr #14
   14af0:	andeq	r3, r4, r0, ror #14
   14af4:	andeq	r3, r4, ip, lsl #14
   14af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14afc:	sub	sp, sp, #3664	; 0xe50
   14b00:	ldr	sl, [pc, #4072]	; 15af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e98>
   14b04:	sub	sp, sp, #12
   14b08:	ldr	r3, [sl]
   14b0c:	cmp	r3, #0
   14b10:	bne	157fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba4>
   14b14:	ldr	r1, [pc, #4056]	; 15af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9c>
   14b18:	mov	r3, #0
   14b1c:	mov	r5, r3
   14b20:	str	r3, [sp, #36]	; 0x24
   14b24:	str	r3, [r1]
   14b28:	ldr	r3, [pc, #4040]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   14b2c:	add	r4, sp, #72	; 0x48
   14b30:	mvn	r2, #1
   14b34:	mov	fp, r4
   14b38:	add	r7, sp, #472	; 0x1d8
   14b3c:	str	r2, [r3]
   14b40:	mov	r3, #200	; 0xc8
   14b44:	str	r7, [sp, #32]
   14b48:	str	r3, [sp, #24]
   14b4c:	str	r5, [sp, #20]
   14b50:	ldr	r1, [sp, #24]
   14b54:	ldr	r2, [sp, #20]
   14b58:	sub	r3, r1, #-2147483647	; 0x80000001
   14b5c:	strh	r2, [r4]
   14b60:	lsl	r3, r3, #1
   14b64:	add	r2, fp, r3
   14b68:	cmp	r4, r2
   14b6c:	bcc	15510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b8>
   14b70:	sub	r7, r4, fp
   14b74:	ldr	r2, [pc, #3968]	; 15afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea4>
   14b78:	asr	r7, r7, #1
   14b7c:	cmp	r1, r2
   14b80:	add	r7, r7, #1
   14b84:	bhi	15880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c28>
   14b88:	add	r2, r2, #1
   14b8c:	add	r3, r3, #2
   14b90:	cmp	r3, r2
   14b94:	movcc	r5, r3
   14b98:	movcs	r5, r2
   14b9c:	str	r5, [sp, #24]
   14ba0:	add	r0, r5, r5, lsl #3
   14ba4:	lsl	r0, r0, #1
   14ba8:	add	r0, r0, #15
   14bac:	bl	13700 <malloc@plt>
   14bb0:	subs	r6, r0, #0
   14bb4:	beq	15880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c28>
   14bb8:	lsl	r8, r5, #1
   14bbc:	add	r9, r8, #15
   14bc0:	lsl	r4, r7, #1
   14bc4:	bic	r9, r9, #15
   14bc8:	mov	r2, r4
   14bcc:	mov	r1, fp
   14bd0:	lsl	r7, r7, #4
   14bd4:	add	r9, r6, r9
   14bd8:	bl	133b8 <memcpy@plt>
   14bdc:	ldr	r1, [sp, #32]
   14be0:	mov	r0, r9
   14be4:	mov	r2, r7
   14be8:	bl	133b8 <memcpy@plt>
   14bec:	add	r3, sp, #72	; 0x48
   14bf0:	cmp	fp, r3
   14bf4:	beq	14c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa8>
   14bf8:	mov	r0, fp
   14bfc:	bl	13364 <free@plt>
   14c00:	ldr	r3, [sl]
   14c04:	sub	r4, r4, #2
   14c08:	sub	r7, r7, #16
   14c0c:	sub	r8, r8, #2
   14c10:	cmp	r3, #0
   14c14:	add	r4, r6, r4
   14c18:	add	r7, r9, r7
   14c1c:	add	r8, r6, r8
   14c20:	bne	154ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1894>
   14c24:	cmp	r4, r8
   14c28:	bcs	16f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x32c4>
   14c2c:	mov	fp, r6
   14c30:	str	r9, [sp, #32]
   14c34:	ldr	r3, [sp, #20]
   14c38:	cmp	r3, #17
   14c3c:	beq	15890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c38>
   14c40:	ldr	r8, [pc, #3768]	; 15b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea8>
   14c44:	lsl	r5, r3, #1
   14c48:	add	r2, r8, #8
   14c4c:	ldr	r3, [pc, #3760]	; 15b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eac>
   14c50:	ldrsh	r6, [r2, r5]
   14c54:	cmp	r6, r3
   14c58:	mov	r9, r6
   14c5c:	beq	15410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b8>
   14c60:	ldr	r3, [pc, #3728]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   14c64:	ldr	r0, [r3]
   14c68:	ldr	r3, [sl]
   14c6c:	cmn	r0, #2
   14c70:	beq	1566c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14>
   14c74:	cmp	r0, #0
   14c78:	ble	15634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19dc>
   14c7c:	cmp	r0, #388	; 0x184
   14c80:	movge	r2, #2
   14c84:	ldrlt	r2, [pc, #3708]	; 15b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb0>
   14c88:	addlt	r0, r2, r0
   14c8c:	ldrblt	r2, [r0, #2788]	; 0xae4
   14c90:	cmp	r3, #0
   14c94:	str	r2, [sp, #28]
   14c98:	ldr	r3, [sp, #28]
   14c9c:	add	r9, r6, r3
   14ca0:	bne	157b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5c>
   14ca4:	ldr	r3, [pc, #3680]	; 15b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb4>
   14ca8:	cmp	r9, r3
   14cac:	bhi	15410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b8>
   14cb0:	ldr	r3, [pc, #3672]	; 15b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb8>
   14cb4:	lsl	r9, r9, #1
   14cb8:	ldr	r2, [sp, #28]
   14cbc:	ldrsh	r3, [r3, r9]
   14cc0:	cmp	r3, r2
   14cc4:	bne	15410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b8>
   14cc8:	ldr	r3, [pc, #3652]	; 15b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ebc>
   14ccc:	ldrsh	r3, [r3, r9]
   14cd0:	cmp	r3, #0
   14cd4:	str	r3, [sp, #20]
   14cd8:	rsble	r9, r3, #0
   14cdc:	ble	14d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c8>
   14ce0:	ldr	r3, [sp, #36]	; 0x24
   14ce4:	cmp	r3, #0
   14ce8:	subne	r3, r3, #1
   14cec:	strne	r3, [sp, #36]	; 0x24
   14cf0:	ldr	r3, [sl]
   14cf4:	cmp	r3, #0
   14cf8:	bne	1584c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf4>
   14cfc:	ldr	r3, [pc, #3604]	; 15b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec0>
   14d00:	ldr	r5, [pc, #3568]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   14d04:	add	ip, r7, #16
   14d08:	ldm	r3, {r0, r1, r2, r3}
   14d0c:	mvn	lr, #1
   14d10:	str	lr, [r5]
   14d14:	mov	r7, ip
   14d18:	stm	ip, {r0, r1, r2, r3}
   14d1c:	b	15408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b0>
   14d20:	ldr	r3, [pc, #3572]	; 15b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec4>
   14d24:	add	ip, sp, #40	; 0x28
   14d28:	add	r2, r3, r9
   14d2c:	ldr	r3, [sl]
   14d30:	ldrb	r8, [r2, #-3716]	; 0xfffff17c
   14d34:	cmp	r3, #0
   14d38:	rsb	r5, r8, #1
   14d3c:	add	r3, r7, r5, lsl #4
   14d40:	ldm	r3, {r0, r1, r2, r3}
   14d44:	stm	ip, {r0, r1, r2, r3}
   14d48:	bne	15724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1acc>
   14d4c:	lsl	r3, r9, #1
   14d50:	str	r3, [sp, #20]
   14d54:	ldr	r3, [pc, #3524]	; 15b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8>
   14d58:	sub	r9, r9, #8
   14d5c:	cmp	r9, r3
   14d60:	ldrls	pc, [pc, r9, lsl #2]
   14d64:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   14d68:	ldrdeq	r5, [r1], -r4
   14d6c:			; <UNDEFINED> instruction: 0x00015cbc
   14d70:	muleq	r1, ip, ip
   14d74:	andeq	r5, r1, r0, lsl #25
   14d78:	andeq	r5, r1, r8, lsl #7
   14d7c:	andeq	r5, r1, r8, lsl #7
   14d80:	andeq	r5, r1, r8, lsl #7
   14d84:	andeq	r5, r1, r8, lsl #7
   14d88:	andeq	r5, r1, r4, ror #24
   14d8c:	muleq	r1, r0, lr
   14d90:	andeq	r5, r1, r8, lsl #7
   14d94:	andeq	r5, r1, r8, lsl #7
   14d98:	andeq	r6, r1, r0, lsl #29
   14d9c:	andeq	r6, r1, r0, ror lr
   14da0:	andeq	r6, r1, r0, ror #28
   14da4:	andeq	r6, r1, r4, asr lr
   14da8:	andeq	r6, r1, r4, asr #28
   14dac:	andeq	r6, r1, r4, lsr lr
   14db0:	andeq	r6, r1, r4, lsr #28
   14db4:	andeq	r6, r1, r4, lsl lr
   14db8:	andeq	r6, r1, r4, lsl #28
   14dbc:	strdeq	r6, [r1], -r4
   14dc0:	andeq	r6, r1, r4, ror #27
   14dc4:	andeq	r5, r1, r8, lsl #7
   14dc8:	andeq	r5, r1, r8, lsl #7
   14dcc:	ldrdeq	r6, [r1], -r8
   14dd0:	andeq	r6, r1, r4, asr #27
   14dd4:			; <UNDEFINED> instruction: 0x00016db0
   14dd8:	andeq	r6, r1, r4, lsr #27
   14ddc:	muleq	r1, r8, sp
   14de0:	andeq	r5, r1, r8, lsl #7
   14de4:	andeq	r5, r1, r8, lsl #7
   14de8:	andeq	r6, r1, ip, asr fp
   14dec:	muleq	r1, r8, r8
   14df0:	andeq	r6, r1, r8, asr sp
   14df4:	andeq	r5, r1, r8, lsl #7
   14df8:	andeq	r6, r1, ip, asr #26
   14dfc:	andeq	r6, r1, ip, lsl #27
   14e00:	andeq	r5, r1, r8, lsl #7
   14e04:	andeq	r6, r1, r0, lsl #27
   14e08:	andeq	r6, r1, r4, ror sp
   14e0c:	andeq	r6, r1, r8, ror #26
   14e10:	andeq	r6, r1, r0, lsl #23
   14e14:	andeq	r6, r1, r4, ror fp
   14e18:	andeq	r5, r1, r8, lsl #7
   14e1c:	andeq	r5, r1, r8, lsl #7
   14e20:	andeq	r5, r1, r0, lsr #17
   14e24:	muleq	r1, r8, r8
   14e28:			; <UNDEFINED> instruction: 0x00016bb4
   14e2c:	andeq	r6, r1, r4, lsr #23
   14e30:	muleq	r1, r4, fp
   14e34:	andeq	r6, r1, ip, lsl #23
   14e38:	muleq	r1, r8, r8
   14e3c:	andeq	r5, r1, r8, lsl #7
   14e40:	andeq	r5, r1, r8, lsl #7
   14e44:	andeq	r5, r1, r8, lsl #7
   14e48:	andeq	r5, r1, r8, lsl #7
   14e4c:	andeq	r5, r1, r8, lsl #7
   14e50:	andeq	r5, r1, r8, lsl #7
   14e54:	andeq	r5, r1, r8, lsl #7
   14e58:	andeq	r5, r1, r8, lsl #7
   14e5c:	andeq	r5, r1, r8, lsl #7
   14e60:	andeq	r5, r1, r8, lsl #7
   14e64:	andeq	r5, r1, r8, lsl #7
   14e68:	andeq	r5, r1, r8, lsl #7
   14e6c:	andeq	r6, r1, r4, lsr ip
   14e70:	andeq	r6, r1, r4, lsr #24
   14e74:	andeq	r6, r1, r4, lsl ip
   14e78:	strdeq	r6, [r1], -ip
   14e7c:	andeq	r6, r1, r4, ror #23
   14e80:	ldrdeq	r6, [r1], -r4
   14e84:	andeq	r6, r1, r4, asr #23
   14e88:	andeq	r6, r1, ip, lsr sp
   14e8c:	andeq	r6, r1, r8, lsr #26
   14e90:	andeq	r5, r1, r8, lsl #7
   14e94:	andeq	r6, r1, r0, lsr #26
   14e98:	andeq	r6, r1, r8, lsl sp
   14e9c:	andeq	r6, r1, ip, lsl #26
   14ea0:	strdeq	r6, [r1], -ip
   14ea4:	muleq	r1, r8, r8
   14ea8:	ldrdeq	r6, [r1], -r0
   14eac:	andeq	r6, r1, r4, asr #25
   14eb0:	andeq	r5, r1, r8, lsl #7
   14eb4:			; <UNDEFINED> instruction: 0x00016cb4
   14eb8:	andeq	r6, r1, r4, lsr #25
   14ebc:	muleq	r1, r4, ip
   14ec0:	andeq	r6, r1, r8, lsl #25
   14ec4:	andeq	r6, r1, r0, lsl #25
   14ec8:	muleq	r1, r8, r8
   14ecc:	andeq	r6, r1, r0, ror #24
   14ed0:	andeq	r6, r1, r0, asr #17
   14ed4:	andeq	r6, r1, ip, lsr #17
   14ed8:	muleq	r1, r8, r8
   14edc:	andeq	r6, r1, r4, lsl #17
   14ee0:	andeq	r6, r1, r8, ror #10
   14ee4:			; <UNDEFINED> instruction: 0x000158b8
   14ee8:	andeq	r5, r1, ip, ror #27
   14eec:			; <UNDEFINED> instruction: 0x000158b8
   14ef0:	andeq	r6, r1, r0, ror #18
   14ef4:			; <UNDEFINED> instruction: 0x000158b8
   14ef8:	andeq	r6, r1, ip, lsr #18
   14efc:	andeq	r5, r1, r8, lsl #7
   14f00:	andeq	r5, r1, r8, lsl #7
   14f04:	andeq	r5, r1, r8, lsl #7
   14f08:	andeq	r5, r1, r8, lsl #7
   14f0c:	andeq	r6, r1, ip, lsl r9
   14f10:	andeq	r5, r1, r8, lsl #7
   14f14:	andeq	r5, r1, r0, lsr #17
   14f18:	andeq	r6, r1, ip, ror #17
   14f1c:	andeq	r6, r1, r0, ror #17
   14f20:	ldrdeq	r6, [r1], -r4
   14f24:	andeq	r6, r1, r0, asr fp
   14f28:	andeq	r6, r1, r4, lsr fp
   14f2c:	andeq	r6, r1, r8, lsl fp
   14f30:	andeq	r5, r1, r8, lsl #7
   14f34:	andeq	r6, r1, r0, lsl #22
   14f38:	andeq	r6, r1, r8, ror #21
   14f3c:	andeq	r5, r1, r8, lsl #7
   14f40:	ldrdeq	r6, [r1], -r0
   14f44:			; <UNDEFINED> instruction: 0x00016ab8
   14f48:	andeq	r6, r1, r0, lsr #21
   14f4c:	andeq	r6, r1, r4, lsl #21
   14f50:	andeq	r6, r1, r8, ror #20
   14f54:	andeq	r6, r1, ip, asr #20
   14f58:	andeq	r6, r1, r0, lsr sl
   14f5c:	andeq	r6, r1, r8, lsl sl
   14f60:	andeq	r6, r1, r0, ror #19
   14f64:	andeq	r6, r1, r4, lsr #19
   14f68:	andeq	r6, r1, r0, lsl #19
   14f6c:	andeq	r6, r1, r0, lsr #16
   14f70:	andeq	r6, r1, r4, lsl #16
   14f74:	andeq	r6, r1, r0, ror #15
   14f78:			; <UNDEFINED> instruction: 0x000167bc
   14f7c:	andeq	r6, r1, ip, lsl #15
   14f80:	andeq	r6, r1, r8, asr r7
   14f84:	andeq	r6, r1, r0, asr #14
   14f88:	andeq	r6, r1, r0, lsl r7
   14f8c:	strdeq	r6, [r1], -r8
   14f90:	ldrdeq	r6, [r1], -r8
   14f94:	andeq	r5, r1, r8, lsl #7
   14f98:	andeq	r6, r1, r8, asr #13
   14f9c:			; <UNDEFINED> instruction: 0x000166b8
   14fa0:	andeq	r5, r1, r8, lsl #7
   14fa4:	andeq	r6, r1, ip, lsr #13
   14fa8:	andeq	r5, r1, r8, lsl #7
   14fac:	andeq	r6, r1, r0, lsr #13
   14fb0:	andeq	r6, r1, r8, lsl #13
   14fb4:	andeq	r5, r1, r8, lsl #7
   14fb8:	andeq	r6, r1, r8, ror r6
   14fbc:	andeq	r6, r1, r0, lsl #12
   14fc0:	andeq	r5, r1, r0, lsr #17
   14fc4:			; <UNDEFINED> instruction: 0x000165b0
   14fc8:	andeq	r6, r1, r0, lsr #11
   14fcc:	muleq	r1, r8, r8
   14fd0:	andeq	r5, r1, r8, lsl #7
   14fd4:	andeq	r5, r1, r8, lsl #7
   14fd8:	andeq	r5, r1, r8, lsl #7
   14fdc:	andeq	r5, r1, r8, lsl #7
   14fe0:	andeq	r6, r1, ip, ror r5
   14fe4:	muleq	r1, r4, r5
   14fe8:	andeq	r6, r1, r8, lsl #11
   14fec:	andeq	r6, r1, ip, ror #12
   14ff0:	andeq	r6, r1, r0, ror #12
   14ff4:	andeq	r6, r1, r8, asr #12
   14ff8:	andeq	r6, r1, ip, lsr r6
   14ffc:	andeq	r6, r1, r0, lsr r6
   15000:	andeq	r6, r1, r4, lsr #12
   15004:	andeq	r6, r1, r8, lsl r6
   15008:	andeq	r6, r1, ip, lsl #12
   1500c:	andeq	r6, r1, ip, asr r5
   15010:	andeq	r6, r1, r0, asr r5
   15014:	andeq	r6, r1, r4, asr #10
   15018:	andeq	r6, r1, r8, lsr r5
   1501c:	andeq	r5, r1, r0, lsr sl
   15020:	andeq	r5, r1, r8, lsl #7
   15024:	andeq	r5, r1, r8, lsl #7
   15028:	andeq	r5, r1, r8, lsl sl
   1502c:	ldrdeq	r5, [r1], -ip
   15030:	andeq	r5, r1, r4, asr #19
   15034:	andeq	r5, r1, ip, lsr #19
   15038:	strdeq	r6, [r1], -ip
   1503c:	andeq	r5, r1, r8, lsl #7
   15040:	andeq	r5, r1, r8, lsl #7
   15044:	andeq	r5, r1, r8, lsl #7
   15048:	andeq	r5, r1, r8, lsl #7
   1504c:	andeq	r5, r1, r8, lsl #7
   15050:	andeq	r5, r1, r8, lsl #7
   15054:	andeq	r5, r1, r8, lsl #7
   15058:	andeq	r6, r1, r0, lsr #10
   1505c:	andeq	r5, r1, r8, lsl #7
   15060:	andeq	r6, r1, r0, asr #8
   15064:	muleq	r1, r8, r8
   15068:	andeq	r6, r1, r4, lsl #8
   1506c:	strdeq	r6, [r1], -r0
   15070:	andeq	r5, r1, r8, lsl #7
   15074:	andeq	r5, r1, r8, lsl #7
   15078:	andeq	r5, r1, r8, lsl #7
   1507c:	andeq	r5, r1, r8, lsl #7
   15080:			; <UNDEFINED> instruction: 0x000163b8
   15084:	andeq	r6, r1, r0, lsr #7
   15088:	muleq	r1, r4, r3
   1508c:	andeq	r5, r1, r8, lsl #7
   15090:	andeq	r6, r1, r8, lsl #7
   15094:	andeq	r6, r1, ip, ror r3
   15098:	andeq	r6, r1, r0, ror r3
   1509c:	andeq	r5, r1, r8, lsl #7
   150a0:	andeq	r6, r1, r4, ror #6
   150a4:	andeq	r5, r1, r8, lsl #7
   150a8:	andeq	r6, r1, r8, asr r3
   150ac:	andeq	r6, r1, ip, asr #6
   150b0:	andeq	r6, r1, r0, asr #6
   150b4:	andeq	r6, r1, r0, lsr #6
   150b8:	andeq	r6, r1, r0, lsl #6
   150bc:	andeq	r5, r1, r0, lsr #17
   150c0:	ldrdeq	r6, [r1], -r8
   150c4:	andeq	r6, r1, r4, asr #5
   150c8:			; <UNDEFINED> instruction: 0x000162b8
   150cc:	andeq	r6, r1, r4, lsr #5
   150d0:	muleq	r1, r0, r2
   150d4:	andeq	r6, r1, r4, lsl #5
   150d8:	andeq	r6, r1, r0, ror r2
   150dc:	andeq	r6, r1, r8, asr r2
   150e0:	andeq	r6, r1, r0, asr #4
   150e4:	andeq	r6, r1, r8, lsr #4
   150e8:	andeq	r6, r1, r0, lsl r2
   150ec:	strdeq	r6, [r1], -r8
   150f0:	andeq	r6, r1, r0, ror #3
   150f4:	andeq	r6, r1, r8, asr #3
   150f8:			; <UNDEFINED> instruction: 0x000161b0
   150fc:	muleq	r1, r8, r1
   15100:	andeq	r6, r1, r0, lsl #3
   15104:	andeq	r6, r1, r8, ror #2
   15108:	andeq	r6, r1, r0, asr r1
   1510c:	andeq	r6, r1, r8, lsr r1
   15110:	andeq	r6, r1, r0, lsr #2
   15114:	andeq	r6, r1, r8, lsl #2
   15118:	strdeq	r6, [r1], -r0
   1511c:	ldrdeq	r6, [r1], -r4
   15120:	strheq	r6, [r1], -ip
   15124:	andeq	r6, r1, r4, lsr #1
   15128:	muleq	r1, r0, r0
   1512c:	andeq	r6, r1, r0, lsl #1
   15130:	andeq	r6, r1, ip, rrx
   15134:	andeq	r6, r1, r8, asr r0
   15138:	andeq	r6, r1, r4, asr #32
   1513c:	andeq	r6, r1, r0, lsr r0
   15140:	andeq	r6, r1, ip, lsl r0
   15144:	andeq	r6, r1, r8
   15148:	strdeq	r5, [r1], -r4
   1514c:	andeq	r5, r1, r0, ror #31
   15150:	andeq	r5, r1, r8, asr #31
   15154:			; <UNDEFINED> instruction: 0x00015fb0
   15158:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1515c:	andeq	r6, r1, r8, lsl #30
   15160:	andeq	r6, r1, r0, ror #29
   15164:	andeq	r6, r1, ip, asr #29
   15168:			; <UNDEFINED> instruction: 0x00016eb8
   1516c:	andeq	r6, r1, r0, lsr #29
   15170:	strdeq	r5, [r1], -ip
   15174:	andeq	r5, r1, r8, ror #29
   15178:	ldrdeq	r5, [r1], -r4
   1517c:	andeq	r5, r1, r0, asr #29
   15180:	andeq	r5, r1, ip, lsr #29
   15184:	andeq	r5, r1, r0, lsr #29
   15188:	muleq	r1, r4, lr
   1518c:	andeq	r5, r1, r8, ror #28
   15190:	andeq	r5, r1, ip, ror #17
   15194:	andeq	r5, r1, r8, lsl #29
   15198:	andeq	r5, r1, ip, ror #17
   1519c:	andeq	r5, r1, ip, asr #26
   151a0:	andeq	r5, r1, r0, lsr #18
   151a4:	andeq	r5, r1, r0, lsr #28
   151a8:	andeq	r5, r1, ip, ror #17
   151ac:	andeq	r5, r1, ip, asr #27
   151b0:	andeq	r5, r1, r0, asr #27
   151b4:			; <UNDEFINED> instruction: 0x00015db4
   151b8:	andeq	r5, r1, r0, lsr #18
   151bc:	andeq	r5, r1, r0, lsr #17
   151c0:	andeq	r5, r1, ip, lsr #18
   151c4:	andeq	r5, r1, ip, lsr #28
   151c8:	andeq	r5, r1, r0, ror #17
   151cc:	andeq	r5, r1, r4, lsr #21
   151d0:	andeq	r5, r1, r8, lsl #7
   151d4:	andeq	r5, r1, r0, lsr #17
   151d8:	andeq	r5, r1, ip, lsr #18
   151dc:	andeq	r5, r1, ip, lsr sl
   151e0:	andeq	r5, r1, r0, ror #17
   151e4:	andeq	r5, r1, ip, asr #30
   151e8:	andeq	r5, r1, r8, lsl #7
   151ec:	andeq	r5, r1, r0, lsr #17
   151f0:	andeq	r6, r1, r8, ror #16
   151f4:	andeq	r5, r1, r8, lsl #7
   151f8:	andeq	r6, r1, r8, asr r8
   151fc:	muleq	r1, r8, r8
   15200:	andeq	r6, r1, ip, lsr r8
   15204:	andeq	r5, r1, r8, lsr #17
   15208:	andeq	r5, r1, r8, lsr #17
   1520c:	andeq	r5, r1, r8, lsr #17
   15210:	andeq	r5, r1, r8, lsr #17
   15214:	andeq	r5, r1, r8, lsl #7
   15218:	strdeq	r5, [r1], -r8
   1521c:	strdeq	r5, [r1], -r8
   15220:	andeq	r5, r1, ip, lsl #19
   15224:	ldrdeq	r5, [r1], -r4
   15228:	andeq	r5, r1, r0, lsr #30
   1522c:	andeq	r5, r1, r4, lsl pc
   15230:	andeq	r5, r1, r8, lsr r9
   15234:	ldrdeq	r5, [r1], -r4
   15238:	andeq	r6, r1, r0, asr r4
   1523c:	andeq	r6, r1, r4, lsl r5
   15240:	andeq	r5, r1, r8, asr ip
   15244:	andeq	r5, r1, ip, asr #24
   15248:	andeq	r5, r1, r0, asr #24
   1524c:	andeq	r5, r1, r8, lsl ip
   15250:	andeq	r5, r1, r8, lsl #7
   15254:	andeq	r5, r1, r0, ror #21
   15258:	andeq	r5, r1, r0, ror #17
   1525c:	andeq	r5, r1, r8, lsr sp
   15260:	andeq	r5, r1, r8, lsl #7
   15264:	andeq	r5, r1, r8, lsl #7
   15268:	andeq	r5, r1, r8, lsl #7
   1526c:	andeq	r5, r1, r8, lsl #7
   15270:	andeq	r5, r1, r0, lsr #17
   15274:	muleq	r1, r8, r8
   15278:	ldrdeq	r5, [r1], -ip
   1527c:	andeq	r6, r1, r4, ror r4
   15280:	andeq	r6, r1, ip, asr r4
   15284:	andeq	r5, r1, r4, lsr #6
   15288:	andeq	r5, r1, r0, lsl #26
   1528c:	ldrdeq	r5, [r1], -r4
   15290:	andeq	r6, r1, ip, asr #16
   15294:	andeq	r6, r1, r0, lsr #8
   15298:	andeq	r5, r1, r8, lsl #18
   1529c:	andeq	r5, r1, r8, lsl #7
   152a0:	andeq	r5, r1, r8, lsl #7
   152a4:	andeq	r5, r1, r8, lsl #7
   152a8:	andeq	r6, r1, r4, ror ip
   152ac:	ldrdeq	r6, [r1], -ip
   152b0:	andeq	r5, r1, r8, lsl #18
   152b4:	andeq	r6, r1, ip, ror #22
   152b8:	muleq	r1, r8, r8
   152bc:	andeq	r5, r1, r8, lsl #7
   152c0:	andeq	r5, r1, r8, lsl #7
   152c4:	muleq	r1, r8, r9
   152c8:	andeq	r5, r1, r4, asr #18
   152cc:	andeq	r5, r1, r8, ror sp
   152d0:	andeq	r5, r1, ip, lsl #27
   152d4:	andeq	r5, r1, r8, ror r9
   152d8:	andeq	r5, r1, r0, lsr #27
   152dc:	andeq	r5, r1, ip, lsl #28
   152e0:	andeq	r5, r1, r4, ror lr
   152e4:	andeq	r6, r1, ip, asr #18
   152e8:	ldrdeq	r5, [r1], -r8
   152ec:	andeq	r5, r1, r8, lsl sp
   152f0:	andeq	r5, r1, ip, lsr #30
   152f4:	andeq	r5, r1, r4, ror #20
   152f8:	andeq	r5, r1, r8, asr sp
   152fc:	andeq	r6, r1, r8, ror #5
   15300:	andeq	r6, r1, r8, asr #11
   15304:	andeq	r6, r1, r4, lsl #18
   15308:	andeq	r5, r1, ip, asr #20
   1530c:	andeq	r5, r1, r0, asr #21
   15310:	andeq	r5, r1, r8, ror pc
   15314:	andeq	r6, r1, r0, asr #24
   15318:	andeq	r5, r1, r8, asr r9
   1531c:	andeq	r5, r1, r4, lsl #21
   15320:	ldrdeq	r6, [r1], -r0
   15324:	ldm	r7, {r0, r1, r2, r3}
   15328:	add	ip, sp, #40	; 0x28
   1532c:	ldr	r5, [r7, #-32]	; 0xffffffe0
   15330:	stm	ip, {r0, r1, r2, r3}
   15334:	mov	r0, r5
   15338:	ldr	r1, [pc, #2020]	; 15b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ecc>
   1533c:	bl	13268 <strcmp@plt>
   15340:	cmp	r0, #0
   15344:	bne	16fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3364>
   15348:	ldr	r6, [r7, #-16]
   1534c:	cmp	r6, #0
   15350:	moveq	r3, #1
   15354:	streq	r3, [sp, #40]	; 0x28
   15358:	beq	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1535c:	ldr	r1, [pc, #1988]	; 15b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   15360:	mov	r0, r5
   15364:	bl	13268 <strcmp@plt>
   15368:	cmp	r0, #0
   1536c:	bne	16f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x32ec>
   15370:	mov	r0, r5
   15374:	ldr	r1, [pc, #1968]	; 15b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed4>
   15378:	bl	13268 <strcmp@plt>
   1537c:	cmp	r0, #0
   15380:	bne	16f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x330c>
   15384:	str	r6, [sp, #52]	; 0x34
   15388:	ldr	r2, [sl]
   1538c:	ldr	r3, [pc, #1948]	; 15b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed8>
   15390:	cmp	r2, #0
   15394:	ldr	r2, [sp, #20]
   15398:	sxth	r8, r8
   1539c:	ldrh	r5, [r3, r2]
   153a0:	sub	r4, r4, r8, lsl #1
   153a4:	sub	r7, r7, r8, lsl #4
   153a8:	bne	156d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a80>
   153ac:	sub	ip, r5, #156	; 0x9c
   153b0:	add	r3, sp, #40	; 0x28
   153b4:	ldr	lr, [pc, #1888]	; 15b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec4>
   153b8:	lsl	ip, ip, #1
   153bc:	ldm	r3, {r0, r1, r2, r3}
   153c0:	add	lr, lr, ip
   153c4:	ldrsh	r5, [r4]
   153c8:	add	r7, r7, #16
   153cc:	ldrsh	lr, [lr, #-164]	; 0xffffff5c
   153d0:	stm	r7, {r0, r1, r2, r3}
   153d4:	ldr	r3, [pc, #1840]	; 15b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb4>
   153d8:	add	lr, lr, r5
   153dc:	cmp	lr, r3
   153e0:	bhi	153f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a0>
   153e4:	ldr	r3, [pc, #1828]	; 15b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb8>
   153e8:	lsl	lr, lr, #1
   153ec:	ldrsh	r3, [r3, lr]
   153f0:	cmp	r3, r5
   153f4:	beq	156c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a70>
   153f8:	ldr	r3, [pc, #1820]	; 15b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec4>
   153fc:	add	r3, r3, ip
   15400:	ldrsh	r3, [r3, #104]	; 0x68
   15404:	str	r3, [sp, #20]
   15408:	add	r4, r4, #2
   1540c:	b	14b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef8>
   15410:	ldr	r3, [pc, #1820]	; 15b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edc>
   15414:	ldrh	r9, [r3, r5]
   15418:	cmp	r9, #0
   1541c:	bne	14d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c8>
   15420:	ldr	r3, [pc, #1744]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   15424:	ldr	r3, [r3]
   15428:	cmn	r3, #2
   1542c:	moveq	r1, r3
   15430:	beq	15448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f0>
   15434:	cmp	r3, #388	; 0x184
   15438:	movcs	r1, #2
   1543c:	ldrcc	r2, [pc, #1732]	; 15b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb0>
   15440:	addcc	r2, r2, r3
   15444:	ldrbcc	r1, [r2, #2788]	; 0xae4
   15448:	ldr	r2, [sp, #36]	; 0x24
   1544c:	cmp	r2, #0
   15450:	beq	15818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc0>
   15454:	ldr	r2, [sp, #36]	; 0x24
   15458:	cmp	r2, #3
   1545c:	bne	1546c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1814>
   15460:	cmp	r3, #0
   15464:	bgt	15834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bdc>
   15468:	beq	15688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a30>
   1546c:	ldr	r9, [pc, #1732]	; 15b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee0>
   15470:	b	15480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1828>
   15474:	add	r3, r8, #8
   15478:	lsl	r5, r5, #1
   1547c:	ldrsh	r6, [r3, r5]
   15480:	ldr	r2, [pc, #1660]	; 15b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eac>
   15484:	mov	r0, r9
   15488:	cmp	r6, r2
   1548c:	ldr	r1, [pc, #1656]	; 15b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb4>
   15490:	add	r3, r6, #1
   15494:	beq	154b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c>
   15498:	cmp	r3, r1
   1549c:	lsl	r2, r3, #1
   154a0:	bhi	154b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c>
   154a4:	ldr	r3, [pc, #1636]	; 15b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb8>
   154a8:	ldrsh	r3, [r3, r2]
   154ac:	cmp	r3, #1
   154b0:	beq	15534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dc>
   154b4:	cmp	r4, fp
   154b8:	beq	155b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1958>
   154bc:	ldr	r3, [pc, #1656]	; 15b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee4>
   154c0:	sub	r7, r7, #16
   154c4:	ldrh	r1, [r3, r5]
   154c8:	bl	14a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb4>
   154cc:	ldr	r3, [sl]
   154d0:	ldrsh	r5, [r4, #-2]!
   154d4:	cmp	r3, #0
   154d8:	beq	15474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181c>
   154dc:	mov	r0, fp
   154e0:	mov	r1, r4
   154e4:	bl	14950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf8>
   154e8:	b	15474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181c>
   154ec:	ldr	r3, [pc, #1612]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   154f0:	ldr	r2, [sp, #24]
   154f4:	ldr	r1, [pc, #1608]	; 15b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eec>
   154f8:	ldr	r0, [r3]
   154fc:	bl	1382c <fprintf@plt>
   15500:	cmp	r4, r8
   15504:	bcs	16f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x32e0>
   15508:	mov	fp, r6
   1550c:	str	r9, [sp, #32]
   15510:	ldr	r3, [sl]
   15514:	cmp	r3, #0
   15518:	beq	14c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdc>
   1551c:	ldr	r3, [pc, #1564]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15520:	ldr	r2, [sp, #20]
   15524:	ldr	r1, [pc, #1564]	; 15b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef0>
   15528:	ldr	r0, [r3]
   1552c:	bl	1382c <fprintf@plt>
   15530:	b	14c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdc>
   15534:	ldr	r3, [pc, #1496]	; 15b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ebc>
   15538:	ldrsh	r6, [r3, r2]
   1553c:	cmp	r6, #0
   15540:	ble	154b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c>
   15544:	ldr	r3, [pc, #1484]	; 15b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec0>
   15548:	ldr	ip, [sl]
   1554c:	add	r7, r7, #16
   15550:	ldm	r3, {r0, r1, r2, r3}
   15554:	cmp	ip, #0
   15558:	streq	r6, [sp, #20]
   1555c:	stm	r7, {r0, r1, r2, r3}
   15560:	moveq	r3, #3
   15564:	streq	r3, [sp, #36]	; 0x24
   15568:	beq	15408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b0>
   1556c:	ldr	r5, [pc, #1484]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15570:	ldr	r2, [pc, #1492]	; 15b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef4>
   15574:	ldr	r1, [pc, #1492]	; 15b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef8>
   15578:	ldr	r0, [r5]
   1557c:	bl	1382c <fprintf@plt>
   15580:	ldr	r2, [pc, #1460]	; 15b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee4>
   15584:	lsl	r3, r6, #1
   15588:	ldr	r0, [r5]
   1558c:	ldrh	r1, [r2, r3]
   15590:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   15594:	ldr	r1, [r5]
   15598:	mov	r0, #10
   1559c:	str	r6, [sp, #20]
   155a0:	bl	139b8 <fputc@plt>
   155a4:	mov	r3, #3
   155a8:	str	r3, [sp, #36]	; 0x24
   155ac:	b	15408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b0>
   155b0:	mov	r5, #1
   155b4:	ldr	r3, [pc, #1340]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   155b8:	ldr	r3, [r3]
   155bc:	cmn	r3, #2
   155c0:	beq	155d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1980>
   155c4:	cmp	r3, #388	; 0x184
   155c8:	movcs	r1, #2
   155cc:	bcc	1568c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a34>
   155d0:	ldr	r0, [pc, #1404]	; 15b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1efc>
   155d4:	bl	14a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb4>
   155d8:	ldr	r3, [sl]
   155dc:	cmp	r3, #0
   155e0:	bne	157ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b94>
   155e4:	cmp	r4, fp
   155e8:	beq	15610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b8>
   155ec:	ldr	r7, [pc, #1352]	; 15b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee4>
   155f0:	ldr	r6, [pc, #1376]	; 15b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f00>
   155f4:	ldrsh	r3, [r4], #-2
   155f8:	mov	r0, r6
   155fc:	lsl	r3, r3, #1
   15600:	ldrh	r1, [r7, r3]
   15604:	bl	14a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb4>
   15608:	cmp	r4, fp
   1560c:	bne	155f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199c>
   15610:	add	r3, sp, #72	; 0x48
   15614:	cmp	fp, r3
   15618:	beq	15624 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19cc>
   1561c:	mov	r0, fp
   15620:	bl	13364 <free@plt>
   15624:	mov	r0, r5
   15628:	add	sp, sp, #3664	; 0xe50
   1562c:	add	sp, sp, #12
   15630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15634:	ldr	r2, [pc, #1212]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   15638:	cmp	r3, #0
   1563c:	mov	ip, #0
   15640:	str	ip, [r2]
   15644:	streq	r3, [sp, #28]
   15648:	beq	14ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104c>
   1564c:	ldr	r3, [pc, #1260]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15650:	mov	r2, #21
   15654:	mov	r1, #1
   15658:	ldr	r3, [r3]
   1565c:	ldr	r0, [pc, #1272]	; 15b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f04>
   15660:	str	ip, [sp, #28]
   15664:	bl	13568 <fwrite@plt>
   15668:	b	14ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104c>
   1566c:	cmp	r3, #0
   15670:	bne	1569c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a44>
   15674:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   15678:	ldr	r2, [pc, #1144]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   1567c:	ldr	r3, [sl]
   15680:	str	r0, [r2]
   15684:	b	14c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101c>
   15688:	mov	r5, #1
   1568c:	ldr	r2, [pc, #1140]	; 15b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb0>
   15690:	add	r3, r2, r3
   15694:	ldrb	r1, [r3, #2788]	; 0xae4
   15698:	b	155d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1978>
   1569c:	ldr	r3, [pc, #1180]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   156a0:	mov	r2, #17
   156a4:	mov	r1, #1
   156a8:	ldr	r3, [r3]
   156ac:	ldr	r0, [pc, #1196]	; 15b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f08>
   156b0:	bl	13568 <fwrite@plt>
   156b4:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   156b8:	ldr	r2, [pc, #1080]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   156bc:	ldr	r3, [sl]
   156c0:	str	r0, [r2]
   156c4:	b	14c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101c>
   156c8:	ldr	r3, [pc, #1092]	; 15b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ebc>
   156cc:	ldrsh	r3, [r3, lr]
   156d0:	str	r3, [sp, #20]
   156d4:	b	15408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b0>
   156d8:	ldr	r3, [pc, #1120]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   156dc:	ldr	r2, [pc, #1152]	; 15b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f0c>
   156e0:	mov	r6, r3
   156e4:	ldr	r0, [r3]
   156e8:	ldr	r1, [pc, #1120]	; 15b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef8>
   156ec:	bl	1382c <fprintf@plt>
   156f0:	mov	r1, r5
   156f4:	ldr	r0, [r6]
   156f8:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   156fc:	ldr	r1, [r6]
   15700:	mov	r0, #10
   15704:	bl	139b8 <fputc@plt>
   15708:	ldr	r3, [sl]
   1570c:	cmp	r3, #0
   15710:	beq	153ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1754>
   15714:	mov	r1, r4
   15718:	mov	r0, fp
   1571c:	bl	14950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf8>
   15720:	b	153ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1754>
   15724:	ldr	r3, [pc, #1008]	; 15b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec4>
   15728:	lsl	r2, r9, #1
   1572c:	sub	r3, r3, #3328	; 0xd00
   15730:	ldr	r0, [pc, #1032]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15734:	mov	r1, r2
   15738:	sub	r3, r3, #8
   1573c:	str	r2, [sp, #20]
   15740:	ldrh	r3, [r3, r1]
   15744:	sub	r2, r9, #1
   15748:	ldr	r1, [pc, #1048]	; 15b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f10>
   1574c:	ldr	r0, [r0]
   15750:	bl	1382c <fprintf@plt>
   15754:	cmp	r8, #0
   15758:	beq	14d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fc>
   1575c:	add	r5, r4, r5, lsl #1
   15760:	mov	r6, #0
   15764:	ldr	r3, [pc, #980]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15768:	add	r6, r6, #1
   1576c:	mov	r2, r6
   15770:	ldr	r1, [pc, #1012]	; 15b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f14>
   15774:	ldr	r0, [r3]
   15778:	bl	1382c <fprintf@plt>
   1577c:	ldrsh	r3, [r5], #2
   15780:	ldr	r2, [pc, #952]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15784:	ldr	r1, [pc, #944]	; 15b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee4>
   15788:	lsl	r3, r3, #1
   1578c:	ldr	r0, [r2]
   15790:	ldrh	r1, [r1, r3]
   15794:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   15798:	ldr	r2, [pc, #928]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   1579c:	mov	r0, #10
   157a0:	ldr	r1, [r2]
   157a4:	bl	139b8 <fputc@plt>
   157a8:	cmp	r8, r6
   157ac:	bne	15764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c>
   157b0:	b	14d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fc>
   157b4:	ldr	r3, [pc, #900]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   157b8:	ldr	r2, [pc, #944]	; 15b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f18>
   157bc:	ldr	r1, [pc, #908]	; 15b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef8>
   157c0:	ldr	r0, [r3]
   157c4:	bl	1382c <fprintf@plt>
   157c8:	ldr	r3, [pc, #880]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   157cc:	ldr	r1, [sp, #28]
   157d0:	ldr	r0, [r3]
   157d4:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   157d8:	ldr	r3, [pc, #864]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   157dc:	mov	r0, #10
   157e0:	ldr	r1, [r3]
   157e4:	bl	139b8 <fputc@plt>
   157e8:	b	14ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104c>
   157ec:	mov	r1, r4
   157f0:	mov	r0, fp
   157f4:	bl	14950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf8>
   157f8:	b	155e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198c>
   157fc:	ldr	r3, [pc, #828]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15800:	mov	r2, #15
   15804:	mov	r1, #1
   15808:	ldr	r3, [r3]
   1580c:	ldr	r0, [pc, #864]	; 15b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1c>
   15810:	bl	13568 <fwrite@plt>
   15814:	b	14b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebc>
   15818:	ldr	r2, [pc, #724]	; 15af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9c>
   1581c:	ldr	r0, [pc, #852]	; 15b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f20>
   15820:	ldr	r3, [r2]
   15824:	add	r3, r3, #1
   15828:	str	r3, [r2]
   1582c:	bl	14a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe08>
   15830:	b	1546c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1814>
   15834:	ldr	r0, [pc, #832]	; 15b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f24>
   15838:	bl	14a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb4>
   1583c:	ldr	r2, [pc, #692]	; 15af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea0>
   15840:	mvn	r3, #1
   15844:	str	r3, [r2]
   15848:	b	1546c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1814>
   1584c:	ldr	r3, [pc, #748]	; 15b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8>
   15850:	ldr	r2, [pc, #756]	; 15b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef4>
   15854:	mov	r5, r3
   15858:	ldr	r0, [r3]
   1585c:	ldr	r1, [pc, #748]	; 15b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef8>
   15860:	bl	1382c <fprintf@plt>
   15864:	ldr	r1, [sp, #28]
   15868:	ldr	r0, [r5]
   1586c:	bl	149c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c>
   15870:	ldr	r1, [r5]
   15874:	mov	r0, #10
   15878:	bl	139b8 <fputc@plt>
   1587c:	b	14cfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a4>
   15880:	ldr	r0, [pc, #760]	; 15b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f28>
   15884:	bl	14a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe08>
   15888:	mov	r5, #2
   1588c:	b	155b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195c>
   15890:	mov	r5, #0
   15894:	b	155b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195c>
   15898:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   1589c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158a0:	bl	199a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d4c>
   158a4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158a8:	ldr	r3, [pc, #856]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   158ac:	mov	r2, #3
   158b0:	str	r2, [r3, #92]	; 0x5c
   158b4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158b8:	ldr	r2, [pc, #844]	; 15c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb4>
   158bc:	ldrb	r3, [r2]
   158c0:	orr	r1, r3, #128	; 0x80
   158c4:	lsr	r3, r3, #7
   158c8:	strb	r1, [r2]
   158cc:	str	r3, [sp, #40]	; 0x28
   158d0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158d4:	mov	r3, #0
   158d8:	str	r3, [sp, #40]	; 0x28
   158dc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158e0:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   158e4:	bl	199a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d4c>
   158e8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158ec:	mov	r3, #0
   158f0:	str	r3, [sp, #40]	; 0x28
   158f4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   158f8:	ldr	r3, [pc, #776]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   158fc:	mov	r2, #0
   15900:	str	r2, [r3, #92]	; 0x5c
   15904:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15908:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   1590c:	ldr	r2, [pc, #756]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15910:	ldr	r3, [r2]
   15914:	sub	r3, r3, #1
   15918:	str	r3, [r2]
   1591c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15920:	mov	r3, #0
   15924:	str	r3, [sp, #40]	; 0x28
   15928:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1592c:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15930:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   15934:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15938:	ldr	r3, [r7, #-16]
   1593c:	str	r3, [sp, #40]	; 0x28
   15940:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15944:	mov	r2, #0
   15948:	ldr	r1, [r7, #-32]	; 0xffffffe0
   1594c:	ldr	r0, [r7, #-64]	; 0xffffffc0
   15950:	bl	259d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d80>
   15954:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15958:	ldr	r2, [pc, #680]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   1595c:	mov	r3, #0
   15960:	ldr	r1, [pc, #540]	; 15b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f2c>
   15964:	ldr	r2, [r2, #96]	; 0x60
   15968:	ldr	r0, [r7, #-32]	; 0xffffffe0
   1596c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15970:	str	r0, [sp, #40]	; 0x28
   15974:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15978:	ldr	r1, [r7]
   1597c:	ldr	r0, [r7, #-16]
   15980:	bl	27d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14104>
   15984:	str	r0, [sp, #40]	; 0x28
   15988:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1598c:	ldr	r3, [r7, #-32]	; 0xffffffe0
   15990:	str	r3, [sp, #40]	; 0x28
   15994:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15998:	mov	r2, #0
   1599c:	mov	r0, r2
   159a0:	ldr	r1, [r7, #-32]	; 0xffffffe0
   159a4:	bl	259d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d80>
   159a8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   159ac:	mov	r2, #0
   159b0:	ldr	r1, [r7, #-16]
   159b4:	ldr	r0, [r7, #-48]	; 0xffffffd0
   159b8:	bl	2cc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18fbc>
   159bc:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   159c0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   159c4:	mov	r2, #1
   159c8:	ldr	r1, [r7, #-16]
   159cc:	ldr	r0, [r7, #-48]	; 0xffffffd0
   159d0:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   159d4:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   159d8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   159dc:	ldr	r5, [r7, #-32]	; 0xffffffe0
   159e0:	ldr	r0, [pc, #416]	; 15b88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f30>
   159e4:	mov	r1, r5
   159e8:	ldr	r6, [r7, #-16]
   159ec:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   159f0:	ldr	r2, [r7]
   159f4:	mov	r1, r0
   159f8:	mov	r0, r6
   159fc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   15a00:	mov	r2, #0
   15a04:	mov	r1, r0
   15a08:	mov	r0, r5
   15a0c:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   15a10:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   15a14:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a18:	mov	r2, #0
   15a1c:	ldr	r1, [r7]
   15a20:	ldr	r0, [r7, #-32]	; 0xffffffe0
   15a24:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   15a28:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   15a2c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a30:	mov	r3, #124	; 0x7c
   15a34:	str	r3, [sp, #40]	; 0x28
   15a38:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a3c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   15a40:	ldr	r0, [r7, #-80]	; 0xffffffb0
   15a44:	bl	253dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11784>
   15a48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a4c:	ldr	r2, [pc, #436]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15a50:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15a54:	ldr	r3, [r7, #-32]	; 0xffffffe0
   15a58:	str	r1, [r2, #96]	; 0x60
   15a5c:	str	r3, [sp, #40]	; 0x28
   15a60:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a64:	ldr	r2, [pc, #412]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15a68:	mov	r3, #0
   15a6c:	ldr	r1, [r7]
   15a70:	ldr	r2, [r2, #96]	; 0x60
   15a74:	ldr	r0, [r7, #-32]	; 0xffffffe0
   15a78:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15a7c:	str	r0, [sp, #40]	; 0x28
   15a80:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15a84:	ldr	r2, [pc, #380]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15a88:	mov	r3, #0
   15a8c:	mov	r0, r3
   15a90:	ldr	r2, [r2, #96]	; 0x60
   15a94:	ldr	r1, [pc, #324]	; 15be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f88>
   15a98:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15a9c:	str	r0, [sp, #40]	; 0x28
   15aa0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15aa4:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15aa8:	ldr	r3, [r7, #-32]	; 0xffffffe0
   15aac:	ldr	r2, [r7, #-16]
   15ab0:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15ab4:	ldr	r0, [r7]
   15ab8:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   15abc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ac0:	ldr	r2, [pc, #320]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15ac4:	mov	r3, #0
   15ac8:	mov	r0, r3
   15acc:	ldr	r2, [r2, #96]	; 0x60
   15ad0:	ldr	r1, [pc, #208]	; 15ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f50>
   15ad4:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15ad8:	str	r0, [sp, #40]	; 0x28
   15adc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ae0:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   15ae4:	ldr	r0, [r7]
   15ae8:	bl	25438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117e0>
   15aec:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15af0:	andeq	r8, ip, r4, lsl r0
   15af4:	andeq	r8, ip, r0, lsl r0
   15af8:	andeq	r8, ip, r8, lsl r0
   15afc:	andeq	r2, r0, pc, lsl #14
   15b00:	strdeq	pc, [r3], -ip
   15b04:			; <UNDEFINED> instruction: 0xfffffd71
   15b08:	andeq	pc, r3, ip, ror r5	; <UNPREDICTABLE>
   15b0c:	andeq	r0, r0, r8, lsr #15
   15b10:	andeq	r0, r4, r4, ror #3
   15b14:	andeq	r1, r4, r8, lsr r1
   15b18:	andeq	r8, ip, ip, lsl r0
   15b1c:	andeq	r3, r4, ip, ror #10
   15b20:	andeq	r0, r0, lr, ror #2
   15b24:	andeq	r3, r4, r4, ror #17
   15b28:	andeq	r3, r4, ip, ror #17
   15b2c:	strdeq	r3, [r4], -r4
   15b30:	ldrdeq	r3, [r4], -r4
   15b34:	andeq	r2, r4, ip, lsl #1
   15b38:	andeq	r3, r4, r8, ror r9
   15b3c:	andeq	r2, r4, r8, asr fp
   15b40:	andeq	r7, ip, r8, asr #14
   15b44:	andeq	r3, r4, r0, lsl #15
   15b48:	andeq	r3, r4, r0, lsr #15
   15b4c:	strdeq	r3, [r4], -r0
   15b50:	andeq	r3, r4, r8, lsl #14
   15b54:	muleq	r4, ip, r9
   15b58:			; <UNDEFINED> instruction: 0x000439bc
   15b5c:	andeq	r3, r4, r8, asr #15
   15b60:			; <UNDEFINED> instruction: 0x000437b4
   15b64:	andeq	r3, r4, ip, asr #18
   15b68:	strdeq	r3, [r4], -ip
   15b6c:	andeq	r3, r4, r4, lsr #16
   15b70:	andeq	r3, r4, r0, ror #15
   15b74:	andeq	r3, r4, r0, ror r7
   15b78:	andeq	r3, r4, r4, asr r9
   15b7c:	andeq	r3, r4, r4, ror #18
   15b80:	andeq	r3, r4, r8, lsl #19
   15b84:	andeq	r3, r4, ip, lsr r9
   15b88:	andeq	r0, r0, r3, lsl #2
   15b8c:	muleq	r4, r0, r8
   15b90:	andeq	r3, r4, r4, asr #16
   15b94:	andeq	r0, r0, lr, ror r1
   15b98:	andeq	r0, r0, sp, ror r1
   15b9c:	andeq	r0, r0, r7, ror #2
   15ba0:	andeq	r0, r0, lr, asr #2
   15ba4:	andeq	r0, r0, r6, asr #2
   15ba8:	andeq	r3, r4, r4, lsr r9
   15bac:	andeq	r0, r0, r5, lsr #2
   15bb0:	andeq	r0, r0, r7, lsl r1
   15bb4:	andeq	r0, r0, r2, lsl #3
   15bb8:	andeq	r0, r0, r3, asr #2
   15bbc:	andeq	r0, r0, r1, asr #2
   15bc0:	andeq	r0, r0, r2, asr #2
   15bc4:	andeq	r0, r0, fp, lsr #2
   15bc8:	andeq	r0, r0, fp, lsr r1
   15bcc:	andeq	r0, r0, sp, lsl #2
   15bd0:	andeq	r0, r0, lr, lsl #2
   15bd4:	andeq	r0, r0, r2, lsl r1
   15bd8:	andeq	r0, r0, r1, lsl r1
   15bdc:	andeq	r0, r0, pc, lsl #2
   15be0:	andeq	r3, r4, r4, asr #18
   15be4:			; <UNDEFINED> instruction: 0x000431b4
   15be8:	ldrdeq	r3, [r4], -r0
   15bec:	muleq	r4, ip, r8
   15bf0:	ldrbtvs	lr, [r4], #-1361	; 0xfffffaaf
   15bf4:	andeq	r0, r0, r3, lsl r1
   15bf8:	andeq	r3, r4, r4, lsl #17
   15bfc:	andeq	r8, ip, ip, ror r0
   15c00:	andeq	r4, r8, r0, lsl #22
   15c04:	andeq	pc, r4, r8, lsr #17
   15c08:	andeq	r7, ip, r0, lsl sl
   15c0c:	andeq	r8, ip, r8, asr r0
   15c10:	andeq	r3, r4, r0, lsl #17
   15c14:	andeq	r8, ip, r8, lsl r1
   15c18:	mov	r0, #12
   15c1c:	bl	13574 <xmalloc@plt>
   15c20:	ldr	r2, [r7]
   15c24:	ldr	r3, [r7, #-32]	; 0xffffffe0
   15c28:	str	r2, [r0, #4]
   15c2c:	mov	r2, #0
   15c30:	str	r0, [sp, #40]	; 0x28
   15c34:	str	r2, [r0, #8]
   15c38:	str	r3, [r0]
   15c3c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c40:	mov	r3, #0
   15c44:	str	r3, [sp, #40]	; 0x28
   15c48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c4c:	ldr	r3, [pc, #-200]	; 15b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f34>
   15c50:	str	r3, [sp, #40]	; 0x28
   15c54:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c58:	ldr	r3, [r7]
   15c5c:	str	r3, [sp, #40]	; 0x28
   15c60:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c64:	mov	r2, #5
   15c68:	ldr	r1, [pc, #-224]	; 15b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f38>
   15c6c:	mov	r0, #0
   15c70:	bl	13460 <dcgettext@plt>
   15c74:	ldr	r1, [r7]
   15c78:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   15c7c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c80:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15c84:	bl	281b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1455c>
   15c88:	ldr	r2, [pc, #-136]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15c8c:	ldr	r3, [r2]
   15c90:	sub	r3, r3, #1
   15c94:	str	r3, [r2]
   15c98:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15c9c:	ldr	r5, [pc, #-156]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15ca0:	bl	198d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c7c>
   15ca4:	ldr	r6, [r5]
   15ca8:	cmp	r6, #19
   15cac:	ble	16fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3348>
   15cb0:	add	r3, r6, #1
   15cb4:	str	r3, [r5]
   15cb8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15cbc:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15cc0:	ldr	r1, [r7]
   15cc4:	ldr	r0, [r7, #-32]	; 0xffffffe0
   15cc8:	bl	2cbcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f74>
   15ccc:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   15cd0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15cd4:	bl	19970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d18>
   15cd8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15cdc:	ldr	ip, [r7, #-20]	; 0xffffffec
   15ce0:	ldrd	r2, [r7, #-32]	; 0xffffffe0
   15ce4:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15ce8:	ldr	r0, [r7, #-80]	; 0xffffffb0
   15cec:	str	ip, [sp, #4]
   15cf0:	ldr	ip, [r7, #-24]	; 0xffffffe8
   15cf4:	str	ip, [sp]
   15cf8:	bl	25210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x115b8>
   15cfc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d00:	ldm	r7, {r0, r1, r2, r3}
   15d04:	add	lr, sp, #40	; 0x28
   15d08:	ldr	ip, [r7, #-32]	; 0xffffffe0
   15d0c:	stm	lr, {r0, r1, r2, r3}
   15d10:	str	ip, [sp, #48]	; 0x30
   15d14:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d18:	ldr	r2, [pc, #-280]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15d1c:	mov	r3, #0
   15d20:	mov	r0, r3
   15d24:	ldr	r2, [r2, #96]	; 0x60
   15d28:	ldr	r1, [r7]
   15d2c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15d30:	str	r0, [sp, #40]	; 0x28
   15d34:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d38:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15d3c:	ldr	r1, [r7, #-16]
   15d40:	ldr	r0, [r7]
   15d44:	bl	254e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11890>
   15d48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d4c:	mov	r3, #384	; 0x180
   15d50:	str	r3, [sp, #40]	; 0x28
   15d54:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d58:	ldr	r2, [pc, #-344]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15d5c:	mov	r3, #1
   15d60:	ldr	r1, [r7]
   15d64:	ldr	r2, [r2, #96]	; 0x60
   15d68:	ldr	r0, [r7, #-32]	; 0xffffffe0
   15d6c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15d70:	str	r0, [sp, #40]	; 0x28
   15d74:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d78:	ldr	r2, [r7, #-16]
   15d7c:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15d80:	ldr	r0, [r7, #-80]	; 0xffffffb0
   15d84:	bl	259d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d80>
   15d88:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15d8c:	ldr	r1, [r7]
   15d90:	mov	r0, #0
   15d94:	bl	27d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14104>
   15d98:	str	r0, [sp, #40]	; 0x28
   15d9c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15da0:	mov	r1, #0
   15da4:	mov	r0, r1
   15da8:	bl	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d48>
   15dac:	str	r0, [sp, #40]	; 0x28
   15db0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15db4:	ldr	r3, [pc, #-552]	; 15b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f3c>
   15db8:	str	r3, [sp, #40]	; 0x28
   15dbc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15dc0:	ldr	r3, [pc, #-560]	; 15b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f40>
   15dc4:	str	r3, [sp, #40]	; 0x28
   15dc8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15dcc:	mov	r3, #380	; 0x17c
   15dd0:	str	r3, [sp, #40]	; 0x28
   15dd4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15dd8:	ldr	r1, [r7, #-16]
   15ddc:	ldr	r0, [r7, #-80]	; 0xffffffb0
   15de0:	bl	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d48>
   15de4:	str	r0, [sp, #40]	; 0x28
   15de8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15dec:	ldr	r1, [pc, #-488]	; 15c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb4>
   15df0:	ldr	r2, [r7, #-32]	; 0xffffffe0
   15df4:	ldrb	r3, [r1]
   15df8:	and	r2, r2, #1
   15dfc:	bic	r3, r3, #128	; 0x80
   15e00:	orr	r3, r3, r2, lsl #7
   15e04:	strb	r3, [r1]
   15e08:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e0c:	mov	r1, #0
   15e10:	ldr	r0, [r7, #-16]
   15e14:	bl	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d48>
   15e18:	str	r0, [sp, #40]	; 0x28
   15e1c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e20:	ldr	r3, [r7, #-16]
   15e24:	str	r3, [sp, #40]	; 0x28
   15e28:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e2c:	ldr	r2, [r7, #-64]	; 0xffffffc0
   15e30:	ldr	r3, [r7, #-80]	; 0xffffffb0
   15e34:	ldr	r1, [r7, #-112]	; 0xffffff90
   15e38:	ldr	r0, [r7, #-144]	; 0xffffff70
   15e3c:	str	r2, [sp, #12]
   15e40:	ldr	r2, [r7, #-16]
   15e44:	str	r2, [sp, #8]
   15e48:	ldr	ip, [r7, #-96]	; 0xffffffa0
   15e4c:	ldr	r2, [pc, #-588]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15e50:	str	ip, [sp, #4]
   15e54:	ldr	ip, [r7, #-48]	; 0xffffffd0
   15e58:	str	ip, [sp]
   15e5c:	ldr	r2, [r2, #92]	; 0x5c
   15e60:	bl	23fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10368>
   15e64:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e68:	ldr	r3, [r7, #-16]
   15e6c:	str	r3, [sp, #40]	; 0x28
   15e70:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e74:	mov	r1, #0
   15e78:	ldr	r0, [r7, #-16]
   15e7c:	bl	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d48>
   15e80:	str	r0, [sp, #40]	; 0x28
   15e84:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e88:	ldr	r3, [r7, #-16]
   15e8c:	str	r3, [sp, #40]	; 0x28
   15e90:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15e94:	mov	r3, #0
   15e98:	str	r3, [sp, #40]	; 0x28
   15e9c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ea0:	ldr	r3, [r7]
   15ea4:	str	r3, [sp, #40]	; 0x28
   15ea8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15eac:	ldr	r1, [r7, #-16]
   15eb0:	ldr	r0, [pc, #-796]	; 15b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f44>
   15eb4:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   15eb8:	str	r0, [sp, #40]	; 0x28
   15ebc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ec0:	ldr	r1, [r7, #-16]
   15ec4:	mov	r0, #336	; 0x150
   15ec8:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   15ecc:	str	r0, [sp, #40]	; 0x28
   15ed0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ed4:	ldr	r1, [r7, #-16]
   15ed8:	ldr	r0, [pc, #-832]	; 15ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f48>
   15edc:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   15ee0:	str	r0, [sp, #40]	; 0x28
   15ee4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ee8:	ldr	r1, [r7, #-16]
   15eec:	ldr	r0, [r7, #-48]	; 0xffffffd0
   15ef0:	bl	2cc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ff8>
   15ef4:	str	r0, [sp, #40]	; 0x28
   15ef8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15efc:	ldr	r2, [r7, #-16]
   15f00:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15f04:	ldr	r0, [pc, #-872]	; 15ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f4c>
   15f08:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   15f0c:	str	r0, [sp, #40]	; 0x28
   15f10:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f14:	ldr	r3, [r7, #-112]	; 0xffffff90
   15f18:	str	r3, [sp, #40]	; 0x28
   15f1c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f20:	ldr	r3, [r7, #-48]	; 0xffffffd0
   15f24:	str	r3, [sp, #40]	; 0x28
   15f28:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f2c:	ldr	r2, [pc, #-812]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15f30:	mov	r3, #1
   15f34:	ldr	r1, [r7]
   15f38:	ldr	r2, [r2, #96]	; 0x60
   15f3c:	mov	r0, #0
   15f40:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15f44:	str	r0, [sp, #40]	; 0x28
   15f48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f4c:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   15f50:	ldr	ip, [r7, #-32]	; 0xffffffe0
   15f54:	ldr	r3, [r7, #-48]	; 0xffffffd0
   15f58:	ldr	r2, [r7]
   15f5c:	ldr	r1, [r7, #-192]	; 0xffffff40
   15f60:	ldr	r0, [r7, #-176]	; 0xffffff50
   15f64:	str	ip, [sp, #4]
   15f68:	ldr	ip, [r7, #-16]
   15f6c:	str	ip, [sp]
   15f70:	bl	25640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119e8>
   15f74:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f78:	ldr	r2, [pc, #-888]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   15f7c:	mov	r3, #0
   15f80:	ldr	r1, [pc, #-992]	; 15ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f50>
   15f84:	ldr	r2, [r2, #96]	; 0x60
   15f88:	ldr	r0, [r7, #-32]	; 0xffffffe0
   15f8c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   15f90:	str	r0, [sp, #40]	; 0x28
   15f94:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15f98:	ldr	r2, [r7, #-48]	; 0xffffffd0
   15f9c:	ldr	r1, [r7, #-16]
   15fa0:	ldr	r0, [pc, #-1020]	; 15bac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f54>
   15fa4:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   15fa8:	str	r0, [sp, #40]	; 0x28
   15fac:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15fb0:	ldr	r2, [r7, #-16]
   15fb4:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15fb8:	mov	r0, #292	; 0x124
   15fbc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   15fc0:	str	r0, [sp, #40]	; 0x28
   15fc4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15fc8:	ldr	r2, [r7, #-16]
   15fcc:	ldr	r1, [r7, #-48]	; 0xffffffd0
   15fd0:	ldr	r0, [pc, #-1064]	; 15bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f58>
   15fd4:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   15fd8:	str	r0, [sp, #40]	; 0x28
   15fdc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15fe0:	ldr	r1, [r7, #-16]
   15fe4:	ldr	r0, [pc, #-1084]	; 15bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f58>
   15fe8:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   15fec:	str	r0, [sp, #40]	; 0x28
   15ff0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   15ff4:	ldr	r1, [r7, #-16]
   15ff8:	mov	r0, #352	; 0x160
   15ffc:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   16000:	str	r0, [sp, #40]	; 0x28
   16004:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16008:	ldr	r1, [r7, #-16]
   1600c:	ldr	r0, [pc, #-1120]	; 15bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5c>
   16010:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16014:	str	r0, [sp, #40]	; 0x28
   16018:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1601c:	ldr	r1, [r7, #-16]
   16020:	mov	r0, #324	; 0x144
   16024:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16028:	str	r0, [sp, #40]	; 0x28
   1602c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16030:	ldr	r1, [r7, #-16]
   16034:	ldr	r0, [pc, #-1156]	; 15bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f60>
   16038:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   1603c:	str	r0, [sp, #40]	; 0x28
   16040:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16044:	ldr	r1, [r7, #-16]
   16048:	ldr	r0, [pc, #-1172]	; 15bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f64>
   1604c:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16050:	str	r0, [sp, #40]	; 0x28
   16054:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16058:	ldr	r1, [r7, #-16]
   1605c:	ldr	r0, [pc, #-1188]	; 15bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f68>
   16060:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16064:	str	r0, [sp, #40]	; 0x28
   16068:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1606c:	mov	r1, #0
   16070:	ldr	r0, [pc, #-1204]	; 15bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f6c>
   16074:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16078:	str	r0, [sp, #40]	; 0x28
   1607c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16080:	ldrd	r0, [r7]
   16084:	bl	2c8dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c84>
   16088:	str	r0, [sp, #40]	; 0x28
   1608c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16090:	ldr	r1, [r7, #-16]
   16094:	ldr	r0, [pc, #-1236]	; 15bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f70>
   16098:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   1609c:	str	r0, [sp, #40]	; 0x28
   160a0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   160a4:	ldr	r2, [r7]
   160a8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   160ac:	ldr	r0, [pc, #-1256]	; 15bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f74>
   160b0:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   160b4:	str	r0, [sp, #40]	; 0x28
   160b8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   160bc:	ldr	r2, [r7]
   160c0:	ldr	r1, [r7, #-32]	; 0xffffffe0
   160c4:	ldr	r0, [pc, #-1276]	; 15bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f78>
   160c8:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   160cc:	str	r0, [sp, #40]	; 0x28
   160d0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   160d4:	ldr	r3, [r7]
   160d8:	ldr	r2, [r7, #-32]	; 0xffffffe0
   160dc:	ldr	r1, [r7, #-64]	; 0xffffffc0
   160e0:	mov	r0, #63	; 0x3f
   160e4:	bl	2ca54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dfc>
   160e8:	str	r0, [sp, #40]	; 0x28
   160ec:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   160f0:	ldr	r2, [r7]
   160f4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   160f8:	mov	r0, #124	; 0x7c
   160fc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16100:	str	r0, [sp, #40]	; 0x28
   16104:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16108:	ldr	r2, [r7]
   1610c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16110:	mov	r0, #94	; 0x5e
   16114:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16118:	str	r0, [sp, #40]	; 0x28
   1611c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16120:	ldr	r2, [r7]
   16124:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16128:	mov	r0, #38	; 0x26
   1612c:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16130:	str	r0, [sp, #40]	; 0x28
   16134:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16138:	ldr	r2, [r7]
   1613c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16140:	mov	r0, #62	; 0x3e
   16144:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16148:	str	r0, [sp, #40]	; 0x28
   1614c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16150:	ldr	r2, [r7]
   16154:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16158:	mov	r0, #60	; 0x3c
   1615c:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16160:	str	r0, [sp, #40]	; 0x28
   16164:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16168:	ldr	r2, [r7]
   1616c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16170:	ldr	r0, [pc, #-1444]	; 15bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f7c>
   16174:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16178:	str	r0, [sp, #40]	; 0x28
   1617c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16180:	ldr	r2, [r7]
   16184:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16188:	ldr	r0, [pc, #-1464]	; 15bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f80>
   1618c:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16190:	str	r0, [sp, #40]	; 0x28
   16194:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16198:	ldr	r2, [r7]
   1619c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   161a0:	mov	r0, #272	; 0x110
   161a4:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   161a8:	str	r0, [sp, #40]	; 0x28
   161ac:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   161b0:	ldr	r2, [r7]
   161b4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   161b8:	ldr	r0, [pc, #-1508]	; 15bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f84>
   161bc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   161c0:	str	r0, [sp, #40]	; 0x28
   161c4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   161c8:	ldr	r2, [r7]
   161cc:	ldr	r1, [r7, #-32]	; 0xffffffe0
   161d0:	mov	r0, #276	; 0x114
   161d4:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   161d8:	str	r0, [sp, #40]	; 0x28
   161dc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   161e0:	ldr	r2, [r7]
   161e4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   161e8:	ldr	r0, [pc, #-1532]	; 15bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9c>
   161ec:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   161f0:	str	r0, [sp, #40]	; 0x28
   161f4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   161f8:	ldr	r2, [r7]
   161fc:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16200:	mov	r0, #45	; 0x2d
   16204:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16208:	str	r0, [sp, #40]	; 0x28
   1620c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16210:	ldr	r2, [r7]
   16214:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16218:	mov	r0, #43	; 0x2b
   1621c:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16220:	str	r0, [sp, #40]	; 0x28
   16224:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16228:	ldr	r2, [r7]
   1622c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16230:	mov	r0, #37	; 0x25
   16234:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16238:	str	r0, [sp, #40]	; 0x28
   1623c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16240:	ldr	r2, [r7]
   16244:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16248:	mov	r0, #47	; 0x2f
   1624c:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16250:	str	r0, [sp, #40]	; 0x28
   16254:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16258:	ldr	r2, [r7]
   1625c:	ldr	r1, [r7, #-32]	; 0xffffffe0
   16260:	mov	r0, #42	; 0x2a
   16264:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16268:	str	r0, [sp, #40]	; 0x28
   1626c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16270:	ldr	r1, [r7]
   16274:	mov	r0, #126	; 0x7e
   16278:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   1627c:	str	r0, [sp, #40]	; 0x28
   16280:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16284:	ldr	r3, [r7]
   16288:	str	r3, [sp, #40]	; 0x28
   1628c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16290:	ldr	r1, [r7]
   16294:	mov	r0, #33	; 0x21
   16298:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   1629c:	str	r0, [sp, #40]	; 0x28
   162a0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   162a4:	ldr	r1, [r7, #-16]
   162a8:	ldr	r0, [r7, #-48]	; 0xffffffd0
   162ac:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   162b0:	str	r0, [sp, #40]	; 0x28
   162b4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   162b8:	ldr	r3, [r7, #-16]
   162bc:	str	r3, [sp, #40]	; 0x28
   162c0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   162c4:	ldr	r1, [r7]
   162c8:	mov	r0, #45	; 0x2d
   162cc:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   162d0:	str	r0, [sp, #40]	; 0x28
   162d4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   162d8:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   162dc:	ldr	r3, [r7]
   162e0:	str	r3, [sp, #40]	; 0x28
   162e4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   162e8:	ldr	r3, [pc, #-1768]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   162ec:	ldr	r1, [r7, #-16]
   162f0:	ldr	r2, [r3, #96]	; 0x60
   162f4:	str	r1, [r3, #96]	; 0x60
   162f8:	str	r2, [sp, #40]	; 0x28
   162fc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16300:	mov	r0, #8
   16304:	bl	13574 <xmalloc@plt>
   16308:	ldr	r2, [r7, #-32]	; 0xffffffe0
   1630c:	ldr	r3, [r7]
   16310:	str	r0, [sp, #40]	; 0x28
   16314:	str	r2, [r0, #4]
   16318:	str	r3, [r0]
   1631c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16320:	mov	r0, #8
   16324:	bl	13574 <xmalloc@plt>
   16328:	ldr	r2, [r7, #-16]
   1632c:	ldr	r3, [r7]
   16330:	str	r0, [sp, #40]	; 0x28
   16334:	str	r2, [r0, #4]
   16338:	str	r3, [r0]
   1633c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16340:	mov	r3, #0
   16344:	str	r3, [sp, #40]	; 0x28
   16348:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1634c:	mov	r0, #0
   16350:	bl	24c70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11018>
   16354:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16358:	mov	r0, #1
   1635c:	bl	24c70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11018>
   16360:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16364:	ldr	r0, [r7]
   16368:	bl	2d2f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19698>
   1636c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16370:	ldr	r0, [r7]
   16374:	bl	2d2dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19684>
   16378:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1637c:	ldr	r0, [r7]
   16380:	bl	2d2dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19684>
   16384:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16388:	mov	r0, #0
   1638c:	bl	2d2dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19684>
   16390:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16394:	ldr	r0, [r7, #-16]
   16398:	bl	24c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fc4>
   1639c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   163a0:	ldr	r3, [pc, #-1952]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   163a4:	mov	r2, #1
   163a8:	ldr	r1, [r7]
   163ac:	ldr	r0, [r3, #88]	; 0x58
   163b0:	bl	22d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0fc>
   163b4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   163b8:	ldr	r3, [pc, #-1976]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   163bc:	mov	r2, #0
   163c0:	ldr	r1, [r7]
   163c4:	ldr	r0, [r3, #88]	; 0x58
   163c8:	bl	22d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0fc>
   163cc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   163d0:	ldr	r2, [pc, #-2000]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   163d4:	mov	r3, #0
   163d8:	ldr	r1, [pc, #-2048]	; 15be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f88>
   163dc:	ldr	r2, [r2, #96]	; 0x60
   163e0:	ldr	r0, [r7, #-32]	; 0xffffffe0
   163e4:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   163e8:	str	r0, [sp, #40]	; 0x28
   163ec:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   163f0:	ldr	r3, [pc, #-2032]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   163f4:	ldr	r2, [r7]
   163f8:	ldr	r3, [r3, #88]	; 0x58
   163fc:	str	r2, [r3, #24]
   16400:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16404:	ldr	r3, [pc, #-2052]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16408:	ldr	r1, [r7]
   1640c:	ldr	r3, [r3, #88]	; 0x58
   16410:	ldr	r2, [r3, #16]
   16414:	str	r1, [r3, #12]
   16418:	str	r2, [r3, #28]
   1641c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16420:	ldr	r5, [pc, #-2080]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16424:	bl	1993c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ce4>
   16428:	ldr	r6, [r5]
   1642c:	cmp	r6, #19
   16430:	ble	16fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3390>
   16434:	add	r3, r6, #1
   16438:	str	r3, [r5]
   1643c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16440:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   16444:	ldr	r0, [r7]
   16448:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   1644c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16450:	mov	r3, #0
   16454:	str	r3, [sp, #40]	; 0x28
   16458:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1645c:	mov	r3, #0
   16460:	str	r3, [sp, #40]	; 0x28
   16464:	str	r3, [sp, #44]	; 0x2c
   16468:	str	r3, [sp, #48]	; 0x30
   1646c:	str	r3, [sp, #52]	; 0x34
   16470:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16474:	ldr	r3, [r7]
   16478:	str	r3, [sp, #40]	; 0x28
   1647c:	ldr	r2, [r3, #12]
   16480:	cmp	r2, #3
   16484:	bne	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16488:	ldr	r1, [r3]
   1648c:	add	r2, r2, #256	; 0x100
   16490:	cmp	r1, r2
   16494:	bne	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16498:	ldr	r5, [r3, #16]
   1649c:	ldr	r9, [pc, #-2240]	; 15be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8c>
   164a0:	mov	r6, #0
   164a4:	ldr	r1, [r9], #4
   164a8:	mov	r0, r5
   164ac:	bl	13268 <strcmp@plt>
   164b0:	cmp	r0, #0
   164b4:	beq	17004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33ac>
   164b8:	add	r6, r6, #1
   164bc:	cmp	r6, #8
   164c0:	bne	164a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284c>
   164c4:	ldr	r1, [pc, #-2276]	; 15be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f90>
   164c8:	mov	r0, r5
   164cc:	bl	13268 <strcmp@plt>
   164d0:	cmp	r0, #0
   164d4:	beq	17040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33e8>
   164d8:	ldr	r1, [pc, #-2292]	; 15bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f94>
   164dc:	mov	r0, r5
   164e0:	bl	13268 <strcmp@plt>
   164e4:	cmp	r0, #0
   164e8:	bne	17014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33bc>
   164ec:	ldr	r0, [pc, #-2308]	; 15bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f98>
   164f0:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   164f4:	str	r0, [sp, #40]	; 0x28
   164f8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   164fc:	mov	r2, #1
   16500:	ldr	r1, [r7, #-16]
   16504:	ldr	r0, [r7, #-48]	; 0xffffffd0
   16508:	bl	2cc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18fbc>
   1650c:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   16510:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16514:	mov	r3, #1
   16518:	str	r3, [sp, #40]	; 0x28
   1651c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16520:	mov	r1, #1
   16524:	ldr	r0, [r7]
   16528:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   1652c:	ldr	r3, [pc, #-2348]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16530:	str	r0, [r3, #88]	; 0x58
   16534:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16538:	mov	r3, #38	; 0x26
   1653c:	str	r3, [sp, #40]	; 0x28
   16540:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16544:	mov	r3, #276	; 0x114
   16548:	str	r3, [sp, #40]	; 0x28
   1654c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16550:	ldr	r3, [pc, #-2404]	; 15bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9c>
   16554:	str	r3, [sp, #40]	; 0x28
   16558:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1655c:	mov	r3, #47	; 0x2f
   16560:	str	r3, [sp, #40]	; 0x28
   16564:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16568:	mov	r2, #0
   1656c:	mov	r1, r2
   16570:	ldr	r0, [r7]
   16574:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   16578:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1657c:	ldr	r3, [r7]
   16580:	str	r3, [sp, #40]	; 0x28
   16584:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16588:	ldr	r3, [r7]
   1658c:	str	r3, [sp, #40]	; 0x28
   16590:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16594:	ldr	r3, [r7]
   16598:	str	r3, [sp, #40]	; 0x28
   1659c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   165a0:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   165a4:	ldr	r0, [r7]
   165a8:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   165ac:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   165b0:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   165b4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   165b8:	ldr	r0, [r7, #-64]	; 0xffffffc0
   165bc:	bl	2cc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ff8>
   165c0:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   165c4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   165c8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   165cc:	mov	r3, r1
   165d0:	b	165d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2980>
   165d4:	mov	r3, r2
   165d8:	ldr	r2, [r3]
   165dc:	cmp	r2, #0
   165e0:	bne	165d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x297c>
   165e4:	ldr	r0, [pc, #-2532]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   165e8:	ldr	ip, [r7, #-48]	; 0xffffffd0
   165ec:	ldr	r2, [r7, #-128]	; 0xffffff80
   165f0:	str	r1, [sp, #40]	; 0x28
   165f4:	str	ip, [r0, #96]	; 0x60
   165f8:	str	r2, [r3]
   165fc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16600:	ldr	r0, [r7, #-16]
   16604:	bl	24abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e64>
   16608:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1660c:	mov	r3, #42	; 0x2a
   16610:	str	r3, [sp, #40]	; 0x28
   16614:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16618:	mov	r3, #45	; 0x2d
   1661c:	str	r3, [sp, #40]	; 0x28
   16620:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16624:	mov	r3, #43	; 0x2b
   16628:	str	r3, [sp, #40]	; 0x28
   1662c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16630:	mov	r3, #0
   16634:	str	r3, [sp, #40]	; 0x28
   16638:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1663c:	ldr	r3, [r7]
   16640:	str	r3, [sp, #40]	; 0x28
   16644:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16648:	ldr	r2, [pc, #-2648]	; 15bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa0>
   1664c:	mov	r1, #0
   16650:	ldr	r0, [r7]
   16654:	bl	2d0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1946c>
   16658:	str	r0, [sp, #40]	; 0x28
   1665c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16660:	ldr	r3, [r7]
   16664:	str	r3, [sp, #40]	; 0x28
   16668:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1666c:	ldr	r3, [r7]
   16670:	str	r3, [sp, #40]	; 0x28
   16674:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16678:	ldr	r1, [r7, #-16]
   1667c:	ldr	r0, [r7, #-48]	; 0xffffffd0
   16680:	bl	24af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ea0>
   16684:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16688:	ldr	r3, [pc, #-2708]	; 15bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa4>
   1668c:	mov	r2, #1
   16690:	mov	r0, #15
   16694:	str	r2, [r3]
   16698:	bl	24be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f90>
   1669c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166a0:	mov	r0, #15
   166a4:	bl	24be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f90>
   166a8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166ac:	mov	r0, #6
   166b0:	bl	24be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f90>
   166b4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166b8:	ldr	r3, [pc, #-2744]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   166bc:	mov	r2, #0
   166c0:	str	r2, [r3, #84]	; 0x54
   166c4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166c8:	ldr	r3, [pc, #-2760]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   166cc:	mov	r2, #1
   166d0:	str	r2, [r3, #84]	; 0x54
   166d4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166d8:	ldr	r2, [pc, #-2776]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   166dc:	ldr	r3, [r7, #-64]	; 0xffffffc0
   166e0:	ldr	r1, [r7, #-16]
   166e4:	ldr	r2, [r2, #84]	; 0x54
   166e8:	str	r3, [r7, #-36]	; 0xffffffdc
   166ec:	sub	r0, r7, #48	; 0x30
   166f0:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   166f4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   166f8:	ldr	r3, [pc, #-2808]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   166fc:	ldr	r1, [r7, #-16]
   16700:	sub	r0, r7, #48	; 0x30
   16704:	ldr	r2, [r3, #84]	; 0x54
   16708:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   1670c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16710:	ldr	r2, [pc, #-2832]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16714:	ldr	r0, [r7, #-48]	; 0xffffffd0
   16718:	mov	r3, #0
   1671c:	str	r0, [sp, #68]	; 0x44
   16720:	ldr	r2, [r2, #84]	; 0x54
   16724:	ldr	r1, [r7, #-16]
   16728:	add	r0, sp, #56	; 0x38
   1672c:	str	r3, [sp, #56]	; 0x38
   16730:	str	r3, [sp, #60]	; 0x3c
   16734:	str	r3, [sp, #64]	; 0x40
   16738:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   1673c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16740:	ldr	r3, [pc, #-2880]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16744:	ldr	r1, [r7, #-16]
   16748:	mov	r0, #0
   1674c:	ldr	r2, [r3, #84]	; 0x54
   16750:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   16754:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16758:	ldr	r2, [pc, #-2904]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   1675c:	ldr	r1, [r7]
   16760:	mov	r3, #0
   16764:	ldr	ip, [r7, #-16]
   16768:	str	r1, [sp, #56]	; 0x38
   1676c:	ldr	r2, [r2, #84]	; 0x54
   16770:	mov	r1, r3
   16774:	add	r0, sp, #56	; 0x38
   16778:	str	r3, [sp, #60]	; 0x3c
   1677c:	str	r3, [sp, #64]	; 0x40
   16780:	str	ip, [sp, #68]	; 0x44
   16784:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   16788:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1678c:	ldr	r2, [pc, #-2956]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16790:	ldr	r0, [r7]
   16794:	mov	r3, #0
   16798:	str	r0, [sp, #56]	; 0x38
   1679c:	ldr	r2, [r2, #84]	; 0x54
   167a0:	mov	r1, r3
   167a4:	add	r0, sp, #56	; 0x38
   167a8:	str	r3, [sp, #60]	; 0x3c
   167ac:	str	r3, [sp, #64]	; 0x40
   167b0:	str	r3, [sp, #68]	; 0x44
   167b4:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   167b8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   167bc:	mov	r0, #20
   167c0:	bl	13574 <xmalloc@plt>
   167c4:	mov	lr, #0
   167c8:	mov	ip, r0
   167cc:	ldm	r7, {r0, r1, r2, r3}
   167d0:	str	ip, [sp, #40]	; 0x28
   167d4:	str	lr, [ip], #4
   167d8:	stm	ip, {r0, r1, r2, r3}
   167dc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   167e0:	mov	r0, #20
   167e4:	bl	13574 <xmalloc@plt>
   167e8:	ldr	lr, [r7, #-32]	; 0xffffffe0
   167ec:	mov	ip, r0
   167f0:	ldm	r7, {r0, r1, r2, r3}
   167f4:	str	ip, [sp, #40]	; 0x28
   167f8:	str	lr, [ip], #4
   167fc:	stm	ip, {r0, r1, r2, r3}
   16800:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16804:	mov	r0, #8
   16808:	bl	13574 <xmalloc@plt>
   1680c:	ldr	r2, [r7]
   16810:	mov	r3, #0
   16814:	str	r0, [sp, #40]	; 0x28
   16818:	strd	r2, [r0]
   1681c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16820:	mov	r0, #8
   16824:	bl	13574 <xmalloc@plt>
   16828:	ldr	r2, [r7]
   1682c:	ldr	r3, [r7, #-16]
   16830:	str	r0, [sp, #40]	; 0x28
   16834:	strd	r2, [r0]
   16838:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1683c:	ldr	r3, [pc, #-3132]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16840:	mov	r2, #2
   16844:	str	r2, [r3, #92]	; 0x5c
   16848:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1684c:	ldr	r3, [r7, #-16]
   16850:	str	r3, [sp, #40]	; 0x28
   16854:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16858:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   1685c:	ldr	r0, [r7]
   16860:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   16864:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16868:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   1686c:	mov	r2, #0
   16870:	ldr	r1, [r7]
   16874:	ldr	r0, [pc, #-3196]	; 15c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa8>
   16878:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   1687c:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   16880:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16884:	mov	r2, #0
   16888:	mov	r1, r2
   1688c:	ldr	r0, [r7]
   16890:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   16894:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16898:	mov	r2, #0
   1689c:	mov	r1, r2
   168a0:	ldr	r0, [r7]
   168a4:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   168a8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   168ac:	mov	r2, #0
   168b0:	mov	r1, #4
   168b4:	ldr	r0, [r7]
   168b8:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   168bc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   168c0:	mov	r2, #0
   168c4:	mov	r1, #4
   168c8:	ldr	r0, [r7]
   168cc:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   168d0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   168d4:	ldr	r3, [pc, #-3288]	; 15c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fac>
   168d8:	str	r3, [sp, #40]	; 0x28
   168dc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   168e0:	ldr	r3, [r7]
   168e4:	str	r3, [sp, #40]	; 0x28
   168e8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   168ec:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   168f0:	ldr	r1, [r7, #-16]
   168f4:	ldr	r0, [r7, #-48]	; 0xffffffd0
   168f8:	bl	2cc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ff8>
   168fc:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   16900:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16904:	ldr	r3, [pc, #-3332]	; 15c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   16908:	ldr	r1, [r7, #-16]
   1690c:	ldr	r2, [r3, #96]	; 0x60
   16910:	str	r1, [r3, #96]	; 0x60
   16914:	str	r2, [sp, #40]	; 0x28
   16918:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1691c:	mov	r1, #0
   16920:	ldr	r0, [r7, #-16]
   16924:	bl	24a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10db4>
   16928:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1692c:	ldr	r1, [pc, #-3368]	; 15c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb4>
   16930:	ldr	r2, [r7, #-32]	; 0xffffffe0
   16934:	ldrb	r3, [r1]
   16938:	and	r2, r2, #1
   1693c:	bic	r3, r3, #128	; 0x80
   16940:	orr	r3, r3, r2, lsl #7
   16944:	strb	r3, [r1]
   16948:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   1694c:	ldr	r1, [r7, #-16]
   16950:	mov	r0, #0
   16954:	bl	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d48>
   16958:	str	r0, [sp, #40]	; 0x28
   1695c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16960:	ldr	r1, [pc, #-3420]	; 15c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb4>
   16964:	ldr	r2, [r7, #-32]	; 0xffffffe0
   16968:	ldrb	r3, [r1]
   1696c:	and	r2, r2, #1
   16970:	bic	r3, r3, #128	; 0x80
   16974:	orr	r3, r3, r2, lsl #7
   16978:	strb	r3, [r1]
   1697c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16980:	mov	r0, #16
   16984:	bl	13574 <xmalloc@plt>
   16988:	ldr	r2, [r7, #-16]
   1698c:	mov	r3, #0
   16990:	str	r0, [sp, #40]	; 0x28
   16994:	strd	r2, [r0, #8]
   16998:	str	r3, [r0, #4]
   1699c:	str	r3, [r0]
   169a0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   169a4:	mov	r0, #16
   169a8:	bl	13574 <xmalloc@plt>
   169ac:	ldr	r3, [r7]
   169b0:	ldrb	r2, [r3]
   169b4:	cmp	r2, #33	; 0x21
   169b8:	addeq	r3, r3, #1
   169bc:	moveq	r2, #1
   169c0:	movne	r2, #0
   169c4:	strd	r2, [r0]
   169c8:	ldr	r2, [r7, #-32]	; 0xffffffe0
   169cc:	mov	r3, #0
   169d0:	str	r0, [sp, #40]	; 0x28
   169d4:	str	r2, [r0, #12]
   169d8:	str	r3, [r0, #8]
   169dc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   169e0:	mov	r0, #16
   169e4:	bl	13574 <xmalloc@plt>
   169e8:	ldr	r3, [r7]
   169ec:	ldrb	r2, [r3]
   169f0:	cmp	r2, #33	; 0x21
   169f4:	addeq	r3, r3, #1
   169f8:	moveq	r2, #1
   169fc:	movne	r2, #0
   16a00:	strd	r2, [r0]
   16a04:	mov	r3, #0
   16a08:	str	r0, [sp, #40]	; 0x28
   16a0c:	str	r3, [r0, #8]
   16a10:	str	r3, [r0, #12]
   16a14:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16a18:	ldmdb	r7, {r0, r1, r2, r3}
   16a1c:	add	lr, sp, #40	; 0x28
   16a20:	mov	ip, #6
   16a24:	stm	lr, {r0, r1, r2, r3}
   16a28:	str	ip, [sp, #48]	; 0x30
   16a2c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16a30:	sub	r3, r7, #32
   16a34:	add	lr, sp, #40	; 0x28
   16a38:	ldm	r3, {r0, r1, r2, r3}
   16a3c:	mov	ip, #2
   16a40:	stm	lr, {r0, r1, r2, r3}
   16a44:	str	ip, [sp, #48]	; 0x30
   16a48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16a4c:	sub	r3, r7, #32
   16a50:	add	lr, sp, #40	; 0x28
   16a54:	ldm	r3, {r0, r1, r2, r3}
   16a58:	mov	ip, #4
   16a5c:	stm	lr, {r0, r1, r2, r3}
   16a60:	str	ip, [sp, #48]	; 0x30
   16a64:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16a68:	sub	r3, r7, #32
   16a6c:	add	lr, sp, #40	; 0x28
   16a70:	ldm	r3, {r0, r1, r2, r3}
   16a74:	mov	ip, #1
   16a78:	stm	lr, {r0, r1, r2, r3}
   16a7c:	str	ip, [sp, #48]	; 0x30
   16a80:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16a84:	sub	r3, r7, #32
   16a88:	add	lr, sp, #40	; 0x28
   16a8c:	ldm	r3, {r0, r1, r2, r3}
   16a90:	mov	ip, #3
   16a94:	stm	lr, {r0, r1, r2, r3}
   16a98:	str	ip, [sp, #48]	; 0x30
   16a9c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16aa0:	ldmdb	r7, {r0, r1, r2, r3}
   16aa4:	add	lr, sp, #40	; 0x28
   16aa8:	mov	ip, #5
   16aac:	stm	lr, {r0, r1, r2, r3}
   16ab0:	str	ip, [sp, #48]	; 0x30
   16ab4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ab8:	ldmdb	r7, {r0, r1, r2, r3}
   16abc:	add	lr, sp, #40	; 0x28
   16ac0:	mov	ip, #2
   16ac4:	stm	lr, {r0, r1, r2, r3}
   16ac8:	str	ip, [sp, #48]	; 0x30
   16acc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ad0:	ldmdb	r7, {r0, r1, r2, r3}
   16ad4:	add	lr, sp, #40	; 0x28
   16ad8:	mov	ip, #1
   16adc:	stm	lr, {r0, r1, r2, r3}
   16ae0:	str	ip, [sp, #48]	; 0x30
   16ae4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ae8:	ldmdb	r7, {r0, r1, r2, r3}
   16aec:	add	lr, sp, #40	; 0x28
   16af0:	mov	ip, #5
   16af4:	stm	lr, {r0, r1, r2, r3}
   16af8:	str	ip, [sp, #48]	; 0x30
   16afc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b00:	ldmdb	r7, {r0, r1, r2, r3}
   16b04:	add	lr, sp, #40	; 0x28
   16b08:	mov	ip, #1
   16b0c:	stm	lr, {r0, r1, r2, r3}
   16b10:	str	ip, [sp, #48]	; 0x30
   16b14:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b18:	ldr	r3, [r7]
   16b1c:	ldr	r2, [r7, #-32]	; 0xffffffe0
   16b20:	str	r3, [sp, #40]	; 0x28
   16b24:	mov	r3, #0
   16b28:	str	r3, [sp, #52]	; 0x34
   16b2c:	strd	r2, [sp, #44]	; 0x2c
   16b30:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b34:	ldr	r2, [r7]
   16b38:	mov	r3, #0
   16b3c:	str	r2, [sp, #40]	; 0x28
   16b40:	str	r3, [sp, #48]	; 0x30
   16b44:	str	r3, [sp, #44]	; 0x2c
   16b48:	str	r3, [sp, #52]	; 0x34
   16b4c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b50:	ldr	r3, [pc, #-3912]	; 15c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb8>
   16b54:	str	r3, [sp, #40]	; 0x28
   16b58:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b5c:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   16b60:	ldr	r0, [r7]
   16b64:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   16b68:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b6c:	bl	19908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5cb0>
   16b70:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b74:	mov	r3, #0
   16b78:	str	r3, [sp, #40]	; 0x28
   16b7c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b80:	ldr	r0, [r7]
   16b84:	bl	28164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1450c>
   16b88:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b8c:	bl	199d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d80>
   16b90:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16b94:	mov	r1, #0
   16b98:	ldr	r0, [r7]
   16b9c:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   16ba0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ba4:	mov	r1, #0
   16ba8:	ldr	r0, [r7]
   16bac:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   16bb0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16bb4:	mov	r1, #0
   16bb8:	ldr	r0, [r7]
   16bbc:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   16bc0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16bc4:	ldr	r3, [pc, #-4024]	; 15c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbc>
   16bc8:	mov	r2, #1
   16bcc:	str	r2, [r3]
   16bd0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16bd4:	mov	r1, #0
   16bd8:	ldr	r0, [r7, #-16]
   16bdc:	bl	2f924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bccc>
   16be0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16be4:	mov	r3, #1
   16be8:	ldr	r2, [r7, #-16]
   16bec:	ldr	r1, [r7, #-48]	; 0xffffffd0
   16bf0:	ldr	r0, [r7, #-80]	; 0xffffffb0
   16bf4:	bl	250b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11458>
   16bf8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16bfc:	mov	r2, #0
   16c00:	mov	r1, r2
   16c04:	mov	r3, #1
   16c08:	ldr	r0, [r7, #-16]
   16c0c:	bl	250b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11458>
   16c10:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c14:	mov	r1, #1
   16c18:	ldr	r0, [r7, #-16]
   16c1c:	bl	23f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1033c>
   16c20:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c24:	mov	r1, #0
   16c28:	ldr	r0, [r7, #-16]
   16c2c:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   16c30:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c34:	ldr	r0, [r7, #-16]
   16c38:	bl	24a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e0c>
   16c3c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c40:	ldr	r2, [pc, #1032]	; 17050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33f8>
   16c44:	mov	r3, #0
   16c48:	mov	r0, r3
   16c4c:	ldr	r2, [r2, #96]	; 0x60
   16c50:	ldr	r1, [pc, #1020]	; 17054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33fc>
   16c54:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   16c58:	str	r0, [sp, #40]	; 0x28
   16c5c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c60:	mov	r2, #0
   16c64:	mov	r1, #4
   16c68:	ldr	r0, [r7]
   16c6c:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   16c70:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c74:	ldr	r0, [r7, #-16]
   16c78:	bl	27e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141f4>
   16c7c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c80:	bl	198a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c48>
   16c84:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c88:	ldr	r0, [r7, #-16]
   16c8c:	bl	27f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142dc>
   16c90:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16c94:	ldr	r1, [r7, #-16]
   16c98:	ldr	r0, [r7, #-48]	; 0xffffffd0
   16c9c:	bl	20f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd31c>
   16ca0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ca4:	mov	r1, #1
   16ca8:	ldr	r0, [r7]
   16cac:	bl	25118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114c0>
   16cb0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16cb4:	mov	r1, #0
   16cb8:	ldr	r0, [r7]
   16cbc:	bl	25118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114c0>
   16cc0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16cc4:	ldr	r0, [r7, #-16]
   16cc8:	bl	25394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1173c>
   16ccc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16cd0:	ldr	r0, [r7, #-16]
   16cd4:	bl	2534c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116f4>
   16cd8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16cdc:	ldr	r5, [pc, #876]	; 17050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x33f8>
   16ce0:	bl	1993c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ce4>
   16ce4:	ldr	r6, [r5]
   16ce8:	cmp	r6, #19
   16cec:	ble	16f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x332c>
   16cf0:	add	r3, r6, #1
   16cf4:	str	r3, [r5]
   16cf8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16cfc:	bl	1986c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c14>
   16d00:	ldr	r0, [r7]
   16d04:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   16d08:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d0c:	ldr	r0, [r7, #-16]
   16d10:	bl	24aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e48>
   16d14:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d18:	bl	251dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11584>
   16d1c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d20:	bl	25174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1151c>
   16d24:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d28:	ldr	r2, [pc, #808]	; 17058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3400>
   16d2c:	ldrb	r3, [r2, #7]
   16d30:	orr	r3, r3, #32
   16d34:	strb	r3, [r2, #7]
   16d38:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d3c:	ldr	r3, [pc, #792]	; 1705c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3404>
   16d40:	mov	r2, #1
   16d44:	str	r2, [r3, #44]	; 0x2c
   16d48:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d4c:	ldr	r0, [r7]
   16d50:	bl	284d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14878>
   16d54:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d58:	mov	r1, #0
   16d5c:	ldr	r0, [r7]
   16d60:	bl	24a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10db4>
   16d64:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d68:	ldr	r0, [r7]
   16d6c:	bl	28164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1450c>
   16d70:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d74:	ldr	r0, [r7]
   16d78:	bl	284b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1485c>
   16d7c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d80:	ldr	r0, [r7]
   16d84:	bl	284b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1485c>
   16d88:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d8c:	ldr	r0, [r7]
   16d90:	bl	284d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14878>
   16d94:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16d98:	ldr	r0, [r7]
   16d9c:	bl	2867c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a24>
   16da0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16da4:	ldr	r0, [r7]
   16da8:	bl	281a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1454c>
   16dac:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16db0:	ldr	r2, [r7]
   16db4:	mov	r1, #0
   16db8:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16dbc:	bl	28510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148b8>
   16dc0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16dc4:	mov	r2, #0
   16dc8:	ldr	r1, [r7]
   16dcc:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16dd0:	bl	28510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148b8>
   16dd4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16dd8:	ldr	r0, [r7]
   16ddc:	bl	28584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1492c>
   16de0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16de4:	ldr	r1, [r7]
   16de8:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16dec:	bl	28638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149e0>
   16df0:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16df4:	ldr	r1, [r7]
   16df8:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16dfc:	bl	28638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149e0>
   16e00:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e04:	ldr	r1, [r7]
   16e08:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e0c:	bl	285f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1499c>
   16e10:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e14:	ldr	r1, [r7]
   16e18:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e1c:	bl	285f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1499c>
   16e20:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e24:	ldr	r1, [r7]
   16e28:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e2c:	bl	28120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144c8>
   16e30:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e34:	ldr	r1, [r7]
   16e38:	ldr	r0, [r7, #-16]
   16e3c:	bl	28120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144c8>
   16e40:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e44:	ldr	r1, [r7]
   16e48:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e4c:	bl	28120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144c8>
   16e50:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e54:	ldr	r0, [r7]
   16e58:	bl	2858c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14934>
   16e5c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e60:	ldr	r1, [r7]
   16e64:	ldr	r0, [r7, #-16]
   16e68:	bl	285e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14988>
   16e6c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e70:	ldr	r1, [r7]
   16e74:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e78:	bl	285e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14988>
   16e7c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e80:	ldr	r1, [r7]
   16e84:	ldr	r0, [r7, #-32]	; 0xffffffe0
   16e88:	bl	285e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14988>
   16e8c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16e90:	ldr	r3, [pc, #456]	; 17060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3408>
   16e94:	ldr	r2, [pc, #456]	; 17064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x340c>
   16e98:	str	r2, [r3, #76]	; 0x4c
   16e9c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ea0:	ldr	r2, [r7, #-16]
   16ea4:	ldr	r1, [r7, #-48]	; 0xffffffd0
   16ea8:	ldr	r0, [pc, #440]	; 17068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3410>
   16eac:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16eb0:	str	r0, [sp, #40]	; 0x28
   16eb4:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16eb8:	ldr	r1, [r7]
   16ebc:	ldr	r0, [pc, #424]	; 1706c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3414>
   16ec0:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16ec4:	str	r0, [sp, #40]	; 0x28
   16ec8:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ecc:	ldr	r1, [r7, #-16]
   16ed0:	ldr	r0, [pc, #408]	; 17070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3418>
   16ed4:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   16ed8:	str	r0, [sp, #40]	; 0x28
   16edc:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16ee0:	ldr	r1, [r7, #-48]	; 0xffffffd0
   16ee4:	ldr	r0, [pc, #384]	; 1706c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3414>
   16ee8:	ldr	r5, [r7, #-16]
   16eec:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   16ef0:	mov	r1, r5
   16ef4:	mov	r2, r0
   16ef8:	ldr	r0, [pc, #372]	; 17074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x341c>
   16efc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   16f00:	str	r0, [sp, #40]	; 0x28
   16f04:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16f08:	ldr	r1, [r7, #-16]
   16f0c:	ldr	r0, [pc, #356]	; 17078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3420>
   16f10:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   16f14:	str	r0, [sp, #40]	; 0x28
   16f18:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16f1c:	ldr	r3, [pc, #344]	; 1707c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3424>
   16f20:	mov	fp, r6
   16f24:	mov	r5, #1
   16f28:	ldr	r3, [r3]
   16f2c:	cmn	r3, #2
   16f30:	bne	155c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196c>
   16f34:	b	155e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198c>
   16f38:	mov	fp, r6
   16f3c:	mov	r5, #1
   16f40:	b	155b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195c>
   16f44:	mov	r0, r5
   16f48:	ldr	r1, [pc, #304]	; 17080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3428>
   16f4c:	bl	13268 <strcmp@plt>
   16f50:	cmp	r0, #0
   16f54:	bne	16f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x330c>
   16f58:	ldr	r6, [r7, #-16]
   16f5c:	cmp	r6, #0
   16f60:	bne	15384 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172c>
   16f64:	mov	r2, #5
   16f68:	ldr	r1, [pc, #276]	; 17084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x342c>
   16f6c:	mov	r0, #0
   16f70:	bl	13460 <dcgettext@plt>
   16f74:	ldr	r2, [r7, #-32]	; 0xffffffe0
   16f78:	mov	r1, #0
   16f7c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   16f80:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16f84:	mov	r2, #5
   16f88:	ldr	r1, [pc, #248]	; 17088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3430>
   16f8c:	mov	r0, #0
   16f90:	bl	13460 <dcgettext@plt>
   16f94:	add	r3, r5, r6, lsl #2
   16f98:	str	r0, [r3, #4]
   16f9c:	b	16cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3098>
   16fa0:	mov	r2, #5
   16fa4:	ldr	r1, [pc, #224]	; 1708c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3434>
   16fa8:	mov	r0, #0
   16fac:	bl	13460 <dcgettext@plt>
   16fb0:	add	r3, r5, r6, lsl #2
   16fb4:	str	r0, [r3, #4]
   16fb8:	b	15cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2058>
   16fbc:	ldr	r1, [pc, #204]	; 17090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3438>
   16fc0:	mov	r0, r5
   16fc4:	bl	13268 <strcmp@plt>
   16fc8:	cmp	r0, #0
   16fcc:	bne	16f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x32ec>
   16fd0:	ldr	r6, [r7, #-16]
   16fd4:	cmp	r6, #0
   16fd8:	moveq	r3, #1
   16fdc:	streq	r3, [sp, #44]	; 0x2c
   16fe0:	beq	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   16fe4:	b	15370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1718>
   16fe8:	mov	r2, #5
   16fec:	ldr	r1, [pc, #160]	; 17094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x343c>
   16ff0:	mov	r0, #0
   16ff4:	bl	13460 <dcgettext@plt>
   16ff8:	add	r3, r5, r6, lsl #2
   16ffc:	str	r0, [r3, #4]
   17000:	b	16434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dc>
   17004:	mov	r0, r6
   17008:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   1700c:	str	r0, [sp, #40]	; 0x28
   17010:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   17014:	mov	r2, #5
   17018:	ldr	r1, [pc, #120]	; 17098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3440>
   1701c:	mov	r0, #0
   17020:	bl	13460 <dcgettext@plt>
   17024:	mov	r2, r5
   17028:	mov	r1, #0
   1702c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   17030:	mov	r0, #0
   17034:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   17038:	str	r0, [sp, #40]	; 0x28
   1703c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   17040:	ldr	r0, [pc, #84]	; 1709c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3444>
   17044:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   17048:	str	r0, [sp, #40]	; 0x28
   1704c:	b	15388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1730>
   17050:	andeq	r7, ip, r0, lsl sl
   17054:	andeq	r3, r4, ip, lsr r9
   17058:	andeq	r8, ip, ip, lsl #1
   1705c:	andeq	r8, ip, r8, lsl r1
   17060:	andeq	r8, ip, r4, ror r1
   17064:	andeq	r3, r4, ip, ror r8
   17068:	andeq	r0, r0, r5, asr #2
   1706c:	andeq	r0, r0, r3, lsl #2
   17070:	andeq	r0, r0, r7, lsl r1
   17074:	andeq	r0, r0, r1, lsr r1
   17078:	andeq	r0, r0, r6, lsr #2
   1707c:	andeq	r8, ip, r8, lsl r0
   17080:	strdeq	r3, [r4], -r4
   17084:	strdeq	r3, [r4], -ip
   17088:	andeq	r3, r4, r4, lsr #18
   1708c:	andeq	r3, r4, r0, lsr r8
   17090:	andeq	r3, r4, ip, ror #17
   17094:	andeq	lr, r4, r4, asr fp
   17098:	andeq	r3, r4, ip, lsr #17
   1709c:	ldrbtvs	lr, [r4], #-1360	; 0xfffffab0
   170a0:	ldr	r2, [pc, #236]	; 17194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x353c>
   170a4:	ldr	r3, [pc, #236]	; 17198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3540>
   170a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170ac:	sub	sp, sp, #12
   170b0:	ldr	r1, [r2, #4]
   170b4:	ldr	r9, [r3]
   170b8:	str	r1, [sp, #4]
   170bc:	cmp	r9, r1
   170c0:	ldr	r0, [r2]
   170c4:	bcs	1718c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3534>
   170c8:	mov	r3, r2
   170cc:	ldr	r2, [pc, #200]	; 1719c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3544>
   170d0:	ldr	r4, [pc, #200]	; 171a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3548>
   170d4:	add	r7, r2, #3888	; 0xf30
   170d8:	ldr	r6, [pc, #196]	; 171a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x354c>
   170dc:	ldr	r8, [pc, #196]	; 171a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3550>
   170e0:	ldr	fp, [r3, #8]
   170e4:	add	r7, r7, #4
   170e8:	ldr	r3, [r3, #12]
   170ec:	sub	r5, r4, #504	; 0x1f8
   170f0:	mov	sl, #0
   170f4:	str	r3, [sp]
   170f8:	mov	r3, r9
   170fc:	ldrb	r2, [r9], #1
   17100:	ldr	ip, [pc, #164]	; 171ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3554>
   17104:	cmp	r2, #0
   17108:	moveq	r1, #1
   1710c:	ldrne	r1, [pc, #136]	; 1719c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3544>
   17110:	ldrbne	r1, [r1, r2]
   17114:	lsl	r2, r0, #1
   17118:	ldrsh	ip, [ip, r2]
   1711c:	cmp	ip, #0
   17120:	ldr	ip, [sp]
   17124:	movne	ip, r3
   17128:	str	ip, [sp]
   1712c:	movne	fp, r0
   17130:	movne	sl, #1
   17134:	b	17148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x34f0>
   17138:	ldrsh	r0, [r7, r2]
   1713c:	cmp	r0, r8
   17140:	lsl	r2, r0, #1
   17144:	ldrbgt	r1, [ip, #-588]	; 0xfffffdb4
   17148:	ldrh	r3, [r5, r2]
   1714c:	add	ip, r4, r1
   17150:	add	r3, r3, r1
   17154:	lsl	r3, r3, #1
   17158:	ldrsh	lr, [r6, r3]
   1715c:	cmp	lr, r0
   17160:	bne	17138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x34e0>
   17164:	ldr	r2, [sp, #4]
   17168:	cmp	r2, r9
   1716c:	ldr	r2, [pc, #60]	; 171b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3558>
   17170:	ldrh	r0, [r2, r3]
   17174:	bne	170f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x34a0>
   17178:	cmp	sl, #0
   1717c:	ldrne	r3, [pc, #16]	; 17194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x353c>
   17180:	ldrne	r2, [sp]
   17184:	strne	fp, [r3, #8]
   17188:	strne	r2, [r3, #12]
   1718c:	add	sp, sp, #12
   17190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17194:	andeq	r7, ip, r4, ror sl
   17198:	andeq	r8, ip, ip, lsr #32
   1719c:	andeq	r4, r4, r8, lsr r6
   171a0:	andeq	r6, r4, r0, lsr r6
   171a4:	strdeq	r7, [r4], -r0
   171a8:	andeq	r0, r0, r8, lsl r7
   171ac:	andeq	r4, r4, r8, lsr r7
   171b0:	andeq	r8, r4, r4, ror sl
   171b4:	ldr	r3, [pc, #164]	; 17260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3608>
   171b8:	push	{r4, r5, lr}
   171bc:	mov	r5, r0
   171c0:	ldr	r3, [r3]
   171c4:	sub	sp, sp, #12
   171c8:	cmp	r3, #0
   171cc:	mov	r4, r1
   171d0:	bne	17214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x35bc>
   171d4:	ldrb	r2, [r4]
   171d8:	ldr	r1, [pc, #132]	; 17264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x360c>
   171dc:	lsl	r3, r2, #1
   171e0:	ldrh	r3, [r1, r3]
   171e4:	tst	r3, #16
   171e8:	beq	1724c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x35f4>
   171ec:	mov	r2, #5
   171f0:	ldr	r1, [pc, #112]	; 17268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3610>
   171f4:	mov	r0, #0
   171f8:	bl	13460 <dcgettext@plt>
   171fc:	mov	r3, r5
   17200:	mov	r2, r4
   17204:	mov	r1, #0
   17208:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1720c:	add	sp, sp, #12
   17210:	pop	{r4, r5, pc}
   17214:	mov	r0, #12
   17218:	bl	13580 <bfd_set_error@plt>
   1721c:	mov	r2, #5
   17220:	ldr	r1, [pc, #68]	; 1726c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3614>
   17224:	mov	r0, #0
   17228:	bl	13460 <dcgettext@plt>
   1722c:	ldr	r3, [pc, #60]	; 17270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3618>
   17230:	ldr	r2, [r3, #16]
   17234:	cmp	r2, #0
   17238:	subne	r2, r2, #1
   1723c:	add	r3, r3, r2, lsl #2
   17240:	ldr	r1, [r3, #20]
   17244:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   17248:	b	171d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x357c>
   1724c:	mov	r0, sp
   17250:	ldr	r1, [pc, #28]	; 17274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x361c>
   17254:	bl	13a00 <sprintf@plt>
   17258:	mov	r4, sp
   1725c:	b	171ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3594>
   17260:	andeq	r7, ip, r0, asr sp
   17264:	andeq	r6, ip, r0, lsl #24
   17268:	andeq	sl, r4, r0, lsr #4
   1726c:	strdeq	sl, [r4], -r8
   17270:	andeq	r7, ip, r4, ror sl
   17274:	andeq	sl, r4, r8, lsl r2
   17278:	ldr	r3, [pc, #24]	; 17298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3640>
   1727c:	mov	r2, r0
   17280:	push	{r4, lr}
   17284:	ldr	r1, [pc, #16]	; 1729c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3644>
   17288:	ldr	r0, [r3]
   1728c:	bl	1382c <fprintf@plt>
   17290:	mov	r0, #2
   17294:	bl	13790 <exit@plt>
   17298:	andeq	r7, ip, r8, asr #14
   1729c:	ldrdeq	r2, [r5], -ip
   172a0:	push	{r4, r5, r6, lr}
   172a4:	ldr	r4, [pc, #136]	; 17334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36dc>
   172a8:	ldr	r6, [r4, #60]	; 0x3c
   172ac:	cmp	r6, #0
   172b0:	beq	17304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36ac>
   172b4:	ldr	r3, [r4, #64]	; 0x40
   172b8:	ldr	r2, [r4, #68]	; 0x44
   172bc:	sub	r1, r3, #1
   172c0:	cmp	r1, r2
   172c4:	pophi	{r4, r5, r6, pc}
   172c8:	add	r5, r3, #8
   172cc:	mov	r0, r6
   172d0:	lsl	r6, r5, #2
   172d4:	mov	r1, r6
   172d8:	bl	134d8 <realloc@plt>
   172dc:	cmp	r0, #0
   172e0:	str	r0, [r4, #60]	; 0x3c
   172e4:	beq	1732c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36d4>
   172e8:	sub	r6, r6, #32
   172ec:	add	r0, r0, r6
   172f0:	mov	r2, #32
   172f4:	mov	r1, #0
   172f8:	bl	138a4 <memset@plt>
   172fc:	str	r5, [r4, #64]	; 0x40
   17300:	pop	{r4, r5, r6, pc}
   17304:	mov	r1, #1
   17308:	mov	r0, #4
   1730c:	bl	131e4 <calloc@plt>
   17310:	cmp	r0, #0
   17314:	str	r0, [r4, #60]	; 0x3c
   17318:	beq	1732c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36d4>
   1731c:	mov	r3, #1
   17320:	str	r6, [r4, #68]	; 0x44
   17324:	str	r3, [r4, #64]	; 0x40
   17328:	pop	{r4, r5, r6, pc}
   1732c:	ldr	r0, [pc, #4]	; 17338 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36e0>
   17330:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   17334:	andeq	r7, ip, r4, ror sl
   17338:	andeq	sl, r4, ip, asr #4
   1733c:	push	{r4, r5, r6, lr}
   17340:	mov	r4, r0
   17344:	bl	172a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3648>
   17348:	ldr	r3, [pc, #132]	; 173d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x377c>
   1734c:	ldr	r2, [r3, #60]	; 0x3c
   17350:	cmp	r2, #0
   17354:	beq	173c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3768>
   17358:	ldr	r1, [r3, #68]	; 0x44
   1735c:	ldr	ip, [r2, r1, lsl #2]
   17360:	add	r0, r2, r1, lsl #2
   17364:	cmp	ip, r4
   17368:	popeq	{r4, r5, r6, pc}
   1736c:	cmp	ip, #0
   17370:	beq	17390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3738>
   17374:	ldr	ip, [r3, #4]
   17378:	ldrb	r5, [r3, #72]	; 0x48
   1737c:	ldr	lr, [r3, #76]	; 0x4c
   17380:	strb	r5, [ip]
   17384:	ldr	r2, [r2, r1, lsl #2]
   17388:	str	ip, [r2, #8]
   1738c:	str	lr, [r2, #16]
   17390:	ldr	r2, [r4, #8]
   17394:	ldr	ip, [pc, #60]	; 173d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3780>
   17398:	ldr	r1, [r4]
   1739c:	str	r4, [r0]
   173a0:	str	r1, [r3, #80]	; 0x50
   173a4:	str	r2, [ip]
   173a8:	ldrb	r0, [r2]
   173ac:	ldr	r1, [r4, #16]
   173b0:	str	r2, [r3, #4]
   173b4:	strb	r0, [r3, #72]	; 0x48
   173b8:	str	r1, [r3, #76]	; 0x4c
   173bc:	pop	{r4, r5, r6, pc}
   173c0:	cmp	r4, #0
   173c4:	popeq	{r4, r5, r6, pc}
   173c8:	ldr	r0, [r3, #68]	; 0x44
   173cc:	lsl	r0, r0, #2
   173d0:	b	17390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3738>
   173d4:	andeq	r7, ip, r4, ror sl
   173d8:	andeq	r8, ip, ip, lsr #32
   173dc:	push	{r4, lr}
   173e0:	subs	r4, r0, #0
   173e4:	popeq	{r4, pc}
   173e8:	ldr	r2, [pc, #72]	; 17438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x37e0>
   173ec:	ldr	r3, [r2, #60]	; 0x3c
   173f0:	cmp	r3, #0
   173f4:	beq	1740c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x37b4>
   173f8:	ldr	r2, [r2, #68]	; 0x44
   173fc:	ldr	r1, [r3, r2, lsl #2]
   17400:	cmp	r4, r1
   17404:	moveq	r1, #0
   17408:	streq	r1, [r3, r2, lsl #2]
   1740c:	ldr	r3, [r4, #20]
   17410:	cmp	r3, #0
   17414:	bne	17424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x37cc>
   17418:	mov	r0, r4
   1741c:	pop	{r4, lr}
   17420:	b	13364 <free@plt>
   17424:	ldr	r0, [r4, #4]
   17428:	bl	13364 <free@plt>
   1742c:	mov	r0, r4
   17430:	pop	{r4, lr}
   17434:	b	13364 <free@plt>
   17438:	andeq	r7, ip, r4, ror sl
   1743c:	cmp	r0, #0
   17440:	bxeq	lr
   17444:	ldr	r1, [r0, #4]
   17448:	ldr	r2, [pc, #108]	; 174bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3864>
   1744c:	mov	r3, #0
   17450:	push	{lr}		; (str lr, [sp, #-4]!)
   17454:	mov	lr, #1
   17458:	str	r3, [r0, #16]
   1745c:	strb	r3, [r1]
   17460:	ldr	r1, [r0, #4]
   17464:	ldr	ip, [r2, #60]	; 0x3c
   17468:	strb	r3, [r1, #1]
   1746c:	cmp	ip, r3
   17470:	ldr	r1, [r0, #4]
   17474:	str	r3, [r0, #44]	; 0x2c
   17478:	str	r1, [r0, #8]
   1747c:	str	lr, [r0, #28]
   17480:	popeq	{pc}		; (ldreq pc, [sp], #4)
   17484:	ldr	r3, [r2, #68]	; 0x44
   17488:	ldr	r3, [ip, r3, lsl #2]
   1748c:	cmp	r0, r3
   17490:	popne	{pc}		; (ldrne pc, [sp], #4)
   17494:	ldr	ip, [pc, #36]	; 174c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3868>
   17498:	ldr	r3, [r0]
   1749c:	ldr	r0, [r0, #16]
   174a0:	str	r1, [ip]
   174a4:	str	r3, [r2, #80]	; 0x50
   174a8:	ldrb	r3, [r1]
   174ac:	str	r1, [r2, #4]
   174b0:	str	r0, [r2, #76]	; 0x4c
   174b4:	strb	r3, [r2, #72]	; 0x48
   174b8:	pop	{pc}		; (ldr pc, [sp], #4)
   174bc:	andeq	r7, ip, r4, ror sl
   174c0:	andeq	r8, ip, ip, lsr #32
   174c4:	push	{r4, r5, r6, r7, r8, lr}
   174c8:	mov	r4, r0
   174cc:	mov	r5, r1
   174d0:	bl	13874 <__errno_location@plt>
   174d4:	mov	r6, r0
   174d8:	mov	r0, r4
   174dc:	ldr	r7, [r6]
   174e0:	bl	1743c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x37e4>
   174e4:	ldr	r2, [pc, #92]	; 17548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38f0>
   174e8:	mov	r1, #1
   174ec:	str	r5, [r4]
   174f0:	ldr	r3, [r2, #60]	; 0x3c
   174f4:	str	r1, [r4, #40]	; 0x28
   174f8:	cmp	r3, #0
   174fc:	beq	17510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38b8>
   17500:	ldr	r2, [r2, #68]	; 0x44
   17504:	ldr	r3, [r3, r2, lsl #2]
   17508:	cmp	r4, r3
   1750c:	beq	1751c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38c4>
   17510:	mov	r2, #1
   17514:	mov	r3, #0
   17518:	strd	r2, [r4, #32]
   1751c:	cmp	r5, #0
   17520:	beq	1753c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38e4>
   17524:	mov	r0, r5
   17528:	bl	138f8 <fileno@plt>
   1752c:	bl	13b98 <isatty@plt>
   17530:	cmp	r0, #0
   17534:	movle	r5, #0
   17538:	movgt	r5, #1
   1753c:	str	r5, [r4, #24]
   17540:	str	r7, [r6]
   17544:	pop	{r4, r5, r6, r7, r8, pc}
   17548:	andeq	r7, ip, r4, ror sl
   1754c:	push	{r4, r5, r6, lr}
   17550:	mov	r6, r0
   17554:	mov	r0, #48	; 0x30
   17558:	mov	r5, r1
   1755c:	bl	13700 <malloc@plt>
   17560:	subs	r4, r0, #0
   17564:	beq	1759c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3944>
   17568:	str	r5, [r4, #12]
   1756c:	add	r0, r5, #2
   17570:	bl	13700 <malloc@plt>
   17574:	cmp	r0, #0
   17578:	str	r0, [r4, #4]
   1757c:	beq	1759c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3944>
   17580:	mov	r3, #1
   17584:	mov	r0, r4
   17588:	mov	r1, r6
   1758c:	str	r3, [r4, #20]
   17590:	bl	174c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x386c>
   17594:	mov	r0, r4
   17598:	pop	{r4, r5, r6, pc}
   1759c:	ldr	r0, [pc]	; 175a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x394c>
   175a0:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   175a4:	andeq	sl, r4, r0, lsl #5
   175a8:	push	{r4, r5, r6, r7, r8, lr}
   175ac:	mov	r7, r0
   175b0:	ldr	r4, [pc, #132]	; 1763c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39e4>
   175b4:	ldr	r3, [r4, #60]	; 0x3c
   175b8:	cmp	r3, #0
   175bc:	beq	17610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39b8>
   175c0:	ldr	r5, [r4, #68]	; 0x44
   175c4:	ldr	r6, [r3, r5, lsl #2]
   175c8:	add	r5, r3, r5, lsl #2
   175cc:	cmp	r6, #0
   175d0:	beq	17610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39b8>
   175d4:	mov	r1, r7
   175d8:	mov	r0, r6
   175dc:	bl	174c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x386c>
   175e0:	ldr	r2, [r5]
   175e4:	ldr	r0, [pc, #84]	; 17640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39e8>
   175e8:	ldr	r3, [r2, #8]
   175ec:	ldr	r1, [r2]
   175f0:	str	r3, [r0]
   175f4:	str	r1, [r4, #80]	; 0x50
   175f8:	ldrb	r1, [r3]
   175fc:	ldr	r2, [r2, #16]
   17600:	str	r3, [r4, #4]
   17604:	strb	r1, [r4, #72]	; 0x48
   17608:	str	r2, [r4, #76]	; 0x4c
   1760c:	pop	{r4, r5, r6, r7, r8, pc}
   17610:	bl	172a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3648>
   17614:	mov	r1, #16384	; 0x4000
   17618:	ldr	r0, [r4, #80]	; 0x50
   1761c:	ldr	r6, [r4, #60]	; 0x3c
   17620:	ldr	r5, [r4, #68]	; 0x44
   17624:	bl	1754c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38f4>
   17628:	cmp	r6, #0
   1762c:	str	r0, [r6, r5, lsl #2]
   17630:	add	r5, r6, r5, lsl #2
   17634:	movne	r6, r0
   17638:	b	175d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x397c>
   1763c:	andeq	r7, ip, r4, ror sl
   17640:	andeq	r8, ip, ip, lsr #32
   17644:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17648:	ldr	r5, [pc, #648]	; 178d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c80>
   1764c:	ldr	sl, [pc, #648]	; 178dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c84>
   17650:	ldr	r9, [r5, #60]	; 0x3c
   17654:	ldr	r0, [r5, #68]	; 0x44
   17658:	ldr	r1, [r5, #76]	; 0x4c
   1765c:	ldr	fp, [r5, #4]
   17660:	ldr	r4, [r9, r0, lsl #2]
   17664:	add	r1, r1, #1
   17668:	add	r7, r9, r0, lsl #2
   1766c:	ldr	r2, [r4, #4]
   17670:	ldr	r3, [sl]
   17674:	add	r1, r2, r1
   17678:	cmp	fp, r1
   1767c:	bhi	178c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c70>
   17680:	ldr	r1, [r4, #40]	; 0x28
   17684:	sub	r6, fp, r3
   17688:	cmp	r1, #0
   1768c:	beq	17740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ae8>
   17690:	subs	r8, r6, #1
   17694:	beq	176b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3a5c>
   17698:	sub	r2, r2, #1
   1769c:	add	ip, r3, r8
   176a0:	ldrb	r1, [r3], #1
   176a4:	cmp	r3, ip
   176a8:	strb	r1, [r2, #1]!
   176ac:	bne	176a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3a48>
   176b0:	ldr	r4, [r9, r0, lsl #2]
   176b4:	ldr	r3, [r4, #44]	; 0x2c
   176b8:	cmp	r3, #2
   176bc:	moveq	r3, #0
   176c0:	streq	r3, [r5, #76]	; 0x4c
   176c4:	streq	r3, [r4, #16]
   176c8:	bne	17710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ab8>
   176cc:	b	177c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b6c>
   176d0:	ldr	r1, [r4, #12]
   176d4:	cmp	r1, #0
   176d8:	lslgt	r1, r1, #1
   176dc:	bgt	176ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3a94>
   176e0:	add	r3, r1, #7
   176e4:	movge	r3, r1
   176e8:	add	r1, r1, r3, asr #3
   176ec:	str	r1, [r4, #12]
   176f0:	add	r1, r1, #2
   176f4:	bl	134d8 <realloc@plt>
   176f8:	cmp	r0, #0
   176fc:	str	r0, [r4, #4]
   17700:	beq	17738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ae0>
   17704:	ldr	r4, [r7]
   17708:	add	fp, r0, fp
   1770c:	str	fp, [r5, #4]
   17710:	ldr	r2, [r4, #12]
   17714:	sub	r2, r2, r6
   17718:	cmp	r2, #0
   1771c:	bgt	17750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3af8>
   17720:	ldr	r3, [r4, #20]
   17724:	ldr	r0, [r4, #4]
   17728:	cmp	r3, #0
   1772c:	sub	fp, fp, r0
   17730:	bne	176d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3a78>
   17734:	str	r3, [r4, #4]
   17738:	ldr	r0, [pc, #416]	; 178e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c88>
   1773c:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   17740:	cmp	r6, #1
   17744:	movne	r6, #2
   17748:	mov	r0, r6
   1774c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17750:	cmp	r9, #0
   17754:	beq	178d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c78>
   17758:	ldr	r3, [r4]
   1775c:	cmp	r3, #0
   17760:	beq	177bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b64>
   17764:	ldr	r3, [r5, #80]	; 0x50
   17768:	cmp	r3, #0
   1776c:	beq	177bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b64>
   17770:	cmp	r2, #8192	; 0x2000
   17774:	ldr	r0, [r4, #4]
   17778:	movlt	r4, r2
   1777c:	movge	r4, #8192	; 0x2000
   17780:	add	r0, r0, r8
   17784:	mov	r2, r4
   17788:	mov	r1, #1
   1778c:	bl	135ec <fread@plt>
   17790:	cmp	r4, r0
   17794:	mov	r9, r0
   17798:	bgt	17878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c20>
   1779c:	ldr	r2, [r5, #68]	; 0x44
   177a0:	ldr	r3, [r5, #60]	; 0x3c
   177a4:	str	r0, [r5, #76]	; 0x4c
   177a8:	add	r7, r3, r2, lsl #2
   177ac:	ldr	r4, [r3, r2, lsl #2]
   177b0:	mov	r6, #0
   177b4:	str	r0, [r4, #16]
   177b8:	b	177ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b94>
   177bc:	str	r3, [r5, #76]	; 0x4c
   177c0:	str	r3, [r4, #16]
   177c4:	cmp	r8, #0
   177c8:	beq	17830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3bd8>
   177cc:	ldr	r1, [r5, #68]	; 0x44
   177d0:	ldr	r2, [r5, #60]	; 0x3c
   177d4:	mov	r3, #2
   177d8:	ldr	r9, [r5, #76]	; 0x4c
   177dc:	ldr	r4, [r2, r1, lsl #2]
   177e0:	add	r7, r2, r1, lsl r3
   177e4:	mov	r6, r3
   177e8:	str	r3, [r4, #44]	; 0x2c
   177ec:	ldr	r3, [r4, #12]
   177f0:	add	r8, r9, r8
   177f4:	cmp	r8, r3
   177f8:	ldr	r0, [r4, #4]
   177fc:	bgt	17854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3bfc>
   17800:	mov	r2, #0
   17804:	strb	r2, [r0, r8]
   17808:	ldr	r3, [r7]
   1780c:	str	r8, [r5, #76]	; 0x4c
   17810:	mov	r0, r6
   17814:	ldr	r3, [r3, #4]
   17818:	add	r8, r3, r8
   1781c:	strb	r2, [r8, #1]
   17820:	ldr	r3, [r7]
   17824:	ldr	r3, [r3, #4]
   17828:	str	r3, [sl]
   1782c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17830:	ldr	r0, [r5, #80]	; 0x50
   17834:	bl	175a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3950>
   17838:	ldr	r2, [r5, #68]	; 0x44
   1783c:	ldr	r3, [r5, #60]	; 0x3c
   17840:	ldr	r9, [r5, #76]	; 0x4c
   17844:	add	r7, r3, r2, lsl #2
   17848:	ldr	r4, [r3, r2, lsl #2]
   1784c:	mov	r6, #1
   17850:	b	177ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b94>
   17854:	add	r1, r8, r9, asr #1
   17858:	bl	134d8 <realloc@plt>
   1785c:	ldr	r3, [r7]
   17860:	str	r0, [r4, #4]
   17864:	ldr	r0, [r3, #4]
   17868:	cmp	r0, #0
   1786c:	bne	17800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ba8>
   17870:	ldr	r0, [pc, #108]	; 178e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c8c>
   17874:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   17878:	ldr	r0, [r5, #80]	; 0x50
   1787c:	bl	13388 <ferror@plt>
   17880:	cmp	r0, #0
   17884:	bne	178b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c58>
   17888:	ldr	r2, [r5, #68]	; 0x44
   1788c:	ldr	r3, [r5, #60]	; 0x3c
   17890:	cmp	r9, #0
   17894:	add	r7, r3, r2, lsl #2
   17898:	ldr	r4, [r3, r2, lsl #2]
   1789c:	movne	r6, #0
   178a0:	str	r9, [r5, #76]	; 0x4c
   178a4:	str	r9, [r4, #16]
   178a8:	bne	177ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b94>
   178ac:	b	177c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3b6c>
   178b0:	mov	r2, #5
   178b4:	ldr	r1, [pc, #44]	; 178e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c90>
   178b8:	mov	r0, #0
   178bc:	bl	13460 <dcgettext@plt>
   178c0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   178c4:	b	17888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c30>
   178c8:	ldr	r0, [pc, #28]	; 178ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c94>
   178cc:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   178d0:	ldr	r3, [r9]
   178d4:	udf	#0
   178d8:	andeq	r7, ip, r4, ror sl
   178dc:	andeq	r8, ip, ip, lsr #32
   178e0:	andeq	sl, r4, r4, ror #5
   178e4:	andeq	sl, r4, r4, lsr r3
   178e8:	andeq	sl, r4, r0, lsl r3
   178ec:	andeq	sl, r4, ip, lsr #5
   178f0:	push	{r4, r5, r6, r7, r8, lr}
   178f4:	ldr	r4, [pc, #172]	; 179a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d50>
   178f8:	ldrb	r6, [r4, #72]	; 0x48
   178fc:	ldr	r5, [r4, #4]
   17900:	mov	r3, r5
   17904:	cmp	r6, #0
   17908:	strb	r6, [r3], #1
   1790c:	bne	17930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cd8>
   17910:	ldr	r0, [r4, #68]	; 0x44
   17914:	ldr	r2, [r4, #60]	; 0x3c
   17918:	ldr	r1, [r4, #76]	; 0x4c
   1791c:	ldr	r2, [r2, r0, lsl #2]
   17920:	ldr	r2, [r2, #4]
   17924:	add	r2, r2, r1
   17928:	cmp	r5, r2
   1792c:	bcs	1794c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cf4>
   17930:	ldrb	r1, [r5, #1]
   17934:	mov	r2, #0
   17938:	str	r3, [r4, #4]
   1793c:	strb	r1, [r4, #72]	; 0x48
   17940:	strb	r2, [r5]
   17944:	mov	r0, r6
   17948:	pop	{r4, r5, r6, r7, r8, pc}
   1794c:	ldr	r7, [pc, #88]	; 179ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d54>
   17950:	str	r3, [r4, #4]
   17954:	ldr	r8, [r7]
   17958:	bl	17644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39ec>
   1795c:	cmp	r0, #1
   17960:	beq	17944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cec>
   17964:	cmp	r0, #2
   17968:	beq	17984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d2c>
   1796c:	cmp	r0, #0
   17970:	beq	17990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d38>
   17974:	ldr	r5, [r4, #4]
   17978:	mov	r3, r5
   1797c:	ldrb	r6, [r3], #1
   17980:	b	17930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cd8>
   17984:	ldr	r0, [r4, #80]	; 0x50
   17988:	bl	175a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3950>
   1798c:	b	17944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cec>
   17990:	ldr	r3, [r7]
   17994:	sub	r8, r5, r8
   17998:	add	r5, r3, r8
   1799c:	ldrb	r6, [r3, r8]
   179a0:	add	r3, r5, #1
   179a4:	b	17930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3cd8>
   179a8:	andeq	r7, ip, r4, ror sl
   179ac:	andeq	r8, ip, ip, lsr #32
   179b0:	push	{r4, lr}
   179b4:	ldr	r4, [pc, #120]	; 17a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ddc>
   179b8:	bl	178f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c98>
   179bc:	cmp	r0, #42	; 0x2a
   179c0:	cmnne	r0, #1
   179c4:	beq	179ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d94>
   179c8:	cmp	r0, #10
   179cc:	bne	179b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d60>
   179d0:	ldr	r3, [r4]
   179d4:	add	r3, r3, #1
   179d8:	str	r3, [r4]
   179dc:	bl	178f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c98>
   179e0:	cmp	r0, #42	; 0x2a
   179e4:	cmnne	r0, #1
   179e8:	bne	179c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d70>
   179ec:	cmp	r0, #42	; 0x2a
   179f0:	beq	17a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3dc4>
   179f4:	cmp	r0, #10
   179f8:	beq	179d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d78>
   179fc:	cmn	r0, #1
   17a00:	bne	179b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d60>
   17a04:	mov	r2, #5
   17a08:	ldr	r1, [pc, #40]	; 17a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de0>
   17a0c:	mov	r0, #0
   17a10:	bl	13460 <dcgettext@plt>
   17a14:	pop	{r4, lr}
   17a18:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   17a1c:	bl	178f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c98>
   17a20:	cmp	r0, #42	; 0x2a
   17a24:	beq	17a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3dc4>
   17a28:	cmp	r0, #47	; 0x2f
   17a2c:	bne	179f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d9c>
   17a30:	pop	{r4, pc}
   17a34:	andeq	r8, ip, r4, lsr r0
   17a38:	andeq	sl, r4, r4, ror #6
   17a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a40:	sub	sp, sp, #20
   17a44:	ldr	r9, [pc, #4080]	; 18a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4de4>
   17a48:	ldr	r3, [r9, #84]	; 0x54
   17a4c:	cmp	r3, #0
   17a50:	bne	17ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e7c>
   17a54:	ldr	r2, [r9]
   17a58:	mov	r3, #1
   17a5c:	cmp	r2, #0
   17a60:	streq	r3, [r9]
   17a64:	str	r3, [r9, #84]	; 0x54
   17a68:	ldr	r3, [r9, #80]	; 0x50
   17a6c:	cmp	r3, #0
   17a70:	ldreq	r3, [pc, #4040]	; 18a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4de8>
   17a74:	ldreq	r3, [r3]
   17a78:	streq	r3, [r9, #80]	; 0x50
   17a7c:	ldr	r3, [r9, #88]	; 0x58
   17a80:	cmp	r3, #0
   17a84:	ldreq	r3, [pc, #4024]	; 18a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4dec>
   17a88:	ldreq	r3, [r3]
   17a8c:	streq	r3, [r9, #88]	; 0x58
   17a90:	ldr	r3, [r9, #60]	; 0x3c
   17a94:	cmp	r3, #0
   17a98:	beq	17f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4344>
   17a9c:	ldr	r2, [r9, #68]	; 0x44
   17aa0:	ldr	r0, [r3, r2, lsl #2]
   17aa4:	cmp	r0, #0
   17aa8:	beq	17f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4344>
   17aac:	ldr	r3, [r0, #8]
   17ab0:	ldr	ip, [pc, #3984]	; 18a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4df0>
   17ab4:	ldr	r2, [r0]
   17ab8:	ldr	r1, [r0, #16]
   17abc:	str	r3, [ip]
   17ac0:	str	r2, [r9, #80]	; 0x50
   17ac4:	ldrb	r2, [r3]
   17ac8:	str	r3, [r9, #4]
   17acc:	str	r1, [r9, #76]	; 0x4c
   17ad0:	strb	r2, [r9, #72]	; 0x48
   17ad4:	ldr	r2, [pc, #3952]	; 18a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4df4>
   17ad8:	ldr	r3, [r2]
   17adc:	cmp	r3, #0
   17ae0:	bne	17f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4318>
   17ae4:	ldr	r4, [pc, #3940]	; 18a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4df8>
   17ae8:	ldr	r5, [pc, #3940]	; 18a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4dfc>
   17aec:	ldr	r8, [pc, #3940]	; 18a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e00>
   17af0:	ldr	r3, [pc, #3920]	; 18a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4df0>
   17af4:	add	sl, r4, #504	; 0x1f8
   17af8:	str	r3, [sp, #8]
   17afc:	ldr	r3, [pc, #3928]	; 18a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e04>
   17b00:	ldr	r7, [r9, #4]
   17b04:	ldrb	r0, [r9, #72]	; 0x48
   17b08:	ldr	r2, [r9]
   17b0c:	add	r6, r3, #4
   17b10:	str	r7, [sp, #12]
   17b14:	strb	r0, [r7]
   17b18:	lsl	r1, r2, #1
   17b1c:	ldr	ip, [r9, #12]
   17b20:	ldrh	r3, [r4, r1]
   17b24:	ldr	lr, [r9, #8]
   17b28:	str	ip, [sp]
   17b2c:	mov	ip, #0
   17b30:	ldr	fp, [pc, #3880]	; 18a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e08>
   17b34:	ldrsh	fp, [fp, r1]
   17b38:	str	fp, [sp, #4]
   17b3c:	ldr	fp, [pc, #3872]	; 18a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e0c>
   17b40:	ldrb	r0, [fp, r0]
   17b44:	ldr	fp, [sp, #4]
   17b48:	cmp	fp, #0
   17b4c:	ldr	fp, [sp]
   17b50:	movne	fp, r7
   17b54:	movne	lr, r2
   17b58:	str	fp, [sp]
   17b5c:	movne	ip, #1
   17b60:	b	17b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f24>
   17b64:	ldrsh	r2, [r6, r1]
   17b68:	cmp	r2, r8
   17b6c:	addgt	r0, sl, r0
   17b70:	lsl	r1, r2, #1
   17b74:	ldrbgt	r0, [r0, #-588]	; 0xfffffdb4
   17b78:	ldrh	r3, [r4, r1]
   17b7c:	add	r3, r3, r0
   17b80:	lsl	r3, r3, #1
   17b84:	ldrsh	fp, [r5, r3]
   17b88:	cmp	fp, r2
   17b8c:	bne	17b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f0c>
   17b90:	ldr	r2, [pc, #3792]	; 18a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e10>
   17b94:	ldr	r0, [pc, #3792]	; 18a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e14>
   17b98:	add	r7, r7, #1
   17b9c:	ldrh	r2, [r2, r3]
   17ba0:	lsl	r1, r2, #1
   17ba4:	ldrh	r3, [r4, r1]
   17ba8:	cmp	r3, r0
   17bac:	ldrbne	r0, [r7]
   17bb0:	bne	17b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ed8>
   17bb4:	cmp	ip, #0
   17bb8:	ldr	r2, [sp, #12]
   17bbc:	ldr	fp, [sp, #8]
   17bc0:	ldrne	r3, [sp]
   17bc4:	strne	lr, [r9, #8]
   17bc8:	strne	r3, [r9, #12]
   17bcc:	ldr	r0, [pc, #3724]	; 18a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e08>
   17bd0:	str	r2, [fp]
   17bd4:	ldrsh	r3, [r0, r1]
   17bd8:	cmp	r3, #0
   17bdc:	ldreq	r3, [r9, #8]
   17be0:	ldreq	r7, [r9, #12]
   17be4:	lsleq	r3, r3, #1
   17be8:	sub	r1, r7, r2
   17bec:	ldrsheq	r3, [r0, r3]
   17bf0:	ldr	r0, [pc, #3704]	; 18a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e18>
   17bf4:	str	r7, [r9, #4]
   17bf8:	str	r1, [r0]
   17bfc:	ldrb	r0, [r7]
   17c00:	mov	r1, #1
   17c04:	strb	r0, [r9, #72]	; 0x48
   17c08:	mov	r0, #0
   17c0c:	strb	r0, [r7]
   17c10:	cmp	r3, #212	; 0xd4
   17c14:	ldrls	pc, [pc, r3, lsl #2]
   17c18:	b	192f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x569c>
   17c1c:	strdeq	r8, [r1], -r0
   17c20:	andeq	r8, r1, r0, asr #13
   17c24:	andeq	r8, r1, ip, asr #19
   17c28:	muleq	r1, r8, r1
   17c2c:	andeq	r9, r1, ip, ror r1
   17c30:	andeq	r9, r1, r8, ror #2
   17c34:	andeq	r9, r1, ip, lsr r1
   17c38:	andeq	r9, r1, ip, ror #1
   17c3c:	andeq	r9, r1, r8, asr r0
   17c40:	andeq	r9, r1, r4, asr #32
   17c44:	andeq	r9, r1, r0, lsr r0
   17c48:	andeq	r9, r1, r0, lsr #32
   17c4c:	andeq	r9, r1, r0, lsl r0
   17c50:	andeq	r9, r1, r0
   17c54:	strdeq	r8, [r1], -r0
   17c58:	ldrdeq	r8, [r1], -ip
   17c5c:	andeq	r8, r1, ip, asr #31
   17c60:			; <UNDEFINED> instruction: 0x00018fbc
   17c64:	andeq	r8, r1, ip, lsr #31
   17c68:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   17c6c:	andeq	r8, r1, r8, lsl #31
   17c70:	andeq	r8, r1, r8, ror pc
   17c74:	andeq	r8, r1, r8, ror #30
   17c78:	andeq	r8, r1, r4, asr pc
   17c7c:	andeq	r8, r1, r4, asr #30
   17c80:	andeq	r8, r1, r0, lsr pc
   17c84:	andeq	r8, r1, r0, lsr #30
   17c88:	andeq	r8, r1, ip, lsl #30
   17c8c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17c90:	andeq	r8, r1, r4, ror #29
   17c94:	ldrdeq	r8, [r1], -r0
   17c98:			; <UNDEFINED> instruction: 0x00018ebc
   17c9c:	andeq	r8, r1, r8, lsr #29
   17ca0:	muleq	r1, r4, lr
   17ca4:	andeq	r8, r1, r0, lsl #29
   17ca8:	andeq	r8, r1, ip, ror #28
   17cac:	andeq	r8, r1, r8, asr lr
   17cb0:	andeq	r8, r1, r4, asr #28
   17cb4:	andeq	r8, r1, r0, lsr lr
   17cb8:	andeq	r8, r1, ip, lsl lr
   17cbc:	andeq	r8, r1, r8, lsl #28
   17cc0:	strdeq	r8, [r1], -r4
   17cc4:	andeq	r8, r1, r0, ror #27
   17cc8:	andeq	r8, r1, ip, asr #27
   17ccc:			; <UNDEFINED> instruction: 0x00018db8
   17cd0:	andeq	r8, r1, r4, lsr #27
   17cd4:	muleq	r1, r0, sp
   17cd8:	andeq	r8, r1, r0, lsl #27
   17cdc:	andeq	r8, r1, ip, ror #26
   17ce0:	andeq	r8, r1, ip, asr sp
   17ce4:	andeq	r8, r1, ip, asr #26
   17ce8:	andeq	r8, r1, ip, lsr sp
   17cec:	andeq	r8, r1, r8, lsr #26
   17cf0:	andeq	r8, r1, r8, lsl sp
   17cf4:	andeq	r8, r1, r4, lsl #26
   17cf8:	strdeq	r8, [r1], -r4
   17cfc:	andeq	r8, r1, r0, ror #25
   17d00:	ldrdeq	r8, [r1], -r0
   17d04:	andeq	r8, r1, r0, asr #25
   17d08:			; <UNDEFINED> instruction: 0x00018cb0
   17d0c:	muleq	r1, ip, ip
   17d10:	andeq	r8, r1, ip, lsl #25
   17d14:	andeq	r8, r1, ip, ror ip
   17d18:	andeq	r8, r1, ip, ror #24
   17d1c:	andeq	r8, r1, ip, asr ip
   17d20:	andeq	r8, r1, ip, asr #24
   17d24:	andeq	r8, r1, ip, lsr ip
   17d28:	andeq	r8, r1, ip, ror #8
   17d2c:	andeq	r8, r1, r8, asr r4
   17d30:	andeq	r8, r1, r8, asr #8
   17d34:	andeq	r8, r1, r8, asr #8
   17d38:	andeq	r8, r1, r8, lsl r4
   17d3c:	andeq	r8, r1, r8, lsl #8
   17d40:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d44:	andeq	r8, r1, r4, ror #7
   17d48:	ldrdeq	r8, [r1], -r4
   17d4c:	andeq	r8, r1, r0, asr #7
   17d50:			; <UNDEFINED> instruction: 0x000183b0
   17d54:	andeq	r8, r1, r0, lsr #7
   17d58:	andeq	r8, r1, ip, lsl #7
   17d5c:	andeq	r8, r1, ip, ror r3
   17d60:	andeq	r8, r1, ip, ror #6
   17d64:	andeq	r8, r1, ip, asr r3
   17d68:	andeq	r8, r1, ip, asr #6
   17d6c:	andeq	r8, r1, r8, lsr r3
   17d70:	andeq	r8, r1, r8, lsr #6
   17d74:	andeq	r8, r1, r8, lsl r3
   17d78:	andeq	r8, r1, r8, lsl #6
   17d7c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d80:	andeq	r8, r1, r8, ror #5
   17d84:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17d88:	andeq	r8, r1, r8, asr #5
   17d8c:			; <UNDEFINED> instruction: 0x000182b4
   17d90:	andeq	r8, r1, r4, lsr #5
   17d94:	muleq	r1, r0, r2
   17d98:	andeq	r8, r1, r0, lsl #5
   17d9c:	andeq	r8, r1, r0, ror r2
   17da0:	andeq	r8, r1, r0, ror #4
   17da4:	andeq	r8, r1, r0, asr r2
   17da8:	andeq	r8, r1, ip, lsr r2
   17dac:	andeq	r8, r1, ip, lsr #4
   17db0:	andeq	r8, r1, ip, lsl r2
   17db4:	andeq	r8, r1, ip, lsl #4
   17db8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dbc:	andeq	r8, r1, r8, ror #3
   17dc0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dc4:	andeq	r8, r1, r8, asr #3
   17dc8:			; <UNDEFINED> instruction: 0x000181b4
   17dcc:	andeq	r8, r1, r8, asr #3
   17dd0:	andeq	r8, r1, ip, ror r1
   17dd4:	andeq	r8, r1, ip, ror #2
   17dd8:	andeq	r8, r1, ip, asr r1
   17ddc:	andeq	r8, r1, ip, asr #2
   17de0:	andeq	r8, r1, r8, lsr r1
   17de4:	andeq	r8, r1, r8, lsr #2
   17de8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17dec:	andeq	r8, r1, r0, lsl #2
   17df0:	strdeq	r8, [r1], -r0
   17df4:	andeq	r8, r1, r0, ror #1
   17df8:	ldrdeq	r8, [r1], -r0
   17dfc:	ldrdeq	r8, [r1], -r0
   17e00:	andeq	r8, r1, r0, lsr #1
   17e04:	andeq	r8, r1, r0, lsr #1
   17e08:	andeq	r8, r1, r0, lsl #1
   17e0c:	andeq	r8, r1, r0, ror r0
   17e10:	andeq	r8, r1, ip, asr r0
   17e14:	andeq	r8, r1, ip, asr #32
   17e18:	andeq	r8, r1, r8, ror r8
   17e1c:	andeq	r8, r1, r4, ror #16
   17e20:	andeq	r8, r1, r4, asr r8
   17e24:	andeq	r8, r1, r4, asr #16
   17e28:	andeq	r8, r1, r0, ror #19
   17e2c:			; <UNDEFINED> instruction: 0x000189bc
   17e30:	andeq	r8, r1, ip, lsr #19
   17e34:	muleq	r1, ip, r9
   17e38:	strdeq	r7, [r1], -r4
   17e3c:	andeq	r8, r1, ip, lsl ip
   17e40:	strdeq	r7, [r1], -ip
   17e44:	strdeq	r7, [r1], -ip
   17e48:	andeq	r8, r1, r8, lsl #20
   17e4c:	andeq	r8, r1, ip, lsl #19
   17e50:	andeq	r8, r1, ip, ror r9
   17e54:	andeq	r8, r1, ip, ror #18
   17e58:	andeq	r8, r1, ip, asr r9
   17e5c:	andeq	r8, r1, ip, lsr #9
   17e60:	muleq	r1, ip, r4
   17e64:	andeq	r8, r1, ip, lsl #9
   17e68:	andeq	r8, r1, ip, ror r4
   17e6c:	andeq	r8, r1, r8, asr #18
   17e70:	andeq	r8, r1, r8, lsr r9
   17e74:	andeq	r8, r1, r4, lsr #18
   17e78:	andeq	r8, r1, r4, lsl r9
   17e7c:	andeq	r8, r1, r0, lsl #18
   17e80:	strdeq	r8, [r1], -r0
   17e84:	andeq	r8, r1, r0, ror #17
   17e88:	andeq	r8, r1, ip, asr #17
   17e8c:			; <UNDEFINED> instruction: 0x000188bc
   17e90:	andeq	r8, r1, ip, lsr #17
   17e94:	muleq	r1, ip, r8
   17e98:	andeq	r8, r1, ip, lsl #17
   17e9c:	andeq	r8, r1, ip, lsr r0
   17ea0:	andeq	r8, r1, r8, lsr #32
   17ea4:	andeq	r8, r1, r8, lsl r0
   17ea8:	andeq	r8, r1, r8
   17eac:	andeq	r8, r1, r4, lsr r8
   17eb0:	andeq	r8, r1, r0, lsr #16
   17eb4:	andeq	r8, r1, r0, lsl r8
   17eb8:	strdeq	r8, [r1], -ip
   17ebc:	andeq	r8, r1, ip, ror #15
   17ec0:	ldrdeq	r8, [r1], -ip
   17ec4:	andeq	r8, r1, r8, asr #15
   17ec8:			; <UNDEFINED> instruction: 0x000187b8
   17ecc:	andeq	r8, r1, r8, lsr #15
   17ed0:	muleq	r1, r4, r7
   17ed4:	andeq	r8, r1, r8, ror r7
   17ed8:	andeq	r8, r1, ip, asr r7
   17edc:	andeq	r8, r1, r0, asr #14
   17ee0:	andeq	r8, r1, r4, lsr #14
   17ee4:	andeq	r8, r1, r4, lsl #14
   17ee8:	andeq	r8, r1, r8, ror #13
   17eec:	andeq	r8, r1, r8, asr #13
   17ef0:	andeq	r8, r1, ip, ror #12
   17ef4:	andeq	r8, r1, r8, lsr #12
   17ef8:	strdeq	r7, [r1], -r4
   17efc:	strdeq	r7, [r1], -ip
   17f00:	andeq	r8, r1, r4, asr r5
   17f04:	andeq	r8, r1, r4, asr #10
   17f08:	andeq	r8, r1, r0, lsr r5
   17f0c:	ldrdeq	r8, [r1], -ip
   17f10:	strdeq	r8, [r1], -r4
   17f14:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17f18:	andeq	r8, r1, r0, asr #9
   17f1c:	andeq	r8, r1, r0, lsl r5
   17f20:	muleq	r1, r0, r0
   17f24:	strheq	r8, [r1], -r4
   17f28:	andeq	r8, r1, ip, lsl #3
   17f2c:	strdeq	r7, [r1], -r4
   17f30:	strdeq	r7, [r1], -ip
   17f34:	strdeq	r7, [r1], -ip
   17f38:	andeq	r8, r1, r4, lsl r6
   17f3c:	andeq	r8, r1, r4, lsl r1
   17f40:	andeq	r8, r1, r8, lsr #8
   17f44:	andeq	r8, r1, r4, ror #10
   17f48:	andeq	r8, r1, r8, lsl sl
   17f4c:	andeq	r8, r1, r8, lsl sl
   17f50:	andeq	r8, r1, r8, lsl sl
   17f54:	andeq	r8, r1, r8, lsl sl
   17f58:	andeq	r8, r1, r8, lsl sl
   17f5c:	andeq	r8, r1, r8, lsl sl
   17f60:	andeq	r8, r1, r8, lsl sl
   17f64:	andeq	r8, r1, r8, lsl sl
   17f68:	andeq	r8, r1, r8, lsl sl
   17f6c:	andeq	r8, r1, r8, lsl sl
   17f70:	mov	r1, #0
   17f74:	sub	r3, r3, #1
   17f78:	str	r1, [r2]
   17f7c:	cmp	r3, #4
   17f80:	ldrls	pc, [pc, r3, lsl #2]
   17f84:	b	192e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x568c>
   17f88:	andeq	r7, r1, ip, asr #31
   17f8c:	ldrdeq	r7, [r1], -r4
   17f90:	ldrdeq	r7, [r1], -ip
   17f94:	andeq	r7, r1, ip, ror #31
   17f98:			; <UNDEFINED> instruction: 0x00017fbc
   17f9c:	bl	172a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3648>
   17fa0:	mov	r1, #16384	; 0x4000
   17fa4:	ldr	r0, [r9, #80]	; 0x50
   17fa8:	ldr	r5, [r9, #68]	; 0x44
   17fac:	ldr	r4, [r9, #60]	; 0x3c
   17fb0:	bl	1754c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38f4>
   17fb4:	str	r0, [r4, r5, lsl #2]
   17fb8:	b	17aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e54>
   17fbc:	ldr	r3, [pc, #2736]	; 18a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e1c>
   17fc0:	mov	r0, r3
   17fc4:	add	sp, sp, #20
   17fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fcc:	ldr	r3, [pc, #2724]	; 18a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e20>
   17fd0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   17fd4:	mov	r3, #368	; 0x170
   17fd8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   17fdc:	ldr	r3, [pc, #2712]	; 18a7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e24>
   17fe0:	mov	r0, r3
   17fe4:	add	sp, sp, #20
   17fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fec:	ldr	r3, [pc, #2700]	; 18a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e28>
   17ff0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   17ff4:	ldr	r2, [pc, #3064]	; 18bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f9c>
   17ff8:	ldr	r3, [r2]
   17ffc:	add	r3, r3, #1
   18000:	str	r3, [r2]
   18004:	b	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   18008:	ldr	r2, [pc, #3060]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1800c:	ldr	r3, [pc, #2672]	; 18a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e2c>
   18010:	str	r3, [r2]
   18014:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18018:	ldr	r2, [pc, #3044]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1801c:	ldr	r3, [pc, #2660]	; 18a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e30>
   18020:	str	r3, [r2]
   18024:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18028:	ldr	r1, [pc, #3028]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1802c:	mov	r2, #364	; 0x16c
   18030:	mov	r3, r2
   18034:	str	r2, [r1]
   18038:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1803c:	ldr	r2, [pc, #3008]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18040:	ldr	r3, [pc, #2628]	; 18a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e34>
   18044:	str	r3, [r2]
   18048:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1804c:	ldr	r2, [pc, #2992]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18050:	ldr	r3, [pc, #2616]	; 18a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e38>
   18054:	str	r3, [r2]
   18058:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1805c:	ldr	r1, [pc, #2976]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18060:	mov	r2, #288	; 0x120
   18064:	mov	r3, r2
   18068:	str	r2, [r1]
   1806c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18070:	ldr	r2, [pc, #2956]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18074:	ldr	r3, [pc, #2584]	; 18a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e3c>
   18078:	str	r3, [r2]
   1807c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18080:	ldr	r2, [pc, #2940]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18084:	ldr	r3, [pc, #2572]	; 18a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e40>
   18088:	str	r3, [r2]
   1808c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18090:	ldr	r3, [sp, #8]
   18094:	ldr	r3, [r3]
   18098:	ldrb	r3, [r3]
   1809c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   180a0:	ldr	r1, [pc, #2908]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   180a4:	mov	r2, #336	; 0x150
   180a8:	mov	r3, r2
   180ac:	str	r2, [r1]
   180b0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   180b4:	ldr	r3, [sp, #8]
   180b8:	ldr	r2, [r9, #92]	; 0x5c
   180bc:	ldr	r3, [r3]
   180c0:	add	r2, r2, #1
   180c4:	str	r2, [r9, #92]	; 0x5c
   180c8:	ldrb	r3, [r3]
   180cc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   180d0:	ldr	r2, [pc, #2860]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   180d4:	ldr	r3, [pc, #2772]	; 18bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f58>
   180d8:	str	r3, [r2]
   180dc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   180e0:	ldr	r2, [pc, #2844]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   180e4:	ldr	r3, [pc, #2480]	; 18a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e44>
   180e8:	str	r3, [r2]
   180ec:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   180f0:	ldr	r2, [pc, #2828]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   180f4:	ldr	r3, [pc, #2468]	; 18aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e48>
   180f8:	str	r3, [r2]
   180fc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18100:	ldr	r1, [pc, #2812]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18104:	mov	r2, #380	; 0x17c
   18108:	mov	r3, r2
   1810c:	str	r2, [r1]
   18110:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18114:	ldr	r3, [sp, #8]
   18118:	ldr	r0, [pc, #2436]	; 18aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e4c>
   1811c:	ldr	r1, [r3]
   18120:	bl	171b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x355c>
   18124:	b	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   18128:	ldr	r2, [pc, #2772]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1812c:	ldr	r3, [pc, #2420]	; 18aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e50>
   18130:	str	r3, [r2]
   18134:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18138:	ldr	r1, [pc, #2756]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1813c:	mov	r2, #312	; 0x138
   18140:	mov	r3, r2
   18144:	str	r2, [r1]
   18148:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1814c:	ldr	r2, [pc, #2736]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18150:	ldr	r3, [pc, #2388]	; 18aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e54>
   18154:	str	r3, [r2]
   18158:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1815c:	ldr	r2, [pc, #2720]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18160:	ldr	r3, [pc, #2376]	; 18ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e58>
   18164:	str	r3, [r2]
   18168:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1816c:	ldr	r2, [pc, #2704]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18170:	ldr	r3, [pc, #2364]	; 18ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e5c>
   18174:	str	r3, [r2]
   18178:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1817c:	ldr	r2, [pc, #2688]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18180:	ldr	r3, [pc, #2352]	; 18ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e60>
   18184:	str	r3, [r2]
   18188:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1818c:	ldr	r3, [r9, #92]	; 0x5c
   18190:	sub	r3, r3, #1
   18194:	cmp	r3, #0
   18198:	str	r3, [r9, #92]	; 0x5c
   1819c:	movlt	r3, #17
   181a0:	strlt	r3, [r9]
   181a4:	ldr	r3, [sp, #8]
   181a8:	ldr	r3, [r3]
   181ac:	ldrb	r3, [r3]
   181b0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   181b4:	ldr	r1, [pc, #2632]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   181b8:	mov	r2, #296	; 0x128
   181bc:	mov	r3, r2
   181c0:	str	r2, [r1]
   181c4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   181c8:	ldr	r2, [pc, #2612]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   181cc:	ldr	r3, [pc, #2280]	; 18abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e64>
   181d0:	str	r3, [r2]
   181d4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   181d8:	ldr	r2, [pc, #2596]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   181dc:	ldr	r3, [pc, #2268]	; 18ac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e68>
   181e0:	str	r3, [r2]
   181e4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   181e8:	ldr	r2, [pc, #2580]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   181ec:	ldr	r3, [pc, #2256]	; 18ac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e6c>
   181f0:	str	r3, [r2]
   181f4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   181f8:	ldr	r1, [pc, #2564]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   181fc:	mov	r2, #332	; 0x14c
   18200:	mov	r3, r2
   18204:	str	r2, [r1]
   18208:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1820c:	ldr	r2, [pc, #2544]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18210:	ldr	r3, [pc, #2224]	; 18ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e70>
   18214:	str	r3, [r2]
   18218:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1821c:	ldr	r2, [pc, #2528]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18220:	ldr	r3, [pc, #2212]	; 18acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e74>
   18224:	str	r3, [r2]
   18228:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1822c:	ldr	r2, [pc, #2512]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18230:	ldr	r3, [pc, #2200]	; 18ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e78>
   18234:	str	r3, [r2]
   18238:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1823c:	ldr	r1, [pc, #2496]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18240:	mov	r2, #284	; 0x11c
   18244:	mov	r3, r2
   18248:	str	r2, [r1]
   1824c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18250:	ldr	r2, [pc, #2476]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18254:	ldr	r3, [pc, #2168]	; 18ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e7c>
   18258:	str	r3, [r2]
   1825c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18260:	ldr	r2, [pc, #2460]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18264:	ldr	r3, [pc, #2156]	; 18ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e80>
   18268:	str	r3, [r2]
   1826c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18270:	ldr	r2, [pc, #2444]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18274:	ldr	r3, [pc, #2144]	; 18adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e84>
   18278:	str	r3, [r2]
   1827c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18280:	ldr	r2, [pc, #2428]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18284:	ldr	r3, [pc, #2132]	; 18ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e88>
   18288:	str	r3, [r2]
   1828c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18290:	ldr	r1, [pc, #2412]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18294:	mov	r2, #328	; 0x148
   18298:	mov	r3, r2
   1829c:	str	r2, [r1]
   182a0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182a4:	ldr	r2, [pc, #2392]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182a8:	ldr	r3, [pc, #2100]	; 18ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e8c>
   182ac:	str	r3, [r2]
   182b0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182b4:	ldr	r1, [pc, #2376]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182b8:	mov	r2, #300	; 0x12c
   182bc:	mov	r3, r2
   182c0:	str	r2, [r1]
   182c4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182c8:	ldr	r2, [pc, #2356]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182cc:	ldr	r3, [pc, #2068]	; 18ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e90>
   182d0:	str	r3, [r2]
   182d4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182d8:	ldr	r2, [pc, #2340]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182dc:	ldr	r3, [pc, #2056]	; 18aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e94>
   182e0:	str	r3, [r2]
   182e4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182e8:	ldr	r2, [pc, #2324]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182ec:	ldr	r3, [pc, #2044]	; 18af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e98>
   182f0:	str	r3, [r2]
   182f4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   182f8:	ldr	r2, [pc, #2308]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   182fc:	ldr	r3, [pc, #2032]	; 18af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e9c>
   18300:	str	r3, [r2]
   18304:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18308:	ldr	r2, [pc, #2292]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1830c:	ldr	r3, [pc, #2020]	; 18af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ea0>
   18310:	str	r3, [r2]
   18314:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18318:	ldr	r2, [pc, #2276]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1831c:	ldr	r3, [pc, #2008]	; 18afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ea4>
   18320:	str	r3, [r2]
   18324:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18328:	ldr	r2, [pc, #2260]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1832c:	ldr	r3, [pc, #1996]	; 18b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ea8>
   18330:	str	r3, [r2]
   18334:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18338:	ldr	r1, [pc, #2244]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1833c:	mov	r2, #304	; 0x130
   18340:	mov	r3, r2
   18344:	str	r2, [r1]
   18348:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1834c:	ldr	r2, [pc, #2224]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18350:	ldr	r3, [pc, #1964]	; 18b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4eac>
   18354:	str	r3, [r2]
   18358:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1835c:	ldr	r2, [pc, #2208]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18360:	ldr	r3, [pc, #1952]	; 18b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4eb0>
   18364:	str	r3, [r2]
   18368:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1836c:	ldr	r2, [pc, #2192]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18370:	ldr	r3, [pc, #1940]	; 18b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4eb4>
   18374:	str	r3, [r2]
   18378:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1837c:	ldr	r2, [pc, #2176]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18380:	ldr	r3, [pc, #1928]	; 18b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4eb8>
   18384:	str	r3, [r2]
   18388:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1838c:	ldr	r1, [pc, #2160]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18390:	mov	r2, #348	; 0x15c
   18394:	mov	r3, r2
   18398:	str	r2, [r1]
   1839c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183a0:	ldr	r2, [pc, #2140]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183a4:	ldr	r3, [pc, #1896]	; 18b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ebc>
   183a8:	str	r3, [r2]
   183ac:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183b0:	ldr	r2, [pc, #2124]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183b4:	ldr	r3, [pc, #1884]	; 18b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ec0>
   183b8:	str	r3, [r2]
   183bc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183c0:	ldr	r1, [pc, #2108]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183c4:	mov	r2, #340	; 0x154
   183c8:	mov	r3, r2
   183cc:	str	r2, [r1]
   183d0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183d4:	ldr	r2, [pc, #2088]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183d8:	ldr	r3, [pc, #1852]	; 18b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ec4>
   183dc:	str	r3, [r2]
   183e0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183e4:	ldr	r1, [pc, #2072]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183e8:	mov	r2, #316	; 0x13c
   183ec:	mov	r3, r2
   183f0:	str	r2, [r1]
   183f4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   183f8:	ldr	r2, [pc, #2052]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   183fc:	ldr	r3, [pc, #1820]	; 18b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ec8>
   18400:	str	r3, [r2]
   18404:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18408:	ldr	r2, [pc, #2036]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1840c:	ldr	r3, [pc, #1808]	; 18b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ecc>
   18410:	str	r3, [r2]
   18414:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18418:	ldr	r2, [pc, #2020]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1841c:	ldr	r3, [pc, #1796]	; 18b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ed0>
   18420:	str	r3, [r2]
   18424:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18428:	ldr	r0, [sp, #8]
   1842c:	ldr	r1, [pc, #1596]	; 18a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e18>
   18430:	ldr	r3, [r9, #88]	; 0x58
   18434:	mov	r2, #1
   18438:	ldr	r1, [r1]
   1843c:	ldr	r0, [r0]
   18440:	bl	13568 <fwrite@plt>
   18444:	b	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   18448:	ldr	r2, [pc, #1972]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1844c:	ldr	r3, [pc, #1752]	; 18b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ed4>
   18450:	str	r3, [r2]
   18454:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18458:	ldr	r1, [pc, #1956]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1845c:	mov	r2, #320	; 0x140
   18460:	mov	r3, r2
   18464:	str	r2, [r1]
   18468:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1846c:	ldr	r2, [pc, #1936]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18470:	ldr	r3, [pc, #1720]	; 18b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ed8>
   18474:	str	r3, [r2]
   18478:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1847c:	ldr	r2, [pc, #1920]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18480:	ldr	r3, [pc, #1708]	; 18b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4edc>
   18484:	str	r3, [r2]
   18488:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1848c:	ldr	r2, [pc, #1904]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18490:	ldr	r3, [pc, #1516]	; 18a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e2c>
   18494:	str	r3, [r2]
   18498:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1849c:	ldr	r2, [pc, #1888]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   184a0:	ldr	r3, [pc, #1504]	; 18a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e30>
   184a4:	str	r3, [r2]
   184a8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   184ac:	ldr	r1, [pc, #1872]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   184b0:	mov	r2, #364	; 0x16c
   184b4:	mov	r3, r2
   184b8:	str	r2, [r1]
   184bc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   184c0:	ldr	r3, [sp, #8]
   184c4:	mov	r2, #17
   184c8:	str	r2, [r9]
   184cc:	ldr	r3, [r3]
   184d0:	ldrb	r3, [r3]
   184d4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   184d8:	ldr	r3, [sp, #8]
   184dc:	ldr	r0, [r3]
   184e0:	bl	135a4 <xstrdup@plt>
   184e4:	ldr	r2, [pc, #1816]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   184e8:	ldr	r3, [pc, #1608]	; 18b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ee0>
   184ec:	str	r0, [r2]
   184f0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   184f4:	ldr	r3, [sp, #8]
   184f8:	ldr	r0, [r3]
   184fc:	bl	135a4 <xstrdup@plt>
   18500:	ldr	r2, [pc, #1788]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18504:	ldr	r3, [pc, #1584]	; 18b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ee4>
   18508:	str	r0, [r2]
   1850c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18510:	ldr	r3, [sp, #8]
   18514:	mov	r1, #19
   18518:	mov	r2, #0
   1851c:	ldr	r3, [r3]
   18520:	str	r1, [r9]
   18524:	str	r2, [r9, #92]	; 0x5c
   18528:	ldrb	r3, [r3]
   1852c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18530:	ldr	r1, [pc, #1740]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18534:	mov	r2, #376	; 0x178
   18538:	mov	r3, r2
   1853c:	str	r2, [r1]
   18540:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18544:	ldr	r2, [pc, #1720]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18548:	ldr	r3, [pc, #1520]	; 18b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ee8>
   1854c:	str	r3, [r2]
   18550:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18554:	ldr	r3, [sp, #8]
   18558:	ldr	r3, [r3]
   1855c:	ldrb	r3, [r3]
   18560:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18564:	ldrb	lr, [r9, #72]	; 0x48
   18568:	ldr	ip, [r9, #68]	; 0x44
   1856c:	ldr	r0, [r9, #60]	; 0x3c
   18570:	ldr	r3, [fp]
   18574:	strb	lr, [r7]
   18578:	ldr	r0, [r0, ip, lsl #2]
   1857c:	sub	r3, r7, r3
   18580:	sub	r3, r3, #1
   18584:	ldr	ip, [r0, #44]	; 0x2c
   18588:	cmp	ip, #0
   1858c:	streq	r1, [r0, #44]	; 0x2c
   18590:	ldreq	lr, [r9, #80]	; 0x50
   18594:	ldreq	ip, [r0, #16]
   18598:	streq	lr, [r0]
   1859c:	ldrne	ip, [r9, #76]	; 0x4c
   185a0:	ldr	r0, [r0, #4]
   185a4:	ldr	lr, [r9, #4]
   185a8:	add	r0, r0, ip
   185ac:	streq	ip, [r9, #76]	; 0x4c
   185b0:	cmp	lr, r0
   185b4:	bls	19208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x55b0>
   185b8:	strd	r2, [sp]
   185bc:	bl	17644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39ec>
   185c0:	mov	r1, #1
   185c4:	ldr	r2, [sp]
   185c8:	cmp	r0, #1
   185cc:	beq	191e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5590>
   185d0:	cmp	r0, #2
   185d4:	ldr	r3, [sp, #4]
   185d8:	beq	192b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5660>
   185dc:	cmp	r0, #0
   185e0:	mov	fp, r3
   185e4:	bne	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   185e8:	ldr	r3, [sp, #8]
   185ec:	ldr	r3, [r3]
   185f0:	add	r7, r3, fp
   185f4:	str	r7, [r9, #4]
   185f8:	bl	170a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3448>
   185fc:	ldr	r3, [sp, #8]
   18600:	ldr	r3, [r3]
   18604:	str	r3, [sp, #12]
   18608:	mov	r2, r0
   1860c:	ldrb	r0, [r7]
   18610:	b	17b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ec0>
   18614:	ldr	r3, [sp, #8]
   18618:	ldr	r0, [pc, #1316]	; 18b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4eec>
   1861c:	ldr	r1, [r3]
   18620:	bl	171b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x355c>
   18624:	b	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   18628:	ldr	r3, [sp, #8]
   1862c:	ldr	r0, [r3]
   18630:	add	r0, r0, #1
   18634:	bl	135a4 <xstrdup@plt>
   18638:	ldr	r3, [pc, #1476]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1863c:	mov	r4, r0
   18640:	str	r0, [r3]
   18644:	bl	137d8 <strlen@plt>
   18648:	ldr	r3, [pc, #1056]	; 18a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e18>
   1864c:	mov	r1, #0
   18650:	ldr	r2, [r3]
   18654:	ldr	r3, [pc, #1452]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   18658:	sub	r2, r2, #2
   1865c:	cmp	r2, r0
   18660:	movcs	r2, r0
   18664:	strb	r1, [r4, r2]
   18668:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1866c:	ldr	ip, [sp, #8]
   18670:	mov	r1, r2
   18674:	ldr	r0, [ip]
   18678:	ldrb	r3, [r0]
   1867c:	cmp	r3, #47	; 0x2f
   18680:	bne	19284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x562c>
   18684:	ldrb	r3, [r0, #1]
   18688:	cmp	r3, #42	; 0x2a
   1868c:	bne	19284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x562c>
   18690:	ldrb	r2, [r9, #72]	; 0x48
   18694:	mov	r3, #2
   18698:	strb	r2, [r7]
   1869c:	ldr	r2, [pc, #972]	; 18a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e18>
   186a0:	str	r1, [ip]
   186a4:	str	r3, [r2]
   186a8:	ldrb	r2, [r1, #2]
   186ac:	mov	r3, #0
   186b0:	strb	r3, [r1, #2]
   186b4:	add	r3, r1, #2
   186b8:	strb	r2, [r9, #72]	; 0x48
   186bc:	str	r3, [r9, #4]
   186c0:	bl	179b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3d58>
   186c4:	b	17afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea4>
   186c8:	ldr	r3, [sp, #8]
   186cc:	ldr	r0, [r3]
   186d0:	add	r0, r0, #2
   186d4:	bl	135a4 <xstrdup@plt>
   186d8:	ldr	r2, [pc, #1316]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   186dc:	mov	r3, #260	; 0x104
   186e0:	str	r0, [r2]
   186e4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   186e8:	ldr	r3, [sp, #8]
   186ec:	ldr	r0, [r3]
   186f0:	bl	135a4 <xstrdup@plt>
   186f4:	ldr	r2, [pc, #1288]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   186f8:	ldr	r3, [pc, #1288]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   186fc:	str	r0, [r2]
   18700:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18704:	ldr	r3, [sp, #8]
   18708:	ldr	r0, [r3]
   1870c:	add	r0, r0, #2
   18710:	bl	135a4 <xstrdup@plt>
   18714:	ldr	r2, [pc, #1256]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18718:	mov	r3, #260	; 0x104
   1871c:	str	r0, [r2]
   18720:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18724:	ldr	r3, [sp, #8]
   18728:	ldr	r0, [r3]
   1872c:	bl	135a4 <xstrdup@plt>
   18730:	ldr	r2, [pc, #1228]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18734:	ldr	r3, [pc, #1228]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   18738:	str	r0, [r2]
   1873c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18740:	ldr	r3, [sp, #8]
   18744:	ldr	r0, [r3]
   18748:	bl	135a4 <xstrdup@plt>
   1874c:	ldr	r2, [pc, #1200]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18750:	ldr	r3, [pc, #1200]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   18754:	str	r0, [r2]
   18758:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1875c:	ldr	r3, [sp, #8]
   18760:	ldr	r0, [r3]
   18764:	bl	135a4 <xstrdup@plt>
   18768:	ldr	r2, [pc, #1172]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1876c:	ldr	r3, [pc, #1172]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   18770:	str	r0, [r2]
   18774:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18778:	ldr	r3, [sp, #8]
   1877c:	ldr	r0, [r3]
   18780:	bl	135a4 <xstrdup@plt>
   18784:	ldr	r2, [pc, #1144]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18788:	ldr	r3, [pc, #1144]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   1878c:	str	r0, [r2]
   18790:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18794:	ldr	r1, [pc, #1128]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18798:	mov	r2, #352	; 0x160
   1879c:	mov	r3, r2
   187a0:	str	r2, [r1]
   187a4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187a8:	ldr	r2, [pc, #1108]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   187ac:	ldr	r3, [pc, #916]	; 18b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef0>
   187b0:	str	r3, [r2]
   187b4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187b8:	ldr	r2, [pc, #1092]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   187bc:	ldr	r3, [pc, #904]	; 18b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef4>
   187c0:	str	r3, [r2]
   187c4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187c8:	ldr	r1, [pc, #1076]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   187cc:	mov	r2, #372	; 0x174
   187d0:	mov	r3, r2
   187d4:	str	r2, [r1]
   187d8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187dc:	ldr	r2, [pc, #1056]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   187e0:	ldr	r3, [pc, #840]	; 18b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ed8>
   187e4:	str	r3, [r2]
   187e8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187ec:	ldr	r2, [pc, #1040]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   187f0:	ldr	r3, [pc, #856]	; 18b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef8>
   187f4:	str	r3, [r2]
   187f8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   187fc:	ldr	r1, [pc, #1024]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18800:	mov	r2, #360	; 0x168
   18804:	mov	r3, r2
   18808:	str	r2, [r1]
   1880c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18810:	ldr	r2, [pc, #1004]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18814:	ldr	r3, [pc, #824]	; 18b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4efc>
   18818:	str	r3, [r2]
   1881c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18820:	ldr	r1, [pc, #988]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18824:	mov	r2, #356	; 0x164
   18828:	mov	r3, r2
   1882c:	str	r2, [r1]
   18830:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18834:	ldr	r2, [pc, #968]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18838:	ldr	r3, [pc, #756]	; 18b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4edc>
   1883c:	str	r3, [r2]
   18840:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18844:	ldr	r2, [pc, #952]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18848:	ldr	r3, [pc, #776]	; 18b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f00>
   1884c:	str	r3, [r2]
   18850:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18854:	ldr	r2, [pc, #936]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18858:	ldr	r3, [pc, #764]	; 18b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f04>
   1885c:	str	r3, [r2]
   18860:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18864:	ldr	r1, [pc, #920]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18868:	mov	r2, #344	; 0x158
   1886c:	mov	r3, r2
   18870:	str	r2, [r1]
   18874:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18878:	ldr	r1, [pc, #900]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1887c:	mov	r2, #384	; 0x180
   18880:	mov	r3, r2
   18884:	str	r2, [r1]
   18888:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1888c:	ldr	r2, [pc, #880]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18890:	ldr	r3, [pc, #712]	; 18b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f08>
   18894:	str	r3, [r2]
   18898:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1889c:	ldr	r2, [pc, #864]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188a0:	ldr	r3, [pc, #764]	; 18ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f4c>
   188a4:	str	r3, [r2]
   188a8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   188ac:	ldr	r2, [pc, #848]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188b0:	ldr	r3, [pc, #684]	; 18b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f0c>
   188b4:	str	r3, [r2]
   188b8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   188bc:	ldr	r2, [pc, #832]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188c0:	ldr	r3, [pc, #672]	; 18b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f10>
   188c4:	str	r3, [r2]
   188c8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   188cc:	ldr	r1, [pc, #816]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188d0:	mov	r2, #352	; 0x160
   188d4:	mov	r3, r2
   188d8:	str	r2, [r1]
   188dc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   188e0:	ldr	r2, [pc, #796]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188e4:	ldr	r3, [pc, #604]	; 18b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef0>
   188e8:	str	r3, [r2]
   188ec:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   188f0:	ldr	r2, [pc, #780]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   188f4:	ldr	r3, [pc, #592]	; 18b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef4>
   188f8:	str	r3, [r2]
   188fc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18900:	ldr	r1, [pc, #764]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18904:	mov	r2, #372	; 0x174
   18908:	mov	r3, r2
   1890c:	str	r2, [r1]
   18910:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18914:	ldr	r2, [pc, #744]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18918:	ldr	r3, [pc, #560]	; 18b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4ef8>
   1891c:	str	r3, [r2]
   18920:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18924:	ldr	r1, [pc, #728]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18928:	mov	r2, #360	; 0x168
   1892c:	mov	r3, r2
   18930:	str	r2, [r1]
   18934:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18938:	ldr	r2, [pc, #708]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1893c:	ldr	r3, [pc, #528]	; 18b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4efc>
   18940:	str	r3, [r2]
   18944:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18948:	ldr	r1, [pc, #692]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1894c:	mov	r2, #356	; 0x164
   18950:	mov	r3, r2
   18954:	str	r2, [r1]
   18958:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1895c:	ldr	r2, [pc, #672]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18960:	ldr	r3, [pc, #292]	; 18a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4e34>
   18964:	str	r3, [r2]
   18968:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1896c:	ldr	r2, [pc, #656]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18970:	ldr	r3, [pc, #488]	; 18b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f08>
   18974:	str	r3, [r2]
   18978:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1897c:	ldr	r2, [pc, #640]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18980:	ldr	r3, [pc, #540]	; 18ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f4c>
   18984:	str	r3, [r2]
   18988:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1898c:	ldr	r2, [pc, #624]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18990:	ldr	r3, [pc, #460]	; 18b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f0c>
   18994:	str	r3, [r2]
   18998:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1899c:	ldr	r2, [pc, #608]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   189a0:	ldr	r3, [pc, #452]	; 18b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f14>
   189a4:	str	r3, [r2]
   189a8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   189ac:	ldr	r2, [pc, #592]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   189b0:	ldr	r3, [pc, #440]	; 18b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f18>
   189b4:	str	r3, [r2]
   189b8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   189bc:	ldr	r2, [pc, #576]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   189c0:	ldr	r3, [pc, #428]	; 18b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f1c>
   189c4:	str	r3, [r2]
   189c8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   189cc:	ldr	r1, [pc, #560]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   189d0:	mov	r2, #45	; 0x2d
   189d4:	mov	r3, r2
   189d8:	str	r2, [r1]
   189dc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   189e0:	ldr	r2, [pc, #540]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   189e4:	ldr	r3, [pc, #396]	; 18b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f20>
   189e8:	str	r3, [r2]
   189ec:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   189f0:	ldrb	r3, [r9, #72]	; 0x48
   189f4:	ldr	r0, [r9, #8]
   189f8:	strb	r3, [r7]
   189fc:	lsl	r1, r0, #1
   18a00:	ldr	r7, [r9, #12]
   18a04:	b	17bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f74>
   18a08:	ldr	r2, [pc, #500]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18a0c:	ldr	r3, [pc, #340]	; 18b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f10>
   18a10:	str	r3, [r2]
   18a14:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18a18:	ldr	r4, [r9, #16]
   18a1c:	sub	r4, r4, #1
   18a20:	cmp	r4, #0
   18a24:	str	r4, [r9, #16]
   18a28:	bne	191ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5554>
   18a2c:	ldr	r2, [pc, #448]	; 18bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f9c>
   18a30:	mov	r3, r4
   18a34:	str	r4, [r2]
   18a38:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18a3c:	andeq	r7, ip, r4, ror sl
   18a40:	andeq	r7, ip, r0, asr r7
   18a44:	strdeq	r7, [ip], -ip
   18a48:	andeq	r8, ip, ip, lsr #32
   18a4c:	andeq	r8, ip, r0, lsr r0
   18a50:	andeq	r6, r4, r8, lsr r4
   18a54:	strdeq	r7, [r4], -r0
   18a58:	andeq	r0, r0, r8, lsl r7
   18a5c:	andeq	r5, r4, r8, ror #10
   18a60:	andeq	r4, r4, r8, lsr r7
   18a64:	andeq	r4, r4, r8, lsr r6
   18a68:	andeq	r8, r4, r4, ror sl
   18a6c:	andeq	r0, r0, lr, ror #22
   18a70:	andeq	r8, ip, r8, lsr r0
   18a74:	andeq	r0, r0, r1, ror r1
   18a78:	andeq	r0, r0, pc, ror #2
   18a7c:	andeq	r0, r0, sl, ror r1
   18a80:	andeq	r0, r0, r3, lsl #3
   18a84:	andeq	r0, r0, r1, ror #2
   18a88:	andeq	r0, r0, sp, ror #2
   18a8c:	andeq	r0, r0, fp, ror #2
   18a90:	andeq	r0, r0, r7, asr r1
   18a94:	andeq	r0, r0, r2, lsr r1
   18a98:	andeq	r0, r0, pc, ror r1
   18a9c:	andeq	r0, r0, lr, ror r1
   18aa0:	andeq	r0, r0, sp, ror r1
   18aa4:	muleq	r4, r0, r3
   18aa8:	andeq	r0, r0, r9, lsr r1
   18aac:	andeq	r0, r0, r7, lsr r1
   18ab0:	andeq	r0, r0, r6, lsr r1
   18ab4:	andeq	r0, r0, r9, lsr #2
   18ab8:	andeq	r0, r0, sl, lsr #2
   18abc:	andeq	r0, r0, r7, lsr #2
   18ac0:	andeq	r0, r0, sl, lsr r1
   18ac4:	andeq	r0, r0, sp, asr #2
   18ac8:	andeq	r0, r0, fp, asr #2
   18acc:	andeq	r0, r0, lr, lsl r1
   18ad0:	andeq	r0, r0, sp, lsl r1
   18ad4:	andeq	r0, r0, fp, lsl r1
   18ad8:	andeq	r0, r0, sl, lsl r1
   18adc:	andeq	r0, r0, sl, asr #2
   18ae0:	andeq	r0, r0, r9, asr #2
   18ae4:	andeq	r0, r0, lr, lsr #2
   18ae8:	andeq	r0, r0, r7, asr #2
   18aec:	andeq	r0, r0, pc, asr #2
   18af0:	andeq	r0, r0, r3, lsr #2
   18af4:	andeq	r0, r0, r2, lsr #2
   18af8:	andeq	r0, r0, r1, lsr #2
   18afc:	andeq	r0, r0, pc, lsl r1
   18b00:	andeq	r0, r0, pc, lsr #2
   18b04:	andeq	r0, r0, sp, lsr #2
   18b08:	andeq	r0, r0, r5, asr r1
   18b0c:	andeq	r0, r0, r1, asr r1
   18b10:	andeq	r0, r0, fp, lsr r1
   18b14:	andeq	r0, r0, r3, asr r1
   18b18:	andeq	r0, r0, r2, asr r1
   18b1c:	andeq	r0, r0, sp, lsr r1
   18b20:	andeq	r0, r0, r1, asr #2
   18b24:	andeq	r0, r0, lr, lsr r1
   18b28:	andeq	r0, r0, r1, lsr r1
   18b2c:	andeq	r0, r0, fp, lsr #2
   18b30:	andeq	r0, r0, r3, ror r1
   18b34:	andeq	r0, r0, r9, ror #2
   18b38:	andeq	r0, r0, r5, ror r1
   18b3c:	andeq	r0, r0, r6, ror r1
   18b40:	andeq	r0, r0, r7, ror r1
   18b44:	andeq	sl, r4, r4, lsl #7
   18b48:	andeq	r0, r0, pc, asr r1
   18b4c:	andeq	r0, r0, lr, asr r1
   18b50:	andeq	r0, r0, r2, ror r1
   18b54:	andeq	r0, r0, r5, ror #2
   18b58:	andeq	r0, r0, sl, asr r1
   18b5c:	andeq	r0, r0, r9, asr r1
   18b60:	andeq	r0, r0, sp, asr r1
   18b64:	andeq	r0, r0, r6, asr r1
   18b68:	andeq	r0, r0, r3, ror #2
   18b6c:	andeq	r0, r0, r2, lsl #3
   18b70:	andeq	r0, r0, r1, lsl #3
   18b74:	andeq	r0, r0, fp, ror r1
   18b78:	andeq	r0, r0, fp, asr r1
   18b7c:	andeq	r0, r0, r2, ror #2
   18b80:	andeq	r0, r0, pc, lsr r1
   18b84:	andeq	r0, r0, r6, ror #2
   18b88:	andeq	r0, r0, r7, ror #2
   18b8c:	andeq	r0, r0, r6, asr #2
   18b90:	andeq	r0, r0, r5, asr #2
   18b94:	andeq	r0, r0, r2, asr #2
   18b98:	andeq	r0, r0, r3, asr #2
   18b9c:	andeq	r0, r0, r6, lsr #2
   18ba0:	andeq	r0, r0, r5, lsr #2
   18ba4:	andeq	r0, r0, r7, lsl r1
   18ba8:	andeq	r0, r0, r9, lsl r1
   18bac:	andeq	r0, r0, r9, ror r1
   18bb0:	andeq	r0, r0, lr, asr #2
   18bb4:	andeq	r0, r0, r5, lsr r1
   18bb8:	andeq	r0, r0, r3, lsr r1
   18bbc:	andeq	r0, r0, lr, lsl #2
   18bc0:	andeq	r0, r0, fp, lsl #2
   18bc4:	andeq	r0, r0, r7, lsl #2
   18bc8:	andeq	r0, r0, r6, lsl #2
   18bcc:	andeq	r0, r0, r5, lsl #2
   18bd0:	andeq	r0, r0, r3, lsl r1
   18bd4:	andeq	r0, r0, r1, lsl r1
   18bd8:	andeq	r0, r0, r2, lsl r1
   18bdc:	andeq	r0, r0, pc, lsl #2
   18be0:	andeq	r0, r0, sp, lsl #2
   18be4:	andeq	r0, r0, sl, lsl #2
   18be8:	andeq	r0, r0, r9, lsl #2
   18bec:	andeq	r8, ip, r8, lsr r0
   18bf0:	andeq	r8, ip, r8, asr r0
   18bf4:	andeq	r8, ip, r4, lsr r0
   18bf8:	andeq	r0, r0, r6, lsl r1
   18bfc:	andeq	r4, r4, r8, lsr r7
   18c00:	andeq	r8, r4, r4, ror sl
   18c04:	andeq	r8, ip, ip, lsl r0
   18c08:	andeq	r0, r0, r3, lsl #2
   18c0c:	andeq	r0, r0, r2, lsl #2
   18c10:			; <UNDEFINED> instruction: 0x000472b0
   18c14:	andeq	sl, r4, ip, ror r3
   18c18:	andeq	sl, r4, r0, lsr #7
   18c1c:	ldr	r1, [pc, #-48]	; 18bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f9c>
   18c20:	ldr	r0, [pc, #-36]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c24:	ldr	r3, [pc, #-176]	; 18b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f24>
   18c28:	ldr	r2, [r1]
   18c2c:	str	r3, [r0]
   18c30:	add	r2, r2, #1
   18c34:	str	r2, [r1]
   18c38:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c3c:	ldr	r2, [pc, #-64]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c40:	ldr	r3, [pc, #-200]	; 18b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f28>
   18c44:	str	r3, [r2]
   18c48:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c4c:	ldr	r2, [pc, #-80]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c50:	ldr	r3, [pc, #-212]	; 18b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f2c>
   18c54:	str	r3, [r2]
   18c58:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c5c:	ldr	r2, [pc, #-96]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c60:	ldr	r3, [pc, #-224]	; 18b88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f30>
   18c64:	str	r3, [r2]
   18c68:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c6c:	ldr	r2, [pc, #-112]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c70:	ldr	r3, [pc, #-236]	; 18b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f34>
   18c74:	str	r3, [r2]
   18c78:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c7c:	ldr	r2, [pc, #-128]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c80:	ldr	r3, [pc, #-248]	; 18b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f38>
   18c84:	str	r3, [r2]
   18c88:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c8c:	ldr	r2, [pc, #-144]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18c90:	ldr	r3, [pc, #-260]	; 18b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f3c>
   18c94:	str	r3, [r2]
   18c98:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18c9c:	ldr	r1, [pc, #-160]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ca0:	mov	r2, #324	; 0x144
   18ca4:	mov	r3, r2
   18ca8:	str	r2, [r1]
   18cac:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18cb0:	ldr	r2, [pc, #-180]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18cb4:	ldr	r3, [pc, #-292]	; 18b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f40>
   18cb8:	str	r3, [r2]
   18cbc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18cc0:	ldr	r2, [pc, #-196]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18cc4:	ldr	r3, [pc, #-304]	; 18b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f44>
   18cc8:	str	r3, [r2]
   18ccc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18cd0:	ldr	r2, [pc, #-212]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18cd4:	ldr	r3, [pc, #-316]	; 18ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f48>
   18cd8:	str	r3, [r2]
   18cdc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ce0:	ldr	r1, [pc, #-228]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ce4:	mov	r2, #292	; 0x124
   18ce8:	mov	r3, r2
   18cec:	str	r2, [r1]
   18cf0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18cf4:	ldr	r2, [pc, #-248]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18cf8:	ldr	r3, [pc, #-348]	; 18ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f4c>
   18cfc:	str	r3, [r2]
   18d00:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d04:	ldr	r1, [pc, #-264]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d08:	mov	r2, #336	; 0x150
   18d0c:	mov	r3, r2
   18d10:	str	r2, [r1]
   18d14:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d18:	ldr	r2, [pc, #-284]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d1c:	ldr	r3, [pc, #-380]	; 18ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f50>
   18d20:	str	r3, [r2]
   18d24:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d28:	ldr	r1, [pc, #-300]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d2c:	mov	r2, #280	; 0x118
   18d30:	mov	r3, r2
   18d34:	str	r2, [r1]
   18d38:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d3c:	ldr	r2, [pc, #-320]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d40:	ldr	r3, [pc, #-412]	; 18bac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f54>
   18d44:	str	r3, [r2]
   18d48:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d4c:	ldr	r2, [pc, #-336]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d50:	ldr	r3, [pc, #-424]	; 18bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f58>
   18d54:	str	r3, [r2]
   18d58:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d5c:	ldr	r2, [pc, #-352]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d60:	ldr	r3, [pc, #-436]	; 18bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f5c>
   18d64:	str	r3, [r2]
   18d68:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d6c:	ldr	r1, [pc, #-368]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d70:	mov	r2, #308	; 0x134
   18d74:	mov	r3, r2
   18d78:	str	r2, [r1]
   18d7c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d80:	ldr	r2, [pc, #-388]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d84:	ldr	r3, [pc, #-468]	; 18bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f60>
   18d88:	str	r3, [r2]
   18d8c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18d90:	ldr	r1, [pc, #-404]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18d94:	mov	r2, #59	; 0x3b
   18d98:	mov	r3, r2
   18d9c:	str	r2, [r1]
   18da0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18da4:	ldr	r1, [pc, #-424]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18da8:	mov	r2, #58	; 0x3a
   18dac:	mov	r3, r2
   18db0:	str	r2, [r1]
   18db4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18db8:	ldr	r1, [pc, #-444]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18dbc:	mov	r2, #40	; 0x28
   18dc0:	mov	r3, r2
   18dc4:	str	r2, [r1]
   18dc8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18dcc:	ldr	r1, [pc, #-464]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18dd0:	mov	r2, #41	; 0x29
   18dd4:	mov	r3, r2
   18dd8:	str	r2, [r1]
   18ddc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18de0:	ldr	r1, [pc, #-484]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18de4:	mov	r2, #123	; 0x7b
   18de8:	mov	r3, r2
   18dec:	str	r2, [r1]
   18df0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18df4:	ldr	r1, [pc, #-504]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18df8:	mov	r2, #125	; 0x7d
   18dfc:	mov	r3, r2
   18e00:	str	r2, [r1]
   18e04:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e08:	ldr	r1, [pc, #-524]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e0c:	mov	r2, #61	; 0x3d
   18e10:	mov	r3, r2
   18e14:	str	r2, [r1]
   18e18:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e1c:	ldr	r1, [pc, #-544]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e20:	mov	r2, #60	; 0x3c
   18e24:	mov	r3, r2
   18e28:	str	r2, [r1]
   18e2c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e30:	ldr	r1, [pc, #-564]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e34:	mov	r2, #37	; 0x25
   18e38:	mov	r3, r2
   18e3c:	str	r2, [r1]
   18e40:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e44:	ldr	r1, [pc, #-584]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e48:	mov	r2, #47	; 0x2f
   18e4c:	mov	r3, r2
   18e50:	str	r2, [r1]
   18e54:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e58:	ldr	r1, [pc, #-604]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e5c:	mov	r2, #45	; 0x2d
   18e60:	mov	r3, r2
   18e64:	str	r2, [r1]
   18e68:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e6c:	ldr	r1, [pc, #-624]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e70:	mov	r2, #43	; 0x2b
   18e74:	mov	r3, r2
   18e78:	str	r2, [r1]
   18e7c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e80:	ldr	r1, [pc, #-644]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e84:	mov	r2, #42	; 0x2a
   18e88:	mov	r3, r2
   18e8c:	str	r2, [r1]
   18e90:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18e94:	ldr	r1, [pc, #-664]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18e98:	mov	r2, #63	; 0x3f
   18e9c:	mov	r3, r2
   18ea0:	str	r2, [r1]
   18ea4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ea8:	ldr	r1, [pc, #-684]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18eac:	mov	r2, #33	; 0x21
   18eb0:	mov	r3, r2
   18eb4:	str	r2, [r1]
   18eb8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ebc:	ldr	r1, [pc, #-704]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ec0:	mov	r2, #126	; 0x7e
   18ec4:	mov	r3, r2
   18ec8:	str	r2, [r1]
   18ecc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ed0:	ldr	r1, [pc, #-724]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ed4:	mov	r2, #124	; 0x7c
   18ed8:	mov	r3, r2
   18edc:	str	r2, [r1]
   18ee0:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ee4:	ldr	r1, [pc, #-744]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ee8:	mov	r2, #38	; 0x26
   18eec:	mov	r3, r2
   18ef0:	str	r2, [r1]
   18ef4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ef8:	ldr	r1, [pc, #-764]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18efc:	mov	r2, #44	; 0x2c
   18f00:	mov	r3, r2
   18f04:	str	r2, [r1]
   18f08:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f0c:	ldr	r1, [pc, #-784]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f10:	mov	r2, #62	; 0x3e
   18f14:	mov	r3, r2
   18f18:	str	r2, [r1]
   18f1c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f20:	ldr	r2, [pc, #-804]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f24:	ldr	r3, [pc, #-880]	; 18bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f64>
   18f28:	str	r3, [r2]
   18f2c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f30:	ldr	r1, [pc, #-820]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f34:	mov	r2, #268	; 0x10c
   18f38:	mov	r3, r2
   18f3c:	str	r2, [r1]
   18f40:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f44:	ldr	r2, [pc, #-840]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f48:	ldr	r3, [pc, #-912]	; 18bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f68>
   18f4c:	str	r3, [r2]
   18f50:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f54:	ldr	r1, [pc, #-856]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f58:	mov	r2, #264	; 0x108
   18f5c:	mov	r3, r2
   18f60:	str	r2, [r1]
   18f64:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f68:	ldr	r2, [pc, #-876]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f6c:	ldr	r3, [pc, #-944]	; 18bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f6c>
   18f70:	str	r3, [r2]
   18f74:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f78:	ldr	r2, [pc, #-892]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f7c:	ldr	r3, [pc, #-956]	; 18bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f70>
   18f80:	str	r3, [r2]
   18f84:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f88:	ldr	r2, [pc, #-908]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f8c:	ldr	r3, [pc, #-968]	; 18bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f74>
   18f90:	str	r3, [r2]
   18f94:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18f98:	ldr	r1, [pc, #-924]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18f9c:	mov	r2, #276	; 0x114
   18fa0:	mov	r3, r2
   18fa4:	str	r2, [r1]
   18fa8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18fac:	ldr	r2, [pc, #-944]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18fb0:	ldr	r3, [pc, #-1000]	; 18bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f78>
   18fb4:	str	r3, [r2]
   18fb8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18fbc:	ldr	r2, [pc, #-960]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18fc0:	ldr	r3, [pc, #-1012]	; 18bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f7c>
   18fc4:	str	r3, [r2]
   18fc8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18fcc:	ldr	r2, [pc, #-976]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18fd0:	ldr	r3, [pc, #-1024]	; 18bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f80>
   18fd4:	str	r3, [r2]
   18fd8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18fdc:	ldr	r1, [pc, #-992]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18fe0:	mov	r2, #272	; 0x110
   18fe4:	mov	r3, r2
   18fe8:	str	r2, [r1]
   18fec:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   18ff0:	ldr	r2, [pc, #-1012]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   18ff4:	ldr	r3, [pc, #-1056]	; 18bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f84>
   18ff8:	str	r3, [r2]
   18ffc:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19000:	ldr	r2, [pc, #-1028]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19004:	ldr	r3, [pc, #-1068]	; 18be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f88>
   19008:	str	r3, [r2]
   1900c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19010:	ldr	r2, [pc, #-1044]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19014:	ldr	r3, [pc, #-1080]	; 18be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f8c>
   19018:	str	r3, [r2]
   1901c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19020:	ldr	r2, [pc, #-1060]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19024:	ldr	r3, [pc, #-1092]	; 18be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f90>
   19028:	str	r3, [r2]
   1902c:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19030:	ldr	r1, [pc, #-1076]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19034:	mov	r2, #91	; 0x5b
   19038:	mov	r3, r2
   1903c:	str	r2, [r1]
   19040:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19044:	ldr	r1, [pc, #-1096]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19048:	mov	r2, #93	; 0x5d
   1904c:	mov	r3, r2
   19050:	str	r2, [r1]
   19054:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19058:	ldr	r3, [sp, #8]
   1905c:	mov	r1, #0
   19060:	ldr	r4, [pc, #-1124]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19064:	ldr	r0, [r3]
   19068:	ldrb	r3, [r0]
   1906c:	cmp	r3, #36	; 0x24
   19070:	moveq	r2, #16
   19074:	movne	r2, #0
   19078:	addeq	r0, r0, #1
   1907c:	bl	13250 <bfd_scan_vma@plt>
   19080:	ldr	r3, [sp, #8]
   19084:	ldr	r2, [pc, #-1184]	; 18bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f94>
   19088:	mov	r1, #0
   1908c:	ldr	r3, [r3]
   19090:	ldr	r2, [r2]
   19094:	add	r2, r3, r2
   19098:	strd	r0, [r4]
   1909c:	ldrb	r2, [r2, #-1]
   190a0:	and	r2, r2, #223	; 0xdf
   190a4:	cmp	r2, #77	; 0x4d
   190a8:	beq	192a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5650>
   190ac:	cmp	r2, #75	; 0x4b
   190b0:	beq	19298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5640>
   190b4:	ldrb	r2, [r3]
   190b8:	cmp	r2, #48	; 0x30
   190bc:	ldrne	r3, [pc, #-1208]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   190c0:	bne	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   190c4:	ldrb	r2, [r3, #1]
   190c8:	and	r2, r2, #223	; 0xdf
   190cc:	cmp	r2, #88	; 0x58
   190d0:	ldrne	r3, [pc, #-1228]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   190d4:	bne	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   190d8:	add	r0, r3, #2
   190dc:	bl	135a4 <xstrdup@plt>
   190e0:	ldr	r3, [pc, #-1244]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   190e4:	str	r0, [r4, #4]
   190e8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   190ec:	ldr	r3, [sp, #8]
   190f0:	mov	r1, #0
   190f4:	ldr	r0, [r3]
   190f8:	ldr	r3, [pc, #-1300]	; 18bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f94>
   190fc:	ldr	r3, [r3]
   19100:	add	r3, r0, r3
   19104:	ldrb	r3, [r3, #-1]
   19108:	sub	r3, r3, #66	; 0x42
   1910c:	uxtb	r3, r3
   19110:	cmp	r3, #54	; 0x36
   19114:	movhi	r2, #10
   19118:	ldrls	r2, [pc, #-1296]	; 18c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb8>
   1911c:	addls	r3, r3, r2
   19120:	ldrsbls	r2, [r3, #8]
   19124:	bl	13250 <bfd_scan_vma@plt>
   19128:	ldr	r2, [pc, #-1324]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1912c:	mov	r1, #0
   19130:	ldr	r3, [pc, #-1324]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   19134:	strd	r0, [r2]
   19138:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1913c:	ldr	r3, [sp, #8]
   19140:	mov	r2, #16
   19144:	mov	r1, #0
   19148:	ldr	r0, [r3]
   1914c:	add	r0, r0, #1
   19150:	bl	13250 <bfd_scan_vma@plt>
   19154:	ldr	r2, [pc, #-1368]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   19158:	mov	r1, #0
   1915c:	ldr	r3, [pc, #-1368]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   19160:	strd	r0, [r2]
   19164:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19168:	ldr	r1, [pc, #-1388]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1916c:	mov	r2, #61	; 0x3d
   19170:	mov	r3, r2
   19174:	str	r2, [r1]
   19178:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   1917c:	ldr	r3, [sp, #8]
   19180:	ldr	r0, [r3]
   19184:	bl	135a4 <xstrdup@plt>
   19188:	ldr	r2, [pc, #-1420]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1918c:	ldr	r3, [pc, #-1420]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   19190:	str	r0, [r2]
   19194:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19198:	ldr	r1, [pc, #-1436]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1919c:	mov	r2, #43	; 0x2b
   191a0:	mov	r3, r2
   191a4:	str	r2, [r1]
   191a8:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   191ac:	add	r4, r9, r4, lsl #2
   191b0:	ldr	r0, [r4, #96]	; 0x60
   191b4:	bl	1733c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36e4>
   191b8:	ldr	r1, [pc, #-1488]	; 18bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f98>
   191bc:	ldr	r2, [r4, #176]	; 0xb0
   191c0:	ldr	r0, [pc, #-1492]	; 18bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4f9c>
   191c4:	ldrb	r3, [r1]
   191c8:	and	r2, r2, #1
   191cc:	ldr	ip, [r4, #136]	; 0x88
   191d0:	bic	r3, r3, #8
   191d4:	orr	r3, r3, r2, lsl #3
   191d8:	strb	r3, [r1]
   191dc:	str	ip, [r0]
   191e0:	ldr	r3, [pc, #-1520]	; 18bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fa0>
   191e4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   191e8:	ldr	r3, [r9]
   191ec:	ldr	r0, [fp]
   191f0:	sub	r3, r3, #1
   191f4:	str	r0, [r9, #4]
   191f8:	add	r3, r3, r3, lsr #31
   191fc:	asr	r3, r3, #1
   19200:	add	r3, r3, #203	; 0xcb
   19204:	b	17c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3fb8>
   19208:	ldr	r7, [fp]
   1920c:	add	r7, r7, r3
   19210:	str	r7, [r9, #4]
   19214:	bl	170a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3448>
   19218:	ldr	r3, [pc, #-1572]	; 18bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fa4>
   1921c:	lsl	r1, r0, #1
   19220:	ldrsh	r3, [r3, r1]
   19224:	cmp	r3, #0
   19228:	strne	r0, [r9, #8]
   1922c:	strne	r7, [r9, #12]
   19230:	b	19238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x55e0>
   19234:	ldrsh	r0, [r6, r2]
   19238:	lsl	r2, r0, #1
   1923c:	ldrh	r3, [r4, r2]
   19240:	add	r3, r3, #1
   19244:	lsl	r3, r3, #1
   19248:	ldrsh	ip, [r5, r3]
   1924c:	cmp	r0, ip
   19250:	bne	19234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x55dc>
   19254:	ldr	r2, [pc, #-1628]	; 18c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fa8>
   19258:	ldrh	r3, [r2, r3]
   1925c:	ldr	r2, [fp]
   19260:	cmp	r3, r8
   19264:	beq	17bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f74>
   19268:	cmp	r3, #0
   1926c:	beq	17bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f74>
   19270:	add	r7, r7, #1
   19274:	str	r2, [sp, #12]
   19278:	str	r7, [r9, #4]
   1927c:	mov	r2, r3
   19280:	b	1860c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x49b4>
   19284:	bl	135a4 <xstrdup@plt>
   19288:	ldr	r2, [pc, #-1676]	; 18c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fac>
   1928c:	ldr	r3, [pc, #-1676]	; 18c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb0>
   19290:	str	r0, [r2]
   19294:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   19298:	lsl	r0, r0, #10
   1929c:	str	r0, [r4]
   192a0:	ldr	r3, [pc, #-1692]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   192a4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   192a8:	lsl	r0, r0, #20
   192ac:	str	r0, [r4]
   192b0:	ldr	r3, [pc, #-1708]	; 18c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb4>
   192b4:	b	17fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4368>
   192b8:	ldr	r1, [r9, #68]	; 0x44
   192bc:	ldr	r2, [r9, #60]	; 0x3c
   192c0:	ldr	r3, [r9, #76]	; 0x4c
   192c4:	ldr	r2, [r2, r1, lsl #2]
   192c8:	ldr	r7, [r2, #4]
   192cc:	add	r7, r7, r3
   192d0:	str	r7, [r9, #4]
   192d4:	bl	170a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3448>
   192d8:	ldr	r2, [fp]
   192dc:	lsl	r1, r0, #1
   192e0:	b	17bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f74>
   192e4:	ldr	r2, [pc, #-1756]	; 18c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fb8>
   192e8:	mov	r1, #131	; 0x83
   192ec:	ldr	r0, [pc, #-1760]	; 18c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fbc>
   192f0:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   192f4:	ldr	r0, [pc, #-1764]	; 18c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4fc0>
   192f8:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   192fc:	push	{r4, r5, r6, lr}
   19300:	subs	r4, r0, #0
   19304:	popeq	{r4, r5, r6, pc}
   19308:	bl	172a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3648>
   1930c:	ldr	r3, [pc, #136]	; 1939c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5744>
   19310:	ldr	r2, [r3, #60]	; 0x3c
   19314:	cmp	r2, #0
   19318:	beq	19390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5738>
   1931c:	ldr	r1, [r3, #68]	; 0x44
   19320:	ldr	r0, [r2, r1, lsl #2]
   19324:	lsl	ip, r1, #2
   19328:	cmp	r0, #0
   1932c:	add	r0, r2, ip
   19330:	beq	19360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5708>
   19334:	ldr	lr, [r3, #4]
   19338:	ldrb	r5, [r3, #72]	; 0x48
   1933c:	add	r0, ip, #4
   19340:	add	r0, r2, r0
   19344:	strb	r5, [lr]
   19348:	ldr	r2, [r2, r1, lsl #2]
   1934c:	ldr	ip, [r3, #76]	; 0x4c
   19350:	add	r1, r1, #1
   19354:	str	lr, [r2, #8]
   19358:	str	r1, [r3, #68]	; 0x44
   1935c:	str	ip, [r2, #16]
   19360:	ldr	r2, [r4, #8]
   19364:	ldr	ip, [pc, #52]	; 193a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5748>
   19368:	ldr	r1, [r4]
   1936c:	str	r4, [r0]
   19370:	str	r1, [r3, #80]	; 0x50
   19374:	str	r2, [ip]
   19378:	ldrb	r0, [r2]
   1937c:	ldr	r1, [r4, #16]
   19380:	str	r2, [r3, #4]
   19384:	strb	r0, [r3, #72]	; 0x48
   19388:	str	r1, [r3, #76]	; 0x4c
   1938c:	pop	{r4, r5, r6, pc}
   19390:	ldr	r0, [r3, #68]	; 0x44
   19394:	lsl	r0, r0, #2
   19398:	b	19360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5708>
   1939c:	andeq	r7, ip, r4, ror sl
   193a0:	andeq	r8, ip, ip, lsr #32
   193a4:	push	{r4, r5, r6, lr}
   193a8:	ldr	r4, [pc, #108]	; 1941c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x57c4>
   193ac:	ldr	r6, [r4, #60]	; 0x3c
   193b0:	cmp	r6, #0
   193b4:	popeq	{r4, r5, r6, pc}
   193b8:	ldr	r5, [r4, #68]	; 0x44
   193bc:	ldr	r0, [r6, r5, lsl #2]
   193c0:	cmp	r0, #0
   193c4:	popeq	{r4, r5, r6, pc}
   193c8:	bl	173dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3784>
   193cc:	cmp	r5, #0
   193d0:	mov	r3, #0
   193d4:	str	r3, [r6, r5, lsl #2]
   193d8:	popeq	{r4, r5, r6, pc}
   193dc:	sub	r5, r5, #1
   193e0:	str	r5, [r4, #68]	; 0x44
   193e4:	ldr	r3, [r6, r5, lsl #2]
   193e8:	cmp	r3, #0
   193ec:	popeq	{r4, r5, r6, pc}
   193f0:	ldr	r2, [r3, #8]
   193f4:	ldr	ip, [pc, #36]	; 19420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x57c8>
   193f8:	ldr	r0, [r3]
   193fc:	ldr	r1, [r3, #16]
   19400:	str	r2, [ip]
   19404:	str	r0, [r4, #80]	; 0x50
   19408:	ldrb	r3, [r2]
   1940c:	str	r2, [r4, #4]
   19410:	str	r1, [r4, #76]	; 0x4c
   19414:	strb	r3, [r4, #72]	; 0x48
   19418:	pop	{r4, r5, r6, pc}
   1941c:	andeq	r7, ip, r4, ror sl
   19420:	andeq	r8, ip, ip, lsr #32
   19424:	cmp	r1, #1
   19428:	push	{r4, r5, r6, r7, r8, lr}
   1942c:	bls	1949c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5844>
   19430:	sub	r7, r1, #2
   19434:	ldrb	r4, [r0, r7]
   19438:	cmp	r4, #0
   1943c:	bne	1949c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5844>
   19440:	add	r1, r0, r1
   19444:	ldrb	r6, [r1, #-1]
   19448:	cmp	r6, #0
   1944c:	bne	19494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x583c>
   19450:	mov	r5, r0
   19454:	mov	r0, #48	; 0x30
   19458:	bl	13700 <malloc@plt>
   1945c:	subs	r4, r0, #0
   19460:	beq	194a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5850>
   19464:	mov	r3, #1
   19468:	str	r7, [r4, #12]
   1946c:	str	r5, [r4, #4]
   19470:	str	r5, [r4, #8]
   19474:	str	r6, [r4, #20]
   19478:	str	r6, [r4]
   1947c:	str	r7, [r4, #16]
   19480:	str	r6, [r4, #24]
   19484:	str	r6, [r4, #40]	; 0x28
   19488:	str	r6, [r4, #44]	; 0x2c
   1948c:	str	r3, [r4, #28]
   19490:	bl	1733c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36e4>
   19494:	mov	r0, r4
   19498:	pop	{r4, r5, r6, r7, r8, pc}
   1949c:	mov	r4, #0
   194a0:	mov	r0, r4
   194a4:	pop	{r4, r5, r6, r7, r8, pc}
   194a8:	ldr	r0, [pc]	; 194b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5858>
   194ac:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   194b0:	ldrdeq	sl, [r4], -r4
   194b4:	push	{r4, r5, r6, lr}
   194b8:	add	r6, r1, #2
   194bc:	mov	r4, r0
   194c0:	mov	r0, r6
   194c4:	mov	r5, r1
   194c8:	bl	13700 <malloc@plt>
   194cc:	subs	lr, r0, #0
   194d0:	beq	19528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58d0>
   194d4:	cmp	r5, #0
   194d8:	subne	r0, r4, #1
   194dc:	addne	ip, r0, r5
   194e0:	subne	r3, lr, #1
   194e4:	beq	194f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58a0>
   194e8:	ldrb	r2, [r0, #1]!
   194ec:	cmp	r0, ip
   194f0:	strb	r2, [r3, #1]!
   194f4:	bne	194e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5890>
   194f8:	add	r2, lr, r5
   194fc:	mov	r3, #0
   19500:	strb	r3, [r2, #1]
   19504:	mov	r1, r6
   19508:	strb	r3, [lr, r5]
   1950c:	mov	r0, lr
   19510:	bl	19424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x57cc>
   19514:	subs	r3, r0, #0
   19518:	beq	19530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58d8>
   1951c:	mov	r2, #1
   19520:	str	r2, [r3, #20]
   19524:	pop	{r4, r5, r6, pc}
   19528:	ldr	r0, [pc, #8]	; 19538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58e0>
   1952c:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   19530:	ldr	r0, [pc, #4]	; 1953c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58e4>
   19534:	bl	17278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3620>
   19538:	andeq	sl, r4, r0, lsl #8
   1953c:	andeq	sl, r4, ip, lsr #8
   19540:	push	{r4, lr}
   19544:	mov	r4, r0
   19548:	bl	137d8 <strlen@plt>
   1954c:	mov	r1, r0
   19550:	mov	r0, r4
   19554:	pop	{r4, lr}
   19558:	b	194b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x585c>
   1955c:	ldr	r3, [pc, #4]	; 19568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5910>
   19560:	ldr	r0, [r3]
   19564:	bx	lr
   19568:	andeq	r7, ip, r4, lsr #7
   1956c:	ldr	r3, [pc, #4]	; 19578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5920>
   19570:	ldr	r0, [r3, #80]	; 0x50
   19574:	bx	lr
   19578:	andeq	r7, ip, r4, ror sl
   1957c:	ldr	r3, [pc, #4]	; 19588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5930>
   19580:	ldr	r0, [r3, #88]	; 0x58
   19584:	bx	lr
   19588:	andeq	r7, ip, r4, ror sl
   1958c:	ldr	r3, [pc, #4]	; 19598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5940>
   19590:	ldr	r0, [r3]
   19594:	bx	lr
   19598:	andeq	r8, ip, r8, lsr r0
   1959c:	ldr	r3, [pc, #4]	; 195a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5950>
   195a0:	ldr	r0, [r3]
   195a4:	bx	lr
   195a8:	andeq	r8, ip, ip, lsr #32
   195ac:	ldr	r3, [pc, #4]	; 195b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5960>
   195b0:	str	r0, [r3]
   195b4:	bx	lr
   195b8:	andeq	r7, ip, r4, lsr #7
   195bc:	ldr	r3, [pc, #4]	; 195c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5970>
   195c0:	str	r0, [r3, #80]	; 0x50
   195c4:	bx	lr
   195c8:	andeq	r7, ip, r4, ror sl
   195cc:	ldr	r3, [pc, #4]	; 195d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5980>
   195d0:	str	r0, [r3, #88]	; 0x58
   195d4:	bx	lr
   195d8:	andeq	r7, ip, r4, ror sl
   195dc:	ldr	r3, [pc, #4]	; 195e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5990>
   195e0:	ldr	r0, [r3, #216]	; 0xd8
   195e4:	bx	lr
   195e8:	andeq	r7, ip, r4, ror sl
   195ec:	ldr	r3, [pc, #4]	; 195f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x59a0>
   195f0:	str	r0, [r3, #216]	; 0xd8
   195f4:	bx	lr
   195f8:	andeq	r7, ip, r4, ror sl
   195fc:	push	{r4, r5, r6, r7, r8, lr}
   19600:	ldr	r6, [pc, #112]	; 19678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5a20>
   19604:	ldr	r5, [r6, #60]	; 0x3c
   19608:	cmp	r5, #0
   1960c:	beq	19648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x59f0>
   19610:	ldr	r3, [r6, #68]	; 0x44
   19614:	ldr	r0, [r5, r3, lsl #2]
   19618:	add	r4, r5, r3, lsl #2
   1961c:	cmp	r0, #0
   19620:	beq	19648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x59f0>
   19624:	mov	r7, #0
   19628:	bl	173dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3784>
   1962c:	str	r7, [r4]
   19630:	bl	193a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x574c>
   19634:	ldr	r3, [r6, #68]	; 0x44
   19638:	ldr	r0, [r5, r3, lsl #2]
   1963c:	add	r4, r5, r3, lsl #2
   19640:	cmp	r0, #0
   19644:	bne	19628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x59d0>
   19648:	mov	r0, r5
   1964c:	bl	13364 <free@plt>
   19650:	mov	r0, #0
   19654:	str	r0, [r6, #60]	; 0x3c
   19658:	str	r0, [r6, #68]	; 0x44
   1965c:	str	r0, [r6, #64]	; 0x40
   19660:	str	r0, [r6, #4]
   19664:	str	r0, [r6, #84]	; 0x54
   19668:	str	r0, [r6]
   1966c:	str	r0, [r6, #80]	; 0x50
   19670:	str	r0, [r6, #88]	; 0x58
   19674:	pop	{r4, r5, r6, r7, r8, pc}
   19678:	andeq	r7, ip, r4, ror sl
   1967c:	b	13700 <malloc@plt>
   19680:	b	134d8 <realloc@plt>
   19684:	b	13364 <free@plt>
   19688:	push	{r4, r5, r6, r7, r8, lr}
   1968c:	mov	r5, r0
   19690:	ldr	r4, [pc, #172]	; 19744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5aec>
   19694:	mov	r7, r1
   19698:	mov	r6, r2
   1969c:	ldr	r3, [r4, #16]
   196a0:	cmp	r3, #9
   196a4:	bhi	19728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ad0>
   196a8:	ldr	ip, [pc, #152]	; 19748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5af0>
   196ac:	ldr	lr, [pc, #152]	; 1974c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5af4>
   196b0:	lsl	r0, r3, #2
   196b4:	ldrb	r2, [ip]
   196b8:	ldr	r1, [r4, #60]	; 0x3c
   196bc:	add	r8, r4, r0
   196c0:	cmp	r1, #0
   196c4:	lsr	r2, r2, #3
   196c8:	and	r2, r2, #1
   196cc:	str	r2, [r8, #176]	; 0xb0
   196d0:	ldr	r2, [lr]
   196d4:	str	r7, [r8, #20]
   196d8:	str	r2, [r8, #136]	; 0x88
   196dc:	ldrne	r2, [r4, #68]	; 0x44
   196e0:	add	r7, r4, r0
   196e4:	and	r6, r6, #1
   196e8:	ldrne	r1, [r1, r2, lsl #2]
   196ec:	ldrb	r2, [ip]
   196f0:	str	r1, [r7, #96]	; 0x60
   196f4:	add	r3, r3, #1
   196f8:	bic	r2, r2, #8
   196fc:	orr	r2, r2, r6, lsl #3
   19700:	mov	r0, r5
   19704:	mov	r6, #1
   19708:	mov	r1, #16384	; 0x4000
   1970c:	str	r3, [r4, #16]
   19710:	str	r5, [r4, #80]	; 0x50
   19714:	str	r6, [lr]
   19718:	strb	r2, [ip]
   1971c:	bl	1754c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x38f4>
   19720:	pop	{r4, r5, r6, r7, r8, lr}
   19724:	b	1733c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36e4>
   19728:	mov	r2, #5
   1972c:	ldr	r1, [pc, #28]	; 19750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5af8>
   19730:	mov	r0, #0
   19734:	bl	13460 <dcgettext@plt>
   19738:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1973c:	ldr	r3, [r4, #16]
   19740:	b	196a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5a50>
   19744:	andeq	r7, ip, r4, ror sl
   19748:	andeq	r8, ip, r8, asr r0
   1974c:	andeq	r8, ip, r4, lsr r0
   19750:	andeq	sl, r4, ip, asr #8
   19754:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19758:	mov	ip, #0
   1975c:	ldr	r4, [pc, #252]	; 19860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c08>
   19760:	mov	r8, r0
   19764:	mov	r6, r1
   19768:	ldr	r3, [r4, #16]
   1976c:	mov	r5, r2
   19770:	cmp	r3, #9
   19774:	str	ip, [r4, #84]	; 0x54
   19778:	bhi	19844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5bec>
   1977c:	ldr	ip, [pc, #224]	; 19864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c0c>
   19780:	ldr	r1, [r4, #60]	; 0x3c
   19784:	lsl	r2, r3, #2
   19788:	ldr	lr, [ip]
   1978c:	add	r0, r4, r2
   19790:	cmp	r1, #0
   19794:	str	lr, [r0, #136]	; 0x88
   19798:	str	r6, [r0, #20]
   1979c:	ldrne	r0, [r4, #68]	; 0x44
   197a0:	add	r2, r4, r2
   197a4:	add	r3, r3, #1
   197a8:	ldrne	r1, [r1, r0, lsl #2]
   197ac:	mov	r0, r8
   197b0:	str	r1, [r2, #96]	; 0x60
   197b4:	str	r3, [r4, #16]
   197b8:	str	r5, [ip]
   197bc:	bl	137d8 <strlen@plt>
   197c0:	mov	r5, #0
   197c4:	mov	r6, r0
   197c8:	mov	r0, #48	; 0x30
   197cc:	bl	13700 <malloc@plt>
   197d0:	add	r9, r6, #1
   197d4:	mov	r4, r0
   197d8:	add	r0, r6, #3
   197dc:	str	r6, [r4, #12]
   197e0:	str	r5, [r4]
   197e4:	bl	13700 <malloc@plt>
   197e8:	mov	r3, #10
   197ec:	mov	r2, r9
   197f0:	mov	r1, r8
   197f4:	mov	r7, r0
   197f8:	str	r7, [r4, #4]
   197fc:	strb	r3, [r0], #1
   19800:	bl	133b8 <memcpy@plt>
   19804:	ldr	r3, [r4, #4]
   19808:	add	r6, r7, r6
   1980c:	mov	r2, #1
   19810:	add	r3, r3, #1
   19814:	strb	r5, [r7, r9]
   19818:	str	r9, [r4, #16]
   1981c:	mov	r0, r4
   19820:	strb	r5, [r6, #2]
   19824:	str	r5, [r4, #24]
   19828:	str	r5, [r4, #40]	; 0x28
   1982c:	str	r5, [r4, #44]	; 0x2c
   19830:	str	r3, [r4, #8]
   19834:	str	r2, [r4, #20]
   19838:	str	r2, [r4, #28]
   1983c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19840:	b	1733c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x36e4>
   19844:	mov	r0, ip
   19848:	mov	r2, #5
   1984c:	ldr	r1, [pc, #20]	; 19868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c10>
   19850:	bl	13460 <dcgettext@plt>
   19854:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   19858:	ldr	r3, [r4, #16]
   1985c:	b	1977c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5b24>
   19860:	andeq	r7, ip, r4, ror sl
   19864:	andeq	r8, ip, r4, lsr r0
   19868:	andeq	sl, r4, ip, ror #8
   1986c:	ldr	r1, [pc, #36]	; 19898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c40>
   19870:	ldr	r3, [pc, #36]	; 1989c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c44>
   19874:	push	{lr}		; (str lr, [sp, #-4]!)
   19878:	mov	r0, #3
   1987c:	ldr	r2, [r1, #4]
   19880:	ldr	ip, [r3]
   19884:	add	lr, r2, #4
   19888:	str	lr, [r1, #4]
   1988c:	str	ip, [r2]
   19890:	str	r0, [r3]
   19894:	pop	{pc}		; (ldr pc, [sp], #4)
   19898:	andeq	r7, ip, r4, lsr #7
   1989c:	andeq	r7, ip, r4, ror sl
   198a0:	ldr	r1, [pc, #36]	; 198cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c74>
   198a4:	ldr	r3, [pc, #36]	; 198d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c78>
   198a8:	push	{lr}		; (str lr, [sp, #-4]!)
   198ac:	mov	r0, #5
   198b0:	ldr	r2, [r1, #4]
   198b4:	ldr	ip, [r3]
   198b8:	add	lr, r2, #4
   198bc:	str	lr, [r1, #4]
   198c0:	str	ip, [r2]
   198c4:	str	r0, [r3]
   198c8:	pop	{pc}		; (ldr pc, [sp], #4)
   198cc:	andeq	r7, ip, r4, lsr #7
   198d0:	andeq	r7, ip, r4, ror sl
   198d4:	ldr	r1, [pc, #36]	; 19900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ca8>
   198d8:	ldr	r3, [pc, #36]	; 19904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5cac>
   198dc:	push	{lr}		; (str lr, [sp, #-4]!)
   198e0:	mov	r0, #13
   198e4:	ldr	r2, [r1, #4]
   198e8:	ldr	ip, [r3]
   198ec:	add	lr, r2, #4
   198f0:	str	lr, [r1, #4]
   198f4:	str	ip, [r2]
   198f8:	str	r0, [r3]
   198fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19900:	andeq	r7, ip, r4, lsr #7
   19904:	andeq	r7, ip, r4, ror sl
   19908:	ldr	r1, [pc, #36]	; 19934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5cdc>
   1990c:	ldr	r3, [pc, #36]	; 19938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ce0>
   19910:	push	{lr}		; (str lr, [sp, #-4]!)
   19914:	mov	r0, #15
   19918:	ldr	r2, [r1, #4]
   1991c:	ldr	ip, [r3]
   19920:	add	lr, r2, #4
   19924:	str	lr, [r1, #4]
   19928:	str	ip, [r2]
   1992c:	str	r0, [r3]
   19930:	pop	{pc}		; (ldr pc, [sp], #4)
   19934:	andeq	r7, ip, r4, lsr #7
   19938:	andeq	r7, ip, r4, ror sl
   1993c:	ldr	r1, [pc, #36]	; 19968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d10>
   19940:	ldr	r3, [pc, #36]	; 1996c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d14>
   19944:	push	{lr}		; (str lr, [sp, #-4]!)
   19948:	mov	r0, #17
   1994c:	ldr	r2, [r1, #4]
   19950:	ldr	ip, [r3]
   19954:	add	lr, r2, #4
   19958:	str	lr, [r1, #4]
   1995c:	str	ip, [r2]
   19960:	str	r0, [r3]
   19964:	pop	{pc}		; (ldr pc, [sp], #4)
   19968:	andeq	r7, ip, r4, lsr #7
   1996c:	andeq	r7, ip, r4, ror sl
   19970:	ldr	r1, [pc, #36]	; 1999c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d44>
   19974:	ldr	r3, [pc, #36]	; 199a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d48>
   19978:	push	{lr}		; (str lr, [sp, #-4]!)
   1997c:	mov	r0, #11
   19980:	ldr	r2, [r1, #4]
   19984:	ldr	ip, [r3]
   19988:	add	lr, r2, #4
   1998c:	str	lr, [r1, #4]
   19990:	str	ip, [r2]
   19994:	str	r0, [r3]
   19998:	pop	{pc}		; (ldr pc, [sp], #4)
   1999c:	andeq	r7, ip, r4, lsr #7
   199a0:	andeq	r7, ip, r4, ror sl
   199a4:	ldr	r1, [pc, #36]	; 199d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d78>
   199a8:	ldr	r3, [pc, #36]	; 199d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d7c>
   199ac:	push	{lr}		; (str lr, [sp, #-4]!)
   199b0:	mov	r0, #7
   199b4:	ldr	r2, [r1, #4]
   199b8:	ldr	ip, [r3]
   199bc:	add	lr, r2, #4
   199c0:	str	lr, [r1, #4]
   199c4:	str	ip, [r2]
   199c8:	str	r0, [r3]
   199cc:	pop	{pc}		; (ldr pc, [sp], #4)
   199d0:	andeq	r7, ip, r4, lsr #7
   199d4:	andeq	r7, ip, r4, ror sl
   199d8:	ldr	r1, [pc, #36]	; 19a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dac>
   199dc:	ldr	r3, [pc, #36]	; 19a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db0>
   199e0:	push	{lr}		; (str lr, [sp, #-4]!)
   199e4:	mov	r0, #9
   199e8:	ldr	r2, [r1, #4]
   199ec:	ldr	ip, [r3]
   199f0:	add	lr, r2, #4
   199f4:	str	lr, [r1, #4]
   199f8:	str	ip, [r2]
   199fc:	str	r0, [r3]
   19a00:	pop	{pc}		; (ldr pc, [sp], #4)
   19a04:	andeq	r7, ip, r4, lsr #7
   19a08:	andeq	r7, ip, r4, ror sl
   19a0c:	ldr	r3, [pc, #24]	; 19a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dd4>
   19a10:	ldr	r1, [pc, #24]	; 19a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dd8>
   19a14:	ldr	r2, [r3, #4]
   19a18:	sub	r0, r2, #4
   19a1c:	ldr	r2, [r2, #-4]
   19a20:	str	r0, [r3, #4]
   19a24:	str	r2, [r1]
   19a28:	bx	lr
   19a2c:	andeq	r7, ip, r4, lsr #7
   19a30:	andeq	r7, ip, r4, ror sl
   19a34:	ldr	r3, [pc, #20]	; 19a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5df8>
   19a38:	ldr	r2, [r3, #16]
   19a3c:	cmp	r2, #0
   19a40:	subne	r2, r2, #1
   19a44:	add	r3, r3, r2, lsl #2
   19a48:	ldr	r0, [r3, #20]
   19a4c:	bx	lr
   19a50:	andeq	r7, ip, r4, ror sl
   19a54:	push	{r4, r5, r6, r7, r8, lr}
   19a58:	sub	sp, sp, #8
   19a5c:	mov	r4, r1
   19a60:	mov	r7, r0
   19a64:	mov	r2, #16
   19a68:	mov	r0, r1
   19a6c:	add	r1, sp, #4
   19a70:	bl	13250 <bfd_scan_vma@plt>
   19a74:	ldr	r3, [sp, #4]
   19a78:	ldrb	r3, [r3]
   19a7c:	cmp	r3, #0
   19a80:	mov	r8, r0
   19a84:	bne	19b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ebc>
   19a88:	ldr	r6, [pc, #160]	; 19b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ed8>
   19a8c:	add	r5, r7, #1
   19a90:	ldr	r4, [r6]
   19a94:	cmp	r4, #0
   19a98:	bne	19aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5e54>
   19a9c:	b	19acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5e74>
   19aa0:	ldr	r4, [r4]
   19aa4:	cmp	r4, #0
   19aa8:	beq	19acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5e74>
   19aac:	mov	r1, r5
   19ab0:	ldr	r0, [r4, #4]
   19ab4:	bl	13268 <strcmp@plt>
   19ab8:	cmp	r0, #0
   19abc:	bne	19aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5e48>
   19ac0:	str	r8, [r4, #8]
   19ac4:	mov	r0, r8
   19ac8:	b	19af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ea0>
   19acc:	mov	r0, #16
   19ad0:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   19ad4:	ldr	r2, [r6]
   19ad8:	mov	r3, #0
   19adc:	mov	r4, r0
   19ae0:	str	r5, [r0, #4]
   19ae4:	str	r8, [r0, #8]
   19ae8:	mov	r0, r8
   19aec:	str	r2, [r4]
   19af0:	str	r3, [r4, #12]
   19af4:	str	r4, [r6]
   19af8:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   19afc:	mov	r2, r4
   19b00:	mov	r1, r0
   19b04:	mov	r0, r7
   19b08:	bl	249c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d68>
   19b0c:	add	sp, sp, #8
   19b10:	pop	{r4, r5, r6, r7, r8, pc}
   19b14:	mov	r2, #5
   19b18:	ldr	r1, [pc, #20]	; 19b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5edc>
   19b1c:	mov	r0, #0
   19b20:	bl	13460 <dcgettext@plt>
   19b24:	mov	r1, r4
   19b28:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   19b2c:	b	19a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5e30>
   19b30:	andeq	r8, ip, ip, asr #4
   19b34:	andeq	fp, r4, ip, lsr #20
   19b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b3c:	sub	sp, sp, #172	; 0xac
   19b40:	str	r0, [sp, #8]
   19b44:	ldr	r0, [pc, #4036]	; 1ab10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6eb8>
   19b48:	str	r1, [sp, #12]
   19b4c:	bl	13574 <xmalloc@plt>
   19b50:	ldr	ip, [pc, #4028]	; 1ab14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ebc>
   19b54:	mov	r4, ip
   19b58:	str	ip, [sp, #32]
   19b5c:	add	fp, r4, #5504	; 0x1580
   19b60:	str	r0, [sp, #48]	; 0x30
   19b64:	mov	r0, #2784	; 0xae0
   19b68:	bl	13574 <xmalloc@plt>
   19b6c:	str	r0, [sp, #52]	; 0x34
   19b70:	mov	r0, #2784	; 0xae0
   19b74:	bl	13700 <malloc@plt>
   19b78:	ldr	r1, [sp, #48]	; 0x30
   19b7c:	mov	lr, #45	; 0x2d
   19b80:	mov	r2, #0
   19b84:	mov	ip, r4
   19b88:	mov	sl, r2
   19b8c:	mov	r8, r2
   19b90:	mov	r3, #97	; 0x61
   19b94:	mov	r4, #1
   19b98:	str	r0, [sp, #56]	; 0x38
   19b9c:	strb	lr, [r1]
   19ba0:	ldr	r6, [sp, #48]	; 0x30
   19ba4:	b	19bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f78>
   19ba8:	ldr	lr, [sp, #52]	; 0x34
   19bac:	ldm	ip, {r0, r1, r2, r3}
   19bb0:	add	lr, lr, r7
   19bb4:	add	r8, r8, #1
   19bb8:	add	r7, r7, #16
   19bbc:	stm	lr, {r0, r1, r2, r3}
   19bc0:	cmp	fp, ip
   19bc4:	beq	19c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5fe4>
   19bc8:	ldrb	r3, [ip, #48]	; 0x30
   19bcc:	ldr	r2, [ip, #32]!
   19bd0:	cmp	r3, #0
   19bd4:	add	r5, r6, r4
   19bd8:	beq	19c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5fa8>
   19bdc:	strb	r3, [r6, r4]
   19be0:	ldr	r3, [ip, #4]
   19be4:	add	r5, r4, #1
   19be8:	sub	r1, r3, #1
   19bec:	cmp	r1, #1
   19bf0:	bls	1a22c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x65d4>
   19bf4:	ldr	r6, [sp, #48]	; 0x30
   19bf8:	mov	r4, r5
   19bfc:	add	r5, r6, r5
   19c00:	cmp	r2, #0
   19c04:	lsl	r9, sl, #4
   19c08:	lsl	r7, r8, #4
   19c0c:	beq	19bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f68>
   19c10:	ldr	r3, [ip, #28]
   19c14:	cmp	r3, #3
   19c18:	bne	19ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f50>
   19c1c:	ldr	lr, [sp, #56]	; 0x38
   19c20:	ldm	ip, {r0, r1, r2, r3}
   19c24:	add	lr, lr, r9
   19c28:	cmp	fp, ip
   19c2c:	add	sl, sl, #1
   19c30:	stm	lr, {r0, r1, r2, r3}
   19c34:	add	r9, r9, #16
   19c38:	bne	19bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f70>
   19c3c:	mov	r3, #0
   19c40:	strb	r3, [r5]
   19c44:	ldr	r1, [sp, #52]	; 0x34
   19c48:	ldr	ip, [sp, #56]	; 0x38
   19c4c:	mov	r2, r8
   19c50:	str	r3, [r1, r7]
   19c54:	add	r1, sp, #56	; 0x38
   19c58:	str	r3, [ip, r9]
   19c5c:	mov	r0, r4
   19c60:	add	r3, sp, #52	; 0x34
   19c64:	str	r1, [sp, #4]
   19c68:	str	sl, [sp]
   19c6c:	add	r1, sp, #48	; 0x30
   19c70:	bl	2d438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197e0>
   19c74:	ldr	r3, [sp, #8]
   19c78:	cmp	r3, #1
   19c7c:	bls	19d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6104>
   19c80:	ldr	r4, [sp, #12]
   19c84:	ldr	r6, [pc, #3724]	; 1ab18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ec0>
   19c88:	ldr	r7, [pc, #3724]	; 1ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ec4>
   19c8c:	ldr	r0, [r4, #4]!
   19c90:	ldr	r8, [pc, #3720]	; 1ab20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ec8>
   19c94:	mov	r5, #1
   19c98:	ldr	r9, [sp, #8]
   19c9c:	b	19ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6050>
   19ca0:	ldr	r0, [r4, #4]
   19ca4:	add	r4, r4, #4
   19ca8:	mov	r1, r6
   19cac:	bl	13268 <strcmp@plt>
   19cb0:	add	r5, r5, #1
   19cb4:	cmp	r0, #0
   19cb8:	bne	19ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6088>
   19cbc:	cmp	r9, r5
   19cc0:	bls	19cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6084>
   19cc4:	ldr	r0, [r4, #4]
   19cc8:	ldrb	r3, [r0]
   19ccc:	lsl	r3, r3, #1
   19cd0:	ldrh	r3, [r8, r3]
   19cd4:	tst	r3, #4
   19cd8:	bne	19ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x604c>
   19cdc:	str	r7, [r4]
   19ce0:	cmp	r9, r5
   19ce4:	bhi	19ca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6048>
   19ce8:	ldr	r4, [sp, #12]
   19cec:	ldr	r3, [sp, #8]
   19cf0:	sub	r5, r4, #4
   19cf4:	ldr	r6, [pc, #3624]	; 1ab24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ecc>
   19cf8:	add	r5, r5, r3, lsl #2
   19cfc:	b	19d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60b0>
   19d00:	cmp	r5, r4
   19d04:	beq	19d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6104>
   19d08:	ldr	r0, [r4, #4]!
   19d0c:	ldrb	r3, [r0]
   19d10:	cmp	r3, #45	; 0x2d
   19d14:	bne	19d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60a8>
   19d18:	ldrb	r3, [r0, #1]
   19d1c:	cmp	r3, #108	; 0x6c
   19d20:	bne	19d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60a8>
   19d24:	ldrb	r3, [r0, #2]
   19d28:	cmp	r3, #0
   19d2c:	beq	19d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60a8>
   19d30:	bl	137d8 <strlen@plt>
   19d34:	add	r0, r0, #20
   19d38:	bl	13574 <xmalloc@plt>
   19d3c:	ldr	r2, [r4]
   19d40:	mov	r1, r6
   19d44:	add	r2, r2, #2
   19d48:	mov	r7, r0
   19d4c:	bl	13a00 <sprintf@plt>
   19d50:	cmp	r5, r4
   19d54:	str	r7, [r4]
   19d58:	bne	19d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60b0>
   19d5c:	ldr	r4, [pc, #3524]	; 1ab28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ed0>
   19d60:	ldr	sl, [pc, #3524]	; 1ab2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ed4>
   19d64:	ldrd	r6, [sp, #8]
   19d68:	mov	r3, #0
   19d6c:	mvn	fp, #0
   19d70:	add	r8, sp, #60	; 0x3c
   19d74:	str	r3, [sp, #16]
   19d78:	mov	r9, r3
   19d7c:	mov	r3, #3
   19d80:	str	r3, [sp, #20]
   19d84:	ldr	r3, [r4]
   19d88:	cmp	r3, fp
   19d8c:	beq	19da8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6150>
   19d90:	mov	r1, r7
   19d94:	mov	r0, r6
   19d98:	bl	2d484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1982c>
   19d9c:	cmp	r0, #0
   19da0:	bne	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   19da4:	ldr	fp, [r4]
   19da8:	mov	ip, #0
   19dac:	str	r8, [sp]
   19db0:	ldrd	r2, [sp, #48]	; 0x30
   19db4:	mov	r1, r7
   19db8:	mov	r0, r6
   19dbc:	str	ip, [sl]
   19dc0:	bl	1391c <getopt_long_only@plt>
   19dc4:	cmp	r0, #63	; 0x3f
   19dc8:	mov	r5, r0
   19dcc:	beq	1a314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66bc>
   19dd0:	mov	r0, r5
   19dd4:	bl	2d460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19808>
   19dd8:	subs	r2, r0, #0
   19ddc:	bne	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   19de0:	cmn	r5, #1
   19de4:	beq	1a338 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66e0>
   19de8:	ldr	r3, [pc, #3392]	; 1ab30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ed8>
   19dec:	sub	r5, r5, #1
   19df0:	cmp	r5, r3
   19df4:	ldrls	pc, [pc, r5, lsl #2]
   19df8:	b	1a2fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66a4>
   19dfc:			; <UNDEFINED> instruction: 0x0001b2b4
   19e00:	strdeq	sl, [r1], -ip
   19e04:	strdeq	sl, [r1], -ip
   19e08:	strdeq	sl, [r1], -ip
   19e0c:	strdeq	sl, [r1], -ip
   19e10:	strdeq	sl, [r1], -ip
   19e14:	strdeq	sl, [r1], -ip
   19e18:	strdeq	sl, [r1], -ip
   19e1c:	strdeq	sl, [r1], -ip
   19e20:	strdeq	sl, [r1], -ip
   19e24:	strdeq	sl, [r1], -ip
   19e28:	strdeq	sl, [r1], -ip
   19e2c:	strdeq	sl, [r1], -ip
   19e30:	strdeq	sl, [r1], -ip
   19e34:	strdeq	sl, [r1], -ip
   19e38:	strdeq	sl, [r1], -ip
   19e3c:	strdeq	sl, [r1], -ip
   19e40:	strdeq	sl, [r1], -ip
   19e44:	strdeq	sl, [r1], -ip
   19e48:	strdeq	sl, [r1], -ip
   19e4c:	strdeq	sl, [r1], -ip
   19e50:	strdeq	sl, [r1], -ip
   19e54:	strdeq	sl, [r1], -ip
   19e58:	strdeq	sl, [r1], -ip
   19e5c:	strdeq	sl, [r1], -ip
   19e60:	strdeq	sl, [r1], -ip
   19e64:	strdeq	sl, [r1], -ip
   19e68:	strdeq	sl, [r1], -ip
   19e6c:	strdeq	sl, [r1], -ip
   19e70:	strdeq	sl, [r1], -ip
   19e74:	strdeq	sl, [r1], -ip
   19e78:	strdeq	sl, [r1], -ip
   19e7c:	strdeq	sl, [r1], -ip
   19e80:	strdeq	sl, [r1], -ip
   19e84:	strdeq	sl, [r1], -ip
   19e88:	strdeq	sl, [r1], -ip
   19e8c:	strdeq	sl, [r1], -ip
   19e90:	strdeq	sl, [r1], -ip
   19e94:	strdeq	sl, [r1], -ip
   19e98:	andeq	fp, r1, r0, ror #5
   19e9c:	andeq	fp, r1, ip, asr #5
   19ea0:	strdeq	sl, [r1], -ip
   19ea4:	strdeq	sl, [r1], -ip
   19ea8:	strdeq	sl, [r1], -ip
   19eac:	strdeq	sl, [r1], -ip
   19eb0:	strdeq	sl, [r1], -ip
   19eb4:	strdeq	sl, [r1], -ip
   19eb8:	strdeq	sl, [r1], -ip
   19ebc:	strdeq	sl, [r1], -ip
   19ec0:	strdeq	sl, [r1], -ip
   19ec4:	strdeq	sl, [r1], -ip
   19ec8:	strdeq	sl, [r1], -ip
   19ecc:	strdeq	sl, [r1], -ip
   19ed0:	strdeq	sl, [r1], -ip
   19ed4:	strdeq	sl, [r1], -ip
   19ed8:	strdeq	sl, [r1], -ip
   19edc:	strdeq	sl, [r1], -ip
   19ee0:	strdeq	sl, [r1], -ip
   19ee4:	strdeq	sl, [r1], -ip
   19ee8:	strdeq	sl, [r1], -ip
   19eec:	strdeq	sl, [r1], -ip
   19ef0:	strdeq	sl, [r1], -ip
   19ef4:	andeq	sl, r1, r8, ror #4
   19ef8:	strdeq	sl, [r1], -ip
   19efc:	andeq	fp, r1, r8, ror #18
   19f00:	strdeq	sl, [r1], -ip
   19f04:	strdeq	sl, [r1], -ip
   19f08:	strdeq	sl, [r1], -ip
   19f0c:	andeq	fp, r1, r4, asr r9
   19f10:	andeq	fp, r1, r0, asr #18
   19f14:	andeq	fp, r1, r0, asr #19
   19f18:	strdeq	sl, [r1], -ip
   19f1c:	muleq	r1, ip, r9
   19f20:	strdeq	sl, [r1], -ip
   19f24:	strdeq	sl, [r1], -ip
   19f28:	andeq	fp, r1, r8, lsl #19
   19f2c:	andeq	fp, r1, r8, ror r9
   19f30:	andeq	fp, r1, r0, asr #20
   19f34:	andeq	fp, r1, ip, lsl #20
   19f38:	strdeq	sl, [r1], -ip
   19f3c:	strdeq	sl, [r1], -ip
   19f40:	andeq	sl, r1, r0, lsl #10
   19f44:	strdeq	fp, [r1], -r4
   19f48:	andeq	fp, r1, r4, lsr #16
   19f4c:	strdeq	sl, [r1], -ip
   19f50:	andeq	fp, r1, ip, lsl #16
   19f54:	strdeq	sl, [r1], -ip
   19f58:	strdeq	fp, [r1], -r4
   19f5c:	andeq	fp, r1, r8, lsr #15
   19f60:	strdeq	sl, [r1], -ip
   19f64:	strdeq	sl, [r1], -ip
   19f68:	strdeq	sl, [r1], -ip
   19f6c:	strdeq	sl, [r1], -ip
   19f70:	strdeq	sl, [r1], -ip
   19f74:	strdeq	sl, [r1], -ip
   19f78:	strdeq	sl, [r1], -ip
   19f7c:	andeq	fp, r1, r0, asr r7
   19f80:	andeq	fp, r1, r0, asr #14
   19f84:	andeq	fp, r1, r0, lsr #14
   19f88:	andeq	fp, r1, ip, lsl #14
   19f8c:	andeq	fp, r1, ip, ror #17
   19f90:	andeq	fp, r1, ip, asr r8
   19f94:	andeq	r9, r1, r4, lsl #27
   19f98:			; <UNDEFINED> instruction: 0x0001b6b4
   19f9c:	andeq	fp, r1, r0, ror #12
   19fa0:	strdeq	sl, [r1], -ip
   19fa4:	strdeq	sl, [r1], -ip
   19fa8:	andeq	fp, r1, r8, asr #12
   19fac:	andeq	r9, r1, r4, lsl #27
   19fb0:	andeq	fp, r1, r8, lsl r6
   19fb4:	andeq	fp, r1, r4, lsl #12
   19fb8:	strdeq	sl, [r1], -ip
   19fbc:	strdeq	fp, [r1], -r0
   19fc0:	andeq	fp, r1, r0, ror #12
   19fc4:	ldrdeq	fp, [r1], -ip
   19fc8:	andeq	fp, r1, ip, asr #11
   19fcc:			; <UNDEFINED> instruction: 0x0001b5b8
   19fd0:	andeq	fp, r1, r0, lsr #11
   19fd4:	strdeq	sl, [r1], -ip
   19fd8:	andeq	fp, r1, ip, lsl #11
   19fdc:	andeq	fp, r1, ip, ror r5
   19fe0:	strdeq	sl, [r1], -ip
   19fe4:	strdeq	sl, [r1], -ip
   19fe8:	strdeq	sl, [r1], -ip
   19fec:	strdeq	sl, [r1], -ip
   19ff0:	strdeq	sl, [r1], -ip
   19ff4:	strdeq	sl, [r1], -ip
   19ff8:	strdeq	sl, [r1], -ip
   19ffc:	strdeq	sl, [r1], -ip
   1a000:	strdeq	sl, [r1], -ip
   1a004:	strdeq	sl, [r1], -ip
   1a008:	strdeq	sl, [r1], -ip
   1a00c:	strdeq	sl, [r1], -ip
   1a010:	strdeq	sl, [r1], -ip
   1a014:	strdeq	sl, [r1], -ip
   1a018:	strdeq	sl, [r1], -ip
   1a01c:	strdeq	sl, [r1], -ip
   1a020:	strdeq	sl, [r1], -ip
   1a024:	strdeq	sl, [r1], -ip
   1a028:	strdeq	sl, [r1], -ip
   1a02c:	strdeq	sl, [r1], -ip
   1a030:	strdeq	sl, [r1], -ip
   1a034:	strdeq	sl, [r1], -ip
   1a038:	strdeq	sl, [r1], -ip
   1a03c:	strdeq	sl, [r1], -ip
   1a040:	strdeq	sl, [r1], -ip
   1a044:	strdeq	sl, [r1], -ip
   1a048:	strdeq	sl, [r1], -ip
   1a04c:	strdeq	sl, [r1], -ip
   1a050:	andeq	fp, r1, r4, lsl #10
   1a054:	strdeq	fp, [r1], -r0
   1a058:	andeq	fp, r1, ip, asr #9
   1a05c:	andeq	fp, r1, r4, lsl #9
   1a060:	andeq	fp, r1, r0, asr r4
   1a064:	muleq	r1, ip, r9
   1a068:	andeq	fp, r1, ip, lsr r4
   1a06c:	andeq	r9, r1, r4, lsl #27
   1a070:	andeq	fp, r1, r0, lsl r4
   1a074:	strdeq	fp, [r1], -ip
   1a078:	andeq	fp, r1, r8, ror #7
   1a07c:	ldrdeq	fp, [r1], -r4
   1a080:	andeq	fp, r1, r4, asr r9
   1a084:	andeq	fp, r1, r0, asr #7
   1a088:			; <UNDEFINED> instruction: 0x0001bdbc
   1a08c:	andeq	r9, r1, r4, lsl #27
   1a090:	andeq	fp, r1, ip, lsr #7
   1a094:	muleq	r1, ip, r3
   1a098:	andeq	fp, r1, r8, lsl #7
   1a09c:	andeq	fp, r1, r4, ror r3
   1a0a0:	andeq	fp, r1, r0, ror #6
   1a0a4:	andeq	fp, r1, r0, asr r3
   1a0a8:	andeq	fp, r1, ip, lsr r3
   1a0ac:	andeq	fp, r1, r8, lsr #6
   1a0b0:	andeq	fp, r1, ip, lsl #6
   1a0b4:	strdeq	fp, [r1], -ip
   1a0b8:	andeq	fp, r1, ip, ror #5
   1a0bc:	andeq	sl, r1, r4, lsr #12
   1a0c0:	andeq	sl, r1, ip, lsl r5
   1a0c4:	muleq	r1, r0, r6
   1a0c8:	andeq	sl, r1, r4, lsr r6
   1a0cc:			; <UNDEFINED> instruction: 0x0001b6b4
   1a0d0:	andeq	sl, r1, r0, asr sl
   1a0d4:	andeq	sl, r1, r0, lsl sl
   1a0d8:	andeq	sl, r1, r0, lsl #20
   1a0dc:	andeq	sl, r1, ip, ror #19
   1a0e0:	muleq	r1, r0, ip
   1a0e4:	andeq	sl, r1, r8, lsr ip
   1a0e8:	strdeq	sl, [r1], -ip
   1a0ec:	andeq	sl, r1, r8, ror #21
   1a0f0:	ldrdeq	sl, [r1], -r4
   1a0f4:	andeq	sl, r1, r0, asr #21
   1a0f8:	andeq	sl, r1, ip, lsr #21
   1a0fc:	muleq	r1, r8, sl
   1a100:	andeq	sl, r1, r4, lsl #30
   1a104:	andeq	sl, r1, r4, asr #29
   1a108:	andeq	sl, r1, r4, asr lr
   1a10c:	andeq	fp, r1, r4, asr #30
   1a110:	andeq	sl, r1, r0, lsr #28
   1a114:	andeq	sl, r1, ip, lsl #28
   1a118:	andeq	sl, r1, r4, lsr #27
   1a11c:	andeq	sl, r1, r8, ror #26
   1a120:	andeq	sl, r1, ip, lsr #26
   1a124:	andeq	sl, r1, r4, lsl #26
   1a128:	strdeq	sl, [r1], -r4
   1a12c:	andeq	sl, r1, r4, ror #25
   1a130:	ldrdeq	sl, [r1], -r4
   1a134:	andeq	sl, r1, r4, asr #25
   1a138:			; <UNDEFINED> instruction: 0x0001acb4
   1a13c:	andeq	sl, r1, r4, lsr #25
   1a140:	andeq	fp, r1, r4, lsr #5
   1a144:	andeq	fp, r1, ip, ror r2
   1a148:	andeq	fp, r1, r4, asr r2
   1a14c:	andeq	fp, r1, r0, asr #4
   1a150:	andeq	fp, r1, ip, lsr #4
   1a154:	andeq	fp, r1, r8, lsl r2
   1a158:	andeq	fp, r1, r4, lsl #4
   1a15c:	strdeq	fp, [r1], -r0
   1a160:	andeq	fp, r1, r0, ror #3
   1a164:	andeq	fp, r1, ip, asr #3
   1a168:			; <UNDEFINED> instruction: 0x0001b1b8
   1a16c:	andeq	fp, r1, r4, lsr #3
   1a170:	muleq	r1, r0, r1
   1a174:	andeq	fp, r1, ip, ror r1
   1a178:	andeq	fp, r1, r8, ror #2
   1a17c:	andeq	fp, r1, r0, asr #2
   1a180:	andeq	fp, r1, ip, lsr #2
   1a184:	andeq	fp, r1, r8, lsl r1
   1a188:	strdeq	fp, [r1], -ip
   1a18c:	andeq	fp, r1, r8, ror #1
   1a190:	ldrdeq	fp, [r1], -r4
   1a194:	andeq	fp, r1, r0
   1a198:	andeq	sl, r1, r8, ror #31
   1a19c:	ldrdeq	sl, [r1], -r4
   1a1a0:			; <UNDEFINED> instruction: 0x0001afbc
   1a1a4:	andeq	sl, r1, r0, lsr #31
   1a1a8:	andeq	sl, r1, ip, lsl #31
   1a1ac:	andeq	sl, r1, r8, ror pc
   1a1b0:	andeq	sl, r1, r4, ror #30
   1a1b4:	andeq	sl, r1, r0, asr pc
   1a1b8:	andeq	sl, r1, r8, lsr pc
   1a1bc:	andeq	sl, r1, r8, lsl pc
   1a1c0:	ldrdeq	sl, [r1], -r8
   1a1c4:	andeq	sl, r1, r8, asr #19
   1a1c8:			; <UNDEFINED> instruction: 0x0001a9b4
   1a1cc:	andeq	sl, r1, r0, lsr #19
   1a1d0:	andeq	sl, r1, ip, lsl #19
   1a1d4:	andeq	sl, r1, r8, ror r9
   1a1d8:	andeq	sl, r1, r4, ror #18
   1a1dc:	andeq	sl, r1, ip, lsr #18
   1a1e0:	ldrdeq	sl, [r1], -r0
   1a1e4:	andeq	sl, r1, r4, lsl #17
   1a1e8:	andeq	sl, r1, r4, asr #16
   1a1ec:	andeq	sl, r1, r0, lsr r8
   1a1f0:	andeq	sl, r1, ip, lsl r8
   1a1f4:	strdeq	sl, [r1], -r4
   1a1f8:	andeq	sl, r1, r4, ror #15
   1a1fc:			; <UNDEFINED> instruction: 0x0001a7b8
   1a200:	andeq	sl, r1, r4, lsr #15
   1a204:	muleq	r1, r0, r7
   1a208:	andeq	fp, r1, r8, lsr #30
   1a20c:	andeq	sl, r1, ip, ror r7
   1a210:	andeq	sl, r1, r0, ror #14
   1a214:	andeq	sl, r1, r8, lsr r7
   1a218:	andeq	sl, r1, r4, lsr #14
   1a21c:	andeq	sl, r1, r0, lsl r7
   1a220:	andeq	fp, r1, r8, lsr r6
   1a224:	andeq	fp, r1, r0, lsl #18
   1a228:	andeq	fp, r1, r8, lsr #8
   1a22c:	ldr	r1, [sp, #48]	; 0x30
   1a230:	cmp	r3, #2
   1a234:	mov	r0, #58	; 0x3a
   1a238:	strb	r0, [r1, r5]
   1a23c:	ldreq	r1, [sp, #48]	; 0x30
   1a240:	add	r3, r4, #2
   1a244:	moveq	r0, #58	; 0x3a
   1a248:	ldrne	r6, [sp, #48]	; 0x30
   1a24c:	strbeq	r0, [r1, r3]
   1a250:	ldreq	r6, [sp, #48]	; 0x30
   1a254:	addeq	r4, r4, #3
   1a258:	movne	r4, r3
   1a25c:	addne	r5, r6, r3
   1a260:	addeq	r5, r6, r4
   1a264:	b	19c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5fa8>
   1a268:	lsl	r3, fp, #2
   1a26c:	add	r0, r7, r3
   1a270:	str	r3, [sp, #8]
   1a274:	ldr	r3, [sp, #32]
   1a278:	ldr	r5, [pc, #2228]	; 1ab34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6edc>
   1a27c:	sub	r3, r3, #60	; 0x3c
   1a280:	mov	r2, #1
   1a284:	str	r6, [sp, #12]
   1a288:	str	r7, [sp, #24]
   1a28c:	mov	r1, r2
   1a290:	mov	r7, r5
   1a294:	mov	r6, r3
   1a298:	mov	r5, r0
   1a29c:	b	1a2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6658>
   1a2a0:	sub	r7, r7, #32
   1a2a4:	cmp	r6, r7
   1a2a8:	beq	1bd24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80cc>
   1a2ac:	ldr	r1, [r7, #32]
   1a2b0:	cmp	r1, #1
   1a2b4:	bne	1a2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6648>
   1a2b8:	ldr	r1, [r7, #28]
   1a2bc:	cmp	r1, #0
   1a2c0:	beq	1a2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6648>
   1a2c4:	ldr	ip, [r5]
   1a2c8:	ldr	r0, [r7, #56]	; 0x38
   1a2cc:	add	r0, ip, r0
   1a2d0:	bl	13268 <strcmp@plt>
   1a2d4:	cmp	r0, #0
   1a2d8:	bne	1a2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6648>
   1a2dc:	ldr	r1, [pc, #2132]	; 1ab38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ee0>
   1a2e0:	mov	r2, #5
   1a2e4:	ldr	r7, [sp, #24]
   1a2e8:	ldr	r6, [sp, #12]
   1a2ec:	bl	13460 <dcgettext@plt>
   1a2f0:	ldr	r3, [sp, #8]
   1a2f4:	ldr	r1, [r7, r3]
   1a2f8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1a2fc:	mov	r2, #5
   1a300:	ldr	r1, [pc, #2100]	; 1ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ee4>
   1a304:	mov	r0, #0
   1a308:	bl	13460 <dcgettext@plt>
   1a30c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1a310:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a314:	str	r8, [sp]
   1a318:	ldr	r3, [sp, #56]	; 0x38
   1a31c:	ldr	r2, [pc, #2256]	; 1abf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f9c>
   1a320:	mov	r1, r7
   1a324:	mov	r0, r6
   1a328:	str	fp, [r4]
   1a32c:	bl	13760 <getopt_long@plt>
   1a330:	mov	r5, r0
   1a334:	b	19dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6178>
   1a338:	ldr	r6, [pc, #2232]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a33c:	ldr	r3, [r6, #64]	; 0x40
   1a340:	cmp	r3, #0
   1a344:	beq	1a354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66fc>
   1a348:	ldrb	r4, [r3]
   1a34c:	cmp	r4, #0
   1a350:	beq	1ba64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e0c>
   1a354:	cmp	r9, #0
   1a358:	beq	1a368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6710>
   1a35c:	bl	251dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11584>
   1a360:	subs	r9, r9, #1
   1a364:	bne	1a35c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   1a368:	ldr	r3, [sp, #16]
   1a36c:	cmp	r3, #0
   1a370:	beq	1a3c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6770>
   1a374:	ldr	r4, [sp, #16]
   1a378:	mov	r7, #0
   1a37c:	b	1a394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x673c>
   1a380:	strb	r7, [r5]
   1a384:	ldrb	r3, [r4]
   1a388:	cmp	r3, #0
   1a38c:	bne	1ba8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e34>
   1a390:	add	r4, r5, #1
   1a394:	mov	r1, #58	; 0x3a
   1a398:	mov	r0, r4
   1a39c:	bl	137fc <strchr@plt>
   1a3a0:	subs	r5, r0, #0
   1a3a4:	bne	1a380 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6728>
   1a3a8:	ldrb	r3, [r4]
   1a3ac:	cmp	r3, #0
   1a3b0:	beq	1a3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6768>
   1a3b4:	mov	r0, r4
   1a3b8:	mov	r1, #1
   1a3bc:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   1a3c0:	ldr	r0, [sp, #16]
   1a3c4:	bl	13364 <free@plt>
   1a3c8:	ldr	r4, [pc, #2104]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a3cc:	ldrb	r3, [r4, #2]
   1a3d0:	ldrb	r1, [r4]
   1a3d4:	tst	r3, #96	; 0x60
   1a3d8:	biceq	r3, r3, #96	; 0x60
   1a3dc:	ldreq	r2, [sp, #20]
   1a3e0:	orreq	r3, r3, r2, lsl #5
   1a3e4:	strbeq	r3, [r4, #2]
   1a3e8:	ldrh	r3, [r4, #2]
   1a3ec:	tst	r3, #384	; 0x180
   1a3f0:	biceq	r3, r3, #384	; 0x180
   1a3f4:	ldreq	r2, [sp, #20]
   1a3f8:	orreq	r3, r3, r2, lsl #7
   1a3fc:	strheq	r3, [r4, #2]
   1a400:	and	r3, r1, #3
   1a404:	cmp	r3, #2
   1a408:	bne	1a41c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67c4>
   1a40c:	ldrsb	r2, [r6, #24]
   1a410:	cmp	r2, #0
   1a414:	movlt	r2, #0
   1a418:	strblt	r2, [r6, #24]
   1a41c:	ldr	r2, [r6, #52]	; 0x34
   1a420:	cmp	r2, #1
   1a424:	beq	1ba9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e44>
   1a428:	cmp	r2, #2
   1a42c:	beq	1a4d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6880>
   1a430:	ldr	r2, [r6, #56]	; 0x38
   1a434:	cmp	r2, #1
   1a438:	beq	1ba7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e24>
   1a43c:	cmp	r2, #2
   1a440:	bne	1a450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67f8>
   1a444:	ldrb	r2, [r4, #5]
   1a448:	orr	r2, r2, #64	; 0x40
   1a44c:	strb	r2, [r4, #5]
   1a450:	cmp	r3, #3
   1a454:	beq	1a498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6840>
   1a458:	ldr	r3, [r6, #76]	; 0x4c
   1a45c:	cmp	r3, #0
   1a460:	beq	1a478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6820>
   1a464:	mov	r2, #5
   1a468:	ldr	r1, [pc, #1744]	; 1ab40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ee8>
   1a46c:	mov	r0, #0
   1a470:	bl	13460 <dcgettext@plt>
   1a474:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1a478:	ldr	r3, [r6, #80]	; 0x50
   1a47c:	cmp	r3, #0
   1a480:	beq	1a498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6840>
   1a484:	mov	r2, #5
   1a488:	ldr	r1, [pc, #1716]	; 1ab44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6eec>
   1a48c:	mov	r0, #0
   1a490:	bl	13460 <dcgettext@plt>
   1a494:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1a498:	ldrh	r1, [r4]
   1a49c:	ldr	r3, [pc, #1700]	; 1ab48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ef0>
   1a4a0:	ldr	r2, [pc, #1700]	; 1ab4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ef4>
   1a4a4:	and	r3, r3, r1
   1a4a8:	cmp	r3, r2
   1a4ac:	bne	1a4d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6878>
   1a4b0:	ldrb	r3, [r4, #1]
   1a4b4:	bic	r3, r3, #64	; 0x40
   1a4b8:	orr	r3, r3, #32
   1a4bc:	strb	r3, [r4, #1]
   1a4c0:	ldr	r3, [r4]
   1a4c4:	tst	r3, #98304	; 0x18000
   1a4c8:	orreq	r3, r3, #98304	; 0x18000
   1a4cc:	streq	r3, [r4]
   1a4d0:	add	sp, sp, #172	; 0xac
   1a4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4d8:	tst	r1, #1
   1a4dc:	movne	r2, #1
   1a4e0:	strne	r2, [r6, #56]	; 0x38
   1a4e4:	bne	1ba7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e24>
   1a4e8:	ldr	r2, [r6, #56]	; 0x38
   1a4ec:	cmp	r2, #1
   1a4f0:	beq	1ba7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e24>
   1a4f4:	cmp	r2, #2
   1a4f8:	beq	1a444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67ec>
   1a4fc:	b	1a458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6800>
   1a500:	ldr	r5, [pc, #1804]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a504:	add	r2, sp, #64	; 0x40
   1a508:	mov	r0, #3
   1a50c:	ldr	r1, [r5]
   1a510:	bl	13b8c <__xstat64@plt>
   1a514:	cmp	r0, #0
   1a518:	bge	1bac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e6c>
   1a51c:	ldr	r3, [pc, #1776]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a520:	ldr	r3, [r3]
   1a524:	str	r3, [sp, #36]	; 0x24
   1a528:	ldr	r3, [pc, #1736]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a52c:	ldr	r0, [sp, #36]	; 0x24
   1a530:	str	r3, [sp, #8]
   1a534:	ldr	r3, [r3, #68]	; 0x44
   1a538:	cmp	r3, #0
   1a53c:	str	r3, [sp, #40]	; 0x28
   1a540:	beq	1bc44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7fec>
   1a544:	bl	137d8 <strlen@plt>
   1a548:	ldr	r3, [pc, #1764]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a54c:	ldr	r5, [sp, #40]	; 0x28
   1a550:	str	r9, [sp, #12]
   1a554:	ldrb	r3, [r3, #72]	; 0x48
   1a558:	str	fp, [sp, #24]
   1a55c:	str	r6, [sp, #28]
   1a560:	mov	fp, r3
   1a564:	mov	r6, r5
   1a568:	ldr	r5, [sp, #36]	; 0x24
   1a56c:	str	r0, [sp, #44]	; 0x2c
   1a570:	mov	r9, r0
   1a574:	b	1a580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6928>
   1a578:	adds	r6, r0, #1
   1a57c:	beq	1a5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6968>
   1a580:	mov	r2, r9
   1a584:	mov	r1, r6
   1a588:	mov	r0, r5
   1a58c:	bl	13bb0 <strncmp@plt>
   1a590:	cmp	r0, #0
   1a594:	bne	1a5ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6954>
   1a598:	ldrb	r2, [r6, r9]
   1a59c:	cmp	r2, #0
   1a5a0:	beq	1bc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8020>
   1a5a4:	cmp	r2, fp
   1a5a8:	beq	1bc88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8030>
   1a5ac:	mov	r0, r6
   1a5b0:	mov	r1, fp
   1a5b4:	bl	137fc <strchr@plt>
   1a5b8:	cmp	r0, #0
   1a5bc:	bne	1a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6920>
   1a5c0:	ldr	r0, [sp, #40]	; 0x28
   1a5c4:	bl	137d8 <strlen@plt>
   1a5c8:	ldr	r3, [sp, #44]	; 0x2c
   1a5cc:	ldr	r9, [sp, #12]
   1a5d0:	add	r5, r3, #2
   1a5d4:	ldr	fp, [sp, #24]
   1a5d8:	ldr	r6, [sp, #28]
   1a5dc:	add	r0, r5, r0
   1a5e0:	bl	13574 <xmalloc@plt>
   1a5e4:	ldr	r3, [pc, #1576]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a5e8:	ldr	r1, [pc, #1376]	; 1ab50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ef8>
   1a5ec:	ldr	r2, [r3]
   1a5f0:	ldr	r3, [pc, #1596]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a5f4:	ldrb	r3, [r3, #72]	; 0x48
   1a5f8:	str	r2, [sp]
   1a5fc:	ldr	r2, [sp, #8]
   1a600:	ldr	r2, [r2, #68]	; 0x44
   1a604:	mov	r5, r0
   1a608:	bl	13a00 <sprintf@plt>
   1a60c:	ldr	r2, [sp, #8]
   1a610:	ldr	r0, [r2, #68]	; 0x44
   1a614:	bl	13364 <free@plt>
   1a618:	ldr	r2, [sp, #8]
   1a61c:	str	r5, [r2, #68]	; 0x44
   1a620:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a624:	ldr	r3, [pc, #1512]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a628:	ldr	r0, [r3]
   1a62c:	bl	2a0c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16470>
   1a630:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a634:	ldr	r3, [pc, #1528]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a638:	ldr	r0, [r3, #8]
   1a63c:	cmp	r0, #0
   1a640:	beq	1bbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f9c>
   1a644:	ldr	r5, [pc, #1468]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a648:	ldrb	r3, [r5]
   1a64c:	and	r3, r3, #3
   1a650:	cmp	r3, #2
   1a654:	beq	1c14c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x84f4>
   1a658:	ldrb	r3, [r5, #2]
   1a65c:	ldrb	r2, [r5]
   1a660:	tst	r3, #96	; 0x60
   1a664:	biceq	r3, r3, #64	; 0x40
   1a668:	orreq	r3, r3, #32
   1a66c:	strbeq	r3, [r5, #2]
   1a670:	ldrh	r3, [r5, #2]
   1a674:	orr	r2, r2, #3
   1a678:	strb	r2, [r5]
   1a67c:	tst	r3, #384	; 0x180
   1a680:	biceq	r3, r3, #256	; 0x100
   1a684:	orreq	r3, r3, #128	; 0x80
   1a688:	strheq	r3, [r5, #2]
   1a68c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a690:	ldr	r2, [pc, #1376]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a694:	ldr	r3, [pc, #1400]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a698:	str	r2, [sp, #8]
   1a69c:	ldr	r0, [r2, #72]	; 0x48
   1a6a0:	ldr	r3, [r3]
   1a6a4:	cmp	r0, #0
   1a6a8:	beq	1bc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7fc0>
   1a6ac:	str	r3, [sp, #12]
   1a6b0:	bl	137d8 <strlen@plt>
   1a6b4:	ldr	r3, [sp, #12]
   1a6b8:	mov	r5, r0
   1a6bc:	mov	r0, r3
   1a6c0:	bl	137d8 <strlen@plt>
   1a6c4:	add	r0, r5, r0
   1a6c8:	add	r0, r0, #2
   1a6cc:	bl	13574 <xmalloc@plt>
   1a6d0:	ldr	r2, [pc, #1340]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a6d4:	ldr	r3, [pc, #1368]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a6d8:	ldr	r1, [r2]
   1a6dc:	ldr	r2, [sp, #8]
   1a6e0:	ldrb	r3, [r3, #72]	; 0x48
   1a6e4:	ldr	r2, [r2, #72]	; 0x48
   1a6e8:	str	r1, [sp]
   1a6ec:	ldr	r1, [pc, #1116]	; 1ab50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ef8>
   1a6f0:	mov	r5, r0
   1a6f4:	bl	13a00 <sprintf@plt>
   1a6f8:	ldr	r2, [sp, #8]
   1a6fc:	ldr	r0, [r2, #72]	; 0x48
   1a700:	bl	13364 <free@plt>
   1a704:	ldr	r2, [sp, #8]
   1a708:	str	r5, [r2, #72]	; 0x48
   1a70c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a710:	ldr	r3, [pc, #1248]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a714:	mov	r2, r3
   1a718:	mov	r3, #1
   1a71c:	str	r3, [r2, #40]	; 0x28
   1a720:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a724:	ldr	r5, [pc, #1244]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a728:	ldrb	r3, [r5, #5]
   1a72c:	orr	r3, r3, #16
   1a730:	strb	r3, [r5, #5]
   1a734:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a738:	ldr	r3, [pc, #1232]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1a73c:	ldr	r2, [r3, #4]
   1a740:	cmp	r2, #0
   1a744:	beq	1bc2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7fd4>
   1a748:	ldr	r0, [r2]
   1a74c:	ldr	r1, [r2, #4]
   1a750:	stmia	r3!, {r0, r1}
   1a754:	mov	r0, r2
   1a758:	bl	13364 <free@plt>
   1a75c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a760:	ldr	r5, [pc, #1192]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1a764:	mov	r2, #8
   1a768:	mov	r0, r5
   1a76c:	mov	r1, r2
   1a770:	bl	13b08 <xmemdup@plt>
   1a774:	str	r0, [r5, #4]
   1a778:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a77c:	ldr	r3, [pc, #1168]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a780:	ldr	r0, [pc, #1152]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a784:	ldr	r1, [r3]
   1a788:	bl	29ddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16184>
   1a78c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a790:	ldr	r3, [pc, #1120]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a794:	mov	r2, r3
   1a798:	mov	r3, #1
   1a79c:	str	r3, [r2, #36]	; 0x24
   1a7a0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a7a4:	ldr	r3, [pc, #1128]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a7a8:	ldr	r2, [pc, #1096]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a7ac:	ldr	r3, [r3]
   1a7b0:	str	r3, [r2, #88]	; 0x58
   1a7b4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a7b8:	ldr	r3, [pc, #1108]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a7bc:	ldr	r0, [r3]
   1a7c0:	bl	31a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de10>
   1a7c4:	cmp	r0, #0
   1a7c8:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a7cc:	mov	r2, #5
   1a7d0:	ldr	r1, [pc, #892]	; 1ab54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6efc>
   1a7d4:	mov	r0, #0
   1a7d8:	bl	13460 <dcgettext@plt>
   1a7dc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1a7e0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a7e4:	ldr	r3, [pc, #1064]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a7e8:	ldr	r0, [r3]
   1a7ec:	bl	31974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd1c>
   1a7f0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a7f4:	ldr	r5, [pc, #1036]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a7f8:	ldr	r2, [pc, #1076]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a7fc:	ldrb	r3, [r5, #4]
   1a800:	ldr	r1, [r2, #92]	; 0x5c
   1a804:	orr	r3, r3, #16
   1a808:	cmp	r1, #0
   1a80c:	strb	r3, [r5, #4]
   1a810:	ldreq	r3, [pc, #832]	; 1ab58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f00>
   1a814:	streq	r3, [r2, #92]	; 0x5c
   1a818:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a81c:	ldr	r5, [pc, #996]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a820:	ldrb	r3, [r5, #6]
   1a824:	orr	r3, r3, #8
   1a828:	strb	r3, [r5, #6]
   1a82c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a830:	ldr	r5, [pc, #976]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a834:	ldrb	r3, [r5, #4]
   1a838:	orr	r3, r3, #1
   1a83c:	strb	r3, [r5, #4]
   1a840:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a844:	ldr	r5, [pc, #956]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a848:	ldrb	r3, [r5, #2]
   1a84c:	and	r2, r3, #96	; 0x60
   1a850:	cmp	r2, #64	; 0x40
   1a854:	orreq	r3, r3, #96	; 0x60
   1a858:	strbeq	r3, [r5, #2]
   1a85c:	ldrh	r3, [r5, #2]
   1a860:	and	r2, r3, #384	; 0x180
   1a864:	cmp	r2, #256	; 0x100
   1a868:	movne	r3, #3
   1a86c:	strne	r3, [sp, #20]
   1a870:	orreq	r3, r3, #384	; 0x180
   1a874:	strheq	r3, [r5, #2]
   1a878:	moveq	r3, #3
   1a87c:	streq	r3, [sp, #20]
   1a880:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a884:	ldr	r5, [pc, #892]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a888:	ldrb	r3, [r5, #2]
   1a88c:	and	r2, r3, #96	; 0x60
   1a890:	cmp	r2, #96	; 0x60
   1a894:	biceq	r3, r3, #32
   1a898:	orreq	r3, r3, #64	; 0x40
   1a89c:	strbeq	r3, [r5, #2]
   1a8a0:	ldrh	r3, [r5, #2]
   1a8a4:	and	r2, r3, #384	; 0x180
   1a8a8:	cmp	r2, #384	; 0x180
   1a8ac:	movne	r3, #2
   1a8b0:	strne	r3, [sp, #20]
   1a8b4:	bne	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a8b8:	bic	r3, r3, #128	; 0x80
   1a8bc:	orr	r3, r3, #256	; 0x100
   1a8c0:	strh	r3, [r5, #2]
   1a8c4:	mov	r3, #2
   1a8c8:	str	r3, [sp, #20]
   1a8cc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a8d0:	ldr	r3, [pc, #828]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1a8d4:	ldr	r1, [pc, #640]	; 1ab5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f04>
   1a8d8:	ldr	r5, [r3]
   1a8dc:	mov	r0, r5
   1a8e0:	bl	13268 <strcmp@plt>
   1a8e4:	cmp	r0, #0
   1a8e8:	beq	1baec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e94>
   1a8ec:	ldr	r1, [pc, #620]	; 1ab60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f08>
   1a8f0:	mov	r0, r5
   1a8f4:	bl	13268 <strcmp@plt>
   1a8f8:	cmp	r0, #0
   1a8fc:	bne	1bcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8078>
   1a900:	ldr	r5, [pc, #768]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a904:	ldr	r2, [sp, #20]
   1a908:	ldrb	r3, [r5, #2]
   1a90c:	bic	r3, r3, #96	; 0x60
   1a910:	orr	r3, r3, r2, lsl #5
   1a914:	strb	r3, [r5, #2]
   1a918:	ldrh	r3, [r5, #2]
   1a91c:	bic	r3, r3, #384	; 0x180
   1a920:	orr	r3, r3, r2, lsl #7
   1a924:	strh	r3, [r5, #2]
   1a928:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a92c:	ldr	r3, [pc, #768]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a930:	ldr	r0, [r3, #8]
   1a934:	cmp	r0, #0
   1a938:	beq	1bbe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f88>
   1a93c:	ldr	r5, [pc, #708]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a940:	ldrb	r3, [r5]
   1a944:	and	r3, r3, #3
   1a948:	cmp	r3, #2
   1a94c:	beq	1c168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8510>
   1a950:	ldrb	r3, [r5]
   1a954:	bic	r3, r3, #2
   1a958:	orr	r3, r3, #1
   1a95c:	strb	r3, [r5]
   1a960:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a964:	ldr	r3, [pc, #652]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a968:	mov	r2, r3
   1a96c:	mov	r3, #0
   1a970:	str	r3, [r2, #28]
   1a974:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a978:	ldr	r3, [pc, #632]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a97c:	mov	r2, r3
   1a980:	mov	r3, #1
   1a984:	str	r3, [r2, #28]
   1a988:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a98c:	ldr	r5, [pc, #628]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a990:	ldrb	r3, [r5, #1]
   1a994:	bic	r3, r3, #4
   1a998:	strb	r3, [r5, #1]
   1a99c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a9a0:	ldr	r5, [pc, #608]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a9a4:	ldrb	r3, [r5, #1]
   1a9a8:	orr	r3, r3, #4
   1a9ac:	strb	r3, [r5, #1]
   1a9b0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a9b4:	ldr	r3, [pc, #632]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a9b8:	mov	r2, #1
   1a9bc:	str	r2, [r3, #48]	; 0x30
   1a9c0:	str	r2, [r3]
   1a9c4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a9c8:	ldr	r3, [pc, #612]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1a9cc:	mov	r2, #1
   1a9d0:	str	r2, [r3, #60]	; 0x3c
   1a9d4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a9d8:	ldr	r5, [pc, #552]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1a9dc:	ldrb	r3, [r5, #7]
   1a9e0:	orr	r3, r3, #32
   1a9e4:	strb	r3, [r5, #7]
   1a9e8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1a9ec:	ldr	r3, [pc, #516]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1a9f0:	mov	r2, r3
   1a9f4:	mov	r3, #1
   1a9f8:	str	r3, [r2, #52]	; 0x34
   1a9fc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aa00:	ldr	r3, [pc, #556]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1aa04:	mov	r2, #1
   1aa08:	str	r2, [r3, #52]	; 0x34
   1aa0c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aa10:	ldr	r3, [pc, #508]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aa14:	ldr	r1, [pc, #328]	; 1ab64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f0c>
   1aa18:	ldr	r5, [r3]
   1aa1c:	mov	r0, r5
   1aa20:	bl	13268 <strcmp@plt>
   1aa24:	cmp	r0, #0
   1aa28:	beq	1bb04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7eac>
   1aa2c:	mov	r0, r5
   1aa30:	ldr	r1, [pc, #304]	; 1ab68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f10>
   1aa34:	bl	13268 <strcmp@plt>
   1aa38:	cmp	r0, #0
   1aa3c:	bne	1c0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x847c>
   1aa40:	ldr	r3, [pc, #452]	; 1ac0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb4>
   1aa44:	mov	r2, #2
   1aa48:	str	r2, [r3]
   1aa4c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aa50:	ldr	r3, [pc, #444]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aa54:	ldr	r5, [r3]
   1aa58:	cmp	r5, #0
   1aa5c:	beq	1bc08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7fb0>
   1aa60:	ldr	r1, [pc, #260]	; 1ab6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f14>
   1aa64:	mov	r0, r5
   1aa68:	bl	13268 <strcmp@plt>
   1aa6c:	cmp	r0, #0
   1aa70:	beq	1bc08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7fb0>
   1aa74:	mov	r0, r5
   1aa78:	ldr	r1, [pc, #240]	; 1ab70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f18>
   1aa7c:	bl	13268 <strcmp@plt>
   1aa80:	cmp	r0, #0
   1aa84:	bne	1c184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x852c>
   1aa88:	ldr	r3, [pc, #420]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1aa8c:	mov	r2, #1
   1aa90:	str	r2, [r3, #44]	; 0x2c
   1aa94:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aa98:	ldr	r3, [pc, #372]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aa9c:	ldr	r0, [pc, #208]	; 1ab74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f1c>
   1aaa0:	ldr	r1, [r3]
   1aaa4:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1aaa8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aaac:	ldr	r3, [pc, #352]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aab0:	ldr	r0, [pc, #192]	; 1ab78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f20>
   1aab4:	ldr	r1, [r3]
   1aab8:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1aabc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aac0:	ldr	r3, [pc, #332]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aac4:	ldr	r0, [pc, #176]	; 1ab7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f24>
   1aac8:	ldr	r1, [r3]
   1aacc:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1aad0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aad4:	ldr	r3, [pc, #312]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aad8:	ldr	r0, [pc, #160]	; 1ab80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f28>
   1aadc:	ldr	r1, [r3]
   1aae0:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1aae4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aae8:	ldr	r3, [pc, #292]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1aaec:	ldr	r0, [pc, #144]	; 1ab84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f2c>
   1aaf0:	ldr	r1, [r3]
   1aaf4:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1aaf8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aafc:	ldr	r3, [pc, #272]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ab00:	ldr	r0, [pc, #128]	; 1ab88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f30>
   1ab04:	ldr	r1, [r3]
   1ab08:	bl	19a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5dfc>
   1ab0c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ab10:	andeq	r0, r0, r9, lsl #4
   1ab14:	andeq	sl, r4, ip, lsl #9
   1ab18:	andeq	fp, r4, ip, lsl #21
   1ab1c:	muleq	r4, r0, sl
   1ab20:	andeq	r6, ip, r0, lsl #24
   1ab24:	muleq	r4, ip, sl
   1ab28:	andeq	r7, ip, r0, asr #14
   1ab2c:	andeq	r7, ip, r0, lsl #20
   1ab30:	andeq	r0, r0, fp, lsl #2
   1ab34:	strdeq	fp, [r4], -r0
   1ab38:	andeq	fp, r4, ip, lsr #21
   1ab3c:	andeq	fp, r4, r8, asr #21
   1ab40:	andeq	ip, r4, r4, ror #25
   1ab44:	andeq	ip, r4, r0, lsl sp
   1ab48:	andeq	r6, r0, r3
   1ab4c:	andeq	r6, r0, r2
   1ab50:	andeq	ip, r4, r8, lsr #20
   1ab54:			; <UNDEFINED> instruction: 0x0004c9bc
   1ab58:	strdeq	r0, [r0], -sp
   1ab5c:	andeq	ip, r4, r0, ror #18
   1ab60:	andeq	ip, r4, ip, ror #18
   1ab64:	andeq	sp, r4, r4, lsr r2
   1ab68:	andeq	pc, r4, ip, asr #24
   1ab6c:	andeq	ip, r4, r8, lsr #21
   1ab70:			; <UNDEFINED> instruction: 0x0004cab4
   1ab74:	andeq	ip, r4, r4, asr #23
   1ab78:			; <UNDEFINED> instruction: 0x0004cbb4
   1ab7c:	andeq	ip, r4, r4, lsr #23
   1ab80:	muleq	r4, ip, fp
   1ab84:	muleq	r4, r4, fp
   1ab88:	andeq	ip, r4, ip, lsl #23
   1ab8c:	andeq	r8, ip, r4, ror #3
   1ab90:	andeq	r7, ip, r4, asr #7
   1ab94:	andeq	r8, ip, ip, asr r2
   1ab98:	strdeq	r7, [ip], -ip
   1ab9c:	andeq	ip, r4, r4, asr fp
   1aba0:	andeq	r7, ip, r0, lsl sp
   1aba4:	andeq	r8, ip, r4, lsl #1
   1aba8:	andeq	r7, ip, r4, lsr #23
   1abac:	andeq	r7, ip, r0, lsr #23
   1abb0:	andeq	fp, r4, r4, lsl #23
   1abb4:	andeq	fp, r4, r8, lsr #22
   1abb8:	andeq	fp, r4, r4, lsr fp
   1abbc:	andeq	fp, r4, r4, asr #22
   1abc0:	andeq	fp, r4, r0, asr fp
   1abc4:	andeq	fp, r4, ip, asr fp
   1abc8:	strdeq	r8, [ip], -r0
   1abcc:	andeq	pc, r4, r0, ror fp	; <UNPREDICTABLE>
   1abd0:	andeq	sp, r4, r4, ror #19
   1abd4:	strdeq	fp, [r4], -ip
   1abd8:	ldrdeq	ip, [r4], -r4
   1abdc:	andeq	r8, ip, r0, lsl #1
   1abe0:	andeq	r7, ip, ip, lsl #26
   1abe4:	andeq	r7, ip, ip, lsl sp
   1abe8:	andeq	r8, ip, r0, lsr r0
   1abec:	andeq	ip, r4, r4, ror #24
   1abf0:	andeq	ip, r4, ip, ror #24
   1abf4:	andeq	r3, r4, ip, ror r8
   1abf8:	andeq	r8, ip, r8, lsl r1
   1abfc:	andeq	r7, ip, r4, lsl #8
   1ac00:			; <UNDEFINED> instruction: 0x0004bbb8
   1ac04:			; <UNDEFINED> instruction: 0x0004ccb4
   1ac08:	andeq	r8, ip, ip, lsl #1
   1ac0c:	andeq	r8, ip, r8, ror #3
   1ac10:	andeq	r8, ip, r8, asr r0
   1ac14:	andeq	r7, ip, r8, lsl #20
   1ac18:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1ac1c:	andeq	fp, r4, r4, lsl #21
   1ac20:	andeq	fp, r4, ip, ror sl
   1ac24:	ldrdeq	ip, [r4], -r8
   1ac28:	andeq	ip, r4, r0, lsl ip
   1ac2c:	andeq	ip, r4, r0, asr sl
   1ac30:	andeq	ip, r4, r0, lsr sl
   1ac34:	andeq	r8, ip, r4, ror r1
   1ac38:	ldr	r5, [pc, #-56]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1ac3c:	ldrb	r3, [r5, #5]
   1ac40:	orr	r3, r3, #4
   1ac44:	strb	r3, [r5, #5]
   1ac48:	ldrb	r3, [r5]
   1ac4c:	tst	r3, #1
   1ac50:	bne	1aed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x727c>
   1ac54:	ldr	r0, [pc, #-76]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1ac58:	ldrb	r3, [r5]
   1ac5c:	ldr	r2, [pc, #-48]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1ac60:	ldrb	r1, [r0]
   1ac64:	bic	r3, r3, #1
   1ac68:	orr	r3, r3, #2
   1ac6c:	bic	r1, r1, #32
   1ac70:	strb	r1, [r0]
   1ac74:	strb	r3, [r5]
   1ac78:	mov	r1, #1
   1ac7c:	mov	r3, #0
   1ac80:	str	r1, [r2, #12]
   1ac84:	str	r3, [r2]
   1ac88:	str	r3, [r2, #48]	; 0x30
   1ac8c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ac90:	ldr	r3, [pc, #-160]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1ac94:	mov	r2, r3
   1ac98:	mov	r3, #2
   1ac9c:	str	r3, [r2, #52]	; 0x34
   1aca0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aca4:	ldr	r3, [pc, #-120]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1aca8:	mov	r2, #1
   1acac:	str	r2, [r3, #24]
   1acb0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1acb4:	ldr	r3, [pc, #-136]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1acb8:	mov	r2, #1
   1acbc:	str	r2, [r3, #32]
   1acc0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1acc4:	ldr	r3, [pc, #-152]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1acc8:	mov	r2, #0
   1accc:	str	r2, [r3, #40]	; 0x28
   1acd0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1acd4:	ldr	r3, [pc, #-168]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1acd8:	mov	r2, #1
   1acdc:	str	r2, [r3, #40]	; 0x28
   1ace0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ace4:	ldr	r3, [pc, #-184]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1ace8:	mov	r2, #1
   1acec:	str	r2, [r3, #16]
   1acf0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1acf4:	ldr	r3, [pc, #-200]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1acf8:	mov	r2, #1
   1acfc:	str	r2, [r3, #20]
   1ad00:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ad04:	ldr	r1, [pc, #-276]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1ad08:	mov	r2, #1
   1ad0c:	str	r1, [sp, #8]
   1ad10:	ldr	r3, [r1, #52]	; 0x34
   1ad14:	str	r2, [r1, #56]	; 0x38
   1ad18:	cmp	r3, r2
   1ad1c:	moveq	r2, r1
   1ad20:	moveq	r3, #0
   1ad24:	streq	r3, [r2, #52]	; 0x34
   1ad28:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ad2c:	ldr	r2, [pc, #-316]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1ad30:	mov	r5, r2
   1ad34:	str	r2, [sp, #8]
   1ad38:	bl	27eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1425c>
   1ad3c:	ldr	r3, [r5, #56]	; 0x38
   1ad40:	cmp	r3, #1
   1ad44:	movne	r3, #2
   1ad48:	strne	r3, [r5, #56]	; 0x38
   1ad4c:	ldr	r3, [sp, #8]
   1ad50:	ldr	r3, [r3, #52]	; 0x34
   1ad54:	cmp	r3, #1
   1ad58:	ldreq	r2, [sp, #8]
   1ad5c:	moveq	r3, #0
   1ad60:	streq	r3, [r2, #52]	; 0x34
   1ad64:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ad68:	ldr	r2, [pc, #-376]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1ad6c:	mov	r5, r2
   1ad70:	str	r2, [sp, #8]
   1ad74:	bl	27ef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1429c>
   1ad78:	ldr	r3, [r5, #56]	; 0x38
   1ad7c:	cmp	r3, #1
   1ad80:	movne	r3, #2
   1ad84:	strne	r3, [r5, #56]	; 0x38
   1ad88:	ldr	r3, [sp, #8]
   1ad8c:	ldr	r3, [r3, #52]	; 0x34
   1ad90:	cmp	r3, #1
   1ad94:	ldreq	r2, [sp, #8]
   1ad98:	moveq	r3, #0
   1ad9c:	streq	r3, [r2, #52]	; 0x34
   1ada0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ada4:	ldr	r5, [pc, #-460]	; 1abe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f88>
   1ada8:	ldr	r3, [pc, #-412]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1adac:	ldr	r2, [pc, #-444]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1adb0:	str	r2, [sp, #8]
   1adb4:	ldr	r2, [r5]
   1adb8:	ldr	r0, [r3]
   1adbc:	str	r2, [sp, #12]
   1adc0:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   1adc4:	ldr	r3, [pc, #-484]	; 1abe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f90>
   1adc8:	ldr	r2, [sp, #12]
   1adcc:	str	r2, [r5]
   1add0:	mov	r2, #4
   1add4:	str	r2, [r3]
   1add8:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   1addc:	ldr	r2, [sp, #8]
   1ade0:	ldr	r3, [r2, #56]	; 0x38
   1ade4:	cmp	r3, #1
   1ade8:	movne	r3, #2
   1adec:	strne	r3, [r2, #56]	; 0x38
   1adf0:	ldr	r3, [sp, #8]
   1adf4:	ldr	r3, [r3, #52]	; 0x34
   1adf8:	cmp	r3, #1
   1adfc:	ldreq	r2, [sp, #8]
   1ae00:	moveq	r3, #0
   1ae04:	streq	r3, [r2, #52]	; 0x34
   1ae08:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ae0c:	ldr	r3, [pc, #-512]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ae10:	ldr	r2, [pc, #-544]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1ae14:	ldr	r3, [r3]
   1ae18:	str	r3, [r2, #84]	; 0x54
   1ae1c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ae20:	ldr	r5, [pc, #-584]	; 1abe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f88>
   1ae24:	ldr	r3, [pc, #-536]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ae28:	ldr	r1, [r5]
   1ae2c:	ldr	r0, [r3]
   1ae30:	str	r1, [sp, #8]
   1ae34:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   1ae38:	ldr	r3, [pc, #-600]	; 1abe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f90>
   1ae3c:	ldr	r1, [sp, #8]
   1ae40:	mov	r2, #3
   1ae44:	str	r1, [r5]
   1ae48:	str	r2, [r3]
   1ae4c:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   1ae50:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ae54:	mov	r0, #1
   1ae58:	bl	2d8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ca4>
   1ae5c:	ldr	r0, [pc, #-648]	; 1abdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f84>
   1ae60:	mov	r3, #1
   1ae64:	ldr	r1, [pc, #-736]	; 1ab8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f34>
   1ae68:	str	r3, [r0]
   1ae6c:	ldr	r0, [pc, #-608]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ae70:	ldr	r2, [pc, #-744]	; 1ab90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f38>
   1ae74:	str	r3, [r1]
   1ae78:	ldr	r0, [r0]
   1ae7c:	mvn	r3, #1
   1ae80:	cmp	r0, #0
   1ae84:	str	r3, [r2]
   1ae88:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ae8c:	mov	r2, #0
   1ae90:	add	r1, sp, #64	; 0x40
   1ae94:	bl	137cc <strtoul@plt>
   1ae98:	ldr	r3, [sp, #64]	; 0x40
   1ae9c:	ldrb	r3, [r3]
   1aea0:	cmp	r3, #0
   1aea4:	mov	r5, r0
   1aea8:	bne	1c110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x84b8>
   1aeac:	ldr	r3, [pc, #-800]	; 1ab94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f3c>
   1aeb0:	cmp	r5, #1
   1aeb4:	movle	r5, #0
   1aeb8:	movgt	r5, #1
   1aebc:	str	r5, [r3]
   1aec0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1aec4:	ldr	r5, [pc, #-708]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1aec8:	ldrb	r3, [r5]
   1aecc:	tst	r3, #1
   1aed0:	beq	1ac54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ffc>
   1aed4:	mov	r2, #5
   1aed8:	ldr	r1, [pc, #-712]	; 1ac18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc0>
   1aedc:	mov	r0, #0
   1aee0:	bl	13460 <dcgettext@plt>
   1aee4:	ldrb	r3, [r5]
   1aee8:	ldr	r2, [pc, #-724]	; 1ac1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc4>
   1aeec:	ldr	r1, [pc, #-724]	; 1ac20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc8>
   1aef0:	and	r3, r3, #3
   1aef4:	cmp	r3, #3
   1aef8:	movne	r1, r2
   1aefc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1af00:	b	1ac54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ffc>
   1af04:	ldr	r5, [pc, #-772]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af08:	ldrb	r3, [r5, #4]
   1af0c:	orr	r3, r3, #32
   1af10:	strb	r3, [r5, #4]
   1af14:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af18:	ldr	r3, [pc, #-780]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1af1c:	mov	r2, #0
   1af20:	mov	r1, r2
   1af24:	ldr	r0, [r3]
   1af28:	bl	137cc <strtoul@plt>
   1af2c:	ldr	r5, [pc, #-812]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af30:	str	r0, [r5, #108]	; 0x6c
   1af34:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af38:	ldr	r5, [pc, #-824]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af3c:	ldr	r3, [r5]
   1af40:	bic	r3, r3, #65536	; 0x10000
   1af44:	orr	r3, r3, #32768	; 0x8000
   1af48:	str	r3, [r5]
   1af4c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af50:	ldr	r5, [pc, #-848]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af54:	ldrb	r3, [r5, #4]
   1af58:	orr	r3, r3, #128	; 0x80
   1af5c:	strb	r3, [r5, #4]
   1af60:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af64:	ldr	r5, [pc, #-868]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af68:	ldrb	r3, [r5]
   1af6c:	orr	r3, r3, #32
   1af70:	strb	r3, [r5]
   1af74:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af78:	ldr	r5, [pc, #-888]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af7c:	ldrb	r3, [r5, #5]
   1af80:	bic	r3, r3, #32
   1af84:	strb	r3, [r5, #5]
   1af88:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1af8c:	ldr	r5, [pc, #-908]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1af90:	ldrb	r3, [r5, #5]
   1af94:	orr	r3, r3, #8
   1af98:	strb	r3, [r5, #5]
   1af9c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1afa0:	ldr	r5, [pc, #-928]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1afa4:	ldr	r2, [sp, #20]
   1afa8:	ldrh	r3, [r5, #2]
   1afac:	bic	r3, r3, #384	; 0x180
   1afb0:	orr	r3, r3, r2, lsl #7
   1afb4:	strh	r3, [r5, #2]
   1afb8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1afbc:	ldr	r5, [pc, #-956]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1afc0:	ldrh	r3, [r5, #2]
   1afc4:	bic	r3, r3, #256	; 0x100
   1afc8:	orr	r3, r3, #128	; 0x80
   1afcc:	strh	r3, [r5, #2]
   1afd0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1afd4:	ldr	r3, [pc, #-1092]	; 1ab98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f40>
   1afd8:	ldr	r0, [r3]
   1afdc:	bl	2d814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bbc>
   1afe0:	mov	r0, #0
   1afe4:	bl	13790 <exit@plt>
   1afe8:	ldr	r3, [pc, #-988]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1afec:	ldr	r0, [r3]
   1aff0:	cmp	r0, #0
   1aff4:	beq	1bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7edc>
   1aff8:	bl	27de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14190>
   1affc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b000:	ldr	r3, [pc, #-1012]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b004:	mov	r1, #61	; 0x3d
   1b008:	ldr	r5, [r3]
   1b00c:	mov	r0, r5
   1b010:	bl	137fc <strchr@plt>
   1b014:	subs	r3, r0, #0
   1b018:	str	r3, [sp, #8]
   1b01c:	beq	1c0f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x849c>
   1b020:	ldrb	r3, [r5]
   1b024:	ldr	r2, [sp, #8]
   1b028:	cmp	r3, #0
   1b02c:	add	r1, r2, #1
   1b030:	str	r1, [sp, #8]
   1b034:	beq	1b044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x73ec>
   1b038:	ldrb	r3, [r2, #1]
   1b03c:	cmp	r3, #0
   1b040:	bne	1b060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7408>
   1b044:	mov	r2, #5
   1b048:	ldr	r1, [pc, #-1204]	; 1ab9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f44>
   1b04c:	mov	r0, #0
   1b050:	bl	13460 <dcgettext@plt>
   1b054:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1b058:	ldr	r3, [pc, #-1100]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b05c:	ldr	r5, [r3]
   1b060:	ldr	r3, [sp, #8]
   1b064:	sub	r5, r3, r5
   1b068:	mov	r0, r5
   1b06c:	bl	13574 <xmalloc@plt>
   1b070:	ldr	r1, [pc, #-1124]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b074:	sub	r2, r5, #1
   1b078:	ldr	r1, [r1]
   1b07c:	str	r0, [sp, #12]
   1b080:	bl	133b8 <memcpy@plt>
   1b084:	ldr	r2, [sp, #12]
   1b088:	add	r1, sp, #64	; 0x40
   1b08c:	add	r3, r2, r5
   1b090:	mov	r5, #0
   1b094:	mov	r2, #16
   1b098:	strb	r5, [r3, #-1]
   1b09c:	ldr	r0, [sp, #8]
   1b0a0:	bl	13250 <bfd_scan_vma@plt>
   1b0a4:	ldr	r2, [sp, #64]	; 0x40
   1b0a8:	ldrb	r2, [r2]
   1b0ac:	cmp	r2, r5
   1b0b0:	mov	r3, r0
   1b0b4:	bne	1bc54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7ffc>
   1b0b8:	mov	r0, r3
   1b0bc:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   1b0c0:	mov	r2, #0
   1b0c4:	mov	r1, r0
   1b0c8:	ldr	r0, [sp, #12]
   1b0cc:	bl	249c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d68>
   1b0d0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b0d4:	ldr	r3, [pc, #-1224]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b0d8:	ldr	r5, [pc, #-1240]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b0dc:	ldr	r3, [r3]
   1b0e0:	str	r3, [r5, #80]	; 0x50
   1b0e4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b0e8:	ldr	r3, [pc, #-1244]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b0ec:	ldr	r5, [pc, #-1260]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b0f0:	ldr	r3, [r3]
   1b0f4:	str	r3, [r5, #76]	; 0x4c
   1b0f8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b0fc:	ldr	r5, [pc, #-1276]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b100:	ldr	r2, [sp, #20]
   1b104:	ldrb	r3, [r5, #2]
   1b108:	bic	r3, r3, #96	; 0x60
   1b10c:	orr	r3, r3, r2, lsl #5
   1b110:	strb	r3, [r5, #2]
   1b114:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b118:	ldr	r3, [pc, #-1320]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b11c:	mov	r2, r3
   1b120:	mov	r3, #0
   1b124:	strb	r3, [r2, #24]
   1b128:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b12c:	ldr	r3, [pc, #-1340]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b130:	mov	r2, r3
   1b134:	mov	r3, #1
   1b138:	strb	r3, [r2, #24]
   1b13c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b140:	ldr	r3, [pc, #-1332]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b144:	mov	r2, #0
   1b148:	mov	r1, r2
   1b14c:	ldr	r0, [r3]
   1b150:	bl	137cc <strtoul@plt>
   1b154:	subs	r3, r0, #0
   1b158:	beq	1bbcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f74>
   1b15c:	ldr	r2, [pc, #-1328]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b160:	str	r3, [r2, #92]	; 0x5c
   1b164:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b168:	ldr	r5, [pc, #-1384]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b16c:	ldrb	r3, [r5]
   1b170:	orr	r3, r3, #128	; 0x80
   1b174:	strb	r3, [r5]
   1b178:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b17c:	ldr	r5, [pc, #-1404]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b180:	ldrb	r3, [r5, #6]
   1b184:	bic	r3, r3, #4
   1b188:	strb	r3, [r5, #6]
   1b18c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b190:	ldr	r5, [pc, #-1424]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b194:	ldrb	r3, [r5, #6]
   1b198:	orr	r3, r3, #4
   1b19c:	strb	r3, [r5, #6]
   1b1a0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b1a4:	ldr	r5, [pc, #-1444]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b1a8:	ldrb	r3, [r5]
   1b1ac:	bic	r3, r3, #64	; 0x40
   1b1b0:	strb	r3, [r5]
   1b1b4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b1b8:	ldr	r5, [pc, #-1464]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b1bc:	ldrb	r3, [r5]
   1b1c0:	orr	r3, r3, #64	; 0x40
   1b1c4:	strb	r3, [r5]
   1b1c8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b1cc:	ldr	r3, [pc, #-1500]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b1d0:	mov	r2, r3
   1b1d4:	mov	r3, #1
   1b1d8:	str	r3, [r2, #8]
   1b1dc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b1e0:	ldr	r3, [pc, #-1492]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b1e4:	ldr	r0, [r3]
   1b1e8:	bl	2a034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163dc>
   1b1ec:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b1f0:	ldr	r2, [pc, #-1512]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b1f4:	ldrb	r3, [r2]
   1b1f8:	bic	r3, r3, #128	; 0x80
   1b1fc:	strb	r3, [r2]
   1b200:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b204:	ldr	r2, [pc, #-1532]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b208:	ldrb	r3, [r2]
   1b20c:	orr	r3, r3, #128	; 0x80
   1b210:	strb	r3, [r2]
   1b214:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b218:	ldr	r2, [pc, #-1552]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b21c:	ldrb	r3, [r2]
   1b220:	bic	r3, r3, #64	; 0x40
   1b224:	strb	r3, [r2]
   1b228:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b22c:	ldr	r2, [pc, #-1572]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b230:	ldrb	r3, [r2]
   1b234:	orr	r3, r3, #64	; 0x40
   1b238:	strb	r3, [r2]
   1b23c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b240:	ldr	r2, [pc, #-1592]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b244:	ldrb	r3, [r2, #1]
   1b248:	orr	r3, r3, #1
   1b24c:	strb	r3, [r2, #1]
   1b250:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b254:	ldr	r3, [pc, #-1608]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b258:	ldr	r0, [r3]
   1b25c:	cmp	r0, #0
   1b260:	beq	1bb54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7efc>
   1b264:	mov	r2, #0
   1b268:	mov	r1, r2
   1b26c:	bl	13250 <bfd_scan_vma@plt>
   1b270:	ldr	r3, [pc, #-1604]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b274:	str	r0, [r3, #88]	; 0x58
   1b278:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b27c:	ldr	r3, [pc, #-1648]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b280:	ldr	r0, [r3]
   1b284:	cmp	r0, #0
   1b288:	beq	1bb44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7eec>
   1b28c:	mov	r2, #0
   1b290:	mov	r1, r2
   1b294:	bl	137cc <strtoul@plt>
   1b298:	ldr	r3, [pc, #-1644]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b29c:	str	r0, [r3, #84]	; 0x54
   1b2a0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2a4:	ldr	r3, [pc, #-1656]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b2a8:	mov	r2, #1
   1b2ac:	str	r2, [r3, #36]	; 0x24
   1b2b0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2b4:	ldr	r3, [pc, #-1704]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b2b8:	mov	r2, #0
   1b2bc:	mov	r1, #5
   1b2c0:	ldr	r0, [r3]
   1b2c4:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   1b2c8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2cc:	cmp	r9, #0
   1b2d0:	beq	1bbb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f5c>
   1b2d4:	bl	251dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11584>
   1b2d8:	sub	r9, r9, #1
   1b2dc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2e0:	bl	25174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1151c>
   1b2e4:	add	r9, r9, #1
   1b2e8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2ec:	ldr	r5, [pc, #-1772]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b2f0:	mov	r3, #2
   1b2f4:	str	r3, [r5, #20]
   1b2f8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b2fc:	ldr	r5, [pc, #-1788]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b300:	mov	r3, #0
   1b304:	str	r3, [r5, #20]
   1b308:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b30c:	ldr	r0, [pc, #-1792]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b310:	mov	r3, #0
   1b314:	mov	r2, r3
   1b318:	mov	r1, r3
   1b31c:	ldr	r0, [r0]
   1b320:	bl	250b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11458>
   1b324:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b328:	ldr	r2, [pc, #-1824]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b32c:	ldrb	r3, [r2, #1]
   1b330:	bic	r3, r3, #1
   1b334:	strb	r3, [r2, #1]
   1b338:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b33c:	ldr	r2, [pc, #-1844]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b340:	ldrb	r3, [r2]
   1b344:	bic	r3, r3, #32
   1b348:	strb	r3, [r2]
   1b34c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b350:	ldr	r3, [pc, #-1976]	; 1aba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f48>
   1b354:	mov	r2, #1
   1b358:	str	r2, [r3]
   1b35c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b360:	ldr	r3, [pc, #-1904]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b364:	mov	r2, r3
   1b368:	mov	r3, #0
   1b36c:	str	r3, [r2, #20]
   1b370:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b374:	ldr	r3, [pc, #-1924]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b378:	mov	r2, r3
   1b37c:	mov	r3, #0
   1b380:	str	r3, [r2, #16]
   1b384:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b388:	ldr	r5, [pc, #-1928]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b38c:	ldrb	r3, [r5, #3]
   1b390:	bic	r3, r3, #4
   1b394:	strb	r3, [r5, #3]
   1b398:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b39c:	ldr	r3, [pc, #-2048]	; 1aba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f4c>
   1b3a0:	mov	r2, #0
   1b3a4:	str	r2, [r3]
   1b3a8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b3ac:	ldr	r2, [pc, #-1952]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b3b0:	ldr	r3, [pc, #-1924]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b3b4:	ldr	r2, [r2]
   1b3b8:	str	r2, [r3, #76]	; 0x4c
   1b3bc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b3c0:	ldr	r5, [pc, #-1984]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b3c4:	ldrb	r3, [r5]
   1b3c8:	bic	r3, r3, #16
   1b3cc:	strb	r3, [r5]
   1b3d0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b3d4:	ldr	r3, [pc, #-2020]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b3d8:	mov	r2, r3
   1b3dc:	mov	r3, #1
   1b3e0:	str	r3, [r2, #4]
   1b3e4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b3e8:	ldr	r3, [pc, #-2040]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b3ec:	mov	r2, r3
   1b3f0:	mov	r3, #2
   1b3f4:	str	r3, [r2, #48]	; 0x30
   1b3f8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b3fc:	ldr	r3, [pc, #-2060]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b400:	mov	r2, r3
   1b404:	mov	r3, #1
   1b408:	str	r3, [r2, #48]	; 0x30
   1b40c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b410:	ldr	r3, [pc, #-2052]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b414:	ldr	r0, [r3]
   1b418:	bl	135a4 <xstrdup@plt>
   1b41c:	ldr	r3, [pc, #-2092]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b420:	str	r0, [r3, #32]
   1b424:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b428:	ldr	r3, [pc, #-2104]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b42c:	mov	r2, r3
   1b430:	mov	r3, #1
   1b434:	str	r3, [r2, #44]	; 0x2c
   1b438:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b43c:	ldr	r5, [pc, #-2108]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b440:	ldrb	r3, [r5, #7]
   1b444:	orr	r3, r3, #4
   1b448:	strb	r3, [r5, #7]
   1b44c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b450:	ldr	r2, [pc, #-2116]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b454:	ldr	r3, [pc, #-2232]	; 1aba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f4c>
   1b458:	ldr	r0, [r2]
   1b45c:	mov	r2, #1
   1b460:	cmp	r0, #0
   1b464:	str	r2, [r3]
   1b468:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b46c:	bl	13238 <cplus_demangle_name_to_style@plt>
   1b470:	subs	r5, r0, #0
   1b474:	beq	1c130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x84d8>
   1b478:	mov	r0, r5
   1b47c:	bl	133ac <cplus_demangle_set_style@plt>
   1b480:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b484:	ldr	r1, [pc, #-2276]	; 1aba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f50>
   1b488:	ldr	r3, [pc, #-2172]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b48c:	ldr	r5, [pc, #-2280]	; 1abac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f54>
   1b490:	ldr	r2, [r1]
   1b494:	ldr	r3, [r3]
   1b498:	add	r2, r2, #1
   1b49c:	mov	r0, r3
   1b4a0:	str	r2, [r1]
   1b4a4:	ldr	r1, [pc, #-2300]	; 1abb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f58>
   1b4a8:	str	r3, [r5]
   1b4ac:	bl	19754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5afc>
   1b4b0:	ldr	r3, [pc, #-2256]	; 1abe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f90>
   1b4b4:	mov	r2, #5
   1b4b8:	str	r2, [r3]
   1b4bc:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   1b4c0:	mov	r3, #0
   1b4c4:	str	r3, [r5]
   1b4c8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b4cc:	ldr	r5, [pc, #-2252]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b4d0:	ldr	r3, [pc, #-2272]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b4d4:	mov	r2, #1
   1b4d8:	mov	r1, r3
   1b4dc:	ldrb	r3, [r5, #1]
   1b4e0:	str	r2, [r1, #12]
   1b4e4:	orr	r3, r3, r2
   1b4e8:	strb	r3, [r5, #1]
   1b4ec:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b4f0:	ldr	r2, [pc, #-2280]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b4f4:	ldrb	r3, [r2]
   1b4f8:	orr	r3, r3, #32
   1b4fc:	strb	r3, [r2]
   1b500:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b504:	ldr	r3, [pc, #-2296]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b508:	ldr	r1, [pc, #-2396]	; 1abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f5c>
   1b50c:	ldr	r5, [r3]
   1b510:	mov	r0, r5
   1b514:	bl	13268 <strcmp@plt>
   1b518:	cmp	r0, #0
   1b51c:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b520:	ldr	r1, [pc, #-2416]	; 1abb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f60>
   1b524:	mov	r0, r5
   1b528:	bl	13268 <strcmp@plt>
   1b52c:	cmp	r0, #0
   1b530:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b534:	ldr	r1, [pc, #-2432]	; 1abbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f64>
   1b538:	mov	r0, r5
   1b53c:	bl	13268 <strcmp@plt>
   1b540:	cmp	r0, #0
   1b544:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b548:	mov	r0, r5
   1b54c:	ldr	r1, [pc, #-2452]	; 1abc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f68>
   1b550:	bl	13268 <strcmp@plt>
   1b554:	cmp	r0, #0
   1b558:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b55c:	mov	r2, #5
   1b560:	ldr	r1, [pc, #-2468]	; 1abc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f6c>
   1b564:	mov	r0, #0
   1b568:	bl	13460 <dcgettext@plt>
   1b56c:	ldr	r3, [pc, #-2400]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b570:	ldr	r1, [r3]
   1b574:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1b578:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b57c:	ldr	r3, [pc, #-2416]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b580:	ldr	r0, [r3]
   1b584:	bl	29d48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160f0>
   1b588:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b58c:	ldr	r5, [pc, #-2444]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b590:	ldr	r3, [r5]
   1b594:	orr	r3, r3, #98304	; 0x18000
   1b598:	str	r3, [r5]
   1b59c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b5a0:	mov	r0, #0
   1b5a4:	bl	2d8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ca4>
   1b5a8:	ldr	r3, [pc, #-2516]	; 1abdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f84>
   1b5ac:	mov	r2, #1
   1b5b0:	str	r2, [r3]
   1b5b4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b5b8:	ldr	r3, [pc, #-2476]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b5bc:	mov	r1, #1
   1b5c0:	ldr	r0, [r3]
   1b5c4:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   1b5c8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b5cc:	ldr	r3, [pc, #-2572]	; 1abc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f70>
   1b5d0:	mov	r2, #1
   1b5d4:	str	r2, [r3]
   1b5d8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b5dc:	ldr	r5, [pc, #-2524]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b5e0:	ldrb	r3, [r5, #1]
   1b5e4:	orr	r3, r3, #96	; 0x60
   1b5e8:	strb	r3, [r5, #1]
   1b5ec:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b5f0:	ldr	r5, [pc, #-2544]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b5f4:	ldrb	r3, [r5, #3]
   1b5f8:	orr	r3, r3, #8
   1b5fc:	strb	r3, [r5, #3]
   1b600:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b604:	ldr	r3, [pc, #-2552]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b608:	mov	r1, #0
   1b60c:	ldr	r0, [r3]
   1b610:	bl	23f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1033c>
   1b614:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b618:	ldr	r2, [pc, #-2576]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b61c:	ldr	r1, [pc, #-2544]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b620:	mov	r0, #0
   1b624:	ldrb	r3, [r2]
   1b628:	str	r0, [r1]
   1b62c:	bic	r3, r3, #32
   1b630:	strb	r3, [r2]
   1b634:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b638:	ldr	r3, [pc, #-2604]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b63c:	ldr	r0, [r3]
   1b640:	bl	22838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebe0>
   1b644:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b648:	ldr	r3, [pc, #-2620]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b64c:	mov	r2, #0
   1b650:	mov	r1, r2
   1b654:	ldr	r0, [r3]
   1b658:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   1b65c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b660:	ldr	r3, [r4]
   1b664:	cmp	r3, fp
   1b668:	beq	1bd4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80f4>
   1b66c:	ldr	r5, [pc, #-2668]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b670:	ldrb	r3, [r5]
   1b674:	tst	r3, #1
   1b678:	bne	1bb84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f2c>
   1b67c:	ldr	r0, [pc, #-2676]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b680:	ldrb	r3, [r5]
   1b684:	ldr	r2, [pc, #-2648]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b688:	ldrb	r1, [r0]
   1b68c:	bic	r3, r3, #1
   1b690:	orr	r3, r3, #2
   1b694:	bic	r1, r1, #32
   1b698:	strb	r1, [r0]
   1b69c:	mov	r1, #0
   1b6a0:	strb	r3, [r5]
   1b6a4:	str	r1, [r2, #12]
   1b6a8:	str	r1, [r2]
   1b6ac:	str	r1, [r2, #48]	; 0x30
   1b6b0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b6b4:	ldr	r3, [pc, #-2728]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b6b8:	ldr	r2, [pc, #-2760]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b6bc:	ldr	r3, [r3]
   1b6c0:	str	r2, [sp, #8]
   1b6c4:	ldrb	r0, [r3]
   1b6c8:	cmp	r0, #0
   1b6cc:	bne	1b6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7a90>
   1b6d0:	ldr	r2, [r2, #64]	; 0x40
   1b6d4:	cmp	r2, #0
   1b6d8:	beq	1b6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7a90>
   1b6dc:	ldrb	r2, [r2]
   1b6e0:	cmp	r2, #0
   1b6e4:	bne	1bd98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8140>
   1b6e8:	ldr	r2, [sp, #8]
   1b6ec:	str	r3, [r2, #64]	; 0x40
   1b6f0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b6f4:	ldr	r5, [pc, #-2804]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b6f8:	ldrb	r3, [r5, #1]
   1b6fc:	bic	r3, r3, #64	; 0x40
   1b700:	orr	r3, r3, #32
   1b704:	strb	r3, [r5, #1]
   1b708:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b70c:	ldr	r3, [pc, #-2844]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b710:	mov	r2, r3
   1b714:	mov	r3, #1
   1b718:	str	r3, [r2]
   1b71c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b720:	ldr	r3, [pc, #-2836]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b724:	ldr	r0, [r3]
   1b728:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   1b72c:	ldr	r3, [pc, #-2892]	; 1abe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f90>
   1b730:	mov	r2, #2
   1b734:	str	r2, [r3]
   1b738:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   1b73c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b740:	ldr	r3, [pc, #-2868]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b744:	ldr	r0, [r3]
   1b748:	bl	24a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e0c>
   1b74c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b750:	ldr	r3, [pc, #-2884]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b754:	ldr	r1, [pc, #-2960]	; 1abcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f74>
   1b758:	ldr	r5, [r3]
   1b75c:	mov	r0, r5
   1b760:	bl	13268 <strcmp@plt>
   1b764:	cmp	r0, #0
   1b768:	beq	1bb20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7ec8>
   1b76c:	ldr	r1, [pc, #-2980]	; 1abd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f78>
   1b770:	mov	r0, r5
   1b774:	bl	13268 <strcmp@plt>
   1b778:	cmp	r0, #0
   1b77c:	beq	1b794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b3c>
   1b780:	mov	r0, r5
   1b784:	ldr	r1, [pc, #-3000]	; 1abd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f7c>
   1b788:	bl	13268 <strcmp@plt>
   1b78c:	cmp	r0, #0
   1b790:	bne	1bf08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x82b0>
   1b794:	ldr	r2, [pc, #-2956]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1b798:	ldrb	r3, [r2]
   1b79c:	orr	r3, r3, #32
   1b7a0:	strb	r3, [r2]
   1b7a4:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b7a8:	ldr	r3, [pc, #-2972]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b7ac:	mov	r2, #2
   1b7b0:	ldr	r1, [pc, #-3040]	; 1abd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f80>
   1b7b4:	ldr	r5, [r3]
   1b7b8:	mov	r0, r5
   1b7bc:	bl	13bb0 <strncmp@plt>
   1b7c0:	cmp	r0, #0
   1b7c4:	addeq	r5, r5, #2
   1b7c8:	ldreq	r3, [pc, #-3004]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b7cc:	streq	r5, [r3]
   1b7d0:	ldr	r3, [sp, #16]
   1b7d4:	cmp	r3, #0
   1b7d8:	beq	1b7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b8c>
   1b7dc:	mov	r0, r3
   1b7e0:	bl	13364 <free@plt>
   1b7e4:	mov	r0, r5
   1b7e8:	bl	135a4 <xstrdup@plt>
   1b7ec:	str	r0, [sp, #16]
   1b7f0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b7f4:	ldr	r5, [pc, #-3060]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b7f8:	ldr	r3, [r5]
   1b7fc:	bic	r3, r3, #32768	; 0x8000
   1b800:	orr	r3, r3, #65536	; 0x10000
   1b804:	str	r3, [r5]
   1b808:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b80c:	mov	r0, #1
   1b810:	bl	2d8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ca4>
   1b814:	ldr	r3, [pc, #-3136]	; 1abdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f84>
   1b818:	mov	r2, #1
   1b81c:	str	r2, [r3]
   1b820:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b824:	ldr	r3, [pc, #-3148]	; 1abe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f88>
   1b828:	ldr	r2, [pc, #-3100]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b82c:	ldr	r5, [pc, #-3152]	; 1abe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f8c>
   1b830:	ldr	r3, [r3]
   1b834:	ldr	r0, [r2]
   1b838:	str	r3, [r5]
   1b83c:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   1b840:	ldr	r3, [pc, #-3168]	; 1abe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f90>
   1b844:	mov	r2, #1
   1b848:	str	r2, [r3]
   1b84c:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   1b850:	mov	r3, #0
   1b854:	str	r3, [r5]
   1b858:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b85c:	ldr	r3, [pc, #-3180]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b860:	str	r3, [sp, #8]
   1b864:	ldr	r5, [r3, #80]	; 0x50
   1b868:	cmp	r5, #0
   1b86c:	beq	1bb64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7f0c>
   1b870:	ldr	r3, [r5]
   1b874:	cmp	r3, #0
   1b878:	streq	r3, [sp, #12]
   1b87c:	moveq	r2, #4
   1b880:	moveq	r1, #8
   1b884:	beq	1b8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c60>
   1b888:	mov	r3, r5
   1b88c:	b	1b894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c3c>
   1b890:	mov	r2, r0
   1b894:	ldr	r1, [r3, #4]!
   1b898:	add	r0, r2, #1
   1b89c:	cmp	r1, #0
   1b8a0:	bne	1b890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7c38>
   1b8a4:	add	r2, r2, #3
   1b8a8:	lsl	r1, r2, #2
   1b8ac:	sub	r2, r1, #4
   1b8b0:	sub	r3, r1, #8
   1b8b4:	str	r3, [sp, #12]
   1b8b8:	mov	r0, r5
   1b8bc:	str	r2, [sp, #24]
   1b8c0:	bl	134fc <xrealloc@plt>
   1b8c4:	ldr	r2, [sp, #8]
   1b8c8:	ldr	r3, [pc, #-3260]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b8cc:	ldr	r1, [r3]
   1b8d0:	mov	r3, #0
   1b8d4:	str	r0, [r2, #80]	; 0x50
   1b8d8:	ldr	r2, [sp, #12]
   1b8dc:	str	r1, [r0, r2]
   1b8e0:	ldr	r2, [sp, #24]
   1b8e4:	str	r3, [r0, r2]
   1b8e8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b8ec:	ldr	r3, [pc, #-3296]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b8f0:	mov	r1, #1
   1b8f4:	ldr	r0, [r3]
   1b8f8:	bl	24a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10db4>
   1b8fc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b900:	ldr	r3, [pc, #-3316]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b904:	ldr	r1, [pc, #-3360]	; 1abec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f94>
   1b908:	ldr	r5, [r3]
   1b90c:	mov	r0, r5
   1b910:	bl	13520 <strcasecmp@plt>
   1b914:	cmp	r0, #0
   1b918:	beq	1bb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7ebc>
   1b91c:	ldr	r1, [pc, #-3380]	; 1abf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f98>
   1b920:	mov	r0, r5
   1b924:	bl	13520 <strcasecmp@plt>
   1b928:	cmp	r0, #0
   1b92c:	bne	1bc98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8040>
   1b930:	ldr	r3, [pc, #-3332]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b934:	mov	r2, #2
   1b938:	str	r2, [r3, #28]
   1b93c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b940:	ldr	r3, [pc, #-3380]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b944:	ldr	r2, [pc, #-3412]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b948:	ldr	r3, [r3]
   1b94c:	str	r3, [r2, #76]	; 0x4c
   1b950:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b954:	ldr	r5, [pc, #-3412]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b958:	ldrb	r3, [r5]
   1b95c:	orr	r3, r3, #16
   1b960:	strb	r3, [r5]
   1b964:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b968:	ldr	r3, [pc, #-3420]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b96c:	ldr	r0, [r3]
   1b970:	bl	2f8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc60>
   1b974:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b978:	ldr	r3, [pc, #-3404]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1b97c:	ldr	r2, [pc, #-3472]	; 1abf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f9c>
   1b980:	str	r2, [r3, #76]	; 0x4c
   1b984:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b988:	ldr	r3, [pc, #-3452]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b98c:	mov	r1, #1
   1b990:	ldr	r0, [r3]
   1b994:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   1b998:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b99c:	ldr	r5, [pc, #-3484]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1b9a0:	ldr	r2, [pc, #-3476]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b9a4:	ldr	r1, [pc, #-3508]	; 1abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa0>
   1b9a8:	ldrb	r3, [r5, #7]
   1b9ac:	ldr	r2, [r2]
   1b9b0:	bic	r3, r3, #4
   1b9b4:	strb	r3, [r5, #7]
   1b9b8:	str	r2, [r1, #60]	; 0x3c
   1b9bc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b9c0:	ldr	r3, [pc, #-3508]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1b9c4:	mov	r2, #0
   1b9c8:	add	r1, sp, #64	; 0x40
   1b9cc:	ldr	r0, [r3]
   1b9d0:	bl	137cc <strtoul@plt>
   1b9d4:	ldr	r2, [pc, #-3552]	; 1abfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa4>
   1b9d8:	ldr	r3, [sp, #64]	; 0x40
   1b9dc:	str	r0, [r2]
   1b9e0:	ldrb	r3, [r3]
   1b9e4:	cmp	r3, #0
   1b9e8:	beq	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1b9ec:	mov	r2, #5
   1b9f0:	ldr	r1, [pc, #-3576]	; 1ac00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fa8>
   1b9f4:	mov	r0, #0
   1b9f8:	bl	13460 <dcgettext@plt>
   1b9fc:	ldr	r3, [pc, #-3568]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ba00:	ldr	r1, [r3]
   1ba04:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1ba08:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ba0c:	ldr	r3, [pc, #-3584]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1ba10:	mov	r2, #0
   1ba14:	mov	r1, r2
   1ba18:	ldr	r0, [r3]
   1ba1c:	bl	137cc <strtoul@plt>
   1ba20:	ldr	r5, [pc, #-3616]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1ba24:	ldrb	r3, [r5, #6]
   1ba28:	bic	r3, r3, #2
   1ba2c:	adds	r0, r0, #0
   1ba30:	movne	r0, #1
   1ba34:	orr	r3, r3, r0, lsl #1
   1ba38:	strb	r3, [r5, #6]
   1ba3c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ba40:	ldr	r0, [pc, #-3640]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1ba44:	ldr	r2, [pc, #-3608]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1ba48:	mov	r1, #0
   1ba4c:	ldrb	r3, [r0]
   1ba50:	str	r1, [r2, #48]	; 0x30
   1ba54:	str	r1, [r2]
   1ba58:	bic	r3, r3, #32
   1ba5c:	strb	r3, [r0]
   1ba60:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1ba64:	mov	r2, #5
   1ba68:	ldr	r1, [pc, #-3692]	; 1ac04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fac>
   1ba6c:	bl	13460 <dcgettext@plt>
   1ba70:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1ba74:	str	r4, [r6, #64]	; 0x40
   1ba78:	b	1a354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66fc>
   1ba7c:	ldrb	r2, [r4, #1]
   1ba80:	orr	r2, r2, #8
   1ba84:	strb	r2, [r4, #1]
   1ba88:	b	1a444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67ec>
   1ba8c:	mov	r0, r4
   1ba90:	mov	r1, #1
   1ba94:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   1ba98:	b	1a390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6738>
   1ba9c:	tst	r1, #1
   1baa0:	beq	1a4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6890>
   1baa4:	ldrb	r3, [r4]
   1baa8:	mov	r2, #0
   1baac:	str	r2, [r4, #128]	; 0x80
   1bab0:	orr	r3, r3, #4
   1bab4:	strb	r3, [r4]
   1bab8:	str	r2, [r6, #56]	; 0x38
   1babc:	and	r3, r3, #3
   1bac0:	b	1a450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67f8>
   1bac4:	ldr	r3, [sp, #80]	; 0x50
   1bac8:	ldr	r0, [r5]
   1bacc:	and	r3, r3, #61440	; 0xf000
   1bad0:	cmp	r3, #16384	; 0x4000
   1bad4:	str	r0, [sp, #36]	; 0x24
   1bad8:	beq	1a528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x68d0>
   1badc:	mov	r2, #0
   1bae0:	mov	r1, #1
   1bae4:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   1bae8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1baec:	ldr	r5, [pc, #-3820]	; 1ac08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb0>
   1baf0:	ldrh	r3, [r5, #2]
   1baf4:	bic	r3, r3, #480	; 0x1e0
   1baf8:	orr	r3, r3, #160	; 0xa0
   1bafc:	strh	r3, [r5, #2]
   1bb00:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb04:	ldr	r3, [pc, #-3840]	; 1ac0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb4>
   1bb08:	mov	r2, #1
   1bb0c:	str	r2, [r3]
   1bb10:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb14:	ldr	r3, [pc, #-3816]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1bb18:	str	r0, [r3, #28]
   1bb1c:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb20:	ldr	r2, [pc, #-3864]	; 1ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fb8>
   1bb24:	ldrb	r3, [r2]
   1bb28:	bic	r3, r3, #32
   1bb2c:	strb	r3, [r2]
   1bb30:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb34:	ldr	r3, [pc, #-3848]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1bb38:	mov	r2, #1
   1bb3c:	str	r2, [r3, #56]	; 0x38
   1bb40:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb44:	ldr	r3, [pc, #-3864]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1bb48:	mov	r2, #32768	; 0x8000
   1bb4c:	str	r2, [r3, #84]	; 0x54
   1bb50:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb54:	ldr	r3, [pc, #-3880]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1bb58:	mov	r2, #1
   1bb5c:	str	r2, [r3, #88]	; 0x58
   1bb60:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb64:	mov	r0, #8
   1bb68:	bl	13574 <xmalloc@plt>
   1bb6c:	ldr	r3, [pc, #-3936]	; 1ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fbc>
   1bb70:	ldr	r2, [sp, #8]
   1bb74:	ldr	r3, [r3]
   1bb78:	str	r0, [r2, #80]	; 0x50
   1bb7c:	stm	r0, {r3, r5}
   1bb80:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bb84:	mov	r2, #5
   1bb88:	ldr	r1, [pc, #-3960]	; 1ac18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc0>
   1bb8c:	mov	r0, #0
   1bb90:	bl	13460 <dcgettext@plt>
   1bb94:	ldrb	r3, [r5]
   1bb98:	ldr	r2, [pc, #-3972]	; 1ac1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc4>
   1bb9c:	ldr	r1, [pc, #-3972]	; 1ac20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc8>
   1bba0:	and	r3, r3, #3
   1bba4:	cmp	r3, #3
   1bba8:	movne	r1, r2
   1bbac:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bbb0:	b	1b67c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7a24>
   1bbb4:	mov	r2, #5
   1bbb8:	ldr	r1, [pc, #-3996]	; 1ac24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fcc>
   1bbbc:	mov	r0, r9
   1bbc0:	bl	13460 <dcgettext@plt>
   1bbc4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bbc8:	b	1b2d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x767c>
   1bbcc:	mov	r2, #5
   1bbd0:	ldr	r1, [pc, #-4016]	; 1ac28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fd0>
   1bbd4:	bl	13460 <dcgettext@plt>
   1bbd8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bbdc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bbe0:	mov	r2, #5
   1bbe4:	ldr	r1, [pc, #-4032]	; 1ac2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fd4>
   1bbe8:	bl	13460 <dcgettext@plt>
   1bbec:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bbf0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bbf4:	mov	r2, #5
   1bbf8:	ldr	r1, [pc, #-4048]	; 1ac30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fd8>
   1bbfc:	bl	13460 <dcgettext@plt>
   1bc00:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bc04:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc08:	ldr	r3, [pc, #-4060]	; 1ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fdc>
   1bc0c:	mov	r2, #2
   1bc10:	str	r2, [r3, #44]	; 0x2c
   1bc14:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc18:	mov	r0, r3
   1bc1c:	bl	135a4 <xstrdup@plt>
   1bc20:	ldr	r3, [sp, #8]
   1bc24:	str	r0, [r3, #72]	; 0x48
   1bc28:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc2c:	ldr	r1, [pc, #2960]	; 1c7c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b6c>
   1bc30:	mov	r0, r2
   1bc34:	mov	r2, #5
   1bc38:	bl	13460 <dcgettext@plt>
   1bc3c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bc40:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc44:	bl	135a4 <xstrdup@plt>
   1bc48:	ldr	r3, [sp, #8]
   1bc4c:	str	r0, [r3, #68]	; 0x44
   1bc50:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc54:	str	r0, [sp, #24]
   1bc58:	mov	r2, #5
   1bc5c:	ldr	r1, [pc, #2916]	; 1c7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b70>
   1bc60:	mov	r0, r5
   1bc64:	bl	13460 <dcgettext@plt>
   1bc68:	ldr	r1, [sp, #8]
   1bc6c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bc70:	ldr	r3, [sp, #24]
   1bc74:	b	1b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7460>
   1bc78:	ldr	r9, [sp, #12]
   1bc7c:	ldr	fp, [sp, #24]
   1bc80:	ldr	r6, [sp, #28]
   1bc84:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc88:	ldr	r9, [sp, #12]
   1bc8c:	ldr	fp, [sp, #24]
   1bc90:	ldr	r6, [sp, #28]
   1bc94:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bc98:	ldr	r1, [pc, #2860]	; 1c7cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b74>
   1bc9c:	mov	r0, r5
   1bca0:	bl	13520 <strcasecmp@plt>
   1bca4:	cmp	r0, #0
   1bca8:	beq	1bdac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8154>
   1bcac:	mov	r0, r5
   1bcb0:	ldr	r1, [pc, #2840]	; 1c7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b78>
   1bcb4:	bl	13520 <strcasecmp@plt>
   1bcb8:	cmp	r0, #0
   1bcbc:	bne	1c7ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b54>
   1bcc0:	ldr	r3, [pc, #2828]	; 1c7d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b7c>
   1bcc4:	mov	r2, #1
   1bcc8:	str	r2, [r3, #28]
   1bccc:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bcd0:	ldr	r1, [pc, #2816]	; 1c7d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b80>
   1bcd4:	mov	r0, r5
   1bcd8:	bl	13268 <strcmp@plt>
   1bcdc:	cmp	r0, #0
   1bce0:	beq	1bd6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8114>
   1bce4:	mov	r0, r5
   1bce8:	ldr	r1, [pc, #2796]	; 1c7dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b84>
   1bcec:	bl	13268 <strcmp@plt>
   1bcf0:	cmp	r0, #0
   1bcf4:	bne	1c78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b34>
   1bcf8:	ldr	r5, [pc, #2784]	; 1c7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b88>
   1bcfc:	ldr	r2, [sp, #20]
   1bd00:	ldrb	r3, [r5, #2]
   1bd04:	bic	r3, r3, #96	; 0x60
   1bd08:	orr	r3, r3, r2, lsl #5
   1bd0c:	strb	r3, [r5, #2]
   1bd10:	ldrh	r3, [r5, #2]
   1bd14:	bic	r3, r3, #256	; 0x100
   1bd18:	orr	r3, r3, #128	; 0x80
   1bd1c:	strh	r3, [r5, #2]
   1bd20:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bd24:	mov	r2, #5
   1bd28:	ldr	r1, [pc, #2740]	; 1c7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b8c>
   1bd2c:	mov	r0, #0
   1bd30:	ldr	r7, [sp, #24]
   1bd34:	ldr	r6, [sp, #12]
   1bd38:	bl	13460 <dcgettext@plt>
   1bd3c:	ldr	r3, [sp, #8]
   1bd40:	ldr	r1, [r7, r3]
   1bd44:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bd48:	b	1a2fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66a4>
   1bd4c:	mov	r2, #5
   1bd50:	ldr	r1, [pc, #2704]	; 1c7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b90>
   1bd54:	mov	r0, #0
   1bd58:	bl	13460 <dcgettext@plt>
   1bd5c:	ldr	r3, [r4]
   1bd60:	ldr	r1, [r7, r3, lsl #2]
   1bd64:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bd68:	b	1b66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7a14>
   1bd6c:	ldr	r5, [pc, #2668]	; 1c7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b88>
   1bd70:	ldr	r2, [sp, #20]
   1bd74:	ldrb	r3, [r5, #2]
   1bd78:	bic	r3, r3, #64	; 0x40
   1bd7c:	orr	r3, r3, #32
   1bd80:	strb	r3, [r5, #2]
   1bd84:	ldrh	r3, [r5, #2]
   1bd88:	bic	r3, r3, #384	; 0x180
   1bd8c:	orr	r3, r3, r2, lsl #7
   1bd90:	strh	r3, [r5, #2]
   1bd94:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bd98:	mov	r2, #5
   1bd9c:	ldr	r1, [pc, #2632]	; 1c7ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b94>
   1bda0:	bl	13460 <dcgettext@plt>
   1bda4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bda8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bdac:	ldr	r3, [pc, #2592]	; 1c7d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b7c>
   1bdb0:	mov	r2, #3
   1bdb4:	str	r2, [r3, #28]
   1bdb8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bdbc:	mov	r2, #5
   1bdc0:	ldr	r1, [pc, #2600]	; 1c7f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b98>
   1bdc4:	mov	r0, #0
   1bdc8:	bl	13460 <dcgettext@plt>
   1bdcc:	ldr	r3, [pc, #2592]	; 1c7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b9c>
   1bdd0:	ldr	fp, [pc, #2592]	; 1c7f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ba0>
   1bdd4:	mov	sl, #0
   1bdd8:	ldr	r1, [r3]
   1bddc:	bl	132bc <printf@plt>
   1bde0:	mov	r2, #5
   1bde4:	ldr	r1, [pc, #2576]	; 1c7fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ba4>
   1bde8:	mov	r0, #0
   1bdec:	bl	13460 <dcgettext@plt>
   1bdf0:	bl	132bc <printf@plt>
   1bdf4:	ldr	r3, [pc, #2564]	; 1c800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ba8>
   1bdf8:	ldr	r9, [sp, #32]
   1bdfc:	str	r3, [sp, #8]
   1be00:	b	1be1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x81c4>
   1be04:	add	sl, sl, #1
   1be08:	cmp	sl, #173	; 0xad
   1be0c:	add	r9, r9, #32
   1be10:	beq	1c1a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x854c>
   1be14:	ldr	r3, [r9, #24]
   1be18:	str	r3, [sp, #8]
   1be1c:	ldr	r3, [sp, #8]
   1be20:	cmp	r3, #0
   1be24:	beq	1be04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x81ac>
   1be28:	ldr	r0, [pc, #2516]	; 1c804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bac>
   1be2c:	bl	132bc <printf@plt>
   1be30:	mov	r5, r9
   1be34:	mov	r6, sl
   1be38:	mov	r1, #0
   1be3c:	mov	r4, #2
   1be40:	b	1bed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x827c>
   1be44:	ldr	r1, [pc, #2492]	; 1c808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb0>
   1be48:	ldr	r0, [pc, #2492]	; 1c80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb4>
   1be4c:	bl	132bc <printf@plt>
   1be50:	mov	r3, #4
   1be54:	ldr	r7, [r5, #20]
   1be58:	add	r4, r4, r3
   1be5c:	cmp	r7, #0
   1be60:	moveq	r1, #1
   1be64:	beq	1beb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8260>
   1be68:	ldr	r3, [r5, #4]
   1be6c:	cmp	r3, #2
   1be70:	beq	1be80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8228>
   1be74:	mov	r0, #32
   1be78:	bl	138b0 <putchar@plt>
   1be7c:	add	r4, r4, #1
   1be80:	mov	r2, #5
   1be84:	mov	r1, r7
   1be88:	mov	r0, #0
   1be8c:	bl	13460 <dcgettext@plt>
   1be90:	mov	r1, r0
   1be94:	ldr	r0, [pc, #2420]	; 1c810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb8>
   1be98:	bl	132bc <printf@plt>
   1be9c:	mov	r1, r7
   1bea0:	mov	r2, #5
   1bea4:	mov	r0, #0
   1bea8:	bl	13460 <dcgettext@plt>
   1beac:	bl	137d8 <strlen@plt>
   1beb0:	mov	r1, #1
   1beb4:	add	r4, r4, r0
   1beb8:	add	r6, r6, #1
   1bebc:	cmp	r6, #172	; 0xac
   1bec0:	bhi	1bf50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x82f8>
   1bec4:	add	r5, r5, #32
   1bec8:	ldr	r3, [r5, #24]
   1becc:	cmp	r3, #0
   1bed0:	bne	1bf50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x82f8>
   1bed4:	ldrb	r2, [r5, #16]
   1bed8:	cmp	r2, #0
   1bedc:	beq	1beb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8260>
   1bee0:	ldr	r3, [r5, #28]
   1bee4:	cmp	r3, #4
   1bee8:	beq	1beb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8260>
   1beec:	cmp	r1, #0
   1bef0:	bne	1be44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x81ec>
   1bef4:	ldr	r1, [pc, #2328]	; 1c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bbc>
   1bef8:	ldr	r0, [pc, #2316]	; 1c80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb4>
   1befc:	bl	132bc <printf@plt>
   1bf00:	mov	r3, #2
   1bf04:	b	1be54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x81fc>
   1bf08:	mov	r2, #5
   1bf0c:	ldr	r1, [pc, #2308]	; 1c818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc0>
   1bf10:	mov	r0, #0
   1bf14:	bl	13460 <dcgettext@plt>
   1bf18:	ldr	r3, [pc, #2300]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1bf1c:	ldr	r1, [r3]
   1bf20:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1bf24:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1bf28:	ldr	r3, [pc, #2288]	; 1c820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc8>
   1bf2c:	ldr	r0, [r3]
   1bf30:	ldrb	r3, [r0]
   1bf34:	cmp	r3, #0
   1bf38:	bne	1c784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b2c>
   1bf3c:	mov	r0, #0
   1bf40:	bl	139d0 <xexit@plt>
   1bf44:	mov	r0, #2
   1bf48:	bl	2d8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ca4>
   1bf4c:	b	1bf3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x82e4>
   1bf50:	mov	r6, r9
   1bf54:	mov	r7, sl
   1bf58:	str	sl, [sp, #12]
   1bf5c:	b	1bffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x83a4>
   1bf60:	cmp	r3, #1
   1bf64:	bls	1c08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8434>
   1bf68:	mov	r3, r8
   1bf6c:	ldr	r2, [pc, #2208]	; 1c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bbc>
   1bf70:	ldr	r1, [pc, #2192]	; 1c808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb0>
   1bf74:	ldr	r0, [pc, #2216]	; 1c824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bcc>
   1bf78:	bl	132bc <printf@plt>
   1bf7c:	mov	r5, #3
   1bf80:	mov	r0, r8
   1bf84:	bl	137d8 <strlen@plt>
   1bf88:	ldr	r8, [r6, #20]
   1bf8c:	add	r5, sl, r5
   1bf90:	cmp	r8, #0
   1bf94:	moveq	r1, #1
   1bf98:	add	r4, r4, r0
   1bf9c:	add	r4, r5, r4
   1bfa0:	beq	1bfe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8388>
   1bfa4:	mov	r2, #5
   1bfa8:	mov	r1, r8
   1bfac:	mov	r0, #0
   1bfb0:	bl	13460 <dcgettext@plt>
   1bfb4:	add	r4, r4, #1
   1bfb8:	mov	r1, r0
   1bfbc:	ldr	r0, [pc, #2148]	; 1c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bd0>
   1bfc0:	bl	132bc <printf@plt>
   1bfc4:	mov	r1, r8
   1bfc8:	mov	r2, #5
   1bfcc:	mov	r0, #0
   1bfd0:	bl	13460 <dcgettext@plt>
   1bfd4:	bl	137d8 <strlen@plt>
   1bfd8:	mov	r1, #1
   1bfdc:	add	r4, r4, r0
   1bfe0:	add	r7, r7, #1
   1bfe4:	cmp	r7, #172	; 0xac
   1bfe8:	bhi	1c050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x83f8>
   1bfec:	add	r6, r6, #32
   1bff0:	ldr	r3, [r6, #24]
   1bff4:	cmp	r3, #0
   1bff8:	bne	1c050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x83f8>
   1bffc:	ldr	r8, [r6]
   1c000:	cmp	r8, #0
   1c004:	beq	1bfe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8388>
   1c008:	ldr	r3, [r6, #28]
   1c00c:	cmp	r3, #4
   1c010:	beq	1bfe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8388>
   1c014:	sub	r3, r3, #2
   1c018:	cmp	r3, #1
   1c01c:	movhi	sl, #0
   1c020:	movls	sl, #1
   1c024:	cmp	r1, #0
   1c028:	bne	1bf60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8308>
   1c02c:	cmp	r3, #1
   1c030:	bls	1c0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8450>
   1c034:	ldr	r2, [pc, #2008]	; 1c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bbc>
   1c038:	mov	r3, r8
   1c03c:	mov	r1, r2
   1c040:	ldr	r0, [pc, #2012]	; 1c824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bcc>
   1c044:	bl	132bc <printf@plt>
   1c048:	mov	r5, #1
   1c04c:	b	1bf80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8328>
   1c050:	cmp	r4, #29
   1c054:	ldr	sl, [sp, #12]
   1c058:	bgt	1c0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x846c>
   1c05c:	add	r4, r4, #1
   1c060:	ldr	r1, [fp]
   1c064:	mov	r0, #32
   1c068:	bl	13a18 <putc@plt>
   1c06c:	cmp	r4, #30
   1c070:	bne	1c05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8404>
   1c074:	ldr	r1, [sp, #8]
   1c078:	mov	r2, #5
   1c07c:	mov	r0, #0
   1c080:	bl	13460 <dcgettext@plt>
   1c084:	bl	136d0 <puts@plt>
   1c088:	b	1be04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x81ac>
   1c08c:	mov	r3, r8
   1c090:	ldr	r2, [pc, #1940]	; 1c82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bd4>
   1c094:	ldr	r1, [pc, #1900]	; 1c808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bb0>
   1c098:	ldr	r0, [pc, #1924]	; 1c824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bcc>
   1c09c:	bl	132bc <printf@plt>
   1c0a0:	mov	r5, #3
   1c0a4:	b	1bf80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8328>
   1c0a8:	mov	r3, r8
   1c0ac:	ldr	r2, [pc, #1912]	; 1c82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bd4>
   1c0b0:	ldr	r1, [pc, #1884]	; 1c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bbc>
   1c0b4:	ldr	r0, [pc, #1896]	; 1c824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bcc>
   1c0b8:	bl	132bc <printf@plt>
   1c0bc:	mov	r5, #1
   1c0c0:	b	1bf80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8328>
   1c0c4:	mov	r0, #10
   1c0c8:	bl	138b0 <putchar@plt>
   1c0cc:	mov	r4, #0
   1c0d0:	b	1c05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8404>
   1c0d4:	mov	r2, #5
   1c0d8:	ldr	r1, [pc, #1872]	; 1c830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bd8>
   1c0dc:	mov	r0, #0
   1c0e0:	bl	13460 <dcgettext@plt>
   1c0e4:	ldr	r3, [pc, #1840]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c0e8:	ldr	r1, [r3]
   1c0ec:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c0f0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1c0f4:	mov	r2, #5
   1c0f8:	ldr	r1, [pc, #1844]	; 1c834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bdc>
   1c0fc:	bl	13460 <dcgettext@plt>
   1c100:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c104:	ldr	r3, [pc, #1808]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c108:	ldr	r5, [r3]
   1c10c:	b	1b020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x73c8>
   1c110:	mov	r2, #5
   1c114:	ldr	r1, [pc, #1820]	; 1c838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8be0>
   1c118:	mov	r0, #0
   1c11c:	bl	13460 <dcgettext@plt>
   1c120:	ldr	r3, [pc, #1780]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c124:	ldr	r1, [r3]
   1c128:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c12c:	b	1aeac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7254>
   1c130:	mov	r2, #5
   1c134:	ldr	r1, [pc, #1792]	; 1c83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8be4>
   1c138:	bl	13460 <dcgettext@plt>
   1c13c:	ldr	r3, [pc, #1752]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c140:	ldr	r1, [r3]
   1c144:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c148:	b	1b478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7820>
   1c14c:	mov	r2, #5
   1c150:	ldr	r1, [pc, #1768]	; 1c840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8be8>
   1c154:	mov	r0, #0
   1c158:	bl	13460 <dcgettext@plt>
   1c15c:	ldr	r1, [pc, #1760]	; 1c844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bec>
   1c160:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c164:	b	1a658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a00>
   1c168:	mov	r2, #5
   1c16c:	ldr	r1, [pc, #1740]	; 1c840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8be8>
   1c170:	mov	r0, #0
   1c174:	bl	13460 <dcgettext@plt>
   1c178:	ldr	r1, [pc, #1736]	; 1c848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bf0>
   1c17c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c180:	b	1a950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6cf8>
   1c184:	mov	r2, #5
   1c188:	ldr	r1, [pc, #1724]	; 1c84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bf4>
   1c18c:	mov	r0, #0
   1c190:	bl	13460 <dcgettext@plt>
   1c194:	ldr	r3, [pc, #1664]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c198:	ldr	r1, [r3]
   1c19c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c1a0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1c1a4:	mov	r2, #5
   1c1a8:	ldr	r1, [pc, #1696]	; 1c850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bf8>
   1c1ac:	mov	r0, #0
   1c1b0:	bl	13460 <dcgettext@plt>
   1c1b4:	bl	132bc <printf@plt>
   1c1b8:	mov	r4, #23
   1c1bc:	ldr	r1, [fp]
   1c1c0:	mov	r0, #32
   1c1c4:	bl	13a18 <putc@plt>
   1c1c8:	subs	r4, r4, #1
   1c1cc:	bne	1c1bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8564>
   1c1d0:	mov	r2, #5
   1c1d4:	ldr	r1, [pc, #1656]	; 1c854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bfc>
   1c1d8:	mov	r0, r4
   1c1dc:	bl	13460 <dcgettext@plt>
   1c1e0:	bl	132bc <printf@plt>
   1c1e4:	mov	r2, #5
   1c1e8:	mov	r0, r4
   1c1ec:	ldr	r1, [pc, #1636]	; 1c858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c00>
   1c1f0:	bl	13460 <dcgettext@plt>
   1c1f4:	ldr	r3, [pc, #1528]	; 1c7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b9c>
   1c1f8:	ldr	r1, [r3]
   1c1fc:	bl	132bc <printf@plt>
   1c200:	bl	13544 <bfd_target_list@plt>
   1c204:	ldr	r1, [r0]
   1c208:	mov	r4, r0
   1c20c:	cmp	r1, #0
   1c210:	movne	r5, r0
   1c214:	ldrne	r6, [pc, #1548]	; 1c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bd0>
   1c218:	beq	1c230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x85d8>
   1c21c:	mov	r0, r6
   1c220:	bl	132bc <printf@plt>
   1c224:	ldr	r1, [r5, #4]!
   1c228:	cmp	r1, #0
   1c22c:	bne	1c21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x85c4>
   1c230:	mov	r0, r4
   1c234:	bl	13364 <free@plt>
   1c238:	mov	r0, #10
   1c23c:	bl	138b0 <putchar@plt>
   1c240:	mov	r2, #5
   1c244:	ldr	r1, [pc, #1552]	; 1c85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c04>
   1c248:	mov	r0, #0
   1c24c:	bl	13460 <dcgettext@plt>
   1c250:	ldr	r3, [pc, #1436]	; 1c7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b9c>
   1c254:	mov	r4, r3
   1c258:	ldr	r1, [r3]
   1c25c:	bl	132bc <printf@plt>
   1c260:	ldr	r0, [fp]
   1c264:	bl	2d700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19aa8>
   1c268:	mov	r0, #10
   1c26c:	bl	138b0 <putchar@plt>
   1c270:	mov	r2, #5
   1c274:	ldr	r1, [pc, #1508]	; 1c860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c08>
   1c278:	mov	r0, #0
   1c27c:	bl	13460 <dcgettext@plt>
   1c280:	ldr	r1, [r4]
   1c284:	bl	132bc <printf@plt>
   1c288:	mov	r2, #5
   1c28c:	ldr	r1, [pc, #1488]	; 1c864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c0c>
   1c290:	mov	r0, #0
   1c294:	ldr	r4, [fp]
   1c298:	bl	13460 <dcgettext@plt>
   1c29c:	bl	132bc <printf@plt>
   1c2a0:	mov	r2, #5
   1c2a4:	ldr	r1, [pc, #1468]	; 1c868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c10>
   1c2a8:	mov	r0, #0
   1c2ac:	bl	13460 <dcgettext@plt>
   1c2b0:	mov	r1, r0
   1c2b4:	mov	r0, r4
   1c2b8:	bl	1382c <fprintf@plt>
   1c2bc:	mov	r2, #5
   1c2c0:	ldr	r1, [pc, #1444]	; 1c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c14>
   1c2c4:	mov	r0, #0
   1c2c8:	bl	13460 <dcgettext@plt>
   1c2cc:	mov	r1, r0
   1c2d0:	mov	r0, r4
   1c2d4:	bl	1382c <fprintf@plt>
   1c2d8:	mov	r2, #5
   1c2dc:	ldr	r1, [pc, #1420]	; 1c870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c18>
   1c2e0:	mov	r0, #0
   1c2e4:	bl	13460 <dcgettext@plt>
   1c2e8:	mov	r1, r0
   1c2ec:	mov	r0, r4
   1c2f0:	bl	1382c <fprintf@plt>
   1c2f4:	mov	r2, #5
   1c2f8:	ldr	r1, [pc, #1396]	; 1c874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c1c>
   1c2fc:	mov	r0, #0
   1c300:	bl	13460 <dcgettext@plt>
   1c304:	mov	r1, r0
   1c308:	mov	r0, r4
   1c30c:	bl	1382c <fprintf@plt>
   1c310:	mov	r2, #5
   1c314:	ldr	r1, [pc, #1372]	; 1c878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c20>
   1c318:	mov	r0, #0
   1c31c:	bl	13460 <dcgettext@plt>
   1c320:	mov	r1, r0
   1c324:	mov	r0, r4
   1c328:	bl	1382c <fprintf@plt>
   1c32c:	mov	r2, #5
   1c330:	ldr	r1, [pc, #1348]	; 1c87c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c24>
   1c334:	mov	r0, #0
   1c338:	bl	13460 <dcgettext@plt>
   1c33c:	mov	r1, r0
   1c340:	mov	r0, r4
   1c344:	bl	1382c <fprintf@plt>
   1c348:	mov	r2, #5
   1c34c:	ldr	r1, [pc, #1324]	; 1c880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c28>
   1c350:	mov	r0, #0
   1c354:	bl	13460 <dcgettext@plt>
   1c358:	mov	r1, r0
   1c35c:	mov	r0, r4
   1c360:	bl	1382c <fprintf@plt>
   1c364:	mov	r2, #5
   1c368:	ldr	r1, [pc, #1300]	; 1c884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c2c>
   1c36c:	mov	r0, #0
   1c370:	bl	13460 <dcgettext@plt>
   1c374:	mov	r1, r0
   1c378:	mov	r0, r4
   1c37c:	bl	1382c <fprintf@plt>
   1c380:	mov	r2, #5
   1c384:	ldr	r1, [pc, #1276]	; 1c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c30>
   1c388:	mov	r0, #0
   1c38c:	bl	13460 <dcgettext@plt>
   1c390:	mov	r1, r0
   1c394:	mov	r0, r4
   1c398:	bl	1382c <fprintf@plt>
   1c39c:	mov	r2, #5
   1c3a0:	ldr	r1, [pc, #1252]	; 1c88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c34>
   1c3a4:	mov	r0, #0
   1c3a8:	bl	13460 <dcgettext@plt>
   1c3ac:	mov	r1, r0
   1c3b0:	mov	r0, r4
   1c3b4:	bl	1382c <fprintf@plt>
   1c3b8:	mov	r2, #5
   1c3bc:	ldr	r1, [pc, #1228]	; 1c890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c38>
   1c3c0:	mov	r0, #0
   1c3c4:	bl	13460 <dcgettext@plt>
   1c3c8:	mov	r1, r0
   1c3cc:	mov	r0, r4
   1c3d0:	bl	1382c <fprintf@plt>
   1c3d4:	mov	r2, #5
   1c3d8:	ldr	r1, [pc, #1204]	; 1c894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c3c>
   1c3dc:	mov	r0, #0
   1c3e0:	bl	13460 <dcgettext@plt>
   1c3e4:	mov	r1, r0
   1c3e8:	mov	r0, r4
   1c3ec:	bl	1382c <fprintf@plt>
   1c3f0:	mov	r2, #5
   1c3f4:	ldr	r1, [pc, #1180]	; 1c898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c40>
   1c3f8:	mov	r0, #0
   1c3fc:	bl	13460 <dcgettext@plt>
   1c400:	mov	r1, r0
   1c404:	mov	r0, r4
   1c408:	bl	1382c <fprintf@plt>
   1c40c:	mov	r2, #5
   1c410:	ldr	r1, [pc, #1156]	; 1c89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c44>
   1c414:	mov	r0, #0
   1c418:	bl	13460 <dcgettext@plt>
   1c41c:	mov	r1, r0
   1c420:	mov	r0, r4
   1c424:	bl	1382c <fprintf@plt>
   1c428:	mov	r2, #5
   1c42c:	ldr	r1, [pc, #1132]	; 1c8a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c48>
   1c430:	mov	r0, #0
   1c434:	bl	13460 <dcgettext@plt>
   1c438:	mov	r1, r0
   1c43c:	mov	r0, r4
   1c440:	bl	1382c <fprintf@plt>
   1c444:	mov	r2, #5
   1c448:	ldr	r1, [pc, #1108]	; 1c8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c4c>
   1c44c:	mov	r0, #0
   1c450:	bl	13460 <dcgettext@plt>
   1c454:	mov	r1, r0
   1c458:	mov	r0, r4
   1c45c:	bl	1382c <fprintf@plt>
   1c460:	mov	r2, #5
   1c464:	ldr	r1, [pc, #1084]	; 1c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c50>
   1c468:	mov	r0, #0
   1c46c:	bl	13460 <dcgettext@plt>
   1c470:	mov	r1, r0
   1c474:	mov	r0, r4
   1c478:	bl	1382c <fprintf@plt>
   1c47c:	mov	r2, #5
   1c480:	ldr	r1, [pc, #1060]	; 1c8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c54>
   1c484:	mov	r0, #0
   1c488:	bl	13460 <dcgettext@plt>
   1c48c:	mov	r1, r0
   1c490:	mov	r0, r4
   1c494:	bl	1382c <fprintf@plt>
   1c498:	mov	r2, #5
   1c49c:	ldr	r1, [pc, #1036]	; 1c8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c58>
   1c4a0:	mov	r0, #0
   1c4a4:	bl	13460 <dcgettext@plt>
   1c4a8:	mov	r1, r0
   1c4ac:	mov	r0, r4
   1c4b0:	bl	1382c <fprintf@plt>
   1c4b4:	mov	r2, #5
   1c4b8:	ldr	r1, [pc, #1012]	; 1c8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c5c>
   1c4bc:	mov	r0, #0
   1c4c0:	bl	13460 <dcgettext@plt>
   1c4c4:	mov	r1, r0
   1c4c8:	mov	r0, r4
   1c4cc:	bl	1382c <fprintf@plt>
   1c4d0:	mov	r2, #5
   1c4d4:	ldr	r1, [pc, #988]	; 1c8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c60>
   1c4d8:	mov	r0, #0
   1c4dc:	bl	13460 <dcgettext@plt>
   1c4e0:	mov	r1, r0
   1c4e4:	mov	r0, r4
   1c4e8:	bl	1382c <fprintf@plt>
   1c4ec:	mov	r2, #5
   1c4f0:	ldr	r1, [pc, #964]	; 1c8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c64>
   1c4f4:	mov	r0, #0
   1c4f8:	bl	13460 <dcgettext@plt>
   1c4fc:	mov	r1, r0
   1c500:	mov	r0, r4
   1c504:	bl	1382c <fprintf@plt>
   1c508:	mov	r2, #5
   1c50c:	ldr	r1, [pc, #940]	; 1c8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c68>
   1c510:	mov	r0, #0
   1c514:	bl	13460 <dcgettext@plt>
   1c518:	mov	r1, r0
   1c51c:	mov	r0, r4
   1c520:	bl	1382c <fprintf@plt>
   1c524:	mov	r2, #5
   1c528:	ldr	r1, [pc, #916]	; 1c8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c6c>
   1c52c:	mov	r0, #0
   1c530:	bl	13460 <dcgettext@plt>
   1c534:	mov	r1, r0
   1c538:	mov	r0, r4
   1c53c:	bl	1382c <fprintf@plt>
   1c540:	mov	r2, #5
   1c544:	ldr	r1, [pc, #892]	; 1c8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c70>
   1c548:	mov	r0, #0
   1c54c:	bl	13460 <dcgettext@plt>
   1c550:	mov	r1, r0
   1c554:	mov	r0, r4
   1c558:	bl	1382c <fprintf@plt>
   1c55c:	mov	r2, #5
   1c560:	ldr	r1, [pc, #868]	; 1c8cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c74>
   1c564:	mov	r0, #0
   1c568:	bl	13460 <dcgettext@plt>
   1c56c:	mov	r1, r0
   1c570:	mov	r0, r4
   1c574:	bl	1382c <fprintf@plt>
   1c578:	mov	r2, #5
   1c57c:	ldr	r1, [pc, #844]	; 1c8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c78>
   1c580:	mov	r0, #0
   1c584:	bl	13460 <dcgettext@plt>
   1c588:	mov	r1, r0
   1c58c:	mov	r0, r4
   1c590:	bl	1382c <fprintf@plt>
   1c594:	mov	r2, #5
   1c598:	ldr	r1, [pc, #820]	; 1c8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c7c>
   1c59c:	mov	r0, #0
   1c5a0:	bl	13460 <dcgettext@plt>
   1c5a4:	mov	r1, r0
   1c5a8:	mov	r0, r4
   1c5ac:	bl	1382c <fprintf@plt>
   1c5b0:	mov	r2, #5
   1c5b4:	ldr	r1, [pc, #796]	; 1c8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c80>
   1c5b8:	mov	r0, #0
   1c5bc:	bl	13460 <dcgettext@plt>
   1c5c0:	mov	r1, r0
   1c5c4:	mov	r0, r4
   1c5c8:	bl	1382c <fprintf@plt>
   1c5cc:	mov	r2, #5
   1c5d0:	ldr	r1, [pc, #772]	; 1c8dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c84>
   1c5d4:	mov	r0, #0
   1c5d8:	bl	13460 <dcgettext@plt>
   1c5dc:	mov	r1, r0
   1c5e0:	mov	r0, r4
   1c5e4:	bl	1382c <fprintf@plt>
   1c5e8:	mov	r2, #5
   1c5ec:	ldr	r1, [pc, #748]	; 1c8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c88>
   1c5f0:	mov	r0, #0
   1c5f4:	bl	13460 <dcgettext@plt>
   1c5f8:	mov	r1, r0
   1c5fc:	mov	r0, r4
   1c600:	bl	1382c <fprintf@plt>
   1c604:	mov	r2, #5
   1c608:	ldr	r1, [pc, #724]	; 1c8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c8c>
   1c60c:	mov	r0, #0
   1c610:	bl	13460 <dcgettext@plt>
   1c614:	mov	r1, r0
   1c618:	mov	r0, r4
   1c61c:	bl	1382c <fprintf@plt>
   1c620:	mov	r2, #5
   1c624:	ldr	r1, [pc, #700]	; 1c8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c90>
   1c628:	mov	r0, #0
   1c62c:	bl	13460 <dcgettext@plt>
   1c630:	mov	r1, r0
   1c634:	mov	r0, r4
   1c638:	bl	1382c <fprintf@plt>
   1c63c:	mov	r2, #5
   1c640:	ldr	r1, [pc, #676]	; 1c8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c94>
   1c644:	mov	r0, #0
   1c648:	bl	13460 <dcgettext@plt>
   1c64c:	mov	r1, r0
   1c650:	mov	r0, r4
   1c654:	bl	1382c <fprintf@plt>
   1c658:	mov	r2, #5
   1c65c:	ldr	r1, [pc, #652]	; 1c8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c98>
   1c660:	mov	r0, #0
   1c664:	bl	13460 <dcgettext@plt>
   1c668:	mov	r1, r0
   1c66c:	mov	r0, r4
   1c670:	bl	1382c <fprintf@plt>
   1c674:	mov	r2, #5
   1c678:	ldr	r1, [pc, #628]	; 1c8f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c9c>
   1c67c:	mov	r0, #0
   1c680:	bl	13460 <dcgettext@plt>
   1c684:	mov	r1, r0
   1c688:	mov	r0, r4
   1c68c:	bl	1382c <fprintf@plt>
   1c690:	mov	r2, #5
   1c694:	ldr	r1, [pc, #604]	; 1c8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ca0>
   1c698:	mov	r0, #0
   1c69c:	bl	13460 <dcgettext@plt>
   1c6a0:	mov	r1, r0
   1c6a4:	mov	r0, r4
   1c6a8:	bl	1382c <fprintf@plt>
   1c6ac:	mov	r2, #5
   1c6b0:	ldr	r1, [pc, #580]	; 1c8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ca4>
   1c6b4:	mov	r0, #0
   1c6b8:	bl	13460 <dcgettext@plt>
   1c6bc:	mov	r1, r0
   1c6c0:	mov	r0, r4
   1c6c4:	bl	1382c <fprintf@plt>
   1c6c8:	mov	r2, #5
   1c6cc:	ldr	r1, [pc, #556]	; 1c900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ca8>
   1c6d0:	mov	r0, #0
   1c6d4:	bl	13460 <dcgettext@plt>
   1c6d8:	mov	r1, r0
   1c6dc:	mov	r0, r4
   1c6e0:	bl	1382c <fprintf@plt>
   1c6e4:	mov	r2, #5
   1c6e8:	ldr	r1, [pc, #532]	; 1c904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cac>
   1c6ec:	mov	r0, #0
   1c6f0:	bl	13460 <dcgettext@plt>
   1c6f4:	mov	r1, r0
   1c6f8:	mov	r0, r4
   1c6fc:	bl	1382c <fprintf@plt>
   1c700:	mov	r2, #5
   1c704:	ldr	r1, [pc, #508]	; 1c908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cb0>
   1c708:	mov	r0, #0
   1c70c:	bl	13460 <dcgettext@plt>
   1c710:	mov	r1, r0
   1c714:	mov	r0, r4
   1c718:	bl	1382c <fprintf@plt>
   1c71c:	mov	r2, #5
   1c720:	ldr	r1, [pc, #484]	; 1c90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cb4>
   1c724:	mov	r0, #0
   1c728:	bl	13460 <dcgettext@plt>
   1c72c:	mov	r1, r0
   1c730:	mov	r0, r4
   1c734:	bl	1382c <fprintf@plt>
   1c738:	mov	r2, #5
   1c73c:	ldr	r1, [pc, #460]	; 1c910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cb8>
   1c740:	mov	r0, #0
   1c744:	bl	13460 <dcgettext@plt>
   1c748:	mov	r1, r0
   1c74c:	mov	r0, r4
   1c750:	bl	1382c <fprintf@plt>
   1c754:	ldr	r0, [fp]
   1c758:	bl	2d814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bbc>
   1c75c:	mov	r0, #10
   1c760:	bl	138b0 <putchar@plt>
   1c764:	mov	r2, #5
   1c768:	ldr	r1, [pc, #420]	; 1c914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cbc>
   1c76c:	mov	r0, #0
   1c770:	bl	13460 <dcgettext@plt>
   1c774:	ldr	r1, [pc, #412]	; 1c918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cc0>
   1c778:	bl	132bc <printf@plt>
   1c77c:	mov	r0, #0
   1c780:	bl	139d0 <xexit@plt>
   1c784:	bl	136d0 <puts@plt>
   1c788:	b	1bf3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x82e4>
   1c78c:	mov	r2, #5
   1c790:	ldr	r1, [pc, #388]	; 1c91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cc4>
   1c794:	mov	r0, #0
   1c798:	bl	13460 <dcgettext@plt>
   1c79c:	ldr	r3, [pc, #120]	; 1c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8bc4>
   1c7a0:	ldr	r1, [r3]
   1c7a4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c7a8:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1c7ac:	mov	r2, #5
   1c7b0:	ldr	r1, [pc, #360]	; 1c920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8cc8>
   1c7b4:	mov	r0, #0
   1c7b8:	bl	13460 <dcgettext@plt>
   1c7bc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1c7c0:	b	19d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x612c>
   1c7c4:	andeq	ip, r4, ip, lsr ip
   1c7c8:	andeq	fp, r4, ip, lsr #20
   1c7cc:	andeq	r3, r4, r4, lsr sl
   1c7d0:	andeq	ip, r4, r4, ror ip
   1c7d4:	andeq	r8, ip, r4, ror r1
   1c7d8:	andeq	ip, r4, r8, ror r9
   1c7dc:	andeq	lr, r4, r0, ror #19
   1c7e0:	andeq	r8, ip, ip, lsl #1
   1c7e4:	andeq	ip, r4, ip, lsr sp
   1c7e8:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1c7ec:	andeq	ip, r4, ip, ror #20
   1c7f0:	ldrdeq	fp, [r4], -r4
   1c7f4:	andeq	r8, ip, r0, ror #3
   1c7f8:	strdeq	r7, [ip], -ip
   1c7fc:	strdeq	fp, [r4], -r4
   1c800:	andeq	fp, r4, ip, asr #20
   1c804:	andeq	pc, r4, r4, ror r3	; <UNPREDICTABLE>
   1c808:	andeq	ip, r4, ip, asr sp
   1c80c:	andeq	ip, r4, r8, ror #26
   1c810:	andeq	pc, r4, r0, lsl #26
   1c814:	andeq	r2, r5, ip
   1c818:	andeq	fp, r4, r4, lsl #22
   1c81c:	andeq	r7, ip, r8, lsl #20
   1c820:	andeq	r8, ip, r4, lsl r1
   1c824:	andeq	ip, r4, r0, ror #26
   1c828:	andeq	fp, r4, r0, lsl #24
   1c82c:	andeq	r3, r4, ip, ror r8
   1c830:	strdeq	ip, [r4], -r4
   1c834:	andeq	ip, r4, r0, lsr #22
   1c838:			; <UNDEFINED> instruction: 0x0004bbb8
   1c83c:	muleq	r4, r0, fp
   1c840:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1c844:	andeq	fp, r4, ip, ror sl
   1c848:	andeq	fp, r4, r4, lsl #21
   1c84c:	andeq	ip, r4, r0, asr #21
   1c850:	andeq	fp, r4, r4, lsl #24
   1c854:	andeq	fp, r4, ip, lsl #24
   1c858:	andeq	fp, r4, r4, lsr #24
   1c85c:	andeq	fp, r4, ip, lsr ip
   1c860:	andeq	fp, r4, r8, asr ip
   1c864:	andeq	fp, r4, ip, ror ip
   1c868:	muleq	r4, r0, ip
   1c86c:	andeq	fp, r4, r8, asr #25
   1c870:	andeq	fp, r4, ip, asr #26
   1c874:	andeq	fp, r4, ip, ror sp
   1c878:			; <UNDEFINED> instruction: 0x0004bdb8
   1c87c:	strdeq	fp, [r4], -r8
   1c880:	andeq	fp, r4, r4, asr #28
   1c884:	andeq	fp, r4, r0, lsl #29
   1c888:	ldrdeq	fp, [r4], -r0
   1c88c:	andeq	fp, r4, r4, lsr #30
   1c890:	andeq	fp, r4, r0, ror pc
   1c894:			; <UNDEFINED> instruction: 0x0004bfb8
   1c898:	andeq	ip, r4, r0
   1c89c:	andeq	ip, r4, r8, lsr r0
   1c8a0:	andeq	ip, r4, r0, ror r0
   1c8a4:	andeq	ip, r4, ip, lsr #1
   1c8a8:	strdeq	ip, [r4], -r0
   1c8ac:	andeq	ip, r4, r0, lsr r1
   1c8b0:	andeq	ip, r4, r4, ror r1
   1c8b4:	andeq	ip, r4, ip, ror #3
   1c8b8:	andeq	ip, r4, ip, lsr r2
   1c8bc:	andeq	ip, r4, r8, lsl #5
   1c8c0:	andeq	ip, r4, r4, lsl #6
   1c8c4:	andeq	ip, r4, r0, asr r3
   1c8c8:	andeq	ip, r4, r0, lsr #7
   1c8cc:	andeq	ip, r4, ip, ror #7
   1c8d0:	andeq	ip, r4, r4, lsr r4
   1c8d4:	andeq	ip, r4, ip, ror #8
   1c8d8:			; <UNDEFINED> instruction: 0x0004c4b8
   1c8dc:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1c8e0:	andeq	ip, r4, ip, lsr r5
   1c8e4:	andeq	ip, r4, ip, ror r5
   1c8e8:	andeq	ip, r4, r0, asr #11
   1c8ec:	andeq	ip, r4, r0, asr #12
   1c8f0:	andeq	ip, r4, r8, lsl #13
   1c8f4:	andeq	ip, r4, ip, asr #13
   1c8f8:	andeq	ip, r4, r0, lsl r7
   1c8fc:	andeq	ip, r4, r4, ror #14
   1c900:			; <UNDEFINED> instruction: 0x0004c7b0
   1c904:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1c908:	andeq	ip, r4, r8, lsr r8
   1c90c:	andeq	ip, r4, r4, lsl #17
   1c910:	ldrdeq	ip, [r4], -r4
   1c914:	andeq	ip, r4, r4, lsr #18
   1c918:	andeq	ip, r4, r8, lsr r9
   1c91c:	muleq	r4, r0, r9
   1c920:	andeq	ip, r4, ip, ror ip
   1c924:	andeq	r0, r0, r0
   1c928:	ldr	r0, [r2]
   1c92c:	cmp	r0, #0
   1c930:	movne	r0, #1
   1c934:	strne	r0, [r2, #4]
   1c938:	streq	r1, [r2]
   1c93c:	bx	lr
   1c940:	ldr	r3, [pc, #316]	; 1ca84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e2c>
   1c944:	mov	r1, r0
   1c948:	ldr	r2, [r3]
   1c94c:	ldr	r3, [r0]
   1c950:	sub	r0, r2, r0
   1c954:	cmp	r3, #0
   1c958:	clz	r0, r0
   1c95c:	lsr	r0, r0, #5
   1c960:	beq	1ca7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e24>
   1c964:	mov	ip, #0
   1c968:	push	{lr}		; (str lr, [sp, #-4]!)
   1c96c:	ldr	r2, [r3, #4]
   1c970:	cmp	r2, #15
   1c974:	ldrls	pc, [pc, r2, lsl #2]
   1c978:	b	1c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d80>
   1c97c:	strdeq	ip, [r1], -r8
   1c980:			; <UNDEFINED> instruction: 0x0001c9bc
   1c984:	andeq	ip, r1, r8, asr #19
   1c988:	andeq	ip, r1, r8, asr #19
   1c98c:	andeq	ip, r1, r0, ror #19
   1c990:	andeq	ip, r1, r0, ror #19
   1c994:	andeq	ip, r1, r0, ror #19
   1c998:	andeq	ip, r1, r0, ror #19
   1c99c:	andeq	ip, r1, r0, ror #19
   1c9a0:	andeq	ip, r1, r0, ror #19
   1c9a4:	andeq	ip, r1, r8, asr #19
   1c9a8:	andeq	ip, r1, r8, asr #19
   1c9ac:	andeq	ip, r1, r0, ror #19
   1c9b0:	andeq	ip, r1, r8, asr #19
   1c9b4:	andeq	ip, r1, r8, asr #19
   1c9b8:	andeq	ip, r1, r0, ror #19
   1c9bc:	cmp	ip, #0
   1c9c0:	beq	1ca38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8de0>
   1c9c4:	mov	r0, #0
   1c9c8:	mov	r1, r3
   1c9cc:	ldr	r3, [r3]
   1c9d0:	cmp	r3, #0
   1c9d4:	bne	1c96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d14>
   1c9d8:	mov	r0, r1
   1c9dc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9e0:	mov	r1, r3
   1c9e4:	ldr	r3, [r3]
   1c9e8:	mov	ip, #0
   1c9ec:	cmp	r3, #0
   1c9f0:	bne	1c96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d14>
   1c9f4:	b	1c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d80>
   1c9f8:	cmp	ip, #0
   1c9fc:	beq	1c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d80>
   1ca00:	ldr	r3, [r3, #28]
   1ca04:	cmp	r3, #0
   1ca08:	beq	1ca2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8dd4>
   1ca0c:	ldr	r2, [r3, #160]	; 0xa0
   1ca10:	cmp	r2, #0
   1ca14:	beq	1ca2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8dd4>
   1ca18:	ldr	r3, [r3, #20]
   1ca1c:	tst	r3, #1
   1ca20:	movne	r1, ip
   1ca24:	mov	r0, r1
   1ca28:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca2c:	mov	r1, ip
   1ca30:	mov	r0, r1
   1ca34:	pop	{pc}		; (ldr pc, [sp], #4)
   1ca38:	ldr	r2, [r3, #8]
   1ca3c:	ldr	lr, [r2, #12]
   1ca40:	cmp	lr, #8
   1ca44:	beq	1c9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d6c>
   1ca48:	ldr	r2, [r2, #16]
   1ca4c:	ldrb	lr, [r2]
   1ca50:	cmp	lr, #46	; 0x2e
   1ca54:	movne	r0, ip
   1ca58:	bne	1c9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d70>
   1ca5c:	ldrb	r2, [r2, #1]
   1ca60:	cmp	r2, #0
   1ca64:	eoreq	r2, r0, #1
   1ca68:	movne	r2, #0
   1ca6c:	cmp	r2, #0
   1ca70:	mov	r0, ip
   1ca74:	movne	ip, r1
   1ca78:	b	1c9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8d70>
   1ca7c:	mov	r0, r1
   1ca80:	bx	lr
   1ca84:	andeq	r8, ip, r8, rrx
   1ca88:	ldr	r2, [r0]
   1ca8c:	ldr	r3, [r1]
   1ca90:	ldr	r2, [r2, #24]
   1ca94:	ldr	r3, [r3, #24]
   1ca98:	cmp	r2, r3
   1ca9c:	bcc	1caac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e54>
   1caa0:	movhi	r0, #1
   1caa4:	movls	r0, #0
   1caa8:	bx	lr
   1caac:	mvn	r0, #0
   1cab0:	bx	lr
   1cab4:	ldr	r2, [r0]
   1cab8:	ldr	r3, [r1]
   1cabc:	ldr	r0, [r2, #32]
   1cac0:	ldr	r1, [r3, #32]
   1cac4:	cmp	r0, r1
   1cac8:	bcc	1caf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e9c>
   1cacc:	bhi	1caec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e94>
   1cad0:	ldr	r2, [r2, #4]
   1cad4:	ldr	r3, [r3, #4]
   1cad8:	cmp	r2, r3
   1cadc:	bcc	1caf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8e9c>
   1cae0:	movhi	r0, #1
   1cae4:	movls	r0, #0
   1cae8:	bx	lr
   1caec:	mov	r0, #1
   1caf0:	bx	lr
   1caf4:	mvn	r0, #0
   1caf8:	bx	lr
   1cafc:	ldr	r2, [r0]
   1cb00:	ldr	r3, [r1]
   1cb04:	ldr	r0, [r2, #28]
   1cb08:	ldr	r1, [r3, #28]
   1cb0c:	cmp	r0, r1
   1cb10:	bcc	1cb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ee4>
   1cb14:	bhi	1cb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8edc>
   1cb18:	ldr	r2, [r2, #4]
   1cb1c:	ldr	r3, [r3, #4]
   1cb20:	cmp	r2, r3
   1cb24:	bcc	1cb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ee4>
   1cb28:	movhi	r0, #1
   1cb2c:	movls	r0, #0
   1cb30:	bx	lr
   1cb34:	mov	r0, #1
   1cb38:	bx	lr
   1cb3c:	mvn	r0, #0
   1cb40:	bx	lr
   1cb44:	bx	lr
   1cb48:	ldr	r3, [r0, #20]
   1cb4c:	cmp	r3, #0
   1cb50:	ldrne	r3, [r2, #20]
   1cb54:	orrne	r3, r3, #2097152	; 0x200000
   1cb58:	strne	r3, [r2, #20]
   1cb5c:	bx	lr
   1cb60:	cmp	r0, #0
   1cb64:	push	{r4, lr}
   1cb68:	mov	r4, r1
   1cb6c:	sub	sp, sp, #8
   1cb70:	beq	1cbfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8fa4>
   1cb74:	mov	r1, r4
   1cb78:	bl	13400 <bfd_hash_newfunc@plt>
   1cb7c:	subs	r4, r0, #0
   1cb80:	beq	1cc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8fc0>
   1cb84:	add	r3, r4, #12
   1cb88:	mov	r0, r3
   1cb8c:	mov	r2, #88	; 0x58
   1cb90:	mov	r1, #0
   1cb94:	bl	138a4 <memset@plt>
   1cb98:	ldr	r1, [pc, #132]	; 1cc24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8fcc>
   1cb9c:	mvn	r2, #0
   1cba0:	mov	ip, #1
   1cba4:	ldr	r1, [r1]
   1cba8:	str	r2, [r4, #76]	; 0x4c
   1cbac:	str	r2, [r4, #80]	; 0x50
   1cbb0:	str	ip, [r4, #72]	; 0x48
   1cbb4:	ldr	r2, [pc, #108]	; 1cc28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8fd0>
   1cbb8:	mov	r3, r0
   1cbbc:	add	r0, r4, #20
   1cbc0:	str	r0, [r4, #24]
   1cbc4:	ldr	r0, [r1, #4]
   1cbc8:	str	r3, [r0]
   1cbcc:	ldr	r0, [r2]
   1cbd0:	str	r3, [r1, #4]
   1cbd4:	ldr	r1, [r2, #4]
   1cbd8:	cmp	r0, #0
   1cbdc:	subne	r0, r1, #16
   1cbe0:	strne	r0, [r4, #32]
   1cbe4:	mov	r0, r4
   1cbe8:	add	r4, r4, #28
   1cbec:	str	r3, [r1]
   1cbf0:	str	r4, [r2, #4]
   1cbf4:	add	sp, sp, #8
   1cbf8:	pop	{r4, pc}
   1cbfc:	mov	r1, #100	; 0x64
   1cc00:	mov	r0, r4
   1cc04:	str	r2, [sp, #4]
   1cc08:	bl	136dc <bfd_hash_allocate@plt>
   1cc0c:	ldr	r2, [sp, #4]
   1cc10:	cmp	r0, #0
   1cc14:	bne	1cb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8f1c>
   1cc18:	mov	r0, #0
   1cc1c:	add	sp, sp, #8
   1cc20:	pop	{r4, pc}
   1cc24:	andeq	r7, ip, ip, lsr #7
   1cc28:	andeq	r8, ip, r8, rrx
   1cc2c:	push	{r4, lr}
   1cc30:	ldr	r0, [r0]
   1cc34:	bl	13268 <strcmp@plt>
   1cc38:	clz	r0, r0
   1cc3c:	lsr	r0, r0, #5
   1cc40:	pop	{r4, pc}
   1cc44:	push	{r4, lr}
   1cc48:	ldr	r1, [r1, #4]
   1cc4c:	ldr	r0, [r0, #4]
   1cc50:	bl	13268 <strcmp@plt>
   1cc54:	clz	r0, r0
   1cc58:	lsr	r0, r0, #5
   1cc5c:	pop	{r4, pc}
   1cc60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cc64:	ldr	r5, [pc, #308]	; 1cda0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9148>
   1cc68:	ldr	r3, [r5]
   1cc6c:	cmp	r3, #0
   1cc70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc74:	cmp	r3, #2
   1cc78:	bhi	1cce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x908c>
   1cc7c:	cmp	r0, #0
   1cc80:	mov	r4, r0
   1cc84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cc88:	ldr	r7, [pc, #276]	; 1cda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x914c>
   1cc8c:	ldr	r8, [pc, #276]	; 1cda8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9150>
   1cc90:	ldr	r6, [pc, #276]	; 1cdac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9154>
   1cc94:	ldr	r3, [r4, #4]
   1cc98:	cmp	r3, #15
   1cc9c:	ldrls	pc, [pc, r3, lsl #2]
   1cca0:	b	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cca4:	strdeq	ip, [r1], -r4
   1cca8:	andeq	ip, r1, r8, lsr #26
   1ccac:	andeq	ip, r1, r8, lsr #26
   1ccb0:	andeq	ip, r1, r8, lsr #26
   1ccb4:	andeq	ip, r1, r8, lsr sp
   1ccb8:	andeq	ip, r1, r8, lsr #26
   1ccbc:	andeq	ip, r1, r8, lsr #26
   1ccc0:	andeq	ip, r1, r8, lsr #26
   1ccc4:	andeq	ip, r1, r8, lsr #26
   1ccc8:	andeq	ip, r1, r8, lsr #26
   1cccc:	andeq	ip, r1, r8, lsr #26
   1ccd0:	andeq	ip, r1, r8, lsr #26
   1ccd4:	andeq	ip, r1, r8, lsr #26
   1ccd8:	andeq	ip, r1, r0, lsr #26
   1ccdc:	andeq	ip, r1, r8, lsr #26
   1cce0:	muleq	r1, r4, sp
   1cce4:	ldr	r1, [pc, #196]	; 1cdb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9158>
   1cce8:	ldr	r0, [pc, #196]	; 1cdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x915c>
   1ccec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ccf0:	b	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1ccf4:	ldr	r9, [r4, #24]
   1ccf8:	mov	r1, r7
   1ccfc:	mov	r0, r9
   1cd00:	bl	13268 <strcmp@plt>
   1cd04:	cmp	r0, #0
   1cd08:	beq	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cd0c:	mov	r0, r9
   1cd10:	mov	r1, r8
   1cd14:	bl	13268 <strcmp@plt>
   1cd18:	cmp	r0, #0
   1cd1c:	beq	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cd20:	ldr	r0, [r4, #8]
   1cd24:	bl	1cc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9008>
   1cd28:	ldr	r4, [r4]
   1cd2c:	cmp	r4, #0
   1cd30:	bne	1cc94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x903c>
   1cd34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd38:	ldr	r3, [r4, #16]
   1cd3c:	cmp	r3, #0
   1cd40:	beq	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cd44:	ldr	r1, [r5]
   1cd48:	mov	ip, #3
   1cd4c:	mov	r0, #4
   1cd50:	b	1cd7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9124>
   1cd54:	cmp	r2, #0
   1cd58:	streq	r1, [r3, #12]
   1cd5c:	beq	1cd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9118>
   1cd60:	cmp	r2, #2
   1cd64:	bne	1cd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9118>
   1cd68:	cmp	r1, #1
   1cd6c:	streq	r0, [r3, #12]
   1cd70:	ldr	r3, [r3]
   1cd74:	cmp	r3, #0
   1cd78:	beq	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cd7c:	ldr	r2, [r3, #12]
   1cd80:	cmp	r2, #1
   1cd84:	bne	1cd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90fc>
   1cd88:	cmp	r1, #2
   1cd8c:	streq	ip, [r3, #12]
   1cd90:	b	1cd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9118>
   1cd94:	ldr	r0, [r6]
   1cd98:	bl	1cc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9008>
   1cd9c:	b	1cd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x90d0>
   1cda0:	andeq	r8, ip, r8, ror #3
   1cda4:	andeq	pc, r4, ip, ror r0	; <UNPREDICTABLE>
   1cda8:	andeq	pc, r4, r4, lsl #1
   1cdac:	andeq	r8, ip, r4, ror r0
   1cdb0:	andeq	r0, r0, sl, asr #27
   1cdb4:	andeq	pc, r4, r8, rrx
   1cdb8:	tst	r0, #1
   1cdbc:	push	{r4, lr}
   1cdc0:	mov	r4, r0
   1cdc4:	bne	1ce20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91c8>
   1cdc8:	tst	r4, #16
   1cdcc:	bne	1ce14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91bc>
   1cdd0:	tst	r4, #8
   1cdd4:	bne	1ce08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91b0>
   1cdd8:	tst	r4, #32
   1cddc:	bne	1cdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x919c>
   1cde0:	tst	r4, #2
   1cde4:	popeq	{r4, pc}
   1cde8:	ldr	r0, [pc, #60]	; 1ce2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91d4>
   1cdec:	pop	{r4, lr}
   1cdf0:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1cdf4:	ldr	r0, [pc, #52]	; 1ce30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91d8>
   1cdf8:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1cdfc:	tst	r4, #2
   1ce00:	popeq	{r4, pc}
   1ce04:	b	1cde8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9190>
   1ce08:	ldr	r0, [pc, #36]	; 1ce34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91dc>
   1ce0c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ce10:	b	1cdd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9180>
   1ce14:	ldr	r0, [pc, #28]	; 1ce38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e0>
   1ce18:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ce1c:	b	1cdd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9178>
   1ce20:	ldr	r0, [pc, #20]	; 1ce3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e4>
   1ce24:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ce28:	b	1cdc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9170>
   1ce2c:	andeq	r3, r4, r0, asr #18
   1ce30:	andeq	sp, r4, r4, lsl #23
   1ce34:	andeq	r4, r8, r4, lsr #26
   1ce38:	ldrdeq	pc, [r4], -r8
   1ce3c:	andeq	r4, r4, r4, lsl #5
   1ce40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce44:	sub	sp, sp, #20
   1ce48:	subs	r4, r0, #0
   1ce4c:	str	r3, [sp, #12]
   1ce50:	ldr	r5, [sp, #56]	; 0x38
   1ce54:	beq	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1ce58:	ldr	sl, [pc, #1020]	; 1d25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9604>
   1ce5c:	ldr	r6, [pc, #1020]	; 1d260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9608>
   1ce60:	ldr	r8, [pc, #1020]	; 1d264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x960c>
   1ce64:	mov	r7, r1
   1ce68:	mov	r9, r2
   1ce6c:	add	fp, sl, #168	; 0xa8
   1ce70:	ldr	r3, [r4, #4]
   1ce74:	cmp	r3, #15
   1ce78:	ldrls	pc, [pc, r3, lsl #2]
   1ce7c:	b	1d24c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95f4>
   1ce80:	andeq	ip, r1, r0, ror #30
   1ce84:	andeq	sp, r1, r4, lsr #32
   1ce88:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ce8c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ce90:	andeq	ip, r1, r0, asr #29
   1ce94:	strdeq	ip, [r1], -r4
   1ce98:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ce9c:	strdeq	sp, [r1], -r8
   1cea0:	andeq	sp, r1, r4, lsl #1
   1cea4:	andeq	sp, r1, ip, lsl #2
   1cea8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ceac:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ceb0:	andeq	sp, r1, r0, rrx
   1ceb4:	andeq	ip, r1, r8, lsr #30
   1ceb8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1cebc:	andeq	ip, r1, r0, lsr pc
   1cec0:	ldr	r0, [r4, #24]
   1cec4:	ldr	r3, [sp, #12]
   1cec8:	str	r5, [sp]
   1cecc:	mov	r2, r9
   1ced0:	mov	r1, r7
   1ced4:	bl	1ce40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e8>
   1ced8:	str	r0, [sp, #12]
   1cedc:	ldr	r4, [r4]
   1cee0:	cmp	r4, #0
   1cee4:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1cee8:	ldr	r0, [sp, #12]
   1ceec:	add	sp, sp, #20
   1cef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cef4:	ldr	r3, [r4, #8]
   1cef8:	ldr	r2, [r3, #20]
   1cefc:	tst	r2, #32768	; 0x8000
   1cf00:	bne	1cedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9284>
   1cf04:	ldr	r1, [r3, #36]	; 0x24
   1cf08:	ldr	r2, [r6, #8]
   1cf0c:	ldr	r3, [sp, #12]
   1cf10:	ldr	r4, [r4]
   1cf14:	add	r3, r3, r1, lsr r2
   1cf18:	cmp	r4, #0
   1cf1c:	str	r3, [sp, #12]
   1cf20:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1cf24:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1cf28:	ldr	r0, [r4, #8]
   1cf2c:	b	1cec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x926c>
   1cf30:	ldr	r2, [pc, #816]	; 1d268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9610>
   1cf34:	str	r5, [sp]
   1cf38:	ldr	r3, [sp, #12]
   1cf3c:	ldr	r0, [r2]
   1cf40:	mov	r1, r7
   1cf44:	mov	r2, r9
   1cf48:	bl	1ce40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e8>
   1cf4c:	ldr	r4, [r4]
   1cf50:	cmp	r4, #0
   1cf54:	str	r0, [sp, #12]
   1cf58:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1cf5c:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1cf60:	ldrb	r3, [r4, #84]	; 0x54
   1cf64:	ldr	r2, [r5]
   1cf68:	ldr	r1, [r4, #28]
   1cf6c:	and	r2, r2, #1
   1cf70:	bic	r3, r3, #32
   1cf74:	orr	r3, r3, r2, lsl #5
   1cf78:	cmp	r1, #0
   1cf7c:	strb	r3, [r4, #84]	; 0x54
   1cf80:	beq	1d1d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9580>
   1cf84:	ldrb	r3, [r4, #84]	; 0x54
   1cf88:	ands	r3, r3, #8
   1cf8c:	bne	1d1d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9580>
   1cf90:	ldr	r2, [r1, #20]
   1cf94:	tst	r2, #1
   1cf98:	strne	r3, [r6, #4]
   1cf9c:	ldr	r3, [r1, #28]
   1cfa0:	strne	r4, [r6]
   1cfa4:	str	r3, [sp, #12]
   1cfa8:	ldr	r2, [r4, #40]	; 0x28
   1cfac:	ldr	r0, [r4, #8]
   1cfb0:	mov	r1, r4
   1cfb4:	str	r5, [sp]
   1cfb8:	bl	1ce40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e8>
   1cfbc:	ldrb	r3, [r4, #84]	; 0x54
   1cfc0:	tst	r3, #8
   1cfc4:	bne	1cedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9284>
   1cfc8:	ldr	r3, [r4, #28]
   1cfcc:	cmp	r3, #0
   1cfd0:	beq	1ced8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9280>
   1cfd4:	ldr	r2, [pc, #656]	; 1d26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9614>
   1cfd8:	ldr	r1, [r3, #20]
   1cfdc:	and	r2, r2, r1
   1cfe0:	cmp	r2, #1024	; 0x400
   1cfe4:	beq	1d1fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95a4>
   1cfe8:	ldr	r1, [r3, #36]	; 0x24
   1cfec:	ldr	r2, [r6, #8]
   1cff0:	ldr	r3, [sp, #12]
   1cff4:	add	r3, r3, r1, lsr r2
   1cff8:	str	r3, [sp, #12]
   1cffc:	ldr	r0, [r4, #52]	; 0x34
   1d000:	cmp	r0, #0
   1d004:	beq	1cedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9284>
   1d008:	add	r2, sp, #12
   1d00c:	mov	r1, fp
   1d010:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1d014:	ldr	r4, [r4]
   1d018:	cmp	r4, #0
   1d01c:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d020:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d024:	ldr	r3, [r4, #8]
   1d028:	str	r4, [r6, #12]
   1d02c:	ldr	r2, [r3, #12]
   1d030:	cmp	r2, #8
   1d034:	bne	1d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9530>
   1d038:	ldr	r1, [r7, #28]
   1d03c:	mov	r0, r3
   1d040:	cmp	r1, #0
   1d044:	moveq	r1, sl
   1d048:	add	r2, sp, #12
   1d04c:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1d050:	ldr	r4, [r4]
   1d054:	cmp	r4, #0
   1d058:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d05c:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d060:	ldr	r1, [r4, #12]
   1d064:	ldr	r2, [r6, #8]
   1d068:	ldr	r3, [sp, #12]
   1d06c:	ldr	r4, [r4]
   1d070:	add	r3, r3, r1, lsr r2
   1d074:	cmp	r4, #0
   1d078:	str	r3, [sp, #12]
   1d07c:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d080:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d084:	ldr	r0, [r4, #12]
   1d088:	add	r2, sp, #12
   1d08c:	mov	r1, fp
   1d090:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1d094:	ldr	r0, [r8, #32]
   1d098:	cmp	r0, #0
   1d09c:	bne	1d168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9510>
   1d0a0:	ldr	r3, [r8]
   1d0a4:	cmp	r3, #4
   1d0a8:	beq	1d228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95d0>
   1d0ac:	ldr	r2, [r4, #8]
   1d0b0:	sub	r2, r2, #280	; 0x118
   1d0b4:	sub	r2, r2, #2
   1d0b8:	cmp	r2, #4
   1d0bc:	bhi	1d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95e4>
   1d0c0:	ldr	r1, [r6, #8]
   1d0c4:	ldr	r0, [pc, #420]	; 1d270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9618>
   1d0c8:	mov	r3, #1
   1d0cc:	ldr	r4, [r4]
   1d0d0:	ldr	r2, [r0, r2, lsl #2]
   1d0d4:	lsl	r3, r3, r1
   1d0d8:	cmp	r3, r2
   1d0dc:	movcc	r3, r2
   1d0e0:	ldr	r2, [sp, #12]
   1d0e4:	cmp	r4, #0
   1d0e8:	add	r3, r2, r3, lsr r1
   1d0ec:	str	r3, [sp, #12]
   1d0f0:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d0f4:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d0f8:	ldr	r9, [r4, #8]
   1d0fc:	ldr	r4, [r4]
   1d100:	cmp	r4, #0
   1d104:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d108:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d10c:	ldr	r0, [r4, #24]
   1d110:	add	r2, sp, #12
   1d114:	mov	r1, fp
   1d118:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1d11c:	ldr	r0, [r8, #32]
   1d120:	cmp	r0, #0
   1d124:	bne	1d15c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9504>
   1d128:	ldr	r3, [r8]
   1d12c:	cmp	r3, #4
   1d130:	beq	1d214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95bc>
   1d134:	ldr	r0, [r4, #12]
   1d138:	bl	13478 <bfd_get_reloc_size@plt>
   1d13c:	ldr	r2, [r6, #8]
   1d140:	ldr	r3, [sp, #12]
   1d144:	ldr	r4, [r4]
   1d148:	cmp	r4, #0
   1d14c:	add	r0, r3, r0, lsr r2
   1d150:	str	r0, [sp, #12]
   1d154:	bne	1ce70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9218>
   1d158:	b	1cee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9290>
   1d15c:	ldr	r3, [r8, #20]
   1d160:	str	r3, [r4, #28]
   1d164:	b	1d134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x94dc>
   1d168:	ldr	r3, [r8, #28]
   1d16c:	ldr	r2, [r8, #20]
   1d170:	cmp	r3, #0
   1d174:	str	r2, [r4, #16]
   1d178:	ldrne	r3, [r3, #28]
   1d17c:	addne	r3, r3, r2
   1d180:	strne	r3, [r4, #16]
   1d184:	b	1d0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9454>
   1d188:	ldr	r2, [pc, #228]	; 1d274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x961c>
   1d18c:	ldr	r0, [r3, #16]
   1d190:	ldr	r2, [r2]
   1d194:	cmp	r2, r7
   1d198:	ldrb	r2, [r0]
   1d19c:	beq	1d1e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9588>
   1d1a0:	cmp	r2, #95	; 0x5f
   1d1a4:	bne	1d1b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x955c>
   1d1a8:	ldrb	r2, [r0, #1]!
   1d1ac:	cmp	r2, #95	; 0x5f
   1d1b0:	beq	1d1a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9550>
   1d1b4:	ldr	r1, [pc, #188]	; 1d278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9620>
   1d1b8:	str	r3, [sp, #8]
   1d1bc:	bl	13268 <strcmp@plt>
   1d1c0:	ldr	r3, [sp, #8]
   1d1c4:	cmp	r0, #0
   1d1c8:	moveq	r3, #1
   1d1cc:	streq	r3, [r5]
   1d1d0:	ldreq	r3, [r4, #8]
   1d1d4:	b	1d038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x93e0>
   1d1d8:	ldr	r3, [sp, #12]
   1d1dc:	b	1cfa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9350>
   1d1e0:	cmp	r2, #46	; 0x2e
   1d1e4:	bne	1d1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9548>
   1d1e8:	ldrb	r2, [r0, #1]
   1d1ec:	cmp	r2, #0
   1d1f0:	moveq	r2, #1
   1d1f4:	streq	r2, [r6, #4]
   1d1f8:	b	1d1b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x955c>
   1d1fc:	ldr	r2, [pc, #120]	; 1d27c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9624>
   1d200:	ldrb	r2, [r2]
   1d204:	and	r2, r2, #3
   1d208:	cmp	r2, #2
   1d20c:	bne	1cffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x93a4>
   1d210:	b	1cfe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9390>
   1d214:	mov	r2, #5
   1d218:	ldr	r1, [pc, #96]	; 1d280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9628>
   1d21c:	bl	13460 <dcgettext@plt>
   1d220:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1d224:	b	1d134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x94dc>
   1d228:	mov	r2, #5
   1d22c:	ldr	r1, [pc, #80]	; 1d284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x962c>
   1d230:	bl	13460 <dcgettext@plt>
   1d234:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1d238:	b	1d0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9454>
   1d23c:	ldr	r2, [pc, #68]	; 1d288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9630>
   1d240:	mov	r1, #5824	; 0x16c0
   1d244:	ldr	r0, [pc, #64]	; 1d28c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9634>
   1d248:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   1d24c:	ldr	r1, [pc, #60]	; 1d290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9638>
   1d250:	ldr	r0, [pc, #52]	; 1d28c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9634>
   1d254:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1d258:	b	1cedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9284>
   1d25c:	andeq	r7, ip, r0, lsl #16
   1d260:	andeq	r7, ip, r8, lsr #23
   1d264:	strdeq	r8, [ip], -r4
   1d268:	andeq	r8, ip, r4, ror r0
   1d26c:	andeq	r0, r0, r2, lsl #8
   1d270:	andeq	lr, r4, r4, lsr #31
   1d274:	andeq	r8, ip, r4, asr r0
   1d278:	andeq	r4, r4, ip, ror #4
   1d27c:	andeq	r8, ip, ip, lsl #1
   1d280:	andeq	pc, r4, ip, lsr #1
   1d284:	andeq	pc, r4, ip, lsl #1
   1d288:			; <UNDEFINED> instruction: 0x0004efb8
   1d28c:	andeq	pc, r4, r8, rrx
   1d290:	andeq	r1, r0, r3, lsl r7
   1d294:	push	{r4, r5, lr}
   1d298:	sub	sp, sp, #12
   1d29c:	ldr	r5, [pc, #132]	; 1d328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d0>
   1d2a0:	mov	r2, #1
   1d2a4:	mov	r1, r0
   1d2a8:	str	r2, [sp]
   1d2ac:	ldr	r0, [r5, #28]
   1d2b0:	mov	r3, #0
   1d2b4:	bl	13640 <bfd_link_hash_lookup@plt>
   1d2b8:	subs	r4, r0, #0
   1d2bc:	beq	1d314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96bc>
   1d2c0:	ldrb	r2, [r4, #12]
   1d2c4:	cmp	r2, #0
   1d2c8:	bne	1d30c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96b4>
   1d2cc:	ldr	r0, [r5, #28]
   1d2d0:	ldrh	r3, [r4, #12]
   1d2d4:	str	r2, [r4, #20]
   1d2d8:	ldr	r2, [r0, #40]	; 0x28
   1d2dc:	and	r3, r3, #65024	; 0xfe00
   1d2e0:	cmp	r2, #1
   1d2e4:	orr	r3, r3, #256	; 0x100
   1d2e8:	orr	r3, r3, #1
   1d2ec:	strh	r3, [r4, #12]
   1d2f0:	ldrbeq	r3, [r4, #52]	; 0x34
   1d2f4:	mov	r1, r4
   1d2f8:	orreq	r3, r3, #32
   1d2fc:	strbeq	r3, [r4, #52]	; 0x34
   1d300:	add	sp, sp, #12
   1d304:	pop	{r4, r5, lr}
   1d308:	b	13634 <bfd_link_add_undef@plt>
   1d30c:	add	sp, sp, #12
   1d310:	pop	{r4, r5, pc}
   1d314:	mov	r2, #5
   1d318:	ldr	r1, [pc, #12]	; 1d32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d4>
   1d31c:	bl	13460 <dcgettext@plt>
   1d320:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1d324:	b	1d2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9668>
   1d328:	andeq	r8, ip, ip, lsl #1
   1d32c:	andeq	pc, r4, ip, asr #1
   1d330:	push	{r4, r5, r6, lr}
   1d334:	mov	r5, r1
   1d338:	bl	131f0 <strstr@plt>
   1d33c:	subs	r4, r0, #0
   1d340:	popeq	{r4, r5, r6, pc}
   1d344:	mov	r0, r5
   1d348:	bl	137d8 <strlen@plt>
   1d34c:	ldrb	r3, [r4, r0]
   1d350:	add	r2, r4, r0
   1d354:	cmp	r3, #0
   1d358:	beq	1d36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9714>
   1d35c:	strb	r3, [r4], #1
   1d360:	ldrb	r3, [r2, #1]!
   1d364:	cmp	r3, #0
   1d368:	bne	1d35c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9704>
   1d36c:	mov	r3, #0
   1d370:	strb	r3, [r4]
   1d374:	pop	{r4, r5, r6, pc}
   1d378:	push	{r4, r5, r6, r7, r8, lr}
   1d37c:	mov	r4, r1
   1d380:	mov	r6, r0
   1d384:	bl	137d8 <strlen@plt>
   1d388:	add	r0, r0, #1
   1d38c:	bl	13574 <xmalloc@plt>
   1d390:	mov	r7, r0
   1d394:	mov	r0, r4
   1d398:	bl	137d8 <strlen@plt>
   1d39c:	add	r0, r0, #1
   1d3a0:	bl	13574 <xmalloc@plt>
   1d3a4:	mov	r5, r0
   1d3a8:	mov	r0, r6
   1d3ac:	ldrb	r3, [r0], #1
   1d3b0:	cmp	r3, #0
   1d3b4:	beq	1d4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9858>
   1d3b8:	ldr	ip, [pc, #256]	; 1d4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9868>
   1d3bc:	mov	r2, r7
   1d3c0:	ldrb	r1, [ip, r3]
   1d3c4:	ldrb	r3, [r0], #1
   1d3c8:	strb	r1, [r2], #1
   1d3cc:	cmp	r3, #0
   1d3d0:	bne	1d3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9768>
   1d3d4:	mov	r1, r4
   1d3d8:	mov	r0, #0
   1d3dc:	ldrb	r3, [r1], #1
   1d3e0:	strb	r0, [r2]
   1d3e4:	cmp	r3, r0
   1d3e8:	beq	1d4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9850>
   1d3ec:	ldr	ip, [pc, #204]	; 1d4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9868>
   1d3f0:	mov	r2, r5
   1d3f4:	ldrb	r0, [ip, r3]
   1d3f8:	ldrb	r3, [r1], #1
   1d3fc:	strb	r0, [r2], #1
   1d400:	cmp	r3, #0
   1d404:	bne	1d3f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x979c>
   1d408:	mov	r4, #0
   1d40c:	strb	r4, [r2]
   1d410:	ldr	r1, [pc, #172]	; 1d4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x986c>
   1d414:	mov	r0, r7
   1d418:	bl	1d330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d8>
   1d41c:	ldr	r1, [pc, #164]	; 1d4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9870>
   1d420:	mov	r0, r7
   1d424:	bl	1d330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d8>
   1d428:	ldr	r1, [pc, #148]	; 1d4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x986c>
   1d42c:	mov	r0, r5
   1d430:	bl	1d330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d8>
   1d434:	ldr	r1, [pc, #140]	; 1d4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9870>
   1d438:	mov	r0, r5
   1d43c:	bl	1d330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96d8>
   1d440:	ldrb	r2, [r7]
   1d444:	ldrb	r3, [r5]
   1d448:	cmp	r3, r2
   1d44c:	bne	1d484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x982c>
   1d450:	cmp	r3, r4
   1d454:	movne	r1, r5
   1d458:	movne	r3, r7
   1d45c:	rsbne	ip, r7, #1
   1d460:	bne	1d470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9818>
   1d464:	b	1d4b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9860>
   1d468:	cmp	r2, #0
   1d46c:	beq	1d49c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9844>
   1d470:	add	r4, ip, r3
   1d474:	ldrb	r2, [r1, #1]!
   1d478:	ldrb	r0, [r3, #1]!
   1d47c:	cmp	r2, r0
   1d480:	beq	1d468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9810>
   1d484:	mov	r0, r7
   1d488:	bl	13364 <free@plt>
   1d48c:	mov	r0, r5
   1d490:	bl	13364 <free@plt>
   1d494:	mov	r0, r4
   1d498:	pop	{r4, r5, r6, r7, r8, pc}
   1d49c:	add	r4, r4, r4, lsl #2
   1d4a0:	lsl	r4, r4, #1
   1d4a4:	b	1d484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x982c>
   1d4a8:	mov	r2, r5
   1d4ac:	b	1d408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x97b0>
   1d4b0:	mov	r2, r7
   1d4b4:	b	1d3d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x977c>
   1d4b8:	mov	r4, r3
   1d4bc:	b	1d484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x982c>
   1d4c0:	andeq	r6, ip, r0, lsl #28
   1d4c4:	strdeq	pc, [r4], -r4
   1d4c8:	strdeq	pc, [r4], -r8
   1d4cc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4d0:	ldr	lr, [r0]
   1d4d4:	cmp	lr, #0
   1d4d8:	beq	1d514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98bc>
   1d4dc:	ldr	r1, [r0, #12]
   1d4e0:	mov	r3, lr
   1d4e4:	mov	ip, #0
   1d4e8:	ldrb	r2, [r3, #8]
   1d4ec:	ldr	r3, [r3]
   1d4f0:	tst	r2, #1
   1d4f4:	lsl	r2, r2, #26
   1d4f8:	addne	ip, ip, #1
   1d4fc:	cmp	r3, #0
   1d500:	orr	r1, r1, r2, lsr #29
   1d504:	bne	1d4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9890>
   1d508:	cmp	ip, #0
   1d50c:	str	r1, [r0, #12]
   1d510:	bne	1d51c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98c4>
   1d514:	str	lr, [r0, #8]
   1d518:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d51c:	mov	r6, r0
   1d520:	ldr	r2, [pc, #220]	; 1d604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99ac>
   1d524:	lsl	r0, ip, #1
   1d528:	ldr	r1, [pc, #216]	; 1d608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99b0>
   1d52c:	bl	13acc <htab_create@plt>
   1d530:	mov	r7, r6
   1d534:	mov	r9, r6
   1d538:	ldr	r4, [r7], #8
   1d53c:	cmp	r4, #0
   1d540:	str	r0, [r6, #4]
   1d544:	bne	1d55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9904>
   1d548:	b	1d59c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9944>
   1d54c:	str	r4, [r7]
   1d550:	mov	r7, r4
   1d554:	subs	r4, r5, #0
   1d558:	beq	1d59c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9944>
   1d55c:	ldrb	r3, [r4, #8]
   1d560:	ldr	r5, [r4]
   1d564:	tst	r3, #1
   1d568:	beq	1d54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98f4>
   1d56c:	mov	r2, #1
   1d570:	mov	r1, r4
   1d574:	ldr	r0, [r6, #4]
   1d578:	bl	13724 <htab_find_slot@plt>
   1d57c:	ldr	fp, [r0]
   1d580:	cmp	fp, #0
   1d584:	bne	1d5b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9958>
   1d588:	str	r4, [r0]
   1d58c:	str	r4, [r9]
   1d590:	mov	r9, r4
   1d594:	subs	r4, r5, #0
   1d598:	bne	1d55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9904>
   1d59c:	mov	r3, #0
   1d5a0:	str	r3, [r7]
   1d5a4:	ldr	r3, [r6, #8]
   1d5a8:	str	r3, [r9]
   1d5ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5b0:	ldrb	r8, [r4, #8]
   1d5b4:	b	1d5dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9984>
   1d5b8:	ldr	sl, [fp]
   1d5bc:	cmp	sl, #0
   1d5c0:	beq	1d5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99a0>
   1d5c4:	ldr	r1, [r4, #4]
   1d5c8:	ldr	r0, [sl, #4]
   1d5cc:	bl	13268 <strcmp@plt>
   1d5d0:	cmp	r0, #0
   1d5d4:	bne	1d5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99a0>
   1d5d8:	mov	fp, sl
   1d5dc:	ldrb	r3, [fp, #8]
   1d5e0:	eor	r3, r3, r8
   1d5e4:	tst	r3, #56	; 0x38
   1d5e8:	bne	1d5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9960>
   1d5ec:	mov	r0, r4
   1d5f0:	bl	13364 <free@plt>
   1d5f4:	b	1d554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98fc>
   1d5f8:	str	sl, [r4]
   1d5fc:	str	r4, [fp]
   1d600:	b	1d554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98fc>
   1d604:	andeq	ip, r1, r4, asr #24
   1d608:	andeq	sp, r1, ip, lsl #12
   1d60c:	ldr	r0, [r0, #4]
   1d610:	b	13244 <htab_hash_string@plt>
   1d614:	ldr	r3, [pc, #108]	; 1d688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a30>
   1d618:	mov	r2, r1
   1d61c:	mov	r1, r0
   1d620:	ldr	ip, [r3, #48]	; 0x30
   1d624:	mov	r0, r3
   1d628:	push	{r4, r5, r6, lr}
   1d62c:	ldr	r3, [ip, #4]
   1d630:	ldr	r3, [r3, #420]	; 0x1a4
   1d634:	blx	r3
   1d638:	subs	r5, r0, #0
   1d63c:	popeq	{r4, r5, r6, pc}
   1d640:	ldr	r4, [pc, #68]	; 1d68c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a34>
   1d644:	ldr	r1, [r4, #16]
   1d648:	ldr	r3, [r4, #20]
   1d64c:	ldr	r0, [r4, #24]
   1d650:	cmp	r1, r3
   1d654:	beq	1d668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a10>
   1d658:	add	r3, r1, #1
   1d65c:	str	r5, [r0, r1, lsl #2]
   1d660:	str	r3, [r4, #16]
   1d664:	pop	{r4, r5, r6, pc}
   1d668:	add	r1, r1, #5
   1d66c:	lsl	r3, r1, #1
   1d670:	lsl	r1, r1, #3
   1d674:	str	r3, [r4, #20]
   1d678:	bl	134fc <xrealloc@plt>
   1d67c:	ldr	r1, [r4, #16]
   1d680:	str	r0, [r4, #24]
   1d684:	b	1d658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a00>
   1d688:	andeq	r8, ip, ip, lsl #1
   1d68c:	andeq	r7, ip, r8, lsr #23
   1d690:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d694:	mov	r7, r2
   1d698:	ldr	r3, [pc, #704]	; 1d960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d08>
   1d69c:	ldr	r4, [pc, #704]	; 1d964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d0c>
   1d6a0:	sub	sp, sp, #16
   1d6a4:	mov	r9, r0
   1d6a8:	mvn	r0, #0
   1d6ac:	ldr	r5, [r3]
   1d6b0:	mov	sl, r1
   1d6b4:	bl	133ac <cplus_demangle_set_style@plt>
   1d6b8:	mov	r1, r7
   1d6bc:	mov	r2, #0
   1d6c0:	ldr	r0, [r4, #48]	; 0x30
   1d6c4:	bl	1397c <bfd_demangle@plt>
   1d6c8:	cmp	r0, #0
   1d6cc:	movne	r6, r0
   1d6d0:	mov	r0, r5
   1d6d4:	moveq	r6, r7
   1d6d8:	bl	133ac <cplus_demangle_set_style@plt>
   1d6dc:	ldr	r3, [r9, #12]
   1d6e0:	tst	r3, #2
   1d6e4:	bne	1d88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c34>
   1d6e8:	mov	r5, r7
   1d6ec:	tst	r3, #4
   1d6f0:	bne	1d870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c18>
   1d6f4:	mov	r8, r7
   1d6f8:	ldr	r0, [r9, #4]
   1d6fc:	cmp	r0, #0
   1d700:	beq	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d704:	cmp	sl, #0
   1d708:	beq	1d7f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b98>
   1d70c:	ldrb	r3, [sl, #8]
   1d710:	tst	r3, #1
   1d714:	beq	1d85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c04>
   1d718:	lsr	r3, r3, #3
   1d71c:	and	r3, r3, #7
   1d720:	cmp	r3, #1
   1d724:	beq	1d950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cf8>
   1d728:	cmp	r3, #0
   1d72c:	beq	1d7f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b98>
   1d730:	cmp	r3, #2
   1d734:	beq	1d8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ca0>
   1d738:	cmp	sl, #0
   1d73c:	beq	1d74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9af4>
   1d740:	ldrb	r3, [sl, #8]
   1d744:	tst	r3, #1
   1d748:	beq	1d85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c04>
   1d74c:	ldr	r4, [r9, #8]
   1d750:	b	1d788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b30>
   1d754:	ldrb	r1, [r4, #8]
   1d758:	and	r1, r1, #56	; 0x38
   1d75c:	cmp	r1, #32
   1d760:	moveq	r1, r8
   1d764:	beq	1d774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b1c>
   1d768:	cmp	r1, #16
   1d76c:	moveq	r1, r5
   1d770:	movne	r1, r6
   1d774:	mov	r2, #0
   1d778:	bl	13664 <fnmatch@plt>
   1d77c:	cmp	r0, #0
   1d780:	beq	1d7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b5c>
   1d784:	ldr	r4, [r4]
   1d788:	cmp	r4, #0
   1d78c:	beq	1d868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c10>
   1d790:	ldr	r0, [r4, #4]
   1d794:	cmp	r0, #0
   1d798:	beq	1d784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b2c>
   1d79c:	ldrb	r3, [r0]
   1d7a0:	cmp	r3, #42	; 0x2a
   1d7a4:	bne	1d754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9afc>
   1d7a8:	ldrb	r3, [r0, #1]
   1d7ac:	cmp	r3, #0
   1d7b0:	bne	1d754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9afc>
   1d7b4:	cmp	r6, r7
   1d7b8:	beq	1d7c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b6c>
   1d7bc:	mov	r0, r6
   1d7c0:	bl	13364 <free@plt>
   1d7c4:	cmp	r5, r7
   1d7c8:	beq	1d7d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b7c>
   1d7cc:	mov	r0, r5
   1d7d0:	bl	13364 <free@plt>
   1d7d4:	cmp	r8, r7
   1d7d8:	beq	1d7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b8c>
   1d7dc:	mov	r0, r8
   1d7e0:	bl	13364 <free@plt>
   1d7e4:	mov	r0, r4
   1d7e8:	add	sp, sp, #16
   1d7ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7f0:	ldr	r3, [r9, #12]
   1d7f4:	tst	r3, #1
   1d7f8:	bne	1d908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cb0>
   1d7fc:	tst	r3, #2
   1d800:	bne	1d8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c54>
   1d804:	tst	r3, #4
   1d808:	beq	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d80c:	add	r1, sp, #4
   1d810:	ldr	r0, [r9, #4]
   1d814:	str	r8, [sp, #8]
   1d818:	bl	13a90 <htab_find@plt>
   1d81c:	subs	r4, r0, #0
   1d820:	bne	1d844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bec>
   1d824:	b	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d828:	ldrb	r3, [r4, #8]
   1d82c:	and	r3, r3, #56	; 0x38
   1d830:	cmp	r3, #32
   1d834:	beq	1d7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b5c>
   1d838:	ldr	r4, [r4]
   1d83c:	cmp	r4, #0
   1d840:	beq	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d844:	mov	r1, r8
   1d848:	ldr	r0, [r4, #4]
   1d84c:	bl	13268 <strcmp@plt>
   1d850:	cmp	r0, #0
   1d854:	beq	1d828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bd0>
   1d858:	b	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d85c:	ldr	r4, [sl]
   1d860:	cmp	r4, #0
   1d864:	bne	1d790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b38>
   1d868:	mov	r4, #0
   1d86c:	b	1d7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b5c>
   1d870:	ldr	r0, [r4, #48]	; 0x30
   1d874:	mov	r2, #4
   1d878:	mov	r1, r7
   1d87c:	bl	1397c <bfd_demangle@plt>
   1d880:	subs	r8, r0, #0
   1d884:	bne	1d6f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9aa0>
   1d888:	b	1d6f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a9c>
   1d88c:	mov	r2, #3
   1d890:	mov	r1, r7
   1d894:	ldr	r0, [r4, #48]	; 0x30
   1d898:	bl	1397c <bfd_demangle@plt>
   1d89c:	ldr	r3, [r9, #12]
   1d8a0:	subs	r5, r0, #0
   1d8a4:	bne	1d6ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a94>
   1d8a8:	b	1d6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a90>
   1d8ac:	add	r1, sp, #4
   1d8b0:	ldr	r0, [r9, #4]
   1d8b4:	str	r5, [sp, #8]
   1d8b8:	bl	13a90 <htab_find@plt>
   1d8bc:	subs	r4, r0, #0
   1d8c0:	bne	1d8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c8c>
   1d8c4:	b	1d8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ca0>
   1d8c8:	ldrb	r3, [r4, #8]
   1d8cc:	and	r3, r3, #56	; 0x38
   1d8d0:	cmp	r3, #16
   1d8d4:	beq	1d7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b5c>
   1d8d8:	ldr	r4, [r4]
   1d8dc:	cmp	r4, #0
   1d8e0:	beq	1d8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ca0>
   1d8e4:	mov	r1, r5
   1d8e8:	ldr	r0, [r4, #4]
   1d8ec:	bl	13268 <strcmp@plt>
   1d8f0:	cmp	r0, #0
   1d8f4:	beq	1d8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c70>
   1d8f8:	ldr	r3, [r9, #12]
   1d8fc:	tst	r3, #4
   1d900:	beq	1d738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ae0>
   1d904:	b	1d80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bb4>
   1d908:	add	r1, sp, #4
   1d90c:	str	r6, [sp, #8]
   1d910:	bl	13a90 <htab_find@plt>
   1d914:	subs	r4, r0, #0
   1d918:	bne	1d93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ce4>
   1d91c:	b	1d950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cf8>
   1d920:	ldrb	r3, [r4, #8]
   1d924:	and	r3, r3, #56	; 0x38
   1d928:	cmp	r3, #8
   1d92c:	beq	1d7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b5c>
   1d930:	ldr	r4, [r4]
   1d934:	cmp	r4, #0
   1d938:	beq	1d950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cf8>
   1d93c:	mov	r1, r6
   1d940:	ldr	r0, [r4, #4]
   1d944:	bl	13268 <strcmp@plt>
   1d948:	cmp	r0, #0
   1d94c:	beq	1d920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cc8>
   1d950:	ldr	r3, [r9, #12]
   1d954:	tst	r3, #2
   1d958:	beq	1d804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bac>
   1d95c:	b	1d8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c54>
   1d960:	andeq	r7, ip, r8, lsr r7
   1d964:	andeq	r8, ip, ip, lsl #1
   1d968:	ldrb	r2, [r0]
   1d96c:	ldrb	r3, [r1]
   1d970:	cmp	r2, r3
   1d974:	bne	1d988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d30>
   1d978:	ldrb	r2, [r0, #1]
   1d97c:	ldrb	r3, [r1, #1]
   1d980:	cmp	r2, r3
   1d984:	beq	1d990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d38>
   1d988:	mov	r0, #0
   1d98c:	bx	lr
   1d990:	ldrb	r2, [r0, #2]
   1d994:	ldrb	r3, [r1, #2]
   1d998:	cmp	r2, r3
   1d99c:	bne	1d988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d30>
   1d9a0:	ldrb	r2, [r0, #3]
   1d9a4:	ldrb	r3, [r1, #3]
   1d9a8:	cmp	r2, r3
   1d9ac:	addeq	r1, r1, #4
   1d9b0:	addeq	r0, r0, #3
   1d9b4:	beq	1d9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d70>
   1d9b8:	b	1d988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d30>
   1d9bc:	ldrb	r2, [r1], #1
   1d9c0:	cmp	r2, r3
   1d9c4:	bne	1d988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d30>
   1d9c8:	ldrb	r3, [r0, #1]!
   1d9cc:	cmp	r3, #42	; 0x2a
   1d9d0:	bne	1d9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d64>
   1d9d4:	mov	r0, #1
   1d9d8:	bx	lr
   1d9dc:	ldrb	r3, [r2, #36]	; 0x24
   1d9e0:	tst	r3, #16
   1d9e4:	bne	1da40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9de8>
   1d9e8:	ldr	r2, [pc, #100]	; 1da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9dfc>
   1d9ec:	ldr	ip, [r0, #40]	; 0x28
   1d9f0:	ldr	r3, [pc, #96]	; 1da58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e00>
   1d9f4:	ldrb	r2, [r2]
   1d9f8:	and	r3, r3, ip, lsr #5
   1d9fc:	and	r2, r2, #3
   1da00:	cmp	r2, #2
   1da04:	beq	1da28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9dd0>
   1da08:	tst	r3, #65536	; 0x10000
   1da0c:	bne	1da28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9dd0>
   1da10:	ldr	r2, [pc, #68]	; 1da5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e04>
   1da14:	ldr	ip, [r1, #20]
   1da18:	and	r2, r2, ip
   1da1c:	cmp	r2, #32768	; 0x8000
   1da20:	ldreq	r2, [pc, #56]	; 1da60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e08>
   1da24:	streq	r2, [r1, #60]	; 0x3c
   1da28:	tst	r3, #64	; 0x40
   1da2c:	bxne	lr
   1da30:	ldr	r3, [r0, #4]
   1da34:	ldr	r2, [pc, #24]	; 1da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9dfc>
   1da38:	ldr	r3, [r3, #408]	; 0x198
   1da3c:	bx	r3
   1da40:	ldr	r3, [r0, #4]
   1da44:	mov	r0, r1
   1da48:	ldr	r1, [pc, #4]	; 1da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9dfc>
   1da4c:	ldr	r3, [r3, #368]	; 0x170
   1da50:	bx	r3
   1da54:	andeq	r8, ip, ip, lsl #1
   1da58:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   1da5c:	eoreq	r8, r0, #0
   1da60:	andeq	r7, ip, r8, lsr #17
   1da64:	ldr	r2, [pc, #48]	; 1da9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e44>
   1da68:	lsr	r3, r0, #15
   1da6c:	tst	r0, #33554432	; 0x2000000
   1da70:	and	r3, r3, #1
   1da74:	ldrb	r2, [r2, #1]
   1da78:	beq	1da84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e2c>
   1da7c:	tst	r2, #16
   1da80:	movne	r3, #1
   1da84:	tst	r2, #32
   1da88:	beq	1da94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e3c>
   1da8c:	tst	r0, #8192	; 0x2000
   1da90:	movne	r3, #1
   1da94:	mov	r0, r3
   1da98:	bx	lr
   1da9c:	andeq	r8, ip, ip, lsl #1
   1daa0:	ldr	r3, [r2, #60]	; 0x3c
   1daa4:	cmp	r3, #0
   1daa8:	bxeq	lr
   1daac:	ldr	r1, [pc, #76]	; 1db00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ea8>
   1dab0:	ldr	r0, [r3, #148]	; 0x94
   1dab4:	ldr	r1, [r1, #48]	; 0x30
   1dab8:	cmp	r0, r1
   1dabc:	bxne	lr
   1dac0:	ldr	r3, [r3, #20]
   1dac4:	tst	r3, #32768	; 0x8000
   1dac8:	bxne	lr
   1dacc:	ldr	r3, [r2, #20]
   1dad0:	tst	r3, #1
   1dad4:	bxeq	lr
   1dad8:	ldr	r1, [pc, #36]	; 1db04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eac>
   1dadc:	and	r3, r3, r1
   1dae0:	cmp	r3, #1024	; 0x400
   1dae4:	bxeq	lr
   1dae8:	ldr	r3, [r2, #36]	; 0x24
   1daec:	cmp	r3, #0
   1daf0:	movne	r3, #1
   1daf4:	ldrne	r2, [sp, #4]
   1daf8:	strne	r3, [r2]
   1dafc:	bx	lr
   1db00:	andeq	r8, ip, ip, lsl #1
   1db04:	andeq	r0, r0, r2, lsl #8
   1db08:	push	{r4, r5, lr}
   1db0c:	sub	sp, sp, #12
   1db10:	ldr	lr, [r1, #28]
   1db14:	ldr	ip, [r1, #16]
   1db18:	ldr	r4, [r1, #20]
   1db1c:	cmp	lr, ip
   1db20:	bcc	1db30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ed8>
   1db24:	sub	r5, lr, ip
   1db28:	cmp	r5, r4
   1db2c:	bls	1db88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f30>
   1db30:	clz	r3, r3
   1db34:	add	ip, ip, r4
   1db38:	lsr	r3, r3, #5
   1db3c:	cmp	ip, lr
   1db40:	orrne	r3, r3, #1
   1db44:	cmp	r3, #0
   1db48:	beq	1db88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f30>
   1db4c:	cmp	r2, #0
   1db50:	mov	r5, r0
   1db54:	mov	r4, r1
   1db58:	beq	1db90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f38>
   1db5c:	mov	r2, #5
   1db60:	ldr	r1, [pc, #104]	; 1dbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f78>
   1db64:	mov	r0, #0
   1db68:	bl	13460 <dcgettext@plt>
   1db6c:	ldr	r2, [r5]
   1db70:	ldr	ip, [r4]
   1db74:	ldr	r1, [r4, #28]
   1db78:	ldr	r3, [r2]
   1db7c:	ldr	r2, [r2, #148]	; 0x94
   1db80:	str	ip, [sp]
   1db84:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1db88:	add	sp, sp, #12
   1db8c:	pop	{r4, r5, pc}
   1db90:	ldr	r3, [r1, #44]	; 0x2c
   1db94:	cmp	r3, #0
   1db98:	bne	1db88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f30>
   1db9c:	mov	r3, #1
   1dba0:	str	r3, [r1, #44]	; 0x2c
   1dba4:	mov	r0, r2
   1dba8:	ldr	r1, [pc, #36]	; 1dbd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f7c>
   1dbac:	mov	r2, #5
   1dbb0:	bl	13460 <dcgettext@plt>
   1dbb4:	ldr	r1, [r5]
   1dbb8:	ldr	r3, [r4]
   1dbbc:	ldr	r2, [r1]
   1dbc0:	ldr	r1, [r1, #148]	; 0x94
   1dbc4:	add	sp, sp, #12
   1dbc8:	pop	{r4, r5, lr}
   1dbcc:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1dbd0:	andeq	pc, r4, r0, lsl #2
   1dbd4:	andeq	pc, r4, r4, asr #2
   1dbd8:	ldrb	r3, [r0, #12]
   1dbdc:	sub	r3, r3, #3
   1dbe0:	cmp	r3, #1
   1dbe4:	bls	1dbf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f98>
   1dbe8:	mov	r0, #1
   1dbec:	bx	lr
   1dbf0:	ldr	r3, [r0, #20]
   1dbf4:	cmp	r3, r1
   1dbf8:	bne	1dbe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f90>
   1dbfc:	push	{r4, r5, r6, lr}
   1dc00:	mov	r5, r0
   1dc04:	mov	r4, #16
   1dc08:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1dc0c:	subs	r4, r4, #1
   1dc10:	bne	1dc08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9fb0>
   1dc14:	ldrd	r2, [r5, #20]
   1dc18:	ldr	r0, [pc, #40]	; 1dc48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff0>
   1dc1c:	ldr	r1, [r2, #60]	; 0x3c
   1dc20:	ldr	r2, [r2, #56]	; 0x38
   1dc24:	ldr	r1, [r1, #28]
   1dc28:	add	r3, r3, r2
   1dc2c:	add	r1, r3, r1
   1dc30:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1dc34:	ldr	r1, [r5, #4]
   1dc38:	ldr	r0, [pc, #12]	; 1dc4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff4>
   1dc3c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1dc40:	mov	r0, #1
   1dc44:	pop	{r4, r5, r6, pc}
   1dc48:	andeq	pc, r4, r8, ror r1	; <UNPREDICTABLE>
   1dc4c:	andeq	pc, r4, r0, lsl #3
   1dc50:	ldr	r3, [pc, #100]	; 1dcbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa064>
   1dc54:	ldr	r2, [pc, #100]	; 1dcc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa068>
   1dc58:	push	{r4, lr}
   1dc5c:	ldr	r1, [r2]
   1dc60:	ldr	r0, [r3]
   1dc64:	bl	13310 <bfd_arch_mach_octets_per_byte@plt>
   1dc68:	ldr	r1, [pc, #84]	; 1dcc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa06c>
   1dc6c:	mov	r3, #0
   1dc70:	str	r3, [r1, #8]
   1dc74:	cmp	r0, #1
   1dc78:	bls	1dca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa04c>
   1dc7c:	tst	r0, #1
   1dc80:	moveq	r3, #1
   1dc84:	beq	1dc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa038>
   1dc88:	b	1dcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa054>
   1dc8c:	mov	r3, r2
   1dc90:	lsr	r0, r0, #1
   1dc94:	tst	r0, #1
   1dc98:	add	r2, r3, #1
   1dc9c:	beq	1dc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa034>
   1dca0:	str	r3, [r1, #8]
   1dca4:	cmp	r0, #1
   1dca8:	popeq	{r4, pc}
   1dcac:	ldr	r1, [pc, #20]	; 1dcc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa070>
   1dcb0:	ldr	r0, [pc, #20]	; 1dccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa074>
   1dcb4:	pop	{r4, lr}
   1dcb8:	b	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1dcbc:	andeq	r8, ip, r0, asr r2
   1dcc0:	andeq	r8, ip, r4, asr r2
   1dcc4:	andeq	r7, ip, r8, lsr #23
   1dcc8:	andeq	r0, r0, r4, lsr #25
   1dccc:	andeq	pc, r4, r8, rrx
   1dcd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dcd4:	mov	r5, r0
   1dcd8:	mov	r7, r1
   1dcdc:	ldr	r6, [r0, #36]	; 0x24
   1dce0:	bl	1dc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff8>
   1dce4:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1dce8:	ldr	r1, [r5]
   1dcec:	ldr	r0, [pc, #576]	; 1df34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2dc>
   1dcf0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1dcf4:	ldr	r0, [r5]
   1dcf8:	bl	137d8 <strlen@plt>
   1dcfc:	add	r4, r0, #1
   1dd00:	cmp	r4, #14
   1dd04:	bhi	1dee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa288>
   1dd08:	add	r4, r4, #1
   1dd0c:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1dd10:	cmp	r4, #16
   1dd14:	bne	1dd08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa0b0>
   1dd18:	ldr	r3, [r5, #60]	; 0x3c
   1dd1c:	cmp	r3, #0
   1dd20:	beq	1dd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa0e0>
   1dd24:	ldr	r2, [pc, #524]	; 1df38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e0>
   1dd28:	ldr	r1, [r3, #148]	; 0x94
   1dd2c:	ldr	r2, [r2, #48]	; 0x30
   1dd30:	cmp	r1, r2
   1dd34:	beq	1dea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa24c>
   1dd38:	ldr	r4, [pc, #508]	; 1df3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e4>
   1dd3c:	cmp	r7, #0
   1dd40:	moveq	r6, #0
   1dd44:	ldr	r7, [r4, #28]
   1dd48:	ldr	r3, [r5, #148]	; 0x94
   1dd4c:	mov	r2, r6
   1dd50:	mov	r1, r7
   1dd54:	ldr	r0, [pc, #484]	; 1df40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e8>
   1dd58:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1dd5c:	ldr	r3, [r5, #40]	; 0x28
   1dd60:	cmp	r3, #0
   1dd64:	cmpne	r3, r6
   1dd68:	bne	1deb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa25c>
   1dd6c:	ldr	r3, [r5, #60]	; 0x3c
   1dd70:	cmp	r3, #0
   1dd74:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd78:	ldr	r1, [pc, #440]	; 1df38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e0>
   1dd7c:	ldr	r2, [r3, #148]	; 0x94
   1dd80:	ldr	r3, [r1, #48]	; 0x30
   1dd84:	cmp	r2, r3
   1dd88:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd8c:	ldrb	r3, [r1, #4]
   1dd90:	ands	r2, r3, #16
   1dd94:	bne	1deec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa294>
   1dd98:	ldr	r9, [r5, #104]	; 0x68
   1dd9c:	ldr	r4, [pc, #408]	; 1df3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e4>
   1dda0:	cmp	r9, #0
   1dda4:	beq	1df00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2a8>
   1dda8:	ldr	r1, [r9, #8]
   1ddac:	ldr	r0, [r4, #48]	; 0x30
   1ddb0:	ldr	r3, [r4, #44]	; 0x2c
   1ddb4:	ldr	ip, [r9, #4]
   1ddb8:	lsl	r8, r1, #2
   1ddbc:	sub	lr, r0, r3
   1ddc0:	cmp	r8, lr
   1ddc4:	str	r2, [ip]
   1ddc8:	bhi	1df18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2c0>
   1ddcc:	ldr	sl, [r4, #40]	; 0x28
   1ddd0:	add	r3, r3, r8
   1ddd4:	cmp	r3, sl
   1ddd8:	str	r3, [r4, #44]	; 0x2c
   1dddc:	ldrbeq	r2, [r4, #72]	; 0x48
   1dde0:	ldr	ip, [r4, #36]	; 0x24
   1dde4:	orreq	r2, r2, #2
   1dde8:	strbeq	r2, [r4, #72]	; 0x48
   1ddec:	ldr	r2, [r4, #56]	; 0x38
   1ddf0:	add	r3, r3, r2
   1ddf4:	bic	r2, r3, r2
   1ddf8:	sub	r3, r2, ip
   1ddfc:	sub	ip, r0, ip
   1de00:	cmp	r3, ip
   1de04:	ldr	r3, [r9]
   1de08:	str	r2, [r4, #44]	; 0x2c
   1de0c:	movhi	r2, r0
   1de10:	strhi	r0, [r4, #44]	; 0x2c
   1de14:	cmp	r3, #0
   1de18:	str	r2, [r4, #40]	; 0x28
   1de1c:	subne	r2, sl, #4
   1de20:	beq	1de34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa1dc>
   1de24:	ldm	r3, {r0, r3}
   1de28:	cmp	r3, #0
   1de2c:	str	r0, [r2, #4]!
   1de30:	bne	1de24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa1cc>
   1de34:	ldr	r3, [pc, #264]	; 1df44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2ec>
   1de38:	mov	r2, #4
   1de3c:	mov	r0, sl
   1de40:	bl	13a78 <qsort@plt>
   1de44:	ldr	r3, [r9, #8]
   1de48:	cmp	r3, #0
   1de4c:	subne	fp, sl, #4
   1de50:	movne	r8, #0
   1de54:	beq	1de74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa21c>
   1de58:	mov	r1, r5
   1de5c:	ldr	r0, [fp, #4]!
   1de60:	bl	1dbd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f80>
   1de64:	ldr	r3, [r9, #8]
   1de68:	add	r8, r8, #1
   1de6c:	cmp	r8, r3
   1de70:	bcc	1de58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa200>
   1de74:	ldr	r3, [r4, #36]	; 0x24
   1de78:	cmp	sl, r3
   1de7c:	bls	1de94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa23c>
   1de80:	ldr	r3, [r4, #48]	; 0x30
   1de84:	cmp	sl, r3
   1de88:	strcc	sl, [r4, #40]	; 0x28
   1de8c:	strcc	sl, [r4, #44]	; 0x2c
   1de90:	bcc	1df00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2a8>
   1de94:	mov	r1, sl
   1de98:	ldr	r0, [pc, #168]	; 1df48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2f0>
   1de9c:	bl	138d4 <_obstack_free@plt>
   1dea0:	b	1df00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2a8>
   1dea4:	ldr	r7, [r3, #28]
   1dea8:	ldr	r3, [r5, #56]	; 0x38
   1deac:	add	r7, r7, r3
   1deb0:	b	1dd48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa0f0>
   1deb4:	mov	r4, #27
   1deb8:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1debc:	subs	r4, r4, #1
   1dec0:	bne	1deb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa260>
   1dec4:	mov	r0, r4
   1dec8:	mov	r2, #5
   1decc:	ldr	r1, [pc, #120]	; 1df4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2f4>
   1ded0:	bl	13460 <dcgettext@plt>
   1ded4:	ldr	r1, [r5, #40]	; 0x28
   1ded8:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1dedc:	b	1dd6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa114>
   1dee0:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1dee4:	mov	r4, #0
   1dee8:	b	1dd08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa0b0>
   1deec:	ldr	r0, [r1, #28]
   1def0:	mov	r2, r5
   1def4:	ldr	r1, [pc, #84]	; 1df50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2f8>
   1def8:	bl	13904 <bfd_link_hash_traverse@plt>
   1defc:	ldr	r4, [pc, #56]	; 1df3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2e4>
   1df00:	ldr	r2, [r4, #8]
   1df04:	ldr	r3, [r4, #28]
   1df08:	add	r6, r7, r6, lsr r2
   1df0c:	cmp	r6, r3
   1df10:	strhi	r6, [r4, #28]
   1df14:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df18:	mov	r1, r8
   1df1c:	add	r0, r4, #32
   1df20:	bl	13430 <_obstack_newchunk@plt>
   1df24:	ldr	r3, [r4, #44]	; 0x2c
   1df28:	ldr	r0, [r4, #48]	; 0x30
   1df2c:	ldr	r1, [r9, #8]
   1df30:	b	1ddcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa174>
   1df34:	andeq	pc, r4, r0, lsl #26
   1df38:	andeq	r8, ip, ip, lsl #1
   1df3c:	andeq	r7, ip, r8, lsr #23
   1df40:	muleq	r4, r4, r1
   1df44:	andeq	ip, r1, r8, lsl #21
   1df48:	andeq	r7, ip, r8, asr #23
   1df4c:	andeq	pc, r4, r4, lsr #3
   1df50:	ldrdeq	sp, [r1], -r8
   1df54:	ldr	r3, [r0, #4]
   1df58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df5c:	mov	r4, r0
   1df60:	sub	sp, sp, #12
   1df64:	mov	r6, r1
   1df68:	cmp	r3, #15
   1df6c:	ldrls	pc, [pc, r3, lsl #2]
   1df70:	b	1e870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac18>
   1df74:	andeq	lr, r1, r4, ror #3
   1df78:			; <UNDEFINED> instruction: 0x0001dfb4
   1df7c:	andeq	lr, r1, r0, asr #32
   1df80:	andeq	lr, r1, r4, lsr #7
   1df84:	andeq	lr, r1, r4, ror #9
   1df88:	andeq	lr, r1, r0, lsl #2
   1df8c:	ldrdeq	lr, [r1], -r4
   1df90:	ldrdeq	lr, [r1], -r0
   1df94:	andeq	lr, r1, r4, lsr r4
   1df98:	andeq	lr, r1, r0, ror r0
   1df9c:	andeq	lr, r1, r8, ror #5
   1dfa0:			; <UNDEFINED> instruction: 0x0001e2bc
   1dfa4:	andeq	lr, r1, r4, lsl #6
   1dfa8:	andeq	lr, r1, r4, lsl r1
   1dfac:	andeq	lr, r1, ip, ror #2
   1dfb0:	muleq	r1, r4, r1
   1dfb4:	mov	r5, #16
   1dfb8:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1dfbc:	subs	r5, r5, #1
   1dfc0:	bne	1dfb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa360>
   1dfc4:	ldr	r3, [r4, #8]
   1dfc8:	ldr	r1, [r6, #28]
   1dfcc:	ldr	r2, [r3, #12]
   1dfd0:	ldr	r0, [r3, #16]
   1dfd4:	cmp	r2, #8
   1dfd8:	beq	1e6a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa50>
   1dfdc:	ldrb	ip, [r0]
   1dfe0:	ldr	r6, [pc, #2252]	; 1e8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac5c>
   1dfe4:	cmp	ip, #46	; 0x2e
   1dfe8:	beq	1e798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab40>
   1dfec:	mov	r5, #0
   1dff0:	str	r0, [r6, #12]
   1dff4:	ldr	ip, [pc, #2236]	; 1e8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac60>
   1dff8:	cmp	r1, #0
   1dffc:	moveq	r1, ip
   1e000:	cmp	r2, #5
   1e004:	moveq	r2, #0
   1e008:	ldr	r0, [r3, #20]
   1e00c:	streq	r2, [r6, #32]
   1e010:	bne	1e6b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa5c>
   1e014:	ldr	r3, [r3, #12]
   1e018:	cmp	r3, #5
   1e01c:	ldreq	r0, [pc, #2200]	; 1e8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac64>
   1e020:	ldrne	r0, [pc, #2200]	; 1e8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac68>
   1e024:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e028:	mov	r3, #0
   1e02c:	ldr	r0, [pc, #2192]	; 1e8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac6c>
   1e030:	str	r3, [r6, #12]
   1e034:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e038:	ldr	r0, [r4, #8]
   1e03c:	b	1e3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa768>
   1e040:	ldr	r2, [r0, #8]
   1e044:	cmp	r2, #0
   1e048:	beq	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e04c:	ldr	r3, [r0, #16]
   1e050:	cmp	r3, #0
   1e054:	beq	1e064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa40c>
   1e058:	ldr	r3, [r3, #40]	; 0x28
   1e05c:	tst	r3, #131072	; 0x20000
   1e060:	bne	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e064:	ldr	r3, [pc, #2140]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e068:	ldr	r1, [pc, #2140]	; 1e8cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac74>
   1e06c:	b	1e2f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa69c>
   1e070:	bl	1dc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff8>
   1e074:	mov	r5, #16
   1e078:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e07c:	subs	r5, r5, #1
   1e080:	bne	1e078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa420>
   1e084:	ldr	r3, [r4, #32]
   1e088:	ldr	r5, [r4, #36]	; 0x24
   1e08c:	cmp	r3, #0
   1e090:	ldr	r0, [r4, #12]
   1e094:	ldrne	r3, [r3, #28]
   1e098:	ldr	r7, [pc, #2096]	; 1e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac78>
   1e09c:	addne	r5, r5, r3
   1e0a0:	bl	13478 <bfd_get_reloc_size@plt>
   1e0a4:	ldr	r2, [r7, #8]
   1e0a8:	ldr	r3, [r4, #12]
   1e0ac:	mov	r1, r5
   1e0b0:	ldr	r3, [r3, #32]
   1e0b4:	lsr	r2, r0, r2
   1e0b8:	mov	r6, r0
   1e0bc:	ldr	r0, [pc, #2064]	; 1e8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac7c>
   1e0c0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e0c4:	ldr	r1, [r4, #20]
   1e0c8:	cmp	r1, #0
   1e0cc:	ldreq	r3, [r4, #16]
   1e0d0:	ldrne	r0, [pc, #2048]	; 1e8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac80>
   1e0d4:	ldreq	r0, [pc, #2044]	; 1e8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac80>
   1e0d8:	ldreq	r1, [r3]
   1e0dc:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e0e0:	ldr	r0, [r4, #24]
   1e0e4:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   1e0e8:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e0ec:	ldr	r0, [r7, #8]
   1e0f0:	add	r0, r5, r6, lsr r0
   1e0f4:	str	r0, [r7, #28]
   1e0f8:	add	sp, sp, #12
   1e0fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e100:	ldr	r0, [r0, #8]
   1e104:	mov	r1, #0
   1e108:	add	sp, sp, #12
   1e10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e110:	b	1dcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa078>
   1e114:	ldr	r5, [pc, #1964]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e118:	mov	r2, #12
   1e11c:	mov	r1, #1
   1e120:	ldr	r3, [r5, #80]	; 0x50
   1e124:	ldr	r0, [pc, #1968]	; 1e8dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac84>
   1e128:	bl	13568 <fwrite@plt>
   1e12c:	ldr	r4, [r4, #8]
   1e130:	cmp	r4, #0
   1e134:	beq	1e150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4f8>
   1e138:	mov	r0, r4
   1e13c:	mov	r1, r6
   1e140:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   1e144:	ldr	r4, [r4]
   1e148:	cmp	r4, #0
   1e14c:	bne	1e138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4e0>
   1e150:	ldr	r3, [r5, #80]	; 0x50
   1e154:	mov	r2, #10
   1e158:	mov	r1, #1
   1e15c:	ldr	r0, [pc, #1916]	; 1e8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac88>
   1e160:	add	sp, sp, #12
   1e164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e168:	b	13568 <fwrite@plt>
   1e16c:	ldr	r0, [r0, #12]
   1e170:	ldr	r3, [pc, #1900]	; 1e8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac8c>
   1e174:	cmp	r0, #0
   1e178:	ldr	r1, [pc, #1896]	; 1e8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac90>
   1e17c:	ldr	r2, [r4, #8]
   1e180:	moveq	r1, r3
   1e184:	ldr	r0, [pc, #1888]	; 1e8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac94>
   1e188:	add	sp, sp, #12
   1e18c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e190:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e194:	ldr	r4, [pc, #1876]	; 1e8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac98>
   1e198:	ldr	r3, [r4]
   1e19c:	cmp	r3, #0
   1e1a0:	beq	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e1a4:	ldr	r3, [pc, #1864]	; 1e8f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac9c>
   1e1a8:	ldr	r3, [r3]
   1e1ac:	cmp	r3, #0
   1e1b0:	ldrne	r0, [pc, #1856]	; 1e8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca0>
   1e1b4:	ldreq	r0, [pc, #1856]	; 1e8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca4>
   1e1b8:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e1bc:	ldr	r4, [r4]
   1e1c0:	cmp	r4, #0
   1e1c4:	beq	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e1c8:	mov	r0, r4
   1e1cc:	mov	r1, r6
   1e1d0:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   1e1d4:	ldr	r4, [r4]
   1e1d8:	cmp	r4, #0
   1e1dc:	bne	1e1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa570>
   1e1e0:	b	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e1e4:	ldr	r3, [pc, #1812]	; 1e900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca8>
   1e1e8:	ldr	r3, [r3]
   1e1ec:	cmp	r0, r3
   1e1f0:	beq	1e294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa63c>
   1e1f4:	ldr	r6, [r0, #28]
   1e1f8:	ldr	r1, [r0, #24]
   1e1fc:	ldr	r0, [pc, #1792]	; 1e904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacac>
   1e200:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e204:	cmp	r6, #0
   1e208:	beq	1e290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa638>
   1e20c:	ldr	r7, [pc, #1724]	; 1e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac78>
   1e210:	ldr	r3, [r6, #28]
   1e214:	ldr	r0, [r4, #24]
   1e218:	str	r3, [r7, #28]
   1e21c:	bl	137d8 <strlen@plt>
   1e220:	cmp	r0, #14
   1e224:	movls	r5, r0
   1e228:	bhi	1e7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab88>
   1e22c:	add	r5, r5, #1
   1e230:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e234:	cmp	r5, #16
   1e238:	bne	1e22c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5d4>
   1e23c:	ldr	r3, [r7, #8]
   1e240:	ldr	r2, [r6, #36]	; 0x24
   1e244:	ldr	r1, [r6, #28]
   1e248:	ldr	r0, [pc, #1720]	; 1e908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacb0>
   1e24c:	lsr	r2, r2, r3
   1e250:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e254:	ldrd	r2, [r6, #28]
   1e258:	cmp	r2, r3
   1e25c:	beq	1e278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa620>
   1e260:	ldr	r1, [pc, #1700]	; 1e90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacb4>
   1e264:	mov	r2, #5
   1e268:	mov	r0, #0
   1e26c:	bl	13460 <dcgettext@plt>
   1e270:	ldr	r1, [r6, #32]
   1e274:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e278:	ldr	r0, [r4, #52]	; 0x34
   1e27c:	cmp	r0, #0
   1e280:	beq	1e290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa638>
   1e284:	ldr	r2, [pc, #1668]	; 1e910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacb8>
   1e288:	ldr	r1, [pc, #1576]	; 1e8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac60>
   1e28c:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1e290:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e294:	ldr	r5, [r4, #8]
   1e298:	cmp	r5, #0
   1e29c:	beq	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e2a0:	mov	r0, r5
   1e2a4:	mov	r1, r4
   1e2a8:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   1e2ac:	ldr	r5, [r5]
   1e2b0:	cmp	r5, #0
   1e2b4:	bne	1e2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa648>
   1e2b8:	b	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e2bc:	ldr	r1, [r0, #8]
   1e2c0:	ldr	r0, [pc, #1612]	; 1e914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacbc>
   1e2c4:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e2c8:	ldr	r3, [pc, #1608]	; 1e918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacc0>
   1e2cc:	ldr	r1, [r3]
   1e2d0:	cmp	r1, #0
   1e2d4:	beq	1e2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa688>
   1e2d8:	ldr	r0, [pc, #1596]	; 1e91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacc4>
   1e2dc:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e2e0:	ldr	r0, [pc, #1592]	; 1e920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacc8>
   1e2e4:	b	1e4d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa880>
   1e2e8:	ldr	r3, [pc, #1496]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e2ec:	ldr	r2, [r0, #8]
   1e2f0:	ldr	r1, [pc, #1580]	; 1e924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaccc>
   1e2f4:	ldr	r0, [r3, #80]	; 0x50
   1e2f8:	add	sp, sp, #12
   1e2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e300:	b	1382c <fprintf@plt>
   1e304:	bl	1dc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff8>
   1e308:	ldr	r0, [pc, #1560]	; 1e928 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacd0>
   1e30c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e310:	mov	r5, #9
   1e314:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e318:	subs	r5, r5, #1
   1e31c:	bne	1e314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6bc>
   1e320:	ldr	r3, [r4, #16]
   1e324:	ldr	r7, [pc, #1444]	; 1e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac78>
   1e328:	cmp	r3, #0
   1e32c:	ldr	r9, [r4, #8]
   1e330:	ldrne	r3, [r3, #28]
   1e334:	ldr	r2, [r4, #12]
   1e338:	addne	r9, r9, r3
   1e33c:	ldr	r3, [r7, #8]
   1e340:	mov	r1, r9
   1e344:	ldr	r0, [pc, #1504]	; 1e92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacd4>
   1e348:	lsr	r2, r2, r3
   1e34c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e350:	ldr	r6, [r4, #20]
   1e354:	ldr	r8, [r6]
   1e358:	cmp	r8, #0
   1e35c:	beq	1e38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa734>
   1e360:	add	r8, r8, #4
   1e364:	ldr	r5, [pc, #1372]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e368:	ldr	sl, [pc, #1472]	; 1e930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacd8>
   1e36c:	add	r8, r6, r8
   1e370:	add	r6, r6, #4
   1e374:	ldrb	r2, [r6], #1
   1e378:	mov	r1, sl
   1e37c:	ldr	r0, [r5, #80]	; 0x50
   1e380:	bl	1382c <fprintf@plt>
   1e384:	cmp	r6, r8
   1e388:	bne	1e374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa71c>
   1e38c:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e390:	ldr	r3, [r4, #12]
   1e394:	ldr	r2, [r7, #8]
   1e398:	add	r9, r9, r3, lsr r2
   1e39c:	str	r9, [r7, #28]
   1e3a0:	b	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e3a4:	mov	r2, #5
   1e3a8:	ldr	r1, [pc, #1412]	; 1e934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacdc>
   1e3ac:	mov	r0, #0
   1e3b0:	bl	13460 <dcgettext@plt>
   1e3b4:	ldr	r1, [r4, #8]
   1e3b8:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e3bc:	ldr	r0, [r4, #12]
   1e3c0:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   1e3c4:	add	sp, sp, #12
   1e3c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3cc:	b	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e3d0:	ldr	r5, [pc, #1264]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e3d4:	mov	r2, #13
   1e3d8:	mov	r1, #1
   1e3dc:	ldr	r3, [r5, #80]	; 0x50
   1e3e0:	ldr	r0, [pc, #1360]	; 1e938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xace0>
   1e3e4:	bl	13568 <fwrite@plt>
   1e3e8:	ldr	r6, [r4, #8]
   1e3ec:	mov	r4, r6
   1e3f0:	ldr	r3, [r4], #4
   1e3f4:	cmp	r3, #0
   1e3f8:	beq	1e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7c8>
   1e3fc:	add	r3, r3, #4
   1e400:	ldr	r7, [pc, #1320]	; 1e930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacd8>
   1e404:	add	r6, r6, r3
   1e408:	ldrb	r2, [r4], #1
   1e40c:	mov	r1, r7
   1e410:	ldr	r0, [r5, #80]	; 0x50
   1e414:	bl	1382c <fprintf@plt>
   1e418:	cmp	r4, r6
   1e41c:	bne	1e408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7b0>
   1e420:	ldr	r1, [r5, #80]	; 0x50
   1e424:	mov	r0, #10
   1e428:	add	sp, sp, #12
   1e42c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e430:	b	139b8 <fputc@plt>
   1e434:	bl	1dc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff8>
   1e438:	mov	r5, #16
   1e43c:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e440:	subs	r5, r5, #1
   1e444:	bne	1e43c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7e4>
   1e448:	ldr	r3, [r4, #20]
   1e44c:	ldr	r6, [r4, #24]
   1e450:	cmp	r3, #0
   1e454:	ldrne	r3, [r3, #28]
   1e458:	addne	r6, r6, r3
   1e45c:	ldr	r3, [r4, #8]
   1e460:	sub	r3, r3, #280	; 0x118
   1e464:	sub	r3, r3, #2
   1e468:	cmp	r3, #4
   1e46c:	bhi	1e860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac08>
   1e470:	ldr	r7, [pc, #1112]	; 1e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac78>
   1e474:	ldr	r0, [pc, #1216]	; 1e93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xace4>
   1e478:	mov	r1, #1
   1e47c:	ldr	r2, [r7, #8]
   1e480:	add	r3, r0, r3, lsl #2
   1e484:	ldr	r0, [r4, #16]
   1e488:	ldr	r5, [r3, #44]	; 0x2c
   1e48c:	lsl	r1, r1, r2
   1e490:	cmp	r1, r5
   1e494:	movcs	r5, r1
   1e498:	ldr	r3, [r3, #64]	; 0x40
   1e49c:	str	r0, [sp]
   1e4a0:	lsr	r2, r5, r2
   1e4a4:	mov	r1, r6
   1e4a8:	ldr	r0, [pc, #1168]	; 1e940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xace8>
   1e4ac:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e4b0:	ldr	r3, [r4, #12]
   1e4b4:	ldr	r3, [r3, #12]
   1e4b8:	cmp	r3, #7
   1e4bc:	bne	1e698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa40>
   1e4c0:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e4c4:	ldr	r3, [r7, #8]
   1e4c8:	add	r5, r6, r5, lsr r3
   1e4cc:	str	r5, [r7, #28]
   1e4d0:	b	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e4d4:	ldr	r0, [pc, #1128]	; 1e944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacec>
   1e4d8:	add	sp, sp, #12
   1e4dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4e0:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e4e4:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e4e8:	ldr	r3, [r4, #32]
   1e4ec:	cmp	r3, #0
   1e4f0:	beq	1e534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8dc>
   1e4f4:	ldr	r1, [r3]
   1e4f8:	ldr	r0, [pc, #1096]	; 1e948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf0>
   1e4fc:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e500:	ldr	r3, [r4, #32]
   1e504:	ldr	r5, [r3, #4]
   1e508:	cmp	r5, #0
   1e50c:	beq	1e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d4>
   1e510:	ldr	r7, [pc, #1028]	; 1e91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacc4>
   1e514:	ldr	r1, [r5]
   1e518:	mov	r0, r7
   1e51c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e520:	ldr	r5, [r5, #4]
   1e524:	cmp	r5, #0
   1e528:	bne	1e514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8bc>
   1e52c:	ldr	r0, [pc, #1048]	; 1e94c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf4>
   1e530:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e534:	ldr	r3, [r4, #12]
   1e538:	cmp	r3, #0
   1e53c:	bne	1e724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaacc>
   1e540:	ldr	r1, [r4, #8]
   1e544:	cmp	r1, #0
   1e548:	beq	1e730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaad8>
   1e54c:	ldr	r0, [pc, #1020]	; 1e950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf8>
   1e550:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e554:	ldr	r3, [r4, #12]
   1e558:	cmp	r3, #0
   1e55c:	bne	1e78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab34>
   1e560:	ldr	r0, [pc, #1004]	; 1e954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacfc>
   1e564:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e568:	ldr	r5, [r4, #16]
   1e56c:	cmp	r5, #0
   1e570:	beq	1e614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa9bc>
   1e574:	ldr	fp, [pc, #988]	; 1e958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad00>
   1e578:	ldr	sl, [pc, #988]	; 1e95c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad04>
   1e57c:	ldr	r3, [r5, #12]
   1e580:	sub	r3, r3, #1
   1e584:	cmp	r3, #5
   1e588:	ldrls	pc, [pc, r3, lsl #2]
   1e58c:	b	1e8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac54>
   1e590:	andeq	lr, r1, r8, ror #12
   1e594:	andeq	lr, r1, r8, asr r6
   1e598:	andeq	lr, r1, r8, asr #12
   1e59c:	andeq	lr, r1, r8, lsl #13
   1e5a0:	andeq	lr, r1, r8, lsr #11
   1e5a4:	andeq	lr, r1, r8, ror r6
   1e5a8:	mov	r0, sl
   1e5ac:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e5b0:	mov	r8, #1
   1e5b4:	ldr	r3, [r5, #8]
   1e5b8:	cmp	r3, #0
   1e5bc:	bne	1e748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaf0>
   1e5c0:	ldr	r1, [r5, #4]
   1e5c4:	cmp	r1, #0
   1e5c8:	beq	1e73c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaae4>
   1e5cc:	ldr	r0, [pc, #892]	; 1e950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf8>
   1e5d0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e5d4:	cmp	r8, #0
   1e5d8:	beq	1e5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa99c>
   1e5dc:	ldr	r0, [pc, #892]	; 1e960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad08>
   1e5e0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e5e4:	cmp	r8, #1
   1e5e8:	beq	1e5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa99c>
   1e5ec:	ldr	r0, [pc, #876]	; 1e960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad08>
   1e5f0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e5f4:	ldr	r3, [r5]
   1e5f8:	cmp	r3, #0
   1e5fc:	beq	1e614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa9bc>
   1e600:	ldr	r0, [pc, #860]	; 1e964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad0c>
   1e604:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e608:	ldr	r5, [r5]
   1e60c:	cmp	r5, #0
   1e610:	bne	1e57c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa924>
   1e614:	ldr	r0, [pc, #836]	; 1e960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad08>
   1e618:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e61c:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e620:	ldr	r4, [r4, #24]
   1e624:	cmp	r4, #0
   1e628:	beq	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e62c:	mov	r0, r4
   1e630:	mov	r1, r6
   1e634:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   1e638:	ldr	r4, [r4]
   1e63c:	cmp	r4, #0
   1e640:	bne	1e62c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa9d4>
   1e644:	b	1e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4a0>
   1e648:	ldr	r0, [pc, #792]	; 1e968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad10>
   1e64c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e650:	mov	r8, #2
   1e654:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e658:	ldr	r0, [pc, #780]	; 1e96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad14>
   1e65c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e660:	mov	r8, #1
   1e664:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e668:	ldr	r0, [pc, #768]	; 1e970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad18>
   1e66c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e670:	mov	r8, #1
   1e674:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e678:	mov	r0, fp
   1e67c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e680:	mov	r8, #1
   1e684:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e688:	ldr	r0, [pc, #740]	; 1e974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad1c>
   1e68c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e690:	mov	r8, #2
   1e694:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e698:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1e69c:	ldr	r0, [r4, #12]
   1e6a0:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   1e6a4:	b	1e4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa868>
   1e6a8:	cmp	r1, #0
   1e6ac:	ldrne	r6, [pc, #512]	; 1e8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac5c>
   1e6b0:	beq	1e7ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab94>
   1e6b4:	ldr	r2, [pc, #596]	; 1e910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacb8>
   1e6b8:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   1e6bc:	ldr	r3, [r6, #32]
   1e6c0:	cmp	r3, #0
   1e6c4:	ldr	r3, [r4, #8]
   1e6c8:	beq	1e014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3bc>
   1e6cc:	ldr	r2, [r3, #12]
   1e6d0:	cmp	r2, #8
   1e6d4:	beq	1e7ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab54>
   1e6d8:	cmp	r5, #0
   1e6dc:	bne	1e7c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab68>
   1e6e0:	ldr	r2, [r6, #12]
   1e6e4:	cmp	r2, #0
   1e6e8:	beq	1e808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xabb0>
   1e6ec:	ldr	r3, [r6, #28]
   1e6f0:	ldr	r7, [r6, #20]
   1e6f4:	cmp	r3, #0
   1e6f8:	beq	1e7f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaba0>
   1e6fc:	ldr	r3, [r3, #28]
   1e700:	add	r7, r7, r3
   1e704:	mov	r1, r7
   1e708:	ldr	r0, [pc, #616]	; 1e978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad20>
   1e70c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e710:	cmp	r5, #0
   1e714:	beq	1e028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3d0>
   1e718:	ldr	r3, [pc, #432]	; 1e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac78>
   1e71c:	str	r7, [r3, #28]
   1e720:	b	1e028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3d0>
   1e724:	ldr	r0, [pc, #580]	; 1e970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad18>
   1e728:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e72c:	b	1e540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8e8>
   1e730:	ldr	r0, [pc, #580]	; 1e97c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad24>
   1e734:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e738:	b	1e554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8fc>
   1e73c:	ldr	r0, [pc, #568]	; 1e97c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad24>
   1e740:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e744:	b	1e5d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa97c>
   1e748:	ldr	r1, [r3]
   1e74c:	ldr	r0, [pc, #500]	; 1e948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf0>
   1e750:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e754:	ldr	r3, [r5, #8]
   1e758:	ldr	r7, [r3, #4]
   1e75c:	cmp	r7, #0
   1e760:	beq	1e780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab28>
   1e764:	ldr	r9, [pc, #432]	; 1e91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacc4>
   1e768:	ldr	r1, [r7]
   1e76c:	mov	r0, r9
   1e770:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e774:	ldr	r7, [r7, #4]
   1e778:	cmp	r7, #0
   1e77c:	bne	1e768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab10>
   1e780:	ldr	r0, [pc, #452]	; 1e94c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xacf4>
   1e784:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e788:	b	1e5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa968>
   1e78c:	ldr	r0, [pc, #460]	; 1e960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad08>
   1e790:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e794:	b	1e560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa908>
   1e798:	ldrb	ip, [r0, #1]
   1e79c:	cmp	ip, #0
   1e7a0:	moveq	r5, #1
   1e7a4:	beq	1dff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa39c>
   1e7a8:	b	1dfec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa394>
   1e7ac:	ldr	r3, [r6, #28]
   1e7b0:	ldr	r7, [r6, #20]
   1e7b4:	cmp	r3, #0
   1e7b8:	bne	1e6fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaa4>
   1e7bc:	b	1e704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaac>
   1e7c0:	ldr	r3, [r6, #28]
   1e7c4:	ldr	r7, [r6, #20]
   1e7c8:	cmp	r3, #0
   1e7cc:	bne	1e6fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaa4>
   1e7d0:	mov	r1, r7
   1e7d4:	ldr	r0, [pc, #412]	; 1e978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad20>
   1e7d8:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e7dc:	b	1e718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaac0>
   1e7e0:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1e7e4:	mov	r5, #0
   1e7e8:	b	1e22c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5d4>
   1e7ec:	ldr	r1, [pc, #196]	; 1e8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac60>
   1e7f0:	ldr	r6, [pc, #188]	; 1e8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac5c>
   1e7f4:	b	1e6b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa5c>
   1e7f8:	mov	r1, r7
   1e7fc:	ldr	r0, [pc, #372]	; 1e978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad20>
   1e800:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e804:	b	1e028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3d0>
   1e808:	ldr	r2, [pc, #368]	; 1e980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad28>
   1e80c:	ldr	r1, [r3, #16]
   1e810:	mov	r3, #1
   1e814:	ldr	r0, [r2, #28]
   1e818:	str	r3, [sp]
   1e81c:	mov	r2, r5
   1e820:	mov	r3, r5
   1e824:	bl	13640 <bfd_link_hash_lookup@plt>
   1e828:	cmp	r0, #0
   1e82c:	beq	1e854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xabfc>
   1e830:	ldrd	r2, [r0, #20]
   1e834:	ldr	r0, [pc, #328]	; 1e984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad2c>
   1e838:	ldr	r1, [r2, #60]	; 0x3c
   1e83c:	ldr	r2, [r2, #56]	; 0x38
   1e840:	ldr	r1, [r1, #28]
   1e844:	add	r3, r3, r2
   1e848:	add	r1, r3, r1
   1e84c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e850:	b	1e028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3d0>
   1e854:	ldr	r0, [pc, #300]	; 1e988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad30>
   1e858:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1e85c:	b	1e028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3d0>
   1e860:	ldr	r2, [pc, #292]	; 1e98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad34>
   1e864:	ldr	r1, [pc, #292]	; 1e990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad38>
   1e868:	ldr	r0, [pc, #292]	; 1e994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad3c>
   1e86c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   1e870:	ldr	r3, [pc, #80]	; 1e8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1e874:	mov	r2, #5
   1e878:	ldr	r1, [pc, #280]	; 1e998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad40>
   1e87c:	mov	r0, #0
   1e880:	ldr	r5, [r3, #80]	; 0x50
   1e884:	bl	13460 <dcgettext@plt>
   1e888:	ldr	r2, [r4, #4]
   1e88c:	mov	r1, r0
   1e890:	mov	r0, r5
   1e894:	bl	1382c <fprintf@plt>
   1e898:	ldr	r1, [pc, #252]	; 1e99c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad44>
   1e89c:	ldr	r0, [pc, #240]	; 1e994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad3c>
   1e8a0:	add	sp, sp, #12
   1e8a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8a8:	b	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1e8ac:	mov	r8, #0
   1e8b0:	b	1e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa95c>
   1e8b4:	strdeq	r8, [ip], -r4
   1e8b8:	andeq	r7, ip, r8, lsr #17
   1e8bc:	andeq	pc, r4, r0, ror #6
   1e8c0:	andeq	pc, r4, ip, ror #6
   1e8c4:	andeq	pc, r4, r8, ror r3	; <UNPREDICTABLE>
   1e8c8:	andeq	r8, ip, r4, ror r1
   1e8cc:	andeq	pc, r4, r4, lsr #7
   1e8d0:	andeq	r7, ip, r8, lsr #23
   1e8d4:	strdeq	pc, [r4], -r4
   1e8d8:	andeq	pc, r4, r8, lsl #6
   1e8dc:			; <UNDEFINED> instruction: 0x0004f3b0
   1e8e0:	andeq	pc, r4, r0, asr #7
   1e8e4:	andeq	r3, r4, r4, ror #22
   1e8e8:	andeq	r3, r4, ip, ror #22
   1e8ec:	andeq	pc, r4, ip, asr #7
   1e8f0:	andeq	r8, ip, r4, ror r0
   1e8f4:	andeq	r8, ip, ip, ror r0
   1e8f8:	ldrdeq	pc, [r4], -r0
   1e8fc:	andeq	pc, r4, r8, ror #3
   1e900:	andeq	r8, ip, r4, asr r0
   1e904:	andeq	pc, r4, r0, lsr #6
   1e908:	andeq	pc, r4, r4, lsr #6
   1e90c:	andeq	pc, r4, ip, lsr #6
   1e910:	andeq	r7, ip, r4, asr #23
   1e914:	muleq	r4, r8, r3
   1e918:	andeq	r8, ip, r4, rrx
   1e91c:	andeq	fp, r4, r0, lsl #24
   1e920:	andeq	pc, r4, r4, ror lr	; <UNPREDICTABLE>
   1e924:	andeq	pc, r4, ip, lsl #7
   1e928:	andeq	pc, r4, ip, lsl #6
   1e92c:	andeq	pc, r4, r4, lsl r3	; <UNPREDICTABLE>
   1e930:	ldrdeq	pc, [r4], -ip
   1e934:	muleq	r4, r4, r2
   1e938:	andeq	pc, r4, ip, asr #5
   1e93c:	andeq	lr, r4, r4, lsr #31
   1e940:	andeq	pc, r4, r4, ror #5
   1e944:			; <UNDEFINED> instruction: 0x0004f2b4
   1e948:	strdeq	pc, [r4], -r8
   1e94c:	andeq	pc, r4, r8, lsl #4
   1e950:	andeq	pc, r4, r0, lsl #26
   1e954:	andeq	pc, r4, r8, lsl r2	; <UNPREDICTABLE>
   1e958:	andeq	pc, r4, ip, ror r2	; <UNPREDICTABLE>
   1e95c:	andeq	pc, r4, r0, ror r2	; <UNPREDICTABLE>
   1e960:	strdeq	sl, [r4], -ip
   1e964:	andeq	r2, r5, r4, ror r1
   1e968:	andeq	pc, r4, r0, lsr r2	; <UNPREDICTABLE>
   1e96c:	andeq	pc, r4, ip, lsl r2	; <UNPREDICTABLE>
   1e970:	andeq	pc, r4, ip, lsl #4
   1e974:	andeq	pc, r4, r0, asr r2	; <UNPREDICTABLE>
   1e978:	andeq	pc, r4, r0, asr #6
   1e97c:	andeq	pc, r4, r8, lsr #17
   1e980:	andeq	r8, ip, ip, lsl #1
   1e984:	andeq	pc, r4, r8, asr #6
   1e988:	andeq	pc, r4, r0, asr r3	; <UNPREDICTABLE>
   1e98c:	strdeq	lr, [r4], -r8
   1e990:	andeq	r1, r0, r9, asr #1
   1e994:	andeq	pc, r4, r8, rrx
   1e998:	andeq	pc, r4, r0, asr #3
   1e99c:			; <UNDEFINED> instruction: 0x000011bc
   1e9a0:	ldr	r3, [pc, #248]	; 1eaa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae48>
   1e9a4:	ldr	r3, [r3, #48]	; 0x30
   1e9a8:	cmp	r3, #1
   1e9ac:	beq	1ea80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae28>
   1e9b0:	cmp	r3, #2
   1e9b4:	beq	1ea6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae14>
   1e9b8:	ldr	r2, [r0, #4]
   1e9bc:	ldr	r3, [r1, #4]
   1e9c0:	cmp	r2, r3
   1e9c4:	bne	1ea78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae20>
   1e9c8:	push	{r4, r5, r6, r7, r8, lr}
   1e9cc:	mov	r5, r1
   1e9d0:	ldr	r6, [r0]
   1e9d4:	mov	r4, r0
   1e9d8:	ldr	r1, [pc, #196]	; 1eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae4c>
   1e9dc:	mov	r0, r6
   1e9e0:	bl	13268 <strcmp@plt>
   1e9e4:	cmp	r0, #0
   1e9e8:	beq	1ea64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0c>
   1e9ec:	ldr	r1, [pc, #180]	; 1eaa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae50>
   1e9f0:	mov	r0, r6
   1e9f4:	bl	13268 <strcmp@plt>
   1e9f8:	cmp	r0, #0
   1e9fc:	beq	1ea64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0c>
   1ea00:	ldr	r1, [pc, #164]	; 1eaac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae54>
   1ea04:	mov	r0, r6
   1ea08:	bl	13268 <strcmp@plt>
   1ea0c:	cmp	r0, #0
   1ea10:	beq	1ea64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0c>
   1ea14:	ldr	r1, [pc, #148]	; 1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae58>
   1ea18:	mov	r0, r6
   1ea1c:	bl	13268 <strcmp@plt>
   1ea20:	cmp	r0, #0
   1ea24:	beq	1ea64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0c>
   1ea28:	ldr	r7, [pc, #132]	; 1eab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae5c>
   1ea2c:	ldr	r3, [r7, #76]	; 0x4c
   1ea30:	cmp	r3, #0
   1ea34:	beq	1ea60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae08>
   1ea38:	mov	r0, r6
   1ea3c:	ldr	r1, [r5]
   1ea40:	bl	1d378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9720>
   1ea44:	ldr	r3, [r7, #76]	; 0x4c
   1ea48:	ldr	r1, [r5]
   1ea4c:	mov	r6, r0
   1ea50:	ldr	r0, [r3]
   1ea54:	bl	1d378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9720>
   1ea58:	cmp	r6, r0
   1ea5c:	ble	1ea64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae0c>
   1ea60:	str	r4, [r7, #76]	; 0x4c
   1ea64:	mov	r0, #0
   1ea68:	pop	{r4, r5, r6, r7, r8, pc}
   1ea6c:	ldr	r3, [r0, #8]
   1ea70:	cmp	r3, #1
   1ea74:	beq	1e9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad60>
   1ea78:	mov	r0, #0
   1ea7c:	bx	lr
   1ea80:	ldr	r3, [r0, #8]
   1ea84:	cmp	r3, #0
   1ea88:	bne	1ea78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae20>
   1ea8c:	ldr	r2, [r0, #4]
   1ea90:	ldr	r3, [r1, #4]
   1ea94:	cmp	r2, r3
   1ea98:	bne	1ea78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae20>
   1ea9c:	b	1e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad70>
   1eaa0:	andeq	r8, ip, r8, lsl r1
   1eaa4:	ldrdeq	pc, [r4], -ip
   1eaa8:	andeq	pc, r4, r8, ror #7
   1eaac:	strdeq	pc, [r4], -r4
   1eab0:	andeq	pc, r4, r4, lsl #8
   1eab4:	andeq	r7, ip, r8, lsr #23
   1eab8:	ldrb	r3, [r0, #12]
   1eabc:	cmp	r3, #5
   1eac0:	bne	1ebec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf94>
   1eac4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1eac8:	sub	sp, sp, #60	; 0x3c
   1eacc:	ldr	r6, [pc, #436]	; 1ec88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb030>
   1ead0:	ldr	r3, [r0, #20]
   1ead4:	ldr	r2, [r6, #44]	; 0x2c
   1ead8:	ldr	ip, [r3]
   1eadc:	cmp	r2, #2
   1eae0:	beq	1ebf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf9c>
   1eae4:	cmp	r2, #1
   1eae8:	beq	1ec04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafac>
   1eaec:	ldr	r5, [pc, #408]	; 1ec8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb034>
   1eaf0:	ldr	r7, [r3, #4]
   1eaf4:	mov	r4, r0
   1eaf8:	ldr	ip, [r5, #48]	; 0x30
   1eafc:	mov	r2, r0
   1eb00:	mov	r1, r5
   1eb04:	ldr	r3, [ip, #4]
   1eb08:	mov	r0, ip
   1eb0c:	ldr	r8, [r4, #24]
   1eb10:	ldr	r3, [r3, #412]	; 0x19c
   1eb14:	blx	r3
   1eb18:	cmp	r0, #0
   1eb1c:	beq	1ec64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb00c>
   1eb20:	ldr	r3, [r6, #80]	; 0x50
   1eb24:	cmp	r3, #0
   1eb28:	beq	1ebe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf88>
   1eb2c:	ldr	r9, [pc, #348]	; 1ec90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb038>
   1eb30:	ldr	r6, [r9, #80]	; 0x50
   1eb34:	cmp	r6, #0
   1eb38:	beq	1ec14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafbc>
   1eb3c:	ldr	r0, [r5, #48]	; 0x30
   1eb40:	mov	r2, #3
   1eb44:	ldr	r1, [r4, #4]
   1eb48:	bl	1397c <bfd_demangle@plt>
   1eb4c:	subs	r5, r0, #0
   1eb50:	beq	1ec48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaff0>
   1eb54:	mov	r1, r5
   1eb58:	ldr	r0, [pc, #308]	; 1ec94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb03c>
   1eb5c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1eb60:	mov	r0, r5
   1eb64:	bl	137d8 <strlen@plt>
   1eb68:	mov	r4, r0
   1eb6c:	mov	r0, r5
   1eb70:	bl	13364 <free@plt>
   1eb74:	cmp	r4, #18
   1eb78:	bgt	1ec7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb024>
   1eb7c:	add	r4, r4, #1
   1eb80:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1eb84:	cmp	r4, #20
   1eb88:	bne	1eb7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf24>
   1eb8c:	ldr	r0, [pc, #260]	; 1ec98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb040>
   1eb90:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1eb94:	mov	r2, r8
   1eb98:	ldr	r1, [pc, #252]	; 1ec9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb044>
   1eb9c:	add	r0, sp, #4
   1eba0:	bl	13a00 <sprintf@plt>
   1eba4:	add	r1, sp, #4
   1eba8:	ldr	r0, [pc, #228]	; 1ec94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb03c>
   1ebac:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ebb0:	add	r0, sp, #4
   1ebb4:	bl	137d8 <strlen@plt>
   1ebb8:	cmp	r0, #15
   1ebbc:	mov	r4, r0
   1ebc0:	bhi	1ebd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf7c>
   1ebc4:	add	r4, r4, #1
   1ebc8:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   1ebcc:	cmp	r4, #16
   1ebd0:	bne	1ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf6c>
   1ebd4:	ldr	r1, [r7, #148]	; 0x94
   1ebd8:	ldr	r0, [pc, #192]	; 1eca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb048>
   1ebdc:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ebe0:	mov	r0, #1
   1ebe4:	add	sp, sp, #60	; 0x3c
   1ebe8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ebec:	mov	r0, #1
   1ebf0:	bx	lr
   1ebf4:	ldr	r2, [r1]
   1ebf8:	cmp	ip, r2
   1ebfc:	bcs	1eaec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae94>
   1ec00:	b	1ebe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf88>
   1ec04:	ldr	r2, [r1]
   1ec08:	cmp	ip, r2
   1ec0c:	bls	1eaec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae94>
   1ec10:	b	1ebe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf88>
   1ec14:	mov	r2, #5
   1ec18:	ldr	r1, [pc, #132]	; 1eca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb04c>
   1ec1c:	mov	r0, r6
   1ec20:	bl	13460 <dcgettext@plt>
   1ec24:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ec28:	mov	r2, #5
   1ec2c:	ldr	r1, [pc, #116]	; 1eca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb050>
   1ec30:	mov	r0, r6
   1ec34:	bl	13460 <dcgettext@plt>
   1ec38:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ec3c:	mov	r3, #1
   1ec40:	str	r3, [r9, #80]	; 0x50
   1ec44:	b	1eb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaee4>
   1ec48:	ldr	r1, [r4, #4]
   1ec4c:	ldr	r0, [pc, #64]	; 1ec94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb03c>
   1ec50:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   1ec54:	ldr	r0, [r4, #4]
   1ec58:	bl	137d8 <strlen@plt>
   1ec5c:	mov	r4, r0
   1ec60:	b	1eb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf1c>
   1ec64:	mov	r2, #5
   1ec68:	ldr	r1, [pc, #60]	; 1ecac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb054>
   1ec6c:	bl	13460 <dcgettext@plt>
   1ec70:	ldr	r1, [r4, #4]
   1ec74:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   1ec78:	b	1eb20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaec8>
   1ec7c:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   1ec80:	mov	r4, #0
   1ec84:	b	1eb7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf24>
   1ec88:	andeq	r8, ip, r4, ror r1
   1ec8c:	andeq	r8, ip, ip, lsl #1
   1ec90:	andeq	r7, ip, r8, lsr #23
   1ec94:	andeq	pc, r4, r0, lsl #26
   1ec98:	muleq	r4, r0, r4
   1ec9c:	muleq	r4, r4, r4
   1eca0:	muleq	r4, ip, r1
   1eca4:	andeq	pc, r4, r4, asr #8
   1eca8:	andeq	pc, r4, r0, ror #8
   1ecac:	andeq	pc, r4, r4, lsl r4	; <UNPREDICTABLE>
   1ecb0:	push	{r4, r5, r6, lr}
   1ecb4:	mov	r5, r1
   1ecb8:	ldr	r1, [pc, #40]	; 1ece8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb090>
   1ecbc:	mov	r4, r0
   1ecc0:	bl	13ac0 <strpbrk@plt>
   1ecc4:	mov	r1, r5
   1ecc8:	cmp	r0, #0
   1eccc:	mov	r0, r4
   1ecd0:	bne	1ecdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb084>
   1ecd4:	pop	{r4, r5, r6, lr}
   1ecd8:	b	13268 <strcmp@plt>
   1ecdc:	mov	r2, #0
   1ece0:	pop	{r4, r5, r6, lr}
   1ece4:	b	13664 <fnmatch@plt>
   1ece8:	muleq	r4, r8, r4
   1ecec:	push	{r4, r5, r6, lr}
   1ecf0:	mov	r5, r0
   1ecf4:	ldrb	r0, [r1, #1]
   1ecf8:	mov	r4, r1
   1ecfc:	mov	r6, r3
   1ed00:	cmp	r0, #0
   1ed04:	bne	1ed78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb120>
   1ed08:	ldr	r2, [r6]
   1ed0c:	sub	r1, r4, r5
   1ed10:	cmp	r2, #0
   1ed14:	clz	r1, r1
   1ed18:	moveq	r3, r2
   1ed1c:	lsr	r1, r1, #5
   1ed20:	beq	1ed30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb0d8>
   1ed24:	ldr	r3, [r2, #140]	; 0x8c
   1ed28:	adds	r3, r3, #0
   1ed2c:	movne	r3, #1
   1ed30:	cmp	r1, r3
   1ed34:	beq	1ed8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb134>
   1ed38:	cmp	r4, r5
   1ed3c:	beq	1ed70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb118>
   1ed40:	ldr	r2, [r2, #140]	; 0x8c
   1ed44:	mov	r3, #0
   1ed48:	mov	r0, r5
   1ed4c:	ldr	r1, [r2]
   1ed50:	strb	r3, [r4]
   1ed54:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1ed58:	ldr	r3, [pc, #52]	; 1ed94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb13c>
   1ed5c:	ldrb	r3, [r3, #10]
   1ed60:	strb	r3, [r4]
   1ed64:	clz	r0, r0
   1ed68:	lsr	r0, r0, #5
   1ed6c:	pop	{r4, r5, r6, pc}
   1ed70:	mov	r0, #1
   1ed74:	pop	{r4, r5, r6, pc}
   1ed78:	mov	r1, r2
   1ed7c:	add	r0, r4, #1
   1ed80:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1ed84:	cmp	r0, #0
   1ed88:	beq	1ed08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb0b0>
   1ed8c:	mov	r0, #0
   1ed90:	pop	{r4, r5, r6, pc}
   1ed94:	andeq	r8, ip, ip, lsl #1
   1ed98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ed9c:	subs	r4, r0, #0
   1eda0:	beq	1ee48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1f0>
   1eda4:	mov	r7, r1
   1eda8:	ldr	r8, [pc, #160]	; 1ee50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1f8>
   1edac:	add	r9, r1, #16
   1edb0:	b	1edcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb174>
   1edb4:	bl	1ecec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb094>
   1edb8:	cmp	r0, #0
   1edbc:	bne	1ee40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1e8>
   1edc0:	ldr	r4, [r4, #4]
   1edc4:	cmp	r4, #0
   1edc8:	beq	1ee48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1f0>
   1edcc:	ldrb	r3, [r8, #10]
   1edd0:	ldr	r5, [r4]
   1edd4:	ldr	r6, [r7, #8]
   1edd8:	cmp	r3, #0
   1eddc:	mov	r1, r3
   1ede0:	mov	r0, r5
   1ede4:	beq	1ee00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1a8>
   1ede8:	bl	137fc <strchr@plt>
   1edec:	mov	r3, r9
   1edf0:	mov	r2, r6
   1edf4:	subs	r1, r0, #0
   1edf8:	mov	r0, r5
   1edfc:	bne	1edb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb15c>
   1ee00:	mov	r1, r6
   1ee04:	mov	r0, r5
   1ee08:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1ee0c:	cmp	r0, #0
   1ee10:	beq	1ee40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1e8>
   1ee14:	ldr	r3, [r7, #16]
   1ee18:	cmp	r3, #0
   1ee1c:	beq	1edc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb168>
   1ee20:	ldr	r3, [r3, #140]	; 0x8c
   1ee24:	cmp	r3, #0
   1ee28:	beq	1edc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb168>
   1ee2c:	ldr	r1, [r3]
   1ee30:	ldr	r0, [r4]
   1ee34:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1ee38:	cmp	r0, #0
   1ee3c:	bne	1edc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb168>
   1ee40:	mov	r0, #1
   1ee44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee48:	mov	r0, #0
   1ee4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee50:	andeq	r8, ip, ip, lsl #1
   1ee54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ee58:	mov	r5, r0
   1ee5c:	ldr	r0, [r3, #8]
   1ee60:	mov	r4, r3
   1ee64:	mov	r7, r2
   1ee68:	mov	r8, r1
   1ee6c:	ldr	r6, [sp, #32]
   1ee70:	ldr	r9, [sp, #36]	; 0x24
   1ee74:	bl	1ed98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb140>
   1ee78:	cmp	r0, #0
   1ee7c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee80:	strd	r8, [sp, #32]
   1ee84:	mov	r2, r7
   1ee88:	mov	r1, r4
   1ee8c:	ldr	r3, [r5, #60]	; 0x3c
   1ee90:	mov	r0, r5
   1ee94:	mov	ip, r6
   1ee98:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ee9c:	bx	ip
   1eea0:	push	{r4, r5, r6, r7, r8, r9, lr}
   1eea4:	mov	r7, r1
   1eea8:	ldr	r1, [r1, #16]
   1eeac:	sub	sp, sp, #12
   1eeb0:	ldr	r5, [r0, #40]	; 0x28
   1eeb4:	ldr	r4, [r1, #100]	; 0x64
   1eeb8:	cmp	r4, #0
   1eebc:	beq	1ef18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c0>
   1eec0:	mov	r6, r0
   1eec4:	mov	r9, r2
   1eec8:	mov	r8, r3
   1eecc:	b	1eedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb284>
   1eed0:	ldr	r4, [r4, #12]
   1eed4:	cmp	r4, #0
   1eed8:	beq	1ef18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c0>
   1eedc:	ldr	r1, [r4]
   1eee0:	ldr	r0, [r5, #4]
   1eee4:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1eee8:	cmp	r0, #0
   1eeec:	beq	1eed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb278>
   1eef0:	mov	r2, r4
   1eef4:	str	r8, [sp, #4]
   1eef8:	str	r9, [sp]
   1eefc:	mov	r3, r5
   1ef00:	mov	r1, r7
   1ef04:	mov	r0, r6
   1ef08:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1ef0c:	ldr	r4, [r4, #12]
   1ef10:	cmp	r4, #0
   1ef14:	bne	1eedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb284>
   1ef18:	add	sp, sp, #12
   1ef1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ef20:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ef24:	mov	r7, r1
   1ef28:	ldr	r1, [r1, #16]
   1ef2c:	sub	sp, sp, #12
   1ef30:	ldr	r5, [r1, #100]	; 0x64
   1ef34:	cmp	r5, #0
   1ef38:	beq	1efa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb34c>
   1ef3c:	mov	r6, r0
   1ef40:	mov	r9, r2
   1ef44:	mov	r8, r3
   1ef48:	ldr	r4, [r6, #16]
   1ef4c:	cmp	r4, #0
   1ef50:	beq	1efac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb354>
   1ef54:	ldr	r3, [r4, #4]
   1ef58:	subs	r0, r3, #0
   1ef5c:	beq	1ef70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb318>
   1ef60:	ldr	r1, [r5]
   1ef64:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1ef68:	cmp	r0, #0
   1ef6c:	bne	1ef8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb334>
   1ef70:	str	r8, [sp, #4]
   1ef74:	str	r9, [sp]
   1ef78:	mov	r3, r4
   1ef7c:	mov	r2, r5
   1ef80:	mov	r1, r7
   1ef84:	mov	r0, r6
   1ef88:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1ef8c:	ldr	r4, [r4]
   1ef90:	cmp	r4, #0
   1ef94:	bne	1ef54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2fc>
   1ef98:	ldr	r5, [r5, #12]
   1ef9c:	cmp	r5, #0
   1efa0:	bne	1ef48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2f0>
   1efa4:	add	sp, sp, #12
   1efa8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1efac:	stm	sp, {r7, r8}
   1efb0:	mov	r2, r5
   1efb4:	mov	r1, r4
   1efb8:	ldr	r3, [r6, #60]	; 0x3c
   1efbc:	mov	r0, r6
   1efc0:	blx	r9
   1efc4:	ldr	r5, [r5, #12]
   1efc8:	cmp	r5, #0
   1efcc:	bne	1ef48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2f0>
   1efd0:	b	1efa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb34c>
   1efd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1efd8:	mov	r5, r0
   1efdc:	sub	sp, sp, #36	; 0x24
   1efe0:	ldr	lr, [r5, #44]	; 0x2c
   1efe4:	mov	r6, r1
   1efe8:	ldr	r1, [r0, #40]	; 0x28
   1efec:	str	lr, [sp, #12]
   1eff0:	ldr	lr, [r5, #52]	; 0x34
   1eff4:	mov	ip, #0
   1eff8:	str	r1, [sp, #20]
   1effc:	str	r2, [sp, #8]
   1f000:	ldr	r1, [r1, #4]
   1f004:	mov	fp, r3
   1f008:	ldr	r0, [r6, #16]
   1f00c:	add	r3, sp, #24
   1f010:	ldr	r2, [pc, #344]	; 1f170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb518>
   1f014:	str	ip, [sp, #24]
   1f018:	str	ip, [sp, #28]
   1f01c:	ldr	r8, [r5, #48]	; 0x30
   1f020:	str	lr, [sp, #16]
   1f024:	bl	1322c <bfd_get_section_by_name_if@plt>
   1f028:	ldr	ip, [sp, #28]
   1f02c:	ldr	r7, [sp, #24]
   1f030:	cmp	ip, #0
   1f034:	bne	1f154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4fc>
   1f038:	ldr	r3, [sp, #12]
   1f03c:	ldr	r2, [pc, #300]	; 1f170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb518>
   1f040:	ldr	r0, [r6, #16]
   1f044:	ldr	r1, [r3, #4]
   1f048:	add	r3, sp, #24
   1f04c:	str	ip, [sp, #24]
   1f050:	bl	1322c <bfd_get_section_by_name_if@plt>
   1f054:	ldr	r3, [sp, #28]
   1f058:	ldr	r9, [sp, #24]
   1f05c:	cmp	r3, #0
   1f060:	bne	1f154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4fc>
   1f064:	ldr	r3, [r6, #16]
   1f068:	ldr	r4, [r3, #100]	; 0x64
   1f06c:	cmp	r4, #0
   1f070:	bne	1f09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb444>
   1f074:	add	sp, sp, #36	; 0x24
   1f078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f07c:	ldr	r1, [sp, #8]
   1f080:	str	fp, [sp, #4]
   1f084:	str	r1, [sp]
   1f088:	mov	r1, r6
   1f08c:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f090:	ldr	r4, [r4, #12]
   1f094:	cmp	r4, #0
   1f098:	beq	1f074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb41c>
   1f09c:	cmp	r7, r4
   1f0a0:	beq	1f130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4d8>
   1f0a4:	cmp	r9, r4
   1f0a8:	beq	1f10c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4b4>
   1f0ac:	ldr	sl, [r4]
   1f0b0:	ldr	r0, [r8, #4]
   1f0b4:	mov	r1, sl
   1f0b8:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1f0bc:	mov	r1, sl
   1f0c0:	mov	r3, r8
   1f0c4:	mov	r2, r4
   1f0c8:	cmp	r0, #0
   1f0cc:	mov	r0, r5
   1f0d0:	bne	1f07c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb424>
   1f0d4:	ldr	r3, [sp, #16]
   1f0d8:	ldr	r0, [r3, #4]
   1f0dc:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1f0e0:	cmp	r0, #0
   1f0e4:	beq	1f090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb438>
   1f0e8:	ldr	r3, [sp, #8]
   1f0ec:	str	fp, [sp, #4]
   1f0f0:	str	r3, [sp]
   1f0f4:	mov	r2, r4
   1f0f8:	ldr	r3, [sp, #16]
   1f0fc:	mov	r1, r6
   1f100:	mov	r0, r5
   1f104:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f108:	b	1f090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb438>
   1f10c:	ldr	r3, [sp, #8]
   1f110:	str	fp, [sp, #4]
   1f114:	str	r3, [sp]
   1f118:	mov	r2, r9
   1f11c:	ldr	r3, [sp, #12]
   1f120:	mov	r1, r6
   1f124:	mov	r0, r5
   1f128:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f12c:	b	1f090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb438>
   1f130:	ldr	r3, [sp, #8]
   1f134:	str	fp, [sp, #4]
   1f138:	str	r3, [sp]
   1f13c:	mov	r2, r7
   1f140:	ldr	r3, [sp, #20]
   1f144:	mov	r1, r6
   1f148:	mov	r0, r5
   1f14c:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f150:	b	1f090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb438>
   1f154:	mov	r3, fp
   1f158:	ldr	r2, [sp, #8]
   1f15c:	mov	r1, r6
   1f160:	mov	r0, r5
   1f164:	bl	1ef20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c8>
   1f168:	add	sp, sp, #36	; 0x24
   1f16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f170:	andeq	ip, r1, r8, lsr #18
   1f174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f178:	mov	r5, r0
   1f17c:	mov	r8, r1
   1f180:	ldr	r1, [r0, #40]	; 0x28
   1f184:	sub	sp, sp, #28
   1f188:	ldr	lr, [r5, #48]	; 0x30
   1f18c:	mov	ip, #0
   1f190:	str	r1, [sp, #12]
   1f194:	mov	r9, r2
   1f198:	ldr	r1, [r1, #4]
   1f19c:	mov	sl, r3
   1f1a0:	ldr	r0, [r8, #16]
   1f1a4:	add	r3, sp, #16
   1f1a8:	ldr	r2, [pc, #244]	; 1f2a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb64c>
   1f1ac:	ldr	r6, [r5, #44]	; 0x2c
   1f1b0:	str	lr, [sp, #8]
   1f1b4:	str	ip, [sp, #16]
   1f1b8:	str	ip, [sp, #20]
   1f1bc:	bl	1322c <bfd_get_section_by_name_if@plt>
   1f1c0:	ldr	r3, [sp, #20]
   1f1c4:	ldr	r7, [sp, #16]
   1f1c8:	cmp	r3, #0
   1f1cc:	bne	1f288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb630>
   1f1d0:	ldr	r3, [r8, #16]
   1f1d4:	ldr	r4, [r3, #100]	; 0x64
   1f1d8:	cmp	r4, #0
   1f1dc:	bne	1f1fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5a4>
   1f1e0:	b	1f264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb60c>
   1f1e4:	stm	sp, {r9, sl}
   1f1e8:	mov	r1, r8
   1f1ec:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f1f0:	ldr	r4, [r4, #12]
   1f1f4:	cmp	r4, #0
   1f1f8:	beq	1f264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb60c>
   1f1fc:	cmp	r7, r4
   1f200:	beq	1f26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb614>
   1f204:	ldr	fp, [r4]
   1f208:	ldr	r0, [r6, #4]
   1f20c:	mov	r1, fp
   1f210:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1f214:	mov	r1, fp
   1f218:	mov	r3, r6
   1f21c:	mov	r2, r4
   1f220:	cmp	r0, #0
   1f224:	mov	r0, r5
   1f228:	bne	1f1e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb58c>
   1f22c:	ldr	r3, [sp, #8]
   1f230:	ldr	r0, [r3, #4]
   1f234:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1f238:	cmp	r0, #0
   1f23c:	beq	1f1f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb598>
   1f240:	mov	r2, r4
   1f244:	stm	sp, {r9, sl}
   1f248:	ldr	r3, [sp, #8]
   1f24c:	mov	r1, r8
   1f250:	mov	r0, r5
   1f254:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f258:	ldr	r4, [r4, #12]
   1f25c:	cmp	r4, #0
   1f260:	bne	1f1fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5a4>
   1f264:	add	sp, sp, #28
   1f268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f26c:	stm	sp, {r9, sl}
   1f270:	ldr	r3, [sp, #12]
   1f274:	mov	r2, r7
   1f278:	mov	r1, r8
   1f27c:	mov	r0, r5
   1f280:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f284:	b	1f1f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb598>
   1f288:	mov	r3, sl
   1f28c:	mov	r2, r9
   1f290:	mov	r1, r8
   1f294:	mov	r0, r5
   1f298:	bl	1ef20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c8>
   1f29c:	add	sp, sp, #28
   1f2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2a4:	andeq	ip, r1, r8, lsr #18
   1f2a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2ac:	mov	r8, r1
   1f2b0:	ldr	fp, [r0, #40]	; 0x28
   1f2b4:	sub	sp, sp, #20
   1f2b8:	mov	r7, r0
   1f2bc:	mov	ip, #0
   1f2c0:	ldr	r1, [fp, #4]
   1f2c4:	mov	r9, r2
   1f2c8:	mov	sl, r3
   1f2cc:	ldr	r0, [r8, #16]
   1f2d0:	add	r3, sp, #8
   1f2d4:	ldr	r2, [pc, #188]	; 1f398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb740>
   1f2d8:	ldr	r6, [r7, #44]	; 0x2c
   1f2dc:	str	ip, [sp, #8]
   1f2e0:	str	ip, [sp, #12]
   1f2e4:	bl	1322c <bfd_get_section_by_name_if@plt>
   1f2e8:	ldr	r3, [sp, #12]
   1f2ec:	ldr	r5, [sp, #8]
   1f2f0:	cmp	r3, #0
   1f2f4:	bne	1f37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb724>
   1f2f8:	ldr	r3, [r8, #16]
   1f2fc:	ldr	r4, [r3, #100]	; 0x64
   1f300:	cmp	r4, #0
   1f304:	bne	1f32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6d4>
   1f308:	b	1f358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb700>
   1f30c:	ldr	r1, [r4]
   1f310:	ldr	r0, [r6, #4]
   1f314:	bl	1d968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d10>
   1f318:	cmp	r0, #0
   1f31c:	bne	1f360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb708>
   1f320:	ldr	r4, [r4, #12]
   1f324:	cmp	r4, #0
   1f328:	beq	1f358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb700>
   1f32c:	cmp	r5, r4
   1f330:	bne	1f30c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6b4>
   1f334:	stm	sp, {r9, sl}
   1f338:	mov	r3, fp
   1f33c:	mov	r2, r5
   1f340:	mov	r1, r8
   1f344:	mov	r0, r7
   1f348:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f34c:	ldr	r4, [r4, #12]
   1f350:	cmp	r4, #0
   1f354:	bne	1f32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6d4>
   1f358:	add	sp, sp, #20
   1f35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f360:	stm	sp, {r9, sl}
   1f364:	mov	r3, r6
   1f368:	mov	r2, r4
   1f36c:	mov	r1, r8
   1f370:	mov	r0, r7
   1f374:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f378:	b	1f320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6c8>
   1f37c:	mov	r3, sl
   1f380:	mov	r2, r9
   1f384:	mov	r1, r8
   1f388:	mov	r0, r7
   1f38c:	bl	1ef20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c8>
   1f390:	add	sp, sp, #20
   1f394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f398:	andeq	ip, r1, r8, lsr #18
   1f39c:	push	{r4, r5, r6, r7, r8, lr}
   1f3a0:	mov	r5, r1
   1f3a4:	ldr	r6, [r0, #40]	; 0x28
   1f3a8:	sub	sp, sp, #16
   1f3ac:	mov	ip, #0
   1f3b0:	ldr	r1, [r6, #4]
   1f3b4:	mov	r4, r0
   1f3b8:	mov	r7, r2
   1f3bc:	mov	r8, r3
   1f3c0:	ldr	r2, [pc, #92]	; 1f424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7cc>
   1f3c4:	add	r3, sp, #8
   1f3c8:	ldr	r0, [r5, #16]
   1f3cc:	str	ip, [sp, #8]
   1f3d0:	str	ip, [sp, #12]
   1f3d4:	bl	1322c <bfd_get_section_by_name_if@plt>
   1f3d8:	ldrd	r2, [sp, #8]
   1f3dc:	cmp	r3, #0
   1f3e0:	bne	1f408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7b0>
   1f3e4:	cmp	r2, #0
   1f3e8:	beq	1f400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7a8>
   1f3ec:	stm	sp, {r7, r8}
   1f3f0:	mov	r3, r6
   1f3f4:	mov	r1, r5
   1f3f8:	mov	r0, r4
   1f3fc:	bl	1ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1fc>
   1f400:	add	sp, sp, #16
   1f404:	pop	{r4, r5, r6, r7, r8, pc}
   1f408:	mov	r3, r8
   1f40c:	mov	r2, r7
   1f410:	mov	r1, r5
   1f414:	mov	r0, r4
   1f418:	bl	1ef20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2c8>
   1f41c:	add	sp, sp, #16
   1f420:	pop	{r4, r5, r6, r7, r8, pc}
   1f424:	andeq	ip, r1, r8, lsr #18
   1f428:	ldr	r3, [pc, #160]	; 1f4d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb878>
   1f42c:	push	{r4, r5, r6, lr}
   1f430:	mov	r4, r0
   1f434:	ldrb	r3, [r3, #1]
   1f438:	tst	r3, #16
   1f43c:	bne	1f468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb810>
   1f440:	ldr	r0, [r0, #148]	; 0x94
   1f444:	cmp	r0, #0
   1f448:	beq	1f468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb810>
   1f44c:	ldr	r3, [r0, #4]
   1f450:	mov	r5, r1
   1f454:	mov	r1, r4
   1f458:	ldr	r3, [r3, #400]	; 0x190
   1f45c:	blx	r3
   1f460:	cmp	r0, #0
   1f464:	bne	1f4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb858>
   1f468:	ldr	r3, [pc, #100]	; 1f4d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb87c>
   1f46c:	ldr	r5, [r4]
   1f470:	ldr	r4, [r3, #84]	; 0x54
   1f474:	cmp	r4, #0
   1f478:	bne	1f48c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb834>
   1f47c:	b	1f4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb850>
   1f480:	ldr	r4, [r4]
   1f484:	cmp	r4, #0
   1f488:	beq	1f4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb850>
   1f48c:	mov	r1, r5
   1f490:	ldr	r0, [r4, #4]
   1f494:	bl	1ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb058>
   1f498:	cmp	r0, #0
   1f49c:	bne	1f480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb828>
   1f4a0:	mov	r0, #1
   1f4a4:	pop	{r4, r5, r6, pc}
   1f4a8:	mov	r0, #0
   1f4ac:	pop	{r4, r5, r6, pc}
   1f4b0:	cmp	r5, #0
   1f4b4:	beq	1f4a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb848>
   1f4b8:	ldr	r0, [r5, #24]
   1f4bc:	ldr	r1, [pc, #20]	; 1f4d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb880>
   1f4c0:	bl	13268 <strcmp@plt>
   1f4c4:	adds	r0, r0, #0
   1f4c8:	movne	r0, #1
   1f4cc:	pop	{r4, r5, r6, pc}
   1f4d0:	andeq	r8, ip, ip, lsl #1
   1f4d4:	andeq	r7, ip, r8, lsr #23
   1f4d8:	muleq	r4, ip, r4
   1f4dc:	push	{r4, lr}
   1f4e0:	mov	r0, r2
   1f4e4:	ldr	r1, [sp, #12]
   1f4e8:	mov	r4, r2
   1f4ec:	bl	1f428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7d0>
   1f4f0:	cmp	r0, #0
   1f4f4:	popne	{r4, pc}
   1f4f8:	ldr	r3, [r4, #60]	; 0x3c
   1f4fc:	cmp	r3, #0
   1f500:	popne	{r4, pc}
   1f504:	ldr	r3, [r4, #20]
   1f508:	tst	r3, #8
   1f50c:	ldreq	r3, [sp, #12]
   1f510:	ldreq	r2, [sp, #12]
   1f514:	ldrbeq	r3, [r3, #84]	; 0x54
   1f518:	biceq	r3, r3, #4
   1f51c:	strbeq	r3, [r2, #84]	; 0x54
   1f520:	pop	{r4, pc}
   1f524:	push	{r4, lr}
   1f528:	mov	r2, #12
   1f52c:	sub	sp, sp, #8
   1f530:	ldr	r1, [pc, #184]	; 1f5f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb998>
   1f534:	mov	r4, r0
   1f538:	bl	13bb0 <strncmp@plt>
   1f53c:	cmp	r0, #0
   1f540:	beq	1f5c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb970>
   1f544:	mov	r2, #12
   1f548:	ldr	r1, [pc, #164]	; 1f5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb99c>
   1f54c:	mov	r0, r4
   1f550:	bl	13bb0 <strncmp@plt>
   1f554:	cmp	r0, #0
   1f558:	beq	1f5c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb970>
   1f55c:	mov	r2, #7
   1f560:	ldr	r1, [pc, #144]	; 1f5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9a0>
   1f564:	mov	r0, r4
   1f568:	bl	13bb0 <strncmp@plt>
   1f56c:	cmp	r0, #0
   1f570:	beq	1f598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb940>
   1f574:	mov	r2, #7
   1f578:	ldr	r1, [pc, #124]	; 1f5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9a4>
   1f57c:	mov	r0, r4
   1f580:	bl	13bb0 <strncmp@plt>
   1f584:	cmp	r0, #0
   1f588:	beq	1f598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb940>
   1f58c:	mov	r0, #0
   1f590:	add	sp, sp, #8
   1f594:	pop	{r4, pc}
   1f598:	add	r0, r4, #7
   1f59c:	mov	r2, #10
   1f5a0:	add	r1, sp, #4
   1f5a4:	bl	137cc <strtoul@plt>
   1f5a8:	ldr	r3, [sp, #4]
   1f5ac:	ldrb	r3, [r3]
   1f5b0:	cmp	r3, #0
   1f5b4:	bne	1f58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb934>
   1f5b8:	rsb	r0, r0, #65280	; 0xff00
   1f5bc:	add	r0, r0, #255	; 0xff
   1f5c0:	add	sp, sp, #8
   1f5c4:	pop	{r4, pc}
   1f5c8:	add	r0, r4, #12
   1f5cc:	mov	r2, #10
   1f5d0:	add	r1, sp, #4
   1f5d4:	bl	137cc <strtoul@plt>
   1f5d8:	ldr	r3, [sp, #4]
   1f5dc:	ldrb	r3, [r3]
   1f5e0:	cmp	r3, #0
   1f5e4:	movne	r0, #0
   1f5e8:	add	sp, sp, #8
   1f5ec:	pop	{r4, pc}
   1f5f0:	andeq	pc, r4, r8, lsr #9
   1f5f4:			; <UNDEFINED> instruction: 0x0004f4b8
   1f5f8:	andeq	pc, r4, r8, asr #9
   1f5fc:	ldrdeq	pc, [r4], -r0
   1f600:	push	{r4, r5, r6, lr}
   1f604:	sub	sp, sp, #8
   1f608:	sub	r0, r0, #1
   1f60c:	mov	r5, r1
   1f610:	mov	r6, r3
   1f614:	ldr	r4, [sp, #24]
   1f618:	cmp	r0, #5
   1f61c:	ldrls	pc, [pc, r0, lsl #2]
   1f620:	b	1f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba64>
   1f624:	andeq	pc, r1, ip, asr #12
   1f628:	andeq	pc, r1, ip, ror r6	; <UNPREDICTABLE>
   1f62c:	andeq	pc, r1, r0, ror #12
   1f630:	andeq	pc, r1, ip, lsr r6	; <UNPREDICTABLE>
   1f634:			; <UNDEFINED> instruction: 0x0001f6bc
   1f638:	muleq	r1, r0, r6
   1f63c:	ldr	r0, [r4]
   1f640:	ldr	r3, [r2]
   1f644:	subs	r0, r0, r3
   1f648:	bne	1f688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba30>
   1f64c:	ldr	r1, [r6]
   1f650:	ldr	r0, [r5]
   1f654:	add	sp, sp, #8
   1f658:	pop	{r4, r5, r6, lr}
   1f65c:	b	13268 <strcmp@plt>
   1f660:	ldr	r1, [r3]
   1f664:	ldr	r0, [r5]
   1f668:	str	r2, [sp, #4]
   1f66c:	bl	13268 <strcmp@plt>
   1f670:	ldr	r2, [sp, #4]
   1f674:	cmp	r0, #0
   1f678:	bne	1f688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba30>
   1f67c:	ldr	r0, [r4]
   1f680:	ldr	r3, [r2]
   1f684:	sub	r0, r0, r3
   1f688:	add	sp, sp, #8
   1f68c:	pop	{r4, r5, r6, pc}
   1f690:	ldr	r0, [r1]
   1f694:	bl	1f524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8cc>
   1f698:	mov	r4, r0
   1f69c:	ldr	r0, [r6]
   1f6a0:	bl	1f524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8cc>
   1f6a4:	cmp	r0, #0
   1f6a8:	cmpne	r4, #0
   1f6ac:	beq	1f64c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9f4>
   1f6b0:	subs	r0, r4, r0
   1f6b4:	bne	1f688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba30>
   1f6b8:	b	1f64c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9f4>
   1f6bc:	ldr	r2, [pc, #8]	; 1f6cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba74>
   1f6c0:	mov	r1, #436	; 0x1b4
   1f6c4:	ldr	r0, [pc, #4]	; 1f6d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba78>
   1f6c8:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   1f6cc:	andeq	pc, r4, r0, lsl r0	; <UNPREDICTABLE>
   1f6d0:	andeq	pc, r4, r8, rrx
   1f6d4:	push	{r4, r5, r6, r7, r8, lr}
   1f6d8:	sub	sp, sp, #8
   1f6dc:	mov	r5, r0
   1f6e0:	mov	r8, r1
   1f6e4:	mov	r0, r2
   1f6e8:	ldr	r1, [sp, #36]	; 0x24
   1f6ec:	mov	r7, r2
   1f6f0:	bl	1f428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7d0>
   1f6f4:	subs	r4, r0, #0
   1f6f8:	beq	1f704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaac>
   1f6fc:	add	sp, sp, #8
   1f700:	pop	{r4, r5, r6, r7, r8, pc}
   1f704:	mov	r0, #12
   1f708:	bl	13574 <xmalloc@plt>
   1f70c:	ldr	r3, [r5, #12]
   1f710:	cmp	r3, #0
   1f714:	str	r4, [r0, #4]
   1f718:	str	r4, [r0, #8]
   1f71c:	mov	r6, r0
   1f720:	str	r7, [r0]
   1f724:	add	r4, r5, #56	; 0x38
   1f728:	bne	1f740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae8>
   1f72c:	cmp	r8, #0
   1f730:	beq	1f78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb34>
   1f734:	ldr	r3, [r8, #12]
   1f738:	cmp	r3, #0
   1f73c:	beq	1f78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb34>
   1f740:	add	r5, r7, #64	; 0x40
   1f744:	b	1f76c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb14>
   1f748:	ldr	r3, [r3]
   1f74c:	ldr	r0, [r8, #12]
   1f750:	add	ip, r3, #64	; 0x40
   1f754:	str	ip, [sp]
   1f758:	bl	1f600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9a8>
   1f75c:	ldr	r4, [r4]
   1f760:	cmp	r0, #0
   1f764:	addlt	r4, r4, #4
   1f768:	addge	r4, r4, #8
   1f76c:	ldr	r3, [r4]
   1f770:	mov	r2, r5
   1f774:	cmp	r3, #0
   1f778:	mov	r1, r7
   1f77c:	bne	1f748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaf0>
   1f780:	str	r6, [r4]
   1f784:	add	sp, sp, #8
   1f788:	pop	{r4, r5, r6, r7, r8, pc}
   1f78c:	ldr	r2, [r5, #56]	; 0x38
   1f790:	cmp	r2, #0
   1f794:	bne	1f7a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb48>
   1f798:	b	1f780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb28>
   1f79c:	mov	r2, r3
   1f7a0:	ldr	r3, [r2, #8]
   1f7a4:	cmp	r3, #0
   1f7a8:	bne	1f79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb44>
   1f7ac:	add	r4, r2, #8
   1f7b0:	b	1f780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb28>
   1f7b4:	bics	r3, r0, #-1073741824	; 0xc0000000
   1f7b8:	beq	1f7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb9c>
   1f7bc:	bic	r3, r0, #-16777216	; 0xff000000
   1f7c0:	bic	r3, r3, #15728640	; 0xf00000
   1f7c4:	cmp	r3, #0
   1f7c8:	beq	1f7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb90>
   1f7cc:	lsl	r3, r0, #22
   1f7d0:	lsr	r3, r3, #22
   1f7d4:	cmp	r3, #0
   1f7d8:	bne	1f800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbba8>
   1f7dc:	lsr	r1, r0, #10
   1f7e0:	ldr	r0, [pc, #36]	; 1f80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbb4>
   1f7e4:	b	132bc <printf@plt>
   1f7e8:	lsr	r1, r0, #20
   1f7ec:	ldr	r0, [pc, #28]	; 1f810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbb8>
   1f7f0:	b	132bc <printf@plt>
   1f7f4:	lsr	r1, r0, #30
   1f7f8:	ldr	r0, [pc, #20]	; 1f814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbbc>
   1f7fc:	b	132bc <printf@plt>
   1f800:	mov	r1, r0
   1f804:	ldr	r0, [pc, #12]	; 1f818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc0>
   1f808:	b	132bc <printf@plt>
   1f80c:	strdeq	pc, [r4], -r0
   1f810:	andeq	pc, r4, r4, ror #9
   1f814:	ldrdeq	pc, [r4], -r8
   1f818:	strdeq	pc, [r4], -ip
   1f81c:	push	{r4, lr}
   1f820:	ldr	r2, [pc, #8]	; 1f830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbd8>
   1f824:	ldr	r1, [pc, #8]	; 1f834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbdc>
   1f828:	ldr	r0, [pc, #8]	; 1f838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe0>
   1f82c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   1f830:	andeq	pc, r4, r0, lsr #32
   1f834:	strdeq	r0, [r0], -r9
   1f838:	andeq	pc, r4, r8, rrx
   1f83c:	push	{r4, lr}
   1f840:	ldr	r2, [pc, #8]	; 1f850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbf8>
   1f844:	ldr	r1, [pc, #8]	; 1f854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbfc>
   1f848:	ldr	r0, [pc, #8]	; 1f858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc00>
   1f84c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   1f850:	andeq	pc, r4, r0, lsr r0	; <UNPREDICTABLE>
   1f854:	andeq	r0, r0, r2, lsl #8
   1f858:	andeq	pc, r4, r8, rrx
   1f85c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f860:	mov	r4, r0
   1f864:	ldr	r0, [r0, #32]
   1f868:	mov	r7, r2
   1f86c:	mov	r8, r3
   1f870:	mov	r5, r1
   1f874:	bl	1ed98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb140>
   1f878:	subs	r6, r0, #0
   1f87c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f880:	ldr	r0, [r5, #16]
   1f884:	cmp	r0, #0
   1f888:	beq	1f89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc44>
   1f88c:	mov	r1, #2
   1f890:	bl	13ae4 <bfd_check_format@plt>
   1f894:	cmp	r0, #0
   1f898:	bne	1f8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc70>
   1f89c:	ldrb	r3, [r5, #36]	; 0x24
   1f8a0:	tst	r3, #16
   1f8a4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f8a8:	ldr	lr, [r4, #36]	; 0x24
   1f8ac:	mov	r3, r8
   1f8b0:	mov	r2, r7
   1f8b4:	mov	r1, r5
   1f8b8:	mov	r0, r4
   1f8bc:	mov	ip, lr
   1f8c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f8c4:	bx	ip
   1f8c8:	mov	r1, r6
   1f8cc:	ldr	r0, [r5, #16]
   1f8d0:	bl	13af0 <bfd_openr_next_archived_file@plt>
   1f8d4:	subs	r6, r0, #0
   1f8d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f8dc:	ldr	ip, [r6, #164]	; 0xa4
   1f8e0:	mov	r3, r8
   1f8e4:	subs	r1, ip, #0
   1f8e8:	mov	r2, r7
   1f8ec:	mov	r0, r4
   1f8f0:	beq	1f8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc70>
   1f8f4:	ldrb	ip, [ip, #36]	; 0x24
   1f8f8:	tst	ip, #16
   1f8fc:	bne	1f8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc70>
   1f900:	ldr	r9, [r4, #36]	; 0x24
   1f904:	blx	r9
   1f908:	b	1f8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc70>
   1f90c:	push	{r4, r5, r6, lr}
   1f910:	mov	r5, r0
   1f914:	ldr	r4, [pc, #112]	; 1f98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd34>
   1f918:	ldr	r1, [r4, #104]	; 0x68
   1f91c:	ldr	r3, [r4, #100]	; 0x64
   1f920:	sub	r2, r1, r3
   1f924:	cmp	r0, r2
   1f928:	bhi	1f974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd1c>
   1f92c:	ldr	r0, [r4, #96]	; 0x60
   1f930:	add	r3, r3, r5
   1f934:	cmp	r3, r0
   1f938:	ldr	ip, [r4, #112]	; 0x70
   1f93c:	ldrbeq	r2, [r4, #128]	; 0x80
   1f940:	add	r3, r3, ip
   1f944:	bic	r3, r3, ip
   1f948:	orreq	r2, r2, #2
   1f94c:	strbeq	r2, [r4, #128]	; 0x80
   1f950:	ldr	r2, [r4, #92]	; 0x5c
   1f954:	str	r3, [r4, #100]	; 0x64
   1f958:	sub	ip, r3, r2
   1f95c:	sub	r2, r1, r2
   1f960:	cmp	ip, r2
   1f964:	movhi	r3, r1
   1f968:	strhi	r1, [r4, #100]	; 0x64
   1f96c:	str	r3, [r4, #96]	; 0x60
   1f970:	pop	{r4, r5, r6, pc}
   1f974:	mov	r1, r0
   1f978:	add	r0, r4, #88	; 0x58
   1f97c:	bl	13430 <_obstack_newchunk@plt>
   1f980:	ldr	r3, [r4, #100]	; 0x64
   1f984:	ldr	r1, [r4, #104]	; 0x68
   1f988:	b	1f92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcd4>
   1f98c:	andeq	r7, ip, r8, lsr #23
   1f990:	ldrb	r3, [r0, #12]
   1f994:	sub	r3, r3, #3
   1f998:	cmp	r3, #1
   1f99c:	bls	1f9a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd50>
   1f9a0:	mov	r0, #1
   1f9a4:	bx	lr
   1f9a8:	ldr	r2, [r0, #20]
   1f9ac:	ldr	r1, [pc, #232]	; 1fa9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe44>
   1f9b0:	ldr	r3, [r2, #148]	; 0x94
   1f9b4:	ldr	r1, [r1, #48]	; 0x30
   1f9b8:	cmp	r1, r3
   1f9bc:	cmpne	r3, #0
   1f9c0:	beq	1f9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd48>
   1f9c4:	push	{r4, r5, r6, lr}
   1f9c8:	mov	r4, r0
   1f9cc:	ldr	r6, [r2, #104]	; 0x68
   1f9d0:	cmp	r6, #0
   1f9d4:	beq	1fa78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe20>
   1f9d8:	ldr	r3, [r6, #4]
   1f9dc:	cmp	r3, #0
   1f9e0:	streq	r6, [r6, #4]
   1f9e4:	ldr	r5, [pc, #180]	; 1faa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe48>
   1f9e8:	ldr	r0, [r5, #48]	; 0x30
   1f9ec:	ldr	r3, [r5, #44]	; 0x2c
   1f9f0:	sub	r2, r0, r3
   1f9f4:	cmp	r2, #7
   1f9f8:	bls	1fa60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe08>
   1f9fc:	ldr	r2, [r5, #40]	; 0x28
   1fa00:	add	r3, r3, #8
   1fa04:	cmp	r3, r2
   1fa08:	ldr	ip, [r5, #56]	; 0x38
   1fa0c:	ldrbeq	r1, [r5, #72]	; 0x48
   1fa10:	add	r3, r3, ip
   1fa14:	bic	r3, r3, ip
   1fa18:	orreq	r1, r1, #2
   1fa1c:	strbeq	r1, [r5, #72]	; 0x48
   1fa20:	ldr	r1, [r5, #36]	; 0x24
   1fa24:	str	r3, [r5, #44]	; 0x2c
   1fa28:	sub	ip, r3, r1
   1fa2c:	sub	r1, r0, r1
   1fa30:	cmp	ip, r1
   1fa34:	strhi	r0, [r5, #44]	; 0x2c
   1fa38:	movhi	r3, r0
   1fa3c:	ldrd	r0, [r6, #4]
   1fa40:	str	r3, [r5, #40]	; 0x28
   1fa44:	str	r4, [r2]
   1fa48:	add	r3, r1, #1
   1fa4c:	add	r1, r2, #4
   1fa50:	str	r2, [r0]
   1fa54:	stmib	r6, {r1, r3}
   1fa58:	mov	r0, #1
   1fa5c:	pop	{r4, r5, r6, pc}
   1fa60:	add	r0, r5, #32
   1fa64:	mov	r1, #8
   1fa68:	bl	13430 <_obstack_newchunk@plt>
   1fa6c:	ldr	r3, [r5, #44]	; 0x2c
   1fa70:	ldr	r0, [r5, #48]	; 0x30
   1fa74:	b	1f9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbda4>
   1fa78:	mov	r0, #12
   1fa7c:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   1fa80:	ldr	r2, [r4, #20]
   1fa84:	mov	r3, #0
   1fa88:	mov	r6, r0
   1fa8c:	str	r0, [r2, #104]	; 0x68
   1fa90:	str	r0, [r6, #4]
   1fa94:	str	r3, [r0, #8]
   1fa98:	b	1f9e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd8c>
   1fa9c:	andeq	r8, ip, ip, lsl #1
   1faa0:	andeq	r7, ip, r8, lsr #23
   1faa4:	ldr	ip, [pc, #204]	; 1fb78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf20>
   1faa8:	push	{r4, r5, r6, r7, r8, lr}
   1faac:	cmp	r0, #0
   1fab0:	cmpne	r0, ip
   1fab4:	mov	r5, r0
   1fab8:	mov	r7, r1
   1fabc:	mov	r8, r2
   1fac0:	mov	r6, r3
   1fac4:	ldr	r4, [sp, #24]
   1fac8:	bne	1fb4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbef4>
   1facc:	ldr	r0, [r5]
   1fad0:	cmp	r0, #0
   1fad4:	beq	1fae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe8c>
   1fad8:	ldr	r3, [r0, #4]
   1fadc:	cmp	r3, #12
   1fae0:	beq	1fb68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf10>
   1fae4:	mov	r0, #24
   1fae8:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   1faec:	ldr	r3, [pc, #136]	; 1fb7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf24>
   1faf0:	ldr	r2, [r5]
   1faf4:	cmp	r7, #0
   1faf8:	moveq	r7, r3
   1fafc:	mov	r3, #12
   1fb00:	str	r2, [r0]
   1fb04:	str	r0, [r5]
   1fb08:	str	r6, [r0, #16]
   1fb0c:	str	r3, [r0, #4]
   1fb10:	str	r7, [r0, #20]
   1fb14:	ldr	r1, [r6, #20]
   1fb18:	ldr	r3, [r6, #28]
   1fb1c:	tst	r1, #2048	; 0x800
   1fb20:	sub	r2, r4, r3
   1fb24:	str	r8, [r0, #12]
   1fb28:	str	r2, [r0, #8]
   1fb2c:	popne	{r4, r5, r6, r7, r8, pc}
   1fb30:	ldr	r2, [pc, #72]	; 1fb80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   1fb34:	ldr	r2, [r2, #8]
   1fb38:	add	r4, r4, r8, lsr r2
   1fb3c:	sub	r4, r4, r3
   1fb40:	lsl	r4, r4, r2
   1fb44:	str	r4, [r6, #36]	; 0x24
   1fb48:	pop	{r4, r5, r6, r7, r8, pc}
   1fb4c:	ldr	r3, [r0, #4]
   1fb50:	cmp	r3, #12
   1fb54:	bne	1facc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe74>
   1fb58:	ldr	r3, [r0, #16]
   1fb5c:	cmp	r3, r6
   1fb60:	bne	1facc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe74>
   1fb64:	b	1fb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbebc>
   1fb68:	ldr	r3, [r0, #16]
   1fb6c:	cmp	r3, r6
   1fb70:	bne	1fae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe8c>
   1fb74:	b	1fb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbebc>
   1fb78:	andeq	r7, ip, r4, lsr ip
   1fb7c:	andeq	r7, ip, ip, lsr #24
   1fb80:	andeq	r7, ip, r8, lsr #23
   1fb84:	push	{r4, lr}
   1fb88:	mov	r4, r0
   1fb8c:	mov	r0, #8
   1fb90:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   1fb94:	ldr	r3, [pc, #12]	; 1fba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf50>
   1fb98:	ldr	r2, [r3, #68]	; 0x44
   1fb9c:	stm	r0, {r2, r4}
   1fba0:	str	r0, [r3, #68]	; 0x44
   1fba4:	pop	{r4, pc}
   1fba8:	andeq	r8, ip, ip, lsl #1
   1fbac:	ldr	ip, [pc, #440]	; 1fd6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc114>
   1fbb0:	push	{r4, r5, r6, r7, r8, lr}
   1fbb4:	mov	lr, #1
   1fbb8:	subs	r8, r3, #0
   1fbbc:	mov	r5, r0
   1fbc0:	mov	r6, r1
   1fbc4:	mov	r7, r2
   1fbc8:	str	lr, [ip, #148]	; 0x94
   1fbcc:	beq	1fc5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc004>
   1fbd0:	ldr	r3, [pc, #408]	; 1fd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc118>
   1fbd4:	mov	r0, #44	; 0x2c
   1fbd8:	ldr	r8, [r3]
   1fbdc:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   1fbe0:	mov	r3, #2
   1fbe4:	mov	r2, #0
   1fbe8:	strd	r2, [r0]
   1fbec:	ldr	r3, [r8, #4]
   1fbf0:	mov	r4, r0
   1fbf4:	str	r0, [r3]
   1fbf8:	str	r0, [r8, #4]
   1fbfc:	ldr	r2, [pc, #368]	; 1fd74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc11c>
   1fc00:	mov	r0, #0
   1fc04:	str	r0, [r4, #36]	; 0x24
   1fc08:	ldrh	r1, [r2]
   1fc0c:	ldrh	r3, [r4, #36]	; 0x24
   1fc10:	str	r0, [r4, #16]
   1fc14:	str	r0, [r4, #20]
   1fc18:	str	r0, [r4, #24]
   1fc1c:	str	r0, [r4, #28]
   1fc20:	str	r0, [r4, #40]	; 0x28
   1fc24:	bic	r3, r3, #488	; 0x1e8
   1fc28:	and	r0, r1, #488	; 0x1e8
   1fc2c:	orr	r3, r3, r0
   1fc30:	str	r7, [r4, #32]
   1fc34:	strh	r3, [r4, #36]	; 0x24
   1fc38:	cmp	r6, #5
   1fc3c:	ldrls	pc, [pc, r6, lsl #2]
   1fc40:	b	1fd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc104>
   1fc44:	andeq	pc, r1, r8, lsr #25
   1fc48:	andeq	pc, r1, r0, ror #25
   1fc4c:	strdeq	pc, [r1], -r8
   1fc50:	andeq	pc, r1, r0, lsl sp	; <UNPREDICTABLE>
   1fc54:	andeq	pc, r1, ip, lsl sp	; <UNPREDICTABLE>
   1fc58:	andeq	pc, r1, r8, ror ip	; <UNPREDICTABLE>
   1fc5c:	mov	r0, #44	; 0x2c
   1fc60:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   1fc64:	mov	r3, #2
   1fc68:	mov	r4, r0
   1fc6c:	str	r8, [r0]
   1fc70:	str	r3, [r0, #4]
   1fc74:	b	1fbfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfa4>
   1fc78:	ldrb	r3, [r4, #37]	; 0x25
   1fc7c:	str	r5, [r4, #8]
   1fc80:	str	r5, [r4, #12]
   1fc84:	orr	r3, r3, #4
   1fc88:	strb	r3, [r4, #37]	; 0x25
   1fc8c:	ldr	r3, [pc, #228]	; 1fd78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc120>
   1fc90:	add	r2, r4, #28
   1fc94:	mov	r0, r4
   1fc98:	ldr	r1, [r3, #4]
   1fc9c:	str	r4, [r1]
   1fca0:	str	r2, [r3, #4]
   1fca4:	pop	{r4, r5, r6, r7, r8, pc}
   1fca8:	ldrb	r3, [r5]
   1fcac:	cmp	r3, #58	; 0x3a
   1fcb0:	beq	1fd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0e0>
   1fcb4:	str	r5, [r4, #8]
   1fcb8:	mov	r1, r5
   1fcbc:	mov	r2, #0
   1fcc0:	ldr	r0, [pc, #180]	; 1fd7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc124>
   1fcc4:	bl	1352c <concat@plt>
   1fcc8:	ldrh	r3, [r4, #36]	; 0x24
   1fccc:	orr	r3, r3, #1024	; 0x400
   1fcd0:	orr	r3, r3, #5
   1fcd4:	strh	r3, [r4, #36]	; 0x24
   1fcd8:	str	r0, [r4, #12]
   1fcdc:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fce0:	ldrh	r3, [r4, #36]	; 0x24
   1fce4:	str	r5, [r4, #8]
   1fce8:	str	r5, [r4, #12]
   1fcec:	orr	r3, r3, #1040	; 0x410
   1fcf0:	strh	r3, [r4, #36]	; 0x24
   1fcf4:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fcf8:	ldrb	r3, [r4, #36]	; 0x24
   1fcfc:	str	r5, [r4, #8]
   1fd00:	str	r5, [r4, #12]
   1fd04:	orr	r3, r3, #4
   1fd08:	strb	r3, [r4, #36]	; 0x24
   1fd0c:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fd10:	str	r5, [r4, #8]
   1fd14:	str	r5, [r4, #12]
   1fd18:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fd1c:	ldrh	r3, [r4, #36]	; 0x24
   1fd20:	str	r5, [r4, #8]
   1fd24:	str	r5, [r4, #12]
   1fd28:	orr	r3, r3, #1024	; 0x400
   1fd2c:	orr	r3, r3, #4
   1fd30:	strh	r3, [r4, #36]	; 0x24
   1fd34:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fd38:	ldrb	r3, [r5, #1]
   1fd3c:	cmp	r3, #0
   1fd40:	beq	1fcb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc05c>
   1fd44:	ldrb	r3, [r4, #36]	; 0x24
   1fd48:	add	r2, r5, #1
   1fd4c:	str	r2, [r4, #8]
   1fd50:	orr	r3, r3, #2
   1fd54:	strb	r3, [r4, #36]	; 0x24
   1fd58:	b	1fcb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc060>
   1fd5c:	ldr	r1, [pc, #28]	; 1fd80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc128>
   1fd60:	ldr	r0, [pc, #28]	; 1fd84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc12c>
   1fd64:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1fd68:	b	1fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc034>
   1fd6c:	andeq	r7, ip, r8, lsr #23
   1fd70:	andeq	r7, ip, ip, lsr #7
   1fd74:	andeq	r8, ip, r8, asr r0
   1fd78:	andeq	r8, ip, ip, asr #32
   1fd7c:	andeq	pc, r4, r8, lsl #10
   1fd80:	andeq	r0, r0, r6, ror #8
   1fd84:	andeq	pc, r4, r8, rrx
   1fd88:	push	{r4, r5, r6, r7, r8, lr}
   1fd8c:	subs	r4, r1, #0
   1fd90:	popeq	{r4, r5, r6, r7, r8, pc}
   1fd94:	ldr	r7, [pc, #196]	; 1fe60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc208>
   1fd98:	ldr	r6, [pc, #196]	; 1fe64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc20c>
   1fd9c:	mov	r5, r0
   1fda0:	mov	r0, r4
   1fda4:	blx	r5
   1fda8:	ldr	r3, [r4, #4]
   1fdac:	cmp	r3, #15
   1fdb0:	ldrls	pc, [pc, r3, lsl #2]
   1fdb4:	b	1fe50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1f8>
   1fdb8:	andeq	pc, r1, r4, lsl lr	; <UNPREDICTABLE>
   1fdbc:	andeq	pc, r1, r4, lsl #28
   1fdc0:	andeq	pc, r1, r4, lsl #28
   1fdc4:	andeq	pc, r1, r4, lsl #28
   1fdc8:	andeq	pc, r1, r0, asr #28
   1fdcc:	andeq	pc, r1, r4, lsl #28
   1fdd0:	andeq	pc, r1, r4, lsl #28
   1fdd4:	andeq	pc, r1, r4, lsl #28
   1fdd8:	andeq	pc, r1, r4, lsl #28
   1fddc:	andeq	pc, r1, r4, lsl #28
   1fde0:	andeq	pc, r1, r4, lsl #28
   1fde4:	andeq	pc, r1, r4, lsl #28
   1fde8:	andeq	pc, r1, r4, lsl #28
   1fdec:	andeq	pc, r1, r0, lsr lr	; <UNPREDICTABLE>
   1fdf0:	andeq	pc, r1, r4, lsl #28
   1fdf4:	strdeq	pc, [r1], -r8
   1fdf8:	ldr	r1, [r6]
   1fdfc:	mov	r0, r5
   1fe00:	bl	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   1fe04:	ldr	r4, [r4]
   1fe08:	cmp	r4, #0
   1fe0c:	bne	1fda0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc148>
   1fe10:	pop	{r4, r5, r6, r7, r8, pc}
   1fe14:	ldr	r3, [r4, #72]	; 0x48
   1fe18:	mov	r0, r5
   1fe1c:	cmn	r3, #1
   1fe20:	beq	1fe04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1ac>
   1fe24:	ldr	r1, [r4, #8]
   1fe28:	bl	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   1fe2c:	b	1fe04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1ac>
   1fe30:	ldr	r1, [r4, #8]
   1fe34:	mov	r0, r5
   1fe38:	bl	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   1fe3c:	b	1fe04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1ac>
   1fe40:	ldr	r1, [r4, #24]
   1fe44:	mov	r0, r5
   1fe48:	bl	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   1fe4c:	b	1fe04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1ac>
   1fe50:	mov	r1, #992	; 0x3e0
   1fe54:	mov	r0, r7
   1fe58:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   1fe5c:	b	1fe04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1ac>
   1fe60:	andeq	pc, r4, r8, rrx
   1fe64:	andeq	r8, ip, r4, ror r0
   1fe68:	ldr	r3, [pc, #4]	; 1fe74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc21c>
   1fe6c:	ldr	r1, [r3, #140]	; 0x8c
   1fe70:	b	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   1fe74:	andeq	r7, ip, r8, lsr #23
   1fe78:	mov	r3, #0
   1fe7c:	str	r0, [r0, #4]
   1fe80:	str	r3, [r0]
   1fe84:	bx	lr
   1fe88:	ldr	r3, [pc, #40]	; 1feb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc260>
   1fe8c:	ldr	r1, [pc, #40]	; 1febc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc264>
   1fe90:	ldr	r2, [r3, #4]
   1fe94:	cmp	r2, r1
   1fe98:	bcs	1feb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc258>
   1fe9c:	ldr	ip, [r3]
   1fea0:	add	r1, r2, #4
   1fea4:	str	ip, [r2]
   1fea8:	strd	r0, [r3]
   1feac:	bx	lr
   1feb0:	push	{r4, lr}
   1feb4:	bl	1f81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc4>
   1feb8:	andeq	r7, ip, ip, lsr #7
   1febc:	andeq	r7, ip, r8, ror #24
   1fec0:	ldr	r2, [pc, #36]	; 1feec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc294>
   1fec4:	ldr	r1, [pc, #36]	; 1fef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc298>
   1fec8:	ldr	r3, [r2, #4]
   1fecc:	cmp	r3, r1
   1fed0:	bls	1fee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc28c>
   1fed4:	ldr	r1, [r3, #-4]
   1fed8:	sub	r3, r3, #4
   1fedc:	stm	r2, {r1, r3}
   1fee0:	bx	lr
   1fee4:	push	{r4, lr}
   1fee8:	bl	1f83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe4>
   1feec:	andeq	r7, ip, ip, lsr #7
   1fef0:	andeq	r7, ip, r0, asr #24
   1fef4:	push	{r4, r5, r6, r7, r8, lr}
   1fef8:	subs	r4, r0, #0
   1fefc:	mov	r6, r1
   1ff00:	mov	r7, r2
   1ff04:	beq	1ff28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2d0>
   1ff08:	ldrb	r3, [r4]
   1ff0c:	cmp	r3, #61	; 0x3d
   1ff10:	beq	1ff94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc33c>
   1ff14:	mov	r2, #8
   1ff18:	ldr	r1, [pc, #132]	; 1ffa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc34c>
   1ff1c:	bl	13bb0 <strncmp@plt>
   1ff20:	cmp	r0, #0
   1ff24:	beq	1ff40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2e8>
   1ff28:	mov	r2, r7
   1ff2c:	mov	r1, r6
   1ff30:	mov	r0, r4
   1ff34:	mov	r3, #1
   1ff38:	pop	{r4, r5, r6, r7, r8, lr}
   1ff3c:	b	1fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf54>
   1ff40:	ldr	r3, [pc, #96]	; 1ffa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc350>
   1ff44:	mov	r1, #8
   1ff48:	ldr	r0, [r3]
   1ff4c:	ldr	r5, [pc, #88]	; 1ffac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc354>
   1ff50:	add	r1, r4, r1
   1ff54:	mov	r2, #0
   1ff58:	bl	1352c <concat@plt>
   1ff5c:	ldrb	r3, [r5]
   1ff60:	mov	r2, r7
   1ff64:	mov	r1, r6
   1ff68:	bic	ip, r3, #8
   1ff6c:	lsr	r4, r3, #3
   1ff70:	mov	r3, #1
   1ff74:	and	r4, r4, r3
   1ff78:	strb	ip, [r5]
   1ff7c:	bl	1fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf54>
   1ff80:	ldrb	r3, [r5]
   1ff84:	bic	r3, r3, #8
   1ff88:	orr	r4, r3, r4, lsl #3
   1ff8c:	strb	r4, [r5]
   1ff90:	pop	{r4, r5, r6, r7, r8, pc}
   1ff94:	ldr	r3, [pc, #12]	; 1ffa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc350>
   1ff98:	mov	r1, #1
   1ff9c:	ldr	r0, [r3]
   1ffa0:	b	1ff4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2f4>
   1ffa4:	andeq	pc, r4, ip, lsl #10
   1ffa8:	andeq	r8, ip, r4, lsl r1
   1ffac:	andeq	r8, ip, r8, asr r0
   1ffb0:	ldr	r0, [pc]	; 1ffb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc360>
   1ffb4:	b	13508 <bfd_hash_table_free@plt>
   1ffb8:	andeq	r7, ip, r8, ror #24
   1ffbc:	push	{r4, r5, r6, r7, r8, lr}
   1ffc0:	subs	r5, r0, #0
   1ffc4:	beq	200d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc480>
   1ffc8:	ldr	r3, [pc, #272]	; 200e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc488>
   1ffcc:	mov	r8, r1
   1ffd0:	ldr	r7, [r3, #220]	; 0xdc
   1ffd4:	cmp	r7, #0
   1ffd8:	beq	2000c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3b4>
   1ffdc:	mov	r4, r7
   1ffe0:	mov	r1, r5
   1ffe4:	ldr	r0, [r4]
   1ffe8:	bl	13268 <strcmp@plt>
   1ffec:	subs	r6, r0, #0
   1fff0:	beq	200a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc450>
   1fff4:	ldr	r4, [r4, #4]
   1fff8:	cmp	r4, #0
   1fffc:	bne	1ffe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc388>
   20000:	ldr	r7, [r7, #8]
   20004:	cmp	r7, #0
   20008:	bne	1ffdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc384>
   2000c:	cmp	r8, #0
   20010:	bne	20044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3ec>
   20014:	ldr	r1, [pc, #200]	; 200e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc48c>
   20018:	mov	r0, r5
   2001c:	bl	13268 <strcmp@plt>
   20020:	cmp	r0, #0
   20024:	beq	20044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3ec>
   20028:	mov	r2, #5
   2002c:	ldr	r1, [pc, #180]	; 200e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc490>
   20030:	mov	r0, r8
   20034:	bl	13460 <dcgettext@plt>
   20038:	mov	r2, r5
   2003c:	mov	r1, r8
   20040:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20044:	mov	r0, #48	; 0x30
   20048:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2004c:	mov	r7, r0
   20050:	mov	r0, r5
   20054:	bl	135a4 <xstrdup@plt>
   20058:	ldr	r2, [pc, #140]	; 200ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc494>
   2005c:	mvn	ip, #0
   20060:	mov	r3, #0
   20064:	ldr	r1, [r2, #8]
   20068:	str	ip, [r7, #20]
   2006c:	add	ip, r7, #8
   20070:	str	r3, [r7, #4]
   20074:	str	r3, [r7, #8]
   20078:	str	r3, [r7, #12]
   2007c:	str	r3, [r7, #16]
   20080:	str	r3, [r7, #24]
   20084:	str	r3, [r7, #28]
   20088:	str	r3, [r7, #32]
   2008c:	str	r3, [r7, #36]	; 0x24
   20090:	str	r3, [r7, #40]	; 0x28
   20094:	str	r3, [r7, #44]	; 0x2c
   20098:	str	ip, [r2, #8]
   2009c:	str	r0, [r7]
   200a0:	str	r7, [r1]
   200a4:	b	200b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc458>
   200a8:	cmp	r8, #0
   200ac:	bne	200b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc460>
   200b0:	mov	r0, r7
   200b4:	pop	{r4, r5, r6, r7, r8, pc}
   200b8:	mov	r2, #5
   200bc:	ldr	r1, [pc, #44]	; 200f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc498>
   200c0:	bl	13460 <dcgettext@plt>
   200c4:	mov	r2, r5
   200c8:	mov	r1, r6
   200cc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   200d0:	mov	r0, r7
   200d4:	pop	{r4, r5, r6, r7, r8, pc}
   200d8:	mov	r7, r5
   200dc:	b	200b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc458>
   200e0:	andeq	r7, ip, r8, lsr #23
   200e4:	muleq	r4, r0, r8
   200e8:	andeq	pc, r4, r0, asr r5	; <UNPREDICTABLE>
   200ec:	andeq	r7, ip, ip, lsr #7
   200f0:	andeq	pc, r4, r8, lsl r5	; <UNPREDICTABLE>
   200f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200f8:	sub	sp, sp, #52	; 0x34
   200fc:	ldr	r4, [r0]
   20100:	str	r3, [sp, #36]	; 0x24
   20104:	cmp	r4, #0
   20108:	beq	2018c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc534>
   2010c:	ldr	sl, [pc, #3420]	; 20e70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd218>
   20110:	ldr	r9, [pc, #3420]	; 20e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd21c>
   20114:	mov	r8, r0
   20118:	mov	fp, r1
   2011c:	mov	r7, r2
   20120:	ldr	r5, [r4, #4]
   20124:	cmp	r5, #15
   20128:	ldrls	pc, [pc, r5, lsl #2]
   2012c:	b	20170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc518>
   20130:	strdeq	r0, [r2], -ip
   20134:	andeq	r0, r2, r4, lsr r4
   20138:	andeq	r0, r2, ip, ror r1
   2013c:	andeq	r0, r2, ip, ror r1
   20140:	andeq	r0, r2, r4, lsr #7
   20144:	andeq	r0, r2, r8, lsr #5
   20148:	muleq	r2, r8, r2
   2014c:	andeq	r0, r2, r4, lsl #5
   20150:	strdeq	r0, [r2], -r4
   20154:	muleq	r2, r8, r1
   20158:	andeq	r0, r2, ip, ror r1
   2015c:	andeq	r0, r2, ip, ror r1
   20160:	ldrdeq	r0, [r2], -r8
   20164:	ldrdeq	r0, [r2], -r4
   20168:	andeq	r0, r2, ip, ror r1
   2016c:	andeq	r0, r2, r4, lsl #8
   20170:	ldr	r1, [pc, #3328]	; 20e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd220>
   20174:	ldr	r0, [pc, #3328]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20178:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2017c:	mov	r8, r4
   20180:	ldr	r4, [r4]
   20184:	cmp	r4, #0
   20188:	bne	20120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc4c8>
   2018c:	ldr	r0, [sp, #36]	; 0x24
   20190:	add	sp, sp, #52	; 0x34
   20194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20198:	ldr	r2, [fp, #28]
   2019c:	ldr	r3, [sp, #36]	; 0x24
   201a0:	ldr	r0, [r4, #12]
   201a4:	ldr	r2, [r2, #28]
   201a8:	mov	r8, r4
   201ac:	sub	r3, r3, r2
   201b0:	str	r3, [r4, #36]	; 0x24
   201b4:	ldr	r3, [fp, #28]
   201b8:	str	r3, [r4, #32]
   201bc:	bl	13478 <bfd_get_reloc_size@plt>
   201c0:	ldr	r3, [pc, #3256]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   201c4:	ldr	r2, [fp, #28]
   201c8:	ldr	r1, [r3, #8]
   201cc:	ldr	r3, [sp, #36]	; 0x24
   201d0:	ldr	ip, [r2, #20]
   201d4:	tst	ip, #2048	; 0x800
   201d8:	add	r0, r3, r0, asr r1
   201dc:	str	r0, [sp, #36]	; 0x24
   201e0:	ldreq	r3, [r2, #28]
   201e4:	subeq	r0, r0, r3
   201e8:	lsleq	r0, r0, r1
   201ec:	streq	r0, [r2, #36]	; 0x24
   201f0:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   201f4:	ldr	r1, [fp, #28]
   201f8:	ldr	r3, [sp, #36]	; 0x24
   201fc:	add	r2, sp, #36	; 0x24
   20200:	ldr	r0, [r1, #28]
   20204:	ldr	r1, [pc, #3192]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   20208:	sub	r3, r3, r0
   2020c:	str	r3, [r4, #24]
   20210:	ldr	r3, [fp, #28]
   20214:	ldr	r0, [r4, #12]
   20218:	str	r3, [r4, #20]
   2021c:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   20220:	ldr	r2, [r4, #8]
   20224:	sub	r2, r2, #280	; 0x118
   20228:	sub	r2, r2, #2
   2022c:	cmp	r2, #4
   20230:	bhi	20e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd208>
   20234:	ldr	r3, [pc, #3140]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20238:	ldr	r0, [pc, #3144]	; 20e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd230>
   2023c:	mov	r8, r4
   20240:	ldr	r1, [r3, #8]
   20244:	mov	r3, #1
   20248:	ldr	r2, [r0, r2, lsl #2]
   2024c:	lsl	r3, r3, r1
   20250:	ldr	r0, [fp, #28]
   20254:	cmp	r3, r2
   20258:	movcc	r3, r2
   2025c:	ldr	r2, [sp, #36]	; 0x24
   20260:	ldr	ip, [r0, #20]
   20264:	add	r3, r2, r3, lsr r1
   20268:	tst	ip, #2048	; 0x800
   2026c:	str	r3, [sp, #36]	; 0x24
   20270:	ldreq	r2, [r0, #28]
   20274:	subeq	r3, r3, r2
   20278:	lsleq	r1, r3, r1
   2027c:	streq	r1, [r0, #36]	; 0x24
   20280:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20284:	ldr	r3, [fp, #28]
   20288:	ldr	r7, [r4, #8]
   2028c:	str	r3, [r4, #16]
   20290:	mov	r8, r4
   20294:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20298:	ldr	r3, [fp, #28]
   2029c:	mov	r8, r4
   202a0:	str	r3, [r9, #64]	; 0x40
   202a4:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   202a8:	ldr	r3, [sp, #88]	; 0x58
   202ac:	cmp	r3, #0
   202b0:	beq	202f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc69c>
   202b4:	ldr	r2, [r4, #8]
   202b8:	add	r3, sp, #44	; 0x2c
   202bc:	mov	r1, r2
   202c0:	ldr	ip, [r2, #148]	; 0x94
   202c4:	mov	r2, r9
   202c8:	mov	r0, ip
   202cc:	ldr	ip, [ip, #4]
   202d0:	ldr	r5, [ip, #356]	; 0x164
   202d4:	blx	r5
   202d8:	cmp	r0, #0
   202dc:	beq	2093c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcce4>
   202e0:	ldr	r3, [sp, #44]	; 0x2c
   202e4:	cmp	r3, #0
   202e8:	movne	r3, #1
   202ec:	ldrne	r2, [sp, #88]	; 0x58
   202f0:	strne	r3, [r2]
   202f4:	ldr	r3, [r8]
   202f8:	ldr	r1, [sp, #36]	; 0x24
   202fc:	ldr	r6, [fp, #28]
   20300:	ldr	r5, [r3, #8]
   20304:	ldrh	r3, [r5, #24]
   20308:	and	r3, r3, #896	; 0x380
   2030c:	cmp	r3, #512	; 0x200
   20310:	beq	20828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbd0>
   20314:	ldr	r3, [r5, #20]
   20318:	tst	r3, #32768	; 0x8000
   2031c:	bne	2086c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc14>
   20320:	ldrb	r3, [fp, #84]	; 0x54
   20324:	tst	r3, #8
   20328:	bne	2086c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc14>
   2032c:	ldr	r3, [fp, #64]	; 0x40
   20330:	sub	r0, r1, #1
   20334:	cmn	r3, #1
   20338:	strne	r3, [r5, #64]	; 0x40
   2033c:	ldreq	r3, [r5, #64]	; 0x40
   20340:	ldr	r2, [r6, #64]	; 0x40
   20344:	cmp	r2, r3
   20348:	strcc	r3, [r6, #64]	; 0x40
   2034c:	ldrcc	r3, [r5, #64]	; 0x40
   20350:	mov	r2, #1
   20354:	lsl	r3, r2, r3
   20358:	add	r2, r0, r3
   2035c:	rsb	r3, r3, #0
   20360:	and	r3, r2, r3
   20364:	ldr	r2, [pc, #2836]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20368:	str	r3, [sp, #12]
   2036c:	subs	r3, r3, r1
   20370:	ldr	r2, [r2, #8]
   20374:	bne	20bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf6c>
   20378:	ldr	r0, [r5, #36]	; 0x24
   2037c:	ldr	r3, [r6, #28]
   20380:	ldr	lr, [r6, #20]
   20384:	sub	ip, r1, r3
   20388:	add	r1, r1, r0, lsr r2
   2038c:	tst	lr, #2048	; 0x800
   20390:	subeq	r3, r1, r3
   20394:	str	ip, [r5, #56]	; 0x38
   20398:	lsleq	r3, r3, r2
   2039c:	streq	r3, [r6, #36]	; 0x24
   203a0:	b	20838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbe0>
   203a4:	ldr	r3, [sp, #92]	; 0x5c
   203a8:	mov	r2, r7
   203ac:	str	r3, [sp, #4]
   203b0:	ldr	r3, [sp, #88]	; 0x58
   203b4:	mov	r1, fp
   203b8:	str	r3, [sp]
   203bc:	add	r0, r4, #24
   203c0:	ldr	r3, [sp, #36]	; 0x24
   203c4:	bl	200f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc49c>
   203c8:	mov	r8, r4
   203cc:	str	r0, [sp, #36]	; 0x24
   203d0:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   203d4:	ldr	r3, [sp, #92]	; 0x5c
   203d8:	mov	r2, r7
   203dc:	str	r3, [sp, #4]
   203e0:	ldr	r3, [sp, #88]	; 0x58
   203e4:	mov	r1, fp
   203e8:	str	r3, [sp]
   203ec:	add	r0, r4, #8
   203f0:	ldr	r3, [sp, #36]	; 0x24
   203f4:	bl	200f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc49c>
   203f8:	mov	r8, r4
   203fc:	str	r0, [sp, #36]	; 0x24
   20400:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20404:	ldr	r3, [sp, #92]	; 0x5c
   20408:	mov	r2, r7
   2040c:	str	r3, [sp, #4]
   20410:	ldr	r3, [sp, #88]	; 0x58
   20414:	mov	r1, fp
   20418:	str	r3, [sp]
   2041c:	ldr	r0, [pc, #2664]	; 20e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd234>
   20420:	ldr	r3, [sp, #36]	; 0x24
   20424:	bl	200f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc49c>
   20428:	mov	r8, r4
   2042c:	str	r0, [sp, #36]	; 0x24
   20430:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20434:	ldr	r2, [sp, #36]	; 0x24
   20438:	mov	r3, #0
   2043c:	str	r2, [sp, #44]	; 0x2c
   20440:	ldr	r5, [r4, #8]
   20444:	ldr	r1, [fp, #28]
   20448:	add	r2, sp, #44	; 0x2c
   2044c:	mov	r0, r5
   20450:	str	r3, [sl, #76]	; 0x4c
   20454:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   20458:	ldr	r3, [sl, #76]	; 0x4c
   2045c:	cmp	r3, #1
   20460:	beq	20844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbec>
   20464:	cmp	r3, #2
   20468:	beq	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccf8>
   2046c:	ldr	r3, [r5, #12]
   20470:	mov	r2, #0
   20474:	bic	r3, r3, #2
   20478:	cmp	r3, #4
   2047c:	str	r2, [sl, #76]	; 0x4c
   20480:	bne	204a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc848>
   20484:	ldr	r3, [r5, #16]
   20488:	ldrb	r2, [r3]
   2048c:	cmp	r2, #46	; 0x2e
   20490:	beq	20a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce3c>
   20494:	ldrb	r3, [fp, #84]	; 0x54
   20498:	orr	r3, r3, #16
   2049c:	strb	r3, [fp, #84]	; 0x54
   204a0:	ldrb	r1, [fp, #84]	; 0x54
   204a4:	mov	r8, r4
   204a8:	ands	r1, r1, #8
   204ac:	bne	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   204b0:	ldr	r3, [pc, #2520]	; 20e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd238>
   204b4:	ldr	r3, [r3]
   204b8:	cmp	r3, fp
   204bc:	beq	20ac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce68>
   204c0:	ldr	r1, [sp, #44]	; 0x2c
   204c4:	ldr	r3, [sp, #36]	; 0x24
   204c8:	cmp	r1, r3
   204cc:	bne	2087c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc24>
   204d0:	str	r3, [sp, #36]	; 0x24
   204d4:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   204d8:	mov	r3, #0
   204dc:	str	r3, [r4, #12]
   204e0:	ldr	r2, [fp, #28]
   204e4:	ldr	r3, [sp, #36]	; 0x24
   204e8:	mov	r8, r4
   204ec:	ldr	r2, [r2, #28]
   204f0:	sub	r3, r3, r2
   204f4:	str	r3, [r4, #8]
   204f8:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   204fc:	ldr	r3, [r4, #72]	; 0x48
   20500:	mov	r8, r4
   20504:	cmn	r3, #1
   20508:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   2050c:	ldr	r0, [r4, #44]	; 0x2c
   20510:	cmp	r0, #0
   20514:	beq	20978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd20>
   20518:	ldrb	r3, [r4, #84]	; 0x54
   2051c:	add	r2, sp, #36	; 0x24
   20520:	ldr	r1, [pc, #2396]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   20524:	bic	r3, r3, #1
   20528:	strb	r3, [r4, #84]	; 0x54
   2052c:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   20530:	ldr	r0, [sl, #32]
   20534:	cmp	r0, #0
   20538:	bne	208d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc7c>
   2053c:	ldr	r3, [sl]
   20540:	cmp	r3, #1
   20544:	beq	20560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc908>
   20548:	mov	r2, #5
   2054c:	ldr	r1, [pc, #2368]	; 20e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd23c>
   20550:	bl	13460 <dcgettext@plt>
   20554:	ldr	r2, [r4, #24]
   20558:	ldr	r1, [r4, #44]	; 0x2c
   2055c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20560:	ldr	r2, [r4, #28]
   20564:	cmp	r2, #0
   20568:	mov	r3, r2
   2056c:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20570:	ldr	r1, [r9, #48]	; 0x30
   20574:	ldr	r1, [r1, #4]
   20578:	ldr	r1, [r1, #4]
   2057c:	sub	r1, r1, #2
   20580:	cmp	r1, #1
   20584:	bls	209b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd58>
   20588:	ldr	r2, [pc, #2292]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   2058c:	ldr	r6, [sp, #36]	; 0x24
   20590:	cmp	r3, r2
   20594:	beq	20aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce4c>
   20598:	ldr	r2, [r4, #44]	; 0x2c
   2059c:	cmp	r2, #0
   205a0:	beq	20b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xced4>
   205a4:	ldr	r2, [r4, #68]	; 0x44
   205a8:	mov	r1, r6
   205ac:	str	r2, [sp, #12]
   205b0:	ldr	r0, [sp, #12]
   205b4:	cmp	r0, #0
   205b8:	movle	r6, r1
   205bc:	strle	r5, [sp, #16]
   205c0:	ble	2063c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9e4>
   205c4:	mov	r2, #1
   205c8:	sub	r6, r1, #1
   205cc:	lsl	r2, r2, r0
   205d0:	add	r6, r6, r2
   205d4:	rsb	r2, r2, #0
   205d8:	and	r6, r6, r2
   205dc:	subs	r2, r6, r1
   205e0:	str	r2, [sp, #16]
   205e4:	beq	2063c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9e4>
   205e8:	ldr	r2, [pc, #2216]	; 20e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd240>
   205ec:	ldr	r2, [r2, #36]	; 0x24
   205f0:	cmp	r2, #0
   205f4:	bne	20604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9ac>
   205f8:	ldr	r2, [r4, #44]	; 0x2c
   205fc:	cmp	r2, #0
   20600:	beq	2063c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9e4>
   20604:	ldr	r2, [sl]
   20608:	cmp	r2, #1
   2060c:	beq	2063c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9e4>
   20610:	mov	r3, #5
   20614:	str	r3, [sp]
   20618:	ldr	r2, [pc, #2172]	; 20e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd244>
   2061c:	ldr	r3, [sp, #16]
   20620:	ldr	r1, [pc, #2168]	; 20ea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd248>
   20624:	mov	r0, #0
   20628:	bl	13bf8 <dcngettext@plt>
   2062c:	ldr	r2, [sp, #16]
   20630:	ldr	r1, [r4, #24]
   20634:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20638:	ldr	r3, [r4, #28]
   2063c:	ldrb	r2, [r3, #24]
   20640:	mov	r1, #0
   20644:	str	r6, [r3, #32]
   20648:	orr	r2, r2, #1
   2064c:	str	r6, [r3, #28]
   20650:	strb	r2, [r3, #24]
   20654:	str	r1, [r3, #56]	; 0x38
   20658:	ldr	r1, [sp, #92]	; 0x5c
   2065c:	ldr	r2, [r4, #40]	; 0x28
   20660:	str	r1, [sp, #4]
   20664:	ldr	r1, [sp, #88]	; 0x58
   20668:	mov	r3, r6
   2066c:	str	r1, [sp]
   20670:	add	r0, r4, #8
   20674:	mov	r1, r4
   20678:	bl	200f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc49c>
   2067c:	ldrb	r3, [r4, #84]	; 0x54
   20680:	ldr	r2, [r4, #28]
   20684:	ldr	r1, [pc, #2040]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   20688:	orr	r3, r3, #1
   2068c:	cmp	r2, r1
   20690:	strb	r3, [r4, #84]	; 0x54
   20694:	beq	20920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccc8>
   20698:	ldrb	r3, [r4, #84]	; 0x54
   2069c:	ldr	lr, [r2, #36]	; 0x24
   206a0:	tst	r3, #8
   206a4:	bne	20924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcccc>
   206a8:	ldr	r3, [r2, #20]
   206ac:	ldr	r0, [r2, #28]
   206b0:	tst	r3, #2048	; 0x800
   206b4:	str	r0, [sp, #36]	; 0x24
   206b8:	beq	20ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce7c>
   206bc:	ldr	r6, [r4, #32]
   206c0:	cmp	r6, #0
   206c4:	beq	20bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf58>
   206c8:	ldr	r0, [r4, #48]	; 0x30
   206cc:	cmp	r0, #0
   206d0:	beq	20a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcdd8>
   206d4:	ldr	r2, [pc, #1992]	; 20ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd24c>
   206d8:	mov	r1, #0
   206dc:	bl	2d1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1957c>
   206e0:	ldr	r3, [r4, #28]
   206e4:	ldr	r2, [r3, #20]
   206e8:	and	r1, r2, #1
   206ec:	str	r0, [r3, #32]
   206f0:	ldrb	r0, [r4, #84]	; 0x54
   206f4:	cmp	r1, #0
   206f8:	orr	r1, r0, #2
   206fc:	strb	r1, [r4, #84]	; 0x54
   20700:	beq	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   20704:	ldr	r1, [pc, #1948]	; 20ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd250>
   20708:	and	r1, r1, r2
   2070c:	cmp	r1, #1024	; 0x400
   20710:	beq	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   20714:	ldr	r1, [r3, #36]	; 0x24
   20718:	cmp	r1, #0
   2071c:	bne	20900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcca8>
   20720:	ldr	r1, [r6, #32]
   20724:	cmp	r1, #0
   20728:	beq	208f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc9c>
   2072c:	ldr	r0, [r1, #28]
   20730:	ldr	r1, [sp, #36]	; 0x24
   20734:	ldr	r0, [r0, #28]
   20738:	cmp	r0, r1
   2073c:	bls	20900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcca8>
   20740:	ldr	r1, [pc, #1852]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   20744:	cmp	r3, r1
   20748:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   2074c:	ldrb	r1, [r4, #84]	; 0x54
   20750:	tst	r1, #8
   20754:	bne	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20758:	ldr	r1, [pc, #1864]	; 20ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd250>
   2075c:	and	r2, r2, r1
   20760:	cmp	r2, #1024	; 0x400
   20764:	beq	20cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd054>
   20768:	ldr	r5, [r3, #36]	; 0x24
   2076c:	ldr	r3, [pc, #1804]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20770:	ldr	r3, [r3, #8]
   20774:	lsr	r5, r5, r3
   20778:	ldr	r3, [sp, #36]	; 0x24
   2077c:	ldr	r0, [r4, #52]	; 0x34
   20780:	add	r3, r3, r5
   20784:	cmp	r0, #0
   20788:	str	r3, [sp, #36]	; 0x24
   2078c:	beq	2079c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb44>
   20790:	add	r2, sp, #36	; 0x24
   20794:	ldr	r1, [pc, #1768]	; 20e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd22c>
   20798:	bl	2c984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d2c>
   2079c:	ldr	r1, [r4, #32]
   207a0:	cmp	r1, #0
   207a4:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   207a8:	ldr	r3, [r4, #28]
   207ac:	ldr	r2, [r3, #20]
   207b0:	tst	r2, #3
   207b4:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   207b8:	ldr	r0, [sp, #92]	; 0x5c
   207bc:	ldr	r2, [sp, #36]	; 0x24
   207c0:	cmp	r0, #0
   207c4:	str	r2, [r1, #28]
   207c8:	bne	20dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd154>
   207cc:	ldr	r1, [r4, #36]	; 0x24
   207d0:	cmp	r1, #0
   207d4:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   207d8:	ldr	r3, [r4, #32]
   207dc:	cmp	r1, r3
   207e0:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   207e4:	ldr	r3, [r4, #28]
   207e8:	ldr	r2, [r3, #20]
   207ec:	tst	r2, #2
   207f0:	bne	20800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcba8>
   207f4:	ldrb	r2, [r4, #84]	; 0x54
   207f8:	tst	r2, #64	; 0x40
   207fc:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20800:	ldr	r3, [r3, #32]
   20804:	ldr	r2, [sp, #92]	; 0x5c
   20808:	add	r5, r3, r5
   2080c:	cmp	r2, #0
   20810:	str	r5, [r1, #28]
   20814:	beq	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20818:	mov	r2, #0
   2081c:	add	r0, r4, #28
   20820:	bl	1db08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb0>
   20824:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20828:	ldr	r2, [r6, #28]
   2082c:	ldr	r3, [r5, #28]
   20830:	sub	r3, r3, r2
   20834:	str	r3, [r5, #56]	; 0x38
   20838:	str	r1, [sp, #36]	; 0x24
   2083c:	mov	r8, r4
   20840:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20844:	ldr	r3, [sl, #80]	; 0x50
   20848:	cmp	r3, #0
   2084c:	streq	r4, [sl, #80]	; 0x50
   20850:	beq	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   20854:	cmp	r3, r4
   20858:	beq	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   2085c:	ldr	r1, [pc, #1608]	; 20eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd254>
   20860:	ldr	r0, [pc, #1556]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20864:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   20868:	b	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   2086c:	ldr	r3, [r6, #28]
   20870:	sub	r3, r1, r3
   20874:	str	r3, [r5, #56]	; 0x38
   20878:	b	20838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbe0>
   2087c:	ldr	r2, [pc, #1532]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20880:	sub	r1, r1, r3
   20884:	mov	r0, r4
   20888:	ldr	r2, [r2, #8]
   2088c:	str	r3, [sp]
   20890:	ldr	r3, [fp, #28]
   20894:	lsl	r2, r1, r2
   20898:	mov	r1, r7
   2089c:	bl	1faa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe4c>
   208a0:	ldr	r3, [fp, #80]	; 0x50
   208a4:	ldr	r4, [r4]
   208a8:	cmp	r3, #3
   208ac:	beq	20ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf4c>
   208b0:	cmp	r3, #2
   208b4:	mov	r8, r4
   208b8:	ldr	r3, [sp, #44]	; 0x2c
   208bc:	beq	20c94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd03c>
   208c0:	ldr	r1, [fp, #28]
   208c4:	ldr	r2, [r1, #20]
   208c8:	orr	r2, r2, #1
   208cc:	str	r2, [r1, #20]
   208d0:	b	204d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc878>
   208d4:	ldr	r3, [sl, #28]
   208d8:	ldr	r2, [sl, #20]
   208dc:	cmp	r3, #0
   208e0:	str	r2, [sp, #36]	; 0x24
   208e4:	ldrne	r3, [r3, #28]
   208e8:	addne	r3, r3, r2
   208ec:	strne	r3, [sp, #36]	; 0x24
   208f0:	b	20560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc908>
   208f4:	ldrd	r0, [r3, #28]
   208f8:	cmp	r0, r1
   208fc:	beq	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   20900:	ldr	r1, [r4, #36]	; 0x24
   20904:	cmp	r1, #0
   20908:	bne	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   2090c:	ldrb	r1, [r9]
   20910:	and	r1, r1, #3
   20914:	cmp	r1, #2
   20918:	strne	r4, [r6, #32]
   2091c:	b	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   20920:	ldr	lr, [r1, #36]	; 0x24
   20924:	cmp	lr, #0
   20928:	beq	206bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca64>
   2092c:	ldr	r1, [pc, #1404]	; 20eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd258>
   20930:	ldr	r0, [pc, #1348]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20934:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   20938:	b	206bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca64>
   2093c:	mov	r2, #5
   20940:	ldr	r1, [pc, #1388]	; 20eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd25c>
   20944:	bl	13460 <dcgettext@plt>
   20948:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2094c:	b	202e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc688>
   20950:	ldr	r3, [sl, #84]	; 0x54
   20954:	cmp	r3, #0
   20958:	streq	r4, [sl, #84]	; 0x54
   2095c:	beq	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   20960:	cmp	r3, r4
   20964:	beq	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   20968:	ldr	r1, [pc, #1352]	; 20eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd260>
   2096c:	ldr	r0, [pc, #1288]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20970:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   20974:	b	2046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc814>
   20978:	ldrb	r3, [r9]
   2097c:	and	r3, r3, #3
   20980:	cmp	r3, #2
   20984:	bne	20560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc908>
   20988:	ldr	r3, [r9, #48]	; 0x30
   2098c:	ldr	r3, [r3, #4]
   20990:	ldr	r3, [r3, #4]
   20994:	cmp	r3, #2
   20998:	bne	20560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc908>
   2099c:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   209a0:	cmp	r0, #0
   209a4:	str	r0, [r4, #44]	; 0x2c
   209a8:	beq	20560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc908>
   209ac:	b	20518 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8c0>
   209b0:	ldr	r1, [r2, #20]
   209b4:	tst	r1, #67108864	; 0x4000000
   209b8:	beq	20588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc930>
   209bc:	ldr	r3, [r4, #8]
   209c0:	cmp	r3, #0
   209c4:	beq	209e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd88>
   209c8:	ldr	r0, [r3]
   209cc:	cmp	r0, #0
   209d0:	bne	209e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd88>
   209d4:	ldr	r0, [r3, #4]
   209d8:	cmp	r0, #5
   209dc:	beq	20a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcdac>
   209e0:	mov	r2, #5
   209e4:	ldr	r1, [pc, #1232]	; 20ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd264>
   209e8:	mov	r0, #0
   209ec:	bl	13460 <dcgettext@plt>
   209f0:	ldr	r1, [r4, #24]
   209f4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   209f8:	ldr	r2, [r4, #28]
   209fc:	ldr	r3, [r4, #8]
   20a00:	ldr	r1, [r2, #20]
   20a04:	ldr	r0, [r3, #8]
   20a08:	ldrb	r3, [r2, #24]
   20a0c:	tst	r1, #2048	; 0x800
   20a10:	ldr	r1, [r0, #28]
   20a14:	orr	r3, r3, #1
   20a18:	str	r1, [r2, #32]
   20a1c:	str	r1, [r2, #28]
   20a20:	strb	r3, [r2, #24]
   20a24:	ldreq	r3, [r0, #36]	; 0x24
   20a28:	streq	r3, [r2, #36]	; 0x24
   20a2c:	b	20180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc528>
   20a30:	ldr	r3, [r4, #28]
   20a34:	ldr	r0, [r4, #36]	; 0x24
   20a38:	ldr	r2, [r3, #20]
   20a3c:	cmp	r0, #0
   20a40:	and	r1, r2, #1
   20a44:	beq	20bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf94>
   20a48:	ldrb	lr, [r4, #84]	; 0x54
   20a4c:	ldr	ip, [r0, #28]
   20a50:	tst	lr, #64	; 0x40
   20a54:	bne	20b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceac>
   20a58:	ldr	lr, [r4, #32]
   20a5c:	cmp	r0, lr
   20a60:	ldrne	r0, [r4, #68]	; 0x44
   20a64:	strne	r0, [sp, #12]
   20a68:	ldr	lr, [sp, #12]
   20a6c:	cmp	lr, #0
   20a70:	ble	20a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce34>
   20a74:	mov	r0, #1
   20a78:	sub	ip, ip, #1
   20a7c:	lsl	r0, r0, lr
   20a80:	add	ip, ip, r0
   20a84:	rsb	r0, r0, #0
   20a88:	and	ip, ip, r0
   20a8c:	str	ip, [r3, #32]
   20a90:	b	206f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca98>
   20a94:	ldrb	r3, [r3, #1]
   20a98:	cmp	r3, #0
   20a9c:	beq	204a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc848>
   20aa0:	b	20494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc83c>
   20aa4:	ldr	r3, [r2, #28]
   20aa8:	cmp	r3, #0
   20aac:	str	r3, [sp, #16]
   20ab0:	bne	20b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb8>
   20ab4:	ldr	r3, [sp, #16]
   20ab8:	str	r3, [sp, #12]
   20abc:	b	20658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   20ac0:	ldr	r0, [pc, #1016]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20ac4:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   20ac8:	ldr	r3, [sp, #44]	; 0x2c
   20acc:	str	r3, [r0, #28]
   20ad0:	b	204d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc878>
   20ad4:	ldr	r3, [pc, #932]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20ad8:	ldr	ip, [r4, #60]	; 0x3c
   20adc:	ldr	r1, [r3, #8]
   20ae0:	sub	r3, ip, #1
   20ae4:	add	r3, r3, r0
   20ae8:	add	r3, r3, lr, lsr r1
   20aec:	rsb	ip, ip, #0
   20af0:	and	r3, r3, ip
   20af4:	sub	r3, r3, r0
   20af8:	lsl	r3, r3, r1
   20afc:	str	r3, [r2, #36]	; 0x24
   20b00:	b	206bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca64>
   20b04:	ldr	r0, [sp, #16]
   20b08:	add	ip, ip, r0
   20b0c:	b	20a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce34>
   20b10:	ldr	r1, [pc, #940]	; 20ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd26c>
   20b14:	ldr	r0, [pc, #864]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20b18:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   20b1c:	mov	r3, #0
   20b20:	str	r5, [sp, #16]
   20b24:	str	r3, [sp, #12]
   20b28:	b	20658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   20b2c:	ldr	r6, [r4, #32]
   20b30:	ldr	r2, [r3, #20]
   20b34:	cmp	r6, #0
   20b38:	beq	20cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd080>
   20b3c:	tst	r2, #3
   20b40:	beq	20b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcefc>
   20b44:	ldr	r0, [r6]
   20b48:	ldrb	r1, [r0]
   20b4c:	cmp	r1, #42	; 0x2a
   20b50:	beq	20cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd068>
   20b54:	ldrb	r2, [r4, #84]	; 0x54
   20b58:	tst	r2, #8
   20b5c:	bne	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20b60:	ldr	r2, [r3, #20]
   20b64:	tst	r2, #1
   20b68:	beq	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20b6c:	ldr	r1, [pc, #820]	; 20ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd250>
   20b70:	and	r2, r2, r1
   20b74:	cmp	r2, #1024	; 0x400
   20b78:	beq	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20b7c:	ldrb	r2, [r9]
   20b80:	ldr	r1, [sp, #92]	; 0x5c
   20b84:	and	r2, r2, #3
   20b88:	cmp	r2, #2
   20b8c:	cmpne	r1, #0
   20b90:	bne	20dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd168>
   20b94:	ldr	r2, [r3, #64]	; 0x40
   20b98:	ldr	r1, [r6, #28]
   20b9c:	str	r2, [sp, #12]
   20ba0:	b	205b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc958>
   20ba4:	ldr	r3, [sp, #44]	; 0x2c
   20ba8:	mov	r8, r4
   20bac:	b	204d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc878>
   20bb0:	mov	r1, r6
   20bb4:	ldr	r0, [pc, #772]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20bb8:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   20bbc:	mov	r6, r0
   20bc0:	b	206c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca70>
   20bc4:	lsl	r2, r3, r2
   20bc8:	str	r1, [sp]
   20bcc:	mov	r3, r6
   20bd0:	mov	r1, r7
   20bd4:	mov	r0, r8
   20bd8:	bl	1faa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe4c>
   20bdc:	ldr	r3, [pc, #668]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20be0:	ldr	r1, [sp, #12]
   20be4:	ldr	r2, [r3, #8]
   20be8:	b	20378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc720>
   20bec:	ldr	ip, [r6, #32]
   20bf0:	cmp	ip, #0
   20bf4:	beq	206f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca98>
   20bf8:	cmp	r1, #0
   20bfc:	beq	20d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd144>
   20c00:	ldr	r1, [ip, #28]
   20c04:	ldr	ip, [sp, #36]	; 0x24
   20c08:	str	r1, [sp, #28]
   20c0c:	ldr	lr, [r1, #28]
   20c10:	str	ip, [sp, #24]
   20c14:	str	lr, [sp, #16]
   20c18:	ldr	lr, [r1, #32]
   20c1c:	ldr	r1, [sp, #16]
   20c20:	str	lr, [sp, #20]
   20c24:	cmp	r1, ip
   20c28:	mov	lr, ip
   20c2c:	bls	20d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0dc>
   20c30:	ldr	r1, [r3, #36]	; 0x24
   20c34:	cmp	r1, #0
   20c38:	beq	20d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0dc>
   20c3c:	ldr	ip, [pc, #572]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20c40:	ldr	ip, [ip, #8]
   20c44:	str	ip, [sp, #32]
   20c48:	mov	ip, lr
   20c4c:	ldr	lr, [sp, #32]
   20c50:	add	r1, ip, r1, lsr lr
   20c54:	ldr	ip, [sp, #16]
   20c58:	cmp	ip, r1
   20c5c:	bcc	20d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0dc>
   20c60:	mov	r1, ip
   20c64:	ldr	ip, [sp, #20]
   20c68:	cmp	r1, ip
   20c6c:	beq	20d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd134>
   20c70:	mov	r2, #5
   20c74:	ldr	r1, [pc, #588]	; 20ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd270>
   20c78:	bl	13460 <dcgettext@plt>
   20c7c:	ldr	r1, [r4, #24]
   20c80:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20c84:	ldr	r3, [r4, #28]
   20c88:	ldr	r2, [r3, #20]
   20c8c:	and	r1, r2, #1
   20c90:	b	206f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca98>
   20c94:	ldr	r2, [r9, #48]	; 0x30
   20c98:	ldr	r2, [r2, #4]
   20c9c:	ldr	r2, [r2, #4]
   20ca0:	cmp	r2, #5
   20ca4:	bne	204d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc878>
   20ca8:	b	208c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc68>
   20cac:	ldrb	r2, [r9]
   20cb0:	and	r2, r2, #3
   20cb4:	cmp	r2, #2
   20cb8:	bne	20778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb20>
   20cbc:	b	20768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb10>
   20cc0:	ldr	r1, [pc, #504]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20cc4:	strd	r2, [sp, #12]
   20cc8:	bl	13268 <strcmp@plt>
   20ccc:	ldrd	r2, [sp, #12]
   20cd0:	cmp	r0, #0
   20cd4:	bne	20b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcefc>
   20cd8:	and	r1, r2, #25
   20cdc:	cmp	r1, #1
   20ce0:	ldr	r1, [pc, #408]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20ce4:	orreq	r2, r2, #32
   20ce8:	ldr	r6, [r1, #220]	; 0xdc
   20cec:	cmp	r6, #0
   20cf0:	beq	20d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0c0>
   20cf4:	ldr	r1, [r6, #36]	; 0x24
   20cf8:	tst	r2, r1
   20cfc:	beq	20d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   20d00:	ldr	r1, [r6, #40]	; 0x28
   20d04:	tst	r2, r1
   20d08:	beq	20d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   20d0c:	ldr	r6, [r6, #8]
   20d10:	cmp	r6, #0
   20d14:	bne	20cf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd09c>
   20d18:	mov	r1, #0
   20d1c:	ldr	r0, [pc, #412]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20d20:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   20d24:	ldr	r3, [r4, #28]
   20d28:	mov	r6, r0
   20d2c:	str	r6, [r4, #32]
   20d30:	b	20b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcefc>
   20d34:	ldr	r1, [r4, #80]	; 0x50
   20d38:	cmp	r1, #1
   20d3c:	ldreq	r1, [sp, #28]
   20d40:	ldrdne	r0, [sp, #20]
   20d44:	ldreq	r0, [sp, #20]
   20d48:	ldreq	lr, [r1, #36]	; 0x24
   20d4c:	ldreq	r1, [pc, #300]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20d50:	addne	r1, r1, r0
   20d54:	ldrne	r0, [sp, #16]
   20d58:	ldreq	r1, [r1, #8]
   20d5c:	subne	lr, r1, r0
   20d60:	addeq	lr, r0, lr, lsr r1
   20d64:	ldr	r0, [sp, #12]
   20d68:	cmp	r0, #0
   20d6c:	ble	20d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd130>
   20d70:	mov	r1, #1
   20d74:	lsl	r1, r1, r0
   20d78:	sub	r0, r1, #1
   20d7c:	add	lr, r0, lr
   20d80:	rsb	r1, r1, #0
   20d84:	and	lr, lr, r1
   20d88:	str	lr, [r3, #32]
   20d8c:	ldrb	r1, [r4, #84]	; 0x54
   20d90:	orr	r1, r1, #2
   20d94:	strb	r1, [r4, #84]	; 0x54
   20d98:	b	20704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcaac>
   20d9c:	ldrb	r1, [r4, #84]	; 0x54
   20da0:	orr	r1, r1, #2
   20da4:	strb	r1, [r4, #84]	; 0x54
   20da8:	b	20740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   20dac:	ldr	r3, [r3, #28]
   20db0:	ldr	r2, [r4, #44]	; 0x2c
   20db4:	add	r0, r4, #28
   20db8:	bl	1db08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb0>
   20dbc:	b	207cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb74>
   20dc0:	ldr	r1, [pc, #248]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20dc4:	ldr	r0, [r6]
   20dc8:	str	r3, [sp, #12]
   20dcc:	bl	13268 <strcmp@plt>
   20dd0:	ldr	r3, [sp, #12]
   20dd4:	cmp	r0, #0
   20dd8:	bne	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20ddc:	ldr	r2, [pc, #156]	; 20e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd228>
   20de0:	ldr	r2, [r2, #220]	; 0xdc
   20de4:	cmp	r2, #0
   20de8:	beq	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20dec:	ldr	r1, [pc, #204]	; 20ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd268>
   20df0:	ldr	r0, [r2]
   20df4:	str	r3, [sp, #16]
   20df8:	str	r2, [sp, #12]
   20dfc:	bl	13268 <strcmp@plt>
   20e00:	ldr	r3, [sp, #16]
   20e04:	cmp	r0, #0
   20e08:	bne	20e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1c4>
   20e0c:	ldr	r2, [sp, #12]
   20e10:	ldr	r2, [r2, #8]
   20e14:	cmp	r2, #0
   20e18:	beq	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20e1c:	ldr	r2, [sl]
   20e20:	cmp	r2, #1
   20e24:	beq	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20e28:	ldr	r3, [pc, #156]	; 20ecc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd274>
   20e2c:	mov	r2, #5
   20e30:	ldrsb	r0, [r3, #24]
   20e34:	cmp	r0, #0
   20e38:	movne	r0, #0
   20e3c:	ldrne	r1, [pc, #140]	; 20ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd278>
   20e40:	ldreq	r1, [pc, #140]	; 20ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd27c>
   20e44:	bl	13460 <dcgettext@plt>
   20e48:	ldr	r3, [r4, #28]
   20e4c:	ldr	r1, [r3]
   20e50:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20e54:	ldr	r6, [r4, #32]
   20e58:	ldr	r3, [r4, #28]
   20e5c:	b	20b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf3c>
   20e60:	ldr	r2, [pc, #112]	; 20ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd280>
   20e64:	ldr	r1, [pc, #112]	; 20edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd284>
   20e68:	ldr	r0, [pc, #12]	; 20e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   20e6c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   20e70:	strdeq	r8, [ip], -r4
   20e74:	andeq	r8, ip, ip, lsl #1
   20e78:	andeq	r1, r0, r7, lsr #11
   20e7c:	andeq	pc, r4, r8, rrx
   20e80:	andeq	r7, ip, r8, lsr #23
   20e84:	andeq	r7, ip, r8, lsr #17
   20e88:	andeq	lr, r4, r4, lsr #31
   20e8c:	andeq	r8, ip, r4, ror r0
   20e90:	andeq	r8, ip, r4, asr r0
   20e94:	andeq	pc, r4, r4, lsl #11
   20e98:	andeq	r8, ip, r4, ror r1
   20e9c:	muleq	r4, r4, r6
   20ea0:	andeq	pc, r4, ip, asr #13
   20ea4:	andeq	pc, r4, r4, lsl #14
   20ea8:	andeq	r0, r0, r2, lsl #8
   20eac:	andeq	r1, r0, ip, ror r3
   20eb0:	andeq	r1, r0, r3, asr #8
   20eb4:	andeq	pc, r4, r0, asr #14
   20eb8:	andeq	r1, r0, r5, lsl #7
   20ebc:	ldrdeq	pc, [r4], -r4
   20ec0:	muleq	r4, r0, r8
   20ec4:	andeq	r1, r0, r5, ror #7
   20ec8:	andeq	pc, r4, r0, lsl r7	; <UNPREDICTABLE>
   20ecc:	andeq	r8, ip, r8, lsl r1
   20ed0:	andeq	pc, r4, ip, lsl #12
   20ed4:	andeq	pc, r4, r0, asr r6	; <UNPREDICTABLE>
   20ed8:	andeq	pc, r4, r0, asr #32
   20edc:	strdeq	r1, [r0], -r8
   20ee0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20ee4:	mov	sl, r1
   20ee8:	mov	r1, #0
   20eec:	subs	r5, r3, r1
   20ef0:	mov	r9, r0
   20ef4:	mov	r0, r3
   20ef8:	ldr	r4, [sp, #36]	; 0x24
   20efc:	movne	r5, #1
   20f00:	mov	r6, r2
   20f04:	ldr	r8, [sp, #32]
   20f08:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   20f0c:	eor	r4, r4, #1
   20f10:	tst	r4, r5
   20f14:	str	r0, [sl]
   20f18:	beq	20f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd2e0>
   20f1c:	mov	r7, r0
   20f20:	ldr	r1, [pc, #68]	; 20f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd314>
   20f24:	mov	r0, r6
   20f28:	bl	13268 <strcmp@plt>
   20f2c:	cmp	r0, #0
   20f30:	streq	r7, [r9]
   20f34:	beq	20f48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd2f0>
   20f38:	mov	r0, r6
   20f3c:	mov	r1, #0
   20f40:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   20f44:	str	r0, [r9]
   20f48:	tst	r8, r5
   20f4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20f50:	ldr	r1, [pc, #24]	; 20f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd318>
   20f54:	mov	r2, #5
   20f58:	mov	r0, #0
   20f5c:	bl	13460 <dcgettext@plt>
   20f60:	mov	r1, #0
   20f64:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   20f68:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   20f6c:	muleq	r4, r0, r8
   20f70:	andeq	pc, r4, r0, ror #14
   20f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20f78:	mov	sl, r1
   20f7c:	mov	r7, r0
   20f80:	ldr	r1, [pc, #304]	; 210b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd460>
   20f84:	mov	r0, sl
   20f88:	bl	13268 <strcmp@plt>
   20f8c:	cmp	r0, #0
   20f90:	beq	21050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd3f8>
   20f94:	ldr	r1, [pc, #284]	; 210b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd460>
   20f98:	mov	r0, r7
   20f9c:	bl	13268 <strcmp@plt>
   20fa0:	cmp	r0, #0
   20fa4:	beq	21050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd3f8>
   20fa8:	ldr	r3, [pc, #268]	; 210bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd464>
   20fac:	ldr	r8, [r3, #220]	; 0xdc
   20fb0:	cmp	r8, #0
   20fb4:	beq	21078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd420>
   20fb8:	ldr	r9, [pc, #256]	; 210c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd468>
   20fbc:	mov	r6, #0
   20fc0:	mov	r4, r8
   20fc4:	b	20fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd37c>
   20fc8:	ldr	r4, [r4, #4]
   20fcc:	cmp	r4, #0
   20fd0:	beq	21018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd3c0>
   20fd4:	cmp	r6, #0
   20fd8:	ldr	r5, [r4]
   20fdc:	beq	210a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd448>
   20fe0:	mov	r0, r5
   20fe4:	mov	r1, r7
   20fe8:	bl	13268 <strcmp@plt>
   20fec:	subs	r5, r0, #0
   20ff0:	bne	20fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd370>
   20ff4:	mov	r2, #5
   20ff8:	mov	r1, r9
   20ffc:	bl	13460 <dcgettext@plt>
   21000:	mov	r2, r7
   21004:	mov	r1, r5
   21008:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2100c:	ldr	r4, [r4, #4]
   21010:	cmp	r4, #0
   21014:	bne	20fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd37c>
   21018:	ldr	r8, [r8, #8]
   2101c:	cmp	r8, #0
   21020:	bne	20fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd368>
   21024:	cmp	r6, #0
   21028:	beq	21078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd420>
   2102c:	mov	r0, #8
   21030:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   21034:	mov	r4, r0
   21038:	mov	r0, r7
   2103c:	bl	135a4 <xstrdup@plt>
   21040:	ldr	r3, [r6, #4]
   21044:	stm	r4, {r0, r3}
   21048:	str	r4, [r6, #4]
   2104c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21050:	mov	r2, #5
   21054:	ldr	r1, [pc, #104]	; 210c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd46c>
   21058:	mov	r0, #0
   2105c:	bl	13460 <dcgettext@plt>
   21060:	mov	r1, #0
   21064:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   21068:	ldr	r3, [pc, #76]	; 210bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd464>
   2106c:	ldr	r8, [r3, #220]	; 0xdc
   21070:	cmp	r8, #0
   21074:	bne	20fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd360>
   21078:	mov	r2, #5
   2107c:	ldr	r1, [pc, #68]	; 210c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd470>
   21080:	mov	r0, #0
   21084:	bl	13460 <dcgettext@plt>
   21088:	mov	r3, r7
   2108c:	mov	r2, sl
   21090:	mov	r1, #0
   21094:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   21098:	mov	r6, #0
   2109c:	b	2102c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd3d4>
   210a0:	mov	r1, sl
   210a4:	mov	r0, r5
   210a8:	bl	13268 <strcmp@plt>
   210ac:	cmp	r0, #0
   210b0:	moveq	r6, r8
   210b4:	b	20fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd388>
   210b8:	muleq	r4, r0, r8
   210bc:	andeq	r7, ip, r8, lsr #23
   210c0:	ldrdeq	pc, [r4], -r4
   210c4:	andeq	pc, r4, r0, lsr #15
   210c8:	andeq	pc, r4, r0, lsl r8	; <UNPREDICTABLE>
   210cc:	ldr	r0, [r0, #104]	; 0x68
   210d0:	bx	lr
   210d4:	push	{r4, r5, r6, r7, r8, lr}
   210d8:	mov	r3, #0
   210dc:	mov	r8, r0
   210e0:	mov	r5, r1
   210e4:	mov	r1, r0
   210e8:	ldr	r0, [pc, #256]	; 211f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd598>
   210ec:	mov	r7, r2
   210f0:	bl	137a8 <bfd_hash_lookup@plt>
   210f4:	subs	r4, r0, #0
   210f8:	beq	211b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd55c>
   210fc:	ldr	r6, [r4, #36]	; 0x24
   21100:	cmp	r6, #0
   21104:	beq	21154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd4fc>
   21108:	ldr	r3, [pc, #228]	; 211f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd59c>
   2110c:	cmp	r7, #0
   21110:	sub	r3, r5, r3
   21114:	clz	r3, r3
   21118:	lsr	r3, r3, #5
   2111c:	moveq	r3, #0
   21120:	cmp	r3, #0
   21124:	beq	21190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd538>
   21128:	mov	r2, r6
   2112c:	ldr	r1, [pc, #188]	; 211f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd598>
   21130:	mov	r0, #0
   21134:	bl	1cb60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8f08>
   21138:	subs	r7, r0, #0
   2113c:	beq	211d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd57c>
   21140:	ldm	r4, {r0, r1, r2}
   21144:	mov	r8, r6
   21148:	stm	r7, {r0, r1, r2}
   2114c:	str	r7, [r4]
   21150:	mov	r4, r7
   21154:	str	r8, [r4, #36]	; 0x24
   21158:	str	r5, [r4, #84]	; 0x54
   2115c:	add	r4, r4, #12
   21160:	mov	r0, r4
   21164:	pop	{r4, r5, r6, r7, r8, pc}
   21168:	cmp	r3, #0
   2116c:	cmpge	r5, #0
   21170:	beq	2115c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd504>
   21174:	ldr	r3, [r4]
   21178:	cmp	r3, #0
   2117c:	beq	211a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd548>
   21180:	ldr	r2, [r3, #36]	; 0x24
   21184:	cmp	r6, r2
   21188:	bne	211a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd548>
   2118c:	mov	r4, r3
   21190:	ldr	r3, [r4, #84]	; 0x54
   21194:	cmp	r3, r5
   21198:	bne	21168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd510>
   2119c:	b	2115c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd504>
   211a0:	cmp	r7, #0
   211a4:	moveq	r4, r7
   211a8:	bne	21128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd4d0>
   211ac:	mov	r0, r4
   211b0:	pop	{r4, r5, r6, r7, r8, pc}
   211b4:	cmp	r7, #0
   211b8:	beq	21160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd508>
   211bc:	mov	r2, #5
   211c0:	ldr	r1, [pc, #48]	; 211f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd5a0>
   211c4:	bl	13460 <dcgettext@plt>
   211c8:	mov	r1, r8
   211cc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   211d0:	b	21160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd508>
   211d4:	mov	r2, #5
   211d8:	ldr	r1, [pc, #24]	; 211f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd5a0>
   211dc:	bl	13460 <dcgettext@plt>
   211e0:	mov	r1, r6
   211e4:	mov	r4, r7
   211e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   211ec:	b	21160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd508>
   211f0:	andeq	r7, ip, r8, ror #24
   211f4:	andeq	r0, r0, lr, ror r1
   211f8:	andeq	pc, r4, r4, asr r8	; <UNPREDICTABLE>
   211fc:	push	{r4, r5, lr}
   21200:	sub	sp, sp, #12
   21204:	ldr	r2, [pc, #208]	; 212dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd684>
   21208:	ldr	r3, [pc, #208]	; 212e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd688>
   2120c:	str	r2, [sp]
   21210:	mov	r1, #1000	; 0x3e8
   21214:	mov	r2, #0
   21218:	ldr	r0, [pc, #196]	; 212e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd68c>
   2121c:	bl	134b4 <_obstack_begin@plt>
   21220:	ldr	r4, [pc, #192]	; 212e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd690>
   21224:	ldr	ip, [pc, #192]	; 212ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd694>
   21228:	mov	r3, #61	; 0x3d
   2122c:	add	r0, ip, #52	; 0x34
   21230:	mov	r2, #100	; 0x64
   21234:	ldr	r1, [pc, #180]	; 212f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd698>
   21238:	str	ip, [r4]
   2123c:	bl	13670 <bfd_hash_table_init_n@plt>
   21240:	cmp	r0, #0
   21244:	beq	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd670>
   21248:	ldr	r2, [r4]
   2124c:	ldr	r4, [pc, #160]	; 212f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd69c>
   21250:	ldr	r1, [pc, #160]	; 212f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6a0>
   21254:	mov	r3, r4
   21258:	ldr	ip, [pc, #156]	; 212fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6a4>
   2125c:	mov	r5, #0
   21260:	str	r5, [r2]
   21264:	str	r2, [r2, #4]
   21268:	str	r5, [r3, #224]!	; 0xe0
   2126c:	mov	r2, r5
   21270:	str	r3, [r4, #228]	; 0xe4
   21274:	str	r5, [r1]
   21278:	mov	r3, #1
   2127c:	mov	r0, r5
   21280:	str	r1, [r1, #4]
   21284:	mov	r1, #2
   21288:	stm	ip, {r5, ip}
   2128c:	bl	1fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf54>
   21290:	mov	r1, r5
   21294:	mov	r2, #1
   21298:	str	r0, [r4, #232]	; 0xe8
   2129c:	ldr	r0, [pc, #92]	; 21300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6a8>
   212a0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   212a4:	ldr	r2, [pc, #88]	; 21304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6ac>
   212a8:	ldr	r1, [pc, #88]	; 21308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6b0>
   212ac:	ldr	r3, [pc, #88]	; 2130c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6b4>
   212b0:	str	r5, [r4, #236]!	; 0xec
   212b4:	str	r4, [r2]
   212b8:	str	r0, [r1]
   212bc:	str	r3, [r0, #28]
   212c0:	add	sp, sp, #12
   212c4:	pop	{r4, r5, pc}
   212c8:	mov	r2, #5
   212cc:	ldr	r1, [pc, #60]	; 21310 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6b8>
   212d0:	bl	13460 <dcgettext@plt>
   212d4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   212d8:	b	21248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd5f0>
   212dc:	andeq	r3, r1, r4, ror #6
   212e0:	andeq	r3, r1, r4, ror r5
   212e4:	andeq	r7, ip, r0, lsl #24
   212e8:	andeq	r7, ip, ip, lsr #7
   212ec:	andeq	r7, ip, r4, lsr ip
   212f0:	andeq	ip, r1, r0, ror #22
   212f4:	andeq	r7, ip, r8, lsr #23
   212f8:	andeq	r8, ip, ip, asr #32
   212fc:	andeq	r8, ip, r8, rrx
   21300:	andeq	pc, r4, r4, lsr #17
   21304:	andeq	r8, ip, r8, asr #32
   21308:	andeq	r8, ip, r4, asr r0
   2130c:	andeq	r7, ip, r8, lsr #17
   21310:	andeq	pc, r4, ip, ror r8	; <UNPREDICTABLE>
   21314:	push	{r4, lr}
   21318:	mov	r4, r0
   2131c:	ldr	r3, [r4, #12]
   21320:	cmp	r3, #8
   21324:	ldrls	pc, [pc, r3, lsl #2]
   21328:	b	213d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd778>
   2132c:	andeq	r1, r2, r8, asr r3
   21330:	andeq	r1, r2, r8, ror #6
   21334:	andeq	r1, r2, r0, asr r3
   21338:	andeq	r1, r2, r0, lsl #7
   2133c:	andeq	r1, r2, r0, ror #6
   21340:	andeq	r1, r2, r0, ror #6
   21344:	andeq	r1, r2, r0, ror #6
   21348:	ldrdeq	r1, [r2], -r0
   2134c:	andeq	r1, r2, r0, asr r3
   21350:	ldr	r4, [r4, #16]
   21354:	b	2131c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c4>
   21358:	ldr	r0, [r4, #16]
   2135c:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   21360:	ldr	r4, [r4, #20]
   21364:	b	2131c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c4>
   21368:	ldr	r0, [r4, #16]
   2136c:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   21370:	ldr	r0, [r4, #20]
   21374:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   21378:	ldr	r4, [r4, #24]
   2137c:	b	2131c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6c4>
   21380:	ldr	r3, [r4]
   21384:	ldr	r2, [pc, #72]	; 213d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd77c>
   21388:	cmp	r3, r2
   2138c:	beq	213a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd74c>
   21390:	poplt	{r4, pc}
   21394:	sub	r3, r3, #320	; 0x140
   21398:	sub	r3, r3, #3
   2139c:	cmp	r3, #1
   213a0:	pophi	{r4, pc}
   213a4:	mov	r2, #0
   213a8:	ldr	r0, [r4, #16]
   213ac:	mov	r1, r2
   213b0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   213b4:	subs	r3, r0, #0
   213b8:	popeq	{r4, pc}
   213bc:	ldr	r1, [r3, #28]
   213c0:	cmp	r1, #0
   213c4:	popne	{r4, pc}
   213c8:	pop	{r4, lr}
   213cc:	b	213d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd780>
   213d0:	pop	{r4, pc}
   213d4:	andeq	r0, r0, r1, asr #2
   213d8:	push	{r4, r5, r6, lr}
   213dc:	mov	r4, r0
   213e0:	mov	r5, r1
   213e4:	ldr	r0, [r0, #24]
   213e8:	ldr	r1, [pc, #236]	; 214dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd884>
   213ec:	bl	13268 <strcmp@plt>
   213f0:	cmp	r0, #0
   213f4:	beq	214c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd86c>
   213f8:	ldr	r3, [pc, #224]	; 214e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd888>
   213fc:	ldr	r2, [r4, #72]	; 0x48
   21400:	cmp	r2, r3
   21404:	bne	21458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd800>
   21408:	ldr	r3, [r4, #28]
   2140c:	cmp	r3, #0
   21410:	beq	21478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd820>
   21414:	ldr	r0, [r4, #44]	; 0x2c
   21418:	mov	r2, #0
   2141c:	cmp	r0, r2
   21420:	str	r3, [r3, #60]	; 0x3c
   21424:	str	r4, [r3, #104]	; 0x68
   21428:	str	r2, [r3, #56]	; 0x38
   2142c:	beq	21434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7dc>
   21430:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   21434:	ldr	r0, [r4, #48]	; 0x30
   21438:	cmp	r0, #0
   2143c:	beq	21444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7ec>
   21440:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   21444:	ldr	r3, [r4, #68]	; 0x44
   21448:	cmn	r3, #1
   2144c:	ldrne	r2, [r4, #28]
   21450:	strne	r3, [r2, #64]	; 0x40
   21454:	pop	{r4, r5, r6, pc}
   21458:	ldr	r3, [pc, #132]	; 214e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd88c>
   2145c:	ldr	r1, [r4, #24]
   21460:	ldr	r0, [r3, #48]	; 0x30
   21464:	bl	13604 <bfd_get_section_by_name@plt>
   21468:	mov	r3, r0
   2146c:	cmp	r3, #0
   21470:	str	r0, [r4, #28]
   21474:	bne	21414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7bc>
   21478:	ldr	r6, [pc, #100]	; 214e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd88c>
   2147c:	mov	r2, r5
   21480:	ldr	r1, [r4, #24]
   21484:	ldr	r0, [r6, #48]	; 0x30
   21488:	bl	1337c <bfd_make_section_anyway_with_flags@plt>
   2148c:	cmp	r0, #0
   21490:	mov	r3, r0
   21494:	str	r0, [r4, #28]
   21498:	bne	21414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7bc>
   2149c:	mov	r2, #5
   214a0:	ldr	r1, [pc, #64]	; 214e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd890>
   214a4:	bl	13460 <dcgettext@plt>
   214a8:	ldr	r3, [r6, #48]	; 0x30
   214ac:	ldr	r2, [r4, #24]
   214b0:	ldr	r3, [r3, #4]
   214b4:	ldr	r1, [r3]
   214b8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   214bc:	ldr	r3, [r4, #28]
   214c0:	b	21414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7bc>
   214c4:	mov	r2, #5
   214c8:	ldr	r1, [pc, #28]	; 214ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd894>
   214cc:	bl	13460 <dcgettext@plt>
   214d0:	ldr	r1, [pc, #4]	; 214dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd884>
   214d4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   214d8:	b	213f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7a0>
   214dc:	muleq	r4, ip, r4
   214e0:	andeq	r0, r0, lr, ror r1
   214e4:	andeq	r8, ip, ip, lsl #1
   214e8:	ldrdeq	pc, [r4], -r0
   214ec:	andeq	pc, r4, ip, lsr #17
   214f0:	push	{r4, r5, r6, lr}
   214f4:	mov	r5, r1
   214f8:	ldr	r6, [r0, #24]
   214fc:	ldr	r3, [r0, #-8]
   21500:	sub	r4, r0, #12
   21504:	cmp	r3, r6
   21508:	beq	21544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8ec>
   2150c:	mov	r1, #1504	; 0x5e0
   21510:	ldr	r0, [pc, #88]	; 21570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd918>
   21514:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   21518:	b	21544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8ec>
   2151c:	ldr	r3, [r4, #36]	; 0x24
   21520:	cmp	r3, r6
   21524:	bne	21564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd90c>
   21528:	ldr	r3, [r4, #84]	; 0x54
   2152c:	cmp	r3, r5
   21530:	beq	21558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd900>
   21534:	adds	r2, r5, #0
   21538:	movne	r2, #1
   2153c:	orrs	r3, r2, r3, lsr #31
   21540:	beq	21558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd900>
   21544:	ldr	r4, [r4]
   21548:	cmp	r4, #0
   2154c:	bne	2151c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c4>
   21550:	mov	r0, r4
   21554:	pop	{r4, r5, r6, pc}
   21558:	add	r4, r4, #12
   2155c:	mov	r0, r4
   21560:	pop	{r4, r5, r6, pc}
   21564:	mov	r4, #0
   21568:	mov	r0, r4
   2156c:	pop	{r4, r5, r6, pc}
   21570:	andeq	pc, r4, r8, rrx
   21574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21578:	mov	r6, r0
   2157c:	ldr	fp, [pc, #1224]	; 21a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddf4>
   21580:	sub	sp, sp, #12
   21584:	mov	r7, r1
   21588:	mov	r5, r3
   2158c:	str	r2, [sp, #4]
   21590:	ldr	r3, [pc, #1208]	; 21a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddf8>
   21594:	ldr	r3, [r3]
   21598:	ldr	r4, [r3, #16]
   2159c:	cmp	r4, #0
   215a0:	beq	218b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc60>
   215a4:	mov	r9, r4
   215a8:	mov	r8, #0
   215ac:	ldr	r2, [r9, #28]
   215b0:	mov	r3, r6
   215b4:	subs	r1, r2, #0
   215b8:	beq	217ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb94>
   215bc:	cmp	r5, #0
   215c0:	ldr	sl, [r2, #20]
   215c4:	beq	215e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd988>
   215c8:	ldr	r2, [r6, #148]	; 0x94
   215cc:	ldr	r0, [fp, #48]	; 0x30
   215d0:	blx	r5
   215d4:	cmp	r0, #0
   215d8:	ldreq	r9, [r9, #16]
   215dc:	beq	215f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9a0>
   215e0:	ldr	r2, [pc, #1132]	; 21a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddfc>
   215e4:	eor	sl, sl, r7
   215e8:	tst	sl, r2
   215ec:	ldr	r3, [r9, #16]
   215f0:	beq	217cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb74>
   215f4:	mov	r9, r3
   215f8:	cmp	r9, #0
   215fc:	bne	215ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd954>
   21600:	cmp	r8, #0
   21604:	bne	219ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd94>
   21608:	and	r3, r7, #17
   2160c:	cmp	r3, #17
   21610:	ldreq	r9, [pc, #1088]	; 21a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde00>
   21614:	beq	21764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb0c>
   21618:	and	r3, r7, #9
   2161c:	cmp	r3, #9
   21620:	ldreq	sl, [pc, #1076]	; 21a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde04>
   21624:	beq	21740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdae8>
   21628:	ldr	r3, [pc, #1072]	; 21a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde08>
   2162c:	and	r1, r7, r3
   21630:	cmp	r1, r3
   21634:	beq	218dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc84>
   21638:	ldr	r3, [pc, #1060]	; 21a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde0c>
   2163c:	bics	r3, r3, r7
   21640:	beq	21954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcfc>
   21644:	ldr	r3, [pc, #1052]	; 21a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde10>
   21648:	bics	r3, r3, r7
   2164c:	beq	2182c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbd4>
   21650:	ands	r9, r7, #1
   21654:	beq	21a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddb0>
   21658:	cmp	r4, #0
   2165c:	movne	r8, #0
   21660:	beq	218d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc78>
   21664:	ldr	r2, [r4, #28]
   21668:	mov	r3, r6
   2166c:	subs	r1, r2, #0
   21670:	beq	21814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbbc>
   21674:	cmp	r5, #0
   21678:	ldr	r9, [r2, #20]
   2167c:	beq	21698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda40>
   21680:	ldr	r2, [r6, #148]	; 0x94
   21684:	ldr	r0, [fp, #48]	; 0x30
   21688:	blx	r5
   2168c:	cmp	r0, #0
   21690:	ldreq	r4, [r4, #16]
   21694:	beq	216ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda54>
   21698:	eor	r9, r9, r7
   2169c:	tst	r9, #1
   216a0:	ldr	r3, [r4, #16]
   216a4:	beq	217f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb9c>
   216a8:	mov	r4, r3
   216ac:	cmp	r4, #0
   216b0:	bne	21664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda0c>
   216b4:	adds	r3, r8, #0
   216b8:	movne	r3, #1
   216bc:	cmp	r5, #0
   216c0:	movne	r5, r3
   216c4:	moveq	r5, #1
   216c8:	cmp	r5, #0
   216cc:	mov	r5, #0
   216d0:	str	r5, [sp, #4]
   216d4:	beq	21590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd938>
   216d8:	mov	r9, r8
   216dc:	mov	r0, r9
   216e0:	add	sp, sp, #12
   216e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   216e8:	cmp	r5, #0
   216ec:	ldr	r9, [r1, #20]
   216f0:	beq	2170c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdab4>
   216f4:	mov	r3, r6
   216f8:	ldr	r2, [r6, #148]	; 0x94
   216fc:	ldr	r0, [fp, #48]	; 0x30
   21700:	blx	r5
   21704:	cmp	r0, #0
   21708:	beq	2181c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbc4>
   2170c:	ldr	r2, [pc, #856]	; 21a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde14>
   21710:	eor	r3, r7, r9
   21714:	tst	r3, r2
   21718:	beq	2172c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdad4>
   2171c:	and	r3, r3, sl
   21720:	and	r9, r9, #4194304	; 0x400000
   21724:	orrs	r3, r3, r9
   21728:	bne	2181c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbc4>
   2172c:	ldr	r3, [r4, #16]
   21730:	cmp	r3, #0
   21734:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   21738:	mov	r8, r4
   2173c:	mov	r4, r3
   21740:	ldr	r1, [r4, #28]
   21744:	cmp	r1, #0
   21748:	bne	216e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda90>
   2174c:	ldr	r9, [r4, #76]	; 0x4c
   21750:	b	2170c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdab4>
   21754:	cmp	r3, #0
   21758:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   2175c:	mov	r8, r4
   21760:	mov	r4, r3
   21764:	ldr	r2, [r4, #28]
   21768:	mov	r3, r6
   2176c:	subs	r1, r2, #0
   21770:	beq	217c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb6c>
   21774:	cmp	r5, #0
   21778:	ldr	sl, [r2, #20]
   2177c:	beq	21798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb40>
   21780:	ldr	r2, [r6, #148]	; 0x94
   21784:	ldr	r0, [fp, #48]	; 0x30
   21788:	blx	r5
   2178c:	cmp	r0, #0
   21790:	ldreq	r4, [r4, #16]
   21794:	beq	217ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb54>
   21798:	eor	sl, sl, r7
   2179c:	tst	sl, r9
   217a0:	ldr	r3, [r4, #16]
   217a4:	beq	21754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdafc>
   217a8:	mov	r4, r3
   217ac:	cmp	r4, #0
   217b0:	beq	216b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda5c>
   217b4:	ldr	r2, [r4, #28]
   217b8:	mov	r3, r6
   217bc:	subs	r1, r2, #0
   217c0:	bne	21774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb1c>
   217c4:	ldr	sl, [r4, #76]	; 0x4c
   217c8:	b	21798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb40>
   217cc:	cmp	r3, #0
   217d0:	beq	219f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd98>
   217d4:	mov	r8, r9
   217d8:	mov	r9, r3
   217dc:	mov	r3, r6
   217e0:	ldr	r2, [r9, #28]
   217e4:	subs	r1, r2, #0
   217e8:	bne	215bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd964>
   217ec:	ldr	sl, [r9, #76]	; 0x4c
   217f0:	b	215e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd988>
   217f4:	cmp	r3, #0
   217f8:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   217fc:	mov	r8, r4
   21800:	mov	r4, r3
   21804:	mov	r3, r6
   21808:	ldr	r2, [r4, #28]
   2180c:	subs	r1, r2, #0
   21810:	bne	21674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda1c>
   21814:	ldr	r9, [r4, #76]	; 0x4c
   21818:	b	21698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda40>
   2181c:	ldr	r3, [r4, #16]
   21820:	cmp	r3, #0
   21824:	bne	2173c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdae4>
   21828:	b	216b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda5c>
   2182c:	cmp	r4, #0
   21830:	beq	218d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc78>
   21834:	mov	r8, #0
   21838:	ldr	r2, [r4, #28]
   2183c:	mov	r3, r6
   21840:	subs	r1, r2, #0
   21844:	beq	2189c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc44>
   21848:	cmp	r5, #0
   2184c:	ldr	r9, [r2, #20]
   21850:	beq	2186c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc14>
   21854:	ldr	r2, [r6, #148]	; 0x94
   21858:	ldr	r0, [fp, #48]	; 0x30
   2185c:	blx	r5
   21860:	cmp	r0, #0
   21864:	ldreq	r4, [r4, #16]
   21868:	beq	21884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc2c>
   2186c:	ldr	r2, [pc, #508]	; 21a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde18>
   21870:	eor	r9, r9, r7
   21874:	tst	r9, r2
   21878:	ldr	r3, [r4, #16]
   2187c:	beq	218a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc4c>
   21880:	mov	r4, r3
   21884:	cmp	r4, #0
   21888:	beq	216b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda5c>
   2188c:	ldr	r2, [r4, #28]
   21890:	mov	r3, r6
   21894:	subs	r1, r2, #0
   21898:	bne	21848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbf0>
   2189c:	ldr	r9, [r4, #76]	; 0x4c
   218a0:	b	2186c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc14>
   218a4:	cmp	r3, #0
   218a8:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   218ac:	mov	r8, r4
   218b0:	mov	r4, r3
   218b4:	b	21838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbe0>
   218b8:	and	r3, r7, #17
   218bc:	cmp	r3, #17
   218c0:	beq	218d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc78>
   218c4:	and	r3, r7, #9
   218c8:	cmp	r3, #9
   218cc:	bne	21628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9d0>
   218d0:	mov	r3, #0
   218d4:	mov	r8, r3
   218d8:	b	216bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda64>
   218dc:	cmp	r4, #0
   218e0:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   218e4:	orr	ip, r7, #256	; 0x100
   218e8:	mov	r0, #0
   218ec:	ldr	lr, [pc, #384]	; 21a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde1c>
   218f0:	orr	ip, ip, #2
   218f4:	and	r7, r7, #2
   218f8:	mov	r9, r0
   218fc:	b	21924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdccc>
   21900:	tst	r3, #2
   21904:	mov	r0, #1
   21908:	bne	21914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcbc>
   2190c:	cmp	r7, #0
   21910:	bne	216dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda84>
   21914:	mov	r9, r4
   21918:	ldr	r4, [r4, #16]
   2191c:	cmp	r4, #0
   21920:	beq	216dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda84>
   21924:	ldr	r2, [r4, #28]
   21928:	ldr	r3, [r4, #76]	; 0x4c
   2192c:	cmp	r2, #0
   21930:	ldrne	r3, [r2, #20]
   21934:	eor	r2, r3, ip
   21938:	tst	r2, r1
   2193c:	beq	21900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdca8>
   21940:	cmp	r0, #0
   21944:	bne	216dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda84>
   21948:	tst	r2, lr
   2194c:	moveq	r9, r4
   21950:	b	21918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcc0>
   21954:	cmp	r4, #0
   21958:	beq	218d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc78>
   2195c:	and	r3, r7, #256	; 0x100
   21960:	ldr	sl, [pc, #272]	; 21a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde20>
   21964:	mov	r8, #0
   21968:	str	r3, [sp, #4]
   2196c:	b	219c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd70>
   21970:	cmp	r5, #0
   21974:	ldr	r9, [r1, #20]
   21978:	beq	21994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd3c>
   2197c:	mov	r3, r6
   21980:	ldr	r2, [r6, #148]	; 0x94
   21984:	ldr	r0, [fp, #48]	; 0x30
   21988:	blx	r5
   2198c:	cmp	r0, #0
   21990:	beq	219dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd84>
   21994:	eor	r3, r7, r9
   21998:	tst	r3, sl
   2199c:	beq	219b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd5c>
   219a0:	tst	r9, #4194304	; 0x400000
   219a4:	beq	219dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd84>
   219a8:	ldr	r3, [sp, #4]
   219ac:	cmp	r3, #0
   219b0:	bne	219dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd84>
   219b4:	ldr	r3, [r4, #16]
   219b8:	cmp	r3, #0
   219bc:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   219c0:	mov	r8, r4
   219c4:	mov	r4, r3
   219c8:	ldr	r1, [r4, #28]
   219cc:	cmp	r1, #0
   219d0:	bne	21970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd18>
   219d4:	ldr	r9, [r4, #76]	; 0x4c
   219d8:	b	21994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd3c>
   219dc:	ldr	r3, [r4, #16]
   219e0:	cmp	r3, #0
   219e4:	bne	219c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd6c>
   219e8:	b	216b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda5c>
   219ec:	mov	r9, r8
   219f0:	ldr	r3, [sp, #4]
   219f4:	mov	r0, r9
   219f8:	cmp	r3, #0
   219fc:	strne	r9, [r3]
   21a00:	add	sp, sp, #12
   21a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a08:	cmp	r4, #0
   21a0c:	beq	21a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddec>
   21a10:	ldr	r2, [r4, #28]
   21a14:	ldr	r3, [r4, #76]	; 0x4c
   21a18:	cmp	r2, #0
   21a1c:	ldrne	r3, [r2, #20]
   21a20:	eor	r3, r3, r7
   21a24:	tst	r3, #8192	; 0x2000
   21a28:	moveq	r9, r4
   21a2c:	ldr	r4, [r4, #16]
   21a30:	cmp	r4, #0
   21a34:	bne	21a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddb8>
   21a38:	mov	r0, r9
   21a3c:	add	sp, sp, #12
   21a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a44:	mov	r9, r4
   21a48:	b	216dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xda84>
   21a4c:	andeq	r8, ip, ip, lsl #1
   21a50:	andeq	r8, ip, r8, rrx
   21a54:	subeq	r0, r0, fp, lsl r5
   21a58:	subeq	r0, r0, r3, lsl r5
   21a5c:	andeq	r0, r0, fp, lsl #2
   21a60:	andeq	r0, r0, r1, lsl #8
   21a64:	subeq	r0, r0, r1
   21a68:	andeq	r0, r0, r1, lsl #2
   21a6c:	subeq	r0, r0, fp, lsl #2
   21a70:	subeq	r0, r0, r3, lsl #10
   21a74:	andeq	r0, r0, r3, lsl #2
   21a78:	andeq	r0, r0, r3, lsl #10
   21a7c:	ldr	r3, [pc, #740]	; 21d68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe110>
   21a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a84:	sub	sp, sp, #116	; 0x74
   21a88:	ldr	r7, [r3, #224]	; 0xe0
   21a8c:	ldr	r5, [pc, #728]	; 21d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe114>
   21a90:	cmp	r7, #0
   21a94:	ldr	r6, [pc, #724]	; 21d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe118>
   21a98:	ldrne	r8, [pc, #724]	; 21d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe11c>
   21a9c:	movne	r0, #0
   21aa0:	bne	21ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde5c>
   21aa4:	b	21b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdef8>
   21aa8:	ldr	r7, [r7, #24]
   21aac:	cmp	r7, #0
   21ab0:	beq	21b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdef8>
   21ab4:	ldr	r2, [r7, #16]
   21ab8:	ldr	r3, [r2, #40]	; 0x28
   21abc:	lsr	r3, r3, #5
   21ac0:	tst	r3, #4160	; 0x1040
   21ac4:	bne	21aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde50>
   21ac8:	ldrb	r3, [r7, #36]	; 0x24
   21acc:	tst	r3, #16
   21ad0:	bne	21aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde50>
   21ad4:	ldr	r4, [r2, #100]	; 0x64
   21ad8:	cmp	r4, #0
   21adc:	bne	21b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdea8>
   21ae0:	b	21aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde50>
   21ae4:	mov	r0, r4
   21ae8:	mov	r1, #1
   21aec:	bl	1dcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa078>
   21af0:	mov	r0, #1
   21af4:	ldr	r4, [r4, #12]
   21af8:	cmp	r4, #0
   21afc:	beq	21aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde50>
   21b00:	ldr	r3, [r4, #60]	; 0x3c
   21b04:	cmp	r3, #0
   21b08:	beq	21b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdec4>
   21b0c:	ldr	r2, [r3, #148]	; 0x94
   21b10:	ldr	r3, [r5, #48]	; 0x30
   21b14:	cmp	r2, r3
   21b18:	beq	21af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde9c>
   21b1c:	ldr	r3, [r4, #20]
   21b20:	tst	r3, #3145728	; 0x300000
   21b24:	bne	21af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde9c>
   21b28:	cmp	r0, #0
   21b2c:	bne	21ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde8c>
   21b30:	mov	r1, r8
   21b34:	mov	r2, #5
   21b38:	ldr	r9, [r6, #80]	; 0x50
   21b3c:	bl	13460 <dcgettext@plt>
   21b40:	mov	r1, r0
   21b44:	mov	r0, r9
   21b48:	bl	1382c <fprintf@plt>
   21b4c:	b	21ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde8c>
   21b50:	mov	r2, #5
   21b54:	ldr	r1, [pc, #540]	; 21d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe120>
   21b58:	mov	r0, #0
   21b5c:	bl	13460 <dcgettext@plt>
   21b60:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   21b64:	mov	r2, #5
   21b68:	ldr	r1, [pc, #524]	; 21d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe124>
   21b6c:	mov	r0, #0
   21b70:	ldr	r4, [r6, #80]	; 0x50
   21b74:	bl	13460 <dcgettext@plt>
   21b78:	mov	r2, #5
   21b7c:	ldr	r1, [pc, #508]	; 21d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe128>
   21b80:	mov	r7, r0
   21b84:	mov	r0, #0
   21b88:	bl	13460 <dcgettext@plt>
   21b8c:	mov	r2, #5
   21b90:	ldr	r1, [pc, #492]	; 21d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe12c>
   21b94:	mov	r8, r0
   21b98:	mov	r0, #0
   21b9c:	bl	13460 <dcgettext@plt>
   21ba0:	mov	r2, #5
   21ba4:	ldr	r1, [pc, #476]	; 21d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe130>
   21ba8:	mov	r9, r0
   21bac:	mov	r0, #0
   21bb0:	bl	13460 <dcgettext@plt>
   21bb4:	mov	r3, r8
   21bb8:	str	r9, [sp]
   21bbc:	mov	r2, r7
   21bc0:	ldr	r1, [pc, #452]	; 21d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe134>
   21bc4:	str	r0, [sp, #4]
   21bc8:	mov	r0, r4
   21bcc:	bl	1382c <fprintf@plt>
   21bd0:	ldr	r3, [pc, #400]	; 21d68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe110>
   21bd4:	ldr	r4, [r3, #220]	; 0xdc
   21bd8:	cmp	r4, #0
   21bdc:	beq	21c94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe03c>
   21be0:	ldr	sl, [pc, #424]	; 21d90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe138>
   21be4:	ldr	r9, [pc, #424]	; 21d94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe13c>
   21be8:	ldr	r8, [pc, #424]	; 21d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe140>
   21bec:	ldr	r7, [pc, #424]	; 21d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe144>
   21bf0:	ldr	r2, [r4]
   21bf4:	mov	r1, sl
   21bf8:	ldr	r0, [r6, #80]	; 0x50
   21bfc:	bl	1382c <fprintf@plt>
   21c00:	ldr	r2, [r4, #16]
   21c04:	mov	r1, r9
   21c08:	add	r0, sp, #12
   21c0c:	bl	13a00 <sprintf@plt>
   21c10:	add	r1, sp, #12
   21c14:	mov	r0, r8
   21c18:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   21c1c:	add	r0, sp, #12
   21c20:	bl	137d8 <strlen@plt>
   21c24:	cmp	r0, #15
   21c28:	mov	fp, r0
   21c2c:	bhi	21c40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdfe8>
   21c30:	add	fp, fp, #1
   21c34:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   21c38:	cmp	fp, #16
   21c3c:	bne	21c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdfd8>
   21c40:	ldr	r1, [r4, #20]
   21c44:	mov	r0, r7
   21c48:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   21c4c:	ldr	r3, [r4, #36]	; 0x24
   21c50:	cmp	r3, #0
   21c54:	bne	21c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe00c>
   21c58:	ldr	r3, [r4, #40]	; 0x28
   21c5c:	cmp	r3, #0
   21c60:	beq	21c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe02c>
   21c64:	ldr	r0, [pc, #308]	; 21da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe148>
   21c68:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   21c6c:	ldr	r3, [r4, #36]	; 0x24
   21c70:	cmp	r3, #0
   21c74:	bne	21d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe0d0>
   21c78:	ldr	r3, [r4, #40]	; 0x28
   21c7c:	cmp	r3, #0
   21c80:	bne	21d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe0bc>
   21c84:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   21c88:	ldr	r4, [r4, #8]
   21c8c:	cmp	r4, #0
   21c90:	bne	21bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf98>
   21c94:	mov	r2, #5
   21c98:	ldr	r1, [pc, #260]	; 21da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe14c>
   21c9c:	mov	r0, #0
   21ca0:	ldr	r4, [r6, #80]	; 0x50
   21ca4:	bl	13460 <dcgettext@plt>
   21ca8:	mov	r1, r0
   21cac:	mov	r0, r4
   21cb0:	bl	1382c <fprintf@plt>
   21cb4:	ldrb	r3, [r5, #4]
   21cb8:	ands	r4, r3, #16
   21cbc:	beq	21d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe0e0>
   21cc0:	ldr	r1, [pc, #160]	; 21d68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe110>
   21cc4:	ldr	r2, [pc, #220]	; 21da8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe150>
   21cc8:	ldr	r3, [r1, #240]	; 0xf0
   21ccc:	ldr	r4, [r1, #140]	; 0x8c
   21cd0:	add	r3, r3, #1
   21cd4:	cmp	r4, #0
   21cd8:	str	r3, [r1, #240]	; 0xf0
   21cdc:	ldr	r7, [r2]
   21ce0:	beq	21cfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe0a4>
   21ce4:	mov	r0, r4
   21ce8:	mov	r1, r7
   21cec:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   21cf0:	ldr	r4, [r4]
   21cf4:	cmp	r4, #0
   21cf8:	bne	21ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe08c>
   21cfc:	ldr	r2, [r6, #80]	; 0x50
   21d00:	ldr	r0, [r5, #48]	; 0x30
   21d04:	ldr	r1, [pc, #96]	; 21d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe114>
   21d08:	bl	2d8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c88>
   21d0c:	add	sp, sp, #116	; 0x74
   21d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d14:	ldr	r0, [pc, #144]	; 21dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe154>
   21d18:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   21d1c:	ldr	r0, [r4, #40]	; 0x28
   21d20:	bl	1cdb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9160>
   21d24:	b	21c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe02c>
   21d28:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   21d2c:	ldr	r0, [r4, #36]	; 0x24
   21d30:	bl	1cdb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9160>
   21d34:	b	21c78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe020>
   21d38:	ldr	r2, [pc, #112]	; 21db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe158>
   21d3c:	ldr	r3, [pc, #112]	; 21db4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe15c>
   21d40:	str	r2, [sp]
   21d44:	mov	r1, #1000	; 0x3e8
   21d48:	mov	r2, r4
   21d4c:	ldr	r0, [pc, #100]	; 21db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe160>
   21d50:	bl	134b4 <_obstack_begin@plt>
   21d54:	mov	r2, r4
   21d58:	ldr	r1, [pc, #92]	; 21dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe164>
   21d5c:	ldr	r0, [r5, #28]
   21d60:	bl	13904 <bfd_link_hash_traverse@plt>
   21d64:	b	21cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe068>
   21d68:	andeq	r7, ip, r8, lsr #23
   21d6c:	andeq	r8, ip, ip, lsl #1
   21d70:	andeq	r8, ip, r4, ror r1
   21d74:	andeq	pc, r4, r0, lsl r9	; <UNPREDICTABLE>
   21d78:	andeq	pc, r4, ip, lsr #18
   21d7c:	andeq	pc, r4, r4, asr #18
   21d80:	andeq	pc, r4, ip, asr #18
   21d84:	andeq	pc, r4, r4, asr r9	; <UNPREDICTABLE>
   21d88:	andeq	pc, r4, ip, asr r9	; <UNPREDICTABLE>
   21d8c:	andeq	pc, r4, r8, ror #18
   21d90:	andeq	pc, r4, r0, lsl #19
   21d94:	andeq	pc, r4, r8, lsl #19
   21d98:	muleq	r4, r0, r9
   21d9c:	andeq	pc, r4, r0, asr #6
   21da0:	andeq	pc, r4, r0, lsl #7
   21da4:	muleq	r4, ip, r9
   21da8:	andeq	r8, ip, r4, asr r0
   21dac:	muleq	r4, r8, r9
   21db0:	andeq	r3, r1, r4, ror #6
   21db4:	andeq	r3, r1, r4, ror r5
   21db8:	andeq	r7, ip, r8, asr #23
   21dbc:	muleq	r1, r0, r9
   21dc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   21dc4:	mov	r8, r0
   21dc8:	ldr	r5, [r1, #20]
   21dcc:	sub	sp, sp, #12
   21dd0:	mov	r0, r5
   21dd4:	mov	r6, r3
   21dd8:	mov	r4, r1
   21ddc:	mov	r9, r2
   21de0:	bl	1da64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e0c>
   21de4:	ldr	r1, [pc, #596]	; 22040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3e8>
   21de8:	mov	r7, r0
   21dec:	ldr	r0, [r6, #24]
   21df0:	bl	13268 <strcmp@plt>
   21df4:	cmp	r7, #0
   21df8:	clz	r0, r0
   21dfc:	lsr	r0, r0, #5
   21e00:	movne	r0, #1
   21e04:	cmp	r0, #0
   21e08:	beq	21e20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1c8>
   21e0c:	ldr	r3, [r4, #60]	; 0x3c
   21e10:	cmp	r3, #0
   21e14:	beq	21f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe310>
   21e18:	add	sp, sp, #12
   21e1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21e20:	cmp	r9, #0
   21e24:	beq	21e50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1f8>
   21e28:	ldr	r3, [pc, #532]	; 22044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3ec>
   21e2c:	mov	r1, r9
   21e30:	mov	r0, r3
   21e34:	ldr	r3, [r3, #48]	; 0x30
   21e38:	mov	r2, r4
   21e3c:	ldr	r3, [r3, #4]
   21e40:	ldr	r3, [r3, #392]	; 0x188
   21e44:	blx	r3
   21e48:	cmp	r0, #0
   21e4c:	beq	21e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1c0>
   21e50:	ldr	r3, [r4, #60]	; 0x3c
   21e54:	cmp	r3, #0
   21e58:	bne	21e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1c0>
   21e5c:	ldr	r3, [pc, #484]	; 22048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3f0>
   21e60:	ldr	r7, [pc, #476]	; 22044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3ec>
   21e64:	bics	r3, r3, r5
   21e68:	beq	21fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe360>
   21e6c:	ldrb	r3, [r7]
   21e70:	and	r3, r3, #3
   21e74:	cmp	r3, #2
   21e78:	biceq	r5, r5, #512	; 0x200
   21e7c:	beq	21e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe230>
   21e80:	bic	r5, r5, #917504	; 0xe0000
   21e84:	bic	r5, r5, #516	; 0x204
   21e88:	ldr	r3, [r6, #80]	; 0x50
   21e8c:	cmp	r3, #2
   21e90:	beq	21fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe378>
   21e94:	cmp	r3, #3
   21e98:	biceq	r5, r5, #1
   21e9c:	ldr	r3, [r6, #28]
   21ea0:	cmp	r3, #0
   21ea4:	beq	2202c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3d4>
   21ea8:	mvn	r2, r5
   21eac:	ldrb	r0, [r3, #24]
   21eb0:	ldr	r1, [r3, #20]
   21eb4:	and	r2, r2, #8
   21eb8:	mvn	r2, r2
   21ebc:	and	r1, r1, r2
   21ec0:	tst	r0, #4
   21ec4:	str	r1, [r3, #20]
   21ec8:	beq	21f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe320>
   21ecc:	bic	r2, r5, #8
   21ed0:	eor	r0, r1, r2
   21ed4:	tst	r0, #25165824	; 0x1800000
   21ed8:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe39c>
   21edc:	bic	r5, r5, #25165824	; 0x1800000
   21ee0:	bic	r5, r5, #8
   21ee4:	bic	r1, r1, #25165824	; 0x1800000
   21ee8:	orr	r2, r1, r5
   21eec:	str	r2, [r3, #20]
   21ef0:	tst	r5, #268435456	; 0x10000000
   21ef4:	bne	22014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3bc>
   21ef8:	ldr	r3, [r6, #28]
   21efc:	ldr	r2, [r4, #64]	; 0x40
   21f00:	ldr	r1, [r3, #64]	; 0x40
   21f04:	cmp	r2, r1
   21f08:	strhi	r2, [r3, #64]	; 0x40
   21f0c:	ldr	r2, [pc, #312]	; 2204c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3f4>
   21f10:	str	r3, [r4, #60]	; 0x3c
   21f14:	ldr	r2, [r2, #244]	; 0xf4
   21f18:	cmp	r2, #0
   21f1c:	bne	21f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe2e4>
   21f20:	ldr	r1, [r3, #164]	; 0xa4
   21f24:	str	r4, [r3, #164]	; 0xa4
   21f28:	cmp	r1, #0
   21f2c:	str	r1, [r4, #164]	; 0xa4
   21f30:	str	r2, [r4, #160]	; 0xa0
   21f34:	strne	r4, [r1, #160]	; 0xa0
   21f38:	streq	r4, [r3, #160]	; 0xa0
   21f3c:	mov	r0, #12
   21f40:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   21f44:	mov	r2, #0
   21f48:	mov	r3, #5
   21f4c:	strd	r2, [r0]
   21f50:	ldr	r3, [r8, #4]
   21f54:	str	r0, [r3]
   21f58:	str	r0, [r8, #4]
   21f5c:	str	r4, [r0, #8]
   21f60:	add	sp, sp, #12
   21f64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21f68:	ldr	r3, [pc, #224]	; 22050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3f8>
   21f6c:	str	r3, [r4, #60]	; 0x3c
   21f70:	add	sp, sp, #12
   21f74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21f78:	orr	r0, r0, #4
   21f7c:	strb	r0, [r3, #24]
   21f80:	ldr	r2, [r7, #48]	; 0x30
   21f84:	orr	r1, r1, r5
   21f88:	str	r1, [r3, #20]
   21f8c:	ldr	r1, [r2, #4]
   21f90:	str	r7, [sp]
   21f94:	ldr	r0, [r4, #148]	; 0x94
   21f98:	ldr	r7, [r1, #176]	; 0xb0
   21f9c:	mov	r1, r4
   21fa0:	blx	r7
   21fa4:	tst	r5, #8388608	; 0x800000
   21fa8:	ldrne	r3, [r6, #28]
   21fac:	ldrne	r2, [r4, #120]	; 0x78
   21fb0:	strne	r2, [r3, #120]	; 0x78
   21fb4:	b	21ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe298>
   21fb8:	ldrb	r3, [r7, #1]
   21fbc:	tst	r3, #16
   21fc0:	biceq	r5, r5, #786432	; 0xc0000
   21fc4:	biceq	r5, r5, #516	; 0x204
   21fc8:	beq	21e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe230>
   21fcc:	b	21e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe228>
   21fd0:	ldr	r3, [r7, #48]	; 0x30
   21fd4:	ldr	r3, [r3, #4]
   21fd8:	ldr	r3, [r3, #4]
   21fdc:	cmp	r3, #5
   21fe0:	biceq	r5, r5, #256	; 0x100
   21fe4:	biceq	r5, r5, #2
   21fe8:	bicne	r5, r5, #3
   21fec:	orr	r5, r5, #512	; 0x200
   21ff0:	b	21e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe244>
   21ff4:	tst	r5, #8388608	; 0x800000
   21ff8:	beq	2200c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3b4>
   21ffc:	ldr	ip, [r3, #120]	; 0x78
   22000:	ldr	r0, [r4, #120]	; 0x78
   22004:	cmp	ip, r0
   22008:	bne	21edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe284>
   2200c:	mov	r5, r2
   22010:	b	21ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe290>
   22014:	ldr	r0, [r4, #148]	; 0x94
   22018:	bl	13814 <bfd_get_arch@plt>
   2201c:	cmp	r0, #38	; 0x26
   22020:	moveq	r3, #128	; 0x80
   22024:	streq	r3, [r6, #60]	; 0x3c
   22028:	b	21ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe2a0>
   2202c:	mov	r1, r5
   22030:	mov	r0, r6
   22034:	bl	213d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd780>
   22038:	ldr	r3, [r6, #28]
   2203c:	b	21ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe250>
   22040:	muleq	r4, ip, r4
   22044:	andeq	r8, ip, ip, lsl #1
   22048:	andeq	r0, r2, #0
   2204c:	andeq	r7, ip, r8, lsr #23
   22050:	andeq	r7, ip, r8, lsr #17
   22054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22058:	sub	sp, sp, #36	; 0x24
   2205c:	mov	sl, r0
   22060:	mov	r8, r1
   22064:	mov	r0, r2
   22068:	ldr	r1, [sp, #76]	; 0x4c
   2206c:	str	r2, [sp, #8]
   22070:	str	r3, [sp, #12]
   22074:	bl	1f428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7d0>
   22078:	cmp	r0, #0
   2207c:	beq	22088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe430>
   22080:	add	sp, sp, #36	; 0x24
   22084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22088:	ldr	r3, [sl, #12]
   2208c:	add	r6, sl, #24
   22090:	cmp	r3, #0
   22094:	bne	220ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe454>
   22098:	cmp	r8, #0
   2209c:	beq	221a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe550>
   220a0:	ldr	r3, [r8, #12]
   220a4:	cmp	r3, #0
   220a8:	beq	221a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe550>
   220ac:	ldr	r4, [sl, #24]
   220b0:	cmp	r4, #0
   220b4:	beq	221a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe550>
   220b8:	ldr	r3, [sp, #8]
   220bc:	str	r6, [sp, #20]
   220c0:	add	r3, r3, #64	; 0x40
   220c4:	str	r3, [sp, #16]
   220c8:	ldr	r7, [sp, #72]	; 0x48
   220cc:	b	22174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe51c>
   220d0:	ldr	r3, [r3, #140]	; 0x8c
   220d4:	cmp	r3, #0
   220d8:	beq	22198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe540>
   220dc:	ldr	r5, [r3]
   220e0:	mov	r6, #1
   220e4:	ldr	r3, [r4, #8]
   220e8:	mov	r0, r5
   220ec:	ldr	r1, [r3, #148]	; 0x94
   220f0:	ldr	r3, [r1, #140]	; 0x8c
   220f4:	cmp	r3, #0
   220f8:	movne	r9, #1
   220fc:	ldrne	fp, [r3]
   22100:	ldreq	fp, [r1]
   22104:	moveq	r9, r3
   22108:	mov	r1, fp
   2210c:	bl	13394 <filename_cmp@plt>
   22110:	cmp	r0, #0
   22114:	bgt	22168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe510>
   22118:	bne	221e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe58c>
   2211c:	orrs	r3, r6, r9
   22120:	beq	22150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4f8>
   22124:	cmp	r6, #0
   22128:	beq	22290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe638>
   2212c:	cmp	r9, #0
   22130:	ldr	r5, [r7, #8]
   22134:	bne	22290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe638>
   22138:	mov	r1, fp
   2213c:	mov	r0, r5
   22140:	bl	13394 <filename_cmp@plt>
   22144:	cmp	r0, #0
   22148:	bgt	22168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe510>
   2214c:	bne	221e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe58c>
   22150:	cmp	r8, #0
   22154:	beq	22168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe510>
   22158:	ldr	r0, [r8, #12]
   2215c:	cmp	r0, #0
   22160:	cmpne	r0, #5
   22164:	bne	221c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe56c>
   22168:	ldr	r4, [r4]
   2216c:	cmp	r4, #0
   22170:	beq	221a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe54c>
   22174:	ldr	r3, [r4, #4]
   22178:	cmp	r3, #5
   2217c:	bne	22168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe510>
   22180:	ldr	r3, [sl, #12]
   22184:	cmp	r3, #0
   22188:	beq	22150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4f8>
   2218c:	ldr	r3, [r7, #16]
   22190:	cmp	r3, #0
   22194:	bne	220d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe478>
   22198:	ldr	r5, [r7, #8]
   2219c:	mov	r6, #0
   221a0:	b	220e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe48c>
   221a4:	ldr	r6, [sp, #20]
   221a8:	ldr	r2, [sp, #12]
   221ac:	ldr	r1, [sp, #8]
   221b0:	mov	r0, r6
   221b4:	ldr	r3, [sp, #76]	; 0x4c
   221b8:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   221bc:	add	sp, sp, #36	; 0x24
   221c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   221c4:	ldr	r3, [r4, #8]
   221c8:	ldr	r1, [sp, #8]
   221cc:	add	r2, r3, #64	; 0x40
   221d0:	str	r2, [sp]
   221d4:	ldr	r2, [sp, #16]
   221d8:	bl	1f600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9a8>
   221dc:	cmp	r0, #0
   221e0:	bge	22168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe510>
   221e4:	add	r3, sp, #24
   221e8:	mov	r0, r3
   221ec:	mov	ip, #0
   221f0:	str	r3, [sp, #28]
   221f4:	ldr	r2, [sp, #12]
   221f8:	ldr	r3, [sp, #76]	; 0x4c
   221fc:	ldr	r1, [sp, #8]
   22200:	ldr	r6, [sp, #20]
   22204:	str	ip, [sp, #24]
   22208:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   2220c:	ldr	r3, [sp, #24]
   22210:	cmp	r3, #0
   22214:	beq	22080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe428>
   22218:	ldr	r3, [r3]
   2221c:	cmp	r3, #0
   22220:	beq	22230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5d8>
   22224:	ldr	r1, [pc, #116]	; 222a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe648>
   22228:	ldr	r0, [pc, #116]	; 222a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe64c>
   2222c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   22230:	ldr	r3, [sl, #24]
   22234:	cmp	r3, r4
   22238:	beq	2227c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe624>
   2223c:	ldr	r7, [pc, #100]	; 222a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe650>
   22240:	ldr	r5, [pc, #92]	; 222a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe64c>
   22244:	b	22258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe600>
   22248:	ldr	r6, [r6]
   2224c:	ldr	r3, [r6]
   22250:	cmp	r3, r4
   22254:	beq	2227c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe624>
   22258:	cmp	r3, #0
   2225c:	bne	22248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5f0>
   22260:	mov	r1, r7
   22264:	mov	r0, r5
   22268:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2226c:	ldr	r6, [r6]
   22270:	ldr	r3, [r6]
   22274:	cmp	r3, r4
   22278:	bne	22258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe600>
   2227c:	ldr	r3, [sp, #24]
   22280:	str	r4, [r3]
   22284:	str	r3, [r6]
   22288:	add	sp, sp, #36	; 0x24
   2228c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22290:	ldr	r3, [r4, #8]
   22294:	ldr	r3, [r3, #148]	; 0x94
   22298:	ldr	fp, [r3]
   2229c:	b	22138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4e0>
   222a0:	andeq	r0, r0, ip, lsr #20
   222a4:	andeq	pc, r4, r8, rrx
   222a8:	andeq	r0, r0, r1, lsr sl
   222ac:	push	{r4, r5, r6, lr}
   222b0:	mov	r4, r1
   222b4:	ldr	r1, [r1, #4]
   222b8:	mov	r5, r0
   222bc:	cmp	r1, #0
   222c0:	mov	r6, r2
   222c4:	beq	222cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe674>
   222c8:	bl	222ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe654>
   222cc:	ldr	r1, [r4]
   222d0:	mov	r3, r6
   222d4:	mov	r2, #0
   222d8:	add	r0, r5, #24
   222dc:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   222e0:	ldr	r1, [r4, #8]
   222e4:	cmp	r1, #0
   222e8:	beq	222f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6a0>
   222ec:	mov	r2, r6
   222f0:	mov	r0, r5
   222f4:	bl	222ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe654>
   222f8:	mov	r0, r4
   222fc:	pop	{r4, r5, r6, lr}
   22300:	b	13364 <free@plt>
   22304:	ldrb	r3, [r0]
   22308:	cmp	r3, #0
   2230c:	bxeq	lr
   22310:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22314:	mov	r5, r0
   22318:	ldr	r8, [pc, #128]	; 223a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe748>
   2231c:	ldr	sl, [pc, #128]	; 223a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe74c>
   22320:	mov	r9, #0
   22324:	b	2237c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe724>
   22328:	mov	r0, #8
   2232c:	bl	13574 <xmalloc@plt>
   22330:	sub	r7, r4, r5
   22334:	ldr	r3, [r8, #248]	; 0xf8
   22338:	mov	r6, r0
   2233c:	add	r0, r7, #1
   22340:	str	r3, [r6, #4]
   22344:	bl	13574 <xmalloc@plt>
   22348:	mov	r2, r7
   2234c:	mov	r1, r5
   22350:	str	r0, [r6]
   22354:	bl	133b8 <memcpy@plt>
   22358:	ldrb	r2, [r4]
   2235c:	str	r6, [r8, #248]	; 0xf8
   22360:	cmp	r2, #0
   22364:	strb	r9, [r0, r7]
   22368:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2236c:	ldrb	r3, [r4, #1]
   22370:	add	r5, r4, #1
   22374:	cmp	r3, #0
   22378:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2237c:	mov	r1, sl
   22380:	mov	r0, r5
   22384:	bl	13ac0 <strpbrk@plt>
   22388:	subs	r4, r0, #0
   2238c:	bne	22328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   22390:	mov	r0, r5
   22394:	bl	137d8 <strlen@plt>
   22398:	add	r4, r5, r0
   2239c:	b	22328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   223a0:	andeq	r7, ip, r8, lsr #23
   223a4:			; <UNDEFINED> instruction: 0x0004f9bc
   223a8:	ldr	r3, [pc, #176]	; 22460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe808>
   223ac:	ldr	r0, [r3]
   223b0:	cmp	r0, #0
   223b4:	bxne	lr
   223b8:	push	{r4, r5, r6, lr}
   223bc:	ldr	r3, [pc, #160]	; 22464 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe80c>
   223c0:	ldr	r5, [pc, #160]	; 22468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe810>
   223c4:	ldr	r0, [r3, #252]	; 0xfc
   223c8:	ldr	r2, [r5]
   223cc:	cmp	r0, #0
   223d0:	cmpne	r0, r2
   223d4:	popne	{r4, r5, r6, pc}
   223d8:	ldr	r4, [r3, #224]	; 0xe0
   223dc:	cmp	r4, #0
   223e0:	bne	223f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe79c>
   223e4:	b	22458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe800>
   223e8:	ldr	r4, [r4, #24]
   223ec:	cmp	r4, #0
   223f0:	beq	22450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7f8>
   223f4:	ldr	r3, [r4, #4]
   223f8:	cmp	r3, #2
   223fc:	bne	223e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe790>
   22400:	ldrb	r3, [r4, #37]	; 0x25
   22404:	tst	r3, #4
   22408:	beq	223e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe790>
   2240c:	mov	r0, r4
   22410:	bl	2f71c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bac4>
   22414:	ldr	r3, [r4, #16]
   22418:	mov	r1, #1
   2241c:	subs	r0, r3, #0
   22420:	beq	223e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe790>
   22424:	bl	13ae4 <bfd_check_format@plt>
   22428:	cmp	r0, #0
   2242c:	beq	223e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe790>
   22430:	ldr	r3, [r4, #16]
   22434:	ldr	r3, [r3, #4]
   22438:	ldr	r0, [r3]
   2243c:	cmp	r0, #0
   22440:	popne	{r4, r5, r6, pc}
   22444:	ldr	r4, [r4, #24]
   22448:	cmp	r4, #0
   2244c:	bne	223f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe79c>
   22450:	ldr	r0, [r5]
   22454:	pop	{r4, r5, r6, pc}
   22458:	mov	r0, r2
   2245c:	pop	{r4, r5, r6, pc}
   22460:	andeq	r8, ip, r4, rrx
   22464:	andeq	r7, ip, r8, lsr #23
   22468:	ldrdeq	r8, [ip], -ip
   2246c:	ldr	r3, [r0, #4]
   22470:	cmp	r3, #10
   22474:	beq	225ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe994>
   22478:	cmp	r3, #11
   2247c:	bxne	lr
   22480:	push	{r4, r5, r6, r7, r8, lr}
   22484:	mov	r4, r0
   22488:	ldr	r5, [pc, #736]	; 22770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb18>
   2248c:	ldr	r3, [r5, #48]	; 0x30
   22490:	cmp	r3, #0
   22494:	beq	224a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe84c>
   22498:	ldr	r1, [pc, #724]	; 22774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb1c>
   2249c:	ldr	r0, [pc, #724]	; 22778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb20>
   224a0:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   224a4:	ldr	r7, [r4, #8]
   224a8:	bl	223a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe750>
   224ac:	ldr	r8, [pc, #712]	; 2277c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb24>
   224b0:	ldr	r6, [pc, #712]	; 22780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb28>
   224b4:	ldr	r3, [r8, #48]	; 0x30
   224b8:	cmp	r3, #0
   224bc:	mov	r1, r0
   224c0:	str	r0, [r6]
   224c4:	bne	22680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea28>
   224c8:	ldr	r8, [pc, #692]	; 22784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb2c>
   224cc:	mov	r0, r7
   224d0:	bl	13940 <bfd_openw@plt>
   224d4:	cmp	r0, #0
   224d8:	mov	r4, r0
   224dc:	str	r0, [r5, #48]	; 0x30
   224e0:	beq	22700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeaa8>
   224e4:	mov	r3, #1
   224e8:	mov	r0, r4
   224ec:	mov	r1, r3
   224f0:	str	r3, [r8, #256]	; 0x100
   224f4:	bl	13754 <bfd_set_format@plt>
   224f8:	cmp	r0, #0
   224fc:	beq	22668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea10>
   22500:	ldr	r0, [r5, #48]	; 0x30
   22504:	ldr	r2, [pc, #636]	; 22788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb30>
   22508:	ldr	r1, [pc, #636]	; 2278c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb34>
   2250c:	ldr	r3, [r0, #4]
   22510:	ldr	r2, [r2]
   22514:	ldr	r1, [r1]
   22518:	ldr	r3, [r3, #340]	; 0x154
   2251c:	blx	r3
   22520:	cmp	r0, #0
   22524:	beq	22650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9f8>
   22528:	ldr	r3, [r5, #48]	; 0x30
   2252c:	mov	r0, r3
   22530:	ldr	r3, [r3, #4]
   22534:	ldr	r3, [r3, #360]	; 0x168
   22538:	blx	r3
   2253c:	cmp	r0, #0
   22540:	str	r0, [r5, #28]
   22544:	beq	226ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea94>
   22548:	ldr	r3, [pc, #576]	; 22790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb38>
   2254c:	ldr	r0, [r5, #48]	; 0x30
   22550:	ldr	r1, [r3]
   22554:	bl	13934 <bfd_set_gp_size@plt>
   22558:	bl	2d37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19724>
   2255c:	ldr	r2, [pc, #560]	; 22794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb3c>
   22560:	ldr	r0, [r5, #48]	; 0x30
   22564:	ldr	r3, [r2]
   22568:	cmp	r3, #0
   2256c:	bne	225fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9a4>
   22570:	ldr	r3, [r0, #40]	; 0x28
   22574:	ldr	lr, [pc, #540]	; 22798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb40>
   22578:	and	lr, lr, r3, lsr #5
   2257c:	ldr	r1, [pc, #536]	; 2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb44>
   22580:	ldr	r3, [r0, #40]	; 0x28
   22584:	ldr	ip, [pc, #532]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   22588:	and	r1, r1, lr
   2258c:	and	ip, ip, r3
   22590:	orr	r3, ip, r1, lsl #5
   22594:	str	r3, [r0, #40]	; 0x28
   22598:	ldr	r2, [r2, #48]	; 0x30
   2259c:	cmp	r2, #0
   225a0:	orrne	r2, r1, #128	; 0x80
   225a4:	ldreq	r2, [pc, #504]	; 227a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb4c>
   225a8:	ldrne	ip, [pc, #496]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   225ac:	ldreq	ip, [pc, #492]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   225b0:	andeq	r2, r2, r1
   225b4:	and	ip, ip, r3
   225b8:	orr	r3, ip, r2, lsl #5
   225bc:	str	r3, [r0, #40]	; 0x28
   225c0:	ldrb	r1, [r5, #4]
   225c4:	tst	r1, #32
   225c8:	beq	22634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9dc>
   225cc:	orr	r2, r2, #1024	; 0x400
   225d0:	bic	r2, r2, #-16777216	; 0xff000000
   225d4:	ldr	r1, [pc, #452]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   225d8:	bic	r2, r2, #15728640	; 0xf00000
   225dc:	and	r1, r1, r3
   225e0:	orr	r2, r1, r2, lsl #5
   225e4:	str	r2, [r0, #40]	; 0x28
   225e8:	pop	{r4, r5, r6, r7, r8, pc}
   225ec:	ldr	r3, [pc, #400]	; 22784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb2c>
   225f0:	ldr	r2, [r0, #8]
   225f4:	str	r2, [r3, #252]	; 0xfc
   225f8:	bx	lr
   225fc:	ldrb	r3, [r5]
   22600:	ldr	ip, [r0, #40]	; 0x28
   22604:	ldr	r1, [pc, #396]	; 22798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb40>
   22608:	and	r3, r3, #3
   2260c:	and	r1, r1, ip, lsr #5
   22610:	cmp	r3, #2
   22614:	mov	lr, r1
   22618:	beq	2257c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe924>
   2261c:	ldr	r3, [pc, #380]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   22620:	orr	r1, r1, #256	; 0x100
   22624:	and	r3, r3, ip
   22628:	orr	r3, r3, r1, lsl #5
   2262c:	str	r3, [r0, #40]	; 0x28
   22630:	b	22598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe940>
   22634:	ldr	ip, [pc, #364]	; 227a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb50>
   22638:	ldr	r1, [pc, #352]	; 227a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   2263c:	and	ip, ip, r2
   22640:	and	r1, r1, r3
   22644:	orr	r1, r1, ip, lsl #5
   22648:	str	r1, [r0, #40]	; 0x28
   2264c:	pop	{r4, r5, r6, r7, r8, pc}
   22650:	mov	r2, #5
   22654:	ldr	r1, [pc, #336]	; 227ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb54>
   22658:	bl	13460 <dcgettext@plt>
   2265c:	mov	r1, r7
   22660:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   22664:	b	22528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8d0>
   22668:	mov	r2, #5
   2266c:	ldr	r1, [pc, #316]	; 227b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb58>
   22670:	bl	13460 <dcgettext@plt>
   22674:	mov	r1, r7
   22678:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2267c:	b	22500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8a8>
   22680:	ldr	r0, [pc, #300]	; 227b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb5c>
   22684:	bl	13898 <bfd_iterate_over_targets@plt>
   22688:	subs	r1, r0, #0
   2268c:	beq	226e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea8c>
   22690:	ldr	r3, [r8, #48]	; 0x30
   22694:	ldr	r2, [r1, #8]
   22698:	subs	r3, r3, #1
   2269c:	movne	r3, #1
   226a0:	cmp	r2, r3
   226a4:	beq	226e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea8c>
   226a8:	ldr	r2, [r1, #444]	; 0x1bc
   226ac:	cmp	r2, #0
   226b0:	beq	226c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea68>
   226b4:	ldr	r0, [r2, #8]
   226b8:	cmp	r0, r3
   226bc:	beq	22748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeaf0>
   226c0:	ldr	r8, [pc, #188]	; 22784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb2c>
   226c4:	ldr	r0, [pc, #236]	; 227b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb60>
   226c8:	bl	13898 <bfd_iterate_over_targets@plt>
   226cc:	ldr	r0, [r8, #76]	; 0x4c
   226d0:	cmp	r0, #0
   226d4:	beq	22758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb00>
   226d8:	ldr	r1, [r0]
   226dc:	str	r1, [r6]
   226e0:	b	224cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe874>
   226e4:	ldr	r1, [r6]
   226e8:	b	224c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe870>
   226ec:	mov	r2, #5
   226f0:	ldr	r1, [pc, #196]	; 227bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb64>
   226f4:	bl	13460 <dcgettext@plt>
   226f8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   226fc:	b	22548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8f0>
   22700:	bl	13550 <bfd_get_error@plt>
   22704:	cmp	r0, #2
   22708:	beq	2272c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xead4>
   2270c:	mov	r2, #5
   22710:	ldr	r1, [pc, #168]	; 227c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb68>
   22714:	mov	r0, #0
   22718:	bl	13460 <dcgettext@plt>
   2271c:	mov	r1, r7
   22720:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   22724:	ldr	r4, [r5, #48]	; 0x30
   22728:	b	224e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe88c>
   2272c:	mov	r0, r4
   22730:	mov	r2, #5
   22734:	ldr	r1, [pc, #136]	; 227c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb6c>
   22738:	bl	13460 <dcgettext@plt>
   2273c:	ldr	r1, [r6]
   22740:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   22744:	b	2270c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeab4>
   22748:	ldr	r1, [r2]
   2274c:	ldr	r8, [pc, #48]	; 22784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb2c>
   22750:	str	r1, [r6]
   22754:	b	224cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe874>
   22758:	ldr	r1, [pc, #104]	; 227c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb70>
   2275c:	mov	r2, #5
   22760:	bl	13460 <dcgettext@plt>
   22764:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   22768:	ldr	r1, [r6]
   2276c:	b	224cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe874>
   22770:	andeq	r8, ip, ip, lsl #1
   22774:	andeq	r0, r0, lr, ror ip
   22778:	andeq	pc, r4, r8, rrx
   2277c:	andeq	r8, ip, r8, lsl r1
   22780:	andeq	r8, ip, r4, rrx
   22784:	andeq	r7, ip, r8, lsr #23
   22788:	andeq	r8, ip, r4, asr r2
   2278c:	andeq	r8, ip, r0, asr r2
   22790:	andeq	r7, ip, r4, lsl #8
   22794:	andeq	r8, ip, r4, ror r1
   22798:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   2279c:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   227a0:	mcr2	0, 0, r0, cr0, cr15, {0}
   227a4:	andeq	pc, pc, pc, ror pc	; <UNPREDICTABLE>
   227a8:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   227ac:	andeq	pc, r4, r8, ror sl	; <UNPREDICTABLE>
   227b0:	andeq	pc, r4, r0, asr sl	; <UNPREDICTABLE>
   227b4:	andeq	ip, r1, ip, lsr #24
   227b8:	andeq	lr, r1, r0, lsr #19
   227bc:	andeq	pc, r4, ip, ror r8	; <UNPREDICTABLE>
   227c0:	andeq	pc, r4, r8, lsr #20
   227c4:	andeq	pc, r4, ip, lsl #20
   227c8:	andeq	pc, r4, r0, asr #19
   227cc:	ldr	r3, [pc, #88]	; 2282c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebd4>
   227d0:	push	{r4, r5, r6, lr}
   227d4:	mov	r5, r0
   227d8:	ldr	r2, [r3]
   227dc:	mov	r0, #8
   227e0:	orrs	r2, r1, r2
   227e4:	movne	r2, #1
   227e8:	moveq	r2, #0
   227ec:	str	r2, [r3]
   227f0:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   227f4:	ldr	r3, [pc, #52]	; 22830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebd8>
   227f8:	ldr	r2, [r3, #260]	; 0x104
   227fc:	mov	r4, r0
   22800:	mov	r0, r5
   22804:	str	r2, [r4]
   22808:	str	r4, [r3, #260]	; 0x104
   2280c:	bl	135a4 <xstrdup@plt>
   22810:	ldr	r3, [pc, #28]	; 22834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebdc>
   22814:	ldr	r3, [r3, #48]	; 0x30
   22818:	cmp	r3, #0
   2281c:	str	r0, [r4, #4]
   22820:	popeq	{r4, r5, r6, pc}
   22824:	pop	{r4, r5, r6, lr}
   22828:	b	1d294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x963c>
   2282c:	andeq	r8, ip, r0, asr #32
   22830:	andeq	r7, ip, r8, lsr #23
   22834:	andeq	r8, ip, ip, lsl #1
   22838:	push	{r4, r5, r6, lr}
   2283c:	mov	r1, #1
   22840:	mov	r6, r0
   22844:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   22848:	mov	r0, #8
   2284c:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   22850:	ldr	r5, [pc, #28]	; 22874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec1c>
   22854:	ldr	r3, [r5, #268]	; 0x10c
   22858:	mov	r4, r0
   2285c:	mov	r0, r6
   22860:	str	r3, [r4, #4]
   22864:	bl	1346c <strdup@plt>
   22868:	str	r4, [r5, #268]	; 0x10c
   2286c:	str	r0, [r4]
   22870:	pop	{r4, r5, r6, pc}
   22874:	andeq	r7, ip, r8, lsr #23
   22878:	ldr	r0, [pc, #76]	; 228cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec74>
   2287c:	ldr	r1, [r0, #244]	; 0xf4
   22880:	cmp	r1, #0
   22884:	bxne	lr
   22888:	ldr	r3, [pc, #64]	; 228d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec78>
   2288c:	ldr	r3, [r3]
   22890:	cmp	r3, #0
   22894:	beq	228c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec68>
   22898:	ldr	r2, [r3, #72]	; 0x48
   2289c:	cmp	r2, #0
   228a0:	blt	228b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec5c>
   228a4:	ldr	r2, [r3, #28]
   228a8:	cmp	r2, #0
   228ac:	strne	r1, [r2, #160]	; 0xa0
   228b0:	strne	r1, [r2, #164]	; 0xa4
   228b4:	ldr	r3, [r3, #16]
   228b8:	cmp	r3, #0
   228bc:	bne	22898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec40>
   228c0:	mov	r3, #1
   228c4:	str	r3, [r0, #244]	; 0xf4
   228c8:	bx	lr
   228cc:	andeq	r7, ip, r8, lsr #23
   228d0:	andeq	r8, ip, r8, rrx
   228d4:	ldr	r3, [pc, #144]	; 2296c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed14>
   228d8:	push	{r4, r5, r6, r7, r8, lr}
   228dc:	cmp	r1, #0
   228e0:	ldr	r7, [pc, #136]	; 22970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed18>
   228e4:	ldr	r3, [r3]
   228e8:	mov	r4, r0
   228ec:	ldr	r8, [r7, #80]	; 0x50
   228f0:	str	r3, [r7, #80]	; 0x50
   228f4:	blt	2293c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xece4>
   228f8:	cmp	r0, #0
   228fc:	beq	22934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecdc>
   22900:	subs	r5, r1, #1
   22904:	bcc	22934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecdc>
   22908:	ldr	r6, [pc, #100]	; 22974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed1c>
   2290c:	b	22918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecc0>
   22910:	cmn	r5, #1
   22914:	beq	22934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecdc>
   22918:	mov	r0, r4
   2291c:	ldr	r1, [r6]
   22920:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   22924:	ldr	r4, [r4]
   22928:	sub	r5, r5, #1
   2292c:	cmp	r4, #0
   22930:	bne	22910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecb8>
   22934:	str	r8, [r7, #80]	; 0x50
   22938:	pop	{r4, r5, r6, r7, r8, pc}
   2293c:	ldr	r3, [pc, #48]	; 22974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed1c>
   22940:	cmp	r0, #0
   22944:	ldr	r5, [r3]
   22948:	beq	22934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecdc>
   2294c:	mov	r0, r4
   22950:	mov	r1, r5
   22954:	bl	1df54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2fc>
   22958:	ldr	r4, [r4]
   2295c:	cmp	r4, #0
   22960:	bne	2294c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecf4>
   22964:	str	r8, [r7, #80]	; 0x50
   22968:	pop	{r4, r5, r6, r7, r8, pc}
   2296c:	andeq	r7, ip, r8, asr #14
   22970:	andeq	r8, ip, r4, ror r1
   22974:	andeq	r8, ip, r4, asr r0
   22978:	push	{r4, r5, r6, lr}
   2297c:	ldr	r1, [sp, #16]
   22980:	cmp	r1, #0
   22984:	bne	22a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedb4>
   22988:	cmp	r3, #0
   2298c:	cmpne	r2, #0
   22990:	beq	22a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedac>
   22994:	ldr	r1, [pc, #120]	; 22a14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedbc>
   22998:	ldr	r1, [r1, #68]	; 0x44
   2299c:	cmp	r1, #0
   229a0:	beq	229b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed60>
   229a4:	ldr	r1, [r2, #20]
   229a8:	ldr	r0, [r3, #20]
   229ac:	eor	r1, r1, r0
   229b0:	tst	r1, #16
   229b4:	bne	22a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedb4>
   229b8:	mov	r4, r3
   229bc:	mov	r3, r2
   229c0:	mov	r2, #0
   229c4:	mov	r1, r2
   229c8:	ldr	r0, [r3]
   229cc:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   229d0:	mov	r2, #0
   229d4:	mov	r1, r2
   229d8:	mov	r5, r0
   229dc:	ldr	r0, [r4]
   229e0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   229e4:	cmp	r0, #0
   229e8:	cmpne	r5, #0
   229ec:	beq	22a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedac>
   229f0:	ldr	r3, [r5, #32]
   229f4:	ldr	r0, [r0, #32]
   229f8:	subs	r0, r3, r0
   229fc:	movne	r0, #1
   22a00:	pop	{r4, r5, r6, pc}
   22a04:	mov	r0, #0
   22a08:	pop	{r4, r5, r6, pc}
   22a0c:	mov	r0, #1
   22a10:	pop	{r4, r5, r6, pc}
   22a14:	andeq	r8, ip, r4, ror r1
   22a18:	ldr	ip, [pc, #52]	; 22a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedfc>
   22a1c:	ldr	r2, [pc, #52]	; 22a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee00>
   22a20:	push	{lr}		; (str lr, [sp, #-4]!)
   22a24:	sub	sp, sp, #12
   22a28:	ldr	lr, [ip, #240]	; 0xf0
   22a2c:	mov	r3, #0
   22a30:	strd	r0, [sp]
   22a34:	add	lr, lr, #1
   22a38:	ldr	r1, [r2]
   22a3c:	add	r0, ip, #140	; 0x8c
   22a40:	mov	r2, r3
   22a44:	str	lr, [ip, #240]	; 0xf0
   22a48:	bl	200f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc49c>
   22a4c:	add	sp, sp, #12
   22a50:	pop	{pc}		; (ldr pc, [sp], #4)
   22a54:	andeq	r7, ip, r8, lsr #23
   22a58:	andeq	r8, ip, r4, asr r0
   22a5c:	ldr	ip, [pc, #80]	; 22ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee5c>
   22a60:	ldr	r3, [pc, #80]	; 22ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee60>
   22a64:	ldr	r1, [pc, #80]	; 22abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee64>
   22a68:	ldr	r2, [ip, #240]	; 0xf0
   22a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   22a70:	sub	sp, sp, #20
   22a74:	mov	lr, #0
   22a78:	str	r0, [r3]
   22a7c:	add	r2, r2, #1
   22a80:	add	r3, sp, #12
   22a84:	ldr	r1, [r1]
   22a88:	str	r2, [ip, #240]	; 0xf0
   22a8c:	str	r3, [sp]
   22a90:	ldr	r0, [ip, #140]	; 0x8c
   22a94:	mov	r3, lr
   22a98:	mov	r2, lr
   22a9c:	str	lr, [ip]
   22aa0:	str	lr, [sp, #12]
   22aa4:	str	lr, [ip, #4]
   22aa8:	bl	1ce40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x91e8>
   22aac:	add	sp, sp, #20
   22ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   22ab4:	andeq	r7, ip, r8, lsr #23
   22ab8:	strdeq	r8, [ip], -r4
   22abc:	andeq	r8, ip, r4, asr r0
   22ac0:	ldr	r3, [pc, #632]	; 22d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0e8>
   22ac4:	ldr	r0, [r3]
   22ac8:	cmp	r0, #0
   22acc:	beq	22b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef0c>
   22ad0:	ldr	r2, [r3, #4]
   22ad4:	cmp	r2, #0
   22ad8:	bne	22b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef0c>
   22adc:	ldr	ip, [pc, #608]	; 22d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0ec>
   22ae0:	ldr	r0, [r0, #28]
   22ae4:	cmp	r0, #0
   22ae8:	ldr	ip, [ip, #48]	; 0x30
   22aec:	beq	22c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeff8>
   22af0:	ldr	r1, [pc, #592]	; 22d48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f0>
   22af4:	b	22b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeeac>
   22af8:	ldr	r0, [r0, #16]
   22afc:	cmp	r0, #0
   22b00:	beq	22c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeff8>
   22b04:	ldr	r3, [r0, #20]
   22b08:	and	r2, r3, r1
   22b0c:	cmp	r2, #1
   22b10:	bne	22af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeea0>
   22b14:	ldr	r2, [r0, #12]
   22b18:	cmp	r2, #0
   22b1c:	beq	22c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefe0>
   22b20:	ldr	r2, [r2, #16]
   22b24:	cmp	r2, r0
   22b28:	bne	22af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeea0>
   22b2c:	ldr	r2, [pc, #536]	; 22d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f4>
   22b30:	and	r3, r3, r2
   22b34:	cmp	r3, #1
   22b38:	bne	22b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeef8>
   22b3c:	bx	lr
   22b40:	ldr	r3, [r0, #20]
   22b44:	and	r3, r3, r2
   22b48:	cmp	r3, #1
   22b4c:	bxeq	lr
   22b50:	ldr	r0, [r0, #12]
   22b54:	cmp	r0, #0
   22b58:	bne	22b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeee8>
   22b5c:	ldr	r0, [pc, #492]	; 22d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f8>
   22b60:	bx	lr
   22b64:	ldr	r3, [r3, #12]
   22b68:	push	{lr}		; (str lr, [sp, #-4]!)
   22b6c:	cmp	r3, #0
   22b70:	bne	22b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef2c>
   22b74:	b	22c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf00c>
   22b78:	ldr	r3, [r3]
   22b7c:	cmp	r3, #0
   22b80:	beq	22c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf00c>
   22b84:	ldr	r2, [r3, #4]
   22b88:	cmp	r2, #0
   22b8c:	bne	22b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef20>
   22b90:	ldrb	r2, [r3, #84]	; 0x54
   22b94:	tst	r2, #32
   22b98:	bne	22c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf01c>
   22b9c:	ldr	ip, [pc, #416]	; 22d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0ec>
   22ba0:	ldr	lr, [ip, #48]	; 0x30
   22ba4:	b	22bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef74>
   22ba8:	ldr	r1, [r1, #16]
   22bac:	cmp	r2, r1
   22bb0:	beq	22bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefa4>
   22bb4:	ldr	r3, [r3, #16]
   22bb8:	cmp	r3, #0
   22bbc:	beq	22c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf014>
   22bc0:	ldrb	r2, [r3, #84]	; 0x54
   22bc4:	tst	r2, #32
   22bc8:	bne	22c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf01c>
   22bcc:	ldr	r2, [r3, #28]
   22bd0:	cmp	r2, #0
   22bd4:	beq	22bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef5c>
   22bd8:	ldr	r1, [r2, #20]
   22bdc:	tst	r1, #32768	; 0x8000
   22be0:	bne	22bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef5c>
   22be4:	ldr	r1, [r2, #12]
   22be8:	cmp	r1, #0
   22bec:	bne	22ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef50>
   22bf0:	ldr	r1, [lr, #104]	; 0x68
   22bf4:	cmp	r2, r1
   22bf8:	bne	22bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef5c>
   22bfc:	cmp	r0, #0
   22c00:	bne	22d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0a8>
   22c04:	ldr	r0, [r3, #28]
   22c08:	cmp	r0, #0
   22c0c:	beq	22c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefd8>
   22c10:	ldr	r2, [pc, #308]	; 22d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f4>
   22c14:	ldr	r3, [r0, #20]
   22c18:	and	r3, r3, r2
   22c1c:	cmp	r3, #1
   22c20:	popeq	{pc}		; (ldreq pc, [sp], #4)
   22c24:	ldr	r0, [r0, #16]
   22c28:	cmp	r0, #0
   22c2c:	bne	22c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefbc>
   22c30:	ldr	r0, [pc, #280]	; 22d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f8>
   22c34:	pop	{pc}		; (ldr pc, [sp], #4)
   22c38:	ldr	r2, [ip, #104]	; 0x68
   22c3c:	cmp	r2, r0
   22c40:	beq	22b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeed4>
   22c44:	ldr	r0, [r0, #16]
   22c48:	cmp	r0, #0
   22c4c:	bne	22b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeeac>
   22c50:	ldr	r0, [ip, #100]	; 0x64
   22c54:	cmp	r0, #0
   22c58:	beq	22b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef04>
   22c5c:	ldr	r3, [r0, #20]
   22c60:	b	22b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeed4>
   22c64:	ldr	r3, [pc, #216]	; 22d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0ec>
   22c68:	ldr	lr, [r3, #48]	; 0x30
   22c6c:	ldr	r0, [lr, #104]	; 0x68
   22c70:	b	22c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefb0>
   22c74:	cmp	r0, #0
   22c78:	beq	22c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefac>
   22c7c:	ldr	ip, [pc, #192]	; 22d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0ec>
   22c80:	ldr	r0, [r0, #28]
   22c84:	ldr	ip, [ip, #48]	; 0x30
   22c88:	cmp	r0, #0
   22c8c:	beq	22d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0d4>
   22c90:	ldr	r1, [pc, #176]	; 22d48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f0>
   22c94:	b	22ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf04c>
   22c98:	ldr	r0, [r0, #16]
   22c9c:	cmp	r0, #0
   22ca0:	beq	22d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0d4>
   22ca4:	ldr	r3, [r0, #20]
   22ca8:	and	r2, r3, r1
   22cac:	cmp	r2, #1
   22cb0:	bne	22c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf040>
   22cb4:	ldr	r2, [r0, #12]
   22cb8:	cmp	r2, #0
   22cbc:	beq	22d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0bc>
   22cc0:	ldr	r2, [r2, #16]
   22cc4:	cmp	r2, r0
   22cc8:	bne	22c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf040>
   22ccc:	ldr	r2, [pc, #120]	; 22d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0f4>
   22cd0:	and	r3, r3, r2
   22cd4:	cmp	r3, #1
   22cd8:	bne	22cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf098>
   22cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   22ce0:	ldr	r3, [r0, #20]
   22ce4:	and	r3, r3, r2
   22ce8:	cmp	r3, #1
   22cec:	popeq	{pc}		; (ldreq pc, [sp], #4)
   22cf0:	ldr	r0, [r0, #12]
   22cf4:	cmp	r0, #0
   22cf8:	bne	22ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf088>
   22cfc:	b	22c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefd8>
   22d00:	ldrb	r2, [r3, #84]	; 0x54
   22d04:	tst	r2, #32
   22d08:	bne	22c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf028>
   22d0c:	ldr	r0, [r3, #28]
   22d10:	b	22c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefb0>
   22d14:	ldr	r2, [ip, #104]	; 0x68
   22d18:	cmp	r2, r0
   22d1c:	beq	22ccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf074>
   22d20:	ldr	r0, [r0, #16]
   22d24:	cmp	r0, #0
   22d28:	bne	22ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf04c>
   22d2c:	ldr	r0, [ip, #100]	; 0x64
   22d30:	cmp	r0, #0
   22d34:	beq	22c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefd8>
   22d38:	ldr	r3, [r0, #20]
   22d3c:	b	22ccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf074>
   22d40:	andeq	r7, ip, r8, lsr #23
   22d44:	andeq	r8, ip, ip, lsl #1
   22d48:	andeq	r8, r0, r1, lsl #8
   22d4c:	andeq	r0, r0, r1, lsl #8
   22d50:	andeq	r7, ip, r8, lsr #17
   22d54:	push	{r4, r5, r6, r7, r8, lr}
   22d58:	subs	r6, r2, #0
   22d5c:	ldrb	r3, [r1]
   22d60:	addeq	r5, r0, #36	; 0x24
   22d64:	addne	r5, r0, #40	; 0x28
   22d68:	cmp	r3, #0
   22d6c:	mov	r8, r0
   22d70:	mov	r4, r1
   22d74:	popeq	{r4, r5, r6, r7, r8, pc}
   22d78:	ldr	r7, [pc, #512]	; 22f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf328>
   22d7c:	sub	r3, r3, #33	; 0x21
   22d80:	cmp	r3, #87	; 0x57
   22d84:	ldrls	pc, [pc, r3, lsl #2]
   22d88:	b	22f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf308>
   22d8c:	andeq	r2, r2, r8, asr #30
   22d90:	andeq	r2, r2, r0, ror #30
   22d94:	andeq	r2, r2, r0, ror #30
   22d98:	andeq	r2, r2, r0, ror #30
   22d9c:	andeq	r2, r2, r0, ror #30
   22da0:	andeq	r2, r2, r0, ror #30
   22da4:	andeq	r2, r2, r0, ror #30
   22da8:	andeq	r2, r2, r0, ror #30
   22dac:	andeq	r2, r2, r0, ror #30
   22db0:	andeq	r2, r2, r0, ror #30
   22db4:	andeq	r2, r2, r0, ror #30
   22db8:	andeq	r2, r2, r0, ror #30
   22dbc:	andeq	r2, r2, r0, ror #30
   22dc0:	andeq	r2, r2, r0, ror #30
   22dc4:	andeq	r2, r2, r0, ror #30
   22dc8:	andeq	r2, r2, r0, ror #30
   22dcc:	andeq	r2, r2, r0, ror #30
   22dd0:	andeq	r2, r2, r0, ror #30
   22dd4:	andeq	r2, r2, r0, ror #30
   22dd8:	andeq	r2, r2, r0, ror #30
   22ddc:	andeq	r2, r2, r0, ror #30
   22de0:	andeq	r2, r2, r0, ror #30
   22de4:	andeq	r2, r2, r0, ror #30
   22de8:	andeq	r2, r2, r0, ror #30
   22dec:	andeq	r2, r2, r0, ror #30
   22df0:	andeq	r2, r2, r0, ror #30
   22df4:	andeq	r2, r2, r0, ror #30
   22df8:	andeq	r2, r2, r0, ror #30
   22dfc:	andeq	r2, r2, r0, ror #30
   22e00:	andeq	r2, r2, r0, ror #30
   22e04:	andeq	r2, r2, r0, ror #30
   22e08:	andeq	r2, r2, r0, ror #30
   22e0c:	andeq	r2, r2, r8, lsr pc
   22e10:	andeq	r2, r2, r0, ror #30
   22e14:	andeq	r2, r2, r0, ror #30
   22e18:	andeq	r2, r2, r0, ror #30
   22e1c:	andeq	r2, r2, r0, ror #30
   22e20:	andeq	r2, r2, r0, ror #30
   22e24:	andeq	r2, r2, r0, ror #30
   22e28:	andeq	r2, r2, r0, ror #30
   22e2c:	andeq	r2, r2, r8, lsr #30
   22e30:	andeq	r2, r2, r0, ror #30
   22e34:	andeq	r2, r2, r0, ror #30
   22e38:	andeq	r2, r2, r8, lsr #30
   22e3c:	andeq	r2, r2, r0, ror #30
   22e40:	andeq	r2, r2, r0, ror #30
   22e44:	andeq	r2, r2, r0, ror #30
   22e48:	andeq	r2, r2, r0, ror #30
   22e4c:	andeq	r2, r2, r0, ror #30
   22e50:	andeq	r2, r2, r8, lsl pc
   22e54:	andeq	r2, r2, r0, ror #30
   22e58:	andeq	r2, r2, r0, ror #30
   22e5c:	andeq	r2, r2, r0, ror #30
   22e60:	andeq	r2, r2, r0, ror #30
   22e64:	andeq	r2, r2, r8, lsl #30
   22e68:	andeq	r2, r2, ip, ror #29
   22e6c:	andeq	r2, r2, r0, ror #30
   22e70:	andeq	r2, r2, r0, ror #30
   22e74:	andeq	r2, r2, r0, ror #30
   22e78:	andeq	r2, r2, r0, ror #30
   22e7c:	andeq	r2, r2, r0, ror #30
   22e80:	andeq	r2, r2, r0, ror #30
   22e84:	andeq	r2, r2, r0, ror #30
   22e88:	andeq	r2, r2, r0, ror #30
   22e8c:	andeq	r2, r2, r8, lsr pc
   22e90:	andeq	r2, r2, r0, ror #30
   22e94:	andeq	r2, r2, r0, ror #30
   22e98:	andeq	r2, r2, r0, ror #30
   22e9c:	andeq	r2, r2, r0, ror #30
   22ea0:	andeq	r2, r2, r0, ror #30
   22ea4:	andeq	r2, r2, r0, ror #30
   22ea8:	andeq	r2, r2, r0, ror #30
   22eac:	andeq	r2, r2, r8, lsr #30
   22eb0:	andeq	r2, r2, r0, ror #30
   22eb4:	andeq	r2, r2, r0, ror #30
   22eb8:	andeq	r2, r2, r8, lsr #30
   22ebc:	andeq	r2, r2, r0, ror #30
   22ec0:	andeq	r2, r2, r0, ror #30
   22ec4:	andeq	r2, r2, r0, ror #30
   22ec8:	andeq	r2, r2, r0, ror #30
   22ecc:	andeq	r2, r2, r0, ror #30
   22ed0:	andeq	r2, r2, r8, lsl pc
   22ed4:	andeq	r2, r2, r0, ror #30
   22ed8:	andeq	r2, r2, r0, ror #30
   22edc:	andeq	r2, r2, r0, ror #30
   22ee0:	andeq	r2, r2, r0, ror #30
   22ee4:	andeq	r2, r2, r8, lsl #30
   22ee8:	andeq	r2, r2, ip, ror #29
   22eec:	ldr	r3, [r5]
   22ef0:	orr	r3, r3, #16
   22ef4:	str	r3, [r5]
   22ef8:	ldrb	r3, [r4, #1]!
   22efc:	cmp	r3, #0
   22f00:	bne	22d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf124>
   22f04:	pop	{r4, r5, r6, r7, r8, pc}
   22f08:	ldr	r3, [r5]
   22f0c:	orr	r3, r3, #32
   22f10:	str	r3, [r5]
   22f14:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f18:	ldr	r3, [r5]
   22f1c:	orr	r3, r3, #8
   22f20:	str	r3, [r5]
   22f24:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f28:	ldr	r3, [r5]
   22f2c:	orr	r3, r3, #2
   22f30:	str	r3, [r5]
   22f34:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f38:	ldr	r3, [r5]
   22f3c:	orr	r3, r3, #1
   22f40:	str	r3, [r5]
   22f44:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f48:	cmp	r6, #0
   22f4c:	addeq	r5, r8, #40	; 0x28
   22f50:	moveq	r6, #1
   22f54:	addne	r5, r8, #36	; 0x24
   22f58:	movne	r6, #0
   22f5c:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f60:	mov	r1, r7
   22f64:	mov	r2, #5
   22f68:	mov	r0, #0
   22f6c:	bl	13460 <dcgettext@plt>
   22f70:	ldrb	r2, [r4]
   22f74:	mov	r1, r2
   22f78:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   22f7c:	b	22ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2a0>
   22f80:	andeq	pc, r4, r0, lsr #21
   22f84:	ldr	r3, [pc, #40]	; 22fb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf35c>
   22f88:	push	{r4, r5, r6, lr}
   22f8c:	ldr	r4, [r3]
   22f90:	cmp	r4, #0
   22f94:	popeq	{r4, r5, r6, pc}
   22f98:	mov	r5, r0
   22f9c:	mov	r0, r4
   22fa0:	blx	r5
   22fa4:	ldr	r4, [r4, #28]
   22fa8:	cmp	r4, #0
   22fac:	bne	22f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf344>
   22fb0:	pop	{r4, r5, r6, pc}
   22fb4:	andeq	r8, ip, ip, asr #32
   22fb8:	ldr	r3, [pc, #40]	; 22fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf390>
   22fbc:	push	{r4, r5, r6, lr}
   22fc0:	ldr	r4, [r3, #224]	; 0xe0
   22fc4:	cmp	r4, #0
   22fc8:	popeq	{r4, r5, r6, pc}
   22fcc:	mov	r5, r0
   22fd0:	mov	r0, r4
   22fd4:	blx	r5
   22fd8:	ldr	r4, [r4, #24]
   22fdc:	cmp	r4, #0
   22fe0:	bne	22fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf378>
   22fe4:	pop	{r4, r5, r6, pc}
   22fe8:	andeq	r7, ip, r8, lsr #23
   22fec:	push	{r4, r5, r6, lr}
   22ff0:	mov	r4, r0
   22ff4:	ldr	r3, [pc, #132]	; 23080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf428>
   22ff8:	ldr	r0, [r0, #16]
   22ffc:	add	r2, r4, #24
   23000:	ldr	r1, [r3, #228]	; 0xe4
   23004:	ldr	ip, [r0, #156]	; 0x9c
   23008:	cmp	ip, #0
   2300c:	str	r4, [r1]
   23010:	str	r2, [r3, #228]	; 0xe4
   23014:	beq	23028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf3d0>
   23018:	ldr	r0, [pc, #100]	; 23084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf42c>
   2301c:	ldr	r1, [pc, #100]	; 23088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf430>
   23020:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   23024:	ldr	r0, [r4, #16]
   23028:	ldr	r5, [pc, #92]	; 2308c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf434>
   2302c:	ldr	r3, [r5, #48]	; 0x30
   23030:	cmp	r3, r0
   23034:	beq	2306c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf414>
   23038:	ldr	r1, [r5, #60]	; 0x3c
   2303c:	ldr	r2, [pc, #76]	; 23090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf438>
   23040:	add	r3, r0, #156	; 0x9c
   23044:	str	r0, [r1]
   23048:	ldr	r1, [r2]
   2304c:	str	r4, [r0, #164]	; 0xa4
   23050:	str	r3, [r5, #60]	; 0x3c
   23054:	bl	13934 <bfd_set_gp_size@plt>
   23058:	mov	r2, r4
   2305c:	ldr	r0, [r4, #16]
   23060:	ldr	r1, [pc, #44]	; 23094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf43c>
   23064:	pop	{r4, r5, r6, lr}
   23068:	b	13b20 <bfd_map_over_sections@plt>
   2306c:	ldr	r0, [pc, #16]	; 23084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf42c>
   23070:	ldr	r1, [pc, #32]	; 23098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf440>
   23074:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   23078:	ldr	r0, [r4, #16]
   2307c:	b	23038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf3e0>
   23080:	andeq	r7, ip, r8, lsr #23
   23084:	andeq	pc, r4, r8, rrx
   23088:	strdeq	r1, [r0], -r4
   2308c:	andeq	r8, ip, ip, lsl #1
   23090:	andeq	r7, ip, r4, lsl #8
   23094:	ldrdeq	sp, [r1], -ip
   23098:	strdeq	r1, [r0], -r5
   2309c:	ldrb	r3, [r0, #37]	; 0x25
   230a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230a4:	sub	sp, sp, #20
   230a8:	tst	r3, #2
   230ac:	beq	230c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf468>
   230b0:	mov	r5, #1
   230b4:	mov	r0, r5
   230b8:	add	sp, sp, #20
   230bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   230c0:	mov	r4, r0
   230c4:	mov	r5, r1
   230c8:	bl	2f71c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bac4>
   230cc:	ldrb	r3, [r4, #37]	; 0x25
   230d0:	tst	r3, #8
   230d4:	bne	230b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf458>
   230d8:	mov	r1, #2
   230dc:	ldr	r0, [r4, #16]
   230e0:	bl	13ae4 <bfd_check_format@plt>
   230e4:	cmp	r0, #0
   230e8:	beq	23280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf628>
   230ec:	mov	r0, r4
   230f0:	bl	2d4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19874>
   230f4:	cmp	r0, #0
   230f8:	bne	230b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf458>
   230fc:	ldr	r6, [r4, #16]
   23100:	ldrb	r3, [r6, #40]	; 0x28
   23104:	and	r3, r3, #7
   23108:	cmp	r3, #1
   2310c:	beq	233c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf76c>
   23110:	cmp	r3, #2
   23114:	bne	233f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7a0>
   23118:	ldr	r3, [pc, #1000]	; 23508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8b0>
   2311c:	ldr	r5, [r3, #248]	; 0xf8
   23120:	cmp	r5, #0
   23124:	beq	231c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf56c>
   23128:	ldr	sl, [pc, #988]	; 2350c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8b4>
   2312c:	b	2313c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4e4>
   23130:	ldr	r5, [r5, #4]
   23134:	cmp	r5, #0
   23138:	beq	2347c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf824>
   2313c:	ldr	r0, [r5]
   23140:	bl	137d8 <strlen@plt>
   23144:	mov	r9, r0
   23148:	ldr	r0, [r6]
   2314c:	bl	1367c <lbasename@plt>
   23150:	ldr	r8, [r5]
   23154:	mov	r1, sl
   23158:	mov	r7, r0
   2315c:	mov	r0, r8
   23160:	bl	13268 <strcmp@plt>
   23164:	cmp	r0, #0
   23168:	beq	231b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf55c>
   2316c:	mov	r0, r8
   23170:	mov	r2, r9
   23174:	mov	r1, r7
   23178:	bl	13538 <filename_ncmp@plt>
   2317c:	cmp	r0, #0
   23180:	bne	23130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4d8>
   23184:	ldrb	r3, [r7, r9]
   23188:	cmp	r3, #0
   2318c:	beq	231b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf55c>
   23190:	cmp	r3, #46	; 0x2e
   23194:	bne	23130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4d8>
   23198:	add	r7, r7, r9
   2319c:	ldrb	r3, [r7, #1]
   231a0:	cmp	r3, #97	; 0x61
   231a4:	bne	23130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4d8>
   231a8:	ldrb	r3, [r7, #2]
   231ac:	cmp	r3, #0
   231b0:	bne	23130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4d8>
   231b4:	ldrb	r3, [r6, #43]	; 0x2b
   231b8:	orr	r3, r3, #32
   231bc:	strb	r3, [r6, #43]	; 0x2b
   231c0:	ldr	r6, [r4, #16]
   231c4:	ldrb	r3, [r4, #37]	; 0x25
   231c8:	str	r4, [r6, #164]	; 0xa4
   231cc:	tst	r3, #1
   231d0:	beq	233f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7a0>
   231d4:	ldr	fp, [pc, #820]	; 23510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8b8>
   231d8:	ldr	r8, [pc, #820]	; 23514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8bc>
   231dc:	ldr	r9, [pc, #820]	; 23518 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8c0>
   231e0:	ldr	sl, [pc, #820]	; 2351c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8c4>
   231e4:	mov	r5, #1
   231e8:	mov	r7, #0
   231ec:	b	2323c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5e4>
   231f0:	ldr	r2, [r8, #24]
   231f4:	str	r7, [sp, #8]
   231f8:	add	r3, sp, #8
   231fc:	ldr	r6, [r2]
   23200:	mov	r1, r7
   23204:	mov	r2, r9
   23208:	ldr	r0, [pc, #772]	; 23514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8bc>
   2320c:	blx	r6
   23210:	cmp	r0, #0
   23214:	beq	234f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf898>
   23218:	ldr	r3, [sp, #8]
   2321c:	mov	r1, r8
   23220:	mov	r0, r3
   23224:	ldr	r3, [r3, #4]
   23228:	ldr	r3, [r3, #364]	; 0x16c
   2322c:	blx	r3
   23230:	subs	r6, r0, #0
   23234:	beq	23428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7d0>
   23238:	ldr	r6, [r4, #16]
   2323c:	mov	r1, r7
   23240:	mov	r0, r6
   23244:	bl	13af0 <bfd_openr_next_archived_file@plt>
   23248:	subs	r7, r0, #0
   2324c:	beq	23468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf810>
   23250:	mov	r1, #1
   23254:	bl	13ae4 <bfd_check_format@plt>
   23258:	subs	r6, r0, #0
   2325c:	bne	231f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf598>
   23260:	mov	r2, #5
   23264:	mov	r1, fp
   23268:	bl	13460 <dcgettext@plt>
   2326c:	mov	r2, r7
   23270:	ldr	r1, [r4, #16]
   23274:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   23278:	mov	r5, r6
   2327c:	b	231f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf598>
   23280:	add	r2, sp, #4
   23284:	mov	r1, #1
   23288:	ldr	r0, [r4, #16]
   2328c:	bl	13a24 <bfd_check_format_matches@plt>
   23290:	cmp	r0, #0
   23294:	bne	230ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf494>
   23298:	bl	13550 <bfd_get_error@plt>
   2329c:	mov	r6, r0
   232a0:	mov	r0, r4
   232a4:	bl	2d4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19850>
   232a8:	cmp	r0, #0
   232ac:	bne	230b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf458>
   232b0:	cmp	r6, #13
   232b4:	beq	234a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf850>
   232b8:	clz	r3, r5
   232bc:	lsr	r3, r3, #5
   232c0:	cmp	r6, #12
   232c4:	orrne	r3, r3, #1
   232c8:	cmp	r3, #0
   232cc:	bne	23490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf838>
   232d0:	ldr	r6, [pc, #584]	; 23520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8c8>
   232d4:	ldr	r0, [r4, #16]
   232d8:	bl	139dc <bfd_close@plt>
   232dc:	ldm	r6, {r0, r1}
   232e0:	add	r9, sp, #8
   232e4:	ldr	r7, [pc, #568]	; 23524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8cc>
   232e8:	ldrb	r8, [r6, #1]
   232ec:	mov	sl, #0
   232f0:	stm	r9, {r0, r1}
   232f4:	str	sl, [r4, #16]
   232f8:	ldr	r0, [r4, #8]
   232fc:	ldr	fp, [pc, #548]	; 23528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8d0>
   23300:	bl	2f8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc50>
   23304:	ldr	r3, [r7, #4]
   23308:	add	r2, fp, #40	; 0x28
   2330c:	lsr	r8, r8, #3
   23310:	cmp	r3, r2
   23314:	and	r8, r8, #1
   23318:	bcs	23504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8ac>
   2331c:	ldrh	r2, [r6]
   23320:	ldrh	r1, [r4, #36]	; 0x24
   23324:	ldr	r0, [r7]
   23328:	bic	r2, r2, #480	; 0x1e0
   2332c:	and	r1, r1, #480	; 0x1e0
   23330:	str	r0, [r3]
   23334:	orr	r2, r2, r1
   23338:	ldr	r0, [pc, #492]	; 2352c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8d4>
   2333c:	ldr	r1, [pc, #492]	; 23530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8d8>
   23340:	add	r3, r3, #4
   23344:	strh	r2, [r6]
   23348:	mov	r2, #1
   2334c:	str	r2, [r1]
   23350:	str	r3, [r7, #4]
   23354:	str	r2, [r0]
   23358:	str	r5, [r7]
   2335c:	bl	14af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea0>
   23360:	ldrb	r0, [r6, #1]
   23364:	ldr	r1, [pc, #452]	; 23530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8d8>
   23368:	ldrb	r2, [sp, #9]
   2336c:	ldr	r3, [r7, #4]
   23370:	str	sl, [r1]
   23374:	lsl	r1, r0, #28
   23378:	bic	r2, r2, #8
   2337c:	orr	r8, r8, r1, lsr #31
   23380:	cmp	r3, fp
   23384:	orr	r8, r2, r8, lsl #3
   23388:	strb	r8, [sp, #9]
   2338c:	ldm	r9, {r0, r1}
   23390:	stm	r6, {r0, r1}
   23394:	bls	23500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8a8>
   23398:	ldr	r5, [pc, #404]	; 23534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8dc>
   2339c:	ldr	r2, [r3, #-4]
   233a0:	sub	r3, r3, #4
   233a4:	ldr	r0, [r5]
   233a8:	strd	r2, [r7]
   233ac:	bl	13928 <fclose@plt>
   233b0:	str	sl, [r5]
   233b4:	ldrb	r3, [r4, #37]	; 0x25
   233b8:	orr	r3, r3, #2
   233bc:	strb	r3, [r4, #37]	; 0x25
   233c0:	b	230b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf458>
   233c4:	ldrb	r3, [r4, #37]	; 0x25
   233c8:	tst	r3, #16
   233cc:	beq	23484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf82c>
   233d0:	ldr	r2, [pc, #352]	; 23538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8e0>
   233d4:	ldr	r3, [pc, #352]	; 2353c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8e4>
   233d8:	ldr	r2, [r2]
   233dc:	ldr	r3, [r3]
   233e0:	orrs	r3, r2, r3
   233e4:	beq	233f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf79c>
   233e8:	mov	r1, r4
   233ec:	ldr	r0, [pc, #332]	; 23540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8e8>
   233f0:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   233f4:	ldr	r6, [r4, #16]
   233f8:	ldr	r3, [r6, #4]
   233fc:	mov	r0, r6
   23400:	ldr	r1, [pc, #268]	; 23514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8bc>
   23404:	ldr	r3, [r3, #364]	; 0x16c
   23408:	blx	r3
   2340c:	cmp	r0, #0
   23410:	beq	23444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7ec>
   23414:	ldrb	r3, [r4, #37]	; 0x25
   23418:	mov	r5, #1
   2341c:	orr	r3, r3, #2
   23420:	strb	r3, [r4, #37]	; 0x25
   23424:	b	230b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf45c>
   23428:	mov	r2, #5
   2342c:	mov	r1, sl
   23430:	bl	13460 <dcgettext@plt>
   23434:	mov	r1, r7
   23438:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2343c:	mov	r5, r6
   23440:	b	23238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5e0>
   23444:	mov	r2, #5
   23448:	ldr	r1, [pc, #204]	; 2351c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8c4>
   2344c:	bl	13460 <dcgettext@plt>
   23450:	ldr	r1, [r4, #16]
   23454:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   23458:	ldrb	r5, [r4, #37]	; 0x25
   2345c:	lsr	r5, r5, #1
   23460:	and	r5, r5, #1
   23464:	b	230b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf45c>
   23468:	ldrb	r3, [r4, #37]	; 0x25
   2346c:	bic	r3, r3, #2
   23470:	orr	r3, r3, r5, lsl #1
   23474:	strb	r3, [r4, #37]	; 0x25
   23478:	b	230b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf45c>
   2347c:	ldr	r6, [r4, #16]
   23480:	b	231c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf56c>
   23484:	mov	r0, r4
   23488:	bl	22fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf394>
   2348c:	b	233d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf778>
   23490:	mov	r2, #5
   23494:	ldr	r1, [pc, #168]	; 23544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8ec>
   23498:	bl	13460 <dcgettext@plt>
   2349c:	ldr	r1, [r4, #16]
   234a0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   234a4:	b	232d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf678>
   234a8:	mov	r2, #5
   234ac:	ldr	r1, [pc, #148]	; 23548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8f0>
   234b0:	bl	13460 <dcgettext@plt>
   234b4:	ldr	r1, [r4, #16]
   234b8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   234bc:	ldr	r6, [sp, #4]
   234c0:	ldr	r1, [r6]
   234c4:	cmp	r1, #0
   234c8:	beq	234e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf88c>
   234cc:	ldr	r7, [pc, #120]	; 2354c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8f4>
   234d0:	mov	r0, r7
   234d4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   234d8:	ldr	r1, [r6, #4]!
   234dc:	cmp	r1, #0
   234e0:	bne	234d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf878>
   234e4:	ldr	r0, [pc, #100]	; 23550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8f8>
   234e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   234ec:	b	232d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf678>
   234f0:	ldr	r2, [pc, #92]	; 23554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8fc>
   234f4:	ldr	r1, [pc, #92]	; 23558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf900>
   234f8:	ldr	r0, [pc, #92]	; 2355c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf904>
   234fc:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   23500:	bl	1f83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe4>
   23504:	bl	1f81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc4>
   23508:	andeq	r7, ip, r8, lsr #23
   2350c:	andeq	pc, r4, r0, lsr fp	; <UNPREDICTABLE>
   23510:	andeq	pc, r4, r4, lsr fp	; <UNPREDICTABLE>
   23514:	andeq	r8, ip, ip, lsl #1
   23518:	andeq	pc, r4, r8, ror #22
   2351c:	andeq	pc, r4, r8, ror fp	; <UNPREDICTABLE>
   23520:	andeq	r8, ip, r8, asr r0
   23524:	andeq	r7, ip, ip, lsr #7
   23528:	andeq	r7, ip, r0, asr #24
   2352c:	andeq	r8, ip, r0, lsr r0
   23530:	andeq	r7, ip, r0, asr sp
   23534:	andeq	r7, ip, r4, asr #21
   23538:	strdeq	r8, [ip], -r0
   2353c:	andeq	r8, ip, r4, ror #3
   23540:	andeq	pc, r4, r8, lsr #22
   23544:	andeq	pc, r4, r4, lsl #22
   23548:	andeq	pc, r4, ip, asr #21
   2354c:	andeq	fp, r4, r0, lsl #24
   23550:	andeq	pc, r4, r0, lsl #22
   23554:	andeq	pc, r4, r8, asr r0	; <UNPREDICTABLE>
   23558:	andeq	r0, r0, pc, lsr #22
   2355c:	andeq	pc, r4, r8, rrx
   23560:	ldr	r3, [pc, #136]	; 235f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf998>
   23564:	push	{r4, r5, r6, lr}
   23568:	mov	r5, r0
   2356c:	ldr	r4, [r3]
   23570:	cmp	r4, #0
   23574:	beq	235a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf948>
   23578:	ldr	r3, [r4, #12]
   2357c:	mov	r1, r5
   23580:	subs	r0, r3, #0
   23584:	beq	23594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf93c>
   23588:	bl	13394 <filename_cmp@plt>
   2358c:	cmp	r0, #0
   23590:	beq	235bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf964>
   23594:	ldr	r4, [r4, #28]
   23598:	cmp	r4, #0
   2359c:	bne	23578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf920>
   235a0:	ldr	r2, [pc, #76]	; 235f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf99c>
   235a4:	mov	r0, r5
   235a8:	mov	r3, #0
   235ac:	ldr	r2, [r2]
   235b0:	mov	r1, #4
   235b4:	bl	1fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf54>
   235b8:	mov	r4, r0
   235bc:	ldrb	r3, [r4, #37]	; 0x25
   235c0:	and	r3, r3, #6
   235c4:	cmp	r3, #4
   235c8:	beq	235d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf97c>
   235cc:	mov	r0, r4
   235d0:	pop	{r4, r5, r6, pc}
   235d4:	mov	r0, r4
   235d8:	mov	r1, #0
   235dc:	bl	2309c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf444>
   235e0:	cmp	r0, #0
   235e4:	moveq	r4, #0
   235e8:	mov	r0, r4
   235ec:	pop	{r4, r5, r6, pc}
   235f0:	andeq	r8, ip, ip, asr #32
   235f4:	ldrdeq	r8, [ip], -ip
   235f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   235fc:	mov	r6, r0
   23600:	ldr	r5, [r0, #8]
   23604:	mov	r7, r1
   23608:	cmp	r5, #0
   2360c:	mov	r8, r2
   23610:	beq	236ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa94>
   23614:	ldr	r3, [pc, #296]	; 23744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaec>
   23618:	ldrb	r1, [r3, #10]
   2361c:	cmp	r1, #0
   23620:	beq	23688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa30>
   23624:	mov	r0, r5
   23628:	bl	137fc <strchr@plt>
   2362c:	subs	r9, r0, #0
   23630:	beq	23688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa30>
   23634:	ldr	r3, [pc, #268]	; 23748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf0>
   23638:	ldr	r4, [r3, #224]	; 0xe0
   2363c:	cmp	r4, #0
   23640:	bne	23654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9fc>
   23644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23648:	ldr	r4, [r4, #24]
   2364c:	cmp	r4, #0
   23650:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23654:	add	r3, r4, #16
   23658:	ldr	r2, [r4, #8]
   2365c:	mov	r1, r9
   23660:	mov	r0, r5
   23664:	bl	1ecec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb094>
   23668:	cmp	r0, #0
   2366c:	beq	23648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9f0>
   23670:	mov	r3, r8
   23674:	mov	r2, r7
   23678:	mov	r1, r4
   2367c:	mov	r0, r6
   23680:	bl	1f85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc04>
   23684:	b	23648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9f0>
   23688:	ldr	r1, [pc, #188]	; 2374c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf4>
   2368c:	mov	r0, r5
   23690:	bl	13ac0 <strpbrk@plt>
   23694:	cmp	r0, #0
   23698:	beq	23720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfac8>
   2369c:	ldr	r3, [pc, #164]	; 23748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf0>
   236a0:	ldr	r4, [r3, #224]	; 0xe0
   236a4:	cmp	r4, #0
   236a8:	bne	236bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa64>
   236ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   236b0:	ldr	r4, [r4, #24]
   236b4:	cmp	r4, #0
   236b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   236bc:	mov	r2, #0
   236c0:	ldr	r1, [r4, #8]
   236c4:	mov	r0, r5
   236c8:	bl	13664 <fnmatch@plt>
   236cc:	cmp	r0, #0
   236d0:	bne	236b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa58>
   236d4:	mov	r3, r8
   236d8:	mov	r2, r7
   236dc:	mov	r1, r4
   236e0:	mov	r0, r6
   236e4:	bl	1f85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc04>
   236e8:	b	236b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa58>
   236ec:	ldr	r3, [pc, #84]	; 23748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf0>
   236f0:	ldr	r4, [r3, #224]	; 0xe0
   236f4:	cmp	r4, #0
   236f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   236fc:	mov	r1, r4
   23700:	mov	r3, r8
   23704:	mov	r2, r7
   23708:	mov	r0, r6
   2370c:	bl	1f85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc04>
   23710:	ldr	r4, [r4, #24]
   23714:	cmp	r4, #0
   23718:	bne	236fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaa4>
   2371c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23720:	mov	r0, r5
   23724:	bl	23560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf908>
   23728:	subs	r1, r0, #0
   2372c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23730:	mov	r3, r8
   23734:	mov	r2, r7
   23738:	mov	r0, r6
   2373c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   23740:	b	1f85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc04>
   23744:	andeq	r8, ip, ip, lsl #1
   23748:	andeq	r7, ip, r8, lsr #23
   2374c:	muleq	r4, r8, r4
   23750:	push	{r4, r5, r6, lr}
   23754:	subs	r4, r0, #0
   23758:	popeq	{r4, r5, r6, pc}
   2375c:	ldr	r6, [pc, #136]	; 237ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb94>
   23760:	ldr	r5, [pc, #136]	; 237f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb98>
   23764:	ldr	r3, [r4, #4]
   23768:	cmp	r3, #15
   2376c:	ldrls	pc, [pc, r3, lsl #2]
   23770:	b	237bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb64>
   23774:			; <UNDEFINED> instruction: 0x000237b4
   23778:			; <UNDEFINED> instruction: 0x000237bc
   2377c:			; <UNDEFINED> instruction: 0x000237bc
   23780:			; <UNDEFINED> instruction: 0x000237bc
   23784:	ldrdeq	r3, [r2], -r8
   23788:			; <UNDEFINED> instruction: 0x000237bc
   2378c:			; <UNDEFINED> instruction: 0x000237bc
   23790:			; <UNDEFINED> instruction: 0x000237bc
   23794:			; <UNDEFINED> instruction: 0x000237bc
   23798:			; <UNDEFINED> instruction: 0x000237bc
   2379c:			; <UNDEFINED> instruction: 0x000237bc
   237a0:			; <UNDEFINED> instruction: 0x000237bc
   237a4:			; <UNDEFINED> instruction: 0x000237bc
   237a8:			; <UNDEFINED> instruction: 0x000237b4
   237ac:			; <UNDEFINED> instruction: 0x000237bc
   237b0:	andeq	r3, r2, ip, asr #15
   237b4:	ldr	r0, [r4, #8]
   237b8:	bl	23750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf8>
   237bc:	ldr	r4, [r4]
   237c0:	cmp	r4, #0
   237c4:	bne	23764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb0c>
   237c8:	pop	{r4, r5, r6, pc}
   237cc:	ldr	r0, [r6]
   237d0:	bl	23750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf8>
   237d4:	b	237bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb64>
   237d8:	mov	r2, #0
   237dc:	mov	r1, r5
   237e0:	mov	r0, r4
   237e4:	bl	235f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9a0>
   237e8:	b	237bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb64>
   237ec:	andeq	r8, ip, r4, ror r0
   237f0:	andeq	ip, r1, r8, asr #22
   237f4:	push	{r4, r5, r6, r7, r8, lr}
   237f8:	subs	r4, r0, #0
   237fc:	popeq	{r4, r5, r6, r7, r8, pc}
   23800:	mov	r5, r1
   23804:	ldr	r7, [pc, #132]	; 23890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc38>
   23808:	ldr	r6, [pc, #132]	; 23894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc3c>
   2380c:	b	23824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbcc>
   23810:	cmp	r3, #4
   23814:	beq	23870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc18>
   23818:	ldr	r4, [r4]
   2381c:	cmp	r4, #0
   23820:	popeq	{r4, r5, r6, r7, r8, pc}
   23824:	ldr	r3, [r4, #4]
   23828:	cmp	r3, #13
   2382c:	beq	23854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbfc>
   23830:	cmp	r3, #15
   23834:	bne	23810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbb8>
   23838:	mov	r1, r5
   2383c:	ldr	r0, [r7]
   23840:	bl	237f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb9c>
   23844:	ldrb	r3, [r5, #84]	; 0x54
   23848:	tst	r3, #4
   2384c:	bne	23818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbc0>
   23850:	pop	{r4, r5, r6, r7, r8, pc}
   23854:	mov	r1, r5
   23858:	ldr	r0, [r4, #8]
   2385c:	bl	237f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb9c>
   23860:	ldrb	r3, [r5, #84]	; 0x54
   23864:	tst	r3, #4
   23868:	bne	23818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbc0>
   2386c:	pop	{r4, r5, r6, r7, r8, pc}
   23870:	mov	r2, r5
   23874:	mov	r1, r6
   23878:	mov	r0, r4
   2387c:	bl	235f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9a0>
   23880:	ldrb	r3, [r5, #84]	; 0x54
   23884:	tst	r3, #4
   23888:	bne	23818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbc0>
   2388c:	pop	{r4, r5, r6, r7, r8, pc}
   23890:	andeq	r8, ip, r4, ror r0
   23894:	ldrdeq	pc, [r1], -ip
   23898:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2389c:	subs	r4, r0, #0
   238a0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238a4:	ldr	r9, [pc, #684]	; 23b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff00>
   238a8:	ldr	r8, [pc, #684]	; 23b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff04>
   238ac:	ldr	r7, [pc, #684]	; 23b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff08>
   238b0:	ldr	sl, [pc, #684]	; 23b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff0c>
   238b4:	mov	r6, r1
   238b8:	mov	r5, r2
   238bc:	ldr	r3, [r4, #4]
   238c0:	cmp	r3, #15
   238c4:	ldrls	pc, [pc, r3, lsl #2]
   238c8:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   238cc:	andeq	r3, r2, r4, ror sl
   238d0:	andeq	r3, r2, r4, lsr sl
   238d4:	andeq	r3, r2, r4, asr sl
   238d8:	strdeq	r3, [r2], -r0
   238dc:	andeq	r3, r2, r4, lsl #19
   238e0:	andeq	r3, r2, r4, asr #18
   238e4:	andeq	r3, r2, r4, asr sl
   238e8:	andeq	r3, r2, r4, asr sl
   238ec:	andeq	r3, r2, ip, lsl #18
   238f0:	andeq	r3, r2, r4, asr sl
   238f4:	andeq	r3, r2, r8, ror #18
   238f8:	andeq	r3, r2, r4, asr #18
   238fc:	andeq	r3, r2, r4, asr sl
   23900:	andeq	r3, r2, r0, ror r9
   23904:	andeq	r3, r2, r4, asr #18
   23908:	andeq	r3, r2, r4, asr r9
   2390c:	ldr	r0, [r4, #12]
   23910:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   23914:	ldr	r3, [r5, #80]	; 0x50
   23918:	cmp	r3, #2
   2391c:	beq	23b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfecc>
   23920:	cmp	r3, #3
   23924:	ldr	r1, [pc, #572]	; 23b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff10>
   23928:	moveq	r1, #256	; 0x100
   2392c:	ldr	r3, [r5, #28]
   23930:	cmp	r3, #0
   23934:	beq	23a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe10>
   23938:	ldr	r2, [r3, #20]
   2393c:	orr	r1, r2, r1
   23940:	str	r1, [r3, #20]
   23944:	ldr	r4, [r4]
   23948:	cmp	r4, #0
   2394c:	bne	238bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc64>
   23950:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23954:	mov	r2, r5
   23958:	mov	r1, r6
   2395c:	ldr	r0, [r9]
   23960:	bl	23898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc40>
   23964:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23968:	ldr	r6, [r4, #8]
   2396c:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23970:	mov	r2, r5
   23974:	mov	r1, r6
   23978:	ldr	r0, [r4, #8]
   2397c:	bl	23898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc40>
   23980:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23984:	ldr	r3, [r4, #40]	; 0x28
   23988:	cmp	r3, #0
   2398c:	beq	2399c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd44>
   23990:	ldr	r3, [r3, #12]
   23994:	cmp	r3, #1
   23998:	beq	23ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe7c>
   2399c:	mov	r2, r5
   239a0:	mov	r1, sl
   239a4:	mov	r0, r4
   239a8:	bl	235f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9a0>
   239ac:	ldr	r3, [r8, #272]	; 0x110
   239b0:	cmp	r3, #0
   239b4:	bne	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   239b8:	ldr	fp, [r4, #16]
   239bc:	cmp	fp, #0
   239c0:	beq	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   239c4:	ldr	r3, [fp, #4]
   239c8:	mov	r1, r7
   239cc:	subs	r0, r3, #0
   239d0:	beq	239e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd88>
   239d4:	bl	13268 <strcmp@plt>
   239d8:	cmp	r0, #0
   239dc:	beq	23b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfef8>
   239e0:	ldr	fp, [fp]
   239e4:	cmp	fp, #0
   239e8:	bne	239c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd6c>
   239ec:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   239f0:	ldr	r3, [r4, #16]
   239f4:	cmp	r3, #0
   239f8:	beq	23a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdb0>
   239fc:	ldr	r3, [r3, #12]
   23a00:	cmp	r3, #0
   23a04:	bne	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a08:	mov	r2, #1
   23a0c:	mov	r1, #0
   23a10:	ldr	r0, [r4, #8]
   23a14:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   23a18:	ldr	r2, [r4, #12]
   23a1c:	ldr	r1, [r0, #28]
   23a20:	str	r2, [r0, #44]	; 0x2c
   23a24:	cmp	r1, #0
   23a28:	bne	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a2c:	bl	213d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd780>
   23a30:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a34:	cmp	r5, #0
   23a38:	beq	23a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdf0>
   23a3c:	ldr	r1, [r5, #28]
   23a40:	cmp	r1, #0
   23a44:	beq	23b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfeec>
   23a48:	ldr	r0, [r4, #8]
   23a4c:	bl	21314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6bc>
   23a50:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a54:	cmp	r5, #0
   23a58:	beq	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a5c:	ldr	r1, [r5, #28]
   23a60:	cmp	r1, #0
   23a64:	bne	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a68:	mov	r0, r5
   23a6c:	bl	213d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd780>
   23a70:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a74:	ldr	r3, [r4, #72]	; 0x48
   23a78:	cmp	r3, #0
   23a7c:	beq	23b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfeb8>
   23a80:	sub	r3, r3, #380	; 0x17c
   23a84:	cmp	r3, #1
   23a88:	bhi	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23a8c:	ldrb	r3, [r4, #84]	; 0x54
   23a90:	mov	r1, r4
   23a94:	ldr	r0, [r4, #8]
   23a98:	orr	r3, r3, #4
   23a9c:	strb	r3, [r4, #84]	; 0x54
   23aa0:	bl	237f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb9c>
   23aa4:	ldrb	r3, [r4, #84]	; 0x54
   23aa8:	ldr	r2, [r4, #72]	; 0x48
   23aac:	sub	r2, r2, #380	; 0x17c
   23ab0:	lsr	r3, r3, #2
   23ab4:	clz	r2, r2
   23ab8:	and	r3, r3, #1
   23abc:	lsr	r2, r2, #5
   23ac0:	cmp	r2, r3
   23ac4:	beq	23b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfeb8>
   23ac8:	mvn	r3, #0
   23acc:	str	r3, [r4, #72]	; 0x48
   23ad0:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23ad4:	ldr	fp, [r4, #12]
   23ad8:	cmp	fp, #0
   23adc:	bne	2399c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd44>
   23ae0:	ldr	r1, [pc, #132]	; 23b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff14>
   23ae4:	mov	r2, r5
   23ae8:	mov	r0, r4
   23aec:	bl	235f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9a0>
   23af0:	ldr	r1, [r4, #56]	; 0x38
   23af4:	cmp	r1, #0
   23af8:	beq	239ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd54>
   23afc:	mov	r2, r5
   23b00:	mov	r0, r4
   23b04:	bl	222ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe654>
   23b08:	str	fp, [r4, #56]	; 0x38
   23b0c:	b	239ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd54>
   23b10:	mov	r2, r4
   23b14:	mov	r1, r6
   23b18:	ldr	r0, [r4, #8]
   23b1c:	bl	23898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc40>
   23b20:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23b24:	ldr	r3, [pc, #68]	; 23b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff18>
   23b28:	ldr	r1, [pc, #68]	; 23b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff1c>
   23b2c:	ldr	r3, [r3, #48]	; 0x30
   23b30:	ldr	r3, [r3, #4]
   23b34:	ldr	r3, [r3, #4]
   23b38:	cmp	r3, #5
   23b3c:	movne	r1, #768	; 0x300
   23b40:	b	2392c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcd4>
   23b44:	mov	r0, r5
   23b48:	bl	213d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd780>
   23b4c:	b	23a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdf0>
   23b50:	str	r5, [r8, #272]	; 0x110
   23b54:	b	23944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcec>
   23b58:	andeq	r8, ip, r4, ror r0
   23b5c:	andeq	r7, ip, r8, lsr #23
   23b60:	andeq	pc, r4, r0, lsr #23
   23b64:	andeq	r2, r2, r4, asr r0
   23b68:	andeq	r0, r0, r3, lsl #2
   23b6c:	ldrdeq	pc, [r1], -r4
   23b70:	andeq	r8, ip, ip, lsl #1
   23b74:	andeq	r0, r0, r1, lsl #4
   23b78:	ldr	r3, [r1]
   23b7c:	cmp	r3, #0
   23b80:	bxne	lr
   23b84:	cmp	r0, #0
   23b88:	push	{r4, r5, r6, r7, r8, lr}
   23b8c:	mov	r4, r0
   23b90:	popeq	{r4, r5, r6, r7, r8, pc}
   23b94:	ldr	r6, [pc, #176]	; 23c4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfff4>
   23b98:	ldr	r3, [r6, #84]	; 0x54
   23b9c:	cmp	r0, r3
   23ba0:	popeq	{r4, r5, r6, r7, r8, pc}
   23ba4:	ldr	r8, [pc, #164]	; 23c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfff8>
   23ba8:	ldr	r7, [pc, #164]	; 23c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfffc>
   23bac:	mov	r5, r1
   23bb0:	ldr	r3, [r4, #4]
   23bb4:	cmp	r3, #15
   23bb8:	ldrls	pc, [pc, r3, lsl #2]
   23bbc:	b	23c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffb4>
   23bc0:	andeq	r3, r2, r0, lsl #24
   23bc4:	andeq	r3, r2, ip, lsl #24
   23bc8:	andeq	r3, r2, ip, lsl #24
   23bcc:	andeq	r3, r2, ip, lsl #24
   23bd0:	andeq	r3, r2, r8, lsr ip
   23bd4:	andeq	r3, r2, ip, lsl #24
   23bd8:	andeq	r3, r2, ip, lsl #24
   23bdc:	andeq	r3, r2, ip, lsl #24
   23be0:	andeq	r3, r2, ip, lsl #24
   23be4:	andeq	r3, r2, ip, lsl #24
   23be8:	andeq	r3, r2, ip, lsl #24
   23bec:	andeq	r3, r2, ip, lsl #24
   23bf0:	andeq	r3, r2, ip, lsl #24
   23bf4:	andeq	r3, r2, r0, lsl #24
   23bf8:	andeq	r3, r2, ip, lsl #24
   23bfc:	andeq	r3, r2, r8, lsr #24
   23c00:	mov	r1, r5
   23c04:	ldr	r0, [r4, #8]
   23c08:	bl	23b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff20>
   23c0c:	ldr	r4, [r4]
   23c10:	cmp	r4, #0
   23c14:	popeq	{r4, r5, r6, r7, r8, pc}
   23c18:	ldr	r3, [r6, #84]	; 0x54
   23c1c:	cmp	r3, r4
   23c20:	bne	23bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff58>
   23c24:	pop	{r4, r5, r6, r7, r8, pc}
   23c28:	mov	r1, r5
   23c2c:	ldr	r0, [r8]
   23c30:	bl	23b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff20>
   23c34:	b	23c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffb4>
   23c38:	mov	r2, r5
   23c3c:	mov	r1, r7
   23c40:	mov	r0, r4
   23c44:	bl	235f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9a0>
   23c48:	b	23c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffb4>
   23c4c:	strdeq	r8, [ip], -r4
   23c50:	andeq	r8, ip, r4, ror r0
   23c54:	andeq	sp, r1, r0, lsr #21
   23c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c5c:	subs	sl, r0, #0
   23c60:	sub	sp, sp, #12
   23c64:	beq	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23c68:	ldr	r7, [pc, #764]	; 23f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10314>
   23c6c:	ldr	r8, [pc, #764]	; 23f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10318>
   23c70:	ldr	r9, [pc, #764]	; 23f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1031c>
   23c74:	ldr	r5, [pc, #764]	; 23f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10320>
   23c78:	mov	r4, r1
   23c7c:	ldr	r2, [sl, #4]
   23c80:	cmp	r2, #15
   23c84:	ldrls	pc, [pc, r2, lsl #2]
   23c88:	b	23ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10088>
   23c8c:	andeq	r3, r2, r8, ror lr
   23c90:	andeq	r3, r2, ip, asr #25
   23c94:			; <UNDEFINED> instruction: 0x00023dbc
   23c98:	andeq	r3, r2, r0, ror #25
   23c9c:	andeq	r3, r2, r8, ror sp
   23ca0:	andeq	r3, r2, r0, ror #25
   23ca4:	andeq	r3, r2, r0, ror #25
   23ca8:	andeq	r3, r2, r0, ror #25
   23cac:	andeq	r3, r2, r0, ror #25
   23cb0:	andeq	r3, r2, r0, ror #25
   23cb4:	andeq	r3, r2, r0, ror #26
   23cb8:	andeq	r3, r2, r0, ror #25
   23cbc:	andeq	r3, r2, r0, ror #25
   23cc0:	andeq	r3, r2, r4, lsr #26
   23cc4:	andeq	r3, r2, r0, ror #25
   23cc8:	andeq	r3, r2, r4, lsl #26
   23ccc:	ldr	r0, [sl, #8]
   23cd0:	ldr	r2, [r0, #12]
   23cd4:	cmp	r2, #8
   23cd8:	beq	23ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10088>
   23cdc:	bl	2c9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d58>
   23ce0:	ldr	sl, [sl]
   23ce4:	cmp	sl, #0
   23ce8:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23cec:	ldr	r3, [pc, #648]	; 23f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10324>
   23cf0:	ldrb	r3, [r3, #1]
   23cf4:	tst	r3, #8
   23cf8:	bne	23e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1023c>
   23cfc:	add	sp, sp, #12
   23d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d04:	ldr	r2, [pc, #628]	; 23f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10328>
   23d08:	mov	r1, r4
   23d0c:	ldr	r0, [r2]
   23d10:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   23d14:	ldr	sl, [sl]
   23d18:	cmp	sl, #0
   23d1c:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23d20:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23d24:	ldr	r2, [r5, #28]
   23d28:	orr	r6, r4, #1
   23d2c:	ldr	fp, [r2, #32]
   23d30:	mov	r1, r6
   23d34:	ldr	r0, [sl, #8]
   23d38:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   23d3c:	ldr	r1, [r5, #28]
   23d40:	ldr	r1, [r1, #32]
   23d44:	cmp	r1, fp
   23d48:	mov	fp, r1
   23d4c:	bne	23d30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100d8>
   23d50:	ldr	sl, [sl]
   23d54:	cmp	sl, #0
   23d58:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23d5c:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23d60:	ldr	r2, [sl, #8]
   23d64:	ldr	sl, [sl]
   23d68:	str	r2, [r7, #252]	; 0xfc
   23d6c:	cmp	sl, #0
   23d70:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23d74:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23d78:	tst	r4, #2
   23d7c:	bne	23da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10148>
   23d80:	ldr	r6, [sl, #8]
   23d84:	cmp	r6, #0
   23d88:	beq	23da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10148>
   23d8c:	ldr	r1, [pc, #496]	; 23f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1032c>
   23d90:	mov	r0, r6
   23d94:	bl	13ac0 <strpbrk@plt>
   23d98:	cmp	r0, #0
   23d9c:	beq	23f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x102e0>
   23da0:	ldr	r0, [sl, #24]
   23da4:	mov	r1, r4
   23da8:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   23dac:	ldr	sl, [sl]
   23db0:	cmp	sl, #0
   23db4:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23db8:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23dbc:	ldrb	r2, [sl, #37]	; 0x25
   23dc0:	tst	r2, #4
   23dc4:	beq	23e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10200>
   23dc8:	ldr	r1, [r7, #252]	; 0xfc
   23dcc:	cmp	r4, #0
   23dd0:	str	r1, [sl, #32]
   23dd4:	beq	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23dd8:	tst	r4, #2
   23ddc:	beq	23ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1024c>
   23de0:	ldr	r1, [r7, #276]	; 0x114
   23de4:	cmp	r1, #0
   23de8:	beq	23ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1024c>
   23dec:	mov	r2, #0
   23df0:	mov	r1, sp
   23df4:	mov	r0, sl
   23df8:	stm	sp, {r2, sp}
   23dfc:	ldr	r6, [r8, #4]
   23e00:	bl	2309c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf444>
   23e04:	ldr	r2, [sp]
   23e08:	cmp	r0, #0
   23e0c:	streq	r0, [r9, #4]
   23e10:	cmp	r2, #0
   23e14:	beq	23e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10200>
   23e18:	ldr	r2, [r8, #4]
   23e1c:	cmp	r2, r6
   23e20:	beq	23f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x102c8>
   23e24:	mov	r2, #5
   23e28:	ldr	r1, [pc, #344]	; 23f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10330>
   23e2c:	mov	r0, #0
   23e30:	bl	13460 <dcgettext@plt>
   23e34:	ldr	r1, [sl, #8]
   23e38:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   23e3c:	ldr	r3, [pc, #328]	; 23f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10334>
   23e40:	ldr	r1, [sp, #4]
   23e44:	ldr	ip, [sp]
   23e48:	ldr	r2, [r3]
   23e4c:	ldr	r0, [r2, #4]
   23e50:	str	ip, [r0]
   23e54:	str	r1, [r2, #4]
   23e58:	ldr	r2, [r7, #276]	; 0x114
   23e5c:	cmp	r2, sl
   23e60:	ldr	sl, [sl]
   23e64:	moveq	r2, #0
   23e68:	streq	r2, [r7, #276]	; 0x114
   23e6c:	cmp	sl, #0
   23e70:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23e74:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23e78:	ldr	r0, [sl, #8]
   23e7c:	mov	r1, r4
   23e80:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   23e84:	ldr	sl, [sl]
   23e88:	cmp	sl, #0
   23e8c:	bne	23c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10024>
   23e90:	b	23cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   23e94:	ldr	r0, [pc, #244]	; 23f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10338>
   23e98:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   23e9c:	add	sp, sp, #12
   23ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ea4:	tst	r2, #2
   23ea8:	beq	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23eac:	ldr	r0, [sl, #16]
   23eb0:	cmp	r0, #0
   23eb4:	beq	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23eb8:	ldrb	r1, [r0, #40]	; 0x28
   23ebc:	and	r1, r1, #7
   23ec0:	cmp	r1, #2
   23ec4:	beq	23f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10308>
   23ec8:	cmp	r1, #1
   23ecc:	bne	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23ed0:	ldr	r2, [r0, #40]	; 0x28
   23ed4:	tst	r2, #2048	; 0x800
   23ed8:	beq	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23edc:	ldrsb	r2, [sl, #36]	; 0x24
   23ee0:	cmp	r2, #0
   23ee4:	bge	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23ee8:	ldr	r2, [r0, #4]
   23eec:	ldr	r2, [r2, #4]
   23ef0:	cmp	r2, #5
   23ef4:	bne	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23ef8:	ldr	r2, [r0, #160]	; 0xa0
   23efc:	add	r2, r2, #2336	; 0x920
   23f00:	ldrh	r2, [r2, #8]
   23f04:	tst	r2, #64	; 0x40
   23f08:	beq	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23f0c:	ldrb	r2, [sl, #37]	; 0x25
   23f10:	bic	r2, r2, #18
   23f14:	orr	r2, r2, #16
   23f18:	strb	r2, [sl, #37]	; 0x25
   23f1c:	b	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23f20:	ldr	r2, [sp, #4]
   23f24:	ldr	r1, [sl]
   23f28:	str	r1, [r2]
   23f2c:	ldr	r2, [sp]
   23f30:	str	r2, [sl]
   23f34:	b	23e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10200>
   23f38:	ldrb	r1, [r5, #10]
   23f3c:	cmp	r1, #0
   23f40:	beq	23f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x102fc>
   23f44:	mov	r0, r6
   23f48:	bl	137fc <strchr@plt>
   23f4c:	cmp	r0, #0
   23f50:	bne	23da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10148>
   23f54:	mov	r0, r6
   23f58:	bl	23560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf908>
   23f5c:	b	23da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10148>
   23f60:	tst	r2, #1
   23f64:	beq	23f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x102b4>
   23f68:	b	23dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10194>
   23f6c:	andeq	r7, ip, r8, lsr #23
   23f70:	andeq	r8, ip, r8, rrx
   23f74:	andeq	r8, ip, r4, ror r1
   23f78:	andeq	r8, ip, ip, lsl #1
   23f7c:	andeq	r8, ip, r8, asr r0
   23f80:	andeq	r8, ip, r4, ror r0
   23f84:	muleq	r4, r8, r4
   23f88:	andeq	pc, r4, r8, lsr #23
   23f8c:	andeq	r7, ip, ip, lsr #7
   23f90:	andeq	pc, r4, r8, ror #23
   23f94:	ldr	r3, [pc, #28]	; 23fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10360>
   23f98:	ldr	r2, [r3, #280]	; 0x118
   23f9c:	cmp	r1, #0
   23fa0:	cmpne	r2, #0
   23fa4:	moveq	r1, #1
   23fa8:	ldreq	r2, [pc, #12]	; 23fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10364>
   23fac:	streq	r1, [r3, #280]	; 0x118
   23fb0:	streq	r0, [r2]
   23fb4:	bx	lr
   23fb8:	andeq	r7, ip, r8, lsr #23
   23fbc:	andeq	r7, ip, r0, asr #7
   23fc0:	push	{r4, r5, r6, r7, r8, lr}
   23fc4:	mov	r6, r2
   23fc8:	mov	r7, r1
   23fcc:	mov	r2, #1
   23fd0:	ldr	r1, [sp, #32]
   23fd4:	mov	r5, r3
   23fd8:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   23fdc:	ldr	r3, [pc, #344]	; 2413c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104e4>
   23fe0:	ldr	r2, [r0, #44]	; 0x2c
   23fe4:	str	r0, [r3]
   23fe8:	cmp	r2, #0
   23fec:	ldr	r2, [pc, #332]	; 24140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104e8>
   23ff0:	ldr	r3, [pc, #332]	; 24144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104ec>
   23ff4:	mov	r4, r0
   23ff8:	ldr	r1, [r2, #4]
   23ffc:	streq	r7, [r0, #44]	; 0x2c
   24000:	cmp	r6, #2
   24004:	str	r6, [r0, #80]	; 0x50
   24008:	movne	r0, #0
   2400c:	moveq	r0, #512	; 0x200
   24010:	cmp	r1, r3
   24014:	mov	r3, #1
   24018:	str	r0, [r4, #76]	; 0x4c
   2401c:	str	r3, [r4, #60]	; 0x3c
   24020:	add	ip, r4, #8
   24024:	bcs	24138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104e0>
   24028:	ldrb	r3, [r4, #84]	; 0x54
   2402c:	ldr	r0, [sp, #36]	; 0x24
   24030:	adds	r6, r5, #0
   24034:	sub	r0, r0, #384	; 0x180
   24038:	clz	r0, r0
   2403c:	lsr	r0, r0, #5
   24040:	bic	r3, r3, #64	; 0x40
   24044:	orr	r3, r3, r0, lsl #6
   24048:	ldr	lr, [r2]
   2404c:	movne	r6, #1
   24050:	ands	r0, r6, r3, lsr #6
   24054:	add	r0, r1, #4
   24058:	str	lr, [r1]
   2405c:	str	r0, [r2, #4]
   24060:	strb	r3, [r4, #84]	; 0x54
   24064:	str	ip, [r2]
   24068:	bne	2410c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104b4>
   2406c:	ldr	r2, [pc, #212]	; 24148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104f0>
   24070:	mvn	r1, #0
   24074:	ldr	r0, [sp, #24]
   24078:	bl	2d0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19468>
   2407c:	cmp	r0, #0
   24080:	blt	24128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104d0>
   24084:	mov	r3, #0
   24088:	mov	r2, #1
   2408c:	b	240a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10448>
   24090:	add	r3, r3, #1
   24094:	cmp	r3, #32
   24098:	lsl	r2, r2, #1
   2409c:	beq	240fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104a4>
   240a0:	cmp	r0, r2
   240a4:	bhi	24090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10438>
   240a8:	str	r3, [r4, #64]	; 0x40
   240ac:	mov	r0, r5
   240b0:	ldr	r2, [pc, #148]	; 2414c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104f4>
   240b4:	mvn	r1, #0
   240b8:	bl	2d0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19468>
   240bc:	cmp	r0, #0
   240c0:	blt	24130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104d8>
   240c4:	mov	r3, #0
   240c8:	mov	r2, #1
   240cc:	b	240e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10488>
   240d0:	add	r3, r3, #1
   240d4:	cmp	r3, #32
   240d8:	lsl	r2, r2, #1
   240dc:	beq	24104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104ac>
   240e0:	cmp	r0, r2
   240e4:	bhi	240d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10478>
   240e8:	str	r3, [r4, #68]	; 0x44
   240ec:	ldr	r3, [sp, #28]
   240f0:	mov	r0, r4
   240f4:	str	r3, [r4, #48]	; 0x30
   240f8:	pop	{r4, r5, r6, r7, r8, pc}
   240fc:	mov	r3, #0
   24100:	b	240a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10450>
   24104:	mov	r3, #0
   24108:	b	240e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10490>
   2410c:	mov	r2, #5
   24110:	ldr	r1, [pc, #56]	; 24150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104f8>
   24114:	mov	r0, #0
   24118:	bl	13460 <dcgettext@plt>
   2411c:	mov	r1, #0
   24120:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   24124:	b	2406c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10414>
   24128:	mvn	r3, #0
   2412c:	b	240a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10450>
   24130:	mvn	r3, #0
   24134:	b	240e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10490>
   24138:	bl	1f81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc4>
   2413c:	andeq	r7, ip, r8, lsr #23
   24140:	andeq	r7, ip, ip, lsr #7
   24144:	andeq	r7, ip, r8, ror #24
   24148:	andeq	pc, r4, ip, lsr #24
   2414c:	andeq	pc, r4, r4, asr #24
   24150:	andeq	pc, r4, ip, ror #23
   24154:	ldr	r3, [pc, #56]	; 24194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1053c>
   24158:	push	{r4, lr}
   2415c:	mov	r0, #12
   24160:	ldr	r4, [r3]
   24164:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24168:	ldr	r3, [pc, #40]	; 24198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10540>
   2416c:	mov	r2, #0
   24170:	mov	r1, #11
   24174:	ldr	r3, [r3]
   24178:	str	r1, [r0, #4]
   2417c:	str	r2, [r0]
   24180:	ldr	r2, [r4, #4]
   24184:	str	r0, [r2]
   24188:	str	r0, [r4, #4]
   2418c:	str	r3, [r0, #8]
   24190:	pop	{r4, pc}
   24194:	andeq	r7, ip, ip, lsr #7
   24198:	andeq	r7, ip, r0, asr #7
   2419c:	ldr	r3, [pc, #132]	; 24228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105d0>
   241a0:	ldr	r3, [r3, #220]	; 0xdc
   241a4:	cmp	r3, #0
   241a8:	beq	241c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10570>
   241ac:	mov	r1, #0
   241b0:	ldr	r2, [r3, #16]
   241b4:	str	r1, [r3, #32]
   241b8:	str	r2, [r3, #28]
   241bc:	ldr	r3, [r3, #8]
   241c0:	cmp	r3, #0
   241c4:	bne	241b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10558>
   241c8:	ldr	r3, [pc, #92]	; 2422c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105d4>
   241cc:	ldr	r3, [r3]
   241d0:	cmp	r3, #0
   241d4:	beq	241f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10598>
   241d8:	ldrb	r2, [r3, #84]	; 0x54
   241dc:	bic	r2, r2, #3
   241e0:	strb	r2, [r3, #84]	; 0x54
   241e4:	ldr	r3, [r3, #16]
   241e8:	cmp	r3, #0
   241ec:	bne	241d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10580>
   241f0:	ldr	r3, [pc, #56]	; 24230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105d8>
   241f4:	ldr	r3, [r3, #48]	; 0x30
   241f8:	ldr	r3, [r3, #100]	; 0x64
   241fc:	cmp	r3, #0
   24200:	bxeq	lr
   24204:	ldr	r2, [r3, #20]
   24208:	ldr	r1, [r3, #36]	; 0x24
   2420c:	ands	r2, r2, #2048	; 0x800
   24210:	streq	r2, [r3, #36]	; 0x24
   24214:	str	r1, [r3, #40]	; 0x28
   24218:	ldr	r3, [r3, #12]
   2421c:	cmp	r3, #0
   24220:	bne	24204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105ac>
   24224:	bx	lr
   24228:	andeq	r7, ip, r8, lsr #23
   2422c:	andeq	r8, ip, r8, rrx
   24230:	andeq	r8, ip, ip, lsl #1
   24234:	ldr	r3, [pc, #300]	; 24368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10710>
   24238:	push	{r4, r5, r6, lr}
   2423c:	ldr	r2, [r3]
   24240:	cmp	r2, #1
   24244:	beq	24268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10610>
   24248:	mov	r2, #0
   2424c:	mov	ip, #1
   24250:	mov	r1, r2
   24254:	mov	r0, r2
   24258:	str	r2, [r3, #48]	; 0x30
   2425c:	str	ip, [r3]
   24260:	bl	22a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc0>
   24264:	bl	2419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10544>
   24268:	ldr	r3, [pc, #252]	; 2436c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10714>
   2426c:	ldr	r3, [r3]
   24270:	cmp	r3, #0
   24274:	popeq	{r4, r5, r6, pc}
   24278:	ldr	r2, [pc, #240]	; 24370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10718>
   2427c:	ldrb	r4, [r2, #3]
   24280:	ldr	lr, [r2, #48]	; 0x30
   24284:	and	r4, r4, #8
   24288:	b	242a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1064c>
   2428c:	ldr	ip, [r0, #16]
   24290:	cmp	ip, r2
   24294:	beq	242ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10694>
   24298:	ldr	r3, [r3, #16]
   2429c:	cmp	r3, #0
   242a0:	popeq	{r4, r5, r6, pc}
   242a4:	ldr	r2, [r3, #72]	; 0x48
   242a8:	cmp	r2, #0
   242ac:	blt	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   242b0:	ldr	r2, [r3, #28]
   242b4:	cmp	r2, #0
   242b8:	beq	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   242bc:	ldr	r1, [r2, #40]	; 0x28
   242c0:	cmp	r1, #0
   242c4:	bne	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   242c8:	ldr	r1, [r2, #20]
   242cc:	tst	r1, #2097152	; 0x200000
   242d0:	bne	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   242d4:	ldr	r0, [r2, #12]
   242d8:	cmp	r0, #0
   242dc:	bne	2428c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10634>
   242e0:	ldr	ip, [lr, #104]	; 0x68
   242e4:	cmp	ip, r2
   242e8:	bne	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   242ec:	ldr	ip, [r2, #160]	; 0xa0
   242f0:	cmp	ip, #0
   242f4:	bne	2433c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106e4>
   242f8:	ldrb	ip, [r3, #84]	; 0x54
   242fc:	orr	r1, r1, #32768	; 0x8000
   24300:	tst	ip, #16
   24304:	orreq	ip, ip, #8
   24308:	strbeq	ip, [r3, #84]	; 0x54
   2430c:	ldr	ip, [r2, #16]
   24310:	str	r1, [r2, #20]
   24314:	ldr	r2, [lr, #108]	; 0x6c
   24318:	cmp	ip, #0
   2431c:	strne	r0, [ip, #12]
   24320:	streq	r0, [lr, #100]	; 0x64
   24324:	sub	r2, r2, #1
   24328:	cmp	r0, #0
   2432c:	strne	ip, [r0, #16]
   24330:	streq	ip, [lr, #104]	; 0x68
   24334:	str	r2, [lr, #108]	; 0x6c
   24338:	b	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   2433c:	ldr	r5, [ip, #20]
   24340:	tst	r5, #32768	; 0x8000
   24344:	bne	24358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10700>
   24348:	tst	r5, #1048576	; 0x100000
   2434c:	bne	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   24350:	cmp	r4, #0
   24354:	bne	24298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10640>
   24358:	ldr	ip, [ip, #160]	; 0xa0
   2435c:	cmp	ip, #0
   24360:	bne	2433c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106e4>
   24364:	b	242f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106a0>
   24368:	strdeq	r8, [ip], -r4
   2436c:	andeq	r8, ip, r8, rrx
   24370:	andeq	r8, ip, ip, lsl #1
   24374:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24378:	mov	r2, #2
   2437c:	ldr	r4, [pc, #436]	; 24538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108e0>
   24380:	mov	r3, #0
   24384:	mov	r5, r0
   24388:	str	r3, [r4, #48]	; 0x30
   2438c:	str	r2, [r4]
   24390:	mov	r6, r1
   24394:	bl	22a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc0>
   24398:	ldr	r3, [r4, #48]	; 0x30
   2439c:	cmp	r3, #3
   243a0:	beq	243b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10758>
   243a4:	mov	r3, #6
   243a8:	str	r3, [r4, #48]	; 0x30
   243ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243b0:	ldr	r7, [pc, #388]	; 2453c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108e4>
   243b4:	ldr	r8, [r4, #52]	; 0x34
   243b8:	ldr	r0, [r4, #68]	; 0x44
   243bc:	ldrb	r3, [r7, #3]
   243c0:	ands	r3, r3, #16
   243c4:	beq	243d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1077c>
   243c8:	ldr	r1, [r4, #60]	; 0x3c
   243cc:	cmp	r1, #0
   243d0:	bne	24468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10810>
   243d4:	sub	r2, r0, #1
   243d8:	rsb	r1, r8, #0
   243dc:	ldr	ip, [r4, #64]	; 0x40
   243e0:	ands	r1, r1, r2
   243e4:	moveq	lr, #0
   243e8:	movne	lr, #1
   243ec:	ands	r2, r2, ip
   243f0:	moveq	lr, #0
   243f4:	cmp	lr, #0
   243f8:	beq	24444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107ec>
   243fc:	eor	r8, r8, ip
   24400:	rsb	ip, r0, #0
   24404:	tst	r8, ip
   24408:	beq	24444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107ec>
   2440c:	add	r2, r1, r2
   24410:	cmp	r0, r2
   24414:	movcs	r3, #5
   24418:	strcs	r3, [r4, #48]	; 0x30
   2441c:	bcc	24444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107ec>
   24420:	bl	2419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10544>
   24424:	mov	r1, r6
   24428:	mov	r0, r5
   2442c:	bl	22a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc0>
   24430:	ldrb	r3, [r7, #3]
   24434:	and	r3, r3, #16
   24438:	cmp	r3, #0
   2443c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24440:	b	24454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107fc>
   24444:	cmp	r3, #0
   24448:	mov	r2, #6
   2444c:	str	r2, [r4, #48]	; 0x30
   24450:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24454:	ldr	r3, [r4, #60]	; 0x3c
   24458:	cmp	r3, #0
   2445c:	ldrne	r2, [r4, #52]	; 0x34
   24460:	strdne	r2, [r7, #120]	; 0x78
   24464:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24468:	ldr	r3, [r7, #48]	; 0x30
   2446c:	add	r9, r0, r1
   24470:	sub	r9, r9, #1
   24474:	ldr	r3, [r3, #104]	; 0x68
   24478:	rsb	r0, r0, #0
   2447c:	ldr	r2, [r4, #56]	; 0x38
   24480:	and	r9, r9, r0
   24484:	cmp	r3, #0
   24488:	sub	sl, r9, r2
   2448c:	beq	244f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10898>
   24490:	ldr	r0, [pc, #168]	; 24540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108e8>
   24494:	ldr	ip, [pc, #168]	; 24544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108ec>
   24498:	sub	r1, r1, r2
   2449c:	ldr	fp, [r0, #8]
   244a0:	mov	lr, #1
   244a4:	ldr	r2, [r3, #20]
   244a8:	tst	r2, #1
   244ac:	beq	244e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1088c>
   244b0:	ldr	r0, [r3, #28]
   244b4:	cmp	r0, r8
   244b8:	bcc	244e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1088c>
   244bc:	cmp	r0, r1
   244c0:	and	r2, r2, ip
   244c4:	bcs	244e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1088c>
   244c8:	cmp	r2, #1024	; 0x400
   244cc:	ldrne	r2, [r3, #36]	; 0x24
   244d0:	subne	sl, sl, r2, lsr fp
   244d4:	ldr	r2, [r3, #64]	; 0x40
   244d8:	lsl	r2, lr, r2
   244dc:	rsb	r2, r2, #0
   244e0:	and	sl, sl, r2
   244e4:	ldr	r3, [r3, #16]
   244e8:	cmp	r3, #0
   244ec:	bne	244a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1084c>
   244f0:	mov	r3, #4
   244f4:	cmp	r8, sl
   244f8:	str	r3, [r4, #48]	; 0x30
   244fc:	bhi	24528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108d0>
   24500:	str	sl, [r4, #52]	; 0x34
   24504:	bl	2419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10544>
   24508:	mov	r1, r6
   2450c:	mov	r0, r5
   24510:	bl	22a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc0>
   24514:	ldr	r3, [r4, #60]	; 0x3c
   24518:	cmp	r3, r9
   2451c:	bls	24430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107d8>
   24520:	str	r8, [r4, #52]	; 0x34
   24524:	b	24420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107c8>
   24528:	ldr	r1, [pc, #24]	; 24548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108f0>
   2452c:	ldr	r0, [pc, #24]	; 2454c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108f4>
   24530:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   24534:	b	24500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108a8>
   24538:	strdeq	r8, [ip], -r4
   2453c:	andeq	r8, ip, ip, lsl #1
   24540:	andeq	r7, ip, r8, lsr #23
   24544:	andeq	r0, r0, r2, lsl #8
   24548:	andeq	r1, r0, r1, lsr #12
   2454c:	andeq	pc, r4, r8, rrx
   24550:	push	{r4, r5, r6, lr}
   24554:	sub	sp, sp, #8
   24558:	ldr	r4, [pc, #164]	; 24604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109ac>
   2455c:	ldr	r3, [r4, #20]
   24560:	cmp	r3, #1
   24564:	bls	24578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10920>
   24568:	cmp	r0, #0
   2456c:	bne	245e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1098c>
   24570:	add	sp, sp, #8
   24574:	pop	{r4, r5, r6, pc}
   24578:	ldr	r6, [r4, #84]	; 0x54
   2457c:	mov	r5, #0
   24580:	cmp	r6, r5
   24584:	str	r5, [r4, #84]	; 0x54
   24588:	sub	r6, r6, #1
   2458c:	beq	245e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1098c>
   24590:	mvn	r3, #0
   24594:	b	2459c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10944>
   24598:	ldr	r3, [r4, #88]	; 0x58
   2459c:	add	r3, r3, #1
   245a0:	mov	r0, #3
   245a4:	str	r3, [r4, #88]	; 0x58
   245a8:	bl	22a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee04>
   245ac:	bl	2419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10544>
   245b0:	mov	r1, #0
   245b4:	add	r0, sp, #4
   245b8:	str	r5, [sp, #4]
   245bc:	bl	24374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1071c>
   245c0:	ldr	r3, [sp, #4]
   245c4:	cmp	r3, #0
   245c8:	bne	24598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10940>
   245cc:	ldr	r3, [r4, #84]	; 0x54
   245d0:	sub	r6, r6, #1
   245d4:	add	r3, r3, #1
   245d8:	cmn	r6, #1
   245dc:	str	r3, [r4, #84]	; 0x54
   245e0:	bne	24590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10938>
   245e4:	mov	r0, #3
   245e8:	bl	22a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee04>
   245ec:	bl	2419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10544>
   245f0:	mov	r1, #1
   245f4:	mov	r0, #0
   245f8:	bl	24374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1071c>
   245fc:	add	sp, sp, #8
   24600:	pop	{r4, r5, r6, pc}
   24604:	andeq	r8, ip, ip, lsl #1
   24608:	cmp	r0, #0
   2460c:	bxeq	lr
   24610:	b	1fb84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf2c>
   24614:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24618:	subs	r4, r1, #0
   2461c:	sub	sp, sp, #20
   24620:	mov	r5, r0
   24624:	mov	r7, r2
   24628:	beq	2464c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109f4>
   2462c:	mov	r2, #0
   24630:	b	24638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109e0>
   24634:	mov	r4, r3
   24638:	ldr	r3, [r4]
   2463c:	str	r2, [r4]
   24640:	cmp	r3, #0
   24644:	mov	r2, r4
   24648:	bne	24634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109dc>
   2464c:	ldr	r3, [pc, #824]	; 2498c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d34>
   24650:	cmp	r5, #0
   24654:	ldr	r8, [r3]
   24658:	beq	24850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10bf8>
   2465c:	ldr	r6, [r5]
   24660:	cmp	r6, #0
   24664:	beq	24694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a3c>
   24668:	ldr	r1, [pc, #800]	; 24990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d38>
   2466c:	mov	r0, r6
   24670:	bl	13268 <strcmp@plt>
   24674:	cmp	r0, #0
   24678:	streq	r0, [r5]
   2467c:	beq	24694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a3c>
   24680:	mov	r0, r6
   24684:	ldr	r1, [pc, #776]	; 24994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d3c>
   24688:	bl	13ac0 <strpbrk@plt>
   2468c:	cmp	r0, #0
   24690:	beq	24888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c30>
   24694:	mov	r0, #64	; 0x40
   24698:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2469c:	mov	r2, #0
   246a0:	mov	r3, #4
   246a4:	strd	r2, [r0]
   246a8:	ldr	r2, [r8, #4]
   246ac:	mov	r6, r0
   246b0:	ldr	r3, [r5, #8]
   246b4:	ldr	r0, [r5]
   246b8:	ldr	r1, [r5, #12]
   246bc:	str	r6, [r2]
   246c0:	ldr	r2, [r5, #4]
   246c4:	sub	r3, r3, #1
   246c8:	clz	r3, r3
   246cc:	lsr	r3, r3, #5
   246d0:	str	r6, [r8, #4]
   246d4:	str	r0, [r6, #8]
   246d8:	str	r3, [r6, #12]
   246dc:	str	r1, [r6, #60]	; 0x3c
   246e0:	str	r2, [r6, #32]
   246e4:	mov	r2, r6
   246e8:	ldr	r1, [pc, #680]	; 24998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d40>
   246ec:	mov	r3, #0
   246f0:	cmp	r4, #0
   246f4:	str	r4, [r6, #16]
   246f8:	str	r7, [r6, #20]
   246fc:	str	r3, [r2, #24]!
   24700:	str	r3, [r6, #40]	; 0x28
   24704:	str	r2, [r6, #28]
   24708:	str	r3, [r6, #44]	; 0x2c
   2470c:	str	r3, [r6, #48]	; 0x30
   24710:	str	r3, [r6, #52]	; 0x34
   24714:	str	r3, [r6, #56]	; 0x38
   24718:	str	r1, [r6, #36]	; 0x24
   2471c:	beq	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   24720:	ldr	r7, [r4, #4]
   24724:	cmp	r7, r3
   24728:	str	r7, [sp, #4]
   2472c:	beq	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   24730:	ldr	r9, [pc, #604]	; 24994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d3c>
   24734:	ldr	r8, [pc, #608]	; 2499c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d44>
   24738:	mov	sl, r4
   2473c:	mov	r5, #1
   24740:	mov	fp, r3
   24744:	mov	r1, r9
   24748:	mov	r0, r7
   2474c:	bl	13ac0 <strpbrk@plt>
   24750:	mov	r1, r8
   24754:	cmp	r0, #0
   24758:	mov	r0, r7
   2475c:	beq	24794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b3c>
   24760:	bl	132a4 <strcspn@plt>
   24764:	cmp	r0, #3
   24768:	bhi	24774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b1c>
   2476c:	add	sp, sp, #20
   24770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24774:	ldrb	r3, [r7, r0]
   24778:	cmp	r3, #42	; 0x2a
   2477c:	bne	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   24780:	add	r7, r7, r0
   24784:	add	fp, fp, #1
   24788:	ldrb	r3, [r7, #1]
   2478c:	cmp	r3, #0
   24790:	bne	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   24794:	ldr	sl, [sl]
   24798:	cmp	sl, #0
   2479c:	beq	247b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b60>
   247a0:	ldr	r7, [sl, #4]
   247a4:	add	r5, r5, #1
   247a8:	cmp	r7, #0
   247ac:	bne	24744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10aec>
   247b0:	add	sp, sp, #20
   247b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247b8:	cmp	r5, #4
   247bc:	str	fp, [sp, #8]
   247c0:	bgt	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   247c4:	ldr	sl, [pc, #456]	; 24994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d3c>
   247c8:	mov	r3, r4
   247cc:	str	r4, [sp, #12]
   247d0:	ldr	fp, [r3]
   247d4:	cmp	fp, #0
   247d8:	beq	24898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c40>
   247dc:	ldr	r9, [r3, #4]
   247e0:	mov	r1, sl
   247e4:	mov	r0, r9
   247e8:	bl	132a4 <strcspn@plt>
   247ec:	mov	r7, fp
   247f0:	ldrb	r8, [r9, r0]
   247f4:	cmp	r8, #0
   247f8:	movne	r8, r0
   247fc:	addeq	r8, r0, #1
   24800:	ldr	r4, [r7, #4]
   24804:	mov	r1, sl
   24808:	mov	r0, r4
   2480c:	bl	132a4 <strcspn@plt>
   24810:	mov	r1, r4
   24814:	mov	r2, r0
   24818:	mov	r0, r9
   2481c:	ldrb	r3, [r4, r2]
   24820:	cmp	r3, #0
   24824:	addeq	r2, r2, #1
   24828:	cmp	r8, r2
   2482c:	movcc	r2, r8
   24830:	bl	13424 <memcmp@plt>
   24834:	cmp	r0, #0
   24838:	beq	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   2483c:	ldr	r7, [r7]
   24840:	cmp	r7, #0
   24844:	bne	24800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ba8>
   24848:	mov	r3, fp
   2484c:	b	247d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b78>
   24850:	mov	r0, #64	; 0x40
   24854:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24858:	mov	r3, #4
   2485c:	str	r5, [r0]
   24860:	str	r3, [r0, #4]
   24864:	ldr	r3, [r8, #4]
   24868:	mov	r6, r0
   2486c:	str	r0, [r3]
   24870:	str	r0, [r8, #4]
   24874:	str	r5, [r0, #8]
   24878:	str	r5, [r0, #12]
   2487c:	str	r5, [r0, #60]	; 0x3c
   24880:	str	r5, [r0, #32]
   24884:	b	246e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a8c>
   24888:	ldr	r3, [pc, #272]	; 249a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d48>
   2488c:	mov	r2, #1
   24890:	str	r2, [r3, #148]	; 0x94
   24894:	b	24694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a3c>
   24898:	ldr	r2, [sp, #8]
   2489c:	ldr	r3, [pc, #256]	; 249a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d4c>
   248a0:	add	r5, r2, r5, lsl #8
   248a4:	cmp	r5, r3
   248a8:	ldr	r4, [sp, #12]
   248ac:	beq	24974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d1c>
   248b0:	bgt	24944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cec>
   248b4:	cmp	r5, #256	; 0x100
   248b8:	beq	24968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d10>
   248bc:	sub	r3, r3, #256	; 0x100
   248c0:	cmp	r5, r3
   248c4:	bne	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   248c8:	ldr	r3, [pc, #216]	; 249a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d50>
   248cc:	str	r3, [r6, #36]	; 0x24
   248d0:	ldr	r0, [sp, #4]
   248d4:	mov	r5, r4
   248d8:	mov	r7, #0
   248dc:	ldr	r8, [pc, #176]	; 24994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d3c>
   248e0:	b	248e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c90>
   248e4:	ldr	r0, [r5, #4]
   248e8:	mov	r1, r8
   248ec:	bl	13ac0 <strpbrk@plt>
   248f0:	cmp	r0, #0
   248f4:	addeq	r3, r7, #10
   248f8:	addeq	r7, r7, #1
   248fc:	streq	r5, [r6, r3, lsl #2]
   24900:	ldr	r5, [r5]
   24904:	cmp	r5, #0
   24908:	bne	248e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c8c>
   2490c:	ldr	r5, [pc, #128]	; 24994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d3c>
   24910:	ldr	r0, [sp, #4]
   24914:	b	2491c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cc4>
   24918:	ldr	r0, [r4, #4]
   2491c:	mov	r1, r5
   24920:	bl	13ac0 <strpbrk@plt>
   24924:	add	r3, r7, #10
   24928:	cmp	r0, #0
   2492c:	strne	r4, [r6, r3, lsl #2]
   24930:	ldr	r4, [r4]
   24934:	addne	r7, r7, #1
   24938:	cmp	r4, #0
   2493c:	bne	24918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cc0>
   24940:	b	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   24944:	ldr	r3, [pc, #96]	; 249ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d54>
   24948:	cmp	r5, r3
   2494c:	beq	24980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d28>
   24950:	add	r3, r3, #256	; 0x100
   24954:	cmp	r5, r3
   24958:	bne	2476c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b14>
   2495c:	ldr	r3, [pc, #76]	; 249b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d58>
   24960:	str	r3, [r6, #36]	; 0x24
   24964:	b	248d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c78>
   24968:	ldr	r3, [pc, #68]	; 249b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d5c>
   2496c:	str	r3, [r6, #36]	; 0x24
   24970:	b	248d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c78>
   24974:	ldr	r3, [pc, #60]	; 249b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d60>
   24978:	str	r3, [r6, #36]	; 0x24
   2497c:	b	248d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c78>
   24980:	ldr	r3, [pc, #52]	; 249bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d64>
   24984:	str	r3, [r6, #36]	; 0x24
   24988:	b	248d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c78>
   2498c:	andeq	r7, ip, ip, lsr #7
   24990:	andeq	pc, r4, r8, lsr #17
   24994:	muleq	r4, r8, r4
   24998:	andeq	lr, r1, r0, lsr #30
   2499c:	andeq	pc, r4, r8, asr ip	; <UNPREDICTABLE>
   249a0:	andeq	r7, ip, r8, lsr #23
   249a4:	andeq	r0, r0, r1, lsl #4
   249a8:	andeq	lr, r1, r0, lsr #29
   249ac:	andeq	r0, r0, r2, lsl #6
   249b0:	ldrdeq	lr, [r1], -r4
   249b4:	muleq	r1, ip, r3
   249b8:	andeq	pc, r1, r8, lsr #5
   249bc:	andeq	pc, r1, r4, ror r1	; <UNPREDICTABLE>
   249c0:	ldr	r3, [pc, #64]	; 24a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10db0>
   249c4:	push	{r4, r5, r6, r7, r8, lr}
   249c8:	mov	r7, r0
   249cc:	mov	r0, #20
   249d0:	ldr	r4, [r3]
   249d4:	mov	r5, r2
   249d8:	mov	r6, r1
   249dc:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   249e0:	mov	r3, #3
   249e4:	mov	r2, #0
   249e8:	strd	r2, [r0]
   249ec:	ldr	r3, [r4, #4]
   249f0:	str	r0, [r3]
   249f4:	str	r0, [r4, #4]
   249f8:	str	r7, [r0, #8]
   249fc:	str	r6, [r0, #12]
   24a00:	str	r5, [r0, #16]
   24a04:	pop	{r4, r5, r6, r7, r8, pc}
   24a08:	andeq	r7, ip, ip, lsr #7
   24a0c:	ldr	r2, [pc, #56]	; 24a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10df4>
   24a10:	adds	r3, r1, #0
   24a14:	movne	r3, #1
   24a18:	ldr	ip, [r2, #264]	; 0x108
   24a1c:	cmp	ip, #0
   24a20:	moveq	r3, #1
   24a24:	cmp	r3, #0
   24a28:	ldr	r3, [pc, #32]	; 24a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10df8>
   24a2c:	beq	24a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10de4>
   24a30:	str	r0, [r2, #264]	; 0x108
   24a34:	str	r1, [r3]
   24a38:	bx	lr
   24a3c:	ldr	ip, [r3]
   24a40:	cmp	ip, #0
   24a44:	bxne	lr
   24a48:	b	24a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10dd8>
   24a4c:	andeq	r7, ip, r8, lsr #23
   24a50:	andeq	r8, ip, r4, asr #32
   24a54:	ldr	r3, [pc, #4]	; 24a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e08>
   24a58:	str	r0, [r3, #12]
   24a5c:	bx	lr
   24a60:	andeq	r7, ip, ip, lsr #7
   24a64:	ldr	r3, [pc, #48]	; 24a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e44>
   24a68:	push	{r4, r5, r6, lr}
   24a6c:	mov	r5, r0
   24a70:	mov	r0, #12
   24a74:	ldr	r4, [r3]
   24a78:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24a7c:	mov	r3, #10
   24a80:	mov	r2, #0
   24a84:	strd	r2, [r0]
   24a88:	ldr	r3, [r4, #4]
   24a8c:	str	r0, [r3]
   24a90:	str	r0, [r4, #4]
   24a94:	str	r5, [r0, #8]
   24a98:	pop	{r4, r5, r6, pc}
   24a9c:	andeq	r7, ip, ip, lsr #7
   24aa0:	ldrb	r3, [r0]
   24aa4:	cmp	r3, #0
   24aa8:	bxeq	lr
   24aac:	ldrb	r3, [r0, #1]!
   24ab0:	cmp	r3, #0
   24ab4:	bne	24aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e54>
   24ab8:	bx	lr
   24abc:	ldr	r3, [pc, #48]	; 24af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e9c>
   24ac0:	push	{r4, r5, r6, lr}
   24ac4:	mov	r5, r0
   24ac8:	mov	r0, #20
   24acc:	ldr	r4, [r3]
   24ad0:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24ad4:	mov	r3, #7
   24ad8:	mov	r2, #0
   24adc:	strd	r2, [r0]
   24ae0:	ldr	r3, [r4, #4]
   24ae4:	str	r0, [r3]
   24ae8:	str	r0, [r4, #4]
   24aec:	str	r5, [r0, #8]
   24af0:	pop	{r4, r5, r6, pc}
   24af4:	andeq	r7, ip, ip, lsr #7
   24af8:	ldr	r3, [pc, #56]	; 24b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ee0>
   24afc:	push	{r4, r5, r6, lr}
   24b00:	mov	r5, r0
   24b04:	mov	r0, #28
   24b08:	ldr	r4, [r3]
   24b0c:	mov	r6, r1
   24b10:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24b14:	mov	r3, #8
   24b18:	mov	r2, #0
   24b1c:	strd	r2, [r0]
   24b20:	ldr	r3, [r4, #4]
   24b24:	str	r0, [r3]
   24b28:	str	r0, [r4, #4]
   24b2c:	str	r6, [r0, #12]
   24b30:	str	r5, [r0, #8]
   24b34:	pop	{r4, r5, r6, pc}
   24b38:	andeq	r7, ip, ip, lsr #7
   24b3c:	ldr	ip, [pc, #96]	; 24ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f4c>
   24b40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24b44:	mov	r9, r0
   24b48:	mov	r0, #40	; 0x28
   24b4c:	ldr	r4, [ip]
   24b50:	mov	r6, r3
   24b54:	mov	r8, r1
   24b58:	mov	r7, r2
   24b5c:	ldr	r5, [sp, #32]
   24b60:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24b64:	mov	ip, #0
   24b68:	mov	r3, #9
   24b6c:	str	r3, [r0, #4]
   24b70:	str	ip, [r0]
   24b74:	ldr	r3, [r4, #4]
   24b78:	str	r0, [r3]
   24b7c:	str	r0, [r4, #4]
   24b80:	str	r9, [r0, #8]
   24b84:	str	r8, [r0, #12]
   24b88:	str	r7, [r0, #16]
   24b8c:	str	r6, [r0, #20]
   24b90:	str	r5, [r0, #24]
   24b94:	str	ip, [r0, #28]
   24b98:	str	ip, [r0, #32]
   24b9c:	str	ip, [r0, #36]	; 0x24
   24ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24ba4:	andeq	r7, ip, ip, lsr #7
   24ba8:	ldr	r3, [pc, #52]	; 24be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f8c>
   24bac:	push	{r4, r5, r6, lr}
   24bb0:	mov	r5, r0
   24bb4:	mov	r0, #12
   24bb8:	ldr	r4, [r3]
   24bbc:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24bc0:	mov	r1, #1
   24bc4:	mov	r2, #0
   24bc8:	str	r1, [r0, #4]
   24bcc:	str	r2, [r0]
   24bd0:	ldr	r2, [r4, #4]
   24bd4:	str	r0, [r2]
   24bd8:	str	r0, [r4, #4]
   24bdc:	str	r5, [r0, #8]
   24be0:	pop	{r4, r5, r6, pc}
   24be4:	andeq	r7, ip, ip, lsr #7
   24be8:	ldr	r3, [pc, #40]	; 24c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fc0>
   24bec:	push	{r4, r5, r6, lr}
   24bf0:	mov	r5, r0
   24bf4:	mov	r0, #8
   24bf8:	ldr	r4, [r3]
   24bfc:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   24c00:	mov	r3, #0
   24c04:	stm	r0, {r3, r5}
   24c08:	ldr	r3, [r4, #4]
   24c0c:	str	r0, [r3]
   24c10:	str	r0, [r4, #4]
   24c14:	pop	{r4, r5, r6, pc}
   24c18:	andeq	r7, ip, ip, lsr #7
   24c1c:	push	{r4, r5, r6, lr}
   24c20:	mov	r4, r0
   24c24:	ldr	r5, [pc, #60]	; 24c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11010>
   24c28:	ldr	r3, [r5, #232]	; 0xe8
   24c2c:	ldr	r2, [r3, #8]
   24c30:	cmp	r2, #0
   24c34:	beq	24c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ff8>
   24c38:	mov	r2, #5
   24c3c:	ldr	r1, [pc, #40]	; 24c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11014>
   24c40:	mov	r0, #0
   24c44:	bl	13460 <dcgettext@plt>
   24c48:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   24c4c:	ldr	r3, [r5, #232]	; 0xe8
   24c50:	ldrb	r2, [r3, #37]	; 0x25
   24c54:	str	r4, [r3, #8]
   24c58:	str	r4, [r3, #12]
   24c5c:	orr	r2, r2, #4
   24c60:	strb	r2, [r3, #37]	; 0x25
   24c64:	pop	{r4, r5, r6, pc}
   24c68:	andeq	r7, ip, r8, lsr #23
   24c6c:	andeq	pc, r4, ip, asr ip	; <UNPREDICTABLE>
   24c70:	ldr	r3, [pc, #4]	; 24c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11024>
   24c74:	str	r0, [r3, #284]	; 0x11c
   24c78:	bx	lr
   24c7c:	andeq	r7, ip, r8, lsr #23
   24c80:	push	{r4, r5, r6, lr}
   24c84:	mov	r5, r2
   24c88:	ldr	r4, [pc, #116]	; 24d04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110ac>
   24c8c:	mov	r2, r1
   24c90:	sub	sp, sp, #8
   24c94:	ldr	ip, [r4]
   24c98:	mov	r6, r0
   24c9c:	add	r0, ip, #32
   24ca0:	ldr	r1, [ip, #44]	; 0x2c
   24ca4:	adds	r1, r1, #0
   24ca8:	movne	r1, #1
   24cac:	str	r1, [sp, #4]
   24cb0:	ldr	lr, [ip, #48]	; 0x30
   24cb4:	add	r1, ip, #36	; 0x24
   24cb8:	adds	ip, lr, #0
   24cbc:	movne	ip, #1
   24cc0:	str	ip, [sp]
   24cc4:	bl	20ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd288>
   24cc8:	ldr	r1, [pc, #56]	; 24d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110b0>
   24ccc:	mov	r3, r4
   24cd0:	ldr	r2, [r1, #4]
   24cd4:	ldr	r0, [r3], #152	; 0x98
   24cd8:	cmp	r2, r3
   24cdc:	str	r6, [r0, #40]	; 0x28
   24ce0:	str	r5, [r0, #56]	; 0x38
   24ce4:	bls	24d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110a8>
   24ce8:	ldr	r3, [r2, #-4]
   24cec:	sub	r2, r2, #4
   24cf0:	str	r3, [r1]
   24cf4:	str	r2, [r1, #4]
   24cf8:	add	sp, sp, #8
   24cfc:	pop	{r4, r5, r6, pc}
   24d00:	bl	1f83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe4>
   24d04:	andeq	r7, ip, r8, lsr #23
   24d08:	andeq	r7, ip, ip, lsr #7
   24d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d10:	sub	sp, sp, #28
   24d14:	subs	r4, r3, #0
   24d18:	mov	r6, r0
   24d1c:	mov	r5, r1
   24d20:	mov	r9, r2
   24d24:	ldr	r7, [sp, #64]	; 0x40
   24d28:	ldr	fp, [sp, #72]	; 0x48
   24d2c:	beq	24d68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11110>
   24d30:	ldr	r3, [pc, #848]	; 25088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11430>
   24d34:	ldr	r1, [pc, #848]	; 2508c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11434>
   24d38:	mov	r0, #0
   24d3c:	ldr	r2, [r3, #4]
   24d40:	str	r0, [sp, #16]
   24d44:	cmp	r2, r1
   24d48:	add	r1, sp, #16
   24d4c:	str	r1, [sp, #20]
   24d50:	bcs	25080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11428>
   24d54:	ldr	ip, [r3]
   24d58:	add	r0, r2, #4
   24d5c:	str	ip, [r2]
   24d60:	str	r0, [r3, #4]
   24d64:	str	r1, [r3]
   24d68:	ldr	sl, [pc, #800]	; 25090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11438>
   24d6c:	ldrb	r3, [sl]
   24d70:	and	r3, r3, #3
   24d74:	cmp	r3, #2
   24d78:	beq	24f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112f8>
   24d7c:	ldr	r3, [r6, #20]
   24d80:	tst	r3, #3
   24d84:	beq	24f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112f8>
   24d88:	ldr	r8, [pc, #772]	; 25094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1143c>
   24d8c:	mov	r3, #0
   24d90:	mov	r2, r3
   24d94:	str	r9, [sp, #8]
   24d98:	mov	r0, r5
   24d9c:	str	r3, [sp, #12]
   24da0:	str	r3, [sp, #4]
   24da4:	str	r3, [sp]
   24da8:	ldr	r1, [sp, #68]	; 0x44
   24dac:	ldr	r9, [r8, #4]
   24db0:	bl	23fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10368>
   24db4:	cmp	fp, #0
   24db8:	mov	r2, #0
   24dbc:	mov	r1, r6
   24dc0:	addeq	fp, r0, #8
   24dc4:	mov	r5, r0
   24dc8:	mov	r3, r5
   24dcc:	mov	r0, fp
   24dd0:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   24dd4:	cmp	r4, #0
   24dd8:	beq	24f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1131c>
   24ddc:	ldr	r3, [r6, #20]
   24de0:	ands	r3, r3, #3
   24de4:	beq	24f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11308>
   24de8:	ldr	r3, [r4, #32]
   24dec:	ldr	r2, [r4, #56]	; 0x38
   24df0:	cmp	r3, #0
   24df4:	mov	r0, #0
   24df8:	ldrne	r1, [r3]
   24dfc:	ldr	r3, [r4, #36]	; 0x24
   24e00:	ldreq	r1, [pc, #656]	; 25098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11440>
   24e04:	cmp	r3, #0
   24e08:	ldrne	r3, [r3]
   24e0c:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   24e10:	ldr	r6, [pc, #624]	; 25088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11430>
   24e14:	ldr	r3, [pc, #640]	; 2509c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11444>
   24e18:	ldr	r2, [r6, #4]
   24e1c:	cmp	r2, r3
   24e20:	bls	25084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1142c>
   24e24:	ldr	r1, [r2, #-4]
   24e28:	ldr	r3, [r5, #28]
   24e2c:	sub	r2, r2, #4
   24e30:	cmp	r3, #0
   24e34:	stm	r6, {r1, r2}
   24e38:	beq	24f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112ec>
   24e3c:	ldr	r2, [r7, #12]
   24e40:	cmp	r2, #0
   24e44:	beq	24fe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1138c>
   24e48:	ldr	r2, [r2]
   24e4c:	cmp	r2, #0
   24e50:	beq	24f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1133c>
   24e54:	cmp	r3, r2
   24e58:	beq	24eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11258>
   24e5c:	ldr	r1, [r2, #16]
   24e60:	cmp	r3, r1
   24e64:	beq	24eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11258>
   24e68:	ldr	r0, [r3, #16]
   24e6c:	ldr	ip, [r3, #12]
   24e70:	cmp	r0, #0
   24e74:	strne	ip, [r0, #12]
   24e78:	ldreq	lr, [sl, #48]	; 0x30
   24e7c:	streq	ip, [lr, #100]	; 0x64
   24e80:	cmp	ip, #0
   24e84:	strne	r0, [ip, #16]
   24e88:	ldreq	ip, [sl, #48]	; 0x30
   24e8c:	ldrne	r1, [r2, #16]
   24e90:	streq	r0, [ip, #104]	; 0x68
   24e94:	cmp	r1, #0
   24e98:	str	r2, [r3, #12]
   24e9c:	str	r1, [r3, #16]
   24ea0:	str	r3, [r2, #16]
   24ea4:	ldreq	r2, [sl, #48]	; 0x30
   24ea8:	strne	r3, [r1, #12]
   24eac:	streq	r3, [r2, #100]	; 0x64
   24eb0:	ldr	r2, [sp, #16]
   24eb4:	add	r3, r3, #12
   24eb8:	cmp	r2, #0
   24ebc:	str	r3, [r7, #12]
   24ec0:	beq	24f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112ec>
   24ec4:	ldr	r3, [r7, #16]
   24ec8:	ldr	sl, [sp, #20]
   24ecc:	cmp	r3, #0
   24ed0:	beq	2505c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11404>
   24ed4:	ldr	r2, [r3]
   24ed8:	ldr	r4, [r7, #20]
   24edc:	str	r2, [sl]
   24ee0:	ldr	r2, [sp, #16]
   24ee4:	str	r2, [r3]
   24ee8:	ldr	r3, [r6]
   24eec:	ldr	r2, [sp, #16]
   24ef0:	ldr	r1, [r3, #4]
   24ef4:	ldr	r1, [r1]
   24ef8:	cmp	r1, r2
   24efc:	streq	sl, [r3, #4]
   24f00:	ldr	r3, [r9]
   24f04:	ldreq	sl, [sp, #20]
   24f08:	mov	r1, #0
   24f0c:	sub	r2, r4, #16
   24f10:	str	sl, [r7, #16]
   24f14:	str	r1, [r9]
   24f18:	str	r2, [r3, #20]
   24f1c:	ldr	r2, [r4]
   24f20:	cmp	r2, r1
   24f24:	str	r2, [r3, #16]
   24f28:	strne	r3, [r2, #20]
   24f2c:	str	r3, [r4]
   24f30:	ldr	r2, [r9]
   24f34:	add	r3, r3, #16
   24f38:	cmp	r2, #0
   24f3c:	str	r3, [r7, #20]
   24f40:	streq	r9, [r8, #4]
   24f44:	mov	r0, r5
   24f48:	add	sp, sp, #28
   24f4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f50:	mov	r0, #0
   24f54:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   24f58:	str	r0, [sp, #68]	; 0x44
   24f5c:	b	24d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11130>
   24f60:	mov	r2, r3
   24f64:	mov	r0, r3
   24f68:	ldr	r1, [pc, #296]	; 25098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11440>
   24f6c:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   24f70:	b	24e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111b8>
   24f74:	mov	r0, r4
   24f78:	mov	r3, r4
   24f7c:	mov	r2, r4
   24f80:	ldr	r1, [pc, #272]	; 25098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11440>
   24f84:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   24f88:	mov	r0, r5
   24f8c:	add	sp, sp, #28
   24f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f94:	ldr	r2, [r3, #16]
   24f98:	ldr	r1, [r3, #12]
   24f9c:	cmp	r2, #0
   24fa0:	strne	r1, [r2, #12]
   24fa4:	ldreq	r0, [sl, #48]	; 0x30
   24fa8:	streq	r1, [r0, #100]	; 0x64
   24fac:	cmp	r1, #0
   24fb0:	strne	r2, [r1, #16]
   24fb4:	ldreq	r1, [sl, #48]	; 0x30
   24fb8:	streq	r2, [r1, #104]	; 0x68
   24fbc:	ldr	r1, [sl, #48]	; 0x30
   24fc0:	mov	r2, #0
   24fc4:	str	r2, [r3, #12]
   24fc8:	ldr	r2, [r1, #104]	; 0x68
   24fcc:	cmp	r2, #0
   24fd0:	str	r2, [r3, #16]
   24fd4:	strne	r3, [r2, #12]
   24fd8:	streq	r3, [r1, #100]	; 0x64
   24fdc:	str	r3, [r1, #104]	; 0x68
   24fe0:	b	24eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11258>
   24fe4:	ldr	r2, [r8]
   24fe8:	cmp	r2, r4
   24fec:	beq	2504c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   24ff0:	ldr	r2, [r4, #28]
   24ff4:	cmp	r2, #0
   24ff8:	beq	25010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   24ffc:	cmp	r3, r2
   25000:	beq	2504c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25004:	add	r2, r2, #12
   25008:	str	r2, [r7, #12]
   2500c:	b	24e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111f0>
   25010:	ldr	r1, [r4, #20]
   25014:	cmp	r1, #0
   25018:	beq	2504c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   2501c:	ldr	r2, [r1, #72]	; 0x48
   25020:	cmp	r2, #0
   25024:	blt	25040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113e8>
   25028:	ldr	r2, [r1, #28]
   2502c:	cmp	r2, #0
   25030:	beq	25040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113e8>
   25034:	ldr	r0, [r2, #148]	; 0x94
   25038:	cmp	r0, #0
   2503c:	bne	24ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113a4>
   25040:	ldr	r1, [r1, #20]
   25044:	cmp	r1, #0
   25048:	bne	2501c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113c4>
   2504c:	ldr	r2, [sl, #48]	; 0x30
   25050:	add	r2, r2, #100	; 0x64
   25054:	str	r2, [r7, #12]
   25058:	b	24e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111f0>
   2505c:	mov	r0, r4
   25060:	bl	1c940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ce8>
   25064:	add	r4, r4, #16
   25068:	ldr	r3, [r0]
   2506c:	str	r3, [sl]
   25070:	ldr	r3, [sp, #16]
   25074:	str	r3, [r0]
   25078:	str	r4, [r7, #20]
   2507c:	b	24ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11290>
   25080:	bl	1f81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc4>
   25084:	bl	1f83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe4>
   25088:	andeq	r7, ip, ip, lsr #7
   2508c:	andeq	r7, ip, r8, ror #24
   25090:	andeq	r8, ip, ip, lsl #1
   25094:	andeq	r8, ip, r8, rrx
   25098:	muleq	r4, r0, r8
   2509c:	andeq	r7, ip, r0, asr #24
   250a0:	ldr	r3, [r0, #4]
   250a4:	str	r1, [r3]
   250a8:	str	r2, [r0, #4]
   250ac:	bx	lr
   250b0:	ldr	ip, [pc, #88]	; 25110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114b8>
   250b4:	push	{lr}		; (str lr, [sp, #-4]!)
   250b8:	ldr	lr, [ip]
   250bc:	cmp	r3, #0
   250c0:	cmpne	lr, #0
   250c4:	popne	{pc}		; (ldrne pc, [sp], #4)
   250c8:	ldr	r3, [pc, #68]	; 25114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114bc>
   250cc:	ldr	lr, [r3, #48]	; 0x30
   250d0:	cmp	lr, #1
   250d4:	beq	250fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114a4>
   250d8:	cmp	r2, #0
   250dc:	sub	r3, lr, #2
   250e0:	clz	r3, r3
   250e4:	lsr	r3, r3, #5
   250e8:	moveq	r3, #0
   250ec:	cmp	r3, #0
   250f0:	moveq	r2, r0
   250f4:	str	r2, [ip]
   250f8:	pop	{pc}		; (ldr pc, [sp], #4)
   250fc:	cmp	r1, #0
   25100:	movne	r2, r1
   25104:	moveq	r2, r0
   25108:	str	r2, [ip]
   2510c:	pop	{pc}		; (ldr pc, [sp], #4)
   25110:	andeq	r8, ip, r4, rrx
   25114:	andeq	r8, ip, r8, lsl r1
   25118:	ldr	r3, [pc, #72]	; 25168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11510>
   2511c:	push	{r4, r5, r6, lr}
   25120:	mov	r6, r0
   25124:	mov	r0, #16
   25128:	ldr	r4, [r3]
   2512c:	mov	r5, r1
   25130:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   25134:	ldr	r3, [pc, #48]	; 2516c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11514>
   25138:	mov	r1, #0
   2513c:	mov	r2, #14
   25140:	stm	r0, {r1, r2}
   25144:	ldr	r2, [r3]
   25148:	ldr	r1, [r4, #4]
   2514c:	ldr	r3, [pc, #28]	; 25170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11518>
   25150:	str	r0, [r1]
   25154:	str	r0, [r4, #4]
   25158:	str	r2, [r3]
   2515c:	str	r6, [r0, #8]
   25160:	str	r5, [r0, #12]
   25164:	pop	{r4, r5, r6, pc}
   25168:	andeq	r7, ip, ip, lsr #7
   2516c:	andeq	r7, ip, ip, lsl sp
   25170:	andeq	r7, ip, ip, lsl #26
   25174:	push	{r4, r5, r6, lr}
   25178:	mov	r0, #16
   2517c:	ldr	r4, [pc, #80]	; 251d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1157c>
   25180:	ldr	r5, [r4]
   25184:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   25188:	mov	r2, #0
   2518c:	mov	r3, #13
   25190:	ldr	r1, [pc, #64]	; 251d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11580>
   25194:	strd	r2, [r0]
   25198:	ldr	r3, [r4, #4]
   2519c:	ldr	ip, [r5, #4]
   251a0:	cmp	r3, r1
   251a4:	add	r1, r0, #8
   251a8:	str	r0, [ip]
   251ac:	str	r0, [r5, #4]
   251b0:	str	r2, [r0, #8]
   251b4:	str	r1, [r0, #12]
   251b8:	bcs	251d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11578>
   251bc:	ldr	r0, [r4]
   251c0:	add	r2, r3, #4
   251c4:	str	r0, [r3]
   251c8:	stm	r4, {r1, r2}
   251cc:	pop	{r4, r5, r6, pc}
   251d0:	bl	1f81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbc4>
   251d4:	andeq	r7, ip, ip, lsr #7
   251d8:	andeq	r7, ip, r8, ror #24
   251dc:	ldr	r2, [pc, #36]	; 25208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x115b0>
   251e0:	ldr	r1, [pc, #36]	; 2520c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x115b4>
   251e4:	ldr	r3, [r2, #4]
   251e8:	cmp	r3, r1
   251ec:	bls	25200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x115a8>
   251f0:	ldr	r1, [r3, #-4]
   251f4:	sub	r3, r3, #4
   251f8:	stm	r2, {r1, r3}
   251fc:	bx	lr
   25200:	push	{r4, lr}
   25204:	bl	1f83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbe4>
   25208:	andeq	r7, ip, ip, lsr #7
   2520c:	andeq	r7, ip, r0, asr #24
   25210:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25214:	mov	sl, r0
   25218:	mov	r0, #28
   2521c:	mov	r9, r1
   25220:	mov	r6, r2
   25224:	mov	r4, r3
   25228:	ldr	r8, [sp, #32]
   2522c:	ldr	r7, [sp, #36]	; 0x24
   25230:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   25234:	mov	r1, #0
   25238:	ldr	r2, [pc, #256]	; 25340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116e8>
   2523c:	mov	r5, r0
   25240:	str	sl, [r0, #4]
   25244:	mov	r0, r9
   25248:	str	r1, [r5]
   2524c:	bl	2d0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19468>
   25250:	str	r6, [r5, #12]
   25254:	str	r4, [r5, #16]
   25258:	str	r8, [r5, #20]
   2525c:	str	r7, [r5, #24]
   25260:	cmp	r0, #1
   25264:	str	r0, [r5, #8]
   25268:	beq	252a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1164c>
   2526c:	ldr	r4, [pc, #208]	; 25344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116ec>
   25270:	ldr	r3, [r4]
   25274:	cmp	r3, #0
   25278:	beq	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   2527c:	ldr	r4, [r4]
   25280:	ldr	r3, [r4]
   25284:	cmp	r3, #0
   25288:	beq	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   2528c:	ldr	r2, [r3]
   25290:	mov	r4, r3
   25294:	cmp	r2, #0
   25298:	bne	2527c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11624>
   2529c:	str	r5, [r4]
   252a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   252a4:	orrs	r3, r6, r4
   252a8:	beq	2526c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11614>
   252ac:	ldr	r4, [pc, #144]	; 25344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116ec>
   252b0:	ldr	r3, [r4]
   252b4:	cmp	r3, #0
   252b8:	bne	252d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11678>
   252bc:	b	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   252c0:	ldr	r4, [r4]
   252c4:	ldr	r3, [r4]
   252c8:	cmp	r3, #0
   252cc:	beq	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   252d0:	ldr	r2, [r3, #8]
   252d4:	cmp	r2, #1
   252d8:	bne	252c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11668>
   252dc:	ldr	r2, [r3, #12]
   252e0:	cmp	r2, #0
   252e4:	bne	252c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11668>
   252e8:	ldr	r6, [r3, #16]
   252ec:	cmp	r6, #0
   252f0:	bne	252c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11668>
   252f4:	mov	r2, #5
   252f8:	ldr	r1, [pc, #72]	; 25348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116f0>
   252fc:	mov	r0, r6
   25300:	bl	13460 <dcgettext@plt>
   25304:	mov	r1, r6
   25308:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2530c:	ldr	r3, [r4]
   25310:	ldr	r4, [r3]
   25314:	cmp	r4, #0
   25318:	moveq	r4, r3
   2531c:	beq	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   25320:	ldr	r3, [r4]
   25324:	cmp	r3, #0
   25328:	beq	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   2532c:	mov	r4, r3
   25330:	ldr	r3, [r3]
   25334:	cmp	r3, #0
   25338:	bne	2527c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11624>
   2533c:	b	2529c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11644>
   25340:	andeq	pc, r4, ip, ror ip	; <UNPREDICTABLE>
   25344:	andeq	r8, ip, r0, rrx
   25348:	muleq	r4, r0, ip
   2534c:	push	{r4, lr}
   25350:	mov	r4, r0
   25354:	mov	r0, #12
   25358:	bl	13574 <xmalloc@plt>
   2535c:	ldr	r2, [pc, #40]	; 2538c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25360:	ldr	r1, [pc, #40]	; 25390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11738>
   25364:	mov	ip, #0
   25368:	ldrb	r3, [r2, #1]
   2536c:	ldr	lr, [r1]
   25370:	orr	r3, r3, #1
   25374:	strb	r3, [r2, #1]
   25378:	str	r4, [r0, #4]
   2537c:	str	lr, [r0]
   25380:	str	r0, [r1]
   25384:	str	ip, [r0, #8]
   25388:	pop	{r4, pc}
   2538c:	andeq	r8, ip, ip, lsl #1
   25390:	andeq	r8, ip, ip, lsr r0
   25394:	push	{r4, lr}
   25398:	mov	r4, r0
   2539c:	mov	r0, #12
   253a0:	bl	13574 <xmalloc@plt>
   253a4:	ldr	r2, [pc, #40]	; 253d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1177c>
   253a8:	ldr	r1, [pc, #40]	; 253d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11780>
   253ac:	mov	ip, #1
   253b0:	ldrb	r3, [r2, #1]
   253b4:	ldr	lr, [r1]
   253b8:	orr	r3, r3, ip
   253bc:	strb	r3, [r2, #1]
   253c0:	str	r4, [r0, #4]
   253c4:	str	lr, [r0]
   253c8:	str	r0, [r1]
   253cc:	str	ip, [r0, #8]
   253d0:	pop	{r4, pc}
   253d4:	andeq	r8, ip, ip, lsl #1
   253d8:	andeq	r8, ip, ip, lsr r0
   253dc:	push	{r4, r5, r6, lr}
   253e0:	mov	r6, r0
   253e4:	ldr	r4, [pc, #64]	; 2542c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117d4>
   253e8:	mov	r5, r1
   253ec:	ldr	r3, [r4, #288]	; 0x120
   253f0:	cmp	r3, #0
   253f4:	beq	25410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117b8>
   253f8:	ldr	r1, [pc, #48]	; 25430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117d8>
   253fc:	ldr	r0, [pc, #48]	; 25434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117dc>
   25400:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   25404:	str	r6, [r4, #288]	; 0x120
   25408:	str	r5, [r4, #292]	; 0x124
   2540c:	pop	{r4, r5, r6, pc}
   25410:	ldr	r3, [r4, #292]	; 0x124
   25414:	cmp	r3, #0
   25418:	bne	253f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117a0>
   2541c:	ldr	r3, [r4, #296]	; 0x128
   25420:	cmp	r3, #0
   25424:	bne	253f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117a0>
   25428:	b	25404 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117ac>
   2542c:	andeq	r7, ip, r8, lsr #23
   25430:	andeq	r1, r0, r1, lsl pc
   25434:	andeq	pc, r4, r8, rrx
   25438:	push	{r4, r5, lr}
   2543c:	sub	sp, sp, #20
   25440:	ldr	r4, [pc, #144]	; 254d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11880>
   25444:	mov	r3, #0
   25448:	str	r3, [sp, #12]
   2544c:	ldr	r2, [r4, #292]	; 0x124
   25450:	str	r3, [sp, #8]
   25454:	str	r2, [sp]
   25458:	str	r3, [sp, #4]
   2545c:	ldr	r1, [r4, #288]	; 0x120
   25460:	mov	r2, #1
   25464:	mov	r5, r0
   25468:	bl	23fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10368>
   2546c:	ldr	r3, [r4, #300]	; 0x12c
   25470:	cmp	r3, #0
   25474:	beq	254c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1186c>
   25478:	mov	r0, #8
   2547c:	bl	13574 <xmalloc@plt>
   25480:	ldr	r2, [r4, #300]	; 0x12c
   25484:	ldr	ip, [r4]
   25488:	mov	r1, r5
   2548c:	mov	r3, r0
   25490:	ldr	r0, [pc, #68]	; 254dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11884>
   25494:	stm	r3, {r2, ip}
   25498:	str	r3, [r4, #300]	; 0x12c
   2549c:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   254a0:	ldr	r1, [r4, #296]	; 0x128
   254a4:	cmp	r1, #0
   254a8:	beq	254b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11860>
   254ac:	mov	r2, r0
   254b0:	ldr	r0, [pc, #40]	; 254e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11888>
   254b4:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   254b8:	str	r0, [r4, #296]	; 0x128
   254bc:	add	sp, sp, #20
   254c0:	pop	{r4, r5, pc}
   254c4:	mov	r1, r5
   254c8:	ldr	r0, [pc, #20]	; 254e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1188c>
   254cc:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   254d0:	str	r0, [r4, #288]	; 0x120
   254d4:	b	25478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11820>
   254d8:	andeq	r7, ip, r8, lsr #23
   254dc:	andeq	r0, r0, r1, asr #2
   254e0:	andeq	r0, r0, r5, asr #2
   254e4:	andeq	r0, r0, r3, asr #2
   254e8:	ldr	ip, [pc, #312]	; 25628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119d0>
   254ec:	push	{r4, r5, r6, r7, r8, lr}
   254f0:	mov	r2, r1
   254f4:	ldr	ip, [ip]
   254f8:	mov	r3, #0
   254fc:	ldr	r1, [pc, #296]	; 2562c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119d4>
   25500:	ldr	r5, [ip, #24]
   25504:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   25508:	mov	r0, r5
   2550c:	bl	137d8 <strlen@plt>
   25510:	add	r0, r0, #1
   25514:	bl	13574 <xmalloc@plt>
   25518:	ldrb	r3, [r5]
   2551c:	cmp	r3, #0
   25520:	mov	r4, r0
   25524:	beq	25620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119c8>
   25528:	ldr	lr, [pc, #256]	; 25630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119d8>
   2552c:	mov	r0, r5
   25530:	mov	ip, r4
   25534:	lsl	r2, r3, #1
   25538:	mov	r1, ip
   2553c:	ldrh	r2, [lr, r2]
   25540:	tst	r2, #140	; 0x8c
   25544:	movne	r2, #1
   25548:	moveq	r2, #0
   2554c:	cmp	r3, #95	; 0x5f
   25550:	orreq	r2, r2, #1
   25554:	cmp	r2, #0
   25558:	strbne	r3, [r1], #1
   2555c:	ldrb	r3, [r0, #1]!
   25560:	movne	ip, r1
   25564:	cmp	r3, #0
   25568:	bne	25534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x118dc>
   2556c:	mov	r6, #0
   25570:	strb	r6, [ip]
   25574:	mov	r0, r4
   25578:	bl	137d8 <strlen@plt>
   2557c:	add	r0, r0, #14
   25580:	bl	13574 <xmalloc@plt>
   25584:	mov	r2, r4
   25588:	ldr	r1, [pc, #164]	; 25634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119dc>
   2558c:	mov	r7, r0
   25590:	bl	13a00 <sprintf@plt>
   25594:	mov	r1, r5
   25598:	mov	r0, #324	; 0x144
   2559c:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   255a0:	mov	r2, r6
   255a4:	mov	r1, r0
   255a8:	mov	r0, r7
   255ac:	bl	2cc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18fbc>
   255b0:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   255b4:	mov	r0, r4
   255b8:	bl	137d8 <strlen@plt>
   255bc:	add	r0, r0, #13
   255c0:	bl	13574 <xmalloc@plt>
   255c4:	mov	r2, r4
   255c8:	ldr	r1, [pc, #104]	; 25638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119e0>
   255cc:	mov	r7, r0
   255d0:	bl	13a00 <sprintf@plt>
   255d4:	mov	r1, r5
   255d8:	mov	r0, #324	; 0x144
   255dc:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   255e0:	mov	r1, r5
   255e4:	mov	r8, r0
   255e8:	ldr	r0, [pc, #76]	; 2563c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x119e4>
   255ec:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   255f0:	mov	r1, r8
   255f4:	mov	r2, r0
   255f8:	mov	r0, #43	; 0x2b
   255fc:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   25600:	mov	r2, r6
   25604:	mov	r1, r0
   25608:	mov	r0, r7
   2560c:	bl	2cc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18fbc>
   25610:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   25614:	mov	r0, r4
   25618:	pop	{r4, r5, r6, r7, r8, lr}
   2561c:	b	13364 <free@plt>
   25620:	mov	ip, r0
   25624:	b	2556c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11914>
   25628:	andeq	r7, ip, r8, lsr #23
   2562c:	muleq	r4, r0, r8
   25630:	andeq	r6, ip, r0, lsl #24
   25634:	andeq	pc, r4, r4, ror #25
   25638:	strdeq	pc, [r4], -r4
   2563c:	andeq	r0, r0, r1, asr #2
   25640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25644:	mov	r5, #0
   25648:	sub	sp, sp, #20
   2564c:	subs	ip, r0, r5
   25650:	ldr	r8, [pc, #356]	; 257bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b64>
   25654:	movne	ip, #1
   25658:	mov	r9, r1
   2565c:	mov	r6, r2
   25660:	str	r5, [sp, #4]
   25664:	mov	r2, r3
   25668:	str	ip, [sp]
   2566c:	ldr	r3, [sp, #60]	; 0x3c
   25670:	mov	sl, r0
   25674:	add	r1, sp, #12
   25678:	add	r0, sp, #8
   2567c:	ldr	r7, [sp, #56]	; 0x38
   25680:	bl	20ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd288>
   25684:	ldr	r3, [r8, #300]	; 0x12c
   25688:	cmp	r3, r5
   2568c:	beq	257a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b48>
   25690:	ldr	ip, [r3, #4]
   25694:	ldr	r2, [r8, #296]	; 0x128
   25698:	ldr	r1, [r8, #288]	; 0x120
   2569c:	ldrb	r3, [ip, #84]	; 0x54
   256a0:	mov	r0, #43	; 0x2b
   256a4:	orr	r3, r3, #16
   256a8:	strb	r3, [ip, #84]	; 0x54
   256ac:	bl	2c9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d80>
   256b0:	ldr	r3, [r8, #300]	; 0x12c
   256b4:	mov	r2, r5
   256b8:	ldr	fp, [r3, #4]
   256bc:	mov	r1, r0
   256c0:	ldr	r0, [pc, #248]	; 257c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b68>
   256c4:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   256c8:	ldr	r4, [r8, #300]	; 0x12c
   256cc:	cmp	r4, r5
   256d0:	str	r0, [fp, #52]	; 0x34
   256d4:	bne	256f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11a98>
   256d8:	b	257a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b48>
   256dc:	mov	r0, r4
   256e0:	bl	13364 <free@plt>
   256e4:	cmp	fp, #0
   256e8:	mov	r4, fp
   256ec:	beq	25768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b10>
   256f0:	cmp	r6, #0
   256f4:	ldr	r3, [r4, #4]
   256f8:	beq	25708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ab0>
   256fc:	ldr	r2, [r3, #40]	; 0x28
   25700:	cmp	r2, #0
   25704:	streq	r6, [r3, #40]	; 0x28
   25708:	ldr	fp, [r4]
   2570c:	ldr	r1, [sp, #8]
   25710:	cmp	fp, #0
   25714:	ldr	r2, [sp, #12]
   25718:	streq	sl, [r3, #48]	; 0x30
   2571c:	streq	fp, [r3, #80]	; 0x50
   25720:	cmp	r7, #0
   25724:	str	r1, [r3, #32]
   25728:	str	r2, [r3, #36]	; 0x24
   2572c:	beq	2573c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ae4>
   25730:	ldr	r2, [r3, #56]	; 0x38
   25734:	cmp	r2, #0
   25738:	streq	r7, [r3, #56]	; 0x38
   2573c:	cmp	r9, #0
   25740:	beq	256dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11a84>
   25744:	mov	r0, #8
   25748:	bl	13574 <xmalloc@plt>
   2574c:	ldr	r3, [r4, #4]
   25750:	ldr	fp, [r4]
   25754:	ldr	r3, [r3, #24]
   25758:	str	r5, [r0]
   2575c:	str	r3, [r0, #4]
   25760:	mov	r5, r0
   25764:	b	256dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11a84>
   25768:	cmp	r5, #0
   2576c:	beq	257a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b48>
   25770:	mov	r0, #12
   25774:	bl	13574 <xmalloc@plt>
   25778:	ldr	r2, [pc, #68]	; 257c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b6c>
   2577c:	ldr	r1, [pc, #68]	; 257c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b70>
   25780:	ldrb	r3, [r2, #1]
   25784:	ldr	ip, [r1]
   25788:	orr	r3, r3, #1
   2578c:	strb	r3, [r2, #1]
   25790:	str	r5, [r0, #4]
   25794:	str	fp, [r0, #8]
   25798:	str	ip, [r0]
   2579c:	str	r0, [r1]
   257a0:	mov	r3, #0
   257a4:	str	r3, [r8, #288]	; 0x120
   257a8:	str	r3, [r8, #300]	; 0x12c
   257ac:	str	r3, [r8, #296]	; 0x128
   257b0:	str	r3, [r8, #292]	; 0x124
   257b4:	add	sp, sp, #20
   257b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257bc:	andeq	r7, ip, r8, lsr #23
   257c0:	andeq	r4, r8, r0, lsl #22
   257c4:	andeq	r8, ip, ip, lsl #1
   257c8:	andeq	r8, ip, ip, lsr r0
   257cc:	push	{r4, r5, r6, r7, r8, lr}
   257d0:	mov	r8, r0
   257d4:	mov	r0, #12
   257d8:	mov	r6, r2
   257dc:	mov	r5, r3
   257e0:	mov	r7, r1
   257e4:	bl	13574 <xmalloc@plt>
   257e8:	cmp	r5, #0
   257ec:	ldrb	r2, [r0, #8]
   257f0:	mov	r4, r0
   257f4:	str	r8, [r0]
   257f8:	bic	r2, r2, #7
   257fc:	orr	r2, r2, #1
   25800:	strb	r2, [r0, #8]
   25804:	beq	25890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c38>
   25808:	cmp	r7, #0
   2580c:	str	r7, [r0, #4]
   25810:	beq	25938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ce0>
   25814:	cmp	r6, #0
   25818:	beq	25830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11bd8>
   2581c:	ldr	r1, [pc, #364]	; 25990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d38>
   25820:	mov	r0, r6
   25824:	bl	13520 <strcasecmp@plt>
   25828:	cmp	r0, #0
   2582c:	bne	2584c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11bf4>
   25830:	ldrb	r3, [r4, #8]
   25834:	mov	r0, r4
   25838:	bic	r3, r3, #48	; 0x30
   2583c:	orr	r3, r3, #8
   25840:	strb	r3, [r4, #8]
   25844:	pop	{r4, r5, r6, r7, r8, lr}
   25848:	b	2d8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c6c>
   2584c:	ldr	r1, [pc, #320]	; 25994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d3c>
   25850:	mov	r0, r6
   25854:	bl	13520 <strcasecmp@plt>
   25858:	cmp	r0, #0
   2585c:	beq	2594c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cf4>
   25860:	ldr	r1, [pc, #304]	; 25998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d40>
   25864:	mov	r0, r6
   25868:	bl	13520 <strcasecmp@plt>
   2586c:	cmp	r0, #0
   25870:	bne	25968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d10>
   25874:	ldrb	r3, [r4, #8]
   25878:	mov	r0, r4
   2587c:	bic	r3, r3, #24
   25880:	orr	r3, r3, #32
   25884:	strb	r3, [r4, #8]
   25888:	pop	{r4, r5, r6, r7, r8, lr}
   2588c:	b	2d8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c6c>
   25890:	mov	r0, r7
   25894:	bl	137d8 <strlen@plt>
   25898:	add	r0, r0, #1
   2589c:	bl	13574 <xmalloc@plt>
   258a0:	ldrb	r2, [r7]
   258a4:	cmp	r2, #0
   258a8:	beq	25984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d2c>
   258ac:	mov	ip, r5
   258b0:	mov	lr, r7
   258b4:	mov	r1, r0
   258b8:	b	258d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c7c>
   258bc:	strb	r2, [r1, #-1]
   258c0:	ldrb	r2, [lr, #1]!
   258c4:	mov	r5, ip
   258c8:	mov	ip, #0
   258cc:	cmp	r2, #0
   258d0:	beq	25920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cc8>
   258d4:	cmp	ip, #0
   258d8:	mov	r3, r1
   258dc:	bne	258bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c64>
   258e0:	cmp	r2, #42	; 0x2a
   258e4:	cmpne	r2, #63	; 0x3f
   258e8:	moveq	r1, #1
   258ec:	movne	r1, #0
   258f0:	cmp	r2, #91	; 0x5b
   258f4:	orreq	r1, r1, #1
   258f8:	cmp	r1, #0
   258fc:	bne	25934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cdc>
   25900:	strb	r2, [r3], #1
   25904:	sub	ip, r2, #92	; 0x5c
   25908:	ldrb	r2, [lr, #1]!
   2590c:	clz	ip, ip
   25910:	mov	r1, r3
   25914:	cmp	r2, #0
   25918:	lsr	ip, ip, #5
   2591c:	bne	258d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c7c>
   25920:	cmp	r5, #0
   25924:	strbne	r2, [r1]
   25928:	beq	25984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d2c>
   2592c:	str	r0, [r4, #4]
   25930:	b	25814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11bbc>
   25934:	bl	13364 <free@plt>
   25938:	ldrb	r3, [r4, #8]
   2593c:	str	r7, [r4, #4]
   25940:	bic	r3, r3, #1
   25944:	strb	r3, [r4, #8]
   25948:	b	25814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11bbc>
   2594c:	ldrb	r3, [r4, #8]
   25950:	mov	r0, r4
   25954:	bic	r3, r3, #40	; 0x28
   25958:	orr	r3, r3, #16
   2595c:	strb	r3, [r4, #8]
   25960:	pop	{r4, r5, r6, r7, r8, lr}
   25964:	b	2d8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c6c>
   25968:	mov	r2, #5
   2596c:	ldr	r1, [pc, #40]	; 2599c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d44>
   25970:	mov	r0, #0
   25974:	bl	13460 <dcgettext@plt>
   25978:	mov	r1, r6
   2597c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25980:	b	25830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11bd8>
   25984:	bl	13364 <free@plt>
   25988:	mov	r0, r7
   2598c:	b	2592c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cd4>
   25990:	andeq	pc, r4, r4, lsl #26
   25994:	andeq	pc, r4, r8, lsl #26
   25998:	andeq	pc, r4, ip, lsl #26
   2599c:	andeq	pc, r4, r4, lsl sp	; <UNPREDICTABLE>
   259a0:	push	{r4, r5, r6, lr}
   259a4:	mov	r5, r0
   259a8:	mov	r4, r1
   259ac:	mov	r0, #1
   259b0:	mov	r1, #60	; 0x3c
   259b4:	bl	13bec <xcalloc@plt>
   259b8:	ldr	r1, [pc, #20]	; 259d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d7c>
   259bc:	mvn	r2, #0
   259c0:	str	r5, [r0, #12]
   259c4:	str	r4, [r0, #28]
   259c8:	str	r1, [r0, #56]	; 0x38
   259cc:	str	r2, [r0, #48]	; 0x30
   259d0:	pop	{r4, r5, r6, pc}
   259d4:	muleq	r1, r0, r6
   259d8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   259dc:	subs	r8, r0, #0
   259e0:	ldr	r7, [pc, #900]	; 25d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12114>
   259e4:	mov	r9, r1
   259e8:	mov	sl, r2
   259ec:	ldr	r4, [r7, #132]	; 0x84
   259f0:	beq	25d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120dc>
   259f4:	cmp	r4, #0
   259f8:	beq	25a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e08>
   259fc:	ldrb	r3, [r8]
   25a00:	cmp	r3, #0
   25a04:	beq	25d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120e4>
   25a08:	ldr	r0, [r4, #4]
   25a0c:	ldrb	r3, [r0]
   25a10:	cmp	r3, #0
   25a14:	beq	25d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120e4>
   25a18:	ldr	r5, [pc, #848]	; 25d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12118>
   25a1c:	b	25a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11dd8>
   25a20:	ldr	r4, [r4]
   25a24:	cmp	r4, #0
   25a28:	beq	25a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e08>
   25a2c:	ldr	r0, [r4, #4]
   25a30:	mov	r1, r8
   25a34:	bl	13268 <strcmp@plt>
   25a38:	cmp	r0, #0
   25a3c:	bne	25a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11dc8>
   25a40:	mov	r2, #5
   25a44:	mov	r1, r5
   25a48:	bl	13460 <dcgettext@plt>
   25a4c:	mov	r1, r8
   25a50:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25a54:	ldr	r4, [r4]
   25a58:	cmp	r4, #0
   25a5c:	bne	25a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11dd4>
   25a60:	add	r0, r9, #12
   25a64:	bl	1d4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9874>
   25a68:	add	r0, r9, #28
   25a6c:	bl	1d4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9874>
   25a70:	ldr	r6, [r9, #12]
   25a74:	ldr	r5, [r7, #132]	; 0x84
   25a78:	cmp	r6, #0
   25a7c:	beq	25b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ed0>
   25a80:	ldr	fp, [pc, #748]	; 25d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1211c>
   25a84:	cmp	r5, #0
   25a88:	beq	25d24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120cc>
   25a8c:	ldr	r0, [r5, #32]
   25a90:	ldrb	r3, [r6, #8]
   25a94:	cmp	r0, #0
   25a98:	and	r3, r3, #1
   25a9c:	beq	25c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fe4>
   25aa0:	cmp	r3, #0
   25aa4:	bne	25cb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1205c>
   25aa8:	ldr	r4, [r5, #36]	; 0x24
   25aac:	cmp	r4, #0
   25ab0:	bne	25ac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e6c>
   25ab4:	b	25b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11eb4>
   25ab8:	ldr	r4, [r4]
   25abc:	cmp	r4, #0
   25ac0:	beq	25b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11eb4>
   25ac4:	ldr	r1, [r4, #4]
   25ac8:	ldr	r0, [r6, #4]
   25acc:	bl	13268 <strcmp@plt>
   25ad0:	cmp	r0, #0
   25ad4:	bne	25ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e60>
   25ad8:	ldrb	r3, [r6, #8]
   25adc:	ldrb	r2, [r4, #8]
   25ae0:	eor	r3, r3, r2
   25ae4:	tst	r3, #56	; 0x38
   25ae8:	bne	25ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e60>
   25aec:	mov	r2, #5
   25af0:	mov	r1, fp
   25af4:	bl	13460 <dcgettext@plt>
   25af8:	ldr	r1, [r6, #4]
   25afc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25b00:	ldr	r4, [r4]
   25b04:	cmp	r4, #0
   25b08:	bne	25ac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e6c>
   25b0c:	ldr	r5, [r5]
   25b10:	cmp	r5, #0
   25b14:	bne	25a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e34>
   25b18:	ldr	r5, [r7, #132]	; 0x84
   25b1c:	ldr	r6, [r6]
   25b20:	cmp	r6, #0
   25b24:	bne	25a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e2c>
   25b28:	ldr	r6, [r9, #28]
   25b2c:	cmp	r6, #0
   25b30:	beq	25bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f84>
   25b34:	ldr	fp, [pc, #568]	; 25d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1211c>
   25b38:	cmp	r5, #0
   25b3c:	beq	25d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120bc>
   25b40:	ldr	r0, [r5, #16]
   25b44:	ldrb	r3, [r6, #8]
   25b48:	cmp	r0, #0
   25b4c:	and	r3, r3, #1
   25b50:	beq	25c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fcc>
   25b54:	cmp	r3, #0
   25b58:	bne	25c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ffc>
   25b5c:	ldr	r4, [r5, #20]
   25b60:	cmp	r4, #0
   25b64:	bne	25b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f20>
   25b68:	b	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f68>
   25b6c:	ldr	r4, [r4]
   25b70:	cmp	r4, #0
   25b74:	beq	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f68>
   25b78:	ldr	r1, [r4, #4]
   25b7c:	ldr	r0, [r6, #4]
   25b80:	bl	13268 <strcmp@plt>
   25b84:	cmp	r0, #0
   25b88:	bne	25b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f14>
   25b8c:	ldrb	r3, [r6, #8]
   25b90:	ldrb	r2, [r4, #8]
   25b94:	eor	r3, r3, r2
   25b98:	tst	r3, #56	; 0x38
   25b9c:	bne	25b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f14>
   25ba0:	mov	r2, #5
   25ba4:	mov	r1, fp
   25ba8:	bl	13460 <dcgettext@plt>
   25bac:	ldr	r1, [r6, #4]
   25bb0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25bb4:	ldr	r4, [r4]
   25bb8:	cmp	r4, #0
   25bbc:	bne	25b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f20>
   25bc0:	ldr	r5, [r5]
   25bc4:	cmp	r5, #0
   25bc8:	bne	25b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ee8>
   25bcc:	ldr	r5, [r7, #132]	; 0x84
   25bd0:	ldr	r6, [r6]
   25bd4:	cmp	r6, #0
   25bd8:	bne	25b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ee0>
   25bdc:	str	sl, [r9, #44]	; 0x2c
   25be0:	str	r8, [r9, #4]
   25be4:	ldrb	r3, [r8]
   25be8:	cmp	r3, #0
   25bec:	ldrne	r2, [pc, #388]	; 25d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12120>
   25bf0:	ldrne	r3, [r2, #304]	; 0x130
   25bf4:	addne	r3, r3, #1
   25bf8:	strne	r3, [r2, #304]	; 0x130
   25bfc:	cmp	r5, #0
   25c00:	str	r3, [r9, #8]
   25c04:	bne	25c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fb8>
   25c08:	b	25d64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1210c>
   25c0c:	mov	r5, r3
   25c10:	ldr	r3, [r5]
   25c14:	cmp	r3, #0
   25c18:	bne	25c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fb4>
   25c1c:	str	r9, [r5]
   25c20:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c24:	cmp	r3, #0
   25c28:	beq	25b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f04>
   25c2c:	ldr	r5, [r5]
   25c30:	cmp	r5, #0
   25c34:	bne	25b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ee8>
   25c38:	b	25bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f74>
   25c3c:	cmp	r3, #0
   25c40:	beq	25aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e50>
   25c44:	ldr	r5, [r5]
   25c48:	cmp	r5, #0
   25c4c:	bne	25a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e34>
   25c50:	b	25b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ec0>
   25c54:	mov	r1, r6
   25c58:	bl	13a90 <htab_find@plt>
   25c5c:	subs	r4, r0, #0
   25c60:	bne	25c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1201c>
   25c64:	b	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f68>
   25c68:	ldr	r4, [r4]
   25c6c:	cmp	r4, #0
   25c70:	beq	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f68>
   25c74:	ldr	r1, [r4, #4]
   25c78:	ldr	r0, [r6, #4]
   25c7c:	bl	13268 <strcmp@plt>
   25c80:	cmp	r0, #0
   25c84:	bne	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f68>
   25c88:	ldrb	r3, [r6, #8]
   25c8c:	ldrb	r2, [r4, #8]
   25c90:	eor	r3, r3, r2
   25c94:	tst	r3, #56	; 0x38
   25c98:	bne	25c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12010>
   25c9c:	mov	r1, fp
   25ca0:	mov	r2, #5
   25ca4:	bl	13460 <dcgettext@plt>
   25ca8:	ldr	r1, [r6, #4]
   25cac:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25cb0:	b	25c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12010>
   25cb4:	mov	r1, r6
   25cb8:	bl	13a90 <htab_find@plt>
   25cbc:	subs	r4, r0, #0
   25cc0:	bne	25cd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1207c>
   25cc4:	b	25b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11eb4>
   25cc8:	ldr	r4, [r4]
   25ccc:	cmp	r4, #0
   25cd0:	beq	25b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11eb4>
   25cd4:	ldr	r1, [r4, #4]
   25cd8:	ldr	r0, [r6, #4]
   25cdc:	bl	13268 <strcmp@plt>
   25ce0:	cmp	r0, #0
   25ce4:	bne	25b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11eb4>
   25ce8:	ldrb	r3, [r6, #8]
   25cec:	ldrb	r2, [r4, #8]
   25cf0:	eor	r3, r3, r2
   25cf4:	tst	r3, #56	; 0x38
   25cf8:	bne	25cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12070>
   25cfc:	mov	r1, fp
   25d00:	mov	r2, #5
   25d04:	bl	13460 <dcgettext@plt>
   25d08:	ldr	r1, [r6, #4]
   25d0c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25d10:	b	25cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12070>
   25d14:	ldr	r6, [r6]
   25d18:	cmp	r6, #0
   25d1c:	bne	25bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f78>
   25d20:	b	25bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f84>
   25d24:	ldr	r6, [r6]
   25d28:	cmp	r6, #0
   25d2c:	bne	25b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ec4>
   25d30:	b	25b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ed0>
   25d34:	cmp	r4, #0
   25d38:	beq	25d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12104>
   25d3c:	mov	r2, #5
   25d40:	ldr	r1, [pc, #52]	; 25d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12124>
   25d44:	mov	r0, #0
   25d48:	bl	13460 <dcgettext@plt>
   25d4c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   25d50:	mov	r0, r9
   25d54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d58:	b	13364 <free@plt>
   25d5c:	ldr	r8, [pc, #28]	; 25d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12128>
   25d60:	b	25a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e08>
   25d64:	ldr	r5, [pc, #24]	; 25d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1212c>
   25d68:	b	25c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fc4>
   25d6c:	andeq	r8, ip, ip, lsl #1
   25d70:	muleq	r4, r0, sp
   25d74:			; <UNDEFINED> instruction: 0x0004fdb4
   25d78:	andeq	r7, ip, r8, lsr #23
   25d7c:	andeq	pc, r4, r8, asr #26
   25d80:	andeq	r2, r5, ip
   25d84:	andeq	r8, ip, r0, lsl r1
   25d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d8c:	sub	sp, sp, #52	; 0x34
   25d90:	ldr	fp, [pc, #4056]	; 26d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13118>
   25d94:	ldr	r0, [fp, #128]	; 0x80
   25d98:	cmp	r0, #0
   25d9c:	beq	25da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1214c>
   25da0:	bl	1d4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9874>
   25da4:	ldr	r5, [pc, #4040]	; 26d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1311c>
   25da8:	ldr	r2, [pc, #4040]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   25dac:	ldr	r0, [pc, #4040]	; 26d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13124>
   25db0:	ldr	r3, [r5]
   25db4:	mov	r4, r2
   25db8:	ldr	r1, [r2, #140]	; 0x8c
   25dbc:	str	r3, [r2, #252]	; 0xfc
   25dc0:	bl	1fd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc130>
   25dc4:	bl	1dc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ff8>
   25dc8:	bl	2d3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19768>
   25dcc:	ldr	r4, [r4, #260]	; 0x104
   25dd0:	cmp	r4, #0
   25dd4:	beq	25dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12194>
   25dd8:	ldr	r0, [r4, #4]
   25ddc:	bl	1d294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x963c>
   25de0:	ldr	r4, [r4]
   25de4:	cmp	r4, #0
   25de8:	bne	25dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12180>
   25dec:	bl	13b44 <bfd_section_already_linked_table_init@plt>
   25df0:	cmp	r0, #0
   25df4:	beq	2790c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13cb4>
   25df8:	ldr	r0, [pc, #3960]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   25dfc:	ldr	r2, [r5]
   25e00:	mov	ip, r0
   25e04:	ldr	r3, [r0, #240]	; 0xf0
   25e08:	mov	r1, #0
   25e0c:	add	r3, r3, #1
   25e10:	ldr	r0, [r0, #140]	; 0x8c
   25e14:	str	r3, [ip, #240]	; 0xf0
   25e18:	str	r2, [ip, #252]	; 0xfc
   25e1c:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   25e20:	ldrb	r3, [fp, #1]
   25e24:	tst	r3, #2
   25e28:	bne	27650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139f8>
   25e2c:	ldr	r3, [fp, #68]	; 0x44
   25e30:	cmp	r3, #0
   25e34:	beq	25e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121ec>
   25e38:	ldr	r1, [pc, #3904]	; 26d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13128>
   25e3c:	ldr	r0, [pc, #3904]	; 26d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1312c>
   25e40:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   25e44:	ldr	r3, [pc, #3884]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   25e48:	add	r3, r3, #260	; 0x104
   25e4c:	ldr	r2, [r3, #4]
   25e50:	str	r3, [fp, #68]	; 0x44
   25e54:	cmp	r2, #0
   25e58:	beq	27970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d18>
   25e5c:	ldr	r0, [fp, #76]	; 0x4c
   25e60:	cmp	r0, #0
   25e64:	beq	25e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12214>
   25e68:	bl	1fb84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf2c>
   25e6c:	ldr	r0, [fp, #80]	; 0x50
   25e70:	cmp	r0, #0
   25e74:	beq	25e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12224>
   25e78:	bl	1fb84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf2c>
   25e7c:	bl	2d32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196d4>
   25e80:	ldr	r3, [pc, #3984]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   25e84:	ldr	r3, [r3, #80]	; 0x50
   25e88:	cmp	r3, #0
   25e8c:	beq	25f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d0>
   25e90:	ldr	r4, [pc, #3808]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   25e94:	ldr	r3, [r4, #236]	; 0xec
   25e98:	cmp	r3, #0
   25e9c:	beq	25f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d0>
   25ea0:	mov	r2, #5
   25ea4:	ldr	r1, [pc, #3804]	; 26d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13130>
   25ea8:	mov	r0, #0
   25eac:	bl	13460 <dcgettext@plt>
   25eb0:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   25eb4:	ldr	r5, [r4, #236]	; 0xec
   25eb8:	cmp	r5, #0
   25ebc:	beq	25f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d0>
   25ec0:	ldr	r7, [pc, #3780]	; 26d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13134>
   25ec4:	ldr	r8, [pc, #3780]	; 26d90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13138>
   25ec8:	ldr	r6, [pc, #3780]	; 26d94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1313c>
   25ecc:	ldr	r1, [r5, #4]
   25ed0:	mov	r0, r7
   25ed4:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   25ed8:	ldr	r0, [r5, #4]
   25edc:	bl	137d8 <strlen@plt>
   25ee0:	cmp	r0, #28
   25ee4:	mov	r4, r0
   25ee8:	bhi	270c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1346c>
   25eec:	add	r4, r4, #1
   25ef0:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   25ef4:	cmp	r4, #30
   25ef8:	bne	25eec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12294>
   25efc:	ldr	r1, [r5, #8]
   25f00:	cmp	r1, #0
   25f04:	beq	25f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122b8>
   25f08:	mov	r0, r8
   25f0c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   25f10:	ldr	r1, [r5, #12]
   25f14:	mov	r0, r6
   25f18:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   25f1c:	ldr	r5, [r5]
   25f20:	cmp	r5, #0
   25f24:	bne	25ecc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12274>
   25f28:	bl	13b80 <bfd_section_already_linked_table_free@plt>
   25f2c:	ldr	r3, [pc, #3652]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   25f30:	ldr	r4, [r3, #224]	; 0xe0
   25f34:	ldr	r3, [pc, #3676]	; 26d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13140>
   25f38:	cmp	r4, #0
   25f3c:	str	r3, [sp, #24]
   25f40:	beq	26004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123ac>
   25f44:	ldr	r7, [pc, #3620]	; 26d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13118>
   25f48:	ldr	r9, [pc, #3660]	; 26d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13144>
   25f4c:	ldr	sl, [pc, #3660]	; 26da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13148>
   25f50:	ldr	r8, [pc, #3660]	; 26da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1314c>
   25f54:	ldrb	r3, [r4, #37]	; 0x25
   25f58:	tst	r3, #32
   25f5c:	bne	25ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123a0>
   25f60:	ldr	r3, [sp, #24]
   25f64:	ldr	r5, [r4, #16]
   25f68:	ldr	r1, [fp, #48]	; 0x30
   25f6c:	ldr	r2, [r3, #28]
   25f70:	mov	r0, r5
   25f74:	bl	1355c <bfd_arch_get_compatible@plt>
   25f78:	ldrb	r3, [fp]
   25f7c:	and	r3, r3, #3
   25f80:	cmp	r3, #2
   25f84:	mov	r6, r0
   25f88:	beq	26200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125a8>
   25f8c:	ldrb	r3, [fp, #3]
   25f90:	tst	r3, #8
   25f94:	bne	26200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125a8>
   25f98:	cmp	r6, #0
   25f9c:	beq	26268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12610>
   25fa0:	ldr	r3, [r5, #108]	; 0x6c
   25fa4:	cmp	r3, #0
   25fa8:	beq	25ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123a0>
   25fac:	ldr	r3, [sp, #24]
   25fb0:	ldr	r3, [r3, #16]
   25fb4:	cmp	r3, #0
   25fb8:	movne	r6, #0
   25fbc:	beq	27168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13510>
   25fc0:	ldr	r3, [fp, #48]	; 0x30
   25fc4:	mov	r1, r7
   25fc8:	mov	r0, r5
   25fcc:	ldr	r3, [r3, #4]
   25fd0:	ldr	r3, [r3, #172]	; 0xac
   25fd4:	blx	r3
   25fd8:	cmp	r0, #0
   25fdc:	bne	2676c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b14>
   25fe0:	ldr	r3, [sp, #24]
   25fe4:	ldr	r3, [r3, #16]
   25fe8:	cmp	r3, #0
   25fec:	bne	26758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b00>
   25ff0:	mov	r0, r6
   25ff4:	bl	136ac <bfd_set_error_handler@plt>
   25ff8:	ldr	r4, [r4, #24]
   25ffc:	cmp	r4, #0
   26000:	bne	25f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122fc>
   26004:	ldr	r3, [sp, #24]
   26008:	ldr	r3, [r3, #84]	; 0x54
   2600c:	cmp	r3, #0
   26010:	beq	26148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x124f0>
   26014:	ldr	r3, [pc, #3420]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26018:	ldr	r6, [r3, #224]	; 0xe0
   2601c:	cmp	r6, #0
   26020:	beq	27a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e0c>
   26024:	ldr	r9, [pc, #3452]	; 26da8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13150>
   26028:	ldr	sl, [pc, #3452]	; 26dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13154>
   2602c:	mov	r7, #0
   26030:	b	26040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123e8>
   26034:	ldr	r6, [r6, #24]
   26038:	cmp	r6, #0
   2603c:	beq	260f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12498>
   26040:	mov	r1, r9
   26044:	ldr	r0, [r6, #16]
   26048:	bl	13604 <bfd_get_section_by_name@plt>
   2604c:	subs	r8, r0, #0
   26050:	beq	26034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123dc>
   26054:	ldr	r3, [r8, #36]	; 0x24
   26058:	mov	r5, #0
   2605c:	mov	r0, r3
   26060:	mov	r4, r3
   26064:	str	r3, [sp, #28]
   26068:	bl	13574 <xmalloc@plt>
   2606c:	mov	r1, r8
   26070:	mov	r2, r0
   26074:	str	r0, [sp, #32]
   26078:	ldr	r0, [r6, #16]
   2607c:	str	r4, [sp, #8]
   26080:	mov	r4, #0
   26084:	strd	r4, [sp]
   26088:	bl	13454 <bfd_get_section_contents@plt>
   2608c:	cmp	r0, #0
   26090:	beq	270d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13478>
   26094:	ldrd	r2, [sp, #28]
   26098:	add	r5, r3, r2
   2609c:	cmp	r3, r5
   260a0:	bcs	260d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12480>
   260a4:	mov	r4, r3
   260a8:	mov	r3, #0
   260ac:	mov	r1, r4
   260b0:	mov	r0, r7
   260b4:	mov	r2, r3
   260b8:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   260bc:	mov	r7, r0
   260c0:	mov	r0, r4
   260c4:	bl	137d8 <strlen@plt>
   260c8:	add	r0, r0, #1
   260cc:	add	r4, r4, r0
   260d0:	cmp	r4, r5
   260d4:	bcc	260a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12450>
   260d8:	ldr	r3, [r8, #20]
   260dc:	ldr	r6, [r6, #24]
   260e0:	orr	r3, r3, #2129920	; 0x208000
   260e4:	cmp	r6, #0
   260e8:	str	r3, [r8, #20]
   260ec:	bne	26040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123e8>
   260f0:	mov	r3, #0
   260f4:	mov	r2, r3
   260f8:	mov	r0, r3
   260fc:	ldr	r1, [pc, #3244]	; 26db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13158>
   26100:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   26104:	ldr	r3, [sp, #24]
   26108:	mov	r1, #60	; 0x3c
   2610c:	ldr	r5, [r3, #84]	; 0x54
   26110:	mov	r4, r0
   26114:	mov	r0, #1
   26118:	bl	13bec <xcalloc@plt>
   2611c:	ldr	lr, [pc, #3216]	; 26db4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1315c>
   26120:	mvn	ip, #0
   26124:	mov	r2, #0
   26128:	mov	r3, r0
   2612c:	mov	r1, r3
   26130:	mov	r0, r5
   26134:	str	r4, [r3, #28]
   26138:	str	r7, [r3, #12]
   2613c:	str	lr, [r3, #56]	; 0x38
   26140:	str	ip, [r3, #48]	; 0x30
   26144:	bl	259d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d80>
   26148:	bl	28904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14cac>
   2614c:	ldr	r3, [pc, #3268]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   26150:	ldr	r3, [r3, #12]
   26154:	cmp	r3, #0
   26158:	bne	27498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13840>
   2615c:	mov	r0, #1
   26160:	bl	22a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee04>
   26164:	ldr	r3, [pc, #3084]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26168:	ldr	r4, [r3, #220]	; 0xdc
   2616c:	cmp	r4, #0
   26170:	ldreq	r3, [pc, #3136]	; 26db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13160>
   26174:	streq	r3, [sp, #32]
   26178:	beq	262e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1268c>
   2617c:	ldr	r7, [pc, #3124]	; 26db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13160>
   26180:	ldr	r6, [pc, #3124]	; 26dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13164>
   26184:	str	r7, [sp, #32]
   26188:	ldr	r5, [pc, #3120]	; 26dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13168>
   2618c:	b	261cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12574>
   26190:	ldr	r3, [r7, #20]
   26194:	str	r3, [r4, #16]
   26198:	str	r3, [r4, #28]
   2619c:	ldr	r3, [r4, #24]
   261a0:	subs	r0, r3, #0
   261a4:	beq	261c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12568>
   261a8:	bl	2c9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d58>
   261ac:	ldr	r0, [r7, #32]
   261b0:	cmp	r0, #0
   261b4:	beq	262c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1266c>
   261b8:	ldr	r3, [r7, #20]
   261bc:	str	r3, [r4, #20]
   261c0:	ldr	r4, [r4, #8]
   261c4:	cmp	r4, #0
   261c8:	beq	262e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1268c>
   261cc:	ldr	r3, [r4, #12]
   261d0:	subs	r0, r3, #0
   261d4:	beq	2619c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12544>
   261d8:	bl	2c9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d58>
   261dc:	ldr	r0, [r7, #32]
   261e0:	cmp	r0, #0
   261e4:	bne	26190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12538>
   261e8:	mov	r1, r6
   261ec:	mov	r2, #5
   261f0:	bl	13460 <dcgettext@plt>
   261f4:	ldr	r1, [r4]
   261f8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   261fc:	b	2619c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12544>
   26200:	cmp	r6, #0
   26204:	beq	26d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130b4>
   26208:	ldr	r3, [fp, #48]	; 0x30
   2620c:	ldr	r2, [r5, #4]
   26210:	ldr	r3, [r3, #4]
   26214:	ldr	r2, [r2, #4]
   26218:	ldr	r3, [r3, #4]
   2621c:	cmp	r2, r3
   26220:	beq	25fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12348>
   26224:	ldr	r3, [r5, #40]	; 0x28
   26228:	tst	r3, #32
   2622c:	beq	25fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12348>
   26230:	mov	r2, #5
   26234:	mov	r1, r8
   26238:	mov	r0, #0
   2623c:	bl	13460 <dcgettext@plt>
   26240:	ldr	ip, [fp, #48]	; 0x30
   26244:	ldr	r1, [r5, #4]
   26248:	mov	r2, r5
   2624c:	ldr	r3, [ip, #4]
   26250:	ldr	r1, [r1]
   26254:	ldr	r3, [r3]
   26258:	str	ip, [sp]
   2625c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26260:	cmp	r6, #0
   26264:	bne	25fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12348>
   26268:	ldr	r3, [sp, #24]
   2626c:	ldr	r3, [r3, #16]
   26270:	cmp	r3, #0
   26274:	beq	25ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123a0>
   26278:	mov	r2, #5
   2627c:	mov	r1, sl
   26280:	mov	r0, #0
   26284:	bl	13460 <dcgettext@plt>
   26288:	mov	r6, r0
   2628c:	mov	r0, r5
   26290:	bl	13694 <bfd_printable_name@plt>
   26294:	str	r0, [sp, #28]
   26298:	ldr	r0, [fp, #48]	; 0x30
   2629c:	bl	13694 <bfd_printable_name@plt>
   262a0:	mov	r2, r5
   262a4:	ldr	r1, [sp, #28]
   262a8:	mov	r3, r0
   262ac:	mov	r0, r6
   262b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   262b4:	ldr	r4, [r4, #24]
   262b8:	cmp	r4, #0
   262bc:	bne	25f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122fc>
   262c0:	b	26004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123ac>
   262c4:	mov	r2, #5
   262c8:	mov	r1, r5
   262cc:	bl	13460 <dcgettext@plt>
   262d0:	ldr	r1, [r4]
   262d4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   262d8:	ldr	r4, [r4, #8]
   262dc:	cmp	r4, #0
   262e0:	bne	261cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12574>
   262e4:	ldrb	r3, [fp, #7]
   262e8:	ldr	r1, [sp, #32]
   262ec:	mov	r2, #0
   262f0:	tst	r3, #32
   262f4:	str	r2, [r1]
   262f8:	bne	26378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12720>
   262fc:	ldrb	r3, [fp]
   26300:	and	r3, r3, #3
   26304:	cmp	r3, #2
   26308:	beq	270b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13458>
   2630c:	ldr	r3, [pc, #2820]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   26310:	ldr	r0, [fp, #28]
   26314:	ldr	r2, [r3, #44]	; 0x2c
   26318:	cmp	r2, #0
   2631c:	beq	27a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13db0>
   26320:	cmp	r2, #2
   26324:	movne	r3, #0
   26328:	ldr	r5, [pc, #2884]	; 26e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1321c>
   2632c:	add	r4, sp, #44	; 0x2c
   26330:	strne	r3, [sp, #44]	; 0x2c
   26334:	bne	26340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126e8>
   26338:	b	27bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f78>
   2633c:	ldr	r0, [fp, #28]
   26340:	mov	r2, r4
   26344:	mov	r1, r5
   26348:	bl	13904 <bfd_link_hash_traverse@plt>
   2634c:	ldr	r3, [sp, #44]	; 0x2c
   26350:	add	r3, r3, #1
   26354:	cmp	r3, #4
   26358:	str	r3, [sp, #44]	; 0x2c
   2635c:	bls	2633c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126e4>
   26360:	mvn	r3, #0
   26364:	mov	r2, r4
   26368:	ldr	r1, [pc, #2820]	; 26e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1321c>
   2636c:	ldr	r0, [fp, #28]
   26370:	str	r3, [sp, #44]	; 0x2c
   26374:	bl	13904 <bfd_link_hash_traverse@plt>
   26378:	ldr	r3, [pc, #2552]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   2637c:	ldr	r0, [r3, #140]	; 0x8c
   26380:	bl	23750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaf8>
   26384:	ldrb	r0, [fp]
   26388:	and	r3, r0, #3
   2638c:	cmp	r3, #2
   26390:	beq	2718c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13534>
   26394:	tst	r0, #64	; 0x40
   26398:	beq	263b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1275c>
   2639c:	ldr	r3, [fp, #48]	; 0x30
   263a0:	ldr	r1, [pc, #2504]	; 26d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13118>
   263a4:	mov	r0, r3
   263a8:	ldr	r3, [r3, #4]
   263ac:	ldr	r3, [r3, #388]	; 0x184
   263b0:	blx	r3
   263b4:	ldrb	r3, [fp, #6]
   263b8:	tst	r3, #32
   263bc:	bne	26fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13384>
   263c0:	bl	2d340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196e8>
   263c4:	ldr	r0, [pc, #2476]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   263c8:	ldr	r8, [pc, #2484]	; 26d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1312c>
   263cc:	mov	r4, r0
   263d0:	ldr	r0, [r0, #140]	; 0x8c
   263d4:	bl	1cc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9008>
   263d8:	ldr	r3, [r4, #240]	; 0xf0
   263dc:	mov	r2, #0
   263e0:	add	r3, r3, #1
   263e4:	ldr	r0, [r4, #140]	; 0x8c
   263e8:	mov	r1, r2
   263ec:	str	r3, [r4, #240]	; 0xf0
   263f0:	mov	r7, r2
   263f4:	bl	23898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc40>
   263f8:	ldr	r3, [pc, #2576]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   263fc:	mov	r4, r7
   26400:	ldr	r9, [r3]
   26404:	b	2645c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12804>
   26408:	cmp	r7, #0
   2640c:	mov	sl, r5
   26410:	beq	26430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x127d8>
   26414:	ldr	r3, [r7, #16]
   26418:	cmp	r5, r3
   2641c:	beq	26430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x127d8>
   26420:	mov	r1, #3744	; 0xea0
   26424:	mov	r0, r8
   26428:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2642c:	ldr	r5, [r9]
   26430:	ldr	r2, [r6, #72]	; 0x48
   26434:	cmp	r4, #0
   26438:	mvn	r3, #1
   2643c:	sub	r3, r3, r2
   26440:	moveq	r4, sl
   26444:	str	r3, [r6, #72]	; 0x48
   26448:	moveq	r7, r4
   2644c:	moveq	r6, r5
   26450:	movne	r6, r5
   26454:	movne	r7, sl
   26458:	mov	r9, r6
   2645c:	ldr	r5, [r9]
   26460:	cmp	r5, #0
   26464:	mov	r6, r5
   26468:	beq	2678c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b34>
   2646c:	ldr	r3, [r5, #4]
   26470:	cmp	r3, #0
   26474:	beq	26408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x127b0>
   26478:	cmp	r3, #14
   2647c:	bne	26458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12800>
   26480:	mov	r2, #0
   26484:	mov	r1, r2
   26488:	ldr	r0, [r5, #8]
   2648c:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   26490:	cmp	r0, #0
   26494:	beq	26508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128b0>
   26498:	ldr	r3, [r5, #12]
   2649c:	cmp	r3, #0
   264a0:	bne	264fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128a4>
   264a4:	cmp	r7, #0
   264a8:	bne	26e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   264ac:	bl	1c940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ce8>
   264b0:	ldr	r3, [pc, #2392]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   264b4:	ldr	r2, [r9]
   264b8:	mov	r7, #0
   264bc:	ldr	r3, [r3]
   264c0:	ldr	r1, [r2]
   264c4:	ldr	r2, [r3]
   264c8:	str	r1, [r3]
   264cc:	ldr	r3, [r0]
   264d0:	cmp	r3, #0
   264d4:	str	r3, [r9]
   264d8:	ldreq	r3, [pc, #2200]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   264dc:	streq	r9, [r3, #144]	; 0x90
   264e0:	ldr	r3, [pc, #2344]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   264e4:	str	r2, [r0]
   264e8:	ldr	r6, [r3]
   264ec:	b	26458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12800>
   264f0:	ldr	r3, [r0, #72]	; 0x48
   264f4:	cmp	r3, #0
   264f8:	bge	264a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1284c>
   264fc:	ldr	r0, [r0, #20]
   26500:	cmp	r0, #0
   26504:	bne	264f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12898>
   26508:	ldr	r1, [pc, #2228]	; 26dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1316c>
   2650c:	mov	r2, #5
   26510:	mov	r0, #0
   26514:	bl	13460 <dcgettext@plt>
   26518:	ldr	r1, [r5, #8]
   2651c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26520:	ldr	r3, [pc, #2128]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26524:	ldr	r5, [r3, #224]	; 0xe0
   26528:	cmp	r5, #0
   2652c:	beq	265a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1294c>
   26530:	ldr	r9, [pc, #2192]	; 26dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13170>
   26534:	ldr	sl, [pc, #2192]	; 26dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13174>
   26538:	ldr	r3, [r5, #16]
   2653c:	ldr	r4, [r3, #100]	; 0x64
   26540:	cmp	r4, #0
   26544:	beq	26598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12940>
   26548:	ldr	r8, [pc, #2176]	; 26dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13178>
   2654c:	b	2655c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12904>
   26550:	ldr	r4, [r4, #12]
   26554:	cmp	r4, #0
   26558:	beq	26598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12940>
   2655c:	ldr	r3, [r4, #60]	; 0x3c
   26560:	cmp	r3, #0
   26564:	bne	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   26568:	ldrb	r3, [r5, #36]	; 0x24
   2656c:	tst	r3, #16
   26570:	beq	267d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b7c>
   26574:	ldr	r3, [r5, #16]
   26578:	mov	r0, r4
   2657c:	ldr	r1, [pc, #2028]	; 26d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13118>
   26580:	ldr	r3, [r3, #4]
   26584:	ldr	r3, [r3, #368]	; 0x170
   26588:	blx	r3
   2658c:	ldr	r4, [r4, #12]
   26590:	cmp	r4, #0
   26594:	bne	2655c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12904>
   26598:	ldr	r5, [r5, #24]
   2659c:	cmp	r5, #0
   265a0:	bne	26538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128e0>
   265a4:	ldrb	r6, [fp]
   265a8:	and	r6, r6, #3
   265ac:	cmp	r6, #2
   265b0:	beq	26608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129b0>
   265b4:	ldr	r3, [fp, #48]	; 0x30
   265b8:	ldr	r1, [pc, #1968]	; 26d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13118>
   265bc:	mov	r0, r3
   265c0:	ldr	r3, [r3, #4]
   265c4:	ldr	r3, [r3, #396]	; 0x18c
   265c8:	blx	r3
   265cc:	ldr	r1, [pc, #2048]	; 26dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1317c>
   265d0:	ldr	r0, [fp, #48]	; 0x30
   265d4:	bl	13604 <bfd_get_section_by_name@plt>
   265d8:	ldrb	r6, [fp]
   265dc:	cmp	r0, #0
   265e0:	andeq	r6, r6, #3
   265e4:	beq	26608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129b0>
   265e8:	ldr	r3, [pc, #2088]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   265ec:	and	r6, r6, #3
   265f0:	ldr	r2, [r3, #48]	; 0x30
   265f4:	ldr	r3, [r0, #20]
   265f8:	cmp	r2, #0
   265fc:	orrne	r3, r3, #8
   26600:	biceq	r3, r3, #8
   26604:	str	r3, [r0, #20]
   26608:	ldr	r3, [pc, #2048]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   2660c:	ldr	r3, [r3]
   26610:	cmp	r3, #0
   26614:	bne	26628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129d0>
   26618:	b	26678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a20>
   2661c:	ldr	r3, [r3, #16]
   26620:	cmp	r3, #0
   26624:	beq	26678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a20>
   26628:	ldr	r2, [r3, #20]
   2662c:	cmp	r2, #0
   26630:	beq	2661c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129c4>
   26634:	ldr	r1, [r3, #36]	; 0x24
   26638:	cmp	r1, #0
   2663c:	bne	2661c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129c4>
   26640:	ldr	r1, [r3, #48]	; 0x30
   26644:	cmp	r1, #0
   26648:	bne	2661c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129c4>
   2664c:	ldr	r1, [r3, #44]	; 0x2c
   26650:	cmp	r1, #0
   26654:	bne	2661c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129c4>
   26658:	ldr	r1, [r2, #32]
   2665c:	ldr	r0, [r3, #32]
   26660:	cmp	r0, r1
   26664:	ldreq	r2, [r2, #36]	; 0x24
   26668:	streq	r2, [r3, #36]	; 0x24
   2666c:	ldr	r3, [r3, #16]
   26670:	cmp	r3, #0
   26674:	bne	26628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129d0>
   26678:	ldr	r3, [pc, #1944]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   2667c:	ldr	r3, [r3, #12]
   26680:	cmp	r3, #0
   26684:	bne	275cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13974>
   26688:	cmp	r6, #2
   2668c:	bne	270e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13490>
   26690:	bl	2d368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19710>
   26694:	mov	r0, #40	; 0x28
   26698:	bl	13574 <xmalloc@plt>
   2669c:	ldr	r3, [pc, #1844]	; 26dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13180>
   266a0:	ldr	r5, [r3]
   266a4:	cmp	r5, #0
   266a8:	movne	r8, #0
   266ac:	movne	r6, #10
   266b0:	mov	r9, r0
   266b4:	beq	269a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d48>
   266b8:	ldr	r3, [pc, #1872]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   266bc:	ldr	r4, [r3]
   266c0:	cmp	r4, #0
   266c4:	beq	26d04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130ac>
   266c8:	mov	r3, r9
   266cc:	mov	sl, #0
   266d0:	mov	r9, r5
   266d4:	ldr	r2, [r4, #72]	; 0x48
   266d8:	cmp	r2, #0
   266dc:	blt	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   266e0:	ldr	r5, [r4, #56]	; 0x38
   266e4:	cmp	r5, #0
   266e8:	beq	26c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1301c>
   266ec:	ldr	r2, [r4, #28]
   266f0:	cmp	r2, #0
   266f4:	beq	26c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13014>
   266f8:	mov	r7, r5
   266fc:	mov	r8, r3
   26700:	b	26724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12acc>
   26704:	ldr	r3, [r4, #28]
   26708:	str	r3, [r8, sl, lsl #2]
   2670c:	add	sl, sl, #1
   26710:	mov	r3, #1
   26714:	str	r3, [r7, #8]
   26718:	ldr	r7, [r7]
   2671c:	cmp	r7, #0
   26720:	beq	268f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c9c>
   26724:	ldr	r1, [r9, #4]
   26728:	ldr	r0, [r7, #4]
   2672c:	bl	13268 <strcmp@plt>
   26730:	cmp	r0, #0
   26734:	bne	26718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ac0>
   26738:	cmp	sl, r6
   2673c:	bcc	26704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12aac>
   26740:	mov	r0, r8
   26744:	lsl	r1, r6, #3
   26748:	bl	134fc <xrealloc@plt>
   2674c:	lsl	r6, r6, #1
   26750:	mov	r8, r0
   26754:	b	26704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12aac>
   26758:	ldr	r1, [pc, #1660]	; 26ddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13184>
   2675c:	mov	r2, #5
   26760:	bl	13460 <dcgettext@plt>
   26764:	mov	r1, r5
   26768:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2676c:	ldr	r3, [sp, #24]
   26770:	ldr	r3, [r3, #16]
   26774:	cmp	r3, #0
   26778:	beq	25ff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12398>
   2677c:	ldr	r4, [r4, #24]
   26780:	cmp	r4, #0
   26784:	bne	25f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122fc>
   26788:	b	26004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123ac>
   2678c:	cmp	r4, #0
   26790:	beq	26520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128c8>
   26794:	ldr	r3, [r4, #72]	; 0x48
   26798:	mvn	r2, #1
   2679c:	sub	r3, r2, r3
   267a0:	cmp	r7, r4
   267a4:	str	r3, [r4, #72]	; 0x48
   267a8:	bne	267c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b6c>
   267ac:	b	26520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128c8>
   267b0:	ldr	r3, [r4, #72]	; 0x48
   267b4:	cmp	r7, r4
   267b8:	sub	r3, r2, r3
   267bc:	str	r3, [r4, #72]	; 0x48
   267c0:	beq	26520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128c8>
   267c4:	ldr	r4, [r4, #16]
   267c8:	cmp	r4, #0
   267cc:	bne	267b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b58>
   267d0:	b	26520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128c8>
   267d4:	ldr	r0, [r4, #20]
   267d8:	bl	1da64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e0c>
   267dc:	subs	r7, r0, #0
   267e0:	strne	sl, [r4, #60]	; 0x3c
   267e4:	bne	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   267e8:	ldr	r6, [r4]
   267ec:	mov	r1, r9
   267f0:	mov	r0, r6
   267f4:	bl	13268 <strcmp@plt>
   267f8:	cmp	r0, #0
   267fc:	bne	26834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bdc>
   26800:	ldrb	r3, [fp]
   26804:	and	r3, r3, #3
   26808:	cmp	r3, #2
   2680c:	beq	268b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c5c>
   26810:	ldr	r3, [pc, #1376]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26814:	ldr	r3, [r3, #272]	; 0x110
   26818:	cmp	r3, #0
   2681c:	beq	268d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c7c>
   26820:	add	r0, r3, #8
   26824:	mov	r2, #0
   26828:	mov	r1, r4
   2682c:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   26830:	b	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   26834:	ldr	r3, [pc, #1500]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   26838:	ldr	r2, [r3, #28]
   2683c:	cmp	r2, #1
   26840:	beq	27920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13cc8>
   26844:	cmp	r2, #3
   26848:	beq	27994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d3c>
   2684c:	ldr	r3, [pc, #1476]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   26850:	ldr	r1, [r3, #56]	; 0x38
   26854:	cmp	r1, #0
   26858:	beq	27178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13520>
   2685c:	ldr	r3, [pc, #1404]	; 26de0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13188>
   26860:	mov	r2, r3
   26864:	mov	r1, r6
   26868:	mov	r0, r4
   2686c:	str	r3, [sp, #28]
   26870:	bl	2d414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197bc>
   26874:	ldr	r3, [sp, #28]
   26878:	subs	r7, r0, #0
   2687c:	beq	279b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d5c>
   26880:	ldr	r3, [pc, #1424]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   26884:	ldr	r3, [r3, #28]
   26888:	cmp	r3, #2
   2688c:	bne	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   26890:	mov	r2, #5
   26894:	ldr	r1, [pc, #1352]	; 26de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1318c>
   26898:	mov	r0, #0
   2689c:	bl	13460 <dcgettext@plt>
   268a0:	ldr	r3, [r7, #24]
   268a4:	ldr	r2, [r4, #148]	; 0x94
   268a8:	mov	r1, r4
   268ac:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   268b0:	b	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   268b4:	ldr	r3, [sp, #24]
   268b8:	ldr	r3, [r3]
   268bc:	cmp	r3, #0
   268c0:	beq	26550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128f8>
   268c4:	ldr	r3, [pc, #1196]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   268c8:	ldr	r3, [r3, #272]	; 0x110
   268cc:	cmp	r3, #0
   268d0:	bne	26820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc8>
   268d4:	mov	r1, r3
   268d8:	mov	r2, #1
   268dc:	mov	r0, r8
   268e0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   268e4:	ldr	r2, [pc, #1164]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   268e8:	mov	r3, r0
   268ec:	str	r0, [r2, #272]	; 0x110
   268f0:	b	26820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc8>
   268f4:	mov	r3, r8
   268f8:	mov	r8, r5
   268fc:	ldr	r4, [r4, #16]
   26900:	cmp	r4, #0
   26904:	bne	266d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a7c>
   26908:	mov	r5, r9
   2690c:	mov	r9, r3
   26910:	ldr	r0, [r5, #24]
   26914:	cmp	r0, #0
   26918:	moveq	r4, r0
   2691c:	beq	26930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cd8>
   26920:	ldr	r2, [pc, #1216]	; 26de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13190>
   26924:	mov	r1, #0
   26928:	bl	2d030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d8>
   2692c:	mov	r4, r0
   26930:	ldr	ip, [r5, #20]
   26934:	subs	r0, ip, #0
   26938:	beq	2694c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cf4>
   2693c:	ldr	r2, [pc, #1192]	; 26dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13194>
   26940:	mov	r1, #0
   26944:	bl	2d030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d8>
   26948:	ldr	ip, [r5, #20]
   2694c:	ldr	r2, [r5, #24]
   26950:	ldr	r1, [r5, #8]
   26954:	str	r9, [sp, #20]
   26958:	str	sl, [sp, #16]
   2695c:	ldr	r3, [r5, #16]
   26960:	adds	ip, ip, #0
   26964:	str	r3, [sp, #12]
   26968:	ldr	lr, [r5, #12]
   2696c:	movne	ip, #1
   26970:	adds	r2, r2, #0
   26974:	movne	r2, #1
   26978:	stmib	sp, {r0, lr}
   2697c:	mov	r3, r4
   26980:	str	ip, [sp]
   26984:	ldr	r0, [fp, #48]	; 0x30
   26988:	bl	137b4 <bfd_record_phdr@plt>
   2698c:	cmp	r0, #0
   26990:	beq	26cb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1305c>
   26994:	ldr	r5, [r5]
   26998:	cmp	r5, #0
   2699c:	bne	266b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a60>
   269a0:	mov	r0, r9
   269a4:	bl	13364 <free@plt>
   269a8:	ldr	r3, [pc, #1120]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   269ac:	ldr	r5, [r3]
   269b0:	cmp	r5, #0
   269b4:	beq	26a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12df0>
   269b8:	ldr	r6, [pc, #1072]	; 26df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13198>
   269bc:	ldr	r7, [pc, #1072]	; 26df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1319c>
   269c0:	ldr	r3, [r5, #72]	; 0x48
   269c4:	cmp	r3, #0
   269c8:	blt	26a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12de4>
   269cc:	ldr	r3, [r5, #28]
   269d0:	cmp	r3, #0
   269d4:	beq	26a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12de4>
   269d8:	ldr	r4, [r5, #56]	; 0x38
   269dc:	cmp	r4, #0
   269e0:	bne	269f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d9c>
   269e4:	b	26a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12de4>
   269e8:	ldr	r4, [r4]
   269ec:	cmp	r4, #0
   269f0:	beq	26a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12de4>
   269f4:	ldr	r8, [r4, #8]
   269f8:	mov	r1, r6
   269fc:	cmp	r8, #0
   26a00:	bne	269e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d90>
   26a04:	ldr	r0, [r4, #4]
   26a08:	bl	13268 <strcmp@plt>
   26a0c:	cmp	r0, #0
   26a10:	beq	269e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d90>
   26a14:	mov	r2, #5
   26a18:	mov	r1, r7
   26a1c:	mov	r0, r8
   26a20:	bl	13460 <dcgettext@plt>
   26a24:	ldr	r2, [r4, #4]
   26a28:	ldr	r1, [r5, #24]
   26a2c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26a30:	ldr	r4, [r4]
   26a34:	cmp	r4, #0
   26a38:	bne	269f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d9c>
   26a3c:	ldr	r5, [r5, #16]
   26a40:	cmp	r5, #0
   26a44:	bne	269c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d68>
   26a48:	ldrb	r3, [fp, #3]
   26a4c:	tst	r3, #16
   26a50:	bne	26f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13344>
   26a54:	ldr	r1, [fp, #20]
   26a58:	mov	r0, #0
   26a5c:	cmp	r1, #1
   26a60:	movls	r1, #0
   26a64:	movhi	r1, #1
   26a68:	bl	24374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1071c>
   26a6c:	bl	2d354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196fc>
   26a70:	ldr	r3, [pc, #768]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26a74:	ldr	r0, [r3, #16]
   26a78:	cmp	r0, #0
   26a7c:	beq	26b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ed0>
   26a80:	ldr	r3, [pc, #752]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26a84:	ldr	lr, [fp, #48]	; 0x30
   26a88:	ldr	r5, [pc, #828]	; 26dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13174>
   26a8c:	ldr	r1, [r3, #24]
   26a90:	ldr	r4, [r3, #8]
   26a94:	add	r0, r1, r0, lsl #2
   26a98:	sub	r0, r0, #4
   26a9c:	sub	r1, r1, #4
   26aa0:	b	26adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e84>
   26aa4:	ldr	r6, [lr, #4]
   26aa8:	ldr	ip, [r2, #20]
   26aac:	ldrb	r6, [r6, #24]
   26ab0:	ldr	ip, [ip, #60]	; 0x3c
   26ab4:	cmp	r6, #0
   26ab8:	addne	r3, r3, #1
   26abc:	str	ip, [r2, #20]
   26ac0:	ldrb	r3, [r3, #4]
   26ac4:	cmp	r3, #111	; 0x6f
   26ac8:	ldreq	r3, [ip, #36]	; 0x24
   26acc:	lsreq	r3, r3, r4
   26ad0:	streq	r3, [r2, #24]
   26ad4:	cmp	r1, r0
   26ad8:	beq	26b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ed0>
   26adc:	ldr	r2, [r1, #4]!
   26ae0:	ldrh	r3, [r2, #12]
   26ae4:	bic	r3, r3, #63232	; 0xf700
   26ae8:	cmp	r3, #3
   26aec:	bne	26ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e7c>
   26af0:	ldr	r3, [r2, #4]
   26af4:	ldrb	ip, [r3]
   26af8:	cmp	ip, #46	; 0x2e
   26afc:	bne	26aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e4c>
   26b00:	ldrb	r3, [r3, #2]
   26b04:	cmp	r3, #105	; 0x69
   26b08:	bne	26ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e7c>
   26b0c:	ldr	r3, [r2, #20]
   26b10:	cmp	r1, r0
   26b14:	ldr	r3, [r3, #36]	; 0x24
   26b18:	str	r5, [r2, #20]
   26b1c:	lsr	r3, r3, r4
   26b20:	str	r3, [r2, #24]
   26b24:	bne	26adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e84>
   26b28:	mov	r0, #4
   26b2c:	bl	22a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee04>
   26b30:	bl	2d390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19738>
   26b34:	bl	2d2b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19660>
   26b38:	ldr	r3, [sp, #24]
   26b3c:	ldrsb	r3, [r3, #24]
   26b40:	cmp	r3, #0
   26b44:	bne	271e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13590>
   26b48:	ldr	r3, [pc, #552]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26b4c:	ldr	r4, [r3, #268]	; 0x10c
   26b50:	cmp	r4, #0
   26b54:	beq	26bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f5c>
   26b58:	ldr	r5, [pc, #664]	; 26df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131a0>
   26b5c:	mov	r6, #1
   26b60:	mov	r3, #0
   26b64:	ldr	r1, [r4]
   26b68:	mov	r2, r3
   26b6c:	str	r6, [sp]
   26b70:	ldr	r0, [fp, #28]
   26b74:	bl	13640 <bfd_link_hash_lookup@plt>
   26b78:	mov	r1, r5
   26b7c:	mov	r2, #5
   26b80:	subs	r3, r0, #0
   26b84:	mov	r0, #0
   26b88:	beq	26b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f44>
   26b8c:	ldrb	r3, [r3, #12]
   26b90:	sub	r3, r3, #3
   26b94:	cmp	r3, #1
   26b98:	bls	26ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f50>
   26b9c:	bl	13460 <dcgettext@plt>
   26ba0:	ldr	r1, [r4]
   26ba4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26ba8:	ldr	r4, [r4, #4]
   26bac:	cmp	r4, #0
   26bb0:	bne	26b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f08>
   26bb4:	ldrb	r3, [fp]
   26bb8:	and	r2, r3, #67	; 0x43
   26bbc:	cmp	r2, #2
   26bc0:	beq	26cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13070>
   26bc4:	and	r3, r3, #3
   26bc8:	cmp	r3, #3
   26bcc:	movne	r4, #1
   26bd0:	beq	26cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13070>
   26bd4:	cmp	r2, #66	; 0x42
   26bd8:	beq	26cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13080>
   26bdc:	ldr	r3, [pc, #404]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26be0:	mov	r2, #1
   26be4:	ldr	r0, [fp, #28]
   26be8:	ldr	r1, [r3, #264]	; 0x108
   26bec:	cmp	r1, #0
   26bf0:	moveq	r4, #0
   26bf4:	ldreq	r3, [pc, #612]	; 26e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13208>
   26bf8:	ldreq	r1, [r3, #12]
   26bfc:	ldreq	r3, [pc, #372]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26c00:	streq	r1, [r3, #264]	; 0x108
   26c04:	mov	r3, #0
   26c08:	str	r2, [sp]
   26c0c:	mov	r2, r3
   26c10:	bl	13640 <bfd_link_hash_lookup@plt>
   26c14:	cmp	r0, #0
   26c18:	beq	26c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fd4>
   26c1c:	ldrb	r3, [r0, #12]
   26c20:	sub	r3, r3, #3
   26c24:	cmp	r3, #1
   26c28:	bls	27060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13408>
   26c2c:	ldr	r3, [pc, #324]	; 26d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13120>
   26c30:	mov	r2, #0
   26c34:	add	r1, sp, #44	; 0x2c
   26c38:	ldr	r0, [r3, #264]	; 0x108
   26c3c:	bl	13250 <bfd_scan_vma@plt>
   26c40:	ldr	r3, [sp, #44]	; 0x2c
   26c44:	ldrb	r3, [r3]
   26c48:	cmp	r3, #0
   26c4c:	bne	27014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133bc>
   26c50:	mov	r1, r0
   26c54:	ldr	r0, [fp, #48]	; 0x30
   26c58:	bl	13b38 <bfd_set_start_address@plt>
   26c5c:	cmp	r0, #0
   26c60:	beq	27048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f0>
   26c64:	add	sp, sp, #52	; 0x34
   26c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26c6c:	mov	r8, r5
   26c70:	b	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26c74:	ldr	r2, [r4, #80]	; 0x50
   26c78:	cmp	r2, #2
   26c7c:	beq	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26c80:	ldr	r2, [r4, #28]
   26c84:	cmp	r2, #0
   26c88:	beq	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26c8c:	ldr	r2, [r2, #20]
   26c90:	tst	r2, #1
   26c94:	beq	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26c98:	ldr	r2, [r9, #8]
   26c9c:	cmp	r2, #3
   26ca0:	beq	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26ca4:	cmp	r8, #0
   26ca8:	beq	26d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130d4>
   26cac:	mov	r5, r8
   26cb0:	b	266f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12aa0>
   26cb4:	mov	r2, #5
   26cb8:	ldr	r1, [pc, #316]	; 26dfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131a4>
   26cbc:	bl	13460 <dcgettext@plt>
   26cc0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26cc4:	b	26994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d3c>
   26cc8:	ldr	r3, [pc, #304]	; 26e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131a8>
   26ccc:	cmp	r2, #66	; 0x42
   26cd0:	ldr	r4, [r3]
   26cd4:	bne	26bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f84>
   26cd8:	ldr	r2, [pc, #288]	; 26e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131a8>
   26cdc:	ldr	r3, [pc, #288]	; 26e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131ac>
   26ce0:	ldr	r0, [r2]
   26ce4:	ldr	r3, [r3]
   26ce8:	orrs	r0, r0, r3
   26cec:	bne	26bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f84>
   26cf0:	mov	r2, #5
   26cf4:	ldr	r1, [pc, #268]	; 26e08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b0>
   26cf8:	bl	13460 <dcgettext@plt>
   26cfc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26d00:	b	26bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f84>
   26d04:	mov	sl, r4
   26d08:	b	26910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cb8>
   26d0c:	ldr	r3, [r5, #40]	; 0x28
   26d10:	tst	r3, #32
   26d14:	bne	26230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125d8>
   26d18:	ldr	r3, [sp, #24]
   26d1c:	ldr	r3, [r3, #16]
   26d20:	cmp	r3, #0
   26d24:	beq	25ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123a0>
   26d28:	b	26278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12620>
   26d2c:	mov	r5, r4
   26d30:	b	26d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130e8>
   26d34:	ldr	r8, [r5, #56]	; 0x38
   26d38:	cmp	r8, #0
   26d3c:	bne	26cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13054>
   26d40:	ldr	r5, [r5, #16]
   26d44:	cmp	r5, #0
   26d48:	bne	26d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130dc>
   26d4c:	mov	r2, #5
   26d50:	ldr	r1, [pc, #180]	; 26e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b4>
   26d54:	mov	r0, r5
   26d58:	str	r3, [sp, #28]
   26d5c:	bl	13460 <dcgettext@plt>
   26d60:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   26d64:	mov	r8, r5
   26d68:	ldr	r3, [sp, #28]
   26d6c:	b	268fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ca4>
   26d70:	andeq	r8, ip, ip, lsl #1
   26d74:	ldrdeq	r8, [ip], -ip
   26d78:	andeq	r7, ip, r8, lsr #23
   26d7c:	andeq	r2, r2, ip, ror #8
   26d80:	andeq	r1, r0, r7, ror #24
   26d84:	andeq	pc, r4, r8, rrx
   26d88:	andeq	pc, r4, r4, lsr #28
   26d8c:	andeq	pc, r4, r0, lsl #26
   26d90:	andeq	pc, r4, r8, ror #28
   26d94:	andeq	pc, r4, r0, ror lr	; <UNPREDICTABLE>
   26d98:	andeq	r8, ip, r8, lsl r1
   26d9c:	andeq	ip, r1, r4, asr #22
   26da0:	andeq	pc, r4, r0, ror #29
   26da4:	andeq	pc, r4, r8, ror lr	; <UNPREDICTABLE>
   26da8:	andeq	pc, r4, r4, ror #30
   26dac:	andeq	pc, r4, r0, ror pc	; <UNPREDICTABLE>
   26db0:	andeq	pc, r4, r8, lsr #17
   26db4:	muleq	r1, r0, r6
   26db8:	strdeq	r8, [ip], -r4
   26dbc:	andeq	pc, r4, r0, lsr #31
   26dc0:	andeq	pc, r4, ip, asr #31
   26dc4:	andeq	r0, r5, r4, asr #7
   26dc8:	andeq	pc, r4, r0, lsr #23
   26dcc:	andeq	r7, ip, r8, lsr #17
   26dd0:	andeq	ip, r4, ip, lsl #23
   26dd4:	muleq	r4, ip, fp
   26dd8:	andeq	r8, ip, r0, rrx
   26ddc:	andeq	pc, r4, ip, lsr #30
   26de0:	andeq	r0, r0, lr, ror r1
   26de4:	andeq	r0, r5, r0, lsr r0
   26de8:	muleq	r5, r0, r0
   26dec:	muleq	r5, ip, r0
   26df0:	ldrdeq	r0, [r5], -r4
   26df4:	ldrdeq	r0, [r5], -ip
   26df8:	andeq	r0, r5, r4, asr r2
   26dfc:	strheq	r0, [r5], -r0	; <UNPREDICTABLE>
   26e00:	andeq	r8, ip, r4, asr #32
   26e04:	andeq	r8, ip, r0, asr #32
   26e08:	andeq	r0, r5, ip, ror r2
   26e0c:	muleq	r5, ip, r3
   26e10:	andeq	r8, ip, r8, rrx
   26e14:	andeq	r8, ip, ip, lsl #1
   26e18:	andeq	r8, ip, r4, ror r1
   26e1c:	andeq	r0, r5, r4, ror #5
   26e20:	andeq	r0, r5, r0, asr #5
   26e24:	andeq	r0, r5, r8, lsl #1
   26e28:	andeq	r0, r5, ip, ror r0
   26e2c:	andeq	r0, r5, r8, asr #2
   26e30:	andeq	r0, r5, r4, lsl r1
   26e34:	andeq	r0, r0, r2, lsl #8
   26e38:			; <UNDEFINED> instruction: 0x0001cab4
   26e3c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   26e40:			; <UNDEFINED> instruction: 0x000501bc
   26e44:	muleq	r5, r4, r3
   26e48:	andeq	r6, ip, r0, lsl #24
   26e4c:	andeq	r0, r5, r8, lsl #7
   26e50:	andeq	r8, ip, ip, asr #32
   26e54:	andeq	r1, r0, pc, lsr #23
   26e58:	andeq	pc, r4, ip, ror r8	; <UNPREDICTABLE>
   26e5c:	muleq	r4, ip, r4
   26e60:	andeq	r7, ip, ip, lsr #7
   26e64:	strdeq	pc, [r4], -r8
   26e68:	andeq	r0, r5, r4, lsl #6
   26e6c:	strdeq	r0, [r5], -ip
   26e70:	andeq	r0, r5, r8, lsr #4
   26e74:			; <UNDEFINED> instruction: 0x0001eab8
   26e78:	andeq	r0, r5, ip, ror r1
   26e7c:	andeq	r0, r5, r0, asr #6
   26e80:	andeq	pc, r4, ip, ror #27
   26e84:	andeq	r7, ip, r8, lsl #25
   26e88:	andeq	r1, r0, r2, lsr ip
   26e8c:	andeq	pc, r4, r8, rrx
   26e90:	andeq	r7, ip, r8, lsr #23
   26e94:	ldr	r3, [r7, #16]
   26e98:	ldr	r2, [r4, #20]
   26e9c:	cmp	r3, #0
   26ea0:	mov	r1, #0
   26ea4:	str	r3, [r2, #16]
   26ea8:	ldreq	r3, [pc, #-160]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   26eac:	addeq	r2, r2, #16
   26eb0:	strne	r2, [r3, #20]
   26eb4:	streq	r2, [r3, #4]
   26eb8:	ldr	r3, [r0, #16]
   26ebc:	mov	lr, r1
   26ec0:	str	r3, [r7, #16]
   26ec4:	ldr	r3, [r0, #16]
   26ec8:	mvn	ip, #1
   26ecc:	cmp	r3, #0
   26ed0:	addeq	r3, r7, #16
   26ed4:	ldreq	r2, [pc, #-204]	; 26e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131b8>
   26ed8:	strne	r7, [r3, #20]
   26edc:	str	r0, [r4, #20]
   26ee0:	streq	r3, [r2, #4]
   26ee4:	str	r4, [r0, #16]
   26ee8:	ldr	r3, [r4, #72]	; 0x48
   26eec:	ldr	r2, [r4, #28]
   26ef0:	sub	r3, ip, r3
   26ef4:	cmp	r2, #0
   26ef8:	str	r3, [r4, #72]	; 0x48
   26efc:	beq	26f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x132c0>
   26f00:	ldr	r3, [r2, #148]	; 0x94
   26f04:	cmp	r3, #0
   26f08:	beq	26f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x132c0>
   26f0c:	cmp	lr, #0
   26f10:	mov	r1, r2
   26f14:	moveq	lr, r2
   26f18:	cmp	r7, r4
   26f1c:	beq	26f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x132d4>
   26f20:	ldr	r4, [r4, #16]
   26f24:	cmp	r4, #0
   26f28:	bne	26ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13290>
   26f2c:	cmp	r1, #0
   26f30:	beq	26f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1333c>
   26f34:	ldr	r3, [r0, #28]
   26f38:	cmp	r3, #0
   26f3c:	beq	27cb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1405c>
   26f40:	cmp	r3, r1
   26f44:	beq	26f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1333c>
   26f48:	ldr	ip, [lr, #16]
   26f4c:	ldr	r2, [r1, #12]
   26f50:	cmp	ip, #0
   26f54:	strne	r2, [ip, #12]
   26f58:	ldreq	r4, [fp, #48]	; 0x30
   26f5c:	ldrne	r2, [r1, #12]
   26f60:	streq	r2, [r4, #100]	; 0x64
   26f64:	cmp	r2, #0
   26f68:	strne	ip, [r2, #16]
   26f6c:	ldreq	r2, [fp, #48]	; 0x30
   26f70:	streq	ip, [r2, #104]	; 0x68
   26f74:	ldr	r2, [r3, #12]
   26f78:	cmp	r2, #0
   26f7c:	str	r2, [r1, #12]
   26f80:	ldreq	r2, [fp, #48]	; 0x30
   26f84:	strne	r1, [r2, #16]
   26f88:	streq	r1, [r2, #104]	; 0x68
   26f8c:	str	r3, [lr, #16]
   26f90:	str	lr, [r3, #12]
   26f94:	mov	r4, #0
   26f98:	b	264ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12854>
   26f9c:	ldrb	r3, [fp]
   26fa0:	and	r3, r3, #3
   26fa4:	cmp	r3, #2
   26fa8:	beq	26a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dfc>
   26fac:	ldr	r3, [sp, #32]
   26fb0:	add	r1, sp, #44	; 0x2c
   26fb4:	ldr	r0, [r3, #80]	; 0x50
   26fb8:	mov	r3, #0
   26fbc:	str	r3, [sp, #44]	; 0x2c
   26fc0:	bl	23b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff20>
   26fc4:	ldr	r3, [sp, #44]	; 0x2c
   26fc8:	cmp	r3, #0
   26fcc:	ldrbeq	r3, [fp, #3]
   26fd0:	biceq	r3, r3, #16
   26fd4:	strbeq	r3, [fp, #3]
   26fd8:	b	26a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dfc>
   26fdc:	ldr	r4, [fp, #56]	; 0x38
   26fe0:	cmp	r4, #0
   26fe4:	beq	263c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12768>
   26fe8:	ldr	r5, [pc, #-476]	; 26e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131bc>
   26fec:	mov	r0, r4
   26ff0:	mov	r1, r5
   26ff4:	bl	13b5c <bfd_link_check_relocs@plt>
   26ff8:	ldr	r4, [r4, #156]	; 0x9c
   26ffc:	cmp	r0, #0
   27000:	ldreq	r3, [pc, #-496]	; 26e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c0>
   27004:	streq	r0, [r3, #4]
   27008:	cmp	r4, #0
   2700c:	bne	26fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13394>
   27010:	b	263c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12768>
   27014:	ldr	r3, [pc, #-444]	; 26e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13208>
   27018:	ldr	r0, [fp, #48]	; 0x30
   2701c:	ldr	r1, [r3, #16]
   27020:	bl	13604 <bfd_get_section_by_name@plt>
   27024:	subs	r5, r0, #0
   27028:	beq	27c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1400c>
   2702c:	cmp	r4, #0
   27030:	bne	27a14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13dbc>
   27034:	ldr	r1, [r5, #28]
   27038:	ldr	r0, [fp, #48]	; 0x30
   2703c:	bl	13b38 <bfd_set_start_address@plt>
   27040:	cmp	r0, #0
   27044:	bne	26c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1300c>
   27048:	mov	r2, #5
   2704c:	ldr	r1, [pc, #-568]	; 26e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c4>
   27050:	bl	13460 <dcgettext@plt>
   27054:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27058:	add	sp, sp, #52	; 0x34
   2705c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27060:	ldr	r2, [r0, #20]
   27064:	ldr	r3, [r2, #60]	; 0x3c
   27068:	cmp	r3, #0
   2706c:	beq	26c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fd4>
   27070:	ldr	r0, [r0, #24]
   27074:	ldr	r2, [r2, #56]	; 0x38
   27078:	ldr	r1, [r3, #28]
   2707c:	add	r2, r0, r2
   27080:	add	r1, r2, r1
   27084:	ldr	r0, [fp, #48]	; 0x30
   27088:	bl	13b38 <bfd_set_start_address@plt>
   2708c:	cmp	r0, #0
   27090:	bne	26c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1300c>
   27094:	mov	r2, #5
   27098:	ldr	r1, [pc, #-640]	; 26e20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c8>
   2709c:	bl	13460 <dcgettext@plt>
   270a0:	ldr	r3, [pc, #-536]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   270a4:	ldr	r1, [r3, #264]	; 0x108
   270a8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   270ac:	b	26c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1300c>
   270b0:	ldr	r3, [sp, #24]
   270b4:	ldr	r3, [r3]
   270b8:	cmp	r3, #0
   270bc:	bne	2630c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126b4>
   270c0:	b	26378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12720>
   270c4:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   270c8:	mov	r4, #0
   270cc:	b	25eec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12294>
   270d0:	mov	r1, sl
   270d4:	mov	r2, #5
   270d8:	bl	13460 <dcgettext@plt>
   270dc:	mov	r1, r8
   270e0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   270e4:	b	26094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1243c>
   270e8:	ldr	r3, [fp, #48]	; 0x30
   270ec:	ldr	r7, [r3, #100]	; 0x64
   270f0:	cmp	r7, #0
   270f4:	beq	26690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a38>
   270f8:	ldr	r5, [pc, #-732]	; 26e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131cc>
   270fc:	ldr	r6, [pc, #-732]	; 26e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131d0>
   27100:	ldr	r8, [r7]
   27104:	mov	r0, r8
   27108:	bl	137d8 <strlen@plt>
   2710c:	add	r0, r0, #10
   27110:	bl	13574 <xmalloc@plt>
   27114:	mov	r2, r8
   27118:	mov	r1, r6
   2711c:	mov	r4, r0
   27120:	bl	13a00 <sprintf@plt>
   27124:	mov	r1, r7
   27128:	mov	r0, r4
   2712c:	bl	1d614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99bc>
   27130:	ldrb	r3, [r5, #4]
   27134:	ldr	r0, [r5]
   27138:	add	r2, r4, #1
   2713c:	mov	r1, r7
   27140:	str	r0, [r4, #1]
   27144:	strb	r3, [r4, #5]
   27148:	mov	r0, r2
   2714c:	bl	1d614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99bc>
   27150:	mov	r0, r4
   27154:	bl	13364 <free@plt>
   27158:	ldr	r7, [r7, #12]
   2715c:	cmp	r7, #0
   27160:	bne	27100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134a8>
   27164:	b	26690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a38>
   27168:	mov	r0, r9
   2716c:	bl	136ac <bfd_set_error_handler@plt>
   27170:	mov	r6, r0
   27174:	b	25fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12368>
   27178:	mov	r0, r4
   2717c:	bl	1f428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7d0>
   27180:	subs	r3, r0, #0
   27184:	bne	2685c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c04>
   27188:	b	26860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c08>
   2718c:	ldr	r3, [pc, #-772]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27190:	ldr	r1, [r3, #224]	; 0xe0
   27194:	cmp	r1, #0
   27198:	bne	271ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13554>
   2719c:	b	26394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1273c>
   271a0:	ldr	r1, [r1, #24]
   271a4:	cmp	r1, #0
   271a8:	beq	26394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1273c>
   271ac:	ldrb	r3, [r1, #37]	; 0x25
   271b0:	tst	r3, #32
   271b4:	bne	271a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13548>
   271b8:	ldr	r3, [r1, #16]
   271bc:	ldr	r3, [r3, #100]	; 0x64
   271c0:	cmp	r3, #0
   271c4:	beq	271a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13548>
   271c8:	ldr	r2, [r3, #20]
   271cc:	tst	r2, #8192	; 0x2000
   271d0:	bic	r2, r2, #32768	; 0x8000
   271d4:	streq	r2, [r3, #20]
   271d8:	ldr	r3, [r3, #12]
   271dc:	cmp	r3, #0
   271e0:	bne	271c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13570>
   271e4:	b	271a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13548>
   271e8:	ldr	r0, [fp, #48]	; 0x30
   271ec:	bl	13c28 <bfd_arch_bits_per_address@plt>
   271f0:	mvn	r3, #0
   271f4:	ldr	r2, [fp, #48]	; 0x30
   271f8:	ldr	r4, [r2, #100]	; 0x64
   271fc:	cmp	r4, #0
   27200:	add	r7, r0, r3
   27204:	mvn	r7, r3, lsl r7
   27208:	lsl	r7, r7, #1
   2720c:	add	r7, r7, #1
   27210:	beq	27274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1361c>
   27214:	ldr	r6, [pc, #-1008]	; 26e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131d4>
   27218:	ldr	r5, [pc, #-1008]	; 26e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131d8>
   2721c:	ldr	r3, [r4, #20]
   27220:	tst	r3, #1
   27224:	beq	27264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1360c>
   27228:	ldr	r3, [r4, #28]
   2722c:	ldr	r2, [r4, #36]	; 0x24
   27230:	and	r1, r7, r3
   27234:	add	r3, r3, r2
   27238:	ands	r3, r3, r7
   2723c:	beq	27248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135f0>
   27240:	cmp	r3, r1
   27244:	bcc	279ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d94>
   27248:	ldr	r3, [r4, #32]
   2724c:	add	r2, r2, r3
   27250:	ands	r2, r2, r7
   27254:	and	r3, r3, r7
   27258:	beq	27264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1360c>
   2725c:	cmp	r2, r3
   27260:	bcc	27b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13edc>
   27264:	ldr	r4, [r4, #12]
   27268:	cmp	r4, #0
   2726c:	bne	2721c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135c4>
   27270:	ldr	r2, [fp, #48]	; 0x30
   27274:	ldr	r0, [r2, #108]	; 0x6c
   27278:	cmp	r0, #1
   2727c:	bls	26b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ef0>
   27280:	lsl	r0, r0, #3
   27284:	bl	13574 <xmalloc@plt>
   27288:	ldr	r3, [fp, #48]	; 0x30
   2728c:	ldr	r4, [r3, #100]	; 0x64
   27290:	cmp	r4, #0
   27294:	movne	r5, #0
   27298:	ldrne	r1, [pc, #-1132]	; 26e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131dc>
   2729c:	movne	ip, r5
   272a0:	mov	r8, r0
   272a4:	beq	27d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140c8>
   272a8:	ldr	r3, [r4, #20]
   272ac:	tst	r3, #1
   272b0:	and	r2, r3, r1
   272b4:	beq	272d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13680>
   272b8:	cmp	r2, #1024	; 0x400
   272bc:	add	r0, r8, r5, lsl #3
   272c0:	beq	272d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13680>
   272c4:	ldr	r3, [r4, #36]	; 0x24
   272c8:	cmp	r3, #0
   272cc:	strne	r4, [r8, r5, lsl #3]
   272d0:	addne	r5, r5, #1
   272d4:	strne	ip, [r0, #4]
   272d8:	ldr	r4, [r4, #12]
   272dc:	cmp	r4, #0
   272e0:	bne	272a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13650>
   272e4:	cmp	r5, #1
   272e8:	bls	27d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140c8>
   272ec:	ldr	r3, [pc, #-1212]	; 26e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131e0>
   272f0:	mov	r2, #8
   272f4:	mov	r1, r5
   272f8:	mov	r0, r8
   272fc:	add	r6, r8, #4
   27300:	bl	13a78 <qsort@plt>
   27304:	add	sl, r6, r5, lsl #3
   27308:	mov	r3, r4
   2730c:	mov	r9, r4
   27310:	str	r8, [sp, #36]	; 0x24
   27314:	str	r8, [sp, #24]
   27318:	str	r5, [sp, #28]
   2731c:	ldr	r5, [r6, #-4]
   27320:	ldr	r2, [r5, #20]
   27324:	tst	r2, #2
   27328:	beq	27364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1370c>
   2732c:	ldr	r2, [pc, #-1188]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27330:	ldr	r8, [r5, #32]
   27334:	ldr	r1, [r5, #36]	; 0x24
   27338:	ldr	r2, [r2, #8]
   2733c:	sub	r7, r8, #1
   27340:	cmp	r4, #0
   27344:	add	r7, r7, r1, lsr r2
   27348:	beq	27358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13700>
   2734c:	cmp	r9, r3
   27350:	cmpcs	r8, r9
   27354:	bls	27c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13fbc>
   27358:	mov	r9, r7
   2735c:	mov	r3, r8
   27360:	mov	r4, r5
   27364:	add	r6, r6, #8
   27368:	cmp	r6, sl
   2736c:	bne	2731c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x136c4>
   27370:	ldr	r8, [sp, #24]
   27374:	ldr	r5, [sp, #28]
   27378:	ldr	r3, [pc, #-1348]	; 26e3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131e4>
   2737c:	mov	r2, #8
   27380:	mov	r1, r5
   27384:	mov	r0, r8
   27388:	bl	13a78 <qsort@plt>
   2738c:	ldr	r3, [r8]
   27390:	mov	r2, r3
   27394:	str	r3, [sp, #24]
   27398:	ldr	sl, [r2, #28]
   2739c:	mov	r3, #1
   273a0:	mov	r1, sl
   273a4:	ldr	r2, [r8, r3, lsl #3]
   273a8:	add	r3, r3, #1
   273ac:	ldr	r2, [r2, #28]
   273b0:	cmp	r2, r1
   273b4:	beq	27b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13efc>
   273b8:	cmp	r3, r5
   273bc:	mov	r1, r2
   273c0:	bne	273a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1374c>
   273c4:	ldr	r3, [sp, #24]
   273c8:	str	r8, [sp, #28]
   273cc:	mov	r7, #0
   273d0:	ldr	r1, [r3, #36]	; 0x24
   273d4:	ldr	r3, [pc, #-1356]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   273d8:	ldr	r8, [sp, #36]	; 0x24
   273dc:	ldr	r2, [r3, #8]
   273e0:	sub	r3, sl, #1
   273e4:	add	r3, r3, r1, lsr r2
   273e8:	mov	r2, r5
   273ec:	mov	r5, r3
   273f0:	mov	r3, sl
   273f4:	mov	sl, r2
   273f8:	b	27408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137b0>
   273fc:	mov	r5, r6
   27400:	mov	r3, r9
   27404:	str	r4, [sp, #24]
   27408:	add	r7, r7, #1
   2740c:	cmp	r7, sl
   27410:	beq	27b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ef8>
   27414:	ldr	r4, [r8, #8]
   27418:	ldr	r2, [pc, #-1424]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   2741c:	ldr	r0, [r8, #12]
   27420:	ldr	r9, [r4, #28]
   27424:	ldr	r2, [r2, #8]
   27428:	ldr	r1, [r4, #36]	; 0x24
   2742c:	sub	r6, r9, #1
   27430:	cmp	r0, #0
   27434:	add	r8, r8, #8
   27438:	add	r6, r6, r1, lsr r2
   2743c:	bne	273fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137a4>
   27440:	cmp	r5, r3
   27444:	movcs	r2, #0
   27448:	movcc	r2, #1
   2744c:	cmp	r5, r9
   27450:	orrcs	r2, r2, #1
   27454:	cmp	r2, #0
   27458:	beq	273fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137a4>
   2745c:	mov	r2, #5
   27460:	ldr	r1, [pc, #-1576]	; 26e40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131e8>
   27464:	str	r3, [sp, #32]
   27468:	bl	13460 <dcgettext@plt>
   2746c:	ldr	r3, [sp, #32]
   27470:	ldr	r1, [r4]
   27474:	str	r3, [sp, #4]
   27478:	ldr	r3, [sp, #24]
   2747c:	str	r5, [sp, #8]
   27480:	mov	r2, r9
   27484:	ldr	r3, [r3]
   27488:	str	r3, [sp]
   2748c:	mov	r3, r6
   27490:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27494:	b	273fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137a4>
   27498:	ldr	r3, [fp, #48]	; 0x30
   2749c:	ldr	r2, [fp, #56]	; 0x38
   274a0:	ldr	r3, [r3, #4]
   274a4:	cmp	r2, #0
   274a8:	str	r2, [sp, #28]
   274ac:	ldrb	r6, [r3, #24]
   274b0:	beq	2615c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12504>
   274b4:	cmp	r6, #0
   274b8:	ldr	r8, [pc, #-1660]	; 26e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131ec>
   274bc:	ldr	sl, [pc, #-1660]	; 26e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131f0>
   274c0:	movne	r7, #2
   274c4:	moveq	r7, #1
   274c8:	ldr	r3, [sp, #28]
   274cc:	ldr	r5, [r3, #100]	; 0x64
   274d0:	cmp	r5, #0
   274d4:	beq	275b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1395c>
   274d8:	ldr	r9, [r5]
   274dc:	ldrb	r1, [r9]
   274e0:	cmp	r1, #0
   274e4:	beq	27544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x138ec>
   274e8:	lsl	r2, r1, #1
   274ec:	subs	r3, r1, #95	; 0x5f
   274f0:	ldrh	r2, [sl, r2]
   274f4:	movne	r3, #1
   274f8:	and	r2, r2, #140	; 0x8c
   274fc:	cmp	r2, #0
   27500:	movne	r3, #0
   27504:	cmp	r3, #0
   27508:	bne	275a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13950>
   2750c:	mov	r1, r9
   27510:	b	27534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x138dc>
   27514:	ldrh	r2, [sl, r2]
   27518:	subs	r3, r0, #95	; 0x5f
   2751c:	movne	r3, #1
   27520:	and	r2, r2, #140	; 0x8c
   27524:	cmp	r2, #0
   27528:	movne	r3, #0
   2752c:	cmp	r3, #0
   27530:	bne	275a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13950>
   27534:	ldrb	r0, [r1, #1]!
   27538:	cmp	r0, #0
   2753c:	lsl	r2, r0, #1
   27540:	bne	27514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x138bc>
   27544:	mov	r0, r9
   27548:	bl	137d8 <strlen@plt>
   2754c:	add	r0, r0, #10
   27550:	bl	13574 <xmalloc@plt>
   27554:	mov	r2, r9
   27558:	ldr	r1, [pc, #-1812]	; 26e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131f4>
   2755c:	mov	r4, r0
   27560:	cmp	r6, #0
   27564:	addne	r0, r0, #1
   27568:	strb	r6, [r4]
   2756c:	bl	13a00 <sprintf@plt>
   27570:	mov	r1, r5
   27574:	mov	r0, r4
   27578:	bl	1d614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99bc>
   2757c:	ldrh	r3, [r8, #4]
   27580:	ldr	r0, [r8]
   27584:	add	r2, r4, r7
   27588:	strb	r6, [r4, #1]
   2758c:	mov	r1, r5
   27590:	str	r0, [r4, r7]
   27594:	add	r0, r4, #1
   27598:	strh	r3, [r2, #4]
   2759c:	bl	1d614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99bc>
   275a0:	mov	r0, r4
   275a4:	bl	13364 <free@plt>
   275a8:	ldr	r5, [r5, #12]
   275ac:	cmp	r5, #0
   275b0:	bne	274d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13880>
   275b4:	ldr	r3, [sp, #28]
   275b8:	ldr	r3, [r3, #156]	; 0x9c
   275bc:	cmp	r3, #0
   275c0:	str	r3, [sp, #28]
   275c4:	bne	274c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13870>
   275c8:	b	2615c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12504>
   275cc:	ldr	r3, [pc, #-1860]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   275d0:	ldr	r7, [r3, #16]
   275d4:	cmp	r7, #0
   275d8:	beq	26688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a30>
   275dc:	ldr	r5, [r3, #24]
   275e0:	ldr	sl, [fp, #48]	; 0x30
   275e4:	add	r7, r5, r7, lsl #2
   275e8:	sub	r7, r7, #4
   275ec:	sub	r5, r5, #4
   275f0:	mov	r9, #1
   275f4:	mov	r8, #0
   275f8:	b	2760c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139b4>
   275fc:	strb	r9, [r4, #12]
   27600:	str	r8, [r4, #20]
   27604:	cmp	r7, r5
   27608:	beq	26688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a30>
   2760c:	ldr	r4, [r5, #4]!
   27610:	ldrb	r3, [r4, #13]
   27614:	tst	r3, #8
   27618:	bne	27604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139ac>
   2761c:	ldr	r2, [r4, #20]
   27620:	ldr	r3, [r2, #60]	; 0x3c
   27624:	cmp	r3, #0
   27628:	beq	275fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   2762c:	ldr	r1, [r3, #148]	; 0x94
   27630:	cmp	r1, sl
   27634:	bne	275fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   27638:	ldr	r1, [r3]
   2763c:	ldr	r0, [r2]
   27640:	bl	13268 <strcmp@plt>
   27644:	cmp	r0, #0
   27648:	beq	27604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139ac>
   2764c:	b	275fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   27650:	ldr	r8, [pc, #-2040]	; 26e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13208>
   27654:	ldr	r2, [pc, #-1996]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27658:	ldr	r4, [pc, #-2064]	; 26e50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131f8>
   2765c:	ldr	r3, [r8]
   27660:	ldr	sl, [r2, #224]	; 0xe0
   27664:	ldr	r9, [r4]
   27668:	ldr	r1, [r3]
   2766c:	ldr	r6, [r4, #4]
   27670:	str	r1, [sp, #24]
   27674:	ldr	r5, [r3, #4]
   27678:	ldr	r7, [r2, #228]	; 0xe4
   2767c:	bl	31f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2ec>
   27680:	cmp	r0, #0
   27684:	bne	27c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   27688:	mov	r1, #0
   2768c:	ldr	r0, [r5]
   27690:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   27694:	ldr	r3, [r8]
   27698:	ldr	r1, [sp, #24]
   2769c:	ldr	r2, [r3]
   276a0:	cmp	r2, r1
   276a4:	beq	276bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a64>
   276a8:	ldr	r1, [pc, #-2140]	; 26e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131fc>
   276ac:	ldr	r0, [pc, #-2088]	; 26e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13234>
   276b0:	str	r3, [sp, #24]
   276b4:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   276b8:	ldr	r3, [sp, #24]
   276bc:	ldr	r0, [r3, #4]
   276c0:	ldr	r2, [r5]
   276c4:	str	r5, [r3, #4]
   276c8:	ldr	r3, [pc, #-2112]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   276cc:	mov	r1, #0
   276d0:	str	r1, [r5]
   276d4:	ldr	r3, [r3, #224]	; 0xe0
   276d8:	str	r0, [sp, #24]
   276dc:	cmp	r3, sl
   276e0:	beq	276f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13aa0>
   276e4:	ldr	r1, [pc, #-2200]	; 26e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131fc>
   276e8:	ldr	r0, [pc, #-2148]	; 26e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13234>
   276ec:	str	r2, [sp, #28]
   276f0:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   276f4:	ldr	r2, [sp, #28]
   276f8:	ldr	r1, [pc, #-2160]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   276fc:	mov	r3, #0
   27700:	ldr	sl, [r7]
   27704:	ldr	r5, [r1, #228]	; 0xe4
   27708:	str	r7, [r1, #228]	; 0xe4
   2770c:	str	r3, [r7]
   27710:	ldr	r3, [r4]
   27714:	cmp	r3, r9
   27718:	beq	27730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ad8>
   2771c:	ldr	r1, [pc, #-2256]	; 26e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131fc>
   27720:	ldr	r0, [pc, #-2204]	; 26e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13234>
   27724:	str	r2, [sp, #28]
   27728:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2772c:	ldr	r2, [sp, #28]
   27730:	mov	r3, #0
   27734:	cmp	r2, #0
   27738:	ldr	r9, [r6]
   2773c:	ldr	r7, [r4, #4]
   27740:	str	r6, [r4, #4]
   27744:	str	r3, [r6]
   27748:	beq	25e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121d4>
   2774c:	ldr	r3, [pc, #-2244]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27750:	ldr	r1, [r4]
   27754:	ldr	r3, [r3, #224]	; 0xe0
   27758:	cmp	r3, #0
   2775c:	bne	27788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b30>
   27760:	b	2779c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b44>
   27764:	ldr	r0, [r3, #16]
   27768:	cmp	r0, #0
   2776c:	beq	2777c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b24>
   27770:	ldr	r0, [r0, #140]	; 0x8c
   27774:	cmp	r0, #0
   27778:	moveq	r1, r3
   2777c:	ldr	r3, [r3, #24]
   27780:	cmp	r3, #0
   27784:	beq	2779c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b44>
   27788:	ldrb	r0, [r3, #37]	; 0x25
   2778c:	tst	r0, #32
   27790:	beq	27764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b0c>
   27794:	tst	r0, #64	; 0x40
   27798:	beq	27d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140d4>
   2779c:	ldr	r3, [pc, #-2324]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   277a0:	cmp	r1, #0
   277a4:	str	r1, [r3, #276]	; 0x114
   277a8:	beq	27d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e4>
   277ac:	ldr	r3, [r8]
   277b0:	ldr	lr, [sp, #24]
   277b4:	ldr	ip, [r1]
   277b8:	ldr	r0, [r3, #4]
   277bc:	str	ip, [lr]
   277c0:	cmp	r1, r0
   277c4:	str	r2, [r1]
   277c8:	moveq	r2, lr
   277cc:	streq	r2, [r3, #4]
   277d0:	ldr	r2, [r1, #28]
   277d4:	mov	r3, r1
   277d8:	str	r2, [r7]
   277dc:	ldr	r2, [r4, #4]
   277e0:	str	r9, [r3, #28]!
   277e4:	ldr	r0, [pc, #-2396]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   277e8:	cmp	r2, r3
   277ec:	ldr	r3, [r1, #8]
   277f0:	streq	r7, [r4, #4]
   277f4:	cmp	r3, #0
   277f8:	ldr	r2, [r0, #228]	; 0xe4
   277fc:	beq	27cf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1409c>
   27800:	ldr	r3, [r1, #24]
   27804:	str	r3, [r5]
   27808:	str	sl, [r1, #24]!
   2780c:	cmp	r2, r1
   27810:	ldreq	r3, [pc, #-2440]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27814:	ldrne	r5, [r0, #228]	; 0xe4
   27818:	ldrne	sl, [r0, #224]	; 0xe0
   2781c:	ldreq	sl, [r3, #224]	; 0xe0
   27820:	streq	r5, [r3, #228]	; 0xe4
   27824:	ldr	r2, [pc, #-2460]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27828:	mov	r1, #2
   2782c:	mov	r6, r2
   27830:	ldr	r3, [r2, #240]	; 0xf0
   27834:	ldr	r0, [r2, #140]	; 0x8c
   27838:	add	r3, r3, #1
   2783c:	str	r3, [r2, #240]	; 0xf0
   27840:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   27844:	ldr	r3, [r6, #224]	; 0xe0
   27848:	cmp	r3, sl
   2784c:	beq	2785c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c04>
   27850:	ldr	r1, [pc, #-2564]	; 26e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131fc>
   27854:	ldr	r0, [pc, #-2512]	; 26e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13234>
   27858:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2785c:	ldr	ip, [r5]
   27860:	ldr	r2, [pc, #-2520]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27864:	mov	r3, #0
   27868:	cmp	ip, r3
   2786c:	str	r5, [r2, #228]	; 0xe4
   27870:	str	r3, [r5]
   27874:	beq	25e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121d4>
   27878:	ldr	r0, [ip, #16]
   2787c:	ldr	r3, [r4]
   27880:	ldr	lr, [r0, #140]	; 0x8c
   27884:	cmp	lr, #0
   27888:	movne	r0, lr
   2788c:	cmp	r3, #0
   27890:	beq	27b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ecc>
   27894:	mov	r1, #0
   27898:	mov	r5, r1
   2789c:	b	278c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c68>
   278a0:	cmp	r2, #0
   278a4:	beq	278b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c5c>
   278a8:	ldr	r2, [r3, #24]
   278ac:	cmp	r2, #0
   278b0:	movne	r1, r3
   278b4:	ldr	r3, [r3, #28]
   278b8:	cmp	r3, #0
   278bc:	beq	27a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e14>
   278c0:	ldr	r2, [r3, #16]
   278c4:	cmp	r2, r0
   278c8:	bne	278a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c48>
   278cc:	ldr	r2, [r3, #24]
   278d0:	mov	r5, r1
   278d4:	cmp	r2, #0
   278d8:	beq	278b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c5c>
   278dc:	ldr	r3, [r2, #24]
   278e0:	add	r1, r2, #24
   278e4:	cmp	lr, #0
   278e8:	add	r0, ip, #24
   278ec:	bne	27ac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e6c>
   278f0:	str	ip, [r1]
   278f4:	ldr	r2, [ip, #24]
   278f8:	str	r3, [ip, #24]
   278fc:	mov	ip, r2
   27900:	cmp	ip, #0
   27904:	bne	27878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c20>
   27908:	b	25e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121d4>
   2790c:	mov	r2, #5
   27910:	ldr	r1, [pc, #-2752]	; 26e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13200>
   27914:	bl	13460 <dcgettext@plt>
   27918:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2791c:	b	25df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121a0>
   27920:	mov	r1, r7
   27924:	ldr	r0, [pc, #-2768]	; 26e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13204>
   27928:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   2792c:	ldr	r2, [r0, #44]	; 0x2c
   27930:	mov	r3, r0
   27934:	cmp	r2, #0
   27938:	bne	26820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc8>
   2793c:	ldrb	r2, [fp]
   27940:	and	r2, r2, #3
   27944:	cmp	r2, #2
   27948:	beq	27958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d00>
   2794c:	ldr	r2, [r4, #20]
   27950:	tst	r2, #3
   27954:	bne	26820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc8>
   27958:	mov	r0, #0
   2795c:	str	r3, [sp, #28]
   27960:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   27964:	ldr	r3, [sp, #28]
   27968:	str	r0, [r3, #44]	; 0x2c
   2796c:	b	26820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc8>
   27970:	ldr	r2, [pc, #-2840]	; 26e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13208>
   27974:	sub	r3, r3, #260	; 0x104
   27978:	ldr	r0, [r2, #12]
   2797c:	ldr	r3, [r3, #260]	; 0x104
   27980:	cmp	r0, #0
   27984:	str	r3, [fp, #68]	; 0x44
   27988:	beq	25e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12204>
   2798c:	bl	1fb84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf2c>
   27990:	b	25e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12204>
   27994:	mov	r0, r7
   27998:	mov	r2, #5
   2799c:	ldr	r1, [pc, #-2880]	; 26e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1320c>
   279a0:	bl	13460 <dcgettext@plt>
   279a4:	ldr	r2, [r4, #148]	; 0x94
   279a8:	mov	r1, r4
   279ac:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   279b0:	b	2684c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bf4>
   279b4:	mov	r1, r3
   279b8:	mov	r0, r6
   279bc:	mov	r2, #1
   279c0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   279c4:	ldr	r3, [r0, #44]	; 0x2c
   279c8:	mov	r7, r0
   279cc:	cmp	r3, #0
   279d0:	beq	27a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13de0>
   279d4:	mov	r3, r7
   279d8:	mov	r2, #0
   279dc:	mov	r1, r4
   279e0:	add	r0, r7, #8
   279e4:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   279e8:	b	26880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c28>
   279ec:	mov	r1, r5
   279f0:	mov	r2, #5
   279f4:	mov	r0, #0
   279f8:	bl	13460 <dcgettext@plt>
   279fc:	ldr	r1, [r4]
   27a00:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27a04:	b	27264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1360c>
   27a08:	ldr	r1, [pc, #-2972]	; 26e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1321c>
   27a0c:	bl	13904 <bfd_link_hash_traverse@plt>
   27a10:	b	26378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12720>
   27a14:	mov	r2, #5
   27a18:	ldr	r1, [pc, #-3000]	; 26e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13210>
   27a1c:	mov	r0, #0
   27a20:	bl	13460 <dcgettext@plt>
   27a24:	ldr	r3, [pc, #-2972]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27a28:	ldr	r2, [r5, #28]
   27a2c:	ldr	r1, [r3, #264]	; 0x108
   27a30:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27a34:	b	27034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133dc>
   27a38:	ldrb	r3, [fp]
   27a3c:	and	r3, r3, #3
   27a40:	cmp	r3, #2
   27a44:	beq	27a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13dfc>
   27a48:	ldr	r3, [r4, #20]
   27a4c:	tst	r3, #3
   27a50:	bne	279d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d7c>
   27a54:	mov	r0, #0
   27a58:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   27a5c:	str	r0, [r7, #44]	; 0x2c
   27a60:	b	279d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d7c>
   27a64:	mov	r7, r6
   27a68:	b	260f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12498>
   27a6c:	cmp	r5, #0
   27a70:	addne	r1, r5, #24
   27a74:	beq	27b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ecc>
   27a78:	ldr	r3, [r1]
   27a7c:	cmp	r3, #0
   27a80:	bne	27a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e40>
   27a84:	b	278e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c8c>
   27a88:	add	r1, r3, #24
   27a8c:	ldr	r3, [r3, #24]
   27a90:	cmp	r3, #0
   27a94:	beq	278e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c8c>
   27a98:	ldrb	r2, [r3, #37]	; 0x25
   27a9c:	tst	r2, #64	; 0x40
   27aa0:	bne	27a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e30>
   27aa4:	ldr	r2, [r3, #16]
   27aa8:	ldr	r2, [r2, #140]	; 0x8c
   27aac:	cmp	r2, #0
   27ab0:	bne	27a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e30>
   27ab4:	cmp	lr, #0
   27ab8:	ldr	r3, [r1]
   27abc:	add	r0, ip, #24
   27ac0:	beq	278f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c98>
   27ac4:	ldr	r2, [ip, #24]
   27ac8:	cmp	r2, #0
   27acc:	beq	27b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13eac>
   27ad0:	ldr	r5, [r2, #16]
   27ad4:	ldr	r5, [r5, #140]	; 0x8c
   27ad8:	cmp	lr, r5
   27adc:	beq	27af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e9c>
   27ae0:	b	27b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13eac>
   27ae4:	ldr	r5, [r2, #16]
   27ae8:	ldr	r5, [r5, #140]	; 0x8c
   27aec:	cmp	r5, lr
   27af0:	bne	27b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13eac>
   27af4:	add	r0, r2, #24
   27af8:	ldr	r2, [r2, #24]
   27afc:	cmp	r2, #0
   27b00:	bne	27ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e8c>
   27b04:	str	ip, [r1]
   27b08:	ldr	ip, [r0]
   27b0c:	str	r3, [r0]
   27b10:	ldr	r3, [lr, #164]	; 0xa4
   27b14:	cmp	r3, #0
   27b18:	subne	r0, r0, #24
   27b1c:	strne	r0, [r3, #24]
   27b20:	b	27900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ca8>
   27b24:	ldr	r3, [pc, #-3228]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27b28:	ldr	r1, [r3, #224]	; 0xe0
   27b2c:	add	r1, r1, #24
   27b30:	b	27a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e20>
   27b34:	mov	r1, r6
   27b38:	mov	r2, #5
   27b3c:	mov	r0, #0
   27b40:	bl	13460 <dcgettext@plt>
   27b44:	ldr	r1, [r4]
   27b48:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27b4c:	b	27264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1360c>
   27b50:	ldr	r8, [sp, #28]
   27b54:	mov	r0, r8
   27b58:	bl	13364 <free@plt>
   27b5c:	ldr	r3, [pc, #-3284]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27b60:	ldr	r4, [r3, #220]	; 0xdc
   27b64:	cmp	r4, #0
   27b68:	beq	26b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ef0>
   27b6c:	mov	r8, #5
   27b70:	ldr	r7, [pc, #-3340]	; 26e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13214>
   27b74:	ldr	r6, [pc, #-3340]	; 26e70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13218>
   27b78:	b	27b88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f30>
   27b7c:	ldr	r4, [r4, #8]
   27b80:	cmp	r4, #0
   27b84:	beq	26b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ef0>
   27b88:	ldr	r3, [r4, #44]	; 0x2c
   27b8c:	cmp	r3, #0
   27b90:	beq	27b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f24>
   27b94:	ldr	r2, [r4, #20]
   27b98:	ldr	r3, [r4, #16]
   27b9c:	ldr	r5, [r4, #28]
   27ba0:	add	r3, r3, r2
   27ba4:	sub	r5, r5, r3
   27ba8:	mov	r2, r7
   27bac:	mov	r1, r6
   27bb0:	str	r8, [sp]
   27bb4:	mov	r3, r5
   27bb8:	mov	r0, #0
   27bbc:	bl	13bf8 <dcngettext@plt>
   27bc0:	mov	r2, r5
   27bc4:	ldr	r1, [r4]
   27bc8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27bcc:	b	27b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f24>
   27bd0:	mov	r3, #4
   27bd4:	str	r3, [sp, #44]	; 0x2c
   27bd8:	b	27be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f88>
   27bdc:	ldr	r0, [fp, #28]
   27be0:	mov	r2, r4
   27be4:	mov	r1, r5
   27be8:	bl	13904 <bfd_link_hash_traverse@plt>
   27bec:	ldr	r3, [sp, #44]	; 0x2c
   27bf0:	sub	r3, r3, #1
   27bf4:	cmp	r3, #0
   27bf8:	str	r3, [sp, #44]	; 0x2c
   27bfc:	bne	27bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f84>
   27c00:	mov	r2, r4
   27c04:	ldr	r1, [pc, #-3480]	; 26e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1321c>
   27c08:	ldr	r0, [fp, #28]
   27c0c:	bl	13904 <bfd_link_hash_traverse@plt>
   27c10:	b	26378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12720>
   27c14:	mov	r2, #5
   27c18:	ldr	r1, [pc, #-3496]	; 26e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13220>
   27c1c:	mov	r0, #0
   27c20:	str	r3, [sp, #32]
   27c24:	bl	13460 <dcgettext@plt>
   27c28:	ldr	r3, [sp, #32]
   27c2c:	ldr	r1, [r5]
   27c30:	str	r9, [sp, #8]
   27c34:	str	r3, [sp, #4]
   27c38:	ldr	r3, [r4]
   27c3c:	mov	r2, r8
   27c40:	str	r3, [sp]
   27c44:	mov	r3, r7
   27c48:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27c4c:	mov	r2, #1
   27c50:	mov	r4, r5
   27c54:	mov	r9, r7
   27c58:	mov	r3, r8
   27c5c:	str	r2, [r6]
   27c60:	b	27364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1370c>
   27c64:	cmp	r4, #0
   27c68:	beq	26c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1300c>
   27c6c:	mov	r2, #5
   27c70:	ldr	r1, [pc, #-3580]	; 26e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13224>
   27c74:	bl	13460 <dcgettext@plt>
   27c78:	ldr	r3, [pc, #-3568]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27c7c:	ldr	r1, [r3, #264]	; 0x108
   27c80:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27c84:	b	26c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1300c>
   27c88:	mov	r2, #5
   27c8c:	ldr	r1, [pc, #-3604]	; 26e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13228>
   27c90:	mov	r0, #0
   27c94:	bl	13460 <dcgettext@plt>
   27c98:	str	r0, [sp, #28]
   27c9c:	bl	31950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcf8>
   27ca0:	ldr	r3, [sp, #28]
   27ca4:	mov	r1, r0
   27ca8:	mov	r0, r3
   27cac:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27cb0:	b	27688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a30>
   27cb4:	ldr	r4, [r0, #20]
   27cb8:	cmp	r4, #0
   27cbc:	beq	264ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12854>
   27cc0:	ldr	r3, [r4, #72]	; 0x48
   27cc4:	cmp	r3, #0
   27cc8:	blt	27ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1408c>
   27ccc:	ldr	r3, [r4, #28]
   27cd0:	cmp	r3, #0
   27cd4:	beq	27ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1408c>
   27cd8:	ldr	r2, [r3, #148]	; 0x94
   27cdc:	cmp	r2, #0
   27ce0:	bne	26f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x132e8>
   27ce4:	ldr	r4, [r4, #20]
   27ce8:	cmp	r4, #0
   27cec:	bne	27cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14068>
   27cf0:	b	264ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12854>
   27cf4:	ldr	r1, [pc, #-3704]	; 26e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1322c>
   27cf8:	sub	r0, r1, #224	; 0xe0
   27cfc:	cmp	r2, r1
   27d00:	ldr	r3, [r0, #224]	; 0xe0
   27d04:	str	r3, [r5]
   27d08:	mov	r3, r0
   27d0c:	ldreq	r3, [pc, #-3716]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27d10:	str	sl, [r0, #224]	; 0xe0
   27d14:	ldrne	r5, [r0, #228]	; 0xe4
   27d18:	streq	r5, [r3, #228]	; 0xe4
   27d1c:	b	27824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13bcc>
   27d20:	mov	r0, r8
   27d24:	bl	13364 <free@plt>
   27d28:	b	26b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ef0>
   27d2c:	ldr	r1, [pc, #-3748]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27d30:	str	r3, [r1, #276]	; 0x114
   27d34:	mov	r1, r3
   27d38:	b	277ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b54>
   27d3c:	ldr	r1, [pc, #-3772]	; 26e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13230>
   27d40:	ldr	r0, [pc, #-3772]	; 26e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13234>
   27d44:	str	r2, [sp, #28]
   27d48:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   27d4c:	ldr	r3, [pc, #-3780]	; 26e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   27d50:	ldr	r2, [sp, #28]
   27d54:	ldr	r1, [r3, #276]	; 0x114
   27d58:	b	277ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b54>
   27d5c:	push	{r4, r5, r6, lr}
   27d60:	mov	r4, r0
   27d64:	mov	r0, #8
   27d68:	mov	r5, r1
   27d6c:	bl	13574 <xmalloc@plt>
   27d70:	ldr	r3, [pc, #104]	; 27de0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14188>
   27d74:	str	r4, [r0]
   27d78:	ldr	r4, [r3, #132]	; 0x84
   27d7c:	mov	r6, r0
   27d80:	cmp	r4, #0
   27d84:	bne	27d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14140>
   27d88:	b	27db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14160>
   27d8c:	ldr	r4, [r4]
   27d90:	cmp	r4, #0
   27d94:	beq	27db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14160>
   27d98:	mov	r1, r5
   27d9c:	ldr	r0, [r4, #4]
   27da0:	bl	13268 <strcmp@plt>
   27da4:	cmp	r0, #0
   27da8:	bne	27d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14134>
   27dac:	str	r4, [r6, #4]
   27db0:	mov	r0, r6
   27db4:	pop	{r4, r5, r6, pc}
   27db8:	mov	r2, #5
   27dbc:	ldr	r1, [pc, #32]	; 27de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1418c>
   27dc0:	mov	r0, #0
   27dc4:	bl	13460 <dcgettext@plt>
   27dc8:	mov	r1, r5
   27dcc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   27dd0:	mov	r3, #0
   27dd4:	str	r3, [r6, #4]
   27dd8:	mov	r0, r6
   27ddc:	pop	{r4, r5, r6, pc}
   27de0:	andeq	r8, ip, ip, lsl #1
   27de4:	andeq	r0, r5, r4, ror #7
   27de8:	push	{r4, r5, r6, lr}
   27dec:	mov	r5, r0
   27df0:	ldr	r6, [pc, #80]	; 27e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141f0>
   27df4:	ldr	r4, [r6, #84]	; 0x54
   27df8:	cmp	r4, #0
   27dfc:	beq	27e20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141c8>
   27e00:	mov	r1, r5
   27e04:	ldr	r0, [r4, #4]
   27e08:	bl	13268 <strcmp@plt>
   27e0c:	cmp	r0, #0
   27e10:	popeq	{r4, r5, r6, pc}
   27e14:	ldr	r4, [r4]
   27e18:	cmp	r4, #0
   27e1c:	bne	27e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141a8>
   27e20:	mov	r0, #8
   27e24:	bl	13574 <xmalloc@plt>
   27e28:	mov	r4, r0
   27e2c:	mov	r0, r5
   27e30:	bl	135a4 <xstrdup@plt>
   27e34:	ldr	r3, [r6, #84]	; 0x54
   27e38:	str	r4, [r6, #84]	; 0x54
   27e3c:	str	r3, [r4]
   27e40:	str	r0, [r4, #4]
   27e44:	pop	{r4, r5, r6, pc}
   27e48:	andeq	r7, ip, r8, lsr #23
   27e4c:	push	{r4, r5, r6, lr}
   27e50:	ldr	r5, [pc, #84]	; 27eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14254>
   27e54:	ldr	r1, [r5, #128]	; 0x80
   27e58:	cmp	r1, #0
   27e5c:	movne	r2, r0
   27e60:	bne	27e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14214>
   27e64:	b	27e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14230>
   27e68:	mov	r2, r3
   27e6c:	ldr	r3, [r2]
   27e70:	cmp	r3, #0
   27e74:	bne	27e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14210>
   27e78:	ldr	r3, [r1]
   27e7c:	str	r3, [r2]
   27e80:	str	r0, [r1]
   27e84:	pop	{r4, r5, r6, pc}
   27e88:	mov	r4, r0
   27e8c:	mov	r1, #20
   27e90:	mov	r0, #1
   27e94:	bl	13bec <xcalloc@plt>
   27e98:	ldr	r3, [pc, #16]	; 27eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14258>
   27e9c:	str	r4, [r0]
   27ea0:	str	r0, [r5, #128]	; 0x80
   27ea4:	str	r3, [r0, #16]
   27ea8:	pop	{r4, r5, r6, pc}
   27eac:	andeq	r8, ip, ip, lsl #1
   27eb0:	muleq	r1, r0, r6
   27eb4:	push	{r4, lr}
   27eb8:	mov	r3, #0
   27ebc:	ldr	r4, [pc, #36]	; 27ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14290>
   27ec0:	mov	r0, r3
   27ec4:	mov	r2, r4
   27ec8:	ldr	r1, [pc, #28]	; 27eec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14294>
   27ecc:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   27ed0:	mov	r2, r4
   27ed4:	mov	r3, #0
   27ed8:	ldr	r1, [pc, #16]	; 27ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14298>
   27edc:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   27ee0:	pop	{r4, lr}
   27ee4:	b	27e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141f4>
   27ee8:	andeq	pc, r4, r8, lsl #26
   27eec:	andeq	r0, r5, r4, lsl r4
   27ef0:	andeq	r0, r5, r8, lsr #8
   27ef4:	push	{r4, lr}
   27ef8:	mov	r3, #0
   27efc:	ldr	r4, [pc, #36]	; 27f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142d0>
   27f00:	mov	r0, r3
   27f04:	mov	r2, r4
   27f08:	ldr	r1, [pc, #28]	; 27f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142d4>
   27f0c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   27f10:	mov	r2, r4
   27f14:	mov	r3, #0
   27f18:	ldr	r1, [pc, #16]	; 27f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142d8>
   27f1c:	bl	257cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b74>
   27f20:	pop	{r4, lr}
   27f24:	b	27e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141f4>
   27f28:	andeq	pc, r4, r8, lsl #26
   27f2c:	andeq	r0, r5, r8, lsr r4
   27f30:	andeq	r0, r5, r8, asr #8
   27f34:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f38:	ldrb	r4, [r0]
   27f3c:	cmp	r4, #0
   27f40:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f44:	mov	r5, r0
   27f48:	ldr	sl, [pc, #192]	; 28010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143b8>
   27f4c:	ldr	r7, [pc, #192]	; 28014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143bc>
   27f50:	ldr	r9, [pc, #192]	; 28018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143c0>
   27f54:	ldr	r8, [pc, #192]	; 2801c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143c4>
   27f58:	b	27f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14308>
   27f5c:	ldrb	r4, [r5, #1]!
   27f60:	cmp	r4, #44	; 0x2c
   27f64:	beq	27f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14304>
   27f68:	lsl	r3, r4, #1
   27f6c:	ldrh	r3, [sl, r3]
   27f70:	tst	r3, #64	; 0x40
   27f74:	bne	27f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14304>
   27f78:	cmp	r4, #0
   27f7c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f80:	ldrb	r4, [r5, #1]
   27f84:	add	r6, r5, #1
   27f88:	cmp	r4, #44	; 0x2c
   27f8c:	cmpne	r4, #0
   27f90:	beq	27fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14364>
   27f94:	lsl	r3, r4, #1
   27f98:	b	27fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14358>
   27f9c:	ldrb	r4, [r6, #1]!
   27fa0:	cmp	r4, #0
   27fa4:	cmpne	r4, #44	; 0x2c
   27fa8:	lsl	r3, r4, #1
   27fac:	beq	27fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14364>
   27fb0:	ldrh	r3, [sl, r3]
   27fb4:	tst	r3, #64	; 0x40
   27fb8:	beq	27f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14344>
   27fbc:	mov	fp, #0
   27fc0:	strb	fp, [r6]
   27fc4:	mov	r1, r7
   27fc8:	mov	r0, r5
   27fcc:	bl	13520 <strcasecmp@plt>
   27fd0:	cmp	r0, fp
   27fd4:	bne	27ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1439c>
   27fd8:	mov	r3, #1
   27fdc:	str	r3, [r8, #64]	; 0x40
   27fe0:	cmp	r4, #0
   27fe4:	strb	r4, [r6]
   27fe8:	mov	r5, r6
   27fec:	bne	27f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14308>
   27ff0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ff4:	mov	r1, r9
   27ff8:	mov	r0, fp
   27ffc:	mov	r2, #5
   28000:	bl	13460 <dcgettext@plt>
   28004:	mov	r1, r5
   28008:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2800c:	b	27fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14388>
   28010:	andeq	r6, ip, r0, lsl #24
   28014:	andeq	r0, r5, ip, asr r4
   28018:	andeq	r0, r5, r8, ror #8
   2801c:	andeq	r8, ip, r4, ror r1
   28020:	push	{r4, r5, r6, r7, r8, lr}
   28024:	vpush	{d8}
   28028:	ldr	r0, [pc, #144]	; 280c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14468>
   2802c:	bl	132bc <printf@plt>
   28030:	ldr	r3, [pc, #140]	; 280c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1446c>
   28034:	ldr	r5, [r3, #220]	; 0xdc
   28038:	ldr	r3, [r5, #8]
   2803c:	cmp	r3, #0
   28040:	beq	280ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14454>
   28044:	vldr	d8, [pc, #108]	; 280b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14460>
   28048:	ldr	r7, [pc, #120]	; 280c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14470>
   2804c:	ldr	r6, [pc, #120]	; 280cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14474>
   28050:	ldr	r3, [r5, #16]
   28054:	ldr	r4, [r5, #28]
   28058:	ldr	r1, [r5]
   2805c:	sub	r4, r4, r3
   28060:	mov	r0, r7
   28064:	bl	132bc <printf@plt>
   28068:	mov	r0, r4
   2806c:	bl	1f7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb5c>
   28070:	ldr	r0, [r5, #20]
   28074:	bl	1f7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb5c>
   28078:	vmov	s15, r4
   2807c:	vldr	s13, [r5, #20]
   28080:	mov	r0, r6
   28084:	vcvt.f64.u32	d7, s15
   28088:	vcvt.f64.u32	d6, s13
   2808c:	vmul.f64	d7, d7, d8
   28090:	vdiv.f64	d7, d7, d6
   28094:	vmov	r2, r3, d7
   28098:	bl	132bc <printf@plt>
   2809c:	ldr	r5, [r5, #8]
   280a0:	ldr	r3, [r5, #8]
   280a4:	cmp	r3, #0
   280a8:	bne	28050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143f8>
   280ac:	vpop	{d8}
   280b0:	pop	{r4, r5, r6, r7, r8, pc}
   280b4:	nop			; (mov r0, r0)
   280b8:	andeq	r0, r0, r0
   280bc:	subsmi	r0, r9, r0
   280c0:	andeq	r0, r5, r4, lsl #9
   280c4:	andeq	r7, ip, r8, lsr #23
   280c8:	andeq	r0, r5, r0, asr #9
   280cc:	andeq	r0, r5, r8, asr #9
   280d0:	push	{r4, r5, r6, lr}
   280d4:	mov	r5, r1
   280d8:	mov	r6, r0
   280dc:	ldr	r4, [r1]
   280e0:	b	28100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144a8>
   280e4:	ldr	r1, [r4, #4]
   280e8:	bl	13268 <strcmp@plt>
   280ec:	ldr	r3, [r4]
   280f0:	cmp	r0, #0
   280f4:	movne	r5, r4
   280f8:	mov	r4, r3
   280fc:	streq	r3, [r5]
   28100:	cmp	r4, #0
   28104:	mov	r0, r6
   28108:	bne	280e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1448c>
   2810c:	mov	r0, #28
   28110:	bl	13574 <xmalloc@plt>
   28114:	str	r0, [r5]
   28118:	mov	r0, r5
   2811c:	pop	{r4, r5, r6, pc}
   28120:	push	{r4, r5, r6, lr}
   28124:	mov	r5, r1
   28128:	ldr	r1, [pc, #48]	; 28160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14508>
   2812c:	mov	r4, r0
   28130:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   28134:	mov	r3, #0
   28138:	ldr	r1, [r0]
   2813c:	str	r3, [r1]
   28140:	ldr	r2, [r0]
   28144:	str	r5, [r1, #12]
   28148:	str	r4, [r1, #4]
   2814c:	str	r3, [r2, #24]
   28150:	str	r3, [r2, #8]
   28154:	str	r3, [r2, #16]
   28158:	str	r3, [r2, #20]
   2815c:	pop	{r4, r5, r6, pc}
   28160:	ldrdeq	r7, [ip], -ip
   28164:	push	{r4, lr}
   28168:	mov	r4, r0
   2816c:	ldr	r1, [pc, #44]	; 281a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14548>
   28170:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   28174:	mov	r3, #0
   28178:	ldr	r1, [r0]
   2817c:	str	r3, [r1]
   28180:	ldr	r2, [r0]
   28184:	str	r4, [r1, #4]
   28188:	str	r3, [r1, #12]
   2818c:	str	r3, [r2, #24]
   28190:	str	r3, [r2, #8]
   28194:	str	r3, [r2, #16]
   28198:	str	r3, [r2, #20]
   2819c:	pop	{r4, pc}
   281a0:	andeq	r7, ip, r0, ror #25
   281a4:	ldr	r3, [pc, #4]	; 281b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14558>
   281a8:	str	r0, [r3, #8]
   281ac:	bx	lr
   281b0:	ldrdeq	r7, [ip], -ip
   281b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   281b8:	sub	sp, sp, #20
   281bc:	ldr	r7, [pc, #732]	; 284a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14848>
   281c0:	ldr	r3, [r7, #12]
   281c4:	cmp	r3, #0
   281c8:	bne	2843c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147e4>
   281cc:	ldr	r8, [r7]
   281d0:	ldr	r4, [r7, #16]
   281d4:	cmp	r8, #0
   281d8:	beq	2827c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14624>
   281dc:	cmp	r4, #0
   281e0:	moveq	r4, r8
   281e4:	streq	r8, [r7, #16]
   281e8:	ldr	sl, [pc, #692]	; 284a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1484c>
   281ec:	mov	r9, #0
   281f0:	b	28208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145b0>
   281f4:	ldr	r3, [r8, #12]
   281f8:	ldr	r8, [r8]
   281fc:	str	r3, [r5, #12]
   28200:	cmp	r8, #0
   28204:	beq	2827c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14624>
   28208:	cmp	r4, #0
   2820c:	ldr	r6, [r8, #4]
   28210:	movne	r5, r4
   28214:	beq	28238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145e0>
   28218:	ldr	r1, [r5, #4]
   2821c:	mov	r0, r6
   28220:	bl	13268 <strcmp@plt>
   28224:	cmp	r0, #0
   28228:	beq	281f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1459c>
   2822c:	ldr	r5, [r5]
   28230:	cmp	r5, #0
   28234:	bne	28218 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145c0>
   28238:	mov	r1, sl
   2823c:	mov	r0, r6
   28240:	ldr	r5, [r8, #12]
   28244:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   28248:	ldr	r4, [r7, #16]
   2824c:	ldr	r2, [r0]
   28250:	str	r9, [r2]
   28254:	ldr	r3, [r0]
   28258:	ldr	r8, [r8]
   2825c:	str	r5, [r2, #12]
   28260:	cmp	r8, #0
   28264:	str	r6, [r2, #4]
   28268:	str	r9, [r3, #24]
   2826c:	str	r9, [r3, #8]
   28270:	str	r9, [r3, #16]
   28274:	str	r9, [r3, #20]
   28278:	bne	28208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145b0>
   2827c:	ldr	r8, [r7, #4]
   28280:	cmp	r8, #0
   28284:	beq	28468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14810>
   28288:	cmp	r4, #0
   2828c:	moveq	r4, r8
   28290:	mov	r9, #1
   28294:	streq	r8, [r7, #16]
   28298:	ldr	r6, [r8, #4]
   2829c:	mov	r5, r4
   282a0:	ldr	r0, [r5, #4]
   282a4:	mov	r1, r6
   282a8:	bl	13268 <strcmp@plt>
   282ac:	cmp	r0, #0
   282b0:	streq	r9, [r5, #24]
   282b4:	ldr	r5, [r5]
   282b8:	cmp	r5, #0
   282bc:	bne	282a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14648>
   282c0:	ldr	r8, [r8]
   282c4:	cmp	r8, #0
   282c8:	bne	28298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14640>
   282cc:	ldr	sl, [pc, #468]	; 284a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14850>
   282d0:	mov	r6, #0
   282d4:	ldr	r5, [r7, #20]
   282d8:	cmp	r5, #0
   282dc:	beq	28460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14808>
   282e0:	ldr	r8, [r4, #4]
   282e4:	mov	r9, #0
   282e8:	ldr	r0, [r5, #4]
   282ec:	mov	r1, r8
   282f0:	bl	13268 <strcmp@plt>
   282f4:	cmp	r0, #0
   282f8:	ldreq	r9, [r5, #16]
   282fc:	ldr	r5, [r5]
   28300:	cmp	r5, #0
   28304:	bne	282e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14690>
   28308:	ldr	fp, [r7, #24]
   2830c:	cmp	fp, #0
   28310:	beq	28458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14800>
   28314:	ldr	r5, [r4, #4]
   28318:	mov	r8, #0
   2831c:	ldr	r0, [fp, #4]
   28320:	mov	r1, r5
   28324:	bl	13268 <strcmp@plt>
   28328:	cmp	r0, #0
   2832c:	ldreq	r8, [fp, #20]
   28330:	ldr	fp, [fp]
   28334:	cmp	fp, #0
   28338:	bne	2831c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146c4>
   2833c:	ldr	r1, [r7, #8]
   28340:	cmp	r1, #0
   28344:	beq	28444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147ec>
   28348:	ldr	r3, [r4, #24]
   2834c:	ldr	r0, [r4, #4]
   28350:	cmp	r3, #0
   28354:	moveq	r2, #2
   28358:	movne	r2, #0
   2835c:	mov	r3, r9
   28360:	str	r6, [sp, #12]
   28364:	str	r6, [sp, #8]
   28368:	str	r6, [sp, #4]
   2836c:	str	r8, [sp]
   28370:	bl	23fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10368>
   28374:	mov	r0, #20
   28378:	str	r6, [r7, #8]
   2837c:	bl	13574 <xmalloc@plt>
   28380:	ldr	ip, [r4, #4]
   28384:	mov	r2, #0
   28388:	mov	r3, r0
   2838c:	mov	r1, r0
   28390:	stm	r3, {r6, ip}
   28394:	mov	r0, r2
   28398:	str	r6, [r3, #8]
   2839c:	str	r6, [r3, #12]
   283a0:	str	r6, [r3, #16]
   283a4:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   283a8:	ldr	r5, [r7, #28]
   283ac:	cmp	r5, #0
   283b0:	bne	283c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1476c>
   283b4:	b	28414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147bc>
   283b8:	ldr	r5, [r5]
   283bc:	cmp	r5, #0
   283c0:	beq	28414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147bc>
   283c4:	ldr	r1, [r4, #4]
   283c8:	ldr	r0, [r5, #8]
   283cc:	bl	13268 <strcmp@plt>
   283d0:	subs	r8, r0, #0
   283d4:	bne	283b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14760>
   283d8:	mov	r0, #20
   283dc:	bl	13574 <xmalloc@plt>
   283e0:	ldr	ip, [r5, #4]
   283e4:	mov	r2, r8
   283e8:	mov	r3, r0
   283ec:	mov	r1, r0
   283f0:	stm	r3, {r8, ip}
   283f4:	mov	r0, r8
   283f8:	str	r8, [r3, #8]
   283fc:	str	r8, [r3, #12]
   28400:	str	r8, [r3, #16]
   28404:	bl	24614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109bc>
   28408:	ldr	r5, [r5]
   2840c:	cmp	r5, #0
   28410:	bne	283c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1476c>
   28414:	mov	r3, #0
   28418:	mov	r2, r3
   2841c:	mov	r0, r3
   28420:	mov	r1, sl
   28424:	bl	24c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11028>
   28428:	ldr	r4, [r4]
   2842c:	cmp	r4, #0
   28430:	bne	282d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1467c>
   28434:	mov	r3, #1
   28438:	str	r3, [r7, #12]
   2843c:	add	sp, sp, #20
   28440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28444:	ldr	r1, [r4, #12]
   28448:	cmp	r1, #0
   2844c:	beq	2848c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14834>
   28450:	str	r1, [r7, #8]
   28454:	b	28348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146f0>
   28458:	mov	r8, fp
   2845c:	b	2833c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146e4>
   28460:	mov	r9, r5
   28464:	b	28308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146b0>
   28468:	cmp	r4, #0
   2846c:	movne	r3, r4
   28470:	movne	r2, #1
   28474:	beq	28434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147dc>
   28478:	str	r2, [r3, #24]
   2847c:	ldr	r3, [r3]
   28480:	cmp	r3, #0
   28484:	bne	28478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14820>
   28488:	b	282cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14674>
   2848c:	ldr	r1, [pc, #24]	; 284ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14854>
   28490:	ldr	r0, [pc, #24]	; 284b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14858>
   28494:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   28498:	mov	r1, r0
   2849c:	b	28450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147f8>
   284a0:	ldrdeq	r7, [ip], -ip
   284a4:	andeq	r7, ip, ip, ror #25
   284a8:	muleq	r4, r0, r8
   284ac:	andeq	r4, r8, r0, lsl #22
   284b0:	andeq	r0, r0, r3, lsl #2
   284b4:	ldr	ip, [pc, #16]	; 284cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14874>
   284b8:	mov	r3, #0
   284bc:	mov	r2, r3
   284c0:	mov	r1, #5
   284c4:	str	r3, [ip, #8]
   284c8:	b	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   284cc:	ldrdeq	r7, [ip], -ip
   284d0:	push	{r4, lr}
   284d4:	mov	r4, r0
   284d8:	ldr	r1, [pc, #44]	; 2850c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148b4>
   284dc:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   284e0:	mov	r3, #0
   284e4:	ldr	r1, [r0]
   284e8:	str	r3, [r1]
   284ec:	ldr	r2, [r0]
   284f0:	str	r4, [r1, #4]
   284f4:	str	r3, [r1, #12]
   284f8:	str	r3, [r2, #24]
   284fc:	str	r3, [r2, #8]
   28500:	str	r3, [r2, #16]
   28504:	str	r3, [r2, #20]
   28508:	pop	{r4, pc}
   2850c:	andeq	r7, ip, ip, ror #25
   28510:	push	{r4, r5, lr}
   28514:	subs	r4, r1, #0
   28518:	sub	sp, sp, #28
   2851c:	mov	r5, r0
   28520:	beq	28560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14908>
   28524:	ldr	r1, [pc, #80]	; 2857c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14924>
   28528:	mov	r0, r4
   2852c:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   28530:	mov	r3, #0
   28534:	ldr	r1, [r0]
   28538:	str	r3, [r1]
   2853c:	ldr	r2, [r0]
   28540:	str	r4, [r1, #4]
   28544:	str	r3, [r1, #12]
   28548:	str	r3, [r2, #24]
   2854c:	str	r5, [r2, #8]
   28550:	str	r3, [r2, #16]
   28554:	str	r3, [r2, #20]
   28558:	add	sp, sp, #28
   2855c:	pop	{r4, r5, pc}
   28560:	ldr	r1, [pc, #24]	; 28580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14928>
   28564:	add	r0, sp, #4
   28568:	bl	13a00 <sprintf@plt>
   2856c:	add	r0, sp, #4
   28570:	bl	135a4 <xstrdup@plt>
   28574:	mov	r4, r0
   28578:	b	28524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148cc>
   2857c:	strdeq	r7, [ip], -r8
   28580:	ldrdeq	r0, [r5], -r8
   28584:	mov	r1, #1
   28588:	b	23f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1033c>
   2858c:	push	{r4, lr}
   28590:	mov	r4, r0
   28594:	ldr	r1, [pc, #56]	; 285d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1497c>
   28598:	bl	13268 <strcmp@plt>
   2859c:	subs	r2, r0, #0
   285a0:	bne	285b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14960>
   285a4:	mov	r3, #1
   285a8:	mov	r1, r2
   285ac:	ldr	r0, [pc, #36]	; 285d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14980>
   285b0:	pop	{r4, lr}
   285b4:	b	250b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11458>
   285b8:	ldr	r1, [pc, #28]	; 285dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14984>
   285bc:	mov	r2, #5
   285c0:	mov	r0, #0
   285c4:	bl	13460 <dcgettext@plt>
   285c8:	mov	r1, r4
   285cc:	pop	{r4, lr}
   285d0:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   285d4:	andeq	r3, r4, r4, lsr #29
   285d8:	ldrdeq	r0, [r5], -ip
   285dc:	andeq	r0, r5, r4, ror #9
   285e0:	push	{r4, lr}
   285e4:	mov	r2, #0
   285e8:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   285ec:	pop	{r4, lr}
   285f0:	b	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   285f4:	push	{r4, r5, r6, lr}
   285f8:	mov	r4, r1
   285fc:	ldr	r1, [pc, #48]	; 28634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149dc>
   28600:	mov	r5, r0
   28604:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   28608:	mov	r3, #0
   2860c:	ldr	r1, [r0]
   28610:	str	r3, [r1]
   28614:	ldr	r2, [r0]
   28618:	str	r5, [r1, #4]
   2861c:	str	r3, [r1, #12]
   28620:	str	r4, [r2, #16]
   28624:	str	r3, [r2, #24]
   28628:	str	r3, [r2, #8]
   2862c:	str	r3, [r2, #20]
   28630:	pop	{r4, r5, r6, pc}
   28634:	strdeq	r7, [ip], -r0
   28638:	push	{r4, r5, r6, lr}
   2863c:	mov	r4, r1
   28640:	ldr	r1, [pc, #48]	; 28678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a20>
   28644:	mov	r5, r0
   28648:	bl	280d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14478>
   2864c:	mov	r3, #0
   28650:	ldr	r1, [r0]
   28654:	str	r3, [r1]
   28658:	ldr	r2, [r0]
   2865c:	str	r5, [r1, #4]
   28660:	str	r3, [r1, #12]
   28664:	str	r4, [r2, #20]
   28668:	str	r3, [r2, #24]
   2866c:	str	r3, [r2, #8]
   28670:	str	r3, [r2, #16]
   28674:	pop	{r4, r5, r6, pc}
   28678:	strdeq	r7, [ip], -r4
   2867c:	bx	lr
   28680:	push	{r4, lr}
   28684:	mov	r4, r0
   28688:	ldrb	r3, [r0]
   2868c:	cmp	r3, #95	; 0x5f
   28690:	bne	286a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a48>
   28694:	ldrb	r3, [r4, #1]!
   28698:	cmp	r3, #95	; 0x5f
   2869c:	beq	28694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a3c>
   286a0:	mov	r2, #7
   286a4:	ldr	r1, [pc, #100]	; 28710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ab8>
   286a8:	mov	r0, r4
   286ac:	bl	13bb0 <strncmp@plt>
   286b0:	cmp	r0, #0
   286b4:	bne	28708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ab0>
   286b8:	ldrb	r2, [r4, #7]
   286bc:	ldrb	r3, [r4, #9]
   286c0:	cmp	r2, r3
   286c4:	bne	28708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ab0>
   286c8:	ldrb	r1, [r4, #8]
   286cc:	cmp	r1, #73	; 0x49
   286d0:	cmpne	r1, #68	; 0x44
   286d4:	movne	r1, #1
   286d8:	moveq	r1, #0
   286dc:	bne	28708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ab0>
   286e0:	ldrb	r3, [r4, #10]
   286e4:	ldr	r2, [pc, #40]	; 28714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14abc>
   286e8:	lsl	r3, r3, #1
   286ec:	ldrh	r3, [r2, r3]
   286f0:	tst	r3, #4
   286f4:	beq	28708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ab0>
   286f8:	add	r0, r4, #10
   286fc:	mov	r2, #10
   28700:	pop	{r4, lr}
   28704:	b	13274 <strtol@plt>
   28708:	mvn	r0, #0
   2870c:	pop	{r4, pc}
   28710:	andeq	r0, r5, r4, lsl #10
   28714:	andeq	r6, ip, r0, lsl #24
   28718:	push	{r4, r5, r6, r7, r8, lr}
   2871c:	mov	r6, r1
   28720:	ldr	r1, [r0]
   28724:	ldr	r2, [r6]
   28728:	mov	r5, r0
   2872c:	ldr	r0, [r1, #4]
   28730:	ldr	r4, [r2, #4]
   28734:	ldr	r3, [pc, #92]	; 28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b40>
   28738:	cmp	r0, #0
   2873c:	moveq	r0, r3
   28740:	cmp	r4, #0
   28744:	moveq	r4, r3
   28748:	bl	28680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a28>
   2874c:	mov	r7, r0
   28750:	mov	r0, r4
   28754:	bl	28680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a28>
   28758:	cmp	r7, r0
   2875c:	blt	28790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b38>
   28760:	movgt	r3, #1
   28764:	movle	r3, #0
   28768:	cmp	r5, r6
   2876c:	orrcc	r3, r3, #1
   28770:	cmp	r3, #0
   28774:	beq	28780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b28>
   28778:	mvn	r0, #0
   2877c:	pop	{r4, r5, r6, r7, r8, pc}
   28780:	cmp	r5, r6
   28784:	movls	r0, #0
   28788:	movhi	r0, #1
   2878c:	pop	{r4, r5, r6, r7, r8, pc}
   28790:	mov	r0, #1
   28794:	pop	{r4, r5, r6, r7, r8, pc}
   28798:	andeq	r2, r5, ip
   2879c:	push	{r4, r5, r6, r7, r8, r9, lr}
   287a0:	sub	sp, sp, #12
   287a4:	ldr	r6, [pc, #332]	; 288f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ca0>
   287a8:	mov	r5, r0
   287ac:	mov	r9, r2
   287b0:	ldr	r4, [r6]
   287b4:	mov	r7, r3
   287b8:	cmp	r4, #0
   287bc:	ldr	r8, [sp, #40]	; 0x28
   287c0:	beq	287ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b94>
   287c4:	ldr	r3, [r4, #4]
   287c8:	cmp	r3, r0
   287cc:	bne	287e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b88>
   287d0:	b	28874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c1c>
   287d4:	ldr	r0, [r4, #4]
   287d8:	cmp	r0, r5
   287dc:	beq	28874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c1c>
   287e0:	ldr	r4, [r4]
   287e4:	cmp	r4, #0
   287e8:	bne	287d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b7c>
   287ec:	mov	r0, #20
   287f0:	str	r1, [sp, #4]
   287f4:	bl	13574 <xmalloc@plt>
   287f8:	ldr	r2, [r6]
   287fc:	ldr	r1, [sp, #4]
   28800:	mov	r3, #0
   28804:	mov	r4, r0
   28808:	str	r2, [r0]
   2880c:	str	r5, [r0, #4]
   28810:	str	r1, [r0, #8]
   28814:	str	r3, [r0, #12]
   28818:	str	r0, [r6]
   2881c:	str	r3, [r0, #16]
   28820:	mov	r0, #16
   28824:	bl	13574 <xmalloc@plt>
   28828:	mov	r3, #0
   2882c:	str	r3, [r0]
   28830:	ldr	r1, [r4, #16]
   28834:	str	r9, [r0, #4]
   28838:	cmp	r1, r3
   2883c:	str	r7, [r0, #8]
   28840:	str	r8, [r0, #12]
   28844:	bne	28850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bf8>
   28848:	b	288f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c98>
   2884c:	mov	r1, r3
   28850:	ldr	r3, [r1]
   28854:	cmp	r3, #0
   28858:	bne	2884c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bf4>
   2885c:	ldr	r3, [r4, #12]
   28860:	str	r0, [r1]
   28864:	add	r3, r3, #1
   28868:	str	r3, [r4, #12]
   2886c:	add	sp, sp, #12
   28870:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28874:	ldr	r3, [r4, #8]
   28878:	cmp	r3, r1
   2887c:	bne	288d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c78>
   28880:	ldr	r3, [r4, #16]
   28884:	cmp	r3, #0
   28888:	beq	28820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc8>
   2888c:	ldr	r2, [r7, #148]	; 0x94
   28890:	cmp	r2, #0
   28894:	beq	28820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc8>
   28898:	ldr	r3, [r3, #8]
   2889c:	ldr	r3, [r3, #148]	; 0x94
   288a0:	cmp	r3, #0
   288a4:	beq	28820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc8>
   288a8:	ldr	r1, [r3, #4]
   288ac:	ldr	r3, [r2, #4]
   288b0:	ldr	r1, [r1]
   288b4:	ldr	r0, [r3]
   288b8:	bl	13268 <strcmp@plt>
   288bc:	cmp	r0, #0
   288c0:	beq	28820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc8>
   288c4:	mov	r2, #5
   288c8:	ldr	r1, [pc, #44]	; 288fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ca4>
   288cc:	b	288d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c80>
   288d0:	ldr	r1, [pc, #40]	; 28900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ca8>
   288d4:	mov	r2, #5
   288d8:	mov	r0, #0
   288dc:	bl	13460 <dcgettext@plt>
   288e0:	ldr	r1, [r5, #4]
   288e4:	add	sp, sp, #12
   288e8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   288ec:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   288f0:	add	r1, r4, #16
   288f4:	b	2885c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14c04>
   288f8:	andeq	r8, ip, r0, ror r0
   288fc:	andeq	r0, r5, r4, lsr r5
   28900:	andeq	r0, r5, ip, lsl #10
   28904:	ldr	r3, [pc, #1188]	; 28db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15158>
   28908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2890c:	sub	sp, sp, #28
   28910:	ldr	r7, [r3]
   28914:	cmp	r7, #0
   28918:	bne	28d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15130>
   2891c:	ldr	r2, [pc, #1168]	; 28db4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1515c>
   28920:	mov	r1, #1
   28924:	str	r1, [r3]
   28928:	ldr	r3, [r2]
   2892c:	ldr	r9, [pc, #1156]	; 28db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15160>
   28930:	cmp	r3, #0
   28934:	bne	28bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f58>
   28938:	ldr	r0, [pc, #1148]	; 28dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15164>
   2893c:	bl	1fe78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc220>
   28940:	ldr	r0, [pc, #1140]	; 28dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15164>
   28944:	bl	1fe88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc230>
   28948:	ldr	r5, [r9]
   2894c:	cmp	r5, #0
   28950:	beq	28a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14df8>
   28954:	ldr	r8, [pc, #1124]	; 28dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15168>
   28958:	ldr	r7, [pc, #1124]	; 28dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1516c>
   2895c:	ldr	sl, [pc, #1124]	; 28dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15170>
   28960:	mov	fp, #0
   28964:	ldr	r3, [r5, #4]
   28968:	ldrb	r3, [r3, #12]
   2896c:	sub	r3, r3, #3
   28970:	cmp	r3, #1
   28974:	bls	28a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14dec>
   28978:	ldr	r1, [r5, #8]
   2897c:	ldr	r0, [r8, #48]	; 0x30
   28980:	bl	134a8 <bfd_reloc_type_lookup@plt>
   28984:	subs	r3, r0, #0
   28988:	str	r3, [sp, #12]
   2898c:	bne	289c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d70>
   28990:	ldrb	r3, [r8]
   28994:	and	r3, r3, #3
   28998:	cmp	r3, #2
   2899c:	beq	28d90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15138>
   289a0:	ldr	r3, [r5, #16]
   289a4:	ldr	r3, [r3, #8]
   289a8:	ldr	r0, [r3, #148]	; 0x94
   289ac:	cmp	r0, #0
   289b0:	beq	28a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14dac>
   289b4:	ldr	r1, [r5, #8]
   289b8:	bl	134a8 <bfd_reloc_type_lookup@plt>
   289bc:	subs	r3, r0, #0
   289c0:	str	r3, [sp, #12]
   289c4:	beq	28d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150f4>
   289c8:	ldr	r0, [sp, #12]
   289cc:	bl	13478 <bfd_get_reloc_size@plt>
   289d0:	sub	r3, r0, #1
   289d4:	mov	r4, r0
   289d8:	cmp	r3, #7
   289dc:	ldrls	pc, [pc, r3, lsl #2]
   289e0:	b	28c78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15020>
   289e4:	andeq	r8, r2, ip, asr sl
   289e8:	andeq	r8, r2, r8, lsr #23
   289ec:	andeq	r8, r2, r8, ror ip
   289f0:	andeq	r8, r2, r0, lsr #23
   289f4:	andeq	r8, r2, r8, ror ip
   289f8:	andeq	r8, r2, r8, ror ip
   289fc:	andeq	r8, r2, r8, ror ip
   28a00:	andeq	r8, r2, r4, lsl #23
   28a04:	mov	r2, #5
   28a08:	ldr	r1, [pc, #956]	; 28dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15174>
   28a0c:	mov	r0, #0
   28a10:	bl	13460 <dcgettext@plt>
   28a14:	ldr	r3, [r5, #16]
   28a18:	ldr	r3, [r3, #8]
   28a1c:	mov	r4, r0
   28a20:	ldr	r0, [r5, #8]
   28a24:	ldr	r6, [r3]
   28a28:	bl	131fc <bfd_get_reloc_code_name@plt>
   28a2c:	ldr	r3, [r5, #4]
   28a30:	mov	r1, r6
   28a34:	ldr	r3, [r3, #4]
   28a38:	mov	r2, r0
   28a3c:	mov	r0, r4
   28a40:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   28a44:	ldr	r5, [r5]
   28a48:	cmp	r5, #0
   28a4c:	bne	28964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d0c>
   28a50:	add	sp, sp, #28
   28a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a58:	b	1fec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc268>
   28a5c:	ldr	r6, [pc, #876]	; 28dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15178>
   28a60:	mov	r0, r4
   28a64:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   28a68:	mov	r1, r0
   28a6c:	ldr	r0, [pc, #864]	; 28dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1517c>
   28a70:	bl	2cad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e78>
   28a74:	mov	r2, #0
   28a78:	mov	r1, r0
   28a7c:	ldr	r0, [pc, #852]	; 28dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15180>
   28a80:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   28a84:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   28a88:	ldr	r3, [r5, #4]
   28a8c:	ldr	r1, [pc, #836]	; 28dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15180>
   28a90:	ldr	r0, [pc, #836]	; 28ddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15184>
   28a94:	ldr	r4, [r3, #4]
   28a98:	bl	2cb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ef0>
   28a9c:	mov	r2, #0
   28aa0:	mov	r1, r0
   28aa4:	mov	r0, r4
   28aa8:	bl	2cb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f38>
   28aac:	bl	24ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f50>
   28ab0:	ldr	r0, [r5, #12]
   28ab4:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   28ab8:	mov	r1, r0
   28abc:	mov	r0, r6
   28ac0:	bl	24af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ea0>
   28ac4:	ldr	r4, [r5, #16]
   28ac8:	cmp	r4, #0
   28acc:	bne	28b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ec4>
   28ad0:	b	28cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15094>
   28ad4:	ldr	r2, [r4, #8]
   28ad8:	ldr	r1, [r4, #12]
   28adc:	cmp	r2, sl
   28ae0:	ldrne	r3, [r2, #20]
   28ae4:	orrne	r3, r3, #2097152	; 0x200000
   28ae8:	strne	r3, [r2, #20]
   28aec:	ldrb	r3, [r8]
   28af0:	and	r3, r3, #3
   28af4:	cmp	r3, #2
   28af8:	beq	28cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15058>
   28afc:	mov	r0, r2
   28b00:	bl	2c930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18cd8>
   28b04:	mov	r1, r0
   28b08:	mov	r0, r6
   28b0c:	bl	24af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ea0>
   28b10:	ldr	r4, [r4]
   28b14:	cmp	r4, #0
   28b18:	beq	28cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15094>
   28b1c:	ldr	r3, [r7, #80]	; 0x50
   28b20:	cmp	r3, #0
   28b24:	beq	28ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e7c>
   28b28:	cmp	fp, #0
   28b2c:	beq	28d1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150c4>
   28b30:	ldr	r3, [r5, #4]
   28b34:	ldr	r0, [pc, #676]	; 28de0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15188>
   28b38:	ldr	r1, [r3, #4]
   28b3c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   28b40:	ldr	r3, [r5, #4]
   28b44:	ldr	r0, [r3, #4]
   28b48:	bl	137d8 <strlen@plt>
   28b4c:	cmp	r0, #18
   28b50:	movls	r9, r0
   28b54:	bhi	28d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150b8>
   28b58:	add	r9, r9, #1
   28b5c:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   28b60:	cmp	r9, #20
   28b64:	bne	28b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f00>
   28b68:	ldr	r1, [r4, #4]
   28b6c:	cmp	r1, #0
   28b70:	beq	28d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150dc>
   28b74:	ldr	r0, [pc, #616]	; 28de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1518c>
   28b78:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   28b7c:	mov	fp, #1
   28b80:	b	28ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e7c>
   28b84:	ldr	r3, [sp, #12]
   28b88:	ldr	r6, [pc, #600]	; 28de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15190>
   28b8c:	ldr	r2, [r3, #24]
   28b90:	ldr	r3, [pc, #596]	; 28dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15194>
   28b94:	cmp	r2, #2
   28b98:	movne	r6, r3
   28b9c:	b	28a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e08>
   28ba0:	mov	r6, #284	; 0x11c
   28ba4:	b	28a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e08>
   28ba8:	ldr	r6, [pc, #576]	; 28df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15198>
   28bac:	b	28a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e08>
   28bb0:	ldr	r5, [r9]
   28bb4:	cmp	r5, #0
   28bb8:	beq	28938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ce0>
   28bbc:	ldr	r8, [pc, #560]	; 28df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1519c>
   28bc0:	ldr	r3, [r5, #16]
   28bc4:	cmp	r3, #0
   28bc8:	movne	r4, #0
   28bcc:	bne	28bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f80>
   28bd0:	b	28c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15010>
   28bd4:	mov	r4, sl
   28bd8:	ldr	r3, [r3]
   28bdc:	add	sl, r4, #1
   28be0:	cmp	r3, #0
   28be4:	bne	28bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f7c>
   28be8:	lsl	r0, sl, #2
   28bec:	bl	13574 <xmalloc@plt>
   28bf0:	ldr	r3, [r5, #16]
   28bf4:	cmp	r3, #0
   28bf8:	mov	r6, r0
   28bfc:	subne	r2, r0, #4
   28c00:	beq	28c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14fbc>
   28c04:	str	r3, [r2, #4]!
   28c08:	ldr	r3, [r3]
   28c0c:	cmp	r3, #0
   28c10:	bne	28c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14fac>
   28c14:	mov	r3, r8
   28c18:	mov	r1, sl
   28c1c:	mov	r2, #4
   28c20:	mov	r0, r6
   28c24:	bl	13a78 <qsort@plt>
   28c28:	ldr	r3, [r6]
   28c2c:	cmp	r4, #0
   28c30:	str	r3, [r5, #16]
   28c34:	moveq	r4, r6
   28c38:	beq	28c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15000>
   28c3c:	add	r4, r6, r4, lsl #2
   28c40:	mov	r3, r6
   28c44:	ldr	r2, [r3]
   28c48:	ldr	r1, [r3, #4]!
   28c4c:	cmp	r4, r3
   28c50:	str	r1, [r2]
   28c54:	bne	28c44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14fec>
   28c58:	ldr	r3, [r4]
   28c5c:	mov	r0, r6
   28c60:	str	r7, [r3]
   28c64:	bl	13364 <free@plt>
   28c68:	ldr	r5, [r5]
   28c6c:	cmp	r5, #0
   28c70:	bne	28bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f68>
   28c74:	b	28938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ce0>
   28c78:	mov	r2, #5
   28c7c:	ldr	r1, [pc, #372]	; 28df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151a0>
   28c80:	mov	r0, #0
   28c84:	bl	13460 <dcgettext@plt>
   28c88:	mov	r6, #284	; 0x11c
   28c8c:	mov	r9, r0
   28c90:	ldr	r0, [sp, #12]
   28c94:	bl	13478 <bfd_get_reloc_size@plt>
   28c98:	ldr	r3, [r5, #4]
   28c9c:	ldr	r2, [r3, #4]
   28ca0:	mov	r1, r0
   28ca4:	mov	r0, r9
   28ca8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   28cac:	b	28a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e08>
   28cb0:	ldr	r3, [r4, #4]
   28cb4:	mov	r0, r1
   28cb8:	str	r2, [sp, #20]
   28cbc:	ldr	r9, [r5, #8]
   28cc0:	str	r3, [sp, #16]
   28cc4:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   28cc8:	ldr	r3, [sp, #16]
   28ccc:	ldr	r2, [sp, #20]
   28cd0:	ldr	r1, [sp, #12]
   28cd4:	str	r0, [sp]
   28cd8:	mov	r0, r9
   28cdc:	bl	24b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ee4>
   28ce0:	ldr	r4, [r4]
   28ce4:	cmp	r4, #0
   28ce8:	bne	28b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ec4>
   28cec:	mov	r0, #0
   28cf0:	bl	2c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c30>
   28cf4:	mov	r1, r0
   28cf8:	mov	r0, r6
   28cfc:	bl	24af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ea0>
   28d00:	ldr	r5, [r5]
   28d04:	cmp	r5, #0
   28d08:	bne	28964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d0c>
   28d0c:	b	28a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14df8>
   28d10:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   28d14:	mov	r9, #0
   28d18:	b	28b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f00>
   28d1c:	mov	r2, #5
   28d20:	ldr	r1, [pc, #212]	; 28dfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151a4>
   28d24:	mov	r0, fp
   28d28:	bl	13460 <dcgettext@plt>
   28d2c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   28d30:	b	28b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ed8>
   28d34:	ldrd	r2, [r4, #8]
   28d38:	ldr	r0, [pc, #192]	; 28e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151a8>
   28d3c:	mov	fp, #1
   28d40:	ldr	r1, [r2, #148]	; 0x94
   28d44:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   28d48:	b	28ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e7c>
   28d4c:	ldr	r3, [r5, #16]
   28d50:	ldr	r3, [r3, #8]
   28d54:	ldr	r3, [r3, #148]	; 0x94
   28d58:	cmp	r3, #0
   28d5c:	beq	28a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14dac>
   28d60:	mov	r2, #5
   28d64:	ldr	r1, [pc, #152]	; 28e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151ac>
   28d68:	bl	13460 <dcgettext@plt>
   28d6c:	ldr	r3, [r5, #16]
   28d70:	ldr	r3, [r3, #8]
   28d74:	ldr	r3, [r3, #148]	; 0x94
   28d78:	ldr	r3, [r3, #4]
   28d7c:	mov	r4, r0
   28d80:	ldr	r0, [r5, #8]
   28d84:	b	28a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14dcc>
   28d88:	add	sp, sp, #28
   28d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28d90:	mov	r2, #5
   28d94:	ldr	r1, [pc, #104]	; 28e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151ac>
   28d98:	bl	13460 <dcgettext@plt>
   28d9c:	ldr	r3, [r8, #48]	; 0x30
   28da0:	ldr	r3, [r3, #4]
   28da4:	mov	r4, r0
   28da8:	ldr	r0, [r5, #8]
   28dac:	b	28a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14dcc>
   28db0:	strdeq	r7, [ip], -ip
   28db4:	andeq	r8, ip, ip, ror r0
   28db8:	andeq	r8, ip, r0, ror r0
   28dbc:	andeq	r8, ip, r4, ror r0
   28dc0:	andeq	r8, ip, ip, lsl #1
   28dc4:	andeq	r8, ip, r4, ror r1
   28dc8:	andeq	r7, ip, r8, lsr #17
   28dcc:	muleq	r5, ip, r5
   28dd0:	andeq	r0, r0, lr, lsl r1
   28dd4:	andeq	r0, r0, r7, lsl r1
   28dd8:	andeq	r4, r8, r0, lsl #22
   28ddc:	andeq	r0, r0, r3, lsl #2
   28de0:	andeq	pc, r4, r0, lsl #26
   28de4:	andeq	r0, r5, r4, lsr #12
   28de8:	andeq	r0, r0, fp, lsl r1
   28dec:	andeq	r0, r0, sl, lsl r1
   28df0:	andeq	r0, r0, sp, lsl r1
   28df4:	andeq	r8, r2, r8, lsl r7
   28df8:	ldrdeq	r0, [r5], -ip
   28dfc:	andeq	r0, r5, r4, lsl #12
   28e00:	andeq	r0, r5, ip, lsr #12
   28e04:	andeq	r0, r5, ip, ror #10
   28e08:	push	{r4, lr}
   28e0c:	mov	r4, #0
   28e10:	ldr	lr, [pc, #20]	; 28e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151d4>
   28e14:	ldr	ip, [pc, #20]	; 28e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151d8>
   28e18:	str	r4, [lr, #4]
   28e1c:	ldr	lr, [ip]
   28e20:	mov	ip, lr
   28e24:	pop	{r4, lr}
   28e28:	bx	ip
   28e2c:	andeq	r8, ip, r4, ror r1
   28e30:	andeq	r7, ip, r0, lsl #26
   28e34:	ldr	r3, [pc, #24]	; 28e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151fc>
   28e38:	ldr	r2, [r3, #40]	; 0x28
   28e3c:	cmp	r2, #0
   28e40:	movne	r2, #0
   28e44:	strne	r2, [r3, #4]
   28e48:	ldr	r3, [pc, #8]	; 28e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15200>
   28e4c:	ldr	r3, [r3, #4]
   28e50:	bx	r3
   28e54:	andeq	r8, ip, r4, ror r1
   28e58:	andeq	r7, ip, r0, lsl #26
   28e5c:	push	{r4, r5, r6, r7, r8, lr}
   28e60:	mov	r0, #0
   28e64:	ldr	r6, [sp, #24]
   28e68:	mov	r5, r3
   28e6c:	mov	r7, r1
   28e70:	mov	r4, r2
   28e74:	ldr	r1, [pc, #28]	; 28e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15240>
   28e78:	mov	r2, #5
   28e7c:	bl	13460 <dcgettext@plt>
   28e80:	str	r7, [sp, #24]
   28e84:	mov	r3, r6
   28e88:	mov	r2, r5
   28e8c:	mov	r1, r4
   28e90:	pop	{r4, r5, r6, r7, r8, lr}
   28e94:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   28e98:	andeq	r0, r5, r4, asr r6
   28e9c:	push	{r4, r5, r6, r7, r8, lr}
   28ea0:	mov	r0, #0
   28ea4:	ldr	r6, [sp, #24]
   28ea8:	mov	r5, r3
   28eac:	mov	r7, r1
   28eb0:	mov	r4, r2
   28eb4:	ldr	r1, [pc, #28]	; 28ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15280>
   28eb8:	mov	r2, #5
   28ebc:	bl	13460 <dcgettext@plt>
   28ec0:	str	r7, [sp, #24]
   28ec4:	mov	r3, r6
   28ec8:	mov	r2, r5
   28ecc:	mov	r1, r4
   28ed0:	pop	{r4, r5, r6, r7, r8, lr}
   28ed4:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   28ed8:	muleq	r5, r8, r6
   28edc:	push	{r4, r5, r6, r7, r8, lr}
   28ee0:	subs	r2, r1, #0
   28ee4:	ldr	r5, [sp, #24]
   28ee8:	ldr	r6, [sp, #28]
   28eec:	beq	28f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15328>
   28ef0:	ldr	r0, [r0, #36]	; 0x24
   28ef4:	mov	r4, r3
   28ef8:	cmp	r0, #0
   28efc:	ldr	r7, [r2, #4]
   28f00:	beq	28f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152ec>
   28f04:	mov	r3, #0
   28f08:	mov	r2, r3
   28f0c:	mov	r1, r7
   28f10:	bl	137a8 <bfd_hash_lookup@plt>
   28f14:	cmp	r0, #0
   28f18:	beq	28f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152ec>
   28f1c:	ldr	r3, [pc, #140]	; 28fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15358>
   28f20:	mov	r2, #5
   28f24:	cmp	r5, r3
   28f28:	mov	r0, #0
   28f2c:	ldreq	r1, [pc, #128]	; 28fb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1535c>
   28f30:	ldrne	r1, [pc, #128]	; 28fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15360>
   28f34:	bl	13460 <dcgettext@plt>
   28f38:	mov	r2, r7
   28f3c:	mov	r1, r4
   28f40:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   28f44:	ldr	r3, [pc, #112]	; 28fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15364>
   28f48:	ldr	r3, [r3, #12]
   28f4c:	cmp	r3, #0
   28f50:	bne	28f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1530c>
   28f54:	ldr	r3, [pc, #100]	; 28fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15368>
   28f58:	ldr	r3, [r3]
   28f5c:	cmp	r3, #0
   28f60:	beq	28f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15320>
   28f64:	mov	r3, r6
   28f68:	mov	r2, r5
   28f6c:	mov	r1, r4
   28f70:	mov	r0, r7
   28f74:	bl	2ffc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c36c>
   28f78:	mov	r0, #1
   28f7c:	pop	{r4, r5, r6, r7, r8, pc}
   28f80:	ldr	r2, [pc, #52]	; 28fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15364>
   28f84:	ldr	r2, [r2, #12]
   28f88:	cmp	r2, #0
   28f8c:	bne	28fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15348>
   28f90:	ldr	r2, [pc, #40]	; 28fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15368>
   28f94:	ldr	r2, [r2]
   28f98:	cmp	r2, #0
   28f9c:	beq	28f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15320>
   28fa0:	mov	r1, r6
   28fa4:	mov	r0, r3
   28fa8:	pop	{r4, r5, r6, r7, r8, lr}
   28fac:	b	30118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4c0>
   28fb0:	andeq	r7, ip, r0, lsl #16
   28fb4:			; <UNDEFINED> instruction: 0x000506bc
   28fb8:	ldrdeq	r0, [r5], -r8
   28fbc:	andeq	r8, ip, r8, lsl r1
   28fc0:	andeq	r8, ip, ip, lsr r0
   28fc4:	ldrb	r0, [r0, #5]
   28fc8:	push	{r4, r5, r6, r7, r8, r9, lr}
   28fcc:	sub	sp, sp, #12
   28fd0:	ands	r4, r0, #8
   28fd4:	bne	290d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15478>
   28fd8:	mov	r5, r3
   28fdc:	ldrb	r3, [r1, #12]
   28fe0:	mov	r6, r2
   28fe4:	cmp	r3, #3
   28fe8:	beq	290d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15480>
   28fec:	cmp	r3, #6
   28ff0:	moveq	r8, r4
   28ff4:	ldreq	r7, [pc, #368]	; 2916c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15514>
   28ff8:	bne	2915c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15504>
   28ffc:	tst	r0, #16
   29000:	bne	29060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15408>
   29004:	ldr	r0, [r7, #60]	; 0x3c
   29008:	ldr	r2, [pc, #352]	; 29170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15518>
   2900c:	cmp	r0, #0
   29010:	sub	r3, r0, r2
   29014:	clz	r3, r3
   29018:	lsr	r3, r3, #5
   2901c:	moveq	r3, #0
   29020:	cmp	r7, r2
   29024:	moveq	r3, #0
   29028:	andne	r3, r3, #1
   2902c:	cmp	r3, #0
   29030:	bne	290d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15478>
   29034:	ldr	r0, [r5, #60]	; 0x3c
   29038:	cmp	r0, #0
   2903c:	sub	r3, r0, r2
   29040:	clz	r3, r3
   29044:	lsr	r3, r3, #5
   29048:	moveq	r3, #0
   2904c:	cmp	r5, r2
   29050:	moveq	r2, #0
   29054:	andne	r2, r3, #1
   29058:	cmp	r2, #0
   2905c:	bne	290d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15478>
   29060:	cmp	r6, #0
   29064:	ldr	r9, [r1, #4]
   29068:	beq	29134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x154dc>
   2906c:	mov	r2, #5
   29070:	ldr	r1, [pc, #252]	; 29174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1551c>
   29074:	mov	r0, #0
   29078:	bl	13460 <dcgettext@plt>
   2907c:	str	r9, [sp]
   29080:	mov	r2, r5
   29084:	mov	r1, r6
   29088:	ldr	r3, [sp, #40]	; 0x28
   2908c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29090:	cmp	r8, #0
   29094:	beq	290b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15460>
   29098:	mov	r2, #5
   2909c:	ldr	r1, [pc, #212]	; 29178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15520>
   290a0:	mov	r0, #0
   290a4:	bl	13460 <dcgettext@plt>
   290a8:	mov	r3, r4
   290ac:	mov	r2, r7
   290b0:	mov	r1, r8
   290b4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   290b8:	ldr	r4, [pc, #188]	; 2917c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15524>
   290bc:	ldr	r0, [pc, #188]	; 29180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15528>
   290c0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   290c4:	ldr	r0, [r4, #20]
   290c8:	cmp	r0, #0
   290cc:	beq	29114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x154bc>
   290d0:	add	sp, sp, #12
   290d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   290d8:	ldr	r3, [sp, #40]	; 0x28
   290dc:	ldr	r7, [r1, #20]
   290e0:	ldr	r2, [pc, #136]	; 29170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15518>
   290e4:	ldr	r4, [r1, #24]
   290e8:	ldr	r8, [r7, #148]	; 0x94
   290ec:	cmp	r4, r3
   290f0:	cmpeq	r7, r2
   290f4:	moveq	r3, #1
   290f8:	movne	r3, #0
   290fc:	cmp	r5, r2
   29100:	movne	r3, #0
   29104:	andeq	r3, r3, #1
   29108:	cmp	r3, #0
   2910c:	beq	28ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x153a4>
   29110:	b	290d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15478>
   29114:	mov	r2, #5
   29118:	ldr	r1, [pc, #100]	; 29184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1552c>
   2911c:	bl	13460 <dcgettext@plt>
   29120:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29124:	mov	r3, #2
   29128:	str	r3, [r4, #20]
   2912c:	add	sp, sp, #12
   29130:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29134:	mov	r0, r6
   29138:	mov	r2, #5
   2913c:	ldr	r1, [pc, #48]	; 29174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1551c>
   29140:	bl	13460 <dcgettext@plt>
   29144:	str	r9, [sp]
   29148:	mov	r3, r4
   2914c:	mov	r2, r7
   29150:	mov	r1, r8
   29154:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29158:	b	290b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15460>
   2915c:	ldr	r2, [pc, #36]	; 29188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15530>
   29160:	mov	r1, #956	; 0x3bc
   29164:	ldr	r0, [pc, #32]	; 2918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15534>
   29168:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   2916c:	andeq	r7, ip, r0, asr r9
   29170:	andeq	r7, ip, r8, lsr #17
   29174:	andeq	r0, r5, r8, lsl #14
   29178:	andeq	r0, r5, r0, lsr r7
   2917c:	andeq	r8, ip, ip, lsl #1
   29180:	andeq	r0, r5, r0, lsr #12
   29184:	andeq	r0, r5, ip, asr #14
   29188:	andeq	r0, r5, r0, lsr r6
   2918c:	strdeq	r0, [r5], -r4
   29190:	push	{r4, r5, r6, lr}
   29194:	mov	r6, r0
   29198:	sub	sp, sp, #16
   2919c:	mov	r0, r2
   291a0:	mov	r4, r2
   291a4:	mov	r5, r1
   291a8:	bl	13304 <bfd_generic_link_read_symbols@plt>
   291ac:	cmp	r0, #0
   291b0:	beq	291e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15590>
   291b4:	ldr	ip, [r4, #120]	; 0x78
   291b8:	mov	r0, r4
   291bc:	mov	r3, #0
   291c0:	mov	r2, sp
   291c4:	ldr	r1, [pc, #52]	; 29200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x155a8>
   291c8:	str	r6, [sp, #4]
   291cc:	str	r5, [sp, #8]
   291d0:	str	ip, [sp, #12]
   291d4:	str	r3, [sp]
   291d8:	bl	13b20 <bfd_map_over_sections@plt>
   291dc:	ldr	r0, [sp]
   291e0:	add	sp, sp, #16
   291e4:	pop	{r4, r5, r6, pc}
   291e8:	mov	r2, #5
   291ec:	ldr	r1, [pc, #16]	; 29204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x155ac>
   291f0:	bl	13460 <dcgettext@plt>
   291f4:	mov	r1, r4
   291f8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   291fc:	b	291b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1555c>
   29200:	andeq	r9, r2, r4, ror #15
   29204:	muleq	r5, r4, r7
   29208:	push	{r4, r5, r6, r7, r8, r9, lr}
   2920c:	mov	r5, r1
   29210:	sub	sp, sp, #60	; 0x3c
   29214:	mov	r1, #44	; 0x2c
   29218:	mov	r7, r0
   2921c:	mov	r0, #1
   29220:	mov	r6, r2
   29224:	mov	r8, r3
   29228:	bl	13bec <xcalloc@plt>
   2922c:	ldr	r3, [r5, #140]	; 0x8c
   29230:	ldr	r2, [r5]
   29234:	mov	r1, #2
   29238:	ldr	r3, [r3, #164]	; 0xa4
   2923c:	cmp	r3, #0
   29240:	mov	r4, r0
   29244:	str	r5, [r0, #16]
   29248:	stmib	r0, {r1, r2}
   2924c:	str	r2, [r0, #12]
   29250:	beq	29260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15608>
   29254:	ldrb	r2, [r3, #37]	; 0x25
   29258:	tst	r2, #16
   2925c:	streq	r0, [r3, #24]
   29260:	mov	lr, r4
   29264:	add	ip, sp, #12
   29268:	ldm	lr!, {r0, r1, r2, r3}
   2926c:	ldr	r9, [pc, #552]	; 2949c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15844>
   29270:	stmia	ip!, {r0, r1, r2, r3}
   29274:	ldm	lr!, {r0, r1, r2, r3}
   29278:	ldrb	r9, [r9, #1]
   2927c:	stmia	ip!, {r0, r1, r2, r3}
   29280:	tst	r9, #2
   29284:	ldm	lr, {r0, r1, r2}
   29288:	stm	ip, {r0, r1, r2}
   2928c:	beq	292c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1566c>
   29290:	mov	r0, r4
   29294:	bl	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e284>
   29298:	ldrb	r3, [r4, #37]	; 0x25
   2929c:	tst	r3, #32
   292a0:	beq	292c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1566c>
   292a4:	ldr	r2, [pc, #500]	; 294a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15848>
   292a8:	ldr	r2, [r2]
   292ac:	cmp	r2, #0
   292b0:	bne	29400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157a8>
   292b4:	ldr	r2, [r4, #16]
   292b8:	orr	r3, r3, #64	; 0x40
   292bc:	strb	r3, [r4, #37]	; 0x25
   292c0:	str	r2, [r8]
   292c4:	mov	r0, r4
   292c8:	bl	22fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf394>
   292cc:	ldr	r3, [pc, #464]	; 294a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1584c>
   292d0:	ldr	r3, [r3, #80]	; 0x50
   292d4:	cmp	r3, #0
   292d8:	beq	293b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15760>
   292dc:	mov	r2, #1
   292e0:	mov	r3, #0
   292e4:	ldr	r0, [r7, #28]
   292e8:	mov	r1, r6
   292ec:	str	r2, [sp]
   292f0:	mov	r2, r3
   292f4:	bl	13640 <bfd_link_hash_lookup@plt>
   292f8:	subs	r7, r0, #0
   292fc:	beq	29460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15808>
   29300:	ldrb	r3, [r7, #12]
   29304:	sub	r3, r3, #1
   29308:	cmp	r3, #4
   2930c:	ldrls	pc, [pc, r3, lsl #2]
   29310:	b	29460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15808>
   29314:	strdeq	r9, [r2], -r8
   29318:	strdeq	r9, [r2], -r8
   2931c:	andeq	r9, r2, ip, ror #7
   29320:	andeq	r9, r2, ip, ror #7
   29324:	andeq	r9, r2, r8, lsr #6
   29328:	ldr	r3, [r7, #20]
   2932c:	ldr	r3, [r3, #4]
   29330:	ldr	r8, [r3, #148]	; 0x94
   29334:	ldr	r4, [pc, #364]	; 294a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15850>
   29338:	ldr	r0, [r4, #8]
   2933c:	cmp	r0, #0
   29340:	beq	29444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157ec>
   29344:	ldr	r3, [r5, #140]	; 0x8c
   29348:	ldr	r1, [r5]
   2934c:	cmp	r3, #0
   29350:	beq	29360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15708>
   29354:	ldrb	r2, [r3, #44]	; 0x2c
   29358:	tst	r2, #1
   2935c:	beq	29468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15810>
   29360:	ldr	r0, [pc, #324]	; 294ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15854>
   29364:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   29368:	ldr	r0, [r5]
   2936c:	bl	137d8 <strlen@plt>
   29370:	mov	r4, r0
   29374:	cmp	r4, #28
   29378:	bgt	29438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157e0>
   2937c:	add	r4, r4, #1
   29380:	bl	2d9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d7c>
   29384:	cmp	r4, #30
   29388:	bne	2937c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15724>
   2938c:	cmp	r8, #0
   29390:	beq	293a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15748>
   29394:	mov	r1, r8
   29398:	ldr	r0, [pc, #272]	; 294b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15858>
   2939c:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   293a0:	cmp	r7, #0
   293a4:	moveq	r1, r6
   293a8:	ldrne	r1, [r7, #4]
   293ac:	ldrne	r0, [pc, #256]	; 294b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1585c>
   293b0:	ldreq	r0, [pc, #256]	; 294b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15860>
   293b4:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   293b8:	ldr	r2, [pc, #252]	; 294bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15864>
   293bc:	ldr	r3, [pc, #252]	; 294c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15868>
   293c0:	ldr	r2, [r2]
   293c4:	ldr	r3, [r3]
   293c8:	orrs	r3, r2, r3
   293cc:	moveq	r0, #1
   293d0:	beq	293e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1578c>
   293d4:	ldr	r0, [pc, #232]	; 294c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1586c>
   293d8:	add	r1, sp, #12
   293dc:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   293e0:	mov	r0, #1
   293e4:	add	sp, sp, #60	; 0x3c
   293e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   293ec:	ldr	r3, [r7, #20]
   293f0:	ldr	r8, [r3, #148]	; 0x94
   293f4:	b	29334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156dc>
   293f8:	ldr	r8, [r7, #20]
   293fc:	b	29334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156dc>
   29400:	ldr	r2, [pc, #180]	; 294bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15864>
   29404:	ldr	r3, [pc, #180]	; 294c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15868>
   29408:	ldr	r2, [r2]
   2940c:	ldr	r3, [r3]
   29410:	orrs	r3, r2, r3
   29414:	beq	29424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157cc>
   29418:	add	r1, sp, #12
   2941c:	ldr	r0, [pc, #164]	; 294c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15870>
   29420:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   29424:	ldrb	r3, [r4, #37]	; 0x25
   29428:	mov	r0, #0
   2942c:	bic	r3, r3, #32
   29430:	strb	r3, [r4, #37]	; 0x25
   29434:	b	293e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1578c>
   29438:	bl	2d9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d90>
   2943c:	mov	r4, #0
   29440:	b	2937c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15724>
   29444:	mov	r2, #5
   29448:	ldr	r1, [pc, #124]	; 294cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15874>
   2944c:	bl	13460 <dcgettext@plt>
   29450:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   29454:	mov	r3, #1
   29458:	str	r3, [r4, #8]
   2945c:	b	29344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156ec>
   29460:	mov	r8, #0
   29464:	b	29334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156dc>
   29468:	mov	r2, r1
   2946c:	ldr	r0, [pc, #92]	; 294d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15878>
   29470:	ldr	r1, [r3]
   29474:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   29478:	ldr	r3, [r5, #140]	; 0x8c
   2947c:	ldr	r0, [r3]
   29480:	bl	137d8 <strlen@plt>
   29484:	mov	r4, r0
   29488:	ldr	r0, [r5]
   2948c:	bl	137d8 <strlen@plt>
   29490:	add	r4, r4, r0
   29494:	add	r4, r4, #2
   29498:	b	29374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1571c>
   2949c:	andeq	r8, ip, ip, lsl #1
   294a0:	andeq	r7, ip, r4, lsl #28
   294a4:	andeq	r8, ip, r4, ror r1
   294a8:	andeq	r7, ip, r0, lsl #26
   294ac:	andeq	pc, r4, r0, lsl #26
   294b0:	andeq	pc, r4, r8, ror #28
   294b4:	andeq	pc, r4, r0, ror lr	; <UNPREDICTABLE>
   294b8:	andeq	r0, r5, r8, lsr #16
   294bc:	strdeq	r8, [ip], -r0
   294c0:	andeq	r8, ip, r4, ror #3
   294c4:	andeq	pc, r4, r8, lsr #22
   294c8:			; <UNDEFINED> instruction: 0x000507bc
   294cc:	andeq	r0, r5, r0, ror #15
   294d0:	andeq	r0, r5, r0, lsr #16
   294d4:	push	{r4, lr}
   294d8:	bl	139a0 <bfd_cache_close_all@plt>
   294dc:	bl	31fac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e354>
   294e0:	ldr	r3, [pc, #32]	; 29508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158b0>
   294e4:	ldr	r0, [r3]
   294e8:	cmp	r0, #0
   294ec:	popeq	{r4, pc}
   294f0:	ldr	r3, [pc, #20]	; 2950c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158b4>
   294f4:	ldr	r3, [r3]
   294f8:	cmp	r3, #0
   294fc:	popeq	{r4, pc}
   29500:	pop	{r4, lr}
   29504:	b	13880 <unlink_if_ordinary@plt>
   29508:	andeq	r7, ip, r0, asr #7
   2950c:	andeq	r7, ip, r8, lsr #25
   29510:	push	{r4, r5, r6, r7, r8, r9, lr}
   29514:	mov	r4, r1
   29518:	ldr	r5, [pc, #328]	; 29668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a10>
   2951c:	sub	sp, sp, #12
   29520:	mov	r9, r2
   29524:	ldr	r1, [r5, #4]
   29528:	mov	r8, r3
   2952c:	cmn	r1, #1
   29530:	add	r1, sp, #44	; 0x2c
   29534:	ldr	r6, [sp, #40]	; 0x28
   29538:	ldm	r1, {r1, r2, r3}
   2953c:	beq	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159e8>
   29540:	mov	r7, r0
   29544:	ldr	r0, [pc, #288]	; 2966c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a14>
   29548:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2954c:	ldr	r0, [r5, #4]
   29550:	cmp	r0, #0
   29554:	blt	29564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1590c>
   29558:	sub	r3, r0, #1
   2955c:	str	r3, [r5, #4]
   29560:	beq	29648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159f0>
   29564:	cmp	r4, #0
   29568:	bne	29590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15938>
   2956c:	mov	r0, r4
   29570:	mov	r2, #5
   29574:	ldr	r1, [pc, #244]	; 29670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a18>
   29578:	bl	13460 <dcgettext@plt>
   2957c:	mov	r2, r9
   29580:	mov	r1, r8
   29584:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29588:	b	295f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1599c>
   2958c:	ldr	r4, [r4, #20]
   29590:	ldrb	r3, [r4, #12]
   29594:	sub	r2, r3, #6
   29598:	cmp	r2, #1
   2959c:	bls	2958c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15934>
   295a0:	sub	r3, r3, #1
   295a4:	cmp	r3, #3
   295a8:	ldrls	pc, [pc, r3, lsl #2]
   295ac:	b	29658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a00>
   295b0:	andeq	r9, r2, ip, lsl #12
   295b4:	andeq	r9, r2, ip, lsl #12
   295b8:	andeq	r9, r2, r0, asr #11
   295bc:	andeq	r9, r2, r0, asr #11
   295c0:	mov	r2, #5
   295c4:	ldr	r1, [pc, #168]	; 29674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a1c>
   295c8:	mov	r0, #0
   295cc:	bl	13460 <dcgettext@plt>
   295d0:	ldr	r1, [pc, #160]	; 29678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a20>
   295d4:	ldr	r3, [r4, #20]
   295d8:	ldr	r2, [r4, #4]
   295dc:	cmp	r3, r1
   295e0:	ldreq	r1, [r7, #48]	; 0x30
   295e4:	ldrne	r1, [r3, #148]	; 0x94
   295e8:	str	r1, [sp]
   295ec:	mov	r1, r8
   295f0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   295f4:	cmp	r6, #0
   295f8:	bne	29630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159d8>
   295fc:	ldr	r0, [pc, #120]	; 2967c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a24>
   29600:	add	sp, sp, #12
   29604:	pop	{r4, r5, r6, r7, r8, r9, lr}
   29608:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2960c:	mov	r2, #5
   29610:	ldr	r1, [pc, #104]	; 29680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a28>
   29614:	mov	r0, #0
   29618:	bl	13460 <dcgettext@plt>
   2961c:	ldr	r2, [r4, #4]
   29620:	mov	r1, r8
   29624:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29628:	cmp	r6, #0
   2962c:	beq	295fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159a4>
   29630:	mov	r1, r6
   29634:	ldr	r0, [pc, #72]	; 29684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a2c>
   29638:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2963c:	b	295fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159a4>
   29640:	add	sp, sp, #12
   29644:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29648:	mov	r2, #5
   2964c:	ldr	r1, [pc, #52]	; 29688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a30>
   29650:	bl	13460 <dcgettext@plt>
   29654:	b	29600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159a8>
   29658:	ldr	r2, [pc, #44]	; 2968c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a34>
   2965c:	ldr	r1, [pc, #44]	; 29690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a38>
   29660:	ldr	r0, [pc, #44]	; 29694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a3c>
   29664:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   29668:	andeq	r7, ip, r0, asr #7
   2966c:	andeq	r0, r5, r0, lsr r8
   29670:	andeq	r0, r5, ip, lsl #18
   29674:			; <UNDEFINED> instruction: 0x000508b8
   29678:	andeq	r7, ip, r8, lsr #17
   2967c:	andeq	r0, r5, r0, lsr #12
   29680:	andeq	r0, r5, r8, ror r8
   29684:	andeq	r0, r5, ip, lsr r9
   29688:	andeq	r0, r5, ip, lsr r8
   2968c:	andeq	r0, r5, r4, asr #12
   29690:	andeq	r0, r0, r5, lsr #11
   29694:	strdeq	r0, [r5], -r4
   29698:	ldr	ip, [pc, #300]	; 297cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b74>
   2969c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   296a0:	mov	r5, r1
   296a4:	ldr	r1, [ip, #32]
   296a8:	mov	r9, r0
   296ac:	cmp	r1, #0
   296b0:	mov	r7, r2
   296b4:	mov	r6, r3
   296b8:	ldr	r4, [sp, #32]
   296bc:	ldr	r8, [sp, #36]	; 0x24
   296c0:	bne	296d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a80>
   296c4:	ldr	r1, [pc, #260]	; 297d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b78>
   296c8:	mov	r0, r5
   296cc:	bl	13268 <strcmp@plt>
   296d0:	cmp	r0, #0
   296d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   296d8:	cmp	r4, #0
   296dc:	beq	29710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ab8>
   296e0:	mov	r2, #5
   296e4:	ldr	r1, [pc, #232]	; 297d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b7c>
   296e8:	mov	r0, #0
   296ec:	bl	13460 <dcgettext@plt>
   296f0:	str	r5, [sp, #36]	; 0x24
   296f4:	mov	r3, r8
   296f8:	mov	r2, r4
   296fc:	mov	r1, r6
   29700:	str	r0, [sp, #32]
   29704:	ldr	r0, [pc, #204]	; 297d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b80>
   29708:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2970c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29710:	cmp	r6, #0
   29714:	beq	297a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b50>
   29718:	cmp	r7, #0
   2971c:	beq	29798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b40>
   29720:	mov	r2, r6
   29724:	mov	r1, r7
   29728:	mov	r0, r5
   2972c:	bl	29190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15538>
   29730:	cmp	r0, #0
   29734:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   29738:	ldr	r4, [r9, #56]	; 0x38
   2973c:	cmp	r4, #0
   29740:	beq	29770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b18>
   29744:	cmp	r6, r4
   29748:	mov	r2, r4
   2974c:	mov	r1, r7
   29750:	mov	r0, r5
   29754:	beq	29764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b0c>
   29758:	bl	29190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15538>
   2975c:	cmp	r0, #0
   29760:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   29764:	ldr	r4, [r4, #156]	; 0x9c
   29768:	cmp	r4, #0
   2976c:	bne	29744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15aec>
   29770:	ldr	r1, [pc, #92]	; 297d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b7c>
   29774:	mov	r2, #5
   29778:	mov	r0, #0
   2977c:	bl	13460 <dcgettext@plt>
   29780:	mov	r3, r5
   29784:	mov	r1, r6
   29788:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2978c:	mov	r2, r0
   29790:	ldr	r0, [pc, #68]	; 297dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b84>
   29794:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29798:	mov	r0, r7
   2979c:	mov	r2, #5
   297a0:	ldr	r1, [pc, #44]	; 297d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b7c>
   297a4:	b	2977c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b24>
   297a8:	mov	r0, r6
   297ac:	mov	r2, #5
   297b0:	ldr	r1, [pc, #28]	; 297d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b7c>
   297b4:	bl	13460 <dcgettext@plt>
   297b8:	mov	r2, r5
   297bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   297c0:	mov	r1, r0
   297c4:	ldr	r0, [pc, #20]	; 297e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b88>
   297c8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   297cc:	andeq	r8, ip, r4, ror r1
   297d0:	andeq	r0, r5, r0, asr #18
   297d4:	andeq	r2, r5, ip, ror #2
   297d8:	andeq	r0, r5, ip, asr r9
   297dc:	andeq	r0, r5, r8, ror r9
   297e0:	andeq	r0, r5, ip, ror #18
   297e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   297e8:	sub	sp, sp, #8
   297ec:	ldr	r4, [r2]
   297f0:	cmp	r4, #0
   297f4:	beq	29800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ba8>
   297f8:	add	sp, sp, #8
   297fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29800:	mov	r7, r0
   29804:	mov	r8, r1
   29808:	mov	r6, r2
   2980c:	bl	13b14 <bfd_get_reloc_upper_bound@plt>
   29810:	subs	r5, r0, #0
   29814:	blt	298d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c78>
   29818:	beq	297f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ba0>
   2981c:	mov	r0, r5
   29820:	bl	13574 <xmalloc@plt>
   29824:	ldr	r3, [r6, #12]
   29828:	mov	r1, r8
   2982c:	mov	r2, r0
   29830:	mov	r9, r0
   29834:	mov	r0, r7
   29838:	bl	13a84 <bfd_canonicalize_reloc@plt>
   2983c:	subs	sl, r0, #0
   29840:	blt	298b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c5c>
   29844:	add	sl, r9, sl, lsl #2
   29848:	cmp	r9, sl
   2984c:	bcs	298a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c4c>
   29850:	ldr	r4, [r9]
   29854:	cmp	r4, #0
   29858:	beq	298a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c4c>
   2985c:	add	r5, r9, #4
   29860:	b	29870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c18>
   29864:	ldr	r4, [r5], #4
   29868:	cmp	r4, #0
   2986c:	beq	298a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c4c>
   29870:	ldr	r3, [r4]
   29874:	cmp	r3, #0
   29878:	beq	2989c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c44>
   2987c:	ldr	r3, [r3]
   29880:	cmp	r3, #0
   29884:	beq	2989c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c44>
   29888:	ldr	r0, [r3, #4]
   2988c:	ldr	r1, [r6, #8]
   29890:	bl	13268 <strcmp@plt>
   29894:	cmp	r0, #0
   29898:	beq	298ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c94>
   2989c:	cmp	sl, r5
   298a0:	bhi	29864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c0c>
   298a4:	mov	r0, r9
   298a8:	add	sp, sp, #8
   298ac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   298b0:	b	13364 <free@plt>
   298b4:	mov	r2, #5
   298b8:	ldr	r1, [pc, #100]	; 29924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ccc>
   298bc:	mov	r0, #0
   298c0:	bl	13460 <dcgettext@plt>
   298c4:	mov	r1, r7
   298c8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   298cc:	b	29844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bec>
   298d0:	mov	r0, r4
   298d4:	mov	r2, #5
   298d8:	ldr	r1, [pc, #68]	; 29924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ccc>
   298dc:	bl	13460 <dcgettext@plt>
   298e0:	mov	r1, r7
   298e4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   298e8:	b	2981c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bc4>
   298ec:	mov	r2, #5
   298f0:	ldr	r1, [pc, #48]	; 29928 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15cd0>
   298f4:	ldr	r4, [r4, #4]
   298f8:	bl	13460 <dcgettext@plt>
   298fc:	ldr	ip, [r6, #4]
   29900:	mov	r3, r4
   29904:	mov	r2, r8
   29908:	mov	r1, r7
   2990c:	stm	sp, {r0, ip}
   29910:	ldr	r0, [pc, #20]	; 2992c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15cd4>
   29914:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29918:	mov	r3, #1
   2991c:	str	r3, [r6]
   29920:	b	298a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c4c>
   29924:	andeq	r0, r5, r8, lsl #19
   29928:	andeq	r2, r5, ip, ror #2
   2992c:	andeq	r0, r5, ip, asr r9
   29930:	push	{r4, r5, r6, r7, r8, lr}
   29934:	mov	r8, r1
   29938:	ldr	r4, [pc, #328]	; 29a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e30>
   2993c:	sub	sp, sp, #24
   29940:	mov	r5, r0
   29944:	ldr	r1, [r4, #16]
   29948:	mov	r7, r2
   2994c:	cmp	r1, #0
   29950:	mov	r6, r3
   29954:	bne	29a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc4>
   29958:	ldr	r3, [r4, #12]
   2995c:	cmp	r3, #0
   29960:	bne	2996c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d14>
   29964:	add	sp, sp, #24
   29968:	pop	{r4, r5, r6, r7, r8, pc}
   2996c:	ldr	r1, [pc, #280]	; 29a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e34>
   29970:	ldr	r0, [r5, #48]	; 0x30
   29974:	bl	134a8 <bfd_reloc_type_lookup@plt>
   29978:	cmp	r0, #0
   2997c:	beq	29a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15de0>
   29980:	ldr	r3, [r6, #4]
   29984:	ldrb	r3, [r3, #24]
   29988:	cmp	r3, #0
   2998c:	addeq	lr, sp, #8
   29990:	moveq	r3, lr
   29994:	strbne	r3, [sp, #8]
   29998:	addne	lr, sp, #8
   2999c:	addne	r3, sp, #9
   299a0:	cmp	r8, #0
   299a4:	ldrne	ip, [pc, #228]	; 29a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e38>
   299a8:	ldreq	ip, [pc, #228]	; 29a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e3c>
   299ac:	ldm	ip!, {r0, r1, r2}
   299b0:	ldrh	ip, [ip]
   299b4:	str	r0, [r3]
   299b8:	str	r1, [r3, #4]
   299bc:	str	r2, [r3, #8]
   299c0:	strh	ip, [r3, #12]
   299c4:	mov	r3, #1
   299c8:	ldr	r0, [r5, #28]
   299cc:	mov	r1, lr
   299d0:	str	r3, [sp]
   299d4:	mov	r2, r3
   299d8:	bl	13640 <bfd_link_hash_lookup@plt>
   299dc:	subs	r4, r0, #0
   299e0:	beq	29a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e1c>
   299e4:	ldrb	r3, [r4, #12]
   299e8:	mov	r2, r7
   299ec:	mov	r0, r4
   299f0:	cmp	r3, #0
   299f4:	moveq	r3, #1
   299f8:	strbeq	r3, [r4, #12]
   299fc:	ldr	r3, [sp, #52]	; 0x34
   29a00:	streq	r6, [r4, #20]
   29a04:	ldr	r1, [pc, #128]	; 29a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e34>
   29a08:	str	r3, [sp]
   29a0c:	ldr	r3, [sp, #48]	; 0x30
   29a10:	bl	2879c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b44>
   29a14:	add	sp, sp, #24
   29a18:	pop	{r4, r5, r6, r7, r8, pc}
   29a1c:	mov	r2, #5
   29a20:	ldr	r1, [pc, #112]	; 29a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e40>
   29a24:	mov	r0, #0
   29a28:	bl	13460 <dcgettext@plt>
   29a2c:	mov	r1, r7
   29a30:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29a34:	b	29958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d00>
   29a38:	ldrb	r3, [r5]
   29a3c:	and	r3, r3, #3
   29a40:	cmp	r3, #2
   29a44:	beq	29a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e04>
   29a48:	ldr	r1, [pc, #60]	; 29a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e34>
   29a4c:	mov	r0, r6
   29a50:	bl	134a8 <bfd_reloc_type_lookup@plt>
   29a54:	cmp	r0, #0
   29a58:	bne	29980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d28>
   29a5c:	mov	r2, #5
   29a60:	ldr	r1, [pc, #52]	; 29a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e44>
   29a64:	mov	r0, #0
   29a68:	bl	13460 <dcgettext@plt>
   29a6c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29a70:	b	29980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d28>
   29a74:	mov	r2, #5
   29a78:	ldr	r1, [pc, #32]	; 29aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e48>
   29a7c:	bl	13460 <dcgettext@plt>
   29a80:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29a84:	b	299e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d8c>
   29a88:	andeq	r8, ip, r4, ror r1
   29a8c:	andeq	r0, r0, fp, lsr #4
   29a90:	andeq	r0, r5, r4, lsl sl
   29a94:	andeq	r0, r5, r4, lsr #20
   29a98:			; <UNDEFINED> instruction: 0x000509b0
   29a9c:	ldrdeq	r0, [r5], -ip
   29aa0:	andeq	pc, r4, ip, asr #1
   29aa4:	push	{r4, r5, r6, r7, lr}
   29aa8:	mov	r6, r2
   29aac:	ldr	r4, [pc, #116]	; 29b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ed0>
   29ab0:	sub	sp, sp, #12
   29ab4:	mov	r5, r1
   29ab8:	ldr	r2, [r4, #16]
   29abc:	mov	r7, r3
   29ac0:	cmp	r2, #0
   29ac4:	bne	29b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15eb4>
   29ac8:	ldr	r3, [r4, #12]
   29acc:	cmp	r3, #0
   29ad0:	beq	29b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15eac>
   29ad4:	ldr	r3, [sp, #36]	; 0x24
   29ad8:	mov	r1, r6
   29adc:	str	r3, [sp]
   29ae0:	mov	r2, #0
   29ae4:	ldr	r3, [sp, #32]
   29ae8:	mov	r0, r5
   29aec:	bl	2879c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b44>
   29af0:	ldrb	r3, [r5, #12]
   29af4:	cmp	r3, #0
   29af8:	moveq	r3, #1
   29afc:	streq	r7, [r5, #20]
   29b00:	strbeq	r3, [r5, #12]
   29b04:	add	sp, sp, #12
   29b08:	pop	{r4, r5, r6, r7, pc}
   29b0c:	mov	r2, #5
   29b10:	ldr	r1, [pc, #20]	; 29b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ed4>
   29b14:	mov	r0, #0
   29b18:	bl	13460 <dcgettext@plt>
   29b1c:	ldr	r1, [r5, #4]
   29b20:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29b24:	b	29ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e70>
   29b28:	andeq	r8, ip, r4, ror r1
   29b2c:			; <UNDEFINED> instruction: 0x000509b0
   29b30:	ldr	r0, [pc, #472]	; 29d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160b8>
   29b34:	push	{r4, r5, r6, r7, r8, lr}
   29b38:	ldr	r0, [r0, #20]
   29b3c:	ldr	r6, [sp, #24]
   29b40:	cmp	r0, #0
   29b44:	popeq	{r4, r5, r6, r7, r8, pc}
   29b48:	ldrb	r0, [r1, #12]
   29b4c:	sub	r4, r3, #3
   29b50:	cmp	r3, #6
   29b54:	cmpne	r4, #1
   29b58:	movls	r4, #1
   29b5c:	movhi	r4, #0
   29b60:	cmp	r0, #5
   29b64:	mov	r5, r2
   29b68:	ldr	r7, [r1, #4]
   29b6c:	beq	29bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f64>
   29b70:	sub	r2, r0, #3
   29b74:	cmp	r2, #1
   29b78:	bls	29c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ff8>
   29b7c:	cmp	r4, #0
   29b80:	bne	29bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fa4>
   29b84:	cmp	r0, #6
   29b88:	movne	r8, r4
   29b8c:	movne	r4, r8
   29b90:	bne	29c94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1603c>
   29b94:	cmp	r3, #5
   29b98:	beq	29cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16078>
   29b9c:	ldr	r1, [pc, #368]	; 29d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160bc>
   29ba0:	ldr	r0, [pc, #368]	; 29d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c0>
   29ba4:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   29ba8:	cmp	r4, #0
   29bac:	beq	29cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16078>
   29bb0:	mov	r2, #5
   29bb4:	ldr	r1, [pc, #352]	; 29d1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c4>
   29bb8:	b	29be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f88>
   29bbc:	ldr	r2, [r1, #20]
   29bc0:	cmp	r4, #0
   29bc4:	ldr	r2, [r2, #4]
   29bc8:	ldr	r4, [r2, #148]	; 0x94
   29bcc:	beq	29c28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fd0>
   29bd0:	cmp	r4, #0
   29bd4:	beq	29c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fb0>
   29bd8:	ldr	r1, [pc, #320]	; 29d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c8>
   29bdc:	mov	r2, #5
   29be0:	mov	r0, #0
   29be4:	bl	13460 <dcgettext@plt>
   29be8:	mov	r3, r4
   29bec:	mov	r2, r7
   29bf0:	mov	r1, r5
   29bf4:	pop	{r4, r5, r6, r7, r8, lr}
   29bf8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29bfc:	ldr	r1, [pc, #288]	; 29d24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160cc>
   29c00:	ldr	r0, [pc, #272]	; 29d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c0>
   29c04:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   29c08:	ldr	r1, [pc, #280]	; 29d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160d0>
   29c0c:	mov	r2, #5
   29c10:	mov	r0, #0
   29c14:	bl	13460 <dcgettext@plt>
   29c18:	mov	r2, r7
   29c1c:	mov	r1, r5
   29c20:	pop	{r4, r5, r6, r7, r8, lr}
   29c24:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29c28:	cmp	r3, #5
   29c2c:	ldr	r8, [r1, #24]
   29c30:	bne	29c94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1603c>
   29c34:	cmp	r8, r6
   29c38:	bls	29c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16014>
   29c3c:	cmp	r4, #0
   29c40:	beq	29ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16088>
   29c44:	mov	r2, #5
   29c48:	ldr	r1, [pc, #220]	; 29d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160d4>
   29c4c:	b	29be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f88>
   29c50:	ldr	r2, [r1, #20]
   29c54:	cmp	r4, #0
   29c58:	ldr	r4, [r2, #148]	; 0x94
   29c5c:	bne	29c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1602c>
   29c60:	cmp	r3, #5
   29c64:	beq	29ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f50>
   29c68:	b	29b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f44>
   29c6c:	bcs	29ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1604c>
   29c70:	cmp	r4, #0
   29c74:	beq	29d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160a8>
   29c78:	mov	r2, #5
   29c7c:	ldr	r1, [pc, #172]	; 29d30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160d8>
   29c80:	b	29be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f88>
   29c84:	ldr	r1, [pc, #152]	; 29d24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160cc>
   29c88:	ldr	r0, [pc, #136]	; 29d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c0>
   29c8c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   29c90:	b	29bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f78>
   29c94:	mov	r1, #1072	; 0x430
   29c98:	ldr	r0, [pc, #120]	; 29d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160c0>
   29c9c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   29ca0:	b	29c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fdc>
   29ca4:	cmp	r4, #0
   29ca8:	beq	29cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16098>
   29cac:	mov	r2, #5
   29cb0:	ldr	r1, [pc, #124]	; 29d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160dc>
   29cb4:	mov	r0, #0
   29cb8:	bl	13460 <dcgettext@plt>
   29cbc:	mov	r3, r7
   29cc0:	mov	r2, r4
   29cc4:	mov	r1, r5
   29cc8:	pop	{r4, r5, r6, r7, r8, lr}
   29ccc:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29cd0:	mov	r2, #5
   29cd4:	ldr	r1, [pc, #92]	; 29d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160e0>
   29cd8:	mov	r0, #0
   29cdc:	b	29c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29ce0:	mov	r0, r4
   29ce4:	mov	r2, #5
   29ce8:	ldr	r1, [pc, #76]	; 29d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160e4>
   29cec:	b	29c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29cf0:	mov	r0, r4
   29cf4:	mov	r2, #5
   29cf8:	ldr	r1, [pc, #64]	; 29d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160e8>
   29cfc:	b	29c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29d00:	mov	r0, r4
   29d04:	mov	r2, #5
   29d08:	ldr	r1, [pc, #52]	; 29d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160ec>
   29d0c:	b	29c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29d10:	andeq	r8, ip, r4, ror r1
   29d14:	andeq	r0, r0, r5, lsr #8
   29d18:	strdeq	r0, [r5], -r4
   29d1c:			; <UNDEFINED> instruction: 0x00050ab4
   29d20:	andeq	r0, r5, r4, lsr sl
   29d24:	andeq	r0, r0, r8, lsl r4
   29d28:	andeq	r0, r5, r8, ror sl
   29d2c:	andeq	r0, r5, r8, lsr fp
   29d30:	andeq	r0, r5, r0, asr #23
   29d34:	andeq	r0, r5, r8, asr #24
   29d38:	strdeq	r0, [r5], -ip
   29d3c:	andeq	r0, r5, r0, lsl #23
   29d40:	andeq	r0, r5, ip, ror ip
   29d44:	andeq	r0, r5, r8, lsl #24
   29d48:	push	{r4, r5, r6, lr}
   29d4c:	mov	r5, r0
   29d50:	ldr	r4, [pc, #116]	; 29dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16174>
   29d54:	ldr	r0, [r4, #36]	; 0x24
   29d58:	cmp	r0, #0
   29d5c:	beq	29d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16134>
   29d60:	mov	r3, #1
   29d64:	mov	r1, r5
   29d68:	mov	r2, r3
   29d6c:	bl	137a8 <bfd_hash_lookup@plt>
   29d70:	cmp	r0, #0
   29d74:	popne	{r4, r5, r6, pc}
   29d78:	mov	r2, #5
   29d7c:	ldr	r1, [pc, #76]	; 29dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16178>
   29d80:	bl	13460 <dcgettext@plt>
   29d84:	pop	{r4, r5, r6, lr}
   29d88:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29d8c:	mov	r0, #28
   29d90:	bl	13574 <xmalloc@plt>
   29d94:	mov	r3, #61	; 0x3d
   29d98:	mov	r2, #12
   29d9c:	ldr	r1, [pc, #48]	; 29dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1617c>
   29da0:	str	r0, [r4, #36]	; 0x24
   29da4:	bl	13670 <bfd_hash_table_init_n@plt>
   29da8:	cmp	r0, #0
   29dac:	beq	29db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16160>
   29db0:	ldr	r0, [r4, #36]	; 0x24
   29db4:	b	29d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16108>
   29db8:	mov	r2, #5
   29dbc:	ldr	r1, [pc, #20]	; 29dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16180>
   29dc0:	bl	13460 <dcgettext@plt>
   29dc4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29dc8:	b	29db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16158>
   29dcc:	andeq	r8, ip, ip, lsl #1
   29dd0:	andeq	r1, r5, r0, rrx
   29dd4:	andeq	r3, r1, r0, lsl #8
   29dd8:	andeq	r1, r5, r8, lsr r0
   29ddc:	push	{r4, r5, r6, lr}
   29de0:	mov	r4, r0
   29de4:	ldr	r0, [r0, #44]	; 0x2c
   29de8:	mov	r5, r1
   29dec:	cmp	r0, #0
   29df0:	beq	29e20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161c8>
   29df4:	mov	r3, #1
   29df8:	mov	r1, r5
   29dfc:	mov	r2, r3
   29e00:	bl	137a8 <bfd_hash_lookup@plt>
   29e04:	cmp	r0, #0
   29e08:	popne	{r4, r5, r6, pc}
   29e0c:	mov	r2, #5
   29e10:	ldr	r1, [pc, #72]	; 29e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16208>
   29e14:	bl	13460 <dcgettext@plt>
   29e18:	pop	{r4, r5, r6, lr}
   29e1c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29e20:	mov	r0, #28
   29e24:	bl	13574 <xmalloc@plt>
   29e28:	mov	r3, #61	; 0x3d
   29e2c:	mov	r2, #12
   29e30:	ldr	r1, [pc, #44]	; 29e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1620c>
   29e34:	str	r0, [r4, #44]	; 0x2c
   29e38:	bl	13670 <bfd_hash_table_init_n@plt>
   29e3c:	cmp	r0, #0
   29e40:	beq	29e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161f4>
   29e44:	ldr	r0, [r4, #44]	; 0x2c
   29e48:	b	29df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1619c>
   29e4c:	mov	r2, #5
   29e50:	ldr	r1, [pc, #16]	; 29e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16210>
   29e54:	bl	13460 <dcgettext@plt>
   29e58:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29e5c:	b	29e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161ec>
   29e60:	andeq	r1, r5, r0, rrx
   29e64:	andeq	r3, r1, r0, lsl #8
   29e68:	andeq	r1, r5, r8, lsr r0
   29e6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29e70:	mov	r4, r0
   29e74:	ldr	r0, [r0, #44]	; 0x2c
   29e78:	mov	r8, r2
   29e7c:	cmp	r0, #0
   29e80:	mov	r6, r3
   29e84:	mov	r5, r1
   29e88:	ldr	r9, [sp, #32]
   29e8c:	ldr	r7, [sp, #36]	; 0x24
   29e90:	beq	29ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16250>
   29e94:	mov	r3, #0
   29e98:	mov	r2, r3
   29e9c:	bl	137a8 <bfd_hash_lookup@plt>
   29ea0:	cmp	r0, #0
   29ea4:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   29ea8:	ldr	r3, [pc, #344]	; 2a008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163b0>
   29eac:	ldr	r3, [r3, #24]
   29eb0:	cmp	r3, #0
   29eb4:	bne	29f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162d8>
   29eb8:	ldr	r4, [pc, #332]	; 2a00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163b4>
   29ebc:	ldr	sl, [r4, #20]
   29ec0:	cmp	sl, #0
   29ec4:	beq	29f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162f4>
   29ec8:	mov	r1, sl
   29ecc:	mov	r0, r5
   29ed0:	bl	13268 <strcmp@plt>
   29ed4:	cmp	r0, #0
   29ed8:	bne	29fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16364>
   29edc:	ldr	r2, [r4, #24]
   29ee0:	cmp	r6, #0
   29ee4:	add	r2, r2, #1
   29ee8:	str	r2, [r4, #24]
   29eec:	beq	29f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16310>
   29ef0:	cmp	r2, #4
   29ef4:	bhi	29fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16348>
   29ef8:	cmp	r7, #0
   29efc:	movne	r2, #5
   29f00:	ldrne	r1, [pc, #264]	; 2a010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163b8>
   29f04:	ldreq	r1, [pc, #264]	; 2a014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163bc>
   29f08:	movne	r0, #0
   29f0c:	moveq	r0, r7
   29f10:	moveq	r2, #5
   29f14:	bl	13460 <dcgettext@plt>
   29f18:	str	r5, [sp, #32]
   29f1c:	mov	r3, r9
   29f20:	mov	r2, r6
   29f24:	mov	r1, r8
   29f28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   29f2c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29f30:	mov	r0, r4
   29f34:	ldr	r4, [pc, #208]	; 2a00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163b4>
   29f38:	mov	r1, r5
   29f3c:	bl	29ddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16184>
   29f40:	ldr	sl, [r4, #20]
   29f44:	cmp	sl, #0
   29f48:	bne	29ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16270>
   29f4c:	str	sl, [r4, #24]
   29f50:	mov	r0, r5
   29f54:	bl	135a4 <xstrdup@plt>
   29f58:	cmp	r6, #0
   29f5c:	ldr	r2, [r4, #24]
   29f60:	str	r0, [r4, #20]
   29f64:	bne	29ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16298>
   29f68:	cmp	r2, #4
   29f6c:	bhi	29fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16378>
   29f70:	cmp	r7, #0
   29f74:	movne	r0, r6
   29f78:	ldrne	r1, [pc, #152]	; 2a018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163c0>
   29f7c:	ldreq	r1, [pc, #152]	; 2a01c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163c4>
   29f80:	movne	r2, #5
   29f84:	moveq	r0, r7
   29f88:	moveq	r2, #5
   29f8c:	bl	13460 <dcgettext@plt>
   29f90:	mov	r2, r5
   29f94:	mov	r1, r8
   29f98:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   29f9c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29fa0:	cmp	r2, #5
   29fa4:	beq	29ff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16398>
   29fa8:	cmp	r7, #0
   29fac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   29fb0:	ldr	r0, [pc, #104]	; 2a020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163c8>
   29fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   29fb8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   29fbc:	mov	r3, #0
   29fc0:	mov	r0, sl
   29fc4:	str	r3, [r4, #24]
   29fc8:	bl	13364 <free@plt>
   29fcc:	b	29f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162f8>
   29fd0:	cmp	r2, #5
   29fd4:	bne	29fa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16350>
   29fd8:	cmp	r7, #0
   29fdc:	movne	r0, r6
   29fe0:	ldrne	r1, [pc, #60]	; 2a024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163cc>
   29fe4:	moveq	r0, r7
   29fe8:	ldreq	r1, [pc, #56]	; 2a028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163d0>
   29fec:	b	29f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16334>
   29ff0:	cmp	r7, #0
   29ff4:	movne	r0, #0
   29ff8:	ldrne	r1, [pc, #44]	; 2a02c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163d4>
   29ffc:	moveq	r0, r7
   2a000:	ldreq	r1, [pc, #40]	; 2a030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163d8>
   2a004:	b	29f14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162bc>
   2a008:	andeq	r8, ip, r4, ror r1
   2a00c:	andeq	r7, ip, r0, lsl #26
   2a010:	andeq	r1, r5, r4, lsl #1
   2a014:	andeq	r1, r5, ip, lsr #1
   2a018:	andeq	r1, r5, r4, asr r1
   2a01c:	andeq	r1, r5, r0, lsl #3
   2a020:	andeq	r1, r5, r0, asr r1
   2a024:			; <UNDEFINED> instruction: 0x000511b0
   2a028:	andeq	r1, r5, r8, ror #3
   2a02c:	ldrdeq	r1, [r5], -ip
   2a030:	andeq	r1, r5, r4, lsl r1
   2a034:	push	{r4, r5, r6, lr}
   2a038:	mov	r5, r0
   2a03c:	ldr	r4, [pc, #116]	; 2a0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16460>
   2a040:	ldr	r0, [r4, #40]	; 0x28
   2a044:	cmp	r0, #0
   2a048:	beq	2a078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16420>
   2a04c:	mov	r3, #1
   2a050:	mov	r1, r5
   2a054:	mov	r2, r3
   2a058:	bl	137a8 <bfd_hash_lookup@plt>
   2a05c:	cmp	r0, #0
   2a060:	popne	{r4, r5, r6, pc}
   2a064:	mov	r2, #5
   2a068:	ldr	r1, [pc, #76]	; 2a0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16464>
   2a06c:	bl	13460 <dcgettext@plt>
   2a070:	pop	{r4, r5, r6, lr}
   2a074:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a078:	mov	r0, #28
   2a07c:	bl	13574 <xmalloc@plt>
   2a080:	mov	r3, #61	; 0x3d
   2a084:	mov	r2, #12
   2a088:	ldr	r1, [pc, #48]	; 2a0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16468>
   2a08c:	str	r0, [r4, #40]	; 0x28
   2a090:	bl	13670 <bfd_hash_table_init_n@plt>
   2a094:	cmp	r0, #0
   2a098:	beq	2a0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1644c>
   2a09c:	ldr	r0, [r4, #40]	; 0x28
   2a0a0:	b	2a04c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163f4>
   2a0a4:	mov	r2, #5
   2a0a8:	ldr	r1, [pc, #20]	; 2a0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1646c>
   2a0ac:	bl	13460 <dcgettext@plt>
   2a0b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a0b4:	b	2a09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16444>
   2a0b8:	andeq	r8, ip, ip, lsl #1
   2a0bc:	andeq	r1, r5, r0, rrx
   2a0c0:	andeq	r3, r1, r0, lsl #8
   2a0c4:	andeq	r1, r5, r8, lsr r0
   2a0c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a0cc:	mov	r4, r0
   2a0d0:	ldr	sl, [pc, #520]	; 2a2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16688>
   2a0d4:	ldrb	r3, [sl, #1]
   2a0d8:	and	r3, r3, #96	; 0x60
   2a0dc:	cmp	r3, #64	; 0x40
   2a0e0:	beq	2a2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16658>
   2a0e4:	ldr	r1, [pc, #504]	; 2a2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1668c>
   2a0e8:	mov	r0, r4
   2a0ec:	bl	13a60 <fopen64@plt>
   2a0f0:	subs	r5, r0, #0
   2a0f4:	beq	2a2c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16670>
   2a0f8:	mov	r0, #28
   2a0fc:	bl	13574 <xmalloc@plt>
   2a100:	mov	r2, #12
   2a104:	ldr	r1, [pc, #476]	; 2a2e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16690>
   2a108:	str	r0, [sl, #32]
   2a10c:	bl	13afc <bfd_hash_table_init@plt>
   2a110:	cmp	r0, #0
   2a114:	beq	2a29c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16644>
   2a118:	mov	r0, #100	; 0x64
   2a11c:	bl	13574 <xmalloc@plt>
   2a120:	mov	r7, r0
   2a124:	mov	r0, r5
   2a128:	bl	13bc8 <getc@plt>
   2a12c:	cmn	r0, #1
   2a130:	mov	r4, r0
   2a134:	beq	2a17c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16524>
   2a138:	uxtb	r3, r0
   2a13c:	ldr	r6, [pc, #424]	; 2a2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16694>
   2a140:	lsl	r3, r3, #1
   2a144:	mov	r9, #100	; 0x64
   2a148:	ldrh	r3, [r6, r3]
   2a14c:	tst	r3, #64	; 0x40
   2a150:	beq	2a1ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16554>
   2a154:	mov	r0, r5
   2a158:	bl	13bc8 <getc@plt>
   2a15c:	uxtb	r3, r0
   2a160:	lsl	r3, r3, #1
   2a164:	ldrh	r3, [r6, r3]
   2a168:	tst	r3, #64	; 0x40
   2a16c:	bne	2a154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164fc>
   2a170:	cmn	r0, #1
   2a174:	mov	r4, r0
   2a178:	bne	2a1ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16554>
   2a17c:	ldrb	r3, [sl, #1]
   2a180:	tst	r3, #96	; 0x60
   2a184:	bne	2a284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1662c>
   2a188:	mov	r0, r7
   2a18c:	bl	13364 <free@plt>
   2a190:	ldrb	r3, [sl, #1]
   2a194:	mov	r0, r5
   2a198:	bic	r3, r3, #32
   2a19c:	orr	r3, r3, #64	; 0x40
   2a1a0:	strb	r3, [sl, #1]
   2a1a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a1a8:	b	13928 <fclose@plt>
   2a1ac:	mov	r8, #0
   2a1b0:	mov	r0, r4
   2a1b4:	b	2a1e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16588>
   2a1b8:	mov	r0, r5
   2a1bc:	bl	13bc8 <getc@plt>
   2a1c0:	add	r1, r7, r8
   2a1c4:	uxtb	fp, r0
   2a1c8:	lsl	r3, fp, #1
   2a1cc:	ldrh	r3, [r6, r3]
   2a1d0:	ands	r3, r3, #64	; 0x40
   2a1d4:	bne	2a208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x165b0>
   2a1d8:	cmn	r0, #1
   2a1dc:	beq	2a244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x165ec>
   2a1e0:	strb	r0, [r7, r8]
   2a1e4:	add	r8, r8, #1
   2a1e8:	cmp	r8, r9
   2a1ec:	bcc	2a1b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16560>
   2a1f0:	lsl	r9, r9, #1
   2a1f4:	mov	r0, r7
   2a1f8:	mov	r1, r9
   2a1fc:	bl	134fc <xrealloc@plt>
   2a200:	mov	r7, r0
   2a204:	b	2a1b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16560>
   2a208:	mov	r3, #1
   2a20c:	mov	r2, #0
   2a210:	strb	r2, [r1]
   2a214:	mov	r4, r0
   2a218:	mov	r2, r3
   2a21c:	ldr	r0, [sl, #32]
   2a220:	mov	r1, r7
   2a224:	bl	137a8 <bfd_hash_lookup@plt>
   2a228:	cmp	r0, #0
   2a22c:	beq	2a26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16614>
   2a230:	cmn	r4, #1
   2a234:	beq	2a17c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16524>
   2a238:	lsl	fp, fp, #1
   2a23c:	ldrh	r3, [r6, fp]
   2a240:	b	2a14c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164f4>
   2a244:	mov	r2, r3
   2a248:	mov	r3, #1
   2a24c:	strb	r2, [r1]
   2a250:	mov	r4, r0
   2a254:	mov	r2, r3
   2a258:	ldr	r0, [sl, #32]
   2a25c:	mov	r1, r7
   2a260:	bl	137a8 <bfd_hash_lookup@plt>
   2a264:	cmp	r0, #0
   2a268:	bne	2a17c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16524>
   2a26c:	mov	r2, #5
   2a270:	ldr	r1, [pc, #120]	; 2a2f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16698>
   2a274:	mov	r0, #0
   2a278:	bl	13460 <dcgettext@plt>
   2a27c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a280:	b	2a230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x165d8>
   2a284:	mov	r2, #5
   2a288:	ldr	r1, [pc, #100]	; 2a2f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1669c>
   2a28c:	mov	r0, #0
   2a290:	bl	13460 <dcgettext@plt>
   2a294:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a298:	b	2a188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16530>
   2a29c:	mov	r2, #5
   2a2a0:	ldr	r1, [pc, #80]	; 2a2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166a0>
   2a2a4:	bl	13460 <dcgettext@plt>
   2a2a8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a2ac:	b	2a118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164c0>
   2a2b0:	mov	r2, #5
   2a2b4:	ldr	r1, [pc, #64]	; 2a2fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166a4>
   2a2b8:	mov	r0, #0
   2a2bc:	bl	13460 <dcgettext@plt>
   2a2c0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a2c4:	b	2a0e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1648c>
   2a2c8:	mov	r0, #1
   2a2cc:	bl	13580 <bfd_set_error@plt>
   2a2d0:	mov	r1, r4
   2a2d4:	ldr	r0, [pc, #36]	; 2a300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166a8>
   2a2d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2dc:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a2e0:	andeq	r8, ip, ip, lsl #1
   2a2e4:	andeq	r4, r8, r4, lsr #26
   2a2e8:	andeq	r3, r1, r0, lsl #8
   2a2ec:	andeq	r6, ip, r0, lsl #24
   2a2f0:	andeq	r1, r5, r4, ror #4
   2a2f4:	muleq	r5, r4, r2
   2a2f8:	andeq	r1, r5, r8, lsr r0
   2a2fc:	andeq	r1, r5, r8, lsr #4
   2a300:	andeq	r1, r5, r4, asr r2
   2a304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a308:	mov	r4, r0
   2a30c:	ldr	r5, [r0, #4]
   2a310:	sub	sp, sp, #8
   2a314:	sub	r3, r5, #5
   2a318:	cmp	r3, #7
   2a31c:	ldrls	pc, [pc, r3, lsl #2]
   2a320:	b	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a324:	andeq	sl, r2, r4, asr #6
   2a328:	strdeq	sl, [r2], -r8
   2a32c:	strdeq	sl, [r2], -r8
   2a330:	andeq	sl, r2, ip, asr #10
   2a334:	andeq	sl, r2, r4, lsl #9
   2a338:	strdeq	sl, [r2], -r8
   2a33c:	strdeq	sl, [r2], -r8
   2a340:	andeq	sl, r2, r0, lsl #8
   2a344:	ldr	r4, [r0, #8]
   2a348:	ldrh	r3, [r4, #24]
   2a34c:	and	r3, r3, #896	; 0x380
   2a350:	cmp	r3, #512	; 0x200
   2a354:	beq	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a358:	ldr	r3, [r4, #20]
   2a35c:	tst	r3, #32768	; 0x8000
   2a360:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a364:	ldr	r5, [r4, #60]	; 0x3c
   2a368:	ldr	r6, [pc, #1248]	; 2a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bf8>
   2a36c:	ldr	r2, [r5, #148]	; 0x94
   2a370:	ldr	r3, [r6, #48]	; 0x30
   2a374:	cmp	r2, r3
   2a378:	beq	2a388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16730>
   2a37c:	mov	r1, #248	; 0xf8
   2a380:	ldr	r0, [pc, #1228]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a384:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a388:	ldr	r3, [r5, #20]
   2a38c:	tst	r3, #256	; 0x100
   2a390:	bne	2a3a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16748>
   2a394:	ldr	r2, [pc, #1212]	; 2a858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c00>
   2a398:	bics	r3, r2, r3
   2a39c:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a3a0:	ldr	r0, [r6, #48]	; 0x30
   2a3a4:	mov	r1, r5
   2a3a8:	bl	13b2c <bfd_new_link_order@plt>
   2a3ac:	subs	r6, r0, #0
   2a3b0:	beq	2a81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bc4>
   2a3b4:	ldr	r3, [r4, #20]
   2a3b8:	and	r3, r3, #8704	; 0x2200
   2a3bc:	cmp	r3, #512	; 0x200
   2a3c0:	beq	2a800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ba8>
   2a3c4:	ldr	r2, [r4, #60]	; 0x3c
   2a3c8:	mov	r3, #1
   2a3cc:	cmp	r2, r5
   2a3d0:	str	r4, [r6, #16]
   2a3d4:	str	r3, [r6, #4]
   2a3d8:	beq	2a3e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16790>
   2a3dc:	ldr	r1, [pc, #1144]	; 2a85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c04>
   2a3e0:	ldr	r0, [pc, #1132]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a3e4:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a3e8:	ldr	r2, [r4, #36]	; 0x24
   2a3ec:	ldr	r3, [r4, #56]	; 0x38
   2a3f0:	str	r2, [r6, #12]
   2a3f4:	str	r3, [r6, #8]
   2a3f8:	add	sp, sp, #8
   2a3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a400:	ldr	r5, [r0, #16]
   2a404:	ldr	r6, [pc, #1092]	; 2a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bf8>
   2a408:	ldr	r2, [r5, #148]	; 0x94
   2a40c:	ldr	r3, [r6, #48]	; 0x30
   2a410:	cmp	r2, r3
   2a414:	beq	2a424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167cc>
   2a418:	ldr	r1, [pc, #1088]	; 2a860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c08>
   2a41c:	ldr	r0, [pc, #1072]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a420:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a424:	ldr	r3, [r5, #20]
   2a428:	tst	r3, #256	; 0x100
   2a42c:	bne	2a43c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167e4>
   2a430:	ldr	r2, [pc, #1056]	; 2a858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c00>
   2a434:	bics	r3, r2, r3
   2a438:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a43c:	mov	r1, r5
   2a440:	ldr	r0, [r6, #48]	; 0x30
   2a444:	bl	13b2c <bfd_new_link_order@plt>
   2a448:	subs	r5, r0, #0
   2a44c:	beq	2a7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b78>
   2a450:	ldr	r3, [r4, #20]
   2a454:	ldr	r0, [r4, #12]
   2a458:	ldr	r1, [r4, #8]
   2a45c:	ldr	ip, [r3]
   2a460:	mov	r2, #2
   2a464:	add	r3, r3, #4
   2a468:	str	r3, [r5, #20]
   2a46c:	str	ip, [r5, #16]
   2a470:	str	r0, [r5, #12]
   2a474:	str	r1, [r5, #8]
   2a478:	str	r2, [r5, #4]
   2a47c:	add	sp, sp, #8
   2a480:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a484:	ldr	r5, [r0, #32]
   2a488:	ldr	r6, [pc, #960]	; 2a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bf8>
   2a48c:	ldr	r2, [r5, #148]	; 0x94
   2a490:	ldr	r3, [r6, #48]	; 0x30
   2a494:	cmp	r2, r3
   2a498:	beq	2a4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16850>
   2a49c:	mov	r1, #197	; 0xc5
   2a4a0:	ldr	r0, [pc, #940]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a4a4:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a4a8:	ldr	r3, [r5, #20]
   2a4ac:	tst	r3, #256	; 0x100
   2a4b0:	bne	2a4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16868>
   2a4b4:	ldr	r2, [pc, #924]	; 2a858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c00>
   2a4b8:	bics	r3, r2, r3
   2a4bc:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a4c0:	mov	r1, r5
   2a4c4:	ldr	r0, [r6, #48]	; 0x30
   2a4c8:	bl	13b2c <bfd_new_link_order@plt>
   2a4cc:	subs	r5, r0, #0
   2a4d0:	beq	2a7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b64>
   2a4d4:	ldr	r3, [r4, #36]	; 0x24
   2a4d8:	ldr	r0, [r4, #12]
   2a4dc:	str	r3, [r5, #8]
   2a4e0:	bl	13478 <bfd_get_reloc_size@plt>
   2a4e4:	str	r0, [r5, #12]
   2a4e8:	mov	r0, #12
   2a4ec:	bl	13574 <xmalloc@plt>
   2a4f0:	ldr	r3, [r4, #20]
   2a4f4:	ldr	r2, [r4, #28]
   2a4f8:	ldr	r1, [r4, #8]
   2a4fc:	cmp	r3, #0
   2a500:	str	r0, [r5, #16]
   2a504:	str	r2, [r0, #8]
   2a508:	movne	r2, #4
   2a50c:	str	r1, [r0]
   2a510:	strne	r2, [r5, #4]
   2a514:	strne	r3, [r0, #4]
   2a518:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a51c:	ldr	r3, [r4, #16]
   2a520:	ldr	r1, [r6, #48]	; 0x30
   2a524:	mov	lr, #3
   2a528:	ldr	ip, [r3, #148]	; 0x94
   2a52c:	str	lr, [r5, #4]
   2a530:	cmp	ip, r1
   2a534:	ldrne	r1, [r3, #56]	; 0x38
   2a538:	ldrne	r3, [r3, #60]	; 0x3c
   2a53c:	addne	r2, r1, r2
   2a540:	strne	r2, [r0, #8]
   2a544:	str	r3, [r0, #4]
   2a548:	b	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a54c:	ldr	r7, [r0, #20]
   2a550:	ldr	r6, [pc, #760]	; 2a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bf8>
   2a554:	ldr	r2, [r7, #148]	; 0x94
   2a558:	ldr	r3, [r6, #48]	; 0x30
   2a55c:	cmp	r2, r3
   2a560:	beq	2a570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16918>
   2a564:	mov	r1, #51	; 0x33
   2a568:	ldr	r0, [pc, #740]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a56c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a570:	ldr	r3, [r7, #20]
   2a574:	tst	r3, #256	; 0x100
   2a578:	bne	2a588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16930>
   2a57c:	ldr	r2, [pc, #724]	; 2a858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c00>
   2a580:	bics	r3, r2, r3
   2a584:	bne	2a3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167a0>
   2a588:	mov	r1, r7
   2a58c:	ldr	r0, [r6, #48]	; 0x30
   2a590:	bl	13b2c <bfd_new_link_order@plt>
   2a594:	subs	r8, r0, #0
   2a598:	beq	2a7a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b50>
   2a59c:	ldr	r2, [r4, #24]
   2a5a0:	mov	r3, #2
   2a5a4:	str	r2, [r8, #8]
   2a5a8:	str	r3, [r8, #4]
   2a5ac:	mov	r0, #8
   2a5b0:	bl	13574 <xmalloc@plt>
   2a5b4:	ldr	r3, [r6, #48]	; 0x30
   2a5b8:	ldr	r9, [r4, #16]
   2a5bc:	ldr	r2, [r3, #4]
   2a5c0:	ldr	r2, [r2, #8]
   2a5c4:	cmp	r2, #0
   2a5c8:	str	r0, [r8, #20]
   2a5cc:	beq	2a660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a08>
   2a5d0:	cmp	r2, #1
   2a5d4:	beq	2a780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b28>
   2a5d8:	ldr	r2, [pc, #644]	; 2a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c0c>
   2a5dc:	ldr	sl, [r2, #48]	; 0x30
   2a5e0:	cmp	sl, #1
   2a5e4:	beq	2a664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a0c>
   2a5e8:	cmp	sl, #2
   2a5ec:	beq	2a634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x169dc>
   2a5f0:	cmp	sl, #0
   2a5f4:	bne	2a780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b28>
   2a5f8:	ldr	r2, [pc, #616]	; 2a868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c10>
   2a5fc:	ldr	r2, [r2]
   2a600:	cmp	r2, #0
   2a604:	bne	2a618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x169c0>
   2a608:	b	2a660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a08>
   2a60c:	ldr	r2, [r2, #24]
   2a610:	cmp	r2, #0
   2a614:	beq	2a660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a08>
   2a618:	ldr	r1, [r2, #16]
   2a61c:	cmp	r1, #0
   2a620:	beq	2a60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x169b4>
   2a624:	ldr	r2, [r1, #4]
   2a628:	ldr	r2, [r2, #8]
   2a62c:	cmp	r2, #1
   2a630:	bne	2a660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a08>
   2a634:	ldr	r2, [r4, #8]
   2a638:	sub	r2, r2, #280	; 0x118
   2a63c:	sub	r2, r2, #2
   2a640:	cmp	r2, #4
   2a644:	ldrls	pc, [pc, r2, lsl #2]
   2a648:	b	2a840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16be8>
   2a64c:	andeq	sl, r2, r4, ror #14
   2a650:	andeq	sl, r2, r4, ror #14
   2a654:	andeq	sl, r2, r4, ror #14
   2a658:	andeq	sl, r2, r8, lsl #15
   2a65c:	andeq	sl, r2, r0, lsl #15
   2a660:	mov	sl, #1
   2a664:	ldr	r2, [r7, #148]	; 0x94
   2a668:	cmp	r2, r3
   2a66c:	beq	2a67c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a24>
   2a670:	mov	r1, #139	; 0x8b
   2a674:	ldr	r0, [pc, #472]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a678:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2a67c:	ldr	r2, [r4, #8]
   2a680:	sub	r3, r2, #280	; 0x118
   2a684:	sub	r3, r3, #2
   2a688:	cmp	r3, #4
   2a68c:	ldrls	pc, [pc, r3, lsl #2]
   2a690:	b	2a830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bd8>
   2a694:	ldrdeq	sl, [r2], -r4
   2a698:	ldrdeq	sl, [r2], -r4
   2a69c:	andeq	sl, r2, r8, lsr #13
   2a6a0:	andeq	sl, r2, r0, asr #14
   2a6a4:	andeq	sl, r2, r8, lsr #14
   2a6a8:	ldr	r3, [r6, #48]	; 0x30
   2a6ac:	mov	r0, r9
   2a6b0:	ldr	r1, [r8, #20]
   2a6b4:	ldr	r3, [r3, #4]
   2a6b8:	mov	r5, #4
   2a6bc:	ldr	r3, [r3, #48]	; 0x30
   2a6c0:	blx	r3
   2a6c4:	str	r5, [r8, #12]
   2a6c8:	str	r5, [r8, #16]
   2a6cc:	add	sp, sp, #8
   2a6d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a6d4:	ldr	r3, [pc, #400]	; 2a86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c14>
   2a6d8:	ldr	r1, [r8, #20]
   2a6dc:	cmp	r2, r3
   2a6e0:	ldr	r3, [r6, #48]	; 0x30
   2a6e4:	asrne	r0, r9, #31
   2a6e8:	moveq	r0, #0
   2a6ec:	ldr	r3, [r3, #4]
   2a6f0:	cmp	sl, #0
   2a6f4:	ldr	r3, [r3, #48]	; 0x30
   2a6f8:	beq	2a7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b8c>
   2a6fc:	blx	r3
   2a700:	ldr	r3, [r6, #48]	; 0x30
   2a704:	ldr	r1, [r8, #20]
   2a708:	ldr	r3, [r3, #4]
   2a70c:	add	r1, r1, #4
   2a710:	ldr	r3, [r3, #48]	; 0x30
   2a714:	mov	r0, r9
   2a718:	blx	r3
   2a71c:	mov	r3, #8
   2a720:	str	r3, [r8, #12]
   2a724:	b	2a6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a70>
   2a728:	ldr	r2, [r8, #20]
   2a72c:	mov	r3, #1
   2a730:	mov	r5, r3
   2a734:	strb	r9, [r2]
   2a738:	str	r3, [r8, #12]
   2a73c:	b	2a6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a70>
   2a740:	ldr	r3, [r6, #48]	; 0x30
   2a744:	mov	r0, r9
   2a748:	ldr	r1, [r8, #20]
   2a74c:	ldr	r3, [r3, #4]
   2a750:	mov	r5, #2
   2a754:	ldr	r3, [r3, #60]	; 0x3c
   2a758:	blx	r3
   2a75c:	str	r5, [r8, #12]
   2a760:	b	2a6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a70>
   2a764:	mov	r0, r9
   2a768:	mov	r1, sp
   2a76c:	bl	13820 <bfd_putl32@plt>
   2a770:	mov	r0, sp
   2a774:	bl	13a0c <bfd_getb32@plt>
   2a778:	ldr	r3, [r6, #48]	; 0x30
   2a77c:	mov	r9, r0
   2a780:	mov	sl, #0
   2a784:	b	2a664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a0c>
   2a788:	mov	r0, r9
   2a78c:	mov	r1, sp
   2a790:	bl	13a30 <bfd_putl16@plt>
   2a794:	mov	r0, sp
   2a798:	bl	13844 <bfd_getb16@plt>
   2a79c:	ldr	r3, [r6, #48]	; 0x30
   2a7a0:	mov	r9, r0
   2a7a4:	b	2a780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b28>
   2a7a8:	mov	r2, #5
   2a7ac:	ldr	r1, [pc, #188]	; 2a870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c18>
   2a7b0:	bl	13460 <dcgettext@plt>
   2a7b4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a7b8:	b	2a59c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16944>
   2a7bc:	mov	r2, #5
   2a7c0:	ldr	r1, [pc, #168]	; 2a870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c18>
   2a7c4:	bl	13460 <dcgettext@plt>
   2a7c8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a7cc:	b	2a4d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1687c>
   2a7d0:	mov	r2, #5
   2a7d4:	ldr	r1, [pc, #148]	; 2a870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c18>
   2a7d8:	bl	13460 <dcgettext@plt>
   2a7dc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a7e0:	b	2a450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167f8>
   2a7e4:	add	r1, r1, #4
   2a7e8:	blx	r3
   2a7ec:	ldr	r3, [r6, #48]	; 0x30
   2a7f0:	ldr	r1, [r8, #20]
   2a7f4:	ldr	r3, [r3, #4]
   2a7f8:	ldr	r3, [r3, #48]	; 0x30
   2a7fc:	b	2a714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16abc>
   2a800:	ldr	r1, [pc, #108]	; 2a874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c1c>
   2a804:	mov	r2, #2
   2a808:	mov	r3, #1
   2a80c:	str	r1, [r6, #20]
   2a810:	str	r2, [r6, #4]
   2a814:	str	r3, [r6, #16]
   2a818:	b	2a3e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16790>
   2a81c:	mov	r2, #5
   2a820:	ldr	r1, [pc, #72]	; 2a870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c18>
   2a824:	bl	13460 <dcgettext@plt>
   2a828:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2a82c:	b	2a3b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1675c>
   2a830:	ldr	r2, [pc, #64]	; 2a878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c20>
   2a834:	mov	r1, #182	; 0xb6
   2a838:	ldr	r0, [pc, #20]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a83c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   2a840:	ldr	r2, [pc, #48]	; 2a878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c20>
   2a844:	mov	r1, #134	; 0x86
   2a848:	ldr	r0, [pc, #4]	; 2a854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bfc>
   2a84c:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   2a850:	andeq	r8, ip, ip, lsl #1
   2a854:	andeq	r1, r5, r4, ror #5
   2a858:	andeq	r0, r0, r2, lsl #8
   2a85c:	andeq	r0, r0, r1, lsl r1
   2a860:	andeq	r0, r0, r1, lsr #2
   2a864:	andeq	r8, ip, r8, lsl r1
   2a868:	andeq	r7, ip, r8, lsl #25
   2a86c:	andeq	r0, r0, sl, lsl r1
   2a870:	strdeq	r1, [r5], -r8
   2a874:	andeq	r2, r5, ip
   2a878:	ldrdeq	r1, [r5], -r0
   2a87c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a880:	mov	r0, #0
   2a884:	sub	sp, sp, #44	; 0x2c
   2a888:	bl	13580 <bfd_set_error@plt>
   2a88c:	bl	22878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec20>
   2a890:	ldr	r0, [pc, #1276]	; 2ad94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1713c>
   2a894:	bl	1fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc210>
   2a898:	ldr	r2, [pc, #1272]	; 2ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17140>
   2a89c:	ldrd	r2, [r2, #84]	; 0x54
   2a8a0:	and	r3, r3, r2
   2a8a4:	cmn	r3, #1
   2a8a8:	ldr	r3, [pc, #1260]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2a8ac:	ldr	r7, [r3, #48]	; 0x30
   2a8b0:	beq	2aca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1704c>
   2a8b4:	ldr	r3, [r7, #108]	; 0x6c
   2a8b8:	ldr	r2, [r7, #100]	; 0x64
   2a8bc:	str	r3, [sp, #24]
   2a8c0:	cmp	r3, #0
   2a8c4:	cmpne	r2, #0
   2a8c8:	str	r2, [sp, #8]
   2a8cc:	beq	2aca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1704c>
   2a8d0:	str	r7, [sp, #12]
   2a8d4:	ldr	r3, [sp, #8]
   2a8d8:	mov	r5, #0
   2a8dc:	str	r5, [sp, #36]	; 0x24
   2a8e0:	ldr	r9, [r3, #160]	; 0xa0
   2a8e4:	ldr	r3, [r3, #28]
   2a8e8:	cmp	r9, r5
   2a8ec:	str	r3, [sp, #20]
   2a8f0:	beq	2ac68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17010>
   2a8f4:	ldr	r4, [sp, #8]
   2a8f8:	mov	sl, r5
   2a8fc:	mov	r6, r5
   2a900:	str	r5, [sp, #16]
   2a904:	ldr	r2, [pc, #1168]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2a908:	ldr	r3, [r9, #4]
   2a90c:	ldrb	r2, [r2]
   2a910:	cmp	r3, #1
   2a914:	and	r2, r2, #3
   2a918:	beq	2ad10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170b8>
   2a91c:	cmp	r2, #2
   2a920:	beq	2acec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17094>
   2a924:	mov	fp, r6
   2a928:	mov	r6, #0
   2a92c:	mov	r8, r6
   2a930:	mov	r7, r6
   2a934:	ldr	r3, [sp, #16]
   2a938:	cmp	r3, #0
   2a93c:	beq	2ac44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fec>
   2a940:	ldr	r1, [pc, #1104]	; 2ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17140>
   2a944:	ldr	r2, [r1, #84]	; 0x54
   2a948:	cmp	r2, fp
   2a94c:	bls	2a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d14>
   2a950:	add	r3, r7, sl
   2a954:	cmp	r2, r3
   2a958:	bls	2a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d14>
   2a95c:	ldr	r1, [r1, #88]	; 0x58
   2a960:	add	r2, r8, r5
   2a964:	cmp	r2, r1
   2a968:	bcc	2ac4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ff4>
   2a96c:	ldr	r3, [r4]
   2a970:	mov	r2, #5
   2a974:	mov	r0, r3
   2a978:	ldr	r1, [pc, #1056]	; 2ada0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17148>
   2a97c:	str	r3, [sp, #28]
   2a980:	bl	13bb0 <strncmp@plt>
   2a984:	ldr	r3, [sp, #28]
   2a988:	cmp	r0, #0
   2a98c:	mov	r0, r3
   2a990:	bne	2ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fdc>
   2a994:	bl	137d8 <strlen@plt>
   2a998:	ldr	r3, [sp, #28]
   2a99c:	ldr	r1, [pc, #1024]	; 2ada4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1714c>
   2a9a0:	sub	r0, r0, #3
   2a9a4:	add	r0, r3, r0
   2a9a8:	bl	13268 <strcmp@plt>
   2a9ac:	cmp	r0, #0
   2a9b0:	beq	2ac44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fec>
   2a9b4:	ldr	r3, [sp, #8]
   2a9b8:	ldr	fp, [r3]
   2a9bc:	mov	r0, fp
   2a9c0:	bl	137d8 <strlen@plt>
   2a9c4:	add	r2, r0, #1
   2a9c8:	mov	sl, r0
   2a9cc:	mov	r0, r2
   2a9d0:	str	r2, [sp, #28]
   2a9d4:	bl	13574 <xmalloc@plt>
   2a9d8:	ldr	r2, [sp, #28]
   2a9dc:	mov	r1, fp
   2a9e0:	mov	r5, r0
   2a9e4:	bl	133b8 <memcpy@plt>
   2a9e8:	cmp	sl, #0
   2a9ec:	beq	2aa3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de4>
   2a9f0:	sub	r3, sl, #1
   2a9f4:	ldr	r0, [pc, #940]	; 2ada8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17150>
   2a9f8:	ldrb	r1, [r5, r3]
   2a9fc:	add	r2, r5, r3
   2aa00:	lsl	r1, r1, #1
   2aa04:	ldrh	r1, [r0, r1]
   2aa08:	tst	r1, #4
   2aa0c:	bne	2aa34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ddc>
   2aa10:	b	2acc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17070>
   2aa14:	ldrb	r1, [r2, #-1]!
   2aa18:	ldr	ip, [pc, #904]	; 2ada8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17150>
   2aa1c:	sub	r0, r3, #1
   2aa20:	lsl	r1, r1, #1
   2aa24:	ldrh	r1, [ip, r1]
   2aa28:	tst	r1, #4
   2aa2c:	beq	2accc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17074>
   2aa30:	mov	r3, r0
   2aa34:	cmp	r3, #0
   2aa38:	bne	2aa14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16dbc>
   2aa3c:	ldr	r3, [sp, #12]
   2aa40:	ldr	r3, [r3, #4]
   2aa44:	ldr	sl, [r3, #4]
   2aa48:	sub	sl, sl, #2
   2aa4c:	bics	sl, sl, #2
   2aa50:	bne	2aa94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16e3c>
   2aa54:	mov	r0, r5
   2aa58:	bl	137d8 <strlen@plt>
   2aa5c:	cmp	r0, #5
   2aa60:	bls	2aa94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16e3c>
   2aa64:	mov	r2, #5
   2aa68:	ldr	r1, [pc, #816]	; 2ada0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17148>
   2aa6c:	mov	r0, fp
   2aa70:	bl	13bb0 <strncmp@plt>
   2aa74:	cmp	r0, #0
   2aa78:	beq	2ad48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170f0>
   2aa7c:	ldr	r1, [pc, #808]	; 2adac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17154>
   2aa80:	mov	r0, fp
   2aa84:	bl	13268 <strcmp@plt>
   2aa88:	cmp	r0, #0
   2aa8c:	beq	2ad48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170f0>
   2aa90:	strb	sl, [r5, #5]
   2aa94:	add	r2, sp, #36	; 0x24
   2aa98:	mov	r1, r5
   2aa9c:	ldr	r0, [sp, #12]
   2aaa0:	bl	138c8 <bfd_get_unique_section_name@plt>
   2aaa4:	subs	fp, r0, #0
   2aaa8:	beq	2ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fbc>
   2aaac:	mov	r1, fp
   2aab0:	ldr	r0, [sp, #12]
   2aab4:	bl	1394c <bfd_make_section_anyway@plt>
   2aab8:	subs	sl, r0, #0
   2aabc:	beq	2ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fbc>
   2aac0:	ldr	r0, [pc, #724]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2aac4:	mov	r3, #1
   2aac8:	mov	ip, #0
   2aacc:	str	ip, [sp]
   2aad0:	mov	r1, fp
   2aad4:	mov	r2, r3
   2aad8:	ldr	r0, [r0, #28]
   2aadc:	bl	13640 <bfd_link_hash_lookup@plt>
   2aae0:	subs	fp, r0, #0
   2aae4:	beq	2ac14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fbc>
   2aae8:	mov	r0, r5
   2aaec:	bl	13364 <free@plt>
   2aaf0:	ldr	r3, [r4, #28]
   2aaf4:	mov	ip, #0
   2aaf8:	mov	r2, #3
   2aafc:	str	ip, [fp, #24]
   2ab00:	strb	r2, [fp, #12]
   2ab04:	str	sl, [fp, #20]
   2ab08:	ldr	r1, [r4, #20]
   2ab0c:	ldrb	r2, [sl, #24]
   2ab10:	str	r3, [sl, #28]
   2ab14:	ldrb	r3, [r4, #24]
   2ab18:	ldr	lr, [sp, #12]
   2ab1c:	bic	r2, r2, #1
   2ab20:	and	r3, r3, #1
   2ab24:	orr	r3, r3, r2
   2ab28:	strb	r3, [sl, #24]
   2ab2c:	ldr	r0, [lr, #4]
   2ab30:	ldr	r2, [r4, #56]	; 0x38
   2ab34:	ldr	r3, [r4, #64]	; 0x40
   2ab38:	str	r1, [sl, #20]
   2ab3c:	ldr	r1, [r4, #32]
   2ab40:	ldr	r5, [r0, #180]	; 0xb4
   2ab44:	str	r1, [sl, #32]
   2ab48:	str	ip, [sl, #36]	; 0x24
   2ab4c:	str	r2, [sl, #56]	; 0x38
   2ab50:	str	ip, [sl, #72]	; 0x48
   2ab54:	mov	r2, lr
   2ab58:	str	ip, [sl, #76]	; 0x4c
   2ab5c:	str	r3, [sl, #64]	; 0x40
   2ab60:	mov	r1, r4
   2ab64:	mov	r3, sl
   2ab68:	mov	r0, lr
   2ab6c:	str	sl, [sl, #60]	; 0x3c
   2ab70:	mov	fp, ip
   2ab74:	blx	r5
   2ab78:	ldr	ip, [r4, #164]	; 0xa4
   2ab7c:	ldr	r2, [r9, #8]
   2ab80:	ldr	r0, [r4, #36]	; 0x24
   2ab84:	ldr	lr, [sp, #20]
   2ab88:	str	ip, [sl, #164]	; 0xa4
   2ab8c:	ldr	ip, [sp, #16]
   2ab90:	add	lr, lr, r2
   2ab94:	sub	r0, r0, r2
   2ab98:	str	r9, [sl, #160]	; 0xa0
   2ab9c:	mov	r1, r2
   2aba0:	str	ip, [r4, #164]	; 0xa4
   2aba4:	mov	r3, r9
   2aba8:	str	fp, [ip]
   2abac:	str	lr, [sp, #20]
   2abb0:	str	r0, [sl, #36]	; 0x24
   2abb4:	str	r2, [r4, #36]	; 0x24
   2abb8:	str	lr, [sl, #28]
   2abbc:	str	lr, [sl, #32]
   2abc0:	b	2abc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f70>
   2abc4:	ldr	r1, [r3, #8]
   2abc8:	ldr	r0, [r3, #4]
   2abcc:	sub	r1, r1, r2
   2abd0:	cmp	r0, #1
   2abd4:	str	r1, [r3, #8]
   2abd8:	ldreq	r0, [r3, #16]
   2abdc:	ldr	r3, [r3]
   2abe0:	streq	sl, [r0, #60]	; 0x3c
   2abe4:	streq	r1, [r0, #56]	; 0x38
   2abe8:	cmp	r3, #0
   2abec:	bne	2abc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f6c>
   2abf0:	ldr	r3, [r9]
   2abf4:	mov	r4, sl
   2abf8:	cmp	r3, #0
   2abfc:	str	r9, [sp, #16]
   2ac00:	beq	2ac68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17010>
   2ac04:	mov	r5, r8
   2ac08:	mov	sl, r7
   2ac0c:	mov	r9, r3
   2ac10:	b	2a904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cac>
   2ac14:	mov	r2, #5
   2ac18:	ldr	r1, [pc, #400]	; 2adb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17158>
   2ac1c:	mov	r0, #0
   2ac20:	bl	13460 <dcgettext@plt>
   2ac24:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ac28:	mov	r3, #0
   2ac2c:	str	r9, [r3, #160]	; 0xa0
   2ac30:	udf	#0
   2ac34:	ldr	r1, [pc, #376]	; 2adb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1715c>
   2ac38:	bl	13268 <strcmp@plt>
   2ac3c:	cmp	r0, #0
   2ac40:	bne	2a9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d5c>
   2ac44:	add	r3, r7, sl
   2ac48:	add	r2, r8, r5
   2ac4c:	mov	r7, r3
   2ac50:	ldr	r3, [r9]
   2ac54:	mov	r8, r2
   2ac58:	cmp	r3, #0
   2ac5c:	mov	r6, fp
   2ac60:	str	r9, [sp, #16]
   2ac64:	bne	2ac04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fac>
   2ac68:	ldr	r3, [sp, #24]
   2ac6c:	subs	r3, r3, #1
   2ac70:	str	r3, [sp, #24]
   2ac74:	ldr	r3, [sp, #8]
   2ac78:	ldr	r3, [r3, #12]
   2ac7c:	mov	r2, r3
   2ac80:	str	r3, [sp, #8]
   2ac84:	movne	r3, #1
   2ac88:	moveq	r3, #0
   2ac8c:	cmp	r2, #0
   2ac90:	moveq	r3, #0
   2ac94:	cmp	r3, #0
   2ac98:	bne	2a8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c7c>
   2ac9c:	ldr	r3, [pc, #248]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2aca0:	ldr	r7, [r3, #48]	; 0x30
   2aca4:	ldr	r3, [r7, #4]
   2aca8:	mov	r0, r7
   2acac:	ldr	r1, [pc, #232]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2acb0:	ldr	r3, [r3, #376]	; 0x178
   2acb4:	blx	r3
   2acb8:	subs	r4, r0, #0
   2acbc:	beq	2ad64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1710c>
   2acc0:	add	sp, sp, #44	; 0x2c
   2acc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2acc8:	mov	r3, sl
   2accc:	cmp	r3, #1
   2acd0:	beq	2aa3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de4>
   2acd4:	sub	r3, r3, #1
   2acd8:	ldrb	r2, [r5, r3]
   2acdc:	cmp	r2, #46	; 0x2e
   2ace0:	moveq	r2, #0
   2ace4:	strbeq	r2, [r5, r3]
   2ace8:	b	2aa3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de4>
   2acec:	sub	r3, r3, #3
   2acf0:	cmp	r3, #1
   2acf4:	movhi	r3, #0
   2acf8:	movls	r3, #1
   2acfc:	mov	r8, #0
   2ad00:	add	fp, r6, r3
   2ad04:	mov	r7, r8
   2ad08:	mov	r6, r3
   2ad0c:	b	2a934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cdc>
   2ad10:	ldr	r3, [pc, #132]	; 2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17144>
   2ad14:	ldr	r1, [r9, #16]
   2ad18:	ldrb	r3, [r3, #1]
   2ad1c:	ldr	r8, [r1, #36]	; 0x24
   2ad20:	tst	r3, #32
   2ad24:	movne	r7, #0
   2ad28:	ldreq	r7, [r1, #116]	; 0x74
   2ad2c:	cmp	r2, #2
   2ad30:	movne	r3, #0
   2ad34:	ldreq	r3, [r1, #76]	; 0x4c
   2ad38:	addeq	r6, r6, r3
   2ad3c:	mov	fp, r6
   2ad40:	mov	r6, r3
   2ad44:	b	2a934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cdc>
   2ad48:	mov	r2, #5
   2ad4c:	ldr	r1, [pc, #100]	; 2adb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17160>
   2ad50:	mov	r0, #0
   2ad54:	bl	13460 <dcgettext@plt>
   2ad58:	mov	r1, fp
   2ad5c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ad60:	b	2ac28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fd0>
   2ad64:	bl	13550 <bfd_get_error@plt>
   2ad68:	cmp	r0, #0
   2ad6c:	beq	2ad8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17134>
   2ad70:	mov	r2, #5
   2ad74:	ldr	r1, [pc, #64]	; 2adbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17164>
   2ad78:	mov	r0, r4
   2ad7c:	bl	13460 <dcgettext@plt>
   2ad80:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ad84:	add	sp, sp, #44	; 0x2c
   2ad88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad8c:	mov	r0, #1
   2ad90:	bl	139d0 <xexit@plt>
   2ad94:	andeq	sl, r2, r4, lsl #6
   2ad98:	andeq	r8, ip, r4, ror r1
   2ad9c:	andeq	r8, ip, ip, lsl #1
   2ada0:	andeq	r1, r5, ip, lsl r3
   2ada4:	andeq	r1, r5, r4, lsr #6
   2ada8:	andeq	r6, ip, r0, lsl #24
   2adac:	andeq	r1, r5, r8, lsr r3
   2adb0:	andeq	r1, r5, r8, ror r3
   2adb4:	andeq	r1, r5, r8, lsr #6
   2adb8:	andeq	r1, r5, r8, asr #6
   2adbc:	muleq	r5, r8, r3
   2adc0:	push	{r4, r5, r6, lr}
   2adc4:	subs	r4, r0, #0
   2adc8:	beq	2ade0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17188>
   2adcc:	ldrh	r3, [r4, #16]
   2add0:	mov	r0, r4
   2add4:	and	r3, r3, #65024	; 0xfe00
   2add8:	strh	r3, [r4, #16]
   2addc:	pop	{r4, r5, r6, pc}
   2ade0:	mov	r0, r1
   2ade4:	mov	r1, #20
   2ade8:	mov	r5, r2
   2adec:	bl	136dc <bfd_hash_allocate@plt>
   2adf0:	subs	r4, r0, #0
   2adf4:	bne	2adcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17174>
   2adf8:	mov	r2, #5
   2adfc:	ldr	r1, [pc, #24]	; 2ae1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171c4>
   2ae00:	bl	13460 <dcgettext@plt>
   2ae04:	mov	r1, r5
   2ae08:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ae0c:	ldrh	r3, [r4, #16]
   2ae10:	bic	r3, r3, #256	; 0x100
   2ae14:	strh	r3, [r4, #16]
   2ae18:	udf	#0
   2ae1c:	andeq	r1, r5, r0, asr r5
   2ae20:	ldr	r2, [pc, #48]	; 2ae58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17200>
   2ae24:	ldr	r1, [pc, #48]	; 2ae5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17204>
   2ae28:	ldr	r3, [r2, #44]	; 0x2c
   2ae2c:	cmp	r3, r1
   2ae30:	movne	r3, #0
   2ae34:	beq	2ae40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171e8>
   2ae38:	str	r3, [r2, #28]
   2ae3c:	bx	lr
   2ae40:	ldr	r1, [pc, #24]	; 2ae60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17208>
   2ae44:	ldr	r1, [r1, #64]	; 0x40
   2ae48:	cmp	r1, #0
   2ae4c:	movne	r3, #0
   2ae50:	str	r3, [r2, #28]
   2ae54:	bx	lr
   2ae58:	strdeq	r8, [ip], -r4
   2ae5c:	andeq	r7, ip, r8, lsr #17
   2ae60:	andeq	r8, ip, r4, ror r1
   2ae64:	push	{r4, r5, lr}
   2ae68:	sub	sp, sp, #12
   2ae6c:	ldr	r5, [pc, #116]	; 2aee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17290>
   2ae70:	ldr	r3, [r0, #12]
   2ae74:	cmp	r3, r5
   2ae78:	beq	2aeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1725c>
   2ae7c:	ldr	r1, [pc, #104]	; 2aeec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17294>
   2ae80:	mov	r4, r0
   2ae84:	mov	r2, #1
   2ae88:	mov	r3, #0
   2ae8c:	ldr	r0, [r1, #28]
   2ae90:	str	r2, [sp]
   2ae94:	mov	r2, r3
   2ae98:	ldr	r1, [r4, #4]
   2ae9c:	bl	13640 <bfd_link_hash_lookup@plt>
   2aea0:	cmp	r0, #0
   2aea4:	beq	2aeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1725c>
   2aea8:	ldrb	r3, [r0, #12]
   2aeac:	cmp	r3, #3
   2aeb0:	beq	2aec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17268>
   2aeb4:	mov	r0, #1
   2aeb8:	add	sp, sp, #12
   2aebc:	pop	{r4, r5, pc}
   2aec0:	ldr	r3, [r0, #20]
   2aec4:	cmp	r3, r5
   2aec8:	bne	2aeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1725c>
   2aecc:	ldr	r2, [r4, #12]
   2aed0:	ldr	r3, [r0, #24]
   2aed4:	ldr	r1, [r2, #28]
   2aed8:	str	r2, [r0, #20]
   2aedc:	sub	r3, r3, r1
   2aee0:	str	r3, [r0, #24]
   2aee4:	b	2aeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1725c>
   2aee8:	andeq	r7, ip, r8, lsr #17
   2aeec:	andeq	r8, ip, ip, lsl #1
   2aef0:	push	{r4, r5, r6, r7, r8, lr}
   2aef4:	mov	r5, r0
   2aef8:	ldr	r3, [pc, #196]	; 2afc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1736c>
   2aefc:	ldr	r2, [pc, #196]	; 2afc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17370>
   2af00:	mov	r6, r1
   2af04:	mov	r4, #0
   2af08:	b	2af1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172c4>
   2af0c:	add	r4, r4, #1
   2af10:	cmp	r4, #51	; 0x33
   2af14:	beq	2af6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17314>
   2af18:	ldr	r3, [r2, r4, lsl #3]
   2af1c:	cmp	r5, r3
   2af20:	bne	2af0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172b4>
   2af24:	ldr	r7, [pc, #160]	; 2afcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17374>
   2af28:	cmp	r6, #0
   2af2c:	ldr	r1, [r7, #80]	; 0x50
   2af30:	bne	2af5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17304>
   2af34:	ldr	r3, [pc, #140]	; 2afc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17370>
   2af38:	add	r4, r3, r4, lsl #3
   2af3c:	ldr	r0, [r4, #4]
   2af40:	bl	13ba4 <fputs@plt>
   2af44:	cmp	r6, #0
   2af48:	popeq	{r4, r5, r6, r7, r8, pc}
   2af4c:	ldr	r1, [r7, #80]	; 0x50
   2af50:	mov	r0, #32
   2af54:	pop	{r4, r5, r6, r7, r8, lr}
   2af58:	b	139b8 <fputc@plt>
   2af5c:	mov	r0, #32
   2af60:	bl	139b8 <fputc@plt>
   2af64:	ldr	r1, [r7, #80]	; 0x50
   2af68:	b	2af34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172dc>
   2af6c:	ldr	r7, [pc, #88]	; 2afcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17374>
   2af70:	cmp	r6, #0
   2af74:	ldr	r1, [r7, #80]	; 0x50
   2af78:	bne	2afb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1735c>
   2af7c:	cmp	r5, #126	; 0x7e
   2af80:	bgt	2af98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17340>
   2af84:	mov	r0, r5
   2af88:	bl	139b8 <fputc@plt>
   2af8c:	cmp	r6, #0
   2af90:	popeq	{r4, r5, r6, r7, r8, pc}
   2af94:	b	2af4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172f4>
   2af98:	mov	r0, r1
   2af9c:	mov	r2, r5
   2afa0:	ldr	r1, [pc, #40]	; 2afd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17378>
   2afa4:	bl	1382c <fprintf@plt>
   2afa8:	cmp	r6, #0
   2afac:	popeq	{r4, r5, r6, r7, r8, pc}
   2afb0:	b	2af4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172f4>
   2afb4:	mov	r0, #32
   2afb8:	bl	139b8 <fputc@plt>
   2afbc:	ldr	r1, [r7, #80]	; 0x50
   2afc0:	b	2af7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17324>
   2afc4:	andeq	r0, r0, r2, lsl #2
   2afc8:			; <UNDEFINED> instruction: 0x000513b8
   2afcc:	andeq	r8, ip, r4, ror r1
   2afd0:	andeq	r1, r5, r4, lsl #11
   2afd4:	ldr	r3, [r0, #12]
   2afd8:	cmp	r3, #3
   2afdc:	beq	2afe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17390>
   2afe0:	mov	r0, #0
   2afe4:	bx	lr
   2afe8:	ldr	r3, [pc, #164]	; 2b094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1743c>
   2afec:	ldr	r2, [r0]
   2aff0:	cmp	r2, r3
   2aff4:	bne	2afe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17388>
   2aff8:	mov	r3, #0
   2affc:	push	{r4, lr}
   2b000:	mov	r2, r3
   2b004:	ldr	r1, [r0, #16]
   2b008:	sub	sp, sp, #8
   2b00c:	mov	r4, r0
   2b010:	ldr	r0, [pc, #128]	; 2b098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17440>
   2b014:	bl	137a8 <bfd_hash_lookup@plt>
   2b018:	cmp	r0, #0
   2b01c:	beq	2b088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17430>
   2b020:	ldr	r3, [pc, #116]	; 2b09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17444>
   2b024:	ldrb	r2, [r0, #16]
   2b028:	ldrb	r3, [r3]
   2b02c:	cmp	r2, r3
   2b030:	bne	2b088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17430>
   2b034:	ldr	r1, [pc, #100]	; 2b0a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17448>
   2b038:	mov	ip, #1
   2b03c:	mov	r3, #0
   2b040:	ldr	r2, [r4, #16]
   2b044:	ldr	r0, [r1, #48]	; 0x30
   2b048:	stm	sp, {r3, ip}
   2b04c:	bl	132f8 <bfd_wrapped_link_hash_lookup@plt>
   2b050:	cmp	r0, #0
   2b054:	beq	2b088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17430>
   2b058:	ldrh	r3, [r0, #12]
   2b05c:	ldr	r2, [pc, #64]	; 2b0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1744c>
   2b060:	bic	r3, r3, #63232	; 0xf700
   2b064:	cmp	r3, r2
   2b068:	bne	2b088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17430>
   2b06c:	ldr	r3, [pc, #52]	; 2b0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17450>
   2b070:	ldr	r2, [r0, #20]
   2b074:	cmp	r2, r3
   2b078:	ldreq	r0, [r0, #24]
   2b07c:	clzeq	r0, r0
   2b080:	lsreq	r0, r0, #5
   2b084:	beq	2b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17434>
   2b088:	mov	r0, #0
   2b08c:	add	sp, sp, #8
   2b090:	pop	{r4, pc}
   2b094:	andeq	r0, r0, r3, lsl #2
   2b098:	andeq	r7, ip, r0, lsr #26
   2b09c:	muleq	ip, r8, ip
   2b0a0:	andeq	r8, ip, ip, lsl #1
   2b0a4:	andeq	r0, r0, r3, lsl #16
   2b0a8:	andeq	r7, ip, r8, lsr #17
   2b0ac:	push	{r4, r5, r6, r7, r8, lr}
   2b0b0:	subs	r4, r0, #0
   2b0b4:	sub	sp, sp, #8
   2b0b8:	beq	2b260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17608>
   2b0bc:	ldr	r5, [pc, #4052]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b0c0:	ldr	r3, [r4, #12]
   2b0c4:	cmp	r3, #9
   2b0c8:	ldrls	pc, [pc, r3, lsl #2]
   2b0cc:	b	2c818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bc0>
   2b0d0:	andeq	fp, r2, ip, lsr r1
   2b0d4:	andeq	fp, r2, r8, lsr #4
   2b0d8:	andeq	fp, r2, r0, lsl #5
   2b0dc:	andeq	fp, r2, ip, lsl r3
   2b0e0:	andeq	fp, r2, r8, asr r4
   2b0e4:	andeq	fp, r2, r8, asr r4
   2b0e8:	andeq	fp, r2, r8, asr r4
   2b0ec:	andeq	fp, r2, r4, ror #7
   2b0f0:	andeq	fp, r2, r0, lsr #8
   2b0f4:	strdeq	fp, [r2], -r8
   2b0f8:	ldr	r3, [pc, #3992]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b0fc:	ldr	r2, [r3]
   2b100:	cmp	r2, #0
   2b104:	beq	2b260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17608>
   2b108:	ldr	r1, [r4, #16]
   2b10c:	ldr	r2, [r4, #20]
   2b110:	mov	r0, #1
   2b114:	ldr	lr, [r1, #56]	; 0x38
   2b118:	ldr	ip, [r1, #60]	; 0x3c
   2b11c:	add	r2, r2, lr
   2b120:	mov	r1, #0
   2b124:	str	r2, [r3, #20]
   2b128:	str	ip, [r3, #28]
   2b12c:	str	r0, [r3, #32]
   2b130:	str	r1, [r3, #24]
   2b134:	add	sp, sp, #8
   2b138:	pop	{r4, r5, r6, r7, r8, pc}
   2b13c:	ldr	r5, [pc, #3924]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b140:	ldr	r0, [r4, #16]
   2b144:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b148:	ldr	r6, [r5, #32]
   2b14c:	cmp	r6, #0
   2b150:	beq	2bad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e78>
   2b154:	ldr	r3, [pc, #3904]	; 2c09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18444>
   2b158:	ldr	r2, [r4]
   2b15c:	cmp	r2, r3
   2b160:	beq	2bb58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f00>
   2b164:	ldr	r0, [r4, #20]
   2b168:	ldr	r8, [r5, #20]
   2b16c:	ldr	r7, [r5, #28]
   2b170:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b174:	ldr	r3, [r5, #32]
   2b178:	and	r6, r6, r3
   2b17c:	cmp	r6, #0
   2b180:	str	r6, [r5, #32]
   2b184:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b188:	ldr	r3, [r5, #28]
   2b18c:	cmp	r3, r7
   2b190:	beq	2b1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17570>
   2b194:	cmp	r3, #0
   2b198:	cmpne	r7, #0
   2b19c:	beq	2bb48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ef0>
   2b1a0:	ldr	r2, [r7, #28]
   2b1a4:	ldr	r1, [r3, #28]
   2b1a8:	ldr	r3, [r5, #20]
   2b1ac:	ldr	r7, [pc, #3976]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b1b0:	add	r3, r3, r1
   2b1b4:	add	r8, r8, r2
   2b1b8:	mov	r2, #0
   2b1bc:	str	r3, [r5, #20]
   2b1c0:	str	r7, [r5, #28]
   2b1c4:	str	r2, [r5, #8]
   2b1c8:	ldr	r3, [r4]
   2b1cc:	ldr	r2, [pc, #3788]	; 2c0a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18448>
   2b1d0:	cmp	r3, r2
   2b1d4:	beq	2c2d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18678>
   2b1d8:	bgt	2b8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c4c>
   2b1dc:	cmp	r3, #47	; 0x2f
   2b1e0:	beq	2c1bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18564>
   2b1e4:	bgt	2b868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c10>
   2b1e8:	cmp	r3, #42	; 0x2a
   2b1ec:	beq	2c318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186c0>
   2b1f0:	bgt	2b83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17be4>
   2b1f4:	cmp	r3, #37	; 0x25
   2b1f8:	beq	2c218 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c0>
   2b1fc:	cmp	r3, #38	; 0x26
   2b200:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b204:	ldr	r3, [r5, #20]
   2b208:	ldr	r2, [r5, #28]
   2b20c:	and	r8, r8, r3
   2b210:	cmp	r2, r7
   2b214:	str	r8, [r5, #20]
   2b218:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b21c:	add	sp, sp, #8
   2b220:	pop	{r4, r5, r6, r7, r8, lr}
   2b224:	b	2ae20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171c8>
   2b228:	ldr	r0, [r4, #16]
   2b22c:	ldr	r6, [r5, #16]
   2b230:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b234:	ldr	r3, [r5, #32]
   2b238:	str	r6, [r5, #16]
   2b23c:	cmp	r3, #0
   2b240:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b244:	ldr	r2, [r5, #20]
   2b248:	ldr	r3, [r4, #20]
   2b24c:	cmp	r2, #0
   2b250:	ldr	r4, [r4, #24]
   2b254:	movne	r4, r3
   2b258:	cmp	r4, #0
   2b25c:	bne	2b0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17468>
   2b260:	ldr	r3, [pc, #3644]	; 2c0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1844c>
   2b264:	mov	r2, #0
   2b268:	str	r2, [r3]
   2b26c:	str	r2, [r3, #4]
   2b270:	str	r2, [r3, #8]
   2b274:	str	r2, [r3, #12]
   2b278:	add	sp, sp, #8
   2b27c:	pop	{r4, r5, r6, r7, r8, pc}
   2b280:	ldr	r5, [pc, #3600]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b284:	ldr	r0, [r4, #16]
   2b288:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b28c:	ldr	r3, [r5, #32]
   2b290:	cmp	r3, #0
   2b294:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b298:	ldr	r3, [r4]
   2b29c:	ldr	r2, [pc, #3716]	; 2c128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184d0>
   2b2a0:	cmp	r3, r2
   2b2a4:	beq	2b7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b70>
   2b2a8:	ble	2b5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1799c>
   2b2ac:	cmp	r3, #320	; 0x140
   2b2b0:	beq	2b72c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ad4>
   2b2b4:	ble	2b620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179c8>
   2b2b8:	cmp	r3, #352	; 0x160
   2b2bc:	beq	2b3b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17760>
   2b2c0:	ldr	r2, [pc, #3552]	; 2c0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18450>
   2b2c4:	cmp	r3, r2
   2b2c8:	bne	2b60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179b4>
   2b2cc:	ldr	r3, [r5, #20]
   2b2d0:	mov	ip, #0
   2b2d4:	mvn	r0, #0
   2b2d8:	b	2b2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17694>
   2b2dc:	tst	r3, #1
   2b2e0:	movne	ip, #1
   2b2e4:	mov	r3, r2
   2b2e8:	mov	r0, r1
   2b2ec:	cmp	r3, #1
   2b2f0:	add	r1, r0, #1
   2b2f4:	lsr	r2, r3, #1
   2b2f8:	bhi	2b2dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17684>
   2b2fc:	cmp	r2, #0
   2b300:	bne	2b2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1768c>
   2b304:	cmp	ip, #0
   2b308:	addne	r1, r0, #2
   2b30c:	mov	r3, #0
   2b310:	str	r1, [r5, #20]
   2b314:	str	r3, [r5, #28]
   2b318:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b31c:	ldr	r6, [pc, #3456]	; 2c0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1844c>
   2b320:	mov	r7, #0
   2b324:	ldr	r2, [pc, #3456]	; 2c0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18454>
   2b328:	str	r7, [r6]
   2b32c:	str	r7, [r6, #4]
   2b330:	str	r7, [r6, #8]
   2b334:	str	r7, [r6, #12]
   2b338:	ldr	r3, [r4]
   2b33c:	cmp	r3, r2
   2b340:	ble	2b6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a58>
   2b344:	ldr	r2, [pc, #3428]	; 2c0b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18458>
   2b348:	cmp	r3, r2
   2b34c:	beq	2bdd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1817c>
   2b350:	bgt	2b654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179fc>
   2b354:	sub	r2, r2, #11
   2b358:	cmp	r3, r2
   2b35c:	beq	2bd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x180ac>
   2b360:	cmp	r3, #324	; 0x144
   2b364:	bne	2b6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a88>
   2b368:	ldr	r3, [r6, #-20]	; 0xffffffec
   2b36c:	sub	r5, r6, #20
   2b370:	cmp	r3, #0
   2b374:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b378:	mov	r2, r7
   2b37c:	mov	r1, r7
   2b380:	ldr	r0, [r4, #16]
   2b384:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   2b388:	subs	r3, r0, #0
   2b38c:	beq	2c154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184fc>
   2b390:	ldrb	r2, [r3, #84]	; 0x54
   2b394:	tst	r2, #2
   2b398:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b39c:	ldr	r0, [r3, #48]	; 0x30
   2b3a0:	cmp	r0, #0
   2b3a4:	beq	2c6d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a7c>
   2b3a8:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b3ac:	ldr	r3, [r5, #32]
   2b3b0:	cmp	r3, #0
   2b3b4:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b3b8:	ldr	r3, [r5, #28]
   2b3bc:	cmp	r3, #0
   2b3c0:	ldrne	r2, [r3, #28]
   2b3c4:	ldrne	r3, [r5, #20]
   2b3c8:	addne	r3, r3, r2
   2b3cc:	ldr	r2, [pc, #3432]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b3d0:	strne	r3, [r5, #20]
   2b3d4:	mov	r3, #0
   2b3d8:	str	r2, [r5, #28]
   2b3dc:	str	r3, [r5, #8]
   2b3e0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b3e4:	ldr	r5, [pc, #3244]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b3e8:	ldr	r2, [pc, #3404]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b3ec:	ldr	r1, [r4, #16]
   2b3f0:	ldr	r3, [r5, #44]	; 0x2c
   2b3f4:	cmp	r3, r2
   2b3f8:	beq	2bae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e88>
   2b3fc:	mov	r2, #1
   2b400:	mov	r3, #0
   2b404:	str	r1, [r5, #20]
   2b408:	str	r2, [r5, #32]
   2b40c:	str	r3, [r5, #28]
   2b410:	ldr	r3, [r4, #20]
   2b414:	str	r3, [r5, #24]
   2b418:	add	sp, sp, #8
   2b41c:	pop	{r4, r5, r6, r7, r8, pc}
   2b420:	ldr	r0, [r4, #16]
   2b424:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b428:	ldr	r3, [pc, #3176]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b42c:	ldr	r2, [r3]
   2b430:	cmp	r2, #4
   2b434:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b438:	ldr	r3, [r3, #20]
   2b43c:	cmp	r3, #0
   2b440:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b444:	ldr	r1, [r4, #20]
   2b448:	ldr	r0, [pc, #3172]	; 2c0b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1845c>
   2b44c:	add	sp, sp, #8
   2b450:	pop	{r4, r5, r6, r7, r8, lr}
   2b454:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2b458:	ldr	r1, [r4, #16]
   2b45c:	ldrb	r2, [r1]
   2b460:	cmp	r2, #46	; 0x2e
   2b464:	beq	2ba50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df8>
   2b468:	cmp	r3, #5
   2b46c:	movne	r6, #0
   2b470:	beq	2bb04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17eac>
   2b474:	ldr	r5, [pc, #3100]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2b478:	mov	r3, #0
   2b47c:	ldr	r0, [r4, #20]
   2b480:	str	r3, [r5, #16]
   2b484:	str	r1, [r5, #12]
   2b488:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2b48c:	ldr	r3, [r5]
   2b490:	cmp	r3, #4
   2b494:	beq	2b4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17858>
   2b498:	ldr	r3, [r5, #12]
   2b49c:	cmp	r3, #0
   2b4a0:	bne	2b4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17858>
   2b4a4:	mov	r3, #0
   2b4a8:	str	r3, [r5, #12]
   2b4ac:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b4b0:	ldr	r3, [r4, #12]
   2b4b4:	cmp	r3, #5
   2b4b8:	moveq	r3, #6
   2b4bc:	streq	r3, [r4, #12]
   2b4c0:	cmp	r6, #0
   2b4c4:	beq	2b78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2b4c8:	ldr	r3, [r5, #32]
   2b4cc:	cmp	r3, #0
   2b4d0:	bne	2b6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a90>
   2b4d4:	ldrb	r3, [r6, #12]
   2b4d8:	cmp	r3, #0
   2b4dc:	bne	2b4a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1784c>
   2b4e0:	mov	r2, #1
   2b4e4:	str	r3, [r5, #20]
   2b4e8:	str	r2, [r5, #32]
   2b4ec:	ldr	r3, [r5, #44]	; 0x2c
   2b4f0:	str	r3, [r5, #28]
   2b4f4:	ldr	r8, [r4, #16]
   2b4f8:	mov	r3, #0
   2b4fc:	mov	r1, r8
   2b500:	mov	r2, #1
   2b504:	ldr	r0, [pc, #3112]	; 2c134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184dc>
   2b508:	bl	137a8 <bfd_hash_lookup@plt>
   2b50c:	subs	r7, r0, #0
   2b510:	beq	2bee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1828c>
   2b514:	ldrb	r3, [r6, #13]
   2b518:	tst	r3, #8
   2b51c:	bne	2b538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x178e0>
   2b520:	ldrb	r3, [r6, #12]
   2b524:	sub	r3, r3, #3
   2b528:	cmp	r3, #2
   2b52c:	ldrbls	r3, [r7, #17]
   2b530:	orrls	r3, r3, #1
   2b534:	strbls	r3, [r7, #17]
   2b538:	ldr	r2, [pc, #3064]	; 2c138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e0>
   2b53c:	ldr	r1, [r5]
   2b540:	ldr	r3, [pc, #3060]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b544:	ldr	r2, [r2]
   2b548:	cmp	r1, #4
   2b54c:	strb	r2, [r7, #16]
   2b550:	str	r3, [r7, #12]
   2b554:	ldr	r1, [r5, #28]
   2b558:	beq	2be24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181cc>
   2b55c:	ldrb	r3, [r6, #13]
   2b560:	ldr	r2, [r4, #4]
   2b564:	clz	r2, r2
   2b568:	lsr	r2, r2, #5
   2b56c:	bic	r3, r3, #4
   2b570:	orr	r3, r3, r2, lsl #2
   2b574:	ldr	r0, [r5, #20]
   2b578:	strb	r3, [r6, #13]
   2b57c:	ldrh	r3, [r6, #12]
   2b580:	ldr	r2, [r4, #24]
   2b584:	str	r0, [r6, #24]
   2b588:	and	r3, r3, #63232	; 0xf700
   2b58c:	orr	r3, r3, #2048	; 0x800
   2b590:	orr	r3, r3, #3
   2b594:	cmp	r2, #0
   2b598:	str	r1, [r6, #20]
   2b59c:	strh	r3, [r6, #12]
   2b5a0:	beq	2b5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1796c>
   2b5a4:	ldr	r3, [pc, #2968]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2b5a8:	mov	r2, r6
   2b5ac:	mov	r1, r3
   2b5b0:	ldr	r3, [r3, #48]	; 0x30
   2b5b4:	mov	r0, r3
   2b5b8:	ldr	r3, [r3, #4]
   2b5bc:	ldr	r3, [r3, #416]	; 0x1a0
   2b5c0:	blx	r3
   2b5c4:	ldr	r2, [r5, #16]
   2b5c8:	sub	r3, r2, #1
   2b5cc:	cmn	r3, #3
   2b5d0:	bhi	2b4a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1784c>
   2b5d4:	ldr	r3, [pc, #2920]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2b5d8:	mov	r1, r6
   2b5dc:	ldr	r3, [r3, #48]	; 0x30
   2b5e0:	mov	r0, r3
   2b5e4:	ldr	r3, [r3, #4]
   2b5e8:	ldr	r3, [r3, #372]	; 0x174
   2b5ec:	blx	r3
   2b5f0:	b	2b4a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1784c>
   2b5f4:	cmp	r3, #45	; 0x2d
   2b5f8:	beq	2b71c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ac4>
   2b5fc:	cmp	r3, #126	; 0x7e
   2b600:	beq	2b70c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ab4>
   2b604:	cmp	r3, #33	; 0x21
   2b608:	beq	2b6f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17aa0>
   2b60c:	ldr	r1, [pc, #2724]	; 2c0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18460>
   2b610:	ldr	r0, [pc, #2872]	; 2c150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f8>
   2b614:	add	sp, sp, #8
   2b618:	pop	{r4, r5, r6, r7, r8, lr}
   2b61c:	b	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2b620:	ldr	r2, [pc, #2708]	; 2c0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18464>
   2b624:	cmp	r3, r2
   2b628:	bne	2b60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179b4>
   2b62c:	ldr	r3, [r5]
   2b630:	cmp	r3, #0
   2b634:	beq	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2b638:	ldr	r3, [pc, #2812]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b63c:	ldr	r2, [r5, #44]	; 0x2c
   2b640:	cmp	r2, r3
   2b644:	beq	2c5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1895c>
   2b648:	mov	r3, #0
   2b64c:	str	r3, [r5, #32]
   2b650:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b654:	cmp	r3, #336	; 0x150
   2b658:	beq	2bcc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1806c>
   2b65c:	ldr	r2, [pc, #2652]	; 2c0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18468>
   2b660:	cmp	r3, r2
   2b664:	bne	2b6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a88>
   2b668:	ldr	r5, [r4, #16]
   2b66c:	ldr	r1, [pc, #2640]	; 2c0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1846c>
   2b670:	mov	r0, r5
   2b674:	bl	13268 <strcmp@plt>
   2b678:	cmp	r0, #0
   2b67c:	beq	2b820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17bc8>
   2b680:	mov	r0, r5
   2b684:	ldr	r1, [pc, #2620]	; 2c0c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18470>
   2b688:	bl	13268 <strcmp@plt>
   2b68c:	cmp	r0, #0
   2b690:	bne	2c44c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187f4>
   2b694:	ldr	r3, [pc, #2732]	; 2c148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f0>
   2b698:	mov	r2, #1
   2b69c:	str	r2, [r6, #12]
   2b6a0:	ldr	r3, [r3, #100]	; 0x64
   2b6a4:	sub	r6, r6, #20
   2b6a8:	str	r3, [r6, #20]
   2b6ac:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b6b0:	ldr	r5, [pc, #2580]	; 2c0cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18474>
   2b6b4:	cmp	r3, r5
   2b6b8:	bge	2bd88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18130>
   2b6bc:	sub	r2, r2, #23
   2b6c0:	cmp	r3, r2
   2b6c4:	beq	2bd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x180fc>
   2b6c8:	add	r2, r2, #16
   2b6cc:	cmp	r3, r2
   2b6d0:	beq	2bc5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18004>
   2b6d4:	sub	r2, r2, #56	; 0x38
   2b6d8:	cmp	r3, r2
   2b6dc:	beq	2bbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f9c>
   2b6e0:	ldr	r1, [pc, #2536]	; 2c0d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18478>
   2b6e4:	b	2b610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179b8>
   2b6e8:	ldr	r3, [r5, #28]
   2b6ec:	cmp	r3, #0
   2b6f0:	bne	2b4f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1789c>
   2b6f4:	b	2b4ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17894>
   2b6f8:	ldr	r3, [r5, #20]
   2b6fc:	clz	r3, r3
   2b700:	lsr	r3, r3, #5
   2b704:	str	r3, [r5, #20]
   2b708:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b70c:	ldr	r3, [r5, #20]
   2b710:	mvn	r3, r3
   2b714:	str	r3, [r5, #20]
   2b718:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b71c:	ldr	r3, [r5, #20]
   2b720:	rsb	r3, r3, #0
   2b724:	str	r3, [r5, #20]
   2b728:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b72c:	ldr	r3, [r5]
   2b730:	cmp	r3, #0
   2b734:	beq	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2b738:	ldr	r3, [r5, #28]
   2b73c:	ldr	r0, [r5, #36]	; 0x24
   2b740:	cmp	r3, #0
   2b744:	ldrne	r2, [r3, #28]
   2b748:	ldrne	r3, [r5, #20]
   2b74c:	addne	r3, r3, r2
   2b750:	strne	r3, [r5, #20]
   2b754:	ldr	r4, [r5, #20]
   2b758:	ldr	r2, [pc, #2524]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b75c:	mov	r3, #0
   2b760:	cmp	r4, #1
   2b764:	str	r2, [r5, #28]
   2b768:	str	r3, [r5, #8]
   2b76c:	bls	2b784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b2c>
   2b770:	add	r0, r0, r4
   2b774:	sub	r0, r0, #1
   2b778:	mov	r1, r4
   2b77c:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   2b780:	mul	r0, r4, r0
   2b784:	str	r0, [r5, #20]
   2b788:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b78c:	ldr	r0, [pc, #2480]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2b790:	mov	r2, #1
   2b794:	ldr	r1, [r4, #16]
   2b798:	mov	r3, r6
   2b79c:	ldr	r0, [r0, #28]
   2b7a0:	str	r2, [sp]
   2b7a4:	bl	13640 <bfd_link_hash_lookup@plt>
   2b7a8:	subs	r6, r0, #0
   2b7ac:	bne	2b4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17870>
   2b7b0:	mov	r2, #5
   2b7b4:	ldr	r1, [pc, #2328]	; 2c0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1847c>
   2b7b8:	bl	13460 <dcgettext@plt>
   2b7bc:	ldr	r1, [r4, #16]
   2b7c0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2b7c4:	b	2b4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17870>
   2b7c8:	ldr	r3, [r5]
   2b7cc:	cmp	r3, #0
   2b7d0:	beq	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2b7d4:	ldr	r4, [r5, #20]
   2b7d8:	ldr	r0, [r5, #36]	; 0x24
   2b7dc:	cmp	r4, #1
   2b7e0:	bls	2b7f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ba0>
   2b7e4:	add	r0, r0, r4
   2b7e8:	sub	r0, r0, #1
   2b7ec:	mov	r1, r4
   2b7f0:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   2b7f4:	mul	r0, r4, r0
   2b7f8:	ldr	r2, [r5, #44]	; 0x2c
   2b7fc:	mov	r3, #1
   2b800:	mov	r1, #0
   2b804:	ldr	ip, [r2, #28]
   2b808:	str	r3, [r5, #8]
   2b80c:	sub	r0, r0, ip
   2b810:	str	r0, [r5, #20]
   2b814:	strd	r2, [r5, #28]
   2b818:	str	r1, [r5, #24]
   2b81c:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b820:	ldr	r3, [pc, #2336]	; 2c148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f0>
   2b824:	mov	r2, #1
   2b828:	str	r2, [r6, #12]
   2b82c:	ldr	r3, [r3, #96]	; 0x60
   2b830:	sub	r6, r6, #20
   2b834:	str	r3, [r6, #20]
   2b838:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b83c:	cmp	r3, #43	; 0x2b
   2b840:	beq	2c1e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1858c>
   2b844:	cmp	r3, #45	; 0x2d
   2b848:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b84c:	ldr	r3, [r5, #20]
   2b850:	ldr	r2, [r5, #28]
   2b854:	sub	r8, r8, r3
   2b858:	cmp	r2, r7
   2b85c:	str	r8, [r5, #20]
   2b860:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b864:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2b868:	cmp	r3, #94	; 0x5e
   2b86c:	beq	2c3ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18754>
   2b870:	bgt	2b8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c98>
   2b874:	cmp	r3, #60	; 0x3c
   2b878:	beq	2c3e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18790>
   2b87c:	cmp	r3, #62	; 0x3e
   2b880:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b884:	ldr	r3, [r5, #20]
   2b888:	mov	r2, #0
   2b88c:	cmp	r3, r8
   2b890:	movcs	r8, #0
   2b894:	movcc	r8, #1
   2b898:	str	r8, [r5, #20]
   2b89c:	str	r2, [r5, #28]
   2b8a0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b8a4:	cmp	r3, #276	; 0x114
   2b8a8:	beq	2c370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18718>
   2b8ac:	bgt	2b958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d00>
   2b8b0:	ldr	r2, [pc, #2080]	; 2c0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18480>
   2b8b4:	cmp	r3, r2
   2b8b8:	beq	2c334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186dc>
   2b8bc:	bgt	2b924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ccc>
   2b8c0:	sub	r2, r2, #2
   2b8c4:	cmp	r3, r2
   2b8c8:	beq	2c3c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18770>
   2b8cc:	cmp	r3, #272	; 0x110
   2b8d0:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b8d4:	ldr	r3, [r5, #20]
   2b8d8:	mov	r2, #0
   2b8dc:	subs	r8, r3, r8
   2b8e0:	movne	r8, #1
   2b8e4:	str	r8, [r5, #20]
   2b8e8:	str	r2, [r5, #28]
   2b8ec:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b8f0:	cmp	r3, #124	; 0x7c
   2b8f4:	beq	2c354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186fc>
   2b8f8:	ldr	r2, [pc, #2012]	; 2c0dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18484>
   2b8fc:	cmp	r3, r2
   2b900:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b904:	ldr	r2, [r5, #20]
   2b908:	mov	r3, #0
   2b90c:	orrs	r2, r8, r2
   2b910:	movne	r2, #1
   2b914:	moveq	r2, r3
   2b918:	str	r2, [r5, #20]
   2b91c:	str	r3, [r5, #28]
   2b920:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b924:	ldr	r2, [pc, #1972]	; 2c0e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18488>
   2b928:	cmp	r3, r2
   2b92c:	beq	2c38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18734>
   2b930:	add	r2, r2, #1
   2b934:	cmp	r3, r2
   2b938:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b93c:	ldr	r3, [r5, #20]
   2b940:	ldr	r2, [r5, #28]
   2b944:	lsl	r8, r8, r3
   2b948:	cmp	r2, r7
   2b94c:	str	r8, [r5, #20]
   2b950:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b954:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2b958:	ldr	r2, [pc, #1924]	; 2c0e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1848c>
   2b95c:	cmp	r3, r2
   2b960:	beq	2c234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185dc>
   2b964:	bgt	2ba24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17dcc>
   2b968:	sub	r2, r2, #14
   2b96c:	cmp	r3, r2
   2b970:	beq	2c2f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1869c>
   2b974:	cmp	r3, #292	; 0x124
   2b978:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2b97c:	ldr	r2, [r5]
   2b980:	mov	r3, #1
   2b984:	cmp	r2, #0
   2b988:	str	r3, [r5, #76]	; 0x4c
   2b98c:	beq	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2b990:	ldr	r3, [pc, #1956]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2b994:	ldr	r2, [r5, #44]	; 0x2c
   2b998:	cmp	r2, r3
   2b99c:	bne	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2b9a0:	ldr	r4, [r5, #36]	; 0x24
   2b9a4:	cmp	r8, #1
   2b9a8:	ldr	r6, [r5, #20]
   2b9ac:	movls	r0, r4
   2b9b0:	bls	2b9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d70>
   2b9b4:	sub	r0, r4, #1
   2b9b8:	add	r0, r0, r8
   2b9bc:	mov	r1, r8
   2b9c0:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   2b9c4:	mul	r0, r8, r0
   2b9c8:	ldr	r2, [r5, #48]	; 0x30
   2b9cc:	str	r0, [r5, #20]
   2b9d0:	cmp	r2, #4
   2b9d4:	ldreq	r3, [r5, #52]	; 0x34
   2b9d8:	streq	r3, [r5, #20]
   2b9dc:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2b9e0:	cmp	r2, #5
   2b9e4:	beq	2c758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b00>
   2b9e8:	sub	r3, r8, #1
   2b9ec:	and	r3, r3, r4
   2b9f0:	add	r3, r3, r0
   2b9f4:	cmp	r2, #6
   2b9f8:	str	r3, [r5, #20]
   2b9fc:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2ba00:	cmp	r2, #0
   2ba04:	bne	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2ba08:	mov	r1, #1
   2ba0c:	str	r3, [r5, #52]	; 0x34
   2ba10:	str	r6, [r5, #68]	; 0x44
   2ba14:	str	r8, [r5, #72]	; 0x48
   2ba18:	str	r2, [r5, #60]	; 0x3c
   2ba1c:	str	r1, [r5, #48]	; 0x30
   2ba20:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2ba24:	ldr	r2, [pc, #1724]	; 2c0e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18490>
   2ba28:	cmp	r3, r2
   2ba2c:	beq	2c200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185a8>
   2ba30:	add	r2, r2, #1
   2ba34:	cmp	r3, r2
   2ba38:	bne	2c210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185b8>
   2ba3c:	ldr	r3, [r5, #20]
   2ba40:	cmp	r3, r8
   2ba44:	bls	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2ba48:	str	r8, [r5, #20]
   2ba4c:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2ba50:	ldrb	r0, [r1, #1]
   2ba54:	cmp	r0, #0
   2ba58:	bne	2b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17810>
   2ba5c:	cmp	r3, #4
   2ba60:	beq	2ba78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e20>
   2ba64:	ldr	r1, [pc, #1664]	; 2c0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18494>
   2ba68:	mov	r2, #5
   2ba6c:	bl	13460 <dcgettext@plt>
   2ba70:	mov	r1, r4
   2ba74:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ba78:	ldr	r5, [pc, #1560]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2ba7c:	ldr	r3, [r5]
   2ba80:	cmp	r3, #0
   2ba84:	beq	2b260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17608>
   2ba88:	mov	r3, #1
   2ba8c:	ldr	r0, [r4, #20]
   2ba90:	str	r3, [r5, #4]
   2ba94:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2ba98:	ldr	r2, [r5]
   2ba9c:	mov	r3, #0
   2baa0:	cmp	r2, #1
   2baa4:	str	r3, [r5, #4]
   2baa8:	beq	2bfac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18354>
   2baac:	ldr	r3, [r5, #32]
   2bab0:	cmp	r3, #0
   2bab4:	bne	2bf1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182c4>
   2bab8:	ldr	r1, [pc, #1584]	; 2c0f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18498>
   2babc:	mov	r2, #5
   2bac0:	mov	r0, #0
   2bac4:	bl	13460 <dcgettext@plt>
   2bac8:	mov	r1, r4
   2bacc:	b	2b44c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177f4>
   2bad0:	ldr	r0, [r4, #20]
   2bad4:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2bad8:	str	r6, [r5, #32]
   2badc:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bae0:	ldr	r2, [pc, #1632]	; 2c148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f0>
   2bae4:	ldr	r2, [r2, #64]	; 0x40
   2bae8:	cmp	r2, #0
   2baec:	bne	2b3fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177a4>
   2baf0:	mov	r2, #1
   2baf4:	str	r1, [r5, #20]
   2baf8:	str	r3, [r5, #28]
   2bafc:	str	r2, [r5, #32]
   2bb00:	b	2b410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177b8>
   2bb04:	ldr	r0, [pc, #1592]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2bb08:	mov	r2, #1
   2bb0c:	mov	r3, #0
   2bb10:	ldr	r0, [r0, #28]
   2bb14:	str	r2, [sp]
   2bb18:	mov	r2, r3
   2bb1c:	bl	13640 <bfd_link_hash_lookup@plt>
   2bb20:	subs	r6, r0, #0
   2bb24:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bb28:	ldrb	r3, [r6, #12]
   2bb2c:	cmp	r3, #2
   2bb30:	bls	2bb40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ee8>
   2bb34:	ldrb	r3, [r6, #13]
   2bb38:	tst	r3, #4
   2bb3c:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bb40:	ldr	r1, [r4, #16]
   2bb44:	b	2b474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1781c>
   2bb48:	cmp	r3, #0
   2bb4c:	streq	r7, [r5, #28]
   2bb50:	moveq	r7, r3
   2bb54:	b	2b1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17570>
   2bb58:	ldr	r2, [pc, #1428]	; 2c0f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1849c>
   2bb5c:	ldr	r3, [r4, #20]
   2bb60:	ldr	r4, [r2]
   2bb64:	ldr	r6, [r3, #16]
   2bb68:	cmp	r4, #0
   2bb6c:	bne	2bb80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f28>
   2bb70:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bb74:	ldr	r4, [r4]
   2bb78:	cmp	r4, #0
   2bb7c:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bb80:	mov	r1, r6
   2bb84:	ldr	r0, [r4, #4]
   2bb88:	bl	13268 <strcmp@plt>
   2bb8c:	cmp	r0, #0
   2bb90:	bne	2bb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f1c>
   2bb94:	ldr	r8, [r4, #12]
   2bb98:	cmp	r8, #0
   2bb9c:	bne	2bf14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182bc>
   2bba0:	ldr	r3, [pc, #1440]	; 2c148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f0>
   2bba4:	ldr	r7, [r4, #8]
   2bba8:	ldr	r2, [r3]
   2bbac:	cmp	r2, #0
   2bbb0:	beq	2bbc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f70>
   2bbb4:	ldr	r1, [r3, #96]	; 0x60
   2bbb8:	mov	r0, r7
   2bbbc:	bl	3f0a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b448>
   2bbc0:	cmp	r1, #0
   2bbc4:	bne	2befc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182a4>
   2bbc8:	ldr	r2, [r5, #44]	; 0x2c
   2bbcc:	mov	r3, #1
   2bbd0:	mov	r1, #0
   2bbd4:	ldr	r0, [r2, #28]
   2bbd8:	str	r3, [r4, #12]
   2bbdc:	sub	r7, r7, r0
   2bbe0:	str	r7, [r5, #20]
   2bbe4:	str	r3, [r5, #8]
   2bbe8:	strd	r2, [r5, #28]
   2bbec:	str	r1, [r5, #24]
   2bbf0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bbf4:	sub	r5, r6, #20
   2bbf8:	ldr	r0, [r5, #12]
   2bbfc:	ldr	r6, [r4, #16]
   2bc00:	cmp	r0, #0
   2bc04:	beq	2bc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc0>
   2bc08:	mov	r1, r6
   2bc0c:	bl	13268 <strcmp@plt>
   2bc10:	subs	r3, r0, #0
   2bc14:	beq	2c054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183fc>
   2bc18:	ldrb	r3, [r6]
   2bc1c:	cmp	r3, #46	; 0x2e
   2bc20:	bne	2be48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f0>
   2bc24:	ldrb	r3, [r6, #1]
   2bc28:	cmp	r3, #0
   2bc2c:	bne	2be48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f0>
   2bc30:	ldr	r0, [r5, #44]	; 0x2c
   2bc34:	ldr	r2, [r5, #36]	; 0x24
   2bc38:	mov	r1, #1
   2bc3c:	ldr	ip, [r0, #28]
   2bc40:	str	r3, [r5, #24]
   2bc44:	sub	r3, r2, ip
   2bc48:	str	r0, [r5, #28]
   2bc4c:	str	r3, [r5, #20]
   2bc50:	str	r1, [r5, #8]
   2bc54:	str	r1, [r5, #32]
   2bc58:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bc5c:	ldr	r1, [pc, #1248]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2bc60:	mov	r3, #1
   2bc64:	ldr	r2, [r4, #16]
   2bc68:	ldr	r0, [r1, #48]	; 0x30
   2bc6c:	str	r3, [sp, #4]
   2bc70:	str	r7, [sp]
   2bc74:	mov	r3, r7
   2bc78:	bl	132f8 <bfd_wrapped_link_hash_lookup@plt>
   2bc7c:	cmp	r0, #0
   2bc80:	beq	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2bc84:	ldrb	r3, [r0, #12]
   2bc88:	sub	r3, r3, #3
   2bc8c:	cmp	r3, #2
   2bc90:	bhi	2bedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18284>
   2bc94:	ldrb	r3, [r0, #13]
   2bc98:	tst	r3, #8
   2bc9c:	bne	2c570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18918>
   2bca0:	mov	r0, #1
   2bca4:	ldr	r3, [pc, #1004]	; 2c098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18440>
   2bca8:	mov	r2, #0
   2bcac:	mov	r1, #1
   2bcb0:	str	r0, [r3, #20]
   2bcb4:	str	r1, [r3, #32]
   2bcb8:	str	r2, [r3, #24]
   2bcbc:	str	r2, [r3, #28]
   2bcc0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bcc4:	ldr	r3, [r6, #-20]	; 0xffffffec
   2bcc8:	sub	r6, r6, #20
   2bccc:	cmp	r3, #0
   2bcd0:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bcd4:	mov	r1, r7
   2bcd8:	ldr	r0, [r4, #16]
   2bcdc:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   2bce0:	subs	r3, r0, #0
   2bce4:	beq	2c484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1882c>
   2bce8:	ldr	r2, [r3, #20]
   2bcec:	mov	r3, #1
   2bcf0:	str	r2, [r6, #20]
   2bcf4:	str	r7, [r6, #24]
   2bcf8:	str	r7, [r6, #28]
   2bcfc:	str	r3, [r6, #32]
   2bd00:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd04:	ldr	r3, [r6, #-20]	; 0xffffffec
   2bd08:	sub	r5, r6, #20
   2bd0c:	cmp	r3, #0
   2bd10:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd14:	mov	r2, r7
   2bd18:	mov	r1, r7
   2bd1c:	ldr	r0, [r4, #16]
   2bd20:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   2bd24:	subs	r3, r0, #0
   2bd28:	beq	2c154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184fc>
   2bd2c:	ldrb	r2, [r3, #84]	; 0x54
   2bd30:	tst	r2, #1
   2bd34:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd38:	ldr	r2, [r3, #28]
   2bd3c:	mov	r3, #1
   2bd40:	str	r2, [r5, #28]
   2bd44:	str	r7, [r5, #20]
   2bd48:	str	r7, [r5, #24]
   2bd4c:	str	r3, [r5, #32]
   2bd50:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd54:	ldr	r3, [r6, #-20]	; 0xffffffec
   2bd58:	cmp	r3, #0
   2bd5c:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd60:	cmp	r3, #1
   2bd64:	beq	2bedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18284>
   2bd68:	ldr	r3, [pc, #980]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2bd6c:	mov	r1, r3
   2bd70:	ldr	r3, [r3, #48]	; 0x30
   2bd74:	mov	r0, r3
   2bd78:	ldr	r3, [r3, #4]
   2bd7c:	ldr	r3, [r3, #348]	; 0x15c
   2bd80:	blx	r3
   2bd84:	b	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2bd88:	ldr	r3, [r6, #-20]	; 0xffffffec
   2bd8c:	cmp	r3, #0
   2bd90:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bd94:	mov	r2, r7
   2bd98:	mov	r1, r7
   2bd9c:	ldr	r0, [r4, #16]
   2bda0:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   2bda4:	subs	r3, r0, #0
   2bda8:	beq	2c408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187b0>
   2bdac:	ldr	r3, [r3, #28]
   2bdb0:	cmp	r3, #0
   2bdb4:	beq	2c42c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187d4>
   2bdb8:	ldr	r2, [r4]
   2bdbc:	cmp	r2, r5
   2bdc0:	beq	2c724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18acc>
   2bdc4:	ldr	r3, [r3, #64]	; 0x40
   2bdc8:	mov	r0, #1
   2bdcc:	lsl	r0, r0, r3
   2bdd0:	b	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2bdd4:	ldr	r3, [r6, #-20]	; 0xffffffec
   2bdd8:	sub	r6, r6, #20
   2bddc:	cmp	r3, #0
   2bde0:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bde4:	mov	r1, r7
   2bde8:	ldr	r0, [r4, #16]
   2bdec:	bl	1ffbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc364>
   2bdf0:	subs	r3, r0, #0
   2bdf4:	beq	2c484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1882c>
   2bdf8:	ldr	r1, [r6, #44]	; 0x2c
   2bdfc:	ldr	r3, [r3, #16]
   2be00:	mov	r2, #1
   2be04:	ldr	r0, [r1, #28]
   2be08:	str	r7, [r6, #24]
   2be0c:	sub	r3, r3, r0
   2be10:	str	r3, [r6, #20]
   2be14:	str	r1, [r6, #28]
   2be18:	str	r2, [r6, #8]
   2be1c:	str	r2, [r6, #32]
   2be20:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2be24:	ldr	r2, [r5, #8]
   2be28:	cmp	r2, #0
   2be2c:	beq	2b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17904>
   2be30:	cmp	r1, r3
   2be34:	bne	2b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17904>
   2be38:	bl	22ac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee68>
   2be3c:	ldr	r1, [r5, #28]
   2be40:	str	r0, [r7, #12]
   2be44:	b	2b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17904>
   2be48:	ldr	r7, [pc, #756]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2be4c:	mov	r8, #1
   2be50:	mov	ip, #0
   2be54:	ldr	r0, [r7, #48]	; 0x30
   2be58:	mov	r2, r6
   2be5c:	mov	r1, r7
   2be60:	str	r8, [sp, #4]
   2be64:	mov	r3, r8
   2be68:	str	ip, [sp]
   2be6c:	bl	132f8 <bfd_wrapped_link_hash_lookup@plt>
   2be70:	subs	r6, r0, #0
   2be74:	beq	2c470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18818>
   2be78:	ldrb	r3, [r6, #12]
   2be7c:	sub	r2, r3, #3
   2be80:	cmp	r2, #1
   2be84:	bls	2c014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183bc>
   2be88:	ldr	r2, [r5]
   2be8c:	cmp	r2, #4
   2be90:	beq	2bea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18250>
   2be94:	cmp	r2, #1
   2be98:	beq	2c180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18528>
   2be9c:	ldr	r2, [r5, #4]
   2bea0:	cmp	r2, #0
   2bea4:	beq	2c180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18528>
   2bea8:	mov	r2, #5
   2beac:	ldr	r1, [pc, #580]	; 2c0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184a0>
   2beb0:	mov	r0, #0
   2beb4:	bl	13460 <dcgettext@plt>
   2beb8:	ldr	r2, [r4, #16]
   2bebc:	mov	r1, r4
   2bec0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2bec4:	ldr	r3, [r5, #16]
   2bec8:	cmp	r3, #0
   2becc:	mvnne	r3, #0
   2bed0:	streq	r6, [r5, #16]
   2bed4:	strne	r3, [r5, #16]
   2bed8:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bedc:	mov	r0, r7
   2bee0:	b	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2bee4:	mov	r2, #5
   2bee8:	ldr	r1, [pc, #524]	; 2c0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184a4>
   2beec:	bl	13460 <dcgettext@plt>
   2bef0:	mov	r1, r8
   2bef4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2bef8:	b	2b514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x178bc>
   2befc:	ldr	r1, [pc, #508]	; 2c100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184a8>
   2bf00:	mov	r0, r8
   2bf04:	mov	r2, #5
   2bf08:	bl	13460 <dcgettext@plt>
   2bf0c:	mov	r1, r6
   2bf10:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2bf14:	ldr	r7, [r4, #8]
   2bf18:	b	2bbc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f70>
   2bf1c:	ldr	r2, [r5, #44]	; 0x2c
   2bf20:	ldr	r3, [pc, #476]	; 2c104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ac>
   2bf24:	cmp	r2, r3
   2bf28:	beq	2bab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e60>
   2bf2c:	ldr	r0, [r5, #40]	; 0x28
   2bf30:	cmp	r0, #0
   2bf34:	moveq	r2, #5
   2bf38:	ldreq	r1, [pc, #456]	; 2c108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184b0>
   2bf3c:	beq	2bac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e6c>
   2bf40:	ldr	r1, [r5]
   2bf44:	ldr	r3, [pc, #496]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2bf48:	cmp	r2, r3
   2bf4c:	cmpne	r1, #2
   2bf50:	bhi	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bf54:	ldr	r1, [r5, #28]
   2bf58:	ldr	r6, [r5, #20]
   2bf5c:	cmp	r1, #0
   2bf60:	ldrne	r1, [r1, #28]
   2bf64:	ldreq	r1, [r2, #28]
   2bf68:	add	r6, r6, r1
   2bf6c:	ldr	r1, [r5, #36]	; 0x24
   2bf70:	cmp	r2, r3
   2bf74:	cmpne	r1, r6
   2bf78:	strls	r6, [r5, #36]	; 0x24
   2bf7c:	strls	r6, [r0]
   2bf80:	bls	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2bf84:	mov	r2, #5
   2bf88:	ldr	r1, [pc, #380]	; 2c10c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184b4>
   2bf8c:	mov	r0, #0
   2bf90:	bl	13460 <dcgettext@plt>
   2bf94:	mov	r3, r6
   2bf98:	ldr	r2, [r5, #36]	; 0x24
   2bf9c:	mov	r1, r4
   2bfa0:	add	sp, sp, #8
   2bfa4:	pop	{r4, r5, r6, r7, r8, lr}
   2bfa8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2bfac:	ldr	r3, [pc, #392]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2bfb0:	ldr	r2, [r5, #44]	; 0x2c
   2bfb4:	sub	r6, r3, #168	; 0xa8
   2bfb8:	cmp	r2, r3
   2bfbc:	cmpne	r2, r6
   2bfc0:	ldr	r3, [r5, #32]
   2bfc4:	beq	2c45c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18804>
   2bfc8:	cmp	r3, #0
   2bfcc:	beq	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2bfd0:	ldr	r3, [r5, #20]
   2bfd4:	cmp	r3, #0
   2bfd8:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2bfdc:	ldr	r0, [r4, #20]
   2bfe0:	ldr	r3, [r0, #12]
   2bfe4:	cmp	r3, #7
   2bfe8:	beq	2c78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b34>
   2bfec:	bl	2afd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1737c>
   2bff0:	cmp	r0, #0
   2bff4:	beq	2c490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18838>
   2bff8:	ldr	r3, [r5, #32]
   2bffc:	cmp	r3, #0
   2c000:	bne	2c690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a38>
   2c004:	ldr	r3, [r5]
   2c008:	cmp	r3, #1
   2c00c:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c010:	b	2bab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e60>
   2c014:	ldr	r3, [r6, #20]
   2c018:	ldr	r0, [r3, #60]	; 0x3c
   2c01c:	cmp	r0, #0
   2c020:	beq	2c624 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189cc>
   2c024:	ldr	r2, [pc, #272]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2c028:	cmp	r0, r2
   2c02c:	beq	2c6a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a48>
   2c030:	ldr	r2, [r3, #56]	; 0x38
   2c034:	ldr	r3, [r6, #24]
   2c038:	mov	r1, #1
   2c03c:	add	r3, r3, r2
   2c040:	mov	r2, #0
   2c044:	str	r3, [r5, #20]
   2c048:	strd	r0, [r5, #28]
   2c04c:	str	r2, [r5, #24]
   2c050:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c054:	ldr	r1, [pc, #232]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2c058:	mov	ip, #1
   2c05c:	str	r3, [sp]
   2c060:	mov	r2, r6
   2c064:	ldr	r0, [r1, #48]	; 0x30
   2c068:	str	ip, [sp, #4]
   2c06c:	bl	132f8 <bfd_wrapped_link_hash_lookup@plt>
   2c070:	cmp	r0, #0
   2c074:	beq	2c088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18430>
   2c078:	ldrb	r3, [r0, #12]
   2c07c:	sub	r3, r3, #3
   2c080:	cmp	r3, #1
   2c084:	bls	2c648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189f0>
   2c088:	mov	r3, #0
   2c08c:	ldr	r6, [r4, #16]
   2c090:	str	r3, [r5, #12]
   2c094:	b	2bc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc0>
   2c098:	strdeq	r8, [ip], -r4
   2c09c:	andeq	r0, r0, r1, lsr r1
   2c0a0:	andeq	r0, r0, lr, lsl #2
   2c0a4:	andeq	r8, ip, r8, lsl #4
   2c0a8:	andeq	r0, r0, r7, ror #2
   2c0ac:	andeq	r0, r0, r2, asr #2
   2c0b0:	andeq	r0, r0, lr, asr #2
   2c0b4:	muleq	r5, r0, r5
   2c0b8:	muleq	r0, pc, r1	; <UNPREDICTABLE>
   2c0bc:	andeq	r0, r0, r6, lsr #2
   2c0c0:	andeq	r0, r0, r2, lsl #3
   2c0c4:	andeq	r1, r5, ip, ror #16
   2c0c8:	andeq	r1, r5, r8, ror r8
   2c0cc:	andeq	r0, r0, r1, asr #2
   2c0d0:	andeq	r0, r0, sp, lsl #7
   2c0d4:	andeq	r1, r5, ip, lsl r7
   2c0d8:	andeq	r0, r0, r1, lsl r1
   2c0dc:	andeq	r0, r0, sp, lsl #2
   2c0e0:	andeq	r0, r0, r2, lsl r1
   2c0e4:	andeq	r0, r0, r5, lsr #2
   2c0e8:	andeq	r0, r0, r5, asr #2
   2c0ec:	andeq	r1, r5, r0, lsr #12
   2c0f0:	andeq	r1, r5, ip, asr r6
   2c0f4:	andeq	r8, ip, ip, asr #4
   2c0f8:			; <UNDEFINED> instruction: 0x000517b0
   2c0fc:	andeq	r1, r5, ip, lsr r7
   2c100:			; <UNDEFINED> instruction: 0x000515b0
   2c104:	andeq	r7, ip, r0, lsl #16
   2c108:	muleq	r5, r0, r6
   2c10c:	ldrdeq	r1, [r5], -r8
   2c110:	muleq	r0, r7, r2
   2c114:	andeq	r1, r5, ip, ror #15
   2c118:	strdeq	r8, [ip], -r4
   2c11c:	andeq	r1, r5, r8, lsl #17
   2c120:	andeq	pc, r4, ip, asr #1
   2c124:	andeq	r1, r5, r8, lsr #16
   2c128:	andeq	r0, r0, r7, lsl r1
   2c12c:	strdeq	r1, [r5], -r4
   2c130:	andeq	r1, r5, ip, lsl #12
   2c134:	andeq	r7, ip, r0, lsr #26
   2c138:	muleq	ip, r8, ip
   2c13c:	andeq	r7, ip, r8, lsr #17
   2c140:	andeq	r1, r5, r0, ror r7
   2c144:	andeq	r8, ip, ip, lsl #1
   2c148:	andeq	r8, ip, r4, ror r1
   2c14c:	andeq	r0, r0, fp, asr #9
   2c150:	muleq	r5, ip, r5
   2c154:	ldr	r3, [r6, #-20]	; 0xffffffec
   2c158:	cmp	r3, #4
   2c15c:	moveq	r2, #5
   2c160:	ldreq	r1, [pc, #-84]	; 2c114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184bc>
   2c164:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c168:	bl	13460 <dcgettext@plt>
   2c16c:	ldr	r2, [r4, #16]
   2c170:	mov	r1, r4
   2c174:	add	sp, sp, #8
   2c178:	pop	{r4, r5, r6, r7, r8, lr}
   2c17c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c180:	cmp	r3, #0
   2c184:	bne	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c188:	ldr	r1, [r6, #16]
   2c18c:	mov	r2, #1
   2c190:	cmp	r1, #0
   2c194:	str	r3, [r6, #20]
   2c198:	strb	r2, [r6, #12]
   2c19c:	bne	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c1a0:	ldr	r0, [r7, #28]
   2c1a4:	ldr	r3, [r0, #32]
   2c1a8:	cmp	r6, r3
   2c1ac:	beq	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c1b0:	mov	r1, r6
   2c1b4:	bl	13634 <bfd_link_add_undef@plt>
   2c1b8:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c1bc:	ldr	r1, [r5, #20]
   2c1c0:	cmp	r1, #0
   2c1c4:	beq	2c5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189a4>
   2c1c8:	mov	r0, r8
   2c1cc:	bl	3f0c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b468>
   2c1d0:	str	r0, [r5, #20]
   2c1d4:	ldr	r3, [r5, #28]
   2c1d8:	cmp	r3, r7
   2c1dc:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c1e0:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c1e4:	ldr	r3, [r5, #20]
   2c1e8:	ldr	r2, [r5, #28]
   2c1ec:	add	r8, r3, r8
   2c1f0:	cmp	r2, r7
   2c1f4:	str	r8, [r5, #20]
   2c1f8:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c1fc:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c200:	ldr	r3, [r5, #20]
   2c204:	cmp	r3, r8
   2c208:	bcs	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c20c:	b	2ba48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df0>
   2c210:	ldr	r1, [pc, #-264]	; 2c110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184b8>
   2c214:	b	2b610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179b8>
   2c218:	ldr	r1, [r5, #20]
   2c21c:	cmp	r1, #0
   2c220:	beq	2c5d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1897c>
   2c224:	mov	r0, r8
   2c228:	bl	3f2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b688>
   2c22c:	str	r1, [r5, #20]
   2c230:	b	2c1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1857c>
   2c234:	ldr	r3, [r5]
   2c238:	ldr	r2, [r5, #20]
   2c23c:	cmp	r3, #0
   2c240:	mov	r3, #2
   2c244:	str	r2, [r5, #56]	; 0x38
   2c248:	str	r3, [r5, #76]	; 0x4c
   2c24c:	beq	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2c250:	ldr	r3, [pc, #-284]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2c254:	ldr	r1, [r5, #44]	; 0x2c
   2c258:	cmp	r1, r3
   2c25c:	bne	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2c260:	ldr	r3, [r5, #48]	; 0x30
   2c264:	sub	ip, r3, #4
   2c268:	cmp	r3, #1
   2c26c:	cmpne	ip, #2
   2c270:	sub	r1, r3, #4
   2c274:	sub	r0, r3, #1
   2c278:	clz	r1, r1
   2c27c:	clz	r0, r0
   2c280:	lsr	r1, r1, #5
   2c284:	lsr	r0, r0, #5
   2c288:	bhi	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2c28c:	orrs	r1, r0, r1
   2c290:	beq	2ba48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df0>
   2c294:	cmp	r3, #4
   2c298:	add	r3, r2, r8
   2c29c:	str	r3, [r5, #60]	; 0x3c
   2c2a0:	bne	2c77c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b24>
   2c2a4:	ldr	r1, [r5, #68]	; 0x44
   2c2a8:	sub	r0, r1, #1
   2c2ac:	tst	r3, r0
   2c2b0:	beq	2ba48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df0>
   2c2b4:	add	r3, r3, r0
   2c2b8:	rsb	r1, r1, #0
   2c2bc:	and	r3, r3, r1
   2c2c0:	sub	r2, r3, r2
   2c2c4:	str	r2, [r5, #20]
   2c2c8:	str	r3, [r5, #60]	; 0x3c
   2c2cc:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c2d0:	cmp	r8, #0
   2c2d4:	beq	2c2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1868c>
   2c2d8:	ldr	r8, [r5, #20]
   2c2dc:	adds	r8, r8, #0
   2c2e0:	movne	r8, #1
   2c2e4:	mov	r3, #0
   2c2e8:	str	r8, [r5, #20]
   2c2ec:	str	r3, [r5, #28]
   2c2f0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c2f4:	ldr	r4, [r5, #20]
   2c2f8:	cmp	r4, #1
   2c2fc:	bls	2ba48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df0>
   2c300:	sub	r0, r4, #1
   2c304:	add	r0, r0, r8
   2c308:	mov	r1, r4
   2c30c:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   2c310:	mul	r8, r4, r0
   2c314:	b	2ba48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17df0>
   2c318:	ldr	r3, [r5, #20]
   2c31c:	ldr	r2, [r5, #28]
   2c320:	mul	r8, r8, r3
   2c324:	cmp	r2, r7
   2c328:	str	r8, [r5, #20]
   2c32c:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c330:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c334:	ldr	r3, [r5, #20]
   2c338:	mov	r2, #0
   2c33c:	cmp	r3, r8
   2c340:	movcc	r8, #0
   2c344:	movcs	r8, #1
   2c348:	str	r8, [r5, #20]
   2c34c:	str	r2, [r5, #28]
   2c350:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c354:	ldr	r3, [r5, #20]
   2c358:	ldr	r2, [r5, #28]
   2c35c:	orr	r8, r3, r8
   2c360:	cmp	r2, r7
   2c364:	str	r8, [r5, #20]
   2c368:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c36c:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c370:	ldr	r3, [r5, #20]
   2c374:	ldr	r2, [r5, #28]
   2c378:	lsr	r8, r8, r3
   2c37c:	cmp	r2, r7
   2c380:	str	r8, [r5, #20]
   2c384:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c388:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c38c:	ldr	r3, [r5, #20]
   2c390:	mov	r2, #0
   2c394:	cmp	r3, r8
   2c398:	movhi	r8, #0
   2c39c:	movls	r8, #1
   2c3a0:	str	r8, [r5, #20]
   2c3a4:	str	r2, [r5, #28]
   2c3a8:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c3ac:	ldr	r3, [r5, #20]
   2c3b0:	ldr	r2, [r5, #28]
   2c3b4:	eor	r8, r8, r3
   2c3b8:	cmp	r2, r7
   2c3bc:	str	r8, [r5, #20]
   2c3c0:	bne	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c3c4:	b	2b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175c4>
   2c3c8:	ldr	r3, [r5, #20]
   2c3cc:	mov	r2, #0
   2c3d0:	sub	r8, r3, r8
   2c3d4:	clz	r8, r8
   2c3d8:	lsr	r8, r8, #5
   2c3dc:	str	r8, [r5, #20]
   2c3e0:	str	r2, [r5, #28]
   2c3e4:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c3e8:	ldr	r3, [r5, #20]
   2c3ec:	mov	r2, #0
   2c3f0:	cmp	r3, r8
   2c3f4:	movls	r8, #0
   2c3f8:	movhi	r8, #1
   2c3fc:	str	r8, [r5, #20]
   2c400:	str	r2, [r5, #28]
   2c404:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c408:	ldr	r3, [r6, #-20]	; 0xffffffec
   2c40c:	cmp	r3, #4
   2c410:	bne	2c42c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187d4>
   2c414:	mov	r2, #5
   2c418:	ldr	r1, [pc, #-780]	; 2c114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184bc>
   2c41c:	bl	13460 <dcgettext@plt>
   2c420:	ldr	r2, [r4, #16]
   2c424:	mov	r1, r4
   2c428:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c42c:	ldr	r3, [pc, #-796]	; 2c118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184c0>
   2c430:	mov	r2, #0
   2c434:	mov	r1, #1
   2c438:	str	r1, [r3, #32]
   2c43c:	str	r2, [r3, #20]
   2c440:	str	r2, [r3, #24]
   2c444:	str	r2, [r3, #28]
   2c448:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c44c:	mov	r0, r7
   2c450:	mov	r2, #5
   2c454:	ldr	r1, [pc, #-832]	; 2c11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184c4>
   2c458:	b	2c168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18510>
   2c45c:	cmp	r3, #0
   2c460:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c464:	cmp	r2, r6
   2c468:	beq	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c46c:	b	2bf2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182d4>
   2c470:	mov	r2, #5
   2c474:	ldr	r1, [pc, #-860]	; 2c120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184c8>
   2c478:	bl	13460 <dcgettext@plt>
   2c47c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c480:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c484:	mov	r2, #5
   2c488:	ldr	r1, [pc, #-876]	; 2c124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184cc>
   2c48c:	b	2c168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18510>
   2c490:	ldr	r3, [r4, #20]
   2c494:	ldr	r2, [r3, #12]
   2c498:	cmp	r2, #0
   2c49c:	beq	2c79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b44>
   2c4a0:	ldr	r2, [r3, #12]
   2c4a4:	cmp	r2, #2
   2c4a8:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4ac:	ldr	r2, [pc, #-908]	; 2c128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184d0>
   2c4b0:	ldr	r1, [r3]
   2c4b4:	cmp	r1, r2
   2c4b8:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4bc:	ldr	r2, [r3, #16]
   2c4c0:	ldr	r3, [r2, #12]
   2c4c4:	cmp	r3, #1
   2c4c8:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4cc:	ldr	r3, [r2, #16]
   2c4d0:	ldr	r1, [r3, #12]
   2c4d4:	cmp	r1, #0
   2c4d8:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4dc:	ldr	r1, [r3]
   2c4e0:	cmp	r1, #272	; 0x110
   2c4e4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4e8:	ldr	r1, [r3, #16]
   2c4ec:	ldr	r0, [r1, #12]
   2c4f0:	cmp	r0, #3
   2c4f4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c4f8:	ldr	ip, [r1]
   2c4fc:	add	r0, r0, #256	; 0x100
   2c500:	cmp	ip, r0
   2c504:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c508:	ldr	r1, [r1, #16]
   2c50c:	ldrb	r0, [r1]
   2c510:	cmp	r0, #46	; 0x2e
   2c514:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c518:	ldrb	r1, [r1, #1]
   2c51c:	cmp	r1, #0
   2c520:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c524:	ldr	r3, [r3, #20]
   2c528:	ldr	r1, [r3, #12]
   2c52c:	cmp	r1, #7
   2c530:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c534:	ldr	r3, [r3, #16]
   2c538:	cmp	r3, #0
   2c53c:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c540:	ldr	r3, [r2, #24]
   2c544:	ldr	r2, [r3, #12]
   2c548:	cmp	r2, #7
   2c54c:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c550:	ldr	r3, [r3, #16]
   2c554:	cmp	r3, #1
   2c558:	beq	2bff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183a0>
   2c55c:	ldr	r2, [r5, #44]	; 0x2c
   2c560:	ldr	r3, [r2, #20]
   2c564:	orr	r3, r3, #2097152	; 0x200000
   2c568:	str	r3, [r2, #20]
   2c56c:	b	2bff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183a0>
   2c570:	ldr	r1, [r4, #16]
   2c574:	mov	r3, r7
   2c578:	mov	r2, r7
   2c57c:	ldr	r0, [pc, #-1104]	; 2c134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184dc>
   2c580:	bl	137a8 <bfd_hash_lookup@plt>
   2c584:	cmp	r0, #0
   2c588:	beq	2bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18048>
   2c58c:	ldrb	r3, [r0, #17]
   2c590:	tst	r3, #1
   2c594:	bne	2bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18048>
   2c598:	ldr	r3, [pc, #-1128]	; 2c138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e0>
   2c59c:	ldrb	r7, [r0, #16]
   2c5a0:	ldrb	r0, [r3]
   2c5a4:	sub	r0, r0, r7
   2c5a8:	clz	r0, r0
   2c5ac:	lsr	r0, r0, #5
   2c5b0:	b	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2c5b4:	ldr	r3, [r5, #48]	; 0x30
   2c5b8:	sub	r2, r3, #1
   2c5bc:	cmp	r2, #1
   2c5c0:	bls	2c6f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a9c>
   2c5c4:	sub	r3, r3, #4
   2c5c8:	cmp	r3, #2
   2c5cc:	bls	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c5d0:	b	2b648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179f0>
   2c5d4:	ldr	r3, [r5]
   2c5d8:	cmp	r3, #1
   2c5dc:	beq	2c1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1857c>
   2c5e0:	mov	r0, r1
   2c5e4:	mov	r2, #5
   2c5e8:	ldr	r1, [pc, #-1220]	; 2c12c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184d4>
   2c5ec:	bl	13460 <dcgettext@plt>
   2c5f0:	ldr	r1, [r4, #20]
   2c5f4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c5f8:	b	2c1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1857c>
   2c5fc:	ldr	r3, [r5]
   2c600:	cmp	r3, #1
   2c604:	beq	2c1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1857c>
   2c608:	mov	r0, r1
   2c60c:	mov	r2, #5
   2c610:	ldr	r1, [pc, #-1256]	; 2c130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184d8>
   2c614:	bl	13460 <dcgettext@plt>
   2c618:	ldr	r1, [r4, #20]
   2c61c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c620:	b	2c1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1857c>
   2c624:	ldr	r2, [r5]
   2c628:	cmp	r2, #1
   2c62c:	bhi	2c708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ab0>
   2c630:	ldr	r2, [r6, #24]
   2c634:	str	r8, [r5, #32]
   2c638:	str	r2, [r5, #20]
   2c63c:	str	r0, [r5, #24]
   2c640:	str	r3, [r5, #28]
   2c644:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c648:	ldr	r2, [r0, #20]
   2c64c:	ldr	r3, [pc, #-1304]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2c650:	cmp	r2, r3
   2c654:	bne	2c088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18430>
   2c658:	mov	r3, #0
   2c65c:	mov	r2, r3
   2c660:	ldr	r1, [r4, #16]
   2c664:	ldr	r0, [pc, #-1336]	; 2c134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184dc>
   2c668:	bl	137a8 <bfd_hash_lookup@plt>
   2c66c:	cmp	r0, #0
   2c670:	beq	2c088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18430>
   2c674:	ldr	r3, [pc, #-1348]	; 2c138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e0>
   2c678:	ldrb	r2, [r0, #16]
   2c67c:	ldrb	r3, [r3]
   2c680:	cmp	r2, r3
   2c684:	ldreq	r6, [r4, #16]
   2c688:	bne	2c088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18430>
   2c68c:	b	2bc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc0>
   2c690:	ldr	r2, [r5, #44]	; 0x2c
   2c694:	cmp	r2, r6
   2c698:	beq	2c004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183ac>
   2c69c:	b	2bf2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182d4>
   2c6a0:	ldr	r2, [r5, #44]	; 0x2c
   2c6a4:	cmp	r2, r0
   2c6a8:	beq	2c744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18aec>
   2c6ac:	ldr	r2, [r3, #56]	; 0x38
   2c6b0:	ldr	r3, [r6, #24]
   2c6b4:	mov	r1, #1
   2c6b8:	add	r3, r3, r2
   2c6bc:	mov	r2, #0
   2c6c0:	str	r3, [r5, #20]
   2c6c4:	str	r1, [r5, #32]
   2c6c8:	str	r2, [r5, #24]
   2c6cc:	str	r2, [r5, #28]
   2c6d0:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c6d4:	ldr	r1, [r3, #28]
   2c6d8:	ldr	r2, [pc, #-1444]	; 2c13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e4>
   2c6dc:	mov	r3, #1
   2c6e0:	ldr	r1, [r1, #32]
   2c6e4:	str	r0, [r5, #24]
   2c6e8:	str	r1, [r5, #20]
   2c6ec:	strd	r2, [r5, #28]
   2c6f0:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c6f4:	ldr	r2, [r5, #20]
   2c6f8:	mov	r3, #3
   2c6fc:	str	r2, [r5, #64]	; 0x40
   2c700:	str	r3, [r5, #48]	; 0x30
   2c704:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c708:	mov	r2, #5
   2c70c:	ldr	r1, [pc, #-1492]	; 2c140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184e8>
   2c710:	bl	13460 <dcgettext@plt>
   2c714:	ldr	r2, [r4, #16]
   2c718:	mov	r1, r4
   2c71c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2c720:	b	2bec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1826c>
   2c724:	ldr	r2, [pc, #-1512]	; 2c144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184ec>
   2c728:	ldr	r4, [r3, #36]	; 0x24
   2c72c:	ldr	r0, [r2, #48]	; 0x30
   2c730:	bl	1376c <bfd_octets_per_byte@plt>
   2c734:	mov	r1, r0
   2c738:	mov	r0, r4
   2c73c:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   2c740:	b	2bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1804c>
   2c744:	ldr	r2, [pc, #-1540]	; 2c148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f0>
   2c748:	ldr	r2, [r2, #64]	; 0x40
   2c74c:	cmp	r2, #0
   2c750:	beq	2c030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183d8>
   2c754:	b	2c6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a54>
   2c758:	cmp	r6, r8
   2c75c:	bcs	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c760:	add	r3, r6, r4
   2c764:	sub	r3, r3, #1
   2c768:	sub	r6, r8, r6
   2c76c:	and	r3, r3, r6
   2c770:	add	r3, r3, r0
   2c774:	str	r3, [r5, #20]
   2c778:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c77c:	mov	r3, #2
   2c780:	str	r8, [r5, #20]
   2c784:	str	r3, [r5, #48]	; 0x30
   2c788:	b	2b134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174dc>
   2c78c:	ldr	r3, [r0, #16]
   2c790:	cmp	r3, #0
   2c794:	bne	2bfec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18394>
   2c798:	b	2bf2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182d4>
   2c79c:	ldr	r2, [r3]
   2c7a0:	cmp	r2, #43	; 0x2b
   2c7a4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c7a8:	ldr	r2, [r3, #16]
   2c7ac:	ldr	r1, [r2, #12]
   2c7b0:	cmp	r1, #3
   2c7b4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c7b8:	ldr	r0, [r2]
   2c7bc:	add	r1, r1, #256	; 0x100
   2c7c0:	cmp	r0, r1
   2c7c4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c7c8:	ldr	r2, [r2, #16]
   2c7cc:	ldrb	r1, [r2]
   2c7d0:	cmp	r1, #46	; 0x2e
   2c7d4:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c7d8:	ldrb	r2, [r2, #1]
   2c7dc:	cmp	r2, #0
   2c7e0:	bne	2c55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18904>
   2c7e4:	ldr	r0, [r3, #20]
   2c7e8:	ldr	r3, [r0, #12]
   2c7ec:	cmp	r3, #7
   2c7f0:	beq	2c808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bb0>
   2c7f4:	bl	2afd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1737c>
   2c7f8:	cmp	r0, #0
   2c7fc:	ldreq	r3, [r4, #20]
   2c800:	beq	2c4a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18848>
   2c804:	b	2bff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183a0>
   2c808:	ldr	r3, [r0, #16]
   2c80c:	cmp	r3, #0
   2c810:	bne	2c7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b9c>
   2c814:	b	2bff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183a0>
   2c818:	ldr	r1, [pc, #-1748]	; 2c14c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f4>
   2c81c:	ldr	r0, [pc, #-1748]	; 2c150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f8>
   2c820:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2c824:	b	2b260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17608>
   2c828:	push	{r4, r5, r6, lr}
   2c82c:	mov	r5, #0
   2c830:	ldr	r4, [pc, #68]	; 2c87c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c24>
   2c834:	ldr	r3, [pc, #68]	; 2c880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c28>
   2c838:	mov	r6, r0
   2c83c:	str	r3, [r4, #44]	; 0x2c
   2c840:	str	r5, [r4, #8]
   2c844:	str	r5, [r4, #36]	; 0x24
   2c848:	str	r5, [r4, #40]	; 0x28
   2c84c:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2c850:	ldr	r3, [r4, #32]
   2c854:	cmp	r3, r5
   2c858:	popeq	{r4, r5, r6, pc}
   2c85c:	ldr	r1, [r4, #20]
   2c860:	ldr	r2, [pc, #28]	; 2c884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c2c>
   2c864:	mov	r3, #7
   2c868:	str	r1, [r6, #16]
   2c86c:	str	r5, [r6, #20]
   2c870:	str	r2, [r6]
   2c874:	str	r3, [r6, #12]
   2c878:	pop	{r4, r5, r6, pc}
   2c87c:	strdeq	r8, [ip], -r4
   2c880:	andeq	r7, ip, r8, lsr #17
   2c884:	andeq	r0, r0, r2, lsl #2
   2c888:	push	{r4, r5, r6, lr}
   2c88c:	mov	r5, r0
   2c890:	mov	r0, #24
   2c894:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2c898:	ldr	r3, [pc, #52]	; 2c8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c7c>
   2c89c:	str	r3, [r0]
   2c8a0:	mov	r4, r0
   2c8a4:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   2c8a8:	ldr	r3, [pc, #40]	; 2c8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c80>
   2c8ac:	mov	r2, #0
   2c8b0:	str	r5, [r4, #16]
   2c8b4:	ldr	r1, [r3]
   2c8b8:	mov	r3, #7
   2c8bc:	str	r1, [r4, #4]
   2c8c0:	str	r2, [r4, #20]
   2c8c4:	str	r3, [r4, #12]
   2c8c8:	str	r0, [r4, #8]
   2c8cc:	mov	r0, r4
   2c8d0:	pop	{r4, r5, r6, pc}
   2c8d4:	andeq	r0, r0, r2, lsl #2
   2c8d8:	andeq	r8, ip, r4, lsr r0
   2c8dc:	push	{r4, r5, r6, lr}
   2c8e0:	mov	r6, r0
   2c8e4:	mov	r0, #24
   2c8e8:	mov	r5, r1
   2c8ec:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2c8f0:	ldr	r3, [pc, #48]	; 2c928 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18cd0>
   2c8f4:	str	r3, [r0]
   2c8f8:	mov	r4, r0
   2c8fc:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   2c900:	ldr	r2, [pc, #36]	; 2c92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18cd4>
   2c904:	mov	r3, #7
   2c908:	str	r6, [r4, #16]
   2c90c:	ldr	r2, [r2]
   2c910:	str	r5, [r4, #20]
   2c914:	str	r2, [r4, #4]
   2c918:	str	r3, [r4, #12]
   2c91c:	str	r0, [r4, #8]
   2c920:	mov	r0, r4
   2c924:	pop	{r4, r5, r6, pc}
   2c928:	andeq	r0, r0, r2, lsl #2
   2c92c:	andeq	r8, ip, r4, lsr r0
   2c930:	push	{r4, r5, r6, lr}
   2c934:	mov	r6, r0
   2c938:	mov	r0, #24
   2c93c:	mov	r5, r1
   2c940:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2c944:	ldr	r3, [pc, #48]	; 2c97c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d24>
   2c948:	str	r3, [r0]
   2c94c:	mov	r4, r0
   2c950:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   2c954:	ldr	r2, [pc, #36]	; 2c980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d28>
   2c958:	mov	r3, #9
   2c95c:	str	r6, [r4, #16]
   2c960:	ldr	r2, [r2]
   2c964:	str	r5, [r4, #20]
   2c968:	str	r2, [r4, #4]
   2c96c:	str	r3, [r4, #12]
   2c970:	str	r0, [r4, #8]
   2c974:	mov	r0, r4
   2c978:	pop	{r4, r5, r6, pc}
   2c97c:	andeq	r0, r0, lr, ror #2
   2c980:	andeq	r8, ip, r4, lsr r0
   2c984:	ldr	r3, [pc, #32]	; 2c9ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d54>
   2c988:	push	{lr}		; (str lr, [sp, #-4]!)
   2c98c:	mov	ip, #0
   2c990:	ldr	lr, [r2]
   2c994:	str	r2, [r3, #40]	; 0x28
   2c998:	str	lr, [r3, #36]	; 0x24
   2c99c:	pop	{lr}		; (ldr lr, [sp], #4)
   2c9a0:	str	r1, [r3, #44]	; 0x2c
   2c9a4:	str	ip, [r3, #8]
   2c9a8:	b	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2c9ac:	strdeq	r8, [ip], -r4
   2c9b0:	ldr	r3, [pc, #24]	; 2c9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d78>
   2c9b4:	ldr	r1, [pc, #24]	; 2c9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d7c>
   2c9b8:	mov	r2, #0
   2c9bc:	str	r1, [r3, #44]	; 0x2c
   2c9c0:	str	r2, [r3, #8]
   2c9c4:	str	r2, [r3, #36]	; 0x24
   2c9c8:	str	r2, [r3, #40]	; 0x28
   2c9cc:	b	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2c9d0:	strdeq	r8, [ip], -r4
   2c9d4:	andeq	r7, ip, r8, lsr #17
   2c9d8:	push	{r4, r5, r6, r7, r8, lr}
   2c9dc:	mov	r7, r0
   2c9e0:	mov	r0, #24
   2c9e4:	mov	r5, r1
   2c9e8:	mov	r6, r2
   2c9ec:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2c9f0:	mov	r2, #0
   2c9f4:	ldr	r1, [r5, #8]
   2c9f8:	ldr	r3, [r5, #4]
   2c9fc:	str	r2, [r0, #12]
   2ca00:	ldr	r2, [r5, #12]
   2ca04:	mov	r4, r0
   2ca08:	cmp	r2, #7
   2ca0c:	str	r1, [r0, #8]
   2ca10:	str	r7, [r0]
   2ca14:	str	r3, [r0, #4]
   2ca18:	str	r5, [r0, #16]
   2ca1c:	str	r6, [r0, #20]
   2ca20:	beq	2ca2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dd4>
   2ca24:	mov	r0, r4
   2ca28:	pop	{r4, r5, r6, r7, r8, pc}
   2ca2c:	ldr	r3, [r6, #12]
   2ca30:	cmp	r3, #7
   2ca34:	bne	2ca24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dcc>
   2ca38:	add	r3, r3, #272	; 0x110
   2ca3c:	sub	r2, r7, #292	; 0x124
   2ca40:	cmp	r7, r3
   2ca44:	cmpne	r2, #1
   2ca48:	bls	2ca24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dcc>
   2ca4c:	bl	2c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bd0>
   2ca50:	b	2ca24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dcc>
   2ca54:	push	{r4, r5, r6, r7, r8, lr}
   2ca58:	mov	r8, r0
   2ca5c:	mov	r0, #28
   2ca60:	mov	r5, r1
   2ca64:	mov	r6, r2
   2ca68:	mov	r7, r3
   2ca6c:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2ca70:	mov	r2, #1
   2ca74:	ldr	r1, [r5, #8]
   2ca78:	ldr	r3, [r5, #4]
   2ca7c:	str	r2, [r0, #12]
   2ca80:	ldr	r2, [r5, #12]
   2ca84:	mov	r4, r0
   2ca88:	cmp	r2, #7
   2ca8c:	str	r8, [r0]
   2ca90:	str	r1, [r0, #8]
   2ca94:	str	r3, [r0, #4]
   2ca98:	str	r6, [r0, #20]
   2ca9c:	str	r5, [r0, #16]
   2caa0:	str	r7, [r0, #24]
   2caa4:	beq	2cab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e58>
   2caa8:	mov	r0, r4
   2caac:	pop	{r4, r5, r6, r7, r8, pc}
   2cab0:	ldr	r3, [r6, #12]
   2cab4:	cmp	r3, #7
   2cab8:	bne	2caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e50>
   2cabc:	ldr	r3, [r7, #12]
   2cac0:	cmp	r3, #7
   2cac4:	bne	2caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e50>
   2cac8:	bl	2c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bd0>
   2cacc:	b	2caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e50>
   2cad0:	push	{r4, r5, r6, lr}
   2cad4:	mov	r6, r0
   2cad8:	mov	r0, #24
   2cadc:	mov	r5, r1
   2cae0:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cae4:	mov	r2, #2
   2cae8:	ldr	r1, [r5, #8]
   2caec:	ldr	r3, [r5, #4]
   2caf0:	str	r2, [r0, #12]
   2caf4:	ldr	r2, [r5, #12]
   2caf8:	mov	r4, r0
   2cafc:	cmp	r2, #7
   2cb00:	str	r1, [r0, #8]
   2cb04:	str	r6, [r0]
   2cb08:	str	r3, [r0, #4]
   2cb0c:	str	r5, [r0, #16]
   2cb10:	beq	2cb1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ec4>
   2cb14:	mov	r0, r4
   2cb18:	pop	{r4, r5, r6, pc}
   2cb1c:	ldr	r3, [pc, #32]	; 2cb44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18eec>
   2cb20:	cmp	r6, r3
   2cb24:	beq	2cb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ebc>
   2cb28:	add	r3, r3, #15
   2cb2c:	bic	r2, r6, #32
   2cb30:	cmp	r2, #320	; 0x140
   2cb34:	cmpne	r6, r3
   2cb38:	beq	2cb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ebc>
   2cb3c:	bl	2c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bd0>
   2cb40:	b	2cb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ebc>
   2cb44:	andeq	r0, r0, r7, lsl r1
   2cb48:	push	{r4, r5, r6, lr}
   2cb4c:	mov	r6, r0
   2cb50:	mov	r0, #20
   2cb54:	mov	r5, r1
   2cb58:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cb5c:	str	r6, [r0]
   2cb60:	mov	r4, r0
   2cb64:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   2cb68:	ldr	r3, [pc, #28]	; 2cb8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f34>
   2cb6c:	mov	r2, #3
   2cb70:	str	r5, [r4, #16]
   2cb74:	ldr	r3, [r3]
   2cb78:	str	r2, [r4, #12]
   2cb7c:	str	r3, [r4, #4]
   2cb80:	str	r0, [r4, #8]
   2cb84:	mov	r0, r4
   2cb88:	pop	{r4, r5, r6, pc}
   2cb8c:	andeq	r8, ip, r4, lsr r0
   2cb90:	push	{r4, r5, r6, lr}
   2cb94:	mov	r6, r0
   2cb98:	mov	r0, #28
   2cb9c:	mov	r4, r1
   2cba0:	mov	r5, r2
   2cba4:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cba8:	ldmib	r4, {r2, lr}
   2cbac:	mov	ip, #61	; 0x3d
   2cbb0:	mov	r1, #4
   2cbb4:	str	r6, [r0, #16]
   2cbb8:	stmib	r0, {r2, lr}
   2cbbc:	strd	r4, [r0, #20]
   2cbc0:	str	ip, [r0]
   2cbc4:	str	r1, [r0, #12]
   2cbc8:	pop	{r4, r5, r6, pc}
   2cbcc:	push	{r4, r5, r6, lr}
   2cbd0:	mov	r5, r0
   2cbd4:	mov	r0, #28
   2cbd8:	mov	r4, r1
   2cbdc:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cbe0:	ldr	r2, [r4, #8]
   2cbe4:	ldr	lr, [r4, #4]
   2cbe8:	mov	ip, #61	; 0x3d
   2cbec:	mov	r1, #4
   2cbf0:	str	r2, [r0, #8]
   2cbf4:	mov	r2, #0
   2cbf8:	str	r5, [r0, #16]
   2cbfc:	str	lr, [r0, #4]
   2cc00:	str	r4, [r0, #20]
   2cc04:	str	ip, [r0]
   2cc08:	str	r1, [r0, #12]
   2cc0c:	str	r2, [r0, #24]
   2cc10:	pop	{r4, r5, r6, pc}
   2cc14:	push	{r4, r5, r6, lr}
   2cc18:	mov	r6, r0
   2cc1c:	mov	r0, #28
   2cc20:	mov	r4, r1
   2cc24:	mov	r5, r2
   2cc28:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cc2c:	ldmib	r4, {r2, lr}
   2cc30:	mov	ip, #61	; 0x3d
   2cc34:	mov	r1, #5
   2cc38:	str	r6, [r0, #16]
   2cc3c:	stmib	r0, {r2, lr}
   2cc40:	strd	r4, [r0, #20]
   2cc44:	str	ip, [r0]
   2cc48:	str	r1, [r0, #12]
   2cc4c:	pop	{r4, r5, r6, pc}
   2cc50:	push	{r4, r5, r6, lr}
   2cc54:	mov	r4, r0
   2cc58:	mov	r0, #24
   2cc5c:	mov	r6, r1
   2cc60:	bl	1f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcb4>
   2cc64:	ldr	r5, [r4, #8]
   2cc68:	ldr	lr, [r4, #4]
   2cc6c:	mov	ip, #33	; 0x21
   2cc70:	mov	r2, #8
   2cc74:	str	r6, [r0, #20]
   2cc78:	str	r5, [r0, #8]
   2cc7c:	str	lr, [r0, #4]
   2cc80:	str	r4, [r0, #16]
   2cc84:	str	ip, [r0]
   2cc88:	str	r2, [r0, #12]
   2cc8c:	pop	{r4, r5, r6, pc}
   2cc90:	push	{r4, r5, r6, lr}
   2cc94:	mov	r4, r0
   2cc98:	ldr	r5, [pc, #840]	; 2cfe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19390>
   2cc9c:	ldr	r6, [pc, #840]	; 2cfec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19394>
   2cca0:	ldr	r3, [r5, #80]	; 0x50
   2cca4:	cmp	r3, #0
   2cca8:	ldreq	r3, [r6]
   2ccac:	streq	r3, [r5, #80]	; 0x50
   2ccb0:	cmp	r4, #0
   2ccb4:	beq	2cfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19374>
   2ccb8:	ldr	r3, [r4, #12]
   2ccbc:	cmp	r3, #9
   2ccc0:	ldrls	pc, [pc, r3, lsl #2]
   2ccc4:	b	2cfd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19380>
   2ccc8:	andeq	ip, r2, r0, lsr #26
   2cccc:	strdeq	ip, [r2], -r8
   2ccd0:	andeq	ip, r2, r8, lsr #28
   2ccd4:	andeq	ip, r2, ip, ror #28
   2ccd8:	andeq	ip, r2, r0, lsr #29
   2ccdc:	andeq	ip, r2, r0, asr #29
   2cce0:	andeq	ip, r2, r0, asr #29
   2cce4:	ldrdeq	ip, [r2], -r8
   2cce8:	andeq	ip, r2, r8, ror #29
   2ccec:	strdeq	ip, [r2], -r0
   2ccf0:	ldr	r3, [r4, #16]
   2ccf4:	ldr	r1, [r3, #148]	; 0x94
   2ccf8:	cmp	r1, #0
   2ccfc:	beq	2cd0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x190b4>
   2cd00:	ldr	r0, [pc, #744]	; 2cff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19398>
   2cd04:	bl	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   2cd08:	ldr	r3, [r4, #16]
   2cd0c:	ldr	r2, [r4, #20]
   2cd10:	ldr	r1, [r3]
   2cd14:	ldr	r0, [pc, #728]	; 2cff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1939c>
   2cd18:	pop	{r4, r5, r6, lr}
   2cd1c:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   2cd20:	ldr	r0, [r4]
   2cd24:	sub	r3, r0, #276	; 0x114
   2cd28:	sub	r3, r3, #3
   2cd2c:	cmp	r3, #47	; 0x2f
   2cd30:	ldrls	pc, [pc, r3, lsl #2]
   2cd34:	b	2cf98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19340>
   2cd38:	andeq	ip, r2, r4, asr pc
   2cd3c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd40:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd44:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd48:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd4c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd50:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd54:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd58:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd5c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd60:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd64:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd68:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd6c:	andeq	ip, r2, r4, asr pc
   2cd70:	andeq	ip, r2, r4, asr pc
   2cd74:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd78:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd7c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd80:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd84:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd88:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd8c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd90:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd94:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd98:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cd9c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cda0:	andeq	ip, r2, r8, lsl pc
   2cda4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cda8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdac:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdb0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdb4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdb8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdbc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdc0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdc4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdc8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdcc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdd0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdd4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdd8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cddc:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cde0:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cde4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cde8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdec:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2cdf0:	andeq	ip, r2, r4, asr pc
   2cdf4:	andeq	ip, r2, r4, asr pc
   2cdf8:	ldr	r0, [r4, #16]
   2cdfc:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2ce00:	ldr	r1, [r5, #80]	; 0x50
   2ce04:	mov	r0, #63	; 0x3f
   2ce08:	bl	139b8 <fputc@plt>
   2ce0c:	ldr	r0, [r4, #20]
   2ce10:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2ce14:	ldr	r1, [r5, #80]	; 0x50
   2ce18:	mov	r0, #58	; 0x3a
   2ce1c:	bl	139b8 <fputc@plt>
   2ce20:	ldr	r4, [r4, #24]
   2ce24:	b	2cca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19048>
   2ce28:	mov	r1, #0
   2ce2c:	ldr	r0, [r4]
   2ce30:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2ce34:	ldr	r3, [r4, #16]
   2ce38:	cmp	r3, #0
   2ce3c:	popeq	{r4, r5, r6, pc}
   2ce40:	ldr	r3, [r5, #80]	; 0x50
   2ce44:	ldr	r0, [pc, #428]	; 2cff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193a0>
   2ce48:	mov	r2, #2
   2ce4c:	mov	r1, #1
   2ce50:	bl	13568 <fwrite@plt>
   2ce54:	ldr	r0, [r4, #16]
   2ce58:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2ce5c:	ldr	r1, [r5, #80]	; 0x50
   2ce60:	mov	r0, #41	; 0x29
   2ce64:	pop	{r4, r5, r6, lr}
   2ce68:	b	139b8 <fputc@plt>
   2ce6c:	ldr	r0, [r4]
   2ce70:	ldr	r3, [pc, #388]	; 2cffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193a4>
   2ce74:	cmp	r0, r3
   2ce78:	beq	2cfbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19364>
   2ce7c:	mov	r1, #0
   2ce80:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2ce84:	ldr	r2, [r4, #16]
   2ce88:	cmp	r2, #0
   2ce8c:	popeq	{r4, r5, r6, pc}
   2ce90:	ldr	r0, [r5, #80]	; 0x50
   2ce94:	ldr	r1, [pc, #356]	; 2d000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193a8>
   2ce98:	pop	{r4, r5, r6, lr}
   2ce9c:	b	1382c <fprintf@plt>
   2cea0:	ldr	r1, [r5, #80]	; 0x50
   2cea4:	ldr	r0, [r4, #16]
   2cea8:	bl	13ba4 <fputs@plt>
   2ceac:	ldr	r0, [r4]
   2ceb0:	mov	r1, #1
   2ceb4:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2ceb8:	ldr	r4, [r4, #20]
   2cebc:	b	2cca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19048>
   2cec0:	ldr	r2, [r4, #16]
   2cec4:	ldr	r1, [pc, #312]	; 2d004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193ac>
   2cec8:	ldr	r0, [r5, #80]	; 0x50
   2cecc:	bl	1382c <fprintf@plt>
   2ced0:	ldr	r0, [r4, #20]
   2ced4:	b	2ce58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19200>
   2ced8:	ldr	r1, [r4, #16]
   2cedc:	ldr	r0, [pc, #292]	; 2d008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b0>
   2cee0:	pop	{r4, r5, r6, lr}
   2cee4:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   2cee8:	ldr	r3, [r5, #80]	; 0x50
   2ceec:	mov	r2, #8
   2cef0:	mov	r1, #1
   2cef4:	ldr	r0, [pc, #272]	; 2d00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b4>
   2cef8:	bl	13568 <fwrite@plt>
   2cefc:	ldr	r0, [r4, #16]
   2cf00:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2cf04:	ldr	r2, [r4, #20]
   2cf08:	ldr	r0, [r5, #80]	; 0x50
   2cf0c:	ldr	r1, [pc, #252]	; 2d010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b8>
   2cf10:	pop	{r4, r5, r6, lr}
   2cf14:	b	1382c <fprintf@plt>
   2cf18:	mov	r1, #0
   2cf1c:	ldr	r0, [pc, #240]	; 2d014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193bc>
   2cf20:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2cf24:	ldr	r3, [r5, #80]	; 0x50
   2cf28:	mov	r2, #3
   2cf2c:	mov	r1, #1
   2cf30:	ldr	r0, [pc, #224]	; 2d018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193c0>
   2cf34:	bl	13568 <fwrite@plt>
   2cf38:	ldr	r0, [r4, #20]
   2cf3c:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2cf40:	ldr	r3, [r5, #80]	; 0x50
   2cf44:	mov	r2, #3
   2cf48:	mov	r1, #1
   2cf4c:	ldr	r0, [pc, #200]	; 2d01c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193c4>
   2cf50:	b	2ce50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x191f8>
   2cf54:	mov	r1, #0
   2cf58:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2cf5c:	ldr	r1, [r5, #80]	; 0x50
   2cf60:	mov	r0, #32
   2cf64:	bl	139b8 <fputc@plt>
   2cf68:	ldr	r1, [r5, #80]	; 0x50
   2cf6c:	mov	r0, #40	; 0x28
   2cf70:	bl	139b8 <fputc@plt>
   2cf74:	ldr	r0, [r4, #16]
   2cf78:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2cf7c:	ldr	r3, [r5, #80]	; 0x50
   2cf80:	mov	r2, #2
   2cf84:	mov	r1, #1
   2cf88:	ldr	r0, [pc, #144]	; 2d020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193c8>
   2cf8c:	bl	13568 <fwrite@plt>
   2cf90:	ldr	r0, [r4, #20]
   2cf94:	b	2ce58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19200>
   2cf98:	ldr	r1, [r5, #80]	; 0x50
   2cf9c:	mov	r0, #40	; 0x28
   2cfa0:	bl	139b8 <fputc@plt>
   2cfa4:	ldr	r0, [r4, #16]
   2cfa8:	bl	2cc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19038>
   2cfac:	mov	r1, #1
   2cfb0:	ldr	r0, [r4]
   2cfb4:	bl	2aef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17298>
   2cfb8:	b	2cf90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19338>
   2cfbc:	ldr	r1, [r5, #80]	; 0x50
   2cfc0:	ldr	r0, [r4, #16]
   2cfc4:	pop	{r4, r5, r6, lr}
   2cfc8:	b	13ba4 <fputs@plt>
   2cfcc:	ldr	r0, [pc, #80]	; 2d024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193cc>
   2cfd0:	pop	{r4, r5, r6, lr}
   2cfd4:	b	2ead4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae7c>
   2cfd8:	ldr	r1, [pc, #72]	; 2d028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d0>
   2cfdc:	ldr	r0, [pc, #72]	; 2d02c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d4>
   2cfe0:	pop	{r4, r5, r6, lr}
   2cfe4:	b	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2cfe8:	andeq	r8, ip, r4, ror r1
   2cfec:	andeq	r7, ip, r8, asr #14
   2cff0:	ldrdeq	r1, [r5], -r8
   2cff4:	andeq	r1, r5, r0, ror #17
   2cff8:	andeq	r1, r5, r0, lsl #18
   2cffc:	andeq	r0, r0, r3, lsl #2
   2d000:	andeq	r1, r5, r8, lsl r9
   2d004:	andeq	r1, r5, r8, ror #17
   2d008:	ldrdeq	r1, [r5], -r0
   2d00c:	andeq	r1, r5, r4, lsl #18
   2d010:	andeq	r1, r5, r0, lsl r9
   2d014:	andeq	r0, r0, r1, lsr r1
   2d018:	strdeq	r1, [r5], -r8
   2d01c:	strdeq	r1, [r5], -ip
   2d020:	andeq	ip, r4, ip, asr sp
   2d024:	andeq	r1, r5, r4, asr #17
   2d028:	andeq	r0, r0, r1, ror #11
   2d02c:	muleq	r5, ip, r5
   2d030:	push	{r4, r5, r6, r7, r8, lr}
   2d034:	subs	r7, r0, #0
   2d038:	mov	r4, r1
   2d03c:	beq	2d084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1942c>
   2d040:	ldr	r5, [pc, #108]	; 2d0b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1945c>
   2d044:	mov	r6, r2
   2d048:	ldr	r2, [pc, #104]	; 2d0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19460>
   2d04c:	mov	r3, #0
   2d050:	str	r2, [r5, #44]	; 0x2c
   2d054:	str	r3, [r5, #8]
   2d058:	str	r3, [r5, #36]	; 0x24
   2d05c:	str	r3, [r5, #40]	; 0x28
   2d060:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2d064:	ldr	r0, [r5, #32]
   2d068:	cmp	r0, #0
   2d06c:	bne	2d08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19434>
   2d070:	cmp	r6, #0
   2d074:	beq	2d084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1942c>
   2d078:	ldr	r3, [r5]
   2d07c:	cmp	r3, #1
   2d080:	bne	2d094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1943c>
   2d084:	mov	r0, r4
   2d088:	pop	{r4, r5, r6, r7, r8, pc}
   2d08c:	ldr	r0, [r5, #20]
   2d090:	pop	{r4, r5, r6, r7, r8, pc}
   2d094:	mov	r2, #5
   2d098:	ldr	r1, [pc, #28]	; 2d0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19464>
   2d09c:	bl	13460 <dcgettext@plt>
   2d0a0:	mov	r2, r6
   2d0a4:	mov	r1, r7
   2d0a8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d0ac:	mov	r0, r4
   2d0b0:	pop	{r4, r5, r6, r7, r8, pc}
   2d0b4:	strdeq	r8, [ip], -r4
   2d0b8:	andeq	r7, ip, r8, lsr #17
   2d0bc:	andeq	r1, r5, r0, lsr #18
   2d0c0:	b	2d030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d8>
   2d0c4:	push	{r4, r5, r6, r7, r8, lr}
   2d0c8:	subs	r8, r0, #0
   2d0cc:	mov	r5, r1
   2d0d0:	beq	2d164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1950c>
   2d0d4:	ldr	r6, [pc, #236]	; 2d1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19570>
   2d0d8:	ldr	r3, [pc, #236]	; 2d1cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19574>
   2d0dc:	mov	r4, #0
   2d0e0:	mov	r7, r2
   2d0e4:	str	r3, [r6, #44]	; 0x2c
   2d0e8:	str	r4, [r6, #8]
   2d0ec:	str	r4, [r6, #36]	; 0x24
   2d0f0:	str	r4, [r6, #40]	; 0x28
   2d0f4:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2d0f8:	ldr	r0, [r6, #32]
   2d0fc:	cmp	r0, r4
   2d100:	beq	2d138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x194e0>
   2d104:	ldr	r0, [r6, #24]
   2d108:	cmp	r0, #0
   2d10c:	beq	2d11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x194c4>
   2d110:	bl	137d8 <strlen@plt>
   2d114:	subs	r5, r0, #0
   2d118:	bne	2d16c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19514>
   2d11c:	mov	r0, #11
   2d120:	bl	13574 <xmalloc@plt>
   2d124:	ldr	r3, [r6, #20]
   2d128:	mov	r2, #4
   2d12c:	rev	r3, r3
   2d130:	strd	r2, [r0]
   2d134:	pop	{r4, r5, r6, r7, r8, pc}
   2d138:	cmp	r7, r4
   2d13c:	beq	2d164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1950c>
   2d140:	ldr	r3, [r6]
   2d144:	cmp	r3, #1
   2d148:	beq	2d164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1950c>
   2d14c:	mov	r2, #5
   2d150:	ldr	r1, [pc, #120]	; 2d1d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19578>
   2d154:	bl	13460 <dcgettext@plt>
   2d158:	mov	r2, r7
   2d15c:	mov	r1, r8
   2d160:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d164:	mov	r0, r5
   2d168:	pop	{r4, r5, r6, r7, r8, pc}
   2d16c:	add	r7, r5, #1
   2d170:	lsr	r7, r7, #1
   2d174:	add	r0, r7, #7
   2d178:	bl	13574 <xmalloc@plt>
   2d17c:	ldr	r1, [r6, #24]
   2d180:	mov	r2, r4
   2d184:	mov	ip, r0
   2d188:	str	r7, [ip], #4
   2d18c:	ldrb	r3, [r1], #1
   2d190:	sub	r5, r5, #1
   2d194:	sub	lr, r3, #55	; 0x37
   2d198:	sub	r3, r3, #48	; 0x30
   2d19c:	cmp	r3, #9
   2d1a0:	andhi	r3, lr, #15
   2d1a4:	ands	lr, r5, #1
   2d1a8:	add	r2, r3, r2, lsl #4
   2d1ac:	bne	2d18c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19534>
   2d1b0:	cmp	r5, #0
   2d1b4:	strb	r2, [ip]
   2d1b8:	popeq	{r4, r5, r6, r7, r8, pc}
   2d1bc:	add	ip, ip, #1
   2d1c0:	mov	r2, lr
   2d1c4:	b	2d18c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19534>
   2d1c8:	strdeq	r8, [ip], -r4
   2d1cc:	andeq	r7, ip, r8, lsr #17
   2d1d0:	andeq	r1, r5, r0, lsr #18
   2d1d4:	push	{r4, r5, r6, r7, r8, lr}
   2d1d8:	subs	r7, r0, #0
   2d1dc:	mov	r4, r1
   2d1e0:	beq	2d228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195d0>
   2d1e4:	ldr	r5, [pc, #128]	; 2d26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19614>
   2d1e8:	mov	r6, r2
   2d1ec:	ldr	r2, [pc, #124]	; 2d270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19618>
   2d1f0:	mov	r3, #0
   2d1f4:	str	r2, [r5, #44]	; 0x2c
   2d1f8:	str	r3, [r5, #8]
   2d1fc:	str	r3, [r5, #36]	; 0x24
   2d200:	str	r3, [r5, #40]	; 0x28
   2d204:	bl	2b0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17454>
   2d208:	ldr	r0, [r5, #32]
   2d20c:	cmp	r0, #0
   2d210:	bne	2d230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195d8>
   2d214:	cmp	r6, #0
   2d218:	beq	2d228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195d0>
   2d21c:	ldr	r3, [r5]
   2d220:	cmp	r3, #1
   2d224:	bne	2d24c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195f4>
   2d228:	mov	r0, r4
   2d22c:	pop	{r4, r5, r6, r7, r8, pc}
   2d230:	ldr	r3, [r5, #28]
   2d234:	ldr	r0, [r5, #20]
   2d238:	cmp	r3, #0
   2d23c:	ldrne	r3, [r3, #28]
   2d240:	addne	r0, r0, r3
   2d244:	strne	r0, [r5, #20]
   2d248:	pop	{r4, r5, r6, r7, r8, pc}
   2d24c:	mov	r2, #5
   2d250:	ldr	r1, [pc, #28]	; 2d274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1961c>
   2d254:	bl	13460 <dcgettext@plt>
   2d258:	mov	r2, r6
   2d25c:	mov	r1, r7
   2d260:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d264:	mov	r0, r4
   2d268:	pop	{r4, r5, r6, r7, r8, pc}
   2d26c:	strdeq	r8, [ip], -r4
   2d270:	andeq	r7, ip, r8, lsr #17
   2d274:	andeq	r1, r5, r0, lsr #18
   2d278:	push	{r4, lr}
   2d27c:	mov	r3, #13
   2d280:	mov	r2, #20
   2d284:	ldr	r1, [pc, #32]	; 2d2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19654>
   2d288:	ldr	r0, [pc, #32]	; 2d2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19658>
   2d28c:	bl	13670 <bfd_hash_table_init_n@plt>
   2d290:	cmp	r0, #0
   2d294:	popne	{r4, pc}
   2d298:	mov	r2, #5
   2d29c:	ldr	r1, [pc, #16]	; 2d2b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1965c>
   2d2a0:	bl	13460 <dcgettext@plt>
   2d2a4:	pop	{r4, lr}
   2d2a8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d2ac:	andeq	sl, r2, r0, asr #27
   2d2b0:	andeq	r7, ip, r0, lsr #26
   2d2b4:	andeq	pc, r4, ip, ror r8	; <UNPREDICTABLE>
   2d2b8:	mov	r2, #0
   2d2bc:	ldr	r1, [pc, #4]	; 2d2c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19670>
   2d2c0:	ldr	r0, [pc, #4]	; 2d2cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19674>
   2d2c4:	b	13334 <bfd_hash_traverse@plt>
   2d2c8:	andeq	sl, r2, r4, ror #28
   2d2cc:	andeq	r7, ip, r0, lsr #26
   2d2d0:	ldr	r0, [pc]	; 2d2d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19680>
   2d2d4:	b	13508 <bfd_hash_table_free@plt>
   2d2d8:	andeq	r7, ip, r0, lsr #26
   2d2dc:	ldr	r3, [pc, #8]	; 2d2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19694>
   2d2e0:	ldr	r3, [r3]
   2d2e4:	ldr	r3, [r3, #8]
   2d2e8:	bx	r3
   2d2ec:	andeq	r7, ip, ip, lsr sp
   2d2f0:	ldr	r3, [pc, #8]	; 2d300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196a8>
   2d2f4:	ldr	r3, [r3]
   2d2f8:	ldr	r3, [r3, #4]
   2d2fc:	bx	r3
   2d300:	andeq	r7, ip, ip, lsr sp
   2d304:	ldr	r3, [pc, #8]	; 2d314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196bc>
   2d308:	ldr	r3, [r3]
   2d30c:	ldr	r3, [r3, #12]
   2d310:	bx	r3
   2d314:	andeq	r7, ip, ip, lsr sp
   2d318:	ldr	r3, [pc, #8]	; 2d328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196d0>
   2d31c:	ldr	r3, [r3]
   2d320:	ldr	r3, [r3]
   2d324:	bx	r3
   2d328:	andeq	r7, ip, ip, lsr sp
   2d32c:	ldr	r3, [pc, #8]	; 2d33c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196e4>
   2d330:	ldr	r3, [r3]
   2d334:	ldr	r3, [r3, #16]
   2d338:	bx	r3
   2d33c:	andeq	r7, ip, ip, lsr sp
   2d340:	ldr	r3, [pc, #8]	; 2d350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196f8>
   2d344:	ldr	r3, [r3]
   2d348:	ldr	r3, [r3, #20]
   2d34c:	bx	r3
   2d350:	andeq	r7, ip, ip, lsr sp
   2d354:	ldr	r3, [pc, #8]	; 2d364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1970c>
   2d358:	ldr	r3, [r3]
   2d35c:	ldr	r3, [r3, #24]
   2d360:	bx	r3
   2d364:	andeq	r7, ip, ip, lsr sp
   2d368:	ldr	r3, [pc, #8]	; 2d378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19720>
   2d36c:	ldr	r3, [r3]
   2d370:	ldr	r3, [r3, #36]	; 0x24
   2d374:	bx	r3
   2d378:	andeq	r7, ip, ip, lsr sp
   2d37c:	ldr	r3, [pc, #8]	; 2d38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19734>
   2d380:	ldr	r3, [r3]
   2d384:	ldr	r3, [r3, #28]
   2d388:	bx	r3
   2d38c:	andeq	r7, ip, ip, lsr sp
   2d390:	ldr	r3, [pc, #8]	; 2d3a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19748>
   2d394:	ldr	r3, [r3]
   2d398:	ldr	r3, [r3, #52]	; 0x34
   2d39c:	bx	r3
   2d3a0:	andeq	r7, ip, ip, lsr sp
   2d3a4:	ldr	r3, [pc, #16]	; 2d3bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19764>
   2d3a8:	ldr	r3, [r3]
   2d3ac:	ldr	r3, [r3, #68]	; 0x44
   2d3b0:	cmp	r3, #0
   2d3b4:	bxeq	lr
   2d3b8:	bx	r3
   2d3bc:	andeq	r7, ip, ip, lsr sp
   2d3c0:	ldr	r3, [pc, #16]	; 2d3d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19780>
   2d3c4:	ldr	r3, [r3]
   2d3c8:	ldr	r3, [r3, #56]	; 0x38
   2d3cc:	cmp	r3, #0
   2d3d0:	bxeq	lr
   2d3d4:	bx	r3
   2d3d8:	andeq	r7, ip, ip, lsr sp
   2d3dc:	ldr	r3, [pc, #8]	; 2d3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19794>
   2d3e0:	ldr	r3, [r3]
   2d3e4:	ldr	r3, [r3, #40]	; 0x28
   2d3e8:	bx	r3
   2d3ec:	andeq	r7, ip, ip, lsr sp
   2d3f0:	ldr	r3, [pc, #24]	; 2d410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197b8>
   2d3f4:	ldr	r3, [r3]
   2d3f8:	ldr	r3, [r3, #60]	; 0x3c
   2d3fc:	cmp	r3, #0
   2d400:	beq	2d408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197b0>
   2d404:	bx	r3
   2d408:	mov	r0, r3
   2d40c:	bx	lr
   2d410:	andeq	r7, ip, ip, lsr sp
   2d414:	ldr	r3, [pc, #24]	; 2d434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197dc>
   2d418:	ldr	r3, [r3]
   2d41c:	ldr	r3, [r3, #64]	; 0x40
   2d420:	cmp	r3, #0
   2d424:	beq	2d42c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197d4>
   2d428:	bx	r3
   2d42c:	mov	r0, r3
   2d430:	bx	lr
   2d434:	andeq	r7, ip, ip, lsr sp
   2d438:	ldr	ip, [pc, #28]	; 2d45c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19804>
   2d43c:	push	{lr}		; (str lr, [sp, #-4]!)
   2d440:	ldr	ip, [ip]
   2d444:	ldr	lr, [ip, #76]	; 0x4c
   2d448:	cmp	lr, #0
   2d44c:	popeq	{pc}		; (ldreq pc, [sp], #4)
   2d450:	mov	ip, lr
   2d454:	pop	{lr}		; (ldr lr, [sp], #4)
   2d458:	bx	ip
   2d45c:	andeq	r7, ip, ip, lsr sp
   2d460:	ldr	r3, [pc, #24]	; 2d480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19828>
   2d464:	ldr	r3, [r3]
   2d468:	ldr	r3, [r3, #80]	; 0x50
   2d46c:	cmp	r3, #0
   2d470:	beq	2d478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19820>
   2d474:	bx	r3
   2d478:	mov	r0, r3
   2d47c:	bx	lr
   2d480:	andeq	r7, ip, ip, lsr sp
   2d484:	ldr	r3, [pc, #24]	; 2d4a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1984c>
   2d488:	ldr	r3, [r3]
   2d48c:	ldr	r3, [r3, #72]	; 0x48
   2d490:	cmp	r3, #0
   2d494:	beq	2d49c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19844>
   2d498:	bx	r3
   2d49c:	mov	r0, r3
   2d4a0:	bx	lr
   2d4a4:	andeq	r7, ip, ip, lsr sp
   2d4a8:	ldr	r3, [pc, #24]	; 2d4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19870>
   2d4ac:	ldr	r3, [r3]
   2d4b0:	ldr	r3, [r3, #84]	; 0x54
   2d4b4:	cmp	r3, #0
   2d4b8:	beq	2d4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19868>
   2d4bc:	bx	r3
   2d4c0:	mov	r0, r3
   2d4c4:	bx	lr
   2d4c8:	andeq	r7, ip, ip, lsr sp
   2d4cc:	ldr	r3, [pc, #24]	; 2d4ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19894>
   2d4d0:	ldr	r3, [r3]
   2d4d4:	ldr	r3, [r3, #92]	; 0x5c
   2d4d8:	cmp	r3, #0
   2d4dc:	beq	2d4e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1988c>
   2d4e0:	bx	r3
   2d4e4:	mov	r0, r3
   2d4e8:	bx	lr
   2d4ec:	andeq	r7, ip, ip, lsr sp
   2d4f0:	ldr	r3, [pc, #8]	; 2d500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198a8>
   2d4f4:	ldr	r3, [r3]
   2d4f8:	ldr	r3, [r3, #32]
   2d4fc:	bx	r3
   2d500:	andeq	r7, ip, ip, lsr sp
   2d504:	push	{r4, lr}
   2d508:	ldr	r0, [pc, #20]	; 2d524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198cc>
   2d50c:	bl	136b8 <getenv@plt>
   2d510:	cmp	r0, #0
   2d514:	ldreq	r3, [pc, #12]	; 2d528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198d0>
   2d518:	ldreq	r3, [r3]
   2d51c:	ldreq	r0, [r3, #48]	; 0x30
   2d520:	pop	{r4, pc}
   2d524:	andeq	r1, r5, r4, lsr #19
   2d528:	andeq	r7, ip, ip, lsr sp
   2d52c:	push	{r4, r5, lr}
   2d530:	sub	sp, sp, #12
   2d534:	ldr	r4, [pc, #188]	; 2d5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199a0>
   2d538:	ldr	r0, [r4, #4]
   2d53c:	cmp	r0, #0
   2d540:	beq	2d568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19910>
   2d544:	ldr	r3, [pc, #176]	; 2d5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199a4>
   2d548:	ldr	r5, [pc, #176]	; 2d600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199a8>
   2d54c:	ldrb	r3, [r3]
   2d550:	ldr	r1, [r5]
   2d554:	tst	r3, #2
   2d558:	bne	2d58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19934>
   2d55c:	cmp	r1, #0
   2d560:	bne	2d594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1993c>
   2d564:	bl	227cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb74>
   2d568:	ldr	r4, [pc, #148]	; 2d604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199ac>
   2d56c:	ldr	r3, [r4, #96]	; 0x60
   2d570:	cmp	r3, #0
   2d574:	beq	2d5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1998c>
   2d578:	ldr	r3, [r4, #100]	; 0x64
   2d57c:	cmp	r3, #0
   2d580:	beq	2d5bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19964>
   2d584:	add	sp, sp, #12
   2d588:	pop	{r4, r5, pc}
   2d58c:	cmp	r1, #0
   2d590:	beq	2d568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19910>
   2d594:	mov	r2, #0
   2d598:	add	r1, sp, #4
   2d59c:	bl	13250 <bfd_scan_vma@plt>
   2d5a0:	ldr	r3, [sp, #4]
   2d5a4:	ldrb	r3, [r3]
   2d5a8:	cmp	r3, #0
   2d5ac:	beq	2d568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19910>
   2d5b0:	ldr	r0, [r4, #4]
   2d5b4:	ldr	r1, [r5]
   2d5b8:	b	2d564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1990c>
   2d5bc:	ldr	r2, [pc, #56]	; 2d5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199a4>
   2d5c0:	ldr	r3, [pc, #64]	; 2d608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199b0>
   2d5c4:	ldrb	r1, [r2, #3]
   2d5c8:	ldr	r0, [r3]
   2d5cc:	lsr	r1, r1, #4
   2d5d0:	and	r1, r1, #1
   2d5d4:	bl	13208 <bfd_emul_get_commonpagesize@plt>
   2d5d8:	str	r0, [r4, #100]	; 0x64
   2d5dc:	add	sp, sp, #12
   2d5e0:	pop	{r4, r5, pc}
   2d5e4:	ldr	r3, [pc, #28]	; 2d608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199b0>
   2d5e8:	ldr	r0, [r3]
   2d5ec:	bl	13358 <bfd_emul_get_maxpagesize@plt>
   2d5f0:	str	r0, [r4, #96]	; 0x60
   2d5f4:	b	2d578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19920>
   2d5f8:	andeq	r7, ip, ip, lsr #25
   2d5fc:	andeq	r8, ip, ip, lsl #1
   2d600:	andeq	r8, ip, r4, asr #32
   2d604:	andeq	r8, ip, r4, ror r1
   2d608:	ldrdeq	r8, [ip], -ip
   2d60c:	bx	lr
   2d610:	bx	lr
   2d614:	mov	r0, #0
   2d618:	b	24550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108f8>
   2d61c:	ldr	r3, [pc, #16]	; 2d634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199dc>
   2d620:	ldrb	r3, [r3]
   2d624:	and	r3, r3, #3
   2d628:	cmp	r3, #2
   2d62c:	bxeq	lr
   2d630:	b	24234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105dc>
   2d634:	andeq	r8, ip, ip, lsl #1
   2d638:	ldr	r1, [pc, #20]	; 2d654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199fc>
   2d63c:	ldrb	r3, [r1]
   2d640:	and	r3, r3, #3
   2d644:	cmp	r3, #2
   2d648:	bxeq	lr
   2d64c:	ldr	r0, [r1, #48]	; 0x30
   2d650:	b	13b50 <_bfd_fix_excluded_sec_syms@plt>
   2d654:	andeq	r8, ip, ip, lsl #1
   2d658:	ldr	r2, [pc, #68]	; 2d6a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a4c>
   2d65c:	ldr	r3, [pc, #68]	; 2d6a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a50>
   2d660:	ldr	r1, [pc, #68]	; 2d6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a54>
   2d664:	ldr	r0, [r2, #48]	; 0x30
   2d668:	ldr	r2, [r3]
   2d66c:	push	{r4, r5, r6, lr}
   2d670:	ldr	r3, [r0, #4]
   2d674:	ldr	r5, [pc, #52]	; 2d6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a58>
   2d678:	ldr	r4, [pc, #52]	; 2d6b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a5c>
   2d67c:	ldr	r3, [r3, #340]	; 0x154
   2d680:	ldr	r1, [r1]
   2d684:	blx	r3
   2d688:	ldr	r1, [r5, #96]	; 0x60
   2d68c:	ldr	r0, [r4]
   2d690:	bl	13a48 <bfd_emul_set_maxpagesize@plt>
   2d694:	ldr	r1, [r5, #100]	; 0x64
   2d698:	ldr	r0, [r4]
   2d69c:	pop	{r4, r5, r6, lr}
   2d6a0:	b	136c4 <bfd_emul_set_commonpagesize@plt>
   2d6a4:	andeq	r8, ip, ip, lsl #1
   2d6a8:	andeq	r8, ip, r4, asr r2
   2d6ac:	andeq	r8, ip, r0, asr r2
   2d6b0:	andeq	r8, ip, r4, ror r1
   2d6b4:	andeq	r8, ip, r4, rrx
   2d6b8:	push	{r4, lr}
   2d6bc:	mov	r2, #5
   2d6c0:	ldr	r1, [pc, #16]	; 2d6d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a80>
   2d6c4:	mov	r0, #0
   2d6c8:	bl	13460 <dcgettext@plt>
   2d6cc:	mov	r1, #0
   2d6d0:	pop	{r4, lr}
   2d6d4:	b	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2d6d8:			; <UNDEFINED> instruction: 0x000519b0
   2d6dc:	push	{r4, lr}
   2d6e0:	mov	r2, #5
   2d6e4:	ldr	r1, [pc, #16]	; 2d6fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19aa4>
   2d6e8:	mov	r0, #0
   2d6ec:	bl	13460 <dcgettext@plt>
   2d6f0:	mov	r1, #0
   2d6f4:	pop	{r4, lr}
   2d6f8:	b	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2d6fc:	andeq	r1, r5, r4, asr #19
   2d700:	push	{r4, r5, r6, lr}
   2d704:	ldr	r4, [pc, #56]	; 2d744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19aec>
   2d708:	ldr	r3, [r4]
   2d70c:	cmp	r3, #0
   2d710:	popeq	{r4, r5, r6, pc}
   2d714:	mov	r5, r0
   2d718:	ldr	r0, [r3, #44]	; 0x2c
   2d71c:	mov	r1, r5
   2d720:	bl	13ba4 <fputs@plt>
   2d724:	ldr	r3, [r4, #4]!
   2d728:	mov	r1, r5
   2d72c:	cmp	r3, #0
   2d730:	mov	r0, #32
   2d734:	popeq	{r4, r5, r6, pc}
   2d738:	bl	139b8 <fputc@plt>
   2d73c:	ldr	r3, [r4]
   2d740:	b	2d718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ac0>
   2d744:	andeq	r7, ip, r8, lsl #8
   2d748:	push	{r4, r5, r6, lr}
   2d74c:	mov	r6, r0
   2d750:	ldrb	r3, [r0]
   2d754:	cmp	r3, #103	; 0x67
   2d758:	beq	2d7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b88>
   2d75c:	ldr	r5, [pc, #152]	; 2d7fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ba4>
   2d760:	ldr	r4, [r5]
   2d764:	cmp	r4, #0
   2d768:	bne	2d77c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b24>
   2d76c:	b	2d79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b44>
   2d770:	ldr	r4, [r5, #4]!
   2d774:	cmp	r4, #0
   2d778:	beq	2d79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b44>
   2d77c:	ldr	r1, [r4, #44]	; 0x2c
   2d780:	mov	r0, r6
   2d784:	bl	13268 <strcmp@plt>
   2d788:	cmp	r0, #0
   2d78c:	bne	2d770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b18>
   2d790:	ldr	r3, [pc, #104]	; 2d800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ba8>
   2d794:	str	r4, [r3]
   2d798:	pop	{r4, r5, r6, pc}
   2d79c:	mov	r2, #5
   2d7a0:	ldr	r1, [pc, #92]	; 2d804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bac>
   2d7a4:	mov	r0, #0
   2d7a8:	bl	13460 <dcgettext@plt>
   2d7ac:	mov	r1, r6
   2d7b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d7b4:	mov	r2, #5
   2d7b8:	ldr	r1, [pc, #72]	; 2d808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bb0>
   2d7bc:	mov	r0, #0
   2d7c0:	bl	13460 <dcgettext@plt>
   2d7c4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d7c8:	ldr	r3, [pc, #60]	; 2d80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bb4>
   2d7cc:	ldr	r0, [r3]
   2d7d0:	bl	2d700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19aa8>
   2d7d4:	ldr	r0, [pc, #52]	; 2d810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bb8>
   2d7d8:	pop	{r4, r5, r6, lr}
   2d7dc:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2d7e0:	ldrb	r3, [r0, #1]
   2d7e4:	cmp	r3, #108	; 0x6c
   2d7e8:	bne	2d75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b04>
   2d7ec:	ldrb	r3, [r0, #2]
   2d7f0:	cmp	r3, #100	; 0x64
   2d7f4:	addeq	r6, r0, #3
   2d7f8:	b	2d75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b04>
   2d7fc:	andeq	r7, ip, r8, lsl #8
   2d800:	andeq	r7, ip, ip, lsr sp
   2d804:	ldrdeq	r1, [r5], -r8
   2d808:	andeq	r1, r5, r0, lsl #20
   2d80c:	andeq	r7, ip, r8, asr #14
   2d810:	andeq	pc, r4, r0, lsl #22
   2d814:	push	{r4, r5, r6, r7, r8, lr}
   2d818:	mov	r6, r0
   2d81c:	ldr	r5, [pc, #112]	; 2d894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c3c>
   2d820:	ldr	r4, [r5]
   2d824:	cmp	r4, #0
   2d828:	movne	r2, #0
   2d82c:	ldrne	r7, [pc, #100]	; 2d898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c40>
   2d830:	beq	2d874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c1c>
   2d834:	ldr	r3, [r4, #88]	; 0x58
   2d838:	mov	r1, r7
   2d83c:	cmp	r3, #0
   2d840:	mov	r0, r6
   2d844:	beq	2d860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c08>
   2d848:	ldr	r2, [r4, #44]	; 0x2c
   2d84c:	bl	1382c <fprintf@plt>
   2d850:	ldr	r3, [r4, #88]	; 0x58
   2d854:	mov	r0, r6
   2d858:	blx	r3
   2d85c:	mov	r2, #1
   2d860:	ldr	r4, [r5, #4]!
   2d864:	cmp	r4, #0
   2d868:	bne	2d834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bdc>
   2d86c:	cmp	r2, #0
   2d870:	popne	{r4, r5, r6, r7, r8, pc}
   2d874:	ldr	r1, [pc, #32]	; 2d89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c44>
   2d878:	mov	r2, #5
   2d87c:	mov	r0, #0
   2d880:	bl	13460 <dcgettext@plt>
   2d884:	mov	r1, r0
   2d888:	mov	r0, r6
   2d88c:	pop	{r4, r5, r6, r7, r8, lr}
   2d890:	b	1382c <fprintf@plt>
   2d894:	andeq	r7, ip, r8, lsl #8
   2d898:	andeq	r1, r5, ip, lsr sl
   2d89c:	andeq	r1, r5, r8, lsl sl
   2d8a0:	ldr	r3, [pc, #24]	; 2d8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c68>
   2d8a4:	ldr	r3, [r3]
   2d8a8:	ldr	r3, [r3, #96]	; 0x60
   2d8ac:	cmp	r3, #0
   2d8b0:	beq	2d8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c60>
   2d8b4:	bx	r3
   2d8b8:	mov	r0, r3
   2d8bc:	bx	lr
   2d8c0:	andeq	r7, ip, ip, lsr sp
   2d8c4:	ldr	r3, [pc, #16]	; 2d8dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c84>
   2d8c8:	ldr	r3, [r3]
   2d8cc:	ldr	r3, [r3, #100]	; 0x64
   2d8d0:	cmp	r3, #0
   2d8d4:	bxeq	lr
   2d8d8:	bx	r3
   2d8dc:	andeq	r7, ip, ip, lsr sp
   2d8e0:	ldr	r3, [pc, #16]	; 2d8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ca0>
   2d8e4:	ldr	r3, [r3]
   2d8e8:	ldr	r3, [r3, #104]	; 0x68
   2d8ec:	cmp	r3, #0
   2d8f0:	bxeq	lr
   2d8f4:	bx	r3
   2d8f8:	andeq	r7, ip, ip, lsr sp
   2d8fc:	ldr	r3, [pc, #176]	; 2d9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d5c>
   2d900:	push	{r4, r5, r6, lr}
   2d904:	mov	r2, #5
   2d908:	mov	r4, r0
   2d90c:	ldr	r1, [pc, #164]	; 2d9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2d910:	mov	r0, #0
   2d914:	ldr	r5, [r3]
   2d918:	bl	13460 <dcgettext@plt>
   2d91c:	ldr	r2, [pc, #152]	; 2d9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d64>
   2d920:	mov	r1, r0
   2d924:	mov	r0, r5
   2d928:	bl	1382c <fprintf@plt>
   2d92c:	tst	r4, #2
   2d930:	bne	2d980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d28>
   2d934:	tst	r4, #1
   2d938:	popeq	{r4, r5, r6, pc}
   2d93c:	ldr	r4, [pc, #124]	; 2d9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d68>
   2d940:	mov	r2, #5
   2d944:	ldr	r1, [pc, #120]	; 2d9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d6c>
   2d948:	mov	r0, #0
   2d94c:	bl	13460 <dcgettext@plt>
   2d950:	bl	132bc <printf@plt>
   2d954:	ldr	r3, [r4]
   2d958:	cmp	r3, #0
   2d95c:	popeq	{r4, r5, r6, pc}
   2d960:	ldr	r5, [pc, #96]	; 2d9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d70>
   2d964:	ldr	r1, [r3, #44]	; 0x2c
   2d968:	mov	r0, r5
   2d96c:	bl	132bc <printf@plt>
   2d970:	ldr	r3, [r4, #4]!
   2d974:	cmp	r3, #0
   2d978:	bne	2d964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d0c>
   2d97c:	pop	{r4, r5, r6, pc}
   2d980:	mov	r2, #5
   2d984:	ldr	r1, [pc, #64]	; 2d9cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d74>
   2d988:	mov	r0, #0
   2d98c:	bl	13460 <dcgettext@plt>
   2d990:	bl	132bc <printf@plt>
   2d994:	mov	r2, #5
   2d998:	ldr	r1, [pc, #48]	; 2d9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d78>
   2d99c:	mov	r0, #0
   2d9a0:	bl	13460 <dcgettext@plt>
   2d9a4:	bl	132bc <printf@plt>
   2d9a8:	tst	r4, #1
   2d9ac:	popeq	{r4, r5, r6, pc}
   2d9b0:	b	2d93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ce4>
   2d9b4:	strdeq	r7, [ip], -ip
   2d9b8:	andeq	r1, r5, r4, asr #20
   2d9bc:	andeq	r1, r5, r0, asr sl
   2d9c0:	andeq	r7, ip, r8, lsl #8
   2d9c4:	andeq	r1, r5, ip, ror #22
   2d9c8:	andeq	r1, r5, r8, lsl #23
   2d9cc:	andeq	r1, r5, r4, ror sl
   2d9d0:	andeq	r1, r5, r8, lsr #21
   2d9d4:	ldr	r3, [pc, #8]	; 2d9e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d8c>
   2d9d8:	mov	r0, #32
   2d9dc:	ldr	r1, [r3, #80]	; 0x50
   2d9e0:	b	139b8 <fputc@plt>
   2d9e4:	andeq	r8, ip, r4, ror r1
   2d9e8:	ldr	r3, [pc, #8]	; 2d9f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da0>
   2d9ec:	mov	r0, #10
   2d9f0:	ldr	r1, [r3, #80]	; 0x50
   2d9f4:	b	139b8 <fputc@plt>
   2d9f8:	andeq	r8, ip, r4, ror r1
   2d9fc:	subs	r6, r2, #0
   2da00:	push	{r4, lr}
   2da04:	mov	r5, r1
   2da08:	mov	r4, r0
   2da0c:	beq	2da4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19df4>
   2da10:	mov	r2, #5
   2da14:	ldr	r1, [pc, #80]	; 2da6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e14>
   2da18:	mov	r0, #0
   2da1c:	bl	13460 <dcgettext@plt>
   2da20:	mov	r3, r6
   2da24:	mov	r2, r5
   2da28:	mov	r1, r4
   2da2c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2da30:	mov	r2, #5
   2da34:	ldr	r1, [pc, #52]	; 2da70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e18>
   2da38:	mov	r0, #0
   2da3c:	bl	13460 <dcgettext@plt>
   2da40:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2da44:	mov	r0, #1
   2da48:	bl	139d0 <xexit@plt>
   2da4c:	mov	r0, r6
   2da50:	mov	r2, #5
   2da54:	ldr	r1, [pc, #24]	; 2da74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e1c>
   2da58:	bl	13460 <dcgettext@plt>
   2da5c:	mov	r2, r5
   2da60:	mov	r1, r4
   2da64:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2da68:	b	2da30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19dd8>
   2da6c:	muleq	r5, r8, fp
   2da70:	strdeq	r1, [r5], -r0
   2da74:	andeq	r1, r5, r8, asr #23
   2da78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da7c:	sub	sp, sp, #260	; 0x104
   2da80:	add	lr, sp, #148	; 0x94
   2da84:	mov	r6, r0
   2da88:	str	r3, [sp, #16]
   2da8c:	mov	r0, r1
   2da90:	mov	r3, lr
   2da94:	add	ip, sp, #256	; 0x100
   2da98:	mov	r1, #0
   2da9c:	str	r1, [r3], #12
   2daa0:	cmp	ip, r3
   2daa4:	bne	2da9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e44>
   2daa8:	ldrb	r1, [r0]
   2daac:	ldr	r8, [pc, #3792]	; 2e984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad2c>
   2dab0:	mov	ip, r0
   2dab4:	mov	r4, #0
   2dab8:	mov	r3, r1
   2dabc:	cmp	r3, #0
   2dac0:	beq	2dcf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a09c>
   2dac4:	cmp	r3, #37	; 0x25
   2dac8:	beq	2dae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e8c>
   2dacc:	ldrb	r3, [ip, #1]!
   2dad0:	cmp	r3, #37	; 0x25
   2dad4:	cmpne	r3, #0
   2dad8:	bne	2dacc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e74>
   2dadc:	cmp	r3, #37	; 0x25
   2dae0:	bne	2dabc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e64>
   2dae4:	ldrb	r3, [ip, #1]
   2dae8:	add	r7, ip, #1
   2daec:	cmp	r3, #48	; 0x30
   2daf0:	beq	2e514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8bc>
   2daf4:	lsl	r5, r3, #1
   2daf8:	ldrh	r5, [r8, r5]
   2dafc:	tst	r5, #4
   2db00:	bne	2e014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a3bc>
   2db04:	mov	r5, r4
   2db08:	add	ip, r7, #1
   2db0c:	cmp	r3, #118	; 0x76
   2db10:	ldrls	pc, [pc, r3, lsl #2]
   2db14:	b	2e518 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8c0>
   2db18:	andeq	lr, r2, r8, lsr #9
   2db1c:	andeq	lr, r2, r8, lsl r5
   2db20:	andeq	lr, r2, r8, lsl r5
   2db24:	andeq	lr, r2, r8, lsl r5
   2db28:	andeq	lr, r2, r8, lsl r5
   2db2c:	andeq	lr, r2, r8, lsl r5
   2db30:	andeq	lr, r2, r8, lsl r5
   2db34:	andeq	lr, r2, r8, lsl r5
   2db38:	andeq	lr, r2, r8, lsl r5
   2db3c:	andeq	lr, r2, r8, lsl r5
   2db40:	andeq	lr, r2, r8, lsl r5
   2db44:	andeq	lr, r2, r8, lsl r5
   2db48:	andeq	lr, r2, r8, lsl r5
   2db4c:	andeq	lr, r2, r8, lsl r5
   2db50:	andeq	lr, r2, r8, lsl r5
   2db54:	andeq	lr, r2, r8, lsl r5
   2db58:	andeq	lr, r2, r8, lsl r5
   2db5c:	andeq	lr, r2, r8, lsl r5
   2db60:	andeq	lr, r2, r8, lsl r5
   2db64:	andeq	lr, r2, r8, lsl r5
   2db68:	andeq	lr, r2, r8, lsl r5
   2db6c:	andeq	lr, r2, r8, lsl r5
   2db70:	andeq	lr, r2, r8, lsl r5
   2db74:	andeq	lr, r2, r8, lsl r5
   2db78:	andeq	lr, r2, r8, lsl r5
   2db7c:	andeq	lr, r2, r8, lsl r5
   2db80:	andeq	lr, r2, r8, lsl r5
   2db84:	andeq	lr, r2, r8, lsl r5
   2db88:	andeq	lr, r2, r8, lsl r5
   2db8c:	andeq	lr, r2, r8, lsl r5
   2db90:	andeq	lr, r2, r8, lsl r5
   2db94:	andeq	lr, r2, r8, lsl r5
   2db98:	andeq	lr, r2, r8, lsl r5
   2db9c:	andeq	lr, r2, r8, lsl r5
   2dba0:	andeq	lr, r2, r8, lsl r5
   2dba4:	andeq	lr, r2, r8, lsl r5
   2dba8:	andeq	lr, r2, r8, lsl r5
   2dbac:	andeq	lr, r2, r8, lsl r5
   2dbb0:	andeq	lr, r2, r8, lsl r5
   2dbb4:	andeq	lr, r2, r8, lsl r5
   2dbb8:	andeq	lr, r2, r8, lsl r5
   2dbbc:	andeq	lr, r2, r8, lsl r5
   2dbc0:	andeq	lr, r2, r8, lsl r5
   2dbc4:	andeq	lr, r2, r8, lsl r5
   2dbc8:	andeq	lr, r2, r8, lsl r5
   2dbcc:	andeq	lr, r2, r8, lsl r5
   2dbd0:	andeq	lr, r2, r8, lsl r5
   2dbd4:	andeq	lr, r2, r8, lsl r5
   2dbd8:	andeq	lr, r2, r8, lsl r5
   2dbdc:	andeq	lr, r2, r8, lsl r5
   2dbe0:	andeq	lr, r2, r8, lsl r5
   2dbe4:	andeq	lr, r2, r8, lsl r5
   2dbe8:	andeq	lr, r2, r8, lsl r5
   2dbec:	andeq	lr, r2, r8, lsl r5
   2dbf0:	andeq	lr, r2, r8, lsl r5
   2dbf4:	andeq	lr, r2, r8, lsl r5
   2dbf8:	andeq	lr, r2, r8, lsl r5
   2dbfc:	andeq	lr, r2, r8, lsl r5
   2dc00:	andeq	lr, r2, r8, lsl r5
   2dc04:	andeq	lr, r2, r8, lsl r5
   2dc08:	andeq	lr, r2, r8, lsl r5
   2dc0c:	andeq	lr, r2, r8, lsl r5
   2dc10:	andeq	lr, r2, r8, lsl r5
   2dc14:	andeq	lr, r2, r8, lsl r5
   2dc18:	andeq	lr, r2, r8, lsl r5
   2dc1c:	andeq	lr, r2, r8, lsl r5
   2dc20:	andeq	lr, r2, r8, lsl r5
   2dc24:			; <UNDEFINED> instruction: 0x0002e4b0
   2dc28:			; <UNDEFINED> instruction: 0x0002e4b0
   2dc2c:	andeq	lr, r2, r8, lsl r5
   2dc30:	andeq	lr, r2, r8, lsl r5
   2dc34:			; <UNDEFINED> instruction: 0x0002e4b0
   2dc38:			; <UNDEFINED> instruction: 0x0002e4b0
   2dc3c:	andeq	lr, r2, r8, lsl r5
   2dc40:	andeq	lr, r2, r8, lsl r5
   2dc44:	andeq	lr, r2, r8, lsl r5
   2dc48:	andeq	lr, r2, r8, lsl r5
   2dc4c:	andeq	lr, r2, r8, lsl r5
   2dc50:	andeq	lr, r2, r8, lsl r5
   2dc54:	andeq	lr, r2, r8, lsl r5
   2dc58:	andeq	lr, r2, r8, lsl r5
   2dc5c:	andeq	lr, r2, r8, lsl r5
   2dc60:	andeq	lr, r2, r8, lsl r5
   2dc64:	andeq	lr, r2, r8, lsl r5
   2dc68:	andeq	lr, r2, r8, lsl r5
   2dc6c:	andeq	lr, r2, r8, lsl r5
   2dc70:	andeq	lr, r2, r4, asr #8
   2dc74:	andeq	lr, r2, r4, asr #8
   2dc78:	andeq	lr, r2, r8, lsl r5
   2dc7c:	andeq	lr, r2, r8, lsl r5
   2dc80:	andeq	lr, r2, r8, lsl r5
   2dc84:	andeq	lr, r2, r8, lsl r5
   2dc88:	andeq	lr, r2, r8, lsl r5
   2dc8c:	andeq	lr, r2, r8, lsl r5
   2dc90:	andeq	lr, r2, r8, lsl r5
   2dc94:	andeq	lr, r2, r8, lsl r5
   2dc98:	andeq	lr, r2, r8, lsl r5
   2dc9c:	andeq	lr, r2, r8, lsl r5
   2dca0:	andeq	lr, r2, r8, lsl r5
   2dca4:	andeq	lr, r2, r8, lsl r5
   2dca8:	andeq	lr, r2, ip, asr #8
   2dcac:	andeq	lr, r2, r8, lsl r5
   2dcb0:	andeq	lr, r2, r8, lsl r5
   2dcb4:	andeq	lr, r2, r8, lsl r5
   2dcb8:	andeq	lr, r2, r8, lsl r5
   2dcbc:	andeq	lr, r2, r8, lsl r5
   2dcc0:	andeq	lr, r2, r8, lsl r5
   2dcc4:	andeq	lr, r2, r8, lsl r5
   2dcc8:	andeq	lr, r2, r4, asr r4
   2dccc:	andeq	lr, r2, r8, lsl r5
   2dcd0:	andeq	lr, r2, r8, lsl r5
   2dcd4:	andeq	lr, r2, r8, lsl r5
   2dcd8:	andeq	lr, r2, r0, ror r4
   2dcdc:	andeq	lr, r2, r8, lsl r5
   2dce0:	andeq	lr, r2, r8, lsl r5
   2dce4:	andeq	lr, r2, ip, lsl r4
   2dce8:	andeq	lr, r2, r8, lsl r5
   2dcec:	andeq	lr, r2, ip, asr #8
   2dcf0:	andeq	lr, r2, r4, asr #8
   2dcf4:	cmp	r4, #0
   2dcf8:	beq	2dd3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0e4>
   2dcfc:	ldr	ip, [lr]
   2dd00:	sub	ip, ip, #1
   2dd04:	cmp	ip, #4
   2dd08:	ldrls	pc, [pc, ip, lsl #2]
   2dd0c:	b	2e974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad1c>
   2dd10:	andeq	sp, r2, r4, lsr #26
   2dd14:	andeq	sp, r2, r4, lsr #26
   2dd18:	andeq	sp, r2, r4, lsr #26
   2dd1c:	andeq	sp, r2, r4, lsr #26
   2dd20:	andeq	sp, r2, ip, asr #27
   2dd24:	ldr	ip, [r2], #4
   2dd28:	str	ip, [lr]
   2dd2c:	add	r3, r3, #1
   2dd30:	cmp	r4, r3
   2dd34:	add	lr, lr, #12
   2dd38:	bne	2dcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0a4>
   2dd3c:	mov	r3, r1
   2dd40:	mov	fp, #0
   2dd44:	cmp	r3, #0
   2dd48:	mov	sl, fp
   2dd4c:	ldr	r9, [pc, #3120]	; 2e984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad2c>
   2dd50:	beq	2ddb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a158>
   2dd54:	cmp	r3, #37	; 0x25
   2dd58:	moveq	r4, r0
   2dd5c:	beq	2dde4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a18c>
   2dd60:	mov	r5, r0
   2dd64:	b	2dd6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a114>
   2dd68:	mov	r5, r4
   2dd6c:	ldrb	r3, [r5, #1]
   2dd70:	add	r4, r5, #1
   2dd74:	cmp	r3, #37	; 0x25
   2dd78:	cmpne	r3, #0
   2dd7c:	bne	2dd68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a110>
   2dd80:	cmp	r0, r4
   2dd84:	beq	2dd9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a144>
   2dd88:	mov	r3, r6
   2dd8c:	sub	r2, r4, r0
   2dd90:	mov	r1, #1
   2dd94:	bl	13568 <fwrite@plt>
   2dd98:	ldrb	r3, [r5, #1]
   2dd9c:	cmp	r3, #37	; 0x25
   2dda0:	beq	2dde4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a18c>
   2dda4:	cmp	r3, #0
   2dda8:	mov	r0, r4
   2ddac:	bne	2dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0fc>
   2ddb0:	ldr	r2, [sp, #16]
   2ddb4:	cmp	r2, #0
   2ddb8:	bne	2e000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a3a8>
   2ddbc:	cmp	sl, #0
   2ddc0:	bne	2e948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1acf0>
   2ddc4:	add	sp, sp, #260	; 0x104
   2ddc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ddcc:	ldmib	r2, {r5, ip}
   2ddd0:	ldr	r7, [r2]
   2ddd4:	add	r2, r2, #12
   2ddd8:	str	r7, [lr]
   2dddc:	stmib	lr, {r5, ip}
   2dde0:	b	2dd2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0d4>
   2dde4:	ldrb	r2, [r4, #1]
   2dde8:	add	r5, r4, #1
   2ddec:	cmp	r2, #48	; 0x30
   2ddf0:	beq	2e058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a400>
   2ddf4:	lsl	r3, r2, #1
   2ddf8:	ldrh	r3, [r9, r3]
   2ddfc:	tst	r3, #4
   2de00:	beq	2de10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a1b8>
   2de04:	ldrb	r3, [r4, #2]
   2de08:	cmp	r3, #36	; 0x24
   2de0c:	beq	2e048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a3f0>
   2de10:	mov	r3, fp
   2de14:	add	r4, r5, #1
   2de18:	cmp	r2, #118	; 0x76
   2de1c:	ldrls	pc, [pc, r2, lsl #2]
   2de20:	b	2e05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a404>
   2de24:	andeq	lr, r2, r0, lsr r0
   2de28:	andeq	lr, r2, ip, asr r0
   2de2c:	andeq	lr, r2, ip, asr r0
   2de30:	andeq	lr, r2, ip, asr r0
   2de34:	andeq	lr, r2, ip, asr r0
   2de38:	andeq	lr, r2, ip, asr r0
   2de3c:	andeq	lr, r2, ip, asr r0
   2de40:	andeq	lr, r2, ip, asr r0
   2de44:	andeq	lr, r2, ip, asr r0
   2de48:	andeq	lr, r2, ip, asr r0
   2de4c:	andeq	lr, r2, ip, asr r0
   2de50:	andeq	lr, r2, ip, asr r0
   2de54:	andeq	lr, r2, ip, asr r0
   2de58:	andeq	lr, r2, ip, asr r0
   2de5c:	andeq	lr, r2, ip, asr r0
   2de60:	andeq	lr, r2, ip, asr r0
   2de64:	andeq	lr, r2, ip, asr r0
   2de68:	andeq	lr, r2, ip, asr r0
   2de6c:	andeq	lr, r2, ip, asr r0
   2de70:	andeq	lr, r2, ip, asr r0
   2de74:	andeq	lr, r2, ip, asr r0
   2de78:	andeq	lr, r2, ip, asr r0
   2de7c:	andeq	lr, r2, ip, asr r0
   2de80:	andeq	lr, r2, ip, asr r0
   2de84:	andeq	lr, r2, ip, asr r0
   2de88:	andeq	lr, r2, ip, asr r0
   2de8c:	andeq	lr, r2, ip, asr r0
   2de90:	andeq	lr, r2, ip, asr r0
   2de94:	andeq	lr, r2, ip, asr r0
   2de98:	andeq	lr, r2, ip, asr r0
   2de9c:	andeq	lr, r2, ip, asr r0
   2dea0:	andeq	lr, r2, ip, asr r0
   2dea4:	andeq	lr, r2, ip, asr r0
   2dea8:	andeq	lr, r2, ip, asr r0
   2deac:	andeq	lr, r2, ip, asr r0
   2deb0:	andeq	lr, r2, ip, asr r0
   2deb4:	andeq	lr, r2, ip, asr r0
   2deb8:	andeq	lr, r2, r4, lsr r0
   2debc:	andeq	lr, r2, ip, asr r0
   2dec0:	andeq	lr, r2, ip, asr r0
   2dec4:	andeq	lr, r2, ip, asr r0
   2dec8:	andeq	lr, r2, ip, asr r0
   2decc:	andeq	lr, r2, ip, asr r0
   2ded0:	andeq	lr, r2, ip, asr r0
   2ded4:	andeq	lr, r2, ip, asr r0
   2ded8:	andeq	lr, r2, ip, asr r0
   2dedc:	andeq	lr, r2, ip, asr r0
   2dee0:	andeq	lr, r2, ip, asr r0
   2dee4:	andeq	lr, r2, ip, asr r0
   2dee8:	andeq	lr, r2, ip, asr r0
   2deec:	andeq	lr, r2, ip, asr r0
   2def0:	andeq	lr, r2, ip, asr r0
   2def4:	andeq	lr, r2, ip, asr r0
   2def8:	andeq	lr, r2, ip, asr r0
   2defc:	andeq	lr, r2, ip, asr r0
   2df00:	andeq	lr, r2, ip, asr r0
   2df04:	andeq	lr, r2, ip, asr r0
   2df08:	andeq	lr, r2, ip, asr r0
   2df0c:	andeq	lr, r2, ip, asr r0
   2df10:	andeq	lr, r2, ip, asr r0
   2df14:	andeq	lr, r2, ip, asr r0
   2df18:	andeq	lr, r2, ip, asr r0
   2df1c:	andeq	lr, r2, ip, asr r0
   2df20:	andeq	lr, r2, ip, asr r0
   2df24:	andeq	lr, r2, ip, asr r0
   2df28:	andeq	lr, r2, ip, asr r0
   2df2c:	andeq	lr, r2, ip, asr r0
   2df30:	andeq	lr, r2, r8, ror #3
   2df34:	andeq	lr, r2, r8, ror #3
   2df38:	andeq	lr, r2, r4, asr #3
   2df3c:	ldrdeq	lr, [r2], -ip
   2df40:	andeq	lr, r2, r8, ror #3
   2df44:	andeq	lr, r2, r8, ror #3
   2df48:	andeq	lr, r2, ip, asr r0
   2df4c:	andeq	lr, r2, ip, asr r0
   2df50:	andeq	lr, r2, ip, asr r0
   2df54:	andeq	lr, r2, ip, asr r0
   2df58:	andeq	lr, r2, ip, asr r0
   2df5c:	andeq	lr, r2, ip, asr r0
   2df60:	andeq	lr, r2, ip, asr r0
   2df64:	andeq	lr, r2, r4, lsl #2
   2df68:	andeq	lr, r2, ip, asr r0
   2df6c:	andeq	lr, r2, ip, asr r0
   2df70:	andeq	lr, r2, ip, asr r0
   2df74:	andeq	lr, r2, ip, asr r0
   2df78:	andeq	lr, r2, ip, asr r0
   2df7c:	andeq	lr, r2, ip, lsl r1
   2df80:	andeq	lr, r2, r8, lsr #2
   2df84:			; <UNDEFINED> instruction: 0x0002e1b0
   2df88:	andeq	lr, r2, ip, asr r0
   2df8c:	andeq	lr, r2, ip, asr r0
   2df90:	andeq	lr, r2, ip, asr r0
   2df94:	andeq	lr, r2, ip, asr r0
   2df98:	andeq	lr, r2, ip, asr r0
   2df9c:	andeq	lr, r2, ip, asr r0
   2dfa0:	andeq	lr, r2, ip, asr r0
   2dfa4:	andeq	lr, r2, ip, asr r0
   2dfa8:	andeq	lr, r2, ip, asr r0
   2dfac:	andeq	lr, r2, ip, asr r0
   2dfb0:	andeq	lr, r2, ip, asr r0
   2dfb4:	andeq	lr, r2, r8, lsr #6
   2dfb8:	andeq	lr, r2, ip, asr r0
   2dfbc:	andeq	lr, r2, ip, asr r0
   2dfc0:	andeq	lr, r2, ip, asr r0
   2dfc4:	andeq	lr, r2, ip, asr r0
   2dfc8:	andeq	lr, r2, ip, asr r0
   2dfcc:	andeq	lr, r2, ip, asr r0
   2dfd0:	andeq	lr, r2, ip, asr r0
   2dfd4:	andeq	lr, r2, r4, lsr r3
   2dfd8:	andeq	lr, r2, ip, asr r0
   2dfdc:	andeq	lr, r2, ip, asr r0
   2dfe0:	andeq	lr, r2, ip, asr r0
   2dfe4:	andeq	lr, r2, r4, ror r3
   2dfe8:	andeq	lr, r2, ip, asr r0
   2dfec:	andeq	lr, r2, ip, asr r0
   2dff0:	andeq	lr, r2, r0, ror r0
   2dff4:	andeq	lr, r2, ip, asr r0
   2dff8:	muleq	r2, r4, r0
   2dffc:	strheq	lr, [r2], -ip
   2e000:	ldr	r2, [pc, #2432]	; 2e988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad30>
   2e004:	ldr	r1, [r2, #40]	; 0x28
   2e008:	cmp	r1, #0
   2e00c:	strne	r3, [r2, #4]
   2e010:	b	2ddbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a164>
   2e014:	ldrb	r5, [ip, #2]
   2e018:	cmp	r5, #36	; 0x24
   2e01c:	bne	2db04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19eac>
   2e020:	sub	r5, r3, #49	; 0x31
   2e024:	add	r7, ip, #3
   2e028:	ldrb	r3, [ip, #3]
   2e02c:	b	2db08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19eb0>
   2e030:	mov	r4, r5
   2e034:	mov	r1, r6
   2e038:	mov	r0, #37	; 0x25
   2e03c:	bl	13a18 <putc@plt>
   2e040:	ldrb	r3, [r4]
   2e044:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e048:	sub	r3, r2, #49	; 0x31
   2e04c:	add	r5, r4, #3
   2e050:	ldrb	r2, [r4, #3]
   2e054:	b	2de14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a1bc>
   2e058:	add	r4, r4, #2
   2e05c:	ldr	r1, [pc, #2344]	; 2e98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad34>
   2e060:	mov	r0, r6
   2e064:	bl	1382c <fprintf@plt>
   2e068:	ldrb	r3, [r5, #1]
   2e06c:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e070:	add	r3, r3, r3, lsl #1
   2e074:	add	r2, sp, #256	; 0x100
   2e078:	add	r3, r2, r3, lsl #2
   2e07c:	mov	r1, r6
   2e080:	ldr	r0, [r3, #-108]	; 0xffffff94
   2e084:	bl	13ba4 <fputs@plt>
   2e088:	add	fp, fp, #1
   2e08c:	ldrb	r3, [r5, #1]
   2e090:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e094:	ldr	r1, [pc, #2292]	; 2e990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad38>
   2e098:	add	r3, r3, r3, lsl #1
   2e09c:	add	r2, sp, #256	; 0x100
   2e0a0:	add	r3, r2, r3, lsl #2
   2e0a4:	mov	r0, r6
   2e0a8:	ldr	r2, [r3, #-108]	; 0xffffff94
   2e0ac:	bl	1382c <fprintf@plt>
   2e0b0:	add	fp, fp, #1
   2e0b4:	ldrb	r3, [r5, #1]
   2e0b8:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e0bc:	add	r3, r3, r3, lsl #1
   2e0c0:	add	r2, sp, #256	; 0x100
   2e0c4:	add	r3, r2, r3, lsl #2
   2e0c8:	add	r0, sp, #48	; 0x30
   2e0cc:	ldr	r2, [r3, #-108]	; 0xffffff94
   2e0d0:	ldr	r1, [pc, #2236]	; 2e994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad3c>
   2e0d4:	bl	13a00 <sprintf@plt>
   2e0d8:	ldrb	r3, [sp, #48]	; 0x30
   2e0dc:	add	fp, fp, #1
   2e0e0:	add	r0, sp, #48	; 0x30
   2e0e4:	cmp	r3, #48	; 0x30
   2e0e8:	bne	2e0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4a0>
   2e0ec:	ldrb	r3, [r0, #1]!
   2e0f0:	cmp	r3, #48	; 0x30
   2e0f4:	beq	2e0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a494>
   2e0f8:	cmp	r3, #0
   2e0fc:	subeq	r0, r0, #1
   2e100:	b	2e1cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a574>
   2e104:	ldr	r3, [pc, #2188]	; 2e998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad40>
   2e108:	mov	r1, r6
   2e10c:	ldr	r0, [r3]
   2e110:	bl	13ba4 <fputs@plt>
   2e114:	ldrb	r3, [r5, #1]
   2e118:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e11c:	add	r3, r3, r3, lsl #1
   2e120:	ldr	r1, [pc, #2156]	; 2e994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad3c>
   2e124:	b	2e09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a444>
   2e128:	add	r3, r3, r3, lsl #1
   2e12c:	add	r2, sp, #256	; 0x100
   2e130:	add	r3, r2, r3, lsl #2
   2e134:	add	r0, sp, #48	; 0x30
   2e138:	ldr	r2, [r3, #-108]	; 0xffffff94
   2e13c:	ldr	r1, [pc, #2128]	; 2e994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad3c>
   2e140:	bl	13a00 <sprintf@plt>
   2e144:	ldrb	r3, [sp, #48]	; 0x30
   2e148:	add	fp, fp, #1
   2e14c:	add	r7, sp, #48	; 0x30
   2e150:	cmp	r3, #48	; 0x30
   2e154:	bne	2e164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a50c>
   2e158:	ldrb	r3, [r7, #1]!
   2e15c:	cmp	r3, #48	; 0x30
   2e160:	beq	2e158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a500>
   2e164:	cmp	r3, #0
   2e168:	subeq	r7, r7, #1
   2e16c:	mov	r0, r7
   2e170:	bl	137d8 <strlen@plt>
   2e174:	cmp	r0, #7
   2e178:	mov	r8, r0
   2e17c:	bhi	2e198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a540>
   2e180:	add	r8, r8, #1
   2e184:	mov	r1, r6
   2e188:	mov	r0, #32
   2e18c:	bl	13a18 <putc@plt>
   2e190:	cmp	r8, #8
   2e194:	bne	2e180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a528>
   2e198:	mov	r2, r7
   2e19c:	ldr	r1, [pc, #2040]	; 2e99c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad44>
   2e1a0:	mov	r0, r6
   2e1a4:	bl	1382c <fprintf@plt>
   2e1a8:	ldrb	r3, [r5, #1]
   2e1ac:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e1b0:	ldr	r3, [pc, #2000]	; 2e988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad30>
   2e1b4:	mov	r2, #0
   2e1b8:	str	r2, [r3, #4]
   2e1bc:	ldrb	r3, [r5, #1]
   2e1c0:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e1c4:	bl	13550 <bfd_get_error@plt>
   2e1c8:	bl	13a6c <bfd_errmsg@plt>
   2e1cc:	mov	r1, r6
   2e1d0:	bl	13ba4 <fputs@plt>
   2e1d4:	ldrb	r3, [r5, #1]
   2e1d8:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e1dc:	ldrb	r3, [r5, #1]
   2e1e0:	mov	sl, #1
   2e1e4:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e1e8:	add	r3, r3, r3, lsl #1
   2e1ec:	add	r2, sp, #256	; 0x100
   2e1f0:	add	r3, r2, r3, lsl #2
   2e1f4:	add	fp, fp, #1
   2e1f8:	ldr	r8, [r3, #-108]	; 0xffffff94
   2e1fc:	ldr	r2, [r3, #-104]	; 0xffffff98
   2e200:	ldr	r3, [r3, #-100]	; 0xffffff9c
   2e204:	cmp	r8, #0
   2e208:	str	r2, [sp, #24]
   2e20c:	str	r3, [sp, #28]
   2e210:	beq	2e4b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a860>
   2e214:	mov	r0, r8
   2e218:	bl	13304 <bfd_generic_link_read_symbols@plt>
   2e21c:	cmp	r0, #0
   2e220:	beq	2e6a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa48>
   2e224:	ldr	r2, [r8, #4]
   2e228:	mov	lr, #0
   2e22c:	add	ip, sp, #48	; 0x30
   2e230:	add	r0, sp, #44	; 0x2c
   2e234:	add	r3, sp, #40	; 0x28
   2e238:	ldr	r1, [r8, #120]	; 0x78
   2e23c:	stmib	sp, {r0, ip, lr}
   2e240:	mov	r0, r8
   2e244:	str	r3, [sp]
   2e248:	ldr	r3, [sp, #28]
   2e24c:	ldr	r7, [r2, #296]	; 0x128
   2e250:	ldr	r2, [sp, #24]
   2e254:	blx	r7
   2e258:	cmp	r0, #0
   2e25c:	beq	2e4b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a860>
   2e260:	ldr	r3, [sp, #44]	; 0x2c
   2e264:	cmp	r3, #0
   2e268:	beq	2e520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8c8>
   2e26c:	ldrb	r2, [r5]
   2e270:	cmp	r2, #72	; 0x48
   2e274:	cmpne	r2, #67	; 0x43
   2e278:	str	r2, [sp, #32]
   2e27c:	bne	2e520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8c8>
   2e280:	ldr	r7, [pc, #1816]	; 2e9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad48>
   2e284:	ldr	r1, [r7]
   2e288:	cmp	r1, #0
   2e28c:	beq	2e2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a654>
   2e290:	ldr	r2, [r7, #8]
   2e294:	subs	r1, r1, r8
   2e298:	movne	r1, #1
   2e29c:	cmp	r2, #0
   2e2a0:	moveq	r1, #1
   2e2a4:	cmp	r1, #0
   2e2a8:	beq	2e8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aca0>
   2e2ac:	mov	r2, #5
   2e2b0:	ldr	r1, [pc, #1772]	; 2e9a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad4c>
   2e2b4:	mov	r0, #0
   2e2b8:	bl	13460 <dcgettext@plt>
   2e2bc:	ldr	r3, [sp, #44]	; 0x2c
   2e2c0:	mov	r2, r8
   2e2c4:	mov	r1, r0
   2e2c8:	mov	r0, r6
   2e2cc:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e2d0:	ldr	r0, [r7, #4]
   2e2d4:	str	r8, [r7]
   2e2d8:	cmp	r0, #0
   2e2dc:	beq	2e2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a68c>
   2e2e0:	bl	13364 <free@plt>
   2e2e4:	ldr	r0, [sp, #40]	; 0x28
   2e2e8:	mov	r3, #0
   2e2ec:	cmp	r0, r3
   2e2f0:	str	r3, [r7, #4]
   2e2f4:	beq	2e300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a8>
   2e2f8:	bl	135a4 <xstrdup@plt>
   2e2fc:	str	r0, [r7, #4]
   2e300:	ldr	r0, [r7, #8]
   2e304:	cmp	r0, #0
   2e308:	beq	2e310 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6b8>
   2e30c:	bl	13364 <free@plt>
   2e310:	ldr	r0, [sp, #44]	; 0x2c
   2e314:	bl	135a4 <xstrdup@plt>
   2e318:	mov	r3, #0
   2e31c:	str	r3, [sp, #20]
   2e320:	str	r0, [r7, #8]
   2e324:	b	2e538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8e0>
   2e328:	add	r3, r3, r3, lsl #1
   2e32c:	ldr	r1, [pc, #1652]	; 2e9a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad50>
   2e330:	b	2e09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a444>
   2e334:	ldrb	r1, [r5, #1]
   2e338:	cmp	r1, #100	; 0x64
   2e33c:	beq	2e744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aaec>
   2e340:	cmp	r1, #117	; 0x75
   2e344:	bne	2e05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a404>
   2e348:	ldr	r1, [pc, #1628]	; 2e9ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad54>
   2e34c:	add	r3, r3, r3, lsl #1
   2e350:	add	r2, sp, #256	; 0x100
   2e354:	add	r3, r2, r3, lsl #2
   2e358:	mov	r0, r6
   2e35c:	ldr	r2, [r3, #-108]	; 0xffffff94
   2e360:	bl	1382c <fprintf@plt>
   2e364:	add	fp, fp, #1
   2e368:	add	r4, r5, #2
   2e36c:	ldrb	r3, [r5, #2]
   2e370:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e374:	ldrb	r2, [r5, #1]
   2e378:	add	fp, fp, #1
   2e37c:	add	r3, r3, r3, lsl #1
   2e380:	cmp	r2, #65	; 0x41
   2e384:	beq	2e6b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa60>
   2e388:	cmp	r2, #66	; 0x42
   2e38c:	beq	2e618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a9c0>
   2e390:	cmp	r2, #73	; 0x49
   2e394:	beq	2e750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aaf8>
   2e398:	cmp	r2, #82	; 0x52
   2e39c:	beq	2e5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a95c>
   2e3a0:	cmp	r2, #83	; 0x53
   2e3a4:	beq	2e86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac14>
   2e3a8:	cmp	r2, #84	; 0x54
   2e3ac:	bne	2e84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1abf4>
   2e3b0:	add	r2, sp, #256	; 0x100
   2e3b4:	add	r3, r2, r3, lsl #2
   2e3b8:	add	r4, r5, #2
   2e3bc:	ldr	r7, [r3, #-108]	; 0xffffff94
   2e3c0:	cmp	r7, #0
   2e3c4:	beq	2e828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1abd0>
   2e3c8:	ldrb	r3, [r7]
   2e3cc:	cmp	r3, #0
   2e3d0:	beq	2e828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1abd0>
   2e3d4:	ldr	r3, [pc, #1492]	; 2e9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad58>
   2e3d8:	ldr	r3, [r3]
   2e3dc:	cmp	r3, #0
   2e3e0:	beq	2e8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac4c>
   2e3e4:	ldr	r3, [pc, #1480]	; 2e9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad5c>
   2e3e8:	mov	r2, #3
   2e3ec:	mov	r1, r7
   2e3f0:	ldr	r0, [r3, #48]	; 0x30
   2e3f4:	bl	1397c <bfd_demangle@plt>
   2e3f8:	subs	r8, r0, #0
   2e3fc:	beq	2e8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac4c>
   2e400:	mov	r1, r6
   2e404:	mov	r0, r8
   2e408:	bl	13ba4 <fputs@plt>
   2e40c:	mov	r0, r8
   2e410:	bl	13364 <free@plt>
   2e414:	ldrb	r3, [r5, #2]
   2e418:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e41c:	mov	r7, #3
   2e420:	cmp	r5, #8
   2e424:	bhi	2e8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac7c>
   2e428:	add	r5, r5, r5, lsl #1
   2e42c:	add	r3, sp, #256	; 0x100
   2e430:	add	r5, r3, r5, lsl #2
   2e434:	add	r4, r4, #1
   2e438:	ldrb	r3, [ip]
   2e43c:	str	r7, [r5, #-108]	; 0xffffff94
   2e440:	b	2dabc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e64>
   2e444:	mov	r7, #4
   2e448:	b	2e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c8>
   2e44c:	mov	r7, #1
   2e450:	b	2e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c8>
   2e454:	ldrb	r3, [r7, #1]
   2e458:	cmp	r3, #117	; 0x75
   2e45c:	cmpne	r3, #100	; 0x64
   2e460:	addeq	ip, r7, #2
   2e464:	moveq	r7, #2
   2e468:	beq	2e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c8>
   2e46c:	b	2dabc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e64>
   2e470:	ldrb	r9, [r7, #1]
   2e474:	sub	r3, r9, #65	; 0x41
   2e478:	sub	sl, r9, #82	; 0x52
   2e47c:	cmp	sl, #2
   2e480:	cmphi	r3, #1
   2e484:	movls	r3, #1
   2e488:	movhi	r3, #0
   2e48c:	cmp	r9, #73	; 0x49
   2e490:	orreq	r3, r3, #1
   2e494:	cmp	r3, #0
   2e498:	beq	2e41c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c4>
   2e49c:	add	ip, r7, #2
   2e4a0:	mov	r7, #3
   2e4a4:	b	2e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c8>
   2e4a8:	mov	ip, r7
   2e4ac:	b	2dabc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e64>
   2e4b0:	mov	r7, #5
   2e4b4:	b	2e420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a7c8>
   2e4b8:	mov	r2, r8
   2e4bc:	ldr	r1, [pc, #1268]	; 2e9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad60>
   2e4c0:	mov	r0, r6
   2e4c4:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e4c8:	ldrd	r2, [sp, #24]
   2e4cc:	ldr	r1, [pc, #1256]	; 2e9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad64>
   2e4d0:	mov	r0, r6
   2e4d4:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e4d8:	ldr	r7, [pc, #1216]	; 2e9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad48>
   2e4dc:	mov	r8, #0
   2e4e0:	ldr	r0, [r7, #4]
   2e4e4:	str	r8, [r7]
   2e4e8:	cmp	r0, r8
   2e4ec:	beq	2e4f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8a0>
   2e4f0:	bl	13364 <free@plt>
   2e4f4:	str	r8, [r7, #4]
   2e4f8:	ldr	r0, [r7, #8]
   2e4fc:	cmp	r0, #0
   2e500:	beq	2e068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a410>
   2e504:	bl	13364 <free@plt>
   2e508:	mov	r3, #0
   2e50c:	str	r3, [r7, #8]
   2e510:	b	2e068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a410>
   2e514:	add	ip, ip, #2
   2e518:	ldrb	r3, [r7, #1]
   2e51c:	b	2dabc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e64>
   2e520:	mov	r2, r8
   2e524:	ldr	r1, [pc, #1164]	; 2e9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad60>
   2e528:	mov	r0, r6
   2e52c:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e530:	mov	r3, #1
   2e534:	str	r3, [sp, #20]
   2e538:	ldr	r2, [sp, #40]	; 0x28
   2e53c:	cmp	r2, #0
   2e540:	beq	2e660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa08>
   2e544:	ldr	r1, [pc, #1140]	; 2e9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad68>
   2e548:	mov	r0, r6
   2e54c:	bl	1382c <fprintf@plt>
   2e550:	ldrb	r1, [r5]
   2e554:	ldr	r2, [sp, #44]	; 0x2c
   2e558:	cmp	r2, #0
   2e55c:	sub	r3, r1, #71	; 0x47
   2e560:	clz	r3, r3
   2e564:	lsr	r3, r3, #5
   2e568:	moveq	r3, #0
   2e56c:	cmp	r3, #0
   2e570:	bne	2e690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa38>
   2e574:	ldr	r3, [sp, #40]	; 0x28
   2e578:	cmp	r3, #0
   2e57c:	beq	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a9ac>
   2e580:	ldr	r2, [sp, #48]	; 0x30
   2e584:	cmp	r2, #0
   2e588:	beq	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a9ac>
   2e58c:	cmp	r1, #72	; 0x48
   2e590:	beq	2e5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a99c>
   2e594:	ldr	r3, [pc, #1064]	; 2e9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad6c>
   2e598:	ldr	r1, [pc, #1064]	; 2e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad70>
   2e59c:	mov	r0, r6
   2e5a0:	bl	1382c <fprintf@plt>
   2e5a4:	ldr	r3, [sp, #20]
   2e5a8:	cmp	r3, #0
   2e5ac:	beq	2e068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a410>
   2e5b0:	b	2e4d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a880>
   2e5b4:	add	r2, sp, #256	; 0x100
   2e5b8:	add	r3, r2, r3, lsl #2
   2e5bc:	ldr	r1, [pc, #1032]	; 2e9cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad74>
   2e5c0:	ldr	r3, [r3, #-108]	; 0xffffff94
   2e5c4:	mov	r0, r6
   2e5c8:	add	r4, r5, #2
   2e5cc:	ldr	r2, [r3]
   2e5d0:	ldr	ip, [r3, #12]
   2e5d4:	ldr	r3, [r3, #8]
   2e5d8:	ldr	r2, [r2]
   2e5dc:	ldr	ip, [ip, #32]
   2e5e0:	ldr	r2, [r2, #4]
   2e5e4:	str	ip, [sp]
   2e5e8:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e5ec:	ldrb	r3, [r5, #2]
   2e5f0:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e5f4:	ldr	r3, [pc, #980]	; 2e9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad78>
   2e5f8:	ldr	r1, [pc, #968]	; 2e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad70>
   2e5fc:	mov	r0, r6
   2e600:	bl	1382c <fprintf@plt>
   2e604:	ldrd	r2, [sp, #24]
   2e608:	ldr	r1, [pc, #940]	; 2e9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad64>
   2e60c:	mov	r0, r6
   2e610:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e614:	b	2e5a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a94c>
   2e618:	add	r2, sp, #256	; 0x100
   2e61c:	add	r3, r2, r3, lsl #2
   2e620:	add	r4, r5, #2
   2e624:	ldr	r3, [r3, #-108]	; 0xffffff94
   2e628:	cmp	r3, #0
   2e62c:	beq	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1abb4>
   2e630:	ldr	r2, [r3, #140]	; 0x8c
   2e634:	ldr	r3, [r3]
   2e638:	cmp	r2, #0
   2e63c:	beq	2e64c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a9f4>
   2e640:	ldrb	r1, [r2, #44]	; 0x2c
   2e644:	tst	r1, #1
   2e648:	beq	2e7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab78>
   2e64c:	mov	r0, r3
   2e650:	mov	r1, r6
   2e654:	bl	13ba4 <fputs@plt>
   2e658:	ldrb	r3, [r5, #2]
   2e65c:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e660:	ldrb	r2, [r5]
   2e664:	ldr	r3, [sp, #44]	; 0x2c
   2e668:	str	r2, [sp, #32]
   2e66c:	ldr	r2, [sp, #32]
   2e670:	cmp	r3, #0
   2e674:	sub	r2, r2, #71	; 0x47
   2e678:	clz	r2, r2
   2e67c:	lsr	r2, r2, #5
   2e680:	moveq	r2, #0
   2e684:	cmp	r2, #0
   2e688:	mov	r2, r3
   2e68c:	beq	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a9ac>
   2e690:	ldr	r1, [pc, #828]	; 2e9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad7c>
   2e694:	mov	r0, r6
   2e698:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   2e69c:	b	2e5a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a94c>
   2e6a0:	mov	r2, #5
   2e6a4:	ldr	r1, [pc, #812]	; 2e9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad80>
   2e6a8:	bl	13460 <dcgettext@plt>
   2e6ac:	mov	r1, r8
   2e6b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2e6b4:	b	2e224 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a5cc>
   2e6b8:	add	r2, sp, #256	; 0x100
   2e6bc:	add	r3, r2, r3, lsl #2
   2e6c0:	mov	r1, r6
   2e6c4:	ldr	r7, [r3, #-108]	; 0xffffff94
   2e6c8:	add	r4, r5, #2
   2e6cc:	ldr	r8, [r7, #148]	; 0x94
   2e6d0:	ldr	r0, [r7]
   2e6d4:	bl	13ba4 <fputs@plt>
   2e6d8:	cmp	r8, #0
   2e6dc:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e6e0:	ldr	r3, [r8, #4]
   2e6e4:	ldr	r3, [r3, #4]
   2e6e8:	cmp	r3, #5
   2e6ec:	beq	2e7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab90>
   2e6f0:	cmp	r3, #2
   2e6f4:	bne	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e6f8:	ldr	r3, [r7, #148]	; 0x94
   2e6fc:	ldr	r3, [r3, #4]
   2e700:	ldr	r3, [r3, #4]
   2e704:	cmp	r3, #2
   2e708:	bne	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e70c:	ldr	r3, [r7, #140]	; 0x8c
   2e710:	cmp	r3, #0
   2e714:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e718:	ldr	r3, [r3, #36]	; 0x24
   2e71c:	cmp	r3, #0
   2e720:	ldrne	r2, [r3]
   2e724:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e728:	cmp	r2, #0
   2e72c:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e730:	ldr	r1, [pc, #676]	; 2e9dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad84>
   2e734:	mov	r0, r6
   2e738:	bl	1382c <fprintf@plt>
   2e73c:	ldrb	r3, [r5, #2]
   2e740:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e744:	add	r3, r3, r3, lsl #1
   2e748:	ldr	r1, [pc, #656]	; 2e9e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad88>
   2e74c:	b	2e350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6f8>
   2e750:	add	r2, sp, #256	; 0x100
   2e754:	add	r3, r2, r3, lsl #2
   2e758:	add	r4, r5, #2
   2e75c:	ldr	r7, [r3, #-108]	; 0xffffff94
   2e760:	ldr	r3, [r7, #16]
   2e764:	ldr	r3, [r3, #140]	; 0x8c
   2e768:	cmp	r3, #0
   2e76c:	beq	2e77c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab24>
   2e770:	ldrb	r2, [r3, #44]	; 0x2c
   2e774:	tst	r2, #1
   2e778:	beq	2e8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac8c>
   2e77c:	mov	r1, r6
   2e780:	ldr	r0, [r7, #12]
   2e784:	bl	13ba4 <fputs@plt>
   2e788:	ldr	r3, [r7, #16]
   2e78c:	ldr	r3, [r3, #140]	; 0x8c
   2e790:	cmp	r3, #0
   2e794:	beq	2e7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab4c>
   2e798:	ldrb	r3, [r3, #44]	; 0x2c
   2e79c:	tst	r3, #1
   2e7a0:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e7a4:	ldr	r1, [r7, #8]
   2e7a8:	ldr	r0, [r7, #12]
   2e7ac:	bl	13394 <filename_cmp@plt>
   2e7b0:	cmp	r0, #0
   2e7b4:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e7b8:	ldr	r2, [r7, #8]
   2e7bc:	ldr	r1, [pc, #544]	; 2e9e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad8c>
   2e7c0:	mov	r0, r6
   2e7c4:	bl	1382c <fprintf@plt>
   2e7c8:	ldrb	r3, [r5, #2]
   2e7cc:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e7d0:	ldr	r2, [r2]
   2e7d4:	ldr	r1, [pc, #524]	; 2e9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad90>
   2e7d8:	mov	r0, r6
   2e7dc:	bl	1382c <fprintf@plt>
   2e7e0:	ldrb	r3, [r5, #2]
   2e7e4:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e7e8:	ldr	r3, [r7, #140]	; 0x8c
   2e7ec:	ldr	r2, [r3, #124]	; 0x7c
   2e7f0:	cmp	r2, #0
   2e7f4:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e7f8:	ldr	r2, [r7, #20]
   2e7fc:	tst	r2, #33554432	; 0x2000000
   2e800:	bne	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e804:	ldr	r2, [r3, #116]	; 0x74
   2e808:	b	2e728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aad0>
   2e80c:	ldr	r3, [pc, #388]	; 2e998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad40>
   2e810:	ldr	r1, [pc, #468]	; 2e9ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad94>
   2e814:	mov	r0, r6
   2e818:	ldr	r2, [r3]
   2e81c:	bl	1382c <fprintf@plt>
   2e820:	ldrb	r3, [r5, #2]
   2e824:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e828:	mov	r2, #5
   2e82c:	ldr	r1, [pc, #444]	; 2e9f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad98>
   2e830:	mov	r0, #0
   2e834:	bl	13460 <dcgettext@plt>
   2e838:	mov	r1, r0
   2e83c:	mov	r0, r6
   2e840:	bl	1382c <fprintf@plt>
   2e844:	ldrb	r3, [r5, #2]
   2e848:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e84c:	add	r2, sp, #256	; 0x100
   2e850:	add	r3, r2, r3, lsl #2
   2e854:	ldr	r1, [pc, #408]	; 2e9f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad9c>
   2e858:	ldr	r2, [r3, #-108]	; 0xffffff94
   2e85c:	mov	r0, r6
   2e860:	bl	1382c <fprintf@plt>
   2e864:	ldrb	r3, [r5, #1]
   2e868:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e86c:	add	r2, sp, #256	; 0x100
   2e870:	add	r3, r2, r3, lsl #2
   2e874:	add	r4, r5, #2
   2e878:	ldr	r3, [r3, #-108]	; 0xffffff94
   2e87c:	cmp	r3, #0
   2e880:	beq	2e8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac60>
   2e884:	ldr	r2, [r3, #8]
   2e888:	cmp	r2, #0
   2e88c:	beq	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e890:	ldr	r3, [r3, #4]
   2e894:	ldr	r1, [pc, #348]	; 2e9f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ada0>
   2e898:	mov	r0, r6
   2e89c:	bl	1382c <fprintf@plt>
   2e8a0:	b	2e36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a714>
   2e8a4:	mov	r0, r7
   2e8a8:	mov	r1, r6
   2e8ac:	bl	13ba4 <fputs@plt>
   2e8b0:	ldrb	r3, [r5, #2]
   2e8b4:	b	2dda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2e8b8:	bl	19a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5ddc>
   2e8bc:	ldr	r2, [pc, #312]	; 2e9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ada4>
   2e8c0:	add	r3, sp, #48	; 0x30
   2e8c4:	ldr	r2, [r2]
   2e8c8:	str	r2, [sp, #52]	; 0x34
   2e8cc:	str	r0, [sp, #56]	; 0x38
   2e8d0:	b	2e884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac2c>
   2e8d4:	ldr	r2, [pc, #292]	; 2ea00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ada8>
   2e8d8:	mov	r1, #169	; 0xa9
   2e8dc:	ldr	r0, [pc, #288]	; 2ea04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adac>
   2e8e0:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   2e8e4:	ldr	r2, [r3]
   2e8e8:	ldr	r1, [pc, #280]	; 2ea08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb0>
   2e8ec:	mov	r0, r6
   2e8f0:	bl	1382c <fprintf@plt>
   2e8f4:	b	2e77c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab24>
   2e8f8:	ldr	r0, [r7, #4]
   2e8fc:	ldr	r1, [sp, #40]	; 0x28
   2e900:	clz	lr, r0
   2e904:	clz	ip, r1
   2e908:	lsr	lr, lr, #5
   2e90c:	lsr	ip, ip, #5
   2e910:	cmp	lr, ip
   2e914:	bne	2e2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a654>
   2e918:	cmp	r1, #0
   2e91c:	beq	2e950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1acf8>
   2e920:	bl	13394 <filename_cmp@plt>
   2e924:	cmp	r0, #0
   2e928:	bne	2e2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a654>
   2e92c:	ldr	r1, [sp, #44]	; 0x2c
   2e930:	ldr	r0, [r7, #8]
   2e934:	bl	13268 <strcmp@plt>
   2e938:	subs	r3, r0, #0
   2e93c:	str	r3, [sp, #20]
   2e940:	bne	2e2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a654>
   2e944:	b	2e538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8e0>
   2e948:	mov	r0, #1
   2e94c:	bl	139d0 <xexit@plt>
   2e950:	mov	r1, r3
   2e954:	mov	r0, r2
   2e958:	str	r3, [sp, #36]	; 0x24
   2e95c:	bl	13268 <strcmp@plt>
   2e960:	subs	r3, r0, #0
   2e964:	str	r3, [sp, #20]
   2e968:	ldr	r3, [sp, #36]	; 0x24
   2e96c:	beq	2e66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa14>
   2e970:	b	2e2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a654>
   2e974:	ldr	r2, [pc, #132]	; 2ea00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ada8>
   2e978:	mov	r1, #198	; 0xc6
   2e97c:	ldr	r0, [pc, #128]	; 2ea04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adac>
   2e980:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   2e984:	andeq	r6, ip, r0, lsl #24
   2e988:	andeq	r8, ip, r4, ror r1
   2e98c:			; <UNDEFINED> instruction: 0x00051cb4
   2e990:	andeq	r1, r5, r8, lsr #25
   2e994:	andeq	pc, r4, r8, lsl #19
   2e998:	andeq	r8, ip, r0, ror #3
   2e99c:	andeq	r1, r5, r4, lsr #24
   2e9a0:	andeq	r7, ip, r0, asr #26
   2e9a4:	andeq	r1, r5, ip, lsr #24
   2e9a8:	ldrdeq	r0, [r5], -r8
   2e9ac:			; <UNDEFINED> instruction: 0x00051cb0
   2e9b0:	andeq	r8, ip, r4, lsl #1
   2e9b4:	andeq	r8, ip, ip, lsl #1
   2e9b8:	ldrdeq	r1, [r5], -r8
   2e9bc:	andeq	r1, r5, r0, asr ip
   2e9c0:	andeq	r1, r5, r8, asr #24
   2e9c4:	andeq	r2, r5, ip
   2e9c8:			; <UNDEFINED> instruction: 0x00051cbc
   2e9cc:	andeq	r1, r5, ip, ror ip
   2e9d0:	andeq	r0, r5, r8, lsr r8
   2e9d4:	andeq	r1, r5, ip, asr #24
   2e9d8:	muleq	r5, r4, r7
   2e9dc:	andeq	r1, r5, ip, asr ip
   2e9e0:	andeq	r1, r5, ip, lsr #25
   2e9e4:	andeq	r1, r5, r8, lsl r9
   2e9e8:	andeq	r0, r5, r0, lsr #16
   2e9ec:	andeq	r1, r5, r4, ror #24
   2e9f0:	muleq	r5, r8, ip
   2e9f4:	andeq	r1, r5, r4, lsr #25
   2e9f8:	muleq	r5, r0, ip
   2e9fc:	andeq	r8, ip, r4, lsr r0
   2ea00:	muleq	r5, r0, fp
   2ea04:	andeq	r1, r5, r0, lsl ip
   2ea08:	andeq	r1, r5, r4, ror ip
   2ea0c:	push	{r0, r1, r2, r3}
   2ea10:	ldr	r3, [pc, #48]	; 2ea48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf0>
   2ea14:	push	{lr}		; (str lr, [sp, #-4]!)
   2ea18:	sub	sp, sp, #12
   2ea1c:	add	ip, sp, #20
   2ea20:	ldr	r0, [r3]
   2ea24:	mov	r2, ip
   2ea28:	mov	r3, #0
   2ea2c:	ldr	r1, [sp, #16]
   2ea30:	str	ip, [sp, #4]
   2ea34:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   2ea38:	add	sp, sp, #12
   2ea3c:	pop	{lr}		; (ldr lr, [sp], #4)
   2ea40:	add	sp, sp, #16
   2ea44:	bx	lr
   2ea48:	strdeq	r7, [ip], -ip
   2ea4c:	push	{r0, r1, r2, r3}
   2ea50:	ldr	r3, [pc, #68]	; 2ea9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae44>
   2ea54:	push	{r4, lr}
   2ea58:	sub	sp, sp, #8
   2ea5c:	ldr	r4, [pc, #60]	; 2eaa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae48>
   2ea60:	ldr	r0, [r3]
   2ea64:	bl	132e0 <fflush@plt>
   2ea68:	add	ip, sp, #20
   2ea6c:	ldr	r1, [sp, #16]
   2ea70:	ldr	r0, [r4]
   2ea74:	mov	r2, ip
   2ea78:	mov	r3, #1
   2ea7c:	str	ip, [sp, #4]
   2ea80:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   2ea84:	ldr	r0, [r4]
   2ea88:	bl	132e0 <fflush@plt>
   2ea8c:	add	sp, sp, #8
   2ea90:	pop	{r4, lr}
   2ea94:	add	sp, sp, #16
   2ea98:	bx	lr
   2ea9c:	strdeq	r7, [ip], -ip
   2eaa0:	andeq	r7, ip, r8, asr #14
   2eaa4:	push	{r4, r5, r6, lr}
   2eaa8:	mov	r2, #5
   2eaac:	mov	r4, r0
   2eab0:	mov	r5, r1
   2eab4:	mov	r0, #0
   2eab8:	ldr	r1, [pc, #16]	; 2ead0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae78>
   2eabc:	bl	13460 <dcgettext@plt>
   2eac0:	mov	r2, r5
   2eac4:	mov	r1, r4
   2eac8:	pop	{r4, r5, r6, lr}
   2eacc:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ead0:	andeq	r1, r5, r4, asr #25
   2ead4:	push	{r0, r1, r2, r3}
   2ead8:	ldr	r3, [pc, #168]	; 2eb88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af30>
   2eadc:	push	{r4, lr}
   2eae0:	sub	sp, sp, #8
   2eae4:	ldr	r2, [r3, #80]	; 0x50
   2eae8:	cmp	r2, #0
   2eaec:	beq	2eb2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aed4>
   2eaf0:	ldr	r2, [sp, #16]
   2eaf4:	add	r1, sp, #20
   2eaf8:	str	r1, [sp, #4]
   2eafc:	ldrb	r2, [r2]
   2eb00:	cmp	r2, #37	; 0x25
   2eb04:	bne	2eb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aec0>
   2eb08:	ldr	r2, [sp, #16]
   2eb0c:	ldrb	r2, [r2, #1]
   2eb10:	cmp	r2, #33	; 0x21
   2eb14:	beq	2eb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aee4>
   2eb18:	ldr	r0, [r3, #80]	; 0x50
   2eb1c:	ldr	r2, [sp, #4]
   2eb20:	mov	r3, #0
   2eb24:	ldr	r1, [sp, #16]
   2eb28:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   2eb2c:	add	sp, sp, #8
   2eb30:	pop	{r4, lr}
   2eb34:	add	sp, sp, #16
   2eb38:	bx	lr
   2eb3c:	ldr	r2, [sp, #16]
   2eb40:	ldrb	r4, [r2, #2]
   2eb44:	cmp	r4, #0
   2eb48:	bne	2eb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aec0>
   2eb4c:	mov	r0, #16
   2eb50:	bl	13574 <xmalloc@plt>
   2eb54:	ldr	r2, [pc, #48]	; 2eb8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af34>
   2eb58:	ldr	r3, [sp, #4]
   2eb5c:	ldr	r1, [r2]
   2eb60:	ldr	lr, [r3]
   2eb64:	ldr	ip, [r3, #4]
   2eb68:	ldr	r3, [r3, #8]
   2eb6c:	str	r4, [r0]
   2eb70:	str	lr, [r0, #4]
   2eb74:	str	ip, [r0, #8]
   2eb78:	str	r3, [r0, #12]
   2eb7c:	str	r0, [r1]
   2eb80:	str	r0, [r2]
   2eb84:	b	2eb2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aed4>
   2eb88:	andeq	r8, ip, r4, ror r1
   2eb8c:	andeq	r8, ip, r8, asr #32
   2eb90:	push	{r1, r2, r3}
   2eb94:	mov	r3, #0
   2eb98:	push	{lr}		; (str lr, [sp, #-4]!)
   2eb9c:	sub	sp, sp, #8
   2eba0:	add	ip, sp, #16
   2eba4:	mov	r2, ip
   2eba8:	ldr	r1, [sp, #12]
   2ebac:	str	ip, [sp, #4]
   2ebb0:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   2ebb4:	add	sp, sp, #8
   2ebb8:	pop	{lr}		; (ldr lr, [sp], #4)
   2ebbc:	add	sp, sp, #12
   2ebc0:	bx	lr
   2ebc4:	push	{r4, r5, lr}
   2ebc8:	mov	r2, #0
   2ebcc:	sub	sp, sp, #108	; 0x6c
   2ebd0:	ldr	r1, [pc, #68]	; 2ec1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afc4>
   2ebd4:	bl	1352c <concat@plt>
   2ebd8:	mov	r2, sp
   2ebdc:	mov	r1, r0
   2ebe0:	mov	r5, r0
   2ebe4:	mov	r0, #3
   2ebe8:	bl	13b8c <__xstat64@plt>
   2ebec:	cmp	r0, #0
   2ebf0:	mov	r0, r5
   2ebf4:	ldreq	r4, [sp, #16]
   2ebf8:	movne	r4, #0
   2ebfc:	andeq	r4, r4, #61440	; 0xf000
   2ec00:	subeq	r4, r4, #16384	; 0x4000
   2ec04:	clzeq	r4, r4
   2ec08:	lsreq	r4, r4, #5
   2ec0c:	bl	13364 <free@plt>
   2ec10:	mov	r0, r4
   2ec14:	add	sp, sp, #108	; 0x6c
   2ec18:	pop	{r4, r5, pc}
   2ec1c:	andeq	r1, r5, r0, ror #25
   2ec20:	push	{r4, r5, r6, r7, r8, lr}
   2ec24:	mov	r7, r1
   2ec28:	ldr	r1, [pc, #216]	; 2ed08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0b0>
   2ec2c:	mov	r6, r0
   2ec30:	bl	13a60 <fopen64@plt>
   2ec34:	subs	r5, r0, #0
   2ec38:	beq	2ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b058>
   2ec3c:	ldr	r4, [pc, #200]	; 2ed0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0b4>
   2ec40:	ldr	r3, [r4]
   2ec44:	cmp	r3, #0
   2ec48:	moveq	r4, r3
   2ec4c:	beq	2ec7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b024>
   2ec50:	mov	r0, r6
   2ec54:	bl	133f4 <lrealpath@plt>
   2ec58:	mov	r8, r0
   2ec5c:	bl	137d8 <strlen@plt>
   2ec60:	ldr	r3, [pc, #168]	; 2ed10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0b8>
   2ec64:	ldr	r3, [r3]
   2ec68:	cmp	r0, r3
   2ec6c:	bgt	2ecdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b084>
   2ec70:	mov	r4, #0
   2ec74:	mov	r0, r8
   2ec78:	bl	13364 <free@plt>
   2ec7c:	ldr	r3, [pc, #144]	; 2ed14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0bc>
   2ec80:	str	r4, [r7]
   2ec84:	ldr	r3, [r3]
   2ec88:	cmp	r3, #0
   2ec8c:	beq	2eca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b050>
   2ec90:	ldr	r1, [pc, #128]	; 2ed18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c0>
   2ec94:	mov	r2, #5
   2ec98:	mov	r0, #0
   2ec9c:	bl	13460 <dcgettext@plt>
   2eca0:	mov	r1, r6
   2eca4:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2eca8:	mov	r0, r5
   2ecac:	pop	{r4, r5, r6, r7, r8, pc}
   2ecb0:	ldr	r3, [pc, #92]	; 2ed14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0bc>
   2ecb4:	ldr	r3, [r3]
   2ecb8:	cmp	r3, #0
   2ecbc:	beq	2eca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b050>
   2ecc0:	mov	r2, #5
   2ecc4:	ldr	r1, [pc, #80]	; 2ed1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c4>
   2ecc8:	bl	13460 <dcgettext@plt>
   2eccc:	mov	r1, r6
   2ecd0:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2ecd4:	mov	r0, r5
   2ecd8:	pop	{r4, r5, r6, r7, r8, pc}
   2ecdc:	ldrb	r2, [r8, r3]
   2ece0:	cmp	r2, #47	; 0x2f
   2ece4:	bne	2ec70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b018>
   2ece8:	mov	r2, #0
   2ecec:	strb	r2, [r8, r3]
   2ecf0:	mov	r1, r8
   2ecf4:	ldr	r0, [r4]
   2ecf8:	bl	13394 <filename_cmp@plt>
   2ecfc:	clz	r4, r0
   2ed00:	lsr	r4, r4, #5
   2ed04:	b	2ec74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b01c>
   2ed08:	andeq	r4, r8, r4, lsr #26
   2ed0c:	andeq	r8, ip, ip, ror #3
   2ed10:	andeq	r8, ip, r8, lsl #1
   2ed14:	andeq	r8, ip, r4, ror #3
   2ed18:	andeq	r1, r5, r8, lsl #26
   2ed1c:	andeq	r1, r5, ip, ror #25
   2ed20:	push	{r4, r5, r6, lr}
   2ed24:	subs	r6, r1, #0
   2ed28:	bne	2ed3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0e4>
   2ed2c:	ldr	r3, [pc, #152]	; 2edcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b174>
   2ed30:	ldr	r3, [r3, #60]	; 0x3c
   2ed34:	cmp	r3, #0
   2ed38:	popne	{r4, r5, r6, pc}
   2ed3c:	mov	r4, r0
   2ed40:	mov	r0, #12
   2ed44:	bl	13574 <xmalloc@plt>
   2ed48:	ldr	r3, [pc, #128]	; 2edd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b178>
   2ed4c:	mov	r2, #0
   2ed50:	ldr	r1, [r3]
   2ed54:	str	r6, [r0, #8]
   2ed58:	str	r2, [r0]
   2ed5c:	str	r0, [r3]
   2ed60:	str	r0, [r1]
   2ed64:	ldrb	r3, [r4]
   2ed68:	mov	r5, r0
   2ed6c:	cmp	r3, #61	; 0x3d
   2ed70:	beq	2edb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b15c>
   2ed74:	mov	r2, #8
   2ed78:	ldr	r1, [pc, #84]	; 2edd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b17c>
   2ed7c:	mov	r0, r4
   2ed80:	bl	13bb0 <strncmp@plt>
   2ed84:	subs	r2, r0, #0
   2ed88:	bne	2eda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b14c>
   2ed8c:	ldr	r3, [pc, #68]	; 2edd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b180>
   2ed90:	add	r1, r4, #8
   2ed94:	ldr	r0, [r3]
   2ed98:	bl	1352c <concat@plt>
   2ed9c:	str	r0, [r5, #4]
   2eda0:	pop	{r4, r5, r6, pc}
   2eda4:	mov	r0, r4
   2eda8:	bl	135a4 <xstrdup@plt>
   2edac:	str	r0, [r5, #4]
   2edb0:	pop	{r4, r5, r6, pc}
   2edb4:	ldr	r3, [pc, #28]	; 2edd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b180>
   2edb8:	add	r1, r4, #1
   2edbc:	ldr	r0, [r3]
   2edc0:	bl	1352c <concat@plt>
   2edc4:	str	r0, [r5, #4]
   2edc8:	pop	{r4, r5, r6, pc}
   2edcc:	andeq	r8, ip, r4, ror r1
   2edd0:	andeq	r7, ip, r4, lsl r4
   2edd4:	andeq	pc, r4, ip, lsl #10
   2edd8:	andeq	r8, ip, r4, lsl r1
   2eddc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ede0:	subs	r8, r1, #0
   2ede4:	sub	sp, sp, #12
   2ede8:	mov	r6, r0
   2edec:	beq	2ef28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b2d0>
   2edf0:	ldr	r5, [pc, #488]	; 2efe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b388>
   2edf4:	ldr	r4, [r5]
   2edf8:	cmp	r4, #0
   2edfc:	beq	2ee8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b234>
   2ee00:	ldr	r7, [pc, #476]	; 2efe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b38c>
   2ee04:	ldr	r3, [r7]
   2ee08:	str	r4, [r3]
   2ee0c:	ldr	r9, [pc, #468]	; 2efe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b390>
   2ee10:	b	2ee20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1c8>
   2ee14:	ldr	r4, [r4]
   2ee18:	cmp	r4, #0
   2ee1c:	beq	2eef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b2a0>
   2ee20:	mov	r3, #0
   2ee24:	mov	r2, r6
   2ee28:	mov	r1, r9
   2ee2c:	ldr	r0, [r4, #4]
   2ee30:	bl	1352c <concat@plt>
   2ee34:	add	r1, sp, #4
   2ee38:	mov	r8, r0
   2ee3c:	bl	2ec20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afc8>
   2ee40:	mov	r5, r0
   2ee44:	mov	r0, r8
   2ee48:	bl	13364 <free@plt>
   2ee4c:	cmp	r5, #0
   2ee50:	beq	2ee14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1bc>
   2ee54:	ldr	r3, [r7]
   2ee58:	mov	r2, #0
   2ee5c:	str	r2, [r3]
   2ee60:	mov	r1, r6
   2ee64:	ldr	r2, [sp, #4]
   2ee68:	mov	r0, r5
   2ee6c:	bl	19688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5a30>
   2ee70:	ldr	r2, [pc, #372]	; 2efec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b394>
   2ee74:	ldr	r3, [pc, #372]	; 2eff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b398>
   2ee78:	mov	r1, #1
   2ee7c:	str	r1, [r2]
   2ee80:	str	r5, [r3]
   2ee84:	add	sp, sp, #12
   2ee88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ee8c:	ldr	r7, [pc, #352]	; 2eff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b39c>
   2ee90:	ldr	r2, [pc, #352]	; 2eff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3a0>
   2ee94:	ldr	r1, [pc, #352]	; 2effc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3a4>
   2ee98:	ldr	r0, [r7]
   2ee9c:	bl	13970 <make_relative_prefix@plt>
   2eea0:	cmp	r0, #0
   2eea4:	mov	r4, r0
   2eea8:	mov	r9, r0
   2eeac:	beq	2ef60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b308>
   2eeb0:	bl	2ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af6c>
   2eeb4:	cmp	r0, #0
   2eeb8:	beq	2ef58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b300>
   2eebc:	ldr	r7, [pc, #288]	; 2efe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b38c>
   2eec0:	mov	r0, r9
   2eec4:	mov	r1, #1
   2eec8:	ldr	r9, [r7]
   2eecc:	str	r5, [r7]
   2eed0:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   2eed4:	str	r9, [r7]
   2eed8:	ldr	r4, [r5]
   2eedc:	cmp	r8, #0
   2eee0:	str	r4, [r9]
   2eee4:	bne	2eef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b298>
   2eee8:	ldr	r3, [pc, #272]	; 2f000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3a8>
   2eeec:	ldr	r4, [r3]
   2eef0:	cmp	r4, #0
   2eef4:	bne	2ee0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1b4>
   2eef8:	ldr	r3, [r7]
   2eefc:	mov	r0, #1
   2ef00:	str	r4, [r3]
   2ef04:	bl	13580 <bfd_set_error@plt>
   2ef08:	mov	r2, #5
   2ef0c:	ldr	r1, [pc, #240]	; 2f004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3ac>
   2ef10:	mov	r0, #0
   2ef14:	bl	13460 <dcgettext@plt>
   2ef18:	mov	r1, r6
   2ef1c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ef20:	add	sp, sp, #12
   2ef24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ef28:	add	r1, sp, #4
   2ef2c:	bl	2ec20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afc8>
   2ef30:	subs	r5, r0, #0
   2ef34:	bne	2ee60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b208>
   2ef38:	ldr	r5, [pc, #160]	; 2efe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b388>
   2ef3c:	ldr	r3, [r5]
   2ef40:	cmp	r3, #0
   2ef44:	beq	2ee8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b234>
   2ef48:	ldr	r7, [pc, #148]	; 2efe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b38c>
   2ef4c:	ldr	r2, [r7]
   2ef50:	str	r3, [r2]
   2ef54:	b	2eee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b290>
   2ef58:	mov	r0, r4
   2ef5c:	bl	13364 <free@plt>
   2ef60:	ldr	r2, [pc, #144]	; 2eff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3a0>
   2ef64:	ldr	r1, [pc, #156]	; 2f008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b0>
   2ef68:	ldr	r0, [r7]
   2ef6c:	bl	13970 <make_relative_prefix@plt>
   2ef70:	cmp	r0, #0
   2ef74:	mov	r4, r0
   2ef78:	mov	r9, r0
   2ef7c:	beq	2ef94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b33c>
   2ef80:	bl	2ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af6c>
   2ef84:	cmp	r0, #0
   2ef88:	bne	2eebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b264>
   2ef8c:	mov	r0, r4
   2ef90:	bl	13364 <free@plt>
   2ef94:	ldr	r2, [pc, #112]	; 2f00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b4>
   2ef98:	ldr	r0, [r7]
   2ef9c:	mov	r1, r2
   2efa0:	bl	13970 <make_relative_prefix@plt>
   2efa4:	cmp	r0, #0
   2efa8:	mov	r4, r0
   2efac:	mov	r9, r0
   2efb0:	beq	2efd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b37c>
   2efb4:	bl	2ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af6c>
   2efb8:	cmp	r0, #0
   2efbc:	bne	2eebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b264>
   2efc0:	ldr	r7, [pc, #28]	; 2efe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b38c>
   2efc4:	mov	r0, r4
   2efc8:	bl	13364 <free@plt>
   2efcc:	ldr	r9, [r7]
   2efd0:	b	2eed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b280>
   2efd4:	ldr	r7, [pc, #8]	; 2efe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b38c>
   2efd8:	ldr	r9, [r7]
   2efdc:	b	2eed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b280>
   2efe0:	andeq	r7, ip, ip, asr #26
   2efe4:	andeq	r7, ip, r4, lsl r4
   2efe8:	andeq	pc, r4, r4, lsr #9
   2efec:	andeq	r8, ip, r4, lsr r0
   2eff0:	andeq	r7, ip, ip, lsl #26
   2eff4:	andeq	r8, ip, r0, ror #3
   2eff8:	andeq	r1, r5, r0, lsr #26
   2effc:	andeq	r1, r5, r0, asr #26
   2f000:	andeq	r8, ip, r8, asr r2
   2f004:	andeq	r1, r5, ip, ror #26
   2f008:	andeq	r1, r5, ip, asr #26
   2f00c:	andeq	r4, r8, r0, lsl #22
   2f010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f014:	mov	fp, r1
   2f018:	sub	sp, sp, #12
   2f01c:	ldr	r1, [r1, #32]
   2f020:	mov	r4, r0
   2f024:	bl	133dc <bfd_openr@plt>
   2f028:	ldr	r2, [pc, #1320]	; 2f558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b900>
   2f02c:	ldr	r2, [r2]
   2f030:	cmp	r2, #0
   2f034:	mov	sl, r0
   2f038:	str	r0, [fp, #16]
   2f03c:	beq	2f064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b40c>
   2f040:	cmp	r0, #0
   2f044:	mov	r2, #5
   2f048:	ldreq	r1, [pc, #1292]	; 2f55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b904>
   2f04c:	ldrne	r1, [pc, #1292]	; 2f560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b908>
   2f050:	movne	r0, #0
   2f054:	bl	13460 <dcgettext@plt>
   2f058:	mov	r1, r4
   2f05c:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2f060:	ldr	sl, [fp, #16]
   2f064:	cmp	sl, #0
   2f068:	beq	2f320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6c8>
   2f06c:	ldrb	r1, [sl, #44]	; 0x2c
   2f070:	ldr	r2, [sl, #40]	; 0x28
   2f074:	orr	r1, r1, #8
   2f078:	orr	r2, r2, #1048576	; 0x100000
   2f07c:	strb	r1, [sl, #44]	; 0x2c
   2f080:	str	r2, [sl, #40]	; 0x28
   2f084:	ldrsb	r2, [fp, #37]	; 0x25
   2f088:	cmp	r2, #0
   2f08c:	uxtblt	r2, r1
   2f090:	orrlt	r2, r2, #64	; 0x40
   2f094:	strblt	r2, [sl, #44]	; 0x2c
   2f098:	ldrb	r2, [fp, #36]	; 0x24
   2f09c:	and	r2, r2, #36	; 0x24
   2f0a0:	cmp	r2, #32
   2f0a4:	bne	2f0c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b470>
   2f0a8:	ldr	r5, [pc, #1204]	; 2f564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b90c>
   2f0ac:	ldrb	r2, [r5, #1]
   2f0b0:	tst	r2, #2
   2f0b4:	bne	2f254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5fc>
   2f0b8:	mov	sl, #1
   2f0bc:	mov	r0, sl
   2f0c0:	add	sp, sp, #12
   2f0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f0c8:	mov	r0, sl
   2f0cc:	mov	r1, #2
   2f0d0:	bl	13ae4 <bfd_check_format@plt>
   2f0d4:	cmp	r0, #0
   2f0d8:	ldreq	r6, [fp, #16]
   2f0dc:	bne	2f30c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6b4>
   2f0e0:	cmp	r6, #0
   2f0e4:	beq	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f0e8:	mov	r1, #1
   2f0ec:	mov	r0, r6
   2f0f0:	bl	13ae4 <bfd_check_format@plt>
   2f0f4:	cmp	r0, #0
   2f0f8:	bne	2f284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b62c>
   2f0fc:	ldr	r2, [fp, #16]
   2f100:	cmp	r2, r6
   2f104:	bne	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f108:	ldrb	r2, [fp, #36]	; 0x24
   2f10c:	tst	r2, #4
   2f110:	beq	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f114:	bl	13550 <bfd_get_error@plt>
   2f118:	cmp	r0, #12
   2f11c:	bne	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f120:	mov	r0, fp
   2f124:	bl	2d4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19850>
   2f128:	subs	r6, r0, #0
   2f12c:	bne	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f130:	mov	r1, r6
   2f134:	mov	r0, r4
   2f138:	bl	2eddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b184>
   2f13c:	ldr	r9, [pc, #1060]	; 2f568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b910>
   2f140:	ldr	r2, [pc, #1060]	; 2f56c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b914>
   2f144:	mov	r1, #1
   2f148:	str	r1, [r9, #4]
   2f14c:	str	r6, [r2]
   2f150:	ldr	sl, [pc, #1048]	; 2f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b918>
   2f154:	bl	199d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d80>
   2f158:	ldr	r7, [pc, #1044]	; 2f574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b91c>
   2f15c:	ldr	r5, [pc, #1044]	; 2f578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b920>
   2f160:	b	2f198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b540>
   2f164:	cmp	sl, r5
   2f168:	bge	2f388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b730>
   2f16c:	ldr	r2, [pc, #1032]	; 2f57c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b924>
   2f170:	cmp	sl, r2
   2f174:	bne	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f178:	ldr	r0, [r7, #4]
   2f17c:	cmp	r0, #0
   2f180:	beq	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f184:	bl	13364 <free@plt>
   2f188:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f18c:	mov	sl, r0
   2f190:	cmp	sl, #0
   2f194:	beq	2f394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b73c>
   2f198:	cmp	sl, #260	; 0x104
   2f19c:	ble	2f164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b50c>
   2f1a0:	cmp	sl, #300	; 0x12c
   2f1a4:	bne	2f374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b71c>
   2f1a8:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f1ac:	cmp	r0, #40	; 0x28
   2f1b0:	mov	sl, r0
   2f1b4:	bne	2f190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b538>
   2f1b8:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f1bc:	cmp	r0, r5
   2f1c0:	mov	sl, r0
   2f1c4:	bne	2f190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b538>
   2f1c8:	ldr	r8, [r7]
   2f1cc:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f1d0:	cmp	r0, #44	; 0x2c
   2f1d4:	beq	2f43c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7e4>
   2f1d8:	cmp	r0, #41	; 0x29
   2f1dc:	bne	2f430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2f1e0:	ldr	r3, [pc, #920]	; 2f580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b928>
   2f1e4:	ldr	r2, [r3, #48]	; 0x30
   2f1e8:	cmp	r2, #1
   2f1ec:	beq	2f4a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b850>
   2f1f0:	cmp	r2, #2
   2f1f4:	beq	2f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b800>
   2f1f8:	mov	sl, #0
   2f1fc:	str	sl, [sp]
   2f200:	mov	r2, r8
   2f204:	str	r2, [sp, #4]
   2f208:	bl	223a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe750>
   2f20c:	ldr	r2, [sp, #4]
   2f210:	mov	r1, r0
   2f214:	mov	r0, r2
   2f218:	bl	13268 <strcmp@plt>
   2f21c:	cmp	r0, #0
   2f220:	movne	r6, #1
   2f224:	mov	r0, r8
   2f228:	bl	13364 <free@plt>
   2f22c:	ldr	r3, [sp]
   2f230:	cmp	r3, #0
   2f234:	beq	2f240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5e8>
   2f238:	ldr	r0, [sp]
   2f23c:	bl	13364 <free@plt>
   2f240:	cmp	sl, #0
   2f244:	beq	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f248:	mov	r0, sl
   2f24c:	bl	13364 <free@plt>
   2f250:	b	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f254:	ldr	r2, [pc, #808]	; 2f584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b92c>
   2f258:	ldr	r2, [r2]
   2f25c:	cmp	r2, #0
   2f260:	bne	2f0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b460>
   2f264:	mov	r1, #1
   2f268:	ldr	r0, [fp, #16]
   2f26c:	bl	13ae4 <bfd_check_format@plt>
   2f270:	cmp	r0, #0
   2f274:	beq	2f0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b460>
   2f278:	mov	r0, fp
   2f27c:	bl	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e284>
   2f280:	b	2f0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b460>
   2f284:	ldrb	r2, [fp, #36]	; 0x24
   2f288:	ands	r5, r2, #32
   2f28c:	bne	2f2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b648>
   2f290:	ldr	r1, [fp, #16]
   2f294:	ldr	r1, [r1, #40]	; 0x28
   2f298:	tst	r1, #2048	; 0x800
   2f29c:	bne	2f348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6f0>
   2f2a0:	tst	r2, #4
   2f2a4:	beq	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f2a8:	ldr	r7, [pc, #720]	; 2f580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b928>
   2f2ac:	ldr	r5, [pc, #688]	; 2f564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b90c>
   2f2b0:	mov	r0, r6
   2f2b4:	ldr	r2, [r7, #28]
   2f2b8:	ldr	r1, [r5, #48]	; 0x30
   2f2bc:	bl	1355c <bfd_arch_get_compatible@plt>
   2f2c0:	cmp	r0, #0
   2f2c4:	bne	2f0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b454>
   2f2c8:	ldr	r2, [r6, #4]
   2f2cc:	ldr	r2, [r2, #4]
   2f2d0:	cmp	r2, #4
   2f2d4:	bne	2f2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b694>
   2f2d8:	ldr	r2, [r5, #48]	; 0x30
   2f2dc:	ldr	r2, [r2, #4]
   2f2e0:	ldr	r2, [r2, #4]
   2f2e4:	cmp	r2, #4
   2f2e8:	beq	2f3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7a0>
   2f2ec:	ldr	r2, [r7, #20]
   2f2f0:	cmp	r2, #0
   2f2f4:	bne	2f3d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b780>
   2f2f8:	ldr	r0, [fp, #16]
   2f2fc:	mov	sl, #0
   2f300:	bl	139dc <bfd_close@plt>
   2f304:	str	sl, [fp, #16]
   2f308:	b	2f0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b464>
   2f30c:	mov	r1, #0
   2f310:	ldr	r0, [fp, #16]
   2f314:	bl	13af0 <bfd_openr_next_archived_file@plt>
   2f318:	mov	r6, r0
   2f31c:	b	2f0e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b488>
   2f320:	bl	13550 <bfd_get_error@plt>
   2f324:	cmp	r0, #2
   2f328:	bne	2f0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b464>
   2f32c:	mov	r2, #5
   2f330:	ldr	r1, [pc, #592]	; 2f588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b930>
   2f334:	mov	r0, sl
   2f338:	bl	13460 <dcgettext@plt>
   2f33c:	ldr	r1, [fp, #32]
   2f340:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f344:	b	2f0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b464>
   2f348:	mov	r2, #5
   2f34c:	ldr	r1, [pc, #568]	; 2f58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b934>
   2f350:	mov	r0, r5
   2f354:	bl	13460 <dcgettext@plt>
   2f358:	mov	r1, r4
   2f35c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f360:	ldr	r0, [fp, #16]
   2f364:	bl	139dc <bfd_close@plt>
   2f368:	mov	sl, r5
   2f36c:	str	r5, [fp, #16]
   2f370:	b	2f0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b464>
   2f374:	blt	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f378:	sub	sl, sl, #372	; 0x174
   2f37c:	sub	sl, sl, #1
   2f380:	cmp	sl, #1
   2f384:	bhi	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f388:	ldr	r0, [r7]
   2f38c:	bl	13364 <free@plt>
   2f390:	b	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f394:	ldr	r5, [pc, #500]	; 2f590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b938>
   2f398:	bl	19a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5db4>
   2f39c:	str	sl, [r9, #4]
   2f3a0:	ldr	r0, [r5]
   2f3a4:	bl	13928 <fclose@plt>
   2f3a8:	cmp	r6, #0
   2f3ac:	str	sl, [r5]
   2f3b0:	beq	2f0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b450>
   2f3b4:	ldr	r2, [pc, #452]	; 2f580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b928>
   2f3b8:	ldr	r2, [r2, #20]
   2f3bc:	cmp	r2, #0
   2f3c0:	bne	2f410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7b8>
   2f3c4:	ldr	r0, [fp, #16]
   2f3c8:	bl	139dc <bfd_close@plt>
   2f3cc:	mov	r2, #0
   2f3d0:	str	r2, [fp, #16]
   2f3d4:	b	2f0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b464>
   2f3d8:	mov	r2, #5
   2f3dc:	ldr	r1, [pc, #432]	; 2f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b93c>
   2f3e0:	mov	r0, #0
   2f3e4:	bl	13460 <dcgettext@plt>
   2f3e8:	mov	r1, r4
   2f3ec:	ldr	r2, [fp, #12]
   2f3f0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f3f4:	b	2f2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6a0>
   2f3f8:	mov	r1, #2
   2f3fc:	ldr	r0, [fp, #16]
   2f400:	bl	13ae4 <bfd_check_format@plt>
   2f404:	cmp	r0, #0
   2f408:	bne	2f0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b454>
   2f40c:	b	2f2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b694>
   2f410:	mov	r2, #5
   2f414:	ldr	r1, [pc, #376]	; 2f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b93c>
   2f418:	mov	r0, sl
   2f41c:	bl	13460 <dcgettext@plt>
   2f420:	mov	r1, r4
   2f424:	ldr	r2, [fp, #12]
   2f428:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f42c:	b	2f3c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b76c>
   2f430:	mov	r0, r8
   2f434:	bl	13364 <free@plt>
   2f438:	b	2f188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f43c:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f440:	cmp	r0, r5
   2f444:	mov	sl, r0
   2f448:	beq	2f46c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b814>
   2f44c:	mov	r0, r8
   2f450:	bl	13364 <free@plt>
   2f454:	b	2f190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b538>
   2f458:	mov	r3, #0
   2f45c:	str	r3, [sp]
   2f460:	mov	r2, r8
   2f464:	mov	sl, #0
   2f468:	b	2f204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5ac>
   2f46c:	ldr	r3, [r7]
   2f470:	str	r3, [sp]
   2f474:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f478:	cmp	r0, #44	; 0x2c
   2f47c:	mov	sl, r0
   2f480:	bne	2f494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b83c>
   2f484:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f488:	cmp	r0, r5
   2f48c:	mov	sl, r0
   2f490:	beq	2f4d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b878>
   2f494:	mov	r0, r8
   2f498:	bl	13364 <free@plt>
   2f49c:	ldr	r0, [sp]
   2f4a0:	bl	13364 <free@plt>
   2f4a4:	b	2f190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b538>
   2f4a8:	mov	sl, #0
   2f4ac:	bl	223a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe750>
   2f4b0:	mov	r1, r0
   2f4b4:	mov	r0, r8
   2f4b8:	bl	13268 <strcmp@plt>
   2f4bc:	cmp	r0, #0
   2f4c0:	bne	2f53c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8e4>
   2f4c4:	mov	r0, r8
   2f4c8:	bl	13364 <free@plt>
   2f4cc:	b	2f240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5e8>
   2f4d0:	ldr	sl, [r7]
   2f4d4:	bl	17a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3de4>
   2f4d8:	cmp	r0, #41	; 0x29
   2f4dc:	bne	2f224 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5cc>
   2f4e0:	ldr	r3, [pc, #152]	; 2f580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b928>
   2f4e4:	ldr	r2, [r3, #48]	; 0x30
   2f4e8:	cmp	r2, #1
   2f4ec:	beq	2f508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b0>
   2f4f0:	cmp	r2, #2
   2f4f4:	bne	2f200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5a8>
   2f4f8:	cmp	sl, #0
   2f4fc:	movne	r2, sl
   2f500:	bne	2f204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5ac>
   2f504:	b	2f460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b808>
   2f508:	ldr	r3, [sp]
   2f50c:	cmp	r3, #0
   2f510:	beq	2f4ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b854>
   2f514:	bl	223a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe750>
   2f518:	mov	r1, r0
   2f51c:	ldr	r0, [sp]
   2f520:	bl	13268 <strcmp@plt>
   2f524:	cmp	r0, #0
   2f528:	beq	2f54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8f4>
   2f52c:	mov	r0, r8
   2f530:	bl	13364 <free@plt>
   2f534:	mov	r6, #1
   2f538:	b	2f238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5e0>
   2f53c:	mov	r0, r8
   2f540:	bl	13364 <free@plt>
   2f544:	mov	r6, #1
   2f548:	b	2f240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5e8>
   2f54c:	mov	r0, r8
   2f550:	bl	13364 <free@plt>
   2f554:	b	2f238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5e0>
   2f558:	andeq	r8, ip, r4, ror #3
   2f55c:	muleq	r5, ip, sp
   2f560:			; <UNDEFINED> instruction: 0x00051db8
   2f564:	andeq	r8, ip, ip, lsl #1
   2f568:	andeq	r7, ip, ip, asr #26
   2f56c:	andeq	r8, ip, r0, lsr r0
   2f570:	andeq	r0, r0, pc, ror #2
   2f574:	andeq	r8, ip, ip, lsl r0
   2f578:	andeq	r0, r0, r3, lsl #2
   2f57c:	andeq	r0, r0, r2, lsl #2
   2f580:	andeq	r8, ip, r8, lsl r1
   2f584:	andeq	r7, ip, r4, lsl #28
   2f588:	ldrdeq	r1, [r5], -r8
   2f58c:	andeq	r1, r5, ip, lsr #28
   2f590:	andeq	r7, ip, r4, asr #21
   2f594:	strdeq	r1, [r5], -r8
   2f598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f59c:	mov	r5, r1
   2f5a0:	ldrb	r1, [r1, #36]	; 0x24
   2f5a4:	mov	r9, r2
   2f5a8:	sub	sp, sp, #20
   2f5ac:	ands	r2, r1, #1
   2f5b0:	mov	r7, r0
   2f5b4:	mov	sl, r3
   2f5b8:	bne	2f5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b99c>
   2f5bc:	tst	r1, #8
   2f5c0:	ldr	r0, [r5, #8]
   2f5c4:	beq	2f5d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b97c>
   2f5c8:	ldrb	r3, [r0]
   2f5cc:	cmp	r3, #47	; 0x2f
   2f5d0:	beq	2f6d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba7c>
   2f5d4:	mov	r1, r5
   2f5d8:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   2f5dc:	cmp	r0, #0
   2f5e0:	bne	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba64>
   2f5e4:	ldr	r3, [r5, #8]
   2f5e8:	ldrb	r3, [r3]
   2f5ec:	cmp	r3, #47	; 0x2f
   2f5f0:	beq	2f6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba70>
   2f5f4:	ldr	r3, [pc, #272]	; 2f70c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bab4>
   2f5f8:	ldr	r4, [r3]
   2f5fc:	cmp	r4, #0
   2f600:	beq	2f6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba70>
   2f604:	ldr	r8, [pc, #260]	; 2f710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bab8>
   2f608:	ldr	r6, [pc, #260]	; 2f714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1babc>
   2f60c:	b	2f640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b9e8>
   2f610:	bl	1352c <concat@plt>
   2f614:	mov	fp, r0
   2f618:	mov	r1, r5
   2f61c:	mov	r0, fp
   2f620:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   2f624:	cmp	r0, #0
   2f628:	mov	r0, fp
   2f62c:	bne	2f6b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba60>
   2f630:	bl	13364 <free@plt>
   2f634:	ldr	r4, [r4]
   2f638:	cmp	r4, #0
   2f63c:	beq	2f6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba70>
   2f640:	ldrb	ip, [r5, #36]	; 0x24
   2f644:	tst	ip, #32
   2f648:	beq	2f678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba20>
   2f64c:	ldrb	r3, [r8]
   2f650:	mov	r1, r4
   2f654:	mov	r2, r5
   2f658:	and	r3, r3, #3
   2f65c:	cmp	r3, #2
   2f660:	mov	r0, r7
   2f664:	beq	2f678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba20>
   2f668:	bl	2d3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19798>
   2f66c:	cmp	r0, #0
   2f670:	bne	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba64>
   2f674:	ldrb	ip, [r5, #36]	; 0x24
   2f678:	and	ip, ip, #3
   2f67c:	cmp	ip, #1
   2f680:	ldr	lr, [r5, #8]
   2f684:	ldr	ip, [r4, #4]
   2f688:	mov	r3, #0
   2f68c:	mov	r1, r6
   2f690:	mov	r0, ip
   2f694:	mov	r2, lr
   2f698:	bne	2f610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b9b8>
   2f69c:	str	r3, [sp, #8]
   2f6a0:	stm	sp, {r7, sl}
   2f6a4:	mov	r3, lr
   2f6a8:	mov	r2, r9
   2f6ac:	bl	1352c <concat@plt>
   2f6b0:	mov	fp, r0
   2f6b4:	b	2f618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b9c0>
   2f6b8:	str	fp, [r5, #8]
   2f6bc:	mov	r0, #1
   2f6c0:	add	sp, sp, #20
   2f6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f6c8:	mov	r0, #0
   2f6cc:	add	sp, sp, #20
   2f6d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f6d4:	ldr	r3, [pc, #60]	; 2f718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bac0>
   2f6d8:	mov	r1, r0
   2f6dc:	ldr	r0, [r3]
   2f6e0:	bl	1352c <concat@plt>
   2f6e4:	mov	r1, r5
   2f6e8:	mov	r4, r0
   2f6ec:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   2f6f0:	cmp	r0, #0
   2f6f4:	strne	r4, [r5, #8]
   2f6f8:	movne	r0, #1
   2f6fc:	bne	2f6c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba68>
   2f700:	mov	r0, r4
   2f704:	bl	13364 <free@plt>
   2f708:	b	2f5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b98c>
   2f70c:	andeq	r8, ip, r8, asr r2
   2f710:	andeq	r8, ip, ip, lsl #1
   2f714:	andeq	pc, r4, r4, lsr #9
   2f718:	andeq	r8, ip, r4, lsl r1
   2f71c:	ldr	r3, [r0, #16]
   2f720:	cmp	r3, #0
   2f724:	bxne	lr
   2f728:	ldrb	r3, [r0, #36]	; 0x24
   2f72c:	push	{r4, r5, r6, r7, r8, lr}
   2f730:	mov	r5, r0
   2f734:	tst	r3, #4
   2f738:	beq	2f808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bbb0>
   2f73c:	ldr	r2, [pc, #320]	; 2f884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc2c>
   2f740:	ldr	r4, [r2, #8]
   2f744:	cmp	r4, #0
   2f748:	beq	2f7a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb50>
   2f74c:	ldr	r7, [pc, #308]	; 2f888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc30>
   2f750:	ldr	r6, [pc, #308]	; 2f88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc34>
   2f754:	b	2f774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb1c>
   2f758:	ldr	r0, [r4]
   2f75c:	bl	2d8a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c48>
   2f760:	cmp	r0, #0
   2f764:	bne	2f794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb3c>
   2f768:	ldr	r4, [r4, #4]
   2f76c:	cmp	r4, #0
   2f770:	beq	2f7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb4c>
   2f774:	mov	r1, r5
   2f778:	mov	r3, r7
   2f77c:	mov	r2, r6
   2f780:	ldr	r0, [r4]
   2f784:	bl	2f598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b940>
   2f788:	mov	r1, r5
   2f78c:	cmp	r0, #0
   2f790:	beq	2f758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb00>
   2f794:	ldrb	r3, [r5, #36]	; 0x24
   2f798:	bic	r3, r3, #4
   2f79c:	strb	r3, [r5, #36]	; 0x24
   2f7a0:	pop	{r4, r5, r6, r7, r8, pc}
   2f7a4:	ldrb	r3, [r5, #36]	; 0x24
   2f7a8:	tst	r3, #8
   2f7ac:	beq	2f7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb78>
   2f7b0:	ldr	r4, [pc, #216]	; 2f890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc38>
   2f7b4:	ldr	r3, [r4]
   2f7b8:	cmp	r3, #0
   2f7bc:	beq	2f7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb78>
   2f7c0:	ldr	r3, [r5, #12]
   2f7c4:	ldrb	r3, [r3]
   2f7c8:	cmp	r3, #47	; 0x2f
   2f7cc:	beq	2f864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc0c>
   2f7d0:	ldr	r1, [pc, #188]	; 2f894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc3c>
   2f7d4:	mov	r2, #5
   2f7d8:	mov	r0, #0
   2f7dc:	bl	13460 <dcgettext@plt>
   2f7e0:	ldr	r1, [r5, #12]
   2f7e4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f7e8:	ldrb	r3, [r5, #37]	; 0x25
   2f7ec:	ldr	r2, [pc, #164]	; 2f898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc40>
   2f7f0:	orr	r3, r3, #8
   2f7f4:	strb	r3, [r5, #37]	; 0x25
   2f7f8:	ldrb	r3, [r2, #1]
   2f7fc:	orr	r3, r3, #8
   2f800:	strb	r3, [r2, #1]
   2f804:	pop	{r4, r5, r6, r7, r8, pc}
   2f808:	mov	r1, r0
   2f80c:	ldr	r0, [r0, #8]
   2f810:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   2f814:	subs	r4, r0, #0
   2f818:	popne	{r4, r5, r6, r7, r8, pc}
   2f81c:	ldrd	r0, [r5, #8]
   2f820:	bl	13394 <filename_cmp@plt>
   2f824:	cmp	r0, #0
   2f828:	beq	2f84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bbf4>
   2f82c:	mov	r0, r4
   2f830:	mov	r2, #5
   2f834:	ldr	r1, [pc, #96]	; 2f89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc44>
   2f838:	bl	13460 <dcgettext@plt>
   2f83c:	ldr	r2, [r5, #12]
   2f840:	ldr	r1, [r5, #8]
   2f844:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f848:	b	2f7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb90>
   2f84c:	mov	r2, #5
   2f850:	ldr	r1, [pc, #72]	; 2f8a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc48>
   2f854:	bl	13460 <dcgettext@plt>
   2f858:	ldr	r1, [r5, #12]
   2f85c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f860:	b	2f7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb90>
   2f864:	mov	r2, #5
   2f868:	ldr	r1, [pc, #52]	; 2f8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc4c>
   2f86c:	mov	r0, #0
   2f870:	bl	13460 <dcgettext@plt>
   2f874:	ldr	r2, [r4]
   2f878:	ldr	r1, [r5, #12]
   2f87c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f880:	b	2f7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb90>
   2f884:	andeq	r7, ip, ip, asr #26
   2f888:	muleq	r5, r8, lr
   2f88c:	andeq	r5, r8, ip, asr #32
   2f890:	andeq	r8, ip, r4, lsl r1
   2f894:			; <UNDEFINED> instruction: 0x00051ebc
   2f898:	andeq	r8, ip, r8, asr r0
   2f89c:	andeq	r1, r5, r0, ror #28
   2f8a0:	andeq	r1, r5, r0, lsl #29
   2f8a4:	muleq	r5, ip, lr
   2f8a8:	mov	r1, #0
   2f8ac:	b	2eddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b184>
   2f8b0:	mov	r1, #1
   2f8b4:	b	2eddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b184>
   2f8b8:	push	{r4, r5, r6, lr}
   2f8bc:	mov	r5, r0
   2f8c0:	bl	135a4 <xstrdup@plt>
   2f8c4:	mov	r4, r0
   2f8c8:	mov	r0, #8
   2f8cc:	bl	13574 <xmalloc@plt>
   2f8d0:	ldrb	r3, [r4]
   2f8d4:	ldr	r1, [pc, #64]	; 2f91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcc4>
   2f8d8:	mov	r2, #0
   2f8dc:	cmp	r3, r2
   2f8e0:	str	r5, [r1, #4]
   2f8e4:	str	r4, [r0]
   2f8e8:	str	r2, [r0, #4]
   2f8ec:	beq	2f908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   2f8f0:	ldr	r2, [pc, #40]	; 2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcc8>
   2f8f4:	ldrb	r3, [r2, r3]
   2f8f8:	strb	r3, [r4]
   2f8fc:	ldrb	r3, [r4, #1]!
   2f900:	cmp	r3, #0
   2f904:	bne	2f8f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc9c>
   2f908:	ldr	r3, [r1, #8]
   2f90c:	add	r2, r0, #4
   2f910:	str	r2, [r1, #8]
   2f914:	str	r0, [r3]
   2f918:	pop	{r4, r5, r6, pc}
   2f91c:	andeq	r7, ip, r4, lsl r4
   2f920:	andeq	r6, ip, r0, lsl #28
   2f924:	push	{r4, r5, r6, lr}
   2f928:	mov	r4, r1
   2f92c:	mov	r5, r0
   2f930:	bl	13994 <bfd_scan_arch@plt>
   2f934:	subs	r3, r0, #0
   2f938:	beq	2f964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd0c>
   2f93c:	ldr	ip, [pc, #76]	; 2f990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd38>
   2f940:	ldr	r1, [pc, #76]	; 2f994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd3c>
   2f944:	ldr	r2, [pc, #76]	; 2f998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd40>
   2f948:	ldr	lr, [r3, #12]
   2f94c:	ldr	r0, [r3, #16]
   2f950:	ldr	r3, [r3, #24]
   2f954:	str	lr, [ip]
   2f958:	str	r0, [r1]
   2f95c:	str	r3, [r2, #4]
   2f960:	pop	{r4, r5, r6, pc}
   2f964:	cmp	r4, #0
   2f968:	beq	2f978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd20>
   2f96c:	ldr	r3, [pc, #28]	; 2f990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd38>
   2f970:	str	r4, [r3]
   2f974:	pop	{r4, r5, r6, pc}
   2f978:	ldr	r1, [pc, #28]	; 2f99c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd44>
   2f97c:	mov	r2, #5
   2f980:	bl	13460 <dcgettext@plt>
   2f984:	mov	r1, r5
   2f988:	pop	{r4, r5, r6, lr}
   2f98c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2f990:	andeq	r8, ip, r0, asr r2
   2f994:	andeq	r8, ip, r4, asr r2
   2f998:	andeq	r7, ip, r4, lsl r4
   2f99c:	ldrdeq	r1, [r5], -r0
   2f9a0:	cmp	r0, #0
   2f9a4:	push	{r4, lr}
   2f9a8:	mov	r4, r1
   2f9ac:	sub	sp, sp, #8
   2f9b0:	beq	2f9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd90>
   2f9b4:	mov	r1, r4
   2f9b8:	bl	13400 <bfd_hash_newfunc@plt>
   2f9bc:	cmp	r0, #0
   2f9c0:	beq	2f9e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd88>
   2f9c4:	ldr	r2, [pc, #64]	; 2fa0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bdb4>
   2f9c8:	mov	r1, #0
   2f9cc:	str	r1, [r0, #12]
   2f9d0:	ldr	r3, [r2]
   2f9d4:	str	r1, [r0, #16]
   2f9d8:	add	r3, r3, #1
   2f9dc:	str	r3, [r2]
   2f9e0:	add	sp, sp, #8
   2f9e4:	pop	{r4, pc}
   2f9e8:	mov	r1, #20
   2f9ec:	mov	r0, r4
   2f9f0:	str	r2, [sp, #4]
   2f9f4:	bl	136dc <bfd_hash_allocate@plt>
   2f9f8:	ldr	r2, [sp, #4]
   2f9fc:	cmp	r0, #0
   2fa00:	bne	2f9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd5c>
   2fa04:	add	sp, sp, #8
   2fa08:	pop	{r4, pc}
   2fa0c:	andeq	r7, ip, r8, asr sp
   2fa10:	ldr	r3, [r0, #12]
   2fa14:	push	{r4, r5, r6, lr}
   2fa18:	cmp	r3, #0
   2fa1c:	mov	r4, r0
   2fa20:	mov	r5, r1
   2fa24:	beq	2fa34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bddc>
   2fa28:	ldr	r1, [pc, #60]	; 2fa6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be14>
   2fa2c:	ldr	r0, [pc, #60]	; 2fa70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be18>
   2fa30:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   2fa34:	ldr	r3, [pc, #56]	; 2fa74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be1c>
   2fa38:	mov	r2, #3
   2fa3c:	ldr	r1, [r4, #4]
   2fa40:	ldr	r0, [r3, #48]	; 0x30
   2fa44:	bl	1397c <bfd_demangle@plt>
   2fa48:	cmp	r0, #0
   2fa4c:	str	r0, [r4, #12]
   2fa50:	ldreq	r3, [r4, #4]
   2fa54:	mov	r0, #1
   2fa58:	streq	r3, [r4, #12]
   2fa5c:	ldr	r3, [r5]
   2fa60:	str	r4, [r3], #4
   2fa64:	str	r3, [r5]
   2fa68:	pop	{r4, r5, r6, pc}
   2fa6c:	andeq	r0, r0, fp, asr #2
   2fa70:	strdeq	r1, [r5], -r8
   2fa74:	andeq	r8, ip, ip, lsl #1
   2fa78:	push	{r4, r5, r6, r7, r8, lr}
   2fa7c:	sub	sp, sp, #24
   2fa80:	mov	r8, r0
   2fa84:	mov	r0, r3
   2fa88:	mov	r4, r3
   2fa8c:	mov	r7, r1
   2fa90:	mov	r6, r2
   2fa94:	ldr	r5, [sp, #48]	; 0x30
   2fa98:	bl	13304 <bfd_generic_link_read_symbols@plt>
   2fa9c:	cmp	r0, #0
   2faa0:	beq	2fad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be7c>
   2faa4:	ldr	r3, [r4, #120]	; 0x78
   2faa8:	mov	r0, r4
   2faac:	add	r2, sp, #4
   2fab0:	ldr	r1, [pc, #52]	; 2faec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be94>
   2fab4:	str	r8, [sp, #4]
   2fab8:	str	r7, [sp, #20]
   2fabc:	str	r6, [sp, #8]
   2fac0:	str	r5, [sp, #12]
   2fac4:	str	r3, [sp, #16]
   2fac8:	bl	13b20 <bfd_map_over_sections@plt>
   2facc:	add	sp, sp, #24
   2fad0:	pop	{r4, r5, r6, r7, r8, pc}
   2fad4:	mov	r2, #5
   2fad8:	ldr	r1, [pc, #16]	; 2faf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be98>
   2fadc:	bl	13460 <dcgettext@plt>
   2fae0:	mov	r1, r4
   2fae4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2fae8:	b	2faa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be4c>
   2faec:	andeq	pc, r2, r0, asr #26
   2faf0:	muleq	r5, r4, r7
   2faf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2faf8:	sub	sp, sp, #12
   2fafc:	ldr	r9, [r0, #16]
   2fb00:	cmp	r9, #0
   2fb04:	beq	2fbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf9c>
   2fb08:	mov	r0, r9
   2fb0c:	bl	13304 <bfd_generic_link_read_symbols@plt>
   2fb10:	cmp	r0, #0
   2fb14:	beq	2fbfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfa4>
   2fb18:	ldr	sl, [r9, #120]	; 0x78
   2fb1c:	ldr	r7, [sl]
   2fb20:	cmp	r7, #0
   2fb24:	beq	2fbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf9c>
   2fb28:	ldr	fp, [pc, #228]	; 2fc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfbc>
   2fb2c:	b	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bee4>
   2fb30:	ldr	r7, [sl, #4]!
   2fb34:	cmp	r7, #0
   2fb38:	beq	2fbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf9c>
   2fb3c:	ldr	r3, [r7, #12]
   2fb40:	ands	r8, r3, fp
   2fb44:	bne	2fb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bed8>
   2fb48:	ldr	r2, [pc, #200]	; 2fc18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfc0>
   2fb4c:	tst	r3, r2
   2fb50:	beq	2fb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bed8>
   2fb54:	ldr	r2, [r7, #16]
   2fb58:	ldr	r2, [r2, #60]	; 0x3c
   2fb5c:	cmp	r2, #0
   2fb60:	beq	2fb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bed8>
   2fb64:	tst	r3, #256	; 0x100
   2fb68:	ldr	r3, [pc, #172]	; 2fc1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfc4>
   2fb6c:	ldreq	r8, [r7, #4]
   2fb70:	ldr	r6, [r2]
   2fb74:	ldr	r5, [r3]
   2fb78:	cmp	r5, #0
   2fb7c:	beq	2fb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bed8>
   2fb80:	ldr	r4, [r5, #4]
   2fb84:	cmp	r4, #0
   2fb88:	bne	2fba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf50>
   2fb8c:	b	2fbdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf84>
   2fb90:	ldr	r3, [r5, #8]
   2fb94:	cmp	r3, #0
   2fb98:	bne	2fbdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf84>
   2fb9c:	ldr	r4, [r4]
   2fba0:	cmp	r4, #0
   2fba4:	beq	2fbdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf84>
   2fba8:	mov	r1, r6
   2fbac:	ldr	r0, [r4, #4]
   2fbb0:	bl	13268 <strcmp@plt>
   2fbb4:	subs	r1, r0, #0
   2fbb8:	bne	2fb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf38>
   2fbbc:	ldr	r2, [r7, #16]
   2fbc0:	mov	r3, r9
   2fbc4:	str	r5, [sp]
   2fbc8:	mov	r0, r8
   2fbcc:	bl	2fa78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be20>
   2fbd0:	ldr	r3, [r5, #8]
   2fbd4:	cmp	r3, #0
   2fbd8:	beq	2fb9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf44>
   2fbdc:	ldr	r5, [r5]
   2fbe0:	cmp	r5, #0
   2fbe4:	bne	2fb80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf28>
   2fbe8:	ldr	r7, [sl, #4]!
   2fbec:	cmp	r7, #0
   2fbf0:	bne	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bee4>
   2fbf4:	add	sp, sp, #12
   2fbf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fbfc:	mov	r2, #5
   2fc00:	ldr	r1, [pc, #24]	; 2fc20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfc8>
   2fc04:	bl	13460 <dcgettext@plt>
   2fc08:	mov	r1, r9
   2fc0c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2fc10:	b	2fb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bec0>
   2fc14:	andeq	r7, r0, r2
   2fc18:	andeq	r0, r0, r1, lsl #2
   2fc1c:	andeq	r8, ip, ip, lsr r0
   2fc20:	muleq	r5, r4, r7
   2fc24:	ldr	ip, [pc, #264]	; 2fd34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0dc>
   2fc28:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fc2c:	sub	sp, sp, #12
   2fc30:	mov	r2, #1
   2fc34:	mov	r3, #0
   2fc38:	ldr	r1, [r0, #4]
   2fc3c:	mov	r9, r0
   2fc40:	str	r2, [sp]
   2fc44:	ldr	r0, [ip, #28]
   2fc48:	mov	r2, r3
   2fc4c:	bl	13640 <bfd_link_hash_lookup@plt>
   2fc50:	subs	r5, r0, #0
   2fc54:	beq	2fd1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0c4>
   2fc58:	ldrb	r3, [r5, #12]
   2fc5c:	sub	r3, r3, #3
   2fc60:	cmp	r3, #1
   2fc64:	bhi	2fd10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0b8>
   2fc68:	ldr	r3, [r5, #20]
   2fc6c:	ldr	r3, [r3, #60]	; 0x3c
   2fc70:	cmp	r3, #0
   2fc74:	beq	2fd10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0b8>
   2fc78:	ldr	r2, [pc, #184]	; 2fd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0e0>
   2fc7c:	ldr	r8, [r3]
   2fc80:	ldr	r7, [r2]
   2fc84:	cmp	r7, #0
   2fc88:	beq	2fd10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0b8>
   2fc8c:	ldr	r6, [r7, #4]
   2fc90:	cmp	r6, #0
   2fc94:	bne	2fcb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c05c>
   2fc98:	b	2fd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0ac>
   2fc9c:	ldr	r3, [r7, #8]
   2fca0:	cmp	r3, #0
   2fca4:	bne	2fd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0ac>
   2fca8:	ldr	r6, [r6]
   2fcac:	cmp	r6, #0
   2fcb0:	beq	2fd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0ac>
   2fcb4:	mov	r1, r8
   2fcb8:	ldr	r0, [r6, #4]
   2fcbc:	bl	13268 <strcmp@plt>
   2fcc0:	cmp	r0, #0
   2fcc4:	bne	2fc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c044>
   2fcc8:	ldr	r4, [r9, #16]
   2fccc:	cmp	r4, #0
   2fcd0:	beq	2fc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c044>
   2fcd4:	ldr	r3, [r4, #4]
   2fcd8:	ldr	r2, [r5, #20]
   2fcdc:	ldr	r0, [r5, #4]
   2fce0:	mov	r1, #1
   2fce4:	str	r7, [sp]
   2fce8:	bl	2fa78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be20>
   2fcec:	ldr	r4, [r4]
   2fcf0:	cmp	r4, #0
   2fcf4:	bne	2fcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c07c>
   2fcf8:	ldr	r3, [r7, #8]
   2fcfc:	cmp	r3, #0
   2fd00:	beq	2fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c050>
   2fd04:	ldr	r7, [r7]
   2fd08:	cmp	r7, #0
   2fd0c:	bne	2fc8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c034>
   2fd10:	mov	r0, #1
   2fd14:	add	sp, sp, #12
   2fd18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fd1c:	mov	r2, #5
   2fd20:	ldr	r1, [pc, #20]	; 2fd3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0e4>
   2fd24:	bl	13460 <dcgettext@plt>
   2fd28:	ldr	r1, [r9, #4]
   2fd2c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2fd30:	b	2fd10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0b8>
   2fd34:	andeq	r8, ip, ip, lsl #1
   2fd38:	andeq	r8, ip, ip, lsr r0
   2fd3c:	andeq	r1, r5, ip, lsl #30
   2fd40:	ldr	r3, [r2, #4]
   2fd44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fd48:	mov	r6, r2
   2fd4c:	ldr	r3, [r3, #60]	; 0x3c
   2fd50:	ldr	r2, [r1, #60]	; 0x3c
   2fd54:	sub	sp, sp, #36	; 0x24
   2fd58:	ldr	r9, [r3]
   2fd5c:	ldr	r4, [r2]
   2fd60:	mov	r7, r1
   2fd64:	mov	sl, r0
   2fd68:	mov	r1, r9
   2fd6c:	mov	r0, r4
   2fd70:	bl	13268 <strcmp@plt>
   2fd74:	cmp	r0, #0
   2fd78:	beq	2fddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c184>
   2fd7c:	ldr	r3, [r6, #8]
   2fd80:	ldr	r5, [r3, #4]
   2fd84:	cmp	r5, #0
   2fd88:	bne	2fd9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c144>
   2fd8c:	b	2fddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c184>
   2fd90:	ldr	r5, [r5]
   2fd94:	cmp	r5, #0
   2fd98:	beq	2fddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c184>
   2fd9c:	ldr	r1, [r5, #4]
   2fda0:	mov	r0, r4
   2fda4:	bl	13268 <strcmp@plt>
   2fda8:	cmp	r0, #0
   2fdac:	bne	2fd90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c138>
   2fdb0:	ldr	r3, [r6]
   2fdb4:	mov	r8, r0
   2fdb8:	str	r3, [sp, #16]
   2fdbc:	ldr	r3, [r6, #16]
   2fdc0:	mov	r1, r7
   2fdc4:	mov	r0, sl
   2fdc8:	str	r3, [sp, #20]
   2fdcc:	bl	13b14 <bfd_get_reloc_upper_bound@plt>
   2fdd0:	subs	r5, r0, #0
   2fdd4:	blt	2fde4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c18c>
   2fdd8:	bne	2fdfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c1a4>
   2fddc:	add	sp, sp, #36	; 0x24
   2fde0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fde4:	ldr	r1, [pc, #404]	; 2ff80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c328>
   2fde8:	mov	r0, r8
   2fdec:	mov	r2, #5
   2fdf0:	bl	13460 <dcgettext@plt>
   2fdf4:	mov	r1, sl
   2fdf8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2fdfc:	mov	r0, r5
   2fe00:	bl	13574 <xmalloc@plt>
   2fe04:	ldr	r3, [r6, #12]
   2fe08:	mov	r1, r7
   2fe0c:	mov	r2, r0
   2fe10:	mov	fp, r0
   2fe14:	mov	r0, sl
   2fe18:	bl	13a84 <bfd_canonicalize_reloc@plt>
   2fe1c:	subs	r8, r0, #0
   2fe20:	blt	2ff54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2fc>
   2fe24:	add	r8, fp, r8, lsl #2
   2fe28:	cmp	fp, r8
   2fe2c:	bcs	2ff44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2ec>
   2fe30:	ldr	r3, [fp]
   2fe34:	cmp	r3, #0
   2fe38:	beq	2ff44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2ec>
   2fe3c:	str	r4, [sp, #24]
   2fe40:	str	r9, [sp, #28]
   2fe44:	add	r5, fp, #4
   2fe48:	ldr	r9, [sp, #20]
   2fe4c:	mov	r4, r3
   2fe50:	str	r7, [sp, #20]
   2fe54:	ldr	r7, [sp, #16]
   2fe58:	b	2fe90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c238>
   2fe5c:	ldr	r1, [r2, #12]
   2fe60:	ldr	r3, [pc, #284]	; 2ff84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c32c>
   2fe64:	tst	r3, r1
   2fe68:	beq	2fe7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fe6c:	ldr	r0, [r2, #16]
   2fe70:	ldr	r1, [r6, #4]
   2fe74:	cmp	r0, r1
   2fe78:	beq	2fed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c280>
   2fe7c:	cmp	r8, r5
   2fe80:	bls	2ff44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2ec>
   2fe84:	ldr	r4, [r5], #4
   2fe88:	cmp	r4, #0
   2fe8c:	beq	2ff44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2ec>
   2fe90:	ldr	r2, [r4]
   2fe94:	cmp	r2, #0
   2fe98:	beq	2fe7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fe9c:	ldr	r2, [r2]
   2fea0:	cmp	r2, #0
   2fea4:	beq	2fe7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fea8:	cmp	r9, #0
   2feac:	beq	2fe5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c204>
   2feb0:	ldr	r1, [r2, #16]
   2feb4:	ldr	r3, [pc, #204]	; 2ff88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c330>
   2feb8:	cmp	r1, r3
   2febc:	beq	2fed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c280>
   2fec0:	ldr	r1, [r1, #20]
   2fec4:	tst	r1, #4096	; 0x1000
   2fec8:	bne	2fed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c280>
   2fecc:	ldr	r1, [r2, #12]
   2fed0:	tst	r1, #130	; 0x82
   2fed4:	beq	2fe7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fed8:	cmp	r7, #0
   2fedc:	beq	2ff70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c318>
   2fee0:	ldr	r0, [r2, #4]
   2fee4:	mov	r1, r7
   2fee8:	bl	13268 <strcmp@plt>
   2feec:	clz	r0, r0
   2fef0:	lsr	r0, r0, #5
   2fef4:	cmp	r0, #0
   2fef8:	beq	2fe7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fefc:	mov	r2, #5
   2ff00:	ldr	r1, [pc, #132]	; 2ff8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c334>
   2ff04:	mov	r0, #0
   2ff08:	bl	13460 <dcgettext@plt>
   2ff0c:	ldr	r2, [sp, #28]
   2ff10:	ldr	r3, [r4, #4]
   2ff14:	str	r2, [sp, #8]
   2ff18:	ldr	r1, [r4]
   2ff1c:	ldr	lr, [sp, #24]
   2ff20:	ldr	r2, [sp, #20]
   2ff24:	ldr	ip, [r1]
   2ff28:	mov	r1, sl
   2ff2c:	ldr	ip, [ip, #4]
   2ff30:	str	lr, [sp]
   2ff34:	str	ip, [sp, #4]
   2ff38:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ff3c:	cmp	r8, r5
   2ff40:	bhi	2fe84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c22c>
   2ff44:	mov	r0, fp
   2ff48:	add	sp, sp, #36	; 0x24
   2ff4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ff50:	b	13364 <free@plt>
   2ff54:	mov	r2, #5
   2ff58:	ldr	r1, [pc, #32]	; 2ff80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c328>
   2ff5c:	mov	r0, #0
   2ff60:	bl	13460 <dcgettext@plt>
   2ff64:	mov	r1, sl
   2ff68:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   2ff6c:	b	2fe24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c1cc>
   2ff70:	ldr	r0, [r2, #12]
   2ff74:	lsr	r0, r0, #8
   2ff78:	and	r0, r0, #1
   2ff7c:	b	2fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c29c>
   2ff80:	andeq	r0, r5, r8, lsl #19
   2ff84:	andeq	r0, r0, r1, lsl #2
   2ff88:	andeq	r7, ip, r0, lsl #16
   2ff8c:	andeq	r1, r5, ip, lsr pc
   2ff90:	ldr	ip, [pc, #40]	; 2ffc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c368>
   2ff94:	ldr	r2, [r1]
   2ff98:	ldr	r3, [r0]
   2ff9c:	ldr	r1, [ip]
   2ffa0:	cmp	r1, #0
   2ffa4:	beq	2ffb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c35c>
   2ffa8:	ldr	r1, [r2, #12]
   2ffac:	ldr	r0, [r3, #12]
   2ffb0:	b	13268 <strcmp@plt>
   2ffb4:	ldr	r1, [r2, #4]
   2ffb8:	ldr	r0, [r3, #4]
   2ffbc:	b	13268 <strcmp@plt>
   2ffc0:	andeq	r8, ip, r4, lsl #1
   2ffc4:	push	{r4, r5, r6, r7, r8, lr}
   2ffc8:	mov	r7, r0
   2ffcc:	ldr	r4, [pc, #296]	; 300fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4a4>
   2ffd0:	mov	r5, r1
   2ffd4:	mov	r6, r2
   2ffd8:	ldr	r3, [r4, #4]
   2ffdc:	cmp	r3, #0
   2ffe0:	beq	3008c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c434>
   2ffe4:	mov	r1, r7
   2ffe8:	mov	r3, #0
   2ffec:	mov	r2, #1
   2fff0:	ldr	r0, [pc, #264]	; 30100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4a8>
   2fff4:	bl	137a8 <bfd_hash_lookup@plt>
   2fff8:	subs	r7, r0, #0
   2fffc:	beq	300c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c468>
   30000:	ldr	r4, [r7, #16]
   30004:	cmp	r4, #0
   30008:	beq	30034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3dc>
   3000c:	ldr	r3, [r4, #4]
   30010:	cmp	r5, r3
   30014:	bne	30028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3d0>
   30018:	b	30064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c40c>
   3001c:	ldr	r3, [r4, #4]
   30020:	cmp	r3, r5
   30024:	beq	30064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c40c>
   30028:	ldr	r4, [r4]
   3002c:	cmp	r4, #0
   30030:	bne	3001c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3c4>
   30034:	mov	r1, #12
   30038:	ldr	r0, [pc, #192]	; 30100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4a8>
   3003c:	bl	136dc <bfd_hash_allocate@plt>
   30040:	subs	r4, r0, #0
   30044:	beq	300e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c490>
   30048:	ldrb	r3, [r4, #8]
   3004c:	ldr	r2, [r7, #16]
   30050:	bic	r3, r3, #7
   30054:	str	r2, [r4]
   30058:	str	r4, [r7, #16]
   3005c:	str	r5, [r4, #4]
   30060:	strb	r3, [r4, #8]
   30064:	ldr	r3, [pc, #152]	; 30104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4ac>
   30068:	cmp	r6, r3
   3006c:	beq	300b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c458>
   30070:	ldr	r3, [r6, #20]
   30074:	tst	r3, #4096	; 0x1000
   30078:	ldrb	r3, [r4, #8]
   3007c:	orrne	r3, r3, #2
   30080:	orreq	r3, r3, #1
   30084:	strb	r3, [r4, #8]
   30088:	pop	{r4, r5, r6, r7, r8, pc}
   3008c:	mov	r2, #20
   30090:	ldr	r1, [pc, #112]	; 30108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4b0>
   30094:	add	r0, r4, #8
   30098:	bl	13afc <bfd_hash_table_init@plt>
   3009c:	cmp	r0, #0
   300a0:	beq	300d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c47c>
   300a4:	mov	r3, #1
   300a8:	str	r3, [r4, #4]
   300ac:	b	2ffe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c38c>
   300b0:	ldrb	r3, [r4, #8]
   300b4:	orr	r3, r3, #4
   300b8:	strb	r3, [r4, #8]
   300bc:	pop	{r4, r5, r6, r7, r8, pc}
   300c0:	mov	r2, #5
   300c4:	ldr	r1, [pc, #64]	; 3010c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4b4>
   300c8:	bl	13460 <dcgettext@plt>
   300cc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   300d0:	b	30000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3a8>
   300d4:	mov	r2, #5
   300d8:	ldr	r1, [pc, #48]	; 30110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4b8>
   300dc:	bl	13460 <dcgettext@plt>
   300e0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   300e4:	b	300a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c44c>
   300e8:	mov	r2, #5
   300ec:	ldr	r1, [pc, #32]	; 30114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4bc>
   300f0:	bl	13460 <dcgettext@plt>
   300f4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   300f8:	b	30048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3f0>
   300fc:	andeq	r7, ip, r8, asr sp
   30100:	andeq	r7, ip, r0, ror #26
   30104:	andeq	r7, ip, r0, lsl #16
   30108:	andeq	pc, r2, r0, lsr #19
   3010c:			; <UNDEFINED> instruction: 0x00051fb0
   30110:	andeq	r1, r5, ip, ror pc
   30114:	ldrdeq	r1, [r5], -r4
   30118:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3011c:	ldr	r5, [pc, #744]	; 3040c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7b4>
   30120:	ldr	r3, [r5, #4]
   30124:	cmp	r3, #0
   30128:	beq	301c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c56c>
   3012c:	cmp	r1, #0
   30130:	mov	r6, r1
   30134:	bne	301cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c574>
   30138:	ldr	r8, [r5, #20]
   3013c:	ldr	r9, [r5, #36]	; 0x24
   30140:	cmp	r8, #0
   30144:	ldr	sl, [r5, #40]	; 0x28
   30148:	beq	303ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c794>
   3014c:	ldr	r4, [r5, #8]
   30150:	lsl	r8, r8, #2
   30154:	add	r7, r4, r8
   30158:	ldr	lr, [r5, #28]
   3015c:	sub	r7, r7, #4
   30160:	sub	r4, r4, #4
   30164:	mov	ip, r9
   30168:	mov	r2, sl
   3016c:	mov	r3, r1
   30170:	ldr	r0, [r4, #4]!
   30174:	cmp	r0, #0
   30178:	beq	302d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c680>
   3017c:	add	ip, ip, lr
   30180:	ldr	r3, [r0, #16]
   30184:	cmp	r3, #0
   30188:	beq	301ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c554>
   3018c:	add	r2, r2, #12
   30190:	b	30198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c540>
   30194:	mov	r2, r1
   30198:	ldr	r3, [r3]
   3019c:	add	r1, r2, #12
   301a0:	cmp	r3, #0
   301a4:	bne	30194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c53c>
   301a8:	mov	r1, #1
   301ac:	ldr	r0, [r0]
   301b0:	add	r3, lr, ip
   301b4:	cmp	r0, #0
   301b8:	beq	302d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c67c>
   301bc:	mov	ip, r3
   301c0:	b	30180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c528>
   301c4:	mov	r0, #1
   301c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   301cc:	cmp	r1, #1
   301d0:	beq	301e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c58c>
   301d4:	cmp	r1, #2
   301d8:	beq	302bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c664>
   301dc:	mov	r0, #0
   301e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   301e4:	ldr	r7, [r5, #48]	; 0x30
   301e8:	cmp	r7, #0
   301ec:	beq	303f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7a0>
   301f0:	ldr	r2, [r5, #44]	; 0x2c
   301f4:	ldr	r3, [r5, #64]	; 0x40
   301f8:	ldr	r0, [r5, #56]	; 0x38
   301fc:	ldr	ip, [r5, #60]	; 0x3c
   30200:	mov	r1, r7
   30204:	add	r8, r7, r2
   30208:	ldr	r4, [r5, #36]	; 0x24
   3020c:	str	r3, [r5, #24]
   30210:	str	r0, [r5, #8]
   30214:	str	ip, [r5, #20]
   30218:	bl	133b8 <memcpy@plt>
   3021c:	ldr	r2, [r5, #20]
   30220:	ldr	r3, [r5, #68]	; 0x44
   30224:	cmp	r2, #0
   30228:	add	r4, r8, r4
   3022c:	str	r3, [r5]
   30230:	movne	r7, #0
   30234:	beq	302b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c658>
   30238:	ldr	r3, [r5, #8]
   3023c:	ldr	r6, [r3, r7, lsl #2]
   30240:	cmp	r6, #0
   30244:	beq	302a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c648>
   30248:	ldr	r2, [r5, #28]
   3024c:	mov	r1, r8
   30250:	mov	r0, r6
   30254:	bl	133b8 <memcpy@plt>
   30258:	ldr	r3, [r6, #16]
   3025c:	ldr	r2, [r5, #28]
   30260:	cmp	r3, #0
   30264:	add	r8, r8, r2
   30268:	beq	30294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c63c>
   3026c:	ldr	r0, [r4]
   30270:	ldr	r1, [r4, #4]
   30274:	ldr	r2, [r4, #8]
   30278:	str	r0, [r3]
   3027c:	str	r1, [r3, #4]
   30280:	str	r2, [r3, #8]
   30284:	ldr	r3, [r3]
   30288:	add	r4, r4, #12
   3028c:	cmp	r3, #0
   30290:	bne	3026c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c614>
   30294:	ldr	r6, [r6]
   30298:	cmp	r6, #0
   3029c:	bne	30248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5f0>
   302a0:	ldr	r3, [r5, #20]
   302a4:	add	r7, r7, #1
   302a8:	cmp	r3, r7
   302ac:	bhi	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5e0>
   302b0:	ldr	r1, [r5, #52]	; 0x34
   302b4:	ldr	r0, [r5, #16]
   302b8:	bl	13910 <objalloc_free_block@plt>
   302bc:	ldr	r0, [r5, #48]	; 0x30
   302c0:	bl	13364 <free@plt>
   302c4:	mov	r3, #0
   302c8:	mov	r0, #1
   302cc:	str	r3, [r5, #48]	; 0x30
   302d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   302d4:	mov	r3, #1
   302d8:	cmp	r7, r4
   302dc:	bne	30170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c518>
   302e0:	cmp	r1, #0
   302e4:	strne	r2, [r5, #40]	; 0x28
   302e8:	moveq	r2, sl
   302ec:	cmp	r3, #0
   302f0:	strne	ip, [r5, #36]	; 0x24
   302f4:	beq	303f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c798>
   302f8:	add	r0, ip, r8
   302fc:	add	r0, r0, r2
   30300:	str	r8, [r5, #44]	; 0x2c
   30304:	bl	13574 <xmalloc@plt>
   30308:	mov	r1, #1
   3030c:	str	r0, [r5, #48]	; 0x30
   30310:	ldr	r0, [pc, #248]	; 30410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7b8>
   30314:	bl	136dc <bfd_hash_allocate@plt>
   30318:	cmp	r0, #0
   3031c:	str	r0, [r5, #52]	; 0x34
   30320:	beq	301dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c584>
   30324:	ldr	r8, [r5, #48]	; 0x30
   30328:	ldr	r7, [r5, #44]	; 0x2c
   3032c:	mov	r0, r8
   30330:	mov	r2, r7
   30334:	ldr	r1, [r5, #8]
   30338:	bl	133b8 <memcpy@plt>
   3033c:	ldr	r2, [r5, #20]
   30340:	ldr	r4, [r5, #36]	; 0x24
   30344:	ldr	r3, [r5, #8]
   30348:	ldr	r1, [r5, #24]
   3034c:	cmp	r2, #0
   30350:	str	r2, [r5, #60]	; 0x3c
   30354:	ldr	r2, [r5]
   30358:	add	r8, r8, r7
   3035c:	add	r4, r8, r4
   30360:	str	r3, [r5, #56]	; 0x38
   30364:	str	r1, [r5, #64]	; 0x40
   30368:	str	r2, [r5, #68]	; 0x44
   3036c:	beq	301c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c56c>
   30370:	ldr	r7, [r3, r6, lsl #2]
   30374:	cmp	r7, #0
   30378:	beq	303d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c77c>
   3037c:	ldr	r2, [r5, #28]
   30380:	mov	r0, r8
   30384:	mov	r1, r7
   30388:	bl	133b8 <memcpy@plt>
   3038c:	ldr	r3, [r7, #16]
   30390:	ldr	r2, [r5, #28]
   30394:	cmp	r3, #0
   30398:	add	r8, r8, r2
   3039c:	beq	303c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c770>
   303a0:	ldr	r0, [r3]
   303a4:	ldr	r1, [r3, #4]
   303a8:	ldr	r2, [r3, #8]
   303ac:	str	r0, [r4]
   303b0:	str	r1, [r4, #4]
   303b4:	str	r2, [r4, #8]
   303b8:	ldr	r3, [r3]
   303bc:	add	r4, r4, #12
   303c0:	cmp	r3, #0
   303c4:	bne	303a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c748>
   303c8:	ldr	r7, [r7]
   303cc:	cmp	r7, #0
   303d0:	bne	3037c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c724>
   303d4:	ldr	r3, [r5, #20]
   303d8:	add	r6, r6, #1
   303dc:	cmp	r3, r6
   303e0:	bls	301c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c56c>
   303e4:	ldr	r3, [r5, #8]
   303e8:	b	30370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c718>
   303ec:	mov	r2, sl
   303f0:	mov	ip, r9
   303f4:	b	302f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6a0>
   303f8:	add	r0, r5, #8
   303fc:	bl	13508 <bfd_hash_table_free@plt>
   30400:	str	r7, [r5, #4]
   30404:	mov	r0, r6
   30408:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3040c:	andeq	r7, ip, r8, asr sp
   30410:	andeq	r7, ip, r0, ror #26
   30414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30418:	mov	r2, #5
   3041c:	sub	sp, sp, #20
   30420:	mov	r4, r0
   30424:	ldr	r1, [pc, #880]	; 3079c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb44>
   30428:	mov	r0, #0
   3042c:	bl	13460 <dcgettext@plt>
   30430:	mov	r1, r0
   30434:	mov	r0, r4
   30438:	bl	1382c <fprintf@plt>
   3043c:	mov	r2, #5
   30440:	ldr	r1, [pc, #856]	; 307a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb48>
   30444:	mov	r0, #0
   30448:	bl	13460 <dcgettext@plt>
   3044c:	mov	r1, r4
   30450:	mov	r5, r0
   30454:	bl	13ba4 <fputs@plt>
   30458:	mov	r0, r5
   3045c:	bl	137d8 <strlen@plt>
   30460:	cmp	r0, #49	; 0x31
   30464:	movls	r5, r0
   30468:	bhi	30484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c82c>
   3046c:	add	r5, r5, #1
   30470:	mov	r1, r4
   30474:	mov	r0, #32
   30478:	bl	13a18 <putc@plt>
   3047c:	cmp	r5, #50	; 0x32
   30480:	bne	3046c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c814>
   30484:	mov	r2, #5
   30488:	ldr	r1, [pc, #788]	; 307a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb4c>
   3048c:	mov	r0, #0
   30490:	bl	13460 <dcgettext@plt>
   30494:	ldr	r5, [pc, #780]	; 307a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb50>
   30498:	mov	r1, r0
   3049c:	mov	r0, r4
   304a0:	bl	1382c <fprintf@plt>
   304a4:	ldr	r0, [r5, #4]
   304a8:	cmp	r0, #0
   304ac:	beq	3077c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb24>
   304b0:	ldr	r0, [r5]
   304b4:	lsl	r0, r0, #2
   304b8:	bl	13574 <xmalloc@plt>
   304bc:	ldr	r1, [pc, #744]	; 307ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb54>
   304c0:	add	r2, sp, #12
   304c4:	mov	r7, r0
   304c8:	add	r0, r5, #8
   304cc:	str	r7, [sp, #12]
   304d0:	bl	13334 <bfd_hash_traverse@plt>
   304d4:	ldr	r3, [sp, #12]
   304d8:	ldr	r1, [r5]
   304dc:	sub	r3, r3, r7
   304e0:	cmp	r1, r3, asr #2
   304e4:	bne	30768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb10>
   304e8:	ldr	r3, [pc, #704]	; 307b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb58>
   304ec:	mov	r2, #4
   304f0:	mov	r0, r7
   304f4:	bl	13a78 <qsort@plt>
   304f8:	ldr	r8, [r5]
   304fc:	add	r8, r7, r8, lsl #2
   30500:	cmp	r7, r8
   30504:	bcs	306b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca60>
   30508:	ldr	fp, [pc, #676]	; 307b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb5c>
   3050c:	ldr	r6, [pc, #676]	; 307b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb60>
   30510:	ldr	sl, [r7], #4
   30514:	ldr	r0, [pc, #672]	; 307bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb64>
   30518:	mov	r3, #0
   3051c:	mov	ip, #1
   30520:	mov	r2, r3
   30524:	ldr	r1, [sl, #4]
   30528:	ldr	r0, [r0, #28]
   3052c:	str	ip, [sp]
   30530:	bl	13640 <bfd_link_hash_lookup@plt>
   30534:	subs	r3, r0, #0
   30538:	beq	30750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1caf8>
   3053c:	ldrb	r2, [r3, #12]
   30540:	cmp	r2, #3
   30544:	beq	306f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1caa0>
   30548:	ldr	r3, [fp]
   3054c:	cmp	r3, #0
   30550:	beq	306c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca68>
   30554:	ldr	r2, [sl, #12]
   30558:	ldr	r1, [pc, #608]	; 307c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb68>
   3055c:	mov	r0, r4
   30560:	bl	1382c <fprintf@plt>
   30564:	ldr	r0, [sl, #12]
   30568:	bl	137d8 <strlen@plt>
   3056c:	ldr	r9, [sl, #16]
   30570:	cmp	r9, #0
   30574:	add	r5, r0, #1
   30578:	bne	3058c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c934>
   3057c:	b	306e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca90>
   30580:	ldr	r9, [r9]
   30584:	cmp	r9, #0
   30588:	beq	305d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c980>
   3058c:	ldrb	r3, [r9, #8]
   30590:	tst	r3, #1
   30594:	beq	30580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c928>
   30598:	cmp	r5, #49	; 0x31
   3059c:	bgt	305b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c960>
   305a0:	add	r5, r5, #1
   305a4:	mov	r1, r4
   305a8:	mov	r0, #32
   305ac:	bl	13a18 <putc@plt>
   305b0:	cmp	r5, #50	; 0x32
   305b4:	bne	305a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c948>
   305b8:	ldr	r2, [r9, #4]
   305bc:	mov	r1, r6
   305c0:	mov	r0, r4
   305c4:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   305c8:	ldr	r9, [r9]
   305cc:	mov	r5, #0
   305d0:	cmp	r9, #0
   305d4:	bne	3058c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c934>
   305d8:	ldr	r9, [sl, #16]
   305dc:	cmp	r9, #0
   305e0:	bne	305f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c99c>
   305e4:	b	306a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca50>
   305e8:	ldr	r9, [r9]
   305ec:	cmp	r9, #0
   305f0:	beq	30640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9e8>
   305f4:	ldrb	r3, [r9, #8]
   305f8:	tst	r3, #2
   305fc:	beq	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c990>
   30600:	cmp	r5, #49	; 0x31
   30604:	bgt	30620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9c8>
   30608:	add	r5, r5, #1
   3060c:	mov	r1, r4
   30610:	mov	r0, #32
   30614:	bl	13a18 <putc@plt>
   30618:	cmp	r5, #50	; 0x32
   3061c:	bne	30608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9b0>
   30620:	ldr	r2, [r9, #4]
   30624:	mov	r1, r6
   30628:	mov	r0, r4
   3062c:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   30630:	ldr	r9, [r9]
   30634:	mov	r5, #0
   30638:	cmp	r9, #0
   3063c:	bne	305f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c99c>
   30640:	ldr	r9, [sl, #16]
   30644:	cmp	r9, #0
   30648:	bne	3065c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca04>
   3064c:	b	306a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca50>
   30650:	ldr	r9, [r9]
   30654:	cmp	r9, #0
   30658:	beq	306a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca50>
   3065c:	ldrb	r3, [r9, #8]
   30660:	tst	r3, #3
   30664:	bne	30650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9f8>
   30668:	cmp	r5, #49	; 0x31
   3066c:	bgt	30688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca30>
   30670:	add	r5, r5, #1
   30674:	mov	r1, r4
   30678:	mov	r0, #32
   3067c:	bl	13a18 <putc@plt>
   30680:	cmp	r5, #50	; 0x32
   30684:	bne	30670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca18>
   30688:	ldr	r2, [r9, #4]
   3068c:	mov	r1, r6
   30690:	mov	r0, r4
   30694:	bl	2eb90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af38>
   30698:	ldr	r9, [r9]
   3069c:	mov	r5, #0
   306a0:	cmp	r9, #0
   306a4:	bne	3065c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca04>
   306a8:	cmp	r5, #0
   306ac:	bne	306e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca90>
   306b0:	cmp	r8, r7
   306b4:	bhi	30510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8b8>
   306b8:	add	sp, sp, #20
   306bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   306c0:	ldr	r2, [sl, #4]
   306c4:	ldr	r1, [pc, #244]	; 307c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb68>
   306c8:	mov	r0, r4
   306cc:	bl	1382c <fprintf@plt>
   306d0:	ldr	r0, [sl, #4]
   306d4:	bl	137d8 <strlen@plt>
   306d8:	ldr	r9, [sl, #16]
   306dc:	cmp	r9, #0
   306e0:	add	r5, r0, #1
   306e4:	bne	3058c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c934>
   306e8:	mov	r1, #488	; 0x1e8
   306ec:	ldr	r0, [pc, #208]	; 307c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb6c>
   306f0:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   306f4:	b	306b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca58>
   306f8:	ldr	r3, [r3, #20]
   306fc:	ldr	r2, [r3, #60]	; 0x3c
   30700:	cmp	r2, #0
   30704:	beq	306b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca58>
   30708:	ldr	r3, [r3, #148]	; 0x94
   3070c:	cmp	r3, #0
   30710:	beq	30548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8f0>
   30714:	ldr	r3, [r3, #40]	; 0x28
   30718:	tst	r3, #2048	; 0x800
   3071c:	beq	30548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8f0>
   30720:	ldr	r3, [sl, #16]
   30724:	cmp	r3, #0
   30728:	bne	3073c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cae4>
   3072c:	b	306b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca58>
   30730:	ldr	r3, [r3]
   30734:	cmp	r3, #0
   30738:	beq	306b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca58>
   3073c:	ldr	r2, [r3, #4]
   30740:	ldr	r2, [r2, #40]	; 0x28
   30744:	tst	r2, #2048	; 0x800
   30748:	bne	30730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cad8>
   3074c:	b	30548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8f0>
   30750:	mov	r2, #5
   30754:	ldr	r1, [pc, #108]	; 307c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb70>
   30758:	bl	13460 <dcgettext@plt>
   3075c:	ldr	r1, [sl, #4]
   30760:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   30764:	b	30548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8f0>
   30768:	mov	r1, #392	; 0x188
   3076c:	ldr	r0, [pc, #80]	; 307c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb6c>
   30770:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30774:	ldr	r1, [r5]
   30778:	b	304e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c890>
   3077c:	mov	r2, #5
   30780:	ldr	r1, [pc, #68]	; 307cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb74>
   30784:	bl	13460 <dcgettext@plt>
   30788:	mov	r1, r0
   3078c:	mov	r0, r4
   30790:	bl	1382c <fprintf@plt>
   30794:	add	sp, sp, #20
   30798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3079c:	strdeq	r1, [r5], -r4
   307a0:	andeq	r2, r5, r0, lsl r0
   307a4:	andeq	r2, r5, r8, lsl r0
   307a8:	andeq	r7, ip, r8, asr sp
   307ac:	andeq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
   307b0:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   307b4:	andeq	r8, ip, r4, lsl #1
   307b8:	muleq	r4, ip, r1
   307bc:	andeq	r8, ip, ip, lsl #1
   307c0:	andeq	r3, r4, r8, lsl #14
   307c4:	strdeq	r1, [r5], -r8
   307c8:	andeq	r1, r5, ip, lsl #30
   307cc:	andeq	r2, r5, r0, lsr #32
   307d0:	ldr	r0, [pc, #40]	; 30800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba8>
   307d4:	ldr	r3, [r0, #4]
   307d8:	cmp	r3, #0
   307dc:	bxeq	lr
   307e0:	push	{r4, lr}
   307e4:	add	r0, r0, #8
   307e8:	mov	r2, #0
   307ec:	ldr	r1, [pc, #16]	; 30804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbac>
   307f0:	bl	13334 <bfd_hash_traverse@plt>
   307f4:	ldr	r0, [pc, #12]	; 30808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbb0>
   307f8:	pop	{r4, lr}
   307fc:	b	22fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf360>
   30800:	andeq	r7, ip, r8, asr sp
   30804:	andeq	pc, r2, r4, lsr #24
   30808:	strdeq	pc, [r2], -r4
   3080c:	push	{r4, r5, r6, r7, r8, lr}
   30810:	mov	r4, r0
   30814:	mov	r0, r1
   30818:	mov	r5, r1
   3081c:	bl	137d8 <strlen@plt>
   30820:	add	r6, r0, #1
   30824:	mov	r1, r6
   30828:	mov	r0, r4
   3082c:	bl	13448 <bfd_alloc@plt>
   30830:	subs	r4, r0, #0
   30834:	beq	30850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbf8>
   30838:	mov	r2, r6
   3083c:	mov	r1, r5
   30840:	mov	r0, r4
   30844:	bl	133b8 <memcpy@plt>
   30848:	mov	r0, r4
   3084c:	pop	{r4, r5, r6, r7, r8, pc}
   30850:	mov	r2, #5
   30854:	ldr	r1, [pc, #24]	; 30874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cc1c>
   30858:	bl	13460 <dcgettext@plt>
   3085c:	mov	r7, r0
   30860:	bl	13550 <bfd_get_error@plt>
   30864:	mov	r1, r0
   30868:	mov	r0, r7
   3086c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   30870:	b	30838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbe0>
   30874:	andeq	r2, r5, r0, lsl #1
   30878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3087c:	sub	sp, sp, #4
   30880:	subs	r4, r1, #0
   30884:	mov	r8, r0
   30888:	mov	r7, r2
   3088c:	mov	r5, r3
   30890:	ldr	r9, [sp, #40]	; 0x28
   30894:	ldr	fp, [sp, #44]	; 0x2c
   30898:	ldr	sl, [sp, #48]	; 0x30
   3089c:	beq	30978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd20>
   308a0:	ldrb	r3, [r4, #12]
   308a4:	cmp	r3, #7
   308a8:	movne	r3, r4
   308ac:	ldreq	r3, [r4, #20]
   308b0:	cmp	r5, #0
   308b4:	beq	308c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cc6c>
   308b8:	ldr	r2, [r5, #40]	; 0x28
   308bc:	tst	r2, #2097152	; 0x200000
   308c0:	bne	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   308c4:	ldr	r2, [pc, #440]	; 30a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce2c>
   308c8:	cmp	r9, r2
   308cc:	beq	308d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cc80>
   308d0:	tst	sl, #8192	; 0x2000
   308d4:	beq	30980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd28>
   308d8:	ldrb	r2, [r3, #12]
   308dc:	cmp	r2, #0
   308e0:	beq	309f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd98>
   308e4:	ldr	r2, [r5, #40]	; 0x28
   308e8:	tst	r2, #2048	; 0x800
   308ec:	bne	30a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cdc0>
   308f0:	ldrb	r2, [r7, #13]
   308f4:	orr	r2, r2, #1
   308f8:	strb	r2, [r7, #13]
   308fc:	ldrb	r2, [r3, #13]
   30900:	orr	r2, r2, #1
   30904:	strb	r2, [r3, #13]
   30908:	ldr	r6, [pc, #376]	; 30a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce30>
   3090c:	ldr	r3, [r6, #4]
   30910:	cmp	r3, #0
   30914:	bne	30938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce0>
   30918:	ldr	r0, [r8, #36]	; 0x24
   3091c:	cmp	r0, #0
   30920:	beq	3096c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd14>
   30924:	mov	r2, r3
   30928:	ldr	r1, [r4, #4]
   3092c:	bl	137a8 <bfd_hash_lookup@plt>
   30930:	cmp	r0, #0
   30934:	beq	3096c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd14>
   30938:	ldr	r2, [r6]
   3093c:	str	sl, [sp, #48]	; 0x30
   30940:	str	fp, [sp, #44]	; 0x2c
   30944:	str	r9, [sp, #40]	; 0x28
   30948:	ldr	lr, [r2, #40]	; 0x28
   3094c:	mov	r3, r5
   30950:	mov	r2, r7
   30954:	mov	r1, r4
   30958:	mov	r0, r8
   3095c:	mov	ip, lr
   30960:	add	sp, sp, #4
   30964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30968:	bx	ip
   3096c:	mov	r0, #1
   30970:	add	sp, sp, #4
   30974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30978:	ldr	r6, [pc, #264]	; 30a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce30>
   3097c:	b	30938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce0>
   30980:	tst	sl, #6144	; 0x1800
   30984:	bne	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   30988:	sub	r2, r2, #336	; 0x150
   3098c:	cmp	r9, r2
   30990:	ldrb	r2, [r3, #12]
   30994:	beq	30a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cdec>
   30998:	sub	r1, r2, #3
   3099c:	cmp	r1, #1
   309a0:	bls	30a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce18>
   309a4:	cmp	r2, #5
   309a8:	bne	309d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd7c>
   309ac:	ldr	r2, [r3, #20]
   309b0:	ldr	r2, [r2, #4]
   309b4:	ldr	r2, [r2, #148]	; 0x94
   309b8:	cmp	r2, #0
   309bc:	beq	309d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd7c>
   309c0:	ldr	r1, [r2, #40]	; 0x28
   309c4:	tst	r1, #2097152	; 0x200000
   309c8:	movne	r1, #2
   309cc:	strne	r2, [r3, #20]
   309d0:	strbne	r1, [r3, #12]
   309d4:	ldr	r2, [r9, #20]
   309d8:	tst	r2, #4096	; 0x1000
   309dc:	beq	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   309e0:	ldr	r2, [r5, #40]	; 0x28
   309e4:	tst	r2, #2048	; 0x800
   309e8:	bne	30a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cdcc>
   309ec:	b	308fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cca4>
   309f0:	ldrb	r3, [r7, #12]
   309f4:	cmp	r3, #0
   309f8:	bne	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   309fc:	ldr	r3, [r5, #40]	; 0x28
   30a00:	tst	r3, #2048	; 0x800
   30a04:	beq	30a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cddc>
   30a08:	ldrb	r3, [r7, #13]
   30a0c:	orr	r3, r3, #2
   30a10:	strb	r3, [r7, #13]
   30a14:	b	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   30a18:	ldrb	r2, [r7, #13]
   30a1c:	orr	r2, r2, #2
   30a20:	strb	r2, [r7, #13]
   30a24:	ldrb	r2, [r3, #13]
   30a28:	orr	r2, r2, #2
   30a2c:	strb	r2, [r3, #13]
   30a30:	b	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   30a34:	ldrb	r3, [r7, #13]
   30a38:	orr	r3, r3, #1
   30a3c:	strb	r3, [r7, #13]
   30a40:	b	30908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb0>
   30a44:	sub	r2, r2, #1
   30a48:	cmp	r2, #1
   30a4c:	bhi	309e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd88>
   30a50:	ldr	r2, [r3, #20]
   30a54:	cmp	r2, #0
   30a58:	beq	30a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce10>
   30a5c:	ldr	r2, [r2, #40]	; 0x28
   30a60:	tst	r2, #2097152	; 0x200000
   30a64:	beq	309e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd88>
   30a68:	str	r5, [r3, #20]
   30a6c:	b	309e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd88>
   30a70:	ldr	r2, [r3, #20]
   30a74:	ldr	r2, [r2, #148]	; 0x94
   30a78:	cmp	r2, #0
   30a7c:	bne	309c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd68>
   30a80:	b	309d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd7c>
   30a84:	andeq	r7, ip, r0, asr r9
   30a88:	andeq	r7, ip, r0, lsr #27
   30a8c:	ldr	r3, [pc, #64]	; 30ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce7c>
   30a90:	push	{r4, lr}
   30a94:	mov	r4, r0
   30a98:	ldr	r3, [r3, #8]
   30a9c:	cmp	r3, #0
   30aa0:	beq	30ac4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce6c>
   30aa4:	ldr	r0, [r4, #28]
   30aa8:	cmn	r0, #1
   30aac:	beq	30abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce64>
   30ab0:	bl	13be0 <close@plt>
   30ab4:	mvn	r3, #0
   30ab8:	str	r3, [r4, #28]
   30abc:	mov	r0, #0
   30ac0:	pop	{r4, pc}
   30ac4:	ldr	r1, [pc, #12]	; 30ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce80>
   30ac8:	ldr	r0, [pc, #12]	; 30adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce84>
   30acc:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30ad0:	b	30aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce4c>
   30ad4:	andeq	r7, ip, r0, lsr #27
   30ad8:	andeq	r0, r0, r5, ror #4
   30adc:	strheq	r2, [r5], -r4
   30ae0:	ldr	r3, [pc, #72]	; 30b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ced8>
   30ae4:	push	{r4, r5, r6, lr}
   30ae8:	mov	r5, r0
   30aec:	ldr	r3, [r3, #8]
   30af0:	mov	r4, r1
   30af4:	cmp	r3, #0
   30af8:	beq	30b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cec8>
   30afc:	ldrd	r0, [r5, #40]	; 0x28
   30b00:	ldrd	r2, [r5, #48]	; 0x30
   30b04:	ldr	ip, [r5, #24]
   30b08:	strd	r0, [r4, #8]
   30b0c:	str	ip, [r4]
   30b10:	strd	r2, [r4, #16]
   30b14:	str	r5, [r4, #24]
   30b18:	mov	r0, #0
   30b1c:	pop	{r4, r5, r6, pc}
   30b20:	mov	r1, #516	; 0x204
   30b24:	ldr	r0, [pc, #8]	; 30b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cedc>
   30b28:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30b2c:	b	30afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cea4>
   30b30:	andeq	r7, ip, r0, lsr #27
   30b34:	strheq	r2, [r5], -r4
   30b38:	push	{r4, r5, r6, lr}
   30b3c:	mov	r5, r0
   30b40:	ldr	r4, [pc, #40]	; 30b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf18>
   30b44:	ldr	r3, [r4, #8]
   30b48:	cmp	r3, #0
   30b4c:	beq	30b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf04>
   30b50:	str	r5, [r3, #28]
   30b54:	mov	r0, #0
   30b58:	pop	{r4, r5, r6, pc}
   30b5c:	ldr	r1, [pc, #16]	; 30b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf1c>
   30b60:	ldr	r0, [pc, #16]	; 30b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf20>
   30b64:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30b68:	ldr	r3, [r4, #8]
   30b6c:	b	30b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cef8>
   30b70:	andeq	r7, ip, r0, lsr #27
   30b74:	ldrdeq	r0, [r0], -lr
   30b78:	strheq	r2, [r5], -r4
   30b7c:	push	{r4, r5, r6, lr}
   30b80:	mov	r5, r0
   30b84:	ldr	r4, [pc, #40]	; 30bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf5c>
   30b88:	ldr	r3, [r4, #8]
   30b8c:	cmp	r3, #0
   30b90:	beq	30ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf48>
   30b94:	str	r5, [r3, #24]
   30b98:	mov	r0, #0
   30b9c:	pop	{r4, r5, r6, pc}
   30ba0:	ldr	r1, [pc, #16]	; 30bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf60>
   30ba4:	ldr	r0, [pc, #16]	; 30bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf64>
   30ba8:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30bac:	ldr	r3, [r4, #8]
   30bb0:	b	30b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf3c>
   30bb4:	andeq	r7, ip, r0, lsr #27
   30bb8:	ldrdeq	r0, [r0], -r5
   30bbc:	strheq	r2, [r5], -r4
   30bc0:	push	{r4, r5, r6, lr}
   30bc4:	mov	r5, r0
   30bc8:	ldr	r4, [pc, #40]	; 30bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfa0>
   30bcc:	ldr	r3, [r4, #8]
   30bd0:	cmp	r3, #0
   30bd4:	beq	30be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf8c>
   30bd8:	str	r5, [r3, #20]
   30bdc:	mov	r0, #0
   30be0:	pop	{r4, r5, r6, pc}
   30be4:	mov	r1, #460	; 0x1cc
   30be8:	ldr	r0, [pc, #12]	; 30bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfa4>
   30bec:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30bf0:	ldr	r3, [r4, #8]
   30bf4:	b	30bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf80>
   30bf8:	andeq	r7, ip, r0, lsr #27
   30bfc:	strheq	r2, [r5], -r4
   30c00:	ldr	r3, [pc, #56]	; 30c40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfe8>
   30c04:	push	{r4, lr}
   30c08:	mov	r4, r0
   30c0c:	ldr	r3, [r3, #8]
   30c10:	cmp	r3, #0
   30c14:	beq	30c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfd8>
   30c18:	mov	r0, r4
   30c1c:	bl	135a4 <xstrdup@plt>
   30c20:	mov	r1, #0
   30c24:	bl	2ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0c8>
   30c28:	mov	r0, #0
   30c2c:	pop	{r4, pc}
   30c30:	ldr	r1, [pc, #12]	; 30c44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfec>
   30c34:	ldr	r0, [pc, #12]	; 30c48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cff0>
   30c38:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30c3c:	b	30c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfc0>
   30c40:	andeq	r7, ip, r0, lsr #27
   30c44:	andeq	r0, r0, r2, asr #6
   30c48:	strheq	r2, [r5], -r4
   30c4c:	ldr	r3, [pc, #80]	; 30ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d04c>
   30c50:	push	{r4, lr}
   30c54:	mov	r4, r0
   30c58:	ldr	r3, [r3, #8]
   30c5c:	cmp	r3, #0
   30c60:	beq	30c94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d03c>
   30c64:	mov	r0, r4
   30c68:	bl	135a4 <xstrdup@plt>
   30c6c:	mov	r2, #0
   30c70:	mov	r1, r2
   30c74:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   30c78:	subs	r2, r0, #0
   30c7c:	movne	r0, #0
   30c80:	ldrbne	r3, [r2, #37]	; 0x25
   30c84:	moveq	r0, #3
   30c88:	orrne	r3, r3, #128	; 0x80
   30c8c:	strbne	r3, [r2, #37]	; 0x25
   30c90:	pop	{r4, pc}
   30c94:	mov	r1, #820	; 0x334
   30c98:	ldr	r0, [pc, #8]	; 30ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d050>
   30c9c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30ca0:	b	30c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d00c>
   30ca4:	andeq	r7, ip, r0, lsr #27
   30ca8:	strheq	r2, [r5], -r4
   30cac:	ldr	r3, [pc, #80]	; 30d04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0ac>
   30cb0:	push	{r4, lr}
   30cb4:	mov	r4, r0
   30cb8:	ldr	r3, [r3, #8]
   30cbc:	cmp	r3, #0
   30cc0:	beq	30cf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d09c>
   30cc4:	mov	r0, r4
   30cc8:	bl	135a4 <xstrdup@plt>
   30ccc:	mov	r2, #0
   30cd0:	mov	r1, #5
   30cd4:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   30cd8:	subs	r2, r0, #0
   30cdc:	movne	r0, #0
   30ce0:	ldrbne	r3, [r2, #37]	; 0x25
   30ce4:	moveq	r0, #3
   30ce8:	orrne	r3, r3, #128	; 0x80
   30cec:	strbne	r3, [r2, #37]	; 0x25
   30cf0:	pop	{r4, pc}
   30cf4:	ldr	r1, [pc, #12]	; 30d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0b0>
   30cf8:	ldr	r0, [pc, #12]	; 30d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0b4>
   30cfc:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30d00:	b	30cc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d06c>
   30d04:	andeq	r7, ip, r0, lsr #27
   30d08:	andeq	r0, r0, r5, lsr #6
   30d0c:	strheq	r2, [r5], -r4
   30d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d14:	mov	r4, r0
   30d18:	ldr	sl, [pc, #400]	; 30eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d258>
   30d1c:	sub	sp, sp, #20
   30d20:	mov	fp, r1
   30d24:	ldr	r3, [sl, #8]
   30d28:	ldr	r5, [r0, #48]	; 0x30
   30d2c:	cmp	r3, #0
   30d30:	ldrd	r6, [r0, #40]	; 0x28
   30d34:	ldr	r3, [r0, #52]	; 0x34
   30d38:	beq	30e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1bc>
   30d3c:	mov	r8, r5
   30d40:	mov	r9, r3
   30d44:	mov	r0, #0
   30d48:	cmp	r0, r9
   30d4c:	cmpeq	r5, r8
   30d50:	beq	30d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d114>
   30d54:	mov	r2, #5
   30d58:	ldr	r1, [pc, #340]	; 30eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d25c>
   30d5c:	bl	13460 <dcgettext@plt>
   30d60:	ldr	r2, [r4, #48]	; 0x30
   30d64:	ldr	r1, [r4, #24]
   30d68:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   30d6c:	ldr	r1, [r4, #8]
   30d70:	cmp	r1, #0
   30d74:	beq	30d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d12c>
   30d78:	ldr	r3, [r4, #12]
   30d7c:	cmp	r3, r5
   30d80:	beq	30df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1a0>
   30d84:	str	r5, [r4, #12]
   30d88:	strd	r6, [r4, #16]
   30d8c:	ldrd	r2, [sl, #16]
   30d90:	mov	r1, r7
   30d94:	mov	r0, r6
   30d98:	bl	3f300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b6a8>
   30d9c:	mov	r0, #0
   30da0:	subs	r9, r6, r2
   30da4:	mov	r8, r2
   30da8:	ldr	r2, [r4, #28]
   30dac:	sbc	r7, r7, r3
   30db0:	add	r5, r5, r8
   30db4:	str	r2, [sp]
   30db8:	str	r7, [sp, #12]
   30dbc:	str	r9, [sp, #8]
   30dc0:	mov	r1, r5
   30dc4:	mov	r3, #2
   30dc8:	mov	r2, #1
   30dcc:	bl	133c4 <mmap64@plt>
   30dd0:	cmn	r0, #1
   30dd4:	beq	30e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1d0>
   30dd8:	add	r8, r0, r8
   30ddc:	mov	r3, #1
   30de0:	str	r3, [r4, #32]
   30de4:	mov	r0, #0
   30de8:	str	r8, [r4, #8]
   30dec:	str	r8, [fp]
   30df0:	add	sp, sp, #20
   30df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30df8:	ldrd	r2, [r4, #16]
   30dfc:	cmp	r3, r7
   30e00:	cmpeq	r2, r6
   30e04:	streq	r1, [fp]
   30e08:	moveq	r0, #0
   30e0c:	bne	30d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d12c>
   30e10:	b	30df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d198>
   30e14:	ldr	r1, [pc, #156]	; 30eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d260>
   30e18:	ldr	r0, [pc, #156]	; 30ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d264>
   30e1c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   30e20:	ldrd	r8, [r4, #48]	; 0x30
   30e24:	b	30d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0ec>
   30e28:	mov	r1, #0
   30e2c:	mov	r3, r7
   30e30:	str	r1, [r4, #32]
   30e34:	mov	r2, r9
   30e38:	str	r1, [sp]
   30e3c:	ldr	r0, [r4, #28]
   30e40:	bl	13598 <lseek64@plt>
   30e44:	cmp	r0, #0
   30e48:	sbcs	r3, r1, #0
   30e4c:	blt	30ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d250>
   30e50:	mov	r1, r5
   30e54:	ldr	r0, [r4]
   30e58:	bl	13448 <bfd_alloc@plt>
   30e5c:	subs	r8, r0, #0
   30e60:	beq	30ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d250>
   30e64:	mov	r7, r8
   30e68:	b	30e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d21c>
   30e6c:	cmp	r5, #0
   30e70:	beq	30de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d18c>
   30e74:	mov	r2, r5
   30e78:	mov	r1, r7
   30e7c:	ldr	r0, [r4, #28]
   30e80:	bl	132d4 <read@plt>
   30e84:	cmp	r0, #0
   30e88:	beq	30de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d18c>
   30e8c:	addgt	r7, r7, r0
   30e90:	subgt	r5, r5, r0
   30e94:	bgt	30e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d214>
   30e98:	bl	13874 <__errno_location@plt>
   30e9c:	ldr	r3, [r0]
   30ea0:	cmp	r3, #4
   30ea4:	beq	30e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d214>
   30ea8:	mov	r0, #3
   30eac:	b	30df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d198>
   30eb0:	andeq	r7, ip, r0, lsr #27
   30eb4:	andeq	r2, r5, r8, asr #1
   30eb8:	andeq	r0, r0, sl, lsl r2
   30ebc:	strheq	r2, [r5], -r4
   30ec0:	ldr	r3, [pc, #700]	; 31184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d52c>
   30ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ec8:	mov	r9, r1
   30ecc:	ldr	r3, [r3, #8]
   30ed0:	sub	sp, sp, #20
   30ed4:	cmp	r3, #0
   30ed8:	mov	r5, r2
   30edc:	ldr	r6, [r0]
   30ee0:	beq	31174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d51c>
   30ee4:	lsl	r0, r9, #2
   30ee8:	bl	13574 <xmalloc@plt>
   30eec:	cmp	r9, #0
   30ef0:	str	r0, [sp, #12]
   30ef4:	ble	30fe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d38c>
   30ef8:	ldr	r3, [sp, #12]
   30efc:	ldr	sl, [pc, #644]	; 31188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d530>
   30f00:	sub	r8, r3, #4
   30f04:	mov	r7, #0
   30f08:	str	r9, [sp, #4]
   30f0c:	ldr	r3, [r6, #4]
   30f10:	mov	r0, r6
   30f14:	ldr	r3, [r3, #268]	; 0x10c
   30f18:	blx	r3
   30f1c:	ldr	r2, [r5, #4]
   30f20:	cmp	r2, #0
   30f24:	str	r0, [r8, #4]!
   30f28:	mov	r4, r0
   30f2c:	str	r6, [r0]
   30f30:	beq	310ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d494>
   30f34:	mov	r3, #0
   30f38:	mov	r1, sl
   30f3c:	ldr	r0, [r5]
   30f40:	bl	1352c <concat@plt>
   30f44:	ldr	r3, [r5, #8]
   30f48:	mov	r2, #0
   30f4c:	str	r0, [r4, #4]
   30f50:	str	r2, [r4, #8]
   30f54:	cmp	r3, #4
   30f58:	ldrls	pc, [pc, r3, lsl #2]
   30f5c:	b	31148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4f0>
   30f60:	andeq	r0, r3, r4, ror pc
   30f64:	andeq	r1, r3, r0, asr #1
   30f68:	andeq	r1, r3, ip, lsr #32
   30f6c:	andeq	r1, r3, ip, lsr #1
   30f70:	andeq	r1, r3, r0
   30f74:	ldr	r1, [r5, #24]
   30f78:	mov	r9, #2
   30f7c:	cmp	r1, #0
   30f80:	beq	310d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d478>
   30f84:	mov	r2, #0
   30f88:	ldr	r0, [pc, #508]	; 3118c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d534>
   30f8c:	bl	1352c <concat@plt>
   30f90:	mov	r1, r0
   30f94:	str	r0, [sp, #8]
   30f98:	mov	r0, r6
   30f9c:	bl	13604 <bfd_get_section_by_name@plt>
   30fa0:	ldr	r2, [sp, #8]
   30fa4:	subs	fp, r0, #0
   30fa8:	beq	31130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4d8>
   30fac:	mov	r0, r2
   30fb0:	bl	13364 <free@plt>
   30fb4:	ldr	r2, [r6, #4]
   30fb8:	ldr	r2, [r2, #4]
   30fbc:	cmp	r2, #5
   30fc0:	str	r9, [r4, #12]
   30fc4:	str	fp, [r4, #16]
   30fc8:	beq	3104c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3f4>
   30fcc:	ldr	r3, [sp, #4]
   30fd0:	add	r7, r7, #1
   30fd4:	cmp	r3, r7
   30fd8:	add	r5, r5, #32
   30fdc:	bne	30f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d2b4>
   30fe0:	mov	r9, r3
   30fe4:	mov	r2, r9
   30fe8:	ldr	r1, [sp, #12]
   30fec:	mov	r0, r6
   30ff0:	bl	136f4 <bfd_set_symtab@plt>
   30ff4:	mov	r0, #0
   30ff8:	add	sp, sp, #20
   30ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31000:	ldr	r3, [r6, #4]
   31004:	ldr	r2, [r5, #16]
   31008:	ldr	r3, [r3, #4]
   3100c:	str	r2, [r4, #8]
   31010:	cmp	r3, #5
   31014:	beq	31150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4f8>
   31018:	ldr	r2, [pc, #368]	; 31190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d538>
   3101c:	mov	r3, #2
   31020:	str	r2, [r4, #16]
   31024:	str	r3, [r4, #12]
   31028:	b	30fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d374>
   3102c:	ldr	r2, [r6, #4]
   31030:	ldr	fp, [pc, #348]	; 31194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d53c>
   31034:	mov	r9, #0
   31038:	ldr	r2, [r2, #4]
   3103c:	str	r9, [r4, #12]
   31040:	cmp	r2, #5
   31044:	str	fp, [r4, #16]
   31048:	bne	30fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d374>
   3104c:	ldr	r3, [r4]
   31050:	cmp	r3, #0
   31054:	beq	31068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d410>
   31058:	ldr	r2, [r3, #4]
   3105c:	ldr	r2, [r2, #4]
   31060:	cmp	r2, #5
   31064:	beq	310f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d49c>
   31068:	mov	r2, #5
   3106c:	ldr	r1, [pc, #292]	; 31198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d540>
   31070:	mov	r0, #0
   31074:	bl	13460 <dcgettext@plt>
   31078:	ldr	r1, [r4, #4]
   3107c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31080:	ldr	r2, [r5, #12]
   31084:	mov	r4, #0
   31088:	cmp	r2, #3
   3108c:	bhi	3110c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4b4>
   31090:	ldr	r1, [pc, #260]	; 3119c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d544>
   31094:	ldrb	r3, [r4, #37]	; 0x25
   31098:	ldrb	r2, [r1, r2]
   3109c:	bic	r3, r3, #3
   310a0:	orr	r3, r3, r2
   310a4:	strb	r3, [r4, #37]	; 0x25
   310a8:	b	30fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d374>
   310ac:	ldr	r2, [r6, #4]
   310b0:	ldr	fp, [pc, #220]	; 31194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d53c>
   310b4:	mov	r9, #128	; 0x80
   310b8:	ldr	r2, [r2, #4]
   310bc:	b	30fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d364>
   310c0:	ldr	r1, [r5, #24]
   310c4:	mov	r9, #130	; 0x82
   310c8:	cmp	r1, #0
   310cc:	bne	30f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d32c>
   310d0:	ldr	r1, [pc, #200]	; 311a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d548>
   310d4:	mov	r0, r6
   310d8:	bl	13604 <bfd_get_section_by_name@plt>
   310dc:	mov	fp, r0
   310e0:	ldr	r2, [r6, #4]
   310e4:	ldr	r2, [r2, #4]
   310e8:	b	30fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d364>
   310ec:	ldr	r0, [r5]
   310f0:	b	30f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d2ec>
   310f4:	ldr	r3, [r3, #160]	; 0xa0
   310f8:	cmp	r3, #0
   310fc:	beq	31068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d410>
   31100:	ldr	r2, [r5, #12]
   31104:	cmp	r2, #3
   31108:	bls	31090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d438>
   3110c:	mov	r2, #5
   31110:	ldr	r1, [pc, #140]	; 311a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d54c>
   31114:	mov	r0, #0
   31118:	bl	13460 <dcgettext@plt>
   3111c:	ldr	r1, [r5, #12]
   31120:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31124:	mov	r0, #3
   31128:	add	sp, sp, #20
   3112c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31130:	mov	r1, r2
   31134:	mov	r0, r6
   31138:	ldr	r2, [pc, #104]	; 311a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d550>
   3113c:	bl	1337c <bfd_make_section_anyway_with_flags@plt>
   31140:	subs	fp, r0, #0
   31144:	bne	310e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d488>
   31148:	mov	r0, #3
   3114c:	b	30ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3a0>
   31150:	mvn	r3, #13
   31154:	ldr	r1, [pc, #52]	; 31190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d538>
   31158:	mov	r2, #1
   3115c:	str	r3, [r4, #40]	; 0x28
   31160:	mov	r3, #2
   31164:	str	r1, [r4, #16]
   31168:	str	r2, [r4, #24]
   3116c:	str	r3, [r4, #12]
   31170:	b	3104c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3f4>
   31174:	mov	r1, #492	; 0x1ec
   31178:	ldr	r0, [pc, #44]	; 311ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d554>
   3117c:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   31180:	b	30ee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d28c>
   31184:	andeq	r7, ip, r0, lsr #27
   31188:	strdeq	r2, [r5], -ip
   3118c:	andeq	r2, r5, r0, lsl #2
   31190:	andeq	r7, ip, r8, asr r7
   31194:	andeq	r7, ip, r0, lsl #16
   31198:	andeq	r2, r5, r4, lsl r1
   3119c:	andeq	r2, r5, ip, lsr #32
   311a0:	muleq	r4, ip, fp
   311a4:	andeq	r2, r5, ip, lsr r1
   311a8:	eoreq	r8, r2, fp, lsl r1
   311ac:	strheq	r2, [r5], -r4
   311b0:	push	{r1, r2, r3}
   311b4:	push	{r4, r5, lr}
   311b8:	sub	sp, sp, #16
   311bc:	add	r2, sp, #32
   311c0:	subs	r4, r0, #0
   311c4:	str	r2, [sp, #12]
   311c8:	beq	31260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d608>
   311cc:	cmp	r4, #1
   311d0:	beq	31284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d62c>
   311d4:	ldr	ip, [pc, #240]	; 312cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d674>
   311d8:	ldr	r3, [pc, #240]	; 312d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d678>
   311dc:	cmp	r4, #3
   311e0:	mov	r2, #5
   311e4:	ldr	r1, [pc, #232]	; 312d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d67c>
   311e8:	mov	r0, #0
   311ec:	moveq	r4, r3
   311f0:	movne	r4, ip
   311f4:	bl	13460 <dcgettext@plt>
   311f8:	mov	r3, #0
   311fc:	ldr	r2, [sp, #28]
   31200:	str	r3, [sp]
   31204:	ldr	r3, [pc, #204]	; 312d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d680>
   31208:	ldr	r5, [pc, #204]	; 312dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d684>
   3120c:	mov	r1, r0
   31210:	mov	r0, r4
   31214:	bl	1352c <concat@plt>
   31218:	ldr	r3, [pc, #192]	; 312e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d688>
   3121c:	mov	r4, r0
   31220:	ldr	r0, [r3]
   31224:	bl	132e0 <fflush@plt>
   31228:	mov	r1, r4
   3122c:	ldr	r0, [r5]
   31230:	mov	r3, #1
   31234:	ldr	r2, [sp, #12]
   31238:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   3123c:	ldr	r0, [r5]
   31240:	bl	132e0 <fflush@plt>
   31244:	mov	r0, r4
   31248:	bl	13364 <free@plt>
   3124c:	mov	r0, #0
   31250:	add	sp, sp, #16
   31254:	pop	{r4, r5, lr}
   31258:	add	sp, sp, #12
   3125c:	bx	lr
   31260:	ldr	r5, [pc, #120]	; 312e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d688>
   31264:	ldr	r1, [sp, #28]
   31268:	mov	r3, r4
   3126c:	ldr	r0, [r5]
   31270:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   31274:	ldr	r1, [r5]
   31278:	mov	r0, #10
   3127c:	bl	13a18 <putc@plt>
   31280:	b	3124c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5f4>
   31284:	mov	r2, #5
   31288:	ldr	r1, [pc, #84]	; 312e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d68c>
   3128c:	mov	r0, #0
   31290:	bl	13460 <dcgettext@plt>
   31294:	ldr	r1, [sp, #28]
   31298:	mov	r3, #0
   3129c:	ldr	r2, [pc, #52]	; 312d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d680>
   312a0:	bl	1352c <concat@plt>
   312a4:	ldr	r2, [pc, #52]	; 312e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d688>
   312a8:	mov	r3, r4
   312ac:	mov	r5, r0
   312b0:	mov	r1, r0
   312b4:	ldr	r0, [r2]
   312b8:	ldr	r2, [sp, #12]
   312bc:	bl	2da78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e20>
   312c0:	mov	r0, r5
   312c4:	bl	13364 <free@plt>
   312c8:	b	3124c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5f4>
   312cc:	andeq	r1, r5, r0, asr r1
   312d0:	andeq	pc, r4, r8, ror #23
   312d4:	andeq	r2, r5, r8, ror r1
   312d8:	andeq	r0, r5, r0, lsr #12
   312dc:	andeq	r7, ip, r8, asr #14
   312e0:	strdeq	r7, [ip], -ip
   312e4:	andeq	r2, r5, r8, ror #2
   312e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   312ec:	mov	r4, r2
   312f0:	ldr	r2, [pc, #736]	; 315d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d980>
   312f4:	sub	sp, sp, #20
   312f8:	mov	r7, r1
   312fc:	ldr	r2, [r2, #8]
   31300:	str	r3, [sp, #12]
   31304:	cmp	r2, #0
   31308:	ldr	sl, [r0]
   3130c:	beq	315b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d960>
   31310:	cmp	r7, #0
   31314:	ble	31494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d83c>
   31318:	ldr	r6, [pc, #700]	; 315dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d984>
   3131c:	ldr	r9, [pc, #700]	; 315e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d988>
   31320:	mov	r5, #0
   31324:	mov	r8, #1
   31328:	b	313e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d790>
   3132c:	str	r8, [sp]
   31330:	mov	r2, r3
   31334:	ldr	r0, [r6, #28]
   31338:	bl	13640 <bfd_link_hash_lookup@plt>
   3133c:	mov	fp, r0
   31340:	cmp	fp, #0
   31344:	beq	31420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d7c8>
   31348:	ldrb	r3, [fp, #12]
   3134c:	sub	r2, r3, #1
   31350:	cmp	r2, #1
   31354:	bls	31444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d7ec>
   31358:	sub	r2, r3, #3
   3135c:	cmp	r2, #2
   31360:	bhi	31558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d900>
   31364:	ldr	r2, [fp, #20]
   31368:	cmp	r3, #5
   3136c:	ldr	r3, [r4, #8]
   31370:	ldreq	r2, [r2, #4]
   31374:	sub	r3, r3, #2
   31378:	cmp	r3, #2
   3137c:	ldr	r2, [r2, #148]	; 0x94
   31380:	ldr	r3, [r6, #48]	; 0x30
   31384:	bhi	3152c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8d4>
   31388:	cmp	r2, r3
   3138c:	beq	31584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d92c>
   31390:	cmp	sl, r2
   31394:	beq	314a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d848>
   31398:	cmp	r2, #0
   3139c:	beq	31584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d92c>
   313a0:	ldr	r3, [r2, #40]	; 0x28
   313a4:	lsr	r3, r3, #5
   313a8:	tst	r3, #65536	; 0x10000
   313ac:	bic	r3, r3, #-16777216	; 0xff000000
   313b0:	bic	r3, r3, #15728640	; 0xf00000
   313b4:	movne	fp, #6
   313b8:	bne	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   313bc:	tst	r3, #64	; 0x40
   313c0:	moveq	fp, #7
   313c4:	movne	fp, #8
   313c8:	str	fp, [r4, #28]
   313cc:	ldr	r3, [r9]
   313d0:	cmp	r3, #0
   313d4:	bne	31458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d800>
   313d8:	add	r5, r5, #1
   313dc:	cmp	r7, r5
   313e0:	add	r4, r4, #32
   313e4:	beq	31494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d83c>
   313e8:	ldr	r3, [r4, #8]
   313ec:	ldr	r1, [r4]
   313f0:	cmp	r3, #2
   313f4:	mov	r3, #0
   313f8:	bne	3132c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d6d4>
   313fc:	mov	r2, r1
   31400:	str	r8, [sp, #4]
   31404:	str	r3, [sp]
   31408:	ldr	r1, [pc, #460]	; 315dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d984>
   3140c:	ldr	r0, [r6, #48]	; 0x30
   31410:	bl	132f8 <bfd_wrapped_link_hash_lookup@plt>
   31414:	mov	fp, r0
   31418:	cmp	fp, #0
   3141c:	bne	31348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d6f0>
   31420:	ldr	r3, [r4, #8]
   31424:	cmp	r3, #4
   31428:	ldrls	pc, [pc, r3, lsl #2]
   3142c:	b	315c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d970>
   31430:	andeq	r1, r3, r4, lsr #10
   31434:	andeq	r1, r3, r4, lsr #10
   31438:	andeq	r1, r3, r4, asr #8
   3143c:	andeq	r1, r3, r4, asr #8
   31440:	andeq	r1, r3, r4, lsr #10
   31444:	mov	fp, #1
   31448:	str	fp, [r4, #28]
   3144c:	ldr	r3, [r9]
   31450:	cmp	r3, #0
   31454:	beq	313d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d780>
   31458:	mov	r2, #5
   3145c:	ldr	r1, [pc, #384]	; 315e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d98c>
   31460:	mov	r0, #0
   31464:	bl	13460 <dcgettext@plt>
   31468:	ldr	r3, [r4, #8]
   3146c:	str	fp, [sp, #4]
   31470:	ldr	r2, [r4, #12]
   31474:	mov	r1, sl
   31478:	str	r2, [sp]
   3147c:	add	r5, r5, #1
   31480:	ldr	r2, [r4]
   31484:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31488:	cmp	r7, r5
   3148c:	add	r4, r4, #32
   31490:	bne	313e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d790>
   31494:	mov	r0, #0
   31498:	add	sp, sp, #20
   3149c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   314a0:	ldrb	r3, [fp, #13]
   314a4:	tst	r3, #1
   314a8:	movne	fp, #2
   314ac:	bne	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   314b0:	ldrb	r2, [r6]
   314b4:	and	r1, r2, #3
   314b8:	cmp	r1, #2
   314bc:	beq	31594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d93c>
   314c0:	and	r3, r3, #2
   314c4:	and	r2, r2, #16
   314c8:	orrs	r3, r3, r2
   314cc:	movne	r3, #1
   314d0:	moveq	r3, #0
   314d4:	cmp	r1, #3
   314d8:	orreq	r3, r3, #1
   314dc:	cmp	r3, #0
   314e0:	beq	31524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8cc>
   314e4:	ldr	r1, [fp, #4]
   314e8:	ldr	r0, [r6, #132]	; 0x84
   314ec:	bl	13808 <bfd_hide_sym_by_version@plt>
   314f0:	cmp	r0, #0
   314f4:	bne	31524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8cc>
   314f8:	ldr	r3, [r6, #48]	; 0x30
   314fc:	ldr	r3, [r3, #4]
   31500:	ldr	r3, [r3, #4]
   31504:	cmp	r3, #5
   31508:	beq	3159c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d944>
   3150c:	ldr	r3, [r4, #12]
   31510:	cmp	r3, #1
   31514:	movhi	r3, #0
   31518:	movls	r3, #1
   3151c:	cmp	r3, #0
   31520:	bne	31594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d93c>
   31524:	mov	fp, #3
   31528:	b	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   3152c:	cmp	r2, r3
   31530:	beq	3158c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d934>
   31534:	cmp	sl, r2
   31538:	beq	314a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d848>
   3153c:	cmp	r2, #0
   31540:	beq	3158c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d934>
   31544:	ldr	r3, [r2, #40]	; 0x28
   31548:	tst	r3, #2097152	; 0x200000
   3154c:	moveq	fp, #4
   31550:	movne	fp, #5
   31554:	b	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   31558:	mov	r2, #5
   3155c:	ldr	r1, [pc, #132]	; 315e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d990>
   31560:	mov	r0, #0
   31564:	bl	13460 <dcgettext@plt>
   31568:	ldr	r3, [pc, #104]	; 315d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d980>
   3156c:	ldrb	r2, [fp, #12]
   31570:	ldr	r3, [r3, #8]
   31574:	ldr	r1, [r3, #4]
   31578:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3157c:	ldrb	r3, [fp, #12]
   31580:	b	31364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d70c>
   31584:	mov	fp, #7
   31588:	b	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   3158c:	mov	fp, #4
   31590:	b	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   31594:	ldr	fp, [sp, #12]
   31598:	b	313c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d770>
   3159c:	ldrb	r3, [fp, #49]	; 0x31
   315a0:	ands	r2, r3, #3
   315a4:	moveq	r3, #1
   315a8:	movne	r3, #0
   315ac:	cmp	r2, #3
   315b0:	orreq	r3, r3, #1
   315b4:	b	3151c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8c4>
   315b8:	ldr	r1, [pc, #44]	; 315ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d994>
   315bc:	ldr	r0, [pc, #44]	; 315f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d998>
   315c0:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   315c4:	b	31310 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d6b8>
   315c8:	ldr	r2, [pc, #36]	; 315f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d99c>
   315cc:	ldr	r1, [pc, #36]	; 315f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9a0>
   315d0:	ldr	r0, [pc, #24]	; 315f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d998>
   315d4:	bl	2d9fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19da4>
   315d8:	andeq	r7, ip, r0, lsr #27
   315dc:	andeq	r8, ip, ip, lsl #1
   315e0:	andeq	r8, ip, ip, asr r2
   315e4:			; <UNDEFINED> instruction: 0x000521bc
   315e8:	andeq	r2, r5, r4, lsl #3
   315ec:	muleq	r0, pc, r2	; <UNPREDICTABLE>
   315f0:	strheq	r2, [r5], -r4
   315f4:	andeq	r2, r5, r0, lsr r0
   315f8:			; <UNDEFINED> instruction: 0x000002b5
   315fc:	mov	r3, #9
   31600:	b	312e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d690>
   31604:	mov	r3, #2
   31608:	b	312e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d690>
   3160c:	ldr	r3, [r0, #40]	; 0x28
   31610:	lsr	r3, r3, #5
   31614:	ands	r3, r3, #65536	; 0x10000
   31618:	bne	31864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc0c>
   3161c:	ldrb	r2, [r0, #44]	; 0x2c
   31620:	push	{r4, r5, r6, r7, r8, r9, lr}
   31624:	sub	sp, sp, #44	; 0x2c
   31628:	ands	r5, r2, #48	; 0x30
   3162c:	beq	31648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9f0>
   31630:	cmp	r5, #16
   31634:	movne	r0, r3
   31638:	ldreq	r3, [r0, #48]	; 0x30
   3163c:	ldreq	r0, [r3, #4]
   31640:	add	sp, sp, #44	; 0x2c
   31644:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31648:	ldr	r3, [pc, #732]	; 3192c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcd4>
   3164c:	ldr	r7, [r0]
   31650:	mov	r2, #1
   31654:	mov	r4, r0
   31658:	ldr	r0, [r0, #4]
   3165c:	str	r2, [r3]
   31660:	bl	139e8 <bfd_plugin_target_p@plt>
   31664:	ldr	r1, [pc, #708]	; 31930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcd8>
   31668:	mov	r2, r5
   3166c:	mov	r6, r0
   31670:	mov	r0, r7
   31674:	bl	1352c <concat@plt>
   31678:	cmp	r6, #0
   3167c:	moveq	r1, r4
   31680:	ldrne	r3, [pc, #684]	; 31934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcdc>
   31684:	ldrne	r1, [r3, #48]	; 0x30
   31688:	bl	13628 <bfd_create@plt>
   3168c:	subs	r8, r0, #0
   31690:	beq	31848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbf0>
   31694:	ldr	r3, [r8, #40]	; 0x28
   31698:	orr	r3, r3, #2228224	; 0x220000
   3169c:	str	r3, [r8, #40]	; 0x28
   316a0:	bl	1328c <bfd_make_writable@plt>
   316a4:	cmp	r0, #0
   316a8:	beq	31848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbf0>
   316ac:	cmp	r6, #0
   316b0:	bne	316f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1daa0>
   316b4:	mov	r0, r4
   316b8:	bl	136a0 <bfd_get_arch_info@plt>
   316bc:	mov	r1, r0
   316c0:	mov	r0, r8
   316c4:	bl	13c1c <bfd_set_arch_info@plt>
   316c8:	mov	r0, r4
   316cc:	bl	135b0 <bfd_get_gp_size@plt>
   316d0:	mov	r1, r0
   316d4:	mov	r0, r8
   316d8:	bl	13934 <bfd_set_gp_size@plt>
   316dc:	ldr	r3, [r8, #4]
   316e0:	mov	r1, r8
   316e4:	mov	r0, r4
   316e8:	ldr	r3, [r3, #168]	; 0xa8
   316ec:	blx	r3
   316f0:	cmp	r0, #0
   316f4:	beq	31848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbf0>
   316f8:	ldr	r2, [pc, #568]	; 31938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dce0>
   316fc:	ldr	r1, [pc, #568]	; 3193c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dce4>
   31700:	mov	r0, r8
   31704:	bl	1337c <bfd_make_section_anyway_with_flags@plt>
   31708:	cmp	r0, #0
   3170c:	beq	31848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbf0>
   31710:	mov	r1, #56	; 0x38
   31714:	mov	r0, r8
   31718:	bl	13448 <bfd_alloc@plt>
   3171c:	subs	r5, r0, #0
   31720:	beq	318b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc60>
   31724:	add	r1, sp, #8
   31728:	mov	r0, r4
   3172c:	bl	13c34 <bfd_plugin_open_input@plt>
   31730:	cmp	r0, #0
   31734:	beq	31640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9e8>
   31738:	ldr	r3, [sp, #8]
   3173c:	ldr	r1, [r4]
   31740:	cmp	r3, r1
   31744:	beq	318dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc84>
   31748:	ldrd	r6, [sp, #16]
   3174c:	ldrd	r2, [sp, #24]
   31750:	mov	r9, #0
   31754:	strd	r6, [r5, #40]	; 0x28
   31758:	strd	r2, [r5, #48]	; 0x30
   3175c:	mov	r6, #0
   31760:	mov	r7, #0
   31764:	ldr	r3, [sp, #12]
   31768:	str	r5, [sp, #32]
   3176c:	str	r3, [r5, #28]
   31770:	strd	r6, [r5, #16]
   31774:	str	r8, [r5]
   31778:	str	r9, [r5, #8]
   3177c:	str	r9, [r5, #12]
   31780:	str	r9, [r5, #32]
   31784:	mov	r0, r8
   31788:	bl	3080c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbb4>
   3178c:	ldr	r7, [pc, #428]	; 31940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dce8>
   31790:	str	r9, [sp, #4]
   31794:	ldr	r6, [r7, #24]
   31798:	cmp	r6, r9
   3179c:	str	r0, [r5, #24]
   317a0:	bne	317b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db5c>
   317a4:	b	317ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db94>
   317a8:	ldr	r3, [sp, #4]
   317ac:	cmp	r3, #0
   317b0:	bne	317ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db94>
   317b4:	ldr	r3, [r6, #20]
   317b8:	add	r1, sp, #4
   317bc:	cmp	r3, #0
   317c0:	add	r0, sp, #8
   317c4:	beq	317e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db88>
   317c8:	str	r6, [r7, #8]
   317cc:	blx	r3
   317d0:	str	r9, [r7, #8]
   317d4:	cmp	r0, #0
   317d8:	ldrne	r3, [r6, #4]
   317dc:	strne	r3, [r7, #28]
   317e0:	ldr	r6, [r6]
   317e4:	cmp	r6, #0
   317e8:	bne	317a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db50>
   317ec:	ldr	r6, [r7, #28]
   317f0:	cmp	r6, #0
   317f4:	bne	3189c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc44>
   317f8:	ldr	r3, [r5, #28]
   317fc:	cmn	r3, #1
   31800:	beq	31814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbbc>
   31804:	ldr	r0, [r4, #4]
   31808:	bl	139e8 <bfd_plugin_target_p@plt>
   3180c:	cmp	r0, #0
   31810:	beq	318f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc98>
   31814:	ldr	r3, [sp, #4]
   31818:	cmp	r3, #0
   3181c:	beq	3186c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc14>
   31820:	ldrb	r3, [r4, #44]	; 0x2c
   31824:	str	r8, [r4, #48]	; 0x30
   31828:	mov	r0, r8
   3182c:	bic	r3, r3, #32
   31830:	orr	r3, r3, #16
   31834:	strb	r3, [r4, #44]	; 0x2c
   31838:	bl	132ec <bfd_make_readable@plt>
   3183c:	ldr	r0, [r8, #4]
   31840:	add	sp, sp, #44	; 0x2c
   31844:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31848:	mov	r2, #5
   3184c:	ldr	r1, [pc, #240]	; 31944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcec>
   31850:	mov	r0, #0
   31854:	bl	13460 <dcgettext@plt>
   31858:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3185c:	mov	r8, #0
   31860:	b	31710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dab8>
   31864:	mov	r0, #0
   31868:	bx	lr
   3186c:	ldr	r3, [r5, #32]
   31870:	cmp	r3, #0
   31874:	bne	31904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcac>
   31878:	ldrb	r3, [r4, #44]	; 0x2c
   3187c:	mov	r0, r8
   31880:	bic	r3, r3, #16
   31884:	orr	r3, r3, #32
   31888:	strb	r3, [r4, #44]	; 0x2c
   3188c:	bl	137e4 <bfd_close_all_done@plt>
   31890:	mov	r0, #0
   31894:	add	sp, sp, #44	; 0x2c
   31898:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3189c:	mov	r2, #5
   318a0:	ldr	r1, [pc, #160]	; 31948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcf0>
   318a4:	mov	r0, #0
   318a8:	bl	13460 <dcgettext@plt>
   318ac:	mov	r1, r6
   318b0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   318b4:	b	317f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dba0>
   318b8:	mov	r2, #5
   318bc:	ldr	r1, [pc, #136]	; 3194c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcf4>
   318c0:	bl	13460 <dcgettext@plt>
   318c4:	mov	r6, r0
   318c8:	bl	13550 <bfd_get_error@plt>
   318cc:	mov	r1, r0
   318d0:	mov	r0, r6
   318d4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   318d8:	b	31724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dacc>
   318dc:	mov	r0, r8
   318e0:	bl	3080c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbb4>
   318e4:	ldr	r1, [r4]
   318e8:	str	r0, [sp, #8]
   318ec:	b	31748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1daf0>
   318f0:	ldr	r0, [r5, #28]
   318f4:	bl	13be0 <close@plt>
   318f8:	mvn	r3, #0
   318fc:	str	r3, [r5, #28]
   31900:	b	31814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbbc>
   31904:	ldr	ip, [r5, #12]
   31908:	ldrd	r2, [r7, #16]
   3190c:	ldrd	r0, [r5, #16]
   31910:	ldr	r6, [r5, #8]
   31914:	mov	r5, ip
   31918:	bl	3f300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b6a8>
   3191c:	add	r1, r5, r2
   31920:	sub	r0, r6, r2
   31924:	bl	13964 <munmap@plt>
   31928:	b	31878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc20>
   3192c:	strdeq	r7, [ip], -r8
   31930:	andeq	r2, r5, r4, lsl #4
   31934:	andeq	r8, ip, ip, lsl #1
   31938:	eoreq	r8, r0, fp, lsl r1
   3193c:	muleq	r4, ip, fp
   31940:	andeq	r7, ip, r0, lsr #27
   31944:	andeq	r2, r5, ip, lsl r2
   31948:	andeq	r2, r5, r0, lsl #5
   3194c:	andeq	r2, r5, r8, asr #4
   31950:	ldr	r3, [pc, #20]	; 3196c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd14>
   31954:	ldr	r0, [r3, #28]
   31958:	cmp	r0, #0
   3195c:	bxne	lr
   31960:	mov	r2, #5
   31964:	ldr	r1, [pc, #4]	; 31970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd18>
   31968:	b	13460 <dcgettext@plt>
   3196c:	andeq	r7, ip, r0, lsr #27
   31970:			; <UNDEFINED> instruction: 0x000522b0
   31974:	push	{r4, r5, r6, r7, r8, lr}
   31978:	mov	r6, r0
   3197c:	ldr	r7, [pc, #212]	; 31a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de00>
   31980:	mov	r0, #36	; 0x24
   31984:	ldr	r4, [r7, #24]
   31988:	bl	13574 <xmalloc@plt>
   3198c:	mov	r2, #36	; 0x24
   31990:	mov	r1, #0
   31994:	mov	r5, r0
   31998:	bl	138a4 <memset@plt>
   3199c:	mov	r0, r6
   319a0:	mov	r1, #2
   319a4:	str	r6, [r5, #4]
   319a8:	bl	135e0 <dlopen@plt>
   319ac:	subs	r3, r0, #0
   319b0:	str	r0, [r5, #8]
   319b4:	beq	31a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ddd8>
   319b8:	cmp	r4, #0
   319bc:	beq	319ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd94>
   319c0:	ldr	r2, [r5, #8]
   319c4:	ldr	r3, [r4, #8]
   319c8:	cmp	r2, r3
   319cc:	bne	319e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd88>
   319d0:	b	31a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ddb4>
   319d4:	ldr	r3, [r4, #8]
   319d8:	cmp	r3, r2
   319dc:	beq	31a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ddb4>
   319e0:	ldr	r4, [r4]
   319e4:	cmp	r4, #0
   319e8:	bne	319d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd7c>
   319ec:	ldr	r3, [pc, #104]	; 31a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de04>
   319f0:	add	r1, r5, #12
   319f4:	str	r5, [r7, #32]
   319f8:	ldr	r2, [r3]
   319fc:	str	r1, [r7, #36]	; 0x24
   31a00:	str	r5, [r3]
   31a04:	str	r5, [r2]
   31a08:	pop	{r4, r5, r6, r7, r8, pc}
   31a0c:	mov	r2, #5
   31a10:	ldr	r1, [pc, #72]	; 31a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de08>
   31a14:	mov	r0, #0
   31a18:	bl	13460 <dcgettext@plt>
   31a1c:	mov	r1, r6
   31a20:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31a24:	mov	r0, r5
   31a28:	pop	{r4, r5, r6, r7, r8, lr}
   31a2c:	b	13364 <free@plt>
   31a30:	mov	r2, #5
   31a34:	ldr	r1, [pc, #40]	; 31a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de0c>
   31a38:	bl	13460 <dcgettext@plt>
   31a3c:	mov	r8, r0
   31a40:	bl	134f0 <dlerror@plt>
   31a44:	mov	r1, r6
   31a48:	mov	r2, r0
   31a4c:	mov	r0, r8
   31a50:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31a54:	b	319b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd60>
   31a58:	andeq	r7, ip, r0, lsr #27
   31a5c:	andeq	r7, ip, r0, lsr #8
   31a60:	andeq	r2, r5, r0, ror #5
   31a64:			; <UNDEFINED> instruction: 0x000522bc
   31a68:	push	{r4, r5, r6, lr}
   31a6c:	mov	r5, r0
   31a70:	ldr	r4, [pc, #136]	; 31b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dea8>
   31a74:	ldr	r0, [r4, #32]
   31a78:	cmp	r0, #0
   31a7c:	beq	31ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de90>
   31a80:	ldrb	r3, [r5]
   31a84:	cmp	r3, #45	; 0x2d
   31a88:	bne	31ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de58>
   31a8c:	ldrb	r3, [r5, #1]
   31a90:	mov	r2, #13
   31a94:	ldr	r1, [pc, #104]	; 31b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1deac>
   31a98:	cmp	r3, #45	; 0x2d
   31a9c:	addne	r0, r5, #1
   31aa0:	addeq	r0, r5, #2
   31aa4:	bl	13bb0 <strncmp@plt>
   31aa8:	subs	r3, r0, #0
   31aac:	beq	31ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de88>
   31ab0:	mov	r0, #8
   31ab4:	bl	13574 <xmalloc@plt>
   31ab8:	ldr	r1, [r4, #32]
   31abc:	ldr	ip, [r4, #36]	; 0x24
   31ac0:	mov	r3, #0
   31ac4:	ldr	r2, [r1, #16]
   31ac8:	add	r2, r2, #1
   31acc:	str	r5, [r0, #4]
   31ad0:	str	r3, [r0]
   31ad4:	str	r0, [r4, #36]	; 0x24
   31ad8:	str	r0, [ip]
   31adc:	str	r2, [r1, #16]
   31ae0:	mov	r0, r3
   31ae4:	pop	{r4, r5, r6, pc}
   31ae8:	mov	r2, #5
   31aec:	ldr	r1, [pc, #20]	; 31b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1deb0>
   31af0:	bl	13460 <dcgettext@plt>
   31af4:	mvn	r3, #0
   31af8:	str	r0, [r4, #28]
   31afc:	b	31ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de88>
   31b00:	andeq	r7, ip, r0, lsr #27
   31b04:	strdeq	r2, [r5], -ip
   31b08:			; <UNDEFINED> instruction: 0x000522b0
   31b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31b10:	sub	sp, sp, #12
   31b14:	ldr	r6, [pc, #860]	; 31e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e220>
   31b18:	ldr	r3, [r6, #24]
   31b1c:	cmp	r3, #0
   31b20:	beq	31d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e0e0>
   31b24:	mov	r2, #0
   31b28:	ldr	r1, [r3, #16]
   31b2c:	ldr	r3, [r3]
   31b30:	cmp	r2, r1
   31b34:	movcc	r2, r1
   31b38:	cmp	r3, #0
   31b3c:	bne	31b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ded0>
   31b40:	add	r2, r2, #18
   31b44:	ldr	r5, [pc, #816]	; 31e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e224>
   31b48:	lsl	r0, r2, #3
   31b4c:	bl	13574 <xmalloc@plt>
   31b50:	ldr	r9, [pc, #808]	; 31e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e228>
   31b54:	ldr	r2, [pc, #808]	; 31e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e22c>
   31b58:	ldr	r3, [pc, #808]	; 31e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e230>
   31b5c:	ldr	fp, [pc, #808]	; 31e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e234>
   31b60:	ldr	sl, [pc, #808]	; 31e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e238>
   31b64:	mov	r7, r0
   31b68:	add	r4, r0, #4
   31b6c:	add	r8, r0, #140	; 0x8c
   31b70:	mov	r0, #11
   31b74:	sub	r1, r0, #1
   31b78:	str	r0, [r4, #-4]
   31b7c:	cmp	r1, #24
   31b80:	ldrls	pc, [pc, r1, lsl #2]
   31b84:	b	31ddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e184>
   31b88:	andeq	r1, r3, r8, lsl #24
   31b8c:	ldrdeq	r1, [r3], -ip
   31b90:	andeq	r1, r3, ip, ror #23
   31b94:	ldrdeq	r1, [r3], -ip
   31b98:	andeq	r1, r3, r4, lsl #27
   31b9c:	andeq	r1, r3, r8, ror sp
   31ba0:	andeq	r1, r3, ip, ror #26
   31ba4:	andeq	r1, r3, r0, ror #26
   31ba8:	andeq	r1, r3, r4, asr sp
   31bac:	andeq	r1, r3, ip, asr #26
   31bb0:	andeq	r1, r3, r0, asr #26
   31bb4:			; <UNDEFINED> instruction: 0x00031db0
   31bb8:	andeq	r1, r3, r4, lsr #27
   31bbc:	muleq	r3, ip, sp
   31bc0:	muleq	r3, r0, sp
   31bc4:	andeq	r1, r3, r8, asr #27
   31bc8:			; <UNDEFINED> instruction: 0x00031dbc
   31bcc:	ldrdeq	r1, [r3], -r0
   31bd0:	ldrdeq	r1, [r3], -ip
   31bd4:	ldrdeq	r1, [r3], -ip
   31bd8:	ldrdeq	r1, [r3], -ip
   31bdc:	ldrdeq	r1, [r3], -ip
   31be0:	ldrdeq	r1, [r3], -ip
   31be4:	ldrdeq	r1, [r3], -ip
   31be8:	andeq	r1, r3, r4, lsr #24
   31bec:	ldrb	r1, [r9]
   31bf0:	and	r1, r1, #3
   31bf4:	cmp	r1, #2
   31bf8:	moveq	r1, #0
   31bfc:	beq	31c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb4>
   31c00:	cmp	r1, #0
   31c04:	bne	31e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e210>
   31c08:	mov	r1, #1
   31c0c:	str	r1, [r4]
   31c10:	add	r4, r4, #8
   31c14:	cmp	r8, r4
   31c18:	beq	31c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfe0>
   31c1c:	ldr	r0, [r5, #4]!
   31c20:	b	31b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df1c>
   31c24:	ldr	r1, [pc, #616]	; 31e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e23c>
   31c28:	add	r4, r4, #8
   31c2c:	str	r1, [r4, #-8]
   31c30:	cmp	r8, r4
   31c34:	bne	31c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfc4>
   31c38:	ldr	r4, [r6, #24]
   31c3c:	cmp	r4, #0
   31c40:	beq	31ccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e074>
   31c44:	ldr	r8, [pc, #588]	; 31e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e240>
   31c48:	ldr	sl, [pc, #588]	; 31e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e244>
   31c4c:	add	r3, r7, #136	; 0x88
   31c50:	str	r3, [sp, #4]
   31c54:	mov	r1, r8
   31c58:	ldr	r0, [r4, #8]
   31c5c:	bl	13c10 <dlsym@plt>
   31c60:	subs	r5, r0, #0
   31c64:	beq	31e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e1bc>
   31c68:	ldr	r2, [r4, #12]
   31c6c:	cmp	r2, #0
   31c70:	beq	31e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e208>
   31c74:	add	r3, r7, #144	; 0x90
   31c78:	mov	r0, #4
   31c7c:	ldr	r1, [r2, #4]
   31c80:	ldr	r2, [r2]
   31c84:	str	r1, [r3, #-4]
   31c88:	cmp	r2, #0
   31c8c:	str	r0, [r3, #-8]
   31c90:	mov	r1, r3
   31c94:	add	r3, r3, #8
   31c98:	bne	31c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e024>
   31c9c:	mov	fp, #0
   31ca0:	str	r4, [r6, #8]
   31ca4:	str	fp, [r1]
   31ca8:	str	fp, [r1, #4]
   31cac:	mov	r0, r7
   31cb0:	blx	r5
   31cb4:	str	fp, [r6, #8]
   31cb8:	subs	r5, r0, #0
   31cbc:	bne	31df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e19c>
   31cc0:	ldr	r4, [r4]
   31cc4:	cmp	r4, #0
   31cc8:	bne	31c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dffc>
   31ccc:	ldr	r5, [r9, #24]
   31cd0:	ldr	ip, [pc, #456]	; 31ea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e248>
   31cd4:	mov	lr, r5
   31cd8:	ldrb	r4, [r9, #1]
   31cdc:	ldm	lr!, {r0, r1, r2, r3}
   31ce0:	str	r5, [r6]
   31ce4:	and	r5, r4, #1
   31ce8:	stmia	ip!, {r0, r1, r2, r3}
   31cec:	bic	r4, r4, #3
   31cf0:	ldm	lr!, {r0, r1, r2, r3}
   31cf4:	orr	r4, r4, #3
   31cf8:	str	r5, [r6, #4]
   31cfc:	ldr	r5, [pc, #416]	; 31ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e24c>
   31d00:	stmia	ip!, {r0, r1, r2, r3}
   31d04:	ldm	lr!, {r0, r1, r2, r3}
   31d08:	stmia	ip!, {r0, r1, r2, r3}
   31d0c:	sub	r3, ip, #48	; 0x30
   31d10:	ldm	lr, {r0, r1, r2}
   31d14:	stm	ip, {r0, r1, r2}
   31d18:	ldr	r0, [pc, #392]	; 31ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e250>
   31d1c:	str	r3, [r9, #24]
   31d20:	strb	r4, [r9, #1]
   31d24:	str	r5, [r6, #80]	; 0x50
   31d28:	bl	1325c <register_ld_plugin_object_p@plt>
   31d2c:	bl	13838 <getpagesize@plt>
   31d30:	asr	r1, r0, #31
   31d34:	strd	r0, [r6, #16]
   31d38:	add	sp, sp, #12
   31d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31d40:	ldr	r1, [pc, #356]	; 31eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e254>
   31d44:	str	r1, [r4]
   31d48:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d4c:	str	sl, [r4]
   31d50:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d54:	ldr	r1, [pc, #340]	; 31eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e258>
   31d58:	str	r1, [r4]
   31d5c:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d60:	ldr	r1, [pc, #332]	; 31eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e25c>
   31d64:	str	r1, [r4]
   31d68:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d6c:	ldr	r1, [pc, #324]	; 31eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e260>
   31d70:	str	r1, [r4]
   31d74:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d78:	ldr	r1, [pc, #316]	; 31ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e264>
   31d7c:	str	r1, [r4]
   31d80:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d84:	ldr	r1, [pc, #308]	; 31ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e268>
   31d88:	str	r1, [r4]
   31d8c:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31d90:	ldr	r1, [pc, #300]	; 31ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e26c>
   31d94:	ldr	r1, [r1]
   31d98:	b	31c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb4>
   31d9c:	str	fp, [r4]
   31da0:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31da4:	ldr	r1, [pc, #284]	; 31ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e270>
   31da8:	str	r1, [r4]
   31dac:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31db0:	ldr	r1, [pc, #276]	; 31ecc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e274>
   31db4:	str	r1, [r4]
   31db8:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31dbc:	mov	r1, #231	; 0xe7
   31dc0:	str	r1, [r4]
   31dc4:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31dc8:	str	r3, [r4]
   31dcc:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31dd0:	ldr	r1, [pc, #248]	; 31ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e278>
   31dd4:	str	r1, [r4]
   31dd8:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31ddc:	mov	r0, r2
   31de0:	mov	r1, #952	; 0x3b8
   31de4:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   31de8:	ldr	r3, [pc, #152]	; 31e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e230>
   31dec:	ldr	r2, [pc, #144]	; 31e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e22c>
   31df0:	b	31c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31df4:	mov	r1, sl
   31df8:	mov	r0, fp
   31dfc:	mov	r2, #5
   31e00:	bl	13460 <dcgettext@plt>
   31e04:	mov	r2, r5
   31e08:	ldr	r1, [r4, #4]
   31e0c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31e10:	b	31cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e068>
   31e14:	ldr	r1, [pc, #184]	; 31ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e27c>
   31e18:	ldr	r0, [r4, #8]
   31e1c:	bl	13c10 <dlsym@plt>
   31e20:	subs	r5, r0, #0
   31e24:	bne	31c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e010>
   31e28:	mov	r2, #5
   31e2c:	ldr	r1, [pc, #164]	; 31ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e280>
   31e30:	bl	13460 <dcgettext@plt>
   31e34:	ldr	r1, [r4, #4]
   31e38:	str	r1, [sp]
   31e3c:	mov	fp, r0
   31e40:	bl	134f0 <dlerror@plt>
   31e44:	ldr	r1, [sp]
   31e48:	mov	r2, r0
   31e4c:	mov	r0, fp
   31e50:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   31e54:	ldr	r2, [r4, #12]
   31e58:	cmp	r2, #0
   31e5c:	bne	31c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e01c>
   31e60:	ldr	r1, [sp, #4]
   31e64:	b	31c9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e044>
   31e68:	cmp	r1, #1
   31e6c:	moveq	r1, #3
   31e70:	movne	r1, #2
   31e74:	b	31c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb4>
   31e78:	andeq	r7, ip, r0, lsr #27
   31e7c:	andeq	r2, r5, ip, lsr r0
   31e80:	andeq	r8, ip, ip, lsl #1
   31e84:	strheq	r2, [r5], -r4
   31e88:	andeq	r0, r3, r0, lsl #24
   31e8c:	andeq	r0, r3, ip, asr #24
   31e90:	andeq	r0, r3, ip, lsr #25
   31e94:	strdeq	r1, [r3], -ip
   31e98:	andeq	r2, r5, ip, lsl #6
   31e9c:	andeq	r2, r5, ip, lsl r3
   31ea0:	andeq	r7, ip, r8, asr #27
   31ea4:	andeq	r0, r3, r8, ror r8
   31ea8:	andeq	r1, r3, ip, lsl #12
   31eac:			; <UNDEFINED> instruction: 0x000311b0
   31eb0:	andeq	r1, r3, r4, lsl #12
   31eb4:	andeq	r0, r3, r0, asr #29
   31eb8:	andeq	r0, r3, r8, lsr fp
   31ebc:	andeq	r0, r3, ip, ror fp
   31ec0:	andeq	r0, r3, r0, asr #23
   31ec4:	andeq	r7, ip, r0, asr #7
   31ec8:	andeq	r0, r3, ip, lsl #21
   31ecc:	andeq	r0, r3, r0, ror #21
   31ed0:	andeq	r0, r3, r0, lsl sp
   31ed4:	andeq	r2, r5, r4, lsl r3
   31ed8:			; <UNDEFINED> instruction: 0x000522bc
   31edc:	ldr	r3, [r0, #4]
   31ee0:	push	{r4, r5, r6, lr}
   31ee4:	cmp	r3, #2
   31ee8:	mov	r4, r0
   31eec:	beq	31efc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2a4>
   31ef0:	ldr	r1, [pc, #68]	; 31f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2e4>
   31ef4:	ldr	r0, [pc, #68]	; 31f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2e8>
   31ef8:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   31efc:	ldr	r0, [r4, #16]
   31f00:	bl	3160c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9b4>
   31f04:	cmp	r0, #0
   31f08:	popeq	{r4, r5, r6, pc}
   31f0c:	ldr	r0, [r4, #16]
   31f10:	ldr	r3, [r0, #140]	; 0x8c
   31f14:	ldr	r5, [r0, #48]	; 0x30
   31f18:	cmp	r3, #0
   31f1c:	beq	31f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2dc>
   31f20:	ldrb	r3, [r4, #37]	; 0x25
   31f24:	str	r5, [r4, #16]
   31f28:	orr	r3, r3, #32
   31f2c:	strb	r3, [r4, #37]	; 0x25
   31f30:	pop	{r4, r5, r6, pc}
   31f34:	bl	139dc <bfd_close@plt>
   31f38:	b	31f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2c8>
   31f3c:	muleq	r0, pc, r4	; <UNPREDICTABLE>
   31f40:	strheq	r2, [r5], -r4
   31f44:	push	{r4, r5, r6, lr}
   31f48:	mov	r3, #1
   31f4c:	ldr	r5, [pc, #84]	; 31fa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e350>
   31f50:	ldr	r4, [r5, #24]
   31f54:	str	r3, [r5, #100]	; 0x64
   31f58:	cmp	r4, #0
   31f5c:	beq	31f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e33c>
   31f60:	mov	r6, #0
   31f64:	ldr	r3, [r4, #24]
   31f68:	cmp	r3, #0
   31f6c:	beq	31f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e330>
   31f70:	str	r4, [r5, #8]
   31f74:	blx	r3
   31f78:	str	r6, [r5, #8]
   31f7c:	cmp	r0, #0
   31f80:	ldrne	r3, [r4, #4]
   31f84:	strne	r3, [r5, #28]
   31f88:	ldr	r4, [r4]
   31f8c:	cmp	r4, #0
   31f90:	bne	31f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e30c>
   31f94:	ldr	r0, [r5, #28]
   31f98:	adds	r0, r0, #0
   31f9c:	movne	r0, #1
   31fa0:	rsb	r0, r0, #0
   31fa4:	pop	{r4, r5, r6, pc}
   31fa8:	andeq	r7, ip, r0, lsr #27
   31fac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31fb0:	ldr	r6, [pc, #120]	; 32030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3d8>
   31fb4:	ldr	r4, [r6, #24]
   31fb8:	cmp	r4, #0
   31fbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   31fc0:	ldr	r9, [pc, #108]	; 32034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3dc>
   31fc4:	mov	r8, #1
   31fc8:	b	31fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e388>
   31fcc:	ldr	r0, [r4, #8]
   31fd0:	bl	1349c <dlclose@plt>
   31fd4:	ldr	r4, [r4]
   31fd8:	cmp	r4, #0
   31fdc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   31fe0:	ldr	r3, [r4, #28]
   31fe4:	cmp	r3, #0
   31fe8:	beq	31fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e37c>
   31fec:	ldr	r5, [r4, #32]
   31ff0:	cmp	r5, #0
   31ff4:	bne	31fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e37c>
   31ff8:	str	r8, [r4, #32]
   31ffc:	str	r4, [r6, #8]
   32000:	blx	r3
   32004:	str	r5, [r6, #8]
   32008:	subs	r7, r0, #0
   3200c:	beq	31fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e374>
   32010:	mov	r1, r9
   32014:	mov	r0, r5
   32018:	mov	r2, #5
   3201c:	bl	13460 <dcgettext@plt>
   32020:	mov	r2, r7
   32024:	ldr	r1, [r4, #4]
   32028:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   3202c:	b	31fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e374>
   32030:	andeq	r7, ip, r0, lsr #27
   32034:	andeq	r2, r5, r8, lsr r3
   32038:	ldr	r2, [pc, #72]	; 32088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e430>
   3203c:	lsl	r3, r0, #1
   32040:	ldrh	r3, [r2, r3]
   32044:	tst	r3, #4
   32048:	bne	32074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e41c>
   3204c:	tst	r3, #128	; 0x80
   32050:	bne	32068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e410>
   32054:	tst	r3, #8
   32058:	beq	32080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e428>
   3205c:	sub	r0, r0, #87	; 0x57
   32060:	uxtb	r0, r0
   32064:	bx	lr
   32068:	sub	r0, r0, #55	; 0x37
   3206c:	uxtb	r0, r0
   32070:	bx	lr
   32074:	sub	r0, r0, #48	; 0x30
   32078:	uxtb	r0, r0
   3207c:	bx	lr
   32080:	push	{r4, lr}
   32084:	bl	13bbc <abort@plt>
   32088:	andeq	r6, ip, r0, lsl #24
   3208c:	push	{r4, lr}
   32090:	mov	r4, r0
   32094:	ldr	r1, [pc, #84]	; 320f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e498>
   32098:	bl	13268 <strcmp@plt>
   3209c:	cmp	r0, #0
   320a0:	beq	320e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e490>
   320a4:	ldr	r1, [pc, #72]	; 320f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e49c>
   320a8:	mov	r0, r4
   320ac:	bl	13268 <strcmp@plt>
   320b0:	cmp	r0, #0
   320b4:	beq	320e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e490>
   320b8:	ldr	r1, [pc, #56]	; 320f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4a0>
   320bc:	mov	r0, r4
   320c0:	bl	13268 <strcmp@plt>
   320c4:	cmp	r0, #0
   320c8:	beq	320e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e490>
   320cc:	mov	r0, r4
   320d0:	mov	r2, #2
   320d4:	ldr	r1, [pc, #32]	; 320fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4a4>
   320d8:	bl	13bb0 <strncmp@plt>
   320dc:	clz	r0, r0
   320e0:	lsr	r0, r0, #5
   320e4:	pop	{r4, pc}
   320e8:	mov	r0, #1
   320ec:	pop	{r4, pc}
   320f0:	andeq	r2, r5, r8, ror #6
   320f4:	andeq	r2, r5, ip, ror #6
   320f8:	andeq	r2, r5, r4, ror r3
   320fc:	muleq	r4, r0, r4
   32100:	push	{r4, lr}
   32104:	mov	r4, r0
   32108:	ldr	r1, [pc, #188]	; 321cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e574>
   3210c:	bl	13268 <strcmp@plt>
   32110:	cmp	r0, #0
   32114:	beq	32160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e508>
   32118:	ldr	r1, [pc, #176]	; 321d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e578>
   3211c:	mov	r0, r4
   32120:	bl	13268 <strcmp@plt>
   32124:	cmp	r0, #0
   32128:	beq	32160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e508>
   3212c:	ldr	r1, [pc, #160]	; 321d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e57c>
   32130:	mov	r0, r4
   32134:	bl	13268 <strcmp@plt>
   32138:	cmp	r0, #0
   3213c:	beq	32168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e510>
   32140:	mov	r2, #2
   32144:	ldr	r1, [pc, #140]	; 321d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e580>
   32148:	mov	r0, r4
   3214c:	bl	13bb0 <strncmp@plt>
   32150:	cmp	r0, #0
   32154:	beq	32170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e518>
   32158:	mov	r0, #0
   3215c:	pop	{r4, pc}
   32160:	mov	r0, #16
   32164:	pop	{r4, pc}
   32168:	mov	r0, #20
   3216c:	pop	{r4, pc}
   32170:	ldrb	r3, [r4, #2]
   32174:	ldr	ip, [pc, #96]	; 321dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e584>
   32178:	add	r2, r4, #2
   3217c:	b	3218c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e534>
   32180:	ldrb	r3, [r2]
   32184:	cmp	r3, #0
   32188:	popeq	{r4, pc}
   3218c:	lsl	r1, r3, #1
   32190:	ldrh	r1, [ip, r1]
   32194:	tst	r1, #256	; 0x100
   32198:	beq	321b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e560>
   3219c:	ldrb	r1, [r2, #1]
   321a0:	lsl	r1, r1, #1
   321a4:	ldrh	r1, [ip, r1]
   321a8:	tst	r1, #256	; 0x100
   321ac:	addne	r0, r0, #1
   321b0:	addne	r2, r2, #2
   321b4:	bne	32180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e528>
   321b8:	cmp	r3, #58	; 0x3a
   321bc:	cmpne	r3, #45	; 0x2d
   321c0:	add	r2, r2, #1
   321c4:	beq	32180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e528>
   321c8:	b	32158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e500>
   321cc:	andeq	r2, r5, r8, ror #6
   321d0:	andeq	r2, r5, r4, ror r3
   321d4:	andeq	r2, r5, ip, ror #6
   321d8:	muleq	r4, r0, r4
   321dc:	andeq	r6, ip, r0, lsl #24
   321e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   321e4:	mov	r4, r1
   321e8:	sub	sp, sp, #160	; 0xa0
   321ec:	mov	r7, r0
   321f0:	ldr	r1, [pc, #428]	; 323a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e74c>
   321f4:	mov	r0, r4
   321f8:	mov	r5, r2
   321fc:	mov	r6, r3
   32200:	bl	13268 <strcmp@plt>
   32204:	cmp	r0, #0
   32208:	beq	32324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e6cc>
   3220c:	ldr	r1, [pc, #404]	; 323a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e750>
   32210:	mov	r0, r4
   32214:	bl	13268 <strcmp@plt>
   32218:	cmp	r0, #0
   3221c:	beq	322e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e690>
   32220:	ldr	r1, [pc, #388]	; 323ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e754>
   32224:	mov	r0, r4
   32228:	bl	13268 <strcmp@plt>
   3222c:	subs	r5, r0, #0
   32230:	beq	32360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e708>
   32234:	mov	r2, #2
   32238:	ldr	r1, [pc, #368]	; 323b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e758>
   3223c:	mov	r0, r4
   32240:	bl	13bb0 <strncmp@plt>
   32244:	subs	r8, r0, #0
   32248:	bne	323a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e748>
   3224c:	ldrb	r0, [r4, #2]
   32250:	ldr	r5, [pc, #348]	; 323b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e75c>
   32254:	add	r4, r4, #2
   32258:	b	32278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e620>
   3225c:	cmp	r0, #58	; 0x3a
   32260:	cmpne	r0, #45	; 0x2d
   32264:	bne	323a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e748>
   32268:	add	r4, r4, #1
   3226c:	ldrb	r0, [r4]
   32270:	cmp	r0, #0
   32274:	beq	322d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e680>
   32278:	lsl	r3, r0, #1
   3227c:	ldrh	r3, [r5, r3]
   32280:	tst	r3, #256	; 0x100
   32284:	beq	3225c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e604>
   32288:	ldrb	r3, [r4, #1]
   3228c:	lsl	r3, r3, #1
   32290:	ldrh	r3, [r5, r3]
   32294:	tst	r3, #256	; 0x100
   32298:	beq	3225c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e604>
   3229c:	bl	32038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3e0>
   322a0:	add	sl, r4, #2
   322a4:	add	r9, r6, r8
   322a8:	lsl	r0, r0, #4
   322ac:	uxtb	r7, r0
   322b0:	strb	r7, [r6, r8]
   322b4:	ldrb	r0, [r4, #1]
   322b8:	bl	32038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3e0>
   322bc:	mov	r4, sl
   322c0:	add	r8, r8, #1
   322c4:	orr	r0, r7, r0
   322c8:	strb	r0, [r9]
   322cc:	ldrb	r0, [r4]
   322d0:	cmp	r0, #0
   322d4:	bne	32278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e620>
   322d8:	mov	r5, #1
   322dc:	mov	r0, r5
   322e0:	add	sp, sp, #160	; 0xa0
   322e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   322e8:	mov	r0, sp
   322ec:	bl	3cc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28fb4>
   322f0:	mov	r2, sp
   322f4:	mov	r0, r7
   322f8:	ldr	r1, [pc, #184]	; 323b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e760>
   322fc:	blx	r5
   32300:	subs	r5, r0, #0
   32304:	beq	322dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e684>
   32308:	mov	r1, r6
   3230c:	mov	r0, sp
   32310:	bl	3e288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a630>
   32314:	mov	r5, #1
   32318:	mov	r0, r5
   3231c:	add	sp, sp, #160	; 0xa0
   32320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32324:	mov	r0, sp
   32328:	bl	3bdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2819c>
   3232c:	mov	r2, sp
   32330:	mov	r0, r7
   32334:	ldr	r1, [pc, #128]	; 323bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e764>
   32338:	blx	r5
   3233c:	subs	r5, r0, #0
   32340:	beq	322dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e684>
   32344:	mov	r1, r6
   32348:	mov	r0, sp
   3234c:	bl	3c8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c94>
   32350:	mov	r5, #1
   32354:	mov	r0, r5
   32358:	add	sp, sp, #160	; 0xa0
   3235c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32360:	mov	r1, r5
   32364:	ldr	r0, [pc, #84]	; 323c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e768>
   32368:	bl	13688 <open64@plt>
   3236c:	subs	r4, r0, #0
   32370:	blt	322dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e684>
   32374:	mov	r1, r6
   32378:	ldr	r2, [sp, #192]	; 0xc0
   3237c:	bl	132d4 <read@plt>
   32380:	ldr	r3, [sp, #192]	; 0xc0
   32384:	mov	r5, r0
   32388:	cmp	r3, r5
   3238c:	mov	r0, r4
   32390:	movgt	r5, #0
   32394:	movle	r5, #1
   32398:	bl	13be0 <close@plt>
   3239c:	b	322dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e684>
   323a0:	bl	13bbc <abort@plt>
   323a4:	andeq	r2, r5, r8, ror #6
   323a8:	andeq	r2, r5, ip, ror #6
   323ac:	andeq	r2, r5, r4, ror r3
   323b0:	muleq	r4, r0, r4
   323b4:	andeq	r6, ip, r0, lsl #24
   323b8:	andeq	lr, r3, ip, asr #6
   323bc:	andeq	ip, r3, ip, lsl #19
   323c0:	andeq	r2, r5, ip, ror r3
   323c4:	ldr	r2, [pc, #20]	; 323e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e788>
   323c8:	ldrb	r3, [r2]
   323cc:	and	r3, r3, #3
   323d0:	cmp	r3, #2
   323d4:	movne	r3, #1
   323d8:	strne	r3, [r2, #20]
   323dc:	bx	lr
   323e0:	andeq	r8, ip, ip, lsl #1
   323e4:	ldr	r3, [r1]
   323e8:	ldr	r0, [r0]
   323ec:	ldr	r2, [r3, #60]	; 0x3c
   323f0:	ldr	r1, [r0, #60]	; 0x3c
   323f4:	cmp	r2, #0
   323f8:	cmpne	r1, #0
   323fc:	beq	32434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e7dc>
   32400:	ldr	r1, [r1, #28]
   32404:	ldr	r0, [r0, #56]	; 0x38
   32408:	ldr	r2, [r2, #28]
   3240c:	ldr	r3, [r3, #56]	; 0x38
   32410:	add	r1, r1, r0
   32414:	add	r3, r2, r3
   32418:	cmp	r1, r3
   3241c:	bhi	3242c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e7d4>
   32420:	mvncc	r0, #0
   32424:	movcs	r0, #0
   32428:	bx	lr
   3242c:	mov	r0, #1
   32430:	bx	lr
   32434:	mov	r0, #0
   32438:	bx	lr
   3243c:	ldr	r3, [pc, #16]	; 32454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e7fc>
   32440:	ldr	r2, [r3]
   32444:	cmp	r2, r0
   32448:	bxeq	lr
   3244c:	ldr	r3, [r3, #4]
   32450:	bx	r3
   32454:	andeq	r7, ip, r8, lsl #28
   32458:	ldr	r2, [pc, #552]	; 32688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea30>
   3245c:	mov	r3, #0
   32460:	str	r3, [r0]
   32464:	ldrb	r3, [r2]
   32468:	and	r3, r3, #3
   3246c:	cmp	r3, #2
   32470:	beq	324fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8a4>
   32474:	ldr	r1, [pc, #528]	; 3268c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea34>
   32478:	ldr	r0, [r1, #48]	; 0x30
   3247c:	cmp	r0, #0
   32480:	beq	324f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e89c>
   32484:	ldr	r1, [r1]
   32488:	cmp	r1, #0
   3248c:	beq	32530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8d8>
   32490:	cmp	r3, #1
   32494:	beq	32538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8e0>
   32498:	ldr	r0, [r2]
   3249c:	and	r0, r0, #536870915	; 0x20000003
   324a0:	cmp	r0, #536870913	; 0x20000001
   324a4:	beq	32518 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8c0>
   324a8:	cmp	r3, #1
   324ac:	beq	32584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e92c>
   324b0:	cmp	r3, #3
   324b4:	beq	325dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e984>
   324b8:	cmp	r0, #536870915	; 0x20000003
   324bc:	beq	32658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea00>
   324c0:	ldrb	r1, [r2, #4]
   324c4:	ldrb	r3, [r2, #3]
   324c8:	tst	r1, #64	; 0x40
   324cc:	and	r1, r3, #32
   324d0:	beq	325a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e950>
   324d4:	cmp	r1, #0
   324d8:	beq	32648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9f0>
   324dc:	ldr	r2, [r2, #112]	; 0x70
   324e0:	ldr	r3, [pc, #424]	; 32690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea38>
   324e4:	tst	r2, #8
   324e8:	ldr	r0, [pc, #420]	; 32694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea3c>
   324ec:	movne	r0, r3
   324f0:	bx	lr
   324f4:	ldr	r0, [pc, #412]	; 32698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea40>
   324f8:	bx	lr
   324fc:	ldr	r2, [pc, #392]	; 3268c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea34>
   32500:	ldr	r3, [pc, #404]	; 3269c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea44>
   32504:	ldr	r0, [pc, #404]	; 326a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea48>
   32508:	ldr	r2, [r2, #12]
   3250c:	cmp	r2, #0
   32510:	moveq	r0, r3
   32514:	bx	lr
   32518:	ldrb	r2, [r2, #4]
   3251c:	ldr	r3, [pc, #384]	; 326a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea4c>
   32520:	ldr	r0, [pc, #384]	; 326a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea50>
   32524:	tst	r2, #64	; 0x40
   32528:	movne	r0, r3
   3252c:	bx	lr
   32530:	ldr	r0, [pc, #372]	; 326ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea54>
   32534:	bx	lr
   32538:	ldrb	r1, [r2, #4]
   3253c:	tst	r1, #64	; 0x40
   32540:	beq	32498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e840>
   32544:	ldrb	r3, [r2, #3]
   32548:	tst	r3, #32
   3254c:	beq	32564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e90c>
   32550:	ldr	r3, [r2, #112]	; 0x70
   32554:	tst	r3, #8
   32558:	beq	32564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e90c>
   3255c:	ldr	r0, [pc, #332]	; 326b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea58>
   32560:	bx	lr
   32564:	ldrb	r3, [r2, #3]
   32568:	tst	r3, #16
   3256c:	beq	325c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e96c>
   32570:	ldr	r3, [r2, #112]	; 0x70
   32574:	tst	r3, #8
   32578:	beq	325c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e96c>
   3257c:	ldr	r0, [pc, #304]	; 326b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea5c>
   32580:	bx	lr
   32584:	ldrb	r3, [r2, #4]
   32588:	tst	r3, #64	; 0x40
   3258c:	bne	325bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e964>
   32590:	ldr	r2, [pc, #288]	; 326b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea60>
   32594:	ldr	r3, [pc, #268]	; 326a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea50>
   32598:	cmp	r0, #536870913	; 0x20000001
   3259c:	movne	r0, r2
   325a0:	moveq	r0, r3
   325a4:	bx	lr
   325a8:	ldr	r3, [pc, #268]	; 326bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea64>
   325ac:	cmp	r1, #0
   325b0:	ldr	r0, [pc, #264]	; 326c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea68>
   325b4:	moveq	r0, r3
   325b8:	bx	lr
   325bc:	ldr	r0, [pc, #256]	; 326c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea6c>
   325c0:	bx	lr
   325c4:	ldr	r0, [r2]
   325c8:	and	r0, r0, #536870915	; 0x20000003
   325cc:	cmp	r0, #536870913	; 0x20000001
   325d0:	bne	32584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e92c>
   325d4:	ldr	r0, [pc, #200]	; 326a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea4c>
   325d8:	bx	lr
   325dc:	ldrb	r3, [r2, #4]
   325e0:	tst	r3, #64	; 0x40
   325e4:	beq	32630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9d8>
   325e8:	ldrb	r3, [r2, #3]
   325ec:	tst	r3, #32
   325f0:	beq	32600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9a8>
   325f4:	ldr	r3, [r2, #112]	; 0x70
   325f8:	tst	r3, #8
   325fc:	bne	32678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea20>
   32600:	ldrb	r3, [r2, #3]
   32604:	tst	r3, #16
   32608:	beq	32618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9c0>
   3260c:	ldr	r3, [r2, #112]	; 0x70
   32610:	tst	r3, #8
   32614:	bne	32680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea28>
   32618:	ldrb	r2, [r2, #3]
   3261c:	ldr	r3, [pc, #164]	; 326c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea70>
   32620:	ldr	r0, [pc, #164]	; 326cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea74>
   32624:	tst	r2, #32
   32628:	movne	r0, r3
   3262c:	bx	lr
   32630:	ldr	r2, [pc, #152]	; 326d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea78>
   32634:	ldr	r3, [pc, #152]	; 326d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea7c>
   32638:	cmp	r0, #536870915	; 0x20000003
   3263c:	movne	r0, r2
   32640:	moveq	r0, r3
   32644:	bx	lr
   32648:	tst	r3, #16
   3264c:	bne	32660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea08>
   32650:	ldr	r0, [pc, #128]	; 326d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea80>
   32654:	bx	lr
   32658:	ldr	r0, [pc, #116]	; 326d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea7c>
   3265c:	bx	lr
   32660:	ldr	r2, [r2, #112]	; 0x70
   32664:	ldr	r3, [pc, #112]	; 326dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea84>
   32668:	tst	r2, #8
   3266c:	ldr	r0, [pc, #100]	; 326d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea80>
   32670:	movne	r0, r3
   32674:	bx	lr
   32678:	ldr	r0, [pc, #96]	; 326e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea88>
   3267c:	bx	lr
   32680:	ldr	r0, [pc, #92]	; 326e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea8c>
   32684:	bx	lr
   32688:	andeq	r8, ip, ip, lsl #1
   3268c:	andeq	r8, ip, r4, ror r1
   32690:	muleq	r7, r8, sl
   32694:	andeq	r3, r7, r8, lsl #9
   32698:	andeq	lr, r5, ip, lsr r7
   3269c:	muleq	r5, ip, r0
   326a0:	ldrdeq	fp, [r5], -r0
   326a4:	andeq	r7, r6, r8, asr #27
   326a8:			; <UNDEFINED> instruction: 0x000525bc
   326ac:	andeq	r0, r6, r8, lsl sp
   326b0:	andeq	r3, r6, r8, ror #6
   326b4:	andeq	r5, r6, ip, asr #18
   326b8:	andeq	ip, r6, r8, lsl #16
   326bc:	andeq	pc, r7, r4, ror r0	; <UNPREDICTABLE>
   326c0:	andeq	sl, r7, r8, ror #5
   326c4:	muleq	r6, ip, r3
   326c8:	andeq	r1, r8, r4, asr #13
   326cc:	andeq	r9, r5, r8, ror r7
   326d0:			; <UNDEFINED> instruction: 0x00077eb4
   326d4:	andeq	r4, r5, ip, ror #26
   326d8:	andeq	r5, r7, r4, asr sl
   326dc:	andeq	r7, r5, r8, lsl #6
   326e0:	andeq	lr, r6, r0, asr lr
   326e4:	andeq	r1, r7, r0, lsr #4
   326e8:	ldrb	r3, [r0, #36]	; 0x24
   326ec:	push	{r4, r5, r6, lr}
   326f0:	mov	r4, r0
   326f4:	tst	r3, #64	; 0x40
   326f8:	lsr	r5, r3, #7
   326fc:	and	r3, r3, #16
   32700:	bne	32734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eadc>
   32704:	cmp	r3, #0
   32708:	ldr	r0, [r0, #16]
   3270c:	orr	r5, r5, #4
   32710:	beq	32720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eac8>
   32714:	ldr	r3, [r0, #40]	; 0x28
   32718:	tst	r3, #2048	; 0x800
   3271c:	bne	32774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb1c>
   32720:	ldr	r3, [r0, #40]	; 0x28
   32724:	tst	r3, #2048	; 0x800
   32728:	bne	32764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb0c>
   3272c:	mov	r0, #0
   32730:	pop	{r4, r5, r6, pc}
   32734:	cmp	r3, #0
   32738:	beq	3274c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eaf4>
   3273c:	ldr	r0, [r0, #16]
   32740:	ldr	r3, [r0, #40]	; 0x28
   32744:	tst	r3, #2048	; 0x800
   32748:	bne	32774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb1c>
   3274c:	cmp	r5, #0
   32750:	beq	3272c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ead4>
   32754:	ldr	r0, [r4, #16]
   32758:	ldr	r3, [r0, #40]	; 0x28
   3275c:	tst	r3, #2048	; 0x800
   32760:	beq	3272c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ead4>
   32764:	mov	r1, r5
   32768:	bl	137f0 <bfd_elf_set_dyn_lib_class@plt>
   3276c:	mov	r0, #0
   32770:	pop	{r4, r5, r6, pc}
   32774:	mov	r2, #5
   32778:	ldr	r1, [pc, #24]	; 32798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb40>
   3277c:	mov	r0, #0
   32780:	bl	13460 <dcgettext@plt>
   32784:	ldr	r1, [r4, #16]
   32788:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3278c:	cmp	r5, #0
   32790:	beq	3272c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ead4>
   32794:	b	32754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eafc>
   32798:	andeq	r3, r8, r4, lsl #21
   3279c:	push	{r4, lr}
   327a0:	mov	r2, #5
   327a4:	mov	r4, r0
   327a8:	ldr	r1, [pc, #552]	; 329d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed80>
   327ac:	mov	r0, #0
   327b0:	bl	13460 <dcgettext@plt>
   327b4:	mov	r1, r0
   327b8:	mov	r0, r4
   327bc:	bl	1382c <fprintf@plt>
   327c0:	mov	r2, #5
   327c4:	ldr	r1, [pc, #528]	; 329dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed84>
   327c8:	mov	r0, #0
   327cc:	bl	13460 <dcgettext@plt>
   327d0:	mov	r1, r0
   327d4:	mov	r0, r4
   327d8:	bl	1382c <fprintf@plt>
   327dc:	mov	r2, #5
   327e0:	ldr	r1, [pc, #504]	; 329e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed88>
   327e4:	mov	r0, #0
   327e8:	bl	13460 <dcgettext@plt>
   327ec:	mov	r1, r0
   327f0:	mov	r0, r4
   327f4:	bl	1382c <fprintf@plt>
   327f8:	mov	r2, #5
   327fc:	ldr	r1, [pc, #480]	; 329e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed8c>
   32800:	mov	r0, #0
   32804:	bl	13460 <dcgettext@plt>
   32808:	mov	r1, r0
   3280c:	mov	r0, r4
   32810:	bl	1382c <fprintf@plt>
   32814:	mov	r2, #5
   32818:	ldr	r1, [pc, #456]	; 329e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed90>
   3281c:	mov	r0, #0
   32820:	bl	13460 <dcgettext@plt>
   32824:	mov	r1, r0
   32828:	mov	r0, r4
   3282c:	bl	1382c <fprintf@plt>
   32830:	mov	r2, #5
   32834:	ldr	r1, [pc, #432]	; 329ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed94>
   32838:	mov	r0, #0
   3283c:	bl	13460 <dcgettext@plt>
   32840:	mov	r1, r0
   32844:	mov	r0, r4
   32848:	bl	1382c <fprintf@plt>
   3284c:	mov	r2, #5
   32850:	ldr	r1, [pc, #408]	; 329f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed98>
   32854:	mov	r0, #0
   32858:	bl	13460 <dcgettext@plt>
   3285c:	mov	r1, r0
   32860:	mov	r0, r4
   32864:	bl	1382c <fprintf@plt>
   32868:	mov	r2, #5
   3286c:	ldr	r1, [pc, #384]	; 329f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed9c>
   32870:	mov	r0, #0
   32874:	bl	13460 <dcgettext@plt>
   32878:	mov	r1, r0
   3287c:	mov	r0, r4
   32880:	bl	1382c <fprintf@plt>
   32884:	mov	r2, #5
   32888:	ldr	r1, [pc, #360]	; 329f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eda0>
   3288c:	mov	r0, #0
   32890:	bl	13460 <dcgettext@plt>
   32894:	mov	r1, r0
   32898:	mov	r0, r4
   3289c:	bl	1382c <fprintf@plt>
   328a0:	mov	r2, #5
   328a4:	ldr	r1, [pc, #336]	; 329fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eda4>
   328a8:	mov	r0, #0
   328ac:	bl	13460 <dcgettext@plt>
   328b0:	mov	r1, r0
   328b4:	mov	r0, r4
   328b8:	bl	1382c <fprintf@plt>
   328bc:	mov	r2, #5
   328c0:	ldr	r1, [pc, #312]	; 32a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eda8>
   328c4:	mov	r0, #0
   328c8:	bl	13460 <dcgettext@plt>
   328cc:	mov	r1, r0
   328d0:	mov	r0, r4
   328d4:	bl	1382c <fprintf@plt>
   328d8:	mov	r2, #5
   328dc:	ldr	r1, [pc, #288]	; 32a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edac>
   328e0:	mov	r0, #0
   328e4:	bl	13460 <dcgettext@plt>
   328e8:	mov	r1, r0
   328ec:	mov	r0, r4
   328f0:	bl	1382c <fprintf@plt>
   328f4:	mov	r2, #5
   328f8:	ldr	r1, [pc, #264]	; 32a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edb0>
   328fc:	mov	r0, #0
   32900:	bl	13460 <dcgettext@plt>
   32904:	mov	r1, r0
   32908:	mov	r0, r4
   3290c:	bl	1382c <fprintf@plt>
   32910:	mov	r2, #5
   32914:	ldr	r1, [pc, #240]	; 32a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edb4>
   32918:	mov	r0, #0
   3291c:	bl	13460 <dcgettext@plt>
   32920:	mov	r1, r0
   32924:	mov	r0, r4
   32928:	bl	1382c <fprintf@plt>
   3292c:	mov	r2, #5
   32930:	ldr	r1, [pc, #216]	; 32a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edb8>
   32934:	mov	r0, #0
   32938:	bl	13460 <dcgettext@plt>
   3293c:	mov	r1, r0
   32940:	mov	r0, r4
   32944:	bl	1382c <fprintf@plt>
   32948:	mov	r2, #5
   3294c:	ldr	r1, [pc, #192]	; 32a14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edbc>
   32950:	mov	r0, #0
   32954:	bl	13460 <dcgettext@plt>
   32958:	mov	r1, r0
   3295c:	mov	r0, r4
   32960:	bl	1382c <fprintf@plt>
   32964:	mov	r2, #5
   32968:	ldr	r1, [pc, #168]	; 32a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edc0>
   3296c:	mov	r0, #0
   32970:	bl	13460 <dcgettext@plt>
   32974:	mov	r1, r0
   32978:	mov	r0, r4
   3297c:	bl	1382c <fprintf@plt>
   32980:	mov	r2, #5
   32984:	ldr	r1, [pc, #144]	; 32a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edc4>
   32988:	mov	r0, #0
   3298c:	bl	13460 <dcgettext@plt>
   32990:	mov	r1, r0
   32994:	mov	r0, r4
   32998:	bl	1382c <fprintf@plt>
   3299c:	mov	r2, #5
   329a0:	ldr	r1, [pc, #120]	; 32a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edc8>
   329a4:	mov	r0, #0
   329a8:	bl	13460 <dcgettext@plt>
   329ac:	mov	r1, r0
   329b0:	mov	r0, r4
   329b4:	bl	1382c <fprintf@plt>
   329b8:	ldr	r1, [pc, #100]	; 32a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edcc>
   329bc:	mov	r2, #5
   329c0:	mov	r0, #0
   329c4:	bl	13460 <dcgettext@plt>
   329c8:	mov	r1, r0
   329cc:	mov	r0, r4
   329d0:	pop	{r4, lr}
   329d4:	b	1382c <fprintf@plt>
   329d8:			; <UNDEFINED> instruction: 0x00083ab8
   329dc:	andeq	r3, r8, r4, lsl #22
   329e0:	andeq	r3, r8, ip, lsr fp
   329e4:	andeq	r3, r8, r4, lsl #23
   329e8:	andeq	r3, r8, ip, asr #23
   329ec:	andeq	r3, r8, r0, lsl ip
   329f0:	andeq	r3, r8, r8, asr ip
   329f4:	andeq	r3, r8, ip, lsr #25
   329f8:	andeq	r3, r8, ip, ror #25
   329fc:	andeq	r3, r8, r4, lsr sp
   32a00:	andeq	r3, r8, r0, lsl #27
   32a04:	strdeq	r3, [r8], -r8
   32a08:	andeq	r3, r8, r0, ror lr
   32a0c:			; <UNDEFINED> instruction: 0x00083eb8
   32a10:	andeq	r3, r8, r8, lsr pc
   32a14:	ldrdeq	r3, [r8], -r4
   32a18:	andeq	r4, r8, ip, asr #32
   32a1c:	andeq	r4, r8, r0, lsr #5
   32a20:	strdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   32a24:	andeq	r4, r8, r4, lsr r3
   32a28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   32a2c:	mov	r8, r0
   32a30:	ldr	sl, [r0]
   32a34:	sub	sp, sp, #8
   32a38:	cmp	sl, #0
   32a3c:	mov	r7, r1
   32a40:	beq	32ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee90>
   32a44:	mov	r0, r1
   32a48:	bl	137d8 <strlen@plt>
   32a4c:	ldr	r9, [pc, #168]	; 32afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eea4>
   32a50:	mov	r4, sl
   32a54:	ldrb	r6, [r9, #72]	; 0x48
   32a58:	mov	r5, r0
   32a5c:	b	32a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee10>
   32a60:	adds	r4, r0, #1
   32a64:	beq	32aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee50>
   32a68:	mov	r1, r4
   32a6c:	mov	r2, r5
   32a70:	mov	r0, r7
   32a74:	bl	13bb0 <strncmp@plt>
   32a78:	mov	r1, r6
   32a7c:	cmp	r0, #0
   32a80:	mov	r0, r4
   32a84:	bne	32a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee44>
   32a88:	ldrb	r3, [r4, r5]
   32a8c:	cmp	r3, #0
   32a90:	beq	32ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee88>
   32a94:	cmp	r3, r6
   32a98:	beq	32ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee88>
   32a9c:	bl	137fc <strchr@plt>
   32aa0:	cmp	r0, #0
   32aa4:	bne	32a60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee08>
   32aa8:	mov	r0, sl
   32aac:	bl	137d8 <strlen@plt>
   32ab0:	add	r5, r5, #2
   32ab4:	add	r0, r5, r0
   32ab8:	bl	13574 <xmalloc@plt>
   32abc:	str	r7, [sp]
   32ac0:	ldrb	r3, [r9, #72]	; 0x48
   32ac4:	ldr	r2, [r8]
   32ac8:	ldr	r1, [pc, #48]	; 32b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eea8>
   32acc:	mov	r4, r0
   32ad0:	bl	13a00 <sprintf@plt>
   32ad4:	ldr	r0, [r8]
   32ad8:	bl	13364 <free@plt>
   32adc:	str	r4, [r8]
   32ae0:	add	sp, sp, #8
   32ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32ae8:	mov	r0, r1
   32aec:	bl	135a4 <xstrdup@plt>
   32af0:	str	r0, [r8]
   32af4:	add	sp, sp, #8
   32af8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32afc:	andeq	r8, ip, r4, ror r1
   32b00:	andeq	ip, r4, r8, lsr #20
   32b04:	ldr	r3, [pc, #4044]	; 33ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe80>
   32b08:	sub	r0, r0, #80	; 0x50
   32b0c:	push	{r4, r5, r6, lr}
   32b10:	sub	sp, sp, #8
   32b14:	cmp	r0, r3
   32b18:	ldrls	pc, [pc, r0, lsl #2]
   32b1c:	b	33490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f838>
   32b20:	ldrdeq	r3, [r3], -r8
   32b24:	muleq	r3, r0, r4
   32b28:	muleq	r3, r0, r4
   32b2c:	muleq	r3, r0, r4
   32b30:	muleq	r3, r0, r4
   32b34:	muleq	r3, r0, r4
   32b38:	muleq	r3, r0, r4
   32b3c:	muleq	r3, r0, r4
   32b40:	muleq	r3, r0, r4
   32b44:	muleq	r3, r0, r4
   32b48:	muleq	r3, r0, r4
   32b4c:	muleq	r3, r0, r4
   32b50:	muleq	r3, r0, r4
   32b54:	muleq	r3, r0, r4
   32b58:	muleq	r3, r0, r4
   32b5c:	muleq	r3, r0, r4
   32b60:	muleq	r3, r0, r4
   32b64:	muleq	r3, r0, r4
   32b68:	muleq	r3, r0, r4
   32b6c:	muleq	r3, r0, r4
   32b70:	muleq	r3, r0, r4
   32b74:	muleq	r3, r0, r4
   32b78:	muleq	r3, r0, r4
   32b7c:	muleq	r3, r0, r4
   32b80:	muleq	r3, r0, r4
   32b84:	muleq	r3, r0, r4
   32b88:	muleq	r3, r0, r4
   32b8c:	muleq	r3, r0, r4
   32b90:	muleq	r3, r0, r4
   32b94:	muleq	r3, r0, r4
   32b98:	muleq	r3, r0, r4
   32b9c:	muleq	r3, r0, r4
   32ba0:	muleq	r3, r4, r0
   32ba4:	muleq	r3, r0, r4
   32ba8:	muleq	r3, r0, r4
   32bac:	muleq	r3, r0, r4
   32bb0:	muleq	r3, r0, r4
   32bb4:	muleq	r3, r0, r4
   32bb8:	muleq	r3, r0, r4
   32bbc:	muleq	r3, r0, r4
   32bc0:	muleq	r3, r0, r4
   32bc4:	muleq	r3, r0, r4
   32bc8:	andeq	r3, r3, r4, lsr #1
   32bcc:	muleq	r3, r0, r4
   32bd0:	muleq	r3, r0, r4
   32bd4:	muleq	r3, r0, r4
   32bd8:	muleq	r3, r0, r4
   32bdc:	muleq	r3, r0, r4
   32be0:	muleq	r3, r0, r4
   32be4:	muleq	r3, r0, r4
   32be8:	muleq	r3, r0, r4
   32bec:	muleq	r3, r0, r4
   32bf0:	muleq	r3, r0, r4
   32bf4:	muleq	r3, r0, r4
   32bf8:	muleq	r3, r0, r4
   32bfc:	muleq	r3, r0, r4
   32c00:	muleq	r3, r0, r4
   32c04:	muleq	r3, r0, r4
   32c08:	muleq	r3, r0, r4
   32c0c:	muleq	r3, r0, r4
   32c10:	muleq	r3, r0, r4
   32c14:	muleq	r3, r0, r4
   32c18:	muleq	r3, r0, r4
   32c1c:	muleq	r3, r0, r4
   32c20:	muleq	r3, r0, r4
   32c24:	muleq	r3, r0, r4
   32c28:	muleq	r3, r0, r4
   32c2c:	muleq	r3, r0, r4
   32c30:	muleq	r3, r0, r4
   32c34:	muleq	r3, r0, r4
   32c38:	muleq	r3, r0, r4
   32c3c:	muleq	r3, r0, r4
   32c40:	muleq	r3, r0, r4
   32c44:	muleq	r3, r0, r4
   32c48:	muleq	r3, r0, r4
   32c4c:	muleq	r3, r0, r4
   32c50:	muleq	r3, r0, r4
   32c54:	muleq	r3, r0, r4
   32c58:	muleq	r3, r0, r4
   32c5c:	muleq	r3, r0, r4
   32c60:	muleq	r3, r0, r4
   32c64:	muleq	r3, r0, r4
   32c68:	muleq	r3, r0, r4
   32c6c:	muleq	r3, r0, r4
   32c70:	muleq	r3, r0, r4
   32c74:	muleq	r3, r0, r4
   32c78:	muleq	r3, r0, r4
   32c7c:	muleq	r3, r0, r4
   32c80:	muleq	r3, r0, r4
   32c84:	muleq	r3, r0, r4
   32c88:	muleq	r3, r0, r4
   32c8c:	muleq	r3, r0, r4
   32c90:	muleq	r3, r0, r4
   32c94:	muleq	r3, r0, r4
   32c98:	muleq	r3, r0, r4
   32c9c:	muleq	r3, r0, r4
   32ca0:	muleq	r3, r0, r4
   32ca4:	muleq	r3, r0, r4
   32ca8:	muleq	r3, r0, r4
   32cac:	muleq	r3, r0, r4
   32cb0:	muleq	r3, r0, r4
   32cb4:	muleq	r3, r0, r4
   32cb8:	muleq	r3, r0, r4
   32cbc:	muleq	r3, r0, r4
   32cc0:	muleq	r3, r0, r4
   32cc4:	muleq	r3, r0, r4
   32cc8:	muleq	r3, r0, r4
   32ccc:	muleq	r3, r0, r4
   32cd0:	muleq	r3, r0, r4
   32cd4:	muleq	r3, r0, r4
   32cd8:	muleq	r3, r0, r4
   32cdc:	muleq	r3, r0, r4
   32ce0:	muleq	r3, r0, r4
   32ce4:	muleq	r3, r0, r4
   32ce8:	muleq	r3, r0, r4
   32cec:	muleq	r3, r0, r4
   32cf0:	muleq	r3, r0, r4
   32cf4:	muleq	r3, r0, r4
   32cf8:	muleq	r3, r0, r4
   32cfc:	muleq	r3, r0, r4
   32d00:	muleq	r3, r0, r4
   32d04:	muleq	r3, r0, r4
   32d08:	muleq	r3, r0, r4
   32d0c:	muleq	r3, r0, r4
   32d10:	muleq	r3, r0, r4
   32d14:	muleq	r3, r0, r4
   32d18:	muleq	r3, r0, r4
   32d1c:	muleq	r3, r0, r4
   32d20:	muleq	r3, r0, r4
   32d24:	muleq	r3, r0, r4
   32d28:	muleq	r3, r0, r4
   32d2c:	muleq	r3, r0, r4
   32d30:	muleq	r3, r0, r4
   32d34:	muleq	r3, r0, r4
   32d38:	muleq	r3, r0, r4
   32d3c:	muleq	r3, r0, r4
   32d40:	muleq	r3, r0, r4
   32d44:	muleq	r3, r0, r4
   32d48:	muleq	r3, r0, r4
   32d4c:	muleq	r3, r0, r4
   32d50:	muleq	r3, r0, r4
   32d54:	muleq	r3, r0, r4
   32d58:	muleq	r3, r0, r4
   32d5c:	muleq	r3, r0, r4
   32d60:	muleq	r3, r0, r4
   32d64:	muleq	r3, r0, r4
   32d68:	muleq	r3, r0, r4
   32d6c:	muleq	r3, r0, r4
   32d70:	muleq	r3, r0, r4
   32d74:	muleq	r3, r0, r4
   32d78:	muleq	r3, r0, r4
   32d7c:	muleq	r3, r0, r4
   32d80:	muleq	r3, r0, r4
   32d84:	muleq	r3, r0, r4
   32d88:	muleq	r3, r0, r4
   32d8c:	muleq	r3, r0, r4
   32d90:	muleq	r3, r0, r4
   32d94:	muleq	r3, r0, r4
   32d98:	muleq	r3, r0, r4
   32d9c:	muleq	r3, r0, r4
   32da0:	muleq	r3, r0, r4
   32da4:	muleq	r3, r0, r4
   32da8:	muleq	r3, r0, r4
   32dac:	muleq	r3, r0, r4
   32db0:	muleq	r3, r0, r4
   32db4:	muleq	r3, r0, r4
   32db8:	muleq	r3, r0, r4
   32dbc:	muleq	r3, r0, r4
   32dc0:	muleq	r3, r0, r4
   32dc4:	muleq	r3, r0, r4
   32dc8:	muleq	r3, r0, r4
   32dcc:	muleq	r3, r0, r4
   32dd0:	muleq	r3, r0, r4
   32dd4:	muleq	r3, r0, r4
   32dd8:	muleq	r3, r0, r4
   32ddc:	muleq	r3, r0, r4
   32de0:	muleq	r3, r0, r4
   32de4:	muleq	r3, r0, r4
   32de8:	muleq	r3, r0, r4
   32dec:	muleq	r3, r0, r4
   32df0:	muleq	r3, r0, r4
   32df4:	muleq	r3, r0, r4
   32df8:	muleq	r3, r0, r4
   32dfc:	muleq	r3, r0, r4
   32e00:	muleq	r3, r0, r4
   32e04:	muleq	r3, r0, r4
   32e08:	muleq	r3, r0, r4
   32e0c:	muleq	r3, r0, r4
   32e10:	muleq	r3, r0, r4
   32e14:	muleq	r3, r0, r4
   32e18:	muleq	r3, r0, r4
   32e1c:	muleq	r3, r0, r4
   32e20:	muleq	r3, r0, r4
   32e24:	muleq	r3, r0, r4
   32e28:	muleq	r3, r0, r4
   32e2c:	muleq	r3, r0, r4
   32e30:	muleq	r3, r0, r4
   32e34:	muleq	r3, r0, r4
   32e38:	muleq	r3, r0, r4
   32e3c:	muleq	r3, r0, r4
   32e40:	muleq	r3, r0, r4
   32e44:	muleq	r3, r0, r4
   32e48:	muleq	r3, r0, r4
   32e4c:	muleq	r3, r0, r4
   32e50:	muleq	r3, r0, r4
   32e54:	muleq	r3, r0, r4
   32e58:	muleq	r3, r0, r4
   32e5c:	muleq	r3, r0, r4
   32e60:	muleq	r3, r0, r4
   32e64:	muleq	r3, r0, r4
   32e68:	muleq	r3, r0, r4
   32e6c:	muleq	r3, r0, r4
   32e70:	muleq	r3, r0, r4
   32e74:	muleq	r3, r0, r4
   32e78:	muleq	r3, r0, r4
   32e7c:	muleq	r3, r0, r4
   32e80:	muleq	r3, r0, r4
   32e84:	muleq	r3, r0, r4
   32e88:	muleq	r3, r0, r4
   32e8c:	muleq	r3, r0, r4
   32e90:	muleq	r3, r0, r4
   32e94:			; <UNDEFINED> instruction: 0x000333b8
   32e98:	andeq	r3, r3, r4, lsr #7
   32e9c:	muleq	r3, r0, r3
   32ea0:	andeq	r3, r3, ip, ror r3
   32ea4:	andeq	r3, r3, r4, ror #6
   32ea8:	andeq	r3, r3, r0, asr r3
   32eac:	andeq	r3, r3, ip, lsr r3
   32eb0:	andeq	r3, r3, ip, lsl #6
   32eb4:	andeq	r3, r3, r0, asr #8
   32eb8:	andeq	r3, r3, ip, lsr #8
   32ebc:	andeq	r3, r3, r8, lsl r4
   32ec0:	ldrdeq	r3, [r3], -r0
   32ec4:	andeq	r3, r3, r8, ror #8
   32ec8:	andeq	r3, r3, r4, asr r4
   32ecc:	andeq	r3, r3, ip, ror r4
   32ed0:	andeq	r3, r3, r8, asr #3
   32ed4:	andeq	r3, r3, ip, lsl #5
   32ed8:	andeq	r3, r3, r8, ror r2
   32edc:	andeq	r3, r3, ip, ror #4
   32ee0:	andeq	r3, r3, r8, lsr r2
   32ee4:	andeq	r3, r3, r4, lsr #4
   32ee8:	andeq	r3, r3, ip, lsl #4
   32eec:	muleq	r3, r0, r4
   32ef0:	muleq	r3, r0, r4
   32ef4:	muleq	r3, r0, r4
   32ef8:	muleq	r3, r0, r4
   32efc:	muleq	r3, r0, r4
   32f00:	muleq	r3, r0, r4
   32f04:	muleq	r3, r0, r4
   32f08:	muleq	r3, r0, r4
   32f0c:	muleq	r3, r0, r4
   32f10:	muleq	r3, r0, r4
   32f14:	muleq	r3, r0, r4
   32f18:	muleq	r3, r0, r4
   32f1c:	muleq	r3, r0, r4
   32f20:	muleq	r3, r0, r4
   32f24:	muleq	r3, r0, r4
   32f28:	muleq	r3, r0, r4
   32f2c:	muleq	r3, r0, r4
   32f30:	muleq	r3, r0, r4
   32f34:	muleq	r3, r0, r4
   32f38:	muleq	r3, r0, r4
   32f3c:	muleq	r3, r0, r4
   32f40:	muleq	r3, r0, r4
   32f44:	muleq	r3, r0, r4
   32f48:	muleq	r3, r0, r4
   32f4c:	muleq	r3, r0, r4
   32f50:	muleq	r3, r0, r4
   32f54:	muleq	r3, r0, r4
   32f58:	muleq	r3, r0, r4
   32f5c:	muleq	r3, r0, r4
   32f60:	muleq	r3, r0, r4
   32f64:	muleq	r3, r0, r4
   32f68:	muleq	r3, r0, r4
   32f6c:	muleq	r3, r0, r4
   32f70:	muleq	r3, r0, r4
   32f74:	muleq	r3, r0, r4
   32f78:	muleq	r3, r0, r4
   32f7c:	muleq	r3, r0, r4
   32f80:	muleq	r3, r0, r4
   32f84:	muleq	r3, r0, r4
   32f88:	muleq	r3, r0, r4
   32f8c:	muleq	r3, r0, r4
   32f90:	muleq	r3, r0, r4
   32f94:	muleq	r3, r0, r4
   32f98:	muleq	r3, r0, r4
   32f9c:	muleq	r3, r0, r4
   32fa0:	muleq	r3, r0, r4
   32fa4:	muleq	r3, r0, r4
   32fa8:	muleq	r3, r0, r4
   32fac:	muleq	r3, r0, r4
   32fb0:	muleq	r3, r0, r4
   32fb4:	muleq	r3, r0, r4
   32fb8:	muleq	r3, r0, r4
   32fbc:	muleq	r3, r0, r4
   32fc0:	muleq	r3, r0, r4
   32fc4:	muleq	r3, r0, r4
   32fc8:	muleq	r3, r0, r4
   32fcc:	muleq	r3, r0, r4
   32fd0:	muleq	r3, r0, r4
   32fd4:	muleq	r3, r0, r4
   32fd8:	muleq	r3, r0, r4
   32fdc:	muleq	r3, r0, r4
   32fe0:	muleq	r3, r0, r4
   32fe4:	muleq	r3, r0, r4
   32fe8:	muleq	r3, r0, r4
   32fec:	muleq	r3, r0, r4
   32ff0:	muleq	r3, r0, r4
   32ff4:	muleq	r3, r0, r4
   32ff8:	muleq	r3, r0, r4
   32ffc:	muleq	r3, r0, r4
   33000:	muleq	r3, r0, r4
   33004:	muleq	r3, r0, r4
   33008:	muleq	r3, r0, r4
   3300c:	muleq	r3, r0, r4
   33010:	muleq	r3, r0, r4
   33014:	muleq	r3, r0, r4
   33018:	muleq	r3, r0, r4
   3301c:	muleq	r3, r0, r4
   33020:	strdeq	r3, [r3], -r4
   33024:	ldrdeq	r3, [r3], -ip
   33028:	andeq	r3, r3, r8, ror #5
   3302c:	andeq	r3, r3, ip, asr #5
   33030:			; <UNDEFINED> instruction: 0x000332b4
   33034:	andeq	r3, r3, r0, lsr #5
   33038:	andeq	r3, r3, r8, lsl #3
   3303c:	andeq	r3, r3, r4, lsr r1
   33040:	andeq	r3, r3, ip, lsl r1
   33044:	strdeq	r3, [r3], -r0
   33048:	add	r0, r4, #14
   3304c:	add	r1, sp, #4
   33050:	bl	137cc <strtoul@plt>
   33054:	ldr	r2, [pc, #2688]	; 33adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe84>
   33058:	ldr	r3, [sp, #4]
   3305c:	str	r0, [r2, #96]	; 0x60
   33060:	ldrb	r3, [r3]
   33064:	cmp	r3, #0
   33068:	bne	33078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f420>
   3306c:	sub	r3, r0, #1
   33070:	tst	r3, r0
   33074:	beq	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   33078:	ldr	r1, [pc, #2656]	; 33ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe88>
   3307c:	mov	r2, #5
   33080:	mov	r0, #0
   33084:	bl	13460 <dcgettext@plt>
   33088:	ldr	r1, [r5]
   3308c:	add	r1, r1, #14
   33090:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   33094:	mov	r3, #1
   33098:	mov	r0, r3
   3309c:	add	sp, sp, #8
   330a0:	pop	{r4, r5, r6, pc}
   330a4:	ldr	r5, [pc, #2616]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   330a8:	ldr	r1, [pc, #2616]	; 33ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe90>
   330ac:	ldr	r4, [r5]
   330b0:	mov	r0, r4
   330b4:	bl	13268 <strcmp@plt>
   330b8:	cmp	r0, #0
   330bc:	bne	33498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f840>
   330c0:	ldr	r1, [pc, #2808]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   330c4:	mov	r3, #1
   330c8:	ldrb	r2, [r1, #2]
   330cc:	orr	r2, r2, #96	; 0x60
   330d0:	strb	r2, [r1, #2]
   330d4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   330d8:	ldr	r3, [pc, #2564]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   330dc:	ldr	r0, [pc, #2568]	; 33aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe94>
   330e0:	ldr	r1, [r3]
   330e4:	bl	32a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edd0>
   330e8:	mov	r3, #1
   330ec:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   330f0:	ldr	r5, [pc, #2540]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   330f4:	ldr	r1, [pc, #2548]	; 33af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe98>
   330f8:	ldr	r4, [r5]
   330fc:	mov	r0, r4
   33100:	bl	13520 <strcasecmp@plt>
   33104:	cmp	r0, #0
   33108:	bne	334c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f870>
   3310c:	ldr	r2, [pc, #2732]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33110:	mov	r3, #1
   33114:	str	r0, [r2, #12]
   33118:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3311c:	ldr	r3, [pc, #2496]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33120:	ldr	r0, [pc, #2508]	; 33af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe9c>
   33124:	ldr	r1, [r3]
   33128:	bl	32a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edd0>
   3312c:	mov	r3, #1
   33130:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33134:	ldr	r5, [pc, #2492]	; 33af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea0>
   33138:	ldr	r0, [r5, #8]
   3313c:	cmp	r0, #0
   33140:	beq	33150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f4f8>
   33144:	bl	13364 <free@plt>
   33148:	mov	r3, #0
   3314c:	str	r3, [r5, #8]
   33150:	ldr	r3, [pc, #2444]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33154:	ldr	r4, [r3]
   33158:	cmp	r4, #0
   3315c:	beq	335b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f960>
   33160:	ldr	r1, [pc, #2440]	; 33af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe98>
   33164:	mov	r0, r4
   33168:	bl	13268 <strcmp@plt>
   3316c:	cmp	r0, #0
   33170:	beq	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   33174:	mov	r0, r4
   33178:	bl	135a4 <xstrdup@plt>
   3317c:	mov	r3, #1
   33180:	str	r0, [r5, #8]
   33184:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33188:	ldr	r4, [pc, #2608]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   3318c:	ldr	r6, [pc, #2384]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33190:	ldr	r1, [pc, #2404]	; 33afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea4>
   33194:	ldrb	r3, [r4, #4]
   33198:	ldr	r5, [r6]
   3319c:	bic	r3, r3, #12
   331a0:	mov	r0, r5
   331a4:	strb	r3, [r4, #4]
   331a8:	bl	13268 <strcmp@plt>
   331ac:	cmp	r0, #0
   331b0:	bne	3352c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8d4>
   331b4:	ldrb	r2, [r4, #4]
   331b8:	mov	r3, #1
   331bc:	orr	r2, r2, #4
   331c0:	strb	r2, [r4, #4]
   331c4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   331c8:	ldr	r2, [pc, #2352]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   331cc:	mov	r1, #0
   331d0:	mov	r3, #1
   331d4:	str	r1, [r2, #52]	; 0x34
   331d8:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   331dc:	ldr	r1, [pc, #2524]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   331e0:	mov	r3, #1
   331e4:	ldrb	r2, [r1, #5]
   331e8:	orr	r2, r2, r3
   331ec:	strb	r2, [r1, #5]
   331f0:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   331f4:	ldr	r1, [pc, #2500]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   331f8:	mov	r3, #1
   331fc:	ldrb	r2, [r1, #5]
   33200:	bic	r2, r2, #1
   33204:	strb	r2, [r1, #5]
   33208:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3320c:	ldr	r1, [pc, #2256]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33210:	ldr	r2, [pc, #2272]	; 33af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea0>
   33214:	mov	r3, #1
   33218:	ldr	r1, [r1]
   3321c:	str	r1, [r2, #20]
   33220:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33224:	ldr	r1, [pc, #2260]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33228:	mov	r2, #1
   3322c:	mov	r3, r2
   33230:	str	r2, [r1, #56]	; 0x38
   33234:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33238:	ldr	r5, [pc, #2212]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   3323c:	ldr	r4, [r5]
   33240:	cmp	r4, #0
   33244:	beq	33554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8fc>
   33248:	ldr	r1, [pc, #2208]	; 33af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe98>
   3324c:	mov	r0, r4
   33250:	bl	13268 <strcmp@plt>
   33254:	cmp	r0, #0
   33258:	bne	33568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f910>
   3325c:	ldr	r2, [pc, #2204]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33260:	mov	r3, #1
   33264:	str	r0, [r2, #28]
   33268:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3326c:	bl	135bc <bfd_elf32_arm_use_long_plt@plt>
   33270:	mov	r3, #1
   33274:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33278:	ldr	r2, [pc, #2176]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3327c:	mov	r1, #0
   33280:	mov	r3, #1
   33284:	str	r1, [r2, #48]	; 0x30
   33288:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3328c:	ldr	r1, [pc, #2156]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33290:	mov	r2, #1
   33294:	mov	r3, r2
   33298:	str	r2, [r1, #48]	; 0x30
   3329c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   332a0:	ldr	r3, [pc, #2108]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   332a4:	ldr	r0, [r3]
   332a8:	bl	22304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6ac>
   332ac:	mov	r3, #1
   332b0:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   332b4:	ldr	r1, [pc, #2308]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   332b8:	mov	r3, #1
   332bc:	ldrb	r2, [r1, #3]
   332c0:	bic	r2, r2, #192	; 0xc0
   332c4:	strb	r2, [r1, #3]
   332c8:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   332cc:	ldr	r1, [pc, #2284]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   332d0:	mov	r3, #1
   332d4:	ldrb	r2, [r1, #3]
   332d8:	bic	r2, r2, #128	; 0x80
   332dc:	orr	r2, r2, #64	; 0x40
   332e0:	strb	r2, [r1, #3]
   332e4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   332e8:	ldr	r2, [pc, #2256]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   332ec:	mov	r3, #1
   332f0:	ldrh	r1, [r2, #2]
   332f4:	ldr	r0, [r2, #116]	; 0x74
   332f8:	orr	r1, r1, #480	; 0x1e0
   332fc:	orr	r0, r0, #4
   33300:	str	r0, [r2, #116]	; 0x74
   33304:	strh	r1, [r2, #2]
   33308:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3330c:	ldr	r5, [pc, #2000]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33310:	ldr	r1, [pc, #2008]	; 33af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe98>
   33314:	ldr	r4, [r5]
   33318:	mov	r0, r4
   3331c:	bl	13268 <strcmp@plt>
   33320:	cmp	r0, #0
   33324:	bne	33504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8ac>
   33328:	ldr	r1, [pc, #2000]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3332c:	mov	r2, #1
   33330:	mov	r3, r2
   33334:	str	r2, [r1, #24]
   33338:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3333c:	ldr	r1, [pc, #1980]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33340:	mov	r2, #1
   33344:	mov	r3, r2
   33348:	str	r2, [r1, #20]
   3334c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33350:	ldr	r1, [pc, #1960]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33354:	mov	r2, #1
   33358:	mov	r3, r2
   3335c:	str	r2, [r1, #16]
   33360:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33364:	ldr	r1, [pc, #1912]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   33368:	ldr	r2, [pc, #1936]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3336c:	mov	r3, #1
   33370:	ldr	r1, [r1]
   33374:	str	r1, [r2, #12]
   33378:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3337c:	ldr	r2, [pc, #1916]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33380:	mov	r1, #0
   33384:	mov	r3, #1
   33388:	str	r1, [r2, #8]
   3338c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33390:	ldr	r1, [pc, #1896]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33394:	mov	r2, #1
   33398:	mov	r3, r2
   3339c:	str	r2, [r1, #8]
   333a0:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   333a4:	ldr	r1, [pc, #1876]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   333a8:	mov	r2, #1
   333ac:	mov	r3, r2
   333b0:	str	r2, [r1, #4]
   333b4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   333b8:	ldr	r1, [pc, #1828]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   333bc:	ldr	r2, [pc, #1852]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   333c0:	mov	r3, #1
   333c4:	ldr	r1, [r1]
   333c8:	str	r1, [r2]
   333cc:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   333d0:	ldr	r4, [pc, #1804]	; 33ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8c>
   333d4:	mov	r2, #0
   333d8:	add	r1, sp, #4
   333dc:	ldr	r0, [r4]
   333e0:	bl	13250 <bfd_scan_vma@plt>
   333e4:	ldr	r2, [sp, #4]
   333e8:	ldr	r3, [pc, #1808]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   333ec:	ldrb	r2, [r2]
   333f0:	cmp	r2, #0
   333f4:	str	r0, [r3, #64]	; 0x40
   333f8:	beq	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   333fc:	mov	r2, #5
   33400:	ldr	r1, [pc, #1788]	; 33b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1feac>
   33404:	mov	r0, #0
   33408:	bl	13460 <dcgettext@plt>
   3340c:	ldr	r1, [r4]
   33410:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   33414:	b	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   33418:	ldr	r2, [pc, #1760]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3341c:	mov	r1, #2
   33420:	mov	r3, #1
   33424:	str	r1, [r2, #16]
   33428:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3342c:	ldr	r1, [pc, #1740]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33430:	mov	r2, #1
   33434:	mov	r3, r2
   33438:	str	r2, [r1, #40]	; 0x28
   3343c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33440:	ldr	r1, [pc, #1720]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33444:	mov	r2, #1
   33448:	mov	r3, r2
   3344c:	str	r2, [r1, #32]
   33450:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33454:	ldr	r1, [pc, #1700]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33458:	mov	r2, #1
   3345c:	mov	r3, r2
   33460:	str	r2, [r1, #44]	; 0x2c
   33464:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33468:	ldr	r1, [pc, #1680]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3346c:	mov	r2, #1
   33470:	mov	r3, r2
   33474:	str	r2, [r1, #36]	; 0x24
   33478:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3347c:	ldr	r2, [pc, #1660]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33480:	mov	r1, #0
   33484:	mov	r3, #1
   33488:	str	r1, [r2, #44]	; 0x2c
   3348c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33490:	mov	r3, #0
   33494:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33498:	ldr	r1, [pc, #1640]	; 33b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1feb0>
   3349c:	mov	r0, r4
   334a0:	bl	13268 <strcmp@plt>
   334a4:	cmp	r0, #0
   334a8:	bne	335c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f96c>
   334ac:	ldr	r1, [pc, #1804]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   334b0:	mov	r3, #1
   334b4:	ldrb	r2, [r1, #2]
   334b8:	bic	r2, r2, #64	; 0x40
   334bc:	orr	r2, r2, #32
   334c0:	strb	r2, [r1, #2]
   334c4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   334c8:	ldr	r1, [pc, #1596]	; 33b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1feb4>
   334cc:	mov	r0, r4
   334d0:	bl	13520 <strcasecmp@plt>
   334d4:	cmp	r0, #0
   334d8:	beq	335a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f94c>
   334dc:	ldr	r1, [pc, #1580]	; 33b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1feb8>
   334e0:	mov	r0, r4
   334e4:	bl	13520 <strcasecmp@plt>
   334e8:	cmp	r0, #0
   334ec:	bne	33644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9ec>
   334f0:	ldr	r2, [pc, #1736]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   334f4:	mov	r1, #3
   334f8:	mov	r3, #1
   334fc:	str	r1, [r2, #12]
   33500:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33504:	ldr	r1, [pc, #1544]	; 33b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1febc>
   33508:	mov	r0, r4
   3350c:	bl	13268 <strcmp@plt>
   33510:	cmp	r0, #0
   33514:	bne	335f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f998>
   33518:	ldr	r2, [pc, #1504]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   3351c:	mov	r1, #2
   33520:	mov	r3, #1
   33524:	str	r1, [r2, #24]
   33528:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3352c:	ldr	r1, [pc, #1508]	; 33b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fec0>
   33530:	mov	r0, r5
   33534:	bl	13268 <strcmp@plt>
   33538:	cmp	r0, #0
   3353c:	bne	33618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9c0>
   33540:	ldrb	r2, [r4, #4]
   33544:	mov	r3, #1
   33548:	orr	r2, r2, #8
   3354c:	strb	r2, [r4, #4]
   33550:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33554:	ldr	r1, [pc, #1444]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33558:	mov	r2, #1
   3355c:	mov	r3, r2
   33560:	str	r2, [r1, #28]
   33564:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33568:	ldr	r1, [pc, #1452]	; 33b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fec4>
   3356c:	mov	r0, r4
   33570:	bl	13268 <strcmp@plt>
   33574:	cmp	r0, #0
   33578:	beq	33554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8fc>
   3357c:	mov	r0, r4
   33580:	ldr	r1, [pc, #1432]	; 33b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fec8>
   33584:	bl	13268 <strcmp@plt>
   33588:	cmp	r0, #0
   3358c:	bne	3371c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fac4>
   33590:	ldr	r2, [pc, #1384]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33594:	mov	r1, #2
   33598:	mov	r3, #1
   3359c:	str	r1, [r2, #28]
   335a0:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   335a4:	ldr	r2, [pc, #1556]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   335a8:	mov	r1, #5
   335ac:	mov	r3, #1
   335b0:	str	r1, [r2, #12]
   335b4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   335b8:	ldr	r4, [pc, #1380]	; 33b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fecc>
   335bc:	str	r4, [r3]
   335c0:	b	33174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f51c>
   335c4:	ldr	r1, [pc, #1372]	; 33b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fed0>
   335c8:	mov	r0, r4
   335cc:	bl	13268 <strcmp@plt>
   335d0:	cmp	r0, #0
   335d4:	bne	33678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa20>
   335d8:	ldr	r1, [pc, #1504]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   335dc:	mov	r3, #1
   335e0:	ldrb	r2, [r1, #5]
   335e4:	orr	r2, r2, #8
   335e8:	strb	r2, [r1, #5]
   335ec:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   335f0:	mov	r0, r4
   335f4:	ldr	r1, [pc, #1328]	; 33b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fed4>
   335f8:	bl	13268 <strcmp@plt>
   335fc:	cmp	r0, #0
   33600:	bne	336f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa98>
   33604:	ldr	r2, [pc, #1268]	; 33b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fea8>
   33608:	mov	r1, #3
   3360c:	mov	r3, #1
   33610:	str	r1, [r2, #24]
   33614:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33618:	mov	r0, r5
   3361c:	ldr	r1, [pc, #1292]	; 33b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fed8>
   33620:	bl	13268 <strcmp@plt>
   33624:	cmp	r0, #0
   33628:	bne	336fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1faa4>
   3362c:	ldrb	r2, [r4, #4]
   33630:	mov	r3, #1
   33634:	bic	r2, r2, #12
   33638:	orr	r2, r2, #12
   3363c:	strb	r2, [r4, #4]
   33640:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33644:	mov	r0, r4
   33648:	ldr	r1, [pc, #1252]	; 33b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fedc>
   3364c:	bl	13520 <strcasecmp@plt>
   33650:	cmp	r0, #0
   33654:	beq	335a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f94c>
   33658:	ldr	r1, [pc, #1240]	; 33b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fee0>
   3365c:	mov	r2, #5
   33660:	mov	r0, #0
   33664:	bl	13460 <dcgettext@plt>
   33668:	ldr	r1, [r5]
   3366c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   33670:	mov	r3, #1
   33674:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33678:	mov	r2, #14
   3367c:	ldr	r1, [pc, #1208]	; 33b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fee4>
   33680:	mov	r0, r4
   33684:	bl	13bb0 <strncmp@plt>
   33688:	subs	r2, r0, #0
   3368c:	beq	33048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f3f0>
   33690:	mov	r2, #17
   33694:	ldr	r1, [pc, #1188]	; 33b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fee8>
   33698:	mov	r0, r4
   3369c:	bl	13bb0 <strncmp@plt>
   336a0:	subs	r2, r0, #0
   336a4:	beq	33728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fad0>
   336a8:	mov	r2, #11
   336ac:	ldr	r1, [pc, #1168]	; 33b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1feec>
   336b0:	mov	r0, r4
   336b4:	bl	13bb0 <strncmp@plt>
   336b8:	subs	r6, r0, #0
   336bc:	beq	337a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb50>
   336c0:	ldr	r1, [pc, #1152]	; 33b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fef0>
   336c4:	mov	r0, r4
   336c8:	bl	13268 <strcmp@plt>
   336cc:	cmp	r0, #0
   336d0:	bne	33778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb20>
   336d4:	ldr	r1, [pc, #1252]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   336d8:	mov	r3, #1
   336dc:	ldr	r2, [r1, #4]
   336e0:	bic	r2, r2, #98304	; 0x18000
   336e4:	orr	r2, r2, #32768	; 0x8000
   336e8:	str	r2, [r1, #4]
   336ec:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   336f0:	mov	r2, #5
   336f4:	ldr	r1, [pc, #1104]	; 33b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fef4>
   336f8:	b	33660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa08>
   336fc:	mov	r2, #5
   33700:	ldr	r1, [pc, #1096]	; 33b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fef8>
   33704:	mov	r0, #0
   33708:	bl	13460 <dcgettext@plt>
   3370c:	ldr	r1, [r6]
   33710:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   33714:	mov	r3, #1
   33718:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3371c:	mov	r2, #5
   33720:	ldr	r1, [pc, #1068]	; 33b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fefc>
   33724:	b	33660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa08>
   33728:	add	r0, r4, #17
   3372c:	add	r1, sp, #4
   33730:	bl	137cc <strtoul@plt>
   33734:	ldr	r2, [pc, #928]	; 33adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe84>
   33738:	ldr	r3, [sp, #4]
   3373c:	str	r0, [r2, #100]	; 0x64
   33740:	ldrb	r3, [r3]
   33744:	cmp	r3, #0
   33748:	bne	33758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb00>
   3374c:	sub	r3, r0, #1
   33750:	tst	r3, r0
   33754:	beq	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   33758:	mov	r2, #5
   3375c:	ldr	r1, [pc, #1012]	; 33b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff00>
   33760:	mov	r0, #0
   33764:	bl	13460 <dcgettext@plt>
   33768:	ldr	r1, [r5]
   3376c:	add	r1, r1, #17
   33770:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   33774:	b	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   33778:	ldr	r1, [pc, #988]	; 33b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff04>
   3377c:	mov	r0, r4
   33780:	bl	13268 <strcmp@plt>
   33784:	cmp	r0, #0
   33788:	bne	3380c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbb4>
   3378c:	ldr	r1, [pc, #1068]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33790:	mov	r3, #1
   33794:	ldr	r2, [r1, #4]
   33798:	bic	r2, r2, #98304	; 0x18000
   3379c:	orr	r2, r2, #65536	; 0x10000
   337a0:	str	r2, [r1, #4]
   337a4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   337a8:	add	r0, r4, #11
   337ac:	mov	r2, r6
   337b0:	add	r1, sp, #4
   337b4:	bl	137cc <strtoul@plt>
   337b8:	ldr	r4, [pc, #1024]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   337bc:	ldr	r3, [sp, #4]
   337c0:	str	r0, [r4, #16]
   337c4:	ldrb	r3, [r3]
   337c8:	cmp	r3, #0
   337cc:	lsreq	r0, r0, #31
   337d0:	movne	r0, #1
   337d4:	cmp	r0, #0
   337d8:	beq	337f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fba0>
   337dc:	ldr	r1, [pc, #892]	; 33b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff08>
   337e0:	mov	r0, r6
   337e4:	mov	r2, #5
   337e8:	bl	13460 <dcgettext@plt>
   337ec:	ldr	r1, [r5]
   337f0:	add	r1, r1, #11
   337f4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   337f8:	ldr	r3, [r4, #16]
   337fc:	cmp	r3, #0
   33800:	mvneq	r3, #0
   33804:	streq	r3, [r4, #16]
   33808:	b	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f43c>
   3380c:	ldr	r1, [pc, #848]	; 33b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff0c>
   33810:	mov	r0, r4
   33814:	bl	13268 <strcmp@plt>
   33818:	cmp	r0, #0
   3381c:	bne	33838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbe0>
   33820:	ldr	r1, [pc, #920]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33824:	mov	r3, #1
   33828:	ldr	r2, [r1, #116]	; 0x74
   3382c:	orr	r2, r2, #16777216	; 0x1000000
   33830:	str	r2, [r1, #116]	; 0x74
   33834:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33838:	ldr	r1, [pc, #808]	; 33b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff10>
   3383c:	mov	r0, r4
   33840:	bl	13268 <strcmp@plt>
   33844:	cmp	r0, #0
   33848:	bne	33864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc0c>
   3384c:	ldr	r1, [pc, #876]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33850:	mov	r3, #1
   33854:	ldr	r2, [r1, #116]	; 0x74
   33858:	orr	r2, r2, #2
   3385c:	str	r2, [r1, #116]	; 0x74
   33860:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33864:	ldr	r1, [pc, #768]	; 33b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff14>
   33868:	mov	r0, r4
   3386c:	bl	13268 <strcmp@plt>
   33870:	cmp	r0, #0
   33874:	bne	33890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc38>
   33878:	ldr	r1, [pc, #832]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   3387c:	mov	r3, #1
   33880:	ldr	r2, [r1, #116]	; 0x74
   33884:	orr	r2, r2, #32
   33888:	str	r2, [r1, #116]	; 0x74
   3388c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33890:	ldr	r1, [pc, #728]	; 33b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff18>
   33894:	mov	r0, r4
   33898:	bl	13268 <strcmp@plt>
   3389c:	cmp	r0, #0
   338a0:	bne	338bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc64>
   338a4:	ldr	r1, [pc, #788]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   338a8:	mov	r3, #1
   338ac:	ldr	r2, [r1, #116]	; 0x74
   338b0:	orr	r2, r2, #1024	; 0x400
   338b4:	str	r2, [r1, #116]	; 0x74
   338b8:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   338bc:	ldr	r1, [pc, #688]	; 33b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff1c>
   338c0:	mov	r0, r4
   338c4:	bl	13268 <strcmp@plt>
   338c8:	cmp	r0, #0
   338cc:	bne	338e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc90>
   338d0:	ldr	r1, [pc, #744]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   338d4:	mov	r3, #1
   338d8:	ldr	r2, [r1, #116]	; 0x74
   338dc:	orr	r2, r2, #16
   338e0:	str	r2, [r1, #116]	; 0x74
   338e4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   338e8:	ldr	r1, [pc, #648]	; 33b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff20>
   338ec:	mov	r0, r4
   338f0:	bl	13268 <strcmp@plt>
   338f4:	cmp	r0, #0
   338f8:	bne	33914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fcbc>
   338fc:	ldr	r1, [pc, #700]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33900:	mov	r3, #1
   33904:	ldr	r2, [r1, #116]	; 0x74
   33908:	orr	r2, r2, #2048	; 0x800
   3390c:	str	r2, [r1, #116]	; 0x74
   33910:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33914:	ldr	r1, [pc, #608]	; 33b7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff24>
   33918:	mov	r0, r4
   3391c:	bl	13268 <strcmp@plt>
   33920:	cmp	r0, #0
   33924:	bne	33940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fce8>
   33928:	ldr	r1, [pc, #656]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   3392c:	mov	r3, #1
   33930:	ldr	r2, [r1, #116]	; 0x74
   33934:	orr	r2, r2, #8
   33938:	str	r2, [r1, #116]	; 0x74
   3393c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33940:	ldr	r1, [pc, #568]	; 33b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff28>
   33944:	mov	r0, r4
   33948:	bl	13268 <strcmp@plt>
   3394c:	cmp	r0, #0
   33950:	bne	3396c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd14>
   33954:	ldr	r1, [pc, #612]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33958:	mov	r3, #1
   3395c:	ldr	r2, [r1, #116]	; 0x74
   33960:	orr	r2, r2, #64	; 0x40
   33964:	str	r2, [r1, #116]	; 0x74
   33968:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   3396c:	ldr	r1, [pc, #528]	; 33b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff2c>
   33970:	mov	r0, r4
   33974:	bl	13268 <strcmp@plt>
   33978:	cmp	r0, #0
   3397c:	bne	33998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd40>
   33980:	ldr	r1, [pc, #568]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33984:	mov	r3, #1
   33988:	ldr	r2, [r1, #116]	; 0x74
   3398c:	orr	r2, r2, #4096	; 0x1000
   33990:	str	r2, [r1, #116]	; 0x74
   33994:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33998:	ldr	r1, [pc, #488]	; 33b88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff30>
   3399c:	mov	r0, r4
   339a0:	bl	13268 <strcmp@plt>
   339a4:	cmp	r0, #0
   339a8:	bne	339c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd70>
   339ac:	ldr	r2, [pc, #524]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   339b0:	mov	r3, #1
   339b4:	ldrd	r0, [r2, #112]	; 0x70
   339b8:	orr	r0, r0, #8
   339bc:	orr	r1, r1, r3
   339c0:	strd	r0, [r2, #112]	; 0x70
   339c4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   339c8:	ldr	r1, [pc, #444]	; 33b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff34>
   339cc:	mov	r0, r4
   339d0:	bl	13268 <strcmp@plt>
   339d4:	cmp	r0, #0
   339d8:	bne	339f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fda0>
   339dc:	ldr	r2, [pc, #476]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   339e0:	mov	r3, #1
   339e4:	ldrd	r0, [r2, #112]	; 0x70
   339e8:	bic	r0, r0, #8
   339ec:	bic	r1, r1, #1
   339f0:	strd	r0, [r2, #112]	; 0x70
   339f4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   339f8:	ldr	r1, [pc, #400]	; 33b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff38>
   339fc:	mov	r0, r4
   33a00:	bl	13268 <strcmp@plt>
   33a04:	cmp	r0, #0
   33a08:	bne	33a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fdd0>
   33a0c:	ldr	r2, [pc, #428]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33a10:	mov	r3, #1
   33a14:	ldrd	r0, [r2, #112]	; 0x70
   33a18:	orr	r0, r0, r3
   33a1c:	orr	r1, r1, #128	; 0x80
   33a20:	strd	r0, [r2, #112]	; 0x70
   33a24:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33a28:	ldr	r1, [pc, #356]	; 33b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff3c>
   33a2c:	mov	r0, r4
   33a30:	bl	13268 <strcmp@plt>
   33a34:	cmp	r0, #0
   33a38:	bne	33a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fdfc>
   33a3c:	ldr	r1, [pc, #380]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33a40:	mov	r3, #1
   33a44:	ldrb	r2, [r1, #4]
   33a48:	orr	r2, r2, #64	; 0x40
   33a4c:	strb	r2, [r1, #4]
   33a50:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33a54:	ldr	r1, [pc, #316]	; 33b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff40>
   33a58:	mov	r0, r4
   33a5c:	bl	13268 <strcmp@plt>
   33a60:	cmp	r0, #0
   33a64:	bne	33a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe28>
   33a68:	ldr	r1, [pc, #336]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33a6c:	mov	r3, #1
   33a70:	ldrb	r2, [r1, #4]
   33a74:	bic	r2, r2, #64	; 0x40
   33a78:	strb	r2, [r1, #4]
   33a7c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33a80:	ldr	r1, [pc, #276]	; 33b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff44>
   33a84:	mov	r0, r4
   33a88:	bl	13268 <strcmp@plt>
   33a8c:	cmp	r0, #0
   33a90:	bne	33aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe54>
   33a94:	ldr	r1, [pc, #292]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33a98:	mov	r3, #1
   33a9c:	ldrb	r2, [r1]
   33aa0:	orr	r2, r2, #8
   33aa4:	strb	r2, [r1]
   33aa8:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33aac:	ldr	r1, [pc, #236]	; 33ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff48>
   33ab0:	mov	r0, r4
   33ab4:	bl	13268 <strcmp@plt>
   33ab8:	cmp	r0, #0
   33abc:	bne	33bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff74>
   33ac0:	ldr	r1, [pc, #248]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33ac4:	mov	r3, #1
   33ac8:	ldrb	r2, [r1, #3]
   33acc:	orr	r2, r2, #16
   33ad0:	strb	r2, [r1, #3]
   33ad4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33ad8:	andeq	r0, r0, r9, asr #2
   33adc:	andeq	r8, ip, r4, ror r1
   33ae0:	andeq	r4, r8, r8, lsr r4
   33ae4:	andeq	r7, ip, r8, lsl #20
   33ae8:	andeq	r4, r8, r0, lsl r4
   33aec:	andeq	r7, ip, r8, lsl lr
   33af0:	andeq	sp, r4, r0, lsl #14
   33af4:	andeq	r7, ip, r4, lsl lr
   33af8:	andeq	r7, ip, r8, lsl #28
   33afc:	ldrdeq	r4, [r8], -ip
   33b00:	andeq	r7, ip, r4, lsr #8
   33b04:			; <UNDEFINED> instruction: 0x0004bbb8
   33b08:	andeq	r4, r8, r8, lsl r4
   33b0c:	andeq	r4, r8, r4, lsl #7
   33b10:	andeq	r4, r8, ip, lsl #7
   33b14:	strdeq	r4, [r8], -r0
   33b18:	andeq	r4, r8, r4, ror #7
   33b1c:	strdeq	fp, [r4], -ip
   33b20:	muleq	r4, ip, r6
   33b24:	andeq	r2, r5, ip, ror #6
   33b28:	andeq	r4, r8, r0, lsr #8
   33b2c:	strdeq	r4, [r8], -r8
   33b30:	andeq	r4, r8, r8, ror #7
   33b34:	muleq	r8, r8, r3
   33b38:	andeq	r4, r8, r4, lsr #7
   33b3c:	andeq	r4, r8, r8, lsr #8
   33b40:	andeq	r4, r8, r0, ror #8
   33b44:	muleq	r8, ip, r4
   33b48:	andeq	r4, r8, r8, asr #9
   33b4c:	andeq	r4, r8, r0, lsl #12
   33b50:	strdeq	r4, [r8], -r0
   33b54:	andeq	r4, r8, r8, lsr #12
   33b58:	andeq	r4, r8, r4, ror r4
   33b5c:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   33b60:	andeq	r4, r8, r8, lsr #9
   33b64:	andeq	r4, r8, r0, ror #9
   33b68:	andeq	r3, r4, r4, lsr r9
   33b6c:	andeq	r4, r8, ip, ror #9
   33b70:	strdeq	r4, [r8], -r8
   33b74:	andeq	r4, r8, r4, lsl #10
   33b78:	andeq	r4, r8, r0, lsl r5
   33b7c:	andeq	r4, r8, r0, lsr #10
   33b80:	andeq	r4, r8, ip, lsr #10
   33b84:	andeq	r4, r8, r8, lsr r5
   33b88:	andeq	r4, r8, r0, asr #10
   33b8c:	andeq	r4, r8, r4, asr #10
   33b90:	andeq	r4, r8, ip, asr #10
   33b94:	andeq	r4, r8, r4, asr r5
   33b98:	andeq	r4, r8, r0, ror #10
   33b9c:	andeq	r4, r8, ip, ror #10
   33ba0:	andeq	r4, r8, r8, ror r5
   33ba4:	andeq	r4, r8, r0, lsl #11
   33ba8:	andeq	r4, r8, r8, lsl #11
   33bac:	muleq	r8, r8, r5
   33bb0:	andeq	r4, r8, r8, lsr #11
   33bb4:			; <UNDEFINED> instruction: 0x000845b0
   33bb8:			; <UNDEFINED> instruction: 0x000845bc
   33bbc:	andeq	r4, r8, r4, asr #11
   33bc0:	andeq	r8, ip, ip, lsl #1
   33bc4:	andeq	r4, r8, ip, asr #11
   33bc8:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   33bcc:	ldr	r1, [pc, #-48]	; 33ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff4c>
   33bd0:	mov	r0, r4
   33bd4:	bl	13268 <strcmp@plt>
   33bd8:	cmp	r0, #0
   33bdc:	bne	33bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ffa0>
   33be0:	ldr	r1, [pc, #-40]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33be4:	mov	r3, #1
   33be8:	ldrb	r2, [r1, #3]
   33bec:	bic	r2, r2, #16
   33bf0:	strb	r2, [r1, #3]
   33bf4:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33bf8:	ldr	r1, [pc, #-88]	; 33ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff50>
   33bfc:	mov	r0, r4
   33c00:	bl	13268 <strcmp@plt>
   33c04:	cmp	r0, #0
   33c08:	bne	33c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ffcc>
   33c0c:	ldr	r1, [pc, #-84]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33c10:	mov	r3, #1
   33c14:	ldrb	r2, [r1, #3]
   33c18:	orr	r2, r2, #32
   33c1c:	strb	r2, [r1, #3]
   33c20:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33c24:	ldr	r1, [pc, #-128]	; 33bac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff54>
   33c28:	mov	r0, r4
   33c2c:	bl	13268 <strcmp@plt>
   33c30:	cmp	r0, #0
   33c34:	bne	33c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fff8>
   33c38:	ldr	r1, [pc, #-128]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33c3c:	mov	r3, #1
   33c40:	ldrb	r2, [r1, #3]
   33c44:	bic	r2, r2, #32
   33c48:	strb	r2, [r1, #3]
   33c4c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33c50:	ldr	r1, [pc, #-168]	; 33bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff58>
   33c54:	mov	r0, r4
   33c58:	bl	13268 <strcmp@plt>
   33c5c:	cmp	r0, #0
   33c60:	bne	33c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20028>
   33c64:	ldr	r1, [pc, #-172]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33c68:	mov	r3, #1
   33c6c:	ldrb	r2, [r1, #2]
   33c70:	bic	r2, r2, #4
   33c74:	orr	r2, r2, #2
   33c78:	strb	r2, [r1, #2]
   33c7c:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33c80:	ldr	r1, [pc, #-212]	; 33bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff5c>
   33c84:	mov	r0, r4
   33c88:	bl	13268 <strcmp@plt>
   33c8c:	cmp	r0, #0
   33c90:	bne	33cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20058>
   33c94:	ldr	r1, [pc, #-220]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33c98:	mov	r3, #1
   33c9c:	ldrb	r2, [r1, #2]
   33ca0:	bic	r2, r2, #2
   33ca4:	orr	r2, r2, #4
   33ca8:	strb	r2, [r1, #2]
   33cac:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33cb0:	ldr	r1, [pc, #-256]	; 33bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff60>
   33cb4:	mov	r0, r4
   33cb8:	bl	13268 <strcmp@plt>
   33cbc:	cmp	r0, #0
   33cc0:	bne	33cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20084>
   33cc4:	ldr	r1, [pc, #-268]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33cc8:	mov	r3, #1
   33ccc:	ldrb	r2, [r1, #4]
   33cd0:	orr	r2, r2, #2
   33cd4:	strb	r2, [r1, #4]
   33cd8:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33cdc:	ldr	r1, [pc, #-296]	; 33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff64>
   33ce0:	mov	r0, r4
   33ce4:	bl	13268 <strcmp@plt>
   33ce8:	cmp	r0, #0
   33cec:	bne	33d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x200b0>
   33cf0:	ldr	r1, [pc, #-312]	; 33bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff68>
   33cf4:	mov	r3, #1
   33cf8:	ldrb	r2, [r1, #4]
   33cfc:	bic	r2, r2, #2
   33d00:	strb	r2, [r1, #4]
   33d04:	b	33098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f440>
   33d08:	mov	r0, r4
   33d0c:	ldr	r1, [pc, #-336]	; 33bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff6c>
   33d10:	bl	13268 <strcmp@plt>
   33d14:	cmp	r0, #0
   33d18:	beq	33cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20098>
   33d1c:	mov	r2, #5
   33d20:	ldr	r1, [pc, #-352]	; 33bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff70>
   33d24:	b	33660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa08>
   33d28:	push	{r4, r5, r6, r7, r8, lr}
   33d2c:	mov	r7, r1
   33d30:	mov	r5, r0
   33d34:	add	r1, r0, #6
   33d38:	ldr	r0, [r7]
   33d3c:	mov	r6, r3
   33d40:	mov	r4, r2
   33d44:	bl	134fc <xrealloc@plt>
   33d48:	ldr	r2, [pc, #76]	; 33d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20144>
   33d4c:	add	r4, r4, #35	; 0x23
   33d50:	ldrh	lr, [r2, #4]
   33d54:	lsl	r4, r4, #4
   33d58:	mov	r1, r4
   33d5c:	mov	r3, r0
   33d60:	add	ip, r0, r5
   33d64:	ldr	r0, [r2]
   33d68:	str	r3, [r7]
   33d6c:	str	r0, [r3, r5]
   33d70:	strh	lr, [ip, #4]
   33d74:	ldr	r0, [r6]
   33d78:	bl	134fc <xrealloc@plt>
   33d7c:	mov	r2, #560	; 0x230
   33d80:	ldr	r1, [pc, #24]	; 33da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20148>
   33d84:	mov	r3, r0
   33d88:	sub	r0, r4, #560	; 0x230
   33d8c:	str	r3, [r6]
   33d90:	add	r0, r3, r0
   33d94:	pop	{r4, r5, r6, r7, r8, lr}
   33d98:	b	133b8 <memcpy@plt>
   33d9c:	andeq	r4, r8, r4, asr r6
   33da0:	andeq	r2, r5, ip, lsl #7
   33da4:	push	{r4, r5, r6, r7, r8, lr}
   33da8:	ldr	r4, [r1]
   33dac:	cmp	r4, #0
   33db0:	beq	33e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x201dc>
   33db4:	ldr	r8, [pc, #236]	; 33ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20250>
   33db8:	ldr	r7, [pc, #236]	; 33eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20254>
   33dbc:	ldr	r6, [pc, #236]	; 33eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20258>
   33dc0:	mov	r5, r0
   33dc4:	ldr	r3, [r4, #4]
   33dc8:	cmp	r3, #15
   33dcc:	ldrls	pc, [pc, r3, lsl #2]
   33dd0:	b	33e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20240>
   33dd4:	andeq	r3, r3, r4, lsl lr
   33dd8:	andeq	r3, r3, r8, lsr #28
   33ddc:	andeq	r3, r3, r8, lsr #28
   33de0:	andeq	r3, r3, r8, lsr #28
   33de4:	andeq	r3, r3, r0, lsl #29
   33de8:	andeq	r3, r3, r4, asr lr
   33dec:	andeq	r3, r3, r8, lsr #28
   33df0:	andeq	r3, r3, r8, lsr #28
   33df4:	andeq	r3, r3, r8, lsr #28
   33df8:	andeq	r3, r3, r8, lsr #28
   33dfc:	andeq	r3, r3, r8, lsr #28
   33e00:	andeq	r3, r3, r8, lsr #28
   33e04:	andeq	r3, r3, r8, lsr #28
   33e08:	andeq	r3, r3, r4, lsl lr
   33e0c:	muleq	r3, r8, lr
   33e10:	andeq	r3, r3, ip, lsr lr
   33e14:	add	r1, r4, #8
   33e18:	mov	r0, r5
   33e1c:	bl	33da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2014c>
   33e20:	cmp	r0, #0
   33e24:	popne	{r4, r5, r6, r7, r8, pc}
   33e28:	ldr	r4, [r4]
   33e2c:	cmp	r4, #0
   33e30:	bne	33dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2016c>
   33e34:	mov	r0, #0
   33e38:	pop	{r4, r5, r6, r7, r8, pc}
   33e3c:	mov	r1, r6
   33e40:	mov	r0, r5
   33e44:	bl	33da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2014c>
   33e48:	cmp	r0, #0
   33e4c:	beq	33e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x201d0>
   33e50:	pop	{r4, r5, r6, r7, r8, pc}
   33e54:	ldr	r2, [r4, #8]
   33e58:	ldr	r3, [r5, #8]
   33e5c:	cmp	r2, r3
   33e60:	bne	33e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x201d0>
   33e64:	ldr	r3, [r5, #4]
   33e68:	ldr	r2, [r4]
   33e6c:	mov	r0, #1
   33e70:	str	r2, [r3]
   33e74:	ldr	r3, [r5]
   33e78:	str	r3, [r4]
   33e7c:	pop	{r4, r5, r6, r7, r8, pc}
   33e80:	add	r1, r4, #24
   33e84:	mov	r0, r5
   33e88:	bl	33da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2014c>
   33e8c:	cmp	r0, #0
   33e90:	beq	33e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x201d0>
   33e94:	pop	{r4, r5, r6, r7, r8, pc}
   33e98:	mov	r1, r8
   33e9c:	mov	r0, r7
   33ea0:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   33ea4:	b	33e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x201d0>
   33ea8:	andeq	r0, r0, fp, lsl r1
   33eac:	andeq	r4, r8, ip, asr r6
   33eb0:	andeq	r8, ip, r4, ror r0
   33eb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   33eb8:	sub	sp, sp, #12
   33ebc:	ldrb	r6, [r2, #36]	; 0x24
   33ec0:	ands	r5, r6, #1
   33ec4:	beq	33f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20340>
   33ec8:	mov	r9, r0
   33ecc:	ldr	r0, [r1, #4]
   33ed0:	ldr	r8, [r2, #8]
   33ed4:	mov	r5, r1
   33ed8:	mov	r4, r2
   33edc:	bl	137d8 <strlen@plt>
   33ee0:	mov	r7, r0
   33ee4:	mov	r0, r8
   33ee8:	bl	137d8 <strlen@plt>
   33eec:	tst	r6, #2
   33ef0:	add	r7, r7, r0
   33ef4:	bne	33fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2034c>
   33ef8:	mov	r0, r9
   33efc:	bl	137d8 <strlen@plt>
   33f00:	add	r6, r7, #8
   33f04:	add	r0, r0, r6
   33f08:	bl	13574 <xmalloc@plt>
   33f0c:	str	r9, [sp]
   33f10:	mov	r3, r8
   33f14:	ldr	r2, [r5, #4]
   33f18:	ldr	r1, [pc, #216]	; 33ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203a0>
   33f1c:	mov	r6, r0
   33f20:	bl	13a00 <sprintf@plt>
   33f24:	mov	r1, r4
   33f28:	mov	r0, r6
   33f2c:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   33f30:	subs	r5, r0, #0
   33f34:	beq	33fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2037c>
   33f38:	str	r6, [r4, #8]
   33f3c:	mov	r1, #1
   33f40:	ldr	r0, [r4, #16]
   33f44:	bl	13ae4 <bfd_check_format@plt>
   33f48:	cmp	r0, #0
   33f4c:	beq	33fc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2036c>
   33f50:	ldr	r3, [r4, #16]
   33f54:	ldr	r3, [r3, #40]	; 0x28
   33f58:	tst	r3, #2048	; 0x800
   33f5c:	beq	33fc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2036c>
   33f60:	ldrb	r3, [r4, #36]	; 0x24
   33f64:	and	r2, r3, #5
   33f68:	cmp	r2, #5
   33f6c:	beq	33f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20328>
   33f70:	ldr	r1, [pc, #132]	; 33ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203a4>
   33f74:	ldr	r0, [pc, #132]	; 34000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203a8>
   33f78:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   33f7c:	ldrb	r3, [r4, #36]	; 0x24
   33f80:	tst	r3, #2
   33f84:	beq	33fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20390>
   33f88:	mov	r1, r8
   33f8c:	ldr	r0, [r4, #16]
   33f90:	bl	13a54 <bfd_elf_set_dt_needed_name@plt>
   33f94:	mov	r5, #1
   33f98:	mov	r0, r5
   33f9c:	add	sp, sp, #12
   33fa0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   33fa4:	add	r0, r7, #2
   33fa8:	bl	13574 <xmalloc@plt>
   33fac:	mov	r3, r8
   33fb0:	ldr	r2, [r5, #4]
   33fb4:	ldr	r1, [pc, #72]	; 34004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203ac>
   33fb8:	mov	r6, r0
   33fbc:	bl	13a00 <sprintf@plt>
   33fc0:	b	33f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x202cc>
   33fc4:	mov	r5, #1
   33fc8:	mov	r0, r5
   33fcc:	add	sp, sp, #12
   33fd0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   33fd4:	mov	r0, r6
   33fd8:	bl	13364 <free@plt>
   33fdc:	mov	r0, r5
   33fe0:	add	sp, sp, #12
   33fe4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   33fe8:	ldr	r0, [r4, #8]
   33fec:	bl	1367c <lbasename@plt>
   33ff0:	mov	r8, r0
   33ff4:	b	33f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20330>
   33ff8:	andeq	r4, r8, r4, ror r6
   33ffc:	andeq	r0, r0, ip, lsl #18
   34000:	andeq	r4, r8, ip, asr r6
   34004:	muleq	r8, r8, fp
   34008:	push	{r4, r5, r6, r7, r8, lr}
   3400c:	ldr	r5, [pc, #384]	; 34194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2053c>
   34010:	ldr	r1, [pc, #384]	; 34198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20540>
   34014:	ldr	r6, [r5, #48]	; 0x30
   34018:	ldr	r3, [r6, #4]
   3401c:	ldr	r7, [r3]
   34020:	mov	r0, r7
   34024:	bl	131f0 <strstr@plt>
   34028:	cmp	r0, #0
   3402c:	beq	34160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20508>
   34030:	ldr	r4, [pc, #356]	; 3419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20544>
   34034:	ldr	r0, [r4, #20]
   34038:	cmp	r0, #0
   3403c:	beq	34074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2041c>
   34040:	mov	r1, r7
   34044:	bl	133dc <bfd_openr@plt>
   34048:	ldr	r6, [pc, #336]	; 341a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20548>
   3404c:	cmp	r0, #0
   34050:	mov	r3, r0
   34054:	str	r0, [r6, #60]	; 0x3c
   34058:	beq	34178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20520>
   3405c:	mov	r0, r3
   34060:	mov	r1, #1
   34064:	bl	13ae4 <bfd_check_format@plt>
   34068:	cmp	r0, #0
   3406c:	beq	34148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x204f0>
   34070:	ldr	r6, [r5, #48]	; 0x30
   34074:	mov	r0, r6
   34078:	ldr	r2, [pc, #288]	; 341a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20548>
   3407c:	ldr	r1, [pc, #272]	; 34194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2053c>
   34080:	bl	1370c <bfd_elf32_arm_set_target_params@plt>
   34084:	mov	r2, #0
   34088:	mov	r1, #3
   3408c:	ldr	r0, [pc, #272]	; 341a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2054c>
   34090:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   34094:	ldr	r1, [r5, #48]	; 0x30
   34098:	mov	r6, r0
   3409c:	ldr	r0, [pc, #256]	; 341a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2054c>
   340a0:	str	r6, [r4]
   340a4:	bl	13628 <bfd_create@plt>
   340a8:	ldr	r3, [r4]
   340ac:	str	r0, [r6, #16]
   340b0:	ldr	r6, [r3, #16]
   340b4:	cmp	r6, #0
   340b8:	beq	340f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20498>
   340bc:	ldr	r3, [r6, #4]
   340c0:	ldr	r0, [r5, #48]	; 0x30
   340c4:	ldr	r7, [r3, #340]	; 0x154
   340c8:	bl	13814 <bfd_get_arch@plt>
   340cc:	mov	r8, r0
   340d0:	ldr	r0, [r5, #48]	; 0x30
   340d4:	bl	138ec <bfd_get_mach@plt>
   340d8:	mov	r1, r8
   340dc:	mov	r2, r0
   340e0:	mov	r0, r6
   340e4:	blx	r7
   340e8:	cmp	r0, #0
   340ec:	bne	34108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x204b0>
   340f0:	mov	r2, #5
   340f4:	ldr	r1, [pc, #172]	; 341a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20550>
   340f8:	mov	r0, #0
   340fc:	bl	13460 <dcgettext@plt>
   34100:	pop	{r4, r5, r6, r7, r8, lr}
   34104:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34108:	ldr	r3, [r4]
   3410c:	mov	r0, r3
   34110:	ldr	r2, [r3, #16]
   34114:	ldr	r3, [r2, #40]	; 0x28
   34118:	orr	r3, r3, #131072	; 0x20000
   3411c:	str	r3, [r2, #40]	; 0x28
   34120:	bl	22fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf394>
   34124:	ldr	r3, [r4]
   34128:	ldr	r1, [pc, #100]	; 34194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2053c>
   3412c:	ldr	r0, [r3, #16]
   34130:	bl	138e0 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>
   34134:	ldr	r3, [r4]
   34138:	ldr	r1, [pc, #84]	; 34194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2053c>
   3413c:	pop	{r4, r5, r6, r7, r8, lr}
   34140:	ldr	r0, [r3, #16]
   34144:	b	1364c <bfd_elf32_arm_get_bfd_for_interworking@plt>
   34148:	mov	r2, #5
   3414c:	ldr	r1, [pc, #88]	; 341ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20554>
   34150:	bl	13460 <dcgettext@plt>
   34154:	ldr	r1, [r4, #20]
   34158:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3415c:	b	34070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20418>
   34160:	ldr	r1, [pc, #72]	; 341b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20558>
   34164:	mov	r2, #5
   34168:	bl	13460 <dcgettext@plt>
   3416c:	ldr	r1, [pc, #64]	; 341b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2055c>
   34170:	pop	{r4, r5, r6, r7, r8, lr}
   34174:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34178:	mov	r2, #5
   3417c:	ldr	r1, [pc, #52]	; 341b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20560>
   34180:	bl	13460 <dcgettext@plt>
   34184:	ldr	r1, [r4, #20]
   34188:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3418c:	ldr	r3, [r6, #60]	; 0x3c
   34190:	b	3405c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20404>
   34194:	andeq	r8, ip, ip, lsl #1
   34198:	andeq	r5, r8, r8, rrx
   3419c:	andeq	r7, ip, r8, lsl #28
   341a0:	andeq	r7, ip, r4, lsr #8
   341a4:	andeq	r4, r8, r4, lsl r7
   341a8:	andeq	r4, r8, r4, lsr #14
   341ac:	andeq	r4, r8, ip, ror #13
   341b0:	andeq	r4, r8, r4, lsl #13
   341b4:	andeq	r4, r8, ip, asr #13
   341b8:	ldrdeq	r4, [r8], -r0
   341bc:	ldr	r3, [pc, #464]	; 34394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2073c>
   341c0:	push	{r4, r5, r6, lr}
   341c4:	sub	sp, sp, #8
   341c8:	ldr	r4, [r3]
   341cc:	cmp	r4, #0
   341d0:	beq	341fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205a4>
   341d4:	ldr	r5, [pc, #444]	; 34398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20740>
   341d8:	ldr	r0, [r4, #16]
   341dc:	mov	r1, r5
   341e0:	bl	135f8 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>
   341e4:	ldr	r0, [r4, #16]
   341e8:	mov	r1, r5
   341ec:	bl	1334c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>
   341f0:	ldr	r4, [r4, #24]
   341f4:	cmp	r4, #0
   341f8:	bne	341d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20580>
   341fc:	ldr	r4, [pc, #404]	; 34398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20740>
   34200:	ldrb	r3, [r4]
   34204:	and	r3, r3, #3
   34208:	cmp	r3, #2
   3420c:	beq	34238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205e0>
   34210:	ldr	r3, [pc, #388]	; 3439c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20744>
   34214:	ldr	r3, [r3]
   34218:	ldr	r3, [r3, #16]
   3421c:	ldr	r3, [r3, #100]	; 0x64
   34220:	cmp	r3, #0
   34224:	beq	34238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205e0>
   34228:	mov	r0, r4
   3422c:	bl	139f4 <elf32_arm_build_stubs@plt>
   34230:	cmp	r0, #0
   34234:	beq	34360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20708>
   34238:	ldr	r5, [pc, #352]	; 343a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20748>
   3423c:	bl	2d638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199e0>
   34240:	ldr	r2, [r5]
   34244:	cmp	r2, #0
   34248:	beq	3431c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206c4>
   3424c:	mov	ip, #1
   34250:	mov	r3, #0
   34254:	mov	r1, r2
   34258:	ldr	r0, [r4, #28]
   3425c:	mov	r2, r3
   34260:	str	ip, [sp]
   34264:	bl	13640 <bfd_link_hash_lookup@plt>
   34268:	cmp	r0, #0
   3426c:	beq	34280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20628>
   34270:	ldrb	r3, [r0, #12]
   34274:	sub	r3, r3, #3
   34278:	cmp	r3, #1
   3427c:	bls	342a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20648>
   34280:	mov	r2, #5
   34284:	ldr	r1, [pc, #280]	; 343a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2074c>
   34288:	mov	r0, #0
   3428c:	bl	13460 <dcgettext@plt>
   34290:	ldr	r1, [r5]
   34294:	add	sp, sp, #8
   34298:	pop	{r4, r5, r6, lr}
   3429c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   342a0:	ldr	r1, [r0, #20]
   342a4:	ldr	r3, [r1, #60]	; 0x3c
   342a8:	cmp	r3, #0
   342ac:	beq	34280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20628>
   342b0:	ldr	r2, [r0, #24]
   342b4:	ldr	r0, [r1, #56]	; 0x38
   342b8:	ldr	r1, [r3, #28]
   342bc:	ldr	r3, [pc, #216]	; 3439c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20744>
   342c0:	add	r2, r2, r0
   342c4:	ldr	ip, [pc, #220]	; 343a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20750>
   342c8:	add	r2, r2, r1
   342cc:	add	r0, r3, #26
   342d0:	strh	ip, [r3, #24]
   342d4:	orr	r2, r2, #1
   342d8:	ldr	r1, [pc, #204]	; 343ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20754>
   342dc:	bl	13a00 <sprintf@plt>
   342e0:	ldr	r3, [r5]
   342e4:	ldr	r6, [pc, #196]	; 343b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20758>
   342e8:	cmp	r3, #0
   342ec:	beq	3430c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   342f0:	ldr	r3, [r6, #4]
   342f4:	cmp	r3, #0
   342f8:	beq	3430c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   342fc:	ldr	r3, [pc, #176]	; 343b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2075c>
   34300:	ldr	r3, [r3]
   34304:	cmp	r3, #0
   34308:	bne	34374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2071c>
   3430c:	ldr	r3, [pc, #164]	; 343b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20760>
   34310:	str	r3, [r6, #4]
   34314:	add	sp, sp, #8
   34318:	pop	{r4, r5, r6, pc}
   3431c:	ldr	r6, [pc, #140]	; 343b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20758>
   34320:	ldr	r1, [r6, #4]
   34324:	cmp	r1, #0
   34328:	beq	34314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206bc>
   3432c:	mov	r3, #1
   34330:	ldr	r0, [r4, #28]
   34334:	str	r3, [sp]
   34338:	mov	r3, r2
   3433c:	bl	13640 <bfd_link_hash_lookup@plt>
   34340:	cmp	r0, #0
   34344:	beq	34314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206bc>
   34348:	ldrb	r3, [r0, #50]	; 0x32
   3434c:	and	r3, r3, #3
   34350:	cmp	r3, #1
   34354:	beq	34270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20618>
   34358:	add	sp, sp, #8
   3435c:	pop	{r4, r5, r6, pc}
   34360:	mov	r2, #5
   34364:	ldr	r1, [pc, #80]	; 343bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20764>
   34368:	bl	13460 <dcgettext@plt>
   3436c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34370:	b	34238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205e0>
   34374:	mov	r2, #5
   34378:	ldr	r1, [pc, #64]	; 343c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20768>
   3437c:	mov	r0, #0
   34380:	bl	13460 <dcgettext@plt>
   34384:	ldr	r1, [r5]
   34388:	ldr	r2, [r6, #4]
   3438c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34390:	b	3430c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34394:	andeq	r7, ip, r8, lsl #25
   34398:	andeq	r8, ip, ip, lsl #1
   3439c:	andeq	r7, ip, r8, lsl #28
   343a0:	andeq	r7, ip, r4, lsr #8
   343a4:	muleq	r8, ip, r7
   343a8:	andeq	r7, r0, r0, lsr r8
   343ac:	andeq	pc, r4, r8, lsl #19
   343b0:	andeq	r7, ip, ip, lsr #25
   343b4:	andeq	r8, ip, r4, asr #32
   343b8:	andeq	r7, ip, r0, lsr #28
   343bc:	andeq	r4, r8, r4, asr #14
   343c0:	andeq	r4, r8, r4, ror #14
   343c4:	ldr	r3, [pc, #1200]	; 3487c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c24>
   343c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   343cc:	sub	sp, sp, #76	; 0x4c
   343d0:	ldr	r4, [pc, #1192]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   343d4:	mov	r2, #0
   343d8:	ldr	r1, [r3, #4]
   343dc:	mov	r0, r4
   343e0:	str	r2, [sp, #36]	; 0x24
   343e4:	bl	13a9c <bfd_elf32_arm_set_byteswap_code@plt>
   343e8:	mov	r1, r4
   343ec:	ldr	r0, [r4, #48]	; 0x30
   343f0:	bl	13298 <bfd_elf32_arm_set_vfp11_fix@plt>
   343f4:	mov	r1, r4
   343f8:	ldr	r0, [r4, #48]	; 0x30
   343fc:	bl	136e8 <bfd_elf32_arm_set_stm32l4xx_fix@plt>
   34400:	mov	r1, r4
   34404:	ldr	r0, [r4, #48]	; 0x30
   34408:	bl	133e8 <bfd_elf32_arm_set_cortex_a8_fix@plt>
   3440c:	mov	r0, r4
   34410:	bl	135c8 <bfd_elf32_arm_keep_private_stub_output_sections@plt>
   34414:	ldr	r3, [r4, #28]
   34418:	ldr	r2, [r3, #60]	; 0x3c
   3441c:	cmp	r2, #0
   34420:	beq	346ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a94>
   34424:	ldr	r5, [r3, #40]	; 0x28
   34428:	ldr	r2, [pc, #1108]	; 34884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c2c>
   3442c:	cmp	r5, #1
   34430:	str	r2, [sp, #28]
   34434:	movne	r8, #0
   34438:	beq	3479c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b44>
   3443c:	ldr	r6, [pc, #1092]	; 34888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c30>
   34440:	ldr	r7, [r6, #68]	; 0x44
   34444:	cmp	r7, #0
   34448:	beq	3466c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a14>
   3444c:	ldrb	r3, [r7]
   34450:	cmp	r3, #0
   34454:	beq	3467c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a24>
   34458:	ldr	r5, [r4, #56]	; 0x38
   3445c:	cmp	r5, #0
   34460:	beq	3450c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x208b4>
   34464:	ldr	r9, [pc, #1056]	; 3488c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c34>
   34468:	mov	sl, #0
   3446c:	str	r7, [sp, #32]
   34470:	b	34480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20828>
   34474:	ldr	r5, [r5, #156]	; 0x9c
   34478:	cmp	r5, #0
   3447c:	beq	34508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x208b0>
   34480:	ldr	r3, [r5, #4]
   34484:	ldr	r3, [r3, #4]
   34488:	cmp	r3, #5
   3448c:	bne	34474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2081c>
   34490:	ldr	r3, [r5, #160]	; 0xa0
   34494:	ldr	r0, [r3, #548]	; 0x224
   34498:	cmp	r0, #0
   3449c:	beq	34474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2081c>
   344a0:	ldrb	r3, [r0]
   344a4:	cmp	r3, #0
   344a8:	beq	34474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2081c>
   344ac:	bl	135a4 <xstrdup@plt>
   344b0:	mov	r7, r0
   344b4:	b	344d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20878>
   344b8:	strb	sl, [fp]
   344bc:	ldrb	r3, [r7]
   344c0:	cmp	r3, #0
   344c4:	bne	3486c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c14>
   344c8:	adds	r7, fp, #1
   344cc:	beq	34474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2081c>
   344d0:	ldrb	r1, [r9, #72]	; 0x48
   344d4:	mov	r0, r7
   344d8:	bl	137fc <strchr@plt>
   344dc:	subs	fp, r0, #0
   344e0:	bne	344b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20860>
   344e4:	ldrb	r2, [r7]
   344e8:	cmp	r2, #0
   344ec:	beq	34474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2081c>
   344f0:	mov	r1, r7
   344f4:	ldr	r0, [pc, #916]	; 34890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c38>
   344f8:	bl	32a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edd0>
   344fc:	ldr	r5, [r5, #156]	; 0x9c
   34500:	cmp	r5, #0
   34504:	bne	34480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20828>
   34508:	ldr	r7, [sp, #32]
   3450c:	ldr	r3, [pc, #896]	; 34894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c3c>
   34510:	ldr	r1, [r6, #80]	; 0x50
   34514:	str	r4, [sp, #12]
   34518:	ldr	r0, [r3, #12]
   3451c:	ldr	ip, [r3, #16]
   34520:	add	r3, sp, #40	; 0x28
   34524:	str	r1, [sp, #8]
   34528:	stm	sp, {r0, ip}
   3452c:	str	r3, [sp, #16]
   34530:	mov	r2, r7
   34534:	ldr	r3, [r6, #76]	; 0x4c
   34538:	ldr	r1, [r6, #64]	; 0x40
   3453c:	ldr	r0, [r4, #48]	; 0x30
   34540:	bl	1388c <bfd_elf_size_dynamic_sections@plt>
   34544:	cmp	r0, #0
   34548:	beq	346c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a6c>
   3454c:	ldr	r0, [r6, #60]	; 0x3c
   34550:	cmp	r0, #0
   34554:	beq	34574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2091c>
   34558:	ldr	r5, [sp, #40]	; 0x28
   3455c:	cmp	r5, #0
   34560:	beq	34574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2091c>
   34564:	str	r0, [r5, #108]	; 0x6c
   34568:	bl	137d8 <strlen@plt>
   3456c:	add	r0, r0, #1
   34570:	str	r0, [r5, #36]	; 0x24
   34574:	ldr	r3, [sp, #28]
   34578:	ldr	r5, [r3]
   3457c:	cmp	r5, #0
   34580:	bne	345fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x209a4>
   34584:	b	34684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a2c>
   34588:	ldr	r0, [r4, #24]
   3458c:	mov	r1, #0
   34590:	strb	r1, [r7, r9]
   34594:	mov	r2, r1
   34598:	ldr	r3, [r5, #16]
   3459c:	str	r1, [sp, #4]
   345a0:	str	r1, [sp]
   345a4:	mov	r1, r7
   345a8:	ldr	r9, [r0, #20]
   345ac:	ldr	r0, [pc, #716]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   345b0:	blx	r9
   345b4:	mov	r0, r7
   345b8:	bl	13364 <free@plt>
   345bc:	ldr	r2, [r6, #60]	; 0x3c
   345c0:	mov	r0, #0
   345c4:	cmp	r2, r0
   345c8:	beq	345e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20988>
   345cc:	ldr	r3, [r2, #40]	; 0x28
   345d0:	ldr	r1, [r6, #36]	; 0x24
   345d4:	cmp	r3, r1
   345d8:	sub	r3, r3, r1
   345dc:	strcs	r3, [r2, #40]	; 0x28
   345e0:	ldr	r3, [r6, #20]
   345e4:	str	r0, [r6, #36]	; 0x24
   345e8:	orr	r3, r3, #2129920	; 0x208000
   345ec:	str	r3, [r6, #20]
   345f0:	ldr	r5, [r5, #24]
   345f4:	cmp	r5, #0
   345f8:	beq	34684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a2c>
   345fc:	ldrb	r3, [r5, #36]	; 0x24
   34600:	ldr	r1, [pc, #656]	; 34898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c40>
   34604:	tst	r3, #16
   34608:	bne	345f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20998>
   3460c:	ldr	r0, [r5, #16]
   34610:	bl	13604 <bfd_get_section_by_name@plt>
   34614:	subs	r6, r0, #0
   34618:	beq	345f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20998>
   3461c:	ldr	r9, [r6, #36]	; 0x24
   34620:	mov	sl, #0
   34624:	add	r0, r9, #1
   34628:	bl	13574 <xmalloc@plt>
   3462c:	mov	fp, #0
   34630:	mov	r1, r6
   34634:	mov	r7, r0
   34638:	mov	r2, r7
   3463c:	ldr	r0, [r5, #16]
   34640:	str	r9, [sp, #8]
   34644:	strd	sl, [sp]
   34648:	bl	13454 <bfd_get_section_contents@plt>
   3464c:	cmp	r0, #0
   34650:	bne	34588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20930>
   34654:	mov	r2, #5
   34658:	ldr	r1, [pc, #572]	; 3489c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c44>
   3465c:	bl	13460 <dcgettext@plt>
   34660:	ldr	r1, [r5, #16]
   34664:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34668:	b	34588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20930>
   3466c:	ldr	r0, [pc, #556]	; 348a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c48>
   34670:	bl	136b8 <getenv@plt>
   34674:	subs	r7, r0, #0
   34678:	bne	3444c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x207f4>
   3467c:	mov	r7, #0
   34680:	b	34458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20800>
   34684:	bl	2d61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199c4>
   34688:	ldr	r0, [r4, #48]	; 0x30
   3468c:	ldr	r1, [pc, #492]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   34690:	bl	13a3c <bfd_elf_size_dynsym_hash_dynstr@plt>
   34694:	cmp	r0, #0
   34698:	beq	346d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a80>
   3469c:	cmp	r8, #0
   346a0:	beq	346bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a64>
   346a4:	add	r3, sp, #72	; 0x48
   346a8:	ldr	ip, [sp, #36]	; 0x24
   346ac:	ldmdb	r3, {r0, r1, r2}
   346b0:	add	r3, r8, #16
   346b4:	strb	ip, [r8, #12]
   346b8:	stm	r3, {r0, r1, r2}
   346bc:	add	sp, sp, #76	; 0x4c
   346c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   346c4:	mov	r2, #5
   346c8:	ldr	r1, [pc, #468]	; 348a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c4c>
   346cc:	bl	13460 <dcgettext@plt>
   346d0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   346d4:	b	3454c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x208f4>
   346d8:	mov	r2, #5
   346dc:	ldr	r1, [pc, #448]	; 348a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c4c>
   346e0:	bl	13460 <dcgettext@plt>
   346e4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   346e8:	b	3469c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a44>
   346ec:	ldr	r3, [pc, #400]	; 34884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c2c>
   346f0:	str	r3, [sp, #28]
   346f4:	ldr	r5, [r3]
   346f8:	cmp	r5, #0
   346fc:	beq	34780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b28>
   34700:	mov	r6, r4
   34704:	ldr	r7, [pc, #412]	; 348a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c50>
   34708:	b	34730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ad8>
   3470c:	mov	r2, #5
   34710:	mov	r1, r7
   34714:	mov	r0, #0
   34718:	bl	13460 <dcgettext@plt>
   3471c:	ldr	r1, [r5, #8]
   34720:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34724:	ldr	r5, [r5, #24]
   34728:	cmp	r5, #0
   3472c:	beq	34780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b28>
   34730:	ldr	r0, [r5, #16]
   34734:	bl	13850 <bfd_elf32_arm_init_maps@plt>
   34738:	mov	r1, r6
   3473c:	ldr	r0, [r5, #16]
   34740:	bl	1373c <bfd_elf32_arm_process_before_allocation@plt>
   34744:	mov	r1, r6
   34748:	cmp	r0, #0
   3474c:	beq	3470c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ab4>
   34750:	ldr	r0, [r5, #16]
   34754:	bl	13730 <bfd_elf32_arm_vfp11_erratum_scan@plt>
   34758:	cmp	r0, #0
   3475c:	beq	3470c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ab4>
   34760:	mov	r1, r6
   34764:	ldr	r0, [r5, #16]
   34768:	bl	13c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>
   3476c:	cmp	r0, #0
   34770:	beq	3470c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ab4>
   34774:	ldr	r5, [r5, #24]
   34778:	cmp	r5, #0
   3477c:	bne	34730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ad8>
   34780:	ldr	r0, [pc, #248]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   34784:	bl	1340c <bfd_elf32_arm_allocate_interworking_sections@plt>
   34788:	ldr	r3, [r4, #28]
   3478c:	ldr	r5, [r3, #40]	; 0x28
   34790:	cmp	r5, #1
   34794:	movne	r8, #0
   34798:	bne	3443c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x207e4>
   3479c:	ldr	r1, [pc, #220]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   347a0:	ldr	r0, [r4, #48]	; 0x30
   347a4:	bl	133d0 <_bfd_elf_tls_setup@plt>
   347a8:	ldrb	r3, [r4]
   347ac:	and	r3, r3, #3
   347b0:	cmp	r3, #2
   347b4:	bne	347c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b70>
   347b8:	mov	r8, #0
   347bc:	ldr	r0, [pc, #232]	; 348ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c54>
   347c0:	bl	1fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc210>
   347c4:	b	3443c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x207e4>
   347c8:	mov	r3, #0
   347cc:	str	r5, [sp]
   347d0:	mov	r2, r3
   347d4:	ldr	r1, [pc, #212]	; 348b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c58>
   347d8:	ldr	r0, [r4, #28]
   347dc:	bl	13640 <bfd_link_hash_lookup@plt>
   347e0:	subs	r8, r0, #0
   347e4:	beq	347b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b60>
   347e8:	ldrb	r3, [r8, #12]
   347ec:	cmp	r3, #5
   347f0:	cmpne	r3, #2
   347f4:	bhi	347b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b60>
   347f8:	ldr	r3, [r4, #48]	; 0x30
   347fc:	mov	r2, r5
   34800:	mov	r1, r8
   34804:	ldr	r3, [r3, #4]
   34808:	ldr	r0, [pc, #112]	; 34880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c28>
   3480c:	ldr	r6, [pc, #160]	; 348b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c5c>
   34810:	ldr	r3, [r3, #448]	; 0x1c0
   34814:	mov	r5, #3
   34818:	ldr	r3, [r3, #228]	; 0xe4
   3481c:	blx	r3
   34820:	ldrb	r3, [r8, #49]	; 0x31
   34824:	mov	lr, r8
   34828:	add	ip, sp, #44	; 0x2c
   3482c:	and	r2, r3, #3
   34830:	cmp	r2, #1
   34834:	bicne	r3, r3, #3
   34838:	orrne	r3, r3, #2
   3483c:	strbne	r3, [r8, #49]	; 0x31
   34840:	ldm	lr!, {r0, r1, r2, r3}
   34844:	stmia	ip!, {r0, r1, r2, r3}
   34848:	mov	r3, #0
   3484c:	ldm	lr, {r0, r1, r2}
   34850:	str	r3, [r8, #24]
   34854:	ldrb	r3, [r8, #12]
   34858:	str	r6, [r8, #20]
   3485c:	stm	ip, {r0, r1, r2}
   34860:	str	r3, [sp, #36]	; 0x24
   34864:	strb	r5, [r8, #12]
   34868:	b	347bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b64>
   3486c:	mov	r1, r7
   34870:	ldr	r0, [pc, #24]	; 34890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c38>
   34874:	bl	32a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edd0>
   34878:	b	344c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20870>
   3487c:	andeq	r7, ip, r4, lsr #8
   34880:	andeq	r8, ip, ip, lsl #1
   34884:	andeq	r7, ip, r8, lsl #25
   34888:	andeq	r8, ip, r8, lsl r1
   3488c:	andeq	r8, ip, r4, ror r1
   34890:	andeq	r7, ip, r8, lsl lr
   34894:	andeq	r7, ip, r8, lsl #28
   34898:	andeq	r4, r8, r4, asr #16
   3489c:	andeq	r4, r8, r4, asr r8
   348a0:	andeq	r4, r8, r8, lsl #16
   348a4:	andeq	r4, r8, r4, lsl r8
   348a8:	andeq	r4, r8, ip, asr #15
   348ac:	andeq	r4, r3, r4, lsr #19
   348b0:	strdeq	r4, [r8], -r8
   348b4:	andeq	r7, ip, r8, lsr #17
   348b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   348bc:	mov	r4, r0
   348c0:	ldr	r6, [pc, #208]	; 34998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d40>
   348c4:	ldr	r8, [pc, #208]	; 3499c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d44>
   348c8:	ldr	r9, [pc, #208]	; 349a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d48>
   348cc:	sub	sp, sp, #12
   348d0:	ldr	r3, [r4, #12]
   348d4:	cmp	r3, #6
   348d8:	ldrls	pc, [pc, r3, lsl #2]
   348dc:	b	34954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cfc>
   348e0:	andeq	r4, r3, r0, asr #18
   348e4:	andeq	r4, r3, r8, lsr #18
   348e8:	andeq	r4, r3, r0, lsr #18
   348ec:	andeq	r4, r3, r4, asr r9
   348f0:	strdeq	r4, [r3], -ip
   348f4:	andeq	r4, r3, ip, asr #18
   348f8:	andeq	r4, r3, ip, asr #18
   348fc:	mov	r7, #0
   34900:	ldr	r5, [r4, #16]
   34904:	mov	r1, r6
   34908:	mov	r0, r5
   3490c:	bl	13268 <strcmp@plt>
   34910:	cmp	r0, #0
   34914:	bne	3495c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d04>
   34918:	ldr	r4, [r4, #20]
   3491c:	b	348d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c78>
   34920:	ldr	r4, [r4, #16]
   34924:	b	348d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c78>
   34928:	ldr	r0, [r4, #16]
   3492c:	bl	348b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c60>
   34930:	ldr	r0, [r4, #20]
   34934:	bl	348b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c60>
   34938:	ldr	r4, [r4, #24]
   3493c:	b	348d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c78>
   34940:	ldr	r0, [r4, #16]
   34944:	bl	348b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c60>
   34948:	b	34918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cc0>
   3494c:	mov	r7, #1
   34950:	b	34900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ca8>
   34954:	add	sp, sp, #12
   34958:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3495c:	ldr	r1, [r4, #24]
   34960:	mov	r3, r7
   34964:	str	r1, [sp]
   34968:	mov	r2, r5
   3496c:	ldr	r1, [pc, #40]	; 3499c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d44>
   34970:	ldr	r0, [r8, #48]	; 0x30
   34974:	bl	132b0 <bfd_elf_record_link_assignment@plt>
   34978:	cmp	r0, #0
   3497c:	bne	34918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cc0>
   34980:	mov	r1, r9
   34984:	mov	r2, #5
   34988:	bl	13460 <dcgettext@plt>
   3498c:	ldr	r1, [r4, #16]
   34990:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34994:	b	34918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cc0>
   34998:	andeq	r4, r8, r0, lsl #22
   3499c:	andeq	r8, ip, ip, lsl #1
   349a0:	muleq	r8, r0, r8
   349a4:	ldr	r3, [r0, #4]
   349a8:	cmp	r3, #1
   349ac:	bxne	lr
   349b0:	ldr	r0, [r0, #8]
   349b4:	b	348b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c60>
   349b8:	ldr	ip, [pc, #236]	; 34aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e54>
   349bc:	push	{r4, r5, r6, r7, lr}
   349c0:	mov	r6, r1
   349c4:	ldr	ip, [ip]
   349c8:	mov	r1, r0
   349cc:	sub	sp, sp, #20
   349d0:	mov	r5, r2
   349d4:	ldr	r0, [ip, #16]
   349d8:	ldr	r2, [pc, #208]	; 34ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e58>
   349dc:	mov	r7, r3
   349e0:	bl	1337c <bfd_make_section_anyway_with_flags@plt>
   349e4:	subs	r4, r0, #0
   349e8:	beq	34a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20df8>
   349ec:	mov	r0, r6
   349f0:	str	r7, [r4, #64]	; 0x40
   349f4:	bl	210cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd474>
   349f8:	str	r5, [sp, #12]
   349fc:	mov	r6, r0
   34a00:	add	r0, sp, #4
   34a04:	bl	1fe78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc220>
   34a08:	mov	r1, r4
   34a0c:	mov	r3, r6
   34a10:	add	r0, sp, #4
   34a14:	mov	r2, #0
   34a18:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   34a1c:	ldr	r1, [sp, #4]
   34a20:	cmp	r1, #0
   34a24:	beq	34a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20df8>
   34a28:	cmp	r5, #0
   34a2c:	beq	34a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e1c>
   34a30:	add	r1, r6, #8
   34a34:	add	r0, sp, #4
   34a38:	bl	33da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2014c>
   34a3c:	cmp	r0, #0
   34a40:	beq	34a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20df8>
   34a44:	mov	r0, r4
   34a48:	add	sp, sp, #20
   34a4c:	pop	{r4, r5, r6, r7, pc}
   34a50:	mov	r2, #5
   34a54:	ldr	r1, [pc, #88]	; 34ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e5c>
   34a58:	mov	r0, #0
   34a5c:	bl	13460 <dcgettext@plt>
   34a60:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34a64:	mov	r4, #0
   34a68:	mov	r0, r4
   34a6c:	add	sp, sp, #20
   34a70:	pop	{r4, r5, r6, r7, pc}
   34a74:	ldr	r2, [r6, #8]
   34a78:	cmp	r2, #0
   34a7c:	bne	34a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e30>
   34a80:	b	34aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e4c>
   34a84:	mov	r2, r3
   34a88:	ldr	r3, [r2]
   34a8c:	cmp	r3, #0
   34a90:	bne	34a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e2c>
   34a94:	mov	r0, r4
   34a98:	str	r1, [r2]
   34a9c:	add	sp, sp, #20
   34aa0:	pop	{r4, r5, r6, r7, pc}
   34aa4:	str	r1, [r6, #8]
   34aa8:	b	34a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20dec>
   34aac:	andeq	r7, ip, r8, lsl #28
   34ab0:	eoreq	r4, r0, pc, lsl r1
   34ab4:	andeq	r4, r8, r0, asr #17
   34ab8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34abc:	mov	r4, #10
   34ac0:	ldr	r5, [pc, #208]	; 34b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f40>
   34ac4:	ldr	r7, [pc, #208]	; 34b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f44>
   34ac8:	ldr	r8, [pc, #208]	; 34ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f48>
   34acc:	mov	r6, r5
   34ad0:	b	34b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20eb8>
   34ad4:	ldr	r3, [r5, #48]	; 0x30
   34ad8:	mov	r0, #1
   34adc:	ldr	r3, [r3, #160]	; 0xa0
   34ae0:	ldr	r2, [r3, #2352]	; 0x930
   34ae4:	ldr	r3, [r2, #28]
   34ae8:	cmp	r3, r9
   34aec:	movhi	r3, r0
   34af0:	movls	r3, #0
   34af4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34af8:	cmp	r4, #6
   34afc:	orrgt	r3, r3, #1
   34b00:	cmp	r3, #0
   34b04:	beq	34b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f38>
   34b08:	subs	r4, r4, #1
   34b0c:	beq	34b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f20>
   34b10:	bl	24550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108f8>
   34b14:	ldr	r3, [r5, #48]	; 0x30
   34b18:	mov	r1, r6
   34b1c:	mov	r0, r3
   34b20:	ldr	r2, [r3, #4]
   34b24:	ldr	r2, [r2, #4]
   34b28:	cmp	r2, #5
   34b2c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   34b30:	ldrb	r2, [r5]
   34b34:	and	r2, r2, #3
   34b38:	cmp	r2, #2
   34b3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34b40:	ldr	r3, [r3, #160]	; 0xa0
   34b44:	ldr	r2, [r7]
   34b48:	ldr	r3, [r3, #2352]	; 0x930
   34b4c:	cmp	r2, #0
   34b50:	streq	r2, [r3]
   34b54:	ldr	r9, [r3, #28]
   34b58:	bl	13484 <_bfd_elf_map_sections_to_segments@plt>
   34b5c:	cmp	r0, #0
   34b60:	bne	34ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e7c>
   34b64:	mov	r2, #5
   34b68:	mov	r1, r8
   34b6c:	bl	13460 <dcgettext@plt>
   34b70:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34b74:	b	34ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e7c>
   34b78:	mov	r0, r4
   34b7c:	mov	r2, #5
   34b80:	ldr	r1, [pc, #28]	; 34ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f4c>
   34b84:	bl	13460 <dcgettext@plt>
   34b88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   34b8c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34b90:	str	r9, [r2, #28]
   34b94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34b98:	andeq	r8, ip, ip, lsl #1
   34b9c:	andeq	r8, ip, r0, rrx
   34ba0:	andeq	r4, r8, r8, ror #17
   34ba4:	andeq	r4, r8, r4, lsl r9
   34ba8:	push	{r4, r5, r6, r7, r8, r9, lr}
   34bac:	mov	r0, #40	; 0x28
   34bb0:	sub	sp, sp, #12
   34bb4:	bl	13574 <xmalloc@plt>
   34bb8:	ldr	r3, [pc, #548]	; 34de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2118c>
   34bbc:	ldr	r5, [r3]
   34bc0:	cmp	r5, #0
   34bc4:	mov	r7, r0
   34bc8:	beq	34c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21024>
   34bcc:	ldr	r8, [pc, #532]	; 34de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21190>
   34bd0:	mov	r6, #0
   34bd4:	mov	r1, #10
   34bd8:	b	34be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f90>
   34bdc:	ldr	r5, [r5, #24]
   34be0:	cmp	r5, #0
   34be4:	beq	34c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21028>
   34be8:	ldr	r2, [r5, #16]
   34bec:	ldr	r3, [r2, #40]	; 0x28
   34bf0:	lsr	r3, r3, #5
   34bf4:	tst	r3, #66	; 0x42
   34bf8:	bne	34bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f84>
   34bfc:	ldr	r4, [r2, #100]	; 0x64
   34c00:	cmp	r4, #0
   34c04:	bne	34c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fc0>
   34c08:	b	34bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f84>
   34c0c:	ldr	r4, [r4, #12]
   34c10:	cmp	r4, #0
   34c14:	beq	34bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f84>
   34c18:	ldr	r2, [r4, #60]	; 0x3c
   34c1c:	cmp	r2, #0
   34c20:	beq	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c24:	ldr	r3, [r4, #140]	; 0x8c
   34c28:	cmp	r3, #0
   34c2c:	beq	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c30:	ldr	r0, [r3, #4]
   34c34:	cmp	r0, #1
   34c38:	bne	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c3c:	ldr	r3, [r3, #8]
   34c40:	tst	r3, #4
   34c44:	beq	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c48:	ldr	r3, [r4, #20]
   34c4c:	tst	r3, #32768	; 0x8000
   34c50:	bne	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c54:	ldrh	r3, [r4, #24]
   34c58:	and	r3, r3, #896	; 0x380
   34c5c:	cmp	r3, #512	; 0x200
   34c60:	cmpne	r2, r8
   34c64:	beq	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c68:	cmp	r1, r6
   34c6c:	beq	34d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21134>
   34c70:	str	r4, [r7, r6, lsl #2]
   34c74:	add	r6, r6, #1
   34c78:	b	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34c7c:	mov	r6, r5
   34c80:	ldr	r8, [pc, #356]	; 34dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21194>
   34c84:	ldr	r3, [pc, #356]	; 34df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21198>
   34c88:	mov	r2, #4
   34c8c:	mov	r1, r6
   34c90:	mov	r0, r7
   34c94:	bl	13a78 <qsort@plt>
   34c98:	ldr	r3, [r8, #52]	; 0x34
   34c9c:	ldr	r2, [pc, #336]	; 34df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2119c>
   34ca0:	mov	r1, r6
   34ca4:	mov	r0, r7
   34ca8:	bl	13220 <elf32_arm_fix_exidx_coverage@plt>
   34cac:	ldr	r4, [pc, #320]	; 34df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2119c>
   34cb0:	cmp	r0, #0
   34cb4:	movne	r2, #1
   34cb8:	ldrne	r3, [pc, #312]	; 34df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211a0>
   34cbc:	mov	r0, r7
   34cc0:	strne	r2, [r3, #56]	; 0x38
   34cc4:	bl	13364 <free@plt>
   34cc8:	mov	r1, r4
   34ccc:	ldr	r0, [r4, #48]	; 0x30
   34cd0:	bl	1361c <bfd_elf_discard_info@plt>
   34cd4:	cmp	r0, #0
   34cd8:	blt	34db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21158>
   34cdc:	ldr	r5, [pc, #276]	; 34df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211a0>
   34ce0:	ldr	r3, [r5]
   34ce4:	beq	34d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210bc>
   34ce8:	mov	r0, #1
   34cec:	cmp	r3, #0
   34cf0:	str	r0, [r5, #56]	; 0x38
   34cf4:	beq	34d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210b0>
   34cf8:	ldrb	r3, [r4]
   34cfc:	and	r3, r3, #3
   34d00:	cmp	r3, #2
   34d04:	bne	34d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210d4>
   34d08:	add	sp, sp, #12
   34d0c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   34d10:	b	34ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e60>
   34d14:	cmp	r3, #0
   34d18:	beq	34d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21120>
   34d1c:	ldrb	r3, [r4]
   34d20:	and	r3, r3, #3
   34d24:	cmp	r3, #2
   34d28:	beq	34d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21120>
   34d2c:	ldr	r1, [pc, #192]	; 34df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2119c>
   34d30:	ldr	r0, [r4, #48]	; 0x30
   34d34:	bl	13280 <elf32_arm_setup_section_lists@plt>
   34d38:	cmp	r0, #0
   34d3c:	beq	34d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21120>
   34d40:	blt	34dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21180>
   34d44:	ldr	r0, [pc, #176]	; 34dfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211a4>
   34d48:	bl	1fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc210>
   34d4c:	ldr	r3, [r5]
   34d50:	ldr	ip, [pc, #168]	; 34e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211a8>
   34d54:	ldr	r2, [pc, #168]	; 34e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211ac>
   34d58:	ldr	r1, [r3, #16]
   34d5c:	ldr	r0, [r4, #48]	; 0x30
   34d60:	ldr	r3, [r8, #64]	; 0x40
   34d64:	stm	sp, {r2, ip}
   34d68:	ldr	r2, [pc, #132]	; 34df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2119c>
   34d6c:	bl	13b74 <elf32_arm_size_stubs@plt>
   34d70:	cmp	r0, #0
   34d74:	beq	34dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21174>
   34d78:	ldr	r0, [r5, #56]	; 0x38
   34d7c:	cmn	r0, #1
   34d80:	bne	34d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210b0>
   34d84:	add	sp, sp, #12
   34d88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   34d8c:	mov	r0, r7
   34d90:	lsl	r9, r1, #1
   34d94:	lsl	r1, r1, #3
   34d98:	bl	134fc <xrealloc@plt>
   34d9c:	mov	r1, r9
   34da0:	mov	r7, r0
   34da4:	str	r4, [r7, r6, lsl #2]
   34da8:	add	r6, r6, #1
   34dac:	b	34c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   34db0:	ldr	r1, [pc, #80]	; 34e08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211b0>
   34db4:	mov	r2, #5
   34db8:	mov	r0, #0
   34dbc:	bl	13460 <dcgettext@plt>
   34dc0:	add	sp, sp, #12
   34dc4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   34dc8:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34dcc:	mov	r2, #5
   34dd0:	ldr	r1, [pc, #52]	; 34e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211b4>
   34dd4:	b	34dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21164>
   34dd8:	mov	r2, #5
   34ddc:	ldr	r1, [pc, #44]	; 34e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211b8>
   34de0:	b	34db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21160>
   34de4:	andeq	r7, ip, r8, lsl #25
   34de8:	andeq	r7, ip, r8, lsr #17
   34dec:	andeq	r7, ip, r4, lsr #8
   34df0:	andeq	r2, r3, r4, ror #7
   34df4:	andeq	r8, ip, ip, lsl #1
   34df8:	andeq	r7, ip, r8, lsl #28
   34dfc:	andeq	r5, r3, r0, lsl #31
   34e00:	andeq	r4, r3, r4, lsl lr
   34e04:			; <UNDEFINED> instruction: 0x000349b8
   34e08:	andeq	r4, r8, r4, lsr r9
   34e0c:	muleq	r8, r4, r9
   34e10:	andeq	r4, r8, r4, asr r9
   34e14:	push	{r4, lr}
   34e18:	mov	r0, #1
   34e1c:	bl	34ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e60>
   34e20:	ldr	r3, [pc, #8]	; 34e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211d8>
   34e24:	mvn	r2, #0
   34e28:	str	r2, [r3, #56]	; 0x38
   34e2c:	pop	{r4, pc}
   34e30:	andeq	r7, ip, r8, lsl #28
   34e34:	ldr	r3, [r0, #160]	; 0xa0
   34e38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34e3c:	sub	sp, sp, #8
   34e40:	ldr	r3, [r3, #2352]	; 0x930
   34e44:	ldr	r1, [pc, #316]	; 34f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21330>
   34e48:	ldr	r2, [r0, #4]
   34e4c:	ldr	r7, [r3, #24]
   34e50:	ldr	sl, [r3, #20]
   34e54:	ldr	r8, [r2, #448]	; 0x1c0
   34e58:	ldr	r3, [r7, #60]	; 0x3c
   34e5c:	cmp	r3, r1
   34e60:	beq	34f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21314>
   34e64:	ldr	r9, [r3, #140]	; 0x8c
   34e68:	mov	r6, r0
   34e6c:	ldr	r5, [r7, #36]	; 0x24
   34e70:	ldr	r4, [r9, #48]	; 0x30
   34e74:	cmp	r4, #0
   34e78:	beq	34f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x212ec>
   34e7c:	ldr	r3, [r7, #56]	; 0x38
   34e80:	add	r4, r4, r3
   34e84:	ldr	r3, [r2, #84]	; 0x54
   34e88:	mov	r1, r4
   34e8c:	mov	r0, #4
   34e90:	blx	r3
   34e94:	ldr	r3, [r6, #4]
   34e98:	sub	r5, r5, #16
   34e9c:	mov	r0, r5
   34ea0:	add	r1, r4, #4
   34ea4:	ldr	r3, [r3, #84]	; 0x54
   34ea8:	blx	r3
   34eac:	ldr	r3, [r6, #4]
   34eb0:	add	r1, r4, #8
   34eb4:	mov	r0, #3
   34eb8:	ldr	r3, [r3, #84]	; 0x54
   34ebc:	blx	r3
   34ec0:	ldr	r2, [pc, #196]	; 34f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21334>
   34ec4:	mov	r1, sl
   34ec8:	add	r3, r4, #16
   34ecc:	ldr	r0, [r2]
   34ed0:	mov	sl, #0
   34ed4:	str	r0, [r4, #12]
   34ed8:	ldr	r2, [r8, #396]	; 0x18c
   34edc:	mov	r0, r6
   34ee0:	ldr	r2, [r2, #24]
   34ee4:	str	r5, [sp]
   34ee8:	bl	321e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e588>
   34eec:	ldrd	r8, [r9, #16]
   34ef0:	ldr	r1, [r7, #56]	; 0x38
   34ef4:	ldr	r5, [r7, #36]	; 0x24
   34ef8:	adds	r2, r8, r1
   34efc:	adc	r3, r9, #0
   34f00:	str	sl, [sp]
   34f04:	mov	r0, r6
   34f08:	bl	13c4c <bfd_seek@plt>
   34f0c:	cmp	r0, sl
   34f10:	movne	r0, sl
   34f14:	beq	34f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x212c8>
   34f18:	add	sp, sp, #8
   34f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34f20:	mov	r2, r6
   34f24:	mov	r0, r4
   34f28:	mov	r1, r5
   34f2c:	bl	13784 <bfd_bwrite@plt>
   34f30:	sub	r0, r0, r5
   34f34:	clz	r0, r0
   34f38:	lsr	r0, r0, #5
   34f3c:	add	sp, sp, #8
   34f40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34f44:	ldr	r4, [r7, #108]	; 0x6c
   34f48:	cmp	r4, #0
   34f4c:	bne	34e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2122c>
   34f50:	mov	r0, r5
   34f54:	bl	13574 <xmalloc@plt>
   34f58:	ldr	r5, [r7, #36]	; 0x24
   34f5c:	ldr	r2, [r6, #4]
   34f60:	mov	r4, r0
   34f64:	str	r0, [r7, #108]	; 0x6c
   34f68:	b	34e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2122c>
   34f6c:	mov	r2, #5
   34f70:	ldr	r1, [pc, #24]	; 34f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21338>
   34f74:	mov	r0, #0
   34f78:	bl	13460 <dcgettext@plt>
   34f7c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   34f80:	mov	r0, #1
   34f84:	b	34f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x212c0>
   34f88:	andeq	r7, ip, r8, lsr #17
   34f8c:	andeq	r4, r8, r4, lsl #20
   34f90:			; <UNDEFINED> instruction: 0x000849bc
   34f94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   34f98:	mov	r5, r0
   34f9c:	ldr	r9, [pc, #196]	; 35068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21410>
   34fa0:	ldr	r6, [pc, #196]	; 3506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21414>
   34fa4:	mov	r4, #0
   34fa8:	ldr	r0, [r9]
   34fac:	bl	137d8 <strlen@plt>
   34fb0:	ldrb	r7, [r6, #72]	; 0x48
   34fb4:	mov	r3, r5
   34fb8:	mov	r8, r0
   34fbc:	b	34fc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2136c>
   34fc0:	add	r3, r0, #1
   34fc4:	mov	r0, r3
   34fc8:	ldrb	r3, [r3]
   34fcc:	mov	r1, r7
   34fd0:	cmp	r3, #47	; 0x2f
   34fd4:	addeq	r4, r4, r8
   34fd8:	bl	137fc <strchr@plt>
   34fdc:	cmp	r0, #0
   34fe0:	bne	34fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21368>
   34fe4:	mov	r0, r5
   34fe8:	bl	137d8 <strlen@plt>
   34fec:	add	r0, r0, r4
   34ff0:	add	r0, r0, #1
   34ff4:	bl	13574 <xmalloc@plt>
   34ff8:	ldrb	r7, [r6, #72]	; 0x48
   34ffc:	mov	sl, r0
   35000:	mov	r6, r0
   35004:	b	3503c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213e4>
   35008:	mov	r1, r7
   3500c:	mov	r0, r5
   35010:	bl	137fc <strchr@plt>
   35014:	mov	r1, r5
   35018:	subs	r4, r0, #0
   3501c:	sub	r4, r4, r5
   35020:	add	r4, r4, #1
   35024:	mov	r0, r6
   35028:	mov	r2, r4
   3502c:	beq	3505c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21404>
   35030:	bl	138bc <strncpy@plt>
   35034:	add	r6, r6, r4
   35038:	add	r5, r5, r4
   3503c:	ldrb	r3, [r5]
   35040:	cmp	r3, #47	; 0x2f
   35044:	bne	35008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213b0>
   35048:	mov	r0, r6
   3504c:	ldr	r1, [r9]
   35050:	bl	135d4 <strcpy@plt>
   35054:	add	r6, r6, r8
   35058:	b	35008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213b0>
   3505c:	bl	135d4 <strcpy@plt>
   35060:	mov	r0, sl
   35064:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   35068:	andeq	r8, ip, r4, lsl r1
   3506c:	andeq	r8, ip, r4, ror r1
   35070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35074:	sub	sp, sp, #60	; 0x3c
   35078:	mov	r3, r1
   3507c:	str	r1, [sp, #4]
   35080:	mov	fp, r0
   35084:	ldr	r1, [pc, #1180]	; 35528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218d0>
   35088:	mov	r0, r3
   3508c:	bl	13a60 <fopen64@plt>
   35090:	subs	r9, r0, #0
   35094:	moveq	r0, r9
   35098:	beq	35264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2160c>
   3509c:	mov	r0, #256	; 0x100
   350a0:	bl	13574 <xmalloc@plt>
   350a4:	mov	r6, #256	; 0x100
   350a8:	mov	r8, r0
   350ac:	mov	r7, r8
   350b0:	b	350f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21498>
   350b4:	bl	137d8 <strlen@plt>
   350b8:	sub	r4, r4, #1
   350bc:	add	r3, r8, r6
   350c0:	mov	r1, r5
   350c4:	cmp	r0, r4
   350c8:	mov	r0, r8
   350cc:	bne	3511c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x214c4>
   350d0:	ldrb	r3, [r3, #-2]
   350d4:	cmp	r3, #10
   350d8:	beq	3511c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x214c4>
   350dc:	bl	134fc <xrealloc@plt>
   350e0:	sub	r6, r6, #1
   350e4:	add	r7, r0, r6
   350e8:	mov	r8, r0
   350ec:	mov	r6, r5
   350f0:	sub	r4, r7, r8
   350f4:	sub	r4, r6, r4
   350f8:	mov	r1, r4
   350fc:	mov	r2, r9
   35100:	mov	r0, r7
   35104:	bl	13370 <fgets@plt>
   35108:	lsl	r5, r6, #1
   3510c:	cmp	r0, #0
   35110:	bne	350b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2145c>
   35114:	cmp	r8, r7
   35118:	beq	35250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215f8>
   3511c:	mov	r1, #10
   35120:	mov	r0, r8
   35124:	bl	137fc <strchr@plt>
   35128:	mov	r1, #35	; 0x23
   3512c:	mov	r5, r8
   35130:	cmp	r0, #0
   35134:	movne	r3, #0
   35138:	strbne	r3, [r0]
   3513c:	mov	r0, r8
   35140:	bl	137fc <strchr@plt>
   35144:	cmp	r0, #0
   35148:	movne	r3, #0
   3514c:	strbne	r3, [r0]
   35150:	ldrb	r3, [r8]
   35154:	cmp	r3, #32
   35158:	cmpne	r3, #9
   3515c:	moveq	r2, #1
   35160:	movne	r2, #0
   35164:	sub	r1, r3, #11
   35168:	cmp	r1, #2
   3516c:	orrls	r2, r2, #1
   35170:	cmp	r2, #0
   35174:	beq	351a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21548>
   35178:	ldrb	r3, [r5, #1]!
   3517c:	cmp	r3, #9
   35180:	cmpne	r3, #32
   35184:	moveq	r2, #1
   35188:	movne	r2, #0
   3518c:	sub	r1, r3, #11
   35190:	cmp	r1, #2
   35194:	orrls	r2, r2, #1
   35198:	cmp	r2, #0
   3519c:	bne	35178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21520>
   351a0:	cmp	r3, #0
   351a4:	beq	35240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215e8>
   351a8:	mov	r2, #7
   351ac:	ldr	r1, [pc, #888]	; 3552c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218d4>
   351b0:	mov	r0, r5
   351b4:	bl	13bb0 <strncmp@plt>
   351b8:	cmp	r0, #0
   351bc:	bne	35364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2170c>
   351c0:	ldrb	r3, [r5, #7]
   351c4:	cmp	r3, #9
   351c8:	cmpne	r3, #32
   351cc:	bne	35364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2170c>
   351d0:	add	r5, r5, #8
   351d4:	mov	r3, r5
   351d8:	ldrb	r2, [r3]
   351dc:	cmp	r2, #9
   351e0:	cmpne	r2, #32
   351e4:	beq	3526c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21614>
   351e8:	cmp	r2, #0
   351ec:	beq	35240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215e8>
   351f0:	mov	r7, r3
   351f4:	b	35204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215ac>
   351f8:	cmp	r4, #0
   351fc:	beq	35274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2161c>
   35200:	mov	r7, r2
   35204:	ldrb	r4, [r7, #1]
   35208:	add	r2, r7, #1
   3520c:	cmp	r4, #32
   35210:	cmpne	r4, #9
   35214:	movne	r1, #1
   35218:	moveq	r1, #0
   3521c:	bne	351f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215a0>
   35220:	strb	r1, [r2]
   35224:	ldrb	r2, [r3]
   35228:	add	r7, r7, #2
   3522c:	cmp	r2, #0
   35230:	bne	35288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21630>
   35234:	cmp	r4, #0
   35238:	mov	r3, r7
   3523c:	bne	351d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21580>
   35240:	mov	r0, r9
   35244:	bl	1379c <feof@plt>
   35248:	cmp	r0, #0
   3524c:	beq	350ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21454>
   35250:	mov	r0, r8
   35254:	bl	13364 <free@plt>
   35258:	mov	r0, r9
   3525c:	bl	13928 <fclose@plt>
   35260:	mov	r0, #1
   35264:	add	sp, sp, #60	; 0x3c
   35268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3526c:	add	r3, r3, #1
   35270:	b	351d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21580>
   35274:	strb	r4, [r2]
   35278:	ldrb	r2, [r3]
   3527c:	add	r7, r7, #2
   35280:	cmp	r2, #0
   35284:	beq	35240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215e8>
   35288:	cmp	r2, #47	; 0x2f
   3528c:	beq	35488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21830>
   35290:	ldr	r5, [sp, #4]
   35294:	mov	r1, #47	; 0x2f
   35298:	mov	r0, r5
   3529c:	str	r3, [sp, #8]
   352a0:	bl	139ac <strrchr@plt>
   352a4:	ldr	r3, [sp, #8]
   352a8:	str	r3, [sp, #12]
   352ac:	mov	sl, r0
   352b0:	mov	r0, r3
   352b4:	bl	137d8 <strlen@plt>
   352b8:	sub	sl, sl, r5
   352bc:	str	r5, [sp, #4]
   352c0:	str	r0, [sp, #8]
   352c4:	add	r0, r0, #2
   352c8:	add	r0, r0, sl
   352cc:	bl	13574 <xmalloc@plt>
   352d0:	add	sl, sl, #1
   352d4:	mov	r2, sl
   352d8:	ldr	r1, [sp, #4]
   352dc:	mov	r5, r0
   352e0:	bl	133b8 <memcpy@plt>
   352e4:	ldr	r3, [sp, #8]
   352e8:	add	r0, r5, sl
   352ec:	add	r2, r3, #1
   352f0:	ldr	r3, [sp, #12]
   352f4:	mov	r1, r3
   352f8:	bl	133b8 <memcpy@plt>
   352fc:	mov	r2, #0
   35300:	add	r3, sp, #20
   35304:	mov	r0, r5
   35308:	mov	r1, r2
   3530c:	bl	13778 <glob64@plt>
   35310:	cmp	r0, #0
   35314:	bne	35358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21700>
   35318:	ldr	r3, [sp, #20]
   3531c:	cmp	r3, #0
   35320:	beq	35510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218b8>
   35324:	mov	sl, #0
   35328:	ldr	r3, [sp, #24]
   3532c:	mov	r0, fp
   35330:	ldr	r1, [r3, sl, lsl #2]
   35334:	bl	35070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21418>
   35338:	ldr	r3, [sp, #20]
   3533c:	add	sl, sl, #1
   35340:	cmp	sl, r3
   35344:	bcc	35328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216d0>
   35348:	add	r0, sp, #20
   3534c:	bl	139c4 <globfree64@plt>
   35350:	cmp	r5, #0
   35354:	beq	35234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215dc>
   35358:	mov	r0, r5
   3535c:	bl	13364 <free@plt>
   35360:	b	35234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215dc>
   35364:	ldrb	r3, [r5]
   35368:	cmp	r3, #9
   3536c:	cmpne	r3, #61	; 0x3d
   35370:	movne	r4, #1
   35374:	moveq	r4, #0
   35378:	tst	r3, #223	; 0xdf
   3537c:	moveq	r4, #0
   35380:	sub	r3, r3, #11
   35384:	cmp	r3, #2
   35388:	movls	r3, #0
   3538c:	andhi	r3, r4, #1
   35390:	cmp	r3, #0
   35394:	movne	r3, r5
   35398:	bne	353a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2174c>
   3539c:	b	3540c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217b4>
   353a0:	mov	r3, r0
   353a4:	ldrb	r2, [r3, #1]
   353a8:	add	r0, r3, #1
   353ac:	cmp	r2, #9
   353b0:	cmpne	r2, #61	; 0x3d
   353b4:	movne	r1, #1
   353b8:	moveq	r1, #0
   353bc:	tst	r2, #223	; 0xdf
   353c0:	moveq	r1, #0
   353c4:	sub	r2, r2, #11
   353c8:	cmp	r2, #2
   353cc:	movls	r2, #0
   353d0:	andhi	r2, r1, #1
   353d4:	cmp	r2, #0
   353d8:	bne	353a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21748>
   353dc:	cmp	r0, r5
   353e0:	beq	35520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218c8>
   353e4:	ldrb	r2, [r0, #-1]
   353e8:	cmp	r2, #47	; 0x2f
   353ec:	beq	35400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217a8>
   353f0:	b	3551c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218c4>
   353f4:	ldrb	r1, [r3, #-1]!
   353f8:	cmp	r1, #47	; 0x2f
   353fc:	bne	354bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21864>
   35400:	cmp	r5, r3
   35404:	mov	r2, r3
   35408:	bne	353f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2179c>
   3540c:	mov	r4, #0
   35410:	mov	r2, r4
   35414:	ldr	r7, [fp]
   35418:	cmp	r7, #0
   3541c:	beq	354d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21878>
   35420:	ldr	r3, [fp, #4]
   35424:	ldr	r2, [fp, #8]
   35428:	add	r1, r3, #1
   3542c:	add	r0, r1, r4
   35430:	cmp	r0, r2
   35434:	bcs	354e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21890>
   35438:	ldr	r2, [pc, #240]	; 35530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218d8>
   3543c:	str	r1, [fp, #4]
   35440:	ldrb	r2, [r2, #72]	; 0x48
   35444:	strb	r2, [r7, r3]
   35448:	ldm	fp, {r0, r3}
   3544c:	add	r0, r0, r3
   35450:	mov	r2, r4
   35454:	mov	r1, r5
   35458:	bl	133b8 <memcpy@plt>
   3545c:	ldr	r2, [fp, #4]
   35460:	ldr	r3, [fp]
   35464:	add	r4, r4, r2
   35468:	mov	r2, #0
   3546c:	str	r4, [fp, #4]
   35470:	mov	r0, r9
   35474:	strb	r2, [r3, r4]
   35478:	bl	1379c <feof@plt>
   3547c:	cmp	r0, #0
   35480:	beq	350ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21454>
   35484:	b	35250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215f8>
   35488:	mov	r2, #0
   3548c:	mov	r0, r3
   35490:	mov	r1, r2
   35494:	add	r3, sp, #20
   35498:	bl	13778 <glob64@plt>
   3549c:	subs	r5, r0, #0
   354a0:	bne	35234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215dc>
   354a4:	ldr	r3, [sp, #20]
   354a8:	cmp	r3, #0
   354ac:	bne	35324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216cc>
   354b0:	add	r0, sp, #20
   354b4:	bl	139c4 <globfree64@plt>
   354b8:	b	35234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215dc>
   354bc:	ldr	r7, [fp]
   354c0:	sub	r2, r2, r5
   354c4:	cmp	r7, #0
   354c8:	mov	r4, r2
   354cc:	bne	35420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217c8>
   354d0:	add	r0, r2, #256	; 0x100
   354d4:	add	r0, r0, #1
   354d8:	str	r0, [fp, #8]
   354dc:	bl	13574 <xmalloc@plt>
   354e0:	stm	fp, {r0, r7}
   354e4:	b	35450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217f8>
   354e8:	add	r2, r2, #256	; 0x100
   354ec:	add	r1, r2, r4
   354f0:	str	r1, [fp, #8]
   354f4:	mov	r0, r7
   354f8:	bl	134fc <xrealloc@plt>
   354fc:	ldr	r3, [fp, #4]
   35500:	add	r1, r3, #1
   35504:	mov	r7, r0
   35508:	str	r0, [fp]
   3550c:	b	35438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217e0>
   35510:	add	r0, sp, #20
   35514:	bl	139c4 <globfree64@plt>
   35518:	b	35358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21700>
   3551c:	sub	r2, r0, r5
   35520:	mov	r4, r2
   35524:	b	35414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x217bc>
   35528:	andeq	r4, r8, r4, lsr #26
   3552c:	andeq	r4, r8, r8, lsl #20
   35530:	andeq	r8, ip, r4, ror r1
   35534:	push	{r4, r5, r6, r7, lr}
   35538:	sub	sp, sp, #108	; 0x6c
   3553c:	ldr	r4, [pc, #312]	; 3567c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a24>
   35540:	ldr	r3, [r4, #60]	; 0x3c
   35544:	cmp	r3, #0
   35548:	beq	35554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218fc>
   3554c:	add	sp, sp, #108	; 0x6c
   35550:	pop	{r4, r5, r6, r7, pc}
   35554:	ldr	r3, [r0, #16]
   35558:	cmp	r3, #0
   3555c:	beq	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   35560:	mov	r5, r0
   35564:	mov	r0, r3
   35568:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3556c:	ands	r6, r0, #1
   35570:	bne	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   35574:	mov	r1, sp
   35578:	ldr	r0, [r5, #16]
   3557c:	bl	133a0 <bfd_stat@plt>
   35580:	cmp	r0, #0
   35584:	bne	35650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x219f8>
   35588:	ldrd	r0, [sp]
   3558c:	ldrd	r2, [r4, #64]	; 0x40
   35590:	cmp	r1, r3
   35594:	cmpeq	r0, r2
   35598:	beq	35620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x219c8>
   3559c:	ldr	r3, [r4, #168]	; 0xa8
   355a0:	mov	r1, #47	; 0x2f
   355a4:	ldr	r6, [r3, #8]
   355a8:	mov	r0, r6
   355ac:	bl	137fc <strchr@plt>
   355b0:	cmp	r0, #0
   355b4:	bne	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   355b8:	mov	r0, r6
   355bc:	ldr	r1, [pc, #188]	; 35680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a28>
   355c0:	bl	131f0 <strstr@plt>
   355c4:	subs	r6, r0, #0
   355c8:	beq	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   355cc:	ldr	r0, [r5, #16]
   355d0:	bl	134cc <bfd_elf_get_dt_soname@plt>
   355d4:	add	r6, r6, #4
   355d8:	subs	r7, r0, #0
   355dc:	beq	3566c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a14>
   355e0:	ldr	r3, [r4, #168]	; 0xa8
   355e4:	mov	r0, r7
   355e8:	ldr	r1, [r3, #8]
   355ec:	sub	r2, r6, r1
   355f0:	bl	13538 <filename_ncmp@plt>
   355f4:	cmp	r0, #0
   355f8:	bne	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   355fc:	mov	r2, #5
   35600:	ldr	r1, [pc, #124]	; 35684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a2c>
   35604:	bl	13460 <dcgettext@plt>
   35608:	ldr	r1, [r4, #168]	; 0xa8
   3560c:	mov	r3, r7
   35610:	ldr	r2, [r1, #4]
   35614:	ldr	r1, [r1, #8]
   35618:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3561c:	b	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   35620:	ldrd	r2, [r4, #160]	; 0xa0
   35624:	ldrd	r0, [sp, #96]	; 0x60
   35628:	cmp	r3, r1
   3562c:	cmpeq	r2, r0
   35630:	moveq	r3, #1
   35634:	movne	r3, #0
   35638:	orrs	r2, r0, r1
   3563c:	moveq	r3, #0
   35640:	cmp	r3, #0
   35644:	strne	r5, [r4, #60]	; 0x3c
   35648:	beq	3559c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21944>
   3564c:	b	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   35650:	mov	r0, r6
   35654:	mov	r2, #5
   35658:	ldr	r1, [pc, #40]	; 35688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a30>
   3565c:	bl	13460 <dcgettext@plt>
   35660:	ldr	r1, [r5, #16]
   35664:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   35668:	b	3554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218f4>
   3566c:	ldr	r0, [r5, #8]
   35670:	bl	1367c <lbasename@plt>
   35674:	mov	r7, r0
   35678:	b	355e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21988>
   3567c:	andeq	r7, ip, r8, lsl #28
   35680:	andeq	r4, r8, r0, lsr sl
   35684:	andeq	r4, r8, r8, lsr sl
   35688:	andeq	r4, r8, r0, lsl sl
   3568c:	push	{r4, lr}
   35690:	ldr	r4, [pc, #96]	; 356f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21aa0>
   35694:	ldrb	r0, [r4]
   35698:	and	r3, r0, #3
   3569c:	cmp	r3, #1
   356a0:	ldreq	r3, [r4, #116]	; 0x74
   356a4:	orreq	r3, r3, #134217728	; 0x8000000
   356a8:	streq	r3, [r4, #116]	; 0x74
   356ac:	ands	r0, r0, #2
   356b0:	bne	356d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a7c>
   356b4:	ldrb	r3, [r4, #7]
   356b8:	tst	r3, #4
   356bc:	beq	356d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a7c>
   356c0:	ldr	r3, [r4, #96]	; 0x60
   356c4:	cmp	r3, #0
   356c8:	bgt	356dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a84>
   356cc:	mov	r3, #0
   356d0:	str	r3, [r4, #96]	; 0x60
   356d4:	pop	{r4, lr}
   356d8:	b	2d52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198d4>
   356dc:	mov	r2, #5
   356e0:	ldr	r1, [pc, #20]	; 356fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21aa4>
   356e4:	bl	13460 <dcgettext@plt>
   356e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   356ec:	mov	r3, #0
   356f0:	str	r3, [r4, #96]	; 0x60
   356f4:	b	356d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a7c>
   356f8:	andeq	r8, ip, ip, lsl #1
   356fc:	andeq	r4, r8, r0, ror sl
   35700:	push	{r4, lr}
   35704:	mov	r1, #0
   35708:	ldr	r0, [pc, #68]	; 35754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21afc>
   3570c:	bl	2f924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bccc>
   35710:	ldr	lr, [pc, #64]	; 35758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b00>
   35714:	ldr	r3, [pc, #64]	; 3575c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b04>
   35718:	ldr	ip, [pc, #64]	; 35760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b08>
   3571c:	ldrb	r0, [lr]
   35720:	ldrb	r1, [r3, #6]
   35724:	ldrb	r2, [r3, #3]
   35728:	orr	r0, r0, #32
   3572c:	strb	r0, [lr]
   35730:	orr	r1, r1, #32
   35734:	orr	r2, r2, #16
   35738:	mov	lr, #1
   3573c:	mov	r0, #0
   35740:	strb	r1, [r3, #6]
   35744:	strb	r2, [r3, #3]
   35748:	str	lr, [ip, #8]
   3574c:	str	r0, [ip, #68]	; 0x44
   35750:	pop	{r4, pc}
   35754:	andeq	r5, r8, r8, rrx
   35758:	andeq	r8, ip, r8, asr r0
   3575c:	andeq	r8, ip, ip, lsl #1
   35760:	andeq	r8, ip, r4, ror r1
   35764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35768:	mov	r5, r0
   3576c:	ldr	r0, [r0, #148]	; 0x94
   35770:	ldr	r7, [pc, #1940]	; 35f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b4>
   35774:	mov	sl, r1
   35778:	ldr	r1, [r0, #4]
   3577c:	ldr	r3, [r7, #48]	; 0x30
   35780:	sub	sp, sp, #52	; 0x34
   35784:	ldr	r8, [r1, #4]
   35788:	ldr	r3, [r3, #4]
   3578c:	cmp	r8, #5
   35790:	mov	r6, r2
   35794:	ldr	fp, [r3, #4]
   35798:	ldreq	r3, [r5, #140]	; 0x8c
   3579c:	movne	r3, #0
   357a0:	moveq	r2, #1
   357a4:	ldreq	r3, [r3, #4]
   357a8:	movne	r2, #0
   357ac:	str	r3, [sp, #24]
   357b0:	ldrb	r3, [r7]
   357b4:	str	r2, [sp, #20]
   357b8:	and	r3, r3, #3
   357bc:	cmp	r3, #2
   357c0:	beq	35a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ddc>
   357c4:	ldrb	r3, [r7, #4]
   357c8:	sub	r2, fp, #5
   357cc:	clz	r2, r2
   357d0:	ands	r3, r3, #64	; 0x40
   357d4:	lsr	r2, r2, #5
   357d8:	bne	3589c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c44>
   357dc:	str	r3, [sp, #28]
   357e0:	ldr	r3, [sp, #20]
   357e4:	tst	r3, r2
   357e8:	beq	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   357ec:	ldr	r1, [r5, #20]
   357f0:	tst	r1, #1
   357f4:	beq	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   357f8:	ldr	lr, [r5, #140]	; 0x8c
   357fc:	ldr	r3, [lr, #8]
   35800:	tst	r3, #16777216	; 0x1000000
   35804:	beq	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   35808:	ldr	r3, [pc, #1792]	; 35f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b8>
   3580c:	ldr	r4, [r3]
   35810:	cmp	r4, #0
   35814:	beq	3586c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c14>
   35818:	ldr	ip, [pc, #1780]	; 35f14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222bc>
   3581c:	ldr	r9, [pc, #1780]	; 35f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222c0>
   35820:	ldr	r3, [r4, #28]
   35824:	cmp	r3, ip
   35828:	cmpne	r3, #0
   3582c:	beq	35860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c08>
   35830:	ldr	r0, [r3, #140]	; 0x8c
   35834:	ldr	r2, [r0, #8]
   35838:	tst	r2, #16777216	; 0x1000000
   3583c:	beq	35860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c08>
   35840:	ldr	r3, [r3, #20]
   35844:	eor	r3, r3, r1
   35848:	ands	r3, r3, r9
   3584c:	bne	35860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c08>
   35850:	ldr	r0, [r0, #32]
   35854:	ldr	r2, [lr, #32]
   35858:	cmp	r0, r2
   3585c:	beq	35ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22270>
   35860:	ldr	r4, [r4, #16]
   35864:	cmp	r4, #0
   35868:	bne	35820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21bc8>
   3586c:	ldr	r3, [pc, #1704]	; 35f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222c4>
   35870:	and	r3, r3, r1
   35874:	cmp	r3, #0
   35878:	beq	35ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22090>
   3587c:	tst	r1, #8
   35880:	beq	35e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2223c>
   35884:	ldr	r2, [pc, #1684]	; 35f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222c8>
   35888:	ldr	r3, [pc, #1684]	; 35f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222cc>
   3588c:	tst	r1, #16
   35890:	moveq	sl, r2
   35894:	movne	sl, r3
   35898:	b	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   3589c:	ldr	r1, [r5, #20]
   358a0:	ands	r3, r1, #1
   358a4:	bne	35c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21fe4>
   358a8:	str	r3, [sp, #28]
   358ac:	cmp	r6, #0
   358b0:	beq	35a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e40>
   358b4:	ldr	fp, [pc, #1644]	; 35f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222d0>
   358b8:	ldr	r3, [fp, #172]	; 0xac
   358bc:	cmp	r3, #0
   358c0:	bne	35918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cc0>
   358c4:	ldr	r4, [pc, #1632]	; 35f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222d4>
   358c8:	add	r9, r4, #216	; 0xd8
   358cc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   358d0:	mov	r2, #0
   358d4:	cmp	r3, r2
   358d8:	mov	r1, r2
   358dc:	mov	r0, r3
   358e0:	beq	35904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cac>
   358e4:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   358e8:	cmp	r0, #0
   358ec:	str	r0, [r4, #-16]
   358f0:	beq	35904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cac>
   358f4:	ldr	r3, [r0, #76]	; 0x4c
   358f8:	cmp	r3, #0
   358fc:	ldreq	r3, [r4, #-20]	; 0xffffffec
   35900:	streq	r3, [r0, #76]	; 0x4c
   35904:	add	r4, r4, #24
   35908:	cmp	r9, r4
   3590c:	bne	358cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c74>
   35910:	mov	r3, #1
   35914:	str	r3, [fp, #172]	; 0xac
   35918:	ldrb	r7, [r7]
   3591c:	tst	r7, #2
   35920:	bne	3593c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ce4>
   35924:	mov	r2, #13
   35928:	ldr	r1, [pc, #1536]	; 35f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222d8>
   3592c:	ldr	r0, [r5]
   35930:	bl	13bb0 <strncmp@plt>
   35934:	subs	r2, r0, #0
   35938:	beq	35b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f28>
   3593c:	and	r7, r7, #3
   35940:	cmp	r7, #2
   35944:	ldr	r7, [r5, #20]
   35948:	beq	359e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d8c>
   3594c:	ldr	r0, [r5, #148]	; 0x94
   35950:	mov	r4, r5
   35954:	mov	r1, r4
   35958:	bl	1385c <bfd_get_next_section_by_name@plt>
   3595c:	subs	r4, r0, #0
   35960:	beq	359e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d8c>
   35964:	ldr	r3, [r4, #60]	; 0x3c
   35968:	ldr	r0, [r4, #148]	; 0x94
   3596c:	cmp	r3, #0
   35970:	bne	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   35974:	ldr	r3, [r4, #20]
   35978:	eor	r2, r3, r7
   3597c:	and	r2, r2, #3
   35980:	and	r3, r3, #32768	; 0x8000
   35984:	orrs	r3, r2, r3
   35988:	bne	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   3598c:	ldr	r3, [r0, #40]	; 0x28
   35990:	tst	r3, #2048	; 0x800
   35994:	bne	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   35998:	ldr	r3, [r0, #164]	; 0xa4
   3599c:	cmp	r3, #0
   359a0:	beq	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   359a4:	ldrb	r3, [r3, #36]	; 0x24
   359a8:	tst	r3, #16
   359ac:	bne	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   359b0:	mov	r3, r5
   359b4:	ldr	r2, [r5, #148]	; 0x94
   359b8:	mov	r1, r4
   359bc:	bl	13c04 <_bfd_elf_match_sections_by_type@plt>
   359c0:	eor	r3, r7, #8
   359c4:	cmp	r0, #0
   359c8:	ldrne	r7, [r4, #20]
   359cc:	ldreq	r0, [r4, #148]	; 0x94
   359d0:	eorne	r7, r7, #8
   359d4:	orrne	r7, r7, r3
   359d8:	ldrne	r0, [r4, #148]	; 0x94
   359dc:	eorne	r7, r7, #8
   359e0:	b	35954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cfc>
   359e4:	ldr	r3, [pc, #1352]	; 35f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222dc>
   359e8:	tst	r7, r3
   359ec:	beq	35a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de4>
   359f0:	ands	r3, r7, #1
   359f4:	moveq	r9, r3
   359f8:	moveq	r8, r9
   359fc:	bne	35ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f4c>
   35a00:	mov	ip, #0
   35a04:	str	r9, [sp]
   35a08:	mov	r3, r8
   35a0c:	mov	r2, r6
   35a10:	mov	r1, sl
   35a14:	mov	r0, r5
   35a18:	str	ip, [sp, #8]
   35a1c:	str	ip, [sp, #4]
   35a20:	bl	24d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110b4>
   35a24:	mov	r4, r0
   35a28:	mov	r0, r4
   35a2c:	add	sp, sp, #52	; 0x34
   35a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35a34:	mov	r3, #0
   35a38:	b	358a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c50>
   35a3c:	ldr	r9, [pc, #1268]	; 35f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222e0>
   35a40:	ldr	r8, [r9, #8]
   35a44:	cmp	r8, #0
   35a48:	bne	35a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21da8>
   35a4c:	ldr	r0, [r9]
   35a50:	subs	r1, r0, #0
   35a54:	beq	35d04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220ac>
   35a58:	mov	r2, r8
   35a5c:	mov	r1, r8
   35a60:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   35a64:	mov	r8, r0
   35a68:	str	r0, [r9, #8]
   35a6c:	cmp	r8, #0
   35a70:	bne	35a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21da8>
   35a74:	ldr	r3, [pc, #1216]	; 35f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222e4>
   35a78:	mov	r1, r7
   35a7c:	add	r2, r9, #8
   35a80:	mov	r0, r5
   35a84:	bl	21574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd91c>
   35a88:	subs	r8, r0, #0
   35a8c:	ldreq	r3, [pc, #1148]	; 35f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b8>
   35a90:	ldreq	r8, [r3]
   35a94:	b	35a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21da8>
   35a98:	mov	r2, r6
   35a9c:	mov	r1, r6
   35aa0:	mov	r0, sl
   35aa4:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   35aa8:	subs	r4, r0, #0
   35aac:	bne	35b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ef4>
   35ab0:	b	358b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c5c>
   35ab4:	ldr	r3, [r1, #20]
   35ab8:	cmp	r3, #0
   35abc:	beq	35b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f08>
   35ac0:	ldr	r2, [r5, #20]
   35ac4:	eor	r3, r3, r2
   35ac8:	tst	r3, #3
   35acc:	bne	35b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ee0>
   35ad0:	cmp	fp, #5
   35ad4:	cmpeq	r8, #5
   35ad8:	bne	35b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f08>
   35adc:	ldr	r2, [r1, #140]	; 0x8c
   35ae0:	ldr	r3, [r5, #140]	; 0x8c
   35ae4:	ldr	ip, [r2, #32]
   35ae8:	ldr	r0, [r3, #32]
   35aec:	cmp	ip, r0
   35af0:	bne	35b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ee0>
   35af4:	ldrb	r0, [r7]
   35af8:	and	r0, r0, #3
   35afc:	cmp	r0, #2
   35b00:	bne	35b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ebc>
   35b04:	ldr	r2, [r2, #8]
   35b08:	ldr	r3, [r3, #8]
   35b0c:	teq	r2, r3
   35b10:	bmi	35b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ee0>
   35b14:	mov	r3, r5
   35b18:	ldr	r2, [r5, #148]	; 0x94
   35b1c:	ldr	r0, [r7, #48]	; 0x30
   35b20:	bl	13c04 <_bfd_elf_match_sections_by_type@plt>
   35b24:	cmp	r0, #0
   35b28:	bne	35b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f08>
   35b2c:	ldr	r3, [r4, #28]
   35b30:	cmp	r3, #0
   35b34:	moveq	r6, r4
   35b38:	mov	r0, r4
   35b3c:	mov	r1, #0
   35b40:	bl	214f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd898>
   35b44:	subs	r4, r0, #0
   35b48:	beq	35c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22030>
   35b4c:	ldr	r1, [r4, #28]
   35b50:	cmp	r1, #0
   35b54:	bne	35ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e5c>
   35b58:	mov	r6, r4
   35b5c:	b	35b38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ee0>
   35b60:	add	r0, r4, #8
   35b64:	mov	r1, r5
   35b68:	mov	r3, r4
   35b6c:	mov	r2, #0
   35b70:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   35b74:	mov	r0, r4
   35b78:	add	sp, sp, #52	; 0x34
   35b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35b80:	ldr	r3, [pc, #952]	; 35f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222e8>
   35b84:	ldr	r4, [r3, #76]	; 0x4c
   35b88:	cmp	r4, #0
   35b8c:	beq	3593c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ce4>
   35b90:	mov	r1, r5
   35b94:	mov	r3, r4
   35b98:	add	r0, r4, #8
   35b9c:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   35ba0:	b	35a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21dd0>
   35ba4:	ands	r4, r7, #2
   35ba8:	beq	35be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f90>
   35bac:	ldr	r9, [sp, #20]
   35bb0:	ldr	r3, [sp, #24]
   35bb4:	cmp	r3, #7
   35bb8:	movne	r9, #0
   35bbc:	andeq	r9, r9, #1
   35bc0:	cmp	r9, #0
   35bc4:	bne	35c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22028>
   35bc8:	cmp	r8, #5
   35bcc:	beq	35be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f90>
   35bd0:	mov	r2, #5
   35bd4:	ldr	r1, [pc, #872]	; 35f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222ec>
   35bd8:	mov	r0, sl
   35bdc:	bl	13bb0 <strncmp@plt>
   35be0:	cmp	r0, #0
   35be4:	beq	35c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22028>
   35be8:	ldr	r3, [pc, #856]	; 35f48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222f0>
   35bec:	tst	r7, r3
   35bf0:	beq	35cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22058>
   35bf4:	tst	r7, #4194304	; 0x400000
   35bf8:	bne	35cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22098>
   35bfc:	tst	r7, #1024	; 0x400
   35c00:	bne	35ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22268>
   35c04:	tst	r7, #8
   35c08:	beq	35ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22288>
   35c0c:	cmp	r8, #5
   35c10:	beq	35ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22290>
   35c14:	mov	r2, #4
   35c18:	ldr	r1, [pc, #812]	; 35f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222f4>
   35c1c:	mov	r0, sl
   35c20:	bl	13bb0 <strncmp@plt>
   35c24:	cmp	r0, #0
   35c28:	bne	35ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222a0>
   35c2c:	cmp	r4, #0
   35c30:	beq	35ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222a0>
   35c34:	ldr	r9, [pc, #788]	; 35f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222f8>
   35c38:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35c3c:	cmp	r8, #5
   35c40:	beq	35cb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22060>
   35c44:	mov	r2, #4
   35c48:	ldr	r1, [pc, #764]	; 35f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222f4>
   35c4c:	mov	r0, sl
   35c50:	bl	13bb0 <strncmp@plt>
   35c54:	cmp	r0, #0
   35c58:	bne	35a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ddc>
   35c5c:	ldrb	r1, [sl, #4]
   35c60:	ldr	r2, [pc, #748]	; 35f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222fc>
   35c64:	ldr	r3, [pc, #748]	; 35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22300>
   35c68:	cmp	r1, #97	; 0x61
   35c6c:	mov	r0, #1
   35c70:	str	r0, [sp, #28]
   35c74:	moveq	sl, r2
   35c78:	movne	sl, r3
   35c7c:	b	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   35c80:	ldr	r9, [pc, #724]	; 35f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22304>
   35c84:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35c88:	cmp	r6, #0
   35c8c:	ldreq	r6, [pc, #716]	; 35f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22308>
   35c90:	beq	358b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c5c>
   35c94:	mov	r2, r4
   35c98:	mov	r1, r5
   35c9c:	mov	r3, r6
   35ca0:	add	r0, r6, #8
   35ca4:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   35ca8:	mov	r4, r6
   35cac:	b	35a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21dd0>
   35cb0:	ldr	r9, [pc, #684]	; 35f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2230c>
   35cb4:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35cb8:	ldr	r0, [sp, #24]
   35cbc:	cmp	r0, #4
   35cc0:	beq	35cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220a0>
   35cc4:	ldr	r3, [pc, #652]	; 35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22300>
   35cc8:	cmp	r0, #9
   35ccc:	moveq	sl, r3
   35cd0:	movne	r3, #0
   35cd4:	moveq	r3, #1
   35cd8:	cmp	fp, #5
   35cdc:	str	r3, [sp, #28]
   35ce0:	beq	357f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ba0>
   35ce4:	b	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   35ce8:	ldr	sl, [pc, #632]	; 35f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22310>
   35cec:	b	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   35cf0:	ldr	r9, [pc, #628]	; 35f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22314>
   35cf4:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35cf8:	ldr	sl, [pc, #596]	; 35f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222fc>
   35cfc:	mov	r3, #1
   35d00:	b	357dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b84>
   35d04:	ldr	r3, [r5]
   35d08:	ldr	r2, [pc, #512]	; 35f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b8>
   35d0c:	ldrb	r3, [r3, #4]
   35d10:	ldr	r4, [r2]
   35d14:	sub	r3, r3, #97	; 0x61
   35d18:	cmp	r4, #0
   35d1c:	clz	r3, r3
   35d20:	lsr	r3, r3, #5
   35d24:	str	r3, [sp, #24]
   35d28:	beq	35a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e1c>
   35d2c:	str	r7, [sp, #32]
   35d30:	str	r9, [sp, #36]	; 0x24
   35d34:	str	sl, [sp, #44]	; 0x2c
   35d38:	mov	fp, r1
   35d3c:	ldr	sl, [sp, #28]
   35d40:	str	r1, [sp, #20]
   35d44:	mov	r8, r1
   35d48:	mov	r9, r1
   35d4c:	mov	r7, r1
   35d50:	str	r5, [sp, #40]	; 0x28
   35d54:	str	r6, [sp, #28]
   35d58:	b	35e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221c0>
   35d5c:	ldr	r6, [r4, #24]
   35d60:	mov	r2, #4
   35d64:	mov	r0, r6
   35d68:	ldr	r1, [pc, #476]	; 35f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222f4>
   35d6c:	bl	13bb0 <strncmp@plt>
   35d70:	cmp	r0, #0
   35d74:	bne	35e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221cc>
   35d78:	ldrb	r2, [r6, #4]
   35d7c:	cmp	sl, #0
   35d80:	sub	r5, r2, #97	; 0x61
   35d84:	clz	r5, r5
   35d88:	lsr	r5, r5, #5
   35d8c:	bne	35e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22244>
   35d90:	add	r1, r5, #4
   35d94:	add	r1, r6, r1
   35d98:	ldr	r0, [pc, #464]	; 35f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22318>
   35d9c:	bl	13268 <strcmp@plt>
   35da0:	cmp	r0, #0
   35da4:	beq	35e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22244>
   35da8:	ldr	r3, [sp, #24]
   35dac:	cmp	r9, #0
   35db0:	sub	r2, r3, r5
   35db4:	clz	r2, r2
   35db8:	lsr	r2, r2, #5
   35dbc:	movne	r3, r2
   35dc0:	moveq	r3, #1
   35dc4:	cmp	r8, #0
   35dc8:	moveq	r2, #1
   35dcc:	cmp	r3, #0
   35dd0:	movne	r9, r4
   35dd4:	cmp	r2, #0
   35dd8:	ldr	r3, [r4, #28]
   35ddc:	beq	35e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221d0>
   35de0:	cmp	r3, #0
   35de4:	beq	35e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221ac>
   35de8:	ldr	r3, [r3, #20]
   35dec:	tst	r3, #1
   35df0:	beq	35e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221ac>
   35df4:	mov	r8, r4
   35df8:	tst	r3, #8
   35dfc:	movne	fp, r4
   35e00:	str	r4, [sp, #20]
   35e04:	ldr	r3, [r4, #16]
   35e08:	mov	r7, r4
   35e0c:	cmp	r3, #0
   35e10:	beq	35e40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221e8>
   35e14:	mov	r4, r3
   35e18:	ldr	r3, [r4, #72]	; 0x48
   35e1c:	cmp	r3, #0
   35e20:	bge	35d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22104>
   35e24:	ldr	r3, [r4, #28]
   35e28:	cmp	r3, #0
   35e2c:	beq	35e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221ac>
   35e30:	ldr	r3, [r3, #20]
   35e34:	tst	r3, #1
   35e38:	beq	35e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221ac>
   35e3c:	b	35df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221a0>
   35e40:	mov	r1, r9
   35e44:	ldr	r7, [sp, #32]
   35e48:	ldr	r9, [sp, #36]	; 0x24
   35e4c:	ldr	r5, [sp, #40]	; 0x28
   35e50:	ldr	sl, [sp, #44]	; 0x2c
   35e54:	ldr	r6, [sp, #28]
   35e58:	mov	r2, fp
   35e5c:	cmp	r8, #0
   35e60:	beq	35e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22214>
   35e64:	str	r8, [r9, #8]
   35e68:	b	35a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e14>
   35e6c:	cmp	r1, #0
   35e70:	movne	r8, r1
   35e74:	bne	35e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2220c>
   35e78:	cmp	r2, #0
   35e7c:	movne	r8, r2
   35e80:	bne	35e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2220c>
   35e84:	ldr	r8, [sp, #20]
   35e88:	cmp	r8, #0
   35e8c:	moveq	r8, r4
   35e90:	b	35e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2220c>
   35e94:	ldr	sl, [pc, #216]	; 35f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2231c>
   35e98:	b	358ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c54>
   35e9c:	mov	r1, r9
   35ea0:	mov	r4, r7
   35ea4:	ldr	r9, [sp, #36]	; 0x24
   35ea8:	mov	r2, fp
   35eac:	ldr	r7, [sp, #32]
   35eb0:	ldr	r5, [sp, #40]	; 0x28
   35eb4:	ldr	sl, [sp, #44]	; 0x2c
   35eb8:	ldr	r6, [sp, #28]
   35ebc:	b	35e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22204>
   35ec0:	ldr	r9, [pc, #176]	; 35f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22320>
   35ec4:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35ec8:	mov	r2, r3
   35ecc:	mov	r1, r5
   35ed0:	mov	r3, r4
   35ed4:	add	r0, r4, #8
   35ed8:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   35edc:	b	35a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21dd0>
   35ee0:	ldr	r9, [pc, #148]	; 35f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22324>
   35ee4:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35ee8:	ldr	r3, [sp, #24]
   35eec:	cmp	r3, #9
   35ef0:	cmpne	r3, #4
   35ef4:	beq	35c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21fd4>
   35ef8:	ldr	r9, [pc, #44]	; 35f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222d4>
   35efc:	tst	r7, #16
   35f00:	sub	r3, r9, #24
   35f04:	movne	r9, r3
   35f08:	b	35a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21de8>
   35f0c:	andeq	r8, ip, ip, lsl #1
   35f10:	andeq	r8, ip, r8, rrx
   35f14:	andeq	r7, ip, r8, lsr #17
   35f18:	andeq	r0, r0, fp, lsl r1
   35f1c:	andeq	r0, r0, r2, lsl #2
   35f20:			; <UNDEFINED> instruction: 0x00084ab8
   35f24:	andeq	r4, r8, r8, asr #21
   35f28:	andeq	r7, ip, r8, lsl #28
   35f2c:	andeq	r7, ip, r0, lsl #9
   35f30:	strdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   35f34:	andeq	r2, r0, r1
   35f38:	andeq	r7, ip, r8, lsr #10
   35f3c:	andeq	r3, r1, r4, lsl #24
   35f40:	andeq	r7, ip, r4, lsr #8
   35f44:	andeq	r4, r8, r4, lsl #22
   35f48:	andeq	r0, r0, r2, lsl #10
   35f4c:	andeq	r4, r8, ip, ror #21
   35f50:	andeq	r7, ip, r0, ror #9
   35f54:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   35f58:	andeq	r4, r8, r0, ror #21
   35f5c:	strdeq	r7, [ip], -r8
   35f60:	andeq	r0, r0, lr, ror r1
   35f64:	andeq	r7, ip, r8, asr #9
   35f68:	andeq	r4, r8, ip, lsr #21
   35f6c:	andeq	r7, ip, r0, lsl r5
   35f70:	andeq	r4, r8, ip, lsl #22
   35f74:	andeq	r4, r8, r0, lsr #21
   35f78:	muleq	ip, r8, r4
   35f7c:			; <UNDEFINED> instruction: 0x000c74b0
   35f80:	ldr	r3, [r0, #4]
   35f84:	cmp	r3, #5
   35f88:	bxne	lr
   35f8c:	ldr	r1, [r0, #8]
   35f90:	ldrh	r3, [r1, #24]
   35f94:	and	r3, r3, #896	; 0x380
   35f98:	cmp	r3, #512	; 0x200
   35f9c:	bxeq	lr
   35fa0:	ldr	r3, [r1, #20]
   35fa4:	tst	r3, #32768	; 0x8000
   35fa8:	bxne	lr
   35fac:	ldr	r3, [r1, #60]	; 0x3c
   35fb0:	cmp	r3, #0
   35fb4:	bxeq	lr
   35fb8:	ldr	r0, [pc, #16]	; 35fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22378>
   35fbc:	ldr	r2, [r3, #148]	; 0x94
   35fc0:	ldr	r3, [r0, #48]	; 0x30
   35fc4:	cmp	r2, r3
   35fc8:	bxne	lr
   35fcc:	b	13bd4 <elf32_arm_next_input_section@plt>
   35fd0:	andeq	r8, ip, ip, lsl #1
   35fd4:	push	{r4, r5, r6, lr}
   35fd8:	mov	r4, r0
   35fdc:	ldr	r5, [pc, #200]	; 360ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22454>
   35fe0:	ldr	r3, [r5, #60]	; 0x3c
   35fe4:	cmp	r3, #0
   35fe8:	beq	35ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x223a4>
   35fec:	ldr	r0, [r3, #16]
   35ff0:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   35ff4:	tst	r0, #1
   35ff8:	popeq	{r4, r5, r6, pc}
   35ffc:	ldr	r0, [r4, #8]
   36000:	cmp	r0, #0
   36004:	popeq	{r4, r5, r6, pc}
   36008:	ldr	r3, [r4, #16]
   3600c:	cmp	r3, #0
   36010:	popeq	{r4, r5, r6, pc}
   36014:	ldr	r2, [r5, #60]	; 0x3c
   36018:	cmp	r2, #0
   3601c:	beq	36034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x223dc>
   36020:	mov	r0, r3
   36024:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   36028:	tst	r0, #1
   3602c:	popne	{r4, r5, r6, pc}
   36030:	ldr	r0, [r4, #8]
   36034:	ldr	r3, [r5, #168]	; 0xa8
   36038:	ldr	r1, [r3, #8]
   3603c:	bl	13394 <filename_cmp@plt>
   36040:	cmp	r0, #0
   36044:	beq	360a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2244c>
   36048:	ldrb	r3, [r4, #36]	; 0x24
   3604c:	tst	r3, #4
   36050:	beq	36080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22428>
   36054:	mov	r1, #47	; 0x2f
   36058:	ldr	r0, [r4, #8]
   3605c:	bl	139ac <strrchr@plt>
   36060:	cmp	r0, #0
   36064:	beq	36080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22428>
   36068:	ldr	r3, [r5, #168]	; 0xa8
   3606c:	add	r0, r0, #1
   36070:	ldr	r1, [r3, #8]
   36074:	bl	13394 <filename_cmp@plt>
   36078:	cmp	r0, #0
   3607c:	beq	360a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2244c>
   36080:	ldr	r0, [r4, #16]
   36084:	bl	134cc <bfd_elf_get_dt_soname@plt>
   36088:	cmp	r0, #0
   3608c:	popeq	{r4, r5, r6, pc}
   36090:	ldr	r3, [r5, #168]	; 0xa8
   36094:	ldr	r1, [r3, #8]
   36098:	bl	13394 <filename_cmp@plt>
   3609c:	cmp	r0, #0
   360a0:	popne	{r4, r5, r6, pc}
   360a4:	str	r4, [r5, #60]	; 0x3c
   360a8:	pop	{r4, r5, r6, pc}
   360ac:	andeq	r7, ip, r8, lsl #28
   360b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   360b4:	mov	r6, r1
   360b8:	ldr	r9, [pc, #640]	; 36340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226e8>
   360bc:	sub	sp, sp, #12
   360c0:	mov	r8, r0
   360c4:	ldr	r3, [r9, #48]	; 0x30
   360c8:	mov	r0, r1
   360cc:	mov	r7, r2
   360d0:	ldr	r3, [r3, #4]
   360d4:	ldr	r1, [r3]
   360d8:	bl	133dc <bfd_openr@plt>
   360dc:	subs	r5, r0, #0
   360e0:	beq	361d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22578>
   360e4:	ldr	r3, [r5, #40]	; 0x28
   360e8:	mov	r1, #1
   360ec:	orr	r3, r3, #1048576	; 0x100000
   360f0:	str	r3, [r5, #40]	; 0x28
   360f4:	bl	13ae4 <bfd_check_format@plt>
   360f8:	subs	r4, r0, #0
   360fc:	beq	361bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22564>
   36100:	ldr	r4, [r5, #40]	; 0x28
   36104:	lsr	r4, r4, #5
   36108:	ands	r4, r4, #64	; 0x40
   3610c:	beq	361bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22564>
   36110:	ldr	r3, [r9, #48]	; 0x30
   36114:	ldr	r2, [r5, #4]
   36118:	ldr	r3, [r3, #4]
   3611c:	cmp	r2, r3
   36120:	bne	3626c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22614>
   36124:	cmp	r7, #0
   36128:	bne	36204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225ac>
   3612c:	add	r1, sp, #4
   36130:	mov	r0, r5
   36134:	bl	137c0 <bfd_elf_get_bfd_needed_list@plt>
   36138:	cmp	r0, #0
   3613c:	beq	36328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226d0>
   36140:	ldr	r3, [sp, #4]
   36144:	ldr	r7, [pc, #504]	; 36344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226ec>
   36148:	cmp	r3, #0
   3614c:	beq	36208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225b0>
   36150:	ldr	r2, [pc, #496]	; 36348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226f0>
   36154:	mov	r1, #0
   36158:	ldr	r0, [pc, #492]	; 3634c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226f4>
   3615c:	str	r3, [r7, #176]	; 0xb0
   36160:	str	r1, [r7, #180]	; 0xb4
   36164:	str	r2, [r7, #4]
   36168:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   3616c:	ldr	r3, [r7, #180]	; 0xb4
   36170:	cmp	r3, #0
   36174:	bne	361ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22554>
   36178:	ldr	r4, [sp, #4]
   3617c:	cmp	r4, #0
   36180:	beq	361ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22554>
   36184:	ldr	r9, [pc, #452]	; 36350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226f8>
   36188:	mov	r2, #7
   3618c:	mov	r1, r9
   36190:	ldr	r0, [r4, #8]
   36194:	bl	13bb0 <strncmp@plt>
   36198:	cmp	r0, #0
   3619c:	beq	36208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225b0>
   361a0:	ldr	r4, [r4]
   361a4:	cmp	r4, #0
   361a8:	bne	36188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22530>
   361ac:	mov	r0, r5
   361b0:	bl	139dc <bfd_close@plt>
   361b4:	mov	r4, #0
   361b8:	b	361c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2256c>
   361bc:	mov	r0, r5
   361c0:	bl	139dc <bfd_close@plt>
   361c4:	mov	r0, r4
   361c8:	add	sp, sp, #12
   361cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   361d0:	ldr	r3, [pc, #380]	; 36354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226fc>
   361d4:	ldr	r4, [r3]
   361d8:	cmp	r4, #0
   361dc:	beq	361c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2256c>
   361e0:	mov	r2, #5
   361e4:	ldr	r1, [pc, #364]	; 36358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22700>
   361e8:	bl	13460 <dcgettext@plt>
   361ec:	mov	r1, r6
   361f0:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   361f4:	mov	r4, r5
   361f8:	mov	r0, r4
   361fc:	add	sp, sp, #12
   36200:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36204:	ldr	r7, [pc, #312]	; 36344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226ec>
   36208:	ldr	r1, [pc, #332]	; 3635c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22704>
   3620c:	mov	r0, r5
   36210:	bl	133a0 <bfd_stat@plt>
   36214:	cmp	r0, #0
   36218:	bne	362a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2264c>
   3621c:	ldr	r0, [r5]
   36220:	bl	1367c <lbasename@plt>
   36224:	ldr	r3, [pc, #296]	; 36354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226fc>
   36228:	ldr	r3, [r3]
   3622c:	cmp	r3, #0
   36230:	mov	r4, r0
   36234:	bne	36284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2262c>
   36238:	ldr	r2, [pc, #288]	; 36360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22708>
   3623c:	mov	r3, #0
   36240:	ldr	r0, [pc, #260]	; 3634c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226f4>
   36244:	str	r3, [r7, #60]	; 0x3c
   36248:	str	r2, [r7, #4]
   3624c:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   36250:	ldr	r3, [r7, #60]	; 0x3c
   36254:	cmp	r3, #0
   36258:	beq	362c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22668>
   3625c:	mov	r4, #1
   36260:	mov	r0, r4
   36264:	add	sp, sp, #12
   36268:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3626c:	mov	r0, r5
   36270:	bl	139dc <bfd_close@plt>
   36274:	mov	r4, #0
   36278:	mov	r0, r4
   3627c:	add	sp, sp, #12
   36280:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36284:	mov	r2, #5
   36288:	ldr	r1, [pc, #212]	; 36364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2270c>
   3628c:	mov	r0, #0
   36290:	bl	13460 <dcgettext@plt>
   36294:	mov	r2, r6
   36298:	mov	r1, r4
   3629c:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   362a0:	b	36238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225e0>
   362a4:	mov	r2, #5
   362a8:	ldr	r1, [pc, #184]	; 36368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22710>
   362ac:	mov	r0, #0
   362b0:	bl	13460 <dcgettext@plt>
   362b4:	mov	r1, r5
   362b8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   362bc:	b	3621c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225c4>
   362c0:	mov	r0, r5
   362c4:	mov	r1, r4
   362c8:	bl	13a54 <bfd_elf_set_dt_needed_name@plt>
   362cc:	ldr	r0, [r8]
   362d0:	cmp	r0, #0
   362d4:	beq	362e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22690>
   362d8:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   362dc:	tst	r0, #4
   362e0:	movne	r1, #14
   362e4:	bne	362ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22694>
   362e8:	mov	r1, #2
   362ec:	mov	r0, r5
   362f0:	bl	137f0 <bfd_elf_set_dyn_lib_class@plt>
   362f4:	ldr	r3, [r5, #4]
   362f8:	ldr	r1, [pc, #64]	; 36340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226e8>
   362fc:	mov	r0, r5
   36300:	ldr	r3, [r3, #364]	; 0x16c
   36304:	blx	r3
   36308:	cmp	r0, #0
   3630c:	bne	3625c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22604>
   36310:	mov	r2, #5
   36314:	ldr	r1, [pc, #80]	; 3636c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22714>
   36318:	bl	13460 <dcgettext@plt>
   3631c:	mov	r1, r5
   36320:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36324:	b	3625c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22604>
   36328:	mov	r2, #5
   3632c:	ldr	r1, [pc, #60]	; 36370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22718>
   36330:	bl	13460 <dcgettext@plt>
   36334:	mov	r1, r5
   36338:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3633c:	b	36140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x224e8>
   36340:	andeq	r8, ip, ip, lsl #1
   36344:	andeq	r7, ip, r8, lsl #28
   36348:	strdeq	r6, [r3], -r8
   3634c:	andeq	r2, r3, ip, lsr r4
   36350:	andeq	r4, r8, r8, asr #22
   36354:	andeq	r8, ip, r4, ror #3
   36358:	muleq	r5, ip, sp
   3635c:	andeq	r7, ip, r8, asr #28
   36360:	andeq	r5, r3, r4, lsr r5
   36364:	andeq	r4, r8, r0, ror fp
   36368:	andeq	r4, r8, r0, asr fp
   3636c:	andeq	pc, r4, r8, ror fp	; <UNPREDICTABLE>
   36370:	andeq	r4, r8, r4, lsl fp
   36374:	mov	r3, r1
   36378:	ldr	r1, [r1, #4]
   3637c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36380:	sub	sp, sp, #36	; 0x24
   36384:	str	r1, [sp, #12]
   36388:	ldrb	r1, [r1]
   3638c:	str	r2, [sp, #16]
   36390:	cmp	r1, #47	; 0x2f
   36394:	beq	366e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a8c>
   36398:	cmp	r0, #0
   3639c:	mov	r4, r0
   363a0:	beq	365c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22970>
   363a4:	ldrb	r2, [r0]
   363a8:	cmp	r2, #0
   363ac:	beq	365c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22970>
   363b0:	ldr	r2, [sp, #12]
   363b4:	ldr	r3, [r3]
   363b8:	mov	r0, r2
   363bc:	str	r3, [sp, #24]
   363c0:	str	r2, [sp, #28]
   363c4:	bl	137d8 <strlen@plt>
   363c8:	ldr	fp, [pc, #808]	; 366f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22aa0>
   363cc:	add	r3, r0, #2
   363d0:	str	r3, [sp, #20]
   363d4:	ldr	r3, [pc, #800]	; 366fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22aa4>
   363d8:	mov	r0, r4
   363dc:	ldrb	r1, [r3, #72]	; 0x48
   363e0:	bl	137fc <strchr@plt>
   363e4:	subs	r9, r0, #0
   363e8:	beq	366c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a70>
   363ec:	ldr	r3, [sp, #20]
   363f0:	sub	r5, r9, r4
   363f4:	add	r0, r5, r3
   363f8:	bl	13574 <xmalloc@plt>
   363fc:	cmp	r4, r9
   36400:	mov	r6, r0
   36404:	beq	36424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227cc>
   36408:	mov	r1, r4
   3640c:	mov	r2, r5
   36410:	bl	133b8 <memcpy@plt>
   36414:	add	r0, r5, #1
   36418:	add	r0, r6, r0
   3641c:	mov	r3, #47	; 0x2f
   36420:	strb	r3, [r6, r5]
   36424:	ldr	r1, [sp, #12]
   36428:	bl	135d4 <strcpy@plt>
   3642c:	mov	r8, #0
   36430:	str	r9, [sp, #8]
   36434:	b	36540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228e8>
   36438:	ldr	r1, [pc, #704]	; 36700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22aa8>
   3643c:	mov	r0, r7
   36440:	bl	13268 <strcmp@plt>
   36444:	cmp	r0, #0
   36448:	beq	36460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22808>
   3644c:	mov	r0, r7
   36450:	ldr	r1, [pc, #684]	; 36704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22aac>
   36454:	bl	13268 <strcmp@plt>
   36458:	cmp	r0, #0
   3645c:	bne	365a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2294c>
   36460:	ldr	r3, [sp, #24]
   36464:	cmp	r3, #0
   36468:	beq	36694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a3c>
   3646c:	ldr	r9, [r3]
   36470:	cmp	r9, #0
   36474:	beq	365a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2294c>
   36478:	ldrb	r2, [r9]
   3647c:	cmp	r2, #47	; 0x2f
   36480:	beq	366a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a50>
   36484:	bl	134c0 <getpwd@plt>
   36488:	mov	r7, r0
   3648c:	mov	r0, r9
   36490:	bl	137d8 <strlen@plt>
   36494:	mov	r8, r0
   36498:	mov	r0, r7
   3649c:	bl	137d8 <strlen@plt>
   364a0:	add	r0, r8, r0
   364a4:	add	r0, r0, #2
   364a8:	bl	13574 <xmalloc@plt>
   364ac:	mov	r3, r9
   364b0:	mov	r2, r7
   364b4:	ldr	r1, [pc, #588]	; 36708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ab0>
   364b8:	mov	r8, r0
   364bc:	bl	13a00 <sprintf@plt>
   364c0:	mov	r1, #47	; 0x2f
   364c4:	mov	r0, r8
   364c8:	bl	139ac <strrchr@plt>
   364cc:	cmp	r0, #0
   364d0:	beq	366b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a60>
   364d4:	mov	r3, #0
   364d8:	strb	r3, [r0]
   364dc:	mov	r0, r8
   364e0:	bl	137d8 <strlen@plt>
   364e4:	mov	r7, r8
   364e8:	add	r0, sl, r0
   364ec:	bl	13574 <xmalloc@plt>
   364f0:	cmp	r4, #0
   364f4:	sub	r5, r5, r6
   364f8:	mov	sl, r0
   364fc:	beq	36670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a18>
   36500:	add	r4, r4, #1
   36504:	str	r8, [sp]
   36508:	mov	r3, r6
   3650c:	mov	r2, r5
   36510:	ldr	r1, [pc, #500]	; 3670c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ab4>
   36514:	str	r4, [sp, #4]
   36518:	bl	13a00 <sprintf@plt>
   3651c:	mov	r0, r8
   36520:	bl	137d8 <strlen@plt>
   36524:	add	r8, r5, #1
   36528:	add	r8, r8, r0
   3652c:	mov	r0, r6
   36530:	bl	13364 <free@plt>
   36534:	mov	r6, sl
   36538:	mov	r0, r7
   3653c:	bl	13364 <free@plt>
   36540:	add	r0, r6, r8
   36544:	mov	r1, #36	; 0x24
   36548:	bl	137fc <strchr@plt>
   3654c:	subs	r5, r0, #0
   36550:	beq	36634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x229dc>
   36554:	mov	r1, #47	; 0x2f
   36558:	bl	137fc <strchr@plt>
   3655c:	add	r8, r5, #1
   36560:	mov	r4, r0
   36564:	mov	r0, r6
   36568:	bl	137d8 <strlen@plt>
   3656c:	cmp	r4, #0
   36570:	movne	r3, #0
   36574:	strbne	r3, [r4]
   36578:	ldrb	r3, [r5, #1]
   3657c:	mov	sl, r0
   36580:	cmp	r3, #123	; 0x7b
   36584:	addeq	r0, r5, #2
   36588:	ldrbeq	r3, [r5, #2]
   3658c:	movne	r0, r8
   36590:	add	r7, r0, #1
   36594:	cmp	r3, #76	; 0x4c
   36598:	beq	365d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2297c>
   3659c:	cmp	r3, #79	; 0x4f
   365a0:	beq	36438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227e0>
   365a4:	ldr	r3, [fp]
   365a8:	cmp	r3, #0
   365ac:	bne	36608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x229b0>
   365b0:	cmp	r4, #0
   365b4:	movne	r3, #47	; 0x2f
   365b8:	strbne	r3, [r4]
   365bc:	sub	r8, r8, r6
   365c0:	mov	r7, #0
   365c4:	b	36538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228e0>
   365c8:	mov	r0, #0
   365cc:	add	sp, sp, #36	; 0x24
   365d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365d4:	ldr	r1, [pc, #308]	; 36710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ab8>
   365d8:	mov	r0, r7
   365dc:	bl	13268 <strcmp@plt>
   365e0:	cmp	r0, #0
   365e4:	beq	36624 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x229cc>
   365e8:	mov	r0, r7
   365ec:	ldr	r1, [pc, #288]	; 36714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22abc>
   365f0:	bl	13268 <strcmp@plt>
   365f4:	subs	r7, r0, #0
   365f8:	bne	365a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2294c>
   365fc:	mov	r0, #3
   36600:	ldr	r8, [pc, #272]	; 36718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ac0>
   36604:	b	364e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22890>
   36608:	mov	r2, #5
   3660c:	ldr	r1, [pc, #264]	; 3671c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ac4>
   36610:	mov	r0, #0
   36614:	bl	13460 <dcgettext@plt>
   36618:	mov	r1, r5
   3661c:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   36620:	b	365b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22958>
   36624:	mov	r7, r0
   36628:	ldr	r8, [pc, #232]	; 36718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ac0>
   3662c:	mov	r0, #3
   36630:	b	364e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22890>
   36634:	ldr	r2, [sp, #16]
   36638:	mov	r1, r6
   3663c:	add	r0, sp, #24
   36640:	ldr	r9, [sp, #8]
   36644:	str	r6, [sp, #28]
   36648:	bl	360b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22458>
   3664c:	cmp	r0, #0
   36650:	bne	366d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a80>
   36654:	mov	r0, r6
   36658:	bl	13364 <free@plt>
   3665c:	ldrb	r3, [r9]
   36660:	cmp	r3, #0
   36664:	beq	365c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22970>
   36668:	add	r4, r9, #1
   3666c:	b	363d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2277c>
   36670:	str	r8, [sp]
   36674:	mov	r3, r6
   36678:	mov	r2, r5
   3667c:	ldr	r1, [pc, #156]	; 36720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ac8>
   36680:	bl	13a00 <sprintf@plt>
   36684:	mov	r0, r8
   36688:	bl	137d8 <strlen@plt>
   3668c:	add	r8, r0, r5
   36690:	b	3652c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228d4>
   36694:	ldr	r3, [pc, #136]	; 36724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22acc>
   36698:	ldr	r3, [r3, #48]	; 0x30
   3669c:	cmp	r3, #0
   366a0:	bne	3646c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22814>
   366a4:	b	365a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2294c>
   366a8:	mov	r0, r9
   366ac:	bl	135a4 <xstrdup@plt>
   366b0:	mov	r8, r0
   366b4:	b	364c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22868>
   366b8:	mov	r0, r8
   366bc:	bl	137d8 <strlen@plt>
   366c0:	mov	r7, r8
   366c4:	b	364e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22890>
   366c8:	mov	r0, r4
   366cc:	bl	137d8 <strlen@plt>
   366d0:	add	r9, r4, r0
   366d4:	b	363ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22794>
   366d8:	mov	r0, #1
   366dc:	add	sp, sp, #36	; 0x24
   366e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   366e4:	ldr	r1, [sp, #12]
   366e8:	mov	r0, r3
   366ec:	bl	360b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22458>
   366f0:	add	sp, sp, #36	; 0x24
   366f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   366f8:	andeq	r8, ip, r4, ror #3
   366fc:	andeq	r8, ip, r4, ror r1
   36700:	andeq	r4, r8, r0, lsl #23
   36704:	andeq	r4, r8, r8, lsl #23
   36708:	muleq	r8, r8, fp
   3670c:	muleq	r8, r4, fp
   36710:	andeq	r3, r4, r0, asr sp
   36714:	muleq	r8, r0, fp
   36718:	andeq	r5, r8, ip, asr #32
   3671c:	andeq	r4, r8, r8, lsr #23
   36720:	andeq	r4, r8, r0, lsr #23
   36724:	andeq	r8, ip, ip, lsl #1
   36728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3672c:	sub	sp, sp, #52	; 0x34
   36730:	ldr	sl, [pc, #2124]	; 36f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2332c>
   36734:	bl	2d60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199b4>
   36738:	ldr	r3, [sl, #28]
   3673c:	str	r3, [sp, #8]
   36740:	ldr	r3, [r3, #40]	; 0x28
   36744:	cmp	r3, #1
   36748:	bne	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d58>
   3674c:	ldr	r4, [pc, #2100]	; 36f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23330>
   36750:	ldr	r0, [r4, #32]
   36754:	cmp	r0, #0
   36758:	beq	36780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b28>
   3675c:	bl	13880 <unlink_if_ordinary@plt>
   36760:	ldr	r3, [sl, #48]	; 0x30
   36764:	ldr	r0, [r4, #32]
   36768:	ldr	r3, [r3, #4]
   3676c:	ldr	r1, [r3]
   36770:	bl	13940 <bfd_openw@plt>
   36774:	cmp	r0, #0
   36778:	str	r0, [sl, #52]	; 0x34
   3677c:	beq	36f48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x232f0>
   36780:	ldr	r3, [pc, #2052]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36784:	ldr	r0, [r3, #8]
   36788:	cmp	r0, #0
   3678c:	ldreq	r3, [sl, #48]	; 0x30
   36790:	beq	36844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bec>
   36794:	ldr	r4, [sl, #56]	; 0x38
   36798:	cmp	r4, #0
   3679c:	bne	367b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b58>
   367a0:	b	36bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f98>
   367a4:	ldr	r4, [r4, #156]	; 0x9c
   367a8:	cmp	r4, #0
   367ac:	beq	36bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f98>
   367b0:	ldr	r3, [r4, #4]
   367b4:	ldr	r5, [r3, #4]
   367b8:	cmp	r5, #5
   367bc:	bne	367a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b4c>
   367c0:	ldr	r3, [r4, #108]	; 0x6c
   367c4:	cmp	r3, #0
   367c8:	beq	367a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b4c>
   367cc:	ldr	r3, [r4, #164]	; 0xa4
   367d0:	ldrb	r3, [r3, #36]	; 0x24
   367d4:	tst	r3, #16
   367d8:	bne	367a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b4c>
   367dc:	bl	32100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4a8>
   367e0:	cmp	r0, #0
   367e4:	beq	36d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23124>
   367e8:	adds	r6, r0, #16
   367ec:	beq	36d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23124>
   367f0:	ldr	r2, [pc, #1944]	; 36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23338>
   367f4:	mov	r0, r4
   367f8:	ldr	r1, [pc, #1940]	; 36f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2333c>
   367fc:	bl	132c8 <bfd_make_section_with_flags@plt>
   36800:	subs	r2, r0, #0
   36804:	beq	36bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f80>
   36808:	ldr	r3, [sl, #48]	; 0x30
   3680c:	mov	r1, #2
   36810:	str	r1, [r2, #64]	; 0x40
   36814:	ldr	r1, [r3, #160]	; 0xa0
   36818:	ldr	ip, [pc, #1900]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   3681c:	ldr	r0, [r2, #140]	; 0x8c
   36820:	ldr	r1, [r1, #2352]	; 0x930
   36824:	ldr	lr, [pc, #1900]	; 36f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23340>
   36828:	ldr	ip, [ip, #8]
   3682c:	str	r2, [r1, #24]
   36830:	str	lr, [r1, #16]
   36834:	str	ip, [r1, #20]
   36838:	mov	r1, #7
   3683c:	str	r1, [r0, #4]
   36840:	str	r6, [r2, #36]	; 0x24
   36844:	ldr	r3, [r3, #4]
   36848:	ldr	r0, [pc, #1844]	; 36f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2332c>
   3684c:	ldr	r3, [r3, #448]	; 0x1c0
   36850:	ldr	r3, [r3, #444]	; 0x1bc
   36854:	blx	r3
   36858:	ldrb	r3, [sl]
   3685c:	and	r3, r3, #3
   36860:	cmp	r3, #2
   36864:	beq	36d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23144>
   36868:	ldrb	r3, [sl, #4]
   3686c:	ands	r3, r3, #32
   36870:	beq	36c4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ff4>
   36874:	ldr	r1, [pc, #1800]	; 36f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2332c>
   36878:	ldr	r0, [sl, #48]	; 0x30
   3687c:	bl	13610 <bfd_elf_get_needed_list@plt>
   36880:	subs	r6, r0, #0
   36884:	movne	r9, r6
   36888:	beq	369a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d48>
   3688c:	ldr	r0, [r9, #4]
   36890:	cmp	r0, #0
   36894:	beq	368c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c68>
   36898:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3689c:	tst	r0, #1
   368a0:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   368a4:	ldr	r0, [r9, #4]
   368a8:	cmp	r0, #0
   368ac:	beq	368c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c68>
   368b0:	ldrh	r3, [sl, #2]
   368b4:	and	r3, r3, #384	; 0x180
   368b8:	cmp	r3, #128	; 0x80
   368bc:	beq	369c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d6c>
   368c0:	cmp	r6, r9
   368c4:	movne	r4, r6
   368c8:	beq	36904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cac>
   368cc:	ldr	r3, [r4, #4]
   368d0:	subs	r0, r3, #0
   368d4:	beq	368e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c8c>
   368d8:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   368dc:	tst	r0, #1
   368e0:	bne	368f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ca0>
   368e4:	ldr	r1, [r9, #8]
   368e8:	ldr	r0, [r4, #8]
   368ec:	bl	13268 <strcmp@plt>
   368f0:	cmp	r0, #0
   368f4:	beq	369b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   368f8:	ldr	r4, [r4]
   368fc:	cmp	r4, r9
   36900:	bne	368cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c74>
   36904:	ldr	r2, [pc, #1664]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36908:	ldr	r1, [pc, #1676]	; 36f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23344>
   3690c:	mov	r4, r2
   36910:	mov	r3, #0
   36914:	ldr	r0, [pc, #1668]	; 36fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23348>
   36918:	str	r3, [r2, #60]	; 0x3c
   3691c:	str	r9, [r2, #168]	; 0xa8
   36920:	str	r1, [r2, #4]
   36924:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   36928:	ldr	r3, [r4, #60]	; 0x3c
   3692c:	cmp	r3, #0
   36930:	beq	36944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cec>
   36934:	ldr	r0, [r3, #16]
   36938:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3693c:	tst	r0, #1
   36940:	beq	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36944:	ldr	r3, [pc, #1624]	; 36fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2334c>
   36948:	ldr	r2, [r3]
   3694c:	ldr	r3, [r9, #4]
   36950:	cmp	r2, #0
   36954:	ldr	r2, [r9, #8]
   36958:	str	r3, [sp, #20]
   3695c:	strd	r2, [sp, #24]
   36960:	bne	36e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231fc>
   36964:	ldr	r3, [pc, #1568]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36968:	ldr	r3, [r3, #60]	; 0x3c
   3696c:	cmp	r3, #0
   36970:	beq	369d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d7c>
   36974:	ldr	r3, [r3, #8]
   36978:	mov	r2, #1
   3697c:	mov	r1, r3
   36980:	add	r0, sp, #28
   36984:	str	r3, [sp, #32]
   36988:	bl	360b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22458>
   3698c:	cmp	r0, #0
   36990:	beq	369d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d7c>
   36994:	ldr	r9, [r9]
   36998:	cmp	r9, #0
   3699c:	bne	3688c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c34>
   369a0:	ldrb	r3, [sl, #3]
   369a4:	and	r3, r3, #192	; 0xc0
   369a8:	cmp	r3, #128	; 0x80
   369ac:	beq	36dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23178>
   369b0:	add	sp, sp, #52	; 0x34
   369b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   369b8:	cmp	r9, r4
   369bc:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   369c0:	b	36904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cac>
   369c4:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   369c8:	tst	r0, #4
   369cc:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   369d0:	b	368c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c68>
   369d4:	mov	r7, #0
   369d8:	ldr	r8, [pc, #1448]	; 36f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23330>
   369dc:	mov	r2, r7
   369e0:	add	r1, sp, #20
   369e4:	ldr	r0, [r8, #72]	; 0x48
   369e8:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   369ec:	cmp	r0, #0
   369f0:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   369f4:	ldr	r0, [r8, #68]	; 0x44
   369f8:	cmp	r0, #0
   369fc:	beq	36c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22fb0>
   36a00:	bl	34f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2133c>
   36a04:	mov	r2, r7
   36a08:	add	r1, sp, #20
   36a0c:	mov	r5, r0
   36a10:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   36a14:	mov	r4, r0
   36a18:	mov	r0, r5
   36a1c:	bl	13364 <free@plt>
   36a20:	cmp	r4, #0
   36a24:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36a28:	ldr	r3, [r8, #72]	; 0x48
   36a2c:	cmp	r3, #0
   36a30:	bne	36a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22dec>
   36a34:	ldr	r3, [pc, #1356]	; 36f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23330>
   36a38:	ldr	r3, [r3, #68]	; 0x44
   36a3c:	cmp	r3, #0
   36a40:	beq	36c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22fc0>
   36a44:	ldr	r0, [pc, #1372]	; 36fa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23350>
   36a48:	bl	136b8 <getenv@plt>
   36a4c:	cmp	r0, #0
   36a50:	beq	36a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e10>
   36a54:	mov	r2, r7
   36a58:	add	r1, sp, #20
   36a5c:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   36a60:	cmp	r0, #0
   36a64:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36a68:	ldr	r1, [pc, #1300]	; 36f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2332c>
   36a6c:	ldr	r0, [sl, #48]	; 0x30
   36a70:	bl	1331c <bfd_elf_get_runpath_list@plt>
   36a74:	subs	r4, r0, #0
   36a78:	bne	36a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e44>
   36a7c:	b	36ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e8c>
   36a80:	mov	r0, fp
   36a84:	bl	13364 <free@plt>
   36a88:	ldr	r4, [r4]
   36a8c:	cmp	r4, #0
   36a90:	moveq	r5, #0
   36a94:	cmp	r5, #0
   36a98:	beq	36adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e84>
   36a9c:	ldr	r0, [r4, #8]
   36aa0:	bl	34f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2133c>
   36aa4:	ldr	r2, [r4, #4]
   36aa8:	ldr	r3, [r9, #4]
   36aac:	mov	r5, #1
   36ab0:	cmp	r2, r3
   36ab4:	mov	r8, #0
   36ab8:	mov	fp, r0
   36abc:	bne	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e28>
   36ac0:	mov	r2, r7
   36ac4:	add	r1, sp, #20
   36ac8:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   36acc:	cmp	r0, r8
   36ad0:	movne	r8, r5
   36ad4:	movne	r5, #0
   36ad8:	b	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e28>
   36adc:	cmp	r8, #0
   36ae0:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36ae4:	ldr	r3, [pc, #1184]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36ae8:	ldr	r3, [r3, #184]	; 0xb8
   36aec:	cmp	r3, #0
   36af0:	beq	36e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2321c>
   36af4:	ldr	r3, [pc, #1168]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36af8:	ldr	r4, [r3, #188]	; 0xbc
   36afc:	cmp	r4, #0
   36b00:	ldr	r3, [r9, #8]
   36b04:	beq	36b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ed8>
   36b08:	ldr	r1, [r9, #4]
   36b0c:	mov	r0, r4
   36b10:	str	r1, [sp, #36]	; 0x24
   36b14:	mov	r2, r7
   36b18:	add	r1, sp, #36	; 0x24
   36b1c:	str	r3, [sp, #40]	; 0x28
   36b20:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   36b24:	cmp	r0, #0
   36b28:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36b2c:	ldr	r3, [r9, #8]
   36b30:	mov	r0, r3
   36b34:	bl	137d8 <strlen@plt>
   36b38:	ldr	r3, [pc, #1132]	; 36fac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23354>
   36b3c:	ldr	r4, [r3]
   36b40:	cmp	r4, #0
   36b44:	beq	36bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f58>
   36b48:	ldr	fp, [pc, #1120]	; 36fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23358>
   36b4c:	add	r8, r0, #2
   36b50:	ldr	r3, [r4, #8]
   36b54:	cmp	r3, #0
   36b58:	bne	36ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f4c>
   36b5c:	ldr	r0, [r4, #4]
   36b60:	bl	137d8 <strlen@plt>
   36b64:	add	r0, r8, r0
   36b68:	bl	13574 <xmalloc@plt>
   36b6c:	ldr	r3, [r9, #8]
   36b70:	ldr	r2, [r4, #4]
   36b74:	mov	r1, fp
   36b78:	mov	r5, r0
   36b7c:	bl	13a00 <sprintf@plt>
   36b80:	mov	r1, r5
   36b84:	mov	r2, r7
   36b88:	add	r0, sp, #28
   36b8c:	str	r5, [sp, #32]
   36b90:	bl	360b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22458>
   36b94:	cmp	r0, #0
   36b98:	mov	r0, r5
   36b9c:	bne	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36ba0:	bl	13364 <free@plt>
   36ba4:	ldr	r4, [r4]
   36ba8:	cmp	r4, #0
   36bac:	bne	36b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ef8>
   36bb0:	cmp	r7, #1
   36bb4:	bne	36e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231f4>
   36bb8:	mov	r2, #5
   36bbc:	ldr	r1, [pc, #1008]	; 36fb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2335c>
   36bc0:	mov	r0, #0
   36bc4:	bl	13460 <dcgettext@plt>
   36bc8:	ldr	r2, [r9, #4]
   36bcc:	ldr	r1, [r9, #8]
   36bd0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36bd4:	b	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36bd8:	mov	r2, r5
   36bdc:	ldr	r1, [pc, #980]	; 36fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23360>
   36be0:	bl	13460 <dcgettext@plt>
   36be4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36be8:	ldr	r3, [pc, #924]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36bec:	ldr	r0, [r3, #8]
   36bf0:	bl	13364 <free@plt>
   36bf4:	ldr	r1, [pc, #912]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36bf8:	mov	r2, #0
   36bfc:	ldr	r3, [sl, #48]	; 0x30
   36c00:	str	r2, [r1, #8]
   36c04:	b	36844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bec>
   36c08:	ldr	r3, [pc, #888]	; 36f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23330>
   36c0c:	ldr	r3, [r3, #72]	; 0x48
   36c10:	cmp	r3, #0
   36c14:	bne	36a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22dec>
   36c18:	ldr	r0, [pc, #924]	; 36fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23364>
   36c1c:	bl	136b8 <getenv@plt>
   36c20:	subs	r3, r0, #0
   36c24:	beq	36a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22dec>
   36c28:	ldrb	r3, [r3]
   36c2c:	cmp	r3, #0
   36c30:	beq	36a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22dec>
   36c34:	mov	r2, r7
   36c38:	add	r1, sp, #20
   36c3c:	bl	36374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2271c>
   36c40:	cmp	r0, #0
   36c44:	beq	36a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22dec>
   36c48:	b	36994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d3c>
   36c4c:	ldr	r6, [sl, #56]	; 0x38
   36c50:	cmp	r6, #0
   36c54:	beq	36874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c1c>
   36c58:	str	r3, [sp]
   36c5c:	ldr	r8, [pc, #860]	; 36fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23368>
   36c60:	ldr	r7, [pc, #860]	; 36fc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2336c>
   36c64:	ldr	r9, [pc, #860]	; 36fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23370>
   36c68:	str	r3, [sp, #12]
   36c6c:	str	r3, [sp, #4]
   36c70:	b	36c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23028>
   36c74:	ldr	r6, [r6, #156]	; 0x9c
   36c78:	cmp	r6, #0
   36c7c:	beq	36d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230e4>
   36c80:	ldr	r3, [r6, #164]	; 0xa4
   36c84:	ldrb	r5, [r3, #36]	; 0x24
   36c88:	ands	r5, r5, #16
   36c8c:	bne	36c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2301c>
   36c90:	ldr	r4, [r6, #100]	; 0x64
   36c94:	cmp	r4, #0
   36c98:	bne	36cc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2306c>
   36c9c:	b	36d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230c0>
   36ca0:	bl	13268 <strcmp@plt>
   36ca4:	cmp	r0, #0
   36ca8:	bne	36cb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23060>
   36cac:	ldr	r3, [r4, #36]	; 0x24
   36cb0:	cmp	r3, #9
   36cb4:	movcs	r5, #1
   36cb8:	ldr	r4, [r4, #12]
   36cbc:	cmp	r4, #0
   36cc0:	beq	36df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231a0>
   36cc4:	ldr	r3, [r4, #60]	; 0x3c
   36cc8:	mov	r2, #15
   36ccc:	cmp	r3, r8
   36cd0:	mov	r1, r7
   36cd4:	ldr	fp, [r4]
   36cd8:	beq	36cb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23060>
   36cdc:	mov	r0, fp
   36ce0:	bl	13bb0 <strncmp@plt>
   36ce4:	mov	r1, r9
   36ce8:	cmp	r0, #0
   36cec:	mov	r0, fp
   36cf0:	bne	36ca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23048>
   36cf4:	mov	r5, #2
   36cf8:	ldr	r3, [sp]
   36cfc:	cmp	r3, #0
   36d00:	beq	36e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231ac>
   36d04:	cmp	r5, r3
   36d08:	bne	36f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23308>
   36d0c:	ldr	r3, [sp, #4]
   36d10:	cmp	r3, #0
   36d14:	beq	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231bc>
   36d18:	ldr	r3, [sp]
   36d1c:	ldr	r6, [r6, #156]	; 0x9c
   36d20:	cmp	r3, #2
   36d24:	ldrbeq	r3, [sl, #3]
   36d28:	biceq	r3, r3, #64	; 0x40
   36d2c:	orreq	r3, r3, #128	; 0x80
   36d30:	strbeq	r3, [sl, #3]
   36d34:	cmp	r6, #0
   36d38:	bne	36c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23028>
   36d3c:	ldr	r0, [sp, #4]
   36d40:	cmp	r0, #0
   36d44:	beq	36ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23290>
   36d48:	ldr	r3, [r0, #4]
   36d4c:	ldr	r1, [pc, #632]	; 36fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23374>
   36d50:	ldr	r3, [r3, #448]	; 0x1c0
   36d54:	ldr	r2, [r3, #32]
   36d58:	orr	r2, r2, #8
   36d5c:	bl	132c8 <bfd_make_section_with_flags@plt>
   36d60:	cmp	r0, #0
   36d64:	beq	36ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23290>
   36d68:	mov	r3, #2
   36d6c:	str	r3, [r0, #64]	; 0x40
   36d70:	ldr	r3, [sp, #8]
   36d74:	str	r0, [r3, #172]	; 0xac
   36d78:	b	36874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c1c>
   36d7c:	mov	r2, #5
   36d80:	ldr	r1, [pc, #584]	; 36fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23378>
   36d84:	mov	r0, #0
   36d88:	bl	13460 <dcgettext@plt>
   36d8c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36d90:	ldr	r3, [pc, #500]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36d94:	ldr	r0, [r3, #8]
   36d98:	b	36bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f98>
   36d9c:	ldrb	r3, [sl, #6]
   36da0:	ldrb	r2, [sl, #5]
   36da4:	mvn	r3, r3
   36da8:	and	r3, r3, #1
   36dac:	cmp	r3, r2, lsr #7
   36db0:	bne	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d58>
   36db4:	lsr	r2, r2, #3
   36db8:	and	r2, r2, #16
   36dbc:	orr	r2, r2, #8
   36dc0:	ldr	r0, [sl, #56]	; 0x38
   36dc4:	ldr	r1, [pc, #520]	; 36fd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2337c>
   36dc8:	bl	132c8 <bfd_make_section_with_flags@plt>
   36dcc:	b	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d58>
   36dd0:	ldr	r1, [pc, #428]	; 36f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2332c>
   36dd4:	mov	r0, #0
   36dd8:	bl	13868 <bfd_elf_parse_eh_frame_entries@plt>
   36ddc:	cmp	r0, #0
   36de0:	bne	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d58>
   36de4:	mov	r2, #5
   36de8:	ldr	r1, [pc, #488]	; 36fd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23380>
   36dec:	bl	13460 <dcgettext@plt>
   36df0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36df4:	b	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d58>
   36df8:	cmp	r5, #0
   36dfc:	beq	36d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230c0>
   36e00:	b	36cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230a0>
   36e04:	ldr	r3, [sp, #4]
   36e08:	str	r5, [sp]
   36e0c:	cmp	r3, #0
   36e10:	bne	36d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230c0>
   36e14:	cmp	r5, #2
   36e18:	beq	36e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231d0>
   36e1c:	ldrb	r3, [sl, #3]
   36e20:	tst	r3, #192	; 0xc0
   36e24:	beq	36d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230c0>
   36e28:	ldr	r3, [r6, #4]
   36e2c:	mov	r2, #1
   36e30:	str	r2, [sp, #12]
   36e34:	ldr	r3, [r3, #4]
   36e38:	ldr	r2, [sp, #4]
   36e3c:	cmp	r3, #5
   36e40:	moveq	r2, r6
   36e44:	str	r2, [sp, #4]
   36e48:	b	36d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230c0>
   36e4c:	mov	r7, #1
   36e50:	b	369d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d80>
   36e54:	mov	r2, #5
   36e58:	ldr	r1, [pc, #380]	; 36fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23384>
   36e5c:	mov	r0, #0
   36e60:	bl	13460 <dcgettext@plt>
   36e64:	ldr	r2, [r9, #4]
   36e68:	ldr	r1, [r9, #8]
   36e6c:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   36e70:	b	36964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d0c>
   36e74:	ldr	r0, [pc, #356]	; 36fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23388>
   36e78:	mov	r2, r3
   36e7c:	ldr	r1, [pc, #352]	; 36fe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2338c>
   36e80:	ldr	r0, [r0]
   36e84:	str	r3, [sp, #36]	; 0x24
   36e88:	str	r3, [sp, #44]	; 0x2c
   36e8c:	str	r3, [sp, #40]	; 0x28
   36e90:	bl	1352c <concat@plt>
   36e94:	mov	r1, r0
   36e98:	mov	r4, r0
   36e9c:	add	r0, sp, #36	; 0x24
   36ea0:	bl	35070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21418>
   36ea4:	subs	r5, r0, #0
   36ea8:	beq	36f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x232c0>
   36eac:	mov	r0, r4
   36eb0:	bl	13364 <free@plt>
   36eb4:	ldr	r0, [sp, #36]	; 0x24
   36eb8:	cmp	r0, #0
   36ebc:	beq	36f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x232b4>
   36ec0:	bl	34f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2133c>
   36ec4:	ldr	r3, [pc, #192]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36ec8:	mov	r4, r0
   36ecc:	ldr	r0, [sp, #36]	; 0x24
   36ed0:	str	r4, [r3, #188]	; 0xbc
   36ed4:	bl	13364 <free@plt>
   36ed8:	ldr	r2, [pc, #172]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36edc:	mov	r3, #1
   36ee0:	str	r3, [r2, #184]	; 0xb8
   36ee4:	b	36afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ea4>
   36ee8:	ldr	r3, [sp, #12]
   36eec:	cmp	r3, #0
   36ef0:	beq	36874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c1c>
   36ef4:	mov	r2, #5
   36ef8:	ldr	r1, [pc, #232]	; 36fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23390>
   36efc:	mov	r0, #0
   36f00:	bl	13460 <dcgettext@plt>
   36f04:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36f08:	b	36874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c1c>
   36f0c:	ldr	r3, [pc, #120]	; 36f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23334>
   36f10:	ldr	r4, [r3, #188]	; 0xbc
   36f14:	b	36ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23280>
   36f18:	mov	r0, r4
   36f1c:	bl	13364 <free@plt>
   36f20:	ldr	r3, [pc, #184]	; 36fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23388>
   36f24:	mov	r2, r5
   36f28:	ldr	r1, [pc, #188]	; 36fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23394>
   36f2c:	ldr	r0, [r3]
   36f30:	bl	1352c <concat@plt>
   36f34:	mov	r4, r0
   36f38:	mov	r1, r0
   36f3c:	add	r0, sp, #36	; 0x24
   36f40:	bl	35070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21418>
   36f44:	b	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23254>
   36f48:	mov	r2, #5
   36f4c:	ldr	r1, [pc, #156]	; 36ff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23398>
   36f50:	bl	13460 <dcgettext@plt>
   36f54:	ldr	r1, [r4, #32]
   36f58:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36f5c:	b	36780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b28>
   36f60:	mov	r2, #5
   36f64:	ldr	r1, [pc, #136]	; 36ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2339c>
   36f68:	mov	r0, #0
   36f6c:	bl	13460 <dcgettext@plt>
   36f70:	cmp	r5, #1
   36f74:	ldr	r1, [sp, #4]
   36f78:	moveq	r1, r6
   36f7c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   36f80:	b	36d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230e4>
   36f84:	andeq	r8, ip, ip, lsl #1
   36f88:	andeq	r8, ip, r8, lsl r1
   36f8c:	andeq	r7, ip, r8, lsl #28
   36f90:	andseq	r4, r0, fp, lsr #32
   36f94:	andeq	r4, r8, ip, lsr ip
   36f98:	andeq	r4, r3, r4, lsr lr
   36f9c:	ldrdeq	r5, [r3], -r4
   36fa0:	andeq	r2, r3, ip, lsr r4
   36fa4:	andeq	r8, ip, r4, ror #3
   36fa8:	andeq	r4, r8, r8, lsl #27
   36fac:	andeq	r8, ip, r8, asr r2
   36fb0:	muleq	r8, r8, fp
   36fb4:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   36fb8:	andeq	r4, r8, r0, asr ip
   36fbc:	andeq	r4, r8, r8, lsl #16
   36fc0:	andeq	r7, ip, r8, lsr #17
   36fc4:	andeq	r4, r8, ip, lsr #25
   36fc8:			; <UNDEFINED> instruction: 0x00084cbc
   36fcc:	andeq	r4, r8, r8, lsl sp
   36fd0:	andeq	r4, r8, r8, lsl #24
   36fd4:	muleq	r8, ip, ip
   36fd8:	andeq	r4, r8, ip, lsr #27
   36fdc:	andeq	r4, r8, r4, ror sp
   36fe0:	andeq	r8, ip, r4, lsl r1
   36fe4:	muleq	r8, r8, sp
   36fe8:	andeq	r4, r8, r8, lsr #26
   36fec:	muleq	r8, ip, sp
   36ff0:	andeq	r4, r8, r0, ror #23
   36ff4:	andeq	r4, r8, r8, asr #25
   36ff8:	push	{r4, r5, r6, r7, r8, lr}
   36ffc:	ldr	r8, [pc, #208]	; 370d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2347c>
   37000:	ldr	r3, [r8, #180]	; 0xb4
   37004:	cmp	r3, #0
   37008:	popne	{r4, r5, r6, r7, r8, pc}
   3700c:	ldr	r3, [r0, #16]
   37010:	cmp	r3, #0
   37014:	popeq	{r4, r5, r6, r7, r8, pc}
   37018:	ldr	r2, [r3, #40]	; 0x28
   3701c:	tst	r2, #2048	; 0x800
   37020:	popeq	{r4, r5, r6, r7, r8, pc}
   37024:	mov	r4, r0
   37028:	mov	r0, r3
   3702c:	bl	134cc <bfd_elf_get_dt_soname@plt>
   37030:	subs	r6, r0, #0
   37034:	beq	370c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23468>
   37038:	ldr	r4, [r8, #176]	; 0xb0
   3703c:	cmp	r4, #0
   37040:	popeq	{r4, r5, r6, r7, r8, pc}
   37044:	ldr	r7, [pc, #140]	; 370d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23480>
   37048:	b	37058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23400>
   3704c:	ldr	r4, [r4]
   37050:	cmp	r4, #0
   37054:	popeq	{r4, r5, r6, r7, r8, pc}
   37058:	ldr	r1, [r4, #8]
   3705c:	mov	r0, r6
   37060:	bl	13394 <filename_cmp@plt>
   37064:	mov	r1, #47	; 0x2f
   37068:	cmp	r0, #0
   3706c:	beq	3704c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233f4>
   37070:	ldr	r5, [r4, #8]
   37074:	mov	r0, r5
   37078:	bl	137fc <strchr@plt>
   3707c:	mov	r1, r7
   37080:	cmp	r0, #0
   37084:	mov	r0, r5
   37088:	bne	3704c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233f4>
   3708c:	bl	131f0 <strstr@plt>
   37090:	mov	r1, r5
   37094:	subs	r2, r0, #0
   37098:	add	r2, r2, #4
   3709c:	sub	r2, r2, r5
   370a0:	mov	r0, r6
   370a4:	beq	3704c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233f4>
   370a8:	bl	13538 <filename_ncmp@plt>
   370ac:	cmp	r0, #0
   370b0:	bne	3704c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233f4>
   370b4:	mov	r3, #1
   370b8:	str	r3, [r8, #180]	; 0xb4
   370bc:	pop	{r4, r5, r6, r7, r8, pc}
   370c0:	ldr	r3, [r4, #16]
   370c4:	ldr	r0, [r3]
   370c8:	bl	1367c <lbasename@plt>
   370cc:	mov	r6, r0
   370d0:	b	37038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233e0>
   370d4:	andeq	r7, ip, r8, lsl #28
   370d8:	andeq	r4, r8, r0, lsr sl
   370dc:	ldr	r2, [pc, #20]	; 370f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234a0>
   370e0:	ldrb	r3, [r2]
   370e4:	and	r3, r3, #3
   370e8:	cmp	r3, #2
   370ec:	movne	r3, #1
   370f0:	strne	r3, [r2, #20]
   370f4:	bx	lr
   370f8:	andeq	r8, ip, ip, lsl #1
   370fc:	ldr	r3, [r1]
   37100:	ldr	r0, [r0]
   37104:	ldr	r2, [r3, #60]	; 0x3c
   37108:	ldr	r1, [r0, #60]	; 0x3c
   3710c:	cmp	r2, #0
   37110:	cmpne	r1, #0
   37114:	beq	3714c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234f4>
   37118:	ldr	r1, [r1, #28]
   3711c:	ldr	r0, [r0, #56]	; 0x38
   37120:	ldr	r2, [r2, #28]
   37124:	ldr	r3, [r3, #56]	; 0x38
   37128:	add	r1, r1, r0
   3712c:	add	r3, r2, r3
   37130:	cmp	r1, r3
   37134:	bhi	37144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234ec>
   37138:	mvncc	r0, #0
   3713c:	movcs	r0, #0
   37140:	bx	lr
   37144:	mov	r0, #1
   37148:	bx	lr
   3714c:	mov	r0, #0
   37150:	bx	lr
   37154:	ldr	r3, [pc, #16]	; 3716c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23514>
   37158:	ldr	r2, [r3]
   3715c:	cmp	r2, r0
   37160:	bxeq	lr
   37164:	ldr	r3, [r3, #4]
   37168:	bx	r3
   3716c:	andeq	r7, ip, r8, asr #29
   37170:	ldr	r2, [pc, #552]	; 373a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23748>
   37174:	mov	r3, #0
   37178:	str	r3, [r0]
   3717c:	ldrb	r3, [r2]
   37180:	and	r3, r3, #3
   37184:	cmp	r3, #2
   37188:	beq	37214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235bc>
   3718c:	ldr	r1, [pc, #528]	; 373a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2374c>
   37190:	ldr	r0, [r1, #48]	; 0x30
   37194:	cmp	r0, #0
   37198:	beq	3720c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235b4>
   3719c:	ldr	r1, [r1]
   371a0:	cmp	r1, #0
   371a4:	beq	37248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235f0>
   371a8:	cmp	r3, #1
   371ac:	beq	37250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235f8>
   371b0:	ldr	r0, [r2]
   371b4:	and	r0, r0, #536870915	; 0x20000003
   371b8:	cmp	r0, #536870913	; 0x20000001
   371bc:	beq	37230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235d8>
   371c0:	cmp	r3, #1
   371c4:	beq	3729c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23644>
   371c8:	cmp	r3, #3
   371cc:	beq	372f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2369c>
   371d0:	cmp	r0, #536870915	; 0x20000003
   371d4:	beq	37370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23718>
   371d8:	ldrb	r1, [r2, #4]
   371dc:	ldrb	r3, [r2, #3]
   371e0:	tst	r1, #64	; 0x40
   371e4:	and	r1, r3, #32
   371e8:	beq	372c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23668>
   371ec:	cmp	r1, #0
   371f0:	beq	37360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23708>
   371f4:	ldr	r2, [r2, #112]	; 0x70
   371f8:	ldr	r3, [pc, #424]	; 373a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23750>
   371fc:	tst	r2, #8
   37200:	ldr	r0, [pc, #420]	; 373ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23754>
   37204:	movne	r0, r3
   37208:	bx	lr
   3720c:	ldr	r0, [pc, #412]	; 373b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23758>
   37210:	bx	lr
   37214:	ldr	r2, [pc, #392]	; 373a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2374c>
   37218:	ldr	r3, [pc, #404]	; 373b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2375c>
   3721c:	ldr	r0, [pc, #404]	; 373b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23760>
   37220:	ldr	r2, [r2, #12]
   37224:	cmp	r2, #0
   37228:	moveq	r0, r3
   3722c:	bx	lr
   37230:	ldrb	r2, [r2, #4]
   37234:	ldr	r3, [pc, #384]	; 373bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23764>
   37238:	ldr	r0, [pc, #384]	; 373c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23768>
   3723c:	tst	r2, #64	; 0x40
   37240:	movne	r0, r3
   37244:	bx	lr
   37248:	ldr	r0, [pc, #372]	; 373c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2376c>
   3724c:	bx	lr
   37250:	ldrb	r1, [r2, #4]
   37254:	tst	r1, #64	; 0x40
   37258:	beq	371b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23558>
   3725c:	ldrb	r3, [r2, #3]
   37260:	tst	r3, #32
   37264:	beq	3727c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23624>
   37268:	ldr	r3, [r2, #112]	; 0x70
   3726c:	tst	r3, #8
   37270:	beq	3727c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23624>
   37274:	ldr	r0, [pc, #332]	; 373c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23770>
   37278:	bx	lr
   3727c:	ldrb	r3, [r2, #3]
   37280:	tst	r3, #16
   37284:	beq	372dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23684>
   37288:	ldr	r3, [r2, #112]	; 0x70
   3728c:	tst	r3, #8
   37290:	beq	372dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23684>
   37294:	ldr	r0, [pc, #304]	; 373cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23774>
   37298:	bx	lr
   3729c:	ldrb	r3, [r2, #4]
   372a0:	tst	r3, #64	; 0x40
   372a4:	bne	372d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2367c>
   372a8:	ldr	r2, [pc, #288]	; 373d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23778>
   372ac:	ldr	r3, [pc, #268]	; 373c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23768>
   372b0:	cmp	r0, #536870913	; 0x20000001
   372b4:	movne	r0, r2
   372b8:	moveq	r0, r3
   372bc:	bx	lr
   372c0:	ldr	r3, [pc, #268]	; 373d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2377c>
   372c4:	cmp	r1, #0
   372c8:	ldr	r0, [pc, #264]	; 373d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23780>
   372cc:	moveq	r0, r3
   372d0:	bx	lr
   372d4:	ldr	r0, [pc, #256]	; 373dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23784>
   372d8:	bx	lr
   372dc:	ldr	r0, [r2]
   372e0:	and	r0, r0, #536870915	; 0x20000003
   372e4:	cmp	r0, #536870913	; 0x20000001
   372e8:	bne	3729c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23644>
   372ec:	ldr	r0, [pc, #200]	; 373bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23764>
   372f0:	bx	lr
   372f4:	ldrb	r3, [r2, #4]
   372f8:	tst	r3, #64	; 0x40
   372fc:	beq	37348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x236f0>
   37300:	ldrb	r3, [r2, #3]
   37304:	tst	r3, #32
   37308:	beq	37318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x236c0>
   3730c:	ldr	r3, [r2, #112]	; 0x70
   37310:	tst	r3, #8
   37314:	bne	37390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23738>
   37318:	ldrb	r3, [r2, #3]
   3731c:	tst	r3, #16
   37320:	beq	37330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x236d8>
   37324:	ldr	r3, [r2, #112]	; 0x70
   37328:	tst	r3, #8
   3732c:	bne	37398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23740>
   37330:	ldrb	r2, [r2, #3]
   37334:	ldr	r3, [pc, #164]	; 373e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23788>
   37338:	ldr	r0, [pc, #164]	; 373e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2378c>
   3733c:	tst	r2, #32
   37340:	movne	r0, r3
   37344:	bx	lr
   37348:	ldr	r2, [pc, #152]	; 373e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23790>
   3734c:	ldr	r3, [pc, #152]	; 373ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23794>
   37350:	cmp	r0, #536870915	; 0x20000003
   37354:	movne	r0, r2
   37358:	moveq	r0, r3
   3735c:	bx	lr
   37360:	tst	r3, #16
   37364:	bne	37378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23720>
   37368:	ldr	r0, [pc, #128]	; 373f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23798>
   3736c:	bx	lr
   37370:	ldr	r0, [pc, #116]	; 373ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23794>
   37374:	bx	lr
   37378:	ldr	r2, [r2, #112]	; 0x70
   3737c:	ldr	r3, [pc, #112]	; 373f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2379c>
   37380:	tst	r2, #8
   37384:	ldr	r0, [pc, #100]	; 373f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23798>
   37388:	movne	r0, r3
   3738c:	bx	lr
   37390:	ldr	r0, [pc, #96]	; 373f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237a0>
   37394:	bx	lr
   37398:	ldr	r0, [pc, #92]	; 373fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237a4>
   3739c:	bx	lr
   373a0:	andeq	r8, ip, ip, lsl #1
   373a4:	andeq	r8, ip, r4, ror r1
   373a8:	andeq	pc, sl, r4, asr #14
   373ac:	andeq	r6, sl, ip, lsr r1
   373b0:	andeq	r1, r9, r4, lsl r4
   373b4:	andeq	pc, r8, r8, ror sp	; <UNPREDICTABLE>
   373b8:	andeq	lr, r8, ip, lsr #13
   373bc:	muleq	r9, r0, sl
   373c0:	andeq	r5, r8, r4, lsr #5
   373c4:	andeq	r3, r9, ip, ror #19
   373c8:	andeq	r6, r9, r8, lsr r0
   373cc:	andeq	r8, r9, r8, lsl r6
   373d0:	andeq	pc, r9, r8, asr #9
   373d4:	andeq	r1, fp, ip, lsl sp
   373d8:	muleq	sl, r4, pc	; <UNPREDICTABLE>
   373dc:	andeq	sp, r9, r0, rrx
   373e0:	andeq	r4, fp, r8, ror #6
   373e4:	andeq	ip, r8, r8, asr r4
   373e8:	andeq	sl, sl, r4, ror #22
   373ec:	andeq	r7, r8, r0, asr sl
   373f0:	andeq	r8, sl, r4, lsl #14
   373f4:	andeq	r9, r8, r8, ror #31
   373f8:	andeq	r1, sl, ip, lsl #22
   373fc:	ldrdeq	r3, [sl], -r8
   37400:	ldrb	r3, [r0, #36]	; 0x24
   37404:	push	{r4, r5, r6, lr}
   37408:	mov	r4, r0
   3740c:	tst	r3, #64	; 0x40
   37410:	lsr	r5, r3, #7
   37414:	and	r3, r3, #16
   37418:	bne	3744c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237f4>
   3741c:	cmp	r3, #0
   37420:	ldr	r0, [r0, #16]
   37424:	orr	r5, r5, #4
   37428:	beq	37438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237e0>
   3742c:	ldr	r3, [r0, #40]	; 0x28
   37430:	tst	r3, #2048	; 0x800
   37434:	bne	3748c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23834>
   37438:	ldr	r3, [r0, #40]	; 0x28
   3743c:	tst	r3, #2048	; 0x800
   37440:	bne	3747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23824>
   37444:	mov	r0, #0
   37448:	pop	{r4, r5, r6, pc}
   3744c:	cmp	r3, #0
   37450:	beq	37464 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2380c>
   37454:	ldr	r0, [r0, #16]
   37458:	ldr	r3, [r0, #40]	; 0x28
   3745c:	tst	r3, #2048	; 0x800
   37460:	bne	3748c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23834>
   37464:	cmp	r5, #0
   37468:	beq	37444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237ec>
   3746c:	ldr	r0, [r4, #16]
   37470:	ldr	r3, [r0, #40]	; 0x28
   37474:	tst	r3, #2048	; 0x800
   37478:	beq	37444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237ec>
   3747c:	mov	r1, r5
   37480:	bl	137f0 <bfd_elf_set_dyn_lib_class@plt>
   37484:	mov	r0, #0
   37488:	pop	{r4, r5, r6, pc}
   3748c:	mov	r2, #5
   37490:	ldr	r1, [pc, #24]	; 374b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23858>
   37494:	mov	r0, #0
   37498:	bl	13460 <dcgettext@plt>
   3749c:	ldr	r1, [r4, #16]
   374a0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   374a4:	cmp	r5, #0
   374a8:	beq	37444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x237ec>
   374ac:	b	3746c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23814>
   374b0:	andeq	r3, r8, r4, lsl #21
   374b4:	push	{r4, lr}
   374b8:	mov	r2, #5
   374bc:	mov	r4, r0
   374c0:	ldr	r1, [pc, #552]	; 376f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a98>
   374c4:	mov	r0, #0
   374c8:	bl	13460 <dcgettext@plt>
   374cc:	mov	r1, r0
   374d0:	mov	r0, r4
   374d4:	bl	1382c <fprintf@plt>
   374d8:	mov	r2, #5
   374dc:	ldr	r1, [pc, #528]	; 376f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a9c>
   374e0:	mov	r0, #0
   374e4:	bl	13460 <dcgettext@plt>
   374e8:	mov	r1, r0
   374ec:	mov	r0, r4
   374f0:	bl	1382c <fprintf@plt>
   374f4:	mov	r2, #5
   374f8:	ldr	r1, [pc, #504]	; 376f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aa0>
   374fc:	mov	r0, #0
   37500:	bl	13460 <dcgettext@plt>
   37504:	mov	r1, r0
   37508:	mov	r0, r4
   3750c:	bl	1382c <fprintf@plt>
   37510:	mov	r2, #5
   37514:	ldr	r1, [pc, #480]	; 376fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aa4>
   37518:	mov	r0, #0
   3751c:	bl	13460 <dcgettext@plt>
   37520:	mov	r1, r0
   37524:	mov	r0, r4
   37528:	bl	1382c <fprintf@plt>
   3752c:	mov	r2, #5
   37530:	ldr	r1, [pc, #456]	; 37700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aa8>
   37534:	mov	r0, #0
   37538:	bl	13460 <dcgettext@plt>
   3753c:	mov	r1, r0
   37540:	mov	r0, r4
   37544:	bl	1382c <fprintf@plt>
   37548:	mov	r2, #5
   3754c:	ldr	r1, [pc, #432]	; 37704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aac>
   37550:	mov	r0, #0
   37554:	bl	13460 <dcgettext@plt>
   37558:	mov	r1, r0
   3755c:	mov	r0, r4
   37560:	bl	1382c <fprintf@plt>
   37564:	mov	r2, #5
   37568:	ldr	r1, [pc, #408]	; 37708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ab0>
   3756c:	mov	r0, #0
   37570:	bl	13460 <dcgettext@plt>
   37574:	mov	r1, r0
   37578:	mov	r0, r4
   3757c:	bl	1382c <fprintf@plt>
   37580:	mov	r2, #5
   37584:	ldr	r1, [pc, #384]	; 3770c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ab4>
   37588:	mov	r0, #0
   3758c:	bl	13460 <dcgettext@plt>
   37590:	mov	r1, r0
   37594:	mov	r0, r4
   37598:	bl	1382c <fprintf@plt>
   3759c:	mov	r2, #5
   375a0:	ldr	r1, [pc, #360]	; 37710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ab8>
   375a4:	mov	r0, #0
   375a8:	bl	13460 <dcgettext@plt>
   375ac:	mov	r1, r0
   375b0:	mov	r0, r4
   375b4:	bl	1382c <fprintf@plt>
   375b8:	mov	r2, #5
   375bc:	ldr	r1, [pc, #336]	; 37714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23abc>
   375c0:	mov	r0, #0
   375c4:	bl	13460 <dcgettext@plt>
   375c8:	mov	r1, r0
   375cc:	mov	r0, r4
   375d0:	bl	1382c <fprintf@plt>
   375d4:	mov	r2, #5
   375d8:	ldr	r1, [pc, #312]	; 37718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ac0>
   375dc:	mov	r0, #0
   375e0:	bl	13460 <dcgettext@plt>
   375e4:	mov	r1, r0
   375e8:	mov	r0, r4
   375ec:	bl	1382c <fprintf@plt>
   375f0:	mov	r2, #5
   375f4:	ldr	r1, [pc, #288]	; 3771c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ac4>
   375f8:	mov	r0, #0
   375fc:	bl	13460 <dcgettext@plt>
   37600:	mov	r1, r0
   37604:	mov	r0, r4
   37608:	bl	1382c <fprintf@plt>
   3760c:	mov	r2, #5
   37610:	ldr	r1, [pc, #264]	; 37720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ac8>
   37614:	mov	r0, #0
   37618:	bl	13460 <dcgettext@plt>
   3761c:	mov	r1, r0
   37620:	mov	r0, r4
   37624:	bl	1382c <fprintf@plt>
   37628:	mov	r2, #5
   3762c:	ldr	r1, [pc, #240]	; 37724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23acc>
   37630:	mov	r0, #0
   37634:	bl	13460 <dcgettext@plt>
   37638:	mov	r1, r0
   3763c:	mov	r0, r4
   37640:	bl	1382c <fprintf@plt>
   37644:	mov	r2, #5
   37648:	ldr	r1, [pc, #216]	; 37728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ad0>
   3764c:	mov	r0, #0
   37650:	bl	13460 <dcgettext@plt>
   37654:	mov	r1, r0
   37658:	mov	r0, r4
   3765c:	bl	1382c <fprintf@plt>
   37660:	mov	r2, #5
   37664:	ldr	r1, [pc, #192]	; 3772c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ad4>
   37668:	mov	r0, #0
   3766c:	bl	13460 <dcgettext@plt>
   37670:	mov	r1, r0
   37674:	mov	r0, r4
   37678:	bl	1382c <fprintf@plt>
   3767c:	mov	r2, #5
   37680:	ldr	r1, [pc, #168]	; 37730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ad8>
   37684:	mov	r0, #0
   37688:	bl	13460 <dcgettext@plt>
   3768c:	mov	r1, r0
   37690:	mov	r0, r4
   37694:	bl	1382c <fprintf@plt>
   37698:	mov	r2, #5
   3769c:	ldr	r1, [pc, #144]	; 37734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23adc>
   376a0:	mov	r0, #0
   376a4:	bl	13460 <dcgettext@plt>
   376a8:	mov	r1, r0
   376ac:	mov	r0, r4
   376b0:	bl	1382c <fprintf@plt>
   376b4:	mov	r2, #5
   376b8:	ldr	r1, [pc, #120]	; 37738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae0>
   376bc:	mov	r0, #0
   376c0:	bl	13460 <dcgettext@plt>
   376c4:	mov	r1, r0
   376c8:	mov	r0, r4
   376cc:	bl	1382c <fprintf@plt>
   376d0:	ldr	r1, [pc, #100]	; 3773c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae4>
   376d4:	mov	r2, #5
   376d8:	mov	r0, #0
   376dc:	bl	13460 <dcgettext@plt>
   376e0:	mov	r1, r0
   376e4:	mov	r0, r4
   376e8:	pop	{r4, lr}
   376ec:	b	1382c <fprintf@plt>
   376f0:			; <UNDEFINED> instruction: 0x00083ab8
   376f4:	andeq	r3, r8, r4, lsl #22
   376f8:	andeq	r3, r8, ip, lsr fp
   376fc:	andeq	r3, r8, r4, lsl #23
   37700:	andeq	r3, r8, ip, asr #23
   37704:	andeq	r3, r8, r0, lsl ip
   37708:	andeq	r3, r8, r8, asr ip
   3770c:	andeq	r3, r8, ip, lsr #25
   37710:	andeq	r3, r8, ip, ror #25
   37714:	andeq	r3, r8, r4, lsr sp
   37718:	andeq	r3, r8, r0, lsl #27
   3771c:	strdeq	r3, [r8], -r8
   37720:	andeq	r3, r8, r0, ror lr
   37724:			; <UNDEFINED> instruction: 0x00083eb8
   37728:	andeq	r3, r8, r8, lsr pc
   3772c:	ldrdeq	r3, [r8], -r4
   37730:	andeq	r4, r8, ip, asr #32
   37734:	andeq	r4, r8, r0, lsr #5
   37738:	strdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   3773c:	andeq	r4, r8, r4, lsr r3
   37740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   37744:	mov	r8, r0
   37748:	ldr	sl, [r0]
   3774c:	sub	sp, sp, #8
   37750:	cmp	sl, #0
   37754:	mov	r7, r1
   37758:	beq	37800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ba8>
   3775c:	mov	r0, r1
   37760:	bl	137d8 <strlen@plt>
   37764:	ldr	r9, [pc, #168]	; 37814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23bbc>
   37768:	mov	r4, sl
   3776c:	ldrb	r6, [r9, #72]	; 0x48
   37770:	mov	r5, r0
   37774:	b	37780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b28>
   37778:	adds	r4, r0, #1
   3777c:	beq	377c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b68>
   37780:	mov	r1, r4
   37784:	mov	r2, r5
   37788:	mov	r0, r7
   3778c:	bl	13bb0 <strncmp@plt>
   37790:	mov	r1, r6
   37794:	cmp	r0, #0
   37798:	mov	r0, r4
   3779c:	bne	377b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b5c>
   377a0:	ldrb	r3, [r4, r5]
   377a4:	cmp	r3, #0
   377a8:	beq	377f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ba0>
   377ac:	cmp	r3, r6
   377b0:	beq	377f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ba0>
   377b4:	bl	137fc <strchr@plt>
   377b8:	cmp	r0, #0
   377bc:	bne	37778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b20>
   377c0:	mov	r0, sl
   377c4:	bl	137d8 <strlen@plt>
   377c8:	add	r5, r5, #2
   377cc:	add	r0, r5, r0
   377d0:	bl	13574 <xmalloc@plt>
   377d4:	str	r7, [sp]
   377d8:	ldrb	r3, [r9, #72]	; 0x48
   377dc:	ldr	r2, [r8]
   377e0:	ldr	r1, [pc, #48]	; 37818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23bc0>
   377e4:	mov	r4, r0
   377e8:	bl	13a00 <sprintf@plt>
   377ec:	ldr	r0, [r8]
   377f0:	bl	13364 <free@plt>
   377f4:	str	r4, [r8]
   377f8:	add	sp, sp, #8
   377fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37800:	mov	r0, r1
   37804:	bl	135a4 <xstrdup@plt>
   37808:	str	r0, [r8]
   3780c:	add	sp, sp, #8
   37810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   37814:	andeq	r8, ip, r4, ror r1
   37818:	andeq	ip, r4, r8, lsr #20
   3781c:	ldr	r3, [pc, #4044]	; 387f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b98>
   37820:	sub	r0, r0, #80	; 0x50
   37824:	push	{r4, r5, r6, lr}
   37828:	sub	sp, sp, #8
   3782c:	cmp	r0, r3
   37830:	ldrls	pc, [pc, r0, lsl #2]
   37834:	b	381a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24550>
   37838:	strdeq	r7, [r3], -r0
   3783c:	andeq	r8, r3, r8, lsr #3
   37840:	andeq	r8, r3, r8, lsr #3
   37844:	andeq	r8, r3, r8, lsr #3
   37848:	andeq	r8, r3, r8, lsr #3
   3784c:	andeq	r8, r3, r8, lsr #3
   37850:	andeq	r8, r3, r8, lsr #3
   37854:	andeq	r8, r3, r8, lsr #3
   37858:	andeq	r8, r3, r8, lsr #3
   3785c:	andeq	r8, r3, r8, lsr #3
   37860:	andeq	r8, r3, r8, lsr #3
   37864:	andeq	r8, r3, r8, lsr #3
   37868:	andeq	r8, r3, r8, lsr #3
   3786c:	andeq	r8, r3, r8, lsr #3
   37870:	andeq	r8, r3, r8, lsr #3
   37874:	andeq	r8, r3, r8, lsr #3
   37878:	andeq	r8, r3, r8, lsr #3
   3787c:	andeq	r8, r3, r8, lsr #3
   37880:	andeq	r8, r3, r8, lsr #3
   37884:	andeq	r8, r3, r8, lsr #3
   37888:	andeq	r8, r3, r8, lsr #3
   3788c:	andeq	r8, r3, r8, lsr #3
   37890:	andeq	r8, r3, r8, lsr #3
   37894:	andeq	r8, r3, r8, lsr #3
   37898:	andeq	r8, r3, r8, lsr #3
   3789c:	andeq	r8, r3, r8, lsr #3
   378a0:	andeq	r8, r3, r8, lsr #3
   378a4:	andeq	r8, r3, r8, lsr #3
   378a8:	andeq	r8, r3, r8, lsr #3
   378ac:	andeq	r8, r3, r8, lsr #3
   378b0:	andeq	r8, r3, r8, lsr #3
   378b4:	andeq	r8, r3, r8, lsr #3
   378b8:	andeq	r7, r3, ip, lsr #27
   378bc:	andeq	r8, r3, r8, lsr #3
   378c0:	andeq	r8, r3, r8, lsr #3
   378c4:	andeq	r8, r3, r8, lsr #3
   378c8:	andeq	r8, r3, r8, lsr #3
   378cc:	andeq	r8, r3, r8, lsr #3
   378d0:	andeq	r8, r3, r8, lsr #3
   378d4:	andeq	r8, r3, r8, lsr #3
   378d8:	andeq	r8, r3, r8, lsr #3
   378dc:	andeq	r8, r3, r8, lsr #3
   378e0:			; <UNDEFINED> instruction: 0x00037dbc
   378e4:	andeq	r8, r3, r8, lsr #3
   378e8:	andeq	r8, r3, r8, lsr #3
   378ec:	andeq	r8, r3, r8, lsr #3
   378f0:	andeq	r8, r3, r8, lsr #3
   378f4:	andeq	r8, r3, r8, lsr #3
   378f8:	andeq	r8, r3, r8, lsr #3
   378fc:	andeq	r8, r3, r8, lsr #3
   37900:	andeq	r8, r3, r8, lsr #3
   37904:	andeq	r8, r3, r8, lsr #3
   37908:	andeq	r8, r3, r8, lsr #3
   3790c:	andeq	r8, r3, r8, lsr #3
   37910:	andeq	r8, r3, r8, lsr #3
   37914:	andeq	r8, r3, r8, lsr #3
   37918:	andeq	r8, r3, r8, lsr #3
   3791c:	andeq	r8, r3, r8, lsr #3
   37920:	andeq	r8, r3, r8, lsr #3
   37924:	andeq	r8, r3, r8, lsr #3
   37928:	andeq	r8, r3, r8, lsr #3
   3792c:	andeq	r8, r3, r8, lsr #3
   37930:	andeq	r8, r3, r8, lsr #3
   37934:	andeq	r8, r3, r8, lsr #3
   37938:	andeq	r8, r3, r8, lsr #3
   3793c:	andeq	r8, r3, r8, lsr #3
   37940:	andeq	r8, r3, r8, lsr #3
   37944:	andeq	r8, r3, r8, lsr #3
   37948:	andeq	r8, r3, r8, lsr #3
   3794c:	andeq	r8, r3, r8, lsr #3
   37950:	andeq	r8, r3, r8, lsr #3
   37954:	andeq	r8, r3, r8, lsr #3
   37958:	andeq	r8, r3, r8, lsr #3
   3795c:	andeq	r8, r3, r8, lsr #3
   37960:	andeq	r8, r3, r8, lsr #3
   37964:	andeq	r8, r3, r8, lsr #3
   37968:	andeq	r8, r3, r8, lsr #3
   3796c:	andeq	r8, r3, r8, lsr #3
   37970:	andeq	r8, r3, r8, lsr #3
   37974:	andeq	r8, r3, r8, lsr #3
   37978:	andeq	r8, r3, r8, lsr #3
   3797c:	andeq	r8, r3, r8, lsr #3
   37980:	andeq	r8, r3, r8, lsr #3
   37984:	andeq	r8, r3, r8, lsr #3
   37988:	andeq	r8, r3, r8, lsr #3
   3798c:	andeq	r8, r3, r8, lsr #3
   37990:	andeq	r8, r3, r8, lsr #3
   37994:	andeq	r8, r3, r8, lsr #3
   37998:	andeq	r8, r3, r8, lsr #3
   3799c:	andeq	r8, r3, r8, lsr #3
   379a0:	andeq	r8, r3, r8, lsr #3
   379a4:	andeq	r8, r3, r8, lsr #3
   379a8:	andeq	r8, r3, r8, lsr #3
   379ac:	andeq	r8, r3, r8, lsr #3
   379b0:	andeq	r8, r3, r8, lsr #3
   379b4:	andeq	r8, r3, r8, lsr #3
   379b8:	andeq	r8, r3, r8, lsr #3
   379bc:	andeq	r8, r3, r8, lsr #3
   379c0:	andeq	r8, r3, r8, lsr #3
   379c4:	andeq	r8, r3, r8, lsr #3
   379c8:	andeq	r8, r3, r8, lsr #3
   379cc:	andeq	r8, r3, r8, lsr #3
   379d0:	andeq	r8, r3, r8, lsr #3
   379d4:	andeq	r8, r3, r8, lsr #3
   379d8:	andeq	r8, r3, r8, lsr #3
   379dc:	andeq	r8, r3, r8, lsr #3
   379e0:	andeq	r8, r3, r8, lsr #3
   379e4:	andeq	r8, r3, r8, lsr #3
   379e8:	andeq	r8, r3, r8, lsr #3
   379ec:	andeq	r8, r3, r8, lsr #3
   379f0:	andeq	r8, r3, r8, lsr #3
   379f4:	andeq	r8, r3, r8, lsr #3
   379f8:	andeq	r8, r3, r8, lsr #3
   379fc:	andeq	r8, r3, r8, lsr #3
   37a00:	andeq	r8, r3, r8, lsr #3
   37a04:	andeq	r8, r3, r8, lsr #3
   37a08:	andeq	r8, r3, r8, lsr #3
   37a0c:	andeq	r8, r3, r8, lsr #3
   37a10:	andeq	r8, r3, r8, lsr #3
   37a14:	andeq	r8, r3, r8, lsr #3
   37a18:	andeq	r8, r3, r8, lsr #3
   37a1c:	andeq	r8, r3, r8, lsr #3
   37a20:	andeq	r8, r3, r8, lsr #3
   37a24:	andeq	r8, r3, r8, lsr #3
   37a28:	andeq	r8, r3, r8, lsr #3
   37a2c:	andeq	r8, r3, r8, lsr #3
   37a30:	andeq	r8, r3, r8, lsr #3
   37a34:	andeq	r8, r3, r8, lsr #3
   37a38:	andeq	r8, r3, r8, lsr #3
   37a3c:	andeq	r8, r3, r8, lsr #3
   37a40:	andeq	r8, r3, r8, lsr #3
   37a44:	andeq	r8, r3, r8, lsr #3
   37a48:	andeq	r8, r3, r8, lsr #3
   37a4c:	andeq	r8, r3, r8, lsr #3
   37a50:	andeq	r8, r3, r8, lsr #3
   37a54:	andeq	r8, r3, r8, lsr #3
   37a58:	andeq	r8, r3, r8, lsr #3
   37a5c:	andeq	r8, r3, r8, lsr #3
   37a60:	andeq	r8, r3, r8, lsr #3
   37a64:	andeq	r8, r3, r8, lsr #3
   37a68:	andeq	r8, r3, r8, lsr #3
   37a6c:	andeq	r8, r3, r8, lsr #3
   37a70:	andeq	r8, r3, r8, lsr #3
   37a74:	andeq	r8, r3, r8, lsr #3
   37a78:	andeq	r8, r3, r8, lsr #3
   37a7c:	andeq	r8, r3, r8, lsr #3
   37a80:	andeq	r8, r3, r8, lsr #3
   37a84:	andeq	r8, r3, r8, lsr #3
   37a88:	andeq	r8, r3, r8, lsr #3
   37a8c:	andeq	r8, r3, r8, lsr #3
   37a90:	andeq	r8, r3, r8, lsr #3
   37a94:	andeq	r8, r3, r8, lsr #3
   37a98:	andeq	r8, r3, r8, lsr #3
   37a9c:	andeq	r8, r3, r8, lsr #3
   37aa0:	andeq	r8, r3, r8, lsr #3
   37aa4:	andeq	r8, r3, r8, lsr #3
   37aa8:	andeq	r8, r3, r8, lsr #3
   37aac:	andeq	r8, r3, r8, lsr #3
   37ab0:	andeq	r8, r3, r8, lsr #3
   37ab4:	andeq	r8, r3, r8, lsr #3
   37ab8:	andeq	r8, r3, r8, lsr #3
   37abc:	andeq	r8, r3, r8, lsr #3
   37ac0:	andeq	r8, r3, r8, lsr #3
   37ac4:	andeq	r8, r3, r8, lsr #3
   37ac8:	andeq	r8, r3, r8, lsr #3
   37acc:	andeq	r8, r3, r8, lsr #3
   37ad0:	andeq	r8, r3, r8, lsr #3
   37ad4:	andeq	r8, r3, r8, lsr #3
   37ad8:	andeq	r8, r3, r8, lsr #3
   37adc:	andeq	r8, r3, r8, lsr #3
   37ae0:	andeq	r8, r3, r8, lsr #3
   37ae4:	andeq	r8, r3, r8, lsr #3
   37ae8:	andeq	r8, r3, r8, lsr #3
   37aec:	andeq	r8, r3, r8, lsr #3
   37af0:	andeq	r8, r3, r8, lsr #3
   37af4:	andeq	r8, r3, r8, lsr #3
   37af8:	andeq	r8, r3, r8, lsr #3
   37afc:	andeq	r8, r3, r8, lsr #3
   37b00:	andeq	r8, r3, r8, lsr #3
   37b04:	andeq	r8, r3, r8, lsr #3
   37b08:	andeq	r8, r3, r8, lsr #3
   37b0c:	andeq	r8, r3, r8, lsr #3
   37b10:	andeq	r8, r3, r8, lsr #3
   37b14:	andeq	r8, r3, r8, lsr #3
   37b18:	andeq	r8, r3, r8, lsr #3
   37b1c:	andeq	r8, r3, r8, lsr #3
   37b20:	andeq	r8, r3, r8, lsr #3
   37b24:	andeq	r8, r3, r8, lsr #3
   37b28:	andeq	r8, r3, r8, lsr #3
   37b2c:	andeq	r8, r3, r8, lsr #3
   37b30:	andeq	r8, r3, r8, lsr #3
   37b34:	andeq	r8, r3, r8, lsr #3
   37b38:	andeq	r8, r3, r8, lsr #3
   37b3c:	andeq	r8, r3, r8, lsr #3
   37b40:	andeq	r8, r3, r8, lsr #3
   37b44:	andeq	r8, r3, r8, lsr #3
   37b48:	andeq	r8, r3, r8, lsr #3
   37b4c:	andeq	r8, r3, r8, lsr #3
   37b50:	andeq	r8, r3, r8, lsr #3
   37b54:	andeq	r8, r3, r8, lsr #3
   37b58:	andeq	r8, r3, r8, lsr #3
   37b5c:	andeq	r8, r3, r8, lsr #3
   37b60:	andeq	r8, r3, r8, lsr #3
   37b64:	andeq	r8, r3, r8, lsr #3
   37b68:	andeq	r8, r3, r8, lsr #3
   37b6c:	andeq	r8, r3, r8, lsr #3
   37b70:	andeq	r8, r3, r8, lsr #3
   37b74:	andeq	r8, r3, r8, lsr #3
   37b78:	andeq	r8, r3, r8, lsr #3
   37b7c:	andeq	r8, r3, r8, lsr #3
   37b80:	andeq	r8, r3, r8, lsr #3
   37b84:	andeq	r8, r3, r8, lsr #3
   37b88:	andeq	r8, r3, r8, lsr #3
   37b8c:	andeq	r8, r3, r8, lsr #3
   37b90:	andeq	r8, r3, r8, lsr #3
   37b94:	andeq	r8, r3, r8, lsr #3
   37b98:	andeq	r8, r3, r8, lsr #3
   37b9c:	andeq	r8, r3, r8, lsr #3
   37ba0:	andeq	r8, r3, r8, lsr #3
   37ba4:	andeq	r8, r3, r8, lsr #3
   37ba8:	andeq	r8, r3, r8, lsr #3
   37bac:	ldrdeq	r8, [r3], -r0
   37bb0:	strheq	r8, [r3], -ip
   37bb4:	andeq	r8, r3, r8, lsr #1
   37bb8:	muleq	r3, r4, r0
   37bbc:	andeq	r8, r3, ip, ror r0
   37bc0:	andeq	r8, r3, r8, rrx
   37bc4:	andeq	r8, r3, r4, asr r0
   37bc8:	andeq	r8, r3, r4, lsr #32
   37bcc:	andeq	r8, r3, r8, asr r1
   37bd0:	andeq	r8, r3, r4, asr #2
   37bd4:	andeq	r8, r3, r0, lsr r1
   37bd8:	andeq	r8, r3, r8, ror #1
   37bdc:	andeq	r8, r3, r0, lsl #3
   37be0:	andeq	r8, r3, ip, ror #2
   37be4:	muleq	r3, r4, r1
   37be8:	andeq	r7, r3, r0, ror #29
   37bec:	andeq	r7, r3, r4, lsr #31
   37bf0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   37bf4:	andeq	r7, r3, r4, lsl #31
   37bf8:	andeq	r7, r3, r0, asr pc
   37bfc:	andeq	r7, r3, ip, lsr pc
   37c00:	andeq	r7, r3, r4, lsr #30
   37c04:	andeq	r8, r3, r8, lsr #3
   37c08:	andeq	r8, r3, r8, lsr #3
   37c0c:	andeq	r8, r3, r8, lsr #3
   37c10:	andeq	r8, r3, r8, lsr #3
   37c14:	andeq	r8, r3, r8, lsr #3
   37c18:	andeq	r8, r3, r8, lsr #3
   37c1c:	andeq	r8, r3, r8, lsr #3
   37c20:	andeq	r8, r3, r8, lsr #3
   37c24:	andeq	r8, r3, r8, lsr #3
   37c28:	andeq	r8, r3, r8, lsr #3
   37c2c:	andeq	r8, r3, r8, lsr #3
   37c30:	andeq	r8, r3, r8, lsr #3
   37c34:	andeq	r8, r3, r8, lsr #3
   37c38:	andeq	r8, r3, r8, lsr #3
   37c3c:	andeq	r8, r3, r8, lsr #3
   37c40:	andeq	r8, r3, r8, lsr #3
   37c44:	andeq	r8, r3, r8, lsr #3
   37c48:	andeq	r8, r3, r8, lsr #3
   37c4c:	andeq	r8, r3, r8, lsr #3
   37c50:	andeq	r8, r3, r8, lsr #3
   37c54:	andeq	r8, r3, r8, lsr #3
   37c58:	andeq	r8, r3, r8, lsr #3
   37c5c:	andeq	r8, r3, r8, lsr #3
   37c60:	andeq	r8, r3, r8, lsr #3
   37c64:	andeq	r8, r3, r8, lsr #3
   37c68:	andeq	r8, r3, r8, lsr #3
   37c6c:	andeq	r8, r3, r8, lsr #3
   37c70:	andeq	r8, r3, r8, lsr #3
   37c74:	andeq	r8, r3, r8, lsr #3
   37c78:	andeq	r8, r3, r8, lsr #3
   37c7c:	andeq	r8, r3, r8, lsr #3
   37c80:	andeq	r8, r3, r8, lsr #3
   37c84:	andeq	r8, r3, r8, lsr #3
   37c88:	andeq	r8, r3, r8, lsr #3
   37c8c:	andeq	r8, r3, r8, lsr #3
   37c90:	andeq	r8, r3, r8, lsr #3
   37c94:	andeq	r8, r3, r8, lsr #3
   37c98:	andeq	r8, r3, r8, lsr #3
   37c9c:	andeq	r8, r3, r8, lsr #3
   37ca0:	andeq	r8, r3, r8, lsr #3
   37ca4:	andeq	r8, r3, r8, lsr #3
   37ca8:	andeq	r8, r3, r8, lsr #3
   37cac:	andeq	r8, r3, r8, lsr #3
   37cb0:	andeq	r8, r3, r8, lsr #3
   37cb4:	andeq	r8, r3, r8, lsr #3
   37cb8:	andeq	r8, r3, r8, lsr #3
   37cbc:	andeq	r8, r3, r8, lsr #3
   37cc0:	andeq	r8, r3, r8, lsr #3
   37cc4:	andeq	r8, r3, r8, lsr #3
   37cc8:	andeq	r8, r3, r8, lsr #3
   37ccc:	andeq	r8, r3, r8, lsr #3
   37cd0:	andeq	r8, r3, r8, lsr #3
   37cd4:	andeq	r8, r3, r8, lsr #3
   37cd8:	andeq	r8, r3, r8, lsr #3
   37cdc:	andeq	r8, r3, r8, lsr #3
   37ce0:	andeq	r8, r3, r8, lsr #3
   37ce4:	andeq	r8, r3, r8, lsr #3
   37ce8:	andeq	r8, r3, r8, lsr #3
   37cec:	andeq	r8, r3, r8, lsr #3
   37cf0:	andeq	r8, r3, r8, lsr #3
   37cf4:	andeq	r8, r3, r8, lsr #3
   37cf8:	andeq	r8, r3, r8, lsr #3
   37cfc:	andeq	r8, r3, r8, lsr #3
   37d00:	andeq	r8, r3, r8, lsr #3
   37d04:	andeq	r8, r3, r8, lsr #3
   37d08:	andeq	r8, r3, r8, lsr #3
   37d0c:	andeq	r8, r3, r8, lsr #3
   37d10:	andeq	r8, r3, r8, lsr #3
   37d14:	andeq	r8, r3, r8, lsr #3
   37d18:	andeq	r8, r3, r8, lsr #3
   37d1c:	andeq	r8, r3, r8, lsr #3
   37d20:	andeq	r8, r3, r8, lsr #3
   37d24:	andeq	r8, r3, r8, lsr #3
   37d28:	andeq	r8, r3, r8, lsr #3
   37d2c:	andeq	r8, r3, r8, lsr #3
   37d30:	andeq	r8, r3, r8, lsr #3
   37d34:	andeq	r8, r3, r8, lsr #3
   37d38:	andeq	r7, r3, ip, lsl #30
   37d3c:	strdeq	r7, [r3], -r4
   37d40:	andeq	r8, r3, r0
   37d44:	andeq	r7, r3, r4, ror #31
   37d48:	andeq	r7, r3, ip, asr #31
   37d4c:			; <UNDEFINED> instruction: 0x00037fb8
   37d50:	andeq	r7, r3, r0, lsr #29
   37d54:	andeq	r7, r3, ip, asr #28
   37d58:	andeq	r7, r3, r4, lsr lr
   37d5c:	andeq	r7, r3, r8, lsl #28
   37d60:	add	r0, r4, #14
   37d64:	add	r1, sp, #4
   37d68:	bl	137cc <strtoul@plt>
   37d6c:	ldr	r2, [pc, #2688]	; 387f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b9c>
   37d70:	ldr	r3, [sp, #4]
   37d74:	str	r0, [r2, #96]	; 0x60
   37d78:	ldrb	r3, [r3]
   37d7c:	cmp	r3, #0
   37d80:	bne	37d90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24138>
   37d84:	sub	r3, r0, #1
   37d88:	tst	r3, r0
   37d8c:	beq	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   37d90:	ldr	r1, [pc, #2656]	; 387f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba0>
   37d94:	mov	r2, #5
   37d98:	mov	r0, #0
   37d9c:	bl	13460 <dcgettext@plt>
   37da0:	ldr	r1, [r5]
   37da4:	add	r1, r1, #14
   37da8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   37dac:	mov	r3, #1
   37db0:	mov	r0, r3
   37db4:	add	sp, sp, #8
   37db8:	pop	{r4, r5, r6, pc}
   37dbc:	ldr	r5, [pc, #2616]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37dc0:	ldr	r1, [pc, #2616]	; 38800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba8>
   37dc4:	ldr	r4, [r5]
   37dc8:	mov	r0, r4
   37dcc:	bl	13268 <strcmp@plt>
   37dd0:	cmp	r0, #0
   37dd4:	bne	381b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24558>
   37dd8:	ldr	r1, [pc, #2808]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37ddc:	mov	r3, #1
   37de0:	ldrb	r2, [r1, #2]
   37de4:	orr	r2, r2, #96	; 0x60
   37de8:	strb	r2, [r1, #2]
   37dec:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37df0:	ldr	r3, [pc, #2564]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37df4:	ldr	r0, [pc, #2568]	; 38804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bac>
   37df8:	ldr	r1, [r3]
   37dfc:	bl	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae8>
   37e00:	mov	r3, #1
   37e04:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37e08:	ldr	r5, [pc, #2540]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37e0c:	ldr	r1, [pc, #2548]	; 38808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb0>
   37e10:	ldr	r4, [r5]
   37e14:	mov	r0, r4
   37e18:	bl	13520 <strcasecmp@plt>
   37e1c:	cmp	r0, #0
   37e20:	bne	381e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24588>
   37e24:	ldr	r2, [pc, #2732]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37e28:	mov	r3, #1
   37e2c:	str	r0, [r2, #12]
   37e30:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37e34:	ldr	r3, [pc, #2496]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37e38:	ldr	r0, [pc, #2508]	; 3880c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb4>
   37e3c:	ldr	r1, [r3]
   37e40:	bl	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae8>
   37e44:	mov	r3, #1
   37e48:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37e4c:	ldr	r5, [pc, #2492]	; 38810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb8>
   37e50:	ldr	r0, [r5, #8]
   37e54:	cmp	r0, #0
   37e58:	beq	37e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24210>
   37e5c:	bl	13364 <free@plt>
   37e60:	mov	r3, #0
   37e64:	str	r3, [r5, #8]
   37e68:	ldr	r3, [pc, #2444]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37e6c:	ldr	r4, [r3]
   37e70:	cmp	r4, #0
   37e74:	beq	382d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24678>
   37e78:	ldr	r1, [pc, #2440]	; 38808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb0>
   37e7c:	mov	r0, r4
   37e80:	bl	13268 <strcmp@plt>
   37e84:	cmp	r0, #0
   37e88:	beq	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   37e8c:	mov	r0, r4
   37e90:	bl	135a4 <xstrdup@plt>
   37e94:	mov	r3, #1
   37e98:	str	r0, [r5, #8]
   37e9c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37ea0:	ldr	r4, [pc, #2608]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37ea4:	ldr	r6, [pc, #2384]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37ea8:	ldr	r1, [pc, #2404]	; 38814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bbc>
   37eac:	ldrb	r3, [r4, #4]
   37eb0:	ldr	r5, [r6]
   37eb4:	bic	r3, r3, #12
   37eb8:	mov	r0, r5
   37ebc:	strb	r3, [r4, #4]
   37ec0:	bl	13268 <strcmp@plt>
   37ec4:	cmp	r0, #0
   37ec8:	bne	38244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x245ec>
   37ecc:	ldrb	r2, [r4, #4]
   37ed0:	mov	r3, #1
   37ed4:	orr	r2, r2, #4
   37ed8:	strb	r2, [r4, #4]
   37edc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37ee0:	ldr	r2, [pc, #2352]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   37ee4:	mov	r1, #0
   37ee8:	mov	r3, #1
   37eec:	str	r1, [r2, #52]	; 0x34
   37ef0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37ef4:	ldr	r1, [pc, #2524]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37ef8:	mov	r3, #1
   37efc:	ldrb	r2, [r1, #5]
   37f00:	orr	r2, r2, r3
   37f04:	strb	r2, [r1, #5]
   37f08:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f0c:	ldr	r1, [pc, #2500]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37f10:	mov	r3, #1
   37f14:	ldrb	r2, [r1, #5]
   37f18:	bic	r2, r2, #1
   37f1c:	strb	r2, [r1, #5]
   37f20:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f24:	ldr	r1, [pc, #2256]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37f28:	ldr	r2, [pc, #2272]	; 38810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb8>
   37f2c:	mov	r3, #1
   37f30:	ldr	r1, [r1]
   37f34:	str	r1, [r2, #20]
   37f38:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f3c:	ldr	r1, [pc, #2260]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   37f40:	mov	r2, #1
   37f44:	mov	r3, r2
   37f48:	str	r2, [r1, #56]	; 0x38
   37f4c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f50:	ldr	r5, [pc, #2212]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37f54:	ldr	r4, [r5]
   37f58:	cmp	r4, #0
   37f5c:	beq	3826c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24614>
   37f60:	ldr	r1, [pc, #2208]	; 38808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb0>
   37f64:	mov	r0, r4
   37f68:	bl	13268 <strcmp@plt>
   37f6c:	cmp	r0, #0
   37f70:	bne	38280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24628>
   37f74:	ldr	r2, [pc, #2204]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   37f78:	mov	r3, #1
   37f7c:	str	r0, [r2, #28]
   37f80:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f84:	bl	135bc <bfd_elf32_arm_use_long_plt@plt>
   37f88:	mov	r3, #1
   37f8c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37f90:	ldr	r2, [pc, #2176]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   37f94:	mov	r1, #0
   37f98:	mov	r3, #1
   37f9c:	str	r1, [r2, #48]	; 0x30
   37fa0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37fa4:	ldr	r1, [pc, #2156]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   37fa8:	mov	r2, #1
   37fac:	mov	r3, r2
   37fb0:	str	r2, [r1, #48]	; 0x30
   37fb4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37fb8:	ldr	r3, [pc, #2108]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   37fbc:	ldr	r0, [r3]
   37fc0:	bl	22304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6ac>
   37fc4:	mov	r3, #1
   37fc8:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37fcc:	ldr	r1, [pc, #2308]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37fd0:	mov	r3, #1
   37fd4:	ldrb	r2, [r1, #3]
   37fd8:	bic	r2, r2, #192	; 0xc0
   37fdc:	strb	r2, [r1, #3]
   37fe0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   37fe4:	ldr	r1, [pc, #2284]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   37fe8:	mov	r3, #1
   37fec:	ldrb	r2, [r1, #3]
   37ff0:	bic	r2, r2, #128	; 0x80
   37ff4:	orr	r2, r2, #64	; 0x40
   37ff8:	strb	r2, [r1, #3]
   37ffc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38000:	ldr	r2, [pc, #2256]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38004:	mov	r3, #1
   38008:	ldrh	r1, [r2, #2]
   3800c:	ldr	r0, [r2, #116]	; 0x74
   38010:	orr	r1, r1, #480	; 0x1e0
   38014:	orr	r0, r0, #4
   38018:	str	r0, [r2, #116]	; 0x74
   3801c:	strh	r1, [r2, #2]
   38020:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38024:	ldr	r5, [pc, #2000]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   38028:	ldr	r1, [pc, #2008]	; 38808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bb0>
   3802c:	ldr	r4, [r5]
   38030:	mov	r0, r4
   38034:	bl	13268 <strcmp@plt>
   38038:	cmp	r0, #0
   3803c:	bne	3821c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x245c4>
   38040:	ldr	r1, [pc, #2000]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38044:	mov	r2, #1
   38048:	mov	r3, r2
   3804c:	str	r2, [r1, #24]
   38050:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38054:	ldr	r1, [pc, #1980]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38058:	mov	r2, #1
   3805c:	mov	r3, r2
   38060:	str	r2, [r1, #20]
   38064:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38068:	ldr	r1, [pc, #1960]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   3806c:	mov	r2, #1
   38070:	mov	r3, r2
   38074:	str	r2, [r1, #16]
   38078:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3807c:	ldr	r1, [pc, #1912]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   38080:	ldr	r2, [pc, #1936]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38084:	mov	r3, #1
   38088:	ldr	r1, [r1]
   3808c:	str	r1, [r2, #12]
   38090:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38094:	ldr	r2, [pc, #1916]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38098:	mov	r1, #0
   3809c:	mov	r3, #1
   380a0:	str	r1, [r2, #8]
   380a4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   380a8:	ldr	r1, [pc, #1896]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   380ac:	mov	r2, #1
   380b0:	mov	r3, r2
   380b4:	str	r2, [r1, #8]
   380b8:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   380bc:	ldr	r1, [pc, #1876]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   380c0:	mov	r2, #1
   380c4:	mov	r3, r2
   380c8:	str	r2, [r1, #4]
   380cc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   380d0:	ldr	r1, [pc, #1828]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   380d4:	ldr	r2, [pc, #1852]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   380d8:	mov	r3, #1
   380dc:	ldr	r1, [r1]
   380e0:	str	r1, [r2]
   380e4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   380e8:	ldr	r4, [pc, #1804]	; 387fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ba4>
   380ec:	mov	r2, #0
   380f0:	add	r1, sp, #4
   380f4:	ldr	r0, [r4]
   380f8:	bl	13250 <bfd_scan_vma@plt>
   380fc:	ldr	r2, [sp, #4]
   38100:	ldr	r3, [pc, #1808]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38104:	ldrb	r2, [r2]
   38108:	cmp	r2, #0
   3810c:	str	r0, [r3, #64]	; 0x40
   38110:	beq	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   38114:	mov	r2, #5
   38118:	ldr	r1, [pc, #1788]	; 3881c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc4>
   3811c:	mov	r0, #0
   38120:	bl	13460 <dcgettext@plt>
   38124:	ldr	r1, [r4]
   38128:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3812c:	b	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   38130:	ldr	r2, [pc, #1760]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38134:	mov	r1, #2
   38138:	mov	r3, #1
   3813c:	str	r1, [r2, #16]
   38140:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38144:	ldr	r1, [pc, #1740]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38148:	mov	r2, #1
   3814c:	mov	r3, r2
   38150:	str	r2, [r1, #40]	; 0x28
   38154:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38158:	ldr	r1, [pc, #1720]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   3815c:	mov	r2, #1
   38160:	mov	r3, r2
   38164:	str	r2, [r1, #32]
   38168:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3816c:	ldr	r1, [pc, #1700]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38170:	mov	r2, #1
   38174:	mov	r3, r2
   38178:	str	r2, [r1, #44]	; 0x2c
   3817c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38180:	ldr	r1, [pc, #1680]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38184:	mov	r2, #1
   38188:	mov	r3, r2
   3818c:	str	r2, [r1, #36]	; 0x24
   38190:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38194:	ldr	r2, [pc, #1660]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38198:	mov	r1, #0
   3819c:	mov	r3, #1
   381a0:	str	r1, [r2, #44]	; 0x2c
   381a4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   381a8:	mov	r3, #0
   381ac:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   381b0:	ldr	r1, [pc, #1640]	; 38820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc8>
   381b4:	mov	r0, r4
   381b8:	bl	13268 <strcmp@plt>
   381bc:	cmp	r0, #0
   381c0:	bne	382dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24684>
   381c4:	ldr	r1, [pc, #1804]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   381c8:	mov	r3, #1
   381cc:	ldrb	r2, [r1, #2]
   381d0:	bic	r2, r2, #64	; 0x40
   381d4:	orr	r2, r2, #32
   381d8:	strb	r2, [r1, #2]
   381dc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   381e0:	ldr	r1, [pc, #1596]	; 38824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bcc>
   381e4:	mov	r0, r4
   381e8:	bl	13520 <strcasecmp@plt>
   381ec:	cmp	r0, #0
   381f0:	beq	382bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24664>
   381f4:	ldr	r1, [pc, #1580]	; 38828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bd0>
   381f8:	mov	r0, r4
   381fc:	bl	13520 <strcasecmp@plt>
   38200:	cmp	r0, #0
   38204:	bne	3835c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24704>
   38208:	ldr	r2, [pc, #1736]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   3820c:	mov	r1, #3
   38210:	mov	r3, #1
   38214:	str	r1, [r2, #12]
   38218:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3821c:	ldr	r1, [pc, #1544]	; 3882c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bd4>
   38220:	mov	r0, r4
   38224:	bl	13268 <strcmp@plt>
   38228:	cmp	r0, #0
   3822c:	bne	38308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x246b0>
   38230:	ldr	r2, [pc, #1504]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38234:	mov	r1, #2
   38238:	mov	r3, #1
   3823c:	str	r1, [r2, #24]
   38240:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38244:	ldr	r1, [pc, #1508]	; 38830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bd8>
   38248:	mov	r0, r5
   3824c:	bl	13268 <strcmp@plt>
   38250:	cmp	r0, #0
   38254:	bne	38330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x246d8>
   38258:	ldrb	r2, [r4, #4]
   3825c:	mov	r3, #1
   38260:	orr	r2, r2, #8
   38264:	strb	r2, [r4, #4]
   38268:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3826c:	ldr	r1, [pc, #1444]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38270:	mov	r2, #1
   38274:	mov	r3, r2
   38278:	str	r2, [r1, #28]
   3827c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38280:	ldr	r1, [pc, #1452]	; 38834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bdc>
   38284:	mov	r0, r4
   38288:	bl	13268 <strcmp@plt>
   3828c:	cmp	r0, #0
   38290:	beq	3826c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24614>
   38294:	mov	r0, r4
   38298:	ldr	r1, [pc, #1432]	; 38838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24be0>
   3829c:	bl	13268 <strcmp@plt>
   382a0:	cmp	r0, #0
   382a4:	bne	38434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247dc>
   382a8:	ldr	r2, [pc, #1384]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   382ac:	mov	r1, #2
   382b0:	mov	r3, #1
   382b4:	str	r1, [r2, #28]
   382b8:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   382bc:	ldr	r2, [pc, #1556]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   382c0:	mov	r1, #5
   382c4:	mov	r3, #1
   382c8:	str	r1, [r2, #12]
   382cc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   382d0:	ldr	r4, [pc, #1380]	; 3883c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24be4>
   382d4:	str	r4, [r3]
   382d8:	b	37e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24234>
   382dc:	ldr	r1, [pc, #1372]	; 38840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24be8>
   382e0:	mov	r0, r4
   382e4:	bl	13268 <strcmp@plt>
   382e8:	cmp	r0, #0
   382ec:	bne	38390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24738>
   382f0:	ldr	r1, [pc, #1504]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   382f4:	mov	r3, #1
   382f8:	ldrb	r2, [r1, #5]
   382fc:	orr	r2, r2, #8
   38300:	strb	r2, [r1, #5]
   38304:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38308:	mov	r0, r4
   3830c:	ldr	r1, [pc, #1328]	; 38844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bec>
   38310:	bl	13268 <strcmp@plt>
   38314:	cmp	r0, #0
   38318:	bne	38408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247b0>
   3831c:	ldr	r2, [pc, #1268]	; 38818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bc0>
   38320:	mov	r1, #3
   38324:	mov	r3, #1
   38328:	str	r1, [r2, #24]
   3832c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38330:	mov	r0, r5
   38334:	ldr	r1, [pc, #1292]	; 38848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bf0>
   38338:	bl	13268 <strcmp@plt>
   3833c:	cmp	r0, #0
   38340:	bne	38414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247bc>
   38344:	ldrb	r2, [r4, #4]
   38348:	mov	r3, #1
   3834c:	bic	r2, r2, #12
   38350:	orr	r2, r2, #12
   38354:	strb	r2, [r4, #4]
   38358:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3835c:	mov	r0, r4
   38360:	ldr	r1, [pc, #1252]	; 3884c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bf4>
   38364:	bl	13520 <strcasecmp@plt>
   38368:	cmp	r0, #0
   3836c:	beq	382bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24664>
   38370:	ldr	r1, [pc, #1240]	; 38850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bf8>
   38374:	mov	r2, #5
   38378:	mov	r0, #0
   3837c:	bl	13460 <dcgettext@plt>
   38380:	ldr	r1, [r5]
   38384:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38388:	mov	r3, #1
   3838c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38390:	mov	r2, #14
   38394:	ldr	r1, [pc, #1208]	; 38854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bfc>
   38398:	mov	r0, r4
   3839c:	bl	13bb0 <strncmp@plt>
   383a0:	subs	r2, r0, #0
   383a4:	beq	37d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24108>
   383a8:	mov	r2, #17
   383ac:	ldr	r1, [pc, #1188]	; 38858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c00>
   383b0:	mov	r0, r4
   383b4:	bl	13bb0 <strncmp@plt>
   383b8:	subs	r2, r0, #0
   383bc:	beq	38440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247e8>
   383c0:	mov	r2, #11
   383c4:	ldr	r1, [pc, #1168]	; 3885c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c04>
   383c8:	mov	r0, r4
   383cc:	bl	13bb0 <strncmp@plt>
   383d0:	subs	r6, r0, #0
   383d4:	beq	384c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24868>
   383d8:	ldr	r1, [pc, #1152]	; 38860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c08>
   383dc:	mov	r0, r4
   383e0:	bl	13268 <strcmp@plt>
   383e4:	cmp	r0, #0
   383e8:	bne	38490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24838>
   383ec:	ldr	r1, [pc, #1252]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   383f0:	mov	r3, #1
   383f4:	ldr	r2, [r1, #4]
   383f8:	bic	r2, r2, #98304	; 0x18000
   383fc:	orr	r2, r2, #32768	; 0x8000
   38400:	str	r2, [r1, #4]
   38404:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38408:	mov	r2, #5
   3840c:	ldr	r1, [pc, #1104]	; 38864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c0c>
   38410:	b	38378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24720>
   38414:	mov	r2, #5
   38418:	ldr	r1, [pc, #1096]	; 38868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c10>
   3841c:	mov	r0, #0
   38420:	bl	13460 <dcgettext@plt>
   38424:	ldr	r1, [r6]
   38428:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3842c:	mov	r3, #1
   38430:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38434:	mov	r2, #5
   38438:	ldr	r1, [pc, #1068]	; 3886c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c14>
   3843c:	b	38378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24720>
   38440:	add	r0, r4, #17
   38444:	add	r1, sp, #4
   38448:	bl	137cc <strtoul@plt>
   3844c:	ldr	r2, [pc, #928]	; 387f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b9c>
   38450:	ldr	r3, [sp, #4]
   38454:	str	r0, [r2, #100]	; 0x64
   38458:	ldrb	r3, [r3]
   3845c:	cmp	r3, #0
   38460:	bne	38470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24818>
   38464:	sub	r3, r0, #1
   38468:	tst	r3, r0
   3846c:	beq	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   38470:	mov	r2, #5
   38474:	ldr	r1, [pc, #1012]	; 38870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c18>
   38478:	mov	r0, #0
   3847c:	bl	13460 <dcgettext@plt>
   38480:	ldr	r1, [r5]
   38484:	add	r1, r1, #17
   38488:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3848c:	b	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   38490:	ldr	r1, [pc, #988]	; 38874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c1c>
   38494:	mov	r0, r4
   38498:	bl	13268 <strcmp@plt>
   3849c:	cmp	r0, #0
   384a0:	bne	38524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x248cc>
   384a4:	ldr	r1, [pc, #1068]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   384a8:	mov	r3, #1
   384ac:	ldr	r2, [r1, #4]
   384b0:	bic	r2, r2, #98304	; 0x18000
   384b4:	orr	r2, r2, #65536	; 0x10000
   384b8:	str	r2, [r1, #4]
   384bc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   384c0:	add	r0, r4, #11
   384c4:	mov	r2, r6
   384c8:	add	r1, sp, #4
   384cc:	bl	137cc <strtoul@plt>
   384d0:	ldr	r4, [pc, #1024]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   384d4:	ldr	r3, [sp, #4]
   384d8:	str	r0, [r4, #16]
   384dc:	ldrb	r3, [r3]
   384e0:	cmp	r3, #0
   384e4:	lsreq	r0, r0, #31
   384e8:	movne	r0, #1
   384ec:	cmp	r0, #0
   384f0:	beq	38510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x248b8>
   384f4:	ldr	r1, [pc, #892]	; 38878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c20>
   384f8:	mov	r0, r6
   384fc:	mov	r2, #5
   38500:	bl	13460 <dcgettext@plt>
   38504:	ldr	r1, [r5]
   38508:	add	r1, r1, #11
   3850c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38510:	ldr	r3, [r4, #16]
   38514:	cmp	r3, #0
   38518:	mvneq	r3, #0
   3851c:	streq	r3, [r4, #16]
   38520:	b	37dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24154>
   38524:	ldr	r1, [pc, #848]	; 3887c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c24>
   38528:	mov	r0, r4
   3852c:	bl	13268 <strcmp@plt>
   38530:	cmp	r0, #0
   38534:	bne	38550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x248f8>
   38538:	ldr	r1, [pc, #920]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   3853c:	mov	r3, #1
   38540:	ldr	r2, [r1, #116]	; 0x74
   38544:	orr	r2, r2, #16777216	; 0x1000000
   38548:	str	r2, [r1, #116]	; 0x74
   3854c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38550:	ldr	r1, [pc, #808]	; 38880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c28>
   38554:	mov	r0, r4
   38558:	bl	13268 <strcmp@plt>
   3855c:	cmp	r0, #0
   38560:	bne	3857c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24924>
   38564:	ldr	r1, [pc, #876]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38568:	mov	r3, #1
   3856c:	ldr	r2, [r1, #116]	; 0x74
   38570:	orr	r2, r2, #2
   38574:	str	r2, [r1, #116]	; 0x74
   38578:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3857c:	ldr	r1, [pc, #768]	; 38884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c2c>
   38580:	mov	r0, r4
   38584:	bl	13268 <strcmp@plt>
   38588:	cmp	r0, #0
   3858c:	bne	385a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24950>
   38590:	ldr	r1, [pc, #832]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38594:	mov	r3, #1
   38598:	ldr	r2, [r1, #116]	; 0x74
   3859c:	orr	r2, r2, #32
   385a0:	str	r2, [r1, #116]	; 0x74
   385a4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   385a8:	ldr	r1, [pc, #728]	; 38888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c30>
   385ac:	mov	r0, r4
   385b0:	bl	13268 <strcmp@plt>
   385b4:	cmp	r0, #0
   385b8:	bne	385d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2497c>
   385bc:	ldr	r1, [pc, #788]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   385c0:	mov	r3, #1
   385c4:	ldr	r2, [r1, #116]	; 0x74
   385c8:	orr	r2, r2, #1024	; 0x400
   385cc:	str	r2, [r1, #116]	; 0x74
   385d0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   385d4:	ldr	r1, [pc, #688]	; 3888c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c34>
   385d8:	mov	r0, r4
   385dc:	bl	13268 <strcmp@plt>
   385e0:	cmp	r0, #0
   385e4:	bne	38600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x249a8>
   385e8:	ldr	r1, [pc, #744]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   385ec:	mov	r3, #1
   385f0:	ldr	r2, [r1, #116]	; 0x74
   385f4:	orr	r2, r2, #16
   385f8:	str	r2, [r1, #116]	; 0x74
   385fc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38600:	ldr	r1, [pc, #648]	; 38890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c38>
   38604:	mov	r0, r4
   38608:	bl	13268 <strcmp@plt>
   3860c:	cmp	r0, #0
   38610:	bne	3862c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x249d4>
   38614:	ldr	r1, [pc, #700]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38618:	mov	r3, #1
   3861c:	ldr	r2, [r1, #116]	; 0x74
   38620:	orr	r2, r2, #2048	; 0x800
   38624:	str	r2, [r1, #116]	; 0x74
   38628:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3862c:	ldr	r1, [pc, #608]	; 38894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c3c>
   38630:	mov	r0, r4
   38634:	bl	13268 <strcmp@plt>
   38638:	cmp	r0, #0
   3863c:	bne	38658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a00>
   38640:	ldr	r1, [pc, #656]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38644:	mov	r3, #1
   38648:	ldr	r2, [r1, #116]	; 0x74
   3864c:	orr	r2, r2, #8
   38650:	str	r2, [r1, #116]	; 0x74
   38654:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38658:	ldr	r1, [pc, #568]	; 38898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c40>
   3865c:	mov	r0, r4
   38660:	bl	13268 <strcmp@plt>
   38664:	cmp	r0, #0
   38668:	bne	38684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a2c>
   3866c:	ldr	r1, [pc, #612]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38670:	mov	r3, #1
   38674:	ldr	r2, [r1, #116]	; 0x74
   38678:	orr	r2, r2, #64	; 0x40
   3867c:	str	r2, [r1, #116]	; 0x74
   38680:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38684:	ldr	r1, [pc, #528]	; 3889c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c44>
   38688:	mov	r0, r4
   3868c:	bl	13268 <strcmp@plt>
   38690:	cmp	r0, #0
   38694:	bne	386b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a58>
   38698:	ldr	r1, [pc, #568]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   3869c:	mov	r3, #1
   386a0:	ldr	r2, [r1, #116]	; 0x74
   386a4:	orr	r2, r2, #4096	; 0x1000
   386a8:	str	r2, [r1, #116]	; 0x74
   386ac:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   386b0:	ldr	r1, [pc, #488]	; 388a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c48>
   386b4:	mov	r0, r4
   386b8:	bl	13268 <strcmp@plt>
   386bc:	cmp	r0, #0
   386c0:	bne	386e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a88>
   386c4:	ldr	r2, [pc, #524]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   386c8:	mov	r3, #1
   386cc:	ldrd	r0, [r2, #112]	; 0x70
   386d0:	orr	r0, r0, #8
   386d4:	orr	r1, r1, r3
   386d8:	strd	r0, [r2, #112]	; 0x70
   386dc:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   386e0:	ldr	r1, [pc, #444]	; 388a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c4c>
   386e4:	mov	r0, r4
   386e8:	bl	13268 <strcmp@plt>
   386ec:	cmp	r0, #0
   386f0:	bne	38710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ab8>
   386f4:	ldr	r2, [pc, #476]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   386f8:	mov	r3, #1
   386fc:	ldrd	r0, [r2, #112]	; 0x70
   38700:	bic	r0, r0, #8
   38704:	bic	r1, r1, #1
   38708:	strd	r0, [r2, #112]	; 0x70
   3870c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38710:	ldr	r1, [pc, #400]	; 388a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c50>
   38714:	mov	r0, r4
   38718:	bl	13268 <strcmp@plt>
   3871c:	cmp	r0, #0
   38720:	bne	38740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ae8>
   38724:	ldr	r2, [pc, #428]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38728:	mov	r3, #1
   3872c:	ldrd	r0, [r2, #112]	; 0x70
   38730:	orr	r0, r0, r3
   38734:	orr	r1, r1, #128	; 0x80
   38738:	strd	r0, [r2, #112]	; 0x70
   3873c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38740:	ldr	r1, [pc, #356]	; 388ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c54>
   38744:	mov	r0, r4
   38748:	bl	13268 <strcmp@plt>
   3874c:	cmp	r0, #0
   38750:	bne	3876c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b14>
   38754:	ldr	r1, [pc, #380]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38758:	mov	r3, #1
   3875c:	ldrb	r2, [r1, #4]
   38760:	orr	r2, r2, #64	; 0x40
   38764:	strb	r2, [r1, #4]
   38768:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3876c:	ldr	r1, [pc, #316]	; 388b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c58>
   38770:	mov	r0, r4
   38774:	bl	13268 <strcmp@plt>
   38778:	cmp	r0, #0
   3877c:	bne	38798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b40>
   38780:	ldr	r1, [pc, #336]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38784:	mov	r3, #1
   38788:	ldrb	r2, [r1, #4]
   3878c:	bic	r2, r2, #64	; 0x40
   38790:	strb	r2, [r1, #4]
   38794:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38798:	ldr	r1, [pc, #276]	; 388b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c5c>
   3879c:	mov	r0, r4
   387a0:	bl	13268 <strcmp@plt>
   387a4:	cmp	r0, #0
   387a8:	bne	387c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b6c>
   387ac:	ldr	r1, [pc, #292]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   387b0:	mov	r3, #1
   387b4:	ldrb	r2, [r1]
   387b8:	orr	r2, r2, #8
   387bc:	strb	r2, [r1]
   387c0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   387c4:	ldr	r1, [pc, #236]	; 388b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c60>
   387c8:	mov	r0, r4
   387cc:	bl	13268 <strcmp@plt>
   387d0:	cmp	r0, #0
   387d4:	bne	388e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c8c>
   387d8:	ldr	r1, [pc, #248]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   387dc:	mov	r3, #1
   387e0:	ldrb	r2, [r1, #3]
   387e4:	orr	r2, r2, #16
   387e8:	strb	r2, [r1, #3]
   387ec:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   387f0:	andeq	r0, r0, r9, asr #2
   387f4:	andeq	r8, ip, r4, ror r1
   387f8:	andeq	r4, r8, r8, lsr r4
   387fc:	andeq	r7, ip, r8, lsl #20
   38800:	andeq	r4, r8, r0, lsl r4
   38804:	ldrdeq	r7, [ip], -r8
   38808:	andeq	sp, r4, r0, lsl #14
   3880c:	ldrdeq	r7, [ip], -r4
   38810:	andeq	r7, ip, r8, asr #29
   38814:	ldrdeq	r4, [r8], -ip
   38818:	andeq	r7, ip, ip, lsr #11
   3881c:			; <UNDEFINED> instruction: 0x0004bbb8
   38820:	andeq	r4, r8, r8, lsl r4
   38824:	andeq	r4, r8, r4, lsl #7
   38828:	andeq	r4, r8, ip, lsl #7
   3882c:	strdeq	r4, [r8], -r0
   38830:	andeq	r4, r8, r4, ror #7
   38834:	strdeq	fp, [r4], -ip
   38838:	muleq	r4, ip, r6
   3883c:	andeq	r2, r5, ip, ror #6
   38840:	andeq	r4, r8, r0, lsr #8
   38844:	strdeq	r4, [r8], -r8
   38848:	andeq	r4, r8, r8, ror #7
   3884c:	muleq	r8, r8, r3
   38850:	andeq	r4, r8, r4, lsr #7
   38854:	andeq	r4, r8, r8, lsr #8
   38858:	andeq	r4, r8, r0, ror #8
   3885c:	muleq	r8, ip, r4
   38860:	andeq	r4, r8, r8, asr #9
   38864:	andeq	r4, r8, r0, lsl #12
   38868:	strdeq	r4, [r8], -r0
   3886c:	andeq	r4, r8, r8, lsr #12
   38870:	andeq	r4, r8, r4, ror r4
   38874:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   38878:	andeq	r4, r8, r8, lsr #9
   3887c:	andeq	r4, r8, r0, ror #9
   38880:	andeq	r3, r4, r4, lsr r9
   38884:	andeq	r4, r8, ip, ror #9
   38888:	strdeq	r4, [r8], -r8
   3888c:	andeq	r4, r8, r4, lsl #10
   38890:	andeq	r4, r8, r0, lsl r5
   38894:	andeq	r4, r8, r0, lsr #10
   38898:	andeq	r4, r8, ip, lsr #10
   3889c:	andeq	r4, r8, r8, lsr r5
   388a0:	andeq	r4, r8, r0, asr #10
   388a4:	andeq	r4, r8, r4, asr #10
   388a8:	andeq	r4, r8, ip, asr #10
   388ac:	andeq	r4, r8, r4, asr r5
   388b0:	andeq	r4, r8, r0, ror #10
   388b4:	andeq	r4, r8, ip, ror #10
   388b8:	andeq	r4, r8, r8, ror r5
   388bc:	andeq	r4, r8, r0, lsl #11
   388c0:	andeq	r4, r8, r8, lsl #11
   388c4:	muleq	r8, r8, r5
   388c8:	andeq	r4, r8, r8, lsr #11
   388cc:			; <UNDEFINED> instruction: 0x000845b0
   388d0:			; <UNDEFINED> instruction: 0x000845bc
   388d4:	andeq	r4, r8, r4, asr #11
   388d8:	andeq	r8, ip, ip, lsl #1
   388dc:	andeq	r4, r8, ip, asr #11
   388e0:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   388e4:	ldr	r1, [pc, #-48]	; 388bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c64>
   388e8:	mov	r0, r4
   388ec:	bl	13268 <strcmp@plt>
   388f0:	cmp	r0, #0
   388f4:	bne	38910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24cb8>
   388f8:	ldr	r1, [pc, #-40]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   388fc:	mov	r3, #1
   38900:	ldrb	r2, [r1, #3]
   38904:	bic	r2, r2, #16
   38908:	strb	r2, [r1, #3]
   3890c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38910:	ldr	r1, [pc, #-88]	; 388c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c68>
   38914:	mov	r0, r4
   38918:	bl	13268 <strcmp@plt>
   3891c:	cmp	r0, #0
   38920:	bne	3893c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ce4>
   38924:	ldr	r1, [pc, #-84]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38928:	mov	r3, #1
   3892c:	ldrb	r2, [r1, #3]
   38930:	orr	r2, r2, #32
   38934:	strb	r2, [r1, #3]
   38938:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   3893c:	ldr	r1, [pc, #-128]	; 388c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c6c>
   38940:	mov	r0, r4
   38944:	bl	13268 <strcmp@plt>
   38948:	cmp	r0, #0
   3894c:	bne	38968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24d10>
   38950:	ldr	r1, [pc, #-128]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38954:	mov	r3, #1
   38958:	ldrb	r2, [r1, #3]
   3895c:	bic	r2, r2, #32
   38960:	strb	r2, [r1, #3]
   38964:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38968:	ldr	r1, [pc, #-168]	; 388c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c70>
   3896c:	mov	r0, r4
   38970:	bl	13268 <strcmp@plt>
   38974:	cmp	r0, #0
   38978:	bne	38998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24d40>
   3897c:	ldr	r1, [pc, #-172]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38980:	mov	r3, #1
   38984:	ldrb	r2, [r1, #2]
   38988:	bic	r2, r2, #4
   3898c:	orr	r2, r2, #2
   38990:	strb	r2, [r1, #2]
   38994:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38998:	ldr	r1, [pc, #-212]	; 388cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c74>
   3899c:	mov	r0, r4
   389a0:	bl	13268 <strcmp@plt>
   389a4:	cmp	r0, #0
   389a8:	bne	389c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24d70>
   389ac:	ldr	r1, [pc, #-220]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   389b0:	mov	r3, #1
   389b4:	ldrb	r2, [r1, #2]
   389b8:	bic	r2, r2, #2
   389bc:	orr	r2, r2, #4
   389c0:	strb	r2, [r1, #2]
   389c4:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   389c8:	ldr	r1, [pc, #-256]	; 388d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c78>
   389cc:	mov	r0, r4
   389d0:	bl	13268 <strcmp@plt>
   389d4:	cmp	r0, #0
   389d8:	bne	389f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24d9c>
   389dc:	ldr	r1, [pc, #-268]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   389e0:	mov	r3, #1
   389e4:	ldrb	r2, [r1, #4]
   389e8:	orr	r2, r2, #2
   389ec:	strb	r2, [r1, #4]
   389f0:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   389f4:	ldr	r1, [pc, #-296]	; 388d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c7c>
   389f8:	mov	r0, r4
   389fc:	bl	13268 <strcmp@plt>
   38a00:	cmp	r0, #0
   38a04:	bne	38a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24dc8>
   38a08:	ldr	r1, [pc, #-312]	; 388d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c80>
   38a0c:	mov	r3, #1
   38a10:	ldrb	r2, [r1, #4]
   38a14:	bic	r2, r2, #2
   38a18:	strb	r2, [r1, #4]
   38a1c:	b	37db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24158>
   38a20:	mov	r0, r4
   38a24:	ldr	r1, [pc, #-336]	; 388dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c84>
   38a28:	bl	13268 <strcmp@plt>
   38a2c:	cmp	r0, #0
   38a30:	beq	38a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24db0>
   38a34:	mov	r2, #5
   38a38:	ldr	r1, [pc, #-352]	; 388e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c88>
   38a3c:	b	38378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24720>
   38a40:	push	{r4, r5, r6, r7, r8, lr}
   38a44:	mov	r7, r1
   38a48:	mov	r5, r0
   38a4c:	add	r1, r0, #6
   38a50:	ldr	r0, [r7]
   38a54:	mov	r6, r3
   38a58:	mov	r4, r2
   38a5c:	bl	134fc <xrealloc@plt>
   38a60:	ldr	r2, [pc, #76]	; 38ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e5c>
   38a64:	add	r4, r4, #35	; 0x23
   38a68:	ldrh	lr, [r2, #4]
   38a6c:	lsl	r4, r4, #4
   38a70:	mov	r1, r4
   38a74:	mov	r3, r0
   38a78:	add	ip, r0, r5
   38a7c:	ldr	r0, [r2]
   38a80:	str	r3, [r7]
   38a84:	str	r0, [r3, r5]
   38a88:	strh	lr, [ip, #4]
   38a8c:	ldr	r0, [r6]
   38a90:	bl	134fc <xrealloc@plt>
   38a94:	mov	r2, #560	; 0x230
   38a98:	ldr	r1, [pc, #24]	; 38ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e60>
   38a9c:	mov	r3, r0
   38aa0:	sub	r0, r4, #560	; 0x230
   38aa4:	str	r3, [r6]
   38aa8:	add	r0, r3, r0
   38aac:	pop	{r4, r5, r6, r7, r8, lr}
   38ab0:	b	133b8 <memcpy@plt>
   38ab4:	andeq	r4, r8, r4, asr r6
   38ab8:	andeq	r5, r8, r4, ror r0
   38abc:	push	{r4, r5, r6, r7, r8, lr}
   38ac0:	ldr	r4, [r1]
   38ac4:	cmp	r4, #0
   38ac8:	beq	38b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ef4>
   38acc:	ldr	r8, [pc, #236]	; 38bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f68>
   38ad0:	ldr	r7, [pc, #236]	; 38bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f6c>
   38ad4:	ldr	r6, [pc, #236]	; 38bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f70>
   38ad8:	mov	r5, r0
   38adc:	ldr	r3, [r4, #4]
   38ae0:	cmp	r3, #15
   38ae4:	ldrls	pc, [pc, r3, lsl #2]
   38ae8:	b	38bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f58>
   38aec:	andeq	r8, r3, ip, lsr #22
   38af0:	andeq	r8, r3, r0, asr #22
   38af4:	andeq	r8, r3, r0, asr #22
   38af8:	andeq	r8, r3, r0, asr #22
   38afc:	muleq	r3, r8, fp
   38b00:	andeq	r8, r3, ip, ror #22
   38b04:	andeq	r8, r3, r0, asr #22
   38b08:	andeq	r8, r3, r0, asr #22
   38b0c:	andeq	r8, r3, r0, asr #22
   38b10:	andeq	r8, r3, r0, asr #22
   38b14:	andeq	r8, r3, r0, asr #22
   38b18:	andeq	r8, r3, r0, asr #22
   38b1c:	andeq	r8, r3, r0, asr #22
   38b20:	andeq	r8, r3, ip, lsr #22
   38b24:			; <UNDEFINED> instruction: 0x00038bb0
   38b28:	andeq	r8, r3, r4, asr fp
   38b2c:	add	r1, r4, #8
   38b30:	mov	r0, r5
   38b34:	bl	38abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e64>
   38b38:	cmp	r0, #0
   38b3c:	popne	{r4, r5, r6, r7, r8, pc}
   38b40:	ldr	r4, [r4]
   38b44:	cmp	r4, #0
   38b48:	bne	38adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e84>
   38b4c:	mov	r0, #0
   38b50:	pop	{r4, r5, r6, r7, r8, pc}
   38b54:	mov	r1, r6
   38b58:	mov	r0, r5
   38b5c:	bl	38abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e64>
   38b60:	cmp	r0, #0
   38b64:	beq	38b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ee8>
   38b68:	pop	{r4, r5, r6, r7, r8, pc}
   38b6c:	ldr	r2, [r4, #8]
   38b70:	ldr	r3, [r5, #8]
   38b74:	cmp	r2, r3
   38b78:	bne	38b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ee8>
   38b7c:	ldr	r3, [r5, #4]
   38b80:	ldr	r2, [r4]
   38b84:	mov	r0, #1
   38b88:	str	r2, [r3]
   38b8c:	ldr	r3, [r5]
   38b90:	str	r3, [r4]
   38b94:	pop	{r4, r5, r6, r7, r8, pc}
   38b98:	add	r1, r4, #24
   38b9c:	mov	r0, r5
   38ba0:	bl	38abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e64>
   38ba4:	cmp	r0, #0
   38ba8:	beq	38b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ee8>
   38bac:	pop	{r4, r5, r6, r7, r8, pc}
   38bb0:	mov	r1, r8
   38bb4:	mov	r0, r7
   38bb8:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   38bbc:	b	38b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ee8>
   38bc0:	andeq	r0, r0, fp, lsl r1
   38bc4:	andeq	r6, fp, r4, lsr #14
   38bc8:	andeq	r8, ip, r4, ror r0
   38bcc:	push	{r4, r5, r6, r7, r8, r9, lr}
   38bd0:	sub	sp, sp, #12
   38bd4:	ldrb	r6, [r2, #36]	; 0x24
   38bd8:	ands	r5, r6, #1
   38bdc:	beq	38cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25058>
   38be0:	mov	r9, r0
   38be4:	ldr	r0, [r1, #4]
   38be8:	ldr	r8, [r2, #8]
   38bec:	mov	r5, r1
   38bf0:	mov	r4, r2
   38bf4:	bl	137d8 <strlen@plt>
   38bf8:	mov	r7, r0
   38bfc:	mov	r0, r8
   38c00:	bl	137d8 <strlen@plt>
   38c04:	tst	r6, #2
   38c08:	add	r7, r7, r0
   38c0c:	bne	38cbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25064>
   38c10:	mov	r0, r9
   38c14:	bl	137d8 <strlen@plt>
   38c18:	add	r6, r7, #8
   38c1c:	add	r0, r0, r6
   38c20:	bl	13574 <xmalloc@plt>
   38c24:	str	r9, [sp]
   38c28:	mov	r3, r8
   38c2c:	ldr	r2, [r5, #4]
   38c30:	ldr	r1, [pc, #216]	; 38d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250b8>
   38c34:	mov	r6, r0
   38c38:	bl	13a00 <sprintf@plt>
   38c3c:	mov	r1, r4
   38c40:	mov	r0, r6
   38c44:	bl	2f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   38c48:	subs	r5, r0, #0
   38c4c:	beq	38cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25094>
   38c50:	str	r6, [r4, #8]
   38c54:	mov	r1, #1
   38c58:	ldr	r0, [r4, #16]
   38c5c:	bl	13ae4 <bfd_check_format@plt>
   38c60:	cmp	r0, #0
   38c64:	beq	38cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25084>
   38c68:	ldr	r3, [r4, #16]
   38c6c:	ldr	r3, [r3, #40]	; 0x28
   38c70:	tst	r3, #2048	; 0x800
   38c74:	beq	38cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25084>
   38c78:	ldrb	r3, [r4, #36]	; 0x24
   38c7c:	and	r2, r3, #5
   38c80:	cmp	r2, #5
   38c84:	beq	38c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25040>
   38c88:	ldr	r1, [pc, #132]	; 38d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250bc>
   38c8c:	ldr	r0, [pc, #132]	; 38d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250c0>
   38c90:	bl	2eaa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae4c>
   38c94:	ldrb	r3, [r4, #36]	; 0x24
   38c98:	tst	r3, #2
   38c9c:	beq	38d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250a8>
   38ca0:	mov	r1, r8
   38ca4:	ldr	r0, [r4, #16]
   38ca8:	bl	13a54 <bfd_elf_set_dt_needed_name@plt>
   38cac:	mov	r5, #1
   38cb0:	mov	r0, r5
   38cb4:	add	sp, sp, #12
   38cb8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   38cbc:	add	r0, r7, #2
   38cc0:	bl	13574 <xmalloc@plt>
   38cc4:	mov	r3, r8
   38cc8:	ldr	r2, [r5, #4]
   38ccc:	ldr	r1, [pc, #72]	; 38d1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250c4>
   38cd0:	mov	r6, r0
   38cd4:	bl	13a00 <sprintf@plt>
   38cd8:	b	38c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fe4>
   38cdc:	mov	r5, #1
   38ce0:	mov	r0, r5
   38ce4:	add	sp, sp, #12
   38ce8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   38cec:	mov	r0, r6
   38cf0:	bl	13364 <free@plt>
   38cf4:	mov	r0, r5
   38cf8:	add	sp, sp, #12
   38cfc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   38d00:	ldr	r0, [r4, #8]
   38d04:	bl	1367c <lbasename@plt>
   38d08:	mov	r8, r0
   38d0c:	b	38ca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25048>
   38d10:	andeq	r4, r8, r4, ror r6
   38d14:	andeq	r0, r0, ip, lsl #18
   38d18:	andeq	r6, fp, r4, lsr #14
   38d1c:	muleq	r8, r8, fp
   38d20:	push	{r4, r5, r6, r7, r8, lr}
   38d24:	ldr	r5, [pc, #384]	; 38eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25254>
   38d28:	ldr	r1, [pc, #384]	; 38eb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25258>
   38d2c:	ldr	r6, [r5, #48]	; 0x30
   38d30:	ldr	r3, [r6, #4]
   38d34:	ldr	r7, [r3]
   38d38:	mov	r0, r7
   38d3c:	bl	131f0 <strstr@plt>
   38d40:	cmp	r0, #0
   38d44:	beq	38e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25220>
   38d48:	ldr	r4, [pc, #356]	; 38eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2525c>
   38d4c:	ldr	r0, [r4, #20]
   38d50:	cmp	r0, #0
   38d54:	beq	38d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25134>
   38d58:	mov	r1, r7
   38d5c:	bl	133dc <bfd_openr@plt>
   38d60:	ldr	r6, [pc, #336]	; 38eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25260>
   38d64:	cmp	r0, #0
   38d68:	mov	r3, r0
   38d6c:	str	r0, [r6, #60]	; 0x3c
   38d70:	beq	38e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25238>
   38d74:	mov	r0, r3
   38d78:	mov	r1, #1
   38d7c:	bl	13ae4 <bfd_check_format@plt>
   38d80:	cmp	r0, #0
   38d84:	beq	38e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25208>
   38d88:	ldr	r6, [r5, #48]	; 0x30
   38d8c:	mov	r0, r6
   38d90:	ldr	r2, [pc, #288]	; 38eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25260>
   38d94:	ldr	r1, [pc, #272]	; 38eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25254>
   38d98:	bl	1370c <bfd_elf32_arm_set_target_params@plt>
   38d9c:	mov	r2, #0
   38da0:	mov	r1, #3
   38da4:	ldr	r0, [pc, #272]	; 38ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25264>
   38da8:	bl	1fef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   38dac:	ldr	r1, [r5, #48]	; 0x30
   38db0:	mov	r6, r0
   38db4:	ldr	r0, [pc, #256]	; 38ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25264>
   38db8:	str	r6, [r4]
   38dbc:	bl	13628 <bfd_create@plt>
   38dc0:	ldr	r3, [r4]
   38dc4:	str	r0, [r6, #16]
   38dc8:	ldr	r6, [r3, #16]
   38dcc:	cmp	r6, #0
   38dd0:	beq	38e08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x251b0>
   38dd4:	ldr	r3, [r6, #4]
   38dd8:	ldr	r0, [r5, #48]	; 0x30
   38ddc:	ldr	r7, [r3, #340]	; 0x154
   38de0:	bl	13814 <bfd_get_arch@plt>
   38de4:	mov	r8, r0
   38de8:	ldr	r0, [r5, #48]	; 0x30
   38dec:	bl	138ec <bfd_get_mach@plt>
   38df0:	mov	r1, r8
   38df4:	mov	r2, r0
   38df8:	mov	r0, r6
   38dfc:	blx	r7
   38e00:	cmp	r0, #0
   38e04:	bne	38e20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x251c8>
   38e08:	mov	r2, #5
   38e0c:	ldr	r1, [pc, #172]	; 38ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25268>
   38e10:	mov	r0, #0
   38e14:	bl	13460 <dcgettext@plt>
   38e18:	pop	{r4, r5, r6, r7, r8, lr}
   38e1c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38e20:	ldr	r3, [r4]
   38e24:	mov	r0, r3
   38e28:	ldr	r2, [r3, #16]
   38e2c:	ldr	r3, [r2, #40]	; 0x28
   38e30:	orr	r3, r3, #131072	; 0x20000
   38e34:	str	r3, [r2, #40]	; 0x28
   38e38:	bl	22fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf394>
   38e3c:	ldr	r3, [r4]
   38e40:	ldr	r1, [pc, #100]	; 38eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25254>
   38e44:	ldr	r0, [r3, #16]
   38e48:	bl	138e0 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>
   38e4c:	ldr	r3, [r4]
   38e50:	ldr	r1, [pc, #84]	; 38eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25254>
   38e54:	pop	{r4, r5, r6, r7, r8, lr}
   38e58:	ldr	r0, [r3, #16]
   38e5c:	b	1364c <bfd_elf32_arm_get_bfd_for_interworking@plt>
   38e60:	mov	r2, #5
   38e64:	ldr	r1, [pc, #88]	; 38ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2526c>
   38e68:	bl	13460 <dcgettext@plt>
   38e6c:	ldr	r1, [r4, #20]
   38e70:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38e74:	b	38d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25130>
   38e78:	ldr	r1, [pc, #72]	; 38ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25270>
   38e7c:	mov	r2, #5
   38e80:	bl	13460 <dcgettext@plt>
   38e84:	ldr	r1, [pc, #64]	; 38ecc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25274>
   38e88:	pop	{r4, r5, r6, r7, r8, lr}
   38e8c:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38e90:	mov	r2, #5
   38e94:	ldr	r1, [pc, #52]	; 38ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25278>
   38e98:	bl	13460 <dcgettext@plt>
   38e9c:	ldr	r1, [r4, #20]
   38ea0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38ea4:	ldr	r3, [r6, #60]	; 0x3c
   38ea8:	b	38d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2511c>
   38eac:	andeq	r8, ip, ip, lsl #1
   38eb0:	andeq	r5, r8, r8, rrx
   38eb4:	andeq	r7, ip, r8, asr #29
   38eb8:	andeq	r7, ip, ip, lsr #11
   38ebc:	andeq	r4, r8, r4, lsl r7
   38ec0:	andeq	r4, r8, r4, lsr #14
   38ec4:	andeq	r4, r8, ip, ror #13
   38ec8:	andeq	r4, r8, r4, lsl #13
   38ecc:	andeq	r4, r8, ip, asr #13
   38ed0:	ldrdeq	r4, [r8], -r0
   38ed4:	ldr	r3, [pc, #464]	; 390ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25454>
   38ed8:	push	{r4, r5, r6, lr}
   38edc:	sub	sp, sp, #8
   38ee0:	ldr	r4, [r3]
   38ee4:	cmp	r4, #0
   38ee8:	beq	38f14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252bc>
   38eec:	ldr	r5, [pc, #444]	; 390b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25458>
   38ef0:	ldr	r0, [r4, #16]
   38ef4:	mov	r1, r5
   38ef8:	bl	135f8 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>
   38efc:	ldr	r0, [r4, #16]
   38f00:	mov	r1, r5
   38f04:	bl	1334c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>
   38f08:	ldr	r4, [r4, #24]
   38f0c:	cmp	r4, #0
   38f10:	bne	38ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25298>
   38f14:	ldr	r4, [pc, #404]	; 390b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25458>
   38f18:	ldrb	r3, [r4]
   38f1c:	and	r3, r3, #3
   38f20:	cmp	r3, #2
   38f24:	beq	38f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252f8>
   38f28:	ldr	r3, [pc, #388]	; 390b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2545c>
   38f2c:	ldr	r3, [r3]
   38f30:	ldr	r3, [r3, #16]
   38f34:	ldr	r3, [r3, #100]	; 0x64
   38f38:	cmp	r3, #0
   38f3c:	beq	38f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252f8>
   38f40:	mov	r0, r4
   38f44:	bl	139f4 <elf32_arm_build_stubs@plt>
   38f48:	cmp	r0, #0
   38f4c:	beq	39078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25420>
   38f50:	ldr	r5, [pc, #352]	; 390b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25460>
   38f54:	bl	2d638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199e0>
   38f58:	ldr	r2, [r5]
   38f5c:	cmp	r2, #0
   38f60:	beq	39034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253dc>
   38f64:	mov	ip, #1
   38f68:	mov	r3, #0
   38f6c:	mov	r1, r2
   38f70:	ldr	r0, [r4, #28]
   38f74:	mov	r2, r3
   38f78:	str	ip, [sp]
   38f7c:	bl	13640 <bfd_link_hash_lookup@plt>
   38f80:	cmp	r0, #0
   38f84:	beq	38f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25340>
   38f88:	ldrb	r3, [r0, #12]
   38f8c:	sub	r3, r3, #3
   38f90:	cmp	r3, #1
   38f94:	bls	38fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25360>
   38f98:	mov	r2, #5
   38f9c:	ldr	r1, [pc, #280]	; 390bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25464>
   38fa0:	mov	r0, #0
   38fa4:	bl	13460 <dcgettext@plt>
   38fa8:	ldr	r1, [r5]
   38fac:	add	sp, sp, #8
   38fb0:	pop	{r4, r5, r6, lr}
   38fb4:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   38fb8:	ldr	r1, [r0, #20]
   38fbc:	ldr	r3, [r1, #60]	; 0x3c
   38fc0:	cmp	r3, #0
   38fc4:	beq	38f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25340>
   38fc8:	ldr	r2, [r0, #24]
   38fcc:	ldr	r0, [r1, #56]	; 0x38
   38fd0:	ldr	r1, [r3, #28]
   38fd4:	ldr	r3, [pc, #216]	; 390b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2545c>
   38fd8:	add	r2, r2, r0
   38fdc:	ldr	ip, [pc, #220]	; 390c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25468>
   38fe0:	add	r2, r2, r1
   38fe4:	add	r0, r3, #26
   38fe8:	strh	ip, [r3, #24]
   38fec:	orr	r2, r2, #1
   38ff0:	ldr	r1, [pc, #204]	; 390c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2546c>
   38ff4:	bl	13a00 <sprintf@plt>
   38ff8:	ldr	r3, [r5]
   38ffc:	ldr	r6, [pc, #196]	; 390c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25470>
   39000:	cmp	r3, #0
   39004:	beq	39024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253cc>
   39008:	ldr	r3, [r6, #4]
   3900c:	cmp	r3, #0
   39010:	beq	39024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253cc>
   39014:	ldr	r3, [pc, #176]	; 390cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25474>
   39018:	ldr	r3, [r3]
   3901c:	cmp	r3, #0
   39020:	bne	3908c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25434>
   39024:	ldr	r3, [pc, #164]	; 390d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25478>
   39028:	str	r3, [r6, #4]
   3902c:	add	sp, sp, #8
   39030:	pop	{r4, r5, r6, pc}
   39034:	ldr	r6, [pc, #140]	; 390c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25470>
   39038:	ldr	r1, [r6, #4]
   3903c:	cmp	r1, #0
   39040:	beq	3902c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253d4>
   39044:	mov	r3, #1
   39048:	ldr	r0, [r4, #28]
   3904c:	str	r3, [sp]
   39050:	mov	r3, r2
   39054:	bl	13640 <bfd_link_hash_lookup@plt>
   39058:	cmp	r0, #0
   3905c:	beq	3902c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253d4>
   39060:	ldrb	r3, [r0, #50]	; 0x32
   39064:	and	r3, r3, #3
   39068:	cmp	r3, #1
   3906c:	beq	38f88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25330>
   39070:	add	sp, sp, #8
   39074:	pop	{r4, r5, r6, pc}
   39078:	mov	r2, #5
   3907c:	ldr	r1, [pc, #80]	; 390d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2547c>
   39080:	bl	13460 <dcgettext@plt>
   39084:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   39088:	b	38f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252f8>
   3908c:	mov	r2, #5
   39090:	ldr	r1, [pc, #64]	; 390d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25480>
   39094:	mov	r0, #0
   39098:	bl	13460 <dcgettext@plt>
   3909c:	ldr	r1, [r5]
   390a0:	ldr	r2, [r6, #4]
   390a4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   390a8:	b	39024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253cc>
   390ac:	andeq	r7, ip, r8, lsl #25
   390b0:	andeq	r8, ip, ip, lsl #1
   390b4:	andeq	r7, ip, r8, asr #29
   390b8:	andeq	r7, ip, ip, lsr #11
   390bc:	muleq	r8, ip, r7
   390c0:	andeq	r7, r0, r0, lsr r8
   390c4:	andeq	pc, r4, r8, lsl #19
   390c8:	andeq	r7, ip, ip, lsr #25
   390cc:	andeq	r8, ip, r4, asr #32
   390d0:	andeq	r7, ip, r0, ror #29
   390d4:	andeq	r4, r8, r4, asr #14
   390d8:	andeq	r4, r8, r4, ror #14
   390dc:	ldr	r3, [pc, #1200]	; 39594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2593c>
   390e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   390e4:	sub	sp, sp, #76	; 0x4c
   390e8:	ldr	r4, [pc, #1192]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   390ec:	mov	r2, #0
   390f0:	ldr	r1, [r3, #4]
   390f4:	mov	r0, r4
   390f8:	str	r2, [sp, #36]	; 0x24
   390fc:	bl	13a9c <bfd_elf32_arm_set_byteswap_code@plt>
   39100:	mov	r1, r4
   39104:	ldr	r0, [r4, #48]	; 0x30
   39108:	bl	13298 <bfd_elf32_arm_set_vfp11_fix@plt>
   3910c:	mov	r1, r4
   39110:	ldr	r0, [r4, #48]	; 0x30
   39114:	bl	136e8 <bfd_elf32_arm_set_stm32l4xx_fix@plt>
   39118:	mov	r1, r4
   3911c:	ldr	r0, [r4, #48]	; 0x30
   39120:	bl	133e8 <bfd_elf32_arm_set_cortex_a8_fix@plt>
   39124:	mov	r0, r4
   39128:	bl	135c8 <bfd_elf32_arm_keep_private_stub_output_sections@plt>
   3912c:	ldr	r3, [r4, #28]
   39130:	ldr	r2, [r3, #60]	; 0x3c
   39134:	cmp	r2, #0
   39138:	beq	39404 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ac>
   3913c:	ldr	r5, [r3, #40]	; 0x28
   39140:	ldr	r2, [pc, #1108]	; 3959c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25944>
   39144:	cmp	r5, #1
   39148:	str	r2, [sp, #28]
   3914c:	movne	r8, #0
   39150:	beq	394b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2585c>
   39154:	ldr	r6, [pc, #1092]	; 395a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25948>
   39158:	ldr	r7, [r6, #68]	; 0x44
   3915c:	cmp	r7, #0
   39160:	beq	39384 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2572c>
   39164:	ldrb	r3, [r7]
   39168:	cmp	r3, #0
   3916c:	beq	39394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2573c>
   39170:	ldr	r5, [r4, #56]	; 0x38
   39174:	cmp	r5, #0
   39178:	beq	39224 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255cc>
   3917c:	ldr	r9, [pc, #1056]	; 395a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2594c>
   39180:	mov	sl, #0
   39184:	str	r7, [sp, #32]
   39188:	b	39198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25540>
   3918c:	ldr	r5, [r5, #156]	; 0x9c
   39190:	cmp	r5, #0
   39194:	beq	39220 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255c8>
   39198:	ldr	r3, [r5, #4]
   3919c:	ldr	r3, [r3, #4]
   391a0:	cmp	r3, #5
   391a4:	bne	3918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25534>
   391a8:	ldr	r3, [r5, #160]	; 0xa0
   391ac:	ldr	r0, [r3, #548]	; 0x224
   391b0:	cmp	r0, #0
   391b4:	beq	3918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25534>
   391b8:	ldrb	r3, [r0]
   391bc:	cmp	r3, #0
   391c0:	beq	3918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25534>
   391c4:	bl	135a4 <xstrdup@plt>
   391c8:	mov	r7, r0
   391cc:	b	391e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25590>
   391d0:	strb	sl, [fp]
   391d4:	ldrb	r3, [r7]
   391d8:	cmp	r3, #0
   391dc:	bne	39584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2592c>
   391e0:	adds	r7, fp, #1
   391e4:	beq	3918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25534>
   391e8:	ldrb	r1, [r9, #72]	; 0x48
   391ec:	mov	r0, r7
   391f0:	bl	137fc <strchr@plt>
   391f4:	subs	fp, r0, #0
   391f8:	bne	391d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25578>
   391fc:	ldrb	r2, [r7]
   39200:	cmp	r2, #0
   39204:	beq	3918c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25534>
   39208:	mov	r1, r7
   3920c:	ldr	r0, [pc, #916]	; 395a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25950>
   39210:	bl	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae8>
   39214:	ldr	r5, [r5, #156]	; 0x9c
   39218:	cmp	r5, #0
   3921c:	bne	39198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25540>
   39220:	ldr	r7, [sp, #32]
   39224:	ldr	r3, [pc, #896]	; 395ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25954>
   39228:	ldr	r1, [r6, #80]	; 0x50
   3922c:	str	r4, [sp, #12]
   39230:	ldr	r0, [r3, #12]
   39234:	ldr	ip, [r3, #16]
   39238:	add	r3, sp, #40	; 0x28
   3923c:	str	r1, [sp, #8]
   39240:	stm	sp, {r0, ip}
   39244:	str	r3, [sp, #16]
   39248:	mov	r2, r7
   3924c:	ldr	r3, [r6, #76]	; 0x4c
   39250:	ldr	r1, [r6, #64]	; 0x40
   39254:	ldr	r0, [r4, #48]	; 0x30
   39258:	bl	1388c <bfd_elf_size_dynamic_sections@plt>
   3925c:	cmp	r0, #0
   39260:	beq	393dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25784>
   39264:	ldr	r0, [r6, #60]	; 0x3c
   39268:	cmp	r0, #0
   3926c:	beq	3928c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25634>
   39270:	ldr	r5, [sp, #40]	; 0x28
   39274:	cmp	r5, #0
   39278:	beq	3928c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25634>
   3927c:	str	r0, [r5, #108]	; 0x6c
   39280:	bl	137d8 <strlen@plt>
   39284:	add	r0, r0, #1
   39288:	str	r0, [r5, #36]	; 0x24
   3928c:	ldr	r3, [sp, #28]
   39290:	ldr	r5, [r3]
   39294:	cmp	r5, #0
   39298:	bne	39314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256bc>
   3929c:	b	3939c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25744>
   392a0:	ldr	r0, [r4, #24]
   392a4:	mov	r1, #0
   392a8:	strb	r1, [r7, r9]
   392ac:	mov	r2, r1
   392b0:	ldr	r3, [r5, #16]
   392b4:	str	r1, [sp, #4]
   392b8:	str	r1, [sp]
   392bc:	mov	r1, r7
   392c0:	ldr	r9, [r0, #20]
   392c4:	ldr	r0, [pc, #716]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   392c8:	blx	r9
   392cc:	mov	r0, r7
   392d0:	bl	13364 <free@plt>
   392d4:	ldr	r2, [r6, #60]	; 0x3c
   392d8:	mov	r0, #0
   392dc:	cmp	r2, r0
   392e0:	beq	392f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256a0>
   392e4:	ldr	r3, [r2, #40]	; 0x28
   392e8:	ldr	r1, [r6, #36]	; 0x24
   392ec:	cmp	r3, r1
   392f0:	sub	r3, r3, r1
   392f4:	strcs	r3, [r2, #40]	; 0x28
   392f8:	ldr	r3, [r6, #20]
   392fc:	str	r0, [r6, #36]	; 0x24
   39300:	orr	r3, r3, #2129920	; 0x208000
   39304:	str	r3, [r6, #20]
   39308:	ldr	r5, [r5, #24]
   3930c:	cmp	r5, #0
   39310:	beq	3939c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25744>
   39314:	ldrb	r3, [r5, #36]	; 0x24
   39318:	ldr	r1, [pc, #656]	; 395b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25958>
   3931c:	tst	r3, #16
   39320:	bne	39308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256b0>
   39324:	ldr	r0, [r5, #16]
   39328:	bl	13604 <bfd_get_section_by_name@plt>
   3932c:	subs	r6, r0, #0
   39330:	beq	39308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256b0>
   39334:	ldr	r9, [r6, #36]	; 0x24
   39338:	mov	sl, #0
   3933c:	add	r0, r9, #1
   39340:	bl	13574 <xmalloc@plt>
   39344:	mov	fp, #0
   39348:	mov	r1, r6
   3934c:	mov	r7, r0
   39350:	mov	r2, r7
   39354:	ldr	r0, [r5, #16]
   39358:	str	r9, [sp, #8]
   3935c:	strd	sl, [sp]
   39360:	bl	13454 <bfd_get_section_contents@plt>
   39364:	cmp	r0, #0
   39368:	bne	392a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25648>
   3936c:	mov	r2, #5
   39370:	ldr	r1, [pc, #572]	; 395b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2595c>
   39374:	bl	13460 <dcgettext@plt>
   39378:	ldr	r1, [r5, #16]
   3937c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   39380:	b	392a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25648>
   39384:	ldr	r0, [pc, #556]	; 395b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25960>
   39388:	bl	136b8 <getenv@plt>
   3938c:	subs	r7, r0, #0
   39390:	bne	39164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2550c>
   39394:	mov	r7, #0
   39398:	b	39170 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25518>
   3939c:	bl	2d61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199c4>
   393a0:	ldr	r0, [r4, #48]	; 0x30
   393a4:	ldr	r1, [pc, #492]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   393a8:	bl	13a3c <bfd_elf_size_dynsym_hash_dynstr@plt>
   393ac:	cmp	r0, #0
   393b0:	beq	393f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25798>
   393b4:	cmp	r8, #0
   393b8:	beq	393d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2577c>
   393bc:	add	r3, sp, #72	; 0x48
   393c0:	ldr	ip, [sp, #36]	; 0x24
   393c4:	ldmdb	r3, {r0, r1, r2}
   393c8:	add	r3, r8, #16
   393cc:	strb	ip, [r8, #12]
   393d0:	stm	r3, {r0, r1, r2}
   393d4:	add	sp, sp, #76	; 0x4c
   393d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   393dc:	mov	r2, #5
   393e0:	ldr	r1, [pc, #468]	; 395bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25964>
   393e4:	bl	13460 <dcgettext@plt>
   393e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   393ec:	b	39264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2560c>
   393f0:	mov	r2, #5
   393f4:	ldr	r1, [pc, #448]	; 395bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25964>
   393f8:	bl	13460 <dcgettext@plt>
   393fc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   39400:	b	393b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2575c>
   39404:	ldr	r3, [pc, #400]	; 3959c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25944>
   39408:	str	r3, [sp, #28]
   3940c:	ldr	r5, [r3]
   39410:	cmp	r5, #0
   39414:	beq	39498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25840>
   39418:	mov	r6, r4
   3941c:	ldr	r7, [pc, #412]	; 395c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25968>
   39420:	b	39448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257f0>
   39424:	mov	r2, #5
   39428:	mov	r1, r7
   3942c:	mov	r0, #0
   39430:	bl	13460 <dcgettext@plt>
   39434:	ldr	r1, [r5, #8]
   39438:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3943c:	ldr	r5, [r5, #24]
   39440:	cmp	r5, #0
   39444:	beq	39498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25840>
   39448:	ldr	r0, [r5, #16]
   3944c:	bl	13850 <bfd_elf32_arm_init_maps@plt>
   39450:	mov	r1, r6
   39454:	ldr	r0, [r5, #16]
   39458:	bl	1373c <bfd_elf32_arm_process_before_allocation@plt>
   3945c:	mov	r1, r6
   39460:	cmp	r0, #0
   39464:	beq	39424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257cc>
   39468:	ldr	r0, [r5, #16]
   3946c:	bl	13730 <bfd_elf32_arm_vfp11_erratum_scan@plt>
   39470:	cmp	r0, #0
   39474:	beq	39424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257cc>
   39478:	mov	r1, r6
   3947c:	ldr	r0, [r5, #16]
   39480:	bl	13c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>
   39484:	cmp	r0, #0
   39488:	beq	39424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257cc>
   3948c:	ldr	r5, [r5, #24]
   39490:	cmp	r5, #0
   39494:	bne	39448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257f0>
   39498:	ldr	r0, [pc, #248]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   3949c:	bl	1340c <bfd_elf32_arm_allocate_interworking_sections@plt>
   394a0:	ldr	r3, [r4, #28]
   394a4:	ldr	r5, [r3, #40]	; 0x28
   394a8:	cmp	r5, #1
   394ac:	movne	r8, #0
   394b0:	bne	39154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254fc>
   394b4:	ldr	r1, [pc, #220]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   394b8:	ldr	r0, [r4, #48]	; 0x30
   394bc:	bl	133d0 <_bfd_elf_tls_setup@plt>
   394c0:	ldrb	r3, [r4]
   394c4:	and	r3, r3, #3
   394c8:	cmp	r3, #2
   394cc:	bne	394e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25888>
   394d0:	mov	r8, #0
   394d4:	ldr	r0, [pc, #232]	; 395c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2596c>
   394d8:	bl	1fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc210>
   394dc:	b	39154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254fc>
   394e0:	mov	r3, #0
   394e4:	str	r5, [sp]
   394e8:	mov	r2, r3
   394ec:	ldr	r1, [pc, #212]	; 395c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25970>
   394f0:	ldr	r0, [r4, #28]
   394f4:	bl	13640 <bfd_link_hash_lookup@plt>
   394f8:	subs	r8, r0, #0
   394fc:	beq	394d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25878>
   39500:	ldrb	r3, [r8, #12]
   39504:	cmp	r3, #5
   39508:	cmpne	r3, #2
   3950c:	bhi	394d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25878>
   39510:	ldr	r3, [r4, #48]	; 0x30
   39514:	mov	r2, r5
   39518:	mov	r1, r8
   3951c:	ldr	r3, [r3, #4]
   39520:	ldr	r0, [pc, #112]	; 39598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25940>
   39524:	ldr	r6, [pc, #160]	; 395cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25974>
   39528:	ldr	r3, [r3, #448]	; 0x1c0
   3952c:	mov	r5, #3
   39530:	ldr	r3, [r3, #228]	; 0xe4
   39534:	blx	r3
   39538:	ldrb	r3, [r8, #49]	; 0x31
   3953c:	mov	lr, r8
   39540:	add	ip, sp, #44	; 0x2c
   39544:	and	r2, r3, #3
   39548:	cmp	r2, #1
   3954c:	bicne	r3, r3, #3
   39550:	orrne	r3, r3, #2
   39554:	strbne	r3, [r8, #49]	; 0x31
   39558:	ldm	lr!, {r0, r1, r2, r3}
   3955c:	stmia	ip!, {r0, r1, r2, r3}
   39560:	mov	r3, #0
   39564:	ldm	lr, {r0, r1, r2}
   39568:	str	r3, [r8, #24]
   3956c:	ldrb	r3, [r8, #12]
   39570:	str	r6, [r8, #20]
   39574:	stm	ip, {r0, r1, r2}
   39578:	str	r3, [sp, #36]	; 0x24
   3957c:	strb	r5, [r8, #12]
   39580:	b	394d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2587c>
   39584:	mov	r1, r7
   39588:	ldr	r0, [pc, #24]	; 395a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25950>
   3958c:	bl	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ae8>
   39590:	b	391e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25588>
   39594:	andeq	r7, ip, ip, lsr #11
   39598:	andeq	r8, ip, ip, lsl #1
   3959c:	andeq	r7, ip, r8, lsl #25
   395a0:	andeq	r8, ip, r8, lsl r1
   395a4:	andeq	r8, ip, r4, ror r1
   395a8:	ldrdeq	r7, [ip], -r8
   395ac:	andeq	r7, ip, r8, asr #29
   395b0:	andeq	r4, r8, r4, asr #16
   395b4:	andeq	r4, r8, r4, asr r8
   395b8:	andeq	r4, r8, r8, lsl #16
   395bc:	andeq	r4, r8, r4, lsl r8
   395c0:	andeq	r4, r8, ip, asr #15
   395c4:			; <UNDEFINED> instruction: 0x000396bc
   395c8:	strdeq	r4, [r8], -r8
   395cc:	andeq	r7, ip, r8, lsr #17
   395d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   395d4:	mov	r4, r0
   395d8:	ldr	r6, [pc, #208]	; 396b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a58>
   395dc:	ldr	r8, [pc, #208]	; 396b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a5c>
   395e0:	ldr	r9, [pc, #208]	; 396b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a60>
   395e4:	sub	sp, sp, #12
   395e8:	ldr	r3, [r4, #12]
   395ec:	cmp	r3, #6
   395f0:	ldrls	pc, [pc, r3, lsl #2]
   395f4:	b	3966c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a14>
   395f8:	andeq	r9, r3, r8, asr r6
   395fc:	andeq	r9, r3, r0, asr #12
   39600:	andeq	r9, r3, r8, lsr r6
   39604:	andeq	r9, r3, ip, ror #12
   39608:	andeq	r9, r3, r4, lsl r6
   3960c:	andeq	r9, r3, r4, ror #12
   39610:	andeq	r9, r3, r4, ror #12
   39614:	mov	r7, #0
   39618:	ldr	r5, [r4, #16]
   3961c:	mov	r1, r6
   39620:	mov	r0, r5
   39624:	bl	13268 <strcmp@plt>
   39628:	cmp	r0, #0
   3962c:	bne	39674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a1c>
   39630:	ldr	r4, [r4, #20]
   39634:	b	395e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25990>
   39638:	ldr	r4, [r4, #16]
   3963c:	b	395e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25990>
   39640:	ldr	r0, [r4, #16]
   39644:	bl	395d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25978>
   39648:	ldr	r0, [r4, #20]
   3964c:	bl	395d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25978>
   39650:	ldr	r4, [r4, #24]
   39654:	b	395e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25990>
   39658:	ldr	r0, [r4, #16]
   3965c:	bl	395d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25978>
   39660:	b	39630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259d8>
   39664:	mov	r7, #1
   39668:	b	39618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259c0>
   3966c:	add	sp, sp, #12
   39670:	pop	{r4, r5, r6, r7, r8, r9, pc}
   39674:	ldr	r1, [r4, #24]
   39678:	mov	r3, r7
   3967c:	str	r1, [sp]
   39680:	mov	r2, r5
   39684:	ldr	r1, [pc, #40]	; 396b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a5c>
   39688:	ldr	r0, [r8, #48]	; 0x30
   3968c:	bl	132b0 <bfd_elf_record_link_assignment@plt>
   39690:	cmp	r0, #0
   39694:	bne	39630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259d8>
   39698:	mov	r1, r9
   3969c:	mov	r2, #5
   396a0:	bl	13460 <dcgettext@plt>
   396a4:	ldr	r1, [r4, #16]
   396a8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   396ac:	b	39630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259d8>
   396b0:	andeq	r4, r8, r0, lsl #22
   396b4:	andeq	r8, ip, ip, lsl #1
   396b8:	muleq	r8, r0, r8
   396bc:	ldr	r3, [r0, #4]
   396c0:	cmp	r3, #1
   396c4:	bxne	lr
   396c8:	ldr	r0, [r0, #8]
   396cc:	b	395d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25978>
   396d0:	ldr	ip, [pc, #236]	; 397c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b6c>
   396d4:	push	{r4, r5, r6, r7, lr}
   396d8:	mov	r6, r1
   396dc:	ldr	ip, [ip]
   396e0:	mov	r1, r0
   396e4:	sub	sp, sp, #20
   396e8:	mov	r5, r2
   396ec:	ldr	r0, [ip, #16]
   396f0:	ldr	r2, [pc, #208]	; 397c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b70>
   396f4:	mov	r7, r3
   396f8:	bl	1337c <bfd_make_section_anyway_with_flags@plt>
   396fc:	subs	r4, r0, #0
   39700:	beq	39768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b10>
   39704:	mov	r0, r6
   39708:	str	r7, [r4, #64]	; 0x40
   3970c:	bl	210cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd474>
   39710:	str	r5, [sp, #12]
   39714:	mov	r6, r0
   39718:	add	r0, sp, #4
   3971c:	bl	1fe78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc220>
   39720:	mov	r1, r4
   39724:	mov	r3, r6
   39728:	add	r0, sp, #4
   3972c:	mov	r2, #0
   39730:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   39734:	ldr	r1, [sp, #4]
   39738:	cmp	r1, #0
   3973c:	beq	39768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b10>
   39740:	cmp	r5, #0
   39744:	beq	3978c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b34>
   39748:	add	r1, r6, #8
   3974c:	add	r0, sp, #4
   39750:	bl	38abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e64>
   39754:	cmp	r0, #0
   39758:	beq	39768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b10>
   3975c:	mov	r0, r4
   39760:	add	sp, sp, #20
   39764:	pop	{r4, r5, r6, r7, pc}
   39768:	mov	r2, #5
   3976c:	ldr	r1, [pc, #88]	; 397cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b74>
   39770:	mov	r0, #0
   39774:	bl	13460 <dcgettext@plt>
   39778:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3977c:	mov	r4, #0
   39780:	mov	r0, r4
   39784:	add	sp, sp, #20
   39788:	pop	{r4, r5, r6, r7, pc}
   3978c:	ldr	r2, [r6, #8]
   39790:	cmp	r2, #0
   39794:	bne	397a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b48>
   39798:	b	397bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b64>
   3979c:	mov	r2, r3
   397a0:	ldr	r3, [r2]
   397a4:	cmp	r3, #0
   397a8:	bne	3979c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b44>
   397ac:	mov	r0, r4
   397b0:	str	r1, [r2]
   397b4:	add	sp, sp, #20
   397b8:	pop	{r4, r5, r6, r7, pc}
   397bc:	str	r1, [r6, #8]
   397c0:	b	3975c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b04>
   397c4:	andeq	r7, ip, r8, asr #29
   397c8:	eoreq	r4, r0, pc, lsl r1
   397cc:	andeq	r4, r8, r0, asr #17
   397d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   397d4:	mov	r4, #10
   397d8:	ldr	r5, [pc, #208]	; 398b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c58>
   397dc:	ldr	r7, [pc, #208]	; 398b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c5c>
   397e0:	ldr	r8, [pc, #208]	; 398b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c60>
   397e4:	mov	r6, r5
   397e8:	b	39828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25bd0>
   397ec:	ldr	r3, [r5, #48]	; 0x30
   397f0:	mov	r0, #1
   397f4:	ldr	r3, [r3, #160]	; 0xa0
   397f8:	ldr	r2, [r3, #2352]	; 0x930
   397fc:	ldr	r3, [r2, #28]
   39800:	cmp	r3, r9
   39804:	movhi	r3, r0
   39808:	movls	r3, #0
   3980c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   39810:	cmp	r4, #6
   39814:	orrgt	r3, r3, #1
   39818:	cmp	r3, #0
   3981c:	beq	398a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c50>
   39820:	subs	r4, r4, #1
   39824:	beq	39890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c38>
   39828:	bl	24550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108f8>
   3982c:	ldr	r3, [r5, #48]	; 0x30
   39830:	mov	r1, r6
   39834:	mov	r0, r3
   39838:	ldr	r2, [r3, #4]
   3983c:	ldr	r2, [r2, #4]
   39840:	cmp	r2, #5
   39844:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   39848:	ldrb	r2, [r5]
   3984c:	and	r2, r2, #3
   39850:	cmp	r2, #2
   39854:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   39858:	ldr	r3, [r3, #160]	; 0xa0
   3985c:	ldr	r2, [r7]
   39860:	ldr	r3, [r3, #2352]	; 0x930
   39864:	cmp	r2, #0
   39868:	streq	r2, [r3]
   3986c:	ldr	r9, [r3, #28]
   39870:	bl	13484 <_bfd_elf_map_sections_to_segments@plt>
   39874:	cmp	r0, #0
   39878:	bne	397ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b94>
   3987c:	mov	r2, #5
   39880:	mov	r1, r8
   39884:	bl	13460 <dcgettext@plt>
   39888:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3988c:	b	397ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b94>
   39890:	mov	r0, r4
   39894:	mov	r2, #5
   39898:	ldr	r1, [pc, #28]	; 398bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c64>
   3989c:	bl	13460 <dcgettext@plt>
   398a0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   398a4:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   398a8:	str	r9, [r2, #28]
   398ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   398b0:	andeq	r8, ip, ip, lsl #1
   398b4:	andeq	r8, ip, r0, rrx
   398b8:	andeq	r4, r8, r8, ror #17
   398bc:	andeq	r4, r8, r4, lsl r9
   398c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   398c4:	mov	r0, #40	; 0x28
   398c8:	sub	sp, sp, #12
   398cc:	bl	13574 <xmalloc@plt>
   398d0:	ldr	r3, [pc, #548]	; 39afc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ea4>
   398d4:	ldr	r5, [r3]
   398d8:	cmp	r5, #0
   398dc:	mov	r7, r0
   398e0:	beq	39994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d3c>
   398e4:	ldr	r8, [pc, #532]	; 39b00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ea8>
   398e8:	mov	r6, #0
   398ec:	mov	r1, #10
   398f0:	b	39900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ca8>
   398f4:	ldr	r5, [r5, #24]
   398f8:	cmp	r5, #0
   398fc:	beq	39998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d40>
   39900:	ldr	r2, [r5, #16]
   39904:	ldr	r3, [r2, #40]	; 0x28
   39908:	lsr	r3, r3, #5
   3990c:	tst	r3, #66	; 0x42
   39910:	bne	398f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c9c>
   39914:	ldr	r4, [r2, #100]	; 0x64
   39918:	cmp	r4, #0
   3991c:	bne	39930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cd8>
   39920:	b	398f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c9c>
   39924:	ldr	r4, [r4, #12]
   39928:	cmp	r4, #0
   3992c:	beq	398f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c9c>
   39930:	ldr	r2, [r4, #60]	; 0x3c
   39934:	cmp	r2, #0
   39938:	beq	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   3993c:	ldr	r3, [r4, #140]	; 0x8c
   39940:	cmp	r3, #0
   39944:	beq	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39948:	ldr	r0, [r3, #4]
   3994c:	cmp	r0, #1
   39950:	bne	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39954:	ldr	r3, [r3, #8]
   39958:	tst	r3, #4
   3995c:	beq	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39960:	ldr	r3, [r4, #20]
   39964:	tst	r3, #32768	; 0x8000
   39968:	bne	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   3996c:	ldrh	r3, [r4, #24]
   39970:	and	r3, r3, #896	; 0x380
   39974:	cmp	r3, #512	; 0x200
   39978:	cmpne	r2, r8
   3997c:	beq	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39980:	cmp	r1, r6
   39984:	beq	39aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e4c>
   39988:	str	r4, [r7, r6, lsl #2]
   3998c:	add	r6, r6, #1
   39990:	b	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39994:	mov	r6, r5
   39998:	ldr	r8, [pc, #356]	; 39b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eac>
   3999c:	ldr	r3, [pc, #356]	; 39b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb0>
   399a0:	mov	r2, #4
   399a4:	mov	r1, r6
   399a8:	mov	r0, r7
   399ac:	bl	13a78 <qsort@plt>
   399b0:	ldr	r3, [r8, #52]	; 0x34
   399b4:	ldr	r2, [pc, #336]	; 39b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb4>
   399b8:	mov	r1, r6
   399bc:	mov	r0, r7
   399c0:	bl	13220 <elf32_arm_fix_exidx_coverage@plt>
   399c4:	ldr	r4, [pc, #320]	; 39b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb4>
   399c8:	cmp	r0, #0
   399cc:	movne	r2, #1
   399d0:	ldrne	r3, [pc, #312]	; 39b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb8>
   399d4:	mov	r0, r7
   399d8:	strne	r2, [r3, #56]	; 0x38
   399dc:	bl	13364 <free@plt>
   399e0:	mov	r1, r4
   399e4:	ldr	r0, [r4, #48]	; 0x30
   399e8:	bl	1361c <bfd_elf_discard_info@plt>
   399ec:	cmp	r0, #0
   399f0:	blt	39ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e70>
   399f4:	ldr	r5, [pc, #276]	; 39b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb8>
   399f8:	ldr	r3, [r5]
   399fc:	beq	39a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25dd4>
   39a00:	mov	r0, #1
   39a04:	cmp	r3, #0
   39a08:	str	r0, [r5, #56]	; 0x38
   39a0c:	beq	39a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25dc8>
   39a10:	ldrb	r3, [r4]
   39a14:	and	r3, r3, #3
   39a18:	cmp	r3, #2
   39a1c:	bne	39a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25dec>
   39a20:	add	sp, sp, #12
   39a24:	pop	{r4, r5, r6, r7, r8, r9, lr}
   39a28:	b	397d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b78>
   39a2c:	cmp	r3, #0
   39a30:	beq	39a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e38>
   39a34:	ldrb	r3, [r4]
   39a38:	and	r3, r3, #3
   39a3c:	cmp	r3, #2
   39a40:	beq	39a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e38>
   39a44:	ldr	r1, [pc, #192]	; 39b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb4>
   39a48:	ldr	r0, [r4, #48]	; 0x30
   39a4c:	bl	13280 <elf32_arm_setup_section_lists@plt>
   39a50:	cmp	r0, #0
   39a54:	beq	39a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e38>
   39a58:	blt	39af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e98>
   39a5c:	ldr	r0, [pc, #176]	; 39b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ebc>
   39a60:	bl	1fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc210>
   39a64:	ldr	r3, [r5]
   39a68:	ldr	ip, [pc, #168]	; 39b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ec0>
   39a6c:	ldr	r2, [pc, #168]	; 39b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ec4>
   39a70:	ldr	r1, [r3, #16]
   39a74:	ldr	r0, [r4, #48]	; 0x30
   39a78:	ldr	r3, [r8, #64]	; 0x40
   39a7c:	stm	sp, {r2, ip}
   39a80:	ldr	r2, [pc, #132]	; 39b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25eb4>
   39a84:	bl	13b74 <elf32_arm_size_stubs@plt>
   39a88:	cmp	r0, #0
   39a8c:	beq	39ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e8c>
   39a90:	ldr	r0, [r5, #56]	; 0x38
   39a94:	cmn	r0, #1
   39a98:	bne	39a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25dc8>
   39a9c:	add	sp, sp, #12
   39aa0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   39aa4:	mov	r0, r7
   39aa8:	lsl	r9, r1, #1
   39aac:	lsl	r1, r1, #3
   39ab0:	bl	134fc <xrealloc@plt>
   39ab4:	mov	r1, r9
   39ab8:	mov	r7, r0
   39abc:	str	r4, [r7, r6, lsl #2]
   39ac0:	add	r6, r6, #1
   39ac4:	b	39924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ccc>
   39ac8:	ldr	r1, [pc, #80]	; 39b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ec8>
   39acc:	mov	r2, #5
   39ad0:	mov	r0, #0
   39ad4:	bl	13460 <dcgettext@plt>
   39ad8:	add	sp, sp, #12
   39adc:	pop	{r4, r5, r6, r7, r8, r9, lr}
   39ae0:	b	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   39ae4:	mov	r2, #5
   39ae8:	ldr	r1, [pc, #52]	; 39b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ecc>
   39aec:	b	39ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e7c>
   39af0:	mov	r2, #5
   39af4:	ldr	r1, [pc, #44]	; 39b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ed0>
   39af8:	b	39ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e78>
   39afc:	andeq	r7, ip, r8, lsl #25
   39b00:	andeq	r7, ip, r8, lsr #17
   39b04:	andeq	r7, ip, ip, lsr #11
   39b08:	strdeq	r7, [r3], -ip
   39b0c:	andeq	r8, ip, ip, lsl #1
   39b10:	andeq	r7, ip, r8, asr #29
   39b14:	muleq	r3, r8, ip
   39b18:	andeq	r9, r3, ip, lsr #22
   39b1c:	ldrdeq	r9, [r3], -r0
   39b20:	andeq	r4, r8, r4, lsr r9
   39b24:	muleq	r8, r4, r9
   39b28:	andeq	r4, r8, r4, asr r9
   39b2c:	push	{r4, lr}
   39b30:	mov	r0, #1
   39b34:	bl	397d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b78>
   39b38:	ldr	r3, [pc, #8]	; 39b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ef0>
   39b3c:	mvn	r2, #0
   39b40:	str	r2, [r3, #56]	; 0x38
   39b44:	pop	{r4, pc}
   39b48:	andeq	r7, ip, r8, asr #29
   39b4c:	ldr	r3, [r0, #160]	; 0xa0
   39b50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   39b54:	sub	sp, sp, #8
   39b58:	ldr	r3, [r3, #2352]	; 0x930
   39b5c:	ldr	r1, [pc, #316]	; 39ca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26048>
   39b60:	ldr	r2, [r0, #4]
   39b64:	ldr	r7, [r3, #24]
   39b68:	ldr	sl, [r3, #20]
   39b6c:	ldr	r8, [r2, #448]	; 0x1c0
   39b70:	ldr	r3, [r7, #60]	; 0x3c
   39b74:	cmp	r3, r1
   39b78:	beq	39c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2602c>
   39b7c:	ldr	r9, [r3, #140]	; 0x8c
   39b80:	mov	r6, r0
   39b84:	ldr	r5, [r7, #36]	; 0x24
   39b88:	ldr	r4, [r9, #48]	; 0x30
   39b8c:	cmp	r4, #0
   39b90:	beq	39c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26004>
   39b94:	ldr	r3, [r7, #56]	; 0x38
   39b98:	add	r4, r4, r3
   39b9c:	ldr	r3, [r2, #84]	; 0x54
   39ba0:	mov	r1, r4
   39ba4:	mov	r0, #4
   39ba8:	blx	r3
   39bac:	ldr	r3, [r6, #4]
   39bb0:	sub	r5, r5, #16
   39bb4:	mov	r0, r5
   39bb8:	add	r1, r4, #4
   39bbc:	ldr	r3, [r3, #84]	; 0x54
   39bc0:	blx	r3
   39bc4:	ldr	r3, [r6, #4]
   39bc8:	add	r1, r4, #8
   39bcc:	mov	r0, #3
   39bd0:	ldr	r3, [r3, #84]	; 0x54
   39bd4:	blx	r3
   39bd8:	ldr	r2, [pc, #196]	; 39ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2604c>
   39bdc:	mov	r1, sl
   39be0:	add	r3, r4, #16
   39be4:	ldr	r0, [r2]
   39be8:	mov	sl, #0
   39bec:	str	r0, [r4, #12]
   39bf0:	ldr	r2, [r8, #396]	; 0x18c
   39bf4:	mov	r0, r6
   39bf8:	ldr	r2, [r2, #24]
   39bfc:	str	r5, [sp]
   39c00:	bl	321e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e588>
   39c04:	ldrd	r8, [r9, #16]
   39c08:	ldr	r1, [r7, #56]	; 0x38
   39c0c:	ldr	r5, [r7, #36]	; 0x24
   39c10:	adds	r2, r8, r1
   39c14:	adc	r3, r9, #0
   39c18:	str	sl, [sp]
   39c1c:	mov	r0, r6
   39c20:	bl	13c4c <bfd_seek@plt>
   39c24:	cmp	r0, sl
   39c28:	movne	r0, sl
   39c2c:	beq	39c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fe0>
   39c30:	add	sp, sp, #8
   39c34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39c38:	mov	r2, r6
   39c3c:	mov	r0, r4
   39c40:	mov	r1, r5
   39c44:	bl	13784 <bfd_bwrite@plt>
   39c48:	sub	r0, r0, r5
   39c4c:	clz	r0, r0
   39c50:	lsr	r0, r0, #5
   39c54:	add	sp, sp, #8
   39c58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39c5c:	ldr	r4, [r7, #108]	; 0x6c
   39c60:	cmp	r4, #0
   39c64:	bne	39b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f44>
   39c68:	mov	r0, r5
   39c6c:	bl	13574 <xmalloc@plt>
   39c70:	ldr	r5, [r7, #36]	; 0x24
   39c74:	ldr	r2, [r6, #4]
   39c78:	mov	r4, r0
   39c7c:	str	r0, [r7, #108]	; 0x6c
   39c80:	b	39b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f44>
   39c84:	mov	r2, #5
   39c88:	ldr	r1, [pc, #24]	; 39ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26050>
   39c8c:	mov	r0, #0
   39c90:	bl	13460 <dcgettext@plt>
   39c94:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   39c98:	mov	r0, #1
   39c9c:	b	39c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fd8>
   39ca0:	andeq	r7, ip, r8, lsr #17
   39ca4:	andeq	r4, r8, r4, lsl #20
   39ca8:			; <UNDEFINED> instruction: 0x000849bc
   39cac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   39cb0:	mov	r5, r0
   39cb4:	ldr	r9, [pc, #196]	; 39d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26128>
   39cb8:	ldr	r6, [pc, #196]	; 39d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2612c>
   39cbc:	mov	r4, #0
   39cc0:	ldr	r0, [r9]
   39cc4:	bl	137d8 <strlen@plt>
   39cc8:	ldrb	r7, [r6, #72]	; 0x48
   39ccc:	mov	r3, r5
   39cd0:	mov	r8, r0
   39cd4:	b	39cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26084>
   39cd8:	add	r3, r0, #1
   39cdc:	mov	r0, r3
   39ce0:	ldrb	r3, [r3]
   39ce4:	mov	r1, r7
   39ce8:	cmp	r3, #47	; 0x2f
   39cec:	addeq	r4, r4, r8
   39cf0:	bl	137fc <strchr@plt>
   39cf4:	cmp	r0, #0
   39cf8:	bne	39cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26080>
   39cfc:	mov	r0, r5
   39d00:	bl	137d8 <strlen@plt>
   39d04:	add	r0, r0, r4
   39d08:	add	r0, r0, #1
   39d0c:	bl	13574 <xmalloc@plt>
   39d10:	ldrb	r7, [r6, #72]	; 0x48
   39d14:	mov	sl, r0
   39d18:	mov	r6, r0
   39d1c:	b	39d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x260fc>
   39d20:	mov	r1, r7
   39d24:	mov	r0, r5
   39d28:	bl	137fc <strchr@plt>
   39d2c:	mov	r1, r5
   39d30:	subs	r4, r0, #0
   39d34:	sub	r4, r4, r5
   39d38:	add	r4, r4, #1
   39d3c:	mov	r0, r6
   39d40:	mov	r2, r4
   39d44:	beq	39d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2611c>
   39d48:	bl	138bc <strncpy@plt>
   39d4c:	add	r6, r6, r4
   39d50:	add	r5, r5, r4
   39d54:	ldrb	r3, [r5]
   39d58:	cmp	r3, #47	; 0x2f
   39d5c:	bne	39d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x260c8>
   39d60:	mov	r0, r6
   39d64:	ldr	r1, [r9]
   39d68:	bl	135d4 <strcpy@plt>
   39d6c:	add	r6, r6, r8
   39d70:	b	39d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x260c8>
   39d74:	bl	135d4 <strcpy@plt>
   39d78:	mov	r0, sl
   39d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   39d80:	andeq	r8, ip, r4, lsl r1
   39d84:	andeq	r8, ip, r4, ror r1
   39d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39d8c:	sub	sp, sp, #60	; 0x3c
   39d90:	mov	r3, r1
   39d94:	str	r1, [sp, #4]
   39d98:	mov	fp, r0
   39d9c:	ldr	r1, [pc, #1180]	; 3a240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265e8>
   39da0:	mov	r0, r3
   39da4:	bl	13a60 <fopen64@plt>
   39da8:	subs	r9, r0, #0
   39dac:	moveq	r0, r9
   39db0:	beq	39f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26324>
   39db4:	mov	r0, #256	; 0x100
   39db8:	bl	13574 <xmalloc@plt>
   39dbc:	mov	r6, #256	; 0x100
   39dc0:	mov	r8, r0
   39dc4:	mov	r7, r8
   39dc8:	b	39e08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x261b0>
   39dcc:	bl	137d8 <strlen@plt>
   39dd0:	sub	r4, r4, #1
   39dd4:	add	r3, r8, r6
   39dd8:	mov	r1, r5
   39ddc:	cmp	r0, r4
   39de0:	mov	r0, r8
   39de4:	bne	39e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x261dc>
   39de8:	ldrb	r3, [r3, #-2]
   39dec:	cmp	r3, #10
   39df0:	beq	39e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x261dc>
   39df4:	bl	134fc <xrealloc@plt>
   39df8:	sub	r6, r6, #1
   39dfc:	add	r7, r0, r6
   39e00:	mov	r8, r0
   39e04:	mov	r6, r5
   39e08:	sub	r4, r7, r8
   39e0c:	sub	r4, r6, r4
   39e10:	mov	r1, r4
   39e14:	mov	r2, r9
   39e18:	mov	r0, r7
   39e1c:	bl	13370 <fgets@plt>
   39e20:	lsl	r5, r6, #1
   39e24:	cmp	r0, #0
   39e28:	bne	39dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26174>
   39e2c:	cmp	r8, r7
   39e30:	beq	39f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26310>
   39e34:	mov	r1, #10
   39e38:	mov	r0, r8
   39e3c:	bl	137fc <strchr@plt>
   39e40:	mov	r1, #35	; 0x23
   39e44:	mov	r5, r8
   39e48:	cmp	r0, #0
   39e4c:	movne	r3, #0
   39e50:	strbne	r3, [r0]
   39e54:	mov	r0, r8
   39e58:	bl	137fc <strchr@plt>
   39e5c:	cmp	r0, #0
   39e60:	movne	r3, #0
   39e64:	strbne	r3, [r0]
   39e68:	ldrb	r3, [r8]
   39e6c:	cmp	r3, #32
   39e70:	cmpne	r3, #9
   39e74:	moveq	r2, #1
   39e78:	movne	r2, #0
   39e7c:	sub	r1, r3, #11
   39e80:	cmp	r1, #2
   39e84:	orrls	r2, r2, #1
   39e88:	cmp	r2, #0
   39e8c:	beq	39eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26260>
   39e90:	ldrb	r3, [r5, #1]!
   39e94:	cmp	r3, #9
   39e98:	cmpne	r3, #32
   39e9c:	moveq	r2, #1
   39ea0:	movne	r2, #0
   39ea4:	sub	r1, r3, #11
   39ea8:	cmp	r1, #2
   39eac:	orrls	r2, r2, #1
   39eb0:	cmp	r2, #0
   39eb4:	bne	39e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26238>
   39eb8:	cmp	r3, #0
   39ebc:	beq	39f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26300>
   39ec0:	mov	r2, #7
   39ec4:	ldr	r1, [pc, #888]	; 3a244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265ec>
   39ec8:	mov	r0, r5
   39ecc:	bl	13bb0 <strncmp@plt>
   39ed0:	cmp	r0, #0
   39ed4:	bne	3a07c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26424>
   39ed8:	ldrb	r3, [r5, #7]
   39edc:	cmp	r3, #9
   39ee0:	cmpne	r3, #32
   39ee4:	bne	3a07c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26424>
   39ee8:	add	r5, r5, #8
   39eec:	mov	r3, r5
   39ef0:	ldrb	r2, [r3]
   39ef4:	cmp	r2, #9
   39ef8:	cmpne	r2, #32
   39efc:	beq	39f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2632c>
   39f00:	cmp	r2, #0
   39f04:	beq	39f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26300>
   39f08:	mov	r7, r3
   39f0c:	b	39f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262c4>
   39f10:	cmp	r4, #0
   39f14:	beq	39f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26334>
   39f18:	mov	r7, r2
   39f1c:	ldrb	r4, [r7, #1]
   39f20:	add	r2, r7, #1
   39f24:	cmp	r4, #32
   39f28:	cmpne	r4, #9
   39f2c:	movne	r1, #1
   39f30:	moveq	r1, #0
   39f34:	bne	39f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262b8>
   39f38:	strb	r1, [r2]
   39f3c:	ldrb	r2, [r3]
   39f40:	add	r7, r7, #2
   39f44:	cmp	r2, #0
   39f48:	bne	39fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26348>
   39f4c:	cmp	r4, #0
   39f50:	mov	r3, r7
   39f54:	bne	39ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26298>
   39f58:	mov	r0, r9
   39f5c:	bl	1379c <feof@plt>
   39f60:	cmp	r0, #0
   39f64:	beq	39dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2616c>
   39f68:	mov	r0, r8
   39f6c:	bl	13364 <free@plt>
   39f70:	mov	r0, r9
   39f74:	bl	13928 <fclose@plt>
   39f78:	mov	r0, #1
   39f7c:	add	sp, sp, #60	; 0x3c
   39f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39f84:	add	r3, r3, #1
   39f88:	b	39ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26298>
   39f8c:	strb	r4, [r2]
   39f90:	ldrb	r2, [r3]
   39f94:	add	r7, r7, #2
   39f98:	cmp	r2, #0
   39f9c:	beq	39f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26300>
   39fa0:	cmp	r2, #47	; 0x2f
   39fa4:	beq	3a1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26548>
   39fa8:	ldr	r5, [sp, #4]
   39fac:	mov	r1, #47	; 0x2f
   39fb0:	mov	r0, r5
   39fb4:	str	r3, [sp, #8]
   39fb8:	bl	139ac <strrchr@plt>
   39fbc:	ldr	r3, [sp, #8]
   39fc0:	str	r3, [sp, #12]
   39fc4:	mov	sl, r0
   39fc8:	mov	r0, r3
   39fcc:	bl	137d8 <strlen@plt>
   39fd0:	sub	sl, sl, r5
   39fd4:	str	r5, [sp, #4]
   39fd8:	str	r0, [sp, #8]
   39fdc:	add	r0, r0, #2
   39fe0:	add	r0, r0, sl
   39fe4:	bl	13574 <xmalloc@plt>
   39fe8:	add	sl, sl, #1
   39fec:	mov	r2, sl
   39ff0:	ldr	r1, [sp, #4]
   39ff4:	mov	r5, r0
   39ff8:	bl	133b8 <memcpy@plt>
   39ffc:	ldr	r3, [sp, #8]
   3a000:	add	r0, r5, sl
   3a004:	add	r2, r3, #1
   3a008:	ldr	r3, [sp, #12]
   3a00c:	mov	r1, r3
   3a010:	bl	133b8 <memcpy@plt>
   3a014:	mov	r2, #0
   3a018:	add	r3, sp, #20
   3a01c:	mov	r0, r5
   3a020:	mov	r1, r2
   3a024:	bl	13778 <glob64@plt>
   3a028:	cmp	r0, #0
   3a02c:	bne	3a070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26418>
   3a030:	ldr	r3, [sp, #20]
   3a034:	cmp	r3, #0
   3a038:	beq	3a228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265d0>
   3a03c:	mov	sl, #0
   3a040:	ldr	r3, [sp, #24]
   3a044:	mov	r0, fp
   3a048:	ldr	r1, [r3, sl, lsl #2]
   3a04c:	bl	39d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3a050:	ldr	r3, [sp, #20]
   3a054:	add	sl, sl, #1
   3a058:	cmp	sl, r3
   3a05c:	bcc	3a040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263e8>
   3a060:	add	r0, sp, #20
   3a064:	bl	139c4 <globfree64@plt>
   3a068:	cmp	r5, #0
   3a06c:	beq	39f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262f4>
   3a070:	mov	r0, r5
   3a074:	bl	13364 <free@plt>
   3a078:	b	39f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262f4>
   3a07c:	ldrb	r3, [r5]
   3a080:	cmp	r3, #9
   3a084:	cmpne	r3, #61	; 0x3d
   3a088:	movne	r4, #1
   3a08c:	moveq	r4, #0
   3a090:	tst	r3, #223	; 0xdf
   3a094:	moveq	r4, #0
   3a098:	sub	r3, r3, #11
   3a09c:	cmp	r3, #2
   3a0a0:	movls	r3, #0
   3a0a4:	andhi	r3, r4, #1
   3a0a8:	cmp	r3, #0
   3a0ac:	movne	r3, r5
   3a0b0:	bne	3a0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26464>
   3a0b4:	b	3a124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264cc>
   3a0b8:	mov	r3, r0
   3a0bc:	ldrb	r2, [r3, #1]
   3a0c0:	add	r0, r3, #1
   3a0c4:	cmp	r2, #9
   3a0c8:	cmpne	r2, #61	; 0x3d
   3a0cc:	movne	r1, #1
   3a0d0:	moveq	r1, #0
   3a0d4:	tst	r2, #223	; 0xdf
   3a0d8:	moveq	r1, #0
   3a0dc:	sub	r2, r2, #11
   3a0e0:	cmp	r2, #2
   3a0e4:	movls	r2, #0
   3a0e8:	andhi	r2, r1, #1
   3a0ec:	cmp	r2, #0
   3a0f0:	bne	3a0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26460>
   3a0f4:	cmp	r0, r5
   3a0f8:	beq	3a238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265e0>
   3a0fc:	ldrb	r2, [r0, #-1]
   3a100:	cmp	r2, #47	; 0x2f
   3a104:	beq	3a118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264c0>
   3a108:	b	3a234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265dc>
   3a10c:	ldrb	r1, [r3, #-1]!
   3a110:	cmp	r1, #47	; 0x2f
   3a114:	bne	3a1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2657c>
   3a118:	cmp	r5, r3
   3a11c:	mov	r2, r3
   3a120:	bne	3a10c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264b4>
   3a124:	mov	r4, #0
   3a128:	mov	r2, r4
   3a12c:	ldr	r7, [fp]
   3a130:	cmp	r7, #0
   3a134:	beq	3a1e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26590>
   3a138:	ldr	r3, [fp, #4]
   3a13c:	ldr	r2, [fp, #8]
   3a140:	add	r1, r3, #1
   3a144:	add	r0, r1, r4
   3a148:	cmp	r0, r2
   3a14c:	bcs	3a200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265a8>
   3a150:	ldr	r2, [pc, #240]	; 3a248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x265f0>
   3a154:	str	r1, [fp, #4]
   3a158:	ldrb	r2, [r2, #72]	; 0x48
   3a15c:	strb	r2, [r7, r3]
   3a160:	ldm	fp, {r0, r3}
   3a164:	add	r0, r0, r3
   3a168:	mov	r2, r4
   3a16c:	mov	r1, r5
   3a170:	bl	133b8 <memcpy@plt>
   3a174:	ldr	r2, [fp, #4]
   3a178:	ldr	r3, [fp]
   3a17c:	add	r4, r4, r2
   3a180:	mov	r2, #0
   3a184:	str	r4, [fp, #4]
   3a188:	mov	r0, r9
   3a18c:	strb	r2, [r3, r4]
   3a190:	bl	1379c <feof@plt>
   3a194:	cmp	r0, #0
   3a198:	beq	39dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2616c>
   3a19c:	b	39f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26310>
   3a1a0:	mov	r2, #0
   3a1a4:	mov	r0, r3
   3a1a8:	mov	r1, r2
   3a1ac:	add	r3, sp, #20
   3a1b0:	bl	13778 <glob64@plt>
   3a1b4:	subs	r5, r0, #0
   3a1b8:	bne	39f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262f4>
   3a1bc:	ldr	r3, [sp, #20]
   3a1c0:	cmp	r3, #0
   3a1c4:	bne	3a03c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263e4>
   3a1c8:	add	r0, sp, #20
   3a1cc:	bl	139c4 <globfree64@plt>
   3a1d0:	b	39f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262f4>
   3a1d4:	ldr	r7, [fp]
   3a1d8:	sub	r2, r2, r5
   3a1dc:	cmp	r7, #0
   3a1e0:	mov	r4, r2
   3a1e4:	bne	3a138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264e0>
   3a1e8:	add	r0, r2, #256	; 0x100
   3a1ec:	add	r0, r0, #1
   3a1f0:	str	r0, [fp, #8]
   3a1f4:	bl	13574 <xmalloc@plt>
   3a1f8:	stm	fp, {r0, r7}
   3a1fc:	b	3a168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26510>
   3a200:	add	r2, r2, #256	; 0x100
   3a204:	add	r1, r2, r4
   3a208:	str	r1, [fp, #8]
   3a20c:	mov	r0, r7
   3a210:	bl	134fc <xrealloc@plt>
   3a214:	ldr	r3, [fp, #4]
   3a218:	add	r1, r3, #1
   3a21c:	mov	r7, r0
   3a220:	str	r0, [fp]
   3a224:	b	3a150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264f8>
   3a228:	add	r0, sp, #20
   3a22c:	bl	139c4 <globfree64@plt>
   3a230:	b	3a070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26418>
   3a234:	sub	r2, r0, r5
   3a238:	mov	r4, r2
   3a23c:	b	3a12c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264d4>
   3a240:	andeq	r4, r8, r4, lsr #26
   3a244:	andeq	r4, r8, r8, lsl #20
   3a248:	andeq	r8, ip, r4, ror r1
   3a24c:	push	{r4, r5, r6, r7, lr}
   3a250:	sub	sp, sp, #108	; 0x6c
   3a254:	ldr	r4, [pc, #312]	; 3a394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2673c>
   3a258:	ldr	r3, [r4, #60]	; 0x3c
   3a25c:	cmp	r3, #0
   3a260:	beq	3a26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26614>
   3a264:	add	sp, sp, #108	; 0x6c
   3a268:	pop	{r4, r5, r6, r7, pc}
   3a26c:	ldr	r3, [r0, #16]
   3a270:	cmp	r3, #0
   3a274:	beq	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a278:	mov	r5, r0
   3a27c:	mov	r0, r3
   3a280:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3a284:	ands	r6, r0, #1
   3a288:	bne	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a28c:	mov	r1, sp
   3a290:	ldr	r0, [r5, #16]
   3a294:	bl	133a0 <bfd_stat@plt>
   3a298:	cmp	r0, #0
   3a29c:	bne	3a368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26710>
   3a2a0:	ldrd	r0, [sp]
   3a2a4:	ldrd	r2, [r4, #64]	; 0x40
   3a2a8:	cmp	r1, r3
   3a2ac:	cmpeq	r0, r2
   3a2b0:	beq	3a338 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x266e0>
   3a2b4:	ldr	r3, [r4, #168]	; 0xa8
   3a2b8:	mov	r1, #47	; 0x2f
   3a2bc:	ldr	r6, [r3, #8]
   3a2c0:	mov	r0, r6
   3a2c4:	bl	137fc <strchr@plt>
   3a2c8:	cmp	r0, #0
   3a2cc:	bne	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a2d0:	mov	r0, r6
   3a2d4:	ldr	r1, [pc, #188]	; 3a398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26740>
   3a2d8:	bl	131f0 <strstr@plt>
   3a2dc:	subs	r6, r0, #0
   3a2e0:	beq	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a2e4:	ldr	r0, [r5, #16]
   3a2e8:	bl	134cc <bfd_elf_get_dt_soname@plt>
   3a2ec:	add	r6, r6, #4
   3a2f0:	subs	r7, r0, #0
   3a2f4:	beq	3a384 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2672c>
   3a2f8:	ldr	r3, [r4, #168]	; 0xa8
   3a2fc:	mov	r0, r7
   3a300:	ldr	r1, [r3, #8]
   3a304:	sub	r2, r6, r1
   3a308:	bl	13538 <filename_ncmp@plt>
   3a30c:	cmp	r0, #0
   3a310:	bne	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a314:	mov	r2, #5
   3a318:	ldr	r1, [pc, #124]	; 3a39c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26744>
   3a31c:	bl	13460 <dcgettext@plt>
   3a320:	ldr	r1, [r4, #168]	; 0xa8
   3a324:	mov	r3, r7
   3a328:	ldr	r2, [r1, #4]
   3a32c:	ldr	r1, [r1, #8]
   3a330:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3a334:	b	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a338:	ldrd	r2, [r4, #160]	; 0xa0
   3a33c:	ldrd	r0, [sp, #96]	; 0x60
   3a340:	cmp	r3, r1
   3a344:	cmpeq	r2, r0
   3a348:	moveq	r3, #1
   3a34c:	movne	r3, #0
   3a350:	orrs	r2, r0, r1
   3a354:	moveq	r3, #0
   3a358:	cmp	r3, #0
   3a35c:	strne	r5, [r4, #60]	; 0x3c
   3a360:	beq	3a2b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2665c>
   3a364:	b	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a368:	mov	r0, r6
   3a36c:	mov	r2, #5
   3a370:	ldr	r1, [pc, #40]	; 3a3a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26748>
   3a374:	bl	13460 <dcgettext@plt>
   3a378:	ldr	r1, [r5, #16]
   3a37c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3a380:	b	3a264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2660c>
   3a384:	ldr	r0, [r5, #8]
   3a388:	bl	1367c <lbasename@plt>
   3a38c:	mov	r7, r0
   3a390:	b	3a2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x266a0>
   3a394:	andeq	r7, ip, r8, asr #29
   3a398:	andeq	r4, r8, r0, lsr sl
   3a39c:	andeq	r4, r8, r8, lsr sl
   3a3a0:	andeq	r4, r8, r0, lsl sl
   3a3a4:	push	{r4, lr}
   3a3a8:	ldr	r4, [pc, #96]	; 3a410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x267b8>
   3a3ac:	ldrb	r0, [r4]
   3a3b0:	and	r3, r0, #3
   3a3b4:	cmp	r3, #1
   3a3b8:	ldreq	r3, [r4, #116]	; 0x74
   3a3bc:	orreq	r3, r3, #134217728	; 0x8000000
   3a3c0:	streq	r3, [r4, #116]	; 0x74
   3a3c4:	ands	r0, r0, #2
   3a3c8:	bne	3a3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26794>
   3a3cc:	ldrb	r3, [r4, #7]
   3a3d0:	tst	r3, #4
   3a3d4:	beq	3a3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26794>
   3a3d8:	ldr	r3, [r4, #96]	; 0x60
   3a3dc:	cmp	r3, #0
   3a3e0:	bgt	3a3f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2679c>
   3a3e4:	mov	r3, #0
   3a3e8:	str	r3, [r4, #96]	; 0x60
   3a3ec:	pop	{r4, lr}
   3a3f0:	b	2d52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x198d4>
   3a3f4:	mov	r2, #5
   3a3f8:	ldr	r1, [pc, #20]	; 3a414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x267bc>
   3a3fc:	bl	13460 <dcgettext@plt>
   3a400:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3a404:	mov	r3, #0
   3a408:	str	r3, [r4, #96]	; 0x60
   3a40c:	b	3a3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26794>
   3a410:	andeq	r8, ip, ip, lsl #1
   3a414:	andeq	r4, r8, r0, ror sl
   3a418:	push	{r4, lr}
   3a41c:	mov	r1, #0
   3a420:	ldr	r0, [pc, #68]	; 3a46c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26814>
   3a424:	bl	2f924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bccc>
   3a428:	ldr	lr, [pc, #64]	; 3a470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26818>
   3a42c:	ldr	r3, [pc, #64]	; 3a474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2681c>
   3a430:	ldr	ip, [pc, #64]	; 3a478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26820>
   3a434:	ldrb	r0, [lr]
   3a438:	ldrb	r1, [r3, #6]
   3a43c:	ldrb	r2, [r3, #3]
   3a440:	orr	r0, r0, #32
   3a444:	strb	r0, [lr]
   3a448:	orr	r1, r1, #32
   3a44c:	orr	r2, r2, #16
   3a450:	mov	lr, #1
   3a454:	mov	r0, #0
   3a458:	strb	r1, [r3, #6]
   3a45c:	strb	r2, [r3, #3]
   3a460:	str	lr, [ip, #8]
   3a464:	str	r0, [ip, #68]	; 0x44
   3a468:	pop	{r4, pc}
   3a46c:	andeq	r5, r8, r8, rrx
   3a470:	andeq	r8, ip, r8, asr r0
   3a474:	andeq	r8, ip, ip, lsl #1
   3a478:	andeq	r8, ip, r4, ror r1
   3a47c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a480:	mov	r5, r0
   3a484:	ldr	r0, [r0, #148]	; 0x94
   3a488:	ldr	r7, [pc, #1940]	; 3ac24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fcc>
   3a48c:	mov	sl, r1
   3a490:	ldr	r1, [r0, #4]
   3a494:	ldr	r3, [r7, #48]	; 0x30
   3a498:	sub	sp, sp, #52	; 0x34
   3a49c:	ldr	r8, [r1, #4]
   3a4a0:	ldr	r3, [r3, #4]
   3a4a4:	cmp	r8, #5
   3a4a8:	mov	r6, r2
   3a4ac:	ldr	fp, [r3, #4]
   3a4b0:	ldreq	r3, [r5, #140]	; 0x8c
   3a4b4:	movne	r3, #0
   3a4b8:	moveq	r2, #1
   3a4bc:	ldreq	r3, [r3, #4]
   3a4c0:	movne	r2, #0
   3a4c4:	str	r3, [sp, #24]
   3a4c8:	ldrb	r3, [r7]
   3a4cc:	str	r2, [sp, #20]
   3a4d0:	and	r3, r3, #3
   3a4d4:	cmp	r3, #2
   3a4d8:	beq	3a74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26af4>
   3a4dc:	ldrb	r3, [r7, #4]
   3a4e0:	sub	r2, fp, #5
   3a4e4:	clz	r2, r2
   3a4e8:	ands	r3, r3, #64	; 0x40
   3a4ec:	lsr	r2, r2, #5
   3a4f0:	bne	3a5b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2695c>
   3a4f4:	str	r3, [sp, #28]
   3a4f8:	ldr	r3, [sp, #20]
   3a4fc:	tst	r3, r2
   3a500:	beq	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3a504:	ldr	r1, [r5, #20]
   3a508:	tst	r1, #1
   3a50c:	beq	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3a510:	ldr	lr, [r5, #140]	; 0x8c
   3a514:	ldr	r3, [lr, #8]
   3a518:	tst	r3, #16777216	; 0x1000000
   3a51c:	beq	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3a520:	ldr	r3, [pc, #1792]	; 3ac28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fd0>
   3a524:	ldr	r4, [r3]
   3a528:	cmp	r4, #0
   3a52c:	beq	3a584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2692c>
   3a530:	ldr	ip, [pc, #1780]	; 3ac2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fd4>
   3a534:	ldr	r9, [pc, #1780]	; 3ac30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fd8>
   3a538:	ldr	r3, [r4, #28]
   3a53c:	cmp	r3, ip
   3a540:	cmpne	r3, #0
   3a544:	beq	3a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26920>
   3a548:	ldr	r0, [r3, #140]	; 0x8c
   3a54c:	ldr	r2, [r0, #8]
   3a550:	tst	r2, #16777216	; 0x1000000
   3a554:	beq	3a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26920>
   3a558:	ldr	r3, [r3, #20]
   3a55c:	eor	r3, r3, r1
   3a560:	ands	r3, r3, r9
   3a564:	bne	3a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26920>
   3a568:	ldr	r0, [r0, #32]
   3a56c:	ldr	r2, [lr, #32]
   3a570:	cmp	r0, r2
   3a574:	beq	3abe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f88>
   3a578:	ldr	r4, [r4, #16]
   3a57c:	cmp	r4, #0
   3a580:	bne	3a538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268e0>
   3a584:	ldr	r3, [pc, #1704]	; 3ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fdc>
   3a588:	and	r3, r3, r1
   3a58c:	cmp	r3, #0
   3a590:	beq	3aa00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26da8>
   3a594:	tst	r1, #8
   3a598:	beq	3abac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f54>
   3a59c:	ldr	r2, [pc, #1684]	; 3ac38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fe0>
   3a5a0:	ldr	r3, [pc, #1684]	; 3ac3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fe4>
   3a5a4:	tst	r1, #16
   3a5a8:	moveq	sl, r2
   3a5ac:	movne	sl, r3
   3a5b0:	b	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3a5b4:	ldr	r1, [r5, #20]
   3a5b8:	ands	r3, r1, #1
   3a5bc:	bne	3a954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26cfc>
   3a5c0:	str	r3, [sp, #28]
   3a5c4:	cmp	r6, #0
   3a5c8:	beq	3a7b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b58>
   3a5cc:	ldr	fp, [pc, #1644]	; 3ac40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fe8>
   3a5d0:	ldr	r3, [fp, #172]	; 0xac
   3a5d4:	cmp	r3, #0
   3a5d8:	bne	3a630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269d8>
   3a5dc:	ldr	r4, [pc, #1632]	; 3ac44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fec>
   3a5e0:	add	r9, r4, #216	; 0xd8
   3a5e4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   3a5e8:	mov	r2, #0
   3a5ec:	cmp	r3, r2
   3a5f0:	mov	r1, r2
   3a5f4:	mov	r0, r3
   3a5f8:	beq	3a61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269c4>
   3a5fc:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   3a600:	cmp	r0, #0
   3a604:	str	r0, [r4, #-16]
   3a608:	beq	3a61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269c4>
   3a60c:	ldr	r3, [r0, #76]	; 0x4c
   3a610:	cmp	r3, #0
   3a614:	ldreq	r3, [r4, #-20]	; 0xffffffec
   3a618:	streq	r3, [r0, #76]	; 0x4c
   3a61c:	add	r4, r4, #24
   3a620:	cmp	r9, r4
   3a624:	bne	3a5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2698c>
   3a628:	mov	r3, #1
   3a62c:	str	r3, [fp, #172]	; 0xac
   3a630:	ldrb	r7, [r7]
   3a634:	tst	r7, #2
   3a638:	bne	3a654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269fc>
   3a63c:	mov	r2, #13
   3a640:	ldr	r1, [pc, #1536]	; 3ac48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ff0>
   3a644:	ldr	r0, [r5]
   3a648:	bl	13bb0 <strncmp@plt>
   3a64c:	subs	r2, r0, #0
   3a650:	beq	3a898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c40>
   3a654:	and	r7, r7, #3
   3a658:	cmp	r7, #2
   3a65c:	ldr	r7, [r5, #20]
   3a660:	beq	3a6fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26aa4>
   3a664:	ldr	r0, [r5, #148]	; 0x94
   3a668:	mov	r4, r5
   3a66c:	mov	r1, r4
   3a670:	bl	1385c <bfd_get_next_section_by_name@plt>
   3a674:	subs	r4, r0, #0
   3a678:	beq	3a6fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26aa4>
   3a67c:	ldr	r3, [r4, #60]	; 0x3c
   3a680:	ldr	r0, [r4, #148]	; 0x94
   3a684:	cmp	r3, #0
   3a688:	bne	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a68c:	ldr	r3, [r4, #20]
   3a690:	eor	r2, r3, r7
   3a694:	and	r2, r2, #3
   3a698:	and	r3, r3, #32768	; 0x8000
   3a69c:	orrs	r3, r2, r3
   3a6a0:	bne	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a6a4:	ldr	r3, [r0, #40]	; 0x28
   3a6a8:	tst	r3, #2048	; 0x800
   3a6ac:	bne	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a6b0:	ldr	r3, [r0, #164]	; 0xa4
   3a6b4:	cmp	r3, #0
   3a6b8:	beq	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a6bc:	ldrb	r3, [r3, #36]	; 0x24
   3a6c0:	tst	r3, #16
   3a6c4:	bne	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a6c8:	mov	r3, r5
   3a6cc:	ldr	r2, [r5, #148]	; 0x94
   3a6d0:	mov	r1, r4
   3a6d4:	bl	13c04 <_bfd_elf_match_sections_by_type@plt>
   3a6d8:	eor	r3, r7, #8
   3a6dc:	cmp	r0, #0
   3a6e0:	ldrne	r7, [r4, #20]
   3a6e4:	ldreq	r0, [r4, #148]	; 0x94
   3a6e8:	eorne	r7, r7, #8
   3a6ec:	orrne	r7, r7, r3
   3a6f0:	ldrne	r0, [r4, #148]	; 0x94
   3a6f4:	eorne	r7, r7, #8
   3a6f8:	b	3a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a14>
   3a6fc:	ldr	r3, [pc, #1352]	; 3ac4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ff4>
   3a700:	tst	r7, r3
   3a704:	beq	3a754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26afc>
   3a708:	ands	r3, r7, #1
   3a70c:	moveq	r9, r3
   3a710:	moveq	r8, r9
   3a714:	bne	3a8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c64>
   3a718:	mov	ip, #0
   3a71c:	str	r9, [sp]
   3a720:	mov	r3, r8
   3a724:	mov	r2, r6
   3a728:	mov	r1, sl
   3a72c:	mov	r0, r5
   3a730:	str	ip, [sp, #8]
   3a734:	str	ip, [sp, #4]
   3a738:	bl	24d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110b4>
   3a73c:	mov	r4, r0
   3a740:	mov	r0, r4
   3a744:	add	sp, sp, #52	; 0x34
   3a748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a74c:	mov	r3, #0
   3a750:	b	3a5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26968>
   3a754:	ldr	r9, [pc, #1268]	; 3ac50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ff8>
   3a758:	ldr	r8, [r9, #8]
   3a75c:	cmp	r8, #0
   3a760:	bne	3a718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ac0>
   3a764:	ldr	r0, [r9]
   3a768:	subs	r1, r0, #0
   3a76c:	beq	3aa1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26dc4>
   3a770:	mov	r2, r8
   3a774:	mov	r1, r8
   3a778:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   3a77c:	mov	r8, r0
   3a780:	str	r0, [r9, #8]
   3a784:	cmp	r8, #0
   3a788:	bne	3a718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ac0>
   3a78c:	ldr	r3, [pc, #1216]	; 3ac54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ffc>
   3a790:	mov	r1, r7
   3a794:	add	r2, r9, #8
   3a798:	mov	r0, r5
   3a79c:	bl	21574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd91c>
   3a7a0:	subs	r8, r0, #0
   3a7a4:	ldreq	r3, [pc, #1148]	; 3ac28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fd0>
   3a7a8:	ldreq	r8, [r3]
   3a7ac:	b	3a718 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ac0>
   3a7b0:	mov	r2, r6
   3a7b4:	mov	r1, r6
   3a7b8:	mov	r0, sl
   3a7bc:	bl	210d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd47c>
   3a7c0:	subs	r4, r0, #0
   3a7c4:	bne	3a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c0c>
   3a7c8:	b	3a5cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26974>
   3a7cc:	ldr	r3, [r1, #20]
   3a7d0:	cmp	r3, #0
   3a7d4:	beq	3a878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c20>
   3a7d8:	ldr	r2, [r5, #20]
   3a7dc:	eor	r3, r3, r2
   3a7e0:	tst	r3, #3
   3a7e4:	bne	3a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bf8>
   3a7e8:	cmp	fp, #5
   3a7ec:	cmpeq	r8, #5
   3a7f0:	bne	3a878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c20>
   3a7f4:	ldr	r2, [r1, #140]	; 0x8c
   3a7f8:	ldr	r3, [r5, #140]	; 0x8c
   3a7fc:	ldr	ip, [r2, #32]
   3a800:	ldr	r0, [r3, #32]
   3a804:	cmp	ip, r0
   3a808:	bne	3a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bf8>
   3a80c:	ldrb	r0, [r7]
   3a810:	and	r0, r0, #3
   3a814:	cmp	r0, #2
   3a818:	bne	3a82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bd4>
   3a81c:	ldr	r2, [r2, #8]
   3a820:	ldr	r3, [r3, #8]
   3a824:	teq	r2, r3
   3a828:	bmi	3a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bf8>
   3a82c:	mov	r3, r5
   3a830:	ldr	r2, [r5, #148]	; 0x94
   3a834:	ldr	r0, [r7, #48]	; 0x30
   3a838:	bl	13c04 <_bfd_elf_match_sections_by_type@plt>
   3a83c:	cmp	r0, #0
   3a840:	bne	3a878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c20>
   3a844:	ldr	r3, [r4, #28]
   3a848:	cmp	r3, #0
   3a84c:	moveq	r6, r4
   3a850:	mov	r0, r4
   3a854:	mov	r1, #0
   3a858:	bl	214f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd898>
   3a85c:	subs	r4, r0, #0
   3a860:	beq	3a9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d48>
   3a864:	ldr	r1, [r4, #28]
   3a868:	cmp	r1, #0
   3a86c:	bne	3a7cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b74>
   3a870:	mov	r6, r4
   3a874:	b	3a850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bf8>
   3a878:	add	r0, r4, #8
   3a87c:	mov	r1, r5
   3a880:	mov	r3, r4
   3a884:	mov	r2, #0
   3a888:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   3a88c:	mov	r0, r4
   3a890:	add	sp, sp, #52	; 0x34
   3a894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a898:	ldr	r3, [pc, #952]	; 3ac58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27000>
   3a89c:	ldr	r4, [r3, #76]	; 0x4c
   3a8a0:	cmp	r4, #0
   3a8a4:	beq	3a654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269fc>
   3a8a8:	mov	r1, r5
   3a8ac:	mov	r3, r4
   3a8b0:	add	r0, r4, #8
   3a8b4:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   3a8b8:	b	3a740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ae8>
   3a8bc:	ands	r4, r7, #2
   3a8c0:	beq	3a900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ca8>
   3a8c4:	ldr	r9, [sp, #20]
   3a8c8:	ldr	r3, [sp, #24]
   3a8cc:	cmp	r3, #7
   3a8d0:	movne	r9, #0
   3a8d4:	andeq	r9, r9, #1
   3a8d8:	cmp	r9, #0
   3a8dc:	bne	3a998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d40>
   3a8e0:	cmp	r8, #5
   3a8e4:	beq	3a900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ca8>
   3a8e8:	mov	r2, #5
   3a8ec:	ldr	r1, [pc, #872]	; 3ac5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27004>
   3a8f0:	mov	r0, sl
   3a8f4:	bl	13bb0 <strncmp@plt>
   3a8f8:	cmp	r0, #0
   3a8fc:	beq	3a998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d40>
   3a900:	ldr	r3, [pc, #856]	; 3ac60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27008>
   3a904:	tst	r7, r3
   3a908:	beq	3a9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d70>
   3a90c:	tst	r7, #4194304	; 0x400000
   3a910:	bne	3aa08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26db0>
   3a914:	tst	r7, #1024	; 0x400
   3a918:	bne	3abd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f80>
   3a91c:	tst	r7, #8
   3a920:	beq	3abf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa0>
   3a924:	cmp	r8, #5
   3a928:	beq	3ac00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa8>
   3a92c:	mov	r2, #4
   3a930:	ldr	r1, [pc, #812]	; 3ac64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2700c>
   3a934:	mov	r0, sl
   3a938:	bl	13bb0 <strncmp@plt>
   3a93c:	cmp	r0, #0
   3a940:	bne	3ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fb8>
   3a944:	cmp	r4, #0
   3a948:	beq	3ac10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fb8>
   3a94c:	ldr	r9, [pc, #788]	; 3ac68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27010>
   3a950:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3a954:	cmp	r8, #5
   3a958:	beq	3a9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d78>
   3a95c:	mov	r2, #4
   3a960:	ldr	r1, [pc, #764]	; 3ac64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2700c>
   3a964:	mov	r0, sl
   3a968:	bl	13bb0 <strncmp@plt>
   3a96c:	cmp	r0, #0
   3a970:	bne	3a74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26af4>
   3a974:	ldrb	r1, [sl, #4]
   3a978:	ldr	r2, [pc, #748]	; 3ac6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27014>
   3a97c:	ldr	r3, [pc, #748]	; 3ac70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27018>
   3a980:	cmp	r1, #97	; 0x61
   3a984:	mov	r0, #1
   3a988:	str	r0, [sp, #28]
   3a98c:	moveq	sl, r2
   3a990:	movne	sl, r3
   3a994:	b	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3a998:	ldr	r9, [pc, #724]	; 3ac74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2701c>
   3a99c:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3a9a0:	cmp	r6, #0
   3a9a4:	ldreq	r6, [pc, #716]	; 3ac78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27020>
   3a9a8:	beq	3a5cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26974>
   3a9ac:	mov	r2, r4
   3a9b0:	mov	r1, r5
   3a9b4:	mov	r3, r6
   3a9b8:	add	r0, r6, #8
   3a9bc:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   3a9c0:	mov	r4, r6
   3a9c4:	b	3a740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ae8>
   3a9c8:	ldr	r9, [pc, #684]	; 3ac7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27024>
   3a9cc:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3a9d0:	ldr	r0, [sp, #24]
   3a9d4:	cmp	r0, #4
   3a9d8:	beq	3aa10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26db8>
   3a9dc:	ldr	r3, [pc, #652]	; 3ac70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27018>
   3a9e0:	cmp	r0, #9
   3a9e4:	moveq	sl, r3
   3a9e8:	movne	r3, #0
   3a9ec:	moveq	r3, #1
   3a9f0:	cmp	fp, #5
   3a9f4:	str	r3, [sp, #28]
   3a9f8:	beq	3a510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268b8>
   3a9fc:	b	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3aa00:	ldr	sl, [pc, #632]	; 3ac80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27028>
   3aa04:	b	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3aa08:	ldr	r9, [pc, #628]	; 3ac84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2702c>
   3aa0c:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3aa10:	ldr	sl, [pc, #596]	; 3ac6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27014>
   3aa14:	mov	r3, #1
   3aa18:	b	3a4f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2689c>
   3aa1c:	ldr	r3, [r5]
   3aa20:	ldr	r2, [pc, #512]	; 3ac28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fd0>
   3aa24:	ldrb	r3, [r3, #4]
   3aa28:	ldr	r4, [r2]
   3aa2c:	sub	r3, r3, #97	; 0x61
   3aa30:	cmp	r4, #0
   3aa34:	clz	r3, r3
   3aa38:	lsr	r3, r3, #5
   3aa3c:	str	r3, [sp, #24]
   3aa40:	beq	3a78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b34>
   3aa44:	str	r7, [sp, #32]
   3aa48:	str	r9, [sp, #36]	; 0x24
   3aa4c:	str	sl, [sp, #44]	; 0x2c
   3aa50:	mov	fp, r1
   3aa54:	ldr	sl, [sp, #28]
   3aa58:	str	r1, [sp, #20]
   3aa5c:	mov	r8, r1
   3aa60:	mov	r9, r1
   3aa64:	mov	r7, r1
   3aa68:	str	r5, [sp, #40]	; 0x28
   3aa6c:	str	r6, [sp, #28]
   3aa70:	b	3ab30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ed8>
   3aa74:	ldr	r6, [r4, #24]
   3aa78:	mov	r2, #4
   3aa7c:	mov	r0, r6
   3aa80:	ldr	r1, [pc, #476]	; 3ac64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2700c>
   3aa84:	bl	13bb0 <strncmp@plt>
   3aa88:	cmp	r0, #0
   3aa8c:	bne	3ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ee4>
   3aa90:	ldrb	r2, [r6, #4]
   3aa94:	cmp	sl, #0
   3aa98:	sub	r5, r2, #97	; 0x61
   3aa9c:	clz	r5, r5
   3aaa0:	lsr	r5, r5, #5
   3aaa4:	bne	3abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f5c>
   3aaa8:	add	r1, r5, #4
   3aaac:	add	r1, r6, r1
   3aab0:	ldr	r0, [pc, #464]	; 3ac88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27030>
   3aab4:	bl	13268 <strcmp@plt>
   3aab8:	cmp	r0, #0
   3aabc:	beq	3abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f5c>
   3aac0:	ldr	r3, [sp, #24]
   3aac4:	cmp	r9, #0
   3aac8:	sub	r2, r3, r5
   3aacc:	clz	r2, r2
   3aad0:	lsr	r2, r2, #5
   3aad4:	movne	r3, r2
   3aad8:	moveq	r3, #1
   3aadc:	cmp	r8, #0
   3aae0:	moveq	r2, #1
   3aae4:	cmp	r3, #0
   3aae8:	movne	r9, r4
   3aaec:	cmp	r2, #0
   3aaf0:	ldr	r3, [r4, #28]
   3aaf4:	beq	3ab40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ee8>
   3aaf8:	cmp	r3, #0
   3aafc:	beq	3ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ec4>
   3ab00:	ldr	r3, [r3, #20]
   3ab04:	tst	r3, #1
   3ab08:	beq	3ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ec4>
   3ab0c:	mov	r8, r4
   3ab10:	tst	r3, #8
   3ab14:	movne	fp, r4
   3ab18:	str	r4, [sp, #20]
   3ab1c:	ldr	r3, [r4, #16]
   3ab20:	mov	r7, r4
   3ab24:	cmp	r3, #0
   3ab28:	beq	3ab58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f00>
   3ab2c:	mov	r4, r3
   3ab30:	ldr	r3, [r4, #72]	; 0x48
   3ab34:	cmp	r3, #0
   3ab38:	bge	3aa74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e1c>
   3ab3c:	ldr	r3, [r4, #28]
   3ab40:	cmp	r3, #0
   3ab44:	beq	3ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ec4>
   3ab48:	ldr	r3, [r3, #20]
   3ab4c:	tst	r3, #1
   3ab50:	beq	3ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ec4>
   3ab54:	b	3ab10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26eb8>
   3ab58:	mov	r1, r9
   3ab5c:	ldr	r7, [sp, #32]
   3ab60:	ldr	r9, [sp, #36]	; 0x24
   3ab64:	ldr	r5, [sp, #40]	; 0x28
   3ab68:	ldr	sl, [sp, #44]	; 0x2c
   3ab6c:	ldr	r6, [sp, #28]
   3ab70:	mov	r2, fp
   3ab74:	cmp	r8, #0
   3ab78:	beq	3ab84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f2c>
   3ab7c:	str	r8, [r9, #8]
   3ab80:	b	3a784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b2c>
   3ab84:	cmp	r1, #0
   3ab88:	movne	r8, r1
   3ab8c:	bne	3ab7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f24>
   3ab90:	cmp	r2, #0
   3ab94:	movne	r8, r2
   3ab98:	bne	3ab7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f24>
   3ab9c:	ldr	r8, [sp, #20]
   3aba0:	cmp	r8, #0
   3aba4:	moveq	r8, r4
   3aba8:	b	3ab7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f24>
   3abac:	ldr	sl, [pc, #216]	; 3ac8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27034>
   3abb0:	b	3a5c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2696c>
   3abb4:	mov	r1, r9
   3abb8:	mov	r4, r7
   3abbc:	ldr	r9, [sp, #36]	; 0x24
   3abc0:	mov	r2, fp
   3abc4:	ldr	r7, [sp, #32]
   3abc8:	ldr	r5, [sp, #40]	; 0x28
   3abcc:	ldr	sl, [sp, #44]	; 0x2c
   3abd0:	ldr	r6, [sp, #28]
   3abd4:	b	3ab74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f1c>
   3abd8:	ldr	r9, [pc, #176]	; 3ac90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27038>
   3abdc:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3abe0:	mov	r2, r3
   3abe4:	mov	r1, r5
   3abe8:	mov	r3, r4
   3abec:	add	r0, r4, #8
   3abf0:	bl	21dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   3abf4:	b	3a740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ae8>
   3abf8:	ldr	r9, [pc, #148]	; 3ac94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2703c>
   3abfc:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3ac00:	ldr	r3, [sp, #24]
   3ac04:	cmp	r3, #9
   3ac08:	cmpne	r3, #4
   3ac0c:	beq	3a944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26cec>
   3ac10:	ldr	r9, [pc, #44]	; 3ac44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fec>
   3ac14:	tst	r7, #16
   3ac18:	sub	r3, r9, #24
   3ac1c:	movne	r9, r3
   3ac20:	b	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3ac24:	andeq	r8, ip, ip, lsl #1
   3ac28:	andeq	r8, ip, r8, rrx
   3ac2c:	andeq	r7, ip, r8, lsr #17
   3ac30:	andeq	r0, r0, fp, lsl r1
   3ac34:	andeq	r0, r0, r2, lsl #2
   3ac38:			; <UNDEFINED> instruction: 0x00084ab8
   3ac3c:	andeq	r4, r8, r8, asr #21
   3ac40:	andeq	r7, ip, r8, asr #29
   3ac44:	andeq	r7, ip, r8, lsl #12
   3ac48:	strdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   3ac4c:	andeq	r2, r0, r1
   3ac50:			; <UNDEFINED> instruction: 0x000c76b0
   3ac54:	andeq	r3, r1, r4, lsl #24
   3ac58:	andeq	r7, ip, ip, lsr #11
   3ac5c:	andeq	r4, r8, r4, lsl #22
   3ac60:	andeq	r0, r0, r2, lsl #10
   3ac64:	andeq	r4, r8, ip, ror #21
   3ac68:	andeq	r7, ip, r8, ror #12
   3ac6c:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   3ac70:	andeq	r4, r8, r0, ror #21
   3ac74:	andeq	r7, ip, r0, lsl #13
   3ac78:	andeq	r0, r0, lr, ror r1
   3ac7c:	andeq	r7, ip, r0, asr r6
   3ac80:	andeq	r4, r8, ip, lsr #21
   3ac84:	muleq	ip, r8, r6
   3ac88:	andeq	r4, r8, ip, lsl #22
   3ac8c:	andeq	r4, r8, r0, lsr #21
   3ac90:	andeq	r7, ip, r0, lsr #12
   3ac94:	andeq	r7, ip, r8, lsr r6
   3ac98:	ldr	r3, [r0, #4]
   3ac9c:	cmp	r3, #5
   3aca0:	bxne	lr
   3aca4:	ldr	r1, [r0, #8]
   3aca8:	ldrh	r3, [r1, #24]
   3acac:	and	r3, r3, #896	; 0x380
   3acb0:	cmp	r3, #512	; 0x200
   3acb4:	bxeq	lr
   3acb8:	ldr	r3, [r1, #20]
   3acbc:	tst	r3, #32768	; 0x8000
   3acc0:	bxne	lr
   3acc4:	ldr	r3, [r1, #60]	; 0x3c
   3acc8:	cmp	r3, #0
   3accc:	bxeq	lr
   3acd0:	ldr	r0, [pc, #16]	; 3ace8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27090>
   3acd4:	ldr	r2, [r3, #148]	; 0x94
   3acd8:	ldr	r3, [r0, #48]	; 0x30
   3acdc:	cmp	r2, r3
   3ace0:	bxne	lr
   3ace4:	b	13bd4 <elf32_arm_next_input_section@plt>
   3ace8:	andeq	r8, ip, ip, lsl #1
   3acec:	push	{r4, r5, r6, lr}
   3acf0:	mov	r4, r0
   3acf4:	ldr	r5, [pc, #200]	; 3adc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2716c>
   3acf8:	ldr	r3, [r5, #60]	; 0x3c
   3acfc:	cmp	r3, #0
   3ad00:	beq	3ad14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270bc>
   3ad04:	ldr	r0, [r3, #16]
   3ad08:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3ad0c:	tst	r0, #1
   3ad10:	popeq	{r4, r5, r6, pc}
   3ad14:	ldr	r0, [r4, #8]
   3ad18:	cmp	r0, #0
   3ad1c:	popeq	{r4, r5, r6, pc}
   3ad20:	ldr	r3, [r4, #16]
   3ad24:	cmp	r3, #0
   3ad28:	popeq	{r4, r5, r6, pc}
   3ad2c:	ldr	r2, [r5, #60]	; 0x3c
   3ad30:	cmp	r2, #0
   3ad34:	beq	3ad4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270f4>
   3ad38:	mov	r0, r3
   3ad3c:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3ad40:	tst	r0, #1
   3ad44:	popne	{r4, r5, r6, pc}
   3ad48:	ldr	r0, [r4, #8]
   3ad4c:	ldr	r3, [r5, #168]	; 0xa8
   3ad50:	ldr	r1, [r3, #8]
   3ad54:	bl	13394 <filename_cmp@plt>
   3ad58:	cmp	r0, #0
   3ad5c:	beq	3adbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27164>
   3ad60:	ldrb	r3, [r4, #36]	; 0x24
   3ad64:	tst	r3, #4
   3ad68:	beq	3ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27140>
   3ad6c:	mov	r1, #47	; 0x2f
   3ad70:	ldr	r0, [r4, #8]
   3ad74:	bl	139ac <strrchr@plt>
   3ad78:	cmp	r0, #0
   3ad7c:	beq	3ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27140>
   3ad80:	ldr	r3, [r5, #168]	; 0xa8
   3ad84:	add	r0, r0, #1
   3ad88:	ldr	r1, [r3, #8]
   3ad8c:	bl	13394 <filename_cmp@plt>
   3ad90:	cmp	r0, #0
   3ad94:	beq	3adbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27164>
   3ad98:	ldr	r0, [r4, #16]
   3ad9c:	bl	134cc <bfd_elf_get_dt_soname@plt>
   3ada0:	cmp	r0, #0
   3ada4:	popeq	{r4, r5, r6, pc}
   3ada8:	ldr	r3, [r5, #168]	; 0xa8
   3adac:	ldr	r1, [r3, #8]
   3adb0:	bl	13394 <filename_cmp@plt>
   3adb4:	cmp	r0, #0
   3adb8:	popne	{r4, r5, r6, pc}
   3adbc:	str	r4, [r5, #60]	; 0x3c
   3adc0:	pop	{r4, r5, r6, pc}
   3adc4:	andeq	r7, ip, r8, asr #29
   3adc8:	push	{r4, r5, r6, r7, r8, r9, lr}
   3adcc:	mov	r6, r1
   3add0:	ldr	r9, [pc, #640]	; 3b058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27400>
   3add4:	sub	sp, sp, #12
   3add8:	mov	r8, r0
   3addc:	ldr	r3, [r9, #48]	; 0x30
   3ade0:	mov	r0, r1
   3ade4:	mov	r7, r2
   3ade8:	ldr	r3, [r3, #4]
   3adec:	ldr	r1, [r3]
   3adf0:	bl	133dc <bfd_openr@plt>
   3adf4:	subs	r5, r0, #0
   3adf8:	beq	3aee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27290>
   3adfc:	ldr	r3, [r5, #40]	; 0x28
   3ae00:	mov	r1, #1
   3ae04:	orr	r3, r3, #1048576	; 0x100000
   3ae08:	str	r3, [r5, #40]	; 0x28
   3ae0c:	bl	13ae4 <bfd_check_format@plt>
   3ae10:	subs	r4, r0, #0
   3ae14:	beq	3aed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2727c>
   3ae18:	ldr	r4, [r5, #40]	; 0x28
   3ae1c:	lsr	r4, r4, #5
   3ae20:	ands	r4, r4, #64	; 0x40
   3ae24:	beq	3aed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2727c>
   3ae28:	ldr	r3, [r9, #48]	; 0x30
   3ae2c:	ldr	r2, [r5, #4]
   3ae30:	ldr	r3, [r3, #4]
   3ae34:	cmp	r2, r3
   3ae38:	bne	3af84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2732c>
   3ae3c:	cmp	r7, #0
   3ae40:	bne	3af1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x272c4>
   3ae44:	add	r1, sp, #4
   3ae48:	mov	r0, r5
   3ae4c:	bl	137c0 <bfd_elf_get_bfd_needed_list@plt>
   3ae50:	cmp	r0, #0
   3ae54:	beq	3b040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273e8>
   3ae58:	ldr	r3, [sp, #4]
   3ae5c:	ldr	r7, [pc, #504]	; 3b05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27404>
   3ae60:	cmp	r3, #0
   3ae64:	beq	3af20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x272c8>
   3ae68:	ldr	r2, [pc, #496]	; 3b060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27408>
   3ae6c:	mov	r1, #0
   3ae70:	ldr	r0, [pc, #492]	; 3b064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2740c>
   3ae74:	str	r3, [r7, #176]	; 0xb0
   3ae78:	str	r1, [r7, #180]	; 0xb4
   3ae7c:	str	r2, [r7, #4]
   3ae80:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   3ae84:	ldr	r3, [r7, #180]	; 0xb4
   3ae88:	cmp	r3, #0
   3ae8c:	bne	3aec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2726c>
   3ae90:	ldr	r4, [sp, #4]
   3ae94:	cmp	r4, #0
   3ae98:	beq	3aec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2726c>
   3ae9c:	ldr	r9, [pc, #452]	; 3b068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27410>
   3aea0:	mov	r2, #7
   3aea4:	mov	r1, r9
   3aea8:	ldr	r0, [r4, #8]
   3aeac:	bl	13bb0 <strncmp@plt>
   3aeb0:	cmp	r0, #0
   3aeb4:	beq	3af20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x272c8>
   3aeb8:	ldr	r4, [r4]
   3aebc:	cmp	r4, #0
   3aec0:	bne	3aea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27248>
   3aec4:	mov	r0, r5
   3aec8:	bl	139dc <bfd_close@plt>
   3aecc:	mov	r4, #0
   3aed0:	b	3aedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27284>
   3aed4:	mov	r0, r5
   3aed8:	bl	139dc <bfd_close@plt>
   3aedc:	mov	r0, r4
   3aee0:	add	sp, sp, #12
   3aee4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3aee8:	ldr	r3, [pc, #380]	; 3b06c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27414>
   3aeec:	ldr	r4, [r3]
   3aef0:	cmp	r4, #0
   3aef4:	beq	3aedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27284>
   3aef8:	mov	r2, #5
   3aefc:	ldr	r1, [pc, #364]	; 3b070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27418>
   3af00:	bl	13460 <dcgettext@plt>
   3af04:	mov	r1, r6
   3af08:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   3af0c:	mov	r4, r5
   3af10:	mov	r0, r4
   3af14:	add	sp, sp, #12
   3af18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3af1c:	ldr	r7, [pc, #312]	; 3b05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27404>
   3af20:	ldr	r1, [pc, #332]	; 3b074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2741c>
   3af24:	mov	r0, r5
   3af28:	bl	133a0 <bfd_stat@plt>
   3af2c:	cmp	r0, #0
   3af30:	bne	3afbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27364>
   3af34:	ldr	r0, [r5]
   3af38:	bl	1367c <lbasename@plt>
   3af3c:	ldr	r3, [pc, #296]	; 3b06c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27414>
   3af40:	ldr	r3, [r3]
   3af44:	cmp	r3, #0
   3af48:	mov	r4, r0
   3af4c:	bne	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27344>
   3af50:	ldr	r2, [pc, #288]	; 3b078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27420>
   3af54:	mov	r3, #0
   3af58:	ldr	r0, [pc, #260]	; 3b064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2740c>
   3af5c:	str	r3, [r7, #60]	; 0x3c
   3af60:	str	r2, [r7, #4]
   3af64:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   3af68:	ldr	r3, [r7, #60]	; 0x3c
   3af6c:	cmp	r3, #0
   3af70:	beq	3afd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27380>
   3af74:	mov	r4, #1
   3af78:	mov	r0, r4
   3af7c:	add	sp, sp, #12
   3af80:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3af84:	mov	r0, r5
   3af88:	bl	139dc <bfd_close@plt>
   3af8c:	mov	r4, #0
   3af90:	mov	r0, r4
   3af94:	add	sp, sp, #12
   3af98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3af9c:	mov	r2, #5
   3afa0:	ldr	r1, [pc, #212]	; 3b07c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27424>
   3afa4:	mov	r0, #0
   3afa8:	bl	13460 <dcgettext@plt>
   3afac:	mov	r2, r6
   3afb0:	mov	r1, r4
   3afb4:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   3afb8:	b	3af50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x272f8>
   3afbc:	mov	r2, #5
   3afc0:	ldr	r1, [pc, #184]	; 3b080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27428>
   3afc4:	mov	r0, #0
   3afc8:	bl	13460 <dcgettext@plt>
   3afcc:	mov	r1, r5
   3afd0:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3afd4:	b	3af34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x272dc>
   3afd8:	mov	r0, r5
   3afdc:	mov	r1, r4
   3afe0:	bl	13a54 <bfd_elf_set_dt_needed_name@plt>
   3afe4:	ldr	r0, [r8]
   3afe8:	cmp	r0, #0
   3afec:	beq	3b000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273a8>
   3aff0:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3aff4:	tst	r0, #4
   3aff8:	movne	r1, #14
   3affc:	bne	3b004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273ac>
   3b000:	mov	r1, #2
   3b004:	mov	r0, r5
   3b008:	bl	137f0 <bfd_elf_set_dyn_lib_class@plt>
   3b00c:	ldr	r3, [r5, #4]
   3b010:	ldr	r1, [pc, #64]	; 3b058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27400>
   3b014:	mov	r0, r5
   3b018:	ldr	r3, [r3, #364]	; 0x16c
   3b01c:	blx	r3
   3b020:	cmp	r0, #0
   3b024:	bne	3af74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2731c>
   3b028:	mov	r2, #5
   3b02c:	ldr	r1, [pc, #80]	; 3b084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2742c>
   3b030:	bl	13460 <dcgettext@plt>
   3b034:	mov	r1, r5
   3b038:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3b03c:	b	3af74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2731c>
   3b040:	mov	r2, #5
   3b044:	ldr	r1, [pc, #60]	; 3b088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27430>
   3b048:	bl	13460 <dcgettext@plt>
   3b04c:	mov	r1, r5
   3b050:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3b054:	b	3ae58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27200>
   3b058:	andeq	r8, ip, ip, lsl #1
   3b05c:	andeq	r7, ip, r8, asr #29
   3b060:	andeq	fp, r3, r0, lsl sp
   3b064:	andeq	r7, r3, r4, asr r1
   3b068:	andeq	r4, r8, r8, asr #22
   3b06c:	andeq	r8, ip, r4, ror #3
   3b070:	muleq	r5, ip, sp
   3b074:	andeq	r7, ip, r8, lsl #30
   3b078:	andeq	sl, r3, ip, asr #4
   3b07c:	andeq	r4, r8, r0, ror fp
   3b080:	andeq	r4, r8, r0, asr fp
   3b084:	andeq	pc, r4, r8, ror fp	; <UNPREDICTABLE>
   3b088:	andeq	r4, r8, r4, lsl fp
   3b08c:	mov	r3, r1
   3b090:	ldr	r1, [r1, #4]
   3b094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b098:	sub	sp, sp, #36	; 0x24
   3b09c:	str	r1, [sp, #12]
   3b0a0:	ldrb	r1, [r1]
   3b0a4:	str	r2, [sp, #16]
   3b0a8:	cmp	r1, #47	; 0x2f
   3b0ac:	beq	3b3fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277a4>
   3b0b0:	cmp	r0, #0
   3b0b4:	mov	r4, r0
   3b0b8:	beq	3b2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27688>
   3b0bc:	ldrb	r2, [r0]
   3b0c0:	cmp	r2, #0
   3b0c4:	beq	3b2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27688>
   3b0c8:	ldr	r2, [sp, #12]
   3b0cc:	ldr	r3, [r3]
   3b0d0:	mov	r0, r2
   3b0d4:	str	r3, [sp, #24]
   3b0d8:	str	r2, [sp, #28]
   3b0dc:	bl	137d8 <strlen@plt>
   3b0e0:	ldr	fp, [pc, #808]	; 3b410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277b8>
   3b0e4:	add	r3, r0, #2
   3b0e8:	str	r3, [sp, #20]
   3b0ec:	ldr	r3, [pc, #800]	; 3b414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277bc>
   3b0f0:	mov	r0, r4
   3b0f4:	ldrb	r1, [r3, #72]	; 0x48
   3b0f8:	bl	137fc <strchr@plt>
   3b0fc:	subs	r9, r0, #0
   3b100:	beq	3b3e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27788>
   3b104:	ldr	r3, [sp, #20]
   3b108:	sub	r5, r9, r4
   3b10c:	add	r0, r5, r3
   3b110:	bl	13574 <xmalloc@plt>
   3b114:	cmp	r4, r9
   3b118:	mov	r6, r0
   3b11c:	beq	3b13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274e4>
   3b120:	mov	r1, r4
   3b124:	mov	r2, r5
   3b128:	bl	133b8 <memcpy@plt>
   3b12c:	add	r0, r5, #1
   3b130:	add	r0, r6, r0
   3b134:	mov	r3, #47	; 0x2f
   3b138:	strb	r3, [r6, r5]
   3b13c:	ldr	r1, [sp, #12]
   3b140:	bl	135d4 <strcpy@plt>
   3b144:	mov	r8, #0
   3b148:	str	r9, [sp, #8]
   3b14c:	b	3b258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27600>
   3b150:	ldr	r1, [pc, #704]	; 3b418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277c0>
   3b154:	mov	r0, r7
   3b158:	bl	13268 <strcmp@plt>
   3b15c:	cmp	r0, #0
   3b160:	beq	3b178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27520>
   3b164:	mov	r0, r7
   3b168:	ldr	r1, [pc, #684]	; 3b41c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277c4>
   3b16c:	bl	13268 <strcmp@plt>
   3b170:	cmp	r0, #0
   3b174:	bne	3b2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27664>
   3b178:	ldr	r3, [sp, #24]
   3b17c:	cmp	r3, #0
   3b180:	beq	3b3ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27754>
   3b184:	ldr	r9, [r3]
   3b188:	cmp	r9, #0
   3b18c:	beq	3b2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27664>
   3b190:	ldrb	r2, [r9]
   3b194:	cmp	r2, #47	; 0x2f
   3b198:	beq	3b3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27768>
   3b19c:	bl	134c0 <getpwd@plt>
   3b1a0:	mov	r7, r0
   3b1a4:	mov	r0, r9
   3b1a8:	bl	137d8 <strlen@plt>
   3b1ac:	mov	r8, r0
   3b1b0:	mov	r0, r7
   3b1b4:	bl	137d8 <strlen@plt>
   3b1b8:	add	r0, r8, r0
   3b1bc:	add	r0, r0, #2
   3b1c0:	bl	13574 <xmalloc@plt>
   3b1c4:	mov	r3, r9
   3b1c8:	mov	r2, r7
   3b1cc:	ldr	r1, [pc, #588]	; 3b420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277c8>
   3b1d0:	mov	r8, r0
   3b1d4:	bl	13a00 <sprintf@plt>
   3b1d8:	mov	r1, #47	; 0x2f
   3b1dc:	mov	r0, r8
   3b1e0:	bl	139ac <strrchr@plt>
   3b1e4:	cmp	r0, #0
   3b1e8:	beq	3b3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27778>
   3b1ec:	mov	r3, #0
   3b1f0:	strb	r3, [r0]
   3b1f4:	mov	r0, r8
   3b1f8:	bl	137d8 <strlen@plt>
   3b1fc:	mov	r7, r8
   3b200:	add	r0, sl, r0
   3b204:	bl	13574 <xmalloc@plt>
   3b208:	cmp	r4, #0
   3b20c:	sub	r5, r5, r6
   3b210:	mov	sl, r0
   3b214:	beq	3b388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27730>
   3b218:	add	r4, r4, #1
   3b21c:	str	r8, [sp]
   3b220:	mov	r3, r6
   3b224:	mov	r2, r5
   3b228:	ldr	r1, [pc, #500]	; 3b424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277cc>
   3b22c:	str	r4, [sp, #4]
   3b230:	bl	13a00 <sprintf@plt>
   3b234:	mov	r0, r8
   3b238:	bl	137d8 <strlen@plt>
   3b23c:	add	r8, r5, #1
   3b240:	add	r8, r8, r0
   3b244:	mov	r0, r6
   3b248:	bl	13364 <free@plt>
   3b24c:	mov	r6, sl
   3b250:	mov	r0, r7
   3b254:	bl	13364 <free@plt>
   3b258:	add	r0, r6, r8
   3b25c:	mov	r1, #36	; 0x24
   3b260:	bl	137fc <strchr@plt>
   3b264:	subs	r5, r0, #0
   3b268:	beq	3b34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276f4>
   3b26c:	mov	r1, #47	; 0x2f
   3b270:	bl	137fc <strchr@plt>
   3b274:	add	r8, r5, #1
   3b278:	mov	r4, r0
   3b27c:	mov	r0, r6
   3b280:	bl	137d8 <strlen@plt>
   3b284:	cmp	r4, #0
   3b288:	movne	r3, #0
   3b28c:	strbne	r3, [r4]
   3b290:	ldrb	r3, [r5, #1]
   3b294:	mov	sl, r0
   3b298:	cmp	r3, #123	; 0x7b
   3b29c:	addeq	r0, r5, #2
   3b2a0:	ldrbeq	r3, [r5, #2]
   3b2a4:	movne	r0, r8
   3b2a8:	add	r7, r0, #1
   3b2ac:	cmp	r3, #76	; 0x4c
   3b2b0:	beq	3b2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27694>
   3b2b4:	cmp	r3, #79	; 0x4f
   3b2b8:	beq	3b150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274f8>
   3b2bc:	ldr	r3, [fp]
   3b2c0:	cmp	r3, #0
   3b2c4:	bne	3b320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276c8>
   3b2c8:	cmp	r4, #0
   3b2cc:	movne	r3, #47	; 0x2f
   3b2d0:	strbne	r3, [r4]
   3b2d4:	sub	r8, r8, r6
   3b2d8:	mov	r7, #0
   3b2dc:	b	3b250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275f8>
   3b2e0:	mov	r0, #0
   3b2e4:	add	sp, sp, #36	; 0x24
   3b2e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b2ec:	ldr	r1, [pc, #308]	; 3b428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277d0>
   3b2f0:	mov	r0, r7
   3b2f4:	bl	13268 <strcmp@plt>
   3b2f8:	cmp	r0, #0
   3b2fc:	beq	3b33c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276e4>
   3b300:	mov	r0, r7
   3b304:	ldr	r1, [pc, #288]	; 3b42c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277d4>
   3b308:	bl	13268 <strcmp@plt>
   3b30c:	subs	r7, r0, #0
   3b310:	bne	3b2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27664>
   3b314:	mov	r0, #3
   3b318:	ldr	r8, [pc, #272]	; 3b430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277d8>
   3b31c:	b	3b200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275a8>
   3b320:	mov	r2, #5
   3b324:	ldr	r1, [pc, #264]	; 3b434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277dc>
   3b328:	mov	r0, #0
   3b32c:	bl	13460 <dcgettext@plt>
   3b330:	mov	r1, r5
   3b334:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   3b338:	b	3b2c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27670>
   3b33c:	mov	r7, r0
   3b340:	ldr	r8, [pc, #232]	; 3b430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277d8>
   3b344:	mov	r0, #3
   3b348:	b	3b200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275a8>
   3b34c:	ldr	r2, [sp, #16]
   3b350:	mov	r1, r6
   3b354:	add	r0, sp, #24
   3b358:	ldr	r9, [sp, #8]
   3b35c:	str	r6, [sp, #28]
   3b360:	bl	3adc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27170>
   3b364:	cmp	r0, #0
   3b368:	bne	3b3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27798>
   3b36c:	mov	r0, r6
   3b370:	bl	13364 <free@plt>
   3b374:	ldrb	r3, [r9]
   3b378:	cmp	r3, #0
   3b37c:	beq	3b2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27688>
   3b380:	add	r4, r9, #1
   3b384:	b	3b0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27494>
   3b388:	str	r8, [sp]
   3b38c:	mov	r3, r6
   3b390:	mov	r2, r5
   3b394:	ldr	r1, [pc, #156]	; 3b438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277e0>
   3b398:	bl	13a00 <sprintf@plt>
   3b39c:	mov	r0, r8
   3b3a0:	bl	137d8 <strlen@plt>
   3b3a4:	add	r8, r0, r5
   3b3a8:	b	3b244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275ec>
   3b3ac:	ldr	r3, [pc, #136]	; 3b43c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277e4>
   3b3b0:	ldr	r3, [r3, #48]	; 0x30
   3b3b4:	cmp	r3, #0
   3b3b8:	bne	3b184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2752c>
   3b3bc:	b	3b2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27664>
   3b3c0:	mov	r0, r9
   3b3c4:	bl	135a4 <xstrdup@plt>
   3b3c8:	mov	r8, r0
   3b3cc:	b	3b1d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27580>
   3b3d0:	mov	r0, r8
   3b3d4:	bl	137d8 <strlen@plt>
   3b3d8:	mov	r7, r8
   3b3dc:	b	3b200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275a8>
   3b3e0:	mov	r0, r4
   3b3e4:	bl	137d8 <strlen@plt>
   3b3e8:	add	r9, r4, r0
   3b3ec:	b	3b104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274ac>
   3b3f0:	mov	r0, #1
   3b3f4:	add	sp, sp, #36	; 0x24
   3b3f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b3fc:	ldr	r1, [sp, #12]
   3b400:	mov	r0, r3
   3b404:	bl	3adc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27170>
   3b408:	add	sp, sp, #36	; 0x24
   3b40c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b410:	andeq	r8, ip, r4, ror #3
   3b414:	andeq	r8, ip, r4, ror r1
   3b418:	andeq	r4, r8, r0, lsl #23
   3b41c:	andeq	r4, r8, r8, lsl #23
   3b420:	muleq	r8, r8, fp
   3b424:	muleq	r8, r4, fp
   3b428:	andeq	r3, r4, r0, asr sp
   3b42c:	muleq	r8, r0, fp
   3b430:	andeq	r5, r8, ip, asr #32
   3b434:	andeq	r4, r8, r8, lsr #23
   3b438:	andeq	r4, r8, r0, lsr #23
   3b43c:	andeq	r8, ip, ip, lsl #1
   3b440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b444:	sub	sp, sp, #52	; 0x34
   3b448:	ldr	sl, [pc, #2124]	; 3bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28044>
   3b44c:	bl	2d60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199b4>
   3b450:	ldr	r3, [sl, #28]
   3b454:	str	r3, [sp, #8]
   3b458:	ldr	r3, [r3, #40]	; 0x28
   3b45c:	cmp	r3, #1
   3b460:	bne	3b6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a70>
   3b464:	ldr	r4, [pc, #2100]	; 3bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28048>
   3b468:	ldr	r0, [r4, #32]
   3b46c:	cmp	r0, #0
   3b470:	beq	3b498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27840>
   3b474:	bl	13880 <unlink_if_ordinary@plt>
   3b478:	ldr	r3, [sl, #48]	; 0x30
   3b47c:	ldr	r0, [r4, #32]
   3b480:	ldr	r3, [r3, #4]
   3b484:	ldr	r1, [r3]
   3b488:	bl	13940 <bfd_openw@plt>
   3b48c:	cmp	r0, #0
   3b490:	str	r0, [sl, #52]	; 0x34
   3b494:	beq	3bc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28008>
   3b498:	ldr	r3, [pc, #2052]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b49c:	ldr	r0, [r3, #8]
   3b4a0:	cmp	r0, #0
   3b4a4:	ldreq	r3, [sl, #48]	; 0x30
   3b4a8:	beq	3b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27904>
   3b4ac:	ldr	r4, [sl, #56]	; 0x38
   3b4b0:	cmp	r4, #0
   3b4b4:	bne	3b4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27870>
   3b4b8:	b	3b908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cb0>
   3b4bc:	ldr	r4, [r4, #156]	; 0x9c
   3b4c0:	cmp	r4, #0
   3b4c4:	beq	3b908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cb0>
   3b4c8:	ldr	r3, [r4, #4]
   3b4cc:	ldr	r5, [r3, #4]
   3b4d0:	cmp	r5, #5
   3b4d4:	bne	3b4bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27864>
   3b4d8:	ldr	r3, [r4, #108]	; 0x6c
   3b4dc:	cmp	r3, #0
   3b4e0:	beq	3b4bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27864>
   3b4e4:	ldr	r3, [r4, #164]	; 0xa4
   3b4e8:	ldrb	r3, [r3, #36]	; 0x24
   3b4ec:	tst	r3, #16
   3b4f0:	bne	3b4bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27864>
   3b4f4:	bl	32100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4a8>
   3b4f8:	cmp	r0, #0
   3b4fc:	beq	3ba94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e3c>
   3b500:	adds	r6, r0, #16
   3b504:	beq	3ba94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e3c>
   3b508:	ldr	r2, [pc, #1944]	; 3bca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28050>
   3b50c:	mov	r0, r4
   3b510:	ldr	r1, [pc, #1940]	; 3bcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28054>
   3b514:	bl	132c8 <bfd_make_section_with_flags@plt>
   3b518:	subs	r2, r0, #0
   3b51c:	beq	3b8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c98>
   3b520:	ldr	r3, [sl, #48]	; 0x30
   3b524:	mov	r1, #2
   3b528:	str	r1, [r2, #64]	; 0x40
   3b52c:	ldr	r1, [r3, #160]	; 0xa0
   3b530:	ldr	ip, [pc, #1900]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b534:	ldr	r0, [r2, #140]	; 0x8c
   3b538:	ldr	r1, [r1, #2352]	; 0x930
   3b53c:	ldr	lr, [pc, #1900]	; 3bcb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28058>
   3b540:	ldr	ip, [ip, #8]
   3b544:	str	r2, [r1, #24]
   3b548:	str	lr, [r1, #16]
   3b54c:	str	ip, [r1, #20]
   3b550:	mov	r1, #7
   3b554:	str	r1, [r0, #4]
   3b558:	str	r6, [r2, #36]	; 0x24
   3b55c:	ldr	r3, [r3, #4]
   3b560:	ldr	r0, [pc, #1844]	; 3bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28044>
   3b564:	ldr	r3, [r3, #448]	; 0x1c0
   3b568:	ldr	r3, [r3, #444]	; 0x1bc
   3b56c:	blx	r3
   3b570:	ldrb	r3, [sl]
   3b574:	and	r3, r3, #3
   3b578:	cmp	r3, #2
   3b57c:	beq	3bab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e5c>
   3b580:	ldrb	r3, [sl, #4]
   3b584:	ands	r3, r3, #32
   3b588:	beq	3b964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d0c>
   3b58c:	ldr	r1, [pc, #1800]	; 3bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28044>
   3b590:	ldr	r0, [sl, #48]	; 0x30
   3b594:	bl	13610 <bfd_elf_get_needed_list@plt>
   3b598:	subs	r6, r0, #0
   3b59c:	movne	r9, r6
   3b5a0:	beq	3b6b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a60>
   3b5a4:	ldr	r0, [r9, #4]
   3b5a8:	cmp	r0, #0
   3b5ac:	beq	3b5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27980>
   3b5b0:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3b5b4:	tst	r0, #1
   3b5b8:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b5bc:	ldr	r0, [r9, #4]
   3b5c0:	cmp	r0, #0
   3b5c4:	beq	3b5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27980>
   3b5c8:	ldrh	r3, [sl, #2]
   3b5cc:	and	r3, r3, #384	; 0x180
   3b5d0:	cmp	r3, #128	; 0x80
   3b5d4:	beq	3b6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a84>
   3b5d8:	cmp	r6, r9
   3b5dc:	movne	r4, r6
   3b5e0:	beq	3b61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279c4>
   3b5e4:	ldr	r3, [r4, #4]
   3b5e8:	subs	r0, r3, #0
   3b5ec:	beq	3b5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279a4>
   3b5f0:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3b5f4:	tst	r0, #1
   3b5f8:	bne	3b610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279b8>
   3b5fc:	ldr	r1, [r9, #8]
   3b600:	ldr	r0, [r4, #8]
   3b604:	bl	13268 <strcmp@plt>
   3b608:	cmp	r0, #0
   3b60c:	beq	3b6d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a78>
   3b610:	ldr	r4, [r4]
   3b614:	cmp	r4, r9
   3b618:	bne	3b5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2798c>
   3b61c:	ldr	r2, [pc, #1664]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b620:	ldr	r1, [pc, #1676]	; 3bcb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2805c>
   3b624:	mov	r4, r2
   3b628:	mov	r3, #0
   3b62c:	ldr	r0, [pc, #1668]	; 3bcb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28060>
   3b630:	str	r3, [r2, #60]	; 0x3c
   3b634:	str	r9, [r2, #168]	; 0xa8
   3b638:	str	r1, [r2, #4]
   3b63c:	bl	22f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf32c>
   3b640:	ldr	r3, [r4, #60]	; 0x3c
   3b644:	cmp	r3, #0
   3b648:	beq	3b65c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a04>
   3b64c:	ldr	r0, [r3, #16]
   3b650:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3b654:	tst	r0, #1
   3b658:	beq	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b65c:	ldr	r3, [pc, #1624]	; 3bcbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28064>
   3b660:	ldr	r2, [r3]
   3b664:	ldr	r3, [r9, #4]
   3b668:	cmp	r2, #0
   3b66c:	ldr	r2, [r9, #8]
   3b670:	str	r3, [sp, #20]
   3b674:	strd	r2, [sp, #24]
   3b678:	bne	3bb6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f14>
   3b67c:	ldr	r3, [pc, #1568]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b680:	ldr	r3, [r3, #60]	; 0x3c
   3b684:	cmp	r3, #0
   3b688:	beq	3b6ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a94>
   3b68c:	ldr	r3, [r3, #8]
   3b690:	mov	r2, #1
   3b694:	mov	r1, r3
   3b698:	add	r0, sp, #28
   3b69c:	str	r3, [sp, #32]
   3b6a0:	bl	3adc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27170>
   3b6a4:	cmp	r0, #0
   3b6a8:	beq	3b6ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a94>
   3b6ac:	ldr	r9, [r9]
   3b6b0:	cmp	r9, #0
   3b6b4:	bne	3b5a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2794c>
   3b6b8:	ldrb	r3, [sl, #3]
   3b6bc:	and	r3, r3, #192	; 0xc0
   3b6c0:	cmp	r3, #128	; 0x80
   3b6c4:	beq	3bae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e90>
   3b6c8:	add	sp, sp, #52	; 0x34
   3b6cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b6d0:	cmp	r9, r4
   3b6d4:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b6d8:	b	3b61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279c4>
   3b6dc:	bl	134e4 <bfd_elf_get_dyn_lib_class@plt>
   3b6e0:	tst	r0, #4
   3b6e4:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b6e8:	b	3b5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27980>
   3b6ec:	mov	r7, #0
   3b6f0:	ldr	r8, [pc, #1448]	; 3bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28048>
   3b6f4:	mov	r2, r7
   3b6f8:	add	r1, sp, #20
   3b6fc:	ldr	r0, [r8, #72]	; 0x48
   3b700:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b704:	cmp	r0, #0
   3b708:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b70c:	ldr	r0, [r8, #68]	; 0x44
   3b710:	cmp	r0, #0
   3b714:	beq	3b920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cc8>
   3b718:	bl	39cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26054>
   3b71c:	mov	r2, r7
   3b720:	add	r1, sp, #20
   3b724:	mov	r5, r0
   3b728:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b72c:	mov	r4, r0
   3b730:	mov	r0, r5
   3b734:	bl	13364 <free@plt>
   3b738:	cmp	r4, #0
   3b73c:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b740:	ldr	r3, [r8, #72]	; 0x48
   3b744:	cmp	r3, #0
   3b748:	bne	3b75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b74c:	ldr	r3, [pc, #1356]	; 3bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28048>
   3b750:	ldr	r3, [r3, #68]	; 0x44
   3b754:	cmp	r3, #0
   3b758:	beq	3b930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cd8>
   3b75c:	ldr	r0, [pc, #1372]	; 3bcc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28068>
   3b760:	bl	136b8 <getenv@plt>
   3b764:	cmp	r0, #0
   3b768:	beq	3b780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b28>
   3b76c:	mov	r2, r7
   3b770:	add	r1, sp, #20
   3b774:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b778:	cmp	r0, #0
   3b77c:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b780:	ldr	r1, [pc, #1300]	; 3bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28044>
   3b784:	ldr	r0, [sl, #48]	; 0x30
   3b788:	bl	1331c <bfd_elf_get_runpath_list@plt>
   3b78c:	subs	r4, r0, #0
   3b790:	bne	3b7b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b5c>
   3b794:	b	3b7fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ba4>
   3b798:	mov	r0, fp
   3b79c:	bl	13364 <free@plt>
   3b7a0:	ldr	r4, [r4]
   3b7a4:	cmp	r4, #0
   3b7a8:	moveq	r5, #0
   3b7ac:	cmp	r5, #0
   3b7b0:	beq	3b7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b9c>
   3b7b4:	ldr	r0, [r4, #8]
   3b7b8:	bl	39cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26054>
   3b7bc:	ldr	r2, [r4, #4]
   3b7c0:	ldr	r3, [r9, #4]
   3b7c4:	mov	r5, #1
   3b7c8:	cmp	r2, r3
   3b7cc:	mov	r8, #0
   3b7d0:	mov	fp, r0
   3b7d4:	bne	3b798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b40>
   3b7d8:	mov	r2, r7
   3b7dc:	add	r1, sp, #20
   3b7e0:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b7e4:	cmp	r0, r8
   3b7e8:	movne	r8, r5
   3b7ec:	movne	r5, #0
   3b7f0:	b	3b798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b40>
   3b7f4:	cmp	r8, #0
   3b7f8:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b7fc:	ldr	r3, [pc, #1184]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b800:	ldr	r3, [r3, #184]	; 0xb8
   3b804:	cmp	r3, #0
   3b808:	beq	3bb8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f34>
   3b80c:	ldr	r3, [pc, #1168]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b810:	ldr	r4, [r3, #188]	; 0xbc
   3b814:	cmp	r4, #0
   3b818:	ldr	r3, [r9, #8]
   3b81c:	beq	3b848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27bf0>
   3b820:	ldr	r1, [r9, #4]
   3b824:	mov	r0, r4
   3b828:	str	r1, [sp, #36]	; 0x24
   3b82c:	mov	r2, r7
   3b830:	add	r1, sp, #36	; 0x24
   3b834:	str	r3, [sp, #40]	; 0x28
   3b838:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b83c:	cmp	r0, #0
   3b840:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b844:	ldr	r3, [r9, #8]
   3b848:	mov	r0, r3
   3b84c:	bl	137d8 <strlen@plt>
   3b850:	ldr	r3, [pc, #1132]	; 3bcc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2806c>
   3b854:	ldr	r4, [r3]
   3b858:	cmp	r4, #0
   3b85c:	beq	3b8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c70>
   3b860:	ldr	fp, [pc, #1120]	; 3bcc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28070>
   3b864:	add	r8, r0, #2
   3b868:	ldr	r3, [r4, #8]
   3b86c:	cmp	r3, #0
   3b870:	bne	3b8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c64>
   3b874:	ldr	r0, [r4, #4]
   3b878:	bl	137d8 <strlen@plt>
   3b87c:	add	r0, r8, r0
   3b880:	bl	13574 <xmalloc@plt>
   3b884:	ldr	r3, [r9, #8]
   3b888:	ldr	r2, [r4, #4]
   3b88c:	mov	r1, fp
   3b890:	mov	r5, r0
   3b894:	bl	13a00 <sprintf@plt>
   3b898:	mov	r1, r5
   3b89c:	mov	r2, r7
   3b8a0:	add	r0, sp, #28
   3b8a4:	str	r5, [sp, #32]
   3b8a8:	bl	3adc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27170>
   3b8ac:	cmp	r0, #0
   3b8b0:	mov	r0, r5
   3b8b4:	bne	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b8b8:	bl	13364 <free@plt>
   3b8bc:	ldr	r4, [r4]
   3b8c0:	cmp	r4, #0
   3b8c4:	bne	3b868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c10>
   3b8c8:	cmp	r7, #1
   3b8cc:	bne	3bb64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f0c>
   3b8d0:	mov	r2, #5
   3b8d4:	ldr	r1, [pc, #1008]	; 3bccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28074>
   3b8d8:	mov	r0, #0
   3b8dc:	bl	13460 <dcgettext@plt>
   3b8e0:	ldr	r2, [r9, #4]
   3b8e4:	ldr	r1, [r9, #8]
   3b8e8:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3b8ec:	b	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b8f0:	mov	r2, r5
   3b8f4:	ldr	r1, [pc, #980]	; 3bcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28078>
   3b8f8:	bl	13460 <dcgettext@plt>
   3b8fc:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3b900:	ldr	r3, [pc, #924]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b904:	ldr	r0, [r3, #8]
   3b908:	bl	13364 <free@plt>
   3b90c:	ldr	r1, [pc, #912]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3b910:	mov	r2, #0
   3b914:	ldr	r3, [sl, #48]	; 0x30
   3b918:	str	r2, [r1, #8]
   3b91c:	b	3b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27904>
   3b920:	ldr	r3, [pc, #888]	; 3bca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28048>
   3b924:	ldr	r3, [r3, #72]	; 0x48
   3b928:	cmp	r3, #0
   3b92c:	bne	3b75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b930:	ldr	r0, [pc, #924]	; 3bcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2807c>
   3b934:	bl	136b8 <getenv@plt>
   3b938:	subs	r3, r0, #0
   3b93c:	beq	3b75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b940:	ldrb	r3, [r3]
   3b944:	cmp	r3, #0
   3b948:	beq	3b75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b94c:	mov	r2, r7
   3b950:	add	r1, sp, #20
   3b954:	bl	3b08c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27434>
   3b958:	cmp	r0, #0
   3b95c:	beq	3b75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b960:	b	3b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b964:	ldr	r6, [sl, #56]	; 0x38
   3b968:	cmp	r6, #0
   3b96c:	beq	3b58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27934>
   3b970:	str	r3, [sp]
   3b974:	ldr	r8, [pc, #860]	; 3bcd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28080>
   3b978:	ldr	r7, [pc, #860]	; 3bcdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28084>
   3b97c:	ldr	r9, [pc, #860]	; 3bce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28088>
   3b980:	str	r3, [sp, #12]
   3b984:	str	r3, [sp, #4]
   3b988:	b	3b998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d40>
   3b98c:	ldr	r6, [r6, #156]	; 0x9c
   3b990:	cmp	r6, #0
   3b994:	beq	3ba54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dfc>
   3b998:	ldr	r3, [r6, #164]	; 0xa4
   3b99c:	ldrb	r5, [r3, #36]	; 0x24
   3b9a0:	ands	r5, r5, #16
   3b9a4:	bne	3b98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d34>
   3b9a8:	ldr	r4, [r6, #100]	; 0x64
   3b9ac:	cmp	r4, #0
   3b9b0:	bne	3b9dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d84>
   3b9b4:	b	3ba30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dd8>
   3b9b8:	bl	13268 <strcmp@plt>
   3b9bc:	cmp	r0, #0
   3b9c0:	bne	3b9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d78>
   3b9c4:	ldr	r3, [r4, #36]	; 0x24
   3b9c8:	cmp	r3, #9
   3b9cc:	movcs	r5, #1
   3b9d0:	ldr	r4, [r4, #12]
   3b9d4:	cmp	r4, #0
   3b9d8:	beq	3bb10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27eb8>
   3b9dc:	ldr	r3, [r4, #60]	; 0x3c
   3b9e0:	mov	r2, #15
   3b9e4:	cmp	r3, r8
   3b9e8:	mov	r1, r7
   3b9ec:	ldr	fp, [r4]
   3b9f0:	beq	3b9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d78>
   3b9f4:	mov	r0, fp
   3b9f8:	bl	13bb0 <strncmp@plt>
   3b9fc:	mov	r1, r9
   3ba00:	cmp	r0, #0
   3ba04:	mov	r0, fp
   3ba08:	bne	3b9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d60>
   3ba0c:	mov	r5, #2
   3ba10:	ldr	r3, [sp]
   3ba14:	cmp	r3, #0
   3ba18:	beq	3bb1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ec4>
   3ba1c:	cmp	r5, r3
   3ba20:	bne	3bc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28020>
   3ba24:	ldr	r3, [sp, #4]
   3ba28:	cmp	r3, #0
   3ba2c:	beq	3bb2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ed4>
   3ba30:	ldr	r3, [sp]
   3ba34:	ldr	r6, [r6, #156]	; 0x9c
   3ba38:	cmp	r3, #2
   3ba3c:	ldrbeq	r3, [sl, #3]
   3ba40:	biceq	r3, r3, #64	; 0x40
   3ba44:	orreq	r3, r3, #128	; 0x80
   3ba48:	strbeq	r3, [sl, #3]
   3ba4c:	cmp	r6, #0
   3ba50:	bne	3b998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d40>
   3ba54:	ldr	r0, [sp, #4]
   3ba58:	cmp	r0, #0
   3ba5c:	beq	3bc00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fa8>
   3ba60:	ldr	r3, [r0, #4]
   3ba64:	ldr	r1, [pc, #632]	; 3bce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2808c>
   3ba68:	ldr	r3, [r3, #448]	; 0x1c0
   3ba6c:	ldr	r2, [r3, #32]
   3ba70:	orr	r2, r2, #8
   3ba74:	bl	132c8 <bfd_make_section_with_flags@plt>
   3ba78:	cmp	r0, #0
   3ba7c:	beq	3bc00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fa8>
   3ba80:	mov	r3, #2
   3ba84:	str	r3, [r0, #64]	; 0x40
   3ba88:	ldr	r3, [sp, #8]
   3ba8c:	str	r0, [r3, #172]	; 0xac
   3ba90:	b	3b58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27934>
   3ba94:	mov	r2, #5
   3ba98:	ldr	r1, [pc, #584]	; 3bce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28090>
   3ba9c:	mov	r0, #0
   3baa0:	bl	13460 <dcgettext@plt>
   3baa4:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3baa8:	ldr	r3, [pc, #500]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3baac:	ldr	r0, [r3, #8]
   3bab0:	b	3b908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cb0>
   3bab4:	ldrb	r3, [sl, #6]
   3bab8:	ldrb	r2, [sl, #5]
   3babc:	mvn	r3, r3
   3bac0:	and	r3, r3, #1
   3bac4:	cmp	r3, r2, lsr #7
   3bac8:	bne	3b6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a70>
   3bacc:	lsr	r2, r2, #3
   3bad0:	and	r2, r2, #16
   3bad4:	orr	r2, r2, #8
   3bad8:	ldr	r0, [sl, #56]	; 0x38
   3badc:	ldr	r1, [pc, #520]	; 3bcec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28094>
   3bae0:	bl	132c8 <bfd_make_section_with_flags@plt>
   3bae4:	b	3b6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a70>
   3bae8:	ldr	r1, [pc, #428]	; 3bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28044>
   3baec:	mov	r0, #0
   3baf0:	bl	13868 <bfd_elf_parse_eh_frame_entries@plt>
   3baf4:	cmp	r0, #0
   3baf8:	bne	3b6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a70>
   3bafc:	mov	r2, #5
   3bb00:	ldr	r1, [pc, #488]	; 3bcf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28098>
   3bb04:	bl	13460 <dcgettext@plt>
   3bb08:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3bb0c:	b	3b6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a70>
   3bb10:	cmp	r5, #0
   3bb14:	beq	3ba30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dd8>
   3bb18:	b	3ba10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27db8>
   3bb1c:	ldr	r3, [sp, #4]
   3bb20:	str	r5, [sp]
   3bb24:	cmp	r3, #0
   3bb28:	bne	3ba30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dd8>
   3bb2c:	cmp	r5, #2
   3bb30:	beq	3bb40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ee8>
   3bb34:	ldrb	r3, [sl, #3]
   3bb38:	tst	r3, #192	; 0xc0
   3bb3c:	beq	3ba30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dd8>
   3bb40:	ldr	r3, [r6, #4]
   3bb44:	mov	r2, #1
   3bb48:	str	r2, [sp, #12]
   3bb4c:	ldr	r3, [r3, #4]
   3bb50:	ldr	r2, [sp, #4]
   3bb54:	cmp	r3, #5
   3bb58:	moveq	r2, r6
   3bb5c:	str	r2, [sp, #4]
   3bb60:	b	3ba30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dd8>
   3bb64:	mov	r7, #1
   3bb68:	b	3b6f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a98>
   3bb6c:	mov	r2, #5
   3bb70:	ldr	r1, [pc, #380]	; 3bcf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2809c>
   3bb74:	mov	r0, #0
   3bb78:	bl	13460 <dcgettext@plt>
   3bb7c:	ldr	r2, [r9, #4]
   3bb80:	ldr	r1, [r9, #8]
   3bb84:	bl	2ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   3bb88:	b	3b67c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a24>
   3bb8c:	ldr	r0, [pc, #356]	; 3bcf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280a0>
   3bb90:	mov	r2, r3
   3bb94:	ldr	r1, [pc, #352]	; 3bcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280a4>
   3bb98:	ldr	r0, [r0]
   3bb9c:	str	r3, [sp, #36]	; 0x24
   3bba0:	str	r3, [sp, #44]	; 0x2c
   3bba4:	str	r3, [sp, #40]	; 0x28
   3bba8:	bl	1352c <concat@plt>
   3bbac:	mov	r1, r0
   3bbb0:	mov	r4, r0
   3bbb4:	add	r0, sp, #36	; 0x24
   3bbb8:	bl	39d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3bbbc:	subs	r5, r0, #0
   3bbc0:	beq	3bc30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fd8>
   3bbc4:	mov	r0, r4
   3bbc8:	bl	13364 <free@plt>
   3bbcc:	ldr	r0, [sp, #36]	; 0x24
   3bbd0:	cmp	r0, #0
   3bbd4:	beq	3bc24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fcc>
   3bbd8:	bl	39cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26054>
   3bbdc:	ldr	r3, [pc, #192]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3bbe0:	mov	r4, r0
   3bbe4:	ldr	r0, [sp, #36]	; 0x24
   3bbe8:	str	r4, [r3, #188]	; 0xbc
   3bbec:	bl	13364 <free@plt>
   3bbf0:	ldr	r2, [pc, #172]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3bbf4:	mov	r3, #1
   3bbf8:	str	r3, [r2, #184]	; 0xb8
   3bbfc:	b	3b814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27bbc>
   3bc00:	ldr	r3, [sp, #12]
   3bc04:	cmp	r3, #0
   3bc08:	beq	3b58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27934>
   3bc0c:	mov	r2, #5
   3bc10:	ldr	r1, [pc, #232]	; 3bd00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280a8>
   3bc14:	mov	r0, #0
   3bc18:	bl	13460 <dcgettext@plt>
   3bc1c:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3bc20:	b	3b58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27934>
   3bc24:	ldr	r3, [pc, #120]	; 3bca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2804c>
   3bc28:	ldr	r4, [r3, #188]	; 0xbc
   3bc2c:	b	3bbf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f98>
   3bc30:	mov	r0, r4
   3bc34:	bl	13364 <free@plt>
   3bc38:	ldr	r3, [pc, #184]	; 3bcf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280a0>
   3bc3c:	mov	r2, r5
   3bc40:	ldr	r1, [pc, #188]	; 3bd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280ac>
   3bc44:	ldr	r0, [r3]
   3bc48:	bl	1352c <concat@plt>
   3bc4c:	mov	r4, r0
   3bc50:	mov	r1, r0
   3bc54:	add	r0, sp, #36	; 0x24
   3bc58:	bl	39d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3bc5c:	b	3bbc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f6c>
   3bc60:	mov	r2, #5
   3bc64:	ldr	r1, [pc, #156]	; 3bd08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280b0>
   3bc68:	bl	13460 <dcgettext@plt>
   3bc6c:	ldr	r1, [r4, #32]
   3bc70:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3bc74:	b	3b498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27840>
   3bc78:	mov	r2, #5
   3bc7c:	ldr	r1, [pc, #136]	; 3bd0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280b4>
   3bc80:	mov	r0, #0
   3bc84:	bl	13460 <dcgettext@plt>
   3bc88:	cmp	r5, #1
   3bc8c:	ldr	r1, [sp, #4]
   3bc90:	moveq	r1, r6
   3bc94:	bl	2ea4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adf4>
   3bc98:	b	3ba54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dfc>
   3bc9c:	andeq	r8, ip, ip, lsl #1
   3bca0:	andeq	r8, ip, r8, lsl r1
   3bca4:	andeq	r7, ip, r8, asr #29
   3bca8:	andseq	r4, r0, fp, lsr #32
   3bcac:	andeq	r4, r8, ip, lsr ip
   3bcb0:	andeq	r9, r3, ip, asr #22
   3bcb4:	andeq	sl, r3, ip, ror #25
   3bcb8:	andeq	r7, r3, r4, asr r1
   3bcbc:	andeq	r8, ip, r4, ror #3
   3bcc0:	andeq	r4, r8, r8, lsl #27
   3bcc4:	andeq	r8, ip, r8, asr r2
   3bcc8:	muleq	r8, r8, fp
   3bccc:	ldrdeq	r4, [r8], -r4	; <UNPREDICTABLE>
   3bcd0:	andeq	r4, r8, r0, asr ip
   3bcd4:	andeq	r4, r8, r8, lsl #16
   3bcd8:	andeq	r7, ip, r8, lsr #17
   3bcdc:	andeq	r4, r8, ip, lsr #25
   3bce0:			; <UNDEFINED> instruction: 0x00084cbc
   3bce4:	andeq	r4, r8, r8, lsl sp
   3bce8:	andeq	r4, r8, r8, lsl #24
   3bcec:	muleq	r8, ip, ip
   3bcf0:	andeq	r4, r8, ip, lsr #27
   3bcf4:	andeq	r4, r8, r4, ror sp
   3bcf8:	andeq	r8, ip, r4, lsl r1
   3bcfc:	muleq	r8, r8, sp
   3bd00:	andeq	r4, r8, r8, lsr #26
   3bd04:	muleq	r8, ip, sp
   3bd08:	andeq	r4, r8, r0, ror #23
   3bd0c:	andeq	r4, r8, r8, asr #25
   3bd10:	push	{r4, r5, r6, r7, r8, lr}
   3bd14:	ldr	r8, [pc, #208]	; 3bdec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28194>
   3bd18:	ldr	r3, [r8, #180]	; 0xb4
   3bd1c:	cmp	r3, #0
   3bd20:	popne	{r4, r5, r6, r7, r8, pc}
   3bd24:	ldr	r3, [r0, #16]
   3bd28:	cmp	r3, #0
   3bd2c:	popeq	{r4, r5, r6, r7, r8, pc}
   3bd30:	ldr	r2, [r3, #40]	; 0x28
   3bd34:	tst	r2, #2048	; 0x800
   3bd38:	popeq	{r4, r5, r6, r7, r8, pc}
   3bd3c:	mov	r4, r0
   3bd40:	mov	r0, r3
   3bd44:	bl	134cc <bfd_elf_get_dt_soname@plt>
   3bd48:	subs	r6, r0, #0
   3bd4c:	beq	3bdd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28180>
   3bd50:	ldr	r4, [r8, #176]	; 0xb0
   3bd54:	cmp	r4, #0
   3bd58:	popeq	{r4, r5, r6, r7, r8, pc}
   3bd5c:	ldr	r7, [pc, #140]	; 3bdf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28198>
   3bd60:	b	3bd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28118>
   3bd64:	ldr	r4, [r4]
   3bd68:	cmp	r4, #0
   3bd6c:	popeq	{r4, r5, r6, r7, r8, pc}
   3bd70:	ldr	r1, [r4, #8]
   3bd74:	mov	r0, r6
   3bd78:	bl	13394 <filename_cmp@plt>
   3bd7c:	mov	r1, #47	; 0x2f
   3bd80:	cmp	r0, #0
   3bd84:	beq	3bd64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2810c>
   3bd88:	ldr	r5, [r4, #8]
   3bd8c:	mov	r0, r5
   3bd90:	bl	137fc <strchr@plt>
   3bd94:	mov	r1, r7
   3bd98:	cmp	r0, #0
   3bd9c:	mov	r0, r5
   3bda0:	bne	3bd64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2810c>
   3bda4:	bl	131f0 <strstr@plt>
   3bda8:	mov	r1, r5
   3bdac:	subs	r2, r0, #0
   3bdb0:	add	r2, r2, #4
   3bdb4:	sub	r2, r2, r5
   3bdb8:	mov	r0, r6
   3bdbc:	beq	3bd64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2810c>
   3bdc0:	bl	13538 <filename_ncmp@plt>
   3bdc4:	cmp	r0, #0
   3bdc8:	bne	3bd64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2810c>
   3bdcc:	mov	r3, #1
   3bdd0:	str	r3, [r8, #180]	; 0xb4
   3bdd4:	pop	{r4, r5, r6, r7, r8, pc}
   3bdd8:	ldr	r3, [r4, #16]
   3bddc:	ldr	r0, [r3]
   3bde0:	bl	1367c <lbasename@plt>
   3bde4:	mov	r6, r0
   3bde8:	b	3bd50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280f8>
   3bdec:	andeq	r7, ip, r8, asr #29
   3bdf0:	andeq	r4, r8, r0, lsr sl
   3bdf4:	push	{lr}		; (str lr, [sp, #-4]!)
   3bdf8:	mov	r3, #0
   3bdfc:	ldr	lr, [pc, #40]	; 3be2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281d4>
   3be00:	ldr	ip, [pc, #40]	; 3be30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281d8>
   3be04:	ldr	r1, [pc, #40]	; 3be34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281dc>
   3be08:	ldr	r2, [pc, #40]	; 3be38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281e0>
   3be0c:	str	lr, [r0]
   3be10:	str	ip, [r0, #4]
   3be14:	str	r1, [r0, #8]
   3be18:	str	r2, [r0, #12]
   3be1c:	str	r3, [r0, #20]
   3be20:	str	r3, [r0, #16]
   3be24:	str	r3, [r0, #24]
   3be28:	pop	{pc}		; (ldr pc, [sp], #4)
   3be2c:	strbvs	r2, [r5, -r1, lsl #6]
   3be30:	svc	0x00cdab89
   3be34:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   3be38:	eorsne	r5, r2, r6, ror r4
   3be3c:	push	{r4, r5, lr}
   3be40:	sub	sp, sp, #20
   3be44:	ldrd	r2, [r0, #8]
   3be48:	ldr	r5, [r0]
   3be4c:	ldr	r4, [r0, #4]
   3be50:	mov	ip, sp
   3be54:	mov	lr, r1
   3be58:	str	r5, [sp]
   3be5c:	str	r4, [sp, #4]
   3be60:	strd	r2, [sp, #8]
   3be64:	ldm	ip!, {r0, r1, r2, r3}
   3be68:	str	r0, [lr]
   3be6c:	str	r1, [lr, #4]
   3be70:	mov	r0, lr
   3be74:	str	r2, [lr, #8]
   3be78:	str	r3, [lr, #12]
   3be7c:	add	sp, sp, #20
   3be80:	pop	{r4, r5, pc}
   3be84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3be88:	sub	sp, sp, #20
   3be8c:	ldr	r3, [r2, #16]
   3be90:	mov	r4, r2
   3be94:	adds	r3, r3, r1
   3be98:	str	r2, [sp, #12]
   3be9c:	ldr	r2, [r2, #20]
   3bea0:	movcs	ip, #1
   3bea4:	movcc	ip, #0
   3bea8:	add	r2, r2, ip
   3beac:	str	r3, [r4, #16]
   3beb0:	str	r2, [r4, #20]
   3beb4:	ldr	r3, [r4]
   3beb8:	mov	r2, r4
   3bebc:	bic	r1, r1, #3
   3bec0:	add	lr, r0, r1
   3bec4:	str	r3, [sp, #4]
   3bec8:	ldr	r3, [r2, #12]
   3becc:	cmp	r0, lr
   3bed0:	str	r3, [sp]
   3bed4:	ldr	lr, [r4, #4]
   3bed8:	ldr	r4, [r4, #8]
   3bedc:	bcs	3c7dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28b84>
   3bee0:	sub	r1, r1, #1
   3bee4:	bic	r3, r1, #63	; 0x3f
   3bee8:	add	r2, r0, #128	; 0x80
   3beec:	add	r9, r0, #64	; 0x40
   3bef0:	add	r3, r3, r2
   3bef4:	str	r3, [sp, #8]
   3bef8:	ldr	r3, [sp, #4]
   3befc:	ldr	r2, [sp]
   3bf00:	add	r3, r3, #-687865856	; 0xd7000000
   3bf04:	add	r3, r3, #6946816	; 0x6a0000
   3bf08:	ldr	r1, [r9, #-64]	; 0xffffffc0
   3bf0c:	eor	r7, r4, r2
   3bf10:	add	r3, r3, #41984	; 0xa400
   3bf14:	and	r7, r7, lr
   3bf18:	add	r3, r3, #120	; 0x78
   3bf1c:	add	r3, r3, r1
   3bf20:	eor	r7, r7, r2
   3bf24:	add	r7, r7, r3
   3bf28:	ldr	r5, [pc, #2256]	; 3c800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28ba8>
   3bf2c:	add	r7, lr, r7, ror #25
   3bf30:	ldr	r1, [r9, #-60]	; 0xffffffc4
   3bf34:	eor	r6, lr, r4
   3bf38:	and	r6, r6, r7
   3bf3c:	add	r5, r2, r5
   3bf40:	add	r5, r5, r1
   3bf44:	eor	r6, r6, r4
   3bf48:	add	r6, r6, r5
   3bf4c:	ldr	r0, [pc, #2224]	; 3c804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bac>
   3bf50:	add	r6, r7, r6, ror #20
   3bf54:	ldr	r1, [r9, #-56]	; 0xffffffc8
   3bf58:	eor	ip, r7, lr
   3bf5c:	and	ip, ip, r6
   3bf60:	add	r0, r4, r0
   3bf64:	add	r0, r0, r1
   3bf68:	eor	ip, ip, lr
   3bf6c:	add	ip, ip, r0
   3bf70:	ldr	r2, [pc, #2192]	; 3c808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bb0>
   3bf74:	add	ip, r6, ip, ror #15
   3bf78:	ldr	r0, [r9, #-52]	; 0xffffffcc
   3bf7c:	eor	r1, r7, r6
   3bf80:	and	r1, r1, ip
   3bf84:	add	r2, lr, r2
   3bf88:	add	r2, r2, r0
   3bf8c:	eor	r1, r1, r7
   3bf90:	ldr	r0, [r9, #-48]	; 0xffffffd0
   3bf94:	add	r1, r1, r2
   3bf98:	ldr	r3, [pc, #2156]	; 3c80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bb4>
   3bf9c:	add	r1, ip, r1, ror #10
   3bfa0:	eor	r2, r6, ip
   3bfa4:	add	r3, r0, r3
   3bfa8:	ldr	r0, [r9, #-44]	; 0xffffffd4
   3bfac:	and	r2, r2, r1
   3bfb0:	add	r7, r3, r7
   3bfb4:	add	r0, r0, #1191182336	; 0x47000000
   3bfb8:	eor	r3, r2, r6
   3bfbc:	add	r3, r3, r7
   3bfc0:	add	r0, r0, #8847360	; 0x870000
   3bfc4:	add	r0, r0, #50688	; 0xc600
   3bfc8:	add	r3, r1, r3, ror #25
   3bfcc:	eor	r2, ip, r1
   3bfd0:	add	r0, r0, #42	; 0x2a
   3bfd4:	and	r2, r2, r3
   3bfd8:	add	r6, r0, r6
   3bfdc:	ldr	r0, [r9, #-40]	; 0xffffffd8
   3bfe0:	eor	r5, r2, ip
   3bfe4:	add	r5, r5, r6
   3bfe8:	add	r0, r0, #-1476395008	; 0xa8000000
   3bfec:	add	r0, r0, #3162112	; 0x304000
   3bff0:	add	r5, r3, r5, ror #20
   3bff4:	eor	r2, r1, r3
   3bff8:	add	r0, r0, #1552	; 0x610
   3bffc:	and	r2, r2, r5
   3c000:	add	r0, r0, #3
   3c004:	add	ip, r0, ip
   3c008:	eor	r0, r2, r1
   3c00c:	add	r0, r0, ip
   3c010:	ldr	sl, [r9, #-36]	; 0xffffffdc
   3c014:	ldr	r2, [pc, #2036]	; 3c810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bb8>
   3c018:	add	r0, r5, r0, ror #15
   3c01c:	eor	ip, r3, r5
   3c020:	add	r2, sl, r2
   3c024:	and	ip, ip, r0
   3c028:	add	r1, r2, r1
   3c02c:	eor	r2, ip, r3
   3c030:	ldr	ip, [r9, #-32]	; 0xffffffe0
   3c034:	add	r2, r2, r1
   3c038:	add	ip, ip, #1761607680	; 0x69000000
   3c03c:	add	ip, ip, #8388608	; 0x800000
   3c040:	add	r2, r0, r2, ror #10
   3c044:	eor	r1, r5, r0
   3c048:	add	ip, ip, #38912	; 0x9800
   3c04c:	and	r1, r1, r2
   3c050:	add	ip, ip, #216	; 0xd8
   3c054:	add	r3, ip, r3
   3c058:	eor	r8, r1, r5
   3c05c:	add	r8, r8, r3
   3c060:	ldr	ip, [r9, #-28]	; 0xffffffe4
   3c064:	ldr	r1, [pc, #1960]	; 3c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bbc>
   3c068:	add	r8, r2, r8, ror #25
   3c06c:	eor	r3, r0, r2
   3c070:	add	r1, ip, r1
   3c074:	and	r3, r3, r8
   3c078:	add	r5, r1, r5
   3c07c:	eor	r6, r3, r0
   3c080:	ldr	r1, [r9, #-24]	; 0xffffffe8
   3c084:	add	r6, r6, r5
   3c088:	eor	r3, r2, r8
   3c08c:	add	r6, r8, r6, ror #20
   3c090:	sub	r1, r1, #41984	; 0xa400
   3c094:	sub	r1, r1, #79	; 0x4f
   3c098:	and	r3, r3, r6
   3c09c:	eor	r3, r3, r2
   3c0a0:	add	r0, r1, r0
   3c0a4:	add	r0, r3, r0
   3c0a8:	ldr	r1, [r9, #-20]	; 0xffffffec
   3c0ac:	add	ip, r6, r0, ror #15
   3c0b0:	ldr	r0, [pc, #1888]	; 3c818 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bc0>
   3c0b4:	eor	r3, r8, r6
   3c0b8:	add	r0, r1, r0
   3c0bc:	and	r3, r3, ip
   3c0c0:	add	r2, r0, r2
   3c0c4:	eor	r1, r3, r8
   3c0c8:	add	r1, r1, r2
   3c0cc:	ldr	r7, [r9, #-16]
   3c0d0:	ldr	r0, [pc, #1860]	; 3c81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bc4>
   3c0d4:	add	r1, ip, r1, ror #10
   3c0d8:	eor	r2, r6, ip
   3c0dc:	add	r0, r7, r0
   3c0e0:	and	r2, r2, r1
   3c0e4:	add	r8, r0, r8
   3c0e8:	eor	r3, r2, r6
   3c0ec:	add	r3, r3, r8
   3c0f0:	ldr	r5, [r9, #-12]
   3c0f4:	ldr	r0, [pc, #1828]	; 3c820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bc8>
   3c0f8:	add	r3, r1, r3, ror #25
   3c0fc:	eor	r2, ip, r1
   3c100:	add	r0, r5, r0
   3c104:	and	r2, r2, r3
   3c108:	add	r6, r0, r6
   3c10c:	eor	r5, r2, ip
   3c110:	add	r5, r5, r6
   3c114:	ldr	r8, [r9, #-8]
   3c118:	ldr	r6, [pc, #1796]	; 3c824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bcc>
   3c11c:	add	r5, r3, r5, ror #20
   3c120:	eor	r2, r1, r3
   3c124:	add	r6, r8, r6
   3c128:	and	r2, r2, r5
   3c12c:	add	ip, r6, ip
   3c130:	eor	r0, r2, r1
   3c134:	add	r0, r0, ip
   3c138:	ldr	r6, [r9, #-4]
   3c13c:	ldr	r2, [pc, #1764]	; 3c828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bd0>
   3c140:	add	r0, r5, r0, ror #15
   3c144:	eor	ip, r3, r5
   3c148:	add	r2, r6, r2
   3c14c:	and	ip, ip, r0
   3c150:	add	r1, r2, r1
   3c154:	eor	r2, ip, r3
   3c158:	add	r2, r2, r1
   3c15c:	ldr	fp, [r9, #-60]	; 0xffffffc4
   3c160:	add	r2, r0, r2, ror #10
   3c164:	ldr	ip, [pc, #1728]	; 3c82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bd4>
   3c168:	eor	r1, r0, r2
   3c16c:	add	ip, fp, ip
   3c170:	and	r1, r1, r5
   3c174:	add	r3, ip, r3
   3c178:	eor	fp, r1, r0
   3c17c:	add	fp, fp, r3
   3c180:	ldr	ip, [r9, #-40]	; 0xffffffd8
   3c184:	add	fp, r2, fp, ror #27
   3c188:	ldr	r1, [pc, #1696]	; 3c830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bd8>
   3c18c:	eor	r3, r2, fp
   3c190:	add	r1, ip, r1
   3c194:	and	r3, r3, r0
   3c198:	eor	r3, r3, r2
   3c19c:	add	r5, r1, r5
   3c1a0:	add	r5, r3, r5
   3c1a4:	ldr	r1, [r9, #-20]	; 0xffffffec
   3c1a8:	add	r5, fp, r5, ror #23
   3c1ac:	ldr	ip, [pc, #1664]	; 3c834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bdc>
   3c1b0:	eor	r3, fp, r5
   3c1b4:	add	ip, r1, ip
   3c1b8:	and	r3, r3, r2
   3c1bc:	add	r0, ip, r0
   3c1c0:	eor	ip, r3, fp
   3c1c4:	add	ip, ip, r0
   3c1c8:	ldr	r1, [pc, #1640]	; 3c838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28be0>
   3c1cc:	add	ip, r5, ip, ror #18
   3c1d0:	ldr	r0, [r9, #-64]	; 0xffffffc0
   3c1d4:	eor	r3, r5, ip
   3c1d8:	add	r1, r0, r1
   3c1dc:	and	r3, r3, fp
   3c1e0:	eor	r3, r3, r5
   3c1e4:	add	r2, r1, r2
   3c1e8:	add	r2, r3, r2
   3c1ec:	ldr	r0, [r9, #-44]	; 0xffffffd4
   3c1f0:	add	r2, ip, r2, ror #12
   3c1f4:	ldr	r3, [pc, #1600]	; 3c83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28be4>
   3c1f8:	eor	r1, ip, r2
   3c1fc:	add	r3, r0, r3
   3c200:	and	r1, r1, r5
   3c204:	add	fp, r3, fp
   3c208:	eor	r3, r1, ip
   3c20c:	add	r3, r3, fp
   3c210:	ldr	r1, [pc, #1576]	; 3c840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28be8>
   3c214:	add	r3, r2, r3, ror #27
   3c218:	ldr	fp, [r9, #-24]	; 0xffffffe8
   3c21c:	eor	r0, r2, r3
   3c220:	add	r1, fp, r1
   3c224:	and	r0, r0, ip
   3c228:	add	r5, r1, r5
   3c22c:	eor	r1, r0, r2
   3c230:	add	r1, r1, r5
   3c234:	ldr	r0, [pc, #1544]	; 3c844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bec>
   3c238:	add	r1, r3, r1, ror #23
   3c23c:	eor	r5, r3, r1
   3c240:	add	r0, r6, r0
   3c244:	and	r5, r5, r2
   3c248:	add	ip, r0, ip
   3c24c:	eor	r0, r5, r3
   3c250:	add	r0, r0, ip
   3c254:	ldr	fp, [r9, #-48]	; 0xffffffd0
   3c258:	add	r0, r1, r0, ror #18
   3c25c:	ldr	r5, [pc, #1508]	; 3c848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bf0>
   3c260:	eor	ip, r1, r0
   3c264:	add	r5, fp, r5
   3c268:	and	ip, ip, r3
   3c26c:	eor	ip, ip, r1
   3c270:	add	r2, r5, r2
   3c274:	add	r2, ip, r2
   3c278:	ldr	fp, [r9, #-28]	; 0xffffffe4
   3c27c:	add	r2, r0, r2, ror #12
   3c280:	ldr	r5, [pc, #1476]	; 3c84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bf4>
   3c284:	eor	ip, r0, r2
   3c288:	add	r5, fp, r5
   3c28c:	and	ip, ip, r1
   3c290:	add	r3, r5, r3
   3c294:	eor	fp, ip, r0
   3c298:	add	fp, fp, r3
   3c29c:	ldr	ip, [pc, #1452]	; 3c850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bf8>
   3c2a0:	add	fp, r2, fp, ror #27
   3c2a4:	eor	r3, r2, fp
   3c2a8:	add	ip, r8, ip
   3c2ac:	and	r3, r3, r0
   3c2b0:	add	r1, ip, r1
   3c2b4:	eor	r5, r3, r2
   3c2b8:	add	r5, r5, r1
   3c2bc:	ldr	ip, [pc, #1424]	; 3c854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28bfc>
   3c2c0:	add	r5, fp, r5, ror #23
   3c2c4:	ldr	r1, [r9, #-52]	; 0xffffffcc
   3c2c8:	eor	r3, fp, r5
   3c2cc:	add	ip, r1, ip
   3c2d0:	and	r3, r3, r2
   3c2d4:	add	r0, ip, r0
   3c2d8:	eor	ip, r3, fp
   3c2dc:	add	ip, ip, r0
   3c2e0:	ldr	r1, [pc, #1392]	; 3c858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c00>
   3c2e4:	add	ip, r5, ip, ror #18
   3c2e8:	ldr	r0, [r9, #-32]	; 0xffffffe0
   3c2ec:	eor	r3, r5, ip
   3c2f0:	add	r1, r0, r1
   3c2f4:	and	r3, r3, fp
   3c2f8:	eor	r3, r3, r5
   3c2fc:	add	r2, r1, r2
   3c300:	add	r2, r3, r2
   3c304:	ldr	r0, [r9, #-12]
   3c308:	add	r2, ip, r2, ror #12
   3c30c:	ldr	r3, [pc, #1352]	; 3c85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c04>
   3c310:	eor	r1, ip, r2
   3c314:	add	r3, r0, r3
   3c318:	and	r1, r1, r5
   3c31c:	add	fp, r3, fp
   3c320:	eor	r3, r1, ip
   3c324:	add	r3, r3, fp
   3c328:	ldr	r1, [pc, #1328]	; 3c860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c08>
   3c32c:	add	r3, r2, r3, ror #27
   3c330:	ldr	fp, [r9, #-56]	; 0xffffffc8
   3c334:	eor	r0, r2, r3
   3c338:	add	r1, fp, r1
   3c33c:	and	r0, r0, ip
   3c340:	add	r5, r1, r5
   3c344:	eor	r1, r0, r2
   3c348:	add	r1, r1, r5
   3c34c:	ldr	r0, [pc, #1296]	; 3c864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c0c>
   3c350:	add	r1, r3, r1, ror #23
   3c354:	eor	r5, r3, r1
   3c358:	add	r0, sl, r0
   3c35c:	and	r5, r5, r2
   3c360:	add	ip, r0, ip
   3c364:	eor	r0, r5, r3
   3c368:	add	r0, r0, ip
   3c36c:	ldr	r5, [pc, #1268]	; 3c868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c10>
   3c370:	add	r0, r1, r0, ror #18
   3c374:	eor	fp, r1, r0
   3c378:	add	r5, r7, r5
   3c37c:	and	ip, fp, r3
   3c380:	eor	ip, ip, r1
   3c384:	add	r2, r5, r2
   3c388:	add	r2, ip, r2
   3c38c:	ldr	r5, [pc, #1240]	; 3c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c14>
   3c390:	ldr	ip, [r9, #-44]	; 0xffffffd4
   3c394:	add	r2, r0, r2, ror #12
   3c398:	add	r5, ip, r5
   3c39c:	eor	fp, fp, r2
   3c3a0:	add	r3, r5, r3
   3c3a4:	ldr	ip, [r9, #-32]	; 0xffffffe0
   3c3a8:	add	r3, fp, r3
   3c3ac:	ldr	fp, [pc, #1212]	; 3c870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c18>
   3c3b0:	add	r3, r2, r3, ror #28
   3c3b4:	add	fp, ip, fp
   3c3b8:	eor	ip, r0, r2
   3c3bc:	eor	ip, ip, r3
   3c3c0:	add	r1, fp, r1
   3c3c4:	add	r1, ip, r1
   3c3c8:	ldr	r5, [pc, #1188]	; 3c874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c1c>
   3c3cc:	ldr	ip, [r9, #-20]	; 0xffffffec
   3c3d0:	add	r1, r3, r1, ror #21
   3c3d4:	add	r5, ip, r5
   3c3d8:	eor	ip, r2, r3
   3c3dc:	eor	ip, ip, r1
   3c3e0:	add	r0, r5, r0
   3c3e4:	add	r0, ip, r0
   3c3e8:	ldr	r5, [pc, #1160]	; 3c878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c20>
   3c3ec:	add	r0, r1, r0, ror #16
   3c3f0:	add	r5, r8, r5
   3c3f4:	eor	fp, r3, r1
   3c3f8:	eor	fp, fp, r0
   3c3fc:	add	r2, r5, r2
   3c400:	ldr	ip, [r9, #-60]	; 0xffffffc4
   3c404:	add	r2, fp, r2
   3c408:	ldr	fp, [pc, #1132]	; 3c87c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c24>
   3c40c:	add	r2, r0, r2, ror #9
   3c410:	add	fp, ip, fp
   3c414:	eor	ip, r1, r0
   3c418:	add	r3, fp, r3
   3c41c:	eor	fp, ip, r2
   3c420:	ldr	r5, [r9, #-48]	; 0xffffffd0
   3c424:	add	fp, fp, r3
   3c428:	ldr	ip, [pc, #1104]	; 3c880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c28>
   3c42c:	add	fp, r2, fp, ror #28
   3c430:	add	ip, r5, ip
   3c434:	eor	r3, r0, r2
   3c438:	eor	r3, r3, fp
   3c43c:	add	r1, ip, r1
   3c440:	add	r1, r3, r1
   3c444:	ldr	ip, [pc, #1080]	; 3c884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c2c>
   3c448:	add	r1, fp, r1, ror #21
   3c44c:	add	ip, sl, ip
   3c450:	eor	r3, r2, fp
   3c454:	eor	r3, r3, r1
   3c458:	add	r0, ip, r0
   3c45c:	add	r0, r3, r0
   3c460:	ldr	ip, [r9, #-24]	; 0xffffffe8
   3c464:	ldr	r5, [pc, #1052]	; 3c888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c30>
   3c468:	add	r0, r1, r0, ror #16
   3c46c:	eor	r3, fp, r1
   3c470:	add	r5, ip, r5
   3c474:	add	r2, r5, r2
   3c478:	eor	r5, r3, r0
   3c47c:	ldr	ip, [r9, #-12]
   3c480:	add	r5, r5, r2
   3c484:	ldr	r2, [pc, #1024]	; 3c88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c34>
   3c488:	add	r5, r0, r5, ror #9
   3c48c:	add	r2, ip, r2
   3c490:	eor	ip, r1, r0
   3c494:	add	fp, r2, fp
   3c498:	eor	r2, ip, r5
   3c49c:	add	r2, r2, fp
   3c4a0:	ldr	ip, [pc, #1000]	; 3c890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c38>
   3c4a4:	ldr	fp, [r9, #-64]	; 0xffffffc0
   3c4a8:	add	r2, r5, r2, ror #28
   3c4ac:	eor	r3, r0, r5
   3c4b0:	add	ip, fp, ip
   3c4b4:	add	r1, ip, r1
   3c4b8:	eor	fp, r3, r2
   3c4bc:	add	fp, fp, r1
   3c4c0:	ldr	ip, [pc, #972]	; 3c894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c3c>
   3c4c4:	ldr	r1, [r9, #-52]	; 0xffffffcc
   3c4c8:	add	fp, r2, fp, ror #21
   3c4cc:	eor	r3, r5, r2
   3c4d0:	add	ip, r1, ip
   3c4d4:	add	r0, ip, r0
   3c4d8:	eor	ip, r3, fp
   3c4dc:	ldr	r1, [r9, #-40]	; 0xffffffd8
   3c4e0:	add	ip, ip, r0
   3c4e4:	ldr	r3, [pc, #940]	; 3c898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c40>
   3c4e8:	add	ip, fp, ip, ror #16
   3c4ec:	add	r3, r1, r3
   3c4f0:	eor	r1, r2, fp
   3c4f4:	add	r5, r3, r5
   3c4f8:	eor	r3, r1, ip
   3c4fc:	add	r3, r3, r5
   3c500:	ldr	r1, [r9, #-28]	; 0xffffffe4
   3c504:	ldr	r0, [pc, #912]	; 3c89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c44>
   3c508:	add	r3, ip, r3, ror #9
   3c50c:	add	r0, r1, r0
   3c510:	eor	r1, fp, ip
   3c514:	add	r2, r0, r2
   3c518:	eor	r5, r1, r3
   3c51c:	add	r5, r5, r2
   3c520:	ldr	r0, [pc, #888]	; 3c8a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c48>
   3c524:	add	r5, r3, r5, ror #28
   3c528:	eor	r2, ip, r3
   3c52c:	add	r0, r7, r0
   3c530:	add	fp, r0, fp
   3c534:	eor	r0, r2, r5
   3c538:	add	r0, r0, fp
   3c53c:	ldr	r1, [pc, #864]	; 3c8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c4c>
   3c540:	add	r0, r5, r0, ror #21
   3c544:	eor	r2, r3, r5
   3c548:	add	r1, r6, r1
   3c54c:	add	ip, r1, ip
   3c550:	eor	r1, r2, r0
   3c554:	ldr	fp, [r9, #-56]	; 0xffffffc8
   3c558:	add	r1, r1, ip
   3c55c:	ldr	ip, [pc, #836]	; 3c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c50>
   3c560:	add	r1, r0, r1, ror #16
   3c564:	eor	r2, r5, r0
   3c568:	add	ip, fp, ip
   3c56c:	add	r3, ip, r3
   3c570:	eor	ip, r2, r1
   3c574:	add	ip, ip, r3
   3c578:	ldr	fp, [r9, #-64]	; 0xffffffc0
   3c57c:	ldr	r2, [pc, #808]	; 3c8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c54>
   3c580:	add	ip, r1, ip, ror #9
   3c584:	mvn	r3, r0
   3c588:	add	r2, fp, r2
   3c58c:	orr	r3, r3, ip
   3c590:	add	r5, r2, r5
   3c594:	eor	r2, r3, r1
   3c598:	add	r2, r2, r5
   3c59c:	ldr	fp, [pc, #780]	; 3c8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c58>
   3c5a0:	add	r2, ip, r2, ror #26
   3c5a4:	mvn	r3, r1
   3c5a8:	add	fp, sl, fp
   3c5ac:	orr	r3, r3, r2
   3c5b0:	eor	r3, r3, ip
   3c5b4:	add	r0, fp, r0
   3c5b8:	add	r0, r3, r0
   3c5bc:	ldr	sl, [pc, #752]	; 3c8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c5c>
   3c5c0:	add	r0, r2, r0, ror #22
   3c5c4:	mvn	r5, ip
   3c5c8:	add	sl, r8, sl
   3c5cc:	orr	r5, r5, r0
   3c5d0:	eor	r5, r5, r2
   3c5d4:	add	r1, sl, r1
   3c5d8:	add	r1, r5, r1
   3c5dc:	ldr	r3, [pc, #724]	; 3c8b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c60>
   3c5e0:	ldr	r5, [r9, #-44]	; 0xffffffd4
   3c5e4:	add	r1, r0, r1, ror #17
   3c5e8:	mvn	r8, r2
   3c5ec:	add	r3, r5, r3
   3c5f0:	orr	r8, r8, r1
   3c5f4:	add	ip, r3, ip
   3c5f8:	eor	r8, r8, r0
   3c5fc:	add	ip, r8, ip
   3c600:	ldr	sl, [pc, #692]	; 3c8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c64>
   3c604:	add	ip, r1, ip, ror #11
   3c608:	mvn	r5, r0
   3c60c:	add	sl, r7, sl
   3c610:	orr	r5, r5, ip
   3c614:	eor	r5, r5, r1
   3c618:	add	r2, sl, r2
   3c61c:	add	r2, r5, r2
   3c620:	ldr	fp, [pc, #664]	; 3c8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c68>
   3c624:	ldr	r5, [r9, #-52]	; 0xffffffcc
   3c628:	add	r2, ip, r2, ror #26
   3c62c:	mvn	r3, r1
   3c630:	add	fp, r5, fp
   3c634:	orr	r3, r3, r2
   3c638:	eor	r3, r3, ip
   3c63c:	add	r0, fp, r0
   3c640:	add	r0, r3, r0
   3c644:	ldr	r7, [r9, #-24]	; 0xffffffe8
   3c648:	ldr	sl, [pc, #628]	; 3c8c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c6c>
   3c64c:	add	r0, r2, r0, ror #22
   3c650:	mvn	r5, ip
   3c654:	add	sl, r7, sl
   3c658:	orr	r5, r5, r0
   3c65c:	eor	r5, r5, r2
   3c660:	add	r1, sl, r1
   3c664:	add	r1, r5, r1
   3c668:	ldr	r7, [r9, #-60]	; 0xffffffc4
   3c66c:	ldr	r3, [pc, #596]	; 3c8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c70>
   3c670:	add	r1, r0, r1, ror #17
   3c674:	mvn	r5, r2
   3c678:	add	r3, r7, r3
   3c67c:	orr	r5, r5, r1
   3c680:	eor	r5, r5, r0
   3c684:	add	ip, r3, ip
   3c688:	add	ip, r5, ip
   3c68c:	ldr	sl, [pc, #568]	; 3c8cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c74>
   3c690:	ldr	r5, [r9, #-32]	; 0xffffffe0
   3c694:	add	ip, r1, ip, ror #11
   3c698:	mvn	r3, r0
   3c69c:	add	sl, r5, sl
   3c6a0:	orr	r3, r3, ip
   3c6a4:	eor	r3, r3, r1
   3c6a8:	add	r2, sl, r2
   3c6ac:	add	r2, r3, r2
   3c6b0:	ldr	fp, [pc, #536]	; 3c8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c78>
   3c6b4:	add	r2, ip, r2, ror #26
   3c6b8:	mvn	r5, r1
   3c6bc:	add	fp, r6, fp
   3c6c0:	orr	r5, r5, r2
   3c6c4:	eor	r5, r5, ip
   3c6c8:	add	r0, fp, r0
   3c6cc:	add	r0, r5, r0
   3c6d0:	ldr	sl, [pc, #508]	; 3c8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c7c>
   3c6d4:	ldr	r5, [r9, #-40]	; 0xffffffd8
   3c6d8:	add	r0, r2, r0, ror #22
   3c6dc:	mvn	r3, ip
   3c6e0:	add	sl, r5, sl
   3c6e4:	orr	r3, r3, r0
   3c6e8:	eor	r3, r3, r2
   3c6ec:	add	r1, sl, r1
   3c6f0:	add	r1, r3, r1
   3c6f4:	ldr	r7, [r9, #-12]
   3c6f8:	ldr	r6, [pc, #472]	; 3c8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c80>
   3c6fc:	add	r1, r0, r1, ror #17
   3c700:	mvn	r5, r2
   3c704:	add	r6, r7, r6
   3c708:	orr	r5, r5, r1
   3c70c:	eor	r5, r5, r0
   3c710:	add	ip, r6, ip
   3c714:	add	ip, r5, ip
   3c718:	ldr	sl, [pc, #444]	; 3c8dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c84>
   3c71c:	ldr	r5, [r9, #-48]	; 0xffffffd0
   3c720:	add	ip, r1, ip, ror #11
   3c724:	mvn	r3, r0
   3c728:	add	sl, r5, sl
   3c72c:	orr	r3, r3, ip
   3c730:	eor	r3, r3, r1
   3c734:	add	r2, sl, r2
   3c738:	add	r2, r3, r2
   3c73c:	ldr	r5, [r9, #-20]	; 0xffffffec
   3c740:	ldr	fp, [pc, #408]	; 3c8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c88>
   3c744:	add	r2, ip, r2, ror #26
   3c748:	mvn	r3, r1
   3c74c:	orr	r3, r3, r2
   3c750:	add	fp, r5, fp
   3c754:	add	fp, fp, r0
   3c758:	eor	r0, r3, ip
   3c75c:	add	r0, r0, fp
   3c760:	ldr	r5, [r9, #-56]	; 0xffffffc8
   3c764:	ldr	sl, [pc, #376]	; 3c8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c8c>
   3c768:	add	r0, r2, r0, ror #22
   3c76c:	mvn	r3, ip
   3c770:	add	sl, r5, sl
   3c774:	orr	r3, r3, r0
   3c778:	add	sl, sl, r1
   3c77c:	eor	r1, r3, r2
   3c780:	add	r1, r1, sl
   3c784:	ldr	r5, [r9, #-28]	; 0xffffffe4
   3c788:	ldr	r6, [pc, #344]	; 3c8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c90>
   3c78c:	add	r1, r0, r1, ror #17
   3c790:	mvn	r3, r2
   3c794:	add	r6, r5, r6
   3c798:	orr	r3, r3, r1
   3c79c:	eor	r3, r3, r0
   3c7a0:	add	ip, r6, ip
   3c7a4:	add	ip, r3, ip
   3c7a8:	ldr	r3, [sp, #4]
   3c7ac:	ldr	r5, [sp, #8]
   3c7b0:	add	r3, r3, r2
   3c7b4:	ldr	r2, [sp]
   3c7b8:	add	r9, r9, #64	; 0x40
   3c7bc:	add	ip, r1, ip, ror #11
   3c7c0:	str	r3, [sp, #4]
   3c7c4:	cmp	r5, r9
   3c7c8:	add	r3, r2, r0
   3c7cc:	str	r3, [sp]
   3c7d0:	add	r4, r4, r1
   3c7d4:	add	lr, lr, ip
   3c7d8:	bne	3bef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x282a0>
   3c7dc:	ldr	r3, [sp, #12]
   3c7e0:	ldr	r2, [sp, #4]
   3c7e4:	str	r2, [r3]
   3c7e8:	ldr	r2, [sp]
   3c7ec:	str	lr, [r3, #4]
   3c7f0:	str	r4, [r3, #8]
   3c7f4:	str	r2, [r3, #12]
   3c7f8:	add	sp, sp, #20
   3c7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c800:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   3c804:	strtcs	r7, [r0], #-219	; 0xffffff25
   3c808:			; <UNDEFINED> instruction: 0xc1bdceee
   3c80c:			; <UNDEFINED> instruction: 0xf57c0faf
   3c810:	stc2l	5, cr9, [r6, #-4]
   3c814:	blhi	117a6d8 <optarg@@GLIBC_2.4+0x10b2cd0>
   3c818:	ldmdbhi	ip, {r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, lr, pc}^
   3c81c:	blvs	fe440cac <optarg@@GLIBC_2.4+0xfe3792a4>
   3c820:	ldc2	1, cr7, [r8, #588]	; 0x24c
   3c824:	ldrbtge	r4, [r9], -lr, lsl #7
   3c828:	ldmibmi	r4!, {r0, r5, fp}
   3c82c:			; <UNDEFINED> instruction: 0xf61e2562
   3c830:	subgt	fp, r0, r0, asr #6
   3c834:			; <UNDEFINED> instruction: 0x265e5a51
   3c838:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   3c83c:			; <UNDEFINED> instruction: 0xd62f105d
   3c840:	subeq	r1, r4, #1392508928	; 0x53000000
   3c844:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   3c848:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   3c84c:	mvncs	ip, r6, ror #27
   3c850:	teqgt	r7, #56098816	; 0x3580000
   3c854:			; <UNDEFINED> instruction: 0xf4d50d87
   3c858:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   3c85c:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   3c860:	stc2l	3, cr10, [pc], #992	; 3cc48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28ff0>
   3c864:			; <UNDEFINED> instruction: 0x676f02d9
   3c868:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   3c86c:			; <UNDEFINED> instruction: 0xfffa3942
   3c870:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   3c874:	ldfvss	f6, [sp, #136]	; 0x88
   3c878:	vcmla.f16	d19, d5, d12, #270
   3c87c:	ldrtge	lr, [lr], #2628	; 0xa44
   3c880:	blmi	ff7f072c <optarg@@GLIBC_2.4+0xff728d24>
   3c884:			; <UNDEFINED> instruction: 0xf6bb4b60
   3c888:	mrclt	12, 5, fp, cr15, cr0, {3}
   3c88c:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   3c890:	b	fe886880 <optarg@@GLIBC_2.4+0xfe7bee78>
   3c894:	strbtle	r3, [pc], #133	; 3c89c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c44>
   3c898:	streq	r1, [r8], #3333	; 0xd05
   3c89c:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   3c8a0:	ldrb	r9, [fp], r5, ror #19
   3c8a4:	svcne	0x00a27cf8
   3c8a8:	strtgt	r5, [ip], #1637	; 0x665
   3c8ac:	vld1.16	{d2-d5}, [r9], r4
   3c8b0:	msrmi	CPSR_fx, #604	; 0x25c
   3c8b4:	blge	fe545758 <optarg@@GLIBC_2.4+0xfe47dd50>
   3c8b8:	ldc2	0, cr10, [r3], {57}	; 0x39
   3c8bc:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   3c8c0:	svchi	0x000ccc92
   3c8c4:			; <UNDEFINED> instruction: 0xffeff47d
   3c8c8:	strhi	r5, [r4, #3537]	; 0xdd1
   3c8cc:	svcvs	0x00a87e4f
   3c8d0:	cdp2	6, 2, cr14, cr12, cr0, {7}
   3c8d4:	movwge	r4, #4884	; 0x1314
   3c8d8:	adfmi<illegal precision>p	f1, f0, f1
   3c8dc:			; <UNDEFINED> instruction: 0xf7537e82
   3c8e0:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   3c8e4:	bcs	ff6313d8 <optarg@@GLIBC_2.4+0xff5699d0>
   3c8e8:	bl	fe1f1734 <optarg@@GLIBC_2.4+0xfe129d2c>
   3c8ec:	push	{r4, r5, r6, r7, r8, lr}
   3c8f0:	mov	r4, r0
   3c8f4:	ldr	r0, [r0, #24]
   3c8f8:	ldr	r3, [r4, #16]
   3c8fc:	mov	r5, r1
   3c900:	adds	r3, r3, r0
   3c904:	str	r3, [r4, #16]
   3c908:	ldrcs	r3, [r4, #20]
   3c90c:	ldr	r1, [pc, #116]	; 3c988 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d30>
   3c910:	addcs	r3, r3, #1
   3c914:	strcs	r3, [r4, #20]
   3c918:	cmp	r0, #55	; 0x37
   3c91c:	rsbhi	r2, r0, #120	; 0x78
   3c920:	rsbls	r2, r0, #56	; 0x38
   3c924:	add	r0, r0, #28
   3c928:	add	r0, r4, r0
   3c92c:	add	r1, pc, r1
   3c930:	movhi	r7, #148	; 0x94
   3c934:	movhi	r6, #152	; 0x98
   3c938:	movhi	r8, #128	; 0x80
   3c93c:	movls	r7, #84	; 0x54
   3c940:	movls	r6, #88	; 0x58
   3c944:	movls	r8, #64	; 0x40
   3c948:	bl	133b8 <memcpy@plt>
   3c94c:	ldr	r3, [r4, #16]
   3c950:	mov	r1, r8
   3c954:	mov	r2, r4
   3c958:	lsl	r0, r3, #3
   3c95c:	str	r0, [r4, r7]
   3c960:	ldr	ip, [r4, #20]
   3c964:	lsr	r3, r3, #29
   3c968:	add	r0, r4, #28
   3c96c:	orr	r3, r3, ip, lsl #3
   3c970:	str	r3, [r4, r6]
   3c974:	bl	3be84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2822c>
   3c978:	mov	r1, r5
   3c97c:	mov	r0, r4
   3c980:	pop	{r4, r5, r6, r7, r8, lr}
   3c984:	b	3be3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281e4>
   3c988:	andeq	r9, r7, ip, lsr #28
   3c98c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3c990:	mov	r5, r2
   3c994:	ldr	r7, [r2, #24]
   3c998:	mov	r4, r0
   3c99c:	cmp	r7, #0
   3c9a0:	mov	r6, r1
   3c9a4:	bne	3ca70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28e18>
   3c9a8:	cmp	r6, #64	; 0x40
   3c9ac:	bls	3ca5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28e04>
   3c9b0:	tst	r4, #3
   3c9b4:	beq	3ca40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28de8>
   3c9b8:	sub	r9, r6, #65	; 0x41
   3c9bc:	add	r7, r5, #28
   3c9c0:	lsr	r9, r9, #6
   3c9c4:	add	r8, r9, #1
   3c9c8:	add	r8, r4, r8, lsl #6
   3c9cc:	add	lr, r4, #64	; 0x40
   3c9d0:	mov	r3, r7
   3c9d4:	ldr	ip, [r4]
   3c9d8:	ldr	r0, [r4, #4]
   3c9dc:	ldr	r1, [r4, #8]
   3c9e0:	ldr	r2, [r4, #12]
   3c9e4:	add	r4, r4, #16
   3c9e8:	cmp	r4, lr
   3c9ec:	str	ip, [r3]
   3c9f0:	str	r0, [r3, #4]
   3c9f4:	str	r1, [r3, #8]
   3c9f8:	str	r2, [r3, #12]
   3c9fc:	add	r3, r3, #16
   3ca00:	bne	3c9d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d7c>
   3ca04:	mov	r2, r5
   3ca08:	mov	r1, #64	; 0x40
   3ca0c:	mov	r0, r7
   3ca10:	bl	3be84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2822c>
   3ca14:	cmp	r4, r8
   3ca18:	bne	3c9cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d74>
   3ca1c:	rsb	r9, r9, r9, lsl #26
   3ca20:	sub	r6, r6, #64	; 0x40
   3ca24:	add	r6, r6, r9, lsl #6
   3ca28:	mov	r1, r8
   3ca2c:	mov	r0, r7
   3ca30:	mov	r2, r6
   3ca34:	bl	133b8 <memcpy@plt>
   3ca38:	str	r6, [r5, #24]
   3ca3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ca40:	bic	r7, r6, #63	; 0x3f
   3ca44:	mov	r0, r4
   3ca48:	mov	r1, r7
   3ca4c:	mov	r2, r5
   3ca50:	bl	3be84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2822c>
   3ca54:	and	r6, r6, #63	; 0x3f
   3ca58:	add	r4, r4, r7
   3ca5c:	cmp	r6, #0
   3ca60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ca64:	mov	r8, r4
   3ca68:	add	r7, r5, #28
   3ca6c:	b	3ca28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28dd0>
   3ca70:	rsb	r8, r7, #128	; 0x80
   3ca74:	cmp	r8, r1
   3ca78:	movcs	r8, r1
   3ca7c:	add	r0, r7, #28
   3ca80:	mov	r2, r8
   3ca84:	add	r0, r5, r0
   3ca88:	mov	r1, r4
   3ca8c:	bl	133b8 <memcpy@plt>
   3ca90:	ldr	r3, [r5, #24]
   3ca94:	add	r7, r7, r8
   3ca98:	add	r3, r3, r8
   3ca9c:	cmp	r7, #64	; 0x40
   3caa0:	str	r3, [r5, #24]
   3caa4:	bhi	3cab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28e5c>
   3caa8:	add	r4, r4, r8
   3caac:	sub	r6, r6, r8
   3cab0:	b	3c9a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d50>
   3cab4:	bic	sl, r7, #63	; 0x3f
   3cab8:	add	r9, r5, #28
   3cabc:	mov	r0, r9
   3cac0:	mov	r1, sl
   3cac4:	mov	r2, r5
   3cac8:	bl	3be84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2822c>
   3cacc:	and	r7, r7, #63	; 0x3f
   3cad0:	add	r1, sl, #28
   3cad4:	add	r1, r5, r1
   3cad8:	mov	r0, r9
   3cadc:	mov	r2, r7
   3cae0:	bl	133b8 <memcpy@plt>
   3cae4:	str	r7, [r5, #24]
   3cae8:	b	3caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28e50>
   3caec:	push	{r4, r5, r6, r7, lr}
   3caf0:	sub	sp, sp, #164	; 0xa4
   3caf4:	add	r4, sp, #4
   3caf8:	mov	r6, r0
   3cafc:	mov	r7, r1
   3cb00:	mov	r0, r4
   3cb04:	mov	r5, r2
   3cb08:	bl	3bdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2819c>
   3cb0c:	mov	r2, r4
   3cb10:	mov	r1, r7
   3cb14:	mov	r0, r6
   3cb18:	bl	3c98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d34>
   3cb1c:	mov	r1, r5
   3cb20:	mov	r0, r4
   3cb24:	bl	3c8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c94>
   3cb28:	add	sp, sp, #164	; 0xa4
   3cb2c:	pop	{r4, r5, r6, r7, pc}
   3cb30:	push	{r4, r5, r6, r7, r8, r9, lr}
   3cb34:	sub	sp, sp, #4288	; 0x10c0
   3cb38:	sub	sp, sp, #44	; 0x2c
   3cb3c:	add	r8, sp, #4
   3cb40:	mov	r6, r0
   3cb44:	mov	r0, r8
   3cb48:	mov	r9, r1
   3cb4c:	bl	3bdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2819c>
   3cb50:	ldr	r7, [pc, #176]	; 3cc08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28fb0>
   3cb54:	add	r5, sp, #160	; 0xa0
   3cb58:	mov	r4, #0
   3cb5c:	mov	r3, r6
   3cb60:	rsb	r2, r4, #4096	; 0x1000
   3cb64:	add	r0, r5, r4
   3cb68:	mov	r1, #1
   3cb6c:	bl	135ec <fread@plt>
   3cb70:	add	r4, r4, r0
   3cb74:	cmp	r4, r7
   3cb78:	movhi	r3, #0
   3cb7c:	movls	r3, #1
   3cb80:	cmp	r0, #0
   3cb84:	moveq	r3, #0
   3cb88:	cmp	r3, #0
   3cb8c:	bne	3cb5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f04>
   3cb90:	cmp	r0, #0
   3cb94:	beq	3cbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f54>
   3cb98:	mov	r2, r8
   3cb9c:	mov	r1, #4096	; 0x1000
   3cba0:	mov	r0, r5
   3cba4:	bl	3be84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2822c>
   3cba8:	b	3cb58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f00>
   3cbac:	mov	r0, r6
   3cbb0:	bl	13388 <ferror@plt>
   3cbb4:	subs	r6, r0, #0
   3cbb8:	bne	3cbe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f88>
   3cbbc:	cmp	r4, #0
   3cbc0:	bne	3cbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f9c>
   3cbc4:	mov	r1, r9
   3cbc8:	mov	r0, r8
   3cbcc:	bl	3c8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28c94>
   3cbd0:	mov	r0, r6
   3cbd4:	add	sp, sp, #4288	; 0x10c0
   3cbd8:	add	sp, sp, #44	; 0x2c
   3cbdc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3cbe0:	mov	r6, #1
   3cbe4:	mov	r0, r6
   3cbe8:	add	sp, sp, #4288	; 0x10c0
   3cbec:	add	sp, sp, #44	; 0x2c
   3cbf0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3cbf4:	mov	r1, r4
   3cbf8:	mov	r0, r5
   3cbfc:	mov	r2, r8
   3cc00:	bl	3c98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28d34>
   3cc04:	b	3cbc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28f6c>
   3cc08:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   3cc0c:	ldr	r3, [pc, #56]	; 3cc4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28ff4>
   3cc10:	push	{lr}		; (str lr, [sp, #-4]!)
   3cc14:	ldr	ip, [pc, #52]	; 3cc50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28ff8>
   3cc18:	ldr	lr, [pc, #52]	; 3cc54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28ffc>
   3cc1c:	ldr	r1, [pc, #52]	; 3cc58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29000>
   3cc20:	ldr	r2, [pc, #52]	; 3cc5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29004>
   3cc24:	str	r3, [r0]
   3cc28:	mov	r3, #0
   3cc2c:	str	lr, [r0, #4]
   3cc30:	str	ip, [r0, #8]
   3cc34:	str	r1, [r0, #12]
   3cc38:	str	r2, [r0, #16]
   3cc3c:	str	r3, [r0, #24]
   3cc40:	str	r3, [r0, #20]
   3cc44:	str	r3, [r0, #28]
   3cc48:	pop	{pc}		; (ldr pc, [sp], #4)
   3cc4c:	strbvs	r2, [r5, -r1, lsl #6]
   3cc50:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   3cc54:	svc	0x00cdab89
   3cc58:	eorsne	r5, r2, r6, ror r4
   3cc5c:	bicsgt	lr, r2, #240, 2	; 0x3c
   3cc60:	ldr	r2, [r0]
   3cc64:	mov	r3, r0
   3cc68:	rev	r2, r2
   3cc6c:	str	r2, [r1]
   3cc70:	ldr	r2, [r3, #4]
   3cc74:	mov	r0, r1
   3cc78:	rev	r2, r2
   3cc7c:	str	r2, [r1, #4]
   3cc80:	ldr	r2, [r3, #8]
   3cc84:	rev	r2, r2
   3cc88:	str	r2, [r1, #8]
   3cc8c:	ldr	r2, [r3, #12]
   3cc90:	rev	r2, r2
   3cc94:	str	r2, [r1, #12]
   3cc98:	ldr	r3, [r3, #16]
   3cc9c:	rev	r3, r3
   3cca0:	str	r3, [r1, #16]
   3cca4:	bx	lr
   3cca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ccac:	sub	sp, sp, #164	; 0xa4
   3ccb0:	ldr	r3, [r2, #20]
   3ccb4:	mov	r4, r2
   3ccb8:	adds	r3, r3, r1
   3ccbc:	bic	lr, r1, #3
   3ccc0:	str	r2, [sp, #84]	; 0x54
   3ccc4:	ldr	r2, [r2, #24]
   3ccc8:	movcs	r1, #1
   3cccc:	movcc	r1, #0
   3ccd0:	add	ip, r0, lr
   3ccd4:	add	r2, r2, r1
   3ccd8:	cmp	r0, ip
   3ccdc:	str	r3, [r4, #20]
   3cce0:	str	r2, [r4, #24]
   3cce4:	ldmib	r4, {r1, r5}
   3cce8:	ldr	r2, [r4]
   3ccec:	ldr	r3, [r4, #12]
   3ccf0:	ldr	ip, [r4, #16]
   3ccf4:	bcs	3e280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a628>
   3ccf8:	sub	lr, lr, #1
   3ccfc:	add	r4, r0, #124	; 0x7c
   3cd00:	bic	lr, lr, #63	; 0x3f
   3cd04:	add	r0, r0, #60	; 0x3c
   3cd08:	add	lr, lr, r4
   3cd0c:	str	r0, [sp, #56]	; 0x38
   3cd10:	add	r0, sp, #92	; 0x5c
   3cd14:	str	lr, [sp, #88]	; 0x58
   3cd18:	str	ip, [sp, #80]	; 0x50
   3cd1c:	str	r3, [sp, #76]	; 0x4c
   3cd20:	str	r5, [sp, #72]	; 0x48
   3cd24:	str	r1, [sp, #68]	; 0x44
   3cd28:	str	r2, [sp, #64]	; 0x40
   3cd2c:	str	r0, [sp, #92]	; 0x5c
   3cd30:	ldr	r6, [sp, #56]	; 0x38
   3cd34:	ldr	r4, [sp, #92]	; 0x5c
   3cd38:	sub	lr, r6, #64	; 0x40
   3cd3c:	ldr	r0, [lr, #4]!
   3cd40:	rev	r0, r0
   3cd44:	cmp	lr, r6
   3cd48:	str	r0, [r4, #4]!
   3cd4c:	bne	3cd3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290e4>
   3cd50:	ldr	r9, [sp, #96]	; 0x60
   3cd54:	ldr	r0, [pc, #4088]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cd58:	ror	r6, r1, #2
   3cd5c:	add	r0, r9, r0
   3cd60:	add	ip, r0, ip
   3cd64:	add	r0, ip, r2, ror #27
   3cd68:	ldr	ip, [sp, #100]	; 0x64
   3cd6c:	eor	lr, r5, r3
   3cd70:	add	ip, ip, #1509949440	; 0x5a000000
   3cd74:	add	ip, ip, #8519680	; 0x820000
   3cd78:	and	lr, lr, r1
   3cd7c:	add	ip, ip, #30976	; 0x7900
   3cd80:	eor	r1, r6, r5
   3cd84:	and	r1, r1, r2
   3cd88:	add	ip, ip, #153	; 0x99
   3cd8c:	add	ip, ip, r3
   3cd90:	eor	lr, lr, r3
   3cd94:	eor	r1, r1, r5
   3cd98:	ldr	r8, [sp, #104]	; 0x68
   3cd9c:	add	lr, lr, r0
   3cda0:	add	r1, r1, ip
   3cda4:	ror	r0, r2, #2
   3cda8:	ldr	ip, [pc, #4004]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cdac:	eor	r3, r6, r0
   3cdb0:	add	ip, r8, ip
   3cdb4:	and	r3, r3, lr
   3cdb8:	add	r1, r1, lr, ror #27
   3cdbc:	add	r5, ip, r5
   3cdc0:	ror	lr, lr, #2
   3cdc4:	eor	r3, r3, r6
   3cdc8:	ldr	ip, [sp, #108]	; 0x6c
   3cdcc:	eor	r2, r0, lr
   3cdd0:	add	r3, r3, r5
   3cdd4:	ror	r4, r1, #2
   3cdd8:	add	r3, r3, r1, ror #27
   3cddc:	and	r2, r2, r1
   3cde0:	add	ip, ip, #1509949440	; 0x5a000000
   3cde4:	ldr	r1, [sp, #112]	; 0x70
   3cde8:	add	ip, ip, #8519680	; 0x820000
   3cdec:	add	ip, ip, #30976	; 0x7900
   3cdf0:	add	r1, r1, #1509949440	; 0x5a000000
   3cdf4:	add	ip, ip, #153	; 0x99
   3cdf8:	add	r1, r1, #8519680	; 0x820000
   3cdfc:	add	r6, ip, r6
   3ce00:	add	r1, r1, #30976	; 0x7900
   3ce04:	eor	ip, r2, r0
   3ce08:	eor	r2, lr, r4
   3ce0c:	ldr	sl, [sp, #116]	; 0x74
   3ce10:	add	ip, ip, r6
   3ce14:	add	r1, r1, #153	; 0x99
   3ce18:	and	r2, r2, r3
   3ce1c:	ldr	r5, [pc, #3888]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3ce20:	add	ip, ip, r3, ror #27
   3ce24:	eor	r2, r2, lr
   3ce28:	ror	r3, r3, #2
   3ce2c:	add	r0, r1, r0
   3ce30:	add	r0, r2, r0
   3ce34:	add	r5, sl, r5
   3ce38:	eor	r2, r4, r3
   3ce3c:	add	r1, r0, ip, ror #27
   3ce40:	ldr	fp, [sp, #120]	; 0x78
   3ce44:	add	lr, r5, lr
   3ce48:	and	r2, r2, ip
   3ce4c:	ldr	r5, [pc, #3840]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3ce50:	ror	ip, ip, #2
   3ce54:	eor	r0, r3, ip
   3ce58:	eor	r2, r2, r4
   3ce5c:	add	r5, fp, r5
   3ce60:	add	r2, r2, lr
   3ce64:	and	r0, r0, r1
   3ce68:	ror	lr, r1, #2
   3ce6c:	add	r2, r2, r1, ror #27
   3ce70:	add	r4, r5, r4
   3ce74:	eor	r1, r0, r3
   3ce78:	add	r1, r1, r4
   3ce7c:	ldr	r4, [sp, #124]	; 0x7c
   3ce80:	eor	r0, ip, lr
   3ce84:	add	r4, r4, #1509949440	; 0x5a000000
   3ce88:	add	r4, r4, #8519680	; 0x820000
   3ce8c:	add	r4, r4, #30976	; 0x7900
   3ce90:	add	r4, r4, #153	; 0x99
   3ce94:	add	r3, r4, r3
   3ce98:	ldr	r4, [sp, #128]	; 0x80
   3ce9c:	and	r0, r0, r2
   3cea0:	add	r4, r4, #1509949440	; 0x5a000000
   3cea4:	add	r1, r1, r2, ror #27
   3cea8:	eor	r0, r0, ip
   3ceac:	ror	r2, r2, #2
   3ceb0:	add	r4, r4, #8519680	; 0x820000
   3ceb4:	add	r3, r0, r3
   3ceb8:	add	r4, r4, #30976	; 0x7900
   3cebc:	eor	r0, lr, r2
   3cec0:	and	r0, r0, r1
   3cec4:	add	r4, r4, #153	; 0x99
   3cec8:	add	r4, r4, ip
   3cecc:	eor	r0, r0, lr
   3ced0:	add	r0, r0, r4
   3ced4:	ldr	r4, [sp, #132]	; 0x84
   3ced8:	add	r3, r3, r1, ror #27
   3cedc:	add	r4, r4, #1509949440	; 0x5a000000
   3cee0:	ror	r1, r1, #2
   3cee4:	add	r4, r4, #8519680	; 0x820000
   3cee8:	eor	ip, r2, r1
   3ceec:	add	r4, r4, #30976	; 0x7900
   3cef0:	and	ip, ip, r3
   3cef4:	add	r4, r4, #153	; 0x99
   3cef8:	add	r4, r4, lr
   3cefc:	eor	ip, ip, r2
   3cf00:	ror	r5, r3, #2
   3cf04:	add	r0, r0, r3, ror #27
   3cf08:	add	ip, ip, r4
   3cf0c:	ldr	r3, [sp, #136]	; 0x88
   3cf10:	ldr	r4, [pc, #3644]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cf14:	eor	lr, r1, r5
   3cf18:	add	r4, r3, r4
   3cf1c:	and	lr, lr, r0
   3cf20:	add	ip, ip, r0, ror #27
   3cf24:	eor	lr, lr, r1
   3cf28:	add	r2, r4, r2
   3cf2c:	add	r2, lr, r2
   3cf30:	add	lr, r2, ip, ror #27
   3cf34:	ror	r0, r0, #2
   3cf38:	ldr	r3, [sp, #140]	; 0x8c
   3cf3c:	ldr	r2, [pc, #3600]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cf40:	eor	r4, r5, r0
   3cf44:	add	r2, r3, r2
   3cf48:	and	r4, r4, ip
   3cf4c:	ror	r3, ip, #2
   3cf50:	add	r1, r2, r1
   3cf54:	eor	ip, r0, r3
   3cf58:	ldr	r2, [sp, #144]	; 0x90
   3cf5c:	eor	r4, r4, r5
   3cf60:	ldr	r6, [pc, #3564]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cf64:	add	r4, r4, r1
   3cf68:	and	ip, ip, lr
   3cf6c:	ror	r1, lr, #2
   3cf70:	add	r4, r4, lr, ror #27
   3cf74:	add	r6, r2, r6
   3cf78:	eor	lr, ip, r0
   3cf7c:	ldr	r7, [pc, #3536]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3cf80:	ldr	ip, [sp, #148]	; 0x94
   3cf84:	add	r5, r6, r5
   3cf88:	eor	r2, r3, r1
   3cf8c:	and	r2, r2, r4
   3cf90:	add	lr, lr, r5
   3cf94:	add	r7, ip, r7
   3cf98:	ldr	ip, [sp, #128]	; 0x80
   3cf9c:	add	lr, lr, r4, ror #27
   3cfa0:	add	r7, r7, r0
   3cfa4:	eor	r0, r2, r3
   3cfa8:	ror	r2, r4, #2
   3cfac:	eor	r4, r9, r8
   3cfb0:	eor	r4, r4, ip
   3cfb4:	ldr	ip, [sp, #152]	; 0x98
   3cfb8:	add	r0, r0, r7
   3cfbc:	add	ip, ip, #1509949440	; 0x5a000000
   3cfc0:	add	ip, ip, #8519680	; 0x820000
   3cfc4:	eor	r7, r1, r2
   3cfc8:	add	ip, ip, #30976	; 0x7900
   3cfcc:	and	r7, r7, lr
   3cfd0:	add	ip, ip, #153	; 0x99
   3cfd4:	ldr	r5, [sp, #148]	; 0x94
   3cfd8:	add	ip, ip, r3
   3cfdc:	eor	r7, r7, r1
   3cfe0:	add	r0, r0, lr, ror #27
   3cfe4:	add	r7, r7, ip
   3cfe8:	ror	lr, lr, #2
   3cfec:	ldr	ip, [sp, #156]	; 0x9c
   3cff0:	eor	r4, r4, r5
   3cff4:	eor	r5, r2, lr
   3cff8:	ror	r9, r0, #2
   3cffc:	add	r7, r7, r0, ror #27
   3d000:	and	r5, r5, r0
   3d004:	add	ip, ip, #1509949440	; 0x5a000000
   3d008:	ldr	r0, [sp, #112]	; 0x70
   3d00c:	ror	r4, r4, #31
   3d010:	add	ip, ip, #8519680	; 0x820000
   3d014:	eor	r0, r8, r0
   3d018:	add	ip, ip, #30976	; 0x7900
   3d01c:	mov	r8, r4
   3d020:	ldr	r4, [pc, #3372]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3d024:	ldr	r6, [sp, #108]	; 0x6c
   3d028:	ldr	r3, [sp, #100]	; 0x64
   3d02c:	add	ip, ip, #153	; 0x99
   3d030:	add	r1, ip, r1
   3d034:	eor	r5, r5, r2
   3d038:	add	r4, r8, r4
   3d03c:	add	r4, r4, r2
   3d040:	eor	r3, r3, r6
   3d044:	ldr	r2, [sp, #108]	; 0x6c
   3d048:	ldr	r6, [sp, #132]	; 0x84
   3d04c:	add	r5, r5, r1
   3d050:	ldr	r1, [sp, #136]	; 0x88
   3d054:	eor	r3, r3, r6
   3d058:	eor	r0, r0, r1
   3d05c:	ldr	r6, [sp, #152]	; 0x98
   3d060:	eor	r1, r2, sl
   3d064:	ldr	r2, [sp, #156]	; 0x9c
   3d068:	eor	ip, lr, r9
   3d06c:	eor	r3, r3, r6
   3d070:	and	ip, ip, r7
   3d074:	eor	r0, r0, r2
   3d078:	ldr	r2, [sp, #140]	; 0x8c
   3d07c:	add	r5, r5, r7, ror #27
   3d080:	eor	ip, ip, lr
   3d084:	ror	r7, r7, #2
   3d088:	ldr	r6, [pc, #3268]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3d08c:	ror	r3, r3, #31
   3d090:	add	ip, ip, r4
   3d094:	eor	r1, r1, r2
   3d098:	eor	r4, r9, r7
   3d09c:	ldr	r2, [sp, #112]	; 0x70
   3d0a0:	ror	r0, r0, #31
   3d0a4:	add	r6, r3, r6
   3d0a8:	str	r0, [sp]
   3d0ac:	and	r4, r4, r5
   3d0b0:	ldr	r0, [sp, #144]	; 0x90
   3d0b4:	add	lr, r6, lr
   3d0b8:	eor	r2, r2, fp
   3d0bc:	eor	r4, r4, r9
   3d0c0:	eor	r2, r2, r0
   3d0c4:	add	r4, r4, lr
   3d0c8:	ldr	r0, [sp]
   3d0cc:	ldr	lr, [pc, #3200]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3d0d0:	str	r3, [sp, #8]
   3d0d4:	add	lr, r0, lr
   3d0d8:	ldr	r0, [sp, #124]	; 0x7c
   3d0dc:	add	ip, ip, r5, ror #27
   3d0e0:	eor	sl, sl, r0
   3d0e4:	ldr	r0, [sp, #8]
   3d0e8:	ror	r5, r5, #2
   3d0ec:	mov	r3, r8
   3d0f0:	eor	r1, r1, r8
   3d0f4:	eor	r2, r2, r0
   3d0f8:	eor	r8, r7, r5
   3d0fc:	ldr	r0, [sp, #148]	; 0x94
   3d100:	and	r8, r8, ip
   3d104:	eor	r8, r8, r7
   3d108:	add	lr, lr, r9
   3d10c:	eor	sl, sl, r0
   3d110:	ldr	r0, [sp, #128]	; 0x80
   3d114:	ror	r6, ip, #2
   3d118:	add	lr, r8, lr
   3d11c:	ldr	r8, [pc, #3120]	; 3dd54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a0fc>
   3d120:	ror	r1, r1, #31
   3d124:	add	r4, r4, ip, ror #27
   3d128:	eor	fp, fp, r0
   3d12c:	eor	ip, r5, r6
   3d130:	ldr	r0, [sp]
   3d134:	add	r8, r1, r8
   3d138:	and	ip, ip, r4
   3d13c:	add	r7, r8, r7
   3d140:	eor	sl, sl, r0
   3d144:	eor	ip, ip, r5
   3d148:	ldr	r0, [sp, #152]	; 0x98
   3d14c:	add	ip, ip, r7
   3d150:	ldr	r7, [pc, #3072]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d154:	ror	r2, r2, #31
   3d158:	eor	fp, fp, r0
   3d15c:	ldr	r9, [sp, #132]	; 0x84
   3d160:	ldr	r0, [sp, #124]	; 0x7c
   3d164:	add	r7, r2, r7
   3d168:	add	lr, lr, r4, ror #27
   3d16c:	add	r5, r7, r5
   3d170:	ror	r4, r4, #2
   3d174:	eor	r9, r0, r9
   3d178:	ldr	r7, [pc, #3032]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d17c:	ldr	r0, [sp, #156]	; 0x9c
   3d180:	eor	r8, r6, r4
   3d184:	ror	sl, sl, #31
   3d188:	add	ip, ip, lr, ror #27
   3d18c:	str	sl, [sp, #20]
   3d190:	eor	fp, fp, r1
   3d194:	eor	r8, r8, lr
   3d198:	eor	r9, r9, r0
   3d19c:	ror	lr, lr, #2
   3d1a0:	ldr	r0, [sp, #128]	; 0x80
   3d1a4:	add	r7, sl, r7
   3d1a8:	ldr	sl, [sp, #136]	; 0x88
   3d1ac:	add	r8, r8, r5
   3d1b0:	add	r7, r7, r6
   3d1b4:	eor	r5, r4, lr
   3d1b8:	ldr	r6, [pc, #2968]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d1bc:	add	r8, r8, ip, ror #27
   3d1c0:	ror	fp, fp, #31
   3d1c4:	eor	r5, r5, ip
   3d1c8:	eor	sl, r0, sl
   3d1cc:	ror	ip, ip, #2
   3d1d0:	add	r6, fp, r6
   3d1d4:	ldr	r0, [sp, #132]	; 0x84
   3d1d8:	str	r3, [sp, #32]
   3d1dc:	eor	sl, sl, r3
   3d1e0:	add	r7, r5, r7
   3d1e4:	mov	r3, fp
   3d1e8:	eor	r5, lr, ip
   3d1ec:	ldr	fp, [sp, #140]	; 0x8c
   3d1f0:	add	r4, r6, r4
   3d1f4:	eor	r6, r5, r8
   3d1f8:	ldr	r5, [sp, #8]
   3d1fc:	eor	r9, r9, r2
   3d200:	eor	fp, r0, fp
   3d204:	eor	fp, fp, r5
   3d208:	ldr	r0, [sp, #20]
   3d20c:	ldr	r5, [pc, #2884]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d210:	ror	r9, r9, #31
   3d214:	eor	sl, sl, r0
   3d218:	str	r9, [sp, #12]
   3d21c:	add	r5, r9, r5
   3d220:	ldr	r0, [sp, #136]	; 0x88
   3d224:	ldr	r9, [sp, #144]	; 0x90
   3d228:	str	r3, [sp, #40]	; 0x28
   3d22c:	eor	fp, fp, r3
   3d230:	ldr	r3, [sp]
   3d234:	eor	r9, r0, r9
   3d238:	add	r7, r7, r8, ror #27
   3d23c:	ror	r0, sl, #31
   3d240:	ror	r8, r8, #2
   3d244:	eor	r9, r9, r3
   3d248:	ldr	sl, [sp, #140]	; 0x8c
   3d24c:	ldr	r3, [sp, #148]	; 0x94
   3d250:	add	r6, r6, r4
   3d254:	ror	fp, fp, #31
   3d258:	eor	r4, ip, r8
   3d25c:	add	lr, r5, lr
   3d260:	eor	sl, sl, r3
   3d264:	eor	r5, r4, r7
   3d268:	mov	r3, fp
   3d26c:	ldr	fp, [sp, #12]
   3d270:	add	r5, r5, lr
   3d274:	ldr	lr, [pc, #2780]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d278:	add	r6, r6, r7, ror #27
   3d27c:	eor	r9, r9, fp
   3d280:	ror	r7, r7, #2
   3d284:	ldr	fp, [pc, #2764]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d288:	eor	r4, r8, r7
   3d28c:	add	lr, r0, lr
   3d290:	add	ip, lr, ip
   3d294:	str	r3, [sp, #24]
   3d298:	eor	lr, r4, r6
   3d29c:	add	fp, r3, fp
   3d2a0:	eor	sl, sl, r1
   3d2a4:	ldr	r3, [sp, #144]	; 0x90
   3d2a8:	ldr	r4, [sp, #152]	; 0x98
   3d2ac:	eor	sl, sl, r0
   3d2b0:	ror	r9, r9, #31
   3d2b4:	add	r8, fp, r8
   3d2b8:	eor	r4, r3, r4
   3d2bc:	ldr	fp, [sp, #24]
   3d2c0:	str	r9, [sp, #16]
   3d2c4:	add	r9, r9, #1845493760	; 0x6e000000
   3d2c8:	eor	r4, r4, r2
   3d2cc:	ror	sl, sl, #31
   3d2d0:	add	r9, r9, #14221312	; 0xd90000
   3d2d4:	add	r5, r5, r6, ror #27
   3d2d8:	ldr	r3, [sp, #148]	; 0x94
   3d2dc:	ror	r6, r6, #2
   3d2e0:	str	r0, [sp, #44]	; 0x2c
   3d2e4:	eor	r4, r4, fp
   3d2e8:	add	r9, r9, #60160	; 0xeb00
   3d2ec:	mov	fp, sl
   3d2f0:	ldr	sl, [sp, #156]	; 0x9c
   3d2f4:	add	lr, lr, ip
   3d2f8:	ldr	r0, [sp, #20]
   3d2fc:	eor	ip, r7, r6
   3d300:	add	r9, r9, #161	; 0xa1
   3d304:	add	lr, lr, r5, ror #27
   3d308:	add	r7, r9, r7
   3d30c:	eor	ip, ip, r5
   3d310:	ldr	r9, [sp, #16]
   3d314:	ror	r5, r5, #2
   3d318:	eor	sl, r3, sl
   3d31c:	ror	r4, r4, #31
   3d320:	str	r4, [sp, #4]
   3d324:	ldr	r3, [sp, #152]	; 0x98
   3d328:	ldr	r4, [sp, #32]
   3d32c:	add	ip, ip, r8
   3d330:	eor	sl, sl, r0
   3d334:	eor	r8, r6, r5
   3d338:	mov	r0, fp
   3d33c:	ldr	fp, [pc, #2580]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d340:	add	ip, ip, lr, ror #27
   3d344:	eor	r8, r8, lr
   3d348:	eor	sl, sl, r9
   3d34c:	ror	lr, lr, #2
   3d350:	ldr	r9, [sp, #40]	; 0x28
   3d354:	add	fp, r0, fp
   3d358:	add	r8, r8, r7
   3d35c:	eor	r4, r3, r4
   3d360:	eor	r7, r5, lr
   3d364:	add	r6, fp, r6
   3d368:	eor	r7, r7, ip
   3d36c:	eor	r4, r4, r9
   3d370:	ror	sl, sl, #31
   3d374:	str	r0, [sp, #28]
   3d378:	ldr	r3, [sp, #156]	; 0x9c
   3d37c:	add	r7, r7, r6
   3d380:	eor	r4, r4, r0
   3d384:	ldr	r6, [sp, #4]
   3d388:	mov	r0, sl
   3d38c:	ldr	r9, [pc, #2500]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d390:	ldr	sl, [sp, #8]
   3d394:	ldr	fp, [sp, #12]
   3d398:	add	r9, r6, r9
   3d39c:	eor	sl, r3, sl
   3d3a0:	ror	r4, r4, #31
   3d3a4:	add	r5, r9, r5
   3d3a8:	eor	sl, sl, fp
   3d3ac:	mov	r9, r4
   3d3b0:	ldr	fp, [pc, #2464]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d3b4:	ldr	r4, [sp, #4]
   3d3b8:	mov	r3, r0
   3d3bc:	add	fp, r0, fp
   3d3c0:	eor	sl, sl, r4
   3d3c4:	ldr	r0, [sp]
   3d3c8:	ldr	r4, [sp, #32]
   3d3cc:	add	r8, r8, ip, ror #27
   3d3d0:	eor	r4, r4, r0
   3d3d4:	ldr	r0, [sp, #44]	; 0x2c
   3d3d8:	ror	ip, ip, #2
   3d3dc:	eor	r6, lr, ip
   3d3e0:	eor	r4, r4, r0
   3d3e4:	add	r7, r7, r8, ror #27
   3d3e8:	eor	r6, r6, r8
   3d3ec:	ror	sl, sl, #31
   3d3f0:	ror	r8, r8, #2
   3d3f4:	str	r3, [sp, #32]
   3d3f8:	eor	r4, r4, r3
   3d3fc:	ldr	r3, [sp, #8]
   3d400:	mov	r0, sl
   3d404:	add	lr, fp, lr
   3d408:	ldr	sl, [sp, #24]
   3d40c:	mov	fp, r9
   3d410:	add	r6, r6, r5
   3d414:	ldr	r9, [pc, #2364]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d418:	eor	r5, ip, r8
   3d41c:	add	r6, r6, r7, ror #27
   3d420:	eor	r5, r5, r7
   3d424:	eor	r3, r3, r1
   3d428:	ror	r7, r7, #2
   3d42c:	add	r9, fp, r9
   3d430:	add	r5, r5, lr
   3d434:	eor	r3, r3, sl
   3d438:	eor	lr, r8, r7
   3d43c:	ldr	sl, [pc, #2324]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d440:	add	r5, r5, r6, ror #27
   3d444:	add	ip, r9, ip
   3d448:	eor	lr, lr, r6
   3d44c:	eor	r3, r3, fp
   3d450:	ror	r6, r6, #2
   3d454:	str	r0, [sp, #36]	; 0x24
   3d458:	add	sl, r0, sl
   3d45c:	add	lr, lr, ip
   3d460:	ror	r4, r4, #31
   3d464:	eor	ip, r7, r6
   3d468:	ldr	r0, [sp]
   3d46c:	mov	r9, r4
   3d470:	eor	ip, ip, r5
   3d474:	ldr	r4, [sp, #16]
   3d478:	add	r8, sl, r8
   3d47c:	ror	r3, r3, #31
   3d480:	eor	r0, r0, r2
   3d484:	add	r8, ip, r8
   3d488:	mov	ip, r3
   3d48c:	ldr	r3, [sp, #36]	; 0x24
   3d490:	ldr	sl, [sp, #20]
   3d494:	eor	r0, r0, r4
   3d498:	eor	r0, r0, r3
   3d49c:	ldr	r3, [sp, #28]
   3d4a0:	add	lr, lr, r5, ror #27
   3d4a4:	str	ip, [sp, #8]
   3d4a8:	ror	r5, r5, #2
   3d4ac:	str	fp, [sp, #52]	; 0x34
   3d4b0:	eor	r1, r1, sl
   3d4b4:	mov	fp, r9
   3d4b8:	add	ip, ip, #1845493760	; 0x6e000000
   3d4bc:	ldr	r9, [pc, #2196]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d4c0:	eor	r4, r6, r5
   3d4c4:	eor	r1, r1, r3
   3d4c8:	add	ip, ip, #14221312	; 0xd90000
   3d4cc:	add	r8, r8, lr, ror #27
   3d4d0:	add	r9, fp, r9
   3d4d4:	eor	r4, r4, lr
   3d4d8:	eor	r1, r1, fp
   3d4dc:	ror	lr, lr, #2
   3d4e0:	add	ip, ip, #60160	; 0xeb00
   3d4e4:	eor	r3, r5, lr
   3d4e8:	add	r7, r9, r7
   3d4ec:	add	ip, ip, #161	; 0xa1
   3d4f0:	ldr	r9, [sp, #40]	; 0x28
   3d4f4:	eor	r3, r3, r8
   3d4f8:	add	r7, r4, r7
   3d4fc:	add	r6, ip, r6
   3d500:	ror	r4, r0, #31
   3d504:	ldr	ip, [sp, #4]
   3d508:	ror	r1, r1, #31
   3d50c:	eor	r2, r2, r9
   3d510:	add	r6, r3, r6
   3d514:	str	r4, [sp, #40]	; 0x28
   3d518:	mov	r3, r1
   3d51c:	add	r4, r4, #1845493760	; 0x6e000000
   3d520:	ldr	r1, [sp, #8]
   3d524:	eor	r2, r2, ip
   3d528:	add	r4, r4, #14221312	; 0xd90000
   3d52c:	add	r7, r7, r8, ror #27
   3d530:	eor	r2, r2, r1
   3d534:	ror	r8, r8, #2
   3d538:	str	fp, [sp, #60]	; 0x3c
   3d53c:	add	r4, r4, #60160	; 0xeb00
   3d540:	ldr	fp, [sp, #12]
   3d544:	eor	r0, lr, r8
   3d548:	add	r4, r4, #161	; 0xa1
   3d54c:	eor	r1, sl, fp
   3d550:	eor	r0, r0, r7
   3d554:	ldr	sl, [sp, #32]
   3d558:	add	r5, r4, r5
   3d55c:	ror	r2, r2, #31
   3d560:	add	r5, r0, r5
   3d564:	mov	r0, r2
   3d568:	ldr	r2, [sp, #40]	; 0x28
   3d56c:	ldr	r4, [sp, #44]	; 0x2c
   3d570:	eor	r1, r1, sl
   3d574:	ldr	ip, [pc, #2012]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d578:	add	r6, r6, r7, ror #27
   3d57c:	str	r0, [sp, #20]
   3d580:	ror	r7, r7, #2
   3d584:	eor	r1, r1, r2
   3d588:	add	r0, r0, #1845493760	; 0x6e000000
   3d58c:	ldr	r2, [sp, #52]	; 0x34
   3d590:	mov	sl, r3
   3d594:	add	ip, r3, ip
   3d598:	eor	fp, r9, r4
   3d59c:	eor	r3, r8, r7
   3d5a0:	add	r0, r0, #14221312	; 0xd90000
   3d5a4:	add	r5, r5, r6, ror #27
   3d5a8:	eor	r3, r3, r6
   3d5ac:	ldr	r9, [sp, #12]
   3d5b0:	ror	r6, r6, #2
   3d5b4:	add	lr, ip, lr
   3d5b8:	eor	fp, fp, r2
   3d5bc:	ldr	ip, [sp, #24]
   3d5c0:	ror	r1, r1, #31
   3d5c4:	add	r0, r0, #60160	; 0xeb00
   3d5c8:	eor	r2, r7, r6
   3d5cc:	eor	fp, fp, sl
   3d5d0:	add	lr, r3, lr
   3d5d4:	add	r0, r0, #161	; 0xa1
   3d5d8:	mov	r3, r1
   3d5dc:	ldr	r1, [sp, #36]	; 0x24
   3d5e0:	eor	r2, r2, r5
   3d5e4:	eor	r9, r9, ip
   3d5e8:	add	r8, r0, r8
   3d5ec:	ldr	r0, [sp, #20]
   3d5f0:	eor	r9, r9, r1
   3d5f4:	add	r8, r2, r8
   3d5f8:	ror	r2, fp, #31
   3d5fc:	mov	fp, r2
   3d600:	eor	r9, r9, r0
   3d604:	ldr	r2, [sp, #16]
   3d608:	ldr	r1, [pc, #1864]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d60c:	add	lr, lr, r5, ror #27
   3d610:	ror	r5, r5, #2
   3d614:	str	sl, [sp, #44]	; 0x2c
   3d618:	str	r3, [sp, #12]
   3d61c:	add	r1, r3, r1
   3d620:	eor	sl, r4, r2
   3d624:	eor	r3, r6, r5
   3d628:	ror	r4, r9, #31
   3d62c:	eor	r3, r3, lr
   3d630:	add	r7, r1, r7
   3d634:	mov	r1, r4
   3d638:	ldr	r4, [sp, #60]	; 0x3c
   3d63c:	add	r7, r3, r7
   3d640:	ldr	r0, [pc, #1808]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d644:	ldr	r3, [sp, #12]
   3d648:	add	r8, r8, lr, ror #27
   3d64c:	eor	sl, sl, r4
   3d650:	ror	lr, lr, #2
   3d654:	add	r0, fp, r0
   3d658:	eor	r2, r5, lr
   3d65c:	eor	sl, sl, r3
   3d660:	ldr	r3, [sp, #28]
   3d664:	eor	r2, r2, r8
   3d668:	add	r6, r0, r6
   3d66c:	str	fp, [sp, #24]
   3d670:	ldr	r0, [sp, #8]
   3d674:	eor	fp, ip, r3
   3d678:	add	r6, r2, r6
   3d67c:	ror	ip, sl, #31
   3d680:	mov	r2, r1
   3d684:	ldr	r1, [pc, #1740]	; 3dd58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a100>
   3d688:	add	r7, r7, r8, ror #27
   3d68c:	mov	sl, ip
   3d690:	ror	r8, r8, #2
   3d694:	ldr	ip, [sp, #24]
   3d698:	add	r1, r2, r1
   3d69c:	eor	r3, lr, r8
   3d6a0:	eor	fp, fp, r0
   3d6a4:	add	r6, r6, r7, ror #27
   3d6a8:	eor	r3, r3, r7
   3d6ac:	eor	fp, fp, ip
   3d6b0:	add	r5, r1, r5
   3d6b4:	add	r5, r3, r5
   3d6b8:	add	r1, r5, r6, ror #27
   3d6bc:	ldr	r9, [sp, #16]
   3d6c0:	ldr	ip, [sp, #4]
   3d6c4:	ror	r5, fp, #31
   3d6c8:	mov	fp, r5
   3d6cc:	ldr	r3, [pc, #1672]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d6d0:	ldr	r5, [sp, #40]	; 0x28
   3d6d4:	ror	r7, r7, #2
   3d6d8:	eor	r4, r9, ip
   3d6dc:	add	r3, sl, r3
   3d6e0:	orr	r0, r6, r7
   3d6e4:	eor	r4, r4, r5
   3d6e8:	ror	ip, r6, #2
   3d6ec:	ldr	r9, [sp, #32]
   3d6f0:	and	r0, r0, r8
   3d6f4:	eor	r4, r4, r2
   3d6f8:	add	lr, r3, lr
   3d6fc:	and	r6, r6, r7
   3d700:	str	r2, [sp, #48]	; 0x30
   3d704:	ldr	r2, [sp, #28]
   3d708:	orr	r3, r1, ip
   3d70c:	orr	r6, r0, r6
   3d710:	add	lr, lr, r1, ror #27
   3d714:	add	lr, r6, lr
   3d718:	and	r0, r1, ip
   3d71c:	str	sl, [sp, #16]
   3d720:	ldr	r5, [sp, #44]	; 0x2c
   3d724:	eor	sl, r2, r9
   3d728:	ror	r6, r4, #31
   3d72c:	add	r2, fp, #-1895825408	; 0x8f000000
   3d730:	and	r3, r3, r7
   3d734:	orr	r3, r3, r0
   3d738:	add	r2, r2, #1802240	; 0x1b8000
   3d73c:	mov	r0, r6
   3d740:	ldr	r6, [sp, #16]
   3d744:	eor	sl, sl, r5
   3d748:	add	r2, r2, #15552	; 0x3cc0
   3d74c:	add	r2, r2, #28
   3d750:	eor	sl, sl, r6
   3d754:	add	r8, r2, r8
   3d758:	add	r8, r3, r8
   3d75c:	str	fp, [sp, #28]
   3d760:	ldr	r3, [sp, #4]
   3d764:	ldr	fp, [sp, #52]	; 0x34
   3d768:	ror	sl, sl, #31
   3d76c:	str	r0, [sp, #32]
   3d770:	str	sl, [sp]
   3d774:	ldr	r6, [sp, #20]
   3d778:	add	r2, r8, lr, ror #27
   3d77c:	eor	r4, r3, fp
   3d780:	ldr	r8, [sp, #28]
   3d784:	ldr	r3, [pc, #1488]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d788:	ror	r1, r1, #2
   3d78c:	eor	r4, r4, r6
   3d790:	add	r3, r0, r3
   3d794:	eor	r4, r4, r8
   3d798:	orr	r0, lr, r1
   3d79c:	ldr	r8, [sp, #36]	; 0x24
   3d7a0:	ror	r5, lr, #2
   3d7a4:	and	r0, r0, ip
   3d7a8:	and	lr, lr, r1
   3d7ac:	eor	sl, r9, r8
   3d7b0:	orr	lr, r0, lr
   3d7b4:	ldr	r9, [sp]
   3d7b8:	add	r7, r3, r7
   3d7bc:	ldr	r0, [pc, #1432]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d7c0:	orr	r3, r2, r5
   3d7c4:	add	r7, r7, r2, ror #27
   3d7c8:	add	r7, lr, r7
   3d7cc:	and	r6, r2, r5
   3d7d0:	add	r0, r9, r0
   3d7d4:	ror	lr, r4, #31
   3d7d8:	ldr	r9, [sp, #12]
   3d7dc:	and	r3, r3, r1
   3d7e0:	orr	r3, r3, r6
   3d7e4:	mov	r6, lr
   3d7e8:	ldr	lr, [sp, #32]
   3d7ec:	eor	sl, sl, r9
   3d7f0:	add	ip, r0, ip
   3d7f4:	eor	sl, sl, lr
   3d7f8:	ror	r2, r2, #2
   3d7fc:	add	r0, r3, ip
   3d800:	ldr	r3, [pc, #1364]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d804:	orr	ip, r7, r2
   3d808:	ror	lr, sl, #31
   3d80c:	add	r0, r0, r7, ror #27
   3d810:	str	lr, [sp, #4]
   3d814:	str	r6, [sp, #36]	; 0x24
   3d818:	add	r3, r6, r3
   3d81c:	and	ip, ip, r5
   3d820:	ror	r6, r7, #2
   3d824:	and	r7, r7, r2
   3d828:	ldr	r9, [sp, #60]	; 0x3c
   3d82c:	orr	r7, ip, r7
   3d830:	ldr	ip, [sp, #4]
   3d834:	ldr	lr, [sp, #24]
   3d838:	eor	r4, fp, r9
   3d83c:	add	ip, ip, #-1895825408	; 0x8f000000
   3d840:	ldr	fp, [sp]
   3d844:	eor	r4, r4, lr
   3d848:	add	ip, ip, #1802240	; 0x1b8000
   3d84c:	ldr	lr, [sp, #8]
   3d850:	add	r1, r3, r1
   3d854:	add	ip, ip, #15552	; 0x3cc0
   3d858:	orr	r3, r0, r6
   3d85c:	eor	sl, r8, lr
   3d860:	eor	r4, r4, fp
   3d864:	and	lr, r0, r6
   3d868:	add	ip, ip, #28
   3d86c:	and	r3, r3, r2
   3d870:	add	r5, ip, r5
   3d874:	orr	r3, r3, lr
   3d878:	ldr	r8, [sp, #48]	; 0x30
   3d87c:	add	lr, r3, r5
   3d880:	ror	r4, r4, #31
   3d884:	ldr	r3, [pc, #1232]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d888:	mov	ip, r4
   3d88c:	ldr	r4, [sp, #36]	; 0x24
   3d890:	add	r3, ip, r3
   3d894:	add	r1, r1, r0, ror #27
   3d898:	eor	sl, sl, r8
   3d89c:	ror	fp, r0, #2
   3d8a0:	add	r1, r7, r1
   3d8a4:	ldr	r0, [sp, #44]	; 0x2c
   3d8a8:	ldr	r7, [sp, #40]	; 0x28
   3d8ac:	eor	sl, sl, r4
   3d8b0:	add	r2, r3, r2
   3d8b4:	ldr	r3, [sp, #8]
   3d8b8:	add	lr, lr, r1, ror #27
   3d8bc:	eor	r4, r9, r7
   3d8c0:	orr	r5, r1, fp
   3d8c4:	ror	r9, r1, #2
   3d8c8:	ror	sl, sl, #31
   3d8cc:	eor	r3, r3, r0
   3d8d0:	ldr	r0, [pc, #1156]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d8d4:	mov	r8, sl
   3d8d8:	str	ip, [sp, #40]	; 0x28
   3d8dc:	ldr	sl, [sp, #16]
   3d8e0:	and	r5, r5, r6
   3d8e4:	orr	ip, lr, r9
   3d8e8:	and	r1, r1, fp
   3d8ec:	orr	r1, r5, r1
   3d8f0:	add	r0, r8, r0
   3d8f4:	and	r5, lr, r9
   3d8f8:	and	ip, ip, fp
   3d8fc:	add	r6, r0, r6
   3d900:	eor	r4, r4, sl
   3d904:	orr	ip, ip, r5
   3d908:	ldr	sl, [sp, #4]
   3d90c:	str	r8, [sp, #8]
   3d910:	add	ip, ip, r6
   3d914:	ldr	r8, [sp, #28]
   3d918:	ldr	r6, [sp, #20]
   3d91c:	ldr	r5, [sp, #40]	; 0x28
   3d920:	eor	r4, r4, sl
   3d924:	add	r2, r2, lr, ror #27
   3d928:	add	r2, r1, r2
   3d92c:	ror	lr, lr, #2
   3d930:	eor	r0, r7, r6
   3d934:	eor	r3, r3, r8
   3d938:	ldr	r7, [sp, #32]
   3d93c:	ldr	r1, [pc, #1048]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d940:	ror	r4, r4, #31
   3d944:	eor	r3, r3, r5
   3d948:	orr	r5, r2, lr
   3d94c:	add	ip, ip, r2, ror #27
   3d950:	str	r4, [sp, #52]	; 0x34
   3d954:	add	r1, r4, r1
   3d958:	eor	r8, r0, r7
   3d95c:	ror	r4, r2, #2
   3d960:	and	r5, r5, r9
   3d964:	ldr	r7, [sp, #8]
   3d968:	and	r2, r2, lr
   3d96c:	orr	r2, r5, r2
   3d970:	ldr	r5, [pc, #996]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d974:	ror	sl, r3, #31
   3d978:	add	r0, r1, fp
   3d97c:	eor	r8, r8, r7
   3d980:	ldr	r1, [sp, #44]	; 0x2c
   3d984:	ldr	r7, [sp, #12]
   3d988:	add	r5, sl, r5
   3d98c:	ldr	fp, [sp]
   3d990:	add	r9, r5, r9
   3d994:	eor	r1, r1, r7
   3d998:	ldr	r5, [sp, #52]	; 0x34
   3d99c:	orr	r3, ip, r4
   3d9a0:	add	r0, r0, ip, ror #27
   3d9a4:	eor	r1, r1, fp
   3d9a8:	add	r0, r2, r0
   3d9ac:	and	r6, ip, r4
   3d9b0:	ldr	r2, [sp, #20]
   3d9b4:	eor	r1, r1, r5
   3d9b8:	and	r3, r3, lr
   3d9bc:	ldr	r5, [sp, #24]
   3d9c0:	ror	ip, ip, #2
   3d9c4:	orr	r3, r3, r6
   3d9c8:	ldr	r7, [pc, #908]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3d9cc:	ror	r6, r8, #31
   3d9d0:	add	r3, r3, r9
   3d9d4:	eor	r8, r2, r5
   3d9d8:	orr	r5, r0, ip
   3d9dc:	add	r3, r3, r0, ror #27
   3d9e0:	str	r6, [sp, #20]
   3d9e4:	add	r7, r6, r7
   3d9e8:	ldr	r9, [sp, #36]	; 0x24
   3d9ec:	ror	r6, r0, #2
   3d9f0:	and	r5, r5, r4
   3d9f4:	and	r0, r0, ip
   3d9f8:	ror	fp, r1, #31
   3d9fc:	ldr	r2, [sp, #12]
   3da00:	ldr	r1, [sp, #48]	; 0x30
   3da04:	orr	r0, r5, r0
   3da08:	ldr	r5, [pc, #844]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3da0c:	eor	r8, r8, r9
   3da10:	orr	r9, r3, r6
   3da14:	add	r5, fp, r5
   3da18:	add	lr, r7, lr
   3da1c:	eor	r1, r2, r1
   3da20:	and	r7, r3, r6
   3da24:	and	r2, r9, ip
   3da28:	eor	r8, r8, sl
   3da2c:	add	lr, lr, r3, ror #27
   3da30:	add	r4, r5, r4
   3da34:	orr	r2, r2, r7
   3da38:	add	r0, r0, lr
   3da3c:	ldr	r9, [sp, #4]
   3da40:	ldr	lr, [sp, #24]
   3da44:	add	r2, r2, r4
   3da48:	ldr	r4, [sp, #16]
   3da4c:	ror	r7, r8, #31
   3da50:	eor	r1, r1, r9
   3da54:	eor	r8, lr, r4
   3da58:	ldr	r9, [sp, #20]
   3da5c:	add	lr, r7, #-1895825408	; 0x8f000000
   3da60:	add	lr, lr, #1802240	; 0x1b8000
   3da64:	ror	r3, r3, #2
   3da68:	str	r7, [sp, #12]
   3da6c:	eor	r1, r1, r9
   3da70:	ldr	r7, [sp, #40]	; 0x28
   3da74:	add	lr, lr, #15552	; 0x3cc0
   3da78:	add	r2, r2, r0, ror #27
   3da7c:	orr	r5, r0, r3
   3da80:	add	lr, lr, #28
   3da84:	ror	r4, r0, #2
   3da88:	ror	r9, r1, #31
   3da8c:	and	r0, r0, r3
   3da90:	eor	r8, r8, r7
   3da94:	add	ip, lr, ip
   3da98:	ldr	r7, [sp, #28]
   3da9c:	and	r5, r5, r6
   3daa0:	ldr	r1, [sp, #48]	; 0x30
   3daa4:	add	ip, ip, r2, ror #27
   3daa8:	orr	r5, r5, r0
   3daac:	ldr	r0, [sp, #8]
   3dab0:	add	r5, r5, ip
   3dab4:	eor	r1, r1, r7
   3dab8:	ldr	ip, [sp, #12]
   3dabc:	ldr	r7, [pc, #664]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3dac0:	orr	lr, r2, r4
   3dac4:	eor	r1, r1, r0
   3dac8:	str	r9, [sp, #24]
   3dacc:	add	r7, r9, r7
   3dad0:	and	lr, lr, r3
   3dad4:	and	r9, r2, r4
   3dad8:	eor	r1, r1, ip
   3dadc:	ldr	r0, [sp, #16]
   3dae0:	orr	lr, lr, r9
   3dae4:	ldr	ip, [sp, #32]
   3dae8:	eor	r8, r8, fp
   3daec:	add	r6, r7, r6
   3daf0:	ror	r2, r2, #2
   3daf4:	add	r6, lr, r6
   3daf8:	ror	r1, r1, #31
   3dafc:	ldr	lr, [pc, #600]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3db00:	str	r1, [sp, #16]
   3db04:	ror	r8, r8, #31
   3db08:	ldr	r1, [sp, #52]	; 0x34
   3db0c:	eor	ip, r0, ip
   3db10:	orr	r0, r5, r2
   3db14:	add	r6, r6, r5, ror #27
   3db18:	str	r8, [sp, #44]	; 0x2c
   3db1c:	ldr	r9, [sp, #24]
   3db20:	add	lr, r8, lr
   3db24:	and	r0, r0, r4
   3db28:	ror	r8, r5, #2
   3db2c:	and	r5, r5, r2
   3db30:	eor	ip, ip, r1
   3db34:	orr	r0, r0, r5
   3db38:	ldr	r5, [sp, #16]
   3db3c:	eor	ip, ip, r9
   3db40:	ldr	r7, [sp]
   3db44:	add	lr, lr, r3
   3db48:	ldr	r1, [sp, #28]
   3db4c:	orr	r3, r6, r8
   3db50:	add	lr, lr, r6, ror #27
   3db54:	add	r5, r5, #-1895825408	; 0x8f000000
   3db58:	add	r0, r0, lr
   3db5c:	eor	r1, r1, r7
   3db60:	ror	lr, ip, #31
   3db64:	and	r7, r6, r8
   3db68:	and	r3, r3, r2
   3db6c:	add	r5, r5, #1802240	; 0x1b8000
   3db70:	orr	r3, r3, r7
   3db74:	add	r5, r5, #15552	; 0x3cc0
   3db78:	mov	r7, lr
   3db7c:	ldr	lr, [sp, #44]	; 0x2c
   3db80:	eor	r1, r1, sl
   3db84:	add	r5, r5, #28
   3db88:	eor	r9, r1, lr
   3db8c:	add	r4, r5, r4
   3db90:	ror	ip, r6, #2
   3db94:	add	r5, r3, r4
   3db98:	ldr	r6, [sp, #36]	; 0x24
   3db9c:	ldr	r3, [sp, #32]
   3dba0:	ror	r4, r9, #31
   3dba4:	add	lr, r7, #-1895825408	; 0x8f000000
   3dba8:	ldr	r9, [sp, #20]
   3dbac:	eor	r3, r3, r6
   3dbb0:	add	lr, lr, #1802240	; 0x1b8000
   3dbb4:	mov	r6, r4
   3dbb8:	ldr	r4, [sp, #16]
   3dbbc:	eor	r3, r3, r9
   3dbc0:	add	lr, lr, #15552	; 0x3cc0
   3dbc4:	add	r5, r5, r0, ror #27
   3dbc8:	orr	r1, r0, ip
   3dbcc:	str	r7, [sp, #32]
   3dbd0:	add	lr, lr, #28
   3dbd4:	eor	r3, r3, r4
   3dbd8:	ldm	sp, {r4, r9}
   3dbdc:	ror	r7, r0, #2
   3dbe0:	add	r2, lr, r2
   3dbe4:	and	r0, r0, ip
   3dbe8:	and	r1, r1, r8
   3dbec:	str	r6, [sp]
   3dbf0:	add	r2, r2, r5, ror #27
   3dbf4:	orr	r1, r1, r0
   3dbf8:	add	r6, r6, #-1895825408	; 0x8f000000
   3dbfc:	add	r1, r1, r2
   3dc00:	eor	r4, r4, r9
   3dc04:	ldr	r2, [sp, #32]
   3dc08:	add	r6, r6, #1802240	; 0x1b8000
   3dc0c:	orr	lr, r5, r7
   3dc10:	eor	r4, r4, fp
   3dc14:	add	r6, r6, #15552	; 0x3cc0
   3dc18:	and	r9, r5, r7
   3dc1c:	and	r0, lr, ip
   3dc20:	add	r6, r6, #28
   3dc24:	eor	r4, r4, r2
   3dc28:	add	r8, r6, r8
   3dc2c:	orr	r0, r0, r9
   3dc30:	ldr	r6, [sp, #36]	; 0x24
   3dc34:	ldr	r2, [sp, #40]	; 0x28
   3dc38:	add	r9, r0, r8
   3dc3c:	ror	r4, r4, #31
   3dc40:	ldr	r8, [sp, #12]
   3dc44:	str	fp, [sp, #48]	; 0x30
   3dc48:	eor	r2, r6, r2
   3dc4c:	mov	fp, r4
   3dc50:	ldr	r4, [sp]
   3dc54:	eor	r2, r2, r8
   3dc58:	ldr	r6, [pc, #252]	; 3dd5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a104>
   3dc5c:	ror	r3, r3, #31
   3dc60:	eor	r2, r2, r4
   3dc64:	ldmib	sp, {r0, r4}
   3dc68:	add	r6, r3, r6
   3dc6c:	add	r6, r6, ip
   3dc70:	ldr	ip, [sp, #24]
   3dc74:	eor	r0, r0, r4
   3dc78:	eor	r0, r0, ip
   3dc7c:	add	ip, fp, #-1895825408	; 0x8f000000
   3dc80:	add	r9, r9, r1, ror #27
   3dc84:	ror	r8, r1, #2
   3dc88:	add	ip, ip, #1802240	; 0x1b8000
   3dc8c:	ror	r5, r5, #2
   3dc90:	orr	r4, r9, r8
   3dc94:	add	ip, ip, #15552	; 0x3cc0
   3dc98:	str	r8, [sp, #36]	; 0x24
   3dc9c:	orr	lr, r1, r5
   3dca0:	and	r8, r9, r8
   3dca4:	and	r4, r4, r5
   3dca8:	add	ip, ip, #28
   3dcac:	and	r1, r1, r5
   3dcb0:	orr	r4, r4, r8
   3dcb4:	and	lr, lr, r7
   3dcb8:	add	ip, ip, r7
   3dcbc:	add	r6, r6, r9, ror #27
   3dcc0:	ldr	r7, [sp, #36]	; 0x24
   3dcc4:	orr	lr, lr, r1
   3dcc8:	add	ip, r4, ip
   3dccc:	ldr	r4, [pc, #140]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3dcd0:	add	lr, lr, r6
   3dcd4:	str	fp, [sp, #4]
   3dcd8:	ror	r6, r9, #2
   3dcdc:	ldr	fp, [sp, #52]	; 0x34
   3dce0:	ror	r2, r2, #31
   3dce4:	ldr	r1, [sp, #40]	; 0x28
   3dce8:	eor	r8, r7, r6
   3dcec:	ldr	r9, [sp, #44]	; 0x2c
   3dcf0:	ldr	r7, [sp, #8]
   3dcf4:	add	r4, r2, r4
   3dcf8:	str	r2, [sp, #28]
   3dcfc:	add	r5, r4, r5
   3dd00:	eor	r1, r1, fp
   3dd04:	ldr	r4, [sp, #16]
   3dd08:	eor	r1, r1, r9
   3dd0c:	eor	r9, r7, sl
   3dd10:	eor	r7, r8, lr
   3dd14:	ldr	r8, [sp, #28]
   3dd18:	eor	r9, r9, r4
   3dd1c:	eor	r0, r0, r3
   3dd20:	eor	r9, r9, r8
   3dd24:	ldr	r8, [sp, #20]
   3dd28:	ldr	r2, [sp, #4]
   3dd2c:	ldr	r4, [pc, #44]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3dd30:	ror	r0, r0, #31
   3dd34:	eor	r8, fp, r8
   3dd38:	ldr	fp, [sp, #36]	; 0x24
   3dd3c:	add	ip, ip, lr, ror #27
   3dd40:	eor	r1, r1, r2
   3dd44:	ror	lr, lr, #2
   3dd48:	add	r4, r0, r4
   3dd4c:	ror	r9, r9, #31
   3dd50:	b	3dd64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a10c>
   3dd54:	bpl	fe0dc3c0 <optarg@@GLIBC_2.4+0xfe0149b8>
   3dd58:	vfnmsvs.f64	d30, d25, d17
   3dd5c:	svchi	0x001bbcdc
   3dd60:	bgt	18ee4c0 <optarg@@GLIBC_2.4+0x1826ab8>
   3dd64:	add	r4, r4, fp
   3dd68:	str	r9, [sp, #8]
   3dd6c:	ldr	fp, [sp, #32]
   3dd70:	add	r7, r7, r5
   3dd74:	ldr	r9, [pc, #-28]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3dd78:	eor	r5, r6, lr
   3dd7c:	ror	r1, r1, #31
   3dd80:	add	r7, r7, ip, ror #27
   3dd84:	eor	r5, r5, ip
   3dd88:	ror	ip, ip, #2
   3dd8c:	eor	r8, r8, fp
   3dd90:	add	r5, r5, r4
   3dd94:	ldr	fp, [sp, #48]	; 0x30
   3dd98:	eor	r4, lr, ip
   3dd9c:	add	r9, r1, r9
   3dda0:	add	r5, r5, r7, ror #27
   3dda4:	add	r9, r9, r6
   3dda8:	eor	r4, r4, r7
   3ddac:	ror	r6, r7, #2
   3ddb0:	ldr	r7, [sp]
   3ddb4:	eor	sl, sl, fp
   3ddb8:	eor	sl, sl, r7
   3ddbc:	eor	r7, ip, r6
   3ddc0:	eor	r8, r8, r0
   3ddc4:	mov	fp, r7
   3ddc8:	ldr	r7, [sp, #8]
   3ddcc:	add	r4, r4, r9
   3ddd0:	add	r7, r7, #-905969664	; 0xca000000
   3ddd4:	ror	r9, r8, #31
   3ddd8:	eor	sl, sl, r1
   3dddc:	ldr	r8, [sp, #12]
   3dde0:	add	r7, r7, #6422528	; 0x620000
   3dde4:	str	r9, [sp, #96]	; 0x60
   3dde8:	ldr	r9, [sp, #20]
   3ddec:	add	r7, r7, #49408	; 0xc100
   3ddf0:	add	r7, r7, #214	; 0xd6
   3ddf4:	eor	r9, r9, r8
   3ddf8:	ror	sl, sl, #31
   3ddfc:	add	r4, r4, r5, ror #27
   3de00:	str	sl, [sp, #100]	; 0x64
   3de04:	mov	r8, r9
   3de08:	ldr	sl, [sp, #8]
   3de0c:	ror	r9, r5, #2
   3de10:	add	lr, r7, lr
   3de14:	eor	r5, r5, fp
   3de18:	ldr	r7, [sp, #96]	; 0x60
   3de1c:	ldr	fp, [pc, #-196]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3de20:	eor	r8, r8, r3
   3de24:	add	fp, r7, fp
   3de28:	eor	r8, r8, sl
   3de2c:	add	lr, r5, lr
   3de30:	ldr	sl, [sp, #24]
   3de34:	ldr	r5, [sp, #48]	; 0x30
   3de38:	add	ip, fp, ip
   3de3c:	ldr	fp, [sp, #100]	; 0x64
   3de40:	ror	r8, r8, #31
   3de44:	str	r8, [sp, #104]	; 0x68
   3de48:	eor	r5, r5, sl
   3de4c:	ldr	r8, [sp, #96]	; 0x60
   3de50:	add	fp, fp, #-905969664	; 0xca000000
   3de54:	eor	r5, r5, r2
   3de58:	add	fp, fp, #6422528	; 0x620000
   3de5c:	eor	r5, r5, r8
   3de60:	add	fp, fp, #49408	; 0xc100
   3de64:	ldr	r2, [sp, #44]	; 0x2c
   3de68:	ldr	r8, [sp, #12]
   3de6c:	add	fp, fp, #214	; 0xd6
   3de70:	eor	r7, r6, r9
   3de74:	add	fp, fp, r6
   3de78:	ror	r5, r5, #31
   3de7c:	ldr	r6, [sp, #28]
   3de80:	add	lr, lr, r4, ror #27
   3de84:	str	r5, [sp, #108]	; 0x6c
   3de88:	eor	r7, r7, r4
   3de8c:	ldr	r5, [sp, #100]	; 0x64
   3de90:	ror	r4, r4, #2
   3de94:	eor	r8, r8, r2
   3de98:	add	ip, r7, ip
   3de9c:	eor	r8, r8, r6
   3dea0:	eor	r7, r9, r4
   3dea4:	ldr	r6, [sp, #104]	; 0x68
   3dea8:	ldr	sl, [pc, #-336]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3deac:	eor	r7, r7, lr
   3deb0:	eor	r8, r8, r5
   3deb4:	add	sl, r6, sl
   3deb8:	add	r7, r7, fp
   3debc:	ldr	r5, [sp, #24]
   3dec0:	ldr	fp, [sp, #16]
   3dec4:	add	sl, sl, r9
   3dec8:	ror	r8, r8, #31
   3decc:	ldr	r9, [sp, #108]	; 0x6c
   3ded0:	str	r8, [sp, #112]	; 0x70
   3ded4:	eor	r5, r5, fp
   3ded8:	ldr	r8, [sp, #104]	; 0x68
   3dedc:	eor	r5, r5, r0
   3dee0:	add	r9, r9, #-905969664	; 0xca000000
   3dee4:	eor	r5, r5, r8
   3dee8:	add	r9, r9, #6422528	; 0x620000
   3deec:	mov	r8, r2
   3def0:	add	r9, r9, #49408	; 0xc100
   3def4:	ldr	r2, [sp, #32]
   3def8:	add	ip, ip, lr, ror #27
   3defc:	add	r9, r9, #214	; 0xd6
   3df00:	ror	lr, lr, #2
   3df04:	ror	r5, r5, #31
   3df08:	eor	r6, r4, lr
   3df0c:	str	r5, [sp, #116]	; 0x74
   3df10:	eor	r8, r8, r2
   3df14:	ldr	r5, [sp, #108]	; 0x6c
   3df18:	add	r4, r9, r4
   3df1c:	ldr	r9, [sp, #112]	; 0x70
   3df20:	eor	r8, r8, r1
   3df24:	eor	r8, r8, r5
   3df28:	add	r9, r9, #-905969664	; 0xca000000
   3df2c:	ldr	r5, [sp]
   3df30:	add	r9, r9, #6422528	; 0x620000
   3df34:	eor	r5, fp, r5
   3df38:	add	r9, r9, #49408	; 0xc100
   3df3c:	ldr	fp, [sp, #116]	; 0x74
   3df40:	add	r7, r7, ip, ror #27
   3df44:	eor	r6, r6, ip
   3df48:	add	r9, r9, #214	; 0xd6
   3df4c:	ror	ip, ip, #2
   3df50:	add	r6, r6, sl
   3df54:	ror	r8, r8, #31
   3df58:	eor	sl, lr, ip
   3df5c:	add	fp, fp, #-905969664	; 0xca000000
   3df60:	add	lr, r9, lr
   3df64:	ldr	r9, [sp, #8]
   3df68:	str	r8, [sp, #120]	; 0x78
   3df6c:	add	fp, fp, #6422528	; 0x620000
   3df70:	ldr	r8, [sp, #112]	; 0x70
   3df74:	eor	r5, r5, r9
   3df78:	add	fp, fp, #49408	; 0xc100
   3df7c:	add	r6, r6, r7, ror #27
   3df80:	eor	sl, sl, r7
   3df84:	add	fp, fp, #214	; 0xd6
   3df88:	ror	r7, r7, #2
   3df8c:	eor	r5, r5, r8
   3df90:	add	r4, sl, r4
   3df94:	eor	sl, ip, r7
   3df98:	add	ip, fp, ip
   3df9c:	ldr	fp, [sp, #96]	; 0x60
   3dfa0:	eor	r8, r2, r3
   3dfa4:	ror	r5, r5, #31
   3dfa8:	add	r4, r4, r6, ror #27
   3dfac:	eor	sl, sl, r6
   3dfb0:	eor	r8, r8, fp
   3dfb4:	ror	r6, r6, #2
   3dfb8:	ldr	fp, [sp, #120]	; 0x78
   3dfbc:	str	r5, [sp, #124]	; 0x7c
   3dfc0:	ldr	r5, [sp, #116]	; 0x74
   3dfc4:	eor	r9, r7, r6
   3dfc8:	add	lr, sl, lr
   3dfcc:	ldr	sl, [pc, #-628]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3dfd0:	add	lr, lr, r4, ror #27
   3dfd4:	eor	r9, r9, r4
   3dfd8:	eor	r8, r8, r5
   3dfdc:	ror	r4, r4, #2
   3dfe0:	ldm	sp, {r2, r5}
   3dfe4:	add	sl, fp, sl
   3dfe8:	add	ip, r9, ip
   3dfec:	eor	fp, r6, r4
   3dff0:	add	ip, ip, lr, ror #27
   3dff4:	eor	fp, fp, lr
   3dff8:	add	r7, sl, r7
   3dffc:	ror	sl, lr, #2
   3e000:	ldr	lr, [sp, #100]	; 0x64
   3e004:	eor	r5, r2, r5
   3e008:	ror	r8, r8, #31
   3e00c:	eor	r9, r5, lr
   3e010:	str	r8, [sp, #128]	; 0x80
   3e014:	ldr	lr, [sp, #124]	; 0x7c
   3e018:	ldr	r8, [sp, #120]	; 0x78
   3e01c:	ldr	r5, [pc, #-708]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e020:	ldr	r2, [sp, #28]
   3e024:	add	r5, lr, r5
   3e028:	eor	r8, r9, r8
   3e02c:	eor	lr, r4, sl
   3e030:	eor	lr, lr, ip
   3e034:	add	r7, fp, r7
   3e038:	eor	r3, r3, r2
   3e03c:	add	r6, r5, r6
   3e040:	ldr	r2, [sp, #4]
   3e044:	add	fp, r7, ip, ror #27
   3e048:	ror	r9, ip, #2
   3e04c:	add	r6, lr, r6
   3e050:	ldr	ip, [sp, #104]	; 0x68
   3e054:	ror	lr, r8, #31
   3e058:	str	lr, [sp, #132]	; 0x84
   3e05c:	eor	r8, r2, r0
   3e060:	ldr	lr, [sp, #124]	; 0x7c
   3e064:	ldr	r2, [sp, #108]	; 0x6c
   3e068:	eor	r3, r3, ip
   3e06c:	ldr	ip, [sp, #128]	; 0x80
   3e070:	eor	r3, r3, lr
   3e074:	eor	r8, r8, r2
   3e078:	ldr	lr, [pc, #-800]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e07c:	ldr	r2, [sp, #132]	; 0x84
   3e080:	add	ip, ip, #-905969664	; 0xca000000
   3e084:	add	lr, r2, lr
   3e088:	add	ip, ip, #6422528	; 0x620000
   3e08c:	ldr	r2, [sp, #128]	; 0x80
   3e090:	add	ip, ip, #49408	; 0xc100
   3e094:	add	ip, ip, #214	; 0xd6
   3e098:	eor	r8, r8, r2
   3e09c:	ldr	r2, [sp, #28]
   3e0a0:	add	r4, ip, r4
   3e0a4:	ldr	ip, [sp, #112]	; 0x70
   3e0a8:	eor	r2, r2, r1
   3e0ac:	eor	r5, sl, r9
   3e0b0:	eor	r2, r2, ip
   3e0b4:	ldr	ip, [pc, #-860]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e0b8:	ror	r7, fp, #2
   3e0bc:	add	r6, r6, fp, ror #27
   3e0c0:	ror	r3, r3, #31
   3e0c4:	eor	r5, r5, fp
   3e0c8:	ldr	fp, [sp, #132]	; 0x84
   3e0cc:	add	lr, lr, sl
   3e0d0:	add	ip, r3, ip
   3e0d4:	ldr	sl, [sp, #8]
   3e0d8:	add	ip, ip, r9
   3e0dc:	add	r5, r5, r4
   3e0e0:	eor	r2, r2, fp
   3e0e4:	eor	r4, r9, r7
   3e0e8:	ldr	fp, [pc, #-912]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e0ec:	ldr	r9, [sp, #116]	; 0x74
   3e0f0:	ror	r8, r8, #31
   3e0f4:	eor	r0, r0, sl
   3e0f8:	add	r5, r5, r6, ror #27
   3e0fc:	eor	r4, r4, r6
   3e100:	eor	r0, r0, r9
   3e104:	ror	r6, r6, #2
   3e108:	ldr	r9, [sp, #96]	; 0x60
   3e10c:	add	fp, r8, fp
   3e110:	add	fp, fp, r7
   3e114:	add	r4, r4, lr
   3e118:	eor	lr, r7, r6
   3e11c:	ldr	r7, [sp, #120]	; 0x78
   3e120:	eor	r1, r1, r9
   3e124:	add	r4, r4, r5, ror #27
   3e128:	eor	lr, lr, r5
   3e12c:	eor	r1, r1, r7
   3e130:	ror	r5, r5, #2
   3e134:	ldr	r7, [sp, #100]	; 0x64
   3e138:	add	lr, lr, ip
   3e13c:	eor	ip, r6, r5
   3e140:	eor	r9, sl, r7
   3e144:	eor	ip, ip, r4
   3e148:	ldr	sl, [pc, #-1008]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e14c:	ror	r2, r2, #31
   3e150:	add	lr, lr, r4, ror #27
   3e154:	add	ip, ip, fp
   3e158:	ror	r4, r4, #2
   3e15c:	ldr	fp, [sp, #124]	; 0x7c
   3e160:	add	sl, r2, sl
   3e164:	eor	r7, r5, r4
   3e168:	eor	r0, r0, r3
   3e16c:	add	r6, sl, r6
   3e170:	eor	r9, r9, fp
   3e174:	eor	r7, r7, lr
   3e178:	eor	r1, r1, r8
   3e17c:	ldr	fp, [pc, #-1060]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e180:	ror	r0, r0, #31
   3e184:	add	r7, r7, r6
   3e188:	ldr	r6, [pc, #-1072]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e18c:	add	fp, r0, fp
   3e190:	ror	r1, r1, #31
   3e194:	eor	r9, r9, r2
   3e198:	add	ip, ip, lr, ror #27
   3e19c:	add	r6, r1, r6
   3e1a0:	ror	lr, lr, #2
   3e1a4:	add	r5, fp, r5
   3e1a8:	ldr	fp, [pc, #-1104]	; 3dd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a108>
   3e1ac:	eor	sl, r4, lr
   3e1b0:	ror	r9, r9, #31
   3e1b4:	add	r4, r6, r4
   3e1b8:	ldr	r6, [sp, #64]	; 0x40
   3e1bc:	add	r7, r7, ip, ror #27
   3e1c0:	eor	sl, sl, ip
   3e1c4:	add	fp, r9, fp
   3e1c8:	ror	ip, ip, #2
   3e1cc:	add	r6, fp, r6
   3e1d0:	add	r5, sl, r5
   3e1d4:	eor	sl, lr, ip
   3e1d8:	eor	sl, sl, r7
   3e1dc:	add	lr, r6, lr
   3e1e0:	ldr	r6, [sp, #56]	; 0x38
   3e1e4:	add	r4, sl, r4
   3e1e8:	ldr	sl, [sp, #88]	; 0x58
   3e1ec:	add	r6, r6, #64	; 0x40
   3e1f0:	add	r5, r5, r7, ror #27
   3e1f4:	str	r6, [sp, #56]	; 0x38
   3e1f8:	ror	r7, r7, #2
   3e1fc:	cmp	sl, r6
   3e200:	ldr	r6, [sp, #72]	; 0x48
   3e204:	eor	fp, ip, r7
   3e208:	add	r4, r4, r5, ror #27
   3e20c:	eor	fp, fp, r5
   3e210:	add	r5, r6, r5, ror #2
   3e214:	ldr	r6, [sp, #80]	; 0x50
   3e218:	str	r5, [sp, #72]	; 0x48
   3e21c:	add	ip, r6, ip
   3e220:	str	ip, [sp, #80]	; 0x50
   3e224:	ldr	r6, [sp, #68]	; 0x44
   3e228:	add	lr, lr, fp
   3e22c:	add	lr, lr, r4, ror #27
   3e230:	strd	r0, [sp, #148]	; 0x94
   3e234:	add	r4, r6, r4
   3e238:	ldr	r0, [sp, #84]	; 0x54
   3e23c:	ldr	r6, [sp, #76]	; 0x4c
   3e240:	str	r3, [sp, #136]	; 0x88
   3e244:	add	r6, r6, r7
   3e248:	str	r2, [sp, #144]	; 0x90
   3e24c:	str	lr, [sp, #64]	; 0x40
   3e250:	str	r4, [sp, #68]	; 0x44
   3e254:	str	r6, [sp, #76]	; 0x4c
   3e258:	str	r8, [sp, #140]	; 0x8c
   3e25c:	str	r9, [sp, #156]	; 0x9c
   3e260:	mov	r2, lr
   3e264:	str	lr, [r0]
   3e268:	mov	r1, r4
   3e26c:	strd	r4, [r0, #4]
   3e270:	mov	r3, r6
   3e274:	str	r6, [r0, #12]
   3e278:	str	ip, [r0, #16]
   3e27c:	bne	3cd30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290d8>
   3e280:	add	sp, sp, #164	; 0xa4
   3e284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e288:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e28c:	mov	r4, r0
   3e290:	ldr	r0, [r0, #28]
   3e294:	ldr	r3, [r4, #20]
   3e298:	cmp	r0, #56	; 0x38
   3e29c:	ldr	r9, [r4, #24]
   3e2a0:	movcc	r6, #64	; 0x40
   3e2a4:	movcs	r6, #128	; 0x80
   3e2a8:	movcc	r2, #56	; 0x38
   3e2ac:	movcs	r2, #120	; 0x78
   3e2b0:	movcc	lr, #15
   3e2b4:	movcs	lr, #31
   3e2b8:	movcc	r7, #14
   3e2bc:	movcs	r7, #30
   3e2c0:	adds	r8, r3, r0
   3e2c4:	addcs	r9, r9, #1
   3e2c8:	mov	r5, r1
   3e2cc:	lsl	ip, r8, #3
   3e2d0:	lsl	r3, r8, #11
   3e2d4:	lsr	r1, r8, #29
   3e2d8:	add	r7, r7, #8
   3e2dc:	orr	r1, r1, r9, lsl #3
   3e2e0:	and	r3, r3, #16711680	; 0xff0000
   3e2e4:	orr	r3, r3, ip, lsr #24
   3e2e8:	rev	r1, r1
   3e2ec:	lsr	ip, ip, #8
   3e2f0:	str	r8, [r4, #20]
   3e2f4:	strcs	r9, [r4, #24]
   3e2f8:	add	lr, lr, #8
   3e2fc:	str	r1, [r4, r7, lsl #2]
   3e300:	and	ip, ip, #65280	; 0xff00
   3e304:	orr	r3, r3, r8, lsl #27
   3e308:	ldr	r1, [pc, #56]	; 3e348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a6f0>
   3e30c:	orr	r3, r3, ip
   3e310:	add	r8, r4, #32
   3e314:	sub	r2, r2, r0
   3e318:	str	r3, [r4, lr, lsl #2]
   3e31c:	add	r0, r8, r0
   3e320:	add	r1, pc, r1
   3e324:	bl	133b8 <memcpy@plt>
   3e328:	mov	r1, r6
   3e32c:	mov	r0, r8
   3e330:	mov	r2, r4
   3e334:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e338:	mov	r1, r5
   3e33c:	mov	r0, r4
   3e340:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e344:	b	3cc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29008>
   3e348:	andeq	r8, r7, r8, ror r4
   3e34c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e350:	mov	r5, r2
   3e354:	ldr	r7, [r2, #28]
   3e358:	mov	r4, r0
   3e35c:	cmp	r7, #0
   3e360:	mov	r6, r1
   3e364:	bne	3e448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a7f0>
   3e368:	cmp	r6, #63	; 0x3f
   3e36c:	bls	3e434 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a7dc>
   3e370:	tst	r4, #3
   3e374:	beq	3e418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a7c0>
   3e378:	cmp	r6, #64	; 0x40
   3e37c:	add	r7, r5, #32
   3e380:	beq	3e4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a890>
   3e384:	sub	r9, r6, #65	; 0x41
   3e388:	lsr	r9, r9, #6
   3e38c:	add	r8, r9, #1
   3e390:	add	r8, r4, r8, lsl #6
   3e394:	add	lr, r4, #64	; 0x40
   3e398:	mov	r3, r7
   3e39c:	ldr	ip, [r4]
   3e3a0:	ldr	r0, [r4, #4]
   3e3a4:	ldr	r1, [r4, #8]
   3e3a8:	ldr	r2, [r4, #12]
   3e3ac:	add	r4, r4, #16
   3e3b0:	cmp	r4, lr
   3e3b4:	str	ip, [r3]
   3e3b8:	str	r0, [r3, #4]
   3e3bc:	str	r1, [r3, #8]
   3e3c0:	str	r2, [r3, #12]
   3e3c4:	add	r3, r3, #16
   3e3c8:	bne	3e39c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a744>
   3e3cc:	mov	r2, r5
   3e3d0:	mov	r1, #64	; 0x40
   3e3d4:	mov	r0, r7
   3e3d8:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e3dc:	cmp	r4, r8
   3e3e0:	bne	3e394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a73c>
   3e3e4:	rsb	r9, r9, r9, lsl #26
   3e3e8:	sub	r6, r6, #64	; 0x40
   3e3ec:	add	r6, r6, r9, lsl #6
   3e3f0:	ldr	r4, [r5, #28]
   3e3f4:	mov	r1, r8
   3e3f8:	add	r0, r7, r4
   3e3fc:	mov	r2, r6
   3e400:	add	r4, r4, r6
   3e404:	bl	133b8 <memcpy@plt>
   3e408:	cmp	r4, #63	; 0x3f
   3e40c:	bhi	3e488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a830>
   3e410:	str	r4, [r5, #28]
   3e414:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e418:	bic	r7, r6, #63	; 0x3f
   3e41c:	mov	r0, r4
   3e420:	mov	r1, r7
   3e424:	mov	r2, r5
   3e428:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e42c:	and	r6, r6, #63	; 0x3f
   3e430:	add	r4, r4, r7
   3e434:	cmp	r6, #0
   3e438:	movne	r8, r4
   3e43c:	addne	r7, r5, #32
   3e440:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e444:	b	3e3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a798>
   3e448:	rsb	r8, r7, #128	; 0x80
   3e44c:	cmp	r8, r1
   3e450:	movcs	r8, r1
   3e454:	add	r9, r2, #32
   3e458:	mov	r1, r4
   3e45c:	mov	r2, r8
   3e460:	add	r0, r9, r7
   3e464:	bl	133b8 <memcpy@plt>
   3e468:	ldr	r1, [r5, #28]
   3e46c:	add	r1, r8, r1
   3e470:	cmp	r1, #64	; 0x40
   3e474:	str	r1, [r5, #28]
   3e478:	bhi	3e4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a85c>
   3e47c:	add	r4, r4, r8
   3e480:	sub	r6, r6, r8
   3e484:	b	3e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a710>
   3e488:	sub	r4, r4, #64	; 0x40
   3e48c:	mov	r2, r5
   3e490:	mov	r1, #64	; 0x40
   3e494:	mov	r0, r7
   3e498:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e49c:	mov	r0, r7
   3e4a0:	mov	r2, r4
   3e4a4:	add	r1, r5, #96	; 0x60
   3e4a8:	bl	133b8 <memcpy@plt>
   3e4ac:	str	r4, [r5, #28]
   3e4b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e4b4:	mov	r2, r5
   3e4b8:	mov	r0, r9
   3e4bc:	bic	r1, r1, #63	; 0x3f
   3e4c0:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e4c4:	ldr	r2, [r5, #28]
   3e4c8:	add	r1, r7, r8
   3e4cc:	and	r2, r2, #63	; 0x3f
   3e4d0:	bic	r1, r1, #63	; 0x3f
   3e4d4:	add	r1, r9, r1
   3e4d8:	mov	r0, r9
   3e4dc:	str	r2, [r5, #28]
   3e4e0:	bl	133b8 <memcpy@plt>
   3e4e4:	b	3e47c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a824>
   3e4e8:	mov	r8, r4
   3e4ec:	b	3e3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a798>
   3e4f0:	push	{r4, r5, r6, r7, lr}
   3e4f4:	sub	sp, sp, #164	; 0xa4
   3e4f8:	mov	r4, sp
   3e4fc:	mov	r6, r0
   3e500:	mov	r7, r1
   3e504:	mov	r0, r4
   3e508:	mov	r5, r2
   3e50c:	bl	3cc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28fb4>
   3e510:	mov	r2, r4
   3e514:	mov	r1, r7
   3e518:	mov	r0, r6
   3e51c:	bl	3e34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a6f4>
   3e520:	mov	r1, r5
   3e524:	mov	r0, r4
   3e528:	bl	3e288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a630>
   3e52c:	add	sp, sp, #164	; 0xa4
   3e530:	pop	{r4, r5, r6, r7, pc}
   3e534:	push	{r4, r5, r6, r7, r8, lr}
   3e538:	sub	sp, sp, #4288	; 0x10c0
   3e53c:	sub	sp, sp, #40	; 0x28
   3e540:	mov	r7, sp
   3e544:	mov	r5, r0
   3e548:	mov	r0, r7
   3e54c:	mov	r8, r1
   3e550:	bl	3cc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28fb4>
   3e554:	add	r6, sp, #160	; 0xa0
   3e558:	mov	r4, #0
   3e55c:	b	3e574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a91c>
   3e560:	cmp	r3, #0
   3e564:	beq	3e5b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a958>
   3e568:	bl	1379c <feof@plt>
   3e56c:	cmp	r0, #0
   3e570:	bne	3e5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a968>
   3e574:	mov	r3, r5
   3e578:	rsb	r2, r4, #4096	; 0x1000
   3e57c:	add	r0, r6, r4
   3e580:	mov	r1, #1
   3e584:	bl	135ec <fread@plt>
   3e588:	mov	r3, r0
   3e58c:	add	r4, r4, r3
   3e590:	cmp	r4, #4096	; 0x1000
   3e594:	mov	r0, r5
   3e598:	bne	3e560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a908>
   3e59c:	mov	r1, r4
   3e5a0:	mov	r2, r7
   3e5a4:	mov	r0, r6
   3e5a8:	bl	3cca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29050>
   3e5ac:	b	3e558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a900>
   3e5b0:	bl	13388 <ferror@plt>
   3e5b4:	cmp	r0, #0
   3e5b8:	movne	r0, #1
   3e5bc:	bne	3e5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a980>
   3e5c0:	cmp	r4, #0
   3e5c4:	bne	3e5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a98c>
   3e5c8:	mov	r1, r8
   3e5cc:	mov	r0, r7
   3e5d0:	bl	3e288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a630>
   3e5d4:	mov	r0, #0
   3e5d8:	add	sp, sp, #4288	; 0x10c0
   3e5dc:	add	sp, sp, #40	; 0x28
   3e5e0:	pop	{r4, r5, r6, r7, r8, pc}
   3e5e4:	mov	r1, r4
   3e5e8:	mov	r0, r6
   3e5ec:	mov	r2, r7
   3e5f0:	bl	3e34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a6f4>
   3e5f4:	b	3e5c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a970>
   3e5f8:	push	{r4, r5, r6, lr}
   3e5fc:	subs	r5, r0, #0
   3e600:	beq	3e698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa40>
   3e604:	ldr	r3, [r5]
   3e608:	cmp	r3, #0
   3e60c:	beq	3e688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa30>
   3e610:	mov	r3, r5
   3e614:	mov	r0, #0
   3e618:	b	3e620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9c8>
   3e61c:	mov	r0, r1
   3e620:	ldr	r2, [r3, #4]!
   3e624:	add	r1, r0, #1
   3e628:	cmp	r2, #0
   3e62c:	bne	3e61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9c4>
   3e630:	add	r0, r0, #2
   3e634:	lsl	r0, r0, #2
   3e638:	bl	13574 <xmalloc@plt>
   3e63c:	ldr	r2, [r5]
   3e640:	cmp	r2, #0
   3e644:	mov	r6, r0
   3e648:	beq	3e690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa38>
   3e64c:	sub	r4, r0, #4
   3e650:	mov	r0, r2
   3e654:	bl	135a4 <xstrdup@plt>
   3e658:	ldr	r2, [r5, #4]!
   3e65c:	add	r3, r4, #8
   3e660:	cmp	r2, #0
   3e664:	sub	r3, r3, r6
   3e668:	add	r4, r4, #4
   3e66c:	str	r0, [r4]
   3e670:	bne	3e650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9f8>
   3e674:	add	r3, r6, r3
   3e678:	mov	r2, #0
   3e67c:	str	r2, [r3]
   3e680:	mov	r0, r6
   3e684:	pop	{r4, r5, r6, pc}
   3e688:	mov	r0, #4
   3e68c:	b	3e638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9e0>
   3e690:	mov	r3, r0
   3e694:	b	3e678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa20>
   3e698:	mov	r6, r5
   3e69c:	b	3e680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa28>
   3e6a0:	push	{r4, r5, r6, lr}
   3e6a4:	subs	r5, r0, #0
   3e6a8:	popeq	{r4, r5, r6, pc}
   3e6ac:	ldr	r0, [r5]
   3e6b0:	cmp	r0, #0
   3e6b4:	beq	3e6cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa74>
   3e6b8:	mov	r4, r5
   3e6bc:	bl	13364 <free@plt>
   3e6c0:	ldr	r0, [r4, #4]!
   3e6c4:	cmp	r0, #0
   3e6c8:	bne	3e6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa64>
   3e6cc:	mov	r0, r5
   3e6d0:	pop	{r4, r5, r6, lr}
   3e6d4:	b	13364 <free@plt>
   3e6d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e6dc:	subs	r4, r0, #0
   3e6e0:	ldr	r6, [pc, #512]	; 3e8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac90>
   3e6e4:	sub	sp, sp, #12
   3e6e8:	add	r6, pc, r6
   3e6ec:	moveq	r9, r4
   3e6f0:	beq	3e88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac34>
   3e6f4:	bl	137d8 <strlen@plt>
   3e6f8:	mov	r9, #0
   3e6fc:	mov	fp, r9
   3e700:	mov	sl, r9
   3e704:	mov	r5, r9
   3e708:	mov	r8, r9
   3e70c:	mov	r7, r9
   3e710:	add	r0, r0, #1
   3e714:	bl	13574 <xmalloc@plt>
   3e718:	ldr	r2, [pc, #460]	; 3e8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac94>
   3e71c:	str	r0, [sp]
   3e720:	ldr	r6, [r6, r2]
   3e724:	ldrb	r2, [r4]
   3e728:	lsl	r2, r2, #1
   3e72c:	ldrh	r2, [r6, r2]
   3e730:	tst	r2, #64	; 0x40
   3e734:	beq	3e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aaf4>
   3e738:	ldrb	r2, [r4, #1]!
   3e73c:	lsl	r2, r2, #1
   3e740:	ldrh	r2, [r6, r2]
   3e744:	tst	r2, #64	; 0x40
   3e748:	bne	3e738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aae0>
   3e74c:	cmp	fp, #0
   3e750:	lsl	r2, sl, #2
   3e754:	beq	3e768 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab10>
   3e758:	sub	r1, fp, #1
   3e75c:	cmp	r1, sl
   3e760:	addgt	r1, r9, r2
   3e764:	bgt	3e798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab40>
   3e768:	cmp	r9, #0
   3e76c:	str	r2, [sp, #4]
   3e770:	beq	3e8d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac78>
   3e774:	lsl	fp, fp, #1
   3e778:	mov	r0, r9
   3e77c:	lsl	r1, fp, #2
   3e780:	bl	134fc <xrealloc@plt>
   3e784:	ldr	r2, [sp, #4]
   3e788:	mov	r9, r0
   3e78c:	add	r1, r9, r2
   3e790:	mov	r3, #0
   3e794:	str	r3, [r9, r2]
   3e798:	ldrb	r2, [r4]
   3e79c:	ldr	r0, [sp]
   3e7a0:	cmp	r2, #0
   3e7a4:	bne	3e7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab70>
   3e7a8:	b	3e82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2abd4>
   3e7ac:	cmp	r2, #39	; 0x27
   3e7b0:	moveq	r7, r5
   3e7b4:	beq	3e7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab64>
   3e7b8:	strb	r2, [r0], #1
   3e7bc:	ldrb	r2, [r4, #1]!
   3e7c0:	cmp	r2, #0
   3e7c4:	beq	3e82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2abd4>
   3e7c8:	lsl	ip, r2, #1
   3e7cc:	ldrh	ip, [r6, ip]
   3e7d0:	tst	ip, #64	; 0x40
   3e7d4:	beq	3e7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab8c>
   3e7d8:	orr	ip, r8, r7
   3e7dc:	orrs	ip, ip, r5
   3e7e0:	beq	3e8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac68>
   3e7e4:	cmp	r5, #0
   3e7e8:	movne	r5, #0
   3e7ec:	strbne	r2, [r0], #1
   3e7f0:	bne	3e7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab64>
   3e7f4:	cmp	r2, #92	; 0x5c
   3e7f8:	moveq	r5, #1
   3e7fc:	beq	3e7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab64>
   3e800:	cmp	r7, #0
   3e804:	bne	3e7ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab54>
   3e808:	cmp	r8, #0
   3e80c:	beq	3e898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac40>
   3e810:	cmp	r2, #34	; 0x22
   3e814:	mov	r5, r7
   3e818:	moveq	r8, r7
   3e81c:	bne	3e7b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab60>
   3e820:	ldrb	r2, [r4, #1]!
   3e824:	cmp	r2, #0
   3e828:	bne	3e7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab70>
   3e82c:	mov	r3, #0
   3e830:	strb	r3, [r0]
   3e834:	ldr	r0, [sp]
   3e838:	str	r1, [sp, #4]
   3e83c:	bl	135a4 <xstrdup@plt>
   3e840:	ldr	r1, [sp, #4]
   3e844:	mov	r3, #0
   3e848:	add	sl, sl, #1
   3e84c:	str	r3, [r1, #4]
   3e850:	str	r0, [r1]
   3e854:	ldrb	r2, [r4]
   3e858:	lsl	r1, r2, #1
   3e85c:	ldrh	r1, [r6, r1]
   3e860:	tst	r1, #64	; 0x40
   3e864:	beq	3e87c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac24>
   3e868:	ldrb	r2, [r4, #1]!
   3e86c:	lsl	r1, r2, #1
   3e870:	ldrh	r1, [r6, r1]
   3e874:	tst	r1, #64	; 0x40
   3e878:	bne	3e868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ac10>
   3e87c:	cmp	r2, #0
   3e880:	bne	3e724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aacc>
   3e884:	ldr	r0, [sp]
   3e888:	bl	13364 <free@plt>
   3e88c:	mov	r0, r9
   3e890:	add	sp, sp, #12
   3e894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e898:	cmp	r2, #39	; 0x27
   3e89c:	mov	r5, r8
   3e8a0:	moveq	r7, #1
   3e8a4:	beq	3e7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab64>
   3e8a8:	cmp	r2, #34	; 0x22
   3e8ac:	moveq	r7, r8
   3e8b0:	strbne	r2, [r0], #1
   3e8b4:	movne	r7, r8
   3e8b8:	moveq	r8, #1
   3e8bc:	b	3e7bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab64>
   3e8c0:	mov	r8, ip
   3e8c4:	mov	r7, ip
   3e8c8:	mov	r5, ip
   3e8cc:	b	3e82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2abd4>
   3e8d0:	mov	r0, #32
   3e8d4:	bl	13574 <xmalloc@plt>
   3e8d8:	mov	fp, #8
   3e8dc:	ldr	r2, [sp, #4]
   3e8e0:	mov	r9, r0
   3e8e4:	b	3e78c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ab34>
   3e8e8:	andeq	r8, r8, r0, lsl r9
   3e8ec:	andeq	r0, r0, ip, lsl #7
   3e8f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e8f4:	subs	r6, r1, #0
   3e8f8:	ldr	r8, [pc, #192]	; 3e9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad68>
   3e8fc:	add	r8, pc, r8
   3e900:	beq	3e990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   3e904:	ldr	r5, [r0]
   3e908:	mov	r9, r0
   3e90c:	cmp	r5, #0
   3e910:	beq	3e9b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad60>
   3e914:	ldrb	r4, [r5]
   3e918:	cmp	r4, #0
   3e91c:	beq	3e998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad40>
   3e920:	ldr	r3, [pc, #156]	; 3e9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad6c>
   3e924:	ldr	r7, [r8, r3]
   3e928:	b	3e938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ace0>
   3e92c:	ldrb	r4, [r5, #1]!
   3e930:	cmp	r4, #0
   3e934:	beq	3e998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad40>
   3e938:	lsl	r3, r4, #1
   3e93c:	mov	r1, r6
   3e940:	ldrh	r3, [r7, r3]
   3e944:	mov	r0, #92	; 0x5c
   3e948:	tst	r3, #64	; 0x40
   3e94c:	bne	3e970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad18>
   3e950:	cmp	r4, #39	; 0x27
   3e954:	cmpne	r4, r0
   3e958:	moveq	r3, #1
   3e95c:	movne	r3, #0
   3e960:	cmp	r4, #34	; 0x22
   3e964:	orreq	r3, r3, #1
   3e968:	cmp	r3, #0
   3e96c:	beq	3e97c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad24>
   3e970:	bl	139b8 <fputc@plt>
   3e974:	cmn	r0, #1
   3e978:	beq	3e990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   3e97c:	mov	r0, r4
   3e980:	mov	r1, r6
   3e984:	bl	139b8 <fputc@plt>
   3e988:	cmn	r0, #1
   3e98c:	bne	3e92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2acd4>
   3e990:	mov	r0, #1
   3e994:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e998:	mov	r1, r6
   3e99c:	mov	r0, #10
   3e9a0:	bl	139b8 <fputc@plt>
   3e9a4:	cmn	r0, #1
   3e9a8:	beq	3e990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   3e9ac:	ldr	r5, [r9, #4]!
   3e9b0:	cmp	r5, #0
   3e9b4:	bne	3e914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2acbc>
   3e9b8:	mov	r0, #0
   3e9bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e9c0:	strdeq	r8, [r8], -ip
   3e9c4:	andeq	r0, r0, ip, lsl #7
   3e9c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e9cc:	mov	r7, r1
   3e9d0:	sub	sp, sp, #140	; 0x8c
   3e9d4:	ldr	r3, [r7]
   3e9d8:	ldr	r1, [r0]
   3e9dc:	str	r3, [sp, #24]
   3e9e0:	ldr	r3, [pc, #824]	; 3ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0c8>
   3e9e4:	mov	sl, r0
   3e9e8:	add	r3, pc, r3
   3e9ec:	str	r3, [sp, #28]
   3e9f0:	add	r3, sp, #32
   3e9f4:	str	r3, [sp]
   3e9f8:	ldr	r3, [pc, #804]	; 3ed24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0cc>
   3e9fc:	mov	fp, #2000	; 0x7d0
   3ea00:	mov	r5, #0
   3ea04:	add	r3, pc, r3
   3ea08:	str	r3, [sp, #4]
   3ea0c:	add	r4, r5, #1
   3ea10:	cmp	r4, r1
   3ea14:	bge	3eb10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aeb8>
   3ea18:	ldr	r3, [r7]
   3ea1c:	lsl	r8, r4, #2
   3ea20:	ldr	r0, [r3, r4, lsl #2]
   3ea24:	ldrb	r2, [r0]
   3ea28:	cmp	r2, #64	; 0x40
   3ea2c:	bne	3eb1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aec4>
   3ea30:	subs	fp, fp, #1
   3ea34:	beq	3ecb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b058>
   3ea38:	add	r6, r0, #1
   3ea3c:	mov	r1, r6
   3ea40:	ldr	r2, [sp]
   3ea44:	mov	r0, #3
   3ea48:	bl	13b8c <__xstat64@plt>
   3ea4c:	cmp	r0, #0
   3ea50:	blt	3eb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aec0>
   3ea54:	ldr	r3, [sp, #48]	; 0x30
   3ea58:	and	r3, r3, #61440	; 0xf000
   3ea5c:	cmp	r3, #16384	; 0x4000
   3ea60:	beq	3ecdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b084>
   3ea64:	mov	r0, r6
   3ea68:	ldr	r1, [sp, #4]
   3ea6c:	bl	13a60 <fopen64@plt>
   3ea70:	subs	r9, r0, #0
   3ea74:	beq	3eb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aec0>
   3ea78:	mov	r2, #2
   3ea7c:	mov	r1, #0
   3ea80:	bl	13b68 <fseek@plt>
   3ea84:	cmn	r0, #1
   3ea88:	beq	3eaf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae9c>
   3ea8c:	mov	r0, r9
   3ea90:	bl	13418 <ftell@plt>
   3ea94:	cmn	r0, #1
   3ea98:	mov	r6, r0
   3ea9c:	beq	3eaf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae9c>
   3eaa0:	mov	r2, #0
   3eaa4:	mov	r1, r2
   3eaa8:	mov	r0, r9
   3eaac:	bl	13b68 <fseek@plt>
   3eab0:	cmn	r0, #1
   3eab4:	beq	3eaf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae9c>
   3eab8:	add	r0, r6, #1
   3eabc:	bl	13574 <xmalloc@plt>
   3eac0:	mov	r3, r9
   3eac4:	mov	r2, r6
   3eac8:	mov	r1, #1
   3eacc:	str	r0, [sp, #8]
   3ead0:	bl	135ec <fread@plt>
   3ead4:	cmp	r6, r0
   3ead8:	mov	r3, r0
   3eadc:	beq	3eb28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aed0>
   3eae0:	str	r0, [sp, #12]
   3eae4:	mov	r0, r9
   3eae8:	bl	13388 <ferror@plt>
   3eaec:	cmp	r0, #0
   3eaf0:	beq	3eb24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aecc>
   3eaf4:	mov	r0, r9
   3eaf8:	bl	13928 <fclose@plt>
   3eafc:	mov	r5, r4
   3eb00:	ldr	r1, [sl]
   3eb04:	add	r4, r5, #1
   3eb08:	cmp	r4, r1
   3eb0c:	blt	3ea18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2adc0>
   3eb10:	add	sp, sp, #140	; 0x8c
   3eb14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3eb18:	ldr	r1, [sl]
   3eb1c:	mov	r5, r4
   3eb20:	b	3ea0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2adb4>
   3eb24:	ldr	r3, [sp, #12]
   3eb28:	ldr	r1, [sp, #8]
   3eb2c:	mov	r2, #0
   3eb30:	strb	r2, [r1, r3]
   3eb34:	ldrb	r3, [r1]
   3eb38:	cmp	r3, r2
   3eb3c:	beq	3eb80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af28>
   3eb40:	ldr	r2, [pc, #480]	; 3ed28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0d0>
   3eb44:	ldr	r1, [sp, #28]
   3eb48:	lsl	r3, r3, #1
   3eb4c:	ldr	r1, [r1, r2]
   3eb50:	ldrh	r3, [r1, r3]
   3eb54:	tst	r3, #64	; 0x40
   3eb58:	beq	3ebc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af68>
   3eb5c:	ldr	r2, [sp, #8]
   3eb60:	b	3eb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af1c>
   3eb64:	lsl	r3, r3, #1
   3eb68:	ldrh	r3, [r1, r3]
   3eb6c:	tst	r3, #64	; 0x40
   3eb70:	beq	3ebc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af68>
   3eb74:	ldrb	r3, [r2, #1]!
   3eb78:	cmp	r3, #0
   3eb7c:	bne	3eb64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af0c>
   3eb80:	mov	r0, #4
   3eb84:	bl	13574 <xmalloc@plt>
   3eb88:	ldr	r2, [sp, #24]
   3eb8c:	mov	r6, #0
   3eb90:	mov	r3, r0
   3eb94:	str	r0, [sp, #12]
   3eb98:	ldr	r0, [r7]
   3eb9c:	str	r6, [r3]
   3eba0:	cmp	r2, r0
   3eba4:	bne	3eca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b04c>
   3eba8:	mov	r0, r2
   3ebac:	bl	3e5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9a0>
   3ebb0:	mov	r3, r6
   3ebb4:	mov	r2, r8
   3ebb8:	str	r0, [r7]
   3ebbc:	b	3ec10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2afb8>
   3ebc0:	ldr	r0, [sp, #8]
   3ebc4:	bl	3e6d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aa80>
   3ebc8:	ldr	r2, [sp, #24]
   3ebcc:	mov	r3, r0
   3ebd0:	str	r0, [sp, #12]
   3ebd4:	ldr	r0, [r7]
   3ebd8:	cmp	r0, r2
   3ebdc:	beq	3ed08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0b0>
   3ebe0:	ldr	r6, [r3]
   3ebe4:	cmp	r6, #0
   3ebe8:	beq	3eca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b04c>
   3ebec:	ldr	r2, [sp, #12]
   3ebf0:	mov	r6, #0
   3ebf4:	ldr	r3, [r2, #4]!
   3ebf8:	add	r6, r6, #1
   3ebfc:	cmp	r3, #0
   3ec00:	lsl	r3, r6, #2
   3ec04:	bne	3ebf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af9c>
   3ec08:	add	r2, r4, r6
   3ec0c:	lsl	r2, r2, #2
   3ec10:	ldr	r0, [r0, r8]
   3ec14:	str	r3, [sp, #16]
   3ec18:	str	r2, [sp, #20]
   3ec1c:	bl	13364 <free@plt>
   3ec20:	ldr	r1, [sl]
   3ec24:	ldr	r0, [r7]
   3ec28:	add	r1, r1, #1
   3ec2c:	add	r1, r1, r6
   3ec30:	lsl	r1, r1, #2
   3ec34:	bl	134fc <xrealloc@plt>
   3ec38:	ldr	r2, [sp, #20]
   3ec3c:	add	ip, r8, #4
   3ec40:	mov	r1, r0
   3ec44:	ldr	r0, [sl]
   3ec48:	str	r1, [r7]
   3ec4c:	sub	r4, r0, r4
   3ec50:	add	r0, r1, r2
   3ec54:	add	r1, r1, ip
   3ec58:	lsl	r2, r4, #2
   3ec5c:	bl	13328 <memmove@plt>
   3ec60:	ldr	r4, [sp, #12]
   3ec64:	ldr	r3, [sp, #16]
   3ec68:	ldr	r0, [r7]
   3ec6c:	mov	r2, r3
   3ec70:	mov	r1, r4
   3ec74:	add	r0, r0, r8
   3ec78:	bl	133b8 <memcpy@plt>
   3ec7c:	ldr	r3, [sl]
   3ec80:	mov	r0, r4
   3ec84:	sub	r3, r3, #1
   3ec88:	add	r6, r3, r6
   3ec8c:	str	r6, [sl]
   3ec90:	bl	13364 <free@plt>
   3ec94:	ldr	r0, [sp, #8]
   3ec98:	bl	13364 <free@plt>
   3ec9c:	mov	r4, r5
   3eca0:	b	3eaf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae9c>
   3eca4:	mov	r3, r6
   3eca8:	mov	r2, r8
   3ecac:	b	3ec10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2afb8>
   3ecb0:	ldr	r0, [pc, #116]	; 3ed2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0d4>
   3ecb4:	ldr	r2, [r3]
   3ecb8:	mov	r3, r0
   3ecbc:	ldr	r0, [sp, #28]
   3ecc0:	ldr	r1, [pc, #104]	; 3ed30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0d8>
   3ecc4:	ldr	r3, [r0, r3]
   3ecc8:	add	r1, pc, r1
   3eccc:	ldr	r0, [r3]
   3ecd0:	bl	1382c <fprintf@plt>
   3ecd4:	mov	r0, #1
   3ecd8:	bl	139d0 <xexit@plt>
   3ecdc:	ldr	r0, [sp, #28]
   3ece0:	ldr	r3, [pc, #68]	; 3ed2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0d4>
   3ece4:	ldr	r2, [r7]
   3ece8:	ldr	r1, [pc, #68]	; 3ed34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0dc>
   3ecec:	ldr	r3, [r0, r3]
   3ecf0:	add	r1, pc, r1
   3ecf4:	ldr	r2, [r2]
   3ecf8:	ldr	r0, [r3]
   3ecfc:	bl	1382c <fprintf@plt>
   3ed00:	mov	r0, #1
   3ed04:	bl	139d0 <xexit@plt>
   3ed08:	ldr	r3, [sp, #12]
   3ed0c:	ldr	r0, [sp, #24]
   3ed10:	ldr	r6, [r3]
   3ed14:	bl	3e5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2a9a0>
   3ed18:	str	r0, [r7]
   3ed1c:	b	3ebe4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af8c>
   3ed20:	andeq	r8, r8, r0, lsl r6
   3ed24:	andeq	r6, r4, r8, lsl r3
   3ed28:	andeq	r0, r0, ip, lsl #7
   3ed2c:	muleq	r0, r0, r3
   3ed30:	andeq	r7, r7, r0, lsl fp
   3ed34:	andeq	r7, r7, r4, lsl fp
   3ed38:	subs	r3, r0, #0
   3ed3c:	beq	3ed64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b10c>
   3ed40:	ldr	r0, [r3]
   3ed44:	cmp	r0, #0
   3ed48:	bxeq	lr
   3ed4c:	mov	r0, #0
   3ed50:	ldr	r2, [r3, #4]!
   3ed54:	add	r0, r0, #1
   3ed58:	cmp	r2, #0
   3ed5c:	bne	3ed50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0f8>
   3ed60:	bx	lr
   3ed64:	mov	r0, r3
   3ed68:	bx	lr
   3ed6c:	push	{lr}		; (str lr, [sp, #-4]!)
   3ed70:	sub	sp, sp, #76	; 0x4c
   3ed74:	mov	r1, sp
   3ed78:	mov	r0, #0
   3ed7c:	bl	13ab4 <getrusage@plt>
   3ed80:	ldr	r1, [sp]
   3ed84:	ldmib	sp, {r0, r2}
   3ed88:	rsb	r3, r1, r1, lsl #5
   3ed8c:	rsb	ip, r2, r2, lsl #5
   3ed90:	rsb	r3, r3, r3, lsl #6
   3ed94:	rsb	ip, ip, ip, lsl #6
   3ed98:	add	r3, r1, r3, lsl #3
   3ed9c:	add	r2, r2, ip, lsl #3
   3eda0:	add	r3, r0, r3, lsl #6
   3eda4:	ldr	r0, [sp, #12]
   3eda8:	add	r3, r3, r2, lsl #6
   3edac:	add	r0, r3, r0
   3edb0:	add	sp, sp, #76	; 0x4c
   3edb4:	pop	{pc}		; (ldr pc, [sp], #4)
   3edb8:	ldr	r3, [pc, #68]	; 3ee04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1ac>
   3edbc:	push	{r4, r5, r6, lr}
   3edc0:	ldr	r6, [pc, r3]
   3edc4:	cmp	r6, #0
   3edc8:	popeq	{r4, r5, r6, pc}
   3edcc:	ldr	r5, [r6, #4]
   3edd0:	subs	r4, r5, #1
   3edd4:	bmi	3edf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b19c>
   3edd8:	add	r5, r5, #1
   3eddc:	add	r5, r6, r5, lsl #2
   3ede0:	sub	r4, r4, #1
   3ede4:	ldr	r3, [r5], #-4
   3ede8:	blx	r3
   3edec:	cmn	r4, #1
   3edf0:	bne	3ede0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b188>
   3edf4:	ldr	r6, [r6]
   3edf8:	cmp	r6, #0
   3edfc:	bne	3edcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b174>
   3ee00:	pop	{r4, r5, r6, pc}
   3ee04:	andeq	r8, r8, ip, ror #18
   3ee08:	ldr	r3, [pc, #148]	; 3eea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b24c>
   3ee0c:	ldr	r2, [pc, #148]	; 3eea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b250>
   3ee10:	add	r3, pc, r3
   3ee14:	push	{r4, r5, r6, lr}
   3ee18:	mov	r6, r0
   3ee1c:	ldr	r3, [r3, r2]
   3ee20:	ldr	r2, [r3]
   3ee24:	cmp	r2, #0
   3ee28:	beq	3ee8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b234>
   3ee2c:	ldr	r5, [pc, #120]	; 3eeac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b254>
   3ee30:	add	r5, pc, r5
   3ee34:	ldr	r4, [r5]
   3ee38:	ldr	r3, [r4, #4]
   3ee3c:	cmp	r3, #31
   3ee40:	addle	r2, r3, #1
   3ee44:	bgt	3ee5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b204>
   3ee48:	add	r3, r3, #2
   3ee4c:	str	r2, [r4, #4]
   3ee50:	mov	r0, #0
   3ee54:	str	r6, [r4, r3, lsl #2]
   3ee58:	pop	{r4, r5, r6, pc}
   3ee5c:	mov	r0, #136	; 0x88
   3ee60:	bl	13700 <malloc@plt>
   3ee64:	cmp	r0, #0
   3ee68:	beq	3ee9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b244>
   3ee6c:	mov	r1, #0
   3ee70:	str	r4, [r0]
   3ee74:	mov	r3, r1
   3ee78:	mov	r4, r0
   3ee7c:	str	r0, [r5]
   3ee80:	mov	r2, #1
   3ee84:	str	r1, [r0, #4]
   3ee88:	b	3ee48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1f0>
   3ee8c:	ldr	r2, [pc, #28]	; 3eeb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b258>
   3ee90:	add	r2, pc, r2
   3ee94:	str	r2, [r3]
   3ee98:	b	3ee2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1d4>
   3ee9c:	mvn	r0, #0
   3eea0:	pop	{r4, r5, r6, pc}
   3eea4:	andeq	r8, r8, r8, ror #3
   3eea8:	muleq	r0, r8, r3
   3eeac:	strdeq	r8, [r8], -ip
   3eeb0:			; <UNDEFINED> instruction: 0xffffff20
   3eeb4:	subs	r2, r1, #1
   3eeb8:	bxeq	lr
   3eebc:	bcc	3f094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b43c>
   3eec0:	cmp	r0, r1
   3eec4:	bls	3f078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b420>
   3eec8:	tst	r1, r2
   3eecc:	beq	3f084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b42c>
   3eed0:	clz	r3, r0
   3eed4:	clz	r2, r1
   3eed8:	sub	r3, r2, r3
   3eedc:	rsbs	r3, r3, #31
   3eee0:	addne	r3, r3, r3, lsl #1
   3eee4:	mov	r2, #0
   3eee8:	addne	pc, pc, r3, lsl #2
   3eeec:	nop			; (mov r0, r0)
   3eef0:	cmp	r0, r1, lsl #31
   3eef4:	adc	r2, r2, r2
   3eef8:	subcs	r0, r0, r1, lsl #31
   3eefc:	cmp	r0, r1, lsl #30
   3ef00:	adc	r2, r2, r2
   3ef04:	subcs	r0, r0, r1, lsl #30
   3ef08:	cmp	r0, r1, lsl #29
   3ef0c:	adc	r2, r2, r2
   3ef10:	subcs	r0, r0, r1, lsl #29
   3ef14:	cmp	r0, r1, lsl #28
   3ef18:	adc	r2, r2, r2
   3ef1c:	subcs	r0, r0, r1, lsl #28
   3ef20:	cmp	r0, r1, lsl #27
   3ef24:	adc	r2, r2, r2
   3ef28:	subcs	r0, r0, r1, lsl #27
   3ef2c:	cmp	r0, r1, lsl #26
   3ef30:	adc	r2, r2, r2
   3ef34:	subcs	r0, r0, r1, lsl #26
   3ef38:	cmp	r0, r1, lsl #25
   3ef3c:	adc	r2, r2, r2
   3ef40:	subcs	r0, r0, r1, lsl #25
   3ef44:	cmp	r0, r1, lsl #24
   3ef48:	adc	r2, r2, r2
   3ef4c:	subcs	r0, r0, r1, lsl #24
   3ef50:	cmp	r0, r1, lsl #23
   3ef54:	adc	r2, r2, r2
   3ef58:	subcs	r0, r0, r1, lsl #23
   3ef5c:	cmp	r0, r1, lsl #22
   3ef60:	adc	r2, r2, r2
   3ef64:	subcs	r0, r0, r1, lsl #22
   3ef68:	cmp	r0, r1, lsl #21
   3ef6c:	adc	r2, r2, r2
   3ef70:	subcs	r0, r0, r1, lsl #21
   3ef74:	cmp	r0, r1, lsl #20
   3ef78:	adc	r2, r2, r2
   3ef7c:	subcs	r0, r0, r1, lsl #20
   3ef80:	cmp	r0, r1, lsl #19
   3ef84:	adc	r2, r2, r2
   3ef88:	subcs	r0, r0, r1, lsl #19
   3ef8c:	cmp	r0, r1, lsl #18
   3ef90:	adc	r2, r2, r2
   3ef94:	subcs	r0, r0, r1, lsl #18
   3ef98:	cmp	r0, r1, lsl #17
   3ef9c:	adc	r2, r2, r2
   3efa0:	subcs	r0, r0, r1, lsl #17
   3efa4:	cmp	r0, r1, lsl #16
   3efa8:	adc	r2, r2, r2
   3efac:	subcs	r0, r0, r1, lsl #16
   3efb0:	cmp	r0, r1, lsl #15
   3efb4:	adc	r2, r2, r2
   3efb8:	subcs	r0, r0, r1, lsl #15
   3efbc:	cmp	r0, r1, lsl #14
   3efc0:	adc	r2, r2, r2
   3efc4:	subcs	r0, r0, r1, lsl #14
   3efc8:	cmp	r0, r1, lsl #13
   3efcc:	adc	r2, r2, r2
   3efd0:	subcs	r0, r0, r1, lsl #13
   3efd4:	cmp	r0, r1, lsl #12
   3efd8:	adc	r2, r2, r2
   3efdc:	subcs	r0, r0, r1, lsl #12
   3efe0:	cmp	r0, r1, lsl #11
   3efe4:	adc	r2, r2, r2
   3efe8:	subcs	r0, r0, r1, lsl #11
   3efec:	cmp	r0, r1, lsl #10
   3eff0:	adc	r2, r2, r2
   3eff4:	subcs	r0, r0, r1, lsl #10
   3eff8:	cmp	r0, r1, lsl #9
   3effc:	adc	r2, r2, r2
   3f000:	subcs	r0, r0, r1, lsl #9
   3f004:	cmp	r0, r1, lsl #8
   3f008:	adc	r2, r2, r2
   3f00c:	subcs	r0, r0, r1, lsl #8
   3f010:	cmp	r0, r1, lsl #7
   3f014:	adc	r2, r2, r2
   3f018:	subcs	r0, r0, r1, lsl #7
   3f01c:	cmp	r0, r1, lsl #6
   3f020:	adc	r2, r2, r2
   3f024:	subcs	r0, r0, r1, lsl #6
   3f028:	cmp	r0, r1, lsl #5
   3f02c:	adc	r2, r2, r2
   3f030:	subcs	r0, r0, r1, lsl #5
   3f034:	cmp	r0, r1, lsl #4
   3f038:	adc	r2, r2, r2
   3f03c:	subcs	r0, r0, r1, lsl #4
   3f040:	cmp	r0, r1, lsl #3
   3f044:	adc	r2, r2, r2
   3f048:	subcs	r0, r0, r1, lsl #3
   3f04c:	cmp	r0, r1, lsl #2
   3f050:	adc	r2, r2, r2
   3f054:	subcs	r0, r0, r1, lsl #2
   3f058:	cmp	r0, r1, lsl #1
   3f05c:	adc	r2, r2, r2
   3f060:	subcs	r0, r0, r1, lsl #1
   3f064:	cmp	r0, r1
   3f068:	adc	r2, r2, r2
   3f06c:	subcs	r0, r0, r1
   3f070:	mov	r0, r2
   3f074:	bx	lr
   3f078:	moveq	r0, #1
   3f07c:	movne	r0, #0
   3f080:	bx	lr
   3f084:	clz	r2, r1
   3f088:	rsb	r2, r2, #31
   3f08c:	lsr	r0, r0, r2
   3f090:	bx	lr
   3f094:	cmp	r0, #0
   3f098:	mvnne	r0, #0
   3f09c:	b	3f3d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b77c>
   3f0a0:	cmp	r1, #0
   3f0a4:	beq	3f094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b43c>
   3f0a8:	push	{r0, r1, lr}
   3f0ac:	bl	3eeb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b25c>
   3f0b0:	pop	{r1, r2, lr}
   3f0b4:	mul	r3, r2, r0
   3f0b8:	sub	r1, r1, r3
   3f0bc:	bx	lr
   3f0c0:	cmp	r1, #0
   3f0c4:	beq	3f2d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b678>
   3f0c8:	eor	ip, r0, r1
   3f0cc:	rsbmi	r1, r1, #0
   3f0d0:	subs	r2, r1, #1
   3f0d4:	beq	3f29c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b644>
   3f0d8:	movs	r3, r0
   3f0dc:	rsbmi	r3, r0, #0
   3f0e0:	cmp	r3, r1
   3f0e4:	bls	3f2a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b650>
   3f0e8:	tst	r1, r2
   3f0ec:	beq	3f2b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b660>
   3f0f0:	clz	r2, r3
   3f0f4:	clz	r0, r1
   3f0f8:	sub	r2, r0, r2
   3f0fc:	rsbs	r2, r2, #31
   3f100:	addne	r2, r2, r2, lsl #1
   3f104:	mov	r0, #0
   3f108:	addne	pc, pc, r2, lsl #2
   3f10c:	nop			; (mov r0, r0)
   3f110:	cmp	r3, r1, lsl #31
   3f114:	adc	r0, r0, r0
   3f118:	subcs	r3, r3, r1, lsl #31
   3f11c:	cmp	r3, r1, lsl #30
   3f120:	adc	r0, r0, r0
   3f124:	subcs	r3, r3, r1, lsl #30
   3f128:	cmp	r3, r1, lsl #29
   3f12c:	adc	r0, r0, r0
   3f130:	subcs	r3, r3, r1, lsl #29
   3f134:	cmp	r3, r1, lsl #28
   3f138:	adc	r0, r0, r0
   3f13c:	subcs	r3, r3, r1, lsl #28
   3f140:	cmp	r3, r1, lsl #27
   3f144:	adc	r0, r0, r0
   3f148:	subcs	r3, r3, r1, lsl #27
   3f14c:	cmp	r3, r1, lsl #26
   3f150:	adc	r0, r0, r0
   3f154:	subcs	r3, r3, r1, lsl #26
   3f158:	cmp	r3, r1, lsl #25
   3f15c:	adc	r0, r0, r0
   3f160:	subcs	r3, r3, r1, lsl #25
   3f164:	cmp	r3, r1, lsl #24
   3f168:	adc	r0, r0, r0
   3f16c:	subcs	r3, r3, r1, lsl #24
   3f170:	cmp	r3, r1, lsl #23
   3f174:	adc	r0, r0, r0
   3f178:	subcs	r3, r3, r1, lsl #23
   3f17c:	cmp	r3, r1, lsl #22
   3f180:	adc	r0, r0, r0
   3f184:	subcs	r3, r3, r1, lsl #22
   3f188:	cmp	r3, r1, lsl #21
   3f18c:	adc	r0, r0, r0
   3f190:	subcs	r3, r3, r1, lsl #21
   3f194:	cmp	r3, r1, lsl #20
   3f198:	adc	r0, r0, r0
   3f19c:	subcs	r3, r3, r1, lsl #20
   3f1a0:	cmp	r3, r1, lsl #19
   3f1a4:	adc	r0, r0, r0
   3f1a8:	subcs	r3, r3, r1, lsl #19
   3f1ac:	cmp	r3, r1, lsl #18
   3f1b0:	adc	r0, r0, r0
   3f1b4:	subcs	r3, r3, r1, lsl #18
   3f1b8:	cmp	r3, r1, lsl #17
   3f1bc:	adc	r0, r0, r0
   3f1c0:	subcs	r3, r3, r1, lsl #17
   3f1c4:	cmp	r3, r1, lsl #16
   3f1c8:	adc	r0, r0, r0
   3f1cc:	subcs	r3, r3, r1, lsl #16
   3f1d0:	cmp	r3, r1, lsl #15
   3f1d4:	adc	r0, r0, r0
   3f1d8:	subcs	r3, r3, r1, lsl #15
   3f1dc:	cmp	r3, r1, lsl #14
   3f1e0:	adc	r0, r0, r0
   3f1e4:	subcs	r3, r3, r1, lsl #14
   3f1e8:	cmp	r3, r1, lsl #13
   3f1ec:	adc	r0, r0, r0
   3f1f0:	subcs	r3, r3, r1, lsl #13
   3f1f4:	cmp	r3, r1, lsl #12
   3f1f8:	adc	r0, r0, r0
   3f1fc:	subcs	r3, r3, r1, lsl #12
   3f200:	cmp	r3, r1, lsl #11
   3f204:	adc	r0, r0, r0
   3f208:	subcs	r3, r3, r1, lsl #11
   3f20c:	cmp	r3, r1, lsl #10
   3f210:	adc	r0, r0, r0
   3f214:	subcs	r3, r3, r1, lsl #10
   3f218:	cmp	r3, r1, lsl #9
   3f21c:	adc	r0, r0, r0
   3f220:	subcs	r3, r3, r1, lsl #9
   3f224:	cmp	r3, r1, lsl #8
   3f228:	adc	r0, r0, r0
   3f22c:	subcs	r3, r3, r1, lsl #8
   3f230:	cmp	r3, r1, lsl #7
   3f234:	adc	r0, r0, r0
   3f238:	subcs	r3, r3, r1, lsl #7
   3f23c:	cmp	r3, r1, lsl #6
   3f240:	adc	r0, r0, r0
   3f244:	subcs	r3, r3, r1, lsl #6
   3f248:	cmp	r3, r1, lsl #5
   3f24c:	adc	r0, r0, r0
   3f250:	subcs	r3, r3, r1, lsl #5
   3f254:	cmp	r3, r1, lsl #4
   3f258:	adc	r0, r0, r0
   3f25c:	subcs	r3, r3, r1, lsl #4
   3f260:	cmp	r3, r1, lsl #3
   3f264:	adc	r0, r0, r0
   3f268:	subcs	r3, r3, r1, lsl #3
   3f26c:	cmp	r3, r1, lsl #2
   3f270:	adc	r0, r0, r0
   3f274:	subcs	r3, r3, r1, lsl #2
   3f278:	cmp	r3, r1, lsl #1
   3f27c:	adc	r0, r0, r0
   3f280:	subcs	r3, r3, r1, lsl #1
   3f284:	cmp	r3, r1
   3f288:	adc	r0, r0, r0
   3f28c:	subcs	r3, r3, r1
   3f290:	cmp	ip, #0
   3f294:	rsbmi	r0, r0, #0
   3f298:	bx	lr
   3f29c:	teq	ip, r0
   3f2a0:	rsbmi	r0, r0, #0
   3f2a4:	bx	lr
   3f2a8:	movcc	r0, #0
   3f2ac:	asreq	r0, ip, #31
   3f2b0:	orreq	r0, r0, #1
   3f2b4:	bx	lr
   3f2b8:	clz	r2, r1
   3f2bc:	rsb	r2, r2, #31
   3f2c0:	cmp	ip, #0
   3f2c4:	lsr	r0, r3, r2
   3f2c8:	rsbmi	r0, r0, #0
   3f2cc:	bx	lr
   3f2d0:	cmp	r0, #0
   3f2d4:	mvngt	r0, #-2147483648	; 0x80000000
   3f2d8:	movlt	r0, #-2147483648	; 0x80000000
   3f2dc:	b	3f3d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b77c>
   3f2e0:	cmp	r1, #0
   3f2e4:	beq	3f2d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b678>
   3f2e8:	push	{r0, r1, lr}
   3f2ec:	bl	3f0c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b470>
   3f2f0:	pop	{r1, r2, lr}
   3f2f4:	mul	r3, r2, r0
   3f2f8:	sub	r1, r1, r3
   3f2fc:	bx	lr
   3f300:	cmp	r3, #0
   3f304:	cmpeq	r2, #0
   3f308:	bne	3f32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b6d4>
   3f30c:	cmp	r1, #0
   3f310:	movlt	r1, #-2147483648	; 0x80000000
   3f314:	movlt	r0, #0
   3f318:	blt	3f328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b6d0>
   3f31c:	cmpeq	r0, #0
   3f320:	mvnne	r1, #-2147483648	; 0x80000000
   3f324:	mvnne	r0, #0
   3f328:	b	3f3d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b77c>
   3f32c:	sub	sp, sp, #8
   3f330:	push	{sp, lr}
   3f334:	cmp	r1, #0
   3f338:	blt	3f358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b700>
   3f33c:	cmp	r3, #0
   3f340:	blt	3f38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b734>
   3f344:	bl	3f3e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b78c>
   3f348:	ldr	lr, [sp, #4]
   3f34c:	add	sp, sp, #8
   3f350:	pop	{r2, r3}
   3f354:	bx	lr
   3f358:	rsbs	r0, r0, #0
   3f35c:	sbc	r1, r1, r1, lsl #1
   3f360:	cmp	r3, #0
   3f364:	blt	3f3b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b758>
   3f368:	bl	3f3e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b78c>
   3f36c:	ldr	lr, [sp, #4]
   3f370:	add	sp, sp, #8
   3f374:	pop	{r2, r3}
   3f378:	rsbs	r0, r0, #0
   3f37c:	sbc	r1, r1, r1, lsl #1
   3f380:	rsbs	r2, r2, #0
   3f384:	sbc	r3, r3, r3, lsl #1
   3f388:	bx	lr
   3f38c:	rsbs	r2, r2, #0
   3f390:	sbc	r3, r3, r3, lsl #1
   3f394:	bl	3f3e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b78c>
   3f398:	ldr	lr, [sp, #4]
   3f39c:	add	sp, sp, #8
   3f3a0:	pop	{r2, r3}
   3f3a4:	rsbs	r0, r0, #0
   3f3a8:	sbc	r1, r1, r1, lsl #1
   3f3ac:	bx	lr
   3f3b0:	rsbs	r2, r2, #0
   3f3b4:	sbc	r3, r3, r3, lsl #1
   3f3b8:	bl	3f3e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b78c>
   3f3bc:	ldr	lr, [sp, #4]
   3f3c0:	add	sp, sp, #8
   3f3c4:	pop	{r2, r3}
   3f3c8:	rsbs	r2, r2, #0
   3f3cc:	sbc	r3, r3, r3, lsl #1
   3f3d0:	bx	lr
   3f3d4:	push	{r1, lr}
   3f3d8:	mov	r0, #8
   3f3dc:	bl	13214 <raise@plt>
   3f3e0:	pop	{r1, pc}
   3f3e4:	cmp	r1, r3
   3f3e8:	cmpeq	r0, r2
   3f3ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f3f0:	mov	r4, r0
   3f3f4:	movcc	r0, #0
   3f3f8:	mov	r5, r1
   3f3fc:	ldr	lr, [sp, #36]	; 0x24
   3f400:	movcc	r1, r0
   3f404:	bcc	3f500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8a8>
   3f408:	cmp	r3, #0
   3f40c:	clzeq	ip, r2
   3f410:	clzne	ip, r3
   3f414:	addeq	ip, ip, #32
   3f418:	cmp	r5, #0
   3f41c:	clzeq	r1, r4
   3f420:	addeq	r1, r1, #32
   3f424:	clzne	r1, r5
   3f428:	sub	ip, ip, r1
   3f42c:	sub	sl, ip, #32
   3f430:	lsl	r9, r3, ip
   3f434:	rsb	fp, ip, #32
   3f438:	orr	r9, r9, r2, lsl sl
   3f43c:	orr	r9, r9, r2, lsr fp
   3f440:	lsl	r8, r2, ip
   3f444:	cmp	r5, r9
   3f448:	cmpeq	r4, r8
   3f44c:	movcc	r0, #0
   3f450:	movcc	r1, r0
   3f454:	bcc	3f470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b818>
   3f458:	mov	r0, #1
   3f45c:	subs	r4, r4, r8
   3f460:	lsl	r1, r0, sl
   3f464:	orr	r1, r1, r0, lsr fp
   3f468:	lsl	r0, r0, ip
   3f46c:	sbc	r5, r5, r9
   3f470:	cmp	ip, #0
   3f474:	beq	3f500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8a8>
   3f478:	lsr	r6, r8, #1
   3f47c:	orr	r6, r6, r9, lsl #31
   3f480:	lsr	r7, r9, #1
   3f484:	mov	r2, ip
   3f488:	b	3f4ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b854>
   3f48c:	subs	r3, r4, r6
   3f490:	sbc	r8, r5, r7
   3f494:	adds	r3, r3, r3
   3f498:	adc	r8, r8, r8
   3f49c:	adds	r4, r3, #1
   3f4a0:	adc	r5, r8, #0
   3f4a4:	subs	r2, r2, #1
   3f4a8:	beq	3f4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b870>
   3f4ac:	cmp	r5, r7
   3f4b0:	cmpeq	r4, r6
   3f4b4:	bcs	3f48c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b834>
   3f4b8:	adds	r4, r4, r4
   3f4bc:	adc	r5, r5, r5
   3f4c0:	subs	r2, r2, #1
   3f4c4:	bne	3f4ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b854>
   3f4c8:	lsr	r3, r4, ip
   3f4cc:	orr	r3, r3, r5, lsl fp
   3f4d0:	lsr	r2, r5, ip
   3f4d4:	orr	r3, r3, r5, lsr sl
   3f4d8:	adds	r0, r0, r4
   3f4dc:	mov	r4, r3
   3f4e0:	lsl	r3, r2, ip
   3f4e4:	orr	r3, r3, r4, lsl sl
   3f4e8:	lsl	ip, r4, ip
   3f4ec:	orr	r3, r3, r4, lsr fp
   3f4f0:	adc	r1, r1, r5
   3f4f4:	subs	r0, r0, ip
   3f4f8:	mov	r5, r2
   3f4fc:	sbc	r1, r1, r3
   3f500:	cmp	lr, #0
   3f504:	strdne	r4, [lr]
   3f508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f50c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f510:	mov	r7, r0
   3f514:	ldr	r6, [pc, #72]	; 3f564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b90c>
   3f518:	ldr	r5, [pc, #72]	; 3f568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b910>
   3f51c:	add	r6, pc, r6
   3f520:	add	r5, pc, r5
   3f524:	sub	r6, r6, r5
   3f528:	mov	r8, r1
   3f52c:	mov	r9, r2
   3f530:	bl	131c4 <calloc@plt-0x20>
   3f534:	asrs	r6, r6, #2
   3f538:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f53c:	mov	r4, #0
   3f540:	add	r4, r4, #1
   3f544:	ldr	r3, [r5], #4
   3f548:	mov	r2, r9
   3f54c:	mov	r1, r8
   3f550:	mov	r0, r7
   3f554:	blx	r3
   3f558:	cmp	r6, r4
   3f55c:	bne	3f540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8e8>
   3f560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f564:	ldrdeq	r7, [r8], -r8
   3f568:	ldrdeq	r7, [r8], -r0
   3f56c:	bx	lr

Disassembly of section .fini:

0003f570 <.fini>:
   3f570:	push	{r3, lr}
   3f574:	pop	{r3, pc}
