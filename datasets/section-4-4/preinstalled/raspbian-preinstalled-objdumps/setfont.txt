
raspbian-preinstalled/setfont:     file format elf32-littlearm


Disassembly of section .init:

00010cac <.init>:
   10cac:	push	{r3, lr}
   10cb0:	bl	1185c <pclose@plt+0x8c0>
   10cb4:	pop	{r3, pc}

Disassembly of section .plt:

00010cb8 <calloc@plt-0x14>:
   10cb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cbc:	ldr	lr, [pc, #4]	; 10cc8 <calloc@plt-0x4>
   10cc0:	add	lr, pc, lr
   10cc4:	ldr	pc, [lr, #8]!
   10cc8:	andeq	r7, r1, r8, lsr r3

00010ccc <calloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #824]!	; 0x338

00010cd8 <strstr@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #816]!	; 0x330

00010ce4 <raise@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #808]!	; 0x328

00010cf0 <strcmp@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #800]!	; 0x320

00010cfc <strtol@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #792]!	; 0x318

00010d08 <fopen@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #784]!	; 0x310

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #776]!	; 0x308

00010d20 <free@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #768]!	; 0x300

00010d2c <fgets@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #760]!	; 0x2f8

00010d38 <ferror@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #752]!	; 0x2f0

00010d44 <strndup@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d50 <memcpy@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #736]!	; 0x2e0

00010d5c <sleep@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #728]!	; 0x2d8

00010d68 <dcgettext@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #720]!	; 0x2d0

00010d74 <strdup@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d80 <__stack_chk_fail@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #704]!	; 0x2c0

00010d8c <realloc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #696]!	; 0x2b8

00010d98 <textdomain@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #688]!	; 0x2b0

00010da4 <perror@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #680]!	; 0x2a8

00010db0 <__xstat@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dbc <fwrite@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #664]!	; 0x298

00010dc8 <ioctl@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #656]!	; 0x290

00010dd4 <strcpy@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #648]!	; 0x288

00010de0 <__strcpy_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #640]!	; 0x280

00010dec <fread@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #632]!	; 0x278

00010df8 <opendir@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #624]!	; 0x270

00010e04 <malloc@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #616]!	; 0x268

00010e10 <__libc_start_main@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #608]!	; 0x260

00010e1c <strerror@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #600]!	; 0x258

00010e28 <__vfprintf_chk@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #592]!	; 0x250

00010e34 <seekdir@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #584]!	; 0x248

00010e40 <__gmon_start__@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #576]!	; 0x240

00010e4c <open@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #568]!	; 0x238

00010e58 <__ctype_b_loc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #560]!	; 0x230

00010e64 <exit@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #552]!	; 0x228

00010e70 <feof@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #544]!	; 0x220

00010e7c <strlen@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #536]!	; 0x218

00010e88 <strchr@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #528]!	; 0x210

00010e94 <__errno_location@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #520]!	; 0x208

00010ea0 <__sprintf_chk@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #512]!	; 0x200

00010eac <__isoc99_sscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb8 <memset@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec4 <putchar@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed0 <__printf_chk@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #480]!	; 0x1e0

00010edc <write@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee8 <__fprintf_chk@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef4 <access@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #456]!	; 0x1c8

00010f00 <fclose@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #448]!	; 0x1c0

00010f0c <strtok@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #440]!	; 0x1b8

00010f18 <setlocale@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #432]!	; 0x1b0

00010f24 <popen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #424]!	; 0x1a8

00010f30 <readdir@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #416]!	; 0x1a0

00010f3c <strrchr@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #408]!	; 0x198

00010f48 <bindtextdomain@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #400]!	; 0x190

00010f54 <isatty@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #392]!	; 0x188

00010f60 <strncmp@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #384]!	; 0x180

00010f6c <abort@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #376]!	; 0x178

00010f78 <close@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #368]!	; 0x170

00010f84 <closedir@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #360]!	; 0x168

00010f90 <strspn@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #352]!	; 0x160

00010f9c <pclose@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #344]!	; 0x158

Disassembly of section .text:

00010fa8 <.text>:
   10fa8:	ldr	r3, [pc, #52]	; 10fe4 <pclose@plt+0x48>
   10fac:	push	{r4, lr}
   10fb0:	mov	r2, #5
   10fb4:	ldr	r1, [pc, #44]	; 10fe8 <pclose@plt+0x4c>
   10fb8:	mov	r0, #0
   10fbc:	ldr	r4, [r3]
   10fc0:	bl	10d68 <dcgettext@plt>
   10fc4:	ldr	r3, [pc, #32]	; 10fec <pclose@plt+0x50>
   10fc8:	mov	r1, #1
   10fcc:	ldr	r3, [r3]
   10fd0:	mov	r2, r0
   10fd4:	mov	r0, r4
   10fd8:	bl	10ee8 <__fprintf_chk@plt>
   10fdc:	mov	r0, #71	; 0x47
   10fe0:	bl	10e64 <exit@plt>
   10fe4:	andeq	r8, r2, r8, lsr #2
   10fe8:	andeq	r7, r1, r0, lsr #5
   10fec:	andeq	r8, r2, r0, asr r1
   10ff0:	ldr	r3, [pc, #1972]	; 117ac <pclose@plt+0x810>
   10ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff8:	sub	sp, sp, #1104	; 0x450
   10ffc:	ldr	r4, [r1]
   11000:	sub	sp, sp, #4
   11004:	ldr	r3, [r3]
   11008:	mov	r7, r0
   1100c:	mov	r8, r1
   11010:	mov	r0, r4
   11014:	mov	r1, #47	; 0x2f
   11018:	str	r3, [sp, #1100]	; 0x44c
   1101c:	bl	10f3c <strrchr@plt>
   11020:	ldr	r3, [pc, #1928]	; 117b0 <pclose@plt+0x814>
   11024:	ldr	r1, [pc, #1928]	; 117b4 <pclose@plt+0x818>
   11028:	cmp	r0, #0
   1102c:	addne	r4, r0, #1
   11030:	mov	r0, #6
   11034:	str	r4, [r3]
   11038:	bl	10f18 <setlocale@plt>
   1103c:	ldr	r1, [pc, #1908]	; 117b8 <pclose@plt+0x81c>
   11040:	ldr	r0, [pc, #1908]	; 117bc <pclose@plt+0x820>
   11044:	bl	10f48 <bindtextdomain@plt>
   11048:	ldr	r0, [pc, #1900]	; 117bc <pclose@plt+0x820>
   1104c:	bl	10d98 <textdomain@plt>
   11050:	mov	r3, #0
   11054:	cmp	r7, #1
   11058:	str	r3, [sp, #76]	; 0x4c
   1105c:	ble	116ec <pclose@plt+0x750>
   11060:	mov	fp, r3
   11064:	ldr	r9, [pc, #1876]	; 117c0 <pclose@plt+0x824>
   11068:	ldr	sl, [pc, #1876]	; 117c4 <pclose@plt+0x828>
   1106c:	str	r3, [sp, #40]	; 0x28
   11070:	str	r3, [sp, #52]	; 0x34
   11074:	str	r3, [sp, #60]	; 0x3c
   11078:	str	r3, [sp, #56]	; 0x38
   1107c:	str	r3, [sp, #28]
   11080:	str	r3, [sp, #16]
   11084:	str	r3, [sp, #48]	; 0x30
   11088:	str	r3, [sp, #32]
   1108c:	str	r3, [sp, #24]
   11090:	str	r3, [sp, #20]
   11094:	str	r3, [sp, #36]	; 0x24
   11098:	str	r3, [sp, #44]	; 0x2c
   1109c:	mov	r4, #1
   110a0:	b	110c0 <pclose@plt+0x124>
   110a4:	ldr	r2, [pc, #1820]	; 117c8 <pclose@plt+0x82c>
   110a8:	ldr	r3, [r2]
   110ac:	add	r3, r3, #1
   110b0:	str	r3, [r2]
   110b4:	add	r4, r4, #1
   110b8:	cmp	r7, r4
   110bc:	ble	11150 <pclose@plt+0x1b4>
   110c0:	ldr	r5, [r8, r4, lsl #2]
   110c4:	mov	r1, r9
   110c8:	mov	r0, r5
   110cc:	bl	10cf0 <strcmp@plt>
   110d0:	lsl	r6, r4, #2
   110d4:	subs	r3, r0, #0
   110d8:	beq	116bc <pclose@plt+0x720>
   110dc:	mov	r1, sl
   110e0:	mov	r0, r5
   110e4:	bl	10cf0 <strcmp@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	110a4 <pclose@plt+0x108>
   110f0:	ldr	r1, [pc, #1748]	; 117cc <pclose@plt+0x830>
   110f4:	mov	r0, r5
   110f8:	bl	10cf0 <strcmp@plt>
   110fc:	cmp	r0, #0
   11100:	beq	112e4 <pclose@plt+0x348>
   11104:	ldr	r1, [pc, #1732]	; 117d0 <pclose@plt+0x834>
   11108:	mov	r0, r5
   1110c:	bl	10cf0 <strcmp@plt>
   11110:	cmp	r0, #0
   11114:	bne	112ec <pclose@plt+0x350>
   11118:	ldr	r3, [sp, #16]
   1111c:	add	r4, r4, #1
   11120:	adds	r3, r3, #0
   11124:	movne	r3, #1
   11128:	cmp	r7, r4
   1112c:	orreq	r3, r3, #1
   11130:	cmp	r3, #0
   11134:	bne	116b8 <pclose@plt+0x71c>
   11138:	add	r6, r8, r6
   1113c:	add	r4, r4, #1
   11140:	ldr	r3, [r6, #4]
   11144:	cmp	r7, r4
   11148:	str	r3, [sp, #16]
   1114c:	bgt	110c0 <pclose@plt+0x124>
   11150:	mov	r7, fp
   11154:	ldr	r3, [sp, #28]
   11158:	mov	r5, r7
   1115c:	cmp	r3, #0
   11160:	moveq	r5, #0
   11164:	cmp	r5, #0
   11168:	bne	11788 <pclose@plt+0x7ec>
   1116c:	ldr	r0, [sp, #16]
   11170:	bl	133ac <pclose@plt+0x2410>
   11174:	subs	r4, r0, #0
   11178:	blt	11578 <pclose@plt+0x5dc>
   1117c:	add	r2, sp, #1104	; 0x450
   11180:	mvn	r3, #0
   11184:	str	r3, [r2, #-1040]!	; 0xfffffbf0
   11188:	ldr	r1, [pc, #1604]	; 117d4 <pclose@plt+0x838>
   1118c:	mov	r0, r4
   11190:	bl	10dc8 <ioctl@plt>
   11194:	cmp	r0, #0
   11198:	bne	111a8 <pclose@plt+0x20c>
   1119c:	ldr	r0, [sp, #64]	; 0x40
   111a0:	cmp	r0, #1
   111a4:	beq	115f0 <pclose@plt+0x654>
   111a8:	ldr	r3, [sp, #28]
   111ac:	ldr	r2, [sp, #44]	; 0x2c
   111b0:	cmp	r3, #0
   111b4:	cmpeq	r2, #0
   111b8:	bne	113c8 <pclose@plt+0x42c>
   111bc:	ldr	r2, [sp, #36]	; 0x24
   111c0:	ldr	r3, [sp, #20]
   111c4:	cmp	r2, #0
   111c8:	clz	r3, r3
   111cc:	lsr	r3, r3, #5
   111d0:	movne	r3, #0
   111d4:	cmp	r3, #0
   111d8:	beq	113c4 <pclose@plt+0x428>
   111dc:	ldr	r2, [sp, #24]
   111e0:	ldr	r3, [sp, #32]
   111e4:	cmp	r2, #0
   111e8:	clz	r3, r3
   111ec:	lsr	r3, r3, #5
   111f0:	movne	r3, #0
   111f4:	cmp	r3, #0
   111f8:	beq	11628 <pclose@plt+0x68c>
   111fc:	ldr	r3, [sp, #48]	; 0x30
   11200:	cmp	r3, #0
   11204:	eoreq	r3, r7, #1
   11208:	movne	r3, #0
   1120c:	cmp	r3, #0
   11210:	streq	r3, [sp, #28]
   11214:	ldrne	r3, [pc, #1432]	; 117b4 <pclose@plt+0x818>
   11218:	movne	r2, #1
   1121c:	strne	r2, [sp, #28]
   11220:	strne	r3, [sp, #76]	; 0x4c
   11224:	ldr	r3, [sp, #32]
   11228:	cmp	r3, #0
   1122c:	beq	1123c <pclose@plt+0x2a0>
   11230:	mov	r1, r3
   11234:	mov	r0, r4
   11238:	bl	1315c <pclose@plt+0x21c0>
   1123c:	ldr	r3, [sp, #48]	; 0x30
   11240:	cmp	r3, #0
   11244:	beq	11254 <pclose@plt+0x2b8>
   11248:	mov	r1, r3
   1124c:	mov	r0, r4
   11250:	bl	14f00 <pclose@plt+0x3f64>
   11254:	ldr	r3, [sp, #44]	; 0x2c
   11258:	cmp	r3, #0
   1125c:	beq	11280 <pclose@plt+0x2e4>
   11260:	mov	r1, r3
   11264:	mov	r0, r4
   11268:	bl	12d5c <pclose@plt+0x1dc0>
   1126c:	ldr	r1, [pc, #1380]	; 117d8 <pclose@plt+0x83c>
   11270:	mov	r0, r4
   11274:	bl	12b50 <pclose@plt+0x1bb4>
   11278:	mov	r3, #1
   1127c:	str	r3, [sp, #52]	; 0x34
   11280:	ldr	r3, [sp, #36]	; 0x24
   11284:	cmp	r3, #0
   11288:	ldr	r3, [sp, #40]	; 0x28
   1128c:	movne	r3, #1
   11290:	cmp	r7, #0
   11294:	str	r3, [sp, #40]	; 0x28
   11298:	bne	1156c <pclose@plt+0x5d0>
   1129c:	ldr	r3, [sp, #28]
   112a0:	cmp	r3, #0
   112a4:	bne	1153c <pclose@plt+0x5a0>
   112a8:	ldr	r3, [sp, #36]	; 0x24
   112ac:	cmp	r3, #0
   112b0:	beq	112c0 <pclose@plt+0x324>
   112b4:	mov	r1, r3
   112b8:	mov	r0, r4
   112bc:	bl	1490c <pclose@plt+0x3970>
   112c0:	ldr	r3, [pc, #1252]	; 117ac <pclose@plt+0x810>
   112c4:	ldr	r2, [sp, #1100]	; 0x44c
   112c8:	mov	r0, #0
   112cc:	ldr	r3, [r3]
   112d0:	cmp	r2, r3
   112d4:	bne	117a8 <pclose@plt+0x80c>
   112d8:	add	sp, sp, #1104	; 0x450
   112dc:	add	sp, sp, #4
   112e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112e4:	mov	fp, #1
   112e8:	b	110b4 <pclose@plt+0x118>
   112ec:	ldr	r1, [pc, #1256]	; 117dc <pclose@plt+0x840>
   112f0:	mov	r0, r5
   112f4:	bl	10cf0 <strcmp@plt>
   112f8:	cmp	r0, #0
   112fc:	bne	11334 <pclose@plt+0x398>
   11300:	ldr	r2, [sp, #20]
   11304:	add	r4, r4, #1
   11308:	cmp	r2, #0
   1130c:	sub	r3, r7, r4
   11310:	clz	r3, r3
   11314:	lsr	r3, r3, #5
   11318:	movne	r3, #1
   1131c:	cmp	r3, #0
   11320:	bne	116b8 <pclose@plt+0x71c>
   11324:	add	r6, r8, r6
   11328:	ldr	r3, [r6, #4]
   1132c:	str	r3, [sp, #20]
   11330:	b	110b4 <pclose@plt+0x118>
   11334:	ldr	r1, [pc, #1188]	; 117e0 <pclose@plt+0x844>
   11338:	mov	r0, r5
   1133c:	bl	10cf0 <strcmp@plt>
   11340:	cmp	r0, #0
   11344:	bne	1137c <pclose@plt+0x3e0>
   11348:	ldr	r2, [sp, #24]
   1134c:	add	r4, r4, #1
   11350:	cmp	r2, #0
   11354:	sub	r3, r7, r4
   11358:	clz	r3, r3
   1135c:	lsr	r3, r3, #5
   11360:	movne	r3, #1
   11364:	cmp	r3, #0
   11368:	bne	116b8 <pclose@plt+0x71c>
   1136c:	add	r6, r8, r6
   11370:	ldr	r3, [r6, #4]
   11374:	str	r3, [sp, #24]
   11378:	b	110b4 <pclose@plt+0x118>
   1137c:	ldr	r1, [pc, #1120]	; 117e4 <pclose@plt+0x848>
   11380:	mov	r0, r5
   11384:	bl	10cf0 <strcmp@plt>
   11388:	cmp	r0, #0
   1138c:	bne	11478 <pclose@plt+0x4dc>
   11390:	ldr	r2, [sp, #32]
   11394:	add	r4, r4, #1
   11398:	cmp	r2, #0
   1139c:	sub	r3, r7, r4
   113a0:	clz	r3, r3
   113a4:	lsr	r3, r3, #5
   113a8:	movne	r3, #1
   113ac:	cmp	r3, #0
   113b0:	bne	116b8 <pclose@plt+0x71c>
   113b4:	add	r6, r8, r6
   113b8:	ldr	r3, [r6, #4]
   113bc:	str	r3, [sp, #32]
   113c0:	b	110b4 <pclose@plt+0x118>
   113c4:	str	r3, [sp, #28]
   113c8:	ldr	r0, [sp, #20]
   113cc:	cmp	r0, #0
   113d0:	beq	11430 <pclose@plt+0x494>
   113d4:	mov	r6, #0
   113d8:	ldr	r1, [pc, #1032]	; 117e8 <pclose@plt+0x84c>
   113dc:	str	r6, [sp, #72]	; 0x48
   113e0:	bl	10d08 <fopen@plt>
   113e4:	subs	r5, r0, #0
   113e8:	beq	11798 <pclose@plt+0x7fc>
   113ec:	add	r3, sp, #80	; 0x50
   113f0:	add	r2, sp, #72	; 0x48
   113f4:	sub	r3, r3, #12
   113f8:	ldr	r1, [sp, #20]
   113fc:	str	r2, [sp, #4]
   11400:	str	r3, [sp]
   11404:	mov	r2, r5
   11408:	mov	r3, #1
   1140c:	mov	r0, r4
   11410:	str	r6, [sp, #68]	; 0x44
   11414:	bl	11954 <pclose@plt+0x9b8>
   11418:	mov	r0, r4
   1141c:	ldrd	r2, [sp, #68]	; 0x44
   11420:	mov	r1, r5
   11424:	bl	15008 <pclose@plt+0x406c>
   11428:	mov	r0, r5
   1142c:	bl	10f00 <fclose@plt>
   11430:	ldr	r3, [sp, #24]
   11434:	cmp	r3, #0
   11438:	beq	11224 <pclose@plt+0x288>
   1143c:	ldr	r1, [pc, #932]	; 117e8 <pclose@plt+0x84c>
   11440:	mov	r0, r3
   11444:	bl	10d08 <fopen@plt>
   11448:	subs	r5, r0, #0
   1144c:	beq	11778 <pclose@plt+0x7dc>
   11450:	mov	r3, #0
   11454:	mov	r0, r4
   11458:	ldr	r1, [sp, #24]
   1145c:	str	r3, [sp, #4]
   11460:	str	r3, [sp]
   11464:	mov	r2, r5
   11468:	bl	11954 <pclose@plt+0x9b8>
   1146c:	mov	r0, r5
   11470:	bl	10f00 <fclose@plt>
   11474:	b	11224 <pclose@plt+0x288>
   11478:	ldr	r1, [pc, #876]	; 117ec <pclose@plt+0x850>
   1147c:	mov	r0, r5
   11480:	bl	10cf0 <strcmp@plt>
   11484:	cmp	r0, #0
   11488:	bne	114c0 <pclose@plt+0x524>
   1148c:	ldr	r2, [sp, #48]	; 0x30
   11490:	add	r4, r4, #1
   11494:	cmp	r2, #0
   11498:	sub	r3, r7, r4
   1149c:	clz	r3, r3
   114a0:	lsr	r3, r3, #5
   114a4:	movne	r3, #1
   114a8:	cmp	r3, #0
   114ac:	bne	116b8 <pclose@plt+0x71c>
   114b0:	add	r6, r8, r6
   114b4:	ldr	r3, [r6, #4]
   114b8:	str	r3, [sp, #48]	; 0x30
   114bc:	b	110b4 <pclose@plt+0x118>
   114c0:	ldr	r1, [pc, #808]	; 117f0 <pclose@plt+0x854>
   114c4:	mov	r0, r5
   114c8:	bl	10cf0 <strcmp@plt>
   114cc:	cmp	r0, #0
   114d0:	beq	1159c <pclose@plt+0x600>
   114d4:	ldr	r1, [pc, #792]	; 117f4 <pclose@plt+0x858>
   114d8:	mov	r0, r5
   114dc:	bl	10cf0 <strcmp@plt>
   114e0:	cmp	r0, #0
   114e4:	bne	11630 <pclose@plt+0x694>
   114e8:	ldr	r3, [sp, #36]	; 0x24
   114ec:	add	r4, r4, #1
   114f0:	adds	r3, r3, #0
   114f4:	movne	r3, #1
   114f8:	cmp	r7, r4
   114fc:	orreq	r3, r3, #1
   11500:	cmp	r3, #0
   11504:	bne	116b8 <pclose@plt+0x71c>
   11508:	add	r6, r8, r6
   1150c:	ldr	r1, [pc, #740]	; 117f8 <pclose@plt+0x85c>
   11510:	ldr	r5, [r6, #4]
   11514:	mov	r0, r5
   11518:	bl	10cf0 <strcmp@plt>
   1151c:	ldr	r3, [sp, #40]	; 0x28
   11520:	cmp	r0, #0
   11524:	moveq	r3, #1
   11528:	str	r3, [sp, #40]	; 0x28
   1152c:	movne	r3, r5
   11530:	moveq	r3, #0
   11534:	str	r3, [sp, #36]	; 0x24
   11538:	b	110b4 <pclose@plt+0x118>
   1153c:	ldr	r3, [sp, #40]	; 0x28
   11540:	ldr	r2, [sp, #28]
   11544:	str	r3, [sp, #8]
   11548:	ldr	r3, [sp, #52]	; 0x34
   1154c:	add	r1, sp, #76	; 0x4c
   11550:	str	r3, [sp, #4]
   11554:	ldr	r3, [sp, #60]	; 0x3c
   11558:	mov	r0, r4
   1155c:	str	r3, [sp]
   11560:	ldr	r3, [sp, #56]	; 0x38
   11564:	bl	12130 <pclose@plt+0x1194>
   11568:	b	112a8 <pclose@plt+0x30c>
   1156c:	mov	r0, r4
   11570:	bl	15194 <pclose@plt+0x41f8>
   11574:	b	1129c <pclose@plt+0x300>
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #632]	; 117fc <pclose@plt+0x860>
   11580:	mov	r0, r5
   11584:	bl	10d68 <dcgettext@plt>
   11588:	mov	r1, r5
   1158c:	mov	r2, r0
   11590:	mov	r0, #1
   11594:	bl	135e0 <pclose@plt+0x2644>
   11598:	b	1117c <pclose@plt+0x1e0>
   1159c:	ldr	r3, [sp, #44]	; 0x2c
   115a0:	add	r4, r4, #1
   115a4:	adds	r3, r3, #0
   115a8:	movne	r3, #1
   115ac:	cmp	r7, r4
   115b0:	orreq	r3, r3, #1
   115b4:	cmp	r3, #0
   115b8:	bne	116b8 <pclose@plt+0x71c>
   115bc:	add	r6, r8, r6
   115c0:	ldr	r1, [pc, #560]	; 117f8 <pclose@plt+0x85c>
   115c4:	ldr	r5, [r6, #4]
   115c8:	mov	r0, r5
   115cc:	bl	10cf0 <strcmp@plt>
   115d0:	ldr	r3, [sp, #52]	; 0x34
   115d4:	cmp	r0, #0
   115d8:	moveq	r3, #1
   115dc:	str	r3, [sp, #52]	; 0x34
   115e0:	movne	r3, r5
   115e4:	moveq	r3, #0
   115e8:	str	r3, [sp, #44]	; 0x2c
   115ec:	b	110b4 <pclose@plt+0x118>
   115f0:	ldr	r3, [pc, #464]	; 117c8 <pclose@plt+0x82c>
   115f4:	ldr	r3, [r3]
   115f8:	cmp	r3, #0
   115fc:	beq	1161c <pclose@plt+0x680>
   11600:	ldr	r3, [sp, #16]
   11604:	ldr	r2, [pc, #424]	; 117b4 <pclose@plt+0x818>
   11608:	cmp	r3, #0
   1160c:	moveq	r3, r2
   11610:	mov	r2, r3
   11614:	ldr	r1, [pc, #484]	; 11800 <pclose@plt+0x864>
   11618:	bl	10ed0 <__printf_chk@plt>
   1161c:	mov	r0, r4
   11620:	bl	10f78 <close@plt>
   11624:	b	112c0 <pclose@plt+0x324>
   11628:	str	r3, [sp, #28]
   1162c:	b	11430 <pclose@plt+0x494>
   11630:	ldr	r1, [pc, #460]	; 11804 <pclose@plt+0x868>
   11634:	mov	r0, r5
   11638:	bl	10cf0 <strcmp@plt>
   1163c:	cmp	r0, #0
   11640:	ldreq	r3, [pc, #384]	; 117c8 <pclose@plt+0x82c>
   11644:	moveq	r2, #1
   11648:	streq	r2, [r3, #8]
   1164c:	beq	110b4 <pclose@plt+0x118>
   11650:	ldr	r1, [pc, #432]	; 11808 <pclose@plt+0x86c>
   11654:	mov	r2, #2
   11658:	mov	r0, r5
   1165c:	bl	10f60 <strncmp@plt>
   11660:	subs	r1, r0, #0
   11664:	beq	1169c <pclose@plt+0x700>
   11668:	ldrb	r3, [r5]
   1166c:	cmp	r3, #45	; 0x2d
   11670:	beq	11724 <pclose@plt+0x788>
   11674:	ldr	r3, [sp, #28]
   11678:	cmp	r3, #256	; 0x100
   1167c:	beq	11748 <pclose@plt+0x7ac>
   11680:	ldr	r2, [sp, #28]
   11684:	add	r3, sp, #1104	; 0x450
   11688:	add	r3, r3, r2, lsl #2
   1168c:	str	r5, [r3, #-1028]	; 0xfffffbfc
   11690:	add	r3, r2, #1
   11694:	str	r3, [sp, #28]
   11698:	b	110b4 <pclose@plt+0x118>
   1169c:	add	r0, r5, #2
   116a0:	mov	r2, #10
   116a4:	bl	10cfc <strtol@plt>
   116a8:	sub	r3, r0, #1
   116ac:	cmp	r3, #31
   116b0:	str	r0, [sp, #60]	; 0x3c
   116b4:	bls	110b4 <pclose@plt+0x118>
   116b8:	bl	11910 <pclose@plt+0x974>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #324]	; 1180c <pclose@plt+0x870>
   116c4:	mov	fp, r3
   116c8:	bl	10d68 <dcgettext@plt>
   116cc:	ldr	r3, [pc, #220]	; 117b0 <pclose@plt+0x814>
   116d0:	ldr	r2, [r3]
   116d4:	ldr	r3, [pc, #308]	; 11810 <pclose@plt+0x874>
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	bl	10ed0 <__printf_chk@plt>
   116e4:	mov	r0, fp
   116e8:	bl	10e64 <exit@plt>
   116ec:	mov	r7, r3
   116f0:	str	r3, [sp, #40]	; 0x28
   116f4:	str	r3, [sp, #52]	; 0x34
   116f8:	str	r3, [sp, #60]	; 0x3c
   116fc:	str	r3, [sp, #56]	; 0x38
   11700:	str	r3, [sp, #28]
   11704:	str	r3, [sp, #16]
   11708:	str	r3, [sp, #48]	; 0x30
   1170c:	str	r3, [sp, #32]
   11710:	str	r3, [sp, #24]
   11714:	str	r3, [sp, #20]
   11718:	str	r3, [sp, #36]	; 0x24
   1171c:	str	r3, [sp, #44]	; 0x2c
   11720:	b	11154 <pclose@plt+0x1b8>
   11724:	add	r0, r5, #1
   11728:	mov	r2, #10
   1172c:	mov	r1, #0
   11730:	bl	10cfc <strtol@plt>
   11734:	sub	r3, r0, #1
   11738:	cmp	r3, #31
   1173c:	str	r0, [sp, #56]	; 0x38
   11740:	bls	110b4 <pclose@plt+0x118>
   11744:	b	116b8 <pclose@plt+0x71c>
   11748:	ldr	r3, [pc, #196]	; 11814 <pclose@plt+0x878>
   1174c:	ldr	r1, [pc, #196]	; 11818 <pclose@plt+0x87c>
   11750:	mov	r2, #5
   11754:	mov	r0, #0
   11758:	ldr	r4, [r3]
   1175c:	bl	10d68 <dcgettext@plt>
   11760:	mov	r1, #1
   11764:	mov	r2, r0
   11768:	mov	r0, r4
   1176c:	bl	10ee8 <__fprintf_chk@plt>
   11770:	mov	r0, #64	; 0x40
   11774:	bl	10e64 <exit@plt>
   11778:	ldr	r0, [sp, #24]
   1177c:	bl	10da4 <perror@plt>
   11780:	mov	r0, #73	; 0x49
   11784:	bl	10e64 <exit@plt>
   11788:	ldr	r3, [pc, #132]	; 11814 <pclose@plt+0x878>
   1178c:	mov	r2, #5
   11790:	ldr	r1, [pc, #132]	; 1181c <pclose@plt+0x880>
   11794:	b	11754 <pclose@plt+0x7b8>
   11798:	ldr	r0, [sp, #20]
   1179c:	bl	10da4 <perror@plt>
   117a0:	mov	r0, #73	; 0x49
   117a4:	bl	10e64 <exit@plt>
   117a8:	bl	10d80 <__stack_chk_fail@plt>
   117ac:	andeq	r7, r2, r8, lsl #30
   117b0:	andeq	r8, r2, r0, asr r1
   117b4:	andeq	r7, r1, r0, lsr r7
   117b8:	andeq	r6, r1, ip, lsl lr
   117bc:	andeq	r6, r1, r0, lsr lr
   117c0:	andeq	r6, r1, r4, lsr lr
   117c4:	andeq	r6, r1, r0, asr lr
   117c8:	andeq	r8, r2, r0, lsr r1
   117cc:	andeq	r6, r1, r4, asr lr
   117d0:	andeq	r6, r1, r8, asr lr
   117d4:	andeq	r4, r0, fp, lsr fp
   117d8:	andeq	r6, r1, r8, asr pc
   117dc:	andeq	r6, r1, ip, asr lr
   117e0:	andeq	r6, r1, r0, ror #28
   117e4:	andeq	r6, r1, r4, ror #28
   117e8:	andeq	r6, r1, r4, asr pc
   117ec:	andeq	r6, r1, r8, ror #28
   117f0:	andeq	r6, r1, ip, ror #28
   117f4:	andeq	r6, r1, r8, ror lr
   117f8:	andeq	r6, r1, r0, ror lr
   117fc:	strdeq	r6, [r1], -r4
   11800:	andeq	r6, r1, ip, lsr #30
   11804:	andeq	r6, r1, ip, ror lr
   11808:	andeq	r6, r1, r0, lsl #29
   1180c:	andeq	r6, r1, r8, lsr lr
   11810:	andeq	r6, r1, r4, asr #28
   11814:	andeq	r8, r2, r8, lsr #2
   11818:	andeq	r6, r1, r4, lsl #29
   1181c:	andeq	r6, r1, r4, lsr #29
   11820:	mov	fp, #0
   11824:	mov	lr, #0
   11828:	pop	{r1}		; (ldr r1, [sp], #4)
   1182c:	mov	r2, sp
   11830:	push	{r2}		; (str r2, [sp, #-4]!)
   11834:	push	{r0}		; (str r0, [sp, #-4]!)
   11838:	ldr	ip, [pc, #16]	; 11850 <pclose@plt+0x8b4>
   1183c:	push	{ip}		; (str ip, [sp, #-4]!)
   11840:	ldr	r0, [pc, #12]	; 11854 <pclose@plt+0x8b8>
   11844:	ldr	r3, [pc, #12]	; 11858 <pclose@plt+0x8bc>
   11848:	bl	10e10 <__libc_start_main@plt>
   1184c:	bl	10f6c <abort@plt>
   11850:	andeq	r6, r1, r8, lsr #8
   11854:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11858:	andeq	r6, r1, r8, asr #7
   1185c:	ldr	r3, [pc, #20]	; 11878 <pclose@plt+0x8dc>
   11860:	ldr	r2, [pc, #20]	; 1187c <pclose@plt+0x8e0>
   11864:	add	r3, pc, r3
   11868:	ldr	r2, [r3, r2]
   1186c:	cmp	r2, #0
   11870:	bxeq	lr
   11874:	b	10e40 <__gmon_start__@plt>
   11878:	muleq	r1, r4, r7
   1187c:	andeq	r0, r0, r4, lsl #2
   11880:	ldr	r0, [pc, #24]	; 118a0 <pclose@plt+0x904>
   11884:	ldr	r3, [pc, #24]	; 118a4 <pclose@plt+0x908>
   11888:	cmp	r3, r0
   1188c:	bxeq	lr
   11890:	ldr	r3, [pc, #16]	; 118a8 <pclose@plt+0x90c>
   11894:	cmp	r3, #0
   11898:	bxeq	lr
   1189c:	bx	r3
   118a0:	andeq	r8, r2, r8, lsr #2
   118a4:	andeq	r8, r2, r8, lsr #2
   118a8:	andeq	r0, r0, r0
   118ac:	ldr	r0, [pc, #36]	; 118d8 <pclose@plt+0x93c>
   118b0:	ldr	r1, [pc, #36]	; 118dc <pclose@plt+0x940>
   118b4:	sub	r1, r1, r0
   118b8:	asr	r1, r1, #2
   118bc:	add	r1, r1, r1, lsr #31
   118c0:	asrs	r1, r1, #1
   118c4:	bxeq	lr
   118c8:	ldr	r3, [pc, #16]	; 118e0 <pclose@plt+0x944>
   118cc:	cmp	r3, #0
   118d0:	bxeq	lr
   118d4:	bx	r3
   118d8:	andeq	r8, r2, r8, lsr #2
   118dc:	andeq	r8, r2, r8, lsr #2
   118e0:	andeq	r0, r0, r0
   118e4:	push	{r4, lr}
   118e8:	ldr	r4, [pc, #24]	; 11908 <pclose@plt+0x96c>
   118ec:	ldrb	r3, [r4]
   118f0:	cmp	r3, #0
   118f4:	popne	{r4, pc}
   118f8:	bl	11880 <pclose@plt+0x8e4>
   118fc:	mov	r3, #1
   11900:	strb	r3, [r4]
   11904:	pop	{r4, pc}
   11908:	andeq	r8, r2, ip, lsr #2
   1190c:	b	118ac <pclose@plt+0x910>
   11910:	ldr	r3, [pc, #48]	; 11948 <pclose@plt+0x9ac>
   11914:	push	{r4, lr}
   11918:	mov	r2, #5
   1191c:	ldr	r1, [pc, #40]	; 1194c <pclose@plt+0x9b0>
   11920:	mov	r0, #0
   11924:	ldr	r4, [r3]
   11928:	bl	10d68 <dcgettext@plt>
   1192c:	ldr	r3, [pc, #28]	; 11950 <pclose@plt+0x9b4>
   11930:	mov	r1, #1
   11934:	mov	r2, r0
   11938:	mov	r0, r4
   1193c:	bl	10ee8 <__fprintf_chk@plt>
   11940:	mov	r0, #64	; 0x40
   11944:	bl	10e64 <exit@plt>
   11948:	andeq	r8, r2, r8, lsr #2
   1194c:	andeq	r6, r1, r0, ror r4
   11950:	andeq	r6, r1, ip, asr #18
   11954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11958:	sub	sp, sp, #65536	; 0x10000
   1195c:	sub	sp, sp, #44	; 0x2c
   11960:	mov	ip, #512	; 0x200
   11964:	str	ip, [sp, #20]
   11968:	ldr	r8, [pc, #488]	; 11b58 <pclose@plt+0xbbc>
   1196c:	add	ip, sp, #65536	; 0x10000
   11970:	add	r4, sp, #28
   11974:	add	ip, ip, #80	; 0x50
   11978:	str	r4, [sp]
   1197c:	add	r4, sp, #65536	; 0x10000
   11980:	ldr	lr, [r8]
   11984:	add	r4, r4, #36	; 0x24
   11988:	ldr	r9, [ip]
   1198c:	add	ip, sp, #65536	; 0x10000
   11990:	add	ip, ip, #84	; 0x54
   11994:	str	r1, [sp, #12]
   11998:	str	lr, [r4]
   1199c:	mov	r6, r2
   119a0:	mov	fp, r3
   119a4:	add	r1, sp, #36	; 0x24
   119a8:	add	r3, sp, #24
   119ac:	add	r2, sp, #20
   119b0:	ldr	sl, [ip]
   119b4:	bl	15250 <pclose@plt+0x42b4>
   119b8:	subs	r4, r0, #0
   119bc:	bne	11b4c <pclose@plt+0xbb0>
   119c0:	ldr	r7, [sp, #24]
   119c4:	ldr	r1, [sp, #20]
   119c8:	mov	r2, r7
   119cc:	add	r0, sp, #36	; 0x24
   119d0:	bl	151c4 <pclose@plt+0x4228>
   119d4:	ldr	r3, [sp, #20]
   119d8:	mov	ip, #1
   119dc:	ldr	r1, [sp, #24]
   119e0:	str	fp, [sp, #4]
   119e4:	str	ip, [sp, #32]
   119e8:	mov	r5, r0
   119ec:	add	r0, sp, #32
   119f0:	str	r0, [sp]
   119f4:	mov	r2, r5
   119f8:	mov	r0, r6
   119fc:	str	r5, [sp, #28]
   11a00:	bl	13fa8 <pclose@plt+0x300c>
   11a04:	cmp	sl, #0
   11a08:	ldr	r0, [sp, #28]
   11a0c:	ldrne	r3, [sp, #32]
   11a10:	subne	r3, r3, #2
   11a14:	clzne	r3, r3
   11a18:	lsrne	r3, r3, #5
   11a1c:	strne	r3, [sl]
   11a20:	cmp	r0, #0
   11a24:	beq	11af4 <pclose@plt+0xb58>
   11a28:	ldr	r3, [sp, #20]
   11a2c:	cmp	r3, #0
   11a30:	ble	11a80 <pclose@plt+0xae4>
   11a34:	adds	r3, r7, #7
   11a38:	addmi	r7, r7, #14
   11a3c:	movpl	r7, r3
   11a40:	add	sl, sp, #36	; 0x24
   11a44:	asr	r7, r7, #3
   11a48:	mul	r5, r7, r5
   11a4c:	lsl	r7, r7, #5
   11a50:	mov	r3, r6
   11a54:	mov	r2, #1
   11a58:	mov	r1, r5
   11a5c:	mov	r0, sl
   11a60:	bl	10dbc <fwrite@plt>
   11a64:	cmp	r0, #1
   11a68:	bne	11b1c <pclose@plt+0xb80>
   11a6c:	ldr	r3, [sp, #20]
   11a70:	add	r4, r4, #1
   11a74:	cmp	r3, r4
   11a78:	add	sl, sl, r7
   11a7c:	bgt	11a50 <pclose@plt+0xab4>
   11a80:	ldr	r3, [pc, #212]	; 11b5c <pclose@plt+0xbc0>
   11a84:	ldr	r3, [r3]
   11a88:	cmp	r3, #0
   11a8c:	bne	11ac0 <pclose@plt+0xb24>
   11a90:	cmp	r9, #0
   11a94:	ldrne	r3, [sp, #20]
   11a98:	strne	r3, [r9]
   11a9c:	add	r3, sp, #65536	; 0x10000
   11aa0:	add	r3, r3, #36	; 0x24
   11aa4:	ldr	r2, [r3]
   11aa8:	ldr	r3, [r8]
   11aac:	cmp	r2, r3
   11ab0:	bne	11b54 <pclose@plt+0xbb8>
   11ab4:	add	sp, sp, #65536	; 0x10000
   11ab8:	add	sp, sp, #44	; 0x2c
   11abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ac0:	mov	r2, #5
   11ac4:	ldr	r1, [pc, #148]	; 11b60 <pclose@plt+0xbc4>
   11ac8:	mov	r0, #0
   11acc:	bl	10d68 <dcgettext@plt>
   11ad0:	ldr	r3, [sp, #28]
   11ad4:	ldr	r2, [sp, #12]
   11ad8:	str	r3, [sp]
   11adc:	str	r2, [sp, #4]
   11ae0:	ldrd	r2, [sp, #20]
   11ae4:	mov	r1, r0
   11ae8:	mov	r0, #1
   11aec:	bl	10ed0 <__printf_chk@plt>
   11af0:	b	11a90 <pclose@plt+0xaf4>
   11af4:	ldr	r3, [pc, #104]	; 11b64 <pclose@plt+0xbc8>
   11af8:	mov	r2, #5
   11afc:	ldr	r1, [pc, #100]	; 11b68 <pclose@plt+0xbcc>
   11b00:	ldr	r4, [r3]
   11b04:	bl	10d68 <dcgettext@plt>
   11b08:	mov	r1, #1
   11b0c:	mov	r2, r0
   11b10:	mov	r0, r4
   11b14:	bl	10ee8 <__fprintf_chk@plt>
   11b18:	b	11a90 <pclose@plt+0xaf4>
   11b1c:	ldr	r3, [pc, #64]	; 11b64 <pclose@plt+0xbc8>
   11b20:	mov	r2, #5
   11b24:	ldr	r1, [pc, #64]	; 11b6c <pclose@plt+0xbd0>
   11b28:	mov	r0, #0
   11b2c:	ldr	r4, [r3]
   11b30:	bl	10d68 <dcgettext@plt>
   11b34:	mov	r1, #1
   11b38:	mov	r2, r0
   11b3c:	mov	r0, r4
   11b40:	bl	10ee8 <__fprintf_chk@plt>
   11b44:	mov	r0, #74	; 0x4a
   11b48:	bl	10e64 <exit@plt>
   11b4c:	mov	r0, #71	; 0x47
   11b50:	bl	10e64 <exit@plt>
   11b54:	bl	10d80 <__stack_chk_fail@plt>
   11b58:	andeq	r7, r2, r8, lsl #30
   11b5c:	andeq	r8, r2, r0, lsr r1
   11b60:	andeq	r6, r1, r8, lsl #19
   11b64:	andeq	r8, r2, r8, lsr #2
   11b68:	andeq	r6, r1, r8, asr r9
   11b6c:	andeq	r6, r1, r0, ror r9
   11b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b74:	adds	r4, r2, #7
   11b78:	addmi	r4, r2, #14
   11b7c:	sub	sp, sp, #28
   11b80:	mov	sl, r3
   11b84:	asr	r4, r4, #3
   11b88:	sub	r3, r3, #1
   11b8c:	cmp	r3, #31
   11b90:	str	r0, [sp, #20]
   11b94:	mul	r7, sl, r4
   11b98:	ldr	r8, [sp, #68]	; 0x44
   11b9c:	bhi	11e24 <pclose@plt+0xe88>
   11ba0:	sub	r3, r2, #1
   11ba4:	cmp	r3, #31
   11ba8:	mov	r9, r2
   11bac:	bhi	11df0 <pclose@plt+0xe54>
   11bb0:	ldr	r3, [sp, #64]	; 0x40
   11bb4:	lsl	r4, r4, #5
   11bb8:	cmp	r3, #0
   11bbc:	moveq	r3, sl
   11bc0:	cmp	r8, #128	; 0x80
   11bc4:	movge	r6, r8
   11bc8:	movlt	r6, #128	; 0x80
   11bcc:	mov	r5, r1
   11bd0:	mul	r6, r4, r6
   11bd4:	str	r3, [sp, #64]	; 0x40
   11bd8:	mov	r0, r6
   11bdc:	bl	134b8 <pclose@plt+0x251c>
   11be0:	mov	r2, r6
   11be4:	mov	r1, #0
   11be8:	mov	fp, r0
   11bec:	bl	10eb8 <memset@plt>
   11bf0:	cmp	r8, #0
   11bf4:	ble	11c24 <pclose@plt+0xc88>
   11bf8:	mov	r3, fp
   11bfc:	mov	r6, #0
   11c00:	mov	r1, r5
   11c04:	mov	r0, r3
   11c08:	mov	r2, r7
   11c0c:	bl	10d50 <memcpy@plt>
   11c10:	add	r6, r6, #1
   11c14:	cmp	r8, r6
   11c18:	add	r5, r5, r7
   11c1c:	add	r3, r0, r4
   11c20:	bne	11c00 <pclose@plt+0xc64>
   11c24:	cmp	r4, #0
   11c28:	ble	11cc4 <pclose@plt+0xd28>
   11c2c:	lsl	r3, r4, #5
   11c30:	add	r4, r4, r3
   11c34:	add	r4, fp, r4
   11c38:	add	r3, fp, r3
   11c3c:	mov	r2, #0
   11c40:	ldrb	r1, [r3], #1
   11c44:	cmp	r1, #0
   11c48:	movne	r2, #1
   11c4c:	cmp	r4, r3
   11c50:	bne	11c40 <pclose@plt+0xca4>
   11c54:	cmp	r2, #0
   11c58:	beq	11cc4 <pclose@plt+0xd28>
   11c5c:	ldr	r4, [pc, #480]	; 11e44 <pclose@plt+0xea8>
   11c60:	mov	r2, #5
   11c64:	ldr	r1, [pc, #476]	; 11e48 <pclose@plt+0xeac>
   11c68:	mov	r0, #0
   11c6c:	ldr	r5, [r4]
   11c70:	bl	10d68 <dcgettext@plt>
   11c74:	ldr	r6, [pc, #464]	; 11e4c <pclose@plt+0xeb0>
   11c78:	mov	r1, #1
   11c7c:	ldr	r3, [r6]
   11c80:	mov	r2, r0
   11c84:	mov	r0, r5
   11c88:	bl	10ee8 <__fprintf_chk@plt>
   11c8c:	mov	r2, #5
   11c90:	ldr	r1, [pc, #440]	; 11e50 <pclose@plt+0xeb4>
   11c94:	mov	r0, #0
   11c98:	ldr	r5, [r4]
   11c9c:	bl	10d68 <dcgettext@plt>
   11ca0:	ldr	r3, [r6]
   11ca4:	mov	r1, #1
   11ca8:	mov	r2, r0
   11cac:	mov	r0, r5
   11cb0:	bl	10ee8 <__fprintf_chk@plt>
   11cb4:	ldr	r0, [r4]
   11cb8:	bl	10d14 <fflush@plt>
   11cbc:	mov	r0, #2
   11cc0:	bl	10d5c <sleep@plt>
   11cc4:	ldr	r3, [pc, #392]	; 11e54 <pclose@plt+0xeb8>
   11cc8:	ldr	r3, [r3]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11d44 <pclose@plt+0xda8>
   11cd4:	ldr	r3, [sp, #72]	; 0x48
   11cd8:	ldr	r0, [sp, #64]	; 0x40
   11cdc:	cmp	r3, #0
   11ce0:	sub	r0, r0, sl
   11ce4:	clz	r0, r0
   11ce8:	lsr	r0, r0, #5
   11cec:	moveq	r0, #0
   11cf0:	cmp	r0, #0
   11cf4:	bne	11d70 <pclose@plt+0xdd4>
   11cf8:	ldr	r3, [sp, #64]	; 0x40
   11cfc:	cmp	r3, sl
   11d00:	beq	11dbc <pclose@plt+0xe20>
   11d04:	ldr	r3, [sp, #72]	; 0x48
   11d08:	cmp	r3, #0
   11d0c:	beq	11da4 <pclose@plt+0xe08>
   11d10:	mov	r2, #5
   11d14:	ldr	r1, [pc, #316]	; 11e58 <pclose@plt+0xebc>
   11d18:	bl	10d68 <dcgettext@plt>
   11d1c:	ldr	r3, [sp, #72]	; 0x48
   11d20:	str	sl, [sp]
   11d24:	str	r3, [sp, #8]
   11d28:	ldr	r3, [sp, #64]	; 0x40
   11d2c:	mov	r2, r8
   11d30:	str	r3, [sp, #4]
   11d34:	mov	r3, r9
   11d38:	mov	r1, r0
   11d3c:	mov	r0, #1
   11d40:	bl	10ed0 <__printf_chk@plt>
   11d44:	ldr	r3, [sp, #64]	; 0x40
   11d48:	mov	r2, r8
   11d4c:	str	r3, [sp]
   11d50:	mov	r1, fp
   11d54:	mov	r3, r9
   11d58:	ldr	r0, [sp, #20]
   11d5c:	bl	154a8 <pclose@plt+0x450c>
   11d60:	cmp	r0, #0
   11d64:	bne	11de8 <pclose@plt+0xe4c>
   11d68:	add	sp, sp, #28
   11d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d70:	mov	r2, #5
   11d74:	ldr	r1, [pc, #224]	; 11e5c <pclose@plt+0xec0>
   11d78:	mov	r0, #0
   11d7c:	bl	10d68 <dcgettext@plt>
   11d80:	ldr	r3, [sp, #72]	; 0x48
   11d84:	str	r3, [sp, #4]
   11d88:	mov	r1, r0
   11d8c:	str	sl, [sp]
   11d90:	mov	r3, r9
   11d94:	mov	r2, r8
   11d98:	mov	r0, #1
   11d9c:	bl	10ed0 <__printf_chk@plt>
   11da0:	b	11d44 <pclose@plt+0xda8>
   11da4:	ldr	r0, [sp, #72]	; 0x48
   11da8:	mov	r2, #5
   11dac:	ldr	r1, [pc, #172]	; 11e60 <pclose@plt+0xec4>
   11db0:	bl	10d68 <dcgettext@plt>
   11db4:	ldr	r3, [sp, #64]	; 0x40
   11db8:	b	11d84 <pclose@plt+0xde8>
   11dbc:	mov	r2, #5
   11dc0:	ldr	r1, [pc, #156]	; 11e64 <pclose@plt+0xec8>
   11dc4:	bl	10d68 <dcgettext@plt>
   11dc8:	ldr	r3, [sp, #64]	; 0x40
   11dcc:	mov	r2, r8
   11dd0:	str	r3, [sp]
   11dd4:	mov	r3, r9
   11dd8:	mov	r1, r0
   11ddc:	mov	r0, #1
   11de0:	bl	10ed0 <__printf_chk@plt>
   11de4:	b	11d44 <pclose@plt+0xda8>
   11de8:	mov	r0, #71	; 0x47
   11dec:	bl	10e64 <exit@plt>
   11df0:	ldr	r3, [pc, #76]	; 11e44 <pclose@plt+0xea8>
   11df4:	mov	r2, #5
   11df8:	ldr	r1, [pc, #104]	; 11e68 <pclose@plt+0xecc>
   11dfc:	mov	r0, #0
   11e00:	ldr	r4, [r3]
   11e04:	bl	10d68 <dcgettext@plt>
   11e08:	mov	r3, r9
   11e0c:	mov	r2, r0
   11e10:	mov	r1, #1
   11e14:	mov	r0, r4
   11e18:	bl	10ee8 <__fprintf_chk@plt>
   11e1c:	mov	r0, #65	; 0x41
   11e20:	bl	10e64 <exit@plt>
   11e24:	ldr	r3, [pc, #24]	; 11e44 <pclose@plt+0xea8>
   11e28:	mov	r2, #5
   11e2c:	ldr	r1, [pc, #56]	; 11e6c <pclose@plt+0xed0>
   11e30:	mov	r0, #0
   11e34:	ldr	r4, [r3]
   11e38:	bl	10d68 <dcgettext@plt>
   11e3c:	mov	r3, sl
   11e40:	b	11e0c <pclose@plt+0xe70>
   11e44:	andeq	r8, r2, r8, lsr #2
   11e48:	andeq	r6, r1, r4, ror #19
   11e4c:	andeq	r8, r2, r0, asr r1
   11e50:	andeq	r6, r1, r8, lsl #20
   11e54:	andeq	r8, r2, r0, lsr r1
   11e58:	andeq	r6, r1, r0, ror sl
   11e5c:	andeq	r6, r1, r8, lsr #20
   11e60:	andeq	r6, r1, r0, lsr #21
   11e64:	andeq	r6, r1, r4, asr sl
   11e68:	andeq	r6, r1, ip, asr #19
   11e6c:			; <UNDEFINED> instruction: 0x000169b0
   11e70:	ldr	r3, [pc, #656]	; 12108 <pclose@plt+0x116c>
   11e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e78:	sub	sp, sp, #36	; 0x24
   11e7c:	ldr	r3, [r3]
   11e80:	cmp	r2, #0
   11e84:	str	r2, [sp]
   11e88:	str	r0, [sp, #8]
   11e8c:	str	r3, [sp, #28]
   11e90:	ble	120b0 <pclose@plt+0x1114>
   11e94:	add	r0, r2, r2, lsl #1
   11e98:	mov	r9, r1
   11e9c:	add	r0, r1, r0, lsl #2
   11ea0:	mov	sl, #0
   11ea4:	ldr	r3, [r1]
   11ea8:	cmp	r3, #0
   11eac:	beq	11ed4 <pclose@plt+0xf38>
   11eb0:	ldr	r2, [r3, #8]
   11eb4:	cmp	r2, #0
   11eb8:	beq	11ec8 <pclose@plt+0xf2c>
   11ebc:	ldr	r2, [r2]
   11ec0:	cmp	r2, #0
   11ec4:	addeq	sl, sl, #1
   11ec8:	ldr	r3, [r3]
   11ecc:	cmp	r3, #0
   11ed0:	bne	11eb0 <pclose@plt+0xf14>
   11ed4:	add	r1, r1, #12
   11ed8:	cmp	r0, r1
   11edc:	bne	11ea4 <pclose@plt+0xf08>
   11ee0:	lsl	r0, sl, #2
   11ee4:	bl	134b8 <pclose@plt+0x251c>
   11ee8:	mov	r8, #0
   11eec:	ldr	r6, [pc, #536]	; 1210c <pclose@plt+0x1170>
   11ef0:	ldr	r5, [pc, #536]	; 12110 <pclose@plt+0x1174>
   11ef4:	str	sl, [sp, #12]
   11ef8:	mov	r7, r8
   11efc:	mov	sl, r0
   11f00:	str	r0, [sp, #4]
   11f04:	ldr	r1, [r6, #4]
   11f08:	ldr	fp, [r9]
   11f0c:	cmp	r1, #0
   11f10:	bne	12078 <pclose@plt+0x10dc>
   11f14:	cmp	fp, #0
   11f18:	bne	11f44 <pclose@plt+0xfa8>
   11f1c:	b	11f9c <pclose@plt+0x1000>
   11f20:	ldr	r3, [r4]
   11f24:	cmp	r3, #0
   11f28:	beq	12008 <pclose@plt+0x106c>
   11f2c:	cmp	r1, #0
   11f30:	bne	1204c <pclose@plt+0x10b0>
   11f34:	ldr	fp, [fp]
   11f38:	mov	r1, #0
   11f3c:	cmp	fp, #0
   11f40:	beq	11f94 <pclose@plt+0xff8>
   11f44:	ldr	r4, [fp, #8]
   11f48:	cmp	r4, #0
   11f4c:	bne	11f20 <pclose@plt+0xf84>
   11f50:	cmp	r1, #0
   11f54:	beq	11f34 <pclose@plt+0xf98>
   11f58:	ldr	r1, [pc, #436]	; 12114 <pclose@plt+0x1178>
   11f5c:	mov	r0, #1
   11f60:	bl	10ed0 <__printf_chk@plt>
   11f64:	ldr	r1, [pc, #428]	; 12118 <pclose@plt+0x117c>
   11f68:	mov	r0, #1
   11f6c:	bl	10ed0 <__printf_chk@plt>
   11f70:	ldr	r1, [r6, #4]
   11f74:	cmp	r1, #0
   11f78:	ldr	fp, [fp]
   11f7c:	beq	11f3c <pclose@plt+0xfa0>
   11f80:	mov	r0, #44	; 0x2c
   11f84:	bl	10ec4 <putchar@plt>
   11f88:	cmp	fp, #0
   11f8c:	ldr	r1, [r6, #4]
   11f90:	bne	11f44 <pclose@plt+0xfa8>
   11f94:	cmp	r1, #0
   11f98:	bne	12040 <pclose@plt+0x10a4>
   11f9c:	ldr	r3, [sp]
   11fa0:	add	r7, r7, #1
   11fa4:	cmp	r3, r7
   11fa8:	add	r9, r9, #12
   11fac:	bne	11f04 <pclose@plt+0xf68>
   11fb0:	ldr	sl, [sp, #12]
   11fb4:	cmp	sl, r8
   11fb8:	bne	120d0 <pclose@plt+0x1134>
   11fbc:	ldr	r3, [r6]
   11fc0:	cmp	r3, #0
   11fc4:	bne	12090 <pclose@plt+0x10f4>
   11fc8:	ldr	r3, [sp, #4]
   11fcc:	ldr	r0, [sp, #8]
   11fd0:	add	r2, sp, #20
   11fd4:	mov	r1, #0
   11fd8:	strh	r8, [sp, #20]
   11fdc:	str	r3, [sp, #24]
   11fe0:	bl	14680 <pclose@plt+0x36e4>
   11fe4:	cmp	r0, #0
   11fe8:	bne	120c8 <pclose@plt+0x112c>
   11fec:	ldr	r3, [pc, #276]	; 12108 <pclose@plt+0x116c>
   11ff0:	ldr	r2, [sp, #28]
   11ff4:	ldr	r3, [r3]
   11ff8:	cmp	r2, r3
   11ffc:	bne	12104 <pclose@plt+0x1168>
   12000:	add	sp, sp, #36	; 0x24
   12004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12008:	lsl	r3, r8, #2
   1200c:	ldr	r2, [r4, #8]
   12010:	add	r0, sl, r3
   12014:	cmp	r1, #0
   12018:	strh	r2, [sl, r3]
   1201c:	add	r8, r8, #1
   12020:	strh	r7, [r0, #2]
   12024:	ldreq	fp, [fp]
   12028:	beq	11f3c <pclose@plt+0xfa0>
   1202c:	mov	r1, r5
   12030:	mov	r0, #1
   12034:	bl	10ed0 <__printf_chk@plt>
   12038:	ldr	r1, [r6, #4]
   1203c:	b	11f74 <pclose@plt+0xfd8>
   12040:	mov	r0, #10
   12044:	bl	10ec4 <putchar@plt>
   12048:	b	11f9c <pclose@plt+0x1000>
   1204c:	ldr	r1, [pc, #192]	; 12114 <pclose@plt+0x1178>
   12050:	mov	r0, #1
   12054:	bl	10ed0 <__printf_chk@plt>
   12058:	ldr	r2, [r4, #8]
   1205c:	mov	r1, r5
   12060:	mov	r0, #1
   12064:	bl	10ed0 <__printf_chk@plt>
   12068:	ldr	r4, [r4]
   1206c:	cmp	r4, #0
   12070:	bne	12058 <pclose@plt+0x10bc>
   12074:	b	11f64 <pclose@plt+0xfc8>
   12078:	ldr	r1, [pc, #156]	; 1211c <pclose@plt+0x1180>
   1207c:	mov	r2, r7
   12080:	mov	r0, #1
   12084:	bl	10ed0 <__printf_chk@plt>
   12088:	ldr	r1, [r6, #4]
   1208c:	b	11f3c <pclose@plt+0xfa0>
   12090:	mov	r2, #5
   12094:	ldr	r1, [pc, #132]	; 12120 <pclose@plt+0x1184>
   12098:	mov	r0, #0
   1209c:	bl	10d68 <dcgettext@plt>
   120a0:	mov	r1, r0
   120a4:	mov	r0, #1
   120a8:	bl	10ed0 <__printf_chk@plt>
   120ac:	b	11fc8 <pclose@plt+0x102c>
   120b0:	mov	r0, #0
   120b4:	bl	134b8 <pclose@plt+0x251c>
   120b8:	mov	r8, #0
   120bc:	ldr	r6, [pc, #72]	; 1210c <pclose@plt+0x1170>
   120c0:	str	r0, [sp, #4]
   120c4:	b	11fbc <pclose@plt+0x1020>
   120c8:	mov	r0, #71	; 0x47
   120cc:	bl	10e64 <exit@plt>
   120d0:	mov	r2, #5
   120d4:	ldr	r1, [pc, #72]	; 12124 <pclose@plt+0x1188>
   120d8:	mov	r0, #0
   120dc:	bl	10d68 <dcgettext@plt>
   120e0:	ldr	ip, [pc, #64]	; 12128 <pclose@plt+0x118c>
   120e4:	ldr	r3, [pc, #64]	; 1212c <pclose@plt+0x1190>
   120e8:	mov	r1, #1
   120ec:	ldr	r3, [r3]
   120f0:	mov	r2, r0
   120f4:	ldr	r0, [ip]
   120f8:	bl	10ee8 <__fprintf_chk@plt>
   120fc:	mov	r0, #70	; 0x46
   12100:	bl	10e64 <exit@plt>
   12104:	bl	10d80 <__stack_chk_fail@plt>
   12108:	andeq	r7, r2, r8, lsl #30
   1210c:	andeq	r8, r2, r0, lsr r1
   12110:	ldrdeq	r6, [r1], -r0
   12114:	andeq	r6, r1, ip, lsl fp
   12118:	ldrdeq	r6, [r1], -r8
   1211c:	andeq	r6, r1, r4, asr #21
   12120:	strdeq	r6, [r1], -r8
   12124:	ldrdeq	r6, [r1], -ip
   12128:	andeq	r8, r2, r8, lsr #2
   1212c:	andeq	r8, r2, r0, asr r1
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	sub	sp, sp, #5248	; 0x1480
   12138:	sub	sp, sp, #4
   1213c:	cmp	r2, #1
   12140:	str	r2, [sp, #48]	; 0x30
   12144:	ldr	r2, [pc, #2448]	; 12adc <pclose@plt+0x1b40>
   12148:	mov	r6, r3
   1214c:	add	r3, sp, #5184	; 0x1440
   12150:	ldr	r2, [r2]
   12154:	add	r3, r3, #60	; 0x3c
   12158:	str	r0, [sp, #60]	; 0x3c
   1215c:	str	r2, [r3]
   12160:	beq	12438 <pclose@plt+0x149c>
   12164:	ldr	r3, [sp, #48]	; 0x30
   12168:	add	r4, sp, #1152	; 0x480
   1216c:	cmp	r3, #0
   12170:	mov	r3, #0
   12174:	str	r3, [r4, #-1060]	; 0xfffffbdc
   12178:	ble	12390 <pclose@plt+0x13f4>
   1217c:	add	r2, sp, #5248	; 0x1480
   12180:	add	r2, r2, #48	; 0x30
   12184:	mov	sl, r3
   12188:	ldr	r2, [r2]
   1218c:	add	r5, sp, #128	; 0x80
   12190:	cmp	r2, r3
   12194:	sub	r3, r1, #4
   12198:	str	r3, [sp, #32]
   1219c:	subeq	r3, r5, #36	; 0x24
   121a0:	movne	r3, #0
   121a4:	str	r3, [sp, #52]	; 0x34
   121a8:	sub	r3, r5, #56	; 0x38
   121ac:	str	r3, [sp, #56]	; 0x38
   121b0:	add	r3, sp, #1120	; 0x460
   121b4:	str	sl, [sp, #40]	; 0x28
   121b8:	str	sl, [sp, #36]	; 0x24
   121bc:	mov	fp, sl
   121c0:	mov	r7, sl
   121c4:	mov	r8, sl
   121c8:	mov	r6, sl
   121cc:	str	r3, [sp, #28]
   121d0:	b	12224 <pclose@plt+0x1288>
   121d4:	cmp	r3, r2
   121d8:	bne	12a64 <pclose@plt+0x1ac8>
   121dc:	ldr	r2, [r4, #-1072]	; 0xfffffbd0
   121e0:	ldr	r3, [r4, #-1068]	; 0xfffffbd4
   121e4:	add	r7, r7, r2
   121e8:	mov	r0, r8
   121ec:	mov	r1, r7
   121f0:	add	fp, fp, r3
   121f4:	bl	134cc <pclose@plt+0x2530>
   121f8:	ldr	r2, [r4, #-1072]	; 0xfffffbd0
   121fc:	ldr	r1, [r4, #-1080]	; 0xfffffbc8
   12200:	add	sl, sl, #1
   12204:	mov	r8, r0
   12208:	sub	r0, r7, r2
   1220c:	add	r0, r8, r0
   12210:	bl	10d50 <memcpy@plt>
   12214:	ldr	r3, [sp, #48]	; 0x30
   12218:	str	r9, [sp, #36]	; 0x24
   1221c:	cmp	r3, sl
   12220:	beq	123a0 <pclose@plt+0x1404>
   12224:	ldr	r3, [sp, #32]
   12228:	ldr	r2, [pc, #2224]	; 12ae0 <pclose@plt+0x1b44>
   1222c:	ldr	r9, [r3, #4]!
   12230:	add	r1, r2, #24
   12234:	str	r3, [sp, #32]
   12238:	mov	r0, r9
   1223c:	ldr	r3, [sp, #28]
   12240:	bl	15dd4 <pclose@plt+0x4e38>
   12244:	cmp	r0, #0
   12248:	bne	1230c <pclose@plt+0x1370>
   1224c:	ldr	ip, [sp, #52]	; 0x34
   12250:	sub	r1, r5, #44	; 0x2c
   12254:	sub	r2, r5, #40	; 0x28
   12258:	sub	r3, r5, #48	; 0x30
   1225c:	ldr	r0, [r4, #-32]	; 0xffffffe0
   12260:	str	r1, [sp, #8]
   12264:	str	r2, [sp, #4]
   12268:	str	r3, [sp]
   1226c:	str	ip, [sp, #16]
   12270:	str	fp, [sp, #12]
   12274:	ldr	r3, [sp, #56]	; 0x38
   12278:	sub	r2, r5, #52	; 0x34
   1227c:	sub	r1, r5, #60	; 0x3c
   12280:	str	r6, [r4, #-1080]	; 0xfffffbc8
   12284:	str	r6, [r4, #-1084]	; 0xfffffbc4
   12288:	str	r6, [r4, #-1072]	; 0xfffffbd0
   1228c:	str	r6, [r4, #-1076]	; 0xfffffbcc
   12290:	str	r6, [r4, #-1068]	; 0xfffffbd4
   12294:	bl	13680 <pclose@plt+0x26e4>
   12298:	subs	r3, r0, #0
   1229c:	str	r3, [sp, #44]	; 0x2c
   122a0:	bne	12944 <pclose@plt+0x19a8>
   122a4:	ldr	r0, [sp, #28]
   122a8:	bl	15d98 <pclose@plt+0x4dfc>
   122ac:	ldr	r2, [r4, #-1064]	; 0xfffffbd8
   122b0:	ldr	r1, [r4, #-1068]	; 0xfffffbd4
   122b4:	adds	r3, r2, #7
   122b8:	addmi	r3, r2, #14
   122bc:	ldr	r0, [r4, #-1072]	; 0xfffffbd0
   122c0:	asr	r3, r3, #3
   122c4:	mul	r1, r1, r3
   122c8:	bl	16178 <pclose@plt+0x51dc>
   122cc:	ldr	r3, [pc, #2064]	; 12ae4 <pclose@plt+0x1b48>
   122d0:	ldr	r3, [r3]
   122d4:	cmp	r3, #0
   122d8:	mov	r9, r0
   122dc:	bne	1235c <pclose@plt+0x13c0>
   122e0:	ldr	r3, [sp, #36]	; 0x24
   122e4:	cmp	r3, #0
   122e8:	beq	122f4 <pclose@plt+0x1358>
   122ec:	cmp	r9, r3
   122f0:	bne	12a34 <pclose@plt+0x1a98>
   122f4:	ldr	r2, [sp, #40]	; 0x28
   122f8:	ldr	r3, [r4, #-1064]	; 0xfffffbd8
   122fc:	cmp	r2, #0
   12300:	bne	121d4 <pclose@plt+0x1238>
   12304:	str	r3, [sp, #40]	; 0x28
   12308:	b	121dc <pclose@plt+0x1240>
   1230c:	ldr	r2, [pc, #2004]	; 12ae8 <pclose@plt+0x1b4c>
   12310:	ldr	r3, [sp, #28]
   12314:	add	r1, r2, #8
   12318:	mov	r0, r9
   1231c:	bl	15dd4 <pclose@plt+0x4e38>
   12320:	cmp	r0, #0
   12324:	beq	1224c <pclose@plt+0x12b0>
   12328:	ldr	r3, [pc, #1980]	; 12aec <pclose@plt+0x1b50>
   1232c:	mov	r2, #5
   12330:	ldr	r1, [pc, #1976]	; 12af0 <pclose@plt+0x1b54>
   12334:	mov	r0, #0
   12338:	ldr	r4, [r3]
   1233c:	bl	10d68 <dcgettext@plt>
   12340:	mov	r3, r9
   12344:	mov	r2, r0
   12348:	mov	r1, #1
   1234c:	mov	r0, r4
   12350:	bl	10ee8 <__fprintf_chk@plt>
   12354:	mov	r0, #66	; 0x42
   12358:	bl	10e64 <exit@plt>
   1235c:	ldr	r0, [sp, #44]	; 0x2c
   12360:	mov	r2, #5
   12364:	ldr	r1, [pc, #1928]	; 12af4 <pclose@plt+0x1b58>
   12368:	bl	10d68 <dcgettext@plt>
   1236c:	sub	r1, r4, #24
   12370:	ldr	r3, [r4, #-1064]	; 0xfffffbd8
   12374:	ldr	r2, [r4, #-1068]	; 0xfffffbd4
   12378:	str	r1, [sp, #4]
   1237c:	str	r9, [sp]
   12380:	mov	r1, r0
   12384:	mov	r0, #1
   12388:	bl	10ed0 <__printf_chk@plt>
   1238c:	b	122e0 <pclose@plt+0x1344>
   12390:	mov	r8, r3
   12394:	mov	r9, r3
   12398:	mov	fp, r3
   1239c:	str	r3, [sp, #40]	; 0x28
   123a0:	add	r3, sp, #5248	; 0x1480
   123a4:	add	r3, r3, #40	; 0x28
   123a8:	str	fp, [sp, #4]
   123ac:	ldr	r3, [r3]
   123b0:	mov	r1, #0
   123b4:	ldr	r2, [sp, #40]	; 0x28
   123b8:	str	r3, [sp]
   123bc:	str	r1, [sp, #8]
   123c0:	mov	r3, r9
   123c4:	mov	r1, r8
   123c8:	ldr	r0, [sp, #60]	; 0x3c
   123cc:	bl	11b70 <pclose@plt+0xbd4>
   123d0:	mov	r0, r8
   123d4:	bl	10d20 <free@plt>
   123d8:	add	r2, sp, #5248	; 0x1480
   123dc:	add	r2, r2, #48	; 0x30
   123e0:	ldr	r1, [r4, #-1060]	; 0xfffffbdc
   123e4:	ldr	r2, [r2]
   123e8:	adds	r3, r1, #0
   123ec:	movne	r3, #1
   123f0:	cmp	r2, #0
   123f4:	movne	r3, #0
   123f8:	cmp	r3, #0
   123fc:	bne	12428 <pclose@plt+0x148c>
   12400:	add	r3, sp, #5184	; 0x1440
   12404:	add	r3, r3, #60	; 0x3c
   12408:	ldr	r2, [r3]
   1240c:	ldr	r3, [pc, #1736]	; 12adc <pclose@plt+0x1b40>
   12410:	ldr	r3, [r3]
   12414:	cmp	r2, r3
   12418:	bne	12a98 <pclose@plt+0x1afc>
   1241c:	add	sp, sp, #5248	; 0x1480
   12420:	add	sp, sp, #4
   12424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12428:	mov	r2, fp
   1242c:	ldr	r0, [sp, #60]	; 0x3c
   12430:	bl	11e70 <pclose@plt+0xed4>
   12434:	b	12400 <pclose@plt+0x1464>
   12438:	ldr	r5, [r1]
   1243c:	ldrb	r7, [r5]
   12440:	cmp	r7, #0
   12444:	bne	126a4 <pclose@plt+0x1708>
   12448:	sub	r3, r6, #1
   1244c:	cmp	r3, #31
   12450:	bls	127fc <pclose@plt+0x1860>
   12454:	ldr	r2, [pc, #1668]	; 12ae0 <pclose@plt+0x1b44>
   12458:	add	r4, sp, #1152	; 0x480
   1245c:	sub	r3, r4, #32
   12460:	add	r1, r2, #24
   12464:	ldr	r0, [pc, #1676]	; 12af8 <pclose@plt+0x1b5c>
   12468:	str	r3, [sp, #28]
   1246c:	bl	15dd4 <pclose@plt+0x4e38>
   12470:	subs	r6, r0, #0
   12474:	bne	1276c <pclose@plt+0x17d0>
   12478:	ldr	r5, [pc, #1656]	; 12af8 <pclose@plt+0x1b5c>
   1247c:	ldr	r3, [pc, #1632]	; 12ae4 <pclose@plt+0x1b48>
   12480:	ldr	r3, [r3]
   12484:	cmp	r3, #1
   12488:	ble	124ac <pclose@plt+0x1510>
   1248c:	mov	r2, #5
   12490:	ldr	r1, [pc, #1636]	; 12afc <pclose@plt+0x1b60>
   12494:	mov	r0, #0
   12498:	bl	10d68 <dcgettext@plt>
   1249c:	mov	r2, r5
   124a0:	mov	r1, r0
   124a4:	mov	r0, #1
   124a8:	bl	10ed0 <__printf_chk@plt>
   124ac:	add	r3, sp, #5248	; 0x1480
   124b0:	add	r3, r3, #48	; 0x30
   124b4:	add	r5, sp, #128	; 0x80
   124b8:	ldr	r3, [r3]
   124bc:	mov	r2, #8
   124c0:	cmp	r3, #0
   124c4:	sub	ip, r5, #40	; 0x28
   124c8:	mov	r3, #0
   124cc:	sub	r1, r5, #60	; 0x3c
   124d0:	str	r3, [r4, #-1076]	; 0xfffffbcc
   124d4:	str	r3, [r4, #-1080]	; 0xfffffbc8
   124d8:	str	r3, [r4, #-1064]	; 0xfffffbd8
   124dc:	str	r3, [r4, #-1068]	; 0xfffffbd4
   124e0:	str	r3, [r4, #-1072]	; 0xfffffbd0
   124e4:	str	r3, [r4, #-1060]	; 0xfffffbdc
   124e8:	str	r2, [r4, #-1084]	; 0xfffffbc4
   124ec:	subeq	r3, r5, #36	; 0x24
   124f0:	mov	r7, #0
   124f4:	sub	r2, r5, #44	; 0x2c
   124f8:	ldr	r0, [r4, #-32]	; 0xffffffe0
   124fc:	str	r3, [sp, #16]
   12500:	stmib	sp, {r1, ip}
   12504:	str	r2, [sp]
   12508:	str	r7, [sp, #12]
   1250c:	sub	r3, r5, #52	; 0x34
   12510:	sub	r2, r5, #48	; 0x30
   12514:	sub	r1, r5, #56	; 0x38
   12518:	bl	13680 <pclose@plt+0x26e4>
   1251c:	cmp	r0, r7
   12520:	ldr	r0, [sp, #28]
   12524:	bne	125e8 <pclose@plt+0x164c>
   12528:	bl	15d98 <pclose@plt+0x4dfc>
   1252c:	ldr	r5, [r4, #-1084]	; 0xfffffbc4
   12530:	ldr	r6, [r4, #-1064]	; 0xfffffbd8
   12534:	adds	r1, r5, #7
   12538:	addmi	r1, r5, #14
   1253c:	ldr	r0, [r4, #-1068]	; 0xfffffbd4
   12540:	asr	r1, r1, #3
   12544:	mul	r1, r6, r1
   12548:	bl	16178 <pclose@plt+0x51dc>
   1254c:	add	ip, sp, #5248	; 0x1480
   12550:	add	ip, ip, #40	; 0x28
   12554:	ldr	r1, [r4, #-1076]	; 0xfffffbcc
   12558:	str	r6, [sp, #4]
   1255c:	ldr	ip, [ip]
   12560:	sub	r3, r4, #24
   12564:	str	r3, [sp, #8]
   12568:	mov	r2, r5
   1256c:	str	ip, [sp]
   12570:	mov	r3, r0
   12574:	ldr	r0, [sp, #60]	; 0x3c
   12578:	bl	11b70 <pclose@plt+0xbd4>
   1257c:	ldr	r1, [r4, #-1060]	; 0xfffffbdc
   12580:	cmp	r1, r7
   12584:	beq	125b4 <pclose@plt+0x1618>
   12588:	add	r3, sp, #5248	; 0x1480
   1258c:	add	r3, r3, #48	; 0x30
   12590:	ldr	r3, [r3]
   12594:	cmp	r3, #0
   12598:	bne	12400 <pclose@plt+0x1464>
   1259c:	ldr	r2, [r4, #-1064]	; 0xfffffbd8
   125a0:	ldr	r0, [sp, #60]	; 0x3c
   125a4:	bl	11e70 <pclose@plt+0xed4>
   125a8:	ldr	r3, [r4, #-1060]	; 0xfffffbdc
   125ac:	cmp	r3, #0
   125b0:	bne	12400 <pclose@plt+0x1464>
   125b4:	add	r3, sp, #5248	; 0x1480
   125b8:	add	r3, r3, #48	; 0x30
   125bc:	ldr	r2, [sp, #48]	; 0x30
   125c0:	ldr	r3, [r3]
   125c4:	cmp	r3, #0
   125c8:	andeq	r3, r2, #1
   125cc:	movne	r3, #0
   125d0:	cmp	r3, #0
   125d4:	beq	12400 <pclose@plt+0x1464>
   125d8:	ldr	r0, [sp, #60]	; 0x3c
   125dc:	ldr	r1, [pc, #1308]	; 12b00 <pclose@plt+0x1b64>
   125e0:	bl	1490c <pclose@plt+0x3970>
   125e4:	b	12400 <pclose@plt+0x1464>
   125e8:	bl	15d98 <pclose@plt+0x4dfc>
   125ec:	ldr	r9, [r4, #-1072]	; 0xfffffbd0
   125f0:	cmp	r9, #23
   125f4:	ble	126ec <pclose@plt+0x1750>
   125f8:	ldr	r8, [r4, #-1080]	; 0xfffffbc8
   125fc:	mov	r2, #24
   12600:	mov	r0, r8
   12604:	ldr	r1, [pc, #1272]	; 12b04 <pclose@plt+0x1b68>
   12608:	bl	10f60 <strncmp@plt>
   1260c:	subs	r2, r0, #0
   12610:	bne	128a0 <pclose@plt+0x1904>
   12614:	add	ip, r8, r9
   12618:	add	r8, r8, #24
   1261c:	cmp	ip, r8
   12620:	bls	12900 <pclose@plt+0x1964>
   12624:	sub	lr, r5, #36	; 0x24
   12628:	mov	r7, r2
   1262c:	cmp	r8, ip
   12630:	bcs	12898 <pclose@plt+0x18fc>
   12634:	ldrb	r3, [r8]
   12638:	cmp	r3, #10
   1263c:	moveq	r1, r8
   12640:	beq	12670 <pclose@plt+0x16d4>
   12644:	add	r3, r8, #1
   12648:	b	1265c <pclose@plt+0x16c0>
   1264c:	ldrb	r0, [r3]
   12650:	add	r3, r3, #1
   12654:	cmp	r0, #10
   12658:	beq	12670 <pclose@plt+0x16d4>
   1265c:	cmp	r3, ip
   12660:	mov	r1, r3
   12664:	bne	1264c <pclose@plt+0x16b0>
   12668:	cmp	r1, ip
   1266c:	beq	12acc <pclose@plt+0x1b30>
   12670:	cmp	r2, #256	; 0x100
   12674:	strb	r7, [r1]
   12678:	add	r1, r1, #1
   1267c:	beq	12a74 <pclose@plt+0x1ad8>
   12680:	ldr	ip, [r4, #-1080]	; 0xfffffbc8
   12684:	ldr	r3, [r4, #-1072]	; 0xfffffbd0
   12688:	add	r2, r2, #1
   1268c:	add	ip, ip, r3
   12690:	cmp	ip, r1
   12694:	str	r8, [lr, #4]!
   12698:	bls	12900 <pclose@plt+0x1964>
   1269c:	mov	r8, r1
   126a0:	b	1262c <pclose@plt+0x1690>
   126a4:	ldr	r2, [pc, #1076]	; 12ae0 <pclose@plt+0x1b44>
   126a8:	add	r4, sp, #1152	; 0x480
   126ac:	sub	r3, r4, #32
   126b0:	add	r1, r2, #24
   126b4:	mov	r0, r5
   126b8:	str	r3, [sp, #28]
   126bc:	bl	15dd4 <pclose@plt+0x4e38>
   126c0:	subs	r3, r0, #0
   126c4:	str	r3, [sp, #48]	; 0x30
   126c8:	beq	1247c <pclose@plt+0x14e0>
   126cc:	ldr	r3, [pc, #1048]	; 12aec <pclose@plt+0x1b50>
   126d0:	mov	r2, #5
   126d4:	ldr	r1, [pc, #1044]	; 12af0 <pclose@plt+0x1b54>
   126d8:	mov	r0, #0
   126dc:	ldr	r4, [r3]
   126e0:	bl	10d68 <dcgettext@plt>
   126e4:	mov	r3, r5
   126e8:	b	12344 <pclose@plt+0x13a8>
   126ec:	rsbs	r3, r9, #0
   126f0:	uxtb	r1, r9
   126f4:	uxtb	r3, r3
   126f8:	rsbpl	r1, r3, #0
   126fc:	cmp	r1, #0
   12700:	sub	r0, r1, #40	; 0x28
   12704:	clz	r0, r0
   12708:	lsr	r0, r0, #5
   1270c:	moveq	r0, #1
   12710:	cmp	r0, #0
   12714:	beq	12a84 <pclose@plt+0x1ae8>
   12718:	cmp	r9, #0
   1271c:	add	ip, r9, #255	; 0xff
   12720:	mov	r2, #8
   12724:	movge	ip, r9
   12728:	ldr	r8, [r4, #-1080]	; 0xfffffbc8
   1272c:	asr	r6, ip, r2
   12730:	mov	r3, #256	; 0x100
   12734:	str	r3, [r4, #-1064]	; 0xfffffbd8
   12738:	str	r2, [r4, #-1084]	; 0xfffffbc4
   1273c:	sub	r4, r4, #24
   12740:	add	r1, r8, r1
   12744:	stmib	sp, {r3, r4}
   12748:	add	r3, sp, #5248	; 0x1480
   1274c:	add	r3, r3, #40	; 0x28
   12750:	ldr	r0, [sp, #60]	; 0x3c
   12754:	ldr	r3, [r3]
   12758:	mov	r2, #8
   1275c:	str	r3, [sp]
   12760:	mov	r3, r6
   12764:	bl	11b70 <pclose@plt+0xbd4>
   12768:	b	12400 <pclose@plt+0x1464>
   1276c:	ldr	r2, [pc, #876]	; 12ae0 <pclose@plt+0x1b44>
   12770:	ldr	r3, [sp, #28]
   12774:	add	r1, r2, #24
   12778:	ldr	r0, [pc, #904]	; 12b08 <pclose@plt+0x1b6c>
   1277c:	bl	15dd4 <pclose@plt+0x4e38>
   12780:	subs	r6, r0, #0
   12784:	ldreq	r5, [pc, #892]	; 12b08 <pclose@plt+0x1b6c>
   12788:	beq	1247c <pclose@plt+0x14e0>
   1278c:	ldr	r2, [pc, #844]	; 12ae0 <pclose@plt+0x1b44>
   12790:	ldr	r3, [sp, #28]
   12794:	add	r1, r2, #24
   12798:	ldr	r0, [pc, #876]	; 12b0c <pclose@plt+0x1b70>
   1279c:	bl	15dd4 <pclose@plt+0x4e38>
   127a0:	subs	r6, r0, #0
   127a4:	ldreq	r5, [pc, #864]	; 12b0c <pclose@plt+0x1b70>
   127a8:	beq	1247c <pclose@plt+0x14e0>
   127ac:	ldr	r2, [pc, #812]	; 12ae0 <pclose@plt+0x1b44>
   127b0:	ldr	r3, [sp, #28]
   127b4:	add	r1, r2, #24
   127b8:	ldr	r0, [pc, #848]	; 12b10 <pclose@plt+0x1b74>
   127bc:	bl	15dd4 <pclose@plt+0x4e38>
   127c0:	subs	r6, r0, #0
   127c4:	ldreq	r5, [pc, #836]	; 12b10 <pclose@plt+0x1b74>
   127c8:	beq	1247c <pclose@plt+0x14e0>
   127cc:	ldr	r3, [pc, #792]	; 12aec <pclose@plt+0x1b50>
   127d0:	mov	r2, #5
   127d4:	ldr	r1, [pc, #824]	; 12b14 <pclose@plt+0x1b78>
   127d8:	mov	r0, r7
   127dc:	ldr	r4, [r3]
   127e0:	bl	10d68 <dcgettext@plt>
   127e4:	ldr	r1, [sp, #48]	; 0x30
   127e8:	mov	r2, r0
   127ec:	mov	r0, r4
   127f0:	bl	10ee8 <__fprintf_chk@plt>
   127f4:	mov	r0, #66	; 0x42
   127f8:	bl	10e64 <exit@plt>
   127fc:	add	r0, sp, #5184	; 0x1440
   12800:	ldr	r3, [pc, #784]	; 12b18 <pclose@plt+0x1b7c>
   12804:	mov	r2, #20
   12808:	ldr	r1, [sp, #48]	; 0x30
   1280c:	str	r6, [sp]
   12810:	add	r0, r0, #40	; 0x28
   12814:	bl	10ea0 <__sprintf_chk@plt>
   12818:	ldr	r2, [pc, #704]	; 12ae0 <pclose@plt+0x1b44>
   1281c:	add	r4, sp, #1152	; 0x480
   12820:	add	r0, sp, #5184	; 0x1440
   12824:	sub	r3, r4, #32
   12828:	add	r0, r0, #40	; 0x28
   1282c:	add	r1, r2, #24
   12830:	str	r3, [sp, #28]
   12834:	bl	15dd4 <pclose@plt+0x4e38>
   12838:	cmp	r0, #0
   1283c:	addeq	r5, sp, #5184	; 0x1440
   12840:	addeq	r5, r5, #40	; 0x28
   12844:	beq	1247c <pclose@plt+0x14e0>
   12848:	ldr	r2, [pc, #656]	; 12ae0 <pclose@plt+0x1b44>
   1284c:	ldr	r3, [sp, #28]
   12850:	add	r1, r2, #24
   12854:	ldr	r0, [pc, #668]	; 12af8 <pclose@plt+0x1b5c>
   12858:	bl	15dd4 <pclose@plt+0x4e38>
   1285c:	cmp	r0, #0
   12860:	beq	12478 <pclose@plt+0x14dc>
   12864:	ldr	r3, [pc, #640]	; 12aec <pclose@plt+0x1b50>
   12868:	mov	r2, #5
   1286c:	ldr	r1, [pc, #680]	; 12b1c <pclose@plt+0x1b80>
   12870:	mov	r0, r7
   12874:	ldr	r4, [r3]
   12878:	bl	10d68 <dcgettext@plt>
   1287c:	ldr	r1, [sp, #48]	; 0x30
   12880:	ldr	r3, [pc, #624]	; 12af8 <pclose@plt+0x1b5c>
   12884:	mov	r2, r0
   12888:	mov	r0, r4
   1288c:	bl	10ee8 <__fprintf_chk@plt>
   12890:	mov	r0, #66	; 0x42
   12894:	bl	10e64 <exit@plt>
   12898:	mov	r1, r8
   1289c:	b	12668 <pclose@plt+0x16cc>
   128a0:	ldr	r3, [pc, #632]	; 12b20 <pclose@plt+0x1b84>
   128a4:	cmp	r9, r3
   128a8:	bne	12980 <pclose@plt+0x19e4>
   128ac:	cmp	r6, #0
   128b0:	beq	12a9c <pclose@plt+0x1b00>
   128b4:	cmp	r6, #14
   128b8:	beq	12a14 <pclose@plt+0x1a78>
   128bc:	cmp	r6, #16
   128c0:	beq	129fc <pclose@plt+0x1a60>
   128c4:	cmp	r6, #8
   128c8:	beq	12a2c <pclose@plt+0x1a90>
   128cc:	ldr	r3, [pc, #536]	; 12aec <pclose@plt+0x1b50>
   128d0:	mov	r2, #5
   128d4:	ldr	r1, [pc, #584]	; 12b24 <pclose@plt+0x1b88>
   128d8:	mov	r0, r7
   128dc:	ldr	r4, [r3]
   128e0:	bl	10d68 <dcgettext@plt>
   128e4:	mov	r3, r6
   128e8:	mov	r1, #1
   128ec:	mov	r2, r0
   128f0:	mov	r0, r4
   128f4:	bl	10ee8 <__fprintf_chk@plt>
   128f8:	mov	r0, #64	; 0x40
   128fc:	bl	10e64 <exit@plt>
   12900:	add	r3, sp, #5248	; 0x1480
   12904:	add	r3, r3, #48	; 0x30
   12908:	sub	r1, r5, #32
   1290c:	ldr	r3, [r3]
   12910:	ldr	r0, [sp, #60]	; 0x3c
   12914:	str	r3, [sp, #8]
   12918:	add	r3, sp, #5248	; 0x1480
   1291c:	add	r3, r3, #44	; 0x2c
   12920:	ldr	r3, [r3]
   12924:	str	r3, [sp, #4]
   12928:	add	r3, sp, #5248	; 0x1480
   1292c:	add	r3, r3, #40	; 0x28
   12930:	ldr	r3, [r3]
   12934:	str	r3, [sp]
   12938:	mov	r3, r6
   1293c:	bl	12130 <pclose@plt+0x1194>
   12940:	b	12400 <pclose@plt+0x1464>
   12944:	ldr	r3, [pc, #416]	; 12aec <pclose@plt+0x1b50>
   12948:	mov	r2, #5
   1294c:	ldr	r1, [pc, #468]	; 12b28 <pclose@plt+0x1b8c>
   12950:	mov	r0, #0
   12954:	ldr	r5, [r3]
   12958:	bl	10d68 <dcgettext@plt>
   1295c:	sub	r3, r4, #24
   12960:	mov	r1, #1
   12964:	mov	r2, r0
   12968:	mov	r0, r5
   1296c:	bl	10ee8 <__fprintf_chk@plt>
   12970:	ldr	r0, [sp, #28]
   12974:	bl	15d98 <pclose@plt+0x4dfc>
   12978:	mov	r0, #65	; 0x41
   1297c:	bl	10e64 <exit@plt>
   12980:	cmp	r9, #32768	; 0x8000
   12984:	bne	126ec <pclose@plt+0x1750>
   12988:	ldr	r3, [pc, #348]	; 12aec <pclose@plt+0x1b50>
   1298c:	mov	r2, #5
   12990:	ldr	r1, [pc, #404]	; 12b2c <pclose@plt+0x1b90>
   12994:	mov	r0, r7
   12998:	ldr	r5, [r3]
   1299c:	bl	10d68 <dcgettext@plt>
   129a0:	mov	r1, #1
   129a4:	mov	r2, r0
   129a8:	mov	r0, r5
   129ac:	bl	10ee8 <__fprintf_chk@plt>
   129b0:	add	r3, sp, #5248	; 0x1480
   129b4:	add	r3, r3, #40	; 0x28
   129b8:	mov	r1, #16384	; 0x4000
   129bc:	ldr	r3, [r3]
   129c0:	mov	r2, #8
   129c4:	cmp	r3, #0
   129c8:	mov	r3, #512	; 0x200
   129cc:	str	r1, [r4, #-1072]	; 0xfffffbd0
   129d0:	str	r3, [r4, #-1064]	; 0xfffffbd8
   129d4:	str	r2, [r4, #-1084]	; 0xfffffbc4
   129d8:	bne	12a1c <pclose@plt+0x1a80>
   129dc:	add	r2, sp, #5248	; 0x1480
   129e0:	add	r2, r2, #40	; 0x28
   129e4:	mov	r0, #16
   129e8:	ldr	r1, [r2]
   129ec:	ldr	r8, [r4, #-1080]	; 0xfffffbc8
   129f0:	mov	r6, #32
   129f4:	str	r0, [r2]
   129f8:	b	1273c <pclose@plt+0x17a0>
   129fc:	mov	r1, #40	; 0x28
   12a00:	mov	r3, #256	; 0x100
   12a04:	mov	r2, #8
   12a08:	str	r3, [r4, #-1064]	; 0xfffffbd8
   12a0c:	str	r2, [r4, #-1084]	; 0xfffffbc4
   12a10:	b	1273c <pclose@plt+0x17a0>
   12a14:	ldr	r1, [pc, #276]	; 12b30 <pclose@plt+0x1b94>
   12a18:	b	12a00 <pclose@plt+0x1a64>
   12a1c:	ldr	r8, [r4, #-1080]	; 0xfffffbc8
   12a20:	mov	r1, r7
   12a24:	mov	r6, #32
   12a28:	b	1273c <pclose@plt+0x17a0>
   12a2c:	ldr	r1, [pc, #256]	; 12b34 <pclose@plt+0x1b98>
   12a30:	b	12a00 <pclose@plt+0x1a64>
   12a34:	ldr	r3, [pc, #176]	; 12aec <pclose@plt+0x1b50>
   12a38:	ldr	r1, [pc, #248]	; 12b38 <pclose@plt+0x1b9c>
   12a3c:	mov	r2, #5
   12a40:	ldr	r4, [r3]
   12a44:	mov	r0, #0
   12a48:	bl	10d68 <dcgettext@plt>
   12a4c:	mov	r1, #1
   12a50:	mov	r2, r0
   12a54:	mov	r0, r4
   12a58:	bl	10ee8 <__fprintf_chk@plt>
   12a5c:	mov	r0, #65	; 0x41
   12a60:	bl	10e64 <exit@plt>
   12a64:	ldr	r3, [pc, #128]	; 12aec <pclose@plt+0x1b50>
   12a68:	mov	r2, #5
   12a6c:	ldr	r1, [pc, #200]	; 12b3c <pclose@plt+0x1ba0>
   12a70:	b	12a40 <pclose@plt+0x1aa4>
   12a74:	ldr	r3, [pc, #112]	; 12aec <pclose@plt+0x1b50>
   12a78:	mov	r2, #5
   12a7c:	ldr	r1, [pc, #188]	; 12b40 <pclose@plt+0x1ba4>
   12a80:	b	12a40 <pclose@plt+0x1aa4>
   12a84:	ldr	r3, [pc, #96]	; 12aec <pclose@plt+0x1b50>
   12a88:	mov	r2, #5
   12a8c:	ldr	r1, [pc, #176]	; 12b44 <pclose@plt+0x1ba8>
   12a90:	ldr	r4, [r3]
   12a94:	b	12a48 <pclose@plt+0x1aac>
   12a98:	bl	10d80 <__stack_chk_fail@plt>
   12a9c:	ldr	r3, [pc, #72]	; 12aec <pclose@plt+0x1b50>
   12aa0:	mov	r2, #5
   12aa4:	ldr	r1, [pc, #156]	; 12b48 <pclose@plt+0x1bac>
   12aa8:	mov	r0, r6
   12aac:	ldr	r4, [r3]
   12ab0:	bl	10d68 <dcgettext@plt>
   12ab4:	mov	r1, #1
   12ab8:	mov	r2, r0
   12abc:	mov	r0, r4
   12ac0:	bl	10ee8 <__fprintf_chk@plt>
   12ac4:	mov	r0, #64	; 0x40
   12ac8:	bl	10e64 <exit@plt>
   12acc:	ldr	r3, [pc, #24]	; 12aec <pclose@plt+0x1b50>
   12ad0:	mov	r2, #5
   12ad4:	ldr	r1, [pc, #112]	; 12b4c <pclose@plt+0x1bb0>
   12ad8:	b	12a40 <pclose@plt+0x1aa4>
   12adc:	andeq	r7, r2, r8, lsl #30
   12ae0:	andeq	r6, r1, r8, lsr r4
   12ae4:	andeq	r8, r2, r0, lsr r1
   12ae8:	andeq	r6, r1, ip, asr r4
   12aec:	andeq	r8, r2, r8, lsr #2
   12af0:	muleq	r1, r0, fp
   12af4:	andeq	r6, r1, ip, ror sp
   12af8:	andeq	r6, r1, r4, lsr #22
   12afc:	andeq	r6, r1, ip, lsr #23
   12b00:	andeq	r6, r1, r4, asr #23
   12b04:	andeq	r6, r1, ip, asr #23
   12b08:	andeq	r6, r1, ip, lsr #22
   12b0c:	andeq	r6, r1, r8, lsr fp
   12b10:	andeq	r6, r1, r4, asr #22
   12b14:	andeq	r6, r1, r0, asr fp
   12b18:	andeq	r6, r1, ip, ror #22
   12b1c:	andeq	r6, r1, r8, ror fp
   12b20:	andeq	r2, r0, r4, lsr r6
   12b24:	andeq	r6, r1, r8, lsr #25
   12b28:	andeq	r6, r1, ip, lsr sp
   12b2c:	andeq	r6, r1, ip, ror #25
   12b30:	andeq	r1, r0, lr, lsr #32
   12b34:	andeq	r1, r0, r4, lsr lr
   12b38:	andeq	r6, r1, r4, lsr #27
   12b3c:	andeq	r6, r1, r0, ror #27
   12b40:	andeq	r6, r1, ip, lsl #24
   12b44:	andeq	r6, r1, r4, lsr #26
   12b48:	andeq	r6, r1, r8, lsr #24
   12b4c:	andeq	r6, r1, r8, ror #23
   12b50:	push	{r4, lr}
   12b54:	mov	r2, #3
   12b58:	mov	r4, r1
   12b5c:	bl	10edc <write@plt>
   12b60:	cmp	r0, #3
   12b64:	popeq	{r4, pc}
   12b68:	mov	r2, r4
   12b6c:	ldr	r1, [pc, #8]	; 12b7c <pclose@plt+0x1be0>
   12b70:	mov	r0, #1
   12b74:	pop	{r4, lr}
   12b78:	b	10ed0 <__printf_chk@plt>
   12b7c:	strdeq	r7, [r1], -ip
   12b80:	ldr	r1, [pc]	; 12b88 <pclose@plt+0x1bec>
   12b84:	b	12b50 <pclose@plt+0x1bb4>
   12b88:	andeq	r6, r1, r8, asr pc
   12b8c:	ldr	r1, [pc]	; 12b94 <pclose@plt+0x1bf8>
   12b90:	b	12b50 <pclose@plt+0x1bb4>
   12b94:	andeq	r6, r1, ip, asr pc
   12b98:	push	{r4, r5, r6, r7, lr}
   12b9c:	sub	sp, sp, #20
   12ba0:	ldr	r6, [pc, #400]	; 12d38 <pclose@plt+0x1d9c>
   12ba4:	mov	r2, #2
   12ba8:	ldr	r1, [pc, #396]	; 12d3c <pclose@plt+0x1da0>
   12bac:	ldr	r3, [r6]
   12bb0:	mov	r4, r0
   12bb4:	str	r3, [sp, #12]
   12bb8:	bl	10f60 <strncmp@plt>
   12bbc:	cmp	r0, #0
   12bc0:	bne	12be8 <pclose@plt+0x1c4c>
   12bc4:	add	r5, r4, #2
   12bc8:	ldr	r1, [pc, #368]	; 12d40 <pclose@plt+0x1da4>
   12bcc:	mov	r0, r5
   12bd0:	bl	10f90 <strspn@plt>
   12bd4:	mov	r7, r0
   12bd8:	mov	r0, r5
   12bdc:	bl	10e7c <strlen@plt>
   12be0:	cmp	r7, r0
   12be4:	beq	12cf0 <pclose@plt+0x1d54>
   12be8:	mov	r0, r4
   12bec:	bl	10e7c <strlen@plt>
   12bf0:	ldrb	r7, [r4]
   12bf4:	cmp	r7, #48	; 0x30
   12bf8:	mov	r5, r0
   12bfc:	beq	12cac <pclose@plt+0x1d10>
   12c00:	ldr	r1, [pc, #316]	; 12d44 <pclose@plt+0x1da8>
   12c04:	mov	r0, r4
   12c08:	bl	10f90 <strspn@plt>
   12c0c:	cmp	r0, r5
   12c10:	beq	12d1c <pclose@plt+0x1d80>
   12c14:	mov	r2, #2
   12c18:	ldr	r1, [pc, #296]	; 12d48 <pclose@plt+0x1dac>
   12c1c:	mov	r0, r4
   12c20:	bl	10f60 <strncmp@plt>
   12c24:	cmp	r0, #0
   12c28:	cmpeq	r5, #6
   12c2c:	beq	12cd8 <pclose@plt+0x1d3c>
   12c30:	cmp	r5, #3
   12c34:	beq	12c9c <pclose@plt+0x1d00>
   12c38:	cmp	r7, #39	; 0x27
   12c3c:	bne	12ca4 <pclose@plt+0x1d08>
   12c40:	add	r4, r4, #1
   12c44:	add	r2, sp, #4
   12c48:	mov	r1, #0
   12c4c:	add	r0, sp, #8
   12c50:	str	r4, [sp, #8]
   12c54:	bl	14378 <pclose@plt+0x33dc>
   12c58:	ldr	r3, [sp, #4]
   12c5c:	cmp	r3, #0
   12c60:	str	r0, [sp]
   12c64:	bne	12ca4 <pclose@plt+0x1d08>
   12c68:	ldr	r3, [sp, #8]
   12c6c:	ldrb	r2, [r3]
   12c70:	cmp	r2, #39	; 0x27
   12c74:	bne	12ca4 <pclose@plt+0x1d08>
   12c78:	ldrb	r3, [r3, #1]
   12c7c:	cmp	r3, #0
   12c80:	bne	12ca4 <pclose@plt+0x1d08>
   12c84:	ldr	r2, [sp, #12]
   12c88:	ldr	r3, [r6]
   12c8c:	cmp	r2, r3
   12c90:	bne	12d34 <pclose@plt+0x1d98>
   12c94:	add	sp, sp, #20
   12c98:	pop	{r4, r5, r6, r7, pc}
   12c9c:	cmp	r7, #39	; 0x27
   12ca0:	beq	12d08 <pclose@plt+0x1d6c>
   12ca4:	mvn	r0, #0
   12ca8:	b	12c84 <pclose@plt+0x1ce8>
   12cac:	ldr	r1, [pc, #152]	; 12d4c <pclose@plt+0x1db0>
   12cb0:	mov	r0, r4
   12cb4:	bl	10f90 <strspn@plt>
   12cb8:	cmp	r0, r5
   12cbc:	bne	12c00 <pclose@plt+0x1c64>
   12cc0:	mov	r0, r4
   12cc4:	mov	r2, sp
   12cc8:	ldr	r1, [pc, #128]	; 12d50 <pclose@plt+0x1db4>
   12ccc:	bl	10eac <__isoc99_sscanf@plt>
   12cd0:	ldr	r0, [sp]
   12cd4:	b	12c84 <pclose@plt+0x1ce8>
   12cd8:	add	r5, r4, #2
   12cdc:	mov	r0, r5
   12ce0:	ldr	r1, [pc, #88]	; 12d40 <pclose@plt+0x1da4>
   12ce4:	bl	10f90 <strspn@plt>
   12ce8:	cmp	r0, #4
   12cec:	bne	12c38 <pclose@plt+0x1c9c>
   12cf0:	mov	r0, r5
   12cf4:	mov	r2, sp
   12cf8:	ldr	r1, [pc, #84]	; 12d54 <pclose@plt+0x1db8>
   12cfc:	bl	10eac <__isoc99_sscanf@plt>
   12d00:	ldr	r0, [sp]
   12d04:	b	12c84 <pclose@plt+0x1ce8>
   12d08:	ldrb	r3, [r4, #2]
   12d0c:	cmp	r3, #39	; 0x27
   12d10:	ldrbeq	r0, [r4, #1]
   12d14:	bne	12c40 <pclose@plt+0x1ca4>
   12d18:	b	12c84 <pclose@plt+0x1ce8>
   12d1c:	mov	r0, r4
   12d20:	mov	r2, sp
   12d24:	ldr	r1, [pc, #44]	; 12d58 <pclose@plt+0x1dbc>
   12d28:	bl	10eac <__isoc99_sscanf@plt>
   12d2c:	ldr	r0, [sp]
   12d30:	b	12c84 <pclose@plt+0x1ce8>
   12d34:	bl	10d80 <__stack_chk_fail@plt>
   12d38:	andeq	r7, r2, r8, lsl #30
   12d3c:	andeq	r6, r1, r0, ror #31
   12d40:	andeq	r6, r1, r4, ror #31
   12d44:	andeq	r7, r1, r0, lsl r0
   12d48:	andeq	r7, r1, r0, lsr #32
   12d4c:	andeq	r7, r1, r0
   12d50:	andeq	r7, r1, ip
   12d54:	strdeq	r6, [r1], -ip
   12d58:	andeq	r7, r1, ip, lsl r0
   12d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d60:	sub	sp, sp, #5248	; 0x1480
   12d64:	sub	sp, sp, #4
   12d68:	ldr	r6, [pc, #948]	; 13124 <pclose@plt+0x2188>
   12d6c:	add	r3, sp, #4672	; 0x1240
   12d70:	add	r3, r3, #60	; 0x3c
   12d74:	add	ip, sp, #5184	; 0x1440
   12d78:	mov	r9, r0
   12d7c:	mov	r4, r1
   12d80:	ldr	r0, [r6]
   12d84:	sub	r1, r3, #1
   12d88:	add	ip, ip, #60	; 0x3c
   12d8c:	add	r2, sp, #114	; 0x72
   12d90:	mov	r3, #61440	; 0xf000
   12d94:	str	r0, [ip]
   12d98:	add	r0, r3, #1
   12d9c:	strb	r3, [r1, #1]!
   12da0:	strh	r3, [r2, #2]!
   12da4:	uxth	r3, r0
   12da8:	cmp	r3, #61696	; 0xf100
   12dac:	bne	12d98 <pclose@plt+0x1dfc>
   12db0:	cmp	r4, #0
   12db4:	beq	12f58 <pclose@plt+0x1fbc>
   12db8:	ldr	r2, [pc, #872]	; 13128 <pclose@plt+0x218c>
   12dbc:	add	r3, sp, #628	; 0x274
   12dc0:	add	r1, r2, #20
   12dc4:	mov	r0, r4
   12dc8:	bl	15dd4 <pclose@plt+0x4e38>
   12dcc:	subs	r7, r0, #0
   12dd0:	bne	13084 <pclose@plt+0x20e8>
   12dd4:	add	r5, sp, #636	; 0x27c
   12dd8:	mov	r1, r5
   12ddc:	add	r2, sp, #24
   12de0:	mov	r0, #3
   12de4:	bl	10db0 <__xstat@plt>
   12de8:	subs	r4, r0, #0
   12dec:	bne	1304c <pclose@plt+0x20b0>
   12df0:	ldr	r2, [pc, #820]	; 1312c <pclose@plt+0x2190>
   12df4:	ldr	r3, [sp, #68]	; 0x44
   12df8:	cmp	r3, #256	; 0x100
   12dfc:	ldr	r2, [r2]
   12e00:	beq	12f0c <pclose@plt+0x1f70>
   12e04:	cmp	r3, #512	; 0x200
   12e08:	beq	12fd0 <pclose@plt+0x2034>
   12e0c:	cmp	r2, #0
   12e10:	beq	12e30 <pclose@plt+0x1e94>
   12e14:	mov	r2, #5
   12e18:	ldr	r1, [pc, #784]	; 13130 <pclose@plt+0x2194>
   12e1c:	bl	10d68 <dcgettext@plt>
   12e20:	mov	r2, r5
   12e24:	mov	r1, r0
   12e28:	mov	r0, #1
   12e2c:	bl	10ed0 <__printf_chk@plt>
   12e30:	mov	sl, #0
   12e34:	ldr	r7, [sp, #628]	; 0x274
   12e38:	ldr	fp, [pc, #756]	; 13134 <pclose@plt+0x2198>
   12e3c:	ldr	r8, [pc, #756]	; 13138 <pclose@plt+0x219c>
   12e40:	mov	r5, sl
   12e44:	str	sl, [sp, #16]
   12e48:	add	r0, sp, #4928	; 0x1340
   12e4c:	mov	r2, r7
   12e50:	mov	r1, #255	; 0xff
   12e54:	add	r0, r0, #60	; 0x3c
   12e58:	bl	10d2c <fgets@plt>
   12e5c:	cmp	r0, #0
   12e60:	beq	12f94 <pclose@plt+0x1ff8>
   12e64:	cmp	r5, #0
   12e68:	add	r4, r4, #1
   12e6c:	bne	12e88 <pclose@plt+0x1eec>
   12e70:	add	r0, sp, #4928	; 0x1340
   12e74:	mov	r1, fp
   12e78:	add	r0, r0, #60	; 0x3c
   12e7c:	bl	10cd8 <strstr@plt>
   12e80:	adds	r5, r0, #0
   12e84:	movne	r5, #1
   12e88:	add	r0, sp, #4928	; 0x1340
   12e8c:	mov	r1, r8
   12e90:	add	r0, r0, #60	; 0x3c
   12e94:	bl	10f0c <strtok@plt>
   12e98:	subs	r3, r0, #0
   12e9c:	beq	12e48 <pclose@plt+0x1eac>
   12ea0:	ldrb	r2, [r3]
   12ea4:	str	r3, [sp, #12]
   12ea8:	cmp	r2, #35	; 0x23
   12eac:	beq	12e48 <pclose@plt+0x1eac>
   12eb0:	ldr	r1, [pc, #644]	; 1313c <pclose@plt+0x21a0>
   12eb4:	mov	r0, #0
   12eb8:	bl	10f0c <strtok@plt>
   12ebc:	subs	r2, r0, #0
   12ec0:	str	r2, [sp, #20]
   12ec4:	beq	12e48 <pclose@plt+0x1eac>
   12ec8:	ldr	r3, [sp, #12]
   12ecc:	mov	r0, r3
   12ed0:	bl	12b98 <pclose@plt+0x1bfc>
   12ed4:	ldr	r2, [sp, #20]
   12ed8:	str	r0, [sp, #12]
   12edc:	mov	r0, r2
   12ee0:	bl	12b98 <pclose@plt+0x1bfc>
   12ee4:	ldr	r3, [sp, #12]
   12ee8:	cmp	r3, #255	; 0xff
   12eec:	cmpls	r0, #65536	; 0x10000
   12ef0:	bcc	13004 <pclose@plt+0x2068>
   12ef4:	ldr	r3, [sp, #16]
   12ef8:	cmp	r3, #0
   12efc:	mvn	r3, #0
   12f00:	moveq	sl, r4
   12f04:	str	r3, [sp, #16]
   12f08:	b	12e48 <pclose@plt+0x1eac>
   12f0c:	cmp	r2, #0
   12f10:	beq	12f30 <pclose@plt+0x1f94>
   12f14:	mov	r2, #5
   12f18:	ldr	r1, [pc, #544]	; 13140 <pclose@plt+0x21a4>
   12f1c:	bl	10d68 <dcgettext@plt>
   12f20:	mov	r2, r5
   12f24:	mov	r1, r0
   12f28:	mov	r0, #1
   12f2c:	bl	10ed0 <__printf_chk@plt>
   12f30:	add	r0, sp, #4672	; 0x1240
   12f34:	ldr	r3, [sp, #628]	; 0x274
   12f38:	mov	r2, #1
   12f3c:	mov	r1, #256	; 0x100
   12f40:	add	r0, r0, #60	; 0x3c
   12f44:	bl	10dec <fread@plt>
   12f48:	cmp	r0, #1
   12f4c:	bne	130bc <pclose@plt+0x2120>
   12f50:	add	r0, sp, #628	; 0x274
   12f54:	bl	15d98 <pclose@plt+0x4dfc>
   12f58:	add	r1, sp, #4672	; 0x1240
   12f5c:	add	r1, r1, #60	; 0x3c
   12f60:	mov	r0, r9
   12f64:	bl	1448c <pclose@plt+0x34f0>
   12f68:	cmp	r0, #0
   12f6c:	bne	12fc8 <pclose@plt+0x202c>
   12f70:	add	r3, sp, #5184	; 0x1440
   12f74:	add	r3, r3, #60	; 0x3c
   12f78:	ldr	r2, [r3]
   12f7c:	ldr	r3, [r6]
   12f80:	cmp	r2, r3
   12f84:	bne	130b8 <pclose@plt+0x211c>
   12f88:	add	sp, sp, #5248	; 0x1480
   12f8c:	add	sp, sp, #4
   12f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f94:	ldr	r3, [sp, #16]
   12f98:	cmp	r3, #0
   12f9c:	bne	130f0 <pclose@plt+0x2154>
   12fa0:	add	r0, sp, #628	; 0x274
   12fa4:	bl	15d98 <pclose@plt+0x4dfc>
   12fa8:	cmp	r5, #0
   12fac:	beq	12f58 <pclose@plt+0x1fbc>
   12fb0:	add	r4, sp, #116	; 0x74
   12fb4:	mov	r1, r4
   12fb8:	mov	r0, r9
   12fbc:	bl	144ec <pclose@plt+0x3550>
   12fc0:	cmp	r0, #0
   12fc4:	beq	12f70 <pclose@plt+0x1fd4>
   12fc8:	mov	r0, #1
   12fcc:	bl	10e64 <exit@plt>
   12fd0:	cmp	r2, #0
   12fd4:	bne	1302c <pclose@plt+0x2090>
   12fd8:	add	r4, sp, #116	; 0x74
   12fdc:	ldr	r3, [sp, #628]	; 0x274
   12fe0:	mov	r0, r4
   12fe4:	mov	r2, #1
   12fe8:	mov	r1, #512	; 0x200
   12fec:	bl	10dec <fread@plt>
   12ff0:	cmp	r0, #1
   12ff4:	bne	130bc <pclose@plt+0x2120>
   12ff8:	add	r0, sp, #628	; 0x274
   12ffc:	bl	15d98 <pclose@plt+0x4dfc>
   13000:	b	12fb4 <pclose@plt+0x2018>
   13004:	add	r2, sp, #5248	; 0x1480
   13008:	add	r2, r2, r3, lsl #1
   1300c:	sub	r2, r2, #5120	; 0x1400
   13010:	cmp	r0, #255	; 0xff
   13014:	strh	r0, [r2, #-12]
   13018:	movgt	r5, #1
   1301c:	addle	r2, sp, #5248	; 0x1480
   13020:	addle	r3, r2, r3
   13024:	strble	r0, [r3, #-516]	; 0xfffffdfc
   13028:	b	12e48 <pclose@plt+0x1eac>
   1302c:	mov	r2, #5
   13030:	ldr	r1, [pc, #268]	; 13144 <pclose@plt+0x21a8>
   13034:	bl	10d68 <dcgettext@plt>
   13038:	mov	r2, r5
   1303c:	mov	r1, r0
   13040:	mov	r0, #1
   13044:	bl	10ed0 <__printf_chk@plt>
   13048:	b	12fd8 <pclose@plt+0x203c>
   1304c:	mov	r0, r5
   13050:	bl	10da4 <perror@plt>
   13054:	ldr	r3, [pc, #236]	; 13148 <pclose@plt+0x21ac>
   13058:	mov	r2, #5
   1305c:	ldr	r1, [pc, #232]	; 1314c <pclose@plt+0x21b0>
   13060:	mov	r0, r7
   13064:	ldr	r4, [r3]
   13068:	bl	10d68 <dcgettext@plt>
   1306c:	mov	r1, #1
   13070:	mov	r2, r0
   13074:	mov	r0, r4
   13078:	bl	10ee8 <__fprintf_chk@plt>
   1307c:	mov	r0, #1
   13080:	bl	10e64 <exit@plt>
   13084:	ldr	r3, [pc, #188]	; 13148 <pclose@plt+0x21ac>
   13088:	mov	r2, #5
   1308c:	ldr	r1, [pc, #188]	; 13150 <pclose@plt+0x21b4>
   13090:	mov	r0, #0
   13094:	ldr	r5, [r3]
   13098:	bl	10d68 <dcgettext@plt>
   1309c:	mov	r3, r4
   130a0:	mov	r1, #1
   130a4:	mov	r2, r0
   130a8:	mov	r0, r5
   130ac:	bl	10ee8 <__fprintf_chk@plt>
   130b0:	mov	r0, #1
   130b4:	bl	10e64 <exit@plt>
   130b8:	bl	10d80 <__stack_chk_fail@plt>
   130bc:	ldr	r3, [pc, #132]	; 13148 <pclose@plt+0x21ac>
   130c0:	mov	r2, #5
   130c4:	ldr	r1, [pc, #136]	; 13154 <pclose@plt+0x21b8>
   130c8:	mov	r0, #0
   130cc:	ldr	r4, [r3]
   130d0:	bl	10d68 <dcgettext@plt>
   130d4:	add	r3, sp, #636	; 0x27c
   130d8:	mov	r1, #1
   130dc:	mov	r2, r0
   130e0:	mov	r0, r4
   130e4:	bl	10ee8 <__fprintf_chk@plt>
   130e8:	mov	r0, #1
   130ec:	bl	10e64 <exit@plt>
   130f0:	ldr	r3, [pc, #80]	; 13148 <pclose@plt+0x21ac>
   130f4:	mov	r2, #5
   130f8:	ldr	r1, [pc, #88]	; 13158 <pclose@plt+0x21bc>
   130fc:	ldr	r4, [r3]
   13100:	bl	10d68 <dcgettext@plt>
   13104:	str	sl, [sp]
   13108:	add	r3, sp, #636	; 0x27c
   1310c:	mov	r1, #1
   13110:	mov	r2, r0
   13114:	mov	r0, r4
   13118:	bl	10ee8 <__fprintf_chk@plt>
   1311c:	mov	r0, #1
   13120:	bl	10e64 <exit@plt>
   13124:	andeq	r7, r2, r8, lsl #30
   13128:	andeq	r6, r1, r0, asr #31
   1312c:	andeq	r8, r2, r0, lsr r1
   13130:	andeq	r7, r1, ip, ror #1
   13134:	andeq	r7, r1, r0, lsr #32
   13138:	andeq	r7, r1, r8, lsl r1
   1313c:	andeq	r7, r1, ip, lsl r1
   13140:	andeq	r7, r1, r0, rrx
   13144:	strheq	r7, [r1], -ip
   13148:	andeq	r8, r2, r8, lsr #2
   1314c:	andeq	r7, r1, r8, asr #32
   13150:	andeq	r7, r1, r4, lsr #32
   13154:	muleq	r1, r8, r0
   13158:	andeq	r7, r1, r4, lsr #2
   1315c:	push	{r4, r5, r6, r7, r8, lr}
   13160:	sub	sp, sp, #776	; 0x308
   13164:	ldr	r5, [pc, #352]	; 132cc <pclose@plt+0x2330>
   13168:	mov	r7, r1
   1316c:	mov	r6, r0
   13170:	ldr	r3, [r5]
   13174:	mov	r0, r1
   13178:	ldr	r1, [pc, #336]	; 132d0 <pclose@plt+0x2334>
   1317c:	str	r3, [sp, #772]	; 0x304
   13180:	bl	10d08 <fopen@plt>
   13184:	subs	r4, r0, #0
   13188:	beq	132b8 <pclose@plt+0x231c>
   1318c:	add	r1, sp, #516	; 0x204
   13190:	mov	r0, r6
   13194:	bl	1445c <pclose@plt+0x34c0>
   13198:	add	r8, sp, #4
   1319c:	mov	r1, r8
   131a0:	cmp	r0, #0
   131a4:	mov	r0, r6
   131a8:	beq	13224 <pclose@plt+0x2288>
   131ac:	bl	144bc <pclose@plt+0x3520>
   131b0:	cmp	r0, #0
   131b4:	bne	13288 <pclose@plt+0x22ec>
   131b8:	mov	r0, r8
   131bc:	mov	r3, r4
   131c0:	mov	r2, #1
   131c4:	mov	r1, #512	; 0x200
   131c8:	bl	10dbc <fwrite@plt>
   131cc:	cmp	r0, #1
   131d0:	bne	13278 <pclose@plt+0x22dc>
   131d4:	mov	r0, r4
   131d8:	bl	10f00 <fclose@plt>
   131dc:	ldr	r3, [pc, #240]	; 132d4 <pclose@plt+0x2338>
   131e0:	ldr	r3, [r3]
   131e4:	cmp	r3, #0
   131e8:	beq	1320c <pclose@plt+0x2270>
   131ec:	mov	r2, #5
   131f0:	ldr	r1, [pc, #224]	; 132d8 <pclose@plt+0x233c>
   131f4:	mov	r0, #0
   131f8:	bl	10d68 <dcgettext@plt>
   131fc:	mov	r2, r7
   13200:	mov	r1, r0
   13204:	mov	r0, #1
   13208:	bl	10ed0 <__printf_chk@plt>
   1320c:	ldr	r2, [sp, #772]	; 0x304
   13210:	ldr	r3, [r5]
   13214:	cmp	r2, r3
   13218:	bne	132c8 <pclose@plt+0x232c>
   1321c:	add	sp, sp, #776	; 0x308
   13220:	pop	{r4, r5, r6, r7, r8, pc}
   13224:	bl	144bc <pclose@plt+0x3520>
   13228:	cmp	r0, #0
   1322c:	bne	1325c <pclose@plt+0x22c0>
   13230:	add	r1, sp, #512	; 0x200
   13234:	sub	r2, r8, #2
   13238:	add	r1, r1, #2
   1323c:	b	13248 <pclose@plt+0x22ac>
   13240:	cmp	r2, r1
   13244:	beq	1325c <pclose@plt+0x22c0>
   13248:	ldrh	r3, [r2, #2]!
   1324c:	bic	r3, r3, #255	; 0xff
   13250:	cmp	r3, #61440	; 0xf000
   13254:	beq	13240 <pclose@plt+0x22a4>
   13258:	b	131b8 <pclose@plt+0x221c>
   1325c:	add	r0, sp, #516	; 0x204
   13260:	mov	r3, r4
   13264:	mov	r2, #1
   13268:	mov	r1, #256	; 0x100
   1326c:	bl	10dbc <fwrite@plt>
   13270:	cmp	r0, #1
   13274:	beq	131d4 <pclose@plt+0x2238>
   13278:	ldr	r3, [pc, #92]	; 132dc <pclose@plt+0x2340>
   1327c:	mov	r2, #5
   13280:	ldr	r1, [pc, #88]	; 132e0 <pclose@plt+0x2344>
   13284:	b	13294 <pclose@plt+0x22f8>
   13288:	ldr	r3, [pc, #76]	; 132dc <pclose@plt+0x2340>
   1328c:	ldr	r1, [pc, #80]	; 132e4 <pclose@plt+0x2348>
   13290:	mov	r2, #5
   13294:	mov	r0, #0
   13298:	ldr	r4, [r3]
   1329c:	bl	10d68 <dcgettext@plt>
   132a0:	mov	r1, #1
   132a4:	mov	r2, r0
   132a8:	mov	r0, r4
   132ac:	bl	10ee8 <__fprintf_chk@plt>
   132b0:	mov	r0, #1
   132b4:	bl	10e64 <exit@plt>
   132b8:	mov	r0, r7
   132bc:	bl	10da4 <perror@plt>
   132c0:	mov	r0, #1
   132c4:	bl	10e64 <exit@plt>
   132c8:	bl	10d80 <__stack_chk_fail@plt>
   132cc:	andeq	r7, r2, r8, lsl #30
   132d0:	andeq	r6, r1, r4, asr pc
   132d4:	andeq	r8, r2, r0, lsr r1
   132d8:	andeq	r7, r1, ip, lsl #3
   132dc:	andeq	r8, r2, r8, lsr #2
   132e0:	andeq	r7, r1, r0, ror r1
   132e4:	andeq	r7, r1, r4, asr r1
   132e8:	push	{r4, lr}
   132ec:	mov	r1, #2
   132f0:	mov	r4, r0
   132f4:	bl	10e4c <open@plt>
   132f8:	cmp	r0, #0
   132fc:	popge	{r4, pc}
   13300:	mov	r1, #1
   13304:	mov	r0, r4
   13308:	bl	10e4c <open@plt>
   1330c:	cmp	r0, #0
   13310:	popge	{r4, pc}
   13314:	mov	r0, r4
   13318:	mov	r1, #0
   1331c:	bl	10e4c <open@plt>
   13320:	orr	r0, r0, r0, asr #31
   13324:	pop	{r4, pc}
   13328:	push	{r4, r5, lr}
   1332c:	sub	sp, sp, #12
   13330:	ldr	r4, [pc, #108]	; 133a4 <pclose@plt+0x2408>
   13334:	mov	r3, #0
   13338:	strb	r3, [sp, #3]
   1333c:	ldr	r3, [r4]
   13340:	mov	r5, r0
   13344:	str	r3, [sp, #4]
   13348:	bl	10f54 <isatty@plt>
   1334c:	cmp	r0, #0
   13350:	bne	13370 <pclose@plt+0x23d4>
   13354:	mov	r0, #0
   13358:	ldr	r2, [sp, #4]
   1335c:	ldr	r3, [r4]
   13360:	cmp	r2, r3
   13364:	bne	133a0 <pclose@plt+0x2404>
   13368:	add	sp, sp, #12
   1336c:	pop	{r4, r5, pc}
   13370:	mov	r0, r5
   13374:	add	r2, sp, #3
   13378:	ldr	r1, [pc, #40]	; 133a8 <pclose@plt+0x240c>
   1337c:	bl	10dc8 <ioctl@plt>
   13380:	cmp	r0, #0
   13384:	bne	13354 <pclose@plt+0x23b8>
   13388:	ldrb	r0, [sp, #3]
   1338c:	sub	r0, r0, #1
   13390:	cmp	r0, #1
   13394:	movhi	r0, #0
   13398:	movls	r0, #1
   1339c:	b	13358 <pclose@plt+0x23bc>
   133a0:	bl	10d80 <__stack_chk_fail@plt>
   133a4:	andeq	r7, r2, r8, lsl #30
   133a8:	andeq	r4, r0, r3, lsr fp
   133ac:	push	{r4, r5, r6, lr}
   133b0:	subs	r5, r0, #0
   133b4:	beq	133d8 <pclose@plt+0x243c>
   133b8:	bl	132e8 <pclose@plt+0x234c>
   133bc:	subs	r4, r0, #0
   133c0:	blt	13470 <pclose@plt+0x24d4>
   133c4:	bl	13328 <pclose@plt+0x238c>
   133c8:	cmp	r0, #0
   133cc:	beq	13468 <pclose@plt+0x24cc>
   133d0:	mov	r0, r4
   133d4:	pop	{r4, r5, r6, pc}
   133d8:	ldr	r5, [pc, #196]	; 134a4 <pclose@plt+0x2508>
   133dc:	ldr	r0, [pc, #196]	; 134a8 <pclose@plt+0x250c>
   133e0:	b	133f0 <pclose@plt+0x2454>
   133e4:	ldr	r0, [r5], #4
   133e8:	cmp	r0, #0
   133ec:	beq	1341c <pclose@plt+0x2480>
   133f0:	bl	132e8 <pclose@plt+0x234c>
   133f4:	subs	r4, r0, #0
   133f8:	blt	133e4 <pclose@plt+0x2448>
   133fc:	bl	13328 <pclose@plt+0x238c>
   13400:	cmp	r0, #0
   13404:	bne	133d0 <pclose@plt+0x2434>
   13408:	mov	r0, r4
   1340c:	bl	10f78 <close@plt>
   13410:	ldr	r0, [r5], #4
   13414:	cmp	r0, #0
   13418:	bne	133f0 <pclose@plt+0x2454>
   1341c:	mov	r4, r0
   13420:	mov	r0, r4
   13424:	bl	13328 <pclose@plt+0x238c>
   13428:	cmp	r0, #0
   1342c:	bne	133d0 <pclose@plt+0x2434>
   13430:	add	r4, r4, #1
   13434:	cmp	r4, #3
   13438:	bne	13420 <pclose@plt+0x2484>
   1343c:	ldr	r3, [pc, #104]	; 134ac <pclose@plt+0x2510>
   13440:	mov	r2, #5
   13444:	ldr	r1, [pc, #100]	; 134b0 <pclose@plt+0x2514>
   13448:	ldr	r4, [r3]
   1344c:	bl	10d68 <dcgettext@plt>
   13450:	mov	r1, #1
   13454:	mov	r2, r0
   13458:	mov	r0, r4
   1345c:	bl	10ee8 <__fprintf_chk@plt>
   13460:	mov	r0, #1
   13464:	bl	10e64 <exit@plt>
   13468:	mov	r0, r4
   1346c:	bl	10f78 <close@plt>
   13470:	ldr	r3, [pc, #52]	; 134ac <pclose@plt+0x2510>
   13474:	mov	r2, #5
   13478:	ldr	r1, [pc, #52]	; 134b4 <pclose@plt+0x2518>
   1347c:	mov	r0, #0
   13480:	ldr	r4, [r3]
   13484:	bl	10d68 <dcgettext@plt>
   13488:	mov	r3, r5
   1348c:	mov	r1, #1
   13490:	mov	r2, r0
   13494:	mov	r0, r4
   13498:	bl	10ee8 <__fprintf_chk@plt>
   1349c:	mov	r0, #1
   134a0:	bl	10e64 <exit@plt>
   134a4:	andeq	r7, r1, r8, ror #3
   134a8:	andeq	r7, r1, r0, lsl #4
   134ac:	andeq	r8, r2, r8, lsr #2
   134b0:	andeq	r7, r1, r4, lsr #4
   134b4:	andeq	r7, r1, r0, lsl r2
   134b8:	push	{r4, lr}
   134bc:	bl	10e04 <malloc@plt>
   134c0:	cmp	r0, #0
   134c4:	popne	{r4, pc}
   134c8:	bl	10fa8 <pclose@plt+0xc>
   134cc:	push	{r4, lr}
   134d0:	bl	10d8c <realloc@plt>
   134d4:	cmp	r0, #0
   134d8:	popne	{r4, pc}
   134dc:	bl	10fa8 <pclose@plt+0xc>
   134e0:	push	{r4, lr}
   134e4:	bl	10d74 <strdup@plt>
   134e8:	cmp	r0, #0
   134ec:	popne	{r4, pc}
   134f0:	bl	10fa8 <pclose@plt+0xc>
   134f4:	push	{r4, lr}
   134f8:	bl	10d44 <strndup@plt>
   134fc:	cmp	r0, #0
   13500:	popne	{r4, pc}
   13504:	bl	10fa8 <pclose@plt+0xc>
   13508:	cmp	r0, #0
   1350c:	beq	13520 <pclose@plt+0x2584>
   13510:	push	{r4, lr}
   13514:	bl	10d20 <free@plt>
   13518:	mov	r0, #0
   1351c:	pop	{r4, pc}
   13520:	mov	r0, #0
   13524:	bx	lr
   13528:	push	{r1, r2, r3}
   1352c:	push	{r4, r5, r6, r7, lr}
   13530:	sub	sp, sp, #8
   13534:	ldr	r5, [pc, #144]	; 135cc <pclose@plt+0x2630>
   13538:	ldr	r4, [pc, #144]	; 135d0 <pclose@plt+0x2634>
   1353c:	ldr	r3, [pc, #144]	; 135d4 <pclose@plt+0x2638>
   13540:	ldr	r1, [r5]
   13544:	ldr	r7, [sp, #28]
   13548:	add	ip, sp, #32
   1354c:	mov	r6, r0
   13550:	ldr	r3, [r3]
   13554:	ldr	r2, [pc, #124]	; 135d8 <pclose@plt+0x263c>
   13558:	str	r1, [sp, #4]
   1355c:	ldr	r0, [r4]
   13560:	mov	r1, #1
   13564:	str	ip, [sp]
   13568:	bl	10ee8 <__fprintf_chk@plt>
   1356c:	mov	r2, r7
   13570:	ldr	r0, [r4]
   13574:	ldr	r3, [sp]
   13578:	mov	r1, #1
   1357c:	bl	10e28 <__vfprintf_chk@plt>
   13580:	cmp	r6, #0
   13584:	ble	135a8 <pclose@plt+0x260c>
   13588:	mov	r0, r6
   1358c:	ldr	r4, [r4]
   13590:	bl	10e1c <strerror@plt>
   13594:	ldr	r2, [pc, #64]	; 135dc <pclose@plt+0x2640>
   13598:	mov	r1, #1
   1359c:	mov	r3, r0
   135a0:	mov	r0, r4
   135a4:	bl	10ee8 <__fprintf_chk@plt>
   135a8:	ldr	r2, [sp, #4]
   135ac:	ldr	r3, [r5]
   135b0:	cmp	r2, r3
   135b4:	bne	135c8 <pclose@plt+0x262c>
   135b8:	add	sp, sp, #8
   135bc:	pop	{r4, r5, r6, r7, lr}
   135c0:	add	sp, sp, #12
   135c4:	bx	lr
   135c8:	bl	10d80 <__stack_chk_fail@plt>
   135cc:	andeq	r7, r2, r8, lsl #30
   135d0:	andeq	r8, r2, r8, lsr #2
   135d4:	andeq	r8, r2, r0, asr r1
   135d8:			; <UNDEFINED> instruction: 0x000172b4
   135dc:			; <UNDEFINED> instruction: 0x000172bc
   135e0:	push	{r2, r3}
   135e4:	mov	r5, r1
   135e8:	ldr	r2, [pc, #124]	; 1366c <pclose@plt+0x26d0>
   135ec:	push	{r7, lr}
   135f0:	sub	sp, sp, #8
   135f4:	ldr	r4, [pc, #116]	; 13670 <pclose@plt+0x26d4>
   135f8:	ldr	r3, [pc, #116]	; 13674 <pclose@plt+0x26d8>
   135fc:	ldr	lr, [r2]
   13600:	ldr	r7, [sp, #16]
   13604:	add	ip, sp, #20
   13608:	ldr	r3, [r3]
   1360c:	ldr	r2, [pc, #100]	; 13678 <pclose@plt+0x26dc>
   13610:	mov	r1, #1
   13614:	mov	r6, r0
   13618:	ldr	r0, [r4]
   1361c:	str	lr, [sp, #4]
   13620:	str	ip, [sp]
   13624:	bl	10ee8 <__fprintf_chk@plt>
   13628:	mov	r2, r7
   1362c:	ldr	r0, [r4]
   13630:	ldr	r3, [sp]
   13634:	mov	r1, #1
   13638:	bl	10e28 <__vfprintf_chk@plt>
   1363c:	cmp	r5, #0
   13640:	ble	13664 <pclose@plt+0x26c8>
   13644:	mov	r0, r5
   13648:	ldr	r4, [r4]
   1364c:	bl	10e1c <strerror@plt>
   13650:	ldr	r2, [pc, #36]	; 1367c <pclose@plt+0x26e0>
   13654:	mov	r1, #1
   13658:	mov	r3, r0
   1365c:	mov	r0, r4
   13660:	bl	10ee8 <__fprintf_chk@plt>
   13664:	mov	r0, r6
   13668:	bl	10e64 <exit@plt>
   1366c:	andeq	r7, r2, r8, lsl #30
   13670:	andeq	r8, r2, r8, lsr #2
   13674:	andeq	r8, r2, r0, asr r1
   13678:			; <UNDEFINED> instruction: 0x000172b4
   1367c:			; <UNDEFINED> instruction: 0x000172bc
   13680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13684:	sub	sp, sp, #84	; 0x54
   13688:	mov	r9, r1
   1368c:	str	r3, [sp, #16]
   13690:	ldr	r3, [sp, #120]	; 0x78
   13694:	ldr	r1, [pc, #1588]	; 13cd0 <pclose@plt+0x2d34>
   13698:	str	r3, [sp, #24]
   1369c:	ldr	r3, [sp, #128]	; 0x80
   136a0:	ldr	r1, [r1]
   136a4:	str	r3, [sp, #28]
   136a8:	ldr	r3, [sp, #136]	; 0x88
   136ac:	subs	r6, r0, #0
   136b0:	mov	r8, r2
   136b4:	str	r1, [sp, #76]	; 0x4c
   136b8:	ldr	sl, [sp, #124]	; 0x7c
   136bc:	str	r3, [sp, #20]
   136c0:	beq	1395c <pclose@plt+0x29c0>
   136c4:	mov	r0, #16384	; 0x4000
   136c8:	bl	134b8 <pclose@plt+0x251c>
   136cc:	mov	r4, #0
   136d0:	mov	r7, #16384	; 0x4000
   136d4:	mov	r5, r0
   136d8:	sub	r2, r7, r4
   136dc:	mov	r3, r6
   136e0:	mov	r1, #1
   136e4:	add	r0, r5, r4
   136e8:	bl	10dec <fread@plt>
   136ec:	add	r4, r4, r0
   136f0:	mov	r0, r6
   136f4:	bl	10d38 <ferror@plt>
   136f8:	cmp	r0, #0
   136fc:	bne	13c08 <pclose@plt+0x2c6c>
   13700:	mov	r0, r6
   13704:	bl	10e70 <feof@plt>
   13708:	cmp	r0, #0
   1370c:	bne	13730 <pclose@plt+0x2794>
   13710:	cmp	r7, r4
   13714:	bhi	136d8 <pclose@plt+0x273c>
   13718:	lsl	r7, r7, #1
   1371c:	mov	r0, r5
   13720:	mov	r1, r7
   13724:	bl	134cc <pclose@plt+0x2530>
   13728:	mov	r5, r0
   1372c:	b	136d8 <pclose@plt+0x273c>
   13730:	cmp	r9, #0
   13734:	strne	r5, [r9]
   13738:	cmp	r8, #0
   1373c:	strne	r4, [r8]
   13740:	cmp	r4, #3
   13744:	bls	1393c <pclose@plt+0x29a0>
   13748:	ldrb	r3, [r5]
   1374c:	cmp	r3, #54	; 0x36
   13750:	beq	13b38 <pclose@plt+0x2b9c>
   13754:	cmp	r4, #31
   13758:	bls	1393c <pclose@plt+0x29a0>
   1375c:	cmp	r3, #114	; 0x72
   13760:	bne	1393c <pclose@plt+0x29a0>
   13764:	ldrb	r3, [r5, #1]
   13768:	cmp	r3, #181	; 0xb5
   1376c:	bne	1393c <pclose@plt+0x29a0>
   13770:	ldrb	r3, [r5, #2]
   13774:	cmp	r3, #74	; 0x4a
   13778:	bne	1393c <pclose@plt+0x29a0>
   1377c:	ldrb	r3, [r5, #3]
   13780:	cmp	r3, #134	; 0x86
   13784:	bne	1393c <pclose@plt+0x29a0>
   13788:	ldr	r0, [r5]
   1378c:	ldr	r1, [r5, #4]
   13790:	ldr	r2, [r5, #8]
   13794:	ldr	r3, [r5, #12]
   13798:	add	ip, sp, #44	; 0x2c
   1379c:	stmia	ip!, {r0, r1, r2, r3}
   137a0:	ldr	r0, [r5, #16]
   137a4:	ldr	r1, [r5, #20]
   137a8:	ldr	r2, [r5, #24]
   137ac:	ldr	r3, [r5, #28]
   137b0:	ldr	r6, [sp, #48]	; 0x30
   137b4:	cmp	r6, #0
   137b8:	stmia	ip!, {r0, r1, r2, r3}
   137bc:	bne	13c18 <pclose@plt+0x2c7c>
   137c0:	ldrb	r2, [sp, #61]	; 0x3d
   137c4:	ldrb	r8, [sp, #60]	; 0x3c
   137c8:	ldrb	r3, [sp, #65]	; 0x41
   137cc:	ldrb	r0, [sp, #62]	; 0x3e
   137d0:	add	r8, r8, r2, lsl #8
   137d4:	ldrb	r2, [sp, #64]	; 0x40
   137d8:	ldrb	r1, [sp, #53]	; 0x35
   137dc:	ldrb	r6, [sp, #63]	; 0x3f
   137e0:	add	r2, r2, r3, lsl #8
   137e4:	ldrb	r3, [sp, #52]	; 0x34
   137e8:	ldrb	lr, [sp, #73]	; 0x49
   137ec:	add	r8, r8, r0, lsl #16
   137f0:	ldrb	ip, [sp, #54]	; 0x36
   137f4:	ldrb	r0, [sp, #66]	; 0x42
   137f8:	add	r3, r3, r1, lsl #8
   137fc:	ldrb	r1, [sp, #72]	; 0x48
   13800:	adds	r6, r8, r6, lsl #24
   13804:	str	r6, [sp, #12]
   13808:	ldrb	r6, [sp, #74]	; 0x4a
   1380c:	add	r0, r2, r0, lsl #16
   13810:	add	r1, r1, lr, lsl #8
   13814:	add	r3, r3, ip, lsl #16
   13818:	ldrb	r2, [sp, #67]	; 0x43
   1381c:	ldrb	ip, [sp, #55]	; 0x37
   13820:	ldrb	lr, [sp, #75]	; 0x4b
   13824:	ldrb	fp, [sp, #56]	; 0x38
   13828:	add	r1, r1, r6, lsl #16
   1382c:	add	r0, r0, r2, lsl #24
   13830:	add	r3, r3, ip, lsl #24
   13834:	add	r1, r1, lr, lsl #24
   13838:	and	fp, fp, #1
   1383c:	movne	r7, #1
   13840:	beq	13c38 <pclose@plt+0x2c9c>
   13844:	cmp	r0, #0
   13848:	moveq	r2, #5
   1384c:	ldreq	r1, [pc, #1152]	; 13cd4 <pclose@plt+0x2d38>
   13850:	beq	13b10 <pclose@plt+0x2b74>
   13854:	ldr	r2, [sp, #12]
   13858:	mul	r0, r0, r2
   1385c:	add	r6, r0, r3
   13860:	cmp	r4, r6
   13864:	bcc	13c58 <pclose@plt+0x2cbc>
   13868:	subs	r2, r4, r6
   1386c:	movne	r2, #1
   13870:	cmp	fp, #0
   13874:	movne	r2, #0
   13878:	cmp	r2, #0
   1387c:	bne	13c58 <pclose@plt+0x2cbc>
   13880:	ldr	ip, [sp, #16]
   13884:	cmp	ip, #0
   13888:	cmpne	r9, #0
   1388c:	ldrne	r2, [r9]
   13890:	addne	r3, r2, r3
   13894:	strne	r3, [ip]
   13898:	ldr	r3, [sp, #24]
   1389c:	cmp	r3, #0
   138a0:	strne	r0, [r3]
   138a4:	ldr	r3, [sp, #28]
   138a8:	cmp	r3, #0
   138ac:	ldrne	r2, [sp, #12]
   138b0:	strne	r2, [r3]
   138b4:	ldr	r3, [sp, #20]
   138b8:	cmp	sl, #0
   138bc:	strne	r1, [sl]
   138c0:	cmp	r3, #0
   138c4:	beq	13934 <pclose@plt+0x2998>
   138c8:	ldr	r3, [sp, #132]	; 0x84
   138cc:	ldr	r9, [sp, #12]
   138d0:	ldr	r8, [sp, #20]
   138d4:	add	r1, r3, r9
   138d8:	add	r1, r1, r1, lsl #1
   138dc:	ldr	r0, [r8]
   138e0:	lsl	r1, r1, #2
   138e4:	bl	134cc <pclose@plt+0x2530>
   138e8:	cmp	fp, #0
   138ec:	mov	lr, r8
   138f0:	str	r0, [r8]
   138f4:	bne	13974 <pclose@plt+0x29d8>
   138f8:	ldr	r3, [sp, #132]	; 0x84
   138fc:	mov	r1, fp
   13900:	mov	ip, r9
   13904:	add	r3, r3, r3, lsl #1
   13908:	lsl	r3, r3, #2
   1390c:	b	13914 <pclose@plt+0x2978>
   13910:	ldr	r0, [lr]
   13914:	add	r2, r0, r3
   13918:	add	fp, fp, #1
   1391c:	cmp	fp, ip
   13920:	str	r1, [r0, r3]
   13924:	str	r1, [r2, #8]
   13928:	str	r2, [r2, #4]
   1392c:	add	r3, r3, #12
   13930:	bcc	13910 <pclose@plt+0x2974>
   13934:	mov	r0, #0
   13938:	b	13940 <pclose@plt+0x29a4>
   1393c:	mvn	r0, #0
   13940:	ldr	r3, [pc, #904]	; 13cd0 <pclose@plt+0x2d34>
   13944:	ldr	r2, [sp, #76]	; 0x4c
   13948:	ldr	r3, [r3]
   1394c:	cmp	r2, r3
   13950:	bne	13c04 <pclose@plt+0x2c68>
   13954:	add	sp, sp, #84	; 0x54
   13958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1395c:	cmp	r2, #0
   13960:	cmpne	r9, #0
   13964:	beq	13c78 <pclose@plt+0x2cdc>
   13968:	ldr	r4, [r2]
   1396c:	ldr	r5, [r9]
   13970:	b	13740 <pclose@plt+0x27a4>
   13974:	ldr	r9, [pc, #860]	; 13cd8 <pclose@plt+0x2d3c>
   13978:	mov	r3, #0
   1397c:	add	r4, r5, r4
   13980:	str	r3, [sp, #16]
   13984:	add	r3, r5, r6
   13988:	str	r3, [sp, #36]	; 0x24
   1398c:	ldr	r1, [sp, #16]
   13990:	ldr	r2, [sp, #132]	; 0x84
   13994:	add	r2, r2, r1
   13998:	mov	r1, #0
   1399c:	add	r2, r2, r2, lsl #1
   139a0:	mov	r5, r1
   139a4:	add	r6, r0, r2, lsl #2
   139a8:	str	r1, [r0, r2, lsl #2]
   139ac:	str	r1, [r6, #8]
   139b0:	str	r6, [r6, #4]
   139b4:	cmp	r4, r3
   139b8:	beq	13b74 <pclose@plt+0x2bd8>
   139bc:	cmp	r7, #0
   139c0:	beq	13a48 <pclose@plt+0x2aac>
   139c4:	add	r2, r3, #1
   139c8:	str	r2, [sp, #36]	; 0x24
   139cc:	ldrb	r1, [r3]
   139d0:	cmp	r1, #255	; 0xff
   139d4:	beq	13ad8 <pclose@plt+0x2b3c>
   139d8:	cmp	r1, #254	; 0xfe
   139dc:	beq	13a84 <pclose@plt+0x2ae8>
   139e0:	sub	r1, r4, r3
   139e4:	add	r2, sp, #40	; 0x28
   139e8:	add	r0, sp, #36	; 0x24
   139ec:	str	r3, [sp, #36]	; 0x24
   139f0:	bl	14378 <pclose@plt+0x33dc>
   139f4:	ldr	r3, [sp, #40]	; 0x28
   139f8:	cmp	r3, #0
   139fc:	mov	fp, r0
   13a00:	bne	13b84 <pclose@plt+0x2be8>
   13a04:	cmp	r5, #1
   13a08:	ble	13a90 <pclose@plt+0x2af4>
   13a0c:	ldr	r3, [r6, #4]
   13a10:	ldr	sl, [r3, #8]
   13a14:	b	13a1c <pclose@plt+0x2a80>
   13a18:	mov	sl, r8
   13a1c:	ldr	r8, [sl]
   13a20:	cmp	r8, #0
   13a24:	bne	13a18 <pclose@plt+0x2a7c>
   13a28:	mov	r0, #12
   13a2c:	bl	134b8 <pclose@plt+0x251c>
   13a30:	strd	sl, [r0, #4]
   13a34:	str	r8, [r0]
   13a38:	str	r0, [sl]
   13a3c:	add	r5, r5, #1
   13a40:	ldr	r3, [sp, #36]	; 0x24
   13a44:	b	139b4 <pclose@plt+0x2a18>
   13a48:	sub	r2, r4, r3
   13a4c:	cmp	r2, #1
   13a50:	ble	13c48 <pclose@plt+0x2cac>
   13a54:	mov	r2, r3
   13a58:	add	r1, r3, #1
   13a5c:	str	r1, [sp, #36]	; 0x24
   13a60:	ldrb	fp, [r2], #2
   13a64:	str	r2, [sp, #36]	; 0x24
   13a68:	ldrb	r3, [r3, #1]
   13a6c:	orr	fp, fp, r3, lsl #8
   13a70:	cmp	fp, r9
   13a74:	beq	13ad8 <pclose@plt+0x2b3c>
   13a78:	ldr	r3, [pc, #604]	; 13cdc <pclose@plt+0x2d40>
   13a7c:	cmp	fp, r3
   13a80:	bne	13a04 <pclose@plt+0x2a68>
   13a84:	mov	r3, r2
   13a88:	mov	r5, #1
   13a8c:	b	139b4 <pclose@plt+0x2a18>
   13a90:	mov	r0, #12
   13a94:	bl	134b8 <pclose@plt+0x251c>
   13a98:	mov	r8, r0
   13a9c:	mov	r0, #12
   13aa0:	bl	134b8 <pclose@plt+0x251c>
   13aa4:	ldr	r2, [r6, #4]
   13aa8:	mov	r3, #0
   13aac:	cmp	r5, #0
   13ab0:	str	fp, [r0, #8]
   13ab4:	str	r0, [r0, #4]
   13ab8:	str	r3, [r0]
   13abc:	str	r0, [r8, #8]
   13ac0:	str	r2, [r8, #4]
   13ac4:	str	r8, [r2]
   13ac8:	str	r3, [r8]
   13acc:	str	r8, [r6, #4]
   13ad0:	beq	13a40 <pclose@plt+0x2aa4>
   13ad4:	b	13a3c <pclose@plt+0x2aa0>
   13ad8:	ldr	r3, [sp, #16]
   13adc:	ldr	r1, [sp, #12]
   13ae0:	add	r3, r3, #1
   13ae4:	cmp	r3, r1
   13ae8:	str	r3, [sp, #16]
   13aec:	movcc	r3, r2
   13af0:	ldrcc	r2, [sp, #20]
   13af4:	ldrcc	r0, [r2]
   13af8:	bcc	1398c <pclose@plt+0x29f0>
   13afc:	cmp	r4, r2
   13b00:	movne	r2, #5
   13b04:	ldrne	r1, [pc, #468]	; 13ce0 <pclose@plt+0x2d44>
   13b08:	movne	r0, #0
   13b0c:	beq	13934 <pclose@plt+0x2998>
   13b10:	bl	10d68 <dcgettext@plt>
   13b14:	ldr	ip, [pc, #456]	; 13ce4 <pclose@plt+0x2d48>
   13b18:	ldr	r3, [pc, #456]	; 13ce8 <pclose@plt+0x2d4c>
   13b1c:	mov	r1, #1
   13b20:	ldr	r3, [r3]
   13b24:	mov	r2, r0
   13b28:	ldr	r0, [ip]
   13b2c:	bl	10ee8 <__fprintf_chk@plt>
   13b30:	mov	r0, #65	; 0x41
   13b34:	bl	10e64 <exit@plt>
   13b38:	ldrb	r3, [r5, #1]
   13b3c:	cmp	r3, #4
   13b40:	bne	1393c <pclose@plt+0x29a0>
   13b44:	ldrb	fp, [r5, #2]
   13b48:	cmp	fp, #5
   13b4c:	bhi	13bc8 <pclose@plt+0x2c2c>
   13b50:	tst	fp, #1
   13b54:	moveq	r2, #256	; 0x100
   13b58:	movne	r2, #512	; 0x200
   13b5c:	and	fp, fp, #6
   13b60:	str	r2, [sp, #12]
   13b64:	ldrb	r0, [r5, #3]
   13b68:	mov	r7, #0
   13b6c:	mov	r1, #8
   13b70:	b	13844 <pclose@plt+0x28a8>
   13b74:	mov	r2, #5
   13b78:	ldr	r1, [pc, #364]	; 13cec <pclose@plt+0x2d50>
   13b7c:	mov	r0, #0
   13b80:	b	13b10 <pclose@plt+0x2b74>
   13b84:	cmn	r3, #2
   13b88:	beq	13cbc <pclose@plt+0x2d20>
   13b8c:	cmn	r3, #1
   13b90:	bne	13ca8 <pclose@plt+0x2d0c>
   13b94:	mov	r2, #5
   13b98:	ldr	r1, [pc, #336]	; 13cf0 <pclose@plt+0x2d54>
   13b9c:	mov	r0, #0
   13ba0:	bl	10d68 <dcgettext@plt>
   13ba4:	ldr	r1, [pc, #312]	; 13ce4 <pclose@plt+0x2d48>
   13ba8:	ldr	r3, [pc, #312]	; 13ce8 <pclose@plt+0x2d4c>
   13bac:	mov	r2, r0
   13bb0:	ldr	r0, [r1]
   13bb4:	ldr	r3, [r3]
   13bb8:	mov	r1, #1
   13bbc:	bl	10ee8 <__fprintf_chk@plt>
   13bc0:	mov	r0, #65	; 0x41
   13bc4:	bl	10e64 <exit@plt>
   13bc8:	mov	r2, #5
   13bcc:	ldr	r1, [pc, #288]	; 13cf4 <pclose@plt+0x2d58>
   13bd0:	mov	r0, #0
   13bd4:	bl	10d68 <dcgettext@plt>
   13bd8:	ldrb	r2, [r5, #2]
   13bdc:	ldr	r3, [pc, #260]	; 13ce8 <pclose@plt+0x2d4c>
   13be0:	ldr	ip, [pc, #252]	; 13ce4 <pclose@plt+0x2d48>
   13be4:	str	r2, [sp]
   13be8:	mov	r2, r0
   13bec:	ldr	r3, [r3]
   13bf0:	mov	r1, #1
   13bf4:	ldr	r0, [ip]
   13bf8:	bl	10ee8 <__fprintf_chk@plt>
   13bfc:	mov	r0, #65	; 0x41
   13c00:	bl	10e64 <exit@plt>
   13c04:	bl	10d80 <__stack_chk_fail@plt>
   13c08:	mov	r2, #5
   13c0c:	ldr	r1, [pc, #228]	; 13cf8 <pclose@plt+0x2d5c>
   13c10:	mov	r0, #0
   13c14:	b	13b10 <pclose@plt+0x2b74>
   13c18:	mov	r2, #5
   13c1c:	ldr	r1, [pc, #216]	; 13cfc <pclose@plt+0x2d60>
   13c20:	mov	r0, #0
   13c24:	bl	10d68 <dcgettext@plt>
   13c28:	ldr	r3, [pc, #184]	; 13ce8 <pclose@plt+0x2d4c>
   13c2c:	ldr	ip, [pc, #176]	; 13ce4 <pclose@plt+0x2d48>
   13c30:	str	r6, [sp]
   13c34:	b	13be8 <pclose@plt+0x2c4c>
   13c38:	ldr	r0, [sp, #12]
   13c3c:	mov	r2, #5
   13c40:	ldr	r1, [pc, #184]	; 13d00 <pclose@plt+0x2d64>
   13c44:	b	13b10 <pclose@plt+0x2b74>
   13c48:	mov	r0, r7
   13c4c:	mov	r2, #5
   13c50:	ldr	r1, [pc, #172]	; 13d04 <pclose@plt+0x2d68>
   13c54:	b	13b10 <pclose@plt+0x2b74>
   13c58:	mov	r2, #5
   13c5c:	ldr	r1, [pc, #164]	; 13d08 <pclose@plt+0x2d6c>
   13c60:	mov	r0, #0
   13c64:	bl	10d68 <dcgettext@plt>
   13c68:	ldr	r3, [pc, #120]	; 13ce8 <pclose@plt+0x2d4c>
   13c6c:	ldr	ip, [pc, #112]	; 13ce4 <pclose@plt+0x2d48>
   13c70:	str	r4, [sp]
   13c74:	b	13be8 <pclose@plt+0x2c4c>
   13c78:	mov	r2, #5
   13c7c:	ldr	r1, [pc, #136]	; 13d0c <pclose@plt+0x2d70>
   13c80:	bl	10d68 <dcgettext@plt>
   13c84:	ldr	ip, [pc, #88]	; 13ce4 <pclose@plt+0x2d48>
   13c88:	ldr	r3, [pc, #88]	; 13ce8 <pclose@plt+0x2d4c>
   13c8c:	mov	r1, #1
   13c90:	ldr	r3, [r3]
   13c94:	mov	r2, r0
   13c98:	ldr	r0, [ip]
   13c9c:	bl	10ee8 <__fprintf_chk@plt>
   13ca0:	mov	r0, #70	; 0x46
   13ca4:	bl	10e64 <exit@plt>
   13ca8:	mov	r2, #5
   13cac:	ldr	r1, [pc, #92]	; 13d10 <pclose@plt+0x2d74>
   13cb0:	mov	r0, #0
   13cb4:	bl	10d68 <dcgettext@plt>
   13cb8:	b	13ba4 <pclose@plt+0x2c08>
   13cbc:	mov	r2, #5
   13cc0:	ldr	r1, [pc, #76]	; 13d14 <pclose@plt+0x2d78>
   13cc4:	mov	r0, #0
   13cc8:	bl	10d68 <dcgettext@plt>
   13ccc:	b	13ba4 <pclose@plt+0x2c08>
   13cd0:	andeq	r7, r2, r8, lsl #30
   13cd4:	andeq	r7, r1, ip, ror #6
   13cd8:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   13cdc:	strdeq	pc, [r0], -lr
   13ce0:	andeq	r7, r1, r8, lsr r4
   13ce4:	andeq	r8, r2, r8, lsr #2
   13ce8:	andeq	r8, r2, r0, asr r1
   13cec:			; <UNDEFINED> instruction: 0x000173b4
   13cf0:	strdeq	r7, [r1], -r0
   13cf4:	andeq	r7, r1, r4, lsl #6
   13cf8:	andeq	r7, r1, r4, asr #5
   13cfc:	andeq	r7, r1, r8, lsr #6
   13d00:	andeq	r7, r1, ip, asr #6
   13d04:	andeq	r7, r1, r8, lsl r4
   13d08:	andeq	r7, r1, ip, lsl #7
   13d0c:	andeq	r7, r1, r4, ror #5
   13d10:	andeq	r7, r1, r0, lsl #8
   13d14:	ldrdeq	r7, [r1], -r0
   13d18:	push	{r4, r5, r6, r7, lr}
   13d1c:	subs	r4, r1, #0
   13d20:	ldr	r6, [pc, #432]	; 13ed8 <pclose@plt+0x2f3c>
   13d24:	sub	sp, sp, #20
   13d28:	ldr	r1, [r6]
   13d2c:	str	r1, [sp, #12]
   13d30:	blt	13ea4 <pclose@plt+0x2f08>
   13d34:	cmp	r2, #0
   13d38:	mov	r3, r0
   13d3c:	mov	r7, r2
   13d40:	uxtb	ip, r4
   13d44:	bne	13da4 <pclose@plt+0x2e08>
   13d48:	mov	r0, #4
   13d4c:	mov	r5, r0
   13d50:	mov	r1, #2
   13d54:	lsr	r4, r4, #8
   13d58:	strb	r4, [sp, #9]
   13d5c:	strb	ip, [sp, #8]
   13d60:	add	r2, sp, #4
   13d64:	add	r0, r2, r0
   13d68:	mov	r2, #1
   13d6c:	bl	10dbc <fwrite@plt>
   13d70:	cmp	r0, #1
   13d74:	mov	r4, r0
   13d78:	bne	13e94 <pclose@plt+0x2ef8>
   13d7c:	ldr	r3, [pc, #344]	; 13edc <pclose@plt+0x2f40>
   13d80:	ldr	r3, [r3]
   13d84:	cmp	r3, #0
   13d88:	bne	13e28 <pclose@plt+0x2e8c>
   13d8c:	ldr	r2, [sp, #12]
   13d90:	ldr	r3, [r6]
   13d94:	cmp	r2, r3
   13d98:	bne	13e90 <pclose@plt+0x2ef4>
   13d9c:	add	sp, sp, #20
   13da0:	pop	{r4, r5, r6, r7, pc}
   13da4:	cmp	r4, #127	; 0x7f
   13da8:	bls	13e14 <pclose@plt+0x2e78>
   13dac:	bics	r2, r4, #63	; 0x3f
   13db0:	addne	r0, sp, #9
   13db4:	movne	r1, #63	; 0x3f
   13db8:	movne	r5, #6
   13dbc:	bne	13dc8 <pclose@plt+0x2e2c>
   13dc0:	b	13e7c <pclose@plt+0x2ee0>
   13dc4:	mov	r5, r2
   13dc8:	and	r2, r4, #63	; 0x3f
   13dcc:	asr	r1, r1, #1
   13dd0:	lsr	r4, r4, #6
   13dd4:	sub	r2, r2, #128	; 0x80
   13dd8:	bics	ip, r4, r1
   13ddc:	strb	r2, [r0], #-1
   13de0:	sub	r2, r5, #1
   13de4:	bne	13dc4 <pclose@plt+0x2e28>
   13de8:	sub	r5, r5, #2
   13dec:	uxtb	r2, r1
   13df0:	uxtb	ip, r4
   13df4:	mov	r0, r5
   13df8:	rsb	r1, r5, #6
   13dfc:	sub	r2, ip, r2, lsl #1
   13e00:	add	ip, sp, #16
   13e04:	add	ip, ip, r5
   13e08:	sub	r2, r2, #2
   13e0c:	strb	r2, [ip, #-12]
   13e10:	b	13d60 <pclose@plt+0x2dc4>
   13e14:	mov	r0, #5
   13e18:	strb	ip, [sp, #9]
   13e1c:	mov	r5, r0
   13e20:	mov	r1, #1
   13e24:	b	13d60 <pclose@plt+0x2dc4>
   13e28:	mov	r0, #40	; 0x28
   13e2c:	bl	10ec4 <putchar@plt>
   13e30:	cmp	r7, #0
   13e34:	beq	13e6c <pclose@plt+0x2ed0>
   13e38:	add	r3, sp, #4
   13e3c:	ldr	r7, [pc, #156]	; 13ee0 <pclose@plt+0x2f44>
   13e40:	add	r4, r3, r5
   13e44:	add	r5, sp, #10
   13e48:	ldrb	r2, [r4], #1
   13e4c:	mov	r1, r7
   13e50:	mov	r0, #1
   13e54:	bl	10ed0 <__printf_chk@plt>
   13e58:	cmp	r5, r4
   13e5c:	bne	13e48 <pclose@plt+0x2eac>
   13e60:	mov	r0, #41	; 0x29
   13e64:	bl	10ec4 <putchar@plt>
   13e68:	b	13d8c <pclose@plt+0x2df0>
   13e6c:	mov	r0, r4
   13e70:	ldr	r1, [pc, #108]	; 13ee4 <pclose@plt+0x2f48>
   13e74:	bl	10ed0 <__printf_chk@plt>
   13e78:	b	13e38 <pclose@plt+0x2e9c>
   13e7c:	mov	r0, #5
   13e80:	mov	r5, r0
   13e84:	mov	r1, #1
   13e88:	mov	r2, #63	; 0x3f
   13e8c:	b	13dfc <pclose@plt+0x2e60>
   13e90:	bl	10d80 <__stack_chk_fail@plt>
   13e94:	ldr	r0, [pc, #76]	; 13ee8 <pclose@plt+0x2f4c>
   13e98:	bl	10da4 <perror@plt>
   13e9c:	mov	r0, #1
   13ea0:	bl	10e64 <exit@plt>
   13ea4:	ldr	r3, [pc, #64]	; 13eec <pclose@plt+0x2f50>
   13ea8:	mov	r2, #5
   13eac:	ldr	r1, [pc, #60]	; 13ef0 <pclose@plt+0x2f54>
   13eb0:	mov	r0, #0
   13eb4:	ldr	r5, [r3]
   13eb8:	bl	10d68 <dcgettext@plt>
   13ebc:	mov	r3, r4
   13ec0:	mov	r1, #1
   13ec4:	mov	r2, r0
   13ec8:	mov	r0, r5
   13ecc:	bl	10ee8 <__fprintf_chk@plt>
   13ed0:	mov	r0, #1
   13ed4:	bl	10e64 <exit@plt>
   13ed8:	andeq	r7, r2, r8, lsl #30
   13edc:	andeq	r8, r2, r4, lsr r1
   13ee0:	muleq	r1, r0, r4
   13ee4:	andeq	r7, r1, r0, lsr #32
   13ee8:	andeq	r7, r1, r0, lsl #9
   13eec:	andeq	r8, r2, r8, lsr #2
   13ef0:	andeq	r7, r1, ip, asr r4
   13ef4:	push	{r4, lr}
   13ef8:	cmp	r2, #0
   13efc:	ldr	r4, [pc, #148]	; 13f98 <pclose@plt+0x2ffc>
   13f00:	sub	sp, sp, #8
   13f04:	mov	r3, r0
   13f08:	ldr	r2, [r4]
   13f0c:	str	r2, [sp, #4]
   13f10:	beq	13f54 <pclose@plt+0x2fb8>
   13f14:	cmp	r1, #0
   13f18:	add	r0, sp, #8
   13f1c:	movne	r1, #254	; 0xfe
   13f20:	moveq	r1, #255	; 0xff
   13f24:	mov	r2, #1
   13f28:	strb	r1, [r0, #-6]!
   13f2c:	mov	r1, r2
   13f30:	bl	10dbc <fwrite@plt>
   13f34:	cmp	r0, #1
   13f38:	bne	13f84 <pclose@plt+0x2fe8>
   13f3c:	ldr	r2, [sp, #4]
   13f40:	ldr	r3, [r4]
   13f44:	cmp	r2, r3
   13f48:	bne	13f94 <pclose@plt+0x2ff8>
   13f4c:	add	sp, sp, #8
   13f50:	pop	{r4, pc}
   13f54:	ldr	r2, [pc, #64]	; 13f9c <pclose@plt+0x3000>
   13f58:	ldr	r0, [pc, #64]	; 13fa0 <pclose@plt+0x3004>
   13f5c:	cmp	r1, #0
   13f60:	add	ip, sp, #8
   13f64:	movne	r1, r2
   13f68:	moveq	r1, r0
   13f6c:	strh	r1, [ip, #-6]!
   13f70:	mov	r2, #1
   13f74:	mov	r0, ip
   13f78:	mov	r1, #2
   13f7c:	bl	10dbc <fwrite@plt>
   13f80:	b	13f34 <pclose@plt+0x2f98>
   13f84:	ldr	r0, [pc, #24]	; 13fa4 <pclose@plt+0x3008>
   13f88:	bl	10da4 <perror@plt>
   13f8c:	mov	r0, #1
   13f90:	bl	10e64 <exit@plt>
   13f94:	bl	10d80 <__stack_chk_fail@plt>
   13f98:	andeq	r7, r2, r8, lsl #30
   13f9c:	strdeq	pc, [r0], -lr
   13fa0:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   13fa4:	muleq	r1, r8, r4
   13fa8:	push	{r4, r5, r6, r7, lr}
   13fac:	adds	ip, r1, #7
   13fb0:	ldr	r4, [pc, #432]	; 14168 <pclose@plt+0x31cc>
   13fb4:	addmi	ip, r1, #14
   13fb8:	mov	r5, r3
   13fbc:	sub	r3, r3, #256	; 0x100
   13fc0:	sub	sp, sp, #44	; 0x2c
   13fc4:	bic	r3, r3, #256	; 0x100
   13fc8:	ldr	r6, [r4]
   13fcc:	asr	ip, ip, #3
   13fd0:	cmp	r3, #0
   13fd4:	cmpeq	r1, #8
   13fd8:	mov	lr, r1
   13fdc:	mov	r3, r0
   13fe0:	str	r6, [sp, #36]	; 0x24
   13fe4:	movne	r1, #1
   13fe8:	moveq	r1, #0
   13fec:	mul	ip, r2, ip
   13ff0:	ldr	r0, [sp, #64]	; 0x40
   13ff4:	ldr	r6, [sp, #68]	; 0x44
   13ff8:	beq	140d0 <pclose@plt+0x3134>
   13ffc:	mov	r1, #2
   14000:	str	r1, [r0]
   14004:	ldr	r0, [pc, #352]	; 1416c <pclose@plt+0x31d0>
   14008:	and	r6, r6, #1
   1400c:	str	r0, [sp, #4]
   14010:	mov	r0, #0
   14014:	mov	r7, #32
   14018:	strb	r6, [sp, #16]
   1401c:	str	r0, [sp, #8]
   14020:	asr	r6, r5, #16
   14024:	strb	r0, [sp, #17]
   14028:	strb	r0, [sp, #18]
   1402c:	strb	r0, [sp, #19]
   14030:	asr	r0, ip, #8
   14034:	mov	r1, r7
   14038:	strb	r5, [sp, #20]
   1403c:	strb	ip, [sp, #24]
   14040:	str	r7, [sp, #12]
   14044:	strb	r6, [sp, #22]
   14048:	asr	r7, r5, #8
   1404c:	asr	r6, ip, #16
   14050:	lsr	r5, r5, #24
   14054:	lsr	ip, ip, #24
   14058:	strb	r0, [sp, #25]
   1405c:	asr	r0, lr, #16
   14060:	strb	lr, [sp, #32]
   14064:	strb	r2, [sp, #28]
   14068:	strb	r7, [sp, #21]
   1406c:	strb	r5, [sp, #23]
   14070:	asr	r7, lr, #8
   14074:	asr	r5, r2, #16
   14078:	lsr	lr, lr, #24
   1407c:	strb	r6, [sp, #26]
   14080:	strb	ip, [sp, #27]
   14084:	asr	r6, r2, #8
   14088:	lsr	ip, r2, #24
   1408c:	strb	r0, [sp, #34]	; 0x22
   14090:	mov	r2, #1
   14094:	add	r0, sp, #4
   14098:	strb	r7, [sp, #33]	; 0x21
   1409c:	strb	lr, [sp, #35]	; 0x23
   140a0:	strb	r6, [sp, #29]
   140a4:	strb	r5, [sp, #30]
   140a8:	strb	ip, [sp, #31]
   140ac:	bl	10dbc <fwrite@plt>
   140b0:	cmp	r0, #1
   140b4:	bne	14134 <pclose@plt+0x3198>
   140b8:	ldr	r2, [sp, #36]	; 0x24
   140bc:	ldr	r3, [r4]
   140c0:	cmp	r2, r3
   140c4:	bne	14164 <pclose@plt+0x31c8>
   140c8:	add	sp, sp, #44	; 0x2c
   140cc:	pop	{r4, r5, r6, r7, pc}
   140d0:	ldr	r0, [r0]
   140d4:	cmp	r0, #2
   140d8:	beq	14004 <pclose@plt+0x3068>
   140dc:	ldr	r2, [pc, #140]	; 14170 <pclose@plt+0x31d4>
   140e0:	cmp	r5, #512	; 0x200
   140e4:	strh	r2, [sp, #4]
   140e8:	moveq	r2, #1
   140ec:	strbne	r1, [sp, #6]
   140f0:	strbeq	r2, [sp, #6]
   140f4:	tst	r6, #2
   140f8:	beq	14120 <pclose@plt+0x3184>
   140fc:	ldrb	r2, [sp, #6]
   14100:	orr	r2, r2, #4
   14104:	strb	r2, [sp, #6]
   14108:	mov	r1, #4
   1410c:	mov	r2, #1
   14110:	add	r0, sp, r1
   14114:	strb	ip, [sp, #7]
   14118:	bl	10dbc <fwrite@plt>
   1411c:	b	140b0 <pclose@plt+0x3114>
   14120:	tst	r6, #1
   14124:	ldrbne	r2, [sp, #6]
   14128:	orrne	r2, r2, #2
   1412c:	strbne	r2, [sp, #6]
   14130:	b	14108 <pclose@plt+0x316c>
   14134:	ldr	r3, [pc, #56]	; 14174 <pclose@plt+0x31d8>
   14138:	mov	r2, #5
   1413c:	ldr	r1, [pc, #52]	; 14178 <pclose@plt+0x31dc>
   14140:	mov	r0, #0
   14144:	ldr	r4, [r3]
   14148:	bl	10d68 <dcgettext@plt>
   1414c:	mov	r1, #1
   14150:	mov	r2, r0
   14154:	mov	r0, r4
   14158:	bl	10ee8 <__fprintf_chk@plt>
   1415c:	mov	r0, #74	; 0x4a
   14160:	bl	10e64 <exit@plt>
   14164:	bl	10d80 <__stack_chk_fail@plt>
   14168:	andeq	r7, r2, r8, lsl #30
   1416c:			; <UNDEFINED> instruction: 0x864ab572
   14170:	andeq	r0, r0, r6, lsr r4
   14174:	andeq	r8, r2, r8, lsr #2
   14178:	andeq	r7, r1, r8, lsr #9
   1417c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14180:	adds	ip, r2, #7
   14184:	sub	sp, sp, #12
   14188:	addmi	ip, r2, #14
   1418c:	ldr	r8, [sp, #48]	; 0x30
   14190:	asr	ip, ip, #3
   14194:	cmp	r8, #0
   14198:	mov	lr, r2
   1419c:	mov	r9, r1
   141a0:	mul	r7, r3, ip
   141a4:	mov	r6, r0
   141a8:	ldr	r4, [sp, #40]	; 0x28
   141ac:	beq	142f8 <pclose@plt+0x335c>
   141b0:	cmp	r4, #0
   141b4:	ble	14200 <pclose@plt+0x3264>
   141b8:	mov	r2, r8
   141bc:	mov	ip, #0
   141c0:	ldr	r1, [r2]
   141c4:	cmp	r1, #0
   141c8:	beq	141f0 <pclose@plt+0x3254>
   141cc:	ldr	r0, [r1, #8]
   141d0:	cmp	r0, #0
   141d4:	beq	141e4 <pclose@plt+0x3248>
   141d8:	ldr	r0, [r0]
   141dc:	cmp	r0, #0
   141e0:	bne	14208 <pclose@plt+0x326c>
   141e4:	ldr	r1, [r1]
   141e8:	cmp	r1, #0
   141ec:	bne	141cc <pclose@plt+0x3230>
   141f0:	add	ip, ip, #1
   141f4:	cmp	ip, r4
   141f8:	add	r2, r2, #12
   141fc:	bne	141c0 <pclose@plt+0x3224>
   14200:	mov	r2, #1
   14204:	b	1420c <pclose@plt+0x3270>
   14208:	mov	r2, #3
   1420c:	add	r0, sp, #44	; 0x2c
   14210:	mov	r1, lr
   14214:	str	r2, [sp, #4]
   14218:	str	r0, [sp]
   1421c:	mov	r2, r3
   14220:	mov	r0, r6
   14224:	mov	r3, r4
   14228:	bl	13fa8 <pclose@plt+0x300c>
   1422c:	mov	r1, r7
   14230:	mov	r0, r9
   14234:	mov	r3, r6
   14238:	mov	r2, r4
   1423c:	ldr	r5, [sp, #44]	; 0x2c
   14240:	bl	10dbc <fwrite@plt>
   14244:	sub	r5, r5, #2
   14248:	clz	r5, r5
   1424c:	lsr	r5, r5, #5
   14250:	cmp	r0, r4
   14254:	bne	14340 <pclose@plt+0x33a4>
   14258:	sub	r3, r8, #1
   1425c:	cmn	r3, #3
   14260:	bhi	142ec <pclose@plt+0x3350>
   14264:	cmp	r4, #0
   14268:	beq	142ec <pclose@plt+0x3350>
   1426c:	add	r4, r4, r4, lsl #1
   14270:	add	r9, r8, r4, lsl #2
   14274:	ldr	r7, [r8]
   14278:	cmp	r7, #0
   1427c:	beq	142d0 <pclose@plt+0x3334>
   14280:	ldr	r4, [r7, #8]
   14284:	cmp	r4, #0
   14288:	beq	142c4 <pclose@plt+0x3328>
   1428c:	ldr	r3, [r4]
   14290:	cmp	r3, #0
   14294:	beq	142a8 <pclose@plt+0x330c>
   14298:	mov	r2, r5
   1429c:	mov	r1, #1
   142a0:	mov	r0, r6
   142a4:	bl	13ef4 <pclose@plt+0x2f58>
   142a8:	ldr	r1, [r4, #8]
   142ac:	mov	r2, r5
   142b0:	mov	r0, r6
   142b4:	bl	13d18 <pclose@plt+0x2d7c>
   142b8:	ldr	r4, [r4]
   142bc:	cmp	r4, #0
   142c0:	bne	142a8 <pclose@plt+0x330c>
   142c4:	ldr	r7, [r7]
   142c8:	cmp	r7, #0
   142cc:	bne	14280 <pclose@plt+0x32e4>
   142d0:	add	r8, r8, #12
   142d4:	mov	r2, r5
   142d8:	mov	r1, #0
   142dc:	mov	r0, r6
   142e0:	bl	13ef4 <pclose@plt+0x2f58>
   142e4:	cmp	r8, r9
   142e8:	bne	14274 <pclose@plt+0x32d8>
   142ec:	mov	r0, r5
   142f0:	add	sp, sp, #12
   142f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   142f8:	add	ip, sp, #44	; 0x2c
   142fc:	mov	r2, r3
   14300:	mov	r1, lr
   14304:	str	ip, [sp]
   14308:	mov	r3, r4
   1430c:	str	r8, [sp, #4]
   14310:	bl	13fa8 <pclose@plt+0x300c>
   14314:	mov	r3, r6
   14318:	mov	r1, r7
   1431c:	mov	r0, r9
   14320:	mov	r2, r4
   14324:	ldr	r5, [sp, #44]	; 0x2c
   14328:	bl	10dbc <fwrite@plt>
   1432c:	sub	r5, r5, #2
   14330:	clz	r5, r5
   14334:	lsr	r5, r5, #5
   14338:	cmp	r4, r0
   1433c:	beq	142ec <pclose@plt+0x3350>
   14340:	ldr	r3, [pc, #40]	; 14370 <pclose@plt+0x33d4>
   14344:	mov	r2, #5
   14348:	ldr	r1, [pc, #36]	; 14374 <pclose@plt+0x33d8>
   1434c:	mov	r0, #0
   14350:	ldr	r4, [r3]
   14354:	bl	10d68 <dcgettext@plt>
   14358:	mov	r1, #1
   1435c:	mov	r2, r0
   14360:	mov	r0, r4
   14364:	bl	10ee8 <__fprintf_chk@plt>
   14368:	mov	r0, #74	; 0x4a
   1436c:	bl	10e64 <exit@plt>
   14370:	andeq	r8, r2, r8, lsr #2
   14374:	andeq	r6, r1, r0, ror r9
   14378:	push	{r4, r5, r6, lr}
   1437c:	ldr	r5, [r0]
   14380:	add	r6, r5, #1
   14384:	ldrb	ip, [r5]
   14388:	tst	ip, #128	; 0x80
   1438c:	beq	14428 <pclose@plt+0x348c>
   14390:	mov	r3, #128	; 0x80
   14394:	mov	lr, #0
   14398:	b	143a0 <pclose@plt+0x3404>
   1439c:	mov	lr, r4
   143a0:	asr	r3, r3, #1
   143a4:	tst	r3, ip
   143a8:	add	r4, lr, #1
   143ac:	bne	1439c <pclose@plt+0x3400>
   143b0:	cmp	r1, #0
   143b4:	cmpne	r1, r4
   143b8:	blt	14434 <pclose@plt+0x3498>
   143bc:	cmp	r4, #1
   143c0:	beq	14448 <pclose@plt+0x34ac>
   143c4:	sub	r3, r3, #1
   143c8:	cmp	lr, #0
   143cc:	and	r3, r3, ip
   143d0:	beq	14414 <pclose@plt+0x3478>
   143d4:	ldrb	r1, [r5, #1]
   143d8:	add	r5, r5, #2
   143dc:	and	ip, r1, #192	; 0xc0
   143e0:	cmp	ip, #128	; 0x80
   143e4:	bne	14448 <pclose@plt+0x34ac>
   143e8:	sub	lr, lr, #1
   143ec:	add	r6, r5, lr
   143f0:	b	14404 <pclose@plt+0x3468>
   143f4:	ldrb	r1, [r5], #1
   143f8:	and	ip, r1, #192	; 0xc0
   143fc:	cmp	ip, #128	; 0x80
   14400:	bne	14448 <pclose@plt+0x34ac>
   14404:	and	r1, r1, #63	; 0x3f
   14408:	cmp	r6, r5
   1440c:	orr	r3, r1, r3, lsl #6
   14410:	bne	143f4 <pclose@plt+0x3458>
   14414:	mov	r1, #0
   14418:	str	r6, [r0]
   1441c:	str	r1, [r2]
   14420:	mov	r0, r3
   14424:	pop	{r4, r5, r6, pc}
   14428:	cmp	r1, #0
   1442c:	movge	r3, ip
   14430:	bge	14414 <pclose@plt+0x3478>
   14434:	mvn	r3, #1
   14438:	str	r3, [r2]
   1443c:	mov	r3, #0
   14440:	mov	r0, r3
   14444:	pop	{r4, r5, r6, pc}
   14448:	mvn	r3, #0
   1444c:	str	r3, [r2]
   14450:	mov	r3, #0
   14454:	mov	r0, r3
   14458:	pop	{r4, r5, r6, pc}
   1445c:	push	{r4, lr}
   14460:	mov	r2, r1
   14464:	ldr	r1, [pc, #24]	; 14484 <pclose@plt+0x34e8>
   14468:	bl	10dc8 <ioctl@plt>
   1446c:	cmp	r0, #0
   14470:	popeq	{r4, pc}
   14474:	ldr	r0, [pc, #12]	; 14488 <pclose@plt+0x34ec>
   14478:	bl	10da4 <perror@plt>
   1447c:	mvn	r0, #0
   14480:	pop	{r4, pc}
   14484:	andeq	r4, r0, r0, asr #22
   14488:	andeq	r7, r1, r8, asr #9
   1448c:	push	{r4, lr}
   14490:	mov	r2, r1
   14494:	ldr	r1, [pc, #24]	; 144b4 <pclose@plt+0x3518>
   14498:	bl	10dc8 <ioctl@plt>
   1449c:	cmp	r0, #0
   144a0:	popeq	{r4, pc}
   144a4:	ldr	r0, [pc, #12]	; 144b8 <pclose@plt+0x351c>
   144a8:	bl	10da4 <perror@plt>
   144ac:	mvn	r0, #0
   144b0:	pop	{r4, pc}
   144b4:	andeq	r4, r0, r1, asr #22
   144b8:	ldrdeq	r7, [r1], -r4
   144bc:	push	{r4, lr}
   144c0:	mov	r2, r1
   144c4:	ldr	r1, [pc, #24]	; 144e4 <pclose@plt+0x3548>
   144c8:	bl	10dc8 <ioctl@plt>
   144cc:	cmp	r0, #0
   144d0:	popeq	{r4, pc}
   144d4:	ldr	r0, [pc, #12]	; 144e8 <pclose@plt+0x354c>
   144d8:	bl	10da4 <perror@plt>
   144dc:	mvn	r0, #0
   144e0:	pop	{r4, pc}
   144e4:	andeq	r4, r0, r9, ror #22
   144e8:	andeq	r7, r1, r0, ror #9
   144ec:	push	{r4, lr}
   144f0:	mov	r2, r1
   144f4:	ldr	r1, [pc, #24]	; 14514 <pclose@plt+0x3578>
   144f8:	bl	10dc8 <ioctl@plt>
   144fc:	cmp	r0, #0
   14500:	popeq	{r4, pc}
   14504:	ldr	r0, [pc, #12]	; 14518 <pclose@plt+0x357c>
   14508:	bl	10da4 <perror@plt>
   1450c:	mvn	r0, #0
   14510:	pop	{r4, pc}
   14514:	andeq	r4, r0, sl, ror #22
   14518:	strdeq	r7, [r1], -r0
   1451c:	push	{r4, r5, r6, r7, r8, lr}
   14520:	sub	sp, sp, #24
   14524:	ldr	r5, [pc, #308]	; 14660 <pclose@plt+0x36c4>
   14528:	add	r4, sp, #12
   1452c:	mov	r3, #0
   14530:	ldr	ip, [r5]
   14534:	mov	r6, r1
   14538:	mov	r2, r4
   1453c:	ldr	r1, [pc, #288]	; 14664 <pclose@plt+0x36c8>
   14540:	str	ip, [sp, #20]
   14544:	strh	r3, [sp, #12]
   14548:	str	r3, [sp, #16]
   1454c:	mov	r8, r0
   14550:	bl	10dc8 <ioctl@plt>
   14554:	cmp	r0, #0
   14558:	beq	145e0 <pclose@plt+0x3644>
   1455c:	bl	10e94 <__errno_location@plt>
   14560:	ldr	r3, [r0]
   14564:	cmp	r3, #12
   14568:	bne	14608 <pclose@plt+0x366c>
   1456c:	ldrh	r7, [sp, #12]
   14570:	cmp	r7, #0
   14574:	beq	14608 <pclose@plt+0x366c>
   14578:	lsl	r0, r7, #2
   1457c:	bl	10e04 <malloc@plt>
   14580:	cmp	r0, #0
   14584:	str	r0, [sp, #16]
   14588:	beq	14628 <pclose@plt+0x368c>
   1458c:	mov	r0, r8
   14590:	mov	r2, r4
   14594:	ldr	r1, [pc, #200]	; 14664 <pclose@plt+0x36c8>
   14598:	bl	10dc8 <ioctl@plt>
   1459c:	cmp	r0, #0
   145a0:	bne	14618 <pclose@plt+0x367c>
   145a4:	ldrh	r3, [sp, #12]
   145a8:	cmp	r3, r7
   145ac:	beq	145e0 <pclose@plt+0x3644>
   145b0:	ldr	r3, [pc, #176]	; 14668 <pclose@plt+0x36cc>
   145b4:	mov	r2, #5
   145b8:	ldr	r1, [pc, #172]	; 1466c <pclose@plt+0x36d0>
   145bc:	ldr	r8, [r3]
   145c0:	bl	10d68 <dcgettext@plt>
   145c4:	ldrh	r2, [sp, #12]
   145c8:	mov	r3, r7
   145cc:	mov	r1, #1
   145d0:	str	r2, [sp]
   145d4:	mov	r2, r0
   145d8:	mov	r0, r8
   145dc:	bl	10ee8 <__fprintf_chk@plt>
   145e0:	ldm	r4, {r0, r1}
   145e4:	mov	ip, #0
   145e8:	stm	r6, {r0, r1}
   145ec:	ldr	r2, [sp, #20]
   145f0:	ldr	r3, [r5]
   145f4:	mov	r0, ip
   145f8:	cmp	r2, r3
   145fc:	bne	1465c <pclose@plt+0x36c0>
   14600:	add	sp, sp, #24
   14604:	pop	{r4, r5, r6, r7, r8, pc}
   14608:	ldr	r0, [pc, #96]	; 14670 <pclose@plt+0x36d4>
   1460c:	bl	10da4 <perror@plt>
   14610:	mvn	ip, #0
   14614:	b	145ec <pclose@plt+0x3650>
   14618:	ldr	r0, [pc, #84]	; 14674 <pclose@plt+0x36d8>
   1461c:	bl	10da4 <perror@plt>
   14620:	mvn	ip, #0
   14624:	b	145ec <pclose@plt+0x3650>
   14628:	ldr	r3, [pc, #56]	; 14668 <pclose@plt+0x36cc>
   1462c:	mov	r2, #5
   14630:	ldr	r1, [pc, #64]	; 14678 <pclose@plt+0x36dc>
   14634:	ldr	r4, [r3]
   14638:	bl	10d68 <dcgettext@plt>
   1463c:	ldr	r3, [pc, #56]	; 1467c <pclose@plt+0x36e0>
   14640:	mov	r1, #1
   14644:	ldr	r3, [r3]
   14648:	mov	r2, r0
   1464c:	mov	r0, r4
   14650:	bl	10ee8 <__fprintf_chk@plt>
   14654:	mvn	ip, #0
   14658:	b	145ec <pclose@plt+0x3650>
   1465c:	bl	10d80 <__stack_chk_fail@plt>
   14660:	andeq	r7, r2, r8, lsl #30
   14664:	andeq	r4, r0, r6, ror #22
   14668:	andeq	r8, r2, r8, lsr #2
   1466c:	andeq	r7, r1, ip, lsl r5
   14670:	andeq	r7, r1, r0, lsl #10
   14674:	andeq	r7, r1, r0, lsl r5
   14678:	andeq	r7, r1, r0, lsr #5
   1467c:	andeq	r8, r2, r0, asr r1
   14680:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14684:	sub	sp, sp, #16
   14688:	ldr	r9, [pc, #220]	; 1476c <pclose@plt+0x37d0>
   1468c:	cmp	r1, #0
   14690:	mov	r4, r0
   14694:	ldr	r3, [r9]
   14698:	mov	r5, r2
   1469c:	str	r3, [sp, #12]
   146a0:	beq	14758 <pclose@plt+0x37bc>
   146a4:	ldrh	r3, [r1, #4]
   146a8:	ldr	r0, [r1]
   146ac:	add	r6, sp, #4
   146b0:	str	r0, [sp, #4]
   146b4:	strh	r3, [r6, #4]
   146b8:	ldr	r7, [pc, #176]	; 14770 <pclose@plt+0x37d4>
   146bc:	ldr	r8, [pc, #176]	; 14774 <pclose@plt+0x37d8>
   146c0:	b	14708 <pclose@plt+0x376c>
   146c4:	cmp	r5, #0
   146c8:	beq	1472c <pclose@plt+0x3790>
   146cc:	mov	r2, r5
   146d0:	mov	r1, r8
   146d4:	mov	r0, r4
   146d8:	bl	10dc8 <ioctl@plt>
   146dc:	cmp	r0, #0
   146e0:	beq	1472c <pclose@plt+0x3790>
   146e4:	bl	10e94 <__errno_location@plt>
   146e8:	ldr	r3, [r0]
   146ec:	cmp	r3, #12
   146f0:	bne	14748 <pclose@plt+0x37ac>
   146f4:	ldrh	r3, [sp, #8]
   146f8:	cmp	r3, #99	; 0x63
   146fc:	bhi	14748 <pclose@plt+0x37ac>
   14700:	add	r3, r3, #1
   14704:	strh	r3, [sp, #8]
   14708:	mov	r2, r6
   1470c:	mov	r1, r7
   14710:	mov	r0, r4
   14714:	bl	10dc8 <ioctl@plt>
   14718:	subs	sl, r0, #0
   1471c:	beq	146c4 <pclose@plt+0x3728>
   14720:	ldr	r0, [pc, #80]	; 14778 <pclose@plt+0x37dc>
   14724:	bl	10da4 <perror@plt>
   14728:	mvn	sl, #0
   1472c:	ldr	r2, [sp, #12]
   14730:	ldr	r3, [r9]
   14734:	mov	r0, sl
   14738:	cmp	r2, r3
   1473c:	bne	14768 <pclose@plt+0x37cc>
   14740:	add	sp, sp, #16
   14744:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14748:	ldr	r0, [pc, #44]	; 1477c <pclose@plt+0x37e0>
   1474c:	bl	10da4 <perror@plt>
   14750:	mvn	sl, #0
   14754:	b	1472c <pclose@plt+0x3790>
   14758:	str	r1, [sp, #4]
   1475c:	strh	r1, [sp, #8]
   14760:	add	r6, sp, #4
   14764:	b	146b8 <pclose@plt+0x371c>
   14768:	bl	10d80 <__stack_chk_fail@plt>
   1476c:	andeq	r7, r2, r8, lsl #30
   14770:	andeq	r4, r0, r8, ror #22
   14774:	andeq	r4, r0, r7, ror #22
   14778:	andeq	r7, r1, r4, asr #10
   1477c:	andeq	r7, r1, r4, asr r5
   14780:	push	{r4, r5, r6, lr}
   14784:	mov	r6, r0
   14788:	ldr	r4, [pc, #72]	; 147d8 <pclose@plt+0x383c>
   1478c:	mov	r5, r1
   14790:	ldmib	r4, {r0, r3}
   14794:	ldr	r1, [r4]
   14798:	cmp	r1, r3
   1479c:	beq	147bc <pclose@plt+0x3820>
   147a0:	lsl	r3, r1, #2
   147a4:	add	r2, r0, r3
   147a8:	add	r1, r1, #1
   147ac:	strh	r6, [r2, #2]
   147b0:	str	r1, [r4]
   147b4:	strh	r5, [r0, r3]
   147b8:	pop	{r4, r5, r6, pc}
   147bc:	add	r3, r1, #4096	; 0x1000
   147c0:	mov	r1, r3
   147c4:	str	r3, [r4, #8]
   147c8:	bl	134cc <pclose@plt+0x2530>
   147cc:	ldr	r1, [r4]
   147d0:	str	r0, [r4, #4]
   147d4:	b	147a0 <pclose@plt+0x3804>
   147d8:	andeq	r8, r2, ip, lsr r1
   147dc:	push	{r4, r5, r6, lr}
   147e0:	ldr	r4, [r0]
   147e4:	ldrb	r3, [r4]
   147e8:	cmp	r3, #9
   147ec:	cmpne	r3, #32
   147f0:	bne	14804 <pclose@plt+0x3868>
   147f4:	ldrb	r3, [r4, #1]!
   147f8:	cmp	r3, #9
   147fc:	cmpne	r3, #32
   14800:	beq	147f4 <pclose@plt+0x3858>
   14804:	cmp	r3, #85	; 0x55
   14808:	bne	148a0 <pclose@plt+0x3904>
   1480c:	ldrb	r3, [r4, #1]
   14810:	cmp	r3, #43	; 0x2b
   14814:	bne	148a0 <pclose@plt+0x3904>
   14818:	mov	r5, r0
   1481c:	bl	10e58 <__ctype_b_loc@plt>
   14820:	ldrb	r2, [r4, #2]
   14824:	lsl	r2, r2, #1
   14828:	ldr	r3, [r0]
   1482c:	ldrh	r2, [r3, r2]
   14830:	tst	r2, #4096	; 0x1000
   14834:	beq	148a0 <pclose@plt+0x3904>
   14838:	ldrb	r2, [r4, #3]
   1483c:	lsl	r2, r2, #1
   14840:	ldrh	r2, [r3, r2]
   14844:	tst	r2, #4096	; 0x1000
   14848:	beq	148a0 <pclose@plt+0x3904>
   1484c:	ldrb	r2, [r4, #4]
   14850:	lsl	r2, r2, #1
   14854:	ldrh	r2, [r3, r2]
   14858:	tst	r2, #4096	; 0x1000
   1485c:	beq	148a0 <pclose@plt+0x3904>
   14860:	ldrb	r2, [r4, #5]
   14864:	lsl	r2, r2, #1
   14868:	ldrh	r2, [r3, r2]
   1486c:	tst	r2, #4096	; 0x1000
   14870:	beq	148a0 <pclose@plt+0x3904>
   14874:	ldrb	r2, [r4, #6]
   14878:	lsl	r2, r2, #1
   1487c:	ldrh	r1, [r3, r2]
   14880:	ands	r1, r1, #4096	; 0x1000
   14884:	bne	148a0 <pclose@plt+0x3904>
   14888:	add	r3, r4, #6
   1488c:	str	r3, [r5]
   14890:	add	r0, r4, #2
   14894:	mov	r2, #16
   14898:	pop	{r4, r5, r6, lr}
   1489c:	b	10cfc <strtol@plt>
   148a0:	mvn	r0, #0
   148a4:	pop	{r4, r5, r6, pc}
   148a8:	push	{r4, r5, r6, lr}
   148ac:	sub	sp, sp, #16
   148b0:	ldr	r6, [pc, #80]	; 14908 <pclose@plt+0x396c>
   148b4:	add	r4, sp, #4
   148b8:	mov	r5, r0
   148bc:	ldr	r3, [r6]
   148c0:	mov	r0, r1
   148c4:	mov	r1, r4
   148c8:	str	r3, [sp, #12]
   148cc:	bl	1451c <pclose@plt+0x3580>
   148d0:	cmp	r0, #0
   148d4:	bne	148fc <pclose@plt+0x3960>
   148d8:	ldm	r4, {r0, r1}
   148dc:	ldr	r2, [sp, #12]
   148e0:	ldr	r3, [r6]
   148e4:	stm	r5, {r0, r1}
   148e8:	cmp	r2, r3
   148ec:	mov	r0, r5
   148f0:	bne	14904 <pclose@plt+0x3968>
   148f4:	add	sp, sp, #16
   148f8:	pop	{r4, r5, r6, pc}
   148fc:	mov	r0, #1
   14900:	bl	10e64 <exit@plt>
   14904:	bl	10d80 <__stack_chk_fail@plt>
   14908:	andeq	r7, r2, r8, lsl #30
   1490c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14910:	sub	sp, sp, #69632	; 0x11000
   14914:	ldr	fp, [pc, #1432]	; 14eb4 <pclose@plt+0x3f18>
   14918:	sub	sp, sp, #60	; 0x3c
   1491c:	ldr	r2, [pc, #1428]	; 14eb8 <pclose@plt+0x3f1c>
   14920:	add	lr, sp, #69632	; 0x11000
   14924:	ldr	ip, [fp]
   14928:	add	lr, lr, #52	; 0x34
   1492c:	str	r0, [sp, #24]
   14930:	mov	r8, r1
   14934:	mov	r0, r1
   14938:	add	r3, sp, #44	; 0x2c
   1493c:	add	r1, r2, #16
   14940:	str	ip, [lr]
   14944:	bl	15dd4 <pclose@plt+0x4e38>
   14948:	cmp	r0, #0
   1494c:	bne	14e48 <pclose@plt+0x3eac>
   14950:	ldr	r3, [pc, #1380]	; 14ebc <pclose@plt+0x3f20>
   14954:	ldr	r3, [r3]
   14958:	cmp	r3, #0
   1495c:	bne	14c14 <pclose@plt+0x3c78>
   14960:	add	r7, sp, #4096	; 0x1000
   14964:	add	r5, sp, #4096	; 0x1000
   14968:	ldr	sl, [pc, #1360]	; 14ec0 <pclose@plt+0x3f24>
   1496c:	ldr	r9, [pc, #1360]	; 14ec4 <pclose@plt+0x3f28>
   14970:	add	r7, r7, #56	; 0x38
   14974:	add	r5, r5, #52	; 0x34
   14978:	str	r8, [sp, #20]
   1497c:	ldr	r2, [sp, #44]	; 0x2c
   14980:	mov	r1, #65536	; 0x10000
   14984:	mov	r0, r5
   14988:	bl	10d2c <fgets@plt>
   1498c:	cmp	r0, #0
   14990:	beq	14ac4 <pclose@plt+0x3b28>
   14994:	mov	r1, #10
   14998:	mov	r0, r5
   1499c:	bl	10e88 <strchr@plt>
   149a0:	subs	r3, r0, #0
   149a4:	beq	14b38 <pclose@plt+0x3b9c>
   149a8:	mov	r2, #0
   149ac:	strb	r2, [r3]
   149b0:	ldrb	r3, [r7, #-4]
   149b4:	str	r5, [sp, #36]	; 0x24
   149b8:	mov	r0, r5
   149bc:	cmp	r3, #32
   149c0:	cmpne	r3, #9
   149c4:	bne	149dc <pclose@plt+0x3a40>
   149c8:	ldrb	r3, [r0, #1]!
   149cc:	cmp	r3, #9
   149d0:	cmpne	r3, #32
   149d4:	beq	149c8 <pclose@plt+0x3a2c>
   149d8:	str	r0, [sp, #36]	; 0x24
   149dc:	cmp	r3, #0
   149e0:	sub	r6, r3, #35	; 0x23
   149e4:	clz	r6, r6
   149e8:	lsr	r6, r6, #5
   149ec:	moveq	r6, #1
   149f0:	cmp	r6, #0
   149f4:	bne	1497c <pclose@plt+0x39e0>
   149f8:	mov	r2, r6
   149fc:	add	r1, sp, #40	; 0x28
   14a00:	bl	10cfc <strtol@plt>
   14a04:	ldrd	r2, [sp, #36]	; 0x24
   14a08:	cmp	r3, r2
   14a0c:	mov	r4, r0
   14a10:	bne	14a1c <pclose@plt+0x3a80>
   14a14:	b	14dac <pclose@plt+0x3e10>
   14a18:	add	r3, r3, #1
   14a1c:	str	r3, [sp, #36]	; 0x24
   14a20:	ldrb	r2, [r3]
   14a24:	cmp	r2, #9
   14a28:	cmpne	r2, #32
   14a2c:	beq	14a18 <pclose@plt+0x3a7c>
   14a30:	cmp	r2, #45	; 0x2d
   14a34:	beq	14b6c <pclose@plt+0x3bd0>
   14a38:	cmp	r4, r9
   14a3c:	bhi	14d70 <pclose@plt+0x3dd4>
   14a40:	add	r8, sp, #36	; 0x24
   14a44:	b	14a50 <pclose@plt+0x3ab4>
   14a48:	mov	r0, r4
   14a4c:	bl	14780 <pclose@plt+0x37e4>
   14a50:	mov	r0, r8
   14a54:	bl	147dc <pclose@plt+0x3840>
   14a58:	subs	r1, r0, #0
   14a5c:	bge	14a48 <pclose@plt+0x3aac>
   14a60:	ldr	r3, [sp, #36]	; 0x24
   14a64:	b	14a70 <pclose@plt+0x3ad4>
   14a68:	add	r3, r3, #1
   14a6c:	str	r3, [sp, #36]	; 0x24
   14a70:	ldrb	r2, [r3]
   14a74:	cmp	r2, #9
   14a78:	cmpne	r2, #32
   14a7c:	beq	14a68 <pclose@plt+0x3acc>
   14a80:	cmp	r2, #0
   14a84:	cmpne	r2, #35	; 0x23
   14a88:	beq	1497c <pclose@plt+0x39e0>
   14a8c:	ldr	r3, [pc, #1076]	; 14ec8 <pclose@plt+0x3f2c>
   14a90:	mov	r2, #5
   14a94:	ldr	r1, [pc, #1072]	; 14ecc <pclose@plt+0x3f30>
   14a98:	mov	r0, #0
   14a9c:	ldr	r4, [r3]
   14aa0:	bl	10d68 <dcgettext@plt>
   14aa4:	ldr	r2, [sp, #36]	; 0x24
   14aa8:	ldr	r3, [sp, #20]
   14aac:	str	r2, [sp]
   14ab0:	mov	r1, #1
   14ab4:	mov	r2, r0
   14ab8:	mov	r0, r4
   14abc:	bl	10ee8 <__fprintf_chk@plt>
   14ac0:	b	1497c <pclose@plt+0x39e0>
   14ac4:	ldr	r4, [pc, #1028]	; 14ed0 <pclose@plt+0x3f34>
   14ac8:	add	r0, sp, #44	; 0x2c
   14acc:	bl	15d98 <pclose@plt+0x4dfc>
   14ad0:	ldr	r3, [r4]
   14ad4:	cmp	r3, #0
   14ad8:	bne	14aec <pclose@plt+0x3b50>
   14adc:	ldr	r2, [pc, #1008]	; 14ed4 <pclose@plt+0x3f38>
   14ae0:	ldr	r0, [r2]
   14ae4:	cmp	r0, #0
   14ae8:	beq	14c9c <pclose@plt+0x3d00>
   14aec:	ldr	ip, [r4, #4]
   14af0:	ldr	r0, [sp, #24]
   14af4:	ldr	r2, [pc, #988]	; 14ed8 <pclose@plt+0x3f3c>
   14af8:	mov	r1, #0
   14afc:	strh	r3, [r4, #12]
   14b00:	str	ip, [r4, #16]
   14b04:	bl	14680 <pclose@plt+0x36e4>
   14b08:	cmp	r0, #0
   14b0c:	streq	r0, [r4]
   14b10:	bne	14de4 <pclose@plt+0x3e48>
   14b14:	add	r3, sp, #69632	; 0x11000
   14b18:	add	r3, r3, #52	; 0x34
   14b1c:	ldr	r2, [r3]
   14b20:	ldr	r3, [fp]
   14b24:	cmp	r2, r3
   14b28:	bne	14de0 <pclose@plt+0x3e44>
   14b2c:	add	sp, sp, #69632	; 0x11000
   14b30:	add	sp, sp, #60	; 0x3c
   14b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b38:	ldr	r3, [pc, #904]	; 14ec8 <pclose@plt+0x3f2c>
   14b3c:	mov	r2, #5
   14b40:	ldr	r1, [pc, #916]	; 14edc <pclose@plt+0x3f40>
   14b44:	ldr	r4, [r3]
   14b48:	bl	10d68 <dcgettext@plt>
   14b4c:	ldr	r2, [sp, #20]
   14b50:	ldr	r3, [sl]
   14b54:	str	r2, [sp]
   14b58:	mov	r1, #1
   14b5c:	mov	r2, r0
   14b60:	mov	r0, r4
   14b64:	bl	10ee8 <__fprintf_chk@plt>
   14b68:	b	149b0 <pclose@plt+0x3a14>
   14b6c:	add	r3, r3, #1
   14b70:	mov	r0, r3
   14b74:	add	r1, sp, #40	; 0x28
   14b78:	mov	r2, #0
   14b7c:	str	r3, [sp, #36]	; 0x24
   14b80:	bl	10cfc <strtol@plt>
   14b84:	ldr	r8, [sp, #40]	; 0x28
   14b88:	ldr	r3, [sp, #36]	; 0x24
   14b8c:	cmp	r8, r3
   14b90:	mov	r6, r0
   14b94:	beq	14dec <pclose@plt+0x3e50>
   14b98:	cmp	r4, r9
   14b9c:	str	r8, [sp, #36]	; 0x24
   14ba0:	bhi	14d70 <pclose@plt+0x3dd4>
   14ba4:	cmp	r0, #0
   14ba8:	beq	14a40 <pclose@plt+0x3aa4>
   14bac:	cmp	r0, r9
   14bb0:	cmple	r4, r0
   14bb4:	ble	14bc4 <pclose@plt+0x3c28>
   14bb8:	b	14e04 <pclose@plt+0x3e68>
   14bbc:	add	r8, r8, #1
   14bc0:	str	r8, [sp, #36]	; 0x24
   14bc4:	ldrb	r3, [r8]
   14bc8:	cmp	r3, #9
   14bcc:	cmpne	r3, #32
   14bd0:	beq	14bbc <pclose@plt+0x3c20>
   14bd4:	mov	r2, #4
   14bd8:	ldr	r1, [pc, #768]	; 14ee0 <pclose@plt+0x3f44>
   14bdc:	mov	r0, r8
   14be0:	bl	10f60 <strncmp@plt>
   14be4:	cmp	r0, #0
   14be8:	bne	14c34 <pclose@plt+0x3c98>
   14bec:	add	r6, r6, #1
   14bf0:	add	r8, r8, #4
   14bf4:	str	r8, [sp, #36]	; 0x24
   14bf8:	mov	r1, r4
   14bfc:	mov	r0, r4
   14c00:	add	r4, r4, #1
   14c04:	bl	14780 <pclose@plt+0x37e4>
   14c08:	cmp	r4, r6
   14c0c:	bne	14bf8 <pclose@plt+0x3c5c>
   14c10:	b	14a60 <pclose@plt+0x3ac4>
   14c14:	mov	r2, #5
   14c18:	ldr	r1, [pc, #708]	; 14ee4 <pclose@plt+0x3f48>
   14c1c:	bl	10d68 <dcgettext@plt>
   14c20:	add	r2, sp, #52	; 0x34
   14c24:	mov	r1, r0
   14c28:	mov	r0, #1
   14c2c:	bl	10ed0 <__printf_chk@plt>
   14c30:	b	14960 <pclose@plt+0x39c4>
   14c34:	add	r8, sp, #36	; 0x24
   14c38:	mov	r0, r8
   14c3c:	bl	147dc <pclose@plt+0x3840>
   14c40:	ldr	r3, [sp, #36]	; 0x24
   14c44:	str	r0, [sp, #28]
   14c48:	ldrb	r2, [r3]
   14c4c:	cmp	r2, #32
   14c50:	cmpne	r2, #9
   14c54:	bne	14c70 <pclose@plt+0x3cd4>
   14c58:	add	r3, r3, #1
   14c5c:	str	r3, [sp, #36]	; 0x24
   14c60:	ldrb	r2, [r3]
   14c64:	cmp	r2, #9
   14c68:	cmpne	r2, #32
   14c6c:	beq	14c58 <pclose@plt+0x3cbc>
   14c70:	cmp	r2, #45	; 0x2d
   14c74:	beq	14ccc <pclose@plt+0x3d30>
   14c78:	ldr	r8, [sp, #28]
   14c7c:	add	r6, r6, #1
   14c80:	mov	r0, r4
   14c84:	mov	r1, r8
   14c88:	add	r4, r4, #1
   14c8c:	bl	14780 <pclose@plt+0x37e4>
   14c90:	cmp	r4, r6
   14c94:	bne	14c80 <pclose@plt+0x3ce4>
   14c98:	b	14a60 <pclose@plt+0x3ac4>
   14c9c:	ldr	r3, [pc, #548]	; 14ec8 <pclose@plt+0x3f2c>
   14ca0:	mov	r2, #5
   14ca4:	ldr	r1, [pc, #572]	; 14ee8 <pclose@plt+0x3f4c>
   14ca8:	ldr	r4, [r3]
   14cac:	bl	10d68 <dcgettext@plt>
   14cb0:	ldr	r3, [pc, #520]	; 14ec0 <pclose@plt+0x3f24>
   14cb4:	mov	r1, #1
   14cb8:	ldr	r3, [r3]
   14cbc:	mov	r2, r0
   14cc0:	mov	r0, r4
   14cc4:	bl	10ee8 <__fprintf_chk@plt>
   14cc8:	b	14b14 <pclose@plt+0x3b78>
   14ccc:	add	r3, r3, #1
   14cd0:	mov	r0, r8
   14cd4:	str	r3, [sp, #36]	; 0x24
   14cd8:	bl	147dc <pclose@plt+0x3840>
   14cdc:	ldr	r2, [sp, #28]
   14ce0:	lsr	r3, r0, #31
   14ce4:	orrs	r3, r3, r2, lsr #31
   14ce8:	bne	14d28 <pclose@plt+0x3d8c>
   14cec:	ldr	r2, [sp, #28]
   14cf0:	sub	r1, r6, r4
   14cf4:	sub	r2, r0, r2
   14cf8:	cmp	r2, r1
   14cfc:	bne	14e58 <pclose@plt+0x3ebc>
   14d00:	ldr	r3, [sp, #28]
   14d04:	add	r6, r6, #1
   14d08:	sub	r8, r3, r4
   14d0c:	add	r1, r8, r4
   14d10:	mov	r0, r4
   14d14:	add	r4, r4, #1
   14d18:	bl	14780 <pclose@plt+0x37e4>
   14d1c:	cmp	r4, r6
   14d20:	bne	14d0c <pclose@plt+0x3d70>
   14d24:	b	14a60 <pclose@plt+0x3ac4>
   14d28:	ldr	ip, [pc, #408]	; 14ec8 <pclose@plt+0x3f2c>
   14d2c:	mov	r2, #5
   14d30:	ldr	r1, [pc, #436]	; 14eec <pclose@plt+0x3f50>
   14d34:	mov	r0, #0
   14d38:	ldr	r5, [ip]
   14d3c:	ldr	r8, [sp, #20]
   14d40:	str	r6, [sp, #24]
   14d44:	bl	10d68 <dcgettext@plt>
   14d48:	ldr	r3, [sp, #24]
   14d4c:	str	r4, [sp]
   14d50:	str	r3, [sp, #4]
   14d54:	mov	r1, #1
   14d58:	mov	r3, r8
   14d5c:	mov	r2, r0
   14d60:	mov	r0, r5
   14d64:	bl	10ee8 <__fprintf_chk@plt>
   14d68:	mov	r0, #65	; 0x41
   14d6c:	bl	10e64 <exit@plt>
   14d70:	ldr	r3, [pc, #336]	; 14ec8 <pclose@plt+0x3f2c>
   14d74:	mov	r2, #5
   14d78:	ldr	r1, [pc, #368]	; 14ef0 <pclose@plt+0x3f54>
   14d7c:	mov	r0, #0
   14d80:	ldr	r5, [r3]
   14d84:	ldr	r8, [sp, #20]
   14d88:	bl	10d68 <dcgettext@plt>
   14d8c:	str	r4, [sp]
   14d90:	mov	r3, r8
   14d94:	mov	r1, #1
   14d98:	mov	r2, r0
   14d9c:	mov	r0, r5
   14da0:	bl	10ee8 <__fprintf_chk@plt>
   14da4:	mov	r0, #65	; 0x41
   14da8:	bl	10e64 <exit@plt>
   14dac:	ldr	r3, [pc, #276]	; 14ec8 <pclose@plt+0x3f2c>
   14db0:	ldr	r1, [pc, #316]	; 14ef4 <pclose@plt+0x3f58>
   14db4:	mov	r0, r6
   14db8:	ldr	r4, [r3]
   14dbc:	mov	r2, #5
   14dc0:	bl	10d68 <dcgettext@plt>
   14dc4:	mov	r3, r5
   14dc8:	mov	r1, #1
   14dcc:	mov	r2, r0
   14dd0:	mov	r0, r4
   14dd4:	bl	10ee8 <__fprintf_chk@plt>
   14dd8:	mov	r0, #65	; 0x41
   14ddc:	bl	10e64 <exit@plt>
   14de0:	bl	10d80 <__stack_chk_fail@plt>
   14de4:	mov	r0, #1
   14de8:	bl	10e64 <exit@plt>
   14dec:	ldr	r3, [pc, #212]	; 14ec8 <pclose@plt+0x3f2c>
   14df0:	mov	r2, #5
   14df4:	ldr	r1, [pc, #248]	; 14ef4 <pclose@plt+0x3f58>
   14df8:	ldr	r4, [r3]
   14dfc:	mov	r0, #0
   14e00:	b	14dc0 <pclose@plt+0x3e24>
   14e04:	ldr	ip, [pc, #188]	; 14ec8 <pclose@plt+0x3f2c>
   14e08:	str	r0, [sp, #24]
   14e0c:	mov	r2, #5
   14e10:	ldr	r1, [pc, #224]	; 14ef8 <pclose@plt+0x3f5c>
   14e14:	mov	r0, #0
   14e18:	ldr	r4, [ip]
   14e1c:	ldr	r8, [sp, #20]
   14e20:	bl	10d68 <dcgettext@plt>
   14e24:	ldr	r3, [sp, #24]
   14e28:	mov	r1, #1
   14e2c:	str	r3, [sp]
   14e30:	mov	r3, r8
   14e34:	mov	r2, r0
   14e38:	mov	r0, r4
   14e3c:	bl	10ee8 <__fprintf_chk@plt>
   14e40:	mov	r0, #65	; 0x41
   14e44:	bl	10e64 <exit@plt>
   14e48:	mov	r0, r8
   14e4c:	bl	10da4 <perror@plt>
   14e50:	mov	r0, #66	; 0x42
   14e54:	bl	10e64 <exit@plt>
   14e58:	ldr	ip, [pc, #104]	; 14ec8 <pclose@plt+0x3f2c>
   14e5c:	mov	r2, r3
   14e60:	ldr	r8, [sp, #20]
   14e64:	ldr	r1, [pc, #144]	; 14efc <pclose@plt+0x3f60>
   14e68:	str	r6, [sp, #20]
   14e6c:	mov	r6, r0
   14e70:	mov	r0, r2
   14e74:	mov	r2, #5
   14e78:	ldr	r5, [ip]
   14e7c:	bl	10d68 <dcgettext@plt>
   14e80:	ldr	r3, [sp, #20]
   14e84:	str	r4, [sp, #8]
   14e88:	str	r3, [sp, #12]
   14e8c:	ldr	r3, [sp, #28]
   14e90:	str	r6, [sp, #4]
   14e94:	str	r3, [sp]
   14e98:	mov	r1, #1
   14e9c:	mov	r3, r8
   14ea0:	mov	r2, r0
   14ea4:	mov	r0, r5
   14ea8:	bl	10ee8 <__fprintf_chk@plt>
   14eac:	mov	r0, #65	; 0x41
   14eb0:	bl	10e64 <exit@plt>
   14eb4:	andeq	r7, r2, r8, lsl #30
   14eb8:	andeq	r7, r1, r0, ror #10
   14ebc:	andeq	r8, r2, r0, lsr r1
   14ec0:	andeq	r8, r2, r0, asr r1
   14ec4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   14ec8:	andeq	r8, r2, r8, lsr #2
   14ecc:	andeq	r7, r1, r8, asr #13
   14ed0:	andeq	r8, r2, ip, lsr r1
   14ed4:	andeq	r8, r2, r8, lsr r1
   14ed8:	andeq	r8, r2, r8, asr #2
   14edc:	andeq	r7, r1, r0, lsr #11
   14ee0:	andeq	r7, r1, r4, lsr r7
   14ee4:	andeq	r7, r1, ip, ror r5
   14ee8:	andeq	r7, r1, r8, ror #13
   14eec:	andeq	r7, r1, r8, lsr #12
   14ef0:	ldrdeq	r7, [r1], -r4
   14ef4:	andeq	r7, r1, r0, asr #11
   14ef8:	andeq	r7, r1, r8, lsl #12
   14efc:	andeq	r7, r1, r0, ror r6
   14f00:	push	{r4, r5, r6, r7, r8, r9, lr}
   14f04:	sub	sp, sp, #28
   14f08:	ldr	r8, [pc, #228]	; 14ff4 <pclose@plt+0x4058>
   14f0c:	mov	r9, r1
   14f10:	mov	r4, r0
   14f14:	ldr	r3, [r8]
   14f18:	mov	r0, r1
   14f1c:	ldr	r1, [pc, #212]	; 14ff8 <pclose@plt+0x405c>
   14f20:	str	r3, [sp, #20]
   14f24:	bl	10d08 <fopen@plt>
   14f28:	subs	r6, r0, #0
   14f2c:	beq	14fe0 <pclose@plt+0x4044>
   14f30:	mov	r1, r4
   14f34:	add	r0, sp, #12
   14f38:	bl	148a8 <pclose@plt+0x390c>
   14f3c:	ldrh	r5, [sp, #12]
   14f40:	ldr	r4, [sp, #16]
   14f44:	cmp	r5, #0
   14f48:	beq	14f78 <pclose@plt+0x3fdc>
   14f4c:	ldr	r7, [pc, #168]	; 14ffc <pclose@plt+0x4060>
   14f50:	add	r5, r4, r5, lsl #2
   14f54:	ldrh	r3, [r4, #2]
   14f58:	ldrh	r1, [r4], #4
   14f5c:	mov	r2, r7
   14f60:	mov	r0, r6
   14f64:	str	r1, [sp]
   14f68:	mov	r1, #1
   14f6c:	bl	10ee8 <__fprintf_chk@plt>
   14f70:	cmp	r5, r4
   14f74:	bne	14f54 <pclose@plt+0x3fb8>
   14f78:	mov	r0, r6
   14f7c:	bl	10f00 <fclose@plt>
   14f80:	ldr	r3, [pc, #120]	; 15000 <pclose@plt+0x4064>
   14f84:	ldr	r3, [r3]
   14f88:	cmp	r3, #0
   14f8c:	bne	14fa8 <pclose@plt+0x400c>
   14f90:	ldr	r2, [sp, #20]
   14f94:	ldr	r3, [r8]
   14f98:	cmp	r2, r3
   14f9c:	bne	14ff0 <pclose@plt+0x4054>
   14fa0:	add	sp, sp, #28
   14fa4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14fa8:	mov	r2, #5
   14fac:	ldr	r1, [pc, #80]	; 15004 <pclose@plt+0x4068>
   14fb0:	mov	r0, #0
   14fb4:	bl	10d68 <dcgettext@plt>
   14fb8:	ldr	r2, [sp, #20]
   14fbc:	ldr	r3, [r8]
   14fc0:	cmp	r2, r3
   14fc4:	mov	r1, r0
   14fc8:	bne	14ff0 <pclose@plt+0x4054>
   14fcc:	mov	r2, r9
   14fd0:	mov	r0, #1
   14fd4:	add	sp, sp, #28
   14fd8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   14fdc:	b	10ed0 <__printf_chk@plt>
   14fe0:	mov	r0, r9
   14fe4:	bl	10da4 <perror@plt>
   14fe8:	mov	r0, #1
   14fec:	bl	10e64 <exit@plt>
   14ff0:	bl	10d80 <__stack_chk_fail@plt>
   14ff4:	andeq	r7, r2, r8, lsl #30
   14ff8:	andeq	r6, r1, r4, asr pc
   14ffc:	andeq	r7, r1, ip, lsr r7
   15000:	andeq	r8, r2, r0, lsr r1
   15004:	andeq	r7, r1, ip, asr #14
   15008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1500c:	mov	r9, r2
   15010:	ldr	r2, [pc, #356]	; 1517c <pclose@plt+0x41e0>
   15014:	sub	sp, sp, #28
   15018:	mov	r7, r1
   1501c:	ldr	r2, [r2]
   15020:	mov	r1, r0
   15024:	add	r0, sp, #12
   15028:	mov	r8, r3
   1502c:	str	r2, [sp, #20]
   15030:	bl	148a8 <pclose@plt+0x390c>
   15034:	ldr	r3, [sp, #16]
   15038:	cmp	r9, #0
   1503c:	ldr	r6, [pc, #316]	; 15180 <pclose@plt+0x41e4>
   15040:	ldrh	sl, [sp, #12]
   15044:	str	r3, [sp, #4]
   15048:	ble	150d0 <pclose@plt+0x4134>
   1504c:	ldr	r3, [sp, #4]
   15050:	mov	fp, #0
   15054:	add	r5, r3, sl, lsl #2
   15058:	ldr	r2, [r6]
   1505c:	cmp	r2, #0
   15060:	bne	15120 <pclose@plt+0x4184>
   15064:	cmp	sl, #0
   15068:	beq	150b4 <pclose@plt+0x4118>
   1506c:	ldr	r4, [sp, #4]
   15070:	b	15080 <pclose@plt+0x40e4>
   15074:	add	r4, r4, #4
   15078:	cmp	r4, r5
   1507c:	beq	150b4 <pclose@plt+0x4118>
   15080:	ldrh	r3, [r4, #2]
   15084:	cmp	r3, fp
   15088:	bne	15074 <pclose@plt+0x40d8>
   1508c:	ldr	r3, [r6]
   15090:	ldrh	r1, [r4]
   15094:	cmp	r3, #0
   15098:	bne	15108 <pclose@plt+0x416c>
   1509c:	mov	r2, r8
   150a0:	mov	r0, r7
   150a4:	add	r4, r4, #4
   150a8:	bl	13d18 <pclose@plt+0x2d7c>
   150ac:	cmp	r4, r5
   150b0:	bne	15080 <pclose@plt+0x40e4>
   150b4:	add	fp, fp, #1
   150b8:	mov	r2, r8
   150bc:	mov	r1, #0
   150c0:	mov	r0, r7
   150c4:	bl	13ef4 <pclose@plt+0x2f58>
   150c8:	cmp	r9, fp
   150cc:	bne	15058 <pclose@plt+0x40bc>
   150d0:	ldr	r3, [r6]
   150d4:	cmp	r3, #0
   150d8:	bne	1516c <pclose@plt+0x41d0>
   150dc:	ldr	r3, [pc, #160]	; 15184 <pclose@plt+0x41e8>
   150e0:	ldr	r3, [r3]
   150e4:	cmp	r3, #0
   150e8:	bne	15134 <pclose@plt+0x4198>
   150ec:	ldr	r3, [pc, #136]	; 1517c <pclose@plt+0x41e0>
   150f0:	ldr	r2, [sp, #20]
   150f4:	ldr	r3, [r3]
   150f8:	cmp	r2, r3
   150fc:	bne	15178 <pclose@plt+0x41dc>
   15100:	add	sp, sp, #28
   15104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15108:	mov	r2, r1
   1510c:	mov	r0, #1
   15110:	ldr	r1, [pc, #112]	; 15188 <pclose@plt+0x41ec>
   15114:	bl	10ed0 <__printf_chk@plt>
   15118:	ldrh	r1, [r4]
   1511c:	b	1509c <pclose@plt+0x4100>
   15120:	mov	r2, fp
   15124:	ldr	r1, [pc, #96]	; 1518c <pclose@plt+0x41f0>
   15128:	mov	r0, #1
   1512c:	bl	10ed0 <__printf_chk@plt>
   15130:	b	15064 <pclose@plt+0x40c8>
   15134:	mov	r2, #5
   15138:	ldr	r1, [pc, #80]	; 15190 <pclose@plt+0x41f4>
   1513c:	mov	r0, #0
   15140:	bl	10d68 <dcgettext@plt>
   15144:	ldr	r3, [pc, #48]	; 1517c <pclose@plt+0x41e0>
   15148:	ldr	r2, [sp, #20]
   1514c:	ldr	r3, [r3]
   15150:	cmp	r2, r3
   15154:	mov	r1, r0
   15158:	bne	15178 <pclose@plt+0x41dc>
   1515c:	mov	r0, #1
   15160:	add	sp, sp, #28
   15164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15168:	b	10ed0 <__printf_chk@plt>
   1516c:	mov	r0, #10
   15170:	bl	10ec4 <putchar@plt>
   15174:	b	150dc <pclose@plt+0x4140>
   15178:	bl	10d80 <__stack_chk_fail@plt>
   1517c:	andeq	r7, r2, r8, lsl #30
   15180:	andeq	r8, r2, r4, lsr r1
   15184:	andeq	r8, r2, r0, lsr r1
   15188:	andeq	r7, r1, r8, ror r7
   1518c:	andeq	r7, r1, r8, ror #14
   15190:	andeq	r7, r1, r0, lsl #15
   15194:	push	{r4, lr}
   15198:	mov	r2, #0
   1519c:	ldr	r1, [pc, #24]	; 151bc <pclose@plt+0x4220>
   151a0:	bl	10dc8 <ioctl@plt>
   151a4:	cmp	r0, #0
   151a8:	popeq	{r4, pc}
   151ac:	ldr	r0, [pc, #12]	; 151c0 <pclose@plt+0x4224>
   151b0:	bl	10da4 <perror@plt>
   151b4:	mvn	r0, #0
   151b8:	pop	{r4, pc}
   151bc:	andeq	r4, r0, sp, ror #22
   151c0:			; <UNDEFINED> instruction: 0x000177bc
   151c4:	push	{r4, r5, r6, r7, r8, lr}
   151c8:	adds	lr, r2, #7
   151cc:	addmi	lr, r2, #14
   151d0:	asr	lr, lr, #3
   151d4:	sub	r8, lr, #1
   151d8:	lsl	r7, lr, #5
   151dc:	sub	r5, r7, lr
   151e0:	add	r5, r5, #1
   151e4:	add	r5, r0, r5
   151e8:	mov	r0, #32
   151ec:	cmp	r1, #0
   151f0:	movgt	r4, r5
   151f4:	movgt	r6, #0
   151f8:	ble	15240 <pclose@plt+0x42a4>
   151fc:	cmp	lr, #0
   15200:	ble	15230 <pclose@plt+0x4294>
   15204:	ldrb	r3, [r4, #-1]
   15208:	cmp	r3, #0
   1520c:	popne	{r4, r5, r6, r7, r8, pc}
   15210:	add	ip, r8, r4
   15214:	mov	r3, r4
   15218:	b	15228 <pclose@plt+0x428c>
   1521c:	ldrb	r2, [r3], #1
   15220:	cmp	r2, #0
   15224:	popne	{r4, r5, r6, r7, r8, pc}
   15228:	cmp	r3, ip
   1522c:	bne	1521c <pclose@plt+0x4280>
   15230:	add	r6, r6, #1
   15234:	cmp	r1, r6
   15238:	add	r4, r4, r7
   1523c:	bne	151fc <pclose@plt+0x4260>
   15240:	subs	r0, r0, #1
   15244:	sub	r5, r5, lr
   15248:	bne	151ec <pclose@plt+0x4250>
   1524c:	pop	{r4, r5, r6, r7, r8, pc}
   15250:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15254:	mov	r6, r1
   15258:	ldr	r5, [pc, #456]	; 15428 <pclose@plt+0x448c>
   1525c:	sub	sp, sp, #40	; 0x28
   15260:	mov	r4, r2
   15264:	ldr	r1, [r5]
   15268:	ldr	r2, [r2]
   1526c:	mov	ip, #32
   15270:	mov	r8, #1
   15274:	mov	lr, #0
   15278:	str	r2, [sp, #28]
   1527c:	str	r1, [sp, #36]	; 0x24
   15280:	add	r2, sp, #12
   15284:	ldr	r1, [pc, #416]	; 1542c <pclose@plt+0x4490>
   15288:	str	r8, [sp, #12]
   1528c:	str	r6, [sp, #32]
   15290:	mov	r7, r3
   15294:	str	lr, [sp, #16]
   15298:	str	ip, [sp, #24]
   1529c:	str	ip, [sp, #20]
   152a0:	mov	r9, r0
   152a4:	ldr	r8, [sp, #72]	; 0x48
   152a8:	bl	10dc8 <ioctl@plt>
   152ac:	cmp	r0, #0
   152b0:	bne	152ec <pclose@plt+0x4350>
   152b4:	ldr	r3, [sp, #28]
   152b8:	cmp	r8, #0
   152bc:	str	r3, [r4]
   152c0:	ldrne	r3, [sp, #24]
   152c4:	strne	r3, [r8]
   152c8:	cmp	r7, #0
   152cc:	ldrne	r3, [sp, #20]
   152d0:	strne	r3, [r7]
   152d4:	ldr	r2, [sp, #36]	; 0x24
   152d8:	ldr	r3, [r5]
   152dc:	cmp	r2, r3
   152e0:	bne	15424 <pclose@plt+0x4488>
   152e4:	add	sp, sp, #40	; 0x28
   152e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152ec:	bl	10e94 <__errno_location@plt>
   152f0:	ldr	r3, [r0]
   152f4:	mov	sl, r0
   152f8:	sub	r3, r3, #22
   152fc:	bics	r3, r3, #16
   15300:	bne	153b0 <pclose@plt+0x4414>
   15304:	cmp	r7, #0
   15308:	movne	r3, #8
   1530c:	strne	r3, [r7]
   15310:	ldr	r0, [r4]
   15314:	mov	r3, #0
   15318:	strh	r0, [sp, #4]
   1531c:	add	r2, sp, #4
   15320:	ldr	r1, [pc, #264]	; 15430 <pclose@plt+0x4494>
   15324:	mov	r0, r9
   15328:	str	r6, [sp, #8]
   1532c:	strh	r3, [sp, #6]
   15330:	bl	10dc8 <ioctl@plt>
   15334:	cmp	r0, #0
   15338:	bne	15358 <pclose@plt+0x43bc>
   1533c:	ldrh	r3, [sp, #4]
   15340:	cmp	r8, #0
   15344:	str	r3, [r4]
   15348:	beq	153a8 <pclose@plt+0x440c>
   1534c:	ldrh	r3, [sp, #6]
   15350:	str	r3, [r8]
   15354:	b	152d4 <pclose@plt+0x4338>
   15358:	ldr	r0, [sl]
   1535c:	sub	r0, r0, #22
   15360:	bics	r0, r0, #16
   15364:	bne	153c0 <pclose@plt+0x4424>
   15368:	ldr	r3, [r4]
   1536c:	cmp	r3, #255	; 0xff
   15370:	ble	153d0 <pclose@plt+0x4434>
   15374:	cmp	r6, #0
   15378:	beq	1540c <pclose@plt+0x4470>
   1537c:	mov	r2, r6
   15380:	mov	r0, r9
   15384:	ldr	r1, [pc, #168]	; 15434 <pclose@plt+0x4498>
   15388:	bl	10dc8 <ioctl@plt>
   1538c:	cmp	r0, #0
   15390:	bne	153fc <pclose@plt+0x4460>
   15394:	mov	r3, #256	; 0x100
   15398:	cmp	r8, #0
   1539c:	str	r3, [r4]
   153a0:	strne	r0, [r8]
   153a4:	bne	152d4 <pclose@plt+0x4338>
   153a8:	mov	r0, #0
   153ac:	b	152d4 <pclose@plt+0x4338>
   153b0:	ldr	r0, [pc, #128]	; 15438 <pclose@plt+0x449c>
   153b4:	bl	10da4 <perror@plt>
   153b8:	mvn	r0, #0
   153bc:	b	152d4 <pclose@plt+0x4338>
   153c0:	ldr	r0, [pc, #116]	; 1543c <pclose@plt+0x44a0>
   153c4:	bl	10da4 <perror@plt>
   153c8:	mvn	r0, #0
   153cc:	b	152d4 <pclose@plt+0x4338>
   153d0:	ldr	r3, [pc, #104]	; 15440 <pclose@plt+0x44a4>
   153d4:	ldr	r1, [pc, #104]	; 15444 <pclose@plt+0x44a8>
   153d8:	mov	r2, #5
   153dc:	ldr	r4, [r3]
   153e0:	bl	10d68 <dcgettext@plt>
   153e4:	mov	r1, #1
   153e8:	mov	r2, r0
   153ec:	mov	r0, r4
   153f0:	bl	10ee8 <__fprintf_chk@plt>
   153f4:	mvn	r0, #0
   153f8:	b	152d4 <pclose@plt+0x4338>
   153fc:	ldr	r0, [pc, #68]	; 15448 <pclose@plt+0x44ac>
   15400:	bl	10da4 <perror@plt>
   15404:	mvn	r0, #0
   15408:	b	152d4 <pclose@plt+0x4338>
   1540c:	ldr	r3, [pc, #44]	; 15440 <pclose@plt+0x44a4>
   15410:	mov	r0, r6
   15414:	mov	r2, #5
   15418:	ldr	r4, [r3]
   1541c:	ldr	r1, [pc, #40]	; 1544c <pclose@plt+0x44b0>
   15420:	b	153e0 <pclose@plt+0x4444>
   15424:	bl	10d80 <__stack_chk_fail@plt>
   15428:	andeq	r7, r2, r8, lsl #30
   1542c:	andeq	r4, r0, r2, ror fp
   15430:	andeq	r4, r0, fp, ror #22
   15434:	andeq	r4, r0, r0, ror #22
   15438:	andeq	r7, r1, ip, asr #15
   1543c:	andeq	r7, r1, r0, ror #15
   15440:	andeq	r8, r2, r8, lsr #2
   15444:	strdeq	r7, [r1], -r4
   15448:	andeq	r7, r1, r0, asr #16
   1544c:	andeq	r7, r1, r8, lsl r8
   15450:	push	{r4, lr}
   15454:	sub	sp, sp, #16
   15458:	ldr	r4, [pc, #68]	; 154a4 <pclose@plt+0x4508>
   1545c:	add	r2, sp, #16
   15460:	mov	r3, #0
   15464:	ldr	ip, [r4]
   15468:	str	r3, [r2, #-8]!
   1546c:	mov	r1, r3
   15470:	str	r3, [sp]
   15474:	str	ip, [sp, #12]
   15478:	bl	15250 <pclose@plt+0x42b4>
   1547c:	ldr	r2, [sp, #12]
   15480:	ldr	r3, [r4]
   15484:	cmp	r0, #0
   15488:	movne	r0, #256	; 0x100
   1548c:	ldreq	r0, [sp, #8]
   15490:	cmp	r2, r3
   15494:	bne	154a0 <pclose@plt+0x4504>
   15498:	add	sp, sp, #16
   1549c:	pop	{r4, pc}
   154a0:	bl	10d80 <__stack_chk_fail@plt>
   154a4:	andeq	r7, r2, r8, lsl #30
   154a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154ac:	sub	sp, sp, #60	; 0x3c
   154b0:	ldr	r8, [pc, #588]	; 15704 <pclose@plt+0x4768>
   154b4:	subs	r7, r3, #0
   154b8:	ldr	r5, [sp, #96]	; 0x60
   154bc:	moveq	sl, #8
   154c0:	ldr	r3, [r8]
   154c4:	movne	sl, r7
   154c8:	moveq	r7, sl
   154cc:	cmp	r5, #0
   154d0:	mov	r9, r0
   154d4:	mov	r6, r1
   154d8:	mov	r4, r2
   154dc:	str	r3, [sp, #52]	; 0x34
   154e0:	bne	154f8 <pclose@plt+0x455c>
   154e4:	mov	r2, r7
   154e8:	mov	r1, r4
   154ec:	mov	r0, r6
   154f0:	bl	151c4 <pclose@plt+0x4228>
   154f4:	mov	r5, r0
   154f8:	mov	r3, #0
   154fc:	add	r2, sp, #28
   15500:	ldr	r1, [pc, #512]	; 15708 <pclose@plt+0x476c>
   15504:	mov	r0, r9
   15508:	str	sl, [sp, #36]	; 0x24
   1550c:	str	r5, [sp, #40]	; 0x28
   15510:	str	r4, [sp, #44]	; 0x2c
   15514:	str	r6, [sp, #48]	; 0x30
   15518:	str	r3, [sp, #28]
   1551c:	str	r3, [sp, #32]
   15520:	bl	10dc8 <ioctl@plt>
   15524:	cmp	r0, #0
   15528:	beq	155bc <pclose@plt+0x4620>
   1552c:	cmp	r7, #8
   15530:	bne	1567c <pclose@plt+0x46e0>
   15534:	bl	10e94 <__errno_location@plt>
   15538:	ldr	r2, [r0]
   1553c:	mov	r7, r0
   15540:	sub	r3, r2, #22
   15544:	bics	r3, r3, #16
   15548:	bne	1567c <pclose@plt+0x46e0>
   1554c:	cmp	r4, #256	; 0x100
   15550:	cmpne	r4, #512	; 0x200
   15554:	movlt	r3, #1
   15558:	movge	r3, #0
   1555c:	cmp	r2, #22
   15560:	movne	r3, #0
   15564:	andeq	r3, r3, #1
   15568:	cmp	r3, #0
   1556c:	bne	155d8 <pclose@plt+0x463c>
   15570:	add	r2, sp, #20
   15574:	ldr	r1, [pc, #400]	; 1570c <pclose@plt+0x4770>
   15578:	mov	r0, r9
   1557c:	strh	r4, [sp, #20]
   15580:	strh	r5, [sp, #22]
   15584:	str	r6, [sp, #24]
   15588:	bl	10dc8 <ioctl@plt>
   1558c:	cmp	r0, #0
   15590:	beq	155bc <pclose@plt+0x4620>
   15594:	ldr	r3, [r7]
   15598:	sub	r3, r3, #22
   1559c:	bics	r3, r3, #16
   155a0:	bne	1568c <pclose@plt+0x46f0>
   155a4:	mov	r2, r6
   155a8:	mov	r0, r9
   155ac:	ldr	r1, [pc, #348]	; 15710 <pclose@plt+0x4774>
   155b0:	bl	10dc8 <ioctl@plt>
   155b4:	cmp	r0, #0
   155b8:	bne	1563c <pclose@plt+0x46a0>
   155bc:	mov	r0, #0
   155c0:	ldr	r2, [sp, #52]	; 0x34
   155c4:	ldr	r3, [r8]
   155c8:	cmp	r2, r3
   155cc:	bne	15700 <pclose@plt+0x4764>
   155d0:	add	sp, sp, #60	; 0x3c
   155d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155d8:	ldr	r3, [pc, #308]	; 15714 <pclose@plt+0x4778>
   155dc:	mov	r1, #1
   155e0:	cmp	r4, r3
   155e4:	movlt	r0, #8192	; 0x2000
   155e8:	movge	r0, #16384	; 0x4000
   155ec:	movlt	fp, #256	; 0x100
   155f0:	movge	fp, #512	; 0x200
   155f4:	bl	10ccc <calloc@plt>
   155f8:	subs	sl, r0, #0
   155fc:	beq	156cc <pclose@plt+0x4730>
   15600:	lsl	r2, r4, #5
   15604:	mov	r1, r6
   15608:	bl	10d50 <memcpy@plt>
   1560c:	add	r2, sp, #28
   15610:	ldr	r1, [pc, #240]	; 15708 <pclose@plt+0x476c>
   15614:	mov	r0, r9
   15618:	str	fp, [sp, #44]	; 0x2c
   1561c:	str	sl, [sp, #48]	; 0x30
   15620:	bl	10dc8 <ioctl@plt>
   15624:	mov	fp, r0
   15628:	mov	r0, sl
   1562c:	bl	10d20 <free@plt>
   15630:	cmp	fp, #0
   15634:	bne	15570 <pclose@plt+0x45d4>
   15638:	b	155bc <pclose@plt+0x4620>
   1563c:	ldr	r2, [pc, #212]	; 15718 <pclose@plt+0x477c>
   15640:	ldr	r3, [pc, #212]	; 1571c <pclose@plt+0x4780>
   15644:	str	r0, [sp, #12]
   15648:	ldr	r0, [r2]
   1564c:	mov	r2, #8
   15650:	ldr	r3, [r3]
   15654:	mov	r1, #1
   15658:	str	r2, [sp, #4]
   1565c:	str	r5, [sp, #8]
   15660:	ldr	r2, [pc, #184]	; 15720 <pclose@plt+0x4784>
   15664:	str	r4, [sp]
   15668:	bl	10ee8 <__fprintf_chk@plt>
   1566c:	ldr	r0, [pc, #176]	; 15724 <pclose@plt+0x4788>
   15670:	bl	10da4 <perror@plt>
   15674:	mvn	r0, #0
   15678:	b	155c0 <pclose@plt+0x4624>
   1567c:	ldr	r0, [pc, #164]	; 15728 <pclose@plt+0x478c>
   15680:	bl	10da4 <perror@plt>
   15684:	mvn	r0, #0
   15688:	b	155c0 <pclose@plt+0x4624>
   1568c:	ldr	r2, [pc, #132]	; 15718 <pclose@plt+0x477c>
   15690:	ldr	r3, [pc, #132]	; 1571c <pclose@plt+0x4780>
   15694:	str	r0, [sp, #12]
   15698:	ldr	r0, [r2]
   1569c:	mov	r2, #8
   156a0:	ldr	r3, [r3]
   156a4:	mov	r1, #1
   156a8:	str	r2, [sp, #4]
   156ac:	str	r5, [sp, #8]
   156b0:	ldr	r2, [pc, #116]	; 1572c <pclose@plt+0x4790>
   156b4:	str	r4, [sp]
   156b8:	bl	10ee8 <__fprintf_chk@plt>
   156bc:	ldr	r0, [pc, #108]	; 15730 <pclose@plt+0x4794>
   156c0:	bl	10da4 <perror@plt>
   156c4:	mvn	r0, #0
   156c8:	b	155c0 <pclose@plt+0x4624>
   156cc:	ldr	r3, [pc, #68]	; 15718 <pclose@plt+0x477c>
   156d0:	mov	r2, #5
   156d4:	ldr	r1, [pc, #88]	; 15734 <pclose@plt+0x4798>
   156d8:	ldr	r4, [r3]
   156dc:	bl	10d68 <dcgettext@plt>
   156e0:	ldr	r3, [pc, #52]	; 1571c <pclose@plt+0x4780>
   156e4:	mov	r1, #1
   156e8:	ldr	r3, [r3]
   156ec:	mov	r2, r0
   156f0:	mov	r0, r4
   156f4:	bl	10ee8 <__fprintf_chk@plt>
   156f8:	mvn	r0, #0
   156fc:	b	155c0 <pclose@plt+0x4624>
   15700:	bl	10d80 <__stack_chk_fail@plt>
   15704:	andeq	r7, r2, r8, lsl #30
   15708:	andeq	r4, r0, r2, ror fp
   1570c:	andeq	r4, r0, ip, ror #22
   15710:	andeq	r4, r0, r1, ror #22
   15714:	andeq	r0, r0, r1, lsl #2
   15718:	andeq	r8, r2, r8, lsr #2
   1571c:	andeq	r8, r2, r0, asr r1
   15720:	andeq	r7, r1, r0, lsr #17
   15724:	andeq	r7, r1, r4, asr #17
   15728:	andeq	r7, r1, r4, asr r8
   1572c:	andeq	r7, r1, r8, ror #16
   15730:	andeq	r7, r1, ip, lsl #17
   15734:	andeq	r7, r1, r0, lsr #5
   15738:	push	{r4, r5, r6, r7, r8, lr}
   1573c:	sub	sp, sp, #8
   15740:	add	r6, r1, #8
   15744:	mov	r5, r1
   15748:	mov	r8, r0
   1574c:	bl	10e7c <strlen@plt>
   15750:	mov	r4, r0
   15754:	mov	r0, r6
   15758:	bl	10e7c <strlen@plt>
   1575c:	add	r0, r4, r0
   15760:	add	r0, r0, #2
   15764:	bl	10e04 <malloc@plt>
   15768:	subs	r7, r0, #0
   1576c:	beq	157c8 <pclose@plt+0x482c>
   15770:	ldr	r3, [pc, #88]	; 157d0 <pclose@plt+0x4834>
   15774:	mvn	r2, #0
   15778:	add	r3, pc, r3
   1577c:	mov	r1, #1
   15780:	str	r6, [sp, #4]
   15784:	str	r8, [sp]
   15788:	bl	10ea0 <__sprintf_chk@plt>
   1578c:	ldr	r1, [pc, #64]	; 157d4 <pclose@plt+0x4838>
   15790:	mov	r0, r7
   15794:	add	r1, pc, r1
   15798:	bl	10f24 <popen@plt>
   1579c:	mov	r3, #1
   157a0:	str	r3, [r5, #4]
   157a4:	mov	r4, r0
   157a8:	str	r0, [r5]
   157ac:	mov	r0, r7
   157b0:	bl	10d20 <free@plt>
   157b4:	clz	r0, r4
   157b8:	lsr	r0, r0, #5
   157bc:	rsb	r0, r0, #0
   157c0:	add	sp, sp, #8
   157c4:	pop	{r4, r5, r6, r7, r8, pc}
   157c8:	mvn	r0, #0
   157cc:	b	157c0 <pclose@plt+0x4824>
   157d0:	andeq	r2, r0, r8, asr r1
   157d4:	andeq	r1, r0, r8, lsr #26
   157d8:	ldr	r3, [pc, #268]	; 158ec <pclose@plt+0x4950>
   157dc:	ldr	r2, [pc, #268]	; 158f0 <pclose@plt+0x4954>
   157e0:	add	r3, pc, r3
   157e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   157e8:	add	r7, r0, #8
   157ec:	ldr	r9, [r3, r2]
   157f0:	sub	sp, sp, #100	; 0x64
   157f4:	mov	r8, r0
   157f8:	ldr	ip, [r9]
   157fc:	mov	r1, r7
   15800:	mov	r2, sp
   15804:	mov	r0, #3
   15808:	str	ip, [sp, #92]	; 0x5c
   1580c:	bl	10db0 <__xstat@plt>
   15810:	cmn	r0, #1
   15814:	beq	158e0 <pclose@plt+0x4944>
   15818:	ldr	r3, [sp, #16]
   1581c:	and	r3, r3, #61440	; 0xf000
   15820:	cmp	r3, #32768	; 0x8000
   15824:	bne	158e0 <pclose@plt+0x4944>
   15828:	mov	r1, #4
   1582c:	mov	r0, r7
   15830:	bl	10ef4 <access@plt>
   15834:	cmn	r0, #1
   15838:	beq	158e0 <pclose@plt+0x4944>
   1583c:	mov	r1, #46	; 0x2e
   15840:	mov	r0, r7
   15844:	bl	10f3c <strrchr@plt>
   15848:	subs	r6, r0, #0
   1584c:	beq	158a0 <pclose@plt+0x4904>
   15850:	ldr	r4, [pc, #156]	; 158f4 <pclose@plt+0x4958>
   15854:	add	r4, pc, r4
   15858:	ldr	r5, [r4, #4]
   1585c:	cmp	r5, #0
   15860:	beq	158a0 <pclose@plt+0x4904>
   15864:	add	r4, r4, #8
   15868:	b	1587c <pclose@plt+0x48e0>
   1586c:	add	r4, r4, #8
   15870:	ldr	r5, [r4, #-4]
   15874:	cmp	r5, #0
   15878:	beq	158a0 <pclose@plt+0x4904>
   1587c:	ldr	r1, [r4, #-8]
   15880:	mov	r0, r6
   15884:	bl	10cf0 <strcmp@plt>
   15888:	cmp	r0, #0
   1588c:	bne	1586c <pclose@plt+0x48d0>
   15890:	mov	r1, r8
   15894:	mov	r0, r5
   15898:	bl	15738 <pclose@plt+0x479c>
   1589c:	b	158c8 <pclose@plt+0x492c>
   158a0:	ldr	r1, [pc, #80]	; 158f8 <pclose@plt+0x495c>
   158a4:	mov	r0, r7
   158a8:	add	r1, pc, r1
   158ac:	bl	10d08 <fopen@plt>
   158b0:	clz	r3, r0
   158b4:	lsr	r3, r3, #5
   158b8:	mov	r2, r0
   158bc:	rsb	r0, r3, #0
   158c0:	mov	r3, #0
   158c4:	strd	r2, [r8]
   158c8:	ldr	r2, [sp, #92]	; 0x5c
   158cc:	ldr	r3, [r9]
   158d0:	cmp	r2, r3
   158d4:	bne	158e8 <pclose@plt+0x494c>
   158d8:	add	sp, sp, #100	; 0x64
   158dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   158e0:	mvn	r0, #0
   158e4:	b	158c8 <pclose@plt+0x492c>
   158e8:	bl	10d80 <__stack_chk_fail@plt>
   158ec:	andeq	r2, r1, r8, lsl r8
   158f0:	andeq	r0, r0, r0, lsl #2
   158f4:			; <UNDEFINED> instruction: 0x000128b4
   158f8:	andeq	r1, r0, r4, lsl ip
   158fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15900:	sub	sp, sp, #156	; 0x9c
   15904:	ldr	ip, [pc, #1132]	; 15d78 <pclose@plt+0x4ddc>
   15908:	ldr	lr, [pc, #1132]	; 15d7c <pclose@plt+0x4de0>
   1590c:	ldr	r5, [sp, #192]	; 0xc0
   15910:	add	ip, pc, ip
   15914:	str	r1, [sp, #20]
   15918:	str	r5, [sp, #36]	; 0x24
   1591c:	mov	r6, r1
   15920:	mov	r1, ip
   15924:	ldr	ip, [ip, lr]
   15928:	mov	r4, r0
   1592c:	mov	lr, ip
   15930:	str	ip, [sp, #40]	; 0x28
   15934:	ldr	lr, [lr]
   15938:	mov	ip, #0
   1593c:	str	r0, [sp, #28]
   15940:	str	ip, [r5, #4]
   15944:	str	ip, [r5]
   15948:	mov	r0, r6
   1594c:	mov	fp, r2
   15950:	str	r3, [sp, #48]	; 0x30
   15954:	str	lr, [sp, #148]	; 0x94
   15958:	bl	10df8 <opendir@plt>
   1595c:	subs	r7, r0, #0
   15960:	beq	15d54 <pclose@plt+0x4db8>
   15964:	mov	r0, r6
   15968:	bl	10e7c <strlen@plt>
   1596c:	mov	r1, #47	; 0x2f
   15970:	str	r0, [sp, #12]
   15974:	mov	r0, r4
   15978:	bl	10e88 <strchr@plt>
   1597c:	subs	r9, r0, #0
   15980:	beq	15cb4 <pclose@plt+0x4d18>
   15984:	sub	r1, r9, r4
   15988:	mov	r0, r4
   1598c:	bl	10d44 <strndup@plt>
   15990:	subs	r3, r0, #0
   15994:	str	r3, [sp, #16]
   15998:	beq	15d60 <pclose@plt+0x4dc4>
   1599c:	ldr	r3, [pc, #988]	; 15d80 <pclose@plt+0x4de4>
   159a0:	mov	r5, #0
   159a4:	add	r3, pc, r3
   159a8:	str	r3, [sp, #44]	; 0x2c
   159ac:	ldr	r3, [pc, #976]	; 15d84 <pclose@plt+0x4de8>
   159b0:	add	r3, pc, r3
   159b4:	str	r3, [sp, #52]	; 0x34
   159b8:	mvn	r3, #0
   159bc:	str	r3, [sp, #32]
   159c0:	mov	r0, r7
   159c4:	bl	10f30 <readdir@plt>
   159c8:	subs	r6, r0, #0
   159cc:	beq	15bcc <pclose@plt+0x4c30>
   159d0:	add	r4, r6, #11
   159d4:	mov	r0, r4
   159d8:	bl	10e7c <strlen@plt>
   159dc:	cmp	r0, #2
   159e0:	mov	r8, r0
   159e4:	bhi	15a18 <pclose@plt+0x4a7c>
   159e8:	ldr	r1, [pc, #920]	; 15d88 <pclose@plt+0x4dec>
   159ec:	mov	r0, r4
   159f0:	add	r1, pc, r1
   159f4:	bl	10cf0 <strcmp@plt>
   159f8:	cmp	r0, #0
   159fc:	beq	159c0 <pclose@plt+0x4a24>
   15a00:	ldr	r1, [pc, #900]	; 15d8c <pclose@plt+0x4df0>
   15a04:	mov	r0, r4
   15a08:	add	r1, pc, r1
   15a0c:	bl	10cf0 <strcmp@plt>
   15a10:	cmp	r0, #0
   15a14:	beq	159c0 <pclose@plt+0x4a24>
   15a18:	ldr	r3, [sp, #12]
   15a1c:	add	sl, r3, #2
   15a20:	add	sl, sl, r8
   15a24:	cmp	sl, #4096	; 0x1000
   15a28:	bhi	159c0 <pclose@plt+0x4a24>
   15a2c:	adds	r8, fp, #0
   15a30:	movne	r8, #1
   15a34:	cmp	r9, #0
   15a38:	beq	15c54 <pclose@plt+0x4cb8>
   15a3c:	ldr	r1, [sp, #16]
   15a40:	mov	r0, r4
   15a44:	bl	10cf0 <strcmp@plt>
   15a48:	cmp	r0, #0
   15a4c:	bne	15bf8 <pclose@plt+0x4c5c>
   15a50:	mov	r3, #1
   15a54:	str	r3, [sp, #24]
   15a58:	mov	r0, sl
   15a5c:	bl	10e04 <malloc@plt>
   15a60:	subs	sl, r0, #0
   15a64:	beq	15c18 <pclose@plt+0x4c7c>
   15a68:	ldr	r3, [sp, #20]
   15a6c:	mvn	r2, #0
   15a70:	str	r3, [sp]
   15a74:	ldr	r3, [pc, #788]	; 15d90 <pclose@plt+0x4df4>
   15a78:	mov	r1, #1
   15a7c:	add	r3, pc, r3
   15a80:	str	r4, [sp, #4]
   15a84:	bl	10ea0 <__sprintf_chk@plt>
   15a88:	add	r2, sp, #56	; 0x38
   15a8c:	mov	r1, sl
   15a90:	mov	r0, #3
   15a94:	bl	10db0 <__xstat@plt>
   15a98:	cmp	r0, #0
   15a9c:	bne	15ab0 <pclose@plt+0x4b14>
   15aa0:	ldr	r3, [sp, #72]	; 0x48
   15aa4:	and	r3, r3, #61440	; 0xf000
   15aa8:	cmp	r3, #16384	; 0x4000
   15aac:	beq	15c68 <pclose@plt+0x4ccc>
   15ab0:	mov	r0, sl
   15ab4:	bl	10d20 <free@plt>
   15ab8:	and	r3, r5, #1
   15abc:	cmp	r9, #0
   15ac0:	movne	r3, #1
   15ac4:	cmp	r3, #0
   15ac8:	bne	159c0 <pclose@plt+0x4a24>
   15acc:	ldrb	r3, [r6, #11]
   15ad0:	ldr	r1, [sp, #28]
   15ad4:	mov	r6, r4
   15ad8:	cmp	r3, #0
   15adc:	ldrb	r2, [r1]
   15ae0:	bne	15af8 <pclose@plt+0x4b5c>
   15ae4:	b	15b00 <pclose@plt+0x4b64>
   15ae8:	ldrb	r3, [r6, #1]!
   15aec:	ldrb	r2, [r1, #1]!
   15af0:	cmp	r3, #0
   15af4:	beq	15b00 <pclose@plt+0x4b64>
   15af8:	cmp	r3, r2
   15afc:	beq	15ae8 <pclose@plt+0x4b4c>
   15b00:	cmp	r2, #0
   15b04:	bne	159c0 <pclose@plt+0x4a24>
   15b08:	ldr	r3, [sp, #36]	; 0x24
   15b0c:	ldr	r2, [sp, #20]
   15b10:	add	r3, r3, #8
   15b14:	str	r4, [sp, #4]
   15b18:	str	r2, [sp]
   15b1c:	mov	r4, r3
   15b20:	mov	r0, r3
   15b24:	mvn	r2, #0
   15b28:	ldr	r3, [sp, #44]	; 0x2c
   15b2c:	mov	r1, #1
   15b30:	bl	10ea0 <__sprintf_chk@plt>
   15b34:	mov	r1, r4
   15b38:	add	r2, sp, #56	; 0x38
   15b3c:	mov	r0, #3
   15b40:	bl	10db0 <__xstat@plt>
   15b44:	cmp	r0, #0
   15b48:	bne	159c0 <pclose@plt+0x4a24>
   15b4c:	ldr	r3, [sp, #72]	; 0x48
   15b50:	and	r3, r3, #61440	; 0xf000
   15b54:	cmp	r3, #32768	; 0x8000
   15b58:	bne	159c0 <pclose@plt+0x4a24>
   15b5c:	ldr	r5, [sp, #48]	; 0x30
   15b60:	ldr	r4, [r5]
   15b64:	cmp	r4, #0
   15b68:	beq	15bc4 <pclose@plt+0x4c28>
   15b6c:	ldr	r3, [pc, #544]	; 15d94 <pclose@plt+0x4df8>
   15b70:	str	r9, [sp, #24]
   15b74:	add	r3, pc, r3
   15b78:	ldr	r8, [r3, #4]
   15b7c:	mov	r1, r4
   15b80:	mov	r0, r6
   15b84:	bl	10cf0 <strcmp@plt>
   15b88:	cmp	r0, #0
   15b8c:	beq	15d44 <pclose@plt+0x4da8>
   15b90:	mov	r0, r4
   15b94:	bl	10e7c <strlen@plt>
   15b98:	mov	r1, r4
   15b9c:	mov	r2, r0
   15ba0:	mov	r9, r0
   15ba4:	mov	r0, r6
   15ba8:	bl	10f60 <strncmp@plt>
   15bac:	cmp	r0, #0
   15bb0:	beq	15cbc <pclose@plt+0x4d20>
   15bb4:	ldr	r4, [r5, #4]!
   15bb8:	cmp	r4, #0
   15bbc:	bne	15b7c <pclose@plt+0x4be0>
   15bc0:	ldr	r9, [sp, #24]
   15bc4:	mov	r5, #0
   15bc8:	b	159c0 <pclose@plt+0x4a24>
   15bcc:	eor	r5, r5, #1
   15bd0:	cmp	fp, #0
   15bd4:	movle	r5, #0
   15bd8:	andgt	r5, r5, #1
   15bdc:	cmp	r5, #0
   15be0:	beq	15c18 <pclose@plt+0x4c7c>
   15be4:	mov	r1, r6
   15be8:	mov	r0, r7
   15bec:	bl	10e34 <seekdir@plt>
   15bf0:	mov	r5, #1
   15bf4:	b	159c0 <pclose@plt+0x4a24>
   15bf8:	ands	r8, r8, r5
   15bfc:	beq	159c0 <pclose@plt+0x4a24>
   15c00:	mov	r3, #0
   15c04:	mov	r0, sl
   15c08:	str	r3, [sp, #24]
   15c0c:	bl	10e04 <malloc@plt>
   15c10:	subs	sl, r0, #0
   15c14:	bne	15a68 <pclose@plt+0x4acc>
   15c18:	ldr	r3, [sp, #16]
   15c1c:	cmp	r3, #0
   15c20:	beq	15c2c <pclose@plt+0x4c90>
   15c24:	mov	r0, r3
   15c28:	bl	10d20 <free@plt>
   15c2c:	mov	r0, r7
   15c30:	bl	10f84 <closedir@plt>
   15c34:	ldr	r3, [sp, #40]	; 0x28
   15c38:	ldr	r2, [sp, #148]	; 0x94
   15c3c:	ldr	r0, [sp, #32]
   15c40:	ldr	r3, [r3]
   15c44:	cmp	r2, r3
   15c48:	bne	15d74 <pclose@plt+0x4dd8>
   15c4c:	add	sp, sp, #156	; 0x9c
   15c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c54:	and	r3, r5, #1
   15c58:	ands	r8, r8, r3
   15c5c:	strne	r9, [sp, #24]
   15c60:	beq	15abc <pclose@plt+0x4b20>
   15c64:	b	15a58 <pclose@plt+0x4abc>
   15c68:	ldr	r3, [sp, #24]
   15c6c:	cmp	r3, #0
   15c70:	bne	15d10 <pclose@plt+0x4d74>
   15c74:	cmp	r8, #0
   15c78:	beq	15ab0 <pclose@plt+0x4b14>
   15c7c:	ldr	r3, [sp, #36]	; 0x24
   15c80:	sub	r2, fp, #1
   15c84:	str	r3, [sp]
   15c88:	mov	r1, sl
   15c8c:	ldr	r3, [sp, #48]	; 0x30
   15c90:	ldr	r0, [sp, #28]
   15c94:	bl	158fc <pclose@plt+0x4960>
   15c98:	str	r0, [sp, #32]
   15c9c:	ldr	r3, [sp, #32]
   15ca0:	cmp	r3, #0
   15ca4:	bne	15ab0 <pclose@plt+0x4b14>
   15ca8:	mov	r0, sl
   15cac:	bl	10d20 <free@plt>
   15cb0:	b	15c18 <pclose@plt+0x4c7c>
   15cb4:	str	r9, [sp, #16]
   15cb8:	b	1599c <pclose@plt+0x4a00>
   15cbc:	cmp	r8, #0
   15cc0:	beq	15bb4 <pclose@plt+0x4c18>
   15cc4:	ldr	r3, [sp, #52]	; 0x34
   15cc8:	add	r4, r6, r9
   15ccc:	mov	sl, r8
   15cd0:	add	r9, r3, #8
   15cd4:	b	15ce8 <pclose@plt+0x4d4c>
   15cd8:	add	r9, r9, #8
   15cdc:	ldr	sl, [r9, #-4]
   15ce0:	cmp	sl, #0
   15ce4:	beq	15bb4 <pclose@plt+0x4c18>
   15ce8:	ldr	r1, [r9, #-8]
   15cec:	mov	r0, r4
   15cf0:	bl	10cf0 <strcmp@plt>
   15cf4:	cmp	r0, #0
   15cf8:	bne	15cd8 <pclose@plt+0x4d3c>
   15cfc:	ldr	r1, [sp, #36]	; 0x24
   15d00:	mov	r0, sl
   15d04:	bl	15738 <pclose@plt+0x479c>
   15d08:	str	r0, [sp, #32]
   15d0c:	b	15c18 <pclose@plt+0x4c7c>
   15d10:	ldr	r3, [sp, #36]	; 0x24
   15d14:	mov	r2, r0
   15d18:	str	r3, [sp]
   15d1c:	mov	r1, sl
   15d20:	ldr	r3, [sp, #48]	; 0x30
   15d24:	add	r0, r9, #1
   15d28:	bl	158fc <pclose@plt+0x4960>
   15d2c:	cmp	r0, #0
   15d30:	moveq	r8, #0
   15d34:	cmp	r8, #0
   15d38:	str	r0, [sp, #32]
   15d3c:	beq	15c9c <pclose@plt+0x4d00>
   15d40:	b	15c7c <pclose@plt+0x4ce0>
   15d44:	ldr	r0, [sp, #36]	; 0x24
   15d48:	bl	157d8 <pclose@plt+0x483c>
   15d4c:	str	r0, [sp, #32]
   15d50:	b	15c18 <pclose@plt+0x4c7c>
   15d54:	mvn	r3, #0
   15d58:	str	r3, [sp, #32]
   15d5c:	b	15c34 <pclose@plt+0x4c98>
   15d60:	mov	r0, r7
   15d64:	bl	10f84 <closedir@plt>
   15d68:	mvn	r3, #0
   15d6c:	str	r3, [sp, #32]
   15d70:	b	15c34 <pclose@plt+0x4c98>
   15d74:	bl	10d80 <__stack_chk_fail@plt>
   15d78:	andeq	r2, r1, r8, ror #13
   15d7c:	andeq	r0, r0, r0, lsl #2
   15d80:	andeq	r1, r0, ip, lsr pc
   15d84:	andeq	r2, r1, r8, asr r7
   15d88:	andeq	r1, r0, r8, ror #29
   15d8c:	ldrdeq	r1, [r0], -r4
   15d90:	andeq	r1, r0, r4, ror #28
   15d94:	muleq	r1, r4, r5
   15d98:	push	{r4, lr}
   15d9c:	subs	r4, r0, #0
   15da0:	popeq	{r4, pc}
   15da4:	ldr	r0, [r4]
   15da8:	cmp	r0, #0
   15dac:	popeq	{r4, pc}
   15db0:	ldr	r3, [r4, #4]
   15db4:	cmp	r3, #0
   15db8:	bne	15dcc <pclose@plt+0x4e30>
   15dbc:	bl	10f00 <fclose@plt>
   15dc0:	mov	r3, #0
   15dc4:	str	r3, [r4]
   15dc8:	pop	{r4, pc}
   15dcc:	bl	10f9c <pclose@plt>
   15dd0:	b	15dc0 <pclose@plt+0x4e24>
   15dd4:	ldr	ip, [pc, #812]	; 16108 <pclose@plt+0x516c>
   15dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ddc:	add	ip, pc, ip
   15de0:	ldr	lr, [pc, #804]	; 1610c <pclose@plt+0x5170>
   15de4:	mov	r7, r0
   15de8:	sub	sp, sp, #140	; 0x8c
   15dec:	ldr	r0, [ip, lr]
   15df0:	mov	r8, r3
   15df4:	mov	r4, #0
   15df8:	mov	r3, ip
   15dfc:	add	r5, r8, #8
   15e00:	ldr	ip, [r0]
   15e04:	str	r0, [sp, #16]
   15e08:	str	r1, [sp, #20]
   15e0c:	str	r4, [r8]
   15e10:	mov	r1, r7
   15e14:	str	r4, [r8, #4]
   15e18:	mov	r0, r5
   15e1c:	str	r2, [sp, #24]
   15e20:	str	ip, [sp, #132]	; 0x84
   15e24:	bl	10dd4 <strcpy@plt>
   15e28:	mov	r0, r8
   15e2c:	bl	157d8 <pclose@plt+0x483c>
   15e30:	cmp	r0, r4
   15e34:	beq	15f30 <pclose@plt+0x4f94>
   15e38:	ldrb	r3, [r7]
   15e3c:	cmp	r3, #47	; 0x2f
   15e40:	beq	15fa8 <pclose@plt+0x500c>
   15e44:	ldr	r3, [sp, #20]
   15e48:	ldr	r6, [r3]
   15e4c:	cmp	r6, #0
   15e50:	beq	15efc <pclose@plt+0x4f60>
   15e54:	ldr	r4, [pc, #692]	; 16110 <pclose@plt+0x5174>
   15e58:	ldr	r5, [sp, #20]
   15e5c:	ldr	sl, [sp, #24]
   15e60:	add	r4, pc, r4
   15e64:	mov	r0, r6
   15e68:	bl	10e7c <strlen@plt>
   15e6c:	cmp	r0, #0
   15e70:	mov	r1, r0
   15e74:	beq	15fa0 <pclose@plt+0x5004>
   15e78:	sub	r2, r0, #1
   15e7c:	add	r3, r6, r2
   15e80:	ldrb	r2, [r6, r2]
   15e84:	cmp	r2, #42	; 0x2a
   15e88:	bne	15f54 <pclose@plt+0x4fb8>
   15e8c:	mov	r9, #0
   15e90:	b	15ea4 <pclose@plt+0x4f08>
   15e94:	ldrb	r2, [r3, #-1]!
   15e98:	mov	r1, r0
   15e9c:	cmp	r2, #42	; 0x2a
   15ea0:	bne	15f60 <pclose@plt+0x4fc4>
   15ea4:	subs	r0, r0, #1
   15ea8:	add	r9, r9, #1
   15eac:	bne	15e94 <pclose@plt+0x4ef8>
   15eb0:	mov	r0, r4
   15eb4:	bl	10d74 <strdup@plt>
   15eb8:	mov	r6, r0
   15ebc:	cmp	r6, #0
   15ec0:	beq	15efc <pclose@plt+0x4f60>
   15ec4:	mov	r2, r9
   15ec8:	mov	r3, sl
   15ecc:	mov	r1, r6
   15ed0:	str	r8, [sp]
   15ed4:	mov	r0, r7
   15ed8:	bl	158fc <pclose@plt+0x4960>
   15edc:	mov	r9, r0
   15ee0:	mov	r0, r6
   15ee4:	bl	10d20 <free@plt>
   15ee8:	cmp	r9, #0
   15eec:	beq	15f30 <pclose@plt+0x4f94>
   15ef0:	ldr	r6, [r5, #4]!
   15ef4:	cmp	r6, #0
   15ef8:	bne	15e64 <pclose@plt+0x4ec8>
   15efc:	mov	r4, #1
   15f00:	b	15f34 <pclose@plt+0x4f98>
   15f04:	mov	r1, #4
   15f08:	mov	r0, r5
   15f0c:	bl	10ef4 <access@plt>
   15f10:	cmp	r0, #0
   15f14:	bne	160bc <pclose@plt+0x5120>
   15f18:	ldr	r8, [sp, #36]	; 0x24
   15f1c:	ldr	r0, [r4, #4]
   15f20:	mov	r1, r8
   15f24:	bl	15738 <pclose@plt+0x479c>
   15f28:	cmp	r0, #0
   15f2c:	bne	15e44 <pclose@plt+0x4ea8>
   15f30:	mov	r4, #0
   15f34:	ldr	r3, [sp, #16]
   15f38:	ldr	r2, [sp, #132]	; 0x84
   15f3c:	mov	r0, r4
   15f40:	ldr	r3, [r3]
   15f44:	cmp	r2, r3
   15f48:	bne	16104 <pclose@plt+0x5168>
   15f4c:	add	sp, sp, #140	; 0x8c
   15f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f54:	add	r3, r6, r0
   15f58:	mov	r9, #0
   15f5c:	ldrb	r2, [r3, #-1]
   15f60:	cmp	r2, #47	; 0x2f
   15f64:	subeq	r0, r0, #1
   15f68:	addeq	r3, r6, r0
   15f6c:	beq	15f78 <pclose@plt+0x4fdc>
   15f70:	b	15f90 <pclose@plt+0x4ff4>
   15f74:	sub	r0, r0, #1
   15f78:	cmp	r0, #0
   15f7c:	beq	15eb0 <pclose@plt+0x4f14>
   15f80:	ldrb	r2, [r3, #-1]!
   15f84:	mov	r1, r0
   15f88:	cmp	r2, #47	; 0x2f
   15f8c:	beq	15f74 <pclose@plt+0x4fd8>
   15f90:	mov	r0, r6
   15f94:	bl	10d44 <strndup@plt>
   15f98:	mov	r6, r0
   15f9c:	b	15ebc <pclose@plt+0x4f20>
   15fa0:	mov	r9, r0
   15fa4:	b	15eb0 <pclose@plt+0x4f14>
   15fa8:	str	r4, [r8, #4]
   15fac:	mov	r0, r7
   15fb0:	bl	10e7c <strlen@plt>
   15fb4:	ldr	r9, [sp, #24]
   15fb8:	ldr	r4, [r9]
   15fbc:	cmp	r4, #0
   15fc0:	beq	15e44 <pclose@plt+0x4ea8>
   15fc4:	ldr	r3, [pc, #328]	; 16114 <pclose@plt+0x5178>
   15fc8:	ldr	sl, [pc, #328]	; 16118 <pclose@plt+0x517c>
   15fcc:	add	r3, pc, r3
   15fd0:	add	sl, pc, sl
   15fd4:	str	r3, [sp, #32]
   15fd8:	add	r3, r0, #1
   15fdc:	str	r3, [sp, #28]
   15fe0:	str	r8, [sp, #36]	; 0x24
   15fe4:	mov	r0, r4
   15fe8:	bl	10e7c <strlen@plt>
   15fec:	ldr	r3, [sp, #28]
   15ff0:	add	r6, r3, r0
   15ff4:	cmp	r6, #4096	; 0x1000
   15ff8:	bhi	160cc <pclose@plt+0x5130>
   15ffc:	str	r4, [sp, #4]
   16000:	ldr	r3, [sp, #32]
   16004:	mvn	r2, #0
   16008:	mov	r1, #1
   1600c:	str	r7, [sp]
   16010:	mov	r0, r5
   16014:	add	r8, sp, #40	; 0x28
   16018:	bl	10ea0 <__sprintf_chk@plt>
   1601c:	mov	r2, r8
   16020:	mov	r1, r5
   16024:	mov	r0, #3
   16028:	bl	10db0 <__xstat@plt>
   1602c:	subs	r4, r0, #0
   16030:	bne	16044 <pclose@plt+0x50a8>
   16034:	ldr	r3, [sp, #56]	; 0x38
   16038:	and	r3, r3, #61440	; 0xf000
   1603c:	cmp	r3, #32768	; 0x8000
   16040:	beq	160e0 <pclose@plt+0x5144>
   16044:	ldr	r4, [pc, #208]	; 1611c <pclose@plt+0x5180>
   16048:	add	r4, pc, r4
   1604c:	ldr	r3, [r4, #4]
   16050:	cmp	r3, #0
   16054:	beq	160cc <pclose@plt+0x5130>
   16058:	ldr	fp, [r4]
   1605c:	mov	r0, fp
   16060:	bl	10e7c <strlen@plt>
   16064:	add	r0, r6, r0
   16068:	cmp	r0, #4096	; 0x1000
   1606c:	bhi	160bc <pclose@plt+0x5120>
   16070:	ldr	r3, [r9]
   16074:	mvn	r2, #0
   16078:	str	r3, [sp, #4]
   1607c:	mov	r1, #1
   16080:	mov	r3, sl
   16084:	str	fp, [sp, #8]
   16088:	str	r7, [sp]
   1608c:	mov	r0, r5
   16090:	bl	10ea0 <__sprintf_chk@plt>
   16094:	mov	r2, r8
   16098:	mov	r1, r5
   1609c:	mov	r0, #3
   160a0:	bl	10db0 <__xstat@plt>
   160a4:	cmp	r0, #0
   160a8:	bne	160bc <pclose@plt+0x5120>
   160ac:	ldr	r3, [sp, #56]	; 0x38
   160b0:	and	r3, r3, #61440	; 0xf000
   160b4:	cmp	r3, #32768	; 0x8000
   160b8:	beq	15f04 <pclose@plt+0x4f68>
   160bc:	add	r4, r4, #8
   160c0:	ldr	r3, [r4, #4]
   160c4:	cmp	r3, #0
   160c8:	bne	16058 <pclose@plt+0x50bc>
   160cc:	ldr	r4, [r9, #4]!
   160d0:	cmp	r4, #0
   160d4:	bne	15fe4 <pclose@plt+0x5048>
   160d8:	ldr	r8, [sp, #36]	; 0x24
   160dc:	b	15e44 <pclose@plt+0x4ea8>
   160e0:	ldr	r1, [pc, #56]	; 16120 <pclose@plt+0x5184>
   160e4:	mov	r0, r5
   160e8:	add	r1, pc, r1
   160ec:	bl	10d08 <fopen@plt>
   160f0:	ldr	r3, [sp, #36]	; 0x24
   160f4:	cmp	r0, #0
   160f8:	str	r0, [r3]
   160fc:	beq	16044 <pclose@plt+0x50a8>
   16100:	b	15f34 <pclose@plt+0x4f98>
   16104:	bl	10d80 <__stack_chk_fail@plt>
   16108:	andeq	r2, r1, ip, lsl r2
   1610c:	andeq	r0, r0, r0, lsl #2
   16110:	andeq	r1, r0, r8, ror sl
   16114:	andeq	r1, r0, ip, lsl r9
   16118:	andeq	r1, r0, r0, lsr #18
   1611c:	andeq	r2, r1, r0, asr #1
   16120:	ldrdeq	r1, [r0], -r4
   16124:	push	{r4, r5, r6, lr}
   16128:	mov	r5, r0
   1612c:	ldr	r0, [pc, #64]	; 16174 <pclose@plt+0x51d8>
   16130:	bl	10e04 <malloc@plt>
   16134:	subs	r4, r0, #0
   16138:	beq	1615c <pclose@plt+0x51c0>
   1613c:	mov	r1, r5
   16140:	mov	r2, #4096	; 0x1000
   16144:	add	r0, r4, #8
   16148:	bl	10de0 <__strcpy_chk@plt>
   1614c:	mov	r0, r4
   16150:	bl	157d8 <pclose@plt+0x483c>
   16154:	cmp	r0, #0
   16158:	blt	16164 <pclose@plt+0x51c8>
   1615c:	mov	r0, r4
   16160:	pop	{r4, r5, r6, pc}
   16164:	mov	r0, r4
   16168:	bl	10d20 <free@plt>
   1616c:	mov	r4, #0
   16170:	b	1615c <pclose@plt+0x51c0>
   16174:	andeq	r1, r0, r8
   16178:	cmp	r1, #0
   1617c:	beq	16388 <pclose@plt+0x53ec>
   16180:	eor	ip, r0, r1
   16184:	rsbmi	r1, r1, #0
   16188:	subs	r2, r1, #1
   1618c:	beq	16354 <pclose@plt+0x53b8>
   16190:	movs	r3, r0
   16194:	rsbmi	r3, r0, #0
   16198:	cmp	r3, r1
   1619c:	bls	16360 <pclose@plt+0x53c4>
   161a0:	tst	r1, r2
   161a4:	beq	16370 <pclose@plt+0x53d4>
   161a8:	clz	r2, r3
   161ac:	clz	r0, r1
   161b0:	sub	r2, r0, r2
   161b4:	rsbs	r2, r2, #31
   161b8:	addne	r2, r2, r2, lsl #1
   161bc:	mov	r0, #0
   161c0:	addne	pc, pc, r2, lsl #2
   161c4:	nop			; (mov r0, r0)
   161c8:	cmp	r3, r1, lsl #31
   161cc:	adc	r0, r0, r0
   161d0:	subcs	r3, r3, r1, lsl #31
   161d4:	cmp	r3, r1, lsl #30
   161d8:	adc	r0, r0, r0
   161dc:	subcs	r3, r3, r1, lsl #30
   161e0:	cmp	r3, r1, lsl #29
   161e4:	adc	r0, r0, r0
   161e8:	subcs	r3, r3, r1, lsl #29
   161ec:	cmp	r3, r1, lsl #28
   161f0:	adc	r0, r0, r0
   161f4:	subcs	r3, r3, r1, lsl #28
   161f8:	cmp	r3, r1, lsl #27
   161fc:	adc	r0, r0, r0
   16200:	subcs	r3, r3, r1, lsl #27
   16204:	cmp	r3, r1, lsl #26
   16208:	adc	r0, r0, r0
   1620c:	subcs	r3, r3, r1, lsl #26
   16210:	cmp	r3, r1, lsl #25
   16214:	adc	r0, r0, r0
   16218:	subcs	r3, r3, r1, lsl #25
   1621c:	cmp	r3, r1, lsl #24
   16220:	adc	r0, r0, r0
   16224:	subcs	r3, r3, r1, lsl #24
   16228:	cmp	r3, r1, lsl #23
   1622c:	adc	r0, r0, r0
   16230:	subcs	r3, r3, r1, lsl #23
   16234:	cmp	r3, r1, lsl #22
   16238:	adc	r0, r0, r0
   1623c:	subcs	r3, r3, r1, lsl #22
   16240:	cmp	r3, r1, lsl #21
   16244:	adc	r0, r0, r0
   16248:	subcs	r3, r3, r1, lsl #21
   1624c:	cmp	r3, r1, lsl #20
   16250:	adc	r0, r0, r0
   16254:	subcs	r3, r3, r1, lsl #20
   16258:	cmp	r3, r1, lsl #19
   1625c:	adc	r0, r0, r0
   16260:	subcs	r3, r3, r1, lsl #19
   16264:	cmp	r3, r1, lsl #18
   16268:	adc	r0, r0, r0
   1626c:	subcs	r3, r3, r1, lsl #18
   16270:	cmp	r3, r1, lsl #17
   16274:	adc	r0, r0, r0
   16278:	subcs	r3, r3, r1, lsl #17
   1627c:	cmp	r3, r1, lsl #16
   16280:	adc	r0, r0, r0
   16284:	subcs	r3, r3, r1, lsl #16
   16288:	cmp	r3, r1, lsl #15
   1628c:	adc	r0, r0, r0
   16290:	subcs	r3, r3, r1, lsl #15
   16294:	cmp	r3, r1, lsl #14
   16298:	adc	r0, r0, r0
   1629c:	subcs	r3, r3, r1, lsl #14
   162a0:	cmp	r3, r1, lsl #13
   162a4:	adc	r0, r0, r0
   162a8:	subcs	r3, r3, r1, lsl #13
   162ac:	cmp	r3, r1, lsl #12
   162b0:	adc	r0, r0, r0
   162b4:	subcs	r3, r3, r1, lsl #12
   162b8:	cmp	r3, r1, lsl #11
   162bc:	adc	r0, r0, r0
   162c0:	subcs	r3, r3, r1, lsl #11
   162c4:	cmp	r3, r1, lsl #10
   162c8:	adc	r0, r0, r0
   162cc:	subcs	r3, r3, r1, lsl #10
   162d0:	cmp	r3, r1, lsl #9
   162d4:	adc	r0, r0, r0
   162d8:	subcs	r3, r3, r1, lsl #9
   162dc:	cmp	r3, r1, lsl #8
   162e0:	adc	r0, r0, r0
   162e4:	subcs	r3, r3, r1, lsl #8
   162e8:	cmp	r3, r1, lsl #7
   162ec:	adc	r0, r0, r0
   162f0:	subcs	r3, r3, r1, lsl #7
   162f4:	cmp	r3, r1, lsl #6
   162f8:	adc	r0, r0, r0
   162fc:	subcs	r3, r3, r1, lsl #6
   16300:	cmp	r3, r1, lsl #5
   16304:	adc	r0, r0, r0
   16308:	subcs	r3, r3, r1, lsl #5
   1630c:	cmp	r3, r1, lsl #4
   16310:	adc	r0, r0, r0
   16314:	subcs	r3, r3, r1, lsl #4
   16318:	cmp	r3, r1, lsl #3
   1631c:	adc	r0, r0, r0
   16320:	subcs	r3, r3, r1, lsl #3
   16324:	cmp	r3, r1, lsl #2
   16328:	adc	r0, r0, r0
   1632c:	subcs	r3, r3, r1, lsl #2
   16330:	cmp	r3, r1, lsl #1
   16334:	adc	r0, r0, r0
   16338:	subcs	r3, r3, r1, lsl #1
   1633c:	cmp	r3, r1
   16340:	adc	r0, r0, r0
   16344:	subcs	r3, r3, r1
   16348:	cmp	ip, #0
   1634c:	rsbmi	r0, r0, #0
   16350:	bx	lr
   16354:	teq	ip, r0
   16358:	rsbmi	r0, r0, #0
   1635c:	bx	lr
   16360:	movcc	r0, #0
   16364:	asreq	r0, ip, #31
   16368:	orreq	r0, r0, #1
   1636c:	bx	lr
   16370:	clz	r2, r1
   16374:	rsb	r2, r2, #31
   16378:	cmp	ip, #0
   1637c:	lsr	r0, r3, r2
   16380:	rsbmi	r0, r0, #0
   16384:	bx	lr
   16388:	cmp	r0, #0
   1638c:	mvngt	r0, #-2147483648	; 0x80000000
   16390:	movlt	r0, #-2147483648	; 0x80000000
   16394:	b	163b8 <pclose@plt+0x541c>
   16398:	cmp	r1, #0
   1639c:	beq	16388 <pclose@plt+0x53ec>
   163a0:	push	{r0, r1, lr}
   163a4:	bl	16180 <pclose@plt+0x51e4>
   163a8:	pop	{r1, r2, lr}
   163ac:	mul	r3, r2, r0
   163b0:	sub	r1, r1, r3
   163b4:	bx	lr
   163b8:	push	{r1, lr}
   163bc:	mov	r0, #8
   163c0:	bl	10ce4 <raise@plt>
   163c4:	pop	{r1, pc}
   163c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163cc:	mov	r7, r0
   163d0:	ldr	r6, [pc, #72]	; 16420 <pclose@plt+0x5484>
   163d4:	ldr	r5, [pc, #72]	; 16424 <pclose@plt+0x5488>
   163d8:	add	r6, pc, r6
   163dc:	add	r5, pc, r5
   163e0:	sub	r6, r6, r5
   163e4:	mov	r8, r1
   163e8:	mov	r9, r2
   163ec:	bl	10cac <calloc@plt-0x20>
   163f0:	asrs	r6, r6, #2
   163f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   163f8:	mov	r4, #0
   163fc:	add	r4, r4, #1
   16400:	ldr	r3, [r5], #4
   16404:	mov	r2, r9
   16408:	mov	r1, r8
   1640c:	mov	r0, r7
   16410:	blx	r3
   16414:	cmp	r6, r4
   16418:	bne	163fc <pclose@plt+0x5460>
   1641c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16420:	andeq	r1, r1, r4, lsr #22
   16424:	andeq	r1, r1, ip, lsl fp
   16428:	bx	lr

Disassembly of section .fini:

0001642c <.fini>:
   1642c:	push	{r3, lr}
   16430:	pop	{r3, pc}
