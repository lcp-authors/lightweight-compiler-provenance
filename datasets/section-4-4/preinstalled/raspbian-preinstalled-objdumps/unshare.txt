
raspbian-preinstalled/unshare:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	11c8c <mount@plt+0xc90>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <strcmp@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <strcmp@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x000131b8

00010d50 <strcmp@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #77824	; 0x13000
   10d58:	ldr	pc, [ip, #440]!	; 0x1b8

00010d5c <strtol@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #77824	; 0x13000
   10d64:	ldr	pc, [ip, #432]!	; 0x1b0

00010d68 <read@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #77824	; 0x13000
   10d70:	ldr	pc, [ip, #424]!	; 0x1a8

00010d74 <free@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #77824	; 0x13000
   10d7c:	ldr	pc, [ip, #416]!	; 0x1a0

00010d80 <unshare@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #77824	; 0x13000
   10d88:	ldr	pc, [ip, #408]!	; 0x198

00010d8c <nanosleep@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #77824	; 0x13000
   10d94:	ldr	pc, [ip, #400]!	; 0x190

00010d98 <ferror@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #77824	; 0x13000
   10da0:	ldr	pc, [ip, #392]!	; 0x188

00010da4 <_exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #77824	; 0x13000
   10dac:	ldr	pc, [ip, #384]!	; 0x180

00010db0 <execvp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #77824	; 0x13000
   10db8:	ldr	pc, [ip, #376]!	; 0x178

00010dbc <dcgettext@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #77824	; 0x13000
   10dc4:	ldr	pc, [ip, #368]!	; 0x170

00010dc8 <strdup@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #77824	; 0x13000
   10dd0:	ldr	pc, [ip, #360]!	; 0x168

00010dd4 <__stack_chk_fail@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #77824	; 0x13000
   10ddc:	ldr	pc, [ip, #352]!	; 0x160

00010de0 <textdomain@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #77824	; 0x13000
   10de8:	ldr	pc, [ip, #344]!	; 0x158

00010dec <strcasecmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #77824	; 0x13000
   10df4:	ldr	pc, [ip, #336]!	; 0x150

00010df8 <err@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #77824	; 0x13000
   10e00:	ldr	pc, [ip, #328]!	; 0x148

00010e04 <geteuid@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #77824	; 0x13000
   10e0c:	ldr	pc, [ip, #320]!	; 0x140

00010e10 <getegid@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #77824	; 0x13000
   10e18:	ldr	pc, [ip, #312]!	; 0x138

00010e1c <waitpid@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #77824	; 0x13000
   10e24:	ldr	pc, [ip, #304]!	; 0x130

00010e28 <strcpy@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #77824	; 0x13000
   10e30:	ldr	pc, [ip, #296]!	; 0x128

00010e34 <__fpending@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #77824	; 0x13000
   10e3c:	ldr	pc, [ip, #288]!	; 0x120

00010e40 <open64@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #77824	; 0x13000
   10e48:	ldr	pc, [ip, #280]!	; 0x118

00010e4c <getenv@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #77824	; 0x13000
   10e54:	ldr	pc, [ip, #272]!	; 0x110

00010e58 <malloc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #77824	; 0x13000
   10e60:	ldr	pc, [ip, #264]!	; 0x108

00010e64 <__libc_start_main@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #77824	; 0x13000
   10e6c:	ldr	pc, [ip, #256]!	; 0x100

00010e70 <__gmon_start__@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #77824	; 0x13000
   10e78:	ldr	pc, [ip, #248]!	; 0xf8

00010e7c <getopt_long@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #77824	; 0x13000
   10e84:	ldr	pc, [ip, #240]!	; 0xf0

00010e88 <kill@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #77824	; 0x13000
   10e90:	ldr	pc, [ip, #232]!	; 0xe8

00010e94 <__ctype_b_loc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #77824	; 0x13000
   10e9c:	ldr	pc, [ip, #224]!	; 0xe0

00010ea0 <getpid@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #77824	; 0x13000
   10ea8:	ldr	pc, [ip, #216]!	; 0xd8

00010eac <exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #77824	; 0x13000
   10eb4:	ldr	pc, [ip, #208]!	; 0xd0

00010eb8 <strlen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #77824	; 0x13000
   10ec0:	ldr	pc, [ip, #200]!	; 0xc8

00010ec4 <__libc_current_sigrtmax@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #77824	; 0x13000
   10ecc:	ldr	pc, [ip, #192]!	; 0xc0

00010ed0 <warnx@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #77824	; 0x13000
   10ed8:	ldr	pc, [ip, #184]!	; 0xb8

00010edc <__errno_location@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #77824	; 0x13000
   10ee4:	ldr	pc, [ip, #176]!	; 0xb0

00010ee8 <strncasecmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #77824	; 0x13000
   10ef0:	ldr	pc, [ip, #168]!	; 0xa8

00010ef4 <__cxa_atexit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #77824	; 0x13000
   10efc:	ldr	pc, [ip, #160]!	; 0xa0

00010f00 <__vasprintf_chk@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #77824	; 0x13000
   10f08:	ldr	pc, [ip, #152]!	; 0x98

00010f0c <__xpg_basename@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #77824	; 0x13000
   10f14:	ldr	pc, [ip, #144]!	; 0x90

00010f18 <__printf_chk@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #77824	; 0x13000
   10f20:	ldr	pc, [ip, #136]!	; 0x88

00010f24 <prctl@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #77824	; 0x13000
   10f2c:	ldr	pc, [ip, #128]!	; 0x80

00010f30 <write@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #77824	; 0x13000
   10f38:	ldr	pc, [ip, #120]!	; 0x78

00010f3c <__fprintf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #77824	; 0x13000
   10f44:	ldr	pc, [ip, #112]!	; 0x70

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #77824	; 0x13000
   10f50:	ldr	pc, [ip, #104]!	; 0x68

00010f54 <pipe@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #77824	; 0x13000
   10f5c:	ldr	pc, [ip, #96]!	; 0x60

00010f60 <setlocale@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #77824	; 0x13000
   10f68:	ldr	pc, [ip, #88]!	; 0x58

00010f6c <fork@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #77824	; 0x13000
   10f74:	ldr	pc, [ip, #80]!	; 0x50

00010f78 <errx@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #77824	; 0x13000
   10f80:	ldr	pc, [ip, #72]!	; 0x48

00010f84 <execl@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #77824	; 0x13000
   10f8c:	ldr	pc, [ip, #64]!	; 0x40

00010f90 <warn@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #77824	; 0x13000
   10f98:	ldr	pc, [ip, #56]!	; 0x38

00010f9c <fputc@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #77824	; 0x13000
   10fa4:	ldr	pc, [ip, #48]!	; 0x30

00010fa8 <bindtextdomain@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #77824	; 0x13000
   10fb0:	ldr	pc, [ip, #40]!	; 0x28

00010fb4 <__libc_current_sigrtmin@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #77824	; 0x13000
   10fbc:	ldr	pc, [ip, #32]!

00010fc0 <__xstat64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #77824	; 0x13000
   10fc8:	ldr	pc, [ip, #24]!

00010fcc <fputs@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #77824	; 0x13000
   10fd4:	ldr	pc, [ip, #16]!

00010fd8 <abort@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #77824	; 0x13000
   10fe0:	ldr	pc, [ip, #8]!

00010fe4 <close@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #77824	; 0x13000
   10fec:	ldr	pc, [ip, #0]!

00010ff0 <__snprintf_chk@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #73728	; 0x12000
   10ff8:	ldr	pc, [ip, #4088]!	; 0xff8

00010ffc <mount@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #73728	; 0x12000
   11004:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

00011008 <.text>:
   11008:	ldr	r3, [pc, #2880]	; 11b50 <mount@plt+0xb54>
   1100c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11010:	sub	sp, sp, #84	; 0x54
   11014:	ldr	r3, [r3]
   11018:	mov	r8, r1
   1101c:	str	r3, [sp, #76]	; 0x4c
   11020:	mov	r9, r0
   11024:	bl	10e04 <geteuid@plt>
   11028:	ldr	r5, [pc, #2852]	; 11b54 <mount@plt+0xb58>
   1102c:	mov	sl, #278528	; 0x44000
   11030:	mvn	fp, #0
   11034:	mov	r7, #0
   11038:	mov	r6, r7
   1103c:	str	r0, [sp, #40]	; 0x28
   11040:	bl	10e10 <getegid@plt>
   11044:	ldr	r1, [pc, #2828]	; 11b58 <mount@plt+0xb5c>
   11048:	str	r0, [sp, #44]	; 0x2c
   1104c:	mov	r0, #6
   11050:	bl	10f60 <setlocale@plt>
   11054:	ldr	r1, [pc, #2816]	; 11b5c <mount@plt+0xb60>
   11058:	ldr	r0, [pc, #2816]	; 11b60 <mount@plt+0xb64>
   1105c:	bl	10fa8 <bindtextdomain@plt>
   11060:	ldr	r0, [pc, #2808]	; 11b60 <mount@plt+0xb64>
   11064:	bl	10de0 <textdomain@plt>
   11068:	sub	r3, r5, #32
   1106c:	ldr	r0, [pc, #2800]	; 11b64 <mount@plt+0xb68>
   11070:	str	r3, [sp, #24]
   11074:	bl	12730 <mount@plt+0x1734>
   11078:	strd	sl, [sp, #32]
   1107c:	ldr	sl, [pc, #2788]	; 11b68 <mount@plt+0xb6c>
   11080:	ldr	fp, [pc, #2788]	; 11b6c <mount@plt+0xb70>
   11084:	str	r7, [sp, #16]
   11088:	str	r7, [sp, #20]
   1108c:	str	r7, [sp, #12]
   11090:	mov	r4, #0
   11094:	str	r4, [sp]
   11098:	mov	r3, r5
   1109c:	mov	r2, sl
   110a0:	mov	r1, r8
   110a4:	mov	r0, r9
   110a8:	bl	10e7c <getopt_long@plt>
   110ac:	cmn	r0, #1
   110b0:	beq	113e0 <mount@plt+0x3e4>
   110b4:	sub	r0, r0, #67	; 0x43
   110b8:	cmp	r0, #64	; 0x40
   110bc:	ldrls	pc, [pc, r0, lsl #2]
   110c0:	b	1180c <mount@plt+0x810>
   110c4:			; <UNDEFINED> instruction: 0x000113b4
   110c8:	andeq	r1, r1, ip, lsl #16
   110cc:	andeq	r1, r1, ip, lsl #16
   110d0:	andeq	r1, r1, ip, lsl #16
   110d4:	andeq	r1, r1, ip, lsl #16
   110d8:	andeq	r1, r1, ip, lsl #16
   110dc:	andeq	r1, r1, ip, lsl #16
   110e0:	andeq	r1, r1, ip, lsl #16
   110e4:	andeq	r1, r1, ip, lsl #16
   110e8:	andeq	r1, r1, ip, lsl #16
   110ec:	andeq	r1, r1, ip, lsl #16
   110f0:	andeq	r1, r1, ip, lsl #16
   110f4:	andeq	r1, r1, ip, lsl #16
   110f8:	andeq	r1, r1, ip, lsl #16
   110fc:	andeq	r1, r1, ip, lsl #16
   11100:	andeq	r1, r1, ip, lsl #16
   11104:	andeq	r1, r1, ip, lsl #16
   11108:	andeq	r1, r1, ip, lsl #16
   1110c:	muleq	r1, r8, r3
   11110:	andeq	r1, r1, r0, asr r3
   11114:	andeq	r1, r1, ip, lsl #16
   11118:	andeq	r1, r1, ip, lsl #16
   1111c:	andeq	r1, r1, ip, lsl #16
   11120:	andeq	r1, r1, ip, lsl #16
   11124:	andeq	r1, r1, ip, lsl #16
   11128:	andeq	r1, r1, ip, lsl #16
   1112c:	andeq	r1, r1, ip, lsl #16
   11130:	andeq	r1, r1, ip, lsl #16
   11134:	andeq	r1, r1, ip, lsl #16
   11138:	andeq	r1, r1, ip, lsl #16
   1113c:	andeq	r1, r1, ip, lsl #16
   11140:	andeq	r1, r1, ip, lsl #16
   11144:	andeq	r1, r1, ip, lsl #16
   11148:	andeq	r1, r1, ip, lsl #16
   1114c:	andeq	r1, r1, ip, lsl #16
   11150:	andeq	r1, r1, r4, ror #3
   11154:	andeq	r1, r1, ip, lsl #16
   11158:	andeq	r1, r1, r0, asr #11
   1115c:	andeq	r1, r1, r4, lsr r3
   11160:	andeq	r1, r1, ip, lsl #16
   11164:	andeq	r1, r1, ip, lsl #16
   11168:	andeq	r1, r1, ip, lsl #16
   1116c:	andeq	r1, r1, r8, lsl r3
   11170:	strdeq	r1, [r1], -ip
   11174:	andeq	r1, r1, ip, lsl #16
   11178:	andeq	r1, r1, r0, ror #5
   1117c:	andeq	r1, r1, ip, lsl #16
   11180:	ldrdeq	r1, [r1], -r0
   11184:	andeq	r1, r1, ip, lsl #16
   11188:	andeq	r1, r1, ip, lsl #16
   1118c:			; <UNDEFINED> instruction: 0x000112b4
   11190:	andeq	r1, r1, ip, lsl #16
   11194:	andeq	r1, r1, ip, lsl #16
   11198:	andeq	r1, r1, ip, lsl #16
   1119c:	andeq	r1, r1, ip, lsl #16
   111a0:	andeq	r1, r1, ip, lsl #16
   111a4:	andeq	r1, r1, ip, lsl #16
   111a8:	andeq	r1, r1, ip, lsl #16
   111ac:	andeq	r1, r1, ip, lsl #16
   111b0:	andeq	r1, r1, ip, lsl #16
   111b4:	andeq	r1, r1, ip, lsl #16
   111b8:	muleq	r1, ip, r2
   111bc:	andeq	r1, r1, ip, lsr r2
   111c0:	strdeq	r1, [r1], -r0
   111c4:	andeq	r1, r1, r8, asr #3
   111c8:	ldr	r0, [fp]
   111cc:	cmp	r0, #0
   111d0:	beq	113d0 <mount@plt+0x3d4>
   111d4:	bl	1244c <mount@plt+0x1450>
   111d8:	subs	r3, r0, #0
   111dc:	str	r3, [sp, #16]
   111e0:	blt	11adc <mount@plt+0xae0>
   111e4:	mov	r3, #1
   111e8:	str	r3, [sp, #12]
   111ec:	b	11090 <mount@plt+0x94>
   111f0:	ldr	r4, [fp]
   111f4:	ldr	r1, [pc, #2420]	; 11b70 <mount@plt+0xb74>
   111f8:	mov	r0, r4
   111fc:	bl	10d50 <strcmp@plt>
   11200:	cmp	r0, #0
   11204:	beq	1184c <mount@plt+0x850>
   11208:	ldr	r1, [pc, #2404]	; 11b74 <mount@plt+0xb78>
   1120c:	mov	r0, r4
   11210:	bl	10d50 <strcmp@plt>
   11214:	cmp	r0, #0
   11218:	beq	11848 <mount@plt+0x84c>
   1121c:	mov	r2, #5
   11220:	ldr	r1, [pc, #2384]	; 11b78 <mount@plt+0xb7c>
   11224:	mov	r0, #0
   11228:	bl	10dbc <dcgettext@plt>
   1122c:	mov	r2, r4
   11230:	mov	r1, r0
   11234:	mov	r0, #1
   11238:	bl	10f78 <errx@plt>
   1123c:	ldr	r3, [fp]
   11240:	mov	r4, #0
   11244:	str	r7, [sp, #52]	; 0x34
   11248:	mov	r7, r4
   1124c:	ldr	r4, [sp, #24]
   11250:	str	r6, [sp, #48]	; 0x30
   11254:	mov	r6, r3
   11258:	str	r3, [sp, #32]
   1125c:	mov	r1, r6
   11260:	ldr	r0, [r4, r7, lsl #3]
   11264:	bl	10d50 <strcmp@plt>
   11268:	cmp	r0, #0
   1126c:	beq	11514 <mount@plt+0x518>
   11270:	add	r7, r7, #1
   11274:	cmp	r7, #4
   11278:	bne	1125c <mount@plt+0x260>
   1127c:	mov	r2, #5
   11280:	ldr	r1, [pc, #2292]	; 11b7c <mount@plt+0xb80>
   11284:	mov	r0, #0
   11288:	bl	10dbc <dcgettext@plt>
   1128c:	ldr	r2, [sp, #32]
   11290:	mov	r1, r0
   11294:	mov	r0, #1
   11298:	bl	10f78 <errx@plt>
   1129c:	ldr	r7, [fp]
   112a0:	ldr	r3, [pc, #2264]	; 11b80 <mount@plt+0xb84>
   112a4:	cmp	r7, #0
   112a8:	orr	r6, r6, #131072	; 0x20000
   112ac:	moveq	r7, r3
   112b0:	b	11090 <mount@plt+0x94>
   112b4:	ldr	r1, [fp]
   112b8:	orr	r6, r6, #67108864	; 0x4000000
   112bc:	cmp	r1, #0
   112c0:	beq	11090 <mount@plt+0x94>
   112c4:	mov	r0, #67108864	; 0x4000000
   112c8:	bl	11fd0 <mount@plt+0xfd4>
   112cc:	b	11090 <mount@plt+0x94>
   112d0:	mov	r3, #1
   112d4:	orr	r6, r6, #268435456	; 0x10000000
   112d8:	str	r3, [sp, #20]
   112dc:	b	11090 <mount@plt+0x94>
   112e0:	ldr	r1, [fp]
   112e4:	orr	r6, r6, #536870912	; 0x20000000
   112e8:	cmp	r1, #0
   112ec:	beq	11090 <mount@plt+0x94>
   112f0:	mov	r0, #536870912	; 0x20000000
   112f4:	bl	11fd0 <mount@plt+0xfd4>
   112f8:	b	11090 <mount@plt+0x94>
   112fc:	ldr	r1, [fp]
   11300:	orr	r6, r6, #1073741824	; 0x40000000
   11304:	cmp	r1, #0
   11308:	beq	11090 <mount@plt+0x94>
   1130c:	mov	r0, #1073741824	; 0x40000000
   11310:	bl	11fd0 <mount@plt+0xfd4>
   11314:	b	11090 <mount@plt+0x94>
   11318:	ldr	r1, [fp]
   1131c:	orr	r6, r6, #131072	; 0x20000
   11320:	cmp	r1, #0
   11324:	beq	11090 <mount@plt+0x94>
   11328:	mov	r0, #131072	; 0x20000
   1132c:	bl	11fd0 <mount@plt+0xfd4>
   11330:	b	11090 <mount@plt+0x94>
   11334:	ldr	r1, [fp]
   11338:	orr	r6, r6, #134217728	; 0x8000000
   1133c:	cmp	r1, #0
   11340:	beq	11090 <mount@plt+0x94>
   11344:	mov	r0, #134217728	; 0x8000000
   11348:	bl	11fd0 <mount@plt+0xfd4>
   1134c:	b	11090 <mount@plt+0x94>
   11350:	mov	r2, #5
   11354:	ldr	r1, [pc, #2088]	; 11b84 <mount@plt+0xb88>
   11358:	mov	r0, #0
   1135c:	bl	10dbc <dcgettext@plt>
   11360:	ldr	r2, [pc, #2080]	; 11b88 <mount@plt+0xb8c>
   11364:	ldr	r3, [pc, #2080]	; 11b8c <mount@plt+0xb90>
   11368:	ldr	r2, [r2]
   1136c:	mov	r1, r0
   11370:	mov	r0, #1
   11374:	bl	10f18 <__printf_chk@plt>
   11378:	mov	r0, #0
   1137c:	ldr	r3, [pc, #1996]	; 11b50 <mount@plt+0xb54>
   11380:	ldr	r2, [sp, #76]	; 0x4c
   11384:	ldr	r3, [r3]
   11388:	cmp	r2, r3
   1138c:	bne	11afc <mount@plt+0xb00>
   11390:	add	sp, sp, #84	; 0x54
   11394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11398:	ldr	r1, [fp]
   1139c:	orr	r6, r6, #268435456	; 0x10000000
   113a0:	cmp	r1, #0
   113a4:	beq	11090 <mount@plt+0x94>
   113a8:	mov	r0, #268435456	; 0x10000000
   113ac:	bl	11fd0 <mount@plt+0xfd4>
   113b0:	b	11090 <mount@plt+0x94>
   113b4:	ldr	r1, [fp]
   113b8:	orr	r6, r6, #33554432	; 0x2000000
   113bc:	cmp	r1, #0
   113c0:	beq	11090 <mount@plt+0x94>
   113c4:	mov	r0, #33554432	; 0x2000000
   113c8:	bl	11fd0 <mount@plt+0xfd4>
   113cc:	b	11090 <mount@plt+0x94>
   113d0:	mov	r0, #1
   113d4:	mov	r1, #9
   113d8:	strd	r0, [sp, #12]
   113dc:	b	11090 <mount@plt+0x94>
   113e0:	ldr	fp, [pc, #1960]	; 11b90 <mount@plt+0xb94>
   113e4:	ldr	r5, [fp]
   113e8:	cmp	r5, r4
   113ec:	beq	113f8 <mount@plt+0x3fc>
   113f0:	ands	r5, r6, #131072	; 0x20000
   113f4:	bne	11560 <mount@plt+0x564>
   113f8:	mov	r0, r6
   113fc:	bl	10d80 <unshare@plt>
   11400:	cmn	r0, #1
   11404:	beq	11b00 <mount@plt+0xb04>
   11408:	ldr	r3, [fp]
   1140c:	cmp	r3, #0
   11410:	beq	1142c <mount@plt+0x430>
   11414:	cmp	r5, #0
   11418:	beq	11424 <mount@plt+0x428>
   1141c:	tst	r6, #131072	; 0x20000
   11420:	bne	118b4 <mount@plt+0x8b8>
   11424:	bl	10ea0 <getpid@plt>
   11428:	bl	11d40 <mount@plt+0xd44>
   1142c:	ldr	r3, [sp, #12]
   11430:	cmp	r3, #0
   11434:	bne	11854 <mount@plt+0x858>
   11438:	ldr	r3, [sp, #16]
   1143c:	cmp	r3, #0
   11440:	bne	11894 <mount@plt+0x898>
   11444:	ldr	r3, [sp, #20]
   11448:	cmp	r3, #0
   1144c:	ldr	r3, [sp, #36]	; 0x24
   11450:	bne	11534 <mount@plt+0x538>
   11454:	cmn	r3, #1
   11458:	beq	11464 <mount@plt+0x468>
   1145c:	mov	r0, r3
   11460:	bl	12038 <mount@plt+0x103c>
   11464:	ldr	r3, [sp, #32]
   11468:	adds	r3, r3, #0
   1146c:	movne	r3, #1
   11470:	ands	r3, r3, r6, lsr #17
   11474:	bne	11a04 <mount@plt+0xa08>
   11478:	cmp	r7, #0
   1147c:	beq	114c0 <mount@plt+0x4c4>
   11480:	mov	r2, #0
   11484:	str	r2, [sp]
   11488:	mov	r3, #278528	; 0x44000
   1148c:	mov	r1, r7
   11490:	ldr	r0, [pc, #1788]	; 11b94 <mount@plt+0xb98>
   11494:	bl	10ffc <mount@plt>
   11498:	cmp	r0, #0
   1149c:	bne	11b28 <mount@plt+0xb2c>
   114a0:	ldr	r2, [pc, #1776]	; 11b98 <mount@plt+0xb9c>
   114a4:	str	r0, [sp]
   114a8:	mov	r3, #14
   114ac:	mov	r0, r2
   114b0:	mov	r1, r7
   114b4:	bl	10ffc <mount@plt>
   114b8:	cmp	r0, #0
   114bc:	bne	11b28 <mount@plt+0xb2c>
   114c0:	ldr	r4, [pc, #1748]	; 11b9c <mount@plt+0xba0>
   114c4:	ldr	r3, [r4]
   114c8:	cmp	r3, r9
   114cc:	bge	11844 <mount@plt+0x848>
   114d0:	add	r1, r8, r3, lsl #2
   114d4:	ldr	r0, [r8, r3, lsl #2]
   114d8:	bl	10db0 <execvp@plt>
   114dc:	bl	10edc <__errno_location@plt>
   114e0:	mov	r2, #5
   114e4:	ldr	r1, [pc, #1716]	; 11ba0 <mount@plt+0xba4>
   114e8:	ldr	r3, [r0]
   114ec:	mov	r0, #0
   114f0:	cmp	r3, #2
   114f4:	moveq	r5, #127	; 0x7f
   114f8:	movne	r5, #126	; 0x7e
   114fc:	bl	10dbc <dcgettext@plt>
   11500:	ldr	r3, [r4]
   11504:	ldr	r2, [r8, r3, lsl #2]
   11508:	mov	r1, r0
   1150c:	mov	r0, r5
   11510:	bl	10df8 <err@plt>
   11514:	mov	r4, r7
   11518:	ldr	r3, [pc, #1668]	; 11ba4 <mount@plt+0xba8>
   1151c:	ldr	r6, [sp, #48]	; 0x30
   11520:	add	r3, r3, r4, lsl #3
   11524:	ldr	r7, [sp, #52]	; 0x34
   11528:	ldr	r3, [r3, #12]
   1152c:	str	r3, [sp, #32]
   11530:	b	11090 <mount@plt+0x94>
   11534:	cmp	r3, #1
   11538:	beq	11b0c <mount@plt+0xb10>
   1153c:	mov	r0, #0
   11540:	bl	12038 <mount@plt+0x103c>
   11544:	ldr	r1, [sp, #40]	; 0x28
   11548:	ldr	r0, [pc, #1624]	; 11ba8 <mount@plt+0xbac>
   1154c:	bl	12164 <mount@plt+0x1168>
   11550:	ldr	r1, [sp, #44]	; 0x2c
   11554:	ldr	r0, [pc, #1616]	; 11bac <mount@plt+0xbb0>
   11558:	bl	12164 <mount@plt+0x1168>
   1155c:	b	11464 <mount@plt+0x468>
   11560:	str	r0, [sp, #48]	; 0x30
   11564:	bl	10ea0 <getpid@plt>
   11568:	mov	sl, r0
   1156c:	bl	11e38 <mount@plt+0xe3c>
   11570:	strd	r0, [sp, #24]
   11574:	add	r0, sp, #68	; 0x44
   11578:	bl	10f54 <pipe@plt>
   1157c:	ldr	r3, [sp, #48]	; 0x30
   11580:	cmp	r0, r4
   11584:	blt	11ac0 <mount@plt+0xac4>
   11588:	str	r3, [sp, #48]	; 0x30
   1158c:	bl	10f6c <fork@plt>
   11590:	cmn	r0, #1
   11594:	mov	r5, r0
   11598:	beq	11aa4 <mount@plt+0xaa8>
   1159c:	cmp	r0, #0
   115a0:	ldr	r3, [sp, #48]	; 0x30
   115a4:	beq	1193c <mount@plt+0x940>
   115a8:	ldr	r0, [sp, #68]	; 0x44
   115ac:	str	r3, [sp, #24]
   115b0:	bl	10fe4 <close@plt>
   115b4:	ldr	r3, [sp, #24]
   115b8:	str	r3, [sp, #68]	; 0x44
   115bc:	b	113f8 <mount@plt+0x3fc>
   115c0:	ldr	r3, [pc, #1512]	; 11bb0 <mount@plt+0xbb4>
   115c4:	mov	r2, #5
   115c8:	ldr	r1, [pc, #1508]	; 11bb4 <mount@plt+0xbb8>
   115cc:	ldr	r4, [r3]
   115d0:	mov	r0, #0
   115d4:	bl	10dbc <dcgettext@plt>
   115d8:	mov	r1, r4
   115dc:	bl	10fcc <fputs@plt>
   115e0:	mov	r2, #5
   115e4:	ldr	r1, [pc, #1484]	; 11bb8 <mount@plt+0xbbc>
   115e8:	mov	r0, #0
   115ec:	bl	10dbc <dcgettext@plt>
   115f0:	ldr	r3, [pc, #1424]	; 11b88 <mount@plt+0xb8c>
   115f4:	mov	r1, #1
   115f8:	ldr	r3, [r3]
   115fc:	mov	r2, r0
   11600:	mov	r0, r4
   11604:	bl	10f3c <__fprintf_chk@plt>
   11608:	mov	r1, r4
   1160c:	mov	r0, #10
   11610:	bl	10f9c <fputc@plt>
   11614:	mov	r2, #5
   11618:	ldr	r1, [pc, #1436]	; 11bbc <mount@plt+0xbc0>
   1161c:	mov	r0, #0
   11620:	bl	10dbc <dcgettext@plt>
   11624:	mov	r1, r4
   11628:	bl	10fcc <fputs@plt>
   1162c:	mov	r2, #5
   11630:	ldr	r1, [pc, #1416]	; 11bc0 <mount@plt+0xbc4>
   11634:	mov	r0, #0
   11638:	bl	10dbc <dcgettext@plt>
   1163c:	mov	r1, r4
   11640:	bl	10fcc <fputs@plt>
   11644:	mov	r2, #5
   11648:	ldr	r1, [pc, #1396]	; 11bc4 <mount@plt+0xbc8>
   1164c:	mov	r0, #0
   11650:	bl	10dbc <dcgettext@plt>
   11654:	mov	r1, r4
   11658:	bl	10fcc <fputs@plt>
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #1376]	; 11bc8 <mount@plt+0xbcc>
   11664:	mov	r0, #0
   11668:	bl	10dbc <dcgettext@plt>
   1166c:	mov	r1, r4
   11670:	bl	10fcc <fputs@plt>
   11674:	mov	r2, #5
   11678:	ldr	r1, [pc, #1356]	; 11bcc <mount@plt+0xbd0>
   1167c:	mov	r0, #0
   11680:	bl	10dbc <dcgettext@plt>
   11684:	mov	r1, r4
   11688:	bl	10fcc <fputs@plt>
   1168c:	mov	r2, #5
   11690:	ldr	r1, [pc, #1336]	; 11bd0 <mount@plt+0xbd4>
   11694:	mov	r0, #0
   11698:	bl	10dbc <dcgettext@plt>
   1169c:	mov	r1, r4
   116a0:	bl	10fcc <fputs@plt>
   116a4:	mov	r2, #5
   116a8:	ldr	r1, [pc, #1316]	; 11bd4 <mount@plt+0xbd8>
   116ac:	mov	r0, #0
   116b0:	bl	10dbc <dcgettext@plt>
   116b4:	mov	r1, r4
   116b8:	bl	10fcc <fputs@plt>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #1296]	; 11bd8 <mount@plt+0xbdc>
   116c4:	mov	r0, #0
   116c8:	bl	10dbc <dcgettext@plt>
   116cc:	mov	r1, r4
   116d0:	bl	10fcc <fputs@plt>
   116d4:	mov	r2, #5
   116d8:	ldr	r1, [pc, #1276]	; 11bdc <mount@plt+0xbe0>
   116dc:	mov	r0, #0
   116e0:	bl	10dbc <dcgettext@plt>
   116e4:	mov	r1, r4
   116e8:	bl	10fcc <fputs@plt>
   116ec:	mov	r1, r4
   116f0:	mov	r0, #10
   116f4:	bl	10f9c <fputc@plt>
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #1244]	; 11be0 <mount@plt+0xbe4>
   11700:	mov	r0, #0
   11704:	bl	10dbc <dcgettext@plt>
   11708:	mov	r1, r4
   1170c:	bl	10fcc <fputs@plt>
   11710:	mov	r2, #5
   11714:	ldr	r1, [pc, #1224]	; 11be4 <mount@plt+0xbe8>
   11718:	mov	r0, #0
   1171c:	bl	10dbc <dcgettext@plt>
   11720:	mov	r1, r4
   11724:	bl	10fcc <fputs@plt>
   11728:	mov	r1, r4
   1172c:	mov	r0, #10
   11730:	bl	10f9c <fputc@plt>
   11734:	mov	r2, #5
   11738:	ldr	r1, [pc, #1192]	; 11be8 <mount@plt+0xbec>
   1173c:	mov	r0, #0
   11740:	bl	10dbc <dcgettext@plt>
   11744:	mov	r1, r4
   11748:	bl	10fcc <fputs@plt>
   1174c:	mov	r2, #5
   11750:	ldr	r1, [pc, #1172]	; 11bec <mount@plt+0xbf0>
   11754:	mov	r0, #0
   11758:	bl	10dbc <dcgettext@plt>
   1175c:	mov	r1, r4
   11760:	bl	10fcc <fputs@plt>
   11764:	mov	r2, #5
   11768:	ldr	r1, [pc, #1152]	; 11bf0 <mount@plt+0xbf4>
   1176c:	mov	r0, #0
   11770:	bl	10dbc <dcgettext@plt>
   11774:	mov	r1, r4
   11778:	bl	10fcc <fputs@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #1132]	; 11bf4 <mount@plt+0xbf8>
   11784:	mov	r0, #0
   11788:	bl	10dbc <dcgettext@plt>
   1178c:	mov	r1, r4
   11790:	bl	10fcc <fputs@plt>
   11794:	mov	r1, r4
   11798:	mov	r0, #10
   1179c:	bl	10f9c <fputc@plt>
   117a0:	mov	r2, #5
   117a4:	ldr	r1, [pc, #1100]	; 11bf8 <mount@plt+0xbfc>
   117a8:	mov	r0, #0
   117ac:	bl	10dbc <dcgettext@plt>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #1088]	; 11bfc <mount@plt+0xc00>
   117b8:	mov	r4, r0
   117bc:	mov	r0, #0
   117c0:	bl	10dbc <dcgettext@plt>
   117c4:	ldr	r2, [pc, #1076]	; 11c00 <mount@plt+0xc04>
   117c8:	mov	r3, r4
   117cc:	str	r2, [sp]
   117d0:	ldr	r1, [pc, #1068]	; 11c04 <mount@plt+0xc08>
   117d4:	ldr	r2, [pc, #1068]	; 11c08 <mount@plt+0xc0c>
   117d8:	str	r0, [sp, #4]
   117dc:	mov	r0, #1
   117e0:	bl	10f18 <__printf_chk@plt>
   117e4:	mov	r2, #5
   117e8:	ldr	r1, [pc, #1052]	; 11c0c <mount@plt+0xc10>
   117ec:	mov	r0, #0
   117f0:	bl	10dbc <dcgettext@plt>
   117f4:	ldr	r2, [pc, #1044]	; 11c10 <mount@plt+0xc14>
   117f8:	mov	r1, r0
   117fc:	mov	r0, #1
   11800:	bl	10f18 <__printf_chk@plt>
   11804:	mov	r0, #0
   11808:	bl	10eac <exit@plt>
   1180c:	ldr	r3, [pc, #1024]	; 11c14 <mount@plt+0xc18>
   11810:	mov	r2, #5
   11814:	ldr	r1, [pc, #1020]	; 11c18 <mount@plt+0xc1c>
   11818:	mov	r0, #0
   1181c:	ldr	r4, [r3]
   11820:	bl	10dbc <dcgettext@plt>
   11824:	ldr	r3, [pc, #860]	; 11b88 <mount@plt+0xb8c>
   11828:	mov	r1, #1
   1182c:	ldr	r3, [r3]
   11830:	mov	r2, r0
   11834:	mov	r0, r4
   11838:	bl	10f3c <__fprintf_chk@plt>
   1183c:	mov	r0, #1
   11840:	bl	10eac <exit@plt>
   11844:	bl	12364 <mount@plt+0x1368>
   11848:	mov	r0, #1
   1184c:	str	r0, [sp, #36]	; 0x24
   11850:	b	11090 <mount@plt+0x94>
   11854:	bl	10f6c <fork@plt>
   11858:	cmn	r0, #1
   1185c:	beq	11a6c <mount@plt+0xa70>
   11860:	cmp	r0, #0
   11864:	beq	11438 <mount@plt+0x43c>
   11868:	mov	r2, #0
   1186c:	add	r1, sp, #60	; 0x3c
   11870:	bl	10e1c <waitpid@plt>
   11874:	cmn	r0, #1
   11878:	beq	11920 <mount@plt+0x924>
   1187c:	ldr	r3, [sp, #60]	; 0x3c
   11880:	ands	r2, r3, #127	; 0x7f
   11884:	bne	11a78 <mount@plt+0xa7c>
   11888:	asr	r3, r3, #8
   1188c:	uxtb	r0, r3
   11890:	b	1137c <mount@plt+0x380>
   11894:	mov	r1, r3
   11898:	mov	r0, #1
   1189c:	bl	10f24 <prctl@plt>
   118a0:	cmp	r0, #0
   118a4:	bge	11444 <mount@plt+0x448>
   118a8:	ldr	r1, [pc, #876]	; 11c1c <mount@plt+0xc20>
   118ac:	mov	r0, #1
   118b0:	bl	10df8 <err@plt>
   118b4:	mov	r3, #6
   118b8:	mov	r2, #1
   118bc:	add	r1, sp, #59	; 0x3b
   118c0:	ldr	r0, [sp, #72]	; 0x48
   118c4:	strb	r3, [sp, #59]	; 0x3b
   118c8:	bl	11ee8 <mount@plt+0xeec>
   118cc:	ldr	r0, [sp, #72]	; 0x48
   118d0:	bl	10fe4 <close@plt>
   118d4:	mvn	r3, #0
   118d8:	str	r3, [sp, #72]	; 0x48
   118dc:	mov	r2, #0
   118e0:	add	r1, sp, #60	; 0x3c
   118e4:	mov	r0, r5
   118e8:	bl	10e1c <waitpid@plt>
   118ec:	cmp	r0, #0
   118f0:	blt	11910 <mount@plt+0x914>
   118f4:	ldr	r3, [sp, #60]	; 0x3c
   118f8:	tst	r3, #127	; 0x7f
   118fc:	bne	1142c <mount@plt+0x430>
   11900:	asr	r3, r3, #8
   11904:	ands	r0, r3, #255	; 0xff
   11908:	beq	1142c <mount@plt+0x430>
   1190c:	b	1137c <mount@plt+0x380>
   11910:	bl	10edc <__errno_location@plt>
   11914:	ldr	r3, [r0]
   11918:	cmp	r3, #4
   1191c:	beq	118dc <mount@plt+0x8e0>
   11920:	ldr	r1, [pc, #760]	; 11c20 <mount@plt+0xc24>
   11924:	mov	r2, #5
   11928:	mov	r0, #0
   1192c:	bl	10dbc <dcgettext@plt>
   11930:	mov	r1, r0
   11934:	mov	r0, #1
   11938:	bl	10df8 <err@plt>
   1193c:	ldr	r0, [sp, #72]	; 0x48
   11940:	str	r3, [sp, #12]
   11944:	ldr	r9, [pc, #728]	; 11c24 <mount@plt+0xc28>
   11948:	bl	10fe4 <close@plt>
   1194c:	ldr	r8, [sp, #68]	; 0x44
   11950:	mov	r4, r5
   11954:	mov	r7, r5
   11958:	ldr	r3, [sp, #12]
   1195c:	strb	r5, [sp, #59]	; 0x3b
   11960:	mov	fp, r5
   11964:	add	r6, sp, #59	; 0x3b
   11968:	mov	r5, #1
   1196c:	str	r3, [sp, #72]	; 0x48
   11970:	mov	r2, r5
   11974:	mov	r1, r6
   11978:	mov	r0, r8
   1197c:	bl	10d68 <read@plt>
   11980:	cmp	r0, #0
   11984:	ble	119a0 <mount@plt+0x9a4>
   11988:	subs	r5, r5, r0
   1198c:	add	r6, r6, r0
   11990:	add	r4, r4, r0
   11994:	beq	119c8 <mount@plt+0x9cc>
   11998:	mov	r7, #0
   1199c:	b	11970 <mount@plt+0x974>
   119a0:	beq	119c0 <mount@plt+0x9c4>
   119a4:	bl	10edc <__errno_location@plt>
   119a8:	ldr	r3, [r0]
   119ac:	cmp	r3, #4
   119b0:	cmpne	r3, #11
   119b4:	bne	119c0 <mount@plt+0x9c4>
   119b8:	cmp	r7, #4
   119bc:	ble	11a44 <mount@plt+0xa48>
   119c0:	cmp	r4, #0
   119c4:	beq	119d0 <mount@plt+0x9d4>
   119c8:	cmp	r4, #1
   119cc:	beq	119dc <mount@plt+0x9e0>
   119d0:	ldrsb	r3, [sp, #59]	; 0x3b
   119d4:	cmp	r3, #6
   119d8:	bne	11a60 <mount@plt+0xa64>
   119dc:	mov	r0, sl
   119e0:	bl	11e38 <mount@plt+0xe3c>
   119e4:	ldrd	r2, [sp, #24]
   119e8:	cmp	r3, r1
   119ec:	cmpeq	r2, r0
   119f0:	beq	11b48 <mount@plt+0xb4c>
   119f4:	mov	r0, sl
   119f8:	bl	11d40 <mount@plt+0xd44>
   119fc:	mov	r0, #0
   11a00:	bl	10eac <exit@plt>
   11a04:	mov	r4, #0
   11a08:	ldr	r3, [sp, #32]
   11a0c:	str	r4, [sp]
   11a10:	mov	r2, r4
   11a14:	ldr	r1, [pc, #524]	; 11c28 <mount@plt+0xc2c>
   11a18:	ldr	r0, [pc, #372]	; 11b94 <mount@plt+0xb98>
   11a1c:	bl	10ffc <mount@plt>
   11a20:	cmp	r0, r4
   11a24:	beq	11478 <mount@plt+0x47c>
   11a28:	ldr	r1, [pc, #508]	; 11c2c <mount@plt+0xc30>
   11a2c:	mov	r0, r4
   11a30:	mov	r2, #5
   11a34:	bl	10dbc <dcgettext@plt>
   11a38:	mov	r1, r0
   11a3c:	mov	r0, #1
   11a40:	bl	10df8 <err@plt>
   11a44:	mov	r1, #0
   11a48:	add	r0, sp, #60	; 0x3c
   11a4c:	add	r7, r7, #1
   11a50:	str	fp, [sp, #60]	; 0x3c
   11a54:	str	r9, [sp, #64]	; 0x40
   11a58:	bl	10d8c <nanosleep@plt>
   11a5c:	b	11970 <mount@plt+0x974>
   11a60:	mov	r2, #5
   11a64:	ldr	r1, [pc, #452]	; 11c30 <mount@plt+0xc34>
   11a68:	b	11928 <mount@plt+0x92c>
   11a6c:	mov	r2, #5
   11a70:	ldr	r1, [pc, #444]	; 11c34 <mount@plt+0xc38>
   11a74:	b	11928 <mount@plt+0x92c>
   11a78:	add	r3, r2, #1
   11a7c:	sxtb	r3, r3
   11a80:	cmp	r3, #1
   11a84:	ble	11a98 <mount@plt+0xa9c>
   11a88:	bl	10ea0 <getpid@plt>
   11a8c:	ldr	r1, [sp, #60]	; 0x3c
   11a90:	and	r1, r1, #127	; 0x7f
   11a94:	bl	10e88 <kill@plt>
   11a98:	mov	r2, #5
   11a9c:	ldr	r1, [pc, #404]	; 11c38 <mount@plt+0xc3c>
   11aa0:	b	11928 <mount@plt+0x92c>
   11aa4:	ldr	r1, [pc, #392]	; 11c34 <mount@plt+0xc38>
   11aa8:	mov	r0, r4
   11aac:	mov	r2, #5
   11ab0:	bl	10dbc <dcgettext@plt>
   11ab4:	mov	r1, r0
   11ab8:	mov	r0, #1
   11abc:	bl	10df8 <err@plt>
   11ac0:	ldr	r1, [pc, #372]	; 11c3c <mount@plt+0xc40>
   11ac4:	mov	r0, r4
   11ac8:	mov	r2, #5
   11acc:	bl	10dbc <dcgettext@plt>
   11ad0:	mov	r1, r0
   11ad4:	mov	r0, #1
   11ad8:	bl	10df8 <err@plt>
   11adc:	mov	r2, #5
   11ae0:	ldr	r1, [pc, #344]	; 11c40 <mount@plt+0xc44>
   11ae4:	mov	r0, #0
   11ae8:	bl	10dbc <dcgettext@plt>
   11aec:	ldr	r2, [fp]
   11af0:	mov	r1, r0
   11af4:	mov	r0, #1
   11af8:	bl	10f78 <errx@plt>
   11afc:	bl	10dd4 <__stack_chk_fail@plt>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #312]	; 11c44 <mount@plt+0xc48>
   11b08:	b	11928 <mount@plt+0x92c>
   11b0c:	ldr	r1, [pc, #308]	; 11c48 <mount@plt+0xc4c>
   11b10:	mov	r2, #5
   11b14:	mov	r0, #0
   11b18:	bl	10dbc <dcgettext@plt>
   11b1c:	mov	r1, r0
   11b20:	ldr	r0, [sp, #36]	; 0x24
   11b24:	bl	10f78 <errx@plt>
   11b28:	mov	r2, #5
   11b2c:	ldr	r1, [pc, #280]	; 11c4c <mount@plt+0xc50>
   11b30:	mov	r0, #0
   11b34:	bl	10dbc <dcgettext@plt>
   11b38:	mov	r2, r7
   11b3c:	mov	r1, r0
   11b40:	mov	r0, #1
   11b44:	bl	10df8 <err@plt>
   11b48:	mov	r0, #1
   11b4c:	bl	10eac <exit@plt>
   11b50:	andeq	r3, r2, r0, lsl #28
   11b54:	andeq	r2, r1, ip, ror r7
   11b58:	andeq	r2, r1, r8, asr #20
   11b5c:	andeq	r2, r1, ip, lsr #18
   11b60:	andeq	r2, r1, r0, asr #18
   11b64:	andeq	r2, r1, ip, lsr #4
   11b68:	andeq	r2, r1, ip, lsr #29
   11b6c:	andeq	r4, r2, r0, lsl #1
   11b70:	andeq	r2, r1, r4, lsl lr
   11b74:	andeq	r2, r1, ip, lsl lr
   11b78:	andeq	r2, r1, r4, lsr #28
   11b7c:	andeq	r2, r1, ip, asr #28
   11b80:	andeq	r2, r1, r4, lsr #18
   11b84:	strdeq	r2, [r1], -r4
   11b88:	andeq	r4, r2, r8, rrx
   11b8c:	andeq	r2, r1, r0, lsl #28
   11b90:	andeq	r4, r2, r8, lsl #1
   11b94:	andeq	r2, r1, r0, lsr #31
   11b98:	andeq	r2, r1, r4, ror #31
   11b9c:	andeq	r4, r2, r0, ror r0
   11ba0:	andeq	r2, r1, ip, ror #31
   11ba4:	andeq	r2, r1, r4, asr r7
   11ba8:	andeq	r2, r1, r4, ror pc
   11bac:	andeq	r2, r1, r8, lsl #31
   11bb0:	andeq	r4, r2, ip, ror r0
   11bb4:	andeq	r2, r1, ip, asr #18
   11bb8:	andeq	r2, r1, r8, asr r9
   11bbc:	andeq	r2, r1, r4, lsl #19
   11bc0:	andeq	r2, r1, r4, asr #19
   11bc4:	ldrdeq	r2, [r1], -r0
   11bc8:	andeq	r2, r1, r8, lsl #20
   11bcc:	andeq	r2, r1, ip, asr #20
   11bd0:	andeq	r2, r1, r8, lsl #21
   11bd4:	andeq	r2, r1, r0, asr #21
   11bd8:	strdeq	r2, [r1], -r4
   11bdc:	andeq	r2, r1, r8, lsr #22
   11be0:	andeq	r2, r1, r0, ror #22
   11be4:	muleq	r1, ip, fp
   11be8:	andeq	r2, r1, r4, ror #23
   11bec:	andeq	r2, r1, r4, ror #24
   11bf0:			; <UNDEFINED> instruction: 0x00012cb0
   11bf4:	andeq	r2, r1, r8, lsr #26
   11bf8:	andeq	r2, r1, r8, ror sp
   11bfc:	andeq	r2, r1, ip, lsl #27
   11c00:			; <UNDEFINED> instruction: 0x00012dbc
   11c04:	andeq	r2, r1, r8, lsr #27
   11c08:	muleq	r1, ip, sp
   11c0c:	andeq	r2, r1, ip, asr #27
   11c10:	andeq	r2, r1, r8, ror #27
   11c14:	andeq	r4, r2, r8, ror r0
   11c18:	andeq	r2, r1, r4, lsl #29
   11c1c:	andeq	r2, r1, ip, lsl pc
   11c20:	strdeq	r2, [r1], -r8
   11c24:	cdpeq	2, 14, cr11, cr6, cr0, {4}
   11c28:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11c2c:	andeq	r2, r1, r8, lsr #31
   11c30:	ldrdeq	r2, [r1], -r4
   11c34:	andeq	r2, r1, r8, asr #29
   11c38:	andeq	r2, r1, r8, lsl #30
   11c3c:			; <UNDEFINED> instruction: 0x00012ebc
   11c40:	andeq	r2, r1, r0, ror lr
   11c44:	andeq	r2, r1, r8, ror #29
   11c48:	andeq	r2, r1, ip, lsr #30
   11c4c:	ldrdeq	r2, [r1], -r4
   11c50:	mov	fp, #0
   11c54:	mov	lr, #0
   11c58:	pop	{r1}		; (ldr r1, [sp], #4)
   11c5c:	mov	r2, sp
   11c60:	push	{r2}		; (str r2, [sp, #-4]!)
   11c64:	push	{r0}		; (str r0, [sp, #-4]!)
   11c68:	ldr	ip, [pc, #16]	; 11c80 <mount@plt+0xc84>
   11c6c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c70:	ldr	r0, [pc, #12]	; 11c84 <mount@plt+0xc88>
   11c74:	ldr	r3, [pc, #12]	; 11c88 <mount@plt+0xc8c>
   11c78:	bl	10e64 <__libc_start_main@plt>
   11c7c:	bl	10fd8 <abort@plt>
   11c80:	andeq	r2, r1, ip, lsr #14
   11c84:	andeq	r1, r1, r8
   11c88:	andeq	r2, r1, ip, asr #13
   11c8c:	ldr	r3, [pc, #20]	; 11ca8 <mount@plt+0xcac>
   11c90:	ldr	r2, [pc, #20]	; 11cac <mount@plt+0xcb0>
   11c94:	add	r3, pc, r3
   11c98:	ldr	r2, [r3, r2]
   11c9c:	cmp	r2, #0
   11ca0:	bxeq	lr
   11ca4:	b	10e70 <__gmon_start__@plt>
   11ca8:	andeq	r2, r1, r8, ror #4
   11cac:	strdeq	r0, [r0], -r8
   11cb0:	ldr	r0, [pc, #24]	; 11cd0 <mount@plt+0xcd4>
   11cb4:	ldr	r3, [pc, #24]	; 11cd4 <mount@plt+0xcd8>
   11cb8:	cmp	r3, r0
   11cbc:	bxeq	lr
   11cc0:	ldr	r3, [pc, #16]	; 11cd8 <mount@plt+0xcdc>
   11cc4:	cmp	r3, #0
   11cc8:	bxeq	lr
   11ccc:	bx	r3
   11cd0:	andeq	r4, r2, r8, rrx
   11cd4:	andeq	r4, r2, r8, rrx
   11cd8:	andeq	r0, r0, r0
   11cdc:	ldr	r0, [pc, #36]	; 11d08 <mount@plt+0xd0c>
   11ce0:	ldr	r1, [pc, #36]	; 11d0c <mount@plt+0xd10>
   11ce4:	sub	r1, r1, r0
   11ce8:	asr	r1, r1, #2
   11cec:	add	r1, r1, r1, lsr #31
   11cf0:	asrs	r1, r1, #1
   11cf4:	bxeq	lr
   11cf8:	ldr	r3, [pc, #16]	; 11d10 <mount@plt+0xd14>
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	bx	r3
   11d08:	andeq	r4, r2, r8, rrx
   11d0c:	andeq	r4, r2, r8, rrx
   11d10:	andeq	r0, r0, r0
   11d14:	push	{r4, lr}
   11d18:	ldr	r4, [pc, #24]	; 11d38 <mount@plt+0xd3c>
   11d1c:	ldrb	r3, [r4]
   11d20:	cmp	r3, #0
   11d24:	popne	{r4, pc}
   11d28:	bl	11cb0 <mount@plt+0xcb4>
   11d2c:	mov	r3, #1
   11d30:	strb	r3, [r4]
   11d34:	pop	{r4, pc}
   11d38:	andeq	r4, r2, r4, lsl #1
   11d3c:	b	11cdc <mount@plt+0xce0>
   11d40:	push	{r4, r5, r6, r7, r8, lr}
   11d44:	sub	sp, sp, #4096	; 0x1000
   11d48:	ldr	r4, [pc, #216]	; 11e28 <mount@plt+0xe2c>
   11d4c:	ldr	r8, [pc, #216]	; 11e2c <mount@plt+0xe30>
   11d50:	sub	sp, sp, #24
   11d54:	add	r1, sp, #4096	; 0x1000
   11d58:	ldr	r2, [r4, #4]
   11d5c:	ldr	r3, [r8]
   11d60:	add	r1, r1, #20
   11d64:	cmp	r2, #0
   11d68:	str	r3, [r1]
   11d6c:	beq	11dd8 <mount@plt+0xddc>
   11d70:	ldr	r7, [pc, #184]	; 11e30 <mount@plt+0xe34>
   11d74:	mov	r6, r0
   11d78:	ldr	r3, [r4, #8]
   11d7c:	cmp	r3, #0
   11d80:	beq	11dc8 <mount@plt+0xdcc>
   11d84:	mov	r3, #4096	; 0x1000
   11d88:	mov	r1, r3
   11d8c:	mov	r5, #0
   11d90:	str	r2, [sp, #8]
   11d94:	str	r6, [sp, #4]
   11d98:	mov	r2, #1
   11d9c:	str	r7, [sp]
   11da0:	add	r0, sp, #20
   11da4:	bl	10ff0 <__snprintf_chk@plt>
   11da8:	str	r5, [sp]
   11dac:	mov	r2, r5
   11db0:	mov	r3, #4096	; 0x1000
   11db4:	ldr	r1, [r4, #8]
   11db8:	add	r0, sp, #20
   11dbc:	bl	10ffc <mount@plt>
   11dc0:	cmp	r0, r5
   11dc4:	bne	11e00 <mount@plt+0xe04>
   11dc8:	add	r4, r4, #12
   11dcc:	ldr	r2, [r4, #4]
   11dd0:	cmp	r2, #0
   11dd4:	bne	11d78 <mount@plt+0xd7c>
   11dd8:	add	r3, sp, #4096	; 0x1000
   11ddc:	add	r3, r3, #20
   11de0:	ldr	r2, [r3]
   11de4:	ldr	r3, [r8]
   11de8:	mov	r0, #0
   11dec:	cmp	r2, r3
   11df0:	bne	11e24 <mount@plt+0xe28>
   11df4:	add	sp, sp, #4096	; 0x1000
   11df8:	add	sp, sp, #24
   11dfc:	pop	{r4, r5, r6, r7, r8, pc}
   11e00:	mov	r2, #5
   11e04:	ldr	r1, [pc, #40]	; 11e34 <mount@plt+0xe38>
   11e08:	mov	r0, r5
   11e0c:	bl	10dbc <dcgettext@plt>
   11e10:	ldr	r3, [r4, #8]
   11e14:	add	r2, sp, #20
   11e18:	mov	r1, r0
   11e1c:	mov	r0, #1
   11e20:	bl	10df8 <err@plt>
   11e24:	bl	10dd4 <__stack_chk_fail@plt>
   11e28:	andeq	r4, r2, r8
   11e2c:	andeq	r3, r2, r0, lsl #28
   11e30:	andeq	r2, r1, ip, ror r8
   11e34:	andeq	r2, r1, r8, lsl #17
   11e38:	push	{r4, lr}
   11e3c:	sub	sp, sp, #4160	; 0x1040
   11e40:	ldr	r4, [pc, #148]	; 11edc <mount@plt+0xee0>
   11e44:	sub	sp, sp, #56	; 0x38
   11e48:	add	lr, sp, #4160	; 0x1040
   11e4c:	ldr	ip, [r4]
   11e50:	add	lr, lr, #52	; 0x34
   11e54:	ldr	r2, [pc, #132]	; 11ee0 <mount@plt+0xee4>
   11e58:	mov	r3, #4096	; 0x1000
   11e5c:	str	r0, [sp, #4]
   11e60:	str	r2, [sp]
   11e64:	mov	r1, r3
   11e68:	mov	r2, #1
   11e6c:	str	ip, [lr]
   11e70:	add	r0, sp, #116	; 0x74
   11e74:	bl	10ff0 <__snprintf_chk@plt>
   11e78:	add	r1, sp, #116	; 0x74
   11e7c:	add	r2, sp, #8
   11e80:	mov	r0, #3
   11e84:	bl	10fc0 <__xstat64@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11eb8 <mount@plt+0xebc>
   11e90:	add	r3, sp, #4160	; 0x1040
   11e94:	add	r3, r3, #52	; 0x34
   11e98:	ldr	r2, [r3]
   11e9c:	ldr	r3, [r4]
   11ea0:	ldrd	r0, [sp, #104]	; 0x68
   11ea4:	cmp	r2, r3
   11ea8:	bne	11ed8 <mount@plt+0xedc>
   11eac:	add	sp, sp, #4160	; 0x1040
   11eb0:	add	sp, sp, #56	; 0x38
   11eb4:	pop	{r4, pc}
   11eb8:	mov	r2, #5
   11ebc:	ldr	r1, [pc, #32]	; 11ee4 <mount@plt+0xee8>
   11ec0:	mov	r0, #0
   11ec4:	bl	10dbc <dcgettext@plt>
   11ec8:	add	r2, sp, #116	; 0x74
   11ecc:	mov	r1, r0
   11ed0:	mov	r0, #1
   11ed4:	bl	10df8 <err@plt>
   11ed8:	bl	10dd4 <__stack_chk_fail@plt>
   11edc:	andeq	r3, r2, r0, lsl #28
   11ee0:	andeq	r2, r1, r0, lsr #17
   11ee4:			; <UNDEFINED> instruction: 0x000128b0
   11ee8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11eec:	sub	sp, sp, #16
   11ef0:	ldr	r9, [pc, #208]	; 11fc8 <mount@plt+0xfcc>
   11ef4:	subs	r4, r2, #0
   11ef8:	ldr	r3, [r9]
   11efc:	str	r3, [sp, #12]
   11f00:	beq	11fa0 <mount@plt+0xfa4>
   11f04:	mov	r7, r0
   11f08:	mov	r6, r1
   11f0c:	bl	10edc <__errno_location@plt>
   11f10:	ldr	sl, [pc, #180]	; 11fcc <mount@plt+0xfd0>
   11f14:	mov	r8, #0
   11f18:	mov	r5, r0
   11f1c:	str	r8, [r5]
   11f20:	mov	r2, r4
   11f24:	mov	r1, r6
   11f28:	mov	r0, r7
   11f2c:	bl	10f30 <write@plt>
   11f30:	cmp	r0, #0
   11f34:	ble	11f64 <mount@plt+0xf68>
   11f38:	subs	r4, r4, r0
   11f3c:	ldr	r3, [r5]
   11f40:	beq	11f80 <mount@plt+0xf84>
   11f44:	cmp	r3, #11
   11f48:	add	r6, r6, r0
   11f4c:	bne	11f1c <mount@plt+0xf20>
   11f50:	mov	r1, #0
   11f54:	add	r0, sp, #4
   11f58:	stmib	sp, {r8, sl}
   11f5c:	bl	10d8c <nanosleep@plt>
   11f60:	b	11f1c <mount@plt+0xf20>
   11f64:	ldr	r3, [r5]
   11f68:	cmp	r3, #4
   11f6c:	cmpne	r3, #11
   11f70:	bne	11fbc <mount@plt+0xfc0>
   11f74:	cmp	r3, #11
   11f78:	bne	11f1c <mount@plt+0xf20>
   11f7c:	b	11f50 <mount@plt+0xf54>
   11f80:	cmp	r3, #11
   11f84:	bne	11fa0 <mount@plt+0xfa4>
   11f88:	ldr	r3, [pc, #60]	; 11fcc <mount@plt+0xfd0>
   11f8c:	mov	r1, r4
   11f90:	add	r0, sp, #4
   11f94:	str	r4, [sp, #4]
   11f98:	str	r3, [sp, #8]
   11f9c:	bl	10d8c <nanosleep@plt>
   11fa0:	mov	r0, #0
   11fa4:	ldr	r2, [sp, #12]
   11fa8:	ldr	r3, [r9]
   11fac:	cmp	r2, r3
   11fb0:	bne	11fc4 <mount@plt+0xfc8>
   11fb4:	add	sp, sp, #16
   11fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fbc:	mvn	r0, #0
   11fc0:	b	11fa4 <mount@plt+0xfa8>
   11fc4:	bl	10dd4 <__stack_chk_fail@plt>
   11fc8:	andeq	r3, r2, r0, lsl #28
   11fcc:	cdpeq	2, 14, cr11, cr6, cr0, {4}
   11fd0:	ldr	r3, [pc, #88]	; 12030 <mount@plt+0x1034>
   11fd4:	ldr	r2, [r3, #4]
   11fd8:	cmp	r2, #0
   11fdc:	beq	12028 <mount@plt+0x102c>
   11fe0:	ldr	r2, [r3]
   11fe4:	cmp	r0, r2
   11fe8:	bne	12008 <mount@plt+0x100c>
   11fec:	ldr	r2, [pc, #64]	; 12034 <mount@plt+0x1038>
   11ff0:	str	r1, [r3, #8]
   11ff4:	mov	r0, #0
   11ff8:	ldr	r3, [r2]
   11ffc:	add	r3, r3, #1
   12000:	str	r3, [r2]
   12004:	bx	lr
   12008:	add	r3, r3, #12
   1200c:	ldr	r2, [r3, #4]
   12010:	cmp	r2, #0
   12014:	beq	12028 <mount@plt+0x102c>
   12018:	ldr	r2, [r3]
   1201c:	cmp	r2, r0
   12020:	beq	11fec <mount@plt+0xff0>
   12024:	b	12008 <mount@plt+0x100c>
   12028:	mvn	r0, #21
   1202c:	bx	lr
   12030:	andeq	r4, r2, r8
   12034:	andeq	r4, r2, r8, lsl #1
   12038:	cmp	r0, #1
   1203c:	bxhi	lr
   12040:	ldr	r2, [pc, #152]	; 120e0 <mount@plt+0x10e4>
   12044:	mov	r3, r0
   12048:	push	{r4, r5, r6, lr}
   1204c:	mov	r1, #1
   12050:	ldr	r0, [pc, #140]	; 120e4 <mount@plt+0x10e8>
   12054:	ldr	r5, [r2, r3, lsl #2]
   12058:	bl	10e40 <open64@plt>
   1205c:	subs	r4, r0, #0
   12060:	bge	12094 <mount@plt+0x1098>
   12064:	bl	10edc <__errno_location@plt>
   12068:	ldr	r3, [r0]
   1206c:	cmp	r3, #2
   12070:	popeq	{r4, r5, r6, pc}
   12074:	mov	r2, #5
   12078:	ldr	r1, [pc, #104]	; 120e8 <mount@plt+0x10ec>
   1207c:	mov	r0, #0
   12080:	bl	10dbc <dcgettext@plt>
   12084:	ldr	r2, [pc, #88]	; 120e4 <mount@plt+0x10e8>
   12088:	mov	r1, r0
   1208c:	mov	r0, #1
   12090:	bl	10df8 <err@plt>
   12094:	mov	r0, r5
   12098:	bl	10eb8 <strlen@plt>
   1209c:	mov	r1, r5
   120a0:	mov	r2, r0
   120a4:	mov	r0, r4
   120a8:	bl	11ee8 <mount@plt+0xeec>
   120ac:	cmp	r0, #0
   120b0:	bne	120c0 <mount@plt+0x10c4>
   120b4:	mov	r0, r4
   120b8:	pop	{r4, r5, r6, lr}
   120bc:	b	10fe4 <close@plt>
   120c0:	mov	r2, #5
   120c4:	ldr	r1, [pc, #32]	; 120ec <mount@plt+0x10f0>
   120c8:	mov	r0, #0
   120cc:	bl	10dbc <dcgettext@plt>
   120d0:	ldr	r2, [pc, #12]	; 120e4 <mount@plt+0x10e8>
   120d4:	mov	r1, r0
   120d8:	mov	r0, #1
   120dc:	bl	10df8 <err@plt>
   120e0:	andeq	r2, r1, r4, asr r7
   120e4:	andeq	r2, r1, r0, asr #17
   120e8:	ldrdeq	r2, [r1], -r8
   120ec:	andeq	r2, r1, r8, ror #17
   120f0:	push	{r1, r2, r3}
   120f4:	push	{r4, lr}
   120f8:	sub	sp, sp, #12
   120fc:	ldr	r4, [pc, #84]	; 12158 <mount@plt+0x115c>
   12100:	add	ip, sp, #24
   12104:	mov	r3, ip
   12108:	ldr	r1, [r4]
   1210c:	ldr	r2, [pc, #72]	; 1215c <mount@plt+0x1160>
   12110:	str	r1, [sp, #4]
   12114:	mov	r1, #1
   12118:	str	ip, [sp]
   1211c:	bl	10f00 <__vasprintf_chk@plt>
   12120:	cmp	r0, #0
   12124:	blt	12148 <mount@plt+0x114c>
   12128:	ldr	r2, [sp, #4]
   1212c:	ldr	r3, [r4]
   12130:	cmp	r2, r3
   12134:	bne	12154 <mount@plt+0x1158>
   12138:	add	sp, sp, #12
   1213c:	pop	{r4, lr}
   12140:	add	sp, sp, #12
   12144:	bx	lr
   12148:	ldr	r1, [pc, #16]	; 12160 <mount@plt+0x1164>
   1214c:	mov	r0, #1
   12150:	bl	10df8 <err@plt>
   12154:	bl	10dd4 <__stack_chk_fail@plt>
   12158:	andeq	r3, r2, r0, lsl #28
   1215c:	strdeq	r2, [r1], -r8
   12160:	andeq	r2, r1, r0, lsl #18
   12164:	push	{r4, r5, r6, r7, lr}
   12168:	sub	sp, sp, #12
   1216c:	ldr	r4, [pc, #168]	; 1221c <mount@plt+0x1220>
   12170:	mov	r6, r1
   12174:	mov	r1, #1
   12178:	ldr	r2, [r4]
   1217c:	mov	r7, r0
   12180:	str	r2, [sp, #4]
   12184:	bl	10e40 <open64@plt>
   12188:	subs	r5, r0, #0
   1218c:	movlt	r2, #5
   12190:	ldrlt	r1, [pc, #136]	; 12220 <mount@plt+0x1224>
   12194:	blt	12200 <mount@plt+0x1204>
   12198:	mov	r3, r6
   1219c:	mov	r2, #0
   121a0:	ldr	r1, [pc, #124]	; 12224 <mount@plt+0x1228>
   121a4:	mov	r0, sp
   121a8:	bl	120f0 <mount@plt+0x10f4>
   121ac:	ldr	r6, [sp]
   121b0:	mov	r0, r6
   121b4:	bl	10eb8 <strlen@plt>
   121b8:	mov	r1, r6
   121bc:	mov	r2, r0
   121c0:	mov	r0, r5
   121c4:	bl	11ee8 <mount@plt+0xeec>
   121c8:	cmp	r0, #0
   121cc:	bne	121f8 <mount@plt+0x11fc>
   121d0:	ldr	r0, [sp]
   121d4:	bl	10d74 <free@plt>
   121d8:	mov	r0, r5
   121dc:	bl	10fe4 <close@plt>
   121e0:	ldr	r2, [sp, #4]
   121e4:	ldr	r3, [r4]
   121e8:	cmp	r2, r3
   121ec:	bne	12218 <mount@plt+0x121c>
   121f0:	add	sp, sp, #12
   121f4:	pop	{r4, r5, r6, r7, pc}
   121f8:	ldr	r1, [pc, #40]	; 12228 <mount@plt+0x122c>
   121fc:	mov	r2, #5
   12200:	mov	r0, #0
   12204:	bl	10dbc <dcgettext@plt>
   12208:	mov	r2, r7
   1220c:	mov	r1, r0
   12210:	mov	r0, #1
   12214:	bl	10df8 <err@plt>
   12218:	bl	10dd4 <__stack_chk_fail@plt>
   1221c:	andeq	r3, r2, r0, lsl #28
   12220:	ldrdeq	r2, [r1], -r8
   12224:	strdeq	r2, [r1], -r8
   12228:	andeq	r2, r1, r8, ror #17
   1222c:	ldr	r3, [pc, #292]	; 12358 <mount@plt+0x135c>
   12230:	push	{r4, r5, r6, lr}
   12234:	ldr	r4, [r3]
   12238:	mov	r0, r4
   1223c:	bl	10e34 <__fpending@plt>
   12240:	mov	r6, r0
   12244:	mov	r0, r4
   12248:	bl	10d98 <ferror@plt>
   1224c:	mov	r5, r0
   12250:	mov	r0, r4
   12254:	bl	10f48 <fclose@plt>
   12258:	cmp	r5, #0
   1225c:	mov	r4, r0
   12260:	bne	12308 <mount@plt+0x130c>
   12264:	cmp	r0, #0
   12268:	beq	12284 <mount@plt+0x1288>
   1226c:	bl	10edc <__errno_location@plt>
   12270:	cmp	r6, #0
   12274:	ldr	r3, [r0]
   12278:	bne	122e0 <mount@plt+0x12e4>
   1227c:	cmp	r3, #9
   12280:	bne	122e0 <mount@plt+0x12e4>
   12284:	ldr	r3, [pc, #208]	; 1235c <mount@plt+0x1360>
   12288:	ldr	r4, [r3]
   1228c:	mov	r0, r4
   12290:	bl	10e34 <__fpending@plt>
   12294:	mov	r6, r0
   12298:	mov	r0, r4
   1229c:	bl	10d98 <ferror@plt>
   122a0:	mov	r5, r0
   122a4:	mov	r0, r4
   122a8:	bl	10f48 <fclose@plt>
   122ac:	cmp	r5, #0
   122b0:	mov	r4, r0
   122b4:	bne	1233c <mount@plt+0x1340>
   122b8:	cmp	r0, #0
   122bc:	popeq	{r4, r5, r6, pc}
   122c0:	cmp	r6, #0
   122c4:	bne	122d8 <mount@plt+0x12dc>
   122c8:	bl	10edc <__errno_location@plt>
   122cc:	ldr	r3, [r0]
   122d0:	cmp	r3, #9
   122d4:	popeq	{r4, r5, r6, pc}
   122d8:	mov	r0, #1
   122dc:	bl	10da4 <_exit@plt>
   122e0:	cmp	r3, #32
   122e4:	beq	12284 <mount@plt+0x1288>
   122e8:	cmp	r3, #0
   122ec:	beq	12324 <mount@plt+0x1328>
   122f0:	mov	r2, #5
   122f4:	ldr	r1, [pc, #100]	; 12360 <mount@plt+0x1364>
   122f8:	mov	r0, #0
   122fc:	bl	10dbc <dcgettext@plt>
   12300:	bl	10f90 <warn@plt>
   12304:	b	122d8 <mount@plt+0x12dc>
   12308:	bl	10edc <__errno_location@plt>
   1230c:	cmp	r4, #0
   12310:	ldr	r3, [r0]
   12314:	bne	122e0 <mount@plt+0x12e4>
   12318:	cmp	r3, #32
   1231c:	strne	r4, [r0]
   12320:	beq	12284 <mount@plt+0x1288>
   12324:	mov	r2, #5
   12328:	ldr	r1, [pc, #48]	; 12360 <mount@plt+0x1364>
   1232c:	mov	r0, #0
   12330:	bl	10dbc <dcgettext@plt>
   12334:	bl	10ed0 <warnx@plt>
   12338:	b	122d8 <mount@plt+0x12dc>
   1233c:	cmp	r0, #0
   12340:	bne	122d8 <mount@plt+0x12dc>
   12344:	bl	10edc <__errno_location@plt>
   12348:	ldr	r3, [r0]
   1234c:	cmp	r3, #32
   12350:	strne	r4, [r0]
   12354:	b	122d8 <mount@plt+0x12dc>
   12358:	andeq	r4, r2, ip, ror r0
   1235c:	andeq	r4, r2, r8, ror r0
   12360:	andeq	r2, r1, r8, lsl r9
   12364:	ldr	r0, [pc, #204]	; 12438 <mount@plt+0x143c>
   12368:	push	{r7, lr}
   1236c:	add	r0, pc, r0
   12370:	bl	10e4c <getenv@plt>
   12374:	subs	r4, r0, #0
   12378:	beq	12408 <mount@plt+0x140c>
   1237c:	mov	r0, r4
   12380:	bl	10dc8 <strdup@plt>
   12384:	cmp	r0, #0
   12388:	beq	12428 <mount@plt+0x142c>
   1238c:	bl	10f0c <__xpg_basename@plt>
   12390:	mov	r7, r0
   12394:	bl	10eb8 <strlen@plt>
   12398:	add	r6, r0, #2
   1239c:	mov	r0, r6
   123a0:	bl	10e58 <malloc@plt>
   123a4:	subs	r5, r0, #0
   123a8:	beq	12414 <mount@plt+0x1418>
   123ac:	mov	r0, r5
   123b0:	mov	r3, #45	; 0x2d
   123b4:	strb	r3, [r0], #1
   123b8:	mov	r1, r7
   123bc:	bl	10e28 <strcpy@plt>
   123c0:	mov	r1, r5
   123c4:	mov	r2, #0
   123c8:	mov	r0, r4
   123cc:	bl	10f84 <execl@plt>
   123d0:	bl	10edc <__errno_location@plt>
   123d4:	ldr	r1, [pc, #96]	; 1243c <mount@plt+0x1440>
   123d8:	mov	r2, #5
   123dc:	add	r1, pc, r1
   123e0:	ldr	r3, [r0]
   123e4:	mov	r0, #0
   123e8:	cmp	r3, #2
   123ec:	moveq	r5, #127	; 0x7f
   123f0:	movne	r5, #126	; 0x7e
   123f4:	bl	10dbc <dcgettext@plt>
   123f8:	mov	r2, r4
   123fc:	mov	r1, r0
   12400:	mov	r0, r5
   12404:	bl	10df8 <err@plt>
   12408:	ldr	r4, [pc, #48]	; 12440 <mount@plt+0x1444>
   1240c:	add	r4, pc, r4
   12410:	b	1237c <mount@plt+0x1380>
   12414:	ldr	r1, [pc, #40]	; 12444 <mount@plt+0x1448>
   12418:	mov	r2, r6
   1241c:	add	r1, pc, r1
   12420:	mov	r0, #1
   12424:	bl	10df8 <err@plt>
   12428:	ldr	r1, [pc, #24]	; 12448 <mount@plt+0x144c>
   1242c:	mov	r0, #1
   12430:	add	r1, pc, r1
   12434:	bl	10df8 <err@plt>
   12438:	andeq	r0, r0, r0, ror sp
   1243c:	andeq	r0, r0, r8, lsl #24
   12440:	andeq	r0, r0, r8, asr #25
   12444:	andeq	r0, r0, r0, ror #25
   12448:			; <UNDEFINED> instruction: 0x00000cb4
   1244c:	ldr	r3, [pc, #428]	; 12600 <mount@plt+0x1604>
   12450:	ldr	ip, [pc, #428]	; 12604 <mount@plt+0x1608>
   12454:	add	r3, pc, r3
   12458:	push	{r4, r5, r6, r7, r8, lr}
   1245c:	sub	sp, sp, #8
   12460:	ldr	r7, [r3, ip]
   12464:	ldr	r1, [pc, #412]	; 12608 <mount@plt+0x160c>
   12468:	mov	r2, #3
   1246c:	ldr	r3, [r7]
   12470:	add	r1, pc, r1
   12474:	mov	r5, r0
   12478:	str	r3, [sp, #4]
   1247c:	bl	10ee8 <strncasecmp@plt>
   12480:	ldr	r1, [pc, #388]	; 1260c <mount@plt+0x1610>
   12484:	mov	r2, #2
   12488:	add	r1, pc, r1
   1248c:	cmp	r0, #0
   12490:	addeq	r5, r5, #3
   12494:	mov	r0, r5
   12498:	bl	10ee8 <strncasecmp@plt>
   1249c:	subs	r4, r0, #0
   124a0:	beq	12508 <mount@plt+0x150c>
   124a4:	ldr	r0, [pc, #356]	; 12610 <mount@plt+0x1614>
   124a8:	ldr	r6, [pc, #356]	; 12614 <mount@plt+0x1618>
   124ac:	add	r0, pc, r0
   124b0:	add	r6, pc, r6
   124b4:	mov	r4, #0
   124b8:	b	124cc <mount@plt+0x14d0>
   124bc:	add	r4, r4, #1
   124c0:	cmp	r4, #34	; 0x22
   124c4:	beq	12570 <mount@plt+0x1574>
   124c8:	ldr	r0, [r6, r4, lsl #3]
   124cc:	mov	r1, r5
   124d0:	bl	10dec <strcasecmp@plt>
   124d4:	cmp	r0, #0
   124d8:	bne	124bc <mount@plt+0x14c0>
   124dc:	ldr	r3, [pc, #308]	; 12618 <mount@plt+0x161c>
   124e0:	add	r3, pc, r3
   124e4:	add	r4, r3, r4, lsl #3
   124e8:	ldr	r4, [r4, #4]
   124ec:	ldr	r2, [sp, #4]
   124f0:	ldr	r3, [r7]
   124f4:	mov	r0, r4
   124f8:	cmp	r2, r3
   124fc:	bne	125fc <mount@plt+0x1600>
   12500:	add	sp, sp, #8
   12504:	pop	{r4, r5, r6, r7, r8, pc}
   12508:	ldr	r1, [pc, #268]	; 1261c <mount@plt+0x1620>
   1250c:	add	r6, r5, #2
   12510:	mov	r0, r6
   12514:	mov	r2, #4
   12518:	add	r1, pc, r1
   1251c:	str	r4, [sp]
   12520:	bl	10ee8 <strncasecmp@plt>
   12524:	subs	r8, r0, #0
   12528:	addeq	r6, r5, #6
   1252c:	beq	12554 <mount@plt+0x1558>
   12530:	ldr	r1, [pc, #232]	; 12620 <mount@plt+0x1624>
   12534:	mov	r0, r6
   12538:	mov	r2, #4
   1253c:	add	r1, pc, r1
   12540:	bl	10ee8 <strncasecmp@plt>
   12544:	cmp	r0, #0
   12548:	addeq	r6, r5, #6
   1254c:	moveq	r8, #1
   12550:	movne	r8, r4
   12554:	bl	10e94 <__ctype_b_loc@plt>
   12558:	ldrsb	r3, [r6]
   1255c:	lsl	r3, r3, #1
   12560:	ldr	r2, [r0]
   12564:	ldrh	r3, [r2, r3]
   12568:	tst	r3, #2048	; 0x800
   1256c:	bne	12578 <mount@plt+0x157c>
   12570:	mvn	r4, #0
   12574:	b	124ec <mount@plt+0x14f0>
   12578:	bl	10edc <__errno_location@plt>
   1257c:	mov	r3, #0
   12580:	mov	r2, #10
   12584:	mov	r1, sp
   12588:	str	r3, [r0]
   1258c:	mov	r5, r0
   12590:	mov	r0, r6
   12594:	bl	10d5c <strtol@plt>
   12598:	ldr	r3, [sp]
   1259c:	cmp	r6, r3
   125a0:	cmpne	r3, #0
   125a4:	mov	r4, r0
   125a8:	beq	12570 <mount@plt+0x1574>
   125ac:	ldr	r3, [r5]
   125b0:	cmp	r3, #0
   125b4:	lsreq	r3, r0, #31
   125b8:	movne	r3, #1
   125bc:	cmp	r3, #0
   125c0:	bne	12570 <mount@plt+0x1574>
   125c4:	cmp	r8, #0
   125c8:	beq	125f0 <mount@plt+0x15f4>
   125cc:	bl	10ec4 <__libc_current_sigrtmax@plt>
   125d0:	sub	r4, r0, r4
   125d4:	bl	10fb4 <__libc_current_sigrtmin@plt>
   125d8:	cmp	r0, r4
   125dc:	bgt	12570 <mount@plt+0x1574>
   125e0:	bl	10ec4 <__libc_current_sigrtmax@plt>
   125e4:	cmp	r4, r0
   125e8:	ble	124ec <mount@plt+0x14f0>
   125ec:	b	12570 <mount@plt+0x1574>
   125f0:	bl	10fb4 <__libc_current_sigrtmin@plt>
   125f4:	add	r4, r4, r0
   125f8:	b	125d4 <mount@plt+0x15d8>
   125fc:	bl	10dd4 <__stack_chk_fail@plt>
   12600:	andeq	r1, r1, r8, lsr #21
   12604:	strdeq	r0, [r0], -r4
   12608:	andeq	r0, r0, ip, lsr #25
   1260c:	muleq	r0, r8, ip
   12610:	andeq	r0, r0, ip, ror #24
   12614:	andeq	r1, r1, r8, lsr r8
   12618:	andeq	r1, r1, r8, lsl #16
   1261c:	andeq	r0, r0, ip, lsl #24
   12620:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12624:	ldr	r1, [pc, #64]	; 1266c <mount@plt+0x1670>
   12628:	mov	r2, #1
   1262c:	add	r1, pc, r1
   12630:	mov	r3, #0
   12634:	b	1264c <mount@plt+0x1650>
   12638:	add	r3, r3, #1
   1263c:	cmp	r3, #34	; 0x22
   12640:	add	r2, r1, r3, lsl #3
   12644:	beq	12664 <mount@plt+0x1668>
   12648:	ldr	r2, [r2, #4]
   1264c:	cmp	r2, r0
   12650:	bne	12638 <mount@plt+0x163c>
   12654:	ldr	r2, [pc, #20]	; 12670 <mount@plt+0x1674>
   12658:	add	r2, pc, r2
   1265c:	ldr	r0, [r2, r3, lsl #3]
   12660:	bx	lr
   12664:	mov	r0, #0
   12668:	bx	lr
   1266c:			; <UNDEFINED> instruction: 0x000116bc
   12670:	muleq	r1, r0, r6
   12674:	cmp	r0, #33	; 0x21
   12678:	bhi	126bc <mount@plt+0x16c0>
   1267c:	cmp	r1, #0
   12680:	ldrne	r3, [pc, #60]	; 126c4 <mount@plt+0x16c8>
   12684:	addne	r3, pc, r3
   12688:	ldrne	r3, [r3, r0, lsl #3]
   1268c:	strne	r3, [r1]
   12690:	cmp	r2, #0
   12694:	moveq	r1, r2
   12698:	beq	126b4 <mount@plt+0x16b8>
   1269c:	ldr	r3, [pc, #36]	; 126c8 <mount@plt+0x16cc>
   126a0:	mov	r1, #0
   126a4:	add	r3, pc, r3
   126a8:	add	r3, r3, r0, lsl #3
   126ac:	ldr	r3, [r3, #4]
   126b0:	str	r3, [r2]
   126b4:	mov	r0, r1
   126b8:	bx	lr
   126bc:	mvn	r1, #0
   126c0:	b	126b4 <mount@plt+0x16b8>
   126c4:	andeq	r1, r1, r4, ror #12
   126c8:	andeq	r1, r1, r4, asr #12
   126cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126d0:	mov	r7, r0
   126d4:	ldr	r6, [pc, #72]	; 12724 <mount@plt+0x1728>
   126d8:	ldr	r5, [pc, #72]	; 12728 <mount@plt+0x172c>
   126dc:	add	r6, pc, r6
   126e0:	add	r5, pc, r5
   126e4:	sub	r6, r6, r5
   126e8:	mov	r8, r1
   126ec:	mov	r9, r2
   126f0:	bl	10d30 <strcmp@plt-0x20>
   126f4:	asrs	r6, r6, #2
   126f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   126fc:	mov	r4, #0
   12700:	add	r4, r4, #1
   12704:	ldr	r3, [r5], #4
   12708:	mov	r2, r9
   1270c:	mov	r1, r8
   12710:	mov	r0, r7
   12714:	blx	r3
   12718:	cmp	r6, r4
   1271c:	bne	12700 <mount@plt+0x1704>
   12720:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12724:	andeq	r1, r1, r8, lsl #12
   12728:	andeq	r1, r1, r0, lsl #12
   1272c:	bx	lr
   12730:	ldr	r3, [pc, #12]	; 12744 <mount@plt+0x1748>
   12734:	mov	r1, #0
   12738:	add	r3, pc, r3
   1273c:	ldr	r2, [r3]
   12740:	b	10ef4 <__cxa_atexit@plt>
   12744:	andeq	r1, r1, r4, asr #17

Disassembly of section .fini:

00012748 <.fini>:
   12748:	push	{r3, lr}
   1274c:	pop	{r3, pc}
