
raspbian-preinstalled/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010e40 <.init>:
   10e40:	push	{r3, lr}
   10e44:	bl	115c4 <close@plt+0x4f4>
   10e48:	pop	{r3, pc}

Disassembly of section .plt:

00010e4c <calloc@plt-0x14>:
   10e4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e50:	ldr	lr, [pc, #4]	; 10e5c <calloc@plt-0x4>
   10e54:	add	lr, pc, lr
   10e58:	ldr	pc, [lr, #8]!
   10e5c:	andeq	r7, r1, r4, lsr #3

00010e60 <calloc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #420]!	; 0x1a4

00010e6c <fputs_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #412]!	; 0x19c

00010e78 <raise@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #404]!	; 0x194

00010e84 <__getdelim@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #396]!	; 0x18c

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #388]!	; 0x184

00010e9c <fflush@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #380]!	; 0x17c

00010ea8 <free@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #372]!	; 0x174

00010eb4 <strndup@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #364]!	; 0x16c

00010ec0 <_exit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #356]!	; 0x164

00010ecc <memcpy@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #348]!	; 0x15c

00010ed8 <mbsinit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #340]!	; 0x154

00010ee4 <fwrite_unlocked@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #332]!	; 0x14c

00010ef0 <memcmp@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #324]!	; 0x144

00010efc <dcgettext@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #316]!	; 0x13c

00010f08 <__stack_chk_fail@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #308]!	; 0x134

00010f14 <dup2@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #300]!	; 0x12c

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #292]!	; 0x124

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #284]!	; 0x11c

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #276]!	; 0x114

00010f44 <fwrite@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #268]!	; 0x10c

00010f50 <lseek64@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #260]!	; 0x104

00010f5c <__ctype_get_mb_cur_max@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #252]!	; 0xfc

00010f68 <__fpending@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #244]!	; 0xf4

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #236]!	; 0xec

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #228]!	; 0xe4

00010f8c <fnmatch@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #220]!	; 0xdc

00010f98 <open64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #212]!	; 0xd4

00010fa4 <getenv@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #204]!	; 0xcc

00010fb0 <puts@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #196]!	; 0xc4

00010fbc <malloc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #188]!	; 0xbc

00010fc8 <__libc_start_main@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #180]!	; 0xb4

00010fd4 <__freading@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #172]!	; 0xac

00010fe0 <__gmon_start__@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #164]!	; 0xa4

00010fec <freopen64@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #156]!	; 0x9c

00010ff8 <getopt_long@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #148]!	; 0x94

00011004 <__ctype_b_loc@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #140]!	; 0x8c

00011010 <exit@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #132]!	; 0x84

0001101c <strlen@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #94208	; 0x17000
   11024:	ldr	pc, [ip, #124]!	; 0x7c

00011028 <__errno_location@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #94208	; 0x17000
   11030:	ldr	pc, [ip, #116]!	; 0x74

00011034 <__cxa_atexit@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #94208	; 0x17000
   1103c:	ldr	pc, [ip, #108]!	; 0x6c

00011040 <memset@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #94208	; 0x17000
   11048:	ldr	pc, [ip, #100]!	; 0x64

0001104c <__printf_chk@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #94208	; 0x17000
   11054:	ldr	pc, [ip, #92]!	; 0x5c

00011058 <fileno@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #94208	; 0x17000
   11060:	ldr	pc, [ip, #84]!	; 0x54

00011064 <__fprintf_chk@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #94208	; 0x17000
   1106c:	ldr	pc, [ip, #76]!	; 0x4c

00011070 <fclose@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #94208	; 0x17000
   11078:	ldr	pc, [ip, #68]!	; 0x44

0001107c <fseeko64@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #94208	; 0x17000
   11084:	ldr	pc, [ip, #60]!	; 0x3c

00011088 <setlocale@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #94208	; 0x17000
   11090:	ldr	pc, [ip, #52]!	; 0x34

00011094 <strrchr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #94208	; 0x17000
   1109c:	ldr	pc, [ip, #44]!	; 0x2c

000110a0 <nl_langinfo@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #94208	; 0x17000
   110a8:	ldr	pc, [ip, #36]!	; 0x24

000110ac <bindtextdomain@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #94208	; 0x17000
   110b4:	ldr	pc, [ip, #28]!

000110b8 <strncmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #94208	; 0x17000
   110c0:	ldr	pc, [ip, #20]!

000110c4 <abort@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #12]!

000110d0 <close@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4]!

Disassembly of section .text:

000110dc <_obstack_begin@@Base-0x41a0>:
   110dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110e0:	mov	r7, r0
   110e4:	sub	sp, sp, #12
   110e8:	ldr	r0, [r1]
   110ec:	mov	r5, r1
   110f0:	bl	124c8 <close@plt+0x13f8>
   110f4:	ldr	r1, [pc, #1028]	; 11500 <close@plt+0x430>
   110f8:	mov	r0, #6
   110fc:	bl	11088 <setlocale@plt>
   11100:	ldr	r1, [pc, #1020]	; 11504 <close@plt+0x434>
   11104:	ldr	r0, [pc, #1020]	; 11508 <close@plt+0x438>
   11108:	bl	110ac <bindtextdomain@plt>
   1110c:	ldr	r0, [pc, #1012]	; 11508 <close@plt+0x438>
   11110:	bl	10f2c <textdomain@plt>
   11114:	ldr	r0, [pc, #1008]	; 1150c <close@plt+0x43c>
   11118:	bl	1581c <_obstack_memory_used@@Base+0x3a8>
   1111c:	mov	r4, #0
   11120:	ldr	r9, [pc, #1000]	; 11510 <close@plt+0x440>
   11124:	ldr	r8, [pc, #1000]	; 11514 <close@plt+0x444>
   11128:	mov	r6, r4
   1112c:	mov	sl, #2
   11130:	str	r6, [sp]
   11134:	mov	r3, r9
   11138:	mov	r2, r8
   1113c:	mov	r1, r5
   11140:	mov	r0, r7
   11144:	bl	10ff8 <getopt_long@plt>
   11148:	cmn	r0, #1
   1114c:	beq	111cc <close@plt+0xfc>
   11150:	cmp	r0, #98	; 0x62
   11154:	beq	111c4 <close@plt+0xf4>
   11158:	ble	1116c <close@plt+0x9c>
   1115c:	cmp	r0, #99	; 0x63
   11160:	bne	111a4 <close@plt+0xd4>
   11164:	mov	sl, #1
   11168:	b	11130 <close@plt+0x60>
   1116c:	cmn	r0, #3
   11170:	bne	111b4 <close@plt+0xe4>
   11174:	ldr	r1, [pc, #924]	; 11518 <close@plt+0x448>
   11178:	ldr	r3, [pc, #924]	; 1151c <close@plt+0x44c>
   1117c:	ldr	r2, [pc, #924]	; 11520 <close@plt+0x450>
   11180:	str	r6, [sp, #4]
   11184:	ldr	r0, [r1]
   11188:	ldr	r3, [r3]
   1118c:	ldr	r1, [pc, #912]	; 11524 <close@plt+0x454>
   11190:	str	r2, [sp]
   11194:	ldr	r2, [pc, #908]	; 11528 <close@plt+0x458>
   11198:	bl	14b98 <close@plt+0x3ac8>
   1119c:	mov	r0, #0
   111a0:	bl	11010 <exit@plt>
   111a4:	cmp	r0, #112	; 0x70
   111a8:	bne	11464 <close@plt+0x394>
   111ac:	mov	r4, #1
   111b0:	b	11130 <close@plt+0x60>
   111b4:	cmn	r0, #2
   111b8:	bne	11464 <close@plt+0x394>
   111bc:	mov	r0, #0
   111c0:	bl	11dfc <close@plt+0xd2c>
   111c4:	mov	sl, #0
   111c8:	b	11130 <close@plt+0x60>
   111cc:	ldr	r3, [pc, #856]	; 1152c <close@plt+0x45c>
   111d0:	cmp	sl, #2
   111d4:	moveq	r9, #0
   111d8:	andne	r9, r4, #1
   111dc:	cmp	r9, #0
   111e0:	ldr	r8, [r3]
   111e4:	sub	r7, r7, r8
   111e8:	add	fp, r5, r8, lsl #2
   111ec:	bne	114bc <close@plt+0x3ec>
   111f0:	eor	r6, r4, #1
   111f4:	uxtb	r3, r6
   111f8:	cmp	r3, r7
   111fc:	blt	11400 <close@plt+0x330>
   11200:	cmp	r4, #0
   11204:	beq	11244 <close@plt+0x174>
   11208:	ldr	r5, [pc, #800]	; 11530 <close@plt+0x460>
   1120c:	ldr	r7, [pc, #800]	; 11534 <close@plt+0x464>
   11210:	mov	r4, r5
   11214:	mov	r0, r4
   11218:	bl	10fb0 <puts@plt>
   1121c:	mov	r0, r4
   11220:	bl	1101c <strlen@plt>
   11224:	add	r0, r0, #1
   11228:	add	r4, r4, r0
   1122c:	sub	r3, r4, r5
   11230:	cmp	r3, r7
   11234:	bls	11214 <close@plt+0x144>
   11238:	uxtb	r0, r6
   1123c:	add	sp, sp, #12
   11240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11244:	cmp	sl, #2
   11248:	beq	11380 <close@plt+0x2b0>
   1124c:	ldr	r3, [pc, #740]	; 11538 <close@plt+0x468>
   11250:	mov	r2, #0
   11254:	str	r3, [sp]
   11258:	mov	r1, r2
   1125c:	ldr	r3, [pc, #728]	; 1153c <close@plt+0x46c>
   11260:	ldr	r0, [pc, #728]	; 11540 <close@plt+0x470>
   11264:	bl	1527c <_obstack_begin@@Base>
   11268:	cmp	r7, #0
   1126c:	beq	1136c <close@plt+0x29c>
   11270:	ldr	r5, [r5, r8, lsl #2]
   11274:	ldr	r1, [pc, #712]	; 11544 <close@plt+0x474>
   11278:	mov	r0, r5
   1127c:	bl	10e90 <strcmp@plt>
   11280:	ldr	r7, [pc, #704]	; 11548 <close@plt+0x478>
   11284:	cmp	r0, #0
   11288:	beq	112a4 <close@plt+0x1d4>
   1128c:	ldr	r1, [pc, #696]	; 1154c <close@plt+0x47c>
   11290:	mov	r0, r5
   11294:	ldr	r2, [r7]
   11298:	bl	12358 <close@plt+0x1288>
   1129c:	subs	r4, r0, #0
   112a0:	beq	1146c <close@plt+0x39c>
   112a4:	mov	r1, r5
   112a8:	ldr	r0, [r7]
   112ac:	bl	117fc <close@plt+0x72c>
   112b0:	mov	r4, r0
   112b4:	ldr	r0, [r7]
   112b8:	bl	14f38 <close@plt+0x3e68>
   112bc:	cmp	r0, #0
   112c0:	bne	113d0 <close@plt+0x300>
   112c4:	cmp	r4, #0
   112c8:	moveq	r6, #1
   112cc:	beq	11238 <close@plt+0x168>
   112d0:	ldr	ip, [pc, #616]	; 11540 <close@plt+0x470>
   112d4:	ldr	r5, [pc, #572]	; 11518 <close@plt+0x448>
   112d8:	ldr	r8, [pc, #624]	; 11550 <close@plt+0x480>
   112dc:	ldr	r6, [ip, #8]
   112e0:	ldr	r3, [ip, #12]
   112e4:	ldr	r0, [ip, #24]
   112e8:	cmp	r3, r6
   112ec:	ldr	r1, [ip, #16]
   112f0:	ldrbeq	r2, [ip, #40]	; 0x28
   112f4:	sub	r7, r3, r6
   112f8:	add	r3, r3, r0
   112fc:	orreq	r2, r2, #2
   11300:	strbeq	r2, [ip, #40]	; 0x28
   11304:	ldr	r2, [ip, #4]
   11308:	bic	r3, r3, r0
   1130c:	sub	r0, r3, r2
   11310:	sub	r2, r1, r2
   11314:	cmp	r0, r2
   11318:	movhi	r3, r1
   1131c:	ldr	r1, [pc, #560]	; 11554 <close@plt+0x484>
   11320:	cmp	sl, #0
   11324:	ldr	r2, [pc, #556]	; 11558 <close@plt+0x488>
   11328:	ldr	r0, [pc, #556]	; 1155c <close@plt+0x48c>
   1132c:	movne	r0, r1
   11330:	ldr	r1, [r5]
   11334:	movne	r8, r2
   11338:	str	r3, [ip, #12]
   1133c:	str	r3, [ip, #8]
   11340:	bl	10e6c <fputs_unlocked@plt>
   11344:	mov	r2, r7
   11348:	mov	r0, r6
   1134c:	ldr	r3, [r5]
   11350:	mov	r1, #1
   11354:	bl	10ee4 <fwrite_unlocked@plt>
   11358:	mov	r0, r8
   1135c:	ldr	r1, [r5]
   11360:	bl	10e6c <fputs_unlocked@plt>
   11364:	eor	r6, r4, #1
   11368:	b	11238 <close@plt+0x168>
   1136c:	mov	r1, r7
   11370:	mov	r0, r7
   11374:	bl	117fc <close@plt+0x72c>
   11378:	mov	r4, r0
   1137c:	b	112c4 <close@plt+0x1f4>
   11380:	ldr	r0, [pc, #472]	; 11560 <close@plt+0x490>
   11384:	bl	10fa4 <getenv@plt>
   11388:	subs	r3, r0, #0
   1138c:	beq	1149c <close@plt+0x3cc>
   11390:	ldrb	r3, [r3]
   11394:	cmp	r3, #0
   11398:	beq	1149c <close@plt+0x3cc>
   1139c:	bl	12260 <close@plt+0x1190>
   113a0:	ldr	r1, [pc, #444]	; 11564 <close@plt+0x494>
   113a4:	mov	r4, r0
   113a8:	bl	10e90 <strcmp@plt>
   113ac:	cmp	r0, #0
   113b0:	moveq	sl, #1
   113b4:	beq	1124c <close@plt+0x17c>
   113b8:	mov	r0, r4
   113bc:	ldr	r1, [pc, #420]	; 11568 <close@plt+0x498>
   113c0:	bl	10e90 <strcmp@plt>
   113c4:	clz	sl, r0
   113c8:	lsr	sl, sl, #5
   113cc:	b	1124c <close@plt+0x17c>
   113d0:	bl	11028 <__errno_location@plt>
   113d4:	mov	r2, r5
   113d8:	mov	r1, #3
   113dc:	ldr	r4, [r0]
   113e0:	mov	r0, #0
   113e4:	bl	14560 <close@plt+0x3490>
   113e8:	mov	r1, r4
   113ec:	ldr	r2, [pc, #376]	; 1156c <close@plt+0x49c>
   113f0:	mov	r3, r0
   113f4:	mov	r0, #0
   113f8:	bl	10f80 <error@plt>
   113fc:	b	11238 <close@plt+0x168>
   11400:	mov	r2, #5
   11404:	ldr	r1, [pc, #356]	; 11570 <close@plt+0x4a0>
   11408:	mov	r0, r9
   1140c:	bl	10efc <dcgettext@plt>
   11410:	cmp	r4, #0
   11414:	mov	r6, r0
   11418:	beq	114e0 <close@plt+0x410>
   1141c:	ldr	r0, [r5, r8, lsl #2]
   11420:	bl	1472c <close@plt+0x365c>
   11424:	mov	r2, r6
   11428:	mov	r1, r9
   1142c:	mov	r3, r0
   11430:	mov	r0, r9
   11434:	bl	10f80 <error@plt>
   11438:	ldr	r3, [pc, #308]	; 11574 <close@plt+0x4a4>
   1143c:	mov	r2, #5
   11440:	ldr	r1, [pc, #304]	; 11578 <close@plt+0x4a8>
   11444:	mov	r0, r9
   11448:	ldr	r4, [r3]
   1144c:	bl	10efc <dcgettext@plt>
   11450:	ldr	r2, [pc, #292]	; 1157c <close@plt+0x4ac>
   11454:	mov	r1, #1
   11458:	mov	r3, r0
   1145c:	mov	r0, r4
   11460:	bl	11064 <__fprintf_chk@plt>
   11464:	mov	r0, #1
   11468:	bl	11dfc <close@plt+0xd2c>
   1146c:	bl	11028 <__errno_location@plt>
   11470:	mov	r2, r5
   11474:	mov	r1, #3
   11478:	ldr	r5, [r0]
   1147c:	mov	r0, r4
   11480:	bl	14560 <close@plt+0x3490>
   11484:	mov	r1, r5
   11488:	ldr	r2, [pc, #220]	; 1156c <close@plt+0x49c>
   1148c:	mov	r3, r0
   11490:	mov	r0, r4
   11494:	bl	10f80 <error@plt>
   11498:	b	11238 <close@plt+0x168>
   1149c:	mov	r2, #5
   114a0:	ldr	r1, [pc, #216]	; 11580 <close@plt+0x4b0>
   114a4:	mov	r0, #0
   114a8:	bl	10efc <dcgettext@plt>
   114ac:	mov	r1, #0
   114b0:	mov	r2, r0
   114b4:	mov	r0, #1
   114b8:	bl	10f80 <error@plt>
   114bc:	mov	r2, #5
   114c0:	ldr	r1, [pc, #188]	; 11584 <close@plt+0x4b4>
   114c4:	mov	r0, #0
   114c8:	bl	10efc <dcgettext@plt>
   114cc:	mov	r1, #0
   114d0:	mov	r2, r0
   114d4:	mov	r0, r1
   114d8:	bl	10f80 <error@plt>
   114dc:	b	11464 <close@plt+0x394>
   114e0:	ldr	r0, [fp, #4]
   114e4:	bl	1472c <close@plt+0x365c>
   114e8:	mov	r2, r6
   114ec:	mov	r1, r4
   114f0:	mov	r3, r0
   114f4:	mov	r0, r4
   114f8:	bl	10f80 <error@plt>
   114fc:	b	11464 <close@plt+0x394>
   11500:	andeq	r7, r1, r0, ror r6
   11504:	ldrdeq	r6, [r1], -r0
   11508:	andeq	r6, r1, ip, ror #27
   1150c:	andeq	r2, r1, r8, lsl #3
   11510:	andeq	r5, r1, r8, lsr #19
   11514:	strdeq	r6, [r1], -r4
   11518:	andeq	r8, r2, r4, asr r1
   1151c:	andeq	r8, r2, ip, ror #1
   11520:	andeq	r6, r1, r4, ror #29
   11524:	strdeq	r6, [r1], -r8
   11528:	andeq	r6, r1, r8, ror #27
   1152c:	andeq	r8, r2, r0, asr #2
   11530:	andeq	r5, r1, r8, lsr #20
   11534:	andeq	r1, r0, r3, asr #32
   11538:	andeq	r0, r1, r8, lsr #29
   1153c:			; <UNDEFINED> instruction: 0x00010fbc
   11540:	andeq	r8, r2, ip, asr r1
   11544:	andeq	r6, r1, r8, asr #31
   11548:	andeq	r8, r2, r0, asr r1
   1154c:	andeq	r6, r1, ip, asr #31
   11550:	muleq	r1, r8, lr
   11554:			; <UNDEFINED> instruction: 0x00016ebc
   11558:	muleq	r1, r4, lr
   1155c:			; <UNDEFINED> instruction: 0x00016eb0
   11560:	andeq	r6, r1, r4, ror pc
   11564:	andeq	r6, r1, ip, ror pc
   11568:	andeq	r6, r1, r0, lsl #31
   1156c:	andeq	r7, r1, r0, ror #4
   11570:	andeq	r6, r1, r0, ror #30
   11574:	andeq	r8, r2, r8, asr #2
   11578:	ldrdeq	r6, [r1], -r0
   1157c:	muleq	r1, r4, r3
   11580:	andeq	r6, r1, r8, lsl #31
   11584:	strdeq	r6, [r1], -r8
   11588:	mov	fp, #0
   1158c:	mov	lr, #0
   11590:	pop	{r1}		; (ldr r1, [sp], #4)
   11594:	mov	r2, sp
   11598:	push	{r2}		; (str r2, [sp, #-4]!)
   1159c:	push	{r0}		; (str r0, [sp, #-4]!)
   115a0:	ldr	ip, [pc, #16]	; 115b8 <close@plt+0x4e8>
   115a4:	push	{ip}		; (str ip, [sp, #-4]!)
   115a8:	ldr	r0, [pc, #12]	; 115bc <close@plt+0x4ec>
   115ac:	ldr	r3, [pc, #12]	; 115c0 <close@plt+0x4f0>
   115b0:	bl	10fc8 <__libc_start_main@plt>
   115b4:	bl	110c4 <abort@plt>
   115b8:	andeq	r5, r1, r8, lsl r8
   115bc:	ldrdeq	r1, [r1], -ip
   115c0:			; <UNDEFINED> instruction: 0x000157b8
   115c4:	ldr	r3, [pc, #20]	; 115e0 <close@plt+0x510>
   115c8:	ldr	r2, [pc, #20]	; 115e4 <close@plt+0x514>
   115cc:	add	r3, pc, r3
   115d0:	ldr	r2, [r3, r2]
   115d4:	cmp	r2, #0
   115d8:	bxeq	lr
   115dc:	b	10fe0 <__gmon_start__@plt>
   115e0:	andeq	r6, r1, ip, lsr #20
   115e4:	andeq	r0, r0, r0, ror #1
   115e8:	ldr	r0, [pc, #24]	; 11608 <close@plt+0x538>
   115ec:	ldr	r3, [pc, #24]	; 1160c <close@plt+0x53c>
   115f0:	cmp	r3, r0
   115f4:	bxeq	lr
   115f8:	ldr	r3, [pc, #16]	; 11610 <close@plt+0x540>
   115fc:	cmp	r3, #0
   11600:	bxeq	lr
   11604:	bx	r3
   11608:	andeq	r8, r2, r8, lsr r1
   1160c:	andeq	r8, r2, r8, lsr r1
   11610:	andeq	r0, r0, r0
   11614:	ldr	r0, [pc, #36]	; 11640 <close@plt+0x570>
   11618:	ldr	r1, [pc, #36]	; 11644 <close@plt+0x574>
   1161c:	sub	r1, r1, r0
   11620:	asr	r1, r1, #2
   11624:	add	r1, r1, r1, lsr #31
   11628:	asrs	r1, r1, #1
   1162c:	bxeq	lr
   11630:	ldr	r3, [pc, #16]	; 11648 <close@plt+0x578>
   11634:	cmp	r3, #0
   11638:	bxeq	lr
   1163c:	bx	r3
   11640:	andeq	r8, r2, r8, lsr r1
   11644:	andeq	r8, r2, r8, lsr r1
   11648:	andeq	r0, r0, r0
   1164c:	push	{r4, lr}
   11650:	ldr	r4, [pc, #24]	; 11670 <close@plt+0x5a0>
   11654:	ldrb	r3, [r4]
   11658:	cmp	r3, #0
   1165c:	popne	{r4, pc}
   11660:	bl	115e8 <close@plt+0x518>
   11664:	mov	r3, #1
   11668:	strb	r3, [r4]
   1166c:	pop	{r4, pc}
   11670:	andeq	r8, r2, r8, asr r1
   11674:	b	11614 <close@plt+0x544>
   11678:	ldrb	r3, [r0]
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	push	{r4, r5, r6, r7, r8, lr}
   11688:	mov	r5, r0
   1168c:	ldr	r4, [pc, #356]	; 117f8 <close@plt+0x728>
   11690:	mov	r6, #1
   11694:	mov	r8, r4
   11698:	mov	r7, #92	; 0x5c
   1169c:	b	11724 <close@plt+0x654>
   116a0:	cmp	r1, r2
   116a4:	beq	117a8 <close@plt+0x6d8>
   116a8:	add	r1, r2, #1
   116ac:	mov	r3, #39	; 0x27
   116b0:	str	r1, [r4, #12]
   116b4:	strb	r3, [r2]
   116b8:	ldr	r3, [r4, #12]
   116bc:	ldr	r2, [r4, #16]
   116c0:	cmp	r2, r3
   116c4:	beq	117d0 <close@plt+0x700>
   116c8:	add	r2, r3, #1
   116cc:	str	r2, [r4, #12]
   116d0:	strb	r7, [r3]
   116d4:	ldr	r3, [r4, #12]
   116d8:	ldr	r2, [r4, #16]
   116dc:	cmp	r2, r3
   116e0:	beq	117bc <close@plt+0x6ec>
   116e4:	add	r1, r3, #1
   116e8:	mov	r2, #39	; 0x27
   116ec:	str	r1, [r4, #12]
   116f0:	strb	r2, [r3]
   116f4:	ldr	r2, [r4, #12]
   116f8:	ldr	r1, [r4, #16]
   116fc:	mov	r6, #1
   11700:	cmp	r1, r2
   11704:	beq	11774 <close@plt+0x6a4>
   11708:	add	r3, r2, #1
   1170c:	str	r3, [r4, #12]
   11710:	ldrb	r3, [r5]
   11714:	strb	r3, [r2]
   11718:	ldrb	r3, [r5, #1]!
   1171c:	cmp	r3, #0
   11720:	popeq	{r4, r5, r6, r7, r8, pc}
   11724:	cmp	r3, #61	; 0x3d
   11728:	ldr	r1, [r4, #16]
   1172c:	ldr	r2, [r4, #12]
   11730:	beq	11748 <close@plt+0x678>
   11734:	bhi	11790 <close@plt+0x6c0>
   11738:	cmp	r3, #39	; 0x27
   1173c:	beq	116a0 <close@plt+0x5d0>
   11740:	cmp	r3, #58	; 0x3a
   11744:	bne	11788 <close@plt+0x6b8>
   11748:	cmp	r6, #0
   1174c:	beq	11788 <close@plt+0x6b8>
   11750:	cmp	r1, r2
   11754:	beq	117e4 <close@plt+0x714>
   11758:	add	r3, r2, #1
   1175c:	str	r3, [r4, #12]
   11760:	strb	r7, [r2]
   11764:	ldr	r2, [r4, #12]
   11768:	ldr	r1, [r4, #16]
   1176c:	cmp	r1, r2
   11770:	bne	11708 <close@plt+0x638>
   11774:	mov	r1, #1
   11778:	mov	r0, r8
   1177c:	bl	152cc <_obstack_newchunk@@Base>
   11780:	ldr	r2, [r4, #12]
   11784:	b	11708 <close@plt+0x638>
   11788:	mov	r6, #1
   1178c:	b	11700 <close@plt+0x630>
   11790:	cmp	r3, #92	; 0x5c
   11794:	beq	117a0 <close@plt+0x6d0>
   11798:	cmp	r3, #94	; 0x5e
   1179c:	bne	11788 <close@plt+0x6b8>
   117a0:	eor	r6, r6, #1
   117a4:	b	11700 <close@plt+0x630>
   117a8:	mov	r1, #1
   117ac:	mov	r0, r8
   117b0:	bl	152cc <_obstack_newchunk@@Base>
   117b4:	ldr	r2, [r4, #12]
   117b8:	b	116a8 <close@plt+0x5d8>
   117bc:	mov	r1, #1
   117c0:	mov	r0, r8
   117c4:	bl	152cc <_obstack_newchunk@@Base>
   117c8:	ldr	r3, [r4, #12]
   117cc:	b	116e4 <close@plt+0x614>
   117d0:	mov	r1, #1
   117d4:	mov	r0, r8
   117d8:	bl	152cc <_obstack_newchunk@@Base>
   117dc:	ldr	r3, [r4, #12]
   117e0:	b	116c8 <close@plt+0x5f8>
   117e4:	mov	r1, #1
   117e8:	mov	r0, r8
   117ec:	bl	152cc <_obstack_newchunk@@Base>
   117f0:	ldr	r2, [r4, #12]
   117f4:	b	11758 <close@plt+0x688>
   117f8:	andeq	r8, r2, ip, asr r1
   117fc:	ldr	r2, [pc, #1472]	; 11dc4 <close@plt+0xcf4>
   11800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11804:	sub	sp, sp, #52	; 0x34
   11808:	ldr	r2, [r2]
   1180c:	mov	r3, #0
   11810:	mov	r8, r0
   11814:	ldr	r0, [pc, #1452]	; 11dc8 <close@plt+0xcf8>
   11818:	str	r1, [sp, #20]
   1181c:	str	r2, [sp, #44]	; 0x2c
   11820:	str	r3, [sp, #36]	; 0x24
   11824:	str	r3, [sp, #40]	; 0x28
   11828:	bl	10fa4 <getenv@plt>
   1182c:	subs	r1, r0, #0
   11830:	beq	11c24 <close@plt+0xb54>
   11834:	ldrb	r2, [r1]
   11838:	ldr	r3, [pc, #1420]	; 11dcc <close@plt+0xcfc>
   1183c:	cmp	r2, #0
   11840:	moveq	r1, r3
   11844:	str	r1, [sp, #24]
   11848:	ldr	r6, [pc, #1408]	; 11dd0 <close@plt+0xd00>
   1184c:	ldr	sl, [pc, #1396]	; 11dc8 <close@plt+0xcf8>
   11850:	add	r3, r6, #4160	; 0x1040
   11854:	add	r3, r3, #4
   11858:	mov	r9, #3
   1185c:	mov	r5, #0
   11860:	str	r3, [sp, #12]
   11864:	mov	r3, #1
   11868:	str	r3, [sp, #16]
   1186c:	cmp	r8, #0
   11870:	add	r5, r5, #1
   11874:	beq	11a20 <close@plt+0x950>
   11878:	mov	r3, r8
   1187c:	mov	r2, #10
   11880:	add	r1, sp, #40	; 0x28
   11884:	add	r0, sp, #36	; 0x24
   11888:	bl	10e84 <__getdelim@plt>
   1188c:	cmp	r0, #0
   11890:	ble	11b60 <close@plt+0xa90>
   11894:	ldr	r4, [sp, #36]	; 0x24
   11898:	bl	11004 <__ctype_b_loc@plt>
   1189c:	mov	r3, r4
   118a0:	ldr	r2, [r0]
   118a4:	mov	r7, r0
   118a8:	ldrb	r1, [r3]
   118ac:	mov	r0, r3
   118b0:	add	r3, r3, #1
   118b4:	lsl	ip, r1, #1
   118b8:	ldrh	ip, [r2, ip]
   118bc:	tst	ip, #8192	; 0x2000
   118c0:	bne	118a8 <close@plt+0x7d8>
   118c4:	cmp	r1, #35	; 0x23
   118c8:	cmpne	r1, #0
   118cc:	beq	1186c <close@plt+0x79c>
   118d0:	mov	r4, r0
   118d4:	ldrb	r1, [r4, #1]!
   118d8:	lsl	r3, r1, #1
   118dc:	ldrh	r3, [r2, r3]
   118e0:	lsr	r3, r3, #13
   118e4:	eor	r3, r3, #1
   118e8:	cmp	r1, #0
   118ec:	moveq	r3, #0
   118f0:	andne	r3, r3, #1
   118f4:	cmp	r3, #0
   118f8:	bne	118d4 <close@plt+0x804>
   118fc:	sub	r1, r4, r0
   11900:	bl	14f24 <close@plt+0x3e54>
   11904:	ldrb	r3, [r4]
   11908:	cmp	r3, #0
   1190c:	mov	fp, r0
   11910:	ldrne	r0, [r7]
   11914:	beq	11a64 <close@plt+0x994>
   11918:	ldrb	r3, [r4, #1]!
   1191c:	lsl	r2, r3, #1
   11920:	ldrh	r2, [r0, r2]
   11924:	tst	r2, #8192	; 0x2000
   11928:	bne	11918 <close@plt+0x848>
   1192c:	cmp	r3, #35	; 0x23
   11930:	cmpne	r3, #0
   11934:	movne	r3, r4
   11938:	bne	11944 <close@plt+0x874>
   1193c:	b	11a64 <close@plt+0x994>
   11940:	mov	r3, r1
   11944:	ldrb	r2, [r3, #1]
   11948:	add	r1, r3, #1
   1194c:	cmp	r2, #0
   11950:	cmpne	r2, #35	; 0x23
   11954:	bne	11940 <close@plt+0x870>
   11958:	ldrb	r2, [r1, #-1]
   1195c:	lsl	r2, r2, #1
   11960:	ldrh	r2, [r0, r2]
   11964:	tst	r2, #8192	; 0x2000
   11968:	movne	r1, r3
   1196c:	bne	11a48 <close@plt+0x978>
   11970:	sub	r1, r1, r4
   11974:	mov	r0, r4
   11978:	bl	14f24 <close@plt+0x3e54>
   1197c:	cmp	fp, #0
   11980:	mov	r4, r0
   11984:	beq	1186c <close@plt+0x79c>
   11988:	cmp	r0, #0
   1198c:	beq	11a6c <close@plt+0x99c>
   11990:	mov	r1, sl
   11994:	mov	r0, fp
   11998:	bl	120f8 <close@plt+0x1028>
   1199c:	subs	r2, r0, #0
   119a0:	beq	11ab8 <close@plt+0x9e8>
   119a4:	cmp	r9, #2
   119a8:	beq	11ad8 <close@plt+0xa08>
   119ac:	cmp	r9, #0
   119b0:	beq	11a04 <close@plt+0x934>
   119b4:	ldrb	r3, [fp]
   119b8:	cmp	r3, #46	; 0x2e
   119bc:	beq	11ae8 <close@plt+0xa18>
   119c0:	cmp	r3, #42	; 0x2a
   119c4:	beq	11b88 <close@plt+0xab8>
   119c8:	ldr	r1, [pc, #1028]	; 11dd4 <close@plt+0xd04>
   119cc:	mov	r0, fp
   119d0:	bl	120f8 <close@plt+0x1028>
   119d4:	cmp	r0, #0
   119d8:	beq	11a04 <close@plt+0x934>
   119dc:	ldr	r1, [pc, #1012]	; 11dd8 <close@plt+0xd08>
   119e0:	mov	r0, fp
   119e4:	bl	120f8 <close@plt+0x1028>
   119e8:	cmp	r0, #0
   119ec:	beq	11a04 <close@plt+0x934>
   119f0:	ldr	r1, [pc, #996]	; 11ddc <close@plt+0xd0c>
   119f4:	mov	r0, fp
   119f8:	bl	120f8 <close@plt+0x1028>
   119fc:	cmp	r0, #0
   11a00:	bne	11c30 <close@plt+0xb60>
   11a04:	mov	r0, fp
   11a08:	bl	10ea8 <free@plt>
   11a0c:	mov	r0, r4
   11a10:	bl	10ea8 <free@plt>
   11a14:	cmp	r8, #0
   11a18:	add	r5, r5, #1
   11a1c:	bne	11878 <close@plt+0x7a8>
   11a20:	ldr	r3, [sp, #12]
   11a24:	cmp	r6, r3
   11a28:	beq	11b68 <close@plt+0xa98>
   11a2c:	mov	r0, r6
   11a30:	bl	1101c <strlen@plt>
   11a34:	mov	r4, r6
   11a38:	add	r0, r0, #1
   11a3c:	add	r6, r6, r0
   11a40:	b	11898 <close@plt+0x7c8>
   11a44:	mov	r1, r2
   11a48:	ldrb	r3, [r1, #-1]
   11a4c:	sub	r2, r1, #1
   11a50:	lsl	r3, r3, #1
   11a54:	ldrh	r3, [r0, r3]
   11a58:	tst	r3, #8192	; 0x2000
   11a5c:	beq	11970 <close@plt+0x8a0>
   11a60:	b	11a44 <close@plt+0x974>
   11a64:	cmp	fp, #0
   11a68:	beq	1186c <close@plt+0x79c>
   11a6c:	mov	r2, #5
   11a70:	ldr	r1, [pc, #872]	; 11de0 <close@plt+0xd10>
   11a74:	mov	r0, #0
   11a78:	bl	10efc <dcgettext@plt>
   11a7c:	ldr	r2, [sp, #20]
   11a80:	mov	r1, #3
   11a84:	mov	r4, r0
   11a88:	mov	r0, #0
   11a8c:	bl	14560 <close@plt+0x3490>
   11a90:	mov	r1, #0
   11a94:	mov	r2, r4
   11a98:	str	r5, [sp]
   11a9c:	str	r1, [sp, #16]
   11aa0:	mov	r3, r0
   11aa4:	mov	r0, r1
   11aa8:	bl	10f80 <error@plt>
   11aac:	mov	r0, fp
   11ab0:	bl	10ea8 <free@plt>
   11ab4:	b	1186c <close@plt+0x79c>
   11ab8:	ldr	r1, [sp, #24]
   11abc:	mov	r0, r4
   11ac0:	bl	10f8c <fnmatch@plt>
   11ac4:	cmp	r9, #2
   11ac8:	cmpne	r0, #0
   11acc:	movne	r9, #0
   11ad0:	moveq	r9, #2
   11ad4:	b	11a04 <close@plt+0x934>
   11ad8:	ldrb	r3, [fp]
   11adc:	mov	r9, #1
   11ae0:	cmp	r3, #46	; 0x2e
   11ae4:	bne	119c0 <close@plt+0x8f0>
   11ae8:	ldr	r7, [pc, #756]	; 11de4 <close@plt+0xd14>
   11aec:	ldr	r3, [r7, #12]
   11af0:	ldr	r2, [r7, #16]
   11af4:	cmp	r2, r3
   11af8:	beq	11be8 <close@plt+0xb18>
   11afc:	add	r1, r3, #1
   11b00:	mov	r2, #42	; 0x2a
   11b04:	str	r1, [r7, #12]
   11b08:	mov	r0, fp
   11b0c:	strb	r2, [r3]
   11b10:	bl	11678 <close@plt+0x5a8>
   11b14:	ldr	r3, [r7, #12]
   11b18:	ldr	r2, [r7, #16]
   11b1c:	cmp	r2, r3
   11b20:	beq	11c10 <close@plt+0xb40>
   11b24:	add	r1, r3, #1
   11b28:	mov	r2, #61	; 0x3d
   11b2c:	str	r1, [r7, #12]
   11b30:	mov	r0, r4
   11b34:	strb	r2, [r3]
   11b38:	bl	11678 <close@plt+0x5a8>
   11b3c:	ldr	r3, [r7, #12]
   11b40:	ldr	r2, [r7, #16]
   11b44:	cmp	r2, r3
   11b48:	beq	11bfc <close@plt+0xb2c>
   11b4c:	add	r1, r3, #1
   11b50:	mov	r2, #58	; 0x3a
   11b54:	str	r1, [r7, #12]
   11b58:	strb	r2, [r3]
   11b5c:	b	11a04 <close@plt+0x934>
   11b60:	ldr	r0, [sp, #36]	; 0x24
   11b64:	bl	10ea8 <free@plt>
   11b68:	ldr	r3, [pc, #596]	; 11dc4 <close@plt+0xcf4>
   11b6c:	ldr	r2, [sp, #44]	; 0x2c
   11b70:	ldr	r0, [sp, #16]
   11b74:	ldr	r3, [r3]
   11b78:	cmp	r2, r3
   11b7c:	bne	11dc0 <close@plt+0xcf0>
   11b80:	add	sp, sp, #52	; 0x34
   11b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b88:	ldr	r7, [pc, #596]	; 11de4 <close@plt+0xd14>
   11b8c:	mov	r0, fp
   11b90:	bl	11678 <close@plt+0x5a8>
   11b94:	ldr	r2, [r7, #16]
   11b98:	ldr	r3, [r7, #12]
   11b9c:	cmp	r2, r3
   11ba0:	beq	11d00 <close@plt+0xc30>
   11ba4:	ldr	r3, [r7, #12]
   11ba8:	mov	r2, #61	; 0x3d
   11bac:	add	r1, r3, #1
   11bb0:	str	r1, [r7, #12]
   11bb4:	mov	r0, r4
   11bb8:	strb	r2, [r3]
   11bbc:	bl	11678 <close@plt+0x5a8>
   11bc0:	ldr	r2, [r7, #16]
   11bc4:	ldr	r3, [r7, #12]
   11bc8:	cmp	r2, r3
   11bcc:	beq	11cf0 <close@plt+0xc20>
   11bd0:	ldr	r3, [r7, #12]
   11bd4:	mov	r2, #58	; 0x3a
   11bd8:	add	r1, r3, #1
   11bdc:	str	r1, [r7, #12]
   11be0:	strb	r2, [r3]
   11be4:	b	11a04 <close@plt+0x934>
   11be8:	mov	r1, #1
   11bec:	mov	r0, r7
   11bf0:	bl	152cc <_obstack_newchunk@@Base>
   11bf4:	ldr	r3, [r7, #12]
   11bf8:	b	11afc <close@plt+0xa2c>
   11bfc:	mov	r1, #1
   11c00:	ldr	r0, [pc, #476]	; 11de4 <close@plt+0xd14>
   11c04:	bl	152cc <_obstack_newchunk@@Base>
   11c08:	ldr	r3, [r7, #12]
   11c0c:	b	11b4c <close@plt+0xa7c>
   11c10:	mov	r1, #1
   11c14:	ldr	r0, [pc, #456]	; 11de4 <close@plt+0xd14>
   11c18:	bl	152cc <_obstack_newchunk@@Base>
   11c1c:	ldr	r3, [r7, #12]
   11c20:	b	11b24 <close@plt+0xa54>
   11c24:	ldr	r3, [pc, #416]	; 11dcc <close@plt+0xcfc>
   11c28:	str	r3, [sp, #24]
   11c2c:	b	11848 <close@plt+0x778>
   11c30:	ldr	r7, [pc, #432]	; 11de8 <close@plt+0xd18>
   11c34:	ldr	r3, [pc, #432]	; 11dec <close@plt+0xd1c>
   11c38:	mov	r2, #0
   11c3c:	str	r4, [sp, #28]
   11c40:	mov	r1, r3
   11c44:	mov	r4, r7
   11c48:	mov	r7, r2
   11c4c:	b	11c60 <close@plt+0xb90>
   11c50:	ldr	r1, [r4], #4
   11c54:	add	r7, r7, #1
   11c58:	cmp	r1, #0
   11c5c:	beq	11d10 <close@plt+0xc40>
   11c60:	mov	r0, fp
   11c64:	bl	120f8 <close@plt+0x1028>
   11c68:	cmp	r0, #0
   11c6c:	bne	11c50 <close@plt+0xb80>
   11c70:	mov	r2, r7
   11c74:	ldr	r7, [pc, #360]	; 11de4 <close@plt+0xd14>
   11c78:	ldr	r4, [sp, #28]
   11c7c:	ldr	r1, [r7, #16]
   11c80:	ldr	r3, [r7, #12]
   11c84:	cmp	r1, r3
   11c88:	beq	11da8 <close@plt+0xcd8>
   11c8c:	ldr	r3, [pc, #348]	; 11df0 <close@plt+0xd20>
   11c90:	ldr	r1, [r7, #12]
   11c94:	add	r2, r3, r2, lsl #2
   11c98:	add	r3, r1, #1
   11c9c:	ldr	r2, [r2, #152]	; 0x98
   11ca0:	str	r3, [r7, #12]
   11ca4:	ldrb	r3, [r2]
   11ca8:	strb	r3, [r1]
   11cac:	ldr	r1, [r7, #16]
   11cb0:	ldr	r3, [r7, #12]
   11cb4:	cmp	r1, r3
   11cb8:	beq	11d90 <close@plt+0xcc0>
   11cbc:	ldr	r3, [r7, #12]
   11cc0:	add	r1, r3, #1
   11cc4:	str	r1, [r7, #12]
   11cc8:	ldrb	r2, [r2, #1]
   11ccc:	strb	r2, [r3]
   11cd0:	ldr	r2, [r7, #16]
   11cd4:	ldr	r3, [r7, #12]
   11cd8:	cmp	r2, r3
   11cdc:	bne	11ba4 <close@plt+0xad4>
   11ce0:	mov	r1, #1
   11ce4:	ldr	r0, [pc, #248]	; 11de4 <close@plt+0xd14>
   11ce8:	bl	152cc <_obstack_newchunk@@Base>
   11cec:	b	11ba4 <close@plt+0xad4>
   11cf0:	mov	r1, #1
   11cf4:	ldr	r0, [pc, #232]	; 11de4 <close@plt+0xd14>
   11cf8:	bl	152cc <_obstack_newchunk@@Base>
   11cfc:	b	11bd0 <close@plt+0xb00>
   11d00:	mov	r1, #1
   11d04:	mov	r0, r7
   11d08:	bl	152cc <_obstack_newchunk@@Base>
   11d0c:	b	11ba4 <close@plt+0xad4>
   11d10:	cmp	r9, #3
   11d14:	mov	r3, r1
   11d18:	ldr	r4, [sp, #28]
   11d1c:	beq	11a04 <close@plt+0x934>
   11d20:	mov	r2, #5
   11d24:	ldr	r1, [pc, #200]	; 11df4 <close@plt+0xd24>
   11d28:	mov	r0, r3
   11d2c:	str	r3, [sp, #16]
   11d30:	bl	10efc <dcgettext@plt>
   11d34:	ldr	r2, [sp, #20]
   11d38:	cmp	r2, #0
   11d3c:	mov	r7, r0
   11d40:	beq	11d78 <close@plt+0xca8>
   11d44:	ldr	r3, [sp, #16]
   11d48:	mov	r1, #3
   11d4c:	mov	r0, r3
   11d50:	bl	14560 <close@plt+0x3490>
   11d54:	mov	r3, r0
   11d58:	mov	r1, #0
   11d5c:	stm	sp, {r5, fp}
   11d60:	mov	r2, r7
   11d64:	mov	r0, r1
   11d68:	bl	10f80 <error@plt>
   11d6c:	mov	r3, #0
   11d70:	str	r3, [sp, #16]
   11d74:	b	11a04 <close@plt+0x934>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #116]	; 11df8 <close@plt+0xd28>
   11d80:	ldr	r0, [sp, #20]
   11d84:	bl	10efc <dcgettext@plt>
   11d88:	mov	r3, r0
   11d8c:	b	11d58 <close@plt+0xc88>
   11d90:	mov	r1, #1
   11d94:	ldr	r0, [pc, #72]	; 11de4 <close@plt+0xd14>
   11d98:	str	r2, [sp, #28]
   11d9c:	bl	152cc <_obstack_newchunk@@Base>
   11da0:	ldr	r2, [sp, #28]
   11da4:	b	11cbc <close@plt+0xbec>
   11da8:	mov	r1, #1
   11dac:	mov	r0, r7
   11db0:	str	r2, [sp, #28]
   11db4:	bl	152cc <_obstack_newchunk@@Base>
   11db8:	ldr	r2, [sp, #28]
   11dbc:	b	11c8c <close@plt+0xbbc>
   11dc0:	bl	10f08 <__stack_chk_fail@plt>
   11dc4:	andeq	r7, r2, r8, lsl #30
   11dc8:	andeq	r6, r1, ip, ror sl
   11dcc:	andeq	r6, r1, ip, ror #20
   11dd0:	andeq	r5, r1, r8, lsr #20
   11dd4:			; <UNDEFINED> instruction: 0x00016ab0
   11dd8:			; <UNDEFINED> instruction: 0x00016ab8
   11ddc:	andeq	r6, r1, r0, asr #21
   11de0:	andeq	r6, r1, r4, lsl #21
   11de4:	andeq	r8, r2, ip, asr r1
   11de8:	andeq	r5, r1, r4, asr #16
   11dec:	andeq	r6, r1, r4, ror sl
   11df0:	andeq	r5, r1, r0, asr #16
   11df4:	andeq	r6, r1, ip, asr #21
   11df8:	andeq	r6, r1, ip, ror #21
   11dfc:	ldr	r3, [pc, #672]	; 120a4 <close@plt+0xfd4>
   11e00:	push	{r7, lr}
   11e04:	sub	sp, sp, #64	; 0x40
   11e08:	ldr	r3, [r3]
   11e0c:	subs	r5, r0, #0
   11e10:	str	r3, [sp, #60]	; 0x3c
   11e14:	beq	11e50 <close@plt+0xd80>
   11e18:	ldr	r3, [pc, #648]	; 120a8 <close@plt+0xfd8>
   11e1c:	mov	r2, #5
   11e20:	ldr	r1, [pc, #644]	; 120ac <close@plt+0xfdc>
   11e24:	mov	r0, #0
   11e28:	ldr	r4, [r3]
   11e2c:	bl	10efc <dcgettext@plt>
   11e30:	ldr	r3, [pc, #632]	; 120b0 <close@plt+0xfe0>
   11e34:	mov	r1, #1
   11e38:	ldr	r3, [r3]
   11e3c:	mov	r2, r0
   11e40:	mov	r0, r4
   11e44:	bl	11064 <__fprintf_chk@plt>
   11e48:	mov	r0, r5
   11e4c:	bl	11010 <exit@plt>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #600]	; 120b4 <close@plt+0xfe4>
   11e58:	bl	10efc <dcgettext@plt>
   11e5c:	ldr	r3, [pc, #588]	; 120b0 <close@plt+0xfe0>
   11e60:	ldr	r4, [pc, #592]	; 120b8 <close@plt+0xfe8>
   11e64:	ldr	r2, [r3]
   11e68:	mov	r1, r0
   11e6c:	mov	r0, #1
   11e70:	bl	1104c <__printf_chk@plt>
   11e74:	mov	r2, #5
   11e78:	ldr	r1, [pc, #572]	; 120bc <close@plt+0xfec>
   11e7c:	mov	r0, r5
   11e80:	bl	10efc <dcgettext@plt>
   11e84:	ldr	r1, [r4]
   11e88:	bl	10e6c <fputs_unlocked@plt>
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #552]	; 120c0 <close@plt+0xff0>
   11e94:	mov	r0, r5
   11e98:	bl	10efc <dcgettext@plt>
   11e9c:	ldr	r1, [r4]
   11ea0:	bl	10e6c <fputs_unlocked@plt>
   11ea4:	mov	r2, #5
   11ea8:	ldr	r1, [pc, #532]	; 120c4 <close@plt+0xff4>
   11eac:	mov	r0, r5
   11eb0:	bl	10efc <dcgettext@plt>
   11eb4:	ldr	r1, [r4]
   11eb8:	bl	10e6c <fputs_unlocked@plt>
   11ebc:	mov	r2, #5
   11ec0:	ldr	r1, [pc, #512]	; 120c8 <close@plt+0xff8>
   11ec4:	mov	r0, r5
   11ec8:	bl	10efc <dcgettext@plt>
   11ecc:	ldr	r1, [r4]
   11ed0:	bl	10e6c <fputs_unlocked@plt>
   11ed4:	ldr	lr, [pc, #496]	; 120cc <close@plt+0xffc>
   11ed8:	add	ip, sp, #4
   11edc:	ldm	lr!, {r0, r1, r2, r3}
   11ee0:	stmia	ip!, {r0, r1, r2, r3}
   11ee4:	ldm	lr!, {r0, r1, r2, r3}
   11ee8:	ldr	r6, [sp, #4]
   11eec:	stmia	ip!, {r0, r1, r2, r3}
   11ef0:	cmp	r6, #0
   11ef4:	ldm	lr!, {r0, r1, r2, r3}
   11ef8:	addeq	r4, sp, #4
   11efc:	stmia	ip!, {r0, r1, r2, r3}
   11f00:	ldm	lr, {r0, r1}
   11f04:	stm	ip, {r0, r1}
   11f08:	beq	11f38 <close@plt+0xe68>
   11f0c:	ldr	r7, [pc, #444]	; 120d0 <close@plt+0x1000>
   11f10:	add	r4, sp, #4
   11f14:	b	11f24 <close@plt+0xe54>
   11f18:	ldr	r6, [r4, #8]!
   11f1c:	cmp	r6, #0
   11f20:	beq	11f38 <close@plt+0xe68>
   11f24:	mov	r1, r6
   11f28:	mov	r0, r7
   11f2c:	bl	10e90 <strcmp@plt>
   11f30:	cmp	r0, #0
   11f34:	bne	11f18 <close@plt+0xe48>
   11f38:	ldr	r4, [r4, #4]
   11f3c:	mov	r2, #5
   11f40:	cmp	r4, #0
   11f44:	ldr	r1, [pc, #392]	; 120d4 <close@plt+0x1004>
   11f48:	beq	11ff0 <close@plt+0xf20>
   11f4c:	mov	r0, #0
   11f50:	bl	10efc <dcgettext@plt>
   11f54:	ldr	r3, [pc, #380]	; 120d8 <close@plt+0x1008>
   11f58:	ldr	r2, [pc, #380]	; 120dc <close@plt+0x100c>
   11f5c:	mov	r1, r0
   11f60:	mov	r0, #1
   11f64:	bl	1104c <__printf_chk@plt>
   11f68:	mov	r1, #0
   11f6c:	mov	r0, #5
   11f70:	bl	11088 <setlocale@plt>
   11f74:	cmp	r0, #0
   11f78:	ldreq	r6, [pc, #336]	; 120d0 <close@plt+0x1000>
   11f7c:	beq	11f98 <close@plt+0xec8>
   11f80:	mov	r2, #3
   11f84:	ldr	r1, [pc, #340]	; 120e0 <close@plt+0x1010>
   11f88:	bl	110b8 <strncmp@plt>
   11f8c:	ldr	r6, [pc, #316]	; 120d0 <close@plt+0x1000>
   11f90:	cmp	r0, #0
   11f94:	bne	12080 <close@plt+0xfb0>
   11f98:	mov	r2, #5
   11f9c:	ldr	r1, [pc, #320]	; 120e4 <close@plt+0x1014>
   11fa0:	mov	r0, #0
   11fa4:	bl	10efc <dcgettext@plt>
   11fa8:	ldr	r3, [pc, #288]	; 120d0 <close@plt+0x1000>
   11fac:	ldr	r2, [pc, #292]	; 120d8 <close@plt+0x1008>
   11fb0:	mov	r1, r0
   11fb4:	mov	r0, #1
   11fb8:	bl	1104c <__printf_chk@plt>
   11fbc:	mov	r2, #5
   11fc0:	ldr	r1, [pc, #288]	; 120e8 <close@plt+0x1018>
   11fc4:	mov	r0, #0
   11fc8:	bl	10efc <dcgettext@plt>
   11fcc:	ldr	r2, [pc, #280]	; 120ec <close@plt+0x101c>
   11fd0:	cmp	r4, r6
   11fd4:	ldr	r3, [pc, #276]	; 120f0 <close@plt+0x1020>
   11fd8:	movne	r3, r2
   11fdc:	mov	r1, r0
   11fe0:	mov	r2, r4
   11fe4:	mov	r0, #1
   11fe8:	bl	1104c <__printf_chk@plt>
   11fec:	b	11e48 <close@plt+0xd78>
   11ff0:	mov	r0, r4
   11ff4:	bl	10efc <dcgettext@plt>
   11ff8:	ldr	r3, [pc, #216]	; 120d8 <close@plt+0x1008>
   11ffc:	ldr	r2, [pc, #216]	; 120dc <close@plt+0x100c>
   12000:	mov	r1, r0
   12004:	mov	r0, #1
   12008:	bl	1104c <__printf_chk@plt>
   1200c:	mov	r1, r4
   12010:	mov	r0, #5
   12014:	bl	11088 <setlocale@plt>
   12018:	cmp	r0, #0
   1201c:	beq	12034 <close@plt+0xf64>
   12020:	mov	r2, #3
   12024:	ldr	r1, [pc, #180]	; 120e0 <close@plt+0x1010>
   12028:	bl	110b8 <strncmp@plt>
   1202c:	cmp	r0, #0
   12030:	bne	12078 <close@plt+0xfa8>
   12034:	mov	r2, #5
   12038:	ldr	r1, [pc, #164]	; 120e4 <close@plt+0x1014>
   1203c:	mov	r0, #0
   12040:	bl	10efc <dcgettext@plt>
   12044:	ldr	r3, [pc, #132]	; 120d0 <close@plt+0x1000>
   12048:	ldr	r2, [pc, #136]	; 120d8 <close@plt+0x1008>
   1204c:	mov	r4, r3
   12050:	mov	r1, r0
   12054:	mov	r0, #1
   12058:	bl	1104c <__printf_chk@plt>
   1205c:	ldr	r1, [pc, #132]	; 120e8 <close@plt+0x1018>
   12060:	mov	r2, #5
   12064:	mov	r0, #0
   12068:	bl	10efc <dcgettext@plt>
   1206c:	ldr	r3, [pc, #124]	; 120f0 <close@plt+0x1020>
   12070:	mov	r1, r0
   12074:	b	11fe0 <close@plt+0xf10>
   12078:	ldr	r6, [pc, #80]	; 120d0 <close@plt+0x1000>
   1207c:	mov	r4, r6
   12080:	mov	r2, #5
   12084:	ldr	r1, [pc, #104]	; 120f4 <close@plt+0x1024>
   12088:	mov	r0, #0
   1208c:	bl	10efc <dcgettext@plt>
   12090:	ldr	r2, [pc, #56]	; 120d0 <close@plt+0x1000>
   12094:	mov	r1, r0
   12098:	mov	r0, #1
   1209c:	bl	1104c <__printf_chk@plt>
   120a0:	b	11f98 <close@plt+0xec8>
   120a4:	andeq	r7, r2, r8, lsl #30
   120a8:	andeq	r8, r2, r8, asr #2
   120ac:	andeq	r6, r1, r4, lsl #22
   120b0:	muleq	r2, r0, r1
   120b4:	andeq	r6, r1, ip, lsr #22
   120b8:	andeq	r8, r2, r4, asr r1
   120bc:	andeq	r6, r1, ip, asr #22
   120c0:	andeq	r6, r1, r0, ror #24
   120c4:	muleq	r1, r0, ip
   120c8:	andeq	r6, r1, r8, asr #25
   120cc:	andeq	r5, r1, r0, ror r9
   120d0:	strdeq	r6, [r1], -r8
   120d4:	andeq	r6, r1, r8, lsr #27
   120d8:	andeq	r6, r1, r0, asr #27
   120dc:	andeq	r6, r1, r8, ror #27
   120e0:	strdeq	r6, [r1], -r8
   120e4:	andeq	r6, r1, r4, asr #28
   120e8:	andeq	r6, r1, r4, ror #28
   120ec:	andeq	r7, r1, r0, ror r6
   120f0:	andeq	r7, r1, r4, lsl r0
   120f4:	strdeq	r6, [r1], -ip
   120f8:	cmp	r0, r1
   120fc:	beq	12160 <close@plt+0x1090>
   12100:	push	{lr}		; (str lr, [sp, #-4]!)
   12104:	sub	r0, r0, #1
   12108:	sub	r1, r1, #1
   1210c:	b	12118 <close@plt+0x1048>
   12110:	cmp	r3, r2
   12114:	bne	12150 <close@plt+0x1080>
   12118:	ldrb	r3, [r0, #1]!
   1211c:	sub	r2, r3, #65	; 0x41
   12120:	cmp	r2, #25
   12124:	ldrb	r2, [r1, #1]!
   12128:	mov	ip, r3
   1212c:	addls	ip, r3, #32
   12130:	sub	lr, r2, #65	; 0x41
   12134:	uxtbls	r3, ip
   12138:	cmp	lr, #25
   1213c:	mov	lr, r2
   12140:	addls	lr, r2, #32
   12144:	uxtbls	r2, lr
   12148:	cmp	r3, #0
   1214c:	bne	12110 <close@plt+0x1040>
   12150:	uxtb	ip, ip
   12154:	uxtb	r0, lr
   12158:	sub	r0, ip, r0
   1215c:	pop	{pc}		; (ldr pc, [sp], #4)
   12160:	mov	r0, #0
   12164:	bx	lr
   12168:	ldr	r3, [pc, #4]	; 12174 <close@plt+0x10a4>
   1216c:	str	r0, [r3]
   12170:	bx	lr
   12174:	andeq	r8, r2, r8, lsl #3
   12178:	ldr	r3, [pc, #4]	; 12184 <close@plt+0x10b4>
   1217c:	strb	r0, [r3, #4]
   12180:	bx	lr
   12184:	andeq	r8, r2, r8, lsl #3
   12188:	ldr	r3, [pc, #180]	; 12244 <close@plt+0x1174>
   1218c:	push	{r4, r5, r6, lr}
   12190:	sub	sp, sp, #8
   12194:	ldr	r0, [r3]
   12198:	bl	154a8 <_obstack_memory_used@@Base+0x34>
   1219c:	cmp	r0, #0
   121a0:	beq	121c8 <close@plt+0x10f8>
   121a4:	bl	11028 <__errno_location@plt>
   121a8:	ldr	r5, [pc, #152]	; 12248 <close@plt+0x1178>
   121ac:	ldrb	r3, [r5, #4]
   121b0:	cmp	r3, #0
   121b4:	mov	r4, r0
   121b8:	beq	121e4 <close@plt+0x1114>
   121bc:	ldr	r3, [r0]
   121c0:	cmp	r3, #32
   121c4:	bne	121e4 <close@plt+0x1114>
   121c8:	ldr	r3, [pc, #124]	; 1224c <close@plt+0x117c>
   121cc:	ldr	r0, [r3]
   121d0:	bl	154a8 <_obstack_memory_used@@Base+0x34>
   121d4:	cmp	r0, #0
   121d8:	bne	12224 <close@plt+0x1154>
   121dc:	add	sp, sp, #8
   121e0:	pop	{r4, r5, r6, pc}
   121e4:	mov	r2, #5
   121e8:	ldr	r1, [pc, #96]	; 12250 <close@plt+0x1180>
   121ec:	mov	r0, #0
   121f0:	bl	10efc <dcgettext@plt>
   121f4:	mov	r6, r0
   121f8:	ldr	r0, [r5]
   121fc:	cmp	r0, #0
   12200:	beq	12230 <close@plt+0x1160>
   12204:	ldr	r4, [r4]
   12208:	bl	1454c <close@plt+0x347c>
   1220c:	mov	r1, r4
   12210:	str	r6, [sp]
   12214:	ldr	r2, [pc, #56]	; 12254 <close@plt+0x1184>
   12218:	mov	r3, r0
   1221c:	mov	r0, #0
   12220:	bl	10f80 <error@plt>
   12224:	ldr	r3, [pc, #44]	; 12258 <close@plt+0x1188>
   12228:	ldr	r0, [r3]
   1222c:	bl	10ec0 <_exit@plt>
   12230:	mov	r3, r6
   12234:	ldr	r1, [r4]
   12238:	ldr	r2, [pc, #28]	; 1225c <close@plt+0x118c>
   1223c:	bl	10f80 <error@plt>
   12240:	b	12224 <close@plt+0x1154>
   12244:	andeq	r8, r2, r4, asr r1
   12248:	andeq	r8, r2, r8, lsl #3
   1224c:	andeq	r8, r2, r8, asr #2
   12250:	andeq	r7, r1, r0, asr r2
   12254:	andeq	r7, r1, ip, asr r2
   12258:	strdeq	r8, [r2], -r0
   1225c:	andeq	r7, r1, r0, ror #4
   12260:	ldrb	r3, [r0]
   12264:	cmp	r3, #47	; 0x2f
   12268:	bne	12278 <close@plt+0x11a8>
   1226c:	ldrb	r3, [r0, #1]!
   12270:	cmp	r3, #47	; 0x2f
   12274:	beq	1226c <close@plt+0x119c>
   12278:	cmp	r3, #0
   1227c:	bxeq	lr
   12280:	mov	r2, r0
   12284:	mov	r1, #0
   12288:	cmp	r3, #47	; 0x2f
   1228c:	moveq	r1, #1
   12290:	beq	122a0 <close@plt+0x11d0>
   12294:	cmp	r1, #0
   12298:	movne	r0, r2
   1229c:	movne	r1, #0
   122a0:	ldrb	r3, [r2, #1]!
   122a4:	cmp	r3, #0
   122a8:	bne	12288 <close@plt+0x11b8>
   122ac:	bx	lr
   122b0:	push	{r4, lr}
   122b4:	mov	r4, r0
   122b8:	bl	1101c <strlen@plt>
   122bc:	cmp	r0, #1
   122c0:	popls	{r4, pc}
   122c4:	add	r2, r4, r0
   122c8:	mov	r3, r0
   122cc:	ldrb	r2, [r2, #-1]
   122d0:	cmp	r2, #47	; 0x2f
   122d4:	subeq	r3, r0, #2
   122d8:	addeq	r3, r4, r3
   122dc:	rsbeq	r1, r4, #1
   122e0:	popne	{r4, pc}
   122e4:	cmp	r3, r4
   122e8:	add	r0, r1, r3
   122ec:	popeq	{r4, pc}
   122f0:	ldrb	r2, [r3], #-1
   122f4:	cmp	r2, #47	; 0x2f
   122f8:	popne	{r4, pc}
   122fc:	b	122e4 <close@plt+0x1214>
   12300:	push	{r4, lr}
   12304:	mov	r1, #0
   12308:	mov	r4, r0
   1230c:	ldr	r0, [pc, #64]	; 12354 <close@plt+0x1284>
   12310:	bl	10f98 <open64@plt>
   12314:	cmp	r4, r0
   12318:	moveq	r3, #1
   1231c:	beq	12330 <close@plt+0x1260>
   12320:	cmp	r0, #0
   12324:	mov	r3, r0
   12328:	movlt	r3, #0
   1232c:	bge	12338 <close@plt+0x1268>
   12330:	mov	r0, r3
   12334:	pop	{r4, pc}
   12338:	bl	110d0 <close@plt>
   1233c:	bl	11028 <__errno_location@plt>
   12340:	mov	r2, #9
   12344:	mov	r3, #0
   12348:	str	r2, [r0]
   1234c:	mov	r0, r3
   12350:	pop	{r4, pc}
   12354:	andeq	r7, r1, r4, ror #4
   12358:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1235c:	mov	sl, r0
   12360:	mov	r0, r2
   12364:	mov	r8, r2
   12368:	mov	fp, r1
   1236c:	bl	11058 <fileno@plt>
   12370:	mov	r4, r0
   12374:	bl	11028 <__errno_location@plt>
   12378:	cmp	r4, #1
   1237c:	mov	r9, r0
   12380:	beq	124b4 <close@plt+0x13e4>
   12384:	cmp	r4, #2
   12388:	beq	12454 <close@plt+0x1384>
   1238c:	cmp	r4, #0
   12390:	beq	12448 <close@plt+0x1378>
   12394:	mov	r1, #2
   12398:	mov	r0, r1
   1239c:	bl	10f14 <dup2@plt>
   123a0:	subs	r4, r0, #2
   123a4:	movne	r4, #1
   123a8:	mov	r1, #1
   123ac:	mov	r0, r1
   123b0:	bl	10f14 <dup2@plt>
   123b4:	subs	r7, r0, #1
   123b8:	movne	r7, #1
   123bc:	mov	r1, #0
   123c0:	mov	r0, r1
   123c4:	bl	10f14 <dup2@plt>
   123c8:	subs	r5, r0, #0
   123cc:	beq	123e8 <close@plt+0x1318>
   123d0:	mov	r0, #0
   123d4:	bl	12300 <close@plt+0x1230>
   123d8:	cmp	r0, #0
   123dc:	mov	r5, r0
   123e0:	mov	r6, r0
   123e4:	beq	124c0 <close@plt+0x13f0>
   123e8:	cmp	r7, #0
   123ec:	bne	12468 <close@plt+0x1398>
   123f0:	cmp	r4, #0
   123f4:	beq	12408 <close@plt+0x1338>
   123f8:	mov	r0, #2
   123fc:	bl	12300 <close@plt+0x1230>
   12400:	subs	r4, r0, #0
   12404:	beq	124a0 <close@plt+0x13d0>
   12408:	mov	r2, r8
   1240c:	mov	r1, fp
   12410:	mov	r0, sl
   12414:	bl	10fec <freopen64@plt>
   12418:	mov	r6, r0
   1241c:	cmp	r4, #0
   12420:	ldr	r8, [r9]
   12424:	bne	124a8 <close@plt+0x13d8>
   12428:	cmp	r7, #0
   1242c:	bne	12494 <close@plt+0x13c4>
   12430:	cmp	r5, #0
   12434:	bne	1245c <close@plt+0x138c>
   12438:	cmp	r6, #0
   1243c:	streq	r8, [r9]
   12440:	mov	r0, r6
   12444:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12448:	mov	r7, r4
   1244c:	mov	r5, r4
   12450:	b	12408 <close@plt+0x1338>
   12454:	mov	r4, #0
   12458:	b	123a8 <close@plt+0x12d8>
   1245c:	mov	r0, #0
   12460:	bl	110d0 <close@plt>
   12464:	b	12438 <close@plt+0x1368>
   12468:	mov	r0, #1
   1246c:	bl	12300 <close@plt+0x1230>
   12470:	subs	r7, r0, #0
   12474:	bne	123f0 <close@plt+0x1320>
   12478:	cmp	r4, #0
   1247c:	ldr	r8, [r9]
   12480:	moveq	r6, r4
   12484:	beq	12494 <close@plt+0x13c4>
   12488:	mov	r0, #2
   1248c:	mov	r6, r7
   12490:	bl	110d0 <close@plt>
   12494:	mov	r0, #1
   12498:	bl	110d0 <close@plt>
   1249c:	b	12430 <close@plt+0x1360>
   124a0:	ldr	r8, [r9]
   124a4:	mov	r6, r4
   124a8:	mov	r0, #2
   124ac:	bl	110d0 <close@plt>
   124b0:	b	12428 <close@plt+0x1358>
   124b4:	mov	r4, #0
   124b8:	mov	r7, r4
   124bc:	b	123bc <close@plt+0x12ec>
   124c0:	mov	r5, #1
   124c4:	b	1241c <close@plt+0x134c>
   124c8:	push	{r4, r5, r6, lr}
   124cc:	subs	r4, r0, #0
   124d0:	beq	12544 <close@plt+0x1474>
   124d4:	mov	r1, #47	; 0x2f
   124d8:	bl	11094 <strrchr@plt>
   124dc:	subs	r5, r0, #0
   124e0:	beq	12530 <close@plt+0x1460>
   124e4:	add	r6, r5, #1
   124e8:	sub	r3, r6, r4
   124ec:	cmp	r3, #6
   124f0:	ble	12530 <close@plt+0x1460>
   124f4:	mov	r2, #7
   124f8:	ldr	r1, [pc, #96]	; 12560 <close@plt+0x1490>
   124fc:	sub	r0, r5, #6
   12500:	bl	110b8 <strncmp@plt>
   12504:	cmp	r0, #0
   12508:	bne	12530 <close@plt+0x1460>
   1250c:	mov	r2, #3
   12510:	ldr	r1, [pc, #76]	; 12564 <close@plt+0x1494>
   12514:	mov	r0, r6
   12518:	bl	110b8 <strncmp@plt>
   1251c:	cmp	r0, #0
   12520:	movne	r4, r6
   12524:	ldreq	r3, [pc, #60]	; 12568 <close@plt+0x1498>
   12528:	addeq	r4, r5, #4
   1252c:	streq	r4, [r3]
   12530:	ldr	r2, [pc, #52]	; 1256c <close@plt+0x149c>
   12534:	ldr	r3, [pc, #52]	; 12570 <close@plt+0x14a0>
   12538:	str	r4, [r2]
   1253c:	str	r4, [r3]
   12540:	pop	{r4, r5, r6, pc}
   12544:	ldr	r3, [pc, #40]	; 12574 <close@plt+0x14a4>
   12548:	mov	r2, #55	; 0x37
   1254c:	mov	r1, #1
   12550:	ldr	r3, [r3]
   12554:	ldr	r0, [pc, #28]	; 12578 <close@plt+0x14a8>
   12558:	bl	10f44 <fwrite@plt>
   1255c:	bl	110c4 <abort@plt>
   12560:	andeq	r7, r1, r8, lsr #5
   12564:			; <UNDEFINED> instruction: 0x000172b0
   12568:	andeq	r8, r2, r8, lsr r1
   1256c:	muleq	r2, r0, r1
   12570:	andeq	r8, r2, ip, lsr r1
   12574:	andeq	r8, r2, r8, asr #2
   12578:	andeq	r7, r1, r0, ror r2
   1257c:	push	{r4, lr}
   12580:	mov	r2, #48	; 0x30
   12584:	mov	r4, r1
   12588:	mov	r1, #0
   1258c:	bl	11040 <memset@plt>
   12590:	cmp	r4, #10
   12594:	beq	125a0 <close@plt+0x14d0>
   12598:	str	r4, [r0]
   1259c:	pop	{r4, pc}
   125a0:	bl	110c4 <abort@plt>
   125a4:	push	{r4, r5, r6, lr}
   125a8:	mov	r2, #5
   125ac:	mov	r5, r0
   125b0:	mov	r6, r1
   125b4:	mov	r1, r0
   125b8:	mov	r0, #0
   125bc:	bl	10efc <dcgettext@plt>
   125c0:	cmp	r5, r0
   125c4:	mov	r4, r0
   125c8:	beq	125d4 <close@plt+0x1504>
   125cc:	mov	r0, r4
   125d0:	pop	{r4, r5, r6, pc}
   125d4:	bl	15568 <_obstack_memory_used@@Base+0xf4>
   125d8:	ldrb	r3, [r0]
   125dc:	bic	r3, r3, #32
   125e0:	cmp	r3, #85	; 0x55
   125e4:	bne	12644 <close@plt+0x1574>
   125e8:	ldrb	r3, [r0, #1]
   125ec:	bic	r3, r3, #32
   125f0:	cmp	r3, #84	; 0x54
   125f4:	bne	126bc <close@plt+0x15ec>
   125f8:	ldrb	r3, [r0, #2]
   125fc:	bic	r3, r3, #32
   12600:	cmp	r3, #70	; 0x46
   12604:	bne	126bc <close@plt+0x15ec>
   12608:	ldrb	r3, [r0, #3]
   1260c:	cmp	r3, #45	; 0x2d
   12610:	bne	126bc <close@plt+0x15ec>
   12614:	ldrb	r3, [r0, #4]
   12618:	cmp	r3, #56	; 0x38
   1261c:	bne	126bc <close@plt+0x15ec>
   12620:	ldrb	r3, [r0, #5]
   12624:	cmp	r3, #0
   12628:	bne	126bc <close@plt+0x15ec>
   1262c:	ldrb	r2, [r4]
   12630:	ldr	r3, [pc, #156]	; 126d4 <close@plt+0x1604>
   12634:	ldr	r4, [pc, #156]	; 126d8 <close@plt+0x1608>
   12638:	cmp	r2, #96	; 0x60
   1263c:	movne	r4, r3
   12640:	b	125cc <close@plt+0x14fc>
   12644:	cmp	r3, #71	; 0x47
   12648:	bne	126bc <close@plt+0x15ec>
   1264c:	ldrb	r3, [r0, #1]
   12650:	bic	r3, r3, #32
   12654:	cmp	r3, #66	; 0x42
   12658:	bne	126bc <close@plt+0x15ec>
   1265c:	ldrb	r3, [r0, #2]
   12660:	cmp	r3, #49	; 0x31
   12664:	bne	126bc <close@plt+0x15ec>
   12668:	ldrb	r3, [r0, #3]
   1266c:	cmp	r3, #56	; 0x38
   12670:	bne	126bc <close@plt+0x15ec>
   12674:	ldrb	r3, [r0, #4]
   12678:	cmp	r3, #48	; 0x30
   1267c:	bne	126bc <close@plt+0x15ec>
   12680:	ldrb	r3, [r0, #5]
   12684:	cmp	r3, #51	; 0x33
   12688:	bne	126bc <close@plt+0x15ec>
   1268c:	ldrb	r3, [r0, #6]
   12690:	cmp	r3, #48	; 0x30
   12694:	bne	126bc <close@plt+0x15ec>
   12698:	ldrb	r3, [r0, #7]
   1269c:	cmp	r3, #0
   126a0:	bne	126bc <close@plt+0x15ec>
   126a4:	ldrb	r2, [r4]
   126a8:	ldr	r3, [pc, #44]	; 126dc <close@plt+0x160c>
   126ac:	ldr	r4, [pc, #44]	; 126e0 <close@plt+0x1610>
   126b0:	cmp	r2, #96	; 0x60
   126b4:	movne	r4, r3
   126b8:	b	125cc <close@plt+0x14fc>
   126bc:	ldr	r3, [pc, #32]	; 126e4 <close@plt+0x1614>
   126c0:	ldr	r4, [pc, #32]	; 126e8 <close@plt+0x1618>
   126c4:	cmp	r6, #9
   126c8:	movne	r4, r3
   126cc:	mov	r0, r4
   126d0:	pop	{r4, r5, r6, pc}
   126d4:	andeq	r7, r1, ip, lsl #6
   126d8:	andeq	r7, r1, r8, lsl r3
   126dc:	andeq	r7, r1, r0, lsl r3
   126e0:	andeq	r7, r1, r4, lsl r3
   126e4:	andeq	r7, r1, ip, lsl r3
   126e8:	andeq	r7, r1, r8, lsl #6
   126ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126f0:	sub	sp, sp, #124	; 0x7c
   126f4:	ldr	ip, [pc, #3576]	; 134f4 <close@plt+0x2424>
   126f8:	str	r3, [sp, #24]
   126fc:	ldr	r3, [sp, #168]	; 0xa8
   12700:	ldr	ip, [ip]
   12704:	str	r3, [sp, #56]	; 0x38
   12708:	ldr	r3, [sp, #172]	; 0xac
   1270c:	ldr	r8, [sp, #160]	; 0xa0
   12710:	str	r3, [sp, #80]	; 0x50
   12714:	ldr	r3, [sp, #176]	; 0xb0
   12718:	mov	fp, r0
   1271c:	str	r3, [sp, #76]	; 0x4c
   12720:	mov	sl, r1
   12724:	str	r2, [sp, #36]	; 0x24
   12728:	str	ip, [sp, #116]	; 0x74
   1272c:	bl	10f5c <__ctype_get_mb_cur_max@plt>
   12730:	ldr	r3, [sp, #164]	; 0xa4
   12734:	ands	r4, r3, #2
   12738:	movne	r3, #1
   1273c:	moveq	r3, #0
   12740:	str	r3, [sp, #32]
   12744:	str	r0, [sp, #64]	; 0x40
   12748:	cmp	r8, #10
   1274c:	ldrls	pc, [pc, r8, lsl #2]
   12750:	b	13f00 <close@plt+0x2e30>
   12754:	andeq	r2, r1, r8, asr #22
   12758:	andeq	r2, r1, r0, ror #23
   1275c:	andeq	r3, r1, r0, ror #3
   12760:	andeq	r2, r1, r0, lsl #24
   12764:			; <UNDEFINED> instruction: 0x00012ab4
   12768:	strdeq	r2, [r1], -ip
   1276c:	andeq	r2, r1, r8, ror fp
   12770:			; <UNDEFINED> instruction: 0x00012bb0
   12774:	andeq	r2, r1, r0, lsl #15
   12778:	andeq	r2, r1, r0, lsl #15
   1277c:	andeq	r2, r1, r0, lsl #15
   12780:	cmp	r8, #10
   12784:	beq	127a8 <close@plt+0x16d8>
   12788:	mov	r1, r8
   1278c:	ldr	r0, [pc, #3428]	; 134f8 <close@plt+0x2428>
   12790:	bl	125a4 <close@plt+0x14d4>
   12794:	mov	r1, r8
   12798:	str	r0, [sp, #80]	; 0x50
   1279c:	ldr	r0, [pc, #3420]	; 13500 <close@plt+0x2430>
   127a0:	bl	125a4 <close@plt+0x14d4>
   127a4:	str	r0, [sp, #76]	; 0x4c
   127a8:	cmp	r4, #0
   127ac:	movne	r4, #0
   127b0:	beq	13bc0 <close@plt+0x2af0>
   127b4:	ldr	r7, [sp, #76]	; 0x4c
   127b8:	mov	r5, #0
   127bc:	mov	r6, #1
   127c0:	mov	r0, r7
   127c4:	str	r6, [sp, #40]	; 0x28
   127c8:	str	r5, [sp, #68]	; 0x44
   127cc:	bl	1101c <strlen@plt>
   127d0:	str	r6, [sp, #28]
   127d4:	str	r5, [sp, #44]	; 0x2c
   127d8:	str	r5, [sp, #72]	; 0x48
   127dc:	str	r7, [sp, #60]	; 0x3c
   127e0:	str	r0, [sp, #52]	; 0x34
   127e4:	str	r8, [sp, #160]	; 0xa0
   127e8:	mov	r8, fp
   127ec:	ldr	fp, [sp, #160]	; 0xa0
   127f0:	mov	r9, #0
   127f4:	ldr	r3, [sp, #24]
   127f8:	cmn	r3, #1
   127fc:	beq	12d64 <close@plt+0x1c94>
   12800:	ldr	r3, [sp, #24]
   12804:	subs	r6, r3, r9
   12808:	movne	r6, #1
   1280c:	cmp	r6, #0
   12810:	beq	12d7c <close@plt+0x1cac>
   12814:	ldr	r7, [sp, #28]
   12818:	ldr	r0, [sp, #36]	; 0x24
   1281c:	cmp	fp, #2
   12820:	moveq	r7, #0
   12824:	andne	r7, r7, #1
   12828:	add	r3, r0, r9
   1282c:	cmp	r7, #0
   12830:	str	r3, [sp, #48]	; 0x30
   12834:	beq	13220 <close@plt+0x2150>
   12838:	ldr	r2, [sp, #52]	; 0x34
   1283c:	cmp	r2, #0
   12840:	beq	13504 <close@plt+0x2434>
   12844:	ldr	r1, [sp, #24]
   12848:	cmp	r2, #1
   1284c:	mov	r3, r2
   12850:	movls	r3, #0
   12854:	movhi	r3, #1
   12858:	cmn	r1, #1
   1285c:	movne	r3, #0
   12860:	cmp	r3, #0
   12864:	add	r5, r9, r2
   12868:	beq	12874 <close@plt+0x17a4>
   1286c:	bl	1101c <strlen@plt>
   12870:	str	r0, [sp, #24]
   12874:	ldr	r3, [sp, #24]
   12878:	cmp	r5, r3
   1287c:	bhi	13504 <close@plt+0x2434>
   12880:	ldr	r2, [sp, #52]	; 0x34
   12884:	ldr	r1, [sp, #60]	; 0x3c
   12888:	ldr	r0, [sp, #48]	; 0x30
   1288c:	bl	10ef0 <memcmp@plt>
   12890:	cmp	r0, #0
   12894:	bne	13504 <close@plt+0x2434>
   12898:	ldr	r3, [sp, #32]
   1289c:	cmp	r3, #0
   128a0:	bne	13dc0 <close@plt+0x2cf0>
   128a4:	ldr	r3, [sp, #48]	; 0x30
   128a8:	ldrb	r5, [r3]
   128ac:	cmp	r5, #126	; 0x7e
   128b0:	ldrls	pc, [pc, r5, lsl #2]
   128b4:	b	13184 <close@plt+0x20b4>
   128b8:	andeq	r3, r1, r0, ror r0
   128bc:	andeq	r3, r1, r4, lsl #3
   128c0:	andeq	r3, r1, r4, lsl #3
   128c4:	andeq	r3, r1, r4, lsl #3
   128c8:	andeq	r3, r1, r4, lsl #3
   128cc:	andeq	r3, r1, r4, lsl #3
   128d0:	andeq	r3, r1, r4, lsl #3
   128d4:	andeq	r3, r1, ip, lsr r1
   128d8:	andeq	r3, r1, ip, lsr #2
   128dc:	andeq	r3, r1, ip, lsr #32
   128e0:	strdeq	r2, [r1], -r4
   128e4:	andeq	r3, r1, ip, asr #32
   128e8:	andeq	r3, r1, r4, lsr r0
   128ec:	andeq	r2, r1, r4, ror #30
   128f0:	andeq	r3, r1, r4, lsl #3
   128f4:	andeq	r3, r1, r4, lsl #3
   128f8:	andeq	r3, r1, r4, lsl #3
   128fc:	andeq	r3, r1, r4, lsl #3
   12900:	andeq	r3, r1, r4, lsl #3
   12904:	andeq	r3, r1, r4, lsl #3
   12908:	andeq	r3, r1, r4, lsl #3
   1290c:	andeq	r3, r1, r4, lsl #3
   12910:	andeq	r3, r1, r4, lsl #3
   12914:	andeq	r3, r1, r4, lsl #3
   12918:	andeq	r3, r1, r4, lsl #3
   1291c:	andeq	r3, r1, r4, lsl #3
   12920:	andeq	r3, r1, r4, lsl #3
   12924:	andeq	r3, r1, r4, lsl #3
   12928:	andeq	r3, r1, r4, lsl #3
   1292c:	andeq	r3, r1, r4, lsl #3
   12930:	andeq	r3, r1, r4, lsl #3
   12934:	andeq	r3, r1, r4, lsl #3
   12938:	andeq	r3, r1, r4, asr #2
   1293c:	andeq	r3, r1, r8, asr r0
   12940:	andeq	r3, r1, r8, asr r0
   12944:	andeq	r3, r1, ip, asr r1
   12948:	andeq	r3, r1, r8, asr r0
   1294c:	andeq	r3, r1, r8, ror r1
   12950:	andeq	r3, r1, r8, asr r0
   12954:	muleq	r1, r8, lr
   12958:	andeq	r3, r1, r8, asr r0
   1295c:	andeq	r3, r1, r8, asr r0
   12960:	andeq	r3, r1, r8, asr r0
   12964:	andeq	r3, r1, r8, ror r1
   12968:	andeq	r3, r1, r8, ror r1
   1296c:	andeq	r3, r1, r8, ror r1
   12970:	andeq	r3, r1, r8, ror r1
   12974:	andeq	r3, r1, r8, ror r1
   12978:	andeq	r3, r1, r8, ror r1
   1297c:	andeq	r3, r1, r8, ror r1
   12980:	andeq	r3, r1, r8, ror r1
   12984:	andeq	r3, r1, r8, ror r1
   12988:	andeq	r3, r1, r8, ror r1
   1298c:	andeq	r3, r1, r8, ror r1
   12990:	andeq	r3, r1, r8, ror r1
   12994:	andeq	r3, r1, r8, ror r1
   12998:	andeq	r3, r1, r8, ror r1
   1299c:	andeq	r3, r1, r8, ror r1
   129a0:	andeq	r3, r1, r8, ror r1
   129a4:	andeq	r3, r1, r8, asr r0
   129a8:	andeq	r3, r1, r8, asr r0
   129ac:	andeq	r3, r1, r8, asr r0
   129b0:	andeq	r3, r1, r8, asr r0
   129b4:	andeq	r2, r1, ip, ror #28
   129b8:	andeq	r3, r1, r4, lsl #3
   129bc:	andeq	r3, r1, r8, ror r1
   129c0:	andeq	r3, r1, r8, ror r1
   129c4:	andeq	r3, r1, r8, ror r1
   129c8:	andeq	r3, r1, r8, ror r1
   129cc:	andeq	r3, r1, r8, ror r1
   129d0:	andeq	r3, r1, r8, ror r1
   129d4:	andeq	r3, r1, r8, ror r1
   129d8:	andeq	r3, r1, r8, ror r1
   129dc:	andeq	r3, r1, r8, ror r1
   129e0:	andeq	r3, r1, r8, ror r1
   129e4:	andeq	r3, r1, r8, ror r1
   129e8:	andeq	r3, r1, r8, ror r1
   129ec:	andeq	r3, r1, r8, ror r1
   129f0:	andeq	r3, r1, r8, ror r1
   129f4:	andeq	r3, r1, r8, ror r1
   129f8:	andeq	r3, r1, r8, ror r1
   129fc:	andeq	r3, r1, r8, ror r1
   12a00:	andeq	r3, r1, r8, ror r1
   12a04:	andeq	r3, r1, r8, ror r1
   12a08:	andeq	r3, r1, r8, ror r1
   12a0c:	andeq	r3, r1, r8, ror r1
   12a10:	andeq	r3, r1, r8, ror r1
   12a14:	andeq	r3, r1, r8, ror r1
   12a18:	andeq	r3, r1, r8, ror r1
   12a1c:	andeq	r3, r1, r8, ror r1
   12a20:	andeq	r3, r1, r8, ror r1
   12a24:	andeq	r3, r1, r8, asr r0
   12a28:	andeq	r2, r1, r4, lsr #28
   12a2c:	andeq	r3, r1, r8, ror r1
   12a30:	andeq	r3, r1, r8, asr r0
   12a34:	andeq	r3, r1, r8, ror r1
   12a38:	andeq	r3, r1, r8, asr r0
   12a3c:	andeq	r3, r1, r8, ror r1
   12a40:	andeq	r3, r1, r8, ror r1
   12a44:	andeq	r3, r1, r8, ror r1
   12a48:	andeq	r3, r1, r8, ror r1
   12a4c:	andeq	r3, r1, r8, ror r1
   12a50:	andeq	r3, r1, r8, ror r1
   12a54:	andeq	r3, r1, r8, ror r1
   12a58:	andeq	r3, r1, r8, ror r1
   12a5c:	andeq	r3, r1, r8, ror r1
   12a60:	andeq	r3, r1, r8, ror r1
   12a64:	andeq	r3, r1, r8, ror r1
   12a68:	andeq	r3, r1, r8, ror r1
   12a6c:	andeq	r3, r1, r8, ror r1
   12a70:	andeq	r3, r1, r8, ror r1
   12a74:	andeq	r3, r1, r8, ror r1
   12a78:	andeq	r3, r1, r8, ror r1
   12a7c:	andeq	r3, r1, r8, ror r1
   12a80:	andeq	r3, r1, r8, ror r1
   12a84:	andeq	r3, r1, r8, ror r1
   12a88:	andeq	r3, r1, r8, ror r1
   12a8c:	andeq	r3, r1, r8, ror r1
   12a90:	andeq	r3, r1, r8, ror r1
   12a94:	andeq	r3, r1, r8, ror r1
   12a98:	andeq	r3, r1, r8, ror r1
   12a9c:	andeq	r3, r1, r8, ror r1
   12aa0:	andeq	r3, r1, r8, ror r1
   12aa4:	andeq	r2, r1, ip, lsr ip
   12aa8:	andeq	r3, r1, r8, asr r0
   12aac:	andeq	r2, r1, ip, lsr ip
   12ab0:	andeq	r3, r1, ip, asr r1
   12ab4:	cmp	r4, #0
   12ab8:	moveq	r3, #1
   12abc:	streq	r3, [sp, #28]
   12ac0:	beq	131ec <close@plt+0x211c>
   12ac4:	mov	r3, #0
   12ac8:	mov	r4, r3
   12acc:	mov	r2, #1
   12ad0:	str	r2, [sp, #40]	; 0x28
   12ad4:	str	r3, [sp, #68]	; 0x44
   12ad8:	str	r2, [sp, #32]
   12adc:	str	r2, [sp, #52]	; 0x34
   12ae0:	ldr	r3, [pc, #2584]	; 13500 <close@plt+0x2430>
   12ae4:	str	r4, [sp, #44]	; 0x2c
   12ae8:	str	r4, [sp, #72]	; 0x48
   12aec:	str	r4, [sp, #28]
   12af0:	str	r3, [sp, #60]	; 0x3c
   12af4:	mov	r8, #2
   12af8:	b	127e4 <close@plt+0x1714>
   12afc:	cmp	r4, #0
   12b00:	bne	13d8c <close@plt+0x2cbc>
   12b04:	cmp	sl, #0
   12b08:	beq	13b4c <close@plt+0x2a7c>
   12b0c:	mov	r3, #34	; 0x22
   12b10:	strb	r3, [fp]
   12b14:	ldr	r3, [pc, #2528]	; 134fc <close@plt+0x242c>
   12b18:	mov	r1, r4
   12b1c:	mov	r2, #1
   12b20:	str	r4, [sp, #68]	; 0x44
   12b24:	str	r2, [sp, #40]	; 0x28
   12b28:	mov	r4, r2
   12b2c:	str	r1, [sp, #44]	; 0x2c
   12b30:	str	r1, [sp, #72]	; 0x48
   12b34:	str	r1, [sp, #32]
   12b38:	str	r2, [sp, #28]
   12b3c:	str	r2, [sp, #52]	; 0x34
   12b40:	str	r3, [sp, #60]	; 0x3c
   12b44:	b	127e4 <close@plt+0x1714>
   12b48:	mov	r3, #0
   12b4c:	str	r3, [sp, #68]	; 0x44
   12b50:	str	r3, [sp, #44]	; 0x2c
   12b54:	str	r3, [sp, #32]
   12b58:	str	r3, [sp, #28]
   12b5c:	str	r3, [sp, #60]	; 0x3c
   12b60:	mov	r3, #1
   12b64:	str	r8, [sp, #72]	; 0x48
   12b68:	str	r8, [sp, #52]	; 0x34
   12b6c:	mov	r4, r8
   12b70:	str	r3, [sp, #40]	; 0x28
   12b74:	b	127e4 <close@plt+0x1714>
   12b78:	mov	r3, #1
   12b7c:	str	r3, [sp, #40]	; 0x28
   12b80:	str	r3, [sp, #32]
   12b84:	str	r3, [sp, #28]
   12b88:	str	r3, [sp, #52]	; 0x34
   12b8c:	ldr	r3, [pc, #2408]	; 134fc <close@plt+0x242c>
   12b90:	mov	r2, #0
   12b94:	mov	r4, r2
   12b98:	str	r2, [sp, #68]	; 0x44
   12b9c:	str	r2, [sp, #44]	; 0x2c
   12ba0:	str	r2, [sp, #72]	; 0x48
   12ba4:	str	r3, [sp, #60]	; 0x3c
   12ba8:	mov	r8, #5
   12bac:	b	127e4 <close@plt+0x1714>
   12bb0:	mov	r3, #0
   12bb4:	mov	r2, #1
   12bb8:	str	r2, [sp, #40]	; 0x28
   12bbc:	mov	r4, r3
   12bc0:	str	r3, [sp, #68]	; 0x44
   12bc4:	str	r2, [sp, #28]
   12bc8:	str	r3, [sp, #44]	; 0x2c
   12bcc:	str	r3, [sp, #72]	; 0x48
   12bd0:	str	r3, [sp, #32]
   12bd4:	str	r3, [sp, #52]	; 0x34
   12bd8:	str	r3, [sp, #60]	; 0x3c
   12bdc:	b	127e4 <close@plt+0x1714>
   12be0:	mov	r2, #1
   12be4:	mov	r3, #0
   12be8:	str	r2, [sp, #40]	; 0x28
   12bec:	mov	r4, r3
   12bf0:	str	r3, [sp, #68]	; 0x44
   12bf4:	str	r8, [sp, #52]	; 0x34
   12bf8:	str	r2, [sp, #32]
   12bfc:	b	12ae0 <close@plt+0x1a10>
   12c00:	mov	r3, #1
   12c04:	str	r3, [sp, #40]	; 0x28
   12c08:	str	r3, [sp, #32]
   12c0c:	str	r3, [sp, #28]
   12c10:	str	r3, [sp, #52]	; 0x34
   12c14:	ldr	r3, [pc, #2276]	; 13500 <close@plt+0x2430>
   12c18:	mov	r2, #0
   12c1c:	mov	r4, r2
   12c20:	str	r2, [sp, #68]	; 0x44
   12c24:	str	r2, [sp, #44]	; 0x2c
   12c28:	str	r2, [sp, #72]	; 0x48
   12c2c:	str	r3, [sp, #60]	; 0x3c
   12c30:	mov	r8, #2
   12c34:	b	127e4 <close@plt+0x1714>
   12c38:	mov	r7, #0
   12c3c:	ldr	r3, [sp, #24]
   12c40:	cmn	r3, #1
   12c44:	beq	13780 <close@plt+0x26b0>
   12c48:	ldr	r3, [sp, #24]
   12c4c:	subs	r3, r3, #1
   12c50:	movne	r3, #1
   12c54:	cmp	r3, #0
   12c58:	sub	r2, fp, #2
   12c5c:	clz	r2, r2
   12c60:	lsr	r2, r2, #5
   12c64:	bne	12e60 <close@plt+0x1d90>
   12c68:	cmp	r9, #0
   12c6c:	bne	12e60 <close@plt+0x1d90>
   12c70:	ldr	r3, [sp, #32]
   12c74:	tst	r3, r2
   12c78:	bne	12f80 <close@plt+0x1eb0>
   12c7c:	ldr	r3, [sp, #28]
   12c80:	eor	r3, r3, #1
   12c84:	orr	r3, r2, r3
   12c88:	ldr	r2, [sp, #32]
   12c8c:	eor	r3, r3, #1
   12c90:	orrs	r3, r2, r3
   12c94:	beq	12cc4 <close@plt+0x1bf4>
   12c98:	mov	r3, #0
   12c9c:	ldr	r1, [sp, #56]	; 0x38
   12ca0:	cmp	r1, #0
   12ca4:	beq	12cc4 <close@plt+0x1bf4>
   12ca8:	lsr	r2, r5, #5
   12cac:	and	r0, r5, #31
   12cb0:	uxtb	r2, r2
   12cb4:	ldr	r1, [r1, r2, lsl #2]
   12cb8:	lsr	r2, r1, r0
   12cbc:	tst	r2, #1
   12cc0:	bne	12ccc <close@plt+0x1bfc>
   12cc4:	cmp	r7, #0
   12cc8:	beq	12f1c <close@plt+0x1e4c>
   12ccc:	sub	r2, fp, #2
   12cd0:	clz	r2, r2
   12cd4:	lsr	r2, r2, #5
   12cd8:	ldr	r3, [sp, #32]
   12cdc:	cmp	r3, #0
   12ce0:	bne	1300c <close@plt+0x1f3c>
   12ce4:	ldr	r3, [sp, #44]	; 0x2c
   12ce8:	eor	r3, r3, #1
   12cec:	ands	r3, r2, r3
   12cf0:	beq	12d28 <close@plt+0x1c58>
   12cf4:	cmp	sl, r4
   12cf8:	movhi	r2, #39	; 0x27
   12cfc:	strbhi	r2, [r8, r4]
   12d00:	add	r2, r4, #1
   12d04:	cmp	r2, sl
   12d08:	movcc	r1, #36	; 0x24
   12d0c:	strbcc	r1, [r8, r2]
   12d10:	add	r2, r4, #2
   12d14:	cmp	r2, sl
   12d18:	add	r4, r4, #3
   12d1c:	movcc	r1, #39	; 0x27
   12d20:	strbcc	r1, [r8, r2]
   12d24:	str	r3, [sp, #44]	; 0x2c
   12d28:	cmp	r4, sl
   12d2c:	movcc	r3, #92	; 0x5c
   12d30:	strbcc	r3, [r8, r4]
   12d34:	add	r9, r9, #1
   12d38:	add	r4, r4, #1
   12d3c:	cmp	r4, sl
   12d40:	ldr	r3, [sp, #40]	; 0x28
   12d44:	strbcc	r5, [r8, r4]
   12d48:	cmp	r6, #0
   12d4c:	moveq	r3, #0
   12d50:	str	r3, [sp, #40]	; 0x28
   12d54:	ldr	r3, [sp, #24]
   12d58:	add	r4, r4, #1
   12d5c:	cmn	r3, #1
   12d60:	bne	12800 <close@plt+0x1730>
   12d64:	ldr	r3, [sp, #36]	; 0x24
   12d68:	ldrb	r6, [r3, r9]
   12d6c:	adds	r6, r6, #0
   12d70:	movne	r6, #1
   12d74:	cmp	r6, #0
   12d78:	bne	12814 <close@plt+0x1744>
   12d7c:	str	fp, [sp, #160]	; 0xa0
   12d80:	mov	fp, r8
   12d84:	ldr	r8, [sp, #160]	; 0xa0
   12d88:	ldr	r1, [sp, #32]
   12d8c:	cmp	r4, #0
   12d90:	sub	r2, r8, #2
   12d94:	clz	r2, r2
   12d98:	lsr	r2, r2, #5
   12d9c:	andeq	r3, r2, r1
   12da0:	movne	r3, #0
   12da4:	cmp	r3, #0
   12da8:	bne	13e94 <close@plt+0x2dc4>
   12dac:	eor	r3, r1, #1
   12db0:	ands	r2, r2, r3
   12db4:	beq	13dd0 <close@plt+0x2d00>
   12db8:	ldr	r3, [sp, #68]	; 0x44
   12dbc:	cmp	r3, #0
   12dc0:	beq	13dd4 <close@plt+0x2d04>
   12dc4:	ldr	r3, [sp, #40]	; 0x28
   12dc8:	cmp	r3, #0
   12dcc:	bne	13e50 <close@plt+0x2d80>
   12dd0:	ldr	r3, [sp, #72]	; 0x48
   12dd4:	adds	r3, r3, #0
   12dd8:	movne	r3, #1
   12ddc:	cmp	sl, #0
   12de0:	movne	r3, #0
   12de4:	cmp	r3, #0
   12de8:	ldreq	r2, [sp, #68]	; 0x44
   12dec:	beq	13dd4 <close@plt+0x2d04>
   12df0:	ldr	sl, [sp, #72]	; 0x48
   12df4:	str	r3, [sp, #68]	; 0x44
   12df8:	ldr	r3, [pc, #1792]	; 13500 <close@plt+0x2430>
   12dfc:	mov	r2, #39	; 0x27
   12e00:	mov	r4, #1
   12e04:	str	r3, [sp, #60]	; 0x3c
   12e08:	mov	r3, #0
   12e0c:	strb	r2, [fp]
   12e10:	str	r4, [sp, #52]	; 0x34
   12e14:	mov	r8, #2
   12e18:	str	r3, [sp, #32]
   12e1c:	b	127e4 <close@plt+0x1714>
   12e20:	mov	r7, #0
   12e24:	cmp	fp, #2
   12e28:	beq	13760 <close@plt+0x2690>
   12e2c:	ldr	r3, [sp, #52]	; 0x34
   12e30:	ldr	r2, [sp, #28]
   12e34:	ldr	r1, [sp, #32]
   12e38:	cmp	r3, #0
   12e3c:	andne	r2, r2, r1
   12e40:	moveq	r2, #0
   12e44:	cmp	r2, #0
   12e48:	moveq	r5, #92	; 0x5c
   12e4c:	moveq	r3, r5
   12e50:	bne	1376c <close@plt+0x269c>
   12e54:	ldr	r1, [sp, #28]
   12e58:	cmp	r1, #0
   12e5c:	bne	13edc <close@plt+0x2e0c>
   12e60:	mov	r6, #0
   12e64:	b	12c7c <close@plt+0x1bac>
   12e68:	mov	r7, #0
   12e6c:	cmp	fp, #2
   12e70:	beq	137d0 <close@plt+0x2700>
   12e74:	cmp	fp, #5
   12e78:	beq	13794 <close@plt+0x26c4>
   12e7c:	sub	r2, fp, #2
   12e80:	mov	r6, #0
   12e84:	clz	r2, r2
   12e88:	mov	r5, #63	; 0x3f
   12e8c:	lsr	r2, r2, #5
   12e90:	b	12c7c <close@plt+0x1bac>
   12e94:	mov	r7, #0
   12e98:	cmp	fp, #2
   12e9c:	strne	r6, [sp, #68]	; 0x44
   12ea0:	movne	r2, #0
   12ea4:	movne	r5, #39	; 0x27
   12ea8:	bne	12c7c <close@plt+0x1bac>
   12eac:	ldr	r3, [sp, #32]
   12eb0:	cmp	r3, #0
   12eb4:	bne	13bb0 <close@plt+0x2ae0>
   12eb8:	cmp	sl, #0
   12ebc:	ldr	r3, [sp, #72]	; 0x48
   12ec0:	clz	r3, r3
   12ec4:	lsr	r3, r3, #5
   12ec8:	moveq	r3, #0
   12ecc:	cmp	r3, #0
   12ed0:	bne	13ae4 <close@plt+0x2a14>
   12ed4:	cmp	sl, r4
   12ed8:	movhi	r3, #39	; 0x27
   12edc:	strbhi	r3, [r8, r4]
   12ee0:	add	r3, r4, #1
   12ee4:	cmp	sl, r3
   12ee8:	movhi	r2, #92	; 0x5c
   12eec:	strbhi	r2, [r8, r3]
   12ef0:	add	r3, r4, #2
   12ef4:	cmp	sl, r3
   12ef8:	movhi	r2, #39	; 0x27
   12efc:	strbhi	r2, [r8, r3]
   12f00:	mov	r3, #0
   12f04:	cmp	r7, #0
   12f08:	add	r4, r4, #3
   12f0c:	str	r3, [sp, #44]	; 0x2c
   12f10:	str	r6, [sp, #68]	; 0x44
   12f14:	mov	r5, #39	; 0x27
   12f18:	bne	12ccc <close@plt+0x1bfc>
   12f1c:	ldr	r2, [sp, #44]	; 0x2c
   12f20:	eor	r3, r3, #1
   12f24:	and	r3, r3, r2
   12f28:	add	r9, r9, #1
   12f2c:	uxtb	r3, r3
   12f30:	cmp	r3, #0
   12f34:	beq	12d3c <close@plt+0x1c6c>
   12f38:	cmp	sl, r4
   12f3c:	movhi	r3, #39	; 0x27
   12f40:	strbhi	r3, [r8, r4]
   12f44:	add	r3, r4, #1
   12f48:	cmp	sl, r3
   12f4c:	movhi	r2, #39	; 0x27
   12f50:	strbhi	r2, [r8, r3]
   12f54:	mov	r3, #0
   12f58:	add	r4, r4, #2
   12f5c:	str	r3, [sp, #44]	; 0x2c
   12f60:	b	12d3c <close@plt+0x1c6c>
   12f64:	mov	r3, #114	; 0x72
   12f68:	ldr	r1, [sp, #32]
   12f6c:	sub	r2, fp, #2
   12f70:	clz	r2, r2
   12f74:	lsr	r2, r2, #5
   12f78:	tst	r2, r1
   12f7c:	beq	12e54 <close@plt+0x1d84>
   12f80:	mov	fp, r8
   12f84:	mov	r8, #2
   12f88:	ldr	r3, [sp, #28]
   12f8c:	cmp	r3, #0
   12f90:	movne	r8, #4
   12f94:	ldr	r3, [sp, #164]	; 0xa4
   12f98:	mov	ip, #0
   12f9c:	bic	r3, r3, #2
   12fa0:	str	r3, [sp, #4]
   12fa4:	ldr	r3, [sp, #76]	; 0x4c
   12fa8:	str	r8, [sp]
   12fac:	str	r3, [sp, #16]
   12fb0:	ldr	r3, [sp, #80]	; 0x50
   12fb4:	ldr	r2, [sp, #36]	; 0x24
   12fb8:	str	r3, [sp, #12]
   12fbc:	mov	r1, sl
   12fc0:	ldr	r3, [sp, #24]
   12fc4:	mov	r0, fp
   12fc8:	str	ip, [sp, #8]
   12fcc:	bl	126ec <close@plt+0x161c>
   12fd0:	mov	r4, r0
   12fd4:	ldr	r3, [pc, #1304]	; 134f4 <close@plt+0x2424>
   12fd8:	ldr	r2, [sp, #116]	; 0x74
   12fdc:	mov	r0, r4
   12fe0:	ldr	r3, [r3]
   12fe4:	cmp	r2, r3
   12fe8:	bne	13ed8 <close@plt+0x2e08>
   12fec:	add	sp, sp, #124	; 0x7c
   12ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ff4:	mov	r5, #110	; 0x6e
   12ff8:	ldr	r3, [sp, #32]
   12ffc:	mov	r2, #0
   13000:	cmp	r3, #0
   13004:	mov	r6, r2
   13008:	beq	12ce4 <close@plt+0x1c14>
   1300c:	str	fp, [sp, #160]	; 0xa0
   13010:	mov	fp, r8
   13014:	ldr	r8, [sp, #160]	; 0xa0
   13018:	mov	r3, r2
   1301c:	ldr	r2, [sp, #28]
   13020:	and	r2, r2, r3
   13024:	str	r2, [sp, #28]
   13028:	b	12f88 <close@plt+0x1eb8>
   1302c:	mov	r5, #116	; 0x74
   13030:	b	12ff8 <close@plt+0x1f28>
   13034:	mov	r5, #102	; 0x66
   13038:	ldr	r3, [sp, #32]
   1303c:	cmp	r3, #0
   13040:	bne	13bec <close@plt+0x2b1c>
   13044:	mov	r6, #0
   13048:	b	12d28 <close@plt+0x1c58>
   1304c:	mov	r5, #118	; 0x76
   13050:	b	13038 <close@plt+0x1f68>
   13054:	mov	r7, #0
   13058:	mov	r6, #0
   1305c:	b	12c98 <close@plt+0x1bc8>
   13060:	ldr	r3, [sp, #32]
   13064:	cmp	r3, #0
   13068:	bne	13e30 <close@plt+0x2d60>
   1306c:	mov	r7, r3
   13070:	ldr	r3, [sp, #44]	; 0x2c
   13074:	sub	r2, fp, #2
   13078:	eor	r3, r3, #1
   1307c:	clz	r2, r2
   13080:	lsr	r2, r2, #5
   13084:	ands	r3, r2, r3
   13088:	beq	13ad0 <close@plt+0x2a00>
   1308c:	cmp	sl, r4
   13090:	movhi	r1, #39	; 0x27
   13094:	strbhi	r1, [r8, r4]
   13098:	add	r1, r4, #1
   1309c:	cmp	sl, r1
   130a0:	movhi	r0, #36	; 0x24
   130a4:	strbhi	r0, [r8, r1]
   130a8:	add	r1, r4, #2
   130ac:	cmp	sl, r1
   130b0:	movhi	r0, #39	; 0x27
   130b4:	strbhi	r0, [r8, r1]
   130b8:	add	r1, r4, #3
   130bc:	cmp	sl, r1
   130c0:	bls	13b30 <close@plt+0x2a60>
   130c4:	mov	r4, r1
   130c8:	mov	r1, #92	; 0x5c
   130cc:	strb	r1, [r8, r4]
   130d0:	mov	r1, r4
   130d4:	str	r3, [sp, #44]	; 0x2c
   130d8:	cmp	fp, #2
   130dc:	add	r4, r4, #1
   130e0:	beq	13b78 <close@plt+0x2aa8>
   130e4:	ldr	r0, [sp, #24]
   130e8:	add	r3, r9, #1
   130ec:	cmp	r3, r0
   130f0:	bcs	13108 <close@plt+0x2038>
   130f4:	ldr	r0, [sp, #36]	; 0x24
   130f8:	ldrb	r3, [r0, r3]
   130fc:	sub	r3, r3, #48	; 0x30
   13100:	cmp	r3, #9
   13104:	bls	13b88 <close@plt+0x2ab8>
   13108:	mov	r5, #48	; 0x30
   1310c:	ldr	r3, [sp, #28]
   13110:	eor	r3, r3, #1
   13114:	orrs	r2, r2, r3
   13118:	mov	r3, r6
   1311c:	moveq	r6, r2
   13120:	beq	12c9c <close@plt+0x1bcc>
   13124:	mov	r6, #0
   13128:	b	12cc4 <close@plt+0x1bf4>
   1312c:	mov	r2, #0
   13130:	mov	r6, r2
   13134:	mov	r5, #98	; 0x62
   13138:	b	12ce4 <close@plt+0x1c14>
   1313c:	mov	r5, #97	; 0x61
   13140:	b	13044 <close@plt+0x1f74>
   13144:	mov	r3, r7
   13148:	mov	r6, r7
   1314c:	mov	r2, #0
   13150:	mov	r7, r3
   13154:	mov	r5, #32
   13158:	b	12c7c <close@plt+0x1bac>
   1315c:	cmp	r9, #0
   13160:	mov	r3, r7
   13164:	bne	1372c <close@plt+0x265c>
   13168:	mov	r6, r7
   1316c:	mov	r2, r9
   13170:	mov	r7, r3
   13174:	b	12c7c <close@plt+0x1bac>
   13178:	mov	r6, r7
   1317c:	b	12c98 <close@plt+0x1bc8>
   13180:	mov	r7, #0
   13184:	ldr	r3, [sp, #64]	; 0x40
   13188:	cmp	r3, #1
   1318c:	bne	137e8 <close@plt+0x2718>
   13190:	bl	11004 <__ctype_b_loc@plt>
   13194:	ldr	r2, [sp, #64]	; 0x40
   13198:	sxth	r3, r5
   1319c:	mov	ip, r2
   131a0:	lsl	r3, r3, #1
   131a4:	ldr	r2, [r0]
   131a8:	ldrh	r3, [r2, r3]
   131ac:	and	r3, r3, #16384	; 0x4000
   131b0:	cmp	r3, #0
   131b4:	ldr	r3, [sp, #28]
   131b8:	movne	r6, #1
   131bc:	moveq	r6, #0
   131c0:	movne	r2, #0
   131c4:	andeq	r2, r3, #1
   131c8:	cmp	r2, #0
   131cc:	bne	13af8 <close@plt+0x2a28>
   131d0:	sub	r2, fp, #2
   131d4:	clz	r2, r2
   131d8:	lsr	r2, r2, #5
   131dc:	b	12c7c <close@plt+0x1bac>
   131e0:	cmp	r4, #0
   131e4:	bne	13ea4 <close@plt+0x2dd4>
   131e8:	str	r4, [sp, #28]
   131ec:	cmp	sl, #0
   131f0:	bne	13ee8 <close@plt+0x2e18>
   131f4:	ldr	r3, [pc, #772]	; 13500 <close@plt+0x2430>
   131f8:	mov	r4, #1
   131fc:	str	r4, [sp, #40]	; 0x28
   13200:	str	r3, [sp, #60]	; 0x3c
   13204:	str	r4, [sp, #52]	; 0x34
   13208:	str	sl, [sp, #72]	; 0x48
   1320c:	str	sl, [sp, #68]	; 0x44
   13210:	str	sl, [sp, #44]	; 0x2c
   13214:	str	sl, [sp, #32]
   13218:	mov	r8, #2
   1321c:	b	127e4 <close@plt+0x1714>
   13220:	ldr	r3, [sp, #36]	; 0x24
   13224:	ldrb	r5, [r3, r9]
   13228:	cmp	r5, #126	; 0x7e
   1322c:	ldrls	pc, [pc, r5, lsl #2]
   13230:	b	13184 <close@plt+0x20b4>
   13234:	andeq	r3, r1, r8, ror #8
   13238:	andeq	r3, r1, r4, lsl #3
   1323c:	andeq	r3, r1, r4, lsl #3
   13240:	andeq	r3, r1, r4, lsl #3
   13244:	andeq	r3, r1, r4, lsl #3
   13248:	andeq	r3, r1, r4, lsl #3
   1324c:	andeq	r3, r1, r4, lsl #3
   13250:	andeq	r3, r1, r4, asr r4
   13254:	andeq	r3, r1, r0, asr #8
   13258:	andeq	r3, r1, r8, lsr r4
   1325c:	andeq	r3, r1, r0, lsr r4
   13260:	andeq	r3, r1, r0, ror #9
   13264:	andeq	r3, r1, ip, asr #9
   13268:	andeq	r2, r1, r4, ror #30
   1326c:	andeq	r3, r1, r4, lsl #3
   13270:	andeq	r3, r1, r4, lsl #3
   13274:	andeq	r3, r1, r4, lsl #3
   13278:	andeq	r3, r1, r4, lsl #3
   1327c:	andeq	r3, r1, r4, lsl #3
   13280:	andeq	r3, r1, r4, lsl #3
   13284:	andeq	r3, r1, r4, lsl #3
   13288:	andeq	r3, r1, r4, lsl #3
   1328c:	andeq	r3, r1, r4, lsl #3
   13290:	andeq	r3, r1, r4, lsl #3
   13294:	andeq	r3, r1, r4, lsl #3
   13298:	andeq	r3, r1, r4, lsl #3
   1329c:	andeq	r3, r1, r4, lsl #3
   132a0:	andeq	r3, r1, r4, lsl #3
   132a4:	andeq	r3, r1, r4, lsl #3
   132a8:	andeq	r3, r1, r4, lsl #3
   132ac:	andeq	r3, r1, r4, lsl #3
   132b0:	andeq	r3, r1, r4, lsl #3
   132b4:			; <UNDEFINED> instruction: 0x000134bc
   132b8:	andeq	r3, r1, r8, lsr #9
   132bc:	andeq	r3, r1, r8, lsr #9
   132c0:	muleq	r1, r8, r4
   132c4:	andeq	r3, r1, r8, lsr #9
   132c8:	ldrdeq	r3, [r1], -r0
   132cc:	andeq	r3, r1, r8, lsr #9
   132d0:	muleq	r1, r8, lr
   132d4:	andeq	r3, r1, r8, lsr #9
   132d8:	andeq	r3, r1, r8, lsr #9
   132dc:	andeq	r3, r1, r8, lsr #9
   132e0:	ldrdeq	r3, [r1], -r0
   132e4:	ldrdeq	r3, [r1], -r0
   132e8:	ldrdeq	r3, [r1], -r0
   132ec:	ldrdeq	r3, [r1], -r0
   132f0:	ldrdeq	r3, [r1], -r0
   132f4:	ldrdeq	r3, [r1], -r0
   132f8:	ldrdeq	r3, [r1], -r0
   132fc:	ldrdeq	r3, [r1], -r0
   13300:	ldrdeq	r3, [r1], -r0
   13304:	ldrdeq	r3, [r1], -r0
   13308:	ldrdeq	r3, [r1], -r0
   1330c:	ldrdeq	r3, [r1], -r0
   13310:	ldrdeq	r3, [r1], -r0
   13314:	ldrdeq	r3, [r1], -r0
   13318:	ldrdeq	r3, [r1], -r0
   1331c:	ldrdeq	r3, [r1], -r0
   13320:	andeq	r3, r1, r8, lsr #9
   13324:	andeq	r3, r1, r8, lsr #9
   13328:	andeq	r3, r1, r8, lsr #9
   1332c:	andeq	r3, r1, r8, lsr #9
   13330:	andeq	r2, r1, ip, ror #28
   13334:	andeq	r3, r1, r4, lsl #3
   13338:	ldrdeq	r3, [r1], -r0
   1333c:	ldrdeq	r3, [r1], -r0
   13340:	ldrdeq	r3, [r1], -r0
   13344:	ldrdeq	r3, [r1], -r0
   13348:	ldrdeq	r3, [r1], -r0
   1334c:	ldrdeq	r3, [r1], -r0
   13350:	ldrdeq	r3, [r1], -r0
   13354:	ldrdeq	r3, [r1], -r0
   13358:	ldrdeq	r3, [r1], -r0
   1335c:	ldrdeq	r3, [r1], -r0
   13360:	ldrdeq	r3, [r1], -r0
   13364:	ldrdeq	r3, [r1], -r0
   13368:	ldrdeq	r3, [r1], -r0
   1336c:	ldrdeq	r3, [r1], -r0
   13370:	ldrdeq	r3, [r1], -r0
   13374:	ldrdeq	r3, [r1], -r0
   13378:	ldrdeq	r3, [r1], -r0
   1337c:	ldrdeq	r3, [r1], -r0
   13380:	ldrdeq	r3, [r1], -r0
   13384:	ldrdeq	r3, [r1], -r0
   13388:	ldrdeq	r3, [r1], -r0
   1338c:	ldrdeq	r3, [r1], -r0
   13390:	ldrdeq	r3, [r1], -r0
   13394:	ldrdeq	r3, [r1], -r0
   13398:	ldrdeq	r3, [r1], -r0
   1339c:	ldrdeq	r3, [r1], -r0
   133a0:	andeq	r3, r1, r8, lsr #9
   133a4:	andeq	r2, r1, r4, lsr #28
   133a8:	ldrdeq	r3, [r1], -r0
   133ac:	andeq	r3, r1, r8, lsr #9
   133b0:	ldrdeq	r3, [r1], -r0
   133b4:	andeq	r3, r1, r8, lsr #9
   133b8:	ldrdeq	r3, [r1], -r0
   133bc:	ldrdeq	r3, [r1], -r0
   133c0:	ldrdeq	r3, [r1], -r0
   133c4:	ldrdeq	r3, [r1], -r0
   133c8:	ldrdeq	r3, [r1], -r0
   133cc:	ldrdeq	r3, [r1], -r0
   133d0:	ldrdeq	r3, [r1], -r0
   133d4:	ldrdeq	r3, [r1], -r0
   133d8:	ldrdeq	r3, [r1], -r0
   133dc:	ldrdeq	r3, [r1], -r0
   133e0:	ldrdeq	r3, [r1], -r0
   133e4:	ldrdeq	r3, [r1], -r0
   133e8:	ldrdeq	r3, [r1], -r0
   133ec:	ldrdeq	r3, [r1], -r0
   133f0:	ldrdeq	r3, [r1], -r0
   133f4:	ldrdeq	r3, [r1], -r0
   133f8:	ldrdeq	r3, [r1], -r0
   133fc:	ldrdeq	r3, [r1], -r0
   13400:	ldrdeq	r3, [r1], -r0
   13404:	ldrdeq	r3, [r1], -r0
   13408:	ldrdeq	r3, [r1], -r0
   1340c:	ldrdeq	r3, [r1], -r0
   13410:	ldrdeq	r3, [r1], -r0
   13414:	ldrdeq	r3, [r1], -r0
   13418:	ldrdeq	r3, [r1], -r0
   1341c:	ldrdeq	r3, [r1], -r0
   13420:	andeq	r2, r1, ip, lsr ip
   13424:	andeq	r3, r1, r8, lsr #9
   13428:	andeq	r2, r1, ip, lsr ip
   1342c:	muleq	r1, r8, r4
   13430:	mov	r3, #110	; 0x6e
   13434:	b	12f68 <close@plt+0x1e98>
   13438:	mov	r3, #116	; 0x74
   1343c:	b	12f68 <close@plt+0x1e98>
   13440:	sub	r2, fp, #2
   13444:	mov	r3, #98	; 0x62
   13448:	clz	r2, r2
   1344c:	lsr	r2, r2, #5
   13450:	b	12e54 <close@plt+0x1d84>
   13454:	sub	r2, fp, #2
   13458:	mov	r3, #97	; 0x61
   1345c:	clz	r2, r2
   13460:	lsr	r2, r2, #5
   13464:	b	12e54 <close@plt+0x1d84>
   13468:	ldr	r3, [sp, #28]
   1346c:	cmp	r3, #0
   13470:	bne	13060 <close@plt+0x1f90>
   13474:	ldr	r3, [sp, #164]	; 0xa4
   13478:	tst	r3, #1
   1347c:	bne	13af0 <close@plt+0x2a20>
   13480:	ldr	r6, [sp, #28]
   13484:	sub	r2, fp, #2
   13488:	mov	r7, r6
   1348c:	clz	r2, r2
   13490:	lsr	r2, r2, #5
   13494:	b	12c7c <close@plt+0x1bac>
   13498:	sub	r2, fp, #2
   1349c:	clz	r2, r2
   134a0:	lsr	r2, r2, #5
   134a4:	b	12c68 <close@plt+0x1b98>
   134a8:	sub	r2, fp, #2
   134ac:	mov	r6, #0
   134b0:	clz	r2, r2
   134b4:	lsr	r2, r2, #5
   134b8:	b	12c70 <close@plt+0x1ba0>
   134bc:	sub	r2, fp, #2
   134c0:	clz	r2, r2
   134c4:	lsr	r2, r2, #5
   134c8:	b	12c70 <close@plt+0x1ba0>
   134cc:	sub	r2, fp, #2
   134d0:	mov	r3, #102	; 0x66
   134d4:	clz	r2, r2
   134d8:	lsr	r2, r2, #5
   134dc:	b	12e54 <close@plt+0x1d84>
   134e0:	sub	r2, fp, #2
   134e4:	mov	r3, #118	; 0x76
   134e8:	clz	r2, r2
   134ec:	lsr	r2, r2, #5
   134f0:	b	12e54 <close@plt+0x1d84>
   134f4:	andeq	r7, r2, r8, lsl #30
   134f8:	andeq	r7, r1, r0, lsr #6
   134fc:	andeq	r7, r1, r8, lsl #6
   13500:	andeq	r7, r1, ip, lsl r3
   13504:	ldr	r3, [sp, #48]	; 0x30
   13508:	ldrb	r5, [r3]
   1350c:	cmp	r5, #126	; 0x7e
   13510:	ldrls	pc, [pc, r5, lsl #2]
   13514:	b	13180 <close@plt+0x20b0>
   13518:	andeq	r3, r1, r0, rrx
   1351c:	andeq	r3, r1, r0, lsl #3
   13520:	andeq	r3, r1, r0, lsl #3
   13524:	andeq	r3, r1, r0, lsl #3
   13528:	andeq	r3, r1, r0, lsl #3
   1352c:	andeq	r3, r1, r0, lsl #3
   13530:	andeq	r3, r1, r0, lsl #3
   13534:	andeq	r3, r1, r8, asr r7
   13538:	andeq	r3, r1, r0, asr r7
   1353c:	andeq	r3, r1, ip, lsr #32
   13540:	strdeq	r2, [r1], -r4
   13544:	andeq	r3, r1, ip, asr #32
   13548:	andeq	r3, r1, r4, lsr r0
   1354c:	andeq	r3, r1, r4, asr #14
   13550:	andeq	r3, r1, r0, lsl #3
   13554:	andeq	r3, r1, r0, lsl #3
   13558:	andeq	r3, r1, r0, lsl #3
   1355c:	andeq	r3, r1, r0, lsl #3
   13560:	andeq	r3, r1, r0, lsl #3
   13564:	andeq	r3, r1, r0, lsl #3
   13568:	andeq	r3, r1, r0, lsl #3
   1356c:	andeq	r3, r1, r0, lsl #3
   13570:	andeq	r3, r1, r0, lsl #3
   13574:	andeq	r3, r1, r0, lsl #3
   13578:	andeq	r3, r1, r0, lsl #3
   1357c:	andeq	r3, r1, r0, lsl #3
   13580:	andeq	r3, r1, r0, lsl #3
   13584:	andeq	r3, r1, r0, lsl #3
   13588:	andeq	r3, r1, r0, lsl #3
   1358c:	andeq	r3, r1, r0, lsl #3
   13590:	andeq	r3, r1, r0, lsl #3
   13594:	andeq	r3, r1, r0, lsl #3
   13598:	andeq	r3, r1, ip, lsr r7
   1359c:	andeq	r3, r1, r4, asr r0
   135a0:	andeq	r3, r1, r4, asr r0
   135a4:	andeq	r3, r1, r0, lsr #14
   135a8:	andeq	r3, r1, r4, asr r0
   135ac:	andeq	r3, r1, r4, lsl r7
   135b0:	andeq	r3, r1, r4, asr r0
   135b4:	muleq	r1, r4, lr
   135b8:	andeq	r3, r1, r4, asr r0
   135bc:	andeq	r3, r1, r4, asr r0
   135c0:	andeq	r3, r1, r4, asr r0
   135c4:	andeq	r3, r1, r4, lsl r7
   135c8:	andeq	r3, r1, r4, lsl r7
   135cc:	andeq	r3, r1, r4, lsl r7
   135d0:	andeq	r3, r1, r4, lsl r7
   135d4:	andeq	r3, r1, r4, lsl r7
   135d8:	andeq	r3, r1, r4, lsl r7
   135dc:	andeq	r3, r1, r4, lsl r7
   135e0:	andeq	r3, r1, r4, lsl r7
   135e4:	andeq	r3, r1, r4, lsl r7
   135e8:	andeq	r3, r1, r4, lsl r7
   135ec:	andeq	r3, r1, r4, lsl r7
   135f0:	andeq	r3, r1, r4, lsl r7
   135f4:	andeq	r3, r1, r4, lsl r7
   135f8:	andeq	r3, r1, r4, lsl r7
   135fc:	andeq	r3, r1, r4, lsl r7
   13600:	andeq	r3, r1, r4, lsl r7
   13604:	andeq	r3, r1, r4, asr r0
   13608:	andeq	r3, r1, r4, asr r0
   1360c:	andeq	r3, r1, r4, asr r0
   13610:	andeq	r3, r1, r4, asr r0
   13614:	andeq	r2, r1, r8, ror #28
   13618:	andeq	r3, r1, r0, lsl #3
   1361c:	andeq	r3, r1, r4, lsl r7
   13620:	andeq	r3, r1, r4, lsl r7
   13624:	andeq	r3, r1, r4, lsl r7
   13628:	andeq	r3, r1, r4, lsl r7
   1362c:	andeq	r3, r1, r4, lsl r7
   13630:	andeq	r3, r1, r4, lsl r7
   13634:	andeq	r3, r1, r4, lsl r7
   13638:	andeq	r3, r1, r4, lsl r7
   1363c:	andeq	r3, r1, r4, lsl r7
   13640:	andeq	r3, r1, r4, lsl r7
   13644:	andeq	r3, r1, r4, lsl r7
   13648:	andeq	r3, r1, r4, lsl r7
   1364c:	andeq	r3, r1, r4, lsl r7
   13650:	andeq	r3, r1, r4, lsl r7
   13654:	andeq	r3, r1, r4, lsl r7
   13658:	andeq	r3, r1, r4, lsl r7
   1365c:	andeq	r3, r1, r4, lsl r7
   13660:	andeq	r3, r1, r4, lsl r7
   13664:	andeq	r3, r1, r4, lsl r7
   13668:	andeq	r3, r1, r4, lsl r7
   1366c:	andeq	r3, r1, r4, lsl r7
   13670:	andeq	r3, r1, r4, lsl r7
   13674:	andeq	r3, r1, r4, lsl r7
   13678:	andeq	r3, r1, r4, lsl r7
   1367c:	andeq	r3, r1, r4, lsl r7
   13680:	andeq	r3, r1, r4, lsl r7
   13684:	andeq	r3, r1, r4, asr r0
   13688:	andeq	r2, r1, r0, lsr #28
   1368c:	andeq	r3, r1, r4, lsl r7
   13690:	andeq	r3, r1, r4, asr r0
   13694:	andeq	r3, r1, r4, lsl r7
   13698:	andeq	r3, r1, r4, asr r0
   1369c:	andeq	r3, r1, r4, lsl r7
   136a0:	andeq	r3, r1, r4, lsl r7
   136a4:	andeq	r3, r1, r4, lsl r7
   136a8:	andeq	r3, r1, r4, lsl r7
   136ac:	andeq	r3, r1, r4, lsl r7
   136b0:	andeq	r3, r1, r4, lsl r7
   136b4:	andeq	r3, r1, r4, lsl r7
   136b8:	andeq	r3, r1, r4, lsl r7
   136bc:	andeq	r3, r1, r4, lsl r7
   136c0:	andeq	r3, r1, r4, lsl r7
   136c4:	andeq	r3, r1, r4, lsl r7
   136c8:	andeq	r3, r1, r4, lsl r7
   136cc:	andeq	r3, r1, r4, lsl r7
   136d0:	andeq	r3, r1, r4, lsl r7
   136d4:	andeq	r3, r1, r4, lsl r7
   136d8:	andeq	r3, r1, r4, lsl r7
   136dc:	andeq	r3, r1, r4, lsl r7
   136e0:	andeq	r3, r1, r4, lsl r7
   136e4:	andeq	r3, r1, r4, lsl r7
   136e8:	andeq	r3, r1, r4, lsl r7
   136ec:	andeq	r3, r1, r4, lsl r7
   136f0:	andeq	r3, r1, r4, lsl r7
   136f4:	andeq	r3, r1, r4, lsl r7
   136f8:	andeq	r3, r1, r4, lsl r7
   136fc:	andeq	r3, r1, r4, lsl r7
   13700:	andeq	r3, r1, r4, lsl r7
   13704:	andeq	r2, r1, r8, lsr ip
   13708:	andeq	r3, r1, r4, asr r0
   1370c:	andeq	r2, r1, r8, lsr ip
   13710:	andeq	r3, r1, r0, lsr #14
   13714:	mov	r6, r7
   13718:	mov	r7, #0
   1371c:	b	12c98 <close@plt+0x1bc8>
   13720:	cmp	r9, #0
   13724:	mov	r3, #0
   13728:	beq	13168 <close@plt+0x2098>
   1372c:	mov	r6, #0
   13730:	mov	r7, r3
   13734:	mov	r3, r6
   13738:	b	12c9c <close@plt+0x1bcc>
   1373c:	mov	r3, #0
   13740:	b	13148 <close@plt+0x2078>
   13744:	mov	r7, #0
   13748:	mov	r3, #114	; 0x72
   1374c:	b	12f68 <close@plt+0x1e98>
   13750:	mov	r5, #98	; 0x62
   13754:	b	12ff8 <close@plt+0x1f28>
   13758:	mov	r5, #97	; 0x61
   1375c:	b	13038 <close@plt+0x1f68>
   13760:	ldr	r3, [sp, #32]
   13764:	cmp	r3, #0
   13768:	bne	13bb0 <close@plt+0x2ae0>
   1376c:	add	r9, r9, #1
   13770:	ldr	r3, [sp, #44]	; 0x2c
   13774:	mov	r6, #0
   13778:	mov	r5, #92	; 0x5c
   1377c:	b	12f30 <close@plt+0x1e60>
   13780:	ldr	r3, [sp, #36]	; 0x24
   13784:	ldrb	r3, [r3, #1]
   13788:	adds	r3, r3, #0
   1378c:	movne	r3, #1
   13790:	b	12c54 <close@plt+0x1b84>
   13794:	ldr	r3, [sp, #164]	; 0xa4
   13798:	ands	r3, r3, #4
   1379c:	beq	137c0 <close@plt+0x26f0>
   137a0:	ldr	r2, [sp, #24]
   137a4:	add	r3, r9, #2
   137a8:	cmp	r3, r2
   137ac:	bcs	137c0 <close@plt+0x26f0>
   137b0:	ldr	r2, [sp, #48]	; 0x30
   137b4:	ldrb	r5, [r2, #1]
   137b8:	cmp	r5, #63	; 0x3f
   137bc:	beq	13c24 <close@plt+0x2b54>
   137c0:	mov	r2, #0
   137c4:	mov	r6, r2
   137c8:	mov	r5, #63	; 0x3f
   137cc:	b	12c7c <close@plt+0x1bac>
   137d0:	ldr	r3, [sp, #32]
   137d4:	cmp	r3, #0
   137d8:	bne	13bb0 <close@plt+0x2ae0>
   137dc:	mov	r6, r3
   137e0:	mov	r5, #63	; 0x3f
   137e4:	b	12cc4 <close@plt+0x1bf4>
   137e8:	ldr	r3, [sp, #24]
   137ec:	cmn	r3, #1
   137f0:	mov	r3, #0
   137f4:	str	r3, [sp, #108]	; 0x6c
   137f8:	str	r3, [sp, #112]	; 0x70
   137fc:	bne	1380c <close@plt+0x273c>
   13800:	ldr	r0, [sp, #36]	; 0x24
   13804:	bl	1101c <strlen@plt>
   13808:	str	r0, [sp, #24]
   1380c:	mov	r3, #0
   13810:	str	sl, [sp, #88]	; 0x58
   13814:	ldr	sl, [sp, #36]	; 0x24
   13818:	str	r5, [sp, #92]	; 0x5c
   1381c:	mov	r5, r3
   13820:	str	r7, [sp, #96]	; 0x60
   13824:	str	r4, [sp, #100]	; 0x64
   13828:	str	r8, [sp, #84]	; 0x54
   1382c:	ldr	r3, [sp, #24]
   13830:	add	r4, r9, r5
   13834:	add	r7, sl, r4
   13838:	sub	r2, r3, r4
   1383c:	mov	r1, r7
   13840:	add	r3, sp, #108	; 0x6c
   13844:	add	r0, sp, #104	; 0x68
   13848:	bl	150d8 <close@plt+0x4008>
   1384c:	subs	r8, r0, #0
   13850:	beq	138a0 <close@plt+0x27d0>
   13854:	cmn	r8, #1
   13858:	beq	13c00 <close@plt+0x2b30>
   1385c:	cmn	r8, #2
   13860:	beq	13d20 <close@plt+0x2c50>
   13864:	ldr	r3, [sp, #32]
   13868:	cmp	fp, #2
   1386c:	movne	r3, #0
   13870:	andeq	r3, r3, #1
   13874:	cmp	r3, #0
   13878:	bne	13a00 <close@plt+0x2930>
   1387c:	ldr	r0, [sp, #104]	; 0x68
   13880:	bl	10f38 <iswprint@plt>
   13884:	add	r5, r5, r8
   13888:	cmp	r0, #0
   1388c:	add	r0, sp, #108	; 0x6c
   13890:	moveq	r6, #0
   13894:	bl	10ed8 <mbsinit@plt>
   13898:	cmp	r0, #0
   1389c:	beq	1382c <close@plt+0x275c>
   138a0:	ldr	r3, [sp, #28]
   138a4:	mov	ip, r5
   138a8:	eor	r2, r6, #1
   138ac:	ldr	r5, [sp, #92]	; 0x5c
   138b0:	ldr	r7, [sp, #96]	; 0x60
   138b4:	ldr	r4, [sp, #100]	; 0x64
   138b8:	ldr	r8, [sp, #84]	; 0x54
   138bc:	ldr	sl, [sp, #88]	; 0x58
   138c0:	and	r2, r2, r3
   138c4:	cmp	ip, #1
   138c8:	bls	131c8 <close@plt+0x20f8>
   138cc:	add	r1, ip, r9
   138d0:	ldr	lr, [sp, #48]	; 0x30
   138d4:	mov	r0, #0
   138d8:	str	r6, [sp, #48]	; 0x30
   138dc:	mov	ip, #39	; 0x27
   138e0:	ldr	r6, [sp, #44]	; 0x2c
   138e4:	b	1399c <close@plt+0x28cc>
   138e8:	ldr	r0, [sp, #32]
   138ec:	sub	r3, fp, #2
   138f0:	cmp	r0, #0
   138f4:	clz	r3, r3
   138f8:	lsr	r3, r3, #5
   138fc:	bne	13b04 <close@plt+0x2a34>
   13900:	eor	r0, r6, #1
   13904:	ands	r3, r3, r0
   13908:	beq	13938 <close@plt+0x2868>
   1390c:	add	r0, r4, #1
   13910:	cmp	sl, r4
   13914:	strbhi	ip, [r8, r4]
   13918:	cmp	sl, r0
   1391c:	movhi	r6, #36	; 0x24
   13920:	strbhi	r6, [r8, r0]
   13924:	add	r0, r4, #2
   13928:	mov	r6, r3
   1392c:	add	r4, r4, #3
   13930:	cmp	sl, r0
   13934:	strbhi	ip, [r8, r0]
   13938:	cmp	sl, r4
   1393c:	movhi	r3, #92	; 0x5c
   13940:	strbhi	r3, [r8, r4]
   13944:	add	r3, r4, #1
   13948:	cmp	sl, r3
   1394c:	lsrhi	r0, r5, #6
   13950:	addhi	r0, r0, #48	; 0x30
   13954:	strbhi	r0, [r8, r3]
   13958:	add	r0, r4, #2
   1395c:	cmp	sl, r0
   13960:	lsrhi	r3, r5, #3
   13964:	andhi	r3, r3, #7
   13968:	addhi	r3, r3, #48	; 0x30
   1396c:	add	r9, r9, #1
   13970:	strbhi	r3, [r8, r0]
   13974:	and	r5, r5, #7
   13978:	cmp	r9, r1
   1397c:	add	r5, r5, #48	; 0x30
   13980:	add	r4, r4, #3
   13984:	bcs	13b24 <close@plt+0x2a54>
   13988:	mov	r0, r2
   1398c:	cmp	sl, r4
   13990:	strbhi	r5, [r8, r4]
   13994:	ldrb	r5, [lr, #1]!
   13998:	add	r4, r4, #1
   1399c:	cmp	r2, #0
   139a0:	bne	138e8 <close@plt+0x2818>
   139a4:	eor	r3, r0, #1
   139a8:	and	r3, r3, r6
   139ac:	cmp	r7, #0
   139b0:	uxtb	r3, r3
   139b4:	beq	139c8 <close@plt+0x28f8>
   139b8:	cmp	sl, r4
   139bc:	movhi	r7, #92	; 0x5c
   139c0:	strbhi	r7, [r8, r4]
   139c4:	add	r4, r4, #1
   139c8:	add	r9, r9, #1
   139cc:	cmp	r9, r1
   139d0:	bcs	13b18 <close@plt+0x2a48>
   139d4:	cmp	r3, #0
   139d8:	beq	13b44 <close@plt+0x2a74>
   139dc:	cmp	sl, r4
   139e0:	add	r3, r4, #1
   139e4:	strbhi	ip, [r8, r4]
   139e8:	mov	r7, #0
   139ec:	cmp	sl, r3
   139f0:	strbhi	ip, [r8, r3]
   139f4:	add	r4, r4, #2
   139f8:	mov	r6, r7
   139fc:	b	1398c <close@plt+0x28bc>
   13a00:	cmp	r8, #1
   13a04:	beq	1387c <close@plt+0x27ac>
   13a08:	add	r1, r4, #1
   13a0c:	add	r3, sl, r8
   13a10:	add	r1, sl, r1
   13a14:	add	r4, r3, r4
   13a18:	ldrb	r3, [r1], #1
   13a1c:	sub	r3, r3, #91	; 0x5b
   13a20:	cmp	r3, #33	; 0x21
   13a24:	ldrls	pc, [pc, r3, lsl #2]
   13a28:	b	13ab4 <close@plt+0x29e4>
   13a2c:	andeq	r3, r1, r0, asr #21
   13a30:	andeq	r3, r1, r0, asr #21
   13a34:			; <UNDEFINED> instruction: 0x00013ab4
   13a38:	andeq	r3, r1, r0, asr #21
   13a3c:			; <UNDEFINED> instruction: 0x00013ab4
   13a40:	andeq	r3, r1, r0, asr #21
   13a44:			; <UNDEFINED> instruction: 0x00013ab4
   13a48:			; <UNDEFINED> instruction: 0x00013ab4
   13a4c:			; <UNDEFINED> instruction: 0x00013ab4
   13a50:			; <UNDEFINED> instruction: 0x00013ab4
   13a54:			; <UNDEFINED> instruction: 0x00013ab4
   13a58:			; <UNDEFINED> instruction: 0x00013ab4
   13a5c:			; <UNDEFINED> instruction: 0x00013ab4
   13a60:			; <UNDEFINED> instruction: 0x00013ab4
   13a64:			; <UNDEFINED> instruction: 0x00013ab4
   13a68:			; <UNDEFINED> instruction: 0x00013ab4
   13a6c:			; <UNDEFINED> instruction: 0x00013ab4
   13a70:			; <UNDEFINED> instruction: 0x00013ab4
   13a74:			; <UNDEFINED> instruction: 0x00013ab4
   13a78:			; <UNDEFINED> instruction: 0x00013ab4
   13a7c:			; <UNDEFINED> instruction: 0x00013ab4
   13a80:			; <UNDEFINED> instruction: 0x00013ab4
   13a84:			; <UNDEFINED> instruction: 0x00013ab4
   13a88:			; <UNDEFINED> instruction: 0x00013ab4
   13a8c:			; <UNDEFINED> instruction: 0x00013ab4
   13a90:			; <UNDEFINED> instruction: 0x00013ab4
   13a94:			; <UNDEFINED> instruction: 0x00013ab4
   13a98:			; <UNDEFINED> instruction: 0x00013ab4
   13a9c:			; <UNDEFINED> instruction: 0x00013ab4
   13aa0:			; <UNDEFINED> instruction: 0x00013ab4
   13aa4:			; <UNDEFINED> instruction: 0x00013ab4
   13aa8:			; <UNDEFINED> instruction: 0x00013ab4
   13aac:			; <UNDEFINED> instruction: 0x00013ab4
   13ab0:	andeq	r3, r1, r0, asr #21
   13ab4:	cmp	r4, r1
   13ab8:	bne	13a18 <close@plt+0x2948>
   13abc:	b	1387c <close@plt+0x27ac>
   13ac0:	ldr	fp, [sp, #84]	; 0x54
   13ac4:	ldr	sl, [sp, #88]	; 0x58
   13ac8:	mov	r8, #2
   13acc:	b	12f88 <close@plt+0x1eb8>
   13ad0:	cmp	sl, r4
   13ad4:	movls	r1, r4
   13ad8:	bls	130d8 <close@plt+0x2008>
   13adc:	ldr	r3, [sp, #44]	; 0x2c
   13ae0:	b	130c8 <close@plt+0x1ff8>
   13ae4:	str	sl, [sp, #72]	; 0x48
   13ae8:	ldr	sl, [sp, #32]
   13aec:	b	12f00 <close@plt+0x1e30>
   13af0:	add	r9, r9, #1
   13af4:	b	127f4 <close@plt+0x1724>
   13af8:	ldr	r2, [sp, #28]
   13afc:	mov	r6, #0
   13b00:	b	138cc <close@plt+0x27fc>
   13b04:	str	fp, [sp, #160]	; 0xa0
   13b08:	str	r3, [sp, #28]
   13b0c:	mov	fp, r8
   13b10:	ldr	r8, [sp, #160]	; 0xa0
   13b14:	b	12f88 <close@plt+0x1eb8>
   13b18:	str	r6, [sp, #44]	; 0x2c
   13b1c:	ldr	r6, [sp, #48]	; 0x30
   13b20:	b	12f30 <close@plt+0x1e60>
   13b24:	str	r6, [sp, #44]	; 0x2c
   13b28:	ldr	r6, [sp, #48]	; 0x30
   13b2c:	b	12d3c <close@plt+0x1c6c>
   13b30:	add	r4, r4, #4
   13b34:	str	r3, [sp, #44]	; 0x2c
   13b38:	mov	r6, #0
   13b3c:	mov	r5, #48	; 0x30
   13b40:	b	12cc4 <close@plt+0x1bf4>
   13b44:	mov	r7, r3
   13b48:	b	1398c <close@plt+0x28bc>
   13b4c:	ldr	r3, [pc, #-1624]	; 134fc <close@plt+0x242c>
   13b50:	mov	r4, #1
   13b54:	str	r4, [sp, #40]	; 0x28
   13b58:	str	r4, [sp, #28]
   13b5c:	str	r4, [sp, #52]	; 0x34
   13b60:	str	sl, [sp, #72]	; 0x48
   13b64:	str	sl, [sp, #68]	; 0x44
   13b68:	str	sl, [sp, #44]	; 0x2c
   13b6c:	str	sl, [sp, #32]
   13b70:	str	r3, [sp, #60]	; 0x3c
   13b74:	b	127e4 <close@plt+0x1714>
   13b78:	mov	r3, r6
   13b7c:	mov	r5, #48	; 0x30
   13b80:	mov	r6, #0
   13b84:	b	12cc4 <close@plt+0x1bf4>
   13b88:	cmp	sl, r4
   13b8c:	movhi	r3, #48	; 0x30
   13b90:	strbhi	r3, [r8, r4]
   13b94:	add	r3, r1, #2
   13b98:	cmp	sl, r3
   13b9c:	movhi	r0, #48	; 0x30
   13ba0:	strbhi	r0, [r8, r3]
   13ba4:	add	r4, r1, #3
   13ba8:	mov	r5, #48	; 0x30
   13bac:	b	1310c <close@plt+0x203c>
   13bb0:	str	fp, [sp, #160]	; 0xa0
   13bb4:	mov	fp, r8
   13bb8:	ldr	r8, [sp, #160]	; 0xa0
   13bbc:	b	12f88 <close@plt+0x1eb8>
   13bc0:	ldr	r2, [sp, #80]	; 0x50
   13bc4:	ldrb	r3, [r2]
   13bc8:	cmp	r3, #0
   13bcc:	beq	127b4 <close@plt+0x16e4>
   13bd0:	cmp	sl, r4
   13bd4:	strbhi	r3, [fp, r4]
   13bd8:	ldrb	r3, [r2, #1]!
   13bdc:	add	r4, r4, #1
   13be0:	cmp	r3, #0
   13be4:	bne	13bd0 <close@plt+0x2b00>
   13be8:	b	127b4 <close@plt+0x16e4>
   13bec:	str	fp, [sp, #160]	; 0xa0
   13bf0:	mov	r3, #0
   13bf4:	mov	fp, r8
   13bf8:	ldr	r8, [sp, #160]	; 0xa0
   13bfc:	b	1301c <close@plt+0x1f4c>
   13c00:	mov	ip, r5
   13c04:	ldr	r7, [sp, #96]	; 0x60
   13c08:	ldr	r5, [sp, #92]	; 0x5c
   13c0c:	ldr	r4, [sp, #100]	; 0x64
   13c10:	ldr	r8, [sp, #84]	; 0x54
   13c14:	ldr	sl, [sp, #88]	; 0x58
   13c18:	ldr	r2, [sp, #28]
   13c1c:	mov	r6, #0
   13c20:	b	138c4 <close@plt+0x27f4>
   13c24:	ldr	r2, [sp, #36]	; 0x24
   13c28:	ldrb	r1, [r2, r3]
   13c2c:	sub	r2, r1, #33	; 0x21
   13c30:	cmp	r2, #29
   13c34:	ldrls	pc, [pc, r2, lsl #2]
   13c38:	b	13d14 <close@plt+0x2c44>
   13c3c:			; <UNDEFINED> instruction: 0x00013cb4
   13c40:	andeq	r3, r1, r4, lsl sp
   13c44:	andeq	r3, r1, r4, lsl sp
   13c48:	andeq	r3, r1, r4, lsl sp
   13c4c:	andeq	r3, r1, r4, lsl sp
   13c50:	andeq	r3, r1, r4, lsl sp
   13c54:			; <UNDEFINED> instruction: 0x00013cb4
   13c58:			; <UNDEFINED> instruction: 0x00013cb4
   13c5c:			; <UNDEFINED> instruction: 0x00013cb4
   13c60:	andeq	r3, r1, r4, lsl sp
   13c64:	andeq	r3, r1, r4, lsl sp
   13c68:	andeq	r3, r1, r4, lsl sp
   13c6c:			; <UNDEFINED> instruction: 0x00013cb4
   13c70:	andeq	r3, r1, r4, lsl sp
   13c74:			; <UNDEFINED> instruction: 0x00013cb4
   13c78:	andeq	r3, r1, r4, lsl sp
   13c7c:	andeq	r3, r1, r4, lsl sp
   13c80:	andeq	r3, r1, r4, lsl sp
   13c84:	andeq	r3, r1, r4, lsl sp
   13c88:	andeq	r3, r1, r4, lsl sp
   13c8c:	andeq	r3, r1, r4, lsl sp
   13c90:	andeq	r3, r1, r4, lsl sp
   13c94:	andeq	r3, r1, r4, lsl sp
   13c98:	andeq	r3, r1, r4, lsl sp
   13c9c:	andeq	r3, r1, r4, lsl sp
   13ca0:	andeq	r3, r1, r4, lsl sp
   13ca4:	andeq	r3, r1, r4, lsl sp
   13ca8:			; <UNDEFINED> instruction: 0x00013cb4
   13cac:			; <UNDEFINED> instruction: 0x00013cb4
   13cb0:			; <UNDEFINED> instruction: 0x00013cb4
   13cb4:	ldr	r2, [sp, #32]
   13cb8:	cmp	r2, #0
   13cbc:	bne	13dc0 <close@plt+0x2cf0>
   13cc0:	cmp	sl, r4
   13cc4:	movhi	r2, #63	; 0x3f
   13cc8:	strbhi	r2, [r8, r4]
   13ccc:	add	r2, r4, #1
   13cd0:	cmp	sl, r2
   13cd4:	movhi	r0, #34	; 0x22
   13cd8:	strbhi	r0, [r8, r2]
   13cdc:	add	r2, r4, #2
   13ce0:	cmp	sl, r2
   13ce4:	movhi	r0, #34	; 0x22
   13ce8:	strbhi	r0, [r8, r2]
   13cec:	add	r2, r4, #3
   13cf0:	cmp	sl, r2
   13cf4:	movhi	r0, #63	; 0x3f
   13cf8:	strbhi	r0, [r8, r2]
   13cfc:	mov	r2, #0
   13d00:	add	r4, r4, #4
   13d04:	mov	r5, r1
   13d08:	mov	r9, r3
   13d0c:	mov	r6, r2
   13d10:	b	1310c <close@plt+0x203c>
   13d14:	mov	r2, #0
   13d18:	mov	r6, r2
   13d1c:	b	12c7c <close@plt+0x1bac>
   13d20:	ldr	r0, [sp, #24]
   13d24:	mov	r1, r4
   13d28:	cmp	r1, r0
   13d2c:	mov	r2, r7
   13d30:	mov	r3, r5
   13d34:	mov	ip, r5
   13d38:	ldr	r7, [sp, #96]	; 0x60
   13d3c:	ldr	r5, [sp, #92]	; 0x5c
   13d40:	ldr	r4, [sp, #100]	; 0x64
   13d44:	ldr	r8, [sp, #84]	; 0x54
   13d48:	ldr	sl, [sp, #88]	; 0x58
   13d4c:	bcs	13d80 <close@plt+0x2cb0>
   13d50:	ldrb	r6, [r2]
   13d54:	cmp	r6, #0
   13d58:	bne	13d6c <close@plt+0x2c9c>
   13d5c:	b	13e9c <close@plt+0x2dcc>
   13d60:	ldrb	r6, [r2, #1]!
   13d64:	cmp	r6, #0
   13d68:	beq	13e24 <close@plt+0x2d54>
   13d6c:	add	r3, r3, #1
   13d70:	add	r1, r9, r3
   13d74:	cmp	r1, r0
   13d78:	bcc	13d60 <close@plt+0x2c90>
   13d7c:	mov	ip, r3
   13d80:	ldr	r2, [sp, #28]
   13d84:	mov	r6, #0
   13d88:	b	138c4 <close@plt+0x27f4>
   13d8c:	mov	r3, #1
   13d90:	str	r3, [sp, #40]	; 0x28
   13d94:	str	r3, [sp, #32]
   13d98:	str	r3, [sp, #28]
   13d9c:	str	r3, [sp, #52]	; 0x34
   13da0:	ldr	r3, [pc, #-2220]	; 134fc <close@plt+0x242c>
   13da4:	mov	r2, #0
   13da8:	str	r2, [sp, #68]	; 0x44
   13dac:	str	r2, [sp, #44]	; 0x2c
   13db0:	str	r2, [sp, #72]	; 0x48
   13db4:	mov	r4, r2
   13db8:	str	r3, [sp, #60]	; 0x3c
   13dbc:	b	127e4 <close@plt+0x1714>
   13dc0:	str	fp, [sp, #160]	; 0xa0
   13dc4:	mov	fp, r8
   13dc8:	ldr	r8, [sp, #160]	; 0xa0
   13dcc:	b	12f94 <close@plt+0x1ec4>
   13dd0:	mov	r2, r3
   13dd4:	ldr	r3, [sp, #60]	; 0x3c
   13dd8:	cmp	r3, #0
   13ddc:	moveq	r2, #0
   13de0:	andne	r2, r2, #1
   13de4:	cmp	r2, #0
   13de8:	beq	13e14 <close@plt+0x2d44>
   13dec:	mov	r2, r3
   13df0:	ldrb	r3, [r3]
   13df4:	cmp	r3, #0
   13df8:	beq	13e14 <close@plt+0x2d44>
   13dfc:	cmp	sl, r4
   13e00:	strbhi	r3, [fp, r4]
   13e04:	ldrb	r3, [r2, #1]!
   13e08:	add	r4, r4, #1
   13e0c:	cmp	r3, #0
   13e10:	bne	13dfc <close@plt+0x2d2c>
   13e14:	cmp	sl, r4
   13e18:	movhi	r3, #0
   13e1c:	strbhi	r3, [fp, r4]
   13e20:	b	12fd4 <close@plt+0x1f04>
   13e24:	mov	ip, r3
   13e28:	ldr	r2, [sp, #28]
   13e2c:	b	138c4 <close@plt+0x27f4>
   13e30:	str	fp, [sp, #160]	; 0xa0
   13e34:	mov	fp, r8
   13e38:	ldr	r8, [sp, #160]	; 0xa0
   13e3c:	sub	r3, r8, #2
   13e40:	clz	r3, r3
   13e44:	lsr	r3, r3, #5
   13e48:	str	r3, [sp, #28]
   13e4c:	b	12f88 <close@plt+0x1eb8>
   13e50:	ldr	r3, [sp, #76]	; 0x4c
   13e54:	mov	ip, #5
   13e58:	str	r3, [sp, #16]
   13e5c:	ldr	r3, [sp, #80]	; 0x50
   13e60:	ldr	r2, [sp, #36]	; 0x24
   13e64:	str	r3, [sp, #12]
   13e68:	ldr	r3, [sp, #56]	; 0x38
   13e6c:	ldr	r1, [sp, #72]	; 0x48
   13e70:	str	r3, [sp, #8]
   13e74:	ldr	r3, [sp, #164]	; 0xa4
   13e78:	mov	r0, fp
   13e7c:	str	r3, [sp, #4]
   13e80:	str	ip, [sp]
   13e84:	ldr	r3, [sp, #24]
   13e88:	bl	126ec <close@plt+0x161c>
   13e8c:	mov	r4, r0
   13e90:	b	12fd4 <close@plt+0x1f04>
   13e94:	mov	r8, #2
   13e98:	b	12f88 <close@plt+0x1eb8>
   13e9c:	ldr	r2, [sp, #28]
   13ea0:	b	138c4 <close@plt+0x27f4>
   13ea4:	mov	r3, #0
   13ea8:	str	r3, [sp, #68]	; 0x44
   13eac:	str	r3, [sp, #44]	; 0x2c
   13eb0:	str	r3, [sp, #72]	; 0x48
   13eb4:	str	r3, [sp, #28]
   13eb8:	mov	r4, r3
   13ebc:	ldr	r3, [pc, #-2500]	; 13500 <close@plt+0x2430>
   13ec0:	mov	r2, #1
   13ec4:	str	r2, [sp, #40]	; 0x28
   13ec8:	str	r2, [sp, #32]
   13ecc:	str	r2, [sp, #52]	; 0x34
   13ed0:	str	r3, [sp, #60]	; 0x3c
   13ed4:	b	127e4 <close@plt+0x1714>
   13ed8:	bl	10f08 <__stack_chk_fail@plt>
   13edc:	mov	r5, r3
   13ee0:	mov	r6, #0
   13ee4:	b	12cd8 <close@plt+0x1c08>
   13ee8:	mov	r3, #0
   13eec:	mov	r2, #1
   13ef0:	str	r3, [sp, #44]	; 0x2c
   13ef4:	str	r3, [sp, #72]	; 0x48
   13ef8:	str	r2, [sp, #40]	; 0x28
   13efc:	b	12df4 <close@plt+0x1d24>
   13f00:	bl	110c4 <abort@plt>
   13f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f08:	sub	sp, sp, #44	; 0x2c
   13f0c:	mov	r6, r0
   13f10:	mov	r4, r3
   13f14:	mov	sl, r1
   13f18:	mov	fp, r2
   13f1c:	bl	11028 <__errno_location@plt>
   13f20:	ldr	r7, [pc, #364]	; 14094 <close@plt+0x2fc4>
   13f24:	cmp	r6, #0
   13f28:	ldr	r5, [r7]
   13f2c:	ldr	r3, [r0]
   13f30:	str	r3, [sp, #24]
   13f34:	blt	14090 <close@plt+0x2fc0>
   13f38:	ldr	r3, [r7, #4]
   13f3c:	mov	r8, r0
   13f40:	cmp	r3, r6
   13f44:	bgt	13f90 <close@plt+0x2ec0>
   13f48:	cmn	r6, #-268435454	; 0xf0000002
   13f4c:	bgt	1408c <close@plt+0x2fbc>
   13f50:	add	r9, r6, #1
   13f54:	add	r3, r7, #8
   13f58:	cmp	r5, r3
   13f5c:	lsl	r1, r9, #3
   13f60:	beq	1406c <close@plt+0x2f9c>
   13f64:	mov	r0, r5
   13f68:	bl	14cf8 <close@plt+0x3c28>
   13f6c:	mov	r5, r0
   13f70:	str	r0, [r7]
   13f74:	ldr	r0, [r7, #4]
   13f78:	mov	r1, #0
   13f7c:	sub	r2, r9, r0
   13f80:	add	r0, r5, r0, lsl #3
   13f84:	lsl	r2, r2, #3
   13f88:	bl	11040 <memset@plt>
   13f8c:	str	r9, [r7, #4]
   13f90:	add	r3, r5, r6, lsl #3
   13f94:	ldr	r1, [r4, #4]
   13f98:	ldr	r7, [r3, #4]
   13f9c:	ldr	r9, [r5, r6, lsl #3]
   13fa0:	ldr	r2, [r4, #40]	; 0x28
   13fa4:	ldr	ip, [r4, #44]	; 0x2c
   13fa8:	str	r3, [sp, #28]
   13fac:	ldr	r3, [r4]
   13fb0:	orr	r1, r1, #1
   13fb4:	add	lr, r4, #8
   13fb8:	str	r1, [sp, #36]	; 0x24
   13fbc:	str	r1, [sp, #4]
   13fc0:	str	r2, [sp, #12]
   13fc4:	str	r3, [sp]
   13fc8:	mov	r0, r7
   13fcc:	mov	r1, r9
   13fd0:	str	ip, [sp, #16]
   13fd4:	str	lr, [sp, #8]
   13fd8:	mov	r3, fp
   13fdc:	mov	r2, sl
   13fe0:	str	lr, [sp, #32]
   13fe4:	bl	126ec <close@plt+0x161c>
   13fe8:	cmp	r9, r0
   13fec:	bhi	14058 <close@plt+0x2f88>
   13ff0:	ldr	r3, [pc, #160]	; 14098 <close@plt+0x2fc8>
   13ff4:	add	r9, r0, #1
   13ff8:	cmp	r7, r3
   13ffc:	str	r9, [r5, r6, lsl #3]
   14000:	beq	1400c <close@plt+0x2f3c>
   14004:	mov	r0, r7
   14008:	bl	10ea8 <free@plt>
   1400c:	mov	r0, r9
   14010:	bl	14c9c <close@plt+0x3bcc>
   14014:	ldr	lr, [sp, #28]
   14018:	ldr	ip, [r4, #44]	; 0x2c
   1401c:	ldr	r5, [r4, #40]	; 0x28
   14020:	mov	r3, fp
   14024:	mov	r2, sl
   14028:	mov	r1, r9
   1402c:	str	r0, [lr, #4]
   14030:	ldr	lr, [r4]
   14034:	ldr	r4, [sp, #32]
   14038:	str	ip, [sp, #16]
   1403c:	str	r4, [sp, #8]
   14040:	ldr	r4, [sp, #36]	; 0x24
   14044:	str	r5, [sp, #12]
   14048:	str	r4, [sp, #4]
   1404c:	str	lr, [sp]
   14050:	mov	r7, r0
   14054:	bl	126ec <close@plt+0x161c>
   14058:	ldr	r3, [sp, #24]
   1405c:	mov	r0, r7
   14060:	str	r3, [r8]
   14064:	add	sp, sp, #44	; 0x2c
   14068:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1406c:	mov	r0, #0
   14070:	bl	14cf8 <close@plt+0x3c28>
   14074:	ldr	r3, [pc, #32]	; 1409c <close@plt+0x2fcc>
   14078:	mov	r5, r0
   1407c:	ldm	r3, {r0, r1}
   14080:	str	r5, [r7]
   14084:	stm	r5, {r0, r1}
   14088:	b	13f74 <close@plt+0x2ea4>
   1408c:	bl	14ee4 <close@plt+0x3e14>
   14090:	bl	110c4 <abort@plt>
   14094:	strdeq	r8, [r2], -r4
   14098:	muleq	r2, r4, r1
   1409c:	strdeq	r8, [r2], -ip
   140a0:	push	{r4, r5, r6, lr}
   140a4:	mov	r5, r0
   140a8:	bl	11028 <__errno_location@plt>
   140ac:	cmp	r5, #0
   140b0:	mov	r1, #48	; 0x30
   140b4:	mov	r4, r0
   140b8:	ldr	r0, [pc, #16]	; 140d0 <close@plt+0x3000>
   140bc:	ldr	r6, [r4]
   140c0:	movne	r0, r5
   140c4:	bl	14ea4 <close@plt+0x3dd4>
   140c8:	str	r6, [r4]
   140cc:	pop	{r4, r5, r6, pc}
   140d0:	muleq	r2, r4, r2
   140d4:	ldr	r3, [pc, #12]	; 140e8 <close@plt+0x3018>
   140d8:	cmp	r0, #0
   140dc:	moveq	r0, r3
   140e0:	ldr	r0, [r0]
   140e4:	bx	lr
   140e8:	muleq	r2, r4, r2
   140ec:	ldr	r3, [pc, #12]	; 14100 <close@plt+0x3030>
   140f0:	cmp	r0, #0
   140f4:	moveq	r0, r3
   140f8:	str	r1, [r0]
   140fc:	bx	lr
   14100:	muleq	r2, r4, r2
   14104:	ldr	r3, [pc, #52]	; 14140 <close@plt+0x3070>
   14108:	cmp	r0, #0
   1410c:	moveq	r0, r3
   14110:	add	r3, r0, #8
   14114:	push	{lr}		; (str lr, [sp, #-4]!)
   14118:	lsr	lr, r1, #5
   1411c:	and	r1, r1, #31
   14120:	ldr	ip, [r3, lr, lsl #2]
   14124:	lsr	r0, ip, r1
   14128:	eor	r2, r2, r0
   1412c:	and	r2, r2, #1
   14130:	and	r0, r0, #1
   14134:	eor	r1, ip, r2, lsl r1
   14138:	str	r1, [r3, lr, lsl #2]
   1413c:	pop	{pc}		; (ldr pc, [sp], #4)
   14140:	muleq	r2, r4, r2
   14144:	ldr	r3, [pc, #16]	; 1415c <close@plt+0x308c>
   14148:	cmp	r0, #0
   1414c:	movne	r3, r0
   14150:	ldr	r0, [r3, #4]
   14154:	str	r1, [r3, #4]
   14158:	bx	lr
   1415c:	muleq	r2, r4, r2
   14160:	ldr	r3, [pc, #44]	; 14194 <close@plt+0x30c4>
   14164:	cmp	r0, #0
   14168:	moveq	r0, r3
   1416c:	mov	ip, #10
   14170:	cmp	r2, #0
   14174:	cmpne	r1, #0
   14178:	str	ip, [r0]
   1417c:	beq	1418c <close@plt+0x30bc>
   14180:	str	r1, [r0, #40]	; 0x28
   14184:	str	r2, [r0, #44]	; 0x2c
   14188:	bx	lr
   1418c:	push	{r4, lr}
   14190:	bl	110c4 <abort@plt>
   14194:	muleq	r2, r4, r2
   14198:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1419c:	sub	sp, sp, #24
   141a0:	ldr	ip, [pc, #108]	; 14214 <close@plt+0x3144>
   141a4:	ldr	r4, [sp, #56]	; 0x38
   141a8:	mov	r9, r2
   141ac:	cmp	r4, #0
   141b0:	moveq	r4, ip
   141b4:	mov	sl, r3
   141b8:	mov	r7, r0
   141bc:	mov	r8, r1
   141c0:	bl	11028 <__errno_location@plt>
   141c4:	ldr	r3, [r4, #44]	; 0x2c
   141c8:	mov	r1, r8
   141cc:	ldr	r6, [r0]
   141d0:	str	r3, [sp, #16]
   141d4:	ldr	r2, [r4, #40]	; 0x28
   141d8:	add	r3, r4, #8
   141dc:	str	r3, [sp, #8]
   141e0:	str	r2, [sp, #12]
   141e4:	ldr	r2, [r4, #4]
   141e8:	mov	r5, r0
   141ec:	str	r2, [sp, #4]
   141f0:	ldr	ip, [r4]
   141f4:	mov	r3, sl
   141f8:	mov	r2, r9
   141fc:	mov	r0, r7
   14200:	str	ip, [sp]
   14204:	bl	126ec <close@plt+0x161c>
   14208:	str	r6, [r5]
   1420c:	add	sp, sp, #24
   14210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14214:	muleq	r2, r4, r2
   14218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1421c:	cmp	r3, #0
   14220:	sub	sp, sp, #44	; 0x2c
   14224:	ldr	r4, [pc, #192]	; 142ec <close@plt+0x321c>
   14228:	mov	r6, r2
   1422c:	movne	r4, r3
   14230:	mov	r9, r1
   14234:	mov	r8, r0
   14238:	bl	11028 <__errno_location@plt>
   1423c:	ldr	r3, [r4, #44]	; 0x2c
   14240:	ldr	r5, [r4, #4]
   14244:	add	sl, r4, #8
   14248:	cmp	r6, #0
   1424c:	orreq	r5, r5, #1
   14250:	mov	r1, #0
   14254:	ldr	r2, [r0]
   14258:	str	r3, [sp, #16]
   1425c:	ldr	r3, [r4, #40]	; 0x28
   14260:	stmib	sp, {r5, sl}
   14264:	str	r3, [sp, #12]
   14268:	ldr	r3, [r4]
   1426c:	mov	r7, r0
   14270:	str	r2, [sp, #28]
   14274:	str	r3, [sp]
   14278:	mov	r2, r8
   1427c:	mov	r3, r9
   14280:	mov	r0, r1
   14284:	bl	126ec <close@plt+0x161c>
   14288:	add	r1, r0, #1
   1428c:	mov	fp, r0
   14290:	mov	r0, r1
   14294:	str	r1, [sp, #36]	; 0x24
   14298:	bl	14c9c <close@plt+0x3bcc>
   1429c:	ldr	r3, [r4, #44]	; 0x2c
   142a0:	mov	r2, r8
   142a4:	str	r3, [sp, #16]
   142a8:	ldr	r3, [r4, #40]	; 0x28
   142ac:	str	r5, [sp, #4]
   142b0:	str	r3, [sp, #12]
   142b4:	str	sl, [sp, #8]
   142b8:	ldr	ip, [r4]
   142bc:	ldr	r1, [sp, #36]	; 0x24
   142c0:	mov	r3, r9
   142c4:	str	ip, [sp]
   142c8:	str	r0, [sp, #32]
   142cc:	bl	126ec <close@plt+0x161c>
   142d0:	ldr	r2, [sp, #28]
   142d4:	cmp	r6, #0
   142d8:	str	r2, [r7]
   142dc:	ldr	r0, [sp, #32]
   142e0:	strne	fp, [r6]
   142e4:	add	sp, sp, #44	; 0x2c
   142e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142ec:	muleq	r2, r4, r2
   142f0:	mov	r3, r2
   142f4:	mov	r2, #0
   142f8:	b	14218 <close@plt+0x3148>
   142fc:	push	{r4, r5, r6, r7, r8, lr}
   14300:	ldr	r6, [pc, #112]	; 14378 <close@plt+0x32a8>
   14304:	ldr	r3, [r6, #4]
   14308:	ldr	r7, [r6]
   1430c:	cmp	r3, #1
   14310:	ble	14334 <close@plt+0x3264>
   14314:	sub	r5, r7, #8
   14318:	add	r5, r5, r3, lsl #3
   1431c:	mov	r4, r7
   14320:	ldr	r0, [r4, #12]
   14324:	add	r4, r4, #8
   14328:	bl	10ea8 <free@plt>
   1432c:	cmp	r4, r5
   14330:	bne	14320 <close@plt+0x3250>
   14334:	ldr	r0, [r7, #4]
   14338:	ldr	r4, [pc, #60]	; 1437c <close@plt+0x32ac>
   1433c:	cmp	r0, r4
   14340:	beq	14354 <close@plt+0x3284>
   14344:	bl	10ea8 <free@plt>
   14348:	mov	r3, #256	; 0x100
   1434c:	str	r4, [r6, #12]
   14350:	str	r3, [r6, #8]
   14354:	ldr	r4, [pc, #36]	; 14380 <close@plt+0x32b0>
   14358:	cmp	r7, r4
   1435c:	beq	1436c <close@plt+0x329c>
   14360:	mov	r0, r7
   14364:	bl	10ea8 <free@plt>
   14368:	str	r4, [r6]
   1436c:	mov	r3, #1
   14370:	str	r3, [r6, #4]
   14374:	pop	{r4, r5, r6, r7, r8, pc}
   14378:	strdeq	r8, [r2], -r4
   1437c:	muleq	r2, r4, r1
   14380:	strdeq	r8, [r2], -ip
   14384:	ldr	r3, [pc, #4]	; 14390 <close@plt+0x32c0>
   14388:	mvn	r2, #0
   1438c:	b	13f04 <close@plt+0x2e34>
   14390:	muleq	r2, r4, r2
   14394:	ldr	r3, [pc]	; 1439c <close@plt+0x32cc>
   14398:	b	13f04 <close@plt+0x2e34>
   1439c:	muleq	r2, r4, r2
   143a0:	mov	r1, r0
   143a4:	ldr	r3, [pc, #8]	; 143b4 <close@plt+0x32e4>
   143a8:	mvn	r2, #0
   143ac:	mov	r0, #0
   143b0:	b	13f04 <close@plt+0x2e34>
   143b4:	muleq	r2, r4, r2
   143b8:	mov	r2, r1
   143bc:	ldr	r3, [pc, #8]	; 143cc <close@plt+0x32fc>
   143c0:	mov	r1, r0
   143c4:	mov	r0, #0
   143c8:	b	13f04 <close@plt+0x2e34>
   143cc:	muleq	r2, r4, r2
   143d0:	push	{r4, r5, r6, lr}
   143d4:	sub	sp, sp, #56	; 0x38
   143d8:	ldr	r4, [pc, #68]	; 14424 <close@plt+0x3354>
   143dc:	mov	r6, r2
   143e0:	mov	r5, r0
   143e4:	ldr	r3, [r4]
   143e8:	add	r0, sp, #4
   143ec:	str	r3, [sp, #52]	; 0x34
   143f0:	bl	1257c <close@plt+0x14ac>
   143f4:	add	r3, sp, #4
   143f8:	mvn	r2, #0
   143fc:	mov	r1, r6
   14400:	mov	r0, r5
   14404:	bl	13f04 <close@plt+0x2e34>
   14408:	ldr	r2, [sp, #52]	; 0x34
   1440c:	ldr	r3, [r4]
   14410:	cmp	r2, r3
   14414:	bne	14420 <close@plt+0x3350>
   14418:	add	sp, sp, #56	; 0x38
   1441c:	pop	{r4, r5, r6, pc}
   14420:	bl	10f08 <__stack_chk_fail@plt>
   14424:	andeq	r7, r2, r8, lsl #30
   14428:	push	{r4, r5, r6, r7, lr}
   1442c:	sub	sp, sp, #60	; 0x3c
   14430:	ldr	r4, [pc, #72]	; 14480 <close@plt+0x33b0>
   14434:	mov	r6, r2
   14438:	mov	r7, r3
   1443c:	ldr	ip, [r4]
   14440:	mov	r5, r0
   14444:	add	r0, sp, #4
   14448:	str	ip, [sp, #52]	; 0x34
   1444c:	bl	1257c <close@plt+0x14ac>
   14450:	add	r3, sp, #4
   14454:	mov	r2, r7
   14458:	mov	r1, r6
   1445c:	mov	r0, r5
   14460:	bl	13f04 <close@plt+0x2e34>
   14464:	ldr	r2, [sp, #52]	; 0x34
   14468:	ldr	r3, [r4]
   1446c:	cmp	r2, r3
   14470:	bne	1447c <close@plt+0x33ac>
   14474:	add	sp, sp, #60	; 0x3c
   14478:	pop	{r4, r5, r6, r7, pc}
   1447c:	bl	10f08 <__stack_chk_fail@plt>
   14480:	andeq	r7, r2, r8, lsl #30
   14484:	mov	r2, r1
   14488:	mov	r1, r0
   1448c:	mov	r0, #0
   14490:	b	143d0 <close@plt+0x3300>
   14494:	mov	r3, r2
   14498:	mov	r2, r1
   1449c:	mov	r1, r0
   144a0:	mov	r0, #0
   144a4:	b	14428 <close@plt+0x3358>
   144a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   144ac:	mov	r4, r2
   144b0:	ldr	lr, [pc, #128]	; 14538 <close@plt+0x3468>
   144b4:	mov	r8, r0
   144b8:	mov	r9, r1
   144bc:	ldm	lr!, {r0, r1, r2, r3}
   144c0:	sub	sp, sp, #60	; 0x3c
   144c4:	add	ip, sp, #4
   144c8:	lsr	r6, r4, #5
   144cc:	stmia	ip!, {r0, r1, r2, r3}
   144d0:	add	r7, sp, #12
   144d4:	ldm	lr!, {r0, r1, r2, r3}
   144d8:	and	r4, r4, #31
   144dc:	ldr	r5, [pc, #88]	; 1453c <close@plt+0x346c>
   144e0:	stmia	ip!, {r0, r1, r2, r3}
   144e4:	ldm	lr, {r0, r1, r2, r3}
   144e8:	stm	ip, {r0, r1, r2, r3}
   144ec:	mov	r2, r9
   144f0:	ldr	r3, [r7, r6, lsl #2]
   144f4:	ldr	ip, [r5]
   144f8:	mov	r1, r8
   144fc:	mvn	r0, r3, lsr r4
   14500:	and	r0, r0, #1
   14504:	str	ip, [sp, #52]	; 0x34
   14508:	eor	r4, r3, r0, lsl r4
   1450c:	add	r3, sp, #4
   14510:	mov	r0, #0
   14514:	str	r4, [r7, r6, lsl #2]
   14518:	bl	13f04 <close@plt+0x2e34>
   1451c:	ldr	r2, [sp, #52]	; 0x34
   14520:	ldr	r3, [r5]
   14524:	cmp	r2, r3
   14528:	bne	14534 <close@plt+0x3464>
   1452c:	add	sp, sp, #60	; 0x3c
   14530:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14534:	bl	10f08 <__stack_chk_fail@plt>
   14538:	muleq	r2, r4, r2
   1453c:	andeq	r7, r2, r8, lsl #30
   14540:	mov	r2, r1
   14544:	mvn	r1, #0
   14548:	b	144a8 <close@plt+0x33d8>
   1454c:	mov	r2, #58	; 0x3a
   14550:	mvn	r1, #0
   14554:	b	144a8 <close@plt+0x33d8>
   14558:	mov	r2, #58	; 0x3a
   1455c:	b	144a8 <close@plt+0x33d8>
   14560:	push	{r4, r5, r6, r7, r8, lr}
   14564:	sub	sp, sp, #104	; 0x68
   14568:	ldr	r5, [pc, #120]	; 145e8 <close@plt+0x3518>
   1456c:	mov	r6, r0
   14570:	mov	r0, sp
   14574:	ldr	r3, [r5]
   14578:	mov	r7, r2
   1457c:	str	r3, [sp, #100]	; 0x64
   14580:	bl	1257c <close@plt+0x14ac>
   14584:	mov	ip, sp
   14588:	add	lr, sp, #52	; 0x34
   1458c:	ldm	ip!, {r0, r1, r2, r3}
   14590:	stmia	lr!, {r0, r1, r2, r3}
   14594:	ldm	ip!, {r0, r1, r2, r3}
   14598:	ldr	r8, [sp, #64]	; 0x40
   1459c:	stmia	lr!, {r0, r1, r2, r3}
   145a0:	mvn	r4, r8
   145a4:	ldm	ip, {r0, r1, r2, r3}
   145a8:	and	ip, r4, #67108864	; 0x4000000
   145ac:	eor	ip, ip, r8
   145b0:	str	ip, [sp, #64]	; 0x40
   145b4:	stm	lr, {r0, r1, r2, r3}
   145b8:	add	r3, sp, #52	; 0x34
   145bc:	mvn	r2, #0
   145c0:	mov	r1, r7
   145c4:	mov	r0, r6
   145c8:	bl	13f04 <close@plt+0x2e34>
   145cc:	ldr	r2, [sp, #100]	; 0x64
   145d0:	ldr	r3, [r5]
   145d4:	cmp	r2, r3
   145d8:	bne	145e4 <close@plt+0x3514>
   145dc:	add	sp, sp, #104	; 0x68
   145e0:	pop	{r4, r5, r6, r7, r8, pc}
   145e4:	bl	10f08 <__stack_chk_fail@plt>
   145e8:	andeq	r7, r2, r8, lsl #30
   145ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   145f0:	mov	r6, r1
   145f4:	ldr	lr, [pc, #132]	; 14680 <close@plt+0x35b0>
   145f8:	mov	r5, r2
   145fc:	mov	r8, r0
   14600:	mov	r9, r3
   14604:	ldm	lr!, {r0, r1, r2, r3}
   14608:	sub	sp, sp, #60	; 0x3c
   1460c:	add	ip, sp, #4
   14610:	ldr	r4, [pc, #108]	; 14684 <close@plt+0x35b4>
   14614:	stmia	ip!, {r0, r1, r2, r3}
   14618:	mov	r7, #10
   1461c:	ldm	lr!, {r0, r1, r2, r3}
   14620:	cmp	r5, #0
   14624:	cmpne	r6, #0
   14628:	str	r7, [sp, #4]
   1462c:	stmia	ip!, {r0, r1, r2, r3}
   14630:	ldm	lr, {r0, r1, r2, r3}
   14634:	ldr	lr, [r4]
   14638:	stm	ip, {r0, r1, r2, r3}
   1463c:	str	lr, [sp, #52]	; 0x34
   14640:	beq	1467c <close@plt+0x35ac>
   14644:	add	r3, sp, #4
   14648:	ldr	r2, [sp, #88]	; 0x58
   1464c:	mov	r1, r9
   14650:	mov	r0, r8
   14654:	str	r6, [sp, #44]	; 0x2c
   14658:	str	r5, [sp, #48]	; 0x30
   1465c:	bl	13f04 <close@plt+0x2e34>
   14660:	ldr	r2, [sp, #52]	; 0x34
   14664:	ldr	r3, [r4]
   14668:	cmp	r2, r3
   1466c:	bne	14678 <close@plt+0x35a8>
   14670:	add	sp, sp, #60	; 0x3c
   14674:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14678:	bl	10f08 <__stack_chk_fail@plt>
   1467c:	bl	110c4 <abort@plt>
   14680:	muleq	r2, r4, r2
   14684:	andeq	r7, r2, r8, lsl #30
   14688:	push	{lr}		; (str lr, [sp, #-4]!)
   1468c:	sub	sp, sp, #12
   14690:	mvn	ip, #0
   14694:	str	ip, [sp]
   14698:	bl	145ec <close@plt+0x351c>
   1469c:	add	sp, sp, #12
   146a0:	pop	{pc}		; (ldr pc, [sp], #4)
   146a4:	push	{lr}		; (str lr, [sp, #-4]!)
   146a8:	sub	sp, sp, #12
   146ac:	mvn	ip, #0
   146b0:	mov	r3, r2
   146b4:	str	ip, [sp]
   146b8:	mov	r2, r1
   146bc:	mov	r1, r0
   146c0:	mov	r0, #0
   146c4:	bl	145ec <close@plt+0x351c>
   146c8:	add	sp, sp, #12
   146cc:	pop	{pc}		; (ldr pc, [sp], #4)
   146d0:	push	{lr}		; (str lr, [sp, #-4]!)
   146d4:	sub	sp, sp, #12
   146d8:	str	r3, [sp]
   146dc:	mov	r3, r2
   146e0:	mov	r2, r1
   146e4:	mov	r1, r0
   146e8:	mov	r0, #0
   146ec:	bl	145ec <close@plt+0x351c>
   146f0:	add	sp, sp, #12
   146f4:	pop	{pc}		; (ldr pc, [sp], #4)
   146f8:	ldr	r3, [pc]	; 14700 <close@plt+0x3630>
   146fc:	b	13f04 <close@plt+0x2e34>
   14700:	andeq	r8, r2, r4, lsl #2
   14704:	mov	r2, r1
   14708:	ldr	r3, [pc, #8]	; 14718 <close@plt+0x3648>
   1470c:	mov	r1, r0
   14710:	mov	r0, #0
   14714:	b	13f04 <close@plt+0x2e34>
   14718:	andeq	r8, r2, r4, lsl #2
   1471c:	ldr	r3, [pc, #4]	; 14728 <close@plt+0x3658>
   14720:	mvn	r2, #0
   14724:	b	13f04 <close@plt+0x2e34>
   14728:	andeq	r8, r2, r4, lsl #2
   1472c:	mov	r1, r0
   14730:	ldr	r3, [pc, #8]	; 14740 <close@plt+0x3670>
   14734:	mvn	r2, #0
   14738:	mov	r0, #0
   1473c:	b	13f04 <close@plt+0x2e34>
   14740:	andeq	r8, r2, r4, lsl #2
   14744:	push	{r4, r5, r6, lr}
   14748:	sub	sp, sp, #32
   1474c:	cmp	r1, #0
   14750:	mov	r5, r0
   14754:	ldr	r4, [sp, #48]	; 0x30
   14758:	ldr	r6, [sp, #52]	; 0x34
   1475c:	beq	147ec <close@plt+0x371c>
   14760:	strd	r2, [sp]
   14764:	mov	r3, r1
   14768:	ldr	r2, [pc, #828]	; 14aac <close@plt+0x39dc>
   1476c:	mov	r1, #1
   14770:	bl	11064 <__fprintf_chk@plt>
   14774:	mov	r2, #5
   14778:	ldr	r1, [pc, #816]	; 14ab0 <close@plt+0x39e0>
   1477c:	mov	r0, #0
   14780:	bl	10efc <dcgettext@plt>
   14784:	ldr	r3, [pc, #808]	; 14ab4 <close@plt+0x39e4>
   14788:	ldr	r2, [pc, #808]	; 14ab8 <close@plt+0x39e8>
   1478c:	str	r3, [sp]
   14790:	mov	r1, #1
   14794:	mov	r3, r0
   14798:	mov	r0, r5
   1479c:	bl	11064 <__fprintf_chk@plt>
   147a0:	ldr	r1, [pc, #788]	; 14abc <close@plt+0x39ec>
   147a4:	mov	r2, #5
   147a8:	mov	r0, #0
   147ac:	bl	10efc <dcgettext@plt>
   147b0:	mov	r1, r5
   147b4:	bl	10e6c <fputs_unlocked@plt>
   147b8:	cmp	r6, #9
   147bc:	ldrls	pc, [pc, r6, lsl #2]
   147c0:	b	14a9c <close@plt+0x39cc>
   147c4:	andeq	r4, r1, r8, lsr #21
   147c8:	andeq	r4, r1, r0, ror r8
   147cc:	muleq	r1, ip, r8
   147d0:	ldrdeq	r4, [r1], -r0
   147d4:	andeq	r4, r1, ip, lsl #18
   147d8:	andeq	r4, r1, ip, asr #18
   147dc:	muleq	r1, r4, r9
   147e0:	andeq	r4, r1, r4, ror #19
   147e4:	andeq	r4, r1, ip, lsr sl
   147e8:	andeq	r4, r1, r4, lsl #16
   147ec:	str	r3, [sp]
   147f0:	mov	r1, #1
   147f4:	mov	r3, r2
   147f8:	ldr	r2, [pc, #704]	; 14ac0 <close@plt+0x39f0>
   147fc:	bl	11064 <__fprintf_chk@plt>
   14800:	b	14774 <close@plt+0x36a4>
   14804:	ldr	r1, [pc, #696]	; 14ac4 <close@plt+0x39f4>
   14808:	mov	r2, #5
   1480c:	mov	r0, #0
   14810:	bl	10efc <dcgettext@plt>
   14814:	ldr	r2, [r4, #32]
   14818:	ldr	r3, [r4, #28]
   1481c:	ldr	r1, [r4, #24]
   14820:	str	r2, [sp, #28]
   14824:	ldr	r2, [r4, #20]
   14828:	str	r3, [sp, #24]
   1482c:	ldr	r3, [r4, #16]
   14830:	str	r1, [sp, #20]
   14834:	ldr	r1, [r4, #12]
   14838:	str	r2, [sp, #16]
   1483c:	ldr	r2, [r4, #8]
   14840:	str	r3, [sp, #12]
   14844:	ldr	r3, [r4, #4]
   14848:	str	r1, [sp, #8]
   1484c:	str	r2, [sp, #4]
   14850:	str	r3, [sp]
   14854:	mov	r1, #1
   14858:	ldr	r3, [r4]
   1485c:	mov	r2, r0
   14860:	mov	r0, r5
   14864:	bl	11064 <__fprintf_chk@plt>
   14868:	add	sp, sp, #32
   1486c:	pop	{r4, r5, r6, pc}
   14870:	mov	r2, #5
   14874:	ldr	r1, [pc, #588]	; 14ac8 <close@plt+0x39f8>
   14878:	mov	r0, #0
   1487c:	bl	10efc <dcgettext@plt>
   14880:	ldr	r3, [r4]
   14884:	mov	r1, #1
   14888:	mov	r2, r0
   1488c:	mov	r0, r5
   14890:	add	sp, sp, #32
   14894:	pop	{r4, r5, r6, lr}
   14898:	b	11064 <__fprintf_chk@plt>
   1489c:	mov	r2, #5
   148a0:	ldr	r1, [pc, #548]	; 14acc <close@plt+0x39fc>
   148a4:	mov	r0, #0
   148a8:	bl	10efc <dcgettext@plt>
   148ac:	ldr	r2, [r4, #4]
   148b0:	ldr	r3, [r4]
   148b4:	mov	r1, #1
   148b8:	str	r2, [sp, #48]	; 0x30
   148bc:	mov	r2, r0
   148c0:	mov	r0, r5
   148c4:	add	sp, sp, #32
   148c8:	pop	{r4, r5, r6, lr}
   148cc:	b	11064 <__fprintf_chk@plt>
   148d0:	mov	r2, #5
   148d4:	ldr	r1, [pc, #500]	; 14ad0 <close@plt+0x3a00>
   148d8:	mov	r0, #0
   148dc:	bl	10efc <dcgettext@plt>
   148e0:	ldr	r2, [r4, #8]
   148e4:	ldr	r3, [r4, #4]
   148e8:	mov	r1, #1
   148ec:	str	r2, [sp, #52]	; 0x34
   148f0:	str	r3, [sp, #48]	; 0x30
   148f4:	ldr	r3, [r4]
   148f8:	mov	r2, r0
   148fc:	mov	r0, r5
   14900:	add	sp, sp, #32
   14904:	pop	{r4, r5, r6, lr}
   14908:	b	11064 <__fprintf_chk@plt>
   1490c:	mov	r2, #5
   14910:	ldr	r1, [pc, #444]	; 14ad4 <close@plt+0x3a04>
   14914:	mov	r0, #0
   14918:	bl	10efc <dcgettext@plt>
   1491c:	ldr	r1, [r4, #12]
   14920:	ldr	r2, [r4, #8]
   14924:	ldr	r3, [r4, #4]
   14928:	str	r1, [sp, #8]
   1492c:	str	r2, [sp, #4]
   14930:	str	r3, [sp]
   14934:	mov	r1, #1
   14938:	ldr	r3, [r4]
   1493c:	mov	r2, r0
   14940:	mov	r0, r5
   14944:	bl	11064 <__fprintf_chk@plt>
   14948:	b	14868 <close@plt+0x3798>
   1494c:	mov	r2, #5
   14950:	ldr	r1, [pc, #384]	; 14ad8 <close@plt+0x3a08>
   14954:	mov	r0, #0
   14958:	bl	10efc <dcgettext@plt>
   1495c:	ldr	r3, [r4, #16]
   14960:	ldr	r1, [r4, #12]
   14964:	ldr	r2, [r4, #8]
   14968:	str	r3, [sp, #12]
   1496c:	ldr	r3, [r4, #4]
   14970:	str	r1, [sp, #8]
   14974:	str	r2, [sp, #4]
   14978:	str	r3, [sp]
   1497c:	mov	r1, #1
   14980:	ldr	r3, [r4]
   14984:	mov	r2, r0
   14988:	mov	r0, r5
   1498c:	bl	11064 <__fprintf_chk@plt>
   14990:	b	14868 <close@plt+0x3798>
   14994:	mov	r2, #5
   14998:	ldr	r1, [pc, #316]	; 14adc <close@plt+0x3a0c>
   1499c:	mov	r0, #0
   149a0:	bl	10efc <dcgettext@plt>
   149a4:	ldr	r2, [r4, #20]
   149a8:	ldr	r3, [r4, #16]
   149ac:	ldr	r1, [r4, #12]
   149b0:	str	r2, [sp, #16]
   149b4:	ldr	r2, [r4, #8]
   149b8:	str	r3, [sp, #12]
   149bc:	ldr	r3, [r4, #4]
   149c0:	str	r1, [sp, #8]
   149c4:	str	r2, [sp, #4]
   149c8:	str	r3, [sp]
   149cc:	mov	r1, #1
   149d0:	ldr	r3, [r4]
   149d4:	mov	r2, r0
   149d8:	mov	r0, r5
   149dc:	bl	11064 <__fprintf_chk@plt>
   149e0:	b	14868 <close@plt+0x3798>
   149e4:	mov	r2, #5
   149e8:	ldr	r1, [pc, #240]	; 14ae0 <close@plt+0x3a10>
   149ec:	mov	r0, #0
   149f0:	bl	10efc <dcgettext@plt>
   149f4:	ldr	r1, [r4, #24]
   149f8:	ldr	r2, [r4, #20]
   149fc:	ldr	r3, [r4, #16]
   14a00:	str	r1, [sp, #20]
   14a04:	ldr	r1, [r4, #12]
   14a08:	str	r2, [sp, #16]
   14a0c:	ldr	r2, [r4, #8]
   14a10:	str	r3, [sp, #12]
   14a14:	ldr	r3, [r4, #4]
   14a18:	str	r1, [sp, #8]
   14a1c:	str	r2, [sp, #4]
   14a20:	str	r3, [sp]
   14a24:	mov	r1, #1
   14a28:	ldr	r3, [r4]
   14a2c:	mov	r2, r0
   14a30:	mov	r0, r5
   14a34:	bl	11064 <__fprintf_chk@plt>
   14a38:	b	14868 <close@plt+0x3798>
   14a3c:	mov	r2, #5
   14a40:	ldr	r1, [pc, #156]	; 14ae4 <close@plt+0x3a14>
   14a44:	mov	r0, #0
   14a48:	bl	10efc <dcgettext@plt>
   14a4c:	ldr	r3, [r4, #28]
   14a50:	ldr	r1, [r4, #24]
   14a54:	ldr	r2, [r4, #20]
   14a58:	str	r3, [sp, #24]
   14a5c:	ldr	r3, [r4, #16]
   14a60:	str	r1, [sp, #20]
   14a64:	ldr	r1, [r4, #12]
   14a68:	str	r2, [sp, #16]
   14a6c:	ldr	r2, [r4, #8]
   14a70:	str	r3, [sp, #12]
   14a74:	ldr	r3, [r4, #4]
   14a78:	str	r1, [sp, #8]
   14a7c:	str	r2, [sp, #4]
   14a80:	str	r3, [sp]
   14a84:	mov	r1, #1
   14a88:	ldr	r3, [r4]
   14a8c:	mov	r2, r0
   14a90:	mov	r0, r5
   14a94:	bl	11064 <__fprintf_chk@plt>
   14a98:	b	14868 <close@plt+0x3798>
   14a9c:	mov	r2, #5
   14aa0:	ldr	r1, [pc, #64]	; 14ae8 <close@plt+0x3a18>
   14aa4:	b	1480c <close@plt+0x373c>
   14aa8:	bl	110c4 <abort@plt>
   14aac:	andeq	r7, r1, ip, lsl #7
   14ab0:	andeq	r7, r1, r0, lsr #7
   14ab4:	andeq	r0, r0, r2, ror #15
   14ab8:	andeq	r7, r1, r4, ror r6
   14abc:	andeq	r7, r1, r4, lsr #7
   14ac0:	muleq	r1, r8, r3
   14ac4:	andeq	r7, r1, ip, ror r5
   14ac8:	andeq	r7, r1, r0, ror r4
   14acc:	andeq	r7, r1, r0, lsl #9
   14ad0:	muleq	r1, r8, r4
   14ad4:			; <UNDEFINED> instruction: 0x000174b4
   14ad8:	ldrdeq	r7, [r1], -r4
   14adc:	strdeq	r7, [r1], -r8
   14ae0:	andeq	r7, r1, r0, lsr #10
   14ae4:	andeq	r7, r1, ip, asr #10
   14ae8:			; <UNDEFINED> instruction: 0x000175b0
   14aec:	push	{r4, r5, lr}
   14af0:	sub	sp, sp, #12
   14af4:	ldr	r5, [sp, #24]
   14af8:	ldr	ip, [r5]
   14afc:	cmp	ip, #0
   14b00:	beq	14b1c <close@plt+0x3a4c>
   14b04:	mov	lr, r5
   14b08:	mov	ip, #0
   14b0c:	ldr	r4, [lr, #4]!
   14b10:	add	ip, ip, #1
   14b14:	cmp	r4, #0
   14b18:	bne	14b0c <close@plt+0x3a3c>
   14b1c:	stm	sp, {r5, ip}
   14b20:	bl	14744 <close@plt+0x3674>
   14b24:	add	sp, sp, #12
   14b28:	pop	{r4, r5, pc}
   14b2c:	push	{r4, r5, r6, lr}
   14b30:	sub	sp, sp, #56	; 0x38
   14b34:	ldr	r6, [pc, #88]	; 14b94 <close@plt+0x3ac4>
   14b38:	ldr	r5, [sp, #72]	; 0x48
   14b3c:	add	r4, sp, #8
   14b40:	ldr	ip, [r6]
   14b44:	str	ip, [sp, #52]	; 0x34
   14b48:	mov	ip, #0
   14b4c:	ldr	lr, [r5], #4
   14b50:	cmp	lr, #0
   14b54:	str	lr, [r4, #4]!
   14b58:	beq	14b68 <close@plt+0x3a98>
   14b5c:	add	ip, ip, #1
   14b60:	cmp	ip, #10
   14b64:	bne	14b4c <close@plt+0x3a7c>
   14b68:	add	lr, sp, #12
   14b6c:	str	ip, [sp, #4]
   14b70:	str	lr, [sp]
   14b74:	bl	14744 <close@plt+0x3674>
   14b78:	ldr	r2, [sp, #52]	; 0x34
   14b7c:	ldr	r3, [r6]
   14b80:	cmp	r2, r3
   14b84:	bne	14b90 <close@plt+0x3ac0>
   14b88:	add	sp, sp, #56	; 0x38
   14b8c:	pop	{r4, r5, r6, pc}
   14b90:	bl	10f08 <__stack_chk_fail@plt>
   14b94:	andeq	r7, r2, r8, lsl #30
   14b98:	push	{r3}		; (str r3, [sp, #-4]!)
   14b9c:	mov	ip, #0
   14ba0:	push	{r4, r5, r6, lr}
   14ba4:	sub	sp, sp, #60	; 0x3c
   14ba8:	ldr	r6, [pc, #100]	; 14c14 <close@plt+0x3b44>
   14bac:	add	r5, sp, #8
   14bb0:	add	r4, sp, #80	; 0x50
   14bb4:	ldr	r3, [r6]
   14bb8:	str	r4, [sp, #8]
   14bbc:	str	r3, [sp, #52]	; 0x34
   14bc0:	ldr	r3, [sp, #76]	; 0x4c
   14bc4:	ldr	lr, [r4], #4
   14bc8:	cmp	lr, #0
   14bcc:	str	lr, [r5, #4]!
   14bd0:	beq	14be0 <close@plt+0x3b10>
   14bd4:	add	ip, ip, #1
   14bd8:	cmp	ip, #10
   14bdc:	bne	14bc4 <close@plt+0x3af4>
   14be0:	add	lr, sp, #12
   14be4:	str	ip, [sp, #4]
   14be8:	str	lr, [sp]
   14bec:	bl	14744 <close@plt+0x3674>
   14bf0:	ldr	r2, [sp, #52]	; 0x34
   14bf4:	ldr	r3, [r6]
   14bf8:	cmp	r2, r3
   14bfc:	bne	14c10 <close@plt+0x3b40>
   14c00:	add	sp, sp, #60	; 0x3c
   14c04:	pop	{r4, r5, r6, lr}
   14c08:	add	sp, sp, #4
   14c0c:	bx	lr
   14c10:	bl	10f08 <__stack_chk_fail@plt>
   14c14:	andeq	r7, r2, r8, lsl #30
   14c18:	push	{r4, lr}
   14c1c:	mov	r2, #5
   14c20:	ldr	r1, [pc, #88]	; 14c80 <close@plt+0x3bb0>
   14c24:	mov	r0, #0
   14c28:	bl	10efc <dcgettext@plt>
   14c2c:	ldr	r2, [pc, #80]	; 14c84 <close@plt+0x3bb4>
   14c30:	mov	r1, r0
   14c34:	mov	r0, #1
   14c38:	bl	1104c <__printf_chk@plt>
   14c3c:	mov	r2, #5
   14c40:	ldr	r1, [pc, #64]	; 14c88 <close@plt+0x3bb8>
   14c44:	mov	r0, #0
   14c48:	bl	10efc <dcgettext@plt>
   14c4c:	ldr	r3, [pc, #56]	; 14c8c <close@plt+0x3bbc>
   14c50:	ldr	r2, [pc, #56]	; 14c90 <close@plt+0x3bc0>
   14c54:	mov	r1, r0
   14c58:	mov	r0, #1
   14c5c:	bl	1104c <__printf_chk@plt>
   14c60:	ldr	r1, [pc, #44]	; 14c94 <close@plt+0x3bc4>
   14c64:	mov	r2, #5
   14c68:	mov	r0, #0
   14c6c:	bl	10efc <dcgettext@plt>
   14c70:	ldr	r3, [pc, #32]	; 14c98 <close@plt+0x3bc8>
   14c74:	pop	{r4, lr}
   14c78:	ldr	r1, [r3]
   14c7c:	b	10e6c <fputs_unlocked@plt>
   14c80:	andeq	r7, r1, ip, ror #11
   14c84:	andeq	r7, r1, r4, lsl #12
   14c88:	andeq	r7, r1, ip, lsl r6
   14c8c:	andeq	r6, r1, r0, asr #27
   14c90:	andeq	r6, r1, r8, ror #27
   14c94:	andeq	r7, r1, r0, lsr r6
   14c98:	andeq	r8, r2, r4, asr r1
   14c9c:	push	{r4, lr}
   14ca0:	mov	r4, r0
   14ca4:	bl	10fbc <malloc@plt>
   14ca8:	adds	r4, r4, #0
   14cac:	movne	r4, #1
   14cb0:	cmp	r0, #0
   14cb4:	movne	r4, #0
   14cb8:	cmp	r4, #0
   14cbc:	popeq	{r4, pc}
   14cc0:	bl	14ee4 <close@plt+0x3e14>
   14cc4:	push	{r4, r5, r6, lr}
   14cc8:	umull	r4, r5, r0, r1
   14ccc:	adds	r3, r5, #0
   14cd0:	movne	r3, #1
   14cd4:	cmp	r4, #0
   14cd8:	blt	14cf0 <close@plt+0x3c20>
   14cdc:	cmp	r3, #0
   14ce0:	bne	14cf0 <close@plt+0x3c20>
   14ce4:	mul	r0, r1, r0
   14ce8:	pop	{r4, r5, r6, lr}
   14cec:	b	14c9c <close@plt+0x3bcc>
   14cf0:	bl	14ee4 <close@plt+0x3e14>
   14cf4:	b	14c9c <close@plt+0x3bcc>
   14cf8:	adds	r3, r0, #0
   14cfc:	movne	r3, #1
   14d00:	cmp	r1, #0
   14d04:	movne	r3, #0
   14d08:	cmp	r3, #0
   14d0c:	push	{r4, lr}
   14d10:	bne	14d38 <close@plt+0x3c68>
   14d14:	mov	r4, r1
   14d18:	bl	10f20 <realloc@plt>
   14d1c:	adds	r4, r4, #0
   14d20:	movne	r4, #1
   14d24:	cmp	r0, #0
   14d28:	movne	r4, #0
   14d2c:	cmp	r4, #0
   14d30:	popeq	{r4, pc}
   14d34:	bl	14ee4 <close@plt+0x3e14>
   14d38:	bl	10ea8 <free@plt>
   14d3c:	mov	r0, #0
   14d40:	pop	{r4, pc}
   14d44:	push	{r4, r5, r6, lr}
   14d48:	umull	r4, r5, r1, r2
   14d4c:	adds	r3, r5, #0
   14d50:	movne	r3, #1
   14d54:	cmp	r4, #0
   14d58:	blt	14d70 <close@plt+0x3ca0>
   14d5c:	cmp	r3, #0
   14d60:	bne	14d70 <close@plt+0x3ca0>
   14d64:	mul	r1, r2, r1
   14d68:	pop	{r4, r5, r6, lr}
   14d6c:	b	14cf8 <close@plt+0x3c28>
   14d70:	bl	14ee4 <close@plt+0x3e14>
   14d74:	push	{r4, r5, r6, r7, r8, lr}
   14d78:	subs	r7, r0, #0
   14d7c:	mov	r6, r1
   14d80:	mov	r5, r2
   14d84:	ldr	r4, [r1]
   14d88:	beq	14dbc <close@plt+0x3cec>
   14d8c:	mov	r1, r2
   14d90:	ldr	r0, [pc, #104]	; 14e00 <close@plt+0x3d30>
   14d94:	bl	1559c <_obstack_memory_used@@Base+0x128>
   14d98:	cmp	r0, r4
   14d9c:	bls	14de0 <close@plt+0x3d10>
   14da0:	add	r3, r4, #1
   14da4:	add	r4, r3, r4, lsr #1
   14da8:	str	r4, [r6]
   14dac:	mul	r1, r5, r4
   14db0:	mov	r0, r7
   14db4:	pop	{r4, r5, r6, r7, r8, lr}
   14db8:	b	14cf8 <close@plt+0x3c28>
   14dbc:	cmp	r4, #0
   14dc0:	beq	14de4 <close@plt+0x3d14>
   14dc4:	umull	r0, r1, r4, r5
   14dc8:	adds	r3, r1, #0
   14dcc:	movne	r3, #1
   14dd0:	cmp	r0, #0
   14dd4:	blt	14de0 <close@plt+0x3d10>
   14dd8:	cmp	r3, #0
   14ddc:	beq	14da8 <close@plt+0x3cd8>
   14de0:	bl	14ee4 <close@plt+0x3e14>
   14de4:	mov	r1, r2
   14de8:	mov	r0, #64	; 0x40
   14dec:	bl	1559c <_obstack_memory_used@@Base+0x128>
   14df0:	cmp	r5, #64	; 0x40
   14df4:	movls	r4, r0
   14df8:	addhi	r4, r0, #1
   14dfc:	b	14dc4 <close@plt+0x3cf4>
   14e00:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14e04:	cmp	r0, #0
   14e08:	ldr	r3, [r1]
   14e0c:	beq	14e30 <close@plt+0x3d60>
   14e10:	ldr	r2, [pc, #60]	; 14e54 <close@plt+0x3d84>
   14e14:	cmp	r3, r2
   14e18:	bhi	14e4c <close@plt+0x3d7c>
   14e1c:	add	r2, r3, #1
   14e20:	add	r3, r2, r3, lsr #1
   14e24:	str	r3, [r1]
   14e28:	mov	r1, r3
   14e2c:	b	14cf8 <close@plt+0x3c28>
   14e30:	cmp	r3, #0
   14e34:	bne	14e48 <close@plt+0x3d78>
   14e38:	mov	r3, #64	; 0x40
   14e3c:	str	r3, [r1]
   14e40:	mov	r1, r3
   14e44:	b	14cf8 <close@plt+0x3c28>
   14e48:	bge	14e24 <close@plt+0x3d54>
   14e4c:	push	{r4, lr}
   14e50:	bl	14ee4 <close@plt+0x3e14>
   14e54:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14e58:	push	{r4, lr}
   14e5c:	mov	r4, r0
   14e60:	bl	14c9c <close@plt+0x3bcc>
   14e64:	mov	r2, r4
   14e68:	mov	r1, #0
   14e6c:	pop	{r4, lr}
   14e70:	b	11040 <memset@plt>
   14e74:	push	{r4, r5, r6, lr}
   14e78:	umull	r4, r5, r0, r1
   14e7c:	adds	r3, r5, #0
   14e80:	movne	r3, #1
   14e84:	cmp	r4, #0
   14e88:	blt	14ea0 <close@plt+0x3dd0>
   14e8c:	cmp	r3, #0
   14e90:	bne	14ea0 <close@plt+0x3dd0>
   14e94:	bl	10e60 <calloc@plt>
   14e98:	cmp	r0, #0
   14e9c:	popne	{r4, r5, r6, pc}
   14ea0:	bl	14ee4 <close@plt+0x3e14>
   14ea4:	push	{r4, r5, r6, lr}
   14ea8:	mov	r4, r1
   14eac:	mov	r5, r0
   14eb0:	mov	r0, r1
   14eb4:	bl	14c9c <close@plt+0x3bcc>
   14eb8:	mov	r2, r4
   14ebc:	mov	r1, r5
   14ec0:	pop	{r4, r5, r6, lr}
   14ec4:	b	10ecc <memcpy@plt>
   14ec8:	push	{r4, lr}
   14ecc:	mov	r4, r0
   14ed0:	bl	1101c <strlen@plt>
   14ed4:	add	r1, r0, #1
   14ed8:	mov	r0, r4
   14edc:	pop	{r4, lr}
   14ee0:	b	14ea4 <close@plt+0x3dd4>
   14ee4:	ldr	r3, [pc, #44]	; 14f18 <close@plt+0x3e48>
   14ee8:	push	{r4, lr}
   14eec:	mov	r2, #5
   14ef0:	ldr	r1, [pc, #36]	; 14f1c <close@plt+0x3e4c>
   14ef4:	mov	r0, #0
   14ef8:	ldr	r4, [r3]
   14efc:	bl	10efc <dcgettext@plt>
   14f00:	ldr	r2, [pc, #24]	; 14f20 <close@plt+0x3e50>
   14f04:	mov	r1, #0
   14f08:	mov	r3, r0
   14f0c:	mov	r0, r4
   14f10:	bl	10f80 <error@plt>
   14f14:	bl	110c4 <abort@plt>
   14f18:	strdeq	r8, [r2], -r0
   14f1c:	andeq	r7, r1, r4, lsr #13
   14f20:	andeq	r7, r1, r0, ror #4
   14f24:	push	{r4, lr}
   14f28:	bl	10eb4 <strndup@plt>
   14f2c:	cmp	r0, #0
   14f30:	popne	{r4, pc}
   14f34:	bl	14ee4 <close@plt+0x3e14>
   14f38:	push	{r4, r5, lr}
   14f3c:	sub	sp, sp, #12
   14f40:	mov	r4, r0
   14f44:	bl	11058 <fileno@plt>
   14f48:	cmp	r0, #0
   14f4c:	mov	r0, r4
   14f50:	blt	14fcc <close@plt+0x3efc>
   14f54:	bl	10fd4 <__freading@plt>
   14f58:	cmp	r0, #0
   14f5c:	bne	14f98 <close@plt+0x3ec8>
   14f60:	mov	r0, r4
   14f64:	bl	14fd8 <close@plt+0x3f08>
   14f68:	cmp	r0, #0
   14f6c:	beq	14fc8 <close@plt+0x3ef8>
   14f70:	bl	11028 <__errno_location@plt>
   14f74:	mov	r5, r0
   14f78:	mov	r0, r4
   14f7c:	ldr	r4, [r5]
   14f80:	bl	11070 <fclose@plt>
   14f84:	cmp	r4, #0
   14f88:	mvnne	r0, #0
   14f8c:	strne	r4, [r5]
   14f90:	add	sp, sp, #12
   14f94:	pop	{r4, r5, pc}
   14f98:	mov	r0, r4
   14f9c:	bl	11058 <fileno@plt>
   14fa0:	mov	r3, #1
   14fa4:	str	r3, [sp]
   14fa8:	mov	r2, #0
   14fac:	mov	r3, #0
   14fb0:	bl	10f50 <lseek64@plt>
   14fb4:	mvn	r3, #0
   14fb8:	mvn	r2, #0
   14fbc:	cmp	r1, r3
   14fc0:	cmpeq	r0, r2
   14fc4:	bne	14f60 <close@plt+0x3e90>
   14fc8:	mov	r0, r4
   14fcc:	add	sp, sp, #12
   14fd0:	pop	{r4, r5, lr}
   14fd4:	b	11070 <fclose@plt>
   14fd8:	push	{r4, lr}
   14fdc:	subs	r4, r0, #0
   14fe0:	sub	sp, sp, #8
   14fe4:	beq	15000 <close@plt+0x3f30>
   14fe8:	bl	10fd4 <__freading@plt>
   14fec:	cmp	r0, #0
   14ff0:	beq	15000 <close@plt+0x3f30>
   14ff4:	ldr	r3, [r4]
   14ff8:	tst	r3, #256	; 0x100
   14ffc:	bne	15010 <close@plt+0x3f40>
   15000:	mov	r0, r4
   15004:	add	sp, sp, #8
   15008:	pop	{r4, lr}
   1500c:	b	10e9c <fflush@plt>
   15010:	mov	r3, #1
   15014:	str	r3, [sp]
   15018:	mov	r2, #0
   1501c:	mov	r3, #0
   15020:	mov	r0, r4
   15024:	bl	15038 <close@plt+0x3f68>
   15028:	mov	r0, r4
   1502c:	add	sp, sp, #8
   15030:	pop	{r4, lr}
   15034:	b	10e9c <fflush@plt>
   15038:	push	{r4, r5, r6, r7, r8, lr}
   1503c:	sub	sp, sp, #8
   15040:	ldmib	r0, {ip, lr}
   15044:	mov	r4, r0
   15048:	ldr	r5, [sp, #32]
   1504c:	cmp	lr, ip
   15050:	beq	15068 <close@plt+0x3f98>
   15054:	str	r5, [sp, #32]
   15058:	mov	r0, r4
   1505c:	add	sp, sp, #8
   15060:	pop	{r4, r5, r6, r7, r8, lr}
   15064:	b	1107c <fseeko64@plt>
   15068:	ldr	lr, [r0, #20]
   1506c:	ldr	ip, [r0, #16]
   15070:	cmp	lr, ip
   15074:	bne	15054 <close@plt+0x3f84>
   15078:	ldr	r8, [r0, #36]	; 0x24
   1507c:	cmp	r8, #0
   15080:	bne	15054 <close@plt+0x3f84>
   15084:	mov	r6, r2
   15088:	mov	r7, r3
   1508c:	bl	11058 <fileno@plt>
   15090:	mov	r2, r6
   15094:	mov	r3, r7
   15098:	str	r5, [sp]
   1509c:	bl	10f50 <lseek64@plt>
   150a0:	mvn	r3, #0
   150a4:	mvn	r2, #0
   150a8:	cmp	r1, r3
   150ac:	cmpeq	r0, r2
   150b0:	beq	150d0 <close@plt+0x4000>
   150b4:	ldr	r3, [r4]
   150b8:	strd	r0, [r4, #80]	; 0x50
   150bc:	mov	r0, r8
   150c0:	bic	r3, r3, #16
   150c4:	str	r3, [r4]
   150c8:	add	sp, sp, #8
   150cc:	pop	{r4, r5, r6, r7, r8, pc}
   150d0:	mvn	r0, #0
   150d4:	b	150c8 <close@plt+0x3ff8>
   150d8:	push	{r4, r5, r6, r7, r8, lr}
   150dc:	subs	r7, r0, #0
   150e0:	ldr	r5, [pc, #108]	; 15154 <close@plt+0x4084>
   150e4:	sub	sp, sp, #8
   150e8:	mov	r8, r1
   150ec:	ldr	r1, [r5]
   150f0:	moveq	r7, sp
   150f4:	str	r1, [sp, #4]
   150f8:	mov	r0, r7
   150fc:	mov	r1, r8
   15100:	mov	r6, r2
   15104:	bl	10f74 <mbrtowc@plt>
   15108:	cmp	r6, #0
   1510c:	cmnne	r0, #3
   15110:	mov	r4, r0
   15114:	bhi	15134 <close@plt+0x4064>
   15118:	ldr	r2, [sp, #4]
   1511c:	ldr	r3, [r5]
   15120:	mov	r0, r4
   15124:	cmp	r2, r3
   15128:	bne	15150 <close@plt+0x4080>
   1512c:	add	sp, sp, #8
   15130:	pop	{r4, r5, r6, r7, r8, pc}
   15134:	mov	r0, #0
   15138:	bl	1551c <_obstack_memory_used@@Base+0xa8>
   1513c:	cmp	r0, #0
   15140:	moveq	r4, #1
   15144:	ldrbeq	r3, [r8]
   15148:	streq	r3, [r7]
   1514c:	b	15118 <close@plt+0x4048>
   15150:	bl	10f08 <__stack_chk_fail@plt>
   15154:	andeq	r7, r2, r8, lsl #30
   15158:	ldr	r3, [pc, #52]	; 15194 <close@plt+0x40c4>
   1515c:	push	{r4, lr}
   15160:	mov	r2, #5
   15164:	ldr	r1, [pc, #44]	; 15198 <close@plt+0x40c8>
   15168:	mov	r0, #0
   1516c:	ldr	r4, [r3]
   15170:	bl	10efc <dcgettext@plt>
   15174:	ldr	r2, [pc, #32]	; 1519c <close@plt+0x40cc>
   15178:	mov	r1, #1
   1517c:	mov	r3, r0
   15180:	mov	r0, r4
   15184:	bl	11064 <__fprintf_chk@plt>
   15188:	ldr	r3, [pc, #16]	; 151a0 <close@plt+0x40d0>
   1518c:	ldr	r0, [r3]
   15190:	bl	11010 <exit@plt>
   15194:	andeq	r8, r2, r8, asr #2
   15198:	andeq	r7, r1, r4, lsr #13
   1519c:	muleq	r1, r4, r3
   151a0:	strdeq	r8, [r2], -r0
   151a4:	ldrb	r2, [r0, #40]	; 0x28
   151a8:	ldr	r3, [r0, #28]
   151ac:	tst	r2, #1
   151b0:	beq	151bc <close@plt+0x40ec>
   151b4:	ldr	r0, [r0, #36]	; 0x24
   151b8:	bx	r3
   151bc:	mov	r0, r1
   151c0:	bx	r3
   151c4:	ldrb	r2, [r0, #40]	; 0x28
   151c8:	ldr	r3, [r0, #32]
   151cc:	tst	r2, #1
   151d0:	beq	151dc <close@plt+0x410c>
   151d4:	ldr	r0, [r0, #36]	; 0x24
   151d8:	bx	r3
   151dc:	mov	r0, r1
   151e0:	bx	r3
   151e4:	push	{r4, r5, r6, lr}
   151e8:	subs	r5, r2, #0
   151ec:	ldr	r3, [pc, #128]	; 15274 <close@plt+0x41a4>
   151f0:	subne	r6, r5, #1
   151f4:	moveq	r6, #7
   151f8:	moveq	r5, #8
   151fc:	cmp	r1, #0
   15200:	moveq	r1, r3
   15204:	str	r6, [r0, #24]
   15208:	str	r1, [r0]
   1520c:	mov	r4, r0
   15210:	bl	151a4 <close@plt+0x40d4>
   15214:	cmp	r0, #0
   15218:	mov	r3, r0
   1521c:	str	r0, [r4, #4]
   15220:	beq	15268 <close@plt+0x4198>
   15224:	ldrb	ip, [r4, #40]	; 0x28
   15228:	add	r1, r0, #8
   1522c:	ldr	r0, [r4]
   15230:	add	r1, r1, r6
   15234:	rsb	r2, r5, #0
   15238:	and	r2, r2, r1
   1523c:	bic	ip, ip, #6
   15240:	add	r1, r3, r0
   15244:	mov	lr, #0
   15248:	str	r2, [r4, #8]
   1524c:	str	r2, [r4, #12]
   15250:	mov	r0, #1
   15254:	str	r1, [r3]
   15258:	str	r1, [r4, #16]
   1525c:	str	lr, [r3, #4]
   15260:	strb	ip, [r4, #40]	; 0x28
   15264:	pop	{r4, r5, r6, pc}
   15268:	ldr	r3, [pc, #8]	; 15278 <close@plt+0x41a8>
   1526c:	ldr	r3, [r3]
   15270:	blx	r3
   15274:	andeq	r0, r0, r8, ror #31
   15278:	andeq	r8, r2, r4, lsr r1

0001527c <_obstack_begin@@Base>:
   1527c:	push	{r4, lr}
   15280:	ldrb	lr, [r0, #40]	; 0x28
   15284:	ldr	r4, [sp, #8]
   15288:	str	r3, [r0, #28]
   1528c:	bic	lr, lr, #1
   15290:	str	r4, [r0, #32]
   15294:	strb	lr, [r0, #40]	; 0x28
   15298:	pop	{r4, lr}
   1529c:	b	151e4 <close@plt+0x4114>

000152a0 <_obstack_begin_1@@Base>:
   152a0:	push	{r4, lr}
   152a4:	ldrb	lr, [r0, #40]	; 0x28
   152a8:	ldr	r4, [sp, #8]
   152ac:	str	r3, [r0, #28]
   152b0:	ldr	r3, [sp, #12]
   152b4:	orr	lr, lr, #1
   152b8:	str	r4, [r0, #32]
   152bc:	strb	lr, [r0, #40]	; 0x28
   152c0:	str	r3, [r0, #36]	; 0x24
   152c4:	pop	{r4, lr}
   152c8:	b	151e4 <close@plt+0x4114>

000152cc <_obstack_newchunk@@Base>:
   152cc:	push	{r4, r5, r6, r7, r8, lr}
   152d0:	ldr	r2, [r0, #8]
   152d4:	ldr	r6, [r0, #12]
   152d8:	ldr	r3, [r0, #24]
   152dc:	sub	r6, r6, r2
   152e0:	adds	r1, r6, r1
   152e4:	ldr	lr, [r0]
   152e8:	movcs	ip, #1
   152ec:	movcc	ip, #0
   152f0:	adds	r3, r3, r1
   152f4:	movcs	r2, #1
   152f8:	movcc	r2, #0
   152fc:	add	r4, r3, r6, lsr #3
   15300:	cmp	r3, lr
   15304:	add	r4, r4, #100	; 0x64
   15308:	movcc	r3, lr
   1530c:	cmp	r3, r4
   15310:	eor	ip, ip, #1
   15314:	eor	r2, r2, #1
   15318:	movcs	r4, r3
   1531c:	tst	ip, r2
   15320:	ldr	r7, [r0, #4]
   15324:	beq	153cc <_obstack_newchunk@@Base+0x100>
   15328:	mov	r1, r4
   1532c:	mov	r5, r0
   15330:	bl	151a4 <close@plt+0x40d4>
   15334:	subs	r8, r0, #0
   15338:	beq	153cc <_obstack_newchunk@@Base+0x100>
   1533c:	ldr	r1, [r5, #24]
   15340:	mov	r2, r8
   15344:	add	r3, r8, r4
   15348:	str	r8, [r5, #4]
   1534c:	str	r7, [r8, #4]
   15350:	str	r3, [r5, #16]
   15354:	str	r3, [r2], #8
   15358:	add	r2, r2, r1
   1535c:	bic	r4, r2, r1
   15360:	mov	r0, r4
   15364:	mov	r2, r6
   15368:	ldr	r1, [r5, #8]
   1536c:	bl	10ecc <memcpy@plt>
   15370:	ldrb	r3, [r5, #40]	; 0x28
   15374:	tst	r3, #2
   15378:	bne	15398 <_obstack_newchunk@@Base+0xcc>
   1537c:	ldr	r2, [r5, #24]
   15380:	add	r3, r7, #8
   15384:	add	r3, r3, r2
   15388:	ldr	r1, [r5, #8]
   1538c:	bic	r3, r3, r2
   15390:	cmp	r1, r3
   15394:	beq	153b4 <_obstack_newchunk@@Base+0xe8>
   15398:	ldrb	r3, [r5, #40]	; 0x28
   1539c:	add	r6, r4, r6
   153a0:	str	r6, [r5, #12]
   153a4:	bic	r3, r3, #2
   153a8:	str	r4, [r5, #8]
   153ac:	strb	r3, [r5, #40]	; 0x28
   153b0:	pop	{r4, r5, r6, r7, r8, pc}
   153b4:	ldr	r3, [r7, #4]
   153b8:	mov	r1, r7
   153bc:	str	r3, [r8, #4]
   153c0:	mov	r0, r5
   153c4:	bl	151c4 <close@plt+0x40f4>
   153c8:	b	15398 <_obstack_newchunk@@Base+0xcc>
   153cc:	ldr	r3, [pc, #4]	; 153d8 <_obstack_newchunk@@Base+0x10c>
   153d0:	ldr	r3, [r3]
   153d4:	blx	r3
   153d8:	andeq	r8, r2, r4, lsr r1

000153dc <_obstack_allocated_p@@Base>:
   153dc:	ldr	r0, [r0, #4]
   153e0:	cmp	r0, #0
   153e4:	bxeq	lr
   153e8:	cmp	r1, r0
   153ec:	bls	153dc <_obstack_allocated_p@@Base>
   153f0:	ldr	r3, [r0]
   153f4:	cmp	r3, r1
   153f8:	bcc	153dc <_obstack_allocated_p@@Base>
   153fc:	mov	r0, #1
   15400:	bx	lr

00015404 <_obstack_free@@Base>:
   15404:	push	{r4, r5, r6, lr}
   15408:	mov	r6, r1
   1540c:	ldr	r4, [r0, #4]
   15410:	cmp	r4, #0
   15414:	movne	r5, r0
   15418:	beq	15454 <_obstack_free@@Base+0x50>
   1541c:	cmp	r4, r6
   15420:	bcs	15430 <_obstack_free@@Base+0x2c>
   15424:	ldr	r2, [r4]
   15428:	cmp	r2, r6
   1542c:	bcs	15460 <_obstack_free@@Base+0x5c>
   15430:	mov	r1, r4
   15434:	mov	r0, r5
   15438:	ldr	r4, [r4, #4]
   1543c:	bl	151c4 <close@plt+0x40f4>
   15440:	ldrb	r2, [r5, #40]	; 0x28
   15444:	cmp	r4, #0
   15448:	orr	r2, r2, #2
   1544c:	strb	r2, [r5, #40]	; 0x28
   15450:	bne	1541c <_obstack_free@@Base+0x18>
   15454:	cmp	r6, #0
   15458:	popeq	{r4, r5, r6, pc}
   1545c:	bl	110c4 <abort@plt>
   15460:	str	r6, [r5, #12]
   15464:	str	r6, [r5, #8]
   15468:	str	r2, [r5, #16]
   1546c:	str	r4, [r5, #4]
   15470:	pop	{r4, r5, r6, pc}

00015474 <_obstack_memory_used@@Base>:
   15474:	ldr	r3, [r0, #4]
   15478:	cmp	r3, #0
   1547c:	beq	154a0 <_obstack_memory_used@@Base+0x2c>
   15480:	mov	r0, #0
   15484:	ldr	r2, [r3]
   15488:	sub	r2, r2, r3
   1548c:	ldr	r3, [r3, #4]
   15490:	add	r0, r0, r2
   15494:	cmp	r3, #0
   15498:	bne	15484 <_obstack_memory_used@@Base+0x10>
   1549c:	bx	lr
   154a0:	mov	r0, r3
   154a4:	bx	lr
   154a8:	push	{r4, r5, r6, lr}
   154ac:	mov	r4, r0
   154b0:	bl	10f68 <__fpending@plt>
   154b4:	ldr	r5, [r4]
   154b8:	and	r5, r5, #32
   154bc:	mov	r6, r0
   154c0:	mov	r0, r4
   154c4:	bl	14f38 <close@plt+0x3e68>
   154c8:	cmp	r5, #0
   154cc:	mov	r4, r0
   154d0:	bne	154fc <_obstack_memory_used@@Base+0x88>
   154d4:	cmp	r0, #0
   154d8:	beq	154f4 <_obstack_memory_used@@Base+0x80>
   154dc:	cmp	r6, #0
   154e0:	bne	15514 <_obstack_memory_used@@Base+0xa0>
   154e4:	bl	11028 <__errno_location@plt>
   154e8:	ldr	r4, [r0]
   154ec:	subs	r4, r4, #9
   154f0:	mvnne	r4, #0
   154f4:	mov	r0, r4
   154f8:	pop	{r4, r5, r6, pc}
   154fc:	cmp	r0, #0
   15500:	bne	15514 <_obstack_memory_used@@Base+0xa0>
   15504:	bl	11028 <__errno_location@plt>
   15508:	str	r4, [r0]
   1550c:	mvn	r4, #0
   15510:	b	154f4 <_obstack_memory_used@@Base+0x80>
   15514:	mvn	r4, #0
   15518:	b	154f4 <_obstack_memory_used@@Base+0x80>
   1551c:	push	{r4, lr}
   15520:	mov	r1, #0
   15524:	bl	11088 <setlocale@plt>
   15528:	subs	r4, r0, #0
   1552c:	beq	15558 <_obstack_memory_used@@Base+0xe4>
   15530:	ldr	r1, [pc, #40]	; 15560 <_obstack_memory_used@@Base+0xec>
   15534:	bl	10e90 <strcmp@plt>
   15538:	cmp	r0, #0
   1553c:	popeq	{r4, pc}
   15540:	mov	r0, r4
   15544:	ldr	r1, [pc, #24]	; 15564 <_obstack_memory_used@@Base+0xf0>
   15548:	bl	10e90 <strcmp@plt>
   1554c:	adds	r0, r0, #0
   15550:	movne	r0, #1
   15554:	pop	{r4, pc}
   15558:	mov	r0, #1
   1555c:	pop	{r4, pc}
   15560:			; <UNDEFINED> instruction: 0x000176b8
   15564:			; <UNDEFINED> instruction: 0x000176bc
   15568:	push	{r4, lr}
   1556c:	mov	r0, #14
   15570:	bl	110a0 <nl_langinfo@plt>
   15574:	cmp	r0, #0
   15578:	beq	15590 <_obstack_memory_used@@Base+0x11c>
   1557c:	ldrb	r2, [r0]
   15580:	ldr	r3, [pc, #16]	; 15598 <_obstack_memory_used@@Base+0x124>
   15584:	cmp	r2, #0
   15588:	moveq	r0, r3
   1558c:	pop	{r4, pc}
   15590:	ldr	r0, [pc]	; 15598 <_obstack_memory_used@@Base+0x124>
   15594:	pop	{r4, pc}
   15598:	andeq	r7, r1, r4, asr #13
   1559c:	subs	r2, r1, #1
   155a0:	bxeq	lr
   155a4:	bcc	1577c <_obstack_memory_used@@Base+0x308>
   155a8:	cmp	r0, r1
   155ac:	bls	15760 <_obstack_memory_used@@Base+0x2ec>
   155b0:	tst	r1, r2
   155b4:	beq	1576c <_obstack_memory_used@@Base+0x2f8>
   155b8:	clz	r3, r0
   155bc:	clz	r2, r1
   155c0:	sub	r3, r2, r3
   155c4:	rsbs	r3, r3, #31
   155c8:	addne	r3, r3, r3, lsl #1
   155cc:	mov	r2, #0
   155d0:	addne	pc, pc, r3, lsl #2
   155d4:	nop			; (mov r0, r0)
   155d8:	cmp	r0, r1, lsl #31
   155dc:	adc	r2, r2, r2
   155e0:	subcs	r0, r0, r1, lsl #31
   155e4:	cmp	r0, r1, lsl #30
   155e8:	adc	r2, r2, r2
   155ec:	subcs	r0, r0, r1, lsl #30
   155f0:	cmp	r0, r1, lsl #29
   155f4:	adc	r2, r2, r2
   155f8:	subcs	r0, r0, r1, lsl #29
   155fc:	cmp	r0, r1, lsl #28
   15600:	adc	r2, r2, r2
   15604:	subcs	r0, r0, r1, lsl #28
   15608:	cmp	r0, r1, lsl #27
   1560c:	adc	r2, r2, r2
   15610:	subcs	r0, r0, r1, lsl #27
   15614:	cmp	r0, r1, lsl #26
   15618:	adc	r2, r2, r2
   1561c:	subcs	r0, r0, r1, lsl #26
   15620:	cmp	r0, r1, lsl #25
   15624:	adc	r2, r2, r2
   15628:	subcs	r0, r0, r1, lsl #25
   1562c:	cmp	r0, r1, lsl #24
   15630:	adc	r2, r2, r2
   15634:	subcs	r0, r0, r1, lsl #24
   15638:	cmp	r0, r1, lsl #23
   1563c:	adc	r2, r2, r2
   15640:	subcs	r0, r0, r1, lsl #23
   15644:	cmp	r0, r1, lsl #22
   15648:	adc	r2, r2, r2
   1564c:	subcs	r0, r0, r1, lsl #22
   15650:	cmp	r0, r1, lsl #21
   15654:	adc	r2, r2, r2
   15658:	subcs	r0, r0, r1, lsl #21
   1565c:	cmp	r0, r1, lsl #20
   15660:	adc	r2, r2, r2
   15664:	subcs	r0, r0, r1, lsl #20
   15668:	cmp	r0, r1, lsl #19
   1566c:	adc	r2, r2, r2
   15670:	subcs	r0, r0, r1, lsl #19
   15674:	cmp	r0, r1, lsl #18
   15678:	adc	r2, r2, r2
   1567c:	subcs	r0, r0, r1, lsl #18
   15680:	cmp	r0, r1, lsl #17
   15684:	adc	r2, r2, r2
   15688:	subcs	r0, r0, r1, lsl #17
   1568c:	cmp	r0, r1, lsl #16
   15690:	adc	r2, r2, r2
   15694:	subcs	r0, r0, r1, lsl #16
   15698:	cmp	r0, r1, lsl #15
   1569c:	adc	r2, r2, r2
   156a0:	subcs	r0, r0, r1, lsl #15
   156a4:	cmp	r0, r1, lsl #14
   156a8:	adc	r2, r2, r2
   156ac:	subcs	r0, r0, r1, lsl #14
   156b0:	cmp	r0, r1, lsl #13
   156b4:	adc	r2, r2, r2
   156b8:	subcs	r0, r0, r1, lsl #13
   156bc:	cmp	r0, r1, lsl #12
   156c0:	adc	r2, r2, r2
   156c4:	subcs	r0, r0, r1, lsl #12
   156c8:	cmp	r0, r1, lsl #11
   156cc:	adc	r2, r2, r2
   156d0:	subcs	r0, r0, r1, lsl #11
   156d4:	cmp	r0, r1, lsl #10
   156d8:	adc	r2, r2, r2
   156dc:	subcs	r0, r0, r1, lsl #10
   156e0:	cmp	r0, r1, lsl #9
   156e4:	adc	r2, r2, r2
   156e8:	subcs	r0, r0, r1, lsl #9
   156ec:	cmp	r0, r1, lsl #8
   156f0:	adc	r2, r2, r2
   156f4:	subcs	r0, r0, r1, lsl #8
   156f8:	cmp	r0, r1, lsl #7
   156fc:	adc	r2, r2, r2
   15700:	subcs	r0, r0, r1, lsl #7
   15704:	cmp	r0, r1, lsl #6
   15708:	adc	r2, r2, r2
   1570c:	subcs	r0, r0, r1, lsl #6
   15710:	cmp	r0, r1, lsl #5
   15714:	adc	r2, r2, r2
   15718:	subcs	r0, r0, r1, lsl #5
   1571c:	cmp	r0, r1, lsl #4
   15720:	adc	r2, r2, r2
   15724:	subcs	r0, r0, r1, lsl #4
   15728:	cmp	r0, r1, lsl #3
   1572c:	adc	r2, r2, r2
   15730:	subcs	r0, r0, r1, lsl #3
   15734:	cmp	r0, r1, lsl #2
   15738:	adc	r2, r2, r2
   1573c:	subcs	r0, r0, r1, lsl #2
   15740:	cmp	r0, r1, lsl #1
   15744:	adc	r2, r2, r2
   15748:	subcs	r0, r0, r1, lsl #1
   1574c:	cmp	r0, r1
   15750:	adc	r2, r2, r2
   15754:	subcs	r0, r0, r1
   15758:	mov	r0, r2
   1575c:	bx	lr
   15760:	moveq	r0, #1
   15764:	movne	r0, #0
   15768:	bx	lr
   1576c:	clz	r2, r1
   15770:	rsb	r2, r2, #31
   15774:	lsr	r0, r0, r2
   15778:	bx	lr
   1577c:	cmp	r0, #0
   15780:	mvnne	r0, #0
   15784:	b	157a8 <_obstack_memory_used@@Base+0x334>
   15788:	cmp	r1, #0
   1578c:	beq	1577c <_obstack_memory_used@@Base+0x308>
   15790:	push	{r0, r1, lr}
   15794:	bl	1559c <_obstack_memory_used@@Base+0x128>
   15798:	pop	{r1, r2, lr}
   1579c:	mul	r3, r2, r0
   157a0:	sub	r1, r1, r3
   157a4:	bx	lr
   157a8:	push	{r1, lr}
   157ac:	mov	r0, #8
   157b0:	bl	10e78 <raise@plt>
   157b4:	pop	{r1, pc}
   157b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157bc:	mov	r7, r0
   157c0:	ldr	r6, [pc, #72]	; 15810 <_obstack_memory_used@@Base+0x39c>
   157c4:	ldr	r5, [pc, #72]	; 15814 <_obstack_memory_used@@Base+0x3a0>
   157c8:	add	r6, pc, r6
   157cc:	add	r5, pc, r5
   157d0:	sub	r6, r6, r5
   157d4:	mov	r8, r1
   157d8:	mov	r9, r2
   157dc:	bl	10e40 <calloc@plt-0x20>
   157e0:	asrs	r6, r6, #2
   157e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   157e8:	mov	r4, #0
   157ec:	add	r4, r4, #1
   157f0:	ldr	r3, [r5], #4
   157f4:	mov	r2, r9
   157f8:	mov	r1, r8
   157fc:	mov	r0, r7
   15800:	blx	r3
   15804:	cmp	r6, r4
   15808:	bne	157ec <_obstack_memory_used@@Base+0x378>
   1580c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15810:	andeq	r2, r1, r4, lsr r7
   15814:	andeq	r2, r1, ip, lsr #14
   15818:	bx	lr
   1581c:	ldr	r3, [pc, #12]	; 15830 <_obstack_memory_used@@Base+0x3bc>
   15820:	mov	r1, #0
   15824:	add	r3, pc, r3
   15828:	ldr	r2, [r3]
   1582c:	b	11034 <__cxa_atexit@plt>
   15830:			; <UNDEFINED> instruction: 0x000128bc

Disassembly of section .fini:

00015834 <.fini>:
   15834:	push	{r3, lr}
   15838:	pop	{r3, pc}
