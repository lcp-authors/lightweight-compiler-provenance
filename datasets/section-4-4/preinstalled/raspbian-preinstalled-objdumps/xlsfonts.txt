
raspbian-preinstalled/xlsfonts:     file format elf32-littlearm


Disassembly of section .init:

00010ab0 <_init@@Base>:
   10ab0:	push	{r3, lr}
   10ab4:	bl	11240 <abort@plt+0x5cc>
   10ab8:	pop	{r3, pc}

Disassembly of section .plt:

00010abc <XFreeFontNames@plt-0x14>:
   10abc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac0:	ldr	lr, [pc, #4]	; 10acc <_init@@Base+0x1c>
   10ac4:	add	lr, pc, lr
   10ac8:	ldr	pc, [lr, #8]!
   10acc:	andeq	r3, r1, r4, lsr r5

00010ad0 <XFreeFontNames@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1332]!	; 0x534

00010adc <raise@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1324]!	; 0x52c

00010ae8 <strcmp@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1316]!	; 0x524

00010af4 <strtol@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1308]!	; 0x51c

00010b00 <XUnloadFont@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1300]!	; 0x514

00010b0c <fflush@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1292]!	; 0x50c

00010b18 <XListFonts@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1284]!	; 0x504

00010b24 <__stack_chk_fail@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b30 <XFree@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b3c <realloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b48 <XLoadQueryFont@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b54 <_IO_putc@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b60 <XDefaultScreen@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b6c <XListFontsWithInfo@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b78 <puts@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b84 <__libc_start_main@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b90 <XOpenDisplay@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b9c <__vfprintf_chk@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1196]!	; 0x4ac

00010ba8 <__gmon_start__@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bb4 <exit@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #1180]!	; 0x49c

00010bc0 <strlen@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #1172]!	; 0x494

00010bcc <XSetErrorHandler@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #1164]!	; 0x48c

00010bd8 <XInternAtom@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #1156]!	; 0x484

00010be4 <__sprintf_chk@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #1148]!	; 0x47c

00010bf0 <XDisplayName@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #1140]!	; 0x474

00010bfc <putchar@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #1132]!	; 0x46c

00010c08 <XFreeFontInfo@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #1124]!	; 0x464

00010c14 <XGetAtomName@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #1116]!	; 0x45c

00010c20 <__printf_chk@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #1108]!	; 0x454

00010c2c <__fprintf_chk@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #1100]!	; 0x44c

00010c38 <fputc@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #77824	; 0x13000
   10c40:	ldr	pc, [ip, #1092]!	; 0x444

00010c44 <qsort@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #77824	; 0x13000
   10c4c:	ldr	pc, [ip, #1084]!	; 0x43c

00010c50 <XCloseDisplay@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #77824	; 0x13000
   10c58:	ldr	pc, [ip, #1076]!	; 0x434

00010c5c <isatty@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #77824	; 0x13000
   10c64:	ldr	pc, [ip, #1068]!	; 0x42c

00010c68 <XKeysymToString@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #77824	; 0x13000
   10c70:	ldr	pc, [ip, #1060]!	; 0x424

00010c74 <abort@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #77824	; 0x13000
   10c7c:	ldr	pc, [ip, #1052]!	; 0x41c

Disassembly of section .text:

00010c80 <.text>:
   10c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c84:	sub	sp, sp, #44	; 0x2c
   10c88:	add	r3, sp, #40	; 0x28
   10c8c:	mov	r4, r1
   10c90:	str	r0, [r3, #-4]!
   10c94:	mov	r0, r3
   10c98:	ldr	r3, [pc, #1332]	; 111d4 <abort@plt+0x560>
   10c9c:	ldr	r2, [r4], #4
   10ca0:	str	r2, [r3]
   10ca4:	bl	112f4 <abort@plt+0x680>
   10ca8:	ldr	r3, [sp, #36]	; 0x24
   10cac:	sub	ip, r3, #1
   10cb0:	cmp	ip, #0
   10cb4:	str	ip, [sp, #36]	; 0x24
   10cb8:	beq	1113c <abort@plt+0x4c8>
   10cbc:	mov	r3, ip
   10cc0:	ldr	sl, [pc, #1296]	; 111d8 <abort@plt+0x564>
   10cc4:	ldr	r6, [pc, #1296]	; 111dc <abort@plt+0x568>
   10cc8:	mov	r5, #0
   10ccc:	b	10cf4 <abort@plt+0x80>
   10cd0:	bl	115d8 <abort@plt+0x964>
   10cd4:	ldr	r3, [sp, #36]	; 0x24
   10cd8:	add	r5, r5, #1
   10cdc:	sub	r3, r3, #1
   10ce0:	cmp	r3, #0
   10ce4:	str	r3, [sp, #36]	; 0x24
   10ce8:	add	r4, r4, #4
   10cec:	mov	ip, r3
   10cf0:	beq	110f8 <abort@plt+0x484>
   10cf4:	ldr	r0, [r4]
   10cf8:	ldrb	r2, [r0]
   10cfc:	cmp	r2, #45	; 0x2d
   10d00:	bne	10cd0 <abort@plt+0x5c>
   10d04:	cmp	r5, #0
   10d08:	bne	111b4 <abort@plt+0x540>
   10d0c:	ldrb	r2, [r0, #1]
   10d10:	cmp	r2, #0
   10d14:	beq	11114 <abort@plt+0x4a0>
   10d18:	ldr	r1, [sl, #4]
   10d1c:	ldr	fp, [r6, #20]
   10d20:	str	r1, [sp, #28]
   10d24:	ldr	r1, [r6]
   10d28:	add	r7, r0, #1
   10d2c:	str	r1, [sp, #20]
   10d30:	ldr	r1, [r6, #16]
   10d34:	mov	r9, r5
   10d38:	str	r1, [sp, #12]
   10d3c:	mov	r8, r5
   10d40:	ldr	r1, [r6, #4]
   10d44:	mov	lr, #1
   10d48:	str	r1, [sp, #8]
   10d4c:	str	r5, [sp, #32]
   10d50:	str	r5, [sp, #24]
   10d54:	str	r5, [sp, #16]
   10d58:	sub	r1, r2, #49	; 0x31
   10d5c:	cmp	r1, #70	; 0x46
   10d60:	ldrls	pc, [pc, r1, lsl #2]
   10d64:	b	11148 <abort@plt+0x4d4>
   10d68:	andeq	r1, r1, ip, ror #1
   10d6c:	andeq	r1, r1, r8, asr #2
   10d70:	andeq	r1, r1, r8, asr #2
   10d74:	andeq	r1, r1, r8, asr #2
   10d78:	andeq	r1, r1, r8, asr #2
   10d7c:	andeq	r1, r1, r8, asr #2
   10d80:	andeq	r1, r1, r8, asr #2
   10d84:	andeq	r1, r1, r8, asr #2
   10d88:	andeq	r1, r1, r8, asr #2
   10d8c:	andeq	r1, r1, r8, asr #2
   10d90:	andeq	r1, r1, r8, asr #2
   10d94:	andeq	r1, r1, r8, asr #2
   10d98:	andeq	r1, r1, r8, asr #2
   10d9c:	andeq	r1, r1, r8, asr #2
   10da0:	andeq	r1, r1, r8, asr #2
   10da4:	andeq	r1, r1, r8, asr #2
   10da8:	andeq	r1, r1, r8, asr #2
   10dac:	andeq	r1, r1, r8, asr #2
   10db0:	andeq	r1, r1, r0, ror #1
   10db4:	andeq	r1, r1, r8, asr #2
   10db8:	andeq	r1, r1, r8, asr #2
   10dbc:	andeq	r1, r1, r8, asr #2
   10dc0:	andeq	r1, r1, r8, asr #2
   10dc4:	andeq	r1, r1, r8, asr #2
   10dc8:	andeq	r1, r1, r8, asr #2
   10dcc:	andeq	r1, r1, r8, asr #2
   10dd0:	andeq	r1, r1, r8, asr #2
   10dd4:	andeq	r1, r1, r8, asr #2
   10dd8:	andeq	r1, r1, r8, asr #2
   10ddc:	andeq	r1, r1, r8, asr #2
   10de0:	andeq	r1, r1, r8, asr #2
   10de4:	andeq	r1, r1, r8, asr #2
   10de8:	andeq	r1, r1, r8, asr #2
   10dec:	andeq	r1, r1, r8, asr #2
   10df0:	andeq	r1, r1, r8, asr #2
   10df4:	andeq	r1, r1, r8, asr #2
   10df8:	andeq	r1, r1, r8, asr #2
   10dfc:	andeq	r1, r1, r8, asr #2
   10e00:	andeq	r1, r1, r8, asr #2
   10e04:	andeq	r1, r1, r8, asr #2
   10e08:	andeq	r1, r1, r8, asr #2
   10e0c:	andeq	r1, r1, r8, asr #2
   10e10:	andeq	r1, r1, r8, asr #2
   10e14:	andeq	r1, r1, r8, asr #2
   10e18:	andeq	r1, r1, r8, asr #2
   10e1c:	andeq	r1, r1, r8, asr #2
   10e20:	andeq	r1, r1, r8, asr #2
   10e24:	andeq	r1, r1, r8, asr #2
   10e28:	andeq	r1, r1, r8, asr #2
   10e2c:	andeq	r1, r1, r8, asr #2
   10e30:	andeq	r1, r1, r8, asr #2
   10e34:	andeq	r1, r1, r8, asr #2
   10e38:	andeq	r1, r1, r8, asr #2
   10e3c:	andeq	r1, r1, r4, rrx
   10e40:	andeq	r1, r1, r8, asr #2
   10e44:	andeq	r1, r1, r8, asr #2
   10e48:	andeq	r1, r1, r8, asr #2
   10e4c:	andeq	r1, r1, r8, asr #2
   10e50:	andeq	r1, r1, r8, asr #2
   10e54:	andeq	r1, r1, r0, asr r0
   10e58:	andeq	r1, r1, r8, lsr r0
   10e5c:	andeq	r0, r1, r4, asr #31
   10e60:			; <UNDEFINED> instruction: 0x00010fb4
   10e64:	andeq	r1, r1, r8, asr #2
   10e68:	andeq	r1, r1, r8, asr #2
   10e6c:	andeq	r1, r1, r8, asr #2
   10e70:	andeq	r1, r1, r8, asr #2
   10e74:	andeq	r1, r1, r8, asr #2
   10e78:	andeq	r0, r1, ip, asr #30
   10e7c:	strdeq	r0, [r1], -r8
   10e80:	andeq	r0, r1, r4, lsl #29
   10e84:	cmp	r8, #0
   10e88:	sub	ip, ip, #1
   10e8c:	ldrne	r3, [sp, #8]
   10e90:	str	ip, [sp, #36]	; 0x24
   10e94:	strne	r3, [r6, #4]
   10e98:	ldr	r3, [sp, #16]
   10e9c:	cmp	r3, #0
   10ea0:	ldrne	r3, [sp, #12]
   10ea4:	strne	r3, [r6, #16]
   10ea8:	ldr	r3, [sp, #24]
   10eac:	cmp	r9, #0
   10eb0:	strne	fp, [r6, #20]
   10eb4:	cmp	r3, #0
   10eb8:	ldrne	r3, [sp, #20]
   10ebc:	strne	r3, [r6]
   10ec0:	ldr	r3, [sp, #32]
   10ec4:	cmp	r3, #0
   10ec8:	ldrne	r3, [sp, #28]
   10ecc:	strne	r3, [sl, #4]
   10ed0:	cmp	ip, #0
   10ed4:	ble	111bc <abort@plt+0x548>
   10ed8:	ldr	r0, [r4, #4]
   10edc:	mov	r2, #10
   10ee0:	mov	r1, #0
   10ee4:	bl	10af4 <strtol@plt>
   10ee8:	add	r4, r4, #4
   10eec:	ldr	r3, [sp, #36]	; 0x24
   10ef0:	str	r0, [sl, #8]
   10ef4:	b	10cdc <abort@plt+0x68>
   10ef8:	cmp	r8, #0
   10efc:	ldr	r0, [pc, #732]	; 111e0 <abort@plt+0x56c>
   10f00:	ldrne	r3, [sp, #8]
   10f04:	strne	r3, [r6, #4]
   10f08:	ldr	r3, [sp, #16]
   10f0c:	cmp	r3, #0
   10f10:	ldrne	r3, [sp, #12]
   10f14:	strne	r3, [r6, #16]
   10f18:	ldr	r3, [sp, #24]
   10f1c:	cmp	r9, #0
   10f20:	strne	fp, [r6, #20]
   10f24:	cmp	r3, #0
   10f28:	ldrne	r3, [sp, #20]
   10f2c:	strne	r3, [r6]
   10f30:	ldr	r3, [sp, #32]
   10f34:	cmp	r3, #0
   10f38:	ldrne	r3, [sp, #28]
   10f3c:	strne	r3, [sl, #4]
   10f40:	bl	10b78 <puts@plt>
   10f44:	mov	r0, #0
   10f48:	bl	10bb4 <exit@plt>
   10f4c:	mov	r2, #0
   10f50:	str	r2, [sp, #28]
   10f54:	mov	r2, #1
   10f58:	str	r2, [sp, #32]
   10f5c:	ldrb	r2, [r7, #1]!
   10f60:	add	lr, lr, #1
   10f64:	cmp	r2, #0
   10f68:	bne	10d58 <abort@plt+0xe4>
   10f6c:	cmp	r8, #0
   10f70:	ldrne	r2, [sp, #8]
   10f74:	strne	r2, [r6, #4]
   10f78:	ldr	r2, [sp, #16]
   10f7c:	cmp	r2, #0
   10f80:	ldrne	r2, [sp, #12]
   10f84:	strne	r2, [r6, #16]
   10f88:	ldr	r2, [sp, #24]
   10f8c:	cmp	r9, #0
   10f90:	strne	fp, [r6, #20]
   10f94:	cmp	r2, #0
   10f98:	ldrne	r2, [sp, #20]
   10f9c:	strne	r2, [r6]
   10fa0:	ldr	r2, [sp, #32]
   10fa4:	cmp	r2, #0
   10fa8:	ldrne	r2, [sp, #28]
   10fac:	strne	r2, [sl, #4]
   10fb0:	b	10cdc <abort@plt+0x68>
   10fb4:	mov	r2, #1
   10fb8:	str	r2, [sp, #24]
   10fbc:	str	r2, [sp, #20]
   10fc0:	b	10f5c <abort@plt+0x2e8>
   10fc4:	cmp	r8, #0
   10fc8:	sub	ip, ip, #1
   10fcc:	ldrne	r3, [sp, #8]
   10fd0:	str	ip, [sp, #36]	; 0x24
   10fd4:	strne	r3, [r6, #4]
   10fd8:	ldr	r3, [sp, #16]
   10fdc:	cmp	r3, #0
   10fe0:	ldrne	r3, [sp, #12]
   10fe4:	strne	r3, [r6, #16]
   10fe8:	ldr	r3, [sp, #24]
   10fec:	cmp	r9, #0
   10ff0:	strne	fp, [r6, #20]
   10ff4:	cmp	r3, #0
   10ff8:	ldrne	r3, [sp, #20]
   10ffc:	strne	r3, [r6]
   11000:	ldr	r3, [sp, #32]
   11004:	cmp	r3, #0
   11008:	ldrne	r3, [sp, #28]
   1100c:	strne	r3, [sl, #4]
   11010:	cmp	ip, #0
   11014:	ble	111cc <abort@plt+0x558>
   11018:	ldr	r0, [r4, #4]
   1101c:	mov	r2, #10
   11020:	mov	r1, #0
   11024:	bl	10af4 <strtol@plt>
   11028:	add	r4, r4, #4
   1102c:	ldr	r3, [sp, #36]	; 0x24
   11030:	str	r0, [r6, #20]
   11034:	b	10cdc <abort@plt+0x68>
   11038:	ldr	r2, [sp, #12]
   1103c:	add	r2, r2, #1
   11040:	str	r2, [sp, #12]
   11044:	mov	r2, #1
   11048:	str	r2, [sp, #16]
   1104c:	b	10f5c <abort@plt+0x2e8>
   11050:	ldr	r2, [sp, #8]
   11054:	mov	r8, #1
   11058:	add	r2, r2, #1
   1105c:	str	r2, [sp, #8]
   11060:	b	10f5c <abort@plt+0x2e8>
   11064:	cmp	r8, #0
   11068:	add	lr, r0, lr
   1106c:	ldrne	r3, [sp, #8]
   11070:	strne	r3, [r6, #4]
   11074:	ldr	r3, [sp, #16]
   11078:	cmp	r3, #0
   1107c:	ldrne	r3, [sp, #12]
   11080:	strne	r3, [r6, #16]
   11084:	ldr	r3, [sp, #24]
   11088:	cmp	r9, #0
   1108c:	strne	fp, [r6, #20]
   11090:	cmp	r3, #0
   11094:	ldrne	r3, [sp, #20]
   11098:	strne	r3, [r6]
   1109c:	ldr	r3, [sp, #32]
   110a0:	cmp	r3, #0
   110a4:	ldrne	r3, [sp, #28]
   110a8:	strne	r3, [sl, #4]
   110ac:	ldrb	r3, [lr, #1]
   110b0:	cmp	r3, #110	; 0x6e
   110b4:	bne	11114 <abort@plt+0x4a0>
   110b8:	sub	ip, ip, #1
   110bc:	cmp	ip, #0
   110c0:	str	ip, [sp, #36]	; 0x24
   110c4:	ble	111c4 <abort@plt+0x550>
   110c8:	ldr	r0, [r4, #4]
   110cc:	bl	115d8 <abort@plt+0x964>
   110d0:	add	r4, r4, #4
   110d4:	mov	r5, #1
   110d8:	ldr	r3, [sp, #36]	; 0x24
   110dc:	b	10cdc <abort@plt+0x68>
   110e0:	mov	fp, #0
   110e4:	mov	r9, #1
   110e8:	b	10f5c <abort@plt+0x2e8>
   110ec:	mov	r9, #1
   110f0:	mov	fp, r9
   110f4:	b	10f5c <abort@plt+0x2e8>
   110f8:	cmp	r5, #0
   110fc:	beq	1113c <abort@plt+0x4c8>
   11100:	bl	118a0 <abort@plt+0xc2c>
   11104:	bl	11480 <abort@plt+0x80c>
   11108:	mov	r0, #0
   1110c:	add	sp, sp, #44	; 0x2c
   11110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11114:	ldr	r2, [pc, #200]	; 111e4 <abort@plt+0x570>
   11118:	ldr	r3, [pc, #180]	; 111d4 <abort@plt+0x560>
   1111c:	str	r0, [sp]
   11120:	mov	r1, #1
   11124:	ldr	r0, [r2]
   11128:	ldr	r3, [r3]
   1112c:	ldr	r2, [pc, #180]	; 111e8 <abort@plt+0x574>
   11130:	bl	10c2c <__fprintf_chk@plt>
   11134:	mov	r0, #0
   11138:	bl	12610 <abort@plt+0x199c>
   1113c:	ldr	r0, [pc, #168]	; 111ec <abort@plt+0x578>
   11140:	bl	115d8 <abort@plt+0x964>
   11144:	b	11100 <abort@plt+0x48c>
   11148:	cmp	r8, #0
   1114c:	ldr	r1, [pc, #144]	; 111e4 <abort@plt+0x570>
   11150:	ldrne	r3, [sp, #8]
   11154:	str	r2, [sp]
   11158:	strne	r3, [r6, #4]
   1115c:	ldr	r3, [sp, #16]
   11160:	ldr	r0, [r1]
   11164:	cmp	r3, #0
   11168:	ldr	r2, [pc, #128]	; 111f0 <abort@plt+0x57c>
   1116c:	ldrne	r3, [sp, #12]
   11170:	mov	r1, #1
   11174:	strne	r3, [r6, #16]
   11178:	ldr	r3, [sp, #24]
   1117c:	cmp	r9, #0
   11180:	strne	fp, [r6, #20]
   11184:	cmp	r3, #0
   11188:	ldrne	r3, [sp, #20]
   1118c:	strne	r3, [r6]
   11190:	ldr	r3, [sp, #32]
   11194:	cmp	r3, #0
   11198:	ldrne	r3, [sp, #28]
   1119c:	strne	r3, [sl, #4]
   111a0:	ldr	r3, [pc, #44]	; 111d4 <abort@plt+0x560>
   111a4:	ldr	r3, [r3]
   111a8:	bl	10c2c <__fprintf_chk@plt>
   111ac:	mov	r0, #0
   111b0:	bl	12610 <abort@plt+0x199c>
   111b4:	ldr	r0, [pc, #56]	; 111f4 <abort@plt+0x580>
   111b8:	bl	12610 <abort@plt+0x199c>
   111bc:	ldr	r0, [pc, #52]	; 111f8 <abort@plt+0x584>
   111c0:	bl	12610 <abort@plt+0x199c>
   111c4:	ldr	r0, [pc, #48]	; 111fc <abort@plt+0x588>
   111c8:	bl	12610 <abort@plt+0x199c>
   111cc:	ldr	r0, [pc, #44]	; 11200 <abort@plt+0x58c>
   111d0:	bl	12610 <abort@plt+0x199c>
   111d4:	andeq	r4, r2, r8, lsr #1
   111d8:	andeq	r4, r2, ip, lsr #1
   111dc:	andeq	r4, r2, ip, asr #1
   111e0:	andeq	r3, r1, r4, asr r4
   111e4:	strheq	r4, [r2], -r8
   111e8:			; <UNDEFINED> instruction: 0x000133b8
   111ec:			; <UNDEFINED> instruction: 0x000133b4
   111f0:	andeq	r3, r1, r4, ror #8
   111f4:	ldrdeq	r3, [r1], -r8
   111f8:	andeq	r3, r1, r4, lsr #8
   111fc:	andeq	r3, r1, r8, lsl #8
   11200:	andeq	r3, r1, ip, lsr r4
   11204:	mov	fp, #0
   11208:	mov	lr, #0
   1120c:	pop	{r1}		; (ldr r1, [sp], #4)
   11210:	mov	r2, sp
   11214:	push	{r2}		; (str r2, [sp, #-4]!)
   11218:	push	{r0}		; (str r0, [sp, #-4]!)
   1121c:	ldr	ip, [pc, #16]	; 11234 <abort@plt+0x5c0>
   11220:	push	{ip}		; (str ip, [sp, #-4]!)
   11224:	ldr	r0, [pc, #12]	; 11238 <abort@plt+0x5c4>
   11228:	ldr	r3, [pc, #12]	; 1123c <abort@plt+0x5c8>
   1122c:	bl	10b84 <__libc_start_main@plt>
   11230:	bl	10c74 <abort@plt>
   11234:	andeq	r2, r1, r8, lsr fp
   11238:	andeq	r0, r1, r0, lsl #25
   1123c:	ldrdeq	r2, [r1], -r8
   11240:	ldr	r3, [pc, #20]	; 1125c <abort@plt+0x5e8>
   11244:	ldr	r2, [pc, #20]	; 11260 <abort@plt+0x5ec>
   11248:	add	r3, pc, r3
   1124c:	ldr	r2, [r3, r2]
   11250:	cmp	r2, #0
   11254:	bxeq	lr
   11258:	b	10ba8 <__gmon_start__@plt>
   1125c:			; <UNDEFINED> instruction: 0x00012db0
   11260:	muleq	r0, ip, r0
   11264:	ldr	r0, [pc, #24]	; 11284 <abort@plt+0x610>
   11268:	ldr	r3, [pc, #24]	; 11288 <abort@plt+0x614>
   1126c:	cmp	r3, r0
   11270:	bxeq	lr
   11274:	ldr	r3, [pc, #16]	; 1128c <abort@plt+0x618>
   11278:	cmp	r3, #0
   1127c:	bxeq	lr
   11280:	bx	r3
   11284:	strheq	r4, [r2], -r8
   11288:	strheq	r4, [r2], -r8
   1128c:	andeq	r0, r0, r0
   11290:	ldr	r0, [pc, #36]	; 112bc <abort@plt+0x648>
   11294:	ldr	r1, [pc, #36]	; 112c0 <abort@plt+0x64c>
   11298:	sub	r1, r1, r0
   1129c:	asr	r1, r1, #2
   112a0:	add	r1, r1, r1, lsr #31
   112a4:	asrs	r1, r1, #1
   112a8:	bxeq	lr
   112ac:	ldr	r3, [pc, #16]	; 112c4 <abort@plt+0x650>
   112b0:	cmp	r3, #0
   112b4:	bxeq	lr
   112b8:	bx	r3
   112bc:	strheq	r4, [r2], -r8
   112c0:	strheq	r4, [r2], -r8
   112c4:	andeq	r0, r0, r0
   112c8:	push	{r4, lr}
   112cc:	ldr	r4, [pc, #24]	; 112ec <abort@plt+0x678>
   112d0:	ldrb	r3, [r4]
   112d4:	cmp	r3, #0
   112d8:	popne	{r4, pc}
   112dc:	bl	11264 <abort@plt+0x5f0>
   112e0:	mov	r3, #1
   112e4:	strb	r3, [r4]
   112e8:	pop	{r4, pc}
   112ec:	andeq	r4, r2, r0, asr #1
   112f0:	b	11290 <abort@plt+0x61c>
   112f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112f8:	add	r8, r1, #4
   112fc:	ldr	r6, [r0]
   11300:	sub	sp, sp, #20
   11304:	cmp	r6, #1
   11308:	ble	11414 <abort@plt+0x7a0>
   1130c:	mov	r3, #0
   11310:	mov	r7, r0
   11314:	mov	r5, r1
   11318:	ldr	r9, [pc, #320]	; 11460 <abort@plt+0x7ec>
   1131c:	str	r3, [sp, #12]
   11320:	mov	sl, #1
   11324:	b	11364 <abort@plt+0x6f0>
   11328:	ldr	r1, [pc, #308]	; 11464 <abort@plt+0x7f0>
   1132c:	mov	r0, fp
   11330:	bl	10ae8 <strcmp@plt>
   11334:	cmp	r0, #0
   11338:	beq	11380 <abort@plt+0x70c>
   1133c:	ldr	r1, [pc, #292]	; 11468 <abort@plt+0x7f4>
   11340:	mov	r0, fp
   11344:	bl	10ae8 <strcmp@plt>
   11348:	cmp	r0, #0
   1134c:	beq	113dc <abort@plt+0x768>
   11350:	add	sl, sl, #1
   11354:	cmp	r6, sl
   11358:	str	fp, [r8]
   1135c:	add	r8, r8, #4
   11360:	ble	113ac <abort@plt+0x738>
   11364:	ldr	fp, [r5, sl, lsl #2]
   11368:	mov	r1, r9
   1136c:	mov	r0, fp
   11370:	bl	10ae8 <strcmp@plt>
   11374:	add	r4, r5, sl, lsl #2
   11378:	cmp	r0, #0
   1137c:	bne	11328 <abort@plt+0x6b4>
   11380:	add	sl, sl, #1
   11384:	cmp	r6, sl
   11388:	ble	11420 <abort@plt+0x7ac>
   1138c:	ldr	r3, [r7]
   11390:	ldr	r2, [r4, #4]
   11394:	add	sl, sl, #1
   11398:	sub	r3, r3, #2
   1139c:	cmp	r6, sl
   113a0:	str	r2, [sp, #12]
   113a4:	str	r3, [r7]
   113a8:	bgt	11364 <abort@plt+0x6f0>
   113ac:	mov	r3, #0
   113b0:	str	r3, [r8]
   113b4:	ldr	r0, [sp, #12]
   113b8:	bl	10b90 <XOpenDisplay@plt>
   113bc:	subs	r3, r0, #0
   113c0:	beq	11428 <abort@plt+0x7b4>
   113c4:	ldr	r4, [pc, #160]	; 1146c <abort@plt+0x7f8>
   113c8:	str	r3, [r4]
   113cc:	bl	10b60 <XDefaultScreen@plt>
   113d0:	str	r0, [r4, #4]
   113d4:	add	sp, sp, #20
   113d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113dc:	mov	r3, r4
   113e0:	cmp	sl, r6
   113e4:	mov	r4, fp
   113e8:	mov	fp, r3
   113ec:	bge	113ac <abort@plt+0x738>
   113f0:	sub	r3, r6, sl
   113f4:	mov	r2, fp
   113f8:	add	r3, r8, r3, lsl #2
   113fc:	b	11404 <abort@plt+0x790>
   11400:	ldr	r4, [r2, #4]!
   11404:	str	r4, [r8], #4
   11408:	cmp	r8, r3
   1140c:	bne	11400 <abort@plt+0x78c>
   11410:	b	113ac <abort@plt+0x738>
   11414:	mov	r3, #0
   11418:	str	r3, [sp, #12]
   1141c:	b	113ac <abort@plt+0x738>
   11420:	ldr	r0, [pc, #72]	; 11470 <abort@plt+0x7fc>
   11424:	bl	12610 <abort@plt+0x199c>
   11428:	ldr	r2, [pc, #68]	; 11474 <abort@plt+0x800>
   1142c:	ldr	r3, [pc, #68]	; 11478 <abort@plt+0x804>
   11430:	ldr	r0, [sp, #12]
   11434:	ldr	r4, [r2]
   11438:	ldr	r5, [r3]
   1143c:	bl	10bf0 <XDisplayName@plt>
   11440:	mov	r3, r5
   11444:	ldr	r2, [pc, #48]	; 1147c <abort@plt+0x808>
   11448:	mov	r1, #1
   1144c:	str	r0, [sp]
   11450:	mov	r0, r4
   11454:	bl	10c2c <__fprintf_chk@plt>
   11458:	mov	r0, #1
   1145c:	bl	10bb4 <exit@plt>
   11460:	andeq	r2, r1, r8, asr #22
   11464:	andeq	r2, r1, r4, asr fp
   11468:	andeq	r2, r1, r8, ror fp
   1146c:	andeq	r4, r2, r4, asr #1
   11470:	andeq	r2, r1, r8, asr fp
   11474:	strheq	r4, [r2], -r8
   11478:	andeq	r4, r2, r8, lsr #1
   1147c:	andeq	r2, r1, ip, ror fp
   11480:	push	{r4, lr}
   11484:	ldr	r4, [pc, #24]	; 114a4 <abort@plt+0x830>
   11488:	ldr	r0, [r4]
   1148c:	cmp	r0, #0
   11490:	popeq	{r4, pc}
   11494:	bl	10c50 <XCloseDisplay@plt>
   11498:	mov	r3, #0
   1149c:	str	r3, [r4]
   114a0:	pop	{r4, pc}
   114a4:	andeq	r4, r2, r4, asr #1
   114a8:	push	{r0, r1, r2, r3}
   114ac:	ldr	r3, [pc, #140]	; 11540 <abort@plt+0x8cc>
   114b0:	ldr	r2, [pc, #140]	; 11544 <abort@plt+0x8d0>
   114b4:	ldr	r4, [pc, #140]	; 11548 <abort@plt+0x8d4>
   114b8:	push	{lr}		; (str lr, [sp, #-4]!)
   114bc:	sub	sp, sp, #12
   114c0:	ldr	r3, [r3]
   114c4:	ldr	r0, [r2]
   114c8:	str	r3, [sp, #4]
   114cc:	ldr	r6, [sp, #16]
   114d0:	bl	10b0c <fflush@plt>
   114d4:	ldr	r0, [r4]
   114d8:	bl	10b0c <fflush@plt>
   114dc:	ldr	r3, [pc, #104]	; 1154c <abort@plt+0x8d8>
   114e0:	ldr	r2, [pc, #104]	; 11550 <abort@plt+0x8dc>
   114e4:	mov	r1, #1
   114e8:	ldr	r3, [r3]
   114ec:	ldr	r0, [r4]
   114f0:	bl	10c2c <__fprintf_chk@plt>
   114f4:	ldr	r5, [pc, #88]	; 11554 <abort@plt+0x8e0>
   114f8:	add	ip, sp, #20
   114fc:	mov	r2, r6
   11500:	mov	r3, ip
   11504:	mov	r1, #1
   11508:	ldr	r0, [r4]
   1150c:	str	ip, [sp]
   11510:	bl	10b9c <__vfprintf_chk@plt>
   11514:	ldr	r1, [r4]
   11518:	mov	r0, #10
   1151c:	bl	10c38 <fputc@plt>
   11520:	ldr	r0, [r5]
   11524:	cmp	r0, #0
   11528:	beq	11538 <abort@plt+0x8c4>
   1152c:	bl	10c50 <XCloseDisplay@plt>
   11530:	mov	r3, #0
   11534:	str	r3, [r5]
   11538:	mov	r0, #1
   1153c:	bl	10bb4 <exit@plt>
   11540:	andeq	r3, r2, r0, lsl #30
   11544:	strheq	r4, [r2], -ip
   11548:	strheq	r4, [r2], -r8
   1154c:	andeq	r4, r2, r8, lsr #1
   11550:	andeq	r2, r1, r0, lsr #23
   11554:	andeq	r4, r2, r4, asr #1
   11558:	ldr	ip, [r0]
   1155c:	ldr	r1, [r1]
   11560:	ldrb	r3, [ip]
   11564:	ldrb	r2, [r1]
   11568:	cmp	r3, #0
   1156c:	beq	115c4 <abort@plt+0x950>
   11570:	cmp	r2, #0
   11574:	sub	r0, r3, r2
   11578:	clz	r0, r0
   1157c:	lsr	r0, r0, #5
   11580:	moveq	r0, #0
   11584:	cmp	r0, #0
   11588:	movne	r3, r1
   1158c:	beq	115c4 <abort@plt+0x950>
   11590:	ldrb	r0, [ip, #1]!
   11594:	ldrb	r2, [r3, #1]!
   11598:	cmp	r0, #0
   1159c:	beq	115bc <abort@plt+0x948>
   115a0:	cmp	r2, #0
   115a4:	sub	r1, r0, r2
   115a8:	clz	r1, r1
   115ac:	lsr	r1, r1, #5
   115b0:	moveq	r1, #0
   115b4:	cmp	r1, #0
   115b8:	bne	11590 <abort@plt+0x91c>
   115bc:	sub	r0, r0, r2
   115c0:	bx	lr
   115c4:	mov	r0, r3
   115c8:	sub	r0, r0, r2
   115cc:	bx	lr
   115d0:	mov	r0, #0
   115d4:	bx	lr
   115d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115dc:	sub	sp, sp, #32
   115e0:	ldr	r4, [pc, #452]	; 117ac <abort@plt+0xb38>
   115e4:	ldr	r5, [pc, #452]	; 117b0 <abort@plt+0xb3c>
   115e8:	ldr	r9, [pc, #452]	; 117b4 <abort@plt+0xb40>
   115ec:	ldr	r3, [r4]
   115f0:	ldr	r2, [r5]
   115f4:	cmp	r3, #0
   115f8:	ldr	r3, [r9]
   115fc:	add	r1, r2, #1
   11600:	ldr	r7, [pc, #432]	; 117b8 <abort@plt+0xb44>
   11604:	str	r0, [sp, #12]
   11608:	mov	r6, r0
   1160c:	str	r1, [sp, #20]
   11610:	str	r3, [sp, #28]
   11614:	addeq	r8, sp, #24
   11618:	beq	11674 <abort@plt+0xa00>
   1161c:	b	116e4 <abort@plt+0xa70>
   11620:	add	r3, sp, #20
   11624:	mov	r1, r6
   11628:	bl	10b18 <XListFonts@plt>
   1162c:	mov	sl, r0
   11630:	cmp	sl, #0
   11634:	beq	116a0 <abort@plt+0xa2c>
   11638:	ldr	r2, [sp, #20]
   1163c:	ldr	r3, [r5]
   11640:	cmp	r2, r3
   11644:	blt	11718 <abort@plt+0xaa4>
   11648:	ldr	r3, [r4, #4]
   1164c:	mov	r0, sl
   11650:	cmp	r3, #1
   11654:	beq	116d8 <abort@plt+0xa64>
   11658:	bl	10ad0 <XFreeFontNames@plt>
   1165c:	ldr	r2, [sp, #20]
   11660:	ldr	r3, [r4]
   11664:	lsl	r2, r2, #1
   11668:	cmp	r3, #0
   1166c:	str	r2, [r5]
   11670:	bne	116e4 <abort@plt+0xa70>
   11674:	ldr	r3, [r4, #4]
   11678:	ldr	r0, [r7]
   1167c:	cmp	r3, #1
   11680:	bne	11620 <abort@plt+0x9ac>
   11684:	str	r8, [sp]
   11688:	add	r3, sp, #20
   1168c:	mov	r1, r6
   11690:	bl	10b6c <XListFontsWithInfo@plt>
   11694:	mov	sl, r0
   11698:	cmp	sl, #0
   1169c:	bne	11638 <abort@plt+0x9c4>
   116a0:	ldr	r2, [pc, #276]	; 117bc <abort@plt+0xb48>
   116a4:	ldr	r3, [pc, #276]	; 117c0 <abort@plt+0xb4c>
   116a8:	str	r6, [sp]
   116ac:	mov	r1, #1
   116b0:	ldr	r0, [r2]
   116b4:	ldr	r3, [r3]
   116b8:	ldr	r2, [pc, #260]	; 117c4 <abort@plt+0xb50>
   116bc:	bl	10c2c <__fprintf_chk@plt>
   116c0:	ldr	r2, [sp, #28]
   116c4:	ldr	r3, [r9]
   116c8:	cmp	r2, r3
   116cc:	bne	117a0 <abort@plt+0xb2c>
   116d0:	add	sp, sp, #32
   116d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116d8:	ldr	r1, [sp, #24]
   116dc:	bl	10c08 <XFreeFontInfo@plt>
   116e0:	b	1165c <abort@plt+0x9e8>
   116e4:	mov	r1, r6
   116e8:	ldr	r0, [r7]
   116ec:	bl	10b48 <XLoadQueryFont@plt>
   116f0:	cmp	r0, #0
   116f4:	str	r0, [sp, #24]
   116f8:	beq	116a0 <abort@plt+0xa2c>
   116fc:	ldr	r1, [r0, #4]
   11700:	mov	r3, #1
   11704:	ldr	r0, [r7]
   11708:	str	r3, [sp, #20]
   1170c:	bl	10b00 <XUnloadFont@plt>
   11710:	ldr	r2, [sp, #20]
   11714:	add	sl, sp, #12
   11718:	ldr	r5, [r4, #8]
   1171c:	ldr	r0, [r4, #12]
   11720:	add	r2, r5, r2
   11724:	lsl	r1, r2, #3
   11728:	bl	10b3c <realloc@plt>
   1172c:	cmp	r0, #0
   11730:	str	r0, [r4, #12]
   11734:	beq	117a4 <abort@plt+0xb30>
   11738:	ldr	r3, [sp, #20]
   1173c:	cmp	r3, #0
   11740:	ble	116c0 <abort@plt+0xa4c>
   11744:	add	r0, r0, r5, lsl #3
   11748:	mov	r3, #0
   1174c:	ldr	lr, [r4, #4]
   11750:	sub	sl, sl, #4
   11754:	add	r5, r5, #1
   11758:	mov	r2, r0
   1175c:	mov	r6, r3
   11760:	ldr	r1, [sl, #4]!
   11764:	cmp	lr, #1
   11768:	str	r1, [r0, r3, lsl #3]
   1176c:	addeq	r1, r3, r3, lsl #2
   11770:	ldreq	ip, [sp, #24]
   11774:	strne	r6, [r2, #4]
   11778:	addeq	r1, ip, r1, lsl #4
   1177c:	streq	r1, [r2, #4]
   11780:	ldr	r1, [sp, #20]
   11784:	add	ip, r5, r3
   11788:	add	r3, r3, #1
   1178c:	cmp	r1, r3
   11790:	add	r2, r2, #8
   11794:	bgt	11760 <abort@plt+0xaec>
   11798:	str	ip, [r4, #8]
   1179c:	b	116c0 <abort@plt+0xa4c>
   117a0:	bl	10b24 <__stack_chk_fail@plt>
   117a4:	ldr	r0, [pc, #28]	; 117c8 <abort@plt+0xb54>
   117a8:	bl	114a8 <abort@plt+0x834>
   117ac:	andeq	r4, r2, ip, asr #1
   117b0:	andeq	r4, r2, ip, lsr #1
   117b4:	andeq	r3, r2, r0, lsl #30
   117b8:	andeq	r4, r2, r4, asr #1
   117bc:	strheq	r4, [r2], -r8
   117c0:	andeq	r4, r2, r8, lsr #1
   117c4:	andeq	r2, r1, ip, lsr #24
   117c8:	andeq	r2, r1, r8, asr #24
   117cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117d0:	sub	sp, sp, #8
   117d4:	ldr	r5, [r0]
   117d8:	ldr	r4, [r1]
   117dc:	mov	r9, r3
   117e0:	mov	r8, r0
   117e4:	mov	r7, r1
   117e8:	mov	sl, r2
   117ec:	str	r2, [sp]
   117f0:	mov	r0, r5
   117f4:	ldr	r3, [pc, #156]	; 11898 <abort@plt+0xc24>
   117f8:	mvn	r2, #0
   117fc:	mov	r1, #1
   11800:	bl	10be4 <__sprintf_chk@plt>
   11804:	ldr	r3, [pc, #140]	; 11898 <abort@plt+0xc24>
   11808:	mvn	r2, #0
   1180c:	mov	r1, #1
   11810:	str	r9, [sp]
   11814:	mov	r0, r4
   11818:	bl	10be4 <__sprintf_chk@plt>
   1181c:	mov	r0, r5
   11820:	bl	10bc0 <strlen@plt>
   11824:	mov	r6, r0
   11828:	mov	r0, r4
   1182c:	bl	10bc0 <strlen@plt>
   11830:	str	sl, [sp, #4]
   11834:	ldr	r3, [pc, #96]	; 1189c <abort@plt+0xc28>
   11838:	mvn	r2, #0
   1183c:	mov	r1, #1
   11840:	cmp	r6, r0
   11844:	movcc	r6, r0
   11848:	str	r6, [sp]
   1184c:	mov	r0, r5
   11850:	bl	10be4 <__sprintf_chk@plt>
   11854:	ldr	r3, [pc, #64]	; 1189c <abort@plt+0xc28>
   11858:	mvn	r2, #0
   1185c:	mov	r1, #1
   11860:	stm	sp, {r6, r9}
   11864:	mov	r0, r4
   11868:	bl	10be4 <__sprintf_chk@plt>
   1186c:	mov	r0, r5
   11870:	bl	10bc0 <strlen@plt>
   11874:	mov	r6, r0
   11878:	mov	r0, r4
   1187c:	bl	10bc0 <strlen@plt>
   11880:	add	r5, r5, r6
   11884:	str	r5, [r8]
   11888:	add	r0, r4, r0
   1188c:	str	r0, [r7]
   11890:	add	sp, sp, #8
   11894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11898:	andeq	r2, r1, r8, asr ip
   1189c:	andeq	r2, r1, ip, asr ip
   118a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118a4:	sub	sp, sp, #16384	; 0x4000
   118a8:	ldr	fp, [pc, #3112]	; 124d8 <abort@plt+0x1864>
   118ac:	ldr	r3, [pc, #3112]	; 124dc <abort@plt+0x1868>
   118b0:	sub	sp, sp, #60	; 0x3c
   118b4:	add	r2, sp, #16384	; 0x4000
   118b8:	ldr	r1, [fp, #8]
   118bc:	ldr	r3, [r3]
   118c0:	add	r2, r2, #52	; 0x34
   118c4:	cmp	r1, #0
   118c8:	str	r3, [r2]
   118cc:	beq	11b74 <abort@plt+0xf00>
   118d0:	ldr	r6, [pc, #3080]	; 124e0 <abort@plt+0x186c>
   118d4:	ldr	r3, [r6, #4]
   118d8:	cmp	r3, #0
   118dc:	bne	12058 <abort@plt+0x13e4>
   118e0:	ldr	r4, [fp, #4]
   118e4:	cmp	r4, #1
   118e8:	ble	11ad8 <abort@plt+0xe64>
   118ec:	ldr	r3, [fp, #8]
   118f0:	cmp	r3, #0
   118f4:	ble	11b74 <abort@plt+0xf00>
   118f8:	mov	r3, #0
   118fc:	str	r3, [sp, #36]	; 0x24
   11900:	ldr	r2, [pc, #3036]	; 124e4 <abort@plt+0x1870>
   11904:	ldr	r3, [fp, #12]
   11908:	ldr	r0, [r2]
   1190c:	ldr	r2, [sp, #36]	; 0x24
   11910:	ldr	r4, [r3, r2, lsl #3]
   11914:	mov	r1, r4
   11918:	bl	10b48 <XLoadQueryFont@plt>
   1191c:	subs	r5, r0, #0
   11920:	beq	12028 <abort@plt+0x13b4>
   11924:	cmp	r4, #0
   11928:	ldr	r2, [pc, #3000]	; 124e8 <abort@plt+0x1874>
   1192c:	ldr	r1, [pc, #3000]	; 124ec <abort@plt+0x1878>
   11930:	movne	r2, r4
   11934:	mov	r0, #1
   11938:	bl	10c20 <__printf_chk@plt>
   1193c:	ldr	r2, [r5, #8]
   11940:	ldr	r0, [pc, #2984]	; 124f0 <abort@plt+0x187c>
   11944:	ldr	r3, [pc, #2984]	; 124f4 <abort@plt+0x1880>
   11948:	cmp	r2, #0
   1194c:	moveq	r3, r0
   11950:	mov	r2, r3
   11954:	ldr	r1, [pc, #2972]	; 124f8 <abort@plt+0x1884>
   11958:	mov	r0, #1
   1195c:	bl	10c20 <__printf_chk@plt>
   11960:	ldr	r3, [r5, #20]
   11964:	cmp	r3, #0
   11968:	bne	11b9c <abort@plt+0xf28>
   1196c:	ldr	r1, [r5, #24]
   11970:	ldr	r3, [pc, #2948]	; 124fc <abort@plt+0x1888>
   11974:	cmp	r1, #0
   11978:	ldr	r2, [pc, #2944]	; 12500 <abort@plt+0x188c>
   1197c:	moveq	r2, r3
   11980:	ldr	r1, [pc, #2940]	; 12504 <abort@plt+0x1890>
   11984:	mov	r0, #1
   11988:	bl	10c20 <__printf_chk@plt>
   1198c:	ldr	r1, [r5, #20]
   11990:	ldr	r3, [r5, #24]
   11994:	mov	r2, r1
   11998:	mov	r0, #1
   1199c:	stm	sp, {r1, r3}
   119a0:	ldr	r1, [pc, #2912]	; 12508 <abort@plt+0x1894>
   119a4:	bl	10c20 <__printf_chk@plt>
   119a8:	ldr	r1, [r5, #12]
   119ac:	ldr	r3, [r5, #16]
   119b0:	mov	r2, r1
   119b4:	mov	r0, #1
   119b8:	stm	sp, {r1, r3}
   119bc:	ldr	r1, [pc, #2888]	; 1250c <abort@plt+0x1898>
   119c0:	bl	10c20 <__printf_chk@plt>
   119c4:	ldr	r0, [r5, #28]
   119c8:	ldr	r3, [pc, #2880]	; 12510 <abort@plt+0x189c>
   119cc:	cmp	r0, #0
   119d0:	ldr	r2, [pc, #2876]	; 12514 <abort@plt+0x18a0>
   119d4:	ldr	r1, [pc, #2876]	; 12518 <abort@plt+0x18a4>
   119d8:	movne	r2, r3
   119dc:	mov	r0, #1
   119e0:	bl	10c20 <__printf_chk@plt>
   119e4:	ldr	r3, [r5, #32]
   119e8:	ldr	r1, [pc, #2860]	; 1251c <abort@plt+0x18a8>
   119ec:	mov	r2, r3
   119f0:	mov	r0, #1
   119f4:	bl	10c20 <__printf_chk@plt>
   119f8:	ldr	r2, [r5, #72]	; 0x48
   119fc:	ldr	r1, [pc, #2844]	; 12520 <abort@plt+0x18ac>
   11a00:	mov	r0, #1
   11a04:	bl	10c20 <__printf_chk@plt>
   11a08:	ldr	r2, [r5, #76]	; 0x4c
   11a0c:	ldr	r1, [pc, #2832]	; 12524 <abort@plt+0x18b0>
   11a10:	mov	r0, #1
   11a14:	bl	10c20 <__printf_chk@plt>
   11a18:	ldr	r3, [pc, #2756]	; 124e4 <abort@plt+0x1870>
   11a1c:	mov	r2, #0
   11a20:	ldr	r1, [pc, #2816]	; 12528 <abort@plt+0x18b4>
   11a24:	ldr	r0, [r3]
   11a28:	bl	10bd8 <XInternAtom@plt>
   11a2c:	ldr	r1, [pc, #2808]	; 1252c <abort@plt+0x18b8>
   11a30:	mov	r4, r0
   11a34:	mov	r0, #1
   11a38:	bl	10c20 <__printf_chk@plt>
   11a3c:	ldrsh	ip, [r5, #48]	; 0x30
   11a40:	ldrsh	r3, [r5, #60]	; 0x3c
   11a44:	cmp	r3, ip
   11a48:	bne	11cac <abort@plt+0x1038>
   11a4c:	cmp	r4, #0
   11a50:	ldr	r3, [r5, #68]	; 0x44
   11a54:	beq	11ba4 <abort@plt+0xf30>
   11a58:	ldr	lr, [r5, #36]	; 0x24
   11a5c:	cmp	lr, #0
   11a60:	addgt	r6, ip, ip, lsl #2
   11a64:	ldrgt	r0, [r5, #40]	; 0x28
   11a68:	lslgt	r6, r6, #1
   11a6c:	movgt	r2, #0
   11a70:	bgt	11a84 <abort@plt+0xe10>
   11a74:	b	11ba4 <abort@plt+0xf30>
   11a78:	add	r2, r2, #1
   11a7c:	cmp	r2, lr
   11a80:	beq	11ba4 <abort@plt+0xf30>
   11a84:	ldr	r1, [r0, r2, lsl #3]
   11a88:	cmp	r4, r1
   11a8c:	bne	11a78 <abort@plt+0xe04>
   11a90:	add	r1, r0, r2, lsl #3
   11a94:	ldr	r1, [r1, #4]
   11a98:	cmp	r1, r6
   11a9c:	beq	11a78 <abort@plt+0xe04>
   11aa0:	cmp	r3, #0
   11aa4:	beq	11ac0 <abort@plt+0xe4c>
   11aa8:	ldr	r1, [r5, #12]
   11aac:	ldr	r2, [r5, #16]
   11ab0:	cmp	r1, r2
   11ab4:	movls	r6, #0
   11ab8:	ldrls	r4, [pc, #2672]	; 12530 <abort@plt+0x18bc>
   11abc:	bls	11bc4 <abort@plt+0xf50>
   11ac0:	ldr	r2, [pc, #2668]	; 12534 <abort@plt+0x18c0>
   11ac4:	ldr	r1, [pc, #2668]	; 12538 <abort@plt+0x18c4>
   11ac8:	mov	r0, #1
   11acc:	bl	10c20 <__printf_chk@plt>
   11ad0:	ldr	r4, [pc, #2648]	; 12530 <abort@plt+0x18bc>
   11ad4:	b	11c90 <abort@plt+0x101c>
   11ad8:	beq	12134 <abort@plt+0x14c0>
   11adc:	ldr	r9, [fp, #20]
   11ae0:	cmp	r9, #0
   11ae4:	beq	1206c <abort@plt+0x13f8>
   11ae8:	cmp	r9, #1
   11aec:	ble	11b50 <abort@plt+0xedc>
   11af0:	ldr	r7, [fp, #8]
   11af4:	cmp	r7, #0
   11af8:	movgt	r5, #0
   11afc:	ldrgt	r8, [fp, #12]
   11b00:	movgt	r4, r5
   11b04:	ble	124c8 <abort@plt+0x1854>
   11b08:	ldr	r0, [r8, r4, lsl #3]
   11b0c:	bl	10bc0 <strlen@plt>
   11b10:	add	r4, r4, #1
   11b14:	cmp	r5, r0
   11b18:	movlt	r5, r0
   11b1c:	cmp	r4, r7
   11b20:	bne	11b08 <abort@plt+0xe94>
   11b24:	cmp	r5, #0
   11b28:	beq	124c8 <abort@plt+0x1854>
   11b2c:	cmp	r9, #0
   11b30:	bne	12080 <abort@plt+0x140c>
   11b34:	ldr	r0, [r6, #8]
   11b38:	lsl	r3, r5, #1
   11b3c:	add	r3, r3, #3
   11b40:	cmp	r3, r0
   11b44:	movgt	r3, #1
   11b48:	strgt	r3, [fp, #20]
   11b4c:	ble	122bc <abort@plt+0x1648>
   11b50:	mov	r4, #0
   11b54:	b	11b68 <abort@plt+0xef4>
   11b58:	ldr	r3, [fp, #12]
   11b5c:	ldr	r0, [r3, r4, lsl #3]
   11b60:	bl	10b78 <puts@plt>
   11b64:	add	r4, r4, #1
   11b68:	ldr	r3, [fp, #8]
   11b6c:	cmp	r3, r4
   11b70:	bgt	11b58 <abort@plt+0xee4>
   11b74:	add	r3, sp, #16384	; 0x4000
   11b78:	add	r3, r3, #52	; 0x34
   11b7c:	ldr	r2, [r3]
   11b80:	ldr	r3, [pc, #2388]	; 124dc <abort@plt+0x1868>
   11b84:	ldr	r3, [r3]
   11b88:	cmp	r2, r3
   11b8c:	bne	124d4 <abort@plt+0x1860>
   11b90:	add	sp, sp, #16384	; 0x4000
   11b94:	add	sp, sp, #60	; 0x3c
   11b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b9c:	ldr	r2, [pc, #2396]	; 12500 <abort@plt+0x188c>
   11ba0:	b	11980 <abort@plt+0xd0c>
   11ba4:	cmp	r3, #0
   11ba8:	beq	12014 <abort@plt+0x13a0>
   11bac:	ldr	r1, [r5, #12]
   11bb0:	ldr	r2, [r5, #16]
   11bb4:	cmp	r1, r2
   11bb8:	movls	r4, #0
   11bbc:	movls	r6, #1
   11bc0:	bhi	12014 <abort@plt+0x13a0>
   11bc4:	ldr	r8, [pc, #2416]	; 1253c <abort@plt+0x18c8>
   11bc8:	ldr	r7, [pc, #2416]	; 12540 <abort@plt+0x18cc>
   11bcc:	b	11bf4 <abort@plt+0xf80>
   11bd0:	ldrsh	lr, [r3, #8]
   11bd4:	ldr	r0, [r5, #76]	; 0x4c
   11bd8:	cmp	lr, r0
   11bdc:	movgt	r4, r8
   11be0:	movgt	r6, #0
   11be4:	add	r1, r1, #1
   11be8:	cmp	r2, r1
   11bec:	add	r3, r3, #12
   11bf0:	bcc	11c6c <abort@plt+0xff8>
   11bf4:	ldrsh	r0, [r3, #4]
   11bf8:	cmp	r0, #0
   11bfc:	beq	11be4 <abort@plt+0xf70>
   11c00:	cmp	ip, r0
   11c04:	bne	1204c <abort@plt+0x13d8>
   11c08:	cmp	r6, #0
   11c0c:	beq	11be4 <abort@plt+0xf70>
   11c10:	cmp	ip, #0
   11c14:	ldrsh	r0, [r3]
   11c18:	blt	11f08 <abort@plt+0x1294>
   11c1c:	cmp	r0, #0
   11c20:	blt	11efc <abort@plt+0x1288>
   11c24:	ldrsh	lr, [r3, #2]
   11c28:	cmp	ip, lr
   11c2c:	cmpge	lr, r0
   11c30:	movlt	lr, #1
   11c34:	movge	lr, #0
   11c38:	cmp	lr, #0
   11c3c:	movne	r4, r7
   11c40:	movne	r6, #0
   11c44:	ldrsh	lr, [r3, #6]
   11c48:	ldr	r0, [r5, #72]	; 0x48
   11c4c:	cmp	lr, r0
   11c50:	ble	11bd0 <abort@plt+0xf5c>
   11c54:	add	r1, r1, #1
   11c58:	cmp	r2, r1
   11c5c:	ldr	r4, [pc, #2264]	; 1253c <abort@plt+0x18c8>
   11c60:	mov	r6, #0
   11c64:	add	r3, r3, #12
   11c68:	bcs	11bf4 <abort@plt+0xf80>
   11c6c:	ldr	r3, [pc, #2256]	; 12544 <abort@plt+0x18d0>
   11c70:	cmp	r6, #0
   11c74:	ldr	r2, [pc, #2232]	; 12534 <abort@plt+0x18c0>
   11c78:	ldr	r1, [pc, #2232]	; 12538 <abort@plt+0x18c4>
   11c7c:	movne	r2, r3
   11c80:	mov	r0, #1
   11c84:	bl	10c20 <__printf_chk@plt>
   11c88:	cmp	r4, #0
   11c8c:	beq	11ca0 <abort@plt+0x102c>
   11c90:	mov	r2, r4
   11c94:	ldr	r1, [pc, #2220]	; 12548 <abort@plt+0x18d4>
   11c98:	mov	r0, #1
   11c9c:	bl	10c20 <__printf_chk@plt>
   11ca0:	mov	r0, #10
   11ca4:	bl	10bfc <putchar@plt>
   11ca8:	b	11cb4 <abort@plt+0x1040>
   11cac:	ldr	r0, [pc, #2200]	; 1254c <abort@plt+0x18d8>
   11cb0:	bl	10b78 <puts@plt>
   11cb4:	ldr	r2, [pc, #2196]	; 12550 <abort@plt+0x18dc>
   11cb8:	ldr	r1, [pc, #2196]	; 12554 <abort@plt+0x18e0>
   11cbc:	mov	r0, #1
   11cc0:	bl	10c20 <__printf_chk@plt>
   11cc4:	ldrh	r1, [r5, #54]	; 0x36
   11cc8:	ldrsh	r3, [r5, #48]	; 0x30
   11ccc:	ldr	r2, [pc, #2180]	; 12558 <abort@plt+0x18e4>
   11cd0:	str	r1, [sp, #16]
   11cd4:	ldrsh	r0, [r5, #52]	; 0x34
   11cd8:	ldr	r1, [pc, #2172]	; 1255c <abort@plt+0x18e8>
   11cdc:	str	r0, [sp, #12]
   11ce0:	ldrsh	ip, [r5, #50]	; 0x32
   11ce4:	mov	r0, #1
   11ce8:	str	ip, [sp, #8]
   11cec:	ldrsh	ip, [r5, #46]	; 0x2e
   11cf0:	str	ip, [sp, #4]
   11cf4:	ldrsh	ip, [r5, #44]	; 0x2c
   11cf8:	str	ip, [sp]
   11cfc:	bl	10c20 <__printf_chk@plt>
   11d00:	ldrh	r1, [r5, #66]	; 0x42
   11d04:	ldrsh	r3, [r5, #60]	; 0x3c
   11d08:	ldr	r2, [pc, #2128]	; 12560 <abort@plt+0x18ec>
   11d0c:	str	r1, [sp, #16]
   11d10:	ldrsh	r0, [r5, #64]	; 0x40
   11d14:	ldr	r1, [pc, #2112]	; 1255c <abort@plt+0x18e8>
   11d18:	str	r0, [sp, #12]
   11d1c:	ldrsh	ip, [r5, #62]	; 0x3e
   11d20:	mov	r0, #1
   11d24:	str	ip, [sp, #8]
   11d28:	ldrsh	ip, [r5, #58]	; 0x3a
   11d2c:	str	ip, [sp, #4]
   11d30:	ldrsh	ip, [r5, #56]	; 0x38
   11d34:	str	ip, [sp]
   11d38:	bl	10c20 <__printf_chk@plt>
   11d3c:	ldr	r8, [r5, #68]	; 0x44
   11d40:	cmp	r8, #0
   11d44:	beq	11d54 <abort@plt+0x10e0>
   11d48:	ldr	r3, [fp, #4]
   11d4c:	cmp	r3, #2
   11d50:	bgt	11f38 <abort@plt+0x12c4>
   11d54:	ldr	r2, [r5, #36]	; 0x24
   11d58:	ldr	r1, [pc, #2052]	; 12564 <abort@plt+0x18f0>
   11d5c:	mov	r0, #1
   11d60:	bl	10c20 <__printf_chk@plt>
   11d64:	ldr	r3, [r5, #36]	; 0x24
   11d68:	cmp	r3, #0
   11d6c:	ble	11e68 <abort@plt+0x11f4>
   11d70:	ldr	r6, [pc, #2032]	; 12568 <abort@plt+0x18f4>
   11d74:	mov	r7, #0
   11d78:	ldr	r0, [pc, #2028]	; 1256c <abort@plt+0x18f8>
   11d7c:	ldr	sl, [r5, #40]	; 0x28
   11d80:	bl	10bcc <XSetErrorHandler@plt>
   11d84:	ldr	r3, [pc, #1880]	; 124e4 <abort@plt+0x1870>
   11d88:	ldr	r1, [sl, r7, lsl #3]
   11d8c:	add	r8, sl, r7, lsl #3
   11d90:	mov	r9, r0
   11d94:	ldr	r0, [r3]
   11d98:	bl	10c14 <XGetAtomName@plt>
   11d9c:	subs	r4, r0, #0
   11da0:	beq	11eb0 <abort@plt+0x123c>
   11da4:	mov	r2, r4
   11da8:	ldr	r1, [pc, #1984]	; 12570 <abort@plt+0x18fc>
   11dac:	mov	r0, #1
   11db0:	bl	10c20 <__printf_chk@plt>
   11db4:	mov	r0, r4
   11db8:	bl	10bc0 <strlen@plt>
   11dbc:	cmp	r0, #20
   11dc0:	mov	sl, r0
   11dc4:	bhi	11de0 <abort@plt+0x116c>
   11dc8:	add	sl, sl, #1
   11dcc:	ldr	r1, [r6]
   11dd0:	mov	r0, #32
   11dd4:	bl	10b54 <_IO_putc@plt>
   11dd8:	cmp	sl, #21
   11ddc:	bne	11dc8 <abort@plt+0x1154>
   11de0:	ldr	r1, [r6]
   11de4:	mov	r0, #32
   11de8:	bl	10b54 <_IO_putc@plt>
   11dec:	ldr	sl, [pc, #1920]	; 12574 <abort@plt+0x1900>
   11df0:	ldr	r0, [pc, #1920]	; 12578 <abort@plt+0x1904>
   11df4:	b	11e04 <abort@plt+0x1190>
   11df8:	ldr	r0, [sl], #4
   11dfc:	cmp	r0, #0
   11e00:	beq	11e9c <abort@plt+0x1228>
   11e04:	mov	r1, r4
   11e08:	bl	10ae8 <strcmp@plt>
   11e0c:	cmp	r0, #0
   11e10:	bne	11df8 <abort@plt+0x1184>
   11e14:	ldr	r3, [pc, #1736]	; 124e4 <abort@plt+0x1870>
   11e18:	ldr	r1, [r8, #4]
   11e1c:	ldr	r0, [r3]
   11e20:	bl	10c14 <XGetAtomName@plt>
   11e24:	subs	sl, r0, #0
   11e28:	beq	11ee8 <abort@plt+0x1274>
   11e2c:	bl	10b78 <puts@plt>
   11e30:	mov	r0, sl
   11e34:	bl	10b30 <XFree@plt>
   11e38:	add	r3, sp, #8192	; 0x2000
   11e3c:	add	r3, r3, #52	; 0x34
   11e40:	cmp	r4, r3
   11e44:	beq	11e50 <abort@plt+0x11dc>
   11e48:	mov	r0, r4
   11e4c:	bl	10b30 <XFree@plt>
   11e50:	mov	r0, r9
   11e54:	bl	10bcc <XSetErrorHandler@plt>
   11e58:	ldr	r3, [r5, #36]	; 0x24
   11e5c:	add	r7, r7, #1
   11e60:	cmp	r7, r3
   11e64:	blt	11d78 <abort@plt+0x1104>
   11e68:	mov	r0, #10
   11e6c:	bl	10bfc <putchar@plt>
   11e70:	mov	r1, r5
   11e74:	mov	r2, #1
   11e78:	mov	r0, #0
   11e7c:	bl	10c08 <XFreeFontInfo@plt>
   11e80:	ldr	r2, [sp, #36]	; 0x24
   11e84:	ldr	r3, [fp, #8]
   11e88:	add	r2, r2, #1
   11e8c:	cmp	r3, r2
   11e90:	str	r2, [sp, #36]	; 0x24
   11e94:	bgt	11900 <abort@plt+0xc8c>
   11e98:	b	11b74 <abort@plt+0xf00>
   11e9c:	ldr	r2, [r8, #4]
   11ea0:	ldr	r1, [pc, #1748]	; 1257c <abort@plt+0x1908>
   11ea4:	mov	r0, #1
   11ea8:	bl	10c20 <__printf_chk@plt>
   11eac:	b	11e38 <abort@plt+0x11c4>
   11eb0:	add	r3, sp, #8192	; 0x2000
   11eb4:	add	r3, r3, #52	; 0x34
   11eb8:	strb	r4, [r3]
   11ebc:	ldr	r2, [sl, r7, lsl #3]
   11ec0:	add	r0, sp, #8192	; 0x2000
   11ec4:	str	r2, [sp]
   11ec8:	ldr	r3, [pc, #1712]	; 12580 <abort@plt+0x190c>
   11ecc:	mov	r2, #40	; 0x28
   11ed0:	mov	r1, #1
   11ed4:	add	r0, r0, #52	; 0x34
   11ed8:	add	r4, sp, #8192	; 0x2000
   11edc:	bl	10be4 <__sprintf_chk@plt>
   11ee0:	add	r4, r4, #52	; 0x34
   11ee4:	b	11da4 <abort@plt+0x1130>
   11ee8:	ldr	r2, [r8, #4]
   11eec:	ldr	r1, [pc, #1680]	; 12584 <abort@plt+0x1910>
   11ef0:	mov	r0, #1
   11ef4:	bl	10c20 <__printf_chk@plt>
   11ef8:	b	11e38 <abort@plt+0x11c4>
   11efc:	ldr	r4, [pc, #1596]	; 12540 <abort@plt+0x18cc>
   11f00:	mov	r6, #0
   11f04:	b	11c44 <abort@plt+0xfd0>
   11f08:	cmp	ip, r0
   11f0c:	bgt	11efc <abort@plt+0x1288>
   11f10:	ldrsh	lr, [r3, #2]
   11f14:	cmp	lr, r0
   11f18:	movge	r0, #0
   11f1c:	movlt	r0, #1
   11f20:	cmp	lr, #0
   11f24:	orrgt	r0, r0, #1
   11f28:	cmp	r0, #0
   11f2c:	movne	r4, r7
   11f30:	movne	r6, #0
   11f34:	b	11c44 <abort@plt+0xfd0>
   11f38:	ldr	r0, [pc, #1608]	; 12588 <abort@plt+0x1914>
   11f3c:	bl	10b78 <puts@plt>
   11f40:	ldr	r3, [r5, #20]
   11f44:	ldr	r2, [r5, #24]
   11f48:	ldr	r6, [r5, #12]
   11f4c:	mov	r9, r3
   11f50:	cmp	r3, r2
   11f54:	orr	r3, r6, r3, lsl #8
   11f58:	str	r3, [sp, #32]
   11f5c:	bhi	11d54 <abort@plt+0x10e0>
   11f60:	ldr	r3, [r5, #16]
   11f64:	ldr	sl, [pc, #1568]	; 1258c <abort@plt+0x1918>
   11f68:	cmp	r6, r3
   11f6c:	bhi	11ff4 <abort@plt+0x1380>
   11f70:	ldr	r7, [sp, #32]
   11f74:	add	r4, r8, #12
   11f78:	mov	r0, r7
   11f7c:	bl	10c68 <XKeysymToString@plt>
   11f80:	ldrsh	r3, [r4, #-8]
   11f84:	ldrsh	r2, [r4, #-12]
   11f88:	ldrsh	r1, [r4, #-10]
   11f8c:	ldrsh	r8, [r4, #-6]
   11f90:	ldrsh	lr, [r4, #-4]
   11f94:	ldrh	ip, [r4, #-2]
   11f98:	str	r8, [sp, #16]
   11f9c:	str	r1, [sp, #12]
   11fa0:	str	r2, [sp, #8]
   11fa4:	str	r3, [sp, #4]
   11fa8:	str	r7, [sp]
   11fac:	mov	r3, r6
   11fb0:	str	lr, [sp, #20]
   11fb4:	str	ip, [sp, #24]
   11fb8:	mov	r2, r9
   11fbc:	ldr	r1, [pc, #1484]	; 12590 <abort@plt+0x191c>
   11fc0:	add	r6, r6, #1
   11fc4:	mov	r8, r4
   11fc8:	add	r7, r7, #1
   11fcc:	add	r4, r4, #12
   11fd0:	cmp	r0, #0
   11fd4:	moveq	r0, sl
   11fd8:	str	r0, [sp, #28]
   11fdc:	mov	r0, #1
   11fe0:	bl	10c20 <__printf_chk@plt>
   11fe4:	ldr	r3, [r5, #16]
   11fe8:	cmp	r3, r6
   11fec:	bcs	11f78 <abort@plt+0x1304>
   11ff0:	ldr	r2, [r5, #24]
   11ff4:	ldr	r1, [sp, #32]
   11ff8:	add	r9, r9, #1
   11ffc:	add	r1, r1, #256	; 0x100
   12000:	cmp	r2, r9
   12004:	str	r1, [sp, #32]
   12008:	bcc	11d54 <abort@plt+0x10e0>
   1200c:	ldr	r6, [r5, #12]
   12010:	b	11f68 <abort@plt+0x12f4>
   12014:	ldr	r2, [pc, #1320]	; 12544 <abort@plt+0x18d0>
   12018:	ldr	r1, [pc, #1304]	; 12538 <abort@plt+0x18c4>
   1201c:	mov	r0, #1
   12020:	bl	10c20 <__printf_chk@plt>
   12024:	b	11ca0 <abort@plt+0x102c>
   12028:	ldr	r2, [pc, #1380]	; 12594 <abort@plt+0x1920>
   1202c:	ldr	r3, [pc, #1380]	; 12598 <abort@plt+0x1924>
   12030:	str	r4, [sp]
   12034:	mov	r1, #1
   12038:	ldr	r3, [r3]
   1203c:	ldr	r0, [r2]
   12040:	ldr	r2, [pc, #1364]	; 1259c <abort@plt+0x1928>
   12044:	bl	10c2c <__fprintf_chk@plt>
   12048:	b	11e80 <abort@plt+0x120c>
   1204c:	ldr	r0, [pc, #1356]	; 125a0 <abort@plt+0x192c>
   12050:	bl	10b78 <puts@plt>
   12054:	b	11cb4 <abort@plt+0x1040>
   12058:	ldr	r3, [pc, #1348]	; 125a4 <abort@plt+0x1930>
   1205c:	mov	r2, #8
   12060:	ldr	r0, [fp, #12]
   12064:	bl	10c44 <qsort@plt>
   12068:	b	118e0 <abort@plt+0xc6c>
   1206c:	mov	r0, #1
   12070:	bl	10c5c <isatty@plt>
   12074:	cmp	r0, #0
   12078:	beq	11b50 <abort@plt+0xedc>
   1207c:	b	11af0 <abort@plt+0xe7c>
   12080:	add	r5, r5, #3
   12084:	ldr	r3, [fp, #20]
   12088:	cmp	r3, #1
   1208c:	ble	11b50 <abort@plt+0xedc>
   12090:	cmp	r3, r4
   12094:	strgt	r4, [fp, #20]
   12098:	ldr	r1, [fp, #20]
   1209c:	ldr	r8, [pc, #1284]	; 125a8 <abort@plt+0x1934>
   120a0:	add	r0, r1, r4
   120a4:	sub	r0, r0, #1
   120a8:	bl	12888 <abort@plt+0x1c14>
   120ac:	ldr	r9, [pc, #1156]	; 12538 <abort@plt+0x18c4>
   120b0:	mov	r6, #0
   120b4:	mov	r7, r0
   120b8:	cmp	r6, r7
   120bc:	bge	11b74 <abort@plt+0xf00>
   120c0:	mov	r4, #0
   120c4:	ldr	r3, [fp, #20]
   120c8:	cmp	r3, r4
   120cc:	ble	12110 <abort@plt+0x149c>
   120d0:	mla	r2, r7, r4, r6
   120d4:	ldr	r1, [fp, #8]
   120d8:	cmp	r1, r2
   120dc:	ble	12110 <abort@plt+0x149c>
   120e0:	ldr	r1, [fp, #12]
   120e4:	add	r4, r4, #1
   120e8:	cmp	r4, r3
   120ec:	ldr	r3, [r1, r2, lsl #3]
   120f0:	beq	12120 <abort@plt+0x14ac>
   120f4:	mov	r2, r5
   120f8:	mov	r1, r8
   120fc:	mov	r0, #1
   12100:	bl	10c20 <__printf_chk@plt>
   12104:	ldr	r3, [fp, #20]
   12108:	cmp	r3, r4
   1210c:	bgt	120d0 <abort@plt+0x145c>
   12110:	mov	r0, #10
   12114:	bl	10bfc <putchar@plt>
   12118:	add	r6, r6, #1
   1211c:	b	120b8 <abort@plt+0x1444>
   12120:	mov	r2, r3
   12124:	mov	r1, r9
   12128:	mov	r0, #1
   1212c:	bl	10c20 <__printf_chk@plt>
   12130:	b	120c4 <abort@plt+0x1450>
   12134:	ldr	r1, [pc, #1136]	; 125ac <abort@plt+0x1938>
   12138:	mov	r0, r4
   1213c:	bl	10c20 <__printf_chk@plt>
   12140:	ldr	r1, [pc, #1128]	; 125b0 <abort@plt+0x193c>
   12144:	mov	r0, r4
   12148:	bl	10c20 <__printf_chk@plt>
   1214c:	ldr	r1, [pc, #1120]	; 125b4 <abort@plt+0x1940>
   12150:	mov	r0, r4
   12154:	bl	10c20 <__printf_chk@plt>
   12158:	ldr	r1, [pc, #1112]	; 125b8 <abort@plt+0x1944>
   1215c:	mov	r0, r4
   12160:	bl	10c20 <__printf_chk@plt>
   12164:	ldr	r1, [pc, #1104]	; 125bc <abort@plt+0x1948>
   12168:	mov	r0, r4
   1216c:	bl	10c20 <__printf_chk@plt>
   12170:	ldr	r1, [pc, #1096]	; 125c0 <abort@plt+0x194c>
   12174:	mov	r0, r4
   12178:	bl	10c20 <__printf_chk@plt>
   1217c:	ldr	r1, [pc, #1088]	; 125c4 <abort@plt+0x1950>
   12180:	mov	r0, r4
   12184:	bl	10c20 <__printf_chk@plt>
   12188:	ldr	r1, [pc, #1080]	; 125c8 <abort@plt+0x1954>
   1218c:	mov	r0, r4
   12190:	bl	10c20 <__printf_chk@plt>
   12194:	ldr	r1, [pc, #1072]	; 125cc <abort@plt+0x1958>
   12198:	mov	r0, r4
   1219c:	bl	10c20 <__printf_chk@plt>
   121a0:	mov	r0, #10
   121a4:	bl	10bfc <putchar@plt>
   121a8:	mov	r5, #0
   121ac:	ldr	sl, [pc, #1052]	; 125d0 <abort@plt+0x195c>
   121b0:	ldr	r9, [pc, #1052]	; 125d4 <abort@plt+0x1960>
   121b4:	ldr	r8, [pc, #1052]	; 125d8 <abort@plt+0x1964>
   121b8:	b	12284 <abort@plt+0x1610>
   121bc:	ldr	r1, [pc, #1048]	; 125dc <abort@plt+0x1968>
   121c0:	cmp	r3, #1
   121c4:	ldr	r2, [pc, #1044]	; 125e0 <abort@plt+0x196c>
   121c8:	movne	r2, r1
   121cc:	mov	r1, sl
   121d0:	mov	r0, #1
   121d4:	bl	10c20 <__printf_chk@plt>
   121d8:	ldr	r2, [r4, #20]
   121dc:	cmp	r2, #0
   121e0:	bne	121f0 <abort@plt+0x157c>
   121e4:	ldr	r3, [r4, #24]
   121e8:	cmp	r3, #0
   121ec:	beq	124a4 <abort@plt+0x1830>
   121f0:	ldr	r1, [pc, #1004]	; 125e4 <abort@plt+0x1970>
   121f4:	mov	r0, #1
   121f8:	bl	10c20 <__printf_chk@plt>
   121fc:	ldr	r2, [r4, #24]
   12200:	ldr	r1, [pc, #988]	; 125e4 <abort@plt+0x1970>
   12204:	mov	r0, #1
   12208:	bl	10c20 <__printf_chk@plt>
   1220c:	ldr	r2, [r4, #28]
   12210:	ldr	r1, [pc, #976]	; 125e8 <abort@plt+0x1974>
   12214:	cmp	r2, #0
   12218:	moveq	r2, r9
   1221c:	movne	r2, r8
   12220:	mov	r0, #1
   12224:	bl	10c20 <__printf_chk@plt>
   12228:	ldr	r2, [r4, #32]
   1222c:	ldr	r1, [pc, #952]	; 125ec <abort@plt+0x1978>
   12230:	mov	r0, #1
   12234:	bl	10c20 <__printf_chk@plt>
   12238:	ldr	r2, [r4, #36]	; 0x24
   1223c:	ldr	r1, [pc, #936]	; 125ec <abort@plt+0x1978>
   12240:	mov	r0, #1
   12244:	bl	10c20 <__printf_chk@plt>
   12248:	ldr	r2, [r4, #72]	; 0x48
   1224c:	ldr	r1, [pc, #924]	; 125f0 <abort@plt+0x197c>
   12250:	mov	r0, #1
   12254:	bl	10c20 <__printf_chk@plt>
   12258:	ldr	r2, [r4, #76]	; 0x4c
   1225c:	ldr	r1, [pc, #904]	; 125ec <abort@plt+0x1978>
   12260:	mov	r0, #1
   12264:	bl	10c20 <__printf_chk@plt>
   12268:	ldr	r3, [fp, #12]
   1226c:	ldr	r0, [r3, r6]
   12270:	bl	10b78 <puts@plt>
   12274:	ldr	r3, [fp, #16]
   12278:	cmp	r3, #0
   1227c:	bne	122d4 <abort@plt+0x1660>
   12280:	add	r5, r5, #1
   12284:	ldr	r3, [fp, #8]
   12288:	cmp	r3, r5
   1228c:	ble	11b74 <abort@plt+0xf00>
   12290:	ldr	r3, [fp, #12]
   12294:	lsl	r6, r5, #3
   12298:	add	r2, r3, r6
   1229c:	ldr	r4, [r2, #4]
   122a0:	cmp	r4, #0
   122a4:	beq	12470 <abort@plt+0x17fc>
   122a8:	ldr	r3, [r4, #8]
   122ac:	cmp	r3, #0
   122b0:	bne	121bc <abort@plt+0x1548>
   122b4:	ldr	r2, [pc, #824]	; 125f4 <abort@plt+0x1980>
   122b8:	b	121cc <abort@plt+0x1558>
   122bc:	add	r5, r5, #3
   122c0:	add	r0, r0, #3
   122c4:	mov	r1, r5
   122c8:	bl	12888 <abort@plt+0x1c14>
   122cc:	str	r0, [fp, #20]
   122d0:	b	12084 <abort@plt+0x1410>
   122d4:	ldr	ip, [pc, #796]	; 125f8 <abort@plt+0x1984>
   122d8:	add	r7, sp, #52	; 0x34
   122dc:	ldr	lr, [pc, #792]	; 125fc <abort@plt+0x1988>
   122e0:	ldm	ip!, {r0, r1, r2, r3}
   122e4:	add	r6, sp, #75	; 0x4b
   122e8:	str	r6, [sp, #48]	; 0x30
   122ec:	add	r6, sp, #56	; 0x38
   122f0:	stmia	r7!, {r0, r1, r2, r3}
   122f4:	ldm	ip, {r0, r1}
   122f8:	add	ip, sp, #8192	; 0x2000
   122fc:	add	ip, ip, #52	; 0x34
   12300:	stm	r7, {r0, r1}
   12304:	ldm	lr!, {r0, r1, r2, r3}
   12308:	add	r7, sp, #8192	; 0x2000
   1230c:	add	r7, r7, #56	; 0x38
   12310:	add	r7, r7, #19
   12314:	stmia	ip!, {r0, r1, r2, r3}
   12318:	ldm	lr, {r0, r1}
   1231c:	str	r7, [r6, #-12]!
   12320:	mov	r7, #44	; 0x2c
   12324:	stm	ip, {r0, r1}
   12328:	mov	r1, r6
   1232c:	ldrsh	r3, [r4, #56]	; 0x38
   12330:	ldrsh	r2, [r4, #44]	; 0x2c
   12334:	add	r0, sp, #48	; 0x30
   12338:	bl	117cc <abort@plt+0xb58>
   1233c:	ldr	r3, [sp, #44]	; 0x2c
   12340:	mov	r1, r6
   12344:	add	r2, r3, #1
   12348:	str	r2, [sp, #44]	; 0x2c
   1234c:	strb	r7, [r3]
   12350:	ldr	r2, [sp, #48]	; 0x30
   12354:	add	r0, sp, #48	; 0x30
   12358:	add	ip, r2, #1
   1235c:	str	ip, [sp, #48]	; 0x30
   12360:	ldrb	r3, [r3]
   12364:	strb	r3, [r2]
   12368:	ldrsh	r3, [r4, #58]	; 0x3a
   1236c:	ldrsh	r2, [r4, #46]	; 0x2e
   12370:	bl	117cc <abort@plt+0xb58>
   12374:	ldr	r3, [sp, #44]	; 0x2c
   12378:	mov	r1, r6
   1237c:	add	r2, r3, #1
   12380:	str	r2, [sp, #44]	; 0x2c
   12384:	strb	r7, [r3]
   12388:	ldr	r2, [sp, #48]	; 0x30
   1238c:	add	r0, sp, #48	; 0x30
   12390:	add	ip, r2, #1
   12394:	str	ip, [sp, #48]	; 0x30
   12398:	ldrb	r3, [r3]
   1239c:	strb	r3, [r2]
   123a0:	ldrsh	r3, [r4, #60]	; 0x3c
   123a4:	ldrsh	r2, [r4, #48]	; 0x30
   123a8:	bl	117cc <abort@plt+0xb58>
   123ac:	ldr	r3, [sp, #44]	; 0x2c
   123b0:	mov	r1, r6
   123b4:	add	r2, r3, #1
   123b8:	str	r2, [sp, #44]	; 0x2c
   123bc:	strb	r7, [r3]
   123c0:	ldr	r2, [sp, #48]	; 0x30
   123c4:	add	r0, sp, #48	; 0x30
   123c8:	add	ip, r2, #1
   123cc:	str	ip, [sp, #48]	; 0x30
   123d0:	ldrb	r3, [r3]
   123d4:	strb	r3, [r2]
   123d8:	ldrsh	r3, [r4, #62]	; 0x3e
   123dc:	ldrsh	r2, [r4, #50]	; 0x32
   123e0:	bl	117cc <abort@plt+0xb58>
   123e4:	ldr	r3, [sp, #44]	; 0x2c
   123e8:	mov	r1, r6
   123ec:	add	r2, r3, #1
   123f0:	str	r2, [sp, #44]	; 0x2c
   123f4:	strb	r7, [r3]
   123f8:	ldr	r2, [sp, #48]	; 0x30
   123fc:	add	r0, sp, #48	; 0x30
   12400:	add	ip, r2, #1
   12404:	str	ip, [sp, #48]	; 0x30
   12408:	ldrb	r3, [r3]
   1240c:	strb	r3, [r2]
   12410:	ldrsh	r3, [r4, #64]	; 0x40
   12414:	ldrsh	r2, [r4, #52]	; 0x34
   12418:	bl	117cc <abort@plt+0xb58>
   1241c:	ldr	r3, [sp, #44]	; 0x2c
   12420:	mov	r2, #41	; 0x29
   12424:	add	r1, r3, #1
   12428:	str	r1, [sp, #44]	; 0x2c
   1242c:	strb	r2, [r3]
   12430:	ldr	r1, [sp, #48]	; 0x30
   12434:	mov	r2, #0
   12438:	add	r0, r1, #1
   1243c:	str	r0, [sp, #48]	; 0x30
   12440:	ldrb	r3, [r3]
   12444:	add	r0, sp, #52	; 0x34
   12448:	strb	r3, [r1]
   1244c:	ldr	r3, [sp, #44]	; 0x2c
   12450:	strb	r2, [r3]
   12454:	ldr	r3, [sp, #48]	; 0x30
   12458:	strb	r2, [r3]
   1245c:	bl	10b78 <puts@plt>
   12460:	add	r0, sp, #8192	; 0x2000
   12464:	add	r0, r0, #52	; 0x34
   12468:	bl	10b78 <puts@plt>
   1246c:	b	12280 <abort@plt+0x160c>
   12470:	ldr	r2, [r3, r5, lsl #3]
   12474:	ldr	ip, [pc, #284]	; 12598 <abort@plt+0x1924>
   12478:	ldr	r1, [pc, #384]	; 12600 <abort@plt+0x198c>
   1247c:	ldr	r0, [pc, #272]	; 12594 <abort@plt+0x1920>
   12480:	cmp	r2, #0
   12484:	moveq	r2, r1
   12488:	ldr	r3, [ip]
   1248c:	ldr	r0, [r0]
   12490:	mov	r1, #1
   12494:	str	r2, [sp]
   12498:	ldr	r2, [pc, #356]	; 12604 <abort@plt+0x1990>
   1249c:	bl	10c2c <__fprintf_chk@plt>
   124a0:	b	12280 <abort@plt+0x160c>
   124a4:	ldr	r2, [r4, #12]
   124a8:	ldr	r1, [pc, #344]	; 12608 <abort@plt+0x1994>
   124ac:	mov	r0, #1
   124b0:	bl	10c20 <__printf_chk@plt>
   124b4:	ldr	r2, [r4, #16]
   124b8:	ldr	r1, [pc, #328]	; 12608 <abort@plt+0x1994>
   124bc:	mov	r0, #1
   124c0:	bl	10c20 <__printf_chk@plt>
   124c4:	b	1220c <abort@plt+0x1598>
   124c8:	mov	r1, r7
   124cc:	ldr	r0, [pc, #312]	; 1260c <abort@plt+0x1998>
   124d0:	bl	114a8 <abort@plt+0x834>
   124d4:	bl	10b24 <__stack_chk_fail@plt>
   124d8:	andeq	r4, r2, ip, asr #1
   124dc:	andeq	r3, r2, r0, lsl #30
   124e0:	andeq	r4, r2, ip, lsr #1
   124e4:	andeq	r4, r2, r4, asr #1
   124e8:	andeq	r2, r1, r0, ror #24
   124ec:	andeq	r2, r1, ip, ror sp
   124f0:	andeq	r2, r1, r8, ror #24
   124f4:	andeq	r2, r1, r8, ror ip
   124f8:	andeq	r2, r1, r8, lsl #27
   124fc:	andeq	r2, r1, r8, lsl #25
   12500:	muleq	r1, r0, ip
   12504:	muleq	r1, ip, sp
   12508:			; <UNDEFINED> instruction: 0x00012db0
   1250c:	ldrdeq	r2, [r1], -ip
   12510:	muleq	r1, r8, ip
   12514:	muleq	r1, ip, ip
   12518:	andeq	r2, r1, ip, lsl #28
   1251c:	andeq	r2, r1, r4, lsr #28
   12520:	andeq	r2, r1, r4, asr #28
   12524:	andeq	r2, r1, r4, asr lr
   12528:			; <UNDEFINED> instruction: 0x00012cb8
   1252c:	andeq	r2, r1, r4, ror #28
   12530:	andeq	r2, r1, r0, lsr #25
   12534:	andeq	r2, r1, r0, lsr #26
   12538:	andeq	r3, r1, r4, lsr #2
   1253c:	andeq	r2, r1, r4, ror #25
   12540:	andeq	r2, r1, r8, asr #25
   12544:	andeq	r2, r1, r0, lsl sp
   12548:	ldrdeq	r2, [r1], -r4
   1254c:	andeq	r2, r1, r4, ror lr
   12550:	ldrdeq	r2, [r1], -ip
   12554:	andeq	r2, r1, ip, lsl #30
   12558:	andeq	r2, r1, ip, lsl pc
   1255c:	andeq	r2, r1, r0, lsr #30
   12560:	andeq	r2, r1, r8, asr #30
   12564:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12568:	strheq	r4, [r2], -ip
   1256c:	ldrdeq	r1, [r1], -r0
   12570:	andeq	r2, r1, r4, asr #31
   12574:	andeq	r2, r1, r0, asr #23
   12578:	andeq	r2, r1, r0, lsr sp
   1257c:	ldrdeq	r2, [r1], -r0
   12580:			; <UNDEFINED> instruction: 0x00012fb0
   12584:	ldrdeq	r2, [r1], -r8
   12588:	andeq	r2, r1, ip, asr #30
   1258c:	andeq	r2, r1, ip, lsr #26
   12590:	andeq	r2, r1, r4, ror #30
   12594:	strheq	r4, [r2], -r8
   12598:	andeq	r4, r2, r8, lsr #1
   1259c:	andeq	r2, r1, r0, asr sp
   125a0:	andeq	r2, r1, r0, lsr #29
   125a4:	andeq	r1, r1, r8, asr r5
   125a8:	andeq	r3, r1, ip, ror #1
   125ac:	strdeq	r2, [r1], -r8
   125b0:	andeq	r3, r1, r0
   125b4:	andeq	r3, r1, r8
   125b8:	andeq	r3, r1, r0, lsl r0
   125bc:	andeq	r3, r1, r8, lsl r0
   125c0:	andeq	r3, r1, r0, lsr #32
   125c4:	andeq	r3, r1, r8, lsr #32
   125c8:	andeq	r3, r1, r0, lsr r0
   125cc:			; <UNDEFINED> instruction: 0x000135b4
   125d0:	andeq	r3, r1, r4, rrx
   125d4:	andeq	r2, r1, r8, asr #26
   125d8:	andeq	r2, r1, r4, asr #26
   125dc:	andeq	r2, r1, r0, asr #26
   125e0:	andeq	r2, r1, ip, lsr sp
   125e4:	andeq	r3, r1, r4, ror r0
   125e8:	andeq	r3, r1, ip, ror r0
   125ec:	andeq	r3, r1, r4, lsl #1
   125f0:	andeq	r3, r1, ip, lsl #1
   125f4:	andeq	r2, r1, r8, lsr sp
   125f8:	muleq	r1, r4, r0
   125fc:	andeq	r3, r1, ip, lsr #1
   12600:	strdeq	r3, [r1], -ip
   12604:	andeq	r3, r1, r8, lsr r0
   12608:	andeq	r3, r1, ip, rrx
   1260c:	andeq	r3, r1, r4, asr #1
   12610:	cmp	r0, #0
   12614:	push	{lr}		; (str lr, [sp, #-4]!)
   12618:	sub	sp, sp, #12
   1261c:	ldr	r5, [pc, #68]	; 12668 <abort@plt+0x19f4>
   12620:	ldr	r4, [pc, #68]	; 1266c <abort@plt+0x19f8>
   12624:	beq	12640 <abort@plt+0x19cc>
   12628:	str	r0, [sp]
   1262c:	ldr	r3, [r5]
   12630:	ldr	r0, [r4]
   12634:	ldr	r2, [pc, #52]	; 12670 <abort@plt+0x19fc>
   12638:	mov	r1, #1
   1263c:	bl	10c2c <__fprintf_chk@plt>
   12640:	ldr	r2, [pc, #44]	; 12674 <abort@plt+0x1a00>
   12644:	ldr	r3, [r5]
   12648:	str	r2, [sp]
   1264c:	mov	r1, #1
   12650:	ldr	r2, [pc, #32]	; 12678 <abort@plt+0x1a04>
   12654:	ldr	r0, [r4]
   12658:	bl	10c2c <__fprintf_chk@plt>
   1265c:	bl	11480 <abort@plt+0x80c>
   12660:	mov	r0, #1
   12664:	bl	10bb4 <exit@plt>
   12668:	andeq	r4, r2, r8, lsr #1
   1266c:	strheq	r4, [r2], -r8
   12670:	strdeq	r3, [r1], -r4
   12674:	andeq	r3, r1, r8, lsr #2
   12678:	andeq	r3, r1, r0, lsl #2
   1267c:	subs	r2, r1, #1
   12680:	bxeq	lr
   12684:	bcc	1285c <abort@plt+0x1be8>
   12688:	cmp	r0, r1
   1268c:	bls	12840 <abort@plt+0x1bcc>
   12690:	tst	r1, r2
   12694:	beq	1284c <abort@plt+0x1bd8>
   12698:	clz	r3, r0
   1269c:	clz	r2, r1
   126a0:	sub	r3, r2, r3
   126a4:	rsbs	r3, r3, #31
   126a8:	addne	r3, r3, r3, lsl #1
   126ac:	mov	r2, #0
   126b0:	addne	pc, pc, r3, lsl #2
   126b4:	nop			; (mov r0, r0)
   126b8:	cmp	r0, r1, lsl #31
   126bc:	adc	r2, r2, r2
   126c0:	subcs	r0, r0, r1, lsl #31
   126c4:	cmp	r0, r1, lsl #30
   126c8:	adc	r2, r2, r2
   126cc:	subcs	r0, r0, r1, lsl #30
   126d0:	cmp	r0, r1, lsl #29
   126d4:	adc	r2, r2, r2
   126d8:	subcs	r0, r0, r1, lsl #29
   126dc:	cmp	r0, r1, lsl #28
   126e0:	adc	r2, r2, r2
   126e4:	subcs	r0, r0, r1, lsl #28
   126e8:	cmp	r0, r1, lsl #27
   126ec:	adc	r2, r2, r2
   126f0:	subcs	r0, r0, r1, lsl #27
   126f4:	cmp	r0, r1, lsl #26
   126f8:	adc	r2, r2, r2
   126fc:	subcs	r0, r0, r1, lsl #26
   12700:	cmp	r0, r1, lsl #25
   12704:	adc	r2, r2, r2
   12708:	subcs	r0, r0, r1, lsl #25
   1270c:	cmp	r0, r1, lsl #24
   12710:	adc	r2, r2, r2
   12714:	subcs	r0, r0, r1, lsl #24
   12718:	cmp	r0, r1, lsl #23
   1271c:	adc	r2, r2, r2
   12720:	subcs	r0, r0, r1, lsl #23
   12724:	cmp	r0, r1, lsl #22
   12728:	adc	r2, r2, r2
   1272c:	subcs	r0, r0, r1, lsl #22
   12730:	cmp	r0, r1, lsl #21
   12734:	adc	r2, r2, r2
   12738:	subcs	r0, r0, r1, lsl #21
   1273c:	cmp	r0, r1, lsl #20
   12740:	adc	r2, r2, r2
   12744:	subcs	r0, r0, r1, lsl #20
   12748:	cmp	r0, r1, lsl #19
   1274c:	adc	r2, r2, r2
   12750:	subcs	r0, r0, r1, lsl #19
   12754:	cmp	r0, r1, lsl #18
   12758:	adc	r2, r2, r2
   1275c:	subcs	r0, r0, r1, lsl #18
   12760:	cmp	r0, r1, lsl #17
   12764:	adc	r2, r2, r2
   12768:	subcs	r0, r0, r1, lsl #17
   1276c:	cmp	r0, r1, lsl #16
   12770:	adc	r2, r2, r2
   12774:	subcs	r0, r0, r1, lsl #16
   12778:	cmp	r0, r1, lsl #15
   1277c:	adc	r2, r2, r2
   12780:	subcs	r0, r0, r1, lsl #15
   12784:	cmp	r0, r1, lsl #14
   12788:	adc	r2, r2, r2
   1278c:	subcs	r0, r0, r1, lsl #14
   12790:	cmp	r0, r1, lsl #13
   12794:	adc	r2, r2, r2
   12798:	subcs	r0, r0, r1, lsl #13
   1279c:	cmp	r0, r1, lsl #12
   127a0:	adc	r2, r2, r2
   127a4:	subcs	r0, r0, r1, lsl #12
   127a8:	cmp	r0, r1, lsl #11
   127ac:	adc	r2, r2, r2
   127b0:	subcs	r0, r0, r1, lsl #11
   127b4:	cmp	r0, r1, lsl #10
   127b8:	adc	r2, r2, r2
   127bc:	subcs	r0, r0, r1, lsl #10
   127c0:	cmp	r0, r1, lsl #9
   127c4:	adc	r2, r2, r2
   127c8:	subcs	r0, r0, r1, lsl #9
   127cc:	cmp	r0, r1, lsl #8
   127d0:	adc	r2, r2, r2
   127d4:	subcs	r0, r0, r1, lsl #8
   127d8:	cmp	r0, r1, lsl #7
   127dc:	adc	r2, r2, r2
   127e0:	subcs	r0, r0, r1, lsl #7
   127e4:	cmp	r0, r1, lsl #6
   127e8:	adc	r2, r2, r2
   127ec:	subcs	r0, r0, r1, lsl #6
   127f0:	cmp	r0, r1, lsl #5
   127f4:	adc	r2, r2, r2
   127f8:	subcs	r0, r0, r1, lsl #5
   127fc:	cmp	r0, r1, lsl #4
   12800:	adc	r2, r2, r2
   12804:	subcs	r0, r0, r1, lsl #4
   12808:	cmp	r0, r1, lsl #3
   1280c:	adc	r2, r2, r2
   12810:	subcs	r0, r0, r1, lsl #3
   12814:	cmp	r0, r1, lsl #2
   12818:	adc	r2, r2, r2
   1281c:	subcs	r0, r0, r1, lsl #2
   12820:	cmp	r0, r1, lsl #1
   12824:	adc	r2, r2, r2
   12828:	subcs	r0, r0, r1, lsl #1
   1282c:	cmp	r0, r1
   12830:	adc	r2, r2, r2
   12834:	subcs	r0, r0, r1
   12838:	mov	r0, r2
   1283c:	bx	lr
   12840:	moveq	r0, #1
   12844:	movne	r0, #0
   12848:	bx	lr
   1284c:	clz	r2, r1
   12850:	rsb	r2, r2, #31
   12854:	lsr	r0, r0, r2
   12858:	bx	lr
   1285c:	cmp	r0, #0
   12860:	mvnne	r0, #0
   12864:	b	12ac8 <abort@plt+0x1e54>
   12868:	cmp	r1, #0
   1286c:	beq	1285c <abort@plt+0x1be8>
   12870:	push	{r0, r1, lr}
   12874:	bl	1267c <abort@plt+0x1a08>
   12878:	pop	{r1, r2, lr}
   1287c:	mul	r3, r2, r0
   12880:	sub	r1, r1, r3
   12884:	bx	lr
   12888:	cmp	r1, #0
   1288c:	beq	12a98 <abort@plt+0x1e24>
   12890:	eor	ip, r0, r1
   12894:	rsbmi	r1, r1, #0
   12898:	subs	r2, r1, #1
   1289c:	beq	12a64 <abort@plt+0x1df0>
   128a0:	movs	r3, r0
   128a4:	rsbmi	r3, r0, #0
   128a8:	cmp	r3, r1
   128ac:	bls	12a70 <abort@plt+0x1dfc>
   128b0:	tst	r1, r2
   128b4:	beq	12a80 <abort@plt+0x1e0c>
   128b8:	clz	r2, r3
   128bc:	clz	r0, r1
   128c0:	sub	r2, r0, r2
   128c4:	rsbs	r2, r2, #31
   128c8:	addne	r2, r2, r2, lsl #1
   128cc:	mov	r0, #0
   128d0:	addne	pc, pc, r2, lsl #2
   128d4:	nop			; (mov r0, r0)
   128d8:	cmp	r3, r1, lsl #31
   128dc:	adc	r0, r0, r0
   128e0:	subcs	r3, r3, r1, lsl #31
   128e4:	cmp	r3, r1, lsl #30
   128e8:	adc	r0, r0, r0
   128ec:	subcs	r3, r3, r1, lsl #30
   128f0:	cmp	r3, r1, lsl #29
   128f4:	adc	r0, r0, r0
   128f8:	subcs	r3, r3, r1, lsl #29
   128fc:	cmp	r3, r1, lsl #28
   12900:	adc	r0, r0, r0
   12904:	subcs	r3, r3, r1, lsl #28
   12908:	cmp	r3, r1, lsl #27
   1290c:	adc	r0, r0, r0
   12910:	subcs	r3, r3, r1, lsl #27
   12914:	cmp	r3, r1, lsl #26
   12918:	adc	r0, r0, r0
   1291c:	subcs	r3, r3, r1, lsl #26
   12920:	cmp	r3, r1, lsl #25
   12924:	adc	r0, r0, r0
   12928:	subcs	r3, r3, r1, lsl #25
   1292c:	cmp	r3, r1, lsl #24
   12930:	adc	r0, r0, r0
   12934:	subcs	r3, r3, r1, lsl #24
   12938:	cmp	r3, r1, lsl #23
   1293c:	adc	r0, r0, r0
   12940:	subcs	r3, r3, r1, lsl #23
   12944:	cmp	r3, r1, lsl #22
   12948:	adc	r0, r0, r0
   1294c:	subcs	r3, r3, r1, lsl #22
   12950:	cmp	r3, r1, lsl #21
   12954:	adc	r0, r0, r0
   12958:	subcs	r3, r3, r1, lsl #21
   1295c:	cmp	r3, r1, lsl #20
   12960:	adc	r0, r0, r0
   12964:	subcs	r3, r3, r1, lsl #20
   12968:	cmp	r3, r1, lsl #19
   1296c:	adc	r0, r0, r0
   12970:	subcs	r3, r3, r1, lsl #19
   12974:	cmp	r3, r1, lsl #18
   12978:	adc	r0, r0, r0
   1297c:	subcs	r3, r3, r1, lsl #18
   12980:	cmp	r3, r1, lsl #17
   12984:	adc	r0, r0, r0
   12988:	subcs	r3, r3, r1, lsl #17
   1298c:	cmp	r3, r1, lsl #16
   12990:	adc	r0, r0, r0
   12994:	subcs	r3, r3, r1, lsl #16
   12998:	cmp	r3, r1, lsl #15
   1299c:	adc	r0, r0, r0
   129a0:	subcs	r3, r3, r1, lsl #15
   129a4:	cmp	r3, r1, lsl #14
   129a8:	adc	r0, r0, r0
   129ac:	subcs	r3, r3, r1, lsl #14
   129b0:	cmp	r3, r1, lsl #13
   129b4:	adc	r0, r0, r0
   129b8:	subcs	r3, r3, r1, lsl #13
   129bc:	cmp	r3, r1, lsl #12
   129c0:	adc	r0, r0, r0
   129c4:	subcs	r3, r3, r1, lsl #12
   129c8:	cmp	r3, r1, lsl #11
   129cc:	adc	r0, r0, r0
   129d0:	subcs	r3, r3, r1, lsl #11
   129d4:	cmp	r3, r1, lsl #10
   129d8:	adc	r0, r0, r0
   129dc:	subcs	r3, r3, r1, lsl #10
   129e0:	cmp	r3, r1, lsl #9
   129e4:	adc	r0, r0, r0
   129e8:	subcs	r3, r3, r1, lsl #9
   129ec:	cmp	r3, r1, lsl #8
   129f0:	adc	r0, r0, r0
   129f4:	subcs	r3, r3, r1, lsl #8
   129f8:	cmp	r3, r1, lsl #7
   129fc:	adc	r0, r0, r0
   12a00:	subcs	r3, r3, r1, lsl #7
   12a04:	cmp	r3, r1, lsl #6
   12a08:	adc	r0, r0, r0
   12a0c:	subcs	r3, r3, r1, lsl #6
   12a10:	cmp	r3, r1, lsl #5
   12a14:	adc	r0, r0, r0
   12a18:	subcs	r3, r3, r1, lsl #5
   12a1c:	cmp	r3, r1, lsl #4
   12a20:	adc	r0, r0, r0
   12a24:	subcs	r3, r3, r1, lsl #4
   12a28:	cmp	r3, r1, lsl #3
   12a2c:	adc	r0, r0, r0
   12a30:	subcs	r3, r3, r1, lsl #3
   12a34:	cmp	r3, r1, lsl #2
   12a38:	adc	r0, r0, r0
   12a3c:	subcs	r3, r3, r1, lsl #2
   12a40:	cmp	r3, r1, lsl #1
   12a44:	adc	r0, r0, r0
   12a48:	subcs	r3, r3, r1, lsl #1
   12a4c:	cmp	r3, r1
   12a50:	adc	r0, r0, r0
   12a54:	subcs	r3, r3, r1
   12a58:	cmp	ip, #0
   12a5c:	rsbmi	r0, r0, #0
   12a60:	bx	lr
   12a64:	teq	ip, r0
   12a68:	rsbmi	r0, r0, #0
   12a6c:	bx	lr
   12a70:	movcc	r0, #0
   12a74:	asreq	r0, ip, #31
   12a78:	orreq	r0, r0, #1
   12a7c:	bx	lr
   12a80:	clz	r2, r1
   12a84:	rsb	r2, r2, #31
   12a88:	cmp	ip, #0
   12a8c:	lsr	r0, r3, r2
   12a90:	rsbmi	r0, r0, #0
   12a94:	bx	lr
   12a98:	cmp	r0, #0
   12a9c:	mvngt	r0, #-2147483648	; 0x80000000
   12aa0:	movlt	r0, #-2147483648	; 0x80000000
   12aa4:	b	12ac8 <abort@plt+0x1e54>
   12aa8:	cmp	r1, #0
   12aac:	beq	12a98 <abort@plt+0x1e24>
   12ab0:	push	{r0, r1, lr}
   12ab4:	bl	12890 <abort@plt+0x1c1c>
   12ab8:	pop	{r1, r2, lr}
   12abc:	mul	r3, r2, r0
   12ac0:	sub	r1, r1, r3
   12ac4:	bx	lr
   12ac8:	push	{r1, lr}
   12acc:	mov	r0, #8
   12ad0:	bl	10adc <raise@plt>
   12ad4:	pop	{r1, pc}
   12ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12adc:	mov	r7, r0
   12ae0:	ldr	r6, [pc, #72]	; 12b30 <abort@plt+0x1ebc>
   12ae4:	ldr	r5, [pc, #72]	; 12b34 <abort@plt+0x1ec0>
   12ae8:	add	r6, pc, r6
   12aec:	add	r5, pc, r5
   12af0:	sub	r6, r6, r5
   12af4:	mov	r8, r1
   12af8:	mov	r9, r2
   12afc:	bl	10ab0 <_init@@Base>
   12b00:	asrs	r6, r6, #2
   12b04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b08:	mov	r4, #0
   12b0c:	add	r4, r4, #1
   12b10:	ldr	r3, [r5], #4
   12b14:	mov	r2, r9
   12b18:	mov	r1, r8
   12b1c:	mov	r0, r7
   12b20:	blx	r3
   12b24:	cmp	r6, r4
   12b28:	bne	12b0c <abort@plt+0x1e98>
   12b2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b30:	andeq	r1, r1, ip, lsl #8
   12b34:	andeq	r1, r1, r4, lsl #8
   12b38:	bx	lr

Disassembly of section .fini:

00012b3c <_fini@@Base>:
   12b3c:	push	{r3, lr}
   12b40:	pop	{r3, pc}
