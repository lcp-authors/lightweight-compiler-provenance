
raspbian-preinstalled/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010990 <_init@@Base>:
   10990:	push	{r3, lr}
   10994:	bl	10ef0 <abort@plt+0x42c>
   10998:	pop	{r3, pc}

Disassembly of section .plt:

0001099c <ferror@plt-0x14>:
   1099c:	push	{lr}		; (str lr, [sp, #-4]!)
   109a0:	ldr	lr, [pc, #4]	; 109ac <_init@@Base+0x1c>
   109a4:	add	lr, pc, lr
   109a8:	ldr	pc, [lr, #8]!
   109ac:	andeq	r1, r1, r0, ror #11

000109b0 <ferror@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1504]!	; 0x5e0

000109bc <_exit@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1496]!	; 0x5d8

000109c8 <print_uptime@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1488]!	; 0x5d0

000109d4 <dcgettext@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1480]!	; 0x5c8

000109e0 <__stack_chk_fail@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1472]!	; 0x5c0

000109ec <textdomain@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1464]!	; 0x5b8

000109f8 <uptime@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a04 <gettimeofday@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a10 <__fpending@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a1c <error@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1432]!	; 0x598

00010a28 <__libc_start_main@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1424]!	; 0x590

00010a34 <localtime@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1416]!	; 0x588

00010a40 <__gmon_start__@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1408]!	; 0x580

00010a4c <getopt_long@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1400]!	; 0x578

00010a58 <exit@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1392]!	; 0x570

00010a64 <__errno_location@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1384]!	; 0x568

00010a70 <__cxa_atexit@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1376]!	; 0x560

00010a7c <__printf_chk@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1368]!	; 0x558

00010a88 <__fprintf_chk@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1360]!	; 0x550

00010a94 <fclose@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1352]!	; 0x548

00010aa0 <setlocale@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1344]!	; 0x540

00010aac <bindtextdomain@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1336]!	; 0x538

00010ab8 <fputs@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1328]!	; 0x530

00010ac4 <abort@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010ad0 <.text>:
   10ad0:	push	{r4, lr}
   10ad4:	mov	r2, #5
   10ad8:	mov	r4, r0
   10adc:	ldr	r1, [pc, #232]	; 10bcc <abort@plt+0x108>
   10ae0:	mov	r0, #0
   10ae4:	bl	109d4 <dcgettext@plt>
   10ae8:	mov	r1, r4
   10aec:	bl	10ab8 <fputs@plt>
   10af0:	mov	r2, #5
   10af4:	ldr	r1, [pc, #212]	; 10bd0 <abort@plt+0x10c>
   10af8:	mov	r0, #0
   10afc:	bl	109d4 <dcgettext@plt>
   10b00:	ldr	r3, [pc, #204]	; 10bd4 <abort@plt+0x110>
   10b04:	mov	r1, #1
   10b08:	ldr	r3, [r3]
   10b0c:	mov	r2, r0
   10b10:	mov	r0, r4
   10b14:	bl	10a88 <__fprintf_chk@plt>
   10b18:	mov	r2, #5
   10b1c:	ldr	r1, [pc, #180]	; 10bd8 <abort@plt+0x114>
   10b20:	mov	r0, #0
   10b24:	bl	109d4 <dcgettext@plt>
   10b28:	mov	r1, r4
   10b2c:	bl	10ab8 <fputs@plt>
   10b30:	mov	r2, #5
   10b34:	ldr	r1, [pc, #160]	; 10bdc <abort@plt+0x118>
   10b38:	mov	r0, #0
   10b3c:	bl	109d4 <dcgettext@plt>
   10b40:	mov	r1, r4
   10b44:	bl	10ab8 <fputs@plt>
   10b48:	mov	r2, #5
   10b4c:	ldr	r1, [pc, #140]	; 10be0 <abort@plt+0x11c>
   10b50:	mov	r0, #0
   10b54:	bl	109d4 <dcgettext@plt>
   10b58:	mov	r1, r4
   10b5c:	bl	10ab8 <fputs@plt>
   10b60:	mov	r2, #5
   10b64:	ldr	r1, [pc, #120]	; 10be4 <abort@plt+0x120>
   10b68:	mov	r0, #0
   10b6c:	bl	109d4 <dcgettext@plt>
   10b70:	mov	r1, r4
   10b74:	bl	10ab8 <fputs@plt>
   10b78:	mov	r2, #5
   10b7c:	ldr	r1, [pc, #100]	; 10be8 <abort@plt+0x124>
   10b80:	mov	r0, #0
   10b84:	bl	109d4 <dcgettext@plt>
   10b88:	mov	r1, r4
   10b8c:	bl	10ab8 <fputs@plt>
   10b90:	mov	r2, #5
   10b94:	ldr	r1, [pc, #80]	; 10bec <abort@plt+0x128>
   10b98:	mov	r0, #0
   10b9c:	bl	109d4 <dcgettext@plt>
   10ba0:	ldr	r3, [pc, #72]	; 10bf0 <abort@plt+0x12c>
   10ba4:	mov	r1, #1
   10ba8:	mov	r2, r0
   10bac:	mov	r0, r4
   10bb0:	bl	10a88 <__fprintf_chk@plt>
   10bb4:	ldr	r3, [pc, #56]	; 10bf4 <abort@plt+0x130>
   10bb8:	ldr	r0, [r3]
   10bbc:	sub	r0, r0, r4
   10bc0:	clz	r0, r0
   10bc4:	lsr	r0, r0, #5
   10bc8:	bl	10a58 <exit@plt>
   10bcc:	andeq	r1, r1, ip, lsl #3
   10bd0:	muleq	r1, r8, r1
   10bd4:	andeq	r2, r2, r8
   10bd8:	andeq	r1, r1, r8, lsr #3
   10bdc:			; <UNDEFINED> instruction: 0x000111b4
   10be0:	andeq	r1, r1, r4, ror #3
   10be4:	andeq	r1, r1, r0, lsl r2
   10be8:	andeq	r1, r1, r4, lsr r2
   10bec:	andeq	r1, r1, ip, ror #4
   10bf0:	andeq	r1, r1, r8, lsl #5
   10bf4:	andeq	r2, r2, r0, lsl r0
   10bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bfc:	vpush	{d8}
   10c00:	ldr	r5, [pc, #616]	; 10e70 <abort@plt+0x3ac>
   10c04:	ldr	fp, [pc, #616]	; 10e74 <abort@plt+0x3b0>
   10c08:	ldr	r3, [pc, #616]	; 10e78 <abort@plt+0x3b4>
   10c0c:	sub	sp, sp, #60	; 0x3c
   10c10:	ldr	ip, [r5]
   10c14:	ldr	r2, [fp]
   10c18:	mov	sl, r0
   10c1c:	mov	r9, r1
   10c20:	mov	r0, #6
   10c24:	ldr	r1, [pc, #592]	; 10e7c <abort@plt+0x3b8>
   10c28:	str	ip, [sp, #52]	; 0x34
   10c2c:	str	r2, [r3]
   10c30:	bl	10aa0 <setlocale@plt>
   10c34:	ldr	r1, [pc, #580]	; 10e80 <abort@plt+0x3bc>
   10c38:	ldr	r0, [pc, #580]	; 10e84 <abort@plt+0x3c0>
   10c3c:	bl	10aac <bindtextdomain@plt>
   10c40:	ldr	r0, [pc, #572]	; 10e84 <abort@plt+0x3c0>
   10c44:	bl	109ec <textdomain@plt>
   10c48:	ldr	r0, [pc, #568]	; 10e88 <abort@plt+0x3c4>
   10c4c:	bl	11118 <abort@plt+0x654>
   10c50:	mov	r4, #0
   10c54:	ldr	r7, [pc, #560]	; 10e8c <abort@plt+0x3c8>
   10c58:	ldr	r6, [pc, #560]	; 10e90 <abort@plt+0x3cc>
   10c5c:	mov	r8, r4
   10c60:	str	r8, [sp]
   10c64:	mov	r3, r7
   10c68:	mov	r2, r6
   10c6c:	mov	r1, r9
   10c70:	mov	r0, sl
   10c74:	bl	10a4c <getopt_long@plt>
   10c78:	cmn	r0, #1
   10c7c:	beq	10e1c <abort@plt+0x358>
   10c80:	sub	r0, r0, #86	; 0x56
   10c84:	mov	r4, #1
   10c88:	cmp	r0, #29
   10c8c:	ldrls	pc, [pc, r0, lsl #2]
   10c90:	b	10e10 <abort@plt+0x34c>
   10c94:	ldrdeq	r0, [r1], -ip
   10c98:	andeq	r0, r1, r0, lsl lr
   10c9c:	andeq	r0, r1, r0, lsl lr
   10ca0:	andeq	r0, r1, r0, lsl lr
   10ca4:	andeq	r0, r1, r0, lsl lr
   10ca8:	andeq	r0, r1, r0, lsl lr
   10cac:	andeq	r0, r1, r0, lsl lr
   10cb0:	andeq	r0, r1, r0, lsl lr
   10cb4:	andeq	r0, r1, r0, lsl lr
   10cb8:	andeq	r0, r1, r0, lsl lr
   10cbc:	andeq	r0, r1, r0, lsl lr
   10cc0:	andeq	r0, r1, r0, lsl lr
   10cc4:	andeq	r0, r1, r0, lsl lr
   10cc8:	andeq	r0, r1, r0, lsl lr
   10ccc:	andeq	r0, r1, r0, lsl lr
   10cd0:	andeq	r0, r1, r0, lsl lr
   10cd4:	andeq	r0, r1, r0, lsl lr
   10cd8:	andeq	r0, r1, r0, lsl lr
   10cdc:	andeq	r0, r1, r4, lsl #28
   10ce0:	andeq	r0, r1, r0, lsl lr
   10ce4:	andeq	r0, r1, r0, lsl lr
   10ce8:	andeq	r0, r1, r0, lsl lr
   10cec:	andeq	r0, r1, r0, lsl lr
   10cf0:	andeq	r0, r1, r0, lsl lr
   10cf4:	andeq	r0, r1, r0, lsl lr
   10cf8:	andeq	r0, r1, r0, lsl lr
   10cfc:	andeq	r0, r1, r0, ror #24
   10d00:	andeq	r0, r1, r0, lsl lr
   10d04:	andeq	r0, r1, r0, lsl lr
   10d08:	andeq	r0, r1, ip, lsl #26
   10d0c:	mov	r1, #0
   10d10:	add	r0, sp, #44	; 0x2c
   10d14:	bl	10a04 <gettimeofday@plt>
   10d18:	cmp	r0, #0
   10d1c:	bne	10e3c <abort@plt+0x378>
   10d20:	vldr	s15, [sp, #48]	; 0x30
   10d24:	vldr	d5, [pc, #308]	; 10e60 <abort@plt+0x39c>
   10d28:	add	r1, sp, #32
   10d2c:	add	r0, sp, #24
   10d30:	vcvt.f64.s32	d6, s15
   10d34:	vldr	s15, [sp, #44]	; 0x2c
   10d38:	vcvt.f64.s32	d7, s15
   10d3c:	vdiv.f64	d8, d6, d5
   10d40:	vadd.f64	d8, d8, d7
   10d44:	bl	109f8 <uptime@plt>
   10d48:	cmp	r0, #0
   10d4c:	beq	10e50 <abort@plt+0x38c>
   10d50:	vldr	d6, [sp, #24]
   10d54:	vldr	d7, [pc, #268]	; 10e68 <abort@plt+0x3a4>
   10d58:	add	r0, sp, #56	; 0x38
   10d5c:	vsub.f64	d8, d8, d6
   10d60:	vadd.f64	d8, d8, d7
   10d64:	vcvt.s32.f64	s16, d8
   10d68:	vmov	r3, s16
   10d6c:	str	r3, [r0, #-36]!	; 0xffffffdc
   10d70:	bl	10a34 <localtime@plt>
   10d74:	cmp	r0, #0
   10d78:	beq	10e2c <abort@plt+0x368>
   10d7c:	ldr	r1, [r0]
   10d80:	ldr	r3, [r0, #16]
   10d84:	ldr	r2, [r0, #20]
   10d88:	str	r1, [sp, #12]
   10d8c:	ldr	r1, [r0, #4]
   10d90:	add	r2, r2, #1888	; 0x760
   10d94:	str	r1, [sp, #8]
   10d98:	ldr	r1, [r0, #8]
   10d9c:	add	r3, r3, #1
   10da0:	str	r1, [sp, #4]
   10da4:	ldr	r1, [r0, #12]
   10da8:	add	r2, r2, #12
   10dac:	str	r1, [sp]
   10db0:	mov	r0, #1
   10db4:	ldr	r1, [pc, #216]	; 10e94 <abort@plt+0x3d0>
   10db8:	bl	10a7c <__printf_chk@plt>
   10dbc:	ldr	r2, [sp, #52]	; 0x34
   10dc0:	ldr	r3, [r5]
   10dc4:	mov	r0, #0
   10dc8:	cmp	r2, r3
   10dcc:	bne	10e28 <abort@plt+0x364>
   10dd0:	add	sp, sp, #60	; 0x3c
   10dd4:	vpop	{d8}
   10dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ddc:	mov	r2, #5
   10de0:	ldr	r1, [pc, #176]	; 10e98 <abort@plt+0x3d4>
   10de4:	mov	r0, #0
   10de8:	bl	109d4 <dcgettext@plt>
   10dec:	ldr	r2, [fp]
   10df0:	ldr	r3, [pc, #164]	; 10e9c <abort@plt+0x3d8>
   10df4:	mov	r1, r0
   10df8:	mov	r0, #1
   10dfc:	bl	10a7c <__printf_chk@plt>
   10e00:	b	10dbc <abort@plt+0x2f8>
   10e04:	ldr	r3, [pc, #148]	; 10ea0 <abort@plt+0x3dc>
   10e08:	ldr	r0, [r3]
   10e0c:	bl	10ad0 <abort@plt+0xc>
   10e10:	ldr	r3, [pc, #140]	; 10ea4 <abort@plt+0x3e0>
   10e14:	ldr	r0, [r3]
   10e18:	bl	10ad0 <abort@plt+0xc>
   10e1c:	mov	r0, r4
   10e20:	bl	109c8 <print_uptime@plt>
   10e24:	b	10dbc <abort@plt+0x2f8>
   10e28:	bl	109e0 <__stack_chk_fail@plt>
   10e2c:	mov	r1, r0
   10e30:	ldr	r2, [pc, #112]	; 10ea8 <abort@plt+0x3e4>
   10e34:	mov	r0, #1
   10e38:	bl	10a1c <error@plt>
   10e3c:	bl	10a64 <__errno_location@plt>
   10e40:	ldr	r2, [pc, #100]	; 10eac <abort@plt+0x3e8>
   10e44:	ldr	r1, [r0]
   10e48:	mov	r0, #1
   10e4c:	bl	10a1c <error@plt>
   10e50:	mov	r1, r0
   10e54:	ldr	r2, [pc, #84]	; 10eb0 <abort@plt+0x3ec>
   10e58:	mov	r0, #1
   10e5c:	bl	10a1c <error@plt>
   10e60:	andeq	r0, r0, r0
   10e64:	smlawbmi	lr, r0, r4, r8
   10e68:	andeq	r0, r0, r0
   10e6c:	svccc	0x00e00000
   10e70:	andeq	r1, r2, r8, ror lr
   10e74:	andeq	r2, r2, r8
   10e78:	andeq	r2, r2, ip
   10e7c:	muleq	r1, r4, r1
   10e80:	muleq	r1, r4, r2
   10e84:	andeq	r1, r1, r8, lsr #5
   10e88:	andeq	r1, r1, r0, lsr r0
   10e8c:	andeq	r1, r1, ip, lsr r1
   10e90:	andeq	r1, r1, r8, lsl r3
   10e94:	ldrdeq	r1, [r1], -r8
   10e98:	strdeq	r1, [r1], -r8
   10e9c:	andeq	r1, r1, r4, lsl #6
   10ea0:	andeq	r2, r2, r4, lsl r0
   10ea4:	andeq	r2, r2, r0, lsl r0
   10ea8:	andeq	r1, r1, ip, asr #5
   10eac:			; <UNDEFINED> instruction: 0x000112b4
   10eb0:	andeq	r1, r1, r4, asr #5
   10eb4:	mov	fp, #0
   10eb8:	mov	lr, #0
   10ebc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec0:	mov	r2, sp
   10ec4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ecc:	ldr	ip, [pc, #16]	; 10ee4 <abort@plt+0x420>
   10ed0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed4:	ldr	r0, [pc, #12]	; 10ee8 <abort@plt+0x424>
   10ed8:	ldr	r3, [pc, #12]	; 10eec <abort@plt+0x428>
   10edc:	bl	10a28 <__libc_start_main@plt>
   10ee0:	bl	10ac4 <abort@plt>
   10ee4:	andeq	r1, r1, r4, lsl r1
   10ee8:	strdeq	r0, [r1], -r8
   10eec:	strheq	r1, [r1], -r4
   10ef0:	ldr	r3, [pc, #20]	; 10f0c <abort@plt+0x448>
   10ef4:	ldr	r2, [pc, #20]	; 10f10 <abort@plt+0x44c>
   10ef8:	add	r3, pc, r3
   10efc:	ldr	r2, [r3, r2]
   10f00:	cmp	r2, #0
   10f04:	bxeq	lr
   10f08:	b	10a40 <__gmon_start__@plt>
   10f0c:	andeq	r1, r1, ip, lsl #1
   10f10:	andeq	r0, r0, ip, rrx
   10f14:	ldr	r0, [pc, #24]	; 10f34 <abort@plt+0x470>
   10f18:	ldr	r3, [pc, #24]	; 10f38 <abort@plt+0x474>
   10f1c:	cmp	r3, r0
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <abort@plt+0x478>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r2, r2, r8
   10f38:	andeq	r2, r2, r8
   10f3c:	andeq	r0, r0, r0
   10f40:	ldr	r0, [pc, #36]	; 10f6c <abort@plt+0x4a8>
   10f44:	ldr	r1, [pc, #36]	; 10f70 <abort@plt+0x4ac>
   10f48:	sub	r1, r1, r0
   10f4c:	asr	r1, r1, #2
   10f50:	add	r1, r1, r1, lsr #31
   10f54:	asrs	r1, r1, #1
   10f58:	bxeq	lr
   10f5c:	ldr	r3, [pc, #16]	; 10f74 <abort@plt+0x4b0>
   10f60:	cmp	r3, #0
   10f64:	bxeq	lr
   10f68:	bx	r3
   10f6c:	andeq	r2, r2, r8
   10f70:	andeq	r2, r2, r8
   10f74:	andeq	r0, r0, r0
   10f78:	push	{r4, lr}
   10f7c:	ldr	r4, [pc, #24]	; 10f9c <abort@plt+0x4d8>
   10f80:	ldrb	r3, [r4]
   10f84:	cmp	r3, #0
   10f88:	popne	{r4, pc}
   10f8c:	bl	10f14 <abort@plt+0x450>
   10f90:	mov	r3, #1
   10f94:	strb	r3, [r4]
   10f98:	pop	{r4, pc}
   10f9c:	andeq	r2, r2, r8, lsl r0
   10fa0:	b	10f40 <abort@plt+0x47c>
   10fa4:	push	{r4, r5, r6, lr}
   10fa8:	mov	r4, r0
   10fac:	bl	10a10 <__fpending@plt>
   10fb0:	mov	r6, r0
   10fb4:	mov	r0, r4
   10fb8:	bl	109b0 <ferror@plt>
   10fbc:	mov	r5, r0
   10fc0:	mov	r0, r4
   10fc4:	bl	10a94 <fclose@plt>
   10fc8:	cmp	r5, #0
   10fcc:	mov	r4, r0
   10fd0:	bne	10ff0 <abort@plt+0x52c>
   10fd4:	cmp	r0, #0
   10fd8:	beq	10fe8 <abort@plt+0x524>
   10fdc:	cmp	r6, #0
   10fe0:	beq	11018 <abort@plt+0x554>
   10fe4:	mvn	r4, #0
   10fe8:	mov	r0, r4
   10fec:	pop	{r4, r5, r6, pc}
   10ff0:	cmp	r0, #0
   10ff4:	bne	10fe4 <abort@plt+0x520>
   10ff8:	bl	10a64 <__errno_location@plt>
   10ffc:	ldr	r3, [r0]
   11000:	cmp	r3, #32
   11004:	beq	10fe4 <abort@plt+0x520>
   11008:	str	r4, [r0]
   1100c:	mvn	r4, #0
   11010:	mov	r0, r4
   11014:	pop	{r4, r5, r6, pc}
   11018:	bl	10a64 <__errno_location@plt>
   1101c:	ldr	r4, [r0]
   11020:	subs	r4, r4, #9
   11024:	mvnne	r4, #0
   11028:	mov	r0, r4
   1102c:	pop	{r4, r5, r6, pc}
   11030:	ldr	r3, [pc, #108]	; 110a4 <abort@plt+0x5e0>
   11034:	push	{r4, lr}
   11038:	ldr	r0, [r3]
   1103c:	bl	10fa4 <abort@plt+0x4e0>
   11040:	cmp	r0, #0
   11044:	beq	1105c <abort@plt+0x598>
   11048:	bl	10a64 <__errno_location@plt>
   1104c:	ldr	r3, [r0]
   11050:	mov	r4, r0
   11054:	cmp	r3, #32
   11058:	bne	11078 <abort@plt+0x5b4>
   1105c:	ldr	r3, [pc, #68]	; 110a8 <abort@plt+0x5e4>
   11060:	ldr	r0, [r3]
   11064:	bl	10fa4 <abort@plt+0x4e0>
   11068:	cmp	r0, #0
   1106c:	popeq	{r4, pc}
   11070:	mov	r0, #1
   11074:	bl	109bc <_exit@plt>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #40]	; 110ac <abort@plt+0x5e8>
   11080:	mov	r0, #0
   11084:	bl	109d4 <dcgettext@plt>
   11088:	ldr	r1, [r4]
   1108c:	ldr	r2, [pc, #28]	; 110b0 <abort@plt+0x5ec>
   11090:	mov	r3, r0
   11094:	mov	r0, #0
   11098:	bl	10a1c <error@plt>
   1109c:	mov	r0, #1
   110a0:	bl	109bc <_exit@plt>
   110a4:	andeq	r2, r2, r4, lsl r0
   110a8:	andeq	r2, r2, r0, lsl r0
   110ac:	andeq	r1, r1, r0, asr #6
   110b0:	andeq	r1, r1, ip, asr #6
   110b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110b8:	mov	r7, r0
   110bc:	ldr	r6, [pc, #72]	; 1110c <abort@plt+0x648>
   110c0:	ldr	r5, [pc, #72]	; 11110 <abort@plt+0x64c>
   110c4:	add	r6, pc, r6
   110c8:	add	r5, pc, r5
   110cc:	sub	r6, r6, r5
   110d0:	mov	r8, r1
   110d4:	mov	r9, r2
   110d8:	bl	10990 <_init@@Base>
   110dc:	asrs	r6, r6, #2
   110e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110e4:	mov	r4, #0
   110e8:	add	r4, r4, #1
   110ec:	ldr	r3, [r5], #4
   110f0:	mov	r2, r9
   110f4:	mov	r1, r8
   110f8:	mov	r0, r7
   110fc:	blx	r3
   11100:	cmp	r6, r4
   11104:	bne	110e8 <abort@plt+0x624>
   11108:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1110c:	andeq	r0, r1, r8, lsr #27
   11110:	andeq	r0, r1, r0, lsr #27
   11114:	bx	lr
   11118:	ldr	r3, [pc, #12]	; 1112c <abort@plt+0x668>
   1111c:	mov	r1, #0
   11120:	add	r3, pc, r3
   11124:	ldr	r2, [r3]
   11128:	b	10a70 <__cxa_atexit@plt>
   1112c:	ldrdeq	r0, [r1], -ip

Disassembly of section .fini:

00011130 <_fini@@Base>:
   11130:	push	{r3, lr}
   11134:	pop	{r3, pc}
