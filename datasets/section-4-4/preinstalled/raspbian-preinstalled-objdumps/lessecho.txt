
raspbian-preinstalled/lessecho:     file format elf32-littlearm


Disassembly of section .init:

00010498 <.init>:
   10498:	push	{r3, lr}
   1049c:	bl	10a88 <abort@plt+0x54c>
   104a0:	pop	{r3, pc}

Disassembly of section .plt:

000104a4 <strcmp@plt-0x14>:
   104a4:	push	{lr}		; (str lr, [sp, #-4]!)
   104a8:	ldr	lr, [pc, #4]	; 104b4 <strcmp@plt-0x4>
   104ac:	add	lr, pc, lr
   104b0:	ldr	pc, [lr, #8]!
   104b4:	andeq	r0, r1, r8, lsl #22

000104b8 <strcmp@plt>:
   104b8:	add	ip, pc, #0, 12
   104bc:	add	ip, ip, #16, 20	; 0x10000
   104c0:	ldr	pc, [ip, #2824]!	; 0xb08

000104c4 <__stack_chk_fail@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2816]!	; 0xb00

000104d0 <fwrite@plt>:
   104d0:	add	ip, pc, #0, 12
   104d4:	add	ip, ip, #16, 20	; 0x10000
   104d8:	ldr	pc, [ip, #2808]!	; 0xaf8

000104dc <puts@plt>:
   104dc:	add	ip, pc, #0, 12
   104e0:	add	ip, ip, #16, 20	; 0x10000
   104e4:	ldr	pc, [ip, #2800]!	; 0xaf0

000104e8 <__libc_start_main@plt>:
   104e8:	add	ip, pc, #0, 12
   104ec:	add	ip, ip, #16, 20	; 0x10000
   104f0:	ldr	pc, [ip, #2792]!	; 0xae8

000104f4 <__gmon_start__@plt>:
   104f4:	add	ip, pc, #0, 12
   104f8:	add	ip, ip, #16, 20	; 0x10000
   104fc:	ldr	pc, [ip, #2784]!	; 0xae0

00010500 <exit@plt>:
   10500:	add	ip, pc, #0, 12
   10504:	add	ip, ip, #16, 20	; 0x10000
   10508:	ldr	pc, [ip, #2776]!	; 0xad8

0001050c <strchr@plt>:
   1050c:	add	ip, pc, #0, 12
   10510:	add	ip, ip, #16, 20	; 0x10000
   10514:	ldr	pc, [ip, #2768]!	; 0xad0

00010518 <putchar@plt>:
   10518:	add	ip, pc, #0, 12
   1051c:	add	ip, ip, #16, 20	; 0x10000
   10520:	ldr	pc, [ip, #2760]!	; 0xac8

00010524 <__printf_chk@plt>:
   10524:	add	ip, pc, #0, 12
   10528:	add	ip, ip, #16, 20	; 0x10000
   1052c:	ldr	pc, [ip, #2752]!	; 0xac0

00010530 <__fprintf_chk@plt>:
   10530:	add	ip, pc, #0, 12
   10534:	add	ip, ip, #16, 20	; 0x10000
   10538:	ldr	pc, [ip, #2744]!	; 0xab8

0001053c <abort@plt>:
   1053c:	add	ip, pc, #0, 12
   10540:	add	ip, ip, #16, 20	; 0x10000
   10544:	ldr	pc, [ip, #2736]!	; 0xab0

Disassembly of section .text:

00010548 <.text>:
   10548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1054c:	mov	r2, #0
   10550:	ldr	r9, [pc, #1200]	; 10a08 <abort@plt+0x4cc>
   10554:	ldr	sl, [pc, #1200]	; 10a0c <abort@plt+0x4d0>
   10558:	ldr	r5, [pc, #1200]	; 10a10 <abort@plt+0x4d4>
   1055c:	sub	sp, sp, #36	; 0x24
   10560:	ldr	r3, [r9]
   10564:	mov	r6, r1
   10568:	add	r7, sl, #4
   1056c:	str	r3, [sp, #28]
   10570:	sub	r8, r0, #1
   10574:	cmp	r8, #0
   10578:	ble	106d0 <abort@plt+0x194>
   1057c:	ldr	r3, [r6, #4]!
   10580:	ldrb	r1, [r3]
   10584:	cmp	r1, #45	; 0x2d
   10588:	orrne	r2, r2, #1
   1058c:	cmp	r2, #0
   10590:	bne	1084c <abort@plt+0x310>
   10594:	ldrb	r2, [r3, #1]
   10598:	sub	r2, r2, #45	; 0x2d
   1059c:	cmp	r2, #67	; 0x43
   105a0:	ldrls	pc, [pc, r2, lsl #2]
   105a4:	b	10960 <abort@plt+0x424>
   105a8:	andeq	r0, r1, r8, lsl r7
   105ac:	andeq	r0, r1, r0, ror #18
   105b0:	andeq	r0, r1, r0, ror #18
   105b4:	andeq	r0, r1, r0, ror #18
   105b8:	andeq	r0, r1, r0, ror #18
   105bc:	andeq	r0, r1, r0, ror #18
   105c0:	andeq	r0, r1, r0, ror #18
   105c4:	andeq	r0, r1, r0, ror #18
   105c8:	andeq	r0, r1, r0, ror #18
   105cc:	andeq	r0, r1, r0, ror #18
   105d0:	andeq	r0, r1, r0, ror #18
   105d4:	andeq	r0, r1, r0, ror #18
   105d8:	andeq	r0, r1, r0, ror #18
   105dc:	andeq	r0, r1, r0, ror #18
   105e0:	andeq	r0, r1, r0, ror #18
   105e4:	andeq	r0, r1, r0, ror #18
   105e8:	andeq	r0, r1, r0, ror #18
   105ec:	andeq	r0, r1, r0, ror #18
   105f0:			; <UNDEFINED> instruction: 0x000106b8
   105f4:	andeq	r0, r1, r0, ror #18
   105f8:	andeq	r0, r1, r0, ror #18
   105fc:	andeq	r0, r1, r0, ror #18
   10600:	andeq	r0, r1, r0, ror #18
   10604:	andeq	r0, r1, r0, ror #18
   10608:	andeq	r0, r1, r0, ror #18
   1060c:	andeq	r0, r1, r0, ror #18
   10610:	andeq	r0, r1, r0, ror #18
   10614:	andeq	r0, r1, r0, ror #18
   10618:	andeq	r0, r1, r0, ror #18
   1061c:	andeq	r0, r1, r0, ror #18
   10620:	andeq	r0, r1, r0, ror #18
   10624:	andeq	r0, r1, r0, ror #18
   10628:	andeq	r0, r1, r0, ror #18
   1062c:	andeq	r0, r1, r0, ror #18
   10630:	andeq	r0, r1, r0, ror #18
   10634:	andeq	r0, r1, r0, ror #18
   10638:	andeq	r0, r1, r0, ror #18
   1063c:	andeq	r0, r1, r0, ror #18
   10640:	andeq	r0, r1, r0, ror #18
   10644:	andeq	r0, r1, r0, ror #18
   10648:	andeq	r0, r1, r0, ror #18
   1064c:	andeq	r0, r1, r0, ror #18
   10650:	andeq	r0, r1, r0, ror #18
   10654:	andeq	r0, r1, r0, ror #18
   10658:	andeq	r0, r1, r0, ror #18
   1065c:	andeq	r0, r1, r0, ror #18
   10660:	andeq	r0, r1, r0, ror #18
   10664:	andeq	r0, r1, r0, ror #18
   10668:	andeq	r0, r1, r0, ror #18
   1066c:	andeq	r0, r1, r0, ror #18
   10670:	andeq	r0, r1, r0, ror #18
   10674:	andeq	r0, r1, r0, ror #18
   10678:	andeq	r0, r1, ip, lsr #16
   1067c:	andeq	r0, r1, r0, ror #18
   10680:	andeq	r0, r1, ip, lsl r8
   10684:	strdeq	r0, [r1], -r4
   10688:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1068c:	andeq	r0, r1, r4, lsr #15
   10690:	andeq	r0, r1, r0, ror #18
   10694:	andeq	r0, r1, r0, ror #18
   10698:	andeq	r0, r1, r0, ror #18
   1069c:	andeq	r0, r1, r0, ror #18
   106a0:	andeq	r0, r1, r0, ror #18
   106a4:	andeq	r0, r1, r0, ror #18
   106a8:	andeq	r0, r1, ip, ror r7
   106ac:	andeq	r0, r1, ip, lsr r7
   106b0:	andeq	r0, r1, ip, lsr #14
   106b4:	andeq	r0, r1, ip, ror #13
   106b8:	ldr	r3, [pc, #852]	; 10a14 <abort@plt+0x4d8>
   106bc:	mov	r2, #78	; 0x4e
   106c0:	mov	r1, #1
   106c4:	ldr	r3, [r3]
   106c8:	ldr	r0, [pc, #840]	; 10a18 <abort@plt+0x4dc>
   106cc:	bl	104d0 <fwrite@plt>
   106d0:	ldr	r2, [sp, #28]
   106d4:	ldr	r3, [r9]
   106d8:	mov	r0, #0
   106dc:	cmp	r2, r3
   106e0:	bne	109fc <abort@plt+0x4c0>
   106e4:	add	sp, sp, #36	; 0x24
   106e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   106ec:	add	r4, r3, #2
   106f0:	mov	r0, r4
   106f4:	add	r1, sp, #12
   106f8:	bl	10b68 <abort@plt+0x62c>
   106fc:	ldr	r3, [sp, #12]
   10700:	cmp	r3, r4
   10704:	strb	r0, [r5, #8]
   10708:	beq	109f4 <abort@plt+0x4b8>
   1070c:	mov	r2, #0
   10710:	mov	r0, r8
   10714:	b	10570 <abort@plt+0x34>
   10718:	ldrb	r2, [r3, #2]
   1071c:	cmp	r2, #0
   10720:	bne	10968 <abort@plt+0x42c>
   10724:	mov	r2, #1
   10728:	b	10710 <abort@plt+0x1d4>
   1072c:	ldrb	r3, [r3, #2]
   10730:	mov	r2, #0
   10734:	strb	r3, [r5, #8]
   10738:	b	10710 <abort@plt+0x1d4>
   1073c:	add	r4, r3, #2
   10740:	add	r1, sp, #12
   10744:	mov	r0, r4
   10748:	bl	10b68 <abort@plt+0x62c>
   1074c:	ldr	r3, [sl, #8]
   10750:	ldr	r1, [sp, #12]
   10754:	add	r2, sl, r3
   10758:	cmp	r1, r4
   1075c:	add	r3, r3, #1
   10760:	str	r3, [sl, #8]
   10764:	strb	r0, [r2, #12]
   10768:	beq	10a00 <abort@plt+0x4c4>
   1076c:	add	r3, sl, r3
   10770:	mov	r2, #0
   10774:	strb	r2, [r3, #12]
   10778:	b	10710 <abort@plt+0x1d4>
   1077c:	ldr	r2, [sl, #8]
   10780:	ldrb	r0, [r3, #2]
   10784:	add	r3, r2, #1
   10788:	add	r2, sl, r2
   1078c:	add	r1, sl, r3
   10790:	strb	r0, [r2, #12]
   10794:	mov	r2, #0
   10798:	str	r3, [sl, #8]
   1079c:	strb	r2, [r1, #12]
   107a0:	b	10710 <abort@plt+0x1d4>
   107a4:	add	r4, r3, #2
   107a8:	mov	r0, r4
   107ac:	add	r1, sp, #12
   107b0:	bl	10b68 <abort@plt+0x62c>
   107b4:	ldr	r3, [sp, #12]
   107b8:	str	r7, [r5, #4]
   107bc:	cmp	r3, r4
   107c0:	strb	r0, [sl, #4]
   107c4:	bne	1070c <abort@plt+0x1d0>
   107c8:	ldr	r0, [pc, #588]	; 10a1c <abort@plt+0x4e0>
   107cc:	bl	10b3c <abort@plt+0x600>
   107d0:	ldrb	r2, [r3, #2]
   107d4:	cmp	r2, #45	; 0x2d
   107d8:	bne	1083c <abort@plt+0x300>
   107dc:	ldrb	r2, [r3, #3]
   107e0:	cmp	r2, #0
   107e4:	bne	1083c <abort@plt+0x300>
   107e8:	ldr	r3, [pc, #560]	; 10a20 <abort@plt+0x4e4>
   107ec:	str	r3, [r5, #4]
   107f0:	b	10710 <abort@plt+0x1d4>
   107f4:	add	r4, r3, #2
   107f8:	mov	r0, r4
   107fc:	add	r1, sp, #12
   10800:	bl	10b68 <abort@plt+0x62c>
   10804:	ldr	r3, [sp, #12]
   10808:	cmp	r3, r4
   1080c:	strb	r0, [r5]
   10810:	bne	1070c <abort@plt+0x1d0>
   10814:	ldr	r0, [pc, #520]	; 10a24 <abort@plt+0x4e8>
   10818:	bl	10b3c <abort@plt+0x600>
   1081c:	ldrb	r3, [r3, #2]
   10820:	mov	r2, #0
   10824:	strb	r3, [r5]
   10828:	b	10710 <abort@plt+0x1d4>
   1082c:	mov	r3, #1
   10830:	str	r3, [sl]
   10834:	mov	r2, #0
   10838:	b	10710 <abort@plt+0x1d4>
   1083c:	add	r3, r3, #2
   10840:	str	r3, [r5, #4]
   10844:	mov	r2, #0
   10848:	b	10710 <abort@plt+0x1d4>
   1084c:	ldr	sl, [pc, #440]	; 10a0c <abort@plt+0x4d0>
   10850:	ldr	r8, [pc, #440]	; 10a10 <abort@plt+0x4d4>
   10854:	sub	r4, r0, #2
   10858:	add	r5, sl, #12
   1085c:	ldr	r7, [r6], #4
   10860:	str	r7, [sp, #12]
   10864:	ldrb	r1, [r7]
   10868:	cmp	r1, #0
   1086c:	beq	108f8 <abort@plt+0x3bc>
   10870:	mov	fp, r7
   10874:	b	1088c <abort@plt+0x350>
   10878:	add	fp, fp, #1
   1087c:	str	fp, [sp, #12]
   10880:	ldrb	r1, [fp]
   10884:	cmp	r1, #0
   10888:	beq	108f8 <abort@plt+0x3bc>
   1088c:	mov	r0, r5
   10890:	bl	1050c <strchr@plt>
   10894:	cmp	r0, #0
   10898:	beq	10878 <abort@plt+0x33c>
   1089c:	ldr	r3, [sl]
   108a0:	cmp	r3, #0
   108a4:	bne	108b8 <abort@plt+0x37c>
   108a8:	ldr	r3, [r8, #4]
   108ac:	ldrb	r3, [r3]
   108b0:	cmp	r3, #0
   108b4:	bne	10904 <abort@plt+0x3c8>
   108b8:	ldrb	r1, [r8]
   108bc:	ldrb	r2, [r8, #8]
   108c0:	mov	r3, r7
   108c4:	str	r1, [sp]
   108c8:	mov	r0, #1
   108cc:	ldr	r1, [pc, #340]	; 10a28 <abort@plt+0x4ec>
   108d0:	bl	10524 <__printf_chk@plt>
   108d4:	cmp	r4, #0
   108d8:	movgt	r0, #32
   108dc:	movle	r0, #10
   108e0:	sub	r4, r4, #1
   108e4:	bl	10518 <putchar@plt>
   108e8:	add	r3, r4, #1
   108ec:	cmp	r3, #0
   108f0:	bgt	1085c <abort@plt+0x320>
   108f4:	b	106d0 <abort@plt+0x194>
   108f8:	ldr	r3, [sl]
   108fc:	cmp	r3, #0
   10900:	bne	108b8 <abort@plt+0x37c>
   10904:	str	r7, [sp, #12]
   10908:	ldrb	r1, [r7]
   1090c:	cmp	r1, #0
   10910:	bne	1093c <abort@plt+0x400>
   10914:	b	108d4 <abort@plt+0x398>
   10918:	ldr	r3, [sp, #12]
   1091c:	ldrb	r0, [r3]
   10920:	bl	10518 <putchar@plt>
   10924:	ldr	r3, [sp, #12]
   10928:	add	r2, r3, #1
   1092c:	str	r2, [sp, #12]
   10930:	ldrb	r1, [r3, #1]
   10934:	cmp	r1, #0
   10938:	beq	108d4 <abort@plt+0x398>
   1093c:	mov	r0, r5
   10940:	bl	1050c <strchr@plt>
   10944:	cmp	r0, #0
   10948:	beq	10918 <abort@plt+0x3dc>
   1094c:	ldr	r2, [r8, #4]
   10950:	ldr	r1, [pc, #212]	; 10a2c <abort@plt+0x4f0>
   10954:	mov	r0, #1
   10958:	bl	10524 <__printf_chk@plt>
   1095c:	b	10918 <abort@plt+0x3dc>
   10960:	ldr	r0, [pc, #200]	; 10a30 <abort@plt+0x4f4>
   10964:	bl	10b3c <abort@plt+0x600>
   10968:	add	r4, r3, #2
   1096c:	mov	r0, r4
   10970:	ldr	r1, [pc, #188]	; 10a34 <abort@plt+0x4f8>
   10974:	bl	104b8 <strcmp@plt>
   10978:	cmp	r0, #0
   1097c:	beq	1099c <abort@plt+0x460>
   10980:	mov	r0, r4
   10984:	ldr	r1, [pc, #172]	; 10a38 <abort@plt+0x4fc>
   10988:	bl	104b8 <strcmp@plt>
   1098c:	cmp	r0, #0
   10990:	beq	106b8 <abort@plt+0x17c>
   10994:	ldr	r0, [pc, #160]	; 10a3c <abort@plt+0x500>
   10998:	bl	10b3c <abort@plt+0x600>
   1099c:	ldr	r3, [pc, #156]	; 10a40 <abort@plt+0x504>
   109a0:	b	109ac <abort@plt+0x470>
   109a4:	cmp	r2, #0
   109a8:	beq	106d0 <abort@plt+0x194>
   109ac:	ldrb	r2, [r3, #1]
   109b0:	add	r3, r3, #1
   109b4:	cmp	r2, #32
   109b8:	bne	109a4 <abort@plt+0x468>
   109bc:	add	ip, sp, #16
   109c0:	b	109c8 <abort@plt+0x48c>
   109c4:	strb	r1, [ip], #1
   109c8:	ldrb	r1, [r3, #1]!
   109cc:	and	r2, r1, #223	; 0xdf
   109d0:	cmp	r1, #36	; 0x24
   109d4:	cmpne	r2, #0
   109d8:	movne	r2, #1
   109dc:	moveq	r2, #0
   109e0:	bne	109c4 <abort@plt+0x488>
   109e4:	add	r0, sp, #16
   109e8:	strb	r2, [ip]
   109ec:	bl	104dc <puts@plt>
   109f0:	b	106d0 <abort@plt+0x194>
   109f4:	ldr	r0, [pc, #72]	; 10a44 <abort@plt+0x508>
   109f8:	bl	10b3c <abort@plt+0x600>
   109fc:	bl	104c4 <__stack_chk_fail@plt>
   10a00:	ldr	r0, [pc, #64]	; 10a48 <abort@plt+0x50c>
   10a04:	bl	10b3c <abort@plt+0x600>
   10a08:			; <UNDEFINED> instruction: 0x00020eb8
   10a0c:	andeq	r1, r2, r0, lsr #32
   10a10:	andeq	r1, r2, r8
   10a14:	andeq	r1, r2, r8, lsl r0
   10a18:	andeq	r0, r1, r8, lsr sp
   10a1c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a20:	muleq	r1, r4, sp
   10a24:	ldrdeq	r0, [r1], -r8
   10a28:	andeq	r0, r1, r8, asr #27
   10a2c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a30:			; <UNDEFINED> instruction: 0x00010db0
   10a34:	andeq	r0, r1, r8, lsl #27
   10a38:	muleq	r1, r0, sp
   10a3c:	muleq	r1, r8, sp
   10a40:	andeq	r0, r1, r4, asr #25
   10a44:	andeq	r0, r1, r8, lsl #26
   10a48:	andeq	r0, r1, r0, lsr #26
   10a4c:	mov	fp, #0
   10a50:	mov	lr, #0
   10a54:	pop	{r1}		; (ldr r1, [sp], #4)
   10a58:	mov	r2, sp
   10a5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a60:	push	{r0}		; (str r0, [sp, #-4]!)
   10a64:	ldr	ip, [pc, #16]	; 10a7c <abort@plt+0x540>
   10a68:	push	{ip}		; (str ip, [sp, #-4]!)
   10a6c:	ldr	r0, [pc, #12]	; 10a80 <abort@plt+0x544>
   10a70:	ldr	r3, [pc, #12]	; 10a84 <abort@plt+0x548>
   10a74:	bl	104e8 <__libc_start_main@plt>
   10a78:	bl	1053c <abort@plt>
   10a7c:			; <UNDEFINED> instruction: 0x00010cb0
   10a80:	andeq	r0, r1, r8, asr #10
   10a84:	andeq	r0, r1, r0, asr ip
   10a88:	ldr	r3, [pc, #20]	; 10aa4 <abort@plt+0x568>
   10a8c:	ldr	r2, [pc, #20]	; 10aa8 <abort@plt+0x56c>
   10a90:	add	r3, pc, r3
   10a94:	ldr	r2, [r3, r2]
   10a98:	cmp	r2, #0
   10a9c:	bxeq	lr
   10aa0:	b	104f4 <__gmon_start__@plt>
   10aa4:	andeq	r0, r1, r4, lsr #10
   10aa8:	andeq	r0, r0, ip, lsr r0
   10aac:	ldr	r0, [pc, #24]	; 10acc <abort@plt+0x590>
   10ab0:	ldr	r3, [pc, #24]	; 10ad0 <abort@plt+0x594>
   10ab4:	cmp	r3, r0
   10ab8:	bxeq	lr
   10abc:	ldr	r3, [pc, #16]	; 10ad4 <abort@plt+0x598>
   10ac0:	cmp	r3, #0
   10ac4:	bxeq	lr
   10ac8:	bx	r3
   10acc:	andeq	r1, r2, r8, lsl r0
   10ad0:	andeq	r1, r2, r8, lsl r0
   10ad4:	andeq	r0, r0, r0
   10ad8:	ldr	r0, [pc, #36]	; 10b04 <abort@plt+0x5c8>
   10adc:	ldr	r1, [pc, #36]	; 10b08 <abort@plt+0x5cc>
   10ae0:	sub	r1, r1, r0
   10ae4:	asr	r1, r1, #2
   10ae8:	add	r1, r1, r1, lsr #31
   10aec:	asrs	r1, r1, #1
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <abort@plt+0x5d0>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r1, r2, r8, lsl r0
   10b08:	andeq	r1, r2, r8, lsl r0
   10b0c:	andeq	r0, r0, r0
   10b10:	push	{r4, lr}
   10b14:	ldr	r4, [pc, #24]	; 10b34 <abort@plt+0x5f8>
   10b18:	ldrb	r3, [r4]
   10b1c:	cmp	r3, #0
   10b20:	popne	{r4, pc}
   10b24:	bl	10aac <abort@plt+0x570>
   10b28:	mov	r3, #1
   10b2c:	strb	r3, [r4]
   10b30:	pop	{r4, pc}
   10b34:	andeq	r1, r2, ip, lsl r0
   10b38:	b	10ad8 <abort@plt+0x59c>
   10b3c:	ldr	r1, [pc, #28]	; 10b60 <abort@plt+0x624>
   10b40:	mov	r3, r0
   10b44:	push	{r4, lr}
   10b48:	ldr	r0, [r1]
   10b4c:	ldr	r2, [pc, #16]	; 10b64 <abort@plt+0x628>
   10b50:	mov	r1, #1
   10b54:	bl	10530 <__fprintf_chk@plt>
   10b58:	mov	r0, #1
   10b5c:	bl	10500 <exit@plt>
   10b60:	andeq	r1, r2, r8, lsl r0
   10b64:	andeq	r0, r1, r0, asr #25
   10b68:	push	{r4, r5, r6, lr}
   10b6c:	ldrb	r3, [r0]
   10b70:	cmp	r3, #32
   10b74:	cmpne	r3, #9
   10b78:	bne	10b8c <abort@plt+0x650>
   10b7c:	ldrb	r3, [r0, #1]!
   10b80:	cmp	r3, #9
   10b84:	cmpne	r3, #32
   10b88:	beq	10b7c <abort@plt+0x640>
   10b8c:	cmp	r3, #45	; 0x2d
   10b90:	addeq	r0, r0, #1
   10b94:	moveq	r6, #1
   10b98:	beq	10ba8 <abort@plt+0x66c>
   10b9c:	cmp	r3, #43	; 0x2b
   10ba0:	addeq	r0, r0, #1
   10ba4:	mov	r6, #0
   10ba8:	ldrb	r2, [r0]
   10bac:	cmp	r2, #48	; 0x30
   10bb0:	movne	r4, #10
   10bb4:	beq	10c30 <abort@plt+0x6f4>
   10bb8:	mov	ip, #0
   10bbc:	b	10bc8 <abort@plt+0x68c>
   10bc0:	mla	ip, ip, r4, r3
   10bc4:	ldrb	r2, [r0, #1]!
   10bc8:	sub	r3, r2, #48	; 0x30
   10bcc:	sub	r5, r2, #97	; 0x61
   10bd0:	uxtb	lr, r3
   10bd4:	cmp	lr, #9
   10bd8:	bls	10bf8 <abort@plt+0x6bc>
   10bdc:	cmp	r5, #5
   10be0:	sub	r3, r2, #55	; 0x37
   10be4:	sub	lr, r2, #65	; 0x41
   10be8:	subls	r3, r2, #87	; 0x57
   10bec:	bls	10bf8 <abort@plt+0x6bc>
   10bf0:	cmp	lr, #5
   10bf4:	bhi	10c00 <abort@plt+0x6c4>
   10bf8:	cmp	r3, r4
   10bfc:	blt	10bc0 <abort@plt+0x684>
   10c00:	cmp	r2, #32
   10c04:	cmpne	r2, #9
   10c08:	bne	10c1c <abort@plt+0x6e0>
   10c0c:	ldrb	r3, [r0, #1]!
   10c10:	cmp	r3, #9
   10c14:	cmpne	r3, #32
   10c18:	beq	10c0c <abort@plt+0x6d0>
   10c1c:	cmp	r6, #0
   10c20:	rsbne	ip, ip, #0
   10c24:	str	r0, [r1]
   10c28:	mov	r0, ip
   10c2c:	pop	{r4, r5, r6, pc}
   10c30:	ldrb	r2, [r0, #1]
   10c34:	cmp	r2, #120	; 0x78
   10c38:	addne	r0, r0, #1
   10c3c:	ldrbeq	r2, [r0, #2]
   10c40:	movne	r4, #8
   10c44:	moveq	r4, #16
   10c48:	addeq	r0, r0, #2
   10c4c:	b	10bb8 <abort@plt+0x67c>
   10c50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c54:	mov	r7, r0
   10c58:	ldr	r6, [pc, #72]	; 10ca8 <abort@plt+0x76c>
   10c5c:	ldr	r5, [pc, #72]	; 10cac <abort@plt+0x770>
   10c60:	add	r6, pc, r6
   10c64:	add	r5, pc, r5
   10c68:	sub	r6, r6, r5
   10c6c:	mov	r8, r1
   10c70:	mov	r9, r2
   10c74:	bl	10498 <strcmp@plt-0x20>
   10c78:	asrs	r6, r6, #2
   10c7c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c80:	mov	r4, #0
   10c84:	add	r4, r4, #1
   10c88:	ldr	r3, [r5], #4
   10c8c:	mov	r2, r9
   10c90:	mov	r1, r8
   10c94:	mov	r0, r7
   10c98:	blx	r3
   10c9c:	cmp	r6, r4
   10ca0:	bne	10c84 <abort@plt+0x748>
   10ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ca8:	andeq	r0, r1, ip, asr #4
   10cac:	andeq	r0, r1, r4, asr #4
   10cb0:	bx	lr

Disassembly of section .fini:

00010cb4 <.fini>:
   10cb4:	push	{r3, lr}
   10cb8:	pop	{r3, pc}
