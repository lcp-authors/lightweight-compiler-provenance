
raspbian-preinstalled/pi-packages:     file format elf32-littlearm


Disassembly of section .init:

00015b30 <.init>:
   15b30:	push	{r3, lr}
   15b34:	bl	17124 <g_strcmp0@plt+0x3c8>
   15b38:	pop	{r3, pc}

Disassembly of section .plt:

00015b3c <gtk_expander_get_expanded@plt-0x14>:
   15b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   15b40:	ldr	lr, [pc, #4]	; 15b4c <gtk_expander_get_expanded@plt-0x4>
   15b44:	add	lr, pc, lr
   15b48:	ldr	pc, [lr, #8]!
   15b4c:			; <UNDEFINED> instruction: 0x000274b4

00015b50 <gtk_expander_get_expanded@plt>:
   15b50:	add	ip, pc, #0, 12
   15b54:	add	ip, ip, #159744	; 0x27000
   15b58:	ldr	pc, [ip, #1204]!	; 0x4b4

00015b5c <g_string_set_size@plt>:
   15b5c:	add	ip, pc, #0, 12
   15b60:	add	ip, ip, #159744	; 0x27000
   15b64:	ldr	pc, [ip, #1196]!	; 0x4ac

00015b68 <g_object_new@plt>:
   15b68:	add	ip, pc, #0, 12
   15b6c:	add	ip, ip, #159744	; 0x27000
   15b70:	ldr	pc, [ip, #1188]!	; 0x4a4

00015b74 <gtk_tree_store_append@plt>:
   15b74:	add	ip, pc, #0, 12
   15b78:	add	ip, ip, #159744	; 0x27000
   15b7c:	ldr	pc, [ip, #1180]!	; 0x49c

00015b80 <gtk_application_new@plt>:
   15b80:	add	ip, pc, #0, 12
   15b84:	add	ip, ip, #159744	; 0x27000
   15b88:	ldr	pc, [ip, #1172]!	; 0x494

00015b8c <g_malloc_n@plt>:
   15b8c:	add	ip, pc, #0, 12
   15b90:	add	ip, ip, #159744	; 0x27000
   15b94:	ldr	pc, [ip, #1164]!	; 0x48c

00015b98 <gtk_tree_view_append_column@plt>:
   15b98:	add	ip, pc, #0, 12
   15b9c:	add	ip, ip, #159744	; 0x27000
   15ba0:	ldr	pc, [ip, #1156]!	; 0x484

00015ba4 <g_settings_get_boolean@plt>:
   15ba4:	add	ip, pc, #0, 12
   15ba8:	add	ip, ip, #159744	; 0x27000
   15bac:	ldr	pc, [ip, #1148]!	; 0x47c

00015bb0 <gtk_window_set_type_hint@plt>:
   15bb0:	add	ip, pc, #0, 12
   15bb4:	add	ip, ip, #159744	; 0x27000
   15bb8:	ldr	pc, [ip, #1140]!	; 0x474

00015bbc <gtk_window_add_accel_group@plt>:
   15bbc:	add	ip, pc, #0, 12
   15bc0:	add	ip, ip, #159744	; 0x27000
   15bc4:	ldr	pc, [ip, #1132]!	; 0x46c

00015bc8 <gtk_dialog_get_action_area@plt>:
   15bc8:	add	ip, pc, #0, 12
   15bcc:	add	ip, ip, #159744	; 0x27000
   15bd0:	ldr	pc, [ip, #1124]!	; 0x464

00015bd4 <gdk_rgba_parse@plt>:
   15bd4:	add	ip, pc, #0, 12
   15bd8:	add	ip, ip, #159744	; 0x27000
   15bdc:	ldr	pc, [ip, #1116]!	; 0x45c

00015be0 <pk_control_get_properties_async@plt>:
   15be0:	add	ip, pc, #0, 12
   15be4:	add	ip, ip, #159744	; 0x27000
   15be8:	ldr	pc, [ip, #1108]!	; 0x454

00015bec <g_option_context_parse@plt>:
   15bec:	add	ip, pc, #0, 12
   15bf0:	add	ip, ip, #159744	; 0x27000
   15bf4:	ldr	pc, [ip, #1100]!	; 0x44c

00015bf8 <g_option_context_add_group@plt>:
   15bf8:	add	ip, pc, #0, 12
   15bfc:	add	ip, ip, #159744	; 0x27000
   15c00:	ldr	pc, [ip, #1092]!	; 0x444

00015c04 <pk_results_get_package_array@plt>:
   15c04:	add	ip, pc, #0, 12
   15c08:	add	ip, ip, #159744	; 0x27000
   15c0c:	ldr	pc, [ip, #1084]!	; 0x43c

00015c10 <g_settings_new@plt>:
   15c10:	add	ip, pc, #0, 12
   15c14:	add	ip, ip, #159744	; 0x27000
   15c18:	ldr	pc, [ip, #1076]!	; 0x434

00015c1c <gdk_x11_window_get_xid@plt>:
   15c1c:	add	ip, pc, #0, 12
   15c20:	add	ip, ip, #159744	; 0x27000
   15c24:	ldr	pc, [ip, #1068]!	; 0x42c

00015c28 <gtk_message_dialog_format_secondary_text@plt>:
   15c28:	add	ip, pc, #0, 12
   15c2c:	add	ip, ip, #159744	; 0x27000
   15c30:	ldr	pc, [ip, #1060]!	; 0x424

00015c34 <gtk_tree_store_new@plt>:
   15c34:	add	ip, pc, #0, 12
   15c38:	add	ip, ip, #159744	; 0x27000
   15c3c:	ldr	pc, [ip, #1052]!	; 0x41c

00015c40 <pk_results_get_media_change_required_array@plt>:
   15c40:	add	ip, pc, #0, 12
   15c44:	add	ip, ip, #159744	; 0x27000
   15c48:	ldr	pc, [ip, #1044]!	; 0x414

00015c4c <gtk_dialog_response@plt>:
   15c4c:	add	ip, pc, #0, 12
   15c50:	add	ip, ip, #159744	; 0x27000
   15c54:	ldr	pc, [ip, #1036]!	; 0x40c

00015c58 <g_return_if_fail_warning@plt>:
   15c58:	add	ip, pc, #0, 12
   15c5c:	add	ip, ip, #159744	; 0x27000
   15c60:	ldr	pc, [ip, #1028]!	; 0x404

00015c64 <pk_package_new@plt>:
   15c64:	add	ip, pc, #0, 12
   15c68:	add	ip, ip, #159744	; 0x27000
   15c6c:	ldr	pc, [ip, #1020]!	; 0x3fc

00015c70 <g_type_register_static_simple@plt>:
   15c70:	add	ip, pc, #0, 12
   15c74:	add	ip, ip, #159744	; 0x27000
   15c78:	ldr	pc, [ip, #1012]!	; 0x3f4

00015c7c <gtk_container_add_with_properties@plt>:
   15c7c:	add	ip, pc, #0, 12
   15c80:	add	ip, ip, #159744	; 0x27000
   15c84:	ldr	pc, [ip, #1004]!	; 0x3ec

00015c88 <gtk_tree_store_remove@plt>:
   15c88:	add	ip, pc, #0, 12
   15c8c:	add	ip, ip, #159744	; 0x27000
   15c90:	ldr	pc, [ip, #996]!	; 0x3e4

00015c94 <gtk_list_store_set@plt>:
   15c94:	add	ip, pc, #0, 12
   15c98:	add	ip, ip, #159744	; 0x27000
   15c9c:	ldr	pc, [ip, #988]!	; 0x3dc

00015ca0 <pk_package_get_id@plt>:
   15ca0:	add	ip, pc, #0, 12
   15ca4:	add	ip, ip, #159744	; 0x27000
   15ca8:	ldr	pc, [ip, #980]!	; 0x3d4

00015cac <gtk_dialog_add_button@plt>:
   15cac:	add	ip, pc, #0, 12
   15cb0:	add	ip, ip, #159744	; 0x27000
   15cb4:	ldr	pc, [ip, #972]!	; 0x3cc

00015cb8 <gtk_menu_item_new_with_label@plt>:
   15cb8:	add	ip, pc, #0, 12
   15cbc:	add	ip, ip, #159744	; 0x27000
   15cc0:	ldr	pc, [ip, #964]!	; 0x3c4

00015cc4 <g_type_class_adjust_private_offset@plt>:
   15cc4:	add	ip, pc, #0, 12
   15cc8:	add	ip, ip, #159744	; 0x27000
   15ccc:	ldr	pc, [ip, #956]!	; 0x3bc

00015cd0 <g_timeout_add@plt>:
   15cd0:	add	ip, pc, #0, 12
   15cd4:	add	ip, ip, #159744	; 0x27000
   15cd8:	ldr	pc, [ip, #948]!	; 0x3b4

00015cdc <g_cancellable_reset@plt>:
   15cdc:	add	ip, pc, #0, 12
   15ce0:	add	ip, ip, #159744	; 0x27000
   15ce4:	ldr	pc, [ip, #940]!	; 0x3ac

00015ce8 <gtk_tree_view_column_pack_start@plt>:
   15ce8:	add	ip, pc, #0, 12
   15cec:	add	ip, ip, #159744	; 0x27000
   15cf0:	ldr	pc, [ip, #932]!	; 0x3a4

00015cf4 <pk_package_sack_find_by_id@plt>:
   15cf4:	add	ip, pc, #0, 12
   15cf8:	add	ip, ip, #159744	; 0x27000
   15cfc:	ldr	pc, [ip, #924]!	; 0x39c

00015d00 <pk_package_ids_from_id@plt>:
   15d00:	add	ip, pc, #0, 12
   15d04:	add	ip, ip, #159744	; 0x27000
   15d08:	ldr	pc, [ip, #916]!	; 0x394

00015d0c <g_cclosure_new@plt>:
   15d0c:	add	ip, pc, #0, 12
   15d10:	add	ip, ip, #159744	; 0x27000
   15d14:	ldr	pc, [ip, #908]!	; 0x38c

00015d18 <g_format_size@plt>:
   15d18:	add	ip, pc, #0, 12
   15d1c:	add	ip, ip, #159744	; 0x27000
   15d20:	ldr	pc, [ip, #900]!	; 0x384

00015d24 <g_application_get_type@plt>:
   15d24:	add	ip, pc, #0, 12
   15d28:	add	ip, ip, #159744	; 0x27000
   15d2c:	ldr	pc, [ip, #892]!	; 0x37c

00015d30 <gtk_frame_new@plt>:
   15d30:	add	ip, pc, #0, 12
   15d34:	add	ip, ip, #159744	; 0x27000
   15d38:	ldr	pc, [ip, #884]!	; 0x374

00015d3c <g_error_free@plt>:
   15d3c:	add	ip, pc, #0, 12
   15d40:	add	ip, ip, #159744	; 0x27000
   15d44:	ldr	pc, [ip, #876]!	; 0x36c

00015d48 <pk_package_sack_get_details@plt>:
   15d48:	add	ip, pc, #0, 12
   15d4c:	add	ip, ip, #159744	; 0x27000
   15d50:	ldr	pc, [ip, #868]!	; 0x364

00015d54 <g_settings_set_enum@plt>:
   15d54:	add	ip, pc, #0, 12
   15d58:	add	ip, ip, #159744	; 0x27000
   15d5c:	ldr	pc, [ip, #860]!	; 0x35c

00015d60 <bind_textdomain_codeset@plt>:
   15d60:	add	ip, pc, #0, 12
   15d64:	add	ip, ip, #159744	; 0x27000
   15d68:	ldr	pc, [ip, #852]!	; 0x354

00015d6c <gtk_label_get_type@plt>:
   15d6c:	add	ip, pc, #0, 12
   15d70:	add	ip, ip, #159744	; 0x27000
   15d74:	ldr	pc, [ip, #844]!	; 0x34c

00015d78 <gtk_label_set_label@plt>:
   15d78:	add	ip, pc, #0, 12
   15d7c:	add	ip, ip, #159744	; 0x27000
   15d80:	ldr	pc, [ip, #836]!	; 0x344

00015d84 <g_string_truncate@plt>:
   15d84:	add	ip, pc, #0, 12
   15d88:	add	ip, ip, #159744	; 0x27000
   15d8c:	ldr	pc, [ip, #828]!	; 0x33c

00015d90 <g_strdelimit@plt>:
   15d90:	add	ip, pc, #0, 12
   15d94:	add	ip, ip, #159744	; 0x27000
   15d98:	ldr	pc, [ip, #820]!	; 0x334

00015d9c <gtk_get_option_group@plt>:
   15d9c:	add	ip, pc, #0, 12
   15da0:	add	ip, ip, #159744	; 0x27000
   15da4:	ldr	pc, [ip, #812]!	; 0x32c

00015da8 <g_log_set_handler@plt>:
   15da8:	add	ip, pc, #0, 12
   15dac:	add	ip, ip, #159744	; 0x27000
   15db0:	ldr	pc, [ip, #804]!	; 0x324

00015db4 <gtk_widget_get_type@plt>:
   15db4:	add	ip, pc, #0, 12
   15db8:	add	ip, ip, #159744	; 0x27000
   15dbc:	ldr	pc, [ip, #796]!	; 0x31c

00015dc0 <g_string_new@plt>:
   15dc0:	add	ip, pc, #0, 12
   15dc4:	add	ip, ip, #159744	; 0x27000
   15dc8:	ldr	pc, [ip, #788]!	; 0x314

00015dcc <gtk_tree_view_set_row_separator_func@plt>:
   15dcc:	add	ip, pc, #0, 12
   15dd0:	add	ip, ip, #159744	; 0x27000
   15dd4:	ldr	pc, [ip, #780]!	; 0x30c

00015dd8 <g_str_equal@plt>:
   15dd8:	add	ip, pc, #0, 12
   15ddc:	add	ip, ip, #159744	; 0x27000
   15de0:	ldr	pc, [ip, #772]!	; 0x304

00015de4 <gtk_tree_view_set_model@plt>:
   15de4:	add	ip, pc, #0, 12
   15de8:	add	ip, ip, #159744	; 0x27000
   15dec:	ldr	pc, [ip, #764]!	; 0x2fc

00015df0 <pk_package_id_split@plt>:
   15df0:	add	ip, pc, #0, 12
   15df4:	add	ip, ip, #159744	; 0x27000
   15df8:	ldr	pc, [ip, #756]!	; 0x2f4

00015dfc <gtk_window_set_position@plt>:
   15dfc:	add	ip, pc, #0, 12
   15e00:	add	ip, ip, #159744	; 0x27000
   15e04:	ldr	pc, [ip, #748]!	; 0x2ec

00015e08 <gtk_text_buffer_delete_mark@plt>:
   15e08:	add	ip, pc, #0, 12
   15e0c:	add	ip, ip, #159744	; 0x27000
   15e10:	ldr	pc, [ip, #740]!	; 0x2e4

00015e14 <g_type_check_instance_cast@plt>:
   15e14:	add	ip, pc, #0, 12
   15e18:	add	ip, ip, #159744	; 0x27000
   15e1c:	ldr	pc, [ip, #732]!	; 0x2dc

00015e20 <gtk_tree_view_column_new_with_attributes@plt>:
   15e20:	add	ip, pc, #0, 12
   15e24:	add	ip, ip, #159744	; 0x27000
   15e28:	ldr	pc, [ip, #724]!	; 0x2d4

00015e2c <gtk_tree_view_columns_autosize@plt>:
   15e2c:	add	ip, pc, #0, 12
   15e30:	add	ip, ip, #159744	; 0x27000
   15e34:	ldr	pc, [ip, #716]!	; 0x2cc

00015e38 <gtk_text_view_get_type@plt>:
   15e38:	add	ip, pc, #0, 12
   15e3c:	add	ip, ip, #159744	; 0x27000
   15e40:	ldr	pc, [ip, #708]!	; 0x2c4

00015e44 <g_option_context_new@plt>:
   15e44:	add	ip, pc, #0, 12
   15e48:	add	ip, ip, #159744	; 0x27000
   15e4c:	ldr	pc, [ip, #700]!	; 0x2bc

00015e50 <gdk_event_get_time@plt>:
   15e50:	add	ip, pc, #0, 12
   15e54:	add	ip, ip, #159744	; 0x27000
   15e58:	ldr	pc, [ip, #692]!	; 0x2b4

00015e5c <gtk_entry_set_icon_from_icon_name@plt>:
   15e5c:	add	ip, pc, #0, 12
   15e60:	add	ip, ip, #159744	; 0x27000
   15e64:	ldr	pc, [ip, #684]!	; 0x2ac

00015e68 <gtk_widget_get_window@plt>:
   15e68:	add	ip, pc, #0, 12
   15e6c:	add	ip, ip, #159744	; 0x27000
   15e70:	ldr	pc, [ip, #676]!	; 0x2a4

00015e74 <gtk_menu_new@plt>:
   15e74:	add	ip, pc, #0, 12
   15e78:	add	ip, ip, #159744	; 0x27000
   15e7c:	ldr	pc, [ip, #668]!	; 0x29c

00015e80 <gtk_widget_hide@plt>:
   15e80:	add	ip, pc, #0, 12
   15e84:	add	ip, ip, #159744	; 0x27000
   15e88:	ldr	pc, [ip, #660]!	; 0x294

00015e8c <g_option_group_new@plt>:
   15e8c:	add	ip, pc, #0, 12
   15e90:	add	ip, ip, #159744	; 0x27000
   15e94:	ldr	pc, [ip, #652]!	; 0x28c

00015e98 <pk_role_enum_to_string@plt>:
   15e98:	add	ip, pc, #0, 12
   15e9c:	add	ip, ip, #159744	; 0x27000
   15ea0:	ldr	pc, [ip, #644]!	; 0x284

00015ea4 <g_action_map_lookup_action@plt>:
   15ea4:	add	ip, pc, #0, 12
   15ea8:	add	ip, ip, #159744	; 0x27000
   15eac:	ldr	pc, [ip, #636]!	; 0x27c

00015eb0 <gtk_window_set_decorated@plt>:
   15eb0:	add	ip, pc, #0, 12
   15eb4:	add	ip, ip, #159744	; 0x27000
   15eb8:	ldr	pc, [ip, #628]!	; 0x274

00015ebc <g_log@plt>:
   15ebc:	add	ip, pc, #0, 12
   15ec0:	add	ip, ip, #159744	; 0x27000
   15ec4:	ldr	pc, [ip, #620]!	; 0x26c

00015ec8 <pk_package_set_id@plt>:
   15ec8:	add	ip, pc, #0, 12
   15ecc:	add	ip, ip, #159744	; 0x27000
   15ed0:	ldr	pc, [ip, #612]!	; 0x264

00015ed4 <g_option_context_set_summary@plt>:
   15ed4:	add	ip, pc, #0, 12
   15ed8:	add	ip, ip, #159744	; 0x27000
   15edc:	ldr	pc, [ip, #604]!	; 0x25c

00015ee0 <gtk_tree_model_get_path@plt>:
   15ee0:	add	ip, pc, #0, 12
   15ee4:	add	ip, ip, #159744	; 0x27000
   15ee8:	ldr	pc, [ip, #596]!	; 0x254

00015eec <g_cancellable_cancel@plt>:
   15eec:	add	ip, pc, #0, 12
   15ef0:	add	ip, ip, #159744	; 0x27000
   15ef4:	ldr	pc, [ip, #588]!	; 0x24c

00015ef8 <gtk_entry_get_text@plt>:
   15ef8:	add	ip, pc, #0, 12
   15efc:	add	ip, ip, #159744	; 0x27000
   15f00:	ldr	pc, [ip, #580]!	; 0x244

00015f04 <pk_status_enum_to_string@plt>:
   15f04:	add	ip, pc, #0, 12
   15f08:	add	ip, ip, #159744	; 0x27000
   15f0c:	ldr	pc, [ip, #572]!	; 0x23c

00015f10 <gtk_expander_get_type@plt>:
   15f10:	add	ip, pc, #0, 12
   15f14:	add	ip, ip, #159744	; 0x27000
   15f18:	ldr	pc, [ip, #564]!	; 0x234

00015f1c <pk_results_get_error_code@plt>:
   15f1c:	add	ip, pc, #0, 12
   15f20:	add	ip, ip, #159744	; 0x27000
   15f24:	ldr	pc, [ip, #556]!	; 0x22c

00015f28 <gtk_editable_get_type@plt>:
   15f28:	add	ip, pc, #0, 12
   15f2c:	add	ip, ip, #159744	; 0x27000
   15f30:	ldr	pc, [ip, #548]!	; 0x224

00015f34 <gtk_text_buffer_insert@plt>:
   15f34:	add	ip, pc, #0, 12
   15f38:	add	ip, ip, #159744	; 0x27000
   15f3c:	ldr	pc, [ip, #540]!	; 0x21c

00015f40 <gtk_toggle_button_get_type@plt>:
   15f40:	add	ip, pc, #0, 12
   15f44:	add	ip, ip, #159744	; 0x27000
   15f48:	ldr	pc, [ip, #532]!	; 0x214

00015f4c <gtk_box_new@plt>:
   15f4c:	add	ip, pc, #0, 12
   15f50:	add	ip, ip, #159744	; 0x27000
   15f54:	ldr	pc, [ip, #524]!	; 0x20c

00015f58 <g_build_filename@plt>:
   15f58:	add	ip, pc, #0, 12
   15f5c:	add	ip, ip, #159744	; 0x27000
   15f60:	ldr	pc, [ip, #516]!	; 0x204

00015f64 <gtk_accel_group_connect@plt>:
   15f64:	add	ip, pc, #0, 12
   15f68:	add	ip, ip, #159744	; 0x27000
   15f6c:	ldr	pc, [ip, #508]!	; 0x1fc

00015f70 <pk_client_get_type@plt>:
   15f70:	add	ip, pc, #0, 12
   15f74:	add	ip, ip, #159744	; 0x27000
   15f78:	ldr	pc, [ip, #500]!	; 0x1f4

00015f7c <gtk_widget_set_tooltip_text@plt>:
   15f7c:	add	ip, pc, #0, 12
   15f80:	add	ip, ip, #159744	; 0x27000
   15f84:	ldr	pc, [ip, #492]!	; 0x1ec

00015f88 <pk_control_get_properties_finish@plt>:
   15f88:	add	ip, pc, #0, 12
   15f8c:	add	ip, ip, #159744	; 0x27000
   15f90:	ldr	pc, [ip, #484]!	; 0x1e4

00015f94 <pk_client_required_by_async@plt>:
   15f94:	add	ip, pc, #0, 12
   15f98:	add	ip, ip, #159744	; 0x27000
   15f9c:	ldr	pc, [ip, #476]!	; 0x1dc

00015fa0 <gtk_tree_model_iter_next@plt>:
   15fa0:	add	ip, pc, #0, 12
   15fa4:	add	ip, ip, #159744	; 0x27000
   15fa8:	ldr	pc, [ip, #468]!	; 0x1d4

00015fac <gtk_application_add_window@plt>:
   15fac:	add	ip, pc, #0, 12
   15fb0:	add	ip, ip, #159744	; 0x27000
   15fb4:	ldr	pc, [ip, #460]!	; 0x1cc

00015fb8 <gtk_window_set_icon_name@plt>:
   15fb8:	add	ip, pc, #0, 12
   15fbc:	add	ip, ip, #159744	; 0x27000
   15fc0:	ldr	pc, [ip, #452]!	; 0x1c4

00015fc4 <pk_client_get_categories_async@plt>:
   15fc4:	add	ip, pc, #0, 12
   15fc8:	add	ip, ip, #159744	; 0x27000
   15fcc:	ldr	pc, [ip, #444]!	; 0x1bc

00015fd0 <gtk_tree_selection_select_path@plt>:
   15fd0:	add	ip, pc, #0, 12
   15fd4:	add	ip, ip, #159744	; 0x27000
   15fd8:	ldr	pc, [ip, #436]!	; 0x1b4

00015fdc <pk_error_get_details@plt>:
   15fdc:	add	ip, pc, #0, 12
   15fe0:	add	ip, ip, #159744	; 0x27000
   15fe4:	ldr	pc, [ip, #428]!	; 0x1ac

00015fe8 <gtk_widget_grab_focus@plt>:
   15fe8:	add	ip, pc, #0, 12
   15fec:	add	ip, ip, #159744	; 0x27000
   15ff0:	ldr	pc, [ip, #420]!	; 0x1a4

00015ff4 <pk_task_search_names_async@plt>:
   15ff4:	add	ip, pc, #0, 12
   15ff8:	add	ip, ip, #159744	; 0x27000
   15ffc:	ldr	pc, [ip, #412]!	; 0x19c

00016000 <gtk_tree_selection_set_mode@plt>:
   16000:	add	ip, pc, #0, 12
   16004:	add	ip, ip, #159744	; 0x27000
   16008:	ldr	pc, [ip, #404]!	; 0x194

0001600c <gtk_window_set_destroy_with_parent@plt>:
   1600c:	add	ip, pc, #0, 12
   16010:	add	ip, ip, #159744	; 0x27000
   16014:	ldr	pc, [ip, #396]!	; 0x18c

00016018 <pk_error_get_code@plt>:
   16018:	add	ip, pc, #0, 12
   1601c:	add	ip, ip, #159744	; 0x27000
   16020:	ldr	pc, [ip, #388]!	; 0x184

00016024 <gtk_tree_selection_select_iter@plt>:
   16024:	add	ip, pc, #0, 12
   16028:	add	ip, ip, #159744	; 0x27000
   1602c:	ldr	pc, [ip, #380]!	; 0x17c

00016030 <gtk_button_new_with_mnemonic@plt>:
   16030:	add	ip, pc, #0, 12
   16034:	add	ip, ip, #159744	; 0x27000
   16038:	ldr	pc, [ip, #372]!	; 0x174

0001603c <gtk_window_set_skip_taskbar_hint@plt>:
   1603c:	add	ip, pc, #0, 12
   16040:	add	ip, ip, #159744	; 0x27000
   16044:	ldr	pc, [ip, #364]!	; 0x16c

00016048 <gtk_widget_get_style_context@plt>:
   16048:	add	ip, pc, #0, 12
   1604c:	add	ip, ip, #159744	; 0x27000
   16050:	ldr	pc, [ip, #356]!	; 0x164

00016054 <gtk_tree_view_get_model@plt>:
   16054:	add	ip, pc, #0, 12
   16058:	add	ip, ip, #159744	; 0x27000
   1605c:	ldr	pc, [ip, #348]!	; 0x15c

00016060 <pk_task_refresh_cache_async@plt>:
   16060:	add	ip, pc, #0, 12
   16064:	add	ip, ip, #159744	; 0x27000
   16068:	ldr	pc, [ip, #340]!	; 0x154

0001606c <textdomain@plt>:
   1606c:	add	ip, pc, #0, 12
   16070:	add	ip, ip, #159744	; 0x27000
   16074:	ldr	pc, [ip, #332]!	; 0x14c

00016078 <pk_results_get_repo_detail_array@plt>:
   16078:	add	ip, pc, #0, 12
   1607c:	add	ip, ip, #159744	; 0x27000
   16080:	ldr	pc, [ip, #324]!	; 0x144

00016084 <gdk_pixbuf_new_subpixbuf@plt>:
   16084:	add	ip, pc, #0, 12
   16088:	add	ip, ip, #159744	; 0x27000
   1608c:	ldr	pc, [ip, #316]!	; 0x13c

00016090 <gtk_text_buffer_get_type@plt>:
   16090:	add	ip, pc, #0, 12
   16094:	add	ip, ip, #159744	; 0x27000
   16098:	ldr	pc, [ip, #308]!	; 0x134

0001609c <gtk_tree_view_column_set_sort_column_id@plt>:
   1609c:	add	ip, pc, #0, 12
   160a0:	add	ip, ip, #159744	; 0x27000
   160a4:	ldr	pc, [ip, #300]!	; 0x12c

000160a8 <g_option_group_set_parse_hooks@plt>:
   160a8:	add	ip, pc, #0, 12
   160ac:	add	ip, ip, #159744	; 0x27000
   160b0:	ldr	pc, [ip, #292]!	; 0x124

000160b4 <gtk_label_set_line_wrap@plt>:
   160b4:	add	ip, pc, #0, 12
   160b8:	add	ip, ip, #159744	; 0x27000
   160bc:	ldr	pc, [ip, #284]!	; 0x11c

000160c0 <g_hash_table_new_full@plt>:
   160c0:	add	ip, pc, #0, 12
   160c4:	add	ip, ip, #159744	; 0x27000
   160c8:	ldr	pc, [ip, #276]!	; 0x114

000160cc <pango_attr_list_unref@plt>:
   160cc:	add	ip, pc, #0, 12
   160d0:	add	ip, ip, #159744	; 0x27000
   160d4:	ldr	pc, [ip, #268]!	; 0x10c

000160d8 <g_application_release@plt>:
   160d8:	add	ip, pc, #0, 12
   160dc:	add	ip, ip, #159744	; 0x27000
   160e0:	ldr	pc, [ip, #260]!	; 0x104

000160e4 <pk_package_sack_filter_by_info@plt>:
   160e4:	add	ip, pc, #0, 12
   160e8:	add	ip, ip, #159744	; 0x27000
   160ec:	ldr	pc, [ip, #252]!	; 0xfc

000160f0 <g_strdup@plt>:
   160f0:	add	ip, pc, #0, 12
   160f4:	add	ip, ip, #159744	; 0x27000
   160f8:	ldr	pc, [ip, #244]!	; 0xf4

000160fc <pk_control_new@plt>:
   160fc:	add	ip, pc, #0, 12
   16100:	add	ip, ip, #159744	; 0x27000
   16104:	ldr	pc, [ip, #236]!	; 0xec

00016108 <strftime@plt>:
   16108:	add	ip, pc, #0, 12
   1610c:	add	ip, ip, #159744	; 0x27000
   16110:	ldr	pc, [ip, #228]!	; 0xe4

00016114 <g_hash_table_insert@plt>:
   16114:	add	ip, pc, #0, 12
   16118:	add	ip, ip, #159744	; 0x27000
   1611c:	ldr	pc, [ip, #220]!	; 0xdc

00016120 <g_strchomp@plt>:
   16120:	add	ip, pc, #0, 12
   16124:	add	ip, ip, #159744	; 0x27000
   16128:	ldr	pc, [ip, #212]!	; 0xd4

0001612c <memset@plt>:
   1612c:	add	ip, pc, #0, 12
   16130:	add	ip, ip, #159744	; 0x27000
   16134:	ldr	pc, [ip, #204]!	; 0xcc

00016138 <pk_package_sack_get_total_bytes@plt>:
   16138:	add	ip, pc, #0, 12
   1613c:	add	ip, ip, #159744	; 0x27000
   16140:	ldr	pc, [ip, #196]!	; 0xc4

00016144 <gtk_tree_sortable_get_type@plt>:
   16144:	add	ip, pc, #0, 12
   16148:	add	ip, ip, #159744	; 0x27000
   1614c:	ldr	pc, [ip, #188]!	; 0xbc

00016150 <gtk_container_get_type@plt>:
   16150:	add	ip, pc, #0, 12
   16154:	add	ip, ip, #159744	; 0x27000
   16158:	ldr	pc, [ip, #180]!	; 0xb4

0001615c <gtk_builder_get_object@plt>:
   1615c:	add	ip, pc, #0, 12
   16160:	add	ip, ip, #159744	; 0x27000
   16164:	ldr	pc, [ip, #172]!	; 0xac

00016168 <pk_task_user_declined@plt>:
   16168:	add	ip, pc, #0, 12
   1616c:	add	ip, ip, #159744	; 0x27000
   16170:	ldr	pc, [ip, #164]!	; 0xa4

00016174 <pk_client_depends_on_async@plt>:
   16174:	add	ip, pc, #0, 12
   16178:	add	ip, ip, #159744	; 0x27000
   1617c:	ldr	pc, [ip, #156]!	; 0x9c

00016180 <gtk_text_buffer_get_iter_at_mark@plt>:
   16180:	add	ip, pc, #0, 12
   16184:	add	ip, ip, #159744	; 0x27000
   16188:	ldr	pc, [ip, #148]!	; 0x94

0001618c <gtk_scrolled_window_set_overlay_scrolling@plt>:
   1618c:	add	ip, pc, #0, 12
   16190:	add	ip, ip, #159744	; 0x27000
   16194:	ldr	pc, [ip, #140]!	; 0x8c

00016198 <gtk_container_set_border_width@plt>:
   16198:	add	ip, pc, #0, 12
   1619c:	add	ip, ip, #159744	; 0x27000
   161a0:	ldr	pc, [ip, #132]!	; 0x84

000161a4 <pk_client_generic_finish@plt>:
   161a4:	add	ip, pc, #0, 12
   161a8:	add	ip, ip, #159744	; 0x27000
   161ac:	ldr	pc, [ip, #124]!	; 0x7c

000161b0 <gtk_progress_bar_set_fraction@plt>:
   161b0:	add	ip, pc, #0, 12
   161b4:	add	ip, ip, #159744	; 0x27000
   161b8:	ldr	pc, [ip, #116]!	; 0x74

000161bc <pk_task_user_accepted@plt>:
   161bc:	add	ip, pc, #0, 12
   161c0:	add	ip, ip, #159744	; 0x27000
   161c4:	ldr	pc, [ip, #108]!	; 0x6c

000161c8 <g_ptr_array_new_with_free_func@plt>:
   161c8:	add	ip, pc, #0, 12
   161cc:	add	ip, ip, #159744	; 0x27000
   161d0:	ldr	pc, [ip, #100]!	; 0x64

000161d4 <gtk_image_set_from_pixbuf@plt>:
   161d4:	add	ip, pc, #0, 12
   161d8:	add	ip, ip, #159744	; 0x27000
   161dc:	ldr	pc, [ip, #92]!	; 0x5c

000161e0 <g_strdup_printf@plt>:
   161e0:	add	ip, pc, #0, 12
   161e4:	add	ip, ip, #159744	; 0x27000
   161e8:	ldr	pc, [ip, #84]!	; 0x54

000161ec <gtk_button_new_with_label@plt>:
   161ec:	add	ip, pc, #0, 12
   161f0:	add	ip, ip, #159744	; 0x27000
   161f4:	ldr	pc, [ip, #76]!	; 0x4c

000161f8 <gtk_show_uri@plt>:
   161f8:	add	ip, pc, #0, 12
   161fc:	add	ip, ip, #159744	; 0x27000
   16200:	ldr	pc, [ip, #68]!	; 0x44

00016204 <dcngettext@plt>:
   16204:	add	ip, pc, #0, 12
   16208:	add	ip, ip, #159744	; 0x27000
   1620c:	ldr	pc, [ip, #60]!	; 0x3c

00016210 <gtk_icon_theme_append_search_path@plt>:
   16210:	add	ip, pc, #0, 12
   16214:	add	ip, ip, #159744	; 0x27000
   16218:	ldr	pc, [ip, #52]!	; 0x34

0001621c <g_simple_action_get_type@plt>:
   1621c:	add	ip, pc, #0, 12
   16220:	add	ip, ip, #159744	; 0x27000
   16224:	ldr	pc, [ip, #44]!	; 0x2c

00016228 <pk_error_enum_to_string@plt>:
   16228:	add	ip, pc, #0, 12
   1622c:	add	ip, ip, #159744	; 0x27000
   16230:	ldr	pc, [ip, #36]!	; 0x24

00016234 <gtk_icon_theme_load_icon@plt>:
   16234:	add	ip, pc, #0, 12
   16238:	add	ip, ip, #159744	; 0x27000
   1623c:	ldr	pc, [ip, #28]!

00016240 <g_application_run@plt>:
   16240:	add	ip, pc, #0, 12
   16244:	add	ip, ip, #159744	; 0x27000
   16248:	ldr	pc, [ip, #20]!

0001624c <gtk_scrolled_window_new@plt>:
   1624c:	add	ip, pc, #0, 12
   16250:	add	ip, ip, #159744	; 0x27000
   16254:	ldr	pc, [ip, #12]!

00016258 <gtk_tree_store_set@plt>:
   16258:	add	ip, pc, #0, 12
   1625c:	add	ip, ip, #159744	; 0x27000
   16260:	ldr	pc, [ip, #4]!

00016264 <gtk_tree_path_free@plt>:
   16264:	add	ip, pc, #0, 12
   16268:	add	ip, ip, #155648	; 0x26000
   1626c:	ldr	pc, [ip, #4092]!	; 0xffc

00016270 <abort@plt>:
   16270:	add	ip, pc, #0, 12
   16274:	add	ip, ip, #155648	; 0x26000
   16278:	ldr	pc, [ip, #4084]!	; 0xff4

0001627c <gtk_tree_view_set_show_expanders@plt>:
   1627c:	add	ip, pc, #0, 12
   16280:	add	ip, ip, #155648	; 0x26000
   16284:	ldr	pc, [ip, #4076]!	; 0xfec

00016288 <gdk_pixbuf_get_height@plt>:
   16288:	add	ip, pc, #0, 12
   1628c:	add	ip, ip, #155648	; 0x26000
   16290:	ldr	pc, [ip, #4068]!	; 0xfe4

00016294 <gtk_events_pending@plt>:
   16294:	add	ip, pc, #0, 12
   16298:	add	ip, ip, #155648	; 0x26000
   1629c:	ldr	pc, [ip, #4060]!	; 0xfdc

000162a0 <gtk_text_view_new@plt>:
   162a0:	add	ip, pc, #0, 12
   162a4:	add	ip, ip, #155648	; 0x26000
   162a8:	ldr	pc, [ip, #4052]!	; 0xfd4

000162ac <pk_task_search_details_async@plt>:
   162ac:	add	ip, pc, #0, 12
   162b0:	add	ip, ip, #155648	; 0x26000
   162b4:	ldr	pc, [ip, #4044]!	; 0xfcc

000162b8 <gtk_label_new@plt>:
   162b8:	add	ip, pc, #0, 12
   162bc:	add	ip, ip, #155648	; 0x26000
   162c0:	ldr	pc, [ip, #4036]!	; 0xfc4

000162c4 <gtk_accel_group_new@plt>:
   162c4:	add	ip, pc, #0, 12
   162c8:	add	ip, ip, #155648	; 0x26000
   162cc:	ldr	pc, [ip, #4028]!	; 0xfbc

000162d0 <gtk_entry_set_completion@plt>:
   162d0:	add	ip, pc, #0, 12
   162d4:	add	ip, ip, #155648	; 0x26000
   162d8:	ldr	pc, [ip, #4020]!	; 0xfb4

000162dc <g_strsplit@plt>:
   162dc:	add	ip, pc, #0, 12
   162e0:	add	ip, ip, #155648	; 0x26000
   162e4:	ldr	pc, [ip, #4012]!	; 0xfac

000162e8 <g_ptr_array_remove@plt>:
   162e8:	add	ip, pc, #0, 12
   162ec:	add	ip, ip, #155648	; 0x26000
   162f0:	ldr	pc, [ip, #4004]!	; 0xfa4

000162f4 <gtk_tree_view_set_level_indentation@plt>:
   162f4:	add	ip, pc, #0, 12
   162f8:	add	ip, ip, #155648	; 0x26000
   162fc:	ldr	pc, [ip, #3996]!	; 0xf9c

00016300 <gtk_tree_view_get_path_at_pos@plt>:
   16300:	add	ip, pc, #0, 12
   16304:	add	ip, ip, #155648	; 0x26000
   16308:	ldr	pc, [ip, #3988]!	; 0xf94

0001630c <gtk_cell_renderer_text_new@plt>:
   1630c:	add	ip, pc, #0, 12
   16310:	add	ip, ip, #155648	; 0x26000
   16314:	ldr	pc, [ip, #3980]!	; 0xf8c

00016318 <pk_package_sack_add_package@plt>:
   16318:	add	ip, pc, #0, 12
   1631c:	add	ip, ip, #155648	; 0x26000
   16320:	ldr	pc, [ip, #3972]!	; 0xf84

00016324 <pk_task_get_type@plt>:
   16324:	add	ip, pc, #0, 12
   16328:	add	ip, ip, #155648	; 0x26000
   1632c:	ldr	pc, [ip, #3964]!	; 0xf7c

00016330 <pk_ptr_array_to_strv@plt>:
   16330:	add	ip, pc, #0, 12
   16334:	add	ip, ip, #155648	; 0x26000
   16338:	ldr	pc, [ip, #3956]!	; 0xf74

0001633c <gtk_window_set_title@plt>:
   1633c:	add	ip, pc, #0, 12
   16340:	add	ip, ip, #155648	; 0x26000
   16344:	ldr	pc, [ip, #3948]!	; 0xf6c

00016348 <pk_package_sack_clear@plt>:
   16348:	add	ip, pc, #0, 12
   1634c:	add	ip, ip, #155648	; 0x26000
   16350:	ldr	pc, [ip, #3940]!	; 0xf64

00016354 <gdk_pixbuf_get_width@plt>:
   16354:	add	ip, pc, #0, 12
   16358:	add	ip, ip, #155648	; 0x26000
   1635c:	ldr	pc, [ip, #3932]!	; 0xf5c

00016360 <gtk_widget_set_size_request@plt>:
   16360:	add	ip, pc, #0, 12
   16364:	add	ip, ip, #155648	; 0x26000
   16368:	ldr	pc, [ip, #3924]!	; 0xf54

0001636c <gtk_container_add@plt>:
   1636c:	add	ip, pc, #0, 12
   16370:	add	ip, ip, #155648	; 0x26000
   16374:	ldr	pc, [ip, #3916]!	; 0xf4c

00016378 <gdk_display_get_default@plt>:
   16378:	add	ip, pc, #0, 12
   1637c:	add	ip, ip, #155648	; 0x26000
   16380:	ldr	pc, [ip, #3908]!	; 0xf44

00016384 <gtk_text_view_set_buffer@plt>:
   16384:	add	ip, pc, #0, 12
   16388:	add	ip, ip, #155648	; 0x26000
   1638c:	ldr	pc, [ip, #3900]!	; 0xf3c

00016390 <gtk_window_set_default_size@plt>:
   16390:	add	ip, pc, #0, 12
   16394:	add	ip, ip, #155648	; 0x26000
   16398:	ldr	pc, [ip, #3892]!	; 0xf34

0001639c <g_type_instance_get_private@plt>:
   1639c:	add	ip, pc, #0, 12
   163a0:	add	ip, ip, #155648	; 0x26000
   163a4:	ldr	pc, [ip, #3884]!	; 0xf2c

000163a8 <g_strjoin@plt>:
   163a8:	add	ip, pc, #0, 12
   163ac:	add	ip, ip, #155648	; 0x26000
   163b0:	ldr	pc, [ip, #3876]!	; 0xf24

000163b4 <gtk_tree_view_column_new@plt>:
   163b4:	add	ip, pc, #0, 12
   163b8:	add	ip, ip, #155648	; 0x26000
   163bc:	ldr	pc, [ip, #3868]!	; 0xf1c

000163c0 <g_str_has_prefix@plt>:
   163c0:	add	ip, pc, #0, 12
   163c4:	add	ip, ip, #155648	; 0x26000
   163c8:	ldr	pc, [ip, #3860]!	; 0xf14

000163cc <pk_package_sack_get_array@plt>:
   163cc:	add	ip, pc, #0, 12
   163d0:	add	ip, ip, #155648	; 0x26000
   163d4:	ldr	pc, [ip, #3852]!	; 0xf0c

000163d8 <localtime@plt>:
   163d8:	add	ip, pc, #0, 12
   163dc:	add	ip, ip, #155648	; 0x26000
   163e0:	ldr	pc, [ip, #3844]!	; 0xf04

000163e4 <gtk_scrolled_window_set_policy@plt>:
   163e4:	add	ip, pc, #0, 12
   163e8:	add	ip, ip, #155648	; 0x26000
   163ec:	ldr	pc, [ip, #3836]!	; 0xefc

000163f0 <g_cancellable_new@plt>:
   163f0:	add	ip, pc, #0, 12
   163f4:	add	ip, ip, #155648	; 0x26000
   163f8:	ldr	pc, [ip, #3828]!	; 0xef4

000163fc <gtk_box_get_type@plt>:
   163fc:	add	ip, pc, #0, 12
   16400:	add	ip, ip, #155648	; 0x26000
   16404:	ldr	pc, [ip, #3820]!	; 0xeec

00016408 <g_idle_add@plt>:
   16408:	add	ip, pc, #0, 12
   1640c:	add	ip, ip, #155648	; 0x26000
   16410:	ldr	pc, [ip, #3812]!	; 0xee4

00016414 <g_signal_connect_data@plt>:
   16414:	add	ip, pc, #0, 12
   16418:	add	ip, ip, #155648	; 0x26000
   1641c:	ldr	pc, [ip, #3804]!	; 0xedc

00016420 <g_action_map_add_action_entries@plt>:
   16420:	add	ip, pc, #0, 12
   16424:	add	ip, ip, #155648	; 0x26000
   16428:	ldr	pc, [ip, #3796]!	; 0xed4

0001642c <g_once_init_enter@plt>:
   1642c:	add	ip, pc, #0, 12
   16430:	add	ip, ip, #155648	; 0x26000
   16434:	ldr	pc, [ip, #3788]!	; 0xecc

00016438 <pk_task_remove_packages_async@plt>:
   16438:	add	ip, pc, #0, 12
   1643c:	add	ip, ip, #155648	; 0x26000
   16440:	ldr	pc, [ip, #3780]!	; 0xec4

00016444 <gtk_notebook_append_page@plt>:
   16444:	add	ip, pc, #0, 12
   16448:	add	ip, ip, #155648	; 0x26000
   1644c:	ldr	pc, [ip, #3772]!	; 0xebc

00016450 <g_action_map_get_type@plt>:
   16450:	add	ip, pc, #0, 12
   16454:	add	ip, ip, #155648	; 0x26000
   16458:	ldr	pc, [ip, #3764]!	; 0xeb4

0001645c <gtk_text_buffer_set_text@plt>:
   1645c:	add	ip, pc, #0, 12
   16460:	add	ip, ip, #155648	; 0x26000
   16464:	ldr	pc, [ip, #3756]!	; 0xeac

00016468 <gtk_tree_path_new_from_string@plt>:
   16468:	add	ip, pc, #0, 12
   1646c:	add	ip, ip, #155648	; 0x26000
   16470:	ldr	pc, [ip, #3748]!	; 0xea4

00016474 <g_app_info_launch@plt>:
   16474:	add	ip, pc, #0, 12
   16478:	add	ip, ip, #155648	; 0x26000
   1647c:	ldr	pc, [ip, #3740]!	; 0xe9c

00016480 <gtk_text_tag_table_lookup@plt>:
   16480:	add	ip, pc, #0, 12
   16484:	add	ip, ip, #155648	; 0x26000
   16488:	ldr	pc, [ip, #3732]!	; 0xe94

0001648c <g_hash_table_lookup@plt>:
   1648c:	add	ip, pc, #0, 12
   16490:	add	ip, ip, #155648	; 0x26000
   16494:	ldr	pc, [ip, #3724]!	; 0xe8c

00016498 <gtk_widget_destroy@plt>:
   16498:	add	ip, pc, #0, 12
   1649c:	add	ip, ip, #155648	; 0x26000
   164a0:	ldr	pc, [ip, #3716]!	; 0xe84

000164a4 <gdk_window_set_transient_for@plt>:
   164a4:	add	ip, pc, #0, 12
   164a8:	add	ip, ip, #155648	; 0x26000
   164ac:	ldr	pc, [ip, #3708]!	; 0xe7c

000164b0 <gtk_menu_popup@plt>:
   164b0:	add	ip, pc, #0, 12
   164b4:	add	ip, ip, #155648	; 0x26000
   164b8:	ldr	pc, [ip, #3700]!	; 0xe74

000164bc <gtk_box_pack_start@plt>:
   164bc:	add	ip, pc, #0, 12
   164c0:	add	ip, ip, #155648	; 0x26000
   164c4:	ldr	pc, [ip, #3692]!	; 0xe6c

000164c8 <gtk_menu_shell_get_type@plt>:
   164c8:	add	ip, pc, #0, 12
   164cc:	add	ip, ip, #155648	; 0x26000
   164d0:	ldr	pc, [ip, #3684]!	; 0xe64

000164d4 <gtk_event_box_new@plt>:
   164d4:	add	ip, pc, #0, 12
   164d8:	add	ip, ip, #155648	; 0x26000
   164dc:	ldr	pc, [ip, #3676]!	; 0xe5c

000164e0 <pk_bitfield_from_enums@plt>:
   164e0:	add	ip, pc, #0, 12
   164e4:	add	ip, ip, #155648	; 0x26000
   164e8:	ldr	pc, [ip, #3668]!	; 0xe54

000164ec <gtk_progress_bar_get_type@plt>:
   164ec:	add	ip, pc, #0, 12
   164f0:	add	ip, ip, #155648	; 0x26000
   164f4:	ldr	pc, [ip, #3660]!	; 0xe4c

000164f8 <gtk_text_tag_table_add@plt>:
   164f8:	add	ip, pc, #0, 12
   164fc:	add	ip, ip, #155648	; 0x26000
   16500:	ldr	pc, [ip, #3652]!	; 0xe44

00016504 <gtk_text_tag_new@plt>:
   16504:	add	ip, pc, #0, 12
   16508:	add	ip, ip, #155648	; 0x26000
   1650c:	ldr	pc, [ip, #3644]!	; 0xe3c

00016510 <gtk_window_set_default_icon_name@plt>:
   16510:	add	ip, pc, #0, 12
   16514:	add	ip, ip, #155648	; 0x26000
   16518:	ldr	pc, [ip, #3636]!	; 0xe34

0001651c <g_intern_static_string@plt>:
   1651c:	add	ip, pc, #0, 12
   16520:	add	ip, ip, #155648	; 0x26000
   16524:	ldr	pc, [ip, #3628]!	; 0xe2c

00016528 <gtk_notebook_new@plt>:
   16528:	add	ip, pc, #0, 12
   1652c:	add	ip, ip, #155648	; 0x26000
   16530:	ldr	pc, [ip, #3620]!	; 0xe24

00016534 <g_strrstr@plt>:
   16534:	add	ip, pc, #0, 12
   16538:	add	ip, ip, #155648	; 0x26000
   1653c:	ldr	pc, [ip, #3612]!	; 0xe1c

00016540 <gtk_image_get_type@plt>:
   16540:	add	ip, pc, #0, 12
   16544:	add	ip, ip, #155648	; 0x26000
   16548:	ldr	pc, [ip, #3604]!	; 0xe14

0001654c <g_strfreev@plt>:
   1654c:	add	ip, pc, #0, 12
   16550:	add	ip, ip, #155648	; 0x26000
   16554:	ldr	pc, [ip, #3596]!	; 0xe0c

00016558 <g_app_info_get_type@plt>:
   16558:	add	ip, pc, #0, 12
   1655c:	add	ip, ip, #155648	; 0x26000
   16560:	ldr	pc, [ip, #3588]!	; 0xe04

00016564 <g_strv_length@plt>:
   16564:	add	ip, pc, #0, 12
   16568:	add	ip, ip, #155648	; 0x26000
   1656c:	ldr	pc, [ip, #3580]!	; 0xdfc

00016570 <pango_attr_iterator_range@plt>:
   16570:	add	ip, pc, #0, 12
   16574:	add	ip, ip, #155648	; 0x26000
   16578:	ldr	pc, [ip, #3572]!	; 0xdf4

0001657c <g_option_context_free@plt>:
   1657c:	add	ip, pc, #0, 12
   16580:	add	ip, ip, #155648	; 0x26000
   16584:	ldr	pc, [ip, #3564]!	; 0xdec

00016588 <fileno@plt>:
   16588:	add	ip, pc, #0, 12
   1658c:	add	ip, ip, #155648	; 0x26000
   16590:	ldr	pc, [ip, #3556]!	; 0xde4

00016594 <gtk_window_present_with_time@plt>:
   16594:	add	ip, pc, #0, 12
   16598:	add	ip, ip, #155648	; 0x26000
   1659c:	ldr	pc, [ip, #3548]!	; 0xddc

000165a0 <__stack_chk_fail@plt>:
   165a0:	add	ip, pc, #0, 12
   165a4:	add	ip, ip, #155648	; 0x26000
   165a8:	ldr	pc, [ip, #3540]!	; 0xdd4

000165ac <pk_package_sack_remove_package_by_id@plt>:
   165ac:	add	ip, pc, #0, 12
   165b0:	add	ip, ip, #155648	; 0x26000
   165b4:	ldr	pc, [ip, #3532]!	; 0xdcc

000165b8 <gtk_progress_bar_new@plt>:
   165b8:	add	ip, pc, #0, 12
   165bc:	add	ip, ip, #155648	; 0x26000
   165c0:	ldr	pc, [ip, #3524]!	; 0xdc4

000165c4 <gdk_x11_window_foreign_new_for_display@plt>:
   165c4:	add	ip, pc, #0, 12
   165c8:	add	ip, ip, #155648	; 0x26000
   165cc:	ldr	pc, [ip, #3516]!	; 0xdbc

000165d0 <gtk_menu_item_new_with_mnemonic@plt>:
   165d0:	add	ip, pc, #0, 12
   165d4:	add	ip, ip, #155648	; 0x26000
   165d8:	ldr	pc, [ip, #3508]!	; 0xdb4

000165dc <gtk_tree_view_get_type@plt>:
   165dc:	add	ip, pc, #0, 12
   165e0:	add	ip, ip, #155648	; 0x26000
   165e4:	ldr	pc, [ip, #3500]!	; 0xdac

000165e8 <pk_group_enum_to_string@plt>:
   165e8:	add	ip, pc, #0, 12
   165ec:	add	ip, ip, #155648	; 0x26000
   165f0:	ldr	pc, [ip, #3492]!	; 0xda4

000165f4 <gtk_list_store_new@plt>:
   165f4:	add	ip, pc, #0, 12
   165f8:	add	ip, ip, #155648	; 0x26000
   165fc:	ldr	pc, [ip, #3484]!	; 0xd9c

00016600 <gtk_text_view_set_left_margin@plt>:
   16600:	add	ip, pc, #0, 12
   16604:	add	ip, ip, #155648	; 0x26000
   16608:	ldr	pc, [ip, #3476]!	; 0xd94

0001660c <gtk_window_new@plt>:
   1660c:	add	ip, pc, #0, 12
   16610:	add	ip, ip, #155648	; 0x26000
   16614:	ldr	pc, [ip, #3468]!	; 0xd8c

00016618 <g_str_hash@plt>:
   16618:	add	ip, pc, #0, 12
   1661c:	add	ip, ip, #155648	; 0x26000
   16620:	ldr	pc, [ip, #3460]!	; 0xd84

00016624 <g_settings_create_action@plt>:
   16624:	add	ip, pc, #0, 12
   16628:	add	ip, ip, #155648	; 0x26000
   1662c:	ldr	pc, [ip, #3452]!	; 0xd7c

00016630 <isatty@plt>:
   16630:	add	ip, pc, #0, 12
   16634:	add	ip, ip, #155648	; 0x26000
   16638:	ldr	pc, [ip, #3444]!	; 0xd74

0001663c <g_strcanon@plt>:
   1663c:	add	ip, pc, #0, 12
   16640:	add	ip, ip, #155648	; 0x26000
   16644:	ldr	pc, [ip, #3436]!	; 0xd6c

00016648 <gtk_entry_set_icon_sensitive@plt>:
   16648:	add	ip, pc, #0, 12
   1664c:	add	ip, ip, #155648	; 0x26000
   16650:	ldr	pc, [ip, #3428]!	; 0xd64

00016654 <gtk_message_dialog_format_secondary_markup@plt>:
   16654:	add	ip, pc, #0, 12
   16658:	add	ip, ip, #155648	; 0x26000
   1665c:	ldr	pc, [ip, #3420]!	; 0xd5c

00016660 <g_free@plt>:
   16660:	add	ip, pc, #0, 12
   16664:	add	ip, ip, #155648	; 0x26000
   16668:	ldr	pc, [ip, #3412]!	; 0xd54

0001666c <dcgettext@plt>:
   1666c:	add	ip, pc, #0, 12
   16670:	add	ip, ip, #155648	; 0x26000
   16674:	ldr	pc, [ip, #3404]!	; 0xd4c

00016678 <gtk_tree_model_get_iter_first@plt>:
   16678:	add	ip, pc, #0, 12
   1667c:	add	ip, ip, #155648	; 0x26000
   16680:	ldr	pc, [ip, #3396]!	; 0xd44

00016684 <g_file_test@plt>:
   16684:	add	ip, pc, #0, 12
   16688:	add	ip, ip, #155648	; 0x26000
   1668c:	ldr	pc, [ip, #3388]!	; 0xd3c

00016690 <gtk_tree_view_column_set_expand@plt>:
   16690:	add	ip, pc, #0, 12
   16694:	add	ip, ip, #155648	; 0x26000
   16698:	ldr	pc, [ip, #3380]!	; 0xd34

0001669c <gtk_main@plt>:
   1669c:	add	ip, pc, #0, 12
   166a0:	add	ip, ip, #155648	; 0x26000
   166a4:	ldr	pc, [ip, #3372]!	; 0xd2c

000166a8 <strstr@plt>:
   166a8:	add	ip, pc, #0, 12
   166ac:	add	ip, ip, #155648	; 0x26000
   166b0:	ldr	pc, [ip, #3364]!	; 0xd24

000166b4 <g_object_set@plt>:
   166b4:	add	ip, pc, #0, 12
   166b8:	add	ip, ip, #155648	; 0x26000
   166bc:	ldr	pc, [ip, #3356]!	; 0xd1c

000166c0 <gtk_text_buffer_insert_at_cursor@plt>:
   166c0:	add	ip, pc, #0, 12
   166c4:	add	ip, ip, #155648	; 0x26000
   166c8:	ldr	pc, [ip, #3348]!	; 0xd14

000166cc <gtk_message_dialog_get_type@plt>:
   166cc:	add	ip, pc, #0, 12
   166d0:	add	ip, ip, #155648	; 0x26000
   166d4:	ldr	pc, [ip, #3340]!	; 0xd0c

000166d8 <g_ptr_array_new@plt>:
   166d8:	add	ip, pc, #0, 12
   166dc:	add	ip, ip, #155648	; 0x26000
   166e0:	ldr	pc, [ip, #3332]!	; 0xd04

000166e4 <gtk_cell_renderer_pixbuf_new@plt>:
   166e4:	add	ip, pc, #0, 12
   166e8:	add	ip, ip, #155648	; 0x26000
   166ec:	ldr	pc, [ip, #3324]!	; 0xcfc

000166f0 <gtk_text_view_set_right_margin@plt>:
   166f0:	add	ip, pc, #0, 12
   166f4:	add	ip, ip, #155648	; 0x26000
   166f8:	ldr	pc, [ip, #3316]!	; 0xcf4

000166fc <g_object_get@plt>:
   166fc:	add	ip, pc, #0, 12
   16700:	add	ip, ip, #155648	; 0x26000
   16704:	ldr	pc, [ip, #3308]!	; 0xcec

00016708 <pk_client_get_repo_list_async@plt>:
   16708:	add	ip, pc, #0, 12
   1670c:	add	ip, ip, #155648	; 0x26000
   16710:	ldr	pc, [ip, #3300]!	; 0xce4

00016714 <gtk_tree_selection_get_selected@plt>:
   16714:	add	ip, pc, #0, 12
   16718:	add	ip, ip, #155648	; 0x26000
   1671c:	ldr	pc, [ip, #3292]!	; 0xcdc

00016720 <gtk_dialog_get_type@plt>:
   16720:	add	ip, pc, #0, 12
   16724:	add	ip, ip, #155648	; 0x26000
   16728:	ldr	pc, [ip, #3284]!	; 0xcd4

0001672c <gtk_tree_selection_count_selected_rows@plt>:
   1672c:	add	ip, pc, #0, 12
   16730:	add	ip, ip, #155648	; 0x26000
   16734:	ldr	pc, [ip, #3276]!	; 0xccc

00016738 <pk_results_get_repo_signature_required_array@plt>:
   16738:	add	ip, pc, #0, 12
   1673c:	add	ip, ip, #155648	; 0x26000
   16740:	ldr	pc, [ip, #3268]!	; 0xcc4

00016744 <gtk_tree_view_get_selection@plt>:
   16744:	add	ip, pc, #0, 12
   16748:	add	ip, ip, #155648	; 0x26000
   1674c:	ldr	pc, [ip, #3260]!	; 0xcbc

00016750 <gtk_tree_model_get_type@plt>:
   16750:	add	ip, pc, #0, 12
   16754:	add	ip, ip, #155648	; 0x26000
   16758:	ldr	pc, [ip, #3252]!	; 0xcb4

0001675c <gtk_list_store_append@plt>:
   1675c:	add	ip, pc, #0, 12
   16760:	add	ip, ip, #155648	; 0x26000
   16764:	ldr	pc, [ip, #3244]!	; 0xcac

00016768 <gtk_text_buffer_create_mark@plt>:
   16768:	add	ip, pc, #0, 12
   1676c:	add	ip, ip, #155648	; 0x26000
   16770:	ldr	pc, [ip, #3236]!	; 0xca4

00016774 <g_menu_model_get_type@plt>:
   16774:	add	ip, pc, #0, 12
   16778:	add	ip, ip, #155648	; 0x26000
   1677c:	ldr	pc, [ip, #3228]!	; 0xc9c

00016780 <gtk_text_view_set_editable@plt>:
   16780:	add	ip, pc, #0, 12
   16784:	add	ip, ip, #155648	; 0x26000
   16788:	ldr	pc, [ip, #3220]!	; 0xc94

0001678c <g_type_class_add_private@plt>:
   1678c:	add	ip, pc, #0, 12
   16790:	add	ip, ip, #155648	; 0x26000
   16794:	ldr	pc, [ip, #3212]!	; 0xc8c

00016798 <pk_task_generic_finish@plt>:
   16798:	add	ip, pc, #0, 12
   1679c:	add	ip, ip, #155648	; 0x26000
   167a0:	ldr	pc, [ip, #3204]!	; 0xc84

000167a4 <gtk_entry_set_text@plt>:
   167a4:	add	ip, pc, #0, 12
   167a8:	add	ip, ip, #155648	; 0x26000
   167ac:	ldr	pc, [ip, #3196]!	; 0xc7c

000167b0 <raise@plt>:
   167b0:	add	ip, pc, #0, 12
   167b4:	add	ip, ip, #155648	; 0x26000
   167b8:	ldr	pc, [ip, #3188]!	; 0xc74

000167bc <gtk_toggle_button_set_active@plt>:
   167bc:	add	ip, pc, #0, 12
   167c0:	add	ip, ip, #155648	; 0x26000
   167c4:	ldr	pc, [ip, #3180]!	; 0xc6c

000167c8 <gtk_dialog_get_content_area@plt>:
   167c8:	add	ip, pc, #0, 12
   167cc:	add	ip, ip, #155648	; 0x26000
   167d0:	ldr	pc, [ip, #3172]!	; 0xc64

000167d4 <pk_control_get_type@plt>:
   167d4:	add	ip, pc, #0, 12
   167d8:	add	ip, ip, #155648	; 0x26000
   167dc:	ldr	pc, [ip, #3164]!	; 0xc5c

000167e0 <g_type_check_instance_is_a@plt>:
   167e0:	add	ip, pc, #0, 12
   167e4:	add	ip, ip, #155648	; 0x26000
   167e8:	ldr	pc, [ip, #3156]!	; 0xc54

000167ec <g_print@plt>:
   167ec:	add	ip, pc, #0, 12
   167f0:	add	ip, ip, #155648	; 0x26000
   167f4:	ldr	pc, [ip, #3148]!	; 0xc4c

000167f8 <getuid@plt>:
   167f8:	add	ip, pc, #0, 12
   167fc:	add	ip, ip, #155648	; 0x26000
   16800:	ldr	pc, [ip, #3140]!	; 0xc44

00016804 <bindtextdomain@plt>:
   16804:	add	ip, pc, #0, 12
   16808:	add	ip, ip, #155648	; 0x26000
   1680c:	ldr	pc, [ip, #3132]!	; 0xc3c

00016810 <gtk_tree_selection_path_is_selected@plt>:
   16810:	add	ip, pc, #0, 12
   16814:	add	ip, ip, #155648	; 0x26000
   16818:	ldr	pc, [ip, #3124]!	; 0xc34

0001681c <gtk_tree_store_clear@plt>:
   1681c:	add	ip, pc, #0, 12
   16820:	add	ip, ip, #155648	; 0x26000
   16824:	ldr	pc, [ip, #3116]!	; 0xc2c

00016828 <pk_results_get_eula_required_array@plt>:
   16828:	add	ip, pc, #0, 12
   1682c:	add	ip, ip, #155648	; 0x26000
   16830:	ldr	pc, [ip, #3108]!	; 0xc24

00016834 <gtk_dialog_new@plt>:
   16834:	add	ip, pc, #0, 12
   16838:	add	ip, ip, #155648	; 0x26000
   1683c:	ldr	pc, [ip, #3100]!	; 0xc1c

00016840 <pk_package_sack_get_size@plt>:
   16840:	add	ip, pc, #0, 12
   16844:	add	ip, ip, #155648	; 0x26000
   16848:	ldr	pc, [ip, #3092]!	; 0xc14

0001684c <gtk_entry_get_text_length@plt>:
   1684c:	add	ip, pc, #0, 12
   16850:	add	ip, ip, #155648	; 0x26000
   16854:	ldr	pc, [ip, #3084]!	; 0xc0c

00016858 <gtk_style_context_get_color@plt>:
   16858:	add	ip, pc, #0, 12
   1685c:	add	ip, ip, #155648	; 0x26000
   16860:	ldr	pc, [ip, #3076]!	; 0xc04

00016864 <pk_results_get_package_sack@plt>:
   16864:	add	ip, pc, #0, 12
   16868:	add	ip, ip, #155648	; 0x26000
   1686c:	ldr	pc, [ip, #3068]!	; 0xbfc

00016870 <setlocale@plt>:
   16870:	add	ip, pc, #0, 12
   16874:	add	ip, ip, #155648	; 0x26000
   16878:	ldr	pc, [ip, #3060]!	; 0xbf4

0001687c <gtk_menu_get_type@plt>:
   1687c:	add	ip, pc, #0, 12
   16880:	add	ip, ip, #155648	; 0x26000
   16884:	ldr	pc, [ip, #3052]!	; 0xbec

00016888 <g_strconcat@plt>:
   16888:	add	ip, pc, #0, 12
   1688c:	add	ip, ip, #155648	; 0x26000
   16890:	ldr	pc, [ip, #3044]!	; 0xbe4

00016894 <g_option_context_add_main_entries@plt>:
   16894:	add	ip, pc, #0, 12
   16898:	add	ip, ip, #155648	; 0x26000
   1689c:	ldr	pc, [ip, #3036]!	; 0xbdc

000168a0 <pk_task_install_packages_async@plt>:
   168a0:	add	ip, pc, #0, 12
   168a4:	add	ip, ip, #155648	; 0x26000
   168a8:	ldr	pc, [ip, #3028]!	; 0xbd4

000168ac <gtk_main_iteration@plt>:
   168ac:	add	ip, pc, #0, 12
   168b0:	add	ip, ip, #155648	; 0x26000
   168b4:	ldr	pc, [ip, #3020]!	; 0xbcc

000168b8 <gtk_text_buffer_insert_with_tags@plt>:
   168b8:	add	ip, pc, #0, 12
   168bc:	add	ip, ip, #155648	; 0x26000
   168c0:	ldr	pc, [ip, #3012]!	; 0xbc4

000168c4 <gtk_window_set_resizable@plt>:
   168c4:	add	ip, pc, #0, 12
   168c8:	add	ip, ip, #155648	; 0x26000
   168cc:	ldr	pc, [ip, #3004]!	; 0xbbc

000168d0 <gtk_widget_show_all@plt>:
   168d0:	add	ip, pc, #0, 12
   168d4:	add	ip, ip, #155648	; 0x26000
   168d8:	ldr	pc, [ip, #2996]!	; 0xbb4

000168dc <gtk_builder_new@plt>:
   168dc:	add	ip, pc, #0, 12
   168e0:	add	ip, ip, #155648	; 0x26000
   168e4:	ldr	pc, [ip, #2988]!	; 0xbac

000168e8 <g_string_free@plt>:
   168e8:	add	ip, pc, #0, 12
   168ec:	add	ip, ip, #155648	; 0x26000
   168f0:	ldr	pc, [ip, #2980]!	; 0xba4

000168f4 <gtk_dialog_run@plt>:
   168f4:	add	ip, pc, #0, 12
   168f8:	add	ip, ip, #155648	; 0x26000
   168fc:	ldr	pc, [ip, #2972]!	; 0xb9c

00016900 <pk_client_get_details_async@plt>:
   16900:	add	ip, pc, #0, 12
   16904:	add	ip, ip, #155648	; 0x26000
   16908:	ldr	pc, [ip, #2964]!	; 0xb94

0001690c <gtk_window_present@plt>:
   1690c:	add	ip, pc, #0, 12
   16910:	add	ip, ip, #155648	; 0x26000
   16914:	ldr	pc, [ip, #2956]!	; 0xb8c

00016918 <pk_results_get_category_array@plt>:
   16918:	add	ip, pc, #0, 12
   1691c:	add	ip, ip, #155648	; 0x26000
   16920:	ldr	pc, [ip, #2948]!	; 0xb84

00016924 <pango_attr_iterator_get@plt>:
   16924:	add	ip, pc, #0, 12
   16928:	add	ip, ip, #155648	; 0x26000
   1692c:	ldr	pc, [ip, #2940]!	; 0xb7c

00016930 <pk_client_get_packages_async@plt>:
   16930:	add	ip, pc, #0, 12
   16934:	add	ip, ip, #155648	; 0x26000
   16938:	ldr	pc, [ip, #2932]!	; 0xb74

0001693c <gtk_menu_new_from_model@plt>:
   1693c:	add	ip, pc, #0, 12
   16940:	add	ip, ip, #155648	; 0x26000
   16944:	ldr	pc, [ip, #2924]!	; 0xb6c

00016948 <pango_attr_iterator_next@plt>:
   16948:	add	ip, pc, #0, 12
   1694c:	add	ip, ip, #155648	; 0x26000
   16950:	ldr	pc, [ip, #2916]!	; 0xb64

00016954 <gtk_tree_store_insert@plt>:
   16954:	add	ip, pc, #0, 12
   16958:	add	ip, ip, #155648	; 0x26000
   1695c:	ldr	pc, [ip, #2908]!	; 0xb5c

00016960 <pk_info_enum_to_string@plt>:
   16960:	add	ip, pc, #0, 12
   16964:	add	ip, ip, #155648	; 0x26000
   16968:	ldr	pc, [ip, #2900]!	; 0xb54

0001696c <gtk_show_about_dialog@plt>:
   1696c:	add	ip, pc, #0, 12
   16970:	add	ip, ip, #155648	; 0x26000
   16974:	ldr	pc, [ip, #2892]!	; 0xb4c

00016978 <gtk_widget_show@plt>:
   16978:	add	ip, pc, #0, 12
   1697c:	add	ip, ip, #155648	; 0x26000
   16980:	ldr	pc, [ip, #2884]!	; 0xb44

00016984 <pk_package_sack_get_ids@plt>:
   16984:	add	ip, pc, #0, 12
   16988:	add	ip, ip, #155648	; 0x26000
   1698c:	ldr	pc, [ip, #2876]!	; 0xb3c

00016990 <g_object_unref@plt>:
   16990:	add	ip, pc, #0, 12
   16994:	add	ip, ip, #155648	; 0x26000
   16998:	ldr	pc, [ip, #2868]!	; 0xb34

0001699c <strlen@plt>:
   1699c:	add	ip, pc, #0, 12
   169a0:	add	ip, ip, #155648	; 0x26000
   169a4:	ldr	pc, [ip, #2860]!	; 0xb2c

000169a8 <gtk_window_set_application@plt>:
   169a8:	add	ip, pc, #0, 12
   169ac:	add	ip, ip, #155648	; 0x26000
   169b0:	ldr	pc, [ip, #2852]!	; 0xb24

000169b4 <gtk_menu_item_get_type@plt>:
   169b4:	add	ip, pc, #0, 12
   169b8:	add	ip, ip, #155648	; 0x26000
   169bc:	ldr	pc, [ip, #2844]!	; 0xb1c

000169c0 <gtk_text_buffer_get_tag_table@plt>:
   169c0:	add	ip, pc, #0, 12
   169c4:	add	ip, ip, #155648	; 0x26000
   169c8:	ldr	pc, [ip, #2836]!	; 0xb14

000169cc <pango_attr_iterator_destroy@plt>:
   169cc:	add	ip, pc, #0, 12
   169d0:	add	ip, ip, #155648	; 0x26000
   169d4:	ldr	pc, [ip, #2828]!	; 0xb0c

000169d8 <g_once_init_leave@plt>:
   169d8:	add	ip, pc, #0, 12
   169dc:	add	ip, ip, #155648	; 0x26000
   169e0:	ldr	pc, [ip, #2820]!	; 0xb04

000169e4 <gtk_icon_size_lookup@plt>:
   169e4:	add	ip, pc, #0, 12
   169e8:	add	ip, ip, #155648	; 0x26000
   169ec:	ldr	pc, [ip, #2812]!	; 0xafc

000169f0 <g_desktop_app_info_new_from_filename@plt>:
   169f0:	add	ip, pc, #0, 12
   169f4:	add	ip, ip, #155648	; 0x26000
   169f8:	ldr	pc, [ip, #2804]!	; 0xaf4

000169fc <g_log_set_fatal_mask@plt>:
   169fc:	add	ip, pc, #0, 12
   16a00:	add	ip, ip, #155648	; 0x26000
   16a04:	ldr	pc, [ip, #2796]!	; 0xaec

00016a08 <gtk_application_get_active_window@plt>:
   16a08:	add	ip, pc, #0, 12
   16a0c:	add	ip, ip, #155648	; 0x26000
   16a10:	ldr	pc, [ip, #2788]!	; 0xae4

00016a14 <gtk_tree_view_set_tooltip_column@plt>:
   16a14:	add	ip, pc, #0, 12
   16a18:	add	ip, ip, #155648	; 0x26000
   16a1c:	ldr	pc, [ip, #2780]!	; 0xadc

00016a20 <gtk_tree_selection_unselect_all@plt>:
   16a20:	add	ip, pc, #0, 12
   16a24:	add	ip, ip, #155648	; 0x26000
   16a28:	ldr	pc, [ip, #2772]!	; 0xad4

00016a2c <gtk_window_set_transient_for@plt>:
   16a2c:	add	ip, pc, #0, 12
   16a30:	add	ip, ip, #155648	; 0x26000
   16a34:	ldr	pc, [ip, #2764]!	; 0xacc

00016a38 <gtk_text_buffer_new@plt>:
   16a38:	add	ip, pc, #0, 12
   16a3c:	add	ip, ip, #155648	; 0x26000
   16a40:	ldr	pc, [ip, #2756]!	; 0xac4

00016a44 <g_source_set_name_by_id@plt>:
   16a44:	add	ip, pc, #0, 12
   16a48:	add	ip, ip, #155648	; 0x26000
   16a4c:	ldr	pc, [ip, #2748]!	; 0xabc

00016a50 <gtk_style_context_add_class@plt>:
   16a50:	add	ip, pc, #0, 12
   16a54:	add	ip, ip, #155648	; 0x26000
   16a58:	ldr	pc, [ip, #2740]!	; 0xab4

00016a5c <g_malloc0_n@plt>:
   16a5c:	add	ip, pc, #0, 12
   16a60:	add	ip, ip, #155648	; 0x26000
   16a64:	ldr	pc, [ip, #2732]!	; 0xaac

00016a68 <gtk_entry_get_type@plt>:
   16a68:	add	ip, pc, #0, 12
   16a6c:	add	ip, ip, #155648	; 0x26000
   16a70:	ldr	pc, [ip, #2724]!	; 0xaa4

00016a74 <pk_package_id_to_printable@plt>:
   16a74:	add	ip, pc, #0, 12
   16a78:	add	ip, ip, #155648	; 0x26000
   16a7c:	ldr	pc, [ip, #2716]!	; 0xa9c

00016a80 <g_simple_action_set_enabled@plt>:
   16a80:	add	ip, pc, #0, 12
   16a84:	add	ip, ip, #155648	; 0x26000
   16a88:	ldr	pc, [ip, #2708]!	; 0xa94

00016a8c <gtk_tree_sortable_set_sort_column_id@plt>:
   16a8c:	add	ip, pc, #0, 12
   16a90:	add	ip, ip, #155648	; 0x26000
   16a94:	ldr	pc, [ip, #2700]!	; 0xa8c

00016a98 <gtk_main_quit@plt>:
   16a98:	add	ip, pc, #0, 12
   16a9c:	add	ip, ip, #155648	; 0x26000
   16aa0:	ldr	pc, [ip, #2692]!	; 0xa84

00016aa4 <g_strchug@plt>:
   16aa4:	add	ip, pc, #0, 12
   16aa8:	add	ip, ip, #155648	; 0x26000
   16aac:	ldr	pc, [ip, #2684]!	; 0xa7c

00016ab0 <g_spawn_command_line_async@plt>:
   16ab0:	add	ip, pc, #0, 12
   16ab4:	add	ip, ip, #155648	; 0x26000
   16ab8:	ldr	pc, [ip, #2676]!	; 0xa74

00016abc <gtk_tree_view_scroll_to_cell@plt>:
   16abc:	add	ip, pc, #0, 12
   16ac0:	add	ip, ip, #155648	; 0x26000
   16ac4:	ldr	pc, [ip, #2668]!	; 0xa6c

00016ac8 <g_action_map_add_action@plt>:
   16ac8:	add	ip, pc, #0, 12
   16acc:	add	ip, ip, #155648	; 0x26000
   16ad0:	ldr	pc, [ip, #2660]!	; 0xa64

00016ad4 <g_type_class_peek_parent@plt>:
   16ad4:	add	ip, pc, #0, 12
   16ad8:	add	ip, ip, #155648	; 0x26000
   16adc:	ldr	pc, [ip, #2652]!	; 0xa5c

00016ae0 <gtk_tree_view_column_add_attribute@plt>:
   16ae0:	add	ip, pc, #0, 12
   16ae4:	add	ip, ip, #155648	; 0x26000
   16ae8:	ldr	pc, [ip, #2644]!	; 0xa54

00016aec <gtk_tree_view_new_with_model@plt>:
   16aec:	add	ip, pc, #0, 12
   16af0:	add	ip, ip, #155648	; 0x26000
   16af4:	ldr	pc, [ip, #2636]!	; 0xa4c

00016af8 <g_ptr_array_unref@plt>:
   16af8:	add	ip, pc, #0, 12
   16afc:	add	ip, ip, #155648	; 0x26000
   16b00:	ldr	pc, [ip, #2628]!	; 0xa44

00016b04 <gtk_cell_renderer_toggle_new@plt>:
   16b04:	add	ip, pc, #0, 12
   16b08:	add	ip, ip, #155648	; 0x26000
   16b0c:	ldr	pc, [ip, #2620]!	; 0xa3c

00016b10 <pk_results_get_details_array@plt>:
   16b10:	add	ip, pc, #0, 12
   16b14:	add	ip, ip, #155648	; 0x26000
   16b18:	ldr	pc, [ip, #2612]!	; 0xa34

00016b1c <gtk_scrolled_window_get_type@plt>:
   16b1c:	add	ip, pc, #0, 12
   16b20:	add	ip, ip, #155648	; 0x26000
   16b24:	ldr	pc, [ip, #2604]!	; 0xa2c

00016b28 <g_hash_table_destroy@plt>:
   16b28:	add	ip, pc, #0, 12
   16b2c:	add	ip, ip, #155648	; 0x26000
   16b30:	ldr	pc, [ip, #2596]!	; 0xa24

00016b34 <g_malloc0@plt>:
   16b34:	add	ip, pc, #0, 12
   16b38:	add	ip, ip, #155648	; 0x26000
   16b3c:	ldr	pc, [ip, #2588]!	; 0xa1c

00016b40 <gtk_window_set_modal@plt>:
   16b40:	add	ip, pc, #0, 12
   16b44:	add	ip, ip, #155648	; 0x26000
   16b48:	ldr	pc, [ip, #2580]!	; 0xa14

00016b4c <strcmp@plt>:
   16b4c:	add	ip, pc, #0, 12
   16b50:	add	ip, ip, #155648	; 0x26000
   16b54:	ldr	pc, [ip, #2572]!	; 0xa0c

00016b58 <g_ptr_array_add@plt>:
   16b58:	add	ip, pc, #0, 12
   16b5c:	add	ip, ip, #155648	; 0x26000
   16b60:	ldr	pc, [ip, #2564]!	; 0xa04

00016b64 <g_markup_escape_text@plt>:
   16b64:	add	ip, pc, #0, 12
   16b68:	add	ip, ip, #155648	; 0x26000
   16b6c:	ldr	pc, [ip, #2556]!	; 0x9fc

00016b70 <g_str_has_suffix@plt>:
   16b70:	add	ip, pc, #0, 12
   16b74:	add	ip, ip, #155648	; 0x26000
   16b78:	ldr	pc, [ip, #2548]!	; 0x9f4

00016b7c <gtk_init@plt>:
   16b7c:	add	ip, pc, #0, 12
   16b80:	add	ip, ip, #155648	; 0x26000
   16b84:	ldr	pc, [ip, #2540]!	; 0x9ec

00016b88 <gtk_image_set_from_icon_name@plt>:
   16b88:	add	ip, pc, #0, 12
   16b8c:	add	ip, ip, #155648	; 0x26000
   16b90:	ldr	pc, [ip, #2532]!	; 0x9e4

00016b94 <g_settings_set_boolean@plt>:
   16b94:	add	ip, pc, #0, 12
   16b98:	add	ip, ip, #155648	; 0x26000
   16b9c:	ldr	pc, [ip, #2524]!	; 0x9dc

00016ba0 <time@plt>:
   16ba0:	add	ip, pc, #0, 12
   16ba4:	add	ip, ip, #155648	; 0x26000
   16ba8:	ldr	pc, [ip, #2516]!	; 0x9d4

00016bac <pango_parse_markup@plt>:
   16bac:	add	ip, pc, #0, 12
   16bb0:	add	ip, ip, #155648	; 0x26000
   16bb4:	ldr	pc, [ip, #2508]!	; 0x9cc

00016bb8 <pk_task_search_files_async@plt>:
   16bb8:	add	ip, pc, #0, 12
   16bbc:	add	ip, ip, #155648	; 0x26000
   16bc0:	ldr	pc, [ip, #2500]!	; 0x9c4

00016bc4 <gtk_message_dialog_new@plt>:
   16bc4:	add	ip, pc, #0, 12
   16bc8:	add	ip, ip, #155648	; 0x26000
   16bcc:	ldr	pc, [ip, #2492]!	; 0x9bc

00016bd0 <gtk_icon_theme_get_default@plt>:
   16bd0:	add	ip, pc, #0, 12
   16bd4:	add	ip, ip, #155648	; 0x26000
   16bd8:	ldr	pc, [ip, #2484]!	; 0x9b4

00016bdc <gtk_label_set_markup@plt>:
   16bdc:	add	ip, pc, #0, 12
   16be0:	add	ip, ip, #155648	; 0x26000
   16be4:	ldr	pc, [ip, #2476]!	; 0x9ac

00016be8 <pk_package_sack_new@plt>:
   16be8:	add	ip, pc, #0, 12
   16bec:	add	ip, ip, #155648	; 0x26000
   16bf0:	ldr	pc, [ip, #2468]!	; 0x9a4

00016bf4 <gtk_tree_view_set_headers_visible@plt>:
   16bf4:	add	ip, pc, #0, 12
   16bf8:	add	ip, ip, #155648	; 0x26000
   16bfc:	ldr	pc, [ip, #2460]!	; 0x99c

00016c00 <g_string_append@plt>:
   16c00:	add	ip, pc, #0, 12
   16c04:	add	ip, ip, #155648	; 0x26000
   16c08:	ldr	pc, [ip, #2452]!	; 0x994

00016c0c <pk_enum_find_string@plt>:
   16c0c:	add	ip, pc, #0, 12
   16c10:	add	ip, ip, #155648	; 0x26000
   16c14:	ldr	pc, [ip, #2444]!	; 0x98c

00016c18 <gtk_list_store_get_type@plt>:
   16c18:	add	ip, pc, #0, 12
   16c1c:	add	ip, ip, #155648	; 0x26000
   16c20:	ldr	pc, [ip, #2436]!	; 0x984

00016c24 <gtk_tree_model_get_iter@plt>:
   16c24:	add	ip, pc, #0, 12
   16c28:	add	ip, ip, #155648	; 0x26000
   16c2c:	ldr	pc, [ip, #2428]!	; 0x97c

00016c30 <dbus_g_thread_init@plt>:
   16c30:	add	ip, pc, #0, 12
   16c34:	add	ip, ip, #155648	; 0x26000
   16c38:	ldr	pc, [ip, #2420]!	; 0x974

00016c3c <g_strjoinv@plt>:
   16c3c:	add	ip, pc, #0, 12
   16c40:	add	ip, ip, #155648	; 0x26000
   16c44:	ldr	pc, [ip, #2412]!	; 0x96c

00016c48 <gtk_check_button_new_with_label@plt>:
   16c48:	add	ip, pc, #0, 12
   16c4c:	add	ip, ip, #155648	; 0x26000
   16c50:	ldr	pc, [ip, #2404]!	; 0x964

00016c54 <gtk_widget_set_halign@plt>:
   16c54:	add	ip, pc, #0, 12
   16c58:	add	ip, ip, #155648	; 0x26000
   16c5c:	ldr	pc, [ip, #2396]!	; 0x95c

00016c60 <pk_client_search_groups_async@plt>:
   16c60:	add	ip, pc, #0, 12
   16c64:	add	ip, ip, #155648	; 0x26000
   16c68:	ldr	pc, [ip, #2388]!	; 0x954

00016c6c <gtk_tree_model_get@plt>:
   16c6c:	add	ip, pc, #0, 12
   16c70:	add	ip, ip, #155648	; 0x26000
   16c74:	ldr	pc, [ip, #2380]!	; 0x94c

00016c78 <g_string_append_printf@plt>:
   16c78:	add	ip, pc, #0, 12
   16c7c:	add	ip, ip, #155648	; 0x26000
   16c80:	ldr	pc, [ip, #2372]!	; 0x944

00016c84 <gtk_menu_item_set_submenu@plt>:
   16c84:	add	ip, pc, #0, 12
   16c88:	add	ip, ip, #155648	; 0x26000
   16c8c:	ldr	pc, [ip, #2364]!	; 0x93c

00016c90 <g_type_check_class_cast@plt>:
   16c90:	add	ip, pc, #0, 12
   16c94:	add	ip, ip, #155648	; 0x26000
   16c98:	ldr	pc, [ip, #2356]!	; 0x934

00016c9c <gtk_list_store_clear@plt>:
   16c9c:	add	ip, pc, #0, 12
   16ca0:	add	ip, ip, #155648	; 0x26000
   16ca4:	ldr	pc, [ip, #2348]!	; 0x92c

00016ca8 <__libc_start_main@plt>:
   16ca8:	add	ip, pc, #0, 12
   16cac:	add	ip, ip, #155648	; 0x26000
   16cb0:	ldr	pc, [ip, #2340]!	; 0x924

00016cb4 <__gmon_start__@plt>:
   16cb4:	add	ip, pc, #0, 12
   16cb8:	add	ip, ip, #155648	; 0x26000
   16cbc:	ldr	pc, [ip, #2332]!	; 0x91c

00016cc0 <gtk_builder_add_from_file@plt>:
   16cc0:	add	ip, pc, #0, 12
   16cc4:	add	ip, ip, #155648	; 0x26000
   16cc8:	ldr	pc, [ip, #2324]!	; 0x914

00016ccc <gtk_tree_view_collapse_all@plt>:
   16ccc:	add	ip, pc, #0, 12
   16cd0:	add	ip, ip, #155648	; 0x26000
   16cd4:	ldr	pc, [ip, #2316]!	; 0x90c

00016cd8 <gtk_notebook_get_type@plt>:
   16cd8:	add	ip, pc, #0, 12
   16cdc:	add	ip, ip, #155648	; 0x26000
   16ce0:	ldr	pc, [ip, #2308]!	; 0x904

00016ce4 <strchr@plt>:
   16ce4:	add	ip, pc, #0, 12
   16ce8:	add	ip, ip, #155648	; 0x26000
   16cec:	ldr	pc, [ip, #2300]!	; 0x8fc

00016cf0 <gtk_box_set_homogeneous@plt>:
   16cf0:	add	ip, pc, #0, 12
   16cf4:	add	ip, ip, #155648	; 0x26000
   16cf8:	ldr	pc, [ip, #2292]!	; 0x8f4

00016cfc <gtk_widget_override_background_color@plt>:
   16cfc:	add	ip, pc, #0, 12
   16d00:	add	ip, ip, #155648	; 0x26000
   16d04:	ldr	pc, [ip, #2284]!	; 0x8ec

00016d08 <pango_attr_list_get_iterator@plt>:
   16d08:	add	ip, pc, #0, 12
   16d0c:	add	ip, ip, #155648	; 0x26000
   16d10:	ldr	pc, [ip, #2276]!	; 0x8e4

00016d14 <gtk_menu_shell_append@plt>:
   16d14:	add	ip, pc, #0, 12
   16d18:	add	ip, ip, #155648	; 0x26000
   16d1c:	ldr	pc, [ip, #2268]!	; 0x8dc

00016d20 <gtk_window_get_type@plt>:
   16d20:	add	ip, pc, #0, 12
   16d24:	add	ip, ip, #155648	; 0x26000
   16d28:	ldr	pc, [ip, #2260]!	; 0x8d4

00016d2c <gtk_widget_set_sensitive@plt>:
   16d2c:	add	ip, pc, #0, 12
   16d30:	add	ip, ip, #155648	; 0x26000
   16d34:	ldr	pc, [ip, #2252]!	; 0x8cc

00016d38 <g_source_remove@plt>:
   16d38:	add	ip, pc, #0, 12
   16d3c:	add	ip, ip, #155648	; 0x26000
   16d40:	ldr	pc, [ip, #2244]!	; 0x8c4

00016d44 <g_settings_get_enum@plt>:
   16d44:	add	ip, pc, #0, 12
   16d48:	add	ip, ip, #155648	; 0x26000
   16d4c:	ldr	pc, [ip, #2236]!	; 0x8bc

00016d50 <gtk_toggle_button_get_active@plt>:
   16d50:	add	ip, pc, #0, 12
   16d54:	add	ip, ip, #155648	; 0x26000
   16d58:	ldr	pc, [ip, #2228]!	; 0x8b4

00016d5c <g_strcmp0@plt>:
   16d5c:	add	ip, pc, #0, 12
   16d60:	add	ip, ip, #155648	; 0x26000
   16d64:	ldr	pc, [ip, #2220]!	; 0x8ac

Disassembly of section .text:

00016d68 <.text>:
   16d68:	push	{r4, r5, r6, r7, r8, lr}
   16d6c:	sub	sp, sp, #80	; 0x50
   16d70:	ldr	r7, [pc, #800]	; 17098 <g_strcmp0@plt+0x33c>
   16d74:	mov	r4, #0
   16d78:	str	r0, [sp, #12]
   16d7c:	ldr	r3, [r7]
   16d80:	str	r1, [sp, #8]
   16d84:	mov	r2, #52	; 0x34
   16d88:	mov	r1, r4
   16d8c:	add	r0, sp, #24
   16d90:	str	r3, [sp, #76]	; 0x4c
   16d94:	str	r4, [sp, #16]
   16d98:	bl	1612c <memset@plt>
   16d9c:	ldr	ip, [pc, #760]	; 1709c <g_strcmp0@plt+0x340>
   16da0:	add	r3, sp, #16
   16da4:	mov	r2, #5
   16da8:	ldr	r1, [pc, #752]	; 170a0 <g_strcmp0@plt+0x344>
   16dac:	mov	r0, r4
   16db0:	str	ip, [sp, #20]
   16db4:	str	r3, [sp, #36]	; 0x24
   16db8:	bl	1666c <dcgettext@plt>
   16dbc:	ldr	r1, [pc, #736]	; 170a4 <g_strcmp0@plt+0x348>
   16dc0:	str	r0, [sp, #40]	; 0x28
   16dc4:	mov	r0, #6
   16dc8:	bl	16870 <setlocale@plt>
   16dcc:	ldr	r1, [pc, #724]	; 170a8 <g_strcmp0@plt+0x34c>
   16dd0:	ldr	r0, [pc, #724]	; 170ac <g_strcmp0@plt+0x350>
   16dd4:	bl	16804 <bindtextdomain@plt>
   16dd8:	ldr	r1, [pc, #720]	; 170b0 <g_strcmp0@plt+0x354>
   16ddc:	ldr	r0, [pc, #712]	; 170ac <g_strcmp0@plt+0x350>
   16de0:	bl	15d60 <bind_textdomain_codeset@plt>
   16de4:	ldr	r0, [pc, #704]	; 170ac <g_strcmp0@plt+0x350>
   16de8:	bl	1606c <textdomain@plt>
   16dec:	bl	16c30 <dbus_g_thread_init@plt>
   16df0:	add	r1, sp, #8
   16df4:	add	r0, sp, #12
   16df8:	bl	16b7c <gtk_init@plt>
   16dfc:	mov	r0, r4
   16e00:	bl	15e44 <g_option_context_new@plt>
   16e04:	mov	r2, #5
   16e08:	ldr	r1, [pc, #676]	; 170b4 <g_strcmp0@plt+0x358>
   16e0c:	mov	r5, r0
   16e10:	mov	r0, r4
   16e14:	bl	1666c <dcgettext@plt>
   16e18:	mov	r1, r0
   16e1c:	mov	r0, r5
   16e20:	bl	15ed4 <g_option_context_set_summary@plt>
   16e24:	mov	r2, r4
   16e28:	add	r1, sp, #20
   16e2c:	mov	r0, r5
   16e30:	bl	16894 <g_option_context_add_main_entries@plt>
   16e34:	bl	1ee78 <g_strcmp0@plt+0x811c>
   16e38:	mov	r1, r0
   16e3c:	mov	r0, r5
   16e40:	bl	15bf8 <g_option_context_add_group@plt>
   16e44:	mov	r0, #1
   16e48:	bl	15d9c <gtk_get_option_group@plt>
   16e4c:	mov	r1, r0
   16e50:	mov	r0, r5
   16e54:	bl	15bf8 <g_option_context_add_group@plt>
   16e58:	mov	r3, r4
   16e5c:	add	r2, sp, #8
   16e60:	add	r1, sp, #12
   16e64:	mov	r0, r5
   16e68:	bl	15bec <g_option_context_parse@plt>
   16e6c:	mov	r0, r5
   16e70:	bl	1657c <g_option_context_free@plt>
   16e74:	ldr	r0, [pc, #572]	; 170b8 <g_strcmp0@plt+0x35c>
   16e78:	bl	1eda8 <g_strcmp0@plt+0x804c>
   16e7c:	ldr	r6, [sp, #16]
   16e80:	cmp	r6, r4
   16e84:	bne	17054 <g_strcmp0@plt+0x2f8>
   16e88:	mov	r2, #5
   16e8c:	ldr	r1, [pc, #552]	; 170bc <g_strcmp0@plt+0x360>
   16e90:	mov	r0, r6
   16e94:	bl	1666c <dcgettext@plt>
   16e98:	mov	r1, #1
   16e9c:	bl	233a4 <g_strcmp0@plt+0xc648>
   16ea0:	cmp	r0, #0
   16ea4:	moveq	r4, #1
   16ea8:	bne	16ec8 <g_strcmp0@plt+0x16c>
   16eac:	ldr	r2, [sp, #76]	; 0x4c
   16eb0:	ldr	r3, [r7]
   16eb4:	mov	r0, r4
   16eb8:	cmp	r2, r3
   16ebc:	bne	17094 <g_strcmp0@plt+0x338>
   16ec0:	add	sp, sp, #80	; 0x50
   16ec4:	pop	{r4, r5, r6, r7, r8, pc}
   16ec8:	mov	r0, #136	; 0x88
   16ecc:	bl	16b34 <g_malloc0@plt>
   16ed0:	mov	r1, r6
   16ed4:	mov	r5, r0
   16ed8:	ldr	r0, [pc, #480]	; 170c0 <g_strcmp0@plt+0x364>
   16edc:	bl	15b80 <gtk_application_new@plt>
   16ee0:	str	r6, [sp, #4]
   16ee4:	str	r6, [sp]
   16ee8:	mov	r3, r5
   16eec:	ldr	r2, [pc, #464]	; 170c4 <g_strcmp0@plt+0x368>
   16ef0:	ldr	r1, [pc, #464]	; 170c8 <g_strcmp0@plt+0x36c>
   16ef4:	str	r0, [r5, #48]	; 0x30
   16ef8:	bl	16414 <g_signal_connect_data@plt>
   16efc:	mov	r3, r5
   16f00:	ldr	r2, [pc, #452]	; 170cc <g_strcmp0@plt+0x370>
   16f04:	str	r6, [sp, #4]
   16f08:	str	r6, [sp]
   16f0c:	ldr	r1, [pc, #444]	; 170d0 <g_strcmp0@plt+0x374>
   16f10:	ldr	r0, [r5, #48]	; 0x30
   16f14:	bl	16414 <g_signal_connect_data@plt>
   16f18:	bl	16450 <g_action_map_get_type@plt>
   16f1c:	mov	r1, r0
   16f20:	mov	r4, r0
   16f24:	ldr	r0, [r5, #48]	; 0x30
   16f28:	bl	15e14 <g_type_check_instance_cast@plt>
   16f2c:	mov	r3, r5
   16f30:	mov	r2, #6
   16f34:	ldr	r1, [pc, #408]	; 170d4 <g_strcmp0@plt+0x378>
   16f38:	bl	16420 <g_action_map_add_action_entries@plt>
   16f3c:	mov	r2, r6
   16f40:	ldr	r1, [pc, #400]	; 170d8 <g_strcmp0@plt+0x37c>
   16f44:	ldr	r0, [pc, #400]	; 170dc <g_strcmp0@plt+0x380>
   16f48:	bl	15f58 <g_build_filename@plt>
   16f4c:	mov	r1, #8
   16f50:	mov	r6, r0
   16f54:	bl	16684 <g_file_test@plt>
   16f58:	subs	r8, r0, #0
   16f5c:	beq	17060 <g_strcmp0@plt+0x304>
   16f60:	mov	r0, r6
   16f64:	bl	16660 <g_free@plt>
   16f68:	bl	15d24 <g_application_get_type@plt>
   16f6c:	mov	r1, r0
   16f70:	ldr	r0, [r5, #48]	; 0x30
   16f74:	bl	15e14 <g_type_check_instance_cast@plt>
   16f78:	ldr	r2, [sp, #8]
   16f7c:	ldr	r1, [sp, #12]
   16f80:	bl	16240 <g_application_run@plt>
   16f84:	mov	r4, r0
   16f88:	ldr	r0, [r5, #48]	; 0x30
   16f8c:	bl	16990 <g_object_unref@plt>
   16f90:	ldr	r0, [r5, #60]	; 0x3c
   16f94:	cmp	r0, #0
   16f98:	beq	16fa0 <g_strcmp0@plt+0x244>
   16f9c:	bl	16990 <g_object_unref@plt>
   16fa0:	ldr	r0, [r5, #96]	; 0x60
   16fa4:	cmp	r0, #0
   16fa8:	beq	16fb0 <g_strcmp0@plt+0x254>
   16fac:	bl	16990 <g_object_unref@plt>
   16fb0:	ldr	r0, [r5, #104]	; 0x68
   16fb4:	cmp	r0, #0
   16fb8:	beq	16fc0 <g_strcmp0@plt+0x264>
   16fbc:	bl	16990 <g_object_unref@plt>
   16fc0:	ldr	r0, [r5, #52]	; 0x34
   16fc4:	cmp	r0, #0
   16fc8:	beq	16fd0 <g_strcmp0@plt+0x274>
   16fcc:	bl	16990 <g_object_unref@plt>
   16fd0:	ldr	r0, [r5]
   16fd4:	cmp	r0, #0
   16fd8:	beq	16fe0 <g_strcmp0@plt+0x284>
   16fdc:	bl	16990 <g_object_unref@plt>
   16fe0:	ldr	r0, [r5, #56]	; 0x38
   16fe4:	cmp	r0, #0
   16fe8:	beq	16ff0 <g_strcmp0@plt+0x294>
   16fec:	bl	16990 <g_object_unref@plt>
   16ff0:	ldr	r0, [r5, #36]	; 0x24
   16ff4:	cmp	r0, #0
   16ff8:	beq	17000 <g_strcmp0@plt+0x2a4>
   16ffc:	bl	16990 <g_object_unref@plt>
   17000:	ldr	r0, [r5, #12]
   17004:	cmp	r0, #0
   17008:	beq	17010 <g_strcmp0@plt+0x2b4>
   1700c:	bl	16990 <g_object_unref@plt>
   17010:	ldr	r0, [r5, #100]	; 0x64
   17014:	cmp	r0, #0
   17018:	beq	17020 <g_strcmp0@plt+0x2c4>
   1701c:	bl	16990 <g_object_unref@plt>
   17020:	ldr	r0, [r5, #28]
   17024:	cmp	r0, #0
   17028:	beq	17030 <g_strcmp0@plt+0x2d4>
   1702c:	bl	16b28 <g_hash_table_destroy@plt>
   17030:	ldr	r0, [r5, #16]
   17034:	bl	16660 <g_free@plt>
   17038:	ldr	r0, [r5, #20]
   1703c:	bl	16660 <g_free@plt>
   17040:	ldr	r0, [r5, #24]
   17044:	bl	16660 <g_free@plt>
   17048:	mov	r0, r5
   1704c:	bl	16660 <g_free@plt>
   17050:	b	16eac <g_strcmp0@plt+0x150>
   17054:	ldr	r0, [pc, #132]	; 170e0 <g_strcmp0@plt+0x384>
   17058:	bl	167ec <g_print@plt>
   1705c:	b	16eac <g_strcmp0@plt+0x150>
   17060:	mov	r1, r4
   17064:	ldr	r0, [r5, #48]	; 0x30
   17068:	bl	15e14 <g_type_check_instance_cast@plt>
   1706c:	ldr	r1, [pc, #112]	; 170e4 <g_strcmp0@plt+0x388>
   17070:	bl	15ea4 <g_action_map_lookup_action@plt>
   17074:	mov	r4, r0
   17078:	bl	1621c <g_simple_action_get_type@plt>
   1707c:	mov	r1, r0
   17080:	mov	r0, r4
   17084:	bl	15e14 <g_type_check_instance_cast@plt>
   17088:	mov	r1, r8
   1708c:	bl	16a80 <g_simple_action_set_enabled@plt>
   17090:	b	16f60 <g_strcmp0@plt+0x204>
   17094:	bl	165a0 <__stack_chk_fail@plt>
   17098:	andeq	ip, r3, r0, asr lr
   1709c:	andeq	r6, r2, r0, lsl #18
   170a0:	andeq	r7, r2, ip, lsr #18
   170a4:	ldrdeq	r7, [r2], -r0
   170a8:	andeq	r7, r2, r0, asr r9
   170ac:	andeq	r7, r2, r4, ror #18
   170b0:	andeq	r7, r2, r0, ror r9
   170b4:	andeq	r7, r2, r8, ror r9
   170b8:	andeq	r7, r2, ip, lsl #19
   170bc:	andeq	r7, r2, r0, lsr #19
   170c0:			; <UNDEFINED> instruction: 0x000279b4
   170c4:	andeq	ip, r1, r8, lsr #22
   170c8:	ldrdeq	r7, [r2], -ip
   170cc:	andeq	r7, r1, r4, ror sp
   170d0:	andeq	r6, r2, r4, lsr sp
   170d4:	andeq	sp, r3, r0, lsr #12
   170d8:	strdeq	r6, [r2], -r0
   170dc:	andeq	r6, r2, ip, ror #20
   170e0:	muleq	r2, r8, r9
   170e4:	andeq	sl, r2, ip, lsl #27
   170e8:	mov	fp, #0
   170ec:	mov	lr, #0
   170f0:	pop	{r1}		; (ldr r1, [sp], #4)
   170f4:	mov	r2, sp
   170f8:	push	{r2}		; (str r2, [sp, #-4]!)
   170fc:	push	{r0}		; (str r0, [sp, #-4]!)
   17100:	ldr	ip, [pc, #16]	; 17118 <g_strcmp0@plt+0x3bc>
   17104:	push	{ip}		; (str ip, [sp, #-4]!)
   17108:	ldr	r0, [pc, #12]	; 1711c <g_strcmp0@plt+0x3c0>
   1710c:	ldr	r3, [pc, #12]	; 17120 <g_strcmp0@plt+0x3c4>
   17110:	bl	16ca8 <__libc_start_main@plt>
   17114:	bl	16270 <abort@plt>
   17118:	andeq	r6, r2, ip, asr #10
   1711c:	andeq	r6, r1, r8, ror #26
   17120:	andeq	r6, r2, ip, ror #9
   17124:	ldr	r3, [pc, #20]	; 17140 <g_strcmp0@plt+0x3e4>
   17128:	ldr	r2, [pc, #20]	; 17144 <g_strcmp0@plt+0x3e8>
   1712c:	add	r3, pc, r3
   17130:	ldr	r2, [r3, r2]
   17134:	cmp	r2, #0
   17138:	bxeq	lr
   1713c:	b	16cb4 <__gmon_start__@plt>
   17140:	andeq	r5, r2, ip, asr #29
   17144:	andeq	r0, r0, r4, lsl r6
   17148:	ldr	r0, [pc, #24]	; 17168 <g_strcmp0@plt+0x40c>
   1714c:	ldr	r3, [pc, #24]	; 1716c <g_strcmp0@plt+0x410>
   17150:	cmp	r3, r0
   17154:	bxeq	lr
   17158:	ldr	r3, [pc, #16]	; 17170 <g_strcmp0@plt+0x414>
   1715c:	cmp	r3, #0
   17160:	bxeq	lr
   17164:	bx	r3
   17168:	andeq	sp, r3, r0, ror #13
   1716c:	andeq	sp, r3, r0, ror #13
   17170:	andeq	r0, r0, r0
   17174:	ldr	r0, [pc, #36]	; 171a0 <g_strcmp0@plt+0x444>
   17178:	ldr	r1, [pc, #36]	; 171a4 <g_strcmp0@plt+0x448>
   1717c:	sub	r1, r1, r0
   17180:	asr	r1, r1, #2
   17184:	add	r1, r1, r1, lsr #31
   17188:	asrs	r1, r1, #1
   1718c:	bxeq	lr
   17190:	ldr	r3, [pc, #16]	; 171a8 <g_strcmp0@plt+0x44c>
   17194:	cmp	r3, #0
   17198:	bxeq	lr
   1719c:	bx	r3
   171a0:	andeq	sp, r3, r0, ror #13
   171a4:	andeq	sp, r3, r0, ror #13
   171a8:	andeq	r0, r0, r0
   171ac:	push	{r4, lr}
   171b0:	ldr	r4, [pc, #24]	; 171d0 <g_strcmp0@plt+0x474>
   171b4:	ldrb	r3, [r4]
   171b8:	cmp	r3, #0
   171bc:	popne	{r4, pc}
   171c0:	bl	17148 <g_strcmp0@plt+0x3ec>
   171c4:	mov	r3, #1
   171c8:	strb	r3, [r4]
   171cc:	pop	{r4, pc}
   171d0:	andeq	sp, r3, r4, ror #13
   171d4:	b	17174 <g_strcmp0@plt+0x418>
   171d8:	ldr	r3, [pc, #544]	; 17400 <g_strcmp0@plt+0x6a4>
   171dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171e0:	mov	sl, r2
   171e4:	ldr	r7, [pc, #536]	; 17404 <g_strcmp0@plt+0x6a8>
   171e8:	ldm	r3, {r0, r1, r2}
   171ec:	sub	sp, sp, #124	; 0x7c
   171f0:	add	r5, sp, #104	; 0x68
   171f4:	mov	r4, #0
   171f8:	ldr	ip, [r7]
   171fc:	ldr	r3, [pc, #516]	; 17408 <g_strcmp0@plt+0x6ac>
   17200:	stm	r5, {r0, r1, r2}
   17204:	mov	r2, #5
   17208:	mov	r0, r4
   1720c:	ldr	r1, [pc, #504]	; 1740c <g_strcmp0@plt+0x6b0>
   17210:	str	ip, [sp, #116]	; 0x74
   17214:	str	r3, [sp, #96]	; 0x60
   17218:	str	r4, [sp, #100]	; 0x64
   1721c:	bl	1666c <dcgettext@plt>
   17220:	ldr	r1, [pc, #484]	; 1740c <g_strcmp0@plt+0x6b0>
   17224:	ldr	r9, [pc, #484]	; 17410 <g_strcmp0@plt+0x6b4>
   17228:	mov	r6, r0
   1722c:	bl	16b4c <strcmp@plt>
   17230:	mov	r2, #5
   17234:	ldr	r1, [pc, #472]	; 17414 <g_strcmp0@plt+0x6b8>
   17238:	cmp	r0, r4
   1723c:	mov	r0, r4
   17240:	moveq	r6, r4
   17244:	bl	1666c <dcgettext@plt>
   17248:	mov	r2, #5
   1724c:	ldr	r1, [pc, #452]	; 17418 <g_strcmp0@plt+0x6bc>
   17250:	mov	r8, r0
   17254:	mov	r0, r4
   17258:	bl	1666c <dcgettext@plt>
   1725c:	mov	r2, #5
   17260:	ldr	r1, [pc, #436]	; 1741c <g_strcmp0@plt+0x6c0>
   17264:	mov	fp, r0
   17268:	mov	r0, r4
   1726c:	bl	1666c <dcgettext@plt>
   17270:	mov	r2, #5
   17274:	ldr	r1, [pc, #420]	; 17420 <g_strcmp0@plt+0x6c4>
   17278:	str	r0, [sp, #92]	; 0x5c
   1727c:	mov	r0, r4
   17280:	bl	1666c <dcgettext@plt>
   17284:	ldr	r3, [pc, #408]	; 17424 <g_strcmp0@plt+0x6c8>
   17288:	ldr	ip, [pc, #408]	; 17428 <g_strcmp0@plt+0x6cc>
   1728c:	ldr	r2, [sp, #92]	; 0x5c
   17290:	mov	r1, r3
   17294:	str	r3, [sp, #4]
   17298:	str	ip, [sp, #12]
   1729c:	str	r2, [sp]
   172a0:	str	r4, [sp, #16]
   172a4:	mov	r2, fp
   172a8:	str	r0, [sp, #8]
   172ac:	mov	r0, r8
   172b0:	bl	16888 <g_strconcat@plt>
   172b4:	ldr	r1, [pc, #368]	; 1742c <g_strcmp0@plt+0x6d0>
   172b8:	mov	r8, r0
   172bc:	ldr	r0, [sl, #56]	; 0x38
   172c0:	bl	1615c <gtk_builder_get_object@plt>
   172c4:	mov	sl, r0
   172c8:	bl	15db4 <gtk_widget_get_type@plt>
   172cc:	mov	r1, r0
   172d0:	mov	r0, sl
   172d4:	bl	15e14 <g_type_check_instance_cast@plt>
   172d8:	mov	sl, r0
   172dc:	mov	r0, r9
   172e0:	bl	16510 <gtk_window_set_default_icon_name@plt>
   172e4:	bl	16d20 <gtk_window_get_type@plt>
   172e8:	mov	r1, r0
   172ec:	mov	r0, sl
   172f0:	bl	15e14 <g_type_check_instance_cast@plt>
   172f4:	mov	r2, #5
   172f8:	ldr	r1, [pc, #304]	; 17430 <g_strcmp0@plt+0x6d4>
   172fc:	mov	sl, r0
   17300:	mov	r0, r4
   17304:	bl	1666c <dcgettext@plt>
   17308:	mov	r2, #5
   1730c:	ldr	r1, [pc, #288]	; 17434 <g_strcmp0@plt+0x6d8>
   17310:	mov	fp, r0
   17314:	mov	r0, r4
   17318:	bl	1666c <dcgettext@plt>
   1731c:	mov	r2, #5
   17320:	ldr	r1, [pc, #272]	; 17438 <g_strcmp0@plt+0x6dc>
   17324:	str	r0, [sp, #92]	; 0x5c
   17328:	mov	r0, r4
   1732c:	bl	1666c <dcgettext@plt>
   17330:	ldr	r3, [sp, #92]	; 0x5c
   17334:	ldr	lr, [pc, #256]	; 1743c <g_strcmp0@plt+0x6e0>
   17338:	ldr	ip, [pc, #256]	; 17440 <g_strcmp0@plt+0x6e4>
   1733c:	ldr	r1, [pc, #256]	; 17444 <g_strcmp0@plt+0x6e8>
   17340:	mov	r2, fp
   17344:	str	r3, [sp, #32]
   17348:	str	lr, [sp, #36]	; 0x24
   1734c:	ldr	r3, [pc, #244]	; 17448 <g_strcmp0@plt+0x6ec>
   17350:	ldr	lr, [pc, #244]	; 1744c <g_strcmp0@plt+0x6f0>
   17354:	str	ip, [sp, #28]
   17358:	ldr	fp, [pc, #240]	; 17450 <g_strcmp0@plt+0x6f4>
   1735c:	ldr	ip, [pc, #240]	; 17454 <g_strcmp0@plt+0x6f8>
   17360:	str	r1, [sp, #20]
   17364:	ldr	r1, [pc, #236]	; 17458 <g_strcmp0@plt+0x6fc>
   17368:	str	r3, [sp, #12]
   1736c:	str	lr, [sp, #8]
   17370:	str	fp, [sp, #4]
   17374:	ldr	lr, [pc, #144]	; 1740c <g_strcmp0@plt+0x6b0>
   17378:	str	r5, [sp, #56]	; 0x38
   1737c:	str	r6, [sp, #72]	; 0x48
   17380:	mov	r3, #1
   17384:	str	ip, [sp, #76]	; 0x4c
   17388:	ldr	fp, [pc, #204]	; 1745c <g_strcmp0@plt+0x700>
   1738c:	ldr	ip, [pc, #204]	; 17460 <g_strcmp0@plt+0x704>
   17390:	ldr	r5, [pc, #204]	; 17464 <g_strcmp0@plt+0x708>
   17394:	ldr	r6, [pc, #204]	; 17468 <g_strcmp0@plt+0x70c>
   17398:	str	r1, [sp]
   1739c:	str	r4, [sp, #84]	; 0x54
   173a0:	str	r3, [sp, #24]
   173a4:	ldr	r1, [pc, #192]	; 1746c <g_strcmp0@plt+0x710>
   173a8:	ldr	r3, [pc, #192]	; 17470 <g_strcmp0@plt+0x714>
   173ac:	str	r0, [sp, #48]	; 0x30
   173b0:	str	r8, [sp, #16]
   173b4:	mov	r0, sl
   173b8:	add	r4, sp, #96	; 0x60
   173bc:	str	lr, [sp, #68]	; 0x44
   173c0:	str	ip, [sp, #52]	; 0x34
   173c4:	str	r9, [sp, #80]	; 0x50
   173c8:	str	fp, [sp, #60]	; 0x3c
   173cc:	str	r5, [sp, #44]	; 0x2c
   173d0:	str	r6, [sp, #40]	; 0x28
   173d4:	str	r4, [sp, #64]	; 0x40
   173d8:	bl	1696c <gtk_show_about_dialog@plt>
   173dc:	mov	r0, r8
   173e0:	bl	16660 <g_free@plt>
   173e4:	ldr	r2, [sp, #116]	; 0x74
   173e8:	ldr	r3, [r7]
   173ec:	cmp	r2, r3
   173f0:	bne	173fc <g_strcmp0@plt+0x6a0>
   173f4:	add	sp, sp, #124	; 0x7c
   173f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173fc:	bl	165a0 <__stack_chk_fail@plt>
   17400:	andeq	r6, r2, ip, asr r5
   17404:	andeq	ip, r3, r0, asr lr
   17408:	andeq	r6, r2, r8, ror #10
   1740c:	muleq	r2, r0, r5
   17410:	muleq	r2, r8, r8
   17414:	andeq	r6, r2, r4, lsr #11
   17418:	ldrdeq	r6, [r2], -ip
   1741c:	andeq	r6, r2, ip, asr #13
   17420:			; <UNDEFINED> instruction: 0x000267b4
   17424:	andeq	r6, r2, r4, lsl #17
   17428:	andeq	r7, r2, r8, lsl #28
   1742c:	andeq	r6, r2, r8, lsl #17
   17430:			; <UNDEFINED> instruction: 0x000268b0
   17434:			; <UNDEFINED> instruction: 0x000268bc
   17438:	ldrdeq	r6, [r2], -r0
   1743c:	andeq	r6, r2, r0, ror #18
   17440:	andeq	r6, r2, r8, ror #18
   17444:	andeq	r6, r2, r8, ror r9
   17448:	andeq	r6, r2, r8, lsl #19
   1744c:	muleq	r2, r0, r9
   17450:	andeq	r6, r2, r8, asr #19
   17454:	andeq	r6, r2, r8, lsl r9
   17458:	ldrdeq	r6, [r2], -r4
   1745c:	andeq	r6, r2, r8, lsr #18
   17460:	andeq	r6, r2, r0, lsr r9
   17464:	andeq	r6, r2, r8, lsr r9
   17468:	andeq	r6, r2, r4, asr #18
   1746c:	andeq	r6, r2, r8, lsl #18
   17470:	andeq	r6, r2, r0, lsl #18
   17474:	push	{r4, lr}
   17478:	mov	r4, r1
   1747c:	ldr	r0, [r1, #12]
   17480:	bl	15eec <g_cancellable_cancel@plt>
   17484:	mov	r2, #0
   17488:	mov	r3, #4
   1748c:	str	r2, [r4, #128]	; 0x80
   17490:	str	r3, [r4, #40]	; 0x28
   17494:	pop	{r4, pc}
   17498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1749c:	mov	r7, r0
   174a0:	sub	sp, sp, #12
   174a4:	ldr	r0, [r0, #100]	; 0x64
   174a8:	bl	163cc <pk_package_sack_get_array@plt>
   174ac:	ldr	r4, [r0, #4]
   174b0:	bl	16af8 <g_ptr_array_unref@plt>
   174b4:	cmp	r4, #0
   174b8:	beq	17770 <g_strcmp0@plt+0xa14>
   174bc:	bl	16834 <gtk_dialog_new@plt>
   174c0:	mov	r4, r0
   174c4:	bl	16d20 <gtk_window_get_type@plt>
   174c8:	mov	r5, r0
   174cc:	mov	r1, r0
   174d0:	mov	r0, r4
   174d4:	bl	15e14 <g_type_check_instance_cast@plt>
   174d8:	ldr	r1, [pc, #708]	; 177a4 <g_strcmp0@plt+0xa48>
   174dc:	bl	1633c <gtk_window_set_title@plt>
   174e0:	mov	r1, r5
   174e4:	mov	r0, r4
   174e8:	bl	15e14 <g_type_check_instance_cast@plt>
   174ec:	mov	r1, #1
   174f0:	bl	16b40 <gtk_window_set_modal@plt>
   174f4:	mov	r1, r5
   174f8:	mov	r0, r4
   174fc:	bl	15e14 <g_type_check_instance_cast@plt>
   17500:	mov	r1, #0
   17504:	bl	15eb0 <gtk_window_set_decorated@plt>
   17508:	mov	r1, r5
   1750c:	mov	r0, r4
   17510:	bl	15e14 <g_type_check_instance_cast@plt>
   17514:	mov	r1, #1
   17518:	bl	1600c <gtk_window_set_destroy_with_parent@plt>
   1751c:	mov	r1, r5
   17520:	mov	r0, r4
   17524:	bl	15e14 <g_type_check_instance_cast@plt>
   17528:	mov	r1, #1
   1752c:	bl	1603c <gtk_window_set_skip_taskbar_hint@plt>
   17530:	mov	r1, r5
   17534:	mov	r0, r4
   17538:	bl	15e14 <g_type_check_instance_cast@plt>
   1753c:	mov	r5, r0
   17540:	ldr	r0, [r7, #48]	; 0x30
   17544:	bl	16a08 <gtk_application_get_active_window@plt>
   17548:	mov	r1, r0
   1754c:	mov	r0, r5
   17550:	bl	16a2c <gtk_window_set_transient_for@plt>
   17554:	mov	r0, #0
   17558:	bl	15d30 <gtk_frame_new@plt>
   1755c:	mov	r8, r0
   17560:	bl	16720 <gtk_dialog_get_type@plt>
   17564:	mov	r1, r0
   17568:	mov	sl, r0
   1756c:	mov	r0, r4
   17570:	bl	15e14 <g_type_check_instance_cast@plt>
   17574:	bl	167c8 <gtk_dialog_get_content_area@plt>
   17578:	mov	r5, r0
   1757c:	bl	16150 <gtk_container_get_type@plt>
   17580:	mov	r6, r0
   17584:	mov	r1, r0
   17588:	mov	r0, r5
   1758c:	bl	15e14 <g_type_check_instance_cast@plt>
   17590:	mov	r1, r8
   17594:	bl	1636c <gtk_container_add@plt>
   17598:	mov	r1, #5
   1759c:	mov	r0, #1
   175a0:	bl	15f4c <gtk_box_new@plt>
   175a4:	mov	r1, r6
   175a8:	mov	r5, r0
   175ac:	bl	15e14 <g_type_check_instance_cast@plt>
   175b0:	mov	r1, #10
   175b4:	bl	16198 <gtk_container_set_border_width@plt>
   175b8:	mov	r1, r6
   175bc:	mov	r0, r8
   175c0:	bl	15e14 <g_type_check_instance_cast@plt>
   175c4:	mov	r1, r5
   175c8:	bl	1636c <gtk_container_add@plt>
   175cc:	mov	r2, #5
   175d0:	ldr	r1, [pc, #464]	; 177a8 <g_strcmp0@plt+0xa4c>
   175d4:	mov	r0, #0
   175d8:	bl	1666c <dcgettext@plt>
   175dc:	bl	162b8 <gtk_label_new@plt>
   175e0:	mov	r1, #3
   175e4:	mov	r6, #5
   175e8:	mov	r9, r0
   175ec:	bl	16c54 <gtk_widget_set_halign@plt>
   175f0:	bl	163fc <gtk_box_get_type@plt>
   175f4:	mov	r8, r0
   175f8:	mov	r1, r0
   175fc:	mov	r0, r5
   17600:	bl	15e14 <g_type_check_instance_cast@plt>
   17604:	mov	r3, #0
   17608:	mov	r2, r3
   1760c:	mov	r1, r9
   17610:	str	r6, [sp]
   17614:	bl	164bc <gtk_box_pack_start@plt>
   17618:	mov	r2, r6
   1761c:	ldr	r1, [pc, #392]	; 177ac <g_strcmp0@plt+0xa50>
   17620:	mov	r0, #0
   17624:	bl	1666c <dcgettext@plt>
   17628:	bl	162b8 <gtk_label_new@plt>
   1762c:	mov	r1, #3
   17630:	mov	r9, r0
   17634:	bl	16c54 <gtk_widget_set_halign@plt>
   17638:	mov	r1, r8
   1763c:	mov	r0, r5
   17640:	bl	15e14 <g_type_check_instance_cast@plt>
   17644:	mov	r3, #0
   17648:	mov	r2, r3
   1764c:	mov	r1, r9
   17650:	str	r6, [sp]
   17654:	bl	164bc <gtk_box_pack_start@plt>
   17658:	mov	r1, r6
   1765c:	mov	r0, #0
   17660:	bl	15f4c <gtk_box_new@plt>
   17664:	mov	r1, r8
   17668:	mov	r9, r0
   1766c:	bl	15e14 <g_type_check_instance_cast@plt>
   17670:	mov	r1, #1
   17674:	bl	16cf0 <gtk_box_set_homogeneous@plt>
   17678:	mov	r1, r8
   1767c:	mov	r0, r5
   17680:	bl	15e14 <g_type_check_instance_cast@plt>
   17684:	mov	r3, #0
   17688:	mov	r2, r3
   1768c:	str	r6, [sp]
   17690:	mov	r1, r9
   17694:	bl	164bc <gtk_box_pack_start@plt>
   17698:	mov	r2, r6
   1769c:	ldr	r1, [pc, #268]	; 177b0 <g_strcmp0@plt+0xa54>
   176a0:	mov	r0, #0
   176a4:	bl	1666c <dcgettext@plt>
   176a8:	bl	161ec <gtk_button_new_with_label@plt>
   176ac:	mov	r1, r8
   176b0:	mov	r5, #0
   176b4:	mov	fp, r0
   176b8:	mov	r0, r9
   176bc:	bl	15e14 <g_type_check_instance_cast@plt>
   176c0:	mov	r3, #1
   176c4:	mov	r1, fp
   176c8:	mov	r2, r3
   176cc:	str	r6, [sp]
   176d0:	bl	164bc <gtk_box_pack_start@plt>
   176d4:	mov	r3, r4
   176d8:	mov	r0, fp
   176dc:	ldr	r2, [pc, #208]	; 177b4 <g_strcmp0@plt+0xa58>
   176e0:	ldr	r1, [pc, #208]	; 177b8 <g_strcmp0@plt+0xa5c>
   176e4:	str	r5, [sp, #4]
   176e8:	str	r5, [sp]
   176ec:	bl	16414 <g_signal_connect_data@plt>
   176f0:	mov	r2, r6
   176f4:	ldr	r1, [pc, #192]	; 177bc <g_strcmp0@plt+0xa60>
   176f8:	mov	r0, r5
   176fc:	bl	1666c <dcgettext@plt>
   17700:	bl	161ec <gtk_button_new_with_label@plt>
   17704:	mov	r1, r8
   17708:	mov	fp, r0
   1770c:	mov	r0, r9
   17710:	bl	15e14 <g_type_check_instance_cast@plt>
   17714:	mov	r3, #1
   17718:	mov	r2, r3
   1771c:	str	r6, [sp]
   17720:	mov	r1, fp
   17724:	bl	164bc <gtk_box_pack_start@plt>
   17728:	mov	r3, r4
   1772c:	ldr	r2, [pc, #140]	; 177c0 <g_strcmp0@plt+0xa64>
   17730:	ldr	r1, [pc, #128]	; 177b8 <g_strcmp0@plt+0xa5c>
   17734:	str	r5, [sp, #4]
   17738:	str	r5, [sp]
   1773c:	mov	r0, fp
   17740:	bl	16414 <g_signal_connect_data@plt>
   17744:	mov	r0, r4
   17748:	bl	168d0 <gtk_widget_show_all@plt>
   1774c:	mov	r1, sl
   17750:	mov	r0, r4
   17754:	bl	15e14 <g_type_check_instance_cast@plt>
   17758:	bl	168f4 <gtk_dialog_run@plt>
   1775c:	mov	r6, r0
   17760:	mov	r0, r4
   17764:	bl	16498 <gtk_widget_destroy@plt>
   17768:	cmn	r6, #5
   1776c:	bne	17798 <g_strcmp0@plt+0xa3c>
   17770:	ldr	r0, [r7, #12]
   17774:	bl	15eec <g_cancellable_cancel@plt>
   17778:	bl	15d24 <g_application_get_type@plt>
   1777c:	mov	r1, r0
   17780:	ldr	r0, [r7, #48]	; 0x30
   17784:	bl	15e14 <g_type_check_instance_cast@plt>
   17788:	bl	160d8 <g_application_release@plt>
   1778c:	mov	r0, #1
   17790:	add	sp, sp, #12
   17794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17798:	mov	r0, r5
   1779c:	add	sp, sp, #12
   177a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177a4:	ldrdeq	r7, [r2], -r0
   177a8:	ldrdeq	r6, [r2], -ip
   177ac:	andeq	r6, r2, r4, lsl sl
   177b0:	andeq	r6, r2, ip, asr #20
   177b4:	andeq	r7, r1, r0, lsl #16
   177b8:	andeq	r6, r2, r4, asr sl
   177bc:	andeq	r6, r2, ip, asr sl
   177c0:	ldrdeq	r7, [r1], -ip
   177c4:	mov	r0, r2
   177c8:	b	17498 <g_strcmp0@plt+0x73c>
   177cc:	mov	r0, r1
   177d0:	b	17498 <g_strcmp0@plt+0x73c>
   177d4:	ldr	r0, [sp]
   177d8:	b	17498 <g_strcmp0@plt+0x73c>
   177dc:	push	{r4, lr}
   177e0:	mov	r4, r1
   177e4:	bl	16720 <gtk_dialog_get_type@plt>
   177e8:	mov	r1, r0
   177ec:	mov	r0, r4
   177f0:	bl	15e14 <g_type_check_instance_cast@plt>
   177f4:	mvn	r1, #4
   177f8:	pop	{r4, lr}
   177fc:	b	15c4c <gtk_dialog_response@plt>
   17800:	push	{r4, lr}
   17804:	mov	r4, r1
   17808:	bl	16720 <gtk_dialog_get_type@plt>
   1780c:	mov	r1, r0
   17810:	mov	r0, r4
   17814:	bl	15e14 <g_type_check_instance_cast@plt>
   17818:	mvn	r1, #5
   1781c:	pop	{r4, lr}
   17820:	b	15c4c <gtk_dialog_response@plt>
   17824:	push	{r4, lr}
   17828:	ldr	r0, [r2, #56]	; 0x38
   1782c:	ldr	r1, [pc, #132]	; 178b8 <g_strcmp0@plt+0xb5c>
   17830:	bl	1615c <gtk_builder_get_object@plt>
   17834:	mov	r4, r0
   17838:	bl	15db4 <gtk_widget_get_type@plt>
   1783c:	mov	r1, r0
   17840:	mov	r0, r4
   17844:	bl	15e14 <g_type_check_instance_cast@plt>
   17848:	bl	15e68 <gtk_widget_get_window@plt>
   1784c:	bl	15c1c <gdk_x11_window_get_xid@plt>
   17850:	ldr	r1, [pc, #100]	; 178bc <g_strcmp0@plt+0xb60>
   17854:	mov	r2, r0
   17858:	ldr	r0, [pc, #96]	; 178c0 <g_strcmp0@plt+0xb64>
   1785c:	bl	161e0 <g_strdup_printf@plt>
   17860:	ldr	r2, [pc, #92]	; 178c4 <g_strcmp0@plt+0xb68>
   17864:	mov	r1, #128	; 0x80
   17868:	mov	r3, r0
   1786c:	mov	r4, r0
   17870:	ldr	r0, [pc, #80]	; 178c8 <g_strcmp0@plt+0xb6c>
   17874:	bl	15ebc <g_log@plt>
   17878:	mov	r0, r4
   1787c:	mov	r1, #0
   17880:	bl	16ab0 <g_spawn_command_line_async@plt>
   17884:	cmp	r0, #0
   17888:	beq	17898 <g_strcmp0@plt+0xb3c>
   1788c:	mov	r0, r4
   17890:	pop	{r4, lr}
   17894:	b	16660 <g_free@plt>
   17898:	mov	r3, r4
   1789c:	ldr	r0, [pc, #36]	; 178c8 <g_strcmp0@plt+0xb6c>
   178a0:	ldr	r2, [pc, #36]	; 178cc <g_strcmp0@plt+0xb70>
   178a4:	mov	r1, #16
   178a8:	bl	15ebc <g_log@plt>
   178ac:	mov	r0, r4
   178b0:	pop	{r4, lr}
   178b4:	b	16660 <g_free@plt>
   178b8:	andeq	r6, r2, r8, lsl #17
   178bc:	andeq	r6, r2, ip, ror #20
   178c0:	andeq	r6, r2, r8, ror sl
   178c4:	muleq	r2, ip, sl
   178c8:	andeq	r6, r2, r8, lsr #21
   178cc:			; <UNDEFINED> instruction: 0x00026ab8
   178d0:	push	{r4, lr}
   178d4:	ldr	r0, [r2, #56]	; 0x38
   178d8:	ldr	r1, [pc, #132]	; 17964 <g_strcmp0@plt+0xc08>
   178dc:	bl	1615c <gtk_builder_get_object@plt>
   178e0:	mov	r4, r0
   178e4:	bl	15db4 <gtk_widget_get_type@plt>
   178e8:	mov	r1, r0
   178ec:	mov	r0, r4
   178f0:	bl	15e14 <g_type_check_instance_cast@plt>
   178f4:	bl	15e68 <gtk_widget_get_window@plt>
   178f8:	bl	15c1c <gdk_x11_window_get_xid@plt>
   178fc:	ldr	r1, [pc, #100]	; 17968 <g_strcmp0@plt+0xc0c>
   17900:	mov	r2, r0
   17904:	ldr	r0, [pc, #96]	; 1796c <g_strcmp0@plt+0xc10>
   17908:	bl	161e0 <g_strdup_printf@plt>
   1790c:	ldr	r2, [pc, #92]	; 17970 <g_strcmp0@plt+0xc14>
   17910:	mov	r1, #128	; 0x80
   17914:	mov	r3, r0
   17918:	mov	r4, r0
   1791c:	ldr	r0, [pc, #80]	; 17974 <g_strcmp0@plt+0xc18>
   17920:	bl	15ebc <g_log@plt>
   17924:	mov	r0, r4
   17928:	mov	r1, #0
   1792c:	bl	16ab0 <g_spawn_command_line_async@plt>
   17930:	cmp	r0, #0
   17934:	beq	17944 <g_strcmp0@plt+0xbe8>
   17938:	mov	r0, r4
   1793c:	pop	{r4, lr}
   17940:	b	16660 <g_free@plt>
   17944:	mov	r3, r4
   17948:	ldr	r0, [pc, #36]	; 17974 <g_strcmp0@plt+0xc18>
   1794c:	ldr	r2, [pc, #36]	; 17978 <g_strcmp0@plt+0xc1c>
   17950:	mov	r1, #16
   17954:	bl	15ebc <g_log@plt>
   17958:	mov	r0, r4
   1795c:	pop	{r4, lr}
   17960:	b	16660 <g_free@plt>
   17964:	andeq	r6, r2, r8, lsl #17
   17968:	andeq	r6, r2, ip, ror #20
   1796c:	andeq	r6, r2, ip, asr #21
   17970:	muleq	r2, ip, sl
   17974:	andeq	r6, r2, r8, lsr #21
   17978:			; <UNDEFINED> instruction: 0x00026ab8
   1797c:	push	{r4, r5, lr}
   17980:	mov	r3, #0
   17984:	ldr	r5, [pc, #152]	; 17a24 <g_strcmp0@plt+0xcc8>
   17988:	sub	sp, sp, #20
   1798c:	mov	r2, r3
   17990:	ldr	ip, [r5]
   17994:	ldr	r1, [pc, #140]	; 17a28 <g_strcmp0@plt+0xccc>
   17998:	ldr	r0, [pc, #140]	; 17a2c <g_strcmp0@plt+0xcd0>
   1799c:	str	ip, [sp, #12]
   179a0:	str	r3, [sp, #8]
   179a4:	bl	15f58 <g_build_filename@plt>
   179a8:	ldr	r2, [pc, #128]	; 17a30 <g_strcmp0@plt+0xcd4>
   179ac:	mov	r1, #128	; 0x80
   179b0:	mov	r3, r0
   179b4:	mov	r4, r0
   179b8:	ldr	r0, [pc, #116]	; 17a34 <g_strcmp0@plt+0xcd8>
   179bc:	bl	15ebc <g_log@plt>
   179c0:	mov	r0, r4
   179c4:	add	r1, sp, #8
   179c8:	bl	16ab0 <g_spawn_command_line_async@plt>
   179cc:	cmp	r0, #0
   179d0:	beq	179f4 <g_strcmp0@plt+0xc98>
   179d4:	mov	r0, r4
   179d8:	bl	16660 <g_free@plt>
   179dc:	ldr	r2, [sp, #12]
   179e0:	ldr	r3, [r5]
   179e4:	cmp	r2, r3
   179e8:	bne	17a20 <g_strcmp0@plt+0xcc4>
   179ec:	add	sp, sp, #20
   179f0:	pop	{r4, r5, pc}
   179f4:	ldr	r1, [sp, #8]
   179f8:	mov	r3, r4
   179fc:	ldr	r2, [pc, #52]	; 17a38 <g_strcmp0@plt+0xcdc>
   17a00:	ldr	r0, [r1, #8]
   17a04:	mov	r1, #16
   17a08:	str	r0, [sp]
   17a0c:	ldr	r0, [pc, #32]	; 17a34 <g_strcmp0@plt+0xcd8>
   17a10:	bl	15ebc <g_log@plt>
   17a14:	ldr	r0, [sp, #8]
   17a18:	bl	15d3c <g_error_free@plt>
   17a1c:	b	179d4 <g_strcmp0@plt+0xc78>
   17a20:	bl	165a0 <__stack_chk_fail@plt>
   17a24:	andeq	ip, r3, r0, asr lr
   17a28:	strdeq	r6, [r2], -r0
   17a2c:	andeq	r6, r2, ip, ror #20
   17a30:	muleq	r2, ip, sl
   17a34:	andeq	r6, r2, r8, lsr #21
   17a38:	andeq	r6, r2, r8, lsl #22
   17a3c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17a40:	sub	sp, sp, #20
   17a44:	ldr	r6, [pc, #332]	; 17b98 <g_strcmp0@plt+0xe3c>
   17a48:	mov	r4, r2
   17a4c:	mov	r2, #0
   17a50:	ldr	r3, [r6]
   17a54:	str	r2, [sp, #8]
   17a58:	add	r2, sp, #8
   17a5c:	str	r3, [sp, #12]
   17a60:	bl	161a4 <pk_client_generic_finish@plt>
   17a64:	ldr	r3, [r4, #124]	; 0x7c
   17a68:	sub	r3, r3, #1
   17a6c:	cmp	r3, #0
   17a70:	str	r3, [r4, #124]	; 0x7c
   17a74:	mov	r5, r0
   17a78:	ldr	r0, [r4, #108]	; 0x6c
   17a7c:	bgt	17a84 <g_strcmp0@plt+0xd28>
   17a80:	bl	16498 <gtk_widget_destroy@plt>
   17a84:	cmp	r5, #0
   17a88:	beq	17b70 <g_strcmp0@plt+0xe14>
   17a8c:	mov	r0, r5
   17a90:	bl	15f1c <pk_results_get_error_code@plt>
   17a94:	subs	r7, r0, #0
   17a98:	bne	17abc <g_strcmp0@plt+0xd60>
   17a9c:	mov	r0, r5
   17aa0:	bl	16990 <g_object_unref@plt>
   17aa4:	ldr	r2, [sp, #12]
   17aa8:	ldr	r3, [r6]
   17aac:	cmp	r2, r3
   17ab0:	bne	17b94 <g_strcmp0@plt+0xe38>
   17ab4:	add	sp, sp, #20
   17ab8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17abc:	bl	16018 <pk_error_get_code@plt>
   17ac0:	bl	16228 <pk_error_enum_to_string@plt>
   17ac4:	mov	r8, r0
   17ac8:	mov	r0, r7
   17acc:	bl	15fdc <pk_error_get_details@plt>
   17ad0:	mov	r3, r8
   17ad4:	ldr	r2, [pc, #192]	; 17b9c <g_strcmp0@plt+0xe40>
   17ad8:	mov	r1, #16
   17adc:	str	r0, [sp]
   17ae0:	ldr	r0, [pc, #184]	; 17ba0 <g_strcmp0@plt+0xe44>
   17ae4:	bl	15ebc <g_log@plt>
   17ae8:	mov	r0, r7
   17aec:	bl	16018 <pk_error_get_code@plt>
   17af0:	cmp	r0, #17
   17af4:	bne	17b04 <g_strcmp0@plt+0xda8>
   17af8:	mov	r0, r7
   17afc:	bl	16990 <g_object_unref@plt>
   17b00:	b	17a9c <g_strcmp0@plt+0xd40>
   17b04:	ldr	r1, [pc, #152]	; 17ba4 <g_strcmp0@plt+0xe48>
   17b08:	ldr	r0, [r4, #56]	; 0x38
   17b0c:	bl	1615c <gtk_builder_get_object@plt>
   17b10:	mov	r4, r0
   17b14:	bl	16d20 <gtk_window_get_type@plt>
   17b18:	mov	r1, r0
   17b1c:	mov	r0, r4
   17b20:	bl	15e14 <g_type_check_instance_cast@plt>
   17b24:	mov	r4, r0
   17b28:	mov	r0, r7
   17b2c:	bl	16018 <pk_error_get_code@plt>
   17b30:	bl	1ef7c <g_strcmp0@plt+0x8220>
   17b34:	mov	r8, r0
   17b38:	mov	r0, r7
   17b3c:	bl	16018 <pk_error_get_code@plt>
   17b40:	bl	1f60c <g_strcmp0@plt+0x88b0>
   17b44:	mov	r9, r0
   17b48:	mov	r0, r7
   17b4c:	bl	15fdc <pk_error_get_details@plt>
   17b50:	mov	r2, r9
   17b54:	mov	r1, r8
   17b58:	mov	r3, r0
   17b5c:	mov	r0, r4
   17b60:	bl	25660 <g_strcmp0@plt+0xe904>
   17b64:	mov	r0, r7
   17b68:	bl	16990 <g_object_unref@plt>
   17b6c:	b	17a9c <g_strcmp0@plt+0xd40>
   17b70:	ldr	r3, [sp, #8]
   17b74:	ldr	r2, [pc, #44]	; 17ba8 <g_strcmp0@plt+0xe4c>
   17b78:	mov	r1, #16
   17b7c:	ldr	r3, [r3, #8]
   17b80:	ldr	r0, [pc, #24]	; 17ba0 <g_strcmp0@plt+0xe44>
   17b84:	bl	15ebc <g_log@plt>
   17b88:	ldr	r0, [sp, #8]
   17b8c:	bl	15d3c <g_error_free@plt>
   17b90:	b	17aa4 <g_strcmp0@plt+0xd48>
   17b94:	bl	165a0 <__stack_chk_fail@plt>
   17b98:	andeq	ip, r3, r0, asr lr
   17b9c:	andeq	r6, r2, r8, lsr fp
   17ba0:	andeq	r6, r2, r8, lsr #21
   17ba4:	andeq	r6, r2, r8, lsl #17
   17ba8:	andeq	r6, r2, r0, lsr #22
   17bac:	push	{r4, lr}
   17bb0:	sub	sp, sp, #8
   17bb4:	ldr	r4, [pc, #72]	; 17c04 <g_strcmp0@plt+0xea8>
   17bb8:	ldr	r0, [r2, #96]	; 0x60
   17bbc:	mov	r3, #0
   17bc0:	ldr	ip, [r4]
   17bc4:	mov	r2, sp
   17bc8:	ldr	r1, [pc, #56]	; 17c08 <g_strcmp0@plt+0xeac>
   17bcc:	str	ip, [sp, #4]
   17bd0:	bl	166fc <g_object_get@plt>
   17bd4:	ldr	r3, [sp]
   17bd8:	ldr	r2, [pc, #44]	; 17c0c <g_strcmp0@plt+0xeb0>
   17bdc:	mov	r1, #128	; 0x80
   17be0:	ldr	r0, [pc, #40]	; 17c10 <g_strcmp0@plt+0xeb4>
   17be4:	bl	15ebc <g_log@plt>
   17be8:	ldr	r2, [sp, #4]
   17bec:	ldr	r3, [r4]
   17bf0:	cmp	r2, r3
   17bf4:	bne	17c00 <g_strcmp0@plt+0xea4>
   17bf8:	add	sp, sp, #8
   17bfc:	pop	{r4, pc}
   17c00:	bl	165a0 <__stack_chk_fail@plt>
   17c04:	andeq	ip, r3, r0, asr lr
   17c08:			; <UNDEFINED> instruction: 0x000277bc
   17c0c:	andeq	r6, r2, r4, asr fp
   17c10:	andeq	r6, r2, r8, lsr #21
   17c14:	push	{r4, r5, r6, r7, lr}
   17c18:	sub	sp, sp, #36	; 0x24
   17c1c:	ldr	r5, [pc, #308]	; 17d58 <g_strcmp0@plt+0xffc>
   17c20:	ldr	r3, [pc, #308]	; 17d5c <g_strcmp0@plt+0x1000>
   17c24:	add	lr, sp, #24
   17c28:	ldr	ip, [r5]
   17c2c:	str	r3, [sp, #4]
   17c30:	mov	r6, #0
   17c34:	add	r3, sp, #20
   17c38:	mov	r4, r1
   17c3c:	str	r3, [sp]
   17c40:	mov	r7, r2
   17c44:	str	r6, [sp, #12]
   17c48:	str	lr, [sp, #8]
   17c4c:	ldr	r3, [pc, #268]	; 17d60 <g_strcmp0@plt+0x1004>
   17c50:	add	r2, sp, #16
   17c54:	ldr	r1, [pc, #264]	; 17d64 <g_strcmp0@plt+0x1008>
   17c58:	str	ip, [sp, #28]
   17c5c:	bl	166fc <g_object_get@plt>
   17c60:	cmp	r4, #4
   17c64:	beq	17cc8 <g_strcmp0@plt+0xf6c>
   17c68:	cmp	r4, #2
   17c6c:	beq	17c90 <g_strcmp0@plt+0xf34>
   17c70:	cmp	r4, #3
   17c74:	beq	17d40 <g_strcmp0@plt+0xfe4>
   17c78:	ldr	r2, [sp, #28]
   17c7c:	ldr	r3, [r5]
   17c80:	cmp	r2, r3
   17c84:	bne	17d50 <g_strcmp0@plt+0xff4>
   17c88:	add	sp, sp, #36	; 0x24
   17c8c:	pop	{r4, r5, r6, r7, pc}
   17c90:	ldr	r3, [sp, #20]
   17c94:	cmp	r3, #0
   17c98:	ble	17c78 <g_strcmp0@plt+0xf1c>
   17c9c:	bl	164ec <gtk_progress_bar_get_type@plt>
   17ca0:	mov	r1, r0
   17ca4:	ldr	r0, [r7, #112]	; 0x70
   17ca8:	bl	15e14 <g_type_check_instance_cast@plt>
   17cac:	vldr	s15, [sp, #20]
   17cb0:	vldr	s14, [pc, #156]	; 17d54 <g_strcmp0@plt+0xff8>
   17cb4:	vcvt.f32.s32	s15, s15
   17cb8:	vdiv.f32	s0, s15, s14
   17cbc:	vcvt.f64.f32	d0, s0
   17cc0:	bl	161b0 <gtk_progress_bar_set_fraction@plt>
   17cc4:	b	17c78 <g_strcmp0@plt+0xf1c>
   17cc8:	ldr	r0, [sp, #16]
   17ccc:	bl	15f04 <pk_status_enum_to_string@plt>
   17cd0:	ldr	r2, [pc, #144]	; 17d68 <g_strcmp0@plt+0x100c>
   17cd4:	mov	r1, #128	; 0x80
   17cd8:	mov	r3, r0
   17cdc:	ldr	r0, [pc, #136]	; 17d6c <g_strcmp0@plt+0x1010>
   17ce0:	bl	15ebc <g_log@plt>
   17ce4:	ldr	r0, [sp, #16]
   17ce8:	bl	1fe8c <g_strcmp0@plt+0x9130>
   17cec:	mov	r4, r0
   17cf0:	bl	15d6c <gtk_label_get_type@plt>
   17cf4:	mov	r1, r0
   17cf8:	ldr	r0, [r7, #116]	; 0x74
   17cfc:	bl	15e14 <g_type_check_instance_cast@plt>
   17d00:	mov	r1, r4
   17d04:	bl	15d78 <gtk_label_set_label@plt>
   17d08:	ldr	r3, [sp, #16]
   17d0c:	cmp	r3, #18
   17d10:	bne	17c78 <g_strcmp0@plt+0xf1c>
   17d14:	ldr	r1, [pc, #84]	; 17d70 <g_strcmp0@plt+0x1014>
   17d18:	ldr	r0, [r7, #56]	; 0x38
   17d1c:	bl	1615c <gtk_builder_get_object@plt>
   17d20:	mov	r4, r0
   17d24:	bl	15db4 <gtk_widget_get_type@plt>
   17d28:	mov	r1, r0
   17d2c:	mov	r0, r4
   17d30:	bl	15e14 <g_type_check_instance_cast@plt>
   17d34:	mov	r1, #1
   17d38:	bl	16d2c <gtk_widget_set_sensitive@plt>
   17d3c:	b	17c78 <g_strcmp0@plt+0xf1c>
   17d40:	ldr	r0, [r7, #120]	; 0x78
   17d44:	ldr	r1, [sp, #24]
   17d48:	bl	16d2c <gtk_widget_set_sensitive@plt>
   17d4c:	b	17c78 <g_strcmp0@plt+0xf1c>
   17d50:	bl	165a0 <__stack_chk_fail@plt>
   17d54:	sbcmi	r0, r8, #0
   17d58:	andeq	ip, r3, r0, asr lr
   17d5c:	andeq	r6, r2, r4, ror fp
   17d60:	andeq	r6, r2, r0, ror #22
   17d64:	andeq	r6, r2, ip, ror #22
   17d68:	andeq	r6, r2, r4, lsl #23
   17d6c:	andeq	r6, r2, r8, lsr #21
   17d70:	andeq	r6, r2, ip, lsl #23
   17d74:	push	{r4, lr}
   17d78:	ldr	r0, [r1, #56]	; 0x38
   17d7c:	ldr	r1, [pc, #28]	; 17da0 <g_strcmp0@plt+0x1044>
   17d80:	bl	1615c <gtk_builder_get_object@plt>
   17d84:	mov	r4, r0
   17d88:	bl	16d20 <gtk_window_get_type@plt>
   17d8c:	mov	r1, r0
   17d90:	mov	r0, r4
   17d94:	bl	15e14 <g_type_check_instance_cast@plt>
   17d98:	pop	{r4, lr}
   17d9c:	b	1690c <gtk_window_present@plt>
   17da0:	andeq	r6, r2, r8, lsl #17
   17da4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17da8:	mov	r6, r2
   17dac:	ldr	r2, [pc, #612]	; 18018 <g_strcmp0@plt+0x12bc>
   17db0:	sub	sp, sp, #44	; 0x2c
   17db4:	mov	r3, #0
   17db8:	ldr	r2, [r2]
   17dbc:	str	r3, [sp, #24]
   17dc0:	str	r2, [sp, #36]	; 0x24
   17dc4:	add	r2, sp, #24
   17dc8:	str	r3, [sp, #28]
   17dcc:	str	r3, [sp, #32]
   17dd0:	bl	161a4 <pk_client_generic_finish@plt>
   17dd4:	subs	r3, r0, #0
   17dd8:	str	r3, [sp, #20]
   17ddc:	beq	17fcc <g_strcmp0@plt+0x1270>
   17de0:	bl	15f1c <pk_results_get_error_code@plt>
   17de4:	subs	r4, r0, #0
   17de8:	beq	17ecc <g_strcmp0@plt+0x1170>
   17dec:	bl	16018 <pk_error_get_code@plt>
   17df0:	bl	16228 <pk_error_enum_to_string@plt>
   17df4:	mov	r5, r0
   17df8:	mov	r0, r4
   17dfc:	bl	15fdc <pk_error_get_details@plt>
   17e00:	mov	r3, r5
   17e04:	ldr	r2, [pc, #528]	; 1801c <g_strcmp0@plt+0x12c0>
   17e08:	mov	r1, #16
   17e0c:	str	r0, [sp]
   17e10:	ldr	r0, [pc, #520]	; 18020 <g_strcmp0@plt+0x12c4>
   17e14:	bl	15ebc <g_log@plt>
   17e18:	mov	r0, r4
   17e1c:	bl	16018 <pk_error_get_code@plt>
   17e20:	cmp	r0, #17
   17e24:	beq	17e88 <g_strcmp0@plt+0x112c>
   17e28:	ldr	r1, [pc, #500]	; 18024 <g_strcmp0@plt+0x12c8>
   17e2c:	ldr	r0, [r6, #56]	; 0x38
   17e30:	bl	1615c <gtk_builder_get_object@plt>
   17e34:	mov	r5, r0
   17e38:	bl	16d20 <gtk_window_get_type@plt>
   17e3c:	mov	r1, r0
   17e40:	mov	r0, r5
   17e44:	bl	15e14 <g_type_check_instance_cast@plt>
   17e48:	mov	r5, r0
   17e4c:	mov	r0, r4
   17e50:	bl	16018 <pk_error_get_code@plt>
   17e54:	bl	1ef7c <g_strcmp0@plt+0x8220>
   17e58:	mov	r7, r0
   17e5c:	mov	r0, r4
   17e60:	bl	16018 <pk_error_get_code@plt>
   17e64:	bl	1f60c <g_strcmp0@plt+0x88b0>
   17e68:	mov	r8, r0
   17e6c:	mov	r0, r4
   17e70:	bl	15fdc <pk_error_get_details@plt>
   17e74:	mov	r2, r8
   17e78:	mov	r1, r7
   17e7c:	mov	r3, r0
   17e80:	mov	r0, r5
   17e84:	bl	25660 <g_strcmp0@plt+0xe904>
   17e88:	ldr	r3, [r6, #124]	; 0x7c
   17e8c:	ldr	r0, [r6, #108]	; 0x6c
   17e90:	sub	r3, r3, #1
   17e94:	cmp	r3, #0
   17e98:	str	r3, [r6, #124]	; 0x7c
   17e9c:	ble	17fbc <g_strcmp0@plt+0x1260>
   17ea0:	mov	r0, r4
   17ea4:	bl	16990 <g_object_unref@plt>
   17ea8:	ldr	r0, [sp, #20]
   17eac:	bl	16990 <g_object_unref@plt>
   17eb0:	ldr	r3, [pc, #352]	; 18018 <g_strcmp0@plt+0x12bc>
   17eb4:	ldr	r2, [sp, #36]	; 0x24
   17eb8:	ldr	r3, [r3]
   17ebc:	cmp	r2, r3
   17ec0:	bne	18014 <g_strcmp0@plt+0x12b8>
   17ec4:	add	sp, sp, #44	; 0x2c
   17ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ecc:	ldr	r0, [sp, #20]
   17ed0:	bl	16078 <pk_results_get_repo_detail_array@plt>
   17ed4:	ldr	r3, [r0, #4]
   17ed8:	mov	r5, r0
   17edc:	cmp	r3, #0
   17ee0:	beq	17f98 <g_strcmp0@plt+0x123c>
   17ee4:	ldr	fp, [pc, #316]	; 18028 <g_strcmp0@plt+0x12cc>
   17ee8:	ldr	sl, [pc, #316]	; 1802c <g_strcmp0@plt+0x12d0>
   17eec:	ldr	r9, [pc, #316]	; 18030 <g_strcmp0@plt+0x12d4>
   17ef0:	ldr	r8, [pc, #296]	; 18020 <g_strcmp0@plt+0x12c4>
   17ef4:	mov	r7, r4
   17ef8:	str	r6, [sp, #16]
   17efc:	ldr	r1, [r5]
   17f00:	add	ip, sp, #32
   17f04:	mov	r3, fp
   17f08:	ldr	r0, [r1, r4, lsl #2]
   17f0c:	add	r2, sp, #28
   17f10:	mov	r1, sl
   17f14:	str	ip, [sp]
   17f18:	str	r7, [sp, #4]
   17f1c:	bl	166fc <g_object_get@plt>
   17f20:	ldr	r2, [sp, #32]
   17f24:	ldr	r3, [sp, #28]
   17f28:	str	r2, [sp]
   17f2c:	mov	r1, #128	; 0x80
   17f30:	mov	r2, r9
   17f34:	mov	r0, r8
   17f38:	bl	15ebc <g_log@plt>
   17f3c:	ldr	r3, [sp, #32]
   17f40:	cmp	r3, #0
   17f44:	beq	17f74 <g_strcmp0@plt+0x1218>
   17f48:	ldr	r3, [sp, #16]
   17f4c:	ldr	r0, [sp, #28]
   17f50:	ldr	r6, [r3, #28]
   17f54:	bl	160f0 <g_strdup@plt>
   17f58:	str	r0, [sp, #12]
   17f5c:	ldr	r0, [sp, #32]
   17f60:	bl	160f0 <g_strdup@plt>
   17f64:	ldr	r1, [sp, #12]
   17f68:	mov	r2, r0
   17f6c:	mov	r0, r6
   17f70:	bl	16114 <g_hash_table_insert@plt>
   17f74:	ldr	r0, [sp, #28]
   17f78:	bl	16660 <g_free@plt>
   17f7c:	ldr	r0, [sp, #32]
   17f80:	bl	16660 <g_free@plt>
   17f84:	ldr	r3, [r5, #4]
   17f88:	add	r4, r4, #1
   17f8c:	cmp	r3, r4
   17f90:	bhi	17efc <g_strcmp0@plt+0x11a0>
   17f94:	ldr	r6, [sp, #16]
   17f98:	ldr	r3, [r6, #124]	; 0x7c
   17f9c:	ldr	r0, [r6, #108]	; 0x6c
   17fa0:	sub	r3, r3, #1
   17fa4:	cmp	r3, #0
   17fa8:	str	r3, [r6, #124]	; 0x7c
   17fac:	ble	1800c <g_strcmp0@plt+0x12b0>
   17fb0:	mov	r0, r5
   17fb4:	bl	16af8 <g_ptr_array_unref@plt>
   17fb8:	b	17ea8 <g_strcmp0@plt+0x114c>
   17fbc:	bl	16498 <gtk_widget_destroy@plt>
   17fc0:	mov	r0, r4
   17fc4:	bl	16990 <g_object_unref@plt>
   17fc8:	b	17ea8 <g_strcmp0@plt+0x114c>
   17fcc:	ldr	r3, [sp, #24]
   17fd0:	ldr	r2, [pc, #92]	; 18034 <g_strcmp0@plt+0x12d8>
   17fd4:	mov	r1, #16
   17fd8:	ldr	r3, [r3, #8]
   17fdc:	ldr	r0, [pc, #60]	; 18020 <g_strcmp0@plt+0x12c4>
   17fe0:	bl	15ebc <g_log@plt>
   17fe4:	ldr	r0, [sp, #24]
   17fe8:	bl	15d3c <g_error_free@plt>
   17fec:	ldr	r3, [r6, #124]	; 0x7c
   17ff0:	ldr	r0, [r6, #108]	; 0x6c
   17ff4:	sub	r3, r3, #1
   17ff8:	cmp	r3, #0
   17ffc:	str	r3, [r6, #124]	; 0x7c
   18000:	bgt	17eb0 <g_strcmp0@plt+0x1154>
   18004:	bl	16498 <gtk_widget_destroy@plt>
   18008:	b	17eb0 <g_strcmp0@plt+0x1154>
   1800c:	bl	16498 <gtk_widget_destroy@plt>
   18010:	b	17fb0 <g_strcmp0@plt+0x1254>
   18014:	bl	165a0 <__stack_chk_fail@plt>
   18018:	andeq	ip, r3, r0, asr lr
   1801c:	andeq	r6, r2, r0, asr #23
   18020:	andeq	r6, r2, r8, lsr #21
   18024:	andeq	r6, r2, r8, lsl #17
   18028:	ldrdeq	r6, [r2], -ip
   1802c:	andeq	r6, r2, r8, ror #23
   18030:	strdeq	r6, [r2], -r0
   18034:	andeq	r6, r2, r0, lsr #23
   18038:	push	{r4, r5, lr}
   1803c:	sub	sp, sp, #20
   18040:	ldr	r4, [pc, #92]	; 180a4 <g_strcmp0@plt+0x1348>
   18044:	mvn	r3, #0
   18048:	mov	ip, #0
   1804c:	ldr	r2, [r4]
   18050:	str	r3, [sp]
   18054:	str	r2, [sp, #12]
   18058:	add	r3, sp, #8
   1805c:	mov	r2, #3
   18060:	str	ip, [sp, #8]
   18064:	bl	16c6c <gtk_tree_model_get@plt>
   18068:	ldr	r1, [pc, #56]	; 180a8 <g_strcmp0@plt+0x134c>
   1806c:	ldr	r0, [sp, #8]
   18070:	bl	16d5c <g_strcmp0@plt>
   18074:	mov	r5, r0
   18078:	ldr	r0, [sp, #8]
   1807c:	bl	16660 <g_free@plt>
   18080:	ldr	r2, [sp, #12]
   18084:	ldr	r3, [r4]
   18088:	cmp	r2, r3
   1808c:	bne	180a0 <g_strcmp0@plt+0x1344>
   18090:	clz	r0, r5
   18094:	lsr	r0, r0, #5
   18098:	add	sp, sp, #20
   1809c:	pop	{r4, r5, pc}
   180a0:	bl	165a0 <__stack_chk_fail@plt>
   180a4:	andeq	ip, r3, r0, asr lr
   180a8:	andeq	r6, r2, r0, lsl #24
   180ac:	push	{r4, r5, r6, r8, r9, lr}
   180b0:	sub	sp, sp, #80	; 0x50
   180b4:	ldr	r5, [pc, #296]	; 181e4 <g_strcmp0@plt+0x1488>
   180b8:	mov	r4, r0
   180bc:	mov	r2, #5
   180c0:	ldr	r3, [r5]
   180c4:	ldr	r1, [pc, #284]	; 181e8 <g_strcmp0@plt+0x148c>
   180c8:	mov	r0, #0
   180cc:	str	r3, [sp, #76]	; 0x4c
   180d0:	bl	1666c <dcgettext@plt>
   180d4:	ldr	r3, [r4, #40]	; 0x28
   180d8:	sub	r2, r3, #1
   180dc:	cmp	r2, #1
   180e0:	mov	r6, r0
   180e4:	bls	181b0 <g_strcmp0@plt+0x1454>
   180e8:	cmp	r3, #3
   180ec:	beq	181c8 <g_strcmp0@plt+0x146c>
   180f0:	ldr	r0, [r4, #44]	; 0x2c
   180f4:	mov	r2, #5
   180f8:	bics	r0, r0, #2
   180fc:	movne	r0, #0
   18100:	ldreq	r1, [pc, #228]	; 181ec <g_strcmp0@plt+0x1490>
   18104:	ldrne	r1, [pc, #228]	; 181f0 <g_strcmp0@plt+0x1494>
   18108:	bl	1666c <dcgettext@plt>
   1810c:	mov	r2, r0
   18110:	mov	r1, r6
   18114:	ldr	r0, [pc, #216]	; 181f4 <g_strcmp0@plt+0x1498>
   18118:	bl	161e0 <g_strdup_printf@plt>
   1811c:	add	r1, sp, #60	; 0x3c
   18120:	mov	r8, #0
   18124:	mov	r9, #0
   18128:	mov	r6, r0
   1812c:	ldr	r0, [r4, #60]	; 0x3c
   18130:	bl	1675c <gtk_list_store_append@plt>
   18134:	ldr	r3, [pc, #188]	; 181f8 <g_strcmp0@plt+0x149c>
   18138:	str	r6, [sp, #28]
   1813c:	mvn	r2, #0
   18140:	ldr	r0, [r4, #60]	; 0x3c
   18144:	str	r3, [sp, #36]	; 0x24
   18148:	mov	r3, #0
   1814c:	mov	lr, #5
   18150:	mov	ip, #4
   18154:	str	r2, [sp, #48]	; 0x30
   18158:	str	r3, [sp, #44]	; 0x2c
   1815c:	str	r3, [sp, #32]
   18160:	str	r3, [sp, #20]
   18164:	str	r3, [sp, #12]
   18168:	mov	r2, #3
   1816c:	mov	r3, #2
   18170:	str	r3, [sp, #8]
   18174:	add	r1, sp, #60	; 0x3c
   18178:	str	lr, [sp, #40]	; 0x28
   1817c:	str	ip, [sp, #24]
   18180:	str	r2, [sp, #16]
   18184:	strd	r8, [sp]
   18188:	mov	r2, #1
   1818c:	bl	15c94 <gtk_list_store_set@plt>
   18190:	mov	r0, r6
   18194:	bl	16660 <g_free@plt>
   18198:	ldr	r2, [sp, #76]	; 0x4c
   1819c:	ldr	r3, [r5]
   181a0:	cmp	r2, r3
   181a4:	bne	181e0 <g_strcmp0@plt+0x1484>
   181a8:	add	sp, sp, #80	; 0x50
   181ac:	pop	{r4, r5, r6, r8, r9, pc}
   181b0:	mov	r2, #5
   181b4:	ldr	r1, [pc, #64]	; 181fc <g_strcmp0@plt+0x14a0>
   181b8:	mov	r0, #0
   181bc:	bl	1666c <dcgettext@plt>
   181c0:	mov	r2, r0
   181c4:	b	18110 <g_strcmp0@plt+0x13b4>
   181c8:	mov	r2, #5
   181cc:	ldr	r1, [pc, #44]	; 18200 <g_strcmp0@plt+0x14a4>
   181d0:	mov	r0, #0
   181d4:	bl	1666c <dcgettext@plt>
   181d8:	mov	r2, r0
   181dc:	b	18110 <g_strcmp0@plt+0x13b4>
   181e0:	bl	165a0 <__stack_chk_fail@plt>
   181e4:	andeq	ip, r3, r0, asr lr
   181e8:	andeq	r6, r2, ip, lsl #24
   181ec:	muleq	r2, r0, ip
   181f0:	andeq	r6, r2, r4, ror #25
   181f4:	andeq	r6, r2, ip, lsl #26
   181f8:	andeq	r6, r2, r4, lsl sp
   181fc:	andeq	r6, r2, r4, lsr #24
   18200:	andeq	r6, r2, r4, asr ip
   18204:	push	{r4, r5, r6, lr}
   18208:	mov	r6, r0
   1820c:	mov	r0, #0
   18210:	mov	r5, r1
   18214:	bl	16a38 <gtk_text_buffer_new@plt>
   18218:	mov	r4, r0
   1821c:	mov	r0, r5
   18220:	bl	1d634 <g_strcmp0@plt+0x68d8>
   18224:	cmp	r0, #0
   18228:	moveq	r1, r5
   1822c:	ldrne	r1, [pc, #40]	; 1825c <g_strcmp0@plt+0x1500>
   18230:	mvneq	r2, #0
   18234:	mvnne	r2, #0
   18238:	mov	r0, r4
   1823c:	bl	1645c <gtk_text_buffer_set_text@plt>
   18240:	bl	15e38 <gtk_text_view_get_type@plt>
   18244:	mov	r1, r0
   18248:	mov	r0, r6
   1824c:	bl	15e14 <g_type_check_instance_cast@plt>
   18250:	mov	r1, r4
   18254:	pop	{r4, r5, r6, lr}
   18258:	b	16384 <gtk_text_view_set_buffer@plt>
   1825c:	ldrdeq	r7, [r2], -r0
   18260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18264:	sub	sp, sp, #84	; 0x54
   18268:	ldr	r6, [pc, #900]	; 185f4 <g_strcmp0@plt+0x1898>
   1826c:	mov	r5, #0
   18270:	mov	r4, r2
   18274:	ldr	r3, [r6]
   18278:	mov	r8, r0
   1827c:	str	r3, [sp, #76]	; 0x4c
   18280:	mov	r7, r1
   18284:	str	r5, [sp, #40]	; 0x28
   18288:	str	r5, [sp, #44]	; 0x2c
   1828c:	bl	165dc <gtk_tree_view_get_type@plt>
   18290:	mov	r1, r0
   18294:	mov	r0, r8
   18298:	bl	15e14 <g_type_check_instance_cast@plt>
   1829c:	bl	16744 <gtk_tree_view_get_selection@plt>
   182a0:	cmp	r0, r5
   182a4:	beq	1859c <g_strcmp0@plt+0x1840>
   182a8:	add	r2, sp, #60	; 0x3c
   182ac:	add	r1, sp, #36	; 0x24
   182b0:	bl	16714 <gtk_tree_selection_get_selected@plt>
   182b4:	mvn	fp, #0
   182b8:	add	ip, sp, #44	; 0x2c
   182bc:	mov	r0, #6
   182c0:	add	r2, sp, #40	; 0x28
   182c4:	mov	r3, #5
   182c8:	str	r0, [sp, #8]
   182cc:	str	r2, [sp, #4]
   182d0:	str	r3, [sp]
   182d4:	add	r1, sp, #60	; 0x3c
   182d8:	add	r3, sp, #48	; 0x30
   182dc:	str	fp, [sp, #16]
   182e0:	str	ip, [sp, #12]
   182e4:	mov	r2, #1
   182e8:	ldr	r0, [sp, #36]	; 0x24
   182ec:	bl	16c6c <gtk_tree_model_get@plt>
   182f0:	ldr	r3, [sp, #40]	; 0x28
   182f4:	cmp	r3, r5
   182f8:	beq	1859c <g_strcmp0@plt+0x1840>
   182fc:	bl	164c8 <gtk_menu_shell_get_type@plt>
   18300:	ldrd	r8, [sp, #48]	; 0x30
   18304:	orrs	r3, r8, r9
   18308:	mov	sl, r0
   1830c:	bne	18420 <g_strcmp0@plt+0x16c4>
   18310:	bl	15e74 <gtk_menu_new@plt>
   18314:	mvn	r2, #0
   18318:	mvn	r3, #0
   1831c:	strd	r2, [sp, #24]
   18320:	mov	r5, r0
   18324:	mov	r2, #5
   18328:	ldr	r1, [pc, #712]	; 185f8 <g_strcmp0@plt+0x189c>
   1832c:	mov	r0, #0
   18330:	bl	1666c <dcgettext@plt>
   18334:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   18338:	mov	r8, #0
   1833c:	mov	r3, r4
   18340:	ldr	r2, [pc, #692]	; 185fc <g_strcmp0@plt+0x18a0>
   18344:	ldr	r1, [pc, #692]	; 18600 <g_strcmp0@plt+0x18a4>
   18348:	str	r8, [sp, #4]
   1834c:	str	r8, [sp]
   18350:	mov	r9, r0
   18354:	bl	16414 <g_signal_connect_data@plt>
   18358:	mov	r1, sl
   1835c:	mov	r0, r5
   18360:	bl	15e14 <g_type_check_instance_cast@plt>
   18364:	mov	r1, r9
   18368:	bl	16d14 <gtk_menu_shell_append@plt>
   1836c:	ldr	r3, [r4, #32]
   18370:	cmp	r3, #2
   18374:	bne	1838c <g_strcmp0@plt+0x1630>
   18378:	ldr	r1, [sp, #48]	; 0x30
   1837c:	mov	r3, r8
   18380:	and	r2, r1, #2
   18384:	orrs	r3, r2, r3
   18388:	beq	185e0 <g_strcmp0@plt+0x1884>
   1838c:	mov	r0, r9
   18390:	mov	r1, #1
   18394:	bl	16d2c <gtk_widget_set_sensitive@plt>
   18398:	ldrd	r2, [sp, #24]
   1839c:	cmp	r3, #0
   183a0:	cmpeq	r2, #1
   183a4:	bhi	18468 <g_strcmp0@plt+0x170c>
   183a8:	mov	r2, #5
   183ac:	ldr	r1, [pc, #592]	; 18604 <g_strcmp0@plt+0x18a8>
   183b0:	mov	r0, #0
   183b4:	bl	1666c <dcgettext@plt>
   183b8:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   183bc:	mov	r8, #0
   183c0:	mov	r3, r4
   183c4:	ldr	r2, [pc, #572]	; 18608 <g_strcmp0@plt+0x18ac>
   183c8:	ldr	r1, [pc, #560]	; 18600 <g_strcmp0@plt+0x18a4>
   183cc:	str	r8, [sp, #4]
   183d0:	str	r8, [sp]
   183d4:	mov	r9, r0
   183d8:	bl	16414 <g_signal_connect_data@plt>
   183dc:	mov	r1, sl
   183e0:	mov	r0, r5
   183e4:	bl	15e14 <g_type_check_instance_cast@plt>
   183e8:	mov	r1, r9
   183ec:	bl	16d14 <gtk_menu_shell_append@plt>
   183f0:	ldr	r3, [r4, #32]
   183f4:	cmp	r3, #1
   183f8:	bne	18410 <g_strcmp0@plt+0x16b4>
   183fc:	ldr	r1, [sp, #48]	; 0x30
   18400:	mov	r3, r8
   18404:	and	r2, r1, #2
   18408:	orrs	r3, r2, r3
   1840c:	beq	185d0 <g_strcmp0@plt+0x1874>
   18410:	mov	r0, r9
   18414:	mov	r1, #1
   18418:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1841c:	b	18468 <g_strcmp0@plt+0x170c>
   18420:	mov	r2, fp
   18424:	mov	r0, r5
   18428:	mov	r1, #1
   1842c:	bl	164e0 <pk_bitfield_from_enums@plt>
   18430:	ldrd	r2, [sp, #48]	; 0x30
   18434:	cmp	r1, r3
   18438:	cmpeq	r0, r2
   1843c:	beq	185b4 <g_strcmp0@plt+0x1858>
   18440:	subs	r1, r2, #1
   18444:	sbc	r3, r3, #0
   18448:	str	r1, [sp, #24]
   1844c:	str	r3, [sp, #28]
   18450:	bl	15e74 <gtk_menu_new@plt>
   18454:	mov	r5, r0
   18458:	ldrd	r2, [sp, #24]
   1845c:	cmp	r3, #0
   18460:	cmpeq	r2, #1
   18464:	bls	183a8 <g_strcmp0@plt+0x164c>
   18468:	mov	r2, #5
   1846c:	ldr	r1, [pc, #408]	; 1860c <g_strcmp0@plt+0x18b0>
   18470:	mov	r0, #0
   18474:	bl	1666c <dcgettext@plt>
   18478:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   1847c:	mov	r3, #0
   18480:	ldr	r2, [pc, #392]	; 18610 <g_strcmp0@plt+0x18b4>
   18484:	str	r3, [sp, #4]
   18488:	str	r3, [sp]
   1848c:	ldr	r1, [pc, #364]	; 18600 <g_strcmp0@plt+0x18a4>
   18490:	mov	r3, r4
   18494:	mov	r8, r0
   18498:	bl	16414 <g_signal_connect_data@plt>
   1849c:	mov	r0, r5
   184a0:	mov	r1, sl
   184a4:	bl	15e14 <g_type_check_instance_cast@plt>
   184a8:	mov	r1, r8
   184ac:	bl	16d14 <gtk_menu_shell_append@plt>
   184b0:	ldr	r1, [r4, #16]
   184b4:	mov	r0, r8
   184b8:	cmp	r1, #0
   184bc:	movne	r1, #1
   184c0:	bl	16d2c <gtk_widget_set_sensitive@plt>
   184c4:	mov	r2, #5
   184c8:	ldr	r1, [pc, #324]	; 18614 <g_strcmp0@plt+0x18b8>
   184cc:	mov	r0, #0
   184d0:	bl	1666c <dcgettext@plt>
   184d4:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   184d8:	mov	r8, #0
   184dc:	mov	r3, r4
   184e0:	ldr	r2, [pc, #304]	; 18618 <g_strcmp0@plt+0x18bc>
   184e4:	ldr	r1, [pc, #276]	; 18600 <g_strcmp0@plt+0x18a4>
   184e8:	str	r8, [sp, #4]
   184ec:	str	r8, [sp]
   184f0:	mov	r9, r0
   184f4:	bl	16414 <g_signal_connect_data@plt>
   184f8:	mov	r0, r5
   184fc:	mov	r1, sl
   18500:	bl	15e14 <g_type_check_instance_cast@plt>
   18504:	mov	r1, r9
   18508:	bl	16d14 <gtk_menu_shell_append@plt>
   1850c:	mov	r2, #5
   18510:	ldr	r1, [pc, #260]	; 1861c <g_strcmp0@plt+0x18c0>
   18514:	mov	r0, r8
   18518:	bl	1666c <dcgettext@plt>
   1851c:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   18520:	mov	r3, r4
   18524:	ldr	r2, [pc, #244]	; 18620 <g_strcmp0@plt+0x18c4>
   18528:	ldr	r1, [pc, #208]	; 18600 <g_strcmp0@plt+0x18a4>
   1852c:	str	r8, [sp, #4]
   18530:	str	r8, [sp]
   18534:	mov	r9, r0
   18538:	bl	16414 <g_signal_connect_data@plt>
   1853c:	mov	r0, r5
   18540:	mov	r1, sl
   18544:	bl	15e14 <g_type_check_instance_cast@plt>
   18548:	mov	r1, r9
   1854c:	bl	16d14 <gtk_menu_shell_append@plt>
   18550:	mov	r0, r5
   18554:	bl	168d0 <gtk_widget_show_all@plt>
   18558:	bl	1687c <gtk_menu_get_type@plt>
   1855c:	mov	r1, r0
   18560:	mov	r0, r5
   18564:	bl	15e14 <g_type_check_instance_cast@plt>
   18568:	cmp	r7, r8
   1856c:	moveq	r5, r7
   18570:	ldrne	r5, [r7, #40]	; 0x28
   18574:	mov	r4, r0
   18578:	mov	r0, r7
   1857c:	bl	15e50 <gdk_event_get_time@plt>
   18580:	mov	r3, #0
   18584:	mov	r2, r3
   18588:	stm	sp, {r3, r5}
   1858c:	mov	r1, r3
   18590:	str	r0, [sp, #8]
   18594:	mov	r0, r4
   18598:	bl	164b0 <gtk_menu_popup@plt>
   1859c:	ldr	r2, [sp, #76]	; 0x4c
   185a0:	ldr	r3, [r6]
   185a4:	cmp	r2, r3
   185a8:	bne	185f0 <g_strcmp0@plt+0x1894>
   185ac:	add	sp, sp, #84	; 0x54
   185b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185b4:	adds	r3, r0, fp
   185b8:	str	r3, [sp, #24]
   185bc:	adc	r3, r1, fp
   185c0:	str	r3, [sp, #28]
   185c4:	bl	15e74 <gtk_menu_new@plt>
   185c8:	mov	r5, r0
   185cc:	b	18324 <g_strcmp0@plt+0x15c8>
   185d0:	mov	r1, r8
   185d4:	mov	r0, r9
   185d8:	bl	16d2c <gtk_widget_set_sensitive@plt>
   185dc:	b	18468 <g_strcmp0@plt+0x170c>
   185e0:	mov	r1, r8
   185e4:	mov	r0, r9
   185e8:	bl	16d2c <gtk_widget_set_sensitive@plt>
   185ec:	b	18458 <g_strcmp0@plt+0x16fc>
   185f0:	bl	165a0 <__stack_chk_fail@plt>
   185f4:	andeq	ip, r3, r0, asr lr
   185f8:	andeq	r6, r2, r4, lsr #26
   185fc:	andeq	ip, r1, r0, lsr r3
   18600:	andeq	r6, r2, r4, lsr sp
   18604:	andeq	r6, r2, r0, asr #26
   18608:			; <UNDEFINED> instruction: 0x0001c1b0
   1860c:	andeq	r6, r2, r0, asr sp
   18610:	andeq	r8, r1, ip, lsr r6
   18614:	andeq	r6, r2, r8, ror #26
   18618:	andeq	r9, r1, r8, asr #27
   1861c:	andeq	r6, r2, ip, ror sp
   18620:	andeq	r9, r1, r0, ror #10
   18624:	mov	r2, r1
   18628:	push	{r4, lr}
   1862c:	mov	r1, #0
   18630:	bl	18260 <g_strcmp0@plt+0x1504>
   18634:	mov	r0, #1
   18638:	pop	{r4, pc}
   1863c:	ldr	r0, [r1, #16]
   18640:	b	228c4 <g_strcmp0@plt+0xbb68>
   18644:	push	{r4, r5, r6, r7, r8, lr}
   18648:	mov	r4, r2
   1864c:	sub	sp, sp, #16
   18650:	mov	r6, r3
   18654:	mov	r7, r1
   18658:	bl	15e74 <gtk_menu_new@plt>
   1865c:	ldr	r3, [r4, #40]	; 0x28
   18660:	cmp	r3, #1
   18664:	beq	18670 <g_strcmp0@plt+0x1914>
   18668:	add	sp, sp, #16
   1866c:	pop	{r4, r5, r6, r7, r8, pc}
   18670:	mov	r3, r7
   18674:	ldr	r2, [pc, #416]	; 1881c <g_strcmp0@plt+0x1ac0>
   18678:	mov	r1, #128	; 0x80
   1867c:	mov	r5, r0
   18680:	ldr	r0, [pc, #408]	; 18820 <g_strcmp0@plt+0x1ac4>
   18684:	bl	15ebc <g_log@plt>
   18688:	ldr	r3, [r6, #88]	; 0x58
   1868c:	mov	r7, #0
   18690:	and	r0, r3, #2097152	; 0x200000
   18694:	mov	r1, r7
   18698:	orrs	r2, r0, r1
   1869c:	bne	18718 <g_strcmp0@plt+0x19bc>
   186a0:	mov	r7, #0
   186a4:	and	r0, r3, #262144	; 0x40000
   186a8:	mov	r1, r7
   186ac:	orrs	r2, r0, r1
   186b0:	bne	187c4 <g_strcmp0@plt+0x1a68>
   186b4:	mov	r7, #0
   186b8:	and	r0, r3, #524288	; 0x80000
   186bc:	mov	r1, r7
   186c0:	orrs	r3, r0, r1
   186c4:	bne	18770 <g_strcmp0@plt+0x1a14>
   186c8:	bl	15db4 <gtk_widget_get_type@plt>
   186cc:	mov	r1, r0
   186d0:	mov	r0, r5
   186d4:	bl	15e14 <g_type_check_instance_cast@plt>
   186d8:	bl	168d0 <gtk_widget_show_all@plt>
   186dc:	bl	1687c <gtk_menu_get_type@plt>
   186e0:	mov	r1, r0
   186e4:	mov	r0, r5
   186e8:	bl	15e14 <g_type_check_instance_cast@plt>
   186ec:	ldr	r1, [r4, #12]
   186f0:	ldr	r2, [r4, #40]	; 0x28
   186f4:	mov	r3, #0
   186f8:	str	r1, [sp, #8]
   186fc:	str	r2, [sp, #4]
   18700:	str	r3, [sp]
   18704:	mov	r2, r3
   18708:	mov	r1, r3
   1870c:	bl	164b0 <gtk_menu_popup@plt>
   18710:	add	sp, sp, #16
   18714:	pop	{r4, r5, r6, r7, r8, pc}
   18718:	mov	r2, #5
   1871c:	ldr	r1, [pc, #256]	; 18824 <g_strcmp0@plt+0x1ac8>
   18720:	mov	r0, r7
   18724:	bl	1666c <dcgettext@plt>
   18728:	bl	165d0 <gtk_menu_item_new_with_mnemonic@plt>
   1872c:	mov	r1, #80	; 0x50
   18730:	mov	r8, r0
   18734:	bl	15e14 <g_type_check_instance_cast@plt>
   18738:	mov	r3, r6
   1873c:	ldr	r2, [pc, #228]	; 18828 <g_strcmp0@plt+0x1acc>
   18740:	ldr	r1, [pc, #228]	; 1882c <g_strcmp0@plt+0x1ad0>
   18744:	str	r7, [sp, #4]
   18748:	str	r7, [sp]
   1874c:	bl	16414 <g_signal_connect_data@plt>
   18750:	bl	164c8 <gtk_menu_shell_get_type@plt>
   18754:	mov	r1, r0
   18758:	mov	r0, r5
   1875c:	bl	15e14 <g_type_check_instance_cast@plt>
   18760:	mov	r1, r8
   18764:	bl	16d14 <gtk_menu_shell_append@plt>
   18768:	ldr	r3, [r6, #88]	; 0x58
   1876c:	b	186a0 <g_strcmp0@plt+0x1944>
   18770:	mov	r2, #5
   18774:	ldr	r1, [pc, #180]	; 18830 <g_strcmp0@plt+0x1ad4>
   18778:	mov	r0, r7
   1877c:	bl	1666c <dcgettext@plt>
   18780:	bl	165d0 <gtk_menu_item_new_with_mnemonic@plt>
   18784:	mov	r1, #80	; 0x50
   18788:	mov	r8, r0
   1878c:	bl	15e14 <g_type_check_instance_cast@plt>
   18790:	mov	r3, r6
   18794:	ldr	r2, [pc, #152]	; 18834 <g_strcmp0@plt+0x1ad8>
   18798:	ldr	r1, [pc, #140]	; 1882c <g_strcmp0@plt+0x1ad0>
   1879c:	str	r7, [sp, #4]
   187a0:	str	r7, [sp]
   187a4:	bl	16414 <g_signal_connect_data@plt>
   187a8:	bl	164c8 <gtk_menu_shell_get_type@plt>
   187ac:	mov	r1, r0
   187b0:	mov	r0, r5
   187b4:	bl	15e14 <g_type_check_instance_cast@plt>
   187b8:	mov	r1, r8
   187bc:	bl	16d14 <gtk_menu_shell_append@plt>
   187c0:	b	186c8 <g_strcmp0@plt+0x196c>
   187c4:	mov	r2, #5
   187c8:	ldr	r1, [pc, #104]	; 18838 <g_strcmp0@plt+0x1adc>
   187cc:	mov	r0, r7
   187d0:	bl	1666c <dcgettext@plt>
   187d4:	bl	165d0 <gtk_menu_item_new_with_mnemonic@plt>
   187d8:	mov	r1, #80	; 0x50
   187dc:	mov	r8, r0
   187e0:	bl	15e14 <g_type_check_instance_cast@plt>
   187e4:	mov	r3, r6
   187e8:	ldr	r2, [pc, #76]	; 1883c <g_strcmp0@plt+0x1ae0>
   187ec:	ldr	r1, [pc, #56]	; 1882c <g_strcmp0@plt+0x1ad0>
   187f0:	str	r7, [sp, #4]
   187f4:	str	r7, [sp]
   187f8:	bl	16414 <g_signal_connect_data@plt>
   187fc:	bl	164c8 <gtk_menu_shell_get_type@plt>
   18800:	mov	r1, r0
   18804:	mov	r0, r5
   18808:	bl	15e14 <g_type_check_instance_cast@plt>
   1880c:	mov	r1, r8
   18810:	bl	16d14 <gtk_menu_shell_append@plt>
   18814:	ldr	r3, [r6, #88]	; 0x58
   18818:	b	186b4 <g_strcmp0@plt+0x1958>
   1881c:	muleq	r2, r0, sp
   18820:	andeq	r6, r2, r8, lsr #21
   18824:	muleq	r2, ip, sp
   18828:	muleq	r1, r0, r9
   1882c:	andeq	r6, r2, r4, lsr sp
   18830:	andeq	r6, r2, r4, asr #27
   18834:	andeq	r8, r1, r0, asr #16
   18838:	andeq	r6, r2, ip, lsr #27
   1883c:	andeq	r8, r1, r8, ror #17
   18840:	push	{r4, lr}
   18844:	mov	r3, #2
   18848:	mov	r4, r1
   1884c:	str	r3, [r1, #44]	; 0x2c
   18850:	ldr	r2, [pc, #120]	; 188d0 <g_strcmp0@plt+0x1b74>
   18854:	mov	r1, #128	; 0x80
   18858:	ldr	r0, [pc, #116]	; 188d4 <g_strcmp0@plt+0x1b78>
   1885c:	bl	15ebc <g_log@plt>
   18860:	ldr	r2, [r4, #44]	; 0x2c
   18864:	ldr	r0, [r4, #52]	; 0x34
   18868:	ldr	r1, [pc, #104]	; 188d8 <g_strcmp0@plt+0x1b7c>
   1886c:	bl	15d54 <g_settings_set_enum@plt>
   18870:	ldr	r1, [pc, #100]	; 188dc <g_strcmp0@plt+0x1b80>
   18874:	ldr	r0, [r4, #56]	; 0x38
   18878:	bl	1615c <gtk_builder_get_object@plt>
   1887c:	mov	r4, r0
   18880:	bl	15db4 <gtk_widget_get_type@plt>
   18884:	mov	r1, r0
   18888:	mov	r0, r4
   1888c:	bl	15e14 <g_type_check_instance_cast@plt>
   18890:	mov	r2, #5
   18894:	ldr	r1, [pc, #68]	; 188e0 <g_strcmp0@plt+0x1b84>
   18898:	mov	r4, r0
   1889c:	mov	r0, #0
   188a0:	bl	1666c <dcgettext@plt>
   188a4:	mov	r1, r0
   188a8:	mov	r0, r4
   188ac:	bl	15f7c <gtk_widget_set_tooltip_text@plt>
   188b0:	bl	16a68 <gtk_entry_get_type@plt>
   188b4:	mov	r1, r0
   188b8:	mov	r0, r4
   188bc:	bl	15e14 <g_type_check_instance_cast@plt>
   188c0:	ldr	r2, [pc, #28]	; 188e4 <g_strcmp0@plt+0x1b88>
   188c4:	mov	r1, #0
   188c8:	pop	{r4, lr}
   188cc:	b	15e5c <gtk_entry_set_icon_from_icon_name@plt>
   188d0:	ldrdeq	r6, [r2], -r8
   188d4:	andeq	r6, r2, r8, lsr #21
   188d8:	andeq	r6, r2, ip, ror #27
   188dc:	strdeq	r6, [r2], -r8
   188e0:	andeq	r6, r2, r4, lsl #28
   188e4:	andeq	r6, r2, r8, lsl lr
   188e8:	push	{r4, lr}
   188ec:	mov	r3, #1
   188f0:	mov	r4, r1
   188f4:	str	r3, [r1, #44]	; 0x2c
   188f8:	ldr	r2, [pc, #120]	; 18978 <g_strcmp0@plt+0x1c1c>
   188fc:	mov	r1, #128	; 0x80
   18900:	ldr	r0, [pc, #116]	; 1897c <g_strcmp0@plt+0x1c20>
   18904:	bl	15ebc <g_log@plt>
   18908:	ldr	r2, [r4, #44]	; 0x2c
   1890c:	ldr	r0, [r4, #52]	; 0x34
   18910:	ldr	r1, [pc, #104]	; 18980 <g_strcmp0@plt+0x1c24>
   18914:	bl	15d54 <g_settings_set_enum@plt>
   18918:	ldr	r1, [pc, #100]	; 18984 <g_strcmp0@plt+0x1c28>
   1891c:	ldr	r0, [r4, #56]	; 0x38
   18920:	bl	1615c <gtk_builder_get_object@plt>
   18924:	mov	r4, r0
   18928:	bl	15db4 <gtk_widget_get_type@plt>
   1892c:	mov	r1, r0
   18930:	mov	r0, r4
   18934:	bl	15e14 <g_type_check_instance_cast@plt>
   18938:	mov	r2, #5
   1893c:	ldr	r1, [pc, #68]	; 18988 <g_strcmp0@plt+0x1c2c>
   18940:	mov	r4, r0
   18944:	mov	r0, #0
   18948:	bl	1666c <dcgettext@plt>
   1894c:	mov	r1, r0
   18950:	mov	r0, r4
   18954:	bl	15f7c <gtk_widget_set_tooltip_text@plt>
   18958:	bl	16a68 <gtk_entry_get_type@plt>
   1895c:	mov	r1, r0
   18960:	mov	r0, r4
   18964:	bl	15e14 <g_type_check_instance_cast@plt>
   18968:	ldr	r2, [pc, #28]	; 1898c <g_strcmp0@plt+0x1c30>
   1896c:	mov	r1, #0
   18970:	pop	{r4, lr}
   18974:	b	15e5c <gtk_entry_set_icon_from_icon_name@plt>
   18978:	ldrdeq	r6, [r2], -r8
   1897c:	andeq	r6, r2, r8, lsr #21
   18980:	andeq	r6, r2, ip, ror #27
   18984:	strdeq	r6, [r2], -r8
   18988:	andeq	r6, r2, r4, lsr #28
   1898c:	andeq	r6, r2, r0, asr #28
   18990:	push	{r4, r5, r6, lr}
   18994:	mov	r5, r1
   18998:	mov	r4, #0
   1899c:	mov	r3, r4
   189a0:	str	r4, [r1, #44]	; 0x2c
   189a4:	ldr	r2, [pc, #120]	; 18a24 <g_strcmp0@plt+0x1cc8>
   189a8:	mov	r1, #128	; 0x80
   189ac:	ldr	r0, [pc, #116]	; 18a28 <g_strcmp0@plt+0x1ccc>
   189b0:	bl	15ebc <g_log@plt>
   189b4:	ldr	r2, [r5, #44]	; 0x2c
   189b8:	ldr	r0, [r5, #52]	; 0x34
   189bc:	ldr	r1, [pc, #104]	; 18a2c <g_strcmp0@plt+0x1cd0>
   189c0:	bl	15d54 <g_settings_set_enum@plt>
   189c4:	ldr	r1, [pc, #100]	; 18a30 <g_strcmp0@plt+0x1cd4>
   189c8:	ldr	r0, [r5, #56]	; 0x38
   189cc:	bl	1615c <gtk_builder_get_object@plt>
   189d0:	mov	r5, r0
   189d4:	bl	15db4 <gtk_widget_get_type@plt>
   189d8:	mov	r1, r0
   189dc:	mov	r0, r5
   189e0:	bl	15e14 <g_type_check_instance_cast@plt>
   189e4:	mov	r2, #5
   189e8:	ldr	r1, [pc, #68]	; 18a34 <g_strcmp0@plt+0x1cd8>
   189ec:	mov	r5, r0
   189f0:	mov	r0, r4
   189f4:	bl	1666c <dcgettext@plt>
   189f8:	mov	r1, r0
   189fc:	mov	r0, r5
   18a00:	bl	15f7c <gtk_widget_set_tooltip_text@plt>
   18a04:	bl	16a68 <gtk_entry_get_type@plt>
   18a08:	mov	r1, r0
   18a0c:	mov	r0, r5
   18a10:	bl	15e14 <g_type_check_instance_cast@plt>
   18a14:	mov	r1, r4
   18a18:	ldr	r2, [pc, #24]	; 18a38 <g_strcmp0@plt+0x1cdc>
   18a1c:	pop	{r4, r5, r6, lr}
   18a20:	b	15e5c <gtk_entry_set_icon_from_icon_name@plt>
   18a24:	ldrdeq	r6, [r2], -r8
   18a28:	andeq	r6, r2, r8, lsr #21
   18a2c:	andeq	r6, r2, ip, ror #27
   18a30:	strdeq	r6, [r2], -r8
   18a34:	andeq	r6, r2, r4, asr lr
   18a38:	andeq	r6, r2, r8, ror #28
   18a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a40:	mov	r9, r2
   18a44:	ldr	r2, [pc, #1000]	; 18e34 <g_strcmp0@plt+0x20d8>
   18a48:	sub	sp, sp, #140	; 0x8c
   18a4c:	mov	r3, #0
   18a50:	ldr	r2, [r2]
   18a54:	str	r3, [sp, #60]	; 0x3c
   18a58:	str	r2, [sp, #132]	; 0x84
   18a5c:	add	r2, sp, #60	; 0x3c
   18a60:	str	r3, [sp, #64]	; 0x40
   18a64:	str	r3, [sp, #68]	; 0x44
   18a68:	str	r3, [sp, #72]	; 0x48
   18a6c:	str	r3, [sp, #76]	; 0x4c
   18a70:	str	r3, [sp, #80]	; 0x50
   18a74:	str	r3, [sp, #84]	; 0x54
   18a78:	str	r3, [sp, #88]	; 0x58
   18a7c:	str	r3, [sp, #92]	; 0x5c
   18a80:	str	r3, [sp, #96]	; 0x60
   18a84:	bl	161a4 <pk_client_generic_finish@plt>
   18a88:	ldr	r3, [r9, #124]	; 0x7c
   18a8c:	sub	r3, r3, #1
   18a90:	cmp	r3, #0
   18a94:	str	r3, [r9, #124]	; 0x7c
   18a98:	str	r0, [sp, #48]	; 0x30
   18a9c:	ldr	r0, [r9, #108]	; 0x6c
   18aa0:	bgt	18aa8 <g_strcmp0@plt+0x1d4c>
   18aa4:	bl	16498 <gtk_widget_destroy@plt>
   18aa8:	ldr	r3, [sp, #48]	; 0x30
   18aac:	cmp	r3, #0
   18ab0:	beq	18e0c <g_strcmp0@plt+0x20b0>
   18ab4:	ldr	r0, [sp, #48]	; 0x30
   18ab8:	bl	15f1c <pk_results_get_error_code@plt>
   18abc:	subs	r4, r0, #0
   18ac0:	beq	18b8c <g_strcmp0@plt+0x1e30>
   18ac4:	bl	16018 <pk_error_get_code@plt>
   18ac8:	bl	16228 <pk_error_enum_to_string@plt>
   18acc:	mov	r5, r0
   18ad0:	mov	r0, r4
   18ad4:	bl	15fdc <pk_error_get_details@plt>
   18ad8:	mov	r3, r5
   18adc:	ldr	r2, [pc, #852]	; 18e38 <g_strcmp0@plt+0x20dc>
   18ae0:	mov	r1, #16
   18ae4:	str	r0, [sp]
   18ae8:	ldr	r0, [pc, #844]	; 18e3c <g_strcmp0@plt+0x20e0>
   18aec:	bl	15ebc <g_log@plt>
   18af0:	mov	r0, r4
   18af4:	bl	16018 <pk_error_get_code@plt>
   18af8:	cmp	r0, #17
   18afc:	beq	18b60 <g_strcmp0@plt+0x1e04>
   18b00:	ldr	r1, [pc, #824]	; 18e40 <g_strcmp0@plt+0x20e4>
   18b04:	ldr	r0, [r9, #56]	; 0x38
   18b08:	bl	1615c <gtk_builder_get_object@plt>
   18b0c:	mov	r5, r0
   18b10:	bl	16d20 <gtk_window_get_type@plt>
   18b14:	mov	r1, r0
   18b18:	mov	r0, r5
   18b1c:	bl	15e14 <g_type_check_instance_cast@plt>
   18b20:	mov	r5, r0
   18b24:	mov	r0, r4
   18b28:	bl	16018 <pk_error_get_code@plt>
   18b2c:	bl	1ef7c <g_strcmp0@plt+0x8220>
   18b30:	mov	r6, r0
   18b34:	mov	r0, r4
   18b38:	bl	16018 <pk_error_get_code@plt>
   18b3c:	bl	1f60c <g_strcmp0@plt+0x88b0>
   18b40:	mov	r7, r0
   18b44:	mov	r0, r4
   18b48:	bl	15fdc <pk_error_get_details@plt>
   18b4c:	mov	r2, r7
   18b50:	mov	r1, r6
   18b54:	mov	r3, r0
   18b58:	mov	r0, r5
   18b5c:	bl	25660 <g_strcmp0@plt+0xe904>
   18b60:	mov	r0, r4
   18b64:	bl	16990 <g_object_unref@plt>
   18b68:	ldr	r0, [sp, #48]	; 0x30
   18b6c:	bl	16990 <g_object_unref@plt>
   18b70:	ldr	r3, [pc, #700]	; 18e34 <g_strcmp0@plt+0x20d8>
   18b74:	ldr	r2, [sp, #132]	; 0x84
   18b78:	ldr	r3, [r3]
   18b7c:	cmp	r2, r3
   18b80:	bne	18e30 <g_strcmp0@plt+0x20d4>
   18b84:	add	sp, sp, #140	; 0x8c
   18b88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b8c:	ldr	r1, [pc, #688]	; 18e44 <g_strcmp0@plt+0x20e8>
   18b90:	ldr	r0, [r9, #56]	; 0x38
   18b94:	bl	1615c <gtk_builder_get_object@plt>
   18b98:	mov	r5, r0
   18b9c:	bl	165dc <gtk_tree_view_get_type@plt>
   18ba0:	mov	r1, r0
   18ba4:	mov	r0, r5
   18ba8:	bl	15e14 <g_type_check_instance_cast@plt>
   18bac:	mov	r1, #1
   18bb0:	mov	r5, r0
   18bb4:	str	r0, [sp, #52]	; 0x34
   18bb8:	bl	1627c <gtk_tree_view_set_show_expanders@plt>
   18bbc:	mov	r0, r5
   18bc0:	mov	r1, #3
   18bc4:	bl	162f4 <gtk_tree_view_set_level_indentation@plt>
   18bc8:	ldr	r0, [sp, #48]	; 0x30
   18bcc:	bl	16918 <pk_results_get_category_array@plt>
   18bd0:	ldr	r3, [r0, #4]
   18bd4:	mov	r5, r0
   18bd8:	cmp	r3, #0
   18bdc:	beq	18df8 <g_strcmp0@plt+0x209c>
   18be0:	ldr	fp, [pc, #608]	; 18e48 <g_strcmp0@plt+0x20ec>
   18be4:	ldr	sl, [pc, #608]	; 18e4c <g_strcmp0@plt+0x20f0>
   18be8:	ldr	r8, [pc, #608]	; 18e50 <g_strcmp0@plt+0x20f4>
   18bec:	mov	r7, r4
   18bf0:	str	r4, [sp, #44]	; 0x2c
   18bf4:	ldr	r1, [r5]
   18bf8:	ldr	r0, [sp, #44]	; 0x2c
   18bfc:	add	ip, sp, #76	; 0x4c
   18c00:	ldr	r3, [pc, #576]	; 18e48 <g_strcmp0@plt+0x20ec>
   18c04:	ldr	r0, [r1, r0, lsl #2]
   18c08:	str	ip, [sp, #16]
   18c0c:	add	ip, sp, #72	; 0x48
   18c10:	str	ip, [sp, #8]
   18c14:	ldr	ip, [pc, #568]	; 18e54 <g_strcmp0@plt+0x20f8>
   18c18:	add	r2, sp, #64	; 0x40
   18c1c:	str	ip, [sp, #4]
   18c20:	add	ip, sp, #68	; 0x44
   18c24:	str	ip, [sp]
   18c28:	ldr	r1, [pc, #540]	; 18e4c <g_strcmp0@plt+0x20f0>
   18c2c:	str	r7, [sp, #20]
   18c30:	str	r8, [sp, #12]
   18c34:	bl	166fc <g_object_get@plt>
   18c38:	mov	r2, #0
   18c3c:	add	r1, sp, #100	; 0x64
   18c40:	ldr	r0, [r9, #64]	; 0x40
   18c44:	bl	15b74 <gtk_tree_store_append@plt>
   18c48:	ldr	r3, [sp, #76]	; 0x4c
   18c4c:	ldr	r0, [sp, #68]	; 0x44
   18c50:	ldr	ip, [sp, #72]	; 0x48
   18c54:	str	r3, [sp, #20]
   18c58:	mov	r1, #4
   18c5c:	mov	r2, #3
   18c60:	mvn	lr, #0
   18c64:	mov	r3, #2
   18c68:	str	r1, [sp, #24]
   18c6c:	str	r2, [sp, #8]
   18c70:	str	r3, [sp]
   18c74:	str	lr, [sp, #32]
   18c78:	str	r7, [sp, #28]
   18c7c:	str	r7, [sp, #16]
   18c80:	str	ip, [sp, #12]
   18c84:	str	r0, [sp, #4]
   18c88:	ldr	r3, [sp, #64]	; 0x40
   18c8c:	mov	r2, #1
   18c90:	add	r1, sp, #100	; 0x64
   18c94:	ldr	r0, [r9, #64]	; 0x40
   18c98:	bl	16258 <gtk_tree_store_set@plt>
   18c9c:	mov	r4, #0
   18ca0:	b	18cd8 <g_strcmp0@plt+0x1f7c>
   18ca4:	ldr	r0, [sp, #80]	; 0x50
   18ca8:	bl	16660 <g_free@plt>
   18cac:	ldr	r0, [sp, #84]	; 0x54
   18cb0:	bl	16660 <g_free@plt>
   18cb4:	ldr	r0, [sp, #88]	; 0x58
   18cb8:	bl	16660 <g_free@plt>
   18cbc:	ldr	r0, [sp, #92]	; 0x5c
   18cc0:	bl	16660 <g_free@plt>
   18cc4:	ldr	r0, [sp, #96]	; 0x60
   18cc8:	bl	16660 <g_free@plt>
   18ccc:	ldr	r3, [r5, #4]
   18cd0:	cmp	r3, r4
   18cd4:	bls	18db8 <g_strcmp0@plt+0x205c>
   18cd8:	ldr	r1, [r5]
   18cdc:	add	r0, sp, #96	; 0x60
   18ce0:	ldr	r3, [pc, #364]	; 18e54 <g_strcmp0@plt+0x20f8>
   18ce4:	ldr	r6, [r1, r4, lsl #2]
   18ce8:	str	r0, [sp, #24]
   18cec:	add	r0, sp, #88	; 0x58
   18cf0:	str	r0, [sp, #16]
   18cf4:	add	r0, sp, #84	; 0x54
   18cf8:	str	r0, [sp, #8]
   18cfc:	add	r0, sp, #92	; 0x5c
   18d00:	add	r2, sp, #80	; 0x50
   18d04:	ldr	r1, [pc, #332]	; 18e58 <g_strcmp0@plt+0x20fc>
   18d08:	str	r0, [sp]
   18d0c:	str	r7, [sp, #28]
   18d10:	mov	r0, r6
   18d14:	str	r8, [sp, #20]
   18d18:	str	fp, [sp, #12]
   18d1c:	str	sl, [sp, #4]
   18d20:	bl	166fc <g_object_get@plt>
   18d24:	ldr	r1, [sp, #72]	; 0x48
   18d28:	ldr	r0, [sp, #80]	; 0x50
   18d2c:	bl	16d5c <g_strcmp0@plt>
   18d30:	subs	r3, r0, #0
   18d34:	addne	r4, r4, #1
   18d38:	bne	18ca4 <g_strcmp0@plt+0x1f48>
   18d3c:	add	r1, sp, #116	; 0x74
   18d40:	add	r2, sp, #100	; 0x64
   18d44:	ldr	r0, [r9, #64]	; 0x40
   18d48:	str	r3, [sp, #40]	; 0x28
   18d4c:	bl	15b74 <gtk_tree_store_append@plt>
   18d50:	ldr	lr, [sp, #92]	; 0x5c
   18d54:	mvn	r3, #0
   18d58:	ldr	r0, [sp, #96]	; 0x60
   18d5c:	str	r3, [sp, #32]
   18d60:	ldr	r3, [sp, #40]	; 0x28
   18d64:	str	lr, [sp, #12]
   18d68:	ldr	lr, [sp, #88]	; 0x58
   18d6c:	str	r3, [sp, #16]
   18d70:	str	r0, [sp, #20]
   18d74:	mov	r2, #1
   18d78:	mov	ip, #4
   18d7c:	mov	r0, #3
   18d80:	mov	r3, #2
   18d84:	str	r3, [sp]
   18d88:	add	r1, sp, #116	; 0x74
   18d8c:	str	lr, [sp, #4]
   18d90:	str	r2, [sp, #28]
   18d94:	str	ip, [sp, #24]
   18d98:	str	r0, [sp, #8]
   18d9c:	ldr	r3, [sp, #84]	; 0x54
   18da0:	ldr	r0, [r9, #64]	; 0x40
   18da4:	bl	16258 <gtk_tree_store_set@plt>
   18da8:	mov	r1, r6
   18dac:	mov	r0, r5
   18db0:	bl	162e8 <g_ptr_array_remove@plt>
   18db4:	b	18ca4 <g_strcmp0@plt+0x1f48>
   18db8:	mov	r0, #0
   18dbc:	bl	16660 <g_free@plt>
   18dc0:	ldr	r0, [sp, #64]	; 0x40
   18dc4:	bl	16660 <g_free@plt>
   18dc8:	ldr	r0, [sp, #68]	; 0x44
   18dcc:	bl	16660 <g_free@plt>
   18dd0:	ldr	r0, [sp, #72]	; 0x48
   18dd4:	bl	16660 <g_free@plt>
   18dd8:	ldr	r0, [sp, #76]	; 0x4c
   18ddc:	bl	16660 <g_free@plt>
   18de0:	ldr	r2, [sp, #44]	; 0x2c
   18de4:	ldr	r3, [r5, #4]
   18de8:	add	r2, r2, #1
   18dec:	cmp	r3, r2
   18df0:	str	r2, [sp, #44]	; 0x2c
   18df4:	bhi	18bf4 <g_strcmp0@plt+0x1e98>
   18df8:	ldr	r0, [sp, #52]	; 0x34
   18dfc:	bl	16ccc <gtk_tree_view_collapse_all@plt>
   18e00:	mov	r0, r5
   18e04:	bl	16af8 <g_ptr_array_unref@plt>
   18e08:	b	18b68 <g_strcmp0@plt+0x1e0c>
   18e0c:	ldr	r3, [sp, #60]	; 0x3c
   18e10:	ldr	r2, [pc, #68]	; 18e5c <g_strcmp0@plt+0x2100>
   18e14:	mov	r1, #16
   18e18:	ldr	r3, [r3, #8]
   18e1c:	ldr	r0, [pc, #24]	; 18e3c <g_strcmp0@plt+0x20e0>
   18e20:	bl	15ebc <g_log@plt>
   18e24:	ldr	r0, [sp, #60]	; 0x3c
   18e28:	bl	15d3c <g_error_free@plt>
   18e2c:	b	18b70 <g_strcmp0@plt+0x1e14>
   18e30:	bl	165a0 <__stack_chk_fail@plt>
   18e34:	andeq	ip, r3, r0, asr lr
   18e38:	muleq	r2, ip, lr
   18e3c:	andeq	r6, r2, r8, lsr #21
   18e40:	andeq	r6, r2, r8, lsl #17
   18e44:			; <UNDEFINED> instruction: 0x00026eb8
   18e48:	andeq	r6, r2, r8, asr #29
   18e4c:	muleq	r2, r8, r5
   18e50:	ldrdeq	r6, [r2], -r0
   18e54:	ldrdeq	r6, [r2], -r8
   18e58:	andeq	r6, r2, r0, ror #29
   18e5c:	andeq	r6, r2, r4, ror lr
   18e60:	mov	r3, r1
   18e64:	push	{r4, r5, r6, lr}
   18e68:	mov	r4, r0
   18e6c:	ldr	r1, [pc, #44]	; 18ea0 <g_strcmp0@plt+0x2144>
   18e70:	mov	r0, r3
   18e74:	bl	1615c <gtk_builder_get_object@plt>
   18e78:	mov	r5, r0
   18e7c:	bl	15db4 <gtk_widget_get_type@plt>
   18e80:	mov	r1, r0
   18e84:	mov	r0, r5
   18e88:	bl	15e14 <g_type_check_instance_cast@plt>
   18e8c:	ldr	r1, [r4]
   18e90:	pop	{r4, r5, r6, lr}
   18e94:	clz	r1, r1
   18e98:	lsr	r1, r1, #5
   18e9c:	b	16d2c <gtk_widget_set_sensitive@plt>
   18ea0:	strdeq	r6, [r2], -r8
   18ea4:	push	{r4, r5, r6, lr}
   18ea8:	mov	r4, r1
   18eac:	ldr	r1, [r1, #88]	; 0x58
   18eb0:	mov	r3, #0
   18eb4:	and	r2, r1, #1048576	; 0x100000
   18eb8:	orrs	r3, r2, r3
   18ebc:	bne	18ed4 <g_strcmp0@plt+0x2178>
   18ec0:	add	r0, r4, #8
   18ec4:	ldr	r1, [r4, #56]	; 0x38
   18ec8:	bl	18e60 <g_strcmp0@plt+0x2104>
   18ecc:	mov	r0, #0
   18ed0:	pop	{r4, r5, r6, pc}
   18ed4:	bl	1684c <gtk_entry_get_text_length@plt>
   18ed8:	cmp	r0, #0
   18edc:	beq	18ec0 <g_strcmp0@plt+0x2164>
   18ee0:	ldr	r1, [pc, #36]	; 18f0c <g_strcmp0@plt+0x21b0>
   18ee4:	ldr	r0, [r4, #56]	; 0x38
   18ee8:	bl	1615c <gtk_builder_get_object@plt>
   18eec:	mov	r5, r0
   18ef0:	bl	165dc <gtk_tree_view_get_type@plt>
   18ef4:	mov	r1, r0
   18ef8:	mov	r0, r5
   18efc:	bl	15e14 <g_type_check_instance_cast@plt>
   18f00:	bl	16744 <gtk_tree_view_get_selection@plt>
   18f04:	bl	16a20 <gtk_tree_selection_unselect_all@plt>
   18f08:	b	18ec0 <g_strcmp0@plt+0x2164>
   18f0c:			; <UNDEFINED> instruction: 0x00026eb8
   18f10:	push	{r4, r5, r6, r7, r8, r9, lr}
   18f14:	sub	sp, sp, #52	; 0x34
   18f18:	ldr	r8, [pc, #688]	; 191d0 <g_strcmp0@plt+0x2474>
   18f1c:	mov	r4, r0
   18f20:	mov	r0, #0
   18f24:	ldr	r3, [r8]
   18f28:	mov	r9, r1
   18f2c:	str	r3, [sp, #44]	; 0x2c
   18f30:	bl	1660c <gtk_window_new@plt>
   18f34:	str	r0, [r4, #108]	; 0x6c
   18f38:	mov	r6, r0
   18f3c:	bl	16d20 <gtk_window_get_type@plt>
   18f40:	mov	r5, r0
   18f44:	mov	r1, r0
   18f48:	mov	r0, r6
   18f4c:	bl	15e14 <g_type_check_instance_cast@plt>
   18f50:	ldr	r1, [pc, #636]	; 191d4 <g_strcmp0@plt+0x2478>
   18f54:	bl	1633c <gtk_window_set_title@plt>
   18f58:	mov	r1, r5
   18f5c:	ldr	r0, [r4, #108]	; 0x6c
   18f60:	bl	15e14 <g_type_check_instance_cast@plt>
   18f64:	mov	r1, #1
   18f68:	bl	16b40 <gtk_window_set_modal@plt>
   18f6c:	mov	r1, r5
   18f70:	ldr	r0, [r4, #108]	; 0x6c
   18f74:	bl	15e14 <g_type_check_instance_cast@plt>
   18f78:	mov	r1, #4
   18f7c:	bl	15dfc <gtk_window_set_position@plt>
   18f80:	mov	r1, r5
   18f84:	ldr	r0, [r4, #108]	; 0x6c
   18f88:	bl	15e14 <g_type_check_instance_cast@plt>
   18f8c:	mov	r1, #0
   18f90:	bl	15eb0 <gtk_window_set_decorated@plt>
   18f94:	mov	r1, r5
   18f98:	ldr	r0, [r4, #108]	; 0x6c
   18f9c:	bl	15e14 <g_type_check_instance_cast@plt>
   18fa0:	mov	r1, #1
   18fa4:	bl	1600c <gtk_window_set_destroy_with_parent@plt>
   18fa8:	mov	r1, r5
   18fac:	ldr	r0, [r4, #108]	; 0x6c
   18fb0:	bl	15e14 <g_type_check_instance_cast@plt>
   18fb4:	mov	r1, #1
   18fb8:	bl	1603c <gtk_window_set_skip_taskbar_hint@plt>
   18fbc:	mov	r1, r5
   18fc0:	ldr	r0, [r4, #108]	; 0x6c
   18fc4:	bl	15e14 <g_type_check_instance_cast@plt>
   18fc8:	mov	r6, r0
   18fcc:	ldr	r0, [r4, #48]	; 0x30
   18fd0:	bl	16a08 <gtk_application_get_active_window@plt>
   18fd4:	mov	r1, r0
   18fd8:	mov	r0, r6
   18fdc:	bl	16a2c <gtk_window_set_transient_for@plt>
   18fe0:	mov	r0, #0
   18fe4:	bl	15d30 <gtk_frame_new@plt>
   18fe8:	mov	r1, r5
   18fec:	mov	r6, r0
   18ff0:	ldr	r0, [r4, #108]	; 0x6c
   18ff4:	bl	15e14 <g_type_check_instance_cast@plt>
   18ff8:	mov	r7, r0
   18ffc:	bl	16150 <gtk_container_get_type@plt>
   19000:	mov	r5, r0
   19004:	mov	r1, r0
   19008:	mov	r0, r7
   1900c:	bl	15e14 <g_type_check_instance_cast@plt>
   19010:	mov	r1, r6
   19014:	bl	1636c <gtk_container_add@plt>
   19018:	bl	164d4 <gtk_event_box_new@plt>
   1901c:	ldr	r1, [pc, #436]	; 191d8 <g_strcmp0@plt+0x247c>
   19020:	mov	r7, r0
   19024:	add	r0, sp, #8
   19028:	bl	15bd4 <gdk_rgba_parse@plt>
   1902c:	add	r2, sp, #8
   19030:	mov	r0, r7
   19034:	mov	r1, #0
   19038:	bl	16cfc <gtk_widget_override_background_color@plt>
   1903c:	mov	r1, r5
   19040:	mov	r0, r6
   19044:	bl	15e14 <g_type_check_instance_cast@plt>
   19048:	mov	r1, r7
   1904c:	bl	1636c <gtk_container_add@plt>
   19050:	mov	r1, #5
   19054:	mov	r0, #1
   19058:	bl	15f4c <gtk_box_new@plt>
   1905c:	mov	r1, r5
   19060:	mov	r6, r0
   19064:	bl	15e14 <g_type_check_instance_cast@plt>
   19068:	mov	r1, #10
   1906c:	bl	16198 <gtk_container_set_border_width@plt>
   19070:	mov	r1, r5
   19074:	mov	r0, r7
   19078:	bl	15e14 <g_type_check_instance_cast@plt>
   1907c:	mov	r1, r6
   19080:	bl	1636c <gtk_container_add@plt>
   19084:	mov	r0, r9
   19088:	bl	162b8 <gtk_label_new@plt>
   1908c:	mov	r1, #3
   19090:	mov	r5, #5
   19094:	mov	r9, r0
   19098:	bl	16c54 <gtk_widget_set_halign@plt>
   1909c:	bl	163fc <gtk_box_get_type@plt>
   190a0:	mov	r7, r0
   190a4:	mov	r1, r0
   190a8:	mov	r0, r6
   190ac:	bl	15e14 <g_type_check_instance_cast@plt>
   190b0:	mov	r3, #0
   190b4:	mov	r2, r3
   190b8:	mov	r1, r9
   190bc:	str	r5, [sp]
   190c0:	bl	164bc <gtk_box_pack_start@plt>
   190c4:	ldr	r0, [pc, #264]	; 191d4 <g_strcmp0@plt+0x2478>
   190c8:	bl	162b8 <gtk_label_new@plt>
   190cc:	mov	r1, r7
   190d0:	str	r0, [r4, #116]	; 0x74
   190d4:	mov	r0, r6
   190d8:	bl	15e14 <g_type_check_instance_cast@plt>
   190dc:	mov	r3, #0
   190e0:	mov	r2, r3
   190e4:	str	r5, [sp]
   190e8:	ldr	r1, [r4, #116]	; 0x74
   190ec:	bl	164bc <gtk_box_pack_start@plt>
   190f0:	bl	165b8 <gtk_progress_bar_new@plt>
   190f4:	str	r0, [r4, #112]	; 0x70
   190f8:	mov	r9, r0
   190fc:	bl	164ec <gtk_progress_bar_get_type@plt>
   19100:	mov	r1, r0
   19104:	mov	r0, r9
   19108:	bl	15e14 <g_type_check_instance_cast@plt>
   1910c:	vldr	d0, [pc, #180]	; 191c8 <g_strcmp0@plt+0x246c>
   19110:	bl	161b0 <gtk_progress_bar_set_fraction@plt>
   19114:	ldr	r0, [r4, #112]	; 0x70
   19118:	mov	r1, #3
   1911c:	bl	16c54 <gtk_widget_set_halign@plt>
   19120:	mov	r1, r7
   19124:	mov	r0, r6
   19128:	bl	15e14 <g_type_check_instance_cast@plt>
   1912c:	mov	r3, #0
   19130:	mov	r2, r3
   19134:	str	r5, [sp]
   19138:	ldr	r1, [r4, #112]	; 0x70
   1913c:	bl	164bc <gtk_box_pack_start@plt>
   19140:	mov	r2, r5
   19144:	ldr	r1, [pc, #144]	; 191dc <g_strcmp0@plt+0x2480>
   19148:	mov	r0, #0
   1914c:	bl	1666c <dcgettext@plt>
   19150:	bl	161ec <gtk_button_new_with_label@plt>
   19154:	mov	r1, #3
   19158:	str	r0, [r4, #120]	; 0x78
   1915c:	bl	16c54 <gtk_widget_set_halign@plt>
   19160:	mov	r1, r7
   19164:	mov	r0, r6
   19168:	bl	15e14 <g_type_check_instance_cast@plt>
   1916c:	mov	r3, #0
   19170:	mov	r2, r3
   19174:	str	r5, [sp]
   19178:	ldr	r1, [r4, #120]	; 0x78
   1917c:	bl	164bc <gtk_box_pack_start@plt>
   19180:	mov	r2, #0
   19184:	mov	r3, r4
   19188:	ldr	r0, [r4, #120]	; 0x78
   1918c:	ldr	r1, [pc, #76]	; 191e0 <g_strcmp0@plt+0x2484>
   19190:	str	r2, [sp, #4]
   19194:	str	r2, [sp]
   19198:	ldr	r2, [pc, #68]	; 191e4 <g_strcmp0@plt+0x2488>
   1919c:	bl	16414 <g_signal_connect_data@plt>
   191a0:	ldr	r0, [r4, #108]	; 0x6c
   191a4:	bl	168d0 <gtk_widget_show_all@plt>
   191a8:	ldr	r2, [sp, #44]	; 0x2c
   191ac:	ldr	r3, [r8]
   191b0:	cmp	r2, r3
   191b4:	bne	191c0 <g_strcmp0@plt+0x2464>
   191b8:	add	sp, sp, #52	; 0x34
   191bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   191c0:	bl	165a0 <__stack_chk_fail@plt>
   191c4:	nop			; (mov r0, r0)
	...
   191d0:	andeq	ip, r3, r0, asr lr
   191d4:	ldrdeq	r7, [r2], -r0
   191d8:	andeq	r6, r2, ip, ror #29
   191dc:	andeq	r6, r2, ip, asr #20
   191e0:	andeq	r6, r2, r4, asr sl
   191e4:	andeq	r7, r1, r4, ror r4
   191e8:	push	{r4, lr}
   191ec:	mov	r4, r2
   191f0:	sub	sp, sp, #16
   191f4:	ldr	r1, [pc, #92]	; 19258 <g_strcmp0@plt+0x24fc>
   191f8:	mov	r2, #5
   191fc:	mov	r0, #0
   19200:	bl	1666c <dcgettext@plt>
   19204:	ldr	r3, [r4, #124]	; 0x7c
   19208:	add	r3, r3, #1
   1920c:	cmp	r3, #1
   19210:	str	r3, [r4, #124]	; 0x7c
   19214:	bgt	19224 <g_strcmp0@plt+0x24c8>
   19218:	mov	r1, r0
   1921c:	mov	r0, r4
   19220:	bl	18f10 <g_strcmp0@plt+0x21b4>
   19224:	ldr	r0, [r4, #12]
   19228:	bl	15cdc <g_cancellable_reset@plt>
   1922c:	ldr	r3, [pc, #40]	; 1925c <g_strcmp0@plt+0x2500>
   19230:	str	r4, [sp, #8]
   19234:	str	r3, [sp, #4]
   19238:	str	r4, [sp]
   1923c:	ldr	r3, [pc, #28]	; 19260 <g_strcmp0@plt+0x2504>
   19240:	ldr	r2, [r4, #12]
   19244:	ldr	r0, [r4, #104]	; 0x68
   19248:	mov	r1, #1
   1924c:	bl	16060 <pk_task_refresh_cache_async@plt>
   19250:	add	sp, sp, #16
   19254:	pop	{r4, pc}
   19258:	strdeq	r6, [r2], -r4
   1925c:	andeq	r7, r1, ip, lsr sl
   19260:	andeq	r7, r1, r4, lsl ip
   19264:	push	{r4, r5, r6, lr}
   19268:	mov	r4, r1
   1926c:	ldr	r0, [r1, #12]
   19270:	sub	sp, sp, #24
   19274:	bl	15cdc <g_cancellable_reset@plt>
   19278:	ldr	r0, [r4, #100]	; 0x64
   1927c:	bl	16984 <pk_package_sack_get_ids@plt>
   19280:	ldr	r3, [r4, #32]
   19284:	cmp	r3, #1
   19288:	mov	r5, r0
   1928c:	beq	192cc <g_strcmp0@plt+0x2570>
   19290:	cmp	r3, #2
   19294:	beq	1935c <g_strcmp0@plt+0x2600>
   19298:	ldr	r3, [r4, #128]	; 0x80
   1929c:	cmp	r3, #0
   192a0:	bne	192b4 <g_strcmp0@plt+0x2558>
   192a4:	mov	r0, r5
   192a8:	add	sp, sp, #24
   192ac:	pop	{r4, r5, r6, lr}
   192b0:	b	1654c <g_strfreev@plt>
   192b4:	mov	r0, r4
   192b8:	bl	17498 <g_strcmp0@plt+0x73c>
   192bc:	mov	r0, r5
   192c0:	add	sp, sp, #24
   192c4:	pop	{r4, r5, r6, lr}
   192c8:	b	1654c <g_strfreev@plt>
   192cc:	mov	r2, #5
   192d0:	ldr	r1, [pc, #252]	; 193d4 <g_strcmp0@plt+0x2678>
   192d4:	mov	r0, #0
   192d8:	bl	1666c <dcgettext@plt>
   192dc:	ldr	r3, [r4, #124]	; 0x7c
   192e0:	add	r3, r3, #1
   192e4:	cmp	r3, #1
   192e8:	str	r3, [r4, #124]	; 0x7c
   192ec:	ble	1934c <g_strcmp0@plt+0x25f0>
   192f0:	ldr	r3, [pc, #224]	; 193d8 <g_strcmp0@plt+0x267c>
   192f4:	str	r4, [sp, #8]
   192f8:	str	r3, [sp, #4]
   192fc:	str	r4, [sp]
   19300:	ldr	r3, [pc, #212]	; 193dc <g_strcmp0@plt+0x2680>
   19304:	ldr	r2, [r4, #12]
   19308:	mov	r1, r5
   1930c:	ldr	r0, [r4, #104]	; 0x68
   19310:	bl	168a0 <pk_task_install_packages_async@plt>
   19314:	ldr	r1, [pc, #196]	; 193e0 <g_strcmp0@plt+0x2684>
   19318:	ldr	r0, [r4, #56]	; 0x38
   1931c:	bl	1615c <gtk_builder_get_object@plt>
   19320:	mov	r4, r0
   19324:	bl	15db4 <gtk_widget_get_type@plt>
   19328:	mov	r1, r0
   1932c:	mov	r0, r4
   19330:	bl	15e14 <g_type_check_instance_cast@plt>
   19334:	mov	r1, #0
   19338:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1933c:	mov	r0, r5
   19340:	add	sp, sp, #24
   19344:	pop	{r4, r5, r6, lr}
   19348:	b	1654c <g_strfreev@plt>
   1934c:	mov	r1, r0
   19350:	mov	r0, r4
   19354:	bl	18f10 <g_strcmp0@plt+0x21b4>
   19358:	b	192f0 <g_strcmp0@plt+0x2594>
   1935c:	ldr	r1, [pc, #128]	; 193e4 <g_strcmp0@plt+0x2688>
   19360:	ldr	r0, [r4, #52]	; 0x34
   19364:	bl	15ba4 <g_settings_get_boolean@plt>
   19368:	mov	r2, #5
   1936c:	ldr	r1, [pc, #116]	; 193e8 <g_strcmp0@plt+0x268c>
   19370:	mov	r6, r0
   19374:	mov	r0, #0
   19378:	bl	1666c <dcgettext@plt>
   1937c:	ldr	r3, [r4, #124]	; 0x7c
   19380:	add	r3, r3, #1
   19384:	cmp	r3, #1
   19388:	str	r3, [r4, #124]	; 0x7c
   1938c:	bgt	1939c <g_strcmp0@plt+0x2640>
   19390:	mov	r1, r0
   19394:	mov	r0, r4
   19398:	bl	18f10 <g_strcmp0@plt+0x21b4>
   1939c:	ldr	r2, [r4, #12]
   193a0:	ldr	r0, [pc, #68]	; 193ec <g_strcmp0@plt+0x2690>
   193a4:	ldr	r1, [pc, #48]	; 193dc <g_strcmp0@plt+0x2680>
   193a8:	str	r2, [sp]
   193ac:	str	r1, [sp, #4]
   193b0:	str	r4, [sp, #16]
   193b4:	str	r4, [sp, #8]
   193b8:	str	r0, [sp, #12]
   193bc:	mov	r3, r6
   193c0:	mov	r2, #1
   193c4:	mov	r1, r5
   193c8:	ldr	r0, [r4, #104]	; 0x68
   193cc:	bl	16438 <pk_task_remove_packages_async@plt>
   193d0:	b	19314 <g_strcmp0@plt+0x25b8>
   193d4:	andeq	r6, r2, r0, lsr #30
   193d8:	andeq	ip, r1, ip, ror #13
   193dc:	andeq	r7, r1, r4, lsl ip
   193e0:	andeq	r6, r2, ip, lsl #23
   193e4:	andeq	r6, r2, r8, asr #30
   193e8:	andeq	r6, r2, ip, asr pc
   193ec:	andeq	ip, r1, r4, lsr #10
   193f0:	mov	r3, #1
   193f4:	str	r3, [r1, #128]	; 0x80
   193f8:	b	19264 <g_strcmp0@plt+0x2508>
   193fc:	push	{r4, r5, lr}
   19400:	mov	r4, r0
   19404:	sub	sp, sp, #12
   19408:	mov	r2, #5
   1940c:	ldr	r1, [pc, #96]	; 19474 <g_strcmp0@plt+0x2718>
   19410:	mov	r0, #0
   19414:	bl	1666c <dcgettext@plt>
   19418:	ldr	r3, [r4, #124]	; 0x7c
   1941c:	add	r3, r3, #1
   19420:	cmp	r3, #1
   19424:	str	r3, [r4, #124]	; 0x7c
   19428:	bgt	19438 <g_strcmp0@plt+0x26dc>
   1942c:	mov	r1, r0
   19430:	mov	r0, r4
   19434:	bl	18f10 <g_strcmp0@plt+0x21b4>
   19438:	ldr	r0, [r4, #12]
   1943c:	bl	15cdc <g_cancellable_reset@plt>
   19440:	ldr	r5, [r4, #104]	; 0x68
   19444:	bl	15f70 <pk_client_get_type@plt>
   19448:	mov	r1, r0
   1944c:	mov	r0, r5
   19450:	bl	15e14 <g_type_check_instance_cast@plt>
   19454:	ldr	r3, [pc, #28]	; 19478 <g_strcmp0@plt+0x271c>
   19458:	ldr	r2, [pc, #28]	; 1947c <g_strcmp0@plt+0x2720>
   1945c:	stm	sp, {r3, r4}
   19460:	mov	r3, r4
   19464:	ldr	r1, [r4, #12]
   19468:	bl	15fc4 <pk_client_get_categories_async@plt>
   1946c:	add	sp, sp, #12
   19470:	pop	{r4, r5, pc}
   19474:	andeq	r6, r2, r0, lsl #31
   19478:	andeq	r8, r1, ip, lsr sl
   1947c:	andeq	r7, r1, r4, lsl ip
   19480:	push	{r4, r5, r6, r7, lr}
   19484:	sub	sp, sp, #44	; 0x2c
   19488:	ldr	r4, [pc, #192]	; 19550 <g_strcmp0@plt+0x27f4>
   1948c:	mov	r7, r1
   19490:	ldr	r1, [pc, #188]	; 19554 <g_strcmp0@plt+0x27f8>
   19494:	ldr	ip, [r4]
   19498:	mov	r5, r2
   1949c:	str	ip, [sp, #36]	; 0x24
   194a0:	bl	1615c <gtk_builder_get_object@plt>
   194a4:	mov	r6, r0
   194a8:	bl	165dc <gtk_tree_view_get_type@plt>
   194ac:	mov	r1, r0
   194b0:	mov	r0, r6
   194b4:	bl	15e14 <g_type_check_instance_cast@plt>
   194b8:	bl	16744 <gtk_tree_view_get_selection@plt>
   194bc:	add	r2, sp, #20
   194c0:	add	r1, sp, #16
   194c4:	bl	16714 <gtk_tree_selection_get_selected@plt>
   194c8:	subs	r6, r0, #0
   194cc:	beq	19538 <g_strcmp0@plt+0x27dc>
   194d0:	cmp	r5, #0
   194d4:	ldr	r0, [sp, #16]
   194d8:	beq	1951c <g_strcmp0@plt+0x27c0>
   194dc:	mov	r2, #6
   194e0:	mvn	ip, #0
   194e4:	str	r2, [sp]
   194e8:	str	r5, [sp, #4]
   194ec:	mov	r3, r7
   194f0:	add	r1, sp, #20
   194f4:	str	ip, [sp, #8]
   194f8:	mov	r2, #5
   194fc:	bl	16c6c <gtk_tree_model_get@plt>
   19500:	ldr	r2, [sp, #36]	; 0x24
   19504:	ldr	r3, [r4]
   19508:	mov	r0, r6
   1950c:	cmp	r2, r3
   19510:	bne	1954c <g_strcmp0@plt+0x27f0>
   19514:	add	sp, sp, #44	; 0x2c
   19518:	pop	{r4, r5, r6, r7, pc}
   1951c:	mvn	r2, #0
   19520:	str	r2, [sp]
   19524:	mov	r3, r7
   19528:	add	r1, sp, #20
   1952c:	mov	r2, #5
   19530:	bl	16c6c <gtk_tree_model_get@plt>
   19534:	b	19500 <g_strcmp0@plt+0x27a4>
   19538:	ldr	r2, [pc, #24]	; 19558 <g_strcmp0@plt+0x27fc>
   1953c:	mov	r1, #16
   19540:	ldr	r0, [pc, #20]	; 1955c <g_strcmp0@plt+0x2800>
   19544:	bl	15ebc <g_log@plt>
   19548:	b	19500 <g_strcmp0@plt+0x27a4>
   1954c:	bl	165a0 <__stack_chk_fail@plt>
   19550:	andeq	ip, r3, r0, asr lr
   19554:	andeq	r6, r2, ip, lsl #23
   19558:	andeq	r6, r2, r4, lsr #31
   1955c:	andeq	r6, r2, r8, lsr #21
   19560:	push	{r4, r5, r6, r7, lr}
   19564:	mov	r6, #0
   19568:	ldr	r7, [pc, #252]	; 1966c <g_strcmp0@plt+0x2910>
   1956c:	sub	sp, sp, #44	; 0x2c
   19570:	ldr	r0, [r1, #56]	; 0x38
   19574:	ldr	r3, [r7]
   19578:	mov	r4, r1
   1957c:	mov	r2, r6
   19580:	add	r1, sp, #32
   19584:	str	r3, [sp, #36]	; 0x24
   19588:	str	r6, [sp, #32]
   1958c:	bl	19480 <g_strcmp0@plt+0x2724>
   19590:	subs	r5, r0, #0
   19594:	beq	19654 <g_strcmp0@plt+0x28f8>
   19598:	ldr	r0, [r4, #12]
   1959c:	bl	15cdc <g_cancellable_reset@plt>
   195a0:	mov	r0, r6
   195a4:	mov	r2, #5
   195a8:	ldr	r1, [pc, #192]	; 19670 <g_strcmp0@plt+0x2914>
   195ac:	bl	1666c <dcgettext@plt>
   195b0:	ldr	r3, [r4, #124]	; 0x7c
   195b4:	add	r3, r3, #1
   195b8:	cmp	r3, #1
   195bc:	str	r3, [r4, #124]	; 0x7c
   195c0:	ble	19644 <g_strcmp0@plt+0x28e8>
   195c4:	ldr	r0, [sp, #32]
   195c8:	bl	15d00 <pk_package_ids_from_id@plt>
   195cc:	ldr	r6, [r4, #104]	; 0x68
   195d0:	mov	r5, r0
   195d4:	bl	15f70 <pk_client_get_type@plt>
   195d8:	mov	r1, r0
   195dc:	mov	r0, r6
   195e0:	bl	15e14 <g_type_check_instance_cast@plt>
   195e4:	ldr	r3, [r4, #12]
   195e8:	ldr	r2, [pc, #132]	; 19674 <g_strcmp0@plt+0x2918>
   195ec:	ldr	r1, [pc, #132]	; 19678 <g_strcmp0@plt+0x291c>
   195f0:	str	r3, [sp, #8]
   195f4:	mov	r3, #1
   195f8:	str	r2, [sp, #12]
   195fc:	str	r3, [sp, #4]
   19600:	str	r5, [sp]
   19604:	str	r4, [sp, #24]
   19608:	str	r4, [sp, #16]
   1960c:	str	r1, [sp, #20]
   19610:	mov	r2, #2
   19614:	mov	r3, #0
   19618:	bl	15f94 <pk_client_required_by_async@plt>
   1961c:	ldr	r0, [sp, #32]
   19620:	bl	16660 <g_free@plt>
   19624:	mov	r0, r5
   19628:	bl	1654c <g_strfreev@plt>
   1962c:	ldr	r2, [sp, #36]	; 0x24
   19630:	ldr	r3, [r7]
   19634:	cmp	r2, r3
   19638:	bne	19668 <g_strcmp0@plt+0x290c>
   1963c:	add	sp, sp, #44	; 0x2c
   19640:	pop	{r4, r5, r6, r7, pc}
   19644:	mov	r1, r0
   19648:	mov	r0, r4
   1964c:	bl	18f10 <g_strcmp0@plt+0x21b4>
   19650:	b	195c4 <g_strcmp0@plt+0x2868>
   19654:	ldr	r2, [pc, #32]	; 1967c <g_strcmp0@plt+0x2920>
   19658:	mov	r1, #16
   1965c:	ldr	r0, [pc, #28]	; 19680 <g_strcmp0@plt+0x2924>
   19660:	bl	15ebc <g_log@plt>
   19664:	b	1961c <g_strcmp0@plt+0x28c0>
   19668:	bl	165a0 <__stack_chk_fail@plt>
   1966c:	andeq	ip, r3, r0, asr lr
   19670:	andeq	r6, r2, r8, asr #31
   19674:	andeq	r7, r1, r4, lsl ip
   19678:	andeq	r9, r1, r4, lsl #13
   1967c:			; <UNDEFINED> instruction: 0x00026fb4
   19680:	andeq	r6, r2, r8, lsr #21
   19684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19688:	mov	r8, r2
   1968c:	ldr	r6, [pc, #900]	; 19a18 <g_strcmp0@plt+0x2cbc>
   19690:	sub	sp, sp, #36	; 0x24
   19694:	mov	r3, #0
   19698:	ldr	r2, [r6]
   1969c:	str	r3, [sp, #20]
   196a0:	str	r2, [sp, #28]
   196a4:	add	r2, sp, #20
   196a8:	str	r3, [sp, #24]
   196ac:	bl	161a4 <pk_client_generic_finish@plt>
   196b0:	ldr	r3, [r8, #124]	; 0x7c
   196b4:	sub	r3, r3, #1
   196b8:	cmp	r3, #0
   196bc:	str	r3, [r8, #124]	; 0x7c
   196c0:	mov	r5, r0
   196c4:	ldr	r0, [r8, #108]	; 0x6c
   196c8:	bgt	196d0 <g_strcmp0@plt+0x2974>
   196cc:	bl	16498 <gtk_widget_destroy@plt>
   196d0:	cmp	r5, #0
   196d4:	beq	1998c <g_strcmp0@plt+0x2c30>
   196d8:	mov	r0, r5
   196dc:	bl	15f1c <pk_results_get_error_code@plt>
   196e0:	subs	r4, r0, #0
   196e4:	beq	197d4 <g_strcmp0@plt+0x2a78>
   196e8:	bl	16018 <pk_error_get_code@plt>
   196ec:	bl	16228 <pk_error_enum_to_string@plt>
   196f0:	mov	r7, r0
   196f4:	mov	r0, r4
   196f8:	bl	15fdc <pk_error_get_details@plt>
   196fc:	mov	r3, r7
   19700:	ldr	r2, [pc, #788]	; 19a1c <g_strcmp0@plt+0x2cc0>
   19704:	mov	r1, #16
   19708:	str	r0, [sp]
   1970c:	ldr	r0, [pc, #780]	; 19a20 <g_strcmp0@plt+0x2cc4>
   19710:	bl	15ebc <g_log@plt>
   19714:	mov	r0, r4
   19718:	bl	16018 <pk_error_get_code@plt>
   1971c:	cmp	r0, #17
   19720:	beq	19784 <g_strcmp0@plt+0x2a28>
   19724:	ldr	r1, [pc, #760]	; 19a24 <g_strcmp0@plt+0x2cc8>
   19728:	ldr	r0, [r8, #56]	; 0x38
   1972c:	bl	1615c <gtk_builder_get_object@plt>
   19730:	mov	r7, r0
   19734:	bl	16d20 <gtk_window_get_type@plt>
   19738:	mov	r1, r0
   1973c:	mov	r0, r7
   19740:	bl	15e14 <g_type_check_instance_cast@plt>
   19744:	mov	r7, r0
   19748:	mov	r0, r4
   1974c:	bl	16018 <pk_error_get_code@plt>
   19750:	bl	1ef7c <g_strcmp0@plt+0x8220>
   19754:	mov	r8, r0
   19758:	mov	r0, r4
   1975c:	bl	16018 <pk_error_get_code@plt>
   19760:	bl	1f60c <g_strcmp0@plt+0x88b0>
   19764:	mov	r9, r0
   19768:	mov	r0, r4
   1976c:	bl	15fdc <pk_error_get_details@plt>
   19770:	mov	r2, r9
   19774:	mov	r1, r8
   19778:	mov	r3, r0
   1977c:	mov	r0, r7
   19780:	bl	25660 <g_strcmp0@plt+0xe904>
   19784:	ldr	r0, [sp, #24]
   19788:	bl	16660 <g_free@plt>
   1978c:	mov	r0, #0
   19790:	bl	1654c <g_strfreev@plt>
   19794:	mov	r0, #0
   19798:	bl	16660 <g_free@plt>
   1979c:	mov	r0, #0
   197a0:	bl	16660 <g_free@plt>
   197a4:	mov	r0, #0
   197a8:	bl	16660 <g_free@plt>
   197ac:	mov	r0, r4
   197b0:	bl	16990 <g_object_unref@plt>
   197b4:	mov	r0, r5
   197b8:	bl	16990 <g_object_unref@plt>
   197bc:	ldr	r2, [sp, #28]
   197c0:	ldr	r3, [r6]
   197c4:	cmp	r2, r3
   197c8:	bne	19a14 <g_strcmp0@plt+0x2cb8>
   197cc:	add	sp, sp, #36	; 0x24
   197d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197d4:	mov	r2, r4
   197d8:	add	r1, sp, #24
   197dc:	ldr	r0, [r8, #56]	; 0x38
   197e0:	bl	19480 <g_strcmp0@plt+0x2724>
   197e4:	subs	r7, r0, #0
   197e8:	beq	199d8 <g_strcmp0@plt+0x2c7c>
   197ec:	mov	r0, r5
   197f0:	bl	15c04 <pk_results_get_package_array@plt>
   197f4:	ldr	r1, [pc, #552]	; 19a24 <g_strcmp0@plt+0x2cc8>
   197f8:	mov	r7, r0
   197fc:	ldr	r0, [r8, #56]	; 0x38
   19800:	bl	1615c <gtk_builder_get_object@plt>
   19804:	mov	r8, r0
   19808:	bl	16d20 <gtk_window_get_type@plt>
   1980c:	mov	r1, r0
   19810:	mov	r0, r8
   19814:	bl	15e14 <g_type_check_instance_cast@plt>
   19818:	ldr	r3, [r7, #4]
   1981c:	cmp	r3, #0
   19820:	mov	sl, r0
   19824:	beq	19944 <g_strcmp0@plt+0x2be8>
   19828:	ldr	r0, [sp, #24]
   1982c:	bl	15d00 <pk_package_ids_from_id@plt>
   19830:	mov	r8, #5
   19834:	mov	fp, r0
   19838:	bl	214ac <g_strcmp0@plt+0xa750>
   1983c:	ldr	r3, [r7, #4]
   19840:	ldr	r2, [pc, #480]	; 19a28 <g_strcmp0@plt+0x2ccc>
   19844:	str	r8, [sp]
   19848:	ldr	r1, [pc, #476]	; 19a2c <g_strcmp0@plt+0x2cd0>
   1984c:	mov	r4, r0
   19850:	mov	r0, #0
   19854:	bl	16204 <dcngettext@plt>
   19858:	mov	r2, r4
   1985c:	ldr	r1, [r7, #4]
   19860:	bl	161e0 <g_strdup_printf@plt>
   19864:	ldr	r2, [pc, #452]	; 19a30 <g_strcmp0@plt+0x2cd4>
   19868:	ldr	r3, [r7, #4]
   1986c:	mov	r1, r2
   19870:	str	r8, [sp]
   19874:	mov	r9, r0
   19878:	mov	r0, #0
   1987c:	bl	16204 <dcngettext@plt>
   19880:	mov	r1, r4
   19884:	bl	161e0 <g_strdup_printf@plt>
   19888:	ldr	r3, [pc, #420]	; 19a34 <g_strcmp0@plt+0x2cd8>
   1988c:	mov	r2, #0
   19890:	mov	r1, #2
   19894:	str	r3, [sp]
   19898:	str	r9, [sp, #4]
   1989c:	mov	r3, #1
   198a0:	mov	r8, r0
   198a4:	mov	r0, sl
   198a8:	bl	16bc4 <gtk_message_dialog_new@plt>
   198ac:	mov	sl, r0
   198b0:	bl	166cc <gtk_message_dialog_get_type@plt>
   198b4:	mov	r1, r0
   198b8:	mov	r0, sl
   198bc:	bl	15e14 <g_type_check_instance_cast@plt>
   198c0:	mov	r2, r8
   198c4:	ldr	r1, [pc, #360]	; 19a34 <g_strcmp0@plt+0x2cd8>
   198c8:	bl	16654 <gtk_message_dialog_format_secondary_markup@plt>
   198cc:	bl	16720 <gtk_dialog_get_type@plt>
   198d0:	mov	r1, r0
   198d4:	str	r0, [sp, #12]
   198d8:	mov	r0, sl
   198dc:	bl	15e14 <g_type_check_instance_cast@plt>
   198e0:	mov	r1, r7
   198e4:	bl	21594 <g_strcmp0@plt+0xa838>
   198e8:	ldr	r3, [sp, #12]
   198ec:	mov	r0, sl
   198f0:	mov	r1, r3
   198f4:	bl	15e14 <g_type_check_instance_cast@plt>
   198f8:	bl	168f4 <gtk_dialog_run@plt>
   198fc:	bl	15db4 <gtk_widget_get_type@plt>
   19900:	mov	r1, r0
   19904:	mov	r0, sl
   19908:	bl	15e14 <g_type_check_instance_cast@plt>
   1990c:	bl	16498 <gtk_widget_destroy@plt>
   19910:	ldr	r0, [sp, #24]
   19914:	bl	16660 <g_free@plt>
   19918:	mov	r0, fp
   1991c:	bl	1654c <g_strfreev@plt>
   19920:	mov	r0, r4
   19924:	bl	16660 <g_free@plt>
   19928:	mov	r0, r9
   1992c:	bl	16660 <g_free@plt>
   19930:	mov	r0, r8
   19934:	bl	16660 <g_free@plt>
   19938:	mov	r0, r7
   1993c:	bl	16af8 <g_ptr_array_unref@plt>
   19940:	b	197b4 <g_strcmp0@plt+0x2a58>
   19944:	mov	r2, #5
   19948:	ldr	r1, [pc, #232]	; 19a38 <g_strcmp0@plt+0x2cdc>
   1994c:	mov	r0, r4
   19950:	bl	1666c <dcgettext@plt>
   19954:	mov	r2, #5
   19958:	ldr	r1, [pc, #220]	; 19a3c <g_strcmp0@plt+0x2ce0>
   1995c:	mov	fp, r4
   19960:	mov	r9, r4
   19964:	mov	r8, r0
   19968:	mov	r0, r4
   1996c:	bl	1666c <dcgettext@plt>
   19970:	mov	r1, r8
   19974:	mov	r3, r4
   19978:	mov	r8, r4
   1997c:	mov	r2, r0
   19980:	mov	r0, sl
   19984:	bl	25660 <g_strcmp0@plt+0xe904>
   19988:	b	19910 <g_strcmp0@plt+0x2bb4>
   1998c:	ldr	r3, [sp, #20]
   19990:	ldr	r2, [pc, #168]	; 19a40 <g_strcmp0@plt+0x2ce4>
   19994:	mov	r1, #16
   19998:	ldr	r3, [r3, #8]
   1999c:	ldr	r0, [pc, #124]	; 19a20 <g_strcmp0@plt+0x2cc4>
   199a0:	bl	15ebc <g_log@plt>
   199a4:	ldr	r0, [sp, #20]
   199a8:	bl	15d3c <g_error_free@plt>
   199ac:	ldr	r0, [sp, #24]
   199b0:	bl	16660 <g_free@plt>
   199b4:	mov	r0, r5
   199b8:	bl	1654c <g_strfreev@plt>
   199bc:	mov	r0, r5
   199c0:	bl	16660 <g_free@plt>
   199c4:	mov	r0, r5
   199c8:	bl	16660 <g_free@plt>
   199cc:	mov	r0, r5
   199d0:	bl	16660 <g_free@plt>
   199d4:	b	197bc <g_strcmp0@plt+0x2a60>
   199d8:	ldr	r2, [pc, #100]	; 19a44 <g_strcmp0@plt+0x2ce8>
   199dc:	mov	r1, #16
   199e0:	ldr	r0, [pc, #56]	; 19a20 <g_strcmp0@plt+0x2cc4>
   199e4:	bl	15ebc <g_log@plt>
   199e8:	ldr	r0, [sp, #24]
   199ec:	bl	16660 <g_free@plt>
   199f0:	mov	r0, r7
   199f4:	bl	1654c <g_strfreev@plt>
   199f8:	mov	r0, r7
   199fc:	bl	16660 <g_free@plt>
   19a00:	mov	r0, r7
   19a04:	bl	16660 <g_free@plt>
   19a08:	mov	r0, r7
   19a0c:	bl	16660 <g_free@plt>
   19a10:	b	197b4 <g_strcmp0@plt+0x2a58>
   19a14:	bl	165a0 <__stack_chk_fail@plt>
   19a18:	andeq	ip, r3, r0, asr lr
   19a1c:	andeq	r7, r2, ip
   19a20:	andeq	r6, r2, r8, lsr #21
   19a24:	andeq	r6, r2, r8, lsl #17
   19a28:	andeq	r7, r2, r0, rrx
   19a2c:	andeq	r7, r2, r8, ror r0
   19a30:	muleq	r2, r0, r0
   19a34:	andeq	r7, r2, r4, lsl r7
   19a38:	andeq	r7, r2, ip, lsr #32
   19a3c:	andeq	r7, r2, r8, lsr r0
   19a40:	strdeq	r6, [r2], -r0
   19a44:			; <UNDEFINED> instruction: 0x00026fb4
   19a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a4c:	mov	r5, r2
   19a50:	ldr	r7, [pc, #832]	; 19d98 <g_strcmp0@plt+0x303c>
   19a54:	sub	sp, sp, #36	; 0x24
   19a58:	mov	r3, #0
   19a5c:	ldr	r2, [r7]
   19a60:	str	r3, [sp, #20]
   19a64:	str	r2, [sp, #28]
   19a68:	add	r2, sp, #20
   19a6c:	str	r3, [sp, #24]
   19a70:	bl	161a4 <pk_client_generic_finish@plt>
   19a74:	ldr	r3, [r5, #124]	; 0x7c
   19a78:	sub	r3, r3, #1
   19a7c:	cmp	r3, #0
   19a80:	str	r3, [r5, #124]	; 0x7c
   19a84:	mov	r6, r0
   19a88:	ldr	r0, [r5, #108]	; 0x6c
   19a8c:	bgt	19a94 <g_strcmp0@plt+0x2d38>
   19a90:	bl	16498 <gtk_widget_destroy@plt>
   19a94:	cmp	r6, #0
   19a98:	beq	19d38 <g_strcmp0@plt+0x2fdc>
   19a9c:	mov	r0, r6
   19aa0:	bl	15f1c <pk_results_get_error_code@plt>
   19aa4:	subs	r4, r0, #0
   19aa8:	beq	19ba8 <g_strcmp0@plt+0x2e4c>
   19aac:	bl	16018 <pk_error_get_code@plt>
   19ab0:	bl	16228 <pk_error_enum_to_string@plt>
   19ab4:	mov	r8, r0
   19ab8:	mov	r0, r4
   19abc:	bl	15fdc <pk_error_get_details@plt>
   19ac0:	mov	r3, r8
   19ac4:	ldr	r2, [pc, #720]	; 19d9c <g_strcmp0@plt+0x3040>
   19ac8:	mov	r1, #16
   19acc:	str	r0, [sp]
   19ad0:	ldr	r0, [pc, #712]	; 19da0 <g_strcmp0@plt+0x3044>
   19ad4:	bl	15ebc <g_log@plt>
   19ad8:	mov	r0, r4
   19adc:	bl	16018 <pk_error_get_code@plt>
   19ae0:	cmp	r0, #17
   19ae4:	beq	19b48 <g_strcmp0@plt+0x2dec>
   19ae8:	ldr	r1, [pc, #692]	; 19da4 <g_strcmp0@plt+0x3048>
   19aec:	ldr	r0, [r5, #56]	; 0x38
   19af0:	bl	1615c <gtk_builder_get_object@plt>
   19af4:	mov	r5, r0
   19af8:	bl	16d20 <gtk_window_get_type@plt>
   19afc:	mov	r1, r0
   19b00:	mov	r0, r5
   19b04:	bl	15e14 <g_type_check_instance_cast@plt>
   19b08:	mov	r5, r0
   19b0c:	mov	r0, r4
   19b10:	bl	16018 <pk_error_get_code@plt>
   19b14:	bl	1ef7c <g_strcmp0@plt+0x8220>
   19b18:	mov	r8, r0
   19b1c:	mov	r0, r4
   19b20:	bl	16018 <pk_error_get_code@plt>
   19b24:	bl	1f60c <g_strcmp0@plt+0x88b0>
   19b28:	mov	r9, r0
   19b2c:	mov	r0, r4
   19b30:	bl	15fdc <pk_error_get_details@plt>
   19b34:	mov	r2, r9
   19b38:	mov	r1, r8
   19b3c:	mov	r3, r0
   19b40:	mov	r0, r5
   19b44:	bl	25660 <g_strcmp0@plt+0xe904>
   19b48:	mov	r0, r4
   19b4c:	bl	16990 <g_object_unref@plt>
   19b50:	mov	r5, #0
   19b54:	mov	r9, r5
   19b58:	mov	r8, r5
   19b5c:	mov	r4, r5
   19b60:	mov	r0, r6
   19b64:	bl	16990 <g_object_unref@plt>
   19b68:	ldr	r0, [sp, #24]
   19b6c:	bl	16660 <g_free@plt>
   19b70:	mov	r0, r5
   19b74:	bl	1654c <g_strfreev@plt>
   19b78:	mov	r0, r4
   19b7c:	bl	16660 <g_free@plt>
   19b80:	mov	r0, r8
   19b84:	bl	16660 <g_free@plt>
   19b88:	mov	r0, r9
   19b8c:	bl	16660 <g_free@plt>
   19b90:	ldr	r2, [sp, #28]
   19b94:	ldr	r3, [r7]
   19b98:	cmp	r2, r3
   19b9c:	bne	19d94 <g_strcmp0@plt+0x3038>
   19ba0:	add	sp, sp, #36	; 0x24
   19ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ba8:	mov	r0, r6
   19bac:	bl	15c04 <pk_results_get_package_array@plt>
   19bb0:	mov	r2, r4
   19bb4:	add	r1, sp, #24
   19bb8:	mov	sl, r0
   19bbc:	ldr	r0, [r5, #56]	; 0x38
   19bc0:	bl	19480 <g_strcmp0@plt+0x2724>
   19bc4:	cmp	r0, #0
   19bc8:	beq	19d6c <g_strcmp0@plt+0x3010>
   19bcc:	ldr	r1, [pc, #464]	; 19da4 <g_strcmp0@plt+0x3048>
   19bd0:	ldr	r0, [r5, #56]	; 0x38
   19bd4:	bl	1615c <gtk_builder_get_object@plt>
   19bd8:	mov	r5, r0
   19bdc:	bl	16d20 <gtk_window_get_type@plt>
   19be0:	mov	r1, r0
   19be4:	mov	r0, r5
   19be8:	bl	15e14 <g_type_check_instance_cast@plt>
   19bec:	ldr	r3, [sl, #4]
   19bf0:	cmp	r3, #0
   19bf4:	mov	fp, r0
   19bf8:	beq	19cf0 <g_strcmp0@plt+0x2f94>
   19bfc:	ldr	r0, [sp, #24]
   19c00:	bl	15d00 <pk_package_ids_from_id@plt>
   19c04:	mov	r9, #5
   19c08:	mov	r5, r0
   19c0c:	bl	214ac <g_strcmp0@plt+0xa750>
   19c10:	ldr	r3, [sl, #4]
   19c14:	ldr	r2, [pc, #396]	; 19da8 <g_strcmp0@plt+0x304c>
   19c18:	str	r9, [sp]
   19c1c:	ldr	r1, [pc, #392]	; 19dac <g_strcmp0@plt+0x3050>
   19c20:	mov	r4, r0
   19c24:	mov	r0, #0
   19c28:	bl	16204 <dcngettext@plt>
   19c2c:	mov	r2, r4
   19c30:	ldr	r1, [sl, #4]
   19c34:	bl	161e0 <g_strdup_printf@plt>
   19c38:	ldr	r2, [pc, #368]	; 19db0 <g_strcmp0@plt+0x3054>
   19c3c:	ldr	r3, [sl, #4]
   19c40:	mov	r1, r2
   19c44:	str	r9, [sp]
   19c48:	mov	r8, r0
   19c4c:	mov	r0, #0
   19c50:	bl	16204 <dcngettext@plt>
   19c54:	mov	r1, r4
   19c58:	bl	161e0 <g_strdup_printf@plt>
   19c5c:	ldr	r3, [pc, #336]	; 19db4 <g_strcmp0@plt+0x3058>
   19c60:	mov	r2, #0
   19c64:	mov	r1, #2
   19c68:	str	r3, [sp]
   19c6c:	str	r8, [sp, #4]
   19c70:	mov	r3, #1
   19c74:	mov	r9, r0
   19c78:	mov	r0, fp
   19c7c:	bl	16bc4 <gtk_message_dialog_new@plt>
   19c80:	mov	fp, r0
   19c84:	bl	166cc <gtk_message_dialog_get_type@plt>
   19c88:	mov	r1, r0
   19c8c:	mov	r0, fp
   19c90:	bl	15e14 <g_type_check_instance_cast@plt>
   19c94:	mov	r2, r9
   19c98:	ldr	r1, [pc, #276]	; 19db4 <g_strcmp0@plt+0x3058>
   19c9c:	bl	16654 <gtk_message_dialog_format_secondary_markup@plt>
   19ca0:	bl	16720 <gtk_dialog_get_type@plt>
   19ca4:	mov	r1, r0
   19ca8:	str	r0, [sp, #12]
   19cac:	mov	r0, fp
   19cb0:	bl	15e14 <g_type_check_instance_cast@plt>
   19cb4:	mov	r1, sl
   19cb8:	bl	21594 <g_strcmp0@plt+0xa838>
   19cbc:	ldr	r3, [sp, #12]
   19cc0:	mov	r0, fp
   19cc4:	mov	r1, r3
   19cc8:	bl	15e14 <g_type_check_instance_cast@plt>
   19ccc:	bl	168f4 <gtk_dialog_run@plt>
   19cd0:	bl	15db4 <gtk_widget_get_type@plt>
   19cd4:	mov	r1, r0
   19cd8:	mov	r0, fp
   19cdc:	bl	15e14 <g_type_check_instance_cast@plt>
   19ce0:	bl	16498 <gtk_widget_destroy@plt>
   19ce4:	mov	r0, sl
   19ce8:	bl	16af8 <g_ptr_array_unref@plt>
   19cec:	b	19b60 <g_strcmp0@plt+0x2e04>
   19cf0:	mov	r2, #5
   19cf4:	ldr	r1, [pc, #188]	; 19db8 <g_strcmp0@plt+0x305c>
   19cf8:	mov	r0, r4
   19cfc:	bl	1666c <dcgettext@plt>
   19d00:	mov	r2, #5
   19d04:	ldr	r1, [pc, #176]	; 19dbc <g_strcmp0@plt+0x3060>
   19d08:	mov	r9, r4
   19d0c:	mov	r8, r4
   19d10:	mov	r5, r0
   19d14:	mov	r0, r4
   19d18:	bl	1666c <dcgettext@plt>
   19d1c:	mov	r1, r5
   19d20:	mov	r3, r4
   19d24:	mov	r5, r4
   19d28:	mov	r2, r0
   19d2c:	mov	r0, fp
   19d30:	bl	25660 <g_strcmp0@plt+0xe904>
   19d34:	b	19ce4 <g_strcmp0@plt+0x2f88>
   19d38:	ldr	r3, [sp, #20]
   19d3c:	ldr	r2, [pc, #124]	; 19dc0 <g_strcmp0@plt+0x3064>
   19d40:	mov	r1, #16
   19d44:	ldr	r3, [r3, #8]
   19d48:	ldr	r0, [pc, #80]	; 19da0 <g_strcmp0@plt+0x3044>
   19d4c:	bl	15ebc <g_log@plt>
   19d50:	ldr	r0, [sp, #20]
   19d54:	mov	r5, r6
   19d58:	mov	r9, r6
   19d5c:	mov	r8, r6
   19d60:	mov	r4, r6
   19d64:	bl	15d3c <g_error_free@plt>
   19d68:	b	19b68 <g_strcmp0@plt+0x2e0c>
   19d6c:	ldr	r2, [pc, #80]	; 19dc4 <g_strcmp0@plt+0x3068>
   19d70:	mov	r1, #16
   19d74:	ldr	r0, [pc, #36]	; 19da0 <g_strcmp0@plt+0x3044>
   19d78:	bl	15ebc <g_log@plt>
   19d7c:	cmp	sl, #0
   19d80:	mov	r5, r4
   19d84:	mov	r9, r4
   19d88:	mov	r8, r4
   19d8c:	bne	19ce4 <g_strcmp0@plt+0x2f88>
   19d90:	b	19b60 <g_strcmp0@plt+0x2e04>
   19d94:	bl	165a0 <__stack_chk_fail@plt>
   19d98:	andeq	ip, r3, r0, asr lr
   19d9c:	andeq	r7, r2, r4, ror #1
   19da0:	andeq	r6, r2, r8, lsr #21
   19da4:	andeq	r6, r2, r8, lsl #17
   19da8:	andeq	r7, r2, r0, lsr r1
   19dac:	andeq	r7, r2, ip, asr r1
   19db0:	andeq	r7, r2, r8, lsl #3
   19db4:	andeq	r7, r2, r4, lsl r7
   19db8:	andeq	r7, r2, ip, lsr #32
   19dbc:	andeq	r7, r2, r4, lsl #2
   19dc0:	andeq	r7, r2, r8, asr #1
   19dc4:			; <UNDEFINED> instruction: 0x00026fb4
   19dc8:	push	{r4, r5, r6, r7, lr}
   19dcc:	mov	r6, #0
   19dd0:	ldr	r7, [pc, #252]	; 19ed4 <g_strcmp0@plt+0x3178>
   19dd4:	sub	sp, sp, #44	; 0x2c
   19dd8:	ldr	r0, [r1, #56]	; 0x38
   19ddc:	ldr	r3, [r7]
   19de0:	mov	r4, r1
   19de4:	mov	r2, r6
   19de8:	add	r1, sp, #32
   19dec:	str	r3, [sp, #36]	; 0x24
   19df0:	str	r6, [sp, #32]
   19df4:	bl	19480 <g_strcmp0@plt+0x2724>
   19df8:	subs	r5, r0, #0
   19dfc:	beq	19ebc <g_strcmp0@plt+0x3160>
   19e00:	ldr	r0, [r4, #12]
   19e04:	bl	15cdc <g_cancellable_reset@plt>
   19e08:	mov	r0, r6
   19e0c:	mov	r2, #5
   19e10:	ldr	r1, [pc, #192]	; 19ed8 <g_strcmp0@plt+0x317c>
   19e14:	bl	1666c <dcgettext@plt>
   19e18:	ldr	r3, [r4, #124]	; 0x7c
   19e1c:	add	r3, r3, #1
   19e20:	cmp	r3, #1
   19e24:	str	r3, [r4, #124]	; 0x7c
   19e28:	ble	19eac <g_strcmp0@plt+0x3150>
   19e2c:	ldr	r0, [sp, #32]
   19e30:	bl	15d00 <pk_package_ids_from_id@plt>
   19e34:	ldr	r6, [r4, #104]	; 0x68
   19e38:	mov	r5, r0
   19e3c:	bl	15f70 <pk_client_get_type@plt>
   19e40:	mov	r1, r0
   19e44:	mov	r0, r6
   19e48:	bl	15e14 <g_type_check_instance_cast@plt>
   19e4c:	ldr	r3, [r4, #12]
   19e50:	ldr	r2, [pc, #132]	; 19edc <g_strcmp0@plt+0x3180>
   19e54:	ldr	r1, [pc, #132]	; 19ee0 <g_strcmp0@plt+0x3184>
   19e58:	str	r3, [sp, #8]
   19e5c:	mov	r3, #1
   19e60:	str	r2, [sp, #12]
   19e64:	str	r3, [sp, #4]
   19e68:	str	r5, [sp]
   19e6c:	str	r4, [sp, #24]
   19e70:	str	r4, [sp, #16]
   19e74:	str	r1, [sp, #20]
   19e78:	mov	r2, #2
   19e7c:	mov	r3, #0
   19e80:	bl	16174 <pk_client_depends_on_async@plt>
   19e84:	ldr	r0, [sp, #32]
   19e88:	bl	16660 <g_free@plt>
   19e8c:	mov	r0, r5
   19e90:	bl	1654c <g_strfreev@plt>
   19e94:	ldr	r2, [sp, #36]	; 0x24
   19e98:	ldr	r3, [r7]
   19e9c:	cmp	r2, r3
   19ea0:	bne	19ed0 <g_strcmp0@plt+0x3174>
   19ea4:	add	sp, sp, #44	; 0x2c
   19ea8:	pop	{r4, r5, r6, r7, pc}
   19eac:	mov	r1, r0
   19eb0:	mov	r0, r4
   19eb4:	bl	18f10 <g_strcmp0@plt+0x21b4>
   19eb8:	b	19e2c <g_strcmp0@plt+0x30d0>
   19ebc:	ldr	r2, [pc, #32]	; 19ee4 <g_strcmp0@plt+0x3188>
   19ec0:	mov	r1, #16
   19ec4:	ldr	r0, [pc, #28]	; 19ee8 <g_strcmp0@plt+0x318c>
   19ec8:	bl	15ebc <g_log@plt>
   19ecc:	b	19e84 <g_strcmp0@plt+0x3128>
   19ed0:	bl	165a0 <__stack_chk_fail@plt>
   19ed4:	andeq	ip, r3, r0, asr lr
   19ed8:	andeq	r6, r2, r8, asr #31
   19edc:	andeq	r7, r1, r4, lsl ip
   19ee0:	andeq	r9, r1, r8, asr #20
   19ee4:			; <UNDEFINED> instruction: 0x00026fb4
   19ee8:	andeq	r6, r2, r8, lsr #21
   19eec:	orrs	r3, r0, r1
   19ef0:	beq	19fa0 <g_strcmp0@plt+0x3244>
   19ef4:	cmp	r1, #0
   19ef8:	cmpeq	r0, #1
   19efc:	beq	19fd4 <g_strcmp0@plt+0x3278>
   19f00:	cmp	r1, #0
   19f04:	cmpeq	r0, #2
   19f08:	beq	19fc0 <g_strcmp0@plt+0x3264>
   19f0c:	push	{r4, r5, r6, lr}
   19f10:	mvn	r2, #0
   19f14:	mov	r4, r0
   19f18:	mov	r5, r1
   19f1c:	mov	r0, #0
   19f20:	mov	r1, #1
   19f24:	bl	164e0 <pk_bitfield_from_enums@plt>
   19f28:	cmp	r1, r5
   19f2c:	cmpeq	r0, r4
   19f30:	beq	19fa8 <g_strcmp0@plt+0x324c>
   19f34:	cmp	r5, #0
   19f38:	cmpeq	r4, #4
   19f3c:	beq	19fc8 <g_strcmp0@plt+0x326c>
   19f40:	mvn	r2, #0
   19f44:	mov	r1, #2
   19f48:	mov	r0, #0
   19f4c:	bl	164e0 <pk_bitfield_from_enums@plt>
   19f50:	cmp	r5, r1
   19f54:	cmpeq	r4, r0
   19f58:	beq	19fdc <g_strcmp0@plt+0x3280>
   19f5c:	mvn	r3, #0
   19f60:	mov	r2, #2
   19f64:	mov	r1, #0
   19f68:	mov	r0, #1
   19f6c:	bl	164e0 <pk_bitfield_from_enums@plt>
   19f70:	cmp	r5, r1
   19f74:	cmpeq	r4, r0
   19f78:	beq	19fa8 <g_strcmp0@plt+0x324c>
   19f7c:	mvn	r2, #0
   19f80:	mov	r1, #2
   19f84:	mov	r0, #1
   19f88:	bl	164e0 <pk_bitfield_from_enums@plt>
   19f8c:	cmp	r5, r1
   19f90:	cmpeq	r4, r0
   19f94:	beq	19fb4 <g_strcmp0@plt+0x3258>
   19f98:	mov	r0, #0
   19f9c:	pop	{r4, r5, r6, pc}
   19fa0:	mov	r0, #2
   19fa4:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fa8:	mov	r0, #13
   19fac:	pop	{r4, r5, r6, lr}
   19fb0:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fb4:	mov	r0, #12
   19fb8:	pop	{r4, r5, r6, lr}
   19fbc:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fc0:	mov	r0, #12
   19fc4:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fc8:	mov	r0, #17
   19fcc:	pop	{r4, r5, r6, lr}
   19fd0:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fd4:	mov	r0, #1
   19fd8:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fdc:	mov	r0, #16
   19fe0:	pop	{r4, r5, r6, lr}
   19fe4:	b	21108 <g_strcmp0@plt+0xa3ac>
   19fe8:	ldr	r3, [pc, #608]	; 1a250 <g_strcmp0@plt+0x34f4>
   19fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ff0:	sub	sp, sp, #124	; 0x7c
   19ff4:	ldr	lr, [pc, #600]	; 1a254 <g_strcmp0@plt+0x34f8>
   19ff8:	ldr	ip, [r3]
   19ffc:	mov	r6, r0
   1a000:	mov	r7, #0
   1a004:	add	r2, sp, #96	; 0x60
   1a008:	add	r3, sp, #92	; 0x5c
   1a00c:	str	lr, [sp, #4]
   1a010:	mov	r0, r1
   1a014:	str	r7, [sp, #12]
   1a018:	str	r2, [sp, #8]
   1a01c:	str	r3, [sp]
   1a020:	add	r2, sp, #88	; 0x58
   1a024:	ldr	r3, [pc, #556]	; 1a258 <g_strcmp0@plt+0x34fc>
   1a028:	ldr	r1, [pc, #556]	; 1a25c <g_strcmp0@plt+0x3500>
   1a02c:	str	ip, [sp, #116]	; 0x74
   1a030:	str	r7, [sp, #92]	; 0x5c
   1a034:	str	r7, [sp, #96]	; 0x60
   1a038:	bl	166fc <g_object_get@plt>
   1a03c:	mov	r1, #1
   1a040:	ldr	r0, [r6]
   1a044:	bl	1e108 <g_strcmp0@plt+0x73ac>
   1a048:	ldr	r1, [sp, #96]	; 0x60
   1a04c:	ldr	r0, [r6]
   1a050:	bl	1e520 <g_strcmp0@plt+0x77c4>
   1a054:	mov	r3, #1
   1a058:	str	r3, [r6, #4]
   1a05c:	ldr	r1, [sp, #92]	; 0x5c
   1a060:	mov	r9, r0
   1a064:	ldr	r0, [r6, #100]	; 0x64
   1a068:	bl	15cf4 <pk_package_sack_find_by_id@plt>
   1a06c:	ldr	r3, [sp, #88]	; 0x58
   1a070:	ldr	r1, [pc, #488]	; 1a260 <g_strcmp0@plt+0x3504>
   1a074:	cmp	r3, #16
   1a078:	cmpne	r3, #1
   1a07c:	moveq	r4, #1
   1a080:	movne	r4, #0
   1a084:	sub	r3, r3, #16
   1a088:	uxtb	r4, r4
   1a08c:	cmp	r0, r7
   1a090:	orrne	r2, r4, #2
   1a094:	movne	r4, r2
   1a098:	movne	r5, r7
   1a09c:	moveq	r5, #0
   1a0a0:	ldr	r0, [r6, #56]	; 0x38
   1a0a4:	cmp	r3, #1
   1a0a8:	orrls	r8, r4, #4
   1a0ac:	movhi	r8, r4
   1a0b0:	str	r5, [sp, #76]	; 0x4c
   1a0b4:	bl	1615c <gtk_builder_get_object@plt>
   1a0b8:	mov	r7, r0
   1a0bc:	bl	15db4 <gtk_widget_get_type@plt>
   1a0c0:	mov	r1, r0
   1a0c4:	mov	r0, r7
   1a0c8:	bl	15e14 <g_type_check_instance_cast@plt>
   1a0cc:	bl	16048 <gtk_widget_get_style_context@plt>
   1a0d0:	mov	r2, r9
   1a0d4:	ldr	r1, [sp, #92]	; 0x5c
   1a0d8:	bl	230b8 <g_strcmp0@plt+0xc35c>
   1a0dc:	ldr	r7, [r6, #32]
   1a0e0:	cmp	r7, #1
   1a0e4:	moveq	r3, #0
   1a0e8:	mov	sl, r0
   1a0ec:	beq	1a0fc <g_strcmp0@plt+0x33a0>
   1a0f0:	subs	r7, r7, #2
   1a0f4:	movne	r7, #1
   1a0f8:	mov	r3, #1
   1a0fc:	mov	fp, #0
   1a100:	mov	r1, fp
   1a104:	and	r0, r8, #1
   1a108:	orrs	r2, r0, r1
   1a10c:	ldr	r0, [r6, #60]	; 0x3c
   1a110:	add	r1, sp, #100	; 0x64
   1a114:	movne	r7, r3
   1a118:	bl	1675c <gtk_list_store_append@plt>
   1a11c:	ldr	r3, [sp, #96]	; 0x60
   1a120:	ldr	r2, [sp, #92]	; 0x5c
   1a124:	ldr	r1, [sp, #76]	; 0x4c
   1a128:	mov	r0, r8
   1a12c:	ldr	r6, [r6, #60]	; 0x3c
   1a130:	str	r3, [sp, #84]	; 0x54
   1a134:	str	r2, [sp, #80]	; 0x50
   1a138:	bl	19eec <g_strcmp0@plt+0x3190>
   1a13c:	subs	r2, r4, #1
   1a140:	str	r2, [sp, #64]	; 0x40
   1a144:	sbc	r2, r5, #0
   1a148:	str	r2, [sp, #68]	; 0x44
   1a14c:	ldrd	r2, [sp, #64]	; 0x40
   1a150:	mov	ip, #6
   1a154:	mov	lr, #5
   1a158:	cmp	r3, #0
   1a15c:	ldr	r3, [sp, #84]	; 0x54
   1a160:	cmpeq	r2, #1
   1a164:	ldr	r2, [sp, #80]	; 0x50
   1a168:	str	r3, [sp, #36]	; 0x24
   1a16c:	ldr	r3, [sp, #76]	; 0x4c
   1a170:	movhi	r5, fp
   1a174:	movls	r5, #1
   1a178:	str	r7, [sp, #20]
   1a17c:	str	fp, [sp, #48]	; 0x30
   1a180:	str	r2, [sp, #44]	; 0x2c
   1a184:	mov	fp, #3
   1a188:	mov	r2, #2
   1a18c:	mov	r7, #4
   1a190:	add	r1, sp, #100	; 0x64
   1a194:	str	r3, [sp, #4]
   1a198:	str	ip, [sp, #32]
   1a19c:	str	r2, [sp, #8]
   1a1a0:	mvn	r4, #0
   1a1a4:	mov	r2, #1
   1a1a8:	str	sl, [sp, #28]
   1a1ac:	str	r8, [sp]
   1a1b0:	str	r5, [sp, #12]
   1a1b4:	str	lr, [sp, #40]	; 0x28
   1a1b8:	str	r0, [sp, #52]	; 0x34
   1a1bc:	str	r7, [sp, #24]
   1a1c0:	mov	r0, r6
   1a1c4:	str	fp, [sp, #16]
   1a1c8:	str	r4, [sp, #56]	; 0x38
   1a1cc:	bl	15c94 <gtk_list_store_set@plt>
   1a1d0:	ldr	r1, [pc, #140]	; 1a264 <g_strcmp0@plt+0x3508>
   1a1d4:	ldr	r3, [pc, #140]	; 1a268 <g_strcmp0@plt+0x350c>
   1a1d8:	ldr	r2, [r1]
   1a1dc:	add	r0, r2, #1
   1a1e0:	umull	ip, r3, r3, r2
   1a1e4:	str	r0, [r1]
   1a1e8:	lsr	r3, r3, #6
   1a1ec:	add	r3, r3, r3, lsl #2
   1a1f0:	add	r3, r3, r3, lsl #2
   1a1f4:	cmp	r2, r3, lsl fp
   1a1f8:	beq	1a23c <g_strcmp0@plt+0x34e0>
   1a1fc:	ldr	r0, [sp, #92]	; 0x5c
   1a200:	bl	16660 <g_free@plt>
   1a204:	mov	r0, r9
   1a208:	bl	16660 <g_free@plt>
   1a20c:	ldr	r0, [sp, #96]	; 0x60
   1a210:	bl	16660 <g_free@plt>
   1a214:	mov	r0, sl
   1a218:	bl	16660 <g_free@plt>
   1a21c:	ldr	r3, [pc, #44]	; 1a250 <g_strcmp0@plt+0x34f4>
   1a220:	ldr	r2, [sp, #116]	; 0x74
   1a224:	ldr	r3, [r3]
   1a228:	cmp	r2, r3
   1a22c:	bne	1a24c <g_strcmp0@plt+0x34f0>
   1a230:	add	sp, sp, #124	; 0x7c
   1a234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a238:	bl	168ac <gtk_main_iteration@plt>
   1a23c:	bl	16294 <gtk_events_pending@plt>
   1a240:	cmp	r0, #0
   1a244:	bne	1a238 <g_strcmp0@plt+0x34dc>
   1a248:	b	1a1fc <g_strcmp0@plt+0x34a0>
   1a24c:	bl	165a0 <__stack_chk_fail@plt>
   1a250:	andeq	ip, r3, r0, asr lr
   1a254:	andeq	r6, r2, r8, asr #29
   1a258:	andeq	r7, r2, ip, asr #3
   1a25c:	andeq	ip, r2, r0, asr #23
   1a260:	andeq	r6, r2, r8, lsl #17
   1a264:	andeq	sp, r3, r8, ror #13
   1a268:	mvnpl	r8, pc, lsl r5
   1a26c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a270:	vpush	{d8}
   1a274:	ldr	r3, [pc, #1056]	; 1a69c <g_strcmp0@plt+0x3940>
   1a278:	mov	r4, r2
   1a27c:	mov	r2, #0
   1a280:	sub	sp, sp, #60	; 0x3c
   1a284:	ldr	r3, [r3]
   1a288:	str	r2, [sp, #28]
   1a28c:	add	r2, sp, #28
   1a290:	str	r3, [sp, #52]	; 0x34
   1a294:	bl	161a4 <pk_client_generic_finish@plt>
   1a298:	mov	r8, r0
   1a29c:	bl	15db4 <gtk_widget_get_type@plt>
   1a2a0:	cmp	r8, #0
   1a2a4:	mov	r9, r0
   1a2a8:	beq	1a658 <g_strcmp0@plt+0x38fc>
   1a2ac:	mov	r0, r8
   1a2b0:	bl	15f1c <pk_results_get_error_code@plt>
   1a2b4:	subs	r6, r0, #0
   1a2b8:	beq	1a3dc <g_strcmp0@plt+0x3680>
   1a2bc:	bl	16018 <pk_error_get_code@plt>
   1a2c0:	bl	16228 <pk_error_enum_to_string@plt>
   1a2c4:	mov	r5, r0
   1a2c8:	mov	r0, r6
   1a2cc:	bl	15fdc <pk_error_get_details@plt>
   1a2d0:	mov	r3, r5
   1a2d4:	ldr	r2, [pc, #964]	; 1a6a0 <g_strcmp0@plt+0x3944>
   1a2d8:	mov	r1, #16
   1a2dc:	str	r0, [sp]
   1a2e0:	ldr	r0, [pc, #956]	; 1a6a4 <g_strcmp0@plt+0x3948>
   1a2e4:	bl	15ebc <g_log@plt>
   1a2e8:	mov	r0, r6
   1a2ec:	bl	16018 <pk_error_get_code@plt>
   1a2f0:	cmp	r0, #17
   1a2f4:	beq	1a358 <g_strcmp0@plt+0x35fc>
   1a2f8:	ldr	r1, [pc, #936]	; 1a6a8 <g_strcmp0@plt+0x394c>
   1a2fc:	ldr	r0, [r4, #56]	; 0x38
   1a300:	bl	1615c <gtk_builder_get_object@plt>
   1a304:	mov	r5, r0
   1a308:	bl	16d20 <gtk_window_get_type@plt>
   1a30c:	mov	r1, r0
   1a310:	mov	r0, r5
   1a314:	bl	15e14 <g_type_check_instance_cast@plt>
   1a318:	mov	r5, r0
   1a31c:	mov	r0, r6
   1a320:	bl	16018 <pk_error_get_code@plt>
   1a324:	bl	1ef7c <g_strcmp0@plt+0x8220>
   1a328:	mov	r7, r0
   1a32c:	mov	r0, r6
   1a330:	bl	16018 <pk_error_get_code@plt>
   1a334:	bl	1f60c <g_strcmp0@plt+0x88b0>
   1a338:	mov	sl, r0
   1a33c:	mov	r0, r6
   1a340:	bl	15fdc <pk_error_get_details@plt>
   1a344:	mov	r2, sl
   1a348:	mov	r1, r7
   1a34c:	mov	r3, r0
   1a350:	mov	r0, r5
   1a354:	bl	25660 <g_strcmp0@plt+0xe904>
   1a358:	ldr	r3, [r4, #124]	; 0x7c
   1a35c:	mov	r2, #0
   1a360:	sub	r3, r3, #1
   1a364:	cmp	r3, r2
   1a368:	str	r3, [r4, #124]	; 0x7c
   1a36c:	str	r2, [r4, #8]
   1a370:	ldr	r0, [r4, #108]	; 0x6c
   1a374:	bgt	1a37c <g_strcmp0@plt+0x3620>
   1a378:	bl	16498 <gtk_widget_destroy@plt>
   1a37c:	ldr	r1, [r4, #56]	; 0x38
   1a380:	add	r0, r4, #8
   1a384:	bl	18e60 <g_strcmp0@plt+0x2104>
   1a388:	ldr	r1, [pc, #796]	; 1a6ac <g_strcmp0@plt+0x3950>
   1a38c:	ldr	r0, [r4, #56]	; 0x38
   1a390:	bl	1615c <gtk_builder_get_object@plt>
   1a394:	mov	r1, r9
   1a398:	bl	15e14 <g_type_check_instance_cast@plt>
   1a39c:	mov	r1, #1
   1a3a0:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1a3a4:	mov	r0, r6
   1a3a8:	bl	16990 <g_object_unref@plt>
   1a3ac:	cmp	r8, #0
   1a3b0:	beq	1a3bc <g_strcmp0@plt+0x3660>
   1a3b4:	mov	r0, r8
   1a3b8:	bl	16990 <g_object_unref@plt>
   1a3bc:	ldr	r3, [pc, #728]	; 1a69c <g_strcmp0@plt+0x3940>
   1a3c0:	ldr	r2, [sp, #52]	; 0x34
   1a3c4:	ldr	r3, [r3]
   1a3c8:	cmp	r2, r3
   1a3cc:	bne	1a694 <g_strcmp0@plt+0x3938>
   1a3d0:	add	sp, sp, #60	; 0x3c
   1a3d4:	vpop	{d8}
   1a3d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3dc:	bl	15d6c <gtk_label_get_type@plt>
   1a3e0:	mov	r1, r0
   1a3e4:	ldr	r0, [r4, #116]	; 0x74
   1a3e8:	bl	15e14 <g_type_check_instance_cast@plt>
   1a3ec:	ldr	r1, [pc, #700]	; 1a6b0 <g_strcmp0@plt+0x3954>
   1a3f0:	bl	15d78 <gtk_label_set_label@plt>
   1a3f4:	mov	r0, r8
   1a3f8:	bl	15c04 <pk_results_get_package_array@plt>
   1a3fc:	ldr	r3, [r0, #4]
   1a400:	mov	r5, r0
   1a404:	cmp	r3, #0
   1a408:	beq	1a45c <g_strcmp0@plt+0x3700>
   1a40c:	bl	164ec <gtk_progress_bar_get_type@plt>
   1a410:	mov	r7, r0
   1a414:	ldr	r3, [r5]
   1a418:	mov	r0, r4
   1a41c:	ldr	r1, [r3, r6, lsl #2]
   1a420:	bl	19fe8 <g_strcmp0@plt+0x328c>
   1a424:	vmov	s15, r6
   1a428:	mov	r1, r7
   1a42c:	ldr	r0, [r4, #112]	; 0x70
   1a430:	add	r6, r6, #1
   1a434:	vcvt.f32.u32	s14, s15
   1a438:	vldr	s15, [r5, #4]
   1a43c:	vcvt.f32.u32	s15, s15
   1a440:	vdiv.f32	s16, s14, s15
   1a444:	bl	15e14 <g_type_check_instance_cast@plt>
   1a448:	vcvt.f64.f32	d0, s16
   1a44c:	bl	161b0 <gtk_progress_bar_set_fraction@plt>
   1a450:	ldr	r3, [r5, #4]
   1a454:	cmp	r3, r6
   1a458:	bhi	1a414 <g_strcmp0@plt+0x36b8>
   1a45c:	ldr	r3, [r4, #4]
   1a460:	cmp	r3, #0
   1a464:	beq	1a688 <g_strcmp0@plt+0x392c>
   1a468:	ldr	r1, [pc, #580]	; 1a6b4 <g_strcmp0@plt+0x3958>
   1a46c:	ldr	r0, [r4, #56]	; 0x38
   1a470:	ldr	fp, [r4, #24]
   1a474:	bl	1615c <gtk_builder_get_object@plt>
   1a478:	mov	r6, r0
   1a47c:	bl	165dc <gtk_tree_view_get_type@plt>
   1a480:	mov	r1, r0
   1a484:	mov	r0, r6
   1a488:	bl	15e14 <g_type_check_instance_cast@plt>
   1a48c:	mov	r6, r0
   1a490:	bl	16054 <gtk_tree_view_get_model@plt>
   1a494:	add	r1, sp, #36	; 0x24
   1a498:	mov	r7, r0
   1a49c:	bl	16678 <gtk_tree_model_get_iter_first@plt>
   1a4a0:	cmp	r0, #0
   1a4a4:	beq	1a590 <g_strcmp0@plt+0x3834>
   1a4a8:	str	r4, [sp, #20]
   1a4ac:	mvn	sl, #0
   1a4b0:	vldr	s16, [pc, #480]	; 1a698 <g_strcmp0@plt+0x393c>
   1a4b4:	strd	r8, [sp, #8]
   1a4b8:	str	r5, [sp, #16]
   1a4bc:	mov	r4, r6
   1a4c0:	b	1a4e8 <g_strcmp0@plt+0x378c>
   1a4c4:	mov	r0, r6
   1a4c8:	bl	1654c <g_strfreev@plt>
   1a4cc:	ldr	r0, [sp, #32]
   1a4d0:	bl	16660 <g_free@plt>
   1a4d4:	add	r1, sp, #36	; 0x24
   1a4d8:	mov	r0, r7
   1a4dc:	bl	15fa0 <gtk_tree_model_iter_next@plt>
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a584 <g_strcmp0@plt+0x3828>
   1a4e8:	mov	r0, r7
   1a4ec:	str	sl, [sp]
   1a4f0:	add	r3, sp, #32
   1a4f4:	mov	r2, #5
   1a4f8:	add	r1, sp, #36	; 0x24
   1a4fc:	bl	16c6c <gtk_tree_model_get@plt>
   1a500:	ldr	r0, [sp, #32]
   1a504:	cmp	r0, #0
   1a508:	beq	1a4d0 <g_strcmp0@plt+0x3774>
   1a50c:	bl	15df0 <pk_package_id_split@plt>
   1a510:	mov	r1, fp
   1a514:	mov	r6, r0
   1a518:	ldr	r0, [r0]
   1a51c:	bl	16d5c <g_strcmp0@plt>
   1a520:	subs	r5, r0, #0
   1a524:	bne	1a4c4 <g_strcmp0@plt+0x3768>
   1a528:	mov	r0, r4
   1a52c:	bl	16744 <gtk_tree_view_get_selection@plt>
   1a530:	add	r1, sp, #36	; 0x24
   1a534:	mov	r9, r0
   1a538:	bl	16024 <gtk_tree_selection_select_iter@plt>
   1a53c:	add	r1, sp, #36	; 0x24
   1a540:	mov	r0, r7
   1a544:	bl	15ee0 <gtk_tree_model_get_path@plt>
   1a548:	vmov.f32	s1, s16
   1a54c:	vldr	s0, [pc, #324]	; 1a698 <g_strcmp0@plt+0x393c>
   1a550:	mov	r3, r5
   1a554:	mov	r2, r5
   1a558:	mov	r1, r0
   1a55c:	mov	r8, r0
   1a560:	mov	r0, r4
   1a564:	bl	16abc <gtk_tree_view_scroll_to_cell@plt>
   1a568:	mov	r0, r8
   1a56c:	bl	16264 <gtk_tree_path_free@plt>
   1a570:	mov	r0, r6
   1a574:	bl	1654c <g_strfreev@plt>
   1a578:	cmp	r9, #0
   1a57c:	ldreq	r0, [sp, #32]
   1a580:	beq	1a4d0 <g_strcmp0@plt+0x3774>
   1a584:	ldrd	r8, [sp, #8]
   1a588:	ldr	r5, [sp, #16]
   1a58c:	ldr	r4, [sp, #20]
   1a590:	ldr	r1, [pc, #288]	; 1a6b8 <g_strcmp0@plt+0x395c>
   1a594:	ldr	r0, [r4, #56]	; 0x38
   1a598:	bl	1615c <gtk_builder_get_object@plt>
   1a59c:	mov	r1, r9
   1a5a0:	bl	15e14 <g_type_check_instance_cast@plt>
   1a5a4:	bl	15fe8 <gtk_widget_grab_focus@plt>
   1a5a8:	ldr	r1, [pc, #268]	; 1a6bc <g_strcmp0@plt+0x3960>
   1a5ac:	ldr	r0, [r4, #56]	; 0x38
   1a5b0:	bl	1615c <gtk_builder_get_object@plt>
   1a5b4:	mov	r1, r9
   1a5b8:	bl	15e14 <g_type_check_instance_cast@plt>
   1a5bc:	mov	r1, #1
   1a5c0:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1a5c4:	ldr	r1, [pc, #244]	; 1a6c0 <g_strcmp0@plt+0x3964>
   1a5c8:	ldr	r0, [r4, #56]	; 0x38
   1a5cc:	bl	1615c <gtk_builder_get_object@plt>
   1a5d0:	mov	r1, r9
   1a5d4:	bl	15e14 <g_type_check_instance_cast@plt>
   1a5d8:	mov	r1, #1
   1a5dc:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1a5e0:	ldr	r1, [pc, #208]	; 1a6b8 <g_strcmp0@plt+0x395c>
   1a5e4:	ldr	r0, [r4, #56]	; 0x38
   1a5e8:	bl	1615c <gtk_builder_get_object@plt>
   1a5ec:	mov	r1, r9
   1a5f0:	bl	15e14 <g_type_check_instance_cast@plt>
   1a5f4:	mov	r1, #1
   1a5f8:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1a5fc:	ldr	r3, [r4, #124]	; 0x7c
   1a600:	mov	r2, #0
   1a604:	sub	r3, r3, #1
   1a608:	cmp	r3, r2
   1a60c:	str	r3, [r4, #124]	; 0x7c
   1a610:	str	r2, [r4, #8]
   1a614:	ldr	r0, [r4, #108]	; 0x6c
   1a618:	ble	1a680 <g_strcmp0@plt+0x3924>
   1a61c:	ldr	r1, [r4, #56]	; 0x38
   1a620:	add	r0, r4, #8
   1a624:	bl	18e60 <g_strcmp0@plt+0x2104>
   1a628:	ldr	r1, [pc, #124]	; 1a6ac <g_strcmp0@plt+0x3950>
   1a62c:	ldr	r0, [r4, #56]	; 0x38
   1a630:	bl	1615c <gtk_builder_get_object@plt>
   1a634:	mov	r1, r9
   1a638:	bl	15e14 <g_type_check_instance_cast@plt>
   1a63c:	mov	r1, #1
   1a640:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1a644:	cmp	r5, #0
   1a648:	beq	1a3ac <g_strcmp0@plt+0x3650>
   1a64c:	mov	r0, r5
   1a650:	bl	16af8 <g_ptr_array_unref@plt>
   1a654:	b	1a3ac <g_strcmp0@plt+0x3650>
   1a658:	ldr	r3, [sp, #28]
   1a65c:	ldr	r2, [pc, #96]	; 1a6c4 <g_strcmp0@plt+0x3968>
   1a660:	mov	r1, #16
   1a664:	ldr	r3, [r3, #8]
   1a668:	ldr	r0, [pc, #52]	; 1a6a4 <g_strcmp0@plt+0x3948>
   1a66c:	bl	15ebc <g_log@plt>
   1a670:	ldr	r0, [sp, #28]
   1a674:	bl	15d3c <g_error_free@plt>
   1a678:	mov	r5, r8
   1a67c:	b	1a5fc <g_strcmp0@plt+0x38a0>
   1a680:	bl	16498 <gtk_widget_destroy@plt>
   1a684:	b	1a61c <g_strcmp0@plt+0x38c0>
   1a688:	mov	r0, r4
   1a68c:	bl	180ac <g_strcmp0@plt+0x1350>
   1a690:	b	1a468 <g_strcmp0@plt+0x370c>
   1a694:	bl	165a0 <__stack_chk_fail@plt>
   1a698:	svccc	0x00000000
   1a69c:	andeq	ip, r3, r0, asr lr
   1a6a0:	strdeq	r7, [r2], -r0
   1a6a4:	andeq	r6, r2, r8, lsr #21
   1a6a8:	andeq	r6, r2, r8, lsl #17
   1a6ac:	andeq	r7, r2, r4, lsr r2
   1a6b0:	andeq	r7, r2, ip, lsl #4
   1a6b4:	andeq	r6, r2, ip, lsl #23
   1a6b8:	strdeq	r6, [r2], -r8
   1a6bc:			; <UNDEFINED> instruction: 0x00026eb8
   1a6c0:	andeq	r7, r2, ip, lsl r2
   1a6c4:	ldrdeq	r7, [r2], -r8
   1a6c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6cc:	sub	sp, sp, #100	; 0x64
   1a6d0:	ldr	r9, [pc, #1388]	; 1ac44 <g_strcmp0@plt+0x3ee8>
   1a6d4:	mov	r4, #0
   1a6d8:	mov	r5, r2
   1a6dc:	ldr	r3, [r9]
   1a6e0:	add	r2, sp, #56	; 0x38
   1a6e4:	str	r3, [sp, #92]	; 0x5c
   1a6e8:	str	r4, [sp, #56]	; 0x38
   1a6ec:	str	r4, [sp, #60]	; 0x3c
   1a6f0:	str	r4, [sp, #64]	; 0x40
   1a6f4:	str	r4, [sp, #72]	; 0x48
   1a6f8:	str	r4, [sp, #76]	; 0x4c
   1a6fc:	bl	161a4 <pk_client_generic_finish@plt>
   1a700:	subs	r7, r0, #0
   1a704:	beq	1aaac <g_strcmp0@plt+0x3d50>
   1a708:	bl	15f1c <pk_results_get_error_code@plt>
   1a70c:	subs	r6, r0, #0
   1a710:	beq	1a844 <g_strcmp0@plt+0x3ae8>
   1a714:	bl	16018 <pk_error_get_code@plt>
   1a718:	bl	16228 <pk_error_enum_to_string@plt>
   1a71c:	mov	r8, r0
   1a720:	mov	r0, r6
   1a724:	bl	15fdc <pk_error_get_details@plt>
   1a728:	mov	r3, r8
   1a72c:	ldr	r2, [pc, #1300]	; 1ac48 <g_strcmp0@plt+0x3eec>
   1a730:	mov	r1, #16
   1a734:	str	r0, [sp]
   1a738:	ldr	r0, [pc, #1292]	; 1ac4c <g_strcmp0@plt+0x3ef0>
   1a73c:	bl	15ebc <g_log@plt>
   1a740:	mov	r0, r6
   1a744:	bl	16018 <pk_error_get_code@plt>
   1a748:	cmp	r0, #17
   1a74c:	moveq	r8, r4
   1a750:	beq	1a7b8 <g_strcmp0@plt+0x3a5c>
   1a754:	ldr	r1, [pc, #1268]	; 1ac50 <g_strcmp0@plt+0x3ef4>
   1a758:	ldr	r0, [r5, #56]	; 0x38
   1a75c:	bl	1615c <gtk_builder_get_object@plt>
   1a760:	mov	r8, r0
   1a764:	bl	16d20 <gtk_window_get_type@plt>
   1a768:	mov	r1, r0
   1a76c:	mov	r0, r8
   1a770:	bl	15e14 <g_type_check_instance_cast@plt>
   1a774:	mov	r8, r0
   1a778:	mov	r0, r6
   1a77c:	bl	16018 <pk_error_get_code@plt>
   1a780:	bl	1ef7c <g_strcmp0@plt+0x8220>
   1a784:	mov	sl, r0
   1a788:	mov	r0, r6
   1a78c:	bl	16018 <pk_error_get_code@plt>
   1a790:	bl	1f60c <g_strcmp0@plt+0x88b0>
   1a794:	mov	fp, r0
   1a798:	mov	r0, r6
   1a79c:	bl	15fdc <pk_error_get_details@plt>
   1a7a0:	mov	r2, fp
   1a7a4:	mov	r1, sl
   1a7a8:	mov	r3, r0
   1a7ac:	mov	r0, r8
   1a7b0:	bl	25660 <g_strcmp0@plt+0xe904>
   1a7b4:	mov	r8, r4
   1a7b8:	ldr	r3, [r5, #124]	; 0x7c
   1a7bc:	ldr	r0, [r5, #108]	; 0x6c
   1a7c0:	sub	r3, r3, #1
   1a7c4:	cmp	r3, #0
   1a7c8:	str	r3, [r5, #124]	; 0x7c
   1a7cc:	bgt	1a7d4 <g_strcmp0@plt+0x3a78>
   1a7d0:	bl	16498 <gtk_widget_destroy@plt>
   1a7d4:	ldr	r0, [sp, #60]	; 0x3c
   1a7d8:	bl	16660 <g_free@plt>
   1a7dc:	ldr	r0, [sp, #64]	; 0x40
   1a7e0:	bl	16660 <g_free@plt>
   1a7e4:	ldr	r0, [sp, #72]	; 0x48
   1a7e8:	bl	16660 <g_free@plt>
   1a7ec:	ldr	r0, [sp, #76]	; 0x4c
   1a7f0:	bl	16660 <g_free@plt>
   1a7f4:	mov	r0, r4
   1a7f8:	bl	1654c <g_strfreev@plt>
   1a7fc:	cmp	r6, #0
   1a800:	beq	1a80c <g_strcmp0@plt+0x3ab0>
   1a804:	mov	r0, r6
   1a808:	bl	16990 <g_object_unref@plt>
   1a80c:	cmp	r8, #0
   1a810:	beq	1a81c <g_strcmp0@plt+0x3ac0>
   1a814:	mov	r0, r8
   1a818:	bl	16af8 <g_ptr_array_unref@plt>
   1a81c:	cmp	r7, #0
   1a820:	beq	1a82c <g_strcmp0@plt+0x3ad0>
   1a824:	mov	r0, r7
   1a828:	bl	16990 <g_object_unref@plt>
   1a82c:	ldr	r2, [sp, #92]	; 0x5c
   1a830:	ldr	r3, [r9]
   1a834:	cmp	r2, r3
   1a838:	bne	1ac40 <g_strcmp0@plt+0x3ee4>
   1a83c:	add	sp, sp, #100	; 0x64
   1a840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a844:	mov	r0, r7
   1a848:	bl	16b10 <pk_results_get_details_array@plt>
   1a84c:	ldr	sl, [r0, #4]
   1a850:	mov	r8, r0
   1a854:	cmp	sl, #1
   1a858:	bne	1aa90 <g_strcmp0@plt+0x3d34>
   1a85c:	ldr	r3, [r0]
   1a860:	ldr	r1, [pc, #1004]	; 1ac54 <g_strcmp0@plt+0x3ef8>
   1a864:	ldr	r0, [r5, #56]	; 0x38
   1a868:	ldr	r4, [r3]
   1a86c:	bl	1615c <gtk_builder_get_object@plt>
   1a870:	mov	fp, r0
   1a874:	bl	15db4 <gtk_widget_get_type@plt>
   1a878:	mov	r1, r0
   1a87c:	str	r0, [sp, #40]	; 0x28
   1a880:	mov	r0, fp
   1a884:	bl	15e14 <g_type_check_instance_cast@plt>
   1a888:	bl	16978 <gtk_widget_show@plt>
   1a88c:	ldr	r3, [pc, #964]	; 1ac58 <g_strcmp0@plt+0x3efc>
   1a890:	ldr	ip, [pc, #964]	; 1ac5c <g_strcmp0@plt+0x3f00>
   1a894:	ldr	r1, [pc, #964]	; 1ac60 <g_strcmp0@plt+0x3f04>
   1a898:	ldr	r2, [pc, #964]	; 1ac64 <g_strcmp0@plt+0x3f08>
   1a89c:	str	r3, [sp, #28]
   1a8a0:	add	r3, sp, #80	; 0x50
   1a8a4:	str	ip, [sp, #20]
   1a8a8:	str	r1, [sp, #12]
   1a8ac:	add	ip, sp, #76	; 0x4c
   1a8b0:	add	r1, sp, #72	; 0x48
   1a8b4:	str	r2, [sp, #4]
   1a8b8:	str	r3, [sp, #32]
   1a8bc:	add	r2, sp, #68	; 0x44
   1a8c0:	add	r3, sp, #64	; 0x40
   1a8c4:	str	ip, [sp, #24]
   1a8c8:	mov	r0, r4
   1a8cc:	str	r1, [sp, #16]
   1a8d0:	str	r2, [sp, #8]
   1a8d4:	ldr	r1, [pc, #908]	; 1ac68 <g_strcmp0@plt+0x3f0c>
   1a8d8:	add	r2, sp, #60	; 0x3c
   1a8dc:	str	r3, [sp]
   1a8e0:	str	r6, [sp, #36]	; 0x24
   1a8e4:	ldr	r3, [pc, #896]	; 1ac6c <g_strcmp0@plt+0x3f10>
   1a8e8:	bl	166fc <g_object_get@plt>
   1a8ec:	ldr	r0, [sp, #60]	; 0x3c
   1a8f0:	bl	15df0 <pk_package_id_split@plt>
   1a8f4:	ldr	r1, [pc, #884]	; 1ac70 <g_strcmp0@plt+0x3f14>
   1a8f8:	mov	r4, r0
   1a8fc:	ldr	r0, [r0, #12]
   1a900:	bl	163c0 <g_str_has_prefix@plt>
   1a904:	str	r0, [sp, #44]	; 0x2c
   1a908:	ldr	r0, [r5, #16]
   1a90c:	bl	16660 <g_free@plt>
   1a910:	ldr	r0, [sp, #64]	; 0x40
   1a914:	bl	160f0 <g_strdup@plt>
   1a918:	ldr	r3, [sp, #72]	; 0x48
   1a91c:	cmp	r3, #0
   1a920:	str	r0, [r5, #16]
   1a924:	beq	1a998 <g_strcmp0@plt+0x3c3c>
   1a928:	ldr	r1, [pc, #836]	; 1ac74 <g_strcmp0@plt+0x3f18>
   1a92c:	ldr	r0, [r5, #56]	; 0x38
   1a930:	bl	1615c <gtk_builder_get_object@plt>
   1a934:	ldr	fp, [sp, #40]	; 0x28
   1a938:	mov	r1, fp
   1a93c:	bl	15e14 <g_type_check_instance_cast@plt>
   1a940:	bl	16978 <gtk_widget_show@plt>
   1a944:	ldr	r1, [pc, #812]	; 1ac78 <g_strcmp0@plt+0x3f1c>
   1a948:	ldr	r0, [r5, #56]	; 0x38
   1a94c:	bl	1615c <gtk_builder_get_object@plt>
   1a950:	mov	r1, fp
   1a954:	bl	15e14 <g_type_check_instance_cast@plt>
   1a958:	mov	fp, r0
   1a95c:	bl	15d6c <gtk_label_get_type@plt>
   1a960:	mov	r1, r0
   1a964:	str	r0, [sp, #48]	; 0x30
   1a968:	mov	r0, fp
   1a96c:	bl	15e14 <g_type_check_instance_cast@plt>
   1a970:	ldr	r1, [sp, #72]	; 0x48
   1a974:	bl	15d78 <gtk_label_set_label@plt>
   1a978:	ldr	r3, [sp, #48]	; 0x30
   1a97c:	mov	r0, fp
   1a980:	mov	r1, r3
   1a984:	bl	15e14 <g_type_check_instance_cast@plt>
   1a988:	mov	r1, sl
   1a98c:	bl	160b4 <gtk_label_set_line_wrap@plt>
   1a990:	mov	r0, fp
   1a994:	bl	16978 <gtk_widget_show@plt>
   1a998:	ldr	sl, [sp, #76]	; 0x4c
   1a99c:	mov	r1, #0
   1a9a0:	ldr	r0, [r5]
   1a9a4:	bl	1e108 <g_strcmp0@plt+0x73ac>
   1a9a8:	mov	r1, sl
   1a9ac:	ldr	r0, [r5]
   1a9b0:	bl	1e520 <g_strcmp0@plt+0x77c4>
   1a9b4:	ldr	r1, [pc, #704]	; 1ac7c <g_strcmp0@plt+0x3f20>
   1a9b8:	mov	sl, r0
   1a9bc:	ldr	r0, [r5, #56]	; 0x38
   1a9c0:	bl	1615c <gtk_builder_get_object@plt>
   1a9c4:	ldr	r1, [sp, #40]	; 0x28
   1a9c8:	bl	15e14 <g_type_check_instance_cast@plt>
   1a9cc:	mov	r1, sl
   1a9d0:	bl	18204 <g_strcmp0@plt+0x14a8>
   1a9d4:	mov	r0, sl
   1a9d8:	bl	16660 <g_free@plt>
   1a9dc:	ldrd	r2, [sp, #80]	; 0x50
   1a9e0:	orrs	r3, r2, r3
   1a9e4:	bne	1aadc <g_strcmp0@plt+0x3d80>
   1a9e8:	ldr	r3, [sp, #44]	; 0x2c
   1a9ec:	cmp	r3, #0
   1a9f0:	bne	1a7b8 <g_strcmp0@plt+0x3a5c>
   1a9f4:	ldr	r1, [pc, #644]	; 1ac80 <g_strcmp0@plt+0x3f24>
   1a9f8:	ldr	r0, [r4, #12]
   1a9fc:	bl	16d5c <g_strcmp0@plt>
   1aa00:	cmp	r0, #0
   1aa04:	beq	1a7b8 <g_strcmp0@plt+0x3a5c>
   1aa08:	ldr	r1, [pc, #628]	; 1ac84 <g_strcmp0@plt+0x3f28>
   1aa0c:	ldr	r0, [r5, #56]	; 0x38
   1aa10:	bl	1615c <gtk_builder_get_object@plt>
   1aa14:	ldr	sl, [sp, #40]	; 0x28
   1aa18:	mov	r1, sl
   1aa1c:	bl	15e14 <g_type_check_instance_cast@plt>
   1aa20:	bl	16978 <gtk_widget_show@plt>
   1aa24:	ldr	r1, [pc, #604]	; 1ac88 <g_strcmp0@plt+0x3f2c>
   1aa28:	ldr	r0, [r5, #56]	; 0x38
   1aa2c:	bl	1615c <gtk_builder_get_object@plt>
   1aa30:	mov	r1, sl
   1aa34:	bl	15e14 <g_type_check_instance_cast@plt>
   1aa38:	ldr	fp, [r4, #12]
   1aa3c:	mov	sl, r0
   1aa40:	mov	r0, fp
   1aa44:	bl	1d634 <g_strcmp0@plt+0x68d8>
   1aa48:	cmp	r0, #0
   1aa4c:	bne	1abfc <g_strcmp0@plt+0x3ea0>
   1aa50:	mov	r1, fp
   1aa54:	ldr	r0, [r5, #28]
   1aa58:	bl	1648c <g_hash_table_lookup@plt>
   1aa5c:	subs	r3, r0, #0
   1aa60:	beq	1ac24 <g_strcmp0@plt+0x3ec8>
   1aa64:	str	r3, [sp, #40]	; 0x28
   1aa68:	bl	15d6c <gtk_label_get_type@plt>
   1aa6c:	mov	r1, r0
   1aa70:	mov	r0, sl
   1aa74:	bl	15e14 <g_type_check_instance_cast@plt>
   1aa78:	ldr	r3, [sp, #40]	; 0x28
   1aa7c:	mov	r1, r3
   1aa80:	bl	15d78 <gtk_label_set_label@plt>
   1aa84:	mov	r0, sl
   1aa88:	bl	16978 <gtk_widget_show@plt>
   1aa8c:	b	1a7b8 <g_strcmp0@plt+0x3a5c>
   1aa90:	mov	r3, sl
   1aa94:	ldr	r2, [pc, #496]	; 1ac8c <g_strcmp0@plt+0x3f30>
   1aa98:	mov	r1, #16
   1aa9c:	ldr	r0, [pc, #424]	; 1ac4c <g_strcmp0@plt+0x3ef0>
   1aaa0:	bl	15ebc <g_log@plt>
   1aaa4:	mov	r4, r6
   1aaa8:	b	1a7b8 <g_strcmp0@plt+0x3a5c>
   1aaac:	ldr	r3, [sp, #56]	; 0x38
   1aab0:	ldr	r2, [pc, #472]	; 1ac90 <g_strcmp0@plt+0x3f34>
   1aab4:	mov	r1, #16
   1aab8:	ldr	r3, [r3, #8]
   1aabc:	ldr	r0, [pc, #392]	; 1ac4c <g_strcmp0@plt+0x3ef0>
   1aac0:	bl	15ebc <g_log@plt>
   1aac4:	ldr	r0, [sp, #56]	; 0x38
   1aac8:	bl	15d3c <g_error_free@plt>
   1aacc:	mov	r4, r7
   1aad0:	mov	r8, r7
   1aad4:	mov	r6, r7
   1aad8:	b	1a7b8 <g_strcmp0@plt+0x3a5c>
   1aadc:	ldr	r1, [pc, #432]	; 1ac94 <g_strcmp0@plt+0x3f38>
   1aae0:	ldr	r0, [r5, #56]	; 0x38
   1aae4:	bl	1615c <gtk_builder_get_object@plt>
   1aae8:	ldr	r1, [sp, #40]	; 0x28
   1aaec:	bl	15e14 <g_type_check_instance_cast@plt>
   1aaf0:	ldr	r1, [pc, #392]	; 1ac80 <g_strcmp0@plt+0x3f24>
   1aaf4:	mov	fp, r0
   1aaf8:	ldr	r0, [r4, #12]
   1aafc:	bl	16d5c <g_strcmp0@plt>
   1ab00:	mov	sl, r0
   1ab04:	bl	15d6c <gtk_label_get_type@plt>
   1ab08:	cmp	sl, #0
   1ab0c:	str	r0, [sp, #48]	; 0x30
   1ab10:	beq	1aba0 <g_strcmp0@plt+0x3e44>
   1ab14:	ldr	r3, [sp, #44]	; 0x2c
   1ab18:	ldr	r1, [sp, #48]	; 0x30
   1ab1c:	cmp	r3, #0
   1ab20:	mov	r0, fp
   1ab24:	beq	1abd4 <g_strcmp0@plt+0x3e78>
   1ab28:	bl	15e14 <g_type_check_instance_cast@plt>
   1ab2c:	ldr	r1, [pc, #356]	; 1ac98 <g_strcmp0@plt+0x3f3c>
   1ab30:	mov	r2, #5
   1ab34:	mov	sl, r0
   1ab38:	mov	r0, #0
   1ab3c:	bl	1666c <dcgettext@plt>
   1ab40:	mov	r1, r0
   1ab44:	mov	r0, sl
   1ab48:	bl	15d78 <gtk_label_set_label@plt>
   1ab4c:	mov	r0, fp
   1ab50:	bl	16978 <gtk_widget_show@plt>
   1ab54:	ldr	r1, [pc, #320]	; 1ac9c <g_strcmp0@plt+0x3f40>
   1ab58:	ldr	r0, [r5, #56]	; 0x38
   1ab5c:	bl	1615c <gtk_builder_get_object@plt>
   1ab60:	ldr	r1, [sp, #40]	; 0x28
   1ab64:	bl	15e14 <g_type_check_instance_cast@plt>
   1ab68:	mov	fp, r0
   1ab6c:	ldrd	r0, [sp, #80]	; 0x50
   1ab70:	bl	15d18 <g_format_size@plt>
   1ab74:	ldr	r1, [sp, #48]	; 0x30
   1ab78:	mov	sl, r0
   1ab7c:	mov	r0, fp
   1ab80:	bl	15e14 <g_type_check_instance_cast@plt>
   1ab84:	mov	r1, sl
   1ab88:	bl	15d78 <gtk_label_set_label@plt>
   1ab8c:	mov	r0, fp
   1ab90:	bl	16978 <gtk_widget_show@plt>
   1ab94:	mov	r0, sl
   1ab98:	bl	16660 <g_free@plt>
   1ab9c:	b	1a9e8 <g_strcmp0@plt+0x3c8c>
   1aba0:	mov	r1, r0
   1aba4:	mov	r0, fp
   1aba8:	bl	15e14 <g_type_check_instance_cast@plt>
   1abac:	mov	r2, #5
   1abb0:	ldr	r1, [pc, #232]	; 1aca0 <g_strcmp0@plt+0x3f44>
   1abb4:	str	r0, [sp, #52]	; 0x34
   1abb8:	mov	r0, sl
   1abbc:	bl	1666c <dcgettext@plt>
   1abc0:	ldr	r3, [sp, #52]	; 0x34
   1abc4:	mov	r1, r0
   1abc8:	mov	r0, r3
   1abcc:	bl	15d78 <gtk_label_set_label@plt>
   1abd0:	b	1ab4c <g_strcmp0@plt+0x3df0>
   1abd4:	bl	15e14 <g_type_check_instance_cast@plt>
   1abd8:	mov	r2, #5
   1abdc:	ldr	r1, [pc, #192]	; 1aca4 <g_strcmp0@plt+0x3f48>
   1abe0:	mov	sl, r0
   1abe4:	ldr	r0, [sp, #44]	; 0x2c
   1abe8:	bl	1666c <dcgettext@plt>
   1abec:	mov	r1, r0
   1abf0:	mov	r0, sl
   1abf4:	bl	15d78 <gtk_label_set_label@plt>
   1abf8:	b	1ab4c <g_strcmp0@plt+0x3df0>
   1abfc:	ldr	r2, [pc, #164]	; 1aca8 <g_strcmp0@plt+0x3f4c>
   1ac00:	mov	r1, #16
   1ac04:	ldr	r0, [pc, #64]	; 1ac4c <g_strcmp0@plt+0x3ef0>
   1ac08:	bl	15ebc <g_log@plt>
   1ac0c:	ldr	r0, [sp, #44]	; 0x2c
   1ac10:	mov	r2, #5
   1ac14:	ldr	r1, [pc, #144]	; 1acac <g_strcmp0@plt+0x3f50>
   1ac18:	bl	1666c <dcgettext@plt>
   1ac1c:	mov	r3, r0
   1ac20:	b	1aa64 <g_strcmp0@plt+0x3d08>
   1ac24:	mov	r3, fp
   1ac28:	ldr	r2, [pc, #128]	; 1acb0 <g_strcmp0@plt+0x3f54>
   1ac2c:	mov	r1, #16
   1ac30:	ldr	r0, [pc, #20]	; 1ac4c <g_strcmp0@plt+0x3ef0>
   1ac34:	bl	15ebc <g_log@plt>
   1ac38:	mov	r3, fp
   1ac3c:	b	1aa64 <g_strcmp0@plt+0x3d08>
   1ac40:	bl	165a0 <__stack_chk_fail@plt>
   1ac44:	andeq	ip, r3, r0, asr lr
   1ac48:	andeq	r7, r2, ip, asr #4
   1ac4c:	andeq	r6, r2, r8, lsr #21
   1ac50:	andeq	r6, r2, r8, lsl #17
   1ac54:	andeq	r7, r2, r0, lsl #5
   1ac58:	muleq	r2, r0, r2
   1ac5c:	ldrdeq	r6, [r2], -ip
   1ac60:	andeq	r6, r2, r8, lsl #19
   1ac64:	muleq	r2, r0, r3
   1ac68:	andeq	r7, r2, ip, asr #3
   1ac6c:	andeq	ip, r2, r8, lsl #14
   1ac70:	andeq	ip, r2, r4, lsr r0
   1ac74:	muleq	r2, r8, r2
   1ac78:	andeq	r7, r2, ip, lsr #5
   1ac7c:	andeq	r7, r2, ip, lsl r2
   1ac80:	ldrdeq	r7, [r2], -r0
   1ac84:	andeq	r7, r2, ip, lsl #6
   1ac88:	andeq	r7, r2, r0, lsr #6
   1ac8c:	andeq	r7, r2, ip, ror #4
   1ac90:	andeq	r6, r2, r4, ror lr
   1ac94:			; <UNDEFINED> instruction: 0x000272bc
   1ac98:	andeq	r7, r2, r0, ror #5
   1ac9c:	andeq	r7, r2, r0, lsl #6
   1aca0:	ldrdeq	r7, [r2], -r8
   1aca4:	strdeq	r7, [r2], -r0
   1aca8:	andeq	r7, r2, r0, lsr r3
   1acac:	andeq	r7, r2, r0, asr #6
   1acb0:	andeq	r7, r2, r8, asr #6
   1acb4:	push	{r4, r5, r6, r7, r8, lr}
   1acb8:	mov	r5, r0
   1acbc:	ldr	r1, [pc, #168]	; 1ad6c <g_strcmp0@plt+0x4010>
   1acc0:	ldr	r0, [r0]
   1acc4:	bl	1615c <gtk_builder_get_object@plt>
   1acc8:	mov	r6, r0
   1accc:	bl	15db4 <gtk_widget_get_type@plt>
   1acd0:	mov	r4, r0
   1acd4:	mov	r1, r0
   1acd8:	mov	r0, r6
   1acdc:	bl	15e14 <g_type_check_instance_cast@plt>
   1ace0:	mov	r1, #0
   1ace4:	bl	18204 <g_strcmp0@plt+0x14a8>
   1ace8:	ldr	r0, [r5]
   1acec:	ldr	r1, [pc, #124]	; 1ad70 <g_strcmp0@plt+0x4014>
   1acf0:	bl	1615c <gtk_builder_get_object@plt>
   1acf4:	mov	r1, r4
   1acf8:	bl	15e14 <g_type_check_instance_cast@plt>
   1acfc:	ldr	r6, [pc, #112]	; 1ad74 <g_strcmp0@plt+0x4018>
   1ad00:	mov	r8, r0
   1ad04:	bl	15d6c <gtk_label_get_type@plt>
   1ad08:	mov	r7, r0
   1ad0c:	mov	r1, r0
   1ad10:	mov	r0, r8
   1ad14:	bl	15e14 <g_type_check_instance_cast@plt>
   1ad18:	mov	r1, r6
   1ad1c:	bl	15d78 <gtk_label_set_label@plt>
   1ad20:	ldr	r0, [r5]
   1ad24:	ldr	r1, [pc, #76]	; 1ad78 <g_strcmp0@plt+0x401c>
   1ad28:	bl	1615c <gtk_builder_get_object@plt>
   1ad2c:	mov	r1, r4
   1ad30:	bl	15e14 <g_type_check_instance_cast@plt>
   1ad34:	mov	r1, r7
   1ad38:	bl	15e14 <g_type_check_instance_cast@plt>
   1ad3c:	mov	r1, r6
   1ad40:	bl	15d78 <gtk_label_set_label@plt>
   1ad44:	ldr	r0, [r5]
   1ad48:	ldr	r1, [pc, #44]	; 1ad7c <g_strcmp0@plt+0x4020>
   1ad4c:	bl	1615c <gtk_builder_get_object@plt>
   1ad50:	mov	r1, r4
   1ad54:	bl	15e14 <g_type_check_instance_cast@plt>
   1ad58:	mov	r1, r7
   1ad5c:	bl	15e14 <g_type_check_instance_cast@plt>
   1ad60:	mov	r1, r6
   1ad64:	pop	{r4, r5, r6, r7, r8, lr}
   1ad68:	b	15d78 <gtk_label_set_label@plt>
   1ad6c:	andeq	r7, r2, ip, lsl r2
   1ad70:	andeq	r7, r2, ip, lsr #5
   1ad74:	ldrdeq	r7, [r2], -r0
   1ad78:	andeq	r7, r2, r0, lsl #6
   1ad7c:	andeq	r7, r2, r0, lsr #6
   1ad80:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ad84:	mov	r5, #0
   1ad88:	ldr	r6, [pc, #420]	; 1af34 <g_strcmp0@plt+0x41d8>
   1ad8c:	ldr	r2, [r1, #4]
   1ad90:	sub	sp, sp, #76	; 0x4c
   1ad94:	ldr	r3, [r6]
   1ad98:	cmp	r2, r5
   1ad9c:	str	r3, [sp, #68]	; 0x44
   1ada0:	str	r5, [sp, #32]
   1ada4:	str	r5, [sp, #36]	; 0x24
   1ada8:	bne	1adc4 <g_strcmp0@plt+0x4068>
   1adac:	ldr	r2, [sp, #68]	; 0x44
   1adb0:	ldr	r3, [r6]
   1adb4:	cmp	r2, r3
   1adb8:	bne	1af30 <g_strcmp0@plt+0x41d4>
   1adbc:	add	sp, sp, #76	; 0x4c
   1adc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1adc4:	mov	r4, r1
   1adc8:	add	r2, sp, #52	; 0x34
   1adcc:	add	r1, sp, #28
   1add0:	bl	16714 <gtk_tree_selection_get_selected@plt>
   1add4:	subs	r7, r0, #0
   1add8:	beq	1af00 <g_strcmp0@plt+0x41a4>
   1addc:	mvn	ip, #0
   1ade0:	add	r0, sp, #36	; 0x24
   1ade4:	mov	r2, #6
   1ade8:	add	r3, sp, #32
   1adec:	mov	r8, #5
   1adf0:	str	r0, [sp, #12]
   1adf4:	str	r2, [sp, #8]
   1adf8:	str	r3, [sp, #4]
   1adfc:	add	r1, sp, #52	; 0x34
   1ae00:	str	ip, [sp, #16]
   1ae04:	str	r8, [sp]
   1ae08:	add	r3, sp, #40	; 0x28
   1ae0c:	mov	r2, #1
   1ae10:	ldr	r0, [sp, #28]
   1ae14:	bl	16c6c <gtk_tree_model_get@plt>
   1ae18:	ldr	r7, [sp, #32]
   1ae1c:	cmp	r7, #0
   1ae20:	beq	1af1c <g_strcmp0@plt+0x41c0>
   1ae24:	ldr	r1, [pc, #268]	; 1af38 <g_strcmp0@plt+0x41dc>
   1ae28:	ldr	r0, [r4, #56]	; 0x38
   1ae2c:	bl	1615c <gtk_builder_get_object@plt>
   1ae30:	mov	r9, r0
   1ae34:	bl	15db4 <gtk_widget_get_type@plt>
   1ae38:	mov	r1, r0
   1ae3c:	mov	r7, r0
   1ae40:	mov	r0, r9
   1ae44:	bl	15e14 <g_type_check_instance_cast@plt>
   1ae48:	bl	16978 <gtk_widget_show@plt>
   1ae4c:	ldr	r1, [pc, #232]	; 1af3c <g_strcmp0@plt+0x41e0>
   1ae50:	ldr	r0, [r4, #56]	; 0x38
   1ae54:	bl	1615c <gtk_builder_get_object@plt>
   1ae58:	mov	r1, r7
   1ae5c:	bl	15e14 <g_type_check_instance_cast@plt>
   1ae60:	mov	r1, r5
   1ae64:	bl	18204 <g_strcmp0@plt+0x14a8>
   1ae68:	ldr	r0, [r4, #12]
   1ae6c:	bl	15cdc <g_cancellable_reset@plt>
   1ae70:	mov	r2, r8
   1ae74:	mov	r0, r5
   1ae78:	ldr	r1, [pc, #192]	; 1af40 <g_strcmp0@plt+0x41e4>
   1ae7c:	bl	1666c <dcgettext@plt>
   1ae80:	ldr	r3, [r4, #124]	; 0x7c
   1ae84:	add	r3, r3, #1
   1ae88:	cmp	r3, #1
   1ae8c:	str	r3, [r4, #124]	; 0x7c
   1ae90:	ble	1aef0 <g_strcmp0@plt+0x4194>
   1ae94:	ldr	r0, [sp, #32]
   1ae98:	bl	15d00 <pk_package_ids_from_id@plt>
   1ae9c:	ldr	r5, [r4, #104]	; 0x68
   1aea0:	mov	r7, r0
   1aea4:	bl	15f70 <pk_client_get_type@plt>
   1aea8:	mov	r1, r0
   1aeac:	mov	r0, r5
   1aeb0:	bl	15e14 <g_type_check_instance_cast@plt>
   1aeb4:	ldr	r3, [pc, #136]	; 1af44 <g_strcmp0@plt+0x41e8>
   1aeb8:	str	r4, [sp, #8]
   1aebc:	str	r4, [sp]
   1aec0:	mov	r1, r7
   1aec4:	ldr	r2, [r4, #12]
   1aec8:	str	r3, [sp, #4]
   1aecc:	ldr	r3, [pc, #116]	; 1af48 <g_strcmp0@plt+0x41ec>
   1aed0:	bl	16900 <pk_client_get_details_async@plt>
   1aed4:	ldr	r0, [sp, #32]
   1aed8:	bl	16660 <g_free@plt>
   1aedc:	ldr	r0, [sp, #36]	; 0x24
   1aee0:	bl	16660 <g_free@plt>
   1aee4:	mov	r0, r7
   1aee8:	bl	1654c <g_strfreev@plt>
   1aeec:	b	1adac <g_strcmp0@plt+0x4050>
   1aef0:	mov	r1, r0
   1aef4:	mov	r0, r4
   1aef8:	bl	18f10 <g_strcmp0@plt+0x21b4>
   1aefc:	b	1ae94 <g_strcmp0@plt+0x4138>
   1af00:	ldr	r2, [pc, #68]	; 1af4c <g_strcmp0@plt+0x41f0>
   1af04:	mov	r1, #128	; 0x80
   1af08:	ldr	r0, [pc, #64]	; 1af50 <g_strcmp0@plt+0x41f4>
   1af0c:	bl	15ebc <g_log@plt>
   1af10:	add	r0, r4, #56	; 0x38
   1af14:	bl	1acb4 <g_strcmp0@plt+0x3f58>
   1af18:	b	1aed4 <g_strcmp0@plt+0x4178>
   1af1c:	ldr	r2, [pc, #48]	; 1af54 <g_strcmp0@plt+0x41f8>
   1af20:	mov	r1, #128	; 0x80
   1af24:	ldr	r0, [pc, #36]	; 1af50 <g_strcmp0@plt+0x41f4>
   1af28:	bl	15ebc <g_log@plt>
   1af2c:	b	1aed4 <g_strcmp0@plt+0x4178>
   1af30:	bl	165a0 <__stack_chk_fail@plt>
   1af34:	andeq	ip, r3, r0, asr lr
   1af38:	muleq	r2, r0, r3
   1af3c:	andeq	r7, r2, ip, lsl r2
   1af40:	andeq	r6, r2, r8, asr #31
   1af44:	andeq	sl, r1, r8, asr #13
   1af48:	andeq	r7, r1, r4, lsl ip
   1af4c:	andeq	r7, r2, ip, ror #6
   1af50:	andeq	r6, r2, r8, lsr #21
   1af54:	andeq	r7, r2, ip, ror r3
   1af58:	push	{r4, r5, r6, r7, lr}
   1af5c:	mov	r1, #128	; 0x80
   1af60:	mov	r4, r0
   1af64:	sub	sp, sp, #28
   1af68:	ldr	r2, [pc, #1004]	; 1b35c <g_strcmp0@plt+0x4600>
   1af6c:	ldr	r0, [pc, #1004]	; 1b360 <g_strcmp0@plt+0x4604>
   1af70:	bl	15ebc <g_log@plt>
   1af74:	mov	r5, #0
   1af78:	add	r0, r4, #56	; 0x38
   1af7c:	bl	1acb4 <g_strcmp0@plt+0x3f58>
   1af80:	ldr	r0, [r4, #60]	; 0x3c
   1af84:	str	r5, [r4, #4]
   1af88:	bl	16c9c <gtk_list_store_clear@plt>
   1af8c:	mov	r0, r5
   1af90:	mov	r2, #5
   1af94:	ldr	r1, [pc, #968]	; 1b364 <g_strcmp0@plt+0x4608>
   1af98:	bl	1666c <dcgettext@plt>
   1af9c:	ldr	r3, [r4, #124]	; 0x7c
   1afa0:	add	r3, r3, #1
   1afa4:	cmp	r3, #1
   1afa8:	str	r3, [r4, #124]	; 0x7c
   1afac:	bgt	1afbc <g_strcmp0@plt+0x4260>
   1afb0:	mov	r1, r0
   1afb4:	mov	r0, r4
   1afb8:	bl	18f10 <g_strcmp0@plt+0x21b4>
   1afbc:	ldr	r5, [r4, #40]	; 0x28
   1afc0:	cmp	r5, #0
   1afc4:	beq	1aff4 <g_strcmp0@plt+0x4298>
   1afc8:	sub	r3, r5, #1
   1afcc:	cmp	r3, #1
   1afd0:	bls	1b0e0 <g_strcmp0@plt+0x4384>
   1afd4:	cmp	r5, #3
   1afd8:	beq	1b1d8 <g_strcmp0@plt+0x447c>
   1afdc:	ldr	r2, [pc, #900]	; 1b368 <g_strcmp0@plt+0x460c>
   1afe0:	mov	r1, #128	; 0x80
   1afe4:	ldr	r0, [pc, #884]	; 1b360 <g_strcmp0@plt+0x4604>
   1afe8:	add	sp, sp, #28
   1afec:	pop	{r4, r5, r6, r7, lr}
   1aff0:	b	15ebc <g_log@plt>
   1aff4:	ldr	r1, [pc, #880]	; 1b36c <g_strcmp0@plt+0x4610>
   1aff8:	ldr	r0, [r4, #56]	; 0x38
   1affc:	bl	1615c <gtk_builder_get_object@plt>
   1b000:	mov	r6, r0
   1b004:	bl	16a68 <gtk_entry_get_type@plt>
   1b008:	mov	r1, r0
   1b00c:	mov	r0, r6
   1b010:	bl	15e14 <g_type_check_instance_cast@plt>
   1b014:	mov	r6, r0
   1b018:	ldr	r0, [r4, #24]
   1b01c:	bl	16660 <g_free@plt>
   1b020:	mov	r0, r6
   1b024:	bl	15ef8 <gtk_entry_get_text@plt>
   1b028:	bl	160f0 <g_strdup@plt>
   1b02c:	str	r0, [r4, #24]
   1b030:	bl	1d634 <g_strcmp0@plt+0x68d8>
   1b034:	subs	r6, r0, #0
   1b038:	bne	1b240 <g_strcmp0@plt+0x44e4>
   1b03c:	ldr	r0, [r4, #24]
   1b040:	bl	1d634 <g_strcmp0@plt+0x68d8>
   1b044:	cmp	r0, #0
   1b048:	bne	1b140 <g_strcmp0@plt+0x43e4>
   1b04c:	ldr	r2, [pc, #796]	; 1b370 <g_strcmp0@plt+0x4614>
   1b050:	ldr	r3, [r4, #24]
   1b054:	mov	r1, #128	; 0x80
   1b058:	ldr	r0, [pc, #768]	; 1b360 <g_strcmp0@plt+0x4604>
   1b05c:	bl	15ebc <g_log@plt>
   1b060:	mov	r3, #1
   1b064:	str	r3, [r4, #8]
   1b068:	ldr	r1, [r4, #56]	; 0x38
   1b06c:	add	r0, r4, #8
   1b070:	bl	18e60 <g_strcmp0@plt+0x2104>
   1b074:	ldr	r0, [r4, #12]
   1b078:	bl	15cdc <g_cancellable_reset@plt>
   1b07c:	mvn	r2, #0
   1b080:	ldr	r1, [pc, #748]	; 1b374 <g_strcmp0@plt+0x4618>
   1b084:	ldr	r0, [r4, #24]
   1b088:	bl	162dc <g_strsplit@plt>
   1b08c:	ldr	r3, [r4, #44]	; 0x2c
   1b090:	cmp	r3, #0
   1b094:	mov	r5, r0
   1b098:	beq	1b2e8 <g_strcmp0@plt+0x458c>
   1b09c:	cmp	r3, #1
   1b0a0:	beq	1b328 <g_strcmp0@plt+0x45cc>
   1b0a4:	cmp	r3, #2
   1b0a8:	bne	1b2c8 <g_strcmp0@plt+0x456c>
   1b0ac:	ldr	r3, [r4, #12]
   1b0b0:	ldr	r1, [pc, #704]	; 1b378 <g_strcmp0@plt+0x461c>
   1b0b4:	ldr	r2, [pc, #704]	; 1b37c <g_strcmp0@plt+0x4620>
   1b0b8:	str	r4, [sp, #20]
   1b0bc:	str	r4, [sp, #12]
   1b0c0:	str	r0, [sp]
   1b0c4:	str	r1, [sp, #16]
   1b0c8:	str	r2, [sp, #8]
   1b0cc:	str	r3, [sp, #4]
   1b0d0:	ldrd	r2, [r4, #72]	; 0x48
   1b0d4:	ldr	r0, [r4, #104]	; 0x68
   1b0d8:	bl	16bb8 <pk_task_search_files_async@plt>
   1b0dc:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b0e0:	ldr	r0, [r4, #12]
   1b0e4:	bl	15cdc <g_cancellable_reset@plt>
   1b0e8:	ldr	r2, [r4, #40]	; 0x28
   1b0ec:	mov	r3, #1
   1b0f0:	cmp	r2, r3
   1b0f4:	str	r3, [r4, #8]
   1b0f8:	beq	1b270 <g_strcmp0@plt+0x4514>
   1b0fc:	ldr	r5, [r4, #104]	; 0x68
   1b100:	bl	15f70 <pk_client_get_type@plt>
   1b104:	mov	r1, r0
   1b108:	mov	r0, r5
   1b10c:	bl	15e14 <g_type_check_instance_cast@plt>
   1b110:	ldr	r3, [r4, #12]
   1b114:	ldr	r1, [pc, #604]	; 1b378 <g_strcmp0@plt+0x461c>
   1b118:	ldr	r2, [pc, #604]	; 1b37c <g_strcmp0@plt+0x4620>
   1b11c:	str	r4, [sp, #16]
   1b120:	str	r4, [sp, #8]
   1b124:	str	r1, [sp, #12]
   1b128:	str	r2, [sp, #4]
   1b12c:	str	r3, [sp]
   1b130:	ldrd	r2, [r4, #72]	; 0x48
   1b134:	bl	16930 <pk_client_get_packages_async@plt>
   1b138:	add	sp, sp, #28
   1b13c:	pop	{r4, r5, r6, r7, pc}
   1b140:	ldr	r2, [pc, #568]	; 1b380 <g_strcmp0@plt+0x4624>
   1b144:	mov	r1, #128	; 0x80
   1b148:	ldr	r0, [pc, #528]	; 1b360 <g_strcmp0@plt+0x4604>
   1b14c:	bl	15ebc <g_log@plt>
   1b150:	ldr	r1, [pc, #556]	; 1b384 <g_strcmp0@plt+0x4628>
   1b154:	ldr	r0, [r4, #56]	; 0x38
   1b158:	bl	1615c <gtk_builder_get_object@plt>
   1b15c:	mov	r5, r0
   1b160:	bl	16d20 <gtk_window_get_type@plt>
   1b164:	mov	r1, r0
   1b168:	mov	r0, r5
   1b16c:	bl	15e14 <g_type_check_instance_cast@plt>
   1b170:	mov	r2, #5
   1b174:	ldr	r1, [pc, #524]	; 1b388 <g_strcmp0@plt+0x462c>
   1b178:	mov	r5, r0
   1b17c:	mov	r0, r6
   1b180:	bl	1666c <dcgettext@plt>
   1b184:	mov	r2, #5
   1b188:	ldr	r1, [pc, #508]	; 1b38c <g_strcmp0@plt+0x4630>
   1b18c:	mov	r7, r0
   1b190:	mov	r0, r6
   1b194:	bl	1666c <dcgettext@plt>
   1b198:	mov	r3, r6
   1b19c:	mov	r1, r7
   1b1a0:	mov	r2, r0
   1b1a4:	mov	r0, r5
   1b1a8:	bl	25660 <g_strcmp0@plt+0xe904>
   1b1ac:	ldr	r3, [r4, #124]	; 0x7c
   1b1b0:	ldr	r0, [r4, #108]	; 0x6c
   1b1b4:	sub	r3, r3, #1
   1b1b8:	cmp	r3, #0
   1b1bc:	str	r3, [r4, #124]	; 0x7c
   1b1c0:	ble	1b2dc <g_strcmp0@plt+0x4580>
   1b1c4:	mov	r5, #0
   1b1c8:	mov	r0, r5
   1b1cc:	add	sp, sp, #28
   1b1d0:	pop	{r4, r5, r6, r7, lr}
   1b1d4:	b	1654c <g_strfreev@plt>
   1b1d8:	ldr	r0, [r4, #100]	; 0x64
   1b1dc:	bl	163cc <pk_package_sack_get_array@plt>
   1b1e0:	ldr	r3, [r0, #4]
   1b1e4:	mov	r6, r0
   1b1e8:	cmp	r3, #0
   1b1ec:	movne	r5, #0
   1b1f0:	beq	1b31c <g_strcmp0@plt+0x45c0>
   1b1f4:	ldr	r3, [r6]
   1b1f8:	mov	r0, r4
   1b1fc:	ldr	r1, [r3, r5, lsl #2]
   1b200:	bl	19fe8 <g_strcmp0@plt+0x328c>
   1b204:	ldr	r3, [r6, #4]
   1b208:	add	r5, r5, #1
   1b20c:	cmp	r5, r3
   1b210:	bcc	1b1f4 <g_strcmp0@plt+0x4498>
   1b214:	ldr	r3, [r4, #124]	; 0x7c
   1b218:	ldr	r0, [r4, #108]	; 0x6c
   1b21c:	sub	r3, r3, #1
   1b220:	cmp	r3, #0
   1b224:	str	r3, [r4, #124]	; 0x7c
   1b228:	bgt	1b230 <g_strcmp0@plt+0x44d4>
   1b22c:	bl	16498 <gtk_widget_destroy@plt>
   1b230:	mov	r0, r6
   1b234:	add	sp, sp, #28
   1b238:	pop	{r4, r5, r6, r7, lr}
   1b23c:	b	16af8 <g_ptr_array_unref@plt>
   1b240:	ldr	r0, [pc, #280]	; 1b360 <g_strcmp0@plt+0x4604>
   1b244:	ldr	r2, [pc, #324]	; 1b390 <g_strcmp0@plt+0x4634>
   1b248:	mov	r1, #128	; 0x80
   1b24c:	bl	15ebc <g_log@plt>
   1b250:	ldr	r3, [r4, #124]	; 0x7c
   1b254:	ldr	r0, [r4, #108]	; 0x6c
   1b258:	sub	r3, r3, #1
   1b25c:	cmp	r3, #0
   1b260:	str	r3, [r4, #124]	; 0x7c
   1b264:	bgt	1b1c4 <g_strcmp0@plt+0x4468>
   1b268:	bl	16498 <gtk_widget_destroy@plt>
   1b26c:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b270:	mvn	r2, #0
   1b274:	ldr	r1, [pc, #248]	; 1b374 <g_strcmp0@plt+0x4618>
   1b278:	ldr	r0, [r4, #20]
   1b27c:	bl	162dc <g_strsplit@plt>
   1b280:	ldr	r6, [r4, #104]	; 0x68
   1b284:	mov	r5, r0
   1b288:	bl	15f70 <pk_client_get_type@plt>
   1b28c:	mov	r1, r0
   1b290:	mov	r0, r6
   1b294:	bl	15e14 <g_type_check_instance_cast@plt>
   1b298:	ldr	r3, [r4, #12]
   1b29c:	ldr	r1, [pc, #212]	; 1b378 <g_strcmp0@plt+0x461c>
   1b2a0:	ldr	r2, [pc, #212]	; 1b37c <g_strcmp0@plt+0x4620>
   1b2a4:	str	r5, [sp]
   1b2a8:	str	r4, [sp, #20]
   1b2ac:	str	r4, [sp, #12]
   1b2b0:	str	r1, [sp, #16]
   1b2b4:	str	r2, [sp, #8]
   1b2b8:	str	r3, [sp, #4]
   1b2bc:	ldrd	r2, [r4, #72]	; 0x48
   1b2c0:	bl	16c60 <pk_client_search_groups_async@plt>
   1b2c4:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b2c8:	ldr	r2, [pc, #196]	; 1b394 <g_strcmp0@plt+0x4638>
   1b2cc:	mov	r1, #16
   1b2d0:	ldr	r0, [pc, #136]	; 1b360 <g_strcmp0@plt+0x4604>
   1b2d4:	bl	15ebc <g_log@plt>
   1b2d8:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b2dc:	bl	16498 <gtk_widget_destroy@plt>
   1b2e0:	mov	r5, r6
   1b2e4:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b2e8:	ldr	r3, [r4, #12]
   1b2ec:	ldr	r1, [pc, #132]	; 1b378 <g_strcmp0@plt+0x461c>
   1b2f0:	ldr	r2, [pc, #132]	; 1b37c <g_strcmp0@plt+0x4620>
   1b2f4:	str	r4, [sp, #20]
   1b2f8:	str	r4, [sp, #12]
   1b2fc:	str	r0, [sp]
   1b300:	str	r1, [sp, #16]
   1b304:	str	r2, [sp, #8]
   1b308:	str	r3, [sp, #4]
   1b30c:	ldrd	r2, [r4, #72]	; 0x48
   1b310:	ldr	r0, [r4, #104]	; 0x68
   1b314:	bl	15ff4 <pk_task_search_names_async@plt>
   1b318:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b31c:	mov	r0, r4
   1b320:	bl	180ac <g_strcmp0@plt+0x1350>
   1b324:	b	1b214 <g_strcmp0@plt+0x44b8>
   1b328:	ldr	r3, [r4, #12]
   1b32c:	ldr	r1, [pc, #68]	; 1b378 <g_strcmp0@plt+0x461c>
   1b330:	ldr	r2, [pc, #68]	; 1b37c <g_strcmp0@plt+0x4620>
   1b334:	str	r4, [sp, #20]
   1b338:	str	r4, [sp, #12]
   1b33c:	str	r0, [sp]
   1b340:	str	r1, [sp, #16]
   1b344:	str	r2, [sp, #8]
   1b348:	str	r3, [sp, #4]
   1b34c:	ldrd	r2, [r4, #72]	; 0x48
   1b350:	ldr	r0, [r4, #104]	; 0x68
   1b354:	bl	162ac <pk_task_search_details_async@plt>
   1b358:	b	1b1c8 <g_strcmp0@plt+0x446c>
   1b35c:	andeq	r7, r2, r0, lsr #7
   1b360:	andeq	r6, r2, r8, lsr #21
   1b364:			; <UNDEFINED> instruction: 0x000273b0
   1b368:	andeq	r7, r2, ip, asr r4
   1b36c:	strdeq	r6, [r2], -r8
   1b370:	andeq	r7, r2, r0, asr #8
   1b374:	andeq	r7, r2, r0, lsl fp
   1b378:	andeq	sl, r1, ip, ror #4
   1b37c:	andeq	r7, r1, r4, lsl ip
   1b380:	andeq	r7, r2, r0, ror #7
   1b384:	andeq	r6, r2, r8, lsl #17
   1b388:	andeq	r7, r2, r0, lsl #8
   1b38c:	andeq	r7, r2, r4, lsl r4
   1b390:	ldrdeq	r7, [r2], -r4
   1b394:	andeq	r7, r2, r8, asr #8
   1b398:	ldr	r3, [r1, #8]
   1b39c:	mov	r2, #0
   1b3a0:	cmp	r3, #1
   1b3a4:	str	r2, [r1, #40]	; 0x28
   1b3a8:	bxeq	lr
   1b3ac:	mov	r0, r1
   1b3b0:	b	1af58 <g_strcmp0@plt+0x41fc>
   1b3b4:	ldr	r2, [r0, #8]
   1b3b8:	cmp	r2, #1
   1b3bc:	beq	1b3dc <g_strcmp0@plt+0x4680>
   1b3c0:	ldr	r3, [r0, #40]	; 0x28
   1b3c4:	cmp	r3, #4
   1b3c8:	beq	1b3dc <g_strcmp0@plt+0x4680>
   1b3cc:	push	{r4, lr}
   1b3d0:	bl	1af58 <g_strcmp0@plt+0x41fc>
   1b3d4:	mov	r0, #0
   1b3d8:	pop	{r4, pc}
   1b3dc:	mov	r0, #0
   1b3e0:	bx	lr
   1b3e4:	push	{r4, r5, r6, r7, lr}
   1b3e8:	sub	sp, sp, #52	; 0x34
   1b3ec:	ldr	r5, [pc, #364]	; 1b560 <g_strcmp0@plt+0x4804>
   1b3f0:	mov	r4, r1
   1b3f4:	ldr	r2, [pc, #360]	; 1b564 <g_strcmp0@plt+0x4808>
   1b3f8:	ldr	r3, [r5]
   1b3fc:	mov	r1, #128	; 0x80
   1b400:	mov	r6, r0
   1b404:	ldr	r0, [pc, #348]	; 1b568 <g_strcmp0@plt+0x480c>
   1b408:	str	r3, [sp, #44]	; 0x2c
   1b40c:	bl	15ebc <g_log@plt>
   1b410:	add	r0, r4, #56	; 0x38
   1b414:	bl	1acb4 <g_strcmp0@plt+0x3f58>
   1b418:	mov	r3, #0
   1b41c:	str	r3, [r4, #4]
   1b420:	ldr	r0, [r4, #60]	; 0x3c
   1b424:	bl	16c9c <gtk_list_store_clear@plt>
   1b428:	mov	r0, r6
   1b42c:	add	r2, sp, #28
   1b430:	add	r1, sp, #20
   1b434:	bl	16714 <gtk_tree_selection_get_selected@plt>
   1b438:	cmp	r0, #0
   1b43c:	bne	1b458 <g_strcmp0@plt+0x46fc>
   1b440:	ldr	r2, [sp, #44]	; 0x2c
   1b444:	ldr	r3, [r5]
   1b448:	cmp	r2, r3
   1b44c:	bne	1b55c <g_strcmp0@plt+0x4800>
   1b450:	add	sp, sp, #52	; 0x34
   1b454:	pop	{r4, r5, r6, r7, pc}
   1b458:	ldr	r1, [pc, #268]	; 1b56c <g_strcmp0@plt+0x4810>
   1b45c:	ldr	r0, [r4, #56]	; 0x38
   1b460:	bl	1615c <gtk_builder_get_object@plt>
   1b464:	mov	r7, r0
   1b468:	bl	16a68 <gtk_entry_get_type@plt>
   1b46c:	mov	r1, r0
   1b470:	mov	r0, r7
   1b474:	mov	r7, r4
   1b478:	bl	15e14 <g_type_check_instance_cast@plt>
   1b47c:	ldr	r1, [pc, #236]	; 1b570 <g_strcmp0@plt+0x4814>
   1b480:	bl	167a4 <gtk_entry_set_text@plt>
   1b484:	ldr	r0, [r7, #20]!
   1b488:	bl	16660 <g_free@plt>
   1b48c:	mvn	r0, #0
   1b490:	add	r1, sp, #24
   1b494:	mov	r2, #4
   1b498:	mov	r3, r7
   1b49c:	str	r0, [sp, #8]
   1b4a0:	str	r1, [sp, #4]
   1b4a4:	str	r2, [sp]
   1b4a8:	add	r1, sp, #28
   1b4ac:	mov	r2, #3
   1b4b0:	ldr	r0, [sp, #20]
   1b4b4:	bl	16c6c <gtk_tree_model_get@plt>
   1b4b8:	ldr	r2, [sp, #24]
   1b4bc:	ldr	r3, [r4, #20]
   1b4c0:	mov	r1, #128	; 0x80
   1b4c4:	str	r2, [sp]
   1b4c8:	ldr	r0, [pc, #152]	; 1b568 <g_strcmp0@plt+0x480c>
   1b4cc:	ldr	r2, [pc, #160]	; 1b574 <g_strcmp0@plt+0x4818>
   1b4d0:	bl	15ebc <g_log@plt>
   1b4d4:	ldr	r3, [sp, #24]
   1b4d8:	cmp	r3, #0
   1b4dc:	beq	1b534 <g_strcmp0@plt+0x47d8>
   1b4e0:	ldr	r1, [pc, #144]	; 1b578 <g_strcmp0@plt+0x481c>
   1b4e4:	ldr	r0, [r4, #20]
   1b4e8:	bl	16d5c <g_strcmp0@plt>
   1b4ec:	cmp	r0, #0
   1b4f0:	bne	1b514 <g_strcmp0@plt+0x47b8>
   1b4f4:	mov	r3, #2
   1b4f8:	str	r3, [r4, #40]	; 0x28
   1b4fc:	ldr	r3, [r4, #8]
   1b500:	cmp	r3, #1
   1b504:	beq	1b440 <g_strcmp0@plt+0x46e4>
   1b508:	mov	r0, r4
   1b50c:	bl	1af58 <g_strcmp0@plt+0x41fc>
   1b510:	b	1b440 <g_strcmp0@plt+0x46e4>
   1b514:	ldr	r1, [pc, #96]	; 1b57c <g_strcmp0@plt+0x4820>
   1b518:	ldr	r0, [r4, #20]
   1b51c:	bl	16d5c <g_strcmp0@plt>
   1b520:	cmp	r0, #0
   1b524:	moveq	r3, #3
   1b528:	movne	r3, #1
   1b52c:	str	r3, [r4, #40]	; 0x28
   1b530:	b	1b4fc <g_strcmp0@plt+0x47a0>
   1b534:	add	r1, sp, #28
   1b538:	ldr	r0, [sp, #20]
   1b53c:	bl	15ee0 <gtk_tree_model_get_path@plt>
   1b540:	mov	r4, r0
   1b544:	mov	r1, r0
   1b548:	mov	r0, r6
   1b54c:	bl	15fd0 <gtk_tree_selection_select_path@plt>
   1b550:	mov	r0, r4
   1b554:	bl	16264 <gtk_tree_path_free@plt>
   1b558:	b	1b440 <g_strcmp0@plt+0x46e4>
   1b55c:	bl	165a0 <__stack_chk_fail@plt>
   1b560:	andeq	ip, r3, r0, asr lr
   1b564:	andeq	r7, r2, ip, ror #8
   1b568:	andeq	r6, r2, r8, lsr #21
   1b56c:	strdeq	r6, [r2], -r8
   1b570:	ldrdeq	r7, [r2], -r0
   1b574:	andeq	r7, r2, r0, lsl #9
   1b578:	muleq	r2, ip, r4
   1b57c:	andeq	r7, r2, ip, lsr #9
   1b580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b584:	sub	sp, sp, #76	; 0x4c
   1b588:	ldr	r5, [pc, #292]	; 1b6b4 <g_strcmp0@plt+0x4958>
   1b58c:	ldr	r1, [pc, #292]	; 1b6b8 <g_strcmp0@plt+0x495c>
   1b590:	mov	r8, #0
   1b594:	ldr	r3, [r5]
   1b598:	str	r8, [sp, #36]	; 0x24
   1b59c:	str	r3, [sp, #68]	; 0x44
   1b5a0:	bl	1615c <gtk_builder_get_object@plt>
   1b5a4:	mov	r4, r0
   1b5a8:	bl	165dc <gtk_tree_view_get_type@plt>
   1b5ac:	mov	r1, r0
   1b5b0:	mov	r0, r4
   1b5b4:	bl	15e14 <g_type_check_instance_cast@plt>
   1b5b8:	bl	16744 <gtk_tree_view_get_selection@plt>
   1b5bc:	add	r2, sp, #52	; 0x34
   1b5c0:	add	r1, sp, #32
   1b5c4:	bl	16714 <gtk_tree_selection_get_selected@plt>
   1b5c8:	cmp	r0, r8
   1b5cc:	beq	1b69c <g_strcmp0@plt+0x4940>
   1b5d0:	mvn	sl, #0
   1b5d4:	add	r2, sp, #36	; 0x24
   1b5d8:	mov	r3, #5
   1b5dc:	add	r1, sp, #52	; 0x34
   1b5e0:	stmib	sp, {r2, sl}
   1b5e4:	str	r3, [sp]
   1b5e8:	mov	r2, #1
   1b5ec:	add	r3, sp, #40	; 0x28
   1b5f0:	ldr	r0, [sp, #32]
   1b5f4:	bl	16c6c <gtk_tree_model_get@plt>
   1b5f8:	ldr	r3, [sp, #40]	; 0x28
   1b5fc:	ldr	r4, [sp, #32]
   1b600:	eor	r3, r3, #2
   1b604:	str	r3, [sp, #40]	; 0x28
   1b608:	bl	16c18 <gtk_list_store_get_type@plt>
   1b60c:	mov	r1, r0
   1b610:	mov	r0, r4
   1b614:	bl	15e14 <g_type_check_instance_cast@plt>
   1b618:	ldr	r9, [sp, #40]	; 0x28
   1b61c:	ldr	r4, [sp, #44]	; 0x2c
   1b620:	mov	r1, r4
   1b624:	mov	fp, r0
   1b628:	mov	r0, r9
   1b62c:	bl	19eec <g_strcmp0@plt+0x3190>
   1b630:	bic	r3, r9, #4
   1b634:	adds	r6, r3, sl
   1b638:	adc	r7, r4, sl
   1b63c:	cmp	r7, #0
   1b640:	cmpeq	r6, #1
   1b644:	movls	r2, #1
   1b648:	movhi	r2, #0
   1b64c:	mov	r3, #2
   1b650:	str	sl, [sp, #24]
   1b654:	str	r9, [sp]
   1b658:	str	r4, [sp, #4]
   1b65c:	str	r8, [sp, #16]
   1b660:	add	r1, sp, #52	; 0x34
   1b664:	str	r3, [sp, #8]
   1b668:	str	r2, [sp, #12]
   1b66c:	str	r0, [sp, #20]
   1b670:	mov	r2, #1
   1b674:	mov	r0, fp
   1b678:	bl	15c94 <gtk_list_store_set@plt>
   1b67c:	ldr	r0, [sp, #36]	; 0x24
   1b680:	bl	16660 <g_free@plt>
   1b684:	ldr	r2, [sp, #68]	; 0x44
   1b688:	ldr	r3, [r5]
   1b68c:	cmp	r2, r3
   1b690:	bne	1b6b0 <g_strcmp0@plt+0x4954>
   1b694:	add	sp, sp, #76	; 0x4c
   1b698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b69c:	ldr	r2, [pc, #24]	; 1b6bc <g_strcmp0@plt+0x4960>
   1b6a0:	mov	r1, #16
   1b6a4:	ldr	r0, [pc, #20]	; 1b6c0 <g_strcmp0@plt+0x4964>
   1b6a8:	bl	15ebc <g_log@plt>
   1b6ac:	b	1b684 <g_strcmp0@plt+0x4928>
   1b6b0:	bl	165a0 <__stack_chk_fail@plt>
   1b6b4:	andeq	ip, r3, r0, asr lr
   1b6b8:	andeq	r6, r2, ip, lsl #23
   1b6bc:	andeq	r6, r2, r4, lsr #31
   1b6c0:	andeq	r6, r2, r8, lsr #21
   1b6c4:	push	{r4, r5, r6, r7, r8, lr}
   1b6c8:	mov	r5, r1
   1b6cc:	ldr	r4, [pc, #260]	; 1b7d8 <g_strcmp0@plt+0x4a7c>
   1b6d0:	ldr	r1, [r1]
   1b6d4:	sub	sp, sp, #24
   1b6d8:	ldr	r3, [r4]
   1b6dc:	cmp	r1, #4
   1b6e0:	str	r3, [sp, #20]
   1b6e4:	beq	1b704 <g_strcmp0@plt+0x49a8>
   1b6e8:	mov	r0, #0
   1b6ec:	ldr	r2, [sp, #20]
   1b6f0:	ldr	r3, [r4]
   1b6f4:	cmp	r2, r3
   1b6f8:	bne	1b7d4 <g_strcmp0@plt+0x4a78>
   1b6fc:	add	sp, sp, #24
   1b700:	pop	{r4, r5, r6, r7, r8, pc}
   1b704:	ldr	r3, [r5, #40]	; 0x28
   1b708:	cmp	r3, #3
   1b70c:	bne	1b6e8 <g_strcmp0@plt+0x498c>
   1b710:	mov	r7, r2
   1b714:	mov	r6, r0
   1b718:	bl	165dc <gtk_tree_view_get_type@plt>
   1b71c:	mov	r1, r0
   1b720:	mov	r8, r0
   1b724:	mov	r0, r6
   1b728:	bl	15e14 <g_type_check_instance_cast@plt>
   1b72c:	vldr	d6, [r5, #24]
   1b730:	vldr	d7, [r5, #16]
   1b734:	mov	r3, #0
   1b738:	str	r3, [sp, #8]
   1b73c:	vcvt.s32.f64	s13, d6
   1b740:	vcvt.s32.f64	s15, d7
   1b744:	str	r3, [sp, #4]
   1b748:	str	r3, [sp]
   1b74c:	add	r3, sp, #16
   1b750:	vmov	r2, s13
   1b754:	vmov	r1, s15
   1b758:	bl	16300 <gtk_tree_view_get_path_at_pos@plt>
   1b75c:	cmp	r0, #0
   1b760:	bne	1b76c <g_strcmp0@plt+0x4a10>
   1b764:	mov	r0, #1
   1b768:	b	1b6ec <g_strcmp0@plt+0x4990>
   1b76c:	mov	r1, r8
   1b770:	mov	r0, r6
   1b774:	bl	15e14 <g_type_check_instance_cast@plt>
   1b778:	bl	16744 <gtk_tree_view_get_selection@plt>
   1b77c:	mov	r8, r0
   1b780:	bl	1672c <gtk_tree_selection_count_selected_rows@plt>
   1b784:	cmp	r0, #1
   1b788:	beq	1b7ac <g_strcmp0@plt+0x4a50>
   1b78c:	mov	r0, r8
   1b790:	bl	16a20 <gtk_tree_selection_unselect_all@plt>
   1b794:	mov	r0, r8
   1b798:	ldr	r1, [sp, #16]
   1b79c:	bl	15fd0 <gtk_tree_selection_select_path@plt>
   1b7a0:	ldr	r0, [sp, #16]
   1b7a4:	bl	16264 <gtk_tree_path_free@plt>
   1b7a8:	b	1b764 <g_strcmp0@plt+0x4a08>
   1b7ac:	ldr	r1, [sp, #16]
   1b7b0:	mov	r0, r8
   1b7b4:	bl	16810 <gtk_tree_selection_path_is_selected@plt>
   1b7b8:	cmp	r0, #0
   1b7bc:	beq	1b78c <g_strcmp0@plt+0x4a30>
   1b7c0:	mov	r2, r7
   1b7c4:	mov	r1, r5
   1b7c8:	mov	r0, r6
   1b7cc:	bl	18260 <g_strcmp0@plt+0x1504>
   1b7d0:	b	1b7a0 <g_strcmp0@plt+0x4a44>
   1b7d4:	bl	165a0 <__stack_chk_fail@plt>
   1b7d8:	andeq	ip, r3, r0, asr lr
   1b7dc:	push	{r4, r5, r6, r7, r8, lr}
   1b7e0:	sub	sp, sp, #64	; 0x40
   1b7e4:	ldr	r5, [pc, #168]	; 1b894 <g_strcmp0@plt+0x4b38>
   1b7e8:	mov	r4, r1
   1b7ec:	mov	r2, #0
   1b7f0:	ldr	r3, [r5]
   1b7f4:	add	r1, sp, #44	; 0x2c
   1b7f8:	mov	r6, r0
   1b7fc:	ldr	r0, [r0]
   1b800:	str	r3, [sp, #60]	; 0x3c
   1b804:	bl	15b74 <gtk_tree_store_append@plt>
   1b808:	mov	r0, r4
   1b80c:	bl	20d8c <g_strcmp0@plt+0xa030>
   1b810:	mov	r7, r0
   1b814:	mov	r0, r4
   1b818:	bl	21148 <g_strcmp0@plt+0xa3ec>
   1b81c:	mov	r8, r0
   1b820:	mov	r0, r4
   1b824:	ldr	r4, [r6]
   1b828:	bl	165e8 <pk_group_enum_to_string@plt>
   1b82c:	mvn	ip, #0
   1b830:	mov	lr, #4
   1b834:	str	ip, [sp, #32]
   1b838:	mov	ip, #0
   1b83c:	mov	r2, #1
   1b840:	str	lr, [sp, #24]
   1b844:	str	ip, [sp, #16]
   1b848:	mov	lr, #3
   1b84c:	str	ip, [sp, #4]
   1b850:	mov	ip, #2
   1b854:	mov	r3, r7
   1b858:	str	r2, [sp, #28]
   1b85c:	str	r8, [sp, #20]
   1b860:	add	r1, sp, #44	; 0x2c
   1b864:	str	lr, [sp, #8]
   1b868:	str	ip, [sp]
   1b86c:	str	r0, [sp, #12]
   1b870:	mov	r0, r4
   1b874:	bl	16258 <gtk_tree_store_set@plt>
   1b878:	ldr	r2, [sp, #60]	; 0x3c
   1b87c:	ldr	r3, [r5]
   1b880:	cmp	r2, r3
   1b884:	bne	1b890 <g_strcmp0@plt+0x4b34>
   1b888:	add	sp, sp, #64	; 0x40
   1b88c:	pop	{r4, r5, r6, r7, r8, pc}
   1b890:	bl	165a0 <__stack_chk_fail@plt>
   1b894:	andeq	ip, r3, r0, asr lr
   1b898:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b89c:	mov	r8, r0
   1b8a0:	ldr	r1, [pc, #196]	; 1b96c <g_strcmp0@plt+0x4c10>
   1b8a4:	ldr	r0, [r0, #56]	; 0x38
   1b8a8:	bl	1615c <gtk_builder_get_object@plt>
   1b8ac:	mov	r4, r0
   1b8b0:	bl	15db4 <gtk_widget_get_type@plt>
   1b8b4:	mov	r1, r0
   1b8b8:	mov	r0, r4
   1b8bc:	bl	15e14 <g_type_check_instance_cast@plt>
   1b8c0:	mov	r4, r0
   1b8c4:	bl	165dc <gtk_tree_view_get_type@plt>
   1b8c8:	mov	r1, r0
   1b8cc:	mov	r5, r0
   1b8d0:	mov	r0, r4
   1b8d4:	bl	15e14 <g_type_check_instance_cast@plt>
   1b8d8:	mov	r1, #0
   1b8dc:	bl	1627c <gtk_tree_view_set_show_expanders@plt>
   1b8e0:	mov	r1, r5
   1b8e4:	mov	r0, r4
   1b8e8:	bl	15e14 <g_type_check_instance_cast@plt>
   1b8ec:	mov	r1, #0
   1b8f0:	bl	162f4 <gtk_tree_view_set_level_indentation@plt>
   1b8f4:	ldr	r1, [r8, #88]	; 0x58
   1b8f8:	mov	r4, #0
   1b8fc:	and	r2, r1, #1048576	; 0x100000
   1b900:	mov	r3, r4
   1b904:	orrs	r3, r2, r3
   1b908:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b90c:	mov	r9, r4
   1b910:	add	r5, r8, #64	; 0x40
   1b914:	b	1b924 <g_strcmp0@plt+0x4bc8>
   1b918:	add	r4, r4, #1
   1b91c:	cmp	r4, #35	; 0x23
   1b920:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b924:	ldr	r3, [r8, #80]	; 0x50
   1b928:	ldr	r0, [r8, #84]	; 0x54
   1b92c:	rsb	r1, r4, #32
   1b930:	lsr	r3, r3, r4
   1b934:	sub	r2, r4, #32
   1b938:	orr	r3, r3, r0, lsl r1
   1b93c:	orr	r3, r3, r0, lsr r2
   1b940:	mov	r7, r9
   1b944:	and	r6, r3, #1
   1b948:	orrs	r2, r6, r7
   1b94c:	bic	r3, r4, #2
   1b950:	beq	1b918 <g_strcmp0@plt+0x4bbc>
   1b954:	cmp	r3, #32
   1b958:	beq	1b918 <g_strcmp0@plt+0x4bbc>
   1b95c:	mov	r1, r4
   1b960:	mov	r0, r5
   1b964:	bl	1b7dc <g_strcmp0@plt+0x4a80>
   1b968:	b	1b918 <g_strcmp0@plt+0x4bbc>
   1b96c:			; <UNDEFINED> instruction: 0x00026eb8
   1b970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b974:	sub	sp, sp, #124	; 0x7c
   1b978:	ldr	r6, [pc, #960]	; 1bd40 <g_strcmp0@plt+0x4fe4>
   1b97c:	mov	r5, #0
   1b980:	mov	r8, r0
   1b984:	ldr	r3, [r6]
   1b988:	mov	r7, r1
   1b98c:	mov	r4, r2
   1b990:	str	r3, [sp, #116]	; 0x74
   1b994:	str	r5, [sp, #68]	; 0x44
   1b998:	bl	167d4 <pk_control_get_type@plt>
   1b99c:	mov	r1, r0
   1b9a0:	mov	r0, r8
   1b9a4:	bl	15e14 <g_type_check_instance_cast@plt>
   1b9a8:	mov	r1, r7
   1b9ac:	add	r2, sp, #68	; 0x44
   1b9b0:	mov	r8, r0
   1b9b4:	bl	15f88 <pk_control_get_properties_finish@plt>
   1b9b8:	cmp	r0, r5
   1b9bc:	beq	1bca0 <g_strcmp0@plt+0x4f44>
   1b9c0:	ldr	r1, [pc, #892]	; 1bd44 <g_strcmp0@plt+0x4fe8>
   1b9c4:	add	r2, r4, #80	; 0x50
   1b9c8:	add	r3, sp, #72	; 0x48
   1b9cc:	stmib	sp, {r1, r2}
   1b9d0:	mov	r0, r8
   1b9d4:	str	r3, [sp]
   1b9d8:	add	r2, r4, #88	; 0x58
   1b9dc:	ldr	r3, [pc, #868]	; 1bd48 <g_strcmp0@plt+0x4fec>
   1b9e0:	ldr	r1, [pc, #868]	; 1bd4c <g_strcmp0@plt+0x4ff0>
   1b9e4:	str	r5, [sp, #12]
   1b9e8:	bl	166fc <g_object_get@plt>
   1b9ec:	ldr	r1, [pc, #860]	; 1bd50 <g_strcmp0@plt+0x4ff4>
   1b9f0:	ldr	r0, [r4, #52]	; 0x34
   1b9f4:	bl	15ba4 <g_settings_get_boolean@plt>
   1b9f8:	cmp	r0, #0
   1b9fc:	addeq	r7, sp, #84	; 0x54
   1ba00:	bne	1bb04 <g_strcmp0@plt+0x4da8>
   1ba04:	ldr	r1, [r4, #84]	; 0x54
   1ba08:	mov	r2, #0
   1ba0c:	and	r3, r1, #1
   1ba10:	orrs	r3, r2, r3
   1ba14:	bne	1bc90 <g_strcmp0@plt+0x4f34>
   1ba18:	mov	r2, #0
   1ba1c:	mov	r1, r7
   1ba20:	ldr	r0, [r4, #64]	; 0x40
   1ba24:	bl	15b74 <gtk_tree_store_append@plt>
   1ba28:	mvn	r3, #0
   1ba2c:	mov	r2, #3
   1ba30:	str	r3, [sp]
   1ba34:	mov	r1, r7
   1ba38:	ldr	r3, [pc, #788]	; 1bd54 <g_strcmp0@plt+0x4ff8>
   1ba3c:	ldr	r0, [r4, #64]	; 0x40
   1ba40:	bl	16258 <gtk_tree_store_set@plt>
   1ba44:	ldr	r1, [pc, #780]	; 1bd58 <g_strcmp0@plt+0x4ffc>
   1ba48:	ldr	r0, [r4, #56]	; 0x38
   1ba4c:	bl	1615c <gtk_builder_get_object@plt>
   1ba50:	mov	r5, r0
   1ba54:	bl	15db4 <gtk_widget_get_type@plt>
   1ba58:	mov	r1, r0
   1ba5c:	mov	r0, r5
   1ba60:	bl	15e14 <g_type_check_instance_cast@plt>
   1ba64:	mov	r5, r0
   1ba68:	bl	165dc <gtk_tree_view_get_type@plt>
   1ba6c:	mov	r1, r0
   1ba70:	mov	r0, r5
   1ba74:	bl	15e14 <g_type_check_instance_cast@plt>
   1ba78:	mov	r3, #0
   1ba7c:	mov	r2, r4
   1ba80:	ldr	r1, [pc, #724]	; 1bd5c <g_strcmp0@plt+0x5000>
   1ba84:	bl	15dcc <gtk_tree_view_set_row_separator_func@plt>
   1ba88:	ldr	r1, [pc, #720]	; 1bd60 <g_strcmp0@plt+0x5004>
   1ba8c:	ldr	r0, [r4, #52]	; 0x34
   1ba90:	bl	15ba4 <g_settings_get_boolean@plt>
   1ba94:	cmp	r0, #0
   1ba98:	mov	r0, r4
   1ba9c:	beq	1bab4 <g_strcmp0@plt+0x4d58>
   1baa0:	ldr	r1, [r4, #88]	; 0x58
   1baa4:	mov	r3, #0
   1baa8:	and	r2, r1, #134217728	; 0x8000000
   1baac:	orrs	r3, r2, r3
   1bab0:	bne	1bccc <g_strcmp0@plt+0x4f70>
   1bab4:	bl	1b898 <g_strcmp0@plt+0x4b3c>
   1bab8:	ldr	r1, [pc, #676]	; 1bd64 <g_strcmp0@plt+0x5008>
   1babc:	ldr	r0, [r4, #52]	; 0x34
   1bac0:	bl	16d44 <g_settings_get_enum@plt>
   1bac4:	cmp	r0, #0
   1bac8:	mov	r3, r0
   1bacc:	str	r0, [r4, #44]	; 0x2c
   1bad0:	beq	1bbb0 <g_strcmp0@plt+0x4e54>
   1bad4:	cmp	r0, #1
   1bad8:	beq	1bd08 <g_strcmp0@plt+0x4fac>
   1badc:	cmp	r0, #2
   1bae0:	ldrne	r2, [pc, #640]	; 1bd68 <g_strcmp0@plt+0x500c>
   1bae4:	beq	1bcd4 <g_strcmp0@plt+0x4f78>
   1bae8:	mov	r1, #16
   1baec:	ldr	r0, [pc, #632]	; 1bd6c <g_strcmp0@plt+0x5010>
   1baf0:	bl	15ebc <g_log@plt>
   1baf4:	mov	r1, r4
   1baf8:	mov	r0, #0
   1bafc:	bl	18990 <g_strcmp0@plt+0x1c34>
   1bb00:	b	1bbb8 <g_strcmp0@plt+0x4e5c>
   1bb04:	ldr	r1, [r4, #88]	; 0x58
   1bb08:	mov	r3, r5
   1bb0c:	and	r2, r1, #32
   1bb10:	orrs	r3, r2, r3
   1bb14:	add	r7, sp, #84	; 0x54
   1bb18:	beq	1ba04 <g_strcmp0@plt+0x4ca8>
   1bb1c:	mov	r1, r7
   1bb20:	mov	r2, r5
   1bb24:	ldr	r0, [r4, #64]	; 0x40
   1bb28:	bl	15b74 <gtk_tree_store_append@plt>
   1bb2c:	mov	r0, #5
   1bb30:	bl	21138 <g_strcmp0@plt+0xa3dc>
   1bb34:	mov	r2, #5
   1bb38:	ldr	r1, [pc, #560]	; 1bd70 <g_strcmp0@plt+0x5014>
   1bb3c:	ldr	r8, [r4, #64]	; 0x40
   1bb40:	mvn	r9, #0
   1bb44:	mov	fp, r0
   1bb48:	mov	r0, r5
   1bb4c:	bl	1666c <dcgettext@plt>
   1bb50:	mov	r2, #5
   1bb54:	ldr	r1, [pc, #536]	; 1bd74 <g_strcmp0@plt+0x5018>
   1bb58:	mov	sl, r0
   1bb5c:	mov	r0, r5
   1bb60:	bl	1666c <dcgettext@plt>
   1bb64:	ldr	ip, [pc, #524]	; 1bd78 <g_strcmp0@plt+0x501c>
   1bb68:	mov	r2, #1
   1bb6c:	mov	r1, #4
   1bb70:	mov	lr, #3
   1bb74:	str	ip, [sp, #12]
   1bb78:	mov	ip, #2
   1bb7c:	str	r1, [sp, #16]
   1bb80:	str	fp, [sp, #28]
   1bb84:	mov	r3, sl
   1bb88:	str	r5, [sp, #24]
   1bb8c:	str	r9, [sp, #32]
   1bb90:	str	r2, [sp, #20]
   1bb94:	mov	r1, r7
   1bb98:	str	lr, [sp, #8]
   1bb9c:	str	ip, [sp]
   1bba0:	str	r0, [sp, #4]
   1bba4:	mov	r0, r8
   1bba8:	bl	16258 <gtk_tree_store_set@plt>
   1bbac:	b	1ba04 <g_strcmp0@plt+0x4ca8>
   1bbb0:	mov	r1, r4
   1bbb4:	bl	18990 <g_strcmp0@plt+0x1c34>
   1bbb8:	ldr	r2, [pc, #444]	; 1bd7c <g_strcmp0@plt+0x5020>
   1bbbc:	mov	r1, #128	; 0x80
   1bbc0:	mov	r5, #0
   1bbc4:	ldr	r0, [pc, #416]	; 1bd6c <g_strcmp0@plt+0x5010>
   1bbc8:	bl	15ebc <g_log@plt>
   1bbcc:	ldr	r0, [r4, #60]	; 0x3c
   1bbd0:	str	r5, [r4, #4]
   1bbd4:	bl	16c9c <gtk_list_store_clear@plt>
   1bbd8:	add	r1, sp, #100	; 0x64
   1bbdc:	ldr	r0, [r4, #60]	; 0x3c
   1bbe0:	bl	1675c <gtk_list_store_append@plt>
   1bbe4:	ldr	r1, [r4, #88]	; 0x58
   1bbe8:	mov	r3, r5
   1bbec:	and	r2, r1, #1048576	; 0x100000
   1bbf0:	orrs	r3, r2, r3
   1bbf4:	mov	r0, r5
   1bbf8:	mov	r2, #5
   1bbfc:	ldrne	r1, [pc, #380]	; 1bd80 <g_strcmp0@plt+0x5024>
   1bc00:	ldreq	r1, [pc, #380]	; 1bd84 <g_strcmp0@plt+0x5028>
   1bc04:	bl	1666c <dcgettext@plt>
   1bc08:	ldr	ip, [pc, #376]	; 1bd88 <g_strcmp0@plt+0x502c>
   1bc0c:	mov	r2, #0
   1bc10:	mov	r3, #0
   1bc14:	mov	lr, #6
   1bc18:	add	r1, sp, #100	; 0x64
   1bc1c:	str	r0, [sp, #28]
   1bc20:	ldr	r0, [r4, #60]	; 0x3c
   1bc24:	strd	r2, [sp]
   1bc28:	str	ip, [sp, #36]	; 0x24
   1bc2c:	mov	r3, #0
   1bc30:	mvn	ip, #0
   1bc34:	mov	r2, #5
   1bc38:	str	ip, [sp, #56]	; 0x38
   1bc3c:	str	r3, [sp, #52]	; 0x34
   1bc40:	str	r3, [sp, #44]	; 0x2c
   1bc44:	str	r3, [sp, #32]
   1bc48:	str	r3, [sp, #20]
   1bc4c:	str	r3, [sp, #12]
   1bc50:	mov	ip, #4
   1bc54:	str	r2, [sp, #48]	; 0x30
   1bc58:	mov	r3, #2
   1bc5c:	mov	r2, #3
   1bc60:	str	r2, [sp, #16]
   1bc64:	str	lr, [sp, #40]	; 0x28
   1bc68:	str	ip, [sp, #24]
   1bc6c:	str	r3, [sp, #8]
   1bc70:	mov	r2, #1
   1bc74:	bl	15c94 <gtk_list_store_set@plt>
   1bc78:	ldr	r2, [sp, #116]	; 0x74
   1bc7c:	ldr	r3, [r6]
   1bc80:	cmp	r2, r3
   1bc84:	bne	1bd3c <g_strcmp0@plt+0x4fe0>
   1bc88:	add	sp, sp, #124	; 0x7c
   1bc8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc90:	mov	r1, #32
   1bc94:	add	r0, r4, #64	; 0x40
   1bc98:	bl	1b7dc <g_strcmp0@plt+0x4a80>
   1bc9c:	b	1ba18 <g_strcmp0@plt+0x4cbc>
   1bca0:	mov	r2, #5
   1bca4:	ldr	r1, [pc, #224]	; 1bd8c <g_strcmp0@plt+0x5030>
   1bca8:	bl	1666c <dcgettext@plt>
   1bcac:	ldr	r3, [sp, #68]	; 0x44
   1bcb0:	ldr	r2, [r3, #8]
   1bcb4:	mov	r1, r0
   1bcb8:	ldr	r0, [pc, #208]	; 1bd90 <g_strcmp0@plt+0x5034>
   1bcbc:	bl	167ec <g_print@plt>
   1bcc0:	ldr	r0, [sp, #68]	; 0x44
   1bcc4:	bl	15d3c <g_error_free@plt>
   1bcc8:	b	1bc78 <g_strcmp0@plt+0x4f1c>
   1bccc:	bl	193fc <g_strcmp0@plt+0x26a0>
   1bcd0:	b	1bab8 <g_strcmp0@plt+0x4d5c>
   1bcd4:	mov	r1, r4
   1bcd8:	mov	r0, #0
   1bcdc:	bl	18840 <g_strcmp0@plt+0x1ae4>
   1bce0:	ldr	r1, [r4, #88]	; 0x58
   1bce4:	mov	r5, #0
   1bce8:	and	r2, r1, #524288	; 0x80000
   1bcec:	mov	r3, r5
   1bcf0:	orrs	r3, r2, r3
   1bcf4:	beq	1bd30 <g_strcmp0@plt+0x4fd4>
   1bcf8:	mov	r0, r5
   1bcfc:	mov	r1, r4
   1bd00:	bl	18840 <g_strcmp0@plt+0x1ae4>
   1bd04:	b	1bbb8 <g_strcmp0@plt+0x4e5c>
   1bd08:	ldr	r2, [r4, #88]	; 0x58
   1bd0c:	mov	r5, #0
   1bd10:	and	r0, r2, #262144	; 0x40000
   1bd14:	mov	r1, r5
   1bd18:	orrs	r2, r0, r1
   1bd1c:	beq	1bd34 <g_strcmp0@plt+0x4fd8>
   1bd20:	mov	r0, r5
   1bd24:	mov	r1, r4
   1bd28:	bl	188e8 <g_strcmp0@plt+0x1b8c>
   1bd2c:	b	1bbb8 <g_strcmp0@plt+0x4e5c>
   1bd30:	ldr	r3, [r4, #44]	; 0x2c
   1bd34:	ldr	r2, [pc, #88]	; 1bd94 <g_strcmp0@plt+0x5038>
   1bd38:	b	1bae8 <g_strcmp0@plt+0x4d8c>
   1bd3c:	bl	165a0 <__stack_chk_fail@plt>
   1bd40:	andeq	ip, r3, r0, asr lr
   1bd44:	strdeq	sl, [r2], -r8
   1bd48:	strdeq	r7, [r2], -r0
   1bd4c:	strdeq	r7, [r2], -r8
   1bd50:	andeq	r7, r2, r0, lsl #10
   1bd54:	andeq	r6, r2, r0, lsl #24
   1bd58:			; <UNDEFINED> instruction: 0x00026eb8
   1bd5c:	andeq	r8, r1, r8, lsr r0
   1bd60:	andeq	r7, r2, r8, lsr r5
   1bd64:	andeq	r6, r2, ip, ror #27
   1bd68:	andeq	r7, r2, r8, ror r5
   1bd6c:	andeq	r6, r2, r8, lsr #21
   1bd70:	andeq	r7, r2, r4, lsl r5
   1bd74:	andeq	r7, r2, r4, lsr #10
   1bd78:	muleq	r2, ip, r4
   1bd7c:	andeq	r7, r2, r0, lsr #11
   1bd80:			; <UNDEFINED> instruction: 0x000275b0
   1bd84:	andeq	r7, r2, r8, ror #11
   1bd88:	andeq	r6, r2, r4, lsl sp
   1bd8c:			; <UNDEFINED> instruction: 0x000274b8
   1bd90:	andeq	r7, r2, r8, ror #9
   1bd94:	andeq	r7, r2, r8, asr #10
   1bd98:	ldr	r3, [pc, #648]	; 1c028 <g_strcmp0@plt+0x52cc>
   1bd9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bda0:	sub	sp, sp, #92	; 0x5c
   1bda4:	ldr	r3, [r3]
   1bda8:	mov	r7, r0
   1bdac:	ldr	r0, [r0, #100]	; 0x64
   1bdb0:	str	r3, [sp, #84]	; 0x54
   1bdb4:	bl	16840 <pk_package_sack_get_size@plt>
   1bdb8:	mov	r5, r0
   1bdbc:	bl	16750 <gtk_tree_model_get_type@plt>
   1bdc0:	cmp	r5, #0
   1bdc4:	mov	r6, r0
   1bdc8:	beq	1bfb4 <g_strcmp0@plt+0x5258>
   1bdcc:	mov	r1, r0
   1bdd0:	mov	r5, #0
   1bdd4:	ldr	r0, [r7, #64]	; 0x40
   1bdd8:	add	r4, sp, #68	; 0x44
   1bddc:	str	r5, [sp, #56]	; 0x38
   1bde0:	bl	15e14 <g_type_check_instance_cast@plt>
   1bde4:	mov	r1, r4
   1bde8:	bl	16678 <gtk_tree_model_get_iter_first@plt>
   1bdec:	cmp	r0, r5
   1bdf0:	bne	1bf04 <g_strcmp0@plt+0x51a8>
   1bdf4:	ldr	r0, [sp, #56]	; 0x38
   1bdf8:	bl	16660 <g_free@plt>
   1bdfc:	ldr	r1, [pc, #552]	; 1c02c <g_strcmp0@plt+0x52d0>
   1be00:	ldr	r0, [r7, #56]	; 0x38
   1be04:	bl	1615c <gtk_builder_get_object@plt>
   1be08:	mov	r5, r0
   1be0c:	bl	165dc <gtk_tree_view_get_type@plt>
   1be10:	mov	r1, r0
   1be14:	mov	r0, r5
   1be18:	bl	15e14 <g_type_check_instance_cast@plt>
   1be1c:	bl	16054 <gtk_tree_view_get_model@plt>
   1be20:	mov	r1, r4
   1be24:	mov	r5, r0
   1be28:	bl	16678 <gtk_tree_model_get_iter_first@plt>
   1be2c:	cmp	r0, #0
   1be30:	beq	1bee8 <g_strcmp0@plt+0x518c>
   1be34:	bl	16c18 <gtk_list_store_get_type@plt>
   1be38:	add	r9, sp, #52	; 0x34
   1be3c:	str	r7, [sp, #44]	; 0x2c
   1be40:	mvn	r6, #0
   1be44:	mov	r7, r0
   1be48:	mov	r3, #5
   1be4c:	str	r3, [sp]
   1be50:	mov	r0, r5
   1be54:	str	r6, [sp, #8]
   1be58:	str	r9, [sp, #4]
   1be5c:	add	r3, sp, #56	; 0x38
   1be60:	mov	r2, #1
   1be64:	mov	r1, r4
   1be68:	bl	16c6c <gtk_tree_model_get@plt>
   1be6c:	ldr	r0, [sp, #52]	; 0x34
   1be70:	cmp	r0, #0
   1be74:	moveq	r8, r0
   1be78:	beq	1beb0 <g_strcmp0@plt+0x5154>
   1be7c:	ldr	r3, [sp, #44]	; 0x2c
   1be80:	ldr	r8, [r3, #32]
   1be84:	ldr	r3, [sp, #56]	; 0x38
   1be88:	cmp	r8, #1
   1be8c:	moveq	r2, #0
   1be90:	beq	1bea0 <g_strcmp0@plt+0x5144>
   1be94:	subs	r8, r8, #2
   1be98:	movne	r8, #1
   1be9c:	mov	r2, #1
   1bea0:	and	sl, r3, #1
   1bea4:	mov	fp, #0
   1bea8:	orrs	r3, sl, fp
   1beac:	movne	r8, r2
   1beb0:	bl	16660 <g_free@plt>
   1beb4:	mov	r1, r7
   1beb8:	mov	r0, r5
   1bebc:	bl	15e14 <g_type_check_instance_cast@plt>
   1bec0:	mov	r3, r8
   1bec4:	mov	r2, #3
   1bec8:	mov	r1, r4
   1becc:	str	r6, [sp]
   1bed0:	bl	15c94 <gtk_list_store_set@plt>
   1bed4:	mov	r1, r4
   1bed8:	mov	r0, r5
   1bedc:	bl	15fa0 <gtk_tree_model_iter_next@plt>
   1bee0:	cmp	r0, #0
   1bee4:	bne	1be48 <g_strcmp0@plt+0x50ec>
   1bee8:	ldr	r3, [pc, #312]	; 1c028 <g_strcmp0@plt+0x52cc>
   1beec:	ldr	r2, [sp, #84]	; 0x54
   1bef0:	ldr	r3, [r3]
   1bef4:	cmp	r2, r3
   1bef8:	bne	1c024 <g_strcmp0@plt+0x52c8>
   1befc:	add	sp, sp, #92	; 0x5c
   1bf00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf04:	mov	r1, r6
   1bf08:	ldr	r0, [r7, #64]	; 0x40
   1bf0c:	mvn	r8, #0
   1bf10:	ldr	r6, [pc, #280]	; 1c030 <g_strcmp0@plt+0x52d4>
   1bf14:	bl	15e14 <g_type_check_instance_cast@plt>
   1bf18:	add	r3, sp, #56	; 0x38
   1bf1c:	mov	r2, #3
   1bf20:	mov	r1, r4
   1bf24:	str	r8, [sp]
   1bf28:	bl	16c6c <gtk_tree_model_get@plt>
   1bf2c:	mov	r1, r6
   1bf30:	ldr	r0, [sp, #56]	; 0x38
   1bf34:	bl	16d5c <g_strcmp0@plt>
   1bf38:	cmp	r0, r5
   1bf3c:	beq	1bdf4 <g_strcmp0@plt+0x5098>
   1bf40:	mov	r3, r5
   1bf44:	mov	r2, r5
   1bf48:	mov	r1, r4
   1bf4c:	ldr	r0, [r7, #64]	; 0x40
   1bf50:	bl	16954 <gtk_tree_store_insert@plt>
   1bf54:	mov	r2, #5
   1bf58:	ldr	r1, [pc, #212]	; 1c034 <g_strcmp0@plt+0x52d8>
   1bf5c:	mov	r0, r5
   1bf60:	ldr	r9, [r7, #64]	; 0x40
   1bf64:	bl	1666c <dcgettext@plt>
   1bf68:	ldr	lr, [pc, #200]	; 1c038 <g_strcmp0@plt+0x52dc>
   1bf6c:	mov	r2, #1
   1bf70:	mov	ip, #4
   1bf74:	mov	r1, #3
   1bf78:	mov	r3, #2
   1bf7c:	str	r1, [sp, #8]
   1bf80:	str	r3, [sp]
   1bf84:	str	r8, [sp, #32]
   1bf88:	str	r5, [sp, #16]
   1bf8c:	str	r6, [sp, #12]
   1bf90:	str	r5, [sp, #4]
   1bf94:	str	lr, [sp, #20]
   1bf98:	str	r2, [sp, #28]
   1bf9c:	str	ip, [sp, #24]
   1bfa0:	mov	r1, r4
   1bfa4:	mov	r3, r0
   1bfa8:	mov	r0, r9
   1bfac:	bl	16258 <gtk_tree_store_set@plt>
   1bfb0:	b	1bdf4 <g_strcmp0@plt+0x5098>
   1bfb4:	mov	r1, r0
   1bfb8:	str	r5, [r7, #32]
   1bfbc:	ldr	r0, [r7, #64]	; 0x40
   1bfc0:	add	r4, sp, #68	; 0x44
   1bfc4:	str	r5, [sp, #56]	; 0x38
   1bfc8:	bl	15e14 <g_type_check_instance_cast@plt>
   1bfcc:	mov	r1, r4
   1bfd0:	bl	16678 <gtk_tree_model_get_iter_first@plt>
   1bfd4:	cmp	r0, #0
   1bfd8:	beq	1bdf4 <g_strcmp0@plt+0x5098>
   1bfdc:	mov	r1, r6
   1bfe0:	ldr	r0, [r7, #64]	; 0x40
   1bfe4:	bl	15e14 <g_type_check_instance_cast@plt>
   1bfe8:	mvn	r3, #0
   1bfec:	str	r3, [sp]
   1bff0:	mov	r2, #3
   1bff4:	add	r3, sp, #56	; 0x38
   1bff8:	mov	r1, r4
   1bffc:	bl	16c6c <gtk_tree_model_get@plt>
   1c000:	ldr	r1, [pc, #40]	; 1c030 <g_strcmp0@plt+0x52d4>
   1c004:	ldr	r0, [sp, #56]	; 0x38
   1c008:	bl	16d5c <g_strcmp0@plt>
   1c00c:	cmp	r0, #0
   1c010:	bne	1bdf4 <g_strcmp0@plt+0x5098>
   1c014:	mov	r1, r4
   1c018:	ldr	r0, [r7, #64]	; 0x40
   1c01c:	bl	15c88 <gtk_tree_store_remove@plt>
   1c020:	b	1bdf4 <g_strcmp0@plt+0x5098>
   1c024:	bl	165a0 <__stack_chk_fail@plt>
   1c028:	andeq	ip, r3, r0, asr lr
   1c02c:	andeq	r6, r2, ip, lsl #23
   1c030:	andeq	r7, r2, ip, lsr #9
   1c034:	andeq	r7, r2, ip, lsl #12
   1c038:	andeq	r6, r2, r8, ror #28
   1c03c:	push	{r4, r5, r6, r7, lr}
   1c040:	sub	sp, sp, #28
   1c044:	ldr	r5, [pc, #324]	; 1c190 <g_strcmp0@plt+0x5434>
   1c048:	mov	r3, #0
   1c04c:	mov	r4, r0
   1c050:	ldr	r1, [r5]
   1c054:	ldr	r0, [r0, #56]	; 0x38
   1c058:	str	r1, [sp, #20]
   1c05c:	add	r2, sp, #16
   1c060:	add	r1, sp, #12
   1c064:	str	r3, [sp, #12]
   1c068:	str	r3, [sp, #16]
   1c06c:	bl	19480 <g_strcmp0@plt+0x2724>
   1c070:	cmp	r0, #0
   1c074:	beq	1c164 <g_strcmp0@plt+0x5408>
   1c078:	ldr	r3, [r4, #32]
   1c07c:	ldr	r0, [r4, #100]	; 0x64
   1c080:	cmp	r3, #1
   1c084:	ldr	r1, [sp, #12]
   1c088:	beq	1c138 <g_strcmp0@plt+0x53dc>
   1c08c:	bl	15cf4 <pk_package_sack_find_by_id@plt>
   1c090:	subs	r6, r0, #0
   1c094:	beq	1c0dc <g_strcmp0@plt+0x5380>
   1c098:	ldr	r2, [pc, #244]	; 1c194 <g_strcmp0@plt+0x5438>
   1c09c:	mov	r1, #16
   1c0a0:	ldr	r0, [pc, #240]	; 1c198 <g_strcmp0@plt+0x543c>
   1c0a4:	bl	15ebc <g_log@plt>
   1c0a8:	mov	r0, r4
   1c0ac:	bl	1bd98 <g_strcmp0@plt+0x503c>
   1c0b0:	ldr	r0, [sp, #12]
   1c0b4:	bl	16660 <g_free@plt>
   1c0b8:	ldr	r0, [sp, #16]
   1c0bc:	bl	16660 <g_free@plt>
   1c0c0:	ldr	r2, [sp, #20]
   1c0c4:	ldr	r3, [r5]
   1c0c8:	mov	r0, #1
   1c0cc:	cmp	r2, r3
   1c0d0:	bne	1c18c <g_strcmp0@plt+0x5430>
   1c0d4:	add	sp, sp, #28
   1c0d8:	pop	{r4, r5, r6, r7, pc}
   1c0dc:	mov	r3, #2
   1c0e0:	str	r3, [r4, #32]
   1c0e4:	bl	15c64 <pk_package_new@plt>
   1c0e8:	mov	r2, r6
   1c0ec:	ldr	r1, [sp, #12]
   1c0f0:	mov	r7, r0
   1c0f4:	bl	15ec8 <pk_package_set_id@plt>
   1c0f8:	ldr	r3, [sp, #16]
   1c0fc:	mov	r2, #1
   1c100:	mov	r0, r7
   1c104:	str	r3, [sp]
   1c108:	str	r6, [sp, #4]
   1c10c:	ldr	r3, [pc, #136]	; 1c19c <g_strcmp0@plt+0x5440>
   1c110:	ldr	r1, [pc, #136]	; 1c1a0 <g_strcmp0@plt+0x5444>
   1c114:	bl	166b4 <g_object_set@plt>
   1c118:	mov	r1, r7
   1c11c:	ldr	r0, [r4, #100]	; 0x64
   1c120:	bl	16318 <pk_package_sack_add_package@plt>
   1c124:	mov	r0, r7
   1c128:	bl	16990 <g_object_unref@plt>
   1c12c:	ldr	r0, [r4, #56]	; 0x38
   1c130:	bl	1b580 <g_strcmp0@plt+0x4824>
   1c134:	b	1c0a8 <g_strcmp0@plt+0x534c>
   1c138:	bl	165ac <pk_package_sack_remove_package_by_id@plt>
   1c13c:	cmp	r0, #0
   1c140:	beq	1c178 <g_strcmp0@plt+0x541c>
   1c144:	ldr	r3, [sp, #12]
   1c148:	ldr	r2, [pc, #84]	; 1c1a4 <g_strcmp0@plt+0x5448>
   1c14c:	mov	r1, #128	; 0x80
   1c150:	ldr	r0, [pc, #64]	; 1c198 <g_strcmp0@plt+0x543c>
   1c154:	bl	15ebc <g_log@plt>
   1c158:	ldr	r0, [r4, #56]	; 0x38
   1c15c:	bl	1b580 <g_strcmp0@plt+0x4824>
   1c160:	b	1c0a8 <g_strcmp0@plt+0x534c>
   1c164:	ldr	r2, [pc, #60]	; 1c1a8 <g_strcmp0@plt+0x544c>
   1c168:	mov	r1, #16
   1c16c:	ldr	r0, [pc, #36]	; 1c198 <g_strcmp0@plt+0x543c>
   1c170:	bl	15ebc <g_log@plt>
   1c174:	b	1c0a8 <g_strcmp0@plt+0x534c>
   1c178:	ldr	r2, [pc, #44]	; 1c1ac <g_strcmp0@plt+0x5450>
   1c17c:	mov	r1, #16
   1c180:	ldr	r0, [pc, #16]	; 1c198 <g_strcmp0@plt+0x543c>
   1c184:	bl	15ebc <g_log@plt>
   1c188:	b	1c0a8 <g_strcmp0@plt+0x534c>
   1c18c:	bl	165a0 <__stack_chk_fail@plt>
   1c190:	andeq	ip, r3, r0, asr lr
   1c194:	andeq	r7, r2, r0, asr r6
   1c198:	andeq	r6, r2, r8, lsr #21
   1c19c:	andeq	r6, r2, r8, asr #29
   1c1a0:	andeq	ip, r2, r0, asr #23
   1c1a4:	andeq	r7, r2, r4, lsl r6
   1c1a8:			; <UNDEFINED> instruction: 0x00026fb4
   1c1ac:	andeq	r7, r2, r4, lsr r6
   1c1b0:	mov	r0, r1
   1c1b4:	b	1c03c <g_strcmp0@plt+0x52e0>
   1c1b8:	push	{r4, r5, r6, r7, r8, lr}
   1c1bc:	sub	sp, sp, #24
   1c1c0:	ldr	r5, [pc, #328]	; 1c310 <g_strcmp0@plt+0x55b4>
   1c1c4:	mov	r3, #0
   1c1c8:	mov	r4, r0
   1c1cc:	ldr	r1, [r5]
   1c1d0:	ldr	r0, [r0, #56]	; 0x38
   1c1d4:	str	r1, [sp, #20]
   1c1d8:	add	r2, sp, #16
   1c1dc:	add	r1, sp, #12
   1c1e0:	str	r3, [sp, #12]
   1c1e4:	str	r3, [sp, #16]
   1c1e8:	bl	19480 <g_strcmp0@plt+0x2724>
   1c1ec:	subs	r6, r0, #0
   1c1f0:	beq	1c2e4 <g_strcmp0@plt+0x5588>
   1c1f4:	ldr	r3, [r4, #32]
   1c1f8:	ldr	r0, [r4, #100]	; 0x64
   1c1fc:	cmp	r3, #2
   1c200:	ldr	r1, [sp, #12]
   1c204:	beq	1c2b4 <g_strcmp0@plt+0x5558>
   1c208:	bl	15cf4 <pk_package_sack_find_by_id@plt>
   1c20c:	subs	r7, r0, #0
   1c210:	beq	1c258 <g_strcmp0@plt+0x54fc>
   1c214:	ldr	r2, [pc, #248]	; 1c314 <g_strcmp0@plt+0x55b8>
   1c218:	mov	r1, #16
   1c21c:	ldr	r0, [pc, #244]	; 1c318 <g_strcmp0@plt+0x55bc>
   1c220:	bl	15ebc <g_log@plt>
   1c224:	mov	r0, r4
   1c228:	bl	1bd98 <g_strcmp0@plt+0x503c>
   1c22c:	ldr	r0, [sp, #12]
   1c230:	bl	16660 <g_free@plt>
   1c234:	ldr	r0, [sp, #16]
   1c238:	bl	16660 <g_free@plt>
   1c23c:	ldr	r2, [sp, #20]
   1c240:	ldr	r3, [r5]
   1c244:	mov	r0, r6
   1c248:	cmp	r2, r3
   1c24c:	bne	1c30c <g_strcmp0@plt+0x55b0>
   1c250:	add	sp, sp, #24
   1c254:	pop	{r4, r5, r6, r7, r8, pc}
   1c258:	mov	r3, #1
   1c25c:	str	r3, [r4, #32]
   1c260:	bl	15c64 <pk_package_new@plt>
   1c264:	mov	r2, r7
   1c268:	ldr	r1, [sp, #12]
   1c26c:	mov	r8, r0
   1c270:	bl	15ec8 <pk_package_set_id@plt>
   1c274:	ldr	r3, [sp, #16]
   1c278:	mov	r2, #2
   1c27c:	mov	r0, r8
   1c280:	str	r3, [sp]
   1c284:	str	r7, [sp, #4]
   1c288:	ldr	r3, [pc, #140]	; 1c31c <g_strcmp0@plt+0x55c0>
   1c28c:	ldr	r1, [pc, #140]	; 1c320 <g_strcmp0@plt+0x55c4>
   1c290:	bl	166b4 <g_object_set@plt>
   1c294:	mov	r1, r8
   1c298:	ldr	r0, [r4, #100]	; 0x64
   1c29c:	bl	16318 <pk_package_sack_add_package@plt>
   1c2a0:	mov	r0, r8
   1c2a4:	bl	16990 <g_object_unref@plt>
   1c2a8:	ldr	r0, [r4, #56]	; 0x38
   1c2ac:	bl	1b580 <g_strcmp0@plt+0x4824>
   1c2b0:	b	1c224 <g_strcmp0@plt+0x54c8>
   1c2b4:	bl	165ac <pk_package_sack_remove_package_by_id@plt>
   1c2b8:	subs	r6, r0, #0
   1c2bc:	beq	1c2f8 <g_strcmp0@plt+0x559c>
   1c2c0:	ldr	r3, [sp, #12]
   1c2c4:	ldr	r2, [pc, #88]	; 1c324 <g_strcmp0@plt+0x55c8>
   1c2c8:	mov	r1, #128	; 0x80
   1c2cc:	ldr	r0, [pc, #68]	; 1c318 <g_strcmp0@plt+0x55bc>
   1c2d0:	bl	15ebc <g_log@plt>
   1c2d4:	ldr	r0, [r4, #56]	; 0x38
   1c2d8:	bl	1b580 <g_strcmp0@plt+0x4824>
   1c2dc:	mov	r6, #1
   1c2e0:	b	1c224 <g_strcmp0@plt+0x54c8>
   1c2e4:	ldr	r2, [pc, #60]	; 1c328 <g_strcmp0@plt+0x55cc>
   1c2e8:	mov	r1, #16
   1c2ec:	ldr	r0, [pc, #36]	; 1c318 <g_strcmp0@plt+0x55bc>
   1c2f0:	bl	15ebc <g_log@plt>
   1c2f4:	b	1c224 <g_strcmp0@plt+0x54c8>
   1c2f8:	ldr	r2, [pc, #44]	; 1c32c <g_strcmp0@plt+0x55d0>
   1c2fc:	mov	r1, #16
   1c300:	ldr	r0, [pc, #16]	; 1c318 <g_strcmp0@plt+0x55bc>
   1c304:	bl	15ebc <g_log@plt>
   1c308:	b	1c224 <g_strcmp0@plt+0x54c8>
   1c30c:	bl	165a0 <__stack_chk_fail@plt>
   1c310:	andeq	ip, r3, r0, asr lr
   1c314:	andeq	r7, r2, r0, asr r6
   1c318:	andeq	r6, r2, r8, lsr #21
   1c31c:	andeq	r6, r2, r8, asr #29
   1c320:	andeq	ip, r2, r0, asr #23
   1c324:	andeq	r7, r2, r4, lsl r6
   1c328:			; <UNDEFINED> instruction: 0x00026fb4
   1c32c:	andeq	r7, r2, r4, lsr r6
   1c330:	mov	r0, r1
   1c334:	b	1c1b8 <g_strcmp0@plt+0x545c>
   1c338:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c33c:	mov	r5, r1
   1c340:	ldr	r4, [pc, #224]	; 1c428 <g_strcmp0@plt+0x56cc>
   1c344:	sub	sp, sp, #60	; 0x3c
   1c348:	mov	r2, #0
   1c34c:	ldr	r1, [r4]
   1c350:	mov	r8, r3
   1c354:	str	r1, [sp, #52]	; 0x34
   1c358:	str	r2, [sp, #20]
   1c35c:	bl	16054 <gtk_tree_view_get_model@plt>
   1c360:	mov	r2, r5
   1c364:	add	r1, sp, #36	; 0x24
   1c368:	mov	r9, r0
   1c36c:	bl	16c24 <gtk_tree_model_get_iter@plt>
   1c370:	cmp	r0, #0
   1c374:	beq	1c3f4 <g_strcmp0@plt+0x5698>
   1c378:	mvn	ip, #0
   1c37c:	add	r2, sp, #20
   1c380:	mov	r3, #5
   1c384:	stmib	sp, {r2, ip}
   1c388:	str	r3, [sp]
   1c38c:	add	r1, sp, #36	; 0x24
   1c390:	add	r3, sp, #24
   1c394:	mov	r0, r9
   1c398:	mov	r2, #1
   1c39c:	bl	16c6c <gtk_tree_model_get@plt>
   1c3a0:	ldr	r3, [sp, #20]
   1c3a4:	cmp	r3, #0
   1c3a8:	beq	1c410 <g_strcmp0@plt+0x56b4>
   1c3ac:	ldr	r3, [sp, #24]
   1c3b0:	ldr	r2, [sp, #28]
   1c3b4:	bic	r3, r3, #4
   1c3b8:	subs	r6, r3, #1
   1c3bc:	sbc	r7, r2, #0
   1c3c0:	cmp	r7, #0
   1c3c4:	cmpeq	r6, #1
   1c3c8:	mov	r0, r8
   1c3cc:	bls	1c408 <g_strcmp0@plt+0x56ac>
   1c3d0:	bl	1c1b8 <g_strcmp0@plt+0x545c>
   1c3d4:	ldr	r0, [sp, #20]
   1c3d8:	bl	16660 <g_free@plt>
   1c3dc:	ldr	r2, [sp, #52]	; 0x34
   1c3e0:	ldr	r3, [r4]
   1c3e4:	cmp	r2, r3
   1c3e8:	bne	1c424 <g_strcmp0@plt+0x56c8>
   1c3ec:	add	sp, sp, #60	; 0x3c
   1c3f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c3f4:	ldr	r2, [pc, #48]	; 1c42c <g_strcmp0@plt+0x56d0>
   1c3f8:	mov	r1, #16
   1c3fc:	ldr	r0, [pc, #44]	; 1c430 <g_strcmp0@plt+0x56d4>
   1c400:	bl	15ebc <g_log@plt>
   1c404:	b	1c3dc <g_strcmp0@plt+0x5680>
   1c408:	bl	1c03c <g_strcmp0@plt+0x52e0>
   1c40c:	b	1c3d4 <g_strcmp0@plt+0x5678>
   1c410:	ldr	r2, [pc, #28]	; 1c434 <g_strcmp0@plt+0x56d8>
   1c414:	mov	r1, #128	; 0x80
   1c418:	ldr	r0, [pc, #16]	; 1c430 <g_strcmp0@plt+0x56d4>
   1c41c:	bl	15ebc <g_log@plt>
   1c420:	b	1c3d4 <g_strcmp0@plt+0x5678>
   1c424:	bl	165a0 <__stack_chk_fail@plt>
   1c428:	andeq	ip, r3, r0, asr lr
   1c42c:	andeq	r7, r2, r0, ror #12
   1c430:	andeq	r6, r2, r8, lsr #21
   1c434:	andeq	r7, r2, ip, ror r3
   1c438:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c43c:	sub	sp, sp, #40	; 0x28
   1c440:	ldr	r4, [pc, #212]	; 1c51c <g_strcmp0@plt+0x57c0>
   1c444:	ldr	r0, [r2, #56]	; 0x38
   1c448:	mov	r5, r1
   1c44c:	ldr	r3, [r4]
   1c450:	ldr	r1, [pc, #200]	; 1c520 <g_strcmp0@plt+0x57c4>
   1c454:	mov	r9, r2
   1c458:	str	r3, [sp, #36]	; 0x24
   1c45c:	bl	1615c <gtk_builder_get_object@plt>
   1c460:	mov	r8, r0
   1c464:	bl	165dc <gtk_tree_view_get_type@plt>
   1c468:	mov	r1, r0
   1c46c:	mov	r0, r8
   1c470:	bl	15e14 <g_type_check_instance_cast@plt>
   1c474:	mov	sl, r0
   1c478:	bl	16054 <gtk_tree_view_get_model@plt>
   1c47c:	mov	r8, r0
   1c480:	mov	r0, r5
   1c484:	bl	16468 <gtk_tree_path_new_from_string@plt>
   1c488:	add	r1, sp, #20
   1c48c:	mov	r2, r0
   1c490:	mov	r5, r0
   1c494:	mov	r0, r8
   1c498:	bl	16c24 <gtk_tree_model_get_iter@plt>
   1c49c:	mvn	r3, #0
   1c4a0:	mov	r2, #1
   1c4a4:	add	r1, sp, #20
   1c4a8:	mov	r0, r8
   1c4ac:	str	r3, [sp]
   1c4b0:	add	r3, sp, #8
   1c4b4:	bl	16c6c <gtk_tree_model_get@plt>
   1c4b8:	mov	r0, sl
   1c4bc:	bl	16744 <gtk_tree_view_get_selection@plt>
   1c4c0:	add	r1, sp, #20
   1c4c4:	bl	16024 <gtk_tree_selection_select_iter@plt>
   1c4c8:	ldr	r3, [sp, #8]
   1c4cc:	ldr	r2, [sp, #12]
   1c4d0:	bic	r3, r3, #4
   1c4d4:	subs	r6, r3, #1
   1c4d8:	sbc	r7, r2, #0
   1c4dc:	cmp	r7, #0
   1c4e0:	cmpeq	r6, #1
   1c4e4:	mov	r0, r9
   1c4e8:	bls	1c510 <g_strcmp0@plt+0x57b4>
   1c4ec:	bl	1c1b8 <g_strcmp0@plt+0x545c>
   1c4f0:	mov	r0, r5
   1c4f4:	bl	16264 <gtk_tree_path_free@plt>
   1c4f8:	ldr	r2, [sp, #36]	; 0x24
   1c4fc:	ldr	r3, [r4]
   1c500:	cmp	r2, r3
   1c504:	bne	1c518 <g_strcmp0@plt+0x57bc>
   1c508:	add	sp, sp, #40	; 0x28
   1c50c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c510:	bl	1c03c <g_strcmp0@plt+0x52e0>
   1c514:	b	1c4f0 <g_strcmp0@plt+0x5794>
   1c518:	bl	165a0 <__stack_chk_fail@plt>
   1c51c:	andeq	ip, r3, r0, asr lr
   1c520:	andeq	r6, r2, ip, lsl #23
   1c524:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c528:	sub	sp, sp, #20
   1c52c:	ldr	r6, [pc, #412]	; 1c6d0 <g_strcmp0@plt+0x5974>
   1c530:	mov	r4, r2
   1c534:	mov	r2, #0
   1c538:	ldr	r3, [r6]
   1c53c:	str	r2, [sp, #8]
   1c540:	add	r2, sp, #8
   1c544:	str	r3, [sp, #12]
   1c548:	bl	16798 <pk_task_generic_finish@plt>
   1c54c:	ldr	r3, [r4, #124]	; 0x7c
   1c550:	sub	r3, r3, #1
   1c554:	cmp	r3, #0
   1c558:	str	r3, [r4, #124]	; 0x7c
   1c55c:	mov	r5, r0
   1c560:	ldr	r0, [r4, #108]	; 0x6c
   1c564:	bgt	1c56c <g_strcmp0@plt+0x5810>
   1c568:	bl	16498 <gtk_widget_destroy@plt>
   1c56c:	cmp	r5, #0
   1c570:	beq	1c6a8 <g_strcmp0@plt+0x594c>
   1c574:	mov	r0, r5
   1c578:	bl	15f1c <pk_results_get_error_code@plt>
   1c57c:	subs	r7, r0, #0
   1c580:	bne	1c5dc <g_strcmp0@plt+0x5880>
   1c584:	ldr	r3, [r4, #128]	; 0x80
   1c588:	cmp	r3, #0
   1c58c:	bne	1c624 <g_strcmp0@plt+0x58c8>
   1c590:	mov	r1, r4
   1c594:	ldr	r0, [pc, #312]	; 1c6d4 <g_strcmp0@plt+0x5978>
   1c598:	bl	16408 <g_idle_add@plt>
   1c59c:	ldr	r1, [pc, #308]	; 1c6d8 <g_strcmp0@plt+0x597c>
   1c5a0:	bl	16a44 <g_source_set_name_by_id@plt>
   1c5a4:	ldr	r0, [r4, #100]	; 0x64
   1c5a8:	bl	16348 <pk_package_sack_clear@plt>
   1c5ac:	mov	r3, #0
   1c5b0:	str	r3, [r4, #32]
   1c5b4:	mov	r0, r4
   1c5b8:	bl	1bd98 <g_strcmp0@plt+0x503c>
   1c5bc:	mov	r0, r5
   1c5c0:	bl	16990 <g_object_unref@plt>
   1c5c4:	ldr	r2, [sp, #12]
   1c5c8:	ldr	r3, [r6]
   1c5cc:	cmp	r2, r3
   1c5d0:	bne	1c6cc <g_strcmp0@plt+0x5970>
   1c5d4:	add	sp, sp, #20
   1c5d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c5dc:	bl	16018 <pk_error_get_code@plt>
   1c5e0:	bl	16228 <pk_error_enum_to_string@plt>
   1c5e4:	mov	r8, r0
   1c5e8:	mov	r0, r7
   1c5ec:	bl	15fdc <pk_error_get_details@plt>
   1c5f0:	mov	r3, r8
   1c5f4:	ldr	r2, [pc, #224]	; 1c6dc <g_strcmp0@plt+0x5980>
   1c5f8:	mov	r1, #16
   1c5fc:	str	r0, [sp]
   1c600:	ldr	r0, [pc, #216]	; 1c6e0 <g_strcmp0@plt+0x5984>
   1c604:	bl	15ebc <g_log@plt>
   1c608:	mov	r0, r7
   1c60c:	bl	16018 <pk_error_get_code@plt>
   1c610:	cmp	r0, #17
   1c614:	bne	1c63c <g_strcmp0@plt+0x58e0>
   1c618:	mov	r0, r7
   1c61c:	bl	16990 <g_object_unref@plt>
   1c620:	b	1c5bc <g_strcmp0@plt+0x5860>
   1c624:	ldr	r0, [r4, #100]	; 0x64
   1c628:	bl	16348 <pk_package_sack_clear@plt>
   1c62c:	str	r7, [r4, #32]
   1c630:	mov	r0, r4
   1c634:	bl	17498 <g_strcmp0@plt+0x73c>
   1c638:	b	1c590 <g_strcmp0@plt+0x5834>
   1c63c:	ldr	r1, [pc, #160]	; 1c6e4 <g_strcmp0@plt+0x5988>
   1c640:	ldr	r0, [r4, #56]	; 0x38
   1c644:	bl	1615c <gtk_builder_get_object@plt>
   1c648:	mov	r4, r0
   1c64c:	bl	16d20 <gtk_window_get_type@plt>
   1c650:	mov	r1, r0
   1c654:	mov	r0, r4
   1c658:	bl	15e14 <g_type_check_instance_cast@plt>
   1c65c:	mov	r4, r0
   1c660:	mov	r0, r7
   1c664:	bl	16018 <pk_error_get_code@plt>
   1c668:	bl	1ef7c <g_strcmp0@plt+0x8220>
   1c66c:	mov	r8, r0
   1c670:	mov	r0, r7
   1c674:	bl	16018 <pk_error_get_code@plt>
   1c678:	bl	1f60c <g_strcmp0@plt+0x88b0>
   1c67c:	mov	r9, r0
   1c680:	mov	r0, r7
   1c684:	bl	15fdc <pk_error_get_details@plt>
   1c688:	mov	r2, r9
   1c68c:	mov	r1, r8
   1c690:	mov	r3, r0
   1c694:	mov	r0, r4
   1c698:	bl	25660 <g_strcmp0@plt+0xe904>
   1c69c:	mov	r0, r7
   1c6a0:	bl	16990 <g_object_unref@plt>
   1c6a4:	b	1c5bc <g_strcmp0@plt+0x5860>
   1c6a8:	ldr	r3, [sp, #8]
   1c6ac:	ldr	r2, [pc, #52]	; 1c6e8 <g_strcmp0@plt+0x598c>
   1c6b0:	mov	r1, #16
   1c6b4:	ldr	r3, [r3, #8]
   1c6b8:	ldr	r0, [pc, #32]	; 1c6e0 <g_strcmp0@plt+0x5984>
   1c6bc:	bl	15ebc <g_log@plt>
   1c6c0:	ldr	r0, [sp, #8]
   1c6c4:	bl	15d3c <g_error_free@plt>
   1c6c8:	b	1c5c4 <g_strcmp0@plt+0x5868>
   1c6cc:	bl	165a0 <__stack_chk_fail@plt>
   1c6d0:	andeq	ip, r3, r0, asr lr
   1c6d4:			; <UNDEFINED> instruction: 0x0001b3b4
   1c6d8:			; <UNDEFINED> instruction: 0x000276bc
   1c6dc:	muleq	r2, r8, r6
   1c6e0:	andeq	r6, r2, r8, lsr #21
   1c6e4:	andeq	r6, r2, r8, lsl #17
   1c6e8:	andeq	r7, r2, r8, ror r6
   1c6ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6f0:	sub	sp, sp, #28
   1c6f4:	ldr	r9, [pc, #644]	; 1c980 <g_strcmp0@plt+0x5c24>
   1c6f8:	mov	r4, r2
   1c6fc:	mov	r2, #0
   1c700:	ldr	r3, [r9]
   1c704:	str	r2, [sp, #8]
   1c708:	add	r2, sp, #8
   1c70c:	str	r3, [sp, #20]
   1c710:	bl	16798 <pk_task_generic_finish@plt>
   1c714:	ldr	r3, [r4, #124]	; 0x7c
   1c718:	sub	r3, r3, #1
   1c71c:	cmp	r3, #0
   1c720:	str	r3, [r4, #124]	; 0x7c
   1c724:	mov	r6, r0
   1c728:	ldr	r0, [r4, #108]	; 0x6c
   1c72c:	bgt	1c734 <g_strcmp0@plt+0x59d8>
   1c730:	bl	16498 <gtk_widget_destroy@plt>
   1c734:	cmp	r6, #0
   1c738:	beq	1c958 <g_strcmp0@plt+0x5bfc>
   1c73c:	mov	r0, r6
   1c740:	bl	15f1c <pk_results_get_error_code@plt>
   1c744:	subs	r7, r0, #0
   1c748:	bne	1c878 <g_strcmp0@plt+0x5b1c>
   1c74c:	ldr	r3, [r4, #128]	; 0x80
   1c750:	cmp	r3, #0
   1c754:	bne	1c8d4 <g_strcmp0@plt+0x5b78>
   1c758:	mov	r1, r4
   1c75c:	ldr	r0, [pc, #544]	; 1c984 <g_strcmp0@plt+0x5c28>
   1c760:	bl	16408 <g_idle_add@plt>
   1c764:	ldr	r1, [pc, #540]	; 1c988 <g_strcmp0@plt+0x5c2c>
   1c768:	bl	16a44 <g_source_set_name_by_id@plt>
   1c76c:	mov	r5, #0
   1c770:	ldr	r0, [pc, #532]	; 1c98c <g_strcmp0@plt+0x5c30>
   1c774:	str	r5, [sp, #16]
   1c778:	bl	161c8 <g_ptr_array_new_with_free_func@plt>
   1c77c:	mov	sl, r0
   1c780:	mov	r0, r6
   1c784:	bl	15c04 <pk_results_get_package_array@plt>
   1c788:	ldr	r3, [r0, #4]
   1c78c:	mov	r8, r0
   1c790:	cmp	r3, r5
   1c794:	beq	1c804 <g_strcmp0@plt+0x5aa8>
   1c798:	ldr	fp, [pc, #496]	; 1c990 <g_strcmp0@plt+0x5c34>
   1c79c:	b	1c7b8 <g_strcmp0@plt+0x5a5c>
   1c7a0:	ldr	r0, [sp, #16]
   1c7a4:	bl	16660 <g_free@plt>
   1c7a8:	ldr	r3, [r8, #4]
   1c7ac:	add	r5, r5, #1
   1c7b0:	cmp	r5, r3
   1c7b4:	bcs	1c804 <g_strcmp0@plt+0x5aa8>
   1c7b8:	ldr	r1, [r8]
   1c7bc:	mov	ip, #0
   1c7c0:	mov	r3, fp
   1c7c4:	ldr	r0, [r1, r5, lsl #2]
   1c7c8:	str	ip, [sp, #4]
   1c7cc:	add	ip, sp, #16
   1c7d0:	add	r2, sp, #12
   1c7d4:	ldr	r1, [pc, #440]	; 1c994 <g_strcmp0@plt+0x5c38>
   1c7d8:	str	ip, [sp]
   1c7dc:	bl	166fc <g_object_get@plt>
   1c7e0:	ldr	r3, [sp, #12]
   1c7e4:	cmp	r3, #12
   1c7e8:	bne	1c7a0 <g_strcmp0@plt+0x5a44>
   1c7ec:	ldr	r0, [sp, #16]
   1c7f0:	bl	160f0 <g_strdup@plt>
   1c7f4:	mov	r1, r0
   1c7f8:	mov	r0, sl
   1c7fc:	bl	16b58 <g_ptr_array_add@plt>
   1c800:	b	1c7a0 <g_strcmp0@plt+0x5a44>
   1c804:	ldr	r3, [sl, #4]
   1c808:	cmp	r3, #0
   1c80c:	beq	1c8c0 <g_strcmp0@plt+0x5b64>
   1c810:	mov	r0, sl
   1c814:	bl	16330 <pk_ptr_array_to_strv@plt>
   1c818:	mov	r7, r0
   1c81c:	mov	r1, r0
   1c820:	ldr	r0, [r4, #36]	; 0x24
   1c824:	bl	22704 <g_strcmp0@plt+0xb9a8>
   1c828:	mov	r0, r7
   1c82c:	bl	1654c <g_strfreev@plt>
   1c830:	mov	r0, sl
   1c834:	bl	16af8 <g_ptr_array_unref@plt>
   1c838:	mov	r0, r8
   1c83c:	bl	16af8 <g_ptr_array_unref@plt>
   1c840:	ldr	r0, [r4, #100]	; 0x64
   1c844:	bl	16348 <pk_package_sack_clear@plt>
   1c848:	mov	r3, #0
   1c84c:	str	r3, [r4, #32]
   1c850:	mov	r0, r4
   1c854:	bl	1bd98 <g_strcmp0@plt+0x503c>
   1c858:	mov	r0, r6
   1c85c:	bl	16990 <g_object_unref@plt>
   1c860:	ldr	r2, [sp, #20]
   1c864:	ldr	r3, [r9]
   1c868:	cmp	r2, r3
   1c86c:	bne	1c97c <g_strcmp0@plt+0x5c20>
   1c870:	add	sp, sp, #28
   1c874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c878:	bl	16018 <pk_error_get_code@plt>
   1c87c:	bl	16228 <pk_error_enum_to_string@plt>
   1c880:	mov	r5, r0
   1c884:	mov	r0, r7
   1c888:	bl	15fdc <pk_error_get_details@plt>
   1c88c:	mov	r3, r5
   1c890:	ldr	r2, [pc, #256]	; 1c998 <g_strcmp0@plt+0x5c3c>
   1c894:	mov	r1, #16
   1c898:	str	r0, [sp]
   1c89c:	ldr	r0, [pc, #248]	; 1c99c <g_strcmp0@plt+0x5c40>
   1c8a0:	bl	15ebc <g_log@plt>
   1c8a4:	mov	r0, r7
   1c8a8:	bl	16018 <pk_error_get_code@plt>
   1c8ac:	cmp	r0, #17
   1c8b0:	bne	1c8ec <g_strcmp0@plt+0x5b90>
   1c8b4:	mov	r0, r7
   1c8b8:	bl	16990 <g_object_unref@plt>
   1c8bc:	b	1c858 <g_strcmp0@plt+0x5afc>
   1c8c0:	ldr	r2, [pc, #216]	; 1c9a0 <g_strcmp0@plt+0x5c44>
   1c8c4:	mov	r1, #128	; 0x80
   1c8c8:	ldr	r0, [pc, #204]	; 1c99c <g_strcmp0@plt+0x5c40>
   1c8cc:	bl	15ebc <g_log@plt>
   1c8d0:	b	1c828 <g_strcmp0@plt+0x5acc>
   1c8d4:	ldr	r0, [r4, #100]	; 0x64
   1c8d8:	bl	16348 <pk_package_sack_clear@plt>
   1c8dc:	str	r7, [r4, #32]
   1c8e0:	mov	r0, r4
   1c8e4:	bl	17498 <g_strcmp0@plt+0x73c>
   1c8e8:	b	1c758 <g_strcmp0@plt+0x59fc>
   1c8ec:	ldr	r1, [pc, #176]	; 1c9a4 <g_strcmp0@plt+0x5c48>
   1c8f0:	ldr	r0, [r4, #56]	; 0x38
   1c8f4:	bl	1615c <gtk_builder_get_object@plt>
   1c8f8:	mov	r4, r0
   1c8fc:	bl	16d20 <gtk_window_get_type@plt>
   1c900:	mov	r1, r0
   1c904:	mov	r0, r4
   1c908:	bl	15e14 <g_type_check_instance_cast@plt>
   1c90c:	mov	r4, r0
   1c910:	mov	r0, r7
   1c914:	bl	16018 <pk_error_get_code@plt>
   1c918:	bl	1ef7c <g_strcmp0@plt+0x8220>
   1c91c:	mov	r5, r0
   1c920:	mov	r0, r7
   1c924:	bl	16018 <pk_error_get_code@plt>
   1c928:	bl	1f60c <g_strcmp0@plt+0x88b0>
   1c92c:	mov	r8, r0
   1c930:	mov	r0, r7
   1c934:	bl	15fdc <pk_error_get_details@plt>
   1c938:	mov	r2, r8
   1c93c:	mov	r1, r5
   1c940:	mov	r3, r0
   1c944:	mov	r0, r4
   1c948:	bl	25660 <g_strcmp0@plt+0xe904>
   1c94c:	mov	r0, r7
   1c950:	bl	16990 <g_object_unref@plt>
   1c954:	b	1c858 <g_strcmp0@plt+0x5afc>
   1c958:	ldr	r3, [sp, #8]
   1c95c:	ldr	r2, [pc, #68]	; 1c9a8 <g_strcmp0@plt+0x5c4c>
   1c960:	mov	r1, #16
   1c964:	ldr	r3, [r3, #8]
   1c968:	ldr	r0, [pc, #44]	; 1c99c <g_strcmp0@plt+0x5c40>
   1c96c:	bl	15ebc <g_log@plt>
   1c970:	ldr	r0, [sp, #8]
   1c974:	bl	15d3c <g_error_free@plt>
   1c978:	b	1c860 <g_strcmp0@plt+0x5b04>
   1c97c:	bl	165a0 <__stack_chk_fail@plt>
   1c980:	andeq	ip, r3, r0, asr lr
   1c984:			; <UNDEFINED> instruction: 0x0001b3b4
   1c988:			; <UNDEFINED> instruction: 0x000276bc
   1c98c:	andeq	r6, r1, r0, ror #12
   1c990:	andeq	r7, r2, ip, asr #3
   1c994:	andeq	ip, r2, r0, asr #23
   1c998:	strdeq	r7, [r2], -r4
   1c99c:	andeq	r6, r2, r8, lsr #21
   1c9a0:	andeq	r7, r2, r8, lsl r7
   1c9a4:	andeq	r6, r2, r8, lsl #17
   1c9a8:	ldrdeq	r7, [r2], -r4
   1c9ac:	push	{r4, r5, r6, lr}
   1c9b0:	mov	r0, r1
   1c9b4:	mov	r5, r1
   1c9b8:	ldr	r1, [pc, #340]	; 1cb14 <g_strcmp0@plt+0x5db8>
   1c9bc:	mov	r4, r2
   1c9c0:	bl	16d5c <g_strcmp0@plt>
   1c9c4:	cmp	r0, #0
   1c9c8:	bne	1ca00 <g_strcmp0@plt+0x5ca4>
   1c9cc:	mov	r1, r5
   1c9d0:	ldr	r0, [r4, #52]	; 0x34
   1c9d4:	bl	15ba4 <g_settings_get_boolean@plt>
   1c9d8:	mov	r5, r0
   1c9dc:	ldr	r0, [r4, #64]	; 0x40
   1c9e0:	bl	1681c <gtk_tree_store_clear@plt>
   1c9e4:	cmp	r5, #0
   1c9e8:	mov	r0, r4
   1c9ec:	beq	1c9f8 <g_strcmp0@plt+0x5c9c>
   1c9f0:	pop	{r4, r5, r6, lr}
   1c9f4:	b	193fc <g_strcmp0@plt+0x26a0>
   1c9f8:	pop	{r4, r5, r6, lr}
   1c9fc:	b	1b898 <g_strcmp0@plt+0x4b3c>
   1ca00:	ldr	r1, [pc, #272]	; 1cb18 <g_strcmp0@plt+0x5dbc>
   1ca04:	mov	r0, r5
   1ca08:	bl	16d5c <g_strcmp0@plt>
   1ca0c:	cmp	r0, #0
   1ca10:	bne	1ca70 <g_strcmp0@plt+0x5d14>
   1ca14:	mov	r1, r5
   1ca18:	ldr	r0, [r4, #52]	; 0x34
   1ca1c:	bl	15ba4 <g_settings_get_boolean@plt>
   1ca20:	ldr	r1, [pc, #244]	; 1cb1c <g_strcmp0@plt+0x5dc0>
   1ca24:	mov	r5, r0
   1ca28:	ldr	r0, [r4, #56]	; 0x38
   1ca2c:	bl	1615c <gtk_builder_get_object@plt>
   1ca30:	mov	r4, r0
   1ca34:	bl	16a68 <gtk_entry_get_type@plt>
   1ca38:	mov	r1, r0
   1ca3c:	mov	r0, r4
   1ca40:	bl	15e14 <g_type_check_instance_cast@plt>
   1ca44:	cmp	r5, #0
   1ca48:	mov	r6, r0
   1ca4c:	beq	1cb08 <g_strcmp0@plt+0x5dac>
   1ca50:	bl	23a34 <g_strcmp0@plt+0xccd8>
   1ca54:	mov	r4, r0
   1ca58:	mov	r1, r0
   1ca5c:	mov	r0, r6
   1ca60:	bl	162d0 <gtk_entry_set_completion@plt>
   1ca64:	mov	r0, r4
   1ca68:	pop	{r4, r5, r6, lr}
   1ca6c:	b	16990 <g_object_unref@plt>
   1ca70:	ldr	r1, [pc, #168]	; 1cb20 <g_strcmp0@plt+0x5dc4>
   1ca74:	mov	r0, r5
   1ca78:	bl	16d5c <g_strcmp0@plt>
   1ca7c:	cmp	r0, #0
   1ca80:	bne	1cad0 <g_strcmp0@plt+0x5d74>
   1ca84:	mov	r1, r5
   1ca88:	ldr	r0, [r4, #52]	; 0x34
   1ca8c:	bl	15ba4 <g_settings_get_boolean@plt>
   1ca90:	ldr	r3, [r4, #72]	; 0x48
   1ca94:	ldr	r1, [r4, #76]	; 0x4c
   1ca98:	cmp	r0, #0
   1ca9c:	orrne	r3, r3, #65536	; 0x10000
   1caa0:	biceq	r3, r3, #65536	; 0x10000
   1caa4:	ldr	r2, [r4, #8]
   1caa8:	str	r3, [r4, #72]	; 0x48
   1caac:	cmp	r2, #1
   1cab0:	str	r1, [r4, #76]	; 0x4c
   1cab4:	popeq	{r4, r5, r6, pc}
   1cab8:	ldr	r3, [r4, #40]	; 0x28
   1cabc:	cmp	r3, #4
   1cac0:	popeq	{r4, r5, r6, pc}
   1cac4:	mov	r0, r4
   1cac8:	pop	{r4, r5, r6, lr}
   1cacc:	b	1af58 <g_strcmp0@plt+0x41fc>
   1cad0:	ldr	r1, [pc, #76]	; 1cb24 <g_strcmp0@plt+0x5dc8>
   1cad4:	mov	r0, r5
   1cad8:	bl	16d5c <g_strcmp0@plt>
   1cadc:	cmp	r0, #0
   1cae0:	popne	{r4, r5, r6, pc}
   1cae4:	mov	r1, r5
   1cae8:	ldr	r0, [r4, #52]	; 0x34
   1caec:	bl	15ba4 <g_settings_get_boolean@plt>
   1caf0:	ldr	r3, [r4, #72]	; 0x48
   1caf4:	ldr	r1, [r4, #76]	; 0x4c
   1caf8:	cmp	r0, #0
   1cafc:	orrne	r3, r3, #262144	; 0x40000
   1cb00:	biceq	r3, r3, #262144	; 0x40000
   1cb04:	b	1caa4 <g_strcmp0@plt+0x5d48>
   1cb08:	mov	r1, r5
   1cb0c:	pop	{r4, r5, r6, lr}
   1cb10:	b	162d0 <gtk_entry_set_completion@plt>
   1cb14:	andeq	r7, r2, r8, lsr r5
   1cb18:	andeq	r7, r2, r8, lsr #14
   1cb1c:	strdeq	r6, [r2], -r8
   1cb20:	andeq	r7, r2, r8, lsr r7
   1cb24:	andeq	r7, r2, r8, asr #14
   1cb28:	ldr	r3, [pc, #2556]	; 1d52c <g_strcmp0@plt+0x67d0>
   1cb2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb30:	sub	sp, sp, #44	; 0x2c
   1cb34:	ldr	r3, [r3]
   1cb38:	mov	r5, #0
   1cb3c:	mov	r4, r1
   1cb40:	str	r3, [sp, #36]	; 0x24
   1cb44:	mov	r8, r0
   1cb48:	str	r5, [sp, #32]
   1cb4c:	bl	16be8 <pk_package_sack_new@plt>
   1cb50:	mov	r6, #64	; 0x40
   1cb54:	mov	r7, #20
   1cb58:	str	r0, [r4, #100]	; 0x64
   1cb5c:	ldr	r0, [pc, #2508]	; 1d530 <g_strcmp0@plt+0x67d4>
   1cb60:	bl	15c10 <g_settings_new@plt>
   1cb64:	str	r0, [r4, #52]	; 0x34
   1cb68:	bl	163f0 <g_cancellable_new@plt>
   1cb6c:	ldr	r3, [pc, #2496]	; 1d534 <g_strcmp0@plt+0x67d8>
   1cb70:	ldr	r1, [pc, #2496]	; 1d538 <g_strcmp0@plt+0x67dc>
   1cb74:	mov	r2, r3
   1cb78:	str	r0, [r4, #12]
   1cb7c:	ldr	r0, [pc, #2488]	; 1d53c <g_strcmp0@plt+0x67e0>
   1cb80:	bl	160c0 <g_hash_table_new_full@plt>
   1cb84:	str	r5, [r4, #124]	; 0x7c
   1cb88:	str	r5, [r4, #128]	; 0x80
   1cb8c:	str	r0, [r4, #28]
   1cb90:	bl	1eb84 <g_strcmp0@plt+0x7e28>
   1cb94:	mov	r1, #50	; 0x32
   1cb98:	str	r0, [r4]
   1cb9c:	bl	1e340 <g_strcmp0@plt+0x75e4>
   1cba0:	str	r5, [sp, #4]
   1cba4:	str	r5, [sp]
   1cba8:	mov	r3, r4
   1cbac:	ldr	r2, [pc, #2444]	; 1d540 <g_strcmp0@plt+0x67e4>
   1cbb0:	ldr	r1, [pc, #2444]	; 1d544 <g_strcmp0@plt+0x67e8>
   1cbb4:	ldr	r0, [r4, #52]	; 0x34
   1cbb8:	bl	16414 <g_signal_connect_data@plt>
   1cbbc:	mov	r1, r6
   1cbc0:	str	r6, [sp, #12]
   1cbc4:	str	r6, [sp, #8]
   1cbc8:	str	r6, [sp, #4]
   1cbcc:	mov	r3, r7
   1cbd0:	mov	r2, #44	; 0x2c
   1cbd4:	str	r7, [sp]
   1cbd8:	mov	r0, #7
   1cbdc:	bl	165f4 <gtk_list_store_new@plt>
   1cbe0:	mov	r3, r6
   1cbe4:	mov	r2, r6
   1cbe8:	mov	r1, r6
   1cbec:	strd	r6, [sp]
   1cbf0:	str	r0, [r4, #60]	; 0x3c
   1cbf4:	mov	r0, #5
   1cbf8:	bl	15c34 <gtk_tree_store_new@plt>
   1cbfc:	str	r0, [r4, #64]	; 0x40
   1cc00:	bl	16bd0 <gtk_icon_theme_get_default@plt>
   1cc04:	ldr	r1, [pc, #2364]	; 1d548 <g_strcmp0@plt+0x67ec>
   1cc08:	bl	16210 <gtk_icon_theme_append_search_path@plt>
   1cc0c:	bl	16bd0 <gtk_icon_theme_get_default@plt>
   1cc10:	ldr	r1, [pc, #2356]	; 1d54c <g_strcmp0@plt+0x67f0>
   1cc14:	bl	16210 <gtk_icon_theme_append_search_path@plt>
   1cc18:	bl	160fc <pk_control_new@plt>
   1cc1c:	str	r0, [r4, #96]	; 0x60
   1cc20:	bl	251f8 <g_strcmp0@plt+0xe49c>
   1cc24:	mov	r6, r0
   1cc28:	bl	16324 <pk_task_get_type@plt>
   1cc2c:	mov	r1, r0
   1cc30:	mov	r0, r6
   1cc34:	bl	15e14 <g_type_check_instance_cast@plt>
   1cc38:	mov	r3, r5
   1cc3c:	mov	r2, r5
   1cc40:	ldr	r1, [pc, #2312]	; 1d550 <g_strcmp0@plt+0x67f4>
   1cc44:	str	r0, [r4, #104]	; 0x68
   1cc48:	bl	166b4 <g_object_set@plt>
   1cc4c:	mov	r3, r4
   1cc50:	mov	r1, r5
   1cc54:	ldr	r0, [r4, #96]	; 0x60
   1cc58:	ldr	r2, [pc, #2292]	; 1d554 <g_strcmp0@plt+0x67f8>
   1cc5c:	bl	15be0 <pk_control_get_properties_async@plt>
   1cc60:	mov	r3, r4
   1cc64:	ldr	r2, [pc, #2284]	; 1d558 <g_strcmp0@plt+0x67fc>
   1cc68:	ldr	r1, [pc, #2284]	; 1d55c <g_strcmp0@plt+0x6800>
   1cc6c:	str	r5, [sp, #4]
   1cc70:	str	r5, [sp]
   1cc74:	ldr	r0, [r4, #96]	; 0x60
   1cc78:	bl	16414 <g_signal_connect_data@plt>
   1cc7c:	bl	168dc <gtk_builder_new@plt>
   1cc80:	add	r2, sp, #32
   1cc84:	ldr	r1, [pc, #2260]	; 1d560 <g_strcmp0@plt+0x6804>
   1cc88:	str	r0, [r4, #56]	; 0x38
   1cc8c:	bl	16cc0 <gtk_builder_add_from_file@plt>
   1cc90:	cmp	r0, r5
   1cc94:	beq	1d504 <g_strcmp0@plt+0x67a8>
   1cc98:	ldr	r1, [pc, #2244]	; 1d564 <g_strcmp0@plt+0x6808>
   1cc9c:	ldr	r0, [r4, #56]	; 0x38
   1cca0:	bl	1615c <gtk_builder_get_object@plt>
   1cca4:	mov	r7, r0
   1cca8:	bl	15db4 <gtk_widget_get_type@plt>
   1ccac:	mov	r6, r0
   1ccb0:	mov	r1, r0
   1ccb4:	mov	r0, r7
   1ccb8:	bl	15e14 <g_type_check_instance_cast@plt>
   1ccbc:	mov	r7, r0
   1ccc0:	bl	16d20 <gtk_window_get_type@plt>
   1ccc4:	mov	r9, r0
   1ccc8:	mov	r1, r0
   1cccc:	mov	r0, r7
   1ccd0:	bl	15e14 <g_type_check_instance_cast@plt>
   1ccd4:	mov	r1, r0
   1ccd8:	mov	r0, r8
   1ccdc:	bl	15fac <gtk_application_add_window@plt>
   1cce0:	mov	r1, r9
   1cce4:	mov	r0, r7
   1cce8:	bl	15e14 <g_type_check_instance_cast@plt>
   1ccec:	mov	r1, r8
   1ccf0:	bl	169a8 <gtk_window_set_application@plt>
   1ccf4:	ldr	r1, [pc, #2156]	; 1d568 <g_strcmp0@plt+0x680c>
   1ccf8:	ldr	r0, [r4, #56]	; 0x38
   1ccfc:	bl	1615c <gtk_builder_get_object@plt>
   1cd00:	mov	r8, r0
   1cd04:	bl	16774 <g_menu_model_get_type@plt>
   1cd08:	mov	r1, r0
   1cd0c:	mov	r0, r8
   1cd10:	bl	15e14 <g_type_check_instance_cast@plt>
   1cd14:	ldr	r1, [pc, #2128]	; 1d56c <g_strcmp0@plt+0x6810>
   1cd18:	mov	fp, r0
   1cd1c:	ldr	r0, [r4, #56]	; 0x38
   1cd20:	bl	1615c <gtk_builder_get_object@plt>
   1cd24:	mov	r1, r6
   1cd28:	bl	15e14 <g_type_check_instance_cast@plt>
   1cd2c:	mov	r8, r0
   1cd30:	ldr	r0, [pc, #2104]	; 1d570 <g_strcmp0@plt+0x6814>
   1cd34:	bl	15cb8 <gtk_menu_item_new_with_label@plt>
   1cd38:	mov	sl, r0
   1cd3c:	mov	r0, fp
   1cd40:	bl	1693c <gtk_menu_new_from_model@plt>
   1cd44:	mov	fp, r0
   1cd48:	bl	169b4 <gtk_menu_item_get_type@plt>
   1cd4c:	mov	r1, r0
   1cd50:	mov	r0, sl
   1cd54:	bl	15e14 <g_type_check_instance_cast@plt>
   1cd58:	mov	r1, fp
   1cd5c:	bl	16c84 <gtk_menu_item_set_submenu@plt>
   1cd60:	bl	164c8 <gtk_menu_shell_get_type@plt>
   1cd64:	mov	r1, r0
   1cd68:	mov	r0, r8
   1cd6c:	bl	15e14 <g_type_check_instance_cast@plt>
   1cd70:	mov	r1, sl
   1cd74:	bl	16d14 <gtk_menu_shell_append@plt>
   1cd78:	mov	r0, r8
   1cd7c:	bl	168d0 <gtk_widget_show_all@plt>
   1cd80:	ldr	r1, [pc, #2028]	; 1d574 <g_strcmp0@plt+0x6818>
   1cd84:	ldr	r0, [r4, #52]	; 0x34
   1cd88:	bl	16624 <g_settings_create_action@plt>
   1cd8c:	mov	sl, r0
   1cd90:	bl	16450 <g_action_map_get_type@plt>
   1cd94:	mov	r8, r0
   1cd98:	mov	r1, r0
   1cd9c:	ldr	r0, [r4, #48]	; 0x30
   1cda0:	bl	15e14 <g_type_check_instance_cast@plt>
   1cda4:	mov	r1, sl
   1cda8:	bl	16ac8 <g_action_map_add_action@plt>
   1cdac:	ldr	r1, [pc, #1988]	; 1d578 <g_strcmp0@plt+0x681c>
   1cdb0:	ldr	r0, [r4, #52]	; 0x34
   1cdb4:	bl	16624 <g_settings_create_action@plt>
   1cdb8:	mov	r1, r8
   1cdbc:	mov	sl, r0
   1cdc0:	ldr	r0, [r4, #48]	; 0x30
   1cdc4:	bl	15e14 <g_type_check_instance_cast@plt>
   1cdc8:	mov	r1, sl
   1cdcc:	bl	16ac8 <g_action_map_add_action@plt>
   1cdd0:	mov	r2, r5
   1cdd4:	mov	r1, r4
   1cdd8:	ldr	r0, [pc, #1948]	; 1d57c <g_strcmp0@plt+0x6820>
   1cddc:	bl	15d0c <g_cclosure_new@plt>
   1cde0:	mov	sl, r0
   1cde4:	bl	162c4 <gtk_accel_group_new@plt>
   1cde8:	mov	r3, r5
   1cdec:	mov	r2, #4
   1cdf0:	mov	r1, #81	; 0x51
   1cdf4:	str	sl, [sp]
   1cdf8:	mov	r8, r0
   1cdfc:	bl	15f64 <gtk_accel_group_connect@plt>
   1ce00:	ldr	r0, [r4, #48]	; 0x30
   1ce04:	bl	16a08 <gtk_application_get_active_window@plt>
   1ce08:	mov	r1, r8
   1ce0c:	bl	15bbc <gtk_window_add_accel_group@plt>
   1ce10:	bl	2289c <g_strcmp0@plt+0xbb40>
   1ce14:	mov	r1, r9
   1ce18:	mov	r8, r0
   1ce1c:	str	r0, [r4, #36]	; 0x24
   1ce20:	mov	r0, r7
   1ce24:	bl	15e14 <g_type_check_instance_cast@plt>
   1ce28:	mov	r1, r0
   1ce2c:	mov	r0, r8
   1ce30:	bl	227bc <g_strcmp0@plt+0xba60>
   1ce34:	mov	r0, r7
   1ce38:	bl	15e80 <gtk_widget_hide@plt>
   1ce3c:	mov	r1, r9
   1ce40:	mov	r0, r7
   1ce44:	bl	15e14 <g_type_check_instance_cast@plt>
   1ce48:	ldr	r1, [pc, #1840]	; 1d580 <g_strcmp0@plt+0x6824>
   1ce4c:	bl	15fb8 <gtk_window_set_icon_name@plt>
   1ce50:	ldr	r0, [pc, #1832]	; 1d580 <g_strcmp0@plt+0x6824>
   1ce54:	bl	16510 <gtk_window_set_default_icon_name@plt>
   1ce58:	ldr	r1, [pc, #1828]	; 1d584 <g_strcmp0@plt+0x6828>
   1ce5c:	ldr	r0, [r4, #56]	; 0x38
   1ce60:	bl	1615c <gtk_builder_get_object@plt>
   1ce64:	mov	r1, r6
   1ce68:	bl	15e14 <g_type_check_instance_cast@plt>
   1ce6c:	mov	r3, r4
   1ce70:	ldr	r2, [pc, #1808]	; 1d588 <g_strcmp0@plt+0x682c>
   1ce74:	str	r5, [sp, #4]
   1ce78:	str	r5, [sp]
   1ce7c:	ldr	r1, [pc, #1800]	; 1d58c <g_strcmp0@plt+0x6830>
   1ce80:	mov	r8, r0
   1ce84:	bl	16414 <g_signal_connect_data@plt>
   1ce88:	mov	r0, r8
   1ce8c:	mov	r1, #1
   1ce90:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1ce94:	ldr	r1, [pc, #1780]	; 1d590 <g_strcmp0@plt+0x6834>
   1ce98:	ldr	r0, [r4, #56]	; 0x38
   1ce9c:	bl	1615c <gtk_builder_get_object@plt>
   1cea0:	mov	r1, r6
   1cea4:	bl	15e14 <g_type_check_instance_cast@plt>
   1cea8:	mov	r3, r4
   1ceac:	ldr	r2, [pc, #1760]	; 1d594 <g_strcmp0@plt+0x6838>
   1ceb0:	str	r5, [sp, #4]
   1ceb4:	str	r5, [sp]
   1ceb8:	ldr	r1, [pc, #1740]	; 1d58c <g_strcmp0@plt+0x6830>
   1cebc:	mov	r8, r0
   1cec0:	bl	16414 <g_signal_connect_data@plt>
   1cec4:	mov	r0, r8
   1cec8:	mov	r1, #1
   1cecc:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1ced0:	ldr	r1, [pc, #1728]	; 1d598 <g_strcmp0@plt+0x683c>
   1ced4:	ldr	r0, [r4, #56]	; 0x38
   1ced8:	bl	1615c <gtk_builder_get_object@plt>
   1cedc:	mov	r1, r6
   1cee0:	bl	15e14 <g_type_check_instance_cast@plt>
   1cee4:	mov	r3, r4
   1cee8:	ldr	r2, [pc, #1708]	; 1d59c <g_strcmp0@plt+0x6840>
   1ceec:	str	r5, [sp, #4]
   1cef0:	str	r5, [sp]
   1cef4:	ldr	r1, [pc, #1680]	; 1d58c <g_strcmp0@plt+0x6830>
   1cef8:	mov	r8, r0
   1cefc:	bl	16414 <g_signal_connect_data@plt>
   1cf00:	mov	r0, r8
   1cf04:	mov	r1, #1
   1cf08:	bl	16d2c <gtk_widget_set_sensitive@plt>
   1cf0c:	ldr	r1, [pc, #1676]	; 1d5a0 <g_strcmp0@plt+0x6844>
   1cf10:	ldr	r0, [r4, #56]	; 0x38
   1cf14:	bl	1615c <gtk_builder_get_object@plt>
   1cf18:	mov	r1, r6
   1cf1c:	bl	15e14 <g_type_check_instance_cast@plt>
   1cf20:	ldr	r1, [pc, #1660]	; 1d5a4 <g_strcmp0@plt+0x6848>
   1cf24:	mov	r8, r0
   1cf28:	ldr	r0, [r4, #52]	; 0x34
   1cf2c:	bl	15ba4 <g_settings_get_boolean@plt>
   1cf30:	mov	sl, r0
   1cf34:	bl	16a68 <gtk_entry_get_type@plt>
   1cf38:	cmp	sl, #0
   1cf3c:	mov	r5, r0
   1cf40:	bne	1d4dc <g_strcmp0@plt+0x6780>
   1cf44:	mov	r0, r8
   1cf48:	bl	15fe8 <gtk_widget_grab_focus@plt>
   1cf4c:	mov	r0, r8
   1cf50:	bl	16978 <gtk_widget_show@plt>
   1cf54:	mov	r1, r5
   1cf58:	mov	r0, r8
   1cf5c:	mov	r5, #0
   1cf60:	bl	15e14 <g_type_check_instance_cast@plt>
   1cf64:	mov	r2, #1
   1cf68:	mov	r1, r5
   1cf6c:	bl	16648 <gtk_entry_set_icon_sensitive@plt>
   1cf70:	mov	r3, r4
   1cf74:	ldr	r2, [pc, #1580]	; 1d5a8 <g_strcmp0@plt+0x684c>
   1cf78:	ldr	r1, [pc, #1580]	; 1d5ac <g_strcmp0@plt+0x6850>
   1cf7c:	mov	r0, r8
   1cf80:	str	r5, [sp, #4]
   1cf84:	str	r5, [sp]
   1cf88:	bl	16414 <g_signal_connect_data@plt>
   1cf8c:	mov	r3, r4
   1cf90:	ldr	r2, [pc, #1552]	; 1d5a8 <g_strcmp0@plt+0x684c>
   1cf94:	ldr	r1, [pc, #1556]	; 1d5b0 <g_strcmp0@plt+0x6854>
   1cf98:	mov	r0, r8
   1cf9c:	str	r5, [sp, #4]
   1cfa0:	str	r5, [sp]
   1cfa4:	bl	16414 <g_signal_connect_data@plt>
   1cfa8:	mov	r3, r4
   1cfac:	ldr	r2, [pc, #1536]	; 1d5b4 <g_strcmp0@plt+0x6858>
   1cfb0:	mov	r0, r8
   1cfb4:	ldr	r1, [pc, #1532]	; 1d5b8 <g_strcmp0@plt+0x685c>
   1cfb8:	str	r5, [sp, #4]
   1cfbc:	str	r5, [sp]
   1cfc0:	bl	16414 <g_signal_connect_data@plt>
   1cfc4:	ldr	r1, [pc, #1492]	; 1d5a0 <g_strcmp0@plt+0x6844>
   1cfc8:	ldr	r0, [r4, #56]	; 0x38
   1cfcc:	bl	1615c <gtk_builder_get_object@plt>
   1cfd0:	mov	r1, r6
   1cfd4:	bl	15e14 <g_type_check_instance_cast@plt>
   1cfd8:	mov	r8, r0
   1cfdc:	bl	15f28 <gtk_editable_get_type@plt>
   1cfe0:	mov	r1, r0
   1cfe4:	mov	r0, r8
   1cfe8:	bl	15e14 <g_type_check_instance_cast@plt>
   1cfec:	mov	r3, r4
   1cff0:	ldr	r2, [pc, #1476]	; 1d5bc <g_strcmp0@plt+0x6860>
   1cff4:	ldr	r1, [pc, #1352]	; 1d544 <g_strcmp0@plt+0x67e8>
   1cff8:	str	r5, [sp, #4]
   1cffc:	str	r5, [sp]
   1d000:	bl	16414 <g_signal_connect_data@plt>
   1d004:	ldr	r1, [r4, #56]	; 0x38
   1d008:	add	r0, r4, #8
   1d00c:	bl	18e60 <g_strcmp0@plt+0x2104>
   1d010:	mov	r1, r9
   1d014:	mov	r0, r7
   1d018:	bl	15e14 <g_type_check_instance_cast@plt>
   1d01c:	mov	r2, #600	; 0x258
   1d020:	mov	r1, #1000	; 0x3e8
   1d024:	bl	16390 <gtk_window_set_default_size@plt>
   1d028:	mov	r1, r6
   1d02c:	mov	r0, r7
   1d030:	bl	15e14 <g_type_check_instance_cast@plt>
   1d034:	bl	16978 <gtk_widget_show@plt>
   1d038:	ldr	r1, [pc, #1408]	; 1d5c0 <g_strcmp0@plt+0x6864>
   1d03c:	ldr	r0, [r4, #56]	; 0x38
   1d040:	bl	1615c <gtk_builder_get_object@plt>
   1d044:	mov	r1, r6
   1d048:	bl	15e14 <g_type_check_instance_cast@plt>
   1d04c:	mov	r8, r0
   1d050:	bl	165dc <gtk_tree_view_get_type@plt>
   1d054:	mov	r7, r0
   1d058:	mov	r1, r0
   1d05c:	mov	r0, r8
   1d060:	bl	15e14 <g_type_check_instance_cast@plt>
   1d064:	bl	15e2c <gtk_tree_view_columns_autosize@plt>
   1d068:	mov	r1, r7
   1d06c:	mov	r0, r8
   1d070:	bl	15e14 <g_type_check_instance_cast@plt>
   1d074:	mov	r3, r4
   1d078:	ldr	r2, [pc, #1348]	; 1d5c4 <g_strcmp0@plt+0x6868>
   1d07c:	ldr	r1, [pc, #1348]	; 1d5c8 <g_strcmp0@plt+0x686c>
   1d080:	str	r5, [sp, #4]
   1d084:	str	r5, [sp]
   1d088:	bl	16414 <g_signal_connect_data@plt>
   1d08c:	mov	r1, r7
   1d090:	mov	r0, r8
   1d094:	bl	15e14 <g_type_check_instance_cast@plt>
   1d098:	mov	r3, r4
   1d09c:	ldr	r2, [pc, #1320]	; 1d5cc <g_strcmp0@plt+0x6870>
   1d0a0:	ldr	r1, [pc, #1320]	; 1d5d0 <g_strcmp0@plt+0x6874>
   1d0a4:	str	r5, [sp, #4]
   1d0a8:	str	r5, [sp]
   1d0ac:	bl	16414 <g_signal_connect_data@plt>
   1d0b0:	mov	r1, r7
   1d0b4:	mov	r0, r8
   1d0b8:	bl	15e14 <g_type_check_instance_cast@plt>
   1d0bc:	mov	r3, r4
   1d0c0:	ldr	r2, [pc, #1292]	; 1d5d4 <g_strcmp0@plt+0x6878>
   1d0c4:	ldr	r1, [pc, #1292]	; 1d5d8 <g_strcmp0@plt+0x687c>
   1d0c8:	str	r5, [sp, #4]
   1d0cc:	str	r5, [sp]
   1d0d0:	bl	16414 <g_signal_connect_data@plt>
   1d0d4:	bl	16144 <gtk_tree_sortable_get_type@plt>
   1d0d8:	mov	r1, r0
   1d0dc:	ldr	r0, [r4, #60]	; 0x3c
   1d0e0:	bl	15e14 <g_type_check_instance_cast@plt>
   1d0e4:	mov	r2, r5
   1d0e8:	mov	r1, #5
   1d0ec:	bl	16a8c <gtk_tree_sortable_set_sort_column_id@plt>
   1d0f0:	ldr	r1, [pc, #1224]	; 1d5c0 <g_strcmp0@plt+0x6864>
   1d0f4:	ldr	r0, [r4, #56]	; 0x38
   1d0f8:	bl	1615c <gtk_builder_get_object@plt>
   1d0fc:	mov	r1, r6
   1d100:	bl	15e14 <g_type_check_instance_cast@plt>
   1d104:	mov	r1, r7
   1d108:	mov	r8, r0
   1d10c:	bl	15e14 <g_type_check_instance_cast@plt>
   1d110:	mov	r9, r0
   1d114:	bl	16750 <gtk_tree_model_get_type@plt>
   1d118:	mov	r1, r0
   1d11c:	str	r0, [sp, #28]
   1d120:	ldr	r0, [r4, #60]	; 0x3c
   1d124:	bl	15e14 <g_type_check_instance_cast@plt>
   1d128:	mov	r1, r0
   1d12c:	mov	r0, r9
   1d130:	bl	15de4 <gtk_tree_view_set_model@plt>
   1d134:	mov	r1, r7
   1d138:	mov	r0, r8
   1d13c:	bl	15e14 <g_type_check_instance_cast@plt>
   1d140:	bl	16744 <gtk_tree_view_get_selection@plt>
   1d144:	mov	r3, r4
   1d148:	ldr	r2, [pc, #1164]	; 1d5dc <g_strcmp0@plt+0x6880>
   1d14c:	ldr	r1, [pc, #1008]	; 1d544 <g_strcmp0@plt+0x67e8>
   1d150:	str	r5, [sp, #4]
   1d154:	str	r5, [sp]
   1d158:	bl	16414 <g_signal_connect_data@plt>
   1d15c:	ldr	r1, [pc, #1116]	; 1d5c0 <g_strcmp0@plt+0x6864>
   1d160:	ldr	r0, [r4, #56]	; 0x38
   1d164:	bl	1615c <gtk_builder_get_object@plt>
   1d168:	mov	r1, r7
   1d16c:	bl	15e14 <g_type_check_instance_cast@plt>
   1d170:	mov	r8, r0
   1d174:	bl	16b04 <gtk_cell_renderer_toggle_new@plt>
   1d178:	mov	r3, r4
   1d17c:	ldr	r2, [pc, #1116]	; 1d5e0 <g_strcmp0@plt+0x6884>
   1d180:	ldr	r1, [pc, #1116]	; 1d5e4 <g_strcmp0@plt+0x6888>
   1d184:	str	r5, [sp, #4]
   1d188:	str	r5, [sp]
   1d18c:	mov	r9, r0
   1d190:	bl	16414 <g_signal_connect_data@plt>
   1d194:	mov	r2, #5
   1d198:	ldr	r1, [pc, #1096]	; 1d5e8 <g_strcmp0@plt+0x688c>
   1d19c:	mov	r0, r5
   1d1a0:	bl	1666c <dcgettext@plt>
   1d1a4:	ldr	r3, [pc, #1088]	; 1d5ec <g_strcmp0@plt+0x6890>
   1d1a8:	ldr	r2, [pc, #1088]	; 1d5f0 <g_strcmp0@plt+0x6894>
   1d1ac:	str	r3, [sp]
   1d1b0:	mov	r3, #3
   1d1b4:	mov	r1, r9
   1d1b8:	str	r3, [sp, #4]
   1d1bc:	str	r5, [sp, #8]
   1d1c0:	mov	r3, #2
   1d1c4:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   1d1c8:	mov	r1, r0
   1d1cc:	mov	r0, r8
   1d1d0:	bl	15b98 <gtk_tree_view_append_column@plt>
   1d1d4:	bl	163b4 <gtk_tree_view_column_new@plt>
   1d1d8:	mov	r9, r0
   1d1dc:	bl	166e4 <gtk_cell_renderer_pixbuf_new@plt>
   1d1e0:	mov	r3, r5
   1d1e4:	mov	r2, #6
   1d1e8:	ldr	r1, [pc, #1028]	; 1d5f4 <g_strcmp0@plt+0x6898>
   1d1ec:	mov	sl, r0
   1d1f0:	bl	166b4 <g_object_set@plt>
   1d1f4:	mov	r1, sl
   1d1f8:	mov	r0, r9
   1d1fc:	mov	r2, r5
   1d200:	bl	15ce8 <gtk_tree_view_column_pack_start@plt>
   1d204:	mov	r3, r5
   1d208:	ldr	r2, [pc, #1000]	; 1d5f8 <g_strcmp0@plt+0x689c>
   1d20c:	mov	r1, sl
   1d210:	mov	r0, r9
   1d214:	bl	16ae0 <gtk_tree_view_column_add_attribute@plt>
   1d218:	mov	r1, r9
   1d21c:	mov	r0, r8
   1d220:	bl	15b98 <gtk_tree_view_append_column@plt>
   1d224:	bl	1630c <gtk_cell_renderer_text_new@plt>
   1d228:	mov	r2, #5
   1d22c:	ldr	r1, [pc, #968]	; 1d5fc <g_strcmp0@plt+0x68a0>
   1d230:	mov	r9, r0
   1d234:	mov	r0, r5
   1d238:	bl	1666c <dcgettext@plt>
   1d23c:	mov	r3, #4
   1d240:	ldr	r2, [pc, #952]	; 1d600 <g_strcmp0@plt+0x68a4>
   1d244:	mov	r1, r9
   1d248:	str	r5, [sp]
   1d24c:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   1d250:	mov	r1, #4
   1d254:	mov	r9, r0
   1d258:	bl	1609c <gtk_tree_view_column_set_sort_column_id@plt>
   1d25c:	mov	r1, r9
   1d260:	mov	r0, r8
   1d264:	bl	15b98 <gtk_tree_view_append_column@plt>
   1d268:	ldr	r1, [pc, #916]	; 1d604 <g_strcmp0@plt+0x68a8>
   1d26c:	ldr	r0, [r4, #56]	; 0x38
   1d270:	bl	1615c <gtk_builder_get_object@plt>
   1d274:	mov	r1, r6
   1d278:	bl	15e14 <g_type_check_instance_cast@plt>
   1d27c:	bl	16048 <gtk_widget_get_style_context@plt>
   1d280:	ldr	r1, [pc, #896]	; 1d608 <g_strcmp0@plt+0x68ac>
   1d284:	bl	16a50 <gtk_style_context_add_class@plt>
   1d288:	ldr	r1, [pc, #892]	; 1d60c <g_strcmp0@plt+0x68b0>
   1d28c:	ldr	r0, [r4, #56]	; 0x38
   1d290:	bl	1615c <gtk_builder_get_object@plt>
   1d294:	mov	r1, r6
   1d298:	bl	15e14 <g_type_check_instance_cast@plt>
   1d29c:	mov	r1, r7
   1d2a0:	mov	r8, r0
   1d2a4:	bl	15e14 <g_type_check_instance_cast@plt>
   1d2a8:	mov	sl, r0
   1d2ac:	bl	163b4 <gtk_tree_view_column_new@plt>
   1d2b0:	mov	r9, r0
   1d2b4:	bl	166e4 <gtk_cell_renderer_pixbuf_new@plt>
   1d2b8:	mov	r3, r5
   1d2bc:	mov	r2, #3
   1d2c0:	ldr	r1, [pc, #812]	; 1d5f4 <g_strcmp0@plt+0x6898>
   1d2c4:	mov	fp, r0
   1d2c8:	bl	166b4 <g_object_set@plt>
   1d2cc:	mov	r0, r9
   1d2d0:	mov	r2, r5
   1d2d4:	mov	r1, fp
   1d2d8:	bl	15ce8 <gtk_tree_view_column_pack_start@plt>
   1d2dc:	mov	r3, r5
   1d2e0:	ldr	r2, [pc, #784]	; 1d5f8 <g_strcmp0@plt+0x689c>
   1d2e4:	mov	r0, r9
   1d2e8:	mov	r1, fp
   1d2ec:	bl	16ae0 <gtk_tree_view_column_add_attribute@plt>
   1d2f0:	mov	r1, r9
   1d2f4:	mov	r0, sl
   1d2f8:	bl	15b98 <gtk_tree_view_append_column@plt>
   1d2fc:	bl	1630c <gtk_cell_renderer_text_new@plt>
   1d300:	mov	r2, #5
   1d304:	ldr	r1, [pc, #752]	; 1d5fc <g_strcmp0@plt+0x68a0>
   1d308:	mov	r9, r0
   1d30c:	mov	r0, r5
   1d310:	bl	1666c <dcgettext@plt>
   1d314:	mov	r3, #1
   1d318:	ldr	r2, [pc, #752]	; 1d610 <g_strcmp0@plt+0x68b4>
   1d31c:	mov	r1, r9
   1d320:	str	r5, [sp]
   1d324:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   1d328:	mov	r1, #1
   1d32c:	mov	r9, r0
   1d330:	bl	1609c <gtk_tree_view_column_set_sort_column_id@plt>
   1d334:	mov	r1, r9
   1d338:	mov	r0, sl
   1d33c:	bl	15b98 <gtk_tree_view_append_column@plt>
   1d340:	mov	r1, r7
   1d344:	mov	r0, r8
   1d348:	bl	15e14 <g_type_check_instance_cast@plt>
   1d34c:	mov	r1, #2
   1d350:	bl	16a14 <gtk_tree_view_set_tooltip_column@plt>
   1d354:	mov	r1, r7
   1d358:	mov	r0, r8
   1d35c:	bl	15e14 <g_type_check_instance_cast@plt>
   1d360:	mov	r1, r5
   1d364:	bl	1627c <gtk_tree_view_set_show_expanders@plt>
   1d368:	mov	r1, r7
   1d36c:	mov	r0, r8
   1d370:	bl	15e14 <g_type_check_instance_cast@plt>
   1d374:	mov	r1, #9
   1d378:	bl	162f4 <gtk_tree_view_set_level_indentation@plt>
   1d37c:	mov	r1, r7
   1d380:	mov	r0, r8
   1d384:	bl	15e14 <g_type_check_instance_cast@plt>
   1d388:	ldr	r1, [sp, #28]
   1d38c:	mov	r9, r0
   1d390:	ldr	r0, [r4, #64]	; 0x40
   1d394:	bl	15e14 <g_type_check_instance_cast@plt>
   1d398:	mov	r1, r0
   1d39c:	mov	r0, r9
   1d3a0:	bl	15de4 <gtk_tree_view_set_model@plt>
   1d3a4:	mov	r1, r7
   1d3a8:	mov	r0, r8
   1d3ac:	bl	15e14 <g_type_check_instance_cast@plt>
   1d3b0:	bl	16744 <gtk_tree_view_get_selection@plt>
   1d3b4:	mov	r3, r4
   1d3b8:	ldr	r2, [pc, #596]	; 1d614 <g_strcmp0@plt+0x68b8>
   1d3bc:	ldr	r1, [pc, #384]	; 1d544 <g_strcmp0@plt+0x67e8>
   1d3c0:	str	r5, [sp, #4]
   1d3c4:	str	r5, [sp]
   1d3c8:	bl	16414 <g_signal_connect_data@plt>
   1d3cc:	ldr	r1, [pc, #580]	; 1d618 <g_strcmp0@plt+0x68bc>
   1d3d0:	ldr	r0, [r4, #56]	; 0x38
   1d3d4:	bl	1615c <gtk_builder_get_object@plt>
   1d3d8:	mov	r1, r6
   1d3dc:	bl	15e14 <g_type_check_instance_cast@plt>
   1d3e0:	mov	r6, r0
   1d3e4:	bl	15d6c <gtk_label_get_type@plt>
   1d3e8:	mov	r1, r0
   1d3ec:	mov	r0, r6
   1d3f0:	bl	15e14 <g_type_check_instance_cast@plt>
   1d3f4:	mov	r2, #5
   1d3f8:	ldr	r1, [pc, #540]	; 1d61c <g_strcmp0@plt+0x68c0>
   1d3fc:	mov	r6, r0
   1d400:	mov	r0, r5
   1d404:	bl	1666c <dcgettext@plt>
   1d408:	mov	r1, r0
   1d40c:	mov	r0, r6
   1d410:	bl	15d78 <gtk_label_set_label@plt>
   1d414:	mov	r0, r5
   1d418:	mov	r2, #5
   1d41c:	ldr	r1, [pc, #508]	; 1d620 <g_strcmp0@plt+0x68c4>
   1d420:	bl	1666c <dcgettext@plt>
   1d424:	ldr	r3, [r4, #124]	; 0x7c
   1d428:	add	r3, r3, #1
   1d42c:	cmp	r3, #1
   1d430:	str	r3, [r4, #124]	; 0x7c
   1d434:	ble	1d4cc <g_strcmp0@plt+0x6770>
   1d438:	ldr	r5, [r4, #104]	; 0x68
   1d43c:	bl	15f70 <pk_client_get_type@plt>
   1d440:	mov	r1, r0
   1d444:	mov	r0, r5
   1d448:	bl	15e14 <g_type_check_instance_cast@plt>
   1d44c:	ldr	r3, [r4, #12]
   1d450:	ldr	r1, [pc, #460]	; 1d624 <g_strcmp0@plt+0x68c8>
   1d454:	ldr	r2, [pc, #460]	; 1d628 <g_strcmp0@plt+0x68cc>
   1d458:	str	r1, [sp, #12]
   1d45c:	str	r2, [sp, #4]
   1d460:	str	r3, [sp]
   1d464:	mov	r2, #2
   1d468:	mov	r3, #0
   1d46c:	str	r4, [sp, #16]
   1d470:	str	r4, [sp, #8]
   1d474:	bl	16708 <pk_client_get_repo_list_async@plt>
   1d478:	mov	r3, #0
   1d47c:	str	r3, [r4, #32]
   1d480:	mov	r0, r4
   1d484:	bl	1bd98 <g_strcmp0@plt+0x503c>
   1d488:	mov	r2, r4
   1d48c:	ldr	r1, [pc, #224]	; 1d574 <g_strcmp0@plt+0x6818>
   1d490:	ldr	r0, [r4, #52]	; 0x34
   1d494:	bl	1c9ac <g_strcmp0@plt+0x5c50>
   1d498:	ldr	r0, [r4, #52]	; 0x34
   1d49c:	mov	r2, r4
   1d4a0:	ldr	r1, [pc, #208]	; 1d578 <g_strcmp0@plt+0x681c>
   1d4a4:	bl	1c9ac <g_strcmp0@plt+0x5c50>
   1d4a8:	add	r0, r4, #56	; 0x38
   1d4ac:	bl	1acb4 <g_strcmp0@plt+0x3f58>
   1d4b0:	ldr	r3, [pc, #116]	; 1d52c <g_strcmp0@plt+0x67d0>
   1d4b4:	ldr	r2, [sp, #36]	; 0x24
   1d4b8:	ldr	r3, [r3]
   1d4bc:	cmp	r2, r3
   1d4c0:	bne	1d528 <g_strcmp0@plt+0x67cc>
   1d4c4:	add	sp, sp, #44	; 0x2c
   1d4c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4cc:	mov	r1, r0
   1d4d0:	mov	r0, r4
   1d4d4:	bl	18f10 <g_strcmp0@plt+0x21b4>
   1d4d8:	b	1d438 <g_strcmp0@plt+0x66dc>
   1d4dc:	bl	23a34 <g_strcmp0@plt+0xccd8>
   1d4e0:	mov	r1, r5
   1d4e4:	mov	sl, r0
   1d4e8:	mov	r0, r8
   1d4ec:	bl	15e14 <g_type_check_instance_cast@plt>
   1d4f0:	mov	r1, sl
   1d4f4:	bl	162d0 <gtk_entry_set_completion@plt>
   1d4f8:	mov	r0, sl
   1d4fc:	bl	16990 <g_object_unref@plt>
   1d500:	b	1cf44 <g_strcmp0@plt+0x61e8>
   1d504:	ldr	r3, [sp, #32]
   1d508:	ldr	r2, [pc, #284]	; 1d62c <g_strcmp0@plt+0x68d0>
   1d50c:	mov	r1, #16
   1d510:	ldr	r3, [r3, #8]
   1d514:	ldr	r0, [pc, #276]	; 1d630 <g_strcmp0@plt+0x68d4>
   1d518:	bl	15ebc <g_log@plt>
   1d51c:	ldr	r0, [sp, #32]
   1d520:	bl	15d3c <g_error_free@plt>
   1d524:	b	1d4b0 <g_strcmp0@plt+0x6754>
   1d528:	bl	165a0 <__stack_chk_fail@plt>
   1d52c:	andeq	ip, r3, r0, asr lr
   1d530:	andeq	r7, r2, r4, asr r7
   1d534:	andeq	r6, r1, r0, ror #12
   1d538:	ldrdeq	r5, [r1], -r8
   1d53c:	andeq	r6, r1, r8, lsl r6
   1d540:	andeq	ip, r1, ip, lsr #19
   1d544:	andeq	r7, r2, r8, ror #14
   1d548:	andeq	r7, r2, r0, ror r7
   1d54c:	andeq	r7, r2, ip, lsl #15
   1d550:	andeq	r7, r2, r8, lsr #15
   1d554:	andeq	fp, r1, r0, ror r9
   1d558:	andeq	r7, r1, ip, lsr #23
   1d55c:			; <UNDEFINED> instruction: 0x000277b4
   1d560:	andeq	r7, r2, ip, asr #15
   1d564:	andeq	r6, r2, r8, lsl #17
   1d568:	andeq	r7, r2, ip, lsl #16
   1d56c:	andeq	r7, r2, r4, lsl r8
   1d570:	andeq	r7, r2, ip, lsl r8
   1d574:	andeq	r7, r2, r8, lsr r7
   1d578:	andeq	r7, r2, r8, asr #14
   1d57c:	ldrdeq	r7, [r1], -r4
   1d580:	muleq	r2, r8, r8
   1d584:	andeq	r7, r2, r4, lsr #16
   1d588:	andeq	r7, r1, ip, asr #15
   1d58c:	andeq	r6, r2, r4, asr sl
   1d590:	andeq	r7, r2, r4, lsr r8
   1d594:	andeq	r9, r1, r4, ror #4
   1d598:	andeq	r7, r2, r4, asr #16
   1d59c:	strdeq	r9, [r1], -r0
   1d5a0:	strdeq	r6, [r2], -r8
   1d5a4:	andeq	r7, r2, r8, lsr #14
   1d5a8:	muleq	r1, r8, r3
   1d5ac:	andeq	r6, r2, r4, lsr sp
   1d5b0:	andeq	r7, r2, r0, asr r8
   1d5b4:	andeq	r8, r1, r4, asr #12
   1d5b8:	andeq	r7, r2, r0, ror #16
   1d5bc:	andeq	r8, r1, r4, lsr #29
   1d5c0:	andeq	r6, r2, ip, lsl #23
   1d5c4:	andeq	ip, r1, r8, lsr r3
   1d5c8:	andeq	r7, r2, ip, ror #16
   1d5cc:	andeq	fp, r1, r4, asr #13
   1d5d0:	andeq	r7, r2, ip, ror r8
   1d5d4:	andeq	r8, r1, r4, lsr #12
   1d5d8:	muleq	r2, r0, r8
   1d5dc:	andeq	sl, r1, r0, lsl #27
   1d5e0:	andeq	ip, r1, r8, lsr r4
   1d5e4:	muleq	r2, ip, r8
   1d5e8:	andeq	r7, r2, r4, lsr #17
   1d5ec:	andeq	ip, r2, r4, lsl #21
   1d5f0:			; <UNDEFINED> instruction: 0x000278b0
   1d5f4:			; <UNDEFINED> instruction: 0x000278b8
   1d5f8:	andeq	r7, r2, r4, asr #17
   1d5fc:	ldrdeq	r7, [r2], -r0
   1d600:	ldrdeq	r7, [r2], -r8
   1d604:	andeq	r7, r2, r0, ror #17
   1d608:	strdeq	r7, [r2], -r0
   1d60c:			; <UNDEFINED> instruction: 0x00026eb8
   1d610:	strdeq	r7, [r2], -r8
   1d614:	andeq	fp, r1, r4, ror #7
   1d618:			; <UNDEFINED> instruction: 0x000272bc
   1d61c:	strdeq	r7, [r2], -r0
   1d620:	andeq	r7, r2, r0, lsl #18
   1d624:	andeq	r7, r1, r4, lsr #27
   1d628:	andeq	r7, r1, r4, lsl ip
   1d62c:	strdeq	r7, [r2], -r4
   1d630:	andeq	r6, r2, r8, lsr #21
   1d634:	cmp	r0, #0
   1d638:	ldrbne	r0, [r0]
   1d63c:	clzne	r0, r0
   1d640:	lsrne	r0, r0, #5
   1d644:	moveq	r0, #1
   1d648:	bx	lr
   1d64c:	cmp	r0, #0
   1d650:	bxeq	lr
   1d654:	ldrb	r2, [r0]
   1d658:	cmp	r2, #0
   1d65c:	beq	1d6a0 <g_strcmp0@plt+0x6944>
   1d660:	cmp	r1, #1
   1d664:	bls	1d6a8 <g_strcmp0@plt+0x694c>
   1d668:	ldrb	r3, [r0, #1]
   1d66c:	cmp	r3, #0
   1d670:	beq	1d6a8 <g_strcmp0@plt+0x694c>
   1d674:	sub	r1, r1, #1
   1d678:	add	ip, r0, r1
   1d67c:	add	r3, r0, #1
   1d680:	rsb	r2, r0, #1
   1d684:	cmp	r3, ip
   1d688:	add	r0, r2, r3
   1d68c:	bxeq	lr
   1d690:	ldrb	r1, [r3, #1]!
   1d694:	cmp	r1, #0
   1d698:	bne	1d684 <g_strcmp0@plt+0x6928>
   1d69c:	bx	lr
   1d6a0:	mov	r0, r2
   1d6a4:	bx	lr
   1d6a8:	mov	r0, #1
   1d6ac:	bx	lr
   1d6b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1d6b4:	sub	sp, sp, #20
   1d6b8:	ldr	r0, [pc, #48]	; 1d6f0 <g_strcmp0@plt+0x6994>
   1d6bc:	bl	1651c <g_intern_static_string@plt>
   1d6c0:	ldr	r1, [pc, #44]	; 1d6f4 <g_strcmp0@plt+0x6998>
   1d6c4:	mov	r2, #0
   1d6c8:	mov	r3, #16
   1d6cc:	stmib	sp, {r1, r2}
   1d6d0:	str	r3, [sp]
   1d6d4:	mov	r2, #72	; 0x48
   1d6d8:	ldr	r3, [pc, #24]	; 1d6f8 <g_strcmp0@plt+0x699c>
   1d6dc:	mov	r1, r0
   1d6e0:	mov	r0, #80	; 0x50
   1d6e4:	bl	15c70 <g_type_register_static_simple@plt>
   1d6e8:	add	sp, sp, #20
   1d6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6f0:	ldrdeq	r7, [r2], -r4
   1d6f4:			; <UNDEFINED> instruction: 0x0001dfbc
   1d6f8:	strdeq	sp, [r1], -ip
   1d6fc:	push	{r4, lr}
   1d700:	mov	r4, r0
   1d704:	bl	16ad4 <g_type_class_peek_parent@plt>
   1d708:	ldr	r1, [pc, #64]	; 1d750 <g_strcmp0@plt+0x69f4>
   1d70c:	ldr	r3, [r1, #4]
   1d710:	cmp	r3, #0
   1d714:	str	r0, [r1]
   1d718:	bne	1d740 <g_strcmp0@plt+0x69e4>
   1d71c:	mov	r1, #80	; 0x50
   1d720:	mov	r0, r4
   1d724:	bl	16c90 <g_type_check_class_cast@plt>
   1d728:	ldr	r3, [pc, #36]	; 1d754 <g_strcmp0@plt+0x69f8>
   1d72c:	mov	r1, #88	; 0x58
   1d730:	str	r3, [r0, #24]
   1d734:	mov	r0, r4
   1d738:	pop	{r4, lr}
   1d73c:	b	1678c <g_type_class_add_private@plt>
   1d740:	add	r1, r1, #4
   1d744:	mov	r0, r4
   1d748:	bl	15cc4 <g_type_class_adjust_private_offset@plt>
   1d74c:	b	1d71c <g_strcmp0@plt+0x69c0>
   1d750:	andeq	sp, r3, ip, ror #13
   1d754:	andeq	lr, r1, r0, lsr r0
   1d758:	push	{r4, r5, r6, lr}
   1d75c:	mov	r4, r0
   1d760:	mov	r5, r1
   1d764:	b	1d78c <g_strcmp0@plt+0x6a30>
   1d768:	cmp	r4, r3
   1d76c:	beq	1d79c <g_strcmp0@plt+0x6a40>
   1d770:	ldrb	r2, [r3, #-1]
   1d774:	add	r0, r3, #1
   1d778:	cmp	r2, #32
   1d77c:	bne	1d79c <g_strcmp0@plt+0x6a40>
   1d780:	ldrb	r2, [r3, #1]
   1d784:	cmp	r2, #32
   1d788:	bne	1d79c <g_strcmp0@plt+0x6a40>
   1d78c:	mov	r1, r5
   1d790:	bl	166a8 <strstr@plt>
   1d794:	subs	r3, r0, #0
   1d798:	bne	1d768 <g_strcmp0@plt+0x6a0c>
   1d79c:	mov	r0, r3
   1d7a0:	pop	{r4, r5, r6, pc}
   1d7a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7a8:	mov	r5, r1
   1d7ac:	sub	sp, sp, #12
   1d7b0:	mov	r8, r0
   1d7b4:	mov	r1, #1024	; 0x400
   1d7b8:	mov	r0, r5
   1d7bc:	mov	r9, r2
   1d7c0:	mov	sl, r3
   1d7c4:	bl	1d64c <g_strcmp0@plt+0x68f0>
   1d7c8:	subs	r4, r0, #0
   1d7cc:	moveq	r7, r4
   1d7d0:	beq	1d87c <g_strcmp0@plt+0x6b20>
   1d7d4:	mov	r0, r8
   1d7d8:	bl	160f0 <g_strdup@plt>
   1d7dc:	mov	r1, r5
   1d7e0:	mov	r7, r0
   1d7e4:	bl	1d758 <g_strcmp0@plt+0x69fc>
   1d7e8:	subs	r6, r0, #0
   1d7ec:	beq	1d870 <g_strcmp0@plt+0x6b14>
   1d7f0:	mov	fp, #0
   1d7f4:	strb	fp, [r6], r4
   1d7f8:	mov	r1, r5
   1d7fc:	mov	r0, r6
   1d800:	bl	1d758 <g_strcmp0@plt+0x69fc>
   1d804:	cmp	r0, #0
   1d808:	beq	1d870 <g_strcmp0@plt+0x6b14>
   1d80c:	subs	r3, r6, fp
   1d810:	movne	r3, #1
   1d814:	cmp	r7, fp
   1d818:	moveq	r3, fp
   1d81c:	strb	fp, [r0], r4
   1d820:	cmp	r0, fp
   1d824:	moveq	r3, fp
   1d828:	cmp	r3, fp
   1d82c:	beq	1d870 <g_strcmp0@plt+0x6b14>
   1d830:	str	r0, [sp, #4]
   1d834:	mov	r3, r6
   1d838:	mov	r2, r9
   1d83c:	mov	r1, r7
   1d840:	str	sl, [sp]
   1d844:	ldr	r0, [pc, #68]	; 1d890 <g_strcmp0@plt+0x6b34>
   1d848:	bl	161e0 <g_strdup_printf@plt>
   1d84c:	mov	r3, sl
   1d850:	mov	r2, r9
   1d854:	mov	r1, r5
   1d858:	mov	r6, r0
   1d85c:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1d860:	mov	r4, r0
   1d864:	mov	r0, r6
   1d868:	bl	16660 <g_free@plt>
   1d86c:	b	1d87c <g_strcmp0@plt+0x6b20>
   1d870:	mov	r0, r8
   1d874:	bl	160f0 <g_strdup@plt>
   1d878:	mov	r4, r0
   1d87c:	mov	r0, r7
   1d880:	bl	16660 <g_free@plt>
   1d884:	mov	r0, r4
   1d888:	add	sp, sp, #12
   1d88c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d890:	andeq	r7, r2, r0, ror #21
   1d894:	push	{r4, r5, r6, lr}
   1d898:	mov	r5, r0
   1d89c:	mov	r0, r1
   1d8a0:	bl	160f0 <g_strdup@plt>
   1d8a4:	mov	r4, r0
   1d8a8:	bl	16aa4 <g_strchug@plt>
   1d8ac:	bl	16120 <g_strchomp@plt>
   1d8b0:	ldr	r3, [r5, #12]
   1d8b4:	mov	r2, r4
   1d8b8:	ldr	r1, [pc, #20]	; 1d8d4 <g_strcmp0@plt+0x6b78>
   1d8bc:	ldr	r0, [r3, #80]	; 0x50
   1d8c0:	bl	16c78 <g_string_append_printf@plt>
   1d8c4:	mov	r0, r4
   1d8c8:	bl	16660 <g_free@plt>
   1d8cc:	mov	r0, #1
   1d8d0:	pop	{r4, r5, r6, pc}
   1d8d4:	andeq	r7, r2, ip, ror #21
   1d8d8:	push	{r4, r5, r6, lr}
   1d8dc:	mov	r5, r0
   1d8e0:	mov	r0, r1
   1d8e4:	bl	160f0 <g_strdup@plt>
   1d8e8:	mov	r2, #32
   1d8ec:	ldr	r1, [pc, #60]	; 1d930 <g_strcmp0@plt+0x6bd4>
   1d8f0:	mov	r4, r0
   1d8f4:	bl	15d90 <g_strdelimit@plt>
   1d8f8:	ldr	r3, [r5, #12]
   1d8fc:	ldr	r2, [r3, #64]	; 0x40
   1d900:	ldr	r3, [r3, #60]	; 0x3c
   1d904:	cmp	r2, r3
   1d908:	movcs	r5, #0
   1d90c:	bcs	1d920 <g_strcmp0@plt+0x6bc4>
   1d910:	mov	r0, r5
   1d914:	mov	r1, r4
   1d918:	bl	1d894 <g_strcmp0@plt+0x6b38>
   1d91c:	mov	r5, r0
   1d920:	mov	r0, r4
   1d924:	bl	16660 <g_free@plt>
   1d928:	mov	r0, r5
   1d92c:	pop	{r4, r5, r6, pc}
   1d930:	strdeq	r7, [r2], -r0
   1d934:	push	{r4, r5, r6, r7, r8, lr}
   1d938:	mov	r4, r0
   1d93c:	mov	r0, r1
   1d940:	bl	160f0 <g_strdup@plt>
   1d944:	ldr	r2, [r4, #12]
   1d948:	ldr	r1, [pc, #264]	; 1da58 <g_strcmp0@plt+0x6cfc>
   1d94c:	ldrd	r2, [r2, #12]
   1d950:	mov	r5, r0
   1d954:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1d958:	mov	r6, r0
   1d95c:	mov	r0, r5
   1d960:	bl	16660 <g_free@plt>
   1d964:	ldr	r2, [r4, #12]
   1d968:	ldr	r1, [pc, #236]	; 1da5c <g_strcmp0@plt+0x6d00>
   1d96c:	mov	r0, r6
   1d970:	ldrd	r2, [r2, #12]
   1d974:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1d978:	mov	r5, r0
   1d97c:	mov	r0, r6
   1d980:	bl	16660 <g_free@plt>
   1d984:	ldr	r2, [r4, #12]
   1d988:	ldr	r1, [pc, #208]	; 1da60 <g_strcmp0@plt+0x6d04>
   1d98c:	mov	r0, r5
   1d990:	ldrd	r2, [r2, #4]
   1d994:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1d998:	mov	r6, r0
   1d99c:	mov	r0, r5
   1d9a0:	bl	16660 <g_free@plt>
   1d9a4:	ldr	r2, [r4, #12]
   1d9a8:	ldr	r1, [pc, #180]	; 1da64 <g_strcmp0@plt+0x6d08>
   1d9ac:	mov	r0, r6
   1d9b0:	ldrd	r2, [r2, #4]
   1d9b4:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1d9b8:	mov	r5, r0
   1d9bc:	mov	r0, r6
   1d9c0:	bl	16660 <g_free@plt>
   1d9c4:	mvn	r2, #0
   1d9c8:	ldr	r1, [pc, #152]	; 1da68 <g_strcmp0@plt+0x6d0c>
   1d9cc:	mov	r0, r5
   1d9d0:	bl	162dc <g_strsplit@plt>
   1d9d4:	mov	r1, r0
   1d9d8:	mov	r6, r0
   1d9dc:	ldr	r0, [pc, #136]	; 1da6c <g_strcmp0@plt+0x6d10>
   1d9e0:	bl	16c3c <g_strjoinv@plt>
   1d9e4:	mov	r7, r0
   1d9e8:	mov	r0, r6
   1d9ec:	bl	1654c <g_strfreev@plt>
   1d9f0:	mov	r0, r5
   1d9f4:	bl	16660 <g_free@plt>
   1d9f8:	ldr	r3, [r4, #12]
   1d9fc:	ldr	r3, [r3, #68]	; 0x44
   1da00:	cmp	r3, #0
   1da04:	bne	1da10 <g_strcmp0@plt+0x6cb4>
   1da08:	mov	r0, r7
   1da0c:	pop	{r4, r5, r6, r7, r8, pc}
   1da10:	ldr	r3, [pc, #88]	; 1da70 <g_strcmp0@plt+0x6d14>
   1da14:	ldr	r2, [pc, #88]	; 1da74 <g_strcmp0@plt+0x6d18>
   1da18:	ldr	r1, [pc, #88]	; 1da78 <g_strcmp0@plt+0x6d1c>
   1da1c:	mov	r0, r7
   1da20:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1da24:	mov	r4, r0
   1da28:	mov	r0, r7
   1da2c:	bl	16660 <g_free@plt>
   1da30:	ldr	r3, [pc, #68]	; 1da7c <g_strcmp0@plt+0x6d20>
   1da34:	ldr	r2, [pc, #68]	; 1da80 <g_strcmp0@plt+0x6d24>
   1da38:	ldr	r1, [pc, #68]	; 1da84 <g_strcmp0@plt+0x6d28>
   1da3c:	mov	r0, r4
   1da40:	bl	1d7a4 <g_strcmp0@plt+0x6a48>
   1da44:	mov	r7, r0
   1da48:	mov	r0, r4
   1da4c:	bl	16660 <g_free@plt>
   1da50:	mov	r0, r7
   1da54:	pop	{r4, r5, r6, r7, r8, pc}
   1da58:	strdeq	r7, [r2], -r4
   1da5c:	strdeq	r7, [r2], -r8
   1da60:	strdeq	r7, [r2], -ip
   1da64:	andeq	r7, r2, r0, lsl #22
   1da68:	andeq	r7, r2, r4, lsl #22
   1da6c:	andeq	r7, r2, ip, lsl #22
   1da70:	andeq	r7, r2, r4, lsl fp
   1da74:	andeq	r7, r2, r8, lsl fp
   1da78:	andeq	r7, r2, ip, lsl fp
   1da7c:	andeq	r7, r2, r0, lsr #22
   1da80:	andeq	r7, r2, r4, lsr #22
   1da84:	andeq	r7, r2, r8, lsr #27
   1da88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da8c:	mov	r4, r0
   1da90:	sub	sp, sp, #20
   1da94:	ldr	r6, [pc, #1156]	; 1df20 <g_strcmp0@plt+0x71c4>
   1da98:	b	1dab4 <g_strcmp0@plt+0x6d58>
   1da9c:	ldr	r3, [r4, #12]
   1daa0:	ldr	r3, [r3, #80]	; 0x50
   1daa4:	mov	r0, r3
   1daa8:	ldr	r1, [r3, #4]
   1daac:	sub	r1, r1, #1
   1dab0:	bl	15b5c <g_string_set_size@plt>
   1dab4:	ldr	r3, [r4, #12]
   1dab8:	mov	r1, r6
   1dabc:	ldr	r3, [r3, #80]	; 0x50
   1dac0:	ldr	r0, [r3]
   1dac4:	bl	16b70 <g_str_has_suffix@plt>
   1dac8:	cmp	r0, #0
   1dacc:	bne	1da9c <g_strcmp0@plt+0x6d40>
   1dad0:	ldr	r3, [r4, #12]
   1dad4:	mov	r5, r0
   1dad8:	ldr	r3, [r3, #80]	; 0x50
   1dadc:	ldr	r0, [r3]
   1dae0:	bl	160f0 <g_strdup@plt>
   1dae4:	ldr	r3, [r4, #12]
   1dae8:	ldr	r2, [r3, #72]	; 0x48
   1daec:	cmp	r2, #0
   1daf0:	mov	r6, r0
   1daf4:	bne	1dc50 <g_strcmp0@plt+0x6ef4>
   1daf8:	ldr	r2, [r3, #56]	; 0x38
   1dafc:	cmp	r2, #1
   1db00:	beq	1dcac <g_strcmp0@plt+0x6f50>
   1db04:	ldr	r2, [r3, #76]	; 0x4c
   1db08:	cmp	r2, #0
   1db0c:	beq	1db30 <g_strcmp0@plt+0x6dd4>
   1db10:	ldr	r2, [r3]
   1db14:	sub	r2, r2, #2
   1db18:	cmp	r2, #1
   1db1c:	movhi	r2, r3
   1db20:	bls	1dd58 <g_strcmp0@plt+0x6ffc>
   1db24:	ldr	r3, [r2, #72]	; 0x48
   1db28:	cmp	r3, #0
   1db2c:	bne	1dc5c <g_strcmp0@plt+0x6f00>
   1db30:	mov	r1, #96	; 0x60
   1db34:	mov	r0, r6
   1db38:	bl	16ce4 <strchr@plt>
   1db3c:	cmp	r0, #0
   1db40:	beq	1dce0 <g_strcmp0@plt+0x6f84>
   1db44:	ldr	r1, [pc, #984]	; 1df24 <g_strcmp0@plt+0x71c8>
   1db48:	mvn	r2, #0
   1db4c:	mov	r0, r6
   1db50:	bl	162dc <g_strsplit@plt>
   1db54:	mov	r7, r0
   1db58:	ldr	r0, [pc, #968]	; 1df28 <g_strcmp0@plt+0x71cc>
   1db5c:	bl	15dc0 <g_string_new@plt>
   1db60:	ldr	r1, [r7]
   1db64:	cmp	r1, #0
   1db68:	mov	r5, r0
   1db6c:	bne	1dba8 <g_strcmp0@plt+0x6e4c>
   1db70:	b	1dbd8 <g_strcmp0@plt+0x6e7c>
   1db74:	ldr	r3, [r4, #12]
   1db78:	ldr	r1, [r3, #20]
   1db7c:	bl	16c00 <g_string_append@plt>
   1db80:	ldr	r1, [r7, #4]
   1db84:	mov	r0, r5
   1db88:	bl	16c00 <g_string_append@plt>
   1db8c:	ldr	r3, [r4, #12]
   1db90:	mov	r0, r5
   1db94:	ldr	r1, [r3, #24]
   1db98:	bl	16c00 <g_string_append@plt>
   1db9c:	ldr	r1, [r7, #8]!
   1dba0:	cmp	r1, #0
   1dba4:	beq	1dbd8 <g_strcmp0@plt+0x6e7c>
   1dba8:	mov	r0, r4
   1dbac:	bl	1d934 <g_strcmp0@plt+0x6bd8>
   1dbb0:	mov	r1, r0
   1dbb4:	mov	r8, r0
   1dbb8:	mov	r0, r5
   1dbbc:	bl	16c00 <g_string_append@plt>
   1dbc0:	mov	r0, r8
   1dbc4:	bl	16660 <g_free@plt>
   1dbc8:	ldr	r3, [r7, #4]
   1dbcc:	mov	r0, r5
   1dbd0:	cmp	r3, #0
   1dbd4:	bne	1db74 <g_strcmp0@plt+0x6e18>
   1dbd8:	mov	r0, r5
   1dbdc:	mov	r1, #0
   1dbe0:	bl	168e8 <g_string_free@plt>
   1dbe4:	mov	r5, r0
   1dbe8:	ldr	r1, [r4, #12]
   1dbec:	ldr	r3, [r1]
   1dbf0:	cmp	r3, #2
   1dbf4:	beq	1dc7c <g_strcmp0@plt+0x6f20>
   1dbf8:	cmp	r3, #4
   1dbfc:	beq	1dd18 <g_strcmp0@plt+0x6fbc>
   1dc00:	cmp	r3, #5
   1dc04:	beq	1dd38 <g_strcmp0@plt+0x6fdc>
   1dc08:	bic	r3, r3, #2
   1dc0c:	cmp	r3, #1
   1dc10:	beq	1dcf4 <g_strcmp0@plt+0x6f98>
   1dc14:	ldr	r2, [pc, #784]	; 1df2c <g_strcmp0@plt+0x71d0>
   1dc18:	mov	r3, r5
   1dc1c:	mov	r1, #128	; 0x80
   1dc20:	ldr	r0, [pc, #776]	; 1df30 <g_strcmp0@plt+0x71d4>
   1dc24:	bl	15ebc <g_log@plt>
   1dc28:	ldr	r3, [r4, #12]
   1dc2c:	mov	r1, #0
   1dc30:	ldr	r0, [r3, #80]	; 0x50
   1dc34:	bl	15d84 <g_string_truncate@plt>
   1dc38:	mov	r0, r6
   1dc3c:	bl	16660 <g_free@plt>
   1dc40:	mov	r0, r5
   1dc44:	add	sp, sp, #20
   1dc48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc4c:	b	16660 <g_free@plt>
   1dc50:	ldr	r2, [r3, #76]	; 0x4c
   1dc54:	cmp	r2, #0
   1dc58:	bne	1db10 <g_strcmp0@plt+0x6db4>
   1dc5c:	mvn	r1, #0
   1dc60:	mov	r0, r6
   1dc64:	bl	16b64 <g_markup_escape_text@plt>
   1dc68:	mov	r5, r0
   1dc6c:	mov	r0, r6
   1dc70:	bl	16660 <g_free@plt>
   1dc74:	mov	r6, r5
   1dc78:	b	1db30 <g_strcmp0@plt+0x6dd4>
   1dc7c:	ldr	r3, [r1, #48]	; 0x30
   1dc80:	ldr	r2, [r1, #44]	; 0x2c
   1dc84:	ldr	r0, [r1, #84]	; 0x54
   1dc88:	str	r3, [sp]
   1dc8c:	ldr	r1, [pc, #672]	; 1df34 <g_strcmp0@plt+0x71d8>
   1dc90:	mov	r3, r5
   1dc94:	bl	16c78 <g_string_append_printf@plt>
   1dc98:	ldr	r2, [r4, #12]
   1dc9c:	ldr	r3, [r2, #64]	; 0x40
   1dca0:	add	r3, r3, #1
   1dca4:	str	r3, [r2, #64]	; 0x40
   1dca8:	b	1dc14 <g_strcmp0@plt+0x6eb8>
   1dcac:	mov	r2, #40	; 0x28
   1dcb0:	ldr	r1, [pc, #640]	; 1df38 <g_strcmp0@plt+0x71dc>
   1dcb4:	bl	15d90 <g_strdelimit@plt>
   1dcb8:	mov	r2, #41	; 0x29
   1dcbc:	ldr	r1, [pc, #632]	; 1df3c <g_strcmp0@plt+0x71e0>
   1dcc0:	mov	r0, r6
   1dcc4:	bl	15d90 <g_strdelimit@plt>
   1dcc8:	ldr	r3, [r4, #12]
   1dccc:	mov	r2, r3
   1dcd0:	ldr	r1, [r3, #76]	; 0x4c
   1dcd4:	cmp	r1, #0
   1dcd8:	beq	1db24 <g_strcmp0@plt+0x6dc8>
   1dcdc:	b	1db10 <g_strcmp0@plt+0x6db4>
   1dce0:	mov	r1, r6
   1dce4:	mov	r0, r4
   1dce8:	bl	1d934 <g_strcmp0@plt+0x6bd8>
   1dcec:	mov	r5, r0
   1dcf0:	b	1dbe8 <g_strcmp0@plt+0x6e8c>
   1dcf4:	ldr	r0, [r1, #84]	; 0x54
   1dcf8:	mov	r2, r5
   1dcfc:	ldr	r1, [pc, #572]	; 1df40 <g_strcmp0@plt+0x71e4>
   1dd00:	bl	16c78 <g_string_append_printf@plt>
   1dd04:	ldr	r2, [r4, #12]
   1dd08:	ldr	r3, [r2, #64]	; 0x40
   1dd0c:	add	r3, r3, #1
   1dd10:	str	r3, [r2, #64]	; 0x40
   1dd14:	b	1dc14 <g_strcmp0@plt+0x6eb8>
   1dd18:	ldr	r3, [r1, #32]
   1dd1c:	ldr	r2, [r1, #28]
   1dd20:	ldr	r0, [r1, #84]	; 0x54
   1dd24:	str	r3, [sp]
   1dd28:	ldr	r1, [pc, #516]	; 1df34 <g_strcmp0@plt+0x71d8>
   1dd2c:	mov	r3, r5
   1dd30:	bl	16c78 <g_string_append_printf@plt>
   1dd34:	b	1dc14 <g_strcmp0@plt+0x6eb8>
   1dd38:	ldr	r3, [r1, #40]	; 0x28
   1dd3c:	ldr	r2, [r1, #36]	; 0x24
   1dd40:	ldr	r0, [r1, #84]	; 0x54
   1dd44:	str	r3, [sp]
   1dd48:	ldr	r1, [pc, #484]	; 1df34 <g_strcmp0@plt+0x71d8>
   1dd4c:	mov	r3, r5
   1dd50:	bl	16c78 <g_string_append_printf@plt>
   1dd54:	b	1dc14 <g_strcmp0@plt+0x6eb8>
   1dd58:	mvn	r2, #0
   1dd5c:	ldr	r1, [pc, #444]	; 1df20 <g_strcmp0@plt+0x71c4>
   1dd60:	mov	r0, r6
   1dd64:	bl	162dc <g_strsplit@plt>
   1dd68:	ldr	fp, [r0]
   1dd6c:	mov	r9, r0
   1dd70:	cmp	fp, #0
   1dd74:	beq	1df10 <g_strcmp0@plt+0x71b4>
   1dd78:	ldr	r8, [pc, #420]	; 1df24 <g_strcmp0@plt+0x71c8>
   1dd7c:	ldr	sl, [pc, #448]	; 1df44 <g_strcmp0@plt+0x71e8>
   1dd80:	mov	r7, r0
   1dd84:	mov	r1, r8
   1dd88:	mov	r0, fp
   1dd8c:	bl	163c0 <g_str_has_prefix@plt>
   1dd90:	cmp	r0, #0
   1dd94:	bne	1de08 <g_strcmp0@plt+0x70ac>
   1dd98:	mov	r1, r8
   1dd9c:	mov	r0, fp
   1dda0:	bl	16b70 <g_str_has_suffix@plt>
   1dda4:	cmp	r0, #0
   1dda8:	bne	1de08 <g_strcmp0@plt+0x70ac>
   1ddac:	mov	r1, sl
   1ddb0:	mov	r0, fp
   1ddb4:	bl	163c0 <g_str_has_prefix@plt>
   1ddb8:	cmp	r0, #0
   1ddbc:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1ddc0:	ldr	r1, [pc, #384]	; 1df48 <g_strcmp0@plt+0x71ec>
   1ddc4:	mov	r0, fp
   1ddc8:	bl	163c0 <g_str_has_prefix@plt>
   1ddcc:	cmp	r0, #0
   1ddd0:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1ddd4:	ldr	r1, [pc, #368]	; 1df4c <g_strcmp0@plt+0x71f0>
   1ddd8:	mov	r0, fp
   1dddc:	bl	163c0 <g_str_has_prefix@plt>
   1dde0:	cmp	r0, #0
   1dde4:	beq	1de48 <g_strcmp0@plt+0x70ec>
   1dde8:	ldr	r1, [r7]
   1ddec:	ldr	r0, [pc, #348]	; 1df50 <g_strcmp0@plt+0x71f4>
   1ddf0:	bl	161e0 <g_strdup_printf@plt>
   1ddf4:	mov	r5, #1
   1ddf8:	mov	fp, r0
   1ddfc:	ldr	r0, [r7]
   1de00:	bl	16660 <g_free@plt>
   1de04:	str	fp, [r7]
   1de08:	ldr	fp, [r7, #4]!
   1de0c:	cmp	fp, #0
   1de10:	bne	1dd84 <g_strcmp0@plt+0x7028>
   1de14:	cmp	r5, #0
   1de18:	beq	1df10 <g_strcmp0@plt+0x71b4>
   1de1c:	mov	r1, r9
   1de20:	ldr	r0, [pc, #248]	; 1df20 <g_strcmp0@plt+0x71c4>
   1de24:	bl	16c3c <g_strjoinv@plt>
   1de28:	mov	r5, r0
   1de2c:	mov	r0, r9
   1de30:	bl	1654c <g_strfreev@plt>
   1de34:	mov	r0, r6
   1de38:	bl	16660 <g_free@plt>
   1de3c:	mov	r6, r5
   1de40:	ldr	r2, [r4, #12]
   1de44:	b	1db24 <g_strcmp0@plt+0x6dc8>
   1de48:	ldr	r1, [pc, #260]	; 1df54 <g_strcmp0@plt+0x71f8>
   1de4c:	mov	r0, fp
   1de50:	bl	163c0 <g_str_has_prefix@plt>
   1de54:	cmp	r0, #0
   1de58:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1de5c:	ldr	r1, [pc, #244]	; 1df58 <g_strcmp0@plt+0x71fc>
   1de60:	mov	r0, fp
   1de64:	bl	163c0 <g_str_has_prefix@plt>
   1de68:	cmp	r0, #0
   1de6c:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1de70:	ldr	r1, [pc, #228]	; 1df5c <g_strcmp0@plt+0x7200>
   1de74:	mov	r0, fp
   1de78:	bl	16534 <g_strrstr@plt>
   1de7c:	cmp	r0, #0
   1de80:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1de84:	ldr	r1, [pc, #212]	; 1df60 <g_strcmp0@plt+0x7204>
   1de88:	mov	r0, fp
   1de8c:	bl	16534 <g_strrstr@plt>
   1de90:	cmp	r0, #0
   1de94:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1de98:	ldr	r1, [pc, #196]	; 1df64 <g_strcmp0@plt+0x7208>
   1de9c:	mov	r0, fp
   1dea0:	bl	16534 <g_strrstr@plt>
   1dea4:	cmp	r0, #0
   1dea8:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1deac:	ldr	r1, [pc, #180]	; 1df68 <g_strcmp0@plt+0x720c>
   1deb0:	mov	r0, fp
   1deb4:	bl	16534 <g_strrstr@plt>
   1deb8:	subs	r3, r0, #0
   1debc:	str	r3, [sp, #12]
   1dec0:	bne	1dde8 <g_strcmp0@plt+0x708c>
   1dec4:	ldrb	r2, [fp]
   1dec8:	cmp	r2, #95	; 0x5f
   1decc:	beq	1de08 <g_strcmp0@plt+0x70ac>
   1ded0:	mov	r1, #1024	; 0x400
   1ded4:	mov	r0, fp
   1ded8:	bl	1d64c <g_strcmp0@plt+0x68f0>
   1dedc:	subs	r2, r0, #0
   1dee0:	beq	1de08 <g_strcmp0@plt+0x70ac>
   1dee4:	add	r2, fp, r2
   1dee8:	ldr	r3, [sp, #12]
   1deec:	b	1defc <g_strcmp0@plt+0x71a0>
   1def0:	ldrb	r1, [fp], #1
   1def4:	cmp	r1, #95	; 0x5f
   1def8:	addeq	r3, r3, #1
   1defc:	cmp	r2, fp
   1df00:	bne	1def0 <g_strcmp0@plt+0x7194>
   1df04:	cmp	r3, #1
   1df08:	bhi	1dde8 <g_strcmp0@plt+0x708c>
   1df0c:	b	1de08 <g_strcmp0@plt+0x70ac>
   1df10:	mov	r0, r6
   1df14:	bl	160f0 <g_strdup@plt>
   1df18:	mov	r5, r0
   1df1c:	b	1de2c <g_strcmp0@plt+0x70d0>
   1df20:	andeq	r7, r2, r0, lsl fp
   1df24:	andeq	r7, r2, ip, lsr #22
   1df28:	ldrdeq	r7, [r2], -r0
   1df2c:	andeq	r7, r2, r8, ror fp
   1df30:	andeq	r6, r2, r8, lsr #21
   1df34:	andeq	r7, r2, r0, ror fp
   1df38:	andeq	r7, r2, r8, lsr #22
   1df3c:	strdeq	fp, [r2], -r4
   1df40:	andeq	r7, r2, ip, ror #9
   1df44:	andeq	r7, r2, r0, lsr fp
   1df48:	strdeq	r7, [r2], -r0
   1df4c:	andeq	r7, r2, ip, lsr fp
   1df50:	andeq	r7, r2, r4, lsr fp
   1df54:	andeq	r7, r2, r4, asr #22
   1df58:	andeq	r7, r2, r0, asr fp
   1df5c:	andeq	r7, r2, r8, asr fp
   1df60:	andeq	r7, r2, r0, ror #22
   1df64:	andeq	r7, r2, r8, ror #22
   1df68:	andeq	r7, r2, ip, ror #22
   1df6c:	push	{r4, lr}
   1df70:	mcr	15, 0, r0, cr7, cr10, {5}
   1df74:	ldr	r4, [pc, #60]	; 1dfb8 <g_strcmp0@plt+0x725c>
   1df78:	ldr	r3, [r4, #8]
   1df7c:	mcr	15, 0, r0, cr7, cr10, {5}
   1df80:	cmp	r3, #0
   1df84:	beq	1df90 <g_strcmp0@plt+0x7234>
   1df88:	ldr	r0, [r4, #8]
   1df8c:	pop	{r4, pc}
   1df90:	add	r0, r4, #8
   1df94:	bl	1642c <g_once_init_enter@plt>
   1df98:	cmp	r0, #0
   1df9c:	beq	1df88 <g_strcmp0@plt+0x722c>
   1dfa0:	bl	1d6b0 <g_strcmp0@plt+0x6954>
   1dfa4:	mov	r1, r0
   1dfa8:	add	r0, r4, #8
   1dfac:	bl	169d8 <g_once_init_leave@plt>
   1dfb0:	ldr	r0, [r4, #8]
   1dfb4:	pop	{r4, pc}
   1dfb8:	andeq	sp, r3, ip, ror #13
   1dfbc:	push	{r4, r5, r6, r7, r8, lr}
   1dfc0:	mov	r4, r0
   1dfc4:	bl	1df6c <g_strcmp0@plt+0x7210>
   1dfc8:	ldr	r6, [pc, #92]	; 1e02c <g_strcmp0@plt+0x72d0>
   1dfcc:	mov	r1, r0
   1dfd0:	mov	r0, r4
   1dfd4:	bl	1639c <g_type_instance_get_private@plt>
   1dfd8:	mov	r2, #6
   1dfdc:	mov	r3, #3
   1dfe0:	str	r0, [r4, #12]
   1dfe4:	mov	r5, r0
   1dfe8:	str	r2, [r0]
   1dfec:	str	r3, [r0, #56]	; 0x38
   1dff0:	mov	r0, r6
   1dff4:	bl	15dc0 <g_string_new@plt>
   1dff8:	ldr	r7, [r4, #12]
   1dffc:	str	r0, [r5, #80]	; 0x50
   1e000:	mov	r0, r6
   1e004:	bl	15dc0 <g_string_new@plt>
   1e008:	ldr	r3, [r4, #12]
   1e00c:	mov	r2, #0
   1e010:	mvn	r1, #0
   1e014:	str	r0, [r7, #84]	; 0x54
   1e018:	str	r1, [r3, #60]	; 0x3c
   1e01c:	str	r2, [r3, #68]	; 0x44
   1e020:	str	r2, [r3, #72]	; 0x48
   1e024:	str	r2, [r3, #76]	; 0x4c
   1e028:	pop	{r4, r5, r6, r7, r8, pc}
   1e02c:	ldrdeq	r7, [r2], -r0
   1e030:	push	{r4, r5, r6, lr}
   1e034:	mov	r4, r0
   1e038:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e03c:	cmp	r4, #0
   1e040:	beq	1e0cc <g_strcmp0@plt+0x7370>
   1e044:	ldr	r3, [r4]
   1e048:	cmp	r3, #0
   1e04c:	beq	1e05c <g_strcmp0@plt+0x7300>
   1e050:	ldr	r3, [r3]
   1e054:	cmp	r3, r0
   1e058:	beq	1e070 <g_strcmp0@plt+0x7314>
   1e05c:	mov	r1, r0
   1e060:	mov	r0, r4
   1e064:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e068:	cmp	r0, #0
   1e06c:	beq	1e0cc <g_strcmp0@plt+0x7370>
   1e070:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e074:	mov	r1, r0
   1e078:	mov	r0, r4
   1e07c:	bl	15e14 <g_type_check_instance_cast@plt>
   1e080:	ldr	r3, [r0, #12]
   1e084:	mov	r5, r0
   1e088:	cmp	r3, #0
   1e08c:	beq	1e0e0 <g_strcmp0@plt+0x7384>
   1e090:	ldr	r0, [r3, #80]	; 0x50
   1e094:	mov	r1, #1
   1e098:	bl	168e8 <g_string_free@plt>
   1e09c:	ldr	r3, [r5, #12]
   1e0a0:	mov	r1, #1
   1e0a4:	ldr	r0, [r3, #84]	; 0x54
   1e0a8:	bl	168e8 <g_string_free@plt>
   1e0ac:	ldr	r3, [pc, #64]	; 1e0f4 <g_strcmp0@plt+0x7398>
   1e0b0:	mov	r1, #80	; 0x50
   1e0b4:	ldr	r0, [r3]
   1e0b8:	bl	16c90 <g_type_check_class_cast@plt>
   1e0bc:	ldr	r3, [r0, #24]
   1e0c0:	mov	r0, r4
   1e0c4:	pop	{r4, r5, r6, lr}
   1e0c8:	bx	r3
   1e0cc:	ldr	r2, [pc, #36]	; 1e0f8 <g_strcmp0@plt+0x739c>
   1e0d0:	ldr	r1, [pc, #36]	; 1e0fc <g_strcmp0@plt+0x73a0>
   1e0d4:	ldr	r0, [pc, #36]	; 1e100 <g_strcmp0@plt+0x73a4>
   1e0d8:	pop	{r4, r5, r6, lr}
   1e0dc:	b	15c58 <g_return_if_fail_warning@plt>
   1e0e0:	ldr	r2, [pc, #28]	; 1e104 <g_strcmp0@plt+0x73a8>
   1e0e4:	ldr	r1, [pc, #16]	; 1e0fc <g_strcmp0@plt+0x73a0>
   1e0e8:	ldr	r0, [pc, #16]	; 1e100 <g_strcmp0@plt+0x73a4>
   1e0ec:	pop	{r4, r5, r6, lr}
   1e0f0:	b	15c58 <g_return_if_fail_warning@plt>
   1e0f4:	andeq	sp, r3, ip, ror #13
   1e0f8:	andeq	r7, r2, r4, lsl #23
   1e0fc:	andeq	r7, r2, r0, lsr #20
   1e100:	andeq	r6, r2, r8, lsr #21
   1e104:	andeq	r7, r2, r0, lsr #23
   1e108:	push	{r4, r5, r6, lr}
   1e10c:	mov	r4, r0
   1e110:	mov	r5, r1
   1e114:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e118:	cmp	r4, #0
   1e11c:	beq	1e1c0 <g_strcmp0@plt+0x7464>
   1e120:	ldr	r3, [r4]
   1e124:	cmp	r3, #0
   1e128:	beq	1e138 <g_strcmp0@plt+0x73dc>
   1e12c:	ldr	r3, [r3]
   1e130:	cmp	r3, r0
   1e134:	beq	1e14c <g_strcmp0@plt+0x73f0>
   1e138:	mov	r1, r0
   1e13c:	mov	r0, r4
   1e140:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e144:	cmp	r0, #0
   1e148:	beq	1e1c0 <g_strcmp0@plt+0x7464>
   1e14c:	cmp	r5, #1
   1e150:	beq	1e240 <g_strcmp0@plt+0x74e4>
   1e154:	cmp	r5, #2
   1e158:	beq	1e1d8 <g_strcmp0@plt+0x747c>
   1e15c:	cmp	r5, #0
   1e160:	bne	1e2a8 <g_strcmp0@plt+0x754c>
   1e164:	ldr	r3, [r4, #12]
   1e168:	ldr	r2, [pc, #336]	; 1e2c0 <g_strcmp0@plt+0x7564>
   1e16c:	ldr	r1, [pc, #336]	; 1e2c4 <g_strcmp0@plt+0x7568>
   1e170:	ldr	ip, [pc, #336]	; 1e2c8 <g_strcmp0@plt+0x756c>
   1e174:	ldr	r0, [pc, #336]	; 1e2cc <g_strcmp0@plt+0x7570>
   1e178:	str	r2, [r3, #28]
   1e17c:	str	r1, [r3, #32]
   1e180:	ldr	r2, [pc, #328]	; 1e2d0 <g_strcmp0@plt+0x7574>
   1e184:	ldr	r1, [pc, #328]	; 1e2d4 <g_strcmp0@plt+0x7578>
   1e188:	str	ip, [r3, #44]	; 0x2c
   1e18c:	str	r0, [r3, #52]	; 0x34
   1e190:	str	r2, [r3, #4]
   1e194:	str	r2, [r3, #8]
   1e198:	str	r2, [r3, #12]
   1e19c:	str	r2, [r3, #16]
   1e1a0:	str	r2, [r3, #20]
   1e1a4:	str	r2, [r3, #24]
   1e1a8:	str	r2, [r3, #48]	; 0x30
   1e1ac:	str	r1, [r3, #36]	; 0x24
   1e1b0:	str	r1, [r3, #40]	; 0x28
   1e1b4:	mov	r0, #1
   1e1b8:	str	r5, [r3, #56]	; 0x38
   1e1bc:	pop	{r4, r5, r6, pc}
   1e1c0:	ldr	r2, [pc, #272]	; 1e2d8 <g_strcmp0@plt+0x757c>
   1e1c4:	ldr	r1, [pc, #272]	; 1e2dc <g_strcmp0@plt+0x7580>
   1e1c8:	ldr	r0, [pc, #272]	; 1e2e0 <g_strcmp0@plt+0x7584>
   1e1cc:	bl	15c58 <g_return_if_fail_warning@plt>
   1e1d0:	mov	r0, #0
   1e1d4:	pop	{r4, r5, r6, pc}
   1e1d8:	ldr	r3, [r4, #12]
   1e1dc:	ldr	r0, [pc, #256]	; 1e2e4 <g_strcmp0@plt+0x7588>
   1e1e0:	ldr	r1, [pc, #256]	; 1e2e8 <g_strcmp0@plt+0x758c>
   1e1e4:	ldr	ip, [pc, #256]	; 1e2ec <g_strcmp0@plt+0x7590>
   1e1e8:	ldr	r2, [pc, #256]	; 1e2f0 <g_strcmp0@plt+0x7594>
   1e1ec:	str	r0, [r3, #16]
   1e1f0:	str	r1, [r3, #20]
   1e1f4:	ldr	r0, [pc, #248]	; 1e2f4 <g_strcmp0@plt+0x7598>
   1e1f8:	ldr	r1, [pc, #248]	; 1e2f8 <g_strcmp0@plt+0x759c>
   1e1fc:	str	ip, [r3, #12]
   1e200:	str	r2, [r3, #24]
   1e204:	ldr	ip, [pc, #240]	; 1e2fc <g_strcmp0@plt+0x75a0>
   1e208:	ldr	r2, [pc, #240]	; 1e300 <g_strcmp0@plt+0x75a4>
   1e20c:	str	r0, [r3, #32]
   1e210:	str	r1, [r3, #36]	; 0x24
   1e214:	ldr	r0, [pc, #232]	; 1e304 <g_strcmp0@plt+0x75a8>
   1e218:	ldr	r1, [pc, #232]	; 1e308 <g_strcmp0@plt+0x75ac>
   1e21c:	str	ip, [r3, #28]
   1e220:	str	r2, [r3, #40]	; 0x28
   1e224:	ldr	ip, [pc, #224]	; 1e30c <g_strcmp0@plt+0x75b0>
   1e228:	ldr	r2, [pc, #224]	; 1e310 <g_strcmp0@plt+0x75b4>
   1e22c:	str	ip, [r3, #44]	; 0x2c
   1e230:	strd	r0, [r3, #48]	; 0x30
   1e234:	str	r2, [r3, #4]
   1e238:	str	r2, [r3, #8]
   1e23c:	b	1e1b4 <g_strcmp0@plt+0x7458>
   1e240:	ldr	r3, [r4, #12]
   1e244:	ldr	r0, [pc, #200]	; 1e314 <g_strcmp0@plt+0x75b8>
   1e248:	ldr	r1, [pc, #200]	; 1e318 <g_strcmp0@plt+0x75bc>
   1e24c:	ldr	r2, [pc, #200]	; 1e31c <g_strcmp0@plt+0x75c0>
   1e250:	ldr	ip, [pc, #200]	; 1e320 <g_strcmp0@plt+0x75c4>
   1e254:	str	r0, [r3, #4]
   1e258:	str	r1, [r3, #8]
   1e25c:	ldr	r0, [pc, #192]	; 1e324 <g_strcmp0@plt+0x75c8>
   1e260:	ldr	r1, [pc, #192]	; 1e328 <g_strcmp0@plt+0x75cc>
   1e264:	str	r2, [r3, #20]
   1e268:	ldr	r2, [pc, #188]	; 1e32c <g_strcmp0@plt+0x75d0>
   1e26c:	str	ip, [r3, #24]
   1e270:	str	r0, [r3, #28]
   1e274:	ldr	ip, [pc, #84]	; 1e2d0 <g_strcmp0@plt+0x7574>
   1e278:	ldr	r0, [pc, #176]	; 1e330 <g_strcmp0@plt+0x75d4>
   1e27c:	str	r1, [r3, #32]
   1e280:	str	r2, [r3, #44]	; 0x2c
   1e284:	ldr	r1, [pc, #168]	; 1e334 <g_strcmp0@plt+0x75d8>
   1e288:	ldr	r2, [pc, #168]	; 1e338 <g_strcmp0@plt+0x75dc>
   1e28c:	str	ip, [r3, #48]	; 0x30
   1e290:	str	r0, [r3, #52]	; 0x34
   1e294:	str	r1, [r3, #12]
   1e298:	str	r1, [r3, #36]	; 0x24
   1e29c:	str	r2, [r3, #16]
   1e2a0:	str	r2, [r3, #40]	; 0x28
   1e2a4:	b	1e1b4 <g_strcmp0@plt+0x7458>
   1e2a8:	ldr	r2, [pc, #140]	; 1e33c <g_strcmp0@plt+0x75e0>
   1e2ac:	mov	r1, #16
   1e2b0:	ldr	r0, [pc, #40]	; 1e2e0 <g_strcmp0@plt+0x7584>
   1e2b4:	bl	15ebc <g_log@plt>
   1e2b8:	mov	r0, #0
   1e2bc:	pop	{r4, r5, r6, pc}
   1e2c0:			; <UNDEFINED> instruction: 0x00027cb8
   1e2c4:			; <UNDEFINED> instruction: 0x00027cbc
   1e2c8:	andeq	r7, r2, r4, asr #25
   1e2cc:	andeq	r7, r2, r8, asr #25
   1e2d0:	ldrdeq	r7, [r2], -r0
   1e2d4:	andeq	r7, r2, r0, asr #25
   1e2d8:			; <UNDEFINED> instruction: 0x00027bb4
   1e2dc:	andeq	r7, r2, r8, lsr sl
   1e2e0:	andeq	r6, r2, r8, lsr #21
   1e2e4:	andeq	r7, r2, r4, ror #24
   1e2e8:	andeq	r7, r2, r0, ror ip
   1e2ec:	andeq	r7, r2, r8, asr ip
   1e2f0:	andeq	r7, r2, r8, ror ip
   1e2f4:	andeq	r7, r2, r8, lsl #25
   1e2f8:	muleq	r2, r0, ip
   1e2fc:	andeq	r7, r2, r0, lsl #25
   1e300:	muleq	r2, r8, ip
   1e304:	andeq	r7, r2, r8, lsr #25
   1e308:			; <UNDEFINED> instruction: 0x00027cb0
   1e30c:	andeq	r7, r2, r0, lsr #25
   1e310:	andeq	r7, r2, r0, asr ip
   1e314:	andeq	r7, r2, ip, asr #23
   1e318:	ldrdeq	r7, [r2], -r0
   1e31c:	andeq	r7, r2, r4, ror #23
   1e320:	andeq	r7, r2, ip, ror #23
   1e324:	strdeq	r7, [r2], -r4
   1e328:	strdeq	r7, [r2], -ip
   1e32c:	andeq	r7, r2, r4, lsl #24
   1e330:	andeq	r7, r2, ip, lsl #24
   1e334:	ldrdeq	r7, [r2], -r8
   1e338:	ldrdeq	r7, [r2], -ip
   1e33c:	ldrdeq	r7, [r2], -r4
   1e340:	push	{r4, r5, r6, lr}
   1e344:	mov	r4, r0
   1e348:	mov	r5, r1
   1e34c:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e350:	cmp	r4, #0
   1e354:	beq	1e394 <g_strcmp0@plt+0x7638>
   1e358:	ldr	r3, [r4]
   1e35c:	cmp	r3, #0
   1e360:	beq	1e370 <g_strcmp0@plt+0x7614>
   1e364:	ldr	r3, [r3]
   1e368:	cmp	r3, r0
   1e36c:	beq	1e384 <g_strcmp0@plt+0x7628>
   1e370:	mov	r1, r0
   1e374:	mov	r0, r4
   1e378:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e37c:	cmp	r0, #0
   1e380:	beq	1e394 <g_strcmp0@plt+0x7638>
   1e384:	ldr	r3, [r4, #12]
   1e388:	mov	r0, #1
   1e38c:	str	r5, [r3, #60]	; 0x3c
   1e390:	pop	{r4, r5, r6, pc}
   1e394:	ldr	r2, [pc, #16]	; 1e3ac <g_strcmp0@plt+0x7650>
   1e398:	ldr	r1, [pc, #16]	; 1e3b0 <g_strcmp0@plt+0x7654>
   1e39c:	ldr	r0, [pc, #16]	; 1e3b4 <g_strcmp0@plt+0x7658>
   1e3a0:	bl	15c58 <g_return_if_fail_warning@plt>
   1e3a4:	mov	r0, #0
   1e3a8:	pop	{r4, r5, r6, pc}
   1e3ac:			; <UNDEFINED> instruction: 0x00027bb4
   1e3b0:	andeq	r7, r2, r0, asr sl
   1e3b4:	andeq	r6, r2, r8, lsr #21
   1e3b8:	push	{r4, r5, r6, lr}
   1e3bc:	mov	r4, r0
   1e3c0:	mov	r5, r1
   1e3c4:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e3c8:	cmp	r4, #0
   1e3cc:	beq	1e40c <g_strcmp0@plt+0x76b0>
   1e3d0:	ldr	r3, [r4]
   1e3d4:	cmp	r3, #0
   1e3d8:	beq	1e3e8 <g_strcmp0@plt+0x768c>
   1e3dc:	ldr	r3, [r3]
   1e3e0:	cmp	r3, r0
   1e3e4:	beq	1e3fc <g_strcmp0@plt+0x76a0>
   1e3e8:	mov	r1, r0
   1e3ec:	mov	r0, r4
   1e3f0:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e3f4:	cmp	r0, #0
   1e3f8:	beq	1e40c <g_strcmp0@plt+0x76b0>
   1e3fc:	ldr	r3, [r4, #12]
   1e400:	mov	r0, #1
   1e404:	str	r5, [r3, #68]	; 0x44
   1e408:	pop	{r4, r5, r6, pc}
   1e40c:	ldr	r2, [pc, #16]	; 1e424 <g_strcmp0@plt+0x76c8>
   1e410:	ldr	r1, [pc, #16]	; 1e428 <g_strcmp0@plt+0x76cc>
   1e414:	ldr	r0, [pc, #16]	; 1e42c <g_strcmp0@plt+0x76d0>
   1e418:	bl	15c58 <g_return_if_fail_warning@plt>
   1e41c:	mov	r0, #0
   1e420:	pop	{r4, r5, r6, pc}
   1e424:			; <UNDEFINED> instruction: 0x00027bb4
   1e428:	andeq	r7, r2, ip, ror #20
   1e42c:	andeq	r6, r2, r8, lsr #21
   1e430:	push	{r4, r5, r6, lr}
   1e434:	mov	r4, r0
   1e438:	mov	r5, r1
   1e43c:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e440:	cmp	r4, #0
   1e444:	beq	1e484 <g_strcmp0@plt+0x7728>
   1e448:	ldr	r3, [r4]
   1e44c:	cmp	r3, #0
   1e450:	beq	1e460 <g_strcmp0@plt+0x7704>
   1e454:	ldr	r3, [r3]
   1e458:	cmp	r3, r0
   1e45c:	beq	1e474 <g_strcmp0@plt+0x7718>
   1e460:	mov	r1, r0
   1e464:	mov	r0, r4
   1e468:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e46c:	cmp	r0, #0
   1e470:	beq	1e484 <g_strcmp0@plt+0x7728>
   1e474:	ldr	r3, [r4, #12]
   1e478:	mov	r0, #1
   1e47c:	str	r5, [r3, #72]	; 0x48
   1e480:	pop	{r4, r5, r6, pc}
   1e484:	ldr	r2, [pc, #16]	; 1e49c <g_strcmp0@plt+0x7740>
   1e488:	ldr	r1, [pc, #16]	; 1e4a0 <g_strcmp0@plt+0x7744>
   1e48c:	ldr	r0, [pc, #16]	; 1e4a4 <g_strcmp0@plt+0x7748>
   1e490:	bl	15c58 <g_return_if_fail_warning@plt>
   1e494:	mov	r0, #0
   1e498:	pop	{r4, r5, r6, pc}
   1e49c:			; <UNDEFINED> instruction: 0x00027bb4
   1e4a0:	andeq	r7, r2, ip, lsl #21
   1e4a4:	andeq	r6, r2, r8, lsr #21
   1e4a8:	push	{r4, r5, r6, lr}
   1e4ac:	mov	r4, r0
   1e4b0:	mov	r5, r1
   1e4b4:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e4b8:	cmp	r4, #0
   1e4bc:	beq	1e4fc <g_strcmp0@plt+0x77a0>
   1e4c0:	ldr	r3, [r4]
   1e4c4:	cmp	r3, #0
   1e4c8:	beq	1e4d8 <g_strcmp0@plt+0x777c>
   1e4cc:	ldr	r3, [r3]
   1e4d0:	cmp	r3, r0
   1e4d4:	beq	1e4ec <g_strcmp0@plt+0x7790>
   1e4d8:	mov	r1, r0
   1e4dc:	mov	r0, r4
   1e4e0:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e4e4:	cmp	r0, #0
   1e4e8:	beq	1e4fc <g_strcmp0@plt+0x77a0>
   1e4ec:	ldr	r3, [r4, #12]
   1e4f0:	mov	r0, #1
   1e4f4:	str	r5, [r3, #76]	; 0x4c
   1e4f8:	pop	{r4, r5, r6, pc}
   1e4fc:	ldr	r2, [pc, #16]	; 1e514 <g_strcmp0@plt+0x77b8>
   1e500:	ldr	r1, [pc, #16]	; 1e518 <g_strcmp0@plt+0x77bc>
   1e504:	ldr	r0, [pc, #16]	; 1e51c <g_strcmp0@plt+0x77c0>
   1e508:	bl	15c58 <g_return_if_fail_warning@plt>
   1e50c:	mov	r0, #0
   1e510:	pop	{r4, r5, r6, pc}
   1e514:			; <UNDEFINED> instruction: 0x00027bb4
   1e518:	andeq	r7, r2, r4, lsr #21
   1e51c:	andeq	r6, r2, r8, lsr #21
   1e520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e524:	mov	r5, r0
   1e528:	sub	sp, sp, #12
   1e52c:	mov	r4, r1
   1e530:	bl	1df6c <g_strcmp0@plt+0x7210>
   1e534:	cmp	r5, #0
   1e538:	beq	1e754 <g_strcmp0@plt+0x79f8>
   1e53c:	ldr	r3, [r5]
   1e540:	cmp	r3, #0
   1e544:	beq	1e554 <g_strcmp0@plt+0x77f8>
   1e548:	ldr	r3, [r3]
   1e54c:	cmp	r3, r0
   1e550:	beq	1e568 <g_strcmp0@plt+0x780c>
   1e554:	mov	r1, r0
   1e558:	mov	r0, r5
   1e55c:	bl	167e0 <g_type_check_instance_is_a@plt>
   1e560:	cmp	r0, #0
   1e564:	beq	1e754 <g_strcmp0@plt+0x79f8>
   1e568:	ldr	r3, [r5, #12]
   1e56c:	ldr	r3, [r3, #56]	; 0x38
   1e570:	cmp	r3, #3
   1e574:	beq	1ea6c <g_strcmp0@plt+0x7d10>
   1e578:	mov	r3, r4
   1e57c:	ldr	r2, [pc, #1432]	; 1eb1c <g_strcmp0@plt+0x7dc0>
   1e580:	mov	r1, #128	; 0x80
   1e584:	ldr	r0, [pc, #1428]	; 1eb20 <g_strcmp0@plt+0x7dc4>
   1e588:	bl	15ebc <g_log@plt>
   1e58c:	ldr	r3, [r5, #12]
   1e590:	mov	r2, #6
   1e594:	mov	r6, #0
   1e598:	str	r2, [r3]
   1e59c:	str	r6, [r3, #64]	; 0x40
   1e5a0:	ldr	r0, [r3, #80]	; 0x50
   1e5a4:	mov	r1, r6
   1e5a8:	bl	15d84 <g_string_truncate@plt>
   1e5ac:	ldr	r3, [r5, #12]
   1e5b0:	mov	r1, r6
   1e5b4:	ldr	r0, [r3, #84]	; 0x54
   1e5b8:	bl	15d84 <g_string_truncate@plt>
   1e5bc:	mov	r0, r4
   1e5c0:	mvn	r2, #0
   1e5c4:	ldr	r1, [pc, #1368]	; 1eb24 <g_strcmp0@plt+0x7dc8>
   1e5c8:	bl	162dc <g_strsplit@plt>
   1e5cc:	mov	r4, r0
   1e5d0:	str	r0, [sp, #4]
   1e5d4:	bl	16564 <g_strv_length@plt>
   1e5d8:	subs	fp, r0, #0
   1e5dc:	beq	1e69c <g_strcmp0@plt+0x7940>
   1e5e0:	ldr	sl, [pc, #1336]	; 1eb20 <g_strcmp0@plt+0x7dc4>
   1e5e4:	sub	r8, r4, #4
   1e5e8:	ldr	r4, [r8, #4]!
   1e5ec:	mov	r1, #1024	; 0x400
   1e5f0:	mov	r0, r4
   1e5f4:	bl	1d64c <g_strcmp0@plt+0x68f0>
   1e5f8:	cmp	r0, #0
   1e5fc:	beq	1e638 <g_strcmp0@plt+0x78dc>
   1e600:	ldrb	r3, [r4]
   1e604:	cmp	r3, #32
   1e608:	cmpne	r3, #9
   1e60c:	bne	1e7ac <g_strcmp0@plt+0x7a50>
   1e610:	sub	r0, r0, #1
   1e614:	add	r0, r0, r4
   1e618:	mov	r3, r4
   1e61c:	b	1e630 <g_strcmp0@plt+0x78d4>
   1e620:	ldrb	r2, [r3, #1]!
   1e624:	cmp	r2, #32
   1e628:	cmpne	r2, #9
   1e62c:	bne	1e7ac <g_strcmp0@plt+0x7a50>
   1e630:	cmp	r0, r3
   1e634:	bne	1e620 <g_strcmp0@plt+0x78c4>
   1e638:	mov	r3, r4
   1e63c:	ldr	r2, [pc, #1252]	; 1eb28 <g_strcmp0@plt+0x7dcc>
   1e640:	mov	r1, #128	; 0x80
   1e644:	mov	r0, sl
   1e648:	bl	15ebc <g_log@plt>
   1e64c:	ldr	r3, [r5, #12]
   1e650:	ldr	r2, [r3]
   1e654:	cmp	r2, #6
   1e658:	beq	1e67c <g_strcmp0@plt+0x7920>
   1e65c:	mov	r0, r5
   1e660:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1e664:	ldr	r3, [r5, #12]
   1e668:	ldr	r2, [r3]
   1e66c:	cmp	r2, #2
   1e670:	moveq	r2, #0
   1e674:	streq	r2, [r3]
   1e678:	beq	1e79c <g_strcmp0@plt+0x7a40>
   1e67c:	ldr	r1, [r3, #64]	; 0x40
   1e680:	ldr	r2, [r3, #60]	; 0x3c
   1e684:	cmp	r1, r2
   1e688:	bcc	1e950 <g_strcmp0@plt+0x7bf4>
   1e68c:	mov	r2, #0
   1e690:	str	r2, [r3]
   1e694:	mov	r2, #6
   1e698:	str	r2, [r3]
   1e69c:	ldr	r0, [sp, #4]
   1e6a0:	bl	1654c <g_strfreev@plt>
   1e6a4:	ldr	r3, [r5, #12]
   1e6a8:	ldr	r2, [r3]
   1e6ac:	cmp	r2, #6
   1e6b0:	beq	1e6c0 <g_strcmp0@plt+0x7964>
   1e6b4:	mov	r0, r5
   1e6b8:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1e6bc:	ldr	r3, [r5, #12]
   1e6c0:	ldr	r6, [pc, #1116]	; 1eb24 <g_strcmp0@plt+0x7dc8>
   1e6c4:	b	1e6e4 <g_strcmp0@plt+0x7988>
   1e6c8:	ldr	r3, [r5, #12]
   1e6cc:	ldr	r3, [r3, #84]	; 0x54
   1e6d0:	mov	r0, r3
   1e6d4:	ldr	r1, [r3, #4]
   1e6d8:	sub	r1, r1, #1
   1e6dc:	bl	15b5c <g_string_set_size@plt>
   1e6e0:	ldr	r3, [r5, #12]
   1e6e4:	ldr	r3, [r3, #84]	; 0x54
   1e6e8:	mov	r1, r6
   1e6ec:	ldr	r0, [r3]
   1e6f0:	bl	16b70 <g_str_has_suffix@plt>
   1e6f4:	cmp	r0, #0
   1e6f8:	bne	1e6c8 <g_strcmp0@plt+0x796c>
   1e6fc:	ldr	r3, [r5, #12]
   1e700:	mov	r4, r0
   1e704:	ldr	r3, [r3, #84]	; 0x54
   1e708:	ldr	r0, [r3]
   1e70c:	bl	160f0 <g_strdup@plt>
   1e710:	ldr	r3, [r5, #12]
   1e714:	mov	r1, r4
   1e718:	mov	r6, r0
   1e71c:	ldr	r0, [r3, #80]	; 0x50
   1e720:	bl	15d84 <g_string_truncate@plt>
   1e724:	ldr	r3, [r5, #12]
   1e728:	mov	r1, r4
   1e72c:	ldr	r0, [r3, #84]	; 0x54
   1e730:	bl	15d84 <g_string_truncate@plt>
   1e734:	mov	r3, r6
   1e738:	ldr	r2, [pc, #1004]	; 1eb2c <g_strcmp0@plt+0x7dd0>
   1e73c:	mov	r1, #128	; 0x80
   1e740:	ldr	r0, [pc, #984]	; 1eb20 <g_strcmp0@plt+0x7dc4>
   1e744:	bl	15ebc <g_log@plt>
   1e748:	mov	r0, r6
   1e74c:	add	sp, sp, #12
   1e750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e754:	ldr	r2, [pc, #980]	; 1eb30 <g_strcmp0@plt+0x7dd4>
   1e758:	ldr	r1, [pc, #980]	; 1eb34 <g_strcmp0@plt+0x7dd8>
   1e75c:	ldr	r0, [pc, #956]	; 1eb20 <g_strcmp0@plt+0x7dc4>
   1e760:	bl	15c58 <g_return_if_fail_warning@plt>
   1e764:	mov	r6, #0
   1e768:	mov	r0, r6
   1e76c:	add	sp, sp, #12
   1e770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e774:	mov	r3, r4
   1e778:	ldr	r2, [pc, #952]	; 1eb38 <g_strcmp0@plt+0x7ddc>
   1e77c:	mov	r1, #128	; 0x80
   1e780:	mov	r0, sl
   1e784:	bl	15ebc <g_log@plt>
   1e788:	ldr	r3, [r5, #12]
   1e78c:	ldr	r2, [r3]
   1e790:	cmp	r2, #3
   1e794:	moveq	r2, #5
   1e798:	streq	r2, [r3]
   1e79c:	add	r6, r6, #1
   1e7a0:	cmp	fp, r6
   1e7a4:	bne	1e5e8 <g_strcmp0@plt+0x788c>
   1e7a8:	b	1e69c <g_strcmp0@plt+0x7940>
   1e7ac:	ldr	r1, [pc, #904]	; 1eb3c <g_strcmp0@plt+0x7de0>
   1e7b0:	mov	r0, r4
   1e7b4:	bl	163c0 <g_str_has_prefix@plt>
   1e7b8:	cmp	r0, #0
   1e7bc:	bne	1e918 <g_strcmp0@plt+0x7bbc>
   1e7c0:	ldr	r1, [pc, #888]	; 1eb40 <g_strcmp0@plt+0x7de4>
   1e7c4:	mov	r0, r4
   1e7c8:	bl	163c0 <g_str_has_prefix@plt>
   1e7cc:	subs	r7, r0, #0
   1e7d0:	bne	1e774 <g_strcmp0@plt+0x7a18>
   1e7d4:	mov	r1, #1024	; 0x400
   1e7d8:	mov	r0, r4
   1e7dc:	bl	1d64c <g_strcmp0@plt+0x68f0>
   1e7e0:	subs	r9, r0, #0
   1e7e4:	beq	1e8a8 <g_strcmp0@plt+0x7b4c>
   1e7e8:	mov	r0, r4
   1e7ec:	bl	160f0 <g_strdup@plt>
   1e7f0:	mov	r2, #126	; 0x7e
   1e7f4:	ldr	r1, [pc, #840]	; 1eb44 <g_strcmp0@plt+0x7de8>
   1e7f8:	str	r0, [sp]
   1e7fc:	bl	1663c <g_strcanon@plt>
   1e800:	ldr	r3, [sp]
   1e804:	ldrb	r2, [r3]
   1e808:	cmp	r2, #126	; 0x7e
   1e80c:	beq	1e8a4 <g_strcmp0@plt+0x7b48>
   1e810:	sub	r9, r9, #1
   1e814:	add	r9, r9, r3
   1e818:	mov	r1, r3
   1e81c:	b	1e82c <g_strcmp0@plt+0x7ad0>
   1e820:	ldrb	r2, [r1, #1]!
   1e824:	cmp	r2, #126	; 0x7e
   1e828:	beq	1e8a4 <g_strcmp0@plt+0x7b48>
   1e82c:	cmp	r2, #32
   1e830:	addne	r7, r7, #1
   1e834:	cmp	r9, r1
   1e838:	bne	1e820 <g_strcmp0@plt+0x7ac4>
   1e83c:	cmp	r7, #2
   1e840:	mov	r0, r3
   1e844:	bls	1e8a8 <g_strcmp0@plt+0x7b4c>
   1e848:	bl	16660 <g_free@plt>
   1e84c:	mov	r3, r4
   1e850:	ldr	r2, [pc, #752]	; 1eb48 <g_strcmp0@plt+0x7dec>
   1e854:	mov	r1, #128	; 0x80
   1e858:	mov	r0, sl
   1e85c:	bl	15ebc <g_log@plt>
   1e860:	ldr	r3, [r5, #12]
   1e864:	ldr	r2, [r3]
   1e868:	cmp	r2, #6
   1e86c:	beq	1e87c <g_strcmp0@plt+0x7b20>
   1e870:	mov	r0, r5
   1e874:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1e878:	ldr	r3, [r5, #12]
   1e87c:	ldr	r0, [r3, #64]	; 0x40
   1e880:	ldr	r1, [r3, #60]	; 0x3c
   1e884:	mov	r2, #1
   1e888:	cmp	r0, r1
   1e88c:	str	r2, [r3]
   1e890:	bcs	1e694 <g_strcmp0@plt+0x7938>
   1e894:	ldr	r1, [r3, #52]	; 0x34
   1e898:	mov	r0, r5
   1e89c:	bl	1d894 <g_strcmp0@plt+0x6b38>
   1e8a0:	b	1e968 <g_strcmp0@plt+0x7c0c>
   1e8a4:	mov	r0, r3
   1e8a8:	bl	16660 <g_free@plt>
   1e8ac:	ldr	r1, [pc, #664]	; 1eb4c <g_strcmp0@plt+0x7df0>
   1e8b0:	mov	r0, r4
   1e8b4:	bl	163c0 <g_str_has_prefix@plt>
   1e8b8:	cmp	r0, #0
   1e8bc:	beq	1e978 <g_strcmp0@plt+0x7c1c>
   1e8c0:	mov	r3, r4
   1e8c4:	ldr	r2, [pc, #644]	; 1eb50 <g_strcmp0@plt+0x7df4>
   1e8c8:	mov	r1, #128	; 0x80
   1e8cc:	mov	r0, sl
   1e8d0:	bl	15ebc <g_log@plt>
   1e8d4:	ldr	r3, [r5, #12]
   1e8d8:	ldr	r2, [r3]
   1e8dc:	cmp	r2, #6
   1e8e0:	beq	1e8f0 <g_strcmp0@plt+0x7b94>
   1e8e4:	mov	r0, r5
   1e8e8:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1e8ec:	ldr	r3, [r5, #12]
   1e8f0:	ldr	r0, [r3, #64]	; 0x40
   1e8f4:	ldr	r1, [r3, #60]	; 0x3c
   1e8f8:	mov	r2, #2
   1e8fc:	cmp	r0, r1
   1e900:	str	r2, [r3]
   1e904:	bcs	1e694 <g_strcmp0@plt+0x7938>
   1e908:	add	r1, r4, #2
   1e90c:	mov	r0, r5
   1e910:	bl	1d894 <g_strcmp0@plt+0x6b38>
   1e914:	b	1e968 <g_strcmp0@plt+0x7c0c>
   1e918:	mov	r3, r4
   1e91c:	ldr	r2, [pc, #560]	; 1eb54 <g_strcmp0@plt+0x7df8>
   1e920:	mov	r1, #128	; 0x80
   1e924:	mov	r0, sl
   1e928:	bl	15ebc <g_log@plt>
   1e92c:	ldr	r3, [r5, #12]
   1e930:	add	r6, r6, #1
   1e934:	ldr	r2, [r3]
   1e938:	cmp	r2, #3
   1e93c:	moveq	r2, #4
   1e940:	streq	r2, [r3]
   1e944:	cmp	fp, r6
   1e948:	bne	1e5e8 <g_strcmp0@plt+0x788c>
   1e94c:	b	1e69c <g_strcmp0@plt+0x7940>
   1e950:	ldr	r1, [pc, #460]	; 1eb24 <g_strcmp0@plt+0x7dc8>
   1e954:	mov	r0, r5
   1e958:	bl	1d894 <g_strcmp0@plt+0x6b38>
   1e95c:	ldr	r3, [r5, #12]
   1e960:	mov	r2, #0
   1e964:	str	r2, [r3]
   1e968:	cmp	r0, #0
   1e96c:	bne	1e79c <g_strcmp0@plt+0x7a40>
   1e970:	ldr	r3, [r5, #12]
   1e974:	b	1e694 <g_strcmp0@plt+0x7938>
   1e978:	ldr	r1, [pc, #472]	; 1eb58 <g_strcmp0@plt+0x7dfc>
   1e97c:	mov	r0, r4
   1e980:	bl	163c0 <g_str_has_prefix@plt>
   1e984:	cmp	r0, #0
   1e988:	bne	1e8c0 <g_strcmp0@plt+0x7b64>
   1e98c:	ldr	r1, [pc, #456]	; 1eb5c <g_strcmp0@plt+0x7e00>
   1e990:	mov	r0, r4
   1e994:	bl	163c0 <g_str_has_prefix@plt>
   1e998:	cmp	r0, #0
   1e99c:	bne	1e8c0 <g_strcmp0@plt+0x7b64>
   1e9a0:	ldr	r1, [pc, #440]	; 1eb60 <g_strcmp0@plt+0x7e04>
   1e9a4:	mov	r0, r4
   1e9a8:	bl	163c0 <g_str_has_prefix@plt>
   1e9ac:	cmp	r0, #0
   1e9b0:	bne	1e8c0 <g_strcmp0@plt+0x7b64>
   1e9b4:	ldr	r1, [pc, #424]	; 1eb64 <g_strcmp0@plt+0x7e08>
   1e9b8:	mov	r0, r4
   1e9bc:	bl	163c0 <g_str_has_prefix@plt>
   1e9c0:	cmp	r0, #0
   1e9c4:	bne	1e8c0 <g_strcmp0@plt+0x7b64>
   1e9c8:	ldr	r1, [pc, #408]	; 1eb68 <g_strcmp0@plt+0x7e0c>
   1e9cc:	mov	r0, r4
   1e9d0:	bl	163c0 <g_str_has_prefix@plt>
   1e9d4:	cmp	r0, #0
   1e9d8:	bne	1e8c0 <g_strcmp0@plt+0x7b64>
   1e9dc:	ldr	r1, [pc, #392]	; 1eb6c <g_strcmp0@plt+0x7e10>
   1e9e0:	mov	r0, r4
   1e9e4:	bl	163c0 <g_str_has_prefix@plt>
   1e9e8:	cmp	r0, #0
   1e9ec:	bne	1ea8c <g_strcmp0@plt+0x7d30>
   1e9f0:	ldr	r1, [pc, #376]	; 1eb70 <g_strcmp0@plt+0x7e14>
   1e9f4:	mov	r0, r4
   1e9f8:	bl	163c0 <g_str_has_prefix@plt>
   1e9fc:	cmp	r0, #0
   1ea00:	bne	1ead4 <g_strcmp0@plt+0x7d78>
   1ea04:	ldr	r2, [r5, #12]
   1ea08:	ldr	r3, [r2]
   1ea0c:	cmp	r3, #6
   1ea10:	cmpne	r3, #0
   1ea14:	bne	1ea34 <g_strcmp0@plt+0x7cd8>
   1ea18:	cmp	r3, #6
   1ea1c:	beq	1ea2c <g_strcmp0@plt+0x7cd0>
   1ea20:	mov	r0, r5
   1ea24:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1ea28:	ldr	r2, [r5, #12]
   1ea2c:	mov	r3, #3
   1ea30:	str	r3, [r2]
   1ea34:	mov	r3, r4
   1ea38:	ldr	r2, [pc, #308]	; 1eb74 <g_strcmp0@plt+0x7e18>
   1ea3c:	mov	r1, #128	; 0x80
   1ea40:	mov	r0, sl
   1ea44:	bl	15ebc <g_log@plt>
   1ea48:	ldr	r3, [r5, #12]
   1ea4c:	ldr	r1, [r3, #64]	; 0x40
   1ea50:	ldr	r2, [r3, #60]	; 0x3c
   1ea54:	cmp	r1, r2
   1ea58:	bcs	1e694 <g_strcmp0@plt+0x7938>
   1ea5c:	mov	r1, r4
   1ea60:	mov	r0, r5
   1ea64:	bl	1d894 <g_strcmp0@plt+0x6b38>
   1ea68:	b	1e968 <g_strcmp0@plt+0x7c0c>
   1ea6c:	ldr	r2, [pc, #260]	; 1eb78 <g_strcmp0@plt+0x7e1c>
   1ea70:	ldr	r1, [pc, #188]	; 1eb34 <g_strcmp0@plt+0x7dd8>
   1ea74:	ldr	r0, [pc, #164]	; 1eb20 <g_strcmp0@plt+0x7dc4>
   1ea78:	bl	15c58 <g_return_if_fail_warning@plt>
   1ea7c:	mov	r6, #0
   1ea80:	mov	r0, r6
   1ea84:	add	sp, sp, #12
   1ea88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea8c:	mov	r3, r4
   1ea90:	ldr	r2, [pc, #228]	; 1eb7c <g_strcmp0@plt+0x7e20>
   1ea94:	mov	r1, #128	; 0x80
   1ea98:	mov	r0, sl
   1ea9c:	bl	15ebc <g_log@plt>
   1eaa0:	ldr	r3, [r5, #12]
   1eaa4:	ldr	r2, [r3]
   1eaa8:	cmp	r2, #6
   1eaac:	beq	1eabc <g_strcmp0@plt+0x7d60>
   1eab0:	mov	r0, r5
   1eab4:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1eab8:	ldr	r3, [r5, #12]
   1eabc:	mov	r2, #4
   1eac0:	add	r1, r4, #2
   1eac4:	str	r2, [r3]
   1eac8:	mov	r0, r5
   1eacc:	bl	1d8d8 <g_strcmp0@plt+0x6b7c>
   1ead0:	b	1e968 <g_strcmp0@plt+0x7c0c>
   1ead4:	mov	r3, r4
   1ead8:	ldr	r2, [pc, #160]	; 1eb80 <g_strcmp0@plt+0x7e24>
   1eadc:	mov	r1, #128	; 0x80
   1eae0:	mov	r0, sl
   1eae4:	bl	15ebc <g_log@plt>
   1eae8:	ldr	r3, [r5, #12]
   1eaec:	ldr	r2, [r3]
   1eaf0:	cmp	r2, #6
   1eaf4:	beq	1eb04 <g_strcmp0@plt+0x7da8>
   1eaf8:	mov	r0, r5
   1eafc:	bl	1da88 <g_strcmp0@plt+0x6d2c>
   1eb00:	ldr	r3, [r5, #12]
   1eb04:	mov	r2, #5
   1eb08:	add	r1, r4, #3
   1eb0c:	str	r2, [r3]
   1eb10:	mov	r0, r5
   1eb14:	bl	1d8d8 <g_strcmp0@plt+0x6b7c>
   1eb18:	b	1e968 <g_strcmp0@plt+0x7c0c>
   1eb1c:	andeq	r7, r2, ip, lsl sp
   1eb20:	andeq	r6, r2, r8, lsr #21
   1eb24:	andeq	r7, r2, r8, lsl #28
   1eb28:	andeq	r7, r2, r8, lsr #26
   1eb2c:	ldrdeq	r7, [r2], -r0
   1eb30:			; <UNDEFINED> instruction: 0x00027bb4
   1eb34:	andeq	r7, r2, r0, asr #21
   1eb38:	andeq	r7, r2, ip, asr #26
   1eb3c:	ldrdeq	r7, [r2], -ip
   1eb40:	andeq	r7, r2, r8, asr #26
   1eb44:	andeq	r7, r2, r0, ror #26
   1eb48:	andeq	r7, r2, r8, ror #26
   1eb4c:	andeq	r7, r2, r4, ror sp
   1eb50:	andeq	r7, r2, ip, lsl #27
   1eb54:	andeq	r7, r2, r4, lsr sp
   1eb58:	andeq	r7, r2, r4, asr #25
   1eb5c:	andeq	r7, r2, r8, ror sp
   1eb60:	andeq	r7, r2, ip, ror sp
   1eb64:	andeq	r7, r2, r0, lsl #27
   1eb68:	andeq	r7, r2, r4, lsl #27
   1eb6c:	andeq	r7, r2, r8, lsl #27
   1eb70:	andeq	r7, r2, ip, lsr #27
   1eb74:	andeq	r7, r2, r0, asr #27
   1eb78:	andeq	r7, r2, r8, ror #25
   1eb7c:	muleq	r2, ip, sp
   1eb80:			; <UNDEFINED> instruction: 0x00027db0
   1eb84:	push	{r4, lr}
   1eb88:	bl	1df6c <g_strcmp0@plt+0x7210>
   1eb8c:	mov	r1, #0
   1eb90:	bl	15b68 <g_object_new@plt>
   1eb94:	mov	r4, r0
   1eb98:	bl	1df6c <g_strcmp0@plt+0x7210>
   1eb9c:	mov	r1, r0
   1eba0:	mov	r0, r4
   1eba4:	pop	{r4, lr}
   1eba8:	b	15e14 <g_type_check_instance_cast@plt>
   1ebac:	bx	lr
   1ebb0:	push	{r4, r5, r6, r7, r8, lr}
   1ebb4:	sub	sp, sp, #272	; 0x110
   1ebb8:	ldr	r7, [pc, #312]	; 1ecf8 <g_strcmp0@plt+0x7f9c>
   1ebbc:	mov	r4, r0
   1ebc0:	add	r0, sp, #8
   1ebc4:	ldr	r3, [r7]
   1ebc8:	mov	r6, r1
   1ebcc:	mov	r8, r2
   1ebd0:	str	r3, [sp, #268]	; 0x10c
   1ebd4:	bl	16ba0 <time@plt>
   1ebd8:	add	r0, sp, #8
   1ebdc:	bl	163d8 <localtime@plt>
   1ebe0:	ldr	r2, [pc, #276]	; 1ecfc <g_strcmp0@plt+0x7fa0>
   1ebe4:	mov	r1, #254	; 0xfe
   1ebe8:	mov	r3, r0
   1ebec:	add	r0, sp, #12
   1ebf0:	bl	16108 <strftime@plt>
   1ebf4:	ldr	r3, [pc, #260]	; 1ed00 <g_strcmp0@plt+0x7fa4>
   1ebf8:	ldr	r3, [r3]
   1ebfc:	cmp	r3, #0
   1ec00:	bne	1ec38 <g_strcmp0@plt+0x7edc>
   1ec04:	cmp	r6, #128	; 0x80
   1ec08:	mov	r3, r8
   1ec0c:	mov	r2, r4
   1ec10:	add	r1, sp, #12
   1ec14:	ldreq	r0, [pc, #232]	; 1ed04 <g_strcmp0@plt+0x7fa8>
   1ec18:	ldrne	r0, [pc, #232]	; 1ed08 <g_strcmp0@plt+0x7fac>
   1ec1c:	bl	167ec <g_print@plt>
   1ec20:	ldr	r2, [sp, #268]	; 0x10c
   1ec24:	ldr	r3, [r7]
   1ec28:	cmp	r2, r3
   1ec2c:	bne	1ecf4 <g_strcmp0@plt+0x7f98>
   1ec30:	add	sp, sp, #272	; 0x110
   1ec34:	pop	{r4, r5, r6, r7, r8, pc}
   1ec38:	add	r3, sp, #12
   1ec3c:	mov	r2, #32
   1ec40:	mov	r1, #27
   1ec44:	ldr	r0, [pc, #192]	; 1ed0c <g_strcmp0@plt+0x7fb0>
   1ec48:	bl	167ec <g_print@plt>
   1ec4c:	ldr	r1, [pc, #188]	; 1ed10 <g_strcmp0@plt+0x7fb4>
   1ec50:	mov	r0, r4
   1ec54:	bl	16d5c <g_strcmp0@plt>
   1ec58:	cmp	r0, #0
   1ec5c:	movne	r3, #0
   1ec60:	movne	r1, #27
   1ec64:	moveq	r1, #27
   1ec68:	streq	r0, [sp, #4]
   1ec6c:	moveq	r3, r4
   1ec70:	stmne	sp, {r1, r3}
   1ec74:	streq	r1, [sp]
   1ec78:	movne	r3, r4
   1ec7c:	moveq	r2, #34	; 0x22
   1ec80:	movne	r2, #36	; 0x24
   1ec84:	ldr	r0, [pc, #136]	; 1ed14 <g_strcmp0@plt+0x7fb8>
   1ec88:	bl	167ec <g_print@plt>
   1ec8c:	mov	r0, r4
   1ec90:	bl	1699c <strlen@plt>
   1ec94:	cmp	r0, #19
   1ec98:	mov	r4, r0
   1ec9c:	bhi	1ecb8 <g_strcmp0@plt+0x7f5c>
   1eca0:	ldr	r5, [pc, #112]	; 1ed18 <g_strcmp0@plt+0x7fbc>
   1eca4:	add	r4, r4, #1
   1eca8:	mov	r0, r5
   1ecac:	bl	167ec <g_print@plt>
   1ecb0:	cmp	r4, #20
   1ecb4:	bne	1eca4 <g_strcmp0@plt+0x7f48>
   1ecb8:	sub	r6, r6, #4
   1ecbc:	bics	r6, r6, #4
   1ecc0:	movne	r2, #0
   1ecc4:	movne	r1, #27
   1ecc8:	moveq	r1, #27
   1eccc:	stmne	sp, {r1, r2}
   1ecd0:	streq	r6, [sp, #4]
   1ecd4:	moveq	r3, r8
   1ecd8:	streq	r1, [sp]
   1ecdc:	moveq	r2, #31
   1ece0:	movne	r3, r8
   1ece4:	movne	r2, #34	; 0x22
   1ece8:	ldr	r0, [pc, #44]	; 1ed1c <g_strcmp0@plt+0x7fc0>
   1ecec:	bl	167ec <g_print@plt>
   1ecf0:	b	1ec20 <g_strcmp0@plt+0x7ec4>
   1ecf4:	bl	165a0 <__stack_chk_fail@plt>
   1ecf8:	andeq	ip, r3, r0, asr lr
   1ecfc:	andeq	r7, r2, r0, ror #27
   1ed00:	strdeq	sp, [r3], -r8
   1ed04:	andeq	r7, r2, ip, ror #27
   1ed08:	strdeq	r7, [r2], -r8
   1ed0c:	andeq	r7, r2, ip, lsl #28
   1ed10:	andeq	r6, r2, r8, lsr #21
   1ed14:	andeq	r7, r2, r8, lsl lr
   1ed18:	andeq	r7, r2, r0, lsl fp
   1ed1c:	andeq	r7, r2, r8, lsr #28
   1ed20:	push	{r4, r5, lr}
   1ed24:	sub	sp, sp, #68	; 0x44
   1ed28:	ldr	r4, [pc, #104]	; 1ed98 <g_strcmp0@plt+0x803c>
   1ed2c:	mov	r5, r0
   1ed30:	mov	r2, #52	; 0x34
   1ed34:	ldr	r3, [r4]
   1ed38:	mov	r1, #0
   1ed3c:	add	r0, sp, #8
   1ed40:	str	r3, [sp, #60]	; 0x3c
   1ed44:	bl	1612c <memset@plt>
   1ed48:	ldr	r2, [pc, #76]	; 1ed9c <g_strcmp0@plt+0x8040>
   1ed4c:	ldr	r1, [pc, #76]	; 1eda0 <g_strcmp0@plt+0x8044>
   1ed50:	ldr	ip, [pc, #76]	; 1eda4 <g_strcmp0@plt+0x8048>
   1ed54:	mov	r3, #118	; 0x76
   1ed58:	str	r2, [sp, #4]
   1ed5c:	str	r1, [sp, #20]
   1ed60:	mov	r2, #0
   1ed64:	mov	r0, r5
   1ed68:	add	r1, sp, #4
   1ed6c:	strb	r3, [sp, #8]
   1ed70:	str	ip, [sp, #24]
   1ed74:	bl	16894 <g_option_context_add_main_entries@plt>
   1ed78:	ldr	r2, [sp, #60]	; 0x3c
   1ed7c:	ldr	r3, [r4]
   1ed80:	cmp	r2, r3
   1ed84:	bne	1ed94 <g_strcmp0@plt+0x8038>
   1ed88:	mov	r0, #1
   1ed8c:	add	sp, sp, #68	; 0x44
   1ed90:	pop	{r4, r5, pc}
   1ed94:	bl	165a0 <__stack_chk_fail@plt>
   1ed98:	andeq	ip, r3, r0, asr lr
   1ed9c:	andeq	r7, r2, r8, lsr lr
   1eda0:	strdeq	sp, [r3], -ip
   1eda4:	andeq	r7, r2, r0, asr #28
   1eda8:	ldr	r3, [pc, #60]	; 1edec <g_strcmp0@plt+0x8090>
   1edac:	ldr	r3, [r3, #4]
   1edb0:	cmp	r3, #0
   1edb4:	beq	1ede0 <g_strcmp0@plt+0x8084>
   1edb8:	push	{r4, lr}
   1edbc:	mov	r1, #12
   1edc0:	mov	r4, r0
   1edc4:	bl	169fc <g_log_set_fatal_mask@plt>
   1edc8:	mov	r0, r4
   1edcc:	mov	r3, #0
   1edd0:	ldr	r2, [pc, #24]	; 1edf0 <g_strcmp0@plt+0x8094>
   1edd4:	mov	r1, #156	; 0x9c
   1edd8:	pop	{r4, lr}
   1eddc:	b	15da8 <g_log_set_handler@plt>
   1ede0:	ldr	r2, [pc, #12]	; 1edf4 <g_strcmp0@plt+0x8098>
   1ede4:	mov	r1, #144	; 0x90
   1ede8:	b	15da8 <g_log_set_handler@plt>
   1edec:	strdeq	sp, [r3], -r8
   1edf0:			; <UNDEFINED> instruction: 0x0001ebb0
   1edf4:	andeq	lr, r1, ip, lsr #23
   1edf8:	push	{lr}		; (str lr, [sp, #-4]!)
   1edfc:	sub	sp, sp, #12
   1ee00:	ldr	r0, [pc, #88]	; 1ee60 <g_strcmp0@plt+0x8104>
   1ee04:	bl	1eda8 <g_strcmp0@plt+0x804c>
   1ee08:	ldr	r3, [pc, #84]	; 1ee64 <g_strcmp0@plt+0x8108>
   1ee0c:	ldr	r0, [r3]
   1ee10:	bl	16588 <fileno@plt>
   1ee14:	bl	16630 <isatty@plt>
   1ee18:	ldr	ip, [pc, #72]	; 1ee68 <g_strcmp0@plt+0x810c>
   1ee1c:	ldr	r1, [pc, #72]	; 1ee6c <g_strcmp0@plt+0x8110>
   1ee20:	ldr	r3, [pc, #72]	; 1ee70 <g_strcmp0@plt+0x8114>
   1ee24:	ldr	lr, [ip, #4]
   1ee28:	ldr	r2, [pc, #68]	; 1ee74 <g_strcmp0@plt+0x8118>
   1ee2c:	cmp	lr, #0
   1ee30:	moveq	r3, r1
   1ee34:	mov	r1, #128	; 0x80
   1ee38:	sub	lr, r0, #1
   1ee3c:	clz	lr, lr
   1ee40:	lsr	lr, lr, #5
   1ee44:	str	lr, [sp]
   1ee48:	ldr	r0, [pc, #16]	; 1ee60 <g_strcmp0@plt+0x8104>
   1ee4c:	str	lr, [ip]
   1ee50:	bl	15ebc <g_log@plt>
   1ee54:	mov	r0, #1
   1ee58:	add	sp, sp, #12
   1ee5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee60:	andeq	r6, r2, r8, lsr #21
   1ee64:	andeq	sp, r3, r0, ror #13
   1ee68:	strdeq	sp, [r3], -r8
   1ee6c:	andeq	r7, r2, r4, ror lr
   1ee70:	andeq	r7, r2, ip, ror #28
   1ee74:	andeq	r7, r2, r0, lsl #29
   1ee78:	push	{r4, lr}
   1ee7c:	mov	r2, #5
   1ee80:	sub	sp, sp, #8
   1ee84:	ldr	r1, [pc, #76]	; 1eed8 <g_strcmp0@plt+0x817c>
   1ee88:	mov	r0, #0
   1ee8c:	bl	1666c <dcgettext@plt>
   1ee90:	mov	r2, #5
   1ee94:	ldr	r1, [pc, #64]	; 1eedc <g_strcmp0@plt+0x8180>
   1ee98:	mov	r4, r0
   1ee9c:	mov	r0, #0
   1eea0:	bl	1666c <dcgettext@plt>
   1eea4:	mov	r3, #0
   1eea8:	mov	r1, r4
   1eeac:	str	r3, [sp]
   1eeb0:	mov	r2, r0
   1eeb4:	ldr	r0, [pc, #36]	; 1eee0 <g_strcmp0@plt+0x8184>
   1eeb8:	bl	15e8c <g_option_group_new@plt>
   1eebc:	ldr	r2, [pc, #32]	; 1eee4 <g_strcmp0@plt+0x8188>
   1eec0:	ldr	r1, [pc, #32]	; 1eee8 <g_strcmp0@plt+0x818c>
   1eec4:	mov	r4, r0
   1eec8:	bl	160a8 <g_option_group_set_parse_hooks@plt>
   1eecc:	mov	r0, r4
   1eed0:	add	sp, sp, #8
   1eed4:	pop	{r4, pc}
   1eed8:	andeq	r7, r2, r8, lsr #29
   1eedc:			; <UNDEFINED> instruction: 0x00027ebc
   1eee0:	ldrdeq	r7, [r2], -r4
   1eee4:	strdeq	lr, [r1], -r8
   1eee8:	andeq	lr, r1, r0, lsr #26
   1eeec:	cmp	r0, #3
   1eef0:	ldrls	pc, [pc, r0, lsl #2]
   1eef4:	b	1ef48 <g_strcmp0@plt+0x81ec>
   1eef8:	andeq	lr, r1, r8, lsr pc
   1eefc:	andeq	lr, r1, r8, lsr #30
   1ef00:	andeq	lr, r1, r8, lsl pc
   1ef04:	andeq	lr, r1, r8, lsl #30
   1ef08:	mov	r2, #5
   1ef0c:	ldr	r1, [pc, #80]	; 1ef64 <g_strcmp0@plt+0x8208>
   1ef10:	mov	r0, #0
   1ef14:	b	1666c <dcgettext@plt>
   1ef18:	mov	r2, #5
   1ef1c:	ldr	r1, [pc, #68]	; 1ef68 <g_strcmp0@plt+0x820c>
   1ef20:	mov	r0, #0
   1ef24:	b	1666c <dcgettext@plt>
   1ef28:	mov	r2, #5
   1ef2c:	ldr	r1, [pc, #56]	; 1ef6c <g_strcmp0@plt+0x8210>
   1ef30:	mov	r0, #0
   1ef34:	b	1666c <dcgettext@plt>
   1ef38:	mov	r2, #5
   1ef3c:	ldr	r1, [pc, #44]	; 1ef70 <g_strcmp0@plt+0x8214>
   1ef40:	mov	r0, #0
   1ef44:	b	1666c <dcgettext@plt>
   1ef48:	push	{r4, lr}
   1ef4c:	mov	r1, #16
   1ef50:	ldr	r2, [pc, #28]	; 1ef74 <g_strcmp0@plt+0x8218>
   1ef54:	ldr	r0, [pc, #28]	; 1ef78 <g_strcmp0@plt+0x821c>
   1ef58:	bl	15ebc <g_log@plt>
   1ef5c:	mov	r0, #0
   1ef60:	pop	{r4, pc}
   1ef64:			; <UNDEFINED> instruction: 0x000284b4
   1ef68:			; <UNDEFINED> instruction: 0x000284b0
   1ef6c:	andeq	r8, r2, ip, lsr #9
   1ef70:			; <UNDEFINED> instruction: 0x000284bc
   1ef74:	andeq	r8, r2, r4, asr #9
   1ef78:	andeq	r6, r2, r8, lsr #21
   1ef7c:	cmp	r0, #67	; 0x43
   1ef80:	ldrls	pc, [pc, r0, lsl #2]
   1ef84:	b	1f4d8 <g_strcmp0@plt+0x877c>
   1ef88:	andeq	pc, r1, r8, asr #9
   1ef8c:			; <UNDEFINED> instruction: 0x0001f4b8
   1ef90:	andeq	pc, r1, r8, lsr #9
   1ef94:	muleq	r1, r8, r4
   1ef98:	andeq	pc, r1, r8, lsl #9
   1ef9c:	andeq	pc, r1, r8, ror r4	; <UNPREDICTABLE>
   1efa0:	andeq	pc, r1, r8, ror #8
   1efa4:	andeq	pc, r1, r8, asr r4	; <UNPREDICTABLE>
   1efa8:	andeq	pc, r1, r8, asr #8
   1efac:	andeq	pc, r1, r8, lsr r4	; <UNPREDICTABLE>
   1efb0:	andeq	pc, r1, r8, lsr #8
   1efb4:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   1efb8:	andeq	pc, r1, r8, lsl #8
   1efbc:	strdeq	pc, [r1], -r8
   1efc0:	andeq	pc, r1, r8, ror #7
   1efc4:	ldrdeq	pc, [r1], -r8
   1efc8:	andeq	pc, r1, r8, asr #7
   1efcc:			; <UNDEFINED> instruction: 0x0001f3b8
   1efd0:	andeq	pc, r1, r8, lsr #7
   1efd4:	muleq	r1, r8, r3
   1efd8:	andeq	pc, r1, r8, lsl #7
   1efdc:	andeq	pc, r1, r8, ror r3	; <UNPREDICTABLE>
   1efe0:	andeq	pc, r1, r8, ror #6
   1efe4:	andeq	pc, r1, r8, asr r3	; <UNPREDICTABLE>
   1efe8:	andeq	pc, r1, r8, asr #6
   1efec:	andeq	pc, r1, r8, lsr r3	; <UNPREDICTABLE>
   1eff0:	andeq	pc, r1, r8, lsr #6
   1eff4:	andeq	pc, r1, r8, lsl r3	; <UNPREDICTABLE>
   1eff8:	andeq	pc, r1, r8, lsl #6
   1effc:	strdeq	pc, [r1], -r8
   1f000:	andeq	pc, r1, r8, ror #5
   1f004:	ldrdeq	pc, [r1], -r8
   1f008:	andeq	pc, r1, r8, asr #5
   1f00c:			; <UNDEFINED> instruction: 0x0001f2b8
   1f010:	andeq	pc, r1, r8, lsr #5
   1f014:	muleq	r1, r8, r2
   1f018:	andeq	pc, r1, r8, lsl #5
   1f01c:	andeq	pc, r1, r8, ror r2	; <UNPREDICTABLE>
   1f020:	andeq	pc, r1, r8, ror #4
   1f024:	andeq	pc, r1, r8, asr r2	; <UNPREDICTABLE>
   1f028:	andeq	pc, r1, r8, asr #4
   1f02c:	andeq	pc, r1, r8, lsr r2	; <UNPREDICTABLE>
   1f030:	andeq	pc, r1, r8, lsr #4
   1f034:	andeq	pc, r1, r8, lsl r2	; <UNPREDICTABLE>
   1f038:	andeq	pc, r1, r8, lsl #4
   1f03c:	strdeq	pc, [r1], -r8
   1f040:	andeq	pc, r1, r8, ror #3
   1f044:	ldrdeq	pc, [r1], -r8
   1f048:	andeq	pc, r1, r8, asr #3
   1f04c:			; <UNDEFINED> instruction: 0x0001f1b8
   1f050:	andeq	pc, r1, r8, lsr #3
   1f054:	muleq	r1, r8, r1
   1f058:	andeq	pc, r1, r8, lsl #3
   1f05c:	andeq	pc, r1, r8, ror r1	; <UNPREDICTABLE>
   1f060:	andeq	pc, r1, r8, ror #2
   1f064:	andeq	pc, r1, r8, asr r1	; <UNPREDICTABLE>
   1f068:	andeq	pc, r1, r8, asr #2
   1f06c:	andeq	pc, r1, r8, lsr r1	; <UNPREDICTABLE>
   1f070:	andeq	pc, r1, r8, lsr #2
   1f074:	andeq	pc, r1, r8, lsl r1	; <UNPREDICTABLE>
   1f078:	andeq	pc, r1, r8, lsl #2
   1f07c:	strdeq	pc, [r1], -r8
   1f080:	andeq	pc, r1, r8, ror #1
   1f084:	ldrdeq	pc, [r1], -r8
   1f088:	andeq	pc, r1, r8, asr #1
   1f08c:	strheq	pc, [r1], -r8	; <UNPREDICTABLE>
   1f090:	andeq	pc, r1, r8, lsr #1
   1f094:	muleq	r1, r8, r0
   1f098:	mov	r2, #5
   1f09c:	ldr	r1, [pc, #1104]	; 1f4f4 <g_strcmp0@plt+0x8798>
   1f0a0:	mov	r0, #0
   1f0a4:	b	1666c <dcgettext@plt>
   1f0a8:	mov	r2, #5
   1f0ac:	ldr	r1, [pc, #1092]	; 1f4f8 <g_strcmp0@plt+0x879c>
   1f0b0:	mov	r0, #0
   1f0b4:	b	1666c <dcgettext@plt>
   1f0b8:	mov	r2, #5
   1f0bc:	ldr	r1, [pc, #1080]	; 1f4fc <g_strcmp0@plt+0x87a0>
   1f0c0:	mov	r0, #0
   1f0c4:	b	1666c <dcgettext@plt>
   1f0c8:	mov	r2, #5
   1f0cc:	ldr	r1, [pc, #1068]	; 1f500 <g_strcmp0@plt+0x87a4>
   1f0d0:	mov	r0, #0
   1f0d4:	b	1666c <dcgettext@plt>
   1f0d8:	mov	r2, #5
   1f0dc:	ldr	r1, [pc, #1056]	; 1f504 <g_strcmp0@plt+0x87a8>
   1f0e0:	mov	r0, #0
   1f0e4:	b	1666c <dcgettext@plt>
   1f0e8:	mov	r2, #5
   1f0ec:	ldr	r1, [pc, #1044]	; 1f508 <g_strcmp0@plt+0x87ac>
   1f0f0:	mov	r0, #0
   1f0f4:	b	1666c <dcgettext@plt>
   1f0f8:	mov	r2, #5
   1f0fc:	ldr	r1, [pc, #1032]	; 1f50c <g_strcmp0@plt+0x87b0>
   1f100:	mov	r0, #0
   1f104:	b	1666c <dcgettext@plt>
   1f108:	mov	r2, #5
   1f10c:	ldr	r1, [pc, #1020]	; 1f510 <g_strcmp0@plt+0x87b4>
   1f110:	mov	r0, #0
   1f114:	b	1666c <dcgettext@plt>
   1f118:	mov	r2, #5
   1f11c:	ldr	r1, [pc, #1008]	; 1f514 <g_strcmp0@plt+0x87b8>
   1f120:	mov	r0, #0
   1f124:	b	1666c <dcgettext@plt>
   1f128:	mov	r2, #5
   1f12c:	ldr	r1, [pc, #996]	; 1f518 <g_strcmp0@plt+0x87bc>
   1f130:	mov	r0, #0
   1f134:	b	1666c <dcgettext@plt>
   1f138:	mov	r2, #5
   1f13c:	ldr	r1, [pc, #984]	; 1f51c <g_strcmp0@plt+0x87c0>
   1f140:	mov	r0, #0
   1f144:	b	1666c <dcgettext@plt>
   1f148:	mov	r2, #5
   1f14c:	ldr	r1, [pc, #972]	; 1f520 <g_strcmp0@plt+0x87c4>
   1f150:	mov	r0, #0
   1f154:	b	1666c <dcgettext@plt>
   1f158:	mov	r2, #5
   1f15c:	ldr	r1, [pc, #960]	; 1f524 <g_strcmp0@plt+0x87c8>
   1f160:	mov	r0, #0
   1f164:	b	1666c <dcgettext@plt>
   1f168:	mov	r2, #5
   1f16c:	ldr	r1, [pc, #948]	; 1f528 <g_strcmp0@plt+0x87cc>
   1f170:	mov	r0, #0
   1f174:	b	1666c <dcgettext@plt>
   1f178:	mov	r2, #5
   1f17c:	ldr	r1, [pc, #936]	; 1f52c <g_strcmp0@plt+0x87d0>
   1f180:	mov	r0, #0
   1f184:	b	1666c <dcgettext@plt>
   1f188:	mov	r2, #5
   1f18c:	ldr	r1, [pc, #924]	; 1f530 <g_strcmp0@plt+0x87d4>
   1f190:	mov	r0, #0
   1f194:	b	1666c <dcgettext@plt>
   1f198:	mov	r2, #5
   1f19c:	ldr	r1, [pc, #912]	; 1f534 <g_strcmp0@plt+0x87d8>
   1f1a0:	mov	r0, #0
   1f1a4:	b	1666c <dcgettext@plt>
   1f1a8:	mov	r2, #5
   1f1ac:	ldr	r1, [pc, #900]	; 1f538 <g_strcmp0@plt+0x87dc>
   1f1b0:	mov	r0, #0
   1f1b4:	b	1666c <dcgettext@plt>
   1f1b8:	mov	r2, #5
   1f1bc:	ldr	r1, [pc, #888]	; 1f53c <g_strcmp0@plt+0x87e0>
   1f1c0:	mov	r0, #0
   1f1c4:	b	1666c <dcgettext@plt>
   1f1c8:	mov	r2, #5
   1f1cc:	ldr	r1, [pc, #876]	; 1f540 <g_strcmp0@plt+0x87e4>
   1f1d0:	mov	r0, #0
   1f1d4:	b	1666c <dcgettext@plt>
   1f1d8:	mov	r2, #5
   1f1dc:	ldr	r1, [pc, #864]	; 1f544 <g_strcmp0@plt+0x87e8>
   1f1e0:	mov	r0, #0
   1f1e4:	b	1666c <dcgettext@plt>
   1f1e8:	mov	r2, #5
   1f1ec:	ldr	r1, [pc, #852]	; 1f548 <g_strcmp0@plt+0x87ec>
   1f1f0:	mov	r0, #0
   1f1f4:	b	1666c <dcgettext@plt>
   1f1f8:	mov	r2, #5
   1f1fc:	ldr	r1, [pc, #840]	; 1f54c <g_strcmp0@plt+0x87f0>
   1f200:	mov	r0, #0
   1f204:	b	1666c <dcgettext@plt>
   1f208:	mov	r2, #5
   1f20c:	ldr	r1, [pc, #828]	; 1f550 <g_strcmp0@plt+0x87f4>
   1f210:	mov	r0, #0
   1f214:	b	1666c <dcgettext@plt>
   1f218:	mov	r2, #5
   1f21c:	ldr	r1, [pc, #816]	; 1f554 <g_strcmp0@plt+0x87f8>
   1f220:	mov	r0, #0
   1f224:	b	1666c <dcgettext@plt>
   1f228:	mov	r2, #5
   1f22c:	ldr	r1, [pc, #804]	; 1f558 <g_strcmp0@plt+0x87fc>
   1f230:	mov	r0, #0
   1f234:	b	1666c <dcgettext@plt>
   1f238:	mov	r2, #5
   1f23c:	ldr	r1, [pc, #792]	; 1f55c <g_strcmp0@plt+0x8800>
   1f240:	mov	r0, #0
   1f244:	b	1666c <dcgettext@plt>
   1f248:	mov	r2, #5
   1f24c:	ldr	r1, [pc, #780]	; 1f560 <g_strcmp0@plt+0x8804>
   1f250:	mov	r0, #0
   1f254:	b	1666c <dcgettext@plt>
   1f258:	mov	r2, #5
   1f25c:	ldr	r1, [pc, #768]	; 1f564 <g_strcmp0@plt+0x8808>
   1f260:	mov	r0, #0
   1f264:	b	1666c <dcgettext@plt>
   1f268:	mov	r2, #5
   1f26c:	ldr	r1, [pc, #756]	; 1f568 <g_strcmp0@plt+0x880c>
   1f270:	mov	r0, #0
   1f274:	b	1666c <dcgettext@plt>
   1f278:	mov	r2, #5
   1f27c:	ldr	r1, [pc, #744]	; 1f56c <g_strcmp0@plt+0x8810>
   1f280:	mov	r0, #0
   1f284:	b	1666c <dcgettext@plt>
   1f288:	mov	r2, #5
   1f28c:	ldr	r1, [pc, #732]	; 1f570 <g_strcmp0@plt+0x8814>
   1f290:	mov	r0, #0
   1f294:	b	1666c <dcgettext@plt>
   1f298:	mov	r2, #5
   1f29c:	ldr	r1, [pc, #720]	; 1f574 <g_strcmp0@plt+0x8818>
   1f2a0:	mov	r0, #0
   1f2a4:	b	1666c <dcgettext@plt>
   1f2a8:	mov	r2, #5
   1f2ac:	ldr	r1, [pc, #708]	; 1f578 <g_strcmp0@plt+0x881c>
   1f2b0:	mov	r0, #0
   1f2b4:	b	1666c <dcgettext@plt>
   1f2b8:	mov	r2, #5
   1f2bc:	ldr	r1, [pc, #696]	; 1f57c <g_strcmp0@plt+0x8820>
   1f2c0:	mov	r0, #0
   1f2c4:	b	1666c <dcgettext@plt>
   1f2c8:	mov	r2, #5
   1f2cc:	ldr	r1, [pc, #684]	; 1f580 <g_strcmp0@plt+0x8824>
   1f2d0:	mov	r0, #0
   1f2d4:	b	1666c <dcgettext@plt>
   1f2d8:	mov	r2, #5
   1f2dc:	ldr	r1, [pc, #672]	; 1f584 <g_strcmp0@plt+0x8828>
   1f2e0:	mov	r0, #0
   1f2e4:	b	1666c <dcgettext@plt>
   1f2e8:	mov	r2, #5
   1f2ec:	ldr	r1, [pc, #660]	; 1f588 <g_strcmp0@plt+0x882c>
   1f2f0:	mov	r0, #0
   1f2f4:	b	1666c <dcgettext@plt>
   1f2f8:	mov	r2, #5
   1f2fc:	ldr	r1, [pc, #648]	; 1f58c <g_strcmp0@plt+0x8830>
   1f300:	mov	r0, #0
   1f304:	b	1666c <dcgettext@plt>
   1f308:	mov	r2, #5
   1f30c:	ldr	r1, [pc, #636]	; 1f590 <g_strcmp0@plt+0x8834>
   1f310:	mov	r0, #0
   1f314:	b	1666c <dcgettext@plt>
   1f318:	mov	r2, #5
   1f31c:	ldr	r1, [pc, #624]	; 1f594 <g_strcmp0@plt+0x8838>
   1f320:	mov	r0, #0
   1f324:	b	1666c <dcgettext@plt>
   1f328:	mov	r2, #5
   1f32c:	ldr	r1, [pc, #612]	; 1f598 <g_strcmp0@plt+0x883c>
   1f330:	mov	r0, #0
   1f334:	b	1666c <dcgettext@plt>
   1f338:	mov	r2, #5
   1f33c:	ldr	r1, [pc, #600]	; 1f59c <g_strcmp0@plt+0x8840>
   1f340:	mov	r0, #0
   1f344:	b	1666c <dcgettext@plt>
   1f348:	mov	r2, #5
   1f34c:	ldr	r1, [pc, #588]	; 1f5a0 <g_strcmp0@plt+0x8844>
   1f350:	mov	r0, #0
   1f354:	b	1666c <dcgettext@plt>
   1f358:	mov	r2, #5
   1f35c:	ldr	r1, [pc, #576]	; 1f5a4 <g_strcmp0@plt+0x8848>
   1f360:	mov	r0, #0
   1f364:	b	1666c <dcgettext@plt>
   1f368:	mov	r2, #5
   1f36c:	ldr	r1, [pc, #564]	; 1f5a8 <g_strcmp0@plt+0x884c>
   1f370:	mov	r0, #0
   1f374:	b	1666c <dcgettext@plt>
   1f378:	mov	r2, #5
   1f37c:	ldr	r1, [pc, #552]	; 1f5ac <g_strcmp0@plt+0x8850>
   1f380:	mov	r0, #0
   1f384:	b	1666c <dcgettext@plt>
   1f388:	mov	r2, #5
   1f38c:	ldr	r1, [pc, #540]	; 1f5b0 <g_strcmp0@plt+0x8854>
   1f390:	mov	r0, #0
   1f394:	b	1666c <dcgettext@plt>
   1f398:	mov	r2, #5
   1f39c:	ldr	r1, [pc, #528]	; 1f5b4 <g_strcmp0@plt+0x8858>
   1f3a0:	mov	r0, #0
   1f3a4:	b	1666c <dcgettext@plt>
   1f3a8:	mov	r2, #5
   1f3ac:	ldr	r1, [pc, #516]	; 1f5b8 <g_strcmp0@plt+0x885c>
   1f3b0:	mov	r0, #0
   1f3b4:	b	1666c <dcgettext@plt>
   1f3b8:	mov	r2, #5
   1f3bc:	ldr	r1, [pc, #504]	; 1f5bc <g_strcmp0@plt+0x8860>
   1f3c0:	mov	r0, #0
   1f3c4:	b	1666c <dcgettext@plt>
   1f3c8:	mov	r2, #5
   1f3cc:	ldr	r1, [pc, #492]	; 1f5c0 <g_strcmp0@plt+0x8864>
   1f3d0:	mov	r0, #0
   1f3d4:	b	1666c <dcgettext@plt>
   1f3d8:	mov	r2, #5
   1f3dc:	ldr	r1, [pc, #480]	; 1f5c4 <g_strcmp0@plt+0x8868>
   1f3e0:	mov	r0, #0
   1f3e4:	b	1666c <dcgettext@plt>
   1f3e8:	mov	r2, #5
   1f3ec:	ldr	r1, [pc, #468]	; 1f5c8 <g_strcmp0@plt+0x886c>
   1f3f0:	mov	r0, #0
   1f3f4:	b	1666c <dcgettext@plt>
   1f3f8:	mov	r2, #5
   1f3fc:	ldr	r1, [pc, #456]	; 1f5cc <g_strcmp0@plt+0x8870>
   1f400:	mov	r0, #0
   1f404:	b	1666c <dcgettext@plt>
   1f408:	mov	r2, #5
   1f40c:	ldr	r1, [pc, #444]	; 1f5d0 <g_strcmp0@plt+0x8874>
   1f410:	mov	r0, #0
   1f414:	b	1666c <dcgettext@plt>
   1f418:	mov	r2, #5
   1f41c:	ldr	r1, [pc, #432]	; 1f5d4 <g_strcmp0@plt+0x8878>
   1f420:	mov	r0, #0
   1f424:	b	1666c <dcgettext@plt>
   1f428:	mov	r2, #5
   1f42c:	ldr	r1, [pc, #420]	; 1f5d8 <g_strcmp0@plt+0x887c>
   1f430:	mov	r0, #0
   1f434:	b	1666c <dcgettext@plt>
   1f438:	mov	r2, #5
   1f43c:	ldr	r1, [pc, #408]	; 1f5dc <g_strcmp0@plt+0x8880>
   1f440:	mov	r0, #0
   1f444:	b	1666c <dcgettext@plt>
   1f448:	mov	r2, #5
   1f44c:	ldr	r1, [pc, #396]	; 1f5e0 <g_strcmp0@plt+0x8884>
   1f450:	mov	r0, #0
   1f454:	b	1666c <dcgettext@plt>
   1f458:	mov	r2, #5
   1f45c:	ldr	r1, [pc, #384]	; 1f5e4 <g_strcmp0@plt+0x8888>
   1f460:	mov	r0, #0
   1f464:	b	1666c <dcgettext@plt>
   1f468:	mov	r2, #5
   1f46c:	ldr	r1, [pc, #372]	; 1f5e8 <g_strcmp0@plt+0x888c>
   1f470:	mov	r0, #0
   1f474:	b	1666c <dcgettext@plt>
   1f478:	mov	r2, #5
   1f47c:	ldr	r1, [pc, #360]	; 1f5ec <g_strcmp0@plt+0x8890>
   1f480:	mov	r0, #0
   1f484:	b	1666c <dcgettext@plt>
   1f488:	mov	r2, #5
   1f48c:	ldr	r1, [pc, #348]	; 1f5f0 <g_strcmp0@plt+0x8894>
   1f490:	mov	r0, #0
   1f494:	b	1666c <dcgettext@plt>
   1f498:	mov	r2, #5
   1f49c:	ldr	r1, [pc, #336]	; 1f5f4 <g_strcmp0@plt+0x8898>
   1f4a0:	mov	r0, #0
   1f4a4:	b	1666c <dcgettext@plt>
   1f4a8:	mov	r2, #5
   1f4ac:	ldr	r1, [pc, #324]	; 1f5f8 <g_strcmp0@plt+0x889c>
   1f4b0:	mov	r0, #0
   1f4b4:	b	1666c <dcgettext@plt>
   1f4b8:	mov	r2, #5
   1f4bc:	ldr	r1, [pc, #312]	; 1f5fc <g_strcmp0@plt+0x88a0>
   1f4c0:	mov	r0, #0
   1f4c4:	b	1666c <dcgettext@plt>
   1f4c8:	mov	r2, #5
   1f4cc:	ldr	r1, [pc, #300]	; 1f600 <g_strcmp0@plt+0x88a4>
   1f4d0:	mov	r0, #0
   1f4d4:	b	1666c <dcgettext@plt>
   1f4d8:	push	{r4, lr}
   1f4dc:	mov	r1, #16
   1f4e0:	ldr	r2, [pc, #284]	; 1f604 <g_strcmp0@plt+0x88a8>
   1f4e4:	ldr	r0, [pc, #284]	; 1f608 <g_strcmp0@plt+0x88ac>
   1f4e8:	bl	15ebc <g_log@plt>
   1f4ec:	mov	r0, #0
   1f4f0:	pop	{r4, pc}
   1f4f4:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f4f8:	andeq	r8, r2, r0, asr #25
   1f4fc:	andeq	r8, r2, r4, lsr #25
   1f500:	andeq	r8, r2, r4, lsl #25
   1f504:	andeq	r8, r2, ip, ror #24
   1f508:	andeq	r8, r2, r4, asr #24
   1f50c:	andeq	r8, r2, r0, lsr #24
   1f510:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f514:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f518:			; <UNDEFINED> instruction: 0x00028bbc
   1f51c:	andeq	r8, r2, r4, lsr #23
   1f520:	andeq	r8, r2, r8, lsl #23
   1f524:	andeq	r8, r2, r4, ror fp
   1f528:	andeq	r8, r2, ip, asr fp
   1f52c:	andeq	r8, r2, r0, asr #22
   1f530:	andeq	r8, r2, r4, lsr #22
   1f534:	andeq	r8, r2, r0, lsl #22
   1f538:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f53c:	andeq	r8, r2, r4, asr #21
   1f540:	andeq	r8, r2, ip, lsr #21
   1f544:	muleq	r2, r0, sl
   1f548:	andeq	r8, r2, r0, ror sl
   1f54c:	andeq	r8, r2, r4, asr #20
   1f550:	andeq	r8, r2, r8, lsl sl
   1f554:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f558:	ldrdeq	r8, [r2], -r0
   1f55c:	andeq	r8, r2, ip, lsr #19
   1f560:	muleq	r2, r8, r9
   1f564:	andeq	r8, r2, r0, lsl #19
   1f568:	andeq	r8, r2, r8, ror #18
   1f56c:	andeq	r8, r2, r4, asr r8
   1f570:	andeq	r8, r2, r8, lsr r8
   1f574:	andeq	r8, r2, r0, lsl r8
   1f578:	strdeq	r8, [r2], -r0
   1f57c:	andeq	r8, r2, r4, asr #18
   1f580:	andeq	r8, r2, ip, asr #15
   1f584:	andeq	r8, r2, r8, lsr #18
   1f588:	andeq	r8, r2, r0, lsl r9
   1f58c:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f590:	ldrdeq	r8, [r2], -r0
   1f594:			; <UNDEFINED> instruction: 0x000288b8
   1f598:	andeq	r8, r2, r8, lsr #17
   1f59c:	andeq	r8, r2, ip, lsr #15
   1f5a0:	andeq	r8, r2, r4, lsl #15
   1f5a4:	muleq	r2, r4, r8
   1f5a8:	andeq	r8, r2, ip, ror r8
   1f5ac:	andeq	r8, r2, r0, ror #14
   1f5b0:	andeq	r8, r2, ip, lsl r7
   1f5b4:	strdeq	r8, [r2], -ip
   1f5b8:	andeq	r8, r2, r8, lsl r5
   1f5bc:	andeq	r8, r2, r8, asr #14
   1f5c0:	andeq	r8, r2, r8, ror #13
   1f5c4:	andeq	r8, r2, r8, asr #10
   1f5c8:	andeq	r8, r2, r0, lsr #13
   1f5cc:	andeq	r8, r2, r0, lsl #13
   1f5d0:	andeq	r8, r2, r4, ror #12
   1f5d4:	andeq	r8, r2, ip, asr #12
   1f5d8:	andeq	r8, r2, r0, lsr r6
   1f5dc:	andeq	r8, r2, ip, lsl #12
   1f5e0:	strdeq	r8, [r2], -r0
   1f5e4:	ldrdeq	r8, [r2], -r0
   1f5e8:			; <UNDEFINED> instruction: 0x000286bc
   1f5ec:	andeq	r8, r2, ip, lsr #11
   1f5f0:	andeq	r8, r2, r4, lsl #11
   1f5f4:	andeq	r8, r2, r4, ror #10
   1f5f8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f5fc:	andeq	r8, r2, r8, lsr r5
   1f600:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f604:	andeq	r8, r2, r8, ror #25
   1f608:	andeq	r6, r2, r8, lsr #21
   1f60c:	cmp	r0, #67	; 0x43
   1f610:	ldrls	pc, [pc, r0, lsl #2]
   1f614:	b	1fb68 <g_strcmp0@plt+0x8e0c>
   1f618:	andeq	pc, r1, r8, asr fp	; <UNPREDICTABLE>
   1f61c:	andeq	pc, r1, r8, asr #22
   1f620:	andeq	pc, r1, r8, lsr fp	; <UNPREDICTABLE>
   1f624:	andeq	pc, r1, r8, lsr #22
   1f628:	andeq	pc, r1, r8, lsl fp	; <UNPREDICTABLE>
   1f62c:	andeq	pc, r1, r8, lsl #22
   1f630:	strdeq	pc, [r1], -r8
   1f634:	andeq	pc, r1, r8, ror #21
   1f638:	ldrdeq	pc, [r1], -r8
   1f63c:	andeq	pc, r1, r8, asr #21
   1f640:			; <UNDEFINED> instruction: 0x0001fab8
   1f644:	andeq	pc, r1, r8, lsr #21
   1f648:	muleq	r1, r8, sl
   1f64c:	andeq	pc, r1, r8, lsl #21
   1f650:	andeq	pc, r1, r8, ror sl	; <UNPREDICTABLE>
   1f654:	andeq	pc, r1, r8, ror #20
   1f658:	andeq	pc, r1, r8, asr sl	; <UNPREDICTABLE>
   1f65c:	andeq	pc, r1, r8, asr #20
   1f660:	andeq	pc, r1, r8, lsr sl	; <UNPREDICTABLE>
   1f664:	andeq	pc, r1, r8, lsr #20
   1f668:	andeq	pc, r1, r8, lsl sl	; <UNPREDICTABLE>
   1f66c:	andeq	pc, r1, r8, lsl #20
   1f670:	strdeq	pc, [r1], -r8
   1f674:	andeq	pc, r1, r8, ror #19
   1f678:	ldrdeq	pc, [r1], -r8
   1f67c:	andeq	pc, r1, r8, asr #19
   1f680:			; <UNDEFINED> instruction: 0x0001f9b8
   1f684:	andeq	pc, r1, r8, lsr #19
   1f688:	muleq	r1, r8, r9
   1f68c:	andeq	pc, r1, r8, lsl #19
   1f690:	andeq	pc, r1, r8, ror r9	; <UNPREDICTABLE>
   1f694:	andeq	pc, r1, r8, ror #18
   1f698:	andeq	pc, r1, r8, asr r9	; <UNPREDICTABLE>
   1f69c:	andeq	pc, r1, r8, asr #18
   1f6a0:	andeq	pc, r1, r8, lsr r9	; <UNPREDICTABLE>
   1f6a4:	andeq	pc, r1, r8, lsr #18
   1f6a8:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   1f6ac:	andeq	pc, r1, r8, lsl #18
   1f6b0:	strdeq	pc, [r1], -r8
   1f6b4:	andeq	pc, r1, r8, ror #17
   1f6b8:	ldrdeq	pc, [r1], -r8
   1f6bc:	andeq	pc, r1, r8, asr #17
   1f6c0:			; <UNDEFINED> instruction: 0x0001f8b8
   1f6c4:	andeq	pc, r1, r8, lsr #17
   1f6c8:	muleq	r1, r8, r8
   1f6cc:	andeq	pc, r1, r8, lsl #17
   1f6d0:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   1f6d4:	andeq	pc, r1, r8, ror #16
   1f6d8:	andeq	pc, r1, r8, asr r8	; <UNPREDICTABLE>
   1f6dc:	andeq	pc, r1, r8, asr #16
   1f6e0:	andeq	pc, r1, r8, lsr r8	; <UNPREDICTABLE>
   1f6e4:	andeq	pc, r1, r8, lsr #16
   1f6e8:	andeq	pc, r1, r8, lsl r8	; <UNPREDICTABLE>
   1f6ec:	andeq	pc, r1, r8, lsl #16
   1f6f0:	strdeq	pc, [r1], -r8
   1f6f4:	andeq	pc, r1, r8, ror #15
   1f6f8:	ldrdeq	pc, [r1], -r8
   1f6fc:	andeq	pc, r1, r8, asr #15
   1f700:			; <UNDEFINED> instruction: 0x0001f7b8
   1f704:	andeq	pc, r1, r8, lsr #15
   1f708:	muleq	r1, r8, r7
   1f70c:	andeq	pc, r1, r8, lsl #15
   1f710:	andeq	pc, r1, r8, ror r7	; <UNPREDICTABLE>
   1f714:	andeq	pc, r1, r8, ror #14
   1f718:	andeq	pc, r1, r8, asr r7	; <UNPREDICTABLE>
   1f71c:	andeq	pc, r1, r8, asr #14
   1f720:	andeq	pc, r1, r8, lsr r7	; <UNPREDICTABLE>
   1f724:	andeq	pc, r1, r8, lsr #14
   1f728:	mov	r2, #5
   1f72c:	ldr	r1, [pc, #1084]	; 1fb70 <g_strcmp0@plt+0x8e14>
   1f730:	mov	r0, #0
   1f734:	b	1666c <dcgettext@plt>
   1f738:	mov	r2, #5
   1f73c:	ldr	r1, [pc, #1072]	; 1fb74 <g_strcmp0@plt+0x8e18>
   1f740:	mov	r0, #0
   1f744:	b	1666c <dcgettext@plt>
   1f748:	mov	r2, #5
   1f74c:	ldr	r1, [pc, #1060]	; 1fb78 <g_strcmp0@plt+0x8e1c>
   1f750:	mov	r0, #0
   1f754:	b	1666c <dcgettext@plt>
   1f758:	mov	r2, #5
   1f75c:	ldr	r1, [pc, #1048]	; 1fb7c <g_strcmp0@plt+0x8e20>
   1f760:	mov	r0, #0
   1f764:	b	1666c <dcgettext@plt>
   1f768:	mov	r2, #5
   1f76c:	ldr	r1, [pc, #1036]	; 1fb80 <g_strcmp0@plt+0x8e24>
   1f770:	mov	r0, #0
   1f774:	b	1666c <dcgettext@plt>
   1f778:	mov	r2, #5
   1f77c:	ldr	r1, [pc, #1024]	; 1fb84 <g_strcmp0@plt+0x8e28>
   1f780:	mov	r0, #0
   1f784:	b	1666c <dcgettext@plt>
   1f788:	mov	r2, #5
   1f78c:	ldr	r1, [pc, #1012]	; 1fb88 <g_strcmp0@plt+0x8e2c>
   1f790:	mov	r0, #0
   1f794:	b	1666c <dcgettext@plt>
   1f798:	mov	r2, #5
   1f79c:	ldr	r1, [pc, #1000]	; 1fb8c <g_strcmp0@plt+0x8e30>
   1f7a0:	mov	r0, #0
   1f7a4:	b	1666c <dcgettext@plt>
   1f7a8:	mov	r2, #5
   1f7ac:	ldr	r1, [pc, #988]	; 1fb90 <g_strcmp0@plt+0x8e34>
   1f7b0:	mov	r0, #0
   1f7b4:	b	1666c <dcgettext@plt>
   1f7b8:	mov	r2, #5
   1f7bc:	ldr	r1, [pc, #976]	; 1fb94 <g_strcmp0@plt+0x8e38>
   1f7c0:	mov	r0, #0
   1f7c4:	b	1666c <dcgettext@plt>
   1f7c8:	mov	r2, #5
   1f7cc:	ldr	r1, [pc, #964]	; 1fb98 <g_strcmp0@plt+0x8e3c>
   1f7d0:	mov	r0, #0
   1f7d4:	b	1666c <dcgettext@plt>
   1f7d8:	mov	r2, #5
   1f7dc:	ldr	r1, [pc, #952]	; 1fb9c <g_strcmp0@plt+0x8e40>
   1f7e0:	mov	r0, #0
   1f7e4:	b	1666c <dcgettext@plt>
   1f7e8:	mov	r2, #5
   1f7ec:	ldr	r1, [pc, #940]	; 1fba0 <g_strcmp0@plt+0x8e44>
   1f7f0:	mov	r0, #0
   1f7f4:	b	1666c <dcgettext@plt>
   1f7f8:	mov	r2, #5
   1f7fc:	ldr	r1, [pc, #928]	; 1fba4 <g_strcmp0@plt+0x8e48>
   1f800:	mov	r0, #0
   1f804:	b	1666c <dcgettext@plt>
   1f808:	mov	r2, #5
   1f80c:	ldr	r1, [pc, #916]	; 1fba8 <g_strcmp0@plt+0x8e4c>
   1f810:	mov	r0, #0
   1f814:	b	1666c <dcgettext@plt>
   1f818:	mov	r2, #5
   1f81c:	ldr	r1, [pc, #904]	; 1fbac <g_strcmp0@plt+0x8e50>
   1f820:	mov	r0, #0
   1f824:	b	1666c <dcgettext@plt>
   1f828:	mov	r2, #5
   1f82c:	ldr	r1, [pc, #892]	; 1fbb0 <g_strcmp0@plt+0x8e54>
   1f830:	mov	r0, #0
   1f834:	b	1666c <dcgettext@plt>
   1f838:	mov	r2, #5
   1f83c:	ldr	r1, [pc, #880]	; 1fbb4 <g_strcmp0@plt+0x8e58>
   1f840:	mov	r0, #0
   1f844:	b	1666c <dcgettext@plt>
   1f848:	mov	r2, #5
   1f84c:	ldr	r1, [pc, #868]	; 1fbb8 <g_strcmp0@plt+0x8e5c>
   1f850:	mov	r0, #0
   1f854:	b	1666c <dcgettext@plt>
   1f858:	mov	r2, #5
   1f85c:	ldr	r1, [pc, #856]	; 1fbbc <g_strcmp0@plt+0x8e60>
   1f860:	mov	r0, #0
   1f864:	b	1666c <dcgettext@plt>
   1f868:	mov	r2, #5
   1f86c:	ldr	r1, [pc, #844]	; 1fbc0 <g_strcmp0@plt+0x8e64>
   1f870:	mov	r0, #0
   1f874:	b	1666c <dcgettext@plt>
   1f878:	mov	r2, #5
   1f87c:	ldr	r1, [pc, #832]	; 1fbc4 <g_strcmp0@plt+0x8e68>
   1f880:	mov	r0, #0
   1f884:	b	1666c <dcgettext@plt>
   1f888:	mov	r2, #5
   1f88c:	ldr	r1, [pc, #820]	; 1fbc8 <g_strcmp0@plt+0x8e6c>
   1f890:	mov	r0, #0
   1f894:	b	1666c <dcgettext@plt>
   1f898:	mov	r2, #5
   1f89c:	ldr	r1, [pc, #808]	; 1fbcc <g_strcmp0@plt+0x8e70>
   1f8a0:	mov	r0, #0
   1f8a4:	b	1666c <dcgettext@plt>
   1f8a8:	mov	r2, #5
   1f8ac:	ldr	r1, [pc, #796]	; 1fbd0 <g_strcmp0@plt+0x8e74>
   1f8b0:	mov	r0, #0
   1f8b4:	b	1666c <dcgettext@plt>
   1f8b8:	mov	r2, #5
   1f8bc:	ldr	r1, [pc, #784]	; 1fbd4 <g_strcmp0@plt+0x8e78>
   1f8c0:	mov	r0, #0
   1f8c4:	b	1666c <dcgettext@plt>
   1f8c8:	mov	r2, #5
   1f8cc:	ldr	r1, [pc, #772]	; 1fbd8 <g_strcmp0@plt+0x8e7c>
   1f8d0:	mov	r0, #0
   1f8d4:	b	1666c <dcgettext@plt>
   1f8d8:	mov	r2, #5
   1f8dc:	ldr	r1, [pc, #760]	; 1fbdc <g_strcmp0@plt+0x8e80>
   1f8e0:	mov	r0, #0
   1f8e4:	b	1666c <dcgettext@plt>
   1f8e8:	mov	r2, #5
   1f8ec:	ldr	r1, [pc, #748]	; 1fbe0 <g_strcmp0@plt+0x8e84>
   1f8f0:	mov	r0, #0
   1f8f4:	b	1666c <dcgettext@plt>
   1f8f8:	mov	r2, #5
   1f8fc:	ldr	r1, [pc, #736]	; 1fbe4 <g_strcmp0@plt+0x8e88>
   1f900:	mov	r0, #0
   1f904:	b	1666c <dcgettext@plt>
   1f908:	mov	r2, #5
   1f90c:	ldr	r1, [pc, #724]	; 1fbe8 <g_strcmp0@plt+0x8e8c>
   1f910:	mov	r0, #0
   1f914:	b	1666c <dcgettext@plt>
   1f918:	mov	r2, #5
   1f91c:	ldr	r1, [pc, #712]	; 1fbec <g_strcmp0@plt+0x8e90>
   1f920:	mov	r0, #0
   1f924:	b	1666c <dcgettext@plt>
   1f928:	mov	r2, #5
   1f92c:	ldr	r1, [pc, #700]	; 1fbf0 <g_strcmp0@plt+0x8e94>
   1f930:	mov	r0, #0
   1f934:	b	1666c <dcgettext@plt>
   1f938:	mov	r2, #5
   1f93c:	ldr	r1, [pc, #688]	; 1fbf4 <g_strcmp0@plt+0x8e98>
   1f940:	mov	r0, #0
   1f944:	b	1666c <dcgettext@plt>
   1f948:	mov	r2, #5
   1f94c:	ldr	r1, [pc, #676]	; 1fbf8 <g_strcmp0@plt+0x8e9c>
   1f950:	mov	r0, #0
   1f954:	b	1666c <dcgettext@plt>
   1f958:	mov	r2, #5
   1f95c:	ldr	r1, [pc, #664]	; 1fbfc <g_strcmp0@plt+0x8ea0>
   1f960:	mov	r0, #0
   1f964:	b	1666c <dcgettext@plt>
   1f968:	mov	r2, #5
   1f96c:	ldr	r1, [pc, #652]	; 1fc00 <g_strcmp0@plt+0x8ea4>
   1f970:	mov	r0, #0
   1f974:	b	1666c <dcgettext@plt>
   1f978:	mov	r2, #5
   1f97c:	ldr	r1, [pc, #640]	; 1fc04 <g_strcmp0@plt+0x8ea8>
   1f980:	mov	r0, #0
   1f984:	b	1666c <dcgettext@plt>
   1f988:	mov	r2, #5
   1f98c:	ldr	r1, [pc, #628]	; 1fc08 <g_strcmp0@plt+0x8eac>
   1f990:	mov	r0, #0
   1f994:	b	1666c <dcgettext@plt>
   1f998:	mov	r2, #5
   1f99c:	ldr	r1, [pc, #616]	; 1fc0c <g_strcmp0@plt+0x8eb0>
   1f9a0:	mov	r0, #0
   1f9a4:	b	1666c <dcgettext@plt>
   1f9a8:	mov	r2, #5
   1f9ac:	ldr	r1, [pc, #604]	; 1fc10 <g_strcmp0@plt+0x8eb4>
   1f9b0:	mov	r0, #0
   1f9b4:	b	1666c <dcgettext@plt>
   1f9b8:	mov	r2, #5
   1f9bc:	ldr	r1, [pc, #592]	; 1fc14 <g_strcmp0@plt+0x8eb8>
   1f9c0:	mov	r0, #0
   1f9c4:	b	1666c <dcgettext@plt>
   1f9c8:	mov	r2, #5
   1f9cc:	ldr	r1, [pc, #580]	; 1fc18 <g_strcmp0@plt+0x8ebc>
   1f9d0:	mov	r0, #0
   1f9d4:	b	1666c <dcgettext@plt>
   1f9d8:	mov	r2, #5
   1f9dc:	ldr	r1, [pc, #568]	; 1fc1c <g_strcmp0@plt+0x8ec0>
   1f9e0:	mov	r0, #0
   1f9e4:	b	1666c <dcgettext@plt>
   1f9e8:	mov	r2, #5
   1f9ec:	ldr	r1, [pc, #556]	; 1fc20 <g_strcmp0@plt+0x8ec4>
   1f9f0:	mov	r0, #0
   1f9f4:	b	1666c <dcgettext@plt>
   1f9f8:	mov	r2, #5
   1f9fc:	ldr	r1, [pc, #544]	; 1fc24 <g_strcmp0@plt+0x8ec8>
   1fa00:	mov	r0, #0
   1fa04:	b	1666c <dcgettext@plt>
   1fa08:	mov	r2, #5
   1fa0c:	ldr	r1, [pc, #532]	; 1fc28 <g_strcmp0@plt+0x8ecc>
   1fa10:	mov	r0, #0
   1fa14:	b	1666c <dcgettext@plt>
   1fa18:	mov	r2, #5
   1fa1c:	ldr	r1, [pc, #520]	; 1fc2c <g_strcmp0@plt+0x8ed0>
   1fa20:	mov	r0, #0
   1fa24:	b	1666c <dcgettext@plt>
   1fa28:	mov	r2, #5
   1fa2c:	ldr	r1, [pc, #508]	; 1fc30 <g_strcmp0@plt+0x8ed4>
   1fa30:	mov	r0, #0
   1fa34:	b	1666c <dcgettext@plt>
   1fa38:	mov	r2, #5
   1fa3c:	ldr	r1, [pc, #496]	; 1fc34 <g_strcmp0@plt+0x8ed8>
   1fa40:	mov	r0, #0
   1fa44:	b	1666c <dcgettext@plt>
   1fa48:	mov	r2, #5
   1fa4c:	ldr	r1, [pc, #484]	; 1fc38 <g_strcmp0@plt+0x8edc>
   1fa50:	mov	r0, #0
   1fa54:	b	1666c <dcgettext@plt>
   1fa58:	mov	r2, #5
   1fa5c:	ldr	r1, [pc, #472]	; 1fc3c <g_strcmp0@plt+0x8ee0>
   1fa60:	mov	r0, #0
   1fa64:	b	1666c <dcgettext@plt>
   1fa68:	mov	r2, #5
   1fa6c:	ldr	r1, [pc, #460]	; 1fc40 <g_strcmp0@plt+0x8ee4>
   1fa70:	mov	r0, #0
   1fa74:	b	1666c <dcgettext@plt>
   1fa78:	mov	r2, #5
   1fa7c:	ldr	r1, [pc, #448]	; 1fc44 <g_strcmp0@plt+0x8ee8>
   1fa80:	mov	r0, #0
   1fa84:	b	1666c <dcgettext@plt>
   1fa88:	mov	r2, #5
   1fa8c:	ldr	r1, [pc, #436]	; 1fc48 <g_strcmp0@plt+0x8eec>
   1fa90:	mov	r0, #0
   1fa94:	b	1666c <dcgettext@plt>
   1fa98:	mov	r2, #5
   1fa9c:	ldr	r1, [pc, #424]	; 1fc4c <g_strcmp0@plt+0x8ef0>
   1faa0:	mov	r0, #0
   1faa4:	b	1666c <dcgettext@plt>
   1faa8:	mov	r2, #5
   1faac:	ldr	r1, [pc, #412]	; 1fc50 <g_strcmp0@plt+0x8ef4>
   1fab0:	mov	r0, #0
   1fab4:	b	1666c <dcgettext@plt>
   1fab8:	mov	r2, #5
   1fabc:	ldr	r1, [pc, #400]	; 1fc54 <g_strcmp0@plt+0x8ef8>
   1fac0:	mov	r0, #0
   1fac4:	b	1666c <dcgettext@plt>
   1fac8:	mov	r2, #5
   1facc:	ldr	r1, [pc, #388]	; 1fc58 <g_strcmp0@plt+0x8efc>
   1fad0:	mov	r0, #0
   1fad4:	b	1666c <dcgettext@plt>
   1fad8:	mov	r2, #5
   1fadc:	ldr	r1, [pc, #376]	; 1fc5c <g_strcmp0@plt+0x8f00>
   1fae0:	mov	r0, #0
   1fae4:	b	1666c <dcgettext@plt>
   1fae8:	mov	r2, #5
   1faec:	ldr	r1, [pc, #364]	; 1fc60 <g_strcmp0@plt+0x8f04>
   1faf0:	mov	r0, #0
   1faf4:	b	1666c <dcgettext@plt>
   1faf8:	mov	r2, #5
   1fafc:	ldr	r1, [pc, #352]	; 1fc64 <g_strcmp0@plt+0x8f08>
   1fb00:	mov	r0, #0
   1fb04:	b	1666c <dcgettext@plt>
   1fb08:	mov	r2, #5
   1fb0c:	ldr	r1, [pc, #340]	; 1fc68 <g_strcmp0@plt+0x8f0c>
   1fb10:	mov	r0, #0
   1fb14:	b	1666c <dcgettext@plt>
   1fb18:	mov	r2, #5
   1fb1c:	ldr	r1, [pc, #328]	; 1fc6c <g_strcmp0@plt+0x8f10>
   1fb20:	mov	r0, #0
   1fb24:	b	1666c <dcgettext@plt>
   1fb28:	mov	r2, #5
   1fb2c:	ldr	r1, [pc, #316]	; 1fc70 <g_strcmp0@plt+0x8f14>
   1fb30:	mov	r0, #0
   1fb34:	b	1666c <dcgettext@plt>
   1fb38:	mov	r2, #5
   1fb3c:	ldr	r1, [pc, #304]	; 1fc74 <g_strcmp0@plt+0x8f18>
   1fb40:	mov	r0, #0
   1fb44:	b	1666c <dcgettext@plt>
   1fb48:	mov	r2, #5
   1fb4c:	ldr	r1, [pc, #292]	; 1fc78 <g_strcmp0@plt+0x8f1c>
   1fb50:	mov	r0, #0
   1fb54:	b	1666c <dcgettext@plt>
   1fb58:	mov	r2, #5
   1fb5c:	ldr	r1, [pc, #280]	; 1fc7c <g_strcmp0@plt+0x8f20>
   1fb60:	mov	r0, #0
   1fb64:	b	1666c <dcgettext@plt>
   1fb68:	mov	r0, #0
   1fb6c:	bx	lr
   1fb70:	muleq	r2, r4, r4
   1fb74:	andeq	sl, r2, r8, lsl #8
   1fb78:	andeq	sl, r2, r4, asr #8
   1fb7c:	ldrdeq	sl, [r2], -r0
   1fb80:	muleq	r2, r0, r3
   1fb84:	andeq	sl, r2, r4, asr r3
   1fb88:	andeq	sl, r2, r4, lsl r3
   1fb8c:	muleq	r2, r4, r2
   1fb90:	andeq	sl, r2, r0, lsr #4
   1fb94:			; <UNDEFINED> instruction: 0x0002a1b0
   1fb98:	andeq	sl, r2, r0, asr #2
   1fb9c:	andeq	sl, r2, ip, asr #1
   1fba0:	andeq	sl, r2, ip, asr #32
   1fba4:	andeq	sl, r2, r8, lsl r0
   1fba8:	ldrdeq	r9, [r2], -r0
   1fbac:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1fbb0:	andeq	r9, r2, r4, ror #30
   1fbb4:	andeq	r9, r2, r8, lsr #30
   1fbb8:	andeq	r9, r2, ip, lsr #29
   1fbbc:	andeq	r9, r2, r8, asr #28
   1fbc0:	andeq	r9, r2, ip, lsl #28
   1fbc4:	andeq	r9, r2, r0, lsr #27
   1fbc8:	andeq	r9, r2, r0, asr sp
   1fbcc:	andeq	r9, r2, r4, asr #25
   1fbd0:	andeq	r9, r2, r0, asr #24
   1fbd4:	ldrdeq	r9, [r2], -r4
   1fbd8:	andeq	r9, r2, r4, lsl #23
   1fbdc:	andeq	r9, r2, r4, lsr fp
   1fbe0:	andeq	r9, r2, r0, ror #21
   1fbe4:	andeq	r9, r2, ip, ror #20
   1fbe8:	andeq	r9, r2, r0, lsl r7
   1fbec:	muleq	r2, r0, r6
   1fbf0:	andeq	r9, r2, ip, lsr #12
   1fbf4:	andeq	r9, r2, ip, asr #11
   1fbf8:	andeq	r9, r2, r0, lsr sl
   1fbfc:	andeq	r9, r2, ip, asr r5
   1fc00:			; <UNDEFINED> instruction: 0x000299bc
   1fc04:	andeq	r9, r2, r4, lsl #19
   1fc08:	andeq	r9, r2, ip, lsr #18
   1fc0c:	strdeq	r9, [r2], -r8
   1fc10:	andeq	r9, r2, r8, asr #17
   1fc14:	andeq	r9, r2, r0, asr r8
   1fc18:	andeq	r9, r2, r0, lsr r5
   1fc1c:	andeq	r9, r2, ip, asr #9
   1fc20:	andeq	r9, r2, r0, lsl #16
   1fc24:	muleq	r2, r0, r7
   1fc28:	andeq	r9, r2, r4, ror #8
   1fc2c:	andeq	r9, r2, ip, ror #7
   1fc30:	andeq	r9, r2, r8, lsl #7
   1fc34:	andeq	r8, r2, r8, ror sp
   1fc38:	andeq	r9, r2, r0, lsr #8
   1fc3c:	andeq	r9, r2, r0, lsr #6
   1fc40:	andeq	r8, r2, r4, asr #28
   1fc44:	andeq	r9, r2, ip, ror #4
   1fc48:	strdeq	r9, [r2], -r4
   1fc4c:	andeq	r9, r2, ip, ror r1
   1fc50:	andeq	r9, r2, r0, lsr r1
   1fc54:	andeq	r9, r2, r8, ror #1
   1fc58:	andeq	r9, r2, r4, lsr #1
   1fc5c:	andeq	r9, r2, r8, asr #32
   1fc60:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1fc64:	muleq	r2, r8, r2
   1fc68:	andeq	r8, r2, ip, lsl #31
   1fc6c:	andeq	r8, r2, r4, lsl #30
   1fc70:	andeq	r8, r2, r0, lsl #29
   1fc74:	andeq	r8, r2, r8, lsl sp
   1fc78:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1fc7c:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1fc80:	sub	r3, r0, #1
   1fc84:	cmp	r3, #5
   1fc88:	ldrls	pc, [pc, r3, lsl #2]
   1fc8c:	b	1fd08 <g_strcmp0@plt+0x8fac>
   1fc90:			; <UNDEFINED> instruction: 0x0001fcb8
   1fc94:	andeq	pc, r1, r8, asr #25
   1fc98:	ldrdeq	pc, [r1], -r8
   1fc9c:	andeq	pc, r1, r8, ror #25
   1fca0:	strdeq	pc, [r1], -r8
   1fca4:	andeq	pc, r1, r8, lsr #25
   1fca8:	mov	r2, #5
   1fcac:	ldr	r1, [pc, #116]	; 1fd28 <g_strcmp0@plt+0x8fcc>
   1fcb0:	mov	r0, #0
   1fcb4:	b	1666c <dcgettext@plt>
   1fcb8:	mov	r2, #5
   1fcbc:	ldr	r1, [pc, #104]	; 1fd2c <g_strcmp0@plt+0x8fd0>
   1fcc0:	mov	r0, #0
   1fcc4:	b	1666c <dcgettext@plt>
   1fcc8:	mov	r2, #5
   1fccc:	ldr	r1, [pc, #92]	; 1fd30 <g_strcmp0@plt+0x8fd4>
   1fcd0:	mov	r0, #0
   1fcd4:	b	1666c <dcgettext@plt>
   1fcd8:	mov	r2, #5
   1fcdc:	ldr	r1, [pc, #80]	; 1fd34 <g_strcmp0@plt+0x8fd8>
   1fce0:	mov	r0, #0
   1fce4:	b	1666c <dcgettext@plt>
   1fce8:	mov	r2, #5
   1fcec:	ldr	r1, [pc, #68]	; 1fd38 <g_strcmp0@plt+0x8fdc>
   1fcf0:	mov	r0, #0
   1fcf4:	b	1666c <dcgettext@plt>
   1fcf8:	mov	r2, #5
   1fcfc:	ldr	r1, [pc, #56]	; 1fd3c <g_strcmp0@plt+0x8fe0>
   1fd00:	mov	r0, #0
   1fd04:	b	1666c <dcgettext@plt>
   1fd08:	mov	r3, r0
   1fd0c:	push	{r4, lr}
   1fd10:	mov	r1, #16
   1fd14:	ldr	r2, [pc, #36]	; 1fd40 <g_strcmp0@plt+0x8fe4>
   1fd18:	ldr	r0, [pc, #36]	; 1fd44 <g_strcmp0@plt+0x8fe8>
   1fd1c:	bl	15ebc <g_log@plt>
   1fd20:	mov	r0, #0
   1fd24:	pop	{r4, pc}
   1fd28:	muleq	r2, ip, r5
   1fd2c:			; <UNDEFINED> instruction: 0x0002a4b8
   1fd30:	ldrdeq	sl, [r2], -r4
   1fd34:	andeq	sl, r2, r8, lsl #10
   1fd38:	andeq	sl, r2, r8, lsr r5
   1fd3c:	andeq	sl, r2, r4, asr r5
   1fd40:	ldrdeq	sl, [r2], -r4
   1fd44:	andeq	r6, r2, r8, lsr #21
   1fd48:	sub	r3, r0, #1
   1fd4c:	cmp	r3, #5
   1fd50:	ldrls	pc, [pc, r3, lsl #2]
   1fd54:	b	1fdd0 <g_strcmp0@plt+0x9074>
   1fd58:	andeq	pc, r1, r0, lsl #27
   1fd5c:	muleq	r1, r0, sp
   1fd60:	andeq	pc, r1, r0, lsr #27
   1fd64:			; <UNDEFINED> instruction: 0x0001fdb0
   1fd68:	andeq	pc, r1, r0, asr #27
   1fd6c:	andeq	pc, r1, r0, ror sp	; <UNPREDICTABLE>
   1fd70:	mov	r2, #5
   1fd74:	ldr	r1, [pc, #116]	; 1fdf0 <g_strcmp0@plt+0x9094>
   1fd78:	mov	r0, #0
   1fd7c:	b	1666c <dcgettext@plt>
   1fd80:	mov	r2, #5
   1fd84:	ldr	r1, [pc, #104]	; 1fdf4 <g_strcmp0@plt+0x9098>
   1fd88:	mov	r0, #0
   1fd8c:	b	1666c <dcgettext@plt>
   1fd90:	mov	r2, #5
   1fd94:	ldr	r1, [pc, #92]	; 1fdf8 <g_strcmp0@plt+0x909c>
   1fd98:	mov	r0, #0
   1fd9c:	b	1666c <dcgettext@plt>
   1fda0:	mov	r2, #5
   1fda4:	ldr	r1, [pc, #80]	; 1fdfc <g_strcmp0@plt+0x90a0>
   1fda8:	mov	r0, #0
   1fdac:	b	1666c <dcgettext@plt>
   1fdb0:	mov	r2, #5
   1fdb4:	ldr	r1, [pc, #68]	; 1fe00 <g_strcmp0@plt+0x90a4>
   1fdb8:	mov	r0, #0
   1fdbc:	b	1666c <dcgettext@plt>
   1fdc0:	mov	r2, #5
   1fdc4:	ldr	r1, [pc, #56]	; 1fe04 <g_strcmp0@plt+0x90a8>
   1fdc8:	mov	r0, #0
   1fdcc:	b	1666c <dcgettext@plt>
   1fdd0:	mov	r3, r0
   1fdd4:	push	{r4, lr}
   1fdd8:	mov	r1, #16
   1fddc:	ldr	r2, [pc, #36]	; 1fe08 <g_strcmp0@plt+0x90ac>
   1fde0:	ldr	r0, [pc, #36]	; 1fe0c <g_strcmp0@plt+0x90b0>
   1fde4:	bl	15ebc <g_log@plt>
   1fde8:	mov	r0, #0
   1fdec:	pop	{r4, pc}
   1fdf0:	andeq	sl, r2, r8, lsr #13
   1fdf4:	strdeq	sl, [r2], -r0
   1fdf8:	andeq	sl, r2, r8, asr #12
   1fdfc:	andeq	sl, r2, r0, lsr #12
   1fe00:	andeq	sl, r2, r8, lsl #12
   1fe04:	andeq	sl, r2, r0, ror r6
   1fe08:	ldrdeq	sl, [r2], -r4
   1fe0c:	andeq	r6, r2, r8, lsr #21
   1fe10:	cmp	r0, #2
   1fe14:	beq	1fe48 <g_strcmp0@plt+0x90ec>
   1fe18:	cmp	r0, #3
   1fe1c:	beq	1fe68 <g_strcmp0@plt+0x910c>
   1fe20:	cmp	r0, #1
   1fe24:	beq	1fe58 <g_strcmp0@plt+0x90fc>
   1fe28:	mov	r3, r0
   1fe2c:	push	{r4, lr}
   1fe30:	mov	r1, #16
   1fe34:	ldr	r2, [pc, #60]	; 1fe78 <g_strcmp0@plt+0x911c>
   1fe38:	ldr	r0, [pc, #60]	; 1fe7c <g_strcmp0@plt+0x9120>
   1fe3c:	bl	15ebc <g_log@plt>
   1fe40:	mov	r0, #0
   1fe44:	pop	{r4, pc}
   1fe48:	mov	r2, #5
   1fe4c:	ldr	r1, [pc, #44]	; 1fe80 <g_strcmp0@plt+0x9124>
   1fe50:	mov	r0, #0
   1fe54:	b	1666c <dcgettext@plt>
   1fe58:	mov	r2, #5
   1fe5c:	ldr	r1, [pc, #32]	; 1fe84 <g_strcmp0@plt+0x9128>
   1fe60:	mov	r0, #0
   1fe64:	b	1666c <dcgettext@plt>
   1fe68:	mov	r2, #5
   1fe6c:	ldr	r1, [pc, #20]	; 1fe88 <g_strcmp0@plt+0x912c>
   1fe70:	mov	r0, #0
   1fe74:	b	1666c <dcgettext@plt>
   1fe78:	andeq	sl, r2, ip, ror #13
   1fe7c:	andeq	r6, r2, r8, lsr #21
   1fe80:	ldrdeq	sl, [r2], -r8
   1fe84:	ldrdeq	sl, [r2], -r0
   1fe88:	andeq	sl, r2, r4, ror #13
   1fe8c:	cmp	r0, #35	; 0x23
   1fe90:	ldrls	pc, [pc, r0, lsl #2]
   1fe94:	b	20168 <g_strcmp0@plt+0x940c>
   1fe98:	andeq	r0, r2, r8, asr r1
   1fe9c:	andeq	r0, r2, r8, asr #2
   1fea0:	andeq	r0, r2, r8, lsr r1
   1fea4:	andeq	r0, r2, r8, lsr #2
   1fea8:	andeq	r0, r2, r8, lsl r1
   1feac:	andeq	r0, r2, r8, lsl #2
   1feb0:	strdeq	r0, [r2], -r8
   1feb4:	andeq	r0, r2, r8, ror #1
   1feb8:	ldrdeq	r0, [r2], -r8
   1febc:	andeq	r0, r2, r8, asr #1
   1fec0:	strheq	r0, [r2], -r8
   1fec4:	andeq	r0, r2, r8, lsr #1
   1fec8:	muleq	r2, r8, r0
   1fecc:	andeq	r0, r2, r8, lsl #1
   1fed0:	andeq	r0, r2, r8, ror r0
   1fed4:	andeq	r0, r2, r8, rrx
   1fed8:	andeq	r0, r2, r8, asr r0
   1fedc:	andeq	r0, r2, r8, asr #32
   1fee0:	andeq	r0, r2, r8, lsr r0
   1fee4:	andeq	r0, r2, r8, lsr #32
   1fee8:	andeq	r0, r2, r8, lsl r0
   1feec:	andeq	r0, r2, r8
   1fef0:	strdeq	pc, [r1], -r8
   1fef4:	andeq	pc, r1, r8, ror #31
   1fef8:	ldrdeq	pc, [r1], -r8
   1fefc:	andeq	pc, r1, r8, asr #31
   1ff00:			; <UNDEFINED> instruction: 0x0001ffb8
   1ff04:	andeq	pc, r1, r8, lsr #31
   1ff08:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1ff0c:	andeq	pc, r1, r8, lsl #31
   1ff10:	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
   1ff14:	andeq	pc, r1, r8, ror #30
   1ff18:	andeq	pc, r1, r8, asr pc	; <UNPREDICTABLE>
   1ff1c:	andeq	pc, r1, r8, asr #30
   1ff20:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   1ff24:	andeq	pc, r1, r8, lsr #30
   1ff28:	mov	r2, #5
   1ff2c:	ldr	r1, [pc, #600]	; 2018c <g_strcmp0@plt+0x9430>
   1ff30:	mov	r0, #0
   1ff34:	b	1666c <dcgettext@plt>
   1ff38:	mov	r2, #5
   1ff3c:	ldr	r1, [pc, #588]	; 20190 <g_strcmp0@plt+0x9434>
   1ff40:	mov	r0, #0
   1ff44:	b	1666c <dcgettext@plt>
   1ff48:	mov	r2, #5
   1ff4c:	ldr	r1, [pc, #576]	; 20194 <g_strcmp0@plt+0x9438>
   1ff50:	mov	r0, #0
   1ff54:	b	1666c <dcgettext@plt>
   1ff58:	mov	r2, #5
   1ff5c:	ldr	r1, [pc, #564]	; 20198 <g_strcmp0@plt+0x943c>
   1ff60:	mov	r0, #0
   1ff64:	b	1666c <dcgettext@plt>
   1ff68:	mov	r2, #5
   1ff6c:	ldr	r1, [pc, #552]	; 2019c <g_strcmp0@plt+0x9440>
   1ff70:	mov	r0, #0
   1ff74:	b	1666c <dcgettext@plt>
   1ff78:	mov	r2, #5
   1ff7c:	ldr	r1, [pc, #540]	; 201a0 <g_strcmp0@plt+0x9444>
   1ff80:	mov	r0, #0
   1ff84:	b	1666c <dcgettext@plt>
   1ff88:	mov	r2, #5
   1ff8c:	ldr	r1, [pc, #528]	; 201a4 <g_strcmp0@plt+0x9448>
   1ff90:	mov	r0, #0
   1ff94:	b	1666c <dcgettext@plt>
   1ff98:	mov	r2, #5
   1ff9c:	ldr	r1, [pc, #516]	; 201a8 <g_strcmp0@plt+0x944c>
   1ffa0:	mov	r0, #0
   1ffa4:	b	1666c <dcgettext@plt>
   1ffa8:	mov	r2, #5
   1ffac:	ldr	r1, [pc, #504]	; 201ac <g_strcmp0@plt+0x9450>
   1ffb0:	mov	r0, #0
   1ffb4:	b	1666c <dcgettext@plt>
   1ffb8:	mov	r2, #5
   1ffbc:	ldr	r1, [pc, #492]	; 201b0 <g_strcmp0@plt+0x9454>
   1ffc0:	mov	r0, #0
   1ffc4:	b	1666c <dcgettext@plt>
   1ffc8:	mov	r2, #5
   1ffcc:	ldr	r1, [pc, #480]	; 201b4 <g_strcmp0@plt+0x9458>
   1ffd0:	mov	r0, #0
   1ffd4:	b	1666c <dcgettext@plt>
   1ffd8:	mov	r2, #5
   1ffdc:	ldr	r1, [pc, #468]	; 201b8 <g_strcmp0@plt+0x945c>
   1ffe0:	mov	r0, #0
   1ffe4:	b	1666c <dcgettext@plt>
   1ffe8:	mov	r2, #5
   1ffec:	ldr	r1, [pc, #456]	; 201bc <g_strcmp0@plt+0x9460>
   1fff0:	mov	r0, #0
   1fff4:	b	1666c <dcgettext@plt>
   1fff8:	mov	r2, #5
   1fffc:	ldr	r1, [pc, #444]	; 201c0 <g_strcmp0@plt+0x9464>
   20000:	mov	r0, #0
   20004:	b	1666c <dcgettext@plt>
   20008:	mov	r2, #5
   2000c:	ldr	r1, [pc, #432]	; 201c4 <g_strcmp0@plt+0x9468>
   20010:	mov	r0, #0
   20014:	b	1666c <dcgettext@plt>
   20018:	mov	r2, #5
   2001c:	ldr	r1, [pc, #420]	; 201c8 <g_strcmp0@plt+0x946c>
   20020:	mov	r0, #0
   20024:	b	1666c <dcgettext@plt>
   20028:	mov	r2, #5
   2002c:	ldr	r1, [pc, #408]	; 201cc <g_strcmp0@plt+0x9470>
   20030:	mov	r0, #0
   20034:	b	1666c <dcgettext@plt>
   20038:	mov	r2, #5
   2003c:	ldr	r1, [pc, #396]	; 201d0 <g_strcmp0@plt+0x9474>
   20040:	mov	r0, #0
   20044:	b	1666c <dcgettext@plt>
   20048:	mov	r2, #5
   2004c:	ldr	r1, [pc, #384]	; 201d4 <g_strcmp0@plt+0x9478>
   20050:	mov	r0, #0
   20054:	b	1666c <dcgettext@plt>
   20058:	mov	r2, #5
   2005c:	ldr	r1, [pc, #372]	; 201d8 <g_strcmp0@plt+0x947c>
   20060:	mov	r0, #0
   20064:	b	1666c <dcgettext@plt>
   20068:	mov	r2, #5
   2006c:	ldr	r1, [pc, #360]	; 201dc <g_strcmp0@plt+0x9480>
   20070:	mov	r0, #0
   20074:	b	1666c <dcgettext@plt>
   20078:	mov	r2, #5
   2007c:	ldr	r1, [pc, #348]	; 201e0 <g_strcmp0@plt+0x9484>
   20080:	mov	r0, #0
   20084:	b	1666c <dcgettext@plt>
   20088:	mov	r2, #5
   2008c:	ldr	r1, [pc, #336]	; 201e4 <g_strcmp0@plt+0x9488>
   20090:	mov	r0, #0
   20094:	b	1666c <dcgettext@plt>
   20098:	mov	r2, #5
   2009c:	ldr	r1, [pc, #324]	; 201e8 <g_strcmp0@plt+0x948c>
   200a0:	mov	r0, #0
   200a4:	b	1666c <dcgettext@plt>
   200a8:	mov	r2, #5
   200ac:	ldr	r1, [pc, #312]	; 201ec <g_strcmp0@plt+0x9490>
   200b0:	mov	r0, #0
   200b4:	b	1666c <dcgettext@plt>
   200b8:	mov	r2, #5
   200bc:	ldr	r1, [pc, #300]	; 201f0 <g_strcmp0@plt+0x9494>
   200c0:	mov	r0, #0
   200c4:	b	1666c <dcgettext@plt>
   200c8:	mov	r2, #5
   200cc:	ldr	r1, [pc, #288]	; 201f4 <g_strcmp0@plt+0x9498>
   200d0:	mov	r0, #0
   200d4:	b	1666c <dcgettext@plt>
   200d8:	mov	r2, #5
   200dc:	ldr	r1, [pc, #276]	; 201f8 <g_strcmp0@plt+0x949c>
   200e0:	mov	r0, #0
   200e4:	b	1666c <dcgettext@plt>
   200e8:	mov	r2, #5
   200ec:	ldr	r1, [pc, #264]	; 201fc <g_strcmp0@plt+0x94a0>
   200f0:	mov	r0, #0
   200f4:	b	1666c <dcgettext@plt>
   200f8:	mov	r2, #5
   200fc:	ldr	r1, [pc, #252]	; 20200 <g_strcmp0@plt+0x94a4>
   20100:	mov	r0, #0
   20104:	b	1666c <dcgettext@plt>
   20108:	mov	r2, #5
   2010c:	ldr	r1, [pc, #240]	; 20204 <g_strcmp0@plt+0x94a8>
   20110:	mov	r0, #0
   20114:	b	1666c <dcgettext@plt>
   20118:	mov	r2, #5
   2011c:	ldr	r1, [pc, #228]	; 20208 <g_strcmp0@plt+0x94ac>
   20120:	mov	r0, #0
   20124:	b	1666c <dcgettext@plt>
   20128:	mov	r2, #5
   2012c:	ldr	r1, [pc, #216]	; 2020c <g_strcmp0@plt+0x94b0>
   20130:	mov	r0, #0
   20134:	b	1666c <dcgettext@plt>
   20138:	mov	r2, #5
   2013c:	ldr	r1, [pc, #204]	; 20210 <g_strcmp0@plt+0x94b4>
   20140:	mov	r0, #0
   20144:	b	1666c <dcgettext@plt>
   20148:	mov	r2, #5
   2014c:	ldr	r1, [pc, #192]	; 20214 <g_strcmp0@plt+0x94b8>
   20150:	mov	r0, #0
   20154:	b	1666c <dcgettext@plt>
   20158:	mov	r2, #5
   2015c:	ldr	r1, [pc, #180]	; 20218 <g_strcmp0@plt+0x94bc>
   20160:	mov	r0, #0
   20164:	b	1666c <dcgettext@plt>
   20168:	push	{r4, lr}
   2016c:	bl	15f04 <pk_status_enum_to_string@plt>
   20170:	ldr	r2, [pc, #164]	; 2021c <g_strcmp0@plt+0x94c0>
   20174:	mov	r1, #16
   20178:	mov	r3, r0
   2017c:	ldr	r0, [pc, #156]	; 20220 <g_strcmp0@plt+0x94c4>
   20180:	bl	15ebc <g_log@plt>
   20184:	mov	r0, #0
   20188:	pop	{r4, pc}
   2018c:	andeq	sl, r2, r0, asr #20
   20190:	andeq	sl, r2, r8, lsl sl
   20194:	andeq	sl, r2, ip, ror #19
   20198:	andeq	sl, r2, r0, asr #19
   2019c:	andeq	sl, r2, r4, lsr #19
   201a0:	andeq	sl, r2, r0, lsl #19
   201a4:	andeq	sl, r2, r4, ror #18
   201a8:	andeq	sl, r2, r4, asr #18
   201ac:	andeq	sl, r2, r4, lsr r9
   201b0:	andeq	sl, r2, r0, lsr #18
   201b4:	andeq	sl, r2, r0, lsl #18
   201b8:	andeq	sl, r2, ip, ror #17
   201bc:	andeq	sl, r2, ip, asr #17
   201c0:			; <UNDEFINED> instruction: 0x0002a8b4
   201c4:	muleq	r2, r4, r8
   201c8:	andeq	sl, r2, r0, ror r8
   201cc:	andeq	sl, r2, r4, ror #16
   201d0:	andeq	sl, r2, r8, asr r8
   201d4:	andeq	sl, r2, r8, asr #16
   201d8:	andeq	sl, r2, r4, lsr r8
   201dc:	andeq	sl, r2, r4, lsr #16
   201e0:	andeq	sl, r2, r0, lsl r8
   201e4:	strdeq	sl, [r2], -r8
   201e8:	andeq	sl, r2, r4, ror #15
   201ec:	andeq	sl, r2, ip, asr #15
   201f0:			; <UNDEFINED> instruction: 0x0002a7b8
   201f4:	andeq	sl, r2, r8, lsl #15
   201f8:	andeq	sl, r2, r0, ror r7
   201fc:	muleq	r2, ip, r7
   20200:	andeq	sl, r2, ip, asr r7
   20204:	andeq	sl, r2, r8, asr #14
   20208:	andeq	sl, r2, ip, lsr r7
   2020c:	andeq	sl, r2, r4, lsr r7
   20210:	andeq	sl, r2, r4, lsl r7
   20214:	andeq	sl, r2, r0, lsr #14
   20218:	andeq	sl, r2, r4, lsl #14
   2021c:	andeq	sl, r2, r0, asr sl
   20220:	andeq	r6, r2, r8, lsr #21
   20224:	sub	r3, r0, #3
   20228:	push	{r4, lr}
   2022c:	mov	r4, r1
   20230:	sub	sp, sp, #8
   20234:	cmp	r3, #6
   20238:	ldrls	pc, [pc, r3, lsl #2]
   2023c:	b	20318 <g_strcmp0@plt+0x95bc>
   20240:	andeq	r0, r2, r8, lsl #5
   20244:	andeq	r0, r2, r0, lsr #5
   20248:			; <UNDEFINED> instruction: 0x000202b8
   2024c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20250:	andeq	r0, r2, r8, ror #5
   20254:	andeq	r0, r2, r0, lsl #6
   20258:	andeq	r0, r2, ip, asr r2
   2025c:	mov	r3, #5
   20260:	str	r3, [sp]
   20264:	ldr	r2, [pc, #208]	; 2033c <g_strcmp0@plt+0x95e0>
   20268:	mov	r3, r1
   2026c:	ldr	r1, [pc, #204]	; 20340 <g_strcmp0@plt+0x95e4>
   20270:	mov	r0, #0
   20274:	bl	16204 <dcngettext@plt>
   20278:	mov	r1, r4
   2027c:	add	sp, sp, #8
   20280:	pop	{r4, lr}
   20284:	b	161e0 <g_strdup_printf@plt>
   20288:	mov	r3, #5
   2028c:	str	r3, [sp]
   20290:	ldr	r2, [pc, #172]	; 20344 <g_strcmp0@plt+0x95e8>
   20294:	mov	r3, r1
   20298:	ldr	r1, [pc, #168]	; 20348 <g_strcmp0@plt+0x95ec>
   2029c:	b	20270 <g_strcmp0@plt+0x9514>
   202a0:	mov	r3, #5
   202a4:	str	r3, [sp]
   202a8:	ldr	r2, [pc, #156]	; 2034c <g_strcmp0@plt+0x95f0>
   202ac:	mov	r3, r1
   202b0:	ldr	r1, [pc, #152]	; 20350 <g_strcmp0@plt+0x95f4>
   202b4:	b	20270 <g_strcmp0@plt+0x9514>
   202b8:	mov	r3, #5
   202bc:	str	r3, [sp]
   202c0:	ldr	r2, [pc, #140]	; 20354 <g_strcmp0@plt+0x95f8>
   202c4:	mov	r3, r1
   202c8:	ldr	r1, [pc, #136]	; 20358 <g_strcmp0@plt+0x95fc>
   202cc:	b	20270 <g_strcmp0@plt+0x9514>
   202d0:	mov	r3, #5
   202d4:	str	r3, [sp]
   202d8:	ldr	r2, [pc, #124]	; 2035c <g_strcmp0@plt+0x9600>
   202dc:	mov	r3, r1
   202e0:	ldr	r1, [pc, #120]	; 20360 <g_strcmp0@plt+0x9604>
   202e4:	b	20270 <g_strcmp0@plt+0x9514>
   202e8:	mov	r3, #5
   202ec:	str	r3, [sp]
   202f0:	ldr	r2, [pc, #108]	; 20364 <g_strcmp0@plt+0x9608>
   202f4:	mov	r3, r1
   202f8:	ldr	r1, [pc, #104]	; 20368 <g_strcmp0@plt+0x960c>
   202fc:	b	20270 <g_strcmp0@plt+0x9514>
   20300:	mov	r3, #5
   20304:	str	r3, [sp]
   20308:	ldr	r2, [pc, #92]	; 2036c <g_strcmp0@plt+0x9610>
   2030c:	mov	r3, r1
   20310:	ldr	r1, [pc, #88]	; 20370 <g_strcmp0@plt+0x9614>
   20314:	b	20270 <g_strcmp0@plt+0x9514>
   20318:	bl	16960 <pk_info_enum_to_string@plt>
   2031c:	ldr	r2, [pc, #80]	; 20374 <g_strcmp0@plt+0x9618>
   20320:	mov	r1, #16
   20324:	mov	r3, r0
   20328:	ldr	r0, [pc, #72]	; 20378 <g_strcmp0@plt+0x961c>
   2032c:	bl	15ebc <g_log@plt>
   20330:	mov	r0, #0
   20334:	add	sp, sp, #8
   20338:	pop	{r4, pc}
   2033c:	andeq	sl, r2, r4, asr fp
   20340:	andeq	sl, r2, r8, ror #22
   20344:	andeq	sl, r2, r8, ror #20
   20348:	andeq	sl, r2, ip, ror sl
   2034c:	andeq	sl, r2, r4, lsr #22
   20350:	andeq	sl, r2, ip, lsr fp
   20354:	muleq	r2, r0, sl
   20358:	muleq	r2, ip, sl
   2035c:	strdeq	sl, [r2], -ip
   20360:	andeq	sl, r2, r0, lsl fp
   20364:	andeq	sl, r2, r8, lsr #21
   20368:	andeq	sl, r2, r0, asr #21
   2036c:	ldrdeq	sl, [r2], -r4
   20370:	andeq	sl, r2, r8, ror #21
   20374:	andeq	sl, r2, ip, ror fp
   20378:	andeq	r6, r2, r8, lsr #21
   2037c:	sub	r3, r0, #1
   20380:	cmp	r3, #23
   20384:	ldrls	pc, [pc, r3, lsl #2]
   20388:	b	2049c <g_strcmp0@plt+0x9740>
   2038c:	strdeq	r0, [r2], -ip
   20390:	andeq	r0, r2, ip, lsl #8
   20394:	andeq	r0, r2, ip, lsl r4
   20398:	andeq	r0, r2, ip, lsr #8
   2039c:	andeq	r0, r2, ip, lsr r4
   203a0:	andeq	r0, r2, ip, asr #8
   203a4:	andeq	r0, r2, ip, asr r4
   203a8:	andeq	r0, r2, ip, ror #8
   203ac:	andeq	r0, r2, ip, ror r4
   203b0:	muleq	r2, ip, r4
   203b4:	muleq	r2, ip, r4
   203b8:	muleq	r2, ip, r4
   203bc:	muleq	r2, ip, r4
   203c0:	muleq	r2, ip, r4
   203c4:	muleq	r2, ip, r4
   203c8:	strdeq	r0, [r2], -ip
   203cc:	andeq	r0, r2, ip, lsl #8
   203d0:	muleq	r2, ip, r4
   203d4:	muleq	r2, ip, r4
   203d8:	muleq	r2, ip, r4
   203dc:	muleq	r2, ip, r4
   203e0:	muleq	r2, ip, r4
   203e4:	andeq	r0, r2, ip, lsl #9
   203e8:	andeq	r0, r2, ip, ror #7
   203ec:	mov	r2, #5
   203f0:	ldr	r1, [pc, #200]	; 204c0 <g_strcmp0@plt+0x9764>
   203f4:	mov	r0, #0
   203f8:	b	1666c <dcgettext@plt>
   203fc:	mov	r2, #5
   20400:	ldr	r1, [pc, #188]	; 204c4 <g_strcmp0@plt+0x9768>
   20404:	mov	r0, #0
   20408:	b	1666c <dcgettext@plt>
   2040c:	mov	r2, #5
   20410:	ldr	r1, [pc, #176]	; 204c8 <g_strcmp0@plt+0x976c>
   20414:	mov	r0, #0
   20418:	b	1666c <dcgettext@plt>
   2041c:	mov	r2, #5
   20420:	ldr	r1, [pc, #164]	; 204cc <g_strcmp0@plt+0x9770>
   20424:	mov	r0, #0
   20428:	b	1666c <dcgettext@plt>
   2042c:	mov	r2, #5
   20430:	ldr	r1, [pc, #152]	; 204d0 <g_strcmp0@plt+0x9774>
   20434:	mov	r0, #0
   20438:	b	1666c <dcgettext@plt>
   2043c:	mov	r2, #5
   20440:	ldr	r1, [pc, #140]	; 204d4 <g_strcmp0@plt+0x9778>
   20444:	mov	r0, #0
   20448:	b	1666c <dcgettext@plt>
   2044c:	mov	r2, #5
   20450:	ldr	r1, [pc, #128]	; 204d8 <g_strcmp0@plt+0x977c>
   20454:	mov	r0, #0
   20458:	b	1666c <dcgettext@plt>
   2045c:	mov	r2, #5
   20460:	ldr	r1, [pc, #116]	; 204dc <g_strcmp0@plt+0x9780>
   20464:	mov	r0, #0
   20468:	b	1666c <dcgettext@plt>
   2046c:	mov	r2, #5
   20470:	ldr	r1, [pc, #104]	; 204e0 <g_strcmp0@plt+0x9784>
   20474:	mov	r0, #0
   20478:	b	1666c <dcgettext@plt>
   2047c:	mov	r2, #5
   20480:	ldr	r1, [pc, #92]	; 204e4 <g_strcmp0@plt+0x9788>
   20484:	mov	r0, #0
   20488:	b	1666c <dcgettext@plt>
   2048c:	mov	r2, #5
   20490:	ldr	r1, [pc, #80]	; 204e8 <g_strcmp0@plt+0x978c>
   20494:	mov	r0, #0
   20498:	b	1666c <dcgettext@plt>
   2049c:	push	{r4, lr}
   204a0:	bl	16960 <pk_info_enum_to_string@plt>
   204a4:	ldr	r2, [pc, #64]	; 204ec <g_strcmp0@plt+0x9790>
   204a8:	mov	r1, #16
   204ac:	mov	r3, r0
   204b0:	ldr	r0, [pc, #56]	; 204f0 <g_strcmp0@plt+0x9794>
   204b4:	bl	15ebc <g_log@plt>
   204b8:	mov	r0, #0
   204bc:	pop	{r4, pc}
   204c0:	andeq	sl, r2, r0, lsr #24
   204c4:	andeq	r7, r2, r4, lsr #17
   204c8:	andeq	sl, r2, r4, lsl ip
   204cc:	muleq	r2, ip, fp
   204d0:	strdeq	sl, [r2], -r0
   204d4:	andeq	sl, r2, ip, lsr #23
   204d8:	andeq	sl, r2, r0, ror #23
   204dc:			; <UNDEFINED> instruction: 0x0002abbc
   204e0:	ldrdeq	sl, [r2], -r0
   204e4:	andeq	sl, r2, r4, lsl #24
   204e8:	andeq	sl, r2, r8, lsr #24
   204ec:	andeq	sl, r2, r4, lsr ip
   204f0:	andeq	r6, r2, r8, lsr #21
   204f4:	sub	r3, r0, #10
   204f8:	cmp	r3, #12
   204fc:	ldrls	pc, [pc, r3, lsl #2]
   20500:	b	205c8 <g_strcmp0@plt+0x986c>
   20504:	andeq	r0, r2, r8, asr #10
   20508:	andeq	r0, r2, r8, asr r5
   2050c:	andeq	r0, r2, r8, ror #10
   20510:	andeq	r0, r2, r8, ror r5
   20514:	andeq	r0, r2, r8, lsl #11
   20518:	muleq	r2, r8, r5
   2051c:	andeq	r0, r2, r8, asr #11
   20520:	andeq	r0, r2, r8, asr #11
   20524:	andeq	r0, r2, r8, asr #11
   20528:	andeq	r0, r2, r8, lsr #11
   2052c:	andeq	r0, r2, r8, asr #11
   20530:			; <UNDEFINED> instruction: 0x000205b8
   20534:	andeq	r0, r2, r8, lsr r5
   20538:	mov	r2, #5
   2053c:	ldr	r1, [pc, #168]	; 205ec <g_strcmp0@plt+0x9890>
   20540:	mov	r0, #0
   20544:	b	1666c <dcgettext@plt>
   20548:	mov	r2, #5
   2054c:	ldr	r1, [pc, #156]	; 205f0 <g_strcmp0@plt+0x9894>
   20550:	mov	r0, #0
   20554:	b	1666c <dcgettext@plt>
   20558:	mov	r2, #5
   2055c:	ldr	r1, [pc, #144]	; 205f4 <g_strcmp0@plt+0x9898>
   20560:	mov	r0, #0
   20564:	b	1666c <dcgettext@plt>
   20568:	mov	r2, #5
   2056c:	ldr	r1, [pc, #132]	; 205f8 <g_strcmp0@plt+0x989c>
   20570:	mov	r0, #0
   20574:	b	1666c <dcgettext@plt>
   20578:	mov	r2, #5
   2057c:	ldr	r1, [pc, #120]	; 205fc <g_strcmp0@plt+0x98a0>
   20580:	mov	r0, #0
   20584:	b	1666c <dcgettext@plt>
   20588:	mov	r2, #5
   2058c:	ldr	r1, [pc, #108]	; 20600 <g_strcmp0@plt+0x98a4>
   20590:	mov	r0, #0
   20594:	b	1666c <dcgettext@plt>
   20598:	mov	r2, #5
   2059c:	ldr	r1, [pc, #96]	; 20604 <g_strcmp0@plt+0x98a8>
   205a0:	mov	r0, #0
   205a4:	b	1666c <dcgettext@plt>
   205a8:	mov	r2, #5
   205ac:	ldr	r1, [pc, #84]	; 20608 <g_strcmp0@plt+0x98ac>
   205b0:	mov	r0, #0
   205b4:	b	1666c <dcgettext@plt>
   205b8:	mov	r2, #5
   205bc:	ldr	r1, [pc, #72]	; 2060c <g_strcmp0@plt+0x98b0>
   205c0:	mov	r0, #0
   205c4:	b	1666c <dcgettext@plt>
   205c8:	push	{r4, lr}
   205cc:	bl	16960 <pk_info_enum_to_string@plt>
   205d0:	ldr	r2, [pc, #56]	; 20610 <g_strcmp0@plt+0x98b4>
   205d4:	mov	r1, #16
   205d8:	mov	r3, r0
   205dc:	ldr	r0, [pc, #48]	; 20614 <g_strcmp0@plt+0x98b8>
   205e0:	bl	15ebc <g_log@plt>
   205e4:	mov	r0, #0
   205e8:	pop	{r4, pc}
   205ec:			; <UNDEFINED> instruction: 0x0002acb0
   205f0:	andeq	sl, r2, ip, asr #24
   205f4:	andeq	sl, r2, r8, asr ip
   205f8:	andeq	sl, r2, r4, ror #24
   205fc:	andeq	sl, r2, r0, ror ip
   20600:	andeq	sl, r2, ip, ror ip
   20604:	andeq	sl, r2, r8, lsl #25
   20608:	muleq	r2, r4, ip
   2060c:	andeq	sl, r2, r4, lsr #25
   20610:	andeq	sl, r2, r4, lsr ip
   20614:	andeq	r6, r2, r8, lsr #21
   20618:	sub	r3, r0, #10
   2061c:	cmp	r3, #12
   20620:	ldrls	pc, [pc, r3, lsl #2]
   20624:	b	206ec <g_strcmp0@plt+0x9990>
   20628:	andeq	r0, r2, ip, ror #12
   2062c:	andeq	r0, r2, ip, ror r6
   20630:	andeq	r0, r2, ip, lsl #13
   20634:	muleq	r2, ip, r6
   20638:	andeq	r0, r2, ip, lsr #13
   2063c:			; <UNDEFINED> instruction: 0x000206bc
   20640:	andeq	r0, r2, ip, ror #13
   20644:	andeq	r0, r2, ip, ror #13
   20648:	andeq	r0, r2, ip, ror #13
   2064c:	andeq	r0, r2, ip, asr #13
   20650:	andeq	r0, r2, ip, ror #13
   20654:	ldrdeq	r0, [r2], -ip
   20658:	andeq	r0, r2, ip, asr r6
   2065c:	mov	r2, #5
   20660:	ldr	r1, [pc, #168]	; 20710 <g_strcmp0@plt+0x99b4>
   20664:	mov	r0, #0
   20668:	b	1666c <dcgettext@plt>
   2066c:	mov	r2, #5
   20670:	ldr	r1, [pc, #156]	; 20714 <g_strcmp0@plt+0x99b8>
   20674:	mov	r0, #0
   20678:	b	1666c <dcgettext@plt>
   2067c:	mov	r2, #5
   20680:	ldr	r1, [pc, #144]	; 20718 <g_strcmp0@plt+0x99bc>
   20684:	mov	r0, #0
   20688:	b	1666c <dcgettext@plt>
   2068c:	mov	r2, #5
   20690:	ldr	r1, [pc, #132]	; 2071c <g_strcmp0@plt+0x99c0>
   20694:	mov	r0, #0
   20698:	b	1666c <dcgettext@plt>
   2069c:	mov	r2, #5
   206a0:	ldr	r1, [pc, #120]	; 20720 <g_strcmp0@plt+0x99c4>
   206a4:	mov	r0, #0
   206a8:	b	1666c <dcgettext@plt>
   206ac:	mov	r2, #5
   206b0:	ldr	r1, [pc, #108]	; 20724 <g_strcmp0@plt+0x99c8>
   206b4:	mov	r0, #0
   206b8:	b	1666c <dcgettext@plt>
   206bc:	mov	r2, #5
   206c0:	ldr	r1, [pc, #96]	; 20728 <g_strcmp0@plt+0x99cc>
   206c4:	mov	r0, #0
   206c8:	b	1666c <dcgettext@plt>
   206cc:	mov	r2, #5
   206d0:	ldr	r1, [pc, #84]	; 2072c <g_strcmp0@plt+0x99d0>
   206d4:	mov	r0, #0
   206d8:	b	1666c <dcgettext@plt>
   206dc:	mov	r2, #5
   206e0:	ldr	r1, [pc, #72]	; 20730 <g_strcmp0@plt+0x99d4>
   206e4:	mov	r0, #0
   206e8:	b	1666c <dcgettext@plt>
   206ec:	push	{r4, lr}
   206f0:	bl	16960 <pk_info_enum_to_string@plt>
   206f4:	ldr	r2, [pc, #56]	; 20734 <g_strcmp0@plt+0x99d8>
   206f8:	mov	r1, #16
   206fc:	mov	r3, r0
   20700:	ldr	r0, [pc, #48]	; 20738 <g_strcmp0@plt+0x99dc>
   20704:	bl	15ebc <g_log@plt>
   20708:	mov	r0, #0
   2070c:	pop	{r4, pc}
   20710:	andeq	sl, r2, ip, lsl #26
   20714:	andeq	sl, r2, r0, asr #25
   20718:	andeq	sl, r2, ip, asr #25
   2071c:	andeq	r7, r2, r4, lsr #17
   20720:	ldrdeq	sl, [r2], -r4
   20724:	ldrdeq	sl, [r2], -ip
   20728:	andeq	sl, r2, r8, ror #25
   2072c:	strdeq	sl, [r2], -r4
   20730:	andeq	sl, r2, r0, lsl #26
   20734:	andeq	sl, r2, r4, lsr ip
   20738:	andeq	r6, r2, r8, lsr #21
   2073c:	cmp	r0, #32
   20740:	ldrls	pc, [pc, r0, lsl #2]
   20744:	b	209bc <g_strcmp0@plt+0x9c60>
   20748:	andeq	r0, r2, ip, lsr #19
   2074c:	muleq	r2, ip, r9
   20750:	andeq	r0, r2, ip, lsl #19
   20754:	andeq	r0, r2, ip, ror r9
   20758:	andeq	r0, r2, ip, ror #18
   2075c:	andeq	r0, r2, ip, asr r9
   20760:	andeq	r0, r2, ip, asr #18
   20764:	andeq	r0, r2, ip, lsr r9
   20768:	andeq	r0, r2, ip, lsr #18
   2076c:	andeq	r0, r2, ip, lsl r9
   20770:	andeq	r0, r2, ip, lsl #18
   20774:	strdeq	r0, [r2], -ip
   20778:	andeq	r0, r2, ip, ror #17
   2077c:	ldrdeq	r0, [r2], -ip
   20780:	andeq	r0, r2, ip, asr #17
   20784:			; <UNDEFINED> instruction: 0x000208bc
   20788:	andeq	r0, r2, ip, lsr #17
   2078c:	muleq	r2, ip, r8
   20790:	andeq	r0, r2, ip, lsl #17
   20794:	andeq	r0, r2, ip, ror r8
   20798:	andeq	r0, r2, ip, ror #16
   2079c:	andeq	r0, r2, ip, asr r8
   207a0:	andeq	r0, r2, ip, asr #16
   207a4:	andeq	r0, r2, ip, lsr r8
   207a8:	andeq	r0, r2, ip, lsr #16
   207ac:	andeq	r0, r2, ip, lsl r8
   207b0:	andeq	r0, r2, ip, lsl #16
   207b4:	strdeq	r0, [r2], -ip
   207b8:	andeq	r0, r2, ip, ror #15
   207bc:	ldrdeq	r0, [r2], -ip
   207c0:	andeq	r0, r2, ip, ror r9
   207c4:	andeq	r0, r2, ip, ror #18
   207c8:	andeq	r0, r2, ip, asr #15
   207cc:	mov	r2, #5
   207d0:	ldr	r1, [pc, #520]	; 209e0 <g_strcmp0@plt+0x9c84>
   207d4:	mov	r0, #0
   207d8:	b	1666c <dcgettext@plt>
   207dc:	mov	r2, #5
   207e0:	ldr	r1, [pc, #508]	; 209e4 <g_strcmp0@plt+0x9c88>
   207e4:	mov	r0, #0
   207e8:	b	1666c <dcgettext@plt>
   207ec:	mov	r2, #5
   207f0:	ldr	r1, [pc, #496]	; 209e8 <g_strcmp0@plt+0x9c8c>
   207f4:	mov	r0, #0
   207f8:	b	1666c <dcgettext@plt>
   207fc:	mov	r2, #5
   20800:	ldr	r1, [pc, #484]	; 209ec <g_strcmp0@plt+0x9c90>
   20804:	mov	r0, #0
   20808:	b	1666c <dcgettext@plt>
   2080c:	mov	r2, #5
   20810:	ldr	r1, [pc, #472]	; 209f0 <g_strcmp0@plt+0x9c94>
   20814:	mov	r0, #0
   20818:	b	1666c <dcgettext@plt>
   2081c:	mov	r2, #5
   20820:	ldr	r1, [pc, #460]	; 209f4 <g_strcmp0@plt+0x9c98>
   20824:	mov	r0, #0
   20828:	b	1666c <dcgettext@plt>
   2082c:	mov	r2, #5
   20830:	ldr	r1, [pc, #448]	; 209f8 <g_strcmp0@plt+0x9c9c>
   20834:	mov	r0, #0
   20838:	b	1666c <dcgettext@plt>
   2083c:	mov	r2, #5
   20840:	ldr	r1, [pc, #436]	; 209fc <g_strcmp0@plt+0x9ca0>
   20844:	mov	r0, #0
   20848:	b	1666c <dcgettext@plt>
   2084c:	mov	r2, #5
   20850:	ldr	r1, [pc, #424]	; 20a00 <g_strcmp0@plt+0x9ca4>
   20854:	mov	r0, #0
   20858:	b	1666c <dcgettext@plt>
   2085c:	mov	r2, #5
   20860:	ldr	r1, [pc, #412]	; 20a04 <g_strcmp0@plt+0x9ca8>
   20864:	mov	r0, #0
   20868:	b	1666c <dcgettext@plt>
   2086c:	mov	r2, #5
   20870:	ldr	r1, [pc, #400]	; 20a08 <g_strcmp0@plt+0x9cac>
   20874:	mov	r0, #0
   20878:	b	1666c <dcgettext@plt>
   2087c:	mov	r2, #5
   20880:	ldr	r1, [pc, #388]	; 20a0c <g_strcmp0@plt+0x9cb0>
   20884:	mov	r0, #0
   20888:	b	1666c <dcgettext@plt>
   2088c:	mov	r2, #5
   20890:	ldr	r1, [pc, #376]	; 20a10 <g_strcmp0@plt+0x9cb4>
   20894:	mov	r0, #0
   20898:	b	1666c <dcgettext@plt>
   2089c:	mov	r2, #5
   208a0:	ldr	r1, [pc, #364]	; 20a14 <g_strcmp0@plt+0x9cb8>
   208a4:	mov	r0, #0
   208a8:	b	1666c <dcgettext@plt>
   208ac:	mov	r2, #5
   208b0:	ldr	r1, [pc, #352]	; 20a18 <g_strcmp0@plt+0x9cbc>
   208b4:	mov	r0, #0
   208b8:	b	1666c <dcgettext@plt>
   208bc:	mov	r2, #5
   208c0:	ldr	r1, [pc, #340]	; 20a1c <g_strcmp0@plt+0x9cc0>
   208c4:	mov	r0, #0
   208c8:	b	1666c <dcgettext@plt>
   208cc:	mov	r2, #5
   208d0:	ldr	r1, [pc, #328]	; 20a20 <g_strcmp0@plt+0x9cc4>
   208d4:	mov	r0, #0
   208d8:	b	1666c <dcgettext@plt>
   208dc:	mov	r2, #5
   208e0:	ldr	r1, [pc, #316]	; 20a24 <g_strcmp0@plt+0x9cc8>
   208e4:	mov	r0, #0
   208e8:	b	1666c <dcgettext@plt>
   208ec:	mov	r2, #5
   208f0:	ldr	r1, [pc, #304]	; 20a28 <g_strcmp0@plt+0x9ccc>
   208f4:	mov	r0, #0
   208f8:	b	1666c <dcgettext@plt>
   208fc:	mov	r2, #5
   20900:	ldr	r1, [pc, #292]	; 20a2c <g_strcmp0@plt+0x9cd0>
   20904:	mov	r0, #0
   20908:	b	1666c <dcgettext@plt>
   2090c:	mov	r2, #5
   20910:	ldr	r1, [pc, #280]	; 20a30 <g_strcmp0@plt+0x9cd4>
   20914:	mov	r0, #0
   20918:	b	1666c <dcgettext@plt>
   2091c:	mov	r2, #5
   20920:	ldr	r1, [pc, #268]	; 20a34 <g_strcmp0@plt+0x9cd8>
   20924:	mov	r0, #0
   20928:	b	1666c <dcgettext@plt>
   2092c:	mov	r2, #5
   20930:	ldr	r1, [pc, #256]	; 20a38 <g_strcmp0@plt+0x9cdc>
   20934:	mov	r0, #0
   20938:	b	1666c <dcgettext@plt>
   2093c:	mov	r2, #5
   20940:	ldr	r1, [pc, #244]	; 20a3c <g_strcmp0@plt+0x9ce0>
   20944:	mov	r0, #0
   20948:	b	1666c <dcgettext@plt>
   2094c:	mov	r2, #5
   20950:	ldr	r1, [pc, #232]	; 20a40 <g_strcmp0@plt+0x9ce4>
   20954:	mov	r0, #0
   20958:	b	1666c <dcgettext@plt>
   2095c:	mov	r2, #5
   20960:	ldr	r1, [pc, #220]	; 20a44 <g_strcmp0@plt+0x9ce8>
   20964:	mov	r0, #0
   20968:	b	1666c <dcgettext@plt>
   2096c:	mov	r2, #5
   20970:	ldr	r1, [pc, #208]	; 20a48 <g_strcmp0@plt+0x9cec>
   20974:	mov	r0, #0
   20978:	b	1666c <dcgettext@plt>
   2097c:	mov	r2, #5
   20980:	ldr	r1, [pc, #196]	; 20a4c <g_strcmp0@plt+0x9cf0>
   20984:	mov	r0, #0
   20988:	b	1666c <dcgettext@plt>
   2098c:	mov	r2, #5
   20990:	ldr	r1, [pc, #184]	; 20a50 <g_strcmp0@plt+0x9cf4>
   20994:	mov	r0, #0
   20998:	b	1666c <dcgettext@plt>
   2099c:	mov	r2, #5
   209a0:	ldr	r1, [pc, #172]	; 20a54 <g_strcmp0@plt+0x9cf8>
   209a4:	mov	r0, #0
   209a8:	b	1666c <dcgettext@plt>
   209ac:	mov	r2, #5
   209b0:	ldr	r1, [pc, #160]	; 20a58 <g_strcmp0@plt+0x9cfc>
   209b4:	mov	r0, #0
   209b8:	b	1666c <dcgettext@plt>
   209bc:	push	{r4, lr}
   209c0:	bl	15e98 <pk_role_enum_to_string@plt>
   209c4:	ldr	r2, [pc, #144]	; 20a5c <g_strcmp0@plt+0x9d00>
   209c8:	mov	r1, #16
   209cc:	mov	r3, r0
   209d0:	ldr	r0, [pc, #136]	; 20a60 <g_strcmp0@plt+0x9d04>
   209d4:	bl	15ebc <g_log@plt>
   209d8:	mov	r0, #0
   209dc:	pop	{r4, pc}
   209e0:	andeq	sl, r2, r0, ror #28
   209e4:	andeq	sl, r2, r0, ror #30
   209e8:	andeq	sl, r2, r4, asr #30
   209ec:	andeq	sl, r2, r0, lsr pc
   209f0:	andeq	sl, r2, r4, lsl #30
   209f4:	andeq	sl, r2, r0, ror r7
   209f8:	strdeq	sl, [r2], -r4
   209fc:	andeq	sl, r2, ip, lsr #29
   20a00:	andeq	sl, r2, r8, lsl lr
   20a04:	ldrdeq	sl, [r2], -r0
   20a08:			; <UNDEFINED> instruction: 0x0002adbc
   20a0c:	andeq	sl, r2, r8, lsr #27
   20a10:	muleq	r2, r4, sp
   20a14:	andeq	sl, r2, ip, lsl #29
   20a18:	andeq	sl, r2, r4, ror lr
   20a1c:	andeq	sl, r2, ip, asr #28
   20a20:	andeq	sl, r2, r0, ror ip
   20a24:	strdeq	sl, [r2], -ip
   20a28:	andeq	sl, r2, r4, asr #29
   20a2c:	andeq	sl, r2, r4, ror #24
   20a30:	andeq	sl, r2, ip, ror #27
   20a34:	andeq	sl, r2, r4, lsl #27
   20a38:	andeq	sl, r2, r8, asr #26
   20a3c:	andeq	sl, r2, r0, ror sp
   20a40:	andeq	sl, r2, ip, lsr #28
   20a44:	ldrdeq	sl, [r2], -ip
   20a48:	muleq	r2, r8, lr
   20a4c:	andeq	sl, r2, r0, ror #26
   20a50:	andeq	sl, r2, r0, lsr sp
   20a54:	andeq	sl, r2, r4, ror #16
   20a58:	andeq	sl, r2, ip, lsl sp
   20a5c:	andeq	sl, r2, r8, ror pc
   20a60:	andeq	r6, r2, r8, lsr #21
   20a64:	cmp	r0, #32
   20a68:	ldrls	pc, [pc, r0, lsl #2]
   20a6c:	b	20ce4 <g_strcmp0@plt+0x9f88>
   20a70:	ldrdeq	r0, [r2], -r4
   20a74:	andeq	r0, r2, r4, asr #25
   20a78:			; <UNDEFINED> instruction: 0x00020cb4
   20a7c:	andeq	r0, r2, r4, lsr #25
   20a80:	muleq	r2, r4, ip
   20a84:	andeq	r0, r2, r4, lsl #25
   20a88:	andeq	r0, r2, r4, ror ip
   20a8c:	andeq	r0, r2, r4, ror #24
   20a90:	andeq	r0, r2, r4, asr ip
   20a94:	andeq	r0, r2, r4, asr #24
   20a98:	andeq	r0, r2, r4, lsr ip
   20a9c:	andeq	r0, r2, r4, lsr #24
   20aa0:	andeq	r0, r2, r4, lsl ip
   20aa4:	andeq	r0, r2, r4, lsl #24
   20aa8:	strdeq	r0, [r2], -r4
   20aac:	andeq	r0, r2, r4, ror #23
   20ab0:	ldrdeq	r0, [r2], -r4
   20ab4:	andeq	r0, r2, r4, asr #23
   20ab8:			; <UNDEFINED> instruction: 0x00020bb4
   20abc:	andeq	r0, r2, r4, lsr #23
   20ac0:	muleq	r2, r4, fp
   20ac4:	andeq	r0, r2, r4, lsl #23
   20ac8:	andeq	r0, r2, r4, ror fp
   20acc:	andeq	r0, r2, r4, ror #22
   20ad0:	andeq	r0, r2, r4, asr fp
   20ad4:	andeq	r0, r2, r4, asr #22
   20ad8:	andeq	r0, r2, r4, lsr fp
   20adc:	andeq	r0, r2, r4, lsr #22
   20ae0:	andeq	r0, r2, r4, lsl fp
   20ae4:	andeq	r0, r2, r4, lsl #22
   20ae8:	andeq	r0, r2, r4, lsr #25
   20aec:	muleq	r2, r4, ip
   20af0:	strdeq	r0, [r2], -r4
   20af4:	mov	r2, #5
   20af8:	ldr	r1, [pc, #520]	; 20d08 <g_strcmp0@plt+0x9fac>
   20afc:	mov	r0, #0
   20b00:	b	1666c <dcgettext@plt>
   20b04:	mov	r2, #5
   20b08:	ldr	r1, [pc, #508]	; 20d0c <g_strcmp0@plt+0x9fb0>
   20b0c:	mov	r0, #0
   20b10:	b	1666c <dcgettext@plt>
   20b14:	mov	r2, #5
   20b18:	ldr	r1, [pc, #496]	; 20d10 <g_strcmp0@plt+0x9fb4>
   20b1c:	mov	r0, #0
   20b20:	b	1666c <dcgettext@plt>
   20b24:	mov	r2, #5
   20b28:	ldr	r1, [pc, #484]	; 20d14 <g_strcmp0@plt+0x9fb8>
   20b2c:	mov	r0, #0
   20b30:	b	1666c <dcgettext@plt>
   20b34:	mov	r2, #5
   20b38:	ldr	r1, [pc, #472]	; 20d18 <g_strcmp0@plt+0x9fbc>
   20b3c:	mov	r0, #0
   20b40:	b	1666c <dcgettext@plt>
   20b44:	mov	r2, #5
   20b48:	ldr	r1, [pc, #460]	; 20d1c <g_strcmp0@plt+0x9fc0>
   20b4c:	mov	r0, #0
   20b50:	b	1666c <dcgettext@plt>
   20b54:	mov	r2, #5
   20b58:	ldr	r1, [pc, #448]	; 20d20 <g_strcmp0@plt+0x9fc4>
   20b5c:	mov	r0, #0
   20b60:	b	1666c <dcgettext@plt>
   20b64:	mov	r2, #5
   20b68:	ldr	r1, [pc, #436]	; 20d24 <g_strcmp0@plt+0x9fc8>
   20b6c:	mov	r0, #0
   20b70:	b	1666c <dcgettext@plt>
   20b74:	mov	r2, #5
   20b78:	ldr	r1, [pc, #424]	; 20d28 <g_strcmp0@plt+0x9fcc>
   20b7c:	mov	r0, #0
   20b80:	b	1666c <dcgettext@plt>
   20b84:	mov	r2, #5
   20b88:	ldr	r1, [pc, #412]	; 20d2c <g_strcmp0@plt+0x9fd0>
   20b8c:	mov	r0, #0
   20b90:	b	1666c <dcgettext@plt>
   20b94:	mov	r2, #5
   20b98:	ldr	r1, [pc, #400]	; 20d30 <g_strcmp0@plt+0x9fd4>
   20b9c:	mov	r0, #0
   20ba0:	b	1666c <dcgettext@plt>
   20ba4:	mov	r2, #5
   20ba8:	ldr	r1, [pc, #388]	; 20d34 <g_strcmp0@plt+0x9fd8>
   20bac:	mov	r0, #0
   20bb0:	b	1666c <dcgettext@plt>
   20bb4:	mov	r2, #5
   20bb8:	ldr	r1, [pc, #376]	; 20d38 <g_strcmp0@plt+0x9fdc>
   20bbc:	mov	r0, #0
   20bc0:	b	1666c <dcgettext@plt>
   20bc4:	mov	r2, #5
   20bc8:	ldr	r1, [pc, #364]	; 20d3c <g_strcmp0@plt+0x9fe0>
   20bcc:	mov	r0, #0
   20bd0:	b	1666c <dcgettext@plt>
   20bd4:	mov	r2, #5
   20bd8:	ldr	r1, [pc, #352]	; 20d40 <g_strcmp0@plt+0x9fe4>
   20bdc:	mov	r0, #0
   20be0:	b	1666c <dcgettext@plt>
   20be4:	mov	r2, #5
   20be8:	ldr	r1, [pc, #340]	; 20d44 <g_strcmp0@plt+0x9fe8>
   20bec:	mov	r0, #0
   20bf0:	b	1666c <dcgettext@plt>
   20bf4:	mov	r2, #5
   20bf8:	ldr	r1, [pc, #328]	; 20d48 <g_strcmp0@plt+0x9fec>
   20bfc:	mov	r0, #0
   20c00:	b	1666c <dcgettext@plt>
   20c04:	mov	r2, #5
   20c08:	ldr	r1, [pc, #316]	; 20d4c <g_strcmp0@plt+0x9ff0>
   20c0c:	mov	r0, #0
   20c10:	b	1666c <dcgettext@plt>
   20c14:	mov	r2, #5
   20c18:	ldr	r1, [pc, #304]	; 20d50 <g_strcmp0@plt+0x9ff4>
   20c1c:	mov	r0, #0
   20c20:	b	1666c <dcgettext@plt>
   20c24:	mov	r2, #5
   20c28:	ldr	r1, [pc, #292]	; 20d54 <g_strcmp0@plt+0x9ff8>
   20c2c:	mov	r0, #0
   20c30:	b	1666c <dcgettext@plt>
   20c34:	mov	r2, #5
   20c38:	ldr	r1, [pc, #280]	; 20d58 <g_strcmp0@plt+0x9ffc>
   20c3c:	mov	r0, #0
   20c40:	b	1666c <dcgettext@plt>
   20c44:	mov	r2, #5
   20c48:	ldr	r1, [pc, #268]	; 20d5c <g_strcmp0@plt+0xa000>
   20c4c:	mov	r0, #0
   20c50:	b	1666c <dcgettext@plt>
   20c54:	mov	r2, #5
   20c58:	ldr	r1, [pc, #256]	; 20d60 <g_strcmp0@plt+0xa004>
   20c5c:	mov	r0, #0
   20c60:	b	1666c <dcgettext@plt>
   20c64:	mov	r2, #5
   20c68:	ldr	r1, [pc, #244]	; 20d64 <g_strcmp0@plt+0xa008>
   20c6c:	mov	r0, #0
   20c70:	b	1666c <dcgettext@plt>
   20c74:	mov	r2, #5
   20c78:	ldr	r1, [pc, #232]	; 20d68 <g_strcmp0@plt+0xa00c>
   20c7c:	mov	r0, #0
   20c80:	b	1666c <dcgettext@plt>
   20c84:	mov	r2, #5
   20c88:	ldr	r1, [pc, #220]	; 20d6c <g_strcmp0@plt+0xa010>
   20c8c:	mov	r0, #0
   20c90:	b	1666c <dcgettext@plt>
   20c94:	mov	r2, #5
   20c98:	ldr	r1, [pc, #208]	; 20d70 <g_strcmp0@plt+0xa014>
   20c9c:	mov	r0, #0
   20ca0:	b	1666c <dcgettext@plt>
   20ca4:	mov	r2, #5
   20ca8:	ldr	r1, [pc, #196]	; 20d74 <g_strcmp0@plt+0xa018>
   20cac:	mov	r0, #0
   20cb0:	b	1666c <dcgettext@plt>
   20cb4:	mov	r2, #5
   20cb8:	ldr	r1, [pc, #184]	; 20d78 <g_strcmp0@plt+0xa01c>
   20cbc:	mov	r0, #0
   20cc0:	b	1666c <dcgettext@plt>
   20cc4:	mov	r2, #5
   20cc8:	ldr	r1, [pc, #172]	; 20d7c <g_strcmp0@plt+0xa020>
   20ccc:	mov	r0, #0
   20cd0:	b	1666c <dcgettext@plt>
   20cd4:	mov	r2, #5
   20cd8:	ldr	r1, [pc, #160]	; 20d80 <g_strcmp0@plt+0xa024>
   20cdc:	mov	r0, #0
   20ce0:	b	1666c <dcgettext@plt>
   20ce4:	push	{r4, lr}
   20ce8:	bl	15e98 <pk_role_enum_to_string@plt>
   20cec:	ldr	r2, [pc, #144]	; 20d84 <g_strcmp0@plt+0xa028>
   20cf0:	mov	r1, #16
   20cf4:	mov	r3, r0
   20cf8:	ldr	r0, [pc, #136]	; 20d88 <g_strcmp0@plt+0xa02c>
   20cfc:	bl	15ebc <g_log@plt>
   20d00:	mov	r0, #0
   20d04:	pop	{r4, pc}
   20d08:	andeq	fp, r2, r8, ror #1
   20d0c:	ldrdeq	fp, [r2], -r0
   20d10:			; <UNDEFINED> instruction: 0x0002b1b8
   20d14:	andeq	fp, r2, r8, lsr #3
   20d18:	andeq	fp, r2, ip, lsl #3
   20d1c:	andeq	fp, r2, r8, ror r1
   20d20:	andeq	fp, r2, r8, ror #2
   20d24:	andeq	fp, r2, ip, lsr #2
   20d28:	muleq	r2, r8, r0
   20d2c:	andeq	fp, r2, r4, lsr #32
   20d30:	andeq	fp, r2, r4, lsl r0
   20d34:	andeq	fp, r2, r0
   20d38:	andeq	sl, r2, r0, ror #31
   20d3c:	andeq	fp, r2, r0, lsl r1
   20d40:	strdeq	fp, [r2], -ip
   20d44:	ldrdeq	fp, [r2], -r4
   20d48:	andeq	fp, r2, r0, asr #32
   20d4c:	andeq	fp, r2, r0, lsl #1
   20d50:	andeq	fp, r2, r0, asr #2
   20d54:	andeq	fp, r2, r4, asr r0
   20d58:	andeq	fp, r2, r8, rrx
   20d5c:	ldrdeq	sl, [r2], -r4
   20d60:	andeq	sl, r2, r4, lsr #31
   20d64:	andeq	sl, r2, r4, asr #31
   20d68:	strheq	fp, [r2], -r8
   20d6c:	andeq	fp, r2, r4, asr r1
   20d70:	andeq	fp, r2, ip, lsl r1
   20d74:			; <UNDEFINED> instruction: 0x0002afb8
   20d78:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   20d7c:	andeq	fp, r2, ip, lsr #1
   20d80:	andeq	sl, r2, ip, lsl sp
   20d84:	andeq	sl, r2, r8, ror pc
   20d88:	andeq	r6, r2, r8, lsr #21
   20d8c:	cmp	r0, #34	; 0x22
   20d90:	ldrls	pc, [pc, r0, lsl #2]
   20d94:	b	21054 <g_strcmp0@plt+0xa2f8>
   20d98:	andeq	r1, r2, r4, asr #32
   20d9c:	andeq	r1, r2, r4, lsr r0
   20da0:	andeq	r1, r2, r4, lsr #32
   20da4:	andeq	r1, r2, r4, lsl r0
   20da8:	andeq	r1, r2, r4
   20dac:	strdeq	r0, [r2], -r4
   20db0:	andeq	r0, r2, r4, ror #31
   20db4:	ldrdeq	r0, [r2], -r4
   20db8:	andeq	r0, r2, r4, asr #31
   20dbc:			; <UNDEFINED> instruction: 0x00020fb4
   20dc0:	andeq	r0, r2, r4, lsr #31
   20dc4:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   20dc8:	andeq	r0, r2, r4, lsl #31
   20dcc:	andeq	r0, r2, r4, ror pc
   20dd0:	andeq	r0, r2, r4, ror #30
   20dd4:	andeq	r0, r2, r4, asr pc
   20dd8:	andeq	r0, r2, r4, asr #30
   20ddc:	andeq	r0, r2, r4, lsr pc
   20de0:	andeq	r0, r2, r4, lsr #30
   20de4:	andeq	r0, r2, r4, lsl pc
   20de8:	andeq	r0, r2, r4, lsl #30
   20dec:	strdeq	r0, [r2], -r4
   20df0:	andeq	r0, r2, r4, ror #29
   20df4:	ldrdeq	r0, [r2], -r4
   20df8:	andeq	r0, r2, r4, asr #29
   20dfc:			; <UNDEFINED> instruction: 0x00020eb4
   20e00:	andeq	r0, r2, r4, lsr #29
   20e04:	muleq	r2, r4, lr
   20e08:	andeq	r0, r2, r4, lsl #29
   20e0c:	andeq	r0, r2, r4, ror lr
   20e10:	andeq	r0, r2, r4, ror #28
   20e14:	andeq	r0, r2, r4, asr lr
   20e18:	andeq	r0, r2, r4, asr #28
   20e1c:	andeq	r0, r2, r4, lsr lr
   20e20:	andeq	r0, r2, r4, lsr #28
   20e24:	mov	r2, #5
   20e28:	ldr	r1, [pc, #580]	; 21074 <g_strcmp0@plt+0xa318>
   20e2c:	mov	r0, #0
   20e30:	b	1666c <dcgettext@plt>
   20e34:	mov	r2, #5
   20e38:	ldr	r1, [pc, #568]	; 21078 <g_strcmp0@plt+0xa31c>
   20e3c:	mov	r0, #0
   20e40:	b	1666c <dcgettext@plt>
   20e44:	mov	r2, #5
   20e48:	ldr	r1, [pc, #556]	; 2107c <g_strcmp0@plt+0xa320>
   20e4c:	mov	r0, #0
   20e50:	b	1666c <dcgettext@plt>
   20e54:	mov	r2, #5
   20e58:	ldr	r1, [pc, #544]	; 21080 <g_strcmp0@plt+0xa324>
   20e5c:	mov	r0, #0
   20e60:	b	1666c <dcgettext@plt>
   20e64:	mov	r2, #5
   20e68:	ldr	r1, [pc, #532]	; 21084 <g_strcmp0@plt+0xa328>
   20e6c:	mov	r0, #0
   20e70:	b	1666c <dcgettext@plt>
   20e74:	mov	r2, #5
   20e78:	ldr	r1, [pc, #520]	; 21088 <g_strcmp0@plt+0xa32c>
   20e7c:	mov	r0, #0
   20e80:	b	1666c <dcgettext@plt>
   20e84:	mov	r2, #5
   20e88:	ldr	r1, [pc, #508]	; 2108c <g_strcmp0@plt+0xa330>
   20e8c:	mov	r0, #0
   20e90:	b	1666c <dcgettext@plt>
   20e94:	mov	r2, #5
   20e98:	ldr	r1, [pc, #496]	; 21090 <g_strcmp0@plt+0xa334>
   20e9c:	mov	r0, #0
   20ea0:	b	1666c <dcgettext@plt>
   20ea4:	mov	r2, #5
   20ea8:	ldr	r1, [pc, #484]	; 21094 <g_strcmp0@plt+0xa338>
   20eac:	mov	r0, #0
   20eb0:	b	1666c <dcgettext@plt>
   20eb4:	mov	r2, #5
   20eb8:	ldr	r1, [pc, #472]	; 21098 <g_strcmp0@plt+0xa33c>
   20ebc:	mov	r0, #0
   20ec0:	b	1666c <dcgettext@plt>
   20ec4:	mov	r2, #5
   20ec8:	ldr	r1, [pc, #460]	; 2109c <g_strcmp0@plt+0xa340>
   20ecc:	mov	r0, #0
   20ed0:	b	1666c <dcgettext@plt>
   20ed4:	mov	r2, #5
   20ed8:	ldr	r1, [pc, #448]	; 210a0 <g_strcmp0@plt+0xa344>
   20edc:	mov	r0, #0
   20ee0:	b	1666c <dcgettext@plt>
   20ee4:	mov	r2, #5
   20ee8:	ldr	r1, [pc, #436]	; 210a4 <g_strcmp0@plt+0xa348>
   20eec:	mov	r0, #0
   20ef0:	b	1666c <dcgettext@plt>
   20ef4:	mov	r2, #5
   20ef8:	ldr	r1, [pc, #424]	; 210a8 <g_strcmp0@plt+0xa34c>
   20efc:	mov	r0, #0
   20f00:	b	1666c <dcgettext@plt>
   20f04:	mov	r2, #5
   20f08:	ldr	r1, [pc, #412]	; 210ac <g_strcmp0@plt+0xa350>
   20f0c:	mov	r0, #0
   20f10:	b	1666c <dcgettext@plt>
   20f14:	mov	r2, #5
   20f18:	ldr	r1, [pc, #400]	; 210b0 <g_strcmp0@plt+0xa354>
   20f1c:	mov	r0, #0
   20f20:	b	1666c <dcgettext@plt>
   20f24:	mov	r2, #5
   20f28:	ldr	r1, [pc, #388]	; 210b4 <g_strcmp0@plt+0xa358>
   20f2c:	mov	r0, #0
   20f30:	b	1666c <dcgettext@plt>
   20f34:	mov	r2, #5
   20f38:	ldr	r1, [pc, #376]	; 210b8 <g_strcmp0@plt+0xa35c>
   20f3c:	mov	r0, #0
   20f40:	b	1666c <dcgettext@plt>
   20f44:	mov	r2, #5
   20f48:	ldr	r1, [pc, #364]	; 210bc <g_strcmp0@plt+0xa360>
   20f4c:	mov	r0, #0
   20f50:	b	1666c <dcgettext@plt>
   20f54:	mov	r2, #5
   20f58:	ldr	r1, [pc, #352]	; 210c0 <g_strcmp0@plt+0xa364>
   20f5c:	mov	r0, #0
   20f60:	b	1666c <dcgettext@plt>
   20f64:	mov	r2, #5
   20f68:	ldr	r1, [pc, #340]	; 210c4 <g_strcmp0@plt+0xa368>
   20f6c:	mov	r0, #0
   20f70:	b	1666c <dcgettext@plt>
   20f74:	mov	r2, #5
   20f78:	ldr	r1, [pc, #328]	; 210c8 <g_strcmp0@plt+0xa36c>
   20f7c:	mov	r0, #0
   20f80:	b	1666c <dcgettext@plt>
   20f84:	mov	r2, #5
   20f88:	ldr	r1, [pc, #316]	; 210cc <g_strcmp0@plt+0xa370>
   20f8c:	mov	r0, #0
   20f90:	b	1666c <dcgettext@plt>
   20f94:	mov	r2, #5
   20f98:	ldr	r1, [pc, #304]	; 210d0 <g_strcmp0@plt+0xa374>
   20f9c:	mov	r0, #0
   20fa0:	b	1666c <dcgettext@plt>
   20fa4:	mov	r2, #5
   20fa8:	ldr	r1, [pc, #292]	; 210d4 <g_strcmp0@plt+0xa378>
   20fac:	mov	r0, #0
   20fb0:	b	1666c <dcgettext@plt>
   20fb4:	mov	r2, #5
   20fb8:	ldr	r1, [pc, #280]	; 210d8 <g_strcmp0@plt+0xa37c>
   20fbc:	mov	r0, #0
   20fc0:	b	1666c <dcgettext@plt>
   20fc4:	mov	r2, #5
   20fc8:	ldr	r1, [pc, #268]	; 210dc <g_strcmp0@plt+0xa380>
   20fcc:	mov	r0, #0
   20fd0:	b	1666c <dcgettext@plt>
   20fd4:	mov	r2, #5
   20fd8:	ldr	r1, [pc, #256]	; 210e0 <g_strcmp0@plt+0xa384>
   20fdc:	mov	r0, #0
   20fe0:	b	1666c <dcgettext@plt>
   20fe4:	mov	r2, #5
   20fe8:	ldr	r1, [pc, #244]	; 210e4 <g_strcmp0@plt+0xa388>
   20fec:	mov	r0, #0
   20ff0:	b	1666c <dcgettext@plt>
   20ff4:	mov	r2, #5
   20ff8:	ldr	r1, [pc, #232]	; 210e8 <g_strcmp0@plt+0xa38c>
   20ffc:	mov	r0, #0
   21000:	b	1666c <dcgettext@plt>
   21004:	mov	r2, #5
   21008:	ldr	r1, [pc, #220]	; 210ec <g_strcmp0@plt+0xa390>
   2100c:	mov	r0, #0
   21010:	b	1666c <dcgettext@plt>
   21014:	mov	r2, #5
   21018:	ldr	r1, [pc, #208]	; 210f0 <g_strcmp0@plt+0xa394>
   2101c:	mov	r0, #0
   21020:	b	1666c <dcgettext@plt>
   21024:	mov	r2, #5
   21028:	ldr	r1, [pc, #196]	; 210f4 <g_strcmp0@plt+0xa398>
   2102c:	mov	r0, #0
   21030:	b	1666c <dcgettext@plt>
   21034:	mov	r2, #5
   21038:	ldr	r1, [pc, #184]	; 210f8 <g_strcmp0@plt+0xa39c>
   2103c:	mov	r0, #0
   21040:	b	1666c <dcgettext@plt>
   21044:	mov	r2, #5
   21048:	ldr	r1, [pc, #172]	; 210fc <g_strcmp0@plt+0xa3a0>
   2104c:	mov	r0, #0
   21050:	b	1666c <dcgettext@plt>
   21054:	mov	r3, r0
   21058:	push	{r4, lr}
   2105c:	mov	r1, #16
   21060:	ldr	r2, [pc, #152]	; 21100 <g_strcmp0@plt+0xa3a4>
   21064:	ldr	r0, [pc, #152]	; 21104 <g_strcmp0@plt+0xa3a8>
   21068:	bl	15ebc <g_log@plt>
   2106c:	mov	r0, #0
   21070:	pop	{r4, pc}
   21074:	andeq	fp, r2, r8, ror r3
   21078:	andeq	fp, r2, r0, ror r3
   2107c:	andeq	fp, r2, ip, asr r3
   21080:	andeq	fp, r2, r0, asr r3
   21084:	andeq	fp, r2, r0, asr #6
   21088:	andeq	fp, r2, r8, lsr r3
   2108c:	ldrdeq	fp, [r2], -r8
   21090:	andeq	fp, r2, r4, asr r2
   21094:	andeq	fp, r2, r4, lsr #5
   21098:	andeq	fp, r2, r8, ror #5
   2109c:	andeq	fp, r2, r8, lsr #6
   210a0:	muleq	r2, r8, r2
   210a4:	andeq	fp, r2, ip, lsr r2
   210a8:	strdeq	fp, [r2], -r4
   210ac:	andeq	fp, r2, r4, lsr r2
   210b0:	andeq	fp, r2, ip, lsr #4
   210b4:	andeq	fp, r2, r8, lsl r3
   210b8:	andeq	fp, r2, r8, asr #4
   210bc:	andeq	fp, r2, r0, lsr #6
   210c0:	andeq	fp, r2, r8, asr #5
   210c4:	andeq	fp, r2, r0, asr #5
   210c8:	andeq	fp, r2, r0, lsr #4
   210cc:	andeq	fp, r2, r4, lsl r2
   210d0:	andeq	fp, r2, ip, lsl #4
   210d4:	andeq	fp, r2, ip, lsr #5
   210d8:	andeq	fp, r2, r0, lsl #4
   210dc:	andeq	fp, r2, r8, ror r2
   210e0:	andeq	fp, r2, r8, lsl #5
   210e4:	andeq	fp, r2, ip, ror #4
   210e8:	andeq	fp, r2, ip, asr r2
   210ec:	andeq	fp, r2, r8, lsl #6
   210f0:			; <UNDEFINED> instruction: 0x0002b2b4
   210f4:	strdeq	fp, [r2], -r4
   210f8:	andeq	fp, r2, r4, ror #3
   210fc:	andeq	fp, r2, r8, lsl #7
   21100:	muleq	r2, r8, r3
   21104:	andeq	r6, r2, r8, lsr #21
   21108:	mov	r1, r0
   2110c:	ldr	r0, [pc]	; 21114 <g_strcmp0@plt+0xa3b8>
   21110:	b	16c0c <pk_enum_find_string@plt>
   21114:	ldrdeq	r7, [r2], -ip
   21118:	mov	r1, r0
   2111c:	ldr	r0, [pc]	; 21124 <g_strcmp0@plt+0xa3c8>
   21120:	b	16c0c <pk_enum_find_string@plt>
   21124:	andeq	r7, r2, ip, lsr #31
   21128:	mov	r1, r0
   2112c:	ldr	r0, [pc]	; 21134 <g_strcmp0@plt+0xa3d8>
   21130:	b	16c0c <pk_enum_find_string@plt>
   21134:	ldrdeq	r8, [r2], -r4
   21138:	mov	r1, r0
   2113c:	ldr	r0, [pc]	; 21144 <g_strcmp0@plt+0xa3e8>
   21140:	b	16c0c <pk_enum_find_string@plt>
   21144:	strdeq	r8, [r2], -ip
   21148:	mov	r1, r0
   2114c:	ldr	r0, [pc]	; 21154 <g_strcmp0@plt+0xa3f8>
   21150:	b	16c0c <pk_enum_find_string@plt>
   21154:	andeq	r8, r2, ip, lsl #6
   21158:	mov	r1, r0
   2115c:	push	{r4, lr}
   21160:	ldr	r0, [pc, #16]	; 21178 <g_strcmp0@plt+0xa41c>
   21164:	bl	16c0c <pk_enum_find_string@plt>
   21168:	ldrb	r3, [r0]
   2116c:	cmp	r3, #0
   21170:	moveq	r0, #0
   21174:	pop	{r4, pc}
   21178:	andeq	r8, r2, ip, lsr #8
   2117c:	mov	r1, r0
   21180:	ldr	r0, [pc]	; 21188 <g_strcmp0@plt+0xa42c>
   21184:	b	16c0c <pk_enum_find_string@plt>
   21188:	andeq	r8, r2, ip, ror #8
   2118c:	cmp	r0, #25
   21190:	bhi	21198 <g_strcmp0@plt+0xa43c>
   21194:	b	204f4 <g_strcmp0@plt+0x9798>
   21198:	sub	r0, r0, #26
   2119c:	b	20618 <g_strcmp0@plt+0x98bc>
   211a0:	cmp	r0, #10
   211a4:	beq	211c8 <g_strcmp0@plt+0xa46c>
   211a8:	sub	r3, r0, #11
   211ac:	cmp	r3, #1
   211b0:	bls	211d0 <g_strcmp0@plt+0xa474>
   211b4:	cmp	r0, #25
   211b8:	bhi	211d8 <g_strcmp0@plt+0xa47c>
   211bc:	mov	r1, r0
   211c0:	ldr	r0, [pc, #28]	; 211e4 <g_strcmp0@plt+0xa488>
   211c4:	b	16c0c <pk_enum_find_string@plt>
   211c8:	ldr	r0, [pc, #24]	; 211e8 <g_strcmp0@plt+0xa48c>
   211cc:	bx	lr
   211d0:	ldr	r0, [pc, #20]	; 211ec <g_strcmp0@plt+0xa490>
   211d4:	bx	lr
   211d8:	sub	r1, r0, #26
   211dc:	ldr	r0, [pc]	; 211e4 <g_strcmp0@plt+0xa488>
   211e0:	b	16c0c <pk_enum_find_string@plt>
   211e4:	ldrdeq	r7, [r2], -ip
   211e8:			; <UNDEFINED> instruction: 0x0002b3b0
   211ec:	andeq	fp, r2, r8, asr #7
   211f0:	mov	r0, r1
   211f4:	b	16990 <g_object_unref@plt>
   211f8:	push	{r4, r5, r6, lr}
   211fc:	sub	sp, sp, #8
   21200:	mov	r4, r0
   21204:	bl	163b4 <gtk_tree_view_column_new@plt>
   21208:	mov	r5, r0
   2120c:	bl	166e4 <gtk_cell_renderer_pixbuf_new@plt>
   21210:	mov	r3, #0
   21214:	mov	r2, #5
   21218:	ldr	r1, [pc, #176]	; 212d0 <g_strcmp0@plt+0xa574>
   2121c:	mov	r6, r0
   21220:	bl	166b4 <g_object_set@plt>
   21224:	mov	r1, r6
   21228:	mov	r0, r5
   2122c:	mov	r2, #0
   21230:	bl	15ce8 <gtk_tree_view_column_pack_start@plt>
   21234:	mov	r3, #0
   21238:	ldr	r2, [pc, #148]	; 212d4 <g_strcmp0@plt+0xa578>
   2123c:	mov	r1, r6
   21240:	mov	r0, r5
   21244:	bl	16ae0 <gtk_tree_view_column_add_attribute@plt>
   21248:	mov	r1, r5
   2124c:	mov	r0, r4
   21250:	bl	15b98 <gtk_tree_view_append_column@plt>
   21254:	bl	1630c <gtk_cell_renderer_text_new@plt>
   21258:	mov	r5, #0
   2125c:	mov	r2, #5
   21260:	ldr	r1, [pc, #112]	; 212d8 <g_strcmp0@plt+0xa57c>
   21264:	mov	r6, r0
   21268:	mov	r0, r5
   2126c:	bl	1666c <dcgettext@plt>
   21270:	mov	r3, #2
   21274:	ldr	r2, [pc, #96]	; 212dc <g_strcmp0@plt+0xa580>
   21278:	mov	r1, r6
   2127c:	str	r5, [sp]
   21280:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   21284:	mov	r1, #2
   21288:	mov	r6, r0
   2128c:	bl	1609c <gtk_tree_view_column_set_sort_column_id@plt>
   21290:	mov	r1, r6
   21294:	mov	r0, r4
   21298:	bl	15b98 <gtk_tree_view_append_column@plt>
   2129c:	mov	r1, r5
   212a0:	mov	r0, r4
   212a4:	bl	16bf4 <gtk_tree_view_set_headers_visible@plt>
   212a8:	mov	r0, r4
   212ac:	bl	16744 <gtk_tree_view_get_selection@plt>
   212b0:	mov	r1, r5
   212b4:	mov	r4, r0
   212b8:	bl	16000 <gtk_tree_selection_set_mode@plt>
   212bc:	mov	r0, r4
   212c0:	bl	16a20 <gtk_tree_selection_unselect_all@plt>
   212c4:	mov	r0, #1
   212c8:	add	sp, sp, #8
   212cc:	pop	{r4, r5, r6, pc}
   212d0:			; <UNDEFINED> instruction: 0x000278b8
   212d4:	andeq	r7, r2, r4, asr #17
   212d8:	ldrdeq	r7, [r2], -r0
   212dc:	ldrdeq	r7, [r2], -r8
   212e0:	push	{r4, r5, r6, lr}
   212e4:	sub	sp, sp, #8
   212e8:	mov	r4, r1
   212ec:	mov	r5, r0
   212f0:	bl	15f40 <gtk_toggle_button_get_type@plt>
   212f4:	mov	r1, r0
   212f8:	mov	r0, r5
   212fc:	bl	15e14 <g_type_check_instance_cast@plt>
   21300:	bl	16d50 <gtk_toggle_button_get_active@plt>
   21304:	mov	r3, r4
   21308:	ldr	r2, [pc, #60]	; 2134c <g_strcmp0@plt+0xa5f0>
   2130c:	mov	r1, #128	; 0x80
   21310:	mov	r5, r0
   21314:	str	r0, [sp]
   21318:	ldr	r0, [pc, #48]	; 21350 <g_strcmp0@plt+0xa5f4>
   2131c:	bl	15ebc <g_log@plt>
   21320:	ldr	r0, [pc, #44]	; 21354 <g_strcmp0@plt+0xa5f8>
   21324:	bl	15c10 <g_settings_new@plt>
   21328:	clz	r2, r5
   2132c:	mov	r1, r4
   21330:	lsr	r2, r2, #5
   21334:	mov	r6, r0
   21338:	bl	16b94 <g_settings_set_boolean@plt>
   2133c:	mov	r0, r6
   21340:	add	sp, sp, #8
   21344:	pop	{r4, r5, r6, lr}
   21348:	b	16990 <g_object_unref@plt>
   2134c:	andeq	fp, r2, r4, ror r9
   21350:	andeq	r6, r2, r8, lsr #21
   21354:	andeq	r7, r2, r4, asr r7
   21358:	ldr	r2, [pc, #316]	; 2149c <g_strcmp0@plt+0xa740>
   2135c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21360:	mov	r3, #64	; 0x40
   21364:	sub	sp, sp, #60	; 0x3c
   21368:	ldr	ip, [r2]
   2136c:	mov	r4, #0
   21370:	mov	r8, r1
   21374:	mov	r2, r3
   21378:	mov	r1, r3
   2137c:	mov	r9, r0
   21380:	mov	r0, #3
   21384:	str	ip, [sp, #52]	; 0x34
   21388:	str	r4, [sp, #28]
   2138c:	str	r4, [sp, #32]
   21390:	bl	165f4 <gtk_list_store_new@plt>
   21394:	ldr	r3, [r8]
   21398:	cmp	r3, r4
   2139c:	mov	r6, r0
   213a0:	beq	21478 <g_strcmp0@plt+0xa71c>
   213a4:	ldr	fp, [pc, #244]	; 214a0 <g_strcmp0@plt+0xa744>
   213a8:	ldr	r1, [r9]
   213ac:	mov	ip, #0
   213b0:	ldr	r3, [pc, #236]	; 214a4 <g_strcmp0@plt+0xa748>
   213b4:	ldr	r0, [r1, r4, lsl #2]
   213b8:	str	ip, [sp, #12]
   213bc:	add	ip, sp, #32
   213c0:	add	r2, sp, #24
   213c4:	stmib	sp, {fp, ip}
   213c8:	add	ip, sp, #28
   213cc:	str	ip, [sp]
   213d0:	ldr	r1, [pc, #208]	; 214a8 <g_strcmp0@plt+0xa74c>
   213d4:	bl	166fc <g_object_get@plt>
   213d8:	ldr	r2, [sp, #32]
   213dc:	ldr	r1, [sp, #28]
   213e0:	mov	r0, #0
   213e4:	bl	230b8 <g_strcmp0@plt+0xc35c>
   213e8:	add	r4, r4, #1
   213ec:	mov	r5, r0
   213f0:	ldr	r0, [sp, #28]
   213f4:	bl	15df0 <pk_package_id_split@plt>
   213f8:	mov	r7, r0
   213fc:	ldr	r0, [sp, #24]
   21400:	bl	21108 <g_strcmp0@plt+0xa3ac>
   21404:	add	r1, sp, #36	; 0x24
   21408:	mov	sl, r0
   2140c:	mov	r0, r6
   21410:	bl	1675c <gtk_list_store_append@plt>
   21414:	ldr	ip, [sp, #28]
   21418:	mvn	r0, #0
   2141c:	mov	r1, #2
   21420:	mov	r2, #1
   21424:	mov	r3, sl
   21428:	str	ip, [sp, #4]
   2142c:	str	r0, [sp, #16]
   21430:	str	r1, [sp, #8]
   21434:	str	r2, [sp]
   21438:	add	r1, sp, #36	; 0x24
   2143c:	mov	r2, #0
   21440:	mov	r0, r6
   21444:	str	r5, [sp, #12]
   21448:	bl	15c94 <gtk_list_store_set@plt>
   2144c:	mov	r0, r7
   21450:	bl	1654c <g_strfreev@plt>
   21454:	ldr	r0, [sp, #28]
   21458:	bl	16660 <g_free@plt>
   2145c:	ldr	r0, [sp, #32]
   21460:	bl	16660 <g_free@plt>
   21464:	mov	r0, r5
   21468:	bl	16660 <g_free@plt>
   2146c:	ldr	r3, [r8]
   21470:	cmp	r4, r3
   21474:	bcc	213a8 <g_strcmp0@plt+0xa64c>
   21478:	ldr	r3, [pc, #28]	; 2149c <g_strcmp0@plt+0xa740>
   2147c:	ldr	r2, [sp, #52]	; 0x34
   21480:	mov	r0, r6
   21484:	ldr	r3, [r3]
   21488:	cmp	r2, r3
   2148c:	bne	21498 <g_strcmp0@plt+0xa73c>
   21490:	add	sp, sp, #60	; 0x3c
   21494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21498:	bl	165a0 <__stack_chk_fail@plt>
   2149c:	andeq	ip, r3, r0, asr lr
   214a0:	andeq	r6, r2, r8, asr #29
   214a4:	andeq	r7, r2, ip, asr #3
   214a8:	andeq	ip, r2, r0, asr #23
   214ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   214b0:	mov	r4, r0
   214b4:	bl	16564 <g_strv_length@plt>
   214b8:	mov	r6, r0
   214bc:	ldr	r0, [pc, #192]	; 21584 <g_strcmp0@plt+0xa828>
   214c0:	bl	161c8 <g_ptr_array_new_with_free_func@plt>
   214c4:	cmp	r6, #0
   214c8:	mov	r7, r0
   214cc:	beq	21534 <g_strcmp0@plt+0xa7d8>
   214d0:	sub	r4, r4, #4
   214d4:	ldr	r9, [pc, #172]	; 21588 <g_strcmp0@plt+0xa82c>
   214d8:	ldr	r8, [pc, #172]	; 2158c <g_strcmp0@plt+0xa830>
   214dc:	add	r6, r4, r6, lsl #2
   214e0:	b	21508 <g_strcmp0@plt+0xa7ac>
   214e4:	ldr	r0, [r5]
   214e8:	bl	160f0 <g_strdup@plt>
   214ec:	mov	r1, r0
   214f0:	mov	r0, r7
   214f4:	bl	16b58 <g_ptr_array_add@plt>
   214f8:	mov	r0, r5
   214fc:	bl	1654c <g_strfreev@plt>
   21500:	cmp	r4, r6
   21504:	beq	21534 <g_strcmp0@plt+0xa7d8>
   21508:	ldr	r0, [r4, #4]!
   2150c:	bl	15df0 <pk_package_id_split@plt>
   21510:	subs	r5, r0, #0
   21514:	bne	214e4 <g_strcmp0@plt+0xa788>
   21518:	ldr	r3, [r4]
   2151c:	mov	r2, r9
   21520:	mov	r1, #16
   21524:	mov	r0, r8
   21528:	bl	15ebc <g_log@plt>
   2152c:	cmp	r4, r6
   21530:	bne	21508 <g_strcmp0@plt+0xa7ac>
   21534:	mov	r0, r7
   21538:	bl	16330 <pk_ptr_array_to_strv@plt>
   2153c:	mov	r5, r0
   21540:	bl	23924 <g_strcmp0@plt+0xcbc8>
   21544:	mov	r4, r0
   21548:	mov	r0, r5
   2154c:	bl	1654c <g_strfreev@plt>
   21550:	cmp	r4, #0
   21554:	beq	21568 <g_strcmp0@plt+0xa80c>
   21558:	mov	r0, r7
   2155c:	bl	16af8 <g_ptr_array_unref@plt>
   21560:	mov	r0, r4
   21564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21568:	mov	r0, r4
   2156c:	mov	r2, #5
   21570:	ldr	r1, [pc, #24]	; 21590 <g_strcmp0@plt+0xa834>
   21574:	bl	1666c <dcgettext@plt>
   21578:	bl	160f0 <g_strdup@plt>
   2157c:	mov	r4, r0
   21580:	b	21558 <g_strcmp0@plt+0xa7fc>
   21584:	andeq	r6, r1, r0, ror #12
   21588:	andeq	fp, r2, r8, lsl #19
   2158c:	andeq	r6, r2, r8, lsr #21
   21590:	muleq	r2, ip, r9
   21594:	push	{r4, r5, r6, r7, r8, r9, lr}
   21598:	mov	r5, r1
   2159c:	sub	sp, sp, #20
   215a0:	add	r1, r1, #4
   215a4:	mov	r9, r0
   215a8:	mov	r0, r5
   215ac:	bl	21358 <g_strcmp0@plt+0xa5fc>
   215b0:	mov	r8, r0
   215b4:	bl	16750 <gtk_tree_model_get_type@plt>
   215b8:	mov	r1, r0
   215bc:	mov	r0, r8
   215c0:	bl	15e14 <g_type_check_instance_cast@plt>
   215c4:	bl	16aec <gtk_tree_view_new_with_model@plt>
   215c8:	mov	r7, r0
   215cc:	bl	165dc <gtk_tree_view_get_type@plt>
   215d0:	mov	r1, r0
   215d4:	mov	r0, r7
   215d8:	bl	15e14 <g_type_check_instance_cast@plt>
   215dc:	bl	211f8 <g_strcmp0@plt+0xa49c>
   215e0:	mov	r0, r7
   215e4:	bl	16978 <gtk_widget_show@plt>
   215e8:	mov	r1, #0
   215ec:	mov	r0, r1
   215f0:	bl	1624c <gtk_scrolled_window_new@plt>
   215f4:	mov	r4, r0
   215f8:	bl	16b1c <gtk_scrolled_window_get_type@plt>
   215fc:	mov	r6, r0
   21600:	mov	r1, r0
   21604:	mov	r0, r4
   21608:	bl	15e14 <g_type_check_instance_cast@plt>
   2160c:	mov	r2, #1
   21610:	mov	r1, #2
   21614:	bl	163e4 <gtk_scrolled_window_set_policy@plt>
   21618:	mov	r1, r6
   2161c:	mov	r0, r4
   21620:	bl	15e14 <g_type_check_instance_cast@plt>
   21624:	mov	r1, #0
   21628:	bl	1618c <gtk_scrolled_window_set_overlay_scrolling@plt>
   2162c:	bl	16150 <gtk_container_get_type@plt>
   21630:	mov	r1, r0
   21634:	mov	r6, r0
   21638:	mov	r0, r4
   2163c:	bl	15e14 <g_type_check_instance_cast@plt>
   21640:	mov	r1, r7
   21644:	bl	1636c <gtk_container_add@plt>
   21648:	mov	r0, r4
   2164c:	bl	16978 <gtk_widget_show@plt>
   21650:	mov	r1, r6
   21654:	mov	r0, r4
   21658:	bl	15e14 <g_type_check_instance_cast@plt>
   2165c:	mov	r1, #6
   21660:	bl	16198 <gtk_container_set_border_width@plt>
   21664:	ldr	r3, [r5, #4]
   21668:	cmp	r3, #5
   2166c:	bhi	21710 <g_strcmp0@plt+0xa9b4>
   21670:	cmp	r3, #1
   21674:	bhi	216e4 <g_strcmp0@plt+0xa988>
   21678:	bl	16720 <gtk_dialog_get_type@plt>
   2167c:	mov	r5, #1
   21680:	mov	r1, r0
   21684:	mov	r0, r9
   21688:	bl	15e14 <g_type_check_instance_cast@plt>
   2168c:	bl	167c8 <gtk_dialog_get_content_area@plt>
   21690:	mov	r1, r6
   21694:	bl	15e14 <g_type_check_instance_cast@plt>
   21698:	ldr	r3, [pc, #144]	; 21730 <g_strcmp0@plt+0xa9d4>
   2169c:	mov	r6, #0
   216a0:	mov	r1, r4
   216a4:	stm	sp, {r3, r5, r6}
   216a8:	mov	r3, r5
   216ac:	ldr	r2, [pc, #128]	; 21734 <g_strcmp0@plt+0xa9d8>
   216b0:	bl	15c7c <gtk_container_add_with_properties@plt>
   216b4:	mov	r0, r9
   216b8:	mov	r1, #80	; 0x50
   216bc:	bl	15e14 <g_type_check_instance_cast@plt>
   216c0:	str	r6, [sp, #4]
   216c4:	str	r6, [sp]
   216c8:	mov	r3, r8
   216cc:	ldr	r2, [pc, #100]	; 21738 <g_strcmp0@plt+0xa9dc>
   216d0:	ldr	r1, [pc, #100]	; 2173c <g_strcmp0@plt+0xa9e0>
   216d4:	bl	16414 <g_signal_connect_data@plt>
   216d8:	mov	r0, r5
   216dc:	add	sp, sp, #20
   216e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   216e4:	bl	15db4 <gtk_widget_get_type@plt>
   216e8:	mov	r1, r0
   216ec:	mov	r0, r4
   216f0:	bl	15e14 <g_type_check_instance_cast@plt>
   216f4:	ldr	r2, [r5, #4]
   216f8:	mvn	r1, #0
   216fc:	add	r2, r2, r2, lsl #1
   21700:	lsl	r2, r2, #4
   21704:	add	r2, r2, #8
   21708:	bl	16360 <gtk_widget_set_size_request@plt>
   2170c:	b	21678 <g_strcmp0@plt+0xa91c>
   21710:	bl	15db4 <gtk_widget_get_type@plt>
   21714:	mov	r1, r0
   21718:	mov	r0, r4
   2171c:	bl	15e14 <g_type_check_instance_cast@plt>
   21720:	mov	r2, #248	; 0xf8
   21724:	mvn	r1, #0
   21728:	bl	16360 <gtk_widget_set_size_request@plt>
   2172c:	b	21678 <g_strcmp0@plt+0xa91c>
   21730:			; <UNDEFINED> instruction: 0x0002b9b4
   21734:	andeq	fp, r2, ip, lsr #19
   21738:	strdeq	r1, [r2], -r0
   2173c:			; <UNDEFINED> instruction: 0x0002b9bc
   21740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21744:	mov	r9, r0
   21748:	mov	r0, r1
   2174c:	bl	16330 <pk_ptr_array_to_strv@plt>
   21750:	mov	r1, r0
   21754:	ldr	r0, [pc, #384]	; 218dc <g_strcmp0@plt+0xab80>
   21758:	bl	16c3c <g_strjoinv@plt>
   2175c:	mov	r8, r0
   21760:	bl	1d634 <g_strcmp0@plt+0x68d8>
   21764:	cmp	r0, #0
   21768:	bne	218b8 <g_strcmp0@plt+0xab5c>
   2176c:	bl	162a0 <gtk_text_view_new@plt>
   21770:	mov	r5, r0
   21774:	bl	15e38 <gtk_text_view_get_type@plt>
   21778:	mov	r6, r0
   2177c:	mov	r1, r0
   21780:	mov	r0, r5
   21784:	bl	15e14 <g_type_check_instance_cast@plt>
   21788:	mov	r1, #0
   2178c:	bl	16780 <gtk_text_view_set_editable@plt>
   21790:	mov	r1, r6
   21794:	mov	r0, r5
   21798:	bl	15e14 <g_type_check_instance_cast@plt>
   2179c:	mov	r1, #5
   217a0:	bl	16600 <gtk_text_view_set_left_margin@plt>
   217a4:	mov	r1, r6
   217a8:	mov	r0, r5
   217ac:	bl	15e14 <g_type_check_instance_cast@plt>
   217b0:	mov	r1, #5
   217b4:	bl	166f0 <gtk_text_view_set_right_margin@plt>
   217b8:	mov	r1, #0
   217bc:	mov	r0, r1
   217c0:	bl	1624c <gtk_scrolled_window_new@plt>
   217c4:	mov	r4, r0
   217c8:	bl	16b1c <gtk_scrolled_window_get_type@plt>
   217cc:	mov	r7, r0
   217d0:	mov	r1, r0
   217d4:	mov	r0, r4
   217d8:	bl	15e14 <g_type_check_instance_cast@plt>
   217dc:	mov	r2, #1
   217e0:	mov	r1, #2
   217e4:	bl	163e4 <gtk_scrolled_window_set_policy@plt>
   217e8:	mov	r1, r7
   217ec:	mov	r0, r4
   217f0:	bl	15e14 <g_type_check_instance_cast@plt>
   217f4:	mov	r1, #0
   217f8:	bl	1618c <gtk_scrolled_window_set_overlay_scrolling@plt>
   217fc:	bl	16150 <gtk_container_get_type@plt>
   21800:	mov	r7, r0
   21804:	mov	r1, r0
   21808:	mov	r0, r4
   2180c:	bl	15e14 <g_type_check_instance_cast@plt>
   21810:	mov	r1, r5
   21814:	bl	1636c <gtk_container_add@plt>
   21818:	mov	r0, r4
   2181c:	bl	16978 <gtk_widget_show@plt>
   21820:	mov	r0, #0
   21824:	bl	16a38 <gtk_text_buffer_new@plt>
   21828:	mvn	r2, #0
   2182c:	mov	r1, r8
   21830:	mov	sl, r0
   21834:	bl	1645c <gtk_text_buffer_set_text@plt>
   21838:	mov	r1, r6
   2183c:	mov	r0, r5
   21840:	bl	15e14 <g_type_check_instance_cast@plt>
   21844:	mov	r1, sl
   21848:	bl	16384 <gtk_text_view_set_buffer@plt>
   2184c:	mov	r0, r5
   21850:	bl	16978 <gtk_widget_show@plt>
   21854:	mov	r1, r7
   21858:	mov	r0, r4
   2185c:	bl	15e14 <g_type_check_instance_cast@plt>
   21860:	mov	r1, #6
   21864:	bl	16198 <gtk_container_set_border_width@plt>
   21868:	bl	15db4 <gtk_widget_get_type@plt>
   2186c:	mov	r1, r0
   21870:	mov	r0, r4
   21874:	bl	15e14 <g_type_check_instance_cast@plt>
   21878:	mov	r2, #300	; 0x12c
   2187c:	mvn	r1, #0
   21880:	bl	16360 <gtk_widget_set_size_request@plt>
   21884:	bl	16720 <gtk_dialog_get_type@plt>
   21888:	mov	r1, r0
   2188c:	mov	r0, r9
   21890:	bl	15e14 <g_type_check_instance_cast@plt>
   21894:	bl	167c8 <gtk_dialog_get_content_area@plt>
   21898:	mov	r1, r7
   2189c:	bl	15e14 <g_type_check_instance_cast@plt>
   218a0:	mov	r1, r4
   218a4:	bl	1636c <gtk_container_add@plt>
   218a8:	mov	r0, r8
   218ac:	bl	16660 <g_free@plt>
   218b0:	mov	r0, #1
   218b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   218b8:	mov	r0, r8
   218bc:	bl	16660 <g_free@plt>
   218c0:	mov	r2, #5
   218c4:	ldr	r1, [pc, #20]	; 218e0 <g_strcmp0@plt+0xab84>
   218c8:	mov	r0, #0
   218cc:	bl	1666c <dcgettext@plt>
   218d0:	bl	160f0 <g_strdup@plt>
   218d4:	mov	r8, r0
   218d8:	b	2176c <g_strcmp0@plt+0xaa10>
   218dc:	andeq	r7, r2, r8, lsl #28
   218e0:	andeq	fp, r2, r8, asr #19
   218e4:	push	{r4, r5, r6, r7, lr}
   218e8:	mov	r2, #5
   218ec:	sub	sp, sp, #20
   218f0:	mov	r6, r1
   218f4:	mov	r7, r0
   218f8:	ldr	r1, [pc, #192]	; 219c0 <g_strcmp0@plt+0xac64>
   218fc:	mov	r0, #0
   21900:	bl	1666c <dcgettext@plt>
   21904:	bl	16c48 <gtk_check_button_new_with_label@plt>
   21908:	mov	r4, #0
   2190c:	mov	r3, r6
   21910:	ldr	r2, [pc, #172]	; 219c4 <g_strcmp0@plt+0xac68>
   21914:	str	r4, [sp, #4]
   21918:	str	r4, [sp]
   2191c:	ldr	r1, [pc, #164]	; 219c8 <g_strcmp0@plt+0xac6c>
   21920:	mov	r5, r0
   21924:	bl	16414 <g_signal_connect_data@plt>
   21928:	bl	16720 <gtk_dialog_get_type@plt>
   2192c:	mov	r1, r0
   21930:	mov	r0, r7
   21934:	bl	15e14 <g_type_check_instance_cast@plt>
   21938:	bl	167c8 <gtk_dialog_get_content_area@plt>
   2193c:	mov	r7, r0
   21940:	bl	16150 <gtk_container_get_type@plt>
   21944:	mov	r1, r0
   21948:	mov	r0, r7
   2194c:	bl	15e14 <g_type_check_instance_cast@plt>
   21950:	ldr	r2, [pc, #116]	; 219cc <g_strcmp0@plt+0xac70>
   21954:	mov	r3, r4
   21958:	mov	r1, r5
   2195c:	str	r4, [sp, #8]
   21960:	str	r4, [sp, #4]
   21964:	str	r2, [sp]
   21968:	ldr	r2, [pc, #96]	; 219d0 <g_strcmp0@plt+0xac74>
   2196c:	bl	15c7c <gtk_container_add_with_properties@plt>
   21970:	ldr	r0, [pc, #92]	; 219d4 <g_strcmp0@plt+0xac78>
   21974:	bl	15c10 <g_settings_new@plt>
   21978:	mov	r1, r6
   2197c:	mov	r7, r0
   21980:	bl	15ba4 <g_settings_get_boolean@plt>
   21984:	mov	r4, r0
   21988:	mov	r0, r7
   2198c:	bl	16990 <g_object_unref@plt>
   21990:	bl	15f40 <gtk_toggle_button_get_type@plt>
   21994:	mov	r1, r0
   21998:	mov	r0, r5
   2199c:	bl	15e14 <g_type_check_instance_cast@plt>
   219a0:	clz	r1, r4
   219a4:	lsr	r1, r1, #5
   219a8:	bl	167bc <gtk_toggle_button_set_active@plt>
   219ac:	mov	r0, r5
   219b0:	bl	16978 <gtk_widget_show@plt>
   219b4:	mov	r0, #1
   219b8:	add	sp, sp, #20
   219bc:	pop	{r4, r5, r6, r7, pc}
   219c0:	ldrdeq	fp, [r2], -r4
   219c4:	andeq	r1, r2, r0, ror #5
   219c8:	andeq	r6, r2, r4, asr sl
   219cc:			; <UNDEFINED> instruction: 0x0002b9b4
   219d0:	andeq	fp, r2, ip, lsr #19
   219d4:	andeq	r7, r2, r4, asr r7
   219d8:	push	{r4, r5, lr}
   219dc:	mov	r4, r1
   219e0:	sub	sp, sp, #20
   219e4:	mov	r5, r0
   219e8:	bl	16cd8 <gtk_notebook_get_type@plt>
   219ec:	cmp	r4, #0
   219f0:	moveq	r0, r4
   219f4:	beq	21a88 <g_strcmp0@plt+0xad2c>
   219f8:	ldr	r3, [r4]
   219fc:	cmp	r3, #0
   21a00:	beq	21a10 <g_strcmp0@plt+0xacb4>
   21a04:	ldr	r3, [r3]
   21a08:	cmp	r3, r0
   21a0c:	beq	21a24 <g_strcmp0@plt+0xacc8>
   21a10:	mov	r1, r0
   21a14:	mov	r0, r4
   21a18:	bl	167e0 <g_type_check_instance_is_a@plt>
   21a1c:	cmp	r0, #0
   21a20:	beq	21a88 <g_strcmp0@plt+0xad2c>
   21a24:	bl	16720 <gtk_dialog_get_type@plt>
   21a28:	mov	r1, r0
   21a2c:	mov	r0, r5
   21a30:	bl	15e14 <g_type_check_instance_cast@plt>
   21a34:	bl	167c8 <gtk_dialog_get_content_area@plt>
   21a38:	mov	r5, r0
   21a3c:	bl	16150 <gtk_container_get_type@plt>
   21a40:	mov	r1, r0
   21a44:	mov	r0, r5
   21a48:	bl	15e14 <g_type_check_instance_cast@plt>
   21a4c:	mov	r5, r0
   21a50:	bl	15db4 <gtk_widget_get_type@plt>
   21a54:	mov	r1, r0
   21a58:	mov	r0, r4
   21a5c:	bl	15e14 <g_type_check_instance_cast@plt>
   21a60:	ldr	r2, [pc, #40]	; 21a90 <g_strcmp0@plt+0xad34>
   21a64:	mov	r3, #0
   21a68:	str	r2, [sp]
   21a6c:	str	r3, [sp, #8]
   21a70:	str	r3, [sp, #4]
   21a74:	ldr	r2, [pc, #24]	; 21a94 <g_strcmp0@plt+0xad38>
   21a78:	mov	r1, r0
   21a7c:	mov	r0, r5
   21a80:	bl	15c7c <gtk_container_add_with_properties@plt>
   21a84:	mov	r0, #1
   21a88:	add	sp, sp, #20
   21a8c:	pop	{r4, r5, pc}
   21a90:			; <UNDEFINED> instruction: 0x0002b9b4
   21a94:	andeq	fp, r2, ip, lsr #19
   21a98:	push	{r4, r5, r6, r7, r8, r9, lr}
   21a9c:	mov	r5, r1
   21aa0:	sub	sp, sp, #20
   21aa4:	add	r1, r1, #4
   21aa8:	mov	r9, r0
   21aac:	mov	r0, r5
   21ab0:	bl	21358 <g_strcmp0@plt+0xa5fc>
   21ab4:	mov	r8, r0
   21ab8:	bl	16750 <gtk_tree_model_get_type@plt>
   21abc:	mov	r1, r0
   21ac0:	mov	r0, r8
   21ac4:	bl	15e14 <g_type_check_instance_cast@plt>
   21ac8:	bl	16aec <gtk_tree_view_new_with_model@plt>
   21acc:	mov	r7, r0
   21ad0:	bl	165dc <gtk_tree_view_get_type@plt>
   21ad4:	mov	r1, r0
   21ad8:	mov	r0, r7
   21adc:	bl	15e14 <g_type_check_instance_cast@plt>
   21ae0:	bl	211f8 <g_strcmp0@plt+0xa49c>
   21ae4:	mov	r0, r7
   21ae8:	bl	16978 <gtk_widget_show@plt>
   21aec:	mov	r1, #0
   21af0:	mov	r0, r1
   21af4:	bl	1624c <gtk_scrolled_window_new@plt>
   21af8:	mov	r4, r0
   21afc:	bl	16b1c <gtk_scrolled_window_get_type@plt>
   21b00:	mov	r6, r0
   21b04:	mov	r1, r0
   21b08:	mov	r0, r4
   21b0c:	bl	15e14 <g_type_check_instance_cast@plt>
   21b10:	mov	r2, #1
   21b14:	mov	r1, #2
   21b18:	bl	163e4 <gtk_scrolled_window_set_policy@plt>
   21b1c:	mov	r1, r6
   21b20:	mov	r0, r4
   21b24:	bl	15e14 <g_type_check_instance_cast@plt>
   21b28:	mov	r1, #0
   21b2c:	bl	1618c <gtk_scrolled_window_set_overlay_scrolling@plt>
   21b30:	bl	16150 <gtk_container_get_type@plt>
   21b34:	mov	r1, r0
   21b38:	mov	r6, r0
   21b3c:	mov	r0, r4
   21b40:	bl	15e14 <g_type_check_instance_cast@plt>
   21b44:	mov	r1, r7
   21b48:	bl	1636c <gtk_container_add@plt>
   21b4c:	mov	r0, r4
   21b50:	bl	16978 <gtk_widget_show@plt>
   21b54:	mov	r1, r6
   21b58:	mov	r0, r4
   21b5c:	bl	15e14 <g_type_check_instance_cast@plt>
   21b60:	mov	r1, #6
   21b64:	bl	16198 <gtk_container_set_border_width@plt>
   21b68:	ldr	r3, [r5, #4]
   21b6c:	cmp	r3, #5
   21b70:	bhi	21c04 <g_strcmp0@plt+0xaea8>
   21b74:	cmp	r3, #1
   21b78:	bhi	21bd8 <g_strcmp0@plt+0xae7c>
   21b7c:	mov	r1, r6
   21b80:	mov	r0, r9
   21b84:	bl	15e14 <g_type_check_instance_cast@plt>
   21b88:	ldr	r3, [pc, #148]	; 21c24 <g_strcmp0@plt+0xaec8>
   21b8c:	mov	r6, #0
   21b90:	mov	r5, #1
   21b94:	mov	r1, r4
   21b98:	stm	sp, {r3, r5, r6}
   21b9c:	mov	r3, r5
   21ba0:	ldr	r2, [pc, #128]	; 21c28 <g_strcmp0@plt+0xaecc>
   21ba4:	bl	15c7c <gtk_container_add_with_properties@plt>
   21ba8:	mov	r0, r9
   21bac:	mov	r1, #80	; 0x50
   21bb0:	bl	15e14 <g_type_check_instance_cast@plt>
   21bb4:	str	r6, [sp, #4]
   21bb8:	str	r6, [sp]
   21bbc:	mov	r3, r8
   21bc0:	ldr	r2, [pc, #100]	; 21c2c <g_strcmp0@plt+0xaed0>
   21bc4:	ldr	r1, [pc, #100]	; 21c30 <g_strcmp0@plt+0xaed4>
   21bc8:	bl	16414 <g_signal_connect_data@plt>
   21bcc:	mov	r0, r5
   21bd0:	add	sp, sp, #20
   21bd4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21bd8:	bl	15db4 <gtk_widget_get_type@plt>
   21bdc:	mov	r1, r0
   21be0:	mov	r0, r4
   21be4:	bl	15e14 <g_type_check_instance_cast@plt>
   21be8:	ldr	r2, [r5, #4]
   21bec:	mvn	r1, #0
   21bf0:	add	r2, r2, r2, lsl #1
   21bf4:	lsl	r2, r2, #4
   21bf8:	add	r2, r2, #8
   21bfc:	bl	16360 <gtk_widget_set_size_request@plt>
   21c00:	b	21b7c <g_strcmp0@plt+0xae20>
   21c04:	bl	15db4 <gtk_widget_get_type@plt>
   21c08:	mov	r1, r0
   21c0c:	mov	r0, r4
   21c10:	bl	15e14 <g_type_check_instance_cast@plt>
   21c14:	mov	r2, #248	; 0xf8
   21c18:	mvn	r1, #0
   21c1c:	bl	16360 <gtk_widget_set_size_request@plt>
   21c20:	b	21b7c <g_strcmp0@plt+0xae20>
   21c24:			; <UNDEFINED> instruction: 0x0002b9b4
   21c28:	andeq	fp, r2, ip, lsr #19
   21c2c:	strdeq	r1, [r2], -r0
   21c30:			; <UNDEFINED> instruction: 0x0002b9bc
   21c34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21c38:	sub	sp, sp, #16
   21c3c:	mov	r4, r2
   21c40:	mov	r5, r3
   21c44:	mov	r9, r0
   21c48:	mov	r6, r1
   21c4c:	bl	16150 <gtk_container_get_type@plt>
   21c50:	orrs	r3, r4, r5
   21c54:	mov	sl, r0
   21c58:	beq	21d1c <g_strcmp0@plt+0xafc0>
   21c5c:	mov	r1, r5
   21c60:	mov	r0, r4
   21c64:	bl	15d18 <g_format_size@plt>
   21c68:	mov	r1, r6
   21c6c:	mov	r4, #0
   21c70:	mov	r2, r0
   21c74:	mov	r5, r0
   21c78:	ldr	r0, [pc, #224]	; 21d60 <g_strcmp0@plt+0xb004>
   21c7c:	bl	161e0 <g_strdup_printf@plt>
   21c80:	mov	r1, #6
   21c84:	mov	r7, r0
   21c88:	mov	r0, #0
   21c8c:	bl	15f4c <gtk_box_new@plt>
   21c90:	mov	r1, sl
   21c94:	mov	r8, r0
   21c98:	mov	r0, r9
   21c9c:	bl	15e14 <g_type_check_instance_cast@plt>
   21ca0:	ldr	r3, [pc, #188]	; 21d64 <g_strcmp0@plt+0xb008>
   21ca4:	ldr	r2, [pc, #188]	; 21d68 <g_strcmp0@plt+0xb00c>
   21ca8:	mov	r1, r8
   21cac:	str	r3, [sp]
   21cb0:	str	r4, [sp, #8]
   21cb4:	mov	r3, r4
   21cb8:	str	r4, [sp, #4]
   21cbc:	bl	15c7c <gtk_container_add_with_properties@plt>
   21cc0:	mov	r0, r7
   21cc4:	bl	162b8 <gtk_label_new@plt>
   21cc8:	mov	r6, r0
   21ccc:	bl	163fc <gtk_box_get_type@plt>
   21cd0:	mov	r1, r0
   21cd4:	mov	r0, r8
   21cd8:	bl	15e14 <g_type_check_instance_cast@plt>
   21cdc:	str	r4, [sp]
   21ce0:	mov	r3, r4
   21ce4:	mov	r2, r4
   21ce8:	mov	r1, r6
   21cec:	bl	164bc <gtk_box_pack_start@plt>
   21cf0:	mov	r0, r8
   21cf4:	bl	16978 <gtk_widget_show@plt>
   21cf8:	mov	r0, r6
   21cfc:	bl	16978 <gtk_widget_show@plt>
   21d00:	mov	r0, r7
   21d04:	bl	16660 <g_free@plt>
   21d08:	mov	r0, r5
   21d0c:	bl	16660 <g_free@plt>
   21d10:	mov	r0, #1
   21d14:	add	sp, sp, #16
   21d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21d1c:	mov	r0, r6
   21d20:	bl	162b8 <gtk_label_new@plt>
   21d24:	mov	r1, sl
   21d28:	mov	r6, r0
   21d2c:	mov	r0, r9
   21d30:	bl	15e14 <g_type_check_instance_cast@plt>
   21d34:	ldr	r2, [pc, #40]	; 21d64 <g_strcmp0@plt+0xb008>
   21d38:	mov	r3, #0
   21d3c:	str	r2, [sp]
   21d40:	mov	r5, r3
   21d44:	mov	r1, r6
   21d48:	str	r3, [sp, #8]
   21d4c:	str	r3, [sp, #4]
   21d50:	ldr	r2, [pc, #16]	; 21d68 <g_strcmp0@plt+0xb00c>
   21d54:	bl	15c7c <gtk_container_add_with_properties@plt>
   21d58:	mov	r7, r5
   21d5c:	b	21cf8 <g_strcmp0@plt+0xaf9c>
   21d60:	andeq	fp, r2, ip, ror #19
   21d64:			; <UNDEFINED> instruction: 0x0002b9b4
   21d68:	andeq	fp, r2, ip, lsr #19
   21d6c:	push	{lr}		; (str lr, [sp, #-4]!)
   21d70:	sub	sp, sp, #20
   21d74:	ldr	r0, [pc, #48]	; 21dac <g_strcmp0@plt+0xb050>
   21d78:	bl	1651c <g_intern_static_string@plt>
   21d7c:	ldr	r1, [pc, #44]	; 21db0 <g_strcmp0@plt+0xb054>
   21d80:	mov	r2, #0
   21d84:	mov	r3, #16
   21d88:	stmib	sp, {r1, r2}
   21d8c:	str	r3, [sp]
   21d90:	mov	r2, #68	; 0x44
   21d94:	ldr	r3, [pc, #24]	; 21db4 <g_strcmp0@plt+0xb058>
   21d98:	mov	r1, r0
   21d9c:	mov	r0, #80	; 0x50
   21da0:	bl	15c70 <g_type_register_static_simple@plt>
   21da4:	add	sp, sp, #20
   21da8:	pop	{pc}		; (ldr pc, [sp], #4)
   21dac:	andeq	fp, r2, ip, lsr sl
   21db0:	andeq	r2, r2, r8, lsr #3
   21db4:	ldrdeq	r1, [r2], -r4
   21db8:	ldr	r3, [r1, #12]
   21dbc:	push	{r4, lr}
   21dc0:	ldr	r1, [pc, #32]	; 21de8 <g_strcmp0@plt+0xb08c>
   21dc4:	ldr	r0, [r3]
   21dc8:	bl	1615c <gtk_builder_get_object@plt>
   21dcc:	mov	r4, r0
   21dd0:	bl	15db4 <gtk_widget_get_type@plt>
   21dd4:	mov	r1, r0
   21dd8:	mov	r0, r4
   21ddc:	bl	15e14 <g_type_check_instance_cast@plt>
   21de0:	pop	{r4, lr}
   21de4:	b	15e80 <gtk_widget_hide@plt>
   21de8:	andeq	fp, r2, ip, asr #20
   21dec:	ldr	r3, [r2, #12]
   21df0:	push	{r4, lr}
   21df4:	ldr	r0, [r3]
   21df8:	ldr	r1, [pc, #32]	; 21e20 <g_strcmp0@plt+0xb0c4>
   21dfc:	bl	1615c <gtk_builder_get_object@plt>
   21e00:	mov	r4, r0
   21e04:	bl	15db4 <gtk_widget_get_type@plt>
   21e08:	mov	r1, r0
   21e0c:	mov	r0, r4
   21e10:	bl	15e14 <g_type_check_instance_cast@plt>
   21e14:	bl	15e80 <gtk_widget_hide@plt>
   21e18:	mov	r0, #0
   21e1c:	pop	{r4, pc}
   21e20:	andeq	fp, r2, ip, asr #20
   21e24:	push	{r4, lr}
   21e28:	sub	sp, sp, #40	; 0x28
   21e2c:	ldr	r4, [pc, #144]	; 21ec4 <g_strcmp0@plt+0xb168>
   21e30:	mov	r3, #0
   21e34:	add	r2, sp, #20
   21e38:	ldr	r1, [r4]
   21e3c:	str	r3, [sp, #16]
   21e40:	str	r1, [sp, #36]	; 0x24
   21e44:	add	r1, sp, #12
   21e48:	bl	16714 <gtk_tree_selection_get_selected@plt>
   21e4c:	cmp	r0, #0
   21e50:	beq	21eac <g_strcmp0@plt+0xb150>
   21e54:	ldr	r0, [sp, #16]
   21e58:	bl	16660 <g_free@plt>
   21e5c:	mvn	r3, #0
   21e60:	add	r1, sp, #20
   21e64:	str	r3, [sp]
   21e68:	mov	r2, #2
   21e6c:	add	r3, sp, #16
   21e70:	ldr	r0, [sp, #12]
   21e74:	bl	16c6c <gtk_tree_model_get@plt>
   21e78:	ldr	r3, [sp, #16]
   21e7c:	ldr	r2, [pc, #68]	; 21ec8 <g_strcmp0@plt+0xb16c>
   21e80:	mov	r1, #128	; 0x80
   21e84:	ldr	r0, [pc, #64]	; 21ecc <g_strcmp0@plt+0xb170>
   21e88:	bl	15ebc <g_log@plt>
   21e8c:	ldr	r0, [sp, #16]
   21e90:	bl	16660 <g_free@plt>
   21e94:	ldr	r2, [sp, #36]	; 0x24
   21e98:	ldr	r3, [r4]
   21e9c:	cmp	r2, r3
   21ea0:	bne	21ec0 <g_strcmp0@plt+0xb164>
   21ea4:	add	sp, sp, #40	; 0x28
   21ea8:	pop	{r4, pc}
   21eac:	ldr	r2, [pc, #28]	; 21ed0 <g_strcmp0@plt+0xb174>
   21eb0:	mov	r1, #128	; 0x80
   21eb4:	ldr	r0, [pc, #16]	; 21ecc <g_strcmp0@plt+0xb170>
   21eb8:	bl	15ebc <g_log@plt>
   21ebc:	b	21e8c <g_strcmp0@plt+0xb130>
   21ec0:	bl	165a0 <__stack_chk_fail@plt>
   21ec4:	andeq	ip, r3, r0, asr lr
   21ec8:	andeq	fp, r2, ip, asr sl
   21ecc:	andeq	r6, r2, r8, lsr #21
   21ed0:	andeq	r7, r2, ip, ror #6
   21ed4:	push	{r4, lr}
   21ed8:	mov	r4, r0
   21edc:	bl	16ad4 <g_type_class_peek_parent@plt>
   21ee0:	ldr	r1, [pc, #64]	; 21f28 <g_strcmp0@plt+0xb1cc>
   21ee4:	ldr	r3, [r1, #4]
   21ee8:	cmp	r3, #0
   21eec:	str	r0, [r1]
   21ef0:	bne	21f18 <g_strcmp0@plt+0xb1bc>
   21ef4:	mov	r1, #80	; 0x50
   21ef8:	mov	r0, r4
   21efc:	bl	16c90 <g_type_check_class_cast@plt>
   21f00:	ldr	r3, [pc, #36]	; 21f2c <g_strcmp0@plt+0xb1d0>
   21f04:	mov	r1, #8
   21f08:	str	r3, [r0, #24]
   21f0c:	mov	r0, r4
   21f10:	pop	{r4, lr}
   21f14:	b	1678c <g_type_class_add_private@plt>
   21f18:	add	r1, r1, #4
   21f1c:	mov	r0, r4
   21f20:	bl	15cc4 <g_type_class_adjust_private_offset@plt>
   21f24:	b	21ef4 <g_strcmp0@plt+0xb198>
   21f28:	andeq	sp, r3, r0, lsl #14
   21f2c:	andeq	r2, r2, ip, ror #11
   21f30:	push	{r4, r5, r6, r7, lr}
   21f34:	sub	sp, sp, #12
   21f38:	ldr	r5, [pc, #176]	; 21ff0 <g_strcmp0@plt+0xb294>
   21f3c:	mov	r6, #0
   21f40:	subs	r4, r0, #0
   21f44:	ldr	r3, [r5]
   21f48:	str	r6, [sp]
   21f4c:	str	r3, [sp, #4]
   21f50:	beq	21fd8 <g_strcmp0@plt+0xb27c>
   21f54:	bl	169f0 <g_desktop_app_info_new_from_filename@plt>
   21f58:	mov	r4, r0
   21f5c:	bl	16558 <g_app_info_get_type@plt>
   21f60:	mov	r1, r0
   21f64:	mov	r0, r4
   21f68:	bl	15e14 <g_type_check_instance_cast@plt>
   21f6c:	mov	r3, sp
   21f70:	mov	r2, r6
   21f74:	mov	r1, r6
   21f78:	mov	r7, r0
   21f7c:	bl	16474 <g_app_info_launch@plt>
   21f80:	subs	r4, r0, #0
   21f84:	beq	21fb4 <g_strcmp0@plt+0xb258>
   21f88:	cmp	r7, #0
   21f8c:	beq	21f98 <g_strcmp0@plt+0xb23c>
   21f90:	mov	r0, r7
   21f94:	bl	16990 <g_object_unref@plt>
   21f98:	ldr	r2, [sp, #4]
   21f9c:	ldr	r3, [r5]
   21fa0:	mov	r0, r4
   21fa4:	cmp	r2, r3
   21fa8:	bne	21fec <g_strcmp0@plt+0xb290>
   21fac:	add	sp, sp, #12
   21fb0:	pop	{r4, r5, r6, r7, pc}
   21fb4:	ldr	r3, [sp]
   21fb8:	ldr	r2, [pc, #52]	; 21ff4 <g_strcmp0@plt+0xb298>
   21fbc:	mov	r1, #16
   21fc0:	ldr	r3, [r3, #8]
   21fc4:	ldr	r0, [pc, #44]	; 21ff8 <g_strcmp0@plt+0xb29c>
   21fc8:	bl	15ebc <g_log@plt>
   21fcc:	ldr	r0, [sp]
   21fd0:	bl	15d3c <g_error_free@plt>
   21fd4:	b	21f88 <g_strcmp0@plt+0xb22c>
   21fd8:	ldr	r2, [pc, #28]	; 21ffc <g_strcmp0@plt+0xb2a0>
   21fdc:	mov	r1, #16
   21fe0:	ldr	r0, [pc, #16]	; 21ff8 <g_strcmp0@plt+0xb29c>
   21fe4:	bl	15ebc <g_log@plt>
   21fe8:	b	21f98 <g_strcmp0@plt+0xb23c>
   21fec:	bl	165a0 <__stack_chk_fail@plt>
   21ff0:	andeq	ip, r3, r0, asr lr
   21ff4:	andeq	fp, r2, r0, lsl #21
   21ff8:	andeq	r6, r2, r8, lsr #21
   21ffc:	andeq	fp, r2, r0, ror sl
   22000:	push	{r4, r5, r6, lr}
   22004:	sub	sp, sp, #32
   22008:	ldr	r4, [pc, #128]	; 22090 <g_strcmp0@plt+0xb334>
   2200c:	mov	r5, r1
   22010:	ldr	r3, [r4]
   22014:	str	r3, [sp, #28]
   22018:	bl	16054 <gtk_tree_view_get_model@plt>
   2201c:	mov	r2, r5
   22020:	add	r1, sp, #12
   22024:	mov	r6, r0
   22028:	bl	16c24 <gtk_tree_model_get_iter@plt>
   2202c:	cmp	r0, #0
   22030:	beq	22078 <g_strcmp0@plt+0xb31c>
   22034:	mvn	r3, #0
   22038:	add	r1, sp, #12
   2203c:	mov	r0, r6
   22040:	str	r3, [sp]
   22044:	mov	r2, #2
   22048:	add	r3, sp, #8
   2204c:	bl	16c6c <gtk_tree_model_get@plt>
   22050:	ldr	r0, [sp, #8]
   22054:	bl	21f30 <g_strcmp0@plt+0xb1d4>
   22058:	ldr	r0, [sp, #8]
   2205c:	bl	16660 <g_free@plt>
   22060:	ldr	r2, [sp, #28]
   22064:	ldr	r3, [r4]
   22068:	cmp	r2, r3
   2206c:	bne	2208c <g_strcmp0@plt+0xb330>
   22070:	add	sp, sp, #32
   22074:	pop	{r4, r5, r6, pc}
   22078:	ldr	r2, [pc, #20]	; 22094 <g_strcmp0@plt+0xb338>
   2207c:	mov	r1, #16
   22080:	ldr	r0, [pc, #16]	; 22098 <g_strcmp0@plt+0xb33c>
   22084:	bl	15ebc <g_log@plt>
   22088:	b	22060 <g_strcmp0@plt+0xb304>
   2208c:	bl	165a0 <__stack_chk_fail@plt>
   22090:	andeq	ip, r3, r0, asr lr
   22094:	andeq	r7, r2, r0, ror #12
   22098:	andeq	r6, r2, r8, lsr #21
   2209c:	push	{r4, r5, lr}
   220a0:	sub	sp, sp, #44	; 0x2c
   220a4:	ldr	r4, [pc, #156]	; 22148 <g_strcmp0@plt+0xb3ec>
   220a8:	ldr	r2, [r1, #12]
   220ac:	ldr	r1, [pc, #152]	; 2214c <g_strcmp0@plt+0xb3f0>
   220b0:	ldr	r3, [r4]
   220b4:	ldr	r0, [r2]
   220b8:	str	r3, [sp, #36]	; 0x24
   220bc:	bl	1615c <gtk_builder_get_object@plt>
   220c0:	mov	r5, r0
   220c4:	bl	165dc <gtk_tree_view_get_type@plt>
   220c8:	mov	r1, r0
   220cc:	mov	r0, r5
   220d0:	bl	15e14 <g_type_check_instance_cast@plt>
   220d4:	bl	16744 <gtk_tree_view_get_selection@plt>
   220d8:	add	r2, sp, #20
   220dc:	add	r1, sp, #12
   220e0:	bl	16714 <gtk_tree_selection_get_selected@plt>
   220e4:	cmp	r0, #0
   220e8:	beq	22130 <g_strcmp0@plt+0xb3d4>
   220ec:	mvn	r3, #0
   220f0:	add	r1, sp, #20
   220f4:	str	r3, [sp]
   220f8:	mov	r2, #2
   220fc:	add	r3, sp, #16
   22100:	ldr	r0, [sp, #12]
   22104:	bl	16c6c <gtk_tree_model_get@plt>
   22108:	ldr	r0, [sp, #16]
   2210c:	bl	21f30 <g_strcmp0@plt+0xb1d4>
   22110:	ldr	r0, [sp, #16]
   22114:	bl	16660 <g_free@plt>
   22118:	ldr	r2, [sp, #36]	; 0x24
   2211c:	ldr	r3, [r4]
   22120:	cmp	r2, r3
   22124:	bne	22144 <g_strcmp0@plt+0xb3e8>
   22128:	add	sp, sp, #44	; 0x2c
   2212c:	pop	{r4, r5, pc}
   22130:	ldr	r2, [pc, #24]	; 22150 <g_strcmp0@plt+0xb3f4>
   22134:	mov	r1, #16
   22138:	ldr	r0, [pc, #20]	; 22154 <g_strcmp0@plt+0xb3f8>
   2213c:	bl	15ebc <g_log@plt>
   22140:	b	22118 <g_strcmp0@plt+0xb3bc>
   22144:	bl	165a0 <__stack_chk_fail@plt>
   22148:	andeq	ip, r3, r0, asr lr
   2214c:	muleq	r2, r8, sl
   22150:	andeq	r7, r2, r0, ror #12
   22154:	andeq	r6, r2, r8, lsr #21
   22158:	push	{r4, lr}
   2215c:	mcr	15, 0, r0, cr7, cr10, {5}
   22160:	ldr	r4, [pc, #60]	; 221a4 <g_strcmp0@plt+0xb448>
   22164:	ldr	r3, [r4, #8]
   22168:	mcr	15, 0, r0, cr7, cr10, {5}
   2216c:	cmp	r3, #0
   22170:	beq	2217c <g_strcmp0@plt+0xb420>
   22174:	ldr	r0, [r4, #8]
   22178:	pop	{r4, pc}
   2217c:	add	r0, r4, #8
   22180:	bl	1642c <g_once_init_enter@plt>
   22184:	cmp	r0, #0
   22188:	beq	22174 <g_strcmp0@plt+0xb418>
   2218c:	bl	21d6c <g_strcmp0@plt+0xb010>
   22190:	mov	r1, r0
   22194:	add	r0, r4, #8
   22198:	bl	169d8 <g_once_init_leave@plt>
   2219c:	ldr	r0, [r4, #8]
   221a0:	pop	{r4, pc}
   221a4:	andeq	sp, r3, r0, lsl #14
   221a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   221ac:	sub	sp, sp, #20
   221b0:	ldr	r8, [pc, #972]	; 22584 <g_strcmp0@plt+0xb828>
   221b4:	mov	r2, #0
   221b8:	mov	r5, r0
   221bc:	ldr	r3, [r8]
   221c0:	str	r2, [sp, #8]
   221c4:	str	r3, [sp, #12]
   221c8:	bl	22158 <g_strcmp0@plt+0xb3fc>
   221cc:	mov	r1, r0
   221d0:	mov	r0, r5
   221d4:	bl	1639c <g_type_instance_get_private@plt>
   221d8:	str	r0, [r5, #12]
   221dc:	mov	r4, r0
   221e0:	bl	168dc <gtk_builder_new@plt>
   221e4:	ldr	r3, [r5, #12]
   221e8:	add	r2, sp, #8
   221ec:	ldr	r1, [pc, #916]	; 22588 <g_strcmp0@plt+0xb82c>
   221f0:	str	r0, [r4]
   221f4:	ldr	r0, [r3]
   221f8:	bl	16cc0 <gtk_builder_add_from_file@plt>
   221fc:	cmp	r0, #0
   22200:	beq	2255c <g_strcmp0@plt+0xb800>
   22204:	ldr	r3, [r5, #12]
   22208:	ldr	r1, [pc, #892]	; 2258c <g_strcmp0@plt+0xb830>
   2220c:	mov	r4, #0
   22210:	ldr	r0, [r3]
   22214:	bl	1615c <gtk_builder_get_object@plt>
   22218:	mov	r7, r0
   2221c:	bl	15db4 <gtk_widget_get_type@plt>
   22220:	mov	r6, r0
   22224:	mov	r1, r0
   22228:	mov	r0, r7
   2222c:	bl	15e14 <g_type_check_instance_cast@plt>
   22230:	mov	r3, r5
   22234:	ldr	r2, [pc, #852]	; 22590 <g_strcmp0@plt+0xb834>
   22238:	ldr	r1, [pc, #852]	; 22594 <g_strcmp0@plt+0xb838>
   2223c:	str	r4, [sp, #4]
   22240:	str	r4, [sp]
   22244:	mov	r9, r0
   22248:	bl	16414 <g_signal_connect_data@plt>
   2224c:	bl	16d20 <gtk_window_get_type@plt>
   22250:	mov	r7, r0
   22254:	mov	r1, r0
   22258:	mov	r0, r9
   2225c:	bl	15e14 <g_type_check_instance_cast@plt>
   22260:	ldr	r1, [pc, #816]	; 22598 <g_strcmp0@plt+0xb83c>
   22264:	bl	15fb8 <gtk_window_set_icon_name@plt>
   22268:	mov	r1, r7
   2226c:	mov	r0, r9
   22270:	bl	15e14 <g_type_check_instance_cast@plt>
   22274:	mov	r2, #300	; 0x12c
   22278:	mov	r1, #600	; 0x258
   2227c:	bl	22fac <g_strcmp0@plt+0xc250>
   22280:	ldr	r3, [r5, #12]
   22284:	ldr	r1, [pc, #784]	; 2259c <g_strcmp0@plt+0xb840>
   22288:	ldr	r0, [r3]
   2228c:	bl	1615c <gtk_builder_get_object@plt>
   22290:	mov	r1, r6
   22294:	bl	15e14 <g_type_check_instance_cast@plt>
   22298:	ldr	r2, [pc, #768]	; 225a0 <g_strcmp0@plt+0xb844>
   2229c:	mov	r3, r5
   222a0:	ldr	r1, [pc, #764]	; 225a4 <g_strcmp0@plt+0xb848>
   222a4:	str	r4, [sp, #4]
   222a8:	str	r4, [sp]
   222ac:	bl	16414 <g_signal_connect_data@plt>
   222b0:	ldr	r3, [r5, #12]
   222b4:	ldr	r1, [pc, #748]	; 225a8 <g_strcmp0@plt+0xb84c>
   222b8:	ldr	r0, [r3]
   222bc:	bl	1615c <gtk_builder_get_object@plt>
   222c0:	mov	r1, r6
   222c4:	bl	15e14 <g_type_check_instance_cast@plt>
   222c8:	bl	15e80 <gtk_widget_hide@plt>
   222cc:	ldr	r3, [r5, #12]
   222d0:	ldr	r1, [pc, #724]	; 225ac <g_strcmp0@plt+0xb850>
   222d4:	ldr	r0, [r3]
   222d8:	bl	1615c <gtk_builder_get_object@plt>
   222dc:	mov	r1, r6
   222e0:	bl	15e14 <g_type_check_instance_cast@plt>
   222e4:	bl	15e80 <gtk_widget_hide@plt>
   222e8:	ldr	r3, [r5, #12]
   222ec:	ldr	r1, [pc, #664]	; 2258c <g_strcmp0@plt+0xb830>
   222f0:	ldr	r0, [r3]
   222f4:	bl	1615c <gtk_builder_get_object@plt>
   222f8:	mov	r1, r6
   222fc:	bl	15e14 <g_type_check_instance_cast@plt>
   22300:	mov	r1, r7
   22304:	mov	r9, r0
   22308:	bl	15e14 <g_type_check_instance_cast@plt>
   2230c:	ldr	r1, [pc, #644]	; 22598 <g_strcmp0@plt+0xb83c>
   22310:	bl	15fb8 <gtk_window_set_icon_name@plt>
   22314:	mov	r1, r7
   22318:	mov	r0, r9
   2231c:	bl	15e14 <g_type_check_instance_cast@plt>
   22320:	mov	r2, #5
   22324:	ldr	r1, [pc, #644]	; 225b0 <g_strcmp0@plt+0xb854>
   22328:	mov	r7, r0
   2232c:	mov	r0, r4
   22330:	bl	1666c <dcgettext@plt>
   22334:	mov	r1, r0
   22338:	mov	r0, r7
   2233c:	bl	1633c <gtk_window_set_title@plt>
   22340:	mov	r2, #5
   22344:	ldr	r1, [pc, #616]	; 225b4 <g_strcmp0@plt+0xb858>
   22348:	mov	r0, r4
   2234c:	bl	1666c <dcgettext@plt>
   22350:	bl	16030 <gtk_button_new_with_mnemonic@plt>
   22354:	mov	r7, r0
   22358:	bl	16720 <gtk_dialog_get_type@plt>
   2235c:	mov	r1, r0
   22360:	mov	r0, r9
   22364:	bl	15e14 <g_type_check_instance_cast@plt>
   22368:	bl	15bc8 <gtk_dialog_get_action_area@plt>
   2236c:	mov	r9, r0
   22370:	bl	163fc <gtk_box_get_type@plt>
   22374:	mov	r1, r0
   22378:	mov	r0, r9
   2237c:	bl	15e14 <g_type_check_instance_cast@plt>
   22380:	mov	r1, r7
   22384:	mov	r3, r4
   22388:	mov	r2, r4
   2238c:	str	r4, [sp]
   22390:	bl	164bc <gtk_box_pack_start@plt>
   22394:	mov	r0, r7
   22398:	bl	16978 <gtk_widget_show@plt>
   2239c:	mov	r3, r5
   223a0:	mov	r0, r7
   223a4:	ldr	r2, [pc, #524]	; 225b8 <g_strcmp0@plt+0xb85c>
   223a8:	ldr	r1, [pc, #500]	; 225a4 <g_strcmp0@plt+0xb848>
   223ac:	str	r4, [sp, #4]
   223b0:	str	r4, [sp]
   223b4:	bl	16414 <g_signal_connect_data@plt>
   223b8:	mov	r3, #64	; 0x40
   223bc:	mov	r2, r3
   223c0:	str	r3, [sp]
   223c4:	mov	r1, r3
   223c8:	mov	r0, #3
   223cc:	ldr	r7, [r5, #12]
   223d0:	bl	165f4 <gtk_list_store_new@plt>
   223d4:	ldr	r3, [r5, #12]
   223d8:	ldr	r1, [pc, #476]	; 225bc <g_strcmp0@plt+0xb860>
   223dc:	str	r0, [r7, #4]
   223e0:	ldr	r0, [r3]
   223e4:	bl	1615c <gtk_builder_get_object@plt>
   223e8:	mov	r1, r6
   223ec:	bl	15e14 <g_type_check_instance_cast@plt>
   223f0:	mov	r6, r0
   223f4:	bl	165dc <gtk_tree_view_get_type@plt>
   223f8:	mov	r7, r0
   223fc:	mov	r1, r0
   22400:	mov	r0, r6
   22404:	bl	15e14 <g_type_check_instance_cast@plt>
   22408:	mov	r9, r0
   2240c:	bl	16750 <gtk_tree_model_get_type@plt>
   22410:	ldr	r3, [r5, #12]
   22414:	mov	r1, r0
   22418:	ldr	r0, [r3, #4]
   2241c:	bl	15e14 <g_type_check_instance_cast@plt>
   22420:	mov	r1, r0
   22424:	mov	r0, r9
   22428:	bl	15de4 <gtk_tree_view_set_model@plt>
   2242c:	mov	r1, r7
   22430:	mov	r0, r6
   22434:	bl	15e14 <g_type_check_instance_cast@plt>
   22438:	mov	r3, r5
   2243c:	ldr	r2, [pc, #380]	; 225c0 <g_strcmp0@plt+0xb864>
   22440:	ldr	r1, [pc, #380]	; 225c4 <g_strcmp0@plt+0xb868>
   22444:	str	r4, [sp, #4]
   22448:	str	r4, [sp]
   2244c:	bl	16414 <g_signal_connect_data@plt>
   22450:	mov	r1, r7
   22454:	mov	r0, r6
   22458:	bl	15e14 <g_type_check_instance_cast@plt>
   2245c:	bl	16744 <gtk_tree_view_get_selection@plt>
   22460:	mov	r3, r5
   22464:	ldr	r2, [pc, #348]	; 225c8 <g_strcmp0@plt+0xb86c>
   22468:	ldr	r1, [pc, #348]	; 225cc <g_strcmp0@plt+0xb870>
   2246c:	str	r4, [sp, #4]
   22470:	str	r4, [sp]
   22474:	bl	16414 <g_signal_connect_data@plt>
   22478:	mov	r1, r7
   2247c:	mov	r0, r6
   22480:	bl	15e14 <g_type_check_instance_cast@plt>
   22484:	mov	r9, r0
   22488:	bl	166e4 <gtk_cell_renderer_pixbuf_new@plt>
   2248c:	mov	r3, r4
   22490:	mov	r2, #6
   22494:	ldr	r1, [pc, #308]	; 225d0 <g_strcmp0@plt+0xb874>
   22498:	mov	r5, r0
   2249c:	bl	166b4 <g_object_set@plt>
   224a0:	mov	r2, #5
   224a4:	ldr	r1, [pc, #296]	; 225d4 <g_strcmp0@plt+0xb878>
   224a8:	mov	r0, r4
   224ac:	bl	1666c <dcgettext@plt>
   224b0:	mov	r3, r4
   224b4:	ldr	r2, [pc, #284]	; 225d8 <g_strcmp0@plt+0xb87c>
   224b8:	mov	r1, r5
   224bc:	str	r4, [sp]
   224c0:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   224c4:	mov	r1, r0
   224c8:	mov	r0, r9
   224cc:	bl	15b98 <gtk_tree_view_append_column@plt>
   224d0:	bl	1630c <gtk_cell_renderer_text_new@plt>
   224d4:	mov	r2, #5
   224d8:	ldr	r1, [pc, #252]	; 225dc <g_strcmp0@plt+0xb880>
   224dc:	mov	r5, r0
   224e0:	mov	r0, r4
   224e4:	bl	1666c <dcgettext@plt>
   224e8:	mov	r3, #1
   224ec:	ldr	r2, [pc, #236]	; 225e0 <g_strcmp0@plt+0xb884>
   224f0:	mov	r1, r5
   224f4:	str	r4, [sp]
   224f8:	bl	15e20 <gtk_tree_view_column_new_with_attributes@plt>
   224fc:	mov	r1, #1
   22500:	mov	r5, r0
   22504:	bl	1609c <gtk_tree_view_column_set_sort_column_id@plt>
   22508:	mov	r1, r5
   2250c:	mov	r0, r9
   22510:	bl	15b98 <gtk_tree_view_append_column@plt>
   22514:	mov	r0, r5
   22518:	mov	r1, #1
   2251c:	bl	16690 <gtk_tree_view_column_set_expand@plt>
   22520:	mov	r1, r7
   22524:	mov	r0, r6
   22528:	bl	15e14 <g_type_check_instance_cast@plt>
   2252c:	bl	15e2c <gtk_tree_view_columns_autosize@plt>
   22530:	mov	r1, r7
   22534:	mov	r0, r6
   22538:	bl	15e14 <g_type_check_instance_cast@plt>
   2253c:	mov	r1, r4
   22540:	bl	16bf4 <gtk_tree_view_set_headers_visible@plt>
   22544:	ldr	r2, [sp, #12]
   22548:	ldr	r3, [r8]
   2254c:	cmp	r2, r3
   22550:	bne	22580 <g_strcmp0@plt+0xb824>
   22554:	add	sp, sp, #20
   22558:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2255c:	ldr	r3, [sp, #8]
   22560:	ldr	r2, [pc, #124]	; 225e4 <g_strcmp0@plt+0xb888>
   22564:	mov	r1, #16
   22568:	ldr	r3, [r3, #8]
   2256c:	ldr	r0, [pc, #116]	; 225e8 <g_strcmp0@plt+0xb88c>
   22570:	bl	15ebc <g_log@plt>
   22574:	ldr	r0, [sp, #8]
   22578:	bl	15d3c <g_error_free@plt>
   2257c:	b	22204 <g_strcmp0@plt+0xb4a8>
   22580:	bl	165a0 <__stack_chk_fail@plt>
   22584:	andeq	ip, r3, r0, asr lr
   22588:	andeq	fp, r2, r8, lsr #21
   2258c:	andeq	fp, r2, ip, asr #20
   22590:	andeq	r1, r2, ip, ror #27
   22594:	andeq	fp, r2, ip, asr #21
   22598:	muleq	r2, r8, r8
   2259c:	ldrdeq	fp, [r2], -ip
   225a0:			; <UNDEFINED> instruction: 0x00021db8
   225a4:	andeq	r6, r2, r4, asr sl
   225a8:	andeq	fp, r2, ip, ror #21
   225ac:	strdeq	fp, [r2], -r8
   225b0:	andeq	fp, r2, r8, lsl #22
   225b4:	andeq	fp, r2, r0, lsr #22
   225b8:	muleq	r2, ip, r0
   225bc:	muleq	r2, r8, sl
   225c0:	andeq	r2, r2, r0
   225c4:	andeq	r7, r2, ip, ror #16
   225c8:	andeq	r1, r2, r4, lsr #28
   225cc:	andeq	r7, r2, r8, ror #14
   225d0:			; <UNDEFINED> instruction: 0x000278b8
   225d4:	andeq	fp, r2, r8, lsr #22
   225d8:	andeq	r7, r2, r4, asr #17
   225dc:	andeq	r6, r2, ip, lsr #26
   225e0:	ldrdeq	r7, [r2], -r8
   225e4:	strdeq	r7, [r2], -r4
   225e8:	andeq	r6, r2, r8, lsr #21
   225ec:	push	{r4, r5, r6, r7, r8, lr}
   225f0:	mov	r4, r0
   225f4:	bl	22158 <g_strcmp0@plt+0xb3fc>
   225f8:	cmp	r4, #0
   225fc:	beq	226dc <g_strcmp0@plt+0xb980>
   22600:	ldr	r3, [r4]
   22604:	cmp	r3, #0
   22608:	beq	22618 <g_strcmp0@plt+0xb8bc>
   2260c:	ldr	r3, [r3]
   22610:	cmp	r3, r0
   22614:	beq	2262c <g_strcmp0@plt+0xb8d0>
   22618:	mov	r1, r0
   2261c:	mov	r0, r4
   22620:	bl	167e0 <g_type_check_instance_is_a@plt>
   22624:	cmp	r0, #0
   22628:	beq	226dc <g_strcmp0@plt+0xb980>
   2262c:	bl	22158 <g_strcmp0@plt+0xb3fc>
   22630:	mov	r1, r0
   22634:	mov	r0, r4
   22638:	bl	15e14 <g_type_check_instance_cast@plt>
   2263c:	ldr	r1, [pc, #172]	; 226f0 <g_strcmp0@plt+0xb994>
   22640:	ldr	r3, [r0, #12]
   22644:	mov	r5, r0
   22648:	ldr	r0, [r3]
   2264c:	bl	1615c <gtk_builder_get_object@plt>
   22650:	mov	r7, r0
   22654:	bl	15db4 <gtk_widget_get_type@plt>
   22658:	mov	r1, r0
   2265c:	mov	r6, r0
   22660:	mov	r0, r7
   22664:	bl	15e14 <g_type_check_instance_cast@plt>
   22668:	subs	r7, r0, #0
   2266c:	beq	226a4 <g_strcmp0@plt+0xb948>
   22670:	ldr	r3, [r7]
   22674:	cmp	r3, #0
   22678:	beq	22688 <g_strcmp0@plt+0xb92c>
   2267c:	ldr	r3, [r3]
   22680:	cmp	r6, r3
   22684:	beq	2269c <g_strcmp0@plt+0xb940>
   22688:	mov	r1, r6
   2268c:	mov	r0, r7
   22690:	bl	167e0 <g_type_check_instance_is_a@plt>
   22694:	cmp	r0, #0
   22698:	beq	226a4 <g_strcmp0@plt+0xb948>
   2269c:	mov	r0, r7
   226a0:	bl	15e80 <gtk_widget_hide@plt>
   226a4:	ldr	r3, [r5, #12]
   226a8:	ldr	r0, [r3]
   226ac:	bl	16990 <g_object_unref@plt>
   226b0:	ldr	r3, [r5, #12]
   226b4:	ldr	r0, [r3, #4]
   226b8:	bl	16990 <g_object_unref@plt>
   226bc:	ldr	r3, [pc, #48]	; 226f4 <g_strcmp0@plt+0xb998>
   226c0:	mov	r1, #80	; 0x50
   226c4:	ldr	r0, [r3]
   226c8:	bl	16c90 <g_type_check_class_cast@plt>
   226cc:	ldr	r3, [r0, #24]
   226d0:	mov	r0, r4
   226d4:	pop	{r4, r5, r6, r7, r8, lr}
   226d8:	bx	r3
   226dc:	ldr	r2, [pc, #20]	; 226f8 <g_strcmp0@plt+0xb99c>
   226e0:	ldr	r1, [pc, #20]	; 226fc <g_strcmp0@plt+0xb9a0>
   226e4:	ldr	r0, [pc, #20]	; 22700 <g_strcmp0@plt+0xb9a4>
   226e8:	pop	{r4, r5, r6, r7, r8, lr}
   226ec:	b	15c58 <g_return_if_fail_warning@plt>
   226f0:	andeq	fp, r2, ip, asr #20
   226f4:	andeq	sp, r3, r0, lsl #14
   226f8:	andeq	fp, r2, r0, lsr fp
   226fc:	strdeq	fp, [r2], -r4
   22700:	andeq	r6, r2, r8, lsr #21
   22704:	push	{r4, r5, r6, lr}
   22708:	mov	r5, r0
   2270c:	mov	r4, r1
   22710:	bl	22158 <g_strcmp0@plt+0xb3fc>
   22714:	cmp	r5, #0
   22718:	beq	22778 <g_strcmp0@plt+0xba1c>
   2271c:	ldr	r3, [r5]
   22720:	cmp	r3, #0
   22724:	beq	22734 <g_strcmp0@plt+0xb9d8>
   22728:	ldr	r3, [r3]
   2272c:	cmp	r3, r0
   22730:	beq	22748 <g_strcmp0@plt+0xb9ec>
   22734:	mov	r1, r0
   22738:	mov	r0, r5
   2273c:	bl	167e0 <g_type_check_instance_is_a@plt>
   22740:	cmp	r0, #0
   22744:	beq	22778 <g_strcmp0@plt+0xba1c>
   22748:	cmp	r4, #0
   2274c:	beq	22790 <g_strcmp0@plt+0xba34>
   22750:	ldr	r3, [r5, #12]
   22754:	ldr	r0, [r3, #4]
   22758:	bl	16c9c <gtk_list_store_clear@plt>
   2275c:	ldr	r3, [r4]
   22760:	ldr	r2, [pc, #64]	; 227a8 <g_strcmp0@plt+0xba4c>
   22764:	mov	r1, #128	; 0x80
   22768:	ldr	r0, [pc, #60]	; 227ac <g_strcmp0@plt+0xba50>
   2276c:	bl	15ebc <g_log@plt>
   22770:	mov	r0, #1
   22774:	pop	{r4, r5, r6, pc}
   22778:	ldr	r2, [pc, #48]	; 227b0 <g_strcmp0@plt+0xba54>
   2277c:	ldr	r1, [pc, #48]	; 227b4 <g_strcmp0@plt+0xba58>
   22780:	ldr	r0, [pc, #36]	; 227ac <g_strcmp0@plt+0xba50>
   22784:	bl	15c58 <g_return_if_fail_warning@plt>
   22788:	mov	r0, #0
   2278c:	pop	{r4, r5, r6, pc}
   22790:	ldr	r2, [pc, #32]	; 227b8 <g_strcmp0@plt+0xba5c>
   22794:	ldr	r1, [pc, #24]	; 227b4 <g_strcmp0@plt+0xba58>
   22798:	ldr	r0, [pc, #12]	; 227ac <g_strcmp0@plt+0xba50>
   2279c:	bl	15c58 <g_return_if_fail_warning@plt>
   227a0:	mov	r0, r4
   227a4:	pop	{r4, r5, r6, pc}
   227a8:	andeq	fp, r2, ip, ror fp
   227ac:	andeq	r6, r2, r8, lsr #21
   227b0:	andeq	fp, r2, ip, asr #22
   227b4:	andeq	fp, r2, ip, lsl #20
   227b8:	andeq	fp, r2, r8, ror #22
   227bc:	push	{r4, r5, r6, lr}
   227c0:	mov	r5, r0
   227c4:	mov	r4, r1
   227c8:	bl	22158 <g_strcmp0@plt+0xb3fc>
   227cc:	cmp	r5, #0
   227d0:	beq	22858 <g_strcmp0@plt+0xbafc>
   227d4:	ldr	r3, [r5]
   227d8:	cmp	r3, #0
   227dc:	beq	227ec <g_strcmp0@plt+0xba90>
   227e0:	ldr	r3, [r3]
   227e4:	cmp	r3, r0
   227e8:	beq	22800 <g_strcmp0@plt+0xbaa4>
   227ec:	mov	r1, r0
   227f0:	mov	r0, r5
   227f4:	bl	167e0 <g_type_check_instance_is_a@plt>
   227f8:	cmp	r0, #0
   227fc:	beq	22858 <g_strcmp0@plt+0xbafc>
   22800:	cmp	r4, #0
   22804:	beq	22870 <g_strcmp0@plt+0xbb14>
   22808:	ldr	r3, [r5, #12]
   2280c:	ldr	r1, [pc, #116]	; 22888 <g_strcmp0@plt+0xbb2c>
   22810:	ldr	r0, [r3]
   22814:	bl	1615c <gtk_builder_get_object@plt>
   22818:	mov	r5, r0
   2281c:	bl	16d20 <gtk_window_get_type@plt>
   22820:	mov	r1, r0
   22824:	mov	r0, r5
   22828:	bl	15e14 <g_type_check_instance_cast@plt>
   2282c:	mov	r1, r4
   22830:	mov	r5, r0
   22834:	bl	16a2c <gtk_window_set_transient_for@plt>
   22838:	mov	r0, r5
   2283c:	mov	r1, #1
   22840:	bl	16b40 <gtk_window_set_modal@plt>
   22844:	mov	r0, r5
   22848:	mov	r1, #1
   2284c:	bl	15bb0 <gtk_window_set_type_hint@plt>
   22850:	mov	r0, #1
   22854:	pop	{r4, r5, r6, pc}
   22858:	ldr	r2, [pc, #44]	; 2288c <g_strcmp0@plt+0xbb30>
   2285c:	ldr	r1, [pc, #44]	; 22890 <g_strcmp0@plt+0xbb34>
   22860:	ldr	r0, [pc, #44]	; 22894 <g_strcmp0@plt+0xbb38>
   22864:	bl	15c58 <g_return_if_fail_warning@plt>
   22868:	mov	r0, #0
   2286c:	pop	{r4, r5, r6, pc}
   22870:	ldr	r2, [pc, #32]	; 22898 <g_strcmp0@plt+0xbb3c>
   22874:	ldr	r1, [pc, #20]	; 22890 <g_strcmp0@plt+0xbb34>
   22878:	ldr	r0, [pc, #20]	; 22894 <g_strcmp0@plt+0xbb38>
   2287c:	bl	15c58 <g_return_if_fail_warning@plt>
   22880:	mov	r0, r4
   22884:	pop	{r4, r5, r6, pc}
   22888:	andeq	fp, r2, ip, asr #20
   2288c:	andeq	fp, r2, ip, asr #22
   22890:	andeq	fp, r2, r0, lsr #20
   22894:	andeq	r6, r2, r8, lsr #21
   22898:	muleq	r2, r8, fp
   2289c:	push	{r4, lr}
   228a0:	bl	22158 <g_strcmp0@plt+0xb3fc>
   228a4:	mov	r1, #0
   228a8:	bl	15b68 <g_object_new@plt>
   228ac:	mov	r4, r0
   228b0:	bl	22158 <g_strcmp0@plt+0xb3fc>
   228b4:	mov	r1, r0
   228b8:	mov	r0, r4
   228bc:	pop	{r4, lr}
   228c0:	b	15e14 <g_type_check_instance_cast@plt>
   228c4:	push	{r4, r5, r6, lr}
   228c8:	sub	sp, sp, #8
   228cc:	ldr	r4, [pc, #132]	; 22958 <g_strcmp0@plt+0xbbfc>
   228d0:	mov	r2, #0
   228d4:	subs	r5, r0, #0
   228d8:	ldr	r3, [r4]
   228dc:	str	r2, [sp]
   228e0:	str	r3, [sp, #4]
   228e4:	beq	2291c <g_strcmp0@plt+0xbbc0>
   228e8:	mov	r3, sp
   228ec:	mov	r0, r2
   228f0:	mov	r1, r5
   228f4:	bl	161f8 <gtk_show_uri@plt>
   228f8:	subs	r6, r0, #0
   228fc:	beq	22934 <g_strcmp0@plt+0xbbd8>
   22900:	ldr	r2, [sp, #4]
   22904:	ldr	r3, [r4]
   22908:	mov	r0, r6
   2290c:	cmp	r2, r3
   22910:	bne	22954 <g_strcmp0@plt+0xbbf8>
   22914:	add	sp, sp, #8
   22918:	pop	{r4, r5, r6, pc}
   2291c:	ldr	r2, [pc, #56]	; 2295c <g_strcmp0@plt+0xbc00>
   22920:	ldr	r1, [pc, #56]	; 22960 <g_strcmp0@plt+0xbc04>
   22924:	ldr	r0, [pc, #56]	; 22964 <g_strcmp0@plt+0xbc08>
   22928:	mov	r6, r5
   2292c:	bl	15c58 <g_return_if_fail_warning@plt>
   22930:	b	22900 <g_strcmp0@plt+0xbba4>
   22934:	mov	r3, r5
   22938:	ldr	r2, [pc, #40]	; 22968 <g_strcmp0@plt+0xbc0c>
   2293c:	mov	r1, #16
   22940:	ldr	r0, [pc, #28]	; 22964 <g_strcmp0@plt+0xbc08>
   22944:	bl	15ebc <g_log@plt>
   22948:	ldr	r0, [sp]
   2294c:	bl	15d3c <g_error_free@plt>
   22950:	b	22900 <g_strcmp0@plt+0xbba4>
   22954:	bl	165a0 <__stack_chk_fail@plt>
   22958:	andeq	ip, r3, r0, asr lr
   2295c:			; <UNDEFINED> instruction: 0x0002bbb8
   22960:	andeq	fp, r2, r8, lsr #23
   22964:	andeq	r6, r2, r8, lsr #21
   22968:	andeq	fp, r2, r4, asr #23
   2296c:	andeq	r0, r0, r0
   22970:	ldrb	r2, [r0]
   22974:	cmp	r2, #0
   22978:	beq	229d8 <g_strcmp0@plt+0xbc7c>
   2297c:	push	{r4, r5, r6, lr}
   22980:	mov	r4, r0
   22984:	ldr	r1, [pc, #84]	; 229e0 <g_strcmp0@plt+0xbc84>
   22988:	bl	163c0 <g_str_has_prefix@plt>
   2298c:	subs	r5, r0, #0
   22990:	bne	229b0 <g_strcmp0@plt+0xbc54>
   22994:	mov	r0, r4
   22998:	ldr	r1, [pc, #68]	; 229e4 <g_strcmp0@plt+0xbc88>
   2299c:	bl	16b70 <g_str_has_suffix@plt>
   229a0:	cmp	r0, #0
   229a4:	bne	229c4 <g_strcmp0@plt+0xbc68>
   229a8:	mov	r0, #0
   229ac:	pop	{r4, r5, r6, pc}
   229b0:	mov	r2, #5
   229b4:	ldr	r1, [pc, #44]	; 229e8 <g_strcmp0@plt+0xbc8c>
   229b8:	mov	r0, #0
   229bc:	pop	{r4, r5, r6, lr}
   229c0:	b	1666c <dcgettext@plt>
   229c4:	mov	r0, r5
   229c8:	mov	r2, #5
   229cc:	ldr	r1, [pc, #24]	; 229ec <g_strcmp0@plt+0xbc90>
   229d0:	pop	{r4, r5, r6, lr}
   229d4:	b	1666c <dcgettext@plt>
   229d8:	mov	r0, #0
   229dc:	bx	lr
   229e0:	andeq	fp, r2, r4, lsl #19
   229e4:	andeq	fp, r2, r8, ror ip
   229e8:	andeq	fp, r2, r0, ror ip
   229ec:	andeq	fp, r2, ip, ror ip
   229f0:	push	{r4, r5, r6, r7, r8, lr}
   229f4:	mov	r5, r0
   229f8:	ldr	r0, [r0, #4]
   229fc:	mov	r1, #4
   22a00:	add	r0, r0, #1
   22a04:	bl	16a5c <g_malloc0_n@plt>
   22a08:	ldr	r3, [r5, #4]
   22a0c:	cmp	r3, #0
   22a10:	mov	r7, r0
   22a14:	beq	22a44 <g_strcmp0@plt+0xbce8>
   22a18:	sub	r6, r0, #4
   22a1c:	mov	r4, #0
   22a20:	ldr	r3, [r5]
   22a24:	ldr	r0, [r3, r4, lsl #2]
   22a28:	bl	15ca0 <pk_package_get_id@plt>
   22a2c:	bl	160f0 <g_strdup@plt>
   22a30:	ldr	r3, [r5, #4]
   22a34:	add	r4, r4, #1
   22a38:	cmp	r3, r4
   22a3c:	str	r0, [r6, #4]!
   22a40:	bhi	22a20 <g_strcmp0@plt+0xbcc4>
   22a44:	mov	r0, r7
   22a48:	pop	{r4, r5, r6, r7, r8, pc}
   22a4c:	push	{r4, r5, r6, lr}
   22a50:	subs	r4, r0, #0
   22a54:	beq	22a9c <g_strcmp0@plt+0xbd40>
   22a58:	bl	166d8 <g_ptr_array_new@plt>
   22a5c:	mov	r6, r0
   22a60:	mov	r0, r4
   22a64:	bl	16564 <g_strv_length@plt>
   22a68:	cmp	r0, #0
   22a6c:	subne	r4, r4, #4
   22a70:	addne	r5, r4, r0, lsl #2
   22a74:	beq	22a94 <g_strcmp0@plt+0xbd38>
   22a78:	ldr	r0, [r4, #4]!
   22a7c:	bl	160f0 <g_strdup@plt>
   22a80:	mov	r1, r0
   22a84:	mov	r0, r6
   22a88:	bl	16b58 <g_ptr_array_add@plt>
   22a8c:	cmp	r4, r5
   22a90:	bne	22a78 <g_strcmp0@plt+0xbd1c>
   22a94:	mov	r0, r6
   22a98:	pop	{r4, r5, r6, pc}
   22a9c:	ldr	r2, [pc, #20]	; 22ab8 <g_strcmp0@plt+0xbd5c>
   22aa0:	ldr	r1, [pc, #20]	; 22abc <g_strcmp0@plt+0xbd60>
   22aa4:	ldr	r0, [pc, #20]	; 22ac0 <g_strcmp0@plt+0xbd64>
   22aa8:	mov	r6, r4
   22aac:	bl	15c58 <g_return_if_fail_warning@plt>
   22ab0:	mov	r0, r6
   22ab4:	pop	{r4, r5, r6, pc}
   22ab8:	andeq	fp, r2, r4, lsl #25
   22abc:	ldrdeq	fp, [r2], -ip
   22ac0:	andeq	r6, r2, r8, lsr #21
   22ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ac8:	mov	r7, r1
   22acc:	ldr	r8, [pc, #1156]	; 22f58 <g_strcmp0@plt+0xc1fc>
   22ad0:	sub	sp, sp, #60	; 0x3c
   22ad4:	mov	r3, #0
   22ad8:	ldr	r1, [r8]
   22adc:	subs	r6, r0, #0
   22ae0:	str	r1, [sp, #52]	; 0x34
   22ae4:	str	r3, [sp, #24]
   22ae8:	beq	22b4c <g_strcmp0@plt+0xbdf0>
   22aec:	mov	r4, r2
   22af0:	bl	16090 <gtk_text_buffer_get_type@plt>
   22af4:	ldr	r3, [r6]
   22af8:	cmp	r3, #0
   22afc:	beq	22b0c <g_strcmp0@plt+0xbdb0>
   22b00:	ldr	r3, [r3]
   22b04:	cmp	r3, r0
   22b08:	beq	22b20 <g_strcmp0@plt+0xbdc4>
   22b0c:	mov	r1, r0
   22b10:	mov	r0, r6
   22b14:	bl	167e0 <g_type_check_instance_is_a@plt>
   22b18:	cmp	r0, #0
   22b1c:	beq	22b4c <g_strcmp0@plt+0xbdf0>
   22b20:	cmp	r4, #0
   22b24:	beq	22efc <g_strcmp0@plt+0xc1a0>
   22b28:	ldrb	r3, [r4]
   22b2c:	cmp	r3, #0
   22b30:	bne	22b60 <g_strcmp0@plt+0xbe04>
   22b34:	ldr	r2, [sp, #52]	; 0x34
   22b38:	ldr	r3, [r8]
   22b3c:	cmp	r2, r3
   22b40:	bne	22f54 <g_strcmp0@plt+0xc1f8>
   22b44:	add	sp, sp, #60	; 0x3c
   22b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b4c:	ldr	r2, [pc, #1032]	; 22f5c <g_strcmp0@plt+0xc200>
   22b50:	ldr	r1, [pc, #1032]	; 22f60 <g_strcmp0@plt+0xc204>
   22b54:	ldr	r0, [pc, #1032]	; 22f64 <g_strcmp0@plt+0xc208>
   22b58:	bl	15c58 <g_return_if_fail_warning@plt>
   22b5c:	b	22b34 <g_strcmp0@plt+0xbdd8>
   22b60:	mov	r5, #0
   22b64:	add	r2, sp, #24
   22b68:	add	r3, sp, #28
   22b6c:	str	r2, [sp, #8]
   22b70:	str	r3, [sp]
   22b74:	mov	r0, r4
   22b78:	str	r5, [sp, #4]
   22b7c:	mov	r2, r5
   22b80:	add	r3, sp, #20
   22b84:	mvn	r1, #0
   22b88:	bl	16bac <pango_parse_markup@plt>
   22b8c:	cmp	r0, r5
   22b90:	beq	22f10 <g_strcmp0@plt+0xc1b4>
   22b94:	ldr	r3, [sp, #20]
   22b98:	cmp	r3, #0
   22b9c:	beq	22f34 <g_strcmp0@plt+0xc1d8>
   22ba0:	mov	r3, r5
   22ba4:	mov	r1, r5
   22ba8:	mov	r2, r7
   22bac:	mov	r0, r6
   22bb0:	bl	16768 <gtk_text_buffer_create_mark@plt>
   22bb4:	ldr	fp, [pc, #940]	; 22f68 <g_strcmp0@plt+0xc20c>
   22bb8:	ldr	sl, [pc, #940]	; 22f6c <g_strcmp0@plt+0xc210>
   22bbc:	mov	r9, r0
   22bc0:	ldr	r0, [sp, #20]
   22bc4:	bl	16d08 <pango_attr_list_get_iterator@plt>
   22bc8:	mov	r4, r0
   22bcc:	add	r2, sp, #36	; 0x24
   22bd0:	add	r1, sp, #32
   22bd4:	mov	r0, r4
   22bd8:	bl	16570 <pango_attr_iterator_range@plt>
   22bdc:	ldr	r3, [sp, #36]	; 0x24
   22be0:	mov	r0, #0
   22be4:	cmn	r3, #-2147483647	; 0x80000001
   22be8:	ldreq	r3, [sp, #32]
   22bec:	subeq	r3, r3, #1
   22bf0:	streq	r3, [sp, #36]	; 0x24
   22bf4:	bl	16504 <gtk_text_tag_new@plt>
   22bf8:	mov	r1, #1
   22bfc:	mov	r5, r0
   22c00:	mov	r0, r4
   22c04:	bl	16924 <pango_attr_iterator_get@plt>
   22c08:	cmp	r0, #0
   22c0c:	beq	22c24 <g_strcmp0@plt+0xbec8>
   22c10:	ldr	r2, [r0, #12]
   22c14:	mov	r3, #0
   22c18:	mov	r1, fp
   22c1c:	mov	r0, r5
   22c20:	bl	166b4 <g_object_set@plt>
   22c24:	mov	r1, #2
   22c28:	mov	r0, r4
   22c2c:	bl	16924 <pango_attr_iterator_get@plt>
   22c30:	cmp	r0, #0
   22c34:	beq	22c4c <g_strcmp0@plt+0xbef0>
   22c38:	ldr	r2, [r0, #12]
   22c3c:	mov	r3, #0
   22c40:	mov	r1, sl
   22c44:	mov	r0, r5
   22c48:	bl	166b4 <g_object_set@plt>
   22c4c:	mov	r1, #3
   22c50:	mov	r0, r4
   22c54:	bl	16924 <pango_attr_iterator_get@plt>
   22c58:	cmp	r0, #0
   22c5c:	beq	22c74 <g_strcmp0@plt+0xbf18>
   22c60:	ldr	r2, [r0, #12]
   22c64:	mov	r3, #0
   22c68:	ldr	r1, [pc, #768]	; 22f70 <g_strcmp0@plt+0xc214>
   22c6c:	mov	r0, r5
   22c70:	bl	166b4 <g_object_set@plt>
   22c74:	mov	r1, #4
   22c78:	mov	r0, r4
   22c7c:	bl	16924 <pango_attr_iterator_get@plt>
   22c80:	cmp	r0, #0
   22c84:	beq	22c9c <g_strcmp0@plt+0xbf40>
   22c88:	ldr	r2, [r0, #12]
   22c8c:	mov	r3, #0
   22c90:	ldr	r1, [pc, #732]	; 22f74 <g_strcmp0@plt+0xc218>
   22c94:	mov	r0, r5
   22c98:	bl	166b4 <g_object_set@plt>
   22c9c:	mov	r1, #5
   22ca0:	mov	r0, r4
   22ca4:	bl	16924 <pango_attr_iterator_get@plt>
   22ca8:	cmp	r0, #0
   22cac:	beq	22cc4 <g_strcmp0@plt+0xbf68>
   22cb0:	ldr	r2, [r0, #12]
   22cb4:	mov	r3, #0
   22cb8:	ldr	r1, [pc, #696]	; 22f78 <g_strcmp0@plt+0xc21c>
   22cbc:	mov	r0, r5
   22cc0:	bl	166b4 <g_object_set@plt>
   22cc4:	mov	r1, #6
   22cc8:	mov	r0, r4
   22ccc:	bl	16924 <pango_attr_iterator_get@plt>
   22cd0:	cmp	r0, #0
   22cd4:	beq	22cec <g_strcmp0@plt+0xbf90>
   22cd8:	ldr	r2, [r0, #12]
   22cdc:	mov	r3, #0
   22ce0:	ldr	r1, [pc, #660]	; 22f7c <g_strcmp0@plt+0xc220>
   22ce4:	mov	r0, r5
   22ce8:	bl	166b4 <g_object_set@plt>
   22cec:	mov	r1, #7
   22cf0:	mov	r0, r4
   22cf4:	bl	16924 <pango_attr_iterator_get@plt>
   22cf8:	cmp	r0, #0
   22cfc:	beq	22d14 <g_strcmp0@plt+0xbfb8>
   22d00:	ldr	r2, [r0, #12]
   22d04:	mov	r3, #0
   22d08:	ldr	r1, [pc, #624]	; 22f80 <g_strcmp0@plt+0xc224>
   22d0c:	mov	r0, r5
   22d10:	bl	166b4 <g_object_set@plt>
   22d14:	mov	r1, #8
   22d18:	mov	r0, r4
   22d1c:	bl	16924 <pango_attr_iterator_get@plt>
   22d20:	cmp	r0, #0
   22d24:	beq	22d3c <g_strcmp0@plt+0xbfe0>
   22d28:	ldr	r2, [r0, #12]
   22d2c:	mov	r3, #0
   22d30:	ldr	r1, [pc, #588]	; 22f84 <g_strcmp0@plt+0xc228>
   22d34:	mov	r0, r5
   22d38:	bl	166b4 <g_object_set@plt>
   22d3c:	mov	r1, #9
   22d40:	mov	r0, r4
   22d44:	bl	16924 <pango_attr_iterator_get@plt>
   22d48:	cmp	r0, #0
   22d4c:	beq	22d7c <g_strcmp0@plt+0xc020>
   22d50:	ldr	r1, [r0, #12]
   22d54:	ldrh	lr, [r0, #16]
   22d58:	mov	ip, #0
   22d5c:	str	r1, [sp, #44]	; 0x2c
   22d60:	mov	r3, ip
   22d64:	add	r2, sp, #40	; 0x28
   22d68:	ldr	r1, [pc, #536]	; 22f88 <g_strcmp0@plt+0xc22c>
   22d6c:	mov	r0, r5
   22d70:	strh	lr, [sp, #48]	; 0x30
   22d74:	str	ip, [sp, #40]	; 0x28
   22d78:	bl	166b4 <g_object_set@plt>
   22d7c:	mov	r1, #10
   22d80:	mov	r0, r4
   22d84:	bl	16924 <pango_attr_iterator_get@plt>
   22d88:	cmp	r0, #0
   22d8c:	beq	22dbc <g_strcmp0@plt+0xc060>
   22d90:	ldr	r1, [r0, #12]
   22d94:	ldrh	lr, [r0, #16]
   22d98:	mov	ip, #0
   22d9c:	str	r1, [sp, #44]	; 0x2c
   22da0:	mov	r3, ip
   22da4:	add	r2, sp, #40	; 0x28
   22da8:	ldr	r1, [pc, #476]	; 22f8c <g_strcmp0@plt+0xc230>
   22dac:	mov	r0, r5
   22db0:	strh	lr, [sp, #48]	; 0x30
   22db4:	str	ip, [sp, #40]	; 0x28
   22db8:	bl	166b4 <g_object_set@plt>
   22dbc:	mov	r1, #11
   22dc0:	mov	r0, r4
   22dc4:	bl	16924 <pango_attr_iterator_get@plt>
   22dc8:	cmp	r0, #0
   22dcc:	beq	22de4 <g_strcmp0@plt+0xc088>
   22dd0:	ldr	r2, [r0, #12]
   22dd4:	mov	r3, #0
   22dd8:	ldr	r1, [pc, #432]	; 22f90 <g_strcmp0@plt+0xc234>
   22ddc:	mov	r0, r5
   22de0:	bl	166b4 <g_object_set@plt>
   22de4:	mov	r1, #12
   22de8:	mov	r0, r4
   22dec:	bl	16924 <pango_attr_iterator_get@plt>
   22df0:	cmp	r0, #0
   22df4:	beq	22e14 <g_strcmp0@plt+0xc0b8>
   22df8:	ldr	r2, [r0, #12]
   22dfc:	mov	r3, #0
   22e00:	subs	r2, r2, r3
   22e04:	movne	r2, #1
   22e08:	ldr	r1, [pc, #388]	; 22f94 <g_strcmp0@plt+0xc238>
   22e0c:	mov	r0, r5
   22e10:	bl	166b4 <g_object_set@plt>
   22e14:	mov	r1, #13
   22e18:	mov	r0, r4
   22e1c:	bl	16924 <pango_attr_iterator_get@plt>
   22e20:	cmp	r0, #0
   22e24:	beq	22e3c <g_strcmp0@plt+0xc0e0>
   22e28:	ldr	r2, [r0, #12]
   22e2c:	mov	r3, #0
   22e30:	ldr	r1, [pc, #352]	; 22f98 <g_strcmp0@plt+0xc23c>
   22e34:	mov	r0, r5
   22e38:	bl	166b4 <g_object_set@plt>
   22e3c:	mov	r1, #15
   22e40:	mov	r0, r4
   22e44:	bl	16924 <pango_attr_iterator_get@plt>
   22e48:	cmp	r0, #0
   22e4c:	beq	22e68 <g_strcmp0@plt+0xc10c>
   22e50:	mov	r1, #0
   22e54:	ldrd	r2, [r0, #16]
   22e58:	str	r1, [sp]
   22e5c:	mov	r0, r5
   22e60:	ldr	r1, [pc, #308]	; 22f9c <g_strcmp0@plt+0xc240>
   22e64:	bl	166b4 <g_object_set@plt>
   22e68:	mov	r0, r6
   22e6c:	bl	169c0 <gtk_text_buffer_get_tag_table@plt>
   22e70:	mov	r1, r5
   22e74:	bl	164f8 <gtk_text_tag_table_add@plt>
   22e78:	mov	r0, r6
   22e7c:	bl	169c0 <gtk_text_buffer_get_tag_table@plt>
   22e80:	ldr	r1, [pc, #280]	; 22fa0 <g_strcmp0@plt+0xc244>
   22e84:	bl	16480 <gtk_text_tag_table_lookup@plt>
   22e88:	ldrd	r2, [sp, #32]
   22e8c:	ldr	ip, [sp, #28]
   22e90:	mov	r1, #0
   22e94:	sub	r3, r3, r2
   22e98:	str	r1, [sp, #8]
   22e9c:	add	r2, ip, r2
   22ea0:	mov	r1, r7
   22ea4:	str	r5, [sp]
   22ea8:	str	r0, [sp, #4]
   22eac:	mov	r0, r6
   22eb0:	bl	168b8 <gtk_text_buffer_insert_with_tags@plt>
   22eb4:	mov	r2, r9
   22eb8:	mov	r1, r7
   22ebc:	mov	r0, r6
   22ec0:	bl	16180 <gtk_text_buffer_get_iter_at_mark@plt>
   22ec4:	mov	r0, r4
   22ec8:	bl	16948 <pango_attr_iterator_next@plt>
   22ecc:	cmp	r0, #0
   22ed0:	bne	22bcc <g_strcmp0@plt+0xbe70>
   22ed4:	mov	r1, r9
   22ed8:	mov	r0, r6
   22edc:	bl	15e08 <gtk_text_buffer_delete_mark@plt>
   22ee0:	mov	r0, r4
   22ee4:	bl	169cc <pango_attr_iterator_destroy@plt>
   22ee8:	ldr	r0, [sp, #20]
   22eec:	bl	160cc <pango_attr_list_unref@plt>
   22ef0:	ldr	r0, [sp, #28]
   22ef4:	bl	16660 <g_free@plt>
   22ef8:	b	22b34 <g_strcmp0@plt+0xbdd8>
   22efc:	ldr	r2, [pc, #160]	; 22fa4 <g_strcmp0@plt+0xc248>
   22f00:	ldr	r1, [pc, #88]	; 22f60 <g_strcmp0@plt+0xc204>
   22f04:	ldr	r0, [pc, #88]	; 22f64 <g_strcmp0@plt+0xc208>
   22f08:	bl	15c58 <g_return_if_fail_warning@plt>
   22f0c:	b	22b34 <g_strcmp0@plt+0xbdd8>
   22f10:	ldr	r3, [sp, #24]
   22f14:	ldr	r2, [pc, #140]	; 22fa8 <g_strcmp0@plt+0xc24c>
   22f18:	mov	r1, #16
   22f1c:	ldr	r3, [r3, #8]
   22f20:	ldr	r0, [pc, #60]	; 22f64 <g_strcmp0@plt+0xc208>
   22f24:	bl	15ebc <g_log@plt>
   22f28:	ldr	r0, [sp, #24]
   22f2c:	bl	15d3c <g_error_free@plt>
   22f30:	b	22b34 <g_strcmp0@plt+0xbdd8>
   22f34:	mov	r0, r6
   22f38:	mov	r1, r7
   22f3c:	mvn	r3, #0
   22f40:	ldr	r2, [sp, #28]
   22f44:	bl	15f34 <gtk_text_buffer_insert@plt>
   22f48:	ldr	r0, [sp, #28]
   22f4c:	bl	16660 <g_free@plt>
   22f50:	b	22b34 <g_strcmp0@plt+0xbdd8>
   22f54:	bl	165a0 <__stack_chk_fail@plt>
   22f58:	andeq	ip, r3, r0, asr lr
   22f5c:	muleq	r2, r4, ip
   22f60:	strdeq	fp, [r2], -r4
   22f64:	andeq	r6, r2, r8, lsr #21
   22f68:	ldrdeq	fp, [r2], -ip
   22f6c:	andeq	fp, r2, r8, ror #25
   22f70:	strdeq	fp, [r2], -r0
   22f74:	strdeq	fp, [r2], -r8
   22f78:	andeq	fp, r2, r0, lsl #26
   22f7c:	andeq	fp, r2, r8, lsl #26
   22f80:	muleq	r2, r0, r2
   22f84:	andeq	fp, r2, r0, lsl sp
   22f88:	andeq	fp, r2, ip, lsl sp
   22f8c:	andeq	fp, r2, ip, lsr #26
   22f90:	andeq	fp, r2, ip, lsr sp
   22f94:	andeq	fp, r2, r8, asr #26
   22f98:	andeq	fp, r2, r8, asr sp
   22f9c:	andeq	fp, r2, r0, ror #26
   22fa0:	andeq	fp, r2, r8, ror #26
   22fa4:			; <UNDEFINED> instruction: 0x0002bcb0
   22fa8:	andeq	fp, r2, r0, asr #25
   22fac:	cmp	r1, #0
   22fb0:	clz	r3, r2
   22fb4:	lsr	r3, r3, #5
   22fb8:	push	{r4, r5, r6, r7, lr}
   22fbc:	movne	r4, r3
   22fc0:	moveq	r4, #1
   22fc4:	cmp	r4, #0
   22fc8:	sub	sp, sp, #12
   22fcc:	beq	22fe8 <g_strcmp0@plt+0xc28c>
   22fd0:	ldr	r3, [pc, #88]	; 23030 <g_strcmp0@plt+0xc2d4>
   22fd4:	ldr	r0, [r3]
   22fd8:	clz	r0, r0
   22fdc:	lsr	r0, r0, #5
   22fe0:	add	sp, sp, #12
   22fe4:	pop	{r4, r5, r6, r7, pc}
   22fe8:	mov	r3, r1
   22fec:	mov	r6, r2
   22ff0:	mov	r5, r1
   22ff4:	mov	r7, r0
   22ff8:	str	r2, [sp]
   22ffc:	mov	r1, #128	; 0x80
   23000:	ldr	r2, [pc, #44]	; 23034 <g_strcmp0@plt+0xc2d8>
   23004:	ldr	r0, [pc, #44]	; 23038 <g_strcmp0@plt+0xc2dc>
   23008:	bl	15ebc <g_log@plt>
   2300c:	mov	r0, r7
   23010:	mov	r2, r6
   23014:	mov	r1, r5
   23018:	bl	16390 <gtk_window_set_default_size@plt>
   2301c:	ldr	r3, [pc, #12]	; 23030 <g_strcmp0@plt+0xc2d4>
   23020:	mov	r0, #1
   23024:	str	r4, [r3]
   23028:	add	sp, sp, #12
   2302c:	pop	{r4, r5, r6, r7, pc}
   23030:	andeq	sp, r3, ip, lsl #14
   23034:	andeq	fp, r2, r0, ror sp
   23038:	andeq	r6, r2, r8, lsr #21
   2303c:	push	{r4, r5, r6, lr}
   23040:	subs	r4, r1, #0
   23044:	bne	23060 <g_strcmp0@plt+0xc304>
   23048:	ldr	r2, [pc, #92]	; 230ac <g_strcmp0@plt+0xc350>
   2304c:	ldr	r1, [pc, #92]	; 230b0 <g_strcmp0@plt+0xc354>
   23050:	ldr	r0, [pc, #92]	; 230b4 <g_strcmp0@plt+0xc358>
   23054:	bl	15c58 <g_return_if_fail_warning@plt>
   23058:	mov	r0, r4
   2305c:	pop	{r4, r5, r6, pc}
   23060:	mov	r5, r0
   23064:	bl	16378 <gdk_display_get_default@plt>
   23068:	mov	r1, r4
   2306c:	bl	165c4 <gdk_x11_window_foreign_new_for_display@plt>
   23070:	mov	r6, r0
   23074:	bl	15db4 <gtk_widget_get_type@plt>
   23078:	mov	r1, r0
   2307c:	mov	r0, r5
   23080:	bl	15e14 <g_type_check_instance_cast@plt>
   23084:	bl	15e68 <gtk_widget_get_window@plt>
   23088:	mov	r1, #1
   2308c:	mov	r4, r0
   23090:	mov	r0, r5
   23094:	bl	16b40 <gtk_window_set_modal@plt>
   23098:	mov	r0, r4
   2309c:	mov	r1, r6
   230a0:	bl	164a4 <gdk_window_set_transient_for@plt>
   230a4:	mov	r0, #1
   230a8:	pop	{r4, r5, r6, pc}
   230ac:	andeq	fp, r2, ip, lsl #27
   230b0:	andeq	fp, r2, r4, lsl ip
   230b4:	andeq	r6, r2, r8, lsr #21
   230b8:	push	{r4, r5, r6, r7, r8, lr}
   230bc:	sub	sp, sp, #40	; 0x28
   230c0:	ldr	r6, [pc, #520]	; 232d0 <g_strcmp0@plt+0xc574>
   230c4:	subs	r4, r1, #0
   230c8:	ldr	r3, [r6]
   230cc:	str	r3, [sp, #36]	; 0x24
   230d0:	beq	23264 <g_strcmp0@plt+0xc508>
   230d4:	cmp	r0, #0
   230d8:	mov	r7, r2
   230dc:	beq	23278 <g_strcmp0@plt+0xc51c>
   230e0:	mov	r2, sp
   230e4:	mov	r1, #8
   230e8:	bl	16858 <gtk_style_context_get_color@plt>
   230ec:	vldr	d4, [pc, #468]	; 232c8 <g_strcmp0@plt+0xc56c>
   230f0:	vldr	d5, [sp, #16]
   230f4:	vldr	d6, [sp, #8]
   230f8:	vldr	d7, [sp]
   230fc:	ldr	r0, [pc, #464]	; 232d4 <g_strcmp0@plt+0xc578>
   23100:	vmul.f64	d5, d5, d4
   23104:	vmul.f64	d6, d6, d4
   23108:	vmul.f64	d7, d7, d4
   2310c:	vcvt.u32.f64	s11, d5
   23110:	vcvt.u32.f64	s13, d6
   23114:	vcvt.u32.f64	s15, d7
   23118:	vmov	r3, s11
   2311c:	vmov	r2, s13
   23120:	vmov	r1, s15
   23124:	bl	161e0 <g_strdup_printf@plt>
   23128:	mov	r8, r0
   2312c:	mov	r0, r4
   23130:	bl	15df0 <pk_package_id_split@plt>
   23134:	subs	r5, r0, #0
   23138:	beq	232a4 <g_strcmp0@plt+0xc548>
   2313c:	cmp	r7, #0
   23140:	beq	23150 <g_strcmp0@plt+0xc3f4>
   23144:	ldrb	r3, [r7]
   23148:	cmp	r3, #0
   2314c:	bne	231d0 <g_strcmp0@plt+0xc474>
   23150:	ldr	r0, [r5]
   23154:	bl	15dc0 <g_string_new@plt>
   23158:	ldr	r2, [r5, #4]
   2315c:	ldrb	r3, [r2]
   23160:	cmp	r3, #0
   23164:	mov	r4, r0
   23168:	bne	23288 <g_strcmp0@plt+0xc52c>
   2316c:	ldr	r0, [r5, #8]
   23170:	bl	22970 <g_strcmp0@plt+0xbc14>
   23174:	subs	r2, r0, #0
   23178:	beq	23188 <g_strcmp0@plt+0xc42c>
   2317c:	ldr	r1, [pc, #340]	; 232d8 <g_strcmp0@plt+0xc57c>
   23180:	mov	r0, r4
   23184:	bl	16c78 <g_string_append_printf@plt>
   23188:	mov	r0, r4
   2318c:	mov	r1, #0
   23190:	bl	168e8 <g_string_free@plt>
   23194:	mov	r7, #0
   23198:	mov	r4, r0
   2319c:	mov	r0, r7
   231a0:	bl	16660 <g_free@plt>
   231a4:	mov	r0, r8
   231a8:	bl	16660 <g_free@plt>
   231ac:	mov	r0, r5
   231b0:	bl	1654c <g_strfreev@plt>
   231b4:	ldr	r2, [sp, #36]	; 0x24
   231b8:	ldr	r3, [r6]
   231bc:	mov	r0, r4
   231c0:	cmp	r2, r3
   231c4:	bne	232c4 <g_strcmp0@plt+0xc568>
   231c8:	add	sp, sp, #40	; 0x28
   231cc:	pop	{r4, r5, r6, r7, r8, pc}
   231d0:	ldr	r0, [pc, #260]	; 232dc <g_strcmp0@plt+0xc580>
   231d4:	bl	15dc0 <g_string_new@plt>
   231d8:	mvn	r1, #0
   231dc:	mov	r4, r0
   231e0:	mov	r0, r7
   231e4:	bl	16b64 <g_markup_escape_text@plt>
   231e8:	ldr	r1, [pc, #240]	; 232e0 <g_strcmp0@plt+0xc584>
   231ec:	mov	r2, r0
   231f0:	mov	r7, r0
   231f4:	mov	r0, r4
   231f8:	bl	16c78 <g_string_append_printf@plt>
   231fc:	mov	r2, r8
   23200:	mov	r0, r4
   23204:	ldr	r1, [pc, #216]	; 232e4 <g_strcmp0@plt+0xc588>
   23208:	bl	16c78 <g_string_append_printf@plt>
   2320c:	mov	r0, r4
   23210:	ldr	r1, [r5]
   23214:	bl	16c00 <g_string_append@plt>
   23218:	ldr	r2, [r5, #4]
   2321c:	ldrb	r3, [r2]
   23220:	cmp	r3, #0
   23224:	bne	23294 <g_strcmp0@plt+0xc538>
   23228:	ldr	r0, [r5, #8]
   2322c:	bl	22970 <g_strcmp0@plt+0xbc14>
   23230:	subs	r2, r0, #0
   23234:	beq	23244 <g_strcmp0@plt+0xc4e8>
   23238:	ldr	r1, [pc, #152]	; 232d8 <g_strcmp0@plt+0xc57c>
   2323c:	mov	r0, r4
   23240:	bl	16c78 <g_string_append_printf@plt>
   23244:	ldr	r1, [pc, #156]	; 232e8 <g_strcmp0@plt+0xc58c>
   23248:	mov	r0, r4
   2324c:	bl	16c00 <g_string_append@plt>
   23250:	mov	r0, r4
   23254:	mov	r1, #0
   23258:	bl	168e8 <g_string_free@plt>
   2325c:	mov	r4, r0
   23260:	b	2319c <g_strcmp0@plt+0xc440>
   23264:	ldr	r2, [pc, #128]	; 232ec <g_strcmp0@plt+0xc590>
   23268:	ldr	r1, [pc, #128]	; 232f0 <g_strcmp0@plt+0xc594>
   2326c:	ldr	r0, [pc, #128]	; 232f4 <g_strcmp0@plt+0xc598>
   23270:	bl	15c58 <g_return_if_fail_warning@plt>
   23274:	b	231b4 <g_strcmp0@plt+0xc458>
   23278:	ldr	r0, [pc, #120]	; 232f8 <g_strcmp0@plt+0xc59c>
   2327c:	bl	160f0 <g_strdup@plt>
   23280:	mov	r8, r0
   23284:	b	2312c <g_strcmp0@plt+0xc3d0>
   23288:	ldr	r1, [pc, #108]	; 232fc <g_strcmp0@plt+0xc5a0>
   2328c:	bl	16c78 <g_string_append_printf@plt>
   23290:	b	2316c <g_strcmp0@plt+0xc410>
   23294:	ldr	r1, [pc, #96]	; 232fc <g_strcmp0@plt+0xc5a0>
   23298:	mov	r0, r4
   2329c:	bl	16c78 <g_string_append_printf@plt>
   232a0:	b	23228 <g_strcmp0@plt+0xc4cc>
   232a4:	mov	r3, r4
   232a8:	ldr	r2, [pc, #80]	; 23300 <g_strcmp0@plt+0xc5a4>
   232ac:	mov	r1, #16
   232b0:	ldr	r0, [pc, #60]	; 232f4 <g_strcmp0@plt+0xc598>
   232b4:	bl	15ebc <g_log@plt>
   232b8:	mov	r4, r5
   232bc:	mov	r7, r5
   232c0:	b	2319c <g_strcmp0@plt+0xc440>
   232c4:	bl	165a0 <__stack_chk_fail@plt>
   232c8:	andeq	r0, r0, r0
   232cc:	rsbmi	lr, pc, r0
   232d0:	andeq	ip, r3, r0, asr lr
   232d4:	andeq	fp, r2, ip, lsr #27
   232d8:	ldrdeq	fp, [r2], -ip
   232dc:	ldrdeq	r7, [r2], -r0
   232e0:	andeq	r7, r2, ip, ror #9
   232e4:	andeq	fp, r2, r4, ror #27
   232e8:	strdeq	fp, [r2], -r8
   232ec:	muleq	r2, r8, sp
   232f0:	andeq	fp, r2, r0, lsr ip
   232f4:	andeq	r6, r2, r8, lsr #21
   232f8:			; <UNDEFINED> instruction: 0x0002bdbc
   232fc:	ldrdeq	fp, [r2], -r8
   23300:	andeq	fp, r2, r4, asr #27
   23304:	push	{r4, r5, r6, lr}
   23308:	subs	r4, r0, #0
   2330c:	beq	2337c <g_strcmp0@plt+0xc620>
   23310:	mov	r5, r1
   23314:	bl	15df0 <pk_package_id_split@plt>
   23318:	cmp	r5, #0
   2331c:	mov	r6, r0
   23320:	beq	23330 <g_strcmp0@plt+0xc5d4>
   23324:	ldrb	r3, [r5]
   23328:	cmp	r3, #0
   2332c:	bne	2334c <g_strcmp0@plt+0xc5f0>
   23330:	ldr	r0, [r6]
   23334:	bl	160f0 <g_strdup@plt>
   23338:	mov	r4, r0
   2333c:	mov	r0, r6
   23340:	bl	1654c <g_strfreev@plt>
   23344:	mov	r0, r4
   23348:	pop	{r4, r5, r6, pc}
   2334c:	mov	r0, r5
   23350:	mvn	r1, #0
   23354:	bl	16b64 <g_markup_escape_text@plt>
   23358:	ldr	r2, [r6]
   2335c:	mov	r5, r0
   23360:	mov	r1, r0
   23364:	ldr	r0, [pc, #40]	; 23394 <g_strcmp0@plt+0xc638>
   23368:	bl	161e0 <g_strdup_printf@plt>
   2336c:	mov	r4, r0
   23370:	mov	r0, r5
   23374:	bl	16660 <g_free@plt>
   23378:	b	2333c <g_strcmp0@plt+0xc5e0>
   2337c:	ldr	r2, [pc, #20]	; 23398 <g_strcmp0@plt+0xc63c>
   23380:	ldr	r1, [pc, #20]	; 2339c <g_strcmp0@plt+0xc640>
   23384:	ldr	r0, [pc, #20]	; 233a0 <g_strcmp0@plt+0xc644>
   23388:	bl	15c58 <g_return_if_fail_warning@plt>
   2338c:	mov	r0, r4
   23390:	pop	{r4, r5, r6, pc}
   23394:	andeq	fp, r2, r0, lsl #28
   23398:	muleq	r2, r8, sp
   2339c:	andeq	fp, r2, r0, asr ip
   233a0:	andeq	r6, r2, r8, lsr #21
   233a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   233a8:	sub	sp, sp, #12
   233ac:	mov	r4, r1
   233b0:	mov	r5, r0
   233b4:	bl	167f8 <getuid@plt>
   233b8:	adds	r0, r0, #0
   233bc:	movne	r0, #1
   233c0:	cmp	r4, #0
   233c4:	moveq	r0, #1
   233c8:	cmp	r0, #0
   233cc:	movne	r4, #0
   233d0:	movne	r5, r4
   233d4:	movne	r6, #1
   233d8:	beq	233f8 <g_strcmp0@plt+0xc69c>
   233dc:	mov	r0, r4
   233e0:	bl	16660 <g_free@plt>
   233e4:	mov	r0, r5
   233e8:	bl	16660 <g_free@plt>
   233ec:	mov	r0, r6
   233f0:	add	sp, sp, #12
   233f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   233f8:	cmp	r5, #0
   233fc:	beq	23528 <g_strcmp0@plt+0xc7cc>
   23400:	mov	r2, #5
   23404:	ldr	r1, [pc, #312]	; 23544 <g_strcmp0@plt+0xc7e8>
   23408:	bl	1666c <dcgettext@plt>
   2340c:	mov	r1, r5
   23410:	bl	161e0 <g_strdup_printf@plt>
   23414:	mov	r4, r0
   23418:	mov	r2, #5
   2341c:	ldr	r1, [pc, #292]	; 23548 <g_strcmp0@plt+0xc7ec>
   23420:	mov	r0, #0
   23424:	bl	1666c <dcgettext@plt>
   23428:	mov	r2, #5
   2342c:	ldr	r1, [pc, #280]	; 2354c <g_strcmp0@plt+0xc7f0>
   23430:	ldr	r8, [pc, #280]	; 23550 <g_strcmp0@plt+0xc7f4>
   23434:	mov	r5, r0
   23438:	mov	r0, #0
   2343c:	bl	1666c <dcgettext@plt>
   23440:	mov	r1, r5
   23444:	mov	r3, #0
   23448:	mov	r2, r0
   2344c:	ldr	r0, [pc, #256]	; 23554 <g_strcmp0@plt+0xc7f8>
   23450:	bl	163a8 <g_strjoin@plt>
   23454:	mov	r2, #1
   23458:	mov	r3, #3
   2345c:	mov	r1, r2
   23460:	str	r4, [sp, #4]
   23464:	str	r8, [sp]
   23468:	mov	r5, r0
   2346c:	mov	r0, #0
   23470:	bl	16bc4 <gtk_message_dialog_new@plt>
   23474:	mov	r6, r0
   23478:	bl	16720 <gtk_dialog_get_type@plt>
   2347c:	mov	r7, r0
   23480:	mov	r1, r0
   23484:	mov	r0, r6
   23488:	bl	15e14 <g_type_check_instance_cast@plt>
   2348c:	mov	r2, #5
   23490:	ldr	r1, [pc, #192]	; 23558 <g_strcmp0@plt+0xc7fc>
   23494:	mov	r9, r0
   23498:	mov	r0, #0
   2349c:	bl	1666c <dcgettext@plt>
   234a0:	mvn	r2, #4
   234a4:	mov	r1, r0
   234a8:	mov	r0, r9
   234ac:	bl	15cac <gtk_dialog_add_button@plt>
   234b0:	bl	166cc <gtk_message_dialog_get_type@plt>
   234b4:	mov	r1, r0
   234b8:	mov	r0, r6
   234bc:	bl	15e14 <g_type_check_instance_cast@plt>
   234c0:	mov	r2, r5
   234c4:	mov	r1, r8
   234c8:	bl	15c28 <gtk_message_dialog_format_secondary_text@plt>
   234cc:	bl	16d20 <gtk_window_get_type@plt>
   234d0:	mov	r1, r0
   234d4:	mov	r0, r6
   234d8:	bl	15e14 <g_type_check_instance_cast@plt>
   234dc:	ldr	r1, [pc, #120]	; 2355c <g_strcmp0@plt+0xc800>
   234e0:	bl	15fb8 <gtk_window_set_icon_name@plt>
   234e4:	mov	r1, r7
   234e8:	mov	r0, r6
   234ec:	bl	15e14 <g_type_check_instance_cast@plt>
   234f0:	bl	168f4 <gtk_dialog_run@plt>
   234f4:	mov	r7, r0
   234f8:	mov	r0, r6
   234fc:	bl	16498 <gtk_widget_destroy@plt>
   23500:	cmn	r7, #5
   23504:	moveq	r6, #1
   23508:	beq	233dc <g_strcmp0@plt+0xc680>
   2350c:	mov	r3, #0
   23510:	ldr	r2, [pc, #72]	; 23560 <g_strcmp0@plt+0xc804>
   23514:	mov	r1, #16
   23518:	ldr	r0, [pc, #68]	; 23564 <g_strcmp0@plt+0xc808>
   2351c:	bl	15ebc <g_log@plt>
   23520:	mov	r6, #0
   23524:	b	233dc <g_strcmp0@plt+0xc680>
   23528:	mov	r2, #5
   2352c:	ldr	r1, [pc, #52]	; 23568 <g_strcmp0@plt+0xc80c>
   23530:	mov	r0, r5
   23534:	bl	1666c <dcgettext@plt>
   23538:	bl	160f0 <g_strdup@plt>
   2353c:	mov	r4, r0
   23540:	b	23418 <g_strcmp0@plt+0xc6bc>
   23544:	andeq	fp, r2, r4, asr #28
   23548:	andeq	fp, r2, r8, ror #28
   2354c:	andeq	fp, r2, r0, lsr #29
   23550:	andeq	r7, r2, r4, lsl r7
   23554:	andeq	r7, r2, r8, lsl #28
   23558:	strdeq	fp, [r2], -ip
   2355c:	muleq	r2, r8, r8
   23560:	andeq	fp, r2, r0, lsl pc
   23564:	andeq	r6, r2, r8, lsr #21
   23568:	andeq	fp, r2, r0, lsl lr
   2356c:	push	{r4, r5, r6, r7, r8, lr}
   23570:	mov	r4, r0
   23574:	mov	r0, r1
   23578:	mov	r5, r1
   2357c:	mov	r7, r2
   23580:	bl	21128 <g_strcmp0@plt+0xa3cc>
   23584:	ldr	r1, [pc, #124]	; 23608 <g_strcmp0@plt+0xc8ac>
   23588:	mov	r6, r0
   2358c:	bl	163c0 <g_str_has_prefix@plt>
   23590:	cmp	r0, #0
   23594:	bne	235d8 <g_strcmp0@plt+0xc87c>
   23598:	ldr	r1, [pc, #108]	; 2360c <g_strcmp0@plt+0xc8b0>
   2359c:	mov	r0, r6
   235a0:	bl	163c0 <g_str_has_prefix@plt>
   235a4:	cmp	r0, #0
   235a8:	movne	r1, #50	; 0x32
   235ac:	beq	235f4 <g_strcmp0@plt+0xc898>
   235b0:	mov	r0, r4
   235b4:	bl	25a6c <g_strcmp0@plt+0xed10>
   235b8:	mov	r2, r6
   235bc:	mov	r1, r7
   235c0:	mov	r0, r4
   235c4:	bl	25d84 <g_strcmp0@plt+0xf028>
   235c8:	cmp	r5, #18
   235cc:	beq	235e0 <g_strcmp0@plt+0xc884>
   235d0:	mov	r0, #1
   235d4:	pop	{r4, r5, r6, r7, r8, pc}
   235d8:	mov	r1, #150	; 0x96
   235dc:	b	235b0 <g_strcmp0@plt+0xc854>
   235e0:	mov	r0, r4
   235e4:	mov	r1, #0
   235e8:	bl	25b34 <g_strcmp0@plt+0xedd8>
   235ec:	mov	r0, #1
   235f0:	pop	{r4, r5, r6, r7, r8, pc}
   235f4:	mov	r2, r6
   235f8:	mov	r1, r7
   235fc:	mov	r0, r4
   23600:	bl	25cc4 <g_strcmp0@plt+0xef68>
   23604:	b	235c8 <g_strcmp0@plt+0xc86c>
   23608:	andeq	fp, r2, r4, lsr #30
   2360c:	andeq	fp, r2, ip, asr r8
   23610:	push	{r4, lr}
   23614:	subs	r4, r0, #0
   23618:	sub	sp, sp, #8
   2361c:	beq	236a0 <g_strcmp0@plt+0xc944>
   23620:	cmp	r4, #59	; 0x3b
   23624:	bls	236b8 <g_strcmp0@plt+0xc95c>
   23628:	vmov	s15, r4
   2362c:	vldr	d4, [pc, #156]	; 236d0 <g_strcmp0@plt+0xc974>
   23630:	vldr	d5, [pc, #160]	; 236d8 <g_strcmp0@plt+0xc97c>
   23634:	vcvt.f64.u32	d6, s15
   23638:	vdiv.f64	d7, d6, d4
   2363c:	vadd.f64	d7, d7, d5
   23640:	vcvt.u32.f64	s15, d7
   23644:	vmov	r4, s15
   23648:	cmp	r4, #59	; 0x3b
   2364c:	bls	23688 <g_strcmp0@plt+0xc92c>
   23650:	ldr	r3, [pc, #136]	; 236e0 <g_strcmp0@plt+0xc984>
   23654:	mov	r2, #5
   23658:	str	r2, [sp]
   2365c:	umull	r3, r4, r3, r4
   23660:	ldr	r2, [pc, #124]	; 236e4 <g_strcmp0@plt+0xc988>
   23664:	ldr	r1, [pc, #124]	; 236e8 <g_strcmp0@plt+0xc98c>
   23668:	lsr	r4, r4, #5
   2366c:	mov	r3, r4
   23670:	mov	r0, #0
   23674:	bl	16204 <dcngettext@plt>
   23678:	mov	r1, r4
   2367c:	add	sp, sp, #8
   23680:	pop	{r4, lr}
   23684:	b	161e0 <g_strdup_printf@plt>
   23688:	mov	r3, #5
   2368c:	str	r3, [sp]
   23690:	ldr	r2, [pc, #84]	; 236ec <g_strcmp0@plt+0xc990>
   23694:	vmov	r3, s15
   23698:	ldr	r1, [pc, #80]	; 236f0 <g_strcmp0@plt+0xc994>
   2369c:	b	23670 <g_strcmp0@plt+0xc914>
   236a0:	mov	r2, #5
   236a4:	ldr	r1, [pc, #72]	; 236f4 <g_strcmp0@plt+0xc998>
   236a8:	bl	1666c <dcgettext@plt>
   236ac:	add	sp, sp, #8
   236b0:	pop	{r4, lr}
   236b4:	b	161e0 <g_strdup_printf@plt>
   236b8:	mov	r3, #5
   236bc:	str	r3, [sp]
   236c0:	ldr	r2, [pc, #48]	; 236f8 <g_strcmp0@plt+0xc99c>
   236c4:	mov	r3, r4
   236c8:	ldr	r1, [pc, #44]	; 236fc <g_strcmp0@plt+0xc9a0>
   236cc:	b	23670 <g_strcmp0@plt+0xc914>
   236d0:	andeq	r0, r0, r0
   236d4:	submi	r0, lr, r0
   236d8:	andeq	r0, r0, r0
   236dc:	svccc	0x00e00000
   236e0:	stmhi	r8, {r0, r3, r7, fp, pc}
   236e4:	andeq	fp, r2, r4, ror #30
   236e8:	andeq	fp, r2, r0, ror pc
   236ec:	andeq	fp, r2, ip, asr #30
   236f0:	andeq	fp, r2, r8, asr pc
   236f4:	andeq	fp, r2, r0, lsr pc
   236f8:	andeq	fp, r2, r4, lsr pc
   236fc:	andeq	fp, r2, r0, asr #30
   23700:	push	{r4, r5, r6, r7, r8, lr}
   23704:	subs	r5, r0, #0
   23708:	sub	sp, sp, #8
   2370c:	beq	23834 <g_strcmp0@plt+0xcad8>
   23710:	cmp	r5, #59	; 0x3b
   23714:	bls	238b8 <g_strcmp0@plt+0xcb5c>
   23718:	vmov	s15, r5
   2371c:	vldr	d5, [pc, #436]	; 238d8 <g_strcmp0@plt+0xcb7c>
   23720:	vldr	d6, [pc, #440]	; 238e0 <g_strcmp0@plt+0xcb84>
   23724:	vcvt.f64.u32	d4, s15
   23728:	vdiv.f64	d7, d4, d5
   2372c:	vadd.f64	d7, d7, d6
   23730:	vcvt.u32.f64	s15, d7
   23734:	vmov	r4, s15
   23738:	cmp	r4, #59	; 0x3b
   2373c:	bls	23784 <g_strcmp0@plt+0xca28>
   23740:	ldr	r5, [pc, #416]	; 238e8 <g_strcmp0@plt+0xcb8c>
   23744:	umull	r3, r5, r5, r4
   23748:	lsr	r5, r5, #5
   2374c:	rsb	r3, r5, r5, lsl #4
   23750:	subs	r4, r4, r3, lsl #2
   23754:	bne	237c8 <g_strcmp0@plt+0xca6c>
   23758:	mov	r3, #5
   2375c:	ldr	r2, [pc, #392]	; 238ec <g_strcmp0@plt+0xcb90>
   23760:	ldr	r1, [pc, #392]	; 238f0 <g_strcmp0@plt+0xcb94>
   23764:	str	r3, [sp]
   23768:	mov	r0, r4
   2376c:	mov	r3, r5
   23770:	bl	16204 <dcngettext@plt>
   23774:	mov	r1, r5
   23778:	add	sp, sp, #8
   2377c:	pop	{r4, r5, r6, r7, r8, lr}
   23780:	b	161e0 <g_strdup_printf@plt>
   23784:	ldr	r6, [pc, #348]	; 238e8 <g_strcmp0@plt+0xcb8c>
   23788:	umull	r3, r6, r6, r5
   2378c:	lsr	r6, r6, #5
   23790:	rsb	r6, r6, r6, lsl #4
   23794:	subs	r6, r5, r6, lsl #2
   23798:	bne	2384c <g_strcmp0@plt+0xcaf0>
   2379c:	mov	r3, #5
   237a0:	str	r3, [sp]
   237a4:	mov	r0, r6
   237a8:	vmov	r3, s15
   237ac:	ldr	r2, [pc, #320]	; 238f4 <g_strcmp0@plt+0xcb98>
   237b0:	ldr	r1, [pc, #320]	; 238f8 <g_strcmp0@plt+0xcb9c>
   237b4:	bl	16204 <dcngettext@plt>
   237b8:	mov	r1, r4
   237bc:	add	sp, sp, #8
   237c0:	pop	{r4, r5, r6, r7, r8, lr}
   237c4:	b	161e0 <g_strdup_printf@plt>
   237c8:	mov	r2, #5
   237cc:	ldr	r1, [pc, #296]	; 238fc <g_strcmp0@plt+0xcba0>
   237d0:	mov	r0, #0
   237d4:	mov	r6, r2
   237d8:	bl	1666c <dcgettext@plt>
   237dc:	mov	r3, r5
   237e0:	str	r6, [sp]
   237e4:	ldr	r2, [pc, #276]	; 23900 <g_strcmp0@plt+0xcba4>
   237e8:	ldr	r1, [pc, #276]	; 23904 <g_strcmp0@plt+0xcba8>
   237ec:	mov	r7, r0
   237f0:	mov	r0, #0
   237f4:	bl	16204 <dcngettext@plt>
   237f8:	mov	r3, r4
   237fc:	str	r6, [sp]
   23800:	ldr	r2, [pc, #256]	; 23908 <g_strcmp0@plt+0xcbac>
   23804:	ldr	r1, [pc, #256]	; 2390c <g_strcmp0@plt+0xcbb0>
   23808:	mov	r8, r0
   2380c:	mov	r0, #0
   23810:	bl	16204 <dcngettext@plt>
   23814:	mov	r2, r8
   23818:	mov	r3, r4
   2381c:	mov	r1, r5
   23820:	str	r0, [sp]
   23824:	mov	r0, r7
   23828:	bl	161e0 <g_strdup_printf@plt>
   2382c:	add	sp, sp, #8
   23830:	pop	{r4, r5, r6, r7, r8, pc}
   23834:	mov	r2, #5
   23838:	ldr	r1, [pc, #208]	; 23910 <g_strcmp0@plt+0xcbb4>
   2383c:	bl	1666c <dcgettext@plt>
   23840:	add	sp, sp, #8
   23844:	pop	{r4, r5, r6, r7, r8, lr}
   23848:	b	161e0 <g_strdup_printf@plt>
   2384c:	mov	r2, #5
   23850:	ldr	r1, [pc, #164]	; 238fc <g_strcmp0@plt+0xcba0>
   23854:	mov	r0, #0
   23858:	mov	r5, r2
   2385c:	bl	1666c <dcgettext@plt>
   23860:	mov	r3, r4
   23864:	str	r5, [sp]
   23868:	ldr	r2, [pc, #152]	; 23908 <g_strcmp0@plt+0xcbac>
   2386c:	ldr	r1, [pc, #152]	; 2390c <g_strcmp0@plt+0xcbb0>
   23870:	mov	r7, r0
   23874:	mov	r0, #0
   23878:	bl	16204 <dcngettext@plt>
   2387c:	mov	r3, r6
   23880:	str	r5, [sp]
   23884:	ldr	r2, [pc, #136]	; 23914 <g_strcmp0@plt+0xcbb8>
   23888:	ldr	r1, [pc, #136]	; 23918 <g_strcmp0@plt+0xcbbc>
   2388c:	mov	r8, r0
   23890:	mov	r0, #0
   23894:	bl	16204 <dcngettext@plt>
   23898:	mov	r2, r8
   2389c:	mov	r3, r6
   238a0:	mov	r1, r4
   238a4:	str	r0, [sp]
   238a8:	mov	r0, r7
   238ac:	bl	161e0 <g_strdup_printf@plt>
   238b0:	add	sp, sp, #8
   238b4:	pop	{r4, r5, r6, r7, r8, pc}
   238b8:	mov	r3, #5
   238bc:	str	r3, [sp]
   238c0:	ldr	r2, [pc, #84]	; 2391c <g_strcmp0@plt+0xcbc0>
   238c4:	mov	r3, r5
   238c8:	ldr	r1, [pc, #80]	; 23920 <g_strcmp0@plt+0xcbc4>
   238cc:	mov	r0, #0
   238d0:	b	23770 <g_strcmp0@plt+0xca14>
   238d4:	nop			; (mov r0, r0)
   238d8:	andeq	r0, r0, r0
   238dc:	submi	r0, lr, r0
   238e0:	andeq	r0, r0, r0
   238e4:	svccc	0x00e00000
   238e8:	stmhi	r8, {r0, r3, r7, fp, pc}
   238ec:	andeq	fp, r2, r4, ror #30
   238f0:	andeq	fp, r2, r0, ror pc
   238f4:	andeq	fp, r2, ip, asr #30
   238f8:	andeq	fp, r2, r8, asr pc
   238fc:	andeq	fp, r2, r8, ror pc
   23900:	andeq	fp, r2, r4, lsr #31
   23904:	andeq	fp, r2, ip, lsr #31
   23908:	andeq	fp, r2, r4, lsl #31
   2390c:	andeq	fp, r2, ip, lsl #31
   23910:	andeq	fp, r2, r0, lsr pc
   23914:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   23918:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   2391c:	andeq	fp, r2, r4, lsr pc
   23920:	andeq	fp, r2, r0, asr #30
   23924:	push	{r4, lr}
   23928:	sub	sp, sp, #8
   2392c:	mov	r4, r0
   23930:	bl	16564 <g_strv_length@plt>
   23934:	subs	r2, r0, #0
   23938:	ldreq	r0, [pc, #224]	; 23a20 <g_strcmp0@plt+0xccc4>
   2393c:	beq	23978 <g_strcmp0@plt+0xcc1c>
   23940:	cmp	r2, #1
   23944:	beq	23974 <g_strcmp0@plt+0xcc18>
   23948:	cmp	r2, #2
   2394c:	beq	239dc <g_strcmp0@plt+0xcc80>
   23950:	cmp	r2, #3
   23954:	beq	239fc <g_strcmp0@plt+0xcca0>
   23958:	cmp	r2, #4
   2395c:	beq	23984 <g_strcmp0@plt+0xcc28>
   23960:	cmp	r2, #5
   23964:	movne	r0, #0
   23968:	beq	239ac <g_strcmp0@plt+0xcc50>
   2396c:	add	sp, sp, #8
   23970:	pop	{r4, pc}
   23974:	ldr	r0, [r4]
   23978:	add	sp, sp, #8
   2397c:	pop	{r4, lr}
   23980:	b	160f0 <g_strdup@plt>
   23984:	mov	r2, #5
   23988:	ldr	r1, [pc, #148]	; 23a24 <g_strcmp0@plt+0xccc8>
   2398c:	mov	r0, #0
   23990:	bl	1666c <dcgettext@plt>
   23994:	ldr	r2, [r4, #12]
   23998:	ldr	r3, [r4, #8]
   2399c:	str	r2, [sp]
   239a0:	ldm	r4, {r1, r2}
   239a4:	bl	161e0 <g_strdup_printf@plt>
   239a8:	b	2396c <g_strcmp0@plt+0xcc10>
   239ac:	ldr	r1, [pc, #116]	; 23a28 <g_strcmp0@plt+0xcccc>
   239b0:	mov	r0, #0
   239b4:	bl	1666c <dcgettext@plt>
   239b8:	ldr	r2, [r4, #16]
   239bc:	ldr	r3, [r4, #12]
   239c0:	str	r2, [sp, #4]
   239c4:	str	r3, [sp]
   239c8:	ldrd	r2, [r4, #4]
   239cc:	ldr	r1, [r4]
   239d0:	bl	161e0 <g_strdup_printf@plt>
   239d4:	add	sp, sp, #8
   239d8:	pop	{r4, pc}
   239dc:	mov	r2, #5
   239e0:	ldr	r1, [pc, #68]	; 23a2c <g_strcmp0@plt+0xccd0>
   239e4:	mov	r0, #0
   239e8:	bl	1666c <dcgettext@plt>
   239ec:	ldm	r4, {r1, r2}
   239f0:	add	sp, sp, #8
   239f4:	pop	{r4, lr}
   239f8:	b	161e0 <g_strdup_printf@plt>
   239fc:	mov	r2, #5
   23a00:	ldr	r1, [pc, #40]	; 23a30 <g_strcmp0@plt+0xccd4>
   23a04:	mov	r0, #0
   23a08:	bl	1666c <dcgettext@plt>
   23a0c:	ldrd	r2, [r4, #4]
   23a10:	ldr	r1, [r4]
   23a14:	add	sp, sp, #8
   23a18:	pop	{r4, lr}
   23a1c:	b	161e0 <g_strdup_printf@plt>
   23a20:			; <UNDEFINED> instruction: 0x0002bfb4
   23a24:	andeq	fp, r2, r0, asr #31
   23a28:			; <UNDEFINED> instruction: 0x0002bfbc
   23a2c:	andeq	fp, r2, r8, asr #31
   23a30:	andeq	fp, r2, r4, asr #31
   23a34:	mov	r0, #0
   23a38:	bx	lr
   23a3c:	push	{r4, lr}
   23a40:	sub	sp, sp, #16
   23a44:	bl	16324 <pk_task_get_type@plt>
   23a48:	mov	r4, r0
   23a4c:	ldr	r0, [pc, #48]	; 23a84 <g_strcmp0@plt+0xcd28>
   23a50:	bl	1651c <g_intern_static_string@plt>
   23a54:	ldr	r1, [pc, #44]	; 23a88 <g_strcmp0@plt+0xcd2c>
   23a58:	mov	r2, #0
   23a5c:	mov	r3, #24
   23a60:	stmib	sp, {r1, r2}
   23a64:	str	r3, [sp]
   23a68:	mov	r2, #132	; 0x84
   23a6c:	ldr	r3, [pc, #24]	; 23a8c <g_strcmp0@plt+0xcd30>
   23a70:	mov	r1, r0
   23a74:	mov	r0, r4
   23a78:	bl	15c70 <g_type_register_static_simple@plt>
   23a7c:	add	sp, sp, #16
   23a80:	pop	{r4, pc}
   23a84:	strdeq	fp, [r2], -r0
   23a88:	andeq	r3, r2, ip, ror #30
   23a8c:	andeq	r3, r2, r0, lsr fp
   23a90:	push	{r4, lr}
   23a94:	mov	r4, r1
   23a98:	bl	15db4 <gtk_widget_get_type@plt>
   23a9c:	ldr	r3, [r4, #20]
   23aa0:	mov	r1, r0
   23aa4:	ldr	r0, [r3, #12]
   23aa8:	bl	15e14 <g_type_check_instance_cast@plt>
   23aac:	bl	15e80 <gtk_widget_hide@plt>
   23ab0:	bl	16324 <pk_task_get_type@plt>
   23ab4:	mov	r1, r0
   23ab8:	mov	r0, r4
   23abc:	bl	15e14 <g_type_check_instance_cast@plt>
   23ac0:	ldr	r3, [r4, #20]
   23ac4:	ldr	r1, [r3, #28]
   23ac8:	bl	161bc <pk_task_user_accepted@plt>
   23acc:	ldr	r3, [r4, #20]
   23ad0:	mov	r2, #0
   23ad4:	str	r2, [r3, #28]
   23ad8:	str	r2, [r3, #12]
   23adc:	pop	{r4, pc}
   23ae0:	push	{r4, lr}
   23ae4:	mov	r4, r1
   23ae8:	bl	15db4 <gtk_widget_get_type@plt>
   23aec:	ldr	r3, [r4, #20]
   23af0:	mov	r1, r0
   23af4:	ldr	r0, [r3, #12]
   23af8:	bl	15e14 <g_type_check_instance_cast@plt>
   23afc:	bl	15e80 <gtk_widget_hide@plt>
   23b00:	bl	16324 <pk_task_get_type@plt>
   23b04:	mov	r1, r0
   23b08:	mov	r0, r4
   23b0c:	bl	15e14 <g_type_check_instance_cast@plt>
   23b10:	ldr	r3, [r4, #20]
   23b14:	ldr	r1, [r3, #28]
   23b18:	bl	16168 <pk_task_user_declined@plt>
   23b1c:	ldr	r3, [r4, #20]
   23b20:	mov	r2, #0
   23b24:	str	r2, [r3, #28]
   23b28:	str	r2, [r3, #12]
   23b2c:	pop	{r4, pc}
   23b30:	push	{r4, r5, r6, lr}
   23b34:	mov	r4, r0
   23b38:	bl	16ad4 <g_type_class_peek_parent@plt>
   23b3c:	ldr	r1, [pc, #128]	; 23bc4 <g_strcmp0@plt+0xce68>
   23b40:	ldr	r3, [r1, #4]
   23b44:	cmp	r3, #0
   23b48:	str	r0, [r1]
   23b4c:	bne	23bb4 <g_strcmp0@plt+0xce58>
   23b50:	mov	r1, #80	; 0x50
   23b54:	mov	r0, r4
   23b58:	bl	16c90 <g_type_check_class_cast@plt>
   23b5c:	mov	r5, r0
   23b60:	bl	16324 <pk_task_get_type@plt>
   23b64:	mov	r1, r0
   23b68:	mov	r0, r4
   23b6c:	bl	16c90 <g_type_check_class_cast@plt>
   23b70:	ldr	r1, [pc, #80]	; 23bc8 <g_strcmp0@plt+0xce6c>
   23b74:	ldr	r2, [pc, #80]	; 23bcc <g_strcmp0@plt+0xce70>
   23b78:	str	r1, [r5, #24]
   23b7c:	ldr	lr, [pc, #76]	; 23bd0 <g_strcmp0@plt+0xce74>
   23b80:	ldr	r1, [pc, #76]	; 23bd4 <g_strcmp0@plt+0xce78>
   23b84:	ldr	ip, [pc, #76]	; 23bd8 <g_strcmp0@plt+0xce7c>
   23b88:	mov	r3, r0
   23b8c:	mov	r0, r4
   23b90:	str	r2, [r3, #92]	; 0x5c
   23b94:	ldr	r2, [pc, #64]	; 23bdc <g_strcmp0@plt+0xce80>
   23b98:	str	lr, [r3, #96]	; 0x60
   23b9c:	str	r1, [r3, #104]	; 0x68
   23ba0:	str	ip, [r3, #100]	; 0x64
   23ba4:	str	r2, [r3, #108]	; 0x6c
   23ba8:	mov	r1, #36	; 0x24
   23bac:	pop	{r4, r5, r6, lr}
   23bb0:	b	1678c <g_type_class_add_private@plt>
   23bb4:	add	r1, r1, #4
   23bb8:	mov	r0, r4
   23bbc:	bl	15cc4 <g_type_class_adjust_private_offset@plt>
   23bc0:	b	23b50 <g_strcmp0@plt+0xcdf4>
   23bc4:	andeq	sp, r3, r0, lsl r7
   23bc8:	andeq	r5, r2, ip, ror #1
   23bcc:	andeq	r4, r2, r0, asr #29
   23bd0:	andeq	r4, r2, ip, lsl #24
   23bd4:	andeq	r4, r2, r4, lsr #15
   23bd8:	muleq	r2, ip, r9
   23bdc:	andeq	r4, r2, ip, lsl #8
   23be0:	push	{r4, r5, r6, lr}
   23be4:	mov	r4, r1
   23be8:	mov	r6, r0
   23bec:	mov	r5, r2
   23bf0:	bl	15db4 <gtk_widget_get_type@plt>
   23bf4:	cmn	r4, #8
   23bf8:	mov	r1, r0
   23bfc:	mov	r0, r6
   23c00:	beq	23c14 <g_strcmp0@plt+0xceb8>
   23c04:	bl	15e14 <g_type_check_instance_cast@plt>
   23c08:	mov	r1, r5
   23c0c:	pop	{r4, r5, r6, lr}
   23c10:	b	23ae0 <g_strcmp0@plt+0xcd84>
   23c14:	bl	15e14 <g_type_check_instance_cast@plt>
   23c18:	mov	r1, r5
   23c1c:	pop	{r4, r5, r6, lr}
   23c20:	b	23a90 <g_strcmp0@plt+0xcd34>
   23c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c28:	mov	r3, r1
   23c2c:	ldr	r6, [pc, #676]	; 23ed8 <g_strcmp0@plt+0xd17c>
   23c30:	sub	sp, sp, #20
   23c34:	mov	r7, r2
   23c38:	ldr	r2, [r6]
   23c3c:	mov	r1, r7
   23c40:	mov	sl, r0
   23c44:	mov	r0, r3
   23c48:	mov	r3, #0
   23c4c:	str	r2, [sp, #12]
   23c50:	str	r3, [sp, #8]
   23c54:	bl	160e4 <pk_package_sack_filter_by_info@plt>
   23c58:	mov	r4, r0
   23c5c:	bl	16840 <pk_package_sack_get_size@plt>
   23c60:	cmp	r0, #0
   23c64:	beq	23ccc <g_strcmp0@plt+0xcf70>
   23c68:	mov	r1, #6
   23c6c:	mov	r0, #1
   23c70:	bl	15f4c <gtk_box_new@plt>
   23c74:	sub	r7, r7, #11
   23c78:	mov	r5, r0
   23c7c:	bl	16150 <gtk_container_get_type@plt>
   23c80:	mov	r1, r0
   23c84:	mov	r0, r5
   23c88:	bl	15e14 <g_type_check_instance_cast@plt>
   23c8c:	mov	r1, #12
   23c90:	bl	16198 <gtk_container_set_border_width@plt>
   23c94:	mov	r2, #5
   23c98:	cmp	r7, #9
   23c9c:	ldrls	pc, [pc, r7, lsl #2]
   23ca0:	b	23e84 <g_strcmp0@plt+0xd128>
   23ca4:	andeq	r3, r2, r8, lsr #27
   23ca8:	ldrdeq	r3, [r2], -r4
   23cac:	andeq	r3, r2, r0, lsl #28
   23cb0:	andeq	r3, r2, r4, lsl #29
   23cb4:	andeq	r3, r2, ip, lsr #28
   23cb8:	andeq	r3, r2, r4, lsl #29
   23cbc:	andeq	r3, r2, r4, lsl #29
   23cc0:	andeq	r3, r2, r4, lsl #29
   23cc4:	andeq	r3, r2, r8, asr lr
   23cc8:	andeq	r3, r2, r8, lsl #26
   23ccc:	mov	r0, r7
   23cd0:	bl	16960 <pk_info_enum_to_string@plt>
   23cd4:	ldr	r2, [pc, #512]	; 23edc <g_strcmp0@plt+0xd180>
   23cd8:	mov	r1, #128	; 0x80
   23cdc:	mov	r3, r0
   23ce0:	ldr	r0, [pc, #504]	; 23ee0 <g_strcmp0@plt+0xd184>
   23ce4:	bl	15ebc <g_log@plt>
   23ce8:	mov	r0, r4
   23cec:	bl	16990 <g_object_unref@plt>
   23cf0:	ldr	r2, [sp, #12]
   23cf4:	ldr	r3, [r6]
   23cf8:	cmp	r2, r3
   23cfc:	bne	23ed4 <g_strcmp0@plt+0xd178>
   23d00:	add	sp, sp, #20
   23d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d08:	ldr	r1, [pc, #468]	; 23ee4 <g_strcmp0@plt+0xd188>
   23d0c:	mov	r0, #0
   23d10:	bl	1666c <dcgettext@plt>
   23d14:	mov	r2, #5
   23d18:	ldr	r1, [pc, #456]	; 23ee8 <g_strcmp0@plt+0xd18c>
   23d1c:	mov	fp, r0
   23d20:	mov	r0, #0
   23d24:	bl	1666c <dcgettext@plt>
   23d28:	bl	162b8 <gtk_label_new@plt>
   23d2c:	str	r0, [sp, #4]
   23d30:	add	r2, sp, #8
   23d34:	mov	r1, #0
   23d38:	mov	r0, r4
   23d3c:	bl	15d48 <pk_package_sack_get_details@plt>
   23d40:	cmp	r0, #0
   23d44:	beq	23eb0 <g_strcmp0@plt+0xd154>
   23d48:	mov	r0, r4
   23d4c:	bl	16138 <pk_package_sack_get_total_bytes@plt>
   23d50:	mov	r8, r0
   23d54:	mov	r0, r4
   23d58:	mov	r9, r1
   23d5c:	bl	163cc <pk_package_sack_get_array@plt>
   23d60:	mov	r2, r8
   23d64:	mov	r3, r9
   23d68:	mov	r1, fp
   23d6c:	mov	r7, r0
   23d70:	mov	r0, r5
   23d74:	bl	21c34 <g_strcmp0@plt+0xaed8>
   23d78:	mov	r1, r7
   23d7c:	mov	r0, r5
   23d80:	bl	21a98 <g_strcmp0@plt+0xad3c>
   23d84:	ldr	r2, [sp, #4]
   23d88:	mov	r1, r5
   23d8c:	mov	r0, sl
   23d90:	bl	16444 <gtk_notebook_append_page@plt>
   23d94:	cmp	r7, #0
   23d98:	beq	23ce8 <g_strcmp0@plt+0xcf8c>
   23d9c:	mov	r0, r7
   23da0:	bl	16af8 <g_ptr_array_unref@plt>
   23da4:	b	23ce8 <g_strcmp0@plt+0xcf8c>
   23da8:	ldr	r1, [pc, #316]	; 23eec <g_strcmp0@plt+0xd190>
   23dac:	mov	r0, #0
   23db0:	bl	1666c <dcgettext@plt>
   23db4:	mov	r2, #5
   23db8:	ldr	r1, [pc, #304]	; 23ef0 <g_strcmp0@plt+0xd194>
   23dbc:	mov	fp, r0
   23dc0:	mov	r0, #0
   23dc4:	bl	1666c <dcgettext@plt>
   23dc8:	bl	162b8 <gtk_label_new@plt>
   23dcc:	str	r0, [sp, #4]
   23dd0:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23dd4:	ldr	r1, [pc, #280]	; 23ef4 <g_strcmp0@plt+0xd198>
   23dd8:	mov	r0, #0
   23ddc:	bl	1666c <dcgettext@plt>
   23de0:	mov	r2, #5
   23de4:	ldr	r1, [pc, #268]	; 23ef8 <g_strcmp0@plt+0xd19c>
   23de8:	mov	fp, r0
   23dec:	mov	r0, #0
   23df0:	bl	1666c <dcgettext@plt>
   23df4:	bl	162b8 <gtk_label_new@plt>
   23df8:	str	r0, [sp, #4]
   23dfc:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23e00:	ldr	r1, [pc, #244]	; 23efc <g_strcmp0@plt+0xd1a0>
   23e04:	mov	r0, #0
   23e08:	bl	1666c <dcgettext@plt>
   23e0c:	mov	r2, #5
   23e10:	ldr	r1, [pc, #232]	; 23f00 <g_strcmp0@plt+0xd1a4>
   23e14:	mov	fp, r0
   23e18:	mov	r0, #0
   23e1c:	bl	1666c <dcgettext@plt>
   23e20:	bl	162b8 <gtk_label_new@plt>
   23e24:	str	r0, [sp, #4]
   23e28:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23e2c:	ldr	r1, [pc, #200]	; 23efc <g_strcmp0@plt+0xd1a0>
   23e30:	mov	r0, #0
   23e34:	bl	1666c <dcgettext@plt>
   23e38:	mov	r2, #5
   23e3c:	ldr	r1, [pc, #192]	; 23f04 <g_strcmp0@plt+0xd1a8>
   23e40:	mov	fp, r0
   23e44:	mov	r0, #0
   23e48:	bl	1666c <dcgettext@plt>
   23e4c:	bl	162b8 <gtk_label_new@plt>
   23e50:	str	r0, [sp, #4]
   23e54:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23e58:	ldr	r1, [pc, #168]	; 23f08 <g_strcmp0@plt+0xd1ac>
   23e5c:	mov	r0, #0
   23e60:	bl	1666c <dcgettext@plt>
   23e64:	mov	r2, #5
   23e68:	ldr	r1, [pc, #156]	; 23f0c <g_strcmp0@plt+0xd1b0>
   23e6c:	mov	fp, r0
   23e70:	mov	r0, #0
   23e74:	bl	1666c <dcgettext@plt>
   23e78:	bl	162b8 <gtk_label_new@plt>
   23e7c:	str	r0, [sp, #4]
   23e80:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23e84:	ldr	r1, [pc, #132]	; 23f10 <g_strcmp0@plt+0xd1b4>
   23e88:	mov	r0, #0
   23e8c:	bl	1666c <dcgettext@plt>
   23e90:	mov	r2, #5
   23e94:	ldr	r1, [pc, #120]	; 23f14 <g_strcmp0@plt+0xd1b8>
   23e98:	mov	fp, r0
   23e9c:	mov	r0, #0
   23ea0:	bl	1666c <dcgettext@plt>
   23ea4:	bl	162b8 <gtk_label_new@plt>
   23ea8:	str	r0, [sp, #4]
   23eac:	b	23d30 <g_strcmp0@plt+0xcfd4>
   23eb0:	ldr	r3, [sp, #8]
   23eb4:	ldr	r2, [pc, #92]	; 23f18 <g_strcmp0@plt+0xd1bc>
   23eb8:	mov	r1, #16
   23ebc:	ldr	r3, [r3, #8]
   23ec0:	ldr	r0, [pc, #24]	; 23ee0 <g_strcmp0@plt+0xd184>
   23ec4:	bl	15ebc <g_log@plt>
   23ec8:	ldr	r0, [sp, #8]
   23ecc:	bl	15d3c <g_error_free@plt>
   23ed0:	b	23d48 <g_strcmp0@plt+0xcfec>
   23ed4:	bl	165a0 <__stack_chk_fail@plt>
   23ed8:	andeq	ip, r3, r0, asr lr
   23edc:	strdeq	fp, [r2], -r8
   23ee0:	andeq	r6, r2, r8, lsr #21
   23ee4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   23ee8:	andeq	ip, r2, r0, lsr r1
   23eec:	andeq	ip, r2, r0, lsl #1
   23ef0:	strheq	ip, [r2], -r0
   23ef4:	andeq	ip, r2, ip
   23ef8:	andeq	ip, r2, r0, asr #32
   23efc:	andeq	ip, r2, r8, asr #32
   23f00:	andeq	ip, r2, r8, ror r0
   23f04:	andeq	sl, r2, r8, ror #25
   23f08:	strheq	ip, [r2], -r8
   23f0c:	strdeq	ip, [r2], -r0
   23f10:	andeq	ip, r2, ip, lsr r1
   23f14:	andeq	fp, r2, r4, lsr r2
   23f18:	andeq	ip, r2, r0, ror r1
   23f1c:	push	{r4, lr}
   23f20:	mcr	15, 0, r0, cr7, cr10, {5}
   23f24:	ldr	r4, [pc, #60]	; 23f68 <g_strcmp0@plt+0xd20c>
   23f28:	ldr	r3, [r4, #8]
   23f2c:	mcr	15, 0, r0, cr7, cr10, {5}
   23f30:	cmp	r3, #0
   23f34:	beq	23f40 <g_strcmp0@plt+0xd1e4>
   23f38:	ldr	r0, [r4, #8]
   23f3c:	pop	{r4, pc}
   23f40:	add	r0, r4, #8
   23f44:	bl	1642c <g_once_init_enter@plt>
   23f48:	cmp	r0, #0
   23f4c:	beq	23f38 <g_strcmp0@plt+0xd1dc>
   23f50:	bl	23a3c <g_strcmp0@plt+0xcce0>
   23f54:	mov	r1, r0
   23f58:	add	r0, r4, #8
   23f5c:	bl	169d8 <g_once_init_leave@plt>
   23f60:	ldr	r0, [r4, #8]
   23f64:	pop	{r4, pc}
   23f68:	andeq	sp, r3, r0, lsl r7
   23f6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23f70:	sub	sp, sp, #16
   23f74:	ldr	r7, [pc, #1076]	; 243b0 <g_strcmp0@plt+0xd654>
   23f78:	mov	r4, r0
   23f7c:	mov	r6, #0
   23f80:	ldr	r3, [r7]
   23f84:	str	r3, [sp, #12]
   23f88:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   23f8c:	mov	r1, r0
   23f90:	mov	r0, r4
   23f94:	bl	1639c <g_type_instance_get_private@plt>
   23f98:	mov	r5, r0
   23f9c:	str	r0, [r4, #20]
   23fa0:	ldr	r0, [pc, #1036]	; 243b4 <g_strcmp0@plt+0xd658>
   23fa4:	str	r6, [r5, #28]
   23fa8:	str	r6, [r5, #8]
   23fac:	str	r6, [r5, #12]
   23fb0:	bl	15c10 <g_settings_new@plt>
   23fb4:	ldr	r8, [r4, #20]
   23fb8:	str	r0, [r5, #4]
   23fbc:	str	r6, [sp, #8]
   23fc0:	bl	168dc <gtk_builder_new@plt>
   23fc4:	ldr	r3, [r4, #20]
   23fc8:	add	r2, sp, #8
   23fcc:	ldr	r1, [pc, #996]	; 243b8 <g_strcmp0@plt+0xd65c>
   23fd0:	str	r0, [r8, #16]
   23fd4:	ldr	r0, [r3, #16]
   23fd8:	bl	16cc0 <gtk_builder_add_from_file@plt>
   23fdc:	cmp	r0, r6
   23fe0:	beq	24340 <g_strcmp0@plt+0xd5e4>
   23fe4:	ldr	r3, [r4, #20]
   23fe8:	ldr	r1, [pc, #972]	; 243bc <g_strcmp0@plt+0xd660>
   23fec:	mov	r6, #0
   23ff0:	ldr	r0, [r3, #16]
   23ff4:	bl	1615c <gtk_builder_get_object@plt>
   23ff8:	mov	r8, r0
   23ffc:	bl	15db4 <gtk_widget_get_type@plt>
   24000:	mov	r5, r0
   24004:	mov	r1, r0
   24008:	mov	r0, r8
   2400c:	bl	15e14 <g_type_check_instance_cast@plt>
   24010:	ldr	r2, [pc, #936]	; 243c0 <g_strcmp0@plt+0xd664>
   24014:	str	r6, [sp, #4]
   24018:	str	r6, [sp]
   2401c:	mov	r3, r4
   24020:	ldr	r1, [pc, #924]	; 243c4 <g_strcmp0@plt+0xd668>
   24024:	bl	16414 <g_signal_connect_data@plt>
   24028:	ldr	r3, [r4, #20]
   2402c:	ldr	r1, [pc, #904]	; 243bc <g_strcmp0@plt+0xd660>
   24030:	ldr	r0, [r3, #16]
   24034:	bl	1615c <gtk_builder_get_object@plt>
   24038:	mov	r1, r5
   2403c:	bl	15e14 <g_type_check_instance_cast@plt>
   24040:	mov	r9, r0
   24044:	bl	16d20 <gtk_window_get_type@plt>
   24048:	mov	r1, r0
   2404c:	mov	r8, r0
   24050:	mov	r0, r9
   24054:	bl	15e14 <g_type_check_instance_cast@plt>
   24058:	ldr	r1, [pc, #872]	; 243c8 <g_strcmp0@plt+0xd66c>
   2405c:	bl	15fb8 <gtk_window_set_icon_name@plt>
   24060:	ldr	r3, [r4, #20]
   24064:	ldr	r1, [pc, #864]	; 243cc <g_strcmp0@plt+0xd670>
   24068:	ldr	r0, [r3, #16]
   2406c:	bl	1615c <gtk_builder_get_object@plt>
   24070:	mov	r1, r5
   24074:	bl	15e14 <g_type_check_instance_cast@plt>
   24078:	ldr	r2, [pc, #832]	; 243c0 <g_strcmp0@plt+0xd664>
   2407c:	str	r6, [sp, #4]
   24080:	str	r6, [sp]
   24084:	mov	r3, r4
   24088:	ldr	r1, [pc, #832]	; 243d0 <g_strcmp0@plt+0xd674>
   2408c:	bl	16414 <g_signal_connect_data@plt>
   24090:	ldr	r3, [r4, #20]
   24094:	ldr	r1, [pc, #824]	; 243d4 <g_strcmp0@plt+0xd678>
   24098:	ldr	r0, [r3, #16]
   2409c:	bl	1615c <gtk_builder_get_object@plt>
   240a0:	mov	r1, r5
   240a4:	bl	15e14 <g_type_check_instance_cast@plt>
   240a8:	bl	15e80 <gtk_widget_hide@plt>
   240ac:	mov	r2, #5
   240b0:	ldr	r1, [pc, #800]	; 243d8 <g_strcmp0@plt+0xd67c>
   240b4:	mov	r0, r6
   240b8:	bl	1666c <dcgettext@plt>
   240bc:	bl	16030 <gtk_button_new_with_mnemonic@plt>
   240c0:	mov	r3, r4
   240c4:	str	r6, [sp, #4]
   240c8:	str	r6, [sp]
   240cc:	ldr	r2, [pc, #776]	; 243dc <g_strcmp0@plt+0xd680>
   240d0:	ldr	r1, [pc, #760]	; 243d0 <g_strcmp0@plt+0xd674>
   240d4:	mov	r9, r0
   240d8:	bl	16414 <g_signal_connect_data@plt>
   240dc:	mov	r2, #5
   240e0:	mov	r0, r6
   240e4:	ldr	r1, [pc, #756]	; 243e0 <g_strcmp0@plt+0xd684>
   240e8:	bl	1666c <dcgettext@plt>
   240ec:	mov	r1, r0
   240f0:	mov	r0, r9
   240f4:	bl	15f7c <gtk_widget_set_tooltip_text@plt>
   240f8:	ldr	r3, [r4, #20]
   240fc:	ldr	r1, [pc, #696]	; 243bc <g_strcmp0@plt+0xd660>
   24100:	ldr	r0, [r3, #16]
   24104:	bl	1615c <gtk_builder_get_object@plt>
   24108:	mov	r1, r5
   2410c:	bl	15e14 <g_type_check_instance_cast@plt>
   24110:	mov	sl, r0
   24114:	bl	16720 <gtk_dialog_get_type@plt>
   24118:	mov	r1, r0
   2411c:	mov	r0, sl
   24120:	bl	15e14 <g_type_check_instance_cast@plt>
   24124:	bl	15bc8 <gtk_dialog_get_action_area@plt>
   24128:	mov	sl, r0
   2412c:	bl	163fc <gtk_box_get_type@plt>
   24130:	mov	r1, r0
   24134:	mov	r0, sl
   24138:	bl	15e14 <g_type_check_instance_cast@plt>
   2413c:	mov	r3, r6
   24140:	mov	r2, r6
   24144:	mov	r1, r9
   24148:	str	r6, [sp]
   2414c:	bl	164bc <gtk_box_pack_start@plt>
   24150:	mov	r0, r9
   24154:	bl	16978 <gtk_widget_show@plt>
   24158:	str	r6, [sp, #8]
   2415c:	ldr	r6, [r4, #20]
   24160:	bl	168dc <gtk_builder_new@plt>
   24164:	ldr	r3, [r4, #20]
   24168:	add	r2, sp, #8
   2416c:	ldr	r1, [pc, #624]	; 243e4 <g_strcmp0@plt+0xd688>
   24170:	str	r0, [r6, #24]
   24174:	ldr	r0, [r3, #24]
   24178:	bl	16cc0 <gtk_builder_add_from_file@plt>
   2417c:	cmp	r0, #0
   24180:	beq	24388 <g_strcmp0@plt+0xd62c>
   24184:	ldr	r3, [r4, #20]
   24188:	ldr	r1, [pc, #600]	; 243e8 <g_strcmp0@plt+0xd68c>
   2418c:	mov	r6, #0
   24190:	ldr	r0, [r3, #24]
   24194:	bl	1615c <gtk_builder_get_object@plt>
   24198:	mov	r1, r5
   2419c:	bl	15e14 <g_type_check_instance_cast@plt>
   241a0:	ldr	r2, [pc, #536]	; 243c0 <g_strcmp0@plt+0xd664>
   241a4:	str	r6, [sp, #4]
   241a8:	str	r6, [sp]
   241ac:	mov	r3, r4
   241b0:	ldr	r1, [pc, #524]	; 243c4 <g_strcmp0@plt+0xd668>
   241b4:	bl	16414 <g_signal_connect_data@plt>
   241b8:	ldr	r3, [r4, #20]
   241bc:	ldr	r1, [pc, #548]	; 243e8 <g_strcmp0@plt+0xd68c>
   241c0:	ldr	r0, [r3, #24]
   241c4:	bl	1615c <gtk_builder_get_object@plt>
   241c8:	mov	r1, r5
   241cc:	bl	15e14 <g_type_check_instance_cast@plt>
   241d0:	mov	r1, r8
   241d4:	bl	15e14 <g_type_check_instance_cast@plt>
   241d8:	ldr	r1, [pc, #488]	; 243c8 <g_strcmp0@plt+0xd66c>
   241dc:	bl	15fb8 <gtk_window_set_icon_name@plt>
   241e0:	ldr	r3, [r4, #20]
   241e4:	ldr	r1, [pc, #512]	; 243ec <g_strcmp0@plt+0xd690>
   241e8:	ldr	r0, [r3, #24]
   241ec:	bl	1615c <gtk_builder_get_object@plt>
   241f0:	mov	r1, r5
   241f4:	bl	15e14 <g_type_check_instance_cast@plt>
   241f8:	ldr	r2, [pc, #476]	; 243dc <g_strcmp0@plt+0xd680>
   241fc:	str	r6, [sp, #4]
   24200:	str	r6, [sp]
   24204:	mov	r3, r4
   24208:	ldr	r1, [pc, #448]	; 243d0 <g_strcmp0@plt+0xd674>
   2420c:	bl	16414 <g_signal_connect_data@plt>
   24210:	ldr	r3, [r4, #20]
   24214:	ldr	r1, [pc, #468]	; 243f0 <g_strcmp0@plt+0xd694>
   24218:	ldr	r0, [r3, #24]
   2421c:	bl	1615c <gtk_builder_get_object@plt>
   24220:	mov	r1, r5
   24224:	bl	15e14 <g_type_check_instance_cast@plt>
   24228:	mov	r3, r4
   2422c:	ldr	r2, [pc, #396]	; 243c0 <g_strcmp0@plt+0xd664>
   24230:	ldr	r1, [pc, #408]	; 243d0 <g_strcmp0@plt+0xd674>
   24234:	str	r6, [sp, #4]
   24238:	str	r6, [sp]
   2423c:	bl	16414 <g_signal_connect_data@plt>
   24240:	str	r6, [sp, #8]
   24244:	ldr	r6, [r4, #20]
   24248:	bl	168dc <gtk_builder_new@plt>
   2424c:	ldr	r3, [r4, #20]
   24250:	add	r2, sp, #8
   24254:	ldr	r1, [pc, #408]	; 243f4 <g_strcmp0@plt+0xd698>
   24258:	str	r0, [r6, #20]
   2425c:	ldr	r0, [r3, #20]
   24260:	bl	16cc0 <gtk_builder_add_from_file@plt>
   24264:	cmp	r0, #0
   24268:	beq	24364 <g_strcmp0@plt+0xd608>
   2426c:	ldr	r3, [r4, #20]
   24270:	ldr	r1, [pc, #384]	; 243f8 <g_strcmp0@plt+0xd69c>
   24274:	mov	r6, #0
   24278:	ldr	r0, [r3, #20]
   2427c:	bl	1615c <gtk_builder_get_object@plt>
   24280:	mov	r1, r5
   24284:	bl	15e14 <g_type_check_instance_cast@plt>
   24288:	ldr	r2, [pc, #304]	; 243c0 <g_strcmp0@plt+0xd664>
   2428c:	mov	r3, r4
   24290:	ldr	r1, [pc, #300]	; 243c4 <g_strcmp0@plt+0xd668>
   24294:	str	r6, [sp, #4]
   24298:	str	r6, [sp]
   2429c:	bl	16414 <g_signal_connect_data@plt>
   242a0:	ldr	r3, [r4, #20]
   242a4:	ldr	r1, [pc, #332]	; 243f8 <g_strcmp0@plt+0xd69c>
   242a8:	ldr	r0, [r3, #20]
   242ac:	bl	1615c <gtk_builder_get_object@plt>
   242b0:	mov	r1, r5
   242b4:	bl	15e14 <g_type_check_instance_cast@plt>
   242b8:	mov	r1, r8
   242bc:	bl	15e14 <g_type_check_instance_cast@plt>
   242c0:	ldr	r1, [pc, #256]	; 243c8 <g_strcmp0@plt+0xd66c>
   242c4:	bl	15fb8 <gtk_window_set_icon_name@plt>
   242c8:	ldr	r3, [r4, #20]
   242cc:	ldr	r1, [pc, #296]	; 243fc <g_strcmp0@plt+0xd6a0>
   242d0:	ldr	r0, [r3, #20]
   242d4:	bl	1615c <gtk_builder_get_object@plt>
   242d8:	mov	r1, r5
   242dc:	bl	15e14 <g_type_check_instance_cast@plt>
   242e0:	ldr	r2, [pc, #244]	; 243dc <g_strcmp0@plt+0xd680>
   242e4:	mov	r3, r4
   242e8:	ldr	r1, [pc, #224]	; 243d0 <g_strcmp0@plt+0xd674>
   242ec:	str	r6, [sp, #4]
   242f0:	str	r6, [sp]
   242f4:	bl	16414 <g_signal_connect_data@plt>
   242f8:	ldr	r3, [r4, #20]
   242fc:	ldr	r1, [pc, #252]	; 24400 <g_strcmp0@plt+0xd6a4>
   24300:	ldr	r0, [r3, #20]
   24304:	bl	1615c <gtk_builder_get_object@plt>
   24308:	mov	r1, r5
   2430c:	bl	15e14 <g_type_check_instance_cast@plt>
   24310:	mov	r3, r4
   24314:	ldr	r2, [pc, #164]	; 243c0 <g_strcmp0@plt+0xd664>
   24318:	str	r6, [sp, #4]
   2431c:	str	r6, [sp]
   24320:	ldr	r1, [pc, #168]	; 243d0 <g_strcmp0@plt+0xd674>
   24324:	bl	16414 <g_signal_connect_data@plt>
   24328:	ldr	r2, [sp, #12]
   2432c:	ldr	r3, [r7]
   24330:	cmp	r2, r3
   24334:	bne	243ac <g_strcmp0@plt+0xd650>
   24338:	add	sp, sp, #16
   2433c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24340:	ldr	r3, [sp, #8]
   24344:	ldr	r2, [pc, #184]	; 24404 <g_strcmp0@plt+0xd6a8>
   24348:	mov	r1, #16
   2434c:	ldr	r3, [r3, #8]
   24350:	ldr	r0, [pc, #176]	; 24408 <g_strcmp0@plt+0xd6ac>
   24354:	bl	15ebc <g_log@plt>
   24358:	ldr	r0, [sp, #8]
   2435c:	bl	15d3c <g_error_free@plt>
   24360:	b	23fe4 <g_strcmp0@plt+0xd288>
   24364:	ldr	r3, [sp, #8]
   24368:	ldr	r2, [pc, #148]	; 24404 <g_strcmp0@plt+0xd6a8>
   2436c:	mov	r1, #16
   24370:	ldr	r3, [r3, #8]
   24374:	ldr	r0, [pc, #140]	; 24408 <g_strcmp0@plt+0xd6ac>
   24378:	bl	15ebc <g_log@plt>
   2437c:	ldr	r0, [sp, #8]
   24380:	bl	15d3c <g_error_free@plt>
   24384:	b	2426c <g_strcmp0@plt+0xd510>
   24388:	ldr	r3, [sp, #8]
   2438c:	ldr	r2, [pc, #112]	; 24404 <g_strcmp0@plt+0xd6a8>
   24390:	mov	r1, #16
   24394:	ldr	r3, [r3, #8]
   24398:	ldr	r0, [pc, #104]	; 24408 <g_strcmp0@plt+0xd6ac>
   2439c:	bl	15ebc <g_log@plt>
   243a0:	ldr	r0, [sp, #8]
   243a4:	bl	15d3c <g_error_free@plt>
   243a8:	b	24184 <g_strcmp0@plt+0xd428>
   243ac:	bl	165a0 <__stack_chk_fail@plt>
   243b0:	andeq	ip, r3, r0, asr lr
   243b4:	andeq	r7, r2, r4, asr r7
   243b8:	muleq	r2, ip, r1
   243bc:	andeq	ip, r2, r4, asr #3
   243c0:	andeq	r3, r2, r0, ror #21
   243c4:	andeq	fp, r2, ip, asr #21
   243c8:	muleq	r2, r8, r8
   243cc:	ldrdeq	fp, [r2], -ip
   243d0:	andeq	r6, r2, r4, asr sl
   243d4:	ldrdeq	ip, [r2], -r4
   243d8:	andeq	ip, r2, r8, ror #3
   243dc:	muleq	r2, r0, sl
   243e0:	strdeq	ip, [r2], -r8
   243e4:	andeq	ip, r2, r4, lsl r2
   243e8:	andeq	ip, r2, ip, lsr r2
   243ec:	andeq	ip, r2, r8, asr #4
   243f0:	andeq	ip, r2, r8, asr r2
   243f4:	andeq	ip, r2, r8, ror #4
   243f8:	muleq	r2, r4, r2
   243fc:	andeq	ip, r2, r0, lsr #5
   24400:	andeq	ip, r2, ip, lsr #5
   24404:	strdeq	r7, [r2], -r4
   24408:	andeq	r6, r2, r8, lsr #21
   2440c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24410:	sub	sp, sp, #40	; 0x28
   24414:	ldr	r8, [pc, #816]	; 2474c <g_strcmp0@plt+0xd9f0>
   24418:	mov	r5, r2
   2441c:	mov	r6, r1
   24420:	ldr	r3, [r8]
   24424:	mov	r9, r0
   24428:	str	r3, [sp, #36]	; 0x24
   2442c:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   24430:	ldr	r7, [pc, #792]	; 24750 <g_strcmp0@plt+0xd9f4>
   24434:	add	sl, sp, #24
   24438:	mov	r1, r0
   2443c:	mov	r0, r9
   24440:	bl	15e14 <g_type_check_instance_cast@plt>
   24444:	mov	r2, #0
   24448:	mov	r3, #0
   2444c:	mov	lr, #0
   24450:	add	ip, sp, #20
   24454:	strd	r2, [sp, #24]
   24458:	ldr	r1, [pc, #756]	; 24754 <g_strcmp0@plt+0xd9f8>
   2445c:	ldr	r3, [pc, #756]	; 24758 <g_strcmp0@plt+0xd9fc>
   24460:	add	r2, sp, #16
   24464:	ldr	r4, [r0, #20]
   24468:	mov	r0, r5
   2446c:	str	r6, [r4, #28]
   24470:	stmib	sp, {r7, sl, lr}
   24474:	str	ip, [sp]
   24478:	bl	166fc <g_object_get@plt>
   2447c:	ldr	r3, [sp, #16]
   24480:	cmp	r3, #14
   24484:	beq	2449c <g_strcmp0@plt+0xd740>
   24488:	ldr	r1, [pc, #716]	; 2475c <g_strcmp0@plt+0xda00>
   2448c:	ldr	r0, [r4, #4]
   24490:	bl	15ba4 <g_settings_get_boolean@plt>
   24494:	cmp	r0, #0
   24498:	beq	2471c <g_strcmp0@plt+0xd9c0>
   2449c:	mov	r2, #5
   244a0:	ldr	r1, [pc, #696]	; 24760 <g_strcmp0@plt+0xda04>
   244a4:	mov	r0, #0
   244a8:	bl	1666c <dcgettext@plt>
   244ac:	ldr	r3, [sp, #16]
   244b0:	cmp	r3, #11
   244b4:	mov	r7, r0
   244b8:	beq	246b0 <g_strcmp0@plt+0xd954>
   244bc:	cmp	r3, #14
   244c0:	beq	246f8 <g_strcmp0@plt+0xd99c>
   244c4:	cmp	r3, #22
   244c8:	beq	2468c <g_strcmp0@plt+0xd930>
   244cc:	cmp	r3, #10
   244d0:	beq	246d4 <g_strcmp0@plt+0xd978>
   244d4:	mov	r2, #5
   244d8:	ldr	r1, [pc, #644]	; 24764 <g_strcmp0@plt+0xda08>
   244dc:	mov	r0, #0
   244e0:	bl	1666c <dcgettext@plt>
   244e4:	mov	sl, r0
   244e8:	ldr	r6, [pc, #632]	; 24768 <g_strcmp0@plt+0xda0c>
   244ec:	mov	r3, #3
   244f0:	mov	r1, r3
   244f4:	mov	r2, #0
   244f8:	ldr	r0, [r4, #8]
   244fc:	strd	r6, [sp]
   24500:	bl	16bc4 <gtk_message_dialog_new@plt>
   24504:	mov	r7, r0
   24508:	bl	16d20 <gtk_window_get_type@plt>
   2450c:	mov	r1, r0
   24510:	mov	r0, r7
   24514:	bl	15e14 <g_type_check_instance_cast@plt>
   24518:	str	r0, [r4, #12]
   2451c:	mov	r7, r0
   24520:	bl	166cc <gtk_message_dialog_get_type@plt>
   24524:	mov	r1, r0
   24528:	mov	r0, r7
   2452c:	bl	15e14 <g_type_check_instance_cast@plt>
   24530:	mov	r2, sl
   24534:	mov	r1, r6
   24538:	bl	16654 <gtk_message_dialog_format_secondary_markup@plt>
   2453c:	bl	16528 <gtk_notebook_new@plt>
   24540:	mov	r6, r0
   24544:	bl	16cd8 <gtk_notebook_get_type@plt>
   24548:	mov	r1, r0
   2454c:	mov	r0, r6
   24550:	bl	15e14 <g_type_check_instance_cast@plt>
   24554:	mov	r6, r0
   24558:	mov	r0, r5
   2455c:	bl	16864 <pk_results_get_package_sack@plt>
   24560:	mov	r2, #12
   24564:	mov	r5, r0
   24568:	mov	r1, r0
   2456c:	mov	r0, r6
   24570:	bl	23c24 <g_strcmp0@plt+0xcec8>
   24574:	mov	r0, r6
   24578:	mov	r1, r5
   2457c:	mov	r2, #13
   24580:	bl	23c24 <g_strcmp0@plt+0xcec8>
   24584:	mov	r0, r6
   24588:	mov	r1, r5
   2458c:	mov	r2, #11
   24590:	bl	23c24 <g_strcmp0@plt+0xcec8>
   24594:	mov	r0, r6
   24598:	mov	r1, r5
   2459c:	mov	r2, #15
   245a0:	bl	23c24 <g_strcmp0@plt+0xcec8>
   245a4:	mov	r0, r6
   245a8:	mov	r1, r5
   245ac:	mov	r2, #19
   245b0:	bl	23c24 <g_strcmp0@plt+0xcec8>
   245b4:	mov	r2, #20
   245b8:	mov	r1, r5
   245bc:	mov	r0, r6
   245c0:	bl	23c24 <g_strcmp0@plt+0xcec8>
   245c4:	bl	16720 <gtk_dialog_get_type@plt>
   245c8:	mov	r7, r0
   245cc:	mov	r1, r0
   245d0:	ldr	r0, [r4, #12]
   245d4:	bl	15e14 <g_type_check_instance_cast@plt>
   245d8:	mov	r1, r6
   245dc:	bl	219d8 <g_strcmp0@plt+0xac7c>
   245e0:	mov	r1, r7
   245e4:	ldr	r0, [r4, #12]
   245e8:	bl	15e14 <g_type_check_instance_cast@plt>
   245ec:	ldr	r1, [pc, #360]	; 2475c <g_strcmp0@plt+0xda00>
   245f0:	bl	218e4 <g_strcmp0@plt+0xab88>
   245f4:	mov	r1, r7
   245f8:	ldr	r0, [r4, #12]
   245fc:	bl	15e14 <g_type_check_instance_cast@plt>
   24600:	mov	r2, #5
   24604:	ldr	r1, [pc, #352]	; 2476c <g_strcmp0@plt+0xda10>
   24608:	mov	r6, r0
   2460c:	mov	r0, #0
   24610:	bl	1666c <dcgettext@plt>
   24614:	mvn	r2, #7
   24618:	mov	r1, r0
   2461c:	mov	r0, r6
   24620:	bl	15cac <gtk_dialog_add_button@plt>
   24624:	ldr	r1, [pc, #324]	; 24770 <g_strcmp0@plt+0xda14>
   24628:	ldr	r0, [r4, #12]
   2462c:	bl	15fb8 <gtk_window_set_icon_name@plt>
   24630:	mov	r2, #0
   24634:	mov	r3, r9
   24638:	ldr	r0, [r4, #12]
   2463c:	ldr	r1, [pc, #304]	; 24774 <g_strcmp0@plt+0xda18>
   24640:	str	r2, [sp, #4]
   24644:	str	r2, [sp]
   24648:	ldr	r2, [pc, #296]	; 24778 <g_strcmp0@plt+0xda1c>
   2464c:	bl	16414 <g_signal_connect_data@plt>
   24650:	bl	15db4 <gtk_widget_get_type@plt>
   24654:	mov	r1, r0
   24658:	ldr	r0, [r4, #12]
   2465c:	bl	15e14 <g_type_check_instance_cast@plt>
   24660:	bl	168d0 <gtk_widget_show_all@plt>
   24664:	cmp	r5, #0
   24668:	beq	24674 <g_strcmp0@plt+0xd918>
   2466c:	mov	r0, r5
   24670:	bl	16990 <g_object_unref@plt>
   24674:	ldr	r2, [sp, #36]	; 0x24
   24678:	ldr	r3, [r8]
   2467c:	cmp	r2, r3
   24680:	bne	24748 <g_strcmp0@plt+0xd9ec>
   24684:	add	sp, sp, #40	; 0x28
   24688:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2468c:	mov	r3, #5
   24690:	str	r3, [sp]
   24694:	ldr	r2, [pc, #224]	; 2477c <g_strcmp0@plt+0xda20>
   24698:	ldr	r3, [sp, #20]
   2469c:	ldr	r1, [pc, #220]	; 24780 <g_strcmp0@plt+0xda24>
   246a0:	mov	r0, #0
   246a4:	bl	16204 <dcngettext@plt>
   246a8:	mov	sl, r0
   246ac:	b	244e8 <g_strcmp0@plt+0xd78c>
   246b0:	mov	r3, #5
   246b4:	str	r3, [sp]
   246b8:	ldr	r2, [pc, #196]	; 24784 <g_strcmp0@plt+0xda28>
   246bc:	ldr	r3, [sp, #20]
   246c0:	ldr	r1, [pc, #192]	; 24788 <g_strcmp0@plt+0xda2c>
   246c4:	mov	r0, #0
   246c8:	bl	16204 <dcngettext@plt>
   246cc:	mov	sl, r0
   246d0:	b	244e8 <g_strcmp0@plt+0xd78c>
   246d4:	mov	r3, #5
   246d8:	str	r3, [sp]
   246dc:	ldr	r2, [pc, #168]	; 2478c <g_strcmp0@plt+0xda30>
   246e0:	ldr	r3, [sp, #20]
   246e4:	ldr	r1, [pc, #164]	; 24790 <g_strcmp0@plt+0xda34>
   246e8:	mov	r0, #0
   246ec:	bl	16204 <dcngettext@plt>
   246f0:	mov	sl, r0
   246f4:	b	244e8 <g_strcmp0@plt+0xd78c>
   246f8:	mov	r3, #5
   246fc:	str	r3, [sp]
   24700:	ldr	r2, [pc, #140]	; 24794 <g_strcmp0@plt+0xda38>
   24704:	ldr	r3, [sp, #20]
   24708:	ldr	r1, [pc, #136]	; 24798 <g_strcmp0@plt+0xda3c>
   2470c:	mov	r0, #0
   24710:	bl	16204 <dcngettext@plt>
   24714:	mov	sl, r0
   24718:	b	244e8 <g_strcmp0@plt+0xd78c>
   2471c:	ldr	r2, [pc, #120]	; 2479c <g_strcmp0@plt+0xda40>
   24720:	mov	r1, #128	; 0x80
   24724:	ldr	r0, [pc, #116]	; 247a0 <g_strcmp0@plt+0xda44>
   24728:	bl	15ebc <g_log@plt>
   2472c:	bl	16324 <pk_task_get_type@plt>
   24730:	mov	r1, r0
   24734:	mov	r0, r9
   24738:	bl	15e14 <g_type_check_instance_cast@plt>
   2473c:	ldr	r1, [r4, #28]
   24740:	bl	161bc <pk_task_user_accepted@plt>
   24744:	b	24674 <g_strcmp0@plt+0xd918>
   24748:	bl	165a0 <__stack_chk_fail@plt>
   2474c:	andeq	ip, r3, r0, asr lr
   24750:	andeq	ip, r2, r8, asr #5
   24754:	andeq	ip, r2, r0, asr #5
   24758:			; <UNDEFINED> instruction: 0x0002c2b8
   2475c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   24760:	andeq	ip, r2, r4, lsl r3
   24764:	andeq	ip, r2, r4, ror r5
   24768:	andeq	r7, r2, r4, lsl r7
   2476c:	andeq	ip, r2, r0, asr #11
   24770:	muleq	r2, r8, r8
   24774:	andeq	ip, r2, ip, asr #11
   24778:	andeq	r3, r2, r0, ror #23
   2477c:	andeq	ip, r2, r8, asr r4
   24780:	andeq	ip, r2, r0, lsr #9
   24784:	andeq	ip, r2, r8, lsr r3
   24788:	andeq	ip, r2, r0, lsl #7
   2478c:	andeq	ip, r2, r8, ror #9
   24790:	andeq	ip, r2, r0, lsr r5
   24794:	andeq	ip, r2, r8, asr #7
   24798:	andeq	ip, r2, r0, lsl r4
   2479c:	andeq	ip, r2, ip, ror #5
   247a0:	andeq	r6, r2, r8, lsr #21
   247a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   247a8:	sub	sp, sp, #32
   247ac:	ldr	r7, [pc, #436]	; 24968 <g_strcmp0@plt+0xdc0c>
   247b0:	mov	r6, r2
   247b4:	mov	r5, r1
   247b8:	ldr	r3, [r7]
   247bc:	mov	r9, r0
   247c0:	str	r3, [sp, #28]
   247c4:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   247c8:	mov	r1, r0
   247cc:	mov	r0, r9
   247d0:	bl	15e14 <g_type_check_instance_cast@plt>
   247d4:	ldr	r4, [r0, #20]
   247d8:	mov	r0, r6
   247dc:	str	r5, [r4, #28]
   247e0:	bl	15c40 <pk_results_get_media_change_required_array@plt>
   247e4:	ldr	r3, [r0, #4]
   247e8:	mov	r6, r0
   247ec:	cmp	r3, #1
   247f0:	beq	24830 <g_strcmp0@plt+0xdad4>
   247f4:	ldr	r2, [pc, #368]	; 2496c <g_strcmp0@plt+0xdc10>
   247f8:	mov	r1, #16
   247fc:	ldr	r0, [pc, #364]	; 24970 <g_strcmp0@plt+0xdc14>
   24800:	bl	15ebc <g_log@plt>
   24804:	mov	r8, #0
   24808:	mov	r0, r8
   2480c:	bl	16660 <g_free@plt>
   24810:	mov	r0, r6
   24814:	bl	16af8 <g_ptr_array_unref@plt>
   24818:	ldr	r2, [sp, #28]
   2481c:	ldr	r3, [r7]
   24820:	cmp	r2, r3
   24824:	bne	24964 <g_strcmp0@plt+0xdc08>
   24828:	add	sp, sp, #32
   2482c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24830:	ldr	r3, [r0]
   24834:	ldr	r1, [pc, #312]	; 24974 <g_strcmp0@plt+0xdc18>
   24838:	mov	r5, #0
   2483c:	add	r2, sp, #24
   24840:	ldr	r0, [r3]
   24844:	add	r3, sp, #20
   24848:	stmib	sp, {r1, r2, r5}
   2484c:	add	r2, sp, #16
   24850:	str	r3, [sp]
   24854:	ldr	r1, [pc, #284]	; 24978 <g_strcmp0@plt+0xdc1c>
   24858:	ldr	r3, [pc, #284]	; 2497c <g_strcmp0@plt+0xdc20>
   2485c:	bl	166fc <g_object_get@plt>
   24860:	ldr	r0, [sp, #20]
   24864:	bl	1eeec <g_strcmp0@plt+0x8190>
   24868:	mov	r2, #5
   2486c:	ldr	r1, [pc, #268]	; 24980 <g_strcmp0@plt+0xdc24>
   24870:	mov	r8, r0
   24874:	mov	r0, r5
   24878:	bl	1666c <dcgettext@plt>
   2487c:	mov	r1, r8
   24880:	ldr	r2, [sp, #24]
   24884:	bl	161e0 <g_strdup_printf@plt>
   24888:	mov	r2, #5
   2488c:	ldr	r1, [pc, #240]	; 24984 <g_strcmp0@plt+0xdc28>
   24890:	ldr	sl, [r4, #8]
   24894:	mov	r8, r0
   24898:	mov	r0, r5
   2489c:	bl	1666c <dcgettext@plt>
   248a0:	mov	r3, #3
   248a4:	mov	r1, r3
   248a8:	mov	r2, r5
   248ac:	str	r0, [sp]
   248b0:	mov	r0, sl
   248b4:	bl	16bc4 <gtk_message_dialog_new@plt>
   248b8:	mov	sl, r0
   248bc:	bl	16d20 <gtk_window_get_type@plt>
   248c0:	mov	r1, r0
   248c4:	mov	r0, sl
   248c8:	bl	15e14 <g_type_check_instance_cast@plt>
   248cc:	str	r0, [r4, #12]
   248d0:	mov	sl, r0
   248d4:	bl	166cc <gtk_message_dialog_get_type@plt>
   248d8:	mov	r1, r0
   248dc:	mov	r0, sl
   248e0:	bl	15e14 <g_type_check_instance_cast@plt>
   248e4:	mov	r2, r8
   248e8:	ldr	r1, [pc, #152]	; 24988 <g_strcmp0@plt+0xdc2c>
   248ec:	bl	16654 <gtk_message_dialog_format_secondary_markup@plt>
   248f0:	bl	16720 <gtk_dialog_get_type@plt>
   248f4:	mov	r1, r0
   248f8:	ldr	r0, [r4, #12]
   248fc:	bl	15e14 <g_type_check_instance_cast@plt>
   24900:	mov	r2, #5
   24904:	ldr	r1, [pc, #128]	; 2498c <g_strcmp0@plt+0xdc30>
   24908:	mov	sl, r0
   2490c:	mov	r0, r5
   24910:	bl	1666c <dcgettext@plt>
   24914:	mvn	r2, #7
   24918:	mov	r1, r0
   2491c:	mov	r0, sl
   24920:	bl	15cac <gtk_dialog_add_button@plt>
   24924:	ldr	r0, [r4, #12]
   24928:	ldr	r1, [pc, #96]	; 24990 <g_strcmp0@plt+0xdc34>
   2492c:	bl	15fb8 <gtk_window_set_icon_name@plt>
   24930:	ldr	r0, [r4, #12]
   24934:	mov	r3, r9
   24938:	ldr	r2, [pc, #84]	; 24994 <g_strcmp0@plt+0xdc38>
   2493c:	ldr	r1, [pc, #84]	; 24998 <g_strcmp0@plt+0xdc3c>
   24940:	str	r5, [sp, #4]
   24944:	str	r5, [sp]
   24948:	bl	16414 <g_signal_connect_data@plt>
   2494c:	bl	15db4 <gtk_widget_get_type@plt>
   24950:	mov	r1, r0
   24954:	ldr	r0, [r4, #12]
   24958:	bl	15e14 <g_type_check_instance_cast@plt>
   2495c:	bl	168d0 <gtk_widget_show_all@plt>
   24960:	b	24808 <g_strcmp0@plt+0xdaac>
   24964:	bl	165a0 <__stack_chk_fail@plt>
   24968:	andeq	ip, r3, r0, asr lr
   2496c:	ldrdeq	ip, [r2], -r8
   24970:	andeq	r6, r2, r8, lsr #21
   24974:	andeq	ip, r2, ip, lsl #12
   24978:	andeq	ip, r2, r0, lsl #12
   2497c:	strdeq	ip, [r2], -r4
   24980:	andeq	ip, r2, r8, lsl r6
   24984:	muleq	r2, r0, sl
   24988:	andeq	r7, r2, r4, lsl r7
   2498c:	andeq	ip, r2, r0, asr #11
   24990:	muleq	r2, r8, r8
   24994:	andeq	r3, r2, r0, ror #23
   24998:	andeq	ip, r2, ip, asr #11
   2499c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249a0:	sub	sp, sp, #44	; 0x2c
   249a4:	ldr	r6, [pc, #560]	; 24bdc <g_strcmp0@plt+0xde80>
   249a8:	mov	sl, #0
   249ac:	mov	r5, r1
   249b0:	ldr	r3, [r6]
   249b4:	mov	r7, r2
   249b8:	mov	r4, r0
   249bc:	str	r3, [sp, #36]	; 0x24
   249c0:	str	sl, [sp, #24]
   249c4:	str	sl, [sp, #28]
   249c8:	str	sl, [sp, #32]
   249cc:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   249d0:	mov	r1, r0
   249d4:	mov	r0, r4
   249d8:	bl	15e14 <g_type_check_instance_cast@plt>
   249dc:	ldr	r4, [r0, #20]
   249e0:	mov	r0, r7
   249e4:	str	r5, [r4, #28]
   249e8:	bl	16828 <pk_results_get_eula_required_array@plt>
   249ec:	ldr	r8, [r0, #4]
   249f0:	mov	r5, r0
   249f4:	cmp	r8, #1
   249f8:	beq	24a60 <g_strcmp0@plt+0xdd04>
   249fc:	mov	r3, r8
   24a00:	ldr	r2, [pc, #472]	; 24be0 <g_strcmp0@plt+0xde84>
   24a04:	mov	r1, #16
   24a08:	ldr	r0, [pc, #468]	; 24be4 <g_strcmp0@plt+0xde88>
   24a0c:	bl	15ebc <g_log@plt>
   24a10:	mov	r7, sl
   24a14:	mov	r9, sl
   24a18:	mov	r0, r9
   24a1c:	bl	16660 <g_free@plt>
   24a20:	ldr	r0, [sp, #24]
   24a24:	bl	16660 <g_free@plt>
   24a28:	ldr	r0, [sp, #28]
   24a2c:	bl	16660 <g_free@plt>
   24a30:	ldr	r0, [sp, #32]
   24a34:	bl	16660 <g_free@plt>
   24a38:	mov	r0, r7
   24a3c:	bl	1654c <g_strfreev@plt>
   24a40:	mov	r0, r5
   24a44:	bl	16af8 <g_ptr_array_unref@plt>
   24a48:	ldr	r2, [sp, #36]	; 0x24
   24a4c:	ldr	r3, [r6]
   24a50:	cmp	r2, r3
   24a54:	bne	24bd8 <g_strcmp0@plt+0xde7c>
   24a58:	add	sp, sp, #44	; 0x2c
   24a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a60:	ldr	r3, [r0]
   24a64:	ldr	r1, [pc, #380]	; 24be8 <g_strcmp0@plt+0xde8c>
   24a68:	add	r2, sp, #32
   24a6c:	ldr	r0, [r3]
   24a70:	add	r3, sp, #28
   24a74:	stmib	sp, {r1, r2, sl}
   24a78:	add	r2, sp, #24
   24a7c:	str	r3, [sp]
   24a80:	ldr	r1, [pc, #356]	; 24bec <g_strcmp0@plt+0xde90>
   24a84:	ldr	r3, [pc, #356]	; 24bf0 <g_strcmp0@plt+0xde94>
   24a88:	bl	166fc <g_object_get@plt>
   24a8c:	ldr	r1, [pc, #352]	; 24bf4 <g_strcmp0@plt+0xde98>
   24a90:	ldr	r0, [r4, #24]
   24a94:	bl	1615c <gtk_builder_get_object@plt>
   24a98:	mov	r7, r0
   24a9c:	bl	15db4 <gtk_widget_get_type@plt>
   24aa0:	mov	r1, r0
   24aa4:	mov	fp, r0
   24aa8:	mov	r0, r7
   24aac:	bl	15e14 <g_type_check_instance_cast@plt>
   24ab0:	str	r0, [sp, #20]
   24ab4:	ldr	r0, [sp, #24]
   24ab8:	bl	15df0 <pk_package_id_split@plt>
   24abc:	ldr	r2, [sp, #28]
   24ac0:	ldr	r1, [r0]
   24ac4:	mov	r7, r0
   24ac8:	ldr	r0, [pc, #296]	; 24bf8 <g_strcmp0@plt+0xde9c>
   24acc:	bl	161e0 <g_strdup_printf@plt>
   24ad0:	mov	r9, r0
   24ad4:	bl	15d6c <gtk_label_get_type@plt>
   24ad8:	ldr	r3, [sp, #20]
   24adc:	mov	r1, r0
   24ae0:	mov	r0, r3
   24ae4:	bl	15e14 <g_type_check_instance_cast@plt>
   24ae8:	mov	r1, r9
   24aec:	bl	15d78 <gtk_label_set_label@plt>
   24af0:	mov	r0, sl
   24af4:	bl	16a38 <gtk_text_buffer_new@plt>
   24af8:	ldr	r1, [sp, #32]
   24afc:	str	r1, [sp, #20]
   24b00:	mov	sl, r0
   24b04:	mov	r0, r1
   24b08:	bl	1699c <strlen@plt>
   24b0c:	ldr	r1, [sp, #20]
   24b10:	mov	r2, r0
   24b14:	mov	r0, sl
   24b18:	bl	166c0 <gtk_text_buffer_insert_at_cursor@plt>
   24b1c:	ldr	r1, [pc, #216]	; 24bfc <g_strcmp0@plt+0xdea0>
   24b20:	ldr	r0, [r4, #24]
   24b24:	bl	1615c <gtk_builder_get_object@plt>
   24b28:	mov	r1, fp
   24b2c:	bl	15e14 <g_type_check_instance_cast@plt>
   24b30:	str	r0, [sp, #20]
   24b34:	bl	15e38 <gtk_text_view_get_type@plt>
   24b38:	mov	r1, r0
   24b3c:	ldr	r0, [sp, #20]
   24b40:	bl	15e14 <g_type_check_instance_cast@plt>
   24b44:	mov	r1, sl
   24b48:	bl	16384 <gtk_text_view_set_buffer@plt>
   24b4c:	mov	r2, #200	; 0xc8
   24b50:	ldr	r0, [sp, #20]
   24b54:	mov	r1, #100	; 0x64
   24b58:	bl	16360 <gtk_widget_set_size_request@plt>
   24b5c:	ldr	r1, [pc, #156]	; 24c00 <g_strcmp0@plt+0xdea4>
   24b60:	ldr	r0, [r4, #24]
   24b64:	bl	1615c <gtk_builder_get_object@plt>
   24b68:	str	r0, [sp, #20]
   24b6c:	bl	16d20 <gtk_window_get_type@plt>
   24b70:	ldr	r3, [sp, #20]
   24b74:	mov	r1, r0
   24b78:	mov	r0, r3
   24b7c:	bl	15e14 <g_type_check_instance_cast@plt>
   24b80:	ldr	r1, [r4, #8]
   24b84:	cmp	r1, #0
   24b88:	mov	r3, r0
   24b8c:	str	r0, [r4, #12]
   24b90:	beq	24bb4 <g_strcmp0@plt+0xde58>
   24b94:	bl	16a2c <gtk_window_set_transient_for@plt>
   24b98:	mov	r1, r8
   24b9c:	ldr	r0, [r4, #12]
   24ba0:	bl	16b40 <gtk_window_set_modal@plt>
   24ba4:	ldr	r1, [pc, #88]	; 24c04 <g_strcmp0@plt+0xdea8>
   24ba8:	ldr	r0, [r4, #12]
   24bac:	bl	1633c <gtk_window_set_title@plt>
   24bb0:	ldr	r3, [r4, #12]
   24bb4:	ldr	r2, [pc, #76]	; 24c08 <g_strcmp0@plt+0xdeac>
   24bb8:	mov	r1, fp
   24bbc:	mov	r0, r3
   24bc0:	str	r2, [r4, #32]
   24bc4:	bl	15e14 <g_type_check_instance_cast@plt>
   24bc8:	bl	16978 <gtk_widget_show@plt>
   24bcc:	mov	r0, sl
   24bd0:	bl	16990 <g_object_unref@plt>
   24bd4:	b	24a18 <g_strcmp0@plt+0xdcbc>
   24bd8:	bl	165a0 <__stack_chk_fail@plt>
   24bdc:	andeq	ip, r3, r0, asr lr
   24be0:	ldrdeq	ip, [r2], -r8
   24be4:	andeq	r6, r2, r8, lsr #21
   24be8:	andeq	ip, r2, r4, ror r6
   24bec:	andeq	r7, r2, ip, asr #3
   24bf0:	andeq	ip, r2, r8, ror #12
   24bf4:	andeq	ip, r2, r8, lsl #13
   24bf8:	muleq	r2, r4, r6
   24bfc:	andeq	ip, r2, r4, asr #13
   24c00:	andeq	ip, r2, ip, lsr r2
   24c04:	ldrdeq	r7, [r2], -r0
   24c08:	ldrdeq	ip, [r2], -r8
   24c0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24c10:	sub	sp, sp, #56	; 0x38
   24c14:	ldr	sl, [pc, #612]	; 24e80 <g_strcmp0@plt+0xe124>
   24c18:	mov	r4, #0
   24c1c:	mov	r5, r1
   24c20:	ldr	r3, [sl]
   24c24:	mov	r6, r2
   24c28:	str	r3, [sp, #52]	; 0x34
   24c2c:	mov	r7, r0
   24c30:	str	r4, [sp, #32]
   24c34:	str	r4, [sp, #36]	; 0x24
   24c38:	str	r4, [sp, #40]	; 0x28
   24c3c:	str	r4, [sp, #44]	; 0x2c
   24c40:	str	r4, [sp, #48]	; 0x30
   24c44:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   24c48:	mov	r1, r0
   24c4c:	mov	r0, r7
   24c50:	bl	15e14 <g_type_check_instance_cast@plt>
   24c54:	ldr	r9, [r0, #20]
   24c58:	mov	r0, r6
   24c5c:	str	r5, [r9, #28]
   24c60:	bl	16738 <pk_results_get_repo_signature_required_array@plt>
   24c64:	ldr	r8, [r0, #4]
   24c68:	mov	r5, r0
   24c6c:	cmp	r8, #1
   24c70:	beq	24cd8 <g_strcmp0@plt+0xdf7c>
   24c74:	mov	r3, r8
   24c78:	ldr	r2, [pc, #516]	; 24e84 <g_strcmp0@plt+0xe128>
   24c7c:	mov	r1, #16
   24c80:	ldr	r0, [pc, #512]	; 24e88 <g_strcmp0@plt+0xe12c>
   24c84:	bl	15ebc <g_log@plt>
   24c88:	mov	r0, r4
   24c8c:	bl	16660 <g_free@plt>
   24c90:	ldr	r0, [sp, #32]
   24c94:	bl	16660 <g_free@plt>
   24c98:	ldr	r0, [sp, #36]	; 0x24
   24c9c:	bl	16660 <g_free@plt>
   24ca0:	ldr	r0, [sp, #40]	; 0x28
   24ca4:	bl	16660 <g_free@plt>
   24ca8:	ldr	r0, [sp, #44]	; 0x2c
   24cac:	bl	16660 <g_free@plt>
   24cb0:	ldr	r0, [sp, #48]	; 0x30
   24cb4:	bl	16660 <g_free@plt>
   24cb8:	mov	r0, r5
   24cbc:	bl	16af8 <g_ptr_array_unref@plt>
   24cc0:	ldr	r2, [sp, #52]	; 0x34
   24cc4:	ldr	r3, [sl]
   24cc8:	cmp	r2, r3
   24ccc:	bne	24e7c <g_strcmp0@plt+0xe120>
   24cd0:	add	sp, sp, #56	; 0x38
   24cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24cd8:	ldr	r1, [r0]
   24cdc:	ldr	r2, [pc, #424]	; 24e8c <g_strcmp0@plt+0xe130>
   24ce0:	ldr	r3, [pc, #424]	; 24e90 <g_strcmp0@plt+0xe134>
   24ce4:	ldr	lr, [pc, #424]	; 24e94 <g_strcmp0@plt+0xe138>
   24ce8:	add	ip, sp, #48	; 0x30
   24cec:	ldr	r0, [r1]
   24cf0:	add	r1, sp, #44	; 0x2c
   24cf4:	str	r2, [sp, #20]
   24cf8:	str	r3, [sp, #12]
   24cfc:	add	r2, sp, #40	; 0x28
   24d00:	add	r3, sp, #36	; 0x24
   24d04:	str	lr, [sp, #4]
   24d08:	str	ip, [sp, #24]
   24d0c:	str	r4, [sp, #28]
   24d10:	str	r1, [sp, #16]
   24d14:	str	r2, [sp, #8]
   24d18:	str	r3, [sp]
   24d1c:	add	r2, sp, #32
   24d20:	ldr	r3, [pc, #368]	; 24e98 <g_strcmp0@plt+0xe13c>
   24d24:	ldr	r1, [pc, #368]	; 24e9c <g_strcmp0@plt+0xe140>
   24d28:	bl	166fc <g_object_get@plt>
   24d2c:	ldr	r1, [pc, #364]	; 24ea0 <g_strcmp0@plt+0xe144>
   24d30:	ldr	r0, [r9, #20]
   24d34:	bl	1615c <gtk_builder_get_object@plt>
   24d38:	mov	r4, r0
   24d3c:	bl	15db4 <gtk_widget_get_type@plt>
   24d40:	mov	r6, r0
   24d44:	mov	r1, r0
   24d48:	mov	r0, r4
   24d4c:	bl	15e14 <g_type_check_instance_cast@plt>
   24d50:	mov	r4, r0
   24d54:	bl	15d6c <gtk_label_get_type@plt>
   24d58:	mov	r7, r0
   24d5c:	mov	r1, r0
   24d60:	mov	r0, r4
   24d64:	bl	15e14 <g_type_check_instance_cast@plt>
   24d68:	ldr	r1, [sp, #36]	; 0x24
   24d6c:	bl	15d78 <gtk_label_set_label@plt>
   24d70:	ldr	r1, [pc, #300]	; 24ea4 <g_strcmp0@plt+0xe148>
   24d74:	ldr	r0, [r9, #20]
   24d78:	bl	1615c <gtk_builder_get_object@plt>
   24d7c:	mov	r1, r6
   24d80:	bl	15e14 <g_type_check_instance_cast@plt>
   24d84:	mov	r1, r7
   24d88:	bl	15e14 <g_type_check_instance_cast@plt>
   24d8c:	ldr	r1, [sp, #40]	; 0x28
   24d90:	bl	15d78 <gtk_label_set_label@plt>
   24d94:	ldr	r1, [pc, #268]	; 24ea8 <g_strcmp0@plt+0xe14c>
   24d98:	ldr	r0, [r9, #20]
   24d9c:	bl	1615c <gtk_builder_get_object@plt>
   24da0:	mov	r1, r6
   24da4:	bl	15e14 <g_type_check_instance_cast@plt>
   24da8:	mov	r1, r7
   24dac:	bl	15e14 <g_type_check_instance_cast@plt>
   24db0:	ldr	r1, [sp, #44]	; 0x2c
   24db4:	bl	15d78 <gtk_label_set_label@plt>
   24db8:	ldr	r1, [pc, #236]	; 24eac <g_strcmp0@plt+0xe150>
   24dbc:	ldr	r0, [r9, #20]
   24dc0:	bl	1615c <gtk_builder_get_object@plt>
   24dc4:	mov	r1, r6
   24dc8:	bl	15e14 <g_type_check_instance_cast@plt>
   24dcc:	mov	r1, r7
   24dd0:	bl	15e14 <g_type_check_instance_cast@plt>
   24dd4:	ldr	r1, [sp, #48]	; 0x30
   24dd8:	bl	15d78 <gtk_label_set_label@plt>
   24ddc:	ldr	r0, [sp, #32]
   24de0:	bl	16a74 <pk_package_id_to_printable@plt>
   24de4:	ldr	r1, [pc, #196]	; 24eb0 <g_strcmp0@plt+0xe154>
   24de8:	mov	r4, r0
   24dec:	ldr	r0, [r9, #20]
   24df0:	bl	1615c <gtk_builder_get_object@plt>
   24df4:	mov	r1, r6
   24df8:	bl	15e14 <g_type_check_instance_cast@plt>
   24dfc:	mov	r1, r7
   24e00:	bl	15e14 <g_type_check_instance_cast@plt>
   24e04:	mov	r1, r4
   24e08:	bl	15d78 <gtk_label_set_label@plt>
   24e0c:	ldr	r1, [pc, #160]	; 24eb4 <g_strcmp0@plt+0xe158>
   24e10:	ldr	r0, [r9, #20]
   24e14:	bl	1615c <gtk_builder_get_object@plt>
   24e18:	mov	r7, r0
   24e1c:	bl	16d20 <gtk_window_get_type@plt>
   24e20:	mov	r1, r0
   24e24:	mov	r0, r7
   24e28:	bl	15e14 <g_type_check_instance_cast@plt>
   24e2c:	ldr	r1, [r9, #8]
   24e30:	cmp	r1, #0
   24e34:	mov	r3, r0
   24e38:	str	r0, [r9, #12]
   24e3c:	beq	24e60 <g_strcmp0@plt+0xe104>
   24e40:	bl	16a2c <gtk_window_set_transient_for@plt>
   24e44:	mov	r1, r8
   24e48:	ldr	r0, [r9, #12]
   24e4c:	bl	16b40 <gtk_window_set_modal@plt>
   24e50:	ldr	r1, [pc, #96]	; 24eb8 <g_strcmp0@plt+0xe15c>
   24e54:	ldr	r0, [r9, #12]
   24e58:	bl	1633c <gtk_window_set_title@plt>
   24e5c:	ldr	r3, [r9, #12]
   24e60:	ldr	r2, [pc, #84]	; 24ebc <g_strcmp0@plt+0xe160>
   24e64:	mov	r1, r6
   24e68:	mov	r0, r3
   24e6c:	str	r2, [r9, #32]
   24e70:	bl	15e14 <g_type_check_instance_cast@plt>
   24e74:	bl	16978 <gtk_widget_show@plt>
   24e78:	b	24c88 <g_strcmp0@plt+0xdf2c>
   24e7c:	bl	165a0 <__stack_chk_fail@plt>
   24e80:	andeq	ip, r3, r0, asr lr
   24e84:	ldrdeq	ip, [r2], -r8
   24e88:	andeq	r6, r2, r8, lsr #21
   24e8c:	strdeq	ip, [r2], -r0
   24e90:	strdeq	ip, [r2], -r8
   24e94:	andeq	ip, r2, r4, lsl #14
   24e98:	andeq	ip, r2, r0, ror #13
   24e9c:	andeq	r7, r2, ip, asr #3
   24ea0:	andeq	ip, r2, ip, lsl #14
   24ea4:	andeq	ip, r2, r8, lsl r7
   24ea8:	andeq	ip, r2, r4, lsr #14
   24eac:	andeq	ip, r2, r0, lsr r7
   24eb0:	andeq	ip, r2, ip, lsr r7
   24eb4:	muleq	r2, r4, r2
   24eb8:	ldrdeq	r7, [r2], -r0
   24ebc:	andeq	ip, r2, ip, asr #14
   24ec0:	push	{r4, r5, r6, r7, r8, r9, lr}
   24ec4:	sub	sp, sp, #20
   24ec8:	ldr	r7, [pc, #488]	; 250b8 <g_strcmp0@plt+0xe35c>
   24ecc:	mov	r6, r2
   24ed0:	mov	r5, r1
   24ed4:	ldr	r3, [r7]
   24ed8:	mov	r4, r0
   24edc:	str	r3, [sp, #12]
   24ee0:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   24ee4:	mov	r1, r0
   24ee8:	mov	r0, r4
   24eec:	bl	15e14 <g_type_check_instance_cast@plt>
   24ef0:	ldr	r1, [pc, #452]	; 250bc <g_strcmp0@plt+0xe360>
   24ef4:	ldr	r4, [r0, #20]
   24ef8:	str	r5, [r4, #28]
   24efc:	ldr	r0, [r4, #16]
   24f00:	bl	1615c <gtk_builder_get_object@plt>
   24f04:	mov	r8, r0
   24f08:	bl	15db4 <gtk_widget_get_type@plt>
   24f0c:	mov	r1, r0
   24f10:	mov	r5, r0
   24f14:	mov	r0, r8
   24f18:	bl	15e14 <g_type_check_instance_cast@plt>
   24f1c:	bl	15e80 <gtk_widget_hide@plt>
   24f20:	mov	r0, r6
   24f24:	mov	r3, #0
   24f28:	add	r2, sp, #8
   24f2c:	ldr	r1, [pc, #396]	; 250c0 <g_strcmp0@plt+0xe364>
   24f30:	bl	166fc <g_object_get@plt>
   24f34:	ldr	r3, [sp, #8]
   24f38:	mov	r2, #5
   24f3c:	cmp	r3, #22
   24f40:	ldr	r1, [pc, #380]	; 250c4 <g_strcmp0@plt+0xe368>
   24f44:	mov	r0, #0
   24f48:	beq	25078 <g_strcmp0@plt+0xe31c>
   24f4c:	bl	1666c <dcgettext@plt>
   24f50:	mov	r2, #5
   24f54:	ldr	r1, [pc, #364]	; 250c8 <g_strcmp0@plt+0xe36c>
   24f58:	mov	r6, r0
   24f5c:	mov	r0, #0
   24f60:	bl	1666c <dcgettext@plt>
   24f64:	mov	r2, #5
   24f68:	ldr	r1, [pc, #348]	; 250cc <g_strcmp0@plt+0xe370>
   24f6c:	mov	r8, r0
   24f70:	mov	r0, #0
   24f74:	bl	1666c <dcgettext@plt>
   24f78:	ldr	r1, [pc, #336]	; 250d0 <g_strcmp0@plt+0xe374>
   24f7c:	mov	r2, #5
   24f80:	mov	r9, r0
   24f84:	mov	r0, #0
   24f88:	bl	1666c <dcgettext@plt>
   24f8c:	mov	r2, r8
   24f90:	mov	r3, r9
   24f94:	mov	r1, r6
   24f98:	str	r0, [sp]
   24f9c:	ldr	r0, [pc, #304]	; 250d4 <g_strcmp0@plt+0xe378>
   24fa0:	bl	161e0 <g_strdup_printf@plt>
   24fa4:	ldr	r1, [pc, #300]	; 250d8 <g_strcmp0@plt+0xe37c>
   24fa8:	mov	r6, r0
   24fac:	ldr	r0, [r4, #16]
   24fb0:	bl	1615c <gtk_builder_get_object@plt>
   24fb4:	mov	r1, r5
   24fb8:	bl	15e14 <g_type_check_instance_cast@plt>
   24fbc:	mov	r8, r0
   24fc0:	bl	15d6c <gtk_label_get_type@plt>
   24fc4:	mov	r1, r0
   24fc8:	mov	r0, r8
   24fcc:	bl	15e14 <g_type_check_instance_cast@plt>
   24fd0:	mov	r1, r6
   24fd4:	bl	16bdc <gtk_label_set_markup@plt>
   24fd8:	mov	r0, r6
   24fdc:	bl	16660 <g_free@plt>
   24fe0:	ldr	r1, [pc, #244]	; 250dc <g_strcmp0@plt+0xe380>
   24fe4:	ldr	r0, [r4, #16]
   24fe8:	bl	1615c <gtk_builder_get_object@plt>
   24fec:	mov	r6, r0
   24ff0:	bl	16d20 <gtk_window_get_type@plt>
   24ff4:	mov	r1, r0
   24ff8:	mov	r0, r6
   24ffc:	bl	15e14 <g_type_check_instance_cast@plt>
   25000:	ldr	r1, [r4, #8]
   25004:	cmp	r1, #0
   25008:	mov	r6, r0
   2500c:	str	r0, [r4, #12]
   25010:	beq	25034 <g_strcmp0@plt+0xe2d8>
   25014:	bl	16a2c <gtk_window_set_transient_for@plt>
   25018:	mov	r1, #1
   2501c:	ldr	r0, [r4, #12]
   25020:	bl	16b40 <gtk_window_set_modal@plt>
   25024:	ldr	r1, [pc, #180]	; 250e0 <g_strcmp0@plt+0xe384>
   25028:	ldr	r0, [r4, #12]
   2502c:	bl	1633c <gtk_window_set_title@plt>
   25030:	ldr	r6, [r4, #12]
   25034:	mov	r2, #5
   25038:	ldr	r1, [pc, #132]	; 250c4 <g_strcmp0@plt+0xe368>
   2503c:	mov	r0, #0
   25040:	bl	1666c <dcgettext@plt>
   25044:	mov	r1, r0
   25048:	mov	r0, r6
   2504c:	bl	1633c <gtk_window_set_title@plt>
   25050:	mov	r1, r5
   25054:	ldr	r0, [r4, #12]
   25058:	bl	15e14 <g_type_check_instance_cast@plt>
   2505c:	bl	16978 <gtk_widget_show@plt>
   25060:	ldr	r2, [sp, #12]
   25064:	ldr	r3, [r7]
   25068:	cmp	r2, r3
   2506c:	bne	250b4 <g_strcmp0@plt+0xe358>
   25070:	add	sp, sp, #20
   25074:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25078:	bl	1666c <dcgettext@plt>
   2507c:	mov	r2, #5
   25080:	ldr	r1, [pc, #92]	; 250e4 <g_strcmp0@plt+0xe388>
   25084:	mov	r6, r0
   25088:	mov	r0, #0
   2508c:	bl	1666c <dcgettext@plt>
   25090:	mov	r2, #5
   25094:	ldr	r1, [pc, #48]	; 250cc <g_strcmp0@plt+0xe370>
   25098:	mov	r8, r0
   2509c:	mov	r0, #0
   250a0:	bl	1666c <dcgettext@plt>
   250a4:	mov	r2, #5
   250a8:	ldr	r1, [pc, #56]	; 250e8 <g_strcmp0@plt+0xe38c>
   250ac:	mov	r9, r0
   250b0:	b	24f84 <g_strcmp0@plt+0xe228>
   250b4:	bl	165a0 <__stack_chk_fail@plt>
   250b8:	andeq	ip, r3, r0, asr lr
   250bc:	andeq	ip, r2, r8, lsl #13
   250c0:	andeq	ip, r2, r0, asr #5
   250c4:	andeq	ip, r2, ip, asr r7
   250c8:	andeq	ip, r2, r0, ror #16
   250cc:	ldrdeq	ip, [r2], -r4
   250d0:	andeq	ip, r2, r8, lsr #17
   250d4:	andeq	ip, r2, r0, asr r8
   250d8:	andeq	ip, r2, r0, ror #17
   250dc:	andeq	ip, r2, r4, asr #3
   250e0:	ldrdeq	r7, [r2], -r0
   250e4:	muleq	r2, r0, r7
   250e8:	andeq	ip, r2, r8, lsl r8
   250ec:	push	{r4, r5, r6, lr}
   250f0:	mov	r5, r0
   250f4:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   250f8:	mov	r1, r0
   250fc:	mov	r0, r5
   25100:	bl	15e14 <g_type_check_instance_cast@plt>
   25104:	ldr	r3, [r0, #20]
   25108:	mov	r4, r0
   2510c:	ldr	r0, [r3, #16]
   25110:	bl	16990 <g_object_unref@plt>
   25114:	ldr	r3, [r4, #20]
   25118:	ldr	r0, [r3, #20]
   2511c:	bl	16990 <g_object_unref@plt>
   25120:	ldr	r3, [r4, #20]
   25124:	ldr	r0, [r3, #24]
   25128:	bl	16990 <g_object_unref@plt>
   2512c:	ldr	r3, [r4, #20]
   25130:	ldr	r0, [r3, #4]
   25134:	bl	16990 <g_object_unref@plt>
   25138:	ldr	r3, [pc, #24]	; 25158 <g_strcmp0@plt+0xe3fc>
   2513c:	mov	r1, #80	; 0x50
   25140:	ldr	r0, [r3]
   25144:	bl	16c90 <g_type_check_class_cast@plt>
   25148:	ldr	r3, [r0, #24]
   2514c:	mov	r0, r5
   25150:	pop	{r4, r5, r6, lr}
   25154:	bx	r3
   25158:	andeq	sp, r3, r0, lsl r7
   2515c:	push	{r4, r5, r6, lr}
   25160:	mov	r4, r0
   25164:	mov	r5, r1
   25168:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   2516c:	cmp	r4, #0
   25170:	beq	251b8 <g_strcmp0@plt+0xe45c>
   25174:	ldr	r3, [r4]
   25178:	cmp	r3, #0
   2517c:	beq	2518c <g_strcmp0@plt+0xe430>
   25180:	ldr	r3, [r3]
   25184:	cmp	r3, r0
   25188:	beq	251a0 <g_strcmp0@plt+0xe444>
   2518c:	mov	r1, r0
   25190:	mov	r0, r4
   25194:	bl	167e0 <g_type_check_instance_is_a@plt>
   25198:	cmp	r0, #0
   2519c:	beq	251b8 <g_strcmp0@plt+0xe45c>
   251a0:	cmp	r5, #0
   251a4:	beq	251d0 <g_strcmp0@plt+0xe474>
   251a8:	ldr	r3, [r4, #20]
   251ac:	mov	r0, #1
   251b0:	str	r5, [r3, #8]
   251b4:	pop	{r4, r5, r6, pc}
   251b8:	ldr	r2, [pc, #40]	; 251e8 <g_strcmp0@plt+0xe48c>
   251bc:	ldr	r1, [pc, #40]	; 251ec <g_strcmp0@plt+0xe490>
   251c0:	ldr	r0, [pc, #40]	; 251f0 <g_strcmp0@plt+0xe494>
   251c4:	bl	15c58 <g_return_if_fail_warning@plt>
   251c8:	mov	r0, #0
   251cc:	pop	{r4, r5, r6, pc}
   251d0:	ldr	r2, [pc, #28]	; 251f4 <g_strcmp0@plt+0xe498>
   251d4:	ldr	r1, [pc, #16]	; 251ec <g_strcmp0@plt+0xe490>
   251d8:	ldr	r0, [pc, #16]	; 251f0 <g_strcmp0@plt+0xe494>
   251dc:	bl	15c58 <g_return_if_fail_warning@plt>
   251e0:	mov	r0, r5
   251e4:	pop	{r4, r5, r6, pc}
   251e8:	strdeq	ip, [r2], -r0
   251ec:	ldrdeq	fp, [r2], -r4
   251f0:	andeq	r6, r2, r8, lsr #21
   251f4:	andeq	ip, r2, r4, lsl #18
   251f8:	push	{r4, lr}
   251fc:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   25200:	mov	r1, #0
   25204:	bl	15b68 <g_object_new@plt>
   25208:	mov	r4, r0
   2520c:	bl	23f1c <g_strcmp0@plt+0xd1c0>
   25210:	mov	r1, r0
   25214:	mov	r0, r4
   25218:	pop	{r4, lr}
   2521c:	b	15e14 <g_type_check_instance_cast@plt>
   25220:	push	{r4, r5, r6, lr}
   25224:	mov	r4, r2
   25228:	mov	r5, r0
   2522c:	bl	15f10 <gtk_expander_get_type@plt>
   25230:	mov	r1, r0
   25234:	mov	r0, r5
   25238:	bl	15e14 <g_type_check_instance_cast@plt>
   2523c:	ldr	r1, [pc, #72]	; 2528c <g_strcmp0@plt+0xe530>
   25240:	mov	r5, r0
   25244:	mov	r0, r4
   25248:	bl	1615c <gtk_builder_get_object@plt>
   2524c:	mov	r4, r0
   25250:	bl	16d20 <gtk_window_get_type@plt>
   25254:	mov	r1, r0
   25258:	mov	r0, r4
   2525c:	bl	15e14 <g_type_check_instance_cast@plt>
   25260:	mov	r4, r0
   25264:	mov	r0, r5
   25268:	bl	15b50 <gtk_expander_get_expanded@plt>
   2526c:	subs	r1, r0, #0
   25270:	mov	r0, r4
   25274:	beq	25284 <g_strcmp0@plt+0xe528>
   25278:	mov	r1, #1
   2527c:	pop	{r4, r5, r6, lr}
   25280:	b	168c4 <gtk_window_set_resizable@plt>
   25284:	pop	{r4, r5, r6, lr}
   25288:	b	168c4 <gtk_window_set_resizable@plt>
   2528c:	andeq	ip, r2, r4, asr #3
   25290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25294:	sub	sp, sp, #28
   25298:	ldr	r9, [pc, #884]	; 25614 <g_strcmp0@plt+0xe8b8>
   2529c:	cmp	r2, #0
   252a0:	str	r2, [sp, #8]
   252a4:	ldr	r2, [r9]
   252a8:	mov	r7, #0
   252ac:	str	r1, [sp, #12]
   252b0:	str	r2, [sp, #20]
   252b4:	str	r7, [sp, #16]
   252b8:	beq	25548 <g_strcmp0@plt+0xe7ec>
   252bc:	mov	sl, r3
   252c0:	mov	fp, r0
   252c4:	bl	168dc <gtk_builder_new@plt>
   252c8:	add	r2, sp, #16
   252cc:	ldr	r1, [pc, #836]	; 25618 <g_strcmp0@plt+0xe8bc>
   252d0:	mov	r4, r0
   252d4:	bl	16cc0 <gtk_builder_add_from_file@plt>
   252d8:	cmp	r0, r7
   252dc:	beq	25524 <g_strcmp0@plt+0xe7c8>
   252e0:	ldr	r1, [pc, #820]	; 2561c <g_strcmp0@plt+0xe8c0>
   252e4:	mov	r0, r4
   252e8:	bl	1615c <gtk_builder_get_object@plt>
   252ec:	mov	r6, r0
   252f0:	bl	15db4 <gtk_widget_get_type@plt>
   252f4:	mov	r1, r0
   252f8:	mov	r5, r0
   252fc:	mov	r0, r6
   25300:	bl	15e14 <g_type_check_instance_cast@plt>
   25304:	mov	r8, r0
   25308:	bl	16d20 <gtk_window_get_type@plt>
   2530c:	mov	r6, r0
   25310:	mov	r1, r0
   25314:	mov	r0, r8
   25318:	bl	15e14 <g_type_check_instance_cast@plt>
   2531c:	mov	r1, r7
   25320:	bl	168c4 <gtk_window_set_resizable@plt>
   25324:	mov	r2, #2
   25328:	mov	r3, r7
   2532c:	str	r2, [sp, #4]
   25330:	ldr	r1, [pc, #744]	; 25620 <g_strcmp0@plt+0xe8c4>
   25334:	ldr	r2, [pc, #744]	; 25624 <g_strcmp0@plt+0xe8c8>
   25338:	str	r7, [sp]
   2533c:	mov	r0, r8
   25340:	bl	16414 <g_signal_connect_data@plt>
   25344:	mov	r1, r6
   25348:	mov	r0, r8
   2534c:	bl	15e14 <g_type_check_instance_cast@plt>
   25350:	ldr	r1, [pc, #720]	; 25628 <g_strcmp0@plt+0xe8cc>
   25354:	bl	1633c <gtk_window_set_title@plt>
   25358:	cmp	fp, #0
   2535c:	mov	r1, r6
   25360:	mov	r0, r8
   25364:	beq	25560 <g_strcmp0@plt+0xe804>
   25368:	bl	15e14 <g_type_check_instance_cast@plt>
   2536c:	mov	r1, fp
   25370:	bl	16a2c <gtk_window_set_transient_for@plt>
   25374:	mov	r0, r8
   25378:	mov	r1, r6
   2537c:	bl	15e14 <g_type_check_instance_cast@plt>
   25380:	ldr	r1, [pc, #676]	; 2562c <g_strcmp0@plt+0xe8d0>
   25384:	bl	15fb8 <gtk_window_set_icon_name@plt>
   25388:	ldr	r1, [pc, #672]	; 25630 <g_strcmp0@plt+0xe8d4>
   2538c:	mov	r0, r4
   25390:	bl	1615c <gtk_builder_get_object@plt>
   25394:	mov	r1, r5
   25398:	bl	15e14 <g_type_check_instance_cast@plt>
   2539c:	mov	r7, #0
   253a0:	mov	r3, #2
   253a4:	ldr	r2, [pc, #632]	; 25624 <g_strcmp0@plt+0xe8c8>
   253a8:	str	r3, [sp, #4]
   253ac:	ldr	r1, [pc, #640]	; 25634 <g_strcmp0@plt+0xe8d8>
   253b0:	mov	r3, r7
   253b4:	str	r7, [sp]
   253b8:	bl	16414 <g_signal_connect_data@plt>
   253bc:	ldr	r1, [pc, #628]	; 25638 <g_strcmp0@plt+0xe8dc>
   253c0:	mov	r0, r4
   253c4:	bl	1615c <gtk_builder_get_object@plt>
   253c8:	mov	r1, r5
   253cc:	bl	15e14 <g_type_check_instance_cast@plt>
   253d0:	mov	r3, r4
   253d4:	ldr	r2, [pc, #608]	; 2563c <g_strcmp0@plt+0xe8e0>
   253d8:	ldr	r1, [pc, #608]	; 25640 <g_strcmp0@plt+0xe8e4>
   253dc:	str	r7, [sp, #4]
   253e0:	str	r7, [sp]
   253e4:	bl	16414 <g_signal_connect_data@plt>
   253e8:	ldr	r1, [pc, #596]	; 25644 <g_strcmp0@plt+0xe8e8>
   253ec:	mov	r0, r4
   253f0:	bl	1615c <gtk_builder_get_object@plt>
   253f4:	mov	r1, r5
   253f8:	bl	15e14 <g_type_check_instance_cast@plt>
   253fc:	mov	fp, r0
   25400:	bl	15d6c <gtk_label_get_type@plt>
   25404:	mov	r1, r0
   25408:	mov	r8, r0
   2540c:	mov	r0, fp
   25410:	bl	15e14 <g_type_check_instance_cast@plt>
   25414:	ldr	r1, [sp, #12]
   25418:	bl	15d78 <gtk_label_set_label@plt>
   2541c:	ldr	r1, [pc, #548]	; 25648 <g_strcmp0@plt+0xe8ec>
   25420:	mov	r0, r4
   25424:	bl	1615c <gtk_builder_get_object@plt>
   25428:	mov	r1, r5
   2542c:	bl	15e14 <g_type_check_instance_cast@plt>
   25430:	mov	r1, r8
   25434:	bl	15e14 <g_type_check_instance_cast@plt>
   25438:	ldr	r1, [sp, #8]
   2543c:	bl	16bdc <gtk_label_set_markup@plt>
   25440:	cmp	sl, r7
   25444:	beq	25454 <g_strcmp0@plt+0xe6f8>
   25448:	ldrb	r3, [sl]
   2544c:	cmp	r3, r7
   25450:	bne	25570 <g_strcmp0@plt+0xe814>
   25454:	ldr	r1, [pc, #476]	; 25638 <g_strcmp0@plt+0xe8dc>
   25458:	mov	r0, r4
   2545c:	bl	1615c <gtk_builder_get_object@plt>
   25460:	mov	r1, r5
   25464:	bl	15e14 <g_type_check_instance_cast@plt>
   25468:	bl	15e80 <gtk_widget_hide@plt>
   2546c:	ldr	r1, [pc, #424]	; 2561c <g_strcmp0@plt+0xe8c0>
   25470:	mov	r0, r4
   25474:	bl	1615c <gtk_builder_get_object@plt>
   25478:	mov	r1, r5
   2547c:	bl	15e14 <g_type_check_instance_cast@plt>
   25480:	mov	r1, r6
   25484:	mov	r7, r0
   25488:	bl	15e14 <g_type_check_instance_cast@plt>
   2548c:	ldr	r1, [sp, #64]	; 0x40
   25490:	bl	16594 <gtk_window_present_with_time@plt>
   25494:	mov	r1, r6
   25498:	mov	r0, r7
   2549c:	bl	15e14 <g_type_check_instance_cast@plt>
   254a0:	ldr	r1, [pc, #388]	; 2562c <g_strcmp0@plt+0xe8d0>
   254a4:	bl	15fb8 <gtk_window_set_icon_name@plt>
   254a8:	bl	1669c <gtk_main@plt>
   254ac:	cmp	r7, #0
   254b0:	movne	r8, #0
   254b4:	beq	254f4 <g_strcmp0@plt+0xe798>
   254b8:	ldr	r3, [r7]
   254bc:	cmp	r3, #0
   254c0:	beq	254d0 <g_strcmp0@plt+0xe774>
   254c4:	ldr	r3, [r3]
   254c8:	cmp	r5, r3
   254cc:	beq	25518 <g_strcmp0@plt+0xe7bc>
   254d0:	mov	r1, r5
   254d4:	mov	r0, r7
   254d8:	bl	167e0 <g_type_check_instance_is_a@plt>
   254dc:	cmp	r0, #0
   254e0:	bne	25518 <g_strcmp0@plt+0xe7bc>
   254e4:	cmp	r8, #0
   254e8:	beq	254f4 <g_strcmp0@plt+0xe798>
   254ec:	mov	r0, r8
   254f0:	bl	16990 <g_object_unref@plt>
   254f4:	mov	r0, r4
   254f8:	bl	16990 <g_object_unref@plt>
   254fc:	mov	r0, #1
   25500:	ldr	r2, [sp, #20]
   25504:	ldr	r3, [r9]
   25508:	cmp	r2, r3
   2550c:	bne	25610 <g_strcmp0@plt+0xe8b4>
   25510:	add	sp, sp, #28
   25514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25518:	mov	r0, r7
   2551c:	bl	15e80 <gtk_widget_hide@plt>
   25520:	b	254e4 <g_strcmp0@plt+0xe788>
   25524:	ldr	r3, [sp, #16]
   25528:	ldr	r2, [pc, #284]	; 2564c <g_strcmp0@plt+0xe8f0>
   2552c:	mov	r1, #16
   25530:	ldr	r3, [r3, #8]
   25534:	ldr	r0, [pc, #276]	; 25650 <g_strcmp0@plt+0xe8f4>
   25538:	bl	15ebc <g_log@plt>
   2553c:	ldr	r0, [sp, #16]
   25540:	bl	15d3c <g_error_free@plt>
   25544:	b	254f4 <g_strcmp0@plt+0xe798>
   25548:	ldr	r0, [pc, #256]	; 25650 <g_strcmp0@plt+0xe8f4>
   2554c:	ldr	r2, [pc, #256]	; 25654 <g_strcmp0@plt+0xe8f8>
   25550:	ldr	r1, [pc, #256]	; 25658 <g_strcmp0@plt+0xe8fc>
   25554:	bl	15c58 <g_return_if_fail_warning@plt>
   25558:	ldr	r0, [sp, #8]
   2555c:	b	25500 <g_strcmp0@plt+0xe7a4>
   25560:	bl	15e14 <g_type_check_instance_cast@plt>
   25564:	mov	r1, #1
   25568:	bl	16b40 <gtk_window_set_modal@plt>
   2556c:	b	25374 <g_strcmp0@plt+0xe618>
   25570:	mov	r0, r7
   25574:	bl	16a38 <gtk_text_buffer_new@plt>
   25578:	mov	r8, r0
   2557c:	mov	r0, sl
   25580:	bl	1699c <strlen@plt>
   25584:	mov	r1, sl
   25588:	mov	r2, r0
   2558c:	mov	r0, r8
   25590:	bl	166c0 <gtk_text_buffer_insert_at_cursor@plt>
   25594:	ldr	r1, [pc, #192]	; 2565c <g_strcmp0@plt+0xe900>
   25598:	mov	r0, r4
   2559c:	bl	1615c <gtk_builder_get_object@plt>
   255a0:	mov	r1, r5
   255a4:	bl	15e14 <g_type_check_instance_cast@plt>
   255a8:	mov	r7, r0
   255ac:	bl	15e38 <gtk_text_view_get_type@plt>
   255b0:	mov	r1, r0
   255b4:	mov	r0, r7
   255b8:	bl	15e14 <g_type_check_instance_cast@plt>
   255bc:	mov	r1, r8
   255c0:	bl	16384 <gtk_text_view_set_buffer@plt>
   255c4:	ldr	r1, [pc, #80]	; 2561c <g_strcmp0@plt+0xe8c0>
   255c8:	mov	r0, r4
   255cc:	bl	1615c <gtk_builder_get_object@plt>
   255d0:	mov	r1, r5
   255d4:	bl	15e14 <g_type_check_instance_cast@plt>
   255d8:	mov	r1, r6
   255dc:	mov	r7, r0
   255e0:	bl	15e14 <g_type_check_instance_cast@plt>
   255e4:	ldr	r1, [sp, #64]	; 0x40
   255e8:	bl	16594 <gtk_window_present_with_time@plt>
   255ec:	mov	r1, r6
   255f0:	mov	r0, r7
   255f4:	bl	15e14 <g_type_check_instance_cast@plt>
   255f8:	ldr	r1, [pc, #44]	; 2562c <g_strcmp0@plt+0xe8d0>
   255fc:	bl	15fb8 <gtk_window_set_icon_name@plt>
   25600:	bl	1669c <gtk_main@plt>
   25604:	cmp	r7, #0
   25608:	bne	254b8 <g_strcmp0@plt+0xe75c>
   2560c:	b	254e4 <g_strcmp0@plt+0xe788>
   25610:	bl	165a0 <__stack_chk_fail@plt>
   25614:	andeq	ip, r3, r0, asr lr
   25618:	muleq	r2, ip, r1
   2561c:	andeq	ip, r2, r4, asr #3
   25620:	andeq	fp, r2, ip, asr #21
   25624:	muleq	r1, r8, sl
   25628:	ldrdeq	r7, [r2], -r0
   2562c:	muleq	r2, r8, r8
   25630:	ldrdeq	fp, [r2], -ip
   25634:	andeq	r6, r2, r4, asr sl
   25638:	ldrdeq	ip, [r2], -r4
   2563c:	andeq	r5, r2, r0, lsr #4
   25640:	andeq	ip, r2, r0, asr r9
   25644:	andeq	ip, r2, r8, lsl #13
   25648:	andeq	ip, r2, r0, ror #17
   2564c:	strdeq	r7, [r2], -r4
   25650:	andeq	r6, r2, r8, lsr #21
   25654:	andeq	ip, r2, r0, asr #18
   25658:	andeq	ip, r2, ip, lsl r9
   2565c:	andeq	ip, r2, r4, asr #13
   25660:	push	{lr}		; (str lr, [sp, #-4]!)
   25664:	sub	sp, sp, #12
   25668:	mov	ip, #0
   2566c:	str	ip, [sp]
   25670:	bl	25290 <g_strcmp0@plt+0xe534>
   25674:	add	sp, sp, #12
   25678:	pop	{pc}		; (ldr pc, [sp], #4)
   2567c:	push	{lr}		; (str lr, [sp, #-4]!)
   25680:	sub	sp, sp, #12
   25684:	mov	ip, #0
   25688:	mov	r3, r2
   2568c:	str	ip, [sp]
   25690:	mov	r2, r1
   25694:	mov	r1, r0
   25698:	mov	r0, ip
   2569c:	bl	25290 <g_strcmp0@plt+0xe534>
   256a0:	add	sp, sp, #12
   256a4:	pop	{pc}		; (ldr pc, [sp], #4)
   256a8:	push	{r4, lr}
   256ac:	sub	sp, sp, #16
   256b0:	bl	16540 <gtk_image_get_type@plt>
   256b4:	mov	r4, r0
   256b8:	ldr	r0, [pc, #48]	; 256f0 <g_strcmp0@plt+0xe994>
   256bc:	bl	1651c <g_intern_static_string@plt>
   256c0:	ldr	r1, [pc, #44]	; 256f4 <g_strcmp0@plt+0xe998>
   256c4:	mov	r2, #0
   256c8:	mov	r3, #48	; 0x30
   256cc:	stmib	sp, {r1, r2}
   256d0:	str	r3, [sp]
   256d4:	mov	r2, #444	; 0x1bc
   256d8:	ldr	r3, [pc, #24]	; 256f8 <g_strcmp0@plt+0xe99c>
   256dc:	mov	r1, r0
   256e0:	mov	r0, r4
   256e4:	bl	15c70 <g_type_register_static_simple@plt>
   256e8:	add	sp, sp, #16
   256ec:	pop	{r4, pc}
   256f0:	andeq	ip, r2, r8, lsr #20
   256f4:	andeq	r5, r2, r8, ror #16
   256f8:	strdeq	r5, [r2], -ip
   256fc:	push	{r4, r5, r6, lr}
   25700:	mov	r5, r0
   25704:	ldr	r4, [pc, #68]	; 25750 <g_strcmp0@plt+0xe9f4>
   25708:	bl	16ad4 <g_type_class_peek_parent@plt>
   2570c:	ldr	r3, [r4]
   25710:	cmp	r3, #0
   25714:	bne	25740 <g_strcmp0@plt+0xe9e4>
   25718:	bl	15db4 <gtk_widget_get_type@plt>
   2571c:	mov	r1, r0
   25720:	mov	r0, r5
   25724:	bl	16c90 <g_type_check_class_cast@plt>
   25728:	ldr	r3, [pc, #36]	; 25754 <g_strcmp0@plt+0xe9f8>
   2572c:	str	r3, [r0, #76]	; 0x4c
   25730:	mov	r0, r5
   25734:	bl	16ad4 <g_type_class_peek_parent@plt>
   25738:	str	r0, [r4, #4]
   2573c:	pop	{r4, r5, r6, pc}
   25740:	mov	r1, r4
   25744:	mov	r0, r5
   25748:	bl	15cc4 <g_type_class_adjust_private_offset@plt>
   2574c:	b	25718 <g_strcmp0@plt+0xe9bc>
   25750:	andeq	sp, r3, ip, lsl r7
   25754:	strdeq	r5, [r2], -r8
   25758:	ldr	r1, [pc, #164]	; 25804 <g_strcmp0@plt+0xeaa8>
   2575c:	ldr	r3, [pc, #164]	; 25808 <g_strcmp0@plt+0xeaac>
   25760:	push	{r4, r5, r6, lr}
   25764:	mov	r4, r0
   25768:	ldr	r2, [r1, #8]
   2576c:	add	r0, r2, #1
   25770:	umull	ip, r3, r3, r2
   25774:	str	r0, [r1, #8]
   25778:	lsr	r3, r3, #4
   2577c:	add	r3, r3, r3, lsl #2
   25780:	cmp	r2, r3, lsl #2
   25784:	beq	257cc <g_strcmp0@plt+0xea70>
   25788:	ldr	r5, [r4, #44]	; 0x2c
   2578c:	cmp	r5, #0
   25790:	beq	257e8 <g_strcmp0@plt+0xea8c>
   25794:	bl	16540 <gtk_image_get_type@plt>
   25798:	mov	r1, r0
   2579c:	mov	r0, r4
   257a0:	bl	15e14 <g_type_check_instance_cast@plt>
   257a4:	ldr	r2, [r4, #32]
   257a8:	ldr	r3, [r4, #44]	; 0x2c
   257ac:	ldr	r1, [r3, r2, lsl #2]
   257b0:	bl	161d4 <gtk_image_set_from_pixbuf@plt>
   257b4:	ldrd	r0, [r4, #32]
   257b8:	add	r0, r0, #1
   257bc:	bl	2627c <g_strcmp0@plt+0xf520>
   257c0:	mov	r0, #1
   257c4:	str	r1, [r4, #32]
   257c8:	pop	{r4, r5, r6, pc}
   257cc:	ldr	r2, [pc, #56]	; 2580c <g_strcmp0@plt+0xeab0>
   257d0:	mov	r1, #128	; 0x80
   257d4:	ldr	r0, [pc, #52]	; 25810 <g_strcmp0@plt+0xeab4>
   257d8:	bl	15ebc <g_log@plt>
   257dc:	ldr	r5, [r4, #44]	; 0x2c
   257e0:	cmp	r5, #0
   257e4:	bne	25794 <g_strcmp0@plt+0xea38>
   257e8:	ldr	r2, [pc, #36]	; 25814 <g_strcmp0@plt+0xeab8>
   257ec:	mov	r1, #16
   257f0:	ldr	r0, [pc, #24]	; 25810 <g_strcmp0@plt+0xeab4>
   257f4:	bl	15ebc <g_log@plt>
   257f8:	str	r5, [r4, #28]
   257fc:	mov	r0, r5
   25800:	pop	{r4, r5, r6, pc}
   25804:	andeq	sp, r3, ip, lsl r7
   25808:	stclgt	12, cr12, [ip], {205}	; 0xcd
   2580c:	andeq	ip, r2, r8, lsr sl
   25810:	andeq	r6, r2, r8, lsr #21
   25814:	andeq	ip, r2, r8, asr #20
   25818:	push	{r4, lr}
   2581c:	mcr	15, 0, r0, cr7, cr10, {5}
   25820:	ldr	r4, [pc, #60]	; 25864 <g_strcmp0@plt+0xeb08>
   25824:	ldr	r3, [r4, #12]
   25828:	mcr	15, 0, r0, cr7, cr10, {5}
   2582c:	cmp	r3, #0
   25830:	beq	2583c <g_strcmp0@plt+0xeae0>
   25834:	ldr	r0, [r4, #12]
   25838:	pop	{r4, pc}
   2583c:	add	r0, r4, #12
   25840:	bl	1642c <g_once_init_enter@plt>
   25844:	cmp	r0, #0
   25848:	beq	25834 <g_strcmp0@plt+0xead8>
   2584c:	bl	256a8 <g_strcmp0@plt+0xe94c>
   25850:	mov	r1, r0
   25854:	add	r0, r4, #12
   25858:	bl	169d8 <g_once_init_leave@plt>
   2585c:	ldr	r0, [r4, #12]
   25860:	pop	{r4, pc}
   25864:	andeq	sp, r3, ip, lsl r7
   25868:	push	{r4, r5, lr}
   2586c:	mov	r4, r0
   25870:	sub	sp, sp, #12
   25874:	bl	25818 <g_strcmp0@plt+0xeabc>
   25878:	cmp	r4, #0
   2587c:	beq	258fc <g_strcmp0@plt+0xeba0>
   25880:	ldr	r3, [r4]
   25884:	cmp	r3, #0
   25888:	beq	25898 <g_strcmp0@plt+0xeb3c>
   2588c:	ldr	r3, [r3]
   25890:	cmp	r3, r0
   25894:	beq	258ac <g_strcmp0@plt+0xeb50>
   25898:	mov	r1, r0
   2589c:	mov	r0, r4
   258a0:	bl	167e0 <g_type_check_instance_is_a@plt>
   258a4:	cmp	r0, #0
   258a8:	beq	258fc <g_strcmp0@plt+0xeba0>
   258ac:	mov	r5, #0
   258b0:	mov	r3, #200	; 0xc8
   258b4:	str	r3, [r4, #40]	; 0x28
   258b8:	str	r5, [r4, #44]	; 0x2c
   258bc:	str	r5, [r4, #24]
   258c0:	str	r5, [r4, #28]
   258c4:	str	r5, [r4, #32]
   258c8:	str	r5, [r4, #36]	; 0x24
   258cc:	bl	15db4 <gtk_widget_get_type@plt>
   258d0:	mov	r1, r0
   258d4:	mov	r0, r4
   258d8:	bl	15e14 <g_type_check_instance_cast@plt>
   258dc:	str	r5, [sp, #4]
   258e0:	str	r5, [sp]
   258e4:	mov	r3, r4
   258e8:	ldr	r2, [pc, #36]	; 25914 <g_strcmp0@plt+0xebb8>
   258ec:	ldr	r1, [pc, #36]	; 25918 <g_strcmp0@plt+0xebbc>
   258f0:	bl	16414 <g_signal_connect_data@plt>
   258f4:	add	sp, sp, #12
   258f8:	pop	{r4, r5, pc}
   258fc:	ldr	r2, [pc, #24]	; 2591c <g_strcmp0@plt+0xebc0>
   25900:	ldr	r1, [pc, #24]	; 25920 <g_strcmp0@plt+0xebc4>
   25904:	ldr	r0, [pc, #24]	; 25924 <g_strcmp0@plt+0xebc8>
   25908:	add	sp, sp, #12
   2590c:	pop	{r4, r5, lr}
   25910:	b	15c58 <g_return_if_fail_warning@plt>
   25914:	andeq	r5, r2, r8, lsr ip
   25918:	andeq	ip, r2, ip, ror sl
   2591c:	andeq	ip, r2, r0, ror #20
   25920:	andeq	ip, r2, r4, ror #18
   25924:	andeq	r6, r2, r8, lsr #21
   25928:	push	{r4, r5, r6, lr}
   2592c:	mov	r5, r0
   25930:	bl	25818 <g_strcmp0@plt+0xeabc>
   25934:	cmp	r5, #0
   25938:	beq	259b8 <g_strcmp0@plt+0xec5c>
   2593c:	ldr	r3, [r5]
   25940:	cmp	r3, #0
   25944:	beq	25954 <g_strcmp0@plt+0xebf8>
   25948:	ldr	r3, [r3]
   2594c:	cmp	r3, r0
   25950:	beq	25968 <g_strcmp0@plt+0xec0c>
   25954:	mov	r1, r0
   25958:	mov	r0, r5
   2595c:	bl	167e0 <g_type_check_instance_is_a@plt>
   25960:	cmp	r0, #0
   25964:	beq	259b8 <g_strcmp0@plt+0xec5c>
   25968:	ldr	r6, [r5, #44]	; 0x2c
   2596c:	cmp	r6, #0
   25970:	beq	259d0 <g_strcmp0@plt+0xec74>
   25974:	ldr	r3, [r5, #36]	; 0x24
   25978:	cmp	r3, #0
   2597c:	movne	r4, #0
   25980:	beq	259a0 <g_strcmp0@plt+0xec44>
   25984:	ldr	r0, [r6, r4, lsl #2]
   25988:	bl	16990 <g_object_unref@plt>
   2598c:	ldr	r3, [r5, #36]	; 0x24
   25990:	add	r4, r4, #1
   25994:	cmp	r4, r3
   25998:	ldr	r6, [r5, #44]	; 0x2c
   2599c:	bcc	25984 <g_strcmp0@plt+0xec28>
   259a0:	mov	r0, r6
   259a4:	bl	16660 <g_free@plt>
   259a8:	mov	r3, #0
   259ac:	mov	r0, #1
   259b0:	str	r3, [r5, #44]	; 0x2c
   259b4:	pop	{r4, r5, r6, pc}
   259b8:	ldr	r2, [pc, #40]	; 259e8 <g_strcmp0@plt+0xec8c>
   259bc:	ldr	r1, [pc, #40]	; 259ec <g_strcmp0@plt+0xec90>
   259c0:	ldr	r0, [pc, #40]	; 259f0 <g_strcmp0@plt+0xec94>
   259c4:	bl	15c58 <g_return_if_fail_warning@plt>
   259c8:	mov	r0, #0
   259cc:	pop	{r4, r5, r6, pc}
   259d0:	ldr	r2, [pc, #28]	; 259f4 <g_strcmp0@plt+0xec98>
   259d4:	mov	r1, #128	; 0x80
   259d8:	ldr	r0, [pc, #16]	; 259f0 <g_strcmp0@plt+0xec94>
   259dc:	bl	15ebc <g_log@plt>
   259e0:	mov	r0, r6
   259e4:	pop	{r4, r5, r6, pc}
   259e8:	andeq	ip, r2, r0, ror #20
   259ec:	andeq	ip, r2, ip, ror r9
   259f0:	andeq	r6, r2, r8, lsr #21
   259f4:	andeq	ip, r2, ip, lsl #21
   259f8:	push	{r4, r5, r6, lr}
   259fc:	mov	r5, r0
   25a00:	bl	25818 <g_strcmp0@plt+0xeabc>
   25a04:	mov	r1, r0
   25a08:	mov	r0, r5
   25a0c:	bl	15e14 <g_type_check_instance_cast@plt>
   25a10:	mov	r4, r0
   25a14:	ldr	r0, [r0, #28]
   25a18:	cmp	r0, #0
   25a1c:	bne	25a60 <g_strcmp0@plt+0xed04>
   25a20:	ldr	r0, [r4, #24]
   25a24:	bl	16660 <g_free@plt>
   25a28:	mov	r3, #0
   25a2c:	str	r3, [r4, #24]
   25a30:	mov	r0, r4
   25a34:	bl	25928 <g_strcmp0@plt+0xebcc>
   25a38:	ldr	r3, [pc, #40]	; 25a68 <g_strcmp0@plt+0xed0c>
   25a3c:	ldr	r4, [r3, #4]
   25a40:	bl	15db4 <gtk_widget_get_type@plt>
   25a44:	mov	r1, r0
   25a48:	mov	r0, r4
   25a4c:	bl	16c90 <g_type_check_class_cast@plt>
   25a50:	ldr	r3, [r0, #76]	; 0x4c
   25a54:	mov	r0, r5
   25a58:	pop	{r4, r5, r6, lr}
   25a5c:	bx	r3
   25a60:	bl	16d38 <g_source_remove@plt>
   25a64:	b	25a20 <g_strcmp0@plt+0xecc4>
   25a68:	andeq	sp, r3, ip, lsl r7
   25a6c:	push	{r4, r5, r6, lr}
   25a70:	mov	r4, r0
   25a74:	mov	r5, r1
   25a78:	bl	25818 <g_strcmp0@plt+0xeabc>
   25a7c:	cmp	r4, #0
   25a80:	beq	25adc <g_strcmp0@plt+0xed80>
   25a84:	ldr	r3, [r4]
   25a88:	cmp	r3, #0
   25a8c:	beq	25a9c <g_strcmp0@plt+0xed40>
   25a90:	ldr	r3, [r3]
   25a94:	cmp	r3, r0
   25a98:	beq	25ab0 <g_strcmp0@plt+0xed54>
   25a9c:	mov	r1, r0
   25aa0:	mov	r0, r4
   25aa4:	bl	167e0 <g_type_check_instance_is_a@plt>
   25aa8:	cmp	r0, #0
   25aac:	beq	25adc <g_strcmp0@plt+0xed80>
   25ab0:	ldr	r0, [pc, #100]	; 25b1c <g_strcmp0@plt+0xedc0>
   25ab4:	mov	r3, r5
   25ab8:	ldr	r2, [pc, #96]	; 25b20 <g_strcmp0@plt+0xedc4>
   25abc:	mov	r1, #128	; 0x80
   25ac0:	bl	15ebc <g_log@plt>
   25ac4:	ldr	r0, [r4, #28]
   25ac8:	str	r5, [r4, #40]	; 0x28
   25acc:	cmp	r0, #0
   25ad0:	bne	25af4 <g_strcmp0@plt+0xed98>
   25ad4:	mov	r0, #1
   25ad8:	pop	{r4, r5, r6, pc}
   25adc:	ldr	r2, [pc, #64]	; 25b24 <g_strcmp0@plt+0xedc8>
   25ae0:	ldr	r1, [pc, #64]	; 25b28 <g_strcmp0@plt+0xedcc>
   25ae4:	ldr	r0, [pc, #48]	; 25b1c <g_strcmp0@plt+0xedc0>
   25ae8:	bl	15c58 <g_return_if_fail_warning@plt>
   25aec:	mov	r0, #0
   25af0:	pop	{r4, r5, r6, pc}
   25af4:	bl	16d38 <g_source_remove@plt>
   25af8:	mov	r2, r4
   25afc:	ldr	r1, [pc, #40]	; 25b2c <g_strcmp0@plt+0xedd0>
   25b00:	ldr	r0, [r4, #40]	; 0x28
   25b04:	bl	15cd0 <g_timeout_add@plt>
   25b08:	ldr	r1, [pc, #32]	; 25b30 <g_strcmp0@plt+0xedd4>
   25b0c:	str	r0, [r4, #28]
   25b10:	bl	16a44 <g_source_set_name_by_id@plt>
   25b14:	mov	r0, #1
   25b18:	pop	{r4, r5, r6, pc}
   25b1c:	andeq	r6, r2, r8, lsr #21
   25b20:	muleq	r2, ip, sl
   25b24:	andeq	ip, r2, r0, ror #20
   25b28:	muleq	r2, ip, r9
   25b2c:	andeq	r5, r2, r8, asr r7
   25b30:			; <UNDEFINED> instruction: 0x0002cab4
   25b34:	push	{r4, r5, r6, lr}
   25b38:	mov	r4, r0
   25b3c:	mov	r5, r1
   25b40:	bl	25818 <g_strcmp0@plt+0xeabc>
   25b44:	cmp	r4, #0
   25b48:	beq	25ba4 <g_strcmp0@plt+0xee48>
   25b4c:	ldr	r3, [r4]
   25b50:	cmp	r3, #0
   25b54:	beq	25b64 <g_strcmp0@plt+0xee08>
   25b58:	ldr	r3, [r3]
   25b5c:	cmp	r3, r0
   25b60:	beq	25b78 <g_strcmp0@plt+0xee1c>
   25b64:	mov	r1, r0
   25b68:	mov	r0, r4
   25b6c:	bl	167e0 <g_type_check_instance_is_a@plt>
   25b70:	cmp	r0, #0
   25b74:	beq	25ba4 <g_strcmp0@plt+0xee48>
   25b78:	cmp	r5, #0
   25b7c:	ldr	r0, [r4, #28]
   25b80:	bne	25bbc <g_strcmp0@plt+0xee60>
   25b84:	cmp	r0, #0
   25b88:	bne	25bf4 <g_strcmp0@plt+0xee98>
   25b8c:	ldr	r2, [pc, #136]	; 25c1c <g_strcmp0@plt+0xeec0>
   25b90:	mov	r1, #128	; 0x80
   25b94:	ldr	r0, [pc, #132]	; 25c20 <g_strcmp0@plt+0xeec4>
   25b98:	bl	15ebc <g_log@plt>
   25b9c:	mov	r0, r5
   25ba0:	pop	{r4, r5, r6, pc}
   25ba4:	ldr	r2, [pc, #120]	; 25c24 <g_strcmp0@plt+0xeec8>
   25ba8:	ldr	r1, [pc, #120]	; 25c28 <g_strcmp0@plt+0xeecc>
   25bac:	ldr	r0, [pc, #108]	; 25c20 <g_strcmp0@plt+0xeec4>
   25bb0:	bl	15c58 <g_return_if_fail_warning@plt>
   25bb4:	mov	r0, #0
   25bb8:	pop	{r4, r5, r6, pc}
   25bbc:	cmp	r0, #0
   25bc0:	bne	25c04 <g_strcmp0@plt+0xeea8>
   25bc4:	mov	r2, r4
   25bc8:	str	r0, [r4, #32]
   25bcc:	ldr	r1, [pc, #88]	; 25c2c <g_strcmp0@plt+0xeed0>
   25bd0:	ldr	r0, [r4, #40]	; 0x28
   25bd4:	bl	15cd0 <g_timeout_add@plt>
   25bd8:	ldr	r1, [pc, #80]	; 25c30 <g_strcmp0@plt+0xeed4>
   25bdc:	str	r0, [r4, #28]
   25be0:	bl	16a44 <g_source_set_name_by_id@plt>
   25be4:	mov	r0, r4
   25be8:	bl	25758 <g_strcmp0@plt+0xe9fc>
   25bec:	mov	r0, #1
   25bf0:	pop	{r4, r5, r6, pc}
   25bf4:	bl	16d38 <g_source_remove@plt>
   25bf8:	str	r5, [r4, #28]
   25bfc:	mov	r0, #1
   25c00:	pop	{r4, r5, r6, pc}
   25c04:	ldr	r2, [pc, #40]	; 25c34 <g_strcmp0@plt+0xeed8>
   25c08:	mov	r1, #128	; 0x80
   25c0c:	ldr	r0, [pc, #12]	; 25c20 <g_strcmp0@plt+0xeec4>
   25c10:	bl	15ebc <g_log@plt>
   25c14:	mov	r0, #0
   25c18:	pop	{r4, r5, r6, pc}
   25c1c:	andeq	ip, r2, r0, ror #21
   25c20:	andeq	r6, r2, r8, lsr #21
   25c24:	andeq	ip, r2, r0, ror #20
   25c28:	andeq	ip, r2, r0, asr #19
   25c2c:	andeq	r5, r2, r8, asr r7
   25c30:	andeq	ip, r2, r0, lsr #22
   25c34:	andeq	ip, r2, r0, lsl #22
   25c38:	push	{r4, r5, r6, lr}
   25c3c:	sub	sp, sp, #8
   25c40:	ldr	r4, [pc, #108]	; 25cb4 <g_strcmp0@plt+0xef58>
   25c44:	mov	r6, r2
   25c48:	mov	r3, #0
   25c4c:	ldr	ip, [r4]
   25c50:	mov	r2, sp
   25c54:	ldr	r1, [pc, #92]	; 25cb8 <g_strcmp0@plt+0xef5c>
   25c58:	str	ip, [sp, #4]
   25c5c:	bl	166fc <g_object_get@plt>
   25c60:	ldr	r5, [sp]
   25c64:	cmp	r5, #0
   25c68:	bne	25c78 <g_strcmp0@plt+0xef1c>
   25c6c:	ldr	r3, [r6, #28]
   25c70:	cmp	r3, #0
   25c74:	bne	25c90 <g_strcmp0@plt+0xef34>
   25c78:	ldr	r2, [sp, #4]
   25c7c:	ldr	r3, [r4]
   25c80:	cmp	r2, r3
   25c84:	bne	25cb0 <g_strcmp0@plt+0xef54>
   25c88:	add	sp, sp, #8
   25c8c:	pop	{r4, r5, r6, pc}
   25c90:	ldr	r2, [pc, #36]	; 25cbc <g_strcmp0@plt+0xef60>
   25c94:	mov	r1, #128	; 0x80
   25c98:	ldr	r0, [pc, #32]	; 25cc0 <g_strcmp0@plt+0xef64>
   25c9c:	bl	15ebc <g_log@plt>
   25ca0:	mov	r1, r5
   25ca4:	mov	r0, r6
   25ca8:	bl	25b34 <g_strcmp0@plt+0xedd8>
   25cac:	b	25c78 <g_strcmp0@plt+0xef1c>
   25cb0:	bl	165a0 <__stack_chk_fail@plt>
   25cb4:	andeq	ip, r3, r0, asr lr
   25cb8:	andeq	ip, r2, r4, lsl #21
   25cbc:	andeq	ip, r2, r0, asr #22
   25cc0:	andeq	r6, r2, r8, lsr #21
   25cc4:	push	{r4, r5, r6, lr}
   25cc8:	mov	r5, r0
   25ccc:	mov	r6, r1
   25cd0:	mov	r4, r2
   25cd4:	bl	25818 <g_strcmp0@plt+0xeabc>
   25cd8:	cmp	r5, #0
   25cdc:	beq	25d44 <g_strcmp0@plt+0xefe8>
   25ce0:	ldr	r3, [r5]
   25ce4:	cmp	r3, #0
   25ce8:	beq	25cf8 <g_strcmp0@plt+0xef9c>
   25cec:	ldr	r3, [r3]
   25cf0:	cmp	r3, r0
   25cf4:	beq	25d0c <g_strcmp0@plt+0xefb0>
   25cf8:	mov	r1, r0
   25cfc:	mov	r0, r5
   25d00:	bl	167e0 <g_type_check_instance_is_a@plt>
   25d04:	cmp	r0, #0
   25d08:	beq	25d44 <g_strcmp0@plt+0xefe8>
   25d0c:	cmp	r4, #0
   25d10:	beq	25d5c <g_strcmp0@plt+0xf000>
   25d14:	mov	r1, #0
   25d18:	mov	r0, r5
   25d1c:	bl	25b34 <g_strcmp0@plt+0xedd8>
   25d20:	bl	16540 <gtk_image_get_type@plt>
   25d24:	mov	r1, r0
   25d28:	mov	r0, r5
   25d2c:	bl	15e14 <g_type_check_instance_cast@plt>
   25d30:	mov	r2, r6
   25d34:	mov	r1, r4
   25d38:	bl	16b88 <gtk_image_set_from_icon_name@plt>
   25d3c:	mov	r0, #1
   25d40:	pop	{r4, r5, r6, pc}
   25d44:	ldr	r2, [pc, #40]	; 25d74 <g_strcmp0@plt+0xf018>
   25d48:	ldr	r1, [pc, #40]	; 25d78 <g_strcmp0@plt+0xf01c>
   25d4c:	ldr	r0, [pc, #40]	; 25d7c <g_strcmp0@plt+0xf020>
   25d50:	bl	15c58 <g_return_if_fail_warning@plt>
   25d54:	mov	r0, #0
   25d58:	pop	{r4, r5, r6, pc}
   25d5c:	ldr	r2, [pc, #28]	; 25d80 <g_strcmp0@plt+0xf024>
   25d60:	ldr	r1, [pc, #16]	; 25d78 <g_strcmp0@plt+0xf01c>
   25d64:	ldr	r0, [pc, #16]	; 25d7c <g_strcmp0@plt+0xf020>
   25d68:	bl	15c58 <g_return_if_fail_warning@plt>
   25d6c:	mov	r0, r4
   25d70:	pop	{r4, r5, r6, pc}
   25d74:	andeq	ip, r2, r0, ror #20
   25d78:	andeq	ip, r2, r4, ror #19
   25d7c:	andeq	r6, r2, r8, lsr #21
   25d80:	andeq	ip, r2, r0, ror #22
   25d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d88:	sub	sp, sp, #36	; 0x24
   25d8c:	ldr	fp, [pc, #704]	; 26054 <g_strcmp0@plt+0xf2f8>
   25d90:	mov	r7, r0
   25d94:	mov	r5, r1
   25d98:	ldr	r3, [fp]
   25d9c:	mov	r4, r2
   25da0:	str	r3, [sp, #28]
   25da4:	bl	25818 <g_strcmp0@plt+0xeabc>
   25da8:	cmp	r7, #0
   25dac:	beq	25eb4 <g_strcmp0@plt+0xf158>
   25db0:	ldr	r3, [r7]
   25db4:	cmp	r3, #0
   25db8:	beq	25dc8 <g_strcmp0@plt+0xf06c>
   25dbc:	ldr	r3, [r3]
   25dc0:	cmp	r3, r0
   25dc4:	beq	25ddc <g_strcmp0@plt+0xf080>
   25dc8:	mov	r1, r0
   25dcc:	mov	r0, r7
   25dd0:	bl	167e0 <g_type_check_instance_is_a@plt>
   25dd4:	cmp	r0, #0
   25dd8:	beq	25eb4 <g_strcmp0@plt+0xf158>
   25ddc:	cmp	r4, #0
   25de0:	beq	25efc <g_strcmp0@plt+0xf1a0>
   25de4:	mov	r1, r4
   25de8:	ldr	r0, [r7, #24]
   25dec:	bl	16d5c <g_strcmp0@plt>
   25df0:	subs	r8, r0, #0
   25df4:	beq	25ee4 <g_strcmp0@plt+0xf188>
   25df8:	mov	r1, #0
   25dfc:	mov	r0, r7
   25e00:	bl	25b34 <g_strcmp0@plt+0xedd8>
   25e04:	ldr	r0, [r7, #24]
   25e08:	bl	16660 <g_free@plt>
   25e0c:	mov	r0, r4
   25e10:	bl	160f0 <g_strdup@plt>
   25e14:	ldr	r3, [r7, #44]	; 0x2c
   25e18:	cmp	r3, #0
   25e1c:	str	r0, [r7, #24]
   25e20:	beq	25e2c <g_strcmp0@plt+0xf0d0>
   25e24:	mov	r0, r7
   25e28:	bl	25928 <g_strcmp0@plt+0xebcc>
   25e2c:	mov	r3, r4
   25e30:	ldr	r2, [pc, #544]	; 26058 <g_strcmp0@plt+0xf2fc>
   25e34:	mov	r1, #128	; 0x80
   25e38:	ldr	r0, [pc, #540]	; 2605c <g_strcmp0@plt+0xf300>
   25e3c:	bl	15ebc <g_log@plt>
   25e40:	mov	r0, r5
   25e44:	add	r2, sp, #24
   25e48:	add	r1, sp, #20
   25e4c:	bl	169e4 <gtk_icon_size_lookup@plt>
   25e50:	subs	r8, r0, #0
   25e54:	beq	25f14 <g_strcmp0@plt+0xf1b8>
   25e58:	bl	16bd0 <gtk_icon_theme_get_default@plt>
   25e5c:	mov	r3, #0
   25e60:	str	r3, [sp]
   25e64:	ldr	r2, [sp, #20]
   25e68:	mov	r1, r4
   25e6c:	bl	16234 <gtk_icon_theme_load_icon@plt>
   25e70:	subs	r8, r0, #0
   25e74:	beq	26038 <g_strcmp0@plt+0xf2dc>
   25e78:	mov	r0, r4
   25e7c:	ldr	r1, [pc, #476]	; 26060 <g_strcmp0@plt+0xf304>
   25e80:	bl	16d5c <g_strcmp0@plt>
   25e84:	cmp	r0, #0
   25e88:	beq	25ffc <g_strcmp0@plt+0xf2a0>
   25e8c:	ldr	r3, [sp, #20]
   25e90:	mov	r0, r8
   25e94:	cmp	r3, #0
   25e98:	beq	25ea8 <g_strcmp0@plt+0xf14c>
   25e9c:	ldr	r3, [sp, #24]
   25ea0:	cmp	r3, #0
   25ea4:	bne	25f28 <g_strcmp0@plt+0xf1cc>
   25ea8:	bl	16990 <g_object_unref@plt>
   25eac:	mov	r8, #0
   25eb0:	b	25ec8 <g_strcmp0@plt+0xf16c>
   25eb4:	ldr	r2, [pc, #424]	; 26064 <g_strcmp0@plt+0xf308>
   25eb8:	ldr	r1, [pc, #424]	; 26068 <g_strcmp0@plt+0xf30c>
   25ebc:	ldr	r0, [pc, #408]	; 2605c <g_strcmp0@plt+0xf300>
   25ec0:	bl	15c58 <g_return_if_fail_warning@plt>
   25ec4:	mov	r8, #0
   25ec8:	ldr	r2, [sp, #28]
   25ecc:	ldr	r3, [fp]
   25ed0:	mov	r0, r8
   25ed4:	cmp	r2, r3
   25ed8:	bne	26050 <g_strcmp0@plt+0xf2f4>
   25edc:	add	sp, sp, #36	; 0x24
   25ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ee4:	mov	r3, r4
   25ee8:	ldr	r2, [pc, #380]	; 2606c <g_strcmp0@plt+0xf310>
   25eec:	mov	r1, #128	; 0x80
   25ef0:	ldr	r0, [pc, #356]	; 2605c <g_strcmp0@plt+0xf300>
   25ef4:	bl	15ebc <g_log@plt>
   25ef8:	b	25ec8 <g_strcmp0@plt+0xf16c>
   25efc:	ldr	r2, [pc, #364]	; 26070 <g_strcmp0@plt+0xf314>
   25f00:	ldr	r1, [pc, #352]	; 26068 <g_strcmp0@plt+0xf30c>
   25f04:	ldr	r0, [pc, #336]	; 2605c <g_strcmp0@plt+0xf300>
   25f08:	mov	r8, r4
   25f0c:	bl	15c58 <g_return_if_fail_warning@plt>
   25f10:	b	25ec8 <g_strcmp0@plt+0xf16c>
   25f14:	ldr	r2, [pc, #344]	; 26074 <g_strcmp0@plt+0xf318>
   25f18:	mov	r1, #16
   25f1c:	ldr	r0, [pc, #312]	; 2605c <g_strcmp0@plt+0xf300>
   25f20:	bl	15ebc <g_log@plt>
   25f24:	b	25ec8 <g_strcmp0@plt+0xf16c>
   25f28:	bl	16354 <gdk_pixbuf_get_width@plt>
   25f2c:	ldr	r1, [sp, #20]
   25f30:	bl	2629c <g_strcmp0@plt+0xf540>
   25f34:	mov	r4, #0
   25f38:	mov	sl, r0
   25f3c:	mov	r0, r8
   25f40:	bl	16288 <gdk_pixbuf_get_height@plt>
   25f44:	ldr	r1, [sp, #24]
   25f48:	bl	2629c <g_strcmp0@plt+0xf540>
   25f4c:	str	r4, [r7, #32]
   25f50:	mov	r1, #4
   25f54:	mov	r5, r0
   25f58:	str	r0, [sp, #12]
   25f5c:	mul	r0, r0, sl
   25f60:	str	r0, [r7, #36]	; 0x24
   25f64:	bl	15b8c <g_malloc_n@plt>
   25f68:	cmp	r5, r4
   25f6c:	strgt	r4, [sp, #8]
   25f70:	movgt	r9, r4
   25f74:	str	r0, [r7, #44]	; 0x2c
   25f78:	ble	25fe0 <g_strcmp0@plt+0xf284>
   25f7c:	cmp	sl, #0
   25f80:	ble	25fd0 <g_strcmp0@plt+0xf274>
   25f84:	ldr	r3, [sp, #8]
   25f88:	mov	r4, #0
   25f8c:	lsl	r5, r3, #2
   25f90:	ldr	r2, [sp, #24]
   25f94:	ldr	r3, [sp, #20]
   25f98:	str	r2, [sp]
   25f9c:	mov	r0, r8
   25fa0:	mul	r1, r4, r3
   25fa4:	mul	r2, r9, r2
   25fa8:	ldr	r6, [r7, #44]	; 0x2c
   25fac:	bl	16084 <gdk_pixbuf_new_subpixbuf@plt>
   25fb0:	add	r4, r4, #1
   25fb4:	cmp	sl, r4
   25fb8:	str	r0, [r6, r5]
   25fbc:	add	r5, r5, #4
   25fc0:	bne	25f90 <g_strcmp0@plt+0xf234>
   25fc4:	ldr	r3, [sp, #8]
   25fc8:	add	r3, sl, r3
   25fcc:	str	r3, [sp, #8]
   25fd0:	ldr	r3, [sp, #12]
   25fd4:	add	r9, r9, #1
   25fd8:	cmp	r3, r9
   25fdc:	bne	25f7c <g_strcmp0@plt+0xf220>
   25fe0:	mov	r0, r8
   25fe4:	bl	16990 <g_object_unref@plt>
   25fe8:	mov	r0, r7
   25fec:	mov	r1, #1
   25ff0:	bl	25b34 <g_strcmp0@plt+0xedd8>
   25ff4:	mov	r8, #1
   25ff8:	b	25ec8 <g_strcmp0@plt+0xf16c>
   25ffc:	mov	r0, r8
   26000:	bl	16354 <gdk_pixbuf_get_width@plt>
   26004:	cmp	r0, #0
   26008:	add	r3, r0, #7
   2600c:	movge	r3, r0
   26010:	mov	r0, r8
   26014:	asr	r3, r3, #3
   26018:	str	r3, [sp, #20]
   2601c:	bl	16288 <gdk_pixbuf_get_height@plt>
   26020:	add	r3, r0, #3
   26024:	cmp	r0, #0
   26028:	movlt	r0, r3
   2602c:	asr	r3, r0, #2
   26030:	str	r3, [sp, #24]
   26034:	b	25e8c <g_strcmp0@plt+0xf130>
   26038:	mov	r3, r4
   2603c:	ldr	r2, [pc, #52]	; 26078 <g_strcmp0@plt+0xf31c>
   26040:	mov	r1, #128	; 0x80
   26044:	ldr	r0, [pc, #16]	; 2605c <g_strcmp0@plt+0xf300>
   26048:	bl	15ebc <g_log@plt>
   2604c:	b	25ec8 <g_strcmp0@plt+0xf16c>
   26050:	bl	165a0 <__stack_chk_fail@plt>
   26054:	andeq	ip, r3, r0, asr lr
   26058:	muleq	r2, ip, fp
   2605c:	andeq	r6, r2, r8, lsr #21
   26060:	andeq	fp, r2, ip, asr r8
   26064:	andeq	ip, r2, r0, ror #20
   26068:	andeq	ip, r2, r4, lsl #20
   2606c:	andeq	ip, r2, r0, ror fp
   26070:	andeq	ip, r2, r0, ror #22
   26074:	andeq	ip, r2, ip, lsr #23
   26078:	andeq	ip, r2, r8, asr #23
   2607c:	push	{r4, lr}
   26080:	bl	25818 <g_strcmp0@plt+0xeabc>
   26084:	mov	r1, #0
   26088:	pop	{r4, lr}
   2608c:	b	15b68 <g_object_new@plt>
   26090:	subs	r2, r1, #1
   26094:	bxeq	lr
   26098:	bcc	26270 <g_strcmp0@plt+0xf514>
   2609c:	cmp	r0, r1
   260a0:	bls	26254 <g_strcmp0@plt+0xf4f8>
   260a4:	tst	r1, r2
   260a8:	beq	26260 <g_strcmp0@plt+0xf504>
   260ac:	clz	r3, r0
   260b0:	clz	r2, r1
   260b4:	sub	r3, r2, r3
   260b8:	rsbs	r3, r3, #31
   260bc:	addne	r3, r3, r3, lsl #1
   260c0:	mov	r2, #0
   260c4:	addne	pc, pc, r3, lsl #2
   260c8:	nop			; (mov r0, r0)
   260cc:	cmp	r0, r1, lsl #31
   260d0:	adc	r2, r2, r2
   260d4:	subcs	r0, r0, r1, lsl #31
   260d8:	cmp	r0, r1, lsl #30
   260dc:	adc	r2, r2, r2
   260e0:	subcs	r0, r0, r1, lsl #30
   260e4:	cmp	r0, r1, lsl #29
   260e8:	adc	r2, r2, r2
   260ec:	subcs	r0, r0, r1, lsl #29
   260f0:	cmp	r0, r1, lsl #28
   260f4:	adc	r2, r2, r2
   260f8:	subcs	r0, r0, r1, lsl #28
   260fc:	cmp	r0, r1, lsl #27
   26100:	adc	r2, r2, r2
   26104:	subcs	r0, r0, r1, lsl #27
   26108:	cmp	r0, r1, lsl #26
   2610c:	adc	r2, r2, r2
   26110:	subcs	r0, r0, r1, lsl #26
   26114:	cmp	r0, r1, lsl #25
   26118:	adc	r2, r2, r2
   2611c:	subcs	r0, r0, r1, lsl #25
   26120:	cmp	r0, r1, lsl #24
   26124:	adc	r2, r2, r2
   26128:	subcs	r0, r0, r1, lsl #24
   2612c:	cmp	r0, r1, lsl #23
   26130:	adc	r2, r2, r2
   26134:	subcs	r0, r0, r1, lsl #23
   26138:	cmp	r0, r1, lsl #22
   2613c:	adc	r2, r2, r2
   26140:	subcs	r0, r0, r1, lsl #22
   26144:	cmp	r0, r1, lsl #21
   26148:	adc	r2, r2, r2
   2614c:	subcs	r0, r0, r1, lsl #21
   26150:	cmp	r0, r1, lsl #20
   26154:	adc	r2, r2, r2
   26158:	subcs	r0, r0, r1, lsl #20
   2615c:	cmp	r0, r1, lsl #19
   26160:	adc	r2, r2, r2
   26164:	subcs	r0, r0, r1, lsl #19
   26168:	cmp	r0, r1, lsl #18
   2616c:	adc	r2, r2, r2
   26170:	subcs	r0, r0, r1, lsl #18
   26174:	cmp	r0, r1, lsl #17
   26178:	adc	r2, r2, r2
   2617c:	subcs	r0, r0, r1, lsl #17
   26180:	cmp	r0, r1, lsl #16
   26184:	adc	r2, r2, r2
   26188:	subcs	r0, r0, r1, lsl #16
   2618c:	cmp	r0, r1, lsl #15
   26190:	adc	r2, r2, r2
   26194:	subcs	r0, r0, r1, lsl #15
   26198:	cmp	r0, r1, lsl #14
   2619c:	adc	r2, r2, r2
   261a0:	subcs	r0, r0, r1, lsl #14
   261a4:	cmp	r0, r1, lsl #13
   261a8:	adc	r2, r2, r2
   261ac:	subcs	r0, r0, r1, lsl #13
   261b0:	cmp	r0, r1, lsl #12
   261b4:	adc	r2, r2, r2
   261b8:	subcs	r0, r0, r1, lsl #12
   261bc:	cmp	r0, r1, lsl #11
   261c0:	adc	r2, r2, r2
   261c4:	subcs	r0, r0, r1, lsl #11
   261c8:	cmp	r0, r1, lsl #10
   261cc:	adc	r2, r2, r2
   261d0:	subcs	r0, r0, r1, lsl #10
   261d4:	cmp	r0, r1, lsl #9
   261d8:	adc	r2, r2, r2
   261dc:	subcs	r0, r0, r1, lsl #9
   261e0:	cmp	r0, r1, lsl #8
   261e4:	adc	r2, r2, r2
   261e8:	subcs	r0, r0, r1, lsl #8
   261ec:	cmp	r0, r1, lsl #7
   261f0:	adc	r2, r2, r2
   261f4:	subcs	r0, r0, r1, lsl #7
   261f8:	cmp	r0, r1, lsl #6
   261fc:	adc	r2, r2, r2
   26200:	subcs	r0, r0, r1, lsl #6
   26204:	cmp	r0, r1, lsl #5
   26208:	adc	r2, r2, r2
   2620c:	subcs	r0, r0, r1, lsl #5
   26210:	cmp	r0, r1, lsl #4
   26214:	adc	r2, r2, r2
   26218:	subcs	r0, r0, r1, lsl #4
   2621c:	cmp	r0, r1, lsl #3
   26220:	adc	r2, r2, r2
   26224:	subcs	r0, r0, r1, lsl #3
   26228:	cmp	r0, r1, lsl #2
   2622c:	adc	r2, r2, r2
   26230:	subcs	r0, r0, r1, lsl #2
   26234:	cmp	r0, r1, lsl #1
   26238:	adc	r2, r2, r2
   2623c:	subcs	r0, r0, r1, lsl #1
   26240:	cmp	r0, r1
   26244:	adc	r2, r2, r2
   26248:	subcs	r0, r0, r1
   2624c:	mov	r0, r2
   26250:	bx	lr
   26254:	moveq	r0, #1
   26258:	movne	r0, #0
   2625c:	bx	lr
   26260:	clz	r2, r1
   26264:	rsb	r2, r2, #31
   26268:	lsr	r0, r0, r2
   2626c:	bx	lr
   26270:	cmp	r0, #0
   26274:	mvnne	r0, #0
   26278:	b	264dc <g_strcmp0@plt+0xf780>
   2627c:	cmp	r1, #0
   26280:	beq	26270 <g_strcmp0@plt+0xf514>
   26284:	push	{r0, r1, lr}
   26288:	bl	26090 <g_strcmp0@plt+0xf334>
   2628c:	pop	{r1, r2, lr}
   26290:	mul	r3, r2, r0
   26294:	sub	r1, r1, r3
   26298:	bx	lr
   2629c:	cmp	r1, #0
   262a0:	beq	264ac <g_strcmp0@plt+0xf750>
   262a4:	eor	ip, r0, r1
   262a8:	rsbmi	r1, r1, #0
   262ac:	subs	r2, r1, #1
   262b0:	beq	26478 <g_strcmp0@plt+0xf71c>
   262b4:	movs	r3, r0
   262b8:	rsbmi	r3, r0, #0
   262bc:	cmp	r3, r1
   262c0:	bls	26484 <g_strcmp0@plt+0xf728>
   262c4:	tst	r1, r2
   262c8:	beq	26494 <g_strcmp0@plt+0xf738>
   262cc:	clz	r2, r3
   262d0:	clz	r0, r1
   262d4:	sub	r2, r0, r2
   262d8:	rsbs	r2, r2, #31
   262dc:	addne	r2, r2, r2, lsl #1
   262e0:	mov	r0, #0
   262e4:	addne	pc, pc, r2, lsl #2
   262e8:	nop			; (mov r0, r0)
   262ec:	cmp	r3, r1, lsl #31
   262f0:	adc	r0, r0, r0
   262f4:	subcs	r3, r3, r1, lsl #31
   262f8:	cmp	r3, r1, lsl #30
   262fc:	adc	r0, r0, r0
   26300:	subcs	r3, r3, r1, lsl #30
   26304:	cmp	r3, r1, lsl #29
   26308:	adc	r0, r0, r0
   2630c:	subcs	r3, r3, r1, lsl #29
   26310:	cmp	r3, r1, lsl #28
   26314:	adc	r0, r0, r0
   26318:	subcs	r3, r3, r1, lsl #28
   2631c:	cmp	r3, r1, lsl #27
   26320:	adc	r0, r0, r0
   26324:	subcs	r3, r3, r1, lsl #27
   26328:	cmp	r3, r1, lsl #26
   2632c:	adc	r0, r0, r0
   26330:	subcs	r3, r3, r1, lsl #26
   26334:	cmp	r3, r1, lsl #25
   26338:	adc	r0, r0, r0
   2633c:	subcs	r3, r3, r1, lsl #25
   26340:	cmp	r3, r1, lsl #24
   26344:	adc	r0, r0, r0
   26348:	subcs	r3, r3, r1, lsl #24
   2634c:	cmp	r3, r1, lsl #23
   26350:	adc	r0, r0, r0
   26354:	subcs	r3, r3, r1, lsl #23
   26358:	cmp	r3, r1, lsl #22
   2635c:	adc	r0, r0, r0
   26360:	subcs	r3, r3, r1, lsl #22
   26364:	cmp	r3, r1, lsl #21
   26368:	adc	r0, r0, r0
   2636c:	subcs	r3, r3, r1, lsl #21
   26370:	cmp	r3, r1, lsl #20
   26374:	adc	r0, r0, r0
   26378:	subcs	r3, r3, r1, lsl #20
   2637c:	cmp	r3, r1, lsl #19
   26380:	adc	r0, r0, r0
   26384:	subcs	r3, r3, r1, lsl #19
   26388:	cmp	r3, r1, lsl #18
   2638c:	adc	r0, r0, r0
   26390:	subcs	r3, r3, r1, lsl #18
   26394:	cmp	r3, r1, lsl #17
   26398:	adc	r0, r0, r0
   2639c:	subcs	r3, r3, r1, lsl #17
   263a0:	cmp	r3, r1, lsl #16
   263a4:	adc	r0, r0, r0
   263a8:	subcs	r3, r3, r1, lsl #16
   263ac:	cmp	r3, r1, lsl #15
   263b0:	adc	r0, r0, r0
   263b4:	subcs	r3, r3, r1, lsl #15
   263b8:	cmp	r3, r1, lsl #14
   263bc:	adc	r0, r0, r0
   263c0:	subcs	r3, r3, r1, lsl #14
   263c4:	cmp	r3, r1, lsl #13
   263c8:	adc	r0, r0, r0
   263cc:	subcs	r3, r3, r1, lsl #13
   263d0:	cmp	r3, r1, lsl #12
   263d4:	adc	r0, r0, r0
   263d8:	subcs	r3, r3, r1, lsl #12
   263dc:	cmp	r3, r1, lsl #11
   263e0:	adc	r0, r0, r0
   263e4:	subcs	r3, r3, r1, lsl #11
   263e8:	cmp	r3, r1, lsl #10
   263ec:	adc	r0, r0, r0
   263f0:	subcs	r3, r3, r1, lsl #10
   263f4:	cmp	r3, r1, lsl #9
   263f8:	adc	r0, r0, r0
   263fc:	subcs	r3, r3, r1, lsl #9
   26400:	cmp	r3, r1, lsl #8
   26404:	adc	r0, r0, r0
   26408:	subcs	r3, r3, r1, lsl #8
   2640c:	cmp	r3, r1, lsl #7
   26410:	adc	r0, r0, r0
   26414:	subcs	r3, r3, r1, lsl #7
   26418:	cmp	r3, r1, lsl #6
   2641c:	adc	r0, r0, r0
   26420:	subcs	r3, r3, r1, lsl #6
   26424:	cmp	r3, r1, lsl #5
   26428:	adc	r0, r0, r0
   2642c:	subcs	r3, r3, r1, lsl #5
   26430:	cmp	r3, r1, lsl #4
   26434:	adc	r0, r0, r0
   26438:	subcs	r3, r3, r1, lsl #4
   2643c:	cmp	r3, r1, lsl #3
   26440:	adc	r0, r0, r0
   26444:	subcs	r3, r3, r1, lsl #3
   26448:	cmp	r3, r1, lsl #2
   2644c:	adc	r0, r0, r0
   26450:	subcs	r3, r3, r1, lsl #2
   26454:	cmp	r3, r1, lsl #1
   26458:	adc	r0, r0, r0
   2645c:	subcs	r3, r3, r1, lsl #1
   26460:	cmp	r3, r1
   26464:	adc	r0, r0, r0
   26468:	subcs	r3, r3, r1
   2646c:	cmp	ip, #0
   26470:	rsbmi	r0, r0, #0
   26474:	bx	lr
   26478:	teq	ip, r0
   2647c:	rsbmi	r0, r0, #0
   26480:	bx	lr
   26484:	movcc	r0, #0
   26488:	asreq	r0, ip, #31
   2648c:	orreq	r0, r0, #1
   26490:	bx	lr
   26494:	clz	r2, r1
   26498:	rsb	r2, r2, #31
   2649c:	cmp	ip, #0
   264a0:	lsr	r0, r3, r2
   264a4:	rsbmi	r0, r0, #0
   264a8:	bx	lr
   264ac:	cmp	r0, #0
   264b0:	mvngt	r0, #-2147483648	; 0x80000000
   264b4:	movlt	r0, #-2147483648	; 0x80000000
   264b8:	b	264dc <g_strcmp0@plt+0xf780>
   264bc:	cmp	r1, #0
   264c0:	beq	264ac <g_strcmp0@plt+0xf750>
   264c4:	push	{r0, r1, lr}
   264c8:	bl	262a4 <g_strcmp0@plt+0xf548>
   264cc:	pop	{r1, r2, lr}
   264d0:	mul	r3, r2, r0
   264d4:	sub	r1, r1, r3
   264d8:	bx	lr
   264dc:	push	{r1, lr}
   264e0:	mov	r0, #8
   264e4:	bl	167b0 <raise@plt>
   264e8:	pop	{r1, pc}
   264ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   264f0:	mov	r7, r0
   264f4:	ldr	r6, [pc, #72]	; 26544 <g_strcmp0@plt+0xf7e8>
   264f8:	ldr	r5, [pc, #72]	; 26548 <g_strcmp0@plt+0xf7ec>
   264fc:	add	r6, pc, r6
   26500:	add	r5, pc, r5
   26504:	sub	r6, r6, r5
   26508:	mov	r8, r1
   2650c:	mov	r9, r2
   26510:	bl	15b30 <gtk_expander_get_expanded@plt-0x20>
   26514:	asrs	r6, r6, #2
   26518:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2651c:	mov	r4, #0
   26520:	add	r4, r4, #1
   26524:	ldr	r3, [r5], #4
   26528:	mov	r2, r9
   2652c:	mov	r1, r8
   26530:	mov	r0, r7
   26534:	blx	r3
   26538:	cmp	r6, r4
   2653c:	bne	26520 <g_strcmp0@plt+0xf7c4>
   26540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26544:	andeq	r6, r1, r8, asr #18
   26548:	andeq	r6, r1, r0, asr #18
   2654c:	bx	lr

Disassembly of section .fini:

00026550 <.fini>:
   26550:	push	{r3, lr}
   26554:	pop	{r3, pc}
