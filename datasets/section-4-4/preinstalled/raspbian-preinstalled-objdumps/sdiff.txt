
raspbian-preinstalled/sdiff:     file format elf32-littlearm


Disassembly of section .init:

000110f0 <.init>:
   110f0:	push	{r3, lr}
   110f4:	bl	122e8 <sigaltstack@plt+0xe48>
   110f8:	pop	{r3, pc}

Disassembly of section .plt:

000110fc <fdopen@plt-0x14>:
   110fc:	push	{lr}		; (str lr, [sp, #-4]!)
   11100:	ldr	lr, [pc, #4]	; 1110c <fdopen@plt-0x4>
   11104:	add	lr, pc, lr
   11108:	ldr	pc, [lr, #8]!
   1110c:	strdeq	r7, [r1], -r4

00011110 <fdopen@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3828]!	; 0xef4

0001111c <calloc@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3820]!	; 0xeec

00011128 <fputs_unlocked@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3812]!	; 0xee4

00011134 <raise@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3804]!	; 0xedc

00011140 <iconv_close@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3796]!	; 0xed4

0001114c <iconv@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3788]!	; 0xecc

00011158 <strcmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3780]!	; 0xec4

00011164 <wcwidth@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3772]!	; 0xebc

00011170 <memmove@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3764]!	; 0xeb4

0001117c <free@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3756]!	; 0xeac

00011188 <_exit@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3748]!	; 0xea4

00011194 <memcpy@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3740]!	; 0xe9c

000111a0 <execvp@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3732]!	; 0xe94

000111ac <__strtoull_internal@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b8 <mbsinit@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3716]!	; 0xe84

000111c4 <signal@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3708]!	; 0xe7c

000111d0 <fwrite_unlocked@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3700]!	; 0xe74

000111dc <memcmp@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e8 <dcgettext@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3684]!	; 0xe64

000111f4 <strdup@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3676]!	; 0xe5c

00011200 <__stack_chk_fail@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3668]!	; 0xe54

0001120c <unlink@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3660]!	; 0xe4c

00011218 <dup2@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3652]!	; 0xe44

00011224 <realloc@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011230 <textdomain@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3636]!	; 0xe34

0001123c <iswcntrl@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3628]!	; 0xe2c

00011248 <rawmemchr@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3620]!	; 0xe24

00011254 <fflush_unlocked@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011260 <sigaction@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3604]!	; 0xe14

0001126c <fwrite@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3596]!	; 0xe0c

00011278 <waitpid@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3588]!	; 0xe04

00011284 <__ctype_get_mb_cur_max@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011290 <mbrtowc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3572]!	; 0xdf4

0001129c <error@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3564]!	; 0xdec

000112a8 <getenv@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3556]!	; 0xde4

000112b4 <mkstemp64@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3548]!	; 0xddc

000112c0 <puts@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112cc <malloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d8 <iconv_open@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3524]!	; 0xdc4

000112e4 <sigaddset@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3516]!	; 0xdbc

000112f0 <__libc_start_main@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3508]!	; 0xdb4

000112fc <__gmon_start__@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3500]!	; 0xdac

00011308 <getopt_long@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3492]!	; 0xda4

00011314 <kill@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011320 <__ctype_b_loc@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3476]!	; 0xd94

0001132c <exit@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3468]!	; 0xd8c

00011338 <iswspace@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3460]!	; 0xd84

00011344 <strlen@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011350 <strchr@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3444]!	; 0xd74

0001135c <__errno_location@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3436]!	; 0xd6c

00011368 <iswalnum@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3428]!	; 0xd64

00011374 <__sprintf_chk@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011380 <memset@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3412]!	; 0xd54

0001138c <__printf_chk@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3404]!	; 0xd4c

00011398 <write@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3396]!	; 0xd44

000113a4 <__fprintf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3388]!	; 0xd3c

000113b0 <memchr@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3380]!	; 0xd34

000113bc <fclose@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c8 <strnlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3364]!	; 0xd24

000113d4 <pipe@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3356]!	; 0xd1c

000113e0 <__uflow@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3348]!	; 0xd14

000113ec <__overflow@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f8 <setlocale@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3332]!	; 0xd04

00011404 <sigemptyset@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3324]!	; 0xcfc

00011410 <fork@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3316]!	; 0xcf4

0001141c <strrchr@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3308]!	; 0xcec

00011428 <nl_langinfo@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3300]!	; 0xce4

00011434 <fopen64@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #94208	; 0x17000
   1143c:	ldr	pc, [ip, #3292]!	; 0xcdc

00011440 <bindtextdomain@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #94208	; 0x17000
   11448:	ldr	pc, [ip, #3284]!	; 0xcd4

0001144c <fread_unlocked@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #94208	; 0x17000
   11454:	ldr	pc, [ip, #3276]!	; 0xccc

00011458 <__xstat64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #94208	; 0x17000
   11460:	ldr	pc, [ip, #3268]!	; 0xcc4

00011464 <fputs@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #94208	; 0x17000
   1146c:	ldr	pc, [ip, #3260]!	; 0xcbc

00011470 <strncmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #94208	; 0x17000
   11478:	ldr	pc, [ip, #3252]!	; 0xcb4

0001147c <abort@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #94208	; 0x17000
   11484:	ldr	pc, [ip, #3244]!	; 0xcac

00011488 <close@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #94208	; 0x17000
   11490:	ldr	pc, [ip, #3236]!	; 0xca4

00011494 <__assert_fail@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #3228]!	; 0xc9c

000114a0 <sigaltstack@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #3220]!	; 0xc94

Disassembly of section .text:

000114ac <.text>:
   114ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114b0:	mov	r4, r1
   114b4:	ldr	r8, [pc, #3316]	; 121b0 <sigaltstack@plt+0xd10>
   114b8:	ldr	r3, [pc, #3316]	; 121b4 <sigaltstack@plt+0xd14>
   114bc:	sub	sp, sp, #380	; 0x17c
   114c0:	ldr	r1, [r8]
   114c4:	mov	r2, #2
   114c8:	mov	r5, r0
   114cc:	ldr	r0, [r4]
   114d0:	str	r1, [sp, #372]	; 0x174
   114d4:	str	r2, [r3]
   114d8:	bl	13458 <sigaltstack@plt+0x1fb8>
   114dc:	ldr	r1, [pc, #3284]	; 121b8 <sigaltstack@plt+0xd18>
   114e0:	mov	r0, #6
   114e4:	bl	113f8 <setlocale@plt>
   114e8:	ldr	r1, [pc, #3276]	; 121bc <sigaltstack@plt+0xd1c>
   114ec:	ldr	r0, [pc, #3276]	; 121c0 <sigaltstack@plt+0xd20>
   114f0:	bl	11440 <bindtextdomain@plt>
   114f4:	ldr	r0, [pc, #3268]	; 121c0 <sigaltstack@plt+0xd20>
   114f8:	bl	11230 <textdomain@plt>
   114fc:	ldr	r0, [pc, #3264]	; 121c4 <sigaltstack@plt+0xd24>
   11500:	bl	132b8 <sigaltstack@plt+0x1e18>
   11504:	ldr	r0, [pc, #3260]	; 121c8 <sigaltstack@plt+0xd28>
   11508:	bl	112a8 <getenv@plt>
   1150c:	ldr	r7, [pc, #3256]	; 121cc <sigaltstack@plt+0xd2c>
   11510:	ldr	r6, [pc, #3256]	; 121d0 <sigaltstack@plt+0xd30>
   11514:	ldr	r9, [pc, #3256]	; 121d4 <sigaltstack@plt+0xd34>
   11518:	cmp	r0, #0
   1151c:	ldrne	r3, [pc, #3252]	; 121d8 <sigaltstack@plt+0xd38>
   11520:	strne	r0, [r3]
   11524:	ldr	r0, [pc, #3248]	; 121dc <sigaltstack@plt+0xd3c>
   11528:	bl	12488 <sigaltstack@plt+0xfe8>
   1152c:	mov	r3, #0
   11530:	str	r3, [sp]
   11534:	mov	r2, r6
   11538:	mov	r3, r7
   1153c:	mov	r1, r4
   11540:	mov	r0, r5
   11544:	bl	11308 <getopt_long@plt>
   11548:	cmn	r0, #1
   1154c:	beq	11af4 <sigaltstack@plt+0x654>
   11550:	sub	r0, r0, #66	; 0x42
   11554:	cmp	r0, #193	; 0xc1
   11558:	ldrls	pc, [pc, r0, lsl #2]
   1155c:	b	12058 <sigaltstack@plt+0xbb8>
   11560:	andeq	r1, r1, r8, ror #21
   11564:	andeq	r2, r1, r8, asr r0
   11568:	andeq	r2, r1, r8, asr r0
   1156c:	ldrdeq	r1, [r1], -ip
   11570:	andeq	r2, r1, r8, asr r0
   11574:	andeq	r2, r1, r8, asr r0
   11578:	ldrdeq	r1, [r1], -r0
   1157c:			; <UNDEFINED> instruction: 0x00011ab8
   11580:	andeq	r2, r1, r8, asr r0
   11584:	andeq	r2, r1, r8, asr r0
   11588:	andeq	r2, r1, r8, asr r0
   1158c:	andeq	r2, r1, r8, asr r0
   11590:	andeq	r2, r1, r8, asr r0
   11594:	andeq	r2, r1, r8, asr r0
   11598:	andeq	r2, r1, r8, asr r0
   1159c:	andeq	r2, r1, r8, asr r0
   115a0:	andeq	r2, r1, r8, asr r0
   115a4:	andeq	r2, r1, r8, asr r0
   115a8:	andeq	r2, r1, r8, asr r0
   115ac:	andeq	r2, r1, r8, asr r0
   115b0:	andeq	r2, r1, r8, asr r0
   115b4:	andeq	r1, r1, ip, lsr #21
   115b8:	andeq	r2, r1, r8, asr r0
   115bc:	andeq	r2, r1, r8, asr r0
   115c0:	andeq	r1, r1, r0, lsr #21
   115c4:	andeq	r2, r1, r8, asr r0
   115c8:	andeq	r2, r1, r8, asr r0
   115cc:	andeq	r2, r1, r8, asr r0
   115d0:	andeq	r2, r1, r8, asr r0
   115d4:	andeq	r2, r1, r8, asr r0
   115d8:	andeq	r2, r1, r8, asr r0
   115dc:	muleq	r1, r4, sl
   115e0:	andeq	r1, r1, r8, lsl #21
   115e4:	andeq	r2, r1, r8, asr r0
   115e8:	andeq	r1, r1, ip, ror sl
   115ec:	andeq	r2, r1, r8, asr r0
   115f0:	andeq	r2, r1, r8, asr r0
   115f4:	andeq	r2, r1, r8, asr r0
   115f8:	andeq	r2, r1, r8, asr r0
   115fc:	andeq	r1, r1, r0, ror sl
   11600:	andeq	r2, r1, r8, asr r0
   11604:	andeq	r2, r1, r8, asr r0
   11608:	andeq	r1, r1, r4, ror #20
   1160c:	andeq	r2, r1, r8, asr r0
   11610:	andeq	r2, r1, r8, asr r0
   11614:	andeq	r1, r1, r0, asr sl
   11618:	andeq	r2, r1, r8, asr r0
   1161c:	andeq	r2, r1, r8, asr r0
   11620:	andeq	r2, r1, r8, asr r0
   11624:	andeq	r1, r1, r0, asr #20
   11628:	andeq	r1, r1, r4, lsr sl
   1162c:	andeq	r2, r1, r8, asr r0
   11630:	ldrdeq	r1, [r1], -ip
   11634:	andeq	r1, r1, r4, asr #19
   11638:	andeq	r2, r1, r8, asr r0
   1163c:	andeq	r2, r1, r8, asr r0
   11640:	andeq	r2, r1, r8, asr r0
   11644:	andeq	r2, r1, r8, asr r0
   11648:	andeq	r2, r1, r8, asr r0
   1164c:	andeq	r2, r1, r8, asr r0
   11650:	andeq	r2, r1, r8, asr r0
   11654:	andeq	r2, r1, r8, asr r0
   11658:	andeq	r2, r1, r8, asr r0
   1165c:	andeq	r2, r1, r8, asr r0
   11660:	andeq	r2, r1, r8, asr r0
   11664:	andeq	r2, r1, r8, asr r0
   11668:	andeq	r2, r1, r8, asr r0
   1166c:	andeq	r2, r1, r8, asr r0
   11670:	andeq	r2, r1, r8, asr r0
   11674:	andeq	r2, r1, r8, asr r0
   11678:	andeq	r2, r1, r8, asr r0
   1167c:	andeq	r2, r1, r8, asr r0
   11680:	andeq	r2, r1, r8, asr r0
   11684:	andeq	r2, r1, r8, asr r0
   11688:	andeq	r2, r1, r8, asr r0
   1168c:	andeq	r2, r1, r8, asr r0
   11690:	andeq	r2, r1, r8, asr r0
   11694:	andeq	r2, r1, r8, asr r0
   11698:	andeq	r2, r1, r8, asr r0
   1169c:	andeq	r2, r1, r8, asr r0
   116a0:	andeq	r2, r1, r8, asr r0
   116a4:	andeq	r2, r1, r8, asr r0
   116a8:	andeq	r2, r1, r8, asr r0
   116ac:	andeq	r2, r1, r8, asr r0
   116b0:	andeq	r2, r1, r8, asr r0
   116b4:	andeq	r2, r1, r8, asr r0
   116b8:	andeq	r2, r1, r8, asr r0
   116bc:	andeq	r2, r1, r8, asr r0
   116c0:	andeq	r2, r1, r8, asr r0
   116c4:	andeq	r2, r1, r8, asr r0
   116c8:	andeq	r2, r1, r8, asr r0
   116cc:	andeq	r2, r1, r8, asr r0
   116d0:	andeq	r2, r1, r8, asr r0
   116d4:	andeq	r2, r1, r8, asr r0
   116d8:	andeq	r2, r1, r8, asr r0
   116dc:	andeq	r2, r1, r8, asr r0
   116e0:	andeq	r2, r1, r8, asr r0
   116e4:	andeq	r2, r1, r8, asr r0
   116e8:	andeq	r2, r1, r8, asr r0
   116ec:	andeq	r2, r1, r8, asr r0
   116f0:	andeq	r2, r1, r8, asr r0
   116f4:	andeq	r2, r1, r8, asr r0
   116f8:	andeq	r2, r1, r8, asr r0
   116fc:	andeq	r2, r1, r8, asr r0
   11700:	andeq	r2, r1, r8, asr r0
   11704:	andeq	r2, r1, r8, asr r0
   11708:	andeq	r2, r1, r8, asr r0
   1170c:	andeq	r2, r1, r8, asr r0
   11710:	andeq	r2, r1, r8, asr r0
   11714:	andeq	r2, r1, r8, asr r0
   11718:	andeq	r2, r1, r8, asr r0
   1171c:	andeq	r2, r1, r8, asr r0
   11720:	andeq	r2, r1, r8, asr r0
   11724:	andeq	r2, r1, r8, asr r0
   11728:	andeq	r2, r1, r8, asr r0
   1172c:	andeq	r2, r1, r8, asr r0
   11730:	andeq	r2, r1, r8, asr r0
   11734:	andeq	r2, r1, r8, asr r0
   11738:	andeq	r2, r1, r8, asr r0
   1173c:	andeq	r2, r1, r8, asr r0
   11740:	andeq	r2, r1, r8, asr r0
   11744:	andeq	r2, r1, r8, asr r0
   11748:	andeq	r2, r1, r8, asr r0
   1174c:	andeq	r2, r1, r8, asr r0
   11750:	andeq	r2, r1, r8, asr r0
   11754:	andeq	r2, r1, r8, asr r0
   11758:	andeq	r2, r1, r8, asr r0
   1175c:	andeq	r2, r1, r8, asr r0
   11760:	andeq	r2, r1, r8, asr r0
   11764:	andeq	r2, r1, r8, asr r0
   11768:	andeq	r2, r1, r8, asr r0
   1176c:	andeq	r2, r1, r8, asr r0
   11770:	andeq	r2, r1, r8, asr r0
   11774:	andeq	r2, r1, r8, asr r0
   11778:	andeq	r2, r1, r8, asr r0
   1177c:	andeq	r2, r1, r8, asr r0
   11780:	andeq	r2, r1, r8, asr r0
   11784:	andeq	r2, r1, r8, asr r0
   11788:	andeq	r2, r1, r8, asr r0
   1178c:	andeq	r2, r1, r8, asr r0
   11790:	andeq	r2, r1, r8, asr r0
   11794:	andeq	r2, r1, r8, asr r0
   11798:	andeq	r2, r1, r8, asr r0
   1179c:	andeq	r2, r1, r8, asr r0
   117a0:	andeq	r2, r1, r8, asr r0
   117a4:	andeq	r2, r1, r8, asr r0
   117a8:	andeq	r2, r1, r8, asr r0
   117ac:	andeq	r2, r1, r8, asr r0
   117b0:	andeq	r2, r1, r8, asr r0
   117b4:	andeq	r2, r1, r8, asr r0
   117b8:	andeq	r2, r1, r8, asr r0
   117bc:	andeq	r2, r1, r8, asr r0
   117c0:	andeq	r2, r1, r8, asr r0
   117c4:	andeq	r2, r1, r8, asr r0
   117c8:	andeq	r2, r1, r8, asr r0
   117cc:	andeq	r2, r1, r8, asr r0
   117d0:	andeq	r2, r1, r8, asr r0
   117d4:	andeq	r2, r1, r8, asr r0
   117d8:	andeq	r2, r1, r8, asr r0
   117dc:	andeq	r2, r1, r8, asr r0
   117e0:	andeq	r2, r1, r8, asr r0
   117e4:	andeq	r2, r1, r8, asr r0
   117e8:	andeq	r2, r1, r8, asr r0
   117ec:	andeq	r2, r1, r8, asr r0
   117f0:	andeq	r2, r1, r8, asr r0
   117f4:	andeq	r2, r1, r8, asr r0
   117f8:	andeq	r2, r1, r8, asr r0
   117fc:	andeq	r2, r1, r8, asr r0
   11800:	andeq	r2, r1, r8, asr r0
   11804:	andeq	r2, r1, r8, asr r0
   11808:	andeq	r2, r1, r8, asr r0
   1180c:	andeq	r2, r1, r8, asr r0
   11810:	andeq	r2, r1, r8, asr r0
   11814:	andeq	r2, r1, r8, asr r0
   11818:	andeq	r2, r1, r8, asr r0
   1181c:	andeq	r2, r1, r8, asr r0
   11820:	andeq	r2, r1, r8, asr r0
   11824:	andeq	r2, r1, r8, asr r0
   11828:	andeq	r2, r1, r8, asr r0
   1182c:	andeq	r2, r1, r8, asr r0
   11830:	andeq	r2, r1, r8, asr r0
   11834:	andeq	r2, r1, r8, asr r0
   11838:	andeq	r2, r1, r8, asr r0
   1183c:	andeq	r2, r1, r8, asr r0
   11840:	andeq	r2, r1, r8, asr r0
   11844:	andeq	r2, r1, r8, asr r0
   11848:	andeq	r2, r1, r8, asr r0
   1184c:	andeq	r2, r1, r8, asr r0
   11850:	andeq	r2, r1, r8, asr r0
   11854:	andeq	r2, r1, r8, asr r0
   11858:	andeq	r1, r1, ip, lsr #19
   1185c:	andeq	r1, r1, ip, lsl #17
   11860:	andeq	r1, r1, r0, lsl #17
   11864:	andeq	r1, r1, r8, ror #16
   11868:	mov	r0, r9
   1186c:	bl	12488 <sigaltstack@plt+0xfe8>
   11870:	ldr	r3, [pc, #2408]	; 121e0 <sigaltstack@plt+0xd40>
   11874:	ldr	r0, [r3]
   11878:	bl	12488 <sigaltstack@plt+0xfe8>
   1187c:	b	1152c <sigaltstack@plt+0x8c>
   11880:	ldr	r0, [pc, #2396]	; 121e4 <sigaltstack@plt+0xd44>
   11884:	bl	12488 <sigaltstack@plt+0xfe8>
   11888:	b	1152c <sigaltstack@plt+0x8c>
   1188c:	mov	r2, #5
   11890:	ldr	r1, [pc, #2384]	; 121e8 <sigaltstack@plt+0xd48>
   11894:	mov	r0, #0
   11898:	bl	111e8 <dcgettext@plt>
   1189c:	ldr	r3, [pc, #2376]	; 121ec <sigaltstack@plt+0xd4c>
   118a0:	ldr	r6, [pc, #2376]	; 121f0 <sigaltstack@plt+0xd50>
   118a4:	ldr	r4, [pc, #2376]	; 121f4 <sigaltstack@plt+0xd54>
   118a8:	ldr	r2, [r3]
   118ac:	ldr	r5, [pc, #2372]	; 121f8 <sigaltstack@plt+0xd58>
   118b0:	ldr	r9, [pc, #2372]	; 121fc <sigaltstack@plt+0xd5c>
   118b4:	mov	r7, #10
   118b8:	mov	r1, r0
   118bc:	mov	r0, #1
   118c0:	bl	1138c <__printf_chk@plt>
   118c4:	mov	r2, #5
   118c8:	ldr	r1, [pc, #2352]	; 12200 <sigaltstack@plt+0xd60>
   118cc:	mov	r0, #0
   118d0:	bl	111e8 <dcgettext@plt>
   118d4:	ldr	r1, [pc, #2344]	; 12204 <sigaltstack@plt+0xd64>
   118d8:	mov	r2, r0
   118dc:	mov	r0, #1
   118e0:	bl	1138c <__printf_chk@plt>
   118e4:	mov	r2, #5
   118e8:	ldr	r1, [pc, #2328]	; 12208 <sigaltstack@plt+0xd68>
   118ec:	mov	r0, #0
   118f0:	bl	111e8 <dcgettext@plt>
   118f4:	ldr	r1, [r6]
   118f8:	bl	11128 <fputs_unlocked@plt>
   118fc:	mov	r1, r4
   11900:	b	11930 <sigaltstack@plt+0x490>
   11904:	ldr	r0, [r6]
   11908:	ldr	r3, [r0, #20]
   1190c:	ldr	r2, [r0, #24]
   11910:	cmp	r3, r2
   11914:	addcc	r2, r3, #1
   11918:	strcc	r2, [r0, #20]
   1191c:	strbcc	r7, [r3]
   11920:	bcs	11b20 <sigaltstack@plt+0x680>
   11924:	ldr	r1, [r5, #4]!
   11928:	cmp	r1, #0
   1192c:	beq	11964 <sigaltstack@plt+0x4c4>
   11930:	ldrb	r3, [r1]
   11934:	cmp	r3, #0
   11938:	beq	11904 <sigaltstack@plt+0x464>
   1193c:	mov	r2, #5
   11940:	mov	r0, #0
   11944:	bl	111e8 <dcgettext@plt>
   11948:	mov	r1, r9
   1194c:	mov	r2, r0
   11950:	mov	r0, #1
   11954:	bl	1138c <__printf_chk@plt>
   11958:	ldr	r1, [r5, #4]!
   1195c:	cmp	r1, #0
   11960:	bne	11930 <sigaltstack@plt+0x490>
   11964:	mov	r4, r1
   11968:	mov	r2, #5
   1196c:	ldr	r1, [pc, #2200]	; 1220c <sigaltstack@plt+0xd6c>
   11970:	mov	r0, r4
   11974:	bl	111e8 <dcgettext@plt>
   11978:	mov	r2, #5
   1197c:	ldr	r1, [pc, #2188]	; 12210 <sigaltstack@plt+0xd70>
   11980:	mov	r5, r0
   11984:	mov	r0, r4
   11988:	bl	111e8 <dcgettext@plt>
   1198c:	mov	r2, r5
   11990:	ldr	r1, [pc, #2172]	; 12214 <sigaltstack@plt+0xd74>
   11994:	mov	r3, r0
   11998:	mov	r0, #1
   1199c:	bl	1138c <__printf_chk@plt>
   119a0:	bl	14a64 <sigaltstack@plt+0x35c4>
   119a4:	bl	12790 <sigaltstack@plt+0x12f0>
   119a8:	b	11a18 <sigaltstack@plt+0x578>
   119ac:	ldr	r3, [pc, #2148]	; 12218 <sigaltstack@plt+0xd78>
   119b0:	ldr	r2, [pc, #2088]	; 121e0 <sigaltstack@plt+0xd40>
   119b4:	ldr	r3, [r3, #16]
   119b8:	ldr	r2, [r2]
   119bc:	str	r2, [r3]
   119c0:	b	1152c <sigaltstack@plt+0x8c>
   119c4:	ldr	r0, [pc, #2128]	; 1221c <sigaltstack@plt+0xd7c>
   119c8:	bl	12488 <sigaltstack@plt+0xfe8>
   119cc:	ldr	r3, [pc, #2060]	; 121e0 <sigaltstack@plt+0xd40>
   119d0:	ldr	r0, [r3]
   119d4:	bl	12488 <sigaltstack@plt+0xfe8>
   119d8:	b	1152c <sigaltstack@plt+0x8c>
   119dc:	ldr	r2, [pc, #2060]	; 121f0 <sigaltstack@plt+0xd50>
   119e0:	ldr	r3, [pc, #2104]	; 12220 <sigaltstack@plt+0xd80>
   119e4:	ldr	r0, [pc, #2104]	; 12224 <sigaltstack@plt+0xd84>
   119e8:	ldr	r4, [r2]
   119ec:	ldr	r5, [r3]
   119f0:	bl	13d0c <sigaltstack@plt+0x286c>
   119f4:	mov	r2, #0
   119f8:	mov	r3, r5
   119fc:	str	r2, [sp, #4]
   11a00:	ldr	r1, [pc, #2080]	; 12228 <sigaltstack@plt+0xd88>
   11a04:	ldr	r2, [pc, #2080]	; 1222c <sigaltstack@plt+0xd8c>
   11a08:	str	r0, [sp]
   11a0c:	mov	r0, r4
   11a10:	bl	149e4 <sigaltstack@plt+0x3544>
   11a14:	bl	12790 <sigaltstack@plt+0x12f0>
   11a18:	ldr	r2, [sp, #372]	; 0x174
   11a1c:	ldr	r3, [r8]
   11a20:	mov	r0, #0
   11a24:	cmp	r2, r3
   11a28:	bne	120e4 <sigaltstack@plt+0xc44>
   11a2c:	add	sp, sp, #380	; 0x17c
   11a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a34:	ldr	r0, [pc, #2036]	; 12230 <sigaltstack@plt+0xd90>
   11a38:	bl	12488 <sigaltstack@plt+0xfe8>
   11a3c:	b	1152c <sigaltstack@plt+0x8c>
   11a40:	ldr	r3, [pc, #2000]	; 12218 <sigaltstack@plt+0xd78>
   11a44:	mov	r2, #1
   11a48:	strb	r2, [r3, #1009]	; 0x3f1
   11a4c:	b	1152c <sigaltstack@plt+0x8c>
   11a50:	ldr	r2, [pc, #1928]	; 121e0 <sigaltstack@plt+0xd40>
   11a54:	ldr	r3, [pc, #1980]	; 12218 <sigaltstack@plt+0xd78>
   11a58:	ldr	r2, [r2]
   11a5c:	str	r2, [r3, #1016]	; 0x3f8
   11a60:	b	1152c <sigaltstack@plt+0x8c>
   11a64:	ldr	r0, [pc, #1992]	; 12234 <sigaltstack@plt+0xd94>
   11a68:	bl	12488 <sigaltstack@plt+0xfe8>
   11a6c:	b	1152c <sigaltstack@plt+0x8c>
   11a70:	ldr	r0, [pc, #1984]	; 12238 <sigaltstack@plt+0xd98>
   11a74:	bl	12488 <sigaltstack@plt+0xfe8>
   11a78:	b	1152c <sigaltstack@plt+0x8c>
   11a7c:	ldr	r0, [pc, #1976]	; 1223c <sigaltstack@plt+0xd9c>
   11a80:	bl	12488 <sigaltstack@plt+0xfe8>
   11a84:	b	1152c <sigaltstack@plt+0x8c>
   11a88:	ldr	r0, [pc, #1968]	; 12240 <sigaltstack@plt+0xda0>
   11a8c:	bl	12488 <sigaltstack@plt+0xfe8>
   11a90:	b	1152c <sigaltstack@plt+0x8c>
   11a94:	ldr	r0, [pc, #1960]	; 12244 <sigaltstack@plt+0xda4>
   11a98:	bl	12488 <sigaltstack@plt+0xfe8>
   11a9c:	b	1152c <sigaltstack@plt+0x8c>
   11aa0:	ldr	r0, [pc, #1952]	; 12248 <sigaltstack@plt+0xda8>
   11aa4:	bl	12488 <sigaltstack@plt+0xfe8>
   11aa8:	b	1152c <sigaltstack@plt+0x8c>
   11aac:	ldr	r0, [pc, #1944]	; 1224c <sigaltstack@plt+0xdac>
   11ab0:	bl	12488 <sigaltstack@plt+0xfe8>
   11ab4:	b	1152c <sigaltstack@plt+0x8c>
   11ab8:	ldr	r0, [pc, #1936]	; 12250 <sigaltstack@plt+0xdb0>
   11abc:	bl	12488 <sigaltstack@plt+0xfe8>
   11ac0:	ldr	r3, [pc, #1816]	; 121e0 <sigaltstack@plt+0xd40>
   11ac4:	ldr	r0, [r3]
   11ac8:	bl	12488 <sigaltstack@plt+0xfe8>
   11acc:	b	1152c <sigaltstack@plt+0x8c>
   11ad0:	ldr	r0, [pc, #1916]	; 12254 <sigaltstack@plt+0xdb4>
   11ad4:	bl	12488 <sigaltstack@plt+0xfe8>
   11ad8:	b	1152c <sigaltstack@plt+0x8c>
   11adc:	ldr	r0, [pc, #1908]	; 12258 <sigaltstack@plt+0xdb8>
   11ae0:	bl	12488 <sigaltstack@plt+0xfe8>
   11ae4:	b	1152c <sigaltstack@plt+0x8c>
   11ae8:	ldr	r0, [pc, #1900]	; 1225c <sigaltstack@plt+0xdbc>
   11aec:	bl	12488 <sigaltstack@plt+0xfe8>
   11af0:	b	1152c <sigaltstack@plt+0x8c>
   11af4:	ldr	r8, [pc, #1892]	; 12260 <sigaltstack@plt+0xdc0>
   11af8:	ldr	r3, [r8]
   11afc:	sub	r2, r5, r3
   11b00:	cmp	r2, #2
   11b04:	beq	11b2c <sigaltstack@plt+0x68c>
   11b08:	cmp	r2, #1
   11b0c:	ble	12044 <sigaltstack@plt+0xba4>
   11b10:	add	r3, r3, #2
   11b14:	ldr	r0, [pc, #1864]	; 12264 <sigaltstack@plt+0xdc4>
   11b18:	ldr	r1, [r4, r3, lsl #2]
   11b1c:	bl	123c4 <sigaltstack@plt+0xf24>
   11b20:	mov	r1, #10
   11b24:	bl	113ec <__overflow@plt>
   11b28:	b	11924 <sigaltstack@plt+0x484>
   11b2c:	ldr	r2, [pc, #1764]	; 12218 <sigaltstack@plt+0xd78>
   11b30:	ldr	r2, [r2, #1016]	; 0x3f8
   11b34:	cmp	r2, #0
   11b38:	beq	12084 <sigaltstack@plt+0xbe4>
   11b3c:	ldr	r0, [r4, r3, lsl #2]
   11b40:	bl	12428 <sigaltstack@plt+0xf88>
   11b44:	ldr	r3, [r8]
   11b48:	add	r3, r3, #1
   11b4c:	mov	r6, r0
   11b50:	ldr	r0, [r4, r3, lsl #2]
   11b54:	bl	12428 <sigaltstack@plt+0xf88>
   11b58:	and	r3, r6, r0
   11b5c:	ands	r3, r3, #255	; 0xff
   11b60:	mov	r5, r0
   11b64:	str	r3, [sp, #32]
   11b68:	bne	1207c <sigaltstack@plt+0xbdc>
   11b6c:	ldr	r3, [r8]
   11b70:	mov	r1, r6
   11b74:	add	r2, r4, r3, lsl #2
   11b78:	ldr	r0, [r4, r3, lsl #2]
   11b7c:	ldr	r2, [r2, #4]
   11b80:	bl	126c4 <sigaltstack@plt+0x1224>
   11b84:	ldr	r1, [pc, #1756]	; 12268 <sigaltstack@plt+0xdc8>
   11b88:	str	r0, [sp, #36]	; 0x24
   11b8c:	bl	11434 <fopen64@plt>
   11b90:	subs	r3, r0, #0
   11b94:	str	r3, [sp, #48]	; 0x30
   11b98:	beq	12100 <sigaltstack@plt+0xc60>
   11b9c:	ldr	r3, [r8]
   11ba0:	mov	r1, r5
   11ba4:	add	r0, r3, #1
   11ba8:	ldr	r2, [r4, r3, lsl #2]
   11bac:	ldr	r0, [r4, r0, lsl #2]
   11bb0:	bl	126c4 <sigaltstack@plt+0x1224>
   11bb4:	ldr	r1, [pc, #1708]	; 12268 <sigaltstack@plt+0xdc8>
   11bb8:	str	r0, [sp, #40]	; 0x28
   11bbc:	bl	11434 <fopen64@plt>
   11bc0:	subs	r3, r0, #0
   11bc4:	str	r3, [sp, #52]	; 0x34
   11bc8:	beq	120f8 <sigaltstack@plt+0xc58>
   11bcc:	ldr	r3, [pc, #1604]	; 12218 <sigaltstack@plt+0xd78>
   11bd0:	ldr	r1, [pc, #1684]	; 1226c <sigaltstack@plt+0xdcc>
   11bd4:	ldr	r5, [r3, #1016]	; 0x3f8
   11bd8:	mov	r0, r5
   11bdc:	bl	11434 <fopen64@plt>
   11be0:	subs	r3, r0, #0
   11be4:	str	r3, [sp, #28]
   11be8:	beq	120f0 <sigaltstack@plt+0xc50>
   11bec:	ldr	r0, [pc, #1660]	; 12270 <sigaltstack@plt+0xdd0>
   11bf0:	bl	12488 <sigaltstack@plt+0xfe8>
   11bf4:	ldr	r0, [pc, #1656]	; 12274 <sigaltstack@plt+0xdd4>
   11bf8:	bl	12488 <sigaltstack@plt+0xfe8>
   11bfc:	ldr	r3, [r8]
   11c00:	ldr	r9, [pc, #1552]	; 12218 <sigaltstack@plt+0xd78>
   11c04:	ldr	r6, [pc, #1644]	; 12278 <sigaltstack@plt+0xdd8>
   11c08:	ldr	r0, [r4, r3, lsl #2]
   11c0c:	bl	12488 <sigaltstack@plt+0xfe8>
   11c10:	ldr	r3, [r8]
   11c14:	add	r7, r9, #1024	; 0x400
   11c18:	add	r3, r3, #1
   11c1c:	mov	r5, r6
   11c20:	ldr	r0, [r4, r3, lsl #2]
   11c24:	bl	12488 <sigaltstack@plt+0xfe8>
   11c28:	ldr	r4, [sp, #32]
   11c2c:	mov	r0, r4
   11c30:	bl	12488 <sigaltstack@plt+0xfe8>
   11c34:	mov	r3, #268435456	; 0x10000000
   11c38:	mov	r0, r7
   11c3c:	str	r3, [r9, #1152]	; 0x480
   11c40:	bl	11404 <sigemptyset@plt>
   11c44:	add	r4, r4, #1
   11c48:	ldr	r1, [r5], #4
   11c4c:	mov	r0, r7
   11c50:	bl	112e4 <sigaddset@plt>
   11c54:	cmp	r4, #7
   11c58:	bne	11c44 <sigaltstack@plt+0x7a4>
   11c5c:	ldr	r4, [pc, #1560]	; 1227c <sigaltstack@plt+0xddc>
   11c60:	ldr	r7, [pc, #1560]	; 12280 <sigaltstack@plt+0xde0>
   11c64:	mov	r5, #0
   11c68:	ldr	r8, [r6], #4
   11c6c:	mov	r2, r4
   11c70:	mov	r0, r8
   11c74:	mov	r1, #0
   11c78:	bl	11260 <sigaction@plt>
   11c7c:	ldr	r3, [r4]
   11c80:	cmp	r3, #1
   11c84:	beq	11ca0 <sigaltstack@plt+0x800>
   11c88:	ldr	r1, [pc, #1524]	; 12284 <sigaltstack@plt+0xde4>
   11c8c:	mov	r0, r8
   11c90:	sub	r3, r1, #1020	; 0x3fc
   11c94:	mov	r2, #0
   11c98:	str	r7, [r3, #1020]	; 0x3fc
   11c9c:	bl	11260 <sigaction@plt>
   11ca0:	add	r5, r5, #1
   11ca4:	cmp	r5, #7
   11ca8:	add	r4, r4, #140	; 0x8c
   11cac:	bne	11c68 <sigaltstack@plt+0x7c8>
   11cb0:	mov	r1, #0
   11cb4:	mov	r0, #17
   11cb8:	bl	111c4 <signal@plt>
   11cbc:	ldr	r3, [pc, #1364]	; 12218 <sigaltstack@plt+0xd78>
   11cc0:	mov	fp, #1
   11cc4:	add	r0, sp, #108	; 0x6c
   11cc8:	strb	fp, [r3, #1008]	; 0x3f0
   11ccc:	bl	113d4 <pipe@plt>
   11cd0:	cmp	r0, #0
   11cd4:	bne	120e8 <sigaltstack@plt+0xc48>
   11cd8:	bl	11410 <fork@plt>
   11cdc:	ldr	r3, [pc, #1332]	; 12218 <sigaltstack@plt+0xd78>
   11ce0:	str	r0, [r3, #20]
   11ce4:	ldr	r3, [r3, #20]
   11ce8:	cmp	r3, #0
   11cec:	blt	12194 <sigaltstack@plt+0xcf4>
   11cf0:	ldr	r3, [pc, #1312]	; 12218 <sigaltstack@plt+0xd78>
   11cf4:	ldr	r2, [r3, #20]
   11cf8:	cmp	r2, #0
   11cfc:	beq	12108 <sigaltstack@plt+0xc68>
   11d00:	ldr	r0, [sp, #112]	; 0x70
   11d04:	bl	11488 <close@plt>
   11d08:	ldr	r1, [pc, #1368]	; 12268 <sigaltstack@plt+0xdc8>
   11d0c:	ldr	r0, [sp, #108]	; 0x6c
   11d10:	bl	11110 <fdopen@plt>
   11d14:	subs	r3, r0, #0
   11d18:	str	r3, [sp, #44]	; 0x2c
   11d1c:	beq	1219c <sigaltstack@plt+0xcfc>
   11d20:	ldr	r3, [sp, #44]	; 0x2c
   11d24:	ldr	r0, [pc, #1372]	; 12288 <sigaltstack@plt+0xde8>
   11d28:	str	r3, [sp, #92]	; 0x5c
   11d2c:	bl	14ae8 <sigaltstack@plt+0x3648>
   11d30:	mov	r4, #10
   11d34:	ldr	r2, [sp, #48]	; 0x30
   11d38:	str	r2, [sp, #60]	; 0x3c
   11d3c:	mov	r3, r0
   11d40:	ldr	r0, [pc, #1344]	; 12288 <sigaltstack@plt+0xde8>
   11d44:	strb	r4, [r3]
   11d48:	str	r3, [sp, #104]	; 0x68
   11d4c:	str	r3, [sp, #100]	; 0x64
   11d50:	str	r3, [sp, #96]	; 0x60
   11d54:	bl	14ae8 <sigaltstack@plt+0x3648>
   11d58:	str	fp, [sp, #24]
   11d5c:	mov	r3, r0
   11d60:	str	r3, [sp, #72]	; 0x48
   11d64:	str	r3, [sp, #68]	; 0x44
   11d68:	str	r3, [sp, #64]	; 0x40
   11d6c:	strb	r4, [r3]
   11d70:	ldr	r3, [sp, #52]	; 0x34
   11d74:	ldr	r0, [pc, #1292]	; 12288 <sigaltstack@plt+0xde8>
   11d78:	str	r3, [sp, #76]	; 0x4c
   11d7c:	bl	14ae8 <sigaltstack@plt+0x3648>
   11d80:	strb	r4, [r0]
   11d84:	str	r0, [sp, #88]	; 0x58
   11d88:	str	r0, [sp, #84]	; 0x54
   11d8c:	str	r0, [sp, #80]	; 0x50
   11d90:	mov	r8, #256	; 0x100
   11d94:	add	r7, sp, #116	; 0x74
   11d98:	b	11dd0 <sigaltstack@plt+0x930>
   11d9c:	mov	r1, r5
   11da0:	mov	r2, r4
   11da4:	mov	r0, r7
   11da8:	bl	11194 <memcpy@plt>
   11dac:	ldr	r3, [sp, #104]	; 0x68
   11db0:	cmp	r6, r3
   11db4:	bcc	11eac <sigaltstack@plt+0xa0c>
   11db8:	add	r0, sp, #92	; 0x5c
   11dbc:	bl	12960 <sigaltstack@plt+0x14c0>
   11dc0:	cmp	r0, #0
   11dc4:	beq	12020 <sigaltstack@plt+0xb80>
   11dc8:	add	r7, r7, r4
   11dcc:	sub	r8, r8, r4
   11dd0:	ldr	r5, [sp, #96]	; 0x60
   11dd4:	mov	r1, #10
   11dd8:	mov	r0, r5
   11ddc:	bl	11248 <rawmemchr@plt>
   11de0:	sub	r4, r0, r5
   11de4:	cmp	r4, r8
   11de8:	mov	r6, r0
   11dec:	bcc	11d9c <sigaltstack@plt+0x8fc>
   11df0:	ldr	r8, [sp, #32]
   11df4:	ldr	r0, [sp, #48]	; 0x30
   11df8:	bl	126a8 <sigaltstack@plt+0x1208>
   11dfc:	ldr	r0, [sp, #52]	; 0x34
   11e00:	bl	126a8 <sigaltstack@plt+0x1208>
   11e04:	ldr	r0, [sp, #28]
   11e08:	bl	126a8 <sigaltstack@plt+0x1208>
   11e0c:	ldr	r0, [sp, #44]	; 0x2c
   11e10:	bl	126a8 <sigaltstack@plt+0x1208>
   11e14:	b	11e2c <sigaltstack@plt+0x98c>
   11e18:	bl	1135c <__errno_location@plt>
   11e1c:	ldr	r3, [r0]
   11e20:	cmp	r3, #4
   11e24:	bne	12074 <sigaltstack@plt+0xbd4>
   11e28:	bl	125d0 <sigaltstack@plt+0x1130>
   11e2c:	ldr	r3, [pc, #996]	; 12218 <sigaltstack@plt+0xd78>
   11e30:	mov	r2, #0
   11e34:	add	r1, sp, #56	; 0x38
   11e38:	ldr	r0, [r3, #20]
   11e3c:	bl	11278 <waitpid@plt>
   11e40:	cmp	r0, #0
   11e44:	blt	11e18 <sigaltstack@plt+0x978>
   11e48:	ldr	r5, [pc, #968]	; 12218 <sigaltstack@plt+0xd78>
   11e4c:	mov	r4, #0
   11e50:	str	r4, [r5, #20]
   11e54:	ldr	r3, [r5, #24]
   11e58:	cmp	r3, r4
   11e5c:	beq	11e6c <sigaltstack@plt+0x9cc>
   11e60:	ldr	r0, [r5, #24]
   11e64:	bl	1120c <unlink@plt>
   11e68:	str	r4, [r5, #24]
   11e6c:	cmp	r8, #0
   11e70:	beq	12054 <sigaltstack@plt+0xbb4>
   11e74:	ldr	r4, [pc, #924]	; 12218 <sigaltstack@plt+0xd78>
   11e78:	mov	r1, #1
   11e7c:	ldr	r0, [sp, #56]	; 0x38
   11e80:	ldr	r3, [r4, #16]
   11e84:	ldr	r2, [r3]
   11e88:	bl	12a84 <sigaltstack@plt+0x15e4>
   11e8c:	ldrb	r3, [r4, #1008]	; 0x3f0
   11e90:	cmp	r3, #0
   11e94:	beq	11ea0 <sigaltstack@plt+0xa00>
   11e98:	mov	r0, #0
   11e9c:	bl	1256c <sigaltstack@plt+0x10cc>
   11ea0:	bl	125d0 <sigaltstack@plt+0x1130>
   11ea4:	ldrb	r0, [sp, #57]	; 0x39
   11ea8:	bl	1132c <exit@plt>
   11eac:	mov	r5, #0
   11eb0:	add	r6, r6, #1
   11eb4:	strb	r5, [r7, r4]
   11eb8:	str	r6, [sp, #96]	; 0x60
   11ebc:	bl	125d0 <sigaltstack@plt+0x1130>
   11ec0:	ldrb	r3, [sp, #116]	; 0x74
   11ec4:	cmp	r3, #32
   11ec8:	beq	12014 <sigaltstack@plt+0xb74>
   11ecc:	bl	1135c <__errno_location@plt>
   11ed0:	mov	r3, r5
   11ed4:	mov	r2, #10
   11ed8:	add	r1, sp, #56	; 0x38
   11edc:	mov	r9, #0
   11ee0:	mvn	r8, #-2147483648	; 0x80000000
   11ee4:	str	r5, [r0]
   11ee8:	mov	sl, r0
   11eec:	add	r0, sp, #117	; 0x75
   11ef0:	bl	111ac <__strtoull_internal@plt>
   11ef4:	cmp	r1, r9
   11ef8:	cmpeq	r0, r8
   11efc:	mov	r6, r0
   11f00:	bhi	1206c <sigaltstack@plt+0xbcc>
   11f04:	ldr	r3, [sl]
   11f08:	cmp	r3, #0
   11f0c:	bne	1206c <sigaltstack@plt+0xbcc>
   11f10:	ldr	r0, [sp, #56]	; 0x38
   11f14:	ldrb	r2, [r0]
   11f18:	cmp	r2, #44	; 0x2c
   11f1c:	bne	1206c <sigaltstack@plt+0xbcc>
   11f20:	add	r0, r0, #1
   11f24:	mov	r2, #10
   11f28:	add	r1, sp, #56	; 0x38
   11f2c:	bl	111ac <__strtoull_internal@plt>
   11f30:	cmp	r1, r9
   11f34:	cmpeq	r0, r8
   11f38:	mov	r4, r0
   11f3c:	bhi	1206c <sigaltstack@plt+0xbcc>
   11f40:	ldr	r3, [sl]
   11f44:	cmp	r3, #0
   11f48:	bne	1206c <sigaltstack@plt+0xbcc>
   11f4c:	ldr	r3, [sp, #56]	; 0x38
   11f50:	ldrb	r3, [r3]
   11f54:	cmp	r3, #0
   11f58:	bne	1206c <sigaltstack@plt+0xbcc>
   11f5c:	ldrb	r3, [sp, #116]	; 0x74
   11f60:	cmp	r0, r6
   11f64:	movge	r1, r0
   11f68:	movlt	r1, r6
   11f6c:	cmp	r3, #99	; 0x63
   11f70:	bne	11fd4 <sigaltstack@plt+0xb34>
   11f74:	ldr	r3, [pc, #628]	; 121f0 <sigaltstack@plt+0xd50>
   11f78:	add	r0, sp, #92	; 0x5c
   11f7c:	ldr	r2, [r3]
   11f80:	bl	129f0 <sigaltstack@plt+0x1550>
   11f84:	ldr	r2, [sp, #28]
   11f88:	add	r3, sp, #76	; 0x4c
   11f8c:	str	r2, [sp, #16]
   11f90:	ldr	r2, [sp, #40]	; 0x28
   11f94:	str	r3, [sp]
   11f98:	str	r2, [sp, #4]
   11f9c:	str	r4, [sp, #12]
   11fa0:	str	fp, [sp, #8]
   11fa4:	mov	r3, r6
   11fa8:	ldr	r2, [sp, #24]
   11fac:	ldr	r1, [sp, #36]	; 0x24
   11fb0:	add	r0, sp, #60	; 0x3c
   11fb4:	bl	12b10 <sigaltstack@plt+0x1670>
   11fb8:	cmp	r0, #0
   11fbc:	beq	12064 <sigaltstack@plt+0xbc4>
   11fc0:	ldr	r3, [sp, #24]
   11fc4:	add	fp, fp, r4
   11fc8:	add	r3, r3, r6
   11fcc:	str	r3, [sp, #24]
   11fd0:	b	11d90 <sigaltstack@plt+0x8f0>
   11fd4:	cmp	r3, #105	; 0x69
   11fd8:	bne	1206c <sigaltstack@plt+0xbcc>
   11fdc:	ldr	r3, [pc, #564]	; 12218 <sigaltstack@plt+0xd78>
   11fe0:	ldrb	r3, [r3, #1009]	; 0x3f1
   11fe4:	cmp	r3, #0
   11fe8:	beq	12030 <sigaltstack@plt+0xb90>
   11fec:	add	r0, sp, #92	; 0x5c
   11ff0:	bl	1299c <sigaltstack@plt+0x14fc>
   11ff4:	mov	r1, r6
   11ff8:	add	r0, sp, #60	; 0x3c
   11ffc:	ldr	r2, [sp, #28]
   12000:	bl	129f0 <sigaltstack@plt+0x1550>
   12004:	mov	r1, r4
   12008:	add	r0, sp, #76	; 0x4c
   1200c:	bl	1299c <sigaltstack@plt+0x14fc>
   12010:	b	11fc0 <sigaltstack@plt+0xb20>
   12014:	add	r0, sp, #117	; 0x75
   12018:	bl	112c0 <puts@plt>
   1201c:	b	11d90 <sigaltstack@plt+0x8f0>
   12020:	clz	r3, r4
   12024:	lsr	r3, r3, #5
   12028:	str	r3, [sp, #32]
   1202c:	b	11df0 <sigaltstack@plt+0x950>
   12030:	ldr	r3, [pc, #440]	; 121f0 <sigaltstack@plt+0xd50>
   12034:	add	r0, sp, #92	; 0x5c
   12038:	ldr	r2, [r3]
   1203c:	bl	129f0 <sigaltstack@plt+0x1550>
   12040:	b	11ff4 <sigaltstack@plt+0xb54>
   12044:	sub	r5, r5, #-1073741823	; 0xc0000001
   12048:	ldr	r0, [pc, #572]	; 1228c <sigaltstack@plt+0xdec>
   1204c:	ldr	r1, [r4, r5, lsl #2]
   12050:	bl	123c4 <sigaltstack@plt+0xf24>
   12054:	bl	12614 <sigaltstack@plt+0x1174>
   12058:	mov	r1, #0
   1205c:	mov	r0, r1
   12060:	bl	123c4 <sigaltstack@plt+0xf24>
   12064:	mov	r8, r0
   12068:	b	11df4 <sigaltstack@plt+0x954>
   1206c:	add	r0, sp, #116	; 0x74
   12070:	bl	12648 <sigaltstack@plt+0x11a8>
   12074:	ldr	r0, [pc, #532]	; 12290 <sigaltstack@plt+0xdf0>
   12078:	bl	12678 <sigaltstack@plt+0x11d8>
   1207c:	ldr	r0, [pc, #528]	; 12294 <sigaltstack@plt+0xdf4>
   12080:	bl	12648 <sigaltstack@plt+0x11a8>
   12084:	ldr	r3, [pc, #396]	; 12218 <sigaltstack@plt+0xd78>
   12088:	ldrb	r3, [r3, #1009]	; 0x3f1
   1208c:	cmp	r3, #0
   12090:	bne	121a4 <sigaltstack@plt+0xd04>
   12094:	ldr	r0, [pc, #508]	; 12298 <sigaltstack@plt+0xdf8>
   12098:	bl	12488 <sigaltstack@plt+0xfe8>
   1209c:	ldr	r0, [pc, #464]	; 12274 <sigaltstack@plt+0xdd4>
   120a0:	bl	12488 <sigaltstack@plt+0xfe8>
   120a4:	ldr	r3, [r8]
   120a8:	ldr	r0, [r4, r3, lsl #2]
   120ac:	bl	12488 <sigaltstack@plt+0xfe8>
   120b0:	ldr	r3, [r8]
   120b4:	add	r3, r3, #1
   120b8:	ldr	r0, [r4, r3, lsl #2]
   120bc:	bl	12488 <sigaltstack@plt+0xfe8>
   120c0:	mov	r0, #0
   120c4:	bl	12488 <sigaltstack@plt+0xfe8>
   120c8:	ldr	r3, [pc, #328]	; 12218 <sigaltstack@plt+0xd78>
   120cc:	ldr	r4, [r3, #16]
   120d0:	mov	r1, r4
   120d4:	ldr	r0, [r4]
   120d8:	bl	111a0 <execvp@plt>
   120dc:	ldr	r0, [r4]
   120e0:	bl	12678 <sigaltstack@plt+0x11d8>
   120e4:	bl	11200 <__stack_chk_fail@plt>
   120e8:	ldr	r0, [pc, #428]	; 1229c <sigaltstack@plt+0xdfc>
   120ec:	bl	12678 <sigaltstack@plt+0x11d8>
   120f0:	mov	r0, r5
   120f4:	bl	12678 <sigaltstack@plt+0x11d8>
   120f8:	ldr	r0, [sp, #40]	; 0x28
   120fc:	bl	12678 <sigaltstack@plt+0x11d8>
   12100:	ldr	r0, [sp, #36]	; 0x24
   12104:	bl	12678 <sigaltstack@plt+0x11d8>
   12108:	ldr	r3, [r3, #868]	; 0x364
   1210c:	ldr	r4, [pc, #368]	; 12284 <sigaltstack@plt+0xde4>
   12110:	cmp	r3, #1
   12114:	beq	1212c <sigaltstack@plt+0xc8c>
   12118:	sub	r3, r4, #1020	; 0x3fc
   1211c:	mov	r1, r4
   12120:	mov	r0, #2
   12124:	str	fp, [r3, #1020]	; 0x3fc
   12128:	bl	11260 <sigaction@plt>
   1212c:	ldr	ip, [pc, #228]	; 12218 <sigaltstack@plt+0xd78>
   12130:	mov	r3, #0
   12134:	mov	r1, r4
   12138:	mov	r2, r3
   1213c:	mov	r0, #13
   12140:	str	r3, [ip, #1020]	; 0x3fc
   12144:	bl	11260 <sigaction@plt>
   12148:	ldr	r0, [sp, #108]	; 0x6c
   1214c:	bl	11488 <close@plt>
   12150:	ldr	r0, [sp, #112]	; 0x70
   12154:	cmp	r0, #1
   12158:	beq	1216c <sigaltstack@plt+0xccc>
   1215c:	mov	r1, #1
   12160:	bl	11218 <dup2@plt>
   12164:	ldr	r0, [sp, #112]	; 0x70
   12168:	bl	11488 <close@plt>
   1216c:	ldr	r3, [pc, #164]	; 12218 <sigaltstack@plt+0xd78>
   12170:	ldr	r1, [r3, #16]
   12174:	ldr	r0, [r1]
   12178:	bl	111a0 <execvp@plt>
   1217c:	bl	1135c <__errno_location@plt>
   12180:	ldr	r3, [r0]
   12184:	cmp	r3, #2
   12188:	moveq	r0, #127	; 0x7f
   1218c:	movne	r0, #126	; 0x7e
   12190:	bl	11188 <_exit@plt>
   12194:	ldr	r0, [pc, #260]	; 122a0 <sigaltstack@plt+0xe00>
   12198:	bl	12678 <sigaltstack@plt+0x11d8>
   1219c:	ldr	r0, [pc, #256]	; 122a4 <sigaltstack@plt+0xe04>
   121a0:	bl	12678 <sigaltstack@plt+0x11d8>
   121a4:	ldr	r0, [pc, #252]	; 122a8 <sigaltstack@plt+0xe08>
   121a8:	bl	12488 <sigaltstack@plt+0xfe8>
   121ac:	b	12094 <sigaltstack@plt+0xbf4>
   121b0:	andeq	r8, r2, r8, lsl #30
   121b4:	andeq	r9, r2, r4, asr r1
   121b8:	ldrdeq	r7, [r1], -r4
   121bc:	andeq	r7, r1, r8, ror #11
   121c0:	andeq	r7, r1, r0, asr r6
   121c4:	andeq	r2, r1, r0, lsr r5
   121c8:	strdeq	r7, [r1], -ip
   121cc:	andeq	r7, r1, r4, lsr r1
   121d0:	andeq	r7, r1, r4, asr #15
   121d4:			; <UNDEFINED> instruction: 0x000177b8
   121d8:	andeq	r9, r2, ip, asr #2
   121dc:	andeq	r7, r1, r4, lsl #12
   121e0:	andeq	r9, r2, r8, ror r1
   121e4:	andeq	r7, r1, r4, lsr #15
   121e8:	andeq	r7, r1, r0, ror r6
   121ec:	andeq	fp, r2, r8, lsl r6
   121f0:	andeq	r9, r2, r4, ror r1
   121f4:	muleq	r1, ip, r5
   121f8:	andeq	r7, r1, ip, asr #1
   121fc:	andeq	r7, r1, r4, lsr #14
   12200:	muleq	r1, r4, r6
   12204:	ldrdeq	r7, [r1], -r0
   12208:	ldrdeq	r7, [r1], -r8
   1220c:	andeq	r7, r1, ip, lsr #14
   12210:	andeq	r7, r1, r4, asr r7
   12214:	muleq	r1, ip, r7
   12218:	andeq	r9, r2, r0, lsl #3
   1221c:	andeq	r7, r1, r4, ror #12
   12220:	andeq	r9, r2, r0, asr r1
   12224:	andeq	r7, r1, r0, asr #12
   12228:	andeq	r7, r1, ip, asr r6
   1222c:	andeq	r7, r1, ip, asr #12
   12230:	andeq	r7, r1, ip, lsr r6
   12234:	andeq	r7, r1, ip, lsr #12
   12238:	andeq	r7, r1, r4, lsr #12
   1223c:	andeq	r7, r1, r8, lsl r6
   12240:	andeq	r7, r1, r0, lsl r6
   12244:	andeq	r7, r1, ip, lsl #12
   12248:	andeq	r7, r1, ip, ror #12
   1224c:	andeq	r7, r1, r8, ror #12
   12250:	andeq	r7, r1, r8, lsr #12
   12254:	andeq	r7, r1, r0, lsr #12
   12258:	andeq	r7, r1, ip, lsl r6
   1225c:	andeq	r7, r1, r4, lsl r6
   12260:	andeq	r9, r2, r0, ror #2
   12264:	strdeq	r7, [r1], -r4
   12268:	andeq	r7, r1, ip, ror lr
   1226c:	andeq	r7, r1, r0, lsr r5
   12270:	andeq	r7, r1, r4, asr r8
   12274:	andeq	r7, r1, r4, lsr #16
   12278:	strheq	r7, [r1], -r0
   1227c:	muleq	r2, ip, r1
   12280:	muleq	r1, ip, r3
   12284:	andeq	r9, r2, ip, ror r5
   12288:	andeq	r0, r1, r1
   1228c:	ldrdeq	r7, [r1], -r8
   12290:	andeq	r7, r1, ip, lsl #11
   12294:	andeq	r7, r1, r8, lsr #16
   12298:	andeq	r7, r1, r0, lsr #16
   1229c:	andeq	r7, r1, ip, ror #16
   122a0:	andeq	r7, r1, r4, lsl #11
   122a4:	andeq	r7, r1, r4, ror r8
   122a8:	andeq	r7, r1, r8, lsl #16
   122ac:	mov	fp, #0
   122b0:	mov	lr, #0
   122b4:	pop	{r1}		; (ldr r1, [sp], #4)
   122b8:	mov	r2, sp
   122bc:	push	{r2}		; (str r2, [sp, #-4]!)
   122c0:	push	{r0}		; (str r0, [sp, #-4]!)
   122c4:	ldr	ip, [pc, #16]	; 122dc <sigaltstack@plt+0xe3c>
   122c8:	push	{ip}		; (str ip, [sp, #-4]!)
   122cc:	ldr	r0, [pc, #12]	; 122e0 <sigaltstack@plt+0xe40>
   122d0:	ldr	r3, [pc, #12]	; 122e4 <sigaltstack@plt+0xe44>
   122d4:	bl	112f0 <__libc_start_main@plt>
   122d8:	bl	1147c <abort@plt>
   122dc:	andeq	r7, r1, r0, lsr #1
   122e0:	andeq	r1, r1, ip, lsr #9
   122e4:	andeq	r7, r1, r0, asr #32
   122e8:	ldr	r3, [pc, #20]	; 12304 <sigaltstack@plt+0xe64>
   122ec:	ldr	r2, [pc, #20]	; 12308 <sigaltstack@plt+0xe68>
   122f0:	add	r3, pc, r3
   122f4:	ldr	r2, [r3, r2]
   122f8:	cmp	r2, #0
   122fc:	bxeq	lr
   12300:	b	112fc <__gmon_start__@plt>
   12304:	andeq	r6, r1, r8, lsl #26
   12308:	andeq	r0, r0, r0, asr #2
   1230c:	ldr	r0, [pc, #24]	; 1232c <sigaltstack@plt+0xe8c>
   12310:	ldr	r3, [pc, #24]	; 12330 <sigaltstack@plt+0xe90>
   12314:	cmp	r3, r0
   12318:	bxeq	lr
   1231c:	ldr	r3, [pc, #16]	; 12334 <sigaltstack@plt+0xe94>
   12320:	cmp	r3, #0
   12324:	bxeq	lr
   12328:	bx	r3
   1232c:	andeq	r9, r2, r8, asr r1
   12330:	andeq	r9, r2, r8, asr r1
   12334:	andeq	r0, r0, r0
   12338:	ldr	r0, [pc, #36]	; 12364 <sigaltstack@plt+0xec4>
   1233c:	ldr	r1, [pc, #36]	; 12368 <sigaltstack@plt+0xec8>
   12340:	sub	r1, r1, r0
   12344:	asr	r1, r1, #2
   12348:	add	r1, r1, r1, lsr #31
   1234c:	asrs	r1, r1, #1
   12350:	bxeq	lr
   12354:	ldr	r3, [pc, #16]	; 1236c <sigaltstack@plt+0xecc>
   12358:	cmp	r3, #0
   1235c:	bxeq	lr
   12360:	bx	r3
   12364:	andeq	r9, r2, r8, asr r1
   12368:	andeq	r9, r2, r8, asr r1
   1236c:	andeq	r0, r0, r0
   12370:	push	{r4, lr}
   12374:	ldr	r4, [pc, #24]	; 12394 <sigaltstack@plt+0xef4>
   12378:	ldrb	r3, [r4]
   1237c:	cmp	r3, #0
   12380:	popne	{r4, pc}
   12384:	bl	1230c <sigaltstack@plt+0xe6c>
   12388:	mov	r3, #1
   1238c:	strb	r3, [r4]
   12390:	pop	{r4, pc}
   12394:	andeq	r9, r2, ip, ror r1
   12398:	b	12338 <sigaltstack@plt+0xe98>
   1239c:	cmp	r0, #2
   123a0:	ldr	r3, [pc, #24]	; 123c0 <sigaltstack@plt+0xf20>
   123a4:	beq	123b0 <sigaltstack@plt+0xf10>
   123a8:	str	r0, [r3, #4]
   123ac:	bx	lr
   123b0:	ldrb	r2, [r3]
   123b4:	cmp	r2, #0
   123b8:	streq	r0, [r3, #4]
   123bc:	bx	lr
   123c0:	andeq	r9, r2, r0, lsl #3
   123c4:	cmp	r0, #0
   123c8:	push	{r4, lr}
   123cc:	beq	123f8 <sigaltstack@plt+0xf58>
   123d0:	mov	r4, r1
   123d4:	mov	r2, #5
   123d8:	mov	r1, r0
   123dc:	mov	r0, #0
   123e0:	bl	111e8 <dcgettext@plt>
   123e4:	mov	r1, #0
   123e8:	mov	r3, r4
   123ec:	mov	r2, r0
   123f0:	mov	r0, r1
   123f4:	bl	1129c <error@plt>
   123f8:	mov	r2, #5
   123fc:	ldr	r1, [pc, #28]	; 12420 <sigaltstack@plt+0xf80>
   12400:	mov	r0, #0
   12404:	bl	111e8 <dcgettext@plt>
   12408:	ldr	r3, [pc, #20]	; 12424 <sigaltstack@plt+0xf84>
   1240c:	mov	r1, #0
   12410:	ldr	r3, [r3]
   12414:	mov	r2, r0
   12418:	mov	r0, #2
   1241c:	bl	1129c <error@plt>
   12420:	andeq	r7, r1, r4, lsl #5
   12424:	andeq	fp, r2, r8, lsl r6
   12428:	push	{r4, lr}
   1242c:	sub	sp, sp, #112	; 0x70
   12430:	ldr	r4, [pc, #76]	; 12484 <sigaltstack@plt+0xfe4>
   12434:	mov	r1, r0
   12438:	mov	r2, sp
   1243c:	ldr	r3, [r4]
   12440:	mov	r0, #3
   12444:	str	r3, [sp, #108]	; 0x6c
   12448:	bl	11458 <__xstat64@plt>
   1244c:	ldr	r2, [sp, #108]	; 0x6c
   12450:	ldr	r3, [r4]
   12454:	cmp	r0, #0
   12458:	movne	r0, #0
   1245c:	ldreq	r0, [sp, #16]
   12460:	andeq	r0, r0, #61440	; 0xf000
   12464:	subeq	r0, r0, #16384	; 0x4000
   12468:	clzeq	r0, r0
   1246c:	lsreq	r0, r0, #5
   12470:	cmp	r2, r3
   12474:	bne	12480 <sigaltstack@plt+0xfe0>
   12478:	add	sp, sp, #112	; 0x70
   1247c:	pop	{r4, pc}
   12480:	bl	11200 <__stack_chk_fail@plt>
   12484:	andeq	r8, r2, r8, lsl #30
   12488:	push	{r4, r5, r6, lr}
   1248c:	mov	r5, r0
   12490:	ldr	r4, [pc, #100]	; 124fc <sigaltstack@plt+0x105c>
   12494:	ldr	r3, [r4, #8]
   12498:	ldr	r2, [r4, #12]
   1249c:	cmp	r3, r2
   124a0:	beq	124b8 <sigaltstack@plt+0x1018>
   124a4:	ldr	r0, [r4, #16]
   124a8:	add	r2, r3, #1
   124ac:	str	r5, [r0, r3, lsl #2]
   124b0:	str	r2, [r4, #8]
   124b4:	pop	{r4, r5, r6, pc}
   124b8:	cmp	r3, #0
   124bc:	beq	124e8 <sigaltstack@plt+0x1048>
   124c0:	cmn	r3, #-268435454	; 0xf0000002
   124c4:	lslls	r1, r3, #3
   124c8:	lslls	r3, r3, #1
   124cc:	strls	r3, [r4, #12]
   124d0:	bhi	124f8 <sigaltstack@plt+0x1058>
   124d4:	ldr	r0, [r4, #16]
   124d8:	bl	14b44 <sigaltstack@plt+0x36a4>
   124dc:	ldr	r3, [r4, #8]
   124e0:	str	r0, [r4, #16]
   124e4:	b	124a8 <sigaltstack@plt+0x1008>
   124e8:	mov	r3, #16
   124ec:	str	r3, [r4, #12]
   124f0:	mov	r1, #64	; 0x40
   124f4:	b	124d4 <sigaltstack@plt+0x1034>
   124f8:	bl	14d30 <sigaltstack@plt+0x3890>
   124fc:	andeq	r9, r2, r0, lsl #3
   12500:	ldr	r3, [pc, #32]	; 12528 <sigaltstack@plt+0x1088>
   12504:	push	{r4, lr}
   12508:	mov	r2, #5
   1250c:	ldr	r4, [r3]
   12510:	ldr	r1, [pc, #20]	; 1252c <sigaltstack@plt+0x108c>
   12514:	mov	r0, #0
   12518:	bl	111e8 <dcgettext@plt>
   1251c:	mov	r1, r4
   12520:	pop	{r4, lr}
   12524:	b	11464 <fputs@plt>
   12528:	andeq	r9, r2, r8, ror #2
   1252c:	andeq	r7, r1, ip, lsr #5
   12530:	push	{r4, lr}
   12534:	ldr	r4, [pc, #44]	; 12568 <sigaltstack@plt+0x10c8>
   12538:	ldr	r3, [r4, #20]
   1253c:	cmp	r3, #0
   12540:	ble	12550 <sigaltstack@plt+0x10b0>
   12544:	ldr	r0, [r4, #20]
   12548:	mov	r1, #13
   1254c:	bl	11314 <kill@plt>
   12550:	ldr	r3, [r4, #24]
   12554:	cmp	r3, #0
   12558:	popeq	{r4, pc}
   1255c:	ldr	r0, [r4, #24]
   12560:	pop	{r4, lr}
   12564:	b	1120c <unlink@plt>
   12568:	andeq	r9, r2, r0, lsl #3
   1256c:	push	{r4, r5, r6, r7, r8, lr}
   12570:	mov	r6, r0
   12574:	ldr	r4, [pc, #76]	; 125c8 <sigaltstack@plt+0x1128>
   12578:	ldr	r5, [pc, #76]	; 125cc <sigaltstack@plt+0x112c>
   1257c:	add	r7, r4, #980	; 0x3d4
   12580:	b	125a0 <sigaltstack@plt+0x1100>
   12584:	ldr	r3, [r5]
   12588:	cmp	r6, r3
   1258c:	beq	125a8 <sigaltstack@plt+0x1108>
   12590:	add	r4, r4, #140	; 0x8c
   12594:	cmp	r4, r7
   12598:	add	r5, r5, #4
   1259c:	popeq	{r4, r5, r6, r7, r8, pc}
   125a0:	cmp	r6, #0
   125a4:	bne	12584 <sigaltstack@plt+0x10e4>
   125a8:	ldr	r3, [r4]
   125ac:	mov	r1, r4
   125b0:	cmp	r3, #1
   125b4:	mov	r2, #0
   125b8:	beq	12590 <sigaltstack@plt+0x10f0>
   125bc:	ldr	r0, [r5]
   125c0:	bl	11260 <sigaction@plt>
   125c4:	b	12590 <sigaltstack@plt+0x10f0>
   125c8:	muleq	r2, ip, r1
   125cc:	strheq	r7, [r1], -r0
   125d0:	push	{r4, r5, r6, lr}
   125d4:	ldr	r5, [pc, #52]	; 12610 <sigaltstack@plt+0x1170>
   125d8:	ldr	r4, [r5, #4]
   125dc:	cmp	r4, #0
   125e0:	popeq	{r4, r5, r6, pc}
   125e4:	mov	r0, #0
   125e8:	bl	12530 <sigaltstack@plt+0x1090>
   125ec:	ldrb	r3, [r5, #1008]	; 0x3f0
   125f0:	cmp	r3, #0
   125f4:	beq	12600 <sigaltstack@plt+0x1160>
   125f8:	mov	r0, r4
   125fc:	bl	1256c <sigaltstack@plt+0x10cc>
   12600:	mov	r0, r4
   12604:	bl	11134 <raise@plt>
   12608:	mov	r0, #2
   1260c:	bl	1132c <exit@plt>
   12610:	andeq	r9, r2, r0, lsl #3
   12614:	push	{r4, lr}
   12618:	mov	r0, #0
   1261c:	bl	12530 <sigaltstack@plt+0x1090>
   12620:	ldr	r3, [pc, #28]	; 12644 <sigaltstack@plt+0x11a4>
   12624:	ldrb	r3, [r3, #1008]	; 0x3f0
   12628:	cmp	r3, #0
   1262c:	beq	12638 <sigaltstack@plt+0x1198>
   12630:	mov	r0, #0
   12634:	bl	1256c <sigaltstack@plt+0x10cc>
   12638:	bl	125d0 <sigaltstack@plt+0x1130>
   1263c:	mov	r0, #2
   12640:	bl	1132c <exit@plt>
   12644:	andeq	r9, r2, r0, lsl #3
   12648:	mov	r1, r0
   1264c:	push	{r4, lr}
   12650:	mov	r2, #5
   12654:	mov	r0, #0
   12658:	bl	111e8 <dcgettext@plt>
   1265c:	mov	r1, #0
   12660:	ldr	r2, [pc, #12]	; 12674 <sigaltstack@plt+0x11d4>
   12664:	mov	r3, r0
   12668:	mov	r0, r1
   1266c:	bl	1129c <error@plt>
   12670:	bl	12614 <sigaltstack@plt+0x1174>
   12674:	andeq	r7, r1, ip, lsl r4
   12678:	push	{r4, lr}
   1267c:	mov	r5, r0
   12680:	bl	1135c <__errno_location@plt>
   12684:	ldr	r4, [r0]
   12688:	bl	125d0 <sigaltstack@plt+0x1130>
   1268c:	mov	r3, r5
   12690:	mov	r1, r4
   12694:	ldr	r2, [pc, #8]	; 126a4 <sigaltstack@plt+0x1204>
   12698:	mov	r0, #0
   1269c:	bl	1129c <error@plt>
   126a0:	bl	12614 <sigaltstack@plt+0x1174>
   126a4:	andeq	r7, r1, ip, lsl r4
   126a8:	push	{r4, lr}
   126ac:	bl	113bc <fclose@plt>
   126b0:	cmp	r0, #0
   126b4:	popeq	{r4, pc}
   126b8:	ldr	r0, [pc]	; 126c0 <sigaltstack@plt+0x1220>
   126bc:	bl	12678 <sigaltstack@plt+0x11d8>
   126c0:	andeq	r7, r1, r0, lsr #8
   126c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126c8:	mov	r4, r1
   126cc:	ldr	r1, [pc, #180]	; 12788 <sigaltstack@plt+0x12e8>
   126d0:	mov	r6, r2
   126d4:	mov	r5, r0
   126d8:	bl	11158 <strcmp@plt>
   126dc:	cmp	r0, #0
   126e0:	beq	12780 <sigaltstack@plt+0x12e0>
   126e4:	cmp	r4, #0
   126e8:	moveq	r9, r5
   126ec:	beq	12778 <sigaltstack@plt+0x12d8>
   126f0:	mov	r0, r6
   126f4:	bl	133a8 <sigaltstack@plt+0x1f08>
   126f8:	mov	r7, r0
   126fc:	mov	r0, r5
   12700:	bl	11344 <strlen@plt>
   12704:	mov	r6, r0
   12708:	mov	r0, r7
   1270c:	bl	133f8 <sigaltstack@plt+0x1f58>
   12710:	mov	r8, r0
   12714:	mov	r0, r5
   12718:	bl	133a8 <sigaltstack@plt+0x1f08>
   1271c:	ldrb	r4, [r0]
   12720:	cmp	r4, #0
   12724:	beq	12738 <sigaltstack@plt+0x1298>
   12728:	add	r3, r5, r6
   1272c:	ldrb	r4, [r3, #-1]
   12730:	subs	r4, r4, #47	; 0x2f
   12734:	movne	r4, #1
   12738:	add	r4, r4, r6
   1273c:	add	sl, r8, r4
   12740:	add	r0, sl, #1
   12744:	bl	14ae8 <sigaltstack@plt+0x3648>
   12748:	mov	r2, r6
   1274c:	mov	r1, r5
   12750:	mov	r9, r0
   12754:	bl	11194 <memcpy@plt>
   12758:	mov	r3, #47	; 0x2f
   1275c:	strb	r3, [r9, r6]
   12760:	add	r0, r9, r4
   12764:	mov	r2, r8
   12768:	mov	r1, r7
   1276c:	bl	11194 <memcpy@plt>
   12770:	mov	r3, #0
   12774:	strb	r3, [r9, sl]
   12778:	mov	r0, r9
   1277c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12780:	ldr	r0, [pc, #4]	; 1278c <sigaltstack@plt+0x12ec>
   12784:	bl	12648 <sigaltstack@plt+0x11a8>
   12788:	andeq	r7, r1, r8, lsr #8
   1278c:	andeq	r7, r1, ip, lsr #8
   12790:	ldr	r3, [pc, #56]	; 127d0 <sigaltstack@plt+0x1330>
   12794:	push	{r4, lr}
   12798:	ldr	r0, [r3]
   1279c:	ldr	r3, [r0]
   127a0:	ands	r4, r3, #32
   127a4:	bne	127c8 <sigaltstack@plt+0x1328>
   127a8:	bl	113bc <fclose@plt>
   127ac:	cmp	r0, #0
   127b0:	popeq	{r4, pc}
   127b4:	mov	r2, #5
   127b8:	ldr	r1, [pc, #20]	; 127d4 <sigaltstack@plt+0x1334>
   127bc:	mov	r0, r4
   127c0:	bl	111e8 <dcgettext@plt>
   127c4:	bl	12678 <sigaltstack@plt+0x11d8>
   127c8:	ldr	r0, [pc, #8]	; 127d8 <sigaltstack@plt+0x1338>
   127cc:	bl	12648 <sigaltstack@plt+0x11a8>
   127d0:	andeq	r9, r2, r4, ror r1
   127d4:	andeq	r7, r1, r8, ror #8
   127d8:	andeq	r7, r1, r8, asr r4
   127dc:	push	{r4, lr}
   127e0:	mov	r4, r1
   127e4:	mov	r3, r2
   127e8:	mov	r1, #1
   127ec:	mov	r2, r4
   127f0:	bl	111d0 <fwrite_unlocked@plt>
   127f4:	cmp	r4, r0
   127f8:	popeq	{r4, pc}
   127fc:	mov	r2, #5
   12800:	ldr	r1, [pc, #8]	; 12810 <sigaltstack@plt+0x1370>
   12804:	mov	r0, #0
   12808:	bl	111e8 <dcgettext@plt>
   1280c:	bl	12678 <sigaltstack@plt+0x11d8>
   12810:	andeq	r7, r1, r8, asr r4
   12814:	push	{r4, lr}
   12818:	mov	r2, #5
   1281c:	ldr	r1, [pc, #8]	; 1282c <sigaltstack@plt+0x138c>
   12820:	mov	r0, #0
   12824:	bl	111e8 <dcgettext@plt>
   12828:	bl	12678 <sigaltstack@plt+0x11d8>
   1282c:	andeq	r7, r1, r8, ror r4
   12830:	push	{r4, lr}
   12834:	ldr	r4, [pc, #100]	; 128a0 <sigaltstack@plt+0x1400>
   12838:	ldr	r0, [r4]
   1283c:	ldr	r1, [r0, #8]
   12840:	ldr	r3, [r0, #4]
   12844:	cmp	r1, r3
   12848:	bls	1286c <sigaltstack@plt+0x13cc>
   1284c:	add	r2, r3, #1
   12850:	str	r2, [r0, #4]
   12854:	ldrb	r3, [r3]
   12858:	cmp	r3, #10
   1285c:	beq	1287c <sigaltstack@plt+0x13dc>
   12860:	mov	r3, r2
   12864:	cmp	r1, r3
   12868:	bhi	1284c <sigaltstack@plt+0x13ac>
   1286c:	bl	113e0 <__uflow@plt>
   12870:	cmp	r0, #10
   12874:	cmnne	r0, #1
   12878:	bne	12890 <sigaltstack@plt+0x13f0>
   1287c:	ldr	r3, [r4]
   12880:	ldr	r3, [r3]
   12884:	tst	r3, #32
   12888:	popeq	{r4, pc}
   1288c:	bl	12814 <sigaltstack@plt+0x1374>
   12890:	ldr	r0, [r4]
   12894:	ldr	r2, [r0, #4]
   12898:	ldr	r1, [r0, #8]
   1289c:	b	12860 <sigaltstack@plt+0x13c0>
   128a0:	andeq	r9, r2, r0, ror r1
   128a4:	push	{r4, r5, r6, lr}
   128a8:	bl	11320 <__ctype_b_loc@plt>
   128ac:	ldr	r4, [pc, #96]	; 12914 <sigaltstack@plt+0x1474>
   128b0:	mov	r5, r0
   128b4:	b	128e4 <sigaltstack@plt+0x1444>
   128b8:	add	r2, r3, #1
   128bc:	str	r2, [r0, #4]
   128c0:	ldrb	r0, [r3]
   128c4:	ldr	r2, [r5]
   128c8:	lsl	r3, r0, #1
   128cc:	ldrh	r3, [r2, r3]
   128d0:	tst	r3, #8192	; 0x2000
   128d4:	beq	12900 <sigaltstack@plt+0x1460>
   128d8:	cmp	r0, #10
   128dc:	beq	12900 <sigaltstack@plt+0x1460>
   128e0:	bl	125d0 <sigaltstack@plt+0x1130>
   128e4:	ldr	r0, [r4]
   128e8:	ldr	r3, [r0, #4]
   128ec:	ldr	r2, [r0, #8]
   128f0:	cmp	r3, r2
   128f4:	bcc	128b8 <sigaltstack@plt+0x1418>
   128f8:	bl	113e0 <__uflow@plt>
   128fc:	b	128c4 <sigaltstack@plt+0x1424>
   12900:	ldr	r3, [r4]
   12904:	ldr	r3, [r3]
   12908:	tst	r3, #32
   1290c:	popeq	{r4, r5, r6, pc}
   12910:	bl	12814 <sigaltstack@plt+0x1374>
   12914:	andeq	r9, r2, r0, ror r1
   12918:	mov	r3, r1
   1291c:	push	{r4, lr}
   12920:	mov	r2, #65536	; 0x10000
   12924:	mov	r4, r1
   12928:	mov	r1, #1
   1292c:	bl	1144c <fread_unlocked@plt>
   12930:	subs	r3, r0, #0
   12934:	bne	12944 <sigaltstack@plt+0x14a4>
   12938:	ldr	r2, [r4]
   1293c:	tst	r2, #32
   12940:	bne	1294c <sigaltstack@plt+0x14ac>
   12944:	mov	r0, r3
   12948:	pop	{r4, pc}
   1294c:	mov	r2, #5
   12950:	ldr	r1, [pc, #4]	; 1295c <sigaltstack@plt+0x14bc>
   12954:	bl	111e8 <dcgettext@plt>
   12958:	bl	12678 <sigaltstack@plt+0x11d8>
   1295c:	andeq	r7, r1, r8, ror r4
   12960:	push	{r4, r5, r6, lr}
   12964:	mov	r4, r0
   12968:	ldr	r1, [r0]
   1296c:	ldr	r0, [r0, #8]
   12970:	bl	12918 <sigaltstack@plt+0x1478>
   12974:	ldr	r3, [r4, #8]
   12978:	mov	r2, #10
   1297c:	str	r3, [r4, #4]
   12980:	add	r1, r3, r0
   12984:	mov	r5, r0
   12988:	str	r1, [r4, #12]
   1298c:	strb	r2, [r3, r0]
   12990:	bl	125d0 <sigaltstack@plt+0x1130>
   12994:	mov	r0, r5
   12998:	pop	{r4, r5, r6, pc}
   1299c:	push	{r4, r5, r6, lr}
   129a0:	subs	r5, r1, #0
   129a4:	popeq	{r4, r5, r6, pc}
   129a8:	mov	r4, r0
   129ac:	ldr	r6, [r4, #12]
   129b0:	ldr	r0, [r4, #4]
   129b4:	mov	r1, #10
   129b8:	bl	11248 <rawmemchr@plt>
   129bc:	cmp	r0, r6
   129c0:	add	r3, r0, #1
   129c4:	str	r0, [r4, #4]
   129c8:	beq	129dc <sigaltstack@plt+0x153c>
   129cc:	subs	r5, r5, #1
   129d0:	str	r3, [r4, #4]
   129d4:	bne	129b0 <sigaltstack@plt+0x1510>
   129d8:	pop	{r4, r5, r6, pc}
   129dc:	mov	r0, r4
   129e0:	bl	12960 <sigaltstack@plt+0x14c0>
   129e4:	cmp	r0, #0
   129e8:	bne	129ac <sigaltstack@plt+0x150c>
   129ec:	pop	{r4, r5, r6, pc}
   129f0:	push	{r4, r5, r6, r7, r8, lr}
   129f4:	mov	r5, r0
   129f8:	ldr	r0, [r0, #4]
   129fc:	subs	r4, r1, #0
   12a00:	mov	r8, r2
   12a04:	moveq	r7, r0
   12a08:	moveq	r1, r4
   12a0c:	beq	12a44 <sigaltstack@plt+0x15a4>
   12a10:	ldr	r6, [r5, #12]
   12a14:	mov	r7, r0
   12a18:	mov	r1, #10
   12a1c:	bl	11248 <rawmemchr@plt>
   12a20:	mov	r3, r0
   12a24:	cmp	r0, r6
   12a28:	str	r3, [r5, #4]
   12a2c:	add	r0, r0, #1
   12a30:	beq	12a54 <sigaltstack@plt+0x15b4>
   12a34:	subs	r4, r4, #1
   12a38:	str	r0, [r5, #4]
   12a3c:	bne	12a18 <sigaltstack@plt+0x1578>
   12a40:	sub	r1, r0, r7
   12a44:	mov	r2, r8
   12a48:	mov	r0, r7
   12a4c:	pop	{r4, r5, r6, r7, r8, lr}
   12a50:	b	127dc <sigaltstack@plt+0x133c>
   12a54:	sub	r1, r6, r7
   12a58:	mov	r0, r7
   12a5c:	mov	r2, r8
   12a60:	bl	127dc <sigaltstack@plt+0x133c>
   12a64:	mov	r0, r5
   12a68:	bl	12960 <sigaltstack@plt+0x14c0>
   12a6c:	cmp	r0, #0
   12a70:	popeq	{r4, r5, r6, r7, r8, pc}
   12a74:	ldr	r7, [r5, #4]
   12a78:	ldr	r6, [r5, #12]
   12a7c:	mov	r0, r7
   12a80:	b	12a18 <sigaltstack@plt+0x1578>
   12a84:	tst	r0, #127	; 0x7f
   12a88:	push	{r4, r5, lr}
   12a8c:	sub	sp, sp, #12
   12a90:	bne	12aac <sigaltstack@plt+0x160c>
   12a94:	asr	r0, r0, #8
   12a98:	uxtb	r4, r0
   12a9c:	cmp	r4, r1
   12aa0:	bgt	12ae0 <sigaltstack@plt+0x1640>
   12aa4:	add	sp, sp, #12
   12aa8:	pop	{r4, r5, pc}
   12aac:	ldr	r1, [pc, #76]	; 12b00 <sigaltstack@plt+0x1660>
   12ab0:	mvn	r4, #-2147483648	; 0x80000000
   12ab4:	mov	r5, r2
   12ab8:	mov	r0, #0
   12abc:	mov	r2, #5
   12ac0:	bl	111e8 <dcgettext@plt>
   12ac4:	mov	r1, #0
   12ac8:	mov	r3, r5
   12acc:	str	r4, [sp]
   12ad0:	mov	r2, r0
   12ad4:	mov	r0, r1
   12ad8:	bl	1129c <error@plt>
   12adc:	bl	12614 <sigaltstack@plt+0x1174>
   12ae0:	cmp	r4, #126	; 0x7e
   12ae4:	ldreq	r1, [pc, #24]	; 12b04 <sigaltstack@plt+0x1664>
   12ae8:	beq	12ab4 <sigaltstack@plt+0x1614>
   12aec:	ldr	r3, [pc, #20]	; 12b08 <sigaltstack@plt+0x1668>
   12af0:	cmp	r4, #127	; 0x7f
   12af4:	ldr	r1, [pc, #16]	; 12b0c <sigaltstack@plt+0x166c>
   12af8:	moveq	r1, r3
   12afc:	b	12ab4 <sigaltstack@plt+0x1614>
   12b00:	andeq	r7, r1, r4, lsl #9
   12b04:	ldrdeq	r7, [r1], -r4
   12b08:	andeq	r7, r1, r4, lsl #10
   12b0c:	andeq	r7, r1, r4, lsr #9
   12b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b14:	sub	sp, sp, #65536	; 0x10000
   12b18:	sub	sp, sp, #60	; 0x3c
   12b1c:	add	ip, sp, #65536	; 0x10000
   12b20:	add	ip, ip, #96	; 0x60
   12b24:	ldr	sl, [pc, #1720]	; 131e4 <sigaltstack@plt+0x1d44>
   12b28:	ldr	ip, [ip]
   12b2c:	str	r2, [sp, #24]
   12b30:	str	ip, [sp, #16]
   12b34:	add	ip, sp, #65536	; 0x10000
   12b38:	add	ip, ip, #100	; 0x64
   12b3c:	add	r2, sp, #65536	; 0x10000
   12b40:	ldr	ip, [ip]
   12b44:	ldr	r4, [pc, #1692]	; 131e8 <sigaltstack@plt+0x1d48>
   12b48:	str	ip, [sp, #28]
   12b4c:	add	ip, sp, #65536	; 0x10000
   12b50:	add	ip, ip, #112	; 0x70
   12b54:	ldr	r8, [pc, #1680]	; 131ec <sigaltstack@plt+0x1d4c>
   12b58:	ldr	r9, [ip]
   12b5c:	str	r3, [sp, #8]
   12b60:	add	r2, r2, #52	; 0x34
   12b64:	ldr	r3, [sl]
   12b68:	str	r0, [sp, #12]
   12b6c:	str	r1, [sp, #20]
   12b70:	str	r3, [r2]
   12b74:	mov	fp, #37	; 0x25
   12b78:	ldr	r0, [r4]
   12b7c:	ldr	r3, [r0, #20]
   12b80:	ldr	r2, [r0, #24]
   12b84:	cmp	r2, r3
   12b88:	addhi	r2, r3, #1
   12b8c:	strhi	r2, [r0, #20]
   12b90:	strbhi	fp, [r3]
   12b94:	bls	12f4c <sigaltstack@plt+0x1aac>
   12b98:	ldr	r0, [r4]
   12b9c:	bl	11254 <fflush_unlocked@plt>
   12ba0:	subs	r6, r0, #0
   12ba4:	bne	12f5c <sigaltstack@plt+0x1abc>
   12ba8:	bl	128a4 <sigaltstack@plt+0x1404>
   12bac:	cmp	r0, #101	; 0x65
   12bb0:	mov	r7, r0
   12bb4:	beq	12d78 <sigaltstack@plt+0x18d8>
   12bb8:	bgt	12c08 <sigaltstack@plt+0x1768>
   12bbc:	cmp	r0, #10
   12bc0:	beq	12d60 <sigaltstack@plt+0x18c0>
   12bc4:	bgt	12d68 <sigaltstack@plt+0x18c8>
   12bc8:	cmn	r0, #1
   12bcc:	bne	12d5c <sigaltstack@plt+0x18bc>
   12bd0:	ldr	r3, [r8]
   12bd4:	ldr	r3, [r3]
   12bd8:	tst	r3, #16
   12bdc:	beq	12d5c <sigaltstack@plt+0x18bc>
   12be0:	add	r3, sp, #65536	; 0x10000
   12be4:	add	r3, r3, #52	; 0x34
   12be8:	ldr	r2, [r3]
   12bec:	ldr	r3, [sl]
   12bf0:	mov	r0, r6
   12bf4:	cmp	r2, r3
   12bf8:	bne	131a4 <sigaltstack@plt+0x1d04>
   12bfc:	add	sp, sp, #65536	; 0x10000
   12c00:	add	sp, sp, #60	; 0x3c
   12c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c08:	cmp	r0, #115	; 0x73
   12c0c:	bgt	12d54 <sigaltstack@plt+0x18b4>
   12c10:	cmp	r0, #113	; 0x71
   12c14:	bge	12c20 <sigaltstack@plt+0x1780>
   12c18:	cmp	r0, #108	; 0x6c
   12c1c:	bne	12d5c <sigaltstack@plt+0x18bc>
   12c20:	bl	128a4 <sigaltstack@plt+0x1404>
   12c24:	cmp	r0, #10
   12c28:	bne	12f20 <sigaltstack@plt+0x1a80>
   12c2c:	sub	r7, r7, #49	; 0x31
   12c30:	cmp	r7, #69	; 0x45
   12c34:	ldrls	pc, [pc, r7, lsl #2]
   12c38:	b	12fe8 <sigaltstack@plt+0x1b48>
   12c3c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12c40:	andeq	r2, r1, r0, ror pc
   12c44:	andeq	r2, r1, r8, ror #31
   12c48:	andeq	r2, r1, r8, ror #31
   12c4c:	andeq	r2, r1, r8, ror #31
   12c50:	andeq	r2, r1, r8, ror #31
   12c54:	andeq	r2, r1, r8, ror #31
   12c58:	andeq	r2, r1, r8, ror #31
   12c5c:	andeq	r2, r1, r8, ror #31
   12c60:	andeq	r2, r1, r8, ror #31
   12c64:	andeq	r2, r1, r8, ror #31
   12c68:	andeq	r2, r1, r8, ror #31
   12c6c:	andeq	r2, r1, r8, ror #31
   12c70:	andeq	r2, r1, r8, ror #31
   12c74:	andeq	r2, r1, r8, ror #31
   12c78:	andeq	r2, r1, r8, ror #31
   12c7c:	andeq	r2, r1, r8, ror #31
   12c80:	andeq	r2, r1, r8, ror #31
   12c84:	andeq	r2, r1, r8, ror #31
   12c88:	andeq	r2, r1, r8, ror #31
   12c8c:	andeq	r2, r1, r8, ror #31
   12c90:	andeq	r2, r1, r8, ror #31
   12c94:	andeq	r2, r1, r8, ror #31
   12c98:	andeq	r2, r1, r8, ror #31
   12c9c:	andeq	r2, r1, r8, ror #31
   12ca0:	andeq	r2, r1, r8, ror #31
   12ca4:	andeq	r2, r1, r8, ror #31
   12ca8:	andeq	r2, r1, r8, ror #31
   12cac:	andeq	r2, r1, r8, ror #31
   12cb0:	andeq	r2, r1, r8, ror #31
   12cb4:	andeq	r2, r1, r8, ror #31
   12cb8:	andeq	r2, r1, r8, ror #31
   12cbc:	andeq	r2, r1, r8, ror #31
   12cc0:	andeq	r2, r1, r8, ror #31
   12cc4:	andeq	r2, r1, r8, ror #31
   12cc8:	andeq	r2, r1, r8, ror #31
   12ccc:	andeq	r2, r1, r8, ror #31
   12cd0:	andeq	r2, r1, r8, ror #31
   12cd4:	andeq	r2, r1, r8, ror #31
   12cd8:	andeq	r2, r1, r8, ror #31
   12cdc:	andeq	r2, r1, r8, ror #31
   12ce0:	andeq	r2, r1, r8, ror #31
   12ce4:	andeq	r2, r1, r8, ror #31
   12ce8:	andeq	r2, r1, r8, ror #31
   12cec:	andeq	r2, r1, r8, ror #31
   12cf0:	andeq	r2, r1, r8, ror #31
   12cf4:	andeq	r2, r1, r8, ror #31
   12cf8:	andeq	r2, r1, r8, ror #31
   12cfc:	andeq	r2, r1, r8, ror #31
   12d00:	andeq	r2, r1, r8, ror #31
   12d04:	andeq	r2, r1, r8, ror #31
   12d08:	andeq	r2, r1, r8, ror #31
   12d0c:	muleq	r1, r4, sp
   12d10:	andeq	r2, r1, r8, ror #31
   12d14:	andeq	r2, r1, r8, ror #31
   12d18:	andeq	r2, r1, r8, ror #31
   12d1c:	andeq	r2, r1, r8, ror #31
   12d20:	andeq	r2, r1, r8, ror #31
   12d24:	andeq	r2, r1, r8, ror #31
   12d28:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12d2c:	andeq	r2, r1, r8, ror #31
   12d30:	andeq	r2, r1, r8, ror #31
   12d34:	andeq	r2, r1, r8, ror #31
   12d38:	andeq	r2, r1, r8, ror #31
   12d3c:	andeq	r3, r1, r8, lsr #3
   12d40:	andeq	r2, r1, r0, ror pc
   12d44:	ldrdeq	r2, [r1], -r8
   12d48:	andeq	r2, r1, r8, ror #31
   12d4c:	andeq	r2, r1, r8, ror #31
   12d50:	andeq	r2, r1, r8, asr #31
   12d54:	cmp	r0, #118	; 0x76
   12d58:	beq	12c20 <sigaltstack@plt+0x1780>
   12d5c:	bl	12830 <sigaltstack@plt+0x1390>
   12d60:	bl	12500 <sigaltstack@plt+0x1060>
   12d64:	b	12b78 <sigaltstack@plt+0x16d8>
   12d68:	sub	r3, r0, #49	; 0x31
   12d6c:	cmp	r3, #1
   12d70:	bhi	12d5c <sigaltstack@plt+0x18bc>
   12d74:	b	12c20 <sigaltstack@plt+0x1780>
   12d78:	bl	128a4 <sigaltstack@plt+0x1404>
   12d7c:	cmp	r0, #98	; 0x62
   12d80:	mov	r5, r0
   12d84:	beq	12f3c <sigaltstack@plt+0x1a9c>
   12d88:	bgt	12f08 <sigaltstack@plt+0x1a68>
   12d8c:	cmp	r0, #10
   12d90:	bne	12f2c <sigaltstack@plt+0x1a8c>
   12d94:	ldr	r4, [pc, #1108]	; 131f0 <sigaltstack@plt+0x1d50>
   12d98:	ldr	r3, [r4, #24]
   12d9c:	cmp	r3, #0
   12da0:	beq	12ff0 <sigaltstack@plt+0x1b50>
   12da4:	ldr	r0, [r4, #24]
   12da8:	ldr	r1, [pc, #1092]	; 131f4 <sigaltstack@plt+0x1d54>
   12dac:	bl	11434 <fopen64@plt>
   12db0:	str	r0, [r4, #1012]	; 0x3f4
   12db4:	cmp	r0, #0
   12db8:	beq	1319c <sigaltstack@plt+0x1cfc>
   12dbc:	cmp	r5, #98	; 0x62
   12dc0:	beq	12ddc <sigaltstack@plt+0x193c>
   12dc4:	ble	13078 <sigaltstack@plt+0x1bd8>
   12dc8:	cmp	r5, #100	; 0x64
   12dcc:	bne	13090 <sigaltstack@plt+0x1bf0>
   12dd0:	ldr	r3, [sp, #8]
   12dd4:	cmp	r3, #0
   12dd8:	bne	130fc <sigaltstack@plt+0x1c5c>
   12ddc:	mov	r2, r0
   12de0:	ldr	r1, [sp, #8]
   12de4:	ldr	r0, [sp, #12]
   12de8:	bl	129f0 <sigaltstack@plt+0x1550>
   12dec:	cmp	r5, #98	; 0x62
   12df0:	beq	13070 <sigaltstack@plt+0x1bd0>
   12df4:	ble	13068 <sigaltstack@plt+0x1bc8>
   12df8:	cmp	r5, #100	; 0x64
   12dfc:	bne	13048 <sigaltstack@plt+0x1ba8>
   12e00:	add	r3, sp, #65536	; 0x10000
   12e04:	add	r3, r3, #108	; 0x6c
   12e08:	ldr	r2, [r4, #1012]	; 0x3f4
   12e0c:	ldr	r3, [r3]
   12e10:	cmp	r3, #0
   12e14:	bne	1309c <sigaltstack@plt+0x1bfc>
   12e18:	add	r3, sp, #65536	; 0x10000
   12e1c:	add	r3, r3, #108	; 0x6c
   12e20:	ldr	r0, [sp, #16]
   12e24:	ldr	r1, [r3]
   12e28:	bl	129f0 <sigaltstack@plt+0x1550>
   12e2c:	ldr	r6, [pc, #964]	; 131f8 <sigaltstack@plt+0x1d58>
   12e30:	ldr	r0, [r4, #1012]	; 0x3f4
   12e34:	bl	126a8 <sigaltstack@plt+0x1208>
   12e38:	mov	r3, #1
   12e3c:	strb	r3, [r4]
   12e40:	bl	125d0 <sigaltstack@plt+0x1130>
   12e44:	ldr	r3, [r6]
   12e48:	ldr	r2, [r4, #24]
   12e4c:	str	r3, [sp, #40]	; 0x28
   12e50:	mov	r3, #0
   12e54:	strd	r2, [sp, #44]	; 0x2c
   12e58:	bl	11410 <fork@plt>
   12e5c:	subs	r5, r0, #0
   12e60:	beq	131c0 <sigaltstack@plt+0x1d20>
   12e64:	bge	12e80 <sigaltstack@plt+0x19e0>
   12e68:	b	131b8 <sigaltstack@plt+0x1d18>
   12e6c:	bl	1135c <__errno_location@plt>
   12e70:	ldr	r3, [r0]
   12e74:	cmp	r3, #4
   12e78:	bne	13194 <sigaltstack@plt+0x1cf4>
   12e7c:	bl	125d0 <sigaltstack@plt+0x1130>
   12e80:	mov	r2, #0
   12e84:	add	r1, sp, #36	; 0x24
   12e88:	mov	r0, r5
   12e8c:	bl	11278 <waitpid@plt>
   12e90:	cmp	r0, #0
   12e94:	blt	12e6c <sigaltstack@plt+0x19cc>
   12e98:	mov	r3, #0
   12e9c:	mov	r1, r3
   12ea0:	ldr	r2, [r6]
   12ea4:	ldr	r0, [sp, #36]	; 0x24
   12ea8:	strb	r3, [r4]
   12eac:	bl	12a84 <sigaltstack@plt+0x15e4>
   12eb0:	ldr	r5, [r4, #24]
   12eb4:	ldr	r1, [pc, #832]	; 131fc <sigaltstack@plt+0x1d5c>
   12eb8:	mov	r0, r5
   12ebc:	bl	11434 <fopen64@plt>
   12ec0:	subs	r1, r0, #0
   12ec4:	strne	r1, [r4, #1012]	; 0x3f4
   12ec8:	bne	12ee8 <sigaltstack@plt+0x1a48>
   12ecc:	b	131b0 <sigaltstack@plt+0x1d10>
   12ed0:	bl	125d0 <sigaltstack@plt+0x1130>
   12ed4:	mov	r1, r5
   12ed8:	mov	r2, r9
   12edc:	add	r0, sp, #52	; 0x34
   12ee0:	bl	127dc <sigaltstack@plt+0x133c>
   12ee4:	ldr	r1, [r4, #1012]	; 0x3f4
   12ee8:	add	r0, sp, #52	; 0x34
   12eec:	bl	12918 <sigaltstack@plt+0x1478>
   12ef0:	subs	r5, r0, #0
   12ef4:	bne	12ed0 <sigaltstack@plt+0x1a30>
   12ef8:	ldr	r0, [r4, #1012]	; 0x3f4
   12efc:	bl	126a8 <sigaltstack@plt+0x1208>
   12f00:	mov	r6, #1
   12f04:	b	12be0 <sigaltstack@plt+0x1740>
   12f08:	cmp	r0, #108	; 0x6c
   12f0c:	beq	12f3c <sigaltstack@plt+0x1a9c>
   12f10:	cmp	r0, #114	; 0x72
   12f14:	beq	12f3c <sigaltstack@plt+0x1a9c>
   12f18:	cmp	r0, #100	; 0x64
   12f1c:	beq	12f3c <sigaltstack@plt+0x1a9c>
   12f20:	bl	12500 <sigaltstack@plt+0x1060>
   12f24:	bl	12830 <sigaltstack@plt+0x1390>
   12f28:	b	12b78 <sigaltstack@plt+0x16d8>
   12f2c:	blt	12f20 <sigaltstack@plt+0x1a80>
   12f30:	sub	r3, r0, #49	; 0x31
   12f34:	cmp	r3, #1
   12f38:	bhi	12f20 <sigaltstack@plt+0x1a80>
   12f3c:	bl	128a4 <sigaltstack@plt+0x1404>
   12f40:	cmp	r0, #10
   12f44:	beq	12d94 <sigaltstack@plt+0x18f4>
   12f48:	b	12f20 <sigaltstack@plt+0x1a80>
   12f4c:	mov	r1, #37	; 0x25
   12f50:	bl	113ec <__overflow@plt>
   12f54:	cmp	r0, #37	; 0x25
   12f58:	beq	12b98 <sigaltstack@plt+0x16f8>
   12f5c:	mov	r2, #5
   12f60:	ldr	r1, [pc, #664]	; 13200 <sigaltstack@plt+0x1d60>
   12f64:	mov	r0, #0
   12f68:	bl	111e8 <dcgettext@plt>
   12f6c:	bl	12678 <sigaltstack@plt+0x11d8>
   12f70:	add	r3, sp, #65536	; 0x10000
   12f74:	add	r3, r3, #108	; 0x6c
   12f78:	mov	r2, r9
   12f7c:	ldr	r1, [r3]
   12f80:	ldr	r0, [sp, #16]
   12f84:	bl	129f0 <sigaltstack@plt+0x1550>
   12f88:	ldr	r1, [sp, #8]
   12f8c:	ldr	r0, [sp, #12]
   12f90:	bl	1299c <sigaltstack@plt+0x14fc>
   12f94:	mov	r6, #1
   12f98:	b	12be0 <sigaltstack@plt+0x1740>
   12f9c:	mov	r2, r9
   12fa0:	ldr	r1, [sp, #8]
   12fa4:	ldr	r0, [sp, #12]
   12fa8:	bl	129f0 <sigaltstack@plt+0x1550>
   12fac:	add	r3, sp, #65536	; 0x10000
   12fb0:	add	r3, r3, #108	; 0x6c
   12fb4:	ldr	r0, [sp, #16]
   12fb8:	ldr	r1, [r3]
   12fbc:	bl	1299c <sigaltstack@plt+0x14fc>
   12fc0:	mov	r6, #1
   12fc4:	b	12be0 <sigaltstack@plt+0x1740>
   12fc8:	ldr	r2, [pc, #544]	; 131f0 <sigaltstack@plt+0x1d50>
   12fcc:	mov	r3, #0
   12fd0:	strb	r3, [r2, #1009]	; 0x3f1
   12fd4:	b	12b74 <sigaltstack@plt+0x16d4>
   12fd8:	ldr	r2, [pc, #528]	; 131f0 <sigaltstack@plt+0x1d50>
   12fdc:	mov	r3, #1
   12fe0:	strb	r3, [r2, #1009]	; 0x3f1
   12fe4:	b	12b74 <sigaltstack@plt+0x16d4>
   12fe8:	bl	12500 <sigaltstack@plt+0x1060>
   12fec:	b	12b74 <sigaltstack@plt+0x16d4>
   12ff0:	ldr	r0, [pc, #524]	; 13204 <sigaltstack@plt+0x1d64>
   12ff4:	bl	112a8 <getenv@plt>
   12ff8:	subs	r7, r0, #0
   12ffc:	beq	13138 <sigaltstack@plt+0x1c98>
   13000:	bl	11344 <strlen@plt>
   13004:	add	r0, r0, #13
   13008:	bl	14ae8 <sigaltstack@plt+0x3648>
   1300c:	ldr	r3, [pc, #500]	; 13208 <sigaltstack@plt+0x1d68>
   13010:	mvn	r2, #0
   13014:	mov	r1, #1
   13018:	str	r7, [sp]
   1301c:	mov	r6, r0
   13020:	bl	11374 <__sprintf_chk@plt>
   13024:	mov	r0, r6
   13028:	bl	112b4 <mkstemp64@plt>
   1302c:	cmp	r0, #0
   13030:	blt	13130 <sigaltstack@plt+0x1c90>
   13034:	ldr	r1, [pc, #440]	; 131f4 <sigaltstack@plt+0x1d54>
   13038:	str	r6, [r4, #24]
   1303c:	bl	11110 <fdopen@plt>
   13040:	str	r0, [r4, #1012]	; 0x3f4
   13044:	b	12db4 <sigaltstack@plt+0x1914>
   13048:	cmp	r5, #114	; 0x72
   1304c:	beq	13070 <sigaltstack@plt+0x1bd0>
   13050:	add	r3, sp, #65536	; 0x10000
   13054:	add	r3, r3, #108	; 0x6c
   13058:	ldr	r0, [sp, #16]
   1305c:	ldr	r1, [r3]
   13060:	bl	1299c <sigaltstack@plt+0x14fc>
   13064:	b	12e2c <sigaltstack@plt+0x198c>
   13068:	cmp	r5, #50	; 0x32
   1306c:	bne	13050 <sigaltstack@plt+0x1bb0>
   13070:	ldr	r2, [r4, #1012]	; 0x3f4
   13074:	b	12e18 <sigaltstack@plt+0x1978>
   13078:	cmp	r5, #49	; 0x31
   1307c:	beq	12ddc <sigaltstack@plt+0x193c>
   13080:	ldr	r1, [sp, #8]
   13084:	ldr	r0, [sp, #12]
   13088:	bl	1299c <sigaltstack@plt+0x14fc>
   1308c:	b	12dec <sigaltstack@plt+0x194c>
   13090:	cmp	r5, #108	; 0x6c
   13094:	bne	13080 <sigaltstack@plt+0x1be0>
   13098:	b	12ddc <sigaltstack@plt+0x193c>
   1309c:	add	r3, sp, #65536	; 0x10000
   130a0:	add	r3, r3, #108	; 0x6c
   130a4:	ldr	r3, [r3]
   130a8:	cmp	r3, #1
   130ac:	add	r3, sp, #65536	; 0x10000
   130b0:	beq	13164 <sigaltstack@plt+0x1cc4>
   130b4:	add	r1, sp, #65536	; 0x10000
   130b8:	add	r3, r3, #108	; 0x6c
   130bc:	add	r1, r1, #104	; 0x68
   130c0:	ldr	r3, [r3]
   130c4:	ldr	r1, [r1]
   130c8:	mov	r0, r2
   130cc:	add	r1, r3, r1
   130d0:	add	r3, sp, #65536	; 0x10000
   130d4:	add	r3, r3, #104	; 0x68
   130d8:	sub	r1, r1, #1
   130dc:	ldr	r3, [r3]
   130e0:	ldr	r2, [pc, #292]	; 1320c <sigaltstack@plt+0x1d6c>
   130e4:	str	r3, [sp]
   130e8:	str	r1, [sp, #4]
   130ec:	ldr	r3, [sp, #28]
   130f0:	mov	r1, #1
   130f4:	bl	113a4 <__fprintf_chk@plt>
   130f8:	b	13070 <sigaltstack@plt+0x1bd0>
   130fc:	cmp	r3, #1
   13100:	beq	13144 <sigaltstack@plt+0x1ca4>
   13104:	ldr	r2, [sp, #24]
   13108:	ldr	r3, [sp, #8]
   1310c:	mov	r1, #1
   13110:	add	r3, r3, r2
   13114:	sub	r3, r3, #1
   13118:	strd	r2, [sp]
   1311c:	ldr	r3, [sp, #20]
   13120:	ldr	r2, [pc, #232]	; 13210 <sigaltstack@plt+0x1d70>
   13124:	bl	113a4 <__fprintf_chk@plt>
   13128:	ldr	r0, [r4, #1012]	; 0x3f4
   1312c:	b	12ddc <sigaltstack@plt+0x193c>
   13130:	ldr	r0, [pc, #220]	; 13214 <sigaltstack@plt+0x1d74>
   13134:	bl	12678 <sigaltstack@plt+0x11d8>
   13138:	ldr	r7, [pc, #216]	; 13218 <sigaltstack@plt+0x1d78>
   1313c:	mov	r0, #17
   13140:	b	13008 <sigaltstack@plt+0x1b68>
   13144:	ldr	r3, [sp, #24]
   13148:	ldr	r2, [pc, #204]	; 1321c <sigaltstack@plt+0x1d7c>
   1314c:	str	r3, [sp]
   13150:	ldr	r1, [sp, #8]
   13154:	ldr	r3, [sp, #20]
   13158:	bl	113a4 <__fprintf_chk@plt>
   1315c:	ldr	r0, [r4, #1012]	; 0x3f4
   13160:	b	12ddc <sigaltstack@plt+0x193c>
   13164:	add	r3, r3, #104	; 0x68
   13168:	add	r1, sp, #65536	; 0x10000
   1316c:	ldr	r3, [r3]
   13170:	add	r1, r1, #108	; 0x6c
   13174:	str	r3, [sp]
   13178:	mov	r0, r2
   1317c:	ldr	r3, [sp, #28]
   13180:	ldr	r2, [pc, #152]	; 13220 <sigaltstack@plt+0x1d80>
   13184:	ldr	r1, [r1]
   13188:	bl	113a4 <__fprintf_chk@plt>
   1318c:	ldr	r2, [r4, #1012]	; 0x3f4
   13190:	b	12e18 <sigaltstack@plt+0x1978>
   13194:	ldr	r0, [pc, #136]	; 13224 <sigaltstack@plt+0x1d84>
   13198:	bl	12678 <sigaltstack@plt+0x11d8>
   1319c:	ldr	r0, [r4, #24]
   131a0:	bl	12678 <sigaltstack@plt+0x11d8>
   131a4:	bl	11200 <__stack_chk_fail@plt>
   131a8:	mov	r6, #0
   131ac:	b	12be0 <sigaltstack@plt+0x1740>
   131b0:	mov	r0, r5
   131b4:	bl	12678 <sigaltstack@plt+0x11d8>
   131b8:	ldr	r0, [pc, #104]	; 13228 <sigaltstack@plt+0x1d88>
   131bc:	bl	12678 <sigaltstack@plt+0x11d8>
   131c0:	add	r1, sp, #40	; 0x28
   131c4:	ldr	r0, [r6]
   131c8:	bl	111a0 <execvp@plt>
   131cc:	bl	1135c <__errno_location@plt>
   131d0:	ldr	r3, [r0]
   131d4:	cmp	r3, #2
   131d8:	moveq	r0, #127	; 0x7f
   131dc:	movne	r0, #126	; 0x7e
   131e0:	bl	11188 <_exit@plt>
   131e4:	andeq	r8, r2, r8, lsl #30
   131e8:	andeq	r9, r2, r4, ror r1
   131ec:	andeq	r9, r2, r0, ror r1
   131f0:	andeq	r9, r2, r0, lsl #3
   131f4:	andeq	r7, r1, r0, lsr r5
   131f8:	andeq	r9, r2, ip, asr #2
   131fc:	andeq	r7, r1, ip, ror lr
   13200:	andeq	r7, r1, r8, asr r4
   13204:	andeq	r7, r1, r4, lsr r5
   13208:	andeq	r7, r1, ip, lsr r5
   1320c:	andeq	r7, r1, r4, ror r5
   13210:	andeq	r7, r1, r8, asr r5
   13214:	muleq	r1, r4, r5
   13218:	andeq	r7, r1, r8, lsr #10
   1321c:	andeq	r7, r1, ip, asr #10
   13220:	andeq	r7, r1, r8, ror #10
   13224:	andeq	r7, r1, ip, lsl #11
   13228:	andeq	r7, r1, r4, lsl #11
   1322c:	bx	lr
   13230:	push	{r4, lr}
   13234:	mov	r0, #0
   13238:	ldr	r4, [pc, #104]	; 132a8 <sigaltstack@plt+0x1e08>
   1323c:	ldr	r3, [r4]
   13240:	blx	r3
   13244:	bl	13448 <sigaltstack@plt+0x1fa8>
   13248:	mov	r5, r0
   1324c:	bl	11344 <strlen@plt>
   13250:	mov	r1, r5
   13254:	ldr	r4, [r4, #4]
   13258:	mov	r2, r0
   1325c:	mov	r0, #2
   13260:	bl	11398 <write@plt>
   13264:	mov	r2, #2
   13268:	mov	r0, r2
   1326c:	ldr	r1, [pc, #56]	; 132ac <sigaltstack@plt+0x1e0c>
   13270:	bl	11398 <write@plt>
   13274:	mov	r0, r4
   13278:	bl	11344 <strlen@plt>
   1327c:	mov	r1, r4
   13280:	mov	r2, r0
   13284:	mov	r0, #2
   13288:	bl	11398 <write@plt>
   1328c:	mov	r2, #1
   13290:	ldr	r1, [pc, #24]	; 132b0 <sigaltstack@plt+0x1e10>
   13294:	mov	r0, #2
   13298:	bl	11398 <write@plt>
   1329c:	ldr	r3, [pc, #16]	; 132b4 <sigaltstack@plt+0x1e14>
   132a0:	ldr	r0, [r3]
   132a4:	bl	11188 <_exit@plt>
   132a8:	andeq	r9, r2, r8, lsl #12
   132ac:			; <UNDEFINED> instruction: 0x00017eb4
   132b0:	andeq	r7, r1, r0, lsr #14
   132b4:	andeq	r9, r2, r4, asr r1
   132b8:	push	{r4, r5, r6, r7, lr}
   132bc:	sub	sp, sp, #164	; 0xa4
   132c0:	ldr	r6, [pc, #192]	; 13388 <sigaltstack@plt+0x1ee8>
   132c4:	mov	r3, #0
   132c8:	ldr	ip, [pc, #188]	; 1338c <sigaltstack@plt+0x1eec>
   132cc:	ldr	r2, [r6]
   132d0:	mov	r5, r0
   132d4:	str	r2, [sp, #156]	; 0x9c
   132d8:	mov	r1, r3
   132dc:	mov	r2, #8192	; 0x2000
   132e0:	add	r0, sp, #4
   132e4:	str	r3, [sp, #8]
   132e8:	str	ip, [sp, #4]
   132ec:	str	r2, [sp, #12]
   132f0:	bl	114a0 <sigaltstack@plt>
   132f4:	subs	r4, r0, #0
   132f8:	bne	13368 <sigaltstack@plt+0x1ec8>
   132fc:	ldr	r3, [pc, #140]	; 13390 <sigaltstack@plt+0x1ef0>
   13300:	ldr	r7, [pc, #140]	; 13394 <sigaltstack@plt+0x1ef4>
   13304:	cmp	r5, #0
   13308:	moveq	r5, r3
   1330c:	mov	r2, #5
   13310:	ldr	r1, [pc, #128]	; 13398 <sigaltstack@plt+0x1ef8>
   13314:	str	r5, [r7]
   13318:	bl	111e8 <dcgettext@plt>
   1331c:	mov	r2, #5
   13320:	ldr	r1, [pc, #116]	; 1339c <sigaltstack@plt+0x1efc>
   13324:	mov	r3, r0
   13328:	mov	r0, r4
   1332c:	str	r3, [r7, #8]
   13330:	bl	111e8 <dcgettext@plt>
   13334:	mov	r3, r0
   13338:	add	r0, sp, #20
   1333c:	str	r3, [r7, #4]
   13340:	bl	11404 <sigemptyset@plt>
   13344:	ldr	ip, [pc, #84]	; 133a0 <sigaltstack@plt+0x1f00>
   13348:	ldr	r3, [pc, #84]	; 133a4 <sigaltstack@plt+0x1f04>
   1334c:	mov	r2, r4
   13350:	add	r1, sp, #16
   13354:	mov	r0, #11
   13358:	str	ip, [sp, #148]	; 0x94
   1335c:	str	r3, [sp, #16]
   13360:	bl	11260 <sigaction@plt>
   13364:	mov	r4, r0
   13368:	ldr	r2, [sp, #156]	; 0x9c
   1336c:	ldr	r3, [r6]
   13370:	mov	r0, r4
   13374:	cmp	r2, r3
   13378:	bne	13384 <sigaltstack@plt+0x1ee4>
   1337c:	add	sp, sp, #164	; 0xa4
   13380:	pop	{r4, r5, r6, r7, pc}
   13384:	bl	11200 <__stack_chk_fail@plt>
   13388:	andeq	r8, r2, r8, lsl #30
   1338c:	andeq	r9, r2, r8, lsl r6
   13390:	andeq	r3, r1, ip, lsr #4
   13394:	andeq	r9, r2, r8, lsl #12
   13398:			; <UNDEFINED> instruction: 0x00017eb8
   1339c:	andeq	r7, r1, r8, asr #29
   133a0:	stmdagt	r0, {r2}
   133a4:	andeq	r3, r1, r0, lsr r2
   133a8:	ldrb	r3, [r0]
   133ac:	cmp	r3, #47	; 0x2f
   133b0:	bne	133c0 <sigaltstack@plt+0x1f20>
   133b4:	ldrb	r3, [r0, #1]!
   133b8:	cmp	r3, #47	; 0x2f
   133bc:	beq	133b4 <sigaltstack@plt+0x1f14>
   133c0:	cmp	r3, #0
   133c4:	bxeq	lr
   133c8:	mov	r2, r0
   133cc:	mov	r1, #0
   133d0:	cmp	r3, #47	; 0x2f
   133d4:	moveq	r1, #1
   133d8:	beq	133e8 <sigaltstack@plt+0x1f48>
   133dc:	cmp	r1, #0
   133e0:	movne	r0, r2
   133e4:	movne	r1, #0
   133e8:	ldrb	r3, [r2, #1]!
   133ec:	cmp	r3, #0
   133f0:	bne	133d0 <sigaltstack@plt+0x1f30>
   133f4:	bx	lr
   133f8:	push	{r4, lr}
   133fc:	mov	r4, r0
   13400:	bl	11344 <strlen@plt>
   13404:	cmp	r0, #1
   13408:	popls	{r4, pc}
   1340c:	add	r2, r4, r0
   13410:	mov	r3, r0
   13414:	ldrb	r2, [r2, #-1]
   13418:	cmp	r2, #47	; 0x2f
   1341c:	subeq	r3, r0, #2
   13420:	addeq	r3, r4, r3
   13424:	rsbeq	r1, r4, #1
   13428:	popne	{r4, pc}
   1342c:	cmp	r3, r4
   13430:	add	r0, r1, r3
   13434:	popeq	{r4, pc}
   13438:	ldrb	r2, [r3], #-1
   1343c:	cmp	r2, #47	; 0x2f
   13440:	popne	{r4, pc}
   13444:	b	1342c <sigaltstack@plt+0x1f8c>
   13448:	ldr	r3, [pc, #4]	; 13454 <sigaltstack@plt+0x1fb4>
   1344c:	ldr	r0, [r3]
   13450:	bx	lr
   13454:	andeq	r9, r2, r8, asr r1
   13458:	push	{r4, r5, r6, lr}
   1345c:	subs	r4, r0, #0
   13460:	beq	134d4 <sigaltstack@plt+0x2034>
   13464:	mov	r1, #47	; 0x2f
   13468:	bl	1141c <strrchr@plt>
   1346c:	subs	r5, r0, #0
   13470:	beq	134c0 <sigaltstack@plt+0x2020>
   13474:	add	r6, r5, #1
   13478:	sub	r3, r6, r4
   1347c:	cmp	r3, #6
   13480:	ble	134c0 <sigaltstack@plt+0x2020>
   13484:	mov	r2, #7
   13488:	ldr	r1, [pc, #96]	; 134f0 <sigaltstack@plt+0x2050>
   1348c:	sub	r0, r5, #6
   13490:	bl	11470 <strncmp@plt>
   13494:	cmp	r0, #0
   13498:	bne	134c0 <sigaltstack@plt+0x2020>
   1349c:	mov	r2, #3
   134a0:	ldr	r1, [pc, #76]	; 134f4 <sigaltstack@plt+0x2054>
   134a4:	mov	r0, r6
   134a8:	bl	11470 <strncmp@plt>
   134ac:	cmp	r0, #0
   134b0:	movne	r4, r6
   134b4:	ldreq	r3, [pc, #60]	; 134f8 <sigaltstack@plt+0x2058>
   134b8:	addeq	r4, r5, #4
   134bc:	streq	r4, [r3]
   134c0:	ldr	r2, [pc, #52]	; 134fc <sigaltstack@plt+0x205c>
   134c4:	ldr	r3, [pc, #52]	; 13500 <sigaltstack@plt+0x2060>
   134c8:	str	r4, [r2]
   134cc:	str	r4, [r3]
   134d0:	pop	{r4, r5, r6, pc}
   134d4:	ldr	r3, [pc, #40]	; 13504 <sigaltstack@plt+0x2064>
   134d8:	mov	r2, #55	; 0x37
   134dc:	mov	r1, #1
   134e0:	ldr	r3, [r3]
   134e4:	ldr	r0, [pc, #28]	; 13508 <sigaltstack@plt+0x2068>
   134e8:	bl	1126c <fwrite@plt>
   134ec:	bl	1147c <abort@plt>
   134f0:	andeq	r7, r1, r0, lsl pc
   134f4:	andeq	r7, r1, r8, lsl pc
   134f8:	andeq	r9, r2, r8, asr r1
   134fc:	andeq	fp, r2, r8, lsl r6
   13500:	andeq	r9, r2, ip, asr r1
   13504:	andeq	r9, r2, r8, ror #2
   13508:	ldrdeq	r7, [r1], -r8
   1350c:	push	{r4, lr}
   13510:	mov	r2, #179	; 0xb3
   13514:	ldr	r3, [pc, #8]	; 13524 <sigaltstack@plt+0x2084>
   13518:	ldr	r1, [pc, #8]	; 13528 <sigaltstack@plt+0x2088>
   1351c:	ldr	r0, [pc, #8]	; 1352c <sigaltstack@plt+0x208c>
   13520:	bl	11494 <__assert_fail@plt>
   13524:	andeq	r7, r1, ip, lsl pc
   13528:	andeq	r7, r1, r0, lsr pc
   1352c:	andeq	r7, r1, ip, lsr pc
   13530:	ldr	r3, [pc, #1976]	; 13cf0 <sigaltstack@plt+0x2850>
   13534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13538:	sub	sp, sp, #124	; 0x7c
   1353c:	ldr	r3, [r3]
   13540:	mov	r4, r0
   13544:	mov	r0, r1
   13548:	mov	r1, #2
   1354c:	str	r3, [sp, #116]	; 0x74
   13550:	bl	1409c <sigaltstack@plt+0x2bfc>
   13554:	ldr	r8, [pc, #1944]	; 13cf4 <sigaltstack@plt+0x2854>
   13558:	mov	r6, #0
   1355c:	mov	sl, r0
   13560:	ldrb	r3, [r4]
   13564:	cmp	r3, #0
   13568:	beq	135fc <sigaltstack@plt+0x215c>
   1356c:	mov	r1, sl
   13570:	mov	r0, r4
   13574:	bl	15a2c <sigaltstack@plt+0x458c>
   13578:	subs	r9, r0, #0
   1357c:	beq	135fc <sigaltstack@plt+0x215c>
   13580:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13584:	cmp	r0, #1
   13588:	bhi	13628 <sigaltstack@plt+0x2188>
   1358c:	mov	r0, sl
   13590:	bl	11344 <strlen@plt>
   13594:	cmp	r4, r9
   13598:	mov	r5, r0
   1359c:	bcs	135bc <sigaltstack@plt+0x211c>
   135a0:	bl	11320 <__ctype_b_loc@plt>
   135a4:	ldrb	r3, [r9, #-1]
   135a8:	lsl	r3, r3, #1
   135ac:	ldr	r2, [r0]
   135b0:	ldrh	r3, [r2, r3]
   135b4:	tst	r3, #8
   135b8:	bne	135e0 <sigaltstack@plt+0x2140>
   135bc:	ldrb	r4, [r9, r5]
   135c0:	cmp	r4, #0
   135c4:	beq	13cbc <sigaltstack@plt+0x281c>
   135c8:	bl	11320 <__ctype_b_loc@plt>
   135cc:	lsl	r4, r4, #1
   135d0:	ldr	r3, [r0]
   135d4:	ldrh	r3, [r3, r4]
   135d8:	tst	r3, #8
   135dc:	beq	13cbc <sigaltstack@plt+0x281c>
   135e0:	ldrb	r3, [r9]
   135e4:	cmp	r3, #0
   135e8:	beq	135fc <sigaltstack@plt+0x215c>
   135ec:	add	r4, r9, #1
   135f0:	ldrb	r3, [r4]
   135f4:	cmp	r3, #0
   135f8:	bne	1356c <sigaltstack@plt+0x20cc>
   135fc:	mov	fp, #0
   13600:	mov	r0, sl
   13604:	bl	1117c <free@plt>
   13608:	ldr	r3, [pc, #1760]	; 13cf0 <sigaltstack@plt+0x2850>
   1360c:	ldr	r2, [sp, #116]	; 0x74
   13610:	mov	r0, fp
   13614:	ldr	r3, [r3]
   13618:	cmp	r2, r3
   1361c:	bne	13cec <sigaltstack@plt+0x284c>
   13620:	add	sp, sp, #124	; 0x7c
   13624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13628:	cmp	r4, r9
   1362c:	str	r4, [sp, #20]
   13630:	strb	r6, [sp, #4]
   13634:	str	r6, [sp, #8]
   13638:	strb	r6, [sp, #16]
   1363c:	str	r6, [sp, #12]
   13640:	movcc	r5, #1
   13644:	bcc	136a4 <sigaltstack@plt+0x2204>
   13648:	b	13b10 <sigaltstack@plt+0x2670>
   1364c:	ldrb	r3, [r4]
   13650:	and	r2, r3, #31
   13654:	lsr	r3, r3, #5
   13658:	ldr	r3, [r8, r3, lsl #2]
   1365c:	lsr	r3, r3, r2
   13660:	tst	r3, #1
   13664:	beq	13734 <sigaltstack@plt+0x2294>
   13668:	str	r5, [sp, #24]
   1366c:	ldrb	r7, [r4]
   13670:	strb	r5, [sp, #28]
   13674:	strb	r5, [sp, #16]
   13678:	cmp	r7, #0
   1367c:	str	r7, [sp, #32]
   13680:	beq	13730 <sigaltstack@plt+0x2290>
   13684:	ldr	r4, [sp, #20]
   13688:	ldr	r3, [sp, #24]
   1368c:	strb	r6, [sp, #16]
   13690:	add	r4, r4, r3
   13694:	cmp	r4, r9
   13698:	str	r4, [sp, #20]
   1369c:	ldrb	r3, [sp, #28]
   136a0:	bcs	13784 <sigaltstack@plt+0x22e4>
   136a4:	ldrb	r3, [sp, #4]
   136a8:	cmp	r3, #0
   136ac:	beq	1364c <sigaltstack@plt+0x21ac>
   136b0:	bl	11284 <__ctype_get_mb_cur_max@plt>
   136b4:	mov	r1, r0
   136b8:	mov	r0, r4
   136bc:	bl	1404c <sigaltstack@plt+0x2bac>
   136c0:	add	r3, sp, #8
   136c4:	mov	r1, r4
   136c8:	mov	r2, r0
   136cc:	add	r0, sp, #32
   136d0:	bl	14e04 <sigaltstack@plt+0x3964>
   136d4:	cmn	r0, #1
   136d8:	str	r0, [sp, #24]
   136dc:	beq	1374c <sigaltstack@plt+0x22ac>
   136e0:	cmn	r0, #2
   136e4:	beq	13760 <sigaltstack@plt+0x22c0>
   136e8:	cmp	r0, #0
   136ec:	bne	1377c <sigaltstack@plt+0x22dc>
   136f0:	ldr	r4, [sp, #20]
   136f4:	str	r5, [sp, #24]
   136f8:	ldrb	r3, [r4]
   136fc:	cmp	r3, #0
   13700:	bne	13cd8 <sigaltstack@plt+0x2838>
   13704:	ldr	r7, [sp, #32]
   13708:	cmp	r7, #0
   1370c:	bne	13ac0 <sigaltstack@plt+0x2620>
   13710:	add	r0, sp, #8
   13714:	strb	r5, [sp, #28]
   13718:	bl	111b8 <mbsinit@plt>
   1371c:	strb	r5, [sp, #16]
   13720:	cmp	r0, #0
   13724:	strbne	r6, [sp, #4]
   13728:	cmp	r7, #0
   1372c:	bne	13684 <sigaltstack@plt+0x21e4>
   13730:	bl	1147c <abort@plt>
   13734:	add	r0, sp, #8
   13738:	bl	111b8 <mbsinit@plt>
   1373c:	cmp	r0, #0
   13740:	beq	13cc4 <sigaltstack@plt+0x2824>
   13744:	strb	r5, [sp, #4]
   13748:	b	136b0 <sigaltstack@plt+0x2210>
   1374c:	str	r5, [sp, #24]
   13750:	strb	r6, [sp, #28]
   13754:	ldr	r7, [sp, #32]
   13758:	ldr	r4, [sp, #20]
   1375c:	b	13688 <sigaltstack@plt+0x21e8>
   13760:	ldr	r4, [sp, #20]
   13764:	mov	r0, r4
   13768:	bl	11344 <strlen@plt>
   1376c:	strb	r6, [sp, #28]
   13770:	ldr	r7, [sp, #32]
   13774:	str	r0, [sp, #24]
   13778:	b	13688 <sigaltstack@plt+0x21e8>
   1377c:	ldr	r7, [sp, #32]
   13780:	b	13710 <sigaltstack@plt+0x2270>
   13784:	cmp	r3, #0
   13788:	beq	13b10 <sigaltstack@plt+0x2670>
   1378c:	mov	r0, r7
   13790:	bl	11368 <iswalnum@plt>
   13794:	clz	fp, r0
   13798:	lsr	fp, fp, #5
   1379c:	str	r9, [sp, #20]
   137a0:	strb	r6, [sp, #4]
   137a4:	str	r6, [sp, #8]
   137a8:	str	r6, [sp, #12]
   137ac:	strb	r6, [sp, #16]
   137b0:	str	sl, [sp, #76]	; 0x4c
   137b4:	strb	r6, [sp, #60]	; 0x3c
   137b8:	str	r6, [sp, #64]	; 0x40
   137bc:	strb	r6, [sp, #72]	; 0x48
   137c0:	str	r6, [sp, #68]	; 0x44
   137c4:	mov	r5, sl
   137c8:	mov	r7, #1
   137cc:	b	13884 <sigaltstack@plt+0x23e4>
   137d0:	ldrb	r3, [r5]
   137d4:	and	r2, r3, #31
   137d8:	lsr	r3, r3, #5
   137dc:	ldr	r3, [r8, r3, lsl #2]
   137e0:	lsr	r3, r3, r2
   137e4:	tst	r3, #1
   137e8:	beq	13a60 <sigaltstack@plt+0x25c0>
   137ec:	str	r7, [sp, #80]	; 0x50
   137f0:	ldrb	r4, [r5]
   137f4:	strb	r7, [sp, #84]	; 0x54
   137f8:	strb	r7, [sp, #72]	; 0x48
   137fc:	cmp	r4, #0
   13800:	str	r4, [sp, #88]	; 0x58
   13804:	beq	13900 <sigaltstack@plt+0x2460>
   13808:	ldrb	r3, [sp, #16]
   1380c:	cmp	r3, #0
   13810:	bne	13a4c <sigaltstack@plt+0x25ac>
   13814:	ldrb	r3, [sp, #4]
   13818:	ldr	r4, [sp, #20]
   1381c:	cmp	r3, #0
   13820:	bne	139ec <sigaltstack@plt+0x254c>
   13824:	ldrb	r3, [r4]
   13828:	and	r2, r3, #31
   1382c:	lsr	r3, r3, #5
   13830:	ldr	r3, [r8, r3, lsl #2]
   13834:	lsr	r3, r3, r2
   13838:	tst	r3, #1
   1383c:	beq	139d8 <sigaltstack@plt+0x2538>
   13840:	str	r7, [sp, #24]
   13844:	ldrb	r4, [r4]
   13848:	strb	r7, [sp, #28]
   1384c:	strb	r7, [sp, #16]
   13850:	str	r4, [sp, #32]
   13854:	cmp	r4, #0
   13858:	beq	13730 <sigaltstack@plt+0x2290>
   1385c:	ldr	r4, [sp, #20]
   13860:	ldr	r5, [sp, #76]	; 0x4c
   13864:	ldr	r3, [sp, #24]
   13868:	ldr	r2, [sp, #80]	; 0x50
   1386c:	add	r4, r4, r3
   13870:	add	r5, r5, r2
   13874:	strb	r6, [sp, #16]
   13878:	strb	r6, [sp, #72]	; 0x48
   1387c:	str	r4, [sp, #20]
   13880:	str	r5, [sp, #76]	; 0x4c
   13884:	ldrb	r3, [sp, #60]	; 0x3c
   13888:	cmp	r3, #0
   1388c:	beq	137d0 <sigaltstack@plt+0x2330>
   13890:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13894:	mov	r1, r0
   13898:	mov	r0, r5
   1389c:	bl	1404c <sigaltstack@plt+0x2bac>
   138a0:	add	r3, sp, #64	; 0x40
   138a4:	mov	r1, r5
   138a8:	mov	r2, r0
   138ac:	add	r0, sp, #88	; 0x58
   138b0:	bl	14e04 <sigaltstack@plt+0x3964>
   138b4:	cmn	r0, #1
   138b8:	str	r0, [sp, #80]	; 0x50
   138bc:	strbeq	r6, [sp, #84]	; 0x54
   138c0:	streq	r7, [sp, #80]	; 0x50
   138c4:	strbeq	r7, [sp, #72]	; 0x48
   138c8:	beq	13808 <sigaltstack@plt+0x2368>
   138cc:	cmn	r0, #2
   138d0:	beq	13a88 <sigaltstack@plt+0x25e8>
   138d4:	cmp	r0, #0
   138d8:	beq	13aa0 <sigaltstack@plt+0x2600>
   138dc:	ldr	r4, [sp, #88]	; 0x58
   138e0:	add	r0, sp, #64	; 0x40
   138e4:	strb	r7, [sp, #84]	; 0x54
   138e8:	bl	111b8 <mbsinit@plt>
   138ec:	strb	r7, [sp, #72]	; 0x48
   138f0:	cmp	r0, #0
   138f4:	strbne	r6, [sp, #60]	; 0x3c
   138f8:	cmp	r4, #0
   138fc:	bne	13808 <sigaltstack@plt+0x2368>
   13900:	ldrb	r3, [sp, #16]
   13904:	cmp	r3, #0
   13908:	bne	13b98 <sigaltstack@plt+0x26f8>
   1390c:	ldrb	r3, [sp, #4]
   13910:	ldr	r4, [sp, #20]
   13914:	cmp	r3, #0
   13918:	bne	13b30 <sigaltstack@plt+0x2690>
   1391c:	ldrb	r3, [r4]
   13920:	and	r2, r3, #31
   13924:	lsr	r3, r3, #5
   13928:	ldr	r3, [r8, r3, lsl #2]
   1392c:	lsr	r3, r3, r2
   13930:	tst	r3, #1
   13934:	beq	13b18 <sigaltstack@plt+0x2678>
   13938:	mov	r3, #1
   1393c:	str	r3, [sp, #24]
   13940:	ldrb	r4, [r4]
   13944:	strb	r3, [sp, #28]
   13948:	strb	r3, [sp, #16]
   1394c:	str	r4, [sp, #32]
   13950:	cmp	r4, #0
   13954:	beq	13974 <sigaltstack@plt+0x24d4>
   13958:	ldrb	r3, [sp, #28]
   1395c:	cmp	r3, #0
   13960:	beq	13974 <sigaltstack@plt+0x24d4>
   13964:	mov	r0, r4
   13968:	bl	11368 <iswalnum@plt>
   1396c:	cmp	r0, #0
   13970:	bne	1397c <sigaltstack@plt+0x24dc>
   13974:	cmp	fp, #0
   13978:	bne	13600 <sigaltstack@plt+0x2160>
   1397c:	str	r9, [sp, #20]
   13980:	strb	r6, [sp, #4]
   13984:	str	r6, [sp, #8]
   13988:	str	r6, [sp, #12]
   1398c:	strb	r6, [sp, #16]
   13990:	ldrb	r3, [r9]
   13994:	and	r2, r3, #31
   13998:	lsr	r3, r3, #5
   1399c:	ldr	r3, [r8, r3, lsl #2]
   139a0:	lsr	r3, r3, r2
   139a4:	tst	r3, #1
   139a8:	beq	13bac <sigaltstack@plt+0x270c>
   139ac:	mov	r3, #1
   139b0:	str	r3, [sp, #24]
   139b4:	ldrb	r4, [r9]
   139b8:	strb	r3, [sp, #28]
   139bc:	strb	r3, [sp, #16]
   139c0:	str	r4, [sp, #32]
   139c4:	cmp	r4, #0
   139c8:	beq	135fc <sigaltstack@plt+0x215c>
   139cc:	ldr	r4, [sp, #24]
   139d0:	add	r4, r9, r4
   139d4:	b	13560 <sigaltstack@plt+0x20c0>
   139d8:	add	r0, sp, #8
   139dc:	bl	111b8 <mbsinit@plt>
   139e0:	cmp	r0, #0
   139e4:	beq	13cc4 <sigaltstack@plt+0x2824>
   139e8:	strb	r7, [sp, #4]
   139ec:	bl	11284 <__ctype_get_mb_cur_max@plt>
   139f0:	mov	r1, r0
   139f4:	mov	r0, r4
   139f8:	bl	1404c <sigaltstack@plt+0x2bac>
   139fc:	add	r3, sp, #8
   13a00:	mov	r1, r4
   13a04:	mov	r2, r0
   13a08:	add	r0, sp, #32
   13a0c:	bl	14e04 <sigaltstack@plt+0x3964>
   13a10:	cmn	r0, #1
   13a14:	str	r0, [sp, #24]
   13a18:	beq	13a78 <sigaltstack@plt+0x25d8>
   13a1c:	cmn	r0, #2
   13a20:	beq	13ad4 <sigaltstack@plt+0x2634>
   13a24:	cmp	r0, #0
   13a28:	beq	13aec <sigaltstack@plt+0x264c>
   13a2c:	ldr	r4, [sp, #32]
   13a30:	add	r0, sp, #8
   13a34:	strb	r7, [sp, #28]
   13a38:	bl	111b8 <mbsinit@plt>
   13a3c:	strb	r7, [sp, #16]
   13a40:	cmp	r0, #0
   13a44:	strbne	r6, [sp, #4]
   13a48:	b	13854 <sigaltstack@plt+0x23b4>
   13a4c:	ldrb	r3, [sp, #28]
   13a50:	cmp	r3, #0
   13a54:	ldrne	r4, [sp, #32]
   13a58:	beq	1385c <sigaltstack@plt+0x23bc>
   13a5c:	b	13854 <sigaltstack@plt+0x23b4>
   13a60:	add	r0, sp, #64	; 0x40
   13a64:	bl	111b8 <mbsinit@plt>
   13a68:	cmp	r0, #0
   13a6c:	beq	13cc4 <sigaltstack@plt+0x2824>
   13a70:	strb	r7, [sp, #60]	; 0x3c
   13a74:	b	13890 <sigaltstack@plt+0x23f0>
   13a78:	str	r7, [sp, #24]
   13a7c:	strb	r6, [sp, #28]
   13a80:	ldr	r4, [sp, #20]
   13a84:	b	13860 <sigaltstack@plt+0x23c0>
   13a88:	ldr	r0, [sp, #76]	; 0x4c
   13a8c:	bl	11344 <strlen@plt>
   13a90:	strb	r6, [sp, #84]	; 0x54
   13a94:	strb	r7, [sp, #72]	; 0x48
   13a98:	str	r0, [sp, #80]	; 0x50
   13a9c:	b	13808 <sigaltstack@plt+0x2368>
   13aa0:	ldr	r3, [sp, #76]	; 0x4c
   13aa4:	str	r7, [sp, #80]	; 0x50
   13aa8:	ldrb	r3, [r3]
   13aac:	cmp	r3, #0
   13ab0:	bne	13cd8 <sigaltstack@plt+0x2838>
   13ab4:	ldr	r4, [sp, #88]	; 0x58
   13ab8:	cmp	r4, #0
   13abc:	beq	138e0 <sigaltstack@plt+0x2440>
   13ac0:	ldr	r3, [pc, #560]	; 13cf8 <sigaltstack@plt+0x2858>
   13ac4:	mov	r2, #179	; 0xb3
   13ac8:	ldr	r1, [pc, #556]	; 13cfc <sigaltstack@plt+0x285c>
   13acc:	ldr	r0, [pc, #556]	; 13d00 <sigaltstack@plt+0x2860>
   13ad0:	bl	11494 <__assert_fail@plt>
   13ad4:	ldr	r4, [sp, #20]
   13ad8:	mov	r0, r4
   13adc:	bl	11344 <strlen@plt>
   13ae0:	strb	r6, [sp, #28]
   13ae4:	str	r0, [sp, #24]
   13ae8:	b	13860 <sigaltstack@plt+0x23c0>
   13aec:	ldr	r4, [sp, #20]
   13af0:	str	r7, [sp, #24]
   13af4:	ldrb	r3, [r4]
   13af8:	cmp	r3, #0
   13afc:	bne	13cd8 <sigaltstack@plt+0x2838>
   13b00:	ldr	r4, [sp, #32]
   13b04:	cmp	r4, #0
   13b08:	beq	13a30 <sigaltstack@plt+0x2590>
   13b0c:	b	13ac0 <sigaltstack@plt+0x2620>
   13b10:	mov	fp, #1
   13b14:	b	1379c <sigaltstack@plt+0x22fc>
   13b18:	add	r0, sp, #8
   13b1c:	bl	111b8 <mbsinit@plt>
   13b20:	cmp	r0, #0
   13b24:	beq	13cc4 <sigaltstack@plt+0x2824>
   13b28:	mov	r3, #1
   13b2c:	strb	r3, [sp, #4]
   13b30:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13b34:	mov	r1, r0
   13b38:	mov	r0, r4
   13b3c:	bl	1404c <sigaltstack@plt+0x2bac>
   13b40:	add	r3, sp, #8
   13b44:	mov	r1, r4
   13b48:	mov	r2, r0
   13b4c:	add	r0, sp, #32
   13b50:	bl	14e04 <sigaltstack@plt+0x3964>
   13b54:	cmn	r0, #1
   13b58:	str	r0, [sp, #24]
   13b5c:	beq	13c2c <sigaltstack@plt+0x278c>
   13b60:	cmn	r0, #2
   13b64:	beq	13c9c <sigaltstack@plt+0x27fc>
   13b68:	cmp	r0, #0
   13b6c:	bne	13c68 <sigaltstack@plt+0x27c8>
   13b70:	ldr	r3, [sp, #20]
   13b74:	mov	r2, #1
   13b78:	str	r2, [sp, #24]
   13b7c:	ldrb	r3, [r3]
   13b80:	cmp	r3, #0
   13b84:	bne	13cd8 <sigaltstack@plt+0x2838>
   13b88:	ldr	r4, [sp, #32]
   13b8c:	cmp	r4, #0
   13b90:	beq	13c6c <sigaltstack@plt+0x27cc>
   13b94:	bl	1350c <sigaltstack@plt+0x206c>
   13b98:	ldrb	r3, [sp, #28]
   13b9c:	ldr	r4, [sp, #32]
   13ba0:	cmp	r3, #0
   13ba4:	beq	13958 <sigaltstack@plt+0x24b8>
   13ba8:	b	13950 <sigaltstack@plt+0x24b0>
   13bac:	add	r0, sp, #8
   13bb0:	bl	111b8 <mbsinit@plt>
   13bb4:	cmp	r0, #0
   13bb8:	beq	13cc4 <sigaltstack@plt+0x2824>
   13bbc:	mov	r4, #1
   13bc0:	strb	r4, [sp, #4]
   13bc4:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13bc8:	mov	r1, r0
   13bcc:	mov	r0, r9
   13bd0:	bl	1404c <sigaltstack@plt+0x2bac>
   13bd4:	add	r3, sp, #8
   13bd8:	mov	r1, r9
   13bdc:	mov	r2, r0
   13be0:	add	r0, sp, #32
   13be4:	bl	14e04 <sigaltstack@plt+0x3964>
   13be8:	cmn	r0, #1
   13bec:	str	r0, [sp, #24]
   13bf0:	streq	r4, [sp, #24]
   13bf4:	beq	139cc <sigaltstack@plt+0x252c>
   13bf8:	cmn	r0, #2
   13bfc:	beq	13c8c <sigaltstack@plt+0x27ec>
   13c00:	cmp	r0, #0
   13c04:	bne	13c44 <sigaltstack@plt+0x27a4>
   13c08:	ldr	r3, [sp, #20]
   13c0c:	str	r4, [sp, #24]
   13c10:	ldrb	r3, [r3]
   13c14:	cmp	r3, #0
   13c18:	bne	13cd8 <sigaltstack@plt+0x2838>
   13c1c:	ldr	r4, [sp, #32]
   13c20:	cmp	r4, #0
   13c24:	beq	13c48 <sigaltstack@plt+0x27a8>
   13c28:	b	13b94 <sigaltstack@plt+0x26f4>
   13c2c:	mov	r3, #1
   13c30:	strb	r6, [sp, #28]
   13c34:	str	r3, [sp, #24]
   13c38:	strb	r3, [sp, #16]
   13c3c:	ldr	r4, [sp, #32]
   13c40:	b	13958 <sigaltstack@plt+0x24b8>
   13c44:	ldr	r4, [sp, #32]
   13c48:	mov	r5, #1
   13c4c:	add	r0, sp, #8
   13c50:	strb	r5, [sp, #28]
   13c54:	bl	111b8 <mbsinit@plt>
   13c58:	strb	r5, [sp, #16]
   13c5c:	cmp	r0, #0
   13c60:	strbne	r6, [sp, #4]
   13c64:	b	139c4 <sigaltstack@plt+0x2524>
   13c68:	ldr	r4, [sp, #32]
   13c6c:	mov	r5, #1
   13c70:	add	r0, sp, #8
   13c74:	strb	r5, [sp, #28]
   13c78:	bl	111b8 <mbsinit@plt>
   13c7c:	strb	r5, [sp, #16]
   13c80:	cmp	r0, #0
   13c84:	strbne	r6, [sp, #4]
   13c88:	b	13950 <sigaltstack@plt+0x24b0>
   13c8c:	ldr	r0, [sp, #20]
   13c90:	bl	11344 <strlen@plt>
   13c94:	str	r0, [sp, #24]
   13c98:	b	139cc <sigaltstack@plt+0x252c>
   13c9c:	ldr	r0, [sp, #20]
   13ca0:	bl	11344 <strlen@plt>
   13ca4:	mov	r3, #1
   13ca8:	strb	r6, [sp, #28]
   13cac:	strb	r3, [sp, #16]
   13cb0:	ldr	r4, [sp, #32]
   13cb4:	str	r0, [sp, #24]
   13cb8:	b	13958 <sigaltstack@plt+0x24b8>
   13cbc:	mov	fp, #1
   13cc0:	b	13600 <sigaltstack@plt+0x2160>
   13cc4:	ldr	r3, [pc, #44]	; 13cf8 <sigaltstack@plt+0x2858>
   13cc8:	mov	r2, #150	; 0x96
   13ccc:	ldr	r1, [pc, #40]	; 13cfc <sigaltstack@plt+0x285c>
   13cd0:	ldr	r0, [pc, #44]	; 13d04 <sigaltstack@plt+0x2864>
   13cd4:	bl	11494 <__assert_fail@plt>
   13cd8:	ldr	r3, [pc, #24]	; 13cf8 <sigaltstack@plt+0x2858>
   13cdc:	mov	r2, #178	; 0xb2
   13ce0:	ldr	r1, [pc, #20]	; 13cfc <sigaltstack@plt+0x285c>
   13ce4:	ldr	r0, [pc, #28]	; 13d08 <sigaltstack@plt+0x2868>
   13ce8:	bl	11494 <__assert_fail@plt>
   13cec:	bl	11200 <__stack_chk_fail@plt>
   13cf0:	andeq	r8, r2, r8, lsl #30
   13cf4:	andeq	r8, r1, r4, lsr #6
   13cf8:	andeq	r7, r1, ip, lsl pc
   13cfc:	andeq	r7, r1, r0, lsr pc
   13d00:	andeq	r7, r1, ip, lsr pc
   13d04:	andeq	r7, r1, r0, asr pc
   13d08:	andeq	r7, r1, r8, ror #30
   13d0c:	push	{r4, r5, r6, lr}
   13d10:	mov	r1, r0
   13d14:	mov	r4, r0
   13d18:	sub	sp, sp, #8
   13d1c:	mov	r2, #5
   13d20:	mov	r0, #0
   13d24:	bl	111e8 <dcgettext@plt>
   13d28:	cmp	r4, r0
   13d2c:	mov	r5, r0
   13d30:	beq	13d44 <sigaltstack@plt+0x28a4>
   13d34:	mov	r1, r4
   13d38:	bl	13530 <sigaltstack@plt+0x2090>
   13d3c:	cmp	r0, #0
   13d40:	beq	13d50 <sigaltstack@plt+0x28b0>
   13d44:	mov	r0, r5
   13d48:	add	sp, sp, #8
   13d4c:	pop	{r4, r5, r6, pc}
   13d50:	mov	r0, r5
   13d54:	bl	11344 <strlen@plt>
   13d58:	mov	r6, r0
   13d5c:	mov	r0, r4
   13d60:	bl	11344 <strlen@plt>
   13d64:	add	r0, r6, r0
   13d68:	add	r0, r0, #4
   13d6c:	bl	14ae8 <sigaltstack@plt+0x3648>
   13d70:	str	r5, [sp]
   13d74:	str	r4, [sp, #4]
   13d78:	ldr	r3, [pc, #28]	; 13d9c <sigaltstack@plt+0x28fc>
   13d7c:	mvn	r2, #0
   13d80:	mov	r1, #1
   13d84:	mov	r6, r0
   13d88:	bl	11374 <__sprintf_chk@plt>
   13d8c:	mov	r5, r6
   13d90:	mov	r0, r5
   13d94:	add	sp, sp, #8
   13d98:	pop	{r4, r5, r6, pc}
   13d9c:	andeq	r7, r1, r0, lsl #31
   13da0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13da4:	mov	r2, #5
   13da8:	sub	sp, sp, #8
   13dac:	mov	r6, r0
   13db0:	mov	r5, r1
   13db4:	mov	r1, r0
   13db8:	mov	r0, #0
   13dbc:	bl	111e8 <dcgettext@plt>
   13dc0:	mov	r8, r0
   13dc4:	bl	14f40 <sigaltstack@plt+0x3aa0>
   13dc8:	ldr	r1, [pc, #624]	; 14040 <sigaltstack@plt+0x2ba0>
   13dcc:	mov	r9, r0
   13dd0:	bl	14e84 <sigaltstack@plt+0x39e4>
   13dd4:	subs	r4, r0, #0
   13dd8:	bne	13ef0 <sigaltstack@plt+0x2a50>
   13ddc:	subs	r9, r5, #0
   13de0:	movne	r7, r5
   13de4:	beq	13e60 <sigaltstack@plt+0x29c0>
   13de8:	mov	r1, r6
   13dec:	mov	r0, r8
   13df0:	bl	11158 <strcmp@plt>
   13df4:	cmp	r0, #0
   13df8:	beq	13e54 <sigaltstack@plt+0x29b4>
   13dfc:	mov	r1, r6
   13e00:	mov	r0, r8
   13e04:	bl	13530 <sigaltstack@plt+0x2090>
   13e08:	subs	r6, r0, #0
   13e0c:	bne	13e3c <sigaltstack@plt+0x299c>
   13e10:	cmp	r5, #0
   13e14:	beq	13e6c <sigaltstack@plt+0x29cc>
   13e18:	mov	r1, r5
   13e1c:	mov	r0, r8
   13e20:	bl	13530 <sigaltstack@plt+0x2090>
   13e24:	cmp	r0, #0
   13e28:	beq	13e6c <sigaltstack@plt+0x29cc>
   13e2c:	cmp	r6, #0
   13e30:	beq	13e3c <sigaltstack@plt+0x299c>
   13e34:	mov	r0, r6
   13e38:	bl	1117c <free@plt>
   13e3c:	cmp	r4, #0
   13e40:	moveq	r7, r8
   13e44:	beq	13e54 <sigaltstack@plt+0x29b4>
   13e48:	mov	r0, r4
   13e4c:	bl	1117c <free@plt>
   13e50:	mov	r7, r8
   13e54:	mov	r0, r7
   13e58:	add	sp, sp, #8
   13e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e60:	mov	r4, r5
   13e64:	mov	r7, r6
   13e68:	b	13de8 <sigaltstack@plt+0x2948>
   13e6c:	cmp	r9, #0
   13e70:	beq	13e88 <sigaltstack@plt+0x29e8>
   13e74:	mov	r1, r9
   13e78:	mov	r0, r8
   13e7c:	bl	13530 <sigaltstack@plt+0x2090>
   13e80:	cmp	r0, #0
   13e84:	bne	13e2c <sigaltstack@plt+0x298c>
   13e88:	mov	r0, r8
   13e8c:	bl	11344 <strlen@plt>
   13e90:	mov	r5, r0
   13e94:	mov	r0, r7
   13e98:	bl	11344 <strlen@plt>
   13e9c:	add	r0, r5, r0
   13ea0:	add	r0, r0, #4
   13ea4:	bl	14ae8 <sigaltstack@plt+0x3648>
   13ea8:	str	r7, [sp, #4]
   13eac:	str	r8, [sp]
   13eb0:	ldr	r3, [pc, #396]	; 14044 <sigaltstack@plt+0x2ba4>
   13eb4:	mvn	r2, #0
   13eb8:	mov	r1, #1
   13ebc:	mov	r5, r0
   13ec0:	bl	11374 <__sprintf_chk@plt>
   13ec4:	cmp	r6, #0
   13ec8:	beq	13ed4 <sigaltstack@plt+0x2a34>
   13ecc:	mov	r0, r6
   13ed0:	bl	1117c <free@plt>
   13ed4:	cmp	r4, #0
   13ed8:	moveq	r7, r5
   13edc:	beq	13e54 <sigaltstack@plt+0x29b4>
   13ee0:	mov	r0, r4
   13ee4:	bl	1117c <free@plt>
   13ee8:	mov	r7, r5
   13eec:	b	13e54 <sigaltstack@plt+0x29b4>
   13ef0:	mov	r2, r9
   13ef4:	ldr	r1, [pc, #324]	; 14040 <sigaltstack@plt+0x2ba0>
   13ef8:	mov	r0, r5
   13efc:	bl	14dd8 <sigaltstack@plt+0x3938>
   13f00:	mov	r7, r0
   13f04:	mov	r0, r9
   13f08:	bl	11344 <strlen@plt>
   13f0c:	mov	r4, r0
   13f10:	add	r0, r0, #11
   13f14:	bl	14ae8 <sigaltstack@plt+0x3648>
   13f18:	mov	r2, r4
   13f1c:	mov	r1, r9
   13f20:	mov	sl, r0
   13f24:	bl	11194 <memcpy@plt>
   13f28:	ldr	r3, [pc, #280]	; 14048 <sigaltstack@plt+0x2ba8>
   13f2c:	add	ip, sl, r4
   13f30:	mov	r2, sl
   13f34:	ldm	r3!, {r0, r1}
   13f38:	ldrh	lr, [r3]
   13f3c:	ldrb	r3, [r3, #2]
   13f40:	str	r0, [sl, r4]
   13f44:	str	r1, [ip, #4]
   13f48:	strh	lr, [ip, #8]
   13f4c:	ldr	r1, [pc, #236]	; 14040 <sigaltstack@plt+0x2ba0>
   13f50:	strb	r3, [ip, #10]
   13f54:	mov	r0, r5
   13f58:	bl	14dd8 <sigaltstack@plt+0x3938>
   13f5c:	mov	r4, r0
   13f60:	mov	r0, sl
   13f64:	bl	1117c <free@plt>
   13f68:	cmp	r4, #0
   13f6c:	beq	1400c <sigaltstack@plt+0x2b6c>
   13f70:	mov	r1, #63	; 0x3f
   13f74:	mov	r0, r4
   13f78:	bl	11350 <strchr@plt>
   13f7c:	cmp	r0, #0
   13f80:	beq	13fd0 <sigaltstack@plt+0x2b30>
   13f84:	mov	r0, r4
   13f88:	bl	1117c <free@plt>
   13f8c:	cmp	r7, #0
   13f90:	beq	14014 <sigaltstack@plt+0x2b74>
   13f94:	mov	r1, r6
   13f98:	mov	r0, r8
   13f9c:	bl	11158 <strcmp@plt>
   13fa0:	cmp	r0, #0
   13fa4:	beq	13e54 <sigaltstack@plt+0x29b4>
   13fa8:	mov	r9, #0
   13fac:	mov	r4, r9
   13fb0:	mov	r1, r6
   13fb4:	mov	r0, r8
   13fb8:	bl	13530 <sigaltstack@plt+0x2090>
   13fbc:	cmp	r0, #0
   13fc0:	bne	14038 <sigaltstack@plt+0x2b98>
   13fc4:	mov	r5, r7
   13fc8:	mov	r6, r7
   13fcc:	b	13e10 <sigaltstack@plt+0x2970>
   13fd0:	cmp	r7, #0
   13fd4:	beq	14028 <sigaltstack@plt+0x2b88>
   13fd8:	mov	r1, r6
   13fdc:	mov	r0, r8
   13fe0:	bl	11158 <strcmp@plt>
   13fe4:	cmp	r0, #0
   13fe8:	movne	r9, r4
   13fec:	bne	13fb0 <sigaltstack@plt+0x2b10>
   13ff0:	cmp	r7, r4
   13ff4:	beq	13e54 <sigaltstack@plt+0x29b4>
   13ff8:	mov	r0, r4
   13ffc:	bl	1117c <free@plt>
   14000:	mov	r0, r7
   14004:	add	sp, sp, #8
   14008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1400c:	cmp	r7, #0
   14010:	bne	13f94 <sigaltstack@plt+0x2af4>
   14014:	mov	r9, #0
   14018:	mov	r5, r9
   1401c:	mov	r4, r9
   14020:	mov	r7, r6
   14024:	b	13de8 <sigaltstack@plt+0x2948>
   14028:	mov	r5, r7
   1402c:	mov	r9, r4
   14030:	mov	r7, r4
   14034:	b	13de8 <sigaltstack@plt+0x2948>
   14038:	mov	r6, r7
   1403c:	b	13e34 <sigaltstack@plt+0x2994>
   14040:	andeq	r7, r1, r8, lsl #31
   14044:	andeq	r7, r1, r0, lsl #31
   14048:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1404c:	push	{r4, r5, r6, lr}
   14050:	mov	r2, r1
   14054:	mov	r4, r1
   14058:	mov	r1, #0
   1405c:	mov	r5, r0
   14060:	bl	113b0 <memchr@plt>
   14064:	cmp	r0, #0
   14068:	subne	r0, r0, r5
   1406c:	addne	r0, r0, #1
   14070:	moveq	r0, r4
   14074:	pop	{r4, r5, r6, pc}
   14078:	push	{r4, lr}
   1407c:	mov	r2, #170	; 0xaa
   14080:	ldr	r3, [pc, #8]	; 14090 <sigaltstack@plt+0x2bf0>
   14084:	ldr	r1, [pc, #8]	; 14094 <sigaltstack@plt+0x2bf4>
   14088:	ldr	r0, [pc, #8]	; 14098 <sigaltstack@plt+0x2bf8>
   1408c:	bl	11494 <__assert_fail@plt>
   14090:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14094:			; <UNDEFINED> instruction: 0x00017fb0
   14098:	andeq	r7, r1, ip, lsr pc
   1409c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a0:	sub	sp, sp, #76	; 0x4c
   140a4:	ldr	r7, [pc, #1232]	; 1457c <sigaltstack@plt+0x30dc>
   140a8:	mov	r5, r1
   140ac:	ldr	r3, [r7]
   140b0:	str	r3, [sp, #68]	; 0x44
   140b4:	bl	111f4 <strdup@plt>
   140b8:	subs	r6, r0, #0
   140bc:	beq	14550 <sigaltstack@plt+0x30b0>
   140c0:	bl	11284 <__ctype_get_mb_cur_max@plt>
   140c4:	cmp	r0, #1
   140c8:	bls	142e0 <sigaltstack@plt+0x2e40>
   140cc:	cmp	r5, #0
   140d0:	bne	143d4 <sigaltstack@plt+0x2f34>
   140d4:	add	r9, sp, #16
   140d8:	mov	r0, r6
   140dc:	str	r6, [sp, #28]
   140e0:	bl	11344 <strlen@plt>
   140e4:	mov	r5, #0
   140e8:	str	r5, [sp, #16]
   140ec:	strb	r5, [sp, #12]
   140f0:	str	r5, [r9, #4]
   140f4:	strb	r5, [sp, #24]
   140f8:	add	sl, r6, r0
   140fc:	cmp	sl, r6
   14100:	str	sl, [sp, #8]
   14104:	movhi	r4, r6
   14108:	movhi	r8, #1
   1410c:	bhi	14144 <sigaltstack@plt+0x2ca4>
   14110:	b	14298 <sigaltstack@plt+0x2df8>
   14114:	ldrb	r3, [sp, #36]	; 0x24
   14118:	cmp	r3, #0
   1411c:	beq	141c8 <sigaltstack@plt+0x2d28>
   14120:	ldr	r0, [sp, #40]	; 0x28
   14124:	bl	11338 <iswspace@plt>
   14128:	clz	r5, r0
   1412c:	lsr	r5, r5, #5
   14130:	mov	r3, #0
   14134:	cmp	r4, sl
   14138:	str	r4, [sp, #28]
   1413c:	strb	r3, [sp, #24]
   14140:	bcs	143a8 <sigaltstack@plt+0x2f08>
   14144:	ldrb	r3, [sp, #12]
   14148:	cmp	r3, #0
   1414c:	bne	141e4 <sigaltstack@plt+0x2d44>
   14150:	ldrb	r3, [r4]
   14154:	ldr	r2, [pc, #1060]	; 14580 <sigaltstack@plt+0x30e0>
   14158:	and	r1, r3, #31
   1415c:	lsr	r3, r3, #5
   14160:	ldr	r3, [r2, r3, lsl #2]
   14164:	lsr	r3, r3, r1
   14168:	tst	r3, #1
   1416c:	beq	141d0 <sigaltstack@plt+0x2d30>
   14170:	ldr	fp, [sp, #28]
   14174:	str	r8, [sp, #32]
   14178:	ldr	sl, [sp, #8]
   1417c:	ldrb	r2, [r4]
   14180:	add	r4, fp, #1
   14184:	strb	r8, [sp, #36]	; 0x24
   14188:	str	r2, [sp, #40]	; 0x28
   1418c:	cmp	r5, #0
   14190:	strb	r8, [sp, #24]
   14194:	beq	14114 <sigaltstack@plt+0x2c74>
   14198:	cmp	r5, #1
   1419c:	beq	142b4 <sigaltstack@plt+0x2e14>
   141a0:	cmp	r5, #2
   141a4:	bne	141c8 <sigaltstack@plt+0x2d28>
   141a8:	ldrb	r3, [sp, #36]	; 0x24
   141ac:	cmp	r3, #0
   141b0:	beq	141c8 <sigaltstack@plt+0x2d28>
   141b4:	ldr	r0, [sp, #40]	; 0x28
   141b8:	bl	11338 <iswspace@plt>
   141bc:	cmp	r0, #0
   141c0:	moveq	r5, #1
   141c4:	b	14130 <sigaltstack@plt+0x2c90>
   141c8:	mov	r5, #1
   141cc:	b	14130 <sigaltstack@plt+0x2c90>
   141d0:	mov	r0, r9
   141d4:	bl	111b8 <mbsinit@plt>
   141d8:	cmp	r0, #0
   141dc:	beq	14568 <sigaltstack@plt+0x30c8>
   141e0:	strb	r8, [sp, #12]
   141e4:	sub	r2, sl, r4
   141e8:	mov	r1, r4
   141ec:	mov	r3, r9
   141f0:	add	r0, sp, #40	; 0x28
   141f4:	bl	14e04 <sigaltstack@plt+0x3964>
   141f8:	cmn	r0, #1
   141fc:	mov	r4, r0
   14200:	str	r0, [sp, #32]
   14204:	beq	1438c <sigaltstack@plt+0x2eec>
   14208:	cmn	r0, #2
   1420c:	ldr	fp, [sp, #28]
   14210:	beq	143b8 <sigaltstack@plt+0x2f18>
   14214:	cmp	r0, #0
   14218:	bne	1423c <sigaltstack@plt+0x2d9c>
   1421c:	str	r8, [sp, #32]
   14220:	ldrb	r2, [fp]
   14224:	cmp	r2, #0
   14228:	bne	14554 <sigaltstack@plt+0x30b4>
   1422c:	ldr	r2, [sp, #40]	; 0x28
   14230:	cmp	r2, #0
   14234:	bne	14540 <sigaltstack@plt+0x30a0>
   14238:	mov	r4, #1
   1423c:	mov	r0, r9
   14240:	strb	r8, [sp, #36]	; 0x24
   14244:	bl	111b8 <mbsinit@plt>
   14248:	add	r4, fp, r4
   1424c:	ldr	sl, [sp, #8]
   14250:	cmp	r0, #0
   14254:	movne	r1, #0
   14258:	strbne	r1, [sp, #12]
   1425c:	b	1418c <sigaltstack@plt+0x2cec>
   14260:	ldr	r4, [sp, #28]
   14264:	mov	r3, #1
   14268:	mov	r2, #0
   1426c:	str	r3, [sp, #32]
   14270:	strb	r3, [sp, #24]
   14274:	strb	r2, [sp, #36]	; 0x24
   14278:	mov	r0, r4
   1427c:	bl	11344 <strlen@plt>
   14280:	mov	r1, r4
   14284:	add	r2, r0, #1
   14288:	mov	r0, r6
   1428c:	bl	11170 <memmove@plt>
   14290:	cmp	r5, #1
   14294:	bne	140d8 <sigaltstack@plt+0x2c38>
   14298:	ldr	r2, [sp, #68]	; 0x44
   1429c:	ldr	r3, [r7]
   142a0:	mov	r0, r6
   142a4:	cmp	r2, r3
   142a8:	bne	1454c <sigaltstack@plt+0x30ac>
   142ac:	add	sp, sp, #76	; 0x4c
   142b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142b4:	ldrb	r1, [sp, #36]	; 0x24
   142b8:	cmp	r1, #0
   142bc:	beq	14130 <sigaltstack@plt+0x2c90>
   142c0:	ldr	r0, [sp, #40]	; 0x28
   142c4:	bl	11338 <iswspace@plt>
   142c8:	ldr	r3, [sp, #4]
   142cc:	cmp	r0, #0
   142d0:	movne	r3, fp
   142d4:	str	r3, [sp, #4]
   142d8:	movne	r5, #2
   142dc:	b	14130 <sigaltstack@plt+0x2c90>
   142e0:	cmp	r5, #0
   142e4:	beq	14340 <sigaltstack@plt+0x2ea0>
   142e8:	ldrb	r4, [r6]
   142ec:	cmp	r4, #0
   142f0:	beq	14544 <sigaltstack@plt+0x30a4>
   142f4:	bl	11320 <__ctype_b_loc@plt>
   142f8:	mov	r8, r6
   142fc:	ldr	r2, [r0]
   14300:	b	14310 <sigaltstack@plt+0x2e70>
   14304:	ldrb	r4, [r8, #1]!
   14308:	cmp	r4, #0
   1430c:	beq	14320 <sigaltstack@plt+0x2e80>
   14310:	lsl	r4, r4, #1
   14314:	ldrh	r3, [r2, r4]
   14318:	tst	r3, #8192	; 0x2000
   1431c:	bne	14304 <sigaltstack@plt+0x2e64>
   14320:	mov	r0, r8
   14324:	bl	11344 <strlen@plt>
   14328:	mov	r1, r8
   1432c:	add	r2, r0, #1
   14330:	mov	r0, r6
   14334:	bl	11170 <memmove@plt>
   14338:	cmp	r5, #1
   1433c:	beq	14298 <sigaltstack@plt+0x2df8>
   14340:	mov	r0, r6
   14344:	bl	11344 <strlen@plt>
   14348:	sub	r0, r0, #1
   1434c:	adds	r4, r6, r0
   14350:	bcs	14298 <sigaltstack@plt+0x2df8>
   14354:	bl	11320 <__ctype_b_loc@plt>
   14358:	mov	r3, r4
   1435c:	mov	ip, #0
   14360:	ldr	r1, [r0]
   14364:	b	14374 <sigaltstack@plt+0x2ed4>
   14368:	cmp	r6, r3
   1436c:	strb	ip, [r3, #1]
   14370:	bhi	14298 <sigaltstack@plt+0x2df8>
   14374:	ldrb	r2, [r3], #-1
   14378:	lsl	r2, r2, #1
   1437c:	ldrh	r2, [r1, r2]
   14380:	tst	r2, #8192	; 0x2000
   14384:	bne	14368 <sigaltstack@plt+0x2ec8>
   14388:	b	14298 <sigaltstack@plt+0x2df8>
   1438c:	ldr	fp, [sp, #28]
   14390:	mov	r2, #0
   14394:	str	r8, [sp, #32]
   14398:	add	r4, fp, #1
   1439c:	strb	r2, [sp, #36]	; 0x24
   143a0:	ldr	sl, [sp, #8]
   143a4:	b	1418c <sigaltstack@plt+0x2cec>
   143a8:	cmp	r5, #2
   143ac:	ldreq	r2, [sp, #4]
   143b0:	strbeq	r3, [r2]
   143b4:	b	14298 <sigaltstack@plt+0x2df8>
   143b8:	ldr	r4, [sp, #8]
   143bc:	mov	r1, #0
   143c0:	sub	r2, r4, fp
   143c4:	str	r2, [sp, #32]
   143c8:	mov	sl, r4
   143cc:	strb	r1, [sp, #36]	; 0x24
   143d0:	b	1418c <sigaltstack@plt+0x2cec>
   143d4:	mov	r0, r6
   143d8:	str	r6, [sp, #28]
   143dc:	bl	11344 <strlen@plt>
   143e0:	add	r9, sp, #16
   143e4:	mov	r3, #0
   143e8:	str	r3, [sp, #16]
   143ec:	strb	r3, [sp, #12]
   143f0:	str	r3, [r9, #4]
   143f4:	strb	r3, [sp, #24]
   143f8:	add	sl, r6, r0
   143fc:	cmp	sl, r6
   14400:	str	sl, [sp, #8]
   14404:	movls	r4, r6
   14408:	bls	14278 <sigaltstack@plt+0x2dd8>
   1440c:	ldr	fp, [pc, #364]	; 14580 <sigaltstack@plt+0x30e0>
   14410:	mov	r4, r6
   14414:	mov	r8, #1
   14418:	b	14484 <sigaltstack@plt+0x2fe4>
   1441c:	ldrb	r3, [r4]
   14420:	and	r1, r3, #31
   14424:	lsr	r3, r3, #5
   14428:	ldr	r3, [fp, r3, lsl #2]
   1442c:	lsr	r3, r3, r1
   14430:	tst	r3, #1
   14434:	beq	144ec <sigaltstack@plt+0x304c>
   14438:	str	r8, [sp, #32]
   1443c:	ldrb	r3, [r4]
   14440:	ldr	r4, [sp, #28]
   14444:	strb	r8, [sp, #36]	; 0x24
   14448:	mov	sl, r3
   1444c:	strb	r8, [sp, #24]
   14450:	str	r3, [sp, #40]	; 0x28
   14454:	mov	r0, sl
   14458:	bl	11338 <iswspace@plt>
   1445c:	cmp	r0, #0
   14460:	beq	14278 <sigaltstack@plt+0x2dd8>
   14464:	ldr	r3, [sp, #32]
   14468:	ldr	sl, [sp, #8]
   1446c:	add	r4, r4, r3
   14470:	cmp	r4, sl
   14474:	mov	r3, #0
   14478:	str	r4, [sp, #28]
   1447c:	strb	r3, [sp, #24]
   14480:	bcs	14278 <sigaltstack@plt+0x2dd8>
   14484:	ldrb	r3, [sp, #12]
   14488:	cmp	r3, #0
   1448c:	beq	1441c <sigaltstack@plt+0x2f7c>
   14490:	sub	r2, sl, r4
   14494:	mov	r1, r4
   14498:	mov	r3, r9
   1449c:	add	r0, sp, #40	; 0x28
   144a0:	bl	14e04 <sigaltstack@plt+0x3964>
   144a4:	cmn	r0, #1
   144a8:	str	r0, [sp, #32]
   144ac:	beq	14260 <sigaltstack@plt+0x2dc0>
   144b0:	cmn	r0, #2
   144b4:	ldr	r4, [sp, #28]
   144b8:	beq	14504 <sigaltstack@plt+0x3064>
   144bc:	cmp	r0, #0
   144c0:	beq	14524 <sigaltstack@plt+0x3084>
   144c4:	ldr	sl, [sp, #40]	; 0x28
   144c8:	mov	r0, r9
   144cc:	strb	r8, [sp, #36]	; 0x24
   144d0:	bl	111b8 <mbsinit@plt>
   144d4:	cmp	r0, #0
   144d8:	movne	r2, #0
   144dc:	strbeq	r8, [sp, #24]
   144e0:	strbne	r8, [sp, #24]
   144e4:	strbne	r2, [sp, #12]
   144e8:	b	14454 <sigaltstack@plt+0x2fb4>
   144ec:	mov	r0, r9
   144f0:	bl	111b8 <mbsinit@plt>
   144f4:	cmp	r0, #0
   144f8:	beq	14568 <sigaltstack@plt+0x30c8>
   144fc:	strb	r8, [sp, #12]
   14500:	b	14490 <sigaltstack@plt+0x2ff0>
   14504:	ldr	r3, [sp, #8]
   14508:	mov	r2, #0
   1450c:	sub	r3, r3, r4
   14510:	str	r3, [sp, #32]
   14514:	mov	r3, #1
   14518:	strb	r2, [sp, #36]	; 0x24
   1451c:	strb	r3, [sp, #24]
   14520:	b	14278 <sigaltstack@plt+0x2dd8>
   14524:	str	r8, [sp, #32]
   14528:	ldrb	r3, [r4]
   1452c:	cmp	r3, #0
   14530:	bne	14554 <sigaltstack@plt+0x30b4>
   14534:	ldr	sl, [sp, #40]	; 0x28
   14538:	cmp	sl, #0
   1453c:	beq	144c8 <sigaltstack@plt+0x3028>
   14540:	bl	14078 <sigaltstack@plt+0x2bd8>
   14544:	mov	r8, r6
   14548:	b	14320 <sigaltstack@plt+0x2e80>
   1454c:	bl	11200 <__stack_chk_fail@plt>
   14550:	bl	14d30 <sigaltstack@plt+0x3890>
   14554:	ldr	r3, [pc, #40]	; 14584 <sigaltstack@plt+0x30e4>
   14558:	mov	r2, #169	; 0xa9
   1455c:	ldr	r1, [pc, #36]	; 14588 <sigaltstack@plt+0x30e8>
   14560:	ldr	r0, [pc, #36]	; 1458c <sigaltstack@plt+0x30ec>
   14564:	bl	11494 <__assert_fail@plt>
   14568:	ldr	r3, [pc, #20]	; 14584 <sigaltstack@plt+0x30e4>
   1456c:	mov	r2, #142	; 0x8e
   14570:	ldr	r1, [pc, #16]	; 14588 <sigaltstack@plt+0x30e8>
   14574:	ldr	r0, [pc, #20]	; 14590 <sigaltstack@plt+0x30f0>
   14578:	bl	11494 <__assert_fail@plt>
   1457c:	andeq	r8, r2, r8, lsl #30
   14580:	andeq	r8, r1, r4, lsr #6
   14584:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14588:			; <UNDEFINED> instruction: 0x00017fb0
   1458c:	andeq	r7, r1, r8, ror #30
   14590:	andeq	r7, r1, r0, asr pc
   14594:	push	{r4, r5, r6, lr}
   14598:	sub	sp, sp, #32
   1459c:	cmp	r1, #0
   145a0:	mov	r5, r0
   145a4:	ldr	r4, [sp, #48]	; 0x30
   145a8:	ldr	r6, [sp, #52]	; 0x34
   145ac:	beq	146a8 <sigaltstack@plt+0x3208>
   145b0:	strd	r2, [sp]
   145b4:	mov	r3, r1
   145b8:	ldr	r2, [pc, #824]	; 148f8 <sigaltstack@plt+0x3458>
   145bc:	mov	r1, #1
   145c0:	bl	113a4 <__fprintf_chk@plt>
   145c4:	mov	r2, #5
   145c8:	ldr	r1, [pc, #812]	; 148fc <sigaltstack@plt+0x345c>
   145cc:	mov	r0, #0
   145d0:	bl	111e8 <dcgettext@plt>
   145d4:	ldr	r3, [pc, #804]	; 14900 <sigaltstack@plt+0x3460>
   145d8:	ldr	r2, [pc, #804]	; 14904 <sigaltstack@plt+0x3464>
   145dc:	str	r3, [sp]
   145e0:	mov	r1, #1
   145e4:	mov	r3, r0
   145e8:	mov	r0, r5
   145ec:	bl	113a4 <__fprintf_chk@plt>
   145f0:	ldr	r1, [pc, #784]	; 14908 <sigaltstack@plt+0x3468>
   145f4:	mov	r2, #5
   145f8:	mov	r0, #0
   145fc:	bl	111e8 <dcgettext@plt>
   14600:	mov	r1, r5
   14604:	bl	11128 <fputs_unlocked@plt>
   14608:	cmp	r6, #9
   1460c:	ldrls	pc, [pc, r6, lsl #2]
   14610:	b	148ec <sigaltstack@plt+0x344c>
   14614:	andeq	r4, r1, r0, lsr #13
   14618:	andeq	r4, r1, r0, asr #13
   1461c:	andeq	r4, r1, ip, ror #13
   14620:	andeq	r4, r1, r0, lsr #14
   14624:	andeq	r4, r1, ip, asr r7
   14628:	muleq	r1, ip, r7
   1462c:	andeq	r4, r1, r4, ror #15
   14630:	andeq	r4, r1, r4, lsr r8
   14634:	andeq	r4, r1, ip, lsl #17
   14638:	andeq	r4, r1, ip, lsr r6
   1463c:	ldr	r1, [pc, #712]	; 1490c <sigaltstack@plt+0x346c>
   14640:	mov	r2, #5
   14644:	mov	r0, #0
   14648:	bl	111e8 <dcgettext@plt>
   1464c:	ldr	r2, [r4, #32]
   14650:	ldr	r3, [r4, #28]
   14654:	ldr	r1, [r4, #24]
   14658:	str	r2, [sp, #28]
   1465c:	ldr	r2, [r4, #20]
   14660:	str	r3, [sp, #24]
   14664:	ldr	r3, [r4, #16]
   14668:	str	r1, [sp, #20]
   1466c:	ldr	r1, [r4, #12]
   14670:	str	r2, [sp, #16]
   14674:	ldr	r2, [r4, #8]
   14678:	str	r3, [sp, #12]
   1467c:	ldr	r3, [r4, #4]
   14680:	str	r1, [sp, #8]
   14684:	str	r2, [sp, #4]
   14688:	str	r3, [sp]
   1468c:	mov	r1, #1
   14690:	ldr	r3, [r4]
   14694:	mov	r2, r0
   14698:	mov	r0, r5
   1469c:	bl	113a4 <__fprintf_chk@plt>
   146a0:	add	sp, sp, #32
   146a4:	pop	{r4, r5, r6, pc}
   146a8:	str	r3, [sp]
   146ac:	mov	r1, #1
   146b0:	mov	r3, r2
   146b4:	ldr	r2, [pc, #596]	; 14910 <sigaltstack@plt+0x3470>
   146b8:	bl	113a4 <__fprintf_chk@plt>
   146bc:	b	145c4 <sigaltstack@plt+0x3124>
   146c0:	mov	r2, #5
   146c4:	ldr	r1, [pc, #584]	; 14914 <sigaltstack@plt+0x3474>
   146c8:	mov	r0, #0
   146cc:	bl	111e8 <dcgettext@plt>
   146d0:	ldr	r3, [r4]
   146d4:	mov	r1, #1
   146d8:	mov	r2, r0
   146dc:	mov	r0, r5
   146e0:	add	sp, sp, #32
   146e4:	pop	{r4, r5, r6, lr}
   146e8:	b	113a4 <__fprintf_chk@plt>
   146ec:	mov	r2, #5
   146f0:	ldr	r1, [pc, #544]	; 14918 <sigaltstack@plt+0x3478>
   146f4:	mov	r0, #0
   146f8:	bl	111e8 <dcgettext@plt>
   146fc:	ldr	r2, [r4, #4]
   14700:	ldr	r3, [r4]
   14704:	mov	r1, #1
   14708:	str	r2, [sp, #48]	; 0x30
   1470c:	mov	r2, r0
   14710:	mov	r0, r5
   14714:	add	sp, sp, #32
   14718:	pop	{r4, r5, r6, lr}
   1471c:	b	113a4 <__fprintf_chk@plt>
   14720:	mov	r2, #5
   14724:	ldr	r1, [pc, #496]	; 1491c <sigaltstack@plt+0x347c>
   14728:	mov	r0, #0
   1472c:	bl	111e8 <dcgettext@plt>
   14730:	ldr	r2, [r4, #8]
   14734:	ldr	r3, [r4, #4]
   14738:	mov	r1, #1
   1473c:	str	r2, [sp, #52]	; 0x34
   14740:	str	r3, [sp, #48]	; 0x30
   14744:	ldr	r3, [r4]
   14748:	mov	r2, r0
   1474c:	mov	r0, r5
   14750:	add	sp, sp, #32
   14754:	pop	{r4, r5, r6, lr}
   14758:	b	113a4 <__fprintf_chk@plt>
   1475c:	mov	r2, #5
   14760:	ldr	r1, [pc, #440]	; 14920 <sigaltstack@plt+0x3480>
   14764:	mov	r0, #0
   14768:	bl	111e8 <dcgettext@plt>
   1476c:	ldr	r1, [r4, #12]
   14770:	ldr	r2, [r4, #8]
   14774:	ldr	r3, [r4, #4]
   14778:	str	r1, [sp, #8]
   1477c:	str	r2, [sp, #4]
   14780:	str	r3, [sp]
   14784:	mov	r1, #1
   14788:	ldr	r3, [r4]
   1478c:	mov	r2, r0
   14790:	mov	r0, r5
   14794:	bl	113a4 <__fprintf_chk@plt>
   14798:	b	146a0 <sigaltstack@plt+0x3200>
   1479c:	mov	r2, #5
   147a0:	ldr	r1, [pc, #380]	; 14924 <sigaltstack@plt+0x3484>
   147a4:	mov	r0, #0
   147a8:	bl	111e8 <dcgettext@plt>
   147ac:	ldr	r3, [r4, #16]
   147b0:	ldr	r1, [r4, #12]
   147b4:	ldr	r2, [r4, #8]
   147b8:	str	r3, [sp, #12]
   147bc:	ldr	r3, [r4, #4]
   147c0:	str	r1, [sp, #8]
   147c4:	str	r2, [sp, #4]
   147c8:	str	r3, [sp]
   147cc:	mov	r1, #1
   147d0:	ldr	r3, [r4]
   147d4:	mov	r2, r0
   147d8:	mov	r0, r5
   147dc:	bl	113a4 <__fprintf_chk@plt>
   147e0:	b	146a0 <sigaltstack@plt+0x3200>
   147e4:	mov	r2, #5
   147e8:	ldr	r1, [pc, #312]	; 14928 <sigaltstack@plt+0x3488>
   147ec:	mov	r0, #0
   147f0:	bl	111e8 <dcgettext@plt>
   147f4:	ldr	r2, [r4, #20]
   147f8:	ldr	r3, [r4, #16]
   147fc:	ldr	r1, [r4, #12]
   14800:	str	r2, [sp, #16]
   14804:	ldr	r2, [r4, #8]
   14808:	str	r3, [sp, #12]
   1480c:	ldr	r3, [r4, #4]
   14810:	str	r1, [sp, #8]
   14814:	str	r2, [sp, #4]
   14818:	str	r3, [sp]
   1481c:	mov	r1, #1
   14820:	ldr	r3, [r4]
   14824:	mov	r2, r0
   14828:	mov	r0, r5
   1482c:	bl	113a4 <__fprintf_chk@plt>
   14830:	b	146a0 <sigaltstack@plt+0x3200>
   14834:	mov	r2, #5
   14838:	ldr	r1, [pc, #236]	; 1492c <sigaltstack@plt+0x348c>
   1483c:	mov	r0, #0
   14840:	bl	111e8 <dcgettext@plt>
   14844:	ldr	r1, [r4, #24]
   14848:	ldr	r2, [r4, #20]
   1484c:	ldr	r3, [r4, #16]
   14850:	str	r1, [sp, #20]
   14854:	ldr	r1, [r4, #12]
   14858:	str	r2, [sp, #16]
   1485c:	ldr	r2, [r4, #8]
   14860:	str	r3, [sp, #12]
   14864:	ldr	r3, [r4, #4]
   14868:	str	r1, [sp, #8]
   1486c:	str	r2, [sp, #4]
   14870:	str	r3, [sp]
   14874:	mov	r1, #1
   14878:	ldr	r3, [r4]
   1487c:	mov	r2, r0
   14880:	mov	r0, r5
   14884:	bl	113a4 <__fprintf_chk@plt>
   14888:	b	146a0 <sigaltstack@plt+0x3200>
   1488c:	mov	r2, #5
   14890:	ldr	r1, [pc, #152]	; 14930 <sigaltstack@plt+0x3490>
   14894:	mov	r0, #0
   14898:	bl	111e8 <dcgettext@plt>
   1489c:	ldr	r3, [r4, #28]
   148a0:	ldr	r1, [r4, #24]
   148a4:	ldr	r2, [r4, #20]
   148a8:	str	r3, [sp, #24]
   148ac:	ldr	r3, [r4, #16]
   148b0:	str	r1, [sp, #20]
   148b4:	ldr	r1, [r4, #12]
   148b8:	str	r2, [sp, #16]
   148bc:	ldr	r2, [r4, #8]
   148c0:	str	r3, [sp, #12]
   148c4:	ldr	r3, [r4, #4]
   148c8:	str	r1, [sp, #8]
   148cc:	str	r2, [sp, #4]
   148d0:	str	r3, [sp]
   148d4:	mov	r1, #1
   148d8:	ldr	r3, [r4]
   148dc:	mov	r2, r0
   148e0:	mov	r0, r5
   148e4:	bl	113a4 <__fprintf_chk@plt>
   148e8:	b	146a0 <sigaltstack@plt+0x3200>
   148ec:	mov	r2, #5
   148f0:	ldr	r1, [pc, #60]	; 14934 <sigaltstack@plt+0x3494>
   148f4:	b	14644 <sigaltstack@plt+0x31a4>
   148f8:			; <UNDEFINED> instruction: 0x00017fbc
   148fc:	ldrdeq	r7, [r1], -r0
   14900:	andeq	r0, r0, r2, ror #15
   14904:	andeq	r8, r1, ip, asr #5
   14908:	ldrdeq	r7, [r1], -r4
   1490c:	andeq	r8, r1, ip, lsr #3
   14910:	andeq	r7, r1, r8, asr #31
   14914:	andeq	r8, r1, r0, lsr #1
   14918:	strheq	r8, [r1], -r0
   1491c:	andeq	r8, r1, r8, asr #1
   14920:	andeq	r8, r1, r4, ror #1
   14924:	andeq	r8, r1, r4, lsl #2
   14928:	andeq	r8, r1, r8, lsr #2
   1492c:	andeq	r8, r1, r0, asr r1
   14930:	andeq	r8, r1, ip, ror r1
   14934:	andeq	r8, r1, r0, ror #3
   14938:	push	{r4, r5, lr}
   1493c:	sub	sp, sp, #12
   14940:	ldr	r5, [sp, #24]
   14944:	ldr	ip, [r5]
   14948:	cmp	ip, #0
   1494c:	beq	14968 <sigaltstack@plt+0x34c8>
   14950:	mov	lr, r5
   14954:	mov	ip, #0
   14958:	ldr	r4, [lr, #4]!
   1495c:	add	ip, ip, #1
   14960:	cmp	r4, #0
   14964:	bne	14958 <sigaltstack@plt+0x34b8>
   14968:	stm	sp, {r5, ip}
   1496c:	bl	14594 <sigaltstack@plt+0x30f4>
   14970:	add	sp, sp, #12
   14974:	pop	{r4, r5, pc}
   14978:	push	{r4, r5, r6, lr}
   1497c:	sub	sp, sp, #56	; 0x38
   14980:	ldr	r6, [pc, #88]	; 149e0 <sigaltstack@plt+0x3540>
   14984:	ldr	r5, [sp, #72]	; 0x48
   14988:	add	r4, sp, #8
   1498c:	ldr	ip, [r6]
   14990:	str	ip, [sp, #52]	; 0x34
   14994:	mov	ip, #0
   14998:	ldr	lr, [r5], #4
   1499c:	cmp	lr, #0
   149a0:	str	lr, [r4, #4]!
   149a4:	beq	149b4 <sigaltstack@plt+0x3514>
   149a8:	add	ip, ip, #1
   149ac:	cmp	ip, #10
   149b0:	bne	14998 <sigaltstack@plt+0x34f8>
   149b4:	add	lr, sp, #12
   149b8:	str	ip, [sp, #4]
   149bc:	str	lr, [sp]
   149c0:	bl	14594 <sigaltstack@plt+0x30f4>
   149c4:	ldr	r2, [sp, #52]	; 0x34
   149c8:	ldr	r3, [r6]
   149cc:	cmp	r2, r3
   149d0:	bne	149dc <sigaltstack@plt+0x353c>
   149d4:	add	sp, sp, #56	; 0x38
   149d8:	pop	{r4, r5, r6, pc}
   149dc:	bl	11200 <__stack_chk_fail@plt>
   149e0:	andeq	r8, r2, r8, lsl #30
   149e4:	push	{r3}		; (str r3, [sp, #-4]!)
   149e8:	mov	ip, #0
   149ec:	push	{r4, r5, r6, lr}
   149f0:	sub	sp, sp, #60	; 0x3c
   149f4:	ldr	r6, [pc, #100]	; 14a60 <sigaltstack@plt+0x35c0>
   149f8:	add	r5, sp, #8
   149fc:	add	r4, sp, #80	; 0x50
   14a00:	ldr	r3, [r6]
   14a04:	str	r4, [sp, #8]
   14a08:	str	r3, [sp, #52]	; 0x34
   14a0c:	ldr	r3, [sp, #76]	; 0x4c
   14a10:	ldr	lr, [r4], #4
   14a14:	cmp	lr, #0
   14a18:	str	lr, [r5, #4]!
   14a1c:	beq	14a2c <sigaltstack@plt+0x358c>
   14a20:	add	ip, ip, #1
   14a24:	cmp	ip, #10
   14a28:	bne	14a10 <sigaltstack@plt+0x3570>
   14a2c:	add	lr, sp, #12
   14a30:	str	ip, [sp, #4]
   14a34:	str	lr, [sp]
   14a38:	bl	14594 <sigaltstack@plt+0x30f4>
   14a3c:	ldr	r2, [sp, #52]	; 0x34
   14a40:	ldr	r3, [r6]
   14a44:	cmp	r2, r3
   14a48:	bne	14a5c <sigaltstack@plt+0x35bc>
   14a4c:	add	sp, sp, #60	; 0x3c
   14a50:	pop	{r4, r5, r6, lr}
   14a54:	add	sp, sp, #4
   14a58:	bx	lr
   14a5c:	bl	11200 <__stack_chk_fail@plt>
   14a60:	andeq	r8, r2, r8, lsl #30
   14a64:	push	{r4, lr}
   14a68:	mov	r2, #5
   14a6c:	ldr	r1, [pc, #88]	; 14acc <sigaltstack@plt+0x362c>
   14a70:	mov	r0, #0
   14a74:	bl	111e8 <dcgettext@plt>
   14a78:	ldr	r2, [pc, #80]	; 14ad0 <sigaltstack@plt+0x3630>
   14a7c:	mov	r1, r0
   14a80:	mov	r0, #1
   14a84:	bl	1138c <__printf_chk@plt>
   14a88:	mov	r2, #5
   14a8c:	ldr	r1, [pc, #64]	; 14ad4 <sigaltstack@plt+0x3634>
   14a90:	mov	r0, #0
   14a94:	bl	111e8 <dcgettext@plt>
   14a98:	ldr	r3, [pc, #56]	; 14ad8 <sigaltstack@plt+0x3638>
   14a9c:	ldr	r2, [pc, #56]	; 14adc <sigaltstack@plt+0x363c>
   14aa0:	mov	r1, r0
   14aa4:	mov	r0, #1
   14aa8:	bl	1138c <__printf_chk@plt>
   14aac:	ldr	r1, [pc, #44]	; 14ae0 <sigaltstack@plt+0x3640>
   14ab0:	mov	r2, #5
   14ab4:	mov	r0, #0
   14ab8:	bl	111e8 <dcgettext@plt>
   14abc:	ldr	r3, [pc, #32]	; 14ae4 <sigaltstack@plt+0x3644>
   14ac0:	pop	{r4, lr}
   14ac4:	ldr	r1, [r3]
   14ac8:	b	11128 <fputs_unlocked@plt>
   14acc:	andeq	r8, r1, ip, lsl r2
   14ad0:	andeq	r8, r1, r4, lsr r2
   14ad4:	andeq	r8, r1, ip, asr #4
   14ad8:	andeq	r8, r1, r0, ror #4
   14adc:	andeq	r7, r1, ip, asr #12
   14ae0:	andeq	r8, r1, r8, lsl #5
   14ae4:	andeq	r9, r2, r4, ror r1
   14ae8:	push	{r4, lr}
   14aec:	mov	r4, r0
   14af0:	bl	112cc <malloc@plt>
   14af4:	adds	r4, r4, #0
   14af8:	movne	r4, #1
   14afc:	cmp	r0, #0
   14b00:	movne	r4, #0
   14b04:	cmp	r4, #0
   14b08:	popeq	{r4, pc}
   14b0c:	bl	14d30 <sigaltstack@plt+0x3890>
   14b10:	push	{r4, r5, r6, lr}
   14b14:	umull	r4, r5, r0, r1
   14b18:	adds	r3, r5, #0
   14b1c:	movne	r3, #1
   14b20:	cmp	r4, #0
   14b24:	blt	14b3c <sigaltstack@plt+0x369c>
   14b28:	cmp	r3, #0
   14b2c:	bne	14b3c <sigaltstack@plt+0x369c>
   14b30:	mul	r0, r1, r0
   14b34:	pop	{r4, r5, r6, lr}
   14b38:	b	14ae8 <sigaltstack@plt+0x3648>
   14b3c:	bl	14d30 <sigaltstack@plt+0x3890>
   14b40:	b	14ae8 <sigaltstack@plt+0x3648>
   14b44:	adds	r3, r0, #0
   14b48:	movne	r3, #1
   14b4c:	cmp	r1, #0
   14b50:	movne	r3, #0
   14b54:	cmp	r3, #0
   14b58:	push	{r4, lr}
   14b5c:	bne	14b84 <sigaltstack@plt+0x36e4>
   14b60:	mov	r4, r1
   14b64:	bl	11224 <realloc@plt>
   14b68:	adds	r4, r4, #0
   14b6c:	movne	r4, #1
   14b70:	cmp	r0, #0
   14b74:	movne	r4, #0
   14b78:	cmp	r4, #0
   14b7c:	popeq	{r4, pc}
   14b80:	bl	14d30 <sigaltstack@plt+0x3890>
   14b84:	bl	1117c <free@plt>
   14b88:	mov	r0, #0
   14b8c:	pop	{r4, pc}
   14b90:	push	{r4, r5, r6, lr}
   14b94:	umull	r4, r5, r1, r2
   14b98:	adds	r3, r5, #0
   14b9c:	movne	r3, #1
   14ba0:	cmp	r4, #0
   14ba4:	blt	14bbc <sigaltstack@plt+0x371c>
   14ba8:	cmp	r3, #0
   14bac:	bne	14bbc <sigaltstack@plt+0x371c>
   14bb0:	mul	r1, r2, r1
   14bb4:	pop	{r4, r5, r6, lr}
   14bb8:	b	14b44 <sigaltstack@plt+0x36a4>
   14bbc:	bl	14d30 <sigaltstack@plt+0x3890>
   14bc0:	push	{r4, r5, r6, r7, r8, lr}
   14bc4:	subs	r7, r0, #0
   14bc8:	mov	r6, r1
   14bcc:	mov	r5, r2
   14bd0:	ldr	r4, [r1]
   14bd4:	beq	14c08 <sigaltstack@plt+0x3768>
   14bd8:	mov	r1, r2
   14bdc:	ldr	r0, [pc, #104]	; 14c4c <sigaltstack@plt+0x37ac>
   14be0:	bl	16e24 <sigaltstack@plt+0x5984>
   14be4:	cmp	r0, r4
   14be8:	bls	14c2c <sigaltstack@plt+0x378c>
   14bec:	add	r3, r4, #1
   14bf0:	add	r4, r3, r4, lsr #1
   14bf4:	str	r4, [r6]
   14bf8:	mul	r1, r5, r4
   14bfc:	mov	r0, r7
   14c00:	pop	{r4, r5, r6, r7, r8, lr}
   14c04:	b	14b44 <sigaltstack@plt+0x36a4>
   14c08:	cmp	r4, #0
   14c0c:	beq	14c30 <sigaltstack@plt+0x3790>
   14c10:	umull	r0, r1, r4, r5
   14c14:	adds	r3, r1, #0
   14c18:	movne	r3, #1
   14c1c:	cmp	r0, #0
   14c20:	blt	14c2c <sigaltstack@plt+0x378c>
   14c24:	cmp	r3, #0
   14c28:	beq	14bf4 <sigaltstack@plt+0x3754>
   14c2c:	bl	14d30 <sigaltstack@plt+0x3890>
   14c30:	mov	r1, r2
   14c34:	mov	r0, #64	; 0x40
   14c38:	bl	16e24 <sigaltstack@plt+0x5984>
   14c3c:	cmp	r5, #64	; 0x40
   14c40:	movls	r4, r0
   14c44:	addhi	r4, r0, #1
   14c48:	b	14c10 <sigaltstack@plt+0x3770>
   14c4c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14c50:	cmp	r0, #0
   14c54:	ldr	r3, [r1]
   14c58:	beq	14c7c <sigaltstack@plt+0x37dc>
   14c5c:	ldr	r2, [pc, #60]	; 14ca0 <sigaltstack@plt+0x3800>
   14c60:	cmp	r3, r2
   14c64:	bhi	14c98 <sigaltstack@plt+0x37f8>
   14c68:	add	r2, r3, #1
   14c6c:	add	r3, r2, r3, lsr #1
   14c70:	str	r3, [r1]
   14c74:	mov	r1, r3
   14c78:	b	14b44 <sigaltstack@plt+0x36a4>
   14c7c:	cmp	r3, #0
   14c80:	bne	14c94 <sigaltstack@plt+0x37f4>
   14c84:	mov	r3, #64	; 0x40
   14c88:	str	r3, [r1]
   14c8c:	mov	r1, r3
   14c90:	b	14b44 <sigaltstack@plt+0x36a4>
   14c94:	bge	14c70 <sigaltstack@plt+0x37d0>
   14c98:	push	{r4, lr}
   14c9c:	bl	14d30 <sigaltstack@plt+0x3890>
   14ca0:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14ca4:	push	{r4, lr}
   14ca8:	mov	r4, r0
   14cac:	bl	14ae8 <sigaltstack@plt+0x3648>
   14cb0:	mov	r2, r4
   14cb4:	mov	r1, #0
   14cb8:	pop	{r4, lr}
   14cbc:	b	11380 <memset@plt>
   14cc0:	push	{r4, r5, r6, lr}
   14cc4:	umull	r4, r5, r0, r1
   14cc8:	adds	r3, r5, #0
   14ccc:	movne	r3, #1
   14cd0:	cmp	r4, #0
   14cd4:	blt	14cec <sigaltstack@plt+0x384c>
   14cd8:	cmp	r3, #0
   14cdc:	bne	14cec <sigaltstack@plt+0x384c>
   14ce0:	bl	1111c <calloc@plt>
   14ce4:	cmp	r0, #0
   14ce8:	popne	{r4, r5, r6, pc}
   14cec:	bl	14d30 <sigaltstack@plt+0x3890>
   14cf0:	push	{r4, r5, r6, lr}
   14cf4:	mov	r4, r1
   14cf8:	mov	r5, r0
   14cfc:	mov	r0, r1
   14d00:	bl	14ae8 <sigaltstack@plt+0x3648>
   14d04:	mov	r2, r4
   14d08:	mov	r1, r5
   14d0c:	pop	{r4, r5, r6, lr}
   14d10:	b	11194 <memcpy@plt>
   14d14:	push	{r4, lr}
   14d18:	mov	r4, r0
   14d1c:	bl	11344 <strlen@plt>
   14d20:	add	r1, r0, #1
   14d24:	mov	r0, r4
   14d28:	pop	{r4, lr}
   14d2c:	b	14cf0 <sigaltstack@plt+0x3850>
   14d30:	ldr	r3, [pc, #44]	; 14d64 <sigaltstack@plt+0x38c4>
   14d34:	push	{r4, lr}
   14d38:	mov	r2, #5
   14d3c:	ldr	r1, [pc, #36]	; 14d68 <sigaltstack@plt+0x38c8>
   14d40:	mov	r0, #0
   14d44:	ldr	r4, [r3]
   14d48:	bl	111e8 <dcgettext@plt>
   14d4c:	ldr	r2, [pc, #24]	; 14d6c <sigaltstack@plt+0x38cc>
   14d50:	mov	r1, #0
   14d54:	mov	r3, r0
   14d58:	mov	r0, r4
   14d5c:	bl	1129c <error@plt>
   14d60:	bl	1147c <abort@plt>
   14d64:	andeq	r9, r2, r4, asr r1
   14d68:	strdeq	r8, [r1], -ip
   14d6c:	andeq	r7, r1, ip, lsl r4
   14d70:	push	{r4, lr}
   14d74:	sub	sp, sp, #8
   14d78:	ldr	ip, [sp, #16]
   14d7c:	str	ip, [sp]
   14d80:	bl	16670 <sigaltstack@plt+0x51d0>
   14d84:	subs	r4, r0, #0
   14d88:	blt	14d98 <sigaltstack@plt+0x38f8>
   14d8c:	mov	r0, r4
   14d90:	add	sp, sp, #8
   14d94:	pop	{r4, pc}
   14d98:	bl	1135c <__errno_location@plt>
   14d9c:	ldr	r3, [r0]
   14da0:	cmp	r3, #12
   14da4:	bne	14d8c <sigaltstack@plt+0x38ec>
   14da8:	bl	14d30 <sigaltstack@plt+0x3890>
   14dac:	push	{r4, lr}
   14db0:	bl	16908 <sigaltstack@plt+0x5468>
   14db4:	subs	r4, r0, #0
   14db8:	beq	14dc4 <sigaltstack@plt+0x3924>
   14dbc:	mov	r0, r4
   14dc0:	pop	{r4, pc}
   14dc4:	bl	1135c <__errno_location@plt>
   14dc8:	ldr	r3, [r0]
   14dcc:	cmp	r3, #12
   14dd0:	bne	14dbc <sigaltstack@plt+0x391c>
   14dd4:	bl	14d30 <sigaltstack@plt+0x3890>
   14dd8:	push	{r4, lr}
   14ddc:	bl	16af0 <sigaltstack@plt+0x5650>
   14de0:	subs	r4, r0, #0
   14de4:	beq	14df0 <sigaltstack@plt+0x3950>
   14de8:	mov	r0, r4
   14dec:	pop	{r4, pc}
   14df0:	bl	1135c <__errno_location@plt>
   14df4:	ldr	r3, [r0]
   14df8:	cmp	r3, #12
   14dfc:	bne	14de8 <sigaltstack@plt+0x3948>
   14e00:	bl	14d30 <sigaltstack@plt+0x3890>
   14e04:	push	{r4, r5, r6, r7, r8, lr}
   14e08:	subs	r7, r0, #0
   14e0c:	ldr	r5, [pc, #108]	; 14e80 <sigaltstack@plt+0x39e0>
   14e10:	sub	sp, sp, #8
   14e14:	mov	r8, r1
   14e18:	ldr	r1, [r5]
   14e1c:	moveq	r7, sp
   14e20:	str	r1, [sp, #4]
   14e24:	mov	r0, r7
   14e28:	mov	r1, r8
   14e2c:	mov	r6, r2
   14e30:	bl	11290 <mbrtowc@plt>
   14e34:	cmp	r6, #0
   14e38:	cmnne	r0, #3
   14e3c:	mov	r4, r0
   14e40:	bhi	14e60 <sigaltstack@plt+0x39c0>
   14e44:	ldr	r2, [sp, #4]
   14e48:	ldr	r3, [r5]
   14e4c:	mov	r0, r4
   14e50:	cmp	r2, r3
   14e54:	bne	14e7c <sigaltstack@plt+0x39dc>
   14e58:	add	sp, sp, #8
   14e5c:	pop	{r4, r5, r6, r7, r8, pc}
   14e60:	mov	r0, #0
   14e64:	bl	14ef4 <sigaltstack@plt+0x3a54>
   14e68:	cmp	r0, #0
   14e6c:	moveq	r4, #1
   14e70:	ldrbeq	r3, [r8]
   14e74:	streq	r3, [r7]
   14e78:	b	14e44 <sigaltstack@plt+0x39a4>
   14e7c:	bl	11200 <__stack_chk_fail@plt>
   14e80:	andeq	r8, r2, r8, lsl #30
   14e84:	cmp	r0, r1
   14e88:	beq	14eec <sigaltstack@plt+0x3a4c>
   14e8c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e90:	sub	r0, r0, #1
   14e94:	sub	r1, r1, #1
   14e98:	b	14ea4 <sigaltstack@plt+0x3a04>
   14e9c:	cmp	r3, r2
   14ea0:	bne	14edc <sigaltstack@plt+0x3a3c>
   14ea4:	ldrb	r3, [r0, #1]!
   14ea8:	sub	r2, r3, #65	; 0x41
   14eac:	cmp	r2, #25
   14eb0:	ldrb	r2, [r1, #1]!
   14eb4:	mov	ip, r3
   14eb8:	addls	ip, r3, #32
   14ebc:	sub	lr, r2, #65	; 0x41
   14ec0:	uxtbls	r3, ip
   14ec4:	cmp	lr, #25
   14ec8:	mov	lr, r2
   14ecc:	addls	lr, r2, #32
   14ed0:	uxtbls	r2, lr
   14ed4:	cmp	r3, #0
   14ed8:	bne	14e9c <sigaltstack@plt+0x39fc>
   14edc:	uxtb	ip, ip
   14ee0:	uxtb	r0, lr
   14ee4:	sub	r0, ip, r0
   14ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   14eec:	mov	r0, #0
   14ef0:	bx	lr
   14ef4:	push	{r4, lr}
   14ef8:	mov	r1, #0
   14efc:	bl	113f8 <setlocale@plt>
   14f00:	subs	r4, r0, #0
   14f04:	beq	14f30 <sigaltstack@plt+0x3a90>
   14f08:	ldr	r1, [pc, #40]	; 14f38 <sigaltstack@plt+0x3a98>
   14f0c:	bl	11158 <strcmp@plt>
   14f10:	cmp	r0, #0
   14f14:	popeq	{r4, pc}
   14f18:	mov	r0, r4
   14f1c:	ldr	r1, [pc, #24]	; 14f3c <sigaltstack@plt+0x3a9c>
   14f20:	bl	11158 <strcmp@plt>
   14f24:	adds	r0, r0, #0
   14f28:	movne	r0, #1
   14f2c:	pop	{r4, pc}
   14f30:	mov	r0, #1
   14f34:	pop	{r4, pc}
   14f38:	andeq	r8, r1, r0, lsl r3
   14f3c:	andeq	r8, r1, r4, lsl r3
   14f40:	push	{r4, lr}
   14f44:	mov	r0, #14
   14f48:	bl	11428 <nl_langinfo@plt>
   14f4c:	cmp	r0, #0
   14f50:	beq	14f68 <sigaltstack@plt+0x3ac8>
   14f54:	ldrb	r2, [r0]
   14f58:	ldr	r3, [pc, #16]	; 14f70 <sigaltstack@plt+0x3ad0>
   14f5c:	cmp	r2, #0
   14f60:	moveq	r0, r3
   14f64:	pop	{r4, pc}
   14f68:	ldr	r0, [pc]	; 14f70 <sigaltstack@plt+0x3ad0>
   14f6c:	pop	{r4, pc}
   14f70:	andeq	r8, r1, ip, lsl r3
   14f74:	push	{r4, lr}
   14f78:	mov	r4, r0
   14f7c:	bl	11164 <wcwidth@plt>
   14f80:	cmp	r0, #0
   14f84:	popge	{r4, pc}
   14f88:	mov	r0, r4
   14f8c:	bl	1123c <iswcntrl@plt>
   14f90:	clz	r0, r0
   14f94:	lsr	r0, r0, #5
   14f98:	pop	{r4, pc}
   14f9c:	mov	r3, r1
   14fa0:	push	{r4, r5, r6, lr}
   14fa4:	mov	r4, r1
   14fa8:	ldr	r1, [r3], #16
   14fac:	ldr	r2, [r4, #4]
   14fb0:	cmp	r1, r3
   14fb4:	mov	r5, r0
   14fb8:	strne	r1, [r0]
   14fbc:	beq	14fdc <sigaltstack@plt+0x3b3c>
   14fc0:	ldrb	r3, [r4, #8]
   14fc4:	str	r2, [r5, #4]
   14fc8:	cmp	r3, #0
   14fcc:	strb	r3, [r5, #8]
   14fd0:	ldrne	r3, [r4, #12]
   14fd4:	strne	r3, [r5, #12]
   14fd8:	pop	{r4, r5, r6, pc}
   14fdc:	add	r3, r0, #16
   14fe0:	mov	r0, r3
   14fe4:	bl	11194 <memcpy@plt>
   14fe8:	ldr	r2, [r4, #4]
   14fec:	str	r0, [r5]
   14ff0:	b	14fc0 <sigaltstack@plt+0x3b20>
   14ff4:	ldr	r3, [pc, #20]	; 15010 <sigaltstack@plt+0x3b70>
   14ff8:	lsr	r2, r0, #5
   14ffc:	and	r0, r0, #31
   15000:	ldr	r3, [r3, r2, lsl #2]
   15004:	lsr	r0, r3, r0
   15008:	and	r0, r0, #1
   1500c:	bx	lr
   15010:	andeq	r8, r1, r4, lsr #6
   15014:	push	{r4, r5, r6, r7, r8, fp, lr}
   15018:	mov	r7, r2
   1501c:	ldr	r6, [pc, #368]	; 15194 <sigaltstack@plt+0x3cf4>
   15020:	add	fp, sp, #24
   15024:	lsrs	r2, r7, #30
   15028:	sub	sp, sp, #12
   1502c:	ldr	lr, [r6]
   15030:	movne	ip, #1
   15034:	moveq	ip, #0
   15038:	lsls	r2, r7, #2
   1503c:	str	lr, [fp, #-32]	; 0xffffffe0
   15040:	bmi	15154 <sigaltstack@plt+0x3cb4>
   15044:	cmp	ip, #0
   15048:	bne	15154 <sigaltstack@plt+0x3cb4>
   1504c:	cmp	r2, #4016	; 0xfb0
   15050:	mov	r5, r0
   15054:	mov	r4, r1
   15058:	mov	r8, r3
   1505c:	bhi	15144 <sigaltstack@plt+0x3ca4>
   15060:	add	r3, r2, #22
   15064:	bic	r3, r3, #7
   15068:	sub	sp, sp, r3
   1506c:	add	r0, sp, #15
   15070:	bic	r0, r0, #15
   15074:	cmp	r0, #0
   15078:	beq	15154 <sigaltstack@plt+0x3cb4>
   1507c:	cmp	r7, #2
   15080:	mov	r3, #1
   15084:	str	r3, [r0, #4]
   15088:	movhi	r1, r4
   1508c:	movhi	ip, #0
   15090:	movhi	r3, #2
   15094:	bls	150dc <sigaltstack@plt+0x3c3c>
   15098:	ldrb	r2, [r1, #1]!
   1509c:	ldrb	lr, [r4, ip]
   150a0:	cmp	lr, r2
   150a4:	bne	150c0 <sigaltstack@plt+0x3c20>
   150a8:	b	15178 <sigaltstack@plt+0x3cd8>
   150ac:	ldr	lr, [r0, ip, lsl #2]
   150b0:	sub	ip, ip, lr
   150b4:	ldrb	lr, [r4, ip]
   150b8:	cmp	lr, r2
   150bc:	beq	15178 <sigaltstack@plt+0x3cd8>
   150c0:	cmp	ip, #0
   150c4:	bne	150ac <sigaltstack@plt+0x3c0c>
   150c8:	mov	ip, #0
   150cc:	str	r3, [r0, r3, lsl #2]
   150d0:	add	r3, r3, #1
   150d4:	cmp	r7, r3
   150d8:	bne	15098 <sigaltstack@plt+0x3bf8>
   150dc:	mov	r3, #0
   150e0:	str	r3, [r8]
   150e4:	ldrb	r2, [r5]
   150e8:	mov	r1, r5
   150ec:	cmp	r2, #0
   150f0:	beq	15124 <sigaltstack@plt+0x3c84>
   150f4:	ldrb	ip, [r4, r3]
   150f8:	cmp	ip, r2
   150fc:	beq	1515c <sigaltstack@plt+0x3cbc>
   15100:	cmp	r3, #0
   15104:	addeq	r5, r5, #1
   15108:	ldrbeq	r2, [r1, #1]
   1510c:	ldrne	ip, [r0, r3, lsl #2]
   15110:	addeq	r1, r1, #1
   15114:	addne	r5, r5, ip
   15118:	subne	r3, r3, ip
   1511c:	cmp	r2, #0
   15120:	bne	150f4 <sigaltstack@plt+0x3c54>
   15124:	bl	16c04 <sigaltstack@plt+0x5764>
   15128:	mov	r0, #1
   1512c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15130:	ldr	r3, [r6]
   15134:	cmp	r2, r3
   15138:	bne	15190 <sigaltstack@plt+0x3cf0>
   1513c:	sub	sp, fp, #24
   15140:	pop	{r4, r5, r6, r7, r8, fp, pc}
   15144:	mov	r0, r2
   15148:	bl	16bc8 <sigaltstack@plt+0x5728>
   1514c:	cmp	r0, #0
   15150:	bne	1507c <sigaltstack@plt+0x3bdc>
   15154:	mov	r0, #0
   15158:	b	1512c <sigaltstack@plt+0x3c8c>
   1515c:	add	r3, r3, #1
   15160:	cmp	r7, r3
   15164:	add	ip, r1, #1
   15168:	beq	15188 <sigaltstack@plt+0x3ce8>
   1516c:	ldrb	r2, [r1, #1]
   15170:	mov	r1, ip
   15174:	b	150ec <sigaltstack@plt+0x3c4c>
   15178:	add	ip, ip, #1
   1517c:	sub	r2, r3, ip
   15180:	str	r2, [r0, r3, lsl #2]
   15184:	b	150d0 <sigaltstack@plt+0x3c30>
   15188:	str	r5, [r8]
   1518c:	b	15124 <sigaltstack@plt+0x3c84>
   15190:	bl	11200 <__stack_chk_fail@plt>
   15194:	andeq	r8, r2, r8, lsl #30
   15198:	push	{r4, lr}
   1519c:	mov	r2, #179	; 0xb3
   151a0:	ldr	r3, [pc, #8]	; 151b0 <sigaltstack@plt+0x3d10>
   151a4:	ldr	r1, [pc, #8]	; 151b4 <sigaltstack@plt+0x3d14>
   151a8:	ldr	r0, [pc, #8]	; 151b8 <sigaltstack@plt+0x3d18>
   151ac:	bl	11494 <__assert_fail@plt>
   151b0:	andeq	r8, r1, r4, asr #6
   151b4:	andeq	r7, r1, r0, lsr pc
   151b8:	andeq	r7, r1, ip, lsr pc
   151bc:	ldr	r3, [pc, #2124]	; 15a10 <sigaltstack@plt+0x4570>
   151c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151c4:	add	fp, sp, #32
   151c8:	sub	sp, sp, #196	; 0xc4
   151cc:	ldr	r3, [r3]
   151d0:	str	r0, [fp, #-220]	; 0xffffff24
   151d4:	mov	r0, r1
   151d8:	mov	r7, r1
   151dc:	str	r2, [fp, #-224]	; 0xffffff20
   151e0:	str	r3, [fp, #-40]	; 0xffffffd8
   151e4:	bl	16c28 <sigaltstack@plt+0x5788>
   151e8:	mov	r2, #44	; 0x2c
   151ec:	str	r0, [fp, #-216]	; 0xffffff28
   151f0:	umull	r0, r1, r0, r2
   151f4:	adds	r3, r1, #0
   151f8:	movne	r3, #1
   151fc:	cmp	r0, #0
   15200:	blt	155c0 <sigaltstack@plt+0x4120>
   15204:	cmp	r3, #0
   15208:	bne	155c0 <sigaltstack@plt+0x4120>
   1520c:	ldr	r3, [fp, #-216]	; 0xffffff28
   15210:	lsl	r4, r3, #2
   15214:	add	r0, r4, r3
   15218:	add	r0, r3, r0, lsl #1
   1521c:	lsl	r0, r0, #2
   15220:	cmp	r0, #4016	; 0xfb0
   15224:	bhi	155e0 <sigaltstack@plt+0x4140>
   15228:	add	r3, r0, #22
   1522c:	bic	r3, r3, #7
   15230:	sub	sp, sp, r3
   15234:	add	r8, sp, #15
   15238:	bic	r8, r8, #15
   1523c:	cmp	r8, #0
   15240:	beq	155c0 <sigaltstack@plt+0x4120>
   15244:	ldr	r3, [fp, #-216]	; 0xffffff28
   15248:	mov	r5, #0
   1524c:	add	r4, r4, r3
   15250:	str	r7, [fp, #-192]	; 0xffffff40
   15254:	add	r9, r8, r4, lsl #3
   15258:	str	r5, [fp, #-200]	; 0xffffff38
   1525c:	strb	r5, [fp, #-208]	; 0xffffff30
   15260:	str	r5, [fp, #-204]	; 0xffffff34
   15264:	strb	r5, [fp, #-196]	; 0xffffff3c
   15268:	add	r4, r8, #16
   1526c:	ldr	r6, [pc, #1952]	; 15a14 <sigaltstack@plt+0x4574>
   15270:	b	152f4 <sigaltstack@plt+0x3e54>
   15274:	ldrb	r3, [r7]
   15278:	and	r2, r3, #31
   1527c:	lsr	r3, r3, #5
   15280:	ldr	r3, [r6, r3, lsl #2]
   15284:	lsr	r3, r3, r2
   15288:	tst	r3, #1
   1528c:	beq	155ec <sigaltstack@plt+0x414c>
   15290:	mov	r3, #1
   15294:	str	r3, [fp, #-188]	; 0xffffff44
   15298:	ldrb	r7, [r7]
   1529c:	strb	r3, [fp, #-184]	; 0xffffff48
   152a0:	strb	r3, [fp, #-196]	; 0xffffff3c
   152a4:	str	r7, [fp, #-180]	; 0xffffff4c
   152a8:	cmp	r7, #0
   152ac:	beq	15368 <sigaltstack@plt+0x3ec8>
   152b0:	mov	r3, #1
   152b4:	ldr	r1, [fp, #-192]	; 0xffffff40
   152b8:	sub	r2, fp, #176	; 0xb0
   152bc:	cmp	r1, r2
   152c0:	ldr	r2, [fp, #-188]	; 0xffffff44
   152c4:	strne	r1, [r4, #-16]
   152c8:	beq	15608 <sigaltstack@plt+0x4168>
   152cc:	cmp	r3, #0
   152d0:	str	r2, [r4, #-12]
   152d4:	strb	r3, [r4, #-8]
   152d8:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   152dc:	ldr	r7, [fp, #-192]	; 0xffffff40
   152e0:	strne	r3, [r4, #-4]
   152e4:	add	r4, r4, #40	; 0x28
   152e8:	add	r7, r7, r2
   152ec:	strb	r5, [fp, #-196]	; 0xffffff3c
   152f0:	str	r7, [fp, #-192]	; 0xffffff40
   152f4:	ldrb	r3, [fp, #-208]	; 0xffffff30
   152f8:	cmp	r3, #0
   152fc:	beq	15274 <sigaltstack@plt+0x3dd4>
   15300:	bl	11284 <__ctype_get_mb_cur_max@plt>
   15304:	mov	r1, r0
   15308:	mov	r0, r7
   1530c:	bl	1404c <sigaltstack@plt+0x2bac>
   15310:	sub	r3, fp, #204	; 0xcc
   15314:	mov	r1, r7
   15318:	mov	r2, r0
   1531c:	sub	r0, fp, #180	; 0xb4
   15320:	bl	14e04 <sigaltstack@plt+0x3964>
   15324:	cmn	r0, #1
   15328:	str	r0, [fp, #-188]	; 0xffffff44
   1532c:	beq	15620 <sigaltstack@plt+0x4180>
   15330:	cmn	r0, #2
   15334:	beq	15638 <sigaltstack@plt+0x4198>
   15338:	cmp	r0, #0
   1533c:	beq	15658 <sigaltstack@plt+0x41b8>
   15340:	ldr	r7, [fp, #-180]	; 0xffffff4c
   15344:	mov	sl, #1
   15348:	sub	r0, fp, #204	; 0xcc
   1534c:	strb	sl, [fp, #-184]	; 0xffffff48
   15350:	bl	111b8 <mbsinit@plt>
   15354:	strb	sl, [fp, #-196]	; 0xffffff3c
   15358:	cmp	r0, #0
   1535c:	strbne	r5, [fp, #-208]	; 0xffffff30
   15360:	cmp	r7, #0
   15364:	bne	152b0 <sigaltstack@plt+0x3e10>
   15368:	ldr	r3, [fp, #-216]	; 0xffffff28
   1536c:	cmp	r3, #2
   15370:	mov	r3, #1
   15374:	str	r3, [r9, #4]
   15378:	bls	1541c <sigaltstack@plt+0x3f7c>
   1537c:	mov	sl, #2
   15380:	mov	r4, r7
   15384:	str	r7, [fp, #-228]	; 0xffffff1c
   15388:	mov	r7, sl
   1538c:	ldr	sl, [fp, #-216]	; 0xffffff28
   15390:	mov	r5, r8
   15394:	ldrb	r6, [r5, #48]	; 0x30
   15398:	b	153c8 <sigaltstack@plt+0x3f28>
   1539c:	ldrb	r2, [r3, #8]
   153a0:	cmp	r2, #0
   153a4:	beq	153d8 <sigaltstack@plt+0x3f38>
   153a8:	ldr	r3, [r3, #12]
   153ac:	ldr	r2, [r5, #52]	; 0x34
   153b0:	cmp	r2, r3
   153b4:	beq	153fc <sigaltstack@plt+0x3f5c>
   153b8:	cmp	r4, #0
   153bc:	beq	15934 <sigaltstack@plt+0x4494>
   153c0:	ldr	r3, [r9, r4, lsl #2]
   153c4:	sub	r4, r4, r3
   153c8:	add	r3, r4, r4, lsl #2
   153cc:	cmp	r6, #0
   153d0:	add	r3, r8, r3, lsl #3
   153d4:	bne	1539c <sigaltstack@plt+0x3efc>
   153d8:	ldr	r2, [r5, #44]	; 0x2c
   153dc:	ldr	r1, [r3, #4]
   153e0:	cmp	r2, r1
   153e4:	bne	153b8 <sigaltstack@plt+0x3f18>
   153e8:	ldr	r1, [r3]
   153ec:	ldr	r0, [r5, #40]	; 0x28
   153f0:	bl	111dc <memcmp@plt>
   153f4:	cmp	r0, #0
   153f8:	bne	153b8 <sigaltstack@plt+0x3f18>
   153fc:	add	r4, r4, #1
   15400:	sub	r2, r7, r4
   15404:	str	r2, [r9, r7, lsl #2]
   15408:	add	r7, r7, #1
   1540c:	cmp	sl, r7
   15410:	add	r5, r5, #40	; 0x28
   15414:	bne	15394 <sigaltstack@plt+0x3ef4>
   15418:	ldr	r7, [fp, #-228]	; 0xffffff1c
   1541c:	ldr	r2, [fp, #-220]	; 0xffffff24
   15420:	ldr	sl, [pc, #1516]	; 15a14 <sigaltstack@plt+0x4574>
   15424:	str	r2, [fp, #-136]	; 0xffffff78
   15428:	str	r2, [fp, #-80]	; 0xffffffb0
   1542c:	ldr	r2, [fp, #-224]	; 0xffffff20
   15430:	mov	r6, #1
   15434:	mov	r3, #0
   15438:	str	r3, [fp, #-144]	; 0xffffff70
   1543c:	str	r3, [r2]
   15440:	strb	r3, [fp, #-152]	; 0xffffff68
   15444:	str	r3, [fp, #-148]	; 0xffffff6c
   15448:	strb	r3, [fp, #-140]	; 0xffffff74
   1544c:	strb	r3, [fp, #-96]	; 0xffffffa0
   15450:	str	r3, [fp, #-92]	; 0xffffffa4
   15454:	strb	r3, [fp, #-84]	; 0xffffffac
   15458:	str	r3, [fp, #-88]	; 0xffffffa8
   1545c:	cmp	r3, #0
   15460:	ldreq	r5, [fp, #-80]	; 0xffffffb0
   15464:	beq	15518 <sigaltstack@plt+0x4078>
   15468:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   1546c:	cmp	r3, #0
   15470:	ldrne	r4, [fp, #-68]	; 0xffffffbc
   15474:	bne	15554 <sigaltstack@plt+0x40b4>
   15478:	add	r3, r7, r7, lsl #2
   1547c:	add	r3, r8, r3, lsl #3
   15480:	ldr	r2, [r3, #4]
   15484:	ldr	r4, [fp, #-76]	; 0xffffffb4
   15488:	cmp	r2, r4
   1548c:	beq	156fc <sigaltstack@plt+0x425c>
   15490:	cmp	r7, #0
   15494:	bne	15720 <sigaltstack@plt+0x4280>
   15498:	ldrb	r3, [fp, #-140]	; 0xffffff74
   1549c:	cmp	r3, #0
   154a0:	bne	1597c <sigaltstack@plt+0x44dc>
   154a4:	ldrb	r3, [fp, #-152]	; 0xffffff68
   154a8:	ldr	r4, [fp, #-136]	; 0xffffff78
   154ac:	cmp	r3, #0
   154b0:	bne	158cc <sigaltstack@plt+0x442c>
   154b4:	ldrb	r3, [r4]
   154b8:	and	r2, r3, #31
   154bc:	lsr	r3, r3, #5
   154c0:	ldr	r3, [sl, r3, lsl #2]
   154c4:	lsr	r3, r3, r2
   154c8:	tst	r3, #1
   154cc:	beq	158b8 <sigaltstack@plt+0x4418>
   154d0:	str	r6, [fp, #-132]	; 0xffffff7c
   154d4:	ldrb	r4, [r4]
   154d8:	strb	r6, [fp, #-128]	; 0xffffff80
   154dc:	strb	r6, [fp, #-140]	; 0xffffff74
   154e0:	str	r4, [fp, #-124]	; 0xffffff84
   154e4:	cmp	r4, #0
   154e8:	beq	157b8 <sigaltstack@plt+0x4318>
   154ec:	ldr	r4, [fp, #-136]	; 0xffffff78
   154f0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   154f4:	ldr	r5, [fp, #-80]	; 0xffffffb0
   154f8:	add	r4, r4, r3
   154fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15500:	str	r4, [fp, #-136]	; 0xffffff78
   15504:	add	r5, r5, r3
   15508:	mov	r3, #0
   1550c:	str	r5, [fp, #-80]	; 0xffffffb0
   15510:	strb	r3, [fp, #-140]	; 0xffffff74
   15514:	strb	r3, [fp, #-84]	; 0xffffffac
   15518:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   1551c:	cmp	r3, #0
   15520:	bne	15694 <sigaltstack@plt+0x41f4>
   15524:	ldrb	r3, [r5]
   15528:	and	r2, r3, #31
   1552c:	lsr	r3, r3, #5
   15530:	ldr	r3, [sl, r3, lsl #2]
   15534:	lsr	r3, r3, r2
   15538:	tst	r3, #1
   1553c:	beq	15680 <sigaltstack@plt+0x41e0>
   15540:	str	r6, [fp, #-76]	; 0xffffffb4
   15544:	ldrb	r4, [r5]
   15548:	strb	r6, [fp, #-72]	; 0xffffffb8
   1554c:	strb	r6, [fp, #-84]	; 0xffffffac
   15550:	str	r4, [fp, #-68]	; 0xffffffbc
   15554:	cmp	r4, #0
   15558:	beq	155b0 <sigaltstack@plt+0x4110>
   1555c:	add	r3, r7, r7, lsl #2
   15560:	add	r3, r8, r3, lsl #3
   15564:	ldrb	r2, [r3, #8]
   15568:	cmp	r2, #0
   1556c:	beq	15480 <sigaltstack@plt+0x3fe0>
   15570:	ldr	r3, [r3, #12]
   15574:	cmp	r3, r4
   15578:	bne	15490 <sigaltstack@plt+0x3ff0>
   1557c:	ldr	r4, [fp, #-76]	; 0xffffffb4
   15580:	ldr	r5, [fp, #-80]	; 0xffffffb0
   15584:	ldr	r3, [fp, #-216]	; 0xffffff28
   15588:	add	r7, r7, #1
   1558c:	cmp	r3, r7
   15590:	add	r5, r5, r4
   15594:	mov	r3, #0
   15598:	str	r5, [fp, #-80]	; 0xffffffb0
   1559c:	strb	r3, [fp, #-84]	; 0xffffffac
   155a0:	bne	15518 <sigaltstack@plt+0x4078>
   155a4:	ldr	r2, [fp, #-224]	; 0xffffff20
   155a8:	ldr	r3, [fp, #-136]	; 0xffffff78
   155ac:	str	r3, [r2]
   155b0:	mov	r0, r8
   155b4:	bl	16c04 <sigaltstack@plt+0x5764>
   155b8:	mov	r0, #1
   155bc:	b	155c4 <sigaltstack@plt+0x4124>
   155c0:	mov	r0, #0
   155c4:	ldr	r3, [pc, #1092]	; 15a10 <sigaltstack@plt+0x4570>
   155c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155cc:	ldr	r3, [r3]
   155d0:	cmp	r2, r3
   155d4:	bne	15a0c <sigaltstack@plt+0x456c>
   155d8:	sub	sp, fp, #32
   155dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155e0:	bl	16bc8 <sigaltstack@plt+0x5728>
   155e4:	mov	r8, r0
   155e8:	b	1523c <sigaltstack@plt+0x3d9c>
   155ec:	sub	r0, fp, #204	; 0xcc
   155f0:	bl	111b8 <mbsinit@plt>
   155f4:	cmp	r0, #0
   155f8:	beq	159e4 <sigaltstack@plt+0x4544>
   155fc:	mov	r3, #1
   15600:	strb	r3, [fp, #-208]	; 0xffffff30
   15604:	b	15300 <sigaltstack@plt+0x3e60>
   15608:	mov	r0, r4
   1560c:	bl	11194 <memcpy@plt>
   15610:	str	r4, [r4, #-16]
   15614:	ldrb	r3, [fp, #-184]	; 0xffffff48
   15618:	ldr	r2, [fp, #-188]	; 0xffffff44
   1561c:	b	152cc <sigaltstack@plt+0x3e2c>
   15620:	mov	r3, #1
   15624:	str	r3, [fp, #-188]	; 0xffffff44
   15628:	strb	r3, [fp, #-196]	; 0xffffff3c
   1562c:	strb	r5, [fp, #-184]	; 0xffffff48
   15630:	mov	r3, #0
   15634:	b	152b4 <sigaltstack@plt+0x3e14>
   15638:	ldr	r0, [fp, #-192]	; 0xffffff40
   1563c:	bl	11344 <strlen@plt>
   15640:	mov	r3, #1
   15644:	strb	r3, [fp, #-196]	; 0xffffff3c
   15648:	strb	r5, [fp, #-184]	; 0xffffff48
   1564c:	mov	r3, #0
   15650:	str	r0, [fp, #-188]	; 0xffffff44
   15654:	b	152b4 <sigaltstack@plt+0x3e14>
   15658:	ldr	r3, [fp, #-192]	; 0xffffff40
   1565c:	mov	r2, #1
   15660:	str	r2, [fp, #-188]	; 0xffffff44
   15664:	ldrb	r3, [r3]
   15668:	cmp	r3, #0
   1566c:	bne	159f8 <sigaltstack@plt+0x4558>
   15670:	ldr	r7, [fp, #-180]	; 0xffffff4c
   15674:	cmp	r7, #0
   15678:	beq	15344 <sigaltstack@plt+0x3ea4>
   1567c:	bl	15198 <sigaltstack@plt+0x3cf8>
   15680:	sub	r0, fp, #92	; 0x5c
   15684:	bl	111b8 <mbsinit@plt>
   15688:	cmp	r0, #0
   1568c:	beq	159e4 <sigaltstack@plt+0x4544>
   15690:	strb	r6, [fp, #-96]	; 0xffffffa0
   15694:	bl	11284 <__ctype_get_mb_cur_max@plt>
   15698:	mov	r1, r0
   1569c:	mov	r0, r5
   156a0:	bl	1404c <sigaltstack@plt+0x2bac>
   156a4:	sub	r3, fp, #92	; 0x5c
   156a8:	mov	r1, r5
   156ac:	mov	r2, r0
   156b0:	sub	r0, fp, #68	; 0x44
   156b4:	bl	14e04 <sigaltstack@plt+0x3964>
   156b8:	cmn	r0, #1
   156bc:	str	r0, [fp, #-76]	; 0xffffffb4
   156c0:	beq	158a4 <sigaltstack@plt+0x4404>
   156c4:	cmn	r0, #2
   156c8:	beq	1593c <sigaltstack@plt+0x449c>
   156cc:	cmp	r0, #0
   156d0:	beq	15958 <sigaltstack@plt+0x44b8>
   156d4:	ldr	r4, [fp, #-68]	; 0xffffffbc
   156d8:	sub	r0, fp, #92	; 0x5c
   156dc:	strb	r6, [fp, #-72]	; 0xffffffb8
   156e0:	bl	111b8 <mbsinit@plt>
   156e4:	cmp	r0, #0
   156e8:	movne	r3, #0
   156ec:	strbeq	r6, [fp, #-84]	; 0xffffffac
   156f0:	strbne	r6, [fp, #-84]	; 0xffffffac
   156f4:	strbne	r3, [fp, #-96]	; 0xffffffa0
   156f8:	b	15554 <sigaltstack@plt+0x40b4>
   156fc:	ldr	r5, [fp, #-80]	; 0xffffffb0
   15700:	ldr	r0, [r3]
   15704:	mov	r1, r5
   15708:	mov	r2, r4
   1570c:	bl	111dc <memcmp@plt>
   15710:	cmp	r0, #0
   15714:	beq	15584 <sigaltstack@plt+0x40e4>
   15718:	cmp	r7, #0
   1571c:	beq	15498 <sigaltstack@plt+0x3ff8>
   15720:	ldr	r5, [r9, r7, lsl #2]
   15724:	sub	r3, r7, r5
   15728:	cmp	r5, #0
   1572c:	str	r3, [fp, #-220]	; 0xffffff24
   15730:	beq	1589c <sigaltstack@plt+0x43fc>
   15734:	ldrb	r3, [fp, #-140]	; 0xffffff74
   15738:	cmp	r3, #0
   1573c:	ldreq	r4, [fp, #-136]	; 0xffffff78
   15740:	beq	15774 <sigaltstack@plt+0x42d4>
   15744:	ldrb	r3, [fp, #-128]	; 0xffffff80
   15748:	cmp	r3, #0
   1574c:	ldrne	r4, [fp, #-124]	; 0xffffff84
   15750:	bne	157b0 <sigaltstack@plt+0x4310>
   15754:	ldr	r4, [fp, #-136]	; 0xffffff78
   15758:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1575c:	subs	r5, r5, #1
   15760:	add	r4, r4, r3
   15764:	mov	r3, #0
   15768:	str	r4, [fp, #-136]	; 0xffffff78
   1576c:	strb	r3, [fp, #-140]	; 0xffffff74
   15770:	beq	15898 <sigaltstack@plt+0x43f8>
   15774:	ldrb	r3, [fp, #-152]	; 0xffffff68
   15778:	cmp	r3, #0
   1577c:	bne	157d0 <sigaltstack@plt+0x4330>
   15780:	ldrb	r3, [r4]
   15784:	and	r2, r3, #31
   15788:	lsr	r3, r3, #5
   1578c:	ldr	r3, [sl, r3, lsl #2]
   15790:	lsr	r3, r3, r2
   15794:	tst	r3, #1
   15798:	beq	157bc <sigaltstack@plt+0x431c>
   1579c:	str	r6, [fp, #-132]	; 0xffffff7c
   157a0:	ldrb	r4, [r4]
   157a4:	strb	r6, [fp, #-128]	; 0xffffff80
   157a8:	strb	r6, [fp, #-140]	; 0xffffff74
   157ac:	str	r4, [fp, #-124]	; 0xffffff84
   157b0:	cmp	r4, #0
   157b4:	bne	15754 <sigaltstack@plt+0x42b4>
   157b8:	bl	1147c <abort@plt>
   157bc:	sub	r0, fp, #148	; 0x94
   157c0:	bl	111b8 <mbsinit@plt>
   157c4:	cmp	r0, #0
   157c8:	beq	159e4 <sigaltstack@plt+0x4544>
   157cc:	strb	r6, [fp, #-152]	; 0xffffff68
   157d0:	bl	11284 <__ctype_get_mb_cur_max@plt>
   157d4:	mov	r1, r0
   157d8:	mov	r0, r4
   157dc:	bl	1404c <sigaltstack@plt+0x2bac>
   157e0:	sub	r3, fp, #148	; 0x94
   157e4:	mov	r1, r4
   157e8:	mov	r2, r0
   157ec:	sub	r0, fp, #124	; 0x7c
   157f0:	bl	14e04 <sigaltstack@plt+0x3964>
   157f4:	cmn	r0, #1
   157f8:	str	r0, [fp, #-132]	; 0xffffff7c
   157fc:	beq	15838 <sigaltstack@plt+0x4398>
   15800:	cmn	r0, #2
   15804:	beq	15848 <sigaltstack@plt+0x43a8>
   15808:	cmp	r0, #0
   1580c:	beq	15864 <sigaltstack@plt+0x43c4>
   15810:	ldr	r4, [fp, #-124]	; 0xffffff84
   15814:	sub	r0, fp, #148	; 0x94
   15818:	strb	r6, [fp, #-128]	; 0xffffff80
   1581c:	bl	111b8 <mbsinit@plt>
   15820:	cmp	r0, #0
   15824:	movne	r3, #0
   15828:	strbeq	r6, [fp, #-140]	; 0xffffff74
   1582c:	strbne	r6, [fp, #-140]	; 0xffffff74
   15830:	strbne	r3, [fp, #-152]	; 0xffffff68
   15834:	b	157b0 <sigaltstack@plt+0x4310>
   15838:	mov	r3, #0
   1583c:	str	r6, [fp, #-132]	; 0xffffff7c
   15840:	strb	r3, [fp, #-128]	; 0xffffff80
   15844:	b	15754 <sigaltstack@plt+0x42b4>
   15848:	ldr	r4, [fp, #-136]	; 0xffffff78
   1584c:	mov	r0, r4
   15850:	bl	11344 <strlen@plt>
   15854:	mov	r3, #0
   15858:	strb	r3, [fp, #-128]	; 0xffffff80
   1585c:	str	r0, [fp, #-132]	; 0xffffff7c
   15860:	b	15758 <sigaltstack@plt+0x42b8>
   15864:	ldr	r4, [fp, #-136]	; 0xffffff78
   15868:	str	r6, [fp, #-132]	; 0xffffff7c
   1586c:	ldrb	r3, [r4]
   15870:	cmp	r3, #0
   15874:	bne	159f8 <sigaltstack@plt+0x4558>
   15878:	ldr	r4, [fp, #-124]	; 0xffffff84
   1587c:	cmp	r4, #0
   15880:	beq	15814 <sigaltstack@plt+0x4374>
   15884:	ldr	r3, [pc, #396]	; 15a18 <sigaltstack@plt+0x4578>
   15888:	mov	r2, #179	; 0xb3
   1588c:	ldr	r1, [pc, #392]	; 15a1c <sigaltstack@plt+0x457c>
   15890:	ldr	r0, [pc, #392]	; 15a20 <sigaltstack@plt+0x4580>
   15894:	bl	11494 <__assert_fail@plt>
   15898:	ldr	r7, [fp, #-220]	; 0xffffff24
   1589c:	ldrb	r3, [fp, #-84]	; 0xffffffac
   158a0:	b	1545c <sigaltstack@plt+0x3fbc>
   158a4:	mov	r3, #0
   158a8:	str	r6, [fp, #-76]	; 0xffffffb4
   158ac:	strb	r6, [fp, #-84]	; 0xffffffac
   158b0:	strb	r3, [fp, #-72]	; 0xffffffb8
   158b4:	b	15478 <sigaltstack@plt+0x3fd8>
   158b8:	sub	r0, fp, #148	; 0x94
   158bc:	bl	111b8 <mbsinit@plt>
   158c0:	cmp	r0, #0
   158c4:	beq	159e4 <sigaltstack@plt+0x4544>
   158c8:	strb	r6, [fp, #-152]	; 0xffffff68
   158cc:	bl	11284 <__ctype_get_mb_cur_max@plt>
   158d0:	mov	r1, r0
   158d4:	mov	r0, r4
   158d8:	bl	1404c <sigaltstack@plt+0x2bac>
   158dc:	sub	r3, fp, #148	; 0x94
   158e0:	mov	r1, r4
   158e4:	mov	r2, r0
   158e8:	sub	r0, fp, #124	; 0x7c
   158ec:	bl	14e04 <sigaltstack@plt+0x3964>
   158f0:	cmn	r0, #1
   158f4:	str	r0, [fp, #-132]	; 0xffffff7c
   158f8:	beq	15990 <sigaltstack@plt+0x44f0>
   158fc:	cmn	r0, #2
   15900:	beq	159a4 <sigaltstack@plt+0x4504>
   15904:	cmp	r0, #0
   15908:	beq	159c0 <sigaltstack@plt+0x4520>
   1590c:	ldr	r4, [fp, #-124]	; 0xffffff84
   15910:	sub	r0, fp, #148	; 0x94
   15914:	strb	r6, [fp, #-128]	; 0xffffff80
   15918:	bl	111b8 <mbsinit@plt>
   1591c:	cmp	r0, #0
   15920:	movne	r3, #0
   15924:	strbeq	r6, [fp, #-140]	; 0xffffff74
   15928:	strbne	r6, [fp, #-140]	; 0xffffff74
   1592c:	strbne	r3, [fp, #-152]	; 0xffffff68
   15930:	b	154e4 <sigaltstack@plt+0x4044>
   15934:	str	r7, [r9, r7, lsl #2]
   15938:	b	15408 <sigaltstack@plt+0x3f68>
   1593c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15940:	bl	11344 <strlen@plt>
   15944:	mov	r3, #0
   15948:	strb	r6, [fp, #-84]	; 0xffffffac
   1594c:	strb	r3, [fp, #-72]	; 0xffffffb8
   15950:	str	r0, [fp, #-76]	; 0xffffffb4
   15954:	b	15478 <sigaltstack@plt+0x3fd8>
   15958:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1595c:	str	r6, [fp, #-76]	; 0xffffffb4
   15960:	ldrb	r3, [r5]
   15964:	cmp	r3, #0
   15968:	bne	159f8 <sigaltstack@plt+0x4558>
   1596c:	ldr	r4, [fp, #-68]	; 0xffffffbc
   15970:	cmp	r4, #0
   15974:	beq	156d8 <sigaltstack@plt+0x4238>
   15978:	b	1567c <sigaltstack@plt+0x41dc>
   1597c:	ldrb	r3, [fp, #-128]	; 0xffffff80
   15980:	cmp	r3, #0
   15984:	ldrne	r4, [fp, #-124]	; 0xffffff84
   15988:	beq	154ec <sigaltstack@plt+0x404c>
   1598c:	b	154e4 <sigaltstack@plt+0x4044>
   15990:	mov	r3, #0
   15994:	str	r6, [fp, #-132]	; 0xffffff7c
   15998:	strb	r3, [fp, #-128]	; 0xffffff80
   1599c:	ldr	r4, [fp, #-136]	; 0xffffff78
   159a0:	b	154f0 <sigaltstack@plt+0x4050>
   159a4:	ldr	r4, [fp, #-136]	; 0xffffff78
   159a8:	mov	r0, r4
   159ac:	bl	11344 <strlen@plt>
   159b0:	mov	r3, #0
   159b4:	strb	r3, [fp, #-128]	; 0xffffff80
   159b8:	str	r0, [fp, #-132]	; 0xffffff7c
   159bc:	b	154f0 <sigaltstack@plt+0x4050>
   159c0:	ldr	r4, [fp, #-136]	; 0xffffff78
   159c4:	str	r6, [fp, #-132]	; 0xffffff7c
   159c8:	ldrb	r3, [r4]
   159cc:	cmp	r3, #0
   159d0:	bne	159f8 <sigaltstack@plt+0x4558>
   159d4:	ldr	r4, [fp, #-124]	; 0xffffff84
   159d8:	cmp	r4, #0
   159dc:	beq	15910 <sigaltstack@plt+0x4470>
   159e0:	b	1567c <sigaltstack@plt+0x41dc>
   159e4:	ldr	r3, [pc, #44]	; 15a18 <sigaltstack@plt+0x4578>
   159e8:	mov	r2, #150	; 0x96
   159ec:	ldr	r1, [pc, #40]	; 15a1c <sigaltstack@plt+0x457c>
   159f0:	ldr	r0, [pc, #44]	; 15a24 <sigaltstack@plt+0x4584>
   159f4:	bl	11494 <__assert_fail@plt>
   159f8:	ldr	r3, [pc, #24]	; 15a18 <sigaltstack@plt+0x4578>
   159fc:	mov	r2, #178	; 0xb2
   15a00:	ldr	r1, [pc, #20]	; 15a1c <sigaltstack@plt+0x457c>
   15a04:	ldr	r0, [pc, #28]	; 15a28 <sigaltstack@plt+0x4588>
   15a08:	bl	11494 <__assert_fail@plt>
   15a0c:	bl	11200 <__stack_chk_fail@plt>
   15a10:	andeq	r8, r2, r8, lsl #30
   15a14:	andeq	r8, r1, r4, lsr #6
   15a18:	andeq	r8, r1, r4, asr #6
   15a1c:	andeq	r7, r1, r0, lsr pc
   15a20:	andeq	r7, r1, ip, lsr pc
   15a24:	andeq	r7, r1, r0, asr pc
   15a28:	andeq	r7, r1, r8, ror #30
   15a2c:	ldr	r3, [pc, #3108]	; 16658 <sigaltstack@plt+0x51b8>
   15a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a34:	sub	sp, sp, #308	; 0x134
   15a38:	ldr	r3, [r3]
   15a3c:	str	r0, [sp, #4]
   15a40:	mov	fp, r1
   15a44:	str	r3, [sp, #300]	; 0x12c
   15a48:	bl	11284 <__ctype_get_mb_cur_max@plt>
   15a4c:	cmp	r0, #1
   15a50:	bhi	15c7c <sigaltstack@plt+0x47dc>
   15a54:	ldrb	r7, [fp]
   15a58:	cmp	r7, #0
   15a5c:	beq	15bf8 <sigaltstack@plt+0x4758>
   15a60:	ldr	r3, [sp, #4]
   15a64:	ldrb	r8, [r3]
   15a68:	add	r3, fp, #1
   15a6c:	str	r3, [sp, #8]
   15a70:	cmp	r8, #0
   15a74:	beq	15c74 <sigaltstack@plt+0x47d4>
   15a78:	ldr	sl, [sp, #4]
   15a7c:	mov	r5, #0
   15a80:	mov	ip, r5
   15a84:	str	r5, [sp]
   15a88:	mov	r9, fp
   15a8c:	mov	lr, #1
   15a90:	mov	r6, sl
   15a94:	b	15af8 <sigaltstack@plt+0x4658>
   15a98:	cmp	r9, #0
   15a9c:	str	r3, [sp, #4]
   15aa0:	beq	15ac8 <sigaltstack@plt+0x4628>
   15aa4:	ldr	r3, [sp]
   15aa8:	mov	r0, r9
   15aac:	sub	r1, r4, r3
   15ab0:	bl	113c8 <strnlen@plt>
   15ab4:	ldr	r3, [sp, #4]
   15ab8:	ldrb	r2, [r9, r0]!
   15abc:	cmp	r2, #0
   15ac0:	bne	163a8 <sigaltstack@plt+0x4f08>
   15ac4:	str	r4, [sp]
   15ac8:	mov	r0, fp
   15acc:	bl	11344 <strlen@plt>
   15ad0:	add	r3, sp, #16
   15ad4:	mov	r1, fp
   15ad8:	mov	r2, r0
   15adc:	mov	r0, r6
   15ae0:	bl	15014 <sigaltstack@plt+0x3b74>
   15ae4:	subs	lr, r0, #0
   15ae8:	bne	165e4 <sigaltstack@plt+0x5144>
   15aec:	ldrb	r8, [sl, r5]
   15af0:	mov	r9, lr
   15af4:	mov	ip, r4
   15af8:	add	r5, r5, #1
   15afc:	mov	r0, r6
   15b00:	cmp	r7, r8
   15b04:	add	r6, r5, sl
   15b08:	mov	r1, r6
   15b0c:	add	r4, ip, #1
   15b10:	beq	15c18 <sigaltstack@plt+0x4778>
   15b14:	ldrb	r8, [sl, r5]
   15b18:	cmp	r8, #0
   15b1c:	beq	15c74 <sigaltstack@plt+0x47d4>
   15b20:	cmp	r5, #9
   15b24:	movls	r3, #0
   15b28:	andhi	r3, lr, #1
   15b2c:	cmp	r3, #0
   15b30:	beq	15af4 <sigaltstack@plt+0x4654>
   15b34:	add	r2, r5, r5, lsl #2
   15b38:	cmp	r4, r2
   15b3c:	bcs	15a98 <sigaltstack@plt+0x45f8>
   15b40:	mov	lr, r3
   15b44:	b	15af4 <sigaltstack@plt+0x4654>
   15b48:	add	r0, sp, #24
   15b4c:	bl	111b8 <mbsinit@plt>
   15b50:	cmp	r0, #0
   15b54:	beq	1662c <sigaltstack@plt+0x518c>
   15b58:	mov	r5, #1
   15b5c:	strb	r5, [sp, #20]
   15b60:	bl	11284 <__ctype_get_mb_cur_max@plt>
   15b64:	mov	r1, r0
   15b68:	mov	r0, fp
   15b6c:	bl	1404c <sigaltstack@plt+0x2bac>
   15b70:	add	r3, sp, #24
   15b74:	mov	r1, fp
   15b78:	mov	r2, r0
   15b7c:	add	r0, sp, #48	; 0x30
   15b80:	bl	14e04 <sigaltstack@plt+0x3964>
   15b84:	cmn	r0, #1
   15b88:	str	r0, [sp, #40]	; 0x28
   15b8c:	strbeq	r4, [sp, #44]	; 0x2c
   15b90:	streq	r5, [sp, #40]	; 0x28
   15b94:	strbeq	r5, [sp, #32]
   15b98:	beq	15ce4 <sigaltstack@plt+0x4844>
   15b9c:	cmn	r0, #2
   15ba0:	beq	15cd0 <sigaltstack@plt+0x4830>
   15ba4:	cmp	r0, #0
   15ba8:	bne	165c4 <sigaltstack@plt+0x5124>
   15bac:	ldr	r3, [sp, #36]	; 0x24
   15bb0:	str	r5, [sp, #40]	; 0x28
   15bb4:	ldrb	r3, [r3]
   15bb8:	cmp	r3, #0
   15bbc:	bne	16640 <sigaltstack@plt+0x51a0>
   15bc0:	ldr	r4, [sp, #48]	; 0x30
   15bc4:	cmp	r4, #0
   15bc8:	bne	1660c <sigaltstack@plt+0x516c>
   15bcc:	mov	r5, #1
   15bd0:	add	r0, sp, #24
   15bd4:	strb	r5, [sp, #44]	; 0x2c
   15bd8:	bl	111b8 <mbsinit@plt>
   15bdc:	cmp	r0, #0
   15be0:	movne	r3, #0
   15be4:	strbeq	r5, [sp, #32]
   15be8:	strbne	r5, [sp, #32]
   15bec:	strbne	r3, [sp, #20]
   15bf0:	cmp	r4, #0
   15bf4:	bne	15ce4 <sigaltstack@plt+0x4844>
   15bf8:	ldr	r0, [sp, #4]
   15bfc:	ldr	r3, [pc, #2644]	; 16658 <sigaltstack@plt+0x51b8>
   15c00:	ldr	r2, [sp, #300]	; 0x12c
   15c04:	ldr	r3, [r3]
   15c08:	cmp	r2, r3
   15c0c:	bne	16654 <sigaltstack@plt+0x51b4>
   15c10:	add	sp, sp, #308	; 0x134
   15c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c18:	ldrb	r3, [fp, #1]
   15c1c:	cmp	r3, #0
   15c20:	beq	15bfc <sigaltstack@plt+0x475c>
   15c24:	ldrb	r8, [sl, r5]
   15c28:	cmp	r8, #0
   15c2c:	beq	15c74 <sigaltstack@plt+0x47d4>
   15c30:	cmp	r3, r8
   15c34:	add	r4, ip, #2
   15c38:	bne	15b20 <sigaltstack@plt+0x4680>
   15c3c:	ldr	r3, [sp, #8]
   15c40:	add	r3, r3, #1
   15c44:	b	15c5c <sigaltstack@plt+0x47bc>
   15c48:	add	r3, r3, #1
   15c4c:	cmp	r2, r4
   15c50:	sub	r4, r3, fp
   15c54:	add	r4, r4, ip
   15c58:	bne	15b20 <sigaltstack@plt+0x4680>
   15c5c:	ldrb	r2, [r3]
   15c60:	cmp	r2, #0
   15c64:	beq	15bfc <sigaltstack@plt+0x475c>
   15c68:	ldrb	r4, [r1, #1]!
   15c6c:	cmp	r4, #0
   15c70:	bne	15c48 <sigaltstack@plt+0x47a8>
   15c74:	mov	r0, #0
   15c78:	b	15bfc <sigaltstack@plt+0x475c>
   15c7c:	ldrb	r1, [fp]
   15c80:	ldr	r8, [pc, #2516]	; 1665c <sigaltstack@plt+0x51bc>
   15c84:	str	fp, [sp, #36]	; 0x24
   15c88:	and	r0, r1, #31
   15c8c:	lsr	r3, r1, #5
   15c90:	ldr	r2, [r8, r3, lsl #2]
   15c94:	mov	r3, #0
   15c98:	str	r3, [sp, #28]
   15c9c:	lsr	r2, r2, r0
   15ca0:	ands	r4, r2, #1
   15ca4:	strb	r3, [sp, #20]
   15ca8:	str	r3, [sp, #24]
   15cac:	strb	r3, [sp, #32]
   15cb0:	beq	15b48 <sigaltstack@plt+0x46a8>
   15cb4:	mov	r3, #1
   15cb8:	str	r1, [sp, #48]	; 0x30
   15cbc:	mov	r4, r1
   15cc0:	str	r3, [sp, #40]	; 0x28
   15cc4:	strb	r3, [sp, #44]	; 0x2c
   15cc8:	strb	r3, [sp, #32]
   15ccc:	b	15bf0 <sigaltstack@plt+0x4750>
   15cd0:	ldr	r0, [sp, #36]	; 0x24
   15cd4:	bl	11344 <strlen@plt>
   15cd8:	strb	r4, [sp, #44]	; 0x2c
   15cdc:	strb	r5, [sp, #32]
   15ce0:	str	r0, [sp, #40]	; 0x28
   15ce4:	mov	r3, #0
   15ce8:	str	r3, [sp, #12]
   15cec:	mov	r6, r3
   15cf0:	mov	r7, r3
   15cf4:	str	fp, [sp, #92]	; 0x5c
   15cf8:	strb	r3, [sp, #76]	; 0x4c
   15cfc:	str	r3, [sp, #80]	; 0x50
   15d00:	strb	r3, [sp, #88]	; 0x58
   15d04:	strb	r3, [sp, #132]	; 0x84
   15d08:	str	r3, [sp, #136]	; 0x88
   15d0c:	strb	r3, [sp, #144]	; 0x90
   15d10:	str	r3, [sp, #84]	; 0x54
   15d14:	str	r3, [sp, #140]	; 0x8c
   15d18:	str	fp, [sp, #8]
   15d1c:	mov	fp, r3
   15d20:	ldrb	r3, [sp, #132]	; 0x84
   15d24:	mov	r1, #1
   15d28:	str	r1, [sp]
   15d2c:	mov	r4, r1
   15d30:	mov	r9, r1
   15d34:	ldr	r1, [sp, #4]
   15d38:	cmp	r3, #0
   15d3c:	mov	r5, r1
   15d40:	str	r1, [sp, #148]	; 0x94
   15d44:	bne	16024 <sigaltstack@plt+0x4b84>
   15d48:	ldrb	r3, [r5]
   15d4c:	and	r2, r3, #31
   15d50:	lsr	r3, r3, #5
   15d54:	ldr	r3, [r8, r3, lsl #2]
   15d58:	lsr	r3, r3, r2
   15d5c:	tst	r3, #1
   15d60:	beq	16354 <sigaltstack@plt+0x4eb4>
   15d64:	str	r9, [sp, #152]	; 0x98
   15d68:	ldrb	r5, [r5]
   15d6c:	strb	r4, [sp, #156]	; 0x9c
   15d70:	strb	r4, [sp, #144]	; 0x90
   15d74:	str	r5, [sp, #160]	; 0xa0
   15d78:	cmp	r5, #0
   15d7c:	beq	15c74 <sigaltstack@plt+0x47d4>
   15d80:	ldr	r3, [sp]
   15d84:	cmp	fp, #9
   15d88:	movls	r3, #0
   15d8c:	andhi	r3, r3, #1
   15d90:	cmp	r3, #0
   15d94:	addeq	r6, r6, #1
   15d98:	beq	15db0 <sigaltstack@plt+0x4910>
   15d9c:	add	r2, fp, fp, lsl #2
   15da0:	cmp	r6, r2
   15da4:	addcc	r6, r6, #1
   15da8:	strcc	r3, [sp]
   15dac:	bcs	161dc <sigaltstack@plt+0x4d3c>
   15db0:	ldrb	r3, [sp, #44]	; 0x2c
   15db4:	cmp	r3, #0
   15db8:	beq	1616c <sigaltstack@plt+0x4ccc>
   15dbc:	ldr	r2, [sp, #160]	; 0xa0
   15dc0:	ldr	r3, [sp, #48]	; 0x30
   15dc4:	cmp	r2, r3
   15dc8:	bne	16000 <sigaltstack@plt+0x4b60>
   15dcc:	add	lr, sp, #132	; 0x84
   15dd0:	add	ip, sp, #188	; 0xbc
   15dd4:	ldm	lr!, {r0, r1, r2, r3}
   15dd8:	stmia	ip!, {r0, r1, r2, r3}
   15ddc:	ldm	lr!, {r0, r1, r2, r3}
   15de0:	strb	r7, [sp, #200]	; 0xc8
   15de4:	stmia	ip!, {r0, r1, r2, r3}
   15de8:	ldm	lr!, {r0, r1, r2, r3}
   15dec:	ldr	r5, [sp, #204]	; 0xcc
   15df0:	stmia	ip!, {r0, r1, r2, r3}
   15df4:	ldm	lr, {r0, r1}
   15df8:	ldr	r3, [sp, #208]	; 0xd0
   15dfc:	add	r5, r5, r3
   15e00:	stm	ip, {r0, r1}
   15e04:	str	r5, [sp, #204]	; 0xcc
   15e08:	ldr	r3, [sp, #8]
   15e0c:	strb	r7, [sp, #244]	; 0xf4
   15e10:	str	r3, [sp, #260]	; 0x104
   15e14:	ldrb	r3, [r3]
   15e18:	str	r7, [sp, #248]	; 0xf8
   15e1c:	strb	r7, [sp, #256]	; 0x100
   15e20:	and	r2, r3, #31
   15e24:	lsr	r1, r3, #5
   15e28:	str	r7, [sp, #252]	; 0xfc
   15e2c:	ldr	sl, [r8, r1, lsl #2]
   15e30:	lsr	sl, sl, r2
   15e34:	ands	sl, sl, #1
   15e38:	beq	16448 <sigaltstack@plt+0x4fa8>
   15e3c:	mov	r5, r3
   15e40:	cmp	r5, #0
   15e44:	str	r9, [sp, #264]	; 0x108
   15e48:	str	r3, [sp, #272]	; 0x110
   15e4c:	strb	r4, [sp, #268]	; 0x10c
   15e50:	strb	r4, [sp, #256]	; 0x100
   15e54:	beq	164c4 <sigaltstack@plt+0x5024>
   15e58:	ldr	r5, [sp, #260]	; 0x104
   15e5c:	ldr	r3, [sp, #264]	; 0x108
   15e60:	add	r6, r6, #1
   15e64:	add	r5, r5, r3
   15e68:	strb	r7, [sp, #256]	; 0x100
   15e6c:	str	r5, [sp, #260]	; 0x104
   15e70:	b	15f58 <sigaltstack@plt+0x4ab8>
   15e74:	ldrb	r3, [r5]
   15e78:	and	r2, r3, #31
   15e7c:	lsr	r3, r3, #5
   15e80:	ldr	r3, [r8, r3, lsl #2]
   15e84:	lsr	r3, r3, r2
   15e88:	tst	r3, #1
   15e8c:	beq	16150 <sigaltstack@plt+0x4cb0>
   15e90:	str	r9, [sp, #264]	; 0x108
   15e94:	ldrb	r5, [r5]
   15e98:	strb	r4, [sp, #268]	; 0x10c
   15e9c:	strb	r4, [sp, #256]	; 0x100
   15ea0:	cmp	r5, #0
   15ea4:	str	r5, [sp, #272]	; 0x110
   15ea8:	beq	15fd4 <sigaltstack@plt+0x4b34>
   15eac:	ldrb	r3, [sp, #200]	; 0xc8
   15eb0:	cmp	r3, #0
   15eb4:	bne	16118 <sigaltstack@plt+0x4c78>
   15eb8:	ldrb	r3, [sp, #188]	; 0xbc
   15ebc:	ldr	r5, [sp, #204]	; 0xcc
   15ec0:	cmp	r3, #0
   15ec4:	addne	sl, sp, #192	; 0xc0
   15ec8:	bne	160ac <sigaltstack@plt+0x4c0c>
   15ecc:	ldrb	r3, [r5]
   15ed0:	and	r2, r3, #31
   15ed4:	lsr	r3, r3, #5
   15ed8:	ldr	r3, [r8, r3, lsl #2]
   15edc:	lsr	r3, r3, r2
   15ee0:	tst	r3, #1
   15ee4:	beq	16094 <sigaltstack@plt+0x4bf4>
   15ee8:	str	r9, [sp, #208]	; 0xd0
   15eec:	ldrb	r0, [r5]
   15ef0:	strb	r4, [sp, #212]	; 0xd4
   15ef4:	strb	r4, [sp, #200]	; 0xc8
   15ef8:	mov	r5, r0
   15efc:	str	r0, [sp, #216]	; 0xd8
   15f00:	cmp	r5, #0
   15f04:	beq	15c74 <sigaltstack@plt+0x47d4>
   15f08:	ldrb	r3, [sp, #268]	; 0x10c
   15f0c:	cmp	r3, #0
   15f10:	beq	15ff0 <sigaltstack@plt+0x4b50>
   15f14:	ldr	r0, [sp, #272]	; 0x110
   15f18:	subs	r0, r0, r5
   15f1c:	movne	r0, #1
   15f20:	cmp	r0, #0
   15f24:	add	r1, r6, #1
   15f28:	bne	16000 <sigaltstack@plt+0x4b60>
   15f2c:	ldr	r3, [sp, #204]	; 0xcc
   15f30:	ldr	r2, [sp, #208]	; 0xd0
   15f34:	ldr	r5, [sp, #260]	; 0x104
   15f38:	add	r3, r3, r2
   15f3c:	ldr	r2, [sp, #264]	; 0x108
   15f40:	mov	r6, r1
   15f44:	add	r5, r5, r2
   15f48:	strb	r0, [sp, #200]	; 0xc8
   15f4c:	strb	r0, [sp, #256]	; 0x100
   15f50:	str	r3, [sp, #204]	; 0xcc
   15f54:	str	r5, [sp, #260]	; 0x104
   15f58:	ldrb	r3, [sp, #244]	; 0xf4
   15f5c:	cmp	r3, #0
   15f60:	beq	15e74 <sigaltstack@plt+0x49d4>
   15f64:	bl	11284 <__ctype_get_mb_cur_max@plt>
   15f68:	mov	r1, r0
   15f6c:	mov	r0, r5
   15f70:	bl	1404c <sigaltstack@plt+0x2bac>
   15f74:	add	r3, sp, #248	; 0xf8
   15f78:	mov	r1, r5
   15f7c:	mov	r2, r0
   15f80:	add	r0, sp, #272	; 0x110
   15f84:	bl	14e04 <sigaltstack@plt+0x3964>
   15f88:	cmn	r0, #1
   15f8c:	str	r0, [sp, #264]	; 0x108
   15f90:	strbeq	r7, [sp, #268]	; 0x10c
   15f94:	streq	r9, [sp, #264]	; 0x108
   15f98:	strbeq	r4, [sp, #256]	; 0x100
   15f9c:	beq	15eac <sigaltstack@plt+0x4a0c>
   15fa0:	cmn	r0, #2
   15fa4:	beq	162d0 <sigaltstack@plt+0x4e30>
   15fa8:	cmp	r0, #0
   15fac:	beq	162e8 <sigaltstack@plt+0x4e48>
   15fb0:	ldr	r5, [sp, #272]	; 0x110
   15fb4:	add	r0, sp, #248	; 0xf8
   15fb8:	strb	r4, [sp, #268]	; 0x10c
   15fbc:	bl	111b8 <mbsinit@plt>
   15fc0:	strb	r4, [sp, #256]	; 0x100
   15fc4:	cmp	r0, #0
   15fc8:	strbne	r7, [sp, #244]	; 0xf4
   15fcc:	cmp	r5, #0
   15fd0:	bne	15eac <sigaltstack@plt+0x4a0c>
   15fd4:	ldr	r0, [sp, #148]	; 0x94
   15fd8:	b	15bfc <sigaltstack@plt+0x475c>
   15fdc:	ldr	r0, [sp, #204]	; 0xcc
   15fe0:	bl	11344 <strlen@plt>
   15fe4:	strb	r7, [sp, #212]	; 0xd4
   15fe8:	strb	r4, [sp, #200]	; 0xc8
   15fec:	str	r0, [sp, #208]	; 0xd0
   15ff0:	ldr	r2, [sp, #208]	; 0xd0
   15ff4:	ldr	r3, [sp, #264]	; 0x108
   15ff8:	cmp	r2, r3
   15ffc:	beq	16138 <sigaltstack@plt+0x4c98>
   16000:	ldr	r5, [sp, #148]	; 0x94
   16004:	ldr	sl, [sp, #152]	; 0x98
   16008:	ldrb	r3, [sp, #132]	; 0x84
   1600c:	add	r5, r5, sl
   16010:	str	r5, [sp, #148]	; 0x94
   16014:	cmp	r3, #0
   16018:	strb	r7, [sp, #144]	; 0x90
   1601c:	add	fp, fp, #1
   16020:	beq	15d48 <sigaltstack@plt+0x48a8>
   16024:	bl	11284 <__ctype_get_mb_cur_max@plt>
   16028:	mov	r1, r0
   1602c:	mov	r0, r5
   16030:	bl	1404c <sigaltstack@plt+0x2bac>
   16034:	add	r3, sp, #136	; 0x88
   16038:	mov	r1, r5
   1603c:	mov	r2, r0
   16040:	add	r0, sp, #160	; 0xa0
   16044:	bl	14e04 <sigaltstack@plt+0x3964>
   16048:	cmn	r0, #1
   1604c:	str	r0, [sp, #152]	; 0x98
   16050:	strbeq	r7, [sp, #156]	; 0x9c
   16054:	streq	r9, [sp, #152]	; 0x98
   16058:	strbeq	r4, [sp, #144]	; 0x90
   1605c:	beq	161b0 <sigaltstack@plt+0x4d10>
   16060:	cmn	r0, #2
   16064:	beq	1619c <sigaltstack@plt+0x4cfc>
   16068:	cmp	r0, #0
   1606c:	bne	163b4 <sigaltstack@plt+0x4f14>
   16070:	ldr	r5, [sp, #148]	; 0x94
   16074:	str	r9, [sp, #152]	; 0x98
   16078:	ldrb	r3, [r5]
   1607c:	cmp	r3, #0
   16080:	bne	16640 <sigaltstack@plt+0x51a0>
   16084:	ldr	r5, [sp, #160]	; 0xa0
   16088:	cmp	r5, #0
   1608c:	beq	163b8 <sigaltstack@plt+0x4f18>
   16090:	b	1660c <sigaltstack@plt+0x516c>
   16094:	add	sl, sp, #192	; 0xc0
   16098:	mov	r0, sl
   1609c:	bl	111b8 <mbsinit@plt>
   160a0:	cmp	r0, #0
   160a4:	beq	1662c <sigaltstack@plt+0x518c>
   160a8:	strb	r4, [sp, #188]	; 0xbc
   160ac:	bl	11284 <__ctype_get_mb_cur_max@plt>
   160b0:	mov	r1, r0
   160b4:	mov	r0, r5
   160b8:	bl	1404c <sigaltstack@plt+0x2bac>
   160bc:	mov	r3, sl
   160c0:	mov	r1, r5
   160c4:	mov	r2, r0
   160c8:	add	r0, sp, #216	; 0xd8
   160cc:	bl	14e04 <sigaltstack@plt+0x3964>
   160d0:	cmn	r0, #1
   160d4:	str	r0, [sp, #208]	; 0xd0
   160d8:	strbeq	r7, [sp, #212]	; 0xd4
   160dc:	streq	r9, [sp, #208]	; 0xd0
   160e0:	strbeq	r4, [sp, #200]	; 0xc8
   160e4:	beq	15ff0 <sigaltstack@plt+0x4b50>
   160e8:	cmn	r0, #2
   160ec:	beq	15fdc <sigaltstack@plt+0x4b3c>
   160f0:	cmp	r0, #0
   160f4:	beq	1630c <sigaltstack@plt+0x4e6c>
   160f8:	ldr	r5, [sp, #216]	; 0xd8
   160fc:	mov	r0, sl
   16100:	strb	r4, [sp, #212]	; 0xd4
   16104:	bl	111b8 <mbsinit@plt>
   16108:	strb	r4, [sp, #200]	; 0xc8
   1610c:	cmp	r0, #0
   16110:	strbne	r7, [sp, #188]	; 0xbc
   16114:	b	15f00 <sigaltstack@plt+0x4a60>
   16118:	ldrb	r3, [sp, #212]	; 0xd4
   1611c:	cmp	r3, #0
   16120:	ldrne	r5, [sp, #216]	; 0xd8
   16124:	bne	15f00 <sigaltstack@plt+0x4a60>
   16128:	ldr	r2, [sp, #208]	; 0xd0
   1612c:	ldr	r3, [sp, #264]	; 0x108
   16130:	cmp	r2, r3
   16134:	bne	16000 <sigaltstack@plt+0x4b60>
   16138:	ldr	r1, [sp, #260]	; 0x104
   1613c:	ldr	r0, [sp, #204]	; 0xcc
   16140:	bl	111dc <memcmp@plt>
   16144:	adds	r0, r0, #0
   16148:	movne	r0, #1
   1614c:	b	15f20 <sigaltstack@plt+0x4a80>
   16150:	add	r0, sp, #248	; 0xf8
   16154:	bl	111b8 <mbsinit@plt>
   16158:	cmp	r0, #0
   1615c:	beq	1662c <sigaltstack@plt+0x518c>
   16160:	strb	r4, [sp, #244]	; 0xf4
   16164:	b	15f64 <sigaltstack@plt+0x4ac4>
   16168:	add	r6, r6, #1
   1616c:	ldr	sl, [sp, #152]	; 0x98
   16170:	ldr	r3, [sp, #40]	; 0x28
   16174:	ldr	r5, [sp, #148]	; 0x94
   16178:	cmp	sl, r3
   1617c:	bne	16008 <sigaltstack@plt+0x4b68>
   16180:	mov	r2, sl
   16184:	mov	r0, r5
   16188:	ldr	r1, [sp, #36]	; 0x24
   1618c:	bl	111dc <memcmp@plt>
   16190:	cmp	r0, #0
   16194:	bne	16008 <sigaltstack@plt+0x4b68>
   16198:	b	15dcc <sigaltstack@plt+0x492c>
   1619c:	ldr	r0, [sp, #148]	; 0x94
   161a0:	bl	11344 <strlen@plt>
   161a4:	strb	r7, [sp, #156]	; 0x9c
   161a8:	strb	r4, [sp, #144]	; 0x90
   161ac:	str	r0, [sp, #152]	; 0x98
   161b0:	ldr	r3, [sp]
   161b4:	cmp	fp, #9
   161b8:	movls	r3, #0
   161bc:	andhi	r3, r3, #1
   161c0:	cmp	r3, #0
   161c4:	beq	16168 <sigaltstack@plt+0x4cc8>
   161c8:	add	r2, fp, fp, lsl #2
   161cc:	cmp	r6, r2
   161d0:	addcc	r6, r6, #1
   161d4:	strcc	r3, [sp]
   161d8:	bcc	1616c <sigaltstack@plt+0x4ccc>
   161dc:	ldr	r3, [sp, #12]
   161e0:	subs	sl, r6, r3
   161e4:	ldrb	r3, [sp, #88]	; 0x58
   161e8:	beq	16610 <sigaltstack@plt+0x5170>
   161ec:	cmp	r3, #0
   161f0:	ldreq	r5, [sp, #92]	; 0x5c
   161f4:	beq	16264 <sigaltstack@plt+0x4dc4>
   161f8:	ldrb	r3, [sp, #100]	; 0x64
   161fc:	cmp	r3, #0
   16200:	ldrne	r5, [sp, #104]	; 0x68
   16204:	beq	16244 <sigaltstack@plt+0x4da4>
   16208:	b	1623c <sigaltstack@plt+0x4d9c>
   1620c:	ldrb	r3, [r5]
   16210:	and	r2, r3, #31
   16214:	lsr	r3, r3, #5
   16218:	ldr	r3, [r8, r3, lsl #2]
   1621c:	lsr	r3, r3, r2
   16220:	tst	r3, #1
   16224:	beq	16330 <sigaltstack@plt+0x4e90>
   16228:	str	r9, [sp, #96]	; 0x60
   1622c:	ldrb	r5, [r5]
   16230:	strb	r4, [sp, #100]	; 0x64
   16234:	strb	r4, [sp, #88]	; 0x58
   16238:	str	r5, [sp, #104]	; 0x68
   1623c:	cmp	r5, #0
   16240:	beq	1655c <sigaltstack@plt+0x50bc>
   16244:	ldr	r5, [sp, #92]	; 0x5c
   16248:	ldr	r3, [sp, #96]	; 0x60
   1624c:	subs	sl, sl, #1
   16250:	add	r5, r5, r3
   16254:	strb	r7, [sp, #88]	; 0x58
   16258:	str	r5, [sp, #92]	; 0x5c
   1625c:	str	r5, [sp]
   16260:	beq	163dc <sigaltstack@plt+0x4f3c>
   16264:	ldrb	r3, [sp, #76]	; 0x4c
   16268:	cmp	r3, #0
   1626c:	beq	1620c <sigaltstack@plt+0x4d6c>
   16270:	bl	11284 <__ctype_get_mb_cur_max@plt>
   16274:	mov	r1, r0
   16278:	mov	r0, r5
   1627c:	bl	1404c <sigaltstack@plt+0x2bac>
   16280:	add	r3, sp, #80	; 0x50
   16284:	mov	r1, r5
   16288:	mov	r2, r0
   1628c:	add	r0, sp, #104	; 0x68
   16290:	bl	14e04 <sigaltstack@plt+0x3964>
   16294:	cmn	r0, #1
   16298:	str	r0, [sp, #96]	; 0x60
   1629c:	beq	16348 <sigaltstack@plt+0x4ea8>
   162a0:	cmn	r0, #2
   162a4:	beq	1636c <sigaltstack@plt+0x4ecc>
   162a8:	cmp	r0, #0
   162ac:	beq	16384 <sigaltstack@plt+0x4ee4>
   162b0:	ldr	r5, [sp, #104]	; 0x68
   162b4:	add	r0, sp, #80	; 0x50
   162b8:	strb	r4, [sp, #100]	; 0x64
   162bc:	bl	111b8 <mbsinit@plt>
   162c0:	strb	r4, [sp, #88]	; 0x58
   162c4:	cmp	r0, #0
   162c8:	strbne	r7, [sp, #76]	; 0x4c
   162cc:	b	1623c <sigaltstack@plt+0x4d9c>
   162d0:	ldr	r0, [sp, #260]	; 0x104
   162d4:	bl	11344 <strlen@plt>
   162d8:	strb	r7, [sp, #268]	; 0x10c
   162dc:	strb	r4, [sp, #256]	; 0x100
   162e0:	str	r0, [sp, #264]	; 0x108
   162e4:	b	15eac <sigaltstack@plt+0x4a0c>
   162e8:	ldr	r3, [sp, #260]	; 0x104
   162ec:	str	r9, [sp, #264]	; 0x108
   162f0:	ldrb	r3, [r3]
   162f4:	cmp	r3, #0
   162f8:	bne	16640 <sigaltstack@plt+0x51a0>
   162fc:	ldr	r5, [sp, #272]	; 0x110
   16300:	cmp	r5, #0
   16304:	beq	15fb4 <sigaltstack@plt+0x4b14>
   16308:	b	1660c <sigaltstack@plt+0x516c>
   1630c:	ldr	r3, [sp, #204]	; 0xcc
   16310:	str	r9, [sp, #208]	; 0xd0
   16314:	ldrb	r3, [r3]
   16318:	cmp	r3, #0
   1631c:	bne	16640 <sigaltstack@plt+0x51a0>
   16320:	ldr	r5, [sp, #216]	; 0xd8
   16324:	cmp	r5, #0
   16328:	beq	160fc <sigaltstack@plt+0x4c5c>
   1632c:	b	1660c <sigaltstack@plt+0x516c>
   16330:	add	r0, sp, #80	; 0x50
   16334:	bl	111b8 <mbsinit@plt>
   16338:	cmp	r0, #0
   1633c:	beq	1662c <sigaltstack@plt+0x518c>
   16340:	strb	r4, [sp, #76]	; 0x4c
   16344:	b	16270 <sigaltstack@plt+0x4dd0>
   16348:	str	r9, [sp, #96]	; 0x60
   1634c:	strb	r7, [sp, #100]	; 0x64
   16350:	b	16244 <sigaltstack@plt+0x4da4>
   16354:	add	r0, sp, #136	; 0x88
   16358:	bl	111b8 <mbsinit@plt>
   1635c:	cmp	r0, #0
   16360:	beq	1662c <sigaltstack@plt+0x518c>
   16364:	strb	r4, [sp, #132]	; 0x84
   16368:	b	16024 <sigaltstack@plt+0x4b84>
   1636c:	ldr	r5, [sp, #92]	; 0x5c
   16370:	mov	r0, r5
   16374:	bl	11344 <strlen@plt>
   16378:	strb	r7, [sp, #100]	; 0x64
   1637c:	str	r0, [sp, #96]	; 0x60
   16380:	b	16248 <sigaltstack@plt+0x4da8>
   16384:	ldr	r5, [sp, #92]	; 0x5c
   16388:	str	r9, [sp, #96]	; 0x60
   1638c:	ldrb	r3, [r5]
   16390:	cmp	r3, #0
   16394:	bne	16640 <sigaltstack@plt+0x51a0>
   16398:	ldr	r5, [sp, #104]	; 0x68
   1639c:	cmp	r5, #0
   163a0:	beq	162b4 <sigaltstack@plt+0x4e14>
   163a4:	b	1660c <sigaltstack@plt+0x516c>
   163a8:	mov	lr, r3
   163ac:	str	r4, [sp]
   163b0:	b	15af4 <sigaltstack@plt+0x4654>
   163b4:	ldr	r5, [sp, #160]	; 0xa0
   163b8:	add	r0, sp, #136	; 0x88
   163bc:	strb	r4, [sp, #156]	; 0x9c
   163c0:	bl	111b8 <mbsinit@plt>
   163c4:	strb	r4, [sp, #144]	; 0x90
   163c8:	cmp	r0, #0
   163cc:	strbne	r7, [sp, #132]	; 0x84
   163d0:	b	15d78 <sigaltstack@plt+0x48d8>
   163d4:	ldr	r3, [sp, #92]	; 0x5c
   163d8:	str	r3, [sp]
   163dc:	ldrb	r3, [sp, #76]	; 0x4c
   163e0:	cmp	r3, #0
   163e4:	bne	164dc <sigaltstack@plt+0x503c>
   163e8:	ldr	r1, [sp]
   163ec:	ldrb	r3, [r1]
   163f0:	and	r2, r3, #31
   163f4:	lsr	r3, r3, #5
   163f8:	ldr	r3, [r8, r3, lsl #2]
   163fc:	lsr	r3, r3, r2
   16400:	tst	r3, #1
   16404:	beq	164c8 <sigaltstack@plt+0x5028>
   16408:	str	r9, [sp, #96]	; 0x60
   1640c:	ldrb	r5, [r1]
   16410:	strb	r4, [sp, #100]	; 0x64
   16414:	strb	r4, [sp, #88]	; 0x58
   16418:	str	r5, [sp, #104]	; 0x68
   1641c:	cmp	r5, #0
   16420:	beq	16568 <sigaltstack@plt+0x50c8>
   16424:	ldrb	r3, [sp, #156]	; 0x9c
   16428:	mov	r2, #1
   1642c:	str	r2, [sp]
   16430:	cmp	r3, #0
   16434:	add	r3, r6, #1
   16438:	str	r6, [sp, #12]
   1643c:	mov	r6, r3
   16440:	bne	15db0 <sigaltstack@plt+0x4910>
   16444:	b	1616c <sigaltstack@plt+0x4ccc>
   16448:	add	r0, sp, #248	; 0xf8
   1644c:	bl	111b8 <mbsinit@plt>
   16450:	cmp	r0, #0
   16454:	beq	1662c <sigaltstack@plt+0x518c>
   16458:	strb	r4, [sp, #244]	; 0xf4
   1645c:	bl	11284 <__ctype_get_mb_cur_max@plt>
   16460:	ldr	r5, [sp, #8]
   16464:	mov	r1, r0
   16468:	mov	r0, r5
   1646c:	bl	1404c <sigaltstack@plt+0x2bac>
   16470:	add	r3, sp, #248	; 0xf8
   16474:	mov	r1, r5
   16478:	mov	r2, r0
   1647c:	add	r0, sp, #272	; 0x110
   16480:	bl	14e04 <sigaltstack@plt+0x3964>
   16484:	cmn	r0, #1
   16488:	str	r0, [sp, #264]	; 0x108
   1648c:	beq	1654c <sigaltstack@plt+0x50ac>
   16490:	cmn	r0, #2
   16494:	beq	16588 <sigaltstack@plt+0x50e8>
   16498:	cmp	r0, #0
   1649c:	beq	165a0 <sigaltstack@plt+0x5100>
   164a0:	ldr	r5, [sp, #272]	; 0x110
   164a4:	add	r0, sp, #248	; 0xf8
   164a8:	strb	r4, [sp, #268]	; 0x10c
   164ac:	bl	111b8 <mbsinit@plt>
   164b0:	strb	r4, [sp, #256]	; 0x100
   164b4:	cmp	r0, #0
   164b8:	strbne	r7, [sp, #244]	; 0xf4
   164bc:	cmp	r5, #0
   164c0:	bne	15e58 <sigaltstack@plt+0x49b8>
   164c4:	bl	1147c <abort@plt>
   164c8:	add	r0, sp, #80	; 0x50
   164cc:	bl	111b8 <mbsinit@plt>
   164d0:	cmp	r0, #0
   164d4:	beq	1662c <sigaltstack@plt+0x518c>
   164d8:	strb	r4, [sp, #76]	; 0x4c
   164dc:	bl	11284 <__ctype_get_mb_cur_max@plt>
   164e0:	ldr	r5, [sp]
   164e4:	mov	r1, r0
   164e8:	mov	r0, r5
   164ec:	bl	1404c <sigaltstack@plt+0x2bac>
   164f0:	add	r3, sp, #80	; 0x50
   164f4:	mov	r1, r5
   164f8:	mov	r2, r0
   164fc:	add	r0, sp, #104	; 0x68
   16500:	bl	14e04 <sigaltstack@plt+0x3964>
   16504:	cmn	r0, #1
   16508:	str	r0, [sp, #96]	; 0x60
   1650c:	strbeq	r7, [sp, #100]	; 0x64
   16510:	streq	r9, [sp, #96]	; 0x60
   16514:	strbeq	r4, [sp, #88]	; 0x58
   16518:	beq	16424 <sigaltstack@plt+0x4f84>
   1651c:	cmn	r0, #2
   16520:	beq	165cc <sigaltstack@plt+0x512c>
   16524:	cmp	r0, #0
   16528:	beq	165ec <sigaltstack@plt+0x514c>
   1652c:	ldr	r5, [sp, #104]	; 0x68
   16530:	add	r0, sp, #80	; 0x50
   16534:	strb	r4, [sp, #100]	; 0x64
   16538:	bl	111b8 <mbsinit@plt>
   1653c:	strb	r4, [sp, #88]	; 0x58
   16540:	cmp	r0, #0
   16544:	strbne	r7, [sp, #76]	; 0x4c
   16548:	b	1641c <sigaltstack@plt+0x4f7c>
   1654c:	str	r9, [sp, #264]	; 0x108
   16550:	strb	sl, [sp, #268]	; 0x10c
   16554:	ldr	r5, [sp, #260]	; 0x104
   16558:	b	15e5c <sigaltstack@plt+0x49bc>
   1655c:	ldrb	r3, [sp, #88]	; 0x58
   16560:	cmp	r3, #0
   16564:	beq	163d4 <sigaltstack@plt+0x4f34>
   16568:	add	r2, sp, #16
   1656c:	ldrd	r0, [sp, #4]
   16570:	bl	151bc <sigaltstack@plt+0x3d1c>
   16574:	subs	r3, r0, #0
   16578:	str	r3, [sp]
   1657c:	bne	165e4 <sigaltstack@plt+0x5144>
   16580:	ldrb	r3, [sp, #156]	; 0x9c
   16584:	b	16430 <sigaltstack@plt+0x4f90>
   16588:	ldr	r5, [sp, #260]	; 0x104
   1658c:	mov	r0, r5
   16590:	bl	11344 <strlen@plt>
   16594:	strb	sl, [sp, #268]	; 0x10c
   16598:	str	r0, [sp, #264]	; 0x108
   1659c:	b	15e5c <sigaltstack@plt+0x49bc>
   165a0:	ldr	r5, [sp, #260]	; 0x104
   165a4:	str	r9, [sp, #264]	; 0x108
   165a8:	ldrb	r3, [r5]
   165ac:	cmp	r3, #0
   165b0:	bne	16640 <sigaltstack@plt+0x51a0>
   165b4:	ldr	r5, [sp, #272]	; 0x110
   165b8:	cmp	r5, #0
   165bc:	beq	164a4 <sigaltstack@plt+0x5004>
   165c0:	b	1660c <sigaltstack@plt+0x516c>
   165c4:	ldr	r4, [sp, #48]	; 0x30
   165c8:	b	15bcc <sigaltstack@plt+0x472c>
   165cc:	ldr	r0, [sp, #92]	; 0x5c
   165d0:	bl	11344 <strlen@plt>
   165d4:	strb	r7, [sp, #100]	; 0x64
   165d8:	strb	r4, [sp, #88]	; 0x58
   165dc:	str	r0, [sp, #96]	; 0x60
   165e0:	b	16424 <sigaltstack@plt+0x4f84>
   165e4:	ldr	r0, [sp, #16]
   165e8:	b	15bfc <sigaltstack@plt+0x475c>
   165ec:	ldr	r5, [sp, #92]	; 0x5c
   165f0:	str	r9, [sp, #96]	; 0x60
   165f4:	ldrb	r3, [r5]
   165f8:	cmp	r3, #0
   165fc:	bne	16640 <sigaltstack@plt+0x51a0>
   16600:	ldr	r5, [sp, #104]	; 0x68
   16604:	cmp	r5, #0
   16608:	beq	16530 <sigaltstack@plt+0x5090>
   1660c:	bl	15198 <sigaltstack@plt+0x3cf8>
   16610:	cmp	r3, #0
   16614:	beq	163d4 <sigaltstack@plt+0x4f34>
   16618:	ldrb	r3, [sp, #100]	; 0x64
   1661c:	cmp	r3, #0
   16620:	ldrne	r5, [sp, #104]	; 0x68
   16624:	beq	16424 <sigaltstack@plt+0x4f84>
   16628:	b	1641c <sigaltstack@plt+0x4f7c>
   1662c:	ldr	r3, [pc, #44]	; 16660 <sigaltstack@plt+0x51c0>
   16630:	mov	r2, #150	; 0x96
   16634:	ldr	r1, [pc, #40]	; 16664 <sigaltstack@plt+0x51c4>
   16638:	ldr	r0, [pc, #40]	; 16668 <sigaltstack@plt+0x51c8>
   1663c:	bl	11494 <__assert_fail@plt>
   16640:	ldr	r3, [pc, #24]	; 16660 <sigaltstack@plt+0x51c0>
   16644:	mov	r2, #178	; 0xb2
   16648:	ldr	r1, [pc, #20]	; 16664 <sigaltstack@plt+0x51c4>
   1664c:	ldr	r0, [pc, #24]	; 1666c <sigaltstack@plt+0x51cc>
   16650:	bl	11494 <__assert_fail@plt>
   16654:	bl	11200 <__stack_chk_fail@plt>
   16658:	andeq	r8, r2, r8, lsl #30
   1665c:	andeq	r8, r1, r4, lsr #6
   16660:	andeq	r8, r1, r4, asr #6
   16664:	andeq	r7, r1, r0, lsr pc
   16668:	andeq	r7, r1, r0, asr pc
   1666c:	andeq	r7, r1, r8, ror #30
   16670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16674:	mov	r6, r2
   16678:	sub	sp, sp, #4096	; 0x1000
   1667c:	ldr	r2, [pc, #640]	; 16904 <sigaltstack@plt+0x5464>
   16680:	sub	sp, sp, #44	; 0x2c
   16684:	add	lr, sp, #4096	; 0x1000
   16688:	ldr	ip, [r2]
   1668c:	add	lr, lr, #36	; 0x24
   16690:	mov	r4, #0
   16694:	str	r4, [sp]
   16698:	str	ip, [lr]
   1669c:	add	ip, sp, #4160	; 0x1040
   166a0:	add	ip, ip, #16
   166a4:	mov	r9, r1
   166a8:	ldr	ip, [ip]
   166ac:	mov	fp, r0
   166b0:	str	r3, [sp, #8]
   166b4:	mov	r0, r6
   166b8:	mov	r3, r4
   166bc:	mov	r2, r4
   166c0:	mov	r1, r4
   166c4:	str	ip, [sp, #12]
   166c8:	bl	1114c <iconv@plt>
   166cc:	cmp	r9, r4
   166d0:	str	fp, [sp, #20]
   166d4:	str	r9, [sp, #24]
   166d8:	beq	168e8 <sigaltstack@plt+0x5448>
   166dc:	add	r5, sp, #36	; 0x24
   166e0:	add	r7, sp, #28
   166e4:	add	r8, sp, #32
   166e8:	mov	sl, #4096	; 0x1000
   166ec:	b	16704 <sigaltstack@plt+0x5264>
   166f0:	ldrd	r2, [sp, #24]
   166f4:	sub	r3, r3, r5
   166f8:	cmp	r2, #0
   166fc:	add	r4, r4, r3
   16700:	beq	16744 <sigaltstack@plt+0x52a4>
   16704:	str	r8, [sp]
   16708:	mov	r3, r7
   1670c:	add	r2, sp, #24
   16710:	add	r1, sp, #20
   16714:	mov	r0, r6
   16718:	str	r5, [sp, #28]
   1671c:	str	sl, [sp, #32]
   16720:	bl	1114c <iconv@plt>
   16724:	cmn	r0, #1
   16728:	bne	166f0 <sigaltstack@plt+0x5250>
   1672c:	bl	1135c <__errno_location@plt>
   16730:	ldr	r3, [r0]
   16734:	cmp	r3, #7
   16738:	beq	166f0 <sigaltstack@plt+0x5250>
   1673c:	cmp	r3, #22
   16740:	bne	168e0 <sigaltstack@plt+0x5440>
   16744:	mov	r2, #0
   16748:	mov	ip, #4096	; 0x1000
   1674c:	str	r8, [sp]
   16750:	mov	r1, r2
   16754:	mov	r3, r7
   16758:	mov	r0, r6
   1675c:	str	r5, [sp, #28]
   16760:	str	ip, [sp, #32]
   16764:	bl	1114c <iconv@plt>
   16768:	cmn	r0, #1
   1676c:	beq	168e0 <sigaltstack@plt+0x5440>
   16770:	ldr	r3, [sp, #28]
   16774:	sub	r5, r3, r5
   16778:	adds	r4, r5, r4
   1677c:	beq	16890 <sigaltstack@plt+0x53f0>
   16780:	ldr	r3, [sp, #8]
   16784:	ldr	sl, [r3]
   16788:	cmp	sl, #0
   1678c:	beq	1686c <sigaltstack@plt+0x53cc>
   16790:	ldr	r3, [sp, #12]
   16794:	ldr	r3, [r3]
   16798:	cmp	r3, r4
   1679c:	bcc	1686c <sigaltstack@plt+0x53cc>
   167a0:	mov	r3, #0
   167a4:	str	r3, [sp]
   167a8:	mov	r2, r3
   167ac:	mov	r1, r3
   167b0:	mov	r0, r6
   167b4:	bl	1114c <iconv@plt>
   167b8:	add	r3, sp, #40	; 0x28
   167bc:	str	fp, [sp, #20]
   167c0:	add	r5, sp, #24
   167c4:	str	r9, [sp, #24]
   167c8:	str	sl, [sp, #28]
   167cc:	str	r4, [sp, #32]
   167d0:	sub	fp, r3, #20
   167d4:	b	167fc <sigaltstack@plt+0x535c>
   167d8:	str	r8, [sp]
   167dc:	mov	r3, r7
   167e0:	mov	r2, r5
   167e4:	mov	r1, fp
   167e8:	mov	r0, r6
   167ec:	bl	1114c <iconv@plt>
   167f0:	cmn	r0, #1
   167f4:	beq	168a0 <sigaltstack@plt+0x5400>
   167f8:	ldr	r9, [sp, #24]
   167fc:	cmp	r9, #0
   16800:	bne	167d8 <sigaltstack@plt+0x5338>
   16804:	mov	r2, #0
   16808:	str	r8, [sp]
   1680c:	mov	r3, r7
   16810:	mov	r0, r6
   16814:	mov	r1, r2
   16818:	bl	1114c <iconv@plt>
   1681c:	cmn	r0, #1
   16820:	beq	168b0 <sigaltstack@plt+0x5410>
   16824:	ldr	r3, [sp, #32]
   16828:	cmp	r3, #0
   1682c:	bne	16900 <sigaltstack@plt+0x5460>
   16830:	ldr	r2, [sp, #8]
   16834:	str	sl, [r2]
   16838:	ldr	r2, [sp, #12]
   1683c:	str	r4, [r2]
   16840:	add	r2, sp, #4096	; 0x1000
   16844:	add	r2, r2, #36	; 0x24
   16848:	ldr	r1, [r2]
   1684c:	ldr	r2, [pc, #176]	; 16904 <sigaltstack@plt+0x5464>
   16850:	mov	r0, r3
   16854:	ldr	r2, [r2]
   16858:	cmp	r1, r2
   1685c:	bne	168fc <sigaltstack@plt+0x545c>
   16860:	add	sp, sp, #4096	; 0x1000
   16864:	add	sp, sp, #44	; 0x2c
   16868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1686c:	mov	r0, r4
   16870:	bl	112cc <malloc@plt>
   16874:	subs	sl, r0, #0
   16878:	bne	167a0 <sigaltstack@plt+0x5300>
   1687c:	bl	1135c <__errno_location@plt>
   16880:	mov	r2, #12
   16884:	mvn	r3, #0
   16888:	str	r2, [r0]
   1688c:	b	16840 <sigaltstack@plt+0x53a0>
   16890:	ldr	r3, [sp, #12]
   16894:	str	r4, [r3]
   16898:	mov	r3, r4
   1689c:	b	16840 <sigaltstack@plt+0x53a0>
   168a0:	bl	1135c <__errno_location@plt>
   168a4:	ldr	r3, [r0]
   168a8:	cmp	r3, #22
   168ac:	beq	16804 <sigaltstack@plt+0x5364>
   168b0:	ldr	r3, [sp, #8]
   168b4:	ldr	r3, [r3]
   168b8:	cmp	r3, sl
   168bc:	beq	168e0 <sigaltstack@plt+0x5440>
   168c0:	bl	1135c <__errno_location@plt>
   168c4:	mov	r4, r0
   168c8:	mov	r0, sl
   168cc:	ldr	r5, [r4]
   168d0:	bl	1117c <free@plt>
   168d4:	str	r5, [r4]
   168d8:	mvn	r3, #0
   168dc:	b	16840 <sigaltstack@plt+0x53a0>
   168e0:	mvn	r3, #0
   168e4:	b	16840 <sigaltstack@plt+0x53a0>
   168e8:	mov	r4, r9
   168ec:	add	r5, sp, #36	; 0x24
   168f0:	add	r7, sp, #28
   168f4:	add	r8, sp, #32
   168f8:	b	16744 <sigaltstack@plt+0x52a4>
   168fc:	bl	11200 <__stack_chk_fail@plt>
   16900:	bl	1147c <abort@plt>
   16904:	andeq	r8, r2, r8, lsl #30
   16908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1690c:	sub	sp, sp, #36	; 0x24
   16910:	ldr	r9, [pc, #468]	; 16aec <sigaltstack@plt+0x564c>
   16914:	mov	r7, r1
   16918:	str	r0, [sp, #12]
   1691c:	ldr	r3, [r9]
   16920:	str	r3, [sp, #28]
   16924:	bl	11344 <strlen@plt>
   16928:	cmp	r0, #4096	; 0x1000
   1692c:	mov	r4, r0
   16930:	lslcc	r4, r0, #4
   16934:	add	sl, r4, #1
   16938:	str	r0, [sp, #16]
   1693c:	mov	r0, sl
   16940:	bl	112cc <malloc@plt>
   16944:	subs	r6, r0, #0
   16948:	beq	16ad8 <sigaltstack@plt+0x5638>
   1694c:	mov	r3, #0
   16950:	str	r3, [sp]
   16954:	mov	r2, r3
   16958:	mov	r1, r3
   1695c:	mov	r0, r7
   16960:	bl	1114c <iconv@plt>
   16964:	add	r8, sp, #24
   16968:	str	r6, [sp, #20]
   1696c:	str	r4, [sp, #24]
   16970:	b	169d4 <sigaltstack@plt+0x5534>
   16974:	bl	1135c <__errno_location@plt>
   16978:	ldr	r3, [r0]
   1697c:	mov	fp, r0
   16980:	cmp	r3, #22
   16984:	beq	16a50 <sigaltstack@plt+0x55b0>
   16988:	cmp	r3, #7
   1698c:	bne	16ab0 <sigaltstack@plt+0x5610>
   16990:	ldr	r4, [sp, #20]
   16994:	lsl	r5, sl, #1
   16998:	cmp	sl, r5
   1699c:	sub	r4, r4, r6
   169a0:	bcs	16aa8 <sigaltstack@plt+0x5608>
   169a4:	mov	r1, r5
   169a8:	mov	r0, r6
   169ac:	bl	11224 <realloc@plt>
   169b0:	cmp	r0, #0
   169b4:	beq	16aa8 <sigaltstack@plt+0x5608>
   169b8:	sub	r3, r5, #1
   169bc:	mov	r6, r0
   169c0:	mov	sl, r5
   169c4:	sub	r3, r3, r4
   169c8:	add	r4, r0, r4
   169cc:	str	r3, [sp, #24]
   169d0:	str	r4, [sp, #20]
   169d4:	str	r8, [sp]
   169d8:	add	r3, sp, #20
   169dc:	add	r2, sp, #16
   169e0:	add	r1, sp, #12
   169e4:	mov	r0, r7
   169e8:	bl	1114c <iconv@plt>
   169ec:	cmn	r0, #1
   169f0:	beq	16974 <sigaltstack@plt+0x54d4>
   169f4:	b	16a50 <sigaltstack@plt+0x55b0>
   169f8:	bl	1135c <__errno_location@plt>
   169fc:	ldr	r3, [r0]
   16a00:	mov	fp, r0
   16a04:	cmp	r3, #7
   16a08:	bne	16ab0 <sigaltstack@plt+0x5610>
   16a0c:	ldr	r4, [sp, #20]
   16a10:	lsl	r5, sl, #1
   16a14:	cmp	sl, r5
   16a18:	sub	r4, r4, r6
   16a1c:	bcs	16aa8 <sigaltstack@plt+0x5608>
   16a20:	mov	r1, r5
   16a24:	mov	r0, r6
   16a28:	bl	11224 <realloc@plt>
   16a2c:	cmp	r0, #0
   16a30:	beq	16aa8 <sigaltstack@plt+0x5608>
   16a34:	sub	r3, r5, #1
   16a38:	mov	sl, r5
   16a3c:	mov	r6, r0
   16a40:	sub	r3, r3, r4
   16a44:	add	r4, r0, r4
   16a48:	str	r3, [sp, #24]
   16a4c:	str	r4, [sp, #20]
   16a50:	mov	r2, #0
   16a54:	str	r8, [sp]
   16a58:	mov	r1, r2
   16a5c:	add	r3, sp, #20
   16a60:	mov	r0, r7
   16a64:	bl	1114c <iconv@plt>
   16a68:	cmn	r0, #1
   16a6c:	beq	169f8 <sigaltstack@plt+0x5558>
   16a70:	ldr	r3, [sp, #20]
   16a74:	mov	r2, #0
   16a78:	add	r1, r3, #1
   16a7c:	str	r1, [sp, #20]
   16a80:	strb	r2, [r3]
   16a84:	ldr	r1, [sp, #20]
   16a88:	sub	r1, r1, r6
   16a8c:	cmp	sl, r1
   16a90:	bls	16abc <sigaltstack@plt+0x561c>
   16a94:	mov	r0, r6
   16a98:	bl	11224 <realloc@plt>
   16a9c:	cmp	r0, #0
   16aa0:	movne	r6, r0
   16aa4:	b	16abc <sigaltstack@plt+0x561c>
   16aa8:	mov	r3, #12
   16aac:	str	r3, [fp]
   16ab0:	mov	r0, r6
   16ab4:	bl	1117c <free@plt>
   16ab8:	mov	r6, #0
   16abc:	ldr	r2, [sp, #28]
   16ac0:	ldr	r3, [r9]
   16ac4:	mov	r0, r6
   16ac8:	cmp	r2, r3
   16acc:	bne	16ae8 <sigaltstack@plt+0x5648>
   16ad0:	add	sp, sp, #36	; 0x24
   16ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ad8:	bl	1135c <__errno_location@plt>
   16adc:	mov	r3, #12
   16ae0:	str	r3, [r0]
   16ae4:	b	16abc <sigaltstack@plt+0x561c>
   16ae8:	bl	11200 <__stack_chk_fail@plt>
   16aec:	andeq	r8, r2, r8, lsl #30
   16af0:	push	{r4, r5, r6, lr}
   16af4:	mov	r4, r0
   16af8:	ldrb	r3, [r0]
   16afc:	cmp	r3, #0
   16b00:	beq	16b20 <sigaltstack@plt+0x5680>
   16b04:	mov	r6, r1
   16b08:	mov	r0, r6
   16b0c:	mov	r1, r2
   16b10:	mov	r5, r2
   16b14:	bl	14e84 <sigaltstack@plt+0x39e4>
   16b18:	cmp	r0, #0
   16b1c:	bne	16b38 <sigaltstack@plt+0x5698>
   16b20:	mov	r0, r4
   16b24:	bl	111f4 <strdup@plt>
   16b28:	subs	r4, r0, #0
   16b2c:	beq	16b98 <sigaltstack@plt+0x56f8>
   16b30:	mov	r0, r4
   16b34:	pop	{r4, r5, r6, pc}
   16b38:	mov	r0, r5
   16b3c:	mov	r1, r6
   16b40:	bl	112d8 <iconv_open@plt>
   16b44:	cmn	r0, #1
   16b48:	mov	r5, r0
   16b4c:	moveq	r4, #0
   16b50:	beq	16b30 <sigaltstack@plt+0x5690>
   16b54:	mov	r0, r4
   16b58:	mov	r1, r5
   16b5c:	bl	16908 <sigaltstack@plt+0x5468>
   16b60:	subs	r4, r0, #0
   16b64:	beq	16bac <sigaltstack@plt+0x570c>
   16b68:	mov	r0, r5
   16b6c:	bl	11140 <iconv_close@plt>
   16b70:	cmp	r0, #0
   16b74:	bge	16b30 <sigaltstack@plt+0x5690>
   16b78:	bl	1135c <__errno_location@plt>
   16b7c:	mov	r5, r0
   16b80:	mov	r0, r4
   16b84:	ldr	r6, [r5]
   16b88:	mov	r4, #0
   16b8c:	bl	1117c <free@plt>
   16b90:	str	r6, [r5]
   16b94:	b	16b30 <sigaltstack@plt+0x5690>
   16b98:	bl	1135c <__errno_location@plt>
   16b9c:	mov	r3, #12
   16ba0:	str	r3, [r0]
   16ba4:	mov	r0, r4
   16ba8:	pop	{r4, r5, r6, pc}
   16bac:	bl	1135c <__errno_location@plt>
   16bb0:	mov	r6, r0
   16bb4:	mov	r0, r5
   16bb8:	ldr	r5, [r6]
   16bbc:	bl	11140 <iconv_close@plt>
   16bc0:	str	r5, [r6]
   16bc4:	b	16b30 <sigaltstack@plt+0x5690>
   16bc8:	mov	r3, #16
   16bcc:	adds	r0, r0, r3
   16bd0:	bcs	16bfc <sigaltstack@plt+0x575c>
   16bd4:	push	{r4, lr}
   16bd8:	bl	112cc <malloc@plt>
   16bdc:	subs	r2, r0, #0
   16be0:	addne	r3, r2, #8
   16be4:	bicne	r3, r3, #15
   16be8:	moveq	r0, #0
   16bec:	addne	r0, r3, #8
   16bf0:	subne	r2, r0, r2
   16bf4:	strbne	r2, [r3, #7]
   16bf8:	pop	{r4, pc}
   16bfc:	mov	r0, #0
   16c00:	bx	lr
   16c04:	tst	r0, #7
   16c08:	bne	16c20 <sigaltstack@plt+0x5780>
   16c0c:	tst	r0, #8
   16c10:	bxeq	lr
   16c14:	ldrb	r3, [r0, #-1]
   16c18:	sub	r0, r0, r3
   16c1c:	b	1117c <free@plt>
   16c20:	push	{r4, lr}
   16c24:	bl	1147c <abort@plt>
   16c28:	push	{r4, r5, r6, r7, r8, lr}
   16c2c:	sub	sp, sp, #64	; 0x40
   16c30:	ldr	r7, [pc, #464]	; 16e08 <sigaltstack@plt+0x5968>
   16c34:	mov	r4, r0
   16c38:	ldr	r3, [r7]
   16c3c:	str	r3, [sp, #60]	; 0x3c
   16c40:	bl	11284 <__ctype_get_mb_cur_max@plt>
   16c44:	cmp	r0, #1
   16c48:	bhi	16c74 <sigaltstack@plt+0x57d4>
   16c4c:	mov	r0, r4
   16c50:	bl	11344 <strlen@plt>
   16c54:	mov	r5, r0
   16c58:	ldr	r2, [sp, #60]	; 0x3c
   16c5c:	ldr	r3, [r7]
   16c60:	mov	r0, r5
   16c64:	cmp	r2, r3
   16c68:	bne	16df0 <sigaltstack@plt+0x5950>
   16c6c:	add	sp, sp, #64	; 0x40
   16c70:	pop	{r4, r5, r6, r7, r8, pc}
   16c74:	mov	r5, #0
   16c78:	str	r4, [sp, #20]
   16c7c:	str	r5, [sp, #12]
   16c80:	strb	r5, [sp, #4]
   16c84:	str	r5, [sp, #8]
   16c88:	strb	r5, [sp, #16]
   16c8c:	mov	r6, #1
   16c90:	ldr	r8, [pc, #372]	; 16e0c <sigaltstack@plt+0x596c>
   16c94:	b	16cec <sigaltstack@plt+0x584c>
   16c98:	ldrb	r3, [r4]
   16c9c:	and	r2, r3, #31
   16ca0:	lsr	r3, r3, #5
   16ca4:	ldr	r3, [r8, r3, lsl #2]
   16ca8:	lsr	r3, r3, r2
   16cac:	tst	r3, #1
   16cb0:	beq	16d60 <sigaltstack@plt+0x58c0>
   16cb4:	str	r6, [sp, #24]
   16cb8:	ldrb	r4, [r4]
   16cbc:	strb	r6, [sp, #28]
   16cc0:	strb	r6, [sp, #16]
   16cc4:	str	r4, [sp, #32]
   16cc8:	cmp	r4, #0
   16ccc:	beq	16c58 <sigaltstack@plt+0x57b8>
   16cd0:	ldr	r4, [sp, #20]
   16cd4:	ldr	r3, [sp, #24]
   16cd8:	add	r5, r5, #1
   16cdc:	add	r4, r4, r3
   16ce0:	mov	r3, #0
   16ce4:	str	r4, [sp, #20]
   16ce8:	strb	r3, [sp, #16]
   16cec:	ldrb	r3, [sp, #4]
   16cf0:	cmp	r3, #0
   16cf4:	beq	16c98 <sigaltstack@plt+0x57f8>
   16cf8:	bl	11284 <__ctype_get_mb_cur_max@plt>
   16cfc:	mov	r1, r0
   16d00:	mov	r0, r4
   16d04:	bl	1404c <sigaltstack@plt+0x2bac>
   16d08:	add	r3, sp, #8
   16d0c:	mov	r1, r4
   16d10:	mov	r2, r0
   16d14:	add	r0, sp, #32
   16d18:	bl	14e04 <sigaltstack@plt+0x3964>
   16d1c:	cmn	r0, #1
   16d20:	str	r0, [sp, #24]
   16d24:	beq	16d78 <sigaltstack@plt+0x58d8>
   16d28:	cmn	r0, #2
   16d2c:	beq	16d8c <sigaltstack@plt+0x58ec>
   16d30:	cmp	r0, #0
   16d34:	beq	16da8 <sigaltstack@plt+0x5908>
   16d38:	ldr	r4, [sp, #32]
   16d3c:	add	r0, sp, #8
   16d40:	strb	r6, [sp, #28]
   16d44:	bl	111b8 <mbsinit@plt>
   16d48:	cmp	r0, #0
   16d4c:	movne	r3, #0
   16d50:	strbeq	r6, [sp, #16]
   16d54:	strbne	r6, [sp, #16]
   16d58:	strbne	r3, [sp, #4]
   16d5c:	b	16cc8 <sigaltstack@plt+0x5828>
   16d60:	add	r0, sp, #8
   16d64:	bl	111b8 <mbsinit@plt>
   16d68:	cmp	r0, #0
   16d6c:	beq	16ddc <sigaltstack@plt+0x593c>
   16d70:	strb	r6, [sp, #4]
   16d74:	b	16cf8 <sigaltstack@plt+0x5858>
   16d78:	mov	r3, #0
   16d7c:	str	r6, [sp, #24]
   16d80:	strb	r3, [sp, #28]
   16d84:	ldr	r4, [sp, #20]
   16d88:	b	16cd4 <sigaltstack@plt+0x5834>
   16d8c:	ldr	r4, [sp, #20]
   16d90:	mov	r0, r4
   16d94:	bl	11344 <strlen@plt>
   16d98:	mov	r3, #0
   16d9c:	strb	r3, [sp, #28]
   16da0:	str	r0, [sp, #24]
   16da4:	b	16cd4 <sigaltstack@plt+0x5834>
   16da8:	ldr	r4, [sp, #20]
   16dac:	str	r6, [sp, #24]
   16db0:	ldrb	r3, [r4]
   16db4:	cmp	r3, #0
   16db8:	bne	16df4 <sigaltstack@plt+0x5954>
   16dbc:	ldr	r4, [sp, #32]
   16dc0:	cmp	r4, #0
   16dc4:	beq	16d3c <sigaltstack@plt+0x589c>
   16dc8:	ldr	r3, [pc, #64]	; 16e10 <sigaltstack@plt+0x5970>
   16dcc:	mov	r2, #179	; 0xb3
   16dd0:	ldr	r1, [pc, #60]	; 16e14 <sigaltstack@plt+0x5974>
   16dd4:	ldr	r0, [pc, #60]	; 16e18 <sigaltstack@plt+0x5978>
   16dd8:	bl	11494 <__assert_fail@plt>
   16ddc:	ldr	r3, [pc, #44]	; 16e10 <sigaltstack@plt+0x5970>
   16de0:	mov	r2, #150	; 0x96
   16de4:	ldr	r1, [pc, #40]	; 16e14 <sigaltstack@plt+0x5974>
   16de8:	ldr	r0, [pc, #44]	; 16e1c <sigaltstack@plt+0x597c>
   16dec:	bl	11494 <__assert_fail@plt>
   16df0:	bl	11200 <__stack_chk_fail@plt>
   16df4:	ldr	r3, [pc, #20]	; 16e10 <sigaltstack@plt+0x5970>
   16df8:	mov	r2, #178	; 0xb2
   16dfc:	ldr	r1, [pc, #16]	; 16e14 <sigaltstack@plt+0x5974>
   16e00:	ldr	r0, [pc, #24]	; 16e20 <sigaltstack@plt+0x5980>
   16e04:	bl	11494 <__assert_fail@plt>
   16e08:	andeq	r8, r2, r8, lsl #30
   16e0c:	andeq	r8, r1, r4, lsr #6
   16e10:	andeq	r8, r1, r8, asr r3
   16e14:	andeq	r7, r1, r0, lsr pc
   16e18:	andeq	r7, r1, ip, lsr pc
   16e1c:	andeq	r7, r1, r0, asr pc
   16e20:	andeq	r7, r1, r8, ror #30
   16e24:	subs	r2, r1, #1
   16e28:	bxeq	lr
   16e2c:	bcc	17004 <sigaltstack@plt+0x5b64>
   16e30:	cmp	r0, r1
   16e34:	bls	16fe8 <sigaltstack@plt+0x5b48>
   16e38:	tst	r1, r2
   16e3c:	beq	16ff4 <sigaltstack@plt+0x5b54>
   16e40:	clz	r3, r0
   16e44:	clz	r2, r1
   16e48:	sub	r3, r2, r3
   16e4c:	rsbs	r3, r3, #31
   16e50:	addne	r3, r3, r3, lsl #1
   16e54:	mov	r2, #0
   16e58:	addne	pc, pc, r3, lsl #2
   16e5c:	nop			; (mov r0, r0)
   16e60:	cmp	r0, r1, lsl #31
   16e64:	adc	r2, r2, r2
   16e68:	subcs	r0, r0, r1, lsl #31
   16e6c:	cmp	r0, r1, lsl #30
   16e70:	adc	r2, r2, r2
   16e74:	subcs	r0, r0, r1, lsl #30
   16e78:	cmp	r0, r1, lsl #29
   16e7c:	adc	r2, r2, r2
   16e80:	subcs	r0, r0, r1, lsl #29
   16e84:	cmp	r0, r1, lsl #28
   16e88:	adc	r2, r2, r2
   16e8c:	subcs	r0, r0, r1, lsl #28
   16e90:	cmp	r0, r1, lsl #27
   16e94:	adc	r2, r2, r2
   16e98:	subcs	r0, r0, r1, lsl #27
   16e9c:	cmp	r0, r1, lsl #26
   16ea0:	adc	r2, r2, r2
   16ea4:	subcs	r0, r0, r1, lsl #26
   16ea8:	cmp	r0, r1, lsl #25
   16eac:	adc	r2, r2, r2
   16eb0:	subcs	r0, r0, r1, lsl #25
   16eb4:	cmp	r0, r1, lsl #24
   16eb8:	adc	r2, r2, r2
   16ebc:	subcs	r0, r0, r1, lsl #24
   16ec0:	cmp	r0, r1, lsl #23
   16ec4:	adc	r2, r2, r2
   16ec8:	subcs	r0, r0, r1, lsl #23
   16ecc:	cmp	r0, r1, lsl #22
   16ed0:	adc	r2, r2, r2
   16ed4:	subcs	r0, r0, r1, lsl #22
   16ed8:	cmp	r0, r1, lsl #21
   16edc:	adc	r2, r2, r2
   16ee0:	subcs	r0, r0, r1, lsl #21
   16ee4:	cmp	r0, r1, lsl #20
   16ee8:	adc	r2, r2, r2
   16eec:	subcs	r0, r0, r1, lsl #20
   16ef0:	cmp	r0, r1, lsl #19
   16ef4:	adc	r2, r2, r2
   16ef8:	subcs	r0, r0, r1, lsl #19
   16efc:	cmp	r0, r1, lsl #18
   16f00:	adc	r2, r2, r2
   16f04:	subcs	r0, r0, r1, lsl #18
   16f08:	cmp	r0, r1, lsl #17
   16f0c:	adc	r2, r2, r2
   16f10:	subcs	r0, r0, r1, lsl #17
   16f14:	cmp	r0, r1, lsl #16
   16f18:	adc	r2, r2, r2
   16f1c:	subcs	r0, r0, r1, lsl #16
   16f20:	cmp	r0, r1, lsl #15
   16f24:	adc	r2, r2, r2
   16f28:	subcs	r0, r0, r1, lsl #15
   16f2c:	cmp	r0, r1, lsl #14
   16f30:	adc	r2, r2, r2
   16f34:	subcs	r0, r0, r1, lsl #14
   16f38:	cmp	r0, r1, lsl #13
   16f3c:	adc	r2, r2, r2
   16f40:	subcs	r0, r0, r1, lsl #13
   16f44:	cmp	r0, r1, lsl #12
   16f48:	adc	r2, r2, r2
   16f4c:	subcs	r0, r0, r1, lsl #12
   16f50:	cmp	r0, r1, lsl #11
   16f54:	adc	r2, r2, r2
   16f58:	subcs	r0, r0, r1, lsl #11
   16f5c:	cmp	r0, r1, lsl #10
   16f60:	adc	r2, r2, r2
   16f64:	subcs	r0, r0, r1, lsl #10
   16f68:	cmp	r0, r1, lsl #9
   16f6c:	adc	r2, r2, r2
   16f70:	subcs	r0, r0, r1, lsl #9
   16f74:	cmp	r0, r1, lsl #8
   16f78:	adc	r2, r2, r2
   16f7c:	subcs	r0, r0, r1, lsl #8
   16f80:	cmp	r0, r1, lsl #7
   16f84:	adc	r2, r2, r2
   16f88:	subcs	r0, r0, r1, lsl #7
   16f8c:	cmp	r0, r1, lsl #6
   16f90:	adc	r2, r2, r2
   16f94:	subcs	r0, r0, r1, lsl #6
   16f98:	cmp	r0, r1, lsl #5
   16f9c:	adc	r2, r2, r2
   16fa0:	subcs	r0, r0, r1, lsl #5
   16fa4:	cmp	r0, r1, lsl #4
   16fa8:	adc	r2, r2, r2
   16fac:	subcs	r0, r0, r1, lsl #4
   16fb0:	cmp	r0, r1, lsl #3
   16fb4:	adc	r2, r2, r2
   16fb8:	subcs	r0, r0, r1, lsl #3
   16fbc:	cmp	r0, r1, lsl #2
   16fc0:	adc	r2, r2, r2
   16fc4:	subcs	r0, r0, r1, lsl #2
   16fc8:	cmp	r0, r1, lsl #1
   16fcc:	adc	r2, r2, r2
   16fd0:	subcs	r0, r0, r1, lsl #1
   16fd4:	cmp	r0, r1
   16fd8:	adc	r2, r2, r2
   16fdc:	subcs	r0, r0, r1
   16fe0:	mov	r0, r2
   16fe4:	bx	lr
   16fe8:	moveq	r0, #1
   16fec:	movne	r0, #0
   16ff0:	bx	lr
   16ff4:	clz	r2, r1
   16ff8:	rsb	r2, r2, #31
   16ffc:	lsr	r0, r0, r2
   17000:	bx	lr
   17004:	cmp	r0, #0
   17008:	mvnne	r0, #0
   1700c:	b	17030 <sigaltstack@plt+0x5b90>
   17010:	cmp	r1, #0
   17014:	beq	17004 <sigaltstack@plt+0x5b64>
   17018:	push	{r0, r1, lr}
   1701c:	bl	16e24 <sigaltstack@plt+0x5984>
   17020:	pop	{r1, r2, lr}
   17024:	mul	r3, r2, r0
   17028:	sub	r1, r1, r3
   1702c:	bx	lr
   17030:	push	{r1, lr}
   17034:	mov	r0, #8
   17038:	bl	11134 <raise@plt>
   1703c:	pop	{r1, pc}
   17040:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17044:	mov	r7, r0
   17048:	ldr	r6, [pc, #72]	; 17098 <sigaltstack@plt+0x5bf8>
   1704c:	ldr	r5, [pc, #72]	; 1709c <sigaltstack@plt+0x5bfc>
   17050:	add	r6, pc, r6
   17054:	add	r5, pc, r5
   17058:	sub	r6, r6, r5
   1705c:	mov	r8, r1
   17060:	mov	r9, r2
   17064:	bl	110f0 <fdopen@plt-0x20>
   17068:	asrs	r6, r6, #2
   1706c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17070:	mov	r4, #0
   17074:	add	r4, r4, #1
   17078:	ldr	r3, [r5], #4
   1707c:	mov	r2, r9
   17080:	mov	r1, r8
   17084:	mov	r0, r7
   17088:	blx	r3
   1708c:	cmp	r6, r4
   17090:	bne	17074 <sigaltstack@plt+0x5bd4>
   17094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17098:	andeq	r1, r1, ip, lsr #29
   1709c:	andeq	r1, r1, r4, lsr #29
   170a0:	bx	lr

Disassembly of section .fini:

000170a4 <.fini>:
   170a4:	push	{r3, lr}
   170a8:	pop	{r3, pc}
