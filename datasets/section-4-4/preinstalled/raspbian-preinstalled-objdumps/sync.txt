
raspbian-preinstalled/sync:     file format elf32-littlearm


Disassembly of section .init:

00010c44 <.init>:
   10c44:	push	{r3, lr}
   10c48:	bl	11254 <close@plt+0x3a4>
   10c4c:	pop	{r3, pc}

Disassembly of section .plt:

00010c50 <calloc@plt-0x14>:
   10c50:	push	{lr}		; (str lr, [sp, #-4]!)
   10c54:	ldr	lr, [pc, #4]	; 10c60 <calloc@plt-0x4>
   10c58:	add	lr, pc, lr
   10c5c:	ldr	pc, [lr, #8]!
   10c60:	andeq	r5, r1, r0, lsr #7

00010c64 <calloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #86016	; 0x15000
   10c6c:	ldr	pc, [ip, #928]!	; 0x3a0

00010c70 <fputs_unlocked@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #86016	; 0x15000
   10c78:	ldr	pc, [ip, #920]!	; 0x398

00010c7c <raise@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #912]!	; 0x390

00010c88 <fsync@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #904]!	; 0x388

00010c94 <strcmp@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #896]!	; 0x380

00010ca0 <fflush@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #888]!	; 0x378

00010cac <free@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #880]!	; 0x370

00010cb8 <_exit@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #872]!	; 0x368

00010cc4 <memcpy@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #864]!	; 0x360

00010cd0 <mbsinit@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #856]!	; 0x358

00010cdc <memcmp@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #848]!	; 0x350

00010ce8 <dcgettext@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #840]!	; 0x348

00010cf4 <syncfs@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #832]!	; 0x340

00010d00 <__stack_chk_fail@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #824]!	; 0x338

00010d0c <realloc@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #816]!	; 0x330

00010d18 <textdomain@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #808]!	; 0x328

00010d24 <iswprint@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #800]!	; 0x320

00010d30 <fwrite@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #792]!	; 0x318

00010d3c <lseek64@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #784]!	; 0x310

00010d48 <__ctype_get_mb_cur_max@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #776]!	; 0x308

00010d54 <__fpending@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #768]!	; 0x300

00010d60 <mbrtowc@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #760]!	; 0x2f8

00010d6c <error@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #752]!	; 0x2f0

00010d78 <open64@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #744]!	; 0x2e8

00010d84 <malloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d90 <__libc_start_main@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #728]!	; 0x2d8

00010d9c <__freading@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #720]!	; 0x2d0

00010da8 <__gmon_start__@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #712]!	; 0x2c8

00010db4 <getopt_long@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc0 <__ctype_b_loc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dcc <exit@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd8 <strlen@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #680]!	; 0x2a8

00010de4 <__errno_location@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #672]!	; 0x2a0

00010df0 <__cxa_atexit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #664]!	; 0x298

00010dfc <memset@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #656]!	; 0x290

00010e08 <__printf_chk@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #648]!	; 0x288

00010e14 <fileno@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #640]!	; 0x280

00010e20 <__fprintf_chk@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #632]!	; 0x278

00010e2c <fclose@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #624]!	; 0x270

00010e38 <fseeko64@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #616]!	; 0x268

00010e44 <fcntl64@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #608]!	; 0x260

00010e50 <setlocale@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #600]!	; 0x258

00010e5c <strrchr@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #592]!	; 0x250

00010e68 <nl_langinfo@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #584]!	; 0x248

00010e74 <bindtextdomain@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #576]!	; 0x240

00010e80 <sync@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #568]!	; 0x238

00010e8c <strncmp@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #560]!	; 0x230

00010e98 <fdatasync@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #552]!	; 0x228

00010ea4 <abort@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #544]!	; 0x220

00010eb0 <close@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #536]!	; 0x218

Disassembly of section .text:

00010ebc <.text>:
   10ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ec0:	mov	r5, r0
   10ec4:	sub	sp, sp, #28
   10ec8:	ldr	r0, [r1]
   10ecc:	mov	r4, r1
   10ed0:	bl	11718 <close@plt+0x868>
   10ed4:	ldr	r1, [pc, #748]	; 111c8 <close@plt+0x318>
   10ed8:	mov	r0, #6
   10edc:	bl	10e50 <setlocale@plt>
   10ee0:	ldr	r1, [pc, #740]	; 111cc <close@plt+0x31c>
   10ee4:	ldr	r0, [pc, #740]	; 111d0 <close@plt+0x320>
   10ee8:	bl	10e74 <bindtextdomain@plt>
   10eec:	ldr	r0, [pc, #732]	; 111d0 <close@plt+0x320>
   10ef0:	bl	10d18 <textdomain@plt>
   10ef4:	ldr	r0, [pc, #728]	; 111d4 <close@plt+0x324>
   10ef8:	bl	14854 <close@plt+0x39a4>
   10efc:	mov	r7, #0
   10f00:	ldr	sl, [pc, #720]	; 111d8 <close@plt+0x328>
   10f04:	ldr	r9, [pc, #720]	; 111dc <close@plt+0x32c>
   10f08:	mov	r6, r7
   10f0c:	mov	r8, r7
   10f10:	str	r8, [sp]
   10f14:	mov	r3, sl
   10f18:	mov	r2, r9
   10f1c:	mov	r1, r4
   10f20:	mov	r0, r5
   10f24:	bl	10db4 <getopt_long@plt>
   10f28:	cmn	r0, #1
   10f2c:	beq	10f9c <close@plt+0xec>
   10f30:	cmn	r0, #2
   10f34:	beq	11198 <close@plt+0x2e8>
   10f38:	ble	10f4c <close@plt+0x9c>
   10f3c:	cmp	r0, #100	; 0x64
   10f40:	bne	10f8c <close@plt+0xdc>
   10f44:	mov	r6, #1
   10f48:	b	10f10 <close@plt+0x60>
   10f4c:	cmn	r0, #3
   10f50:	bne	111a0 <close@plt+0x2f0>
   10f54:	ldr	r3, [pc, #644]	; 111e0 <close@plt+0x330>
   10f58:	ldr	r0, [pc, #644]	; 111e4 <close@plt+0x334>
   10f5c:	ldr	r1, [pc, #644]	; 111e8 <close@plt+0x338>
   10f60:	ldr	r2, [pc, #644]	; 111ec <close@plt+0x33c>
   10f64:	str	r8, [sp, #8]
   10f68:	ldr	r0, [r0]
   10f6c:	ldr	r3, [r3]
   10f70:	str	r1, [sp, #4]
   10f74:	str	r2, [sp]
   10f78:	ldr	r1, [pc, #624]	; 111f0 <close@plt+0x340>
   10f7c:	ldr	r2, [pc, #624]	; 111f4 <close@plt+0x344>
   10f80:	bl	13de8 <close@plt+0x2f38>
   10f84:	mov	r0, #0
   10f88:	bl	10dcc <exit@plt>
   10f8c:	cmp	r0, #102	; 0x66
   10f90:	bne	111a0 <close@plt+0x2f0>
   10f94:	mov	r7, #1
   10f98:	b	10f10 <close@plt+0x60>
   10f9c:	ldr	r9, [pc, #596]	; 111f8 <close@plt+0x348>
   10fa0:	ands	r8, r6, r7
   10fa4:	ldr	r3, [r9]
   10fa8:	bne	111a8 <close@plt+0x2f8>
   10fac:	cmp	r3, r5
   10fb0:	movlt	r2, #0
   10fb4:	andge	r2, r6, #1
   10fb8:	cmp	r2, #0
   10fbc:	movne	r2, #5
   10fc0:	ldrne	r1, [pc, #564]	; 111fc <close@plt+0x34c>
   10fc4:	bne	111b0 <close@plt+0x300>
   10fc8:	cmp	r3, r5
   10fcc:	bge	1115c <close@plt+0x2ac>
   10fd0:	cmp	r7, #0
   10fd4:	moveq	r2, r6
   10fd8:	movne	r2, #2
   10fdc:	str	r2, [sp, #20]
   10fe0:	mov	r8, #1
   10fe4:	b	11060 <close@plt+0x1b0>
   10fe8:	mov	r1, #3
   10fec:	bl	14174 <close@plt+0x32c4>
   10ff0:	cmn	r0, #1
   10ff4:	beq	110d4 <close@plt+0x224>
   10ff8:	bic	r2, r0, #2048	; 0x800
   10ffc:	mov	r1, #4
   11000:	mov	r0, r7
   11004:	bl	14174 <close@plt+0x32c4>
   11008:	cmp	r0, #0
   1100c:	blt	110d4 <close@plt+0x224>
   11010:	ldr	r3, [sp, #20]
   11014:	cmp	r3, #1
   11018:	beq	11180 <close@plt+0x2d0>
   1101c:	cmp	r3, #2
   11020:	beq	1118c <close@plt+0x2dc>
   11024:	mov	r0, r7
   11028:	bl	10c88 <fsync@plt>
   1102c:	cmp	r0, #0
   11030:	movge	sl, #1
   11034:	blt	11170 <close@plt+0x2c0>
   11038:	mov	r0, r7
   1103c:	bl	10eb0 <close@plt>
   11040:	cmp	r0, #0
   11044:	blt	11118 <close@plt+0x268>
   11048:	ldr	r3, [r9]
   1104c:	and	r8, r8, sl
   11050:	add	r3, r3, #1
   11054:	cmp	r3, r5
   11058:	str	r3, [r9]
   1105c:	bge	11164 <close@plt+0x2b4>
   11060:	ldr	r6, [r4, r3, lsl #2]
   11064:	mov	r1, #2048	; 0x800
   11068:	mov	r0, r6
   1106c:	bl	10d78 <open64@plt>
   11070:	subs	r7, r0, #0
   11074:	bge	10fe8 <close@plt+0x138>
   11078:	bl	10de4 <__errno_location@plt>
   1107c:	ldr	r1, [pc, #380]	; 11200 <close@plt+0x350>
   11080:	ldr	r7, [r0]
   11084:	mov	r0, r6
   11088:	bl	10d78 <open64@plt>
   1108c:	cmp	r0, #0
   11090:	movge	sl, #0
   11094:	bge	11048 <close@plt+0x198>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #352]	; 11204 <close@plt+0x354>
   110a0:	mov	r0, #0
   110a4:	bl	10ce8 <dcgettext@plt>
   110a8:	mov	r1, r6
   110ac:	mov	sl, r0
   110b0:	mov	r0, #4
   110b4:	bl	136d4 <close@plt+0x2824>
   110b8:	mov	r2, sl
   110bc:	mov	r1, r7
   110c0:	mov	sl, #0
   110c4:	mov	r3, r0
   110c8:	mov	r0, #0
   110cc:	bl	10d6c <error@plt>
   110d0:	b	11048 <close@plt+0x198>
   110d4:	bl	10de4 <__errno_location@plt>
   110d8:	ldr	r1, [pc, #296]	; 11208 <close@plt+0x358>
   110dc:	mov	r2, #5
   110e0:	mov	sl, #0
   110e4:	ldr	fp, [r0]
   110e8:	mov	r0, sl
   110ec:	bl	10ce8 <dcgettext@plt>
   110f0:	mov	r1, r6
   110f4:	str	r0, [sp, #16]
   110f8:	mov	r0, #4
   110fc:	bl	136d4 <close@plt+0x2824>
   11100:	ldr	r2, [sp, #16]
   11104:	mov	r1, fp
   11108:	mov	r3, r0
   1110c:	mov	r0, sl
   11110:	bl	10d6c <error@plt>
   11114:	b	11038 <close@plt+0x188>
   11118:	bl	10de4 <__errno_location@plt>
   1111c:	mov	sl, #0
   11120:	mov	r2, #5
   11124:	ldr	r1, [pc, #224]	; 1120c <close@plt+0x35c>
   11128:	ldr	r7, [r0]
   1112c:	mov	r0, sl
   11130:	bl	10ce8 <dcgettext@plt>
   11134:	mov	r1, r6
   11138:	mov	fp, r0
   1113c:	mov	r0, #4
   11140:	bl	136d4 <close@plt+0x2824>
   11144:	mov	r2, fp
   11148:	mov	r1, r7
   1114c:	mov	r3, r0
   11150:	mov	r0, sl
   11154:	bl	10d6c <error@plt>
   11158:	b	11048 <close@plt+0x198>
   1115c:	bl	10e80 <sync@plt>
   11160:	mov	r8, #1
   11164:	eor	r0, r8, #1
   11168:	add	sp, sp, #28
   1116c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11170:	bl	10de4 <__errno_location@plt>
   11174:	mov	r2, #5
   11178:	ldr	r1, [pc, #144]	; 11210 <close@plt+0x360>
   1117c:	b	110e0 <close@plt+0x230>
   11180:	mov	r0, r7
   11184:	bl	10e98 <fdatasync@plt>
   11188:	b	1102c <close@plt+0x17c>
   1118c:	mov	r0, r7
   11190:	bl	10cf4 <syncfs@plt>
   11194:	b	1102c <close@plt+0x17c>
   11198:	mov	r0, #0
   1119c:	bl	11308 <close@plt+0x458>
   111a0:	mov	r0, #1
   111a4:	bl	11308 <close@plt+0x458>
   111a8:	ldr	r1, [pc, #100]	; 11214 <close@plt+0x364>
   111ac:	mov	r2, #5
   111b0:	mov	r0, #0
   111b4:	bl	10ce8 <dcgettext@plt>
   111b8:	mov	r1, #0
   111bc:	mov	r2, r0
   111c0:	mov	r0, #1
   111c4:	bl	10d6c <error@plt>
   111c8:	ldrdeq	r4, [r1], -r8
   111cc:	andeq	r4, r1, r0, asr #23
   111d0:	andeq	r4, r1, r4, lsl fp
   111d4:	andeq	r1, r1, r0, asr #12
   111d8:			; <UNDEFINED> instruction: 0x000148b0
   111dc:	strdeq	r4, [r1], -r8
   111e0:	andeq	r6, r2, r0, ror #1
   111e4:	andeq	r6, r2, ip, lsr r1
   111e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   111ec:	andeq	r4, r1, r8, ror #23
   111f0:	andeq	r4, r1, r0, lsl #18
   111f4:	andeq	r4, r1, r0, lsl fp
   111f8:	andeq	r6, r2, r0, lsr r1
   111fc:	andeq	r4, r1, ip, lsr #24
   11200:	andeq	r0, r0, r1, lsl #16
   11204:	andeq	r4, r1, r0, asr ip
   11208:	andeq	r4, r1, r4, ror #24
   1120c:	muleq	r1, ip, ip
   11210:	andeq	r4, r1, r8, lsl #25
   11214:	strdeq	r4, [r1], -ip
   11218:	mov	fp, #0
   1121c:	mov	lr, #0
   11220:	pop	{r1}		; (ldr r1, [sp], #4)
   11224:	mov	r2, sp
   11228:	push	{r2}		; (str r2, [sp, #-4]!)
   1122c:	push	{r0}		; (str r0, [sp, #-4]!)
   11230:	ldr	ip, [pc, #16]	; 11248 <close@plt+0x398>
   11234:	push	{ip}		; (str ip, [sp, #-4]!)
   11238:	ldr	r0, [pc, #12]	; 1124c <close@plt+0x39c>
   1123c:	ldr	r3, [pc, #12]	; 11250 <close@plt+0x3a0>
   11240:	bl	10d90 <__libc_start_main@plt>
   11244:	bl	10ea4 <abort@plt>
   11248:	andeq	r4, r1, r0, asr r8
   1124c:			; <UNDEFINED> instruction: 0x00010ebc
   11250:	strdeq	r4, [r1], -r0
   11254:	ldr	r3, [pc, #20]	; 11270 <close@plt+0x3c0>
   11258:	ldr	r2, [pc, #20]	; 11274 <close@plt+0x3c4>
   1125c:	add	r3, pc, r3
   11260:	ldr	r2, [r3, r2]
   11264:	cmp	r2, #0
   11268:	bxeq	lr
   1126c:	b	10da8 <__gmon_start__@plt>
   11270:	muleq	r1, ip, sp
   11274:	ldrdeq	r0, [r0], -r4
   11278:	ldr	r0, [pc, #24]	; 11298 <close@plt+0x3e8>
   1127c:	ldr	r3, [pc, #24]	; 1129c <close@plt+0x3ec>
   11280:	cmp	r3, r0
   11284:	bxeq	lr
   11288:	ldr	r3, [pc, #16]	; 112a0 <close@plt+0x3f0>
   1128c:	cmp	r3, #0
   11290:	bxeq	lr
   11294:	bx	r3
   11298:	andeq	r6, r2, r8, lsr #2
   1129c:	andeq	r6, r2, r8, lsr #2
   112a0:	andeq	r0, r0, r0
   112a4:	ldr	r0, [pc, #36]	; 112d0 <close@plt+0x420>
   112a8:	ldr	r1, [pc, #36]	; 112d4 <close@plt+0x424>
   112ac:	sub	r1, r1, r0
   112b0:	asr	r1, r1, #2
   112b4:	add	r1, r1, r1, lsr #31
   112b8:	asrs	r1, r1, #1
   112bc:	bxeq	lr
   112c0:	ldr	r3, [pc, #16]	; 112d8 <close@plt+0x428>
   112c4:	cmp	r3, #0
   112c8:	bxeq	lr
   112cc:	bx	r3
   112d0:	andeq	r6, r2, r8, lsr #2
   112d4:	andeq	r6, r2, r8, lsr #2
   112d8:	andeq	r0, r0, r0
   112dc:	push	{r4, lr}
   112e0:	ldr	r4, [pc, #24]	; 11300 <close@plt+0x450>
   112e4:	ldrb	r3, [r4]
   112e8:	cmp	r3, #0
   112ec:	popne	{r4, pc}
   112f0:	bl	11278 <close@plt+0x3c8>
   112f4:	mov	r3, #1
   112f8:	strb	r3, [r4]
   112fc:	pop	{r4, pc}
   11300:	andeq	r6, r2, r0, asr #2
   11304:	b	112a4 <close@plt+0x3f4>
   11308:	ldr	r3, [pc, #696]	; 115c8 <close@plt+0x718>
   1130c:	push	{r7, lr}
   11310:	sub	sp, sp, #64	; 0x40
   11314:	ldr	r3, [r3]
   11318:	subs	r4, r0, #0
   1131c:	str	r3, [sp, #60]	; 0x3c
   11320:	beq	1135c <close@plt+0x4ac>
   11324:	ldr	r3, [pc, #672]	; 115cc <close@plt+0x71c>
   11328:	mov	r2, #5
   1132c:	ldr	r1, [pc, #668]	; 115d0 <close@plt+0x720>
   11330:	mov	r0, #0
   11334:	ldr	r5, [r3]
   11338:	bl	10ce8 <dcgettext@plt>
   1133c:	ldr	r3, [pc, #656]	; 115d4 <close@plt+0x724>
   11340:	mov	r1, #1
   11344:	ldr	r3, [r3]
   11348:	mov	r2, r0
   1134c:	mov	r0, r5
   11350:	bl	10e20 <__fprintf_chk@plt>
   11354:	mov	r0, r4
   11358:	bl	10dcc <exit@plt>
   1135c:	mov	r2, #5
   11360:	ldr	r1, [pc, #624]	; 115d8 <close@plt+0x728>
   11364:	bl	10ce8 <dcgettext@plt>
   11368:	ldr	r3, [pc, #612]	; 115d4 <close@plt+0x724>
   1136c:	ldr	r5, [pc, #616]	; 115dc <close@plt+0x72c>
   11370:	ldr	r2, [r3]
   11374:	mov	r1, r0
   11378:	mov	r0, #1
   1137c:	bl	10e08 <__printf_chk@plt>
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #596]	; 115e0 <close@plt+0x730>
   11388:	mov	r0, r4
   1138c:	bl	10ce8 <dcgettext@plt>
   11390:	ldr	r1, [r5]
   11394:	bl	10c70 <fputs_unlocked@plt>
   11398:	mov	r2, #5
   1139c:	ldr	r1, [pc, #576]	; 115e4 <close@plt+0x734>
   113a0:	mov	r0, r4
   113a4:	bl	10ce8 <dcgettext@plt>
   113a8:	ldr	r1, [r5]
   113ac:	bl	10c70 <fputs_unlocked@plt>
   113b0:	mov	r2, #5
   113b4:	ldr	r1, [pc, #556]	; 115e8 <close@plt+0x738>
   113b8:	mov	r0, r4
   113bc:	bl	10ce8 <dcgettext@plt>
   113c0:	ldr	r1, [r5]
   113c4:	bl	10c70 <fputs_unlocked@plt>
   113c8:	mov	r2, #5
   113cc:	ldr	r1, [pc, #536]	; 115ec <close@plt+0x73c>
   113d0:	mov	r0, r4
   113d4:	bl	10ce8 <dcgettext@plt>
   113d8:	ldr	r1, [r5]
   113dc:	bl	10c70 <fputs_unlocked@plt>
   113e0:	mov	r2, #5
   113e4:	ldr	r1, [pc, #516]	; 115f0 <close@plt+0x740>
   113e8:	mov	r0, r4
   113ec:	bl	10ce8 <dcgettext@plt>
   113f0:	ldr	r1, [r5]
   113f4:	bl	10c70 <fputs_unlocked@plt>
   113f8:	ldr	lr, [pc, #500]	; 115f4 <close@plt+0x744>
   113fc:	add	ip, sp, #4
   11400:	ldm	lr!, {r0, r1, r2, r3}
   11404:	stmia	ip!, {r0, r1, r2, r3}
   11408:	ldm	lr!, {r0, r1, r2, r3}
   1140c:	ldr	r6, [sp, #4]
   11410:	stmia	ip!, {r0, r1, r2, r3}
   11414:	cmp	r6, #0
   11418:	ldm	lr!, {r0, r1, r2, r3}
   1141c:	addeq	r5, sp, #4
   11420:	stmia	ip!, {r0, r1, r2, r3}
   11424:	ldm	lr, {r0, r1}
   11428:	stm	ip, {r0, r1}
   1142c:	beq	1145c <close@plt+0x5ac>
   11430:	ldr	r7, [pc, #448]	; 115f8 <close@plt+0x748>
   11434:	add	r5, sp, #4
   11438:	b	11448 <close@plt+0x598>
   1143c:	ldr	r6, [r5, #8]!
   11440:	cmp	r6, #0
   11444:	beq	1145c <close@plt+0x5ac>
   11448:	mov	r1, r6
   1144c:	mov	r0, r7
   11450:	bl	10c94 <strcmp@plt>
   11454:	cmp	r0, #0
   11458:	bne	1143c <close@plt+0x58c>
   1145c:	ldr	r5, [r5, #4]
   11460:	mov	r2, #5
   11464:	cmp	r5, #0
   11468:	ldr	r1, [pc, #396]	; 115fc <close@plt+0x74c>
   1146c:	beq	11514 <close@plt+0x664>
   11470:	mov	r0, #0
   11474:	bl	10ce8 <dcgettext@plt>
   11478:	ldr	r3, [pc, #384]	; 11600 <close@plt+0x750>
   1147c:	ldr	r2, [pc, #384]	; 11604 <close@plt+0x754>
   11480:	mov	r1, r0
   11484:	mov	r0, #1
   11488:	bl	10e08 <__printf_chk@plt>
   1148c:	mov	r1, #0
   11490:	mov	r0, #5
   11494:	bl	10e50 <setlocale@plt>
   11498:	cmp	r0, #0
   1149c:	ldreq	r6, [pc, #340]	; 115f8 <close@plt+0x748>
   114a0:	beq	114bc <close@plt+0x60c>
   114a4:	mov	r2, #3
   114a8:	ldr	r1, [pc, #344]	; 11608 <close@plt+0x758>
   114ac:	bl	10e8c <strncmp@plt>
   114b0:	ldr	r6, [pc, #320]	; 115f8 <close@plt+0x748>
   114b4:	cmp	r0, #0
   114b8:	bne	115a4 <close@plt+0x6f4>
   114bc:	mov	r2, #5
   114c0:	ldr	r1, [pc, #324]	; 1160c <close@plt+0x75c>
   114c4:	mov	r0, #0
   114c8:	bl	10ce8 <dcgettext@plt>
   114cc:	ldr	r3, [pc, #292]	; 115f8 <close@plt+0x748>
   114d0:	ldr	r2, [pc, #296]	; 11600 <close@plt+0x750>
   114d4:	mov	r1, r0
   114d8:	mov	r0, #1
   114dc:	bl	10e08 <__printf_chk@plt>
   114e0:	mov	r2, #5
   114e4:	ldr	r1, [pc, #292]	; 11610 <close@plt+0x760>
   114e8:	mov	r0, #0
   114ec:	bl	10ce8 <dcgettext@plt>
   114f0:	ldr	r2, [pc, #284]	; 11614 <close@plt+0x764>
   114f4:	cmp	r5, r6
   114f8:	ldr	r3, [pc, #280]	; 11618 <close@plt+0x768>
   114fc:	movne	r3, r2
   11500:	mov	r1, r0
   11504:	mov	r2, r5
   11508:	mov	r0, #1
   1150c:	bl	10e08 <__printf_chk@plt>
   11510:	b	11354 <close@plt+0x4a4>
   11514:	mov	r0, r5
   11518:	bl	10ce8 <dcgettext@plt>
   1151c:	ldr	r3, [pc, #220]	; 11600 <close@plt+0x750>
   11520:	ldr	r2, [pc, #220]	; 11604 <close@plt+0x754>
   11524:	mov	r1, r0
   11528:	mov	r0, #1
   1152c:	bl	10e08 <__printf_chk@plt>
   11530:	mov	r1, r5
   11534:	mov	r0, #5
   11538:	bl	10e50 <setlocale@plt>
   1153c:	cmp	r0, #0
   11540:	beq	11558 <close@plt+0x6a8>
   11544:	mov	r2, #3
   11548:	ldr	r1, [pc, #184]	; 11608 <close@plt+0x758>
   1154c:	bl	10e8c <strncmp@plt>
   11550:	cmp	r0, #0
   11554:	bne	1159c <close@plt+0x6ec>
   11558:	mov	r2, #5
   1155c:	ldr	r1, [pc, #168]	; 1160c <close@plt+0x75c>
   11560:	mov	r0, #0
   11564:	bl	10ce8 <dcgettext@plt>
   11568:	ldr	r3, [pc, #136]	; 115f8 <close@plt+0x748>
   1156c:	ldr	r2, [pc, #140]	; 11600 <close@plt+0x750>
   11570:	mov	r5, r3
   11574:	mov	r1, r0
   11578:	mov	r0, #1
   1157c:	bl	10e08 <__printf_chk@plt>
   11580:	ldr	r1, [pc, #136]	; 11610 <close@plt+0x760>
   11584:	mov	r2, #5
   11588:	mov	r0, #0
   1158c:	bl	10ce8 <dcgettext@plt>
   11590:	ldr	r3, [pc, #128]	; 11618 <close@plt+0x768>
   11594:	mov	r1, r0
   11598:	b	11504 <close@plt+0x654>
   1159c:	ldr	r6, [pc, #84]	; 115f8 <close@plt+0x748>
   115a0:	mov	r5, r6
   115a4:	mov	r2, #5
   115a8:	ldr	r1, [pc, #108]	; 1161c <close@plt+0x76c>
   115ac:	mov	r0, #0
   115b0:	bl	10ce8 <dcgettext@plt>
   115b4:	ldr	r2, [pc, #60]	; 115f8 <close@plt+0x748>
   115b8:	mov	r1, r0
   115bc:	mov	r0, #1
   115c0:	bl	10e08 <__printf_chk@plt>
   115c4:	b	114bc <close@plt+0x60c>
   115c8:	andeq	r5, r2, r8, lsl #30
   115cc:	andeq	r6, r2, r8, lsr r1
   115d0:	andeq	r4, r1, r8, lsl #18
   115d4:	andeq	r6, r2, ip, asr #2
   115d8:	andeq	r4, r1, r0, lsr r9
   115dc:	andeq	r6, r2, ip, lsr r1
   115e0:	andeq	r4, r1, r0, asr r9
   115e4:	ldrdeq	r4, [r1], -ip
   115e8:	andeq	r4, r1, r0, lsr #20
   115ec:	andeq	r4, r1, r8, ror #20
   115f0:	muleq	r1, r8, sl
   115f4:	andeq	r4, r1, r8, ror r8
   115f8:	andeq	r4, r1, r0, lsl #18
   115fc:	ldrdeq	r4, [r1], -r0
   11600:	andeq	r4, r1, r8, ror #21
   11604:	andeq	r4, r1, r0, lsl fp
   11608:	andeq	r4, r1, r0, lsr #22
   1160c:	andeq	r4, r1, ip, ror #22
   11610:	andeq	r4, r1, ip, lsl #23
   11614:	ldrdeq	r4, [r1], -r8
   11618:			; <UNDEFINED> instruction: 0x00014cb8
   1161c:	andeq	r4, r1, r4, lsr #22
   11620:	ldr	r3, [pc, #4]	; 1162c <close@plt+0x77c>
   11624:	str	r0, [r3]
   11628:	bx	lr
   1162c:	andeq	r6, r2, r4, asr #2
   11630:	ldr	r3, [pc, #4]	; 1163c <close@plt+0x78c>
   11634:	strb	r0, [r3, #4]
   11638:	bx	lr
   1163c:	andeq	r6, r2, r4, asr #2
   11640:	ldr	r3, [pc, #180]	; 116fc <close@plt+0x84c>
   11644:	push	{r4, r5, r6, lr}
   11648:	sub	sp, sp, #8
   1164c:	ldr	r0, [r3]
   11650:	bl	14340 <close@plt+0x3490>
   11654:	cmp	r0, #0
   11658:	beq	11680 <close@plt+0x7d0>
   1165c:	bl	10de4 <__errno_location@plt>
   11660:	ldr	r5, [pc, #152]	; 11700 <close@plt+0x850>
   11664:	ldrb	r3, [r5, #4]
   11668:	cmp	r3, #0
   1166c:	mov	r4, r0
   11670:	beq	1169c <close@plt+0x7ec>
   11674:	ldr	r3, [r0]
   11678:	cmp	r3, #32
   1167c:	bne	1169c <close@plt+0x7ec>
   11680:	ldr	r3, [pc, #124]	; 11704 <close@plt+0x854>
   11684:	ldr	r0, [r3]
   11688:	bl	14340 <close@plt+0x3490>
   1168c:	cmp	r0, #0
   11690:	bne	116dc <close@plt+0x82c>
   11694:	add	sp, sp, #8
   11698:	pop	{r4, r5, r6, pc}
   1169c:	mov	r2, #5
   116a0:	ldr	r1, [pc, #96]	; 11708 <close@plt+0x858>
   116a4:	mov	r0, #0
   116a8:	bl	10ce8 <dcgettext@plt>
   116ac:	mov	r6, r0
   116b0:	ldr	r0, [r5]
   116b4:	cmp	r0, #0
   116b8:	beq	116e8 <close@plt+0x838>
   116bc:	ldr	r4, [r4]
   116c0:	bl	1379c <close@plt+0x28ec>
   116c4:	mov	r1, r4
   116c8:	str	r6, [sp]
   116cc:	ldr	r2, [pc, #56]	; 1170c <close@plt+0x85c>
   116d0:	mov	r3, r0
   116d4:	mov	r0, #0
   116d8:	bl	10d6c <error@plt>
   116dc:	ldr	r3, [pc, #44]	; 11710 <close@plt+0x860>
   116e0:	ldr	r0, [r3]
   116e4:	bl	10cb8 <_exit@plt>
   116e8:	mov	r3, r6
   116ec:	ldr	r1, [r4]
   116f0:	ldr	r2, [pc, #28]	; 11714 <close@plt+0x864>
   116f4:	bl	10d6c <error@plt>
   116f8:	b	116dc <close@plt+0x82c>
   116fc:	andeq	r6, r2, ip, lsr r1
   11700:	andeq	r6, r2, r4, asr #2
   11704:	andeq	r6, r2, r8, lsr r1
   11708:	andeq	r4, r1, r8, asr #26
   1170c:	andeq	r4, r1, r4, asr sp
   11710:	andeq	r6, r2, r4, ror #1
   11714:	andeq	r4, r1, r8, asr sp
   11718:	push	{r4, r5, r6, lr}
   1171c:	subs	r4, r0, #0
   11720:	beq	11794 <close@plt+0x8e4>
   11724:	mov	r1, #47	; 0x2f
   11728:	bl	10e5c <strrchr@plt>
   1172c:	subs	r5, r0, #0
   11730:	beq	11780 <close@plt+0x8d0>
   11734:	add	r6, r5, #1
   11738:	sub	r3, r6, r4
   1173c:	cmp	r3, #6
   11740:	ble	11780 <close@plt+0x8d0>
   11744:	mov	r2, #7
   11748:	ldr	r1, [pc, #96]	; 117b0 <close@plt+0x900>
   1174c:	sub	r0, r5, #6
   11750:	bl	10e8c <strncmp@plt>
   11754:	cmp	r0, #0
   11758:	bne	11780 <close@plt+0x8d0>
   1175c:	mov	r2, #3
   11760:	ldr	r1, [pc, #76]	; 117b4 <close@plt+0x904>
   11764:	mov	r0, r6
   11768:	bl	10e8c <strncmp@plt>
   1176c:	cmp	r0, #0
   11770:	movne	r4, r6
   11774:	ldreq	r3, [pc, #60]	; 117b8 <close@plt+0x908>
   11778:	addeq	r4, r5, #4
   1177c:	streq	r4, [r3]
   11780:	ldr	r2, [pc, #52]	; 117bc <close@plt+0x90c>
   11784:	ldr	r3, [pc, #52]	; 117c0 <close@plt+0x910>
   11788:	str	r4, [r2]
   1178c:	str	r4, [r3]
   11790:	pop	{r4, r5, r6, pc}
   11794:	ldr	r3, [pc, #40]	; 117c4 <close@plt+0x914>
   11798:	mov	r2, #55	; 0x37
   1179c:	mov	r1, #1
   117a0:	ldr	r3, [r3]
   117a4:	ldr	r0, [pc, #28]	; 117c8 <close@plt+0x918>
   117a8:	bl	10d30 <fwrite@plt>
   117ac:	bl	10ea4 <abort@plt>
   117b0:	muleq	r1, r4, sp
   117b4:	muleq	r1, ip, sp
   117b8:	andeq	r6, r2, r8, lsr #2
   117bc:	andeq	r6, r2, ip, asr #2
   117c0:	andeq	r6, r2, ip, lsr #2
   117c4:	andeq	r6, r2, r8, lsr r1
   117c8:	andeq	r4, r1, ip, asr sp
   117cc:	push	{r4, lr}
   117d0:	mov	r2, #48	; 0x30
   117d4:	mov	r4, r1
   117d8:	mov	r1, #0
   117dc:	bl	10dfc <memset@plt>
   117e0:	cmp	r4, #10
   117e4:	beq	117f0 <close@plt+0x940>
   117e8:	str	r4, [r0]
   117ec:	pop	{r4, pc}
   117f0:	bl	10ea4 <abort@plt>
   117f4:	push	{r4, r5, r6, lr}
   117f8:	mov	r2, #5
   117fc:	mov	r5, r0
   11800:	mov	r6, r1
   11804:	mov	r1, r0
   11808:	mov	r0, #0
   1180c:	bl	10ce8 <dcgettext@plt>
   11810:	cmp	r5, r0
   11814:	mov	r4, r0
   11818:	beq	11824 <close@plt+0x974>
   1181c:	mov	r0, r4
   11820:	pop	{r4, r5, r6, pc}
   11824:	bl	14400 <close@plt+0x3550>
   11828:	ldrb	r3, [r0]
   1182c:	bic	r3, r3, #32
   11830:	cmp	r3, #85	; 0x55
   11834:	bne	11894 <close@plt+0x9e4>
   11838:	ldrb	r3, [r0, #1]
   1183c:	bic	r3, r3, #32
   11840:	cmp	r3, #84	; 0x54
   11844:	bne	1190c <close@plt+0xa5c>
   11848:	ldrb	r3, [r0, #2]
   1184c:	bic	r3, r3, #32
   11850:	cmp	r3, #70	; 0x46
   11854:	bne	1190c <close@plt+0xa5c>
   11858:	ldrb	r3, [r0, #3]
   1185c:	cmp	r3, #45	; 0x2d
   11860:	bne	1190c <close@plt+0xa5c>
   11864:	ldrb	r3, [r0, #4]
   11868:	cmp	r3, #56	; 0x38
   1186c:	bne	1190c <close@plt+0xa5c>
   11870:	ldrb	r3, [r0, #5]
   11874:	cmp	r3, #0
   11878:	bne	1190c <close@plt+0xa5c>
   1187c:	ldrb	r2, [r4]
   11880:	ldr	r3, [pc, #156]	; 11924 <close@plt+0xa74>
   11884:	ldr	r4, [pc, #156]	; 11928 <close@plt+0xa78>
   11888:	cmp	r2, #96	; 0x60
   1188c:	movne	r4, r3
   11890:	b	1181c <close@plt+0x96c>
   11894:	cmp	r3, #71	; 0x47
   11898:	bne	1190c <close@plt+0xa5c>
   1189c:	ldrb	r3, [r0, #1]
   118a0:	bic	r3, r3, #32
   118a4:	cmp	r3, #66	; 0x42
   118a8:	bne	1190c <close@plt+0xa5c>
   118ac:	ldrb	r3, [r0, #2]
   118b0:	cmp	r3, #49	; 0x31
   118b4:	bne	1190c <close@plt+0xa5c>
   118b8:	ldrb	r3, [r0, #3]
   118bc:	cmp	r3, #56	; 0x38
   118c0:	bne	1190c <close@plt+0xa5c>
   118c4:	ldrb	r3, [r0, #4]
   118c8:	cmp	r3, #48	; 0x30
   118cc:	bne	1190c <close@plt+0xa5c>
   118d0:	ldrb	r3, [r0, #5]
   118d4:	cmp	r3, #51	; 0x33
   118d8:	bne	1190c <close@plt+0xa5c>
   118dc:	ldrb	r3, [r0, #6]
   118e0:	cmp	r3, #48	; 0x30
   118e4:	bne	1190c <close@plt+0xa5c>
   118e8:	ldrb	r3, [r0, #7]
   118ec:	cmp	r3, #0
   118f0:	bne	1190c <close@plt+0xa5c>
   118f4:	ldrb	r2, [r4]
   118f8:	ldr	r3, [pc, #44]	; 1192c <close@plt+0xa7c>
   118fc:	ldr	r4, [pc, #44]	; 11930 <close@plt+0xa80>
   11900:	cmp	r2, #96	; 0x60
   11904:	movne	r4, r3
   11908:	b	1181c <close@plt+0x96c>
   1190c:	ldr	r3, [pc, #32]	; 11934 <close@plt+0xa84>
   11910:	ldr	r4, [pc, #32]	; 11938 <close@plt+0xa88>
   11914:	cmp	r6, #9
   11918:	movne	r4, r3
   1191c:	mov	r0, r4
   11920:	pop	{r4, r5, r6, pc}
   11924:	strdeq	r4, [r1], -r8
   11928:	andeq	r4, r1, r4, lsl #28
   1192c:	strdeq	r4, [r1], -ip
   11930:	andeq	r4, r1, r0, lsl #28
   11934:	andeq	r4, r1, r8, lsl #28
   11938:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1193c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11940:	sub	sp, sp, #124	; 0x7c
   11944:	ldr	ip, [pc, #3576]	; 12744 <close@plt+0x1894>
   11948:	str	r3, [sp, #24]
   1194c:	ldr	r3, [sp, #168]	; 0xa8
   11950:	ldr	ip, [ip]
   11954:	str	r3, [sp, #56]	; 0x38
   11958:	ldr	r3, [sp, #172]	; 0xac
   1195c:	ldr	r8, [sp, #160]	; 0xa0
   11960:	str	r3, [sp, #80]	; 0x50
   11964:	ldr	r3, [sp, #176]	; 0xb0
   11968:	mov	fp, r0
   1196c:	str	r3, [sp, #76]	; 0x4c
   11970:	mov	sl, r1
   11974:	str	r2, [sp, #36]	; 0x24
   11978:	str	ip, [sp, #116]	; 0x74
   1197c:	bl	10d48 <__ctype_get_mb_cur_max@plt>
   11980:	ldr	r3, [sp, #164]	; 0xa4
   11984:	ands	r4, r3, #2
   11988:	movne	r3, #1
   1198c:	moveq	r3, #0
   11990:	str	r3, [sp, #32]
   11994:	str	r0, [sp, #64]	; 0x40
   11998:	cmp	r8, #10
   1199c:	ldrls	pc, [pc, r8, lsl #2]
   119a0:	b	13150 <close@plt+0x22a0>
   119a4:	muleq	r1, r8, sp
   119a8:	andeq	r1, r1, r0, lsr lr
   119ac:	andeq	r2, r1, r0, lsr r4
   119b0:	andeq	r1, r1, r0, asr lr
   119b4:	andeq	r1, r1, r4, lsl #26
   119b8:	andeq	r1, r1, ip, asr #26
   119bc:	andeq	r1, r1, r8, asr #27
   119c0:	andeq	r1, r1, r0, lsl #28
   119c4:	ldrdeq	r1, [r1], -r0
   119c8:	ldrdeq	r1, [r1], -r0
   119cc:	ldrdeq	r1, [r1], -r0
   119d0:	cmp	r8, #10
   119d4:	beq	119f8 <close@plt+0xb48>
   119d8:	mov	r1, r8
   119dc:	ldr	r0, [pc, #3428]	; 12748 <close@plt+0x1898>
   119e0:	bl	117f4 <close@plt+0x944>
   119e4:	mov	r1, r8
   119e8:	str	r0, [sp, #80]	; 0x50
   119ec:	ldr	r0, [pc, #3420]	; 12750 <close@plt+0x18a0>
   119f0:	bl	117f4 <close@plt+0x944>
   119f4:	str	r0, [sp, #76]	; 0x4c
   119f8:	cmp	r4, #0
   119fc:	movne	r4, #0
   11a00:	beq	12e10 <close@plt+0x1f60>
   11a04:	ldr	r7, [sp, #76]	; 0x4c
   11a08:	mov	r5, #0
   11a0c:	mov	r6, #1
   11a10:	mov	r0, r7
   11a14:	str	r6, [sp, #40]	; 0x28
   11a18:	str	r5, [sp, #68]	; 0x44
   11a1c:	bl	10dd8 <strlen@plt>
   11a20:	str	r6, [sp, #28]
   11a24:	str	r5, [sp, #44]	; 0x2c
   11a28:	str	r5, [sp, #72]	; 0x48
   11a2c:	str	r7, [sp, #60]	; 0x3c
   11a30:	str	r0, [sp, #52]	; 0x34
   11a34:	str	r8, [sp, #160]	; 0xa0
   11a38:	mov	r8, fp
   11a3c:	ldr	fp, [sp, #160]	; 0xa0
   11a40:	mov	r9, #0
   11a44:	ldr	r3, [sp, #24]
   11a48:	cmn	r3, #1
   11a4c:	beq	11fb4 <close@plt+0x1104>
   11a50:	ldr	r3, [sp, #24]
   11a54:	subs	r6, r3, r9
   11a58:	movne	r6, #1
   11a5c:	cmp	r6, #0
   11a60:	beq	11fcc <close@plt+0x111c>
   11a64:	ldr	r7, [sp, #28]
   11a68:	ldr	r0, [sp, #36]	; 0x24
   11a6c:	cmp	fp, #2
   11a70:	moveq	r7, #0
   11a74:	andne	r7, r7, #1
   11a78:	add	r3, r0, r9
   11a7c:	cmp	r7, #0
   11a80:	str	r3, [sp, #48]	; 0x30
   11a84:	beq	12470 <close@plt+0x15c0>
   11a88:	ldr	r2, [sp, #52]	; 0x34
   11a8c:	cmp	r2, #0
   11a90:	beq	12754 <close@plt+0x18a4>
   11a94:	ldr	r1, [sp, #24]
   11a98:	cmp	r2, #1
   11a9c:	mov	r3, r2
   11aa0:	movls	r3, #0
   11aa4:	movhi	r3, #1
   11aa8:	cmn	r1, #1
   11aac:	movne	r3, #0
   11ab0:	cmp	r3, #0
   11ab4:	add	r5, r9, r2
   11ab8:	beq	11ac4 <close@plt+0xc14>
   11abc:	bl	10dd8 <strlen@plt>
   11ac0:	str	r0, [sp, #24]
   11ac4:	ldr	r3, [sp, #24]
   11ac8:	cmp	r5, r3
   11acc:	bhi	12754 <close@plt+0x18a4>
   11ad0:	ldr	r2, [sp, #52]	; 0x34
   11ad4:	ldr	r1, [sp, #60]	; 0x3c
   11ad8:	ldr	r0, [sp, #48]	; 0x30
   11adc:	bl	10cdc <memcmp@plt>
   11ae0:	cmp	r0, #0
   11ae4:	bne	12754 <close@plt+0x18a4>
   11ae8:	ldr	r3, [sp, #32]
   11aec:	cmp	r3, #0
   11af0:	bne	13010 <close@plt+0x2160>
   11af4:	ldr	r3, [sp, #48]	; 0x30
   11af8:	ldrb	r5, [r3]
   11afc:	cmp	r5, #126	; 0x7e
   11b00:	ldrls	pc, [pc, r5, lsl #2]
   11b04:	b	123d4 <close@plt+0x1524>
   11b08:	andeq	r2, r1, r0, asr #5
   11b0c:	ldrdeq	r2, [r1], -r4
   11b10:	ldrdeq	r2, [r1], -r4
   11b14:	ldrdeq	r2, [r1], -r4
   11b18:	ldrdeq	r2, [r1], -r4
   11b1c:	ldrdeq	r2, [r1], -r4
   11b20:	ldrdeq	r2, [r1], -r4
   11b24:	andeq	r2, r1, ip, lsl #7
   11b28:	andeq	r2, r1, ip, ror r3
   11b2c:	andeq	r2, r1, ip, ror r2
   11b30:	andeq	r2, r1, r4, asr #4
   11b34:	muleq	r1, ip, r2
   11b38:	andeq	r2, r1, r4, lsl #5
   11b3c:			; <UNDEFINED> instruction: 0x000121b4
   11b40:	ldrdeq	r2, [r1], -r4
   11b44:	ldrdeq	r2, [r1], -r4
   11b48:	ldrdeq	r2, [r1], -r4
   11b4c:	ldrdeq	r2, [r1], -r4
   11b50:	ldrdeq	r2, [r1], -r4
   11b54:	ldrdeq	r2, [r1], -r4
   11b58:	ldrdeq	r2, [r1], -r4
   11b5c:	ldrdeq	r2, [r1], -r4
   11b60:	ldrdeq	r2, [r1], -r4
   11b64:	ldrdeq	r2, [r1], -r4
   11b68:	ldrdeq	r2, [r1], -r4
   11b6c:	ldrdeq	r2, [r1], -r4
   11b70:	ldrdeq	r2, [r1], -r4
   11b74:	ldrdeq	r2, [r1], -r4
   11b78:	ldrdeq	r2, [r1], -r4
   11b7c:	ldrdeq	r2, [r1], -r4
   11b80:	ldrdeq	r2, [r1], -r4
   11b84:	ldrdeq	r2, [r1], -r4
   11b88:	muleq	r1, r4, r3
   11b8c:	andeq	r2, r1, r8, lsr #5
   11b90:	andeq	r2, r1, r8, lsr #5
   11b94:	andeq	r2, r1, ip, lsr #7
   11b98:	andeq	r2, r1, r8, lsr #5
   11b9c:	andeq	r2, r1, r8, asr #7
   11ba0:	andeq	r2, r1, r8, lsr #5
   11ba4:	andeq	r2, r1, r8, ror #1
   11ba8:	andeq	r2, r1, r8, lsr #5
   11bac:	andeq	r2, r1, r8, lsr #5
   11bb0:	andeq	r2, r1, r8, lsr #5
   11bb4:	andeq	r2, r1, r8, asr #7
   11bb8:	andeq	r2, r1, r8, asr #7
   11bbc:	andeq	r2, r1, r8, asr #7
   11bc0:	andeq	r2, r1, r8, asr #7
   11bc4:	andeq	r2, r1, r8, asr #7
   11bc8:	andeq	r2, r1, r8, asr #7
   11bcc:	andeq	r2, r1, r8, asr #7
   11bd0:	andeq	r2, r1, r8, asr #7
   11bd4:	andeq	r2, r1, r8, asr #7
   11bd8:	andeq	r2, r1, r8, asr #7
   11bdc:	andeq	r2, r1, r8, asr #7
   11be0:	andeq	r2, r1, r8, asr #7
   11be4:	andeq	r2, r1, r8, asr #7
   11be8:	andeq	r2, r1, r8, asr #7
   11bec:	andeq	r2, r1, r8, asr #7
   11bf0:	andeq	r2, r1, r8, asr #7
   11bf4:	andeq	r2, r1, r8, lsr #5
   11bf8:	andeq	r2, r1, r8, lsr #5
   11bfc:	andeq	r2, r1, r8, lsr #5
   11c00:	andeq	r2, r1, r8, lsr #5
   11c04:	strheq	r2, [r1], -ip
   11c08:	ldrdeq	r2, [r1], -r4
   11c0c:	andeq	r2, r1, r8, asr #7
   11c10:	andeq	r2, r1, r8, asr #7
   11c14:	andeq	r2, r1, r8, asr #7
   11c18:	andeq	r2, r1, r8, asr #7
   11c1c:	andeq	r2, r1, r8, asr #7
   11c20:	andeq	r2, r1, r8, asr #7
   11c24:	andeq	r2, r1, r8, asr #7
   11c28:	andeq	r2, r1, r8, asr #7
   11c2c:	andeq	r2, r1, r8, asr #7
   11c30:	andeq	r2, r1, r8, asr #7
   11c34:	andeq	r2, r1, r8, asr #7
   11c38:	andeq	r2, r1, r8, asr #7
   11c3c:	andeq	r2, r1, r8, asr #7
   11c40:	andeq	r2, r1, r8, asr #7
   11c44:	andeq	r2, r1, r8, asr #7
   11c48:	andeq	r2, r1, r8, asr #7
   11c4c:	andeq	r2, r1, r8, asr #7
   11c50:	andeq	r2, r1, r8, asr #7
   11c54:	andeq	r2, r1, r8, asr #7
   11c58:	andeq	r2, r1, r8, asr #7
   11c5c:	andeq	r2, r1, r8, asr #7
   11c60:	andeq	r2, r1, r8, asr #7
   11c64:	andeq	r2, r1, r8, asr #7
   11c68:	andeq	r2, r1, r8, asr #7
   11c6c:	andeq	r2, r1, r8, asr #7
   11c70:	andeq	r2, r1, r8, asr #7
   11c74:	andeq	r2, r1, r8, lsr #5
   11c78:	andeq	r2, r1, r4, ror r0
   11c7c:	andeq	r2, r1, r8, asr #7
   11c80:	andeq	r2, r1, r8, lsr #5
   11c84:	andeq	r2, r1, r8, asr #7
   11c88:	andeq	r2, r1, r8, lsr #5
   11c8c:	andeq	r2, r1, r8, asr #7
   11c90:	andeq	r2, r1, r8, asr #7
   11c94:	andeq	r2, r1, r8, asr #7
   11c98:	andeq	r2, r1, r8, asr #7
   11c9c:	andeq	r2, r1, r8, asr #7
   11ca0:	andeq	r2, r1, r8, asr #7
   11ca4:	andeq	r2, r1, r8, asr #7
   11ca8:	andeq	r2, r1, r8, asr #7
   11cac:	andeq	r2, r1, r8, asr #7
   11cb0:	andeq	r2, r1, r8, asr #7
   11cb4:	andeq	r2, r1, r8, asr #7
   11cb8:	andeq	r2, r1, r8, asr #7
   11cbc:	andeq	r2, r1, r8, asr #7
   11cc0:	andeq	r2, r1, r8, asr #7
   11cc4:	andeq	r2, r1, r8, asr #7
   11cc8:	andeq	r2, r1, r8, asr #7
   11ccc:	andeq	r2, r1, r8, asr #7
   11cd0:	andeq	r2, r1, r8, asr #7
   11cd4:	andeq	r2, r1, r8, asr #7
   11cd8:	andeq	r2, r1, r8, asr #7
   11cdc:	andeq	r2, r1, r8, asr #7
   11ce0:	andeq	r2, r1, r8, asr #7
   11ce4:	andeq	r2, r1, r8, asr #7
   11ce8:	andeq	r2, r1, r8, asr #7
   11cec:	andeq	r2, r1, r8, asr #7
   11cf0:	andeq	r2, r1, r8, asr #7
   11cf4:	andeq	r1, r1, ip, lsl #29
   11cf8:	andeq	r2, r1, r8, lsr #5
   11cfc:	andeq	r1, r1, ip, lsl #29
   11d00:	andeq	r2, r1, ip, lsr #7
   11d04:	cmp	r4, #0
   11d08:	moveq	r3, #1
   11d0c:	streq	r3, [sp, #28]
   11d10:	beq	1243c <close@plt+0x158c>
   11d14:	mov	r3, #0
   11d18:	mov	r4, r3
   11d1c:	mov	r2, #1
   11d20:	str	r2, [sp, #40]	; 0x28
   11d24:	str	r3, [sp, #68]	; 0x44
   11d28:	str	r2, [sp, #32]
   11d2c:	str	r2, [sp, #52]	; 0x34
   11d30:	ldr	r3, [pc, #2584]	; 12750 <close@plt+0x18a0>
   11d34:	str	r4, [sp, #44]	; 0x2c
   11d38:	str	r4, [sp, #72]	; 0x48
   11d3c:	str	r4, [sp, #28]
   11d40:	str	r3, [sp, #60]	; 0x3c
   11d44:	mov	r8, #2
   11d48:	b	11a34 <close@plt+0xb84>
   11d4c:	cmp	r4, #0
   11d50:	bne	12fdc <close@plt+0x212c>
   11d54:	cmp	sl, #0
   11d58:	beq	12d9c <close@plt+0x1eec>
   11d5c:	mov	r3, #34	; 0x22
   11d60:	strb	r3, [fp]
   11d64:	ldr	r3, [pc, #2528]	; 1274c <close@plt+0x189c>
   11d68:	mov	r1, r4
   11d6c:	mov	r2, #1
   11d70:	str	r4, [sp, #68]	; 0x44
   11d74:	str	r2, [sp, #40]	; 0x28
   11d78:	mov	r4, r2
   11d7c:	str	r1, [sp, #44]	; 0x2c
   11d80:	str	r1, [sp, #72]	; 0x48
   11d84:	str	r1, [sp, #32]
   11d88:	str	r2, [sp, #28]
   11d8c:	str	r2, [sp, #52]	; 0x34
   11d90:	str	r3, [sp, #60]	; 0x3c
   11d94:	b	11a34 <close@plt+0xb84>
   11d98:	mov	r3, #0
   11d9c:	str	r3, [sp, #68]	; 0x44
   11da0:	str	r3, [sp, #44]	; 0x2c
   11da4:	str	r3, [sp, #32]
   11da8:	str	r3, [sp, #28]
   11dac:	str	r3, [sp, #60]	; 0x3c
   11db0:	mov	r3, #1
   11db4:	str	r8, [sp, #72]	; 0x48
   11db8:	str	r8, [sp, #52]	; 0x34
   11dbc:	mov	r4, r8
   11dc0:	str	r3, [sp, #40]	; 0x28
   11dc4:	b	11a34 <close@plt+0xb84>
   11dc8:	mov	r3, #1
   11dcc:	str	r3, [sp, #40]	; 0x28
   11dd0:	str	r3, [sp, #32]
   11dd4:	str	r3, [sp, #28]
   11dd8:	str	r3, [sp, #52]	; 0x34
   11ddc:	ldr	r3, [pc, #2408]	; 1274c <close@plt+0x189c>
   11de0:	mov	r2, #0
   11de4:	mov	r4, r2
   11de8:	str	r2, [sp, #68]	; 0x44
   11dec:	str	r2, [sp, #44]	; 0x2c
   11df0:	str	r2, [sp, #72]	; 0x48
   11df4:	str	r3, [sp, #60]	; 0x3c
   11df8:	mov	r8, #5
   11dfc:	b	11a34 <close@plt+0xb84>
   11e00:	mov	r3, #0
   11e04:	mov	r2, #1
   11e08:	str	r2, [sp, #40]	; 0x28
   11e0c:	mov	r4, r3
   11e10:	str	r3, [sp, #68]	; 0x44
   11e14:	str	r2, [sp, #28]
   11e18:	str	r3, [sp, #44]	; 0x2c
   11e1c:	str	r3, [sp, #72]	; 0x48
   11e20:	str	r3, [sp, #32]
   11e24:	str	r3, [sp, #52]	; 0x34
   11e28:	str	r3, [sp, #60]	; 0x3c
   11e2c:	b	11a34 <close@plt+0xb84>
   11e30:	mov	r2, #1
   11e34:	mov	r3, #0
   11e38:	str	r2, [sp, #40]	; 0x28
   11e3c:	mov	r4, r3
   11e40:	str	r3, [sp, #68]	; 0x44
   11e44:	str	r8, [sp, #52]	; 0x34
   11e48:	str	r2, [sp, #32]
   11e4c:	b	11d30 <close@plt+0xe80>
   11e50:	mov	r3, #1
   11e54:	str	r3, [sp, #40]	; 0x28
   11e58:	str	r3, [sp, #32]
   11e5c:	str	r3, [sp, #28]
   11e60:	str	r3, [sp, #52]	; 0x34
   11e64:	ldr	r3, [pc, #2276]	; 12750 <close@plt+0x18a0>
   11e68:	mov	r2, #0
   11e6c:	mov	r4, r2
   11e70:	str	r2, [sp, #68]	; 0x44
   11e74:	str	r2, [sp, #44]	; 0x2c
   11e78:	str	r2, [sp, #72]	; 0x48
   11e7c:	str	r3, [sp, #60]	; 0x3c
   11e80:	mov	r8, #2
   11e84:	b	11a34 <close@plt+0xb84>
   11e88:	mov	r7, #0
   11e8c:	ldr	r3, [sp, #24]
   11e90:	cmn	r3, #1
   11e94:	beq	129d0 <close@plt+0x1b20>
   11e98:	ldr	r3, [sp, #24]
   11e9c:	subs	r3, r3, #1
   11ea0:	movne	r3, #1
   11ea4:	cmp	r3, #0
   11ea8:	sub	r2, fp, #2
   11eac:	clz	r2, r2
   11eb0:	lsr	r2, r2, #5
   11eb4:	bne	120b0 <close@plt+0x1200>
   11eb8:	cmp	r9, #0
   11ebc:	bne	120b0 <close@plt+0x1200>
   11ec0:	ldr	r3, [sp, #32]
   11ec4:	tst	r3, r2
   11ec8:	bne	121d0 <close@plt+0x1320>
   11ecc:	ldr	r3, [sp, #28]
   11ed0:	eor	r3, r3, #1
   11ed4:	orr	r3, r2, r3
   11ed8:	ldr	r2, [sp, #32]
   11edc:	eor	r3, r3, #1
   11ee0:	orrs	r3, r2, r3
   11ee4:	beq	11f14 <close@plt+0x1064>
   11ee8:	mov	r3, #0
   11eec:	ldr	r1, [sp, #56]	; 0x38
   11ef0:	cmp	r1, #0
   11ef4:	beq	11f14 <close@plt+0x1064>
   11ef8:	lsr	r2, r5, #5
   11efc:	and	r0, r5, #31
   11f00:	uxtb	r2, r2
   11f04:	ldr	r1, [r1, r2, lsl #2]
   11f08:	lsr	r2, r1, r0
   11f0c:	tst	r2, #1
   11f10:	bne	11f1c <close@plt+0x106c>
   11f14:	cmp	r7, #0
   11f18:	beq	1216c <close@plt+0x12bc>
   11f1c:	sub	r2, fp, #2
   11f20:	clz	r2, r2
   11f24:	lsr	r2, r2, #5
   11f28:	ldr	r3, [sp, #32]
   11f2c:	cmp	r3, #0
   11f30:	bne	1225c <close@plt+0x13ac>
   11f34:	ldr	r3, [sp, #44]	; 0x2c
   11f38:	eor	r3, r3, #1
   11f3c:	ands	r3, r2, r3
   11f40:	beq	11f78 <close@plt+0x10c8>
   11f44:	cmp	sl, r4
   11f48:	movhi	r2, #39	; 0x27
   11f4c:	strbhi	r2, [r8, r4]
   11f50:	add	r2, r4, #1
   11f54:	cmp	r2, sl
   11f58:	movcc	r1, #36	; 0x24
   11f5c:	strbcc	r1, [r8, r2]
   11f60:	add	r2, r4, #2
   11f64:	cmp	r2, sl
   11f68:	add	r4, r4, #3
   11f6c:	movcc	r1, #39	; 0x27
   11f70:	strbcc	r1, [r8, r2]
   11f74:	str	r3, [sp, #44]	; 0x2c
   11f78:	cmp	r4, sl
   11f7c:	movcc	r3, #92	; 0x5c
   11f80:	strbcc	r3, [r8, r4]
   11f84:	add	r9, r9, #1
   11f88:	add	r4, r4, #1
   11f8c:	cmp	r4, sl
   11f90:	ldr	r3, [sp, #40]	; 0x28
   11f94:	strbcc	r5, [r8, r4]
   11f98:	cmp	r6, #0
   11f9c:	moveq	r3, #0
   11fa0:	str	r3, [sp, #40]	; 0x28
   11fa4:	ldr	r3, [sp, #24]
   11fa8:	add	r4, r4, #1
   11fac:	cmn	r3, #1
   11fb0:	bne	11a50 <close@plt+0xba0>
   11fb4:	ldr	r3, [sp, #36]	; 0x24
   11fb8:	ldrb	r6, [r3, r9]
   11fbc:	adds	r6, r6, #0
   11fc0:	movne	r6, #1
   11fc4:	cmp	r6, #0
   11fc8:	bne	11a64 <close@plt+0xbb4>
   11fcc:	str	fp, [sp, #160]	; 0xa0
   11fd0:	mov	fp, r8
   11fd4:	ldr	r8, [sp, #160]	; 0xa0
   11fd8:	ldr	r1, [sp, #32]
   11fdc:	cmp	r4, #0
   11fe0:	sub	r2, r8, #2
   11fe4:	clz	r2, r2
   11fe8:	lsr	r2, r2, #5
   11fec:	andeq	r3, r2, r1
   11ff0:	movne	r3, #0
   11ff4:	cmp	r3, #0
   11ff8:	bne	130e4 <close@plt+0x2234>
   11ffc:	eor	r3, r1, #1
   12000:	ands	r2, r2, r3
   12004:	beq	13020 <close@plt+0x2170>
   12008:	ldr	r3, [sp, #68]	; 0x44
   1200c:	cmp	r3, #0
   12010:	beq	13024 <close@plt+0x2174>
   12014:	ldr	r3, [sp, #40]	; 0x28
   12018:	cmp	r3, #0
   1201c:	bne	130a0 <close@plt+0x21f0>
   12020:	ldr	r3, [sp, #72]	; 0x48
   12024:	adds	r3, r3, #0
   12028:	movne	r3, #1
   1202c:	cmp	sl, #0
   12030:	movne	r3, #0
   12034:	cmp	r3, #0
   12038:	ldreq	r2, [sp, #68]	; 0x44
   1203c:	beq	13024 <close@plt+0x2174>
   12040:	ldr	sl, [sp, #72]	; 0x48
   12044:	str	r3, [sp, #68]	; 0x44
   12048:	ldr	r3, [pc, #1792]	; 12750 <close@plt+0x18a0>
   1204c:	mov	r2, #39	; 0x27
   12050:	mov	r4, #1
   12054:	str	r3, [sp, #60]	; 0x3c
   12058:	mov	r3, #0
   1205c:	strb	r2, [fp]
   12060:	str	r4, [sp, #52]	; 0x34
   12064:	mov	r8, #2
   12068:	str	r3, [sp, #32]
   1206c:	b	11a34 <close@plt+0xb84>
   12070:	mov	r7, #0
   12074:	cmp	fp, #2
   12078:	beq	129b0 <close@plt+0x1b00>
   1207c:	ldr	r3, [sp, #52]	; 0x34
   12080:	ldr	r2, [sp, #28]
   12084:	ldr	r1, [sp, #32]
   12088:	cmp	r3, #0
   1208c:	andne	r2, r2, r1
   12090:	moveq	r2, #0
   12094:	cmp	r2, #0
   12098:	moveq	r5, #92	; 0x5c
   1209c:	moveq	r3, r5
   120a0:	bne	129bc <close@plt+0x1b0c>
   120a4:	ldr	r1, [sp, #28]
   120a8:	cmp	r1, #0
   120ac:	bne	1312c <close@plt+0x227c>
   120b0:	mov	r6, #0
   120b4:	b	11ecc <close@plt+0x101c>
   120b8:	mov	r7, #0
   120bc:	cmp	fp, #2
   120c0:	beq	12a20 <close@plt+0x1b70>
   120c4:	cmp	fp, #5
   120c8:	beq	129e4 <close@plt+0x1b34>
   120cc:	sub	r2, fp, #2
   120d0:	mov	r6, #0
   120d4:	clz	r2, r2
   120d8:	mov	r5, #63	; 0x3f
   120dc:	lsr	r2, r2, #5
   120e0:	b	11ecc <close@plt+0x101c>
   120e4:	mov	r7, #0
   120e8:	cmp	fp, #2
   120ec:	strne	r6, [sp, #68]	; 0x44
   120f0:	movne	r2, #0
   120f4:	movne	r5, #39	; 0x27
   120f8:	bne	11ecc <close@plt+0x101c>
   120fc:	ldr	r3, [sp, #32]
   12100:	cmp	r3, #0
   12104:	bne	12e00 <close@plt+0x1f50>
   12108:	cmp	sl, #0
   1210c:	ldr	r3, [sp, #72]	; 0x48
   12110:	clz	r3, r3
   12114:	lsr	r3, r3, #5
   12118:	moveq	r3, #0
   1211c:	cmp	r3, #0
   12120:	bne	12d34 <close@plt+0x1e84>
   12124:	cmp	sl, r4
   12128:	movhi	r3, #39	; 0x27
   1212c:	strbhi	r3, [r8, r4]
   12130:	add	r3, r4, #1
   12134:	cmp	sl, r3
   12138:	movhi	r2, #92	; 0x5c
   1213c:	strbhi	r2, [r8, r3]
   12140:	add	r3, r4, #2
   12144:	cmp	sl, r3
   12148:	movhi	r2, #39	; 0x27
   1214c:	strbhi	r2, [r8, r3]
   12150:	mov	r3, #0
   12154:	cmp	r7, #0
   12158:	add	r4, r4, #3
   1215c:	str	r3, [sp, #44]	; 0x2c
   12160:	str	r6, [sp, #68]	; 0x44
   12164:	mov	r5, #39	; 0x27
   12168:	bne	11f1c <close@plt+0x106c>
   1216c:	ldr	r2, [sp, #44]	; 0x2c
   12170:	eor	r3, r3, #1
   12174:	and	r3, r3, r2
   12178:	add	r9, r9, #1
   1217c:	uxtb	r3, r3
   12180:	cmp	r3, #0
   12184:	beq	11f8c <close@plt+0x10dc>
   12188:	cmp	sl, r4
   1218c:	movhi	r3, #39	; 0x27
   12190:	strbhi	r3, [r8, r4]
   12194:	add	r3, r4, #1
   12198:	cmp	sl, r3
   1219c:	movhi	r2, #39	; 0x27
   121a0:	strbhi	r2, [r8, r3]
   121a4:	mov	r3, #0
   121a8:	add	r4, r4, #2
   121ac:	str	r3, [sp, #44]	; 0x2c
   121b0:	b	11f8c <close@plt+0x10dc>
   121b4:	mov	r3, #114	; 0x72
   121b8:	ldr	r1, [sp, #32]
   121bc:	sub	r2, fp, #2
   121c0:	clz	r2, r2
   121c4:	lsr	r2, r2, #5
   121c8:	tst	r2, r1
   121cc:	beq	120a4 <close@plt+0x11f4>
   121d0:	mov	fp, r8
   121d4:	mov	r8, #2
   121d8:	ldr	r3, [sp, #28]
   121dc:	cmp	r3, #0
   121e0:	movne	r8, #4
   121e4:	ldr	r3, [sp, #164]	; 0xa4
   121e8:	mov	ip, #0
   121ec:	bic	r3, r3, #2
   121f0:	str	r3, [sp, #4]
   121f4:	ldr	r3, [sp, #76]	; 0x4c
   121f8:	str	r8, [sp]
   121fc:	str	r3, [sp, #16]
   12200:	ldr	r3, [sp, #80]	; 0x50
   12204:	ldr	r2, [sp, #36]	; 0x24
   12208:	str	r3, [sp, #12]
   1220c:	mov	r1, sl
   12210:	ldr	r3, [sp, #24]
   12214:	mov	r0, fp
   12218:	str	ip, [sp, #8]
   1221c:	bl	1193c <close@plt+0xa8c>
   12220:	mov	r4, r0
   12224:	ldr	r3, [pc, #1304]	; 12744 <close@plt+0x1894>
   12228:	ldr	r2, [sp, #116]	; 0x74
   1222c:	mov	r0, r4
   12230:	ldr	r3, [r3]
   12234:	cmp	r2, r3
   12238:	bne	13128 <close@plt+0x2278>
   1223c:	add	sp, sp, #124	; 0x7c
   12240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12244:	mov	r5, #110	; 0x6e
   12248:	ldr	r3, [sp, #32]
   1224c:	mov	r2, #0
   12250:	cmp	r3, #0
   12254:	mov	r6, r2
   12258:	beq	11f34 <close@plt+0x1084>
   1225c:	str	fp, [sp, #160]	; 0xa0
   12260:	mov	fp, r8
   12264:	ldr	r8, [sp, #160]	; 0xa0
   12268:	mov	r3, r2
   1226c:	ldr	r2, [sp, #28]
   12270:	and	r2, r2, r3
   12274:	str	r2, [sp, #28]
   12278:	b	121d8 <close@plt+0x1328>
   1227c:	mov	r5, #116	; 0x74
   12280:	b	12248 <close@plt+0x1398>
   12284:	mov	r5, #102	; 0x66
   12288:	ldr	r3, [sp, #32]
   1228c:	cmp	r3, #0
   12290:	bne	12e3c <close@plt+0x1f8c>
   12294:	mov	r6, #0
   12298:	b	11f78 <close@plt+0x10c8>
   1229c:	mov	r5, #118	; 0x76
   122a0:	b	12288 <close@plt+0x13d8>
   122a4:	mov	r7, #0
   122a8:	mov	r6, #0
   122ac:	b	11ee8 <close@plt+0x1038>
   122b0:	ldr	r3, [sp, #32]
   122b4:	cmp	r3, #0
   122b8:	bne	13080 <close@plt+0x21d0>
   122bc:	mov	r7, r3
   122c0:	ldr	r3, [sp, #44]	; 0x2c
   122c4:	sub	r2, fp, #2
   122c8:	eor	r3, r3, #1
   122cc:	clz	r2, r2
   122d0:	lsr	r2, r2, #5
   122d4:	ands	r3, r2, r3
   122d8:	beq	12d20 <close@plt+0x1e70>
   122dc:	cmp	sl, r4
   122e0:	movhi	r1, #39	; 0x27
   122e4:	strbhi	r1, [r8, r4]
   122e8:	add	r1, r4, #1
   122ec:	cmp	sl, r1
   122f0:	movhi	r0, #36	; 0x24
   122f4:	strbhi	r0, [r8, r1]
   122f8:	add	r1, r4, #2
   122fc:	cmp	sl, r1
   12300:	movhi	r0, #39	; 0x27
   12304:	strbhi	r0, [r8, r1]
   12308:	add	r1, r4, #3
   1230c:	cmp	sl, r1
   12310:	bls	12d80 <close@plt+0x1ed0>
   12314:	mov	r4, r1
   12318:	mov	r1, #92	; 0x5c
   1231c:	strb	r1, [r8, r4]
   12320:	mov	r1, r4
   12324:	str	r3, [sp, #44]	; 0x2c
   12328:	cmp	fp, #2
   1232c:	add	r4, r4, #1
   12330:	beq	12dc8 <close@plt+0x1f18>
   12334:	ldr	r0, [sp, #24]
   12338:	add	r3, r9, #1
   1233c:	cmp	r3, r0
   12340:	bcs	12358 <close@plt+0x14a8>
   12344:	ldr	r0, [sp, #36]	; 0x24
   12348:	ldrb	r3, [r0, r3]
   1234c:	sub	r3, r3, #48	; 0x30
   12350:	cmp	r3, #9
   12354:	bls	12dd8 <close@plt+0x1f28>
   12358:	mov	r5, #48	; 0x30
   1235c:	ldr	r3, [sp, #28]
   12360:	eor	r3, r3, #1
   12364:	orrs	r2, r2, r3
   12368:	mov	r3, r6
   1236c:	moveq	r6, r2
   12370:	beq	11eec <close@plt+0x103c>
   12374:	mov	r6, #0
   12378:	b	11f14 <close@plt+0x1064>
   1237c:	mov	r2, #0
   12380:	mov	r6, r2
   12384:	mov	r5, #98	; 0x62
   12388:	b	11f34 <close@plt+0x1084>
   1238c:	mov	r5, #97	; 0x61
   12390:	b	12294 <close@plt+0x13e4>
   12394:	mov	r3, r7
   12398:	mov	r6, r7
   1239c:	mov	r2, #0
   123a0:	mov	r7, r3
   123a4:	mov	r5, #32
   123a8:	b	11ecc <close@plt+0x101c>
   123ac:	cmp	r9, #0
   123b0:	mov	r3, r7
   123b4:	bne	1297c <close@plt+0x1acc>
   123b8:	mov	r6, r7
   123bc:	mov	r2, r9
   123c0:	mov	r7, r3
   123c4:	b	11ecc <close@plt+0x101c>
   123c8:	mov	r6, r7
   123cc:	b	11ee8 <close@plt+0x1038>
   123d0:	mov	r7, #0
   123d4:	ldr	r3, [sp, #64]	; 0x40
   123d8:	cmp	r3, #1
   123dc:	bne	12a38 <close@plt+0x1b88>
   123e0:	bl	10dc0 <__ctype_b_loc@plt>
   123e4:	ldr	r2, [sp, #64]	; 0x40
   123e8:	sxth	r3, r5
   123ec:	mov	ip, r2
   123f0:	lsl	r3, r3, #1
   123f4:	ldr	r2, [r0]
   123f8:	ldrh	r3, [r2, r3]
   123fc:	and	r3, r3, #16384	; 0x4000
   12400:	cmp	r3, #0
   12404:	ldr	r3, [sp, #28]
   12408:	movne	r6, #1
   1240c:	moveq	r6, #0
   12410:	movne	r2, #0
   12414:	andeq	r2, r3, #1
   12418:	cmp	r2, #0
   1241c:	bne	12d48 <close@plt+0x1e98>
   12420:	sub	r2, fp, #2
   12424:	clz	r2, r2
   12428:	lsr	r2, r2, #5
   1242c:	b	11ecc <close@plt+0x101c>
   12430:	cmp	r4, #0
   12434:	bne	130f4 <close@plt+0x2244>
   12438:	str	r4, [sp, #28]
   1243c:	cmp	sl, #0
   12440:	bne	13138 <close@plt+0x2288>
   12444:	ldr	r3, [pc, #772]	; 12750 <close@plt+0x18a0>
   12448:	mov	r4, #1
   1244c:	str	r4, [sp, #40]	; 0x28
   12450:	str	r3, [sp, #60]	; 0x3c
   12454:	str	r4, [sp, #52]	; 0x34
   12458:	str	sl, [sp, #72]	; 0x48
   1245c:	str	sl, [sp, #68]	; 0x44
   12460:	str	sl, [sp, #44]	; 0x2c
   12464:	str	sl, [sp, #32]
   12468:	mov	r8, #2
   1246c:	b	11a34 <close@plt+0xb84>
   12470:	ldr	r3, [sp, #36]	; 0x24
   12474:	ldrb	r5, [r3, r9]
   12478:	cmp	r5, #126	; 0x7e
   1247c:	ldrls	pc, [pc, r5, lsl #2]
   12480:	b	123d4 <close@plt+0x1524>
   12484:			; <UNDEFINED> instruction: 0x000126b8
   12488:	ldrdeq	r2, [r1], -r4
   1248c:	ldrdeq	r2, [r1], -r4
   12490:	ldrdeq	r2, [r1], -r4
   12494:	ldrdeq	r2, [r1], -r4
   12498:	ldrdeq	r2, [r1], -r4
   1249c:	ldrdeq	r2, [r1], -r4
   124a0:	andeq	r2, r1, r4, lsr #13
   124a4:	muleq	r1, r0, r6
   124a8:	andeq	r2, r1, r8, lsl #13
   124ac:	andeq	r2, r1, r0, lsl #13
   124b0:	andeq	r2, r1, r0, lsr r7
   124b4:	andeq	r2, r1, ip, lsl r7
   124b8:			; <UNDEFINED> instruction: 0x000121b4
   124bc:	ldrdeq	r2, [r1], -r4
   124c0:	ldrdeq	r2, [r1], -r4
   124c4:	ldrdeq	r2, [r1], -r4
   124c8:	ldrdeq	r2, [r1], -r4
   124cc:	ldrdeq	r2, [r1], -r4
   124d0:	ldrdeq	r2, [r1], -r4
   124d4:	ldrdeq	r2, [r1], -r4
   124d8:	ldrdeq	r2, [r1], -r4
   124dc:	ldrdeq	r2, [r1], -r4
   124e0:	ldrdeq	r2, [r1], -r4
   124e4:	ldrdeq	r2, [r1], -r4
   124e8:	ldrdeq	r2, [r1], -r4
   124ec:	ldrdeq	r2, [r1], -r4
   124f0:	ldrdeq	r2, [r1], -r4
   124f4:	ldrdeq	r2, [r1], -r4
   124f8:	ldrdeq	r2, [r1], -r4
   124fc:	ldrdeq	r2, [r1], -r4
   12500:	ldrdeq	r2, [r1], -r4
   12504:	andeq	r2, r1, ip, lsl #14
   12508:	strdeq	r2, [r1], -r8
   1250c:	strdeq	r2, [r1], -r8
   12510:	andeq	r2, r1, r8, ror #13
   12514:	strdeq	r2, [r1], -r8
   12518:	andeq	r2, r1, r0, lsr #8
   1251c:	strdeq	r2, [r1], -r8
   12520:	andeq	r2, r1, r8, ror #1
   12524:	strdeq	r2, [r1], -r8
   12528:	strdeq	r2, [r1], -r8
   1252c:	strdeq	r2, [r1], -r8
   12530:	andeq	r2, r1, r0, lsr #8
   12534:	andeq	r2, r1, r0, lsr #8
   12538:	andeq	r2, r1, r0, lsr #8
   1253c:	andeq	r2, r1, r0, lsr #8
   12540:	andeq	r2, r1, r0, lsr #8
   12544:	andeq	r2, r1, r0, lsr #8
   12548:	andeq	r2, r1, r0, lsr #8
   1254c:	andeq	r2, r1, r0, lsr #8
   12550:	andeq	r2, r1, r0, lsr #8
   12554:	andeq	r2, r1, r0, lsr #8
   12558:	andeq	r2, r1, r0, lsr #8
   1255c:	andeq	r2, r1, r0, lsr #8
   12560:	andeq	r2, r1, r0, lsr #8
   12564:	andeq	r2, r1, r0, lsr #8
   12568:	andeq	r2, r1, r0, lsr #8
   1256c:	andeq	r2, r1, r0, lsr #8
   12570:	strdeq	r2, [r1], -r8
   12574:	strdeq	r2, [r1], -r8
   12578:	strdeq	r2, [r1], -r8
   1257c:	strdeq	r2, [r1], -r8
   12580:	strheq	r2, [r1], -ip
   12584:	ldrdeq	r2, [r1], -r4
   12588:	andeq	r2, r1, r0, lsr #8
   1258c:	andeq	r2, r1, r0, lsr #8
   12590:	andeq	r2, r1, r0, lsr #8
   12594:	andeq	r2, r1, r0, lsr #8
   12598:	andeq	r2, r1, r0, lsr #8
   1259c:	andeq	r2, r1, r0, lsr #8
   125a0:	andeq	r2, r1, r0, lsr #8
   125a4:	andeq	r2, r1, r0, lsr #8
   125a8:	andeq	r2, r1, r0, lsr #8
   125ac:	andeq	r2, r1, r0, lsr #8
   125b0:	andeq	r2, r1, r0, lsr #8
   125b4:	andeq	r2, r1, r0, lsr #8
   125b8:	andeq	r2, r1, r0, lsr #8
   125bc:	andeq	r2, r1, r0, lsr #8
   125c0:	andeq	r2, r1, r0, lsr #8
   125c4:	andeq	r2, r1, r0, lsr #8
   125c8:	andeq	r2, r1, r0, lsr #8
   125cc:	andeq	r2, r1, r0, lsr #8
   125d0:	andeq	r2, r1, r0, lsr #8
   125d4:	andeq	r2, r1, r0, lsr #8
   125d8:	andeq	r2, r1, r0, lsr #8
   125dc:	andeq	r2, r1, r0, lsr #8
   125e0:	andeq	r2, r1, r0, lsr #8
   125e4:	andeq	r2, r1, r0, lsr #8
   125e8:	andeq	r2, r1, r0, lsr #8
   125ec:	andeq	r2, r1, r0, lsr #8
   125f0:	strdeq	r2, [r1], -r8
   125f4:	andeq	r2, r1, r4, ror r0
   125f8:	andeq	r2, r1, r0, lsr #8
   125fc:	strdeq	r2, [r1], -r8
   12600:	andeq	r2, r1, r0, lsr #8
   12604:	strdeq	r2, [r1], -r8
   12608:	andeq	r2, r1, r0, lsr #8
   1260c:	andeq	r2, r1, r0, lsr #8
   12610:	andeq	r2, r1, r0, lsr #8
   12614:	andeq	r2, r1, r0, lsr #8
   12618:	andeq	r2, r1, r0, lsr #8
   1261c:	andeq	r2, r1, r0, lsr #8
   12620:	andeq	r2, r1, r0, lsr #8
   12624:	andeq	r2, r1, r0, lsr #8
   12628:	andeq	r2, r1, r0, lsr #8
   1262c:	andeq	r2, r1, r0, lsr #8
   12630:	andeq	r2, r1, r0, lsr #8
   12634:	andeq	r2, r1, r0, lsr #8
   12638:	andeq	r2, r1, r0, lsr #8
   1263c:	andeq	r2, r1, r0, lsr #8
   12640:	andeq	r2, r1, r0, lsr #8
   12644:	andeq	r2, r1, r0, lsr #8
   12648:	andeq	r2, r1, r0, lsr #8
   1264c:	andeq	r2, r1, r0, lsr #8
   12650:	andeq	r2, r1, r0, lsr #8
   12654:	andeq	r2, r1, r0, lsr #8
   12658:	andeq	r2, r1, r0, lsr #8
   1265c:	andeq	r2, r1, r0, lsr #8
   12660:	andeq	r2, r1, r0, lsr #8
   12664:	andeq	r2, r1, r0, lsr #8
   12668:	andeq	r2, r1, r0, lsr #8
   1266c:	andeq	r2, r1, r0, lsr #8
   12670:	andeq	r1, r1, ip, lsl #29
   12674:	strdeq	r2, [r1], -r8
   12678:	andeq	r1, r1, ip, lsl #29
   1267c:	andeq	r2, r1, r8, ror #13
   12680:	mov	r3, #110	; 0x6e
   12684:	b	121b8 <close@plt+0x1308>
   12688:	mov	r3, #116	; 0x74
   1268c:	b	121b8 <close@plt+0x1308>
   12690:	sub	r2, fp, #2
   12694:	mov	r3, #98	; 0x62
   12698:	clz	r2, r2
   1269c:	lsr	r2, r2, #5
   126a0:	b	120a4 <close@plt+0x11f4>
   126a4:	sub	r2, fp, #2
   126a8:	mov	r3, #97	; 0x61
   126ac:	clz	r2, r2
   126b0:	lsr	r2, r2, #5
   126b4:	b	120a4 <close@plt+0x11f4>
   126b8:	ldr	r3, [sp, #28]
   126bc:	cmp	r3, #0
   126c0:	bne	122b0 <close@plt+0x1400>
   126c4:	ldr	r3, [sp, #164]	; 0xa4
   126c8:	tst	r3, #1
   126cc:	bne	12d40 <close@plt+0x1e90>
   126d0:	ldr	r6, [sp, #28]
   126d4:	sub	r2, fp, #2
   126d8:	mov	r7, r6
   126dc:	clz	r2, r2
   126e0:	lsr	r2, r2, #5
   126e4:	b	11ecc <close@plt+0x101c>
   126e8:	sub	r2, fp, #2
   126ec:	clz	r2, r2
   126f0:	lsr	r2, r2, #5
   126f4:	b	11eb8 <close@plt+0x1008>
   126f8:	sub	r2, fp, #2
   126fc:	mov	r6, #0
   12700:	clz	r2, r2
   12704:	lsr	r2, r2, #5
   12708:	b	11ec0 <close@plt+0x1010>
   1270c:	sub	r2, fp, #2
   12710:	clz	r2, r2
   12714:	lsr	r2, r2, #5
   12718:	b	11ec0 <close@plt+0x1010>
   1271c:	sub	r2, fp, #2
   12720:	mov	r3, #102	; 0x66
   12724:	clz	r2, r2
   12728:	lsr	r2, r2, #5
   1272c:	b	120a4 <close@plt+0x11f4>
   12730:	sub	r2, fp, #2
   12734:	mov	r3, #118	; 0x76
   12738:	clz	r2, r2
   1273c:	lsr	r2, r2, #5
   12740:	b	120a4 <close@plt+0x11f4>
   12744:	andeq	r5, r2, r8, lsl #30
   12748:	andeq	r4, r1, ip, lsl #28
   1274c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12750:	andeq	r4, r1, r8, lsl #28
   12754:	ldr	r3, [sp, #48]	; 0x30
   12758:	ldrb	r5, [r3]
   1275c:	cmp	r5, #126	; 0x7e
   12760:	ldrls	pc, [pc, r5, lsl #2]
   12764:	b	123d0 <close@plt+0x1520>
   12768:			; <UNDEFINED> instruction: 0x000122b0
   1276c:	ldrdeq	r2, [r1], -r0
   12770:	ldrdeq	r2, [r1], -r0
   12774:	ldrdeq	r2, [r1], -r0
   12778:	ldrdeq	r2, [r1], -r0
   1277c:	ldrdeq	r2, [r1], -r0
   12780:	ldrdeq	r2, [r1], -r0
   12784:	andeq	r2, r1, r8, lsr #19
   12788:	andeq	r2, r1, r0, lsr #19
   1278c:	andeq	r2, r1, ip, ror r2
   12790:	andeq	r2, r1, r4, asr #4
   12794:	muleq	r1, ip, r2
   12798:	andeq	r2, r1, r4, lsl #5
   1279c:	muleq	r1, r4, r9
   127a0:	ldrdeq	r2, [r1], -r0
   127a4:	ldrdeq	r2, [r1], -r0
   127a8:	ldrdeq	r2, [r1], -r0
   127ac:	ldrdeq	r2, [r1], -r0
   127b0:	ldrdeq	r2, [r1], -r0
   127b4:	ldrdeq	r2, [r1], -r0
   127b8:	ldrdeq	r2, [r1], -r0
   127bc:	ldrdeq	r2, [r1], -r0
   127c0:	ldrdeq	r2, [r1], -r0
   127c4:	ldrdeq	r2, [r1], -r0
   127c8:	ldrdeq	r2, [r1], -r0
   127cc:	ldrdeq	r2, [r1], -r0
   127d0:	ldrdeq	r2, [r1], -r0
   127d4:	ldrdeq	r2, [r1], -r0
   127d8:	ldrdeq	r2, [r1], -r0
   127dc:	ldrdeq	r2, [r1], -r0
   127e0:	ldrdeq	r2, [r1], -r0
   127e4:	ldrdeq	r2, [r1], -r0
   127e8:	andeq	r2, r1, ip, lsl #19
   127ec:	andeq	r2, r1, r4, lsr #5
   127f0:	andeq	r2, r1, r4, lsr #5
   127f4:	andeq	r2, r1, r0, ror r9
   127f8:	andeq	r2, r1, r4, lsr #5
   127fc:	andeq	r2, r1, r4, ror #18
   12800:	andeq	r2, r1, r4, lsr #5
   12804:	andeq	r2, r1, r4, ror #1
   12808:	andeq	r2, r1, r4, lsr #5
   1280c:	andeq	r2, r1, r4, lsr #5
   12810:	andeq	r2, r1, r4, lsr #5
   12814:	andeq	r2, r1, r4, ror #18
   12818:	andeq	r2, r1, r4, ror #18
   1281c:	andeq	r2, r1, r4, ror #18
   12820:	andeq	r2, r1, r4, ror #18
   12824:	andeq	r2, r1, r4, ror #18
   12828:	andeq	r2, r1, r4, ror #18
   1282c:	andeq	r2, r1, r4, ror #18
   12830:	andeq	r2, r1, r4, ror #18
   12834:	andeq	r2, r1, r4, ror #18
   12838:	andeq	r2, r1, r4, ror #18
   1283c:	andeq	r2, r1, r4, ror #18
   12840:	andeq	r2, r1, r4, ror #18
   12844:	andeq	r2, r1, r4, ror #18
   12848:	andeq	r2, r1, r4, ror #18
   1284c:	andeq	r2, r1, r4, ror #18
   12850:	andeq	r2, r1, r4, ror #18
   12854:	andeq	r2, r1, r4, lsr #5
   12858:	andeq	r2, r1, r4, lsr #5
   1285c:	andeq	r2, r1, r4, lsr #5
   12860:	andeq	r2, r1, r4, lsr #5
   12864:	strheq	r2, [r1], -r8
   12868:	ldrdeq	r2, [r1], -r0
   1286c:	andeq	r2, r1, r4, ror #18
   12870:	andeq	r2, r1, r4, ror #18
   12874:	andeq	r2, r1, r4, ror #18
   12878:	andeq	r2, r1, r4, ror #18
   1287c:	andeq	r2, r1, r4, ror #18
   12880:	andeq	r2, r1, r4, ror #18
   12884:	andeq	r2, r1, r4, ror #18
   12888:	andeq	r2, r1, r4, ror #18
   1288c:	andeq	r2, r1, r4, ror #18
   12890:	andeq	r2, r1, r4, ror #18
   12894:	andeq	r2, r1, r4, ror #18
   12898:	andeq	r2, r1, r4, ror #18
   1289c:	andeq	r2, r1, r4, ror #18
   128a0:	andeq	r2, r1, r4, ror #18
   128a4:	andeq	r2, r1, r4, ror #18
   128a8:	andeq	r2, r1, r4, ror #18
   128ac:	andeq	r2, r1, r4, ror #18
   128b0:	andeq	r2, r1, r4, ror #18
   128b4:	andeq	r2, r1, r4, ror #18
   128b8:	andeq	r2, r1, r4, ror #18
   128bc:	andeq	r2, r1, r4, ror #18
   128c0:	andeq	r2, r1, r4, ror #18
   128c4:	andeq	r2, r1, r4, ror #18
   128c8:	andeq	r2, r1, r4, ror #18
   128cc:	andeq	r2, r1, r4, ror #18
   128d0:	andeq	r2, r1, r4, ror #18
   128d4:	andeq	r2, r1, r4, lsr #5
   128d8:	andeq	r2, r1, r0, ror r0
   128dc:	andeq	r2, r1, r4, ror #18
   128e0:	andeq	r2, r1, r4, lsr #5
   128e4:	andeq	r2, r1, r4, ror #18
   128e8:	andeq	r2, r1, r4, lsr #5
   128ec:	andeq	r2, r1, r4, ror #18
   128f0:	andeq	r2, r1, r4, ror #18
   128f4:	andeq	r2, r1, r4, ror #18
   128f8:	andeq	r2, r1, r4, ror #18
   128fc:	andeq	r2, r1, r4, ror #18
   12900:	andeq	r2, r1, r4, ror #18
   12904:	andeq	r2, r1, r4, ror #18
   12908:	andeq	r2, r1, r4, ror #18
   1290c:	andeq	r2, r1, r4, ror #18
   12910:	andeq	r2, r1, r4, ror #18
   12914:	andeq	r2, r1, r4, ror #18
   12918:	andeq	r2, r1, r4, ror #18
   1291c:	andeq	r2, r1, r4, ror #18
   12920:	andeq	r2, r1, r4, ror #18
   12924:	andeq	r2, r1, r4, ror #18
   12928:	andeq	r2, r1, r4, ror #18
   1292c:	andeq	r2, r1, r4, ror #18
   12930:	andeq	r2, r1, r4, ror #18
   12934:	andeq	r2, r1, r4, ror #18
   12938:	andeq	r2, r1, r4, ror #18
   1293c:	andeq	r2, r1, r4, ror #18
   12940:	andeq	r2, r1, r4, ror #18
   12944:	andeq	r2, r1, r4, ror #18
   12948:	andeq	r2, r1, r4, ror #18
   1294c:	andeq	r2, r1, r4, ror #18
   12950:	andeq	r2, r1, r4, ror #18
   12954:	andeq	r1, r1, r8, lsl #29
   12958:	andeq	r2, r1, r4, lsr #5
   1295c:	andeq	r1, r1, r8, lsl #29
   12960:	andeq	r2, r1, r0, ror r9
   12964:	mov	r6, r7
   12968:	mov	r7, #0
   1296c:	b	11ee8 <close@plt+0x1038>
   12970:	cmp	r9, #0
   12974:	mov	r3, #0
   12978:	beq	123b8 <close@plt+0x1508>
   1297c:	mov	r6, #0
   12980:	mov	r7, r3
   12984:	mov	r3, r6
   12988:	b	11eec <close@plt+0x103c>
   1298c:	mov	r3, #0
   12990:	b	12398 <close@plt+0x14e8>
   12994:	mov	r7, #0
   12998:	mov	r3, #114	; 0x72
   1299c:	b	121b8 <close@plt+0x1308>
   129a0:	mov	r5, #98	; 0x62
   129a4:	b	12248 <close@plt+0x1398>
   129a8:	mov	r5, #97	; 0x61
   129ac:	b	12288 <close@plt+0x13d8>
   129b0:	ldr	r3, [sp, #32]
   129b4:	cmp	r3, #0
   129b8:	bne	12e00 <close@plt+0x1f50>
   129bc:	add	r9, r9, #1
   129c0:	ldr	r3, [sp, #44]	; 0x2c
   129c4:	mov	r6, #0
   129c8:	mov	r5, #92	; 0x5c
   129cc:	b	12180 <close@plt+0x12d0>
   129d0:	ldr	r3, [sp, #36]	; 0x24
   129d4:	ldrb	r3, [r3, #1]
   129d8:	adds	r3, r3, #0
   129dc:	movne	r3, #1
   129e0:	b	11ea4 <close@plt+0xff4>
   129e4:	ldr	r3, [sp, #164]	; 0xa4
   129e8:	ands	r3, r3, #4
   129ec:	beq	12a10 <close@plt+0x1b60>
   129f0:	ldr	r2, [sp, #24]
   129f4:	add	r3, r9, #2
   129f8:	cmp	r3, r2
   129fc:	bcs	12a10 <close@plt+0x1b60>
   12a00:	ldr	r2, [sp, #48]	; 0x30
   12a04:	ldrb	r5, [r2, #1]
   12a08:	cmp	r5, #63	; 0x3f
   12a0c:	beq	12e74 <close@plt+0x1fc4>
   12a10:	mov	r2, #0
   12a14:	mov	r6, r2
   12a18:	mov	r5, #63	; 0x3f
   12a1c:	b	11ecc <close@plt+0x101c>
   12a20:	ldr	r3, [sp, #32]
   12a24:	cmp	r3, #0
   12a28:	bne	12e00 <close@plt+0x1f50>
   12a2c:	mov	r6, r3
   12a30:	mov	r5, #63	; 0x3f
   12a34:	b	11f14 <close@plt+0x1064>
   12a38:	ldr	r3, [sp, #24]
   12a3c:	cmn	r3, #1
   12a40:	mov	r3, #0
   12a44:	str	r3, [sp, #108]	; 0x6c
   12a48:	str	r3, [sp, #112]	; 0x70
   12a4c:	bne	12a5c <close@plt+0x1bac>
   12a50:	ldr	r0, [sp, #36]	; 0x24
   12a54:	bl	10dd8 <strlen@plt>
   12a58:	str	r0, [sp, #24]
   12a5c:	mov	r3, #0
   12a60:	str	sl, [sp, #88]	; 0x58
   12a64:	ldr	sl, [sp, #36]	; 0x24
   12a68:	str	r5, [sp, #92]	; 0x5c
   12a6c:	mov	r5, r3
   12a70:	str	r7, [sp, #96]	; 0x60
   12a74:	str	r4, [sp, #100]	; 0x64
   12a78:	str	r8, [sp, #84]	; 0x54
   12a7c:	ldr	r3, [sp, #24]
   12a80:	add	r4, r9, r5
   12a84:	add	r7, sl, r4
   12a88:	sub	r2, r3, r4
   12a8c:	mov	r1, r7
   12a90:	add	r3, sp, #108	; 0x6c
   12a94:	add	r0, sp, #104	; 0x68
   12a98:	bl	142c0 <close@plt+0x3410>
   12a9c:	subs	r8, r0, #0
   12aa0:	beq	12af0 <close@plt+0x1c40>
   12aa4:	cmn	r8, #1
   12aa8:	beq	12e50 <close@plt+0x1fa0>
   12aac:	cmn	r8, #2
   12ab0:	beq	12f70 <close@plt+0x20c0>
   12ab4:	ldr	r3, [sp, #32]
   12ab8:	cmp	fp, #2
   12abc:	movne	r3, #0
   12ac0:	andeq	r3, r3, #1
   12ac4:	cmp	r3, #0
   12ac8:	bne	12c50 <close@plt+0x1da0>
   12acc:	ldr	r0, [sp, #104]	; 0x68
   12ad0:	bl	10d24 <iswprint@plt>
   12ad4:	add	r5, r5, r8
   12ad8:	cmp	r0, #0
   12adc:	add	r0, sp, #108	; 0x6c
   12ae0:	moveq	r6, #0
   12ae4:	bl	10cd0 <mbsinit@plt>
   12ae8:	cmp	r0, #0
   12aec:	beq	12a7c <close@plt+0x1bcc>
   12af0:	ldr	r3, [sp, #28]
   12af4:	mov	ip, r5
   12af8:	eor	r2, r6, #1
   12afc:	ldr	r5, [sp, #92]	; 0x5c
   12b00:	ldr	r7, [sp, #96]	; 0x60
   12b04:	ldr	r4, [sp, #100]	; 0x64
   12b08:	ldr	r8, [sp, #84]	; 0x54
   12b0c:	ldr	sl, [sp, #88]	; 0x58
   12b10:	and	r2, r2, r3
   12b14:	cmp	ip, #1
   12b18:	bls	12418 <close@plt+0x1568>
   12b1c:	add	r1, ip, r9
   12b20:	ldr	lr, [sp, #48]	; 0x30
   12b24:	mov	r0, #0
   12b28:	str	r6, [sp, #48]	; 0x30
   12b2c:	mov	ip, #39	; 0x27
   12b30:	ldr	r6, [sp, #44]	; 0x2c
   12b34:	b	12bec <close@plt+0x1d3c>
   12b38:	ldr	r0, [sp, #32]
   12b3c:	sub	r3, fp, #2
   12b40:	cmp	r0, #0
   12b44:	clz	r3, r3
   12b48:	lsr	r3, r3, #5
   12b4c:	bne	12d54 <close@plt+0x1ea4>
   12b50:	eor	r0, r6, #1
   12b54:	ands	r3, r3, r0
   12b58:	beq	12b88 <close@plt+0x1cd8>
   12b5c:	add	r0, r4, #1
   12b60:	cmp	sl, r4
   12b64:	strbhi	ip, [r8, r4]
   12b68:	cmp	sl, r0
   12b6c:	movhi	r6, #36	; 0x24
   12b70:	strbhi	r6, [r8, r0]
   12b74:	add	r0, r4, #2
   12b78:	mov	r6, r3
   12b7c:	add	r4, r4, #3
   12b80:	cmp	sl, r0
   12b84:	strbhi	ip, [r8, r0]
   12b88:	cmp	sl, r4
   12b8c:	movhi	r3, #92	; 0x5c
   12b90:	strbhi	r3, [r8, r4]
   12b94:	add	r3, r4, #1
   12b98:	cmp	sl, r3
   12b9c:	lsrhi	r0, r5, #6
   12ba0:	addhi	r0, r0, #48	; 0x30
   12ba4:	strbhi	r0, [r8, r3]
   12ba8:	add	r0, r4, #2
   12bac:	cmp	sl, r0
   12bb0:	lsrhi	r3, r5, #3
   12bb4:	andhi	r3, r3, #7
   12bb8:	addhi	r3, r3, #48	; 0x30
   12bbc:	add	r9, r9, #1
   12bc0:	strbhi	r3, [r8, r0]
   12bc4:	and	r5, r5, #7
   12bc8:	cmp	r9, r1
   12bcc:	add	r5, r5, #48	; 0x30
   12bd0:	add	r4, r4, #3
   12bd4:	bcs	12d74 <close@plt+0x1ec4>
   12bd8:	mov	r0, r2
   12bdc:	cmp	sl, r4
   12be0:	strbhi	r5, [r8, r4]
   12be4:	ldrb	r5, [lr, #1]!
   12be8:	add	r4, r4, #1
   12bec:	cmp	r2, #0
   12bf0:	bne	12b38 <close@plt+0x1c88>
   12bf4:	eor	r3, r0, #1
   12bf8:	and	r3, r3, r6
   12bfc:	cmp	r7, #0
   12c00:	uxtb	r3, r3
   12c04:	beq	12c18 <close@plt+0x1d68>
   12c08:	cmp	sl, r4
   12c0c:	movhi	r7, #92	; 0x5c
   12c10:	strbhi	r7, [r8, r4]
   12c14:	add	r4, r4, #1
   12c18:	add	r9, r9, #1
   12c1c:	cmp	r9, r1
   12c20:	bcs	12d68 <close@plt+0x1eb8>
   12c24:	cmp	r3, #0
   12c28:	beq	12d94 <close@plt+0x1ee4>
   12c2c:	cmp	sl, r4
   12c30:	add	r3, r4, #1
   12c34:	strbhi	ip, [r8, r4]
   12c38:	mov	r7, #0
   12c3c:	cmp	sl, r3
   12c40:	strbhi	ip, [r8, r3]
   12c44:	add	r4, r4, #2
   12c48:	mov	r6, r7
   12c4c:	b	12bdc <close@plt+0x1d2c>
   12c50:	cmp	r8, #1
   12c54:	beq	12acc <close@plt+0x1c1c>
   12c58:	add	r1, r4, #1
   12c5c:	add	r3, sl, r8
   12c60:	add	r1, sl, r1
   12c64:	add	r4, r3, r4
   12c68:	ldrb	r3, [r1], #1
   12c6c:	sub	r3, r3, #91	; 0x5b
   12c70:	cmp	r3, #33	; 0x21
   12c74:	ldrls	pc, [pc, r3, lsl #2]
   12c78:	b	12d04 <close@plt+0x1e54>
   12c7c:	andeq	r2, r1, r0, lsl sp
   12c80:	andeq	r2, r1, r0, lsl sp
   12c84:	andeq	r2, r1, r4, lsl #26
   12c88:	andeq	r2, r1, r0, lsl sp
   12c8c:	andeq	r2, r1, r4, lsl #26
   12c90:	andeq	r2, r1, r0, lsl sp
   12c94:	andeq	r2, r1, r4, lsl #26
   12c98:	andeq	r2, r1, r4, lsl #26
   12c9c:	andeq	r2, r1, r4, lsl #26
   12ca0:	andeq	r2, r1, r4, lsl #26
   12ca4:	andeq	r2, r1, r4, lsl #26
   12ca8:	andeq	r2, r1, r4, lsl #26
   12cac:	andeq	r2, r1, r4, lsl #26
   12cb0:	andeq	r2, r1, r4, lsl #26
   12cb4:	andeq	r2, r1, r4, lsl #26
   12cb8:	andeq	r2, r1, r4, lsl #26
   12cbc:	andeq	r2, r1, r4, lsl #26
   12cc0:	andeq	r2, r1, r4, lsl #26
   12cc4:	andeq	r2, r1, r4, lsl #26
   12cc8:	andeq	r2, r1, r4, lsl #26
   12ccc:	andeq	r2, r1, r4, lsl #26
   12cd0:	andeq	r2, r1, r4, lsl #26
   12cd4:	andeq	r2, r1, r4, lsl #26
   12cd8:	andeq	r2, r1, r4, lsl #26
   12cdc:	andeq	r2, r1, r4, lsl #26
   12ce0:	andeq	r2, r1, r4, lsl #26
   12ce4:	andeq	r2, r1, r4, lsl #26
   12ce8:	andeq	r2, r1, r4, lsl #26
   12cec:	andeq	r2, r1, r4, lsl #26
   12cf0:	andeq	r2, r1, r4, lsl #26
   12cf4:	andeq	r2, r1, r4, lsl #26
   12cf8:	andeq	r2, r1, r4, lsl #26
   12cfc:	andeq	r2, r1, r4, lsl #26
   12d00:	andeq	r2, r1, r0, lsl sp
   12d04:	cmp	r4, r1
   12d08:	bne	12c68 <close@plt+0x1db8>
   12d0c:	b	12acc <close@plt+0x1c1c>
   12d10:	ldr	fp, [sp, #84]	; 0x54
   12d14:	ldr	sl, [sp, #88]	; 0x58
   12d18:	mov	r8, #2
   12d1c:	b	121d8 <close@plt+0x1328>
   12d20:	cmp	sl, r4
   12d24:	movls	r1, r4
   12d28:	bls	12328 <close@plt+0x1478>
   12d2c:	ldr	r3, [sp, #44]	; 0x2c
   12d30:	b	12318 <close@plt+0x1468>
   12d34:	str	sl, [sp, #72]	; 0x48
   12d38:	ldr	sl, [sp, #32]
   12d3c:	b	12150 <close@plt+0x12a0>
   12d40:	add	r9, r9, #1
   12d44:	b	11a44 <close@plt+0xb94>
   12d48:	ldr	r2, [sp, #28]
   12d4c:	mov	r6, #0
   12d50:	b	12b1c <close@plt+0x1c6c>
   12d54:	str	fp, [sp, #160]	; 0xa0
   12d58:	str	r3, [sp, #28]
   12d5c:	mov	fp, r8
   12d60:	ldr	r8, [sp, #160]	; 0xa0
   12d64:	b	121d8 <close@plt+0x1328>
   12d68:	str	r6, [sp, #44]	; 0x2c
   12d6c:	ldr	r6, [sp, #48]	; 0x30
   12d70:	b	12180 <close@plt+0x12d0>
   12d74:	str	r6, [sp, #44]	; 0x2c
   12d78:	ldr	r6, [sp, #48]	; 0x30
   12d7c:	b	11f8c <close@plt+0x10dc>
   12d80:	add	r4, r4, #4
   12d84:	str	r3, [sp, #44]	; 0x2c
   12d88:	mov	r6, #0
   12d8c:	mov	r5, #48	; 0x30
   12d90:	b	11f14 <close@plt+0x1064>
   12d94:	mov	r7, r3
   12d98:	b	12bdc <close@plt+0x1d2c>
   12d9c:	ldr	r3, [pc, #-1624]	; 1274c <close@plt+0x189c>
   12da0:	mov	r4, #1
   12da4:	str	r4, [sp, #40]	; 0x28
   12da8:	str	r4, [sp, #28]
   12dac:	str	r4, [sp, #52]	; 0x34
   12db0:	str	sl, [sp, #72]	; 0x48
   12db4:	str	sl, [sp, #68]	; 0x44
   12db8:	str	sl, [sp, #44]	; 0x2c
   12dbc:	str	sl, [sp, #32]
   12dc0:	str	r3, [sp, #60]	; 0x3c
   12dc4:	b	11a34 <close@plt+0xb84>
   12dc8:	mov	r3, r6
   12dcc:	mov	r5, #48	; 0x30
   12dd0:	mov	r6, #0
   12dd4:	b	11f14 <close@plt+0x1064>
   12dd8:	cmp	sl, r4
   12ddc:	movhi	r3, #48	; 0x30
   12de0:	strbhi	r3, [r8, r4]
   12de4:	add	r3, r1, #2
   12de8:	cmp	sl, r3
   12dec:	movhi	r0, #48	; 0x30
   12df0:	strbhi	r0, [r8, r3]
   12df4:	add	r4, r1, #3
   12df8:	mov	r5, #48	; 0x30
   12dfc:	b	1235c <close@plt+0x14ac>
   12e00:	str	fp, [sp, #160]	; 0xa0
   12e04:	mov	fp, r8
   12e08:	ldr	r8, [sp, #160]	; 0xa0
   12e0c:	b	121d8 <close@plt+0x1328>
   12e10:	ldr	r2, [sp, #80]	; 0x50
   12e14:	ldrb	r3, [r2]
   12e18:	cmp	r3, #0
   12e1c:	beq	11a04 <close@plt+0xb54>
   12e20:	cmp	sl, r4
   12e24:	strbhi	r3, [fp, r4]
   12e28:	ldrb	r3, [r2, #1]!
   12e2c:	add	r4, r4, #1
   12e30:	cmp	r3, #0
   12e34:	bne	12e20 <close@plt+0x1f70>
   12e38:	b	11a04 <close@plt+0xb54>
   12e3c:	str	fp, [sp, #160]	; 0xa0
   12e40:	mov	r3, #0
   12e44:	mov	fp, r8
   12e48:	ldr	r8, [sp, #160]	; 0xa0
   12e4c:	b	1226c <close@plt+0x13bc>
   12e50:	mov	ip, r5
   12e54:	ldr	r7, [sp, #96]	; 0x60
   12e58:	ldr	r5, [sp, #92]	; 0x5c
   12e5c:	ldr	r4, [sp, #100]	; 0x64
   12e60:	ldr	r8, [sp, #84]	; 0x54
   12e64:	ldr	sl, [sp, #88]	; 0x58
   12e68:	ldr	r2, [sp, #28]
   12e6c:	mov	r6, #0
   12e70:	b	12b14 <close@plt+0x1c64>
   12e74:	ldr	r2, [sp, #36]	; 0x24
   12e78:	ldrb	r1, [r2, r3]
   12e7c:	sub	r2, r1, #33	; 0x21
   12e80:	cmp	r2, #29
   12e84:	ldrls	pc, [pc, r2, lsl #2]
   12e88:	b	12f64 <close@plt+0x20b4>
   12e8c:	andeq	r2, r1, r4, lsl #30
   12e90:	andeq	r2, r1, r4, ror #30
   12e94:	andeq	r2, r1, r4, ror #30
   12e98:	andeq	r2, r1, r4, ror #30
   12e9c:	andeq	r2, r1, r4, ror #30
   12ea0:	andeq	r2, r1, r4, ror #30
   12ea4:	andeq	r2, r1, r4, lsl #30
   12ea8:	andeq	r2, r1, r4, lsl #30
   12eac:	andeq	r2, r1, r4, lsl #30
   12eb0:	andeq	r2, r1, r4, ror #30
   12eb4:	andeq	r2, r1, r4, ror #30
   12eb8:	andeq	r2, r1, r4, ror #30
   12ebc:	andeq	r2, r1, r4, lsl #30
   12ec0:	andeq	r2, r1, r4, ror #30
   12ec4:	andeq	r2, r1, r4, lsl #30
   12ec8:	andeq	r2, r1, r4, ror #30
   12ecc:	andeq	r2, r1, r4, ror #30
   12ed0:	andeq	r2, r1, r4, ror #30
   12ed4:	andeq	r2, r1, r4, ror #30
   12ed8:	andeq	r2, r1, r4, ror #30
   12edc:	andeq	r2, r1, r4, ror #30
   12ee0:	andeq	r2, r1, r4, ror #30
   12ee4:	andeq	r2, r1, r4, ror #30
   12ee8:	andeq	r2, r1, r4, ror #30
   12eec:	andeq	r2, r1, r4, ror #30
   12ef0:	andeq	r2, r1, r4, ror #30
   12ef4:	andeq	r2, r1, r4, ror #30
   12ef8:	andeq	r2, r1, r4, lsl #30
   12efc:	andeq	r2, r1, r4, lsl #30
   12f00:	andeq	r2, r1, r4, lsl #30
   12f04:	ldr	r2, [sp, #32]
   12f08:	cmp	r2, #0
   12f0c:	bne	13010 <close@plt+0x2160>
   12f10:	cmp	sl, r4
   12f14:	movhi	r2, #63	; 0x3f
   12f18:	strbhi	r2, [r8, r4]
   12f1c:	add	r2, r4, #1
   12f20:	cmp	sl, r2
   12f24:	movhi	r0, #34	; 0x22
   12f28:	strbhi	r0, [r8, r2]
   12f2c:	add	r2, r4, #2
   12f30:	cmp	sl, r2
   12f34:	movhi	r0, #34	; 0x22
   12f38:	strbhi	r0, [r8, r2]
   12f3c:	add	r2, r4, #3
   12f40:	cmp	sl, r2
   12f44:	movhi	r0, #63	; 0x3f
   12f48:	strbhi	r0, [r8, r2]
   12f4c:	mov	r2, #0
   12f50:	add	r4, r4, #4
   12f54:	mov	r5, r1
   12f58:	mov	r9, r3
   12f5c:	mov	r6, r2
   12f60:	b	1235c <close@plt+0x14ac>
   12f64:	mov	r2, #0
   12f68:	mov	r6, r2
   12f6c:	b	11ecc <close@plt+0x101c>
   12f70:	ldr	r0, [sp, #24]
   12f74:	mov	r1, r4
   12f78:	cmp	r1, r0
   12f7c:	mov	r2, r7
   12f80:	mov	r3, r5
   12f84:	mov	ip, r5
   12f88:	ldr	r7, [sp, #96]	; 0x60
   12f8c:	ldr	r5, [sp, #92]	; 0x5c
   12f90:	ldr	r4, [sp, #100]	; 0x64
   12f94:	ldr	r8, [sp, #84]	; 0x54
   12f98:	ldr	sl, [sp, #88]	; 0x58
   12f9c:	bcs	12fd0 <close@plt+0x2120>
   12fa0:	ldrb	r6, [r2]
   12fa4:	cmp	r6, #0
   12fa8:	bne	12fbc <close@plt+0x210c>
   12fac:	b	130ec <close@plt+0x223c>
   12fb0:	ldrb	r6, [r2, #1]!
   12fb4:	cmp	r6, #0
   12fb8:	beq	13074 <close@plt+0x21c4>
   12fbc:	add	r3, r3, #1
   12fc0:	add	r1, r9, r3
   12fc4:	cmp	r1, r0
   12fc8:	bcc	12fb0 <close@plt+0x2100>
   12fcc:	mov	ip, r3
   12fd0:	ldr	r2, [sp, #28]
   12fd4:	mov	r6, #0
   12fd8:	b	12b14 <close@plt+0x1c64>
   12fdc:	mov	r3, #1
   12fe0:	str	r3, [sp, #40]	; 0x28
   12fe4:	str	r3, [sp, #32]
   12fe8:	str	r3, [sp, #28]
   12fec:	str	r3, [sp, #52]	; 0x34
   12ff0:	ldr	r3, [pc, #-2220]	; 1274c <close@plt+0x189c>
   12ff4:	mov	r2, #0
   12ff8:	str	r2, [sp, #68]	; 0x44
   12ffc:	str	r2, [sp, #44]	; 0x2c
   13000:	str	r2, [sp, #72]	; 0x48
   13004:	mov	r4, r2
   13008:	str	r3, [sp, #60]	; 0x3c
   1300c:	b	11a34 <close@plt+0xb84>
   13010:	str	fp, [sp, #160]	; 0xa0
   13014:	mov	fp, r8
   13018:	ldr	r8, [sp, #160]	; 0xa0
   1301c:	b	121e4 <close@plt+0x1334>
   13020:	mov	r2, r3
   13024:	ldr	r3, [sp, #60]	; 0x3c
   13028:	cmp	r3, #0
   1302c:	moveq	r2, #0
   13030:	andne	r2, r2, #1
   13034:	cmp	r2, #0
   13038:	beq	13064 <close@plt+0x21b4>
   1303c:	mov	r2, r3
   13040:	ldrb	r3, [r3]
   13044:	cmp	r3, #0
   13048:	beq	13064 <close@plt+0x21b4>
   1304c:	cmp	sl, r4
   13050:	strbhi	r3, [fp, r4]
   13054:	ldrb	r3, [r2, #1]!
   13058:	add	r4, r4, #1
   1305c:	cmp	r3, #0
   13060:	bne	1304c <close@plt+0x219c>
   13064:	cmp	sl, r4
   13068:	movhi	r3, #0
   1306c:	strbhi	r3, [fp, r4]
   13070:	b	12224 <close@plt+0x1374>
   13074:	mov	ip, r3
   13078:	ldr	r2, [sp, #28]
   1307c:	b	12b14 <close@plt+0x1c64>
   13080:	str	fp, [sp, #160]	; 0xa0
   13084:	mov	fp, r8
   13088:	ldr	r8, [sp, #160]	; 0xa0
   1308c:	sub	r3, r8, #2
   13090:	clz	r3, r3
   13094:	lsr	r3, r3, #5
   13098:	str	r3, [sp, #28]
   1309c:	b	121d8 <close@plt+0x1328>
   130a0:	ldr	r3, [sp, #76]	; 0x4c
   130a4:	mov	ip, #5
   130a8:	str	r3, [sp, #16]
   130ac:	ldr	r3, [sp, #80]	; 0x50
   130b0:	ldr	r2, [sp, #36]	; 0x24
   130b4:	str	r3, [sp, #12]
   130b8:	ldr	r3, [sp, #56]	; 0x38
   130bc:	ldr	r1, [sp, #72]	; 0x48
   130c0:	str	r3, [sp, #8]
   130c4:	ldr	r3, [sp, #164]	; 0xa4
   130c8:	mov	r0, fp
   130cc:	str	r3, [sp, #4]
   130d0:	str	ip, [sp]
   130d4:	ldr	r3, [sp, #24]
   130d8:	bl	1193c <close@plt+0xa8c>
   130dc:	mov	r4, r0
   130e0:	b	12224 <close@plt+0x1374>
   130e4:	mov	r8, #2
   130e8:	b	121d8 <close@plt+0x1328>
   130ec:	ldr	r2, [sp, #28]
   130f0:	b	12b14 <close@plt+0x1c64>
   130f4:	mov	r3, #0
   130f8:	str	r3, [sp, #68]	; 0x44
   130fc:	str	r3, [sp, #44]	; 0x2c
   13100:	str	r3, [sp, #72]	; 0x48
   13104:	str	r3, [sp, #28]
   13108:	mov	r4, r3
   1310c:	ldr	r3, [pc, #-2500]	; 12750 <close@plt+0x18a0>
   13110:	mov	r2, #1
   13114:	str	r2, [sp, #40]	; 0x28
   13118:	str	r2, [sp, #32]
   1311c:	str	r2, [sp, #52]	; 0x34
   13120:	str	r3, [sp, #60]	; 0x3c
   13124:	b	11a34 <close@plt+0xb84>
   13128:	bl	10d00 <__stack_chk_fail@plt>
   1312c:	mov	r5, r3
   13130:	mov	r6, #0
   13134:	b	11f28 <close@plt+0x1078>
   13138:	mov	r3, #0
   1313c:	mov	r2, #1
   13140:	str	r3, [sp, #44]	; 0x2c
   13144:	str	r3, [sp, #72]	; 0x48
   13148:	str	r2, [sp, #40]	; 0x28
   1314c:	b	12044 <close@plt+0x1194>
   13150:	bl	10ea4 <abort@plt>
   13154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13158:	sub	sp, sp, #44	; 0x2c
   1315c:	mov	r6, r0
   13160:	mov	r4, r3
   13164:	mov	sl, r1
   13168:	mov	fp, r2
   1316c:	bl	10de4 <__errno_location@plt>
   13170:	ldr	r7, [pc, #364]	; 132e4 <close@plt+0x2434>
   13174:	cmp	r6, #0
   13178:	ldr	r5, [r7]
   1317c:	ldr	r3, [r0]
   13180:	str	r3, [sp, #24]
   13184:	blt	132e0 <close@plt+0x2430>
   13188:	ldr	r3, [r7, #4]
   1318c:	mov	r8, r0
   13190:	cmp	r3, r6
   13194:	bgt	131e0 <close@plt+0x2330>
   13198:	cmn	r6, #-268435454	; 0xf0000002
   1319c:	bgt	132dc <close@plt+0x242c>
   131a0:	add	r9, r6, #1
   131a4:	add	r3, r7, #8
   131a8:	cmp	r5, r3
   131ac:	lsl	r1, r9, #3
   131b0:	beq	132bc <close@plt+0x240c>
   131b4:	mov	r0, r5
   131b8:	bl	13f48 <close@plt+0x3098>
   131bc:	mov	r5, r0
   131c0:	str	r0, [r7]
   131c4:	ldr	r0, [r7, #4]
   131c8:	mov	r1, #0
   131cc:	sub	r2, r9, r0
   131d0:	add	r0, r5, r0, lsl #3
   131d4:	lsl	r2, r2, #3
   131d8:	bl	10dfc <memset@plt>
   131dc:	str	r9, [r7, #4]
   131e0:	add	r3, r5, r6, lsl #3
   131e4:	ldr	r1, [r4, #4]
   131e8:	ldr	r7, [r3, #4]
   131ec:	ldr	r9, [r5, r6, lsl #3]
   131f0:	ldr	r2, [r4, #40]	; 0x28
   131f4:	ldr	ip, [r4, #44]	; 0x2c
   131f8:	str	r3, [sp, #28]
   131fc:	ldr	r3, [r4]
   13200:	orr	r1, r1, #1
   13204:	add	lr, r4, #8
   13208:	str	r1, [sp, #36]	; 0x24
   1320c:	str	r1, [sp, #4]
   13210:	str	r2, [sp, #12]
   13214:	str	r3, [sp]
   13218:	mov	r0, r7
   1321c:	mov	r1, r9
   13220:	str	ip, [sp, #16]
   13224:	str	lr, [sp, #8]
   13228:	mov	r3, fp
   1322c:	mov	r2, sl
   13230:	str	lr, [sp, #32]
   13234:	bl	1193c <close@plt+0xa8c>
   13238:	cmp	r9, r0
   1323c:	bhi	132a8 <close@plt+0x23f8>
   13240:	ldr	r3, [pc, #160]	; 132e8 <close@plt+0x2438>
   13244:	add	r9, r0, #1
   13248:	cmp	r7, r3
   1324c:	str	r9, [r5, r6, lsl #3]
   13250:	beq	1325c <close@plt+0x23ac>
   13254:	mov	r0, r7
   13258:	bl	10cac <free@plt>
   1325c:	mov	r0, r9
   13260:	bl	13eec <close@plt+0x303c>
   13264:	ldr	lr, [sp, #28]
   13268:	ldr	ip, [r4, #44]	; 0x2c
   1326c:	ldr	r5, [r4, #40]	; 0x28
   13270:	mov	r3, fp
   13274:	mov	r2, sl
   13278:	mov	r1, r9
   1327c:	str	r0, [lr, #4]
   13280:	ldr	lr, [r4]
   13284:	ldr	r4, [sp, #32]
   13288:	str	ip, [sp, #16]
   1328c:	str	r4, [sp, #8]
   13290:	ldr	r4, [sp, #36]	; 0x24
   13294:	str	r5, [sp, #12]
   13298:	str	r4, [sp, #4]
   1329c:	str	lr, [sp]
   132a0:	mov	r7, r0
   132a4:	bl	1193c <close@plt+0xa8c>
   132a8:	ldr	r3, [sp, #24]
   132ac:	mov	r0, r7
   132b0:	str	r3, [r8]
   132b4:	add	sp, sp, #44	; 0x2c
   132b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132bc:	mov	r0, #0
   132c0:	bl	13f48 <close@plt+0x3098>
   132c4:	ldr	r3, [pc, #32]	; 132ec <close@plt+0x243c>
   132c8:	mov	r5, r0
   132cc:	ldm	r3, {r0, r1}
   132d0:	str	r5, [r7]
   132d4:	stm	r5, {r0, r1}
   132d8:	b	131c4 <close@plt+0x2314>
   132dc:	bl	14134 <close@plt+0x3284>
   132e0:	bl	10ea4 <abort@plt>
   132e4:	andeq	r6, r2, r8, ror #1
   132e8:	andeq	r6, r2, r0, asr r1
   132ec:	strdeq	r6, [r2], -r0
   132f0:	push	{r4, r5, r6, lr}
   132f4:	mov	r5, r0
   132f8:	bl	10de4 <__errno_location@plt>
   132fc:	cmp	r5, #0
   13300:	mov	r1, #48	; 0x30
   13304:	mov	r4, r0
   13308:	ldr	r0, [pc, #16]	; 13320 <close@plt+0x2470>
   1330c:	ldr	r6, [r4]
   13310:	movne	r0, r5
   13314:	bl	140f4 <close@plt+0x3244>
   13318:	str	r6, [r4]
   1331c:	pop	{r4, r5, r6, pc}
   13320:	andeq	r6, r2, r0, asr r2
   13324:	ldr	r3, [pc, #12]	; 13338 <close@plt+0x2488>
   13328:	cmp	r0, #0
   1332c:	moveq	r0, r3
   13330:	ldr	r0, [r0]
   13334:	bx	lr
   13338:	andeq	r6, r2, r0, asr r2
   1333c:	ldr	r3, [pc, #12]	; 13350 <close@plt+0x24a0>
   13340:	cmp	r0, #0
   13344:	moveq	r0, r3
   13348:	str	r1, [r0]
   1334c:	bx	lr
   13350:	andeq	r6, r2, r0, asr r2
   13354:	ldr	r3, [pc, #52]	; 13390 <close@plt+0x24e0>
   13358:	cmp	r0, #0
   1335c:	moveq	r0, r3
   13360:	add	r3, r0, #8
   13364:	push	{lr}		; (str lr, [sp, #-4]!)
   13368:	lsr	lr, r1, #5
   1336c:	and	r1, r1, #31
   13370:	ldr	ip, [r3, lr, lsl #2]
   13374:	lsr	r0, ip, r1
   13378:	eor	r2, r2, r0
   1337c:	and	r2, r2, #1
   13380:	and	r0, r0, #1
   13384:	eor	r1, ip, r2, lsl r1
   13388:	str	r1, [r3, lr, lsl #2]
   1338c:	pop	{pc}		; (ldr pc, [sp], #4)
   13390:	andeq	r6, r2, r0, asr r2
   13394:	ldr	r3, [pc, #16]	; 133ac <close@plt+0x24fc>
   13398:	cmp	r0, #0
   1339c:	movne	r3, r0
   133a0:	ldr	r0, [r3, #4]
   133a4:	str	r1, [r3, #4]
   133a8:	bx	lr
   133ac:	andeq	r6, r2, r0, asr r2
   133b0:	ldr	r3, [pc, #44]	; 133e4 <close@plt+0x2534>
   133b4:	cmp	r0, #0
   133b8:	moveq	r0, r3
   133bc:	mov	ip, #10
   133c0:	cmp	r2, #0
   133c4:	cmpne	r1, #0
   133c8:	str	ip, [r0]
   133cc:	beq	133dc <close@plt+0x252c>
   133d0:	str	r1, [r0, #40]	; 0x28
   133d4:	str	r2, [r0, #44]	; 0x2c
   133d8:	bx	lr
   133dc:	push	{r4, lr}
   133e0:	bl	10ea4 <abort@plt>
   133e4:	andeq	r6, r2, r0, asr r2
   133e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   133ec:	sub	sp, sp, #24
   133f0:	ldr	ip, [pc, #108]	; 13464 <close@plt+0x25b4>
   133f4:	ldr	r4, [sp, #56]	; 0x38
   133f8:	mov	r9, r2
   133fc:	cmp	r4, #0
   13400:	moveq	r4, ip
   13404:	mov	sl, r3
   13408:	mov	r7, r0
   1340c:	mov	r8, r1
   13410:	bl	10de4 <__errno_location@plt>
   13414:	ldr	r3, [r4, #44]	; 0x2c
   13418:	mov	r1, r8
   1341c:	ldr	r6, [r0]
   13420:	str	r3, [sp, #16]
   13424:	ldr	r2, [r4, #40]	; 0x28
   13428:	add	r3, r4, #8
   1342c:	str	r3, [sp, #8]
   13430:	str	r2, [sp, #12]
   13434:	ldr	r2, [r4, #4]
   13438:	mov	r5, r0
   1343c:	str	r2, [sp, #4]
   13440:	ldr	ip, [r4]
   13444:	mov	r3, sl
   13448:	mov	r2, r9
   1344c:	mov	r0, r7
   13450:	str	ip, [sp]
   13454:	bl	1193c <close@plt+0xa8c>
   13458:	str	r6, [r5]
   1345c:	add	sp, sp, #24
   13460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13464:	andeq	r6, r2, r0, asr r2
   13468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1346c:	cmp	r3, #0
   13470:	sub	sp, sp, #44	; 0x2c
   13474:	ldr	r4, [pc, #192]	; 1353c <close@plt+0x268c>
   13478:	mov	r6, r2
   1347c:	movne	r4, r3
   13480:	mov	r9, r1
   13484:	mov	r8, r0
   13488:	bl	10de4 <__errno_location@plt>
   1348c:	ldr	r3, [r4, #44]	; 0x2c
   13490:	ldr	r5, [r4, #4]
   13494:	add	sl, r4, #8
   13498:	cmp	r6, #0
   1349c:	orreq	r5, r5, #1
   134a0:	mov	r1, #0
   134a4:	ldr	r2, [r0]
   134a8:	str	r3, [sp, #16]
   134ac:	ldr	r3, [r4, #40]	; 0x28
   134b0:	stmib	sp, {r5, sl}
   134b4:	str	r3, [sp, #12]
   134b8:	ldr	r3, [r4]
   134bc:	mov	r7, r0
   134c0:	str	r2, [sp, #28]
   134c4:	str	r3, [sp]
   134c8:	mov	r2, r8
   134cc:	mov	r3, r9
   134d0:	mov	r0, r1
   134d4:	bl	1193c <close@plt+0xa8c>
   134d8:	add	r1, r0, #1
   134dc:	mov	fp, r0
   134e0:	mov	r0, r1
   134e4:	str	r1, [sp, #36]	; 0x24
   134e8:	bl	13eec <close@plt+0x303c>
   134ec:	ldr	r3, [r4, #44]	; 0x2c
   134f0:	mov	r2, r8
   134f4:	str	r3, [sp, #16]
   134f8:	ldr	r3, [r4, #40]	; 0x28
   134fc:	str	r5, [sp, #4]
   13500:	str	r3, [sp, #12]
   13504:	str	sl, [sp, #8]
   13508:	ldr	ip, [r4]
   1350c:	ldr	r1, [sp, #36]	; 0x24
   13510:	mov	r3, r9
   13514:	str	ip, [sp]
   13518:	str	r0, [sp, #32]
   1351c:	bl	1193c <close@plt+0xa8c>
   13520:	ldr	r2, [sp, #28]
   13524:	cmp	r6, #0
   13528:	str	r2, [r7]
   1352c:	ldr	r0, [sp, #32]
   13530:	strne	fp, [r6]
   13534:	add	sp, sp, #44	; 0x2c
   13538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1353c:	andeq	r6, r2, r0, asr r2
   13540:	mov	r3, r2
   13544:	mov	r2, #0
   13548:	b	13468 <close@plt+0x25b8>
   1354c:	push	{r4, r5, r6, r7, r8, lr}
   13550:	ldr	r6, [pc, #112]	; 135c8 <close@plt+0x2718>
   13554:	ldr	r3, [r6, #4]
   13558:	ldr	r7, [r6]
   1355c:	cmp	r3, #1
   13560:	ble	13584 <close@plt+0x26d4>
   13564:	sub	r5, r7, #8
   13568:	add	r5, r5, r3, lsl #3
   1356c:	mov	r4, r7
   13570:	ldr	r0, [r4, #12]
   13574:	add	r4, r4, #8
   13578:	bl	10cac <free@plt>
   1357c:	cmp	r4, r5
   13580:	bne	13570 <close@plt+0x26c0>
   13584:	ldr	r0, [r7, #4]
   13588:	ldr	r4, [pc, #60]	; 135cc <close@plt+0x271c>
   1358c:	cmp	r0, r4
   13590:	beq	135a4 <close@plt+0x26f4>
   13594:	bl	10cac <free@plt>
   13598:	mov	r3, #256	; 0x100
   1359c:	str	r4, [r6, #12]
   135a0:	str	r3, [r6, #8]
   135a4:	ldr	r4, [pc, #36]	; 135d0 <close@plt+0x2720>
   135a8:	cmp	r7, r4
   135ac:	beq	135bc <close@plt+0x270c>
   135b0:	mov	r0, r7
   135b4:	bl	10cac <free@plt>
   135b8:	str	r4, [r6]
   135bc:	mov	r3, #1
   135c0:	str	r3, [r6, #4]
   135c4:	pop	{r4, r5, r6, r7, r8, pc}
   135c8:	andeq	r6, r2, r8, ror #1
   135cc:	andeq	r6, r2, r0, asr r1
   135d0:	strdeq	r6, [r2], -r0
   135d4:	ldr	r3, [pc, #4]	; 135e0 <close@plt+0x2730>
   135d8:	mvn	r2, #0
   135dc:	b	13154 <close@plt+0x22a4>
   135e0:	andeq	r6, r2, r0, asr r2
   135e4:	ldr	r3, [pc]	; 135ec <close@plt+0x273c>
   135e8:	b	13154 <close@plt+0x22a4>
   135ec:	andeq	r6, r2, r0, asr r2
   135f0:	mov	r1, r0
   135f4:	ldr	r3, [pc, #8]	; 13604 <close@plt+0x2754>
   135f8:	mvn	r2, #0
   135fc:	mov	r0, #0
   13600:	b	13154 <close@plt+0x22a4>
   13604:	andeq	r6, r2, r0, asr r2
   13608:	mov	r2, r1
   1360c:	ldr	r3, [pc, #8]	; 1361c <close@plt+0x276c>
   13610:	mov	r1, r0
   13614:	mov	r0, #0
   13618:	b	13154 <close@plt+0x22a4>
   1361c:	andeq	r6, r2, r0, asr r2
   13620:	push	{r4, r5, r6, lr}
   13624:	sub	sp, sp, #56	; 0x38
   13628:	ldr	r4, [pc, #68]	; 13674 <close@plt+0x27c4>
   1362c:	mov	r6, r2
   13630:	mov	r5, r0
   13634:	ldr	r3, [r4]
   13638:	add	r0, sp, #4
   1363c:	str	r3, [sp, #52]	; 0x34
   13640:	bl	117cc <close@plt+0x91c>
   13644:	add	r3, sp, #4
   13648:	mvn	r2, #0
   1364c:	mov	r1, r6
   13650:	mov	r0, r5
   13654:	bl	13154 <close@plt+0x22a4>
   13658:	ldr	r2, [sp, #52]	; 0x34
   1365c:	ldr	r3, [r4]
   13660:	cmp	r2, r3
   13664:	bne	13670 <close@plt+0x27c0>
   13668:	add	sp, sp, #56	; 0x38
   1366c:	pop	{r4, r5, r6, pc}
   13670:	bl	10d00 <__stack_chk_fail@plt>
   13674:	andeq	r5, r2, r8, lsl #30
   13678:	push	{r4, r5, r6, r7, lr}
   1367c:	sub	sp, sp, #60	; 0x3c
   13680:	ldr	r4, [pc, #72]	; 136d0 <close@plt+0x2820>
   13684:	mov	r6, r2
   13688:	mov	r7, r3
   1368c:	ldr	ip, [r4]
   13690:	mov	r5, r0
   13694:	add	r0, sp, #4
   13698:	str	ip, [sp, #52]	; 0x34
   1369c:	bl	117cc <close@plt+0x91c>
   136a0:	add	r3, sp, #4
   136a4:	mov	r2, r7
   136a8:	mov	r1, r6
   136ac:	mov	r0, r5
   136b0:	bl	13154 <close@plt+0x22a4>
   136b4:	ldr	r2, [sp, #52]	; 0x34
   136b8:	ldr	r3, [r4]
   136bc:	cmp	r2, r3
   136c0:	bne	136cc <close@plt+0x281c>
   136c4:	add	sp, sp, #60	; 0x3c
   136c8:	pop	{r4, r5, r6, r7, pc}
   136cc:	bl	10d00 <__stack_chk_fail@plt>
   136d0:	andeq	r5, r2, r8, lsl #30
   136d4:	mov	r2, r1
   136d8:	mov	r1, r0
   136dc:	mov	r0, #0
   136e0:	b	13620 <close@plt+0x2770>
   136e4:	mov	r3, r2
   136e8:	mov	r2, r1
   136ec:	mov	r1, r0
   136f0:	mov	r0, #0
   136f4:	b	13678 <close@plt+0x27c8>
   136f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   136fc:	mov	r4, r2
   13700:	ldr	lr, [pc, #128]	; 13788 <close@plt+0x28d8>
   13704:	mov	r8, r0
   13708:	mov	r9, r1
   1370c:	ldm	lr!, {r0, r1, r2, r3}
   13710:	sub	sp, sp, #60	; 0x3c
   13714:	add	ip, sp, #4
   13718:	lsr	r6, r4, #5
   1371c:	stmia	ip!, {r0, r1, r2, r3}
   13720:	add	r7, sp, #12
   13724:	ldm	lr!, {r0, r1, r2, r3}
   13728:	and	r4, r4, #31
   1372c:	ldr	r5, [pc, #88]	; 1378c <close@plt+0x28dc>
   13730:	stmia	ip!, {r0, r1, r2, r3}
   13734:	ldm	lr, {r0, r1, r2, r3}
   13738:	stm	ip, {r0, r1, r2, r3}
   1373c:	mov	r2, r9
   13740:	ldr	r3, [r7, r6, lsl #2]
   13744:	ldr	ip, [r5]
   13748:	mov	r1, r8
   1374c:	mvn	r0, r3, lsr r4
   13750:	and	r0, r0, #1
   13754:	str	ip, [sp, #52]	; 0x34
   13758:	eor	r4, r3, r0, lsl r4
   1375c:	add	r3, sp, #4
   13760:	mov	r0, #0
   13764:	str	r4, [r7, r6, lsl #2]
   13768:	bl	13154 <close@plt+0x22a4>
   1376c:	ldr	r2, [sp, #52]	; 0x34
   13770:	ldr	r3, [r5]
   13774:	cmp	r2, r3
   13778:	bne	13784 <close@plt+0x28d4>
   1377c:	add	sp, sp, #60	; 0x3c
   13780:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13784:	bl	10d00 <__stack_chk_fail@plt>
   13788:	andeq	r6, r2, r0, asr r2
   1378c:	andeq	r5, r2, r8, lsl #30
   13790:	mov	r2, r1
   13794:	mvn	r1, #0
   13798:	b	136f8 <close@plt+0x2848>
   1379c:	mov	r2, #58	; 0x3a
   137a0:	mvn	r1, #0
   137a4:	b	136f8 <close@plt+0x2848>
   137a8:	mov	r2, #58	; 0x3a
   137ac:	b	136f8 <close@plt+0x2848>
   137b0:	push	{r4, r5, r6, r7, r8, lr}
   137b4:	sub	sp, sp, #104	; 0x68
   137b8:	ldr	r5, [pc, #120]	; 13838 <close@plt+0x2988>
   137bc:	mov	r6, r0
   137c0:	mov	r0, sp
   137c4:	ldr	r3, [r5]
   137c8:	mov	r7, r2
   137cc:	str	r3, [sp, #100]	; 0x64
   137d0:	bl	117cc <close@plt+0x91c>
   137d4:	mov	ip, sp
   137d8:	add	lr, sp, #52	; 0x34
   137dc:	ldm	ip!, {r0, r1, r2, r3}
   137e0:	stmia	lr!, {r0, r1, r2, r3}
   137e4:	ldm	ip!, {r0, r1, r2, r3}
   137e8:	ldr	r8, [sp, #64]	; 0x40
   137ec:	stmia	lr!, {r0, r1, r2, r3}
   137f0:	mvn	r4, r8
   137f4:	ldm	ip, {r0, r1, r2, r3}
   137f8:	and	ip, r4, #67108864	; 0x4000000
   137fc:	eor	ip, ip, r8
   13800:	str	ip, [sp, #64]	; 0x40
   13804:	stm	lr, {r0, r1, r2, r3}
   13808:	add	r3, sp, #52	; 0x34
   1380c:	mvn	r2, #0
   13810:	mov	r1, r7
   13814:	mov	r0, r6
   13818:	bl	13154 <close@plt+0x22a4>
   1381c:	ldr	r2, [sp, #100]	; 0x64
   13820:	ldr	r3, [r5]
   13824:	cmp	r2, r3
   13828:	bne	13834 <close@plt+0x2984>
   1382c:	add	sp, sp, #104	; 0x68
   13830:	pop	{r4, r5, r6, r7, r8, pc}
   13834:	bl	10d00 <__stack_chk_fail@plt>
   13838:	andeq	r5, r2, r8, lsl #30
   1383c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13840:	mov	r6, r1
   13844:	ldr	lr, [pc, #132]	; 138d0 <close@plt+0x2a20>
   13848:	mov	r5, r2
   1384c:	mov	r8, r0
   13850:	mov	r9, r3
   13854:	ldm	lr!, {r0, r1, r2, r3}
   13858:	sub	sp, sp, #60	; 0x3c
   1385c:	add	ip, sp, #4
   13860:	ldr	r4, [pc, #108]	; 138d4 <close@plt+0x2a24>
   13864:	stmia	ip!, {r0, r1, r2, r3}
   13868:	mov	r7, #10
   1386c:	ldm	lr!, {r0, r1, r2, r3}
   13870:	cmp	r5, #0
   13874:	cmpne	r6, #0
   13878:	str	r7, [sp, #4]
   1387c:	stmia	ip!, {r0, r1, r2, r3}
   13880:	ldm	lr, {r0, r1, r2, r3}
   13884:	ldr	lr, [r4]
   13888:	stm	ip, {r0, r1, r2, r3}
   1388c:	str	lr, [sp, #52]	; 0x34
   13890:	beq	138cc <close@plt+0x2a1c>
   13894:	add	r3, sp, #4
   13898:	ldr	r2, [sp, #88]	; 0x58
   1389c:	mov	r1, r9
   138a0:	mov	r0, r8
   138a4:	str	r6, [sp, #44]	; 0x2c
   138a8:	str	r5, [sp, #48]	; 0x30
   138ac:	bl	13154 <close@plt+0x22a4>
   138b0:	ldr	r2, [sp, #52]	; 0x34
   138b4:	ldr	r3, [r4]
   138b8:	cmp	r2, r3
   138bc:	bne	138c8 <close@plt+0x2a18>
   138c0:	add	sp, sp, #60	; 0x3c
   138c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   138c8:	bl	10d00 <__stack_chk_fail@plt>
   138cc:	bl	10ea4 <abort@plt>
   138d0:	andeq	r6, r2, r0, asr r2
   138d4:	andeq	r5, r2, r8, lsl #30
   138d8:	push	{lr}		; (str lr, [sp, #-4]!)
   138dc:	sub	sp, sp, #12
   138e0:	mvn	ip, #0
   138e4:	str	ip, [sp]
   138e8:	bl	1383c <close@plt+0x298c>
   138ec:	add	sp, sp, #12
   138f0:	pop	{pc}		; (ldr pc, [sp], #4)
   138f4:	push	{lr}		; (str lr, [sp, #-4]!)
   138f8:	sub	sp, sp, #12
   138fc:	mvn	ip, #0
   13900:	mov	r3, r2
   13904:	str	ip, [sp]
   13908:	mov	r2, r1
   1390c:	mov	r1, r0
   13910:	mov	r0, #0
   13914:	bl	1383c <close@plt+0x298c>
   13918:	add	sp, sp, #12
   1391c:	pop	{pc}		; (ldr pc, [sp], #4)
   13920:	push	{lr}		; (str lr, [sp, #-4]!)
   13924:	sub	sp, sp, #12
   13928:	str	r3, [sp]
   1392c:	mov	r3, r2
   13930:	mov	r2, r1
   13934:	mov	r1, r0
   13938:	mov	r0, #0
   1393c:	bl	1383c <close@plt+0x298c>
   13940:	add	sp, sp, #12
   13944:	pop	{pc}		; (ldr pc, [sp], #4)
   13948:	ldr	r3, [pc]	; 13950 <close@plt+0x2aa0>
   1394c:	b	13154 <close@plt+0x22a4>
   13950:	strdeq	r6, [r2], -r8
   13954:	mov	r2, r1
   13958:	ldr	r3, [pc, #8]	; 13968 <close@plt+0x2ab8>
   1395c:	mov	r1, r0
   13960:	mov	r0, #0
   13964:	b	13154 <close@plt+0x22a4>
   13968:	strdeq	r6, [r2], -r8
   1396c:	ldr	r3, [pc, #4]	; 13978 <close@plt+0x2ac8>
   13970:	mvn	r2, #0
   13974:	b	13154 <close@plt+0x22a4>
   13978:	strdeq	r6, [r2], -r8
   1397c:	mov	r1, r0
   13980:	ldr	r3, [pc, #8]	; 13990 <close@plt+0x2ae0>
   13984:	mvn	r2, #0
   13988:	mov	r0, #0
   1398c:	b	13154 <close@plt+0x22a4>
   13990:	strdeq	r6, [r2], -r8
   13994:	push	{r4, r5, r6, lr}
   13998:	sub	sp, sp, #32
   1399c:	cmp	r1, #0
   139a0:	mov	r5, r0
   139a4:	ldr	r4, [sp, #48]	; 0x30
   139a8:	ldr	r6, [sp, #52]	; 0x34
   139ac:	beq	13a3c <close@plt+0x2b8c>
   139b0:	strd	r2, [sp]
   139b4:	mov	r3, r1
   139b8:	ldr	r2, [pc, #828]	; 13cfc <close@plt+0x2e4c>
   139bc:	mov	r1, #1
   139c0:	bl	10e20 <__fprintf_chk@plt>
   139c4:	mov	r2, #5
   139c8:	ldr	r1, [pc, #816]	; 13d00 <close@plt+0x2e50>
   139cc:	mov	r0, #0
   139d0:	bl	10ce8 <dcgettext@plt>
   139d4:	ldr	r3, [pc, #808]	; 13d04 <close@plt+0x2e54>
   139d8:	ldr	r2, [pc, #808]	; 13d08 <close@plt+0x2e58>
   139dc:	str	r3, [sp]
   139e0:	mov	r1, #1
   139e4:	mov	r3, r0
   139e8:	mov	r0, r5
   139ec:	bl	10e20 <__fprintf_chk@plt>
   139f0:	ldr	r1, [pc, #788]	; 13d0c <close@plt+0x2e5c>
   139f4:	mov	r2, #5
   139f8:	mov	r0, #0
   139fc:	bl	10ce8 <dcgettext@plt>
   13a00:	mov	r1, r5
   13a04:	bl	10c70 <fputs_unlocked@plt>
   13a08:	cmp	r6, #9
   13a0c:	ldrls	pc, [pc, r6, lsl #2]
   13a10:	b	13cec <close@plt+0x2e3c>
   13a14:	strdeq	r3, [r1], -r8
   13a18:	andeq	r3, r1, r0, asr #21
   13a1c:	andeq	r3, r1, ip, ror #21
   13a20:	andeq	r3, r1, r0, lsr #22
   13a24:	andeq	r3, r1, ip, asr fp
   13a28:	muleq	r1, ip, fp
   13a2c:	andeq	r3, r1, r4, ror #23
   13a30:	andeq	r3, r1, r4, lsr ip
   13a34:	andeq	r3, r1, ip, lsl #25
   13a38:	andeq	r3, r1, r4, asr sl
   13a3c:	str	r3, [sp]
   13a40:	mov	r1, #1
   13a44:	mov	r3, r2
   13a48:	ldr	r2, [pc, #704]	; 13d10 <close@plt+0x2e60>
   13a4c:	bl	10e20 <__fprintf_chk@plt>
   13a50:	b	139c4 <close@plt+0x2b14>
   13a54:	ldr	r1, [pc, #696]	; 13d14 <close@plt+0x2e64>
   13a58:	mov	r2, #5
   13a5c:	mov	r0, #0
   13a60:	bl	10ce8 <dcgettext@plt>
   13a64:	ldr	r2, [r4, #32]
   13a68:	ldr	r3, [r4, #28]
   13a6c:	ldr	r1, [r4, #24]
   13a70:	str	r2, [sp, #28]
   13a74:	ldr	r2, [r4, #20]
   13a78:	str	r3, [sp, #24]
   13a7c:	ldr	r3, [r4, #16]
   13a80:	str	r1, [sp, #20]
   13a84:	ldr	r1, [r4, #12]
   13a88:	str	r2, [sp, #16]
   13a8c:	ldr	r2, [r4, #8]
   13a90:	str	r3, [sp, #12]
   13a94:	ldr	r3, [r4, #4]
   13a98:	str	r1, [sp, #8]
   13a9c:	str	r2, [sp, #4]
   13aa0:	str	r3, [sp]
   13aa4:	mov	r1, #1
   13aa8:	ldr	r3, [r4]
   13aac:	mov	r2, r0
   13ab0:	mov	r0, r5
   13ab4:	bl	10e20 <__fprintf_chk@plt>
   13ab8:	add	sp, sp, #32
   13abc:	pop	{r4, r5, r6, pc}
   13ac0:	mov	r2, #5
   13ac4:	ldr	r1, [pc, #588]	; 13d18 <close@plt+0x2e68>
   13ac8:	mov	r0, #0
   13acc:	bl	10ce8 <dcgettext@plt>
   13ad0:	ldr	r3, [r4]
   13ad4:	mov	r1, #1
   13ad8:	mov	r2, r0
   13adc:	mov	r0, r5
   13ae0:	add	sp, sp, #32
   13ae4:	pop	{r4, r5, r6, lr}
   13ae8:	b	10e20 <__fprintf_chk@plt>
   13aec:	mov	r2, #5
   13af0:	ldr	r1, [pc, #548]	; 13d1c <close@plt+0x2e6c>
   13af4:	mov	r0, #0
   13af8:	bl	10ce8 <dcgettext@plt>
   13afc:	ldr	r2, [r4, #4]
   13b00:	ldr	r3, [r4]
   13b04:	mov	r1, #1
   13b08:	str	r2, [sp, #48]	; 0x30
   13b0c:	mov	r2, r0
   13b10:	mov	r0, r5
   13b14:	add	sp, sp, #32
   13b18:	pop	{r4, r5, r6, lr}
   13b1c:	b	10e20 <__fprintf_chk@plt>
   13b20:	mov	r2, #5
   13b24:	ldr	r1, [pc, #500]	; 13d20 <close@plt+0x2e70>
   13b28:	mov	r0, #0
   13b2c:	bl	10ce8 <dcgettext@plt>
   13b30:	ldr	r2, [r4, #8]
   13b34:	ldr	r3, [r4, #4]
   13b38:	mov	r1, #1
   13b3c:	str	r2, [sp, #52]	; 0x34
   13b40:	str	r3, [sp, #48]	; 0x30
   13b44:	ldr	r3, [r4]
   13b48:	mov	r2, r0
   13b4c:	mov	r0, r5
   13b50:	add	sp, sp, #32
   13b54:	pop	{r4, r5, r6, lr}
   13b58:	b	10e20 <__fprintf_chk@plt>
   13b5c:	mov	r2, #5
   13b60:	ldr	r1, [pc, #444]	; 13d24 <close@plt+0x2e74>
   13b64:	mov	r0, #0
   13b68:	bl	10ce8 <dcgettext@plt>
   13b6c:	ldr	r1, [r4, #12]
   13b70:	ldr	r2, [r4, #8]
   13b74:	ldr	r3, [r4, #4]
   13b78:	str	r1, [sp, #8]
   13b7c:	str	r2, [sp, #4]
   13b80:	str	r3, [sp]
   13b84:	mov	r1, #1
   13b88:	ldr	r3, [r4]
   13b8c:	mov	r2, r0
   13b90:	mov	r0, r5
   13b94:	bl	10e20 <__fprintf_chk@plt>
   13b98:	b	13ab8 <close@plt+0x2c08>
   13b9c:	mov	r2, #5
   13ba0:	ldr	r1, [pc, #384]	; 13d28 <close@plt+0x2e78>
   13ba4:	mov	r0, #0
   13ba8:	bl	10ce8 <dcgettext@plt>
   13bac:	ldr	r3, [r4, #16]
   13bb0:	ldr	r1, [r4, #12]
   13bb4:	ldr	r2, [r4, #8]
   13bb8:	str	r3, [sp, #12]
   13bbc:	ldr	r3, [r4, #4]
   13bc0:	str	r1, [sp, #8]
   13bc4:	str	r2, [sp, #4]
   13bc8:	str	r3, [sp]
   13bcc:	mov	r1, #1
   13bd0:	ldr	r3, [r4]
   13bd4:	mov	r2, r0
   13bd8:	mov	r0, r5
   13bdc:	bl	10e20 <__fprintf_chk@plt>
   13be0:	b	13ab8 <close@plt+0x2c08>
   13be4:	mov	r2, #5
   13be8:	ldr	r1, [pc, #316]	; 13d2c <close@plt+0x2e7c>
   13bec:	mov	r0, #0
   13bf0:	bl	10ce8 <dcgettext@plt>
   13bf4:	ldr	r2, [r4, #20]
   13bf8:	ldr	r3, [r4, #16]
   13bfc:	ldr	r1, [r4, #12]
   13c00:	str	r2, [sp, #16]
   13c04:	ldr	r2, [r4, #8]
   13c08:	str	r3, [sp, #12]
   13c0c:	ldr	r3, [r4, #4]
   13c10:	str	r1, [sp, #8]
   13c14:	str	r2, [sp, #4]
   13c18:	str	r3, [sp]
   13c1c:	mov	r1, #1
   13c20:	ldr	r3, [r4]
   13c24:	mov	r2, r0
   13c28:	mov	r0, r5
   13c2c:	bl	10e20 <__fprintf_chk@plt>
   13c30:	b	13ab8 <close@plt+0x2c08>
   13c34:	mov	r2, #5
   13c38:	ldr	r1, [pc, #240]	; 13d30 <close@plt+0x2e80>
   13c3c:	mov	r0, #0
   13c40:	bl	10ce8 <dcgettext@plt>
   13c44:	ldr	r1, [r4, #24]
   13c48:	ldr	r2, [r4, #20]
   13c4c:	ldr	r3, [r4, #16]
   13c50:	str	r1, [sp, #20]
   13c54:	ldr	r1, [r4, #12]
   13c58:	str	r2, [sp, #16]
   13c5c:	ldr	r2, [r4, #8]
   13c60:	str	r3, [sp, #12]
   13c64:	ldr	r3, [r4, #4]
   13c68:	str	r1, [sp, #8]
   13c6c:	str	r2, [sp, #4]
   13c70:	str	r3, [sp]
   13c74:	mov	r1, #1
   13c78:	ldr	r3, [r4]
   13c7c:	mov	r2, r0
   13c80:	mov	r0, r5
   13c84:	bl	10e20 <__fprintf_chk@plt>
   13c88:	b	13ab8 <close@plt+0x2c08>
   13c8c:	mov	r2, #5
   13c90:	ldr	r1, [pc, #156]	; 13d34 <close@plt+0x2e84>
   13c94:	mov	r0, #0
   13c98:	bl	10ce8 <dcgettext@plt>
   13c9c:	ldr	r3, [r4, #28]
   13ca0:	ldr	r1, [r4, #24]
   13ca4:	ldr	r2, [r4, #20]
   13ca8:	str	r3, [sp, #24]
   13cac:	ldr	r3, [r4, #16]
   13cb0:	str	r1, [sp, #20]
   13cb4:	ldr	r1, [r4, #12]
   13cb8:	str	r2, [sp, #16]
   13cbc:	ldr	r2, [r4, #8]
   13cc0:	str	r3, [sp, #12]
   13cc4:	ldr	r3, [r4, #4]
   13cc8:	str	r1, [sp, #8]
   13ccc:	str	r2, [sp, #4]
   13cd0:	str	r3, [sp]
   13cd4:	mov	r1, #1
   13cd8:	ldr	r3, [r4]
   13cdc:	mov	r2, r0
   13ce0:	mov	r0, r5
   13ce4:	bl	10e20 <__fprintf_chk@plt>
   13ce8:	b	13ab8 <close@plt+0x2c08>
   13cec:	mov	r2, #5
   13cf0:	ldr	r1, [pc, #64]	; 13d38 <close@plt+0x2e88>
   13cf4:	b	13a5c <close@plt+0x2bac>
   13cf8:	bl	10ea4 <abort@plt>
   13cfc:	andeq	r4, r1, r8, ror lr
   13d00:	andeq	r4, r1, ip, lsl #29
   13d04:	andeq	r0, r0, r2, ror #15
   13d08:	andeq	r5, r1, r0, ror #2
   13d0c:	muleq	r1, r0, lr
   13d10:	andeq	r4, r1, r4, lsl #29
   13d14:	andeq	r5, r1, r8, rrx
   13d18:	andeq	r4, r1, ip, asr pc
   13d1c:	andeq	r4, r1, ip, ror #30
   13d20:	andeq	r4, r1, r4, lsl #31
   13d24:	andeq	r4, r1, r0, lsr #31
   13d28:	andeq	r4, r1, r0, asr #31
   13d2c:	andeq	r4, r1, r4, ror #31
   13d30:	andeq	r5, r1, ip
   13d34:	andeq	r5, r1, r8, lsr r0
   13d38:	muleq	r1, ip, r0
   13d3c:	push	{r4, r5, lr}
   13d40:	sub	sp, sp, #12
   13d44:	ldr	r5, [sp, #24]
   13d48:	ldr	ip, [r5]
   13d4c:	cmp	ip, #0
   13d50:	beq	13d6c <close@plt+0x2ebc>
   13d54:	mov	lr, r5
   13d58:	mov	ip, #0
   13d5c:	ldr	r4, [lr, #4]!
   13d60:	add	ip, ip, #1
   13d64:	cmp	r4, #0
   13d68:	bne	13d5c <close@plt+0x2eac>
   13d6c:	stm	sp, {r5, ip}
   13d70:	bl	13994 <close@plt+0x2ae4>
   13d74:	add	sp, sp, #12
   13d78:	pop	{r4, r5, pc}
   13d7c:	push	{r4, r5, r6, lr}
   13d80:	sub	sp, sp, #56	; 0x38
   13d84:	ldr	r6, [pc, #88]	; 13de4 <close@plt+0x2f34>
   13d88:	ldr	r5, [sp, #72]	; 0x48
   13d8c:	add	r4, sp, #8
   13d90:	ldr	ip, [r6]
   13d94:	str	ip, [sp, #52]	; 0x34
   13d98:	mov	ip, #0
   13d9c:	ldr	lr, [r5], #4
   13da0:	cmp	lr, #0
   13da4:	str	lr, [r4, #4]!
   13da8:	beq	13db8 <close@plt+0x2f08>
   13dac:	add	ip, ip, #1
   13db0:	cmp	ip, #10
   13db4:	bne	13d9c <close@plt+0x2eec>
   13db8:	add	lr, sp, #12
   13dbc:	str	ip, [sp, #4]
   13dc0:	str	lr, [sp]
   13dc4:	bl	13994 <close@plt+0x2ae4>
   13dc8:	ldr	r2, [sp, #52]	; 0x34
   13dcc:	ldr	r3, [r6]
   13dd0:	cmp	r2, r3
   13dd4:	bne	13de0 <close@plt+0x2f30>
   13dd8:	add	sp, sp, #56	; 0x38
   13ddc:	pop	{r4, r5, r6, pc}
   13de0:	bl	10d00 <__stack_chk_fail@plt>
   13de4:	andeq	r5, r2, r8, lsl #30
   13de8:	push	{r3}		; (str r3, [sp, #-4]!)
   13dec:	mov	ip, #0
   13df0:	push	{r4, r5, r6, lr}
   13df4:	sub	sp, sp, #60	; 0x3c
   13df8:	ldr	r6, [pc, #100]	; 13e64 <close@plt+0x2fb4>
   13dfc:	add	r5, sp, #8
   13e00:	add	r4, sp, #80	; 0x50
   13e04:	ldr	r3, [r6]
   13e08:	str	r4, [sp, #8]
   13e0c:	str	r3, [sp, #52]	; 0x34
   13e10:	ldr	r3, [sp, #76]	; 0x4c
   13e14:	ldr	lr, [r4], #4
   13e18:	cmp	lr, #0
   13e1c:	str	lr, [r5, #4]!
   13e20:	beq	13e30 <close@plt+0x2f80>
   13e24:	add	ip, ip, #1
   13e28:	cmp	ip, #10
   13e2c:	bne	13e14 <close@plt+0x2f64>
   13e30:	add	lr, sp, #12
   13e34:	str	ip, [sp, #4]
   13e38:	str	lr, [sp]
   13e3c:	bl	13994 <close@plt+0x2ae4>
   13e40:	ldr	r2, [sp, #52]	; 0x34
   13e44:	ldr	r3, [r6]
   13e48:	cmp	r2, r3
   13e4c:	bne	13e60 <close@plt+0x2fb0>
   13e50:	add	sp, sp, #60	; 0x3c
   13e54:	pop	{r4, r5, r6, lr}
   13e58:	add	sp, sp, #4
   13e5c:	bx	lr
   13e60:	bl	10d00 <__stack_chk_fail@plt>
   13e64:	andeq	r5, r2, r8, lsl #30
   13e68:	push	{r4, lr}
   13e6c:	mov	r2, #5
   13e70:	ldr	r1, [pc, #88]	; 13ed0 <close@plt+0x3020>
   13e74:	mov	r0, #0
   13e78:	bl	10ce8 <dcgettext@plt>
   13e7c:	ldr	r2, [pc, #80]	; 13ed4 <close@plt+0x3024>
   13e80:	mov	r1, r0
   13e84:	mov	r0, #1
   13e88:	bl	10e08 <__printf_chk@plt>
   13e8c:	mov	r2, #5
   13e90:	ldr	r1, [pc, #64]	; 13ed8 <close@plt+0x3028>
   13e94:	mov	r0, #0
   13e98:	bl	10ce8 <dcgettext@plt>
   13e9c:	ldr	r3, [pc, #56]	; 13edc <close@plt+0x302c>
   13ea0:	ldr	r2, [pc, #56]	; 13ee0 <close@plt+0x3030>
   13ea4:	mov	r1, r0
   13ea8:	mov	r0, #1
   13eac:	bl	10e08 <__printf_chk@plt>
   13eb0:	ldr	r1, [pc, #44]	; 13ee4 <close@plt+0x3034>
   13eb4:	mov	r2, #5
   13eb8:	mov	r0, #0
   13ebc:	bl	10ce8 <dcgettext@plt>
   13ec0:	ldr	r3, [pc, #32]	; 13ee8 <close@plt+0x3038>
   13ec4:	pop	{r4, lr}
   13ec8:	ldr	r1, [r3]
   13ecc:	b	10c70 <fputs_unlocked@plt>
   13ed0:	ldrdeq	r5, [r1], -r8
   13ed4:	strdeq	r5, [r1], -r0
   13ed8:	andeq	r5, r1, r8, lsl #2
   13edc:	andeq	r4, r1, r8, ror #21
   13ee0:	andeq	r4, r1, r0, lsl fp
   13ee4:	andeq	r5, r1, ip, lsl r1
   13ee8:	andeq	r6, r2, ip, lsr r1
   13eec:	push	{r4, lr}
   13ef0:	mov	r4, r0
   13ef4:	bl	10d84 <malloc@plt>
   13ef8:	adds	r4, r4, #0
   13efc:	movne	r4, #1
   13f00:	cmp	r0, #0
   13f04:	movne	r4, #0
   13f08:	cmp	r4, #0
   13f0c:	popeq	{r4, pc}
   13f10:	bl	14134 <close@plt+0x3284>
   13f14:	push	{r4, r5, r6, lr}
   13f18:	umull	r4, r5, r0, r1
   13f1c:	adds	r3, r5, #0
   13f20:	movne	r3, #1
   13f24:	cmp	r4, #0
   13f28:	blt	13f40 <close@plt+0x3090>
   13f2c:	cmp	r3, #0
   13f30:	bne	13f40 <close@plt+0x3090>
   13f34:	mul	r0, r1, r0
   13f38:	pop	{r4, r5, r6, lr}
   13f3c:	b	13eec <close@plt+0x303c>
   13f40:	bl	14134 <close@plt+0x3284>
   13f44:	b	13eec <close@plt+0x303c>
   13f48:	adds	r3, r0, #0
   13f4c:	movne	r3, #1
   13f50:	cmp	r1, #0
   13f54:	movne	r3, #0
   13f58:	cmp	r3, #0
   13f5c:	push	{r4, lr}
   13f60:	bne	13f88 <close@plt+0x30d8>
   13f64:	mov	r4, r1
   13f68:	bl	10d0c <realloc@plt>
   13f6c:	adds	r4, r4, #0
   13f70:	movne	r4, #1
   13f74:	cmp	r0, #0
   13f78:	movne	r4, #0
   13f7c:	cmp	r4, #0
   13f80:	popeq	{r4, pc}
   13f84:	bl	14134 <close@plt+0x3284>
   13f88:	bl	10cac <free@plt>
   13f8c:	mov	r0, #0
   13f90:	pop	{r4, pc}
   13f94:	push	{r4, r5, r6, lr}
   13f98:	umull	r4, r5, r1, r2
   13f9c:	adds	r3, r5, #0
   13fa0:	movne	r3, #1
   13fa4:	cmp	r4, #0
   13fa8:	blt	13fc0 <close@plt+0x3110>
   13fac:	cmp	r3, #0
   13fb0:	bne	13fc0 <close@plt+0x3110>
   13fb4:	mul	r1, r2, r1
   13fb8:	pop	{r4, r5, r6, lr}
   13fbc:	b	13f48 <close@plt+0x3098>
   13fc0:	bl	14134 <close@plt+0x3284>
   13fc4:	push	{r4, r5, r6, r7, r8, lr}
   13fc8:	subs	r7, r0, #0
   13fcc:	mov	r6, r1
   13fd0:	mov	r5, r2
   13fd4:	ldr	r4, [r1]
   13fd8:	beq	1400c <close@plt+0x315c>
   13fdc:	mov	r1, r2
   13fe0:	ldr	r0, [pc, #104]	; 14050 <close@plt+0x31a0>
   13fe4:	bl	145d4 <close@plt+0x3724>
   13fe8:	cmp	r0, r4
   13fec:	bls	14030 <close@plt+0x3180>
   13ff0:	add	r3, r4, #1
   13ff4:	add	r4, r3, r4, lsr #1
   13ff8:	str	r4, [r6]
   13ffc:	mul	r1, r5, r4
   14000:	mov	r0, r7
   14004:	pop	{r4, r5, r6, r7, r8, lr}
   14008:	b	13f48 <close@plt+0x3098>
   1400c:	cmp	r4, #0
   14010:	beq	14034 <close@plt+0x3184>
   14014:	umull	r0, r1, r4, r5
   14018:	adds	r3, r1, #0
   1401c:	movne	r3, #1
   14020:	cmp	r0, #0
   14024:	blt	14030 <close@plt+0x3180>
   14028:	cmp	r3, #0
   1402c:	beq	13ff8 <close@plt+0x3148>
   14030:	bl	14134 <close@plt+0x3284>
   14034:	mov	r1, r2
   14038:	mov	r0, #64	; 0x40
   1403c:	bl	145d4 <close@plt+0x3724>
   14040:	cmp	r5, #64	; 0x40
   14044:	movls	r4, r0
   14048:	addhi	r4, r0, #1
   1404c:	b	14014 <close@plt+0x3164>
   14050:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14054:	cmp	r0, #0
   14058:	ldr	r3, [r1]
   1405c:	beq	14080 <close@plt+0x31d0>
   14060:	ldr	r2, [pc, #60]	; 140a4 <close@plt+0x31f4>
   14064:	cmp	r3, r2
   14068:	bhi	1409c <close@plt+0x31ec>
   1406c:	add	r2, r3, #1
   14070:	add	r3, r2, r3, lsr #1
   14074:	str	r3, [r1]
   14078:	mov	r1, r3
   1407c:	b	13f48 <close@plt+0x3098>
   14080:	cmp	r3, #0
   14084:	bne	14098 <close@plt+0x31e8>
   14088:	mov	r3, #64	; 0x40
   1408c:	str	r3, [r1]
   14090:	mov	r1, r3
   14094:	b	13f48 <close@plt+0x3098>
   14098:	bge	14074 <close@plt+0x31c4>
   1409c:	push	{r4, lr}
   140a0:	bl	14134 <close@plt+0x3284>
   140a4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   140a8:	push	{r4, lr}
   140ac:	mov	r4, r0
   140b0:	bl	13eec <close@plt+0x303c>
   140b4:	mov	r2, r4
   140b8:	mov	r1, #0
   140bc:	pop	{r4, lr}
   140c0:	b	10dfc <memset@plt>
   140c4:	push	{r4, r5, r6, lr}
   140c8:	umull	r4, r5, r0, r1
   140cc:	adds	r3, r5, #0
   140d0:	movne	r3, #1
   140d4:	cmp	r4, #0
   140d8:	blt	140f0 <close@plt+0x3240>
   140dc:	cmp	r3, #0
   140e0:	bne	140f0 <close@plt+0x3240>
   140e4:	bl	10c64 <calloc@plt>
   140e8:	cmp	r0, #0
   140ec:	popne	{r4, r5, r6, pc}
   140f0:	bl	14134 <close@plt+0x3284>
   140f4:	push	{r4, r5, r6, lr}
   140f8:	mov	r4, r1
   140fc:	mov	r5, r0
   14100:	mov	r0, r1
   14104:	bl	13eec <close@plt+0x303c>
   14108:	mov	r2, r4
   1410c:	mov	r1, r5
   14110:	pop	{r4, r5, r6, lr}
   14114:	b	10cc4 <memcpy@plt>
   14118:	push	{r4, lr}
   1411c:	mov	r4, r0
   14120:	bl	10dd8 <strlen@plt>
   14124:	add	r1, r0, #1
   14128:	mov	r0, r4
   1412c:	pop	{r4, lr}
   14130:	b	140f4 <close@plt+0x3244>
   14134:	ldr	r3, [pc, #44]	; 14168 <close@plt+0x32b8>
   14138:	push	{r4, lr}
   1413c:	mov	r2, #5
   14140:	ldr	r1, [pc, #36]	; 1416c <close@plt+0x32bc>
   14144:	mov	r0, #0
   14148:	ldr	r4, [r3]
   1414c:	bl	10ce8 <dcgettext@plt>
   14150:	ldr	r2, [pc, #24]	; 14170 <close@plt+0x32c0>
   14154:	mov	r1, #0
   14158:	mov	r3, r0
   1415c:	mov	r0, r4
   14160:	bl	10d6c <error@plt>
   14164:	bl	10ea4 <abort@plt>
   14168:	andeq	r6, r2, r4, ror #1
   1416c:	muleq	r1, r0, r1
   14170:	andeq	r4, r1, r8, asr sp
   14174:	push	{r1, r2, r3}
   14178:	push	{r4, r5, r6, r7, r8, lr}
   1417c:	sub	sp, sp, #12
   14180:	ldr	r4, [pc, #300]	; 142b4 <close@plt+0x3404>
   14184:	ldr	r3, [pc, #300]	; 142b8 <close@plt+0x3408>
   14188:	ldr	r1, [sp, #36]	; 0x24
   1418c:	ldr	r2, [r4]
   14190:	cmp	r1, r3
   14194:	add	r3, sp, #40	; 0x28
   14198:	str	r2, [sp, #4]
   1419c:	str	r3, [sp]
   141a0:	bne	1426c <close@plt+0x33bc>
   141a4:	ldr	r6, [pc, #272]	; 142bc <close@plt+0x340c>
   141a8:	add	r3, sp, #44	; 0x2c
   141ac:	str	r3, [sp]
   141b0:	ldr	r3, [r6]
   141b4:	ldr	r7, [sp, #40]	; 0x28
   141b8:	cmp	r3, #0
   141bc:	blt	14200 <close@plt+0x3350>
   141c0:	mov	r2, r7
   141c4:	mov	r8, r0
   141c8:	bl	10e44 <fcntl64@plt>
   141cc:	subs	r5, r0, #0
   141d0:	blt	1427c <close@plt+0x33cc>
   141d4:	mov	r3, #1
   141d8:	str	r3, [r6]
   141dc:	ldr	r2, [sp, #4]
   141e0:	ldr	r3, [r4]
   141e4:	mov	r0, r5
   141e8:	cmp	r2, r3
   141ec:	bne	142b0 <close@plt+0x3400>
   141f0:	add	sp, sp, #12
   141f4:	pop	{r4, r5, r6, r7, r8, lr}
   141f8:	add	sp, sp, #12
   141fc:	bx	lr
   14200:	mov	r2, r7
   14204:	mov	r1, #0
   14208:	bl	14174 <close@plt+0x32c4>
   1420c:	subs	r5, r0, #0
   14210:	blt	141dc <close@plt+0x332c>
   14214:	ldr	r3, [r6]
   14218:	cmn	r3, #1
   1421c:	bne	141dc <close@plt+0x332c>
   14220:	mov	r1, #1
   14224:	mov	r0, r5
   14228:	bl	10e44 <fcntl64@plt>
   1422c:	subs	r2, r0, #0
   14230:	blt	1424c <close@plt+0x339c>
   14234:	orr	r2, r2, #1
   14238:	mov	r1, #2
   1423c:	mov	r0, r5
   14240:	bl	10e44 <fcntl64@plt>
   14244:	cmn	r0, #1
   14248:	bne	141dc <close@plt+0x332c>
   1424c:	bl	10de4 <__errno_location@plt>
   14250:	mov	r6, r0
   14254:	mov	r0, r5
   14258:	ldr	r7, [r6]
   1425c:	mvn	r5, #0
   14260:	bl	10eb0 <close@plt>
   14264:	str	r7, [r6]
   14268:	b	141dc <close@plt+0x332c>
   1426c:	ldr	r2, [sp, #40]	; 0x28
   14270:	bl	10e44 <fcntl64@plt>
   14274:	mov	r5, r0
   14278:	b	141dc <close@plt+0x332c>
   1427c:	bl	10de4 <__errno_location@plt>
   14280:	ldr	r3, [r0]
   14284:	cmp	r3, #22
   14288:	bne	141d4 <close@plt+0x3324>
   1428c:	mov	r2, r7
   14290:	mov	r0, r8
   14294:	mov	r1, #0
   14298:	bl	14174 <close@plt+0x32c4>
   1429c:	subs	r5, r0, #0
   142a0:	mvnge	r3, #0
   142a4:	strge	r3, [r6]
   142a8:	bge	14220 <close@plt+0x3370>
   142ac:	b	141dc <close@plt+0x332c>
   142b0:	bl	10d00 <__stack_chk_fail@plt>
   142b4:	andeq	r5, r2, r8, lsl #30
   142b8:	andeq	r0, r0, r6, lsl #8
   142bc:	andeq	r6, r2, r0, lsl #5
   142c0:	push	{r4, r5, r6, r7, r8, lr}
   142c4:	subs	r7, r0, #0
   142c8:	ldr	r5, [pc, #108]	; 1433c <close@plt+0x348c>
   142cc:	sub	sp, sp, #8
   142d0:	mov	r8, r1
   142d4:	ldr	r1, [r5]
   142d8:	moveq	r7, sp
   142dc:	str	r1, [sp, #4]
   142e0:	mov	r0, r7
   142e4:	mov	r1, r8
   142e8:	mov	r6, r2
   142ec:	bl	10d60 <mbrtowc@plt>
   142f0:	cmp	r6, #0
   142f4:	cmnne	r0, #3
   142f8:	mov	r4, r0
   142fc:	bhi	1431c <close@plt+0x346c>
   14300:	ldr	r2, [sp, #4]
   14304:	ldr	r3, [r5]
   14308:	mov	r0, r4
   1430c:	cmp	r2, r3
   14310:	bne	14338 <close@plt+0x3488>
   14314:	add	sp, sp, #8
   14318:	pop	{r4, r5, r6, r7, r8, pc}
   1431c:	mov	r0, #0
   14320:	bl	143b4 <close@plt+0x3504>
   14324:	cmp	r0, #0
   14328:	moveq	r4, #1
   1432c:	ldrbeq	r3, [r8]
   14330:	streq	r3, [r7]
   14334:	b	14300 <close@plt+0x3450>
   14338:	bl	10d00 <__stack_chk_fail@plt>
   1433c:	andeq	r5, r2, r8, lsl #30
   14340:	push	{r4, r5, r6, lr}
   14344:	mov	r4, r0
   14348:	bl	10d54 <__fpending@plt>
   1434c:	ldr	r5, [r4]
   14350:	and	r5, r5, #32
   14354:	mov	r6, r0
   14358:	mov	r0, r4
   1435c:	bl	14434 <close@plt+0x3584>
   14360:	cmp	r5, #0
   14364:	mov	r4, r0
   14368:	bne	14394 <close@plt+0x34e4>
   1436c:	cmp	r0, #0
   14370:	beq	1438c <close@plt+0x34dc>
   14374:	cmp	r6, #0
   14378:	bne	143ac <close@plt+0x34fc>
   1437c:	bl	10de4 <__errno_location@plt>
   14380:	ldr	r4, [r0]
   14384:	subs	r4, r4, #9
   14388:	mvnne	r4, #0
   1438c:	mov	r0, r4
   14390:	pop	{r4, r5, r6, pc}
   14394:	cmp	r0, #0
   14398:	bne	143ac <close@plt+0x34fc>
   1439c:	bl	10de4 <__errno_location@plt>
   143a0:	str	r4, [r0]
   143a4:	mvn	r4, #0
   143a8:	b	1438c <close@plt+0x34dc>
   143ac:	mvn	r4, #0
   143b0:	b	1438c <close@plt+0x34dc>
   143b4:	push	{r4, lr}
   143b8:	mov	r1, #0
   143bc:	bl	10e50 <setlocale@plt>
   143c0:	subs	r4, r0, #0
   143c4:	beq	143f0 <close@plt+0x3540>
   143c8:	ldr	r1, [pc, #40]	; 143f8 <close@plt+0x3548>
   143cc:	bl	10c94 <strcmp@plt>
   143d0:	cmp	r0, #0
   143d4:	popeq	{r4, pc}
   143d8:	mov	r0, r4
   143dc:	ldr	r1, [pc, #24]	; 143fc <close@plt+0x354c>
   143e0:	bl	10c94 <strcmp@plt>
   143e4:	adds	r0, r0, #0
   143e8:	movne	r0, #1
   143ec:	pop	{r4, pc}
   143f0:	mov	r0, #1
   143f4:	pop	{r4, pc}
   143f8:	andeq	r5, r1, r4, lsr #3
   143fc:	andeq	r5, r1, r8, lsr #3
   14400:	push	{r4, lr}
   14404:	mov	r0, #14
   14408:	bl	10e68 <nl_langinfo@plt>
   1440c:	cmp	r0, #0
   14410:	beq	14428 <close@plt+0x3578>
   14414:	ldrb	r2, [r0]
   14418:	ldr	r3, [pc, #16]	; 14430 <close@plt+0x3580>
   1441c:	cmp	r2, #0
   14420:	moveq	r0, r3
   14424:	pop	{r4, pc}
   14428:	ldr	r0, [pc]	; 14430 <close@plt+0x3580>
   1442c:	pop	{r4, pc}
   14430:			; <UNDEFINED> instruction: 0x000151b0
   14434:	push	{r4, r5, lr}
   14438:	sub	sp, sp, #12
   1443c:	mov	r4, r0
   14440:	bl	10e14 <fileno@plt>
   14444:	cmp	r0, #0
   14448:	mov	r0, r4
   1444c:	blt	144c8 <close@plt+0x3618>
   14450:	bl	10d9c <__freading@plt>
   14454:	cmp	r0, #0
   14458:	bne	14494 <close@plt+0x35e4>
   1445c:	mov	r0, r4
   14460:	bl	144d4 <close@plt+0x3624>
   14464:	cmp	r0, #0
   14468:	beq	144c4 <close@plt+0x3614>
   1446c:	bl	10de4 <__errno_location@plt>
   14470:	mov	r5, r0
   14474:	mov	r0, r4
   14478:	ldr	r4, [r5]
   1447c:	bl	10e2c <fclose@plt>
   14480:	cmp	r4, #0
   14484:	mvnne	r0, #0
   14488:	strne	r4, [r5]
   1448c:	add	sp, sp, #12
   14490:	pop	{r4, r5, pc}
   14494:	mov	r0, r4
   14498:	bl	10e14 <fileno@plt>
   1449c:	mov	r3, #1
   144a0:	str	r3, [sp]
   144a4:	mov	r2, #0
   144a8:	mov	r3, #0
   144ac:	bl	10d3c <lseek64@plt>
   144b0:	mvn	r3, #0
   144b4:	mvn	r2, #0
   144b8:	cmp	r1, r3
   144bc:	cmpeq	r0, r2
   144c0:	bne	1445c <close@plt+0x35ac>
   144c4:	mov	r0, r4
   144c8:	add	sp, sp, #12
   144cc:	pop	{r4, r5, lr}
   144d0:	b	10e2c <fclose@plt>
   144d4:	push	{r4, lr}
   144d8:	subs	r4, r0, #0
   144dc:	sub	sp, sp, #8
   144e0:	beq	144fc <close@plt+0x364c>
   144e4:	bl	10d9c <__freading@plt>
   144e8:	cmp	r0, #0
   144ec:	beq	144fc <close@plt+0x364c>
   144f0:	ldr	r3, [r4]
   144f4:	tst	r3, #256	; 0x100
   144f8:	bne	1450c <close@plt+0x365c>
   144fc:	mov	r0, r4
   14500:	add	sp, sp, #8
   14504:	pop	{r4, lr}
   14508:	b	10ca0 <fflush@plt>
   1450c:	mov	r3, #1
   14510:	str	r3, [sp]
   14514:	mov	r2, #0
   14518:	mov	r3, #0
   1451c:	mov	r0, r4
   14520:	bl	14534 <close@plt+0x3684>
   14524:	mov	r0, r4
   14528:	add	sp, sp, #8
   1452c:	pop	{r4, lr}
   14530:	b	10ca0 <fflush@plt>
   14534:	push	{r4, r5, r6, r7, r8, lr}
   14538:	sub	sp, sp, #8
   1453c:	ldmib	r0, {ip, lr}
   14540:	mov	r4, r0
   14544:	ldr	r5, [sp, #32]
   14548:	cmp	lr, ip
   1454c:	beq	14564 <close@plt+0x36b4>
   14550:	str	r5, [sp, #32]
   14554:	mov	r0, r4
   14558:	add	sp, sp, #8
   1455c:	pop	{r4, r5, r6, r7, r8, lr}
   14560:	b	10e38 <fseeko64@plt>
   14564:	ldr	lr, [r0, #20]
   14568:	ldr	ip, [r0, #16]
   1456c:	cmp	lr, ip
   14570:	bne	14550 <close@plt+0x36a0>
   14574:	ldr	r8, [r0, #36]	; 0x24
   14578:	cmp	r8, #0
   1457c:	bne	14550 <close@plt+0x36a0>
   14580:	mov	r6, r2
   14584:	mov	r7, r3
   14588:	bl	10e14 <fileno@plt>
   1458c:	mov	r2, r6
   14590:	mov	r3, r7
   14594:	str	r5, [sp]
   14598:	bl	10d3c <lseek64@plt>
   1459c:	mvn	r3, #0
   145a0:	mvn	r2, #0
   145a4:	cmp	r1, r3
   145a8:	cmpeq	r0, r2
   145ac:	beq	145cc <close@plt+0x371c>
   145b0:	ldr	r3, [r4]
   145b4:	strd	r0, [r4, #80]	; 0x50
   145b8:	mov	r0, r8
   145bc:	bic	r3, r3, #16
   145c0:	str	r3, [r4]
   145c4:	add	sp, sp, #8
   145c8:	pop	{r4, r5, r6, r7, r8, pc}
   145cc:	mvn	r0, #0
   145d0:	b	145c4 <close@plt+0x3714>
   145d4:	subs	r2, r1, #1
   145d8:	bxeq	lr
   145dc:	bcc	147b4 <close@plt+0x3904>
   145e0:	cmp	r0, r1
   145e4:	bls	14798 <close@plt+0x38e8>
   145e8:	tst	r1, r2
   145ec:	beq	147a4 <close@plt+0x38f4>
   145f0:	clz	r3, r0
   145f4:	clz	r2, r1
   145f8:	sub	r3, r2, r3
   145fc:	rsbs	r3, r3, #31
   14600:	addne	r3, r3, r3, lsl #1
   14604:	mov	r2, #0
   14608:	addne	pc, pc, r3, lsl #2
   1460c:	nop			; (mov r0, r0)
   14610:	cmp	r0, r1, lsl #31
   14614:	adc	r2, r2, r2
   14618:	subcs	r0, r0, r1, lsl #31
   1461c:	cmp	r0, r1, lsl #30
   14620:	adc	r2, r2, r2
   14624:	subcs	r0, r0, r1, lsl #30
   14628:	cmp	r0, r1, lsl #29
   1462c:	adc	r2, r2, r2
   14630:	subcs	r0, r0, r1, lsl #29
   14634:	cmp	r0, r1, lsl #28
   14638:	adc	r2, r2, r2
   1463c:	subcs	r0, r0, r1, lsl #28
   14640:	cmp	r0, r1, lsl #27
   14644:	adc	r2, r2, r2
   14648:	subcs	r0, r0, r1, lsl #27
   1464c:	cmp	r0, r1, lsl #26
   14650:	adc	r2, r2, r2
   14654:	subcs	r0, r0, r1, lsl #26
   14658:	cmp	r0, r1, lsl #25
   1465c:	adc	r2, r2, r2
   14660:	subcs	r0, r0, r1, lsl #25
   14664:	cmp	r0, r1, lsl #24
   14668:	adc	r2, r2, r2
   1466c:	subcs	r0, r0, r1, lsl #24
   14670:	cmp	r0, r1, lsl #23
   14674:	adc	r2, r2, r2
   14678:	subcs	r0, r0, r1, lsl #23
   1467c:	cmp	r0, r1, lsl #22
   14680:	adc	r2, r2, r2
   14684:	subcs	r0, r0, r1, lsl #22
   14688:	cmp	r0, r1, lsl #21
   1468c:	adc	r2, r2, r2
   14690:	subcs	r0, r0, r1, lsl #21
   14694:	cmp	r0, r1, lsl #20
   14698:	adc	r2, r2, r2
   1469c:	subcs	r0, r0, r1, lsl #20
   146a0:	cmp	r0, r1, lsl #19
   146a4:	adc	r2, r2, r2
   146a8:	subcs	r0, r0, r1, lsl #19
   146ac:	cmp	r0, r1, lsl #18
   146b0:	adc	r2, r2, r2
   146b4:	subcs	r0, r0, r1, lsl #18
   146b8:	cmp	r0, r1, lsl #17
   146bc:	adc	r2, r2, r2
   146c0:	subcs	r0, r0, r1, lsl #17
   146c4:	cmp	r0, r1, lsl #16
   146c8:	adc	r2, r2, r2
   146cc:	subcs	r0, r0, r1, lsl #16
   146d0:	cmp	r0, r1, lsl #15
   146d4:	adc	r2, r2, r2
   146d8:	subcs	r0, r0, r1, lsl #15
   146dc:	cmp	r0, r1, lsl #14
   146e0:	adc	r2, r2, r2
   146e4:	subcs	r0, r0, r1, lsl #14
   146e8:	cmp	r0, r1, lsl #13
   146ec:	adc	r2, r2, r2
   146f0:	subcs	r0, r0, r1, lsl #13
   146f4:	cmp	r0, r1, lsl #12
   146f8:	adc	r2, r2, r2
   146fc:	subcs	r0, r0, r1, lsl #12
   14700:	cmp	r0, r1, lsl #11
   14704:	adc	r2, r2, r2
   14708:	subcs	r0, r0, r1, lsl #11
   1470c:	cmp	r0, r1, lsl #10
   14710:	adc	r2, r2, r2
   14714:	subcs	r0, r0, r1, lsl #10
   14718:	cmp	r0, r1, lsl #9
   1471c:	adc	r2, r2, r2
   14720:	subcs	r0, r0, r1, lsl #9
   14724:	cmp	r0, r1, lsl #8
   14728:	adc	r2, r2, r2
   1472c:	subcs	r0, r0, r1, lsl #8
   14730:	cmp	r0, r1, lsl #7
   14734:	adc	r2, r2, r2
   14738:	subcs	r0, r0, r1, lsl #7
   1473c:	cmp	r0, r1, lsl #6
   14740:	adc	r2, r2, r2
   14744:	subcs	r0, r0, r1, lsl #6
   14748:	cmp	r0, r1, lsl #5
   1474c:	adc	r2, r2, r2
   14750:	subcs	r0, r0, r1, lsl #5
   14754:	cmp	r0, r1, lsl #4
   14758:	adc	r2, r2, r2
   1475c:	subcs	r0, r0, r1, lsl #4
   14760:	cmp	r0, r1, lsl #3
   14764:	adc	r2, r2, r2
   14768:	subcs	r0, r0, r1, lsl #3
   1476c:	cmp	r0, r1, lsl #2
   14770:	adc	r2, r2, r2
   14774:	subcs	r0, r0, r1, lsl #2
   14778:	cmp	r0, r1, lsl #1
   1477c:	adc	r2, r2, r2
   14780:	subcs	r0, r0, r1, lsl #1
   14784:	cmp	r0, r1
   14788:	adc	r2, r2, r2
   1478c:	subcs	r0, r0, r1
   14790:	mov	r0, r2
   14794:	bx	lr
   14798:	moveq	r0, #1
   1479c:	movne	r0, #0
   147a0:	bx	lr
   147a4:	clz	r2, r1
   147a8:	rsb	r2, r2, #31
   147ac:	lsr	r0, r0, r2
   147b0:	bx	lr
   147b4:	cmp	r0, #0
   147b8:	mvnne	r0, #0
   147bc:	b	147e0 <close@plt+0x3930>
   147c0:	cmp	r1, #0
   147c4:	beq	147b4 <close@plt+0x3904>
   147c8:	push	{r0, r1, lr}
   147cc:	bl	145d4 <close@plt+0x3724>
   147d0:	pop	{r1, r2, lr}
   147d4:	mul	r3, r2, r0
   147d8:	sub	r1, r1, r3
   147dc:	bx	lr
   147e0:	push	{r1, lr}
   147e4:	mov	r0, #8
   147e8:	bl	10c7c <raise@plt>
   147ec:	pop	{r1, pc}
   147f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147f4:	mov	r7, r0
   147f8:	ldr	r6, [pc, #72]	; 14848 <close@plt+0x3998>
   147fc:	ldr	r5, [pc, #72]	; 1484c <close@plt+0x399c>
   14800:	add	r6, pc, r6
   14804:	add	r5, pc, r5
   14808:	sub	r6, r6, r5
   1480c:	mov	r8, r1
   14810:	mov	r9, r2
   14814:	bl	10c44 <calloc@plt-0x20>
   14818:	asrs	r6, r6, #2
   1481c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14820:	mov	r4, #0
   14824:	add	r4, r4, #1
   14828:	ldr	r3, [r5], #4
   1482c:	mov	r2, r9
   14830:	mov	r1, r8
   14834:	mov	r0, r7
   14838:	blx	r3
   1483c:	cmp	r6, r4
   14840:	bne	14824 <close@plt+0x3974>
   14844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14848:	strdeq	r1, [r1], -ip
   1484c:	strdeq	r1, [r1], -r4
   14850:	bx	lr
   14854:	ldr	r3, [pc, #12]	; 14868 <close@plt+0x39b8>
   14858:	mov	r1, #0
   1485c:	add	r3, pc, r3
   14860:	ldr	r2, [r3]
   14864:	b	10df0 <__cxa_atexit@plt>
   14868:	andeq	r1, r1, r8, ror r8

Disassembly of section .fini:

0001486c <.fini>:
   1486c:	push	{r3, lr}
   14870:	pop	{r3, pc}
