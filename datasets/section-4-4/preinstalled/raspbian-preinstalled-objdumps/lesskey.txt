
raspbian-preinstalled/lesskey:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10a74 <abort@plt+0x3d0>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <calloc@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <calloc@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r2, r1, ip, asr #19

000105e4 <calloc@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #73728	; 0x12000
   105ec:	ldr	pc, [ip, #2508]!	; 0x9cc

000105f0 <strcmp@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #73728	; 0x12000
   105f8:	ldr	pc, [ip, #2500]!	; 0x9c4

000105fc <fgets@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #73728	; 0x12000
   10604:	ldr	pc, [ip, #2492]!	; 0x9bc

00010608 <memcpy@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #73728	; 0x12000
   10610:	ldr	pc, [ip, #2484]!	; 0x9b4

00010614 <__stack_chk_fail@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #73728	; 0x12000
   1061c:	ldr	pc, [ip, #2476]!	; 0x9ac

00010620 <perror@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #73728	; 0x12000
   10628:	ldr	pc, [ip, #2468]!	; 0x9a4

0001062c <fwrite@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #73728	; 0x12000
   10634:	ldr	pc, [ip, #2460]!	; 0x99c

00010638 <getenv@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #73728	; 0x12000
   10640:	ldr	pc, [ip, #2452]!	; 0x994

00010644 <__libc_start_main@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #73728	; 0x12000
   1064c:	ldr	pc, [ip, #2444]!	; 0x98c

00010650 <__gmon_start__@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #73728	; 0x12000
   10658:	ldr	pc, [ip, #2436]!	; 0x984

0001065c <exit@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #73728	; 0x12000
   10664:	ldr	pc, [ip, #2428]!	; 0x97c

00010668 <strlen@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #73728	; 0x12000
   10670:	ldr	pc, [ip, #2420]!	; 0x974

00010674 <__printf_chk@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #73728	; 0x12000
   1067c:	ldr	pc, [ip, #2412]!	; 0x96c

00010680 <__fprintf_chk@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #73728	; 0x12000
   10688:	ldr	pc, [ip, #2404]!	; 0x964

0001068c <fopen64@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #73728	; 0x12000
   10694:	ldr	pc, [ip, #2396]!	; 0x95c

00010698 <strncmp@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #73728	; 0x12000
   106a0:	ldr	pc, [ip, #2388]!	; 0x954

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #73728	; 0x12000
   106ac:	ldr	pc, [ip, #2380]!	; 0x94c

Disassembly of section .text:

000106b0 <error@@Base-0x8f4>:
   106b0:	ldr	r3, [pc, #796]	; 109d4 <abort@plt+0x330>
   106b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106b8:	sub	sp, sp, #1040	; 0x410
   106bc:	ldr	fp, [pc, #788]	; 109d8 <abort@plt+0x334>
   106c0:	sub	sp, sp, #4
   106c4:	ldr	r3, [r3]
   106c8:	ldr	r8, [pc, #780]	; 109dc <abort@plt+0x338>
   106cc:	ldr	r7, [pc, #780]	; 109e0 <abort@plt+0x33c>
   106d0:	ldr	r6, [pc, #780]	; 109e4 <abort@plt+0x340>
   106d4:	str	r3, [sp, #1036]	; 0x40c
   106d8:	mov	sl, r8
   106dc:	bl	10c20 <abort@plt+0x57c>
   106e0:	ldr	r3, [pc, #768]	; 109e8 <abort@plt+0x344>
   106e4:	ldr	r0, [fp, #4]
   106e8:	mov	r1, r6
   106ec:	mov	r9, r7
   106f0:	str	r3, [sl], #8
   106f4:	add	r2, r3, #496	; 0x1f0
   106f8:	mov	r3, #0
   106fc:	str	r3, [r1], #8
   10700:	str	r2, [r9], #8
   10704:	str	sl, [r8, #4]
   10708:	str	r9, [r7, #4]
   1070c:	str	r1, [r6, #4]
   10710:	ldrb	r3, [r0]
   10714:	str	r1, [sp, #4]
   10718:	cmp	r3, #45	; 0x2d
   1071c:	beq	1095c <abort@plt+0x2b8>
   10720:	ldr	r1, [pc, #708]	; 109ec <abort@plt+0x348>
   10724:	bl	1068c <fopen64@plt>
   10728:	subs	r5, r0, #0
   1072c:	beq	109c8 <abort@plt+0x324>
   10730:	ldr	r4, [pc, #696]	; 109f0 <abort@plt+0x34c>
   10734:	ldr	r2, [pc, #696]	; 109f4 <abort@plt+0x350>
   10738:	mov	r3, #0
   1073c:	str	r3, [r4]
   10740:	str	r3, [r2]
   10744:	b	1075c <abort@plt+0xb8>
   10748:	ldr	r3, [r4]
   1074c:	add	r0, sp, #12
   10750:	add	r3, r3, #1
   10754:	str	r3, [r4]
   10758:	bl	11a00 <error@@Base+0xa5c>
   1075c:	mov	r2, r5
   10760:	mov	r1, #1024	; 0x400
   10764:	add	r0, sp, #12
   10768:	bl	105fc <fgets@plt>
   1076c:	cmp	r0, #0
   10770:	bne	10748 <abort@plt+0xa4>
   10774:	ldr	r3, [pc, #632]	; 109f4 <abort@plt+0x350>
   10778:	ldr	r3, [r3]
   1077c:	cmp	r3, #0
   10780:	bgt	109a8 <abort@plt+0x304>
   10784:	ldr	r0, [fp]
   10788:	cmp	r0, #0
   1078c:	beq	10974 <abort@plt+0x2d0>
   10790:	ldr	r1, [pc, #608]	; 109f8 <abort@plt+0x354>
   10794:	bl	1068c <fopen64@plt>
   10798:	subs	r4, r0, #0
   1079c:	movne	r5, #4
   107a0:	ldrne	fp, [pc, #596]	; 109fc <abort@plt+0x358>
   107a4:	beq	10998 <abort@plt+0x2f4>
   107a8:	mov	r2, #1
   107ac:	sub	r0, fp, r5
   107b0:	mov	r1, r2
   107b4:	mov	r3, r4
   107b8:	bl	1062c <fwrite@plt>
   107bc:	subs	r5, r5, #1
   107c0:	bne	107a8 <abort@plt+0x104>
   107c4:	mov	r2, #1
   107c8:	mov	r1, r2
   107cc:	mov	r3, r4
   107d0:	mov	r0, fp
   107d4:	bl	1062c <fwrite@plt>
   107d8:	ldr	r1, [r8, #4]
   107dc:	mov	r0, r4
   107e0:	sub	r1, r1, sl
   107e4:	bl	10ef4 <abort@plt+0x850>
   107e8:	ldr	r3, [r8, #4]
   107ec:	sub	sl, r3, sl
   107f0:	cmp	sl, #0
   107f4:	ble	10824 <abort@plt+0x180>
   107f8:	add	sl, sl, #8
   107fc:	ldr	r5, [pc, #508]	; 10a00 <abort@plt+0x35c>
   10800:	add	r8, r8, sl
   10804:	mov	r2, #1
   10808:	mov	r0, r5
   1080c:	mov	r1, r2
   10810:	add	r5, r5, r2
   10814:	mov	r3, r4
   10818:	bl	1062c <fwrite@plt>
   1081c:	cmp	r8, r5
   10820:	bne	10804 <abort@plt+0x160>
   10824:	mov	r2, #1
   10828:	mov	r1, r2
   1082c:	mov	r3, r4
   10830:	ldr	r0, [pc, #460]	; 10a04 <abort@plt+0x360>
   10834:	bl	1062c <fwrite@plt>
   10838:	ldr	r1, [r7, #4]
   1083c:	mov	r0, r4
   10840:	sub	r1, r1, r9
   10844:	bl	10ef4 <abort@plt+0x850>
   10848:	ldr	r3, [r7, #4]
   1084c:	sub	r9, r3, r9
   10850:	cmp	r9, #0
   10854:	ble	10884 <abort@plt+0x1e0>
   10858:	add	r9, r9, #8
   1085c:	ldr	r5, [pc, #420]	; 10a08 <abort@plt+0x364>
   10860:	add	r7, r7, r9
   10864:	mov	r2, #1
   10868:	mov	r0, r5
   1086c:	mov	r1, r2
   10870:	add	r5, r5, r2
   10874:	mov	r3, r4
   10878:	bl	1062c <fwrite@plt>
   1087c:	cmp	r5, r7
   10880:	bne	10864 <abort@plt+0x1c0>
   10884:	mov	r2, #1
   10888:	mov	r1, r2
   1088c:	mov	r3, r4
   10890:	ldr	r0, [pc, #372]	; 10a0c <abort@plt+0x368>
   10894:	bl	1062c <fwrite@plt>
   10898:	ldr	r5, [sp, #4]
   1089c:	ldr	r1, [r6, #4]
   108a0:	mov	r0, r4
   108a4:	sub	r1, r1, r5
   108a8:	bl	10ef4 <abort@plt+0x850>
   108ac:	ldr	r3, [r6, #4]
   108b0:	sub	r3, r3, r5
   108b4:	cmp	r3, #0
   108b8:	ble	108e8 <abort@plt+0x244>
   108bc:	add	r3, r3, #8
   108c0:	ldr	r5, [pc, #328]	; 10a10 <abort@plt+0x36c>
   108c4:	add	r6, r6, r3
   108c8:	mov	r2, #1
   108cc:	mov	r0, r5
   108d0:	mov	r1, r2
   108d4:	add	r5, r5, r2
   108d8:	mov	r3, r4
   108dc:	bl	1062c <fwrite@plt>
   108e0:	cmp	r5, r6
   108e4:	bne	108c8 <abort@plt+0x224>
   108e8:	mov	r2, #1
   108ec:	mov	r1, r2
   108f0:	mov	r3, r4
   108f4:	ldr	r0, [pc, #280]	; 10a14 <abort@plt+0x370>
   108f8:	bl	1062c <fwrite@plt>
   108fc:	mov	r2, #1
   10900:	mov	r1, r2
   10904:	mov	r3, r4
   10908:	ldr	r0, [pc, #264]	; 10a18 <abort@plt+0x374>
   1090c:	bl	1062c <fwrite@plt>
   10910:	mov	r2, #1
   10914:	mov	r1, r2
   10918:	mov	r3, r4
   1091c:	ldr	r0, [pc, #248]	; 10a1c <abort@plt+0x378>
   10920:	bl	1062c <fwrite@plt>
   10924:	mov	r2, #1
   10928:	mov	r3, r4
   1092c:	mov	r1, r2
   10930:	ldr	r0, [pc, #232]	; 10a20 <abort@plt+0x37c>
   10934:	bl	1062c <fwrite@plt>
   10938:	ldr	r3, [pc, #148]	; 109d4 <abort@plt+0x330>
   1093c:	ldr	r2, [sp, #1036]	; 0x40c
   10940:	mov	r0, #0
   10944:	ldr	r3, [r3]
   10948:	cmp	r2, r3
   1094c:	bne	109c4 <abort@plt+0x320>
   10950:	add	sp, sp, #1040	; 0x410
   10954:	add	sp, sp, #4
   10958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1095c:	ldrb	r3, [r0, #1]
   10960:	cmp	r3, #0
   10964:	bne	10720 <abort@plt+0x7c>
   10968:	ldr	r3, [pc, #180]	; 10a24 <abort@plt+0x380>
   1096c:	ldr	r5, [r3]
   10970:	b	10730 <abort@plt+0x8c>
   10974:	ldr	r0, [pc, #172]	; 10a28 <abort@plt+0x384>
   10978:	bl	10638 <getenv@plt>
   1097c:	cmp	r0, #0
   10980:	str	r0, [fp]
   10984:	bne	10790 <abort@plt+0xec>
   10988:	ldr	r0, [pc, #156]	; 10a2c <abort@plt+0x388>
   1098c:	bl	10bb8 <abort@plt+0x514>
   10990:	str	r0, [fp]
   10994:	b	10790 <abort@plt+0xec>
   10998:	ldr	r0, [fp]
   1099c:	bl	10620 <perror@plt>
   109a0:	mov	r0, #1
   109a4:	bl	1065c <exit@plt>
   109a8:	ldr	r1, [pc, #128]	; 10a30 <abort@plt+0x38c>
   109ac:	ldr	r2, [pc, #128]	; 10a34 <abort@plt+0x390>
   109b0:	ldr	r0, [r1]
   109b4:	mov	r1, #1
   109b8:	bl	10680 <__fprintf_chk@plt>
   109bc:	mov	r0, #1
   109c0:	bl	1065c <exit@plt>
   109c4:	bl	10614 <__stack_chk_fail@plt>
   109c8:	ldr	r0, [fp, #4]
   109cc:	bl	10620 <perror@plt>
   109d0:	bl	10b28 <abort@plt+0x484>
   109d4:	andeq	r2, r2, r8, lsr #29
   109d8:	ldrdeq	r3, [r2], -r8
   109dc:	ldrdeq	r3, [r2], -ip
   109e0:	andeq	r3, r2, ip, ror #5
   109e4:	ldrdeq	r3, [r2], -r4
   109e8:	andeq	r3, r2, r8
   109ec:	andeq	r1, r1, r4, lsr ip
   109f0:	andeq	r3, r2, ip, asr #21
   109f4:	ldrdeq	r3, [r2], -r0
   109f8:	andeq	r1, r1, r8, ror #24
   109fc:			; <UNDEFINED> instruction: 0x000232b0
   10a00:	andeq	r3, r2, r4, ror #13
   10a04:			; <UNDEFINED> instruction: 0x000232b4
   10a08:	strdeq	r3, [r2], -r4
   10a0c:			; <UNDEFINED> instruction: 0x000232b8
   10a10:	ldrdeq	r3, [r2], -ip
   10a14:			; <UNDEFINED> instruction: 0x000232bc
   10a18:	andeq	r3, r2, r0, asr #5
   10a1c:	andeq	r3, r2, r1, asr #5
   10a20:	andeq	r3, r2, r2, asr #5
   10a24:	ldrdeq	r3, [r2], -r0
   10a28:	andeq	r1, r1, r8, asr ip
   10a2c:	andeq	r1, r1, r0, ror #24
   10a30:	andeq	r3, r2, r8, asr #5
   10a34:	andeq	r1, r1, r8, lsr ip
   10a38:	mov	fp, #0
   10a3c:	mov	lr, #0
   10a40:	pop	{r1}		; (ldr r1, [sp], #4)
   10a44:	mov	r2, sp
   10a48:	push	{r2}		; (str r2, [sp, #-4]!)
   10a4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10a50:	ldr	ip, [pc, #16]	; 10a68 <abort@plt+0x3c4>
   10a54:	push	{ip}		; (str ip, [sp, #-4]!)
   10a58:	ldr	r0, [pc, #12]	; 10a6c <abort@plt+0x3c8>
   10a5c:	ldr	r3, [pc, #12]	; 10a70 <abort@plt+0x3cc>
   10a60:	bl	10644 <__libc_start_main@plt>
   10a64:	bl	106a4 <abort@plt>
   10a68:			; <UNDEFINED> instruction: 0x00011ab4
   10a6c:			; <UNDEFINED> instruction: 0x000106b0
   10a70:	andeq	r1, r1, r4, asr sl
   10a74:	ldr	r3, [pc, #20]	; 10a90 <abort@plt+0x3ec>
   10a78:	ldr	r2, [pc, #20]	; 10a94 <abort@plt+0x3f0>
   10a7c:	add	r3, pc, r3
   10a80:	ldr	r2, [r3, r2]
   10a84:	cmp	r2, #0
   10a88:	bxeq	lr
   10a8c:	b	10650 <__gmon_start__@plt>
   10a90:	andeq	r2, r1, r8, lsr #10
   10a94:	andeq	r0, r0, r0, asr r0
   10a98:	ldr	r0, [pc, #24]	; 10ab8 <abort@plt+0x414>
   10a9c:	ldr	r3, [pc, #24]	; 10abc <abort@plt+0x418>
   10aa0:	cmp	r3, r0
   10aa4:	bxeq	lr
   10aa8:	ldr	r3, [pc, #16]	; 10ac0 <abort@plt+0x41c>
   10aac:	cmp	r3, #0
   10ab0:	bxeq	lr
   10ab4:	bx	r3
   10ab8:	andeq	r3, r2, r8, asr #5
   10abc:	andeq	r3, r2, r8, asr #5
   10ac0:	andeq	r0, r0, r0
   10ac4:	ldr	r0, [pc, #36]	; 10af0 <abort@plt+0x44c>
   10ac8:	ldr	r1, [pc, #36]	; 10af4 <abort@plt+0x450>
   10acc:	sub	r1, r1, r0
   10ad0:	asr	r1, r1, #2
   10ad4:	add	r1, r1, r1, lsr #31
   10ad8:	asrs	r1, r1, #1
   10adc:	bxeq	lr
   10ae0:	ldr	r3, [pc, #16]	; 10af8 <abort@plt+0x454>
   10ae4:	cmp	r3, #0
   10ae8:	bxeq	lr
   10aec:	bx	r3
   10af0:	andeq	r3, r2, r8, asr #5
   10af4:	andeq	r3, r2, r8, asr #5
   10af8:	andeq	r0, r0, r0
   10afc:	push	{r4, lr}
   10b00:	ldr	r4, [pc, #24]	; 10b20 <abort@plt+0x47c>
   10b04:	ldrb	r3, [r4]
   10b08:	cmp	r3, #0
   10b0c:	popne	{r4, pc}
   10b10:	bl	10a98 <abort@plt+0x3f4>
   10b14:	mov	r3, #1
   10b18:	strb	r3, [r4]
   10b1c:	pop	{r4, pc}
   10b20:	ldrdeq	r3, [r2], -r4
   10b24:	b	10ac4 <abort@plt+0x420>
   10b28:	ldr	r3, [pc, #28]	; 10b4c <abort@plt+0x4a8>
   10b2c:	push	{r4, lr}
   10b30:	mov	r2, #35	; 0x23
   10b34:	mov	r1, #1
   10b38:	ldr	r3, [r3]
   10b3c:	ldr	r0, [pc, #12]	; 10b50 <abort@plt+0x4ac>
   10b40:	bl	1062c <fwrite@plt>
   10b44:	mov	r0, #1
   10b48:	bl	1065c <exit@plt>
   10b4c:	andeq	r3, r2, r8, asr #5
   10b50:	andeq	r1, r1, r4, asr #21
   10b54:	push	{r4, r5, r6, r7, r8, lr}
   10b58:	mov	r6, r1
   10b5c:	mov	r8, r0
   10b60:	bl	10668 <strlen@plt>
   10b64:	mov	r4, r0
   10b68:	mov	r0, r6
   10b6c:	bl	10668 <strlen@plt>
   10b70:	mov	r1, #1
   10b74:	mov	r7, r0
   10b78:	add	r0, r4, r0
   10b7c:	add	r0, r0, #2
   10b80:	bl	105e4 <calloc@plt>
   10b84:	mov	r2, r4
   10b88:	mov	r1, r8
   10b8c:	mov	r5, r0
   10b90:	bl	10608 <memcpy@plt>
   10b94:	add	r0, r4, #1
   10b98:	mov	r3, #47	; 0x2f
   10b9c:	add	r2, r7, #1
   10ba0:	mov	r1, r6
   10ba4:	add	r0, r5, r0
   10ba8:	strb	r3, [r5, r4]
   10bac:	bl	10608 <memcpy@plt>
   10bb0:	mov	r0, r5
   10bb4:	pop	{r4, r5, r6, r7, r8, pc}
   10bb8:	push	{r4, lr}
   10bbc:	mov	r4, r0
   10bc0:	ldr	r0, [pc, #72]	; 10c10 <abort@plt+0x56c>
   10bc4:	bl	10638 <getenv@plt>
   10bc8:	subs	r3, r0, #0
   10bcc:	beq	10bdc <abort@plt+0x538>
   10bd0:	ldrb	r3, [r3]
   10bd4:	cmp	r3, #0
   10bd8:	bne	10c04 <abort@plt+0x560>
   10bdc:	ldr	r3, [pc, #48]	; 10c14 <abort@plt+0x570>
   10be0:	mov	r1, #1
   10be4:	mov	r2, #44	; 0x2c
   10be8:	ldr	r3, [r3]
   10bec:	ldr	r0, [pc, #36]	; 10c18 <abort@plt+0x574>
   10bf0:	bl	1062c <fwrite@plt>
   10bf4:	mov	r1, r4
   10bf8:	ldr	r0, [pc, #28]	; 10c1c <abort@plt+0x578>
   10bfc:	pop	{r4, lr}
   10c00:	b	10b54 <abort@plt+0x4b0>
   10c04:	mov	r1, r4
   10c08:	pop	{r4, lr}
   10c0c:	b	10b54 <abort@plt+0x4b0>
   10c10:	andeq	r1, r1, r8, ror #21
   10c14:	andeq	r3, r2, r8, asr #5
   10c18:	strdeq	r1, [r1], -r0
   10c1c:	andeq	r1, r1, r0, lsr #22
   10c20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c24:	mov	r7, r0
   10c28:	ldr	r9, [pc, #312]	; 10d68 <abort@plt+0x6c4>
   10c2c:	ldr	sl, [pc, #312]	; 10d6c <abort@plt+0x6c8>
   10c30:	mov	r5, r1
   10c34:	mov	r3, #0
   10c38:	str	r3, [r9]
   10c3c:	sub	r6, r7, #1
   10c40:	cmp	r6, #0
   10c44:	ble	10d40 <abort@plt+0x69c>
   10c48:	ldr	r4, [r5, #4]
   10c4c:	add	r8, r5, #4
   10c50:	ldrb	r3, [r4]
   10c54:	cmp	r3, #45	; 0x2d
   10c58:	bne	10d28 <abort@plt+0x684>
   10c5c:	ldrb	r3, [r4, #1]
   10c60:	cmp	r3, #0
   10c64:	beq	10d28 <abort@plt+0x684>
   10c68:	cmp	r3, #45	; 0x2d
   10c6c:	beq	10cb8 <abort@plt+0x614>
   10c70:	cmp	r3, #86	; 0x56
   10c74:	beq	10d08 <abort@plt+0x664>
   10c78:	cmp	r3, #111	; 0x6f
   10c7c:	bne	10d64 <abort@plt+0x6c0>
   10c80:	add	r3, r4, #2
   10c84:	str	r3, [r9]
   10c88:	ldrb	r3, [r4, #2]
   10c8c:	cmp	r3, #0
   10c90:	movne	r5, r8
   10c94:	movne	r7, r6
   10c98:	bne	10c3c <abort@plt+0x598>
   10c9c:	sub	r7, r7, #2
   10ca0:	cmp	r7, #0
   10ca4:	ble	10d64 <abort@plt+0x6c0>
   10ca8:	ldr	r3, [r8, #4]
   10cac:	add	r5, r5, #8
   10cb0:	str	r3, [r9]
   10cb4:	b	10c3c <abort@plt+0x598>
   10cb8:	ldrb	r3, [r4, #2]
   10cbc:	cmp	r3, #0
   10cc0:	beq	10d20 <abort@plt+0x67c>
   10cc4:	mov	r2, #8
   10cc8:	mov	r1, sl
   10ccc:	mov	r0, r4
   10cd0:	bl	10698 <strncmp@plt>
   10cd4:	cmp	r0, #0
   10cd8:	bne	10d50 <abort@plt+0x6ac>
   10cdc:	ldrb	r3, [r4, #8]
   10ce0:	cmp	r3, #0
   10ce4:	addeq	r4, r4, #8
   10ce8:	streq	r4, [r9]
   10cec:	beq	10c9c <abort@plt+0x5f8>
   10cf0:	cmp	r3, #61	; 0x3d
   10cf4:	bne	10d64 <abort@plt+0x6c0>
   10cf8:	add	r3, r4, #9
   10cfc:	str	r3, [r9]
   10d00:	ldrb	r3, [r4, #9]
   10d04:	b	10c8c <abort@plt+0x5e8>
   10d08:	ldr	r2, [pc, #96]	; 10d70 <abort@plt+0x6cc>
   10d0c:	ldr	r1, [pc, #96]	; 10d74 <abort@plt+0x6d0>
   10d10:	mov	r0, #1
   10d14:	bl	10674 <__printf_chk@plt>
   10d18:	mov	r0, #0
   10d1c:	bl	1065c <exit@plt>
   10d20:	sub	r6, r7, #2
   10d24:	add	r8, r5, #8
   10d28:	cmp	r6, #1
   10d2c:	bgt	10d64 <abort@plt+0x6c0>
   10d30:	bne	10d40 <abort@plt+0x69c>
   10d34:	ldr	r3, [r8]
   10d38:	str	r3, [r9, #4]
   10d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d40:	ldr	r0, [pc, #48]	; 10d78 <abort@plt+0x6d4>
   10d44:	bl	10bb8 <abort@plt+0x514>
   10d48:	str	r0, [r9, #4]
   10d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d50:	mov	r0, r4
   10d54:	ldr	r1, [pc, #32]	; 10d7c <abort@plt+0x6d8>
   10d58:	bl	105f0 <strcmp@plt>
   10d5c:	cmp	r0, #0
   10d60:	beq	10d08 <abort@plt+0x664>
   10d64:	bl	10b28 <abort@plt+0x484>
   10d68:	ldrdeq	r3, [r2], -r8
   10d6c:	andeq	r1, r1, r4, lsr #22
   10d70:	andeq	r3, r2, r4, asr #5
   10d74:	andeq	r1, r1, ip, lsr fp
   10d78:	andeq	r1, r1, r4, asr fp
   10d7c:	andeq	r1, r1, r0, lsr fp
   10d80:	push	{r4, lr}
   10d84:	ldr	r4, [pc, #56]	; 10dc4 <abort@plt+0x720>
   10d88:	ldr	lr, [pc, #56]	; 10dc8 <abort@plt+0x724>
   10d8c:	ldr	ip, [pc, #56]	; 10dcc <abort@plt+0x728>
   10d90:	mov	r0, r4
   10d94:	ldr	r3, [pc, #52]	; 10dd0 <abort@plt+0x72c>
   10d98:	mov	r1, lr
   10d9c:	mov	r2, ip
   10da0:	str	r3, [r0], #8
   10da4:	add	r3, r3, #496	; 0x1f0
   10da8:	str	r0, [r4, #4]
   10dac:	mov	r0, #0
   10db0:	str	r3, [r1], #8
   10db4:	str	r0, [r2], #8
   10db8:	str	r1, [lr, #4]
   10dbc:	str	r2, [ip, #4]
   10dc0:	pop	{r4, pc}
   10dc4:	ldrdeq	r3, [r2], -ip
   10dc8:	andeq	r3, r2, ip, ror #5
   10dcc:	ldrdeq	r3, [r2], -r4
   10dd0:	andeq	r3, r2, r8
   10dd4:	ldrb	r3, [r0]
   10dd8:	cmp	r3, #9
   10ddc:	cmpne	r3, #32
   10de0:	bxne	lr
   10de4:	ldrb	r3, [r0, #1]!
   10de8:	cmp	r3, #9
   10dec:	cmpne	r3, #32
   10df0:	beq	10de4 <abort@plt+0x740>
   10df4:	bx	lr
   10df8:	ldrb	r3, [r0]
   10dfc:	and	r2, r3, #223	; 0xdf
   10e00:	cmp	r3, #9
   10e04:	cmpne	r2, #0
   10e08:	bxeq	lr
   10e0c:	ldrb	r3, [r0, #1]!
   10e10:	and	r2, r3, #223	; 0xdf
   10e14:	cmp	r3, #9
   10e18:	cmpne	r2, #0
   10e1c:	bne	10e0c <abort@plt+0x768>
   10e20:	bx	lr
   10e24:	ldrb	r3, [r0]
   10e28:	cmp	r3, #9
   10e2c:	cmpne	r3, #32
   10e30:	bne	10e44 <abort@plt+0x7a0>
   10e34:	ldrb	r3, [r0, #1]!
   10e38:	cmp	r3, #9
   10e3c:	cmpne	r3, #32
   10e40:	beq	10e34 <abort@plt+0x790>
   10e44:	cmp	r3, #10
   10e48:	cmpne	r3, #13
   10e4c:	movne	r2, #1
   10e50:	moveq	r2, #0
   10e54:	cmp	r3, #0
   10e58:	moveq	r2, #0
   10e5c:	cmp	r2, #0
   10e60:	mov	r1, r0
   10e64:	beq	10e94 <abort@plt+0x7f0>
   10e68:	cmp	r3, #35	; 0x23
   10e6c:	beq	10ea0 <abort@plt+0x7fc>
   10e70:	ldrb	r3, [r1, #1]!
   10e74:	cmp	r3, #10
   10e78:	cmpne	r3, #13
   10e7c:	movne	r2, #1
   10e80:	moveq	r2, #0
   10e84:	cmp	r3, #0
   10e88:	moveq	r2, #0
   10e8c:	cmp	r2, #0
   10e90:	bne	10e68 <abort@plt+0x7c4>
   10e94:	mov	r3, #0
   10e98:	strb	r3, [r1]
   10e9c:	bx	lr
   10ea0:	cmp	r0, r1
   10ea4:	beq	10e94 <abort@plt+0x7f0>
   10ea8:	ldrb	r3, [r1, #-1]
   10eac:	cmp	r3, #92	; 0x5c
   10eb0:	beq	10e70 <abort@plt+0x7cc>
   10eb4:	b	10e94 <abort@plt+0x7f0>
   10eb8:	cmp	r2, #0
   10ebc:	bxle	lr
   10ec0:	push	{r4, r5, r6, lr}
   10ec4:	mov	r6, r0
   10ec8:	mov	r4, r1
   10ecc:	add	r5, r1, r2
   10ed0:	mov	r2, #1
   10ed4:	mov	r0, r4
   10ed8:	mov	r1, r2
   10edc:	add	r4, r4, r2
   10ee0:	mov	r3, r6
   10ee4:	bl	1062c <fwrite@plt>
   10ee8:	cmp	r5, r4
   10eec:	bne	10ed0 <abort@plt+0x82c>
   10ef0:	pop	{r4, r5, r6, pc}
   10ef4:	push	{r4, r5, r6, r7, lr}
   10ef8:	sub	sp, sp, #20
   10efc:	ldr	r6, [pc, #148]	; 10f98 <abort@plt+0x8f4>
   10f00:	cmp	r1, #4096	; 0x1000
   10f04:	mov	r4, r1
   10f08:	ldr	r3, [r6]
   10f0c:	str	r3, [sp, #12]
   10f10:	bcs	10f6c <abort@plt+0x8c8>
   10f14:	add	r5, sp, #16
   10f18:	mov	r7, r0
   10f1c:	and	r3, r1, #63	; 0x3f
   10f20:	mov	r2, #1
   10f24:	strb	r3, [r5, #-5]!
   10f28:	mov	r1, r2
   10f2c:	mov	r3, r7
   10f30:	mov	r0, r5
   10f34:	bl	1062c <fwrite@plt>
   10f38:	mov	r2, #1
   10f3c:	mov	r3, r7
   10f40:	mov	r1, r2
   10f44:	mov	r0, r5
   10f48:	lsr	r4, r4, #6
   10f4c:	strb	r4, [sp, #11]
   10f50:	bl	1062c <fwrite@plt>
   10f54:	ldr	r2, [sp, #12]
   10f58:	ldr	r3, [r6]
   10f5c:	cmp	r2, r3
   10f60:	bne	10f94 <abort@plt+0x8f0>
   10f64:	add	sp, sp, #20
   10f68:	pop	{r4, r5, r6, r7, pc}
   10f6c:	ldr	r1, [pc, #40]	; 10f9c <abort@plt+0x8f8>
   10f70:	mov	r2, #4096	; 0x1000
   10f74:	mov	r3, r4
   10f78:	ldr	r0, [r1]
   10f7c:	str	r2, [sp]
   10f80:	mov	r1, #1
   10f84:	ldr	r2, [pc, #20]	; 10fa0 <abort@plt+0x8fc>
   10f88:	bl	10680 <__fprintf_chk@plt>
   10f8c:	mov	r0, #1
   10f90:	bl	1065c <exit@plt>
   10f94:	bl	10614 <__stack_chk_fail@plt>
   10f98:	andeq	r2, r2, r8, lsr #29
   10f9c:	andeq	r3, r2, r8, asr #5
   10fa0:	andeq	r1, r1, r0, ror #22

00010fa4 <error@@Base>:
   10fa4:	ldr	r2, [pc, #56]	; 10fe4 <error@@Base+0x40>
   10fa8:	ldr	r3, [pc, #56]	; 10fe8 <error@@Base+0x44>
   10fac:	push	{lr}		; (str lr, [sp, #-4]!)
   10fb0:	sub	sp, sp, #12
   10fb4:	mov	r1, #1
   10fb8:	str	r0, [sp]
   10fbc:	ldr	r3, [r3]
   10fc0:	ldr	r0, [r2]
   10fc4:	ldr	r2, [pc, #32]	; 10fec <error@@Base+0x48>
   10fc8:	bl	10680 <__fprintf_chk@plt>
   10fcc:	ldr	r2, [pc, #28]	; 10ff0 <error@@Base+0x4c>
   10fd0:	ldr	r3, [r2]
   10fd4:	add	r3, r3, #1
   10fd8:	str	r3, [r2]
   10fdc:	add	sp, sp, #12
   10fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   10fe4:	andeq	r3, r2, r8, asr #5
   10fe8:	andeq	r3, r2, ip, asr #21
   10fec:	andeq	r1, r1, r4, lsl #23
   10ff0:	ldrdeq	r3, [r2], -r0
   10ff4:	ldr	r3, [r0]
   10ff8:	ldrb	r2, [r3]
   10ffc:	cmp	r2, #92	; 0x5c
   11000:	beq	11084 <error@@Base+0xe0>
   11004:	cmp	r2, #94	; 0x5e
   11008:	beq	11050 <error@@Base+0xac>
   1100c:	add	r2, r3, #1
   11010:	str	r2, [r0]
   11014:	ldrb	r2, [r3]
   11018:	mov	r0, #0
   1101c:	ldr	r3, [pc, #1088]	; 11464 <error@@Base+0x4c0>
   11020:	cmp	r1, r0
   11024:	sub	ip, r2, #11
   11028:	clz	ip, ip
   1102c:	lsr	ip, ip, #5
   11030:	moveq	ip, #0
   11034:	cmp	ip, r0
   11038:	strb	r2, [r3, #8]
   1103c:	strb	r0, [r3, #9]
   11040:	bne	11078 <error@@Base+0xd4>
   11044:	ldr	r2, [pc, #1052]	; 11468 <error@@Base+0x4c4>
   11048:	mov	r0, r2
   1104c:	bx	lr
   11050:	add	r2, r3, #2
   11054:	str	r2, [r0]
   11058:	ldrb	r3, [r3, #1]
   1105c:	ldr	r2, [pc, #1024]	; 11464 <error@@Base+0x4c0>
   11060:	mov	r1, #0
   11064:	and	r3, r3, #31
   11068:	cmp	r3, #11
   1106c:	strb	r3, [r2, #8]
   11070:	strb	r1, [r2, #9]
   11074:	bne	11044 <error@@Base+0xa0>
   11078:	ldr	r2, [pc, #1004]	; 1146c <error@@Base+0x4c8>
   1107c:	mov	r0, r2
   11080:	bx	lr
   11084:	push	{r4, r5, r6, lr}
   11088:	ldrb	ip, [r3, #1]
   1108c:	sub	r2, ip, #48	; 0x30
   11090:	cmp	r2, #68	; 0x44
   11094:	ldrls	pc, [pc, r2, lsl #2]
   11098:	b	11368 <error@@Base+0x3c4>
   1109c:	andeq	r1, r1, r4, asr #3
   110a0:	andeq	r1, r1, r4, asr #3
   110a4:	andeq	r1, r1, r4, asr #3
   110a8:	andeq	r1, r1, r4, asr #3
   110ac:	andeq	r1, r1, r4, asr #3
   110b0:	andeq	r1, r1, r4, asr #3
   110b4:	andeq	r1, r1, r4, asr #3
   110b8:	andeq	r1, r1, r4, asr #3
   110bc:	andeq	r1, r1, r8, ror #6
   110c0:	andeq	r1, r1, r8, ror #6
   110c4:	andeq	r1, r1, r8, ror #6
   110c8:	andeq	r1, r1, r8, ror #6
   110cc:	andeq	r1, r1, r8, ror #6
   110d0:	andeq	r1, r1, r8, ror #6
   110d4:	andeq	r1, r1, r8, ror #6
   110d8:	andeq	r1, r1, r8, ror #6
   110dc:	andeq	r1, r1, r8, ror #6
   110e0:	andeq	r1, r1, r8, ror #6
   110e4:	andeq	r1, r1, r8, ror #6
   110e8:	andeq	r1, r1, r8, ror #6
   110ec:	andeq	r1, r1, r8, ror #6
   110f0:	andeq	r1, r1, r8, ror #6
   110f4:	andeq	r1, r1, r8, ror #6
   110f8:	andeq	r1, r1, r8, ror #6
   110fc:	andeq	r1, r1, r8, ror #6
   11100:	andeq	r1, r1, r8, ror #6
   11104:	andeq	r1, r1, r8, ror #6
   11108:	andeq	r1, r1, r8, ror #6
   1110c:	andeq	r1, r1, r8, ror #6
   11110:	andeq	r1, r1, r8, ror #6
   11114:	andeq	r1, r1, r8, ror #6
   11118:	andeq	r1, r1, r8, ror #6
   1111c:	andeq	r1, r1, r8, ror #6
   11120:	andeq	r1, r1, r8, ror #6
   11124:	andeq	r1, r1, r8, ror #6
   11128:	andeq	r1, r1, r8, ror #6
   1112c:	andeq	r1, r1, r8, ror #6
   11130:	andeq	r1, r1, r8, ror #6
   11134:	andeq	r1, r1, r8, ror #6
   11138:	andeq	r1, r1, r8, ror #6
   1113c:	andeq	r1, r1, r8, ror #6
   11140:	andeq	r1, r1, r8, ror #6
   11144:	andeq	r1, r1, r8, ror #6
   11148:	andeq	r1, r1, r8, ror #6
   1114c:	andeq	r1, r1, r8, ror #6
   11150:	andeq	r1, r1, r8, ror #6
   11154:	andeq	r1, r1, r8, ror #6
   11158:	andeq	r1, r1, r8, ror #6
   1115c:	andeq	r1, r1, r8, ror #6
   11160:	andeq	r1, r1, r8, ror #6
   11164:	andeq	r1, r1, ip, lsr #4
   11168:	andeq	r1, r1, r8, ror #6
   1116c:	andeq	r1, r1, r8, ror #6
   11170:	andeq	r1, r1, ip, lsr r2
   11174:	andeq	r1, r1, r8, ror #6
   11178:	andeq	r1, r1, r8, ror #6
   1117c:	andeq	r1, r1, r8, ror #6
   11180:	andeq	r1, r1, r8, ror #6
   11184:	andeq	r1, r1, r8, ror #6
   11188:	andeq	r1, r1, r4, asr r2
   1118c:	andeq	r1, r1, r8, ror #6
   11190:	andeq	r1, r1, r8, ror #6
   11194:	andeq	r1, r1, r8, asr #6
   11198:	andeq	r1, r1, r8, ror #6
   1119c:	andeq	r1, r1, r8, ror #6
   111a0:	andeq	r1, r1, r8, ror #6
   111a4:	andeq	r1, r1, r8, asr r3
   111a8:	andeq	r1, r1, r8, ror #6
   111ac:			; <UNDEFINED> instruction: 0x000111b0
   111b0:	ldr	r2, [pc, #696]	; 11470 <error@@Base+0x4cc>
   111b4:	add	r3, r3, #2
   111b8:	str	r3, [r0]
   111bc:	mov	r0, r2
   111c0:	pop	{r4, r5, r6, pc}
   111c4:	add	r2, r3, #1
   111c8:	mov	lr, #0
   111cc:	add	r3, r3, #4
   111d0:	add	lr, ip, lr, lsl #3
   111d4:	ldrb	ip, [r2, #1]!
   111d8:	sub	lr, lr, #48	; 0x30
   111dc:	and	lr, lr, #255	; 0xff
   111e0:	sub	r4, ip, #48	; 0x30
   111e4:	cmp	r4, #7
   111e8:	bhi	111f4 <error@@Base+0x250>
   111ec:	cmp	r2, r3
   111f0:	bne	111d0 <error@@Base+0x22c>
   111f4:	cmp	r1, #0
   111f8:	sub	r3, lr, #11
   111fc:	clz	r3, r3
   11200:	lsr	r3, r3, #5
   11204:	movne	r1, r3
   11208:	moveq	r1, #0
   1120c:	cmp	r1, #0
   11210:	str	r2, [r0]
   11214:	bne	1143c <error@@Base+0x498>
   11218:	ldr	r3, [pc, #580]	; 11464 <error@@Base+0x4c0>
   1121c:	add	r2, r3, #8
   11220:	strb	lr, [r3, #8]
   11224:	strb	r1, [r3, #9]
   11228:	b	111bc <error@@Base+0x218>
   1122c:	add	r3, r3, #2
   11230:	str	r3, [r0]
   11234:	ldr	r2, [pc, #568]	; 11474 <error@@Base+0x4d0>
   11238:	b	111bc <error@@Base+0x218>
   1123c:	ldr	r2, [pc, #544]	; 11464 <error@@Base+0x4c0>
   11240:	add	r3, r3, #2
   11244:	mov	r1, #27
   11248:	str	r3, [r0]
   1124c:	strh	r1, [r2, #8]!
   11250:	b	111bc <error@@Base+0x218>
   11254:	cmp	r1, #0
   11258:	beq	11444 <error@@Base+0x4a0>
   1125c:	ldrb	r2, [r3, #2]
   11260:	add	r4, r3, #3
   11264:	sub	r3, r2, #68	; 0x44
   11268:	cmp	r3, #52	; 0x34
   1126c:	ldrls	pc, [pc, r3, lsl #2]
   11270:	b	11424 <error@@Base+0x480>
   11274:	andeq	r1, r1, ip, lsl r4
   11278:	andeq	r1, r1, r4, lsr #8
   1127c:	andeq	r1, r1, r4, lsr #8
   11280:	andeq	r1, r1, r4, lsr #8
   11284:	andeq	r1, r1, r4, lsr #8
   11288:	andeq	r1, r1, r4, lsr #8
   1128c:	andeq	r1, r1, r4, lsr #8
   11290:	andeq	r1, r1, r4, lsr #8
   11294:	andeq	r1, r1, r4, lsr #8
   11298:	andeq	r1, r1, r4, lsr #8
   1129c:	andeq	r1, r1, r4, lsr #8
   112a0:	andeq	r1, r1, r4, lsr #8
   112a4:	andeq	r1, r1, r4, lsr #8
   112a8:	andeq	r1, r1, r4, lsr #8
   112ac:	andeq	r1, r1, r4, lsr #8
   112b0:	andeq	r1, r1, r4, lsr #8
   112b4:	andeq	r1, r1, r4, lsr #8
   112b8:	andeq	r1, r1, r4, lsl r4
   112bc:	andeq	r1, r1, r4, lsr #8
   112c0:	andeq	r1, r1, r4, lsr #8
   112c4:	andeq	r1, r1, r4, lsr #8
   112c8:	andeq	r1, r1, r4, lsr #8
   112cc:	andeq	r1, r1, r4, lsr #8
   112d0:	andeq	r1, r1, r4, lsr #8
   112d4:	andeq	r1, r1, r4, lsr #8
   112d8:	andeq	r1, r1, r4, lsr #8
   112dc:	andeq	r1, r1, r4, lsr #8
   112e0:	andeq	r1, r1, r4, lsr #8
   112e4:	andeq	r1, r1, r4, lsr #8
   112e8:	andeq	r1, r1, r4, lsr #8
   112ec:	andeq	r1, r1, r4, lsr #8
   112f0:	andeq	r1, r1, r4, lsr #8
   112f4:	andeq	r1, r1, ip, lsr #7
   112f8:	andeq	r1, r1, r4, ror #7
   112fc:	andeq	r1, r1, r4, lsr #8
   11300:	andeq	r1, r1, r4, lsr #8
   11304:	strdeq	r1, [r1], -r4
   11308:	andeq	r1, r1, r4, lsr #8
   1130c:	andeq	r1, r1, r4, lsr #8
   11310:	andeq	r1, r1, r4, lsr #8
   11314:	andeq	r1, r1, ip, ror #7
   11318:	andeq	r1, r1, r4, lsr #8
   1131c:	andeq	r1, r1, r4, lsr #8
   11320:	andeq	r1, r1, r4, lsr #8
   11324:	andeq	r1, r1, r4, lsr #8
   11328:	andeq	r1, r1, r4, lsr #8
   1132c:	andeq	r1, r1, r4, lsl #8
   11330:	andeq	r1, r1, r4, lsr #8
   11334:	andeq	r1, r1, r4, lsr #8
   11338:	strdeq	r1, [r1], -ip
   1133c:	andeq	r1, r1, r4, lsr #8
   11340:	andeq	r1, r1, r4, lsr #8
   11344:	andeq	r1, r1, ip, lsl #8
   11348:	add	r3, r3, #2
   1134c:	str	r3, [r0]
   11350:	ldr	r2, [pc, #288]	; 11478 <error@@Base+0x4d4>
   11354:	b	111bc <error@@Base+0x218>
   11358:	add	r3, r3, #2
   1135c:	str	r3, [r0]
   11360:	ldr	r2, [pc, #276]	; 1147c <error@@Base+0x4d8>
   11364:	b	111bc <error@@Base+0x218>
   11368:	add	r2, r3, #2
   1136c:	str	r2, [r0]
   11370:	ldrb	r2, [r3, #1]
   11374:	mov	r0, #0
   11378:	ldr	r3, [pc, #228]	; 11464 <error@@Base+0x4c0>
   1137c:	cmp	r1, r0
   11380:	sub	ip, r2, #11
   11384:	clz	ip, ip
   11388:	lsr	ip, ip, #5
   1138c:	moveq	ip, #0
   11390:	cmp	ip, r0
   11394:	strb	r2, [r3, #8]
   11398:	strb	r0, [r3, #9]
   1139c:	bne	1143c <error@@Base+0x498>
   113a0:	ldr	r2, [pc, #192]	; 11468 <error@@Base+0x4c4>
   113a4:	mov	r0, r2
   113a8:	pop	{r4, r5, r6, pc}
   113ac:	mov	lr, #4
   113b0:	ldr	r2, [pc, #172]	; 11464 <error@@Base+0x4c0>
   113b4:	ldr	ip, [pc, #196]	; 11480 <error@@Base+0x4dc>
   113b8:	ldr	r1, [pc, #196]	; 11484 <error@@Base+0x4e0>
   113bc:	str	r4, [r0]
   113c0:	mov	r3, #0
   113c4:	mov	r0, #11
   113c8:	strb	lr, [r2, #9]
   113cc:	strb	r0, [r2, #8]
   113d0:	strh	ip, [r2, #10]
   113d4:	strh	r1, [r2, #12]
   113d8:	strb	r3, [r2, #14]
   113dc:	add	r2, r2, #8
   113e0:	b	111bc <error@@Base+0x218>
   113e4:	mov	lr, #8
   113e8:	b	113b0 <error@@Base+0x40c>
   113ec:	mov	lr, #2
   113f0:	b	113b0 <error@@Base+0x40c>
   113f4:	mov	lr, #7
   113f8:	b	113b0 <error@@Base+0x40c>
   113fc:	mov	lr, #3
   11400:	b	113b0 <error@@Base+0x40c>
   11404:	mov	lr, #1
   11408:	b	113b0 <error@@Base+0x40c>
   1140c:	mov	lr, #9
   11410:	b	113b0 <error@@Base+0x40c>
   11414:	mov	lr, #5
   11418:	b	113b0 <error@@Base+0x40c>
   1141c:	mov	lr, #6
   11420:	b	113b0 <error@@Base+0x40c>
   11424:	mov	r5, r0
   11428:	ldr	r0, [pc, #88]	; 11488 <error@@Base+0x4e4>
   1142c:	bl	10fa4 <error@@Base>
   11430:	str	r4, [r5]
   11434:	ldr	r2, [pc, #80]	; 1148c <error@@Base+0x4e8>
   11438:	b	111bc <error@@Base+0x218>
   1143c:	ldr	r2, [pc, #40]	; 1146c <error@@Base+0x4c8>
   11440:	b	111bc <error@@Base+0x218>
   11444:	add	r2, r3, #2
   11448:	str	r2, [r0]
   1144c:	ldr	ip, [pc, #16]	; 11464 <error@@Base+0x4c0>
   11450:	ldrb	r3, [r3, #1]
   11454:	add	r2, ip, #8
   11458:	strb	r1, [ip, #9]
   1145c:	strb	r3, [ip, #8]
   11460:	b	111bc <error@@Base+0x218>
   11464:	ldrdeq	r3, [r2], -r8
   11468:	andeq	r3, r2, r0, ror #5
   1146c:	andeq	r3, r2, r0, lsr #5
   11470:	muleq	r1, ip, fp
   11474:	muleq	r1, r4, fp
   11478:	andeq	r1, r1, r0, lsl #23
   1147c:	muleq	r1, r8, fp
   11480:	andeq	r0, r0, r6, lsl #2
   11484:	andeq	r0, r0, r1, lsl #2
   11488:	andeq	r1, r1, r0, lsr #23
   1148c:	muleq	r1, r0, fp
   11490:	ldr	r0, [pc, #12]	; 114a4 <error@@Base+0x500>
   11494:	push	{r4, lr}
   11498:	bl	10fa4 <error@@Base>
   1149c:	mov	r0, #1
   114a0:	bl	1065c <exit@plt>
   114a4:			; <UNDEFINED> instruction: 0x00011bb8
   114a8:	ldr	r3, [pc, #40]	; 114d8 <error@@Base+0x534>
   114ac:	ldr	r3, [r3, #672]	; 0x2a0
   114b0:	add	r1, r3, #1008	; 0x3f0
   114b4:	ldr	r2, [r3, #4]
   114b8:	cmp	r2, r1
   114bc:	bcs	114d0 <error@@Base+0x52c>
   114c0:	add	r1, r2, #1
   114c4:	str	r1, [r3, #4]
   114c8:	strb	r0, [r2]
   114cc:	bx	lr
   114d0:	push	{r4, lr}
   114d4:	bl	11490 <error@@Base+0x4ec>
   114d8:	andeq	r3, r2, r8
   114dc:	ldrb	r1, [r0]
   114e0:	cmp	r1, #0
   114e4:	bxeq	lr
   114e8:	push	{r4, lr}
   114ec:	ldr	lr, [pc, #48]	; 11524 <error@@Base+0x580>
   114f0:	b	1150c <error@@Base+0x568>
   114f4:	add	ip, r3, #1
   114f8:	str	ip, [r2, #4]
   114fc:	strb	r1, [r3]
   11500:	ldrb	r1, [r0, #1]!
   11504:	cmp	r1, #0
   11508:	popeq	{r4, pc}
   1150c:	ldr	r2, [lr, #672]	; 0x2a0
   11510:	add	ip, r2, #1008	; 0x3f0
   11514:	ldr	r3, [r2, #4]
   11518:	cmp	r3, ip
   1151c:	bcc	114f4 <error@@Base+0x550>
   11520:	bl	11490 <error@@Base+0x4ec>
   11524:	andeq	r3, r2, r8
   11528:	push	{r4, lr}
   1152c:	mov	r2, #10
   11530:	ldr	r1, [pc, #236]	; 11624 <error@@Base+0x680>
   11534:	mov	r4, r0
   11538:	bl	10698 <strncmp@plt>
   1153c:	cmp	r0, #0
   11540:	beq	115f0 <error@@Base+0x64c>
   11544:	mov	r2, #8
   11548:	ldr	r1, [pc, #216]	; 11628 <error@@Base+0x684>
   1154c:	mov	r0, r4
   11550:	bl	10698 <strncmp@plt>
   11554:	cmp	r0, #0
   11558:	beq	115dc <error@@Base+0x638>
   1155c:	mov	r2, #4
   11560:	ldr	r1, [pc, #196]	; 1162c <error@@Base+0x688>
   11564:	mov	r0, r4
   11568:	bl	10698 <strncmp@plt>
   1156c:	cmp	r0, #0
   11570:	beq	11604 <error@@Base+0x660>
   11574:	mov	r0, r4
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #172]	; 11630 <error@@Base+0x68c>
   11580:	bl	10698 <strncmp@plt>
   11584:	cmp	r0, #0
   11588:	bne	11618 <error@@Base+0x674>
   1158c:	ldr	r1, [pc, #160]	; 11634 <error@@Base+0x690>
   11590:	ldr	r2, [r1, #672]	; 0x2a0
   11594:	add	ip, r2, #1008	; 0x3f0
   11598:	ldr	r3, [r2, #4]
   1159c:	cmp	r3, ip
   115a0:	bcs	11620 <error@@Base+0x67c>
   115a4:	add	ip, r3, #1
   115a8:	str	ip, [r2, #4]
   115ac:	strb	r0, [r3]
   115b0:	ldr	r2, [r1, #672]	; 0x2a0
   115b4:	add	r1, r2, #1008	; 0x3f0
   115b8:	ldr	r3, [r2, #4]
   115bc:	cmp	r3, r1
   115c0:	bcs	11620 <error@@Base+0x67c>
   115c4:	add	r0, r3, #1
   115c8:	mov	r1, #103	; 0x67
   115cc:	str	r0, [r2, #4]
   115d0:	mov	r0, #1
   115d4:	strb	r1, [r3]
   115d8:	pop	{r4, pc}
   115dc:	ldr	r3, [pc, #80]	; 11634 <error@@Base+0x690>
   115e0:	ldr	r2, [pc, #80]	; 11638 <error@@Base+0x694>
   115e4:	mov	r0, #1
   115e8:	str	r2, [r3, #672]	; 0x2a0
   115ec:	pop	{r4, pc}
   115f0:	ldr	r3, [pc, #60]	; 11634 <error@@Base+0x690>
   115f4:	ldr	r2, [pc, #64]	; 1163c <error@@Base+0x698>
   115f8:	mov	r0, #1
   115fc:	str	r2, [r3, #672]	; 0x2a0
   11600:	pop	{r4, pc}
   11604:	ldr	r3, [pc, #40]	; 11634 <error@@Base+0x690>
   11608:	ldr	r2, [pc, #48]	; 11640 <error@@Base+0x69c>
   1160c:	mov	r0, #1
   11610:	str	r2, [r3, #672]	; 0x2a0
   11614:	pop	{r4, pc}
   11618:	mov	r0, #0
   1161c:	pop	{r4, pc}
   11620:	bl	11490 <error@@Base+0x4ec>
   11624:	andeq	r1, r1, ip, asr #23
   11628:	ldrdeq	r1, [r1], -r8
   1162c:	andeq	r1, r1, r4, ror #23
   11630:	andeq	r1, r1, ip, ror #23
   11634:	andeq	r3, r2, r8
   11638:	ldrdeq	r3, [r2], -ip
   1163c:	andeq	r3, r2, ip, ror #5
   11640:	ldrdeq	r3, [r2], -r4
   11644:	ldr	r3, [pc, #80]	; 1169c <error@@Base+0x6f8>
   11648:	push	{r4, r5, r6, lr}
   1164c:	mov	r5, r0
   11650:	ldr	r3, [r3, #672]	; 0x2a0
   11654:	ldr	r4, [r3]
   11658:	ldr	r0, [r4]
   1165c:	cmp	r0, #0
   11660:	bne	11674 <error@@Base+0x6d0>
   11664:	b	1168c <error@@Base+0x6e8>
   11668:	ldr	r0, [r4, #8]!
   1166c:	cmp	r0, #0
   11670:	beq	1168c <error@@Base+0x6e8>
   11674:	mov	r1, r5
   11678:	bl	105f0 <strcmp@plt>
   1167c:	cmp	r0, #0
   11680:	bne	11668 <error@@Base+0x6c4>
   11684:	ldr	r0, [r4, #4]
   11688:	pop	{r4, r5, r6, pc}
   1168c:	ldr	r0, [pc, #12]	; 116a0 <error@@Base+0x6fc>
   11690:	bl	10fa4 <error@@Base>
   11694:	mov	r0, #100	; 0x64
   11698:	pop	{r4, r5, r6, pc}
   1169c:	andeq	r3, r2, r8
   116a0:	strdeq	r1, [r1], -r4
   116a4:	push	{r4, r5, r6, r7, lr}
   116a8:	sub	sp, sp, #12
   116ac:	add	r5, sp, #8
   116b0:	ldr	r7, [pc, #472]	; 11890 <error@@Base+0x8ec>
   116b4:	mov	r4, #0
   116b8:	str	r0, [r5, #-4]!
   116bc:	b	116e8 <error@@Base+0x744>
   116c0:	mov	r0, r7
   116c4:	bl	10fa4 <error@@Base>
   116c8:	ldr	r3, [sp, #4]
   116cc:	ldrb	r3, [r3]
   116d0:	and	r2, r3, #223	; 0xdf
   116d4:	cmp	r3, #9
   116d8:	cmpne	r2, #0
   116dc:	movne	r3, #1
   116e0:	moveq	r3, #0
   116e4:	beq	11714 <error@@Base+0x770>
   116e8:	mov	r1, #1
   116ec:	mov	r0, r5
   116f0:	bl	10ff4 <error@@Base+0x50>
   116f4:	mov	r6, r0
   116f8:	bl	10668 <strlen@plt>
   116fc:	add	r4, r4, r0
   11700:	cmp	r4, #16
   11704:	bgt	116c0 <error@@Base+0x71c>
   11708:	mov	r0, r6
   1170c:	bl	114dc <error@@Base+0x538>
   11710:	b	116c8 <error@@Base+0x724>
   11714:	ldr	r4, [pc, #376]	; 11894 <error@@Base+0x8f0>
   11718:	ldr	r1, [r4, #672]	; 0x2a0
   1171c:	add	r0, r1, #1008	; 0x3f0
   11720:	ldr	r2, [r1, #4]
   11724:	cmp	r2, r0
   11728:	bcs	1188c <error@@Base+0x8e8>
   1172c:	add	r0, r2, #1
   11730:	str	r0, [r1, #4]
   11734:	strb	r3, [r2]
   11738:	ldr	r0, [sp, #4]
   1173c:	ldrb	r3, [r0]
   11740:	cmp	r3, #32
   11744:	cmpne	r3, #9
   11748:	bne	1175c <error@@Base+0x7b8>
   1174c:	ldrb	r3, [r0, #1]!
   11750:	cmp	r3, #9
   11754:	cmpne	r3, #32
   11758:	beq	1174c <error@@Base+0x7a8>
   1175c:	str	r0, [sp, #4]
   11760:	ldrb	r3, [r0]
   11764:	cmp	r3, #0
   11768:	beq	1187c <error@@Base+0x8d8>
   1176c:	cmp	r3, #32
   11770:	cmpne	r3, #9
   11774:	mov	r2, r0
   11778:	beq	11790 <error@@Base+0x7ec>
   1177c:	ldrb	r3, [r2, #1]!
   11780:	and	r1, r3, #223	; 0xdf
   11784:	cmp	r3, #9
   11788:	cmpne	r1, #0
   1178c:	bne	1177c <error@@Base+0x7d8>
   11790:	mov	r3, #0
   11794:	str	r2, [sp, #4]
   11798:	ldrb	r6, [r2]
   1179c:	strb	r3, [r2]
   117a0:	bl	11644 <error@@Base+0x6a0>
   117a4:	ldr	r3, [sp, #4]
   117a8:	strb	r6, [r3]
   117ac:	ldr	r2, [sp, #4]
   117b0:	ldrb	r3, [r2]
   117b4:	cmp	r3, #32
   117b8:	cmpne	r3, #9
   117bc:	bne	117d0 <error@@Base+0x82c>
   117c0:	ldrb	r3, [r2, #1]!
   117c4:	cmp	r3, #9
   117c8:	cmpne	r3, #32
   117cc:	beq	117c0 <error@@Base+0x81c>
   117d0:	str	r2, [sp, #4]
   117d4:	ldrb	r2, [r2]
   117d8:	ldr	r3, [r4, #672]	; 0x2a0
   117dc:	cmp	r2, #0
   117e0:	add	r1, r3, #1008	; 0x3f0
   117e4:	ldr	r2, [r3, #4]
   117e8:	bne	11808 <error@@Base+0x864>
   117ec:	cmp	r2, r1
   117f0:	bcs	1188c <error@@Base+0x8e8>
   117f4:	add	r1, r2, #1
   117f8:	str	r1, [r3, #4]
   117fc:	strb	r0, [r2]
   11800:	add	sp, sp, #12
   11804:	pop	{r4, r5, r6, r7, pc}
   11808:	cmp	r2, r1
   1180c:	orr	r0, r0, #128	; 0x80
   11810:	bcs	1188c <error@@Base+0x8e8>
   11814:	add	r1, r2, #1
   11818:	str	r1, [r3, #4]
   1181c:	strb	r0, [r2]
   11820:	ldr	r3, [sp, #4]
   11824:	ldrb	r3, [r3]
   11828:	cmp	r3, #0
   1182c:	beq	11850 <error@@Base+0x8ac>
   11830:	mov	r1, #0
   11834:	mov	r0, r5
   11838:	bl	10ff4 <error@@Base+0x50>
   1183c:	bl	114dc <error@@Base+0x538>
   11840:	ldr	r3, [sp, #4]
   11844:	ldrb	r3, [r3]
   11848:	cmp	r3, #0
   1184c:	bne	11830 <error@@Base+0x88c>
   11850:	ldr	r2, [r4, #672]	; 0x2a0
   11854:	add	r1, r2, #1008	; 0x3f0
   11858:	ldr	r3, [r2, #4]
   1185c:	cmp	r3, r1
   11860:	bcs	1188c <error@@Base+0x8e8>
   11864:	add	r0, r3, #1
   11868:	mov	r1, #0
   1186c:	str	r0, [r2, #4]
   11870:	strb	r1, [r3]
   11874:	add	sp, sp, #12
   11878:	pop	{r4, r5, r6, r7, pc}
   1187c:	ldr	r0, [pc, #20]	; 11898 <error@@Base+0x8f4>
   11880:	bl	10fa4 <error@@Base>
   11884:	add	sp, sp, #12
   11888:	pop	{r4, r5, r6, r7, pc}
   1188c:	bl	11490 <error@@Base+0x4ec>
   11890:	andeq	r1, r1, r4, lsl #24
   11894:	andeq	r3, r2, r8
   11898:	andeq	r1, r1, r8, lsl ip
   1189c:	push	{r4, r5, lr}
   118a0:	sub	sp, sp, #12
   118a4:	add	r4, sp, #8
   118a8:	str	r0, [r4, #-4]!
   118ac:	mov	r1, #0
   118b0:	mov	r0, r4
   118b4:	bl	10ff4 <error@@Base+0x50>
   118b8:	bl	114dc <error@@Base+0x538>
   118bc:	ldr	r3, [sp, #4]
   118c0:	ldrb	r2, [r3]
   118c4:	cmp	r2, #9
   118c8:	cmpne	r2, #61	; 0x3d
   118cc:	movne	r3, #1
   118d0:	moveq	r3, #0
   118d4:	tst	r2, #223	; 0xdf
   118d8:	moveq	r3, #0
   118dc:	cmp	r3, #0
   118e0:	bne	118ac <error@@Base+0x908>
   118e4:	ldr	r5, [pc, #268]	; 119f8 <error@@Base+0xa54>
   118e8:	ldr	r1, [r5, #672]	; 0x2a0
   118ec:	add	r0, r1, #1008	; 0x3f0
   118f0:	ldr	r2, [r1, #4]
   118f4:	cmp	r2, r0
   118f8:	bcs	119f4 <error@@Base+0xa50>
   118fc:	add	r0, r2, #1
   11900:	str	r0, [r1, #4]
   11904:	strb	r3, [r2]
   11908:	ldr	r2, [sp, #4]
   1190c:	ldrb	r3, [r2]
   11910:	cmp	r3, #9
   11914:	cmpne	r3, #32
   11918:	bne	1192c <error@@Base+0x988>
   1191c:	ldrb	r3, [r2, #1]!
   11920:	cmp	r3, #9
   11924:	cmpne	r3, #32
   11928:	beq	1191c <error@@Base+0x978>
   1192c:	add	r3, r2, #1
   11930:	str	r3, [sp, #4]
   11934:	ldrb	r3, [r2]
   11938:	cmp	r3, #61	; 0x3d
   1193c:	bne	119e4 <error@@Base+0xa40>
   11940:	ldr	r2, [r5, #672]	; 0x2a0
   11944:	add	r1, r2, #1008	; 0x3f0
   11948:	ldr	r3, [r2, #4]
   1194c:	cmp	r3, r1
   11950:	bcs	119f4 <error@@Base+0xa50>
   11954:	add	r0, r3, #1
   11958:	mvn	r1, #126	; 0x7e
   1195c:	str	r0, [r2, #4]
   11960:	strb	r1, [r3]
   11964:	ldr	r2, [sp, #4]
   11968:	ldrb	r3, [r2]
   1196c:	cmp	r3, #32
   11970:	cmpne	r3, #9
   11974:	bne	11988 <error@@Base+0x9e4>
   11978:	ldrb	r3, [r2, #1]!
   1197c:	cmp	r3, #9
   11980:	cmpne	r3, #32
   11984:	beq	11978 <error@@Base+0x9d4>
   11988:	str	r2, [sp, #4]
   1198c:	ldrb	r3, [r2]
   11990:	cmp	r3, #0
   11994:	beq	119b8 <error@@Base+0xa14>
   11998:	mov	r1, #0
   1199c:	mov	r0, r4
   119a0:	bl	10ff4 <error@@Base+0x50>
   119a4:	bl	114dc <error@@Base+0x538>
   119a8:	ldr	r3, [sp, #4]
   119ac:	ldrb	r3, [r3]
   119b0:	cmp	r3, #0
   119b4:	bne	11998 <error@@Base+0x9f4>
   119b8:	ldr	r2, [r5, #672]	; 0x2a0
   119bc:	add	r1, r2, #1008	; 0x3f0
   119c0:	ldr	r3, [r2, #4]
   119c4:	cmp	r3, r1
   119c8:	bcs	119f4 <error@@Base+0xa50>
   119cc:	add	r0, r3, #1
   119d0:	mov	r1, #0
   119d4:	str	r0, [r2, #4]
   119d8:	strb	r1, [r3]
   119dc:	add	sp, sp, #12
   119e0:	pop	{r4, r5, pc}
   119e4:	ldr	r0, [pc, #16]	; 119fc <error@@Base+0xa58>
   119e8:	bl	10fa4 <error@@Base>
   119ec:	add	sp, sp, #12
   119f0:	pop	{r4, r5, pc}
   119f4:	bl	11490 <error@@Base+0x4ec>
   119f8:	andeq	r3, r2, r8
   119fc:	andeq	r1, r1, r8, lsr #24
   11a00:	push	{r4, lr}
   11a04:	mov	r4, r0
   11a08:	bl	11528 <error@@Base+0x584>
   11a0c:	cmp	r0, #0
   11a10:	popne	{r4, pc}
   11a14:	mov	r0, r4
   11a18:	bl	10e24 <abort@plt+0x780>
   11a1c:	ldrb	r3, [r0]
   11a20:	cmp	r3, #0
   11a24:	popeq	{r4, pc}
   11a28:	ldr	r2, [pc, #28]	; 11a4c <error@@Base+0xaa8>
   11a2c:	ldr	r3, [pc, #28]	; 11a50 <error@@Base+0xaac>
   11a30:	ldr	r2, [r2, #672]	; 0x2a0
   11a34:	cmp	r2, r3
   11a38:	beq	11a44 <error@@Base+0xaa0>
   11a3c:	pop	{r4, lr}
   11a40:	b	116a4 <error@@Base+0x700>
   11a44:	pop	{r4, lr}
   11a48:	b	1189c <error@@Base+0x8f8>
   11a4c:	andeq	r3, r2, r8
   11a50:	ldrdeq	r3, [r2], -r4
   11a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a58:	mov	r7, r0
   11a5c:	ldr	r6, [pc, #72]	; 11aac <error@@Base+0xb08>
   11a60:	ldr	r5, [pc, #72]	; 11ab0 <error@@Base+0xb0c>
   11a64:	add	r6, pc, r6
   11a68:	add	r5, pc, r5
   11a6c:	sub	r6, r6, r5
   11a70:	mov	r8, r1
   11a74:	mov	r9, r2
   11a78:	bl	105c4 <calloc@plt-0x20>
   11a7c:	asrs	r6, r6, #2
   11a80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a84:	mov	r4, #0
   11a88:	add	r4, r4, #1
   11a8c:	ldr	r3, [r5], #4
   11a90:	mov	r2, r9
   11a94:	mov	r1, r8
   11a98:	mov	r0, r7
   11a9c:	blx	r3
   11aa0:	cmp	r6, r4
   11aa4:	bne	11a88 <error@@Base+0xae4>
   11aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11aac:	andeq	r1, r1, r8, lsr r4
   11ab0:	andeq	r1, r1, r0, lsr r4
   11ab4:	bx	lr

Disassembly of section .fini:

00011ab8 <.fini>:
   11ab8:	push	{r3, lr}
   11abc:	pop	{r3, pc}
