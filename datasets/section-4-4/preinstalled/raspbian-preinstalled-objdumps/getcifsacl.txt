
raspbian-preinstalled/getcifsacl:     file format elf32-littlearm


Disassembly of section .init:

0000066c <.init>:
 66c:	push	{r3, lr}
 670:	bl	10e0 <dlsym@plt+0x970>
 674:	pop	{r3, pc}

Disassembly of section .plt:

00000678 <__cxa_finalize@plt-0x14>:
 678:	push	{lr}		; (str lr, [sp, #-4]!)
 67c:	ldr	lr, [pc, #4]	; 688 <__cxa_finalize@plt-0x4>
 680:	add	lr, pc, lr
 684:	ldr	pc, [lr, #8]!
 688:	strdeq	r1, [r1], -r4

0000068c <__cxa_finalize@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2292]!	; 0x8f4

00000698 <basename@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2284]!	; 0x8ec

000006a4 <free@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2276]!	; 0x8e4

000006b0 <__stack_chk_fail@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2268]!	; 0x8dc

000006bc <dlerror@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2260]!	; 0x8d4

000006c8 <fwrite@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2252]!	; 0x8cc

000006d4 <getxattr@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2244]!	; 0x8c4

000006e0 <dlopen@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2236]!	; 0x8bc

000006ec <puts@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2228]!	; 0x8b4

000006f8 <malloc@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2220]!	; 0x8ac

00000704 <__libc_start_main@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000710 <__gmon_start__@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2204]!	; 0x89c

0000071c <getopt_long@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2196]!	; 0x894

00000728 <__errno_location@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2188]!	; 0x88c

00000734 <putchar@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2180]!	; 0x884

00000740 <__printf_chk@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2172]!	; 0x87c

0000074c <__fprintf_chk@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2164]!	; 0x874

00000758 <fputc@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2156]!	; 0x86c

00000764 <abort@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2148]!	; 0x864

00000770 <dlsym@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2140]!	; 0x85c

Disassembly of section .text:

0000077c <.text>:
     77c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     780:	mov	r5, #0
     784:	ldr	sl, [pc, #2092]	; fb8 <dlsym@plt+0x848>
     788:	ldr	r7, [pc, #2092]	; fbc <dlsym@plt+0x84c>
     78c:	sub	sp, sp, #20
     790:	mov	r4, r0
     794:	mov	r6, r1
     798:	mov	r9, r5
     79c:	add	sl, pc, sl
     7a0:	add	r7, pc, r7
     7a4:	str	r9, [sp]
     7a8:	mov	r3, #0
     7ac:	mov	r2, r7
     7b0:	mov	r1, r6
     7b4:	mov	r0, r4
     7b8:	bl	71c <getopt_long@plt>
     7bc:	cmn	r0, #1
     7c0:	beq	820 <dlsym@plt+0xb0>
     7c4:	cmp	r0, #114	; 0x72
     7c8:	beq	818 <dlsym@plt+0xa8>
     7cc:	cmp	r0, #118	; 0x76
     7d0:	bne	7a4 <dlsym@plt+0x34>
     7d4:	ldr	r2, [pc, #2020]	; fc0 <dlsym@plt+0x850>
     7d8:	ldr	r1, [pc, #2020]	; fc4 <dlsym@plt+0x854>
     7dc:	add	r2, pc, r2
     7e0:	add	r1, pc, r1
     7e4:	mov	r0, #1
     7e8:	bl	740 <__printf_chk@plt>
     7ec:	mov	r8, #0
     7f0:	ldr	r3, [pc, #2000]	; fc8 <dlsym@plt+0x858>
     7f4:	add	r3, pc, r3
     7f8:	ldrb	r2, [r3]
     7fc:	cmp	r2, #0
     800:	beq	80c <dlsym@plt+0x9c>
     804:	ldr	r0, [r3, #4]
     808:	bl	14f0 <dlsym@plt+0xd80>
     80c:	mov	r0, r8
     810:	add	sp, sp, #20
     814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     818:	mov	r5, #1
     81c:	b	7a4 <dlsym@plt+0x34>
     820:	cmp	r4, #3
     824:	movne	r7, #0
     828:	andeq	r7, r5, #1
     82c:	cmp	r7, #0
     830:	mov	r8, r0
     834:	ldrne	fp, [r6, #8]
     838:	movne	r7, #0
     83c:	bne	86c <dlsym@plt+0xfc>
     840:	cmp	r4, #2
     844:	bne	aa0 <dlsym@plt+0x330>
     848:	cmp	r5, #0
     84c:	ldr	fp, [r6, #4]
     850:	bne	86c <dlsym@plt+0xfc>
     854:	ldr	r4, [pc, #1904]	; fcc <dlsym@plt+0x85c>
     858:	add	r4, pc, r4
     85c:	ldrb	r3, [r4]
     860:	cmp	r3, #0
     864:	movne	r7, r5
     868:	beq	9c0 <dlsym@plt+0x250>
     86c:	ldr	sl, [pc, #1884]	; fd0 <dlsym@plt+0x860>
     870:	mov	r9, #1024	; 0x400
     874:	add	sl, pc, sl
     878:	b	8ac <dlsym@plt+0x13c>
     87c:	bl	6d4 <getxattr@plt>
     880:	cmn	r0, #1
     884:	mov	r6, r0
     888:	bne	8f0 <dlsym@plt+0x180>
     88c:	bl	728 <__errno_location@plt>
     890:	ldr	r2, [r0]
     894:	mov	r0, r4
     898:	cmp	r2, #34	; 0x22
     89c:	bne	8e0 <dlsym@plt+0x170>
     8a0:	bl	6a4 <free@plt>
     8a4:	cmp	r9, #65536	; 0x10000
     8a8:	beq	b58 <dlsym@plt+0x3e8>
     8ac:	mov	r0, r9
     8b0:	bl	6f8 <malloc@plt>
     8b4:	mov	r3, r9
     8b8:	mov	r1, sl
     8bc:	add	r9, r9, #1024	; 0x400
     8c0:	subs	r4, r0, #0
     8c4:	mov	r2, r4
     8c8:	mov	r0, fp
     8cc:	bne	87c <dlsym@plt+0x10c>
     8d0:	ldr	r0, [pc, #1788]	; fd4 <dlsym@plt+0x864>
     8d4:	add	r0, pc, r0
     8d8:	bl	6ec <puts@plt>
     8dc:	b	7f0 <dlsym@plt+0x80>
     8e0:	ldr	r1, [pc, #1776]	; fd8 <dlsym@plt+0x868>
     8e4:	mov	r0, #1
     8e8:	add	r1, pc, r1
     8ec:	bl	740 <__printf_chk@plt>
     8f0:	ldr	r1, [pc, #1764]	; fdc <dlsym@plt+0x86c>
     8f4:	ldmib	r4, {r9, sl}
     8f8:	ldrh	r2, [r4]
     8fc:	add	r1, pc, r1
     900:	mov	r0, #1
     904:	ldr	r8, [r4, #16]
     908:	bl	740 <__printf_chk@plt>
     90c:	ldr	r1, [pc, #1740]	; fe0 <dlsym@plt+0x870>
     910:	add	r9, r4, r9
     914:	ldrh	r2, [r4, #2]
     918:	add	r1, pc, r1
     91c:	mov	r0, #1
     920:	bl	740 <__printf_chk@plt>
     924:	add	r6, r4, r6
     928:	add	r3, r9, #8
     92c:	cmp	r6, r3
     930:	add	sl, r4, sl
     934:	bcc	9b0 <dlsym@plt+0x240>
     938:	ldr	fp, [pc, #1700]	; fe4 <dlsym@plt+0x874>
     93c:	ldr	r2, [pc, #1700]	; fe8 <dlsym@plt+0x878>
     940:	add	fp, pc, fp
     944:	add	r2, pc, r2
     948:	mov	r1, fp
     94c:	mov	r0, #1
     950:	bl	740 <__printf_chk@plt>
     954:	mov	r1, r5
     958:	mov	r0, r9
     95c:	bl	1204 <dlsym@plt+0xa94>
     960:	mov	r0, #10
     964:	bl	734 <putchar@plt>
     968:	add	r3, sl, #8
     96c:	cmp	r6, r3
     970:	bcc	9b0 <dlsym@plt+0x240>
     974:	ldr	r2, [pc, #1648]	; fec <dlsym@plt+0x87c>
     978:	mov	r1, fp
     97c:	add	r2, pc, r2
     980:	mov	r0, #1
     984:	bl	740 <__printf_chk@plt>
     988:	mov	r1, r5
     98c:	mov	r0, sl
     990:	bl	1204 <dlsym@plt+0xa94>
     994:	mov	r0, #10
     998:	bl	734 <putchar@plt>
     99c:	cmp	r8, #0
     9a0:	bne	9f8 <dlsym@plt+0x288>
     9a4:	ldr	r0, [pc, #1604]	; ff0 <dlsym@plt+0x880>
     9a8:	add	r0, pc, r0
     9ac:	bl	6ec <puts@plt>
     9b0:	mov	r0, r4
     9b4:	bl	6a4 <free@plt>
     9b8:	mov	r8, r7
     9bc:	b	7f0 <dlsym@plt+0x80>
     9c0:	add	r0, r4, #4
     9c4:	bl	1438 <dlsym@plt+0xcc8>
     9c8:	subs	r7, r0, #0
     9cc:	moveq	r3, #1
     9d0:	strbeq	r3, [r4]
     9d4:	beq	86c <dlsym@plt+0xfc>
     9d8:	ldr	r3, [pc, #1556]	; ff4 <dlsym@plt+0x884>
     9dc:	ldr	r1, [pc, #1556]	; ff8 <dlsym@plt+0x888>
     9e0:	mov	r0, #1
     9e4:	ldr	r3, [sl, r3]
     9e8:	add	r1, pc, r1
     9ec:	ldr	r2, [r3]
     9f0:	bl	740 <__printf_chk@plt>
     9f4:	b	86c <dlsym@plt+0xfc>
     9f8:	adds	r8, r4, r8
     9fc:	beq	9b0 <dlsym@plt+0x240>
     a00:	ldrb	r2, [r8, #3]
     a04:	ldrb	r3, [r8, #2]
     a08:	orr	r3, r3, r2, lsl #8
     a0c:	add	r3, r8, r3
     a10:	cmp	r6, r3
     a14:	bcc	9b0 <dlsym@plt+0x240>
     a18:	ldrb	r1, [r8, #5]
     a1c:	ldrb	sl, [r8, #4]
     a20:	ldrb	r2, [r8, #6]
     a24:	ldrb	r3, [r8, #7]
     a28:	orr	sl, sl, r1, lsl #8
     a2c:	orr	sl, sl, r2, lsl #16
     a30:	orr	fp, sl, r3, lsl #24
     a34:	cmp	fp, #0
     a38:	ble	9b0 <dlsym@plt+0x240>
     a3c:	ldr	r3, [pc, #1464]	; ffc <dlsym@plt+0x88c>
     a40:	mov	r9, #0
     a44:	add	r3, pc, r3
     a48:	str	r3, [sp, #8]
     a4c:	mov	r3, #8
     a50:	b	a84 <dlsym@plt+0x314>
     a54:	ldrb	r2, [r8, #3]
     a58:	ldrb	r3, [r8, #2]
     a5c:	orr	r1, r3, r2, lsl #8
     a60:	cmp	r1, #15
     a64:	bls	a74 <dlsym@plt+0x304>
     a68:	add	r1, r8, r1
     a6c:	cmp	r6, r1
     a70:	bcs	b70 <dlsym@plt+0x400>
     a74:	add	r9, r9, #1
     a78:	cmp	fp, r9
     a7c:	orr	r3, r3, r2, lsl #8
     a80:	beq	9b0 <dlsym@plt+0x240>
     a84:	add	r8, r8, r3
     a88:	add	r3, r8, #3
     a8c:	cmp	r6, r3
     a90:	bcs	a54 <dlsym@plt+0x2e4>
     a94:	ldrb	r3, [r8, #2]
     a98:	ldrb	r2, [r8, #3]
     a9c:	b	a74 <dlsym@plt+0x304>
     aa0:	ldr	r0, [r6]
     aa4:	bl	698 <basename@plt>
     aa8:	ldr	r1, [pc, #1360]	; 1000 <dlsym@plt+0x890>
     aac:	ldr	r2, [pc, #1360]	; 1004 <dlsym@plt+0x894>
     ab0:	mov	r8, r7
     ab4:	ldr	r4, [sl, r1]
     ab8:	add	r2, pc, r2
     abc:	mov	r1, #1
     ac0:	mov	r5, r0
     ac4:	mov	r3, r0
     ac8:	ldr	r0, [r4]
     acc:	bl	74c <__fprintf_chk@plt>
     ad0:	ldr	r2, [pc, #1328]	; 1008 <dlsym@plt+0x898>
     ad4:	mov	r3, r5
     ad8:	ldr	r0, [r4]
     adc:	add	r2, pc, r2
     ae0:	mov	r1, #1
     ae4:	bl	74c <__fprintf_chk@plt>
     ae8:	ldr	r0, [pc, #1308]	; 100c <dlsym@plt+0x89c>
     aec:	ldr	r3, [r4]
     af0:	mov	r2, #15
     af4:	mov	r1, #1
     af8:	add	r0, pc, r0
     afc:	bl	6c8 <fwrite@plt>
     b00:	ldr	r0, [pc, #1288]	; 1010 <dlsym@plt+0x8a0>
     b04:	ldr	r3, [r4]
     b08:	mov	r2, #27
     b0c:	mov	r1, #1
     b10:	add	r0, pc, r0
     b14:	bl	6c8 <fwrite@plt>
     b18:	ldr	r1, [r4]
     b1c:	mov	r0, #10
     b20:	bl	758 <fputc@plt>
     b24:	ldr	r0, [pc, #1256]	; 1014 <dlsym@plt+0x8a4>
     b28:	ldr	r3, [r4]
     b2c:	mov	r2, #41	; 0x29
     b30:	mov	r1, #1
     b34:	add	r0, pc, r0
     b38:	bl	6c8 <fwrite@plt>
     b3c:	ldr	r0, [pc, #1236]	; 1018 <dlsym@plt+0x8a8>
     b40:	ldr	r3, [r4]
     b44:	mov	r2, #44	; 0x2c
     b48:	mov	r1, #1
     b4c:	add	r0, pc, r0
     b50:	bl	6c8 <fwrite@plt>
     b54:	b	7f0 <dlsym@plt+0x80>
     b58:	ldr	r1, [pc, #1212]	; 101c <dlsym@plt+0x8ac>
     b5c:	mov	r2, r9
     b60:	add	r1, pc, r1
     b64:	mov	r0, #1
     b68:	bl	740 <__printf_chk@plt>
     b6c:	b	7f0 <dlsym@plt+0x80>
     b70:	ldr	r1, [sp, #8]
     b74:	mov	r0, #1
     b78:	bl	740 <__printf_chk@plt>
     b7c:	mov	r1, r5
     b80:	add	r0, r8, #8
     b84:	bl	1204 <dlsym@plt+0xa94>
     b88:	mov	r0, #58	; 0x3a
     b8c:	bl	734 <putchar@plt>
     b90:	cmp	r5, #0
     b94:	ldrb	r2, [r8]
     b98:	bne	e80 <dlsym@plt+0x710>
     b9c:	cmp	r2, #6
     ba0:	addls	pc, pc, r2, lsl #2
     ba4:	b	e6c <dlsym@plt+0x6fc>
     ba8:	b	cb8 <dlsym@plt+0x548>
     bac:	b	ca4 <dlsym@plt+0x534>
     bb0:	b	e6c <dlsym@plt+0x6fc>
     bb4:	b	e6c <dlsym@plt+0x6fc>
     bb8:	b	e6c <dlsym@plt+0x6fc>
     bbc:	b	c90 <dlsym@plt+0x520>
     bc0:	b	bc4 <dlsym@plt+0x454>
     bc4:	ldr	r1, [pc, #1108]	; 1020 <dlsym@plt+0x8b0>
     bc8:	mov	r0, #1
     bcc:	add	r1, pc, r1
     bd0:	bl	740 <__printf_chk@plt>
     bd4:	mov	r0, #47	; 0x2f
     bd8:	bl	734 <putchar@plt>
     bdc:	ldrb	sl, [r8, #1]
     be0:	tst	sl, #1
     be4:	bne	ccc <dlsym@plt+0x55c>
     be8:	tst	sl, #2
     bec:	bne	cec <dlsym@plt+0x57c>
     bf0:	tst	sl, #4
     bf4:	beq	f4c <dlsym@plt+0x7dc>
     bf8:	ldr	r1, [pc, #1060]	; 1024 <dlsym@plt+0x8b4>
     bfc:	mov	r0, #1
     c00:	add	r1, pc, r1
     c04:	bl	740 <__printf_chk@plt>
     c08:	tst	sl, #8
     c0c:	bne	d10 <dlsym@plt+0x5a0>
     c10:	tst	sl, #16
     c14:	bne	d54 <dlsym@plt+0x5e4>
     c18:	mov	r0, #47	; 0x2f
     c1c:	bl	734 <putchar@plt>
     c20:	ldrb	r1, [r8, #5]
     c24:	ldrb	sl, [r8, #4]
     c28:	ldrb	r2, [r8, #6]
     c2c:	ldrb	r3, [r8, #7]
     c30:	orr	sl, sl, r1, lsl #8
     c34:	orr	sl, sl, r2, lsl #16
     c38:	orr	sl, sl, r3, lsl #24
     c3c:	ldr	r3, [pc, #996]	; 1028 <dlsym@plt+0x8b8>
     c40:	cmp	sl, r3
     c44:	beq	d40 <dlsym@plt+0x5d0>
     c48:	ldr	r3, [pc, #988]	; 102c <dlsym@plt+0x8bc>
     c4c:	cmp	sl, r3
     c50:	beq	d2c <dlsym@plt+0x5bc>
     c54:	cmp	sl, #65536	; 0x10000
     c58:	beq	f70 <dlsym@plt+0x800>
     c5c:	ldr	r3, [pc, #972]	; 1030 <dlsym@plt+0x8c0>
     c60:	cmp	sl, r3
     c64:	beq	fa4 <dlsym@plt+0x834>
     c68:	tst	sl, #64	; 0x40
     c6c:	beq	d68 <dlsym@plt+0x5f8>
     c70:	ldr	r1, [pc, #956]	; 1034 <dlsym@plt+0x8c4>
     c74:	mov	r2, sl
     c78:	add	r1, pc, r1
     c7c:	mov	r0, #1
     c80:	bl	740 <__printf_chk@plt>
     c84:	mov	r0, #10
     c88:	bl	734 <putchar@plt>
     c8c:	b	a94 <dlsym@plt+0x324>
     c90:	ldr	r1, [pc, #928]	; 1038 <dlsym@plt+0x8c8>
     c94:	mov	r0, #1
     c98:	add	r1, pc, r1
     c9c:	bl	740 <__printf_chk@plt>
     ca0:	b	bd4 <dlsym@plt+0x464>
     ca4:	ldr	r1, [pc, #912]	; 103c <dlsym@plt+0x8cc>
     ca8:	mov	r0, #1
     cac:	add	r1, pc, r1
     cb0:	bl	740 <__printf_chk@plt>
     cb4:	b	bd4 <dlsym@plt+0x464>
     cb8:	ldr	r1, [pc, #896]	; 1040 <dlsym@plt+0x8d0>
     cbc:	mov	r0, #1
     cc0:	add	r1, pc, r1
     cc4:	bl	740 <__printf_chk@plt>
     cc8:	b	bd4 <dlsym@plt+0x464>
     ccc:	ldr	r1, [pc, #880]	; 1044 <dlsym@plt+0x8d4>
     cd0:	mov	r0, #1
     cd4:	add	r1, pc, r1
     cd8:	bl	740 <__printf_chk@plt>
     cdc:	tst	sl, #2
     ce0:	beq	cfc <dlsym@plt+0x58c>
     ce4:	mov	r0, #124	; 0x7c
     ce8:	bl	734 <putchar@plt>
     cec:	ldr	r1, [pc, #852]	; 1048 <dlsym@plt+0x8d8>
     cf0:	mov	r0, #1
     cf4:	add	r1, pc, r1
     cf8:	bl	740 <__printf_chk@plt>
     cfc:	tst	sl, #4
     d00:	beq	c08 <dlsym@plt+0x498>
     d04:	mov	r0, #124	; 0x7c
     d08:	bl	734 <putchar@plt>
     d0c:	b	bf8 <dlsym@plt+0x488>
     d10:	mov	r0, #124	; 0x7c
     d14:	bl	734 <putchar@plt>
     d18:	ldr	r1, [pc, #812]	; 104c <dlsym@plt+0x8dc>
     d1c:	mov	r0, #1
     d20:	add	r1, pc, r1
     d24:	bl	740 <__printf_chk@plt>
     d28:	b	c10 <dlsym@plt+0x4a0>
     d2c:	ldr	r1, [pc, #796]	; 1050 <dlsym@plt+0x8e0>
     d30:	mov	r0, #1
     d34:	add	r1, pc, r1
     d38:	bl	740 <__printf_chk@plt>
     d3c:	b	c84 <dlsym@plt+0x514>
     d40:	ldr	r1, [pc, #780]	; 1054 <dlsym@plt+0x8e4>
     d44:	mov	r0, #1
     d48:	add	r1, pc, r1
     d4c:	bl	740 <__printf_chk@plt>
     d50:	b	c84 <dlsym@plt+0x514>
     d54:	mov	r0, #124	; 0x7c
     d58:	bl	734 <putchar@plt>
     d5c:	mov	r0, #73	; 0x49
     d60:	bl	734 <putchar@plt>
     d64:	b	c18 <dlsym@plt+0x4a8>
     d68:	ldr	r3, [pc, #744]	; 1058 <dlsym@plt+0x8e8>
     d6c:	tst	sl, r3
     d70:	beq	e1c <dlsym@plt+0x6ac>
     d74:	ldr	r3, [pc, #692]	; 1030 <dlsym@plt+0x8c0>
     d78:	bics	r3, r3, sl
     d7c:	beq	eec <dlsym@plt+0x77c>
     d80:	ldr	r2, [pc, #724]	; 105c <dlsym@plt+0x8ec>
     d84:	ldr	r3, [pc, #720]	; 105c <dlsym@plt+0x8ec>
     d88:	and	r2, sl, r2
     d8c:	cmp	r2, r3
     d90:	beq	f7c <dlsym@plt+0x80c>
     d94:	ldr	r3, [pc, #708]	; 1060 <dlsym@plt+0x8f0>
     d98:	and	r1, sl, r3
     d9c:	cmp	r1, r3
     da0:	bne	f34 <dlsym@plt+0x7c4>
     da4:	ldr	r3, [pc, #696]	; 1064 <dlsym@plt+0x8f4>
     da8:	tst	sl, r3
     dac:	addeq	r3, r3, #-1073741824	; 0xc0000000
     db0:	andeq	r3, r3, sl
     db4:	bne	f20 <dlsym@plt+0x7b0>
     db8:	ldr	r2, [pc, #672]	; 1060 <dlsym@plt+0x8f0>
     dbc:	cmp	r1, r2
     dc0:	beq	f90 <dlsym@plt+0x820>
     dc4:	ldr	r2, [pc, #668]	; 1068 <dlsym@plt+0x8f8>
     dc8:	cmp	r3, r2
     dcc:	bne	dd8 <dlsym@plt+0x668>
     dd0:	mov	r0, #87	; 0x57
     dd4:	bl	734 <putchar@plt>
     dd8:	tst	sl, #32
     ddc:	beq	de8 <dlsym@plt+0x678>
     de0:	mov	r0, #88	; 0x58
     de4:	bl	734 <putchar@plt>
     de8:	tst	sl, #65536	; 0x10000
     dec:	beq	df8 <dlsym@plt+0x688>
     df0:	mov	r0, #68	; 0x44
     df4:	bl	734 <putchar@plt>
     df8:	tst	sl, #262144	; 0x40000
     dfc:	beq	e08 <dlsym@plt+0x698>
     e00:	mov	r0, #80	; 0x50
     e04:	bl	734 <putchar@plt>
     e08:	tst	sl, #524288	; 0x80000
     e0c:	beq	c84 <dlsym@plt+0x514>
     e10:	mov	r0, #79	; 0x4f
     e14:	bl	734 <putchar@plt>
     e18:	b	c84 <dlsym@plt+0x514>
     e1c:	ldr	r3, [pc, #576]	; 1064 <dlsym@plt+0x8f4>
     e20:	tst	sl, r3
     e24:	addeq	r3, r3, #-1073741824	; 0xc0000000
     e28:	andeq	r3, r3, sl
     e2c:	beq	e40 <dlsym@plt+0x6d0>
     e30:	ldr	r2, [pc, #560]	; 1068 <dlsym@plt+0x8f8>
     e34:	and	r3, sl, r2
     e38:	cmp	r3, r2
     e3c:	bne	f08 <dlsym@plt+0x798>
     e40:	ldr	r2, [pc, #488]	; 1030 <dlsym@plt+0x8c0>
     e44:	bics	r2, r2, sl
     e48:	beq	f90 <dlsym@plt+0x820>
     e4c:	ldr	r2, [pc, #520]	; 105c <dlsym@plt+0x8ec>
     e50:	and	r2, r2, sl
     e54:	ldr	r1, [pc, #512]	; 105c <dlsym@plt+0x8ec>
     e58:	cmp	r2, r1
     e5c:	beq	f90 <dlsym@plt+0x820>
     e60:	ldr	r1, [pc, #504]	; 1060 <dlsym@plt+0x8f0>
     e64:	and	r1, r1, sl
     e68:	b	db8 <dlsym@plt+0x648>
     e6c:	ldr	r1, [pc, #504]	; 106c <dlsym@plt+0x8fc>
     e70:	mov	r0, #1
     e74:	add	r1, pc, r1
     e78:	bl	740 <__printf_chk@plt>
     e7c:	b	bd4 <dlsym@plt+0x464>
     e80:	ldr	sl, [pc, #488]	; 1070 <dlsym@plt+0x900>
     e84:	mov	r0, #1
     e88:	add	sl, pc, sl
     e8c:	mov	r1, sl
     e90:	bl	740 <__printf_chk@plt>
     e94:	mov	r0, #47	; 0x2f
     e98:	bl	734 <putchar@plt>
     e9c:	mov	r1, sl
     ea0:	ldrb	r2, [r8, #1]
     ea4:	mov	r0, #1
     ea8:	bl	740 <__printf_chk@plt>
     eac:	mov	r0, #47	; 0x2f
     eb0:	bl	734 <putchar@plt>
     eb4:	ldrb	r1, [r8, #5]
     eb8:	ldrb	r0, [r8, #6]
     ebc:	ldrb	r3, [r8, #4]
     ec0:	ldrb	r2, [r8, #7]
     ec4:	orr	r3, r3, r1, lsl #8
     ec8:	ldr	r1, [pc, #420]	; 1074 <dlsym@plt+0x904>
     ecc:	orr	r3, r3, r0, lsl #16
     ed0:	orr	r2, r3, r2, lsl #24
     ed4:	add	r1, pc, r1
     ed8:	mov	r0, #1
     edc:	bl	740 <__printf_chk@plt>
     ee0:	ldrb	r3, [r8, #2]
     ee4:	ldrb	r2, [r8, #3]
     ee8:	b	a74 <dlsym@plt+0x304>
     eec:	ldr	r3, [pc, #368]	; 1064 <dlsym@plt+0x8f4>
     ef0:	tst	sl, r3
     ef4:	beq	f88 <dlsym@plt+0x818>
     ef8:	ldr	r2, [pc, #360]	; 1068 <dlsym@plt+0x8f8>
     efc:	and	r3, sl, r2
     f00:	cmp	r3, r2
     f04:	beq	f90 <dlsym@plt+0x820>
     f08:	ldr	r1, [pc, #360]	; 1078 <dlsym@plt+0x908>
     f0c:	mov	r2, sl
     f10:	add	r1, pc, r1
     f14:	mov	r0, #1
     f18:	bl	740 <__printf_chk@plt>
     f1c:	b	c84 <dlsym@plt+0x514>
     f20:	ldr	r1, [pc, #320]	; 1068 <dlsym@plt+0x8f8>
     f24:	and	r3, sl, r1
     f28:	cmp	r3, r1
     f2c:	beq	e54 <dlsym@plt+0x6e4>
     f30:	b	f08 <dlsym@plt+0x798>
     f34:	ldr	r1, [pc, #320]	; 107c <dlsym@plt+0x90c>
     f38:	mov	r2, sl
     f3c:	add	r1, pc, r1
     f40:	mov	r0, #1
     f44:	bl	740 <__printf_chk@plt>
     f48:	b	c84 <dlsym@plt+0x514>
     f4c:	tst	sl, #8
     f50:	bne	d18 <dlsym@plt+0x5a8>
     f54:	tst	sl, #16
     f58:	bne	d5c <dlsym@plt+0x5ec>
     f5c:	ldr	r1, [pc, #284]	; 1080 <dlsym@plt+0x910>
     f60:	mov	r0, #1
     f64:	add	r1, pc, r1
     f68:	bl	740 <__printf_chk@plt>
     f6c:	b	c18 <dlsym@plt+0x4a8>
     f70:	mov	r0, #68	; 0x44
     f74:	bl	734 <putchar@plt>
     f78:	b	c84 <dlsym@plt+0x514>
     f7c:	ldr	r3, [pc, #224]	; 1064 <dlsym@plt+0x8f4>
     f80:	tst	sl, r3
     f84:	bne	f20 <dlsym@plt+0x7b0>
     f88:	add	r3, r3, #-1073741824	; 0xc0000000
     f8c:	and	r3, r3, sl
     f90:	mov	r0, #82	; 0x52
     f94:	str	r3, [sp, #12]
     f98:	bl	734 <putchar@plt>
     f9c:	ldr	r3, [sp, #12]
     fa0:	b	dc4 <dlsym@plt+0x654>
     fa4:	ldr	r1, [pc, #216]	; 1084 <dlsym@plt+0x914>
     fa8:	mov	r0, #1
     fac:	add	r1, pc, r1
     fb0:	bl	740 <__printf_chk@plt>
     fb4:	b	c84 <dlsym@plt+0x514>
     fb8:	ldrdeq	r1, [r1], -r8
     fbc:	andeq	r0, r0, r8, ror #31
     fc0:	muleq	r0, r8, pc	; <UNPREDICTABLE>
     fc4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
     fc8:	andeq	r1, r1, r0, lsl r8
     fcc:	andeq	r1, r1, ip, lsr #15
     fd0:	muleq	r0, ip, r0
     fd4:	andeq	r1, r0, r8
     fd8:	andeq	r1, r0, r8, lsr r0
     fdc:	andeq	r1, r0, r8, lsr r0
     fe0:	andeq	r1, r0, ip, lsr #32
     fe4:	andeq	r1, r0, ip, lsl r0
     fe8:	andeq	r1, r0, r0, lsl r0
     fec:	andeq	r0, r0, r4, ror #31
     ff0:	andeq	r1, r0, r4, lsr r0
     ff4:	andeq	r0, r0, r0, ror r0
     ff8:	muleq	r0, r4, lr
     ffc:	andeq	r0, r0, r4, lsr #30
    1000:	andeq	r0, r0, ip, rrx
    1004:	ldrdeq	r0, [r0], -r4
    1008:	strdeq	r0, [r0], -r8
    100c:	strdeq	r0, [r0], -ip
    1010:	strdeq	r0, [r0], -r4
    1014:	andeq	r0, r0, ip, ror #25
    1018:	andeq	r0, r0, r0, lsl #26
    101c:	andeq	r0, r0, r0, asr sp
    1020:	andeq	r0, r0, ip, asr #27
    1024:			; <UNDEFINED> instruction: 0x00000db8
    1028:			; <UNDEFINED> instruction: 0x001f01ff
    102c:			; <UNDEFINED> instruction: 0x001301bf
    1030:	andseq	r0, r2, r9, lsr #1
    1034:	strdeq	r0, [r0], -r8
    1038:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    103c:	ldrdeq	r0, [r0], -r4
    1040:			; <UNDEFINED> instruction: 0x00000cb8
    1044:	ldrdeq	r0, [r0], -ip
    1048:	andeq	r0, r0, r0, asr #25
    104c:	muleq	r0, ip, ip
    1050:	muleq	r0, r8, ip
    1054:	andeq	r0, r0, ip, ror ip
    1058:	andhi	r0, r2, r9, lsl #1
    105c:	andsge	r0, r2, r1, lsr #1
    1060:	andseq	r0, r2, r9, lsl #1
    1064:	andmi	r0, r0, r6, lsl r1
    1068:	andeq	r0, r0, r6, lsl r1
    106c:	andeq	r0, r0, r4, lsr fp
    1070:	andeq	r0, r0, r8, ror #21
    1074:	andeq	r0, r0, r8, ror sl
    1078:	andeq	r0, r0, r0, ror #20
    107c:	andeq	r0, r0, r4, lsr sl
    1080:	andeq	r0, r0, ip, asr sl
    1084:	andeq	r0, r0, r8, lsr #20
    1088:	mov	fp, #0
    108c:	mov	lr, #0
    1090:	pop	{r1}		; (ldr r1, [sp], #4)
    1094:	mov	r2, sp
    1098:	push	{r2}		; (str r2, [sp, #-4]!)
    109c:	push	{r0}		; (str r0, [sp, #-4]!)
    10a0:	ldr	sl, [pc, #40]	; 10d0 <dlsym@plt+0x960>
    10a4:	add	r3, pc, #36	; 0x24
    10a8:	add	sl, sl, r3
    10ac:	ldr	ip, [pc, #32]	; 10d4 <dlsym@plt+0x964>
    10b0:	ldr	ip, [sl, ip]
    10b4:	push	{ip}		; (str ip, [sp, #-4]!)
    10b8:	ldr	r3, [pc, #24]	; 10d8 <dlsym@plt+0x968>
    10bc:	ldr	r3, [sl, r3]
    10c0:	ldr	r0, [pc, #20]	; 10dc <dlsym@plt+0x96c>
    10c4:	ldr	r0, [sl, r0]
    10c8:	bl	704 <__libc_start_main@plt>
    10cc:	bl	764 <abort@plt>
    10d0:	andeq	r0, r1, ip, lsr #29
    10d4:	andeq	r0, r0, ip, asr r0
    10d8:	andeq	r0, r0, r8, ror r0
    10dc:	andeq	r0, r0, ip, ror r0
    10e0:	ldr	r3, [pc, #20]	; 10fc <dlsym@plt+0x98c>
    10e4:	ldr	r2, [pc, #20]	; 1100 <dlsym@plt+0x990>
    10e8:	add	r3, pc, r3
    10ec:	ldr	r2, [r3, r2]
    10f0:	cmp	r2, #0
    10f4:	bxeq	lr
    10f8:	b	710 <__gmon_start__@plt>
    10fc:	andeq	r0, r1, ip, lsl #29
    1100:	andeq	r0, r0, r4, ror r0
    1104:	ldr	r0, [pc, #44]	; 1138 <dlsym@plt+0x9c8>
    1108:	ldr	r3, [pc, #44]	; 113c <dlsym@plt+0x9cc>
    110c:	add	r0, pc, r0
    1110:	add	r3, pc, r3
    1114:	cmp	r3, r0
    1118:	ldr	r3, [pc, #32]	; 1140 <dlsym@plt+0x9d0>
    111c:	add	r3, pc, r3
    1120:	bxeq	lr
    1124:	ldr	r2, [pc, #24]	; 1144 <dlsym@plt+0x9d4>
    1128:	ldr	r3, [r3, r2]
    112c:	cmp	r3, #0
    1130:	bxeq	lr
    1134:	bx	r3
    1138:	strdeq	r0, [r1], -r4
    113c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    1140:	andeq	r0, r1, r8, asr lr
    1144:	andeq	r0, r0, r4, rrx
    1148:	ldr	r0, [pc, #56]	; 1188 <dlsym@plt+0xa18>
    114c:	ldr	r3, [pc, #56]	; 118c <dlsym@plt+0xa1c>
    1150:	add	r0, pc, r0
    1154:	add	r3, pc, r3
    1158:	sub	r1, r3, r0
    115c:	ldr	r3, [pc, #44]	; 1190 <dlsym@plt+0xa20>
    1160:	asr	r1, r1, #2
    1164:	add	r3, pc, r3
    1168:	add	r1, r1, r1, lsr #31
    116c:	asrs	r1, r1, #1
    1170:	bxeq	lr
    1174:	ldr	r2, [pc, #24]	; 1194 <dlsym@plt+0xa24>
    1178:	ldr	r3, [r3, r2]
    117c:	cmp	r3, #0
    1180:	bxeq	lr
    1184:	bx	r3
    1188:			; <UNDEFINED> instruction: 0x00010eb0
    118c:	andeq	r0, r1, ip, lsr #29
    1190:	andeq	r0, r1, r0, lsl lr
    1194:	andeq	r0, r0, r0, lsl #1
    1198:	ldr	r3, [pc, #76]	; 11ec <dlsym@plt+0xa7c>
    119c:	ldr	r2, [pc, #76]	; 11f0 <dlsym@plt+0xa80>
    11a0:	add	r3, pc, r3
    11a4:	add	r2, pc, r2
    11a8:	ldrb	r3, [r3]
    11ac:	cmp	r3, #0
    11b0:	bxne	lr
    11b4:	ldr	r3, [pc, #56]	; 11f4 <dlsym@plt+0xa84>
    11b8:	push	{r4, lr}
    11bc:	ldr	r3, [r2, r3]
    11c0:	cmp	r3, #0
    11c4:	beq	11d4 <dlsym@plt+0xa64>
    11c8:	ldr	r3, [pc, #40]	; 11f8 <dlsym@plt+0xa88>
    11cc:	ldr	r0, [pc, r3]
    11d0:	bl	68c <__cxa_finalize@plt>
    11d4:	bl	1104 <dlsym@plt+0x994>
    11d8:	ldr	r3, [pc, #28]	; 11fc <dlsym@plt+0xa8c>
    11dc:	mov	r2, #1
    11e0:	add	r3, pc, r3
    11e4:	strb	r2, [r3]
    11e8:	pop	{r4, pc}
    11ec:	andeq	r0, r1, r0, ror #28
    11f0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    11f4:	andeq	r0, r0, r0, rrx
    11f8:	andeq	r0, r1, r0, lsr lr
    11fc:	andeq	r0, r1, r0, lsr #28
    1200:	b	1148 <dlsym@plt+0x9d8>
    1204:	ldr	r3, [pc, #432]	; 13bc <dlsym@plt+0xc4c>
    1208:	ldr	r2, [pc, #432]	; 13c0 <dlsym@plt+0xc50>
    120c:	add	r3, pc, r3
    1210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1214:	sub	sp, sp, #28
    1218:	ldr	r5, [r3, r2]
    121c:	cmp	r1, #0
    1220:	mov	r4, r0
    1224:	ldr	r3, [r5]
    1228:	str	r3, [sp, #20]
    122c:	bne	1244 <dlsym@plt+0xad4>
    1230:	ldr	r3, [pc, #396]	; 13c4 <dlsym@plt+0xc54>
    1234:	add	r3, pc, r3
    1238:	ldrb	r2, [r3]
    123c:	cmp	r2, #0
    1240:	bne	1380 <dlsym@plt+0xc10>
    1244:	ldr	r1, [pc, #380]	; 13c8 <dlsym@plt+0xc58>
    1248:	ldrb	r2, [r4]
    124c:	add	r1, pc, r1
    1250:	mov	r0, #1
    1254:	bl	740 <__printf_chk@plt>
    1258:	ldrb	sl, [r4, #6]
    125c:	ldrb	r0, [r4, #4]
    1260:	ldrb	r8, [r4, #5]
    1264:	mov	r9, #0
    1268:	lsr	r1, sl, #24
    126c:	str	r1, [sp, #4]
    1270:	lsl	r1, sl, #8
    1274:	str	r1, [sp]
    1278:	mov	r1, #0
    127c:	lsr	r3, r8, #16
    1280:	strd	r0, [sp, #8]
    1284:	ldrd	r0, [sp]
    1288:	lsl	r2, r8, #16
    128c:	ldrb	r8, [r4, #7]
    1290:	adds	r0, r0, r2
    1294:	ldr	ip, [sp, #8]
    1298:	adc	r1, r1, r3
    129c:	adds	sl, r0, r8
    12a0:	mov	r0, sl
    12a4:	ldrb	sl, [r4, #2]
    12a8:	lsl	r2, ip, #24
    12ac:	ldrb	r7, [r4, #3]
    12b0:	adc	fp, r1, r9
    12b4:	mov	r6, #0
    12b8:	adds	r0, r0, r2
    12bc:	lsr	r3, ip, #8
    12c0:	adc	r1, fp, r3
    12c4:	adds	r0, r0, r6
    12c8:	adc	r1, r1, r7
    12cc:	lsl	r9, sl, #8
    12d0:	adds	r2, r6, r0
    12d4:	adc	r3, r9, r1
    12d8:	mov	r1, #0
    12dc:	mvn	r0, #0
    12e0:	cmp	r3, r1
    12e4:	cmpeq	r2, r0
    12e8:	bls	136c <dlsym@plt+0xbfc>
    12ec:	ldr	r1, [pc, #216]	; 13cc <dlsym@plt+0xc5c>
    12f0:	mov	r0, #1
    12f4:	add	r1, pc, r1
    12f8:	bl	740 <__printf_chk@plt>
    12fc:	ldrb	r3, [r4, #1]
    1300:	cmp	r3, #0
    1304:	beq	1354 <dlsym@plt+0xbe4>
    1308:	ldr	r7, [pc, #192]	; 13d0 <dlsym@plt+0xc60>
    130c:	mov	r6, #0
    1310:	add	r7, pc, r7
    1314:	add	r3, r6, #2
    1318:	mov	r1, r7
    131c:	add	r0, r4, r3, lsl #2
    1320:	ldrb	r3, [r4, r3, lsl #2]
    1324:	ldrb	lr, [r0, #1]
    1328:	ldrb	ip, [r0, #2]
    132c:	ldrb	r2, [r0, #3]
    1330:	mov	r0, #1
    1334:	orr	r3, r3, lr, lsl #8
    1338:	orr	r3, r3, ip, lsl #16
    133c:	orr	r2, r3, r2, lsl #24
    1340:	bl	740 <__printf_chk@plt>
    1344:	ldrb	r3, [r4, #1]
    1348:	add	r6, r6, #1
    134c:	cmp	r3, r6
    1350:	bgt	1314 <dlsym@plt+0xba4>
    1354:	ldr	r2, [sp, #20]
    1358:	ldr	r3, [r5]
    135c:	cmp	r2, r3
    1360:	bne	13b8 <dlsym@plt+0xc48>
    1364:	add	sp, sp, #28
    1368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    136c:	ldr	r1, [pc, #96]	; 13d4 <dlsym@plt+0xc64>
    1370:	mov	r0, #1
    1374:	add	r1, pc, r1
    1378:	bl	740 <__printf_chk@plt>
    137c:	b	12fc <dlsym@plt+0xb8c>
    1380:	ldr	r0, [r3, #4]
    1384:	add	r2, sp, #16
    1388:	mov	r1, r4
    138c:	bl	151c <dlsym@plt+0xdac>
    1390:	cmp	r0, #0
    1394:	bne	1244 <dlsym@plt+0xad4>
    1398:	ldr	r1, [pc, #56]	; 13d8 <dlsym@plt+0xc68>
    139c:	ldr	r2, [sp, #16]
    13a0:	add	r1, pc, r1
    13a4:	mov	r0, #1
    13a8:	bl	740 <__printf_chk@plt>
    13ac:	ldr	r0, [sp, #16]
    13b0:	bl	6a4 <free@plt>
    13b4:	b	1354 <dlsym@plt+0xbe4>
    13b8:	bl	6b0 <__stack_chk_fail@plt>
    13bc:	andeq	r0, r1, r8, ror #26
    13c0:	andeq	r0, r0, r8, rrx
    13c4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    13c8:	andeq	r0, r0, ip, lsl #10
    13cc:	andeq	r0, r0, r4, ror r4
    13d0:	andeq	r0, r0, r0, ror #8
    13d4:	andeq	r0, r0, ip, ror #7
    13d8:			; <UNDEFINED> instruction: 0x000003b4
    13dc:	push	{r4, r5, r6, lr}
    13e0:	mov	r4, r0
    13e4:	bl	6bc <dlerror@plt>
    13e8:	ldr	r3, [pc, #60]	; 142c <dlsym@plt+0xcbc>
    13ec:	mov	r1, r4
    13f0:	add	r3, pc, r3
    13f4:	ldr	r4, [pc, #52]	; 1430 <dlsym@plt+0xcc0>
    13f8:	ldr	r0, [r3]
    13fc:	bl	770 <dlsym@plt>
    1400:	add	r4, pc, r4
    1404:	subs	r5, r0, #0
    1408:	beq	1414 <dlsym@plt+0xca4>
    140c:	mov	r0, r5
    1410:	pop	{r4, r5, r6, pc}
    1414:	bl	6bc <dlerror@plt>
    1418:	ldr	r3, [pc, #20]	; 1434 <dlsym@plt+0xcc4>
    141c:	ldr	r3, [r4, r3]
    1420:	str	r0, [r3]
    1424:	mov	r0, r5
    1428:	pop	{r4, r5, r6, pc}
    142c:	andeq	r0, r1, ip, lsl ip
    1430:	andeq	r0, r1, r4, ror fp
    1434:	andeq	r0, r0, r0, ror r0
    1438:	push	{r4, r5, r6, lr}
    143c:	mov	r6, r0
    1440:	ldr	r5, [pc, #144]	; 14d8 <dlsym@plt+0xd68>
    1444:	ldr	r4, [pc, #144]	; 14dc <dlsym@plt+0xd6c>
    1448:	add	r5, pc, r5
    144c:	add	r4, pc, r4
    1450:	ldr	r3, [r5]
    1454:	cmp	r3, #0
    1458:	beq	1484 <dlsym@plt+0xd14>
    145c:	ldr	r0, [pc, #124]	; 14e0 <dlsym@plt+0xd70>
    1460:	add	r0, pc, r0
    1464:	bl	13dc <dlsym@plt+0xc6c>
    1468:	subs	r2, r0, #0
    146c:	beq	14bc <dlsym@plt+0xd4c>
    1470:	ldr	r3, [pc, #108]	; 14e4 <dlsym@plt+0xd74>
    1474:	mov	r0, r6
    1478:	ldr	r1, [r4, r3]
    147c:	pop	{r4, r5, r6, lr}
    1480:	bx	r2
    1484:	ldr	r0, [pc, #92]	; 14e8 <dlsym@plt+0xd78>
    1488:	mov	r1, #1
    148c:	add	r0, pc, r0
    1490:	bl	6e0 <dlopen@plt>
    1494:	cmp	r0, #0
    1498:	str	r0, [r5]
    149c:	bne	145c <dlsym@plt+0xcec>
    14a0:	bl	6bc <dlerror@plt>
    14a4:	ldr	r2, [pc, #56]	; 14e4 <dlsym@plt+0xd74>
    14a8:	mvn	r3, #4
    14ac:	ldr	r2, [r4, r2]
    14b0:	str	r0, [r2]
    14b4:	mov	r0, r3
    14b8:	pop	{r4, r5, r6, pc}
    14bc:	ldr	r1, [pc, #32]	; 14e4 <dlsym@plt+0xd74>
    14c0:	ldr	r2, [pc, #36]	; 14ec <dlsym@plt+0xd7c>
    14c4:	mvn	r3, #37	; 0x25
    14c8:	ldr	r1, [r4, r1]
    14cc:	add	r2, pc, r2
    14d0:	str	r2, [r1]
    14d4:	b	14b4 <dlsym@plt+0xd44>
    14d8:	andeq	r0, r1, r4, asr #23
    14dc:	andeq	r0, r1, r8, lsr #22
    14e0:	andeq	r0, r0, r4, lsr #11
    14e4:	andeq	r0, r0, r0, ror r0
    14e8:	andeq	r0, r0, r8, asr r5
    14ec:	andeq	r0, r0, r0, asr r5
    14f0:	push	{r4, lr}
    14f4:	mov	r4, r0
    14f8:	ldr	r0, [pc, #24]	; 1518 <dlsym@plt+0xda8>
    14fc:	add	r0, pc, r0
    1500:	bl	13dc <dlsym@plt+0xc6c>
    1504:	subs	r3, r0, #0
    1508:	popeq	{r4, pc}
    150c:	mov	r0, r4
    1510:	pop	{r4, lr}
    1514:	bx	r3
    1518:	andeq	r0, r0, r8, asr #10
    151c:	push	{r4, r5, r6, lr}
    1520:	mov	r4, r0
    1524:	ldr	r0, [pc, #80]	; 157c <dlsym@plt+0xe0c>
    1528:	mov	r5, r1
    152c:	add	r0, pc, r0
    1530:	mov	r6, r2
    1534:	bl	13dc <dlsym@plt+0xc6c>
    1538:	ldr	r3, [pc, #64]	; 1580 <dlsym@plt+0xe10>
    153c:	add	r3, pc, r3
    1540:	subs	lr, r0, #0
    1544:	beq	1560 <dlsym@plt+0xdf0>
    1548:	mov	r2, r6
    154c:	mov	r1, r5
    1550:	mov	r0, r4
    1554:	mov	r3, lr
    1558:	pop	{r4, r5, r6, lr}
    155c:	bx	r3
    1560:	ldr	r1, [pc, #28]	; 1584 <dlsym@plt+0xe14>
    1564:	ldr	r2, [pc, #28]	; 1588 <dlsym@plt+0xe18>
    1568:	mvn	r0, #37	; 0x25
    156c:	ldr	r1, [r3, r1]
    1570:	add	r2, pc, r2
    1574:	str	r2, [r1]
    1578:	pop	{r4, r5, r6, pc}
    157c:	andeq	r0, r0, r0, lsr r5
    1580:	andeq	r0, r1, r8, lsr sl
    1584:	andeq	r0, r0, r0, ror r0
    1588:	andeq	r0, r0, r4, lsl #10
    158c:	push	{r4, r5, r6, lr}
    1590:	mov	r4, r0
    1594:	ldr	r0, [pc, #80]	; 15ec <dlsym@plt+0xe7c>
    1598:	mov	r5, r1
    159c:	add	r0, pc, r0
    15a0:	mov	r6, r2
    15a4:	bl	13dc <dlsym@plt+0xc6c>
    15a8:	ldr	r3, [pc, #64]	; 15f0 <dlsym@plt+0xe80>
    15ac:	add	r3, pc, r3
    15b0:	subs	lr, r0, #0
    15b4:	beq	15d0 <dlsym@plt+0xe60>
    15b8:	mov	r2, r6
    15bc:	mov	r1, r5
    15c0:	mov	r0, r4
    15c4:	mov	r3, lr
    15c8:	pop	{r4, r5, r6, lr}
    15cc:	bx	r3
    15d0:	ldr	r1, [pc, #28]	; 15f4 <dlsym@plt+0xe84>
    15d4:	ldr	r2, [pc, #28]	; 15f8 <dlsym@plt+0xe88>
    15d8:	mvn	r0, #37	; 0x25
    15dc:	ldr	r1, [r3, r1]
    15e0:	add	r2, pc, r2
    15e4:	str	r2, [r1]
    15e8:	pop	{r4, r5, r6, pc}
    15ec:	andeq	r0, r0, r0, lsl #10
    15f0:	andeq	r0, r1, r8, asr #19
    15f4:	andeq	r0, r0, r0, ror r0
    15f8:	ldrdeq	r0, [r0], -r4
    15fc:	push	{r4, r5, r6, r7, r8, lr}
    1600:	mov	r4, r0
    1604:	ldr	r0, [pc, #88]	; 1664 <dlsym@plt+0xef4>
    1608:	mov	r5, r1
    160c:	add	r0, pc, r0
    1610:	mov	r6, r2
    1614:	mov	r7, r3
    1618:	bl	13dc <dlsym@plt+0xc6c>
    161c:	ldr	ip, [pc, #68]	; 1668 <dlsym@plt+0xef8>
    1620:	add	ip, pc, ip
    1624:	subs	lr, r0, #0
    1628:	beq	1648 <dlsym@plt+0xed8>
    162c:	mov	r3, r7
    1630:	mov	r2, r6
    1634:	mov	r1, r5
    1638:	mov	r0, r4
    163c:	mov	ip, lr
    1640:	pop	{r4, r5, r6, r7, r8, lr}
    1644:	bx	ip
    1648:	ldr	r2, [pc, #28]	; 166c <dlsym@plt+0xefc>
    164c:	ldr	r3, [pc, #28]	; 1670 <dlsym@plt+0xf00>
    1650:	mvn	r0, #37	; 0x25
    1654:	ldr	r2, [ip, r2]
    1658:	add	r3, pc, r3
    165c:	str	r3, [r2]
    1660:	pop	{r4, r5, r6, r7, r8, pc}
    1664:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1668:	andeq	r0, r1, r4, asr r9
    166c:	andeq	r0, r0, r0, ror r0
    1670:	muleq	r0, ip, r4
    1674:	push	{r4, r5, r6, r7, r8, lr}
    1678:	mov	r4, r0
    167c:	ldr	r0, [pc, #88]	; 16dc <dlsym@plt+0xf6c>
    1680:	mov	r5, r1
    1684:	add	r0, pc, r0
    1688:	mov	r6, r2
    168c:	mov	r7, r3
    1690:	bl	13dc <dlsym@plt+0xc6c>
    1694:	ldr	ip, [pc, #68]	; 16e0 <dlsym@plt+0xf70>
    1698:	add	ip, pc, ip
    169c:	subs	lr, r0, #0
    16a0:	beq	16c0 <dlsym@plt+0xf50>
    16a4:	mov	r3, r7
    16a8:	mov	r2, r6
    16ac:	mov	r1, r5
    16b0:	mov	r0, r4
    16b4:	mov	ip, lr
    16b8:	pop	{r4, r5, r6, r7, r8, lr}
    16bc:	bx	ip
    16c0:	ldr	r2, [pc, #28]	; 16e4 <dlsym@plt+0xf74>
    16c4:	ldr	r3, [pc, #28]	; 16e8 <dlsym@plt+0xf78>
    16c8:	mvn	r0, #37	; 0x25
    16cc:	ldr	r2, [ip, r2]
    16d0:	add	r3, pc, r3
    16d4:	str	r3, [r2]
    16d8:	pop	{r4, r5, r6, r7, r8, pc}
    16dc:	muleq	r0, r8, r4
    16e0:	ldrdeq	r0, [r1], -ip
    16e4:	andeq	r0, r0, r0, ror r0
    16e8:	andeq	r0, r0, r4, ror #8
    16ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    16f0:	mov	r7, r0
    16f4:	ldr	r6, [pc, #72]	; 1744 <dlsym@plt+0xfd4>
    16f8:	ldr	r5, [pc, #72]	; 1748 <dlsym@plt+0xfd8>
    16fc:	add	r6, pc, r6
    1700:	add	r5, pc, r5
    1704:	sub	r6, r6, r5
    1708:	mov	r8, r1
    170c:	mov	r9, r2
    1710:	bl	66c <__cxa_finalize@plt-0x20>
    1714:	asrs	r6, r6, #2
    1718:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    171c:	mov	r4, #0
    1720:	add	r4, r4, #1
    1724:	ldr	r3, [r5], #4
    1728:	mov	r2, r9
    172c:	mov	r1, r8
    1730:	mov	r0, r7
    1734:	blx	r3
    1738:	cmp	r6, r4
    173c:	bne	1720 <dlsym@plt+0xfb0>
    1740:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1744:	andeq	r0, r1, ip, ror #14
    1748:	andeq	r0, r1, r4, ror #14
    174c:	bx	lr

Disassembly of section .fini:

00001750 <.fini>:
    1750:	push	{r3, lr}
    1754:	pop	{r3, pc}
