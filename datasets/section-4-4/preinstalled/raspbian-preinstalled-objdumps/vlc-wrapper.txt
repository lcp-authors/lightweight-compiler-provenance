
raspbian-preinstalled/vlc-wrapper:     file format elf32-littlearm


Disassembly of section .init:

00010794 <.init>:
   10794:	push	{r3, lr}
   10798:	bl	10d64 <__snprintf_chk@plt+0x454>
   1079c:	pop	{r3, pc}

Disassembly of section .plt:

000107a0 <sched_get_priority_min@plt-0x14>:
   107a0:	push	{lr}		; (str lr, [sp, #-4]!)
   107a4:	ldr	lr, [pc, #4]	; 107b0 <sched_get_priority_min@plt-0x4>
   107a8:	add	lr, pc, lr
   107ac:	ldr	pc, [lr, #8]!
   107b0:	andeq	r1, r1, r4, asr #15

000107b4 <sched_get_priority_min@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #1988]!	; 0x7c4

000107c0 <strtol@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #1980]!	; 0x7bc

000107cc <setsockopt@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #1972]!	; 0x7b4

000107d8 <setrlimit64@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #1964]!	; 0x7ac

000107e4 <getuid@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #1956]!	; 0x7a4

000107f0 <execvp@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #1948]!	; 0x79c

000107fc <sendmsg@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #1940]!	; 0x794

00010808 <__stack_chk_fail@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #1932]!	; 0x78c

00010814 <dup2@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #1924]!	; 0x784

00010820 <socketpair@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #1916]!	; 0x77c

0001082c <perror@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #1908]!	; 0x774

00010838 <fwrite@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #1900]!	; 0x76c

00010844 <open64@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #1892]!	; 0x764

00010850 <getenv@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #1884]!	; 0x75c

0001085c <__libc_start_main@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1876]!	; 0x754

00010868 <__gmon_start__@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1868]!	; 0x74c

00010874 <exit@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1860]!	; 0x744

00010880 <strlen@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1852]!	; 0x73c

0001088c <setsid@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1844]!	; 0x734

00010898 <setenv@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1836]!	; 0x72c

000108a4 <__errno_location@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1828]!	; 0x724

000108b0 <bind@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1820]!	; 0x71c

000108bc <fork@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1812]!	; 0x714

000108c8 <setuid@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1804]!	; 0x70c

000108d4 <socket@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1796]!	; 0x704

000108e0 <abort@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1788]!	; 0x6fc

000108ec <recv@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1780]!	; 0x6f4

000108f8 <close@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1772]!	; 0x6ec

00010904 <send@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010910 <__snprintf_chk@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1756]!	; 0x6dc

Disassembly of section .text:

0001091c <.text>:
   1091c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10920:	mov	r5, r1
   10924:	ldr	r4, [pc, #968]	; 10cf4 <__snprintf_chk@plt+0x3e4>
   10928:	sub	sp, sp, #220	; 0xdc
   1092c:	mov	r1, #1
   10930:	ldr	ip, [r4]
   10934:	mov	r0, r1
   10938:	add	r3, sp, #52	; 0x34
   1093c:	mov	r2, #0
   10940:	str	ip, [sp, #212]	; 0xd4
   10944:	bl	10820 <socketpair@plt>
   10948:	cmp	r0, #0
   1094c:	bne	10970 <__snprintf_chk@plt+0x60>
   10950:	ldr	r3, [sp, #52]	; 0x34
   10954:	cmp	r3, #2
   10958:	bgt	1098c <__snprintf_chk@plt+0x7c>
   1095c:	ldr	r0, [sp, #52]	; 0x34
   10960:	bl	108f8 <close@plt>
   10964:	ldr	r0, [sp, #56]	; 0x38
   10968:	cmn	r0, #1
   1096c:	bne	10a58 <__snprintf_chk@plt+0x148>
   10970:	ldr	r5, [sp, #212]	; 0xd4
   10974:	ldr	r3, [r4]
   10978:	mov	r0, #1
   1097c:	cmp	r5, r3
   10980:	bne	10ce8 <__snprintf_chk@plt+0x3d8>
   10984:	add	sp, sp, #220	; 0xdc
   10988:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1098c:	bl	108bc <fork@plt>
   10990:	cmn	r0, #1
   10994:	mov	r6, r0
   10998:	beq	1095c <__snprintf_chk@plt+0x4c>
   1099c:	cmp	r0, #0
   109a0:	bne	10a60 <__snprintf_chk@plt+0x150>
   109a4:	mov	r1, #2
   109a8:	ldr	r0, [pc, #840]	; 10cf8 <__snprintf_chk@plt+0x3e8>
   109ac:	bl	10844 <open64@plt>
   109b0:	cmn	r0, #1
   109b4:	mov	r7, r0
   109b8:	beq	109e4 <__snprintf_chk@plt+0xd4>
   109bc:	mov	r1, r6
   109c0:	bl	10814 <dup2@plt>
   109c4:	mov	r1, #1
   109c8:	mov	r0, r7
   109cc:	bl	10814 <dup2@plt>
   109d0:	mov	r1, #2
   109d4:	mov	r0, r7
   109d8:	bl	10814 <dup2@plt>
   109dc:	mov	r0, r7
   109e0:	bl	108f8 <close@plt>
   109e4:	ldr	r0, [sp, #52]	; 0x34
   109e8:	bl	108f8 <close@plt>
   109ec:	ldr	r6, [pc, #776]	; 10cfc <__snprintf_chk@plt+0x3ec>
   109f0:	bl	1088c <setsid@plt>
   109f4:	ldr	r5, [pc, #772]	; 10d00 <__snprintf_chk@plt+0x3f0>
   109f8:	ldr	r4, [sp, #56]	; 0x38
   109fc:	mov	r3, #0
   10a00:	mov	r2, #128	; 0x80
   10a04:	add	r1, sp, #60	; 0x3c
   10a08:	mov	r0, r4
   10a0c:	bl	108ec <recv@plt>
   10a10:	cmp	r0, #128	; 0x80
   10a14:	bne	10a50 <__snprintf_chk@plt+0x140>
   10a18:	ldrh	r0, [sp, #60]	; 0x3c
   10a1c:	cmp	r0, #2
   10a20:	beq	10b2c <__snprintf_chk@plt+0x21c>
   10a24:	cmp	r0, #10
   10a28:	beq	10be4 <__snprintf_chk@plt+0x2d4>
   10a2c:	mov	r7, #97	; 0x61
   10a30:	mov	r3, #16384	; 0x4000
   10a34:	mov	r2, #4
   10a38:	add	r1, sp, #24
   10a3c:	mov	r0, r4
   10a40:	str	r7, [sp, #24]
   10a44:	bl	10904 <send@plt>
   10a48:	cmp	r0, #4
   10a4c:	beq	109fc <__snprintf_chk@plt+0xec>
   10a50:	mov	r0, #0
   10a54:	bl	10874 <exit@plt>
   10a58:	bl	108f8 <close@plt>
   10a5c:	b	10970 <__snprintf_chk@plt+0x60>
   10a60:	ldr	r0, [sp, #56]	; 0x38
   10a64:	bl	108f8 <close@plt>
   10a68:	ldr	r6, [pc, #660]	; 10d04 <__snprintf_chk@plt+0x3f4>
   10a6c:	ldr	r8, [sp, #52]	; 0x34
   10a70:	mov	r3, #21
   10a74:	mov	r1, r3
   10a78:	mov	r2, #1
   10a7c:	str	r8, [sp, #4]
   10a80:	str	r6, [sp]
   10a84:	add	r0, sp, #188	; 0xbc
   10a88:	mvn	r9, #0
   10a8c:	str	r9, [sp, #56]	; 0x38
   10a90:	bl	10910 <__snprintf_chk@plt>
   10a94:	add	r1, sp, #188	; 0xbc
   10a98:	mov	r2, #1
   10a9c:	ldr	r0, [pc, #612]	; 10d08 <__snprintf_chk@plt+0x3f8>
   10aa0:	bl	10898 <setenv@plt>
   10aa4:	mov	r0, #2
   10aa8:	bl	107b4 <sched_get_priority_min@plt>
   10aac:	add	r1, sp, #24
   10ab0:	add	r2, r0, #24
   10ab4:	mov	r0, #14
   10ab8:	asr	r3, r2, #31
   10abc:	strd	r2, [sp, #24]
   10ac0:	strd	r2, [sp, #32]
   10ac4:	bl	107d8 <setrlimit64@plt>
   10ac8:	bl	107e4 <getuid@plt>
   10acc:	subs	r7, r0, #0
   10ad0:	beq	10ca4 <__snprintf_chk@plt+0x394>
   10ad4:	mov	r0, r7
   10ad8:	bl	108c8 <setuid@plt>
   10adc:	mov	r0, #0
   10ae0:	bl	108c8 <setuid@plt>
   10ae4:	cmp	r0, #0
   10ae8:	beq	10cec <__snprintf_chk@plt+0x3dc>
   10aec:	ldr	r8, [r5]
   10af0:	mov	r0, r8
   10af4:	bl	10880 <strlen@plt>
   10af8:	cmp	r0, #8
   10afc:	bls	1095c <__snprintf_chk@plt+0x4c>
   10b00:	add	r0, r8, r0
   10b04:	mov	lr, #0
   10b08:	strb	lr, [r0, #-8]
   10b0c:	mov	r1, r5
   10b10:	ldr	r0, [r5]
   10b14:	bl	107f0 <execvp@plt>
   10b18:	cmp	r0, #0
   10b1c:	beq	1095c <__snprintf_chk@plt+0x4c>
   10b20:	ldr	r0, [r5]
   10b24:	bl	1082c <perror@plt>
   10b28:	b	1095c <__snprintf_chk@plt+0x4c>
   10b2c:	ldrh	r1, [sp, #62]	; 0x3e
   10b30:	rev16	r9, r1
   10b34:	uxth	lr, r9
   10b38:	cmp	lr, r6
   10b3c:	cmpne	lr, #80	; 0x50
   10b40:	moveq	r2, #1
   10b44:	movne	r2, #0
   10b48:	cmp	lr, r5
   10b4c:	orreq	r2, r2, #1
   10b50:	cmp	r2, #0
   10b54:	movne	r8, #16
   10b58:	beq	10c18 <__snprintf_chk@plt+0x308>
   10b5c:	mov	r2, #6
   10b60:	mov	r1, #1
   10b64:	bl	108d4 <socket@plt>
   10b68:	cmn	r0, #1
   10b6c:	mov	r7, r0
   10b70:	beq	10bc0 <__snprintf_chk@plt+0x2b0>
   10b74:	mov	lr, #1
   10b78:	mov	r9, #4
   10b7c:	mov	r1, lr
   10b80:	add	r3, sp, #8
   10b84:	str	r9, [sp]
   10b88:	mov	r2, #2
   10b8c:	str	lr, [sp, #8]
   10b90:	bl	107cc <setsockopt@plt>
   10b94:	ldrh	r0, [sp, #60]	; 0x3c
   10b98:	cmp	r0, #10
   10b9c:	beq	10c88 <__snprintf_chk@plt+0x378>
   10ba0:	mov	r2, r8
   10ba4:	add	r1, sp, #60	; 0x3c
   10ba8:	mov	r0, r7
   10bac:	bl	108b0 <bind@plt>
   10bb0:	cmp	r0, #0
   10bb4:	beq	10c20 <__snprintf_chk@plt+0x310>
   10bb8:	mov	r0, r7
   10bbc:	bl	108f8 <close@plt>
   10bc0:	bl	108a4 <__errno_location@plt>
   10bc4:	mov	r3, #16384	; 0x4000
   10bc8:	mov	r2, #4
   10bcc:	add	r1, sp, #24
   10bd0:	ldr	ip, [r0]
   10bd4:	mov	r0, r4
   10bd8:	str	ip, [sp, #24]
   10bdc:	bl	10904 <send@plt>
   10be0:	b	109fc <__snprintf_chk@plt+0xec>
   10be4:	ldrh	ip, [sp, #62]	; 0x3e
   10be8:	rev16	r3, ip
   10bec:	uxth	r7, r3
   10bf0:	cmp	r7, r6
   10bf4:	cmpne	r7, #80	; 0x50
   10bf8:	moveq	r2, #1
   10bfc:	movne	r2, #0
   10c00:	cmp	r7, r5
   10c04:	movne	r1, r2
   10c08:	orreq	r1, r2, #1
   10c0c:	cmp	r1, #0
   10c10:	movne	r8, #28
   10c14:	bne	10b5c <__snprintf_chk@plt+0x24c>
   10c18:	mov	r7, #13
   10c1c:	b	10a30 <__snprintf_chk@plt+0x120>
   10c20:	add	r2, sp, #188	; 0xbc
   10c24:	mov	r1, #16
   10c28:	mov	r3, #1
   10c2c:	add	lr, sp, #16
   10c30:	str	r0, [sp, #12]
   10c34:	str	r0, [sp, #24]
   10c38:	str	r0, [sp, #28]
   10c3c:	mov	ip, #4
   10c40:	str	r2, [sp, #40]	; 0x28
   10c44:	str	r1, [sp, #44]	; 0x2c
   10c48:	str	r1, [sp, #188]	; 0xbc
   10c4c:	add	r9, sp, #12
   10c50:	mov	r2, #16384	; 0x4000
   10c54:	add	r1, sp, #24
   10c58:	mov	r0, r4
   10c5c:	str	r7, [sp, #200]	; 0xc8
   10c60:	str	lr, [sp, #32]
   10c64:	str	r3, [sp, #36]	; 0x24
   10c68:	str	r3, [sp, #192]	; 0xc0
   10c6c:	str	r3, [sp, #196]	; 0xc4
   10c70:	str	r9, [sp, #16]
   10c74:	str	ip, [sp, #20]
   10c78:	bl	107fc <sendmsg@plt>
   10c7c:	mov	r0, r7
   10c80:	bl	108f8 <close@plt>
   10c84:	b	109fc <__snprintf_chk@plt+0xec>
   10c88:	str	r9, [sp]
   10c8c:	add	r3, sp, #8
   10c90:	mov	r2, #26
   10c94:	mov	r1, #41	; 0x29
   10c98:	mov	r0, r7
   10c9c:	bl	107cc <setsockopt@plt>
   10ca0:	b	10ba0 <__snprintf_chk@plt+0x290>
   10ca4:	ldr	r0, [pc, #96]	; 10d0c <__snprintf_chk@plt+0x3fc>
   10ca8:	bl	10850 <getenv@plt>
   10cac:	cmp	r0, #0
   10cb0:	beq	10cc8 <__snprintf_chk@plt+0x3b8>
   10cb4:	mov	r1, r7
   10cb8:	mov	r2, #10
   10cbc:	bl	107c0 <strtol@plt>
   10cc0:	subs	r7, r0, #0
   10cc4:	bne	10ad4 <__snprintf_chk@plt+0x1c4>
   10cc8:	ldr	r4, [pc, #64]	; 10d10 <__snprintf_chk@plt+0x400>
   10ccc:	mov	r2, #44	; 0x2c
   10cd0:	mov	r1, #1
   10cd4:	ldr	r3, [r4]
   10cd8:	ldr	r0, [pc, #52]	; 10d14 <__snprintf_chk@plt+0x404>
   10cdc:	bl	10838 <fwrite@plt>
   10ce0:	mov	r0, #1
   10ce4:	bl	10874 <exit@plt>
   10ce8:	bl	10808 <__stack_chk_fail@plt>
   10cec:	mov	r0, #1
   10cf0:	bl	10874 <exit@plt>
   10cf4:	andeq	r1, r2, r0, ror lr
   10cf8:	andeq	r0, r1, r8, lsl #29
   10cfc:			; <UNDEFINED> instruction: 0x000001bb
   10d00:	andeq	r0, r0, sl, lsr #4
   10d04:	muleq	r1, r4, lr
   10d08:	muleq	r1, r8, lr
   10d0c:	andeq	r0, r1, ip, lsr #29
   10d10:	andeq	r2, r2, r8
   10d14:			; <UNDEFINED> instruction: 0x00010eb8
   10d18:	vmrs	r3, fpscr
   10d1c:	orr	r3, r3, #16777216	; 0x1000000
   10d20:	vmsr	fpscr, r3
   10d24:	bx	lr
   10d28:	mov	fp, #0
   10d2c:	mov	lr, #0
   10d30:	pop	{r1}		; (ldr r1, [sp], #4)
   10d34:	mov	r2, sp
   10d38:	push	{r2}		; (str r2, [sp, #-4]!)
   10d3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d40:	ldr	ip, [pc, #16]	; 10d58 <__snprintf_chk@plt+0x448>
   10d44:	push	{ip}		; (str ip, [sp, #-4]!)
   10d48:	ldr	r0, [pc, #12]	; 10d5c <__snprintf_chk@plt+0x44c>
   10d4c:	ldr	r3, [pc, #12]	; 10d60 <__snprintf_chk@plt+0x450>
   10d50:	bl	1085c <__libc_start_main@plt>
   10d54:	bl	108e0 <abort@plt>
   10d58:	andeq	r0, r1, r8, ror lr
   10d5c:	andeq	r0, r1, ip, lsl r9
   10d60:	andeq	r0, r1, r8, lsl lr
   10d64:	ldr	r3, [pc, #20]	; 10d80 <__snprintf_chk@plt+0x470>
   10d68:	ldr	r2, [pc, #20]	; 10d84 <__snprintf_chk@plt+0x474>
   10d6c:	add	r3, pc, r3
   10d70:	ldr	r2, [r3, r2]
   10d74:	cmp	r2, #0
   10d78:	bxeq	lr
   10d7c:	b	10868 <__gmon_start__@plt>
   10d80:	andeq	r1, r1, r0, lsl #4
   10d84:	andeq	r0, r0, r4, lsl #1
   10d88:	ldr	r0, [pc, #24]	; 10da8 <__snprintf_chk@plt+0x498>
   10d8c:	ldr	r3, [pc, #24]	; 10dac <__snprintf_chk@plt+0x49c>
   10d90:	cmp	r3, r0
   10d94:	bxeq	lr
   10d98:	ldr	r3, [pc, #16]	; 10db0 <__snprintf_chk@plt+0x4a0>
   10d9c:	cmp	r3, #0
   10da0:	bxeq	lr
   10da4:	bx	r3
   10da8:	andeq	r2, r2, r8
   10dac:	andeq	r2, r2, r8
   10db0:	andeq	r0, r0, r0
   10db4:	ldr	r0, [pc, #36]	; 10de0 <__snprintf_chk@plt+0x4d0>
   10db8:	ldr	r1, [pc, #36]	; 10de4 <__snprintf_chk@plt+0x4d4>
   10dbc:	sub	r1, r1, r0
   10dc0:	asr	r1, r1, #2
   10dc4:	add	r1, r1, r1, lsr #31
   10dc8:	asrs	r1, r1, #1
   10dcc:	bxeq	lr
   10dd0:	ldr	r3, [pc, #16]	; 10de8 <__snprintf_chk@plt+0x4d8>
   10dd4:	cmp	r3, #0
   10dd8:	bxeq	lr
   10ddc:	bx	r3
   10de0:	andeq	r2, r2, r8
   10de4:	andeq	r2, r2, r8
   10de8:	andeq	r0, r0, r0
   10dec:	push	{r4, lr}
   10df0:	ldr	r4, [pc, #24]	; 10e10 <__snprintf_chk@plt+0x500>
   10df4:	ldrb	r3, [r4]
   10df8:	cmp	r3, #0
   10dfc:	popne	{r4, pc}
   10e00:	bl	10d88 <__snprintf_chk@plt+0x478>
   10e04:	mov	r3, #1
   10e08:	strb	r3, [r4]
   10e0c:	pop	{r4, pc}
   10e10:	andeq	r2, r2, ip
   10e14:	b	10db4 <__snprintf_chk@plt+0x4a4>
   10e18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e1c:	mov	r7, r0
   10e20:	ldr	r6, [pc, #72]	; 10e70 <__snprintf_chk@plt+0x560>
   10e24:	ldr	r5, [pc, #72]	; 10e74 <__snprintf_chk@plt+0x564>
   10e28:	add	r6, pc, r6
   10e2c:	add	r5, pc, r5
   10e30:	sub	r6, r6, r5
   10e34:	mov	r8, r1
   10e38:	mov	r9, r2
   10e3c:	bl	10794 <sched_get_priority_min@plt-0x20>
   10e40:	asrs	r6, r6, #2
   10e44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e48:	mov	r4, #0
   10e4c:	add	r4, r4, #1
   10e50:	ldr	r3, [r5], #4
   10e54:	mov	r2, r9
   10e58:	mov	r1, r8
   10e5c:	mov	r0, r7
   10e60:	blx	r3
   10e64:	cmp	r6, r4
   10e68:	bne	10e4c <__snprintf_chk@plt+0x53c>
   10e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e70:	andeq	r1, r1, ip, lsr r0
   10e74:	andeq	r1, r1, r0, lsr r0
   10e78:	bx	lr

Disassembly of section .fini:

00010e7c <.fini>:
   10e7c:	push	{r3, lr}
   10e80:	pop	{r3, pc}
