
raspbian-preinstalled/chrt:     file format elf32-littlearm


Disassembly of section .init:

00010ff0 <.init>:
   10ff0:	push	{r3, lr}
   10ff4:	bl	11df4 <strspn@plt+0xa90>
   10ff8:	pop	{r3, pc}

Disassembly of section .plt:

00010ffc <fdopen@plt-0x14>:
   10ffc:	push	{lr}		; (str lr, [sp, #-4]!)
   11000:	ldr	lr, [pc, #4]	; 1100c <fdopen@plt-0x4>
   11004:	add	lr, pc, lr
   11008:	ldr	pc, [lr, #8]!
   1100c:	andeq	r4, r1, r0, asr #29

00011010 <fdopen@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #20, 20	; 0x14000
   11018:	ldr	pc, [ip, #3776]!	; 0xec0

0001101c <sched_get_priority_min@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #20, 20	; 0x14000
   11024:	ldr	pc, [ip, #3768]!	; 0xeb8

00011028 <calloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #20, 20	; 0x14000
   11030:	ldr	pc, [ip, #3760]!	; 0xeb0

00011034 <raise@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #20, 20	; 0x14000
   1103c:	ldr	pc, [ip, #3752]!	; 0xea8

00011040 <strcmp@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #20, 20	; 0x14000
   11048:	ldr	pc, [ip, #3744]!	; 0xea0

0001104c <strtol@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #20, 20	; 0x14000
   11054:	ldr	pc, [ip, #3736]!	; 0xe98

00011058 <strcspn@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #20, 20	; 0x14000
   11060:	ldr	pc, [ip, #3728]!	; 0xe90

00011064 <read@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #20, 20	; 0x14000
   1106c:	ldr	pc, [ip, #3720]!	; 0xe88

00011070 <free@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #20, 20	; 0x14000
   11078:	ldr	pc, [ip, #3712]!	; 0xe80

0001107c <fgets@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #20, 20	; 0x14000
   11084:	ldr	pc, [ip, #3704]!	; 0xe78

00011088 <nanosleep@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #20, 20	; 0x14000
   11090:	ldr	pc, [ip, #3696]!	; 0xe70

00011094 <ferror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #3688]!	; 0xe68

000110a0 <strndup@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #3680]!	; 0xe60

000110ac <_exit@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #3672]!	; 0xe58

000110b8 <memcpy@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #3664]!	; 0xe50

000110c4 <execvp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #3656]!	; 0xe48

000110d0 <__strtoull_internal@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #3648]!	; 0xe40

000110dc <dcgettext@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #3640]!	; 0xe38

000110e8 <strdup@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #3632]!	; 0xe30

000110f4 <__stack_chk_fail@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #3624]!	; 0xe28

00011100 <getpriority@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #3616]!	; 0xe20

0001110c <textdomain@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #3608]!	; 0xe18

00011118 <err@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #3600]!	; 0xe10

00011124 <__fxstatat64@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3592]!	; 0xe08

00011130 <sched_getscheduler@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3584]!	; 0xe00

0001113c <__fpending@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3576]!	; 0xdf8

00011148 <opendir@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3568]!	; 0xdf0

00011154 <open64@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3560]!	; 0xde8

00011160 <sched_get_priority_max@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3552]!	; 0xde0

0001116c <malloc@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3544]!	; 0xdd8

00011178 <__libc_start_main@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3536]!	; 0xdd0

00011184 <__gmon_start__@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011190 <getopt_long@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3520]!	; 0xdc0

0001119c <__ctype_b_loc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3512]!	; 0xdb8

000111a8 <getpid@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3504]!	; 0xdb0

000111b4 <exit@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3496]!	; 0xda8

000111c0 <syscall@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3488]!	; 0xda0

000111cc <strtoul@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #20, 20	; 0x14000
   111d4:	ldr	pc, [ip, #3480]!	; 0xd98

000111d8 <strlen@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #20, 20	; 0x14000
   111e0:	ldr	pc, [ip, #3472]!	; 0xd90

000111e4 <sched_getparam@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #20, 20	; 0x14000
   111ec:	ldr	pc, [ip, #3464]!	; 0xd88

000111f0 <strchr@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #20, 20	; 0x14000
   111f8:	ldr	pc, [ip, #3456]!	; 0xd80

000111fc <openat64@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #20, 20	; 0x14000
   11204:	ldr	pc, [ip, #3448]!	; 0xd78

00011208 <warnx@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #20, 20	; 0x14000
   11210:	ldr	pc, [ip, #3440]!	; 0xd70

00011214 <__errno_location@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #20, 20	; 0x14000
   1121c:	ldr	pc, [ip, #3432]!	; 0xd68

00011220 <__sprintf_chk@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #20, 20	; 0x14000
   11228:	ldr	pc, [ip, #3424]!	; 0xd60

0001122c <__cxa_atexit@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #20, 20	; 0x14000
   11234:	ldr	pc, [ip, #3416]!	; 0xd58

00011238 <__vasprintf_chk@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #20, 20	; 0x14000
   11240:	ldr	pc, [ip, #3408]!	; 0xd50

00011244 <memset@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #20, 20	; 0x14000
   1124c:	ldr	pc, [ip, #3400]!	; 0xd48

00011250 <fgetc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #20, 20	; 0x14000
   11258:	ldr	pc, [ip, #3392]!	; 0xd40

0001125c <__printf_chk@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #20, 20	; 0x14000
   11264:	ldr	pc, [ip, #3384]!	; 0xd38

00011268 <strtod@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #20, 20	; 0x14000
   11270:	ldr	pc, [ip, #3376]!	; 0xd30

00011274 <__fprintf_chk@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #20, 20	; 0x14000
   1127c:	ldr	pc, [ip, #3368]!	; 0xd28

00011280 <fclose@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #20, 20	; 0x14000
   11288:	ldr	pc, [ip, #3360]!	; 0xd20

0001128c <setlocale@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #20, 20	; 0x14000
   11294:	ldr	pc, [ip, #3352]!	; 0xd18

00011298 <errx@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #20, 20	; 0x14000
   112a0:	ldr	pc, [ip, #3344]!	; 0xd10

000112a4 <warn@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #20, 20	; 0x14000
   112ac:	ldr	pc, [ip, #3336]!	; 0xd08

000112b0 <fputc@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #20, 20	; 0x14000
   112b8:	ldr	pc, [ip, #3328]!	; 0xd00

000112bc <sscanf@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #20, 20	; 0x14000
   112c4:	ldr	pc, [ip, #3320]!	; 0xcf8

000112c8 <localeconv@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #20, 20	; 0x14000
   112d0:	ldr	pc, [ip, #3312]!	; 0xcf0

000112d4 <readdir64@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #20, 20	; 0x14000
   112dc:	ldr	pc, [ip, #3304]!	; 0xce8

000112e0 <putc@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #20, 20	; 0x14000
   112e8:	ldr	pc, [ip, #3296]!	; 0xce0

000112ec <dirfd@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #20, 20	; 0x14000
   112f4:	ldr	pc, [ip, #3288]!	; 0xcd8

000112f8 <__strtoll_internal@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #20, 20	; 0x14000
   11300:	ldr	pc, [ip, #3280]!	; 0xcd0

00011304 <bindtextdomain@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #20, 20	; 0x14000
   1130c:	ldr	pc, [ip, #3272]!	; 0xcc8

00011310 <fputs@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #20, 20	; 0x14000
   11318:	ldr	pc, [ip, #3264]!	; 0xcc0

0001131c <strncmp@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #20, 20	; 0x14000
   11324:	ldr	pc, [ip, #3256]!	; 0xcb8

00011328 <abort@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #20, 20	; 0x14000
   11330:	ldr	pc, [ip, #3248]!	; 0xcb0

00011334 <close@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #20, 20	; 0x14000
   1133c:	ldr	pc, [ip, #3240]!	; 0xca8

00011340 <closedir@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #20, 20	; 0x14000
   11348:	ldr	pc, [ip, #3232]!	; 0xca0

0001134c <__snprintf_chk@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #20, 20	; 0x14000
   11354:	ldr	pc, [ip, #3224]!	; 0xc98

00011358 <sched_setscheduler@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #20, 20	; 0x14000
   11360:	ldr	pc, [ip, #3216]!	; 0xc90

00011364 <strspn@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #20, 20	; 0x14000
   1136c:	ldr	pc, [ip, #3208]!	; 0xc88

Disassembly of section .text:

00011370 <.text>:
   11370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	sub	sp, sp, #108	; 0x6c
   11378:	ldr	r5, [pc, #2384]	; 11cd0 <strspn@plt+0x96c>
   1137c:	mov	r7, r0
   11380:	mov	r4, r1
   11384:	ldr	r3, [r5]
   11388:	mov	r2, #40	; 0x28
   1138c:	mov	r1, #0
   11390:	add	r0, sp, #32
   11394:	str	r3, [sp, #100]	; 0x64
   11398:	bl	11244 <memset@plt>
   1139c:	mvn	r2, #0
   113a0:	mov	r3, #2
   113a4:	ldr	r1, [pc, #2344]	; 11cd4 <strspn@plt+0x970>
   113a8:	mov	r0, #6
   113ac:	strd	r2, [sp, #24]
   113b0:	bl	1128c <setlocale@plt>
   113b4:	ldr	r1, [pc, #2332]	; 11cd8 <strspn@plt+0x974>
   113b8:	ldr	r0, [pc, #2332]	; 11cdc <strspn@plt+0x978>
   113bc:	bl	11304 <bindtextdomain@plt>
   113c0:	ldr	r0, [pc, #2324]	; 11cdc <strspn@plt+0x978>
   113c4:	bl	1110c <textdomain@plt>
   113c8:	ldr	r0, [pc, #2320]	; 11ce0 <strspn@plt+0x97c>
   113cc:	bl	14cf0 <strspn@plt+0x398c>
   113d0:	sub	r9, r7, #-1073741823	; 0xc0000001
   113d4:	ldr	r8, [pc, #2312]	; 11ce4 <strspn@plt+0x980>
   113d8:	ldr	r6, [pc, #2312]	; 11ce8 <strspn@plt+0x984>
   113dc:	ldr	sl, [pc, #2312]	; 11cec <strspn@plt+0x988>
   113e0:	add	r9, r4, r9, lsl #2
   113e4:	mov	r3, #0
   113e8:	str	r3, [sp]
   113ec:	mov	r2, r6
   113f0:	mov	r3, r8
   113f4:	mov	r1, r4
   113f8:	mov	r0, r7
   113fc:	bl	11190 <getopt_long@plt>
   11400:	cmn	r0, #1
   11404:	beq	11708 <strspn@plt+0x3a4>
   11408:	sub	r0, r0, #68	; 0x44
   1140c:	cmp	r0, #50	; 0x32
   11410:	ldrls	pc, [pc, r0, lsl #2]
   11414:	b	1195c <strspn@plt+0x5f8>
   11418:	andeq	r1, r1, r0, ror #13
   1141c:	andeq	r1, r1, ip, asr r9
   11420:	andeq	r1, r1, ip, asr r9
   11424:	andeq	r1, r1, ip, asr r9
   11428:	andeq	r1, r1, ip, asr r9
   1142c:	andeq	r1, r1, ip, asr r9
   11430:	andeq	r1, r1, ip, asr r9
   11434:	andeq	r1, r1, ip, asr r9
   11438:	andeq	r1, r1, ip, asr r9
   1143c:	andeq	r1, r1, ip, asr r9
   11440:	andeq	r1, r1, ip, asr r9
   11444:	andeq	r1, r1, ip, asr r9
   11448:			; <UNDEFINED> instruction: 0x000116b8
   1144c:	andeq	r1, r1, ip, asr r9
   11450:	andeq	r1, r1, r8, lsr #13
   11454:	andeq	r1, r1, ip, asr r9
   11458:	andeq	r1, r1, r0, lsl #13
   1145c:	andeq	r1, r1, ip, asr r9
   11460:	andeq	r1, r1, ip, lsr r6
   11464:	andeq	r1, r1, ip, asr r9
   11468:	andeq	r1, r1, ip, asr r9
   1146c:	andeq	r1, r1, ip, asr r9
   11470:	andeq	r1, r1, ip, asr r9
   11474:	andeq	r1, r1, ip, asr r9
   11478:	andeq	r1, r1, ip, asr r9
   1147c:	andeq	r1, r1, ip, asr r9
   11480:	andeq	r1, r1, ip, asr r9
   11484:	andeq	r1, r1, ip, asr r9
   11488:	andeq	r1, r1, ip, asr r9
   1148c:	andeq	r1, r1, ip, lsr #12
   11490:	andeq	r1, r1, r0, lsr #12
   11494:	andeq	r1, r1, ip, asr r9
   11498:	andeq	r1, r1, r4, lsl r6
   1149c:	andeq	r1, r1, ip, asr r9
   114a0:	andeq	r1, r1, r8, lsl #12
   114a4:	andeq	r1, r1, ip, asr r9
   114a8:	muleq	r1, r4, r9
   114ac:	strdeq	r1, [r1], -ip
   114b0:	andeq	r1, r1, ip, asr r9
   114b4:	andeq	r1, r1, ip, asr r9
   114b8:	andeq	r1, r1, ip, asr r9
   114bc:	andeq	r1, r1, r0, asr #10
   114c0:	andeq	r1, r1, ip, asr r9
   114c4:	andeq	r1, r1, r4, lsr r5
   114c8:	andeq	r1, r1, r0, lsl #10
   114cc:	andeq	r1, r1, ip, asr r9
   114d0:	strdeq	r1, [r1], -r4
   114d4:	andeq	r1, r1, ip, asr r9
   114d8:	andeq	r1, r1, ip, asr r9
   114dc:	andeq	r1, r1, ip, asr r9
   114e0:	andeq	r1, r1, r4, ror #9
   114e4:	ldrb	r3, [sp, #64]	; 0x40
   114e8:	orr	r3, r3, #8
   114ec:	strb	r3, [sp, #64]	; 0x40
   114f0:	b	113e4 <strspn@plt+0x80>
   114f4:	mov	r3, #2
   114f8:	str	r3, [sp, #28]
   114fc:	b	113e4 <strspn@plt+0x80>
   11500:	bl	11214 <__errno_location@plt>
   11504:	mov	r3, #0
   11508:	mov	r2, #5
   1150c:	ldr	r1, [pc, #2012]	; 11cf0 <strspn@plt+0x98c>
   11510:	ldr	fp, [r9]
   11514:	str	r3, [r0]
   11518:	mov	r0, r3
   1151c:	bl	110dc <dcgettext@plt>
   11520:	mov	r1, r0
   11524:	mov	r0, fp
   11528:	bl	131c8 <strspn@plt+0x1e64>
   1152c:	str	r0, [sp, #24]
   11530:	b	113e4 <strspn@plt+0x80>
   11534:	mov	r3, #0
   11538:	str	r3, [sp, #28]
   1153c:	b	113e4 <strspn@plt+0x80>
   11540:	ldr	lr, [pc, #1964]	; 11cf4 <strspn@plt+0x990>
   11544:	add	ip, sp, #76	; 0x4c
   11548:	ldr	fp, [pc, #1960]	; 11cf8 <strspn@plt+0x994>
   1154c:	ldm	lr!, {r0, r1, r2, r3}
   11550:	add	r8, sp, #72	; 0x48
   11554:	add	r9, sp, #96	; 0x60
   11558:	stmia	ip!, {r0, r1, r2, r3}
   1155c:	ldm	lr, {r0, r1}
   11560:	stm	ip, {r0, r1}
   11564:	b	115a0 <strspn@plt+0x23c>
   11568:	ldr	r1, [pc, #1932]	; 11cfc <strspn@plt+0x998>
   1156c:	mov	r0, #0
   11570:	bl	110dc <dcgettext@plt>
   11574:	mov	sl, r0
   11578:	mov	r0, r4
   1157c:	bl	11fa0 <strspn@plt+0xc3c>
   11580:	mov	r1, sl
   11584:	str	r7, [sp]
   11588:	mov	r3, r6
   1158c:	mov	r2, r0
   11590:	mov	r0, #1
   11594:	bl	1125c <__printf_chk@plt>
   11598:	cmp	r8, r9
   1159c:	beq	11664 <strspn@plt+0x300>
   115a0:	ldr	r4, [r8, #4]!
   115a4:	mov	r0, r4
   115a8:	bl	11160 <sched_get_priority_max@plt>
   115ac:	mov	r7, r0
   115b0:	mov	r0, r4
   115b4:	bl	1101c <sched_get_priority_min@plt>
   115b8:	mov	r2, #5
   115bc:	cmp	r7, #0
   115c0:	cmpge	r0, #0
   115c4:	mov	r6, r0
   115c8:	movge	r0, #1
   115cc:	movlt	r0, #0
   115d0:	bge	11568 <strspn@plt+0x204>
   115d4:	mov	r1, fp
   115d8:	bl	110dc <dcgettext@plt>
   115dc:	mov	r6, r0
   115e0:	mov	r0, r4
   115e4:	bl	11fa0 <strspn@plt+0xc3c>
   115e8:	mov	r1, r6
   115ec:	mov	r2, r0
   115f0:	mov	r0, #1
   115f4:	bl	1125c <__printf_chk@plt>
   115f8:	b	11598 <strspn@plt+0x234>
   115fc:	mov	r3, #5
   11600:	str	r3, [sp, #28]
   11604:	b	113e4 <strspn@plt+0x80>
   11608:	mov	r3, #1
   1160c:	str	r3, [sp, #28]
   11610:	b	113e4 <strspn@plt+0x80>
   11614:	mov	r3, #6
   11618:	str	r3, [sp, #28]
   1161c:	b	113e4 <strspn@plt+0x80>
   11620:	mov	r3, #3
   11624:	str	r3, [sp, #28]
   11628:	b	113e4 <strspn@plt+0x80>
   1162c:	ldrb	r3, [sp, #64]	; 0x40
   11630:	orr	r3, r3, #1
   11634:	strb	r3, [sp, #64]	; 0x40
   11638:	b	113e4 <strspn@plt+0x80>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #1720]	; 11d00 <strspn@plt+0x99c>
   11644:	mov	r0, #0
   11648:	bl	110dc <dcgettext@plt>
   1164c:	ldr	r2, [pc, #1712]	; 11d04 <strspn@plt+0x9a0>
   11650:	ldr	r3, [pc, #1712]	; 11d08 <strspn@plt+0x9a4>
   11654:	ldr	r2, [r2]
   11658:	mov	r1, r0
   1165c:	mov	r0, #1
   11660:	bl	1125c <__printf_chk@plt>
   11664:	ldr	r2, [sp, #100]	; 0x64
   11668:	ldr	r3, [r5]
   1166c:	mov	r0, #0
   11670:	cmp	r2, r3
   11674:	bne	11c3c <strspn@plt+0x8d8>
   11678:	add	sp, sp, #108	; 0x6c
   1167c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11680:	mov	r2, #5
   11684:	ldr	r1, [pc, #1664]	; 11d0c <strspn@plt+0x9a8>
   11688:	mov	r0, #0
   1168c:	ldr	fp, [sl]
   11690:	bl	110dc <dcgettext@plt>
   11694:	mov	r1, r0
   11698:	mov	r0, fp
   1169c:	bl	13280 <strspn@plt+0x1f1c>
   116a0:	strd	r0, [sp, #40]	; 0x28
   116a4:	b	113e4 <strspn@plt+0x80>
   116a8:	ldrb	r3, [sp, #64]	; 0x40
   116ac:	orr	r3, r3, #2
   116b0:	strb	r3, [sp, #64]	; 0x40
   116b4:	b	113e4 <strspn@plt+0x80>
   116b8:	mov	r2, #5
   116bc:	ldr	r1, [pc, #1612]	; 11d10 <strspn@plt+0x9ac>
   116c0:	mov	r0, #0
   116c4:	ldr	fp, [sl]
   116c8:	bl	110dc <dcgettext@plt>
   116cc:	mov	r1, r0
   116d0:	mov	r0, fp
   116d4:	bl	13280 <strspn@plt+0x1f1c>
   116d8:	strd	r0, [sp, #56]	; 0x38
   116dc:	b	113e4 <strspn@plt+0x80>
   116e0:	mov	r2, #5
   116e4:	ldr	r1, [pc, #1576]	; 11d14 <strspn@plt+0x9b0>
   116e8:	mov	r0, #0
   116ec:	ldr	fp, [sl]
   116f0:	bl	110dc <dcgettext@plt>
   116f4:	mov	r1, r0
   116f8:	mov	r0, fp
   116fc:	bl	13280 <strspn@plt+0x1f1c>
   11700:	strd	r0, [sp, #48]	; 0x30
   11704:	b	113e4 <strspn@plt+0x80>
   11708:	ldr	r3, [sp, #24]
   1170c:	ldr	r6, [pc, #1540]	; 11d18 <strspn@plt+0x9b4>
   11710:	cmp	r3, #0
   11714:	blt	11930 <strspn@plt+0x5cc>
   11718:	ldr	r3, [r6]
   1171c:	sub	r3, r7, r3
   11720:	cmp	r3, #0
   11724:	ble	11948 <strspn@plt+0x5e4>
   11728:	ldrb	r2, [sp, #64]	; 0x40
   1172c:	tst	r2, #8
   11730:	bne	118b8 <strspn@plt+0x554>
   11734:	cmp	r3, #1
   11738:	beq	118b8 <strspn@plt+0x554>
   1173c:	bl	11214 <__errno_location@plt>
   11740:	mov	r8, #0
   11744:	mov	r2, #5
   11748:	ldr	r1, [pc, #1484]	; 11d1c <strspn@plt+0x9b8>
   1174c:	str	r8, [r0]
   11750:	ldr	r3, [r6]
   11754:	mov	r7, r0
   11758:	mov	r0, r8
   1175c:	ldr	r9, [r4, r3, lsl #2]
   11760:	bl	110dc <dcgettext@plt>
   11764:	mov	r1, r0
   11768:	mov	r0, r9
   1176c:	bl	131c8 <strspn@plt+0x1e64>
   11770:	ldrb	r3, [sp, #64]	; 0x40
   11774:	tst	r3, #2
   11778:	mov	sl, r0
   1177c:	str	r0, [sp, #32]
   11780:	ldr	r0, [sp, #28]
   11784:	beq	11794 <strspn@plt+0x430>
   11788:	sub	r3, r0, #1
   1178c:	cmp	r3, #1
   11790:	bhi	11c7c <strspn@plt+0x918>
   11794:	ldrd	r2, [sp, #40]	; 0x28
   11798:	ldrd	r8, [sp, #48]	; 0x30
   1179c:	ldr	r1, [sp, #56]	; 0x38
   117a0:	strd	r2, [sp, #8]
   117a4:	ldr	ip, [sp, #8]
   117a8:	orr	lr, ip, r8
   117ac:	orr	r2, lr, r1
   117b0:	ldr	lr, [sp, #12]
   117b4:	ldr	ip, [sp, #60]	; 0x3c
   117b8:	orr	lr, lr, r9
   117bc:	orr	r3, lr, ip
   117c0:	orrs	r3, r2, r3
   117c4:	bne	118d4 <strspn@plt+0x570>
   117c8:	cmp	r0, #6
   117cc:	beq	118e4 <strspn@plt+0x580>
   117d0:	ldr	r3, [sp, #24]
   117d4:	cmn	r3, #1
   117d8:	moveq	r3, #0
   117dc:	streq	r3, [sp, #24]
   117e0:	bl	1101c <sched_get_priority_min@plt>
   117e4:	cmp	sl, r0
   117e8:	blt	11cb0 <strspn@plt+0x94c>
   117ec:	ldr	r0, [sp, #28]
   117f0:	bl	11160 <sched_get_priority_max@plt>
   117f4:	ldr	r3, [sp, #32]
   117f8:	cmp	r0, r3
   117fc:	blt	11cb0 <strspn@plt+0x94c>
   11800:	ldrb	r3, [sp, #64]	; 0x40
   11804:	ldr	r1, [sp, #24]
   11808:	ands	r8, r3, #1
   1180c:	beq	11900 <strspn@plt+0x59c>
   11810:	mov	r0, r1
   11814:	bl	145d8 <strspn@plt+0x3274>
   11818:	subs	r8, r0, #0
   1181c:	bne	11838 <strspn@plt+0x4d4>
   11820:	b	11c98 <strspn@plt+0x934>
   11824:	ldr	r1, [sp, #20]
   11828:	add	r0, sp, #24
   1182c:	bl	11ea8 <strspn@plt+0xb44>
   11830:	cmn	r0, #1
   11834:	beq	11c40 <strspn@plt+0x8dc>
   11838:	add	r1, sp, #20
   1183c:	mov	r0, r8
   11840:	bl	146b8 <strspn@plt+0x3354>
   11844:	subs	r9, r0, #0
   11848:	beq	11824 <strspn@plt+0x4c0>
   1184c:	mov	r0, r8
   11850:	bl	14690 <strspn@plt+0x332c>
   11854:	ldrb	r3, [sp, #64]	; 0x40
   11858:	orr	r3, r3, #4
   1185c:	tst	r3, #8
   11860:	strb	r3, [sp, #64]	; 0x40
   11864:	bne	11c30 <strspn@plt+0x8cc>
   11868:	ldr	r8, [sp, #24]
   1186c:	cmp	r8, #0
   11870:	bne	11664 <strspn@plt+0x300>
   11874:	ldr	r5, [r6]
   11878:	add	r5, r5, #1
   1187c:	add	r1, r4, r5, lsl #2
   11880:	ldr	r0, [r4, r5, lsl #2]
   11884:	bl	110c4 <execvp@plt>
   11888:	ldr	r3, [r7]
   1188c:	mov	r2, #5
   11890:	cmp	r3, #2
   11894:	ldr	r1, [pc, #1156]	; 11d20 <strspn@plt+0x9bc>
   11898:	mov	r0, r8
   1189c:	moveq	r6, #127	; 0x7f
   118a0:	movne	r6, #126	; 0x7e
   118a4:	bl	110dc <dcgettext@plt>
   118a8:	ldr	r2, [r4, r5, lsl #2]
   118ac:	mov	r1, r0
   118b0:	mov	r0, r6
   118b4:	bl	11118 <err@plt>
   118b8:	add	r0, sp, #24
   118bc:	bl	122b0 <strspn@plt+0xf4c>
   118c0:	ldr	r3, [r6]
   118c4:	sub	r7, r7, r3
   118c8:	cmp	r7, #1
   118cc:	bne	1173c <strspn@plt+0x3d8>
   118d0:	b	11664 <strspn@plt+0x300>
   118d4:	cmp	r0, #6
   118d8:	bne	11c60 <strspn@plt+0x8fc>
   118dc:	orrs	r3, r8, r9
   118e0:	bne	118ec <strspn@plt+0x588>
   118e4:	str	r1, [sp, #48]	; 0x30
   118e8:	str	ip, [sp, #52]	; 0x34
   118ec:	ldrd	r2, [sp, #8]
   118f0:	orrs	r3, r2, r3
   118f4:	ldrdeq	r2, [sp, #48]	; 0x30
   118f8:	strdeq	r2, [sp, #40]	; 0x28
   118fc:	b	117d0 <strspn@plt+0x46c>
   11900:	add	r0, sp, #24
   11904:	bl	11ea8 <strspn@plt+0xb44>
   11908:	cmn	r0, #1
   1190c:	bne	11854 <strspn@plt+0x4f0>
   11910:	mov	r2, #5
   11914:	ldr	r1, [pc, #1032]	; 11d24 <strspn@plt+0x9c0>
   11918:	mov	r0, r8
   1191c:	bl	110dc <dcgettext@plt>
   11920:	ldr	r2, [sp, #24]
   11924:	mov	r1, r0
   11928:	mov	r0, #1
   1192c:	bl	11118 <err@plt>
   11930:	cmn	r3, #1
   11934:	bne	1173c <strspn@plt+0x3d8>
   11938:	ldr	r3, [r6]
   1193c:	sub	r7, r7, r3
   11940:	cmp	r7, #1
   11944:	bgt	1173c <strspn@plt+0x3d8>
   11948:	mov	r2, #5
   1194c:	ldr	r1, [pc, #980]	; 11d28 <strspn@plt+0x9c4>
   11950:	mov	r0, #0
   11954:	bl	110dc <dcgettext@plt>
   11958:	bl	11208 <warnx@plt>
   1195c:	ldr	r3, [pc, #968]	; 11d2c <strspn@plt+0x9c8>
   11960:	mov	r2, #5
   11964:	ldr	r1, [pc, #964]	; 11d30 <strspn@plt+0x9cc>
   11968:	mov	r0, #0
   1196c:	ldr	r4, [r3]
   11970:	bl	110dc <dcgettext@plt>
   11974:	ldr	r3, [pc, #904]	; 11d04 <strspn@plt+0x9a0>
   11978:	mov	r1, #1
   1197c:	ldr	r3, [r3]
   11980:	mov	r2, r0
   11984:	mov	r0, r4
   11988:	bl	11274 <__fprintf_chk@plt>
   1198c:	mov	r0, #1
   11990:	bl	111b4 <exit@plt>
   11994:	ldr	r3, [pc, #920]	; 11d34 <strspn@plt+0x9d0>
   11998:	mov	r2, #5
   1199c:	ldr	r1, [pc, #916]	; 11d38 <strspn@plt+0x9d4>
   119a0:	ldr	r4, [r3]
   119a4:	mov	r0, #0
   119a8:	bl	110dc <dcgettext@plt>
   119ac:	mov	r1, r4
   119b0:	bl	11310 <fputs@plt>
   119b4:	mov	r1, r4
   119b8:	mov	r0, #10
   119bc:	bl	112b0 <fputc@plt>
   119c0:	mov	r2, #5
   119c4:	ldr	r1, [pc, #880]	; 11d3c <strspn@plt+0x9d8>
   119c8:	mov	r0, #0
   119cc:	bl	110dc <dcgettext@plt>
   119d0:	mov	r1, r4
   119d4:	bl	11310 <fputs@plt>
   119d8:	mov	r1, r4
   119dc:	mov	r0, #10
   119e0:	bl	112b0 <fputc@plt>
   119e4:	mov	r2, #5
   119e8:	ldr	r1, [pc, #848]	; 11d40 <strspn@plt+0x9dc>
   119ec:	mov	r0, #0
   119f0:	bl	110dc <dcgettext@plt>
   119f4:	mov	r1, r4
   119f8:	bl	11310 <fputs@plt>
   119fc:	mov	r1, r4
   11a00:	mov	r0, #10
   11a04:	bl	112b0 <fputc@plt>
   11a08:	mov	r2, #5
   11a0c:	ldr	r1, [pc, #816]	; 11d44 <strspn@plt+0x9e0>
   11a10:	mov	r0, #0
   11a14:	bl	110dc <dcgettext@plt>
   11a18:	mov	r1, r4
   11a1c:	bl	11310 <fputs@plt>
   11a20:	mov	r2, #5
   11a24:	ldr	r1, [pc, #796]	; 11d48 <strspn@plt+0x9e4>
   11a28:	mov	r0, #0
   11a2c:	bl	110dc <dcgettext@plt>
   11a30:	mov	r1, r4
   11a34:	bl	11310 <fputs@plt>
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #776]	; 11d4c <strspn@plt+0x9e8>
   11a40:	mov	r0, #0
   11a44:	bl	110dc <dcgettext@plt>
   11a48:	mov	r1, r4
   11a4c:	bl	11310 <fputs@plt>
   11a50:	mov	r2, #5
   11a54:	ldr	r1, [pc, #756]	; 11d50 <strspn@plt+0x9ec>
   11a58:	mov	r0, #0
   11a5c:	bl	110dc <dcgettext@plt>
   11a60:	mov	r1, r4
   11a64:	bl	11310 <fputs@plt>
   11a68:	mov	r2, #5
   11a6c:	ldr	r1, [pc, #736]	; 11d54 <strspn@plt+0x9f0>
   11a70:	mov	r0, #0
   11a74:	bl	110dc <dcgettext@plt>
   11a78:	mov	r1, r4
   11a7c:	bl	11310 <fputs@plt>
   11a80:	mov	r2, #5
   11a84:	ldr	r1, [pc, #716]	; 11d58 <strspn@plt+0x9f4>
   11a88:	mov	r0, #0
   11a8c:	bl	110dc <dcgettext@plt>
   11a90:	mov	r1, r4
   11a94:	bl	11310 <fputs@plt>
   11a98:	mov	r2, #5
   11a9c:	ldr	r1, [pc, #696]	; 11d5c <strspn@plt+0x9f8>
   11aa0:	mov	r0, #0
   11aa4:	bl	110dc <dcgettext@plt>
   11aa8:	mov	r1, r4
   11aac:	bl	11310 <fputs@plt>
   11ab0:	mov	r1, r4
   11ab4:	mov	r0, #10
   11ab8:	bl	112b0 <fputc@plt>
   11abc:	mov	r2, #5
   11ac0:	ldr	r1, [pc, #664]	; 11d60 <strspn@plt+0x9fc>
   11ac4:	mov	r0, #0
   11ac8:	bl	110dc <dcgettext@plt>
   11acc:	mov	r1, r4
   11ad0:	bl	11310 <fputs@plt>
   11ad4:	mov	r2, #5
   11ad8:	ldr	r1, [pc, #644]	; 11d64 <strspn@plt+0xa00>
   11adc:	mov	r0, #0
   11ae0:	bl	110dc <dcgettext@plt>
   11ae4:	mov	r1, r4
   11ae8:	bl	11310 <fputs@plt>
   11aec:	mov	r2, #5
   11af0:	ldr	r1, [pc, #624]	; 11d68 <strspn@plt+0xa04>
   11af4:	mov	r0, #0
   11af8:	bl	110dc <dcgettext@plt>
   11afc:	mov	r1, r4
   11b00:	bl	11310 <fputs@plt>
   11b04:	mov	r2, #5
   11b08:	ldr	r1, [pc, #604]	; 11d6c <strspn@plt+0xa08>
   11b0c:	mov	r0, #0
   11b10:	bl	110dc <dcgettext@plt>
   11b14:	mov	r1, r4
   11b18:	bl	11310 <fputs@plt>
   11b1c:	mov	r2, #5
   11b20:	ldr	r1, [pc, #584]	; 11d70 <strspn@plt+0xa0c>
   11b24:	mov	r0, #0
   11b28:	bl	110dc <dcgettext@plt>
   11b2c:	mov	r1, r4
   11b30:	bl	11310 <fputs@plt>
   11b34:	mov	r1, r4
   11b38:	mov	r0, #10
   11b3c:	bl	112b0 <fputc@plt>
   11b40:	mov	r2, #5
   11b44:	ldr	r1, [pc, #552]	; 11d74 <strspn@plt+0xa10>
   11b48:	mov	r0, #0
   11b4c:	bl	110dc <dcgettext@plt>
   11b50:	mov	r1, r4
   11b54:	bl	11310 <fputs@plt>
   11b58:	mov	r2, #5
   11b5c:	ldr	r1, [pc, #532]	; 11d78 <strspn@plt+0xa14>
   11b60:	mov	r0, #0
   11b64:	bl	110dc <dcgettext@plt>
   11b68:	mov	r1, r4
   11b6c:	bl	11310 <fputs@plt>
   11b70:	mov	r2, #5
   11b74:	ldr	r1, [pc, #512]	; 11d7c <strspn@plt+0xa18>
   11b78:	mov	r0, #0
   11b7c:	bl	110dc <dcgettext@plt>
   11b80:	mov	r1, r4
   11b84:	bl	11310 <fputs@plt>
   11b88:	mov	r2, #5
   11b8c:	ldr	r1, [pc, #492]	; 11d80 <strspn@plt+0xa1c>
   11b90:	mov	r0, #0
   11b94:	bl	110dc <dcgettext@plt>
   11b98:	mov	r1, r4
   11b9c:	bl	11310 <fputs@plt>
   11ba0:	mov	r2, #5
   11ba4:	ldr	r1, [pc, #472]	; 11d84 <strspn@plt+0xa20>
   11ba8:	mov	r0, #0
   11bac:	bl	110dc <dcgettext@plt>
   11bb0:	mov	r1, r4
   11bb4:	bl	11310 <fputs@plt>
   11bb8:	mov	r1, r4
   11bbc:	mov	r0, #10
   11bc0:	bl	112b0 <fputc@plt>
   11bc4:	mov	r2, #5
   11bc8:	ldr	r1, [pc, #440]	; 11d88 <strspn@plt+0xa24>
   11bcc:	mov	r0, #0
   11bd0:	bl	110dc <dcgettext@plt>
   11bd4:	mov	r2, #5
   11bd8:	ldr	r1, [pc, #428]	; 11d8c <strspn@plt+0xa28>
   11bdc:	mov	r4, r0
   11be0:	mov	r0, #0
   11be4:	bl	110dc <dcgettext@plt>
   11be8:	ldr	r2, [pc, #416]	; 11d90 <strspn@plt+0xa2c>
   11bec:	mov	r3, r4
   11bf0:	str	r2, [sp]
   11bf4:	ldr	r1, [pc, #408]	; 11d94 <strspn@plt+0xa30>
   11bf8:	ldr	r2, [pc, #408]	; 11d98 <strspn@plt+0xa34>
   11bfc:	str	r0, [sp, #4]
   11c00:	mov	r0, #1
   11c04:	bl	1125c <__printf_chk@plt>
   11c08:	mov	r2, #5
   11c0c:	ldr	r1, [pc, #392]	; 11d9c <strspn@plt+0xa38>
   11c10:	mov	r0, #0
   11c14:	bl	110dc <dcgettext@plt>
   11c18:	ldr	r2, [pc, #384]	; 11da0 <strspn@plt+0xa3c>
   11c1c:	mov	r1, r0
   11c20:	mov	r0, #1
   11c24:	bl	1125c <__printf_chk@plt>
   11c28:	mov	r0, #0
   11c2c:	bl	111b4 <exit@plt>
   11c30:	add	r0, sp, #24
   11c34:	bl	122b0 <strspn@plt+0xf4c>
   11c38:	b	11868 <strspn@plt+0x504>
   11c3c:	bl	110f4 <__stack_chk_fail@plt>
   11c40:	mov	r2, #5
   11c44:	ldr	r1, [pc, #344]	; 11da4 <strspn@plt+0xa40>
   11c48:	mov	r0, r9
   11c4c:	bl	110dc <dcgettext@plt>
   11c50:	ldr	r2, [sp, #20]
   11c54:	mov	r1, r0
   11c58:	mov	r0, #1
   11c5c:	bl	11118 <err@plt>
   11c60:	ldr	r1, [pc, #320]	; 11da8 <strspn@plt+0xa44>
   11c64:	mov	r2, #5
   11c68:	mov	r0, #0
   11c6c:	bl	110dc <dcgettext@plt>
   11c70:	mov	r1, r0
   11c74:	mov	r0, #1
   11c78:	bl	11298 <errx@plt>
   11c7c:	ldr	r1, [pc, #296]	; 11dac <strspn@plt+0xa48>
   11c80:	mov	r0, r8
   11c84:	mov	r2, #5
   11c88:	bl	110dc <dcgettext@plt>
   11c8c:	mov	r1, r0
   11c90:	mov	r0, #1
   11c94:	bl	11298 <errx@plt>
   11c98:	ldr	r1, [pc, #272]	; 11db0 <strspn@plt+0xa4c>
   11c9c:	mov	r2, #5
   11ca0:	bl	110dc <dcgettext@plt>
   11ca4:	mov	r1, r0
   11ca8:	mov	r0, #1
   11cac:	bl	11118 <err@plt>
   11cb0:	mov	r2, #5
   11cb4:	ldr	r1, [pc, #248]	; 11db4 <strspn@plt+0xa50>
   11cb8:	mov	r0, #0
   11cbc:	bl	110dc <dcgettext@plt>
   11cc0:	ldr	r2, [sp, #32]
   11cc4:	mov	r1, r0
   11cc8:	mov	r0, #1
   11ccc:	bl	11298 <errx@plt>
   11cd0:	andeq	r5, r2, r8, asr #27
   11cd4:	andeq	r5, r1, r4, asr #6
   11cd8:	andeq	r5, r1, ip, lsr r0
   11cdc:	andeq	r5, r1, r0, asr r0
   11ce0:	andeq	r2, r1, r4, asr r3
   11ce4:	andeq	r4, r1, ip, lsr #26
   11ce8:	andeq	r5, r1, r4, ror #11
   11cec:	andeq	r6, r2, r8, lsr #32
   11cf0:	muleq	r1, r0, r0
   11cf4:	andeq	r4, r1, r4, lsl sp
   11cf8:	andeq	r5, r1, ip, ror r0
   11cfc:	andeq	r5, r1, ip, asr r0
   11d00:	strdeq	r5, [r1], -r8
   11d04:	andeq	r6, r2, r0, lsl r0
   11d08:	andeq	r5, r1, r4, lsl #2
   11d0c:	andeq	r5, r1, r8, lsr #1
   11d10:	andeq	r5, r1, r4, asr #1
   11d14:	ldrdeq	r5, [r1], -ip
   11d18:	andeq	r6, r2, r8, lsl r0
   11d1c:	strdeq	r5, [r1], -ip
   11d20:	andeq	r5, r1, r0, asr r7
   11d24:	andeq	r5, r1, r0, lsr r7
   11d28:	andeq	r5, r1, r8, lsl r6
   11d2c:	andeq	r6, r2, r0, lsr #32
   11d30:			; <UNDEFINED> instruction: 0x000155bc
   11d34:	andeq	r6, r2, r4, lsr #32
   11d38:	andeq	r5, r1, r8, lsl r1
   11d3c:	andeq	r5, r1, ip, asr r1
   11d40:	andeq	r5, r1, r0, asr #3
   11d44:	andeq	r5, r1, r8, ror #3
   11d48:	strdeq	r5, [r1], -ip
   11d4c:	andeq	r5, r1, r0, lsr r2
   11d50:	andeq	r5, r1, r4, ror #4
   11d54:	muleq	r1, r4, r2
   11d58:	andeq	r5, r1, r4, asr #5
   11d5c:	strdeq	r5, [r1], -r8
   11d60:	andeq	r5, r1, r0, lsr r3
   11d64:	andeq	r5, r1, r8, asr #6
   11d68:	andeq	r5, r1, ip, lsl #7
   11d6c:	andeq	r5, r1, r8, asr #7
   11d70:	andeq	r5, r1, r4, lsl #8
   11d74:	andeq	r5, r1, r0, asr #8
   11d78:	andeq	r5, r1, r0, asr r4
   11d7c:	muleq	r1, ip, r4
   11d80:	ldrdeq	r5, [r1], -r8
   11d84:	andeq	r5, r1, r0, lsl r5
   11d88:	andeq	r5, r1, r4, asr #10
   11d8c:	andeq	r5, r1, r8, asr r5
   11d90:	andeq	r5, r1, r8, lsl #11
   11d94:	andeq	r5, r1, r4, ror r5
   11d98:	andeq	r5, r1, r8, ror #10
   11d9c:	muleq	r1, r8, r5
   11da0:			; <UNDEFINED> instruction: 0x000155b4
   11da4:	andeq	r5, r1, r0, lsl r7
   11da8:	andeq	r5, r1, r4, ror r6
   11dac:	andeq	r5, r1, r4, lsr #12
   11db0:	andeq	r5, r1, r0, lsl r0
   11db4:	andeq	r5, r1, r4, asr #13
   11db8:	mov	fp, #0
   11dbc:	mov	lr, #0
   11dc0:	pop	{r1}		; (ldr r1, [sp], #4)
   11dc4:	mov	r2, sp
   11dc8:	push	{r2}		; (str r2, [sp, #-4]!)
   11dcc:	push	{r0}		; (str r0, [sp, #-4]!)
   11dd0:	ldr	ip, [pc, #16]	; 11de8 <strspn@plt+0xa84>
   11dd4:	push	{ip}		; (str ip, [sp, #-4]!)
   11dd8:	ldr	r0, [pc, #12]	; 11dec <strspn@plt+0xa88>
   11ddc:	ldr	r3, [pc, #12]	; 11df0 <strspn@plt+0xa8c>
   11de0:	bl	11178 <__libc_start_main@plt>
   11de4:	bl	11328 <abort@plt>
   11de8:	andeq	r4, r1, ip, ror #25
   11dec:	andeq	r1, r1, r0, ror r3
   11df0:	andeq	r4, r1, ip, lsl #25
   11df4:	ldr	r3, [pc, #20]	; 11e10 <strspn@plt+0xaac>
   11df8:	ldr	r2, [pc, #20]	; 11e14 <strspn@plt+0xab0>
   11dfc:	add	r3, pc, r3
   11e00:	ldr	r2, [r3, r2]
   11e04:	cmp	r2, #0
   11e08:	bxeq	lr
   11e0c:	b	11184 <__gmon_start__@plt>
   11e10:	andeq	r4, r1, r8, asr #1
   11e14:	andeq	r0, r0, r0, lsr r1
   11e18:	ldr	r0, [pc, #24]	; 11e38 <strspn@plt+0xad4>
   11e1c:	ldr	r3, [pc, #24]	; 11e3c <strspn@plt+0xad8>
   11e20:	cmp	r3, r0
   11e24:	bxeq	lr
   11e28:	ldr	r3, [pc, #16]	; 11e40 <strspn@plt+0xadc>
   11e2c:	cmp	r3, #0
   11e30:	bxeq	lr
   11e34:	bx	r3
   11e38:	andeq	r6, r2, ip
   11e3c:	andeq	r6, r2, ip
   11e40:	andeq	r0, r0, r0
   11e44:	ldr	r0, [pc, #36]	; 11e70 <strspn@plt+0xb0c>
   11e48:	ldr	r1, [pc, #36]	; 11e74 <strspn@plt+0xb10>
   11e4c:	sub	r1, r1, r0
   11e50:	asr	r1, r1, #2
   11e54:	add	r1, r1, r1, lsr #31
   11e58:	asrs	r1, r1, #1
   11e5c:	bxeq	lr
   11e60:	ldr	r3, [pc, #16]	; 11e78 <strspn@plt+0xb14>
   11e64:	cmp	r3, #0
   11e68:	bxeq	lr
   11e6c:	bx	r3
   11e70:	andeq	r6, r2, ip
   11e74:	andeq	r6, r2, ip
   11e78:	andeq	r0, r0, r0
   11e7c:	push	{r4, lr}
   11e80:	ldr	r4, [pc, #24]	; 11ea0 <strspn@plt+0xb3c>
   11e84:	ldrb	r3, [r4]
   11e88:	cmp	r3, #0
   11e8c:	popne	{r4, pc}
   11e90:	bl	11e18 <strspn@plt+0xab4>
   11e94:	mov	r3, #1
   11e98:	strb	r3, [r4]
   11e9c:	pop	{r4, pc}
   11ea0:	andeq	r6, r2, ip, lsr #32
   11ea4:	b	11e44 <strspn@plt+0xae0>
   11ea8:	push	{r4, r5, r6, r7, r8, r9, lr}
   11eac:	sub	sp, sp, #68	; 0x44
   11eb0:	ldr	r7, [pc, #228]	; 11f9c <strspn@plt+0xc38>
   11eb4:	mov	r6, r0
   11eb8:	mov	r2, #44	; 0x2c
   11ebc:	ldr	r3, [r7]
   11ec0:	mov	r8, r1
   11ec4:	add	r0, sp, #12
   11ec8:	mov	r1, #0
   11ecc:	str	r3, [sp, #60]	; 0x3c
   11ed0:	bl	11244 <memset@plt>
   11ed4:	mov	r3, #48	; 0x30
   11ed8:	str	r3, [sp, #8]
   11edc:	bl	11214 <__errno_location@plt>
   11ee0:	ldr	r4, [r6, #4]
   11ee4:	cmp	r4, #6
   11ee8:	mov	r9, r0
   11eec:	beq	11f34 <strspn@plt+0xbd0>
   11ef0:	mov	r3, #0
   11ef4:	ldr	r2, [r6, #8]
   11ef8:	str	r3, [r0]
   11efc:	ldrb	r3, [r6, #40]	; 0x28
   11f00:	str	r2, [sp, #4]
   11f04:	mov	r0, r8
   11f08:	tst	r3, #2
   11f0c:	orrne	r4, r4, #1073741824	; 0x40000000
   11f10:	mov	r1, r4
   11f14:	add	r2, sp, #4
   11f18:	bl	11358 <sched_setscheduler@plt>
   11f1c:	ldr	r2, [sp, #60]	; 0x3c
   11f20:	ldr	r3, [r7]
   11f24:	cmp	r2, r3
   11f28:	bne	11f98 <strspn@plt+0xc34>
   11f2c:	add	sp, sp, #68	; 0x44
   11f30:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f34:	mov	r1, r8
   11f38:	mov	r0, #0
   11f3c:	bl	11100 <getpriority@plt>
   11f40:	ldrd	r2, [r6, #16]
   11f44:	ldrb	r1, [r6, #40]	; 0x28
   11f48:	ldrd	r4, [r6, #32]
   11f4c:	strd	r2, [sp, #32]
   11f50:	ldrd	r2, [r6, #24]
   11f54:	tst	r1, #2
   11f58:	mov	r1, r8
   11f5c:	strd	r2, [sp, #40]	; 0x28
   11f60:	ldrd	r2, [r6, #4]
   11f64:	strd	r4, [sp, #48]	; 0x30
   11f68:	str	r3, [sp, #28]
   11f6c:	ldrne	r3, [sp, #16]
   11f70:	str	r2, [sp, #12]
   11f74:	orrne	r3, r3, #1073741824	; 0x40000000
   11f78:	strne	r3, [sp, #16]
   11f7c:	mov	r3, #0
   11f80:	str	r3, [r9]
   11f84:	add	r2, sp, #8
   11f88:	str	r0, [sp, #24]
   11f8c:	mov	r0, #380	; 0x17c
   11f90:	bl	111c0 <syscall@plt>
   11f94:	b	11f1c <strspn@plt+0xbb8>
   11f98:	bl	110f4 <__stack_chk_fail@plt>
   11f9c:	andeq	r5, r2, r8, asr #27
   11fa0:	cmp	r0, #3
   11fa4:	beq	1201c <strspn@plt+0xcb8>
   11fa8:	ble	11fd0 <strspn@plt+0xc6c>
   11fac:	cmp	r0, #6
   11fb0:	beq	12004 <strspn@plt+0xca0>
   11fb4:	ble	11fec <strspn@plt+0xc88>
   11fb8:	cmp	r0, #1073741825	; 0x40000001
   11fbc:	beq	11ffc <strspn@plt+0xc98>
   11fc0:	cmp	r0, #1073741826	; 0x40000002
   11fc4:	bne	1200c <strspn@plt+0xca8>
   11fc8:	ldr	r0, [pc, #84]	; 12024 <strspn@plt+0xcc0>
   11fcc:	bx	lr
   11fd0:	cmp	r0, #1
   11fd4:	beq	11ffc <strspn@plt+0xc98>
   11fd8:	bgt	11fc8 <strspn@plt+0xc64>
   11fdc:	cmp	r0, #0
   11fe0:	bne	1200c <strspn@plt+0xca8>
   11fe4:	ldr	r0, [pc, #60]	; 12028 <strspn@plt+0xcc4>
   11fe8:	bx	lr
   11fec:	cmp	r0, #5
   11ff0:	bne	1200c <strspn@plt+0xca8>
   11ff4:	ldr	r0, [pc, #48]	; 1202c <strspn@plt+0xcc8>
   11ff8:	bx	lr
   11ffc:	ldr	r0, [pc, #44]	; 12030 <strspn@plt+0xccc>
   12000:	bx	lr
   12004:	ldr	r0, [pc, #40]	; 12034 <strspn@plt+0xcd0>
   12008:	bx	lr
   1200c:	mov	r2, #5
   12010:	ldr	r1, [pc, #32]	; 12038 <strspn@plt+0xcd4>
   12014:	mov	r0, #0
   12018:	b	110dc <dcgettext@plt>
   1201c:	ldr	r0, [pc, #24]	; 1203c <strspn@plt+0xcd8>
   12020:	bx	lr
   12024:	andeq	r4, r1, r4, asr lr
   12028:	andeq	r4, r1, ip, lsr lr
   1202c:	andeq	r4, r1, r8, asr #28
   12030:	andeq	r4, r1, ip, ror lr
   12034:	andeq	r4, r1, ip, ror #28
   12038:	andeq	r4, r1, r8, lsl #29
   1203c:	andeq	r4, r1, r0, ror #28
   12040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12044:	sub	sp, sp, #108	; 0x6c
   12048:	ldr	r8, [pc, #560]	; 12280 <strspn@plt+0xf1c>
   1204c:	subs	r5, r1, #0
   12050:	mov	r7, r0
   12054:	ldr	r3, [r8]
   12058:	str	r3, [sp, #100]	; 0x64
   1205c:	beq	12230 <strspn@plt+0xecc>
   12060:	bl	11214 <__errno_location@plt>
   12064:	mov	r4, #0
   12068:	mov	r3, #48	; 0x30
   1206c:	add	r2, sp, #48	; 0x30
   12070:	mov	r1, r5
   12074:	str	r4, [r0]
   12078:	mov	r6, r0
   1207c:	str	r4, [sp]
   12080:	ldr	r0, [pc, #508]	; 12284 <strspn@plt+0xf20>
   12084:	bl	111c0 <syscall@plt>
   12088:	ldr	r3, [r6]
   1208c:	cmp	r0, r4
   12090:	beq	120f8 <strspn@plt+0xd94>
   12094:	cmp	r3, #38	; 0x26
   12098:	bne	1224c <strspn@plt+0xee8>
   1209c:	mov	sl, r4
   120a0:	mov	r9, r4
   120a4:	str	r4, [sp, #36]	; 0x24
   120a8:	str	r4, [sp, #28]
   120ac:	str	r4, [sp, #40]	; 0x28
   120b0:	str	r4, [sp, #32]
   120b4:	mov	r0, r5
   120b8:	bl	11130 <sched_getscheduler@plt>
   120bc:	cmn	r0, #1
   120c0:	mov	r6, r0
   120c4:	beq	12270 <strspn@plt+0xf0c>
   120c8:	add	r1, sp, #48	; 0x30
   120cc:	mov	r0, r5
   120d0:	bl	111e4 <sched_getparam@plt>
   120d4:	cmp	r0, #0
   120d8:	movne	r2, #5
   120dc:	ldrne	r1, [pc, #420]	; 12288 <strspn@plt+0xf24>
   120e0:	bne	12278 <strspn@plt+0xf14>
   120e4:	bic	r3, r6, #2
   120e8:	cmp	r3, #1073741825	; 0x40000001
   120ec:	ldr	fp, [sp, #48]	; 0x30
   120f0:	moveq	r4, #1
   120f4:	b	12138 <strspn@plt+0xdd4>
   120f8:	cmp	r3, #38	; 0x26
   120fc:	ldr	r3, [sp, #80]	; 0x50
   12100:	ldr	r4, [sp, #56]	; 0x38
   12104:	str	r3, [sp, #28]
   12108:	ldr	r3, [sp, #84]	; 0x54
   1210c:	and	r4, r4, #1
   12110:	str	r3, [sp, #32]
   12114:	ldr	r3, [sp, #72]	; 0x48
   12118:	ldr	r6, [sp, #52]	; 0x34
   1211c:	str	r3, [sp, #36]	; 0x24
   12120:	ldr	r3, [sp, #76]	; 0x4c
   12124:	ldr	fp, [sp, #68]	; 0x44
   12128:	str	r3, [sp, #40]	; 0x28
   1212c:	ldr	sl, [sp, #88]	; 0x58
   12130:	ldr	r9, [sp, #92]	; 0x5c
   12134:	beq	120b4 <strspn@plt+0xd50>
   12138:	ldrb	r0, [r7, #40]	; 0x28
   1213c:	mov	r2, #5
   12140:	ands	r0, r0, #4
   12144:	movne	r0, #0
   12148:	ldrne	r1, [pc, #316]	; 1228c <strspn@plt+0xf28>
   1214c:	ldreq	r1, [pc, #316]	; 12290 <strspn@plt+0xf2c>
   12150:	bl	110dc <dcgettext@plt>
   12154:	str	r0, [sp, #44]	; 0x2c
   12158:	mov	r0, r6
   1215c:	bl	11fa0 <strspn@plt+0xc3c>
   12160:	mov	r2, r5
   12164:	ldr	r1, [sp, #44]	; 0x2c
   12168:	mov	r3, r0
   1216c:	mov	r0, #1
   12170:	bl	1125c <__printf_chk@plt>
   12174:	cmp	r4, #0
   12178:	bne	1223c <strspn@plt+0xed8>
   1217c:	ldr	r3, [pc, #272]	; 12294 <strspn@plt+0xf30>
   12180:	mov	r0, #10
   12184:	ldr	r1, [r3]
   12188:	bl	112e0 <putc@plt>
   1218c:	ldrb	r0, [r7, #40]	; 0x28
   12190:	mov	r2, #5
   12194:	ands	r0, r0, #4
   12198:	movne	r0, #0
   1219c:	ldrne	r1, [pc, #244]	; 12298 <strspn@plt+0xf34>
   121a0:	ldreq	r1, [pc, #244]	; 1229c <strspn@plt+0xf38>
   121a4:	bl	110dc <dcgettext@plt>
   121a8:	mov	r3, fp
   121ac:	mov	r2, r5
   121b0:	mov	r1, r0
   121b4:	mov	r0, #1
   121b8:	bl	1125c <__printf_chk@plt>
   121bc:	cmp	r6, #6
   121c0:	bne	12218 <strspn@plt+0xeb4>
   121c4:	ldrb	r0, [r7, #40]	; 0x28
   121c8:	mov	r2, #5
   121cc:	ands	r0, r0, #4
   121d0:	movne	r0, #0
   121d4:	ldrne	r1, [pc, #196]	; 122a0 <strspn@plt+0xf3c>
   121d8:	ldreq	r1, [pc, #196]	; 122a4 <strspn@plt+0xf40>
   121dc:	bl	110dc <dcgettext@plt>
   121e0:	ldr	r3, [sp, #28]
   121e4:	str	sl, [sp, #16]
   121e8:	str	r3, [sp, #8]
   121ec:	ldr	r3, [sp, #32]
   121f0:	str	r9, [sp, #20]
   121f4:	str	r3, [sp, #12]
   121f8:	ldr	r3, [sp, #36]	; 0x24
   121fc:	mov	r2, r5
   12200:	str	r3, [sp]
   12204:	ldr	r3, [sp, #40]	; 0x28
   12208:	str	r3, [sp, #4]
   1220c:	mov	r1, r0
   12210:	mov	r0, #1
   12214:	bl	1125c <__printf_chk@plt>
   12218:	ldr	r2, [sp, #100]	; 0x64
   1221c:	ldr	r3, [r8]
   12220:	cmp	r2, r3
   12224:	bne	1226c <strspn@plt+0xf08>
   12228:	add	sp, sp, #108	; 0x6c
   1222c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12230:	bl	111a8 <getpid@plt>
   12234:	mov	r5, r0
   12238:	b	12060 <strspn@plt+0xcfc>
   1223c:	ldr	r1, [pc, #100]	; 122a8 <strspn@plt+0xf44>
   12240:	mov	r0, #1
   12244:	bl	1125c <__printf_chk@plt>
   12248:	b	1217c <strspn@plt+0xe18>
   1224c:	ldr	r1, [pc, #88]	; 122ac <strspn@plt+0xf48>
   12250:	mov	r0, r4
   12254:	mov	r2, #5
   12258:	bl	110dc <dcgettext@plt>
   1225c:	mov	r2, r5
   12260:	mov	r1, r0
   12264:	mov	r0, #1
   12268:	bl	11118 <err@plt>
   1226c:	bl	110f4 <__stack_chk_fail@plt>
   12270:	ldr	r1, [pc, #52]	; 122ac <strspn@plt+0xf48>
   12274:	mov	r2, #5
   12278:	mov	r0, #0
   1227c:	b	12258 <strspn@plt+0xef4>
   12280:	andeq	r5, r2, r8, asr #27
   12284:	andeq	r0, r0, sp, ror r1
   12288:			; <UNDEFINED> instruction: 0x00014eb0
   1228c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12290:	strdeq	r4, [r1], -r8
   12294:	andeq	r6, r2, r4, lsr #32
   12298:	andeq	r4, r1, r8, lsr pc
   1229c:	andeq	r4, r1, r0, ror #30
   122a0:	andeq	r4, r1, ip, lsl #31
   122a4:	andeq	r4, r1, ip, asr #31
   122a8:	andeq	r4, r1, r0, lsr #30
   122ac:	muleq	r1, r0, lr
   122b0:	push	{r4, r5, r6, lr}
   122b4:	sub	sp, sp, #8
   122b8:	ldr	r6, [pc, #140]	; 1234c <strspn@plt+0xfe8>
   122bc:	ldrb	r2, [r0, #40]	; 0x28
   122c0:	ldr	r1, [r0]
   122c4:	ldr	r3, [r6]
   122c8:	tst	r2, #1
   122cc:	str	r3, [sp, #4]
   122d0:	beq	1232c <strspn@plt+0xfc8>
   122d4:	mov	r4, r0
   122d8:	mov	r0, r1
   122dc:	bl	145d8 <strspn@plt+0x3274>
   122e0:	subs	r5, r0, #0
   122e4:	bne	1230c <strspn@plt+0xfa8>
   122e8:	ldr	r1, [pc, #96]	; 12350 <strspn@plt+0xfec>
   122ec:	mov	r2, #5
   122f0:	bl	110dc <dcgettext@plt>
   122f4:	mov	r1, r0
   122f8:	mov	r0, #1
   122fc:	bl	11118 <err@plt>
   12300:	ldr	r1, [sp]
   12304:	mov	r0, r4
   12308:	bl	12040 <strspn@plt+0xcdc>
   1230c:	mov	r1, sp
   12310:	mov	r0, r5
   12314:	bl	146b8 <strspn@plt+0x3354>
   12318:	cmp	r0, #0
   1231c:	beq	12300 <strspn@plt+0xf9c>
   12320:	mov	r0, r5
   12324:	bl	14690 <strspn@plt+0x332c>
   12328:	b	12330 <strspn@plt+0xfcc>
   1232c:	bl	12040 <strspn@plt+0xcdc>
   12330:	ldr	r2, [sp, #4]
   12334:	ldr	r3, [r6]
   12338:	cmp	r2, r3
   1233c:	bne	12348 <strspn@plt+0xfe4>
   12340:	add	sp, sp, #8
   12344:	pop	{r4, r5, r6, pc}
   12348:	bl	110f4 <__stack_chk_fail@plt>
   1234c:	andeq	r5, r2, r8, asr #27
   12350:	andeq	r5, r1, r0, lsl r0
   12354:	ldr	r3, [pc, #292]	; 12480 <strspn@plt+0x111c>
   12358:	push	{r4, r5, r6, lr}
   1235c:	ldr	r4, [r3]
   12360:	mov	r0, r4
   12364:	bl	1113c <__fpending@plt>
   12368:	mov	r6, r0
   1236c:	mov	r0, r4
   12370:	bl	11094 <ferror@plt>
   12374:	mov	r5, r0
   12378:	mov	r0, r4
   1237c:	bl	11280 <fclose@plt>
   12380:	cmp	r5, #0
   12384:	mov	r4, r0
   12388:	bne	12430 <strspn@plt+0x10cc>
   1238c:	cmp	r0, #0
   12390:	beq	123ac <strspn@plt+0x1048>
   12394:	bl	11214 <__errno_location@plt>
   12398:	cmp	r6, #0
   1239c:	ldr	r3, [r0]
   123a0:	bne	12408 <strspn@plt+0x10a4>
   123a4:	cmp	r3, #9
   123a8:	bne	12408 <strspn@plt+0x10a4>
   123ac:	ldr	r3, [pc, #208]	; 12484 <strspn@plt+0x1120>
   123b0:	ldr	r4, [r3]
   123b4:	mov	r0, r4
   123b8:	bl	1113c <__fpending@plt>
   123bc:	mov	r6, r0
   123c0:	mov	r0, r4
   123c4:	bl	11094 <ferror@plt>
   123c8:	mov	r5, r0
   123cc:	mov	r0, r4
   123d0:	bl	11280 <fclose@plt>
   123d4:	cmp	r5, #0
   123d8:	mov	r4, r0
   123dc:	bne	12464 <strspn@plt+0x1100>
   123e0:	cmp	r0, #0
   123e4:	popeq	{r4, r5, r6, pc}
   123e8:	cmp	r6, #0
   123ec:	bne	12400 <strspn@plt+0x109c>
   123f0:	bl	11214 <__errno_location@plt>
   123f4:	ldr	r3, [r0]
   123f8:	cmp	r3, #9
   123fc:	popeq	{r4, r5, r6, pc}
   12400:	mov	r0, #1
   12404:	bl	110ac <_exit@plt>
   12408:	cmp	r3, #32
   1240c:	beq	123ac <strspn@plt+0x1048>
   12410:	cmp	r3, #0
   12414:	beq	1244c <strspn@plt+0x10e8>
   12418:	mov	r2, #5
   1241c:	ldr	r1, [pc, #100]	; 12488 <strspn@plt+0x1124>
   12420:	mov	r0, #0
   12424:	bl	110dc <dcgettext@plt>
   12428:	bl	112a4 <warn@plt>
   1242c:	b	12400 <strspn@plt+0x109c>
   12430:	bl	11214 <__errno_location@plt>
   12434:	cmp	r4, #0
   12438:	ldr	r3, [r0]
   1243c:	bne	12408 <strspn@plt+0x10a4>
   12440:	cmp	r3, #32
   12444:	strne	r4, [r0]
   12448:	beq	123ac <strspn@plt+0x1048>
   1244c:	mov	r2, #5
   12450:	ldr	r1, [pc, #48]	; 12488 <strspn@plt+0x1124>
   12454:	mov	r0, #0
   12458:	bl	110dc <dcgettext@plt>
   1245c:	bl	11208 <warnx@plt>
   12460:	b	12400 <strspn@plt+0x109c>
   12464:	cmp	r0, #0
   12468:	bne	12400 <strspn@plt+0x109c>
   1246c:	bl	11214 <__errno_location@plt>
   12470:	ldr	r3, [r0]
   12474:	cmp	r3, #32
   12478:	strne	r4, [r0]
   1247c:	b	12400 <strspn@plt+0x109c>
   12480:	andeq	r6, r2, r4, lsr #32
   12484:	andeq	r6, r2, r0, lsr #32
   12488:	andeq	r5, r1, r0, lsr r0
   1248c:	andeq	r0, r0, r0
   12490:	cmp	r0, #0
   12494:	mov	r3, #0
   12498:	str	r3, [r1]
   1249c:	bxeq	lr
   124a0:	ldrsb	r2, [r0]
   124a4:	cmp	r2, #47	; 0x2f
   124a8:	bne	124e4 <strspn@plt+0x1180>
   124ac:	ldrsb	r3, [r0, #1]
   124b0:	cmp	r3, #47	; 0x2f
   124b4:	bne	124ec <strspn@plt+0x1188>
   124b8:	add	r3, r0, #1
   124bc:	b	124cc <strspn@plt+0x1168>
   124c0:	ldrsb	r2, [r3]
   124c4:	cmp	r2, #47	; 0x2f
   124c8:	bne	124ec <strspn@plt+0x1188>
   124cc:	cmp	r3, #0
   124d0:	mov	r0, r3
   124d4:	bxeq	lr
   124d8:	ldrsb	r2, [r3], #1
   124dc:	cmp	r2, #47	; 0x2f
   124e0:	beq	124c0 <strspn@plt+0x115c>
   124e4:	cmp	r2, #0
   124e8:	beq	12528 <strspn@plt+0x11c4>
   124ec:	mov	r3, #1
   124f0:	str	r3, [r1]
   124f4:	ldrsb	r3, [r0, #1]
   124f8:	add	r2, r0, #1
   124fc:	cmp	r3, #47	; 0x2f
   12500:	cmpne	r3, #0
   12504:	bxeq	lr
   12508:	rsb	r3, r0, #1
   1250c:	add	ip, r2, r3
   12510:	str	ip, [r1]
   12514:	ldrsb	ip, [r2, #1]!
   12518:	cmp	ip, #0
   1251c:	cmpne	ip, #47	; 0x2f
   12520:	bne	1250c <strspn@plt+0x11a8>
   12524:	bx	lr
   12528:	mov	r0, r2
   1252c:	bx	lr
   12530:	push	{r4, r5, r6, r7, r8, lr}
   12534:	mov	r7, r1
   12538:	ldrsb	r1, [r0]
   1253c:	cmp	r1, #0
   12540:	movne	r5, r0
   12544:	movne	r4, #0
   12548:	beq	125b4 <strspn@plt+0x1250>
   1254c:	cmp	r1, #92	; 0x5c
   12550:	addne	r6, r5, r4
   12554:	beq	12584 <strspn@plt+0x1220>
   12558:	mov	r0, r7
   1255c:	bl	111f0 <strchr@plt>
   12560:	cmp	r0, #0
   12564:	bne	125ac <strspn@plt+0x1248>
   12568:	ldrsb	r1, [r6, #1]!
   1256c:	add	r4, r4, #1
   12570:	mov	r0, r4
   12574:	cmp	r1, #0
   12578:	popeq	{r4, r5, r6, r7, r8, pc}
   1257c:	cmp	r1, #92	; 0x5c
   12580:	bne	12558 <strspn@plt+0x11f4>
   12584:	add	r3, r5, r4
   12588:	ldrsb	r3, [r3, #1]
   1258c:	cmp	r3, #0
   12590:	beq	125ac <strspn@plt+0x1248>
   12594:	add	r4, r4, #2
   12598:	mov	r0, r4
   1259c:	ldrsb	r1, [r5, r4]
   125a0:	cmp	r1, #0
   125a4:	bne	1254c <strspn@plt+0x11e8>
   125a8:	pop	{r4, r5, r6, r7, r8, pc}
   125ac:	mov	r0, r4
   125b0:	pop	{r4, r5, r6, r7, r8, pc}
   125b4:	mov	r0, r1
   125b8:	pop	{r4, r5, r6, r7, r8, pc}
   125bc:	ldr	ip, [pc, #244]	; 126b8 <strspn@plt+0x1354>
   125c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   125c4:	add	ip, pc, ip
   125c8:	ldr	lr, [pc, #236]	; 126bc <strspn@plt+0x1358>
   125cc:	sub	sp, sp, #12
   125d0:	mov	r5, #0
   125d4:	ldr	r7, [ip, lr]
   125d8:	mov	r4, r0
   125dc:	mov	r8, r1
   125e0:	ldr	r3, [r7]
   125e4:	mov	r0, ip
   125e8:	mov	r9, r2
   125ec:	str	r5, [sp]
   125f0:	str	r3, [sp, #4]
   125f4:	bl	11214 <__errno_location@plt>
   125f8:	cmp	r4, r5
   125fc:	str	r5, [r0]
   12600:	beq	12610 <strspn@plt+0x12ac>
   12604:	ldrsb	r3, [r4]
   12608:	cmp	r3, r5
   1260c:	bne	12630 <strspn@plt+0x12cc>
   12610:	ldr	r1, [pc, #168]	; 126c0 <strspn@plt+0x135c>
   12614:	mov	r3, r4
   12618:	add	r1, pc, r1
   1261c:	mov	r2, r8
   12620:	ldr	r0, [r1]
   12624:	ldr	r1, [pc, #152]	; 126c4 <strspn@plt+0x1360>
   12628:	add	r1, pc, r1
   1262c:	bl	11298 <errx@plt>
   12630:	mov	r6, r0
   12634:	mov	r2, r9
   12638:	mov	r3, r5
   1263c:	mov	r1, sp
   12640:	mov	r0, r4
   12644:	bl	110d0 <__strtoull_internal@plt>
   12648:	ldr	r2, [r6]
   1264c:	cmp	r2, r5
   12650:	bne	1268c <strspn@plt+0x1328>
   12654:	ldr	r3, [sp]
   12658:	cmp	r3, r4
   1265c:	beq	12610 <strspn@plt+0x12ac>
   12660:	cmp	r3, r5
   12664:	beq	12674 <strspn@plt+0x1310>
   12668:	ldrsb	r3, [r3]
   1266c:	cmp	r3, r5
   12670:	bne	12610 <strspn@plt+0x12ac>
   12674:	ldr	r2, [sp, #4]
   12678:	ldr	r3, [r7]
   1267c:	cmp	r2, r3
   12680:	bne	126b4 <strspn@plt+0x1350>
   12684:	add	sp, sp, #12
   12688:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1268c:	ldr	r3, [pc, #52]	; 126c8 <strspn@plt+0x1364>
   12690:	cmp	r2, #34	; 0x22
   12694:	add	r3, pc, r3
   12698:	ldr	r0, [r3]
   1269c:	bne	12610 <strspn@plt+0x12ac>
   126a0:	ldr	r1, [pc, #36]	; 126cc <strspn@plt+0x1368>
   126a4:	mov	r3, r4
   126a8:	mov	r2, r8
   126ac:	add	r1, pc, r1
   126b0:	bl	11118 <err@plt>
   126b4:	bl	110f4 <__stack_chk_fail@plt>
   126b8:	andeq	r3, r1, r0, lsl #18
   126bc:	andeq	r0, r0, ip, lsr #2
   126c0:	andeq	r3, r1, r8, ror #19
   126c4:	andeq	r3, r0, ip, asr #3
   126c8:	andeq	r3, r1, ip, ror #18
   126cc:	andeq	r3, r0, r8, asr #2
   126d0:	push	{r4, lr}
   126d4:	mov	r5, r0
   126d8:	mov	r4, r1
   126dc:	bl	11214 <__errno_location@plt>
   126e0:	ldr	ip, [pc, #32]	; 12708 <strspn@plt+0x13a4>
   126e4:	ldr	r1, [pc, #32]	; 1270c <strspn@plt+0x13a8>
   126e8:	add	ip, pc, ip
   126ec:	mov	lr, #34	; 0x22
   126f0:	mov	r3, r5
   126f4:	mov	r2, r4
   126f8:	add	r1, pc, r1
   126fc:	str	lr, [r0]
   12700:	ldr	r0, [ip]
   12704:	bl	11118 <err@plt>
   12708:	andeq	r3, r1, r8, lsl r9
   1270c:	strdeq	r3, [r0], -ip
   12710:	push	{r4, r5, r6, lr}
   12714:	mov	r4, r0
   12718:	mov	r5, r1
   1271c:	bl	125bc <strspn@plt+0x1258>
   12720:	mov	r3, #0
   12724:	mvn	r2, #0
   12728:	cmp	r1, r3
   1272c:	cmpeq	r0, r2
   12730:	popls	{r4, r5, r6, pc}
   12734:	mov	r1, r5
   12738:	mov	r0, r4
   1273c:	bl	126d0 <strspn@plt+0x136c>
   12740:	ldr	r3, [pc, #8]	; 12750 <strspn@plt+0x13ec>
   12744:	add	r3, pc, r3
   12748:	str	r0, [r3]
   1274c:	bx	lr
   12750:			; <UNDEFINED> instruction: 0x000138bc
   12754:	ldr	r3, [pc, #1648]	; 12dcc <strspn@plt+0x1a68>
   12758:	ldr	ip, [pc, #1648]	; 12dd0 <strspn@plt+0x1a6c>
   1275c:	add	r3, pc, r3
   12760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12764:	mov	r5, r1
   12768:	ldr	r1, [r3, ip]
   1276c:	sub	sp, sp, #52	; 0x34
   12770:	mov	ip, r1
   12774:	mov	r8, r0
   12778:	str	r1, [sp, #24]
   1277c:	mov	r0, #0
   12780:	mov	r1, #0
   12784:	ldr	r3, [ip]
   12788:	strd	r0, [r5]
   1278c:	mov	r9, r2
   12790:	str	r3, [sp, #44]	; 0x2c
   12794:	bl	11214 <__errno_location@plt>
   12798:	cmp	r8, #0
   1279c:	mov	r4, r0
   127a0:	beq	12980 <strspn@plt+0x161c>
   127a4:	ldrsb	fp, [r8]
   127a8:	cmp	fp, #0
   127ac:	beq	12980 <strspn@plt+0x161c>
   127b0:	bl	1119c <__ctype_b_loc@plt>
   127b4:	mov	r2, r8
   127b8:	ldr	r1, [r0]
   127bc:	b	127c4 <strspn@plt+0x1460>
   127c0:	ldrsb	fp, [r2, #1]!
   127c4:	uxtb	r3, fp
   127c8:	lsl	r3, r3, #1
   127cc:	ldrh	ip, [r1, r3]
   127d0:	ands	ip, ip, #8192	; 0x2000
   127d4:	bne	127c0 <strspn@plt+0x145c>
   127d8:	cmp	fp, #45	; 0x2d
   127dc:	beq	12980 <strspn@plt+0x161c>
   127e0:	add	fp, sp, #40	; 0x28
   127e4:	mov	r3, ip
   127e8:	mov	r2, ip
   127ec:	str	ip, [r4]
   127f0:	mov	r1, fp
   127f4:	mov	r0, r8
   127f8:	str	ip, [sp, #40]	; 0x28
   127fc:	bl	110d0 <__strtoull_internal@plt>
   12800:	ldr	sl, [sp, #40]	; 0x28
   12804:	cmp	sl, r8
   12808:	mov	r2, r0
   1280c:	mov	r3, r1
   12810:	ldr	r0, [r4]
   12814:	strd	r2, [sp, #16]
   12818:	beq	12b00 <strspn@plt+0x179c>
   1281c:	cmp	r0, #0
   12820:	bne	129a8 <strspn@plt+0x1644>
   12824:	cmp	sl, #0
   12828:	beq	12b34 <strspn@plt+0x17d0>
   1282c:	ldrsb	r0, [sl]
   12830:	cmp	r0, #0
   12834:	beq	12b28 <strspn@plt+0x17c4>
   12838:	mov	r8, #0
   1283c:	mov	r2, #0
   12840:	mov	r3, #0
   12844:	str	r9, [sp, #32]
   12848:	mov	r6, fp
   1284c:	mov	r9, sl
   12850:	mov	r7, r8
   12854:	mov	sl, r2
   12858:	mov	fp, r3
   1285c:	str	r5, [sp, #28]
   12860:	ldrsb	r2, [r9, #1]
   12864:	cmp	r2, #105	; 0x69
   12868:	beq	129ec <strspn@plt+0x1688>
   1286c:	bic	r1, r2, #32
   12870:	cmp	r1, #66	; 0x42
   12874:	bne	12b0c <strspn@plt+0x17a8>
   12878:	ldrsb	r2, [r9, #2]
   1287c:	cmp	r2, #0
   12880:	beq	12cf0 <strspn@plt+0x198c>
   12884:	bl	112c8 <localeconv@plt>
   12888:	cmp	r0, #0
   1288c:	beq	12980 <strspn@plt+0x161c>
   12890:	ldr	r2, [r0]
   12894:	cmp	r2, #0
   12898:	beq	12980 <strspn@plt+0x161c>
   1289c:	mov	r0, r2
   128a0:	str	r2, [sp]
   128a4:	bl	111d8 <strlen@plt>
   128a8:	orrs	r3, sl, fp
   128ac:	mov	r5, r0
   128b0:	bne	12980 <strspn@plt+0x161c>
   128b4:	ldrsb	r1, [r9]
   128b8:	cmp	r1, #0
   128bc:	beq	12980 <strspn@plt+0x161c>
   128c0:	ldr	r2, [sp]
   128c4:	mov	r1, r9
   128c8:	mov	r0, r2
   128cc:	mov	r2, r5
   128d0:	bl	1131c <strncmp@plt>
   128d4:	cmp	r0, #0
   128d8:	bne	12980 <strspn@plt+0x161c>
   128dc:	ldrsb	r2, [r9, r5]
   128e0:	add	r5, r9, r5
   128e4:	cmp	r2, #48	; 0x30
   128e8:	bne	12908 <strspn@plt+0x15a4>
   128ec:	add	r8, r8, #1
   128f0:	sub	r1, r8, r5
   128f4:	mov	r3, r5
   128f8:	add	r8, r3, r1
   128fc:	ldrsb	r2, [r3, #1]!
   12900:	cmp	r2, #48	; 0x30
   12904:	beq	128f8 <strspn@plt+0x1594>
   12908:	mov	r3, #0
   1290c:	str	r7, [r4]
   12910:	mov	r2, r3
   12914:	mov	r1, r6
   12918:	mov	r0, r5
   1291c:	str	r7, [sp, #40]	; 0x28
   12920:	bl	110d0 <__strtoull_internal@plt>
   12924:	ldr	r9, [sp, #40]	; 0x28
   12928:	cmp	r9, r5
   1292c:	mov	sl, r0
   12930:	mov	fp, r1
   12934:	beq	12afc <strspn@plt+0x1798>
   12938:	ldr	ip, [r4]
   1293c:	cmp	ip, #0
   12940:	beq	129d8 <strspn@plt+0x1674>
   12944:	subs	r3, r0, #1
   12948:	str	r3, [sp, #8]
   1294c:	sbc	r3, r1, #0
   12950:	str	r3, [sp, #12]
   12954:	ldrd	r2, [sp, #8]
   12958:	mvn	r1, #0
   1295c:	mvn	r0, #2
   12960:	cmp	r3, r1
   12964:	cmpeq	r2, r0
   12968:	bhi	12d2c <strspn@plt+0x19c8>
   1296c:	cmp	r9, #0
   12970:	beq	12980 <strspn@plt+0x161c>
   12974:	ldrsb	r2, [r9]
   12978:	cmp	r2, #0
   1297c:	bne	12860 <strspn@plt+0x14fc>
   12980:	mov	r3, #22
   12984:	mvn	r0, #21
   12988:	str	r3, [r4]
   1298c:	ldr	r3, [sp, #24]
   12990:	ldr	r2, [sp, #44]	; 0x2c
   12994:	ldr	r3, [r3]
   12998:	cmp	r2, r3
   1299c:	bne	12dc8 <strspn@plt+0x1a64>
   129a0:	add	sp, sp, #52	; 0x34
   129a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129a8:	subs	r6, r2, #1
   129ac:	sbc	r7, r3, #0
   129b0:	mvn	r3, #0
   129b4:	mvn	r2, #2
   129b8:	cmp	r7, r3
   129bc:	cmpeq	r6, r2
   129c0:	bls	12824 <strspn@plt+0x14c0>
   129c4:	rsb	r0, r0, #0
   129c8:	cmp	r0, #0
   129cc:	bge	1298c <strspn@plt+0x1628>
   129d0:	rsb	r3, r0, #0
   129d4:	b	12988 <strspn@plt+0x1624>
   129d8:	orrs	r3, sl, fp
   129dc:	bne	1296c <strspn@plt+0x1608>
   129e0:	ldrsb	r2, [r9, #1]
   129e4:	cmp	r2, #105	; 0x69
   129e8:	bne	1286c <strspn@plt+0x1508>
   129ec:	ldrsb	r2, [r9, #2]
   129f0:	bic	r2, r2, #32
   129f4:	cmp	r2, #66	; 0x42
   129f8:	bne	12884 <strspn@plt+0x1520>
   129fc:	ldrsb	r2, [r9, #3]
   12a00:	cmp	r2, #0
   12a04:	bne	12884 <strspn@plt+0x1520>
   12a08:	strd	sl, [sp]
   12a0c:	mov	sl, r9
   12a10:	ldr	r9, [sp, #32]
   12a14:	mov	r3, #1024	; 0x400
   12a18:	ldr	r5, [sp, #28]
   12a1c:	str	r3, [sp, #28]
   12a20:	ldrsb	r7, [sl]
   12a24:	ldr	r6, [pc, #936]	; 12dd4 <strspn@plt+0x1a70>
   12a28:	add	r6, pc, r6
   12a2c:	mov	r1, r7
   12a30:	mov	r0, r6
   12a34:	bl	111f0 <strchr@plt>
   12a38:	cmp	r0, #0
   12a3c:	beq	12d0c <strspn@plt+0x19a8>
   12a40:	sub	ip, r0, r6
   12a44:	add	fp, ip, #1
   12a48:	cmp	fp, #0
   12a4c:	beq	12b18 <strspn@plt+0x17b4>
   12a50:	ldr	r3, [sp, #20]
   12a54:	ldr	r6, [sp, #28]
   12a58:	cmp	r3, #0
   12a5c:	mov	r0, #0
   12a60:	asr	r7, r6, #31
   12a64:	mov	r1, #0
   12a68:	bne	12d68 <strspn@plt+0x1a04>
   12a6c:	orrs	r3, r0, r1
   12a70:	bne	12b5c <strspn@plt+0x17f8>
   12a74:	str	fp, [sp, #32]
   12a78:	sub	ip, ip, #1
   12a7c:	str	r8, [sp, #36]	; 0x24
   12a80:	mov	fp, r4
   12a84:	ldrd	r0, [sp, #16]
   12a88:	mov	lr, r5
   12a8c:	mov	sl, r9
   12a90:	b	12aa0 <strspn@plt+0x173c>
   12a94:	orrs	r3, r4, r5
   12a98:	sub	ip, ip, #1
   12a9c:	bne	12b44 <strspn@plt+0x17e0>
   12aa0:	mul	r2, r0, r7
   12aa4:	cmn	ip, #1
   12aa8:	mla	r2, r6, r1, r2
   12aac:	umull	r0, r1, r0, r6
   12ab0:	add	r2, r2, r1
   12ab4:	mov	r1, r2
   12ab8:	beq	12cd0 <strspn@plt+0x196c>
   12abc:	cmp	r2, #0
   12ac0:	mov	r4, #0
   12ac4:	mov	r5, #0
   12ac8:	beq	12a94 <strspn@plt+0x1730>
   12acc:	umull	r2, r3, r6, r2
   12ad0:	umull	r8, r9, r0, r6
   12ad4:	strd	r2, [sp, #8]
   12ad8:	mov	r8, r9
   12adc:	ldr	r3, [sp, #12]
   12ae0:	adds	r8, r2, r8
   12ae4:	mov	r2, #0
   12ae8:	adc	r3, r3, r2
   12aec:	cmp	r3, r2
   12af0:	movne	r4, #1
   12af4:	movne	r5, #0
   12af8:	b	12a94 <strspn@plt+0x1730>
   12afc:	ldr	r0, [r4]
   12b00:	cmp	r0, #0
   12b04:	beq	12980 <strspn@plt+0x161c>
   12b08:	b	129c4 <strspn@plt+0x1660>
   12b0c:	cmp	r2, #0
   12b10:	bne	12884 <strspn@plt+0x1520>
   12b14:	b	12a08 <strspn@plt+0x16a4>
   12b18:	cmp	r9, #0
   12b1c:	movne	r0, fp
   12b20:	bne	12b68 <strspn@plt+0x1804>
   12b24:	mov	r0, r9
   12b28:	ldrd	r2, [sp, #16]
   12b2c:	strd	r2, [r5]
   12b30:	b	1298c <strspn@plt+0x1628>
   12b34:	ldrd	r2, [sp, #16]
   12b38:	mov	r0, sl
   12b3c:	strd	r2, [r5]
   12b40:	b	1298c <strspn@plt+0x1628>
   12b44:	mov	r4, fp
   12b48:	ldr	r8, [sp, #36]	; 0x24
   12b4c:	ldr	fp, [sp, #32]
   12b50:	mov	r5, lr
   12b54:	mov	r9, sl
   12b58:	strd	r0, [sp, #16]
   12b5c:	mvn	r0, #33	; 0x21
   12b60:	cmp	r9, #0
   12b64:	beq	12b6c <strspn@plt+0x1808>
   12b68:	str	fp, [r9]
   12b6c:	ldrd	r2, [sp]
   12b70:	mov	r1, r2
   12b74:	orrs	r3, r1, r3
   12b78:	movne	r3, #1
   12b7c:	moveq	r3, #0
   12b80:	cmp	fp, #0
   12b84:	moveq	r3, #0
   12b88:	cmp	r3, #0
   12b8c:	beq	12cc4 <strspn@plt+0x1960>
   12b90:	ldr	r3, [pc, #576]	; 12dd8 <strspn@plt+0x1a74>
   12b94:	ldr	r1, [pc, #576]	; 12ddc <strspn@plt+0x1a78>
   12b98:	umull	ip, r3, r3, r8
   12b9c:	smull	ip, r1, r1, r8
   12ba0:	lsr	r3, r3, #1
   12ba4:	rsb	r1, r1, r8, asr #31
   12ba8:	add	r3, r3, r3, lsl #1
   12bac:	add	r1, r1, fp
   12bb0:	subs	r3, r8, r3
   12bb4:	sub	r6, r1, #1
   12bb8:	bne	12d34 <strspn@plt+0x19d0>
   12bbc:	ldrd	r8, [sp]
   12bc0:	adds	r3, r8, r8
   12bc4:	adc	r2, r9, r9
   12bc8:	adds	r3, r3, r8
   12bcc:	adc	r2, r2, r9
   12bd0:	lsl	ip, r3, #5
   12bd4:	lsl	lr, r2, #5
   12bd8:	orr	lr, lr, r3, lsr #27
   12bdc:	adds	r3, r3, ip
   12be0:	adc	r2, r2, lr
   12be4:	adds	r3, r8, r3
   12be8:	str	r3, [sp]
   12bec:	ldr	r3, [sp, #4]
   12bf0:	adc	r3, r3, r2
   12bf4:	str	r3, [sp, #4]
   12bf8:	cmp	r6, #0
   12bfc:	blt	12980 <strspn@plt+0x161c>
   12c00:	beq	12ca8 <strspn@plt+0x1944>
   12c04:	ldr	r3, [sp, #4]
   12c08:	ldr	r8, [sp, #28]
   12c0c:	cmp	r3, #0
   12c10:	mov	r6, #0
   12c14:	asr	r9, r8, #31
   12c18:	mov	r7, #0
   12c1c:	bne	12d9c <strspn@plt+0x1a38>
   12c20:	orrs	r3, r6, r7
   12c24:	bne	12ca8 <strspn@plt+0x1944>
   12c28:	sub	r1, r1, #3
   12c2c:	ldrd	r2, [sp]
   12c30:	mov	lr, r4
   12c34:	str	r5, [sp, #8]
   12c38:	b	12c48 <strspn@plt+0x18e4>
   12c3c:	orrs	ip, r6, r7
   12c40:	sub	r1, r1, #1
   12c44:	bne	12c9c <strspn@plt+0x1938>
   12c48:	mul	ip, r2, r9
   12c4c:	cmn	r1, #1
   12c50:	mla	ip, r8, r3, ip
   12c54:	umull	r2, r3, r2, r8
   12c58:	add	ip, ip, r3
   12c5c:	mov	r3, ip
   12c60:	beq	12c9c <strspn@plt+0x1938>
   12c64:	cmp	ip, #0
   12c68:	mov	r6, #0
   12c6c:	mov	r7, #0
   12c70:	beq	12c3c <strspn@plt+0x18d8>
   12c74:	umull	sl, fp, r2, r8
   12c78:	umull	r4, r5, r8, ip
   12c7c:	mov	ip, fp
   12c80:	adds	ip, r4, ip
   12c84:	mov	ip, #0
   12c88:	adc	ip, r5, ip
   12c8c:	cmp	ip, #0
   12c90:	movne	r6, #1
   12c94:	movne	r7, #0
   12c98:	b	12c3c <strspn@plt+0x18d8>
   12c9c:	ldr	r5, [sp, #8]
   12ca0:	mov	r4, lr
   12ca4:	strd	r2, [sp]
   12ca8:	ldrd	r2, [sp]
   12cac:	ldr	r1, [sp, #16]
   12cb0:	adds	r1, r1, r2
   12cb4:	str	r1, [sp, #16]
   12cb8:	ldr	r1, [sp, #20]
   12cbc:	adc	r3, r1, r3
   12cc0:	str	r3, [sp, #20]
   12cc4:	ldrd	r2, [sp, #16]
   12cc8:	strd	r2, [r5]
   12ccc:	b	129c8 <strspn@plt+0x1664>
   12cd0:	mov	r4, fp
   12cd4:	strd	r0, [sp, #16]
   12cd8:	ldr	r8, [sp, #36]	; 0x24
   12cdc:	ldr	fp, [sp, #32]
   12ce0:	mov	r5, lr
   12ce4:	mov	r9, sl
   12ce8:	mov	r0, #0
   12cec:	b	12b60 <strspn@plt+0x17fc>
   12cf0:	mov	r3, #1000	; 0x3e8
   12cf4:	strd	sl, [sp]
   12cf8:	ldr	r5, [sp, #28]
   12cfc:	mov	sl, r9
   12d00:	str	r3, [sp, #28]
   12d04:	ldr	r9, [sp, #32]
   12d08:	b	12a20 <strspn@plt+0x16bc>
   12d0c:	ldr	r6, [pc, #204]	; 12de0 <strspn@plt+0x1a7c>
   12d10:	mov	r1, r7
   12d14:	add	r6, pc, r6
   12d18:	mov	r0, r6
   12d1c:	bl	111f0 <strchr@plt>
   12d20:	cmp	r0, #0
   12d24:	bne	12a40 <strspn@plt+0x16dc>
   12d28:	b	12980 <strspn@plt+0x161c>
   12d2c:	mov	r0, ip
   12d30:	b	129c4 <strspn@plt+0x1660>
   12d34:	cmp	r3, #1
   12d38:	bne	12bf8 <strspn@plt+0x1894>
   12d3c:	ldrd	r8, [sp]
   12d40:	lsl	r2, r9, #2
   12d44:	lsl	r3, r8, #2
   12d48:	adds	r3, r3, r8
   12d4c:	orr	r2, r2, r8, lsr #30
   12d50:	adc	r2, r2, r9
   12d54:	adds	r3, r3, r3
   12d58:	str	r3, [sp]
   12d5c:	adc	r3, r2, r2
   12d60:	str	r3, [sp, #4]
   12d64:	b	12bf8 <strspn@plt+0x1894>
   12d68:	ldr	lr, [sp, #28]
   12d6c:	ldr	r3, [sp, #16]
   12d70:	ldr	sl, [sp, #20]
   12d74:	umull	r2, r3, r3, lr
   12d78:	str	r3, [sp, #8]
   12d7c:	mov	r3, #0
   12d80:	str	r3, [sp, #12]
   12d84:	ldrd	r2, [sp, #8]
   12d88:	umlal	r2, r3, sl, lr
   12d8c:	cmp	r3, #0
   12d90:	movne	r0, #1
   12d94:	movne	r1, #0
   12d98:	b	12a6c <strspn@plt+0x1708>
   12d9c:	ldr	r3, [sp]
   12da0:	ldr	ip, [sp, #28]
   12da4:	ldr	lr, [sp, #4]
   12da8:	umull	sl, fp, r3, ip
   12dac:	mov	r3, #0
   12db0:	mov	r2, fp
   12db4:	umlal	r2, r3, lr, ip
   12db8:	cmp	r3, #0
   12dbc:	movne	r6, #1
   12dc0:	movne	r7, #0
   12dc4:	b	12c20 <strspn@plt+0x18bc>
   12dc8:	bl	110f4 <__stack_chk_fail@plt>
   12dcc:	andeq	r3, r1, r8, ror #14
   12dd0:	andeq	r0, r0, ip, lsr #2
   12dd4:	ldrdeq	r2, [r0], -r8
   12dd8:	bge	feabd88c <optarg@@GLIBC_2.4+0xfea97864>
   12ddc:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12de0:	strdeq	r2, [r0], -r8
   12de4:	mov	r2, #0
   12de8:	b	12754 <strspn@plt+0x13f0>
   12dec:	push	{r4, r5, r6, lr}
   12df0:	subs	r5, r0, #0
   12df4:	mov	r6, r1
   12df8:	beq	12e64 <strspn@plt+0x1b00>
   12dfc:	ldrsb	r4, [r5]
   12e00:	cmp	r4, #0
   12e04:	beq	12e78 <strspn@plt+0x1b14>
   12e08:	bl	1119c <__ctype_b_loc@plt>
   12e0c:	mov	r3, r5
   12e10:	ldr	r0, [r0]
   12e14:	b	12e2c <strspn@plt+0x1ac8>
   12e18:	adds	r3, r3, #1
   12e1c:	beq	12e64 <strspn@plt+0x1b00>
   12e20:	ldrsb	r4, [r3]
   12e24:	cmp	r4, #0
   12e28:	beq	12e40 <strspn@plt+0x1adc>
   12e2c:	uxtb	r4, r4
   12e30:	lsl	r4, r4, #1
   12e34:	ldrh	r2, [r0, r4]
   12e38:	tst	r2, #2048	; 0x800
   12e3c:	bne	12e18 <strspn@plt+0x1ab4>
   12e40:	cmp	r6, #0
   12e44:	strne	r3, [r6]
   12e48:	cmp	r5, r3
   12e4c:	bcs	12e70 <strspn@plt+0x1b0c>
   12e50:	ldrsb	r3, [r3]
   12e54:	cmp	r3, #0
   12e58:	bne	12e70 <strspn@plt+0x1b0c>
   12e5c:	mov	r0, #1
   12e60:	pop	{r4, r5, r6, pc}
   12e64:	cmp	r6, #0
   12e68:	movne	r3, #0
   12e6c:	strne	r3, [r6]
   12e70:	mov	r0, #0
   12e74:	pop	{r4, r5, r6, pc}
   12e78:	cmp	r1, #0
   12e7c:	strne	r5, [r1]
   12e80:	b	12e70 <strspn@plt+0x1b0c>
   12e84:	push	{r4, r5, r6, lr}
   12e88:	subs	r5, r0, #0
   12e8c:	mov	r6, r1
   12e90:	beq	12efc <strspn@plt+0x1b98>
   12e94:	ldrsb	r4, [r5]
   12e98:	cmp	r4, #0
   12e9c:	beq	12f10 <strspn@plt+0x1bac>
   12ea0:	bl	1119c <__ctype_b_loc@plt>
   12ea4:	mov	r3, r5
   12ea8:	ldr	r0, [r0]
   12eac:	b	12ec4 <strspn@plt+0x1b60>
   12eb0:	adds	r3, r3, #1
   12eb4:	beq	12efc <strspn@plt+0x1b98>
   12eb8:	ldrsb	r4, [r3]
   12ebc:	cmp	r4, #0
   12ec0:	beq	12ed8 <strspn@plt+0x1b74>
   12ec4:	uxtb	r4, r4
   12ec8:	lsl	r4, r4, #1
   12ecc:	ldrh	r2, [r0, r4]
   12ed0:	tst	r2, #4096	; 0x1000
   12ed4:	bne	12eb0 <strspn@plt+0x1b4c>
   12ed8:	cmp	r6, #0
   12edc:	strne	r3, [r6]
   12ee0:	cmp	r5, r3
   12ee4:	bcs	12f08 <strspn@plt+0x1ba4>
   12ee8:	ldrsb	r3, [r3]
   12eec:	cmp	r3, #0
   12ef0:	bne	12f08 <strspn@plt+0x1ba4>
   12ef4:	mov	r0, #1
   12ef8:	pop	{r4, r5, r6, pc}
   12efc:	cmp	r6, #0
   12f00:	movne	r3, #0
   12f04:	strne	r3, [r6]
   12f08:	mov	r0, #0
   12f0c:	pop	{r4, r5, r6, pc}
   12f10:	cmp	r1, #0
   12f14:	strne	r5, [r1]
   12f18:	b	12f08 <strspn@plt+0x1ba4>
   12f1c:	push	{r1, r2, r3}
   12f20:	ldr	r3, [pc, #188]	; 12fe4 <strspn@plt+0x1c80>
   12f24:	ldr	r2, [pc, #188]	; 12fe8 <strspn@plt+0x1c84>
   12f28:	add	r3, pc, r3
   12f2c:	push	{r4, r5, r6, r7, r8, lr}
   12f30:	sub	sp, sp, #12
   12f34:	ldr	r7, [r3, r2]
   12f38:	ldr	r8, [sp, #36]	; 0x24
   12f3c:	mov	r6, r0
   12f40:	ldr	r3, [r7]
   12f44:	add	r4, sp, #48	; 0x30
   12f48:	str	r3, [sp, #4]
   12f4c:	b	12f68 <strspn@plt+0x1c04>
   12f50:	mov	r1, r5
   12f54:	mov	r0, r6
   12f58:	bl	11040 <strcmp@plt>
   12f5c:	add	r4, r4, #8
   12f60:	cmp	r0, #0
   12f64:	beq	12fa0 <strspn@plt+0x1c3c>
   12f68:	ldr	r1, [r4, #-8]
   12f6c:	sub	r3, r4, #4
   12f70:	cmp	r1, #0
   12f74:	str	r3, [sp]
   12f78:	beq	12fc0 <strspn@plt+0x1c5c>
   12f7c:	ldr	r5, [r4, #-4]
   12f80:	str	r4, [sp]
   12f84:	cmp	r5, #0
   12f88:	beq	12fc0 <strspn@plt+0x1c5c>
   12f8c:	mov	r0, r6
   12f90:	bl	11040 <strcmp@plt>
   12f94:	cmp	r0, #0
   12f98:	bne	12f50 <strspn@plt+0x1bec>
   12f9c:	mov	r0, #1
   12fa0:	ldr	r2, [sp, #4]
   12fa4:	ldr	r3, [r7]
   12fa8:	cmp	r2, r3
   12fac:	bne	12fe0 <strspn@plt+0x1c7c>
   12fb0:	add	sp, sp, #12
   12fb4:	pop	{r4, r5, r6, r7, r8, lr}
   12fb8:	add	sp, sp, #12
   12fbc:	bx	lr
   12fc0:	ldr	r1, [pc, #36]	; 12fec <strspn@plt+0x1c88>
   12fc4:	mov	r3, r6
   12fc8:	add	r1, pc, r1
   12fcc:	mov	r2, r8
   12fd0:	ldr	r0, [r1]
   12fd4:	ldr	r1, [pc, #20]	; 12ff0 <strspn@plt+0x1c8c>
   12fd8:	add	r1, pc, r1
   12fdc:	bl	11298 <errx@plt>
   12fe0:	bl	110f4 <__stack_chk_fail@plt>
   12fe4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12fe8:	andeq	r0, r0, ip, lsr #2
   12fec:	andeq	r3, r1, r8, lsr r0
   12ff0:	andeq	r2, r0, ip, lsl r8
   12ff4:	cmp	r1, #0
   12ff8:	beq	13044 <strspn@plt+0x1ce0>
   12ffc:	ldrsb	r3, [r0]
   13000:	cmp	r3, #0
   13004:	beq	13044 <strspn@plt+0x1ce0>
   13008:	sxtb	r2, r2
   1300c:	cmp	r3, r2
   13010:	bxeq	lr
   13014:	add	r1, r0, r1
   13018:	add	r3, r0, #1
   1301c:	b	13038 <strspn@plt+0x1cd4>
   13020:	ldrsb	ip, [r3]
   13024:	add	r3, r3, #1
   13028:	cmp	ip, #0
   1302c:	beq	13044 <strspn@plt+0x1ce0>
   13030:	cmp	ip, r2
   13034:	bxeq	lr
   13038:	cmp	r3, r1
   1303c:	mov	r0, r3
   13040:	bne	13020 <strspn@plt+0x1cbc>
   13044:	mov	r0, #0
   13048:	bx	lr
   1304c:	push	{r4, r5, r6, lr}
   13050:	mov	r2, #10
   13054:	mov	r4, r0
   13058:	mov	r5, r1
   1305c:	bl	12710 <strspn@plt+0x13ac>
   13060:	cmp	r0, #65536	; 0x10000
   13064:	bcs	13070 <strspn@plt+0x1d0c>
   13068:	uxth	r0, r0
   1306c:	pop	{r4, r5, r6, pc}
   13070:	mov	r1, r5
   13074:	mov	r0, r4
   13078:	bl	126d0 <strspn@plt+0x136c>
   1307c:	push	{r4, r5, r6, lr}
   13080:	mov	r2, #16
   13084:	mov	r4, r0
   13088:	mov	r5, r1
   1308c:	bl	12710 <strspn@plt+0x13ac>
   13090:	cmp	r0, #65536	; 0x10000
   13094:	bcs	130a0 <strspn@plt+0x1d3c>
   13098:	uxth	r0, r0
   1309c:	pop	{r4, r5, r6, pc}
   130a0:	mov	r1, r5
   130a4:	mov	r0, r4
   130a8:	bl	126d0 <strspn@plt+0x136c>
   130ac:	mov	r2, #10
   130b0:	b	12710 <strspn@plt+0x13ac>
   130b4:	mov	r2, #16
   130b8:	b	12710 <strspn@plt+0x13ac>
   130bc:	ldr	r2, [pc, #236]	; 131b0 <strspn@plt+0x1e4c>
   130c0:	ldr	ip, [pc, #236]	; 131b4 <strspn@plt+0x1e50>
   130c4:	add	r2, pc, r2
   130c8:	push	{r4, r5, r6, r7, r8, lr}
   130cc:	sub	sp, sp, #8
   130d0:	ldr	r7, [r2, ip]
   130d4:	mov	r5, #0
   130d8:	mov	r4, r0
   130dc:	ldr	r3, [r7]
   130e0:	mov	r8, r1
   130e4:	str	r5, [sp]
   130e8:	str	r3, [sp, #4]
   130ec:	bl	11214 <__errno_location@plt>
   130f0:	cmp	r4, r5
   130f4:	str	r5, [r0]
   130f8:	beq	13108 <strspn@plt+0x1da4>
   130fc:	ldrsb	r3, [r4]
   13100:	cmp	r3, r5
   13104:	bne	13128 <strspn@plt+0x1dc4>
   13108:	ldr	r1, [pc, #168]	; 131b8 <strspn@plt+0x1e54>
   1310c:	mov	r3, r4
   13110:	add	r1, pc, r1
   13114:	mov	r2, r8
   13118:	ldr	r0, [r1]
   1311c:	ldr	r1, [pc, #152]	; 131bc <strspn@plt+0x1e58>
   13120:	add	r1, pc, r1
   13124:	bl	11298 <errx@plt>
   13128:	mov	r6, r0
   1312c:	mov	r2, #10
   13130:	mov	r3, r5
   13134:	mov	r1, sp
   13138:	mov	r0, r4
   1313c:	bl	112f8 <__strtoll_internal@plt>
   13140:	ldr	r2, [r6]
   13144:	cmp	r2, r5
   13148:	bne	13184 <strspn@plt+0x1e20>
   1314c:	ldr	r3, [sp]
   13150:	cmp	r3, r4
   13154:	beq	13108 <strspn@plt+0x1da4>
   13158:	cmp	r3, r5
   1315c:	beq	1316c <strspn@plt+0x1e08>
   13160:	ldrsb	r3, [r3]
   13164:	cmp	r3, r5
   13168:	bne	13108 <strspn@plt+0x1da4>
   1316c:	ldr	r2, [sp, #4]
   13170:	ldr	r3, [r7]
   13174:	cmp	r2, r3
   13178:	bne	131ac <strspn@plt+0x1e48>
   1317c:	add	sp, sp, #8
   13180:	pop	{r4, r5, r6, r7, r8, pc}
   13184:	ldr	r3, [pc, #52]	; 131c0 <strspn@plt+0x1e5c>
   13188:	cmp	r2, #34	; 0x22
   1318c:	add	r3, pc, r3
   13190:	ldr	r0, [r3]
   13194:	bne	13108 <strspn@plt+0x1da4>
   13198:	ldr	r1, [pc, #36]	; 131c4 <strspn@plt+0x1e60>
   1319c:	mov	r3, r4
   131a0:	mov	r2, r8
   131a4:	add	r1, pc, r1
   131a8:	bl	11118 <err@plt>
   131ac:	bl	110f4 <__stack_chk_fail@plt>
   131b0:	andeq	r2, r1, r0, lsl #28
   131b4:	andeq	r0, r0, ip, lsr #2
   131b8:	strdeq	r2, [r1], -r0
   131bc:	ldrdeq	r2, [r0], -r4
   131c0:	andeq	r2, r1, r4, ror lr
   131c4:	andeq	r2, r0, r0, asr r6
   131c8:	push	{r4, r5, r6, r7, r8, lr}
   131cc:	mov	r7, r0
   131d0:	mov	r6, r1
   131d4:	bl	130bc <strspn@plt+0x1d58>
   131d8:	mov	r3, #0
   131dc:	mvn	r2, #0
   131e0:	adds	r4, r0, #-2147483648	; 0x80000000
   131e4:	adc	r5, r1, #0
   131e8:	cmp	r5, r3
   131ec:	cmpeq	r4, r2
   131f0:	popls	{r4, r5, r6, r7, r8, pc}
   131f4:	bl	11214 <__errno_location@plt>
   131f8:	ldr	ip, [pc, #32]	; 13220 <strspn@plt+0x1ebc>
   131fc:	ldr	r1, [pc, #32]	; 13224 <strspn@plt+0x1ec0>
   13200:	add	ip, pc, ip
   13204:	mov	lr, #34	; 0x22
   13208:	mov	r3, r7
   1320c:	mov	r2, r6
   13210:	add	r1, pc, r1
   13214:	str	lr, [r0]
   13218:	ldr	r0, [ip]
   1321c:	bl	11118 <err@plt>
   13220:	andeq	r2, r1, r0, lsl #28
   13224:	andeq	r2, r0, r4, ror #11
   13228:	push	{r4, r5, r6, lr}
   1322c:	mov	r5, r0
   13230:	mov	r4, r1
   13234:	bl	131c8 <strspn@plt+0x1e64>
   13238:	add	r3, r0, #32768	; 0x8000
   1323c:	cmp	r3, #65536	; 0x10000
   13240:	bcs	1324c <strspn@plt+0x1ee8>
   13244:	sxth	r0, r0
   13248:	pop	{r4, r5, r6, pc}
   1324c:	bl	11214 <__errno_location@plt>
   13250:	ldr	ip, [pc, #32]	; 13278 <strspn@plt+0x1f14>
   13254:	ldr	r1, [pc, #32]	; 1327c <strspn@plt+0x1f18>
   13258:	add	ip, pc, ip
   1325c:	mov	lr, #34	; 0x22
   13260:	mov	r3, r5
   13264:	mov	r2, r4
   13268:	add	r1, pc, r1
   1326c:	str	lr, [r0]
   13270:	ldr	r0, [ip]
   13274:	bl	11118 <err@plt>
   13278:	andeq	r2, r1, r8, lsr #27
   1327c:	andeq	r2, r0, ip, lsl #11
   13280:	mov	r2, #10
   13284:	b	125bc <strspn@plt+0x1258>
   13288:	mov	r2, #16
   1328c:	b	125bc <strspn@plt+0x1258>
   13290:	ldr	r2, [pc, #228]	; 1337c <strspn@plt+0x2018>
   13294:	ldr	r3, [pc, #228]	; 13380 <strspn@plt+0x201c>
   13298:	add	r2, pc, r2
   1329c:	push	{r4, r5, r6, r7, r8, lr}
   132a0:	sub	sp, sp, #8
   132a4:	ldr	r7, [r2, r3]
   132a8:	mov	r5, #0
   132ac:	mov	r4, r0
   132b0:	ldr	r3, [r7]
   132b4:	mov	r8, r1
   132b8:	str	r5, [sp]
   132bc:	str	r3, [sp, #4]
   132c0:	bl	11214 <__errno_location@plt>
   132c4:	cmp	r4, r5
   132c8:	str	r5, [r0]
   132cc:	beq	132dc <strspn@plt+0x1f78>
   132d0:	ldrsb	r3, [r4]
   132d4:	cmp	r3, r5
   132d8:	bne	132fc <strspn@plt+0x1f98>
   132dc:	ldr	r1, [pc, #160]	; 13384 <strspn@plt+0x2020>
   132e0:	mov	r3, r4
   132e4:	add	r1, pc, r1
   132e8:	mov	r2, r8
   132ec:	ldr	r0, [r1]
   132f0:	ldr	r1, [pc, #144]	; 13388 <strspn@plt+0x2024>
   132f4:	add	r1, pc, r1
   132f8:	bl	11298 <errx@plt>
   132fc:	mov	r6, r0
   13300:	mov	r1, sp
   13304:	mov	r0, r4
   13308:	bl	11268 <strtod@plt>
   1330c:	ldr	r2, [r6]
   13310:	cmp	r2, r5
   13314:	bne	13350 <strspn@plt+0x1fec>
   13318:	ldr	r3, [sp]
   1331c:	cmp	r3, r4
   13320:	beq	132dc <strspn@plt+0x1f78>
   13324:	cmp	r3, r5
   13328:	beq	13338 <strspn@plt+0x1fd4>
   1332c:	ldrsb	r3, [r3]
   13330:	cmp	r3, r5
   13334:	bne	132dc <strspn@plt+0x1f78>
   13338:	ldr	r2, [sp, #4]
   1333c:	ldr	r3, [r7]
   13340:	cmp	r2, r3
   13344:	bne	13378 <strspn@plt+0x2014>
   13348:	add	sp, sp, #8
   1334c:	pop	{r4, r5, r6, r7, r8, pc}
   13350:	ldr	r3, [pc, #52]	; 1338c <strspn@plt+0x2028>
   13354:	cmp	r2, #34	; 0x22
   13358:	add	r3, pc, r3
   1335c:	ldr	r0, [r3]
   13360:	bne	132dc <strspn@plt+0x1f78>
   13364:	ldr	r1, [pc, #36]	; 13390 <strspn@plt+0x202c>
   13368:	mov	r3, r4
   1336c:	mov	r2, r8
   13370:	add	r1, pc, r1
   13374:	bl	11118 <err@plt>
   13378:	bl	110f4 <__stack_chk_fail@plt>
   1337c:	andeq	r2, r1, ip, lsr #24
   13380:	andeq	r0, r0, ip, lsr #2
   13384:	andeq	r2, r1, ip, lsl sp
   13388:	andeq	r2, r0, r0, lsl #10
   1338c:	andeq	r2, r1, r8, lsr #25
   13390:	andeq	r2, r0, r4, lsl #9
   13394:	ldr	r2, [pc, #232]	; 13484 <strspn@plt+0x2120>
   13398:	ldr	r3, [pc, #232]	; 13488 <strspn@plt+0x2124>
   1339c:	add	r2, pc, r2
   133a0:	push	{r4, r5, r6, r7, r8, lr}
   133a4:	sub	sp, sp, #8
   133a8:	ldr	r7, [r2, r3]
   133ac:	mov	r5, #0
   133b0:	mov	r4, r0
   133b4:	ldr	r3, [r7]
   133b8:	mov	r8, r1
   133bc:	str	r5, [sp]
   133c0:	str	r3, [sp, #4]
   133c4:	bl	11214 <__errno_location@plt>
   133c8:	cmp	r4, r5
   133cc:	str	r5, [r0]
   133d0:	beq	133e0 <strspn@plt+0x207c>
   133d4:	ldrsb	r3, [r4]
   133d8:	cmp	r3, r5
   133dc:	bne	13400 <strspn@plt+0x209c>
   133e0:	ldr	r1, [pc, #164]	; 1348c <strspn@plt+0x2128>
   133e4:	mov	r3, r4
   133e8:	add	r1, pc, r1
   133ec:	mov	r2, r8
   133f0:	ldr	r0, [r1]
   133f4:	ldr	r1, [pc, #148]	; 13490 <strspn@plt+0x212c>
   133f8:	add	r1, pc, r1
   133fc:	bl	11298 <errx@plt>
   13400:	mov	r6, r0
   13404:	mov	r2, #10
   13408:	mov	r1, sp
   1340c:	mov	r0, r4
   13410:	bl	1104c <strtol@plt>
   13414:	ldr	r2, [r6]
   13418:	cmp	r2, r5
   1341c:	bne	13458 <strspn@plt+0x20f4>
   13420:	ldr	r3, [sp]
   13424:	cmp	r3, r4
   13428:	beq	133e0 <strspn@plt+0x207c>
   1342c:	cmp	r3, r5
   13430:	beq	13440 <strspn@plt+0x20dc>
   13434:	ldrsb	r3, [r3]
   13438:	cmp	r3, r5
   1343c:	bne	133e0 <strspn@plt+0x207c>
   13440:	ldr	r2, [sp, #4]
   13444:	ldr	r3, [r7]
   13448:	cmp	r2, r3
   1344c:	bne	13480 <strspn@plt+0x211c>
   13450:	add	sp, sp, #8
   13454:	pop	{r4, r5, r6, r7, r8, pc}
   13458:	ldr	r3, [pc, #52]	; 13494 <strspn@plt+0x2130>
   1345c:	cmp	r2, #34	; 0x22
   13460:	add	r3, pc, r3
   13464:	ldr	r0, [r3]
   13468:	bne	133e0 <strspn@plt+0x207c>
   1346c:	ldr	r1, [pc, #36]	; 13498 <strspn@plt+0x2134>
   13470:	mov	r3, r4
   13474:	mov	r2, r8
   13478:	add	r1, pc, r1
   1347c:	bl	11118 <err@plt>
   13480:	bl	110f4 <__stack_chk_fail@plt>
   13484:	andeq	r2, r1, r8, lsr #22
   13488:	andeq	r0, r0, ip, lsr #2
   1348c:	andeq	r2, r1, r8, lsl ip
   13490:	strdeq	r2, [r0], -ip
   13494:	andeq	r2, r1, r0, lsr #23
   13498:	andeq	r2, r0, ip, ror r3
   1349c:	ldr	r2, [pc, #232]	; 1358c <strspn@plt+0x2228>
   134a0:	ldr	r3, [pc, #232]	; 13590 <strspn@plt+0x222c>
   134a4:	add	r2, pc, r2
   134a8:	push	{r4, r5, r6, r7, r8, lr}
   134ac:	sub	sp, sp, #8
   134b0:	ldr	r7, [r2, r3]
   134b4:	mov	r5, #0
   134b8:	mov	r4, r0
   134bc:	ldr	r3, [r7]
   134c0:	mov	r8, r1
   134c4:	str	r5, [sp]
   134c8:	str	r3, [sp, #4]
   134cc:	bl	11214 <__errno_location@plt>
   134d0:	cmp	r4, r5
   134d4:	str	r5, [r0]
   134d8:	beq	134e8 <strspn@plt+0x2184>
   134dc:	ldrsb	r3, [r4]
   134e0:	cmp	r3, r5
   134e4:	bne	13508 <strspn@plt+0x21a4>
   134e8:	ldr	r1, [pc, #164]	; 13594 <strspn@plt+0x2230>
   134ec:	mov	r3, r4
   134f0:	add	r1, pc, r1
   134f4:	mov	r2, r8
   134f8:	ldr	r0, [r1]
   134fc:	ldr	r1, [pc, #148]	; 13598 <strspn@plt+0x2234>
   13500:	add	r1, pc, r1
   13504:	bl	11298 <errx@plt>
   13508:	mov	r6, r0
   1350c:	mov	r2, #10
   13510:	mov	r1, sp
   13514:	mov	r0, r4
   13518:	bl	111cc <strtoul@plt>
   1351c:	ldr	r2, [r6]
   13520:	cmp	r2, r5
   13524:	bne	13560 <strspn@plt+0x21fc>
   13528:	ldr	r3, [sp]
   1352c:	cmp	r3, r4
   13530:	beq	134e8 <strspn@plt+0x2184>
   13534:	cmp	r3, r5
   13538:	beq	13548 <strspn@plt+0x21e4>
   1353c:	ldrsb	r3, [r3]
   13540:	cmp	r3, r5
   13544:	bne	134e8 <strspn@plt+0x2184>
   13548:	ldr	r2, [sp, #4]
   1354c:	ldr	r3, [r7]
   13550:	cmp	r2, r3
   13554:	bne	13588 <strspn@plt+0x2224>
   13558:	add	sp, sp, #8
   1355c:	pop	{r4, r5, r6, r7, r8, pc}
   13560:	ldr	r3, [pc, #52]	; 1359c <strspn@plt+0x2238>
   13564:	cmp	r2, #34	; 0x22
   13568:	add	r3, pc, r3
   1356c:	ldr	r0, [r3]
   13570:	bne	134e8 <strspn@plt+0x2184>
   13574:	ldr	r1, [pc, #36]	; 135a0 <strspn@plt+0x223c>
   13578:	mov	r3, r4
   1357c:	mov	r2, r8
   13580:	add	r1, pc, r1
   13584:	bl	11118 <err@plt>
   13588:	bl	110f4 <__stack_chk_fail@plt>
   1358c:	andeq	r2, r1, r0, lsr #20
   13590:	andeq	r0, r0, ip, lsr #2
   13594:	andeq	r2, r1, r0, lsl fp
   13598:	strdeq	r2, [r0], -r4
   1359c:	muleq	r1, r8, sl
   135a0:	andeq	r2, r0, r4, ror r2
   135a4:	ldr	r3, [pc, #140]	; 13638 <strspn@plt+0x22d4>
   135a8:	ldr	r2, [pc, #140]	; 1363c <strspn@plt+0x22d8>
   135ac:	add	r3, pc, r3
   135b0:	push	{r4, r5, r6, lr}
   135b4:	sub	sp, sp, #16
   135b8:	ldr	r4, [r3, r2]
   135bc:	mov	r5, r1
   135c0:	mov	r1, sp
   135c4:	ldr	r3, [r4]
   135c8:	mov	r6, r0
   135cc:	str	r3, [sp, #12]
   135d0:	bl	12de4 <strspn@plt+0x1a80>
   135d4:	cmp	r0, #0
   135d8:	beq	13618 <strspn@plt+0x22b4>
   135dc:	bl	11214 <__errno_location@plt>
   135e0:	ldr	r3, [pc, #88]	; 13640 <strspn@plt+0x22dc>
   135e4:	mov	r2, r5
   135e8:	ldr	r1, [pc, r3]
   135ec:	ldr	r3, [r0]
   135f0:	mov	r0, r1
   135f4:	cmp	r3, #0
   135f8:	mov	r3, r6
   135fc:	beq	1360c <strspn@plt+0x22a8>
   13600:	ldr	r1, [pc, #60]	; 13644 <strspn@plt+0x22e0>
   13604:	add	r1, pc, r1
   13608:	bl	11118 <err@plt>
   1360c:	ldr	r1, [pc, #52]	; 13648 <strspn@plt+0x22e4>
   13610:	add	r1, pc, r1
   13614:	bl	11298 <errx@plt>
   13618:	ldr	r2, [sp, #12]
   1361c:	ldr	r3, [r4]
   13620:	ldrd	r0, [sp]
   13624:	cmp	r2, r3
   13628:	bne	13634 <strspn@plt+0x22d0>
   1362c:	add	sp, sp, #16
   13630:	pop	{r4, r5, r6, pc}
   13634:	bl	110f4 <__stack_chk_fail@plt>
   13638:	andeq	r2, r1, r8, lsl r9
   1363c:	andeq	r0, r0, ip, lsr #2
   13640:	andeq	r2, r1, r8, lsl sl
   13644:	strdeq	r2, [r0], -r0
   13648:	andeq	r2, r0, r4, ror #3
   1364c:	push	{r4, lr}
   13650:	mov	r4, r1
   13654:	mov	r1, r2
   13658:	bl	13290 <strspn@plt+0x1f2c>
   1365c:	vldr	d6, [pc, #28]	; 13680 <strspn@plt+0x231c>
   13660:	vcvt.s32.f64	s15, d0
   13664:	vcvt.f64.s32	d5, s15
   13668:	vstr	s15, [r4]
   1366c:	vsub.f64	d0, d0, d5
   13670:	vmul.f64	d0, d0, d6
   13674:	vcvt.s32.f64	s0, d0
   13678:	vstr	s0, [r4, #4]
   1367c:	pop	{r4, pc}
   13680:	andeq	r0, r0, r0
   13684:	smlawbmi	lr, r0, r4, r8
   13688:	and	r2, r0, #61440	; 0xf000
   1368c:	cmp	r2, #16384	; 0x4000
   13690:	moveq	r2, r1
   13694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13698:	moveq	sl, #100	; 0x64
   1369c:	mov	r3, r0
   136a0:	add	r9, r1, #1
   136a4:	add	r8, r1, #2
   136a8:	add	r7, r1, #3
   136ac:	add	r6, r1, #4
   136b0:	add	r5, r1, #5
   136b4:	add	r4, r1, #6
   136b8:	add	lr, r1, #7
   136bc:	add	ip, r1, #8
   136c0:	add	r0, r1, #9
   136c4:	strbeq	sl, [r2], #10
   136c8:	beq	1376c <strspn@plt+0x2408>
   136cc:	cmp	r2, #40960	; 0xa000
   136d0:	moveq	r2, r1
   136d4:	moveq	sl, #108	; 0x6c
   136d8:	strbeq	sl, [r2], #10
   136dc:	beq	1376c <strspn@plt+0x2408>
   136e0:	cmp	r2, #8192	; 0x2000
   136e4:	moveq	r2, r1
   136e8:	moveq	sl, #99	; 0x63
   136ec:	strbeq	sl, [r2], #10
   136f0:	beq	1376c <strspn@plt+0x2408>
   136f4:	cmp	r2, #24576	; 0x6000
   136f8:	moveq	r2, r1
   136fc:	moveq	sl, #98	; 0x62
   13700:	strbeq	sl, [r2], #10
   13704:	beq	1376c <strspn@plt+0x2408>
   13708:	cmp	r2, #49152	; 0xc000
   1370c:	moveq	r2, r1
   13710:	moveq	sl, #115	; 0x73
   13714:	strbeq	sl, [r2], #10
   13718:	beq	1376c <strspn@plt+0x2408>
   1371c:	cmp	r2, #4096	; 0x1000
   13720:	moveq	r2, r1
   13724:	moveq	sl, #112	; 0x70
   13728:	strbeq	sl, [r2], #10
   1372c:	beq	1376c <strspn@plt+0x2408>
   13730:	cmp	r2, #32768	; 0x8000
   13734:	moveq	r2, r1
   13738:	moveq	sl, #45	; 0x2d
   1373c:	strbeq	sl, [r2], #10
   13740:	beq	1376c <strspn@plt+0x2408>
   13744:	mov	r2, r0
   13748:	mov	r0, ip
   1374c:	mov	ip, lr
   13750:	mov	lr, r4
   13754:	mov	r4, r5
   13758:	mov	r5, r6
   1375c:	mov	r6, r7
   13760:	mov	r7, r8
   13764:	mov	r8, r9
   13768:	mov	r9, r1
   1376c:	tst	r3, #256	; 0x100
   13770:	movne	fp, #114	; 0x72
   13774:	moveq	fp, #45	; 0x2d
   13778:	tst	r3, #128	; 0x80
   1377c:	movne	sl, #119	; 0x77
   13780:	moveq	sl, #45	; 0x2d
   13784:	tst	r3, #2048	; 0x800
   13788:	strb	fp, [r9]
   1378c:	and	r9, r3, #64	; 0x40
   13790:	strb	sl, [r8]
   13794:	beq	13830 <strspn@plt+0x24cc>
   13798:	cmp	r9, #0
   1379c:	movne	r9, #115	; 0x73
   137a0:	moveq	r9, #83	; 0x53
   137a4:	tst	r3, #32
   137a8:	movne	r8, #114	; 0x72
   137ac:	moveq	r8, #45	; 0x2d
   137b0:	tst	r3, #16
   137b4:	strb	r9, [r7]
   137b8:	movne	r7, #119	; 0x77
   137bc:	moveq	r7, #45	; 0x2d
   137c0:	tst	r3, #1024	; 0x400
   137c4:	strb	r8, [r6]
   137c8:	and	r6, r3, #8
   137cc:	strb	r7, [r5]
   137d0:	beq	13840 <strspn@plt+0x24dc>
   137d4:	cmp	r6, #0
   137d8:	movne	r6, #115	; 0x73
   137dc:	moveq	r6, #83	; 0x53
   137e0:	tst	r3, #4
   137e4:	movne	r5, #114	; 0x72
   137e8:	moveq	r5, #45	; 0x2d
   137ec:	tst	r3, #2
   137f0:	strb	r6, [r4]
   137f4:	movne	r4, #119	; 0x77
   137f8:	moveq	r4, #45	; 0x2d
   137fc:	tst	r3, #512	; 0x200
   13800:	strb	r5, [lr]
   13804:	and	r3, r3, #1
   13808:	strb	r4, [ip]
   1380c:	beq	13850 <strspn@plt+0x24ec>
   13810:	cmp	r3, #0
   13814:	movne	ip, #116	; 0x74
   13818:	moveq	ip, #84	; 0x54
   1381c:	mov	r3, #0
   13820:	strb	ip, [r0]
   13824:	mov	r0, r1
   13828:	strb	r3, [r2]
   1382c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13830:	cmp	r9, #0
   13834:	movne	r9, #120	; 0x78
   13838:	moveq	r9, #45	; 0x2d
   1383c:	b	137a4 <strspn@plt+0x2440>
   13840:	cmp	r6, #0
   13844:	movne	r6, #120	; 0x78
   13848:	moveq	r6, #45	; 0x2d
   1384c:	b	137e0 <strspn@plt+0x247c>
   13850:	cmp	r3, #0
   13854:	movne	ip, #120	; 0x78
   13858:	moveq	ip, #45	; 0x2d
   1385c:	b	1381c <strspn@plt+0x24b8>
   13860:	ldr	r1, [pc, #680]	; 13b10 <strspn@plt+0x27ac>
   13864:	ldr	ip, [pc, #680]	; 13b14 <strspn@plt+0x27b0>
   13868:	add	r1, pc, r1
   1386c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13870:	sub	sp, sp, #108	; 0x6c
   13874:	ldr	r8, [r1, ip]
   13878:	tst	r0, #2
   1387c:	strd	r2, [sp, #32]
   13880:	ldr	r1, [r8]
   13884:	addeq	r9, sp, #60	; 0x3c
   13888:	str	r1, [sp, #100]	; 0x64
   1388c:	ldrd	r2, [sp, #32]
   13890:	movne	r1, #32
   13894:	strbne	r1, [sp, #60]	; 0x3c
   13898:	addne	ip, sp, #61	; 0x3d
   1389c:	addne	r9, sp, #60	; 0x3c
   138a0:	moveq	ip, r9
   138a4:	mov	r1, #10
   138a8:	mov	sl, #1
   138ac:	sub	lr, r1, #32
   138b0:	lsl	r4, sl, r1
   138b4:	lsl	r5, sl, lr
   138b8:	rsb	lr, r1, #32
   138bc:	orr	r5, r5, sl, lsr lr
   138c0:	cmp	r3, r5
   138c4:	cmpeq	r2, r4
   138c8:	bcc	13a84 <strspn@plt+0x2720>
   138cc:	add	r1, r1, #10
   138d0:	cmp	r1, #70	; 0x46
   138d4:	bne	138ac <strspn@plt+0x2548>
   138d8:	mov	lr, ip
   138dc:	strd	r2, [sp, #32]
   138e0:	mov	r4, r2
   138e4:	tst	r0, #1
   138e8:	mov	r2, #69	; 0x45
   138ec:	bic	r5, r3, #-268435456	; 0xf0000000
   138f0:	lsr	sl, r3, #28
   138f4:	strb	r2, [lr], #1
   138f8:	bne	13a6c <strspn@plt+0x2708>
   138fc:	orrs	r3, r4, r5
   13900:	mov	r3, #0
   13904:	strb	r3, [lr]
   13908:	beq	13aac <strspn@plt+0x2748>
   1390c:	sub	r2, r1, #20
   13910:	rsb	r0, r2, #32
   13914:	lsr	r3, r4, r2
   13918:	sub	r1, r1, #52	; 0x34
   1391c:	orr	r3, r3, r5, lsl r0
   13920:	orr	r3, r3, r5, lsr r1
   13924:	lsr	r2, r5, r2
   13928:	adds	r6, r3, #50	; 0x32
   1392c:	adc	r7, r2, #0
   13930:	mov	r3, #0
   13934:	mov	r2, #100	; 0x64
   13938:	mov	r0, r6
   1393c:	mov	r1, r7
   13940:	bl	14b18 <strspn@plt+0x37b4>
   13944:	cmp	r1, #0
   13948:	cmpeq	r0, #10
   1394c:	mov	r2, r0
   13950:	mov	r3, r1
   13954:	addeq	sl, sl, #1
   13958:	beq	13aac <strspn@plt+0x2748>
   1395c:	cmp	r7, #0
   13960:	cmpeq	r6, #99	; 0x63
   13964:	strd	r2, [sp, #32]
   13968:	bls	13aac <strspn@plt+0x2748>
   1396c:	bl	112c8 <localeconv@plt>
   13970:	ldrd	r2, [sp, #32]
   13974:	cmp	r0, #0
   13978:	beq	13af4 <strspn@plt+0x2790>
   1397c:	ldr	r0, [r0]
   13980:	cmp	r0, #0
   13984:	beq	13b00 <strspn@plt+0x279c>
   13988:	ldrsb	r1, [r0]
   1398c:	cmp	r1, #0
   13990:	ldreq	r0, [pc, #384]	; 13b18 <strspn@plt+0x27b4>
   13994:	addeq	r0, pc, r0
   13998:	ldr	r1, [pc, #380]	; 13b1c <strspn@plt+0x27b8>
   1399c:	strd	r2, [sp, #16]
   139a0:	add	r1, pc, r1
   139a4:	add	r4, sp, #68	; 0x44
   139a8:	mov	r3, #32
   139ac:	str	r0, [sp, #8]
   139b0:	str	r1, [sp]
   139b4:	str	r9, [sp, #24]
   139b8:	str	sl, [sp, #4]
   139bc:	mov	r0, r4
   139c0:	mov	r1, r3
   139c4:	mov	r2, #1
   139c8:	bl	1134c <__snprintf_chk@plt>
   139cc:	b	13ad4 <strspn@plt+0x2770>
   139d0:	ldr	r4, [pc, #328]	; 13b20 <strspn@plt+0x27bc>
   139d4:	mvn	sl, #0
   139d8:	ldr	fp, [pc, #324]	; 13b24 <strspn@plt+0x27c0>
   139dc:	umull	r2, r3, lr, r4
   139e0:	sub	r4, r1, #42	; 0x2a
   139e4:	strd	r2, [sp, #40]	; 0x28
   139e8:	ldr	r3, [sp, #44]	; 0x2c
   139ec:	lsl	r2, sl, lr
   139f0:	lsr	r3, r3, #3
   139f4:	str	r3, [sp, #52]	; 0x34
   139f8:	ldr	r3, [sp, #32]
   139fc:	str	r4, [sp, #48]	; 0x30
   13a00:	orr	r4, r2, sl, lsl r4
   13a04:	lsr	r2, r3, lr
   13a08:	mov	r3, r2
   13a0c:	ldr	r2, [sp, #52]	; 0x34
   13a10:	add	fp, pc, fp
   13a14:	str	r4, [sp, #40]	; 0x28
   13a18:	ldrsb	fp, [fp, r2]
   13a1c:	mov	r2, r3
   13a20:	ldr	r3, [sp, #36]	; 0x24
   13a24:	rsb	r5, lr, #32
   13a28:	ldr	r4, [sp, #40]	; 0x28
   13a2c:	orr	r2, r2, r3, lsl r5
   13a30:	orr	r4, r4, sl, lsr r5
   13a34:	ldr	r3, [sp, #32]
   13a38:	str	r4, [sp, #40]	; 0x28
   13a3c:	cmp	r0, #0
   13a40:	bic	r4, r3, sl, lsl lr
   13a44:	ldr	r0, [sp, #36]	; 0x24
   13a48:	ldr	r3, [sp, #48]	; 0x30
   13a4c:	mov	lr, ip
   13a50:	orr	sl, r2, r0, lsr r3
   13a54:	ldr	r3, [sp, #40]	; 0x28
   13a58:	strb	fp, [lr], #1
   13a5c:	bic	r5, r0, r3
   13a60:	beq	138fc <strspn@plt+0x2598>
   13a64:	cmp	fp, #66	; 0x42
   13a68:	beq	138fc <strspn@plt+0x2598>
   13a6c:	mov	r3, #105	; 0x69
   13a70:	strb	r3, [ip, #1]
   13a74:	mov	r3, #66	; 0x42
   13a78:	add	lr, ip, #3
   13a7c:	strb	r3, [ip, #2]
   13a80:	b	138fc <strspn@plt+0x2598>
   13a84:	subs	lr, r1, #10
   13a88:	strd	r2, [sp, #32]
   13a8c:	and	r0, r0, #1
   13a90:	bne	139d0 <strspn@plt+0x266c>
   13a94:	ldr	sl, [sp, #32]
   13a98:	cmp	r0, #0
   13a9c:	movne	r0, lr
   13aa0:	mov	r3, #66	; 0x42
   13aa4:	strb	r0, [ip, #1]
   13aa8:	strb	r3, [ip]
   13aac:	ldr	r2, [pc, #116]	; 13b28 <strspn@plt+0x27c4>
   13ab0:	add	r4, sp, #68	; 0x44
   13ab4:	add	r2, pc, r2
   13ab8:	mov	r3, #32
   13abc:	stm	sp, {r2, sl}
   13ac0:	str	r9, [sp, #8]
   13ac4:	mov	r0, r4
   13ac8:	mov	r1, r3
   13acc:	mov	r2, #1
   13ad0:	bl	1134c <__snprintf_chk@plt>
   13ad4:	mov	r0, r4
   13ad8:	bl	110e8 <strdup@plt>
   13adc:	ldr	r2, [sp, #100]	; 0x64
   13ae0:	ldr	r3, [r8]
   13ae4:	cmp	r2, r3
   13ae8:	bne	13b0c <strspn@plt+0x27a8>
   13aec:	add	sp, sp, #108	; 0x6c
   13af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13af4:	ldr	r0, [pc, #48]	; 13b2c <strspn@plt+0x27c8>
   13af8:	add	r0, pc, r0
   13afc:	b	13998 <strspn@plt+0x2634>
   13b00:	ldr	r0, [pc, #40]	; 13b30 <strspn@plt+0x27cc>
   13b04:	add	r0, pc, r0
   13b08:	b	13998 <strspn@plt+0x2634>
   13b0c:	bl	110f4 <__stack_chk_fail@plt>
   13b10:	andeq	r2, r1, ip, asr r6
   13b14:	andeq	r0, r0, ip, lsr #2
   13b18:	andeq	r1, r0, r4, lsl #29
   13b1c:	andeq	r1, r0, r4, lsl #29
   13b20:	stclgt	12, cr12, [ip], {205}	; 0xcd
   13b24:	andeq	r1, r0, ip, lsl #28
   13b28:	andeq	r1, r0, ip, ror sp
   13b2c:	andeq	r1, r0, r0, lsr #26
   13b30:	andeq	r1, r0, r4, lsl sp
   13b34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b38:	subs	r4, r0, #0
   13b3c:	beq	13c0c <strspn@plt+0x28a8>
   13b40:	ldrsb	lr, [r4]
   13b44:	cmp	lr, #0
   13b48:	beq	13c0c <strspn@plt+0x28a8>
   13b4c:	cmp	r1, #0
   13b50:	clz	ip, r2
   13b54:	lsr	ip, ip, #5
   13b58:	moveq	r0, #1
   13b5c:	movne	r0, ip
   13b60:	cmp	r3, #0
   13b64:	moveq	r0, #1
   13b68:	cmp	r0, #0
   13b6c:	bne	13c0c <strspn@plt+0x28a8>
   13b70:	mov	r8, r3
   13b74:	mov	r7, r2
   13b78:	mov	r9, r1
   13b7c:	mov	r5, r0
   13b80:	b	13bdc <strspn@plt+0x2878>
   13b84:	cmp	r3, #0
   13b88:	bne	13bc8 <strspn@plt+0x2864>
   13b8c:	cmn	r4, #1
   13b90:	add	r6, r4, #1
   13b94:	beq	13c14 <strspn@plt+0x28b0>
   13b98:	cmp	r0, r6
   13b9c:	bcs	13c0c <strspn@plt+0x28a8>
   13ba0:	sub	r1, r6, r0
   13ba4:	blx	r8
   13ba8:	cmn	r0, #1
   13bac:	beq	13c0c <strspn@plt+0x28a8>
   13bb0:	str	r0, [r9, r5, lsl #2]
   13bb4:	ldrsb	r3, [r6]
   13bb8:	add	r5, r5, #1
   13bbc:	cmp	r3, #0
   13bc0:	beq	13c14 <strspn@plt+0x28b0>
   13bc4:	mov	r0, #0
   13bc8:	cmn	r4, #1
   13bcc:	beq	13c14 <strspn@plt+0x28b0>
   13bd0:	ldrsb	lr, [r4, #1]!
   13bd4:	cmp	lr, #0
   13bd8:	beq	13c14 <strspn@plt+0x28b0>
   13bdc:	cmp	r7, r5
   13be0:	mov	r6, r4
   13be4:	bls	13c1c <strspn@plt+0x28b8>
   13be8:	cmp	r0, #0
   13bec:	moveq	r0, r4
   13bf0:	cmp	lr, #44	; 0x2c
   13bf4:	ldrsb	r3, [r4, #1]
   13bf8:	bne	13b84 <strspn@plt+0x2820>
   13bfc:	cmp	r3, #0
   13c00:	beq	13b8c <strspn@plt+0x2828>
   13c04:	cmp	r0, r6
   13c08:	bcc	13ba0 <strspn@plt+0x283c>
   13c0c:	mvn	r0, #0
   13c10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c14:	mov	r0, r5
   13c18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c1c:	mvn	r0, #1
   13c20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c24:	cmp	r0, #0
   13c28:	beq	13c94 <strspn@plt+0x2930>
   13c2c:	push	{r4, lr}
   13c30:	mov	r4, r3
   13c34:	cmp	r4, #0
   13c38:	ldrsb	ip, [r0]
   13c3c:	clz	r3, ip
   13c40:	lsr	r3, r3, #5
   13c44:	moveq	r3, #1
   13c48:	cmp	r3, #0
   13c4c:	bne	13c8c <strspn@plt+0x2928>
   13c50:	ldr	lr, [r4]
   13c54:	cmp	lr, r2
   13c58:	bhi	13c8c <strspn@plt+0x2928>
   13c5c:	cmp	ip, #43	; 0x2b
   13c60:	strne	r3, [r4]
   13c64:	addeq	r0, r0, #1
   13c68:	ldr	r3, [sp, #8]
   13c6c:	addeq	r1, r1, lr, lsl #2
   13c70:	subeq	r2, r2, lr
   13c74:	bl	13b34 <strspn@plt+0x27d0>
   13c78:	cmp	r0, #0
   13c7c:	ldrgt	r3, [r4]
   13c80:	addgt	r3, r3, r0
   13c84:	strgt	r3, [r4]
   13c88:	pop	{r4, pc}
   13c8c:	mvn	r0, #0
   13c90:	pop	{r4, pc}
   13c94:	mvn	r0, #0
   13c98:	bx	lr
   13c9c:	cmp	r2, #0
   13ca0:	clz	r3, r1
   13ca4:	lsr	r3, r3, #5
   13ca8:	moveq	r3, #1
   13cac:	cmp	r0, #0
   13cb0:	moveq	r3, #1
   13cb4:	cmp	r3, #0
   13cb8:	bne	13d84 <strspn@plt+0x2a20>
   13cbc:	push	{r4, r5, r6, r7, r8, lr}
   13cc0:	mov	r6, r2
   13cc4:	mov	r2, r3
   13cc8:	ldrsb	r3, [r0]
   13ccc:	mov	r8, r1
   13cd0:	mov	r4, r0
   13cd4:	mov	r7, #1
   13cd8:	cmp	r3, #0
   13cdc:	beq	13d4c <strspn@plt+0x29e8>
   13ce0:	cmp	r2, #0
   13ce4:	moveq	r2, r4
   13ce8:	cmp	r3, #44	; 0x2c
   13cec:	mov	r5, r4
   13cf0:	ldrsb	r3, [r4, #1]!
   13cf4:	beq	13d54 <strspn@plt+0x29f0>
   13cf8:	cmp	r3, #0
   13cfc:	bne	13d74 <strspn@plt+0x2a10>
   13d00:	mov	r5, r4
   13d04:	cmp	r2, r5
   13d08:	sub	r1, r5, r2
   13d0c:	mov	r0, r2
   13d10:	bcs	13d6c <strspn@plt+0x2a08>
   13d14:	blx	r6
   13d18:	mov	r2, r4
   13d1c:	cmp	r0, #0
   13d20:	and	r1, r0, #7
   13d24:	poplt	{r4, r5, r6, r7, r8, pc}
   13d28:	ldrb	r3, [r8, r0, asr #3]
   13d2c:	orr	r3, r3, r7, lsl r1
   13d30:	strb	r3, [r8, r0, asr #3]
   13d34:	ldrsb	r3, [r5]
   13d38:	cmp	r3, #0
   13d3c:	beq	13d4c <strspn@plt+0x29e8>
   13d40:	ldrsb	r3, [r4]
   13d44:	cmp	r3, #0
   13d48:	bne	13ce8 <strspn@plt+0x2984>
   13d4c:	mov	r0, #0
   13d50:	pop	{r4, r5, r6, r7, r8, pc}
   13d54:	cmp	r3, #0
   13d58:	moveq	r5, r4
   13d5c:	cmp	r2, r5
   13d60:	sub	r1, r5, r2
   13d64:	mov	r0, r2
   13d68:	bcc	13d14 <strspn@plt+0x29b0>
   13d6c:	mvn	r0, #0
   13d70:	pop	{r4, r5, r6, r7, r8, pc}
   13d74:	adds	r4, r5, #1
   13d78:	bne	13cd8 <strspn@plt+0x2974>
   13d7c:	mov	r0, #0
   13d80:	pop	{r4, r5, r6, r7, r8, pc}
   13d84:	mvn	r0, #21
   13d88:	bx	lr
   13d8c:	cmp	r2, #0
   13d90:	clz	r3, r1
   13d94:	lsr	r3, r3, #5
   13d98:	moveq	r3, #1
   13d9c:	cmp	r0, #0
   13da0:	moveq	r3, #1
   13da4:	cmp	r3, #0
   13da8:	bne	13e6c <strspn@plt+0x2b08>
   13dac:	push	{r4, r5, r6, r7, r8, lr}
   13db0:	mov	r6, r2
   13db4:	mov	r2, r3
   13db8:	ldrsb	r3, [r0]
   13dbc:	mov	r7, r1
   13dc0:	mov	r4, r0
   13dc4:	cmp	r3, #0
   13dc8:	beq	13e34 <strspn@plt+0x2ad0>
   13dcc:	cmp	r2, #0
   13dd0:	moveq	r2, r4
   13dd4:	cmp	r3, #44	; 0x2c
   13dd8:	mov	r5, r4
   13ddc:	ldrsb	r3, [r4, #1]!
   13de0:	beq	13e3c <strspn@plt+0x2ad8>
   13de4:	cmp	r3, #0
   13de8:	bne	13e5c <strspn@plt+0x2af8>
   13dec:	mov	r5, r4
   13df0:	cmp	r2, r5
   13df4:	sub	r1, r5, r2
   13df8:	mov	r0, r2
   13dfc:	bcs	13e54 <strspn@plt+0x2af0>
   13e00:	blx	r6
   13e04:	mov	r2, r4
   13e08:	cmp	r0, #0
   13e0c:	poplt	{r4, r5, r6, r7, r8, pc}
   13e10:	ldr	r3, [r7]
   13e14:	orr	r3, r3, r0
   13e18:	str	r3, [r7]
   13e1c:	ldrsb	r3, [r5]
   13e20:	cmp	r3, #0
   13e24:	beq	13e34 <strspn@plt+0x2ad0>
   13e28:	ldrsb	r3, [r4]
   13e2c:	cmp	r3, #0
   13e30:	bne	13dd4 <strspn@plt+0x2a70>
   13e34:	mov	r0, #0
   13e38:	pop	{r4, r5, r6, r7, r8, pc}
   13e3c:	cmp	r3, #0
   13e40:	moveq	r5, r4
   13e44:	cmp	r2, r5
   13e48:	sub	r1, r5, r2
   13e4c:	mov	r0, r2
   13e50:	bcc	13e00 <strspn@plt+0x2a9c>
   13e54:	mvn	r0, #0
   13e58:	pop	{r4, r5, r6, r7, r8, pc}
   13e5c:	adds	r4, r5, #1
   13e60:	bne	13dc4 <strspn@plt+0x2a60>
   13e64:	mov	r0, #0
   13e68:	pop	{r4, r5, r6, r7, r8, pc}
   13e6c:	mvn	r0, #21
   13e70:	bx	lr
   13e74:	ldr	ip, [pc, #396]	; 14008 <strspn@plt+0x2ca4>
   13e78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e7c:	add	ip, pc, ip
   13e80:	ldr	lr, [pc, #388]	; 1400c <strspn@plt+0x2ca8>
   13e84:	sub	sp, sp, #8
   13e88:	mov	r9, r3
   13e8c:	ldr	r5, [ip, lr]
   13e90:	mov	sl, #0
   13e94:	subs	r4, r0, #0
   13e98:	ldr	r3, [r5]
   13e9c:	mov	r7, r1
   13ea0:	str	sl, [sp]
   13ea4:	mov	r1, ip
   13ea8:	str	r3, [sp, #4]
   13eac:	beq	13f20 <strspn@plt+0x2bbc>
   13eb0:	str	r9, [r7]
   13eb4:	str	r9, [r2]
   13eb8:	mov	r6, r2
   13ebc:	bl	11214 <__errno_location@plt>
   13ec0:	str	sl, [r0]
   13ec4:	ldrsb	r3, [r4]
   13ec8:	mov	r8, r0
   13ecc:	cmp	r3, #58	; 0x3a
   13ed0:	beq	13f3c <strspn@plt+0x2bd8>
   13ed4:	mov	sl, sp
   13ed8:	mov	r1, sl
   13edc:	mov	r2, #10
   13ee0:	mov	r0, r4
   13ee4:	bl	1104c <strtol@plt>
   13ee8:	str	r0, [r7]
   13eec:	str	r0, [r6]
   13ef0:	ldr	r0, [r8]
   13ef4:	cmp	r0, #0
   13ef8:	bne	13f8c <strspn@plt+0x2c28>
   13efc:	ldr	r2, [sp]
   13f00:	cmp	r2, #0
   13f04:	cmpne	r2, r4
   13f08:	beq	13f8c <strspn@plt+0x2c28>
   13f0c:	ldrsb	r3, [r2]
   13f10:	cmp	r3, #58	; 0x3a
   13f14:	beq	13f94 <strspn@plt+0x2c30>
   13f18:	cmp	r3, #45	; 0x2d
   13f1c:	beq	13fa4 <strspn@plt+0x2c40>
   13f20:	mov	r0, #0
   13f24:	ldr	r2, [sp, #4]
   13f28:	ldr	r3, [r5]
   13f2c:	cmp	r2, r3
   13f30:	bne	14004 <strspn@plt+0x2ca0>
   13f34:	add	sp, sp, #8
   13f38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f3c:	add	r4, r4, #1
   13f40:	mov	r0, r4
   13f44:	mov	r2, #10
   13f48:	mov	r1, sp
   13f4c:	bl	1104c <strtol@plt>
   13f50:	str	r0, [r6]
   13f54:	ldr	r3, [r8]
   13f58:	cmp	r3, #0
   13f5c:	bne	13f8c <strspn@plt+0x2c28>
   13f60:	ldr	r3, [sp]
   13f64:	cmp	r3, #0
   13f68:	beq	13f8c <strspn@plt+0x2c28>
   13f6c:	ldrsb	r2, [r3]
   13f70:	sub	r3, r3, r4
   13f74:	clz	r3, r3
   13f78:	cmp	r2, #0
   13f7c:	lsr	r3, r3, #5
   13f80:	movne	r3, #1
   13f84:	cmp	r3, #0
   13f88:	beq	13f20 <strspn@plt+0x2bbc>
   13f8c:	mvn	r0, #0
   13f90:	b	13f24 <strspn@plt+0x2bc0>
   13f94:	ldrsb	r3, [r2, #1]
   13f98:	cmp	r3, #0
   13f9c:	streq	r9, [r6]
   13fa0:	beq	13f24 <strspn@plt+0x2bc0>
   13fa4:	mov	r3, #0
   13fa8:	add	r4, r2, #1
   13fac:	str	r3, [r8]
   13fb0:	mov	r1, sl
   13fb4:	mov	r0, r4
   13fb8:	mov	r2, #10
   13fbc:	str	r3, [sp]
   13fc0:	bl	1104c <strtol@plt>
   13fc4:	str	r0, [r6]
   13fc8:	ldr	r3, [r8]
   13fcc:	cmp	r3, #0
   13fd0:	bne	13f8c <strspn@plt+0x2c28>
   13fd4:	ldr	r2, [sp]
   13fd8:	cmp	r2, #0
   13fdc:	beq	13f8c <strspn@plt+0x2c28>
   13fe0:	ldrsb	r3, [r2]
   13fe4:	sub	r2, r2, r4
   13fe8:	clz	r2, r2
   13fec:	cmp	r3, #0
   13ff0:	lsr	r2, r2, #5
   13ff4:	movne	r2, #1
   13ff8:	cmp	r2, #0
   13ffc:	beq	13f20 <strspn@plt+0x2bbc>
   14000:	b	13f8c <strspn@plt+0x2c28>
   14004:	bl	110f4 <__stack_chk_fail@plt>
   14008:	andeq	r2, r1, r8, asr #32
   1400c:	andeq	r0, r0, ip, lsr #2
   14010:	ldr	r3, [pc, #244]	; 1410c <strspn@plt+0x2da8>
   14014:	ldr	r2, [pc, #244]	; 14110 <strspn@plt+0x2dac>
   14018:	add	r3, pc, r3
   1401c:	push	{r4, r5, r6, r7, r8, r9, lr}
   14020:	sub	sp, sp, #20
   14024:	ldr	r9, [r3, r2]
   14028:	cmp	r0, #0
   1402c:	cmpne	r1, #0
   14030:	ldr	r3, [r9]
   14034:	str	r3, [sp, #12]
   14038:	beq	14100 <strspn@plt+0x2d9c>
   1403c:	mov	r4, r1
   14040:	add	r8, sp, #4
   14044:	add	r7, sp, #8
   14048:	b	14088 <strspn@plt+0x2d24>
   1404c:	cmp	r4, r3
   14050:	bne	14100 <strspn@plt+0x2d9c>
   14054:	mov	r2, r4
   14058:	mov	r1, r6
   1405c:	mov	r0, r5
   14060:	bl	1131c <strncmp@plt>
   14064:	cmp	r0, #0
   14068:	bne	14100 <strspn@plt+0x2d9c>
   1406c:	adds	r0, r5, r4
   14070:	moveq	r3, #0
   14074:	movne	r3, #1
   14078:	adds	r4, r6, r4
   1407c:	moveq	r3, #0
   14080:	cmp	r3, #0
   14084:	beq	14100 <strspn@plt+0x2d9c>
   14088:	mov	r1, r8
   1408c:	bl	12490 <strspn@plt+0x112c>
   14090:	mov	r1, r7
   14094:	mov	r5, r0
   14098:	mov	r0, r4
   1409c:	bl	12490 <strspn@plt+0x112c>
   140a0:	ldr	r4, [sp, #4]
   140a4:	ldr	r3, [sp, #8]
   140a8:	mov	r6, r0
   140ac:	adds	r0, r4, r3
   140b0:	beq	140e4 <strspn@plt+0x2d80>
   140b4:	cmp	r0, #1
   140b8:	bne	1404c <strspn@plt+0x2ce8>
   140bc:	cmp	r5, #0
   140c0:	beq	140d0 <strspn@plt+0x2d6c>
   140c4:	ldrsb	r2, [r5]
   140c8:	cmp	r2, #47	; 0x2f
   140cc:	beq	140e8 <strspn@plt+0x2d84>
   140d0:	cmp	r6, #0
   140d4:	beq	1404c <strspn@plt+0x2ce8>
   140d8:	ldrsb	r2, [r6]
   140dc:	cmp	r2, #47	; 0x2f
   140e0:	bne	1404c <strspn@plt+0x2ce8>
   140e4:	mov	r0, #1
   140e8:	ldr	r2, [sp, #12]
   140ec:	ldr	r3, [r9]
   140f0:	cmp	r2, r3
   140f4:	bne	14108 <strspn@plt+0x2da4>
   140f8:	add	sp, sp, #20
   140fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14100:	mov	r0, #0
   14104:	b	140e8 <strspn@plt+0x2d84>
   14108:	bl	110f4 <__stack_chk_fail@plt>
   1410c:	andeq	r1, r1, ip, lsr #29
   14110:	andeq	r0, r0, ip, lsr #2
   14114:	orrs	r3, r0, r1
   14118:	beq	14194 <strspn@plt+0x2e30>
   1411c:	cmp	r0, #0
   14120:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14124:	mov	r4, r1
   14128:	mov	r5, r0
   1412c:	beq	141a0 <strspn@plt+0x2e3c>
   14130:	cmp	r1, #0
   14134:	beq	141b0 <strspn@plt+0x2e4c>
   14138:	mov	r6, r2
   1413c:	bl	111d8 <strlen@plt>
   14140:	mvn	r3, r0
   14144:	cmp	r6, r3
   14148:	mov	r7, r0
   1414c:	movhi	r8, #0
   14150:	bhi	1418c <strspn@plt+0x2e28>
   14154:	add	r9, r6, r0
   14158:	add	r0, r9, #1
   1415c:	bl	1116c <malloc@plt>
   14160:	subs	r8, r0, #0
   14164:	beq	1418c <strspn@plt+0x2e28>
   14168:	mov	r1, r5
   1416c:	mov	r2, r7
   14170:	bl	110b8 <memcpy@plt>
   14174:	mov	r2, r6
   14178:	mov	r1, r4
   1417c:	add	r0, r8, r7
   14180:	bl	110b8 <memcpy@plt>
   14184:	mov	r3, #0
   14188:	strb	r3, [r8, r9]
   1418c:	mov	r0, r8
   14190:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14194:	ldr	r0, [pc, #28]	; 141b8 <strspn@plt+0x2e54>
   14198:	add	r0, pc, r0
   1419c:	b	110e8 <strdup@plt>
   141a0:	mov	r0, r4
   141a4:	mov	r1, r2
   141a8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   141ac:	b	110a0 <strndup@plt>
   141b0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   141b4:	b	110e8 <strdup@plt>
   141b8:	andeq	r1, r0, r4, lsr #3
   141bc:	push	{r4, r5, r6, lr}
   141c0:	subs	r4, r1, #0
   141c4:	mov	r5, r0
   141c8:	moveq	r2, r4
   141cc:	beq	141dc <strspn@plt+0x2e78>
   141d0:	mov	r0, r4
   141d4:	bl	111d8 <strlen@plt>
   141d8:	mov	r2, r0
   141dc:	mov	r1, r4
   141e0:	mov	r0, r5
   141e4:	pop	{r4, r5, r6, lr}
   141e8:	b	14114 <strspn@plt+0x2db0>
   141ec:	push	{r1, r2, r3}
   141f0:	ldr	r1, [pc, #132]	; 1427c <strspn@plt+0x2f18>
   141f4:	ldr	r3, [pc, #132]	; 14280 <strspn@plt+0x2f1c>
   141f8:	add	r1, pc, r1
   141fc:	push	{r4, r5, lr}
   14200:	mov	r5, r0
   14204:	ldr	r4, [r1, r3]
   14208:	sub	sp, sp, #16
   1420c:	add	ip, sp, #32
   14210:	ldr	r0, [r4]
   14214:	ldr	r2, [sp, #28]
   14218:	str	r0, [sp, #12]
   1421c:	mov	r3, ip
   14220:	add	r0, sp, #8
   14224:	mov	r1, #1
   14228:	str	ip, [sp, #4]
   1422c:	bl	11238 <__vasprintf_chk@plt>
   14230:	subs	r2, r0, #0
   14234:	movlt	r5, #0
   14238:	blt	14254 <strspn@plt+0x2ef0>
   1423c:	mov	r0, r5
   14240:	ldr	r1, [sp, #8]
   14244:	bl	14114 <strspn@plt+0x2db0>
   14248:	mov	r5, r0
   1424c:	ldr	r0, [sp, #8]
   14250:	bl	11070 <free@plt>
   14254:	ldr	r2, [sp, #12]
   14258:	ldr	r3, [r4]
   1425c:	mov	r0, r5
   14260:	cmp	r2, r3
   14264:	bne	14278 <strspn@plt+0x2f14>
   14268:	add	sp, sp, #16
   1426c:	pop	{r4, r5, lr}
   14270:	add	sp, sp, #12
   14274:	bx	lr
   14278:	bl	110f4 <__stack_chk_fail@plt>
   1427c:	andeq	r1, r1, ip, asr #25
   14280:	andeq	r0, r0, ip, lsr #2
   14284:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14288:	mov	r6, r0
   1428c:	ldr	r0, [pc, #348]	; 143f0 <strspn@plt+0x308c>
   14290:	ldr	ip, [pc, #348]	; 143f4 <strspn@plt+0x3090>
   14294:	add	r0, pc, r0
   14298:	ldr	r5, [r6]
   1429c:	ldr	r8, [r0, ip]
   142a0:	sub	sp, sp, #8
   142a4:	ldrsb	r4, [r5]
   142a8:	mov	r9, r2
   142ac:	ldr	r2, [r8]
   142b0:	cmp	r4, #0
   142b4:	mov	r7, r1
   142b8:	str	r2, [sp, #4]
   142bc:	mov	r1, r0
   142c0:	beq	14370 <strspn@plt+0x300c>
   142c4:	mov	r0, r5
   142c8:	mov	r1, r9
   142cc:	mov	sl, r3
   142d0:	bl	11364 <strspn@plt>
   142d4:	add	r4, r5, r0
   142d8:	ldrsb	r5, [r5, r0]
   142dc:	cmp	r5, #0
   142e0:	beq	143d8 <strspn@plt+0x3074>
   142e4:	cmp	sl, #0
   142e8:	beq	1438c <strspn@plt+0x3028>
   142ec:	ldr	r0, [pc, #260]	; 143f8 <strspn@plt+0x3094>
   142f0:	mov	r1, r5
   142f4:	add	r0, pc, r0
   142f8:	bl	111f0 <strchr@plt>
   142fc:	cmp	r0, #0
   14300:	beq	143a8 <strspn@plt+0x3044>
   14304:	add	sl, r4, #1
   14308:	mov	r3, #0
   1430c:	mov	r0, sl
   14310:	mov	r1, sp
   14314:	strb	r5, [sp]
   14318:	strb	r3, [sp, #1]
   1431c:	bl	12530 <strspn@plt+0x11cc>
   14320:	add	r3, r4, r0
   14324:	str	r0, [r7]
   14328:	ldrsb	r3, [r3, #1]
   1432c:	subs	r5, r5, r3
   14330:	movne	r5, #1
   14334:	cmp	r3, #0
   14338:	moveq	r5, #1
   1433c:	cmp	r5, #0
   14340:	bne	143d8 <strspn@plt+0x3074>
   14344:	add	r0, r0, #2
   14348:	add	r5, r4, r0
   1434c:	ldrsb	r1, [r4, r0]
   14350:	cmp	r1, #0
   14354:	beq	14368 <strspn@plt+0x3004>
   14358:	mov	r0, r9
   1435c:	bl	111f0 <strchr@plt>
   14360:	cmp	r0, #0
   14364:	beq	143d8 <strspn@plt+0x3074>
   14368:	mov	r4, sl
   1436c:	str	r5, [r6]
   14370:	ldr	r2, [sp, #4]
   14374:	ldr	r3, [r8]
   14378:	mov	r0, r4
   1437c:	cmp	r2, r3
   14380:	bne	143ec <strspn@plt+0x3088>
   14384:	add	sp, sp, #8
   14388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1438c:	mov	r1, r9
   14390:	mov	r0, r4
   14394:	bl	11058 <strcspn@plt>
   14398:	add	r3, r4, r0
   1439c:	str	r0, [r7]
   143a0:	str	r3, [r6]
   143a4:	b	14370 <strspn@plt+0x300c>
   143a8:	mov	r1, r9
   143ac:	mov	r0, r4
   143b0:	bl	12530 <strspn@plt+0x11cc>
   143b4:	str	r0, [r7]
   143b8:	ldrsb	r1, [r4, r0]
   143bc:	add	r5, r4, r0
   143c0:	cmp	r1, #0
   143c4:	beq	143e4 <strspn@plt+0x3080>
   143c8:	mov	r0, r9
   143cc:	bl	111f0 <strchr@plt>
   143d0:	cmp	r0, #0
   143d4:	bne	143e4 <strspn@plt+0x3080>
   143d8:	str	r4, [r6]
   143dc:	mov	r4, #0
   143e0:	b	14370 <strspn@plt+0x300c>
   143e4:	str	r5, [r6]
   143e8:	b	14370 <strspn@plt+0x300c>
   143ec:	bl	110f4 <__stack_chk_fail@plt>
   143f0:	andeq	r1, r1, r0, lsr ip
   143f4:	andeq	r0, r0, ip, lsr #2
   143f8:	andeq	r1, r0, r4, asr #10
   143fc:	push	{r4, lr}
   14400:	mov	r4, r0
   14404:	b	14410 <strspn@plt+0x30ac>
   14408:	cmp	r0, #10
   1440c:	beq	14428 <strspn@plt+0x30c4>
   14410:	mov	r0, r4
   14414:	bl	11250 <fgetc@plt>
   14418:	cmn	r0, #1
   1441c:	bne	14408 <strspn@plt+0x30a4>
   14420:	mov	r0, #1
   14424:	pop	{r4, pc}
   14428:	mov	r0, #0
   1442c:	pop	{r4, pc}
   14430:	ldr	r2, [pc, #400]	; 145c8 <strspn@plt+0x3264>
   14434:	ldr	r3, [pc, #400]	; 145cc <strspn@plt+0x3268>
   14438:	add	r2, pc, r2
   1443c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14440:	sub	sp, sp, #8192	; 0x2000
   14444:	ldr	r3, [r2, r3]
   14448:	ldr	ip, [pc, #384]	; 145d0 <strspn@plt+0x326c>
   1444c:	sub	sp, sp, #44	; 0x2c
   14450:	mov	lr, r3
   14454:	add	ip, pc, ip
   14458:	str	r1, [sp, #8]
   1445c:	ldr	lr, [lr]
   14460:	str	ip, [sp]
   14464:	add	ip, sp, #8192	; 0x2000
   14468:	add	ip, ip, #36	; 0x24
   1446c:	add	r7, sp, #40	; 0x28
   14470:	sub	r6, r7, #4
   14474:	str	r3, [sp, #16]
   14478:	mov	r3, #8192	; 0x2000
   1447c:	str	r0, [sp, #4]
   14480:	mov	r1, r3
   14484:	str	lr, [ip]
   14488:	mov	r0, r6
   1448c:	mov	r2, #1
   14490:	bl	1134c <__snprintf_chk@plt>
   14494:	mov	r0, r6
   14498:	mov	r1, #0
   1449c:	bl	11154 <open64@plt>
   144a0:	subs	r8, r0, #0
   144a4:	movlt	r7, #0
   144a8:	blt	14578 <strspn@plt+0x3214>
   144ac:	mov	r1, #0
   144b0:	mov	sl, r1
   144b4:	mov	r2, #8192	; 0x2000
   144b8:	mov	r0, r6
   144bc:	mov	r9, sl
   144c0:	mov	fp, sl
   144c4:	mov	r4, #8192	; 0x2000
   144c8:	mov	r5, r6
   144cc:	bl	11244 <memset@plt>
   144d0:	sub	r3, r7, #12
   144d4:	str	r3, [sp, #20]
   144d8:	mov	r2, r4
   144dc:	mov	r1, r5
   144e0:	mov	r0, r8
   144e4:	bl	11064 <read@plt>
   144e8:	cmp	r0, #0
   144ec:	ble	14508 <strspn@plt+0x31a4>
   144f0:	subs	r4, r4, r0
   144f4:	add	r5, r5, r0
   144f8:	add	sl, sl, r0
   144fc:	beq	14534 <strspn@plt+0x31d0>
   14500:	mov	r9, #0
   14504:	b	144d8 <strspn@plt+0x3174>
   14508:	beq	14528 <strspn@plt+0x31c4>
   1450c:	bl	11214 <__errno_location@plt>
   14510:	ldr	r3, [r0]
   14514:	cmp	r3, #4
   14518:	cmpne	r3, #11
   1451c:	bne	14528 <strspn@plt+0x31c4>
   14520:	cmp	r9, #4
   14524:	ble	145a4 <strspn@plt+0x3240>
   14528:	cmp	sl, #0
   1452c:	moveq	r7, sl
   14530:	beq	14570 <strspn@plt+0x320c>
   14534:	mov	r1, r6
   14538:	mov	r2, #0
   1453c:	mov	ip, #32
   14540:	ldrsb	r3, [r1], #1
   14544:	add	r2, r2, #1
   14548:	cmp	r3, #0
   1454c:	strbeq	ip, [r1, #-1]
   14550:	cmp	r2, sl
   14554:	bcc	14540 <strspn@plt+0x31dc>
   14558:	add	r7, r7, sl
   1455c:	mov	r3, #0
   14560:	mov	r0, r6
   14564:	strb	r3, [r7, #-5]
   14568:	bl	110e8 <strdup@plt>
   1456c:	mov	r7, r0
   14570:	mov	r0, r8
   14574:	bl	11334 <close@plt>
   14578:	add	r3, sp, #8192	; 0x2000
   1457c:	add	r3, r3, #36	; 0x24
   14580:	ldr	r2, [r3]
   14584:	ldr	r3, [sp, #16]
   14588:	mov	r0, r7
   1458c:	ldr	r3, [r3]
   14590:	cmp	r2, r3
   14594:	bne	145c4 <strspn@plt+0x3260>
   14598:	add	sp, sp, #8192	; 0x2000
   1459c:	add	sp, sp, #44	; 0x2c
   145a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145a4:	ldr	r3, [pc, #40]	; 145d4 <strspn@plt+0x3270>
   145a8:	mov	r1, #0
   145ac:	ldr	r0, [sp, #20]
   145b0:	add	r9, r9, #1
   145b4:	str	fp, [r7, #-12]
   145b8:	str	r3, [r7, #-8]
   145bc:	bl	11088 <nanosleep@plt>
   145c0:	b	144d8 <strspn@plt+0x3174>
   145c4:	bl	110f4 <__stack_chk_fail@plt>
   145c8:	andeq	r1, r1, ip, lsl #21
   145cc:	andeq	r0, r0, ip, lsr #2
   145d0:	andeq	r1, r0, r8, ror #7
   145d4:	cdpeq	2, 14, cr11, cr6, cr0, {4}
   145d8:	ldr	r1, [pc, #164]	; 14684 <strspn@plt+0x3320>
   145dc:	ldr	r2, [pc, #164]	; 14688 <strspn@plt+0x3324>
   145e0:	add	r1, pc, r1
   145e4:	push	{r4, r5, r6, lr}
   145e8:	sub	sp, sp, #4096	; 0x1000
   145ec:	ldr	r5, [r1, r2]
   145f0:	sub	sp, sp, #16
   145f4:	add	lr, sp, #4096	; 0x1000
   145f8:	str	r0, [sp]
   145fc:	add	lr, lr, #12
   14600:	ldr	ip, [r5]
   14604:	ldr	r3, [pc, #128]	; 1468c <strspn@plt+0x3328>
   14608:	add	r6, sp, #12
   1460c:	add	r3, pc, r3
   14610:	mov	r2, #4096	; 0x1000
   14614:	str	ip, [lr]
   14618:	mov	r0, r6
   1461c:	mov	r1, #1
   14620:	bl	11220 <__sprintf_chk@plt>
   14624:	mov	r0, #4
   14628:	bl	1116c <malloc@plt>
   1462c:	subs	r4, r0, #0
   14630:	beq	14670 <strspn@plt+0x330c>
   14634:	mov	r0, r6
   14638:	bl	11148 <opendir@plt>
   1463c:	cmp	r0, #0
   14640:	str	r0, [r4]
   14644:	beq	14670 <strspn@plt+0x330c>
   14648:	add	r3, sp, #4096	; 0x1000
   1464c:	add	r3, r3, #12
   14650:	ldr	r2, [r3]
   14654:	ldr	r3, [r5]
   14658:	mov	r0, r4
   1465c:	cmp	r2, r3
   14660:	bne	14680 <strspn@plt+0x331c>
   14664:	add	sp, sp, #4096	; 0x1000
   14668:	add	sp, sp, #16
   1466c:	pop	{r4, r5, r6, pc}
   14670:	mov	r0, r4
   14674:	bl	11070 <free@plt>
   14678:	mov	r4, #0
   1467c:	b	14648 <strspn@plt+0x32e4>
   14680:	bl	110f4 <__stack_chk_fail@plt>
   14684:	andeq	r1, r1, r4, ror #17
   14688:	andeq	r0, r0, ip, lsr #2
   1468c:	andeq	r1, r0, ip, lsr r2
   14690:	push	{r4, lr}
   14694:	subs	r4, r0, #0
   14698:	beq	146ac <strspn@plt+0x3348>
   1469c:	ldr	r0, [r4]
   146a0:	cmp	r0, #0
   146a4:	beq	146ac <strspn@plt+0x3348>
   146a8:	bl	11340 <closedir@plt>
   146ac:	mov	r0, r4
   146b0:	pop	{r4, lr}
   146b4:	b	11070 <free@plt>
   146b8:	ldr	r3, [pc, #280]	; 147d8 <strspn@plt+0x3474>
   146bc:	ldr	r2, [pc, #280]	; 147dc <strspn@plt+0x3478>
   146c0:	add	r3, pc, r3
   146c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146c8:	cmp	r0, #0
   146cc:	ldr	r9, [r3, r2]
   146d0:	sub	sp, sp, #8
   146d4:	clz	sl, r1
   146d8:	ldr	r2, [r9]
   146dc:	lsr	sl, sl, #5
   146e0:	moveq	sl, #1
   146e4:	cmp	sl, #0
   146e8:	str	r2, [sp, #4]
   146ec:	bne	147cc <strspn@plt+0x3468>
   146f0:	str	sl, [r1]
   146f4:	mov	r6, r0
   146f8:	mov	r5, r1
   146fc:	bl	11214 <__errno_location@plt>
   14700:	mov	r8, sl
   14704:	mov	r7, sp
   14708:	mov	r4, r0
   1470c:	str	sl, [r0]
   14710:	b	14720 <strspn@plt+0x33bc>
   14714:	ldr	r0, [r5]
   14718:	cmp	r0, #0
   1471c:	bne	147c4 <strspn@plt+0x3460>
   14720:	ldr	r0, [r6]
   14724:	bl	112d4 <readdir64@plt>
   14728:	subs	sl, r0, #0
   1472c:	beq	147b0 <strspn@plt+0x344c>
   14730:	bl	1119c <__ctype_b_loc@plt>
   14734:	ldrb	r3, [sl, #19]
   14738:	lsl	r3, r3, #1
   1473c:	ldr	r2, [r0]
   14740:	ldrh	r3, [r2, r3]
   14744:	tst	r3, #2048	; 0x800
   14748:	beq	14714 <strspn@plt+0x33b0>
   1474c:	add	sl, sl, #19
   14750:	str	r8, [r4]
   14754:	mov	r0, sl
   14758:	mov	r2, #10
   1475c:	mov	r1, r7
   14760:	bl	1104c <strtol@plt>
   14764:	str	r0, [r5]
   14768:	ldr	r3, [r4]
   1476c:	cmp	r3, #0
   14770:	bne	14794 <strspn@plt+0x3430>
   14774:	ldr	r3, [sp]
   14778:	cmp	sl, r3
   1477c:	beq	14794 <strspn@plt+0x3430>
   14780:	cmp	r3, #0
   14784:	beq	14718 <strspn@plt+0x33b4>
   14788:	ldrsb	r3, [r3]
   1478c:	cmp	r3, #0
   14790:	beq	14718 <strspn@plt+0x33b4>
   14794:	mvn	r0, #0
   14798:	ldr	r2, [sp, #4]
   1479c:	ldr	r3, [r9]
   147a0:	cmp	r2, r3
   147a4:	bne	147d4 <strspn@plt+0x3470>
   147a8:	add	sp, sp, #8
   147ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147b0:	ldr	r3, [r4]
   147b4:	cmp	r3, #0
   147b8:	moveq	r0, #1
   147bc:	beq	14798 <strspn@plt+0x3434>
   147c0:	b	14794 <strspn@plt+0x3430>
   147c4:	mov	r0, #0
   147c8:	b	14798 <strspn@plt+0x3434>
   147cc:	mvn	r0, #21
   147d0:	b	14798 <strspn@plt+0x3434>
   147d4:	bl	110f4 <__stack_chk_fail@plt>
   147d8:	andeq	r1, r1, r4, lsl #16
   147dc:	andeq	r0, r0, ip, lsr #2
   147e0:	ldr	r1, [pc, #4]	; 147ec <strspn@plt+0x3488>
   147e4:	add	r1, pc, r1
   147e8:	b	14430 <strspn@plt+0x30cc>
   147ec:	andeq	r1, r0, r4, ror r0
   147f0:	ldr	r1, [pc, #4]	; 147fc <strspn@plt+0x3498>
   147f4:	add	r1, pc, r1
   147f8:	b	14430 <strspn@plt+0x30cc>
   147fc:	andeq	r1, r0, ip, rrx
   14800:	push	{r4, lr}
   14804:	mov	r1, #16
   14808:	mov	r0, #1
   1480c:	bl	11028 <calloc@plt>
   14810:	subs	r4, r0, #0
   14814:	beq	14838 <strspn@plt+0x34d4>
   14818:	ldr	r0, [pc, #44]	; 1484c <strspn@plt+0x34e8>
   1481c:	add	r0, pc, r0
   14820:	bl	11148 <opendir@plt>
   14824:	cmp	r0, #0
   14828:	str	r0, [r4]
   1482c:	beq	14838 <strspn@plt+0x34d4>
   14830:	mov	r0, r4
   14834:	pop	{r4, pc}
   14838:	mov	r0, r4
   1483c:	mov	r4, #0
   14840:	bl	11070 <free@plt>
   14844:	mov	r0, r4
   14848:	pop	{r4, pc}
   1484c:	andeq	r1, r0, ip, asr #32
   14850:	push	{r4, lr}
   14854:	subs	r4, r0, #0
   14858:	beq	1486c <strspn@plt+0x3508>
   1485c:	ldr	r0, [r4]
   14860:	cmp	r0, #0
   14864:	beq	1486c <strspn@plt+0x3508>
   14868:	bl	11340 <closedir@plt>
   1486c:	mov	r0, r4
   14870:	pop	{r4, lr}
   14874:	b	11070 <free@plt>
   14878:	ldrb	r3, [r0, #12]
   1487c:	str	r1, [r0, #4]
   14880:	bic	r3, r3, #1
   14884:	cmp	r1, #0
   14888:	orrne	r3, r3, #1
   1488c:	strb	r3, [r0, #12]
   14890:	bx	lr
   14894:	ldrb	r3, [r0, #12]
   14898:	str	r1, [r0, #8]
   1489c:	orr	r3, r3, #2
   148a0:	strb	r3, [r0, #12]
   148a4:	bx	lr
   148a8:	ldr	r2, [pc, #596]	; 14b04 <strspn@plt+0x37a0>
   148ac:	ldr	ip, [pc, #596]	; 14b08 <strspn@plt+0x37a4>
   148b0:	add	r2, pc, r2
   148b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148b8:	sub	sp, sp, #8576	; 0x2180
   148bc:	ldr	ip, [r2, ip]
   148c0:	sub	sp, sp, #12
   148c4:	cmp	r0, #0
   148c8:	add	r2, sp, #8576	; 0x2180
   148cc:	clz	r3, r1
   148d0:	str	ip, [sp, #16]
   148d4:	lsr	r3, r3, #5
   148d8:	ldr	ip, [ip]
   148dc:	moveq	r3, #1
   148e0:	add	r2, r2, #4
   148e4:	cmp	r3, #0
   148e8:	str	ip, [r2]
   148ec:	bne	14af8 <strspn@plt+0x3794>
   148f0:	str	r3, [r1]
   148f4:	ldr	r3, [pc, #528]	; 14b0c <strspn@plt+0x37a8>
   148f8:	mov	r5, r0
   148fc:	add	r3, pc, r3
   14900:	mov	sl, r1
   14904:	str	r3, [sp, #12]
   14908:	bl	11214 <__errno_location@plt>
   1490c:	ldr	r9, [pc, #508]	; 14b10 <strspn@plt+0x37ac>
   14910:	ldr	fp, [pc, #508]	; 14b14 <strspn@plt+0x37b0>
   14914:	add	r9, pc, r9
   14918:	add	fp, pc, fp
   1491c:	mov	r8, r0
   14920:	mov	r6, #0
   14924:	str	r6, [r8]
   14928:	ldr	r0, [r5]
   1492c:	bl	112d4 <readdir64@plt>
   14930:	subs	r4, r0, #0
   14934:	beq	14ae0 <strspn@plt+0x377c>
   14938:	bl	1119c <__ctype_b_loc@plt>
   1493c:	ldrb	r3, [r4, #19]
   14940:	lsl	r3, r3, #1
   14944:	ldr	r2, [r0]
   14948:	ldrh	r3, [r2, r3]
   1494c:	tst	r3, #2048	; 0x800
   14950:	beq	14920 <strspn@plt+0x35bc>
   14954:	ldrb	r3, [r5, #12]
   14958:	add	r4, r4, #19
   1495c:	tst	r3, #2
   14960:	addeq	r7, sp, #392	; 0x188
   14964:	bne	14a9c <strspn@plt+0x3738>
   14968:	tst	r3, #1
   1496c:	beq	14a24 <strspn@plt+0x36c0>
   14970:	mov	r3, #8192	; 0x2000
   14974:	sub	r6, r7, #4
   14978:	mov	r1, r3
   1497c:	mov	r2, #1
   14980:	str	r4, [sp, #4]
   14984:	str	r9, [sp]
   14988:	mov	r0, r6
   1498c:	bl	1134c <__snprintf_chk@plt>
   14990:	ldr	r0, [r5]
   14994:	bl	112ec <dirfd@plt>
   14998:	mov	r1, r6
   1499c:	mov	r2, #524288	; 0x80000
   149a0:	bl	111fc <openat64@plt>
   149a4:	cmp	r0, #0
   149a8:	blt	14920 <strspn@plt+0x35bc>
   149ac:	mov	r1, fp
   149b0:	bl	11010 <fdopen@plt>
   149b4:	subs	r3, r0, #0
   149b8:	beq	14920 <strspn@plt+0x35bc>
   149bc:	mov	r2, r3
   149c0:	mov	r1, #8192	; 0x2000
   149c4:	mov	r0, r6
   149c8:	str	r3, [sp, #20]
   149cc:	bl	1107c <fgets@plt>
   149d0:	ldr	r3, [sp, #20]
   149d4:	str	r0, [r7, #-368]	; 0xfffffe90
   149d8:	mov	r0, r3
   149dc:	bl	11280 <fclose@plt>
   149e0:	ldr	r3, [r7, #-368]	; 0xfffffe90
   149e4:	cmp	r3, #0
   149e8:	beq	14920 <strspn@plt+0x35bc>
   149ec:	add	r3, sp, #132	; 0x84
   149f0:	mov	r0, r6
   149f4:	mov	r2, r3
   149f8:	ldr	r1, [sp, #12]
   149fc:	str	r3, [sp, #20]
   14a00:	bl	112bc <sscanf@plt>
   14a04:	cmp	r0, #1
   14a08:	bne	14920 <strspn@plt+0x35bc>
   14a0c:	ldr	r3, [sp, #20]
   14a10:	ldr	r1, [r5, #4]
   14a14:	mov	r0, r3
   14a18:	bl	11040 <strcmp@plt>
   14a1c:	cmp	r0, #0
   14a20:	bne	14920 <strspn@plt+0x35bc>
   14a24:	mov	r3, #0
   14a28:	str	r3, [r8]
   14a2c:	mov	r2, #10
   14a30:	add	r1, sp, #24
   14a34:	mov	r0, r4
   14a38:	str	r3, [r7, #-368]	; 0xfffffe90
   14a3c:	bl	1104c <strtol@plt>
   14a40:	str	r0, [sl]
   14a44:	ldr	r0, [r8]
   14a48:	cmp	r0, #0
   14a4c:	rsbne	r0, r0, #0
   14a50:	bne	14a74 <strspn@plt+0x3710>
   14a54:	ldr	r3, [r7, #-368]	; 0xfffffe90
   14a58:	cmp	r3, r4
   14a5c:	beq	14af0 <strspn@plt+0x378c>
   14a60:	cmp	r3, #0
   14a64:	beq	14a74 <strspn@plt+0x3710>
   14a68:	ldrsb	r3, [r3]
   14a6c:	cmp	r3, #0
   14a70:	bne	14af0 <strspn@plt+0x378c>
   14a74:	add	r3, sp, #8576	; 0x2180
   14a78:	add	r3, r3, #4
   14a7c:	ldr	r2, [r3]
   14a80:	ldr	r3, [sp, #16]
   14a84:	ldr	r3, [r3]
   14a88:	cmp	r2, r3
   14a8c:	bne	14b00 <strspn@plt+0x379c>
   14a90:	add	sp, sp, #8576	; 0x2180
   14a94:	add	sp, sp, #12
   14a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a9c:	ldr	r0, [r5]
   14aa0:	bl	112ec <dirfd@plt>
   14aa4:	str	r6, [sp]
   14aa8:	add	r3, sp, #24
   14aac:	mov	r2, r4
   14ab0:	mov	r1, r0
   14ab4:	mov	r0, #3
   14ab8:	bl	11124 <__fxstatat64@plt>
   14abc:	cmp	r0, #0
   14ac0:	bne	14920 <strspn@plt+0x35bc>
   14ac4:	add	r7, sp, #392	; 0x188
   14ac8:	ldr	r2, [r5, #8]
   14acc:	ldr	r3, [r7, #-344]	; 0xfffffea8
   14ad0:	cmp	r2, r3
   14ad4:	bne	14920 <strspn@plt+0x35bc>
   14ad8:	ldrb	r3, [r5, #12]
   14adc:	b	14968 <strspn@plt+0x3604>
   14ae0:	ldr	r3, [r8]
   14ae4:	cmp	r3, r6
   14ae8:	moveq	r0, #1
   14aec:	beq	14a74 <strspn@plt+0x3710>
   14af0:	mvn	r0, #0
   14af4:	b	14a74 <strspn@plt+0x3710>
   14af8:	mvn	r0, #21
   14afc:	b	14a74 <strspn@plt+0x3710>
   14b00:	bl	110f4 <__stack_chk_fail@plt>
   14b04:	andeq	r1, r1, r4, lsl r6
   14b08:	andeq	r0, r0, ip, lsr #2
   14b0c:	andeq	r0, r0, ip, ror pc
   14b10:	andeq	r0, r0, ip, asr pc
   14b14:	andeq	r0, r0, ip, lsl #29
   14b18:	cmp	r3, #0
   14b1c:	cmpeq	r2, #0
   14b20:	bne	14b38 <strspn@plt+0x37d4>
   14b24:	cmp	r1, #0
   14b28:	cmpeq	r0, #0
   14b2c:	mvnne	r1, #0
   14b30:	mvnne	r0, #0
   14b34:	b	14b54 <strspn@plt+0x37f0>
   14b38:	sub	sp, sp, #8
   14b3c:	push	{sp, lr}
   14b40:	bl	14b64 <strspn@plt+0x3800>
   14b44:	ldr	lr, [sp, #4]
   14b48:	add	sp, sp, #8
   14b4c:	pop	{r2, r3}
   14b50:	bx	lr
   14b54:	push	{r1, lr}
   14b58:	mov	r0, #8
   14b5c:	bl	11034 <raise@plt>
   14b60:	pop	{r1, pc}
   14b64:	cmp	r1, r3
   14b68:	cmpeq	r0, r2
   14b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b70:	mov	r4, r0
   14b74:	movcc	r0, #0
   14b78:	mov	r5, r1
   14b7c:	ldr	lr, [sp, #36]	; 0x24
   14b80:	movcc	r1, r0
   14b84:	bcc	14c80 <strspn@plt+0x391c>
   14b88:	cmp	r3, #0
   14b8c:	clzeq	ip, r2
   14b90:	clzne	ip, r3
   14b94:	addeq	ip, ip, #32
   14b98:	cmp	r5, #0
   14b9c:	clzeq	r1, r4
   14ba0:	addeq	r1, r1, #32
   14ba4:	clzne	r1, r5
   14ba8:	sub	ip, ip, r1
   14bac:	sub	sl, ip, #32
   14bb0:	lsl	r9, r3, ip
   14bb4:	rsb	fp, ip, #32
   14bb8:	orr	r9, r9, r2, lsl sl
   14bbc:	orr	r9, r9, r2, lsr fp
   14bc0:	lsl	r8, r2, ip
   14bc4:	cmp	r5, r9
   14bc8:	cmpeq	r4, r8
   14bcc:	movcc	r0, #0
   14bd0:	movcc	r1, r0
   14bd4:	bcc	14bf0 <strspn@plt+0x388c>
   14bd8:	mov	r0, #1
   14bdc:	subs	r4, r4, r8
   14be0:	lsl	r1, r0, sl
   14be4:	orr	r1, r1, r0, lsr fp
   14be8:	lsl	r0, r0, ip
   14bec:	sbc	r5, r5, r9
   14bf0:	cmp	ip, #0
   14bf4:	beq	14c80 <strspn@plt+0x391c>
   14bf8:	lsr	r6, r8, #1
   14bfc:	orr	r6, r6, r9, lsl #31
   14c00:	lsr	r7, r9, #1
   14c04:	mov	r2, ip
   14c08:	b	14c2c <strspn@plt+0x38c8>
   14c0c:	subs	r3, r4, r6
   14c10:	sbc	r8, r5, r7
   14c14:	adds	r3, r3, r3
   14c18:	adc	r8, r8, r8
   14c1c:	adds	r4, r3, #1
   14c20:	adc	r5, r8, #0
   14c24:	subs	r2, r2, #1
   14c28:	beq	14c48 <strspn@plt+0x38e4>
   14c2c:	cmp	r5, r7
   14c30:	cmpeq	r4, r6
   14c34:	bcs	14c0c <strspn@plt+0x38a8>
   14c38:	adds	r4, r4, r4
   14c3c:	adc	r5, r5, r5
   14c40:	subs	r2, r2, #1
   14c44:	bne	14c2c <strspn@plt+0x38c8>
   14c48:	lsr	r3, r4, ip
   14c4c:	orr	r3, r3, r5, lsl fp
   14c50:	lsr	r2, r5, ip
   14c54:	orr	r3, r3, r5, lsr sl
   14c58:	adds	r0, r0, r4
   14c5c:	mov	r4, r3
   14c60:	lsl	r3, r2, ip
   14c64:	orr	r3, r3, r4, lsl sl
   14c68:	lsl	ip, r4, ip
   14c6c:	orr	r3, r3, r4, lsr fp
   14c70:	adc	r1, r1, r5
   14c74:	subs	r0, r0, ip
   14c78:	mov	r5, r2
   14c7c:	sbc	r1, r1, r3
   14c80:	cmp	lr, #0
   14c84:	strdne	r4, [lr]
   14c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c90:	mov	r7, r0
   14c94:	ldr	r6, [pc, #72]	; 14ce4 <strspn@plt+0x3980>
   14c98:	ldr	r5, [pc, #72]	; 14ce8 <strspn@plt+0x3984>
   14c9c:	add	r6, pc, r6
   14ca0:	add	r5, pc, r5
   14ca4:	sub	r6, r6, r5
   14ca8:	mov	r8, r1
   14cac:	mov	r9, r2
   14cb0:	bl	10ff0 <fdopen@plt-0x20>
   14cb4:	asrs	r6, r6, #2
   14cb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cbc:	mov	r4, #0
   14cc0:	add	r4, r4, #1
   14cc4:	ldr	r3, [r5], #4
   14cc8:	mov	r2, r9
   14ccc:	mov	r1, r8
   14cd0:	mov	r0, r7
   14cd4:	blx	r3
   14cd8:	cmp	r6, r4
   14cdc:	bne	14cc0 <strspn@plt+0x395c>
   14ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ce4:	andeq	r1, r1, r0, lsr #2
   14ce8:	andeq	r1, r1, r8, lsl r1
   14cec:	bx	lr
   14cf0:	ldr	r3, [pc, #12]	; 14d04 <strspn@plt+0x39a0>
   14cf4:	mov	r1, #0
   14cf8:	add	r3, pc, r3
   14cfc:	ldr	r2, [r3]
   14d00:	b	1122c <__cxa_atexit@plt>
   14d04:	andeq	r1, r1, r4, lsl #6

Disassembly of section .fini:

00014d08 <.fini>:
   14d08:	push	{r3, lr}
   14d0c:	pop	{r3, pc}
