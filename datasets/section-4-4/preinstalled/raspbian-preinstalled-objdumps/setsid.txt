
raspbian-preinstalled/setsid:     file format elf32-littlearm


Disassembly of section .init:

0001082c <.init>:
   1082c:	push	{r3, lr}
   10830:	bl	10ecc <abort@plt+0x524>
   10834:	pop	{r3, pc}

Disassembly of section .plt:

00010838 <ferror@plt-0x14>:
   10838:	push	{lr}		; (str lr, [sp, #-4]!)
   1083c:	ldr	lr, [pc, #4]	; 10848 <ferror@plt-0x4>
   10840:	add	lr, pc, lr
   10844:	ldr	pc, [lr, #8]!
   10848:	andeq	r1, r1, ip, lsr #14

0001084c <ferror@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #1836]!	; 0x72c

00010858 <_exit@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #1828]!	; 0x724

00010864 <execvp@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #1820]!	; 0x71c

00010870 <dcgettext@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #1812]!	; 0x714

0001087c <__stack_chk_fail@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #1804]!	; 0x70c

00010888 <wait@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1796]!	; 0x704

00010894 <textdomain@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1788]!	; 0x6fc

000108a0 <err@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #69632	; 0x11000
   108a8:	ldr	pc, [ip, #1780]!	; 0x6f4

000108ac <getpgrp@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #69632	; 0x11000
   108b4:	ldr	pc, [ip, #1772]!	; 0x6ec

000108b8 <ioctl@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #69632	; 0x11000
   108c0:	ldr	pc, [ip, #1764]!	; 0x6e4

000108c4 <__fpending@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #69632	; 0x11000
   108cc:	ldr	pc, [ip, #1756]!	; 0x6dc

000108d0 <__libc_start_main@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #69632	; 0x11000
   108d8:	ldr	pc, [ip, #1748]!	; 0x6d4

000108dc <__gmon_start__@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #69632	; 0x11000
   108e4:	ldr	pc, [ip, #1740]!	; 0x6cc

000108e8 <getopt_long@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #69632	; 0x11000
   108f0:	ldr	pc, [ip, #1732]!	; 0x6c4

000108f4 <getpid@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1724]!	; 0x6bc

00010900 <exit@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1716]!	; 0x6b4

0001090c <setsid@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1708]!	; 0x6ac

00010918 <warnx@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1700]!	; 0x6a4

00010924 <__errno_location@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1692]!	; 0x69c

00010930 <__cxa_atexit@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1684]!	; 0x694

0001093c <__printf_chk@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1676]!	; 0x68c

00010948 <__fprintf_chk@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1668]!	; 0x684

00010954 <fclose@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #69632	; 0x11000
   1095c:	ldr	pc, [ip, #1660]!	; 0x67c

00010960 <setlocale@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #69632	; 0x11000
   10968:	ldr	pc, [ip, #1652]!	; 0x674

0001096c <fork@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #69632	; 0x11000
   10974:	ldr	pc, [ip, #1644]!	; 0x66c

00010978 <warn@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #69632	; 0x11000
   10980:	ldr	pc, [ip, #1636]!	; 0x664

00010984 <fputc@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1628]!	; 0x65c

00010990 <bindtextdomain@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1620]!	; 0x654

0001099c <fputs@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #69632	; 0x11000
   109a4:	ldr	pc, [ip, #1612]!	; 0x64c

000109a8 <abort@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #69632	; 0x11000
   109b0:	ldr	pc, [ip, #1604]!	; 0x644

Disassembly of section .text:

000109b4 <.text>:
   109b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109b8:	sub	sp, sp, #20
   109bc:	ldr	sl, [pc, #1084]	; 10e00 <abort@plt+0x458>
   109c0:	mov	r4, #0
   109c4:	mov	r5, r0
   109c8:	ldr	r3, [sl]
   109cc:	mov	r6, r1
   109d0:	mov	r0, #6
   109d4:	ldr	r1, [pc, #1064]	; 10e04 <abort@plt+0x45c>
   109d8:	str	r3, [sp, #12]
   109dc:	str	r4, [sp, #8]
   109e0:	bl	10960 <setlocale@plt>
   109e4:	ldr	r1, [pc, #1052]	; 10e08 <abort@plt+0x460>
   109e8:	ldr	r0, [pc, #1052]	; 10e0c <abort@plt+0x464>
   109ec:	bl	10990 <bindtextdomain@plt>
   109f0:	ldr	r0, [pc, #1044]	; 10e0c <abort@plt+0x464>
   109f4:	bl	10894 <textdomain@plt>
   109f8:	ldr	r0, [pc, #1040]	; 10e10 <abort@plt+0x468>
   109fc:	bl	1111c <abort@plt+0x774>
   10a00:	ldr	r8, [pc, #1036]	; 10e14 <abort@plt+0x46c>
   10a04:	ldr	r7, [pc, #1036]	; 10e18 <abort@plt+0x470>
   10a08:	mov	fp, r4
   10a0c:	mov	r9, r4
   10a10:	str	r9, [sp]
   10a14:	mov	r3, r8
   10a18:	mov	r2, r7
   10a1c:	mov	r1, r6
   10a20:	mov	r0, r5
   10a24:	bl	108e8 <getopt_long@plt>
   10a28:	cmn	r0, #1
   10a2c:	beq	10b28 <abort@plt+0x180>
   10a30:	sub	r0, r0, #86	; 0x56
   10a34:	cmp	r0, #33	; 0x21
   10a38:	ldrls	pc, [pc, r0, lsl #2]
   10a3c:	b	10d8c <abort@plt+0x3e4>
   10a40:	andeq	r0, r1, r4, ror #21
   10a44:	andeq	r0, r1, ip, lsl #27
   10a48:	andeq	r0, r1, ip, lsl #27
   10a4c:	andeq	r0, r1, ip, lsl #27
   10a50:	andeq	r0, r1, ip, lsl #27
   10a54:	andeq	r0, r1, ip, lsl #27
   10a58:	andeq	r0, r1, ip, lsl #27
   10a5c:	andeq	r0, r1, ip, lsl #27
   10a60:	andeq	r0, r1, ip, lsl #27
   10a64:	andeq	r0, r1, ip, lsl #27
   10a68:	andeq	r0, r1, ip, lsl #27
   10a6c:	andeq	r0, r1, ip, lsl #27
   10a70:	andeq	r0, r1, ip, lsl #27
   10a74:	ldrdeq	r0, [r1], -ip
   10a78:	andeq	r0, r1, ip, lsl #27
   10a7c:	andeq	r0, r1, ip, lsl #27
   10a80:	ldrdeq	r0, [r1], -r4
   10a84:	andeq	r0, r1, ip, lsl #27
   10a88:	andeq	r0, r1, r0, asr #24
   10a8c:	andeq	r0, r1, ip, lsl #27
   10a90:	andeq	r0, r1, ip, lsl #27
   10a94:	andeq	r0, r1, ip, lsl #27
   10a98:	andeq	r0, r1, ip, lsl #27
   10a9c:	andeq	r0, r1, ip, lsl #27
   10aa0:	andeq	r0, r1, ip, lsl #27
   10aa4:	andeq	r0, r1, ip, lsl #27
   10aa8:	andeq	r0, r1, ip, lsl #27
   10aac:	andeq	r0, r1, ip, lsl #27
   10ab0:	andeq	r0, r1, ip, lsl #27
   10ab4:	andeq	r0, r1, ip, lsl #27
   10ab8:	andeq	r0, r1, ip, lsl #27
   10abc:	andeq	r0, r1, ip, lsl #27
   10ac0:	andeq	r0, r1, ip, lsl #27
   10ac4:	andeq	r0, r1, r8, asr #21
   10ac8:	mov	r3, #1
   10acc:	str	r3, [sp, #8]
   10ad0:	b	10a10 <abort@plt+0x68>
   10ad4:	mov	fp, #1
   10ad8:	b	10a10 <abort@plt+0x68>
   10adc:	mov	r4, #1
   10ae0:	b	10a10 <abort@plt+0x68>
   10ae4:	mov	r2, #5
   10ae8:	ldr	r1, [pc, #812]	; 10e1c <abort@plt+0x474>
   10aec:	mov	r0, #0
   10af0:	bl	10870 <dcgettext@plt>
   10af4:	ldr	r2, [pc, #804]	; 10e20 <abort@plt+0x478>
   10af8:	ldr	r3, [pc, #804]	; 10e24 <abort@plt+0x47c>
   10afc:	ldr	r2, [r2]
   10b00:	mov	r1, r0
   10b04:	mov	r0, #1
   10b08:	bl	1093c <__printf_chk@plt>
   10b0c:	mov	r0, #0
   10b10:	ldr	r2, [sp, #12]
   10b14:	ldr	r3, [sl]
   10b18:	cmp	r2, r3
   10b1c:	bne	10dc4 <abort@plt+0x41c>
   10b20:	add	sp, sp, #20
   10b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b28:	ldr	r7, [pc, #760]	; 10e28 <abort@plt+0x480>
   10b2c:	ldr	r3, [r7]
   10b30:	sub	r5, r5, r3
   10b34:	cmp	r5, #0
   10b38:	ble	10d78 <abort@plt+0x3d0>
   10b3c:	cmp	fp, #0
   10b40:	bne	10bd4 <abort@plt+0x22c>
   10b44:	bl	108ac <getpgrp@plt>
   10b48:	mov	r5, r0
   10b4c:	bl	108f4 <getpid@plt>
   10b50:	cmp	r5, r0
   10b54:	beq	10bd4 <abort@plt+0x22c>
   10b58:	bl	1090c <setsid@plt>
   10b5c:	cmp	r0, #0
   10b60:	blt	10c24 <abort@plt+0x27c>
   10b64:	cmp	r4, #0
   10b68:	beq	10b8c <abort@plt+0x1e4>
   10b6c:	mov	r2, #1
   10b70:	ldr	r1, [pc, #692]	; 10e2c <abort@plt+0x484>
   10b74:	mov	r0, #0
   10b78:	bl	108b8 <ioctl@plt>
   10b7c:	cmp	r0, #0
   10b80:	movne	r2, #5
   10b84:	ldrne	r1, [pc, #676]	; 10e30 <abort@plt+0x488>
   10b88:	bne	10c2c <abort@plt+0x284>
   10b8c:	ldr	r3, [r7]
   10b90:	add	r1, r6, r3, lsl #2
   10b94:	ldr	r0, [r6, r3, lsl #2]
   10b98:	bl	10864 <execvp@plt>
   10b9c:	bl	10924 <__errno_location@plt>
   10ba0:	mov	r2, #5
   10ba4:	ldr	r1, [pc, #648]	; 10e34 <abort@plt+0x48c>
   10ba8:	ldr	r3, [r0]
   10bac:	mov	r0, #0
   10bb0:	cmp	r3, #2
   10bb4:	moveq	r4, #127	; 0x7f
   10bb8:	movne	r4, #126	; 0x7e
   10bbc:	bl	10870 <dcgettext@plt>
   10bc0:	ldr	r3, [r7]
   10bc4:	ldr	r2, [r6, r3, lsl #2]
   10bc8:	mov	r1, r0
   10bcc:	mov	r0, r4
   10bd0:	bl	108a0 <err@plt>
   10bd4:	bl	1096c <fork@plt>
   10bd8:	cmn	r0, #1
   10bdc:	mov	r5, r0
   10be0:	beq	10dc8 <abort@plt+0x420>
   10be4:	cmp	r0, #0
   10be8:	beq	10b58 <abort@plt+0x1b0>
   10bec:	ldr	r0, [sp, #8]
   10bf0:	cmp	r0, #0
   10bf4:	beq	10b10 <abort@plt+0x168>
   10bf8:	add	r0, sp, #8
   10bfc:	bl	10888 <wait@plt>
   10c00:	cmp	r0, r5
   10c04:	mov	r6, r0
   10c08:	bne	10df4 <abort@plt+0x44c>
   10c0c:	ldr	r4, [sp, #8]
   10c10:	tst	r4, #127	; 0x7f
   10c14:	bne	10dd4 <abort@plt+0x42c>
   10c18:	asr	r0, r4, #8
   10c1c:	uxtb	r0, r0
   10c20:	b	10b10 <abort@plt+0x168>
   10c24:	ldr	r1, [pc, #524]	; 10e38 <abort@plt+0x490>
   10c28:	mov	r2, #5
   10c2c:	mov	r0, #0
   10c30:	bl	10870 <dcgettext@plt>
   10c34:	mov	r1, r0
   10c38:	mov	r0, #1
   10c3c:	bl	108a0 <err@plt>
   10c40:	ldr	r3, [pc, #500]	; 10e3c <abort@plt+0x494>
   10c44:	mov	r2, #5
   10c48:	ldr	r1, [pc, #496]	; 10e40 <abort@plt+0x498>
   10c4c:	ldr	r4, [r3]
   10c50:	mov	r0, #0
   10c54:	bl	10870 <dcgettext@plt>
   10c58:	mov	r1, r4
   10c5c:	bl	1099c <fputs@plt>
   10c60:	mov	r2, #5
   10c64:	ldr	r1, [pc, #472]	; 10e44 <abort@plt+0x49c>
   10c68:	mov	r0, #0
   10c6c:	bl	10870 <dcgettext@plt>
   10c70:	ldr	r3, [pc, #424]	; 10e20 <abort@plt+0x478>
   10c74:	mov	r1, #1
   10c78:	ldr	r3, [r3]
   10c7c:	mov	r2, r0
   10c80:	mov	r0, r4
   10c84:	bl	10948 <__fprintf_chk@plt>
   10c88:	mov	r1, r4
   10c8c:	mov	r0, #10
   10c90:	bl	10984 <fputc@plt>
   10c94:	mov	r2, #5
   10c98:	ldr	r1, [pc, #424]	; 10e48 <abort@plt+0x4a0>
   10c9c:	mov	r0, #0
   10ca0:	bl	10870 <dcgettext@plt>
   10ca4:	mov	r1, r4
   10ca8:	bl	1099c <fputs@plt>
   10cac:	mov	r2, #5
   10cb0:	ldr	r1, [pc, #404]	; 10e4c <abort@plt+0x4a4>
   10cb4:	mov	r0, #0
   10cb8:	bl	10870 <dcgettext@plt>
   10cbc:	mov	r1, r4
   10cc0:	bl	1099c <fputs@plt>
   10cc4:	mov	r2, #5
   10cc8:	ldr	r1, [pc, #384]	; 10e50 <abort@plt+0x4a8>
   10ccc:	mov	r0, #0
   10cd0:	bl	10870 <dcgettext@plt>
   10cd4:	mov	r1, r4
   10cd8:	bl	1099c <fputs@plt>
   10cdc:	mov	r2, #5
   10ce0:	ldr	r1, [pc, #364]	; 10e54 <abort@plt+0x4ac>
   10ce4:	mov	r0, #0
   10ce8:	bl	10870 <dcgettext@plt>
   10cec:	mov	r1, r4
   10cf0:	bl	1099c <fputs@plt>
   10cf4:	mov	r2, #5
   10cf8:	ldr	r1, [pc, #344]	; 10e58 <abort@plt+0x4b0>
   10cfc:	mov	r0, #0
   10d00:	bl	10870 <dcgettext@plt>
   10d04:	mov	r1, r4
   10d08:	bl	1099c <fputs@plt>
   10d0c:	mov	r2, #5
   10d10:	ldr	r1, [pc, #324]	; 10e5c <abort@plt+0x4b4>
   10d14:	mov	r0, #0
   10d18:	bl	10870 <dcgettext@plt>
   10d1c:	mov	r2, #5
   10d20:	ldr	r1, [pc, #312]	; 10e60 <abort@plt+0x4b8>
   10d24:	mov	r4, r0
   10d28:	mov	r0, #0
   10d2c:	bl	10870 <dcgettext@plt>
   10d30:	ldr	r2, [pc, #300]	; 10e64 <abort@plt+0x4bc>
   10d34:	mov	r3, r4
   10d38:	str	r2, [sp]
   10d3c:	ldr	r1, [pc, #292]	; 10e68 <abort@plt+0x4c0>
   10d40:	ldr	r2, [pc, #292]	; 10e6c <abort@plt+0x4c4>
   10d44:	str	r0, [sp, #4]
   10d48:	mov	r0, #1
   10d4c:	bl	1093c <__printf_chk@plt>
   10d50:	mov	r2, #5
   10d54:	ldr	r1, [pc, #276]	; 10e70 <abort@plt+0x4c8>
   10d58:	mov	r0, #0
   10d5c:	bl	10870 <dcgettext@plt>
   10d60:	ldr	r2, [pc, #268]	; 10e74 <abort@plt+0x4cc>
   10d64:	mov	r1, r0
   10d68:	mov	r0, #1
   10d6c:	bl	1093c <__printf_chk@plt>
   10d70:	mov	r0, #0
   10d74:	bl	10900 <exit@plt>
   10d78:	mov	r2, #5
   10d7c:	ldr	r1, [pc, #244]	; 10e78 <abort@plt+0x4d0>
   10d80:	mov	r0, #0
   10d84:	bl	10870 <dcgettext@plt>
   10d88:	bl	10918 <warnx@plt>
   10d8c:	ldr	r3, [pc, #232]	; 10e7c <abort@plt+0x4d4>
   10d90:	mov	r2, #5
   10d94:	ldr	r1, [pc, #228]	; 10e80 <abort@plt+0x4d8>
   10d98:	mov	r0, #0
   10d9c:	ldr	r4, [r3]
   10da0:	bl	10870 <dcgettext@plt>
   10da4:	ldr	r3, [pc, #116]	; 10e20 <abort@plt+0x478>
   10da8:	mov	r1, #1
   10dac:	ldr	r3, [r3]
   10db0:	mov	r2, r0
   10db4:	mov	r0, r4
   10db8:	bl	10948 <__fprintf_chk@plt>
   10dbc:	mov	r0, #1
   10dc0:	bl	10900 <exit@plt>
   10dc4:	bl	1087c <__stack_chk_fail@plt>
   10dc8:	mov	r2, #5
   10dcc:	ldr	r1, [pc, #176]	; 10e84 <abort@plt+0x4dc>
   10dd0:	b	10c2c <abort@plt+0x284>
   10dd4:	mov	r2, #5
   10dd8:	ldr	r1, [pc, #168]	; 10e88 <abort@plt+0x4e0>
   10ddc:	mov	r0, #0
   10de0:	bl	10870 <dcgettext@plt>
   10de4:	mov	r2, r6
   10de8:	mov	r1, r0
   10dec:	mov	r0, r4
   10df0:	bl	108a0 <err@plt>
   10df4:	ldr	r1, [pc, #144]	; 10e8c <abort@plt+0x4e4>
   10df8:	mov	r0, #1
   10dfc:	bl	108a0 <err@plt>
   10e00:	andeq	r1, r2, r0, ror lr
   10e04:	andeq	r1, r1, r4, asr #4
   10e08:	andeq	r1, r1, ip, lsr #3
   10e0c:	andeq	r1, r1, r0, asr #3
   10e10:	andeq	r0, r1, r0, lsl #31
   10e14:	andeq	r1, r1, r0, asr #2
   10e18:	muleq	r1, ip, r3
   10e1c:	andeq	r1, r1, ip, asr #3
   10e20:	andeq	r2, r2, r8
   10e24:	ldrdeq	r1, [r1], -r8
   10e28:	andeq	r2, r2, r0, lsl r0
   10e2c:	andeq	r5, r0, lr, lsl #8
   10e30:	strdeq	r1, [r1], -ip
   10e34:	andeq	r1, r1, r4, lsr #8
   10e38:	andeq	r1, r1, ip, ror #7
   10e3c:	andeq	r2, r2, ip, lsl r0
   10e40:	andeq	r1, r1, ip, ror #3
   10e44:	strdeq	r1, [r1], -r8
   10e48:	andeq	r1, r1, r4, lsr #4
   10e4c:	andeq	r1, r1, r8, asr #4
   10e50:	andeq	r1, r1, r4, asr r2
   10e54:	muleq	r1, r8, r2
   10e58:			; <UNDEFINED> instruction: 0x000112b8
   10e5c:	strdeq	r1, [r1], -r8
   10e60:	andeq	r1, r1, ip, lsl #6
   10e64:	andeq	r1, r1, ip, lsr r3
   10e68:	andeq	r1, r1, r8, lsr #6
   10e6c:	andeq	r1, r1, ip, lsl r3
   10e70:	andeq	r1, r1, ip, asr #6
   10e74:	andeq	r1, r1, r8, ror #6
   10e78:	andeq	r1, r1, r4, lsr #7
   10e7c:	andeq	r2, r2, r8, lsl r0
   10e80:	andeq	r1, r1, r4, ror r3
   10e84:			; <UNDEFINED> instruction: 0x000113bc
   10e88:	andeq	r1, r1, ip, asr #7
   10e8c:	andeq	r1, r1, r4, asr #7
   10e90:	mov	fp, #0
   10e94:	mov	lr, #0
   10e98:	pop	{r1}		; (ldr r1, [sp], #4)
   10e9c:	mov	r2, sp
   10ea0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ea4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ea8:	ldr	ip, [pc, #16]	; 10ec0 <abort@plt+0x518>
   10eac:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb0:	ldr	r0, [pc, #12]	; 10ec4 <abort@plt+0x51c>
   10eb4:	ldr	r3, [pc, #12]	; 10ec8 <abort@plt+0x520>
   10eb8:	bl	108d0 <__libc_start_main@plt>
   10ebc:	bl	109a8 <abort@plt>
   10ec0:	andeq	r1, r1, r8, lsl r1
   10ec4:			; <UNDEFINED> instruction: 0x000109b4
   10ec8:	strheq	r1, [r1], -r8
   10ecc:	ldr	r3, [pc, #20]	; 10ee8 <abort@plt+0x540>
   10ed0:	ldr	r2, [pc, #20]	; 10eec <abort@plt+0x544>
   10ed4:	add	r3, pc, r3
   10ed8:	ldr	r2, [r3, r2]
   10edc:	cmp	r2, #0
   10ee0:	bxeq	lr
   10ee4:	b	108dc <__gmon_start__@plt>
   10ee8:	muleq	r1, r8, r0
   10eec:	andeq	r0, r0, r4, lsl #1
   10ef0:	ldr	r0, [pc, #24]	; 10f10 <abort@plt+0x568>
   10ef4:	ldr	r3, [pc, #24]	; 10f14 <abort@plt+0x56c>
   10ef8:	cmp	r3, r0
   10efc:	bxeq	lr
   10f00:	ldr	r3, [pc, #16]	; 10f18 <abort@plt+0x570>
   10f04:	cmp	r3, #0
   10f08:	bxeq	lr
   10f0c:	bx	r3
   10f10:	andeq	r2, r2, r8
   10f14:	andeq	r2, r2, r8
   10f18:	andeq	r0, r0, r0
   10f1c:	ldr	r0, [pc, #36]	; 10f48 <abort@plt+0x5a0>
   10f20:	ldr	r1, [pc, #36]	; 10f4c <abort@plt+0x5a4>
   10f24:	sub	r1, r1, r0
   10f28:	asr	r1, r1, #2
   10f2c:	add	r1, r1, r1, lsr #31
   10f30:	asrs	r1, r1, #1
   10f34:	bxeq	lr
   10f38:	ldr	r3, [pc, #16]	; 10f50 <abort@plt+0x5a8>
   10f3c:	cmp	r3, #0
   10f40:	bxeq	lr
   10f44:	bx	r3
   10f48:	andeq	r2, r2, r8
   10f4c:	andeq	r2, r2, r8
   10f50:	andeq	r0, r0, r0
   10f54:	push	{r4, lr}
   10f58:	ldr	r4, [pc, #24]	; 10f78 <abort@plt+0x5d0>
   10f5c:	ldrb	r3, [r4]
   10f60:	cmp	r3, #0
   10f64:	popne	{r4, pc}
   10f68:	bl	10ef0 <abort@plt+0x548>
   10f6c:	mov	r3, #1
   10f70:	strb	r3, [r4]
   10f74:	pop	{r4, pc}
   10f78:	andeq	r2, r2, r0, lsr #32
   10f7c:	b	10f1c <abort@plt+0x574>
   10f80:	ldr	r3, [pc, #292]	; 110ac <abort@plt+0x704>
   10f84:	push	{r4, r5, r6, lr}
   10f88:	ldr	r4, [r3]
   10f8c:	mov	r0, r4
   10f90:	bl	108c4 <__fpending@plt>
   10f94:	mov	r6, r0
   10f98:	mov	r0, r4
   10f9c:	bl	1084c <ferror@plt>
   10fa0:	mov	r5, r0
   10fa4:	mov	r0, r4
   10fa8:	bl	10954 <fclose@plt>
   10fac:	cmp	r5, #0
   10fb0:	mov	r4, r0
   10fb4:	bne	1105c <abort@plt+0x6b4>
   10fb8:	cmp	r0, #0
   10fbc:	beq	10fd8 <abort@plt+0x630>
   10fc0:	bl	10924 <__errno_location@plt>
   10fc4:	cmp	r6, #0
   10fc8:	ldr	r3, [r0]
   10fcc:	bne	11034 <abort@plt+0x68c>
   10fd0:	cmp	r3, #9
   10fd4:	bne	11034 <abort@plt+0x68c>
   10fd8:	ldr	r3, [pc, #208]	; 110b0 <abort@plt+0x708>
   10fdc:	ldr	r4, [r3]
   10fe0:	mov	r0, r4
   10fe4:	bl	108c4 <__fpending@plt>
   10fe8:	mov	r6, r0
   10fec:	mov	r0, r4
   10ff0:	bl	1084c <ferror@plt>
   10ff4:	mov	r5, r0
   10ff8:	mov	r0, r4
   10ffc:	bl	10954 <fclose@plt>
   11000:	cmp	r5, #0
   11004:	mov	r4, r0
   11008:	bne	11090 <abort@plt+0x6e8>
   1100c:	cmp	r0, #0
   11010:	popeq	{r4, r5, r6, pc}
   11014:	cmp	r6, #0
   11018:	bne	1102c <abort@plt+0x684>
   1101c:	bl	10924 <__errno_location@plt>
   11020:	ldr	r3, [r0]
   11024:	cmp	r3, #9
   11028:	popeq	{r4, r5, r6, pc}
   1102c:	mov	r0, #1
   11030:	bl	10858 <_exit@plt>
   11034:	cmp	r3, #32
   11038:	beq	10fd8 <abort@plt+0x630>
   1103c:	cmp	r3, #0
   11040:	beq	11078 <abort@plt+0x6d0>
   11044:	mov	r2, #5
   11048:	ldr	r1, [pc, #100]	; 110b4 <abort@plt+0x70c>
   1104c:	mov	r0, #0
   11050:	bl	10870 <dcgettext@plt>
   11054:	bl	10978 <warn@plt>
   11058:	b	1102c <abort@plt+0x684>
   1105c:	bl	10924 <__errno_location@plt>
   11060:	cmp	r4, #0
   11064:	ldr	r3, [r0]
   11068:	bne	11034 <abort@plt+0x68c>
   1106c:	cmp	r3, #32
   11070:	strne	r4, [r0]
   11074:	beq	10fd8 <abort@plt+0x630>
   11078:	mov	r2, #5
   1107c:	ldr	r1, [pc, #48]	; 110b4 <abort@plt+0x70c>
   11080:	mov	r0, #0
   11084:	bl	10870 <dcgettext@plt>
   11088:	bl	10918 <warnx@plt>
   1108c:	b	1102c <abort@plt+0x684>
   11090:	cmp	r0, #0
   11094:	bne	1102c <abort@plt+0x684>
   11098:	bl	10924 <__errno_location@plt>
   1109c:	ldr	r3, [r0]
   110a0:	cmp	r3, #32
   110a4:	strne	r4, [r0]
   110a8:	b	1102c <abort@plt+0x684>
   110ac:	andeq	r2, r2, ip, lsl r0
   110b0:	andeq	r2, r2, r8, lsl r0
   110b4:	andeq	r1, r1, r0, lsr #3
   110b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110bc:	mov	r7, r0
   110c0:	ldr	r6, [pc, #72]	; 11110 <abort@plt+0x768>
   110c4:	ldr	r5, [pc, #72]	; 11114 <abort@plt+0x76c>
   110c8:	add	r6, pc, r6
   110cc:	add	r5, pc, r5
   110d0:	sub	r6, r6, r5
   110d4:	mov	r8, r1
   110d8:	mov	r9, r2
   110dc:	bl	1082c <ferror@plt-0x20>
   110e0:	asrs	r6, r6, #2
   110e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110e8:	mov	r4, #0
   110ec:	add	r4, r4, #1
   110f0:	ldr	r3, [r5], #4
   110f4:	mov	r2, r9
   110f8:	mov	r1, r8
   110fc:	mov	r0, r7
   11100:	blx	r3
   11104:	cmp	r6, r4
   11108:	bne	110ec <abort@plt+0x744>
   1110c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11110:	muleq	r1, ip, sp
   11114:	muleq	r1, r4, sp
   11118:	bx	lr
   1111c:	ldr	r3, [pc, #12]	; 11130 <abort@plt+0x788>
   11120:	mov	r1, #0
   11124:	add	r3, pc, r3
   11128:	ldr	r2, [r3]
   1112c:	b	10930 <__cxa_atexit@plt>
   11130:	ldrdeq	r0, [r1], -r8

Disassembly of section .fini:

00011134 <.fini>:
   11134:	push	{r3, lr}
   11138:	pop	{r3, pc}
