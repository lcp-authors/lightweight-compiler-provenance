
raspbian-preinstalled/tac:     file format elf32-littlearm


Disassembly of section .init:

00010eb4 <.init>:
   10eb4:	push	{r3, lr}
   10eb8:	bl	11974 <close@plt+0x7d0>
   10ebc:	pop	{r3, pc}

Disassembly of section .plt:

00010ec0 <fdopen@plt-0x14>:
   10ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec4:	ldr	lr, [pc, #4]	; 10ed0 <fdopen@plt-0x4>
   10ec8:	add	lr, pc, lr
   10ecc:	ldr	pc, [lr, #8]!
   10ed0:	andeq	r6, r1, r0, lsr r1

00010ed4 <fdopen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #304]!	; 0x130

00010ee0 <calloc@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #296]!	; 0x128

00010eec <fputs_unlocked@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #288]!	; 0x120

00010ef8 <raise@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #280]!	; 0x118

00010f04 <strcmp@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #272]!	; 0x110

00010f10 <read@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #264]!	; 0x108

00010f1c <fflush@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #256]!	; 0x100

00010f28 <memmove@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #248]!	; 0xf8

00010f34 <free@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #240]!	; 0xf0

00010f40 <_exit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #232]!	; 0xe8

00010f4c <memcpy@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #224]!	; 0xe0

00010f58 <mbsinit@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #216]!	; 0xd8

00010f64 <ftruncate64@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #208]!	; 0xd0

00010f70 <fwrite_unlocked@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #200]!	; 0xc8

00010f7c <memcmp@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #192]!	; 0xc0

00010f88 <dcgettext@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #184]!	; 0xb8

00010f94 <__stack_chk_fail@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #176]!	; 0xb0

00010fa0 <unlink@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #168]!	; 0xa8

00010fac <realloc@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #160]!	; 0xa0

00010fb8 <textdomain@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #152]!	; 0x98

00010fc4 <fflush_unlocked@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #144]!	; 0x90

00010fd0 <iswprint@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #136]!	; 0x88

00010fdc <mkostemp64@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #128]!	; 0x80

00010fe8 <fwrite@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #120]!	; 0x78

00010ff4 <lseek64@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #112]!	; 0x70

00011000 <__ctype_get_mb_cur_max@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #104]!	; 0x68

0001100c <__fpending@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #96]!	; 0x60

00011018 <mbrtowc@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #88]!	; 0x58

00011024 <error@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #80]!	; 0x50

00011030 <open64@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #72]!	; 0x48

0001103c <getenv@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #64]!	; 0x40

00011048 <mkstemp64@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #56]!	; 0x38

00011054 <malloc@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #48]!	; 0x30

00011060 <__libc_start_main@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #40]!	; 0x28

0001106c <__freading@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #32]!

00011078 <__gmon_start__@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #24]!

00011084 <mempcpy@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #16]!

00011090 <getopt_long@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #8]!

0001109c <__ctype_b_loc@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #0]!

000110a8 <exit@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #86016	; 0x15000
   110b0:	ldr	pc, [ip, #4088]!	; 0xff8

000110b4 <strlen@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #4080]!	; 0xff0

000110c0 <re_search@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110cc <__errno_location@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110d8 <__cxa_atexit@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110e4 <memset@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #4048]!	; 0xfd0

000110f0 <__printf_chk@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110fc <fileno@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #4032]!	; 0xfc0

00011108 <__fprintf_chk@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #4024]!	; 0xfb8

00011114 <fclose@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011120 <fseeko64@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #4008]!	; 0xfa8

0001112c <fcntl64@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #4000]!	; 0xfa0

00011138 <setlocale@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3992]!	; 0xf98

00011144 <strrchr@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3984]!	; 0xf90

00011150 <nl_langinfo@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3976]!	; 0xf88

0001115c <clearerr_unlocked@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3968]!	; 0xf80

00011168 <bindtextdomain@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3960]!	; 0xf78

00011174 <isatty@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3952]!	; 0xf70

00011180 <re_compile_pattern@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3944]!	; 0xf68

0001118c <strncmp@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3936]!	; 0xf60

00011198 <abort@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3928]!	; 0xf58

000111a4 <close@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3920]!	; 0xf50

Disassembly of section .text:

000111b0 <.text>:
   111b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b4:	mov	r7, r0
   111b8:	sub	sp, sp, #36	; 0x24
   111bc:	ldr	r0, [r1]
   111c0:	mov	r6, r1
   111c4:	bl	125b4 <close@plt+0x1410>
   111c8:	ldr	r1, [pc, #1768]	; 118b8 <close@plt+0x714>
   111cc:	mov	r0, #6
   111d0:	bl	11138 <setlocale@plt>
   111d4:	ldr	r1, [pc, #1760]	; 118bc <close@plt+0x718>
   111d8:	ldr	r0, [pc, #1760]	; 118c0 <close@plt+0x71c>
   111dc:	bl	11168 <bindtextdomain@plt>
   111e0:	ldr	r0, [pc, #1752]	; 118c0 <close@plt+0x71c>
   111e4:	bl	10fb8 <textdomain@plt>
   111e8:	ldr	r4, [pc, #1748]	; 118c4 <close@plt+0x720>
   111ec:	ldr	r0, [pc, #1748]	; 118c8 <close@plt+0x724>
   111f0:	ldr	r9, [pc, #1748]	; 118cc <close@plt+0x728>
   111f4:	ldr	r8, [pc, #1748]	; 118d0 <close@plt+0x72c>
   111f8:	ldr	sl, [pc, #1748]	; 118d4 <close@plt+0x730>
   111fc:	bl	15ac8 <close@plt+0x4924>
   11200:	ldr	r2, [pc, #1744]	; 118d8 <close@plt+0x734>
   11204:	mov	r3, #1
   11208:	str	r2, [r4, #4]
   1120c:	str	r3, [r4, #20]
   11210:	strb	r3, [r4, #72]	; 0x48
   11214:	mov	r5, #0
   11218:	str	r5, [sp]
   1121c:	mov	r3, r9
   11220:	mov	r2, r8
   11224:	mov	r1, r6
   11228:	mov	r0, r7
   1122c:	bl	11090 <getopt_long@plt>
   11230:	cmn	r0, #1
   11234:	beq	112c0 <close@plt+0x11c>
   11238:	cmp	r0, #98	; 0x62
   1123c:	beq	112b8 <close@plt+0x114>
   11240:	ble	11254 <close@plt+0xb0>
   11244:	cmp	r0, #114	; 0x72
   11248:	bne	11294 <close@plt+0xf0>
   1124c:	str	r5, [r4, #20]
   11250:	b	11214 <close@plt+0x70>
   11254:	cmn	r0, #3
   11258:	bne	112a8 <close@plt+0x104>
   1125c:	ldr	r3, [pc, #1656]	; 118dc <close@plt+0x738>
   11260:	ldr	r0, [pc, #1656]	; 118e0 <close@plt+0x73c>
   11264:	ldr	r1, [pc, #1656]	; 118e4 <close@plt+0x740>
   11268:	ldr	r2, [pc, #1656]	; 118e8 <close@plt+0x744>
   1126c:	str	r5, [sp, #8]
   11270:	ldr	r0, [r0]
   11274:	ldr	r3, [r3]
   11278:	str	r1, [sp, #4]
   1127c:	str	r2, [sp]
   11280:	ldr	r1, [pc, #1636]	; 118ec <close@plt+0x748>
   11284:	ldr	r2, [pc, #1636]	; 118f0 <close@plt+0x74c>
   11288:	bl	14d58 <close@plt+0x3bb4>
   1128c:	mov	r0, r5
   11290:	bl	110a8 <exit@plt>
   11294:	cmp	r0, #115	; 0x73
   11298:	bne	11824 <close@plt+0x680>
   1129c:	ldr	r3, [sl]
   112a0:	str	r3, [r4, #4]
   112a4:	b	11214 <close@plt+0x70>
   112a8:	cmn	r0, #2
   112ac:	bne	11824 <close@plt+0x680>
   112b0:	mov	r0, r5
   112b4:	bl	120b8 <close@plt+0xf14>
   112b8:	strb	r5, [r4, #72]	; 0x48
   112bc:	b	11214 <close@plt+0x70>
   112c0:	ldr	r8, [r4, #4]
   112c4:	ldr	r5, [r4, #20]
   112c8:	cmp	r5, #0
   112cc:	ldrb	r9, [r8]
   112d0:	bne	11704 <close@plt+0x560>
   112d4:	cmp	r9, #0
   112d8:	beq	11898 <close@plt+0x6f4>
   112dc:	ldr	r9, [pc, #1552]	; 118f4 <close@plt+0x750>
   112e0:	mov	r0, r8
   112e4:	str	r5, [r4, #24]
   112e8:	str	r5, [r4, #28]
   112ec:	str	r5, [r4, #44]	; 0x2c
   112f0:	str	r9, [r4, #40]	; 0x28
   112f4:	bl	110b4 <strlen@plt>
   112f8:	sub	r2, r9, #52	; 0x34
   112fc:	mov	r1, r0
   11300:	mov	r0, r8
   11304:	bl	11180 <re_compile_pattern@plt>
   11308:	subs	r3, r0, #0
   1130c:	bne	11880 <close@plt+0x6dc>
   11310:	ldr	r1, [r4, #20]
   11314:	mov	r3, #8192	; 0x2000
   11318:	cmp	r1, #4096	; 0x1000
   1131c:	str	r3, [r4, #12]
   11320:	movcs	r2, #18
   11324:	bcs	11334 <close@plt+0x190>
   11328:	b	11344 <close@plt+0x1a0>
   1132c:	subs	r2, r2, #1
   11330:	beq	11874 <close@plt+0x6d0>
   11334:	lsl	r3, r3, #1
   11338:	cmp	r1, r3, lsr #1
   1133c:	bcs	1132c <close@plt+0x188>
   11340:	str	r3, [r4, #12]
   11344:	add	r1, r1, #1
   11348:	add	r1, r1, r3
   1134c:	lsl	r0, r1, #1
   11350:	cmp	r0, r1
   11354:	cmphi	r1, r3
   11358:	str	r0, [r4, #68]	; 0x44
   1135c:	bls	1187c <close@plt+0x6d8>
   11360:	bl	14e5c <close@plt+0x3cb8>
   11364:	ldr	r8, [r4, #20]
   11368:	cmp	r8, #0
   1136c:	mov	r5, r0
   11370:	addeq	r5, r0, #1
   11374:	str	r0, [r4, #16]
   11378:	streq	r5, [r4, #16]
   1137c:	bne	1173c <close@plt+0x598>
   11380:	ldr	r3, [pc, #1392]	; 118f8 <close@plt+0x754>
   11384:	ldr	r3, [r3]
   11388:	cmp	r3, r7
   1138c:	bge	11724 <close@plt+0x580>
   11390:	ldr	fp, [r6, r3, lsl #2]
   11394:	add	r6, r6, r3, lsl #2
   11398:	cmp	fp, #0
   1139c:	beq	11730 <close@plt+0x58c>
   113a0:	mov	r3, #1
   113a4:	str	r6, [sp, #24]
   113a8:	str	r3, [sp, #20]
   113ac:	ldr	r1, [pc, #1352]	; 118fc <close@plt+0x758>
   113b0:	mov	r0, fp
   113b4:	bl	10f04 <strcmp@plt>
   113b8:	subs	sl, r0, #0
   113bc:	bne	11550 <close@plt+0x3ac>
   113c0:	mov	r3, #1
   113c4:	mov	r2, #5
   113c8:	ldr	r1, [pc, #1328]	; 11900 <close@plt+0x75c>
   113cc:	strb	r3, [r4, #332]	; 0x14c
   113d0:	bl	10f88 <dcgettext@plt>
   113d4:	mov	r8, sl
   113d8:	mov	fp, r0
   113dc:	mov	r3, #2
   113e0:	str	r3, [sp]
   113e4:	mov	r2, #0
   113e8:	mov	r3, #0
   113ec:	mov	r0, r8
   113f0:	bl	10ff4 <lseek64@plt>
   113f4:	cmp	r0, #0
   113f8:	sbcs	r3, r1, #0
   113fc:	mov	r6, r0
   11400:	mov	r7, r1
   11404:	blt	11418 <close@plt+0x274>
   11408:	mov	r0, r8
   1140c:	bl	11174 <isatty@plt>
   11410:	cmp	r0, #0
   11414:	beq	116e8 <close@plt+0x544>
   11418:	ldr	r5, [r4, #336]	; 0x150
   1141c:	cmp	r5, #0
   11420:	beq	1168c <close@plt+0x4e8>
   11424:	ldr	r5, [r4, #340]	; 0x154
   11428:	mov	r0, r5
   1142c:	bl	1115c <clearerr_unlocked@plt>
   11430:	mov	r3, #0
   11434:	str	r3, [sp]
   11438:	mov	r0, r5
   1143c:	mov	r2, #0
   11440:	mov	r3, #0
   11444:	bl	150e4 <close@plt+0x3f40>
   11448:	cmp	r0, #0
   1144c:	blt	11634 <close@plt+0x490>
   11450:	ldr	r0, [r4, #340]	; 0x154
   11454:	bl	110fc <fileno@plt>
   11458:	mov	r2, #0
   1145c:	mov	r3, #0
   11460:	bl	10f64 <ftruncate64@plt>
   11464:	cmp	r0, #0
   11468:	blt	11634 <close@plt+0x490>
   1146c:	ldr	r3, [r4, #336]	; 0x150
   11470:	ldr	r9, [r4, #340]	; 0x154
   11474:	str	r3, [sp, #28]
   11478:	mov	r6, #0
   1147c:	mov	r7, #0
   11480:	b	114b0 <close@plt+0x30c>
   11484:	cmn	r5, #1
   11488:	beq	115ec <close@plt+0x448>
   1148c:	mov	r3, r9
   11490:	mov	r2, r5
   11494:	mov	r1, #1
   11498:	ldr	r0, [r4, #16]
   1149c:	bl	10f70 <fwrite_unlocked@plt>
   114a0:	cmp	r5, r0
   114a4:	bne	11664 <close@plt+0x4c0>
   114a8:	adds	r6, r6, r5
   114ac:	adc	r7, r7, #0
   114b0:	ldr	r2, [r4, #12]
   114b4:	ldr	r1, [r4, #16]
   114b8:	mov	r0, r8
   114bc:	bl	14830 <close@plt+0x368c>
   114c0:	subs	r5, r0, #0
   114c4:	bne	11484 <close@plt+0x2e0>
   114c8:	mov	r0, r9
   114cc:	bl	10fc4 <fflush_unlocked@plt>
   114d0:	cmp	r0, #0
   114d4:	bne	1182c <close@plt+0x688>
   114d8:	cmp	r6, #0
   114dc:	sbcs	r3, r7, #0
   114e0:	blt	11890 <close@plt+0x6ec>
   114e4:	mov	r0, r9
   114e8:	bl	110fc <fileno@plt>
   114ec:	mov	r2, r6
   114f0:	mov	r3, r7
   114f4:	ldr	r1, [sp, #28]
   114f8:	bl	11af8 <close@plt+0x954>
   114fc:	mov	r6, r0
   11500:	cmp	sl, #0
   11504:	bne	115a8 <close@plt+0x404>
   11508:	ldr	r3, [sp, #24]
   1150c:	ldr	fp, [r3, #4]!
   11510:	str	r3, [sp, #24]
   11514:	ldr	r3, [sp, #20]
   11518:	cmp	fp, #0
   1151c:	and	r3, r3, r6
   11520:	str	r3, [sp, #20]
   11524:	bne	113ac <close@plt+0x208>
   11528:	mov	r1, #0
   1152c:	mov	r0, r1
   11530:	bl	11a28 <close@plt+0x884>
   11534:	ldrb	r3, [r4, #332]	; 0x14c
   11538:	cmp	r3, #0
   1153c:	bne	11754 <close@plt+0x5b0>
   11540:	ldr	r3, [sp, #20]
   11544:	eor	r0, r3, #1
   11548:	add	sp, sp, #36	; 0x24
   1154c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11550:	mov	r1, #0
   11554:	mov	r0, fp
   11558:	bl	11030 <open64@plt>
   1155c:	subs	r8, r0, #0
   11560:	bge	113dc <close@plt+0x238>
   11564:	bl	110cc <__errno_location@plt>
   11568:	mov	r6, #0
   1156c:	ldr	r1, [pc, #912]	; 11904 <close@plt+0x760>
   11570:	mov	r2, #5
   11574:	ldr	r5, [r0]
   11578:	mov	r0, r6
   1157c:	bl	10f88 <dcgettext@plt>
   11580:	mov	r1, fp
   11584:	mov	r7, r0
   11588:	mov	r0, #4
   1158c:	bl	14570 <close@plt+0x33cc>
   11590:	mov	r3, r0
   11594:	mov	r2, r7
   11598:	mov	r1, r5
   1159c:	mov	r0, r6
   115a0:	bl	11024 <error@plt>
   115a4:	b	11508 <close@plt+0x364>
   115a8:	mov	r0, r8
   115ac:	bl	111a4 <close@plt>
   115b0:	cmp	r0, #0
   115b4:	beq	11508 <close@plt+0x364>
   115b8:	bl	110cc <__errno_location@plt>
   115bc:	mov	r6, #0
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #828]	; 11908 <close@plt+0x764>
   115c8:	ldr	r5, [r0]
   115cc:	mov	r0, r6
   115d0:	bl	10f88 <dcgettext@plt>
   115d4:	mov	r2, fp
   115d8:	mov	r1, #3
   115dc:	mov	r7, r0
   115e0:	mov	r0, r6
   115e4:	bl	1464c <close@plt+0x34a8>
   115e8:	b	11590 <close@plt+0x3ec>
   115ec:	bl	110cc <__errno_location@plt>
   115f0:	mov	r6, #0
   115f4:	mov	r2, #5
   115f8:	ldr	r1, [pc, #776]	; 11908 <close@plt+0x764>
   115fc:	ldr	r5, [r0]
   11600:	mov	r0, r6
   11604:	bl	10f88 <dcgettext@plt>
   11608:	mov	r2, fp
   1160c:	mov	r7, r0
   11610:	mov	r1, #3
   11614:	mov	r0, r6
   11618:	bl	1464c <close@plt+0x34a8>
   1161c:	mov	r3, r0
   11620:	mov	r2, r7
   11624:	mov	r1, r5
   11628:	mov	r0, r6
   1162c:	bl	11024 <error@plt>
   11630:	b	11500 <close@plt+0x35c>
   11634:	bl	110cc <__errno_location@plt>
   11638:	mov	r6, #0
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #708]	; 1190c <close@plt+0x768>
   11644:	ldr	r5, [r0]
   11648:	mov	r0, r6
   1164c:	bl	10f88 <dcgettext@plt>
   11650:	ldr	r1, [r4, #336]	; 0x150
   11654:	mov	r7, r0
   11658:	mov	r0, #4
   1165c:	bl	14570 <close@plt+0x33cc>
   11660:	b	1161c <close@plt+0x478>
   11664:	bl	110cc <__errno_location@plt>
   11668:	mov	r6, #0
   1166c:	mov	r2, #5
   11670:	ldr	r1, [pc, #664]	; 11910 <close@plt+0x76c>
   11674:	ldr	r5, [r0]
   11678:	mov	r0, r6
   1167c:	bl	10f88 <dcgettext@plt>
   11680:	ldr	r2, [sp, #28]
   11684:	mov	r7, r0
   11688:	b	11610 <close@plt+0x46c>
   1168c:	ldr	r0, [pc, #640]	; 11914 <close@plt+0x770>
   11690:	bl	1103c <getenv@plt>
   11694:	ldr	r6, [pc, #636]	; 11918 <close@plt+0x774>
   11698:	mov	r2, r5
   1169c:	ldr	r1, [pc, #632]	; 1191c <close@plt+0x778>
   116a0:	cmp	r0, #0
   116a4:	movne	r6, r0
   116a8:	mov	r0, r6
   116ac:	bl	124e4 <close@plt+0x1340>
   116b0:	str	r0, [r4, #336]	; 0x150
   116b4:	bl	14898 <close@plt+0x36f4>
   116b8:	subs	r7, r0, #0
   116bc:	blt	11784 <close@plt+0x5e0>
   116c0:	ldr	r1, [pc, #600]	; 11920 <close@plt+0x77c>
   116c4:	bl	10ed4 <fdopen@plt>
   116c8:	ldr	r9, [r4, #336]	; 0x150
   116cc:	cmp	r0, #0
   116d0:	mov	r5, r0
   116d4:	str	r0, [r4, #340]	; 0x154
   116d8:	beq	117d4 <close@plt+0x630>
   116dc:	mov	r0, r9
   116e0:	bl	10fa0 <unlink@plt>
   116e4:	b	1146c <close@plt+0x2c8>
   116e8:	mov	r2, r6
   116ec:	mov	r3, r7
   116f0:	mov	r1, fp
   116f4:	mov	r0, r8
   116f8:	bl	11af8 <close@plt+0x954>
   116fc:	mov	r6, r0
   11700:	b	11500 <close@plt+0x35c>
   11704:	cmp	r9, #0
   11708:	moveq	r0, #1
   1170c:	beq	11718 <close@plt+0x574>
   11710:	mov	r0, r8
   11714:	bl	110b4 <strlen@plt>
   11718:	str	r0, [r4, #20]
   1171c:	str	r0, [r4, #8]
   11720:	b	11310 <close@plt+0x16c>
   11724:	ldr	r6, [pc, #504]	; 11924 <close@plt+0x780>
   11728:	ldr	fp, [pc, #460]	; 118fc <close@plt+0x758>
   1172c:	b	113a0 <close@plt+0x1fc>
   11730:	mov	r3, #1
   11734:	str	r3, [sp, #20]
   11738:	b	11528 <close@plt+0x384>
   1173c:	add	r2, r8, #1
   11740:	ldr	r1, [r4, #4]
   11744:	add	r5, r5, r8
   11748:	bl	10f4c <memcpy@plt>
   1174c:	str	r5, [r4, #16]
   11750:	b	11380 <close@plt+0x1dc>
   11754:	mov	r0, #0
   11758:	bl	111a4 <close@plt>
   1175c:	cmp	r0, #0
   11760:	bge	11540 <close@plt+0x39c>
   11764:	bl	110cc <__errno_location@plt>
   11768:	mov	r3, #0
   1176c:	ldr	r2, [pc, #392]	; 118fc <close@plt+0x758>
   11770:	str	r3, [sp, #20]
   11774:	ldr	r1, [r0]
   11778:	mov	r0, r3
   1177c:	bl	11024 <error@plt>
   11780:	b	11540 <close@plt+0x39c>
   11784:	bl	110cc <__errno_location@plt>
   11788:	mov	r2, #5
   1178c:	ldr	r1, [pc, #404]	; 11928 <close@plt+0x784>
   11790:	ldr	r7, [r0]
   11794:	mov	r0, r5
   11798:	bl	10f88 <dcgettext@plt>
   1179c:	mov	r1, r6
   117a0:	mov	r9, r0
   117a4:	mov	r0, #4
   117a8:	bl	14570 <close@plt+0x33cc>
   117ac:	mov	r2, r9
   117b0:	mov	r1, r7
   117b4:	mov	r3, r0
   117b8:	mov	r0, r5
   117bc:	bl	11024 <error@plt>
   117c0:	ldr	r0, [r4, #336]	; 0x150
   117c4:	mov	r6, #0
   117c8:	bl	10f34 <free@plt>
   117cc:	str	r6, [r4, #336]	; 0x150
   117d0:	b	11500 <close@plt+0x35c>
   117d4:	bl	110cc <__errno_location@plt>
   117d8:	mov	r2, #5
   117dc:	ldr	r1, [pc, #328]	; 1192c <close@plt+0x788>
   117e0:	ldr	r6, [r0]
   117e4:	mov	r0, r5
   117e8:	bl	10f88 <dcgettext@plt>
   117ec:	mov	r1, r9
   117f0:	str	r0, [sp, #28]
   117f4:	mov	r0, #4
   117f8:	bl	14570 <close@plt+0x33cc>
   117fc:	ldr	r2, [sp, #28]
   11800:	mov	r1, r6
   11804:	mov	r3, r0
   11808:	mov	r0, r5
   1180c:	bl	11024 <error@plt>
   11810:	mov	r0, r7
   11814:	bl	111a4 <close@plt>
   11818:	ldr	r0, [r4, #336]	; 0x150
   1181c:	bl	10fa0 <unlink@plt>
   11820:	b	117c0 <close@plt+0x61c>
   11824:	mov	r0, #1
   11828:	bl	120b8 <close@plt+0xf14>
   1182c:	bl	110cc <__errno_location@plt>
   11830:	mov	r2, #5
   11834:	ldr	r1, [pc, #212]	; 11910 <close@plt+0x76c>
   11838:	mov	r6, r5
   1183c:	ldr	r9, [r0]
   11840:	mov	r0, r5
   11844:	bl	10f88 <dcgettext@plt>
   11848:	ldr	r2, [sp, #28]
   1184c:	mov	r1, #3
   11850:	mov	r7, r0
   11854:	mov	r0, r5
   11858:	bl	1464c <close@plt+0x34a8>
   1185c:	mov	r2, r7
   11860:	mov	r1, r9
   11864:	mov	r3, r0
   11868:	mov	r0, r5
   1186c:	bl	11024 <error@plt>
   11870:	b	11500 <close@plt+0x35c>
   11874:	str	r3, [r4, #12]
   11878:	bl	150a4 <close@plt+0x3f00>
   1187c:	bl	150a4 <close@plt+0x3f00>
   11880:	mov	r1, r5
   11884:	ldr	r2, [pc, #164]	; 11930 <close@plt+0x78c>
   11888:	mov	r0, #1
   1188c:	bl	11024 <error@plt>
   11890:	mov	r6, r0
   11894:	b	11500 <close@plt+0x35c>
   11898:	mov	r2, #5
   1189c:	ldr	r1, [pc, #144]	; 11934 <close@plt+0x790>
   118a0:	mov	r0, r9
   118a4:	bl	10f88 <dcgettext@plt>
   118a8:	mov	r1, r9
   118ac:	mov	r2, r0
   118b0:	mov	r0, #1
   118b4:	bl	11024 <error@plt>
   118b8:	andeq	r5, r1, r0, lsr ip
   118bc:	andeq	r5, r1, r4, lsr pc
   118c0:	andeq	r5, r1, ip, ror lr
   118c4:	andeq	r7, r2, r8, ror r1
   118c8:	andeq	r2, r1, ip, lsl #8
   118cc:	andeq	r5, r1, ip, lsr #22
   118d0:	andeq	r5, r1, r4, ror #30
   118d4:	andeq	r7, r2, r0, ror r1
   118d8:	andeq	r5, r1, r8, ror #24
   118dc:	andeq	r7, r2, ip, lsl #2
   118e0:	andeq	r7, r2, ip, ror #2
   118e4:	andeq	r5, r1, r8, asr #30
   118e8:	andeq	r5, r1, r8, asr pc
   118ec:	andeq	r5, r1, r4, ror #23
   118f0:	andeq	r5, r1, r8, ror lr
   118f4:	andeq	r7, r2, r4, asr #3
   118f8:	andeq	r7, r2, r0, ror #2
   118fc:	andeq	r5, r1, r8, lsr #30
   11900:	andeq	r5, r1, r8, lsl #31
   11904:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11908:	muleq	r1, ip, fp
   1190c:	andeq	r6, r1, ip
   11910:	andeq	r6, r1, ip, lsr #32
   11914:			; <UNDEFINED> instruction: 0x00015fb8
   11918:	andeq	r5, r1, ip, lsr #30
   1191c:	andeq	r6, r1, ip, lsr r0
   11920:	andeq	r5, r1, r8, ror #31
   11924:	andeq	r5, r1, r4, lsr #22
   11928:	andeq	r5, r1, r0, asr #31
   1192c:	andeq	r5, r1, ip, ror #31
   11930:	andeq	r6, r1, ip, ror #1
   11934:	andeq	r5, r1, ip, ror #30
   11938:	mov	fp, #0
   1193c:	mov	lr, #0
   11940:	pop	{r1}		; (ldr r1, [sp], #4)
   11944:	mov	r2, sp
   11948:	push	{r2}		; (str r2, [sp, #-4]!)
   1194c:	push	{r0}		; (str r0, [sp, #-4]!)
   11950:	ldr	ip, [pc, #16]	; 11968 <close@plt+0x7c4>
   11954:	push	{ip}		; (str ip, [sp, #-4]!)
   11958:	ldr	r0, [pc, #12]	; 1196c <close@plt+0x7c8>
   1195c:	ldr	r3, [pc, #12]	; 11970 <close@plt+0x7cc>
   11960:	bl	11060 <__libc_start_main@plt>
   11964:	bl	11198 <abort@plt>
   11968:	andeq	r5, r1, r4, asr #21
   1196c:			; <UNDEFINED> instruction: 0x000111b0
   11970:	andeq	r5, r1, r4, ror #20
   11974:	ldr	r3, [pc, #20]	; 11990 <close@plt+0x7ec>
   11978:	ldr	r2, [pc, #20]	; 11994 <close@plt+0x7f0>
   1197c:	add	r3, pc, r3
   11980:	ldr	r2, [r3, r2]
   11984:	cmp	r2, #0
   11988:	bxeq	lr
   1198c:	b	11078 <__gmon_start__@plt>
   11990:	andeq	r5, r1, ip, ror r6
   11994:	andeq	r0, r0, r0, lsl #2
   11998:	ldr	r0, [pc, #24]	; 119b8 <close@plt+0x814>
   1199c:	ldr	r3, [pc, #24]	; 119bc <close@plt+0x818>
   119a0:	cmp	r3, r0
   119a4:	bxeq	lr
   119a8:	ldr	r3, [pc, #16]	; 119c0 <close@plt+0x81c>
   119ac:	cmp	r3, #0
   119b0:	bxeq	lr
   119b4:	bx	r3
   119b8:	andeq	r7, r2, r4, asr r1
   119bc:	andeq	r7, r2, r4, asr r1
   119c0:	andeq	r0, r0, r0
   119c4:	ldr	r0, [pc, #36]	; 119f0 <close@plt+0x84c>
   119c8:	ldr	r1, [pc, #36]	; 119f4 <close@plt+0x850>
   119cc:	sub	r1, r1, r0
   119d0:	asr	r1, r1, #2
   119d4:	add	r1, r1, r1, lsr #31
   119d8:	asrs	r1, r1, #1
   119dc:	bxeq	lr
   119e0:	ldr	r3, [pc, #16]	; 119f8 <close@plt+0x854>
   119e4:	cmp	r3, #0
   119e8:	bxeq	lr
   119ec:	bx	r3
   119f0:	andeq	r7, r2, r4, asr r1
   119f4:	andeq	r7, r2, r4, asr r1
   119f8:	andeq	r0, r0, r0
   119fc:	push	{r4, lr}
   11a00:	ldr	r4, [pc, #24]	; 11a20 <close@plt+0x87c>
   11a04:	ldrb	r3, [r4]
   11a08:	cmp	r3, #0
   11a0c:	popne	{r4, pc}
   11a10:	bl	11998 <close@plt+0x7f4>
   11a14:	mov	r3, #1
   11a18:	strb	r3, [r4]
   11a1c:	pop	{r4, pc}
   11a20:	andeq	r7, r2, r4, ror r1
   11a24:	b	119c4 <close@plt+0x820>
   11a28:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a2c:	subs	r5, r0, #0
   11a30:	ldr	r7, [pc, #176]	; 11ae8 <close@plt+0x944>
   11a34:	sub	r6, r1, r5
   11a38:	ldr	r0, [r7]
   11a3c:	beq	11ab8 <close@plt+0x914>
   11a40:	rsb	r4, r0, #8192	; 0x2000
   11a44:	cmp	r6, r4
   11a48:	bcc	11ad8 <close@plt+0x934>
   11a4c:	ldr	r8, [pc, #152]	; 11aec <close@plt+0x948>
   11a50:	ldr	fp, [pc, #152]	; 11af0 <close@plt+0x94c>
   11a54:	ldr	r9, [pc, #152]	; 11af4 <close@plt+0x950>
   11a58:	mov	sl, r8
   11a5c:	mov	r2, r4
   11a60:	mov	r1, r5
   11a64:	add	r0, r8, r0
   11a68:	bl	10f4c <memcpy@plt>
   11a6c:	sub	r6, r6, r4
   11a70:	ldr	r3, [fp]
   11a74:	mov	r2, #8192	; 0x2000
   11a78:	mov	r1, #1
   11a7c:	mov	r0, sl
   11a80:	bl	10f70 <fwrite_unlocked@plt>
   11a84:	mov	r0, #0
   11a88:	cmp	r6, r9
   11a8c:	add	r5, r5, r4
   11a90:	str	r0, [r7]
   11a94:	mov	r4, #8192	; 0x2000
   11a98:	bhi	11a5c <close@plt+0x8b8>
   11a9c:	ldr	r0, [pc, #72]	; 11aec <close@plt+0x948>
   11aa0:	mov	r4, r6
   11aa4:	mov	r2, r6
   11aa8:	mov	r1, r5
   11aac:	bl	10f4c <memcpy@plt>
   11ab0:	str	r4, [r7]
   11ab4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ab8:	ldr	r3, [pc, #48]	; 11af0 <close@plt+0x94c>
   11abc:	mov	r2, r0
   11ac0:	mov	r1, #1
   11ac4:	ldr	r3, [r3]
   11ac8:	ldr	r0, [pc, #28]	; 11aec <close@plt+0x948>
   11acc:	bl	10f70 <fwrite_unlocked@plt>
   11ad0:	str	r5, [r7]
   11ad4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad8:	ldr	r3, [pc, #12]	; 11aec <close@plt+0x948>
   11adc:	add	r4, r0, r6
   11ae0:	add	r0, r0, r3
   11ae4:	b	11aa4 <close@plt+0x900>
   11ae8:	andeq	r7, r2, r8, ror r1
   11aec:	ldrdeq	r7, [r2], -r0
   11af0:	andeq	r7, r2, ip, ror #2
   11af4:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11afc:	sub	sp, sp, #44	; 0x2c
   11b00:	ldr	r5, [pc, #1428]	; 1209c <close@plt+0xef8>
   11b04:	mov	r8, r2
   11b08:	mov	r9, r3
   11b0c:	ldr	r7, [r5, #12]
   11b10:	mov	r4, #0
   11b14:	str	r0, [sp, #16]
   11b18:	str	r1, [sp, #24]
   11b1c:	mov	r0, r8
   11b20:	mov	r1, r3
   11b24:	mov	r2, r7
   11b28:	mov	r3, r4
   11b2c:	strd	r8, [sp, #8]
   11b30:	bl	15858 <close@plt+0x46b4>
   11b34:	ldr	r9, [r5, #4]
   11b38:	ldr	r3, [r5, #8]
   11b3c:	ldrb	r6, [r9], #1
   11b40:	str	r3, [sp, #36]	; 0x24
   11b44:	sub	r8, r3, #1
   11b48:	cmp	r2, r4
   11b4c:	bne	11fe0 <close@plt+0xe3c>
   11b50:	str	r6, [sp, #20]
   11b54:	mov	sl, r7
   11b58:	str	r9, [sp, #28]
   11b5c:	str	r8, [sp, #32]
   11b60:	ldr	fp, [sp, #16]
   11b64:	ldrd	r6, [sp, #8]
   11b68:	b	11b74 <close@plt+0x9d0>
   11b6c:	subs	r6, r6, r8
   11b70:	sbc	r7, r7, r9
   11b74:	mov	r2, sl
   11b78:	ldr	r1, [r5, #16]
   11b7c:	mov	r0, fp
   11b80:	bl	14830 <close@plt+0x368c>
   11b84:	subs	r4, r0, #0
   11b88:	bne	11c14 <close@plt+0xa70>
   11b8c:	orrs	r3, r6, r7
   11b90:	ldr	sl, [r5, #12]
   11b94:	beq	11f9c <close@plt+0xdf8>
   11b98:	rsbs	r2, sl, #0
   11b9c:	mov	r3, #1
   11ba0:	mov	r9, #0
   11ba4:	str	r3, [sp]
   11ba8:	mov	r0, fp
   11bac:	rsc	r3, r9, #0
   11bb0:	bl	10ff4 <lseek64@plt>
   11bb4:	mov	r8, sl
   11bb8:	cmp	r0, #0
   11bbc:	sbcs	r3, r1, #0
   11bc0:	bge	11b6c <close@plt+0x9c8>
   11bc4:	bl	110cc <__errno_location@plt>
   11bc8:	mov	r2, #5
   11bcc:	ldr	r1, [pc, #1228]	; 120a0 <close@plt+0xefc>
   11bd0:	ldr	r8, [r0]
   11bd4:	mov	r0, r4
   11bd8:	bl	10f88 <dcgettext@plt>
   11bdc:	ldr	r2, [sp, #24]
   11be0:	mov	r1, #3
   11be4:	mov	r9, r0
   11be8:	mov	r0, r4
   11bec:	bl	1464c <close@plt+0x34a8>
   11bf0:	mov	r2, r9
   11bf4:	mov	r1, r8
   11bf8:	mov	r9, #0
   11bfc:	mov	r3, r0
   11c00:	mov	r0, r4
   11c04:	bl	11024 <error@plt>
   11c08:	ldr	sl, [r5, #12]
   11c0c:	mov	r8, sl
   11c10:	b	11b6c <close@plt+0x9c8>
   11c14:	mov	fp, r7
   11c18:	ldr	r7, [r5, #12]
   11c1c:	mov	sl, r6
   11c20:	cmp	r4, r7
   11c24:	ldr	r9, [sp, #28]
   11c28:	ldr	r8, [sp, #32]
   11c2c:	strd	sl, [sp, #8]
   11c30:	ldr	r6, [sp, #20]
   11c34:	bne	12064 <close@plt+0xec0>
   11c38:	ldr	r4, [sp, #16]
   11c3c:	b	11c60 <close@plt+0xabc>
   11c40:	cmn	r0, #1
   11c44:	beq	11f50 <close@plt+0xdac>
   11c48:	ldr	r3, [r5, #12]
   11c4c:	adds	sl, sl, r0
   11c50:	adc	fp, fp, #0
   11c54:	cmp	r3, r0
   11c58:	mov	r7, r0
   11c5c:	bne	1205c <close@plt+0xeb8>
   11c60:	mov	r2, r7
   11c64:	ldr	r1, [r5, #16]
   11c68:	mov	r0, r4
   11c6c:	bl	14830 <close@plt+0x368c>
   11c70:	cmp	r0, #0
   11c74:	bne	11c40 <close@plt+0xa9c>
   11c78:	strd	sl, [sp, #8]
   11c7c:	cmn	r7, #1
   11c80:	beq	11f50 <close@plt+0xdac>
   11c84:	ldr	r3, [r5, #20]
   11c88:	ldr	sl, [r5, #16]
   11c8c:	cmp	r3, #0
   11c90:	add	r7, sl, r7
   11c94:	ldrne	r2, [sp, #36]	; 0x24
   11c98:	moveq	r4, r7
   11c9c:	rsbne	r4, r2, #1
   11ca0:	addne	r4, r7, r4
   11ca4:	mov	r2, #1
   11ca8:	str	r2, [sp, #20]
   11cac:	cmp	r3, #0
   11cb0:	bne	11e18 <close@plt+0xc74>
   11cb4:	sub	r2, r4, sl
   11cb8:	rsb	r3, r2, #1
   11cbc:	cmp	r3, #1
   11cc0:	bgt	1206c <close@plt+0xec8>
   11cc4:	beq	11eac <close@plt+0xd08>
   11cc8:	ldr	r1, [pc, #980]	; 120a4 <close@plt+0xf00>
   11ccc:	str	r3, [sp]
   11cd0:	str	r1, [sp, #4]
   11cd4:	sub	r3, r2, #1
   11cd8:	mov	r1, sl
   11cdc:	ldr	r0, [pc, #964]	; 120a8 <close@plt+0xf04>
   11ce0:	bl	110c0 <re_search@plt>
   11ce4:	cmn	r0, #1
   11ce8:	beq	11ea8 <close@plt+0xd04>
   11cec:	cmn	r0, #2
   11cf0:	beq	1208c <close@plt+0xee8>
   11cf4:	ldrd	r2, [r5, #60]	; 0x3c
   11cf8:	ldr	sl, [r5, #16]
   11cfc:	ldr	fp, [r2]
   11d00:	ldr	r3, [r3]
   11d04:	sub	r3, r3, fp
   11d08:	add	fp, sl, fp
   11d0c:	str	r3, [r5, #8]
   11d10:	cmp	fp, sl
   11d14:	bcs	11e58 <close@plt+0xcb4>
   11d18:	ldrd	r2, [sp, #8]
   11d1c:	orrs	r3, r2, r3
   11d20:	beq	11fc8 <close@plt+0xe24>
   11d24:	ldr	r2, [r5, #12]
   11d28:	sub	r7, r7, sl
   11d2c:	cmp	r2, r7
   11d30:	bcs	11d74 <close@plt+0xbd0>
   11d34:	ldr	r4, [r5, #20]
   11d38:	ldr	r3, [r5, #68]	; 0x44
   11d3c:	add	r1, r4, #2
   11d40:	add	r1, r1, r2, lsl #2
   11d44:	cmp	r4, #0
   11d48:	moveq	r4, #1
   11d4c:	lsl	r2, r2, #1
   11d50:	cmp	r1, r3
   11d54:	str	r2, [r5, #12]
   11d58:	str	r1, [r5, #68]	; 0x44
   11d5c:	bcc	12098 <close@plt+0xef4>
   11d60:	sub	r0, sl, r4
   11d64:	bl	14eb8 <close@plt+0x3d14>
   11d68:	ldr	r2, [r5, #12]
   11d6c:	add	r0, r0, r4
   11d70:	str	r0, [r5, #16]
   11d74:	ldrd	r0, [sp, #8]
   11d78:	mov	r3, #0
   11d7c:	cmp	r0, r2
   11d80:	sbcs	ip, r1, r3
   11d84:	blt	11ebc <close@plt+0xd18>
   11d88:	subs	r1, r0, r2
   11d8c:	str	r1, [sp, #8]
   11d90:	ldr	r1, [sp, #12]
   11d94:	sbc	r3, r1, r3
   11d98:	str	r3, [sp, #12]
   11d9c:	mov	r4, #0
   11da0:	ldrd	r2, [sp, #8]
   11da4:	str	r4, [sp]
   11da8:	ldr	r0, [sp, #16]
   11dac:	bl	10ff4 <lseek64@plt>
   11db0:	cmp	r0, #0
   11db4:	sbcs	r3, r1, #0
   11db8:	blt	11eec <close@plt+0xd48>
   11dbc:	ldr	sl, [r5, #16]
   11dc0:	ldr	fp, [r5, #12]
   11dc4:	mov	r2, r7
   11dc8:	add	r4, sl, fp
   11dcc:	mov	r1, sl
   11dd0:	mov	r0, r4
   11dd4:	bl	10f28 <memmove@plt>
   11dd8:	ldr	r3, [r5, #20]
   11ddc:	add	r7, fp, r7
   11de0:	cmp	r3, #0
   11de4:	add	r7, sl, r7
   11de8:	mov	r2, fp
   11dec:	mov	r1, sl
   11df0:	ldr	r0, [sp, #16]
   11df4:	moveq	r4, r7
   11df8:	bl	14830 <close@plt+0x368c>
   11dfc:	ldr	r3, [r5, #12]
   11e00:	cmp	r0, r3
   11e04:	bne	11f50 <close@plt+0xdac>
   11e08:	ldr	r3, [r5, #20]
   11e0c:	ldr	sl, [r5, #16]
   11e10:	cmp	r3, #0
   11e14:	beq	11cb4 <close@plt+0xb10>
   11e18:	mov	r0, r4
   11e1c:	b	11e24 <close@plt+0xc80>
   11e20:	mov	r0, fp
   11e24:	ldrb	r3, [r0, #-1]
   11e28:	sub	fp, r0, #1
   11e2c:	cmp	r3, r6
   11e30:	bne	11e20 <close@plt+0xc7c>
   11e34:	cmp	r8, #0
   11e38:	beq	11d10 <close@plt+0xb6c>
   11e3c:	mov	r2, r8
   11e40:	mov	r1, r9
   11e44:	bl	1118c <strncmp@plt>
   11e48:	cmp	r0, #0
   11e4c:	bne	11e20 <close@plt+0xc7c>
   11e50:	cmp	fp, sl
   11e54:	bcc	11d18 <close@plt+0xb74>
   11e58:	ldrb	r3, [r5, #72]	; 0x48
   11e5c:	cmp	r3, #0
   11e60:	beq	11ed4 <close@plt+0xd30>
   11e64:	ldr	r3, [sp, #20]
   11e68:	ldr	r4, [r5, #8]
   11e6c:	eor	r3, r3, #1
   11e70:	add	r4, fp, r4
   11e74:	cmp	r7, r4
   11e78:	orrne	r3, r3, #1
   11e7c:	cmp	r3, #0
   11e80:	str	r3, [sp, #20]
   11e84:	moveq	r7, r4
   11e88:	bne	11f30 <close@plt+0xd8c>
   11e8c:	ldr	r3, [r5, #20]
   11e90:	cmp	r3, #0
   11e94:	beq	11eb4 <close@plt+0xd10>
   11e98:	ldr	r4, [r5, #8]
   11e9c:	rsb	r4, r4, #1
   11ea0:	add	r4, fp, r4
   11ea4:	b	11cac <close@plt+0xb08>
   11ea8:	ldr	sl, [r5, #16]
   11eac:	sub	fp, sl, #1
   11eb0:	b	11d10 <close@plt+0xb6c>
   11eb4:	mov	r4, fp
   11eb8:	b	11cb4 <close@plt+0xb10>
   11ebc:	ldr	r3, [sp, #8]
   11ec0:	mov	r2, #0
   11ec4:	str	r3, [r5, #12]
   11ec8:	mov	r3, #0
   11ecc:	strd	r2, [sp, #8]
   11ed0:	b	11d9c <close@plt+0xbf8>
   11ed4:	mov	r1, r7
   11ed8:	mov	r0, fp
   11edc:	bl	11a28 <close@plt+0x884>
   11ee0:	mov	r7, fp
   11ee4:	ldr	sl, [r5, #16]
   11ee8:	b	11e8c <close@plt+0xce8>
   11eec:	bl	110cc <__errno_location@plt>
   11ef0:	mov	r2, #5
   11ef4:	ldr	r1, [pc, #420]	; 120a0 <close@plt+0xefc>
   11ef8:	ldr	sl, [r0]
   11efc:	mov	r0, r4
   11f00:	bl	10f88 <dcgettext@plt>
   11f04:	ldr	r2, [sp, #24]
   11f08:	mov	r1, #3
   11f0c:	mov	fp, r0
   11f10:	mov	r0, r4
   11f14:	bl	1464c <close@plt+0x34a8>
   11f18:	mov	r2, fp
   11f1c:	mov	r1, sl
   11f20:	mov	r3, r0
   11f24:	mov	r0, r4
   11f28:	bl	11024 <error@plt>
   11f2c:	b	11dbc <close@plt+0xc18>
   11f30:	mov	r1, r7
   11f34:	mov	r0, r4
   11f38:	bl	11a28 <close@plt+0x884>
   11f3c:	mov	r3, #0
   11f40:	mov	r7, r4
   11f44:	ldr	sl, [r5, #16]
   11f48:	str	r3, [sp, #20]
   11f4c:	b	11e8c <close@plt+0xce8>
   11f50:	bl	110cc <__errno_location@plt>
   11f54:	mov	r2, #5
   11f58:	ldr	r1, [pc, #332]	; 120ac <close@plt+0xf08>
   11f5c:	ldr	r4, [r0]
   11f60:	mov	r0, #0
   11f64:	bl	10f88 <dcgettext@plt>
   11f68:	ldr	r2, [sp, #24]
   11f6c:	mov	r1, #3
   11f70:	mov	r5, r0
   11f74:	mov	r0, #0
   11f78:	bl	1464c <close@plt+0x34a8>
   11f7c:	mov	r2, r5
   11f80:	mov	r1, r4
   11f84:	mov	r3, r0
   11f88:	mov	r0, #0
   11f8c:	bl	11024 <error@plt>
   11f90:	mov	r0, #0
   11f94:	add	sp, sp, #44	; 0x2c
   11f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f9c:	cmp	sl, #0
   11fa0:	strd	r6, [sp, #8]
   11fa4:	ldr	r9, [sp, #28]
   11fa8:	mov	r7, sl
   11fac:	ldr	r8, [sp, #32]
   11fb0:	ldr	r6, [sp, #20]
   11fb4:	movne	r7, r4
   11fb8:	bne	11c84 <close@plt+0xae0>
   11fbc:	ldr	r4, [sp, #16]
   11fc0:	ldrd	sl, [sp, #8]
   11fc4:	b	11c60 <close@plt+0xabc>
   11fc8:	mov	r0, sl
   11fcc:	mov	r1, r7
   11fd0:	bl	11a28 <close@plt+0x884>
   11fd4:	mov	r0, #1
   11fd8:	add	sp, sp, #44	; 0x2c
   11fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fe0:	ldr	r3, [sp, #8]
   11fe4:	str	r4, [sp]
   11fe8:	subs	r3, r3, r2
   11fec:	ldr	r2, [sp, #12]
   11ff0:	str	r3, [sp, #8]
   11ff4:	sbc	r3, r2, r4
   11ff8:	str	r3, [sp, #12]
   11ffc:	ldrd	r2, [sp, #8]
   12000:	ldr	r0, [sp, #16]
   12004:	bl	10ff4 <lseek64@plt>
   12008:	cmp	r0, #0
   1200c:	sbcs	r3, r1, #0
   12010:	bge	11b50 <close@plt+0x9ac>
   12014:	bl	110cc <__errno_location@plt>
   12018:	mov	r2, #5
   1201c:	ldr	r1, [pc, #124]	; 120a0 <close@plt+0xefc>
   12020:	ldr	sl, [r0]
   12024:	mov	r0, r4
   12028:	bl	10f88 <dcgettext@plt>
   1202c:	ldr	r2, [sp, #24]
   12030:	mov	r1, #3
   12034:	mov	r7, r0
   12038:	mov	r0, r4
   1203c:	bl	1464c <close@plt+0x34a8>
   12040:	mov	r2, r7
   12044:	mov	r1, sl
   12048:	mov	r3, r0
   1204c:	mov	r0, r4
   12050:	bl	11024 <error@plt>
   12054:	ldr	r7, [r5, #12]
   12058:	b	11b50 <close@plt+0x9ac>
   1205c:	strd	sl, [sp, #8]
   12060:	b	11c84 <close@plt+0xae0>
   12064:	mov	r7, r4
   12068:	b	11c7c <close@plt+0xad8>
   1206c:	ldr	r1, [pc, #60]	; 120b0 <close@plt+0xf0c>
   12070:	mov	r2, #5
   12074:	mov	r0, #0
   12078:	bl	10f88 <dcgettext@plt>
   1207c:	mov	r1, #0
   12080:	mov	r2, r0
   12084:	mov	r0, #1
   12088:	bl	11024 <error@plt>
   1208c:	mov	r2, #5
   12090:	ldr	r1, [pc, #28]	; 120b4 <close@plt+0xf10>
   12094:	b	12074 <close@plt+0xed0>
   12098:	bl	150a4 <close@plt+0x3f00>
   1209c:	andeq	r7, r2, r8, ror r1
   120a0:	andeq	r5, r1, ip, lsl #23
   120a4:			; <UNDEFINED> instruction: 0x000271b0
   120a8:	muleq	r2, r0, r1
   120ac:	muleq	r1, ip, fp
   120b0:	andeq	r5, r1, ip, lsr #23
   120b4:	andeq	r5, r1, r0, asr #23
   120b8:	ldr	r3, [pc, #720]	; 12390 <close@plt+0x11ec>
   120bc:	push	{r7, lr}
   120c0:	sub	sp, sp, #64	; 0x40
   120c4:	ldr	r3, [r3]
   120c8:	subs	r4, r0, #0
   120cc:	str	r3, [sp, #60]	; 0x3c
   120d0:	beq	1210c <close@plt+0xf68>
   120d4:	ldr	r3, [pc, #696]	; 12394 <close@plt+0x11f0>
   120d8:	mov	r2, #5
   120dc:	ldr	r1, [pc, #692]	; 12398 <close@plt+0x11f4>
   120e0:	mov	r0, #0
   120e4:	ldr	r5, [r3]
   120e8:	bl	10f88 <dcgettext@plt>
   120ec:	ldr	r3, [pc, #680]	; 1239c <close@plt+0x11f8>
   120f0:	mov	r1, #1
   120f4:	ldr	r3, [r3]
   120f8:	mov	r2, r0
   120fc:	mov	r0, r5
   12100:	bl	11108 <__fprintf_chk@plt>
   12104:	mov	r0, r4
   12108:	bl	110a8 <exit@plt>
   1210c:	mov	r2, #5
   12110:	ldr	r1, [pc, #648]	; 123a0 <close@plt+0x11fc>
   12114:	bl	10f88 <dcgettext@plt>
   12118:	ldr	r3, [pc, #636]	; 1239c <close@plt+0x11f8>
   1211c:	ldr	r5, [pc, #640]	; 123a4 <close@plt+0x1200>
   12120:	ldr	r2, [r3]
   12124:	mov	r1, r0
   12128:	mov	r0, #1
   1212c:	bl	110f0 <__printf_chk@plt>
   12130:	mov	r2, #5
   12134:	ldr	r1, [pc, #620]	; 123a8 <close@plt+0x1204>
   12138:	mov	r0, r4
   1213c:	bl	10f88 <dcgettext@plt>
   12140:	ldr	r1, [r5]
   12144:	bl	10eec <fputs_unlocked@plt>
   12148:	mov	r2, #5
   1214c:	ldr	r1, [pc, #600]	; 123ac <close@plt+0x1208>
   12150:	mov	r0, r4
   12154:	bl	10f88 <dcgettext@plt>
   12158:	ldr	r1, [r5]
   1215c:	bl	10eec <fputs_unlocked@plt>
   12160:	mov	r2, #5
   12164:	ldr	r1, [pc, #580]	; 123b0 <close@plt+0x120c>
   12168:	mov	r0, r4
   1216c:	bl	10f88 <dcgettext@plt>
   12170:	ldr	r1, [r5]
   12174:	bl	10eec <fputs_unlocked@plt>
   12178:	mov	r2, #5
   1217c:	ldr	r1, [pc, #560]	; 123b4 <close@plt+0x1210>
   12180:	mov	r0, r4
   12184:	bl	10f88 <dcgettext@plt>
   12188:	ldr	r1, [r5]
   1218c:	bl	10eec <fputs_unlocked@plt>
   12190:	mov	r2, #5
   12194:	ldr	r1, [pc, #540]	; 123b8 <close@plt+0x1214>
   12198:	mov	r0, r4
   1219c:	bl	10f88 <dcgettext@plt>
   121a0:	ldr	r1, [r5]
   121a4:	bl	10eec <fputs_unlocked@plt>
   121a8:	mov	r2, #5
   121ac:	ldr	r1, [pc, #520]	; 123bc <close@plt+0x1218>
   121b0:	mov	r0, r4
   121b4:	bl	10f88 <dcgettext@plt>
   121b8:	ldr	r1, [r5]
   121bc:	bl	10eec <fputs_unlocked@plt>
   121c0:	ldr	lr, [pc, #504]	; 123c0 <close@plt+0x121c>
   121c4:	add	ip, sp, #4
   121c8:	ldm	lr!, {r0, r1, r2, r3}
   121cc:	stmia	ip!, {r0, r1, r2, r3}
   121d0:	ldm	lr!, {r0, r1, r2, r3}
   121d4:	ldr	r6, [sp, #4]
   121d8:	stmia	ip!, {r0, r1, r2, r3}
   121dc:	cmp	r6, #0
   121e0:	ldm	lr!, {r0, r1, r2, r3}
   121e4:	addeq	r5, sp, #4
   121e8:	stmia	ip!, {r0, r1, r2, r3}
   121ec:	ldm	lr, {r0, r1}
   121f0:	stm	ip, {r0, r1}
   121f4:	beq	12224 <close@plt+0x1080>
   121f8:	ldr	r7, [pc, #452]	; 123c4 <close@plt+0x1220>
   121fc:	add	r5, sp, #4
   12200:	b	12210 <close@plt+0x106c>
   12204:	ldr	r6, [r5, #8]!
   12208:	cmp	r6, #0
   1220c:	beq	12224 <close@plt+0x1080>
   12210:	mov	r1, r6
   12214:	mov	r0, r7
   12218:	bl	10f04 <strcmp@plt>
   1221c:	cmp	r0, #0
   12220:	bne	12204 <close@plt+0x1060>
   12224:	ldr	r5, [r5, #4]
   12228:	mov	r2, #5
   1222c:	cmp	r5, #0
   12230:	ldr	r1, [pc, #400]	; 123c8 <close@plt+0x1224>
   12234:	beq	122dc <close@plt+0x1138>
   12238:	mov	r0, #0
   1223c:	bl	10f88 <dcgettext@plt>
   12240:	ldr	r3, [pc, #388]	; 123cc <close@plt+0x1228>
   12244:	ldr	r2, [pc, #388]	; 123d0 <close@plt+0x122c>
   12248:	mov	r1, r0
   1224c:	mov	r0, #1
   12250:	bl	110f0 <__printf_chk@plt>
   12254:	mov	r1, #0
   12258:	mov	r0, #5
   1225c:	bl	11138 <setlocale@plt>
   12260:	cmp	r0, #0
   12264:	ldreq	r6, [pc, #344]	; 123c4 <close@plt+0x1220>
   12268:	beq	12284 <close@plt+0x10e0>
   1226c:	mov	r2, #3
   12270:	ldr	r1, [pc, #348]	; 123d4 <close@plt+0x1230>
   12274:	bl	1118c <strncmp@plt>
   12278:	ldr	r6, [pc, #324]	; 123c4 <close@plt+0x1220>
   1227c:	cmp	r0, #0
   12280:	bne	1236c <close@plt+0x11c8>
   12284:	mov	r2, #5
   12288:	ldr	r1, [pc, #328]	; 123d8 <close@plt+0x1234>
   1228c:	mov	r0, #0
   12290:	bl	10f88 <dcgettext@plt>
   12294:	ldr	r3, [pc, #296]	; 123c4 <close@plt+0x1220>
   12298:	ldr	r2, [pc, #300]	; 123cc <close@plt+0x1228>
   1229c:	mov	r1, r0
   122a0:	mov	r0, #1
   122a4:	bl	110f0 <__printf_chk@plt>
   122a8:	mov	r2, #5
   122ac:	ldr	r1, [pc, #296]	; 123dc <close@plt+0x1238>
   122b0:	mov	r0, #0
   122b4:	bl	10f88 <dcgettext@plt>
   122b8:	ldr	r2, [pc, #288]	; 123e0 <close@plt+0x123c>
   122bc:	cmp	r5, r6
   122c0:	ldr	r3, [pc, #284]	; 123e4 <close@plt+0x1240>
   122c4:	movne	r3, r2
   122c8:	mov	r1, r0
   122cc:	mov	r2, r5
   122d0:	mov	r0, #1
   122d4:	bl	110f0 <__printf_chk@plt>
   122d8:	b	12104 <close@plt+0xf60>
   122dc:	mov	r0, r5
   122e0:	bl	10f88 <dcgettext@plt>
   122e4:	ldr	r3, [pc, #224]	; 123cc <close@plt+0x1228>
   122e8:	ldr	r2, [pc, #224]	; 123d0 <close@plt+0x122c>
   122ec:	mov	r1, r0
   122f0:	mov	r0, #1
   122f4:	bl	110f0 <__printf_chk@plt>
   122f8:	mov	r1, r5
   122fc:	mov	r0, #5
   12300:	bl	11138 <setlocale@plt>
   12304:	cmp	r0, #0
   12308:	beq	12320 <close@plt+0x117c>
   1230c:	mov	r2, #3
   12310:	ldr	r1, [pc, #188]	; 123d4 <close@plt+0x1230>
   12314:	bl	1118c <strncmp@plt>
   12318:	cmp	r0, #0
   1231c:	bne	12364 <close@plt+0x11c0>
   12320:	mov	r2, #5
   12324:	ldr	r1, [pc, #172]	; 123d8 <close@plt+0x1234>
   12328:	mov	r0, #0
   1232c:	bl	10f88 <dcgettext@plt>
   12330:	ldr	r3, [pc, #140]	; 123c4 <close@plt+0x1220>
   12334:	ldr	r2, [pc, #144]	; 123cc <close@plt+0x1228>
   12338:	mov	r5, r3
   1233c:	mov	r1, r0
   12340:	mov	r0, #1
   12344:	bl	110f0 <__printf_chk@plt>
   12348:	ldr	r1, [pc, #140]	; 123dc <close@plt+0x1238>
   1234c:	mov	r2, #5
   12350:	mov	r0, #0
   12354:	bl	10f88 <dcgettext@plt>
   12358:	ldr	r3, [pc, #132]	; 123e4 <close@plt+0x1240>
   1235c:	mov	r1, r0
   12360:	b	122cc <close@plt+0x1128>
   12364:	ldr	r6, [pc, #88]	; 123c4 <close@plt+0x1220>
   12368:	mov	r5, r6
   1236c:	mov	r2, #5
   12370:	ldr	r1, [pc, #112]	; 123e8 <close@plt+0x1244>
   12374:	mov	r0, #0
   12378:	bl	10f88 <dcgettext@plt>
   1237c:	ldr	r2, [pc, #64]	; 123c4 <close@plt+0x1220>
   12380:	mov	r1, r0
   12384:	mov	r0, #1
   12388:	bl	110f0 <__printf_chk@plt>
   1238c:	b	12284 <close@plt+0x10e0>
   12390:	andeq	r6, r2, r8, lsl #30
   12394:	andeq	r7, r2, r8, ror #2
   12398:	andeq	r5, r1, r8, ror #23
   1239c:	ldrdeq	r9, [r2], -r8
   123a0:	andeq	r5, r1, r0, lsl ip
   123a4:	andeq	r7, r2, ip, ror #2
   123a8:	andeq	r5, r1, r4, lsr ip
   123ac:	andeq	r5, r1, ip, ror #24
   123b0:	andeq	r5, r1, r4, lsr #25
   123b4:	strdeq	r5, [r1], -r0
   123b8:	ldrdeq	r5, [r1], -r0
   123bc:	andeq	r5, r1, r0, lsl #28
   123c0:	andeq	r5, r1, ip, ror #21
   123c4:	andeq	r5, r1, r4, ror #23
   123c8:	andeq	r5, r1, r8, lsr lr
   123cc:	andeq	r5, r1, r0, asr lr
   123d0:	andeq	r5, r1, r8, ror lr
   123d4:	andeq	r5, r1, r8, lsl #29
   123d8:	ldrdeq	r5, [r1], -r4
   123dc:	strdeq	r5, [r1], -r4
   123e0:	andeq	r5, r1, r0, lsr ip
   123e4:	andeq	r6, r1, r0, asr r0
   123e8:	andeq	r5, r1, ip, lsl #29
   123ec:	ldr	r3, [pc, #4]	; 123f8 <close@plt+0x1254>
   123f0:	str	r0, [r3]
   123f4:	bx	lr
   123f8:	ldrdeq	r9, [r2], -r0
   123fc:	ldr	r3, [pc, #4]	; 12408 <close@plt+0x1264>
   12400:	strb	r0, [r3, #4]
   12404:	bx	lr
   12408:	ldrdeq	r9, [r2], -r0
   1240c:	ldr	r3, [pc, #180]	; 124c8 <close@plt+0x1324>
   12410:	push	{r4, r5, r6, lr}
   12414:	sub	sp, sp, #8
   12418:	ldr	r0, [r3]
   1241c:	bl	15204 <close@plt+0x4060>
   12420:	cmp	r0, #0
   12424:	beq	1244c <close@plt+0x12a8>
   12428:	bl	110cc <__errno_location@plt>
   1242c:	ldr	r5, [pc, #152]	; 124cc <close@plt+0x1328>
   12430:	ldrb	r3, [r5, #4]
   12434:	cmp	r3, #0
   12438:	mov	r4, r0
   1243c:	beq	12468 <close@plt+0x12c4>
   12440:	ldr	r3, [r0]
   12444:	cmp	r3, #32
   12448:	bne	12468 <close@plt+0x12c4>
   1244c:	ldr	r3, [pc, #124]	; 124d0 <close@plt+0x132c>
   12450:	ldr	r0, [r3]
   12454:	bl	15204 <close@plt+0x4060>
   12458:	cmp	r0, #0
   1245c:	bne	124a8 <close@plt+0x1304>
   12460:	add	sp, sp, #8
   12464:	pop	{r4, r5, r6, pc}
   12468:	mov	r2, #5
   1246c:	ldr	r1, [pc, #96]	; 124d4 <close@plt+0x1330>
   12470:	mov	r0, #0
   12474:	bl	10f88 <dcgettext@plt>
   12478:	mov	r6, r0
   1247c:	ldr	r0, [r5]
   12480:	cmp	r0, #0
   12484:	beq	124b4 <close@plt+0x1310>
   12488:	ldr	r4, [r4]
   1248c:	bl	14638 <close@plt+0x3494>
   12490:	mov	r1, r4
   12494:	str	r6, [sp]
   12498:	ldr	r2, [pc, #56]	; 124d8 <close@plt+0x1334>
   1249c:	mov	r3, r0
   124a0:	mov	r0, #0
   124a4:	bl	11024 <error@plt>
   124a8:	ldr	r3, [pc, #44]	; 124dc <close@plt+0x1338>
   124ac:	ldr	r0, [r3]
   124b0:	bl	10f40 <_exit@plt>
   124b4:	mov	r3, r6
   124b8:	ldr	r1, [r4]
   124bc:	ldr	r2, [pc, #28]	; 124e0 <close@plt+0x133c>
   124c0:	bl	11024 <error@plt>
   124c4:	b	124a8 <close@plt+0x1304>
   124c8:	andeq	r7, r2, ip, ror #2
   124cc:	ldrdeq	r9, [r2], -r0
   124d0:	andeq	r7, r2, r8, ror #2
   124d4:	andeq	r6, r1, r0, lsr r0
   124d8:	andeq	r6, r1, r8, ror #1
   124dc:	andeq	r7, r2, r0, lsl r1
   124e0:	andeq	r6, r1, ip, ror #1
   124e4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e8:	mov	r6, r1
   124ec:	mov	r9, r2
   124f0:	mov	r7, r0
   124f4:	bl	15278 <close@plt+0x40d4>
   124f8:	mov	r4, r0
   124fc:	bl	152c8 <close@plt+0x4124>
   12500:	sub	r4, r4, r7
   12504:	mov	r5, r0
   12508:	mov	r0, r6
   1250c:	bl	110b4 <strlen@plt>
   12510:	cmp	r5, #0
   12514:	add	r4, r4, r5
   12518:	mov	r8, r0
   1251c:	beq	1259c <close@plt+0x13f8>
   12520:	add	r3, r7, r4
   12524:	ldrb	r3, [r3, #-1]
   12528:	cmp	r3, #47	; 0x2f
   1252c:	beq	12590 <close@plt+0x13ec>
   12530:	ldrb	r3, [r6]
   12534:	cmp	r3, #47	; 0x2f
   12538:	beq	12590 <close@plt+0x13ec>
   1253c:	mov	r5, #1
   12540:	mov	sl, #47	; 0x2f
   12544:	add	r0, r8, #1
   12548:	add	r0, r0, r4
   1254c:	add	r0, r0, r5
   12550:	bl	11054 <malloc@plt>
   12554:	subs	fp, r0, #0
   12558:	beq	12588 <close@plt+0x13e4>
   1255c:	mov	r2, r4
   12560:	mov	r1, r7
   12564:	bl	11084 <mempcpy@plt>
   12568:	cmp	r9, #0
   1256c:	mov	r2, r8
   12570:	mov	r1, r6
   12574:	strb	sl, [r0], r5
   12578:	strne	r0, [r9]
   1257c:	bl	11084 <mempcpy@plt>
   12580:	mov	r3, #0
   12584:	strb	r3, [r0]
   12588:	mov	r0, fp
   1258c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12590:	mov	r5, #0
   12594:	mov	sl, r5
   12598:	b	12544 <close@plt+0x13a0>
   1259c:	ldrb	r3, [r6]
   125a0:	cmp	r3, #47	; 0x2f
   125a4:	moveq	r5, #1
   125a8:	movne	sl, #0
   125ac:	moveq	sl, #46	; 0x2e
   125b0:	b	12544 <close@plt+0x13a0>
   125b4:	push	{r4, r5, r6, lr}
   125b8:	subs	r4, r0, #0
   125bc:	beq	12630 <close@plt+0x148c>
   125c0:	mov	r1, #47	; 0x2f
   125c4:	bl	11144 <strrchr@plt>
   125c8:	subs	r5, r0, #0
   125cc:	beq	1261c <close@plt+0x1478>
   125d0:	add	r6, r5, #1
   125d4:	sub	r3, r6, r4
   125d8:	cmp	r3, #6
   125dc:	ble	1261c <close@plt+0x1478>
   125e0:	mov	r2, #7
   125e4:	ldr	r1, [pc, #96]	; 1264c <close@plt+0x14a8>
   125e8:	sub	r0, r5, #6
   125ec:	bl	1118c <strncmp@plt>
   125f0:	cmp	r0, #0
   125f4:	bne	1261c <close@plt+0x1478>
   125f8:	mov	r2, #3
   125fc:	ldr	r1, [pc, #76]	; 12650 <close@plt+0x14ac>
   12600:	mov	r0, r6
   12604:	bl	1118c <strncmp@plt>
   12608:	cmp	r0, #0
   1260c:	movne	r4, r6
   12610:	ldreq	r3, [pc, #60]	; 12654 <close@plt+0x14b0>
   12614:	addeq	r4, r5, #4
   12618:	streq	r4, [r3]
   1261c:	ldr	r2, [pc, #52]	; 12658 <close@plt+0x14b4>
   12620:	ldr	r3, [pc, #52]	; 1265c <close@plt+0x14b8>
   12624:	str	r4, [r2]
   12628:	str	r4, [r3]
   1262c:	pop	{r4, r5, r6, pc}
   12630:	ldr	r3, [pc, #40]	; 12660 <close@plt+0x14bc>
   12634:	mov	r2, #55	; 0x37
   12638:	mov	r1, #1
   1263c:	ldr	r3, [r3]
   12640:	ldr	r0, [pc, #28]	; 12664 <close@plt+0x14c0>
   12644:	bl	10fe8 <fwrite@plt>
   12648:	bl	11198 <abort@plt>
   1264c:	andeq	r6, r1, r8, lsr #2
   12650:	andeq	r6, r1, r0, lsr r1
   12654:	andeq	r7, r2, r8, asr r1
   12658:	ldrdeq	r9, [r2], -r8
   1265c:	andeq	r7, r2, ip, asr r1
   12660:	andeq	r7, r2, r8, ror #2
   12664:	strdeq	r6, [r1], -r0
   12668:	push	{r4, lr}
   1266c:	mov	r2, #48	; 0x30
   12670:	mov	r4, r1
   12674:	mov	r1, #0
   12678:	bl	110e4 <memset@plt>
   1267c:	cmp	r4, #10
   12680:	beq	1268c <close@plt+0x14e8>
   12684:	str	r4, [r0]
   12688:	pop	{r4, pc}
   1268c:	bl	11198 <abort@plt>
   12690:	push	{r4, r5, r6, lr}
   12694:	mov	r2, #5
   12698:	mov	r5, r0
   1269c:	mov	r6, r1
   126a0:	mov	r1, r0
   126a4:	mov	r0, #0
   126a8:	bl	10f88 <dcgettext@plt>
   126ac:	cmp	r5, r0
   126b0:	mov	r4, r0
   126b4:	beq	126c0 <close@plt+0x151c>
   126b8:	mov	r0, r4
   126bc:	pop	{r4, r5, r6, pc}
   126c0:	bl	153c0 <close@plt+0x421c>
   126c4:	ldrb	r3, [r0]
   126c8:	bic	r3, r3, #32
   126cc:	cmp	r3, #85	; 0x55
   126d0:	bne	12730 <close@plt+0x158c>
   126d4:	ldrb	r3, [r0, #1]
   126d8:	bic	r3, r3, #32
   126dc:	cmp	r3, #84	; 0x54
   126e0:	bne	127a8 <close@plt+0x1604>
   126e4:	ldrb	r3, [r0, #2]
   126e8:	bic	r3, r3, #32
   126ec:	cmp	r3, #70	; 0x46
   126f0:	bne	127a8 <close@plt+0x1604>
   126f4:	ldrb	r3, [r0, #3]
   126f8:	cmp	r3, #45	; 0x2d
   126fc:	bne	127a8 <close@plt+0x1604>
   12700:	ldrb	r3, [r0, #4]
   12704:	cmp	r3, #56	; 0x38
   12708:	bne	127a8 <close@plt+0x1604>
   1270c:	ldrb	r3, [r0, #5]
   12710:	cmp	r3, #0
   12714:	bne	127a8 <close@plt+0x1604>
   12718:	ldrb	r2, [r4]
   1271c:	ldr	r3, [pc, #156]	; 127c0 <close@plt+0x161c>
   12720:	ldr	r4, [pc, #156]	; 127c4 <close@plt+0x1620>
   12724:	cmp	r2, #96	; 0x60
   12728:	movne	r4, r3
   1272c:	b	126b8 <close@plt+0x1514>
   12730:	cmp	r3, #71	; 0x47
   12734:	bne	127a8 <close@plt+0x1604>
   12738:	ldrb	r3, [r0, #1]
   1273c:	bic	r3, r3, #32
   12740:	cmp	r3, #66	; 0x42
   12744:	bne	127a8 <close@plt+0x1604>
   12748:	ldrb	r3, [r0, #2]
   1274c:	cmp	r3, #49	; 0x31
   12750:	bne	127a8 <close@plt+0x1604>
   12754:	ldrb	r3, [r0, #3]
   12758:	cmp	r3, #56	; 0x38
   1275c:	bne	127a8 <close@plt+0x1604>
   12760:	ldrb	r3, [r0, #4]
   12764:	cmp	r3, #48	; 0x30
   12768:	bne	127a8 <close@plt+0x1604>
   1276c:	ldrb	r3, [r0, #5]
   12770:	cmp	r3, #51	; 0x33
   12774:	bne	127a8 <close@plt+0x1604>
   12778:	ldrb	r3, [r0, #6]
   1277c:	cmp	r3, #48	; 0x30
   12780:	bne	127a8 <close@plt+0x1604>
   12784:	ldrb	r3, [r0, #7]
   12788:	cmp	r3, #0
   1278c:	bne	127a8 <close@plt+0x1604>
   12790:	ldrb	r2, [r4]
   12794:	ldr	r3, [pc, #44]	; 127c8 <close@plt+0x1624>
   12798:	ldr	r4, [pc, #44]	; 127cc <close@plt+0x1628>
   1279c:	cmp	r2, #96	; 0x60
   127a0:	movne	r4, r3
   127a4:	b	126b8 <close@plt+0x1514>
   127a8:	ldr	r3, [pc, #32]	; 127d0 <close@plt+0x162c>
   127ac:	ldr	r4, [pc, #32]	; 127d4 <close@plt+0x1630>
   127b0:	cmp	r6, #9
   127b4:	movne	r4, r3
   127b8:	mov	r0, r4
   127bc:	pop	{r4, r5, r6, pc}
   127c0:	andeq	r6, r1, ip, lsl #3
   127c4:	muleq	r1, r8, r1
   127c8:	muleq	r1, r0, r1
   127cc:	muleq	r1, r4, r1
   127d0:	muleq	r1, ip, r1
   127d4:	andeq	r6, r1, r8, lsl #3
   127d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127dc:	sub	sp, sp, #124	; 0x7c
   127e0:	ldr	ip, [pc, #3576]	; 135e0 <close@plt+0x243c>
   127e4:	str	r3, [sp, #24]
   127e8:	ldr	r3, [sp, #168]	; 0xa8
   127ec:	ldr	ip, [ip]
   127f0:	str	r3, [sp, #56]	; 0x38
   127f4:	ldr	r3, [sp, #172]	; 0xac
   127f8:	ldr	r8, [sp, #160]	; 0xa0
   127fc:	str	r3, [sp, #80]	; 0x50
   12800:	ldr	r3, [sp, #176]	; 0xb0
   12804:	mov	fp, r0
   12808:	str	r3, [sp, #76]	; 0x4c
   1280c:	mov	sl, r1
   12810:	str	r2, [sp, #36]	; 0x24
   12814:	str	ip, [sp, #116]	; 0x74
   12818:	bl	11000 <__ctype_get_mb_cur_max@plt>
   1281c:	ldr	r3, [sp, #164]	; 0xa4
   12820:	ands	r4, r3, #2
   12824:	movne	r3, #1
   12828:	moveq	r3, #0
   1282c:	str	r3, [sp, #32]
   12830:	str	r0, [sp, #64]	; 0x40
   12834:	cmp	r8, #10
   12838:	ldrls	pc, [pc, r8, lsl #2]
   1283c:	b	13fec <close@plt+0x2e48>
   12840:	andeq	r2, r1, r4, lsr ip
   12844:	andeq	r2, r1, ip, asr #25
   12848:	andeq	r3, r1, ip, asr #5
   1284c:	andeq	r2, r1, ip, ror #25
   12850:	andeq	r2, r1, r0, lsr #23
   12854:	andeq	r2, r1, r8, ror #23
   12858:	andeq	r2, r1, r4, ror #24
   1285c:	muleq	r1, ip, ip
   12860:	andeq	r2, r1, ip, ror #16
   12864:	andeq	r2, r1, ip, ror #16
   12868:	andeq	r2, r1, ip, ror #16
   1286c:	cmp	r8, #10
   12870:	beq	12894 <close@plt+0x16f0>
   12874:	mov	r1, r8
   12878:	ldr	r0, [pc, #3428]	; 135e4 <close@plt+0x2440>
   1287c:	bl	12690 <close@plt+0x14ec>
   12880:	mov	r1, r8
   12884:	str	r0, [sp, #80]	; 0x50
   12888:	ldr	r0, [pc, #3420]	; 135ec <close@plt+0x2448>
   1288c:	bl	12690 <close@plt+0x14ec>
   12890:	str	r0, [sp, #76]	; 0x4c
   12894:	cmp	r4, #0
   12898:	movne	r4, #0
   1289c:	beq	13cac <close@plt+0x2b08>
   128a0:	ldr	r7, [sp, #76]	; 0x4c
   128a4:	mov	r5, #0
   128a8:	mov	r6, #1
   128ac:	mov	r0, r7
   128b0:	str	r6, [sp, #40]	; 0x28
   128b4:	str	r5, [sp, #68]	; 0x44
   128b8:	bl	110b4 <strlen@plt>
   128bc:	str	r6, [sp, #28]
   128c0:	str	r5, [sp, #44]	; 0x2c
   128c4:	str	r5, [sp, #72]	; 0x48
   128c8:	str	r7, [sp, #60]	; 0x3c
   128cc:	str	r0, [sp, #52]	; 0x34
   128d0:	str	r8, [sp, #160]	; 0xa0
   128d4:	mov	r8, fp
   128d8:	ldr	fp, [sp, #160]	; 0xa0
   128dc:	mov	r9, #0
   128e0:	ldr	r3, [sp, #24]
   128e4:	cmn	r3, #1
   128e8:	beq	12e50 <close@plt+0x1cac>
   128ec:	ldr	r3, [sp, #24]
   128f0:	subs	r6, r3, r9
   128f4:	movne	r6, #1
   128f8:	cmp	r6, #0
   128fc:	beq	12e68 <close@plt+0x1cc4>
   12900:	ldr	r7, [sp, #28]
   12904:	ldr	r0, [sp, #36]	; 0x24
   12908:	cmp	fp, #2
   1290c:	moveq	r7, #0
   12910:	andne	r7, r7, #1
   12914:	add	r3, r0, r9
   12918:	cmp	r7, #0
   1291c:	str	r3, [sp, #48]	; 0x30
   12920:	beq	1330c <close@plt+0x2168>
   12924:	ldr	r2, [sp, #52]	; 0x34
   12928:	cmp	r2, #0
   1292c:	beq	135f0 <close@plt+0x244c>
   12930:	ldr	r1, [sp, #24]
   12934:	cmp	r2, #1
   12938:	mov	r3, r2
   1293c:	movls	r3, #0
   12940:	movhi	r3, #1
   12944:	cmn	r1, #1
   12948:	movne	r3, #0
   1294c:	cmp	r3, #0
   12950:	add	r5, r9, r2
   12954:	beq	12960 <close@plt+0x17bc>
   12958:	bl	110b4 <strlen@plt>
   1295c:	str	r0, [sp, #24]
   12960:	ldr	r3, [sp, #24]
   12964:	cmp	r5, r3
   12968:	bhi	135f0 <close@plt+0x244c>
   1296c:	ldr	r2, [sp, #52]	; 0x34
   12970:	ldr	r1, [sp, #60]	; 0x3c
   12974:	ldr	r0, [sp, #48]	; 0x30
   12978:	bl	10f7c <memcmp@plt>
   1297c:	cmp	r0, #0
   12980:	bne	135f0 <close@plt+0x244c>
   12984:	ldr	r3, [sp, #32]
   12988:	cmp	r3, #0
   1298c:	bne	13eac <close@plt+0x2d08>
   12990:	ldr	r3, [sp, #48]	; 0x30
   12994:	ldrb	r5, [r3]
   12998:	cmp	r5, #126	; 0x7e
   1299c:	ldrls	pc, [pc, r5, lsl #2]
   129a0:	b	13270 <close@plt+0x20cc>
   129a4:	andeq	r3, r1, ip, asr r1
   129a8:	andeq	r3, r1, r0, ror r2
   129ac:	andeq	r3, r1, r0, ror r2
   129b0:	andeq	r3, r1, r0, ror r2
   129b4:	andeq	r3, r1, r0, ror r2
   129b8:	andeq	r3, r1, r0, ror r2
   129bc:	andeq	r3, r1, r0, ror r2
   129c0:	andeq	r3, r1, r8, lsr #4
   129c4:	andeq	r3, r1, r8, lsl r2
   129c8:	andeq	r3, r1, r8, lsl r1
   129cc:	andeq	r3, r1, r0, ror #1
   129d0:	andeq	r3, r1, r8, lsr r1
   129d4:	andeq	r3, r1, r0, lsr #2
   129d8:	andeq	r3, r1, r0, asr r0
   129dc:	andeq	r3, r1, r0, ror r2
   129e0:	andeq	r3, r1, r0, ror r2
   129e4:	andeq	r3, r1, r0, ror r2
   129e8:	andeq	r3, r1, r0, ror r2
   129ec:	andeq	r3, r1, r0, ror r2
   129f0:	andeq	r3, r1, r0, ror r2
   129f4:	andeq	r3, r1, r0, ror r2
   129f8:	andeq	r3, r1, r0, ror r2
   129fc:	andeq	r3, r1, r0, ror r2
   12a00:	andeq	r3, r1, r0, ror r2
   12a04:	andeq	r3, r1, r0, ror r2
   12a08:	andeq	r3, r1, r0, ror r2
   12a0c:	andeq	r3, r1, r0, ror r2
   12a10:	andeq	r3, r1, r0, ror r2
   12a14:	andeq	r3, r1, r0, ror r2
   12a18:	andeq	r3, r1, r0, ror r2
   12a1c:	andeq	r3, r1, r0, ror r2
   12a20:	andeq	r3, r1, r0, ror r2
   12a24:	andeq	r3, r1, r0, lsr r2
   12a28:	andeq	r3, r1, r4, asr #2
   12a2c:	andeq	r3, r1, r4, asr #2
   12a30:	andeq	r3, r1, r8, asr #4
   12a34:	andeq	r3, r1, r4, asr #2
   12a38:	andeq	r3, r1, r4, ror #4
   12a3c:	andeq	r3, r1, r4, asr #2
   12a40:	andeq	r2, r1, r4, lsl #31
   12a44:	andeq	r3, r1, r4, asr #2
   12a48:	andeq	r3, r1, r4, asr #2
   12a4c:	andeq	r3, r1, r4, asr #2
   12a50:	andeq	r3, r1, r4, ror #4
   12a54:	andeq	r3, r1, r4, ror #4
   12a58:	andeq	r3, r1, r4, ror #4
   12a5c:	andeq	r3, r1, r4, ror #4
   12a60:	andeq	r3, r1, r4, ror #4
   12a64:	andeq	r3, r1, r4, ror #4
   12a68:	andeq	r3, r1, r4, ror #4
   12a6c:	andeq	r3, r1, r4, ror #4
   12a70:	andeq	r3, r1, r4, ror #4
   12a74:	andeq	r3, r1, r4, ror #4
   12a78:	andeq	r3, r1, r4, ror #4
   12a7c:	andeq	r3, r1, r4, ror #4
   12a80:	andeq	r3, r1, r4, ror #4
   12a84:	andeq	r3, r1, r4, ror #4
   12a88:	andeq	r3, r1, r4, ror #4
   12a8c:	andeq	r3, r1, r4, ror #4
   12a90:	andeq	r3, r1, r4, asr #2
   12a94:	andeq	r3, r1, r4, asr #2
   12a98:	andeq	r3, r1, r4, asr #2
   12a9c:	andeq	r3, r1, r4, asr #2
   12aa0:	andeq	r2, r1, r8, asr pc
   12aa4:	andeq	r3, r1, r0, ror r2
   12aa8:	andeq	r3, r1, r4, ror #4
   12aac:	andeq	r3, r1, r4, ror #4
   12ab0:	andeq	r3, r1, r4, ror #4
   12ab4:	andeq	r3, r1, r4, ror #4
   12ab8:	andeq	r3, r1, r4, ror #4
   12abc:	andeq	r3, r1, r4, ror #4
   12ac0:	andeq	r3, r1, r4, ror #4
   12ac4:	andeq	r3, r1, r4, ror #4
   12ac8:	andeq	r3, r1, r4, ror #4
   12acc:	andeq	r3, r1, r4, ror #4
   12ad0:	andeq	r3, r1, r4, ror #4
   12ad4:	andeq	r3, r1, r4, ror #4
   12ad8:	andeq	r3, r1, r4, ror #4
   12adc:	andeq	r3, r1, r4, ror #4
   12ae0:	andeq	r3, r1, r4, ror #4
   12ae4:	andeq	r3, r1, r4, ror #4
   12ae8:	andeq	r3, r1, r4, ror #4
   12aec:	andeq	r3, r1, r4, ror #4
   12af0:	andeq	r3, r1, r4, ror #4
   12af4:	andeq	r3, r1, r4, ror #4
   12af8:	andeq	r3, r1, r4, ror #4
   12afc:	andeq	r3, r1, r4, ror #4
   12b00:	andeq	r3, r1, r4, ror #4
   12b04:	andeq	r3, r1, r4, ror #4
   12b08:	andeq	r3, r1, r4, ror #4
   12b0c:	andeq	r3, r1, r4, ror #4
   12b10:	andeq	r3, r1, r4, asr #2
   12b14:	andeq	r2, r1, r0, lsl pc
   12b18:	andeq	r3, r1, r4, ror #4
   12b1c:	andeq	r3, r1, r4, asr #2
   12b20:	andeq	r3, r1, r4, ror #4
   12b24:	andeq	r3, r1, r4, asr #2
   12b28:	andeq	r3, r1, r4, ror #4
   12b2c:	andeq	r3, r1, r4, ror #4
   12b30:	andeq	r3, r1, r4, ror #4
   12b34:	andeq	r3, r1, r4, ror #4
   12b38:	andeq	r3, r1, r4, ror #4
   12b3c:	andeq	r3, r1, r4, ror #4
   12b40:	andeq	r3, r1, r4, ror #4
   12b44:	andeq	r3, r1, r4, ror #4
   12b48:	andeq	r3, r1, r4, ror #4
   12b4c:	andeq	r3, r1, r4, ror #4
   12b50:	andeq	r3, r1, r4, ror #4
   12b54:	andeq	r3, r1, r4, ror #4
   12b58:	andeq	r3, r1, r4, ror #4
   12b5c:	andeq	r3, r1, r4, ror #4
   12b60:	andeq	r3, r1, r4, ror #4
   12b64:	andeq	r3, r1, r4, ror #4
   12b68:	andeq	r3, r1, r4, ror #4
   12b6c:	andeq	r3, r1, r4, ror #4
   12b70:	andeq	r3, r1, r4, ror #4
   12b74:	andeq	r3, r1, r4, ror #4
   12b78:	andeq	r3, r1, r4, ror #4
   12b7c:	andeq	r3, r1, r4, ror #4
   12b80:	andeq	r3, r1, r4, ror #4
   12b84:	andeq	r3, r1, r4, ror #4
   12b88:	andeq	r3, r1, r4, ror #4
   12b8c:	andeq	r3, r1, r4, ror #4
   12b90:	andeq	r2, r1, r8, lsr #26
   12b94:	andeq	r3, r1, r4, asr #2
   12b98:	andeq	r2, r1, r8, lsr #26
   12b9c:	andeq	r3, r1, r8, asr #4
   12ba0:	cmp	r4, #0
   12ba4:	moveq	r3, #1
   12ba8:	streq	r3, [sp, #28]
   12bac:	beq	132d8 <close@plt+0x2134>
   12bb0:	mov	r3, #0
   12bb4:	mov	r4, r3
   12bb8:	mov	r2, #1
   12bbc:	str	r2, [sp, #40]	; 0x28
   12bc0:	str	r3, [sp, #68]	; 0x44
   12bc4:	str	r2, [sp, #32]
   12bc8:	str	r2, [sp, #52]	; 0x34
   12bcc:	ldr	r3, [pc, #2584]	; 135ec <close@plt+0x2448>
   12bd0:	str	r4, [sp, #44]	; 0x2c
   12bd4:	str	r4, [sp, #72]	; 0x48
   12bd8:	str	r4, [sp, #28]
   12bdc:	str	r3, [sp, #60]	; 0x3c
   12be0:	mov	r8, #2
   12be4:	b	128d0 <close@plt+0x172c>
   12be8:	cmp	r4, #0
   12bec:	bne	13e78 <close@plt+0x2cd4>
   12bf0:	cmp	sl, #0
   12bf4:	beq	13c38 <close@plt+0x2a94>
   12bf8:	mov	r3, #34	; 0x22
   12bfc:	strb	r3, [fp]
   12c00:	ldr	r3, [pc, #2528]	; 135e8 <close@plt+0x2444>
   12c04:	mov	r1, r4
   12c08:	mov	r2, #1
   12c0c:	str	r4, [sp, #68]	; 0x44
   12c10:	str	r2, [sp, #40]	; 0x28
   12c14:	mov	r4, r2
   12c18:	str	r1, [sp, #44]	; 0x2c
   12c1c:	str	r1, [sp, #72]	; 0x48
   12c20:	str	r1, [sp, #32]
   12c24:	str	r2, [sp, #28]
   12c28:	str	r2, [sp, #52]	; 0x34
   12c2c:	str	r3, [sp, #60]	; 0x3c
   12c30:	b	128d0 <close@plt+0x172c>
   12c34:	mov	r3, #0
   12c38:	str	r3, [sp, #68]	; 0x44
   12c3c:	str	r3, [sp, #44]	; 0x2c
   12c40:	str	r3, [sp, #32]
   12c44:	str	r3, [sp, #28]
   12c48:	str	r3, [sp, #60]	; 0x3c
   12c4c:	mov	r3, #1
   12c50:	str	r8, [sp, #72]	; 0x48
   12c54:	str	r8, [sp, #52]	; 0x34
   12c58:	mov	r4, r8
   12c5c:	str	r3, [sp, #40]	; 0x28
   12c60:	b	128d0 <close@plt+0x172c>
   12c64:	mov	r3, #1
   12c68:	str	r3, [sp, #40]	; 0x28
   12c6c:	str	r3, [sp, #32]
   12c70:	str	r3, [sp, #28]
   12c74:	str	r3, [sp, #52]	; 0x34
   12c78:	ldr	r3, [pc, #2408]	; 135e8 <close@plt+0x2444>
   12c7c:	mov	r2, #0
   12c80:	mov	r4, r2
   12c84:	str	r2, [sp, #68]	; 0x44
   12c88:	str	r2, [sp, #44]	; 0x2c
   12c8c:	str	r2, [sp, #72]	; 0x48
   12c90:	str	r3, [sp, #60]	; 0x3c
   12c94:	mov	r8, #5
   12c98:	b	128d0 <close@plt+0x172c>
   12c9c:	mov	r3, #0
   12ca0:	mov	r2, #1
   12ca4:	str	r2, [sp, #40]	; 0x28
   12ca8:	mov	r4, r3
   12cac:	str	r3, [sp, #68]	; 0x44
   12cb0:	str	r2, [sp, #28]
   12cb4:	str	r3, [sp, #44]	; 0x2c
   12cb8:	str	r3, [sp, #72]	; 0x48
   12cbc:	str	r3, [sp, #32]
   12cc0:	str	r3, [sp, #52]	; 0x34
   12cc4:	str	r3, [sp, #60]	; 0x3c
   12cc8:	b	128d0 <close@plt+0x172c>
   12ccc:	mov	r2, #1
   12cd0:	mov	r3, #0
   12cd4:	str	r2, [sp, #40]	; 0x28
   12cd8:	mov	r4, r3
   12cdc:	str	r3, [sp, #68]	; 0x44
   12ce0:	str	r8, [sp, #52]	; 0x34
   12ce4:	str	r2, [sp, #32]
   12ce8:	b	12bcc <close@plt+0x1a28>
   12cec:	mov	r3, #1
   12cf0:	str	r3, [sp, #40]	; 0x28
   12cf4:	str	r3, [sp, #32]
   12cf8:	str	r3, [sp, #28]
   12cfc:	str	r3, [sp, #52]	; 0x34
   12d00:	ldr	r3, [pc, #2276]	; 135ec <close@plt+0x2448>
   12d04:	mov	r2, #0
   12d08:	mov	r4, r2
   12d0c:	str	r2, [sp, #68]	; 0x44
   12d10:	str	r2, [sp, #44]	; 0x2c
   12d14:	str	r2, [sp, #72]	; 0x48
   12d18:	str	r3, [sp, #60]	; 0x3c
   12d1c:	mov	r8, #2
   12d20:	b	128d0 <close@plt+0x172c>
   12d24:	mov	r7, #0
   12d28:	ldr	r3, [sp, #24]
   12d2c:	cmn	r3, #1
   12d30:	beq	1386c <close@plt+0x26c8>
   12d34:	ldr	r3, [sp, #24]
   12d38:	subs	r3, r3, #1
   12d3c:	movne	r3, #1
   12d40:	cmp	r3, #0
   12d44:	sub	r2, fp, #2
   12d48:	clz	r2, r2
   12d4c:	lsr	r2, r2, #5
   12d50:	bne	12f4c <close@plt+0x1da8>
   12d54:	cmp	r9, #0
   12d58:	bne	12f4c <close@plt+0x1da8>
   12d5c:	ldr	r3, [sp, #32]
   12d60:	tst	r3, r2
   12d64:	bne	1306c <close@plt+0x1ec8>
   12d68:	ldr	r3, [sp, #28]
   12d6c:	eor	r3, r3, #1
   12d70:	orr	r3, r2, r3
   12d74:	ldr	r2, [sp, #32]
   12d78:	eor	r3, r3, #1
   12d7c:	orrs	r3, r2, r3
   12d80:	beq	12db0 <close@plt+0x1c0c>
   12d84:	mov	r3, #0
   12d88:	ldr	r1, [sp, #56]	; 0x38
   12d8c:	cmp	r1, #0
   12d90:	beq	12db0 <close@plt+0x1c0c>
   12d94:	lsr	r2, r5, #5
   12d98:	and	r0, r5, #31
   12d9c:	uxtb	r2, r2
   12da0:	ldr	r1, [r1, r2, lsl #2]
   12da4:	lsr	r2, r1, r0
   12da8:	tst	r2, #1
   12dac:	bne	12db8 <close@plt+0x1c14>
   12db0:	cmp	r7, #0
   12db4:	beq	13008 <close@plt+0x1e64>
   12db8:	sub	r2, fp, #2
   12dbc:	clz	r2, r2
   12dc0:	lsr	r2, r2, #5
   12dc4:	ldr	r3, [sp, #32]
   12dc8:	cmp	r3, #0
   12dcc:	bne	130f8 <close@plt+0x1f54>
   12dd0:	ldr	r3, [sp, #44]	; 0x2c
   12dd4:	eor	r3, r3, #1
   12dd8:	ands	r3, r2, r3
   12ddc:	beq	12e14 <close@plt+0x1c70>
   12de0:	cmp	sl, r4
   12de4:	movhi	r2, #39	; 0x27
   12de8:	strbhi	r2, [r8, r4]
   12dec:	add	r2, r4, #1
   12df0:	cmp	r2, sl
   12df4:	movcc	r1, #36	; 0x24
   12df8:	strbcc	r1, [r8, r2]
   12dfc:	add	r2, r4, #2
   12e00:	cmp	r2, sl
   12e04:	add	r4, r4, #3
   12e08:	movcc	r1, #39	; 0x27
   12e0c:	strbcc	r1, [r8, r2]
   12e10:	str	r3, [sp, #44]	; 0x2c
   12e14:	cmp	r4, sl
   12e18:	movcc	r3, #92	; 0x5c
   12e1c:	strbcc	r3, [r8, r4]
   12e20:	add	r9, r9, #1
   12e24:	add	r4, r4, #1
   12e28:	cmp	r4, sl
   12e2c:	ldr	r3, [sp, #40]	; 0x28
   12e30:	strbcc	r5, [r8, r4]
   12e34:	cmp	r6, #0
   12e38:	moveq	r3, #0
   12e3c:	str	r3, [sp, #40]	; 0x28
   12e40:	ldr	r3, [sp, #24]
   12e44:	add	r4, r4, #1
   12e48:	cmn	r3, #1
   12e4c:	bne	128ec <close@plt+0x1748>
   12e50:	ldr	r3, [sp, #36]	; 0x24
   12e54:	ldrb	r6, [r3, r9]
   12e58:	adds	r6, r6, #0
   12e5c:	movne	r6, #1
   12e60:	cmp	r6, #0
   12e64:	bne	12900 <close@plt+0x175c>
   12e68:	str	fp, [sp, #160]	; 0xa0
   12e6c:	mov	fp, r8
   12e70:	ldr	r8, [sp, #160]	; 0xa0
   12e74:	ldr	r1, [sp, #32]
   12e78:	cmp	r4, #0
   12e7c:	sub	r2, r8, #2
   12e80:	clz	r2, r2
   12e84:	lsr	r2, r2, #5
   12e88:	andeq	r3, r2, r1
   12e8c:	movne	r3, #0
   12e90:	cmp	r3, #0
   12e94:	bne	13f80 <close@plt+0x2ddc>
   12e98:	eor	r3, r1, #1
   12e9c:	ands	r2, r2, r3
   12ea0:	beq	13ebc <close@plt+0x2d18>
   12ea4:	ldr	r3, [sp, #68]	; 0x44
   12ea8:	cmp	r3, #0
   12eac:	beq	13ec0 <close@plt+0x2d1c>
   12eb0:	ldr	r3, [sp, #40]	; 0x28
   12eb4:	cmp	r3, #0
   12eb8:	bne	13f3c <close@plt+0x2d98>
   12ebc:	ldr	r3, [sp, #72]	; 0x48
   12ec0:	adds	r3, r3, #0
   12ec4:	movne	r3, #1
   12ec8:	cmp	sl, #0
   12ecc:	movne	r3, #0
   12ed0:	cmp	r3, #0
   12ed4:	ldreq	r2, [sp, #68]	; 0x44
   12ed8:	beq	13ec0 <close@plt+0x2d1c>
   12edc:	ldr	sl, [sp, #72]	; 0x48
   12ee0:	str	r3, [sp, #68]	; 0x44
   12ee4:	ldr	r3, [pc, #1792]	; 135ec <close@plt+0x2448>
   12ee8:	mov	r2, #39	; 0x27
   12eec:	mov	r4, #1
   12ef0:	str	r3, [sp, #60]	; 0x3c
   12ef4:	mov	r3, #0
   12ef8:	strb	r2, [fp]
   12efc:	str	r4, [sp, #52]	; 0x34
   12f00:	mov	r8, #2
   12f04:	str	r3, [sp, #32]
   12f08:	b	128d0 <close@plt+0x172c>
   12f0c:	mov	r7, #0
   12f10:	cmp	fp, #2
   12f14:	beq	1384c <close@plt+0x26a8>
   12f18:	ldr	r3, [sp, #52]	; 0x34
   12f1c:	ldr	r2, [sp, #28]
   12f20:	ldr	r1, [sp, #32]
   12f24:	cmp	r3, #0
   12f28:	andne	r2, r2, r1
   12f2c:	moveq	r2, #0
   12f30:	cmp	r2, #0
   12f34:	moveq	r5, #92	; 0x5c
   12f38:	moveq	r3, r5
   12f3c:	bne	13858 <close@plt+0x26b4>
   12f40:	ldr	r1, [sp, #28]
   12f44:	cmp	r1, #0
   12f48:	bne	13fc8 <close@plt+0x2e24>
   12f4c:	mov	r6, #0
   12f50:	b	12d68 <close@plt+0x1bc4>
   12f54:	mov	r7, #0
   12f58:	cmp	fp, #2
   12f5c:	beq	138bc <close@plt+0x2718>
   12f60:	cmp	fp, #5
   12f64:	beq	13880 <close@plt+0x26dc>
   12f68:	sub	r2, fp, #2
   12f6c:	mov	r6, #0
   12f70:	clz	r2, r2
   12f74:	mov	r5, #63	; 0x3f
   12f78:	lsr	r2, r2, #5
   12f7c:	b	12d68 <close@plt+0x1bc4>
   12f80:	mov	r7, #0
   12f84:	cmp	fp, #2
   12f88:	strne	r6, [sp, #68]	; 0x44
   12f8c:	movne	r2, #0
   12f90:	movne	r5, #39	; 0x27
   12f94:	bne	12d68 <close@plt+0x1bc4>
   12f98:	ldr	r3, [sp, #32]
   12f9c:	cmp	r3, #0
   12fa0:	bne	13c9c <close@plt+0x2af8>
   12fa4:	cmp	sl, #0
   12fa8:	ldr	r3, [sp, #72]	; 0x48
   12fac:	clz	r3, r3
   12fb0:	lsr	r3, r3, #5
   12fb4:	moveq	r3, #0
   12fb8:	cmp	r3, #0
   12fbc:	bne	13bd0 <close@plt+0x2a2c>
   12fc0:	cmp	sl, r4
   12fc4:	movhi	r3, #39	; 0x27
   12fc8:	strbhi	r3, [r8, r4]
   12fcc:	add	r3, r4, #1
   12fd0:	cmp	sl, r3
   12fd4:	movhi	r2, #92	; 0x5c
   12fd8:	strbhi	r2, [r8, r3]
   12fdc:	add	r3, r4, #2
   12fe0:	cmp	sl, r3
   12fe4:	movhi	r2, #39	; 0x27
   12fe8:	strbhi	r2, [r8, r3]
   12fec:	mov	r3, #0
   12ff0:	cmp	r7, #0
   12ff4:	add	r4, r4, #3
   12ff8:	str	r3, [sp, #44]	; 0x2c
   12ffc:	str	r6, [sp, #68]	; 0x44
   13000:	mov	r5, #39	; 0x27
   13004:	bne	12db8 <close@plt+0x1c14>
   13008:	ldr	r2, [sp, #44]	; 0x2c
   1300c:	eor	r3, r3, #1
   13010:	and	r3, r3, r2
   13014:	add	r9, r9, #1
   13018:	uxtb	r3, r3
   1301c:	cmp	r3, #0
   13020:	beq	12e28 <close@plt+0x1c84>
   13024:	cmp	sl, r4
   13028:	movhi	r3, #39	; 0x27
   1302c:	strbhi	r3, [r8, r4]
   13030:	add	r3, r4, #1
   13034:	cmp	sl, r3
   13038:	movhi	r2, #39	; 0x27
   1303c:	strbhi	r2, [r8, r3]
   13040:	mov	r3, #0
   13044:	add	r4, r4, #2
   13048:	str	r3, [sp, #44]	; 0x2c
   1304c:	b	12e28 <close@plt+0x1c84>
   13050:	mov	r3, #114	; 0x72
   13054:	ldr	r1, [sp, #32]
   13058:	sub	r2, fp, #2
   1305c:	clz	r2, r2
   13060:	lsr	r2, r2, #5
   13064:	tst	r2, r1
   13068:	beq	12f40 <close@plt+0x1d9c>
   1306c:	mov	fp, r8
   13070:	mov	r8, #2
   13074:	ldr	r3, [sp, #28]
   13078:	cmp	r3, #0
   1307c:	movne	r8, #4
   13080:	ldr	r3, [sp, #164]	; 0xa4
   13084:	mov	ip, #0
   13088:	bic	r3, r3, #2
   1308c:	str	r3, [sp, #4]
   13090:	ldr	r3, [sp, #76]	; 0x4c
   13094:	str	r8, [sp]
   13098:	str	r3, [sp, #16]
   1309c:	ldr	r3, [sp, #80]	; 0x50
   130a0:	ldr	r2, [sp, #36]	; 0x24
   130a4:	str	r3, [sp, #12]
   130a8:	mov	r1, sl
   130ac:	ldr	r3, [sp, #24]
   130b0:	mov	r0, fp
   130b4:	str	ip, [sp, #8]
   130b8:	bl	127d8 <close@plt+0x1634>
   130bc:	mov	r4, r0
   130c0:	ldr	r3, [pc, #1304]	; 135e0 <close@plt+0x243c>
   130c4:	ldr	r2, [sp, #116]	; 0x74
   130c8:	mov	r0, r4
   130cc:	ldr	r3, [r3]
   130d0:	cmp	r2, r3
   130d4:	bne	13fc4 <close@plt+0x2e20>
   130d8:	add	sp, sp, #124	; 0x7c
   130dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130e0:	mov	r5, #110	; 0x6e
   130e4:	ldr	r3, [sp, #32]
   130e8:	mov	r2, #0
   130ec:	cmp	r3, #0
   130f0:	mov	r6, r2
   130f4:	beq	12dd0 <close@plt+0x1c2c>
   130f8:	str	fp, [sp, #160]	; 0xa0
   130fc:	mov	fp, r8
   13100:	ldr	r8, [sp, #160]	; 0xa0
   13104:	mov	r3, r2
   13108:	ldr	r2, [sp, #28]
   1310c:	and	r2, r2, r3
   13110:	str	r2, [sp, #28]
   13114:	b	13074 <close@plt+0x1ed0>
   13118:	mov	r5, #116	; 0x74
   1311c:	b	130e4 <close@plt+0x1f40>
   13120:	mov	r5, #102	; 0x66
   13124:	ldr	r3, [sp, #32]
   13128:	cmp	r3, #0
   1312c:	bne	13cd8 <close@plt+0x2b34>
   13130:	mov	r6, #0
   13134:	b	12e14 <close@plt+0x1c70>
   13138:	mov	r5, #118	; 0x76
   1313c:	b	13124 <close@plt+0x1f80>
   13140:	mov	r7, #0
   13144:	mov	r6, #0
   13148:	b	12d84 <close@plt+0x1be0>
   1314c:	ldr	r3, [sp, #32]
   13150:	cmp	r3, #0
   13154:	bne	13f1c <close@plt+0x2d78>
   13158:	mov	r7, r3
   1315c:	ldr	r3, [sp, #44]	; 0x2c
   13160:	sub	r2, fp, #2
   13164:	eor	r3, r3, #1
   13168:	clz	r2, r2
   1316c:	lsr	r2, r2, #5
   13170:	ands	r3, r2, r3
   13174:	beq	13bbc <close@plt+0x2a18>
   13178:	cmp	sl, r4
   1317c:	movhi	r1, #39	; 0x27
   13180:	strbhi	r1, [r8, r4]
   13184:	add	r1, r4, #1
   13188:	cmp	sl, r1
   1318c:	movhi	r0, #36	; 0x24
   13190:	strbhi	r0, [r8, r1]
   13194:	add	r1, r4, #2
   13198:	cmp	sl, r1
   1319c:	movhi	r0, #39	; 0x27
   131a0:	strbhi	r0, [r8, r1]
   131a4:	add	r1, r4, #3
   131a8:	cmp	sl, r1
   131ac:	bls	13c1c <close@plt+0x2a78>
   131b0:	mov	r4, r1
   131b4:	mov	r1, #92	; 0x5c
   131b8:	strb	r1, [r8, r4]
   131bc:	mov	r1, r4
   131c0:	str	r3, [sp, #44]	; 0x2c
   131c4:	cmp	fp, #2
   131c8:	add	r4, r4, #1
   131cc:	beq	13c64 <close@plt+0x2ac0>
   131d0:	ldr	r0, [sp, #24]
   131d4:	add	r3, r9, #1
   131d8:	cmp	r3, r0
   131dc:	bcs	131f4 <close@plt+0x2050>
   131e0:	ldr	r0, [sp, #36]	; 0x24
   131e4:	ldrb	r3, [r0, r3]
   131e8:	sub	r3, r3, #48	; 0x30
   131ec:	cmp	r3, #9
   131f0:	bls	13c74 <close@plt+0x2ad0>
   131f4:	mov	r5, #48	; 0x30
   131f8:	ldr	r3, [sp, #28]
   131fc:	eor	r3, r3, #1
   13200:	orrs	r2, r2, r3
   13204:	mov	r3, r6
   13208:	moveq	r6, r2
   1320c:	beq	12d88 <close@plt+0x1be4>
   13210:	mov	r6, #0
   13214:	b	12db0 <close@plt+0x1c0c>
   13218:	mov	r2, #0
   1321c:	mov	r6, r2
   13220:	mov	r5, #98	; 0x62
   13224:	b	12dd0 <close@plt+0x1c2c>
   13228:	mov	r5, #97	; 0x61
   1322c:	b	13130 <close@plt+0x1f8c>
   13230:	mov	r3, r7
   13234:	mov	r6, r7
   13238:	mov	r2, #0
   1323c:	mov	r7, r3
   13240:	mov	r5, #32
   13244:	b	12d68 <close@plt+0x1bc4>
   13248:	cmp	r9, #0
   1324c:	mov	r3, r7
   13250:	bne	13818 <close@plt+0x2674>
   13254:	mov	r6, r7
   13258:	mov	r2, r9
   1325c:	mov	r7, r3
   13260:	b	12d68 <close@plt+0x1bc4>
   13264:	mov	r6, r7
   13268:	b	12d84 <close@plt+0x1be0>
   1326c:	mov	r7, #0
   13270:	ldr	r3, [sp, #64]	; 0x40
   13274:	cmp	r3, #1
   13278:	bne	138d4 <close@plt+0x2730>
   1327c:	bl	1109c <__ctype_b_loc@plt>
   13280:	ldr	r2, [sp, #64]	; 0x40
   13284:	sxth	r3, r5
   13288:	mov	ip, r2
   1328c:	lsl	r3, r3, #1
   13290:	ldr	r2, [r0]
   13294:	ldrh	r3, [r2, r3]
   13298:	and	r3, r3, #16384	; 0x4000
   1329c:	cmp	r3, #0
   132a0:	ldr	r3, [sp, #28]
   132a4:	movne	r6, #1
   132a8:	moveq	r6, #0
   132ac:	movne	r2, #0
   132b0:	andeq	r2, r3, #1
   132b4:	cmp	r2, #0
   132b8:	bne	13be4 <close@plt+0x2a40>
   132bc:	sub	r2, fp, #2
   132c0:	clz	r2, r2
   132c4:	lsr	r2, r2, #5
   132c8:	b	12d68 <close@plt+0x1bc4>
   132cc:	cmp	r4, #0
   132d0:	bne	13f90 <close@plt+0x2dec>
   132d4:	str	r4, [sp, #28]
   132d8:	cmp	sl, #0
   132dc:	bne	13fd4 <close@plt+0x2e30>
   132e0:	ldr	r3, [pc, #772]	; 135ec <close@plt+0x2448>
   132e4:	mov	r4, #1
   132e8:	str	r4, [sp, #40]	; 0x28
   132ec:	str	r3, [sp, #60]	; 0x3c
   132f0:	str	r4, [sp, #52]	; 0x34
   132f4:	str	sl, [sp, #72]	; 0x48
   132f8:	str	sl, [sp, #68]	; 0x44
   132fc:	str	sl, [sp, #44]	; 0x2c
   13300:	str	sl, [sp, #32]
   13304:	mov	r8, #2
   13308:	b	128d0 <close@plt+0x172c>
   1330c:	ldr	r3, [sp, #36]	; 0x24
   13310:	ldrb	r5, [r3, r9]
   13314:	cmp	r5, #126	; 0x7e
   13318:	ldrls	pc, [pc, r5, lsl #2]
   1331c:	b	13270 <close@plt+0x20cc>
   13320:	andeq	r3, r1, r4, asr r5
   13324:	andeq	r3, r1, r0, ror r2
   13328:	andeq	r3, r1, r0, ror r2
   1332c:	andeq	r3, r1, r0, ror r2
   13330:	andeq	r3, r1, r0, ror r2
   13334:	andeq	r3, r1, r0, ror r2
   13338:	andeq	r3, r1, r0, ror r2
   1333c:	andeq	r3, r1, r0, asr #10
   13340:	andeq	r3, r1, ip, lsr #10
   13344:	andeq	r3, r1, r4, lsr #10
   13348:	andeq	r3, r1, ip, lsl r5
   1334c:	andeq	r3, r1, ip, asr #11
   13350:			; <UNDEFINED> instruction: 0x000135b8
   13354:	andeq	r3, r1, r0, asr r0
   13358:	andeq	r3, r1, r0, ror r2
   1335c:	andeq	r3, r1, r0, ror r2
   13360:	andeq	r3, r1, r0, ror r2
   13364:	andeq	r3, r1, r0, ror r2
   13368:	andeq	r3, r1, r0, ror r2
   1336c:	andeq	r3, r1, r0, ror r2
   13370:	andeq	r3, r1, r0, ror r2
   13374:	andeq	r3, r1, r0, ror r2
   13378:	andeq	r3, r1, r0, ror r2
   1337c:	andeq	r3, r1, r0, ror r2
   13380:	andeq	r3, r1, r0, ror r2
   13384:	andeq	r3, r1, r0, ror r2
   13388:	andeq	r3, r1, r0, ror r2
   1338c:	andeq	r3, r1, r0, ror r2
   13390:	andeq	r3, r1, r0, ror r2
   13394:	andeq	r3, r1, r0, ror r2
   13398:	andeq	r3, r1, r0, ror r2
   1339c:	andeq	r3, r1, r0, ror r2
   133a0:	andeq	r3, r1, r8, lsr #11
   133a4:	muleq	r1, r4, r5
   133a8:	muleq	r1, r4, r5
   133ac:	andeq	r3, r1, r4, lsl #11
   133b0:	muleq	r1, r4, r5
   133b4:			; <UNDEFINED> instruction: 0x000132bc
   133b8:	muleq	r1, r4, r5
   133bc:	andeq	r2, r1, r4, lsl #31
   133c0:	muleq	r1, r4, r5
   133c4:	muleq	r1, r4, r5
   133c8:	muleq	r1, r4, r5
   133cc:			; <UNDEFINED> instruction: 0x000132bc
   133d0:			; <UNDEFINED> instruction: 0x000132bc
   133d4:			; <UNDEFINED> instruction: 0x000132bc
   133d8:			; <UNDEFINED> instruction: 0x000132bc
   133dc:			; <UNDEFINED> instruction: 0x000132bc
   133e0:			; <UNDEFINED> instruction: 0x000132bc
   133e4:			; <UNDEFINED> instruction: 0x000132bc
   133e8:			; <UNDEFINED> instruction: 0x000132bc
   133ec:			; <UNDEFINED> instruction: 0x000132bc
   133f0:			; <UNDEFINED> instruction: 0x000132bc
   133f4:			; <UNDEFINED> instruction: 0x000132bc
   133f8:			; <UNDEFINED> instruction: 0x000132bc
   133fc:			; <UNDEFINED> instruction: 0x000132bc
   13400:			; <UNDEFINED> instruction: 0x000132bc
   13404:			; <UNDEFINED> instruction: 0x000132bc
   13408:			; <UNDEFINED> instruction: 0x000132bc
   1340c:	muleq	r1, r4, r5
   13410:	muleq	r1, r4, r5
   13414:	muleq	r1, r4, r5
   13418:	muleq	r1, r4, r5
   1341c:	andeq	r2, r1, r8, asr pc
   13420:	andeq	r3, r1, r0, ror r2
   13424:			; <UNDEFINED> instruction: 0x000132bc
   13428:			; <UNDEFINED> instruction: 0x000132bc
   1342c:			; <UNDEFINED> instruction: 0x000132bc
   13430:			; <UNDEFINED> instruction: 0x000132bc
   13434:			; <UNDEFINED> instruction: 0x000132bc
   13438:			; <UNDEFINED> instruction: 0x000132bc
   1343c:			; <UNDEFINED> instruction: 0x000132bc
   13440:			; <UNDEFINED> instruction: 0x000132bc
   13444:			; <UNDEFINED> instruction: 0x000132bc
   13448:			; <UNDEFINED> instruction: 0x000132bc
   1344c:			; <UNDEFINED> instruction: 0x000132bc
   13450:			; <UNDEFINED> instruction: 0x000132bc
   13454:			; <UNDEFINED> instruction: 0x000132bc
   13458:			; <UNDEFINED> instruction: 0x000132bc
   1345c:			; <UNDEFINED> instruction: 0x000132bc
   13460:			; <UNDEFINED> instruction: 0x000132bc
   13464:			; <UNDEFINED> instruction: 0x000132bc
   13468:			; <UNDEFINED> instruction: 0x000132bc
   1346c:			; <UNDEFINED> instruction: 0x000132bc
   13470:			; <UNDEFINED> instruction: 0x000132bc
   13474:			; <UNDEFINED> instruction: 0x000132bc
   13478:			; <UNDEFINED> instruction: 0x000132bc
   1347c:			; <UNDEFINED> instruction: 0x000132bc
   13480:			; <UNDEFINED> instruction: 0x000132bc
   13484:			; <UNDEFINED> instruction: 0x000132bc
   13488:			; <UNDEFINED> instruction: 0x000132bc
   1348c:	muleq	r1, r4, r5
   13490:	andeq	r2, r1, r0, lsl pc
   13494:			; <UNDEFINED> instruction: 0x000132bc
   13498:	muleq	r1, r4, r5
   1349c:			; <UNDEFINED> instruction: 0x000132bc
   134a0:	muleq	r1, r4, r5
   134a4:			; <UNDEFINED> instruction: 0x000132bc
   134a8:			; <UNDEFINED> instruction: 0x000132bc
   134ac:			; <UNDEFINED> instruction: 0x000132bc
   134b0:			; <UNDEFINED> instruction: 0x000132bc
   134b4:			; <UNDEFINED> instruction: 0x000132bc
   134b8:			; <UNDEFINED> instruction: 0x000132bc
   134bc:			; <UNDEFINED> instruction: 0x000132bc
   134c0:			; <UNDEFINED> instruction: 0x000132bc
   134c4:			; <UNDEFINED> instruction: 0x000132bc
   134c8:			; <UNDEFINED> instruction: 0x000132bc
   134cc:			; <UNDEFINED> instruction: 0x000132bc
   134d0:			; <UNDEFINED> instruction: 0x000132bc
   134d4:			; <UNDEFINED> instruction: 0x000132bc
   134d8:			; <UNDEFINED> instruction: 0x000132bc
   134dc:			; <UNDEFINED> instruction: 0x000132bc
   134e0:			; <UNDEFINED> instruction: 0x000132bc
   134e4:			; <UNDEFINED> instruction: 0x000132bc
   134e8:			; <UNDEFINED> instruction: 0x000132bc
   134ec:			; <UNDEFINED> instruction: 0x000132bc
   134f0:			; <UNDEFINED> instruction: 0x000132bc
   134f4:			; <UNDEFINED> instruction: 0x000132bc
   134f8:			; <UNDEFINED> instruction: 0x000132bc
   134fc:			; <UNDEFINED> instruction: 0x000132bc
   13500:			; <UNDEFINED> instruction: 0x000132bc
   13504:			; <UNDEFINED> instruction: 0x000132bc
   13508:			; <UNDEFINED> instruction: 0x000132bc
   1350c:	andeq	r2, r1, r8, lsr #26
   13510:	muleq	r1, r4, r5
   13514:	andeq	r2, r1, r8, lsr #26
   13518:	andeq	r3, r1, r4, lsl #11
   1351c:	mov	r3, #110	; 0x6e
   13520:	b	13054 <close@plt+0x1eb0>
   13524:	mov	r3, #116	; 0x74
   13528:	b	13054 <close@plt+0x1eb0>
   1352c:	sub	r2, fp, #2
   13530:	mov	r3, #98	; 0x62
   13534:	clz	r2, r2
   13538:	lsr	r2, r2, #5
   1353c:	b	12f40 <close@plt+0x1d9c>
   13540:	sub	r2, fp, #2
   13544:	mov	r3, #97	; 0x61
   13548:	clz	r2, r2
   1354c:	lsr	r2, r2, #5
   13550:	b	12f40 <close@plt+0x1d9c>
   13554:	ldr	r3, [sp, #28]
   13558:	cmp	r3, #0
   1355c:	bne	1314c <close@plt+0x1fa8>
   13560:	ldr	r3, [sp, #164]	; 0xa4
   13564:	tst	r3, #1
   13568:	bne	13bdc <close@plt+0x2a38>
   1356c:	ldr	r6, [sp, #28]
   13570:	sub	r2, fp, #2
   13574:	mov	r7, r6
   13578:	clz	r2, r2
   1357c:	lsr	r2, r2, #5
   13580:	b	12d68 <close@plt+0x1bc4>
   13584:	sub	r2, fp, #2
   13588:	clz	r2, r2
   1358c:	lsr	r2, r2, #5
   13590:	b	12d54 <close@plt+0x1bb0>
   13594:	sub	r2, fp, #2
   13598:	mov	r6, #0
   1359c:	clz	r2, r2
   135a0:	lsr	r2, r2, #5
   135a4:	b	12d5c <close@plt+0x1bb8>
   135a8:	sub	r2, fp, #2
   135ac:	clz	r2, r2
   135b0:	lsr	r2, r2, #5
   135b4:	b	12d5c <close@plt+0x1bb8>
   135b8:	sub	r2, fp, #2
   135bc:	mov	r3, #102	; 0x66
   135c0:	clz	r2, r2
   135c4:	lsr	r2, r2, #5
   135c8:	b	12f40 <close@plt+0x1d9c>
   135cc:	sub	r2, fp, #2
   135d0:	mov	r3, #118	; 0x76
   135d4:	clz	r2, r2
   135d8:	lsr	r2, r2, #5
   135dc:	b	12f40 <close@plt+0x1d9c>
   135e0:	andeq	r6, r2, r8, lsl #30
   135e4:	andeq	r6, r1, r0, lsr #3
   135e8:	andeq	r6, r1, r8, lsl #3
   135ec:	muleq	r1, ip, r1
   135f0:	ldr	r3, [sp, #48]	; 0x30
   135f4:	ldrb	r5, [r3]
   135f8:	cmp	r5, #126	; 0x7e
   135fc:	ldrls	pc, [pc, r5, lsl #2]
   13600:	b	1326c <close@plt+0x20c8>
   13604:	andeq	r3, r1, ip, asr #2
   13608:	andeq	r3, r1, ip, ror #4
   1360c:	andeq	r3, r1, ip, ror #4
   13610:	andeq	r3, r1, ip, ror #4
   13614:	andeq	r3, r1, ip, ror #4
   13618:	andeq	r3, r1, ip, ror #4
   1361c:	andeq	r3, r1, ip, ror #4
   13620:	andeq	r3, r1, r4, asr #16
   13624:	andeq	r3, r1, ip, lsr r8
   13628:	andeq	r3, r1, r8, lsl r1
   1362c:	andeq	r3, r1, r0, ror #1
   13630:	andeq	r3, r1, r8, lsr r1
   13634:	andeq	r3, r1, r0, lsr #2
   13638:	andeq	r3, r1, r0, lsr r8
   1363c:	andeq	r3, r1, ip, ror #4
   13640:	andeq	r3, r1, ip, ror #4
   13644:	andeq	r3, r1, ip, ror #4
   13648:	andeq	r3, r1, ip, ror #4
   1364c:	andeq	r3, r1, ip, ror #4
   13650:	andeq	r3, r1, ip, ror #4
   13654:	andeq	r3, r1, ip, ror #4
   13658:	andeq	r3, r1, ip, ror #4
   1365c:	andeq	r3, r1, ip, ror #4
   13660:	andeq	r3, r1, ip, ror #4
   13664:	andeq	r3, r1, ip, ror #4
   13668:	andeq	r3, r1, ip, ror #4
   1366c:	andeq	r3, r1, ip, ror #4
   13670:	andeq	r3, r1, ip, ror #4
   13674:	andeq	r3, r1, ip, ror #4
   13678:	andeq	r3, r1, ip, ror #4
   1367c:	andeq	r3, r1, ip, ror #4
   13680:	andeq	r3, r1, ip, ror #4
   13684:	andeq	r3, r1, r8, lsr #16
   13688:	andeq	r3, r1, r0, asr #2
   1368c:	andeq	r3, r1, r0, asr #2
   13690:	andeq	r3, r1, ip, lsl #16
   13694:	andeq	r3, r1, r0, asr #2
   13698:	andeq	r3, r1, r0, lsl #16
   1369c:	andeq	r3, r1, r0, asr #2
   136a0:	andeq	r2, r1, r0, lsl #31
   136a4:	andeq	r3, r1, r0, asr #2
   136a8:	andeq	r3, r1, r0, asr #2
   136ac:	andeq	r3, r1, r0, asr #2
   136b0:	andeq	r3, r1, r0, lsl #16
   136b4:	andeq	r3, r1, r0, lsl #16
   136b8:	andeq	r3, r1, r0, lsl #16
   136bc:	andeq	r3, r1, r0, lsl #16
   136c0:	andeq	r3, r1, r0, lsl #16
   136c4:	andeq	r3, r1, r0, lsl #16
   136c8:	andeq	r3, r1, r0, lsl #16
   136cc:	andeq	r3, r1, r0, lsl #16
   136d0:	andeq	r3, r1, r0, lsl #16
   136d4:	andeq	r3, r1, r0, lsl #16
   136d8:	andeq	r3, r1, r0, lsl #16
   136dc:	andeq	r3, r1, r0, lsl #16
   136e0:	andeq	r3, r1, r0, lsl #16
   136e4:	andeq	r3, r1, r0, lsl #16
   136e8:	andeq	r3, r1, r0, lsl #16
   136ec:	andeq	r3, r1, r0, lsl #16
   136f0:	andeq	r3, r1, r0, asr #2
   136f4:	andeq	r3, r1, r0, asr #2
   136f8:	andeq	r3, r1, r0, asr #2
   136fc:	andeq	r3, r1, r0, asr #2
   13700:	andeq	r2, r1, r4, asr pc
   13704:	andeq	r3, r1, ip, ror #4
   13708:	andeq	r3, r1, r0, lsl #16
   1370c:	andeq	r3, r1, r0, lsl #16
   13710:	andeq	r3, r1, r0, lsl #16
   13714:	andeq	r3, r1, r0, lsl #16
   13718:	andeq	r3, r1, r0, lsl #16
   1371c:	andeq	r3, r1, r0, lsl #16
   13720:	andeq	r3, r1, r0, lsl #16
   13724:	andeq	r3, r1, r0, lsl #16
   13728:	andeq	r3, r1, r0, lsl #16
   1372c:	andeq	r3, r1, r0, lsl #16
   13730:	andeq	r3, r1, r0, lsl #16
   13734:	andeq	r3, r1, r0, lsl #16
   13738:	andeq	r3, r1, r0, lsl #16
   1373c:	andeq	r3, r1, r0, lsl #16
   13740:	andeq	r3, r1, r0, lsl #16
   13744:	andeq	r3, r1, r0, lsl #16
   13748:	andeq	r3, r1, r0, lsl #16
   1374c:	andeq	r3, r1, r0, lsl #16
   13750:	andeq	r3, r1, r0, lsl #16
   13754:	andeq	r3, r1, r0, lsl #16
   13758:	andeq	r3, r1, r0, lsl #16
   1375c:	andeq	r3, r1, r0, lsl #16
   13760:	andeq	r3, r1, r0, lsl #16
   13764:	andeq	r3, r1, r0, lsl #16
   13768:	andeq	r3, r1, r0, lsl #16
   1376c:	andeq	r3, r1, r0, lsl #16
   13770:	andeq	r3, r1, r0, asr #2
   13774:	andeq	r2, r1, ip, lsl #30
   13778:	andeq	r3, r1, r0, lsl #16
   1377c:	andeq	r3, r1, r0, asr #2
   13780:	andeq	r3, r1, r0, lsl #16
   13784:	andeq	r3, r1, r0, asr #2
   13788:	andeq	r3, r1, r0, lsl #16
   1378c:	andeq	r3, r1, r0, lsl #16
   13790:	andeq	r3, r1, r0, lsl #16
   13794:	andeq	r3, r1, r0, lsl #16
   13798:	andeq	r3, r1, r0, lsl #16
   1379c:	andeq	r3, r1, r0, lsl #16
   137a0:	andeq	r3, r1, r0, lsl #16
   137a4:	andeq	r3, r1, r0, lsl #16
   137a8:	andeq	r3, r1, r0, lsl #16
   137ac:	andeq	r3, r1, r0, lsl #16
   137b0:	andeq	r3, r1, r0, lsl #16
   137b4:	andeq	r3, r1, r0, lsl #16
   137b8:	andeq	r3, r1, r0, lsl #16
   137bc:	andeq	r3, r1, r0, lsl #16
   137c0:	andeq	r3, r1, r0, lsl #16
   137c4:	andeq	r3, r1, r0, lsl #16
   137c8:	andeq	r3, r1, r0, lsl #16
   137cc:	andeq	r3, r1, r0, lsl #16
   137d0:	andeq	r3, r1, r0, lsl #16
   137d4:	andeq	r3, r1, r0, lsl #16
   137d8:	andeq	r3, r1, r0, lsl #16
   137dc:	andeq	r3, r1, r0, lsl #16
   137e0:	andeq	r3, r1, r0, lsl #16
   137e4:	andeq	r3, r1, r0, lsl #16
   137e8:	andeq	r3, r1, r0, lsl #16
   137ec:	andeq	r3, r1, r0, lsl #16
   137f0:	andeq	r2, r1, r4, lsr #26
   137f4:	andeq	r3, r1, r0, asr #2
   137f8:	andeq	r2, r1, r4, lsr #26
   137fc:	andeq	r3, r1, ip, lsl #16
   13800:	mov	r6, r7
   13804:	mov	r7, #0
   13808:	b	12d84 <close@plt+0x1be0>
   1380c:	cmp	r9, #0
   13810:	mov	r3, #0
   13814:	beq	13254 <close@plt+0x20b0>
   13818:	mov	r6, #0
   1381c:	mov	r7, r3
   13820:	mov	r3, r6
   13824:	b	12d88 <close@plt+0x1be4>
   13828:	mov	r3, #0
   1382c:	b	13234 <close@plt+0x2090>
   13830:	mov	r7, #0
   13834:	mov	r3, #114	; 0x72
   13838:	b	13054 <close@plt+0x1eb0>
   1383c:	mov	r5, #98	; 0x62
   13840:	b	130e4 <close@plt+0x1f40>
   13844:	mov	r5, #97	; 0x61
   13848:	b	13124 <close@plt+0x1f80>
   1384c:	ldr	r3, [sp, #32]
   13850:	cmp	r3, #0
   13854:	bne	13c9c <close@plt+0x2af8>
   13858:	add	r9, r9, #1
   1385c:	ldr	r3, [sp, #44]	; 0x2c
   13860:	mov	r6, #0
   13864:	mov	r5, #92	; 0x5c
   13868:	b	1301c <close@plt+0x1e78>
   1386c:	ldr	r3, [sp, #36]	; 0x24
   13870:	ldrb	r3, [r3, #1]
   13874:	adds	r3, r3, #0
   13878:	movne	r3, #1
   1387c:	b	12d40 <close@plt+0x1b9c>
   13880:	ldr	r3, [sp, #164]	; 0xa4
   13884:	ands	r3, r3, #4
   13888:	beq	138ac <close@plt+0x2708>
   1388c:	ldr	r2, [sp, #24]
   13890:	add	r3, r9, #2
   13894:	cmp	r3, r2
   13898:	bcs	138ac <close@plt+0x2708>
   1389c:	ldr	r2, [sp, #48]	; 0x30
   138a0:	ldrb	r5, [r2, #1]
   138a4:	cmp	r5, #63	; 0x3f
   138a8:	beq	13d10 <close@plt+0x2b6c>
   138ac:	mov	r2, #0
   138b0:	mov	r6, r2
   138b4:	mov	r5, #63	; 0x3f
   138b8:	b	12d68 <close@plt+0x1bc4>
   138bc:	ldr	r3, [sp, #32]
   138c0:	cmp	r3, #0
   138c4:	bne	13c9c <close@plt+0x2af8>
   138c8:	mov	r6, r3
   138cc:	mov	r5, #63	; 0x3f
   138d0:	b	12db0 <close@plt+0x1c0c>
   138d4:	ldr	r3, [sp, #24]
   138d8:	cmn	r3, #1
   138dc:	mov	r3, #0
   138e0:	str	r3, [sp, #108]	; 0x6c
   138e4:	str	r3, [sp, #112]	; 0x70
   138e8:	bne	138f8 <close@plt+0x2754>
   138ec:	ldr	r0, [sp, #36]	; 0x24
   138f0:	bl	110b4 <strlen@plt>
   138f4:	str	r0, [sp, #24]
   138f8:	mov	r3, #0
   138fc:	str	sl, [sp, #88]	; 0x58
   13900:	ldr	sl, [sp, #36]	; 0x24
   13904:	str	r5, [sp, #92]	; 0x5c
   13908:	mov	r5, r3
   1390c:	str	r7, [sp, #96]	; 0x60
   13910:	str	r4, [sp, #100]	; 0x64
   13914:	str	r8, [sp, #84]	; 0x54
   13918:	ldr	r3, [sp, #24]
   1391c:	add	r4, r9, r5
   13920:	add	r7, sl, r4
   13924:	sub	r2, r3, r4
   13928:	mov	r1, r7
   1392c:	add	r3, sp, #108	; 0x6c
   13930:	add	r0, sp, #104	; 0x68
   13934:	bl	15184 <close@plt+0x3fe0>
   13938:	subs	r8, r0, #0
   1393c:	beq	1398c <close@plt+0x27e8>
   13940:	cmn	r8, #1
   13944:	beq	13cec <close@plt+0x2b48>
   13948:	cmn	r8, #2
   1394c:	beq	13e0c <close@plt+0x2c68>
   13950:	ldr	r3, [sp, #32]
   13954:	cmp	fp, #2
   13958:	movne	r3, #0
   1395c:	andeq	r3, r3, #1
   13960:	cmp	r3, #0
   13964:	bne	13aec <close@plt+0x2948>
   13968:	ldr	r0, [sp, #104]	; 0x68
   1396c:	bl	10fd0 <iswprint@plt>
   13970:	add	r5, r5, r8
   13974:	cmp	r0, #0
   13978:	add	r0, sp, #108	; 0x6c
   1397c:	moveq	r6, #0
   13980:	bl	10f58 <mbsinit@plt>
   13984:	cmp	r0, #0
   13988:	beq	13918 <close@plt+0x2774>
   1398c:	ldr	r3, [sp, #28]
   13990:	mov	ip, r5
   13994:	eor	r2, r6, #1
   13998:	ldr	r5, [sp, #92]	; 0x5c
   1399c:	ldr	r7, [sp, #96]	; 0x60
   139a0:	ldr	r4, [sp, #100]	; 0x64
   139a4:	ldr	r8, [sp, #84]	; 0x54
   139a8:	ldr	sl, [sp, #88]	; 0x58
   139ac:	and	r2, r2, r3
   139b0:	cmp	ip, #1
   139b4:	bls	132b4 <close@plt+0x2110>
   139b8:	add	r1, ip, r9
   139bc:	ldr	lr, [sp, #48]	; 0x30
   139c0:	mov	r0, #0
   139c4:	str	r6, [sp, #48]	; 0x30
   139c8:	mov	ip, #39	; 0x27
   139cc:	ldr	r6, [sp, #44]	; 0x2c
   139d0:	b	13a88 <close@plt+0x28e4>
   139d4:	ldr	r0, [sp, #32]
   139d8:	sub	r3, fp, #2
   139dc:	cmp	r0, #0
   139e0:	clz	r3, r3
   139e4:	lsr	r3, r3, #5
   139e8:	bne	13bf0 <close@plt+0x2a4c>
   139ec:	eor	r0, r6, #1
   139f0:	ands	r3, r3, r0
   139f4:	beq	13a24 <close@plt+0x2880>
   139f8:	add	r0, r4, #1
   139fc:	cmp	sl, r4
   13a00:	strbhi	ip, [r8, r4]
   13a04:	cmp	sl, r0
   13a08:	movhi	r6, #36	; 0x24
   13a0c:	strbhi	r6, [r8, r0]
   13a10:	add	r0, r4, #2
   13a14:	mov	r6, r3
   13a18:	add	r4, r4, #3
   13a1c:	cmp	sl, r0
   13a20:	strbhi	ip, [r8, r0]
   13a24:	cmp	sl, r4
   13a28:	movhi	r3, #92	; 0x5c
   13a2c:	strbhi	r3, [r8, r4]
   13a30:	add	r3, r4, #1
   13a34:	cmp	sl, r3
   13a38:	lsrhi	r0, r5, #6
   13a3c:	addhi	r0, r0, #48	; 0x30
   13a40:	strbhi	r0, [r8, r3]
   13a44:	add	r0, r4, #2
   13a48:	cmp	sl, r0
   13a4c:	lsrhi	r3, r5, #3
   13a50:	andhi	r3, r3, #7
   13a54:	addhi	r3, r3, #48	; 0x30
   13a58:	add	r9, r9, #1
   13a5c:	strbhi	r3, [r8, r0]
   13a60:	and	r5, r5, #7
   13a64:	cmp	r9, r1
   13a68:	add	r5, r5, #48	; 0x30
   13a6c:	add	r4, r4, #3
   13a70:	bcs	13c10 <close@plt+0x2a6c>
   13a74:	mov	r0, r2
   13a78:	cmp	sl, r4
   13a7c:	strbhi	r5, [r8, r4]
   13a80:	ldrb	r5, [lr, #1]!
   13a84:	add	r4, r4, #1
   13a88:	cmp	r2, #0
   13a8c:	bne	139d4 <close@plt+0x2830>
   13a90:	eor	r3, r0, #1
   13a94:	and	r3, r3, r6
   13a98:	cmp	r7, #0
   13a9c:	uxtb	r3, r3
   13aa0:	beq	13ab4 <close@plt+0x2910>
   13aa4:	cmp	sl, r4
   13aa8:	movhi	r7, #92	; 0x5c
   13aac:	strbhi	r7, [r8, r4]
   13ab0:	add	r4, r4, #1
   13ab4:	add	r9, r9, #1
   13ab8:	cmp	r9, r1
   13abc:	bcs	13c04 <close@plt+0x2a60>
   13ac0:	cmp	r3, #0
   13ac4:	beq	13c30 <close@plt+0x2a8c>
   13ac8:	cmp	sl, r4
   13acc:	add	r3, r4, #1
   13ad0:	strbhi	ip, [r8, r4]
   13ad4:	mov	r7, #0
   13ad8:	cmp	sl, r3
   13adc:	strbhi	ip, [r8, r3]
   13ae0:	add	r4, r4, #2
   13ae4:	mov	r6, r7
   13ae8:	b	13a78 <close@plt+0x28d4>
   13aec:	cmp	r8, #1
   13af0:	beq	13968 <close@plt+0x27c4>
   13af4:	add	r1, r4, #1
   13af8:	add	r3, sl, r8
   13afc:	add	r1, sl, r1
   13b00:	add	r4, r3, r4
   13b04:	ldrb	r3, [r1], #1
   13b08:	sub	r3, r3, #91	; 0x5b
   13b0c:	cmp	r3, #33	; 0x21
   13b10:	ldrls	pc, [pc, r3, lsl #2]
   13b14:	b	13ba0 <close@plt+0x29fc>
   13b18:	andeq	r3, r1, ip, lsr #23
   13b1c:	andeq	r3, r1, ip, lsr #23
   13b20:	andeq	r3, r1, r0, lsr #23
   13b24:	andeq	r3, r1, ip, lsr #23
   13b28:	andeq	r3, r1, r0, lsr #23
   13b2c:	andeq	r3, r1, ip, lsr #23
   13b30:	andeq	r3, r1, r0, lsr #23
   13b34:	andeq	r3, r1, r0, lsr #23
   13b38:	andeq	r3, r1, r0, lsr #23
   13b3c:	andeq	r3, r1, r0, lsr #23
   13b40:	andeq	r3, r1, r0, lsr #23
   13b44:	andeq	r3, r1, r0, lsr #23
   13b48:	andeq	r3, r1, r0, lsr #23
   13b4c:	andeq	r3, r1, r0, lsr #23
   13b50:	andeq	r3, r1, r0, lsr #23
   13b54:	andeq	r3, r1, r0, lsr #23
   13b58:	andeq	r3, r1, r0, lsr #23
   13b5c:	andeq	r3, r1, r0, lsr #23
   13b60:	andeq	r3, r1, r0, lsr #23
   13b64:	andeq	r3, r1, r0, lsr #23
   13b68:	andeq	r3, r1, r0, lsr #23
   13b6c:	andeq	r3, r1, r0, lsr #23
   13b70:	andeq	r3, r1, r0, lsr #23
   13b74:	andeq	r3, r1, r0, lsr #23
   13b78:	andeq	r3, r1, r0, lsr #23
   13b7c:	andeq	r3, r1, r0, lsr #23
   13b80:	andeq	r3, r1, r0, lsr #23
   13b84:	andeq	r3, r1, r0, lsr #23
   13b88:	andeq	r3, r1, r0, lsr #23
   13b8c:	andeq	r3, r1, r0, lsr #23
   13b90:	andeq	r3, r1, r0, lsr #23
   13b94:	andeq	r3, r1, r0, lsr #23
   13b98:	andeq	r3, r1, r0, lsr #23
   13b9c:	andeq	r3, r1, ip, lsr #23
   13ba0:	cmp	r4, r1
   13ba4:	bne	13b04 <close@plt+0x2960>
   13ba8:	b	13968 <close@plt+0x27c4>
   13bac:	ldr	fp, [sp, #84]	; 0x54
   13bb0:	ldr	sl, [sp, #88]	; 0x58
   13bb4:	mov	r8, #2
   13bb8:	b	13074 <close@plt+0x1ed0>
   13bbc:	cmp	sl, r4
   13bc0:	movls	r1, r4
   13bc4:	bls	131c4 <close@plt+0x2020>
   13bc8:	ldr	r3, [sp, #44]	; 0x2c
   13bcc:	b	131b4 <close@plt+0x2010>
   13bd0:	str	sl, [sp, #72]	; 0x48
   13bd4:	ldr	sl, [sp, #32]
   13bd8:	b	12fec <close@plt+0x1e48>
   13bdc:	add	r9, r9, #1
   13be0:	b	128e0 <close@plt+0x173c>
   13be4:	ldr	r2, [sp, #28]
   13be8:	mov	r6, #0
   13bec:	b	139b8 <close@plt+0x2814>
   13bf0:	str	fp, [sp, #160]	; 0xa0
   13bf4:	str	r3, [sp, #28]
   13bf8:	mov	fp, r8
   13bfc:	ldr	r8, [sp, #160]	; 0xa0
   13c00:	b	13074 <close@plt+0x1ed0>
   13c04:	str	r6, [sp, #44]	; 0x2c
   13c08:	ldr	r6, [sp, #48]	; 0x30
   13c0c:	b	1301c <close@plt+0x1e78>
   13c10:	str	r6, [sp, #44]	; 0x2c
   13c14:	ldr	r6, [sp, #48]	; 0x30
   13c18:	b	12e28 <close@plt+0x1c84>
   13c1c:	add	r4, r4, #4
   13c20:	str	r3, [sp, #44]	; 0x2c
   13c24:	mov	r6, #0
   13c28:	mov	r5, #48	; 0x30
   13c2c:	b	12db0 <close@plt+0x1c0c>
   13c30:	mov	r7, r3
   13c34:	b	13a78 <close@plt+0x28d4>
   13c38:	ldr	r3, [pc, #-1624]	; 135e8 <close@plt+0x2444>
   13c3c:	mov	r4, #1
   13c40:	str	r4, [sp, #40]	; 0x28
   13c44:	str	r4, [sp, #28]
   13c48:	str	r4, [sp, #52]	; 0x34
   13c4c:	str	sl, [sp, #72]	; 0x48
   13c50:	str	sl, [sp, #68]	; 0x44
   13c54:	str	sl, [sp, #44]	; 0x2c
   13c58:	str	sl, [sp, #32]
   13c5c:	str	r3, [sp, #60]	; 0x3c
   13c60:	b	128d0 <close@plt+0x172c>
   13c64:	mov	r3, r6
   13c68:	mov	r5, #48	; 0x30
   13c6c:	mov	r6, #0
   13c70:	b	12db0 <close@plt+0x1c0c>
   13c74:	cmp	sl, r4
   13c78:	movhi	r3, #48	; 0x30
   13c7c:	strbhi	r3, [r8, r4]
   13c80:	add	r3, r1, #2
   13c84:	cmp	sl, r3
   13c88:	movhi	r0, #48	; 0x30
   13c8c:	strbhi	r0, [r8, r3]
   13c90:	add	r4, r1, #3
   13c94:	mov	r5, #48	; 0x30
   13c98:	b	131f8 <close@plt+0x2054>
   13c9c:	str	fp, [sp, #160]	; 0xa0
   13ca0:	mov	fp, r8
   13ca4:	ldr	r8, [sp, #160]	; 0xa0
   13ca8:	b	13074 <close@plt+0x1ed0>
   13cac:	ldr	r2, [sp, #80]	; 0x50
   13cb0:	ldrb	r3, [r2]
   13cb4:	cmp	r3, #0
   13cb8:	beq	128a0 <close@plt+0x16fc>
   13cbc:	cmp	sl, r4
   13cc0:	strbhi	r3, [fp, r4]
   13cc4:	ldrb	r3, [r2, #1]!
   13cc8:	add	r4, r4, #1
   13ccc:	cmp	r3, #0
   13cd0:	bne	13cbc <close@plt+0x2b18>
   13cd4:	b	128a0 <close@plt+0x16fc>
   13cd8:	str	fp, [sp, #160]	; 0xa0
   13cdc:	mov	r3, #0
   13ce0:	mov	fp, r8
   13ce4:	ldr	r8, [sp, #160]	; 0xa0
   13ce8:	b	13108 <close@plt+0x1f64>
   13cec:	mov	ip, r5
   13cf0:	ldr	r7, [sp, #96]	; 0x60
   13cf4:	ldr	r5, [sp, #92]	; 0x5c
   13cf8:	ldr	r4, [sp, #100]	; 0x64
   13cfc:	ldr	r8, [sp, #84]	; 0x54
   13d00:	ldr	sl, [sp, #88]	; 0x58
   13d04:	ldr	r2, [sp, #28]
   13d08:	mov	r6, #0
   13d0c:	b	139b0 <close@plt+0x280c>
   13d10:	ldr	r2, [sp, #36]	; 0x24
   13d14:	ldrb	r1, [r2, r3]
   13d18:	sub	r2, r1, #33	; 0x21
   13d1c:	cmp	r2, #29
   13d20:	ldrls	pc, [pc, r2, lsl #2]
   13d24:	b	13e00 <close@plt+0x2c5c>
   13d28:	andeq	r3, r1, r0, lsr #27
   13d2c:	andeq	r3, r1, r0, lsl #28
   13d30:	andeq	r3, r1, r0, lsl #28
   13d34:	andeq	r3, r1, r0, lsl #28
   13d38:	andeq	r3, r1, r0, lsl #28
   13d3c:	andeq	r3, r1, r0, lsl #28
   13d40:	andeq	r3, r1, r0, lsr #27
   13d44:	andeq	r3, r1, r0, lsr #27
   13d48:	andeq	r3, r1, r0, lsr #27
   13d4c:	andeq	r3, r1, r0, lsl #28
   13d50:	andeq	r3, r1, r0, lsl #28
   13d54:	andeq	r3, r1, r0, lsl #28
   13d58:	andeq	r3, r1, r0, lsr #27
   13d5c:	andeq	r3, r1, r0, lsl #28
   13d60:	andeq	r3, r1, r0, lsr #27
   13d64:	andeq	r3, r1, r0, lsl #28
   13d68:	andeq	r3, r1, r0, lsl #28
   13d6c:	andeq	r3, r1, r0, lsl #28
   13d70:	andeq	r3, r1, r0, lsl #28
   13d74:	andeq	r3, r1, r0, lsl #28
   13d78:	andeq	r3, r1, r0, lsl #28
   13d7c:	andeq	r3, r1, r0, lsl #28
   13d80:	andeq	r3, r1, r0, lsl #28
   13d84:	andeq	r3, r1, r0, lsl #28
   13d88:	andeq	r3, r1, r0, lsl #28
   13d8c:	andeq	r3, r1, r0, lsl #28
   13d90:	andeq	r3, r1, r0, lsl #28
   13d94:	andeq	r3, r1, r0, lsr #27
   13d98:	andeq	r3, r1, r0, lsr #27
   13d9c:	andeq	r3, r1, r0, lsr #27
   13da0:	ldr	r2, [sp, #32]
   13da4:	cmp	r2, #0
   13da8:	bne	13eac <close@plt+0x2d08>
   13dac:	cmp	sl, r4
   13db0:	movhi	r2, #63	; 0x3f
   13db4:	strbhi	r2, [r8, r4]
   13db8:	add	r2, r4, #1
   13dbc:	cmp	sl, r2
   13dc0:	movhi	r0, #34	; 0x22
   13dc4:	strbhi	r0, [r8, r2]
   13dc8:	add	r2, r4, #2
   13dcc:	cmp	sl, r2
   13dd0:	movhi	r0, #34	; 0x22
   13dd4:	strbhi	r0, [r8, r2]
   13dd8:	add	r2, r4, #3
   13ddc:	cmp	sl, r2
   13de0:	movhi	r0, #63	; 0x3f
   13de4:	strbhi	r0, [r8, r2]
   13de8:	mov	r2, #0
   13dec:	add	r4, r4, #4
   13df0:	mov	r5, r1
   13df4:	mov	r9, r3
   13df8:	mov	r6, r2
   13dfc:	b	131f8 <close@plt+0x2054>
   13e00:	mov	r2, #0
   13e04:	mov	r6, r2
   13e08:	b	12d68 <close@plt+0x1bc4>
   13e0c:	ldr	r0, [sp, #24]
   13e10:	mov	r1, r4
   13e14:	cmp	r1, r0
   13e18:	mov	r2, r7
   13e1c:	mov	r3, r5
   13e20:	mov	ip, r5
   13e24:	ldr	r7, [sp, #96]	; 0x60
   13e28:	ldr	r5, [sp, #92]	; 0x5c
   13e2c:	ldr	r4, [sp, #100]	; 0x64
   13e30:	ldr	r8, [sp, #84]	; 0x54
   13e34:	ldr	sl, [sp, #88]	; 0x58
   13e38:	bcs	13e6c <close@plt+0x2cc8>
   13e3c:	ldrb	r6, [r2]
   13e40:	cmp	r6, #0
   13e44:	bne	13e58 <close@plt+0x2cb4>
   13e48:	b	13f88 <close@plt+0x2de4>
   13e4c:	ldrb	r6, [r2, #1]!
   13e50:	cmp	r6, #0
   13e54:	beq	13f10 <close@plt+0x2d6c>
   13e58:	add	r3, r3, #1
   13e5c:	add	r1, r9, r3
   13e60:	cmp	r1, r0
   13e64:	bcc	13e4c <close@plt+0x2ca8>
   13e68:	mov	ip, r3
   13e6c:	ldr	r2, [sp, #28]
   13e70:	mov	r6, #0
   13e74:	b	139b0 <close@plt+0x280c>
   13e78:	mov	r3, #1
   13e7c:	str	r3, [sp, #40]	; 0x28
   13e80:	str	r3, [sp, #32]
   13e84:	str	r3, [sp, #28]
   13e88:	str	r3, [sp, #52]	; 0x34
   13e8c:	ldr	r3, [pc, #-2220]	; 135e8 <close@plt+0x2444>
   13e90:	mov	r2, #0
   13e94:	str	r2, [sp, #68]	; 0x44
   13e98:	str	r2, [sp, #44]	; 0x2c
   13e9c:	str	r2, [sp, #72]	; 0x48
   13ea0:	mov	r4, r2
   13ea4:	str	r3, [sp, #60]	; 0x3c
   13ea8:	b	128d0 <close@plt+0x172c>
   13eac:	str	fp, [sp, #160]	; 0xa0
   13eb0:	mov	fp, r8
   13eb4:	ldr	r8, [sp, #160]	; 0xa0
   13eb8:	b	13080 <close@plt+0x1edc>
   13ebc:	mov	r2, r3
   13ec0:	ldr	r3, [sp, #60]	; 0x3c
   13ec4:	cmp	r3, #0
   13ec8:	moveq	r2, #0
   13ecc:	andne	r2, r2, #1
   13ed0:	cmp	r2, #0
   13ed4:	beq	13f00 <close@plt+0x2d5c>
   13ed8:	mov	r2, r3
   13edc:	ldrb	r3, [r3]
   13ee0:	cmp	r3, #0
   13ee4:	beq	13f00 <close@plt+0x2d5c>
   13ee8:	cmp	sl, r4
   13eec:	strbhi	r3, [fp, r4]
   13ef0:	ldrb	r3, [r2, #1]!
   13ef4:	add	r4, r4, #1
   13ef8:	cmp	r3, #0
   13efc:	bne	13ee8 <close@plt+0x2d44>
   13f00:	cmp	sl, r4
   13f04:	movhi	r3, #0
   13f08:	strbhi	r3, [fp, r4]
   13f0c:	b	130c0 <close@plt+0x1f1c>
   13f10:	mov	ip, r3
   13f14:	ldr	r2, [sp, #28]
   13f18:	b	139b0 <close@plt+0x280c>
   13f1c:	str	fp, [sp, #160]	; 0xa0
   13f20:	mov	fp, r8
   13f24:	ldr	r8, [sp, #160]	; 0xa0
   13f28:	sub	r3, r8, #2
   13f2c:	clz	r3, r3
   13f30:	lsr	r3, r3, #5
   13f34:	str	r3, [sp, #28]
   13f38:	b	13074 <close@plt+0x1ed0>
   13f3c:	ldr	r3, [sp, #76]	; 0x4c
   13f40:	mov	ip, #5
   13f44:	str	r3, [sp, #16]
   13f48:	ldr	r3, [sp, #80]	; 0x50
   13f4c:	ldr	r2, [sp, #36]	; 0x24
   13f50:	str	r3, [sp, #12]
   13f54:	ldr	r3, [sp, #56]	; 0x38
   13f58:	ldr	r1, [sp, #72]	; 0x48
   13f5c:	str	r3, [sp, #8]
   13f60:	ldr	r3, [sp, #164]	; 0xa4
   13f64:	mov	r0, fp
   13f68:	str	r3, [sp, #4]
   13f6c:	str	ip, [sp]
   13f70:	ldr	r3, [sp, #24]
   13f74:	bl	127d8 <close@plt+0x1634>
   13f78:	mov	r4, r0
   13f7c:	b	130c0 <close@plt+0x1f1c>
   13f80:	mov	r8, #2
   13f84:	b	13074 <close@plt+0x1ed0>
   13f88:	ldr	r2, [sp, #28]
   13f8c:	b	139b0 <close@plt+0x280c>
   13f90:	mov	r3, #0
   13f94:	str	r3, [sp, #68]	; 0x44
   13f98:	str	r3, [sp, #44]	; 0x2c
   13f9c:	str	r3, [sp, #72]	; 0x48
   13fa0:	str	r3, [sp, #28]
   13fa4:	mov	r4, r3
   13fa8:	ldr	r3, [pc, #-2500]	; 135ec <close@plt+0x2448>
   13fac:	mov	r2, #1
   13fb0:	str	r2, [sp, #40]	; 0x28
   13fb4:	str	r2, [sp, #32]
   13fb8:	str	r2, [sp, #52]	; 0x34
   13fbc:	str	r3, [sp, #60]	; 0x3c
   13fc0:	b	128d0 <close@plt+0x172c>
   13fc4:	bl	10f94 <__stack_chk_fail@plt>
   13fc8:	mov	r5, r3
   13fcc:	mov	r6, #0
   13fd0:	b	12dc4 <close@plt+0x1c20>
   13fd4:	mov	r3, #0
   13fd8:	mov	r2, #1
   13fdc:	str	r3, [sp, #44]	; 0x2c
   13fe0:	str	r3, [sp, #72]	; 0x48
   13fe4:	str	r2, [sp, #40]	; 0x28
   13fe8:	b	12ee0 <close@plt+0x1d3c>
   13fec:	bl	11198 <abort@plt>
   13ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff4:	sub	sp, sp, #44	; 0x2c
   13ff8:	mov	r6, r0
   13ffc:	mov	r4, r3
   14000:	mov	sl, r1
   14004:	mov	fp, r2
   14008:	bl	110cc <__errno_location@plt>
   1400c:	ldr	r7, [pc, #364]	; 14180 <close@plt+0x2fdc>
   14010:	cmp	r6, #0
   14014:	ldr	r5, [r7]
   14018:	ldr	r3, [r0]
   1401c:	str	r3, [sp, #24]
   14020:	blt	1417c <close@plt+0x2fd8>
   14024:	ldr	r3, [r7, #4]
   14028:	mov	r8, r0
   1402c:	cmp	r3, r6
   14030:	bgt	1407c <close@plt+0x2ed8>
   14034:	cmn	r6, #-268435454	; 0xf0000002
   14038:	bgt	14178 <close@plt+0x2fd4>
   1403c:	add	r9, r6, #1
   14040:	add	r3, r7, #8
   14044:	cmp	r5, r3
   14048:	lsl	r1, r9, #3
   1404c:	beq	14158 <close@plt+0x2fb4>
   14050:	mov	r0, r5
   14054:	bl	14eb8 <close@plt+0x3d14>
   14058:	mov	r5, r0
   1405c:	str	r0, [r7]
   14060:	ldr	r0, [r7, #4]
   14064:	mov	r1, #0
   14068:	sub	r2, r9, r0
   1406c:	add	r0, r5, r0, lsl #3
   14070:	lsl	r2, r2, #3
   14074:	bl	110e4 <memset@plt>
   14078:	str	r9, [r7, #4]
   1407c:	add	r3, r5, r6, lsl #3
   14080:	ldr	r1, [r4, #4]
   14084:	ldr	r7, [r3, #4]
   14088:	ldr	r9, [r5, r6, lsl #3]
   1408c:	ldr	r2, [r4, #40]	; 0x28
   14090:	ldr	ip, [r4, #44]	; 0x2c
   14094:	str	r3, [sp, #28]
   14098:	ldr	r3, [r4]
   1409c:	orr	r1, r1, #1
   140a0:	add	lr, r4, #8
   140a4:	str	r1, [sp, #36]	; 0x24
   140a8:	str	r1, [sp, #4]
   140ac:	str	r2, [sp, #12]
   140b0:	str	r3, [sp]
   140b4:	mov	r0, r7
   140b8:	mov	r1, r9
   140bc:	str	ip, [sp, #16]
   140c0:	str	lr, [sp, #8]
   140c4:	mov	r3, fp
   140c8:	mov	r2, sl
   140cc:	str	lr, [sp, #32]
   140d0:	bl	127d8 <close@plt+0x1634>
   140d4:	cmp	r9, r0
   140d8:	bhi	14144 <close@plt+0x2fa0>
   140dc:	ldr	r3, [pc, #160]	; 14184 <close@plt+0x2fe0>
   140e0:	add	r9, r0, #1
   140e4:	cmp	r7, r3
   140e8:	str	r9, [r5, r6, lsl #3]
   140ec:	beq	140f8 <close@plt+0x2f54>
   140f0:	mov	r0, r7
   140f4:	bl	10f34 <free@plt>
   140f8:	mov	r0, r9
   140fc:	bl	14e5c <close@plt+0x3cb8>
   14100:	ldr	lr, [sp, #28]
   14104:	ldr	ip, [r4, #44]	; 0x2c
   14108:	ldr	r5, [r4, #40]	; 0x28
   1410c:	mov	r3, fp
   14110:	mov	r2, sl
   14114:	mov	r1, r9
   14118:	str	r0, [lr, #4]
   1411c:	ldr	lr, [r4]
   14120:	ldr	r4, [sp, #32]
   14124:	str	ip, [sp, #16]
   14128:	str	r4, [sp, #8]
   1412c:	ldr	r4, [sp, #36]	; 0x24
   14130:	str	r5, [sp, #12]
   14134:	str	r4, [sp, #4]
   14138:	str	lr, [sp]
   1413c:	mov	r7, r0
   14140:	bl	127d8 <close@plt+0x1634>
   14144:	ldr	r3, [sp, #24]
   14148:	mov	r0, r7
   1414c:	str	r3, [r8]
   14150:	add	sp, sp, #44	; 0x2c
   14154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14158:	mov	r0, #0
   1415c:	bl	14eb8 <close@plt+0x3d14>
   14160:	ldr	r3, [pc, #32]	; 14188 <close@plt+0x2fe4>
   14164:	mov	r5, r0
   14168:	ldm	r3, {r0, r1}
   1416c:	str	r5, [r7]
   14170:	stm	r5, {r0, r1}
   14174:	b	14060 <close@plt+0x2ebc>
   14178:	bl	150a4 <close@plt+0x3f00>
   1417c:	bl	11198 <abort@plt>
   14180:	andeq	r7, r2, r4, lsl r1
   14184:	ldrdeq	r9, [r2], -ip
   14188:	andeq	r7, r2, ip, lsl r1
   1418c:	push	{r4, r5, r6, lr}
   14190:	mov	r5, r0
   14194:	bl	110cc <__errno_location@plt>
   14198:	cmp	r5, #0
   1419c:	mov	r1, #48	; 0x30
   141a0:	mov	r4, r0
   141a4:	ldr	r0, [pc, #16]	; 141bc <close@plt+0x3018>
   141a8:	ldr	r6, [r4]
   141ac:	movne	r0, r5
   141b0:	bl	15064 <close@plt+0x3ec0>
   141b4:	str	r6, [r4]
   141b8:	pop	{r4, r5, r6, pc}
   141bc:	ldrdeq	r9, [r2], -ip
   141c0:	ldr	r3, [pc, #12]	; 141d4 <close@plt+0x3030>
   141c4:	cmp	r0, #0
   141c8:	moveq	r0, r3
   141cc:	ldr	r0, [r0]
   141d0:	bx	lr
   141d4:	ldrdeq	r9, [r2], -ip
   141d8:	ldr	r3, [pc, #12]	; 141ec <close@plt+0x3048>
   141dc:	cmp	r0, #0
   141e0:	moveq	r0, r3
   141e4:	str	r1, [r0]
   141e8:	bx	lr
   141ec:	ldrdeq	r9, [r2], -ip
   141f0:	ldr	r3, [pc, #52]	; 1422c <close@plt+0x3088>
   141f4:	cmp	r0, #0
   141f8:	moveq	r0, r3
   141fc:	add	r3, r0, #8
   14200:	push	{lr}		; (str lr, [sp, #-4]!)
   14204:	lsr	lr, r1, #5
   14208:	and	r1, r1, #31
   1420c:	ldr	ip, [r3, lr, lsl #2]
   14210:	lsr	r0, ip, r1
   14214:	eor	r2, r2, r0
   14218:	and	r2, r2, #1
   1421c:	and	r0, r0, #1
   14220:	eor	r1, ip, r2, lsl r1
   14224:	str	r1, [r3, lr, lsl #2]
   14228:	pop	{pc}		; (ldr pc, [sp], #4)
   1422c:	ldrdeq	r9, [r2], -ip
   14230:	ldr	r3, [pc, #16]	; 14248 <close@plt+0x30a4>
   14234:	cmp	r0, #0
   14238:	movne	r3, r0
   1423c:	ldr	r0, [r3, #4]
   14240:	str	r1, [r3, #4]
   14244:	bx	lr
   14248:	ldrdeq	r9, [r2], -ip
   1424c:	ldr	r3, [pc, #44]	; 14280 <close@plt+0x30dc>
   14250:	cmp	r0, #0
   14254:	moveq	r0, r3
   14258:	mov	ip, #10
   1425c:	cmp	r2, #0
   14260:	cmpne	r1, #0
   14264:	str	ip, [r0]
   14268:	beq	14278 <close@plt+0x30d4>
   1426c:	str	r1, [r0, #40]	; 0x28
   14270:	str	r2, [r0, #44]	; 0x2c
   14274:	bx	lr
   14278:	push	{r4, lr}
   1427c:	bl	11198 <abort@plt>
   14280:	ldrdeq	r9, [r2], -ip
   14284:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14288:	sub	sp, sp, #24
   1428c:	ldr	ip, [pc, #108]	; 14300 <close@plt+0x315c>
   14290:	ldr	r4, [sp, #56]	; 0x38
   14294:	mov	r9, r2
   14298:	cmp	r4, #0
   1429c:	moveq	r4, ip
   142a0:	mov	sl, r3
   142a4:	mov	r7, r0
   142a8:	mov	r8, r1
   142ac:	bl	110cc <__errno_location@plt>
   142b0:	ldr	r3, [r4, #44]	; 0x2c
   142b4:	mov	r1, r8
   142b8:	ldr	r6, [r0]
   142bc:	str	r3, [sp, #16]
   142c0:	ldr	r2, [r4, #40]	; 0x28
   142c4:	add	r3, r4, #8
   142c8:	str	r3, [sp, #8]
   142cc:	str	r2, [sp, #12]
   142d0:	ldr	r2, [r4, #4]
   142d4:	mov	r5, r0
   142d8:	str	r2, [sp, #4]
   142dc:	ldr	ip, [r4]
   142e0:	mov	r3, sl
   142e4:	mov	r2, r9
   142e8:	mov	r0, r7
   142ec:	str	ip, [sp]
   142f0:	bl	127d8 <close@plt+0x1634>
   142f4:	str	r6, [r5]
   142f8:	add	sp, sp, #24
   142fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14300:	ldrdeq	r9, [r2], -ip
   14304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14308:	cmp	r3, #0
   1430c:	sub	sp, sp, #44	; 0x2c
   14310:	ldr	r4, [pc, #192]	; 143d8 <close@plt+0x3234>
   14314:	mov	r6, r2
   14318:	movne	r4, r3
   1431c:	mov	r9, r1
   14320:	mov	r8, r0
   14324:	bl	110cc <__errno_location@plt>
   14328:	ldr	r3, [r4, #44]	; 0x2c
   1432c:	ldr	r5, [r4, #4]
   14330:	add	sl, r4, #8
   14334:	cmp	r6, #0
   14338:	orreq	r5, r5, #1
   1433c:	mov	r1, #0
   14340:	ldr	r2, [r0]
   14344:	str	r3, [sp, #16]
   14348:	ldr	r3, [r4, #40]	; 0x28
   1434c:	stmib	sp, {r5, sl}
   14350:	str	r3, [sp, #12]
   14354:	ldr	r3, [r4]
   14358:	mov	r7, r0
   1435c:	str	r2, [sp, #28]
   14360:	str	r3, [sp]
   14364:	mov	r2, r8
   14368:	mov	r3, r9
   1436c:	mov	r0, r1
   14370:	bl	127d8 <close@plt+0x1634>
   14374:	add	r1, r0, #1
   14378:	mov	fp, r0
   1437c:	mov	r0, r1
   14380:	str	r1, [sp, #36]	; 0x24
   14384:	bl	14e5c <close@plt+0x3cb8>
   14388:	ldr	r3, [r4, #44]	; 0x2c
   1438c:	mov	r2, r8
   14390:	str	r3, [sp, #16]
   14394:	ldr	r3, [r4, #40]	; 0x28
   14398:	str	r5, [sp, #4]
   1439c:	str	r3, [sp, #12]
   143a0:	str	sl, [sp, #8]
   143a4:	ldr	ip, [r4]
   143a8:	ldr	r1, [sp, #36]	; 0x24
   143ac:	mov	r3, r9
   143b0:	str	ip, [sp]
   143b4:	str	r0, [sp, #32]
   143b8:	bl	127d8 <close@plt+0x1634>
   143bc:	ldr	r2, [sp, #28]
   143c0:	cmp	r6, #0
   143c4:	str	r2, [r7]
   143c8:	ldr	r0, [sp, #32]
   143cc:	strne	fp, [r6]
   143d0:	add	sp, sp, #44	; 0x2c
   143d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d8:	ldrdeq	r9, [r2], -ip
   143dc:	mov	r3, r2
   143e0:	mov	r2, #0
   143e4:	b	14304 <close@plt+0x3160>
   143e8:	push	{r4, r5, r6, r7, r8, lr}
   143ec:	ldr	r6, [pc, #112]	; 14464 <close@plt+0x32c0>
   143f0:	ldr	r3, [r6, #4]
   143f4:	ldr	r7, [r6]
   143f8:	cmp	r3, #1
   143fc:	ble	14420 <close@plt+0x327c>
   14400:	sub	r5, r7, #8
   14404:	add	r5, r5, r3, lsl #3
   14408:	mov	r4, r7
   1440c:	ldr	r0, [r4, #12]
   14410:	add	r4, r4, #8
   14414:	bl	10f34 <free@plt>
   14418:	cmp	r4, r5
   1441c:	bne	1440c <close@plt+0x3268>
   14420:	ldr	r0, [r7, #4]
   14424:	ldr	r4, [pc, #60]	; 14468 <close@plt+0x32c4>
   14428:	cmp	r0, r4
   1442c:	beq	14440 <close@plt+0x329c>
   14430:	bl	10f34 <free@plt>
   14434:	mov	r3, #256	; 0x100
   14438:	str	r4, [r6, #12]
   1443c:	str	r3, [r6, #8]
   14440:	ldr	r4, [pc, #36]	; 1446c <close@plt+0x32c8>
   14444:	cmp	r7, r4
   14448:	beq	14458 <close@plt+0x32b4>
   1444c:	mov	r0, r7
   14450:	bl	10f34 <free@plt>
   14454:	str	r4, [r6]
   14458:	mov	r3, #1
   1445c:	str	r3, [r6, #4]
   14460:	pop	{r4, r5, r6, r7, r8, pc}
   14464:	andeq	r7, r2, r4, lsl r1
   14468:	ldrdeq	r9, [r2], -ip
   1446c:	andeq	r7, r2, ip, lsl r1
   14470:	ldr	r3, [pc, #4]	; 1447c <close@plt+0x32d8>
   14474:	mvn	r2, #0
   14478:	b	13ff0 <close@plt+0x2e4c>
   1447c:	ldrdeq	r9, [r2], -ip
   14480:	ldr	r3, [pc]	; 14488 <close@plt+0x32e4>
   14484:	b	13ff0 <close@plt+0x2e4c>
   14488:	ldrdeq	r9, [r2], -ip
   1448c:	mov	r1, r0
   14490:	ldr	r3, [pc, #8]	; 144a0 <close@plt+0x32fc>
   14494:	mvn	r2, #0
   14498:	mov	r0, #0
   1449c:	b	13ff0 <close@plt+0x2e4c>
   144a0:	ldrdeq	r9, [r2], -ip
   144a4:	mov	r2, r1
   144a8:	ldr	r3, [pc, #8]	; 144b8 <close@plt+0x3314>
   144ac:	mov	r1, r0
   144b0:	mov	r0, #0
   144b4:	b	13ff0 <close@plt+0x2e4c>
   144b8:	ldrdeq	r9, [r2], -ip
   144bc:	push	{r4, r5, r6, lr}
   144c0:	sub	sp, sp, #56	; 0x38
   144c4:	ldr	r4, [pc, #68]	; 14510 <close@plt+0x336c>
   144c8:	mov	r6, r2
   144cc:	mov	r5, r0
   144d0:	ldr	r3, [r4]
   144d4:	add	r0, sp, #4
   144d8:	str	r3, [sp, #52]	; 0x34
   144dc:	bl	12668 <close@plt+0x14c4>
   144e0:	add	r3, sp, #4
   144e4:	mvn	r2, #0
   144e8:	mov	r1, r6
   144ec:	mov	r0, r5
   144f0:	bl	13ff0 <close@plt+0x2e4c>
   144f4:	ldr	r2, [sp, #52]	; 0x34
   144f8:	ldr	r3, [r4]
   144fc:	cmp	r2, r3
   14500:	bne	1450c <close@plt+0x3368>
   14504:	add	sp, sp, #56	; 0x38
   14508:	pop	{r4, r5, r6, pc}
   1450c:	bl	10f94 <__stack_chk_fail@plt>
   14510:	andeq	r6, r2, r8, lsl #30
   14514:	push	{r4, r5, r6, r7, lr}
   14518:	sub	sp, sp, #60	; 0x3c
   1451c:	ldr	r4, [pc, #72]	; 1456c <close@plt+0x33c8>
   14520:	mov	r6, r2
   14524:	mov	r7, r3
   14528:	ldr	ip, [r4]
   1452c:	mov	r5, r0
   14530:	add	r0, sp, #4
   14534:	str	ip, [sp, #52]	; 0x34
   14538:	bl	12668 <close@plt+0x14c4>
   1453c:	add	r3, sp, #4
   14540:	mov	r2, r7
   14544:	mov	r1, r6
   14548:	mov	r0, r5
   1454c:	bl	13ff0 <close@plt+0x2e4c>
   14550:	ldr	r2, [sp, #52]	; 0x34
   14554:	ldr	r3, [r4]
   14558:	cmp	r2, r3
   1455c:	bne	14568 <close@plt+0x33c4>
   14560:	add	sp, sp, #60	; 0x3c
   14564:	pop	{r4, r5, r6, r7, pc}
   14568:	bl	10f94 <__stack_chk_fail@plt>
   1456c:	andeq	r6, r2, r8, lsl #30
   14570:	mov	r2, r1
   14574:	mov	r1, r0
   14578:	mov	r0, #0
   1457c:	b	144bc <close@plt+0x3318>
   14580:	mov	r3, r2
   14584:	mov	r2, r1
   14588:	mov	r1, r0
   1458c:	mov	r0, #0
   14590:	b	14514 <close@plt+0x3370>
   14594:	push	{r4, r5, r6, r7, r8, r9, lr}
   14598:	mov	r4, r2
   1459c:	ldr	lr, [pc, #128]	; 14624 <close@plt+0x3480>
   145a0:	mov	r8, r0
   145a4:	mov	r9, r1
   145a8:	ldm	lr!, {r0, r1, r2, r3}
   145ac:	sub	sp, sp, #60	; 0x3c
   145b0:	add	ip, sp, #4
   145b4:	lsr	r6, r4, #5
   145b8:	stmia	ip!, {r0, r1, r2, r3}
   145bc:	add	r7, sp, #12
   145c0:	ldm	lr!, {r0, r1, r2, r3}
   145c4:	and	r4, r4, #31
   145c8:	ldr	r5, [pc, #88]	; 14628 <close@plt+0x3484>
   145cc:	stmia	ip!, {r0, r1, r2, r3}
   145d0:	ldm	lr, {r0, r1, r2, r3}
   145d4:	stm	ip, {r0, r1, r2, r3}
   145d8:	mov	r2, r9
   145dc:	ldr	r3, [r7, r6, lsl #2]
   145e0:	ldr	ip, [r5]
   145e4:	mov	r1, r8
   145e8:	mvn	r0, r3, lsr r4
   145ec:	and	r0, r0, #1
   145f0:	str	ip, [sp, #52]	; 0x34
   145f4:	eor	r4, r3, r0, lsl r4
   145f8:	add	r3, sp, #4
   145fc:	mov	r0, #0
   14600:	str	r4, [r7, r6, lsl #2]
   14604:	bl	13ff0 <close@plt+0x2e4c>
   14608:	ldr	r2, [sp, #52]	; 0x34
   1460c:	ldr	r3, [r5]
   14610:	cmp	r2, r3
   14614:	bne	14620 <close@plt+0x347c>
   14618:	add	sp, sp, #60	; 0x3c
   1461c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14620:	bl	10f94 <__stack_chk_fail@plt>
   14624:	ldrdeq	r9, [r2], -ip
   14628:	andeq	r6, r2, r8, lsl #30
   1462c:	mov	r2, r1
   14630:	mvn	r1, #0
   14634:	b	14594 <close@plt+0x33f0>
   14638:	mov	r2, #58	; 0x3a
   1463c:	mvn	r1, #0
   14640:	b	14594 <close@plt+0x33f0>
   14644:	mov	r2, #58	; 0x3a
   14648:	b	14594 <close@plt+0x33f0>
   1464c:	push	{r4, r5, r6, r7, r8, lr}
   14650:	sub	sp, sp, #104	; 0x68
   14654:	ldr	r5, [pc, #120]	; 146d4 <close@plt+0x3530>
   14658:	mov	r6, r0
   1465c:	mov	r0, sp
   14660:	ldr	r3, [r5]
   14664:	mov	r7, r2
   14668:	str	r3, [sp, #100]	; 0x64
   1466c:	bl	12668 <close@plt+0x14c4>
   14670:	mov	ip, sp
   14674:	add	lr, sp, #52	; 0x34
   14678:	ldm	ip!, {r0, r1, r2, r3}
   1467c:	stmia	lr!, {r0, r1, r2, r3}
   14680:	ldm	ip!, {r0, r1, r2, r3}
   14684:	ldr	r8, [sp, #64]	; 0x40
   14688:	stmia	lr!, {r0, r1, r2, r3}
   1468c:	mvn	r4, r8
   14690:	ldm	ip, {r0, r1, r2, r3}
   14694:	and	ip, r4, #67108864	; 0x4000000
   14698:	eor	ip, ip, r8
   1469c:	str	ip, [sp, #64]	; 0x40
   146a0:	stm	lr, {r0, r1, r2, r3}
   146a4:	add	r3, sp, #52	; 0x34
   146a8:	mvn	r2, #0
   146ac:	mov	r1, r7
   146b0:	mov	r0, r6
   146b4:	bl	13ff0 <close@plt+0x2e4c>
   146b8:	ldr	r2, [sp, #100]	; 0x64
   146bc:	ldr	r3, [r5]
   146c0:	cmp	r2, r3
   146c4:	bne	146d0 <close@plt+0x352c>
   146c8:	add	sp, sp, #104	; 0x68
   146cc:	pop	{r4, r5, r6, r7, r8, pc}
   146d0:	bl	10f94 <__stack_chk_fail@plt>
   146d4:	andeq	r6, r2, r8, lsl #30
   146d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   146dc:	mov	r6, r1
   146e0:	ldr	lr, [pc, #132]	; 1476c <close@plt+0x35c8>
   146e4:	mov	r5, r2
   146e8:	mov	r8, r0
   146ec:	mov	r9, r3
   146f0:	ldm	lr!, {r0, r1, r2, r3}
   146f4:	sub	sp, sp, #60	; 0x3c
   146f8:	add	ip, sp, #4
   146fc:	ldr	r4, [pc, #108]	; 14770 <close@plt+0x35cc>
   14700:	stmia	ip!, {r0, r1, r2, r3}
   14704:	mov	r7, #10
   14708:	ldm	lr!, {r0, r1, r2, r3}
   1470c:	cmp	r5, #0
   14710:	cmpne	r6, #0
   14714:	str	r7, [sp, #4]
   14718:	stmia	ip!, {r0, r1, r2, r3}
   1471c:	ldm	lr, {r0, r1, r2, r3}
   14720:	ldr	lr, [r4]
   14724:	stm	ip, {r0, r1, r2, r3}
   14728:	str	lr, [sp, #52]	; 0x34
   1472c:	beq	14768 <close@plt+0x35c4>
   14730:	add	r3, sp, #4
   14734:	ldr	r2, [sp, #88]	; 0x58
   14738:	mov	r1, r9
   1473c:	mov	r0, r8
   14740:	str	r6, [sp, #44]	; 0x2c
   14744:	str	r5, [sp, #48]	; 0x30
   14748:	bl	13ff0 <close@plt+0x2e4c>
   1474c:	ldr	r2, [sp, #52]	; 0x34
   14750:	ldr	r3, [r4]
   14754:	cmp	r2, r3
   14758:	bne	14764 <close@plt+0x35c0>
   1475c:	add	sp, sp, #60	; 0x3c
   14760:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14764:	bl	10f94 <__stack_chk_fail@plt>
   14768:	bl	11198 <abort@plt>
   1476c:	ldrdeq	r9, [r2], -ip
   14770:	andeq	r6, r2, r8, lsl #30
   14774:	push	{lr}		; (str lr, [sp, #-4]!)
   14778:	sub	sp, sp, #12
   1477c:	mvn	ip, #0
   14780:	str	ip, [sp]
   14784:	bl	146d8 <close@plt+0x3534>
   14788:	add	sp, sp, #12
   1478c:	pop	{pc}		; (ldr pc, [sp], #4)
   14790:	push	{lr}		; (str lr, [sp, #-4]!)
   14794:	sub	sp, sp, #12
   14798:	mvn	ip, #0
   1479c:	mov	r3, r2
   147a0:	str	ip, [sp]
   147a4:	mov	r2, r1
   147a8:	mov	r1, r0
   147ac:	mov	r0, #0
   147b0:	bl	146d8 <close@plt+0x3534>
   147b4:	add	sp, sp, #12
   147b8:	pop	{pc}		; (ldr pc, [sp], #4)
   147bc:	push	{lr}		; (str lr, [sp, #-4]!)
   147c0:	sub	sp, sp, #12
   147c4:	str	r3, [sp]
   147c8:	mov	r3, r2
   147cc:	mov	r2, r1
   147d0:	mov	r1, r0
   147d4:	mov	r0, #0
   147d8:	bl	146d8 <close@plt+0x3534>
   147dc:	add	sp, sp, #12
   147e0:	pop	{pc}		; (ldr pc, [sp], #4)
   147e4:	ldr	r3, [pc]	; 147ec <close@plt+0x3648>
   147e8:	b	13ff0 <close@plt+0x2e4c>
   147ec:	andeq	r7, r2, r4, lsr #2
   147f0:	mov	r2, r1
   147f4:	ldr	r3, [pc, #8]	; 14804 <close@plt+0x3660>
   147f8:	mov	r1, r0
   147fc:	mov	r0, #0
   14800:	b	13ff0 <close@plt+0x2e4c>
   14804:	andeq	r7, r2, r4, lsr #2
   14808:	ldr	r3, [pc, #4]	; 14814 <close@plt+0x3670>
   1480c:	mvn	r2, #0
   14810:	b	13ff0 <close@plt+0x2e4c>
   14814:	andeq	r7, r2, r4, lsr #2
   14818:	mov	r1, r0
   1481c:	ldr	r3, [pc, #8]	; 1482c <close@plt+0x3688>
   14820:	mvn	r2, #0
   14824:	mov	r0, #0
   14828:	b	13ff0 <close@plt+0x2e4c>
   1482c:	andeq	r7, r2, r4, lsr #2
   14830:	push	{r4, r5, r6, r7, r8, lr}
   14834:	mov	r8, r0
   14838:	ldr	r5, [pc, #84]	; 14894 <close@plt+0x36f0>
   1483c:	mov	r7, r1
   14840:	mov	r4, r2
   14844:	mov	r2, r4
   14848:	mov	r1, r7
   1484c:	mov	r0, r8
   14850:	bl	10f10 <read@plt>
   14854:	subs	r6, r0, #0
   14858:	bge	1488c <close@plt+0x36e8>
   1485c:	bl	110cc <__errno_location@plt>
   14860:	ldr	r3, [r0]
   14864:	cmp	r3, #4
   14868:	beq	14844 <close@plt+0x36a0>
   1486c:	cmp	r4, r5
   14870:	movls	r2, #0
   14874:	movhi	r2, #1
   14878:	cmp	r3, #22
   1487c:	movne	r2, #0
   14880:	cmp	r2, #0
   14884:	mov	r4, r5
   14888:	bne	14844 <close@plt+0x36a0>
   1488c:	mov	r0, r6
   14890:	pop	{r4, r5, r6, r7, r8, pc}
   14894:	svcvc	0x00f00000	; IMB
   14898:	push	{r4, lr}
   1489c:	bl	11048 <mkstemp64@plt>
   148a0:	pop	{r4, lr}
   148a4:	b	148c0 <close@plt+0x371c>
   148a8:	push	{r4, lr}
   148ac:	mov	r4, r1
   148b0:	bl	10fdc <mkostemp64@plt>
   148b4:	mov	r1, r4
   148b8:	pop	{r4, lr}
   148bc:	b	15318 <close@plt+0x4174>
   148c0:	cmp	r0, #2
   148c4:	push	{r4, r5, r6, r7, r8, lr}
   148c8:	mov	r4, r0
   148cc:	bls	148d8 <close@plt+0x3734>
   148d0:	mov	r0, r4
   148d4:	pop	{r4, r5, r6, r7, r8, pc}
   148d8:	bl	153f4 <close@plt+0x4250>
   148dc:	mov	r7, r0
   148e0:	bl	110cc <__errno_location@plt>
   148e4:	mov	r5, r0
   148e8:	mov	r0, r4
   148ec:	ldr	r6, [r5]
   148f0:	mov	r4, r7
   148f4:	bl	111a4 <close@plt>
   148f8:	str	r6, [r5]
   148fc:	mov	r0, r4
   14900:	pop	{r4, r5, r6, r7, r8, pc}
   14904:	push	{r4, r5, r6, lr}
   14908:	sub	sp, sp, #32
   1490c:	cmp	r1, #0
   14910:	mov	r5, r0
   14914:	ldr	r4, [sp, #48]	; 0x30
   14918:	ldr	r6, [sp, #52]	; 0x34
   1491c:	beq	149ac <close@plt+0x3808>
   14920:	strd	r2, [sp]
   14924:	mov	r3, r1
   14928:	ldr	r2, [pc, #828]	; 14c6c <close@plt+0x3ac8>
   1492c:	mov	r1, #1
   14930:	bl	11108 <__fprintf_chk@plt>
   14934:	mov	r2, #5
   14938:	ldr	r1, [pc, #816]	; 14c70 <close@plt+0x3acc>
   1493c:	mov	r0, #0
   14940:	bl	10f88 <dcgettext@plt>
   14944:	ldr	r3, [pc, #808]	; 14c74 <close@plt+0x3ad0>
   14948:	ldr	r2, [pc, #808]	; 14c78 <close@plt+0x3ad4>
   1494c:	str	r3, [sp]
   14950:	mov	r1, #1
   14954:	mov	r3, r0
   14958:	mov	r0, r5
   1495c:	bl	11108 <__fprintf_chk@plt>
   14960:	ldr	r1, [pc, #788]	; 14c7c <close@plt+0x3ad8>
   14964:	mov	r2, #5
   14968:	mov	r0, #0
   1496c:	bl	10f88 <dcgettext@plt>
   14970:	mov	r1, r5
   14974:	bl	10eec <fputs_unlocked@plt>
   14978:	cmp	r6, #9
   1497c:	ldrls	pc, [pc, r6, lsl #2]
   14980:	b	14c5c <close@plt+0x3ab8>
   14984:	andeq	r4, r1, r8, ror #24
   14988:	andeq	r4, r1, r0, lsr sl
   1498c:	andeq	r4, r1, ip, asr sl
   14990:	muleq	r1, r0, sl
   14994:	andeq	r4, r1, ip, asr #21
   14998:	andeq	r4, r1, ip, lsl #22
   1499c:	andeq	r4, r1, r4, asr fp
   149a0:	andeq	r4, r1, r4, lsr #23
   149a4:	strdeq	r4, [r1], -ip
   149a8:	andeq	r4, r1, r4, asr #19
   149ac:	str	r3, [sp]
   149b0:	mov	r1, #1
   149b4:	mov	r3, r2
   149b8:	ldr	r2, [pc, #704]	; 14c80 <close@plt+0x3adc>
   149bc:	bl	11108 <__fprintf_chk@plt>
   149c0:	b	14934 <close@plt+0x3790>
   149c4:	ldr	r1, [pc, #696]	; 14c84 <close@plt+0x3ae0>
   149c8:	mov	r2, #5
   149cc:	mov	r0, #0
   149d0:	bl	10f88 <dcgettext@plt>
   149d4:	ldr	r2, [r4, #32]
   149d8:	ldr	r3, [r4, #28]
   149dc:	ldr	r1, [r4, #24]
   149e0:	str	r2, [sp, #28]
   149e4:	ldr	r2, [r4, #20]
   149e8:	str	r3, [sp, #24]
   149ec:	ldr	r3, [r4, #16]
   149f0:	str	r1, [sp, #20]
   149f4:	ldr	r1, [r4, #12]
   149f8:	str	r2, [sp, #16]
   149fc:	ldr	r2, [r4, #8]
   14a00:	str	r3, [sp, #12]
   14a04:	ldr	r3, [r4, #4]
   14a08:	str	r1, [sp, #8]
   14a0c:	str	r2, [sp, #4]
   14a10:	str	r3, [sp]
   14a14:	mov	r1, #1
   14a18:	ldr	r3, [r4]
   14a1c:	mov	r2, r0
   14a20:	mov	r0, r5
   14a24:	bl	11108 <__fprintf_chk@plt>
   14a28:	add	sp, sp, #32
   14a2c:	pop	{r4, r5, r6, pc}
   14a30:	mov	r2, #5
   14a34:	ldr	r1, [pc, #588]	; 14c88 <close@plt+0x3ae4>
   14a38:	mov	r0, #0
   14a3c:	bl	10f88 <dcgettext@plt>
   14a40:	ldr	r3, [r4]
   14a44:	mov	r1, #1
   14a48:	mov	r2, r0
   14a4c:	mov	r0, r5
   14a50:	add	sp, sp, #32
   14a54:	pop	{r4, r5, r6, lr}
   14a58:	b	11108 <__fprintf_chk@plt>
   14a5c:	mov	r2, #5
   14a60:	ldr	r1, [pc, #548]	; 14c8c <close@plt+0x3ae8>
   14a64:	mov	r0, #0
   14a68:	bl	10f88 <dcgettext@plt>
   14a6c:	ldr	r2, [r4, #4]
   14a70:	ldr	r3, [r4]
   14a74:	mov	r1, #1
   14a78:	str	r2, [sp, #48]	; 0x30
   14a7c:	mov	r2, r0
   14a80:	mov	r0, r5
   14a84:	add	sp, sp, #32
   14a88:	pop	{r4, r5, r6, lr}
   14a8c:	b	11108 <__fprintf_chk@plt>
   14a90:	mov	r2, #5
   14a94:	ldr	r1, [pc, #500]	; 14c90 <close@plt+0x3aec>
   14a98:	mov	r0, #0
   14a9c:	bl	10f88 <dcgettext@plt>
   14aa0:	ldr	r2, [r4, #8]
   14aa4:	ldr	r3, [r4, #4]
   14aa8:	mov	r1, #1
   14aac:	str	r2, [sp, #52]	; 0x34
   14ab0:	str	r3, [sp, #48]	; 0x30
   14ab4:	ldr	r3, [r4]
   14ab8:	mov	r2, r0
   14abc:	mov	r0, r5
   14ac0:	add	sp, sp, #32
   14ac4:	pop	{r4, r5, r6, lr}
   14ac8:	b	11108 <__fprintf_chk@plt>
   14acc:	mov	r2, #5
   14ad0:	ldr	r1, [pc, #444]	; 14c94 <close@plt+0x3af0>
   14ad4:	mov	r0, #0
   14ad8:	bl	10f88 <dcgettext@plt>
   14adc:	ldr	r1, [r4, #12]
   14ae0:	ldr	r2, [r4, #8]
   14ae4:	ldr	r3, [r4, #4]
   14ae8:	str	r1, [sp, #8]
   14aec:	str	r2, [sp, #4]
   14af0:	str	r3, [sp]
   14af4:	mov	r1, #1
   14af8:	ldr	r3, [r4]
   14afc:	mov	r2, r0
   14b00:	mov	r0, r5
   14b04:	bl	11108 <__fprintf_chk@plt>
   14b08:	b	14a28 <close@plt+0x3884>
   14b0c:	mov	r2, #5
   14b10:	ldr	r1, [pc, #384]	; 14c98 <close@plt+0x3af4>
   14b14:	mov	r0, #0
   14b18:	bl	10f88 <dcgettext@plt>
   14b1c:	ldr	r3, [r4, #16]
   14b20:	ldr	r1, [r4, #12]
   14b24:	ldr	r2, [r4, #8]
   14b28:	str	r3, [sp, #12]
   14b2c:	ldr	r3, [r4, #4]
   14b30:	str	r1, [sp, #8]
   14b34:	str	r2, [sp, #4]
   14b38:	str	r3, [sp]
   14b3c:	mov	r1, #1
   14b40:	ldr	r3, [r4]
   14b44:	mov	r2, r0
   14b48:	mov	r0, r5
   14b4c:	bl	11108 <__fprintf_chk@plt>
   14b50:	b	14a28 <close@plt+0x3884>
   14b54:	mov	r2, #5
   14b58:	ldr	r1, [pc, #316]	; 14c9c <close@plt+0x3af8>
   14b5c:	mov	r0, #0
   14b60:	bl	10f88 <dcgettext@plt>
   14b64:	ldr	r2, [r4, #20]
   14b68:	ldr	r3, [r4, #16]
   14b6c:	ldr	r1, [r4, #12]
   14b70:	str	r2, [sp, #16]
   14b74:	ldr	r2, [r4, #8]
   14b78:	str	r3, [sp, #12]
   14b7c:	ldr	r3, [r4, #4]
   14b80:	str	r1, [sp, #8]
   14b84:	str	r2, [sp, #4]
   14b88:	str	r3, [sp]
   14b8c:	mov	r1, #1
   14b90:	ldr	r3, [r4]
   14b94:	mov	r2, r0
   14b98:	mov	r0, r5
   14b9c:	bl	11108 <__fprintf_chk@plt>
   14ba0:	b	14a28 <close@plt+0x3884>
   14ba4:	mov	r2, #5
   14ba8:	ldr	r1, [pc, #240]	; 14ca0 <close@plt+0x3afc>
   14bac:	mov	r0, #0
   14bb0:	bl	10f88 <dcgettext@plt>
   14bb4:	ldr	r1, [r4, #24]
   14bb8:	ldr	r2, [r4, #20]
   14bbc:	ldr	r3, [r4, #16]
   14bc0:	str	r1, [sp, #20]
   14bc4:	ldr	r1, [r4, #12]
   14bc8:	str	r2, [sp, #16]
   14bcc:	ldr	r2, [r4, #8]
   14bd0:	str	r3, [sp, #12]
   14bd4:	ldr	r3, [r4, #4]
   14bd8:	str	r1, [sp, #8]
   14bdc:	str	r2, [sp, #4]
   14be0:	str	r3, [sp]
   14be4:	mov	r1, #1
   14be8:	ldr	r3, [r4]
   14bec:	mov	r2, r0
   14bf0:	mov	r0, r5
   14bf4:	bl	11108 <__fprintf_chk@plt>
   14bf8:	b	14a28 <close@plt+0x3884>
   14bfc:	mov	r2, #5
   14c00:	ldr	r1, [pc, #156]	; 14ca4 <close@plt+0x3b00>
   14c04:	mov	r0, #0
   14c08:	bl	10f88 <dcgettext@plt>
   14c0c:	ldr	r3, [r4, #28]
   14c10:	ldr	r1, [r4, #24]
   14c14:	ldr	r2, [r4, #20]
   14c18:	str	r3, [sp, #24]
   14c1c:	ldr	r3, [r4, #16]
   14c20:	str	r1, [sp, #20]
   14c24:	ldr	r1, [r4, #12]
   14c28:	str	r2, [sp, #16]
   14c2c:	ldr	r2, [r4, #8]
   14c30:	str	r3, [sp, #12]
   14c34:	ldr	r3, [r4, #4]
   14c38:	str	r1, [sp, #8]
   14c3c:	str	r2, [sp, #4]
   14c40:	str	r3, [sp]
   14c44:	mov	r1, #1
   14c48:	ldr	r3, [r4]
   14c4c:	mov	r2, r0
   14c50:	mov	r0, r5
   14c54:	bl	11108 <__fprintf_chk@plt>
   14c58:	b	14a28 <close@plt+0x3884>
   14c5c:	mov	r2, #5
   14c60:	ldr	r1, [pc, #64]	; 14ca8 <close@plt+0x3b04>
   14c64:	b	149cc <close@plt+0x3828>
   14c68:	bl	11198 <abort@plt>
   14c6c:	andeq	r6, r1, ip, lsl #4
   14c70:	andeq	r6, r1, r0, lsr #4
   14c74:	andeq	r0, r0, r2, ror #15
   14c78:	strdeq	r6, [r1], -r4
   14c7c:	andeq	r6, r1, r4, lsr #4
   14c80:	andeq	r6, r1, r8, lsl r2
   14c84:	strdeq	r6, [r1], -ip
   14c88:	strdeq	r6, [r1], -r0
   14c8c:	andeq	r6, r1, r0, lsl #6
   14c90:	andeq	r6, r1, r8, lsl r3
   14c94:	andeq	r6, r1, r4, lsr r3
   14c98:	andeq	r6, r1, r4, asr r3
   14c9c:	andeq	r6, r1, r8, ror r3
   14ca0:	andeq	r6, r1, r0, lsr #7
   14ca4:	andeq	r6, r1, ip, asr #7
   14ca8:	andeq	r6, r1, r0, lsr r4
   14cac:	push	{r4, r5, lr}
   14cb0:	sub	sp, sp, #12
   14cb4:	ldr	r5, [sp, #24]
   14cb8:	ldr	ip, [r5]
   14cbc:	cmp	ip, #0
   14cc0:	beq	14cdc <close@plt+0x3b38>
   14cc4:	mov	lr, r5
   14cc8:	mov	ip, #0
   14ccc:	ldr	r4, [lr, #4]!
   14cd0:	add	ip, ip, #1
   14cd4:	cmp	r4, #0
   14cd8:	bne	14ccc <close@plt+0x3b28>
   14cdc:	stm	sp, {r5, ip}
   14ce0:	bl	14904 <close@plt+0x3760>
   14ce4:	add	sp, sp, #12
   14ce8:	pop	{r4, r5, pc}
   14cec:	push	{r4, r5, r6, lr}
   14cf0:	sub	sp, sp, #56	; 0x38
   14cf4:	ldr	r6, [pc, #88]	; 14d54 <close@plt+0x3bb0>
   14cf8:	ldr	r5, [sp, #72]	; 0x48
   14cfc:	add	r4, sp, #8
   14d00:	ldr	ip, [r6]
   14d04:	str	ip, [sp, #52]	; 0x34
   14d08:	mov	ip, #0
   14d0c:	ldr	lr, [r5], #4
   14d10:	cmp	lr, #0
   14d14:	str	lr, [r4, #4]!
   14d18:	beq	14d28 <close@plt+0x3b84>
   14d1c:	add	ip, ip, #1
   14d20:	cmp	ip, #10
   14d24:	bne	14d0c <close@plt+0x3b68>
   14d28:	add	lr, sp, #12
   14d2c:	str	ip, [sp, #4]
   14d30:	str	lr, [sp]
   14d34:	bl	14904 <close@plt+0x3760>
   14d38:	ldr	r2, [sp, #52]	; 0x34
   14d3c:	ldr	r3, [r6]
   14d40:	cmp	r2, r3
   14d44:	bne	14d50 <close@plt+0x3bac>
   14d48:	add	sp, sp, #56	; 0x38
   14d4c:	pop	{r4, r5, r6, pc}
   14d50:	bl	10f94 <__stack_chk_fail@plt>
   14d54:	andeq	r6, r2, r8, lsl #30
   14d58:	push	{r3}		; (str r3, [sp, #-4]!)
   14d5c:	mov	ip, #0
   14d60:	push	{r4, r5, r6, lr}
   14d64:	sub	sp, sp, #60	; 0x3c
   14d68:	ldr	r6, [pc, #100]	; 14dd4 <close@plt+0x3c30>
   14d6c:	add	r5, sp, #8
   14d70:	add	r4, sp, #80	; 0x50
   14d74:	ldr	r3, [r6]
   14d78:	str	r4, [sp, #8]
   14d7c:	str	r3, [sp, #52]	; 0x34
   14d80:	ldr	r3, [sp, #76]	; 0x4c
   14d84:	ldr	lr, [r4], #4
   14d88:	cmp	lr, #0
   14d8c:	str	lr, [r5, #4]!
   14d90:	beq	14da0 <close@plt+0x3bfc>
   14d94:	add	ip, ip, #1
   14d98:	cmp	ip, #10
   14d9c:	bne	14d84 <close@plt+0x3be0>
   14da0:	add	lr, sp, #12
   14da4:	str	ip, [sp, #4]
   14da8:	str	lr, [sp]
   14dac:	bl	14904 <close@plt+0x3760>
   14db0:	ldr	r2, [sp, #52]	; 0x34
   14db4:	ldr	r3, [r6]
   14db8:	cmp	r2, r3
   14dbc:	bne	14dd0 <close@plt+0x3c2c>
   14dc0:	add	sp, sp, #60	; 0x3c
   14dc4:	pop	{r4, r5, r6, lr}
   14dc8:	add	sp, sp, #4
   14dcc:	bx	lr
   14dd0:	bl	10f94 <__stack_chk_fail@plt>
   14dd4:	andeq	r6, r2, r8, lsl #30
   14dd8:	push	{r4, lr}
   14ddc:	mov	r2, #5
   14de0:	ldr	r1, [pc, #88]	; 14e40 <close@plt+0x3c9c>
   14de4:	mov	r0, #0
   14de8:	bl	10f88 <dcgettext@plt>
   14dec:	ldr	r2, [pc, #80]	; 14e44 <close@plt+0x3ca0>
   14df0:	mov	r1, r0
   14df4:	mov	r0, #1
   14df8:	bl	110f0 <__printf_chk@plt>
   14dfc:	mov	r2, #5
   14e00:	ldr	r1, [pc, #64]	; 14e48 <close@plt+0x3ca4>
   14e04:	mov	r0, #0
   14e08:	bl	10f88 <dcgettext@plt>
   14e0c:	ldr	r3, [pc, #56]	; 14e4c <close@plt+0x3ca8>
   14e10:	ldr	r2, [pc, #56]	; 14e50 <close@plt+0x3cac>
   14e14:	mov	r1, r0
   14e18:	mov	r0, #1
   14e1c:	bl	110f0 <__printf_chk@plt>
   14e20:	ldr	r1, [pc, #44]	; 14e54 <close@plt+0x3cb0>
   14e24:	mov	r2, #5
   14e28:	mov	r0, #0
   14e2c:	bl	10f88 <dcgettext@plt>
   14e30:	ldr	r3, [pc, #32]	; 14e58 <close@plt+0x3cb4>
   14e34:	pop	{r4, lr}
   14e38:	ldr	r1, [r3]
   14e3c:	b	10eec <fputs_unlocked@plt>
   14e40:	andeq	r6, r1, ip, ror #8
   14e44:	andeq	r6, r1, r4, lsl #9
   14e48:	muleq	r1, ip, r4
   14e4c:	andeq	r5, r1, r0, asr lr
   14e50:	andeq	r5, r1, r8, ror lr
   14e54:			; <UNDEFINED> instruction: 0x000164b0
   14e58:	andeq	r7, r2, ip, ror #2
   14e5c:	push	{r4, lr}
   14e60:	mov	r4, r0
   14e64:	bl	11054 <malloc@plt>
   14e68:	adds	r4, r4, #0
   14e6c:	movne	r4, #1
   14e70:	cmp	r0, #0
   14e74:	movne	r4, #0
   14e78:	cmp	r4, #0
   14e7c:	popeq	{r4, pc}
   14e80:	bl	150a4 <close@plt+0x3f00>
   14e84:	push	{r4, r5, r6, lr}
   14e88:	umull	r4, r5, r0, r1
   14e8c:	adds	r3, r5, #0
   14e90:	movne	r3, #1
   14e94:	cmp	r4, #0
   14e98:	blt	14eb0 <close@plt+0x3d0c>
   14e9c:	cmp	r3, #0
   14ea0:	bne	14eb0 <close@plt+0x3d0c>
   14ea4:	mul	r0, r1, r0
   14ea8:	pop	{r4, r5, r6, lr}
   14eac:	b	14e5c <close@plt+0x3cb8>
   14eb0:	bl	150a4 <close@plt+0x3f00>
   14eb4:	b	14e5c <close@plt+0x3cb8>
   14eb8:	adds	r3, r0, #0
   14ebc:	movne	r3, #1
   14ec0:	cmp	r1, #0
   14ec4:	movne	r3, #0
   14ec8:	cmp	r3, #0
   14ecc:	push	{r4, lr}
   14ed0:	bne	14ef8 <close@plt+0x3d54>
   14ed4:	mov	r4, r1
   14ed8:	bl	10fac <realloc@plt>
   14edc:	adds	r4, r4, #0
   14ee0:	movne	r4, #1
   14ee4:	cmp	r0, #0
   14ee8:	movne	r4, #0
   14eec:	cmp	r4, #0
   14ef0:	popeq	{r4, pc}
   14ef4:	bl	150a4 <close@plt+0x3f00>
   14ef8:	bl	10f34 <free@plt>
   14efc:	mov	r0, #0
   14f00:	pop	{r4, pc}
   14f04:	push	{r4, r5, r6, lr}
   14f08:	umull	r4, r5, r1, r2
   14f0c:	adds	r3, r5, #0
   14f10:	movne	r3, #1
   14f14:	cmp	r4, #0
   14f18:	blt	14f30 <close@plt+0x3d8c>
   14f1c:	cmp	r3, #0
   14f20:	bne	14f30 <close@plt+0x3d8c>
   14f24:	mul	r1, r2, r1
   14f28:	pop	{r4, r5, r6, lr}
   14f2c:	b	14eb8 <close@plt+0x3d14>
   14f30:	bl	150a4 <close@plt+0x3f00>
   14f34:	push	{r4, r5, r6, r7, r8, lr}
   14f38:	subs	r7, r0, #0
   14f3c:	mov	r6, r1
   14f40:	mov	r5, r2
   14f44:	ldr	r4, [r1]
   14f48:	beq	14f7c <close@plt+0x3dd8>
   14f4c:	mov	r1, r2
   14f50:	ldr	r0, [pc, #104]	; 14fc0 <close@plt+0x3e1c>
   14f54:	bl	1564c <close@plt+0x44a8>
   14f58:	cmp	r0, r4
   14f5c:	bls	14fa0 <close@plt+0x3dfc>
   14f60:	add	r3, r4, #1
   14f64:	add	r4, r3, r4, lsr #1
   14f68:	str	r4, [r6]
   14f6c:	mul	r1, r5, r4
   14f70:	mov	r0, r7
   14f74:	pop	{r4, r5, r6, r7, r8, lr}
   14f78:	b	14eb8 <close@plt+0x3d14>
   14f7c:	cmp	r4, #0
   14f80:	beq	14fa4 <close@plt+0x3e00>
   14f84:	umull	r0, r1, r4, r5
   14f88:	adds	r3, r1, #0
   14f8c:	movne	r3, #1
   14f90:	cmp	r0, #0
   14f94:	blt	14fa0 <close@plt+0x3dfc>
   14f98:	cmp	r3, #0
   14f9c:	beq	14f68 <close@plt+0x3dc4>
   14fa0:	bl	150a4 <close@plt+0x3f00>
   14fa4:	mov	r1, r2
   14fa8:	mov	r0, #64	; 0x40
   14fac:	bl	1564c <close@plt+0x44a8>
   14fb0:	cmp	r5, #64	; 0x40
   14fb4:	movls	r4, r0
   14fb8:	addhi	r4, r0, #1
   14fbc:	b	14f84 <close@plt+0x3de0>
   14fc0:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14fc4:	cmp	r0, #0
   14fc8:	ldr	r3, [r1]
   14fcc:	beq	14ff0 <close@plt+0x3e4c>
   14fd0:	ldr	r2, [pc, #60]	; 15014 <close@plt+0x3e70>
   14fd4:	cmp	r3, r2
   14fd8:	bhi	1500c <close@plt+0x3e68>
   14fdc:	add	r2, r3, #1
   14fe0:	add	r3, r2, r3, lsr #1
   14fe4:	str	r3, [r1]
   14fe8:	mov	r1, r3
   14fec:	b	14eb8 <close@plt+0x3d14>
   14ff0:	cmp	r3, #0
   14ff4:	bne	15008 <close@plt+0x3e64>
   14ff8:	mov	r3, #64	; 0x40
   14ffc:	str	r3, [r1]
   15000:	mov	r1, r3
   15004:	b	14eb8 <close@plt+0x3d14>
   15008:	bge	14fe4 <close@plt+0x3e40>
   1500c:	push	{r4, lr}
   15010:	bl	150a4 <close@plt+0x3f00>
   15014:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   15018:	push	{r4, lr}
   1501c:	mov	r4, r0
   15020:	bl	14e5c <close@plt+0x3cb8>
   15024:	mov	r2, r4
   15028:	mov	r1, #0
   1502c:	pop	{r4, lr}
   15030:	b	110e4 <memset@plt>
   15034:	push	{r4, r5, r6, lr}
   15038:	umull	r4, r5, r0, r1
   1503c:	adds	r3, r5, #0
   15040:	movne	r3, #1
   15044:	cmp	r4, #0
   15048:	blt	15060 <close@plt+0x3ebc>
   1504c:	cmp	r3, #0
   15050:	bne	15060 <close@plt+0x3ebc>
   15054:	bl	10ee0 <calloc@plt>
   15058:	cmp	r0, #0
   1505c:	popne	{r4, r5, r6, pc}
   15060:	bl	150a4 <close@plt+0x3f00>
   15064:	push	{r4, r5, r6, lr}
   15068:	mov	r4, r1
   1506c:	mov	r5, r0
   15070:	mov	r0, r1
   15074:	bl	14e5c <close@plt+0x3cb8>
   15078:	mov	r2, r4
   1507c:	mov	r1, r5
   15080:	pop	{r4, r5, r6, lr}
   15084:	b	10f4c <memcpy@plt>
   15088:	push	{r4, lr}
   1508c:	mov	r4, r0
   15090:	bl	110b4 <strlen@plt>
   15094:	add	r1, r0, #1
   15098:	mov	r0, r4
   1509c:	pop	{r4, lr}
   150a0:	b	15064 <close@plt+0x3ec0>
   150a4:	ldr	r3, [pc, #44]	; 150d8 <close@plt+0x3f34>
   150a8:	push	{r4, lr}
   150ac:	mov	r2, #5
   150b0:	ldr	r1, [pc, #36]	; 150dc <close@plt+0x3f38>
   150b4:	mov	r0, #0
   150b8:	ldr	r4, [r3]
   150bc:	bl	10f88 <dcgettext@plt>
   150c0:	ldr	r2, [pc, #24]	; 150e0 <close@plt+0x3f3c>
   150c4:	mov	r1, #0
   150c8:	mov	r3, r0
   150cc:	mov	r0, r4
   150d0:	bl	11024 <error@plt>
   150d4:	bl	11198 <abort@plt>
   150d8:	andeq	r7, r2, r0, lsl r1
   150dc:	andeq	r6, r1, r4, lsr #10
   150e0:	andeq	r6, r1, ip, ror #1
   150e4:	push	{r4, r5, r6, r7, r8, lr}
   150e8:	sub	sp, sp, #8
   150ec:	ldmib	r0, {ip, lr}
   150f0:	mov	r4, r0
   150f4:	ldr	r5, [sp, #32]
   150f8:	cmp	lr, ip
   150fc:	beq	15114 <close@plt+0x3f70>
   15100:	str	r5, [sp, #32]
   15104:	mov	r0, r4
   15108:	add	sp, sp, #8
   1510c:	pop	{r4, r5, r6, r7, r8, lr}
   15110:	b	11120 <fseeko64@plt>
   15114:	ldr	lr, [r0, #20]
   15118:	ldr	ip, [r0, #16]
   1511c:	cmp	lr, ip
   15120:	bne	15100 <close@plt+0x3f5c>
   15124:	ldr	r8, [r0, #36]	; 0x24
   15128:	cmp	r8, #0
   1512c:	bne	15100 <close@plt+0x3f5c>
   15130:	mov	r6, r2
   15134:	mov	r7, r3
   15138:	bl	110fc <fileno@plt>
   1513c:	mov	r2, r6
   15140:	mov	r3, r7
   15144:	str	r5, [sp]
   15148:	bl	10ff4 <lseek64@plt>
   1514c:	mvn	r3, #0
   15150:	mvn	r2, #0
   15154:	cmp	r1, r3
   15158:	cmpeq	r0, r2
   1515c:	beq	1517c <close@plt+0x3fd8>
   15160:	ldr	r3, [r4]
   15164:	strd	r0, [r4, #80]	; 0x50
   15168:	mov	r0, r8
   1516c:	bic	r3, r3, #16
   15170:	str	r3, [r4]
   15174:	add	sp, sp, #8
   15178:	pop	{r4, r5, r6, r7, r8, pc}
   1517c:	mvn	r0, #0
   15180:	b	15174 <close@plt+0x3fd0>
   15184:	push	{r4, r5, r6, r7, r8, lr}
   15188:	subs	r7, r0, #0
   1518c:	ldr	r5, [pc, #108]	; 15200 <close@plt+0x405c>
   15190:	sub	sp, sp, #8
   15194:	mov	r8, r1
   15198:	ldr	r1, [r5]
   1519c:	moveq	r7, sp
   151a0:	str	r1, [sp, #4]
   151a4:	mov	r0, r7
   151a8:	mov	r1, r8
   151ac:	mov	r6, r2
   151b0:	bl	11018 <mbrtowc@plt>
   151b4:	cmp	r6, #0
   151b8:	cmnne	r0, #3
   151bc:	mov	r4, r0
   151c0:	bhi	151e0 <close@plt+0x403c>
   151c4:	ldr	r2, [sp, #4]
   151c8:	ldr	r3, [r5]
   151cc:	mov	r0, r4
   151d0:	cmp	r2, r3
   151d4:	bne	151fc <close@plt+0x4058>
   151d8:	add	sp, sp, #8
   151dc:	pop	{r4, r5, r6, r7, r8, pc}
   151e0:	mov	r0, #0
   151e4:	bl	15374 <close@plt+0x41d0>
   151e8:	cmp	r0, #0
   151ec:	moveq	r4, #1
   151f0:	ldrbeq	r3, [r8]
   151f4:	streq	r3, [r7]
   151f8:	b	151c4 <close@plt+0x4020>
   151fc:	bl	10f94 <__stack_chk_fail@plt>
   15200:	andeq	r6, r2, r8, lsl #30
   15204:	push	{r4, r5, r6, lr}
   15208:	mov	r4, r0
   1520c:	bl	1100c <__fpending@plt>
   15210:	ldr	r5, [r4]
   15214:	and	r5, r5, #32
   15218:	mov	r6, r0
   1521c:	mov	r0, r4
   15220:	bl	15400 <close@plt+0x425c>
   15224:	cmp	r5, #0
   15228:	mov	r4, r0
   1522c:	bne	15258 <close@plt+0x40b4>
   15230:	cmp	r0, #0
   15234:	beq	15250 <close@plt+0x40ac>
   15238:	cmp	r6, #0
   1523c:	bne	15270 <close@plt+0x40cc>
   15240:	bl	110cc <__errno_location@plt>
   15244:	ldr	r4, [r0]
   15248:	subs	r4, r4, #9
   1524c:	mvnne	r4, #0
   15250:	mov	r0, r4
   15254:	pop	{r4, r5, r6, pc}
   15258:	cmp	r0, #0
   1525c:	bne	15270 <close@plt+0x40cc>
   15260:	bl	110cc <__errno_location@plt>
   15264:	str	r4, [r0]
   15268:	mvn	r4, #0
   1526c:	b	15250 <close@plt+0x40ac>
   15270:	mvn	r4, #0
   15274:	b	15250 <close@plt+0x40ac>
   15278:	ldrb	r3, [r0]
   1527c:	cmp	r3, #47	; 0x2f
   15280:	bne	15290 <close@plt+0x40ec>
   15284:	ldrb	r3, [r0, #1]!
   15288:	cmp	r3, #47	; 0x2f
   1528c:	beq	15284 <close@plt+0x40e0>
   15290:	cmp	r3, #0
   15294:	bxeq	lr
   15298:	mov	r2, r0
   1529c:	mov	r1, #0
   152a0:	cmp	r3, #47	; 0x2f
   152a4:	moveq	r1, #1
   152a8:	beq	152b8 <close@plt+0x4114>
   152ac:	cmp	r1, #0
   152b0:	movne	r0, r2
   152b4:	movne	r1, #0
   152b8:	ldrb	r3, [r2, #1]!
   152bc:	cmp	r3, #0
   152c0:	bne	152a0 <close@plt+0x40fc>
   152c4:	bx	lr
   152c8:	push	{r4, lr}
   152cc:	mov	r4, r0
   152d0:	bl	110b4 <strlen@plt>
   152d4:	cmp	r0, #1
   152d8:	popls	{r4, pc}
   152dc:	add	r2, r4, r0
   152e0:	mov	r3, r0
   152e4:	ldrb	r2, [r2, #-1]
   152e8:	cmp	r2, #47	; 0x2f
   152ec:	subeq	r3, r0, #2
   152f0:	addeq	r3, r4, r3
   152f4:	rsbeq	r1, r4, #1
   152f8:	popne	{r4, pc}
   152fc:	cmp	r3, r4
   15300:	add	r0, r1, r3
   15304:	popeq	{r4, pc}
   15308:	ldrb	r2, [r3], #-1
   1530c:	cmp	r2, #47	; 0x2f
   15310:	popne	{r4, pc}
   15314:	b	152fc <close@plt+0x4158>
   15318:	cmp	r0, #2
   1531c:	push	{r4, r5, r6, r7, r8, lr}
   15320:	mov	r4, r0
   15324:	bls	15330 <close@plt+0x418c>
   15328:	mov	r0, r4
   1532c:	pop	{r4, r5, r6, r7, r8, pc}
   15330:	bl	1535c <close@plt+0x41b8>
   15334:	mov	r7, r0
   15338:	bl	110cc <__errno_location@plt>
   1533c:	mov	r5, r0
   15340:	mov	r0, r4
   15344:	ldr	r6, [r5]
   15348:	mov	r4, r7
   1534c:	bl	111a4 <close@plt>
   15350:	str	r6, [r5]
   15354:	mov	r0, r4
   15358:	pop	{r4, r5, r6, r7, r8, pc}
   1535c:	ldr	r3, [pc, #12]	; 15370 <close@plt+0x41cc>
   15360:	ands	r1, r1, #524288	; 0x80000
   15364:	movne	r1, r3
   15368:	mov	r2, #3
   1536c:	b	154a0 <close@plt+0x42fc>
   15370:	andeq	r0, r0, r6, lsl #8
   15374:	push	{r4, lr}
   15378:	mov	r1, #0
   1537c:	bl	11138 <setlocale@plt>
   15380:	subs	r4, r0, #0
   15384:	beq	153b0 <close@plt+0x420c>
   15388:	ldr	r1, [pc, #40]	; 153b8 <close@plt+0x4214>
   1538c:	bl	10f04 <strcmp@plt>
   15390:	cmp	r0, #0
   15394:	popeq	{r4, pc}
   15398:	mov	r0, r4
   1539c:	ldr	r1, [pc, #24]	; 153bc <close@plt+0x4218>
   153a0:	bl	10f04 <strcmp@plt>
   153a4:	adds	r0, r0, #0
   153a8:	movne	r0, #1
   153ac:	pop	{r4, pc}
   153b0:	mov	r0, #1
   153b4:	pop	{r4, pc}
   153b8:	andeq	r6, r1, r8, lsr r5
   153bc:	andeq	r6, r1, ip, lsr r5
   153c0:	push	{r4, lr}
   153c4:	mov	r0, #14
   153c8:	bl	11150 <nl_langinfo@plt>
   153cc:	cmp	r0, #0
   153d0:	beq	153e8 <close@plt+0x4244>
   153d4:	ldrb	r2, [r0]
   153d8:	ldr	r3, [pc, #16]	; 153f0 <close@plt+0x424c>
   153dc:	cmp	r2, #0
   153e0:	moveq	r0, r3
   153e4:	pop	{r4, pc}
   153e8:	ldr	r0, [pc]	; 153f0 <close@plt+0x424c>
   153ec:	pop	{r4, pc}
   153f0:	andeq	r6, r1, r4, asr #10
   153f4:	mov	r2, #3
   153f8:	mov	r1, #0
   153fc:	b	154a0 <close@plt+0x42fc>
   15400:	push	{r4, r5, lr}
   15404:	sub	sp, sp, #12
   15408:	mov	r4, r0
   1540c:	bl	110fc <fileno@plt>
   15410:	cmp	r0, #0
   15414:	mov	r0, r4
   15418:	blt	15494 <close@plt+0x42f0>
   1541c:	bl	1106c <__freading@plt>
   15420:	cmp	r0, #0
   15424:	bne	15460 <close@plt+0x42bc>
   15428:	mov	r0, r4
   1542c:	bl	155ec <close@plt+0x4448>
   15430:	cmp	r0, #0
   15434:	beq	15490 <close@plt+0x42ec>
   15438:	bl	110cc <__errno_location@plt>
   1543c:	mov	r5, r0
   15440:	mov	r0, r4
   15444:	ldr	r4, [r5]
   15448:	bl	11114 <fclose@plt>
   1544c:	cmp	r4, #0
   15450:	mvnne	r0, #0
   15454:	strne	r4, [r5]
   15458:	add	sp, sp, #12
   1545c:	pop	{r4, r5, pc}
   15460:	mov	r0, r4
   15464:	bl	110fc <fileno@plt>
   15468:	mov	r3, #1
   1546c:	str	r3, [sp]
   15470:	mov	r2, #0
   15474:	mov	r3, #0
   15478:	bl	10ff4 <lseek64@plt>
   1547c:	mvn	r3, #0
   15480:	mvn	r2, #0
   15484:	cmp	r1, r3
   15488:	cmpeq	r0, r2
   1548c:	bne	15428 <close@plt+0x4284>
   15490:	mov	r0, r4
   15494:	add	sp, sp, #12
   15498:	pop	{r4, r5, lr}
   1549c:	b	11114 <fclose@plt>
   154a0:	push	{r1, r2, r3}
   154a4:	push	{r4, r5, r6, r7, r8, lr}
   154a8:	sub	sp, sp, #12
   154ac:	ldr	r4, [pc, #300]	; 155e0 <close@plt+0x443c>
   154b0:	ldr	r3, [pc, #300]	; 155e4 <close@plt+0x4440>
   154b4:	ldr	r1, [sp, #36]	; 0x24
   154b8:	ldr	r2, [r4]
   154bc:	cmp	r1, r3
   154c0:	add	r3, sp, #40	; 0x28
   154c4:	str	r2, [sp, #4]
   154c8:	str	r3, [sp]
   154cc:	bne	15598 <close@plt+0x43f4>
   154d0:	ldr	r6, [pc, #272]	; 155e8 <close@plt+0x4444>
   154d4:	add	r3, sp, #44	; 0x2c
   154d8:	str	r3, [sp]
   154dc:	ldr	r3, [r6]
   154e0:	ldr	r7, [sp, #40]	; 0x28
   154e4:	cmp	r3, #0
   154e8:	blt	1552c <close@plt+0x4388>
   154ec:	mov	r2, r7
   154f0:	mov	r8, r0
   154f4:	bl	1112c <fcntl64@plt>
   154f8:	subs	r5, r0, #0
   154fc:	blt	155a8 <close@plt+0x4404>
   15500:	mov	r3, #1
   15504:	str	r3, [r6]
   15508:	ldr	r2, [sp, #4]
   1550c:	ldr	r3, [r4]
   15510:	mov	r0, r5
   15514:	cmp	r2, r3
   15518:	bne	155dc <close@plt+0x4438>
   1551c:	add	sp, sp, #12
   15520:	pop	{r4, r5, r6, r7, r8, lr}
   15524:	add	sp, sp, #12
   15528:	bx	lr
   1552c:	mov	r2, r7
   15530:	mov	r1, #0
   15534:	bl	154a0 <close@plt+0x42fc>
   15538:	subs	r5, r0, #0
   1553c:	blt	15508 <close@plt+0x4364>
   15540:	ldr	r3, [r6]
   15544:	cmn	r3, #1
   15548:	bne	15508 <close@plt+0x4364>
   1554c:	mov	r1, #1
   15550:	mov	r0, r5
   15554:	bl	1112c <fcntl64@plt>
   15558:	subs	r2, r0, #0
   1555c:	blt	15578 <close@plt+0x43d4>
   15560:	orr	r2, r2, #1
   15564:	mov	r1, #2
   15568:	mov	r0, r5
   1556c:	bl	1112c <fcntl64@plt>
   15570:	cmn	r0, #1
   15574:	bne	15508 <close@plt+0x4364>
   15578:	bl	110cc <__errno_location@plt>
   1557c:	mov	r6, r0
   15580:	mov	r0, r5
   15584:	ldr	r7, [r6]
   15588:	mvn	r5, #0
   1558c:	bl	111a4 <close@plt>
   15590:	str	r7, [r6]
   15594:	b	15508 <close@plt+0x4364>
   15598:	ldr	r2, [sp, #40]	; 0x28
   1559c:	bl	1112c <fcntl64@plt>
   155a0:	mov	r5, r0
   155a4:	b	15508 <close@plt+0x4364>
   155a8:	bl	110cc <__errno_location@plt>
   155ac:	ldr	r3, [r0]
   155b0:	cmp	r3, #22
   155b4:	bne	15500 <close@plt+0x435c>
   155b8:	mov	r2, r7
   155bc:	mov	r0, r8
   155c0:	mov	r1, #0
   155c4:	bl	154a0 <close@plt+0x42fc>
   155c8:	subs	r5, r0, #0
   155cc:	mvnge	r3, #0
   155d0:	strge	r3, [r6]
   155d4:	bge	1554c <close@plt+0x43a8>
   155d8:	b	15508 <close@plt+0x4364>
   155dc:	bl	10f94 <__stack_chk_fail@plt>
   155e0:	andeq	r6, r2, r8, lsl #30
   155e4:	andeq	r0, r0, r6, lsl #8
   155e8:	andeq	r9, r2, ip, lsl #8
   155ec:	push	{r4, lr}
   155f0:	subs	r4, r0, #0
   155f4:	sub	sp, sp, #8
   155f8:	beq	15614 <close@plt+0x4470>
   155fc:	bl	1106c <__freading@plt>
   15600:	cmp	r0, #0
   15604:	beq	15614 <close@plt+0x4470>
   15608:	ldr	r3, [r4]
   1560c:	tst	r3, #256	; 0x100
   15610:	bne	15624 <close@plt+0x4480>
   15614:	mov	r0, r4
   15618:	add	sp, sp, #8
   1561c:	pop	{r4, lr}
   15620:	b	10f1c <fflush@plt>
   15624:	mov	r3, #1
   15628:	str	r3, [sp]
   1562c:	mov	r2, #0
   15630:	mov	r3, #0
   15634:	mov	r0, r4
   15638:	bl	150e4 <close@plt+0x3f40>
   1563c:	mov	r0, r4
   15640:	add	sp, sp, #8
   15644:	pop	{r4, lr}
   15648:	b	10f1c <fflush@plt>
   1564c:	subs	r2, r1, #1
   15650:	bxeq	lr
   15654:	bcc	1582c <close@plt+0x4688>
   15658:	cmp	r0, r1
   1565c:	bls	15810 <close@plt+0x466c>
   15660:	tst	r1, r2
   15664:	beq	1581c <close@plt+0x4678>
   15668:	clz	r3, r0
   1566c:	clz	r2, r1
   15670:	sub	r3, r2, r3
   15674:	rsbs	r3, r3, #31
   15678:	addne	r3, r3, r3, lsl #1
   1567c:	mov	r2, #0
   15680:	addne	pc, pc, r3, lsl #2
   15684:	nop			; (mov r0, r0)
   15688:	cmp	r0, r1, lsl #31
   1568c:	adc	r2, r2, r2
   15690:	subcs	r0, r0, r1, lsl #31
   15694:	cmp	r0, r1, lsl #30
   15698:	adc	r2, r2, r2
   1569c:	subcs	r0, r0, r1, lsl #30
   156a0:	cmp	r0, r1, lsl #29
   156a4:	adc	r2, r2, r2
   156a8:	subcs	r0, r0, r1, lsl #29
   156ac:	cmp	r0, r1, lsl #28
   156b0:	adc	r2, r2, r2
   156b4:	subcs	r0, r0, r1, lsl #28
   156b8:	cmp	r0, r1, lsl #27
   156bc:	adc	r2, r2, r2
   156c0:	subcs	r0, r0, r1, lsl #27
   156c4:	cmp	r0, r1, lsl #26
   156c8:	adc	r2, r2, r2
   156cc:	subcs	r0, r0, r1, lsl #26
   156d0:	cmp	r0, r1, lsl #25
   156d4:	adc	r2, r2, r2
   156d8:	subcs	r0, r0, r1, lsl #25
   156dc:	cmp	r0, r1, lsl #24
   156e0:	adc	r2, r2, r2
   156e4:	subcs	r0, r0, r1, lsl #24
   156e8:	cmp	r0, r1, lsl #23
   156ec:	adc	r2, r2, r2
   156f0:	subcs	r0, r0, r1, lsl #23
   156f4:	cmp	r0, r1, lsl #22
   156f8:	adc	r2, r2, r2
   156fc:	subcs	r0, r0, r1, lsl #22
   15700:	cmp	r0, r1, lsl #21
   15704:	adc	r2, r2, r2
   15708:	subcs	r0, r0, r1, lsl #21
   1570c:	cmp	r0, r1, lsl #20
   15710:	adc	r2, r2, r2
   15714:	subcs	r0, r0, r1, lsl #20
   15718:	cmp	r0, r1, lsl #19
   1571c:	adc	r2, r2, r2
   15720:	subcs	r0, r0, r1, lsl #19
   15724:	cmp	r0, r1, lsl #18
   15728:	adc	r2, r2, r2
   1572c:	subcs	r0, r0, r1, lsl #18
   15730:	cmp	r0, r1, lsl #17
   15734:	adc	r2, r2, r2
   15738:	subcs	r0, r0, r1, lsl #17
   1573c:	cmp	r0, r1, lsl #16
   15740:	adc	r2, r2, r2
   15744:	subcs	r0, r0, r1, lsl #16
   15748:	cmp	r0, r1, lsl #15
   1574c:	adc	r2, r2, r2
   15750:	subcs	r0, r0, r1, lsl #15
   15754:	cmp	r0, r1, lsl #14
   15758:	adc	r2, r2, r2
   1575c:	subcs	r0, r0, r1, lsl #14
   15760:	cmp	r0, r1, lsl #13
   15764:	adc	r2, r2, r2
   15768:	subcs	r0, r0, r1, lsl #13
   1576c:	cmp	r0, r1, lsl #12
   15770:	adc	r2, r2, r2
   15774:	subcs	r0, r0, r1, lsl #12
   15778:	cmp	r0, r1, lsl #11
   1577c:	adc	r2, r2, r2
   15780:	subcs	r0, r0, r1, lsl #11
   15784:	cmp	r0, r1, lsl #10
   15788:	adc	r2, r2, r2
   1578c:	subcs	r0, r0, r1, lsl #10
   15790:	cmp	r0, r1, lsl #9
   15794:	adc	r2, r2, r2
   15798:	subcs	r0, r0, r1, lsl #9
   1579c:	cmp	r0, r1, lsl #8
   157a0:	adc	r2, r2, r2
   157a4:	subcs	r0, r0, r1, lsl #8
   157a8:	cmp	r0, r1, lsl #7
   157ac:	adc	r2, r2, r2
   157b0:	subcs	r0, r0, r1, lsl #7
   157b4:	cmp	r0, r1, lsl #6
   157b8:	adc	r2, r2, r2
   157bc:	subcs	r0, r0, r1, lsl #6
   157c0:	cmp	r0, r1, lsl #5
   157c4:	adc	r2, r2, r2
   157c8:	subcs	r0, r0, r1, lsl #5
   157cc:	cmp	r0, r1, lsl #4
   157d0:	adc	r2, r2, r2
   157d4:	subcs	r0, r0, r1, lsl #4
   157d8:	cmp	r0, r1, lsl #3
   157dc:	adc	r2, r2, r2
   157e0:	subcs	r0, r0, r1, lsl #3
   157e4:	cmp	r0, r1, lsl #2
   157e8:	adc	r2, r2, r2
   157ec:	subcs	r0, r0, r1, lsl #2
   157f0:	cmp	r0, r1, lsl #1
   157f4:	adc	r2, r2, r2
   157f8:	subcs	r0, r0, r1, lsl #1
   157fc:	cmp	r0, r1
   15800:	adc	r2, r2, r2
   15804:	subcs	r0, r0, r1
   15808:	mov	r0, r2
   1580c:	bx	lr
   15810:	moveq	r0, #1
   15814:	movne	r0, #0
   15818:	bx	lr
   1581c:	clz	r2, r1
   15820:	rsb	r2, r2, #31
   15824:	lsr	r0, r0, r2
   15828:	bx	lr
   1582c:	cmp	r0, #0
   15830:	mvnne	r0, #0
   15834:	b	1592c <close@plt+0x4788>
   15838:	cmp	r1, #0
   1583c:	beq	1582c <close@plt+0x4688>
   15840:	push	{r0, r1, lr}
   15844:	bl	1564c <close@plt+0x44a8>
   15848:	pop	{r1, r2, lr}
   1584c:	mul	r3, r2, r0
   15850:	sub	r1, r1, r3
   15854:	bx	lr
   15858:	cmp	r3, #0
   1585c:	cmpeq	r2, #0
   15860:	bne	15884 <close@plt+0x46e0>
   15864:	cmp	r1, #0
   15868:	movlt	r1, #-2147483648	; 0x80000000
   1586c:	movlt	r0, #0
   15870:	blt	15880 <close@plt+0x46dc>
   15874:	cmpeq	r0, #0
   15878:	mvnne	r1, #-2147483648	; 0x80000000
   1587c:	mvnne	r0, #0
   15880:	b	1592c <close@plt+0x4788>
   15884:	sub	sp, sp, #8
   15888:	push	{sp, lr}
   1588c:	cmp	r1, #0
   15890:	blt	158b0 <close@plt+0x470c>
   15894:	cmp	r3, #0
   15898:	blt	158e4 <close@plt+0x4740>
   1589c:	bl	1593c <close@plt+0x4798>
   158a0:	ldr	lr, [sp, #4]
   158a4:	add	sp, sp, #8
   158a8:	pop	{r2, r3}
   158ac:	bx	lr
   158b0:	rsbs	r0, r0, #0
   158b4:	sbc	r1, r1, r1, lsl #1
   158b8:	cmp	r3, #0
   158bc:	blt	15908 <close@plt+0x4764>
   158c0:	bl	1593c <close@plt+0x4798>
   158c4:	ldr	lr, [sp, #4]
   158c8:	add	sp, sp, #8
   158cc:	pop	{r2, r3}
   158d0:	rsbs	r0, r0, #0
   158d4:	sbc	r1, r1, r1, lsl #1
   158d8:	rsbs	r2, r2, #0
   158dc:	sbc	r3, r3, r3, lsl #1
   158e0:	bx	lr
   158e4:	rsbs	r2, r2, #0
   158e8:	sbc	r3, r3, r3, lsl #1
   158ec:	bl	1593c <close@plt+0x4798>
   158f0:	ldr	lr, [sp, #4]
   158f4:	add	sp, sp, #8
   158f8:	pop	{r2, r3}
   158fc:	rsbs	r0, r0, #0
   15900:	sbc	r1, r1, r1, lsl #1
   15904:	bx	lr
   15908:	rsbs	r2, r2, #0
   1590c:	sbc	r3, r3, r3, lsl #1
   15910:	bl	1593c <close@plt+0x4798>
   15914:	ldr	lr, [sp, #4]
   15918:	add	sp, sp, #8
   1591c:	pop	{r2, r3}
   15920:	rsbs	r2, r2, #0
   15924:	sbc	r3, r3, r3, lsl #1
   15928:	bx	lr
   1592c:	push	{r1, lr}
   15930:	mov	r0, #8
   15934:	bl	10ef8 <raise@plt>
   15938:	pop	{r1, pc}
   1593c:	cmp	r1, r3
   15940:	cmpeq	r0, r2
   15944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15948:	mov	r4, r0
   1594c:	movcc	r0, #0
   15950:	mov	r5, r1
   15954:	ldr	lr, [sp, #36]	; 0x24
   15958:	movcc	r1, r0
   1595c:	bcc	15a58 <close@plt+0x48b4>
   15960:	cmp	r3, #0
   15964:	clzeq	ip, r2
   15968:	clzne	ip, r3
   1596c:	addeq	ip, ip, #32
   15970:	cmp	r5, #0
   15974:	clzeq	r1, r4
   15978:	addeq	r1, r1, #32
   1597c:	clzne	r1, r5
   15980:	sub	ip, ip, r1
   15984:	sub	sl, ip, #32
   15988:	lsl	r9, r3, ip
   1598c:	rsb	fp, ip, #32
   15990:	orr	r9, r9, r2, lsl sl
   15994:	orr	r9, r9, r2, lsr fp
   15998:	lsl	r8, r2, ip
   1599c:	cmp	r5, r9
   159a0:	cmpeq	r4, r8
   159a4:	movcc	r0, #0
   159a8:	movcc	r1, r0
   159ac:	bcc	159c8 <close@plt+0x4824>
   159b0:	mov	r0, #1
   159b4:	subs	r4, r4, r8
   159b8:	lsl	r1, r0, sl
   159bc:	orr	r1, r1, r0, lsr fp
   159c0:	lsl	r0, r0, ip
   159c4:	sbc	r5, r5, r9
   159c8:	cmp	ip, #0
   159cc:	beq	15a58 <close@plt+0x48b4>
   159d0:	lsr	r6, r8, #1
   159d4:	orr	r6, r6, r9, lsl #31
   159d8:	lsr	r7, r9, #1
   159dc:	mov	r2, ip
   159e0:	b	15a04 <close@plt+0x4860>
   159e4:	subs	r3, r4, r6
   159e8:	sbc	r8, r5, r7
   159ec:	adds	r3, r3, r3
   159f0:	adc	r8, r8, r8
   159f4:	adds	r4, r3, #1
   159f8:	adc	r5, r8, #0
   159fc:	subs	r2, r2, #1
   15a00:	beq	15a20 <close@plt+0x487c>
   15a04:	cmp	r5, r7
   15a08:	cmpeq	r4, r6
   15a0c:	bcs	159e4 <close@plt+0x4840>
   15a10:	adds	r4, r4, r4
   15a14:	adc	r5, r5, r5
   15a18:	subs	r2, r2, #1
   15a1c:	bne	15a04 <close@plt+0x4860>
   15a20:	lsr	r3, r4, ip
   15a24:	orr	r3, r3, r5, lsl fp
   15a28:	lsr	r2, r5, ip
   15a2c:	orr	r3, r3, r5, lsr sl
   15a30:	adds	r0, r0, r4
   15a34:	mov	r4, r3
   15a38:	lsl	r3, r2, ip
   15a3c:	orr	r3, r3, r4, lsl sl
   15a40:	lsl	ip, r4, ip
   15a44:	orr	r3, r3, r4, lsr fp
   15a48:	adc	r1, r1, r5
   15a4c:	subs	r0, r0, ip
   15a50:	mov	r5, r2
   15a54:	sbc	r1, r1, r3
   15a58:	cmp	lr, #0
   15a5c:	strdne	r4, [lr]
   15a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a68:	mov	r7, r0
   15a6c:	ldr	r6, [pc, #72]	; 15abc <close@plt+0x4918>
   15a70:	ldr	r5, [pc, #72]	; 15ac0 <close@plt+0x491c>
   15a74:	add	r6, pc, r6
   15a78:	add	r5, pc, r5
   15a7c:	sub	r6, r6, r5
   15a80:	mov	r8, r1
   15a84:	mov	r9, r2
   15a88:	bl	10eb4 <fdopen@plt-0x20>
   15a8c:	asrs	r6, r6, #2
   15a90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a94:	mov	r4, #0
   15a98:	add	r4, r4, #1
   15a9c:	ldr	r3, [r5], #4
   15aa0:	mov	r2, r9
   15aa4:	mov	r1, r8
   15aa8:	mov	r0, r7
   15aac:	blx	r3
   15ab0:	cmp	r6, r4
   15ab4:	bne	15a98 <close@plt+0x48f4>
   15ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15abc:	andeq	r1, r1, r8, lsl #9
   15ac0:	andeq	r1, r1, r0, lsl #9
   15ac4:	bx	lr
   15ac8:	ldr	r3, [pc, #12]	; 15adc <close@plt+0x4938>
   15acc:	mov	r1, #0
   15ad0:	add	r3, pc, r3
   15ad4:	ldr	r2, [r3]
   15ad8:	b	110d8 <__cxa_atexit@plt>
   15adc:	andeq	r1, r1, r0, lsr r6

Disassembly of section .fini:

00015ae0 <.fini>:
   15ae0:	push	{r3, lr}
   15ae4:	pop	{r3, pc}
