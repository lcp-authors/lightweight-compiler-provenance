
raspbian-preinstalled/systemd-cat:     file format elf32-littlearm


Disassembly of section .init:

00000a20 <.init>:
 a20:	push	{r3, lr}
 a24:	bl	13a0 <log_oom_internal@plt+0x7f8>
 a28:	pop	{r3, pc}

Disassembly of section .plt:

00000a2c <version@plt-0x14>:
 a2c:	push	{lr}		; (str lr, [sp, #-4]!)
 a30:	ldr	lr, [pc, #4]	; a3c <version@plt-0x4>
 a34:	add	lr, pc, lr
 a38:	ldr	pc, [lr, #8]!
 a3c:	andeq	r1, r1, r8, lsl #10

00000a40 <version@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #69632	; 0x11000
 a48:	ldr	pc, [ip, #1288]!	; 0x508

00000a4c <free@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #69632	; 0x11000
 a54:	ldr	pc, [ip, #1280]!	; 0x500

00000a58 <log_open@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #69632	; 0x11000
 a60:	ldr	pc, [ip, #1272]!	; 0x4f8

00000a64 <log_assert_failed_unreachable_realm@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #69632	; 0x11000
 a6c:	ldr	pc, [ip, #1264]!	; 0x4f0

00000a70 <log_level_from_string@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #69632	; 0x11000
 a78:	ldr	pc, [ip, #1256]!	; 0x4e8

00000a7c <ask_password_agent_close@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #69632	; 0x11000
 a84:	ldr	pc, [ip, #1248]!	; 0x4e0

00000a88 <polkit_agent_close@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #69632	; 0x11000
 a90:	ldr	pc, [ip, #1240]!	; 0x4d8

00000a94 <mac_selinux_finish@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #69632	; 0x11000
 a9c:	ldr	pc, [ip, #1232]!	; 0x4d0

00000aa0 <execl@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #69632	; 0x11000
 aa8:	ldr	pc, [ip, #1224]!	; 0x4c8

00000aac <log_get_max_level_realm@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #69632	; 0x11000
 ab4:	ldr	pc, [ip, #1216]!	; 0x4c0

00000ab8 <sd_journal_stream_fd@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #69632	; 0x11000
 ac0:	ldr	pc, [ip, #1208]!	; 0x4b8

00000ac4 <abort@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #69632	; 0x11000
 acc:	ldr	pc, [ip, #1200]!	; 0x4b0

00000ad0 <rearrange_stdio@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #69632	; 0x11000
 ad8:	ldr	pc, [ip, #1192]!	; 0x4a8

00000adc <safe_close@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #69632	; 0x11000
 ae4:	ldr	pc, [ip, #1184]!	; 0x4a0

00000ae8 <__stack_chk_fail@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #69632	; 0x11000
 af0:	ldr	pc, [ip, #1176]!	; 0x498

00000af4 <terminal_urlify_man@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #69632	; 0x11000
 afc:	ldr	pc, [ip, #1168]!	; 0x490

00000b00 <parse_boolean@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #69632	; 0x11000
 b08:	ldr	pc, [ip, #1160]!	; 0x488

00000b0c <getopt_long@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #69632	; 0x11000
 b14:	ldr	pc, [ip, #1152]!	; 0x480

00000b18 <pager_close@plt>:
 b18:	add	ip, pc, #0, 12
 b1c:	add	ip, ip, #69632	; 0x11000
 b20:	ldr	pc, [ip, #1144]!	; 0x478

00000b24 <fcntl64@plt>:
 b24:	add	ip, pc, #0, 12
 b28:	add	ip, ip, #69632	; 0x11000
 b2c:	ldr	pc, [ip, #1136]!	; 0x470

00000b30 <log_parse_environment_realm@plt>:
 b30:	add	ip, pc, #0, 12
 b34:	add	ip, ip, #69632	; 0x11000
 b38:	ldr	pc, [ip, #1128]!	; 0x468

00000b3c <__errno_location@plt>:
 b3c:	add	ip, pc, #0, 12
 b40:	add	ip, ip, #69632	; 0x11000
 b44:	ldr	pc, [ip, #1120]!	; 0x460

00000b48 <log_assert_failed_realm@plt>:
 b48:	add	ip, pc, #0, 12
 b4c:	add	ip, ip, #69632	; 0x11000
 b50:	ldr	pc, [ip, #1112]!	; 0x458

00000b54 <log_internal_realm@plt>:
 b54:	add	ip, pc, #0, 12
 b58:	add	ip, ip, #69632	; 0x11000
 b5c:	ldr	pc, [ip, #1104]!	; 0x450

00000b60 <dup3@plt>:
 b60:	add	ip, pc, #0, 12
 b64:	add	ip, ip, #69632	; 0x11000
 b68:	ldr	pc, [ip, #1096]!	; 0x448

00000b6c <__libc_start_main@plt>:
 b6c:	add	ip, pc, #0, 12
 b70:	add	ip, ip, #69632	; 0x11000
 b74:	ldr	pc, [ip, #1088]!	; 0x440

00000b78 <execvp@plt>:
 b78:	add	ip, pc, #0, 12
 b7c:	add	ip, ip, #69632	; 0x11000
 b80:	ldr	pc, [ip, #1080]!	; 0x438

00000b84 <__gmon_start__@plt>:
 b84:	add	ip, pc, #0, 12
 b88:	add	ip, ip, #69632	; 0x11000
 b8c:	ldr	pc, [ip, #1072]!	; 0x430

00000b90 <__cxa_finalize@plt>:
 b90:	add	ip, pc, #0, 12
 b94:	add	ip, ip, #69632	; 0x11000
 b98:	ldr	pc, [ip, #1064]!	; 0x428

00000b9c <__printf_chk@plt>:
 b9c:	add	ip, pc, #0, 12
 ba0:	add	ip, ip, #69632	; 0x11000
 ba4:	ldr	pc, [ip, #1056]!	; 0x420

00000ba8 <log_oom_internal@plt>:
 ba8:	add	ip, pc, #0, 12
 bac:	add	ip, ip, #69632	; 0x11000
 bb0:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00000bb4 <.text>:
     bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     bb8:	sub	sp, sp, #28
     bbc:	ldr	r5, [pc, #1708]	; 1270 <log_oom_internal@plt+0x6c8>
     bc0:	ldr	r3, [pc, #1708]	; 1274 <log_oom_internal@plt+0x6cc>
     bc4:	add	r5, pc, r5
     bc8:	mov	r8, r0
     bcc:	ldr	r7, [r5, r3]
     bd0:	mov	r0, #0
     bd4:	mov	r9, r1
     bd8:	ldr	r3, [r7]
     bdc:	str	r3, [sp, #20]
     be0:	bl	b30 <log_parse_environment_realm@plt>
     be4:	bl	a58 <log_open@plt>
     be8:	cmp	r8, #0
     bec:	blt	1048 <log_oom_internal@plt+0x4a0>
     bf0:	cmp	r9, #0
     bf4:	beq	1070 <log_oom_internal@plt+0x4c8>
     bf8:	ldr	sl, [pc, #1656]	; 1278 <log_oom_internal@plt+0x6d0>
     bfc:	ldr	r6, [pc, #1656]	; 127c <log_oom_internal@plt+0x6d4>
     c00:	ldr	fp, [pc, #1656]	; 1280 <log_oom_internal@plt+0x6d8>
     c04:	add	sl, pc, sl
     c08:	add	r6, pc, r6
     c0c:	add	fp, pc, fp
     c10:	mov	r4, #0
     c14:	str	r4, [sp]
     c18:	mov	r3, sl
     c1c:	mov	r2, r6
     c20:	mov	r1, r9
     c24:	mov	r0, r8
     c28:	bl	b0c <getopt_long@plt>
     c2c:	cmp	r0, #0
     c30:	blt	cb0 <log_oom_internal@plt+0x108>
     c34:	cmp	r0, #116	; 0x74
     c38:	beq	f94 <log_oom_internal@plt+0x3ec>
     c3c:	bgt	c80 <log_oom_internal@plt+0xd8>
     c40:	cmp	r0, #104	; 0x68
     c44:	beq	f34 <log_oom_internal@plt+0x38c>
     c48:	cmp	r0, #112	; 0x70
     c4c:	beq	e40 <log_oom_internal@plt+0x298>
     c50:	cmp	r0, #63	; 0x3f
     c54:	beq	eb0 <log_oom_internal@plt+0x308>
     c58:	ldr	r2, [pc, #1572]	; 1284 <log_oom_internal@plt+0x6dc>
     c5c:	ldr	r1, [pc, #1572]	; 1288 <log_oom_internal@plt+0x6e0>
     c60:	add	r2, pc, r2
     c64:	str	r2, [sp]
     c68:	ldr	r2, [pc, #1564]	; 128c <log_oom_internal@plt+0x6e4>
     c6c:	mov	r3, #120	; 0x78
     c70:	add	r2, pc, r2
     c74:	add	r1, pc, r1
     c78:	mov	r0, #0
     c7c:	bl	a64 <log_assert_failed_unreachable_realm@plt>
     c80:	ldr	r3, [pc, #1544]	; 1290 <log_oom_internal@plt+0x6e8>
     c84:	cmp	r0, r3
     c88:	beq	ec4 <log_oom_internal@plt+0x31c>
     c8c:	add	r3, r3, #1
     c90:	cmp	r0, r3
     c94:	beq	e10 <log_oom_internal@plt+0x268>
     c98:	cmp	r0, #256	; 0x100
     c9c:	bne	c58 <log_oom_internal@plt+0xb0>
     ca0:	bl	a40 <version@plt>
     ca4:	mov	r6, r0
     ca8:	cmp	r6, #0
     cac:	ble	eb4 <log_oom_internal@plt+0x30c>
     cb0:	ldr	r4, [pc, #1500]	; 1294 <log_oom_internal@plt+0x6ec>
     cb4:	ldr	r6, [pc, #1500]	; 1298 <log_oom_internal@plt+0x6f0>
     cb8:	add	r4, pc, r4
     cbc:	add	r6, pc, r6
     cc0:	ldrb	r2, [r4, #8]
     cc4:	ldr	r1, [r4]
     cc8:	ldr	r0, [r6]
     ccc:	bl	ab8 <sd_journal_stream_fd@plt>
     cd0:	subs	sl, r0, #0
     cd4:	blt	fc4 <log_oom_internal@plt+0x41c>
     cd8:	ldr	r1, [r4, #4]
     cdc:	cmp	r1, #0
     ce0:	blt	cf0 <log_oom_internal@plt+0x148>
     ce4:	ldr	r3, [r4]
     ce8:	cmp	r1, r3
     cec:	bne	fec <log_oom_internal@plt+0x444>
     cf0:	mov	r2, #3
     cf4:	ldr	r1, [pc, #1440]	; 129c <log_oom_internal@plt+0x6f4>
     cf8:	mov	r0, #2
     cfc:	bl	b24 <fcntl64@plt>
     d00:	mov	fp, sl
     d04:	mov	r4, r0
     d08:	mov	r2, fp
     d0c:	mov	r1, sl
     d10:	mov	r0, #0
     d14:	bl	ad0 <rearrange_stdio@plt>
     d18:	subs	r6, r0, #0
     d1c:	blt	1098 <log_oom_internal@plt+0x4f0>
     d20:	ldr	r3, [pc, #1400]	; 12a0 <log_oom_internal@plt+0x6f8>
     d24:	ldr	r3, [r5, r3]
     d28:	ldr	r3, [r3]
     d2c:	cmp	r8, r3
     d30:	bgt	10c0 <log_oom_internal@plt+0x518>
     d34:	ldr	r1, [pc, #1384]	; 12a4 <log_oom_internal@plt+0x6fc>
     d38:	mov	r2, #0
     d3c:	add	r1, pc, r1
     d40:	mov	r0, r1
     d44:	bl	aa0 <execl@plt>
     d48:	bl	b3c <__errno_location@plt>
     d4c:	cmp	r4, #0
     d50:	ldr	r6, [r0]
     d54:	blt	d68 <log_oom_internal@plt+0x1c0>
     d58:	mov	r2, #0
     d5c:	mov	r1, #2
     d60:	mov	r0, r4
     d64:	bl	b60 <dup3@plt>
     d68:	mov	r0, #0
     d6c:	bl	aac <log_get_max_level_realm@plt>
     d70:	cmp	r0, #2
     d74:	bgt	1114 <log_oom_internal@plt+0x56c>
     d78:	cmp	r6, #0
     d7c:	rsblt	r6, r6, #0
     d80:	mvn	fp, #0
     d84:	uxtb	r6, r6
     d88:	rsb	r6, r6, #0
     d8c:	mov	sl, fp
     d90:	mov	r0, r4
     d94:	bl	adc <safe_close@plt>
     d98:	mov	r0, fp
     d9c:	bl	adc <safe_close@plt>
     da0:	mov	r0, sl
     da4:	bl	adc <safe_close@plt>
     da8:	ldr	r3, [pc, #1272]	; 12a8 <log_oom_internal@plt+0x700>
     dac:	ldr	r4, [r5, r3]
     db0:	cmp	r4, #0
     db4:	beq	de4 <log_oom_internal@plt+0x23c>
     db8:	ldr	r3, [pc, #1260]	; 12ac <log_oom_internal@plt+0x704>
     dbc:	add	r4, r4, #3
     dc0:	bic	r4, r4, #3
     dc4:	ldr	r5, [r5, r3]
     dc8:	cmp	r4, r5
     dcc:	bcs	de4 <log_oom_internal@plt+0x23c>
     dd0:	ldm	r4, {r0, r3}
     dd4:	add	r4, r4, #8
     dd8:	blx	r3
     ddc:	cmp	r4, r5
     de0:	bcc	dd0 <log_oom_internal@plt+0x228>
     de4:	bl	a7c <ask_password_agent_close@plt>
     de8:	bl	a88 <polkit_agent_close@plt>
     dec:	bl	a94 <mac_selinux_finish@plt>
     df0:	bl	b18 <pager_close@plt>
     df4:	ldr	r2, [sp, #20]
     df8:	ldr	r3, [r7]
     dfc:	lsr	r0, r6, #31
     e00:	cmp	r2, r3
     e04:	bne	126c <log_oom_internal@plt+0x6c4>
     e08:	add	sp, sp, #28
     e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e10:	ldr	r3, [pc, #1176]	; 12b0 <log_oom_internal@plt+0x708>
     e14:	ldr	r3, [r5, r3]
     e18:	ldr	r0, [r3]
     e1c:	bl	b00 <parse_boolean@plt>
     e20:	subs	r1, r0, #0
     e24:	blt	11ec <log_oom_internal@plt+0x644>
     e28:	ldr	r3, [pc, #1156]	; 12b4 <log_oom_internal@plt+0x70c>
     e2c:	movne	r2, #1
     e30:	add	r3, pc, r3
     e34:	moveq	r2, #0
     e38:	strb	r2, [r3, #8]
     e3c:	b	c10 <log_oom_internal@plt+0x68>
     e40:	ldr	r3, [pc, #1128]	; 12b0 <log_oom_internal@plt+0x708>
     e44:	ldr	r3, [r5, r3]
     e48:	ldr	r0, [r3]
     e4c:	bl	a70 <log_level_from_string@plt>
     e50:	ldr	r3, [pc, #1120]	; 12b8 <log_oom_internal@plt+0x710>
     e54:	add	r3, pc, r3
     e58:	cmp	r0, #0
     e5c:	str	r0, [r3]
     e60:	bge	c10 <log_oom_internal@plt+0x68>
     e64:	mov	r0, r4
     e68:	bl	aac <log_get_max_level_realm@plt>
     e6c:	cmp	r0, #2
     e70:	ble	1258 <log_oom_internal@plt+0x6b0>
     e74:	ldr	r2, [pc, #1088]	; 12bc <log_oom_internal@plt+0x714>
     e78:	ldr	r3, [pc, #1088]	; 12c0 <log_oom_internal@plt+0x718>
     e7c:	add	r2, pc, r2
     e80:	str	r2, [sp, #4]
     e84:	add	r3, pc, r3
     e88:	ldr	r2, [pc, #1076]	; 12c4 <log_oom_internal@plt+0x71c>
     e8c:	add	r3, r3, #20
     e90:	str	r3, [sp]
     e94:	add	r2, pc, r2
     e98:	mov	r3, #95	; 0x5f
     e9c:	mov	r1, #1073741846	; 0x40000016
     ea0:	mov	r0, #3
     ea4:	bl	b54 <log_internal_realm@plt>
     ea8:	mov	r6, r0
     eac:	b	ca8 <log_oom_internal@plt+0x100>
     eb0:	mvn	r6, #21
     eb4:	mvn	r4, #0
     eb8:	mov	fp, r4
     ebc:	mov	sl, r4
     ec0:	b	d90 <log_oom_internal@plt+0x1e8>
     ec4:	ldr	r3, [pc, #996]	; 12b0 <log_oom_internal@plt+0x708>
     ec8:	ldr	r3, [r5, r3]
     ecc:	ldr	r0, [r3]
     ed0:	bl	a70 <log_level_from_string@plt>
     ed4:	ldr	r3, [pc, #1004]	; 12c8 <log_oom_internal@plt+0x720>
     ed8:	add	r3, pc, r3
     edc:	cmp	r0, #0
     ee0:	str	r0, [r3, #4]
     ee4:	bge	c10 <log_oom_internal@plt+0x68>
     ee8:	mov	r0, r4
     eec:	bl	aac <log_get_max_level_realm@plt>
     ef0:	cmp	r0, #2
     ef4:	ble	1258 <log_oom_internal@plt+0x6b0>
     ef8:	ldr	r2, [pc, #972]	; 12cc <log_oom_internal@plt+0x724>
     efc:	ldr	r3, [pc, #972]	; 12d0 <log_oom_internal@plt+0x728>
     f00:	add	r2, pc, r2
     f04:	str	r2, [sp, #4]
     f08:	add	r3, pc, r3
     f0c:	ldr	r2, [pc, #960]	; 12d4 <log_oom_internal@plt+0x72c>
     f10:	add	r3, r3, #20
     f14:	str	r3, [sp]
     f18:	add	r2, pc, r2
     f1c:	mov	r3, #102	; 0x66
     f20:	mov	r1, #1073741846	; 0x40000016
     f24:	mov	r0, #3
     f28:	bl	b54 <log_internal_realm@plt>
     f2c:	mov	r6, r0
     f30:	b	ca8 <log_oom_internal@plt+0x100>
     f34:	add	r2, sp, #24
     f38:	ldr	r1, [pc, #920]	; 12d8 <log_oom_internal@plt+0x730>
     f3c:	ldr	r0, [pc, #920]	; 12dc <log_oom_internal@plt+0x734>
     f40:	add	r1, pc, r1
     f44:	str	r4, [r2, #-8]!
     f48:	add	r0, pc, r0
     f4c:	bl	af4 <terminal_urlify_man@plt>
     f50:	cmp	r0, #0
     f54:	blt	1018 <log_oom_internal@plt+0x470>
     f58:	ldr	r2, [pc, #896]	; 12e0 <log_oom_internal@plt+0x738>
     f5c:	ldr	r1, [pc, #896]	; 12e4 <log_oom_internal@plt+0x73c>
     f60:	ldr	r3, [sp, #16]
     f64:	ldr	r2, [r5, r2]
     f68:	add	r1, pc, r1
     f6c:	mov	r0, #1
     f70:	ldr	r2, [r2]
     f74:	bl	b9c <__printf_chk@plt>
     f78:	mvn	r4, #0
     f7c:	ldr	r0, [sp, #16]
     f80:	bl	a4c <free@plt>
     f84:	mov	fp, r4
     f88:	mov	sl, r4
     f8c:	mov	r6, #0
     f90:	b	d90 <log_oom_internal@plt+0x1e8>
     f94:	ldr	r3, [pc, #788]	; 12b0 <log_oom_internal@plt+0x708>
     f98:	ldr	r3, [r5, r3]
     f9c:	ldr	r3, [r3]
     fa0:	cmp	r3, #0
     fa4:	beq	103c <log_oom_internal@plt+0x494>
     fa8:	ldrb	r2, [r3]
     fac:	cmp	r2, #0
     fb0:	beq	103c <log_oom_internal@plt+0x494>
     fb4:	ldr	r2, [pc, #812]	; 12e8 <log_oom_internal@plt+0x740>
     fb8:	add	r2, pc, r2
     fbc:	str	r3, [r2]
     fc0:	b	c10 <log_oom_internal@plt+0x68>
     fc4:	mov	r0, #0
     fc8:	bl	aac <log_get_max_level_realm@plt>
     fcc:	cmp	r0, #2
     fd0:	bgt	10d0 <log_oom_internal@plt+0x528>
     fd4:	rsb	r6, sl, #0
     fd8:	mvn	r4, #0
     fdc:	uxtb	r6, r6
     fe0:	rsb	r6, r6, #0
     fe4:	mov	fp, r4
     fe8:	b	d90 <log_oom_internal@plt+0x1e8>
     fec:	ldrb	r2, [r4, #8]
     ff0:	ldr	r0, [r6]
     ff4:	bl	ab8 <sd_journal_stream_fd@plt>
     ff8:	subs	fp, r0, #0
     ffc:	blt	1158 <log_oom_internal@plt+0x5b0>
    1000:	mov	r2, #3
    1004:	ldr	r1, [pc, #656]	; 129c <log_oom_internal@plt+0x6f4>
    1008:	mov	r0, #2
    100c:	bl	b24 <fcntl64@plt>
    1010:	mov	r4, r0
    1014:	b	d08 <log_oom_internal@plt+0x160>
    1018:	ldr	r3, [pc, #716]	; 12ec <log_oom_internal@plt+0x744>
    101c:	ldr	r1, [pc, #716]	; 12f0 <log_oom_internal@plt+0x748>
    1020:	add	r3, pc, r3
    1024:	mov	r0, r4
    1028:	add	r3, r3, #12
    102c:	mov	r2, #32
    1030:	add	r1, pc, r1
    1034:	bl	ba8 <log_oom_internal@plt>
    1038:	b	f78 <log_oom_internal@plt+0x3d0>
    103c:	mov	r3, #0
    1040:	str	r3, [fp]
    1044:	b	c10 <log_oom_internal@plt+0x68>
    1048:	ldr	r2, [pc, #676]	; 12f4 <log_oom_internal@plt+0x74c>
    104c:	ldr	r1, [pc, #676]	; 12f8 <log_oom_internal@plt+0x750>
    1050:	add	r2, pc, r2
    1054:	str	r2, [sp]
    1058:	ldr	r2, [pc, #668]	; 12fc <log_oom_internal@plt+0x754>
    105c:	mov	r3, #70	; 0x46
    1060:	add	r2, pc, r2
    1064:	add	r1, pc, r1
    1068:	mov	r0, #0
    106c:	bl	b48 <log_assert_failed_realm@plt>
    1070:	ldr	r3, [pc, #648]	; 1300 <log_oom_internal@plt+0x758>
    1074:	ldr	r2, [pc, #648]	; 1304 <log_oom_internal@plt+0x75c>
    1078:	ldr	r1, [pc, #648]	; 1308 <log_oom_internal@plt+0x760>
    107c:	add	r3, pc, r3
    1080:	str	r3, [sp]
    1084:	mov	r0, r9
    1088:	mov	r3, #71	; 0x47
    108c:	add	r2, pc, r2
    1090:	add	r1, pc, r1
    1094:	bl	b48 <log_assert_failed_realm@plt>
    1098:	mov	r0, #0
    109c:	bl	aac <log_get_max_level_realm@plt>
    10a0:	cmp	r0, #2
    10a4:	bgt	117c <log_oom_internal@plt+0x5d4>
    10a8:	rsb	r6, r6, #0
    10ac:	mvn	fp, #0
    10b0:	uxtb	r6, r6
    10b4:	rsb	r6, r6, #0
    10b8:	mov	sl, fp
    10bc:	b	d90 <log_oom_internal@plt+0x1e8>
    10c0:	add	r1, r9, r3, lsl #2
    10c4:	ldr	r0, [r9, r3, lsl #2]
    10c8:	bl	b78 <execvp@plt>
    10cc:	b	d48 <log_oom_internal@plt+0x1a0>
    10d0:	ldr	r2, [pc, #564]	; 130c <log_oom_internal@plt+0x764>
    10d4:	ldr	r3, [pc, #564]	; 1310 <log_oom_internal@plt+0x768>
    10d8:	add	r2, pc, r2
    10dc:	str	r2, [sp, #4]
    10e0:	add	r3, pc, r3
    10e4:	ldr	r2, [pc, #552]	; 1314 <log_oom_internal@plt+0x76c>
    10e8:	add	r3, r3, #32
    10ec:	str	r3, [sp]
    10f0:	add	r2, pc, r2
    10f4:	mov	r3, #139	; 0x8b
    10f8:	mov	r1, sl
    10fc:	mov	r0, #3
    1100:	bl	b54 <log_internal_realm@plt>
    1104:	mvn	r4, #0
    1108:	mov	fp, r4
    110c:	mov	r6, r0
    1110:	b	d90 <log_oom_internal@plt+0x1e8>
    1114:	ldr	r2, [pc, #508]	; 1318 <log_oom_internal@plt+0x770>
    1118:	ldr	r3, [pc, #508]	; 131c <log_oom_internal@plt+0x774>
    111c:	add	r2, pc, r2
    1120:	add	r3, pc, r3
    1124:	str	r2, [sp, #4]
    1128:	ldr	r2, [pc, #496]	; 1320 <log_oom_internal@plt+0x778>
    112c:	add	r3, r3, #32
    1130:	str	r3, [sp]
    1134:	rsb	r1, r6, #0
    1138:	mov	r3, #165	; 0xa5
    113c:	add	r2, pc, r2
    1140:	mov	r0, #3
    1144:	bl	b54 <log_internal_realm@plt>
    1148:	mvn	fp, #0
    114c:	mov	sl, fp
    1150:	mov	r6, r0
    1154:	b	d90 <log_oom_internal@plt+0x1e8>
    1158:	mov	r0, #0
    115c:	bl	aac <log_get_max_level_realm@plt>
    1160:	cmp	r0, #2
    1164:	bgt	11ac <log_oom_internal@plt+0x604>
    1168:	rsb	r6, fp, #0
    116c:	mvn	r4, #0
    1170:	uxtb	r6, r6
    1174:	rsb	r6, r6, #0
    1178:	b	d90 <log_oom_internal@plt+0x1e8>
    117c:	ldr	r2, [pc, #416]	; 1324 <log_oom_internal@plt+0x77c>
    1180:	ldr	r3, [pc, #416]	; 1328 <log_oom_internal@plt+0x780>
    1184:	add	r2, pc, r2
    1188:	add	r3, pc, r3
    118c:	str	r2, [sp, #4]
    1190:	ldr	r2, [pc, #404]	; 132c <log_oom_internal@plt+0x784>
    1194:	add	r3, r3, #32
    1198:	str	r3, [sp]
    119c:	mov	r1, r6
    11a0:	mov	r3, #153	; 0x99
    11a4:	add	r2, pc, r2
    11a8:	b	1140 <log_oom_internal@plt+0x598>
    11ac:	ldr	r2, [pc, #380]	; 1330 <log_oom_internal@plt+0x788>
    11b0:	ldr	r3, [pc, #380]	; 1334 <log_oom_internal@plt+0x78c>
    11b4:	add	r2, pc, r2
    11b8:	str	r2, [sp, #4]
    11bc:	add	r3, pc, r3
    11c0:	ldr	r2, [pc, #368]	; 1338 <log_oom_internal@plt+0x790>
    11c4:	add	r3, r3, #32
    11c8:	str	r3, [sp]
    11cc:	add	r2, pc, r2
    11d0:	mov	r3, #144	; 0x90
    11d4:	mov	r1, fp
    11d8:	mov	r0, #3
    11dc:	bl	b54 <log_internal_realm@plt>
    11e0:	mvn	r4, #0
    11e4:	mov	r6, r0
    11e8:	b	d90 <log_oom_internal@plt+0x1e8>
    11ec:	mov	r0, r4
    11f0:	str	r1, [sp, #12]
    11f4:	bl	aac <log_get_max_level_realm@plt>
    11f8:	ldr	r1, [sp, #12]
    11fc:	cmp	r0, #2
    1200:	bgt	1220 <log_oom_internal@plt+0x678>
    1204:	rsb	r6, r1, #0
    1208:	mvn	r4, #0
    120c:	uxtb	r6, r6
    1210:	rsb	r6, r6, #0
    1214:	mov	fp, r4
    1218:	mov	sl, r4
    121c:	b	d90 <log_oom_internal@plt+0x1e8>
    1220:	ldr	r2, [pc, #276]	; 133c <log_oom_internal@plt+0x794>
    1224:	ldr	r3, [pc, #276]	; 1340 <log_oom_internal@plt+0x798>
    1228:	add	r2, pc, r2
    122c:	str	r2, [sp, #4]
    1230:	add	r3, pc, r3
    1234:	ldr	r2, [pc, #264]	; 1344 <log_oom_internal@plt+0x79c>
    1238:	add	r3, r3, #20
    123c:	str	r3, [sp]
    1240:	add	r2, pc, r2
    1244:	mov	r3, #110	; 0x6e
    1248:	mov	r0, #3
    124c:	bl	b54 <log_internal_realm@plt>
    1250:	mov	r6, r0
    1254:	b	ca8 <log_oom_internal@plt+0x100>
    1258:	mvn	r4, #0
    125c:	mov	fp, r4
    1260:	mov	sl, r4
    1264:	mvn	r6, #21
    1268:	b	d90 <log_oom_internal@plt+0x1e8>
    126c:	bl	ae8 <__stack_chk_fail@plt>
    1270:	andeq	r1, r1, r8, ror r3
    1274:	andeq	r0, r0, r8, lsl #1
    1278:			; <UNDEFINED> instruction: 0x000111b8
    127c:	andeq	r0, r0, r8, ror #23
    1280:	andeq	r1, r1, r0, lsl #8
    1284:	andeq	r0, r0, r8, asr #17
    1288:	andeq	r0, r0, r8, ror #22
    128c:	ldrdeq	r0, [r0], -ip
    1290:	andeq	r0, r0, r1, lsl #2
    1294:	andeq	r1, r1, r4, asr #6
    1298:	andeq	r1, r1, r0, asr r3
    129c:	andeq	r0, r0, r6, lsl #8
    12a0:	andeq	r0, r0, ip, lsl #1
    12a4:	andeq	r0, r0, r4, lsl #22
    12a8:	muleq	r0, r8, r0
    12ac:	muleq	r0, ip, r0
    12b0:	muleq	r0, r4, r0
    12b4:	andeq	r1, r1, ip, asr #3
    12b8:	andeq	r1, r1, r8, lsr #3
    12bc:	strdeq	r0, [r0], -r4
    12c0:	andeq	r0, r0, r4, lsr #13
    12c4:			; <UNDEFINED> instruction: 0x000006b8
    12c8:	andeq	r1, r1, r4, lsr #2
    12cc:	muleq	r0, r0, r8
    12d0:	andeq	r0, r0, r0, lsr #12
    12d4:	andeq	r0, r0, r4, lsr r6
    12d8:	andeq	r0, r0, r8, lsr r6
    12dc:	andeq	r0, r0, r4, lsr r6
    12e0:	andeq	r0, r0, ip, lsr #1
    12e4:	andeq	r0, r0, r0, lsr #12
    12e8:	andeq	r1, r1, r4, asr r0
    12ec:	andeq	r0, r0, r8, lsl #10
    12f0:	andeq	r0, r0, ip, lsl r5
    12f4:	ldrdeq	r0, [r0], -r8
    12f8:	andeq	r0, r0, r0, lsl #10
    12fc:	andeq	r0, r0, ip, ror #9
    1300:	andeq	r0, r0, ip, lsr #9
    1304:	andeq	r0, r0, r0, asr #9
    1308:	andeq	r0, r0, r0, ror #9
    130c:	andeq	r0, r0, r0, lsr #14
    1310:	andeq	r0, r0, r8, asr #8
    1314:	andeq	r0, r0, ip, asr r4
    1318:	andeq	r0, r0, r0, lsr r7
    131c:	andeq	r0, r0, r8, lsl #8
    1320:	andeq	r0, r0, r0, lsl r4
    1324:	muleq	r0, r4, r6
    1328:	andeq	r0, r0, r0, lsr #7
    132c:	andeq	r0, r0, r8, lsr #7
    1330:	andeq	r0, r0, r4, asr #12
    1334:	andeq	r0, r0, ip, ror #6
    1338:	andeq	r0, r0, r0, lsl #7
    133c:	muleq	r0, r0, r5
    1340:	strdeq	r0, [r0], -r8
    1344:	andeq	r0, r0, ip, lsl #6
    1348:	mov	fp, #0
    134c:	mov	lr, #0
    1350:	pop	{r1}		; (ldr r1, [sp], #4)
    1354:	mov	r2, sp
    1358:	push	{r2}		; (str r2, [sp, #-4]!)
    135c:	push	{r0}		; (str r0, [sp, #-4]!)
    1360:	ldr	sl, [pc, #40]	; 1390 <log_oom_internal@plt+0x7e8>
    1364:	add	r3, pc, #36	; 0x24
    1368:	add	sl, sl, r3
    136c:	ldr	ip, [pc, #32]	; 1394 <log_oom_internal@plt+0x7ec>
    1370:	ldr	ip, [sl, ip]
    1374:	push	{ip}		; (str ip, [sp, #-4]!)
    1378:	ldr	r3, [pc, #24]	; 1398 <log_oom_internal@plt+0x7f0>
    137c:	ldr	r3, [sl, r3]
    1380:	ldr	r0, [pc, #20]	; 139c <log_oom_internal@plt+0x7f4>
    1384:	ldr	r0, [sl, r0]
    1388:	bl	b6c <__libc_start_main@plt>
    138c:	bl	ac4 <abort@plt>
    1390:			; <UNDEFINED> instruction: 0x00010bb4
    1394:	andeq	r0, r0, r8, lsr #1
    1398:	andeq	r0, r0, r0, lsr #1
    139c:	muleq	r0, r0, r0
    13a0:	ldr	r3, [pc, #20]	; 13bc <log_oom_internal@plt+0x814>
    13a4:	ldr	r2, [pc, #20]	; 13c0 <log_oom_internal@plt+0x818>
    13a8:	add	r3, pc, r3
    13ac:	ldr	r2, [r3, r2]
    13b0:	cmp	r2, #0
    13b4:	bxeq	lr
    13b8:	b	b84 <__gmon_start__@plt>
    13bc:	muleq	r1, r4, fp
    13c0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    13c4:	ldr	r0, [pc, #44]	; 13f8 <log_oom_internal@plt+0x850>
    13c8:	ldr	r3, [pc, #44]	; 13fc <log_oom_internal@plt+0x854>
    13cc:	add	r0, pc, r0
    13d0:	add	r3, pc, r3
    13d4:	cmp	r3, r0
    13d8:	ldr	r3, [pc, #32]	; 1400 <log_oom_internal@plt+0x858>
    13dc:	add	r3, pc, r3
    13e0:	bxeq	lr
    13e4:	ldr	r2, [pc, #24]	; 1404 <log_oom_internal@plt+0x85c>
    13e8:	ldr	r3, [r3, r2]
    13ec:	cmp	r3, #0
    13f0:	bxeq	lr
    13f4:	bx	r3
    13f8:	andeq	r0, r1, ip, lsr ip
    13fc:	andeq	r0, r1, r8, lsr ip
    1400:	andeq	r0, r1, r0, ror #22
    1404:	andeq	r0, r0, r4, lsr #1
    1408:	ldr	r0, [pc, #56]	; 1448 <log_oom_internal@plt+0x8a0>
    140c:	ldr	r3, [pc, #56]	; 144c <log_oom_internal@plt+0x8a4>
    1410:	add	r0, pc, r0
    1414:	add	r3, pc, r3
    1418:	sub	r1, r3, r0
    141c:	ldr	r3, [pc, #44]	; 1450 <log_oom_internal@plt+0x8a8>
    1420:	asr	r1, r1, #2
    1424:	add	r3, pc, r3
    1428:	add	r1, r1, r1, lsr #31
    142c:	asrs	r1, r1, #1
    1430:	bxeq	lr
    1434:	ldr	r2, [pc, #24]	; 1454 <log_oom_internal@plt+0x8ac>
    1438:	ldr	r3, [r3, r2]
    143c:	cmp	r3, #0
    1440:	bxeq	lr
    1444:	bx	r3
    1448:	strdeq	r0, [r1], -r8
    144c:	strdeq	r0, [r1], -r4
    1450:	andeq	r0, r1, r8, lsl fp
    1454:	strheq	r0, [r0], -r4
    1458:	ldr	r3, [pc, #76]	; 14ac <log_oom_internal@plt+0x904>
    145c:	ldr	r2, [pc, #76]	; 14b0 <log_oom_internal@plt+0x908>
    1460:	add	r3, pc, r3
    1464:	add	r2, pc, r2
    1468:	ldrb	r3, [r3]
    146c:	cmp	r3, #0
    1470:	bxne	lr
    1474:	ldr	r3, [pc, #56]	; 14b4 <log_oom_internal@plt+0x90c>
    1478:	push	{r4, lr}
    147c:	ldr	r3, [r2, r3]
    1480:	cmp	r3, #0
    1484:	beq	1494 <log_oom_internal@plt+0x8ec>
    1488:	ldr	r3, [pc, #40]	; 14b8 <log_oom_internal@plt+0x910>
    148c:	ldr	r0, [pc, r3]
    1490:	bl	b90 <__cxa_finalize@plt>
    1494:	bl	13c4 <log_oom_internal@plt+0x81c>
    1498:	ldr	r3, [pc, #28]	; 14bc <log_oom_internal@plt+0x914>
    149c:	mov	r2, #1
    14a0:	add	r3, pc, r3
    14a4:	strb	r2, [r3]
    14a8:	pop	{r4, pc}
    14ac:	andeq	r0, r1, r8, lsr #23
    14b0:	ldrdeq	r0, [r1], -r8
    14b4:	strheq	r0, [r0], -r8
    14b8:	andeq	r0, r1, ip, ror #22
    14bc:	andeq	r0, r1, r8, ror #22
    14c0:	b	1408 <log_oom_internal@plt+0x860>
    14c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    14c8:	mov	r7, r0
    14cc:	ldr	r6, [pc, #72]	; 151c <log_oom_internal@plt+0x974>
    14d0:	ldr	r5, [pc, #72]	; 1520 <log_oom_internal@plt+0x978>
    14d4:	add	r6, pc, r6
    14d8:	add	r5, pc, r5
    14dc:	sub	r6, r6, r5
    14e0:	mov	r8, r1
    14e4:	mov	r9, r2
    14e8:	bl	a20 <version@plt-0x20>
    14ec:	asrs	r6, r6, #2
    14f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    14f4:	mov	r4, #0
    14f8:	add	r4, r4, #1
    14fc:	ldr	r3, [r5], #4
    1500:	mov	r2, r9
    1504:	mov	r1, r8
    1508:	mov	r0, r7
    150c:	blx	r3
    1510:	cmp	r6, r4
    1514:	bne	14f8 <log_oom_internal@plt+0x950>
    1518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    151c:	andeq	r0, r1, r4, ror #17
    1520:	ldrdeq	r0, [r1], -ip
    1524:	bx	lr

Disassembly of section .fini:

00001528 <.fini>:
    1528:	push	{r3, lr}
    152c:	pop	{r3, pc}
