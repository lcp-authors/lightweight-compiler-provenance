
raspbian-preinstalled/getkeycodes:     file format elf32-littlearm


Disassembly of section .init:

00010638 <.init>:
   10638:	push	{r3, lr}
   1063c:	bl	10b28 <close@plt+0x3e0>
   10640:	pop	{r3, pc}

Disassembly of section .plt:

00010644 <strcmp@plt-0x14>:
   10644:	push	{lr}		; (str lr, [sp, #-4]!)
   10648:	ldr	lr, [pc, #4]	; 10654 <strcmp@plt-0x4>
   1064c:	add	lr, pc, lr
   10650:	ldr	pc, [lr, #8]!
   10654:	andeq	r1, r1, ip, lsr #19

00010658 <strcmp@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #69632	; 0x11000
   10660:	ldr	pc, [ip, #2476]!	; 0x9ac

00010664 <dcgettext@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #69632	; 0x11000
   1066c:	ldr	pc, [ip, #2468]!	; 0x9a4

00010670 <__stack_chk_fail@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2460]!	; 0x99c

0001067c <textdomain@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2452]!	; 0x994

00010688 <ioctl@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2444]!	; 0x98c

00010694 <__libc_start_main@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2436]!	; 0x984

000106a0 <strerror@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2428]!	; 0x97c

000106ac <__vfprintf_chk@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2420]!	; 0x974

000106b8 <__gmon_start__@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2412]!	; 0x96c

000106c4 <open@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2404]!	; 0x964

000106d0 <exit@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2396]!	; 0x95c

000106dc <__errno_location@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2388]!	; 0x954

000106e8 <putchar@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2380]!	; 0x94c

000106f4 <__printf_chk@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2372]!	; 0x944

00010700 <__fprintf_chk@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2364]!	; 0x93c

0001070c <setlocale@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2356]!	; 0x934

00010718 <strrchr@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2348]!	; 0x92c

00010724 <bindtextdomain@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2340]!	; 0x924

00010730 <isatty@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2332]!	; 0x91c

0001073c <abort@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2324]!	; 0x914

00010748 <close@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2316]!	; 0x90c

Disassembly of section .text:

00010754 <.text>:
   10754:	ldr	r3, [pc, #828]	; 10a98 <close@plt+0x350>
   10758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1075c:	sub	sp, sp, #20
   10760:	ldr	r4, [r1]
   10764:	ldr	r3, [r3]
   10768:	mov	r5, r0
   1076c:	mov	r6, r1
   10770:	mov	r0, r4
   10774:	mov	r1, #47	; 0x2f
   10778:	str	r3, [sp, #12]
   1077c:	bl	10718 <strrchr@plt>
   10780:	ldr	r7, [pc, #788]	; 10a9c <close@plt+0x354>
   10784:	ldr	r1, [pc, #788]	; 10aa0 <close@plt+0x358>
   10788:	cmp	r0, #0
   1078c:	addne	r4, r0, #1
   10790:	mov	r0, #6
   10794:	str	r4, [r7]
   10798:	bl	1070c <setlocale@plt>
   1079c:	ldr	r1, [pc, #768]	; 10aa4 <close@plt+0x35c>
   107a0:	ldr	r0, [pc, #768]	; 10aa8 <close@plt+0x360>
   107a4:	bl	10724 <bindtextdomain@plt>
   107a8:	ldr	r0, [pc, #760]	; 10aa8 <close@plt+0x360>
   107ac:	bl	1067c <textdomain@plt>
   107b0:	cmp	r5, #2
   107b4:	beq	109a8 <close@plt+0x260>
   107b8:	cmp	r5, #1
   107bc:	bne	109bc <close@plt+0x274>
   107c0:	mov	r0, #0
   107c4:	bl	10ca0 <close@plt+0x558>
   107c8:	subs	r6, r0, #0
   107cc:	blt	109ec <close@plt+0x2a4>
   107d0:	mov	r3, #0
   107d4:	add	r2, sp, #4
   107d8:	ldr	r1, [pc, #716]	; 10aac <close@plt+0x364>
   107dc:	mov	r0, r6
   107e0:	str	r3, [sp, #4]
   107e4:	str	r3, [sp, #8]
   107e8:	bl	10688 <ioctl@plt>
   107ec:	subs	r5, r0, #0
   107f0:	bne	10940 <close@plt+0x1f8>
   107f4:	ldr	r7, [pc, #688]	; 10aac <close@plt+0x364>
   107f8:	mov	r4, #1
   107fc:	b	10818 <close@plt+0xd0>
   10800:	ldr	r3, [sp, #8]
   10804:	cmp	r3, r4
   10808:	bne	10834 <close@plt+0xec>
   1080c:	add	r4, r4, #1
   10810:	cmp	r4, #89	; 0x59
   10814:	beq	10940 <close@plt+0x1f8>
   10818:	add	r2, sp, #4
   1081c:	mov	r1, r7
   10820:	mov	r0, r6
   10824:	strd	r4, [sp, #4]
   10828:	bl	10688 <ioctl@plt>
   1082c:	cmp	r0, #0
   10830:	beq	10800 <close@plt+0xb8>
   10834:	mov	r2, #5
   10838:	ldr	r1, [pc, #624]	; 10ab0 <close@plt+0x368>
   1083c:	mov	r0, #0
   10840:	bl	10664 <dcgettext@plt>
   10844:	mov	r1, r0
   10848:	mov	r0, #1
   1084c:	bl	106f4 <__printf_chk@plt>
   10850:	cmp	r4, #1
   10854:	bne	10980 <close@plt+0x238>
   10858:	ldr	r9, [pc, #596]	; 10ab4 <close@plt+0x36c>
   1085c:	ldr	r8, [pc, #596]	; 10ab8 <close@plt+0x370>
   10860:	ldr	sl, [pc, #596]	; 10abc <close@plt+0x374>
   10864:	bic	fp, r4, #7
   10868:	b	108b8 <close@plt+0x170>
   1086c:	mov	r5, #0
   10870:	add	r2, sp, #4
   10874:	ldr	r1, [pc, #560]	; 10aac <close@plt+0x364>
   10878:	mov	r0, r6
   1087c:	str	fp, [sp, #4]
   10880:	str	r5, [sp, #8]
   10884:	bl	10688 <ioctl@plt>
   10888:	cmp	r0, r5
   1088c:	beq	1092c <close@plt+0x1e4>
   10890:	bl	106dc <__errno_location@plt>
   10894:	ldr	r7, [r0]
   10898:	cmp	r7, #22
   1089c:	bne	10a40 <close@plt+0x2f8>
   108a0:	mov	r1, r8
   108a4:	mov	r0, #1
   108a8:	bl	106f4 <__printf_chk@plt>
   108ac:	add	fp, fp, #1
   108b0:	cmp	fp, #256	; 0x100
   108b4:	beq	10904 <close@plt+0x1bc>
   108b8:	cmp	fp, #128	; 0x80
   108bc:	beq	10a10 <close@plt+0x2c8>
   108c0:	tst	fp, #7
   108c4:	bne	108e0 <close@plt+0x198>
   108c8:	cmp	fp, #127	; 0x7f
   108cc:	bhi	10a2c <close@plt+0x2e4>
   108d0:	mov	r2, fp
   108d4:	mov	r1, r9
   108d8:	mov	r0, #1
   108dc:	bl	106f4 <__printf_chk@plt>
   108e0:	cmp	fp, r4
   108e4:	bcs	1086c <close@plt+0x124>
   108e8:	mov	r2, fp
   108ec:	mov	r1, sl
   108f0:	mov	r0, #1
   108f4:	add	fp, fp, #1
   108f8:	bl	106f4 <__printf_chk@plt>
   108fc:	cmp	fp, #256	; 0x100
   10900:	bne	108b8 <close@plt+0x170>
   10904:	mov	r0, #10
   10908:	bl	106e8 <putchar@plt>
   1090c:	ldr	r3, [pc, #388]	; 10a98 <close@plt+0x350>
   10910:	ldr	r2, [sp, #12]
   10914:	mov	r0, #0
   10918:	ldr	r3, [r3]
   1091c:	cmp	r2, r3
   10920:	bne	10a6c <close@plt+0x324>
   10924:	add	sp, sp, #20
   10928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1092c:	ldr	r2, [sp, #8]
   10930:	mov	r1, sl
   10934:	mov	r0, #1
   10938:	bl	106f4 <__printf_chk@plt>
   1093c:	b	108ac <close@plt+0x164>
   10940:	mov	r2, #5
   10944:	ldr	r1, [pc, #356]	; 10ab0 <close@plt+0x368>
   10948:	mov	r0, #0
   1094c:	bl	10664 <dcgettext@plt>
   10950:	mov	r4, #89	; 0x59
   10954:	mov	r1, r0
   10958:	mov	r0, #1
   1095c:	bl	106f4 <__printf_chk@plt>
   10960:	mov	r2, #5
   10964:	ldr	r1, [pc, #340]	; 10ac0 <close@plt+0x378>
   10968:	mov	r0, #0
   1096c:	bl	10664 <dcgettext@plt>
   10970:	mov	r1, r0
   10974:	mov	r0, #1
   10978:	bl	106f4 <__printf_chk@plt>
   1097c:	b	10858 <close@plt+0x110>
   10980:	mov	r2, #5
   10984:	ldr	r1, [pc, #312]	; 10ac4 <close@plt+0x37c>
   10988:	mov	r0, #0
   1098c:	bl	10664 <dcgettext@plt>
   10990:	sub	r3, r4, #1
   10994:	mov	r2, r3
   10998:	mov	r1, r0
   1099c:	mov	r0, #1
   109a0:	bl	106f4 <__printf_chk@plt>
   109a4:	b	10858 <close@plt+0x110>
   109a8:	ldr	r0, [r6, #4]
   109ac:	ldr	r1, [pc, #276]	; 10ac8 <close@plt+0x380>
   109b0:	bl	10658 <strcmp@plt>
   109b4:	subs	r4, r0, #0
   109b8:	beq	10a70 <close@plt+0x328>
   109bc:	ldr	r3, [pc, #264]	; 10acc <close@plt+0x384>
   109c0:	mov	r2, #5
   109c4:	ldr	r1, [pc, #260]	; 10ad0 <close@plt+0x388>
   109c8:	mov	r0, #0
   109cc:	ldr	r4, [r3]
   109d0:	bl	10664 <dcgettext@plt>
   109d4:	mov	r1, #1
   109d8:	mov	r2, r0
   109dc:	mov	r0, r4
   109e0:	bl	10700 <__fprintf_chk@plt>
   109e4:	mov	r0, #1
   109e8:	bl	106d0 <exit@plt>
   109ec:	mov	r2, #5
   109f0:	ldr	r1, [pc, #220]	; 10ad4 <close@plt+0x38c>
   109f4:	mov	r0, #0
   109f8:	bl	10664 <dcgettext@plt>
   109fc:	mov	r1, #0
   10a00:	mov	r2, r0
   10a04:	mov	r0, r5
   10a08:	bl	10e64 <close@plt+0x71c>
   10a0c:	b	107d0 <close@plt+0x88>
   10a10:	ldr	r1, [pc, #192]	; 10ad8 <close@plt+0x390>
   10a14:	mov	r2, #5
   10a18:	mov	r0, #0
   10a1c:	bl	10664 <dcgettext@plt>
   10a20:	mov	r1, r0
   10a24:	mov	r0, #1
   10a28:	bl	106f4 <__printf_chk@plt>
   10a2c:	sub	r2, fp, #128	; 0x80
   10a30:	ldr	r1, [pc, #164]	; 10adc <close@plt+0x394>
   10a34:	mov	r0, #1
   10a38:	bl	106f4 <__printf_chk@plt>
   10a3c:	b	108e0 <close@plt+0x198>
   10a40:	mov	r2, #5
   10a44:	ldr	r1, [pc, #148]	; 10ae0 <close@plt+0x398>
   10a48:	mov	r0, r5
   10a4c:	bl	10664 <dcgettext@plt>
   10a50:	mov	r3, fp
   10a54:	mov	r1, r7
   10a58:	mov	r2, r0
   10a5c:	mov	r0, #1
   10a60:	bl	10e64 <close@plt+0x71c>
   10a64:	mov	r0, #1
   10a68:	bl	106d0 <exit@plt>
   10a6c:	bl	10670 <__stack_chk_fail@plt>
   10a70:	mov	r2, #5
   10a74:	ldr	r1, [pc, #104]	; 10ae4 <close@plt+0x39c>
   10a78:	bl	10664 <dcgettext@plt>
   10a7c:	ldr	r2, [r7]
   10a80:	ldr	r3, [pc, #96]	; 10ae8 <close@plt+0x3a0>
   10a84:	mov	r1, r0
   10a88:	mov	r0, #1
   10a8c:	bl	106f4 <__printf_chk@plt>
   10a90:	mov	r0, r4
   10a94:	bl	106d0 <exit@plt>
   10a98:	andeq	r1, r2, r8, lsl #30
   10a9c:	andeq	r2, r2, r8, ror r0
   10aa0:	andeq	r1, r1, r4, asr #32
   10aa4:	andeq	r0, r1, r4, ror pc
   10aa8:	andeq	r0, r1, r8, lsl #31
   10aac:	andeq	r4, r0, ip, asr #22
   10ab0:	andeq	r1, r1, ip, lsr #1
   10ab4:	andeq	r1, r1, r8, asr #32
   10ab8:	andeq	r1, r1, r8, rrx
   10abc:	andeq	r1, r1, r0, rrx
   10ac0:	ldrdeq	r1, [r1], -ip
   10ac4:	strdeq	r0, [r1], -r4
   10ac8:	andeq	r0, r1, ip, lsl #31
   10acc:	andeq	r2, r2, r0, ror r0
   10ad0:	andeq	r0, r1, r8, lsr #31
   10ad4:			; <UNDEFINED> instruction: 0x00010fbc
   10ad8:	andeq	r1, r1, r4, lsr #32
   10adc:	andeq	r1, r1, r4, asr r0
   10ae0:	andeq	r1, r1, r0, ror r0
   10ae4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   10ae8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   10aec:	mov	fp, #0
   10af0:	mov	lr, #0
   10af4:	pop	{r1}		; (ldr r1, [sp], #4)
   10af8:	mov	r2, sp
   10afc:	push	{r2}		; (str r2, [sp, #-4]!)
   10b00:	push	{r0}		; (str r0, [sp, #-4]!)
   10b04:	ldr	ip, [pc, #16]	; 10b1c <close@plt+0x3d4>
   10b08:	push	{ip}		; (str ip, [sp, #-4]!)
   10b0c:	ldr	r0, [pc, #12]	; 10b20 <close@plt+0x3d8>
   10b10:	ldr	r3, [pc, #12]	; 10b24 <close@plt+0x3dc>
   10b14:	bl	10694 <__libc_start_main@plt>
   10b18:	bl	1073c <abort@plt>
   10b1c:	andeq	r0, r1, r4, ror #30
   10b20:	andeq	r0, r1, r4, asr r7
   10b24:	andeq	r0, r1, r4, lsl #30
   10b28:	ldr	r3, [pc, #20]	; 10b44 <close@plt+0x3fc>
   10b2c:	ldr	r2, [pc, #20]	; 10b48 <close@plt+0x400>
   10b30:	add	r3, pc, r3
   10b34:	ldr	r2, [r3, r2]
   10b38:	cmp	r2, #0
   10b3c:	bxeq	lr
   10b40:	b	106b8 <__gmon_start__@plt>
   10b44:	andeq	r1, r1, r8, asr #9
   10b48:	andeq	r0, r0, r0, rrx
   10b4c:	ldr	r0, [pc, #24]	; 10b6c <close@plt+0x424>
   10b50:	ldr	r3, [pc, #24]	; 10b70 <close@plt+0x428>
   10b54:	cmp	r3, r0
   10b58:	bxeq	lr
   10b5c:	ldr	r3, [pc, #16]	; 10b74 <close@plt+0x42c>
   10b60:	cmp	r3, #0
   10b64:	bxeq	lr
   10b68:	bx	r3
   10b6c:	andeq	r2, r2, ip, rrx
   10b70:	andeq	r2, r2, ip, rrx
   10b74:	andeq	r0, r0, r0
   10b78:	ldr	r0, [pc, #36]	; 10ba4 <close@plt+0x45c>
   10b7c:	ldr	r1, [pc, #36]	; 10ba8 <close@plt+0x460>
   10b80:	sub	r1, r1, r0
   10b84:	asr	r1, r1, #2
   10b88:	add	r1, r1, r1, lsr #31
   10b8c:	asrs	r1, r1, #1
   10b90:	bxeq	lr
   10b94:	ldr	r3, [pc, #16]	; 10bac <close@plt+0x464>
   10b98:	cmp	r3, #0
   10b9c:	bxeq	lr
   10ba0:	bx	r3
   10ba4:	andeq	r2, r2, ip, rrx
   10ba8:	andeq	r2, r2, ip, rrx
   10bac:	andeq	r0, r0, r0
   10bb0:	push	{r4, lr}
   10bb4:	ldr	r4, [pc, #24]	; 10bd4 <close@plt+0x48c>
   10bb8:	ldrb	r3, [r4]
   10bbc:	cmp	r3, #0
   10bc0:	popne	{r4, pc}
   10bc4:	bl	10b4c <close@plt+0x404>
   10bc8:	mov	r3, #1
   10bcc:	strb	r3, [r4]
   10bd0:	pop	{r4, pc}
   10bd4:	andeq	r2, r2, r4, ror r0
   10bd8:	b	10b78 <close@plt+0x430>
   10bdc:	push	{r4, lr}
   10be0:	mov	r1, #2
   10be4:	mov	r4, r0
   10be8:	bl	106c4 <open@plt>
   10bec:	cmp	r0, #0
   10bf0:	popge	{r4, pc}
   10bf4:	mov	r1, #1
   10bf8:	mov	r0, r4
   10bfc:	bl	106c4 <open@plt>
   10c00:	cmp	r0, #0
   10c04:	popge	{r4, pc}
   10c08:	mov	r0, r4
   10c0c:	mov	r1, #0
   10c10:	bl	106c4 <open@plt>
   10c14:	orr	r0, r0, r0, asr #31
   10c18:	pop	{r4, pc}
   10c1c:	push	{r4, r5, lr}
   10c20:	sub	sp, sp, #12
   10c24:	ldr	r4, [pc, #108]	; 10c98 <close@plt+0x550>
   10c28:	mov	r3, #0
   10c2c:	strb	r3, [sp, #3]
   10c30:	ldr	r3, [r4]
   10c34:	mov	r5, r0
   10c38:	str	r3, [sp, #4]
   10c3c:	bl	10730 <isatty@plt>
   10c40:	cmp	r0, #0
   10c44:	bne	10c64 <close@plt+0x51c>
   10c48:	mov	r0, #0
   10c4c:	ldr	r2, [sp, #4]
   10c50:	ldr	r3, [r4]
   10c54:	cmp	r2, r3
   10c58:	bne	10c94 <close@plt+0x54c>
   10c5c:	add	sp, sp, #12
   10c60:	pop	{r4, r5, pc}
   10c64:	mov	r0, r5
   10c68:	add	r2, sp, #3
   10c6c:	ldr	r1, [pc, #40]	; 10c9c <close@plt+0x554>
   10c70:	bl	10688 <ioctl@plt>
   10c74:	cmp	r0, #0
   10c78:	bne	10c48 <close@plt+0x500>
   10c7c:	ldrb	r0, [sp, #3]
   10c80:	sub	r0, r0, #1
   10c84:	cmp	r0, #1
   10c88:	movhi	r0, #0
   10c8c:	movls	r0, #1
   10c90:	b	10c4c <close@plt+0x504>
   10c94:	bl	10670 <__stack_chk_fail@plt>
   10c98:	andeq	r1, r2, r8, lsl #30
   10c9c:	andeq	r4, r0, r3, lsr fp
   10ca0:	push	{r4, r5, r6, lr}
   10ca4:	subs	r5, r0, #0
   10ca8:	beq	10ccc <close@plt+0x584>
   10cac:	bl	10bdc <close@plt+0x494>
   10cb0:	subs	r4, r0, #0
   10cb4:	blt	10d64 <close@plt+0x61c>
   10cb8:	bl	10c1c <close@plt+0x4d4>
   10cbc:	cmp	r0, #0
   10cc0:	beq	10d5c <close@plt+0x614>
   10cc4:	mov	r0, r4
   10cc8:	pop	{r4, r5, r6, pc}
   10ccc:	ldr	r5, [pc, #196]	; 10d98 <close@plt+0x650>
   10cd0:	ldr	r0, [pc, #196]	; 10d9c <close@plt+0x654>
   10cd4:	b	10ce4 <close@plt+0x59c>
   10cd8:	ldr	r0, [r5], #4
   10cdc:	cmp	r0, #0
   10ce0:	beq	10d10 <close@plt+0x5c8>
   10ce4:	bl	10bdc <close@plt+0x494>
   10ce8:	subs	r4, r0, #0
   10cec:	blt	10cd8 <close@plt+0x590>
   10cf0:	bl	10c1c <close@plt+0x4d4>
   10cf4:	cmp	r0, #0
   10cf8:	bne	10cc4 <close@plt+0x57c>
   10cfc:	mov	r0, r4
   10d00:	bl	10748 <close@plt>
   10d04:	ldr	r0, [r5], #4
   10d08:	cmp	r0, #0
   10d0c:	bne	10ce4 <close@plt+0x59c>
   10d10:	mov	r4, r0
   10d14:	mov	r0, r4
   10d18:	bl	10c1c <close@plt+0x4d4>
   10d1c:	cmp	r0, #0
   10d20:	bne	10cc4 <close@plt+0x57c>
   10d24:	add	r4, r4, #1
   10d28:	cmp	r4, #3
   10d2c:	bne	10d14 <close@plt+0x5cc>
   10d30:	ldr	r3, [pc, #104]	; 10da0 <close@plt+0x658>
   10d34:	mov	r2, #5
   10d38:	ldr	r1, [pc, #100]	; 10da4 <close@plt+0x65c>
   10d3c:	ldr	r4, [r3]
   10d40:	bl	10664 <dcgettext@plt>
   10d44:	mov	r1, #1
   10d48:	mov	r2, r0
   10d4c:	mov	r0, r4
   10d50:	bl	10700 <__fprintf_chk@plt>
   10d54:	mov	r0, #1
   10d58:	bl	106d0 <exit@plt>
   10d5c:	mov	r0, r4
   10d60:	bl	10748 <close@plt>
   10d64:	ldr	r3, [pc, #52]	; 10da0 <close@plt+0x658>
   10d68:	mov	r2, #5
   10d6c:	ldr	r1, [pc, #52]	; 10da8 <close@plt+0x660>
   10d70:	mov	r0, #0
   10d74:	ldr	r4, [r3]
   10d78:	bl	10664 <dcgettext@plt>
   10d7c:	mov	r3, r5
   10d80:	mov	r1, #1
   10d84:	mov	r2, r0
   10d88:	mov	r0, r4
   10d8c:	bl	10700 <__fprintf_chk@plt>
   10d90:	mov	r0, #1
   10d94:	bl	106d0 <exit@plt>
   10d98:	andeq	r1, r1, r0, lsr #2
   10d9c:	andeq	r1, r1, r8, lsr r1
   10da0:	andeq	r2, r2, r0, ror r0
   10da4:	andeq	r1, r1, ip, asr r1
   10da8:	andeq	r1, r1, r8, asr #2
   10dac:	push	{r1, r2, r3}
   10db0:	push	{r4, r5, r6, r7, lr}
   10db4:	sub	sp, sp, #8
   10db8:	ldr	r5, [pc, #144]	; 10e50 <close@plt+0x708>
   10dbc:	ldr	r4, [pc, #144]	; 10e54 <close@plt+0x70c>
   10dc0:	ldr	r3, [pc, #144]	; 10e58 <close@plt+0x710>
   10dc4:	ldr	r1, [r5]
   10dc8:	ldr	r7, [sp, #28]
   10dcc:	add	ip, sp, #32
   10dd0:	mov	r6, r0
   10dd4:	ldr	r3, [r3]
   10dd8:	ldr	r2, [pc, #124]	; 10e5c <close@plt+0x714>
   10ddc:	str	r1, [sp, #4]
   10de0:	ldr	r0, [r4]
   10de4:	mov	r1, #1
   10de8:	str	ip, [sp]
   10dec:	bl	10700 <__fprintf_chk@plt>
   10df0:	mov	r2, r7
   10df4:	ldr	r0, [r4]
   10df8:	ldr	r3, [sp]
   10dfc:	mov	r1, #1
   10e00:	bl	106ac <__vfprintf_chk@plt>
   10e04:	cmp	r6, #0
   10e08:	ble	10e2c <close@plt+0x6e4>
   10e0c:	mov	r0, r6
   10e10:	ldr	r4, [r4]
   10e14:	bl	106a0 <strerror@plt>
   10e18:	ldr	r2, [pc, #64]	; 10e60 <close@plt+0x718>
   10e1c:	mov	r1, #1
   10e20:	mov	r3, r0
   10e24:	mov	r0, r4
   10e28:	bl	10700 <__fprintf_chk@plt>
   10e2c:	ldr	r2, [sp, #4]
   10e30:	ldr	r3, [r5]
   10e34:	cmp	r2, r3
   10e38:	bne	10e4c <close@plt+0x704>
   10e3c:	add	sp, sp, #8
   10e40:	pop	{r4, r5, r6, r7, lr}
   10e44:	add	sp, sp, #12
   10e48:	bx	lr
   10e4c:	bl	10670 <__stack_chk_fail@plt>
   10e50:	andeq	r1, r2, r8, lsl #30
   10e54:	andeq	r2, r2, r0, ror r0
   10e58:	andeq	r2, r2, r8, ror r0
   10e5c:	ldrdeq	r1, [r1], -r8
   10e60:	andeq	r1, r1, r0, ror #3
   10e64:	push	{r2, r3}
   10e68:	mov	r5, r1
   10e6c:	ldr	r2, [pc, #124]	; 10ef0 <close@plt+0x7a8>
   10e70:	push	{r7, lr}
   10e74:	sub	sp, sp, #8
   10e78:	ldr	r4, [pc, #116]	; 10ef4 <close@plt+0x7ac>
   10e7c:	ldr	r3, [pc, #116]	; 10ef8 <close@plt+0x7b0>
   10e80:	ldr	lr, [r2]
   10e84:	ldr	r7, [sp, #16]
   10e88:	add	ip, sp, #20
   10e8c:	ldr	r3, [r3]
   10e90:	ldr	r2, [pc, #100]	; 10efc <close@plt+0x7b4>
   10e94:	mov	r1, #1
   10e98:	mov	r6, r0
   10e9c:	ldr	r0, [r4]
   10ea0:	str	lr, [sp, #4]
   10ea4:	str	ip, [sp]
   10ea8:	bl	10700 <__fprintf_chk@plt>
   10eac:	mov	r2, r7
   10eb0:	ldr	r0, [r4]
   10eb4:	ldr	r3, [sp]
   10eb8:	mov	r1, #1
   10ebc:	bl	106ac <__vfprintf_chk@plt>
   10ec0:	cmp	r5, #0
   10ec4:	ble	10ee8 <close@plt+0x7a0>
   10ec8:	mov	r0, r5
   10ecc:	ldr	r4, [r4]
   10ed0:	bl	106a0 <strerror@plt>
   10ed4:	ldr	r2, [pc, #36]	; 10f00 <close@plt+0x7b8>
   10ed8:	mov	r1, #1
   10edc:	mov	r3, r0
   10ee0:	mov	r0, r4
   10ee4:	bl	10700 <__fprintf_chk@plt>
   10ee8:	mov	r0, r6
   10eec:	bl	106d0 <exit@plt>
   10ef0:	andeq	r1, r2, r8, lsl #30
   10ef4:	andeq	r2, r2, r0, ror r0
   10ef8:	andeq	r2, r2, r8, ror r0
   10efc:	ldrdeq	r1, [r1], -r8
   10f00:	andeq	r1, r1, r0, ror #3
   10f04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f08:	mov	r7, r0
   10f0c:	ldr	r6, [pc, #72]	; 10f5c <close@plt+0x814>
   10f10:	ldr	r5, [pc, #72]	; 10f60 <close@plt+0x818>
   10f14:	add	r6, pc, r6
   10f18:	add	r5, pc, r5
   10f1c:	sub	r6, r6, r5
   10f20:	mov	r8, r1
   10f24:	mov	r9, r2
   10f28:	bl	10638 <strcmp@plt-0x20>
   10f2c:	asrs	r6, r6, #2
   10f30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f34:	mov	r4, #0
   10f38:	add	r4, r4, #1
   10f3c:	ldr	r3, [r5], #4
   10f40:	mov	r2, r9
   10f44:	mov	r1, r8
   10f48:	mov	r0, r7
   10f4c:	blx	r3
   10f50:	cmp	r6, r4
   10f54:	bne	10f38 <close@plt+0x7f0>
   10f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f5c:	andeq	r0, r1, r8, ror #31
   10f60:	andeq	r0, r1, r0, ror #31
   10f64:	bx	lr

Disassembly of section .fini:

00010f68 <.fini>:
   10f68:	push	{r3, lr}
   10f6c:	pop	{r3, pc}
