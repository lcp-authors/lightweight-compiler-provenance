
raspbian-preinstalled/hostid:     file format elf32-littlearm


Disassembly of section .init:

00010b64 <.init>:
   10b64:	push	{r3, lr}
   10b68:	bl	10f08 <abort@plt+0x180>
   10b6c:	pop	{r3, pc}

Disassembly of section .plt:

00010b70 <calloc@plt-0x14>:
   10b70:	push	{lr}		; (str lr, [sp, #-4]!)
   10b74:	ldr	lr, [pc, #4]	; 10b80 <calloc@plt-0x4>
   10b78:	add	lr, pc, lr
   10b7c:	ldr	pc, [lr, #8]!
   10b80:	andeq	r4, r1, r0, lsl #9

00010b84 <calloc@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1152]!	; 0x480

00010b90 <fputs_unlocked@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1144]!	; 0x478

00010b9c <raise@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1136]!	; 0x470

00010ba8 <strcmp@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1128]!	; 0x468

00010bb4 <fflush@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1120]!	; 0x460

00010bc0 <free@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1112]!	; 0x458

00010bcc <_exit@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1104]!	; 0x450

00010bd8 <memcpy@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1096]!	; 0x448

00010be4 <mbsinit@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1088]!	; 0x440

00010bf0 <gethostid@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1080]!	; 0x438

00010bfc <memcmp@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1072]!	; 0x430

00010c08 <dcgettext@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1064]!	; 0x428

00010c14 <__stack_chk_fail@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1056]!	; 0x420

00010c20 <realloc@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1048]!	; 0x418

00010c2c <textdomain@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1040]!	; 0x410

00010c38 <iswprint@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1032]!	; 0x408

00010c44 <fwrite@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1024]!	; 0x400

00010c50 <lseek64@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c5c <__ctype_get_mb_cur_max@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c68 <__fpending@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c74 <mbrtowc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c80 <error@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #984]!	; 0x3d8

00010c8c <malloc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #976]!	; 0x3d0

00010c98 <__libc_start_main@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #968]!	; 0x3c8

00010ca4 <__freading@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #960]!	; 0x3c0

00010cb0 <__gmon_start__@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #952]!	; 0x3b8

00010cbc <getopt_long@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cc8 <__ctype_b_loc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #936]!	; 0x3a8

00010cd4 <exit@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #928]!	; 0x3a0

00010ce0 <strlen@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #920]!	; 0x398

00010cec <__errno_location@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #912]!	; 0x390

00010cf8 <__cxa_atexit@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #904]!	; 0x388

00010d04 <memset@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #896]!	; 0x380

00010d10 <__printf_chk@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #888]!	; 0x378

00010d1c <fileno@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #880]!	; 0x370

00010d28 <__fprintf_chk@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #872]!	; 0x368

00010d34 <fclose@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #864]!	; 0x360

00010d40 <fseeko64@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #856]!	; 0x358

00010d4c <setlocale@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #848]!	; 0x350

00010d58 <strrchr@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #840]!	; 0x348

00010d64 <nl_langinfo@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #832]!	; 0x340

00010d70 <bindtextdomain@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #824]!	; 0x338

00010d7c <strncmp@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #816]!	; 0x330

00010d88 <abort@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #808]!	; 0x328

Disassembly of section .text:

00010d94 <.text>:
   10d94:	push	{r4, r5, r6, r7, lr}
   10d98:	mov	r6, r0
   10d9c:	sub	sp, sp, #20
   10da0:	ldr	r0, [r1]
   10da4:	mov	r5, r1
   10da8:	bl	11458 <abort@plt+0x6d0>
   10dac:	ldr	r1, [pc, #228]	; 10e98 <abort@plt+0x110>
   10db0:	mov	r0, #6
   10db4:	bl	10d4c <setlocale@plt>
   10db8:	ldr	r1, [pc, #220]	; 10e9c <abort@plt+0x114>
   10dbc:	ldr	r0, [pc, #220]	; 10ea0 <abort@plt+0x118>
   10dc0:	bl	10d70 <bindtextdomain@plt>
   10dc4:	ldr	r0, [pc, #212]	; 10ea0 <abort@plt+0x118>
   10dc8:	bl	10c2c <textdomain@plt>
   10dcc:	ldr	r0, [pc, #208]	; 10ea4 <abort@plt+0x11c>
   10dd0:	bl	14448 <abort@plt+0x36c0>
   10dd4:	ldr	r1, [pc, #204]	; 10ea8 <abort@plt+0x120>
   10dd8:	ldr	r2, [pc, #204]	; 10eac <abort@plt+0x124>
   10ddc:	ldr	r3, [pc, #204]	; 10eb0 <abort@plt+0x128>
   10de0:	ldr	r1, [r1]
   10de4:	mov	r4, #0
   10de8:	str	r1, [sp]
   10dec:	mov	r0, r6
   10df0:	mov	r1, r5
   10df4:	str	r2, [sp, #8]
   10df8:	str	r3, [sp, #4]
   10dfc:	ldr	r2, [pc, #176]	; 10eb4 <abort@plt+0x12c>
   10e00:	ldr	r3, [pc, #176]	; 10eb8 <abort@plt+0x130>
   10e04:	str	r4, [sp, #12]
   10e08:	bl	11378 <abort@plt+0x5f0>
   10e0c:	str	r4, [sp]
   10e10:	mov	r1, r5
   10e14:	mov	r0, r6
   10e18:	ldr	r3, [pc, #156]	; 10ebc <abort@plt+0x134>
   10e1c:	ldr	r2, [pc, #116]	; 10e98 <abort@plt+0x110>
   10e20:	bl	10cbc <getopt_long@plt>
   10e24:	cmn	r0, #1
   10e28:	bne	10e90 <abort@plt+0x108>
   10e2c:	ldr	r7, [pc, #140]	; 10ec0 <abort@plt+0x138>
   10e30:	ldr	r3, [r7]
   10e34:	cmp	r3, r6
   10e38:	blt	10e5c <abort@plt+0xd4>
   10e3c:	bl	10bf0 <gethostid@plt>
   10e40:	ldr	r1, [pc, #124]	; 10ec4 <abort@plt+0x13c>
   10e44:	mov	r2, r0
   10e48:	mov	r0, #1
   10e4c:	bl	10d10 <__printf_chk@plt>
   10e50:	mov	r0, r4
   10e54:	add	sp, sp, #20
   10e58:	pop	{r4, r5, r6, r7, pc}
   10e5c:	mov	r2, #5
   10e60:	ldr	r1, [pc, #96]	; 10ec8 <abort@plt+0x140>
   10e64:	mov	r0, r4
   10e68:	bl	10c08 <dcgettext@plt>
   10e6c:	ldr	r3, [r7]
   10e70:	mov	r6, r0
   10e74:	ldr	r0, [r5, r3, lsl #2]
   10e78:	bl	136bc <abort@plt+0x2934>
   10e7c:	mov	r2, r6
   10e80:	mov	r1, r4
   10e84:	mov	r3, r0
   10e88:	mov	r0, r4
   10e8c:	bl	10c80 <error@plt>
   10e90:	mov	r0, #1
   10e94:	bl	10fbc <abort@plt+0x234>
   10e98:	andeq	r4, r1, ip, lsr r5
   10e9c:	muleq	r1, r8, r6
   10ea0:	andeq	r4, r1, ip, ror #11
   10ea4:	andeq	r1, r1, r0, lsr #5
   10ea8:	andeq	r5, r2, r8, asr #1
   10eac:	andeq	r4, r1, ip, lsr #13
   10eb0:			; <UNDEFINED> instruction: 0x00010fbc
   10eb4:			; <UNDEFINED> instruction: 0x000144b4
   10eb8:	andeq	r4, r1, r8, ror #11
   10ebc:	andeq	r4, r1, r4, lsr #9
   10ec0:	andeq	r5, r2, r8, lsl r1
   10ec4:	ldrdeq	r4, [r1], -r0
   10ec8:			; <UNDEFINED> instruction: 0x000146bc
   10ecc:	mov	fp, #0
   10ed0:	mov	lr, #0
   10ed4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ed8:	mov	r2, sp
   10edc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ee4:	ldr	ip, [pc, #16]	; 10efc <abort@plt+0x174>
   10ee8:	push	{ip}		; (str ip, [sp, #-4]!)
   10eec:	ldr	r0, [pc, #12]	; 10f00 <abort@plt+0x178>
   10ef0:	ldr	r3, [pc, #12]	; 10f04 <abort@plt+0x17c>
   10ef4:	bl	10c98 <__libc_start_main@plt>
   10ef8:	bl	10d88 <abort@plt>
   10efc:	andeq	r4, r1, r4, asr #8
   10f00:	muleq	r1, r4, sp
   10f04:	andeq	r4, r1, r4, ror #7
   10f08:	ldr	r3, [pc, #20]	; 10f24 <abort@plt+0x19c>
   10f0c:	ldr	r2, [pc, #20]	; 10f28 <abort@plt+0x1a0>
   10f10:	add	r3, pc, r3
   10f14:	ldr	r2, [r3, r2]
   10f18:	cmp	r2, #0
   10f1c:	bxeq	lr
   10f20:	b	10cb0 <__gmon_start__@plt>
   10f24:	andeq	r4, r1, r8, ror #1
   10f28:	strheq	r0, [r0], -ip
   10f2c:	ldr	r0, [pc, #24]	; 10f4c <abort@plt+0x1c4>
   10f30:	ldr	r3, [pc, #24]	; 10f50 <abort@plt+0x1c8>
   10f34:	cmp	r3, r0
   10f38:	bxeq	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <abort@plt+0x1cc>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	andeq	r5, r2, r0, lsl r1
   10f50:	andeq	r5, r2, r0, lsl r1
   10f54:	andeq	r0, r0, r0
   10f58:	ldr	r0, [pc, #36]	; 10f84 <abort@plt+0x1fc>
   10f5c:	ldr	r1, [pc, #36]	; 10f88 <abort@plt+0x200>
   10f60:	sub	r1, r1, r0
   10f64:	asr	r1, r1, #2
   10f68:	add	r1, r1, r1, lsr #31
   10f6c:	asrs	r1, r1, #1
   10f70:	bxeq	lr
   10f74:	ldr	r3, [pc, #16]	; 10f8c <abort@plt+0x204>
   10f78:	cmp	r3, #0
   10f7c:	bxeq	lr
   10f80:	bx	r3
   10f84:	andeq	r5, r2, r0, lsl r1
   10f88:	andeq	r5, r2, r0, lsl r1
   10f8c:	andeq	r0, r0, r0
   10f90:	push	{r4, lr}
   10f94:	ldr	r4, [pc, #24]	; 10fb4 <abort@plt+0x22c>
   10f98:	ldrb	r3, [r4]
   10f9c:	cmp	r3, #0
   10fa0:	popne	{r4, pc}
   10fa4:	bl	10f2c <abort@plt+0x1a4>
   10fa8:	mov	r3, #1
   10fac:	strb	r3, [r4]
   10fb0:	pop	{r4, pc}
   10fb4:	andeq	r5, r2, ip, lsr #2
   10fb8:	b	10f58 <abort@plt+0x1d0>
   10fbc:	ldr	r3, [pc, #624]	; 11234 <abort@plt+0x4ac>
   10fc0:	push	{r7, lr}
   10fc4:	sub	sp, sp, #64	; 0x40
   10fc8:	ldr	r3, [r3]
   10fcc:	subs	r6, r0, #0
   10fd0:	str	r3, [sp, #60]	; 0x3c
   10fd4:	beq	11010 <abort@plt+0x288>
   10fd8:	ldr	r3, [pc, #600]	; 11238 <abort@plt+0x4b0>
   10fdc:	mov	r2, #5
   10fe0:	ldr	r1, [pc, #596]	; 1123c <abort@plt+0x4b4>
   10fe4:	mov	r0, #0
   10fe8:	ldr	r4, [r3]
   10fec:	bl	10c08 <dcgettext@plt>
   10ff0:	ldr	r3, [pc, #584]	; 11240 <abort@plt+0x4b8>
   10ff4:	mov	r1, #1
   10ff8:	ldr	r3, [r3]
   10ffc:	mov	r2, r0
   11000:	mov	r0, r4
   11004:	bl	10d28 <__fprintf_chk@plt>
   11008:	mov	r0, r6
   1100c:	bl	10cd4 <exit@plt>
   11010:	mov	r2, #5
   11014:	ldr	r1, [pc, #552]	; 11244 <abort@plt+0x4bc>
   11018:	bl	10c08 <dcgettext@plt>
   1101c:	ldr	r3, [pc, #540]	; 11240 <abort@plt+0x4b8>
   11020:	ldr	r4, [pc, #544]	; 11248 <abort@plt+0x4c0>
   11024:	ldr	r2, [r3]
   11028:	mov	r1, r0
   1102c:	mov	r0, #1
   11030:	bl	10d10 <__printf_chk@plt>
   11034:	mov	r2, #5
   11038:	ldr	r1, [pc, #524]	; 1124c <abort@plt+0x4c4>
   1103c:	mov	r0, r6
   11040:	bl	10c08 <dcgettext@plt>
   11044:	ldr	r1, [r4]
   11048:	bl	10b90 <fputs_unlocked@plt>
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #504]	; 11250 <abort@plt+0x4c8>
   11054:	mov	r0, r6
   11058:	bl	10c08 <dcgettext@plt>
   1105c:	ldr	r1, [r4]
   11060:	bl	10b90 <fputs_unlocked@plt>
   11064:	ldr	lr, [pc, #488]	; 11254 <abort@plt+0x4cc>
   11068:	add	ip, sp, #4
   1106c:	ldm	lr!, {r0, r1, r2, r3}
   11070:	stmia	ip!, {r0, r1, r2, r3}
   11074:	ldm	lr!, {r0, r1, r2, r3}
   11078:	ldr	r5, [sp, #4]
   1107c:	stmia	ip!, {r0, r1, r2, r3}
   11080:	cmp	r5, #0
   11084:	ldm	lr!, {r0, r1, r2, r3}
   11088:	addeq	r4, sp, #4
   1108c:	stmia	ip!, {r0, r1, r2, r3}
   11090:	ldm	lr, {r0, r1}
   11094:	stm	ip, {r0, r1}
   11098:	beq	110c8 <abort@plt+0x340>
   1109c:	ldr	r7, [pc, #436]	; 11258 <abort@plt+0x4d0>
   110a0:	add	r4, sp, #4
   110a4:	b	110b4 <abort@plt+0x32c>
   110a8:	ldr	r5, [r4, #8]!
   110ac:	cmp	r5, #0
   110b0:	beq	110c8 <abort@plt+0x340>
   110b4:	mov	r1, r5
   110b8:	mov	r0, r7
   110bc:	bl	10ba8 <strcmp@plt>
   110c0:	cmp	r0, #0
   110c4:	bne	110a8 <abort@plt+0x320>
   110c8:	ldr	r4, [r4, #4]
   110cc:	mov	r2, #5
   110d0:	cmp	r4, #0
   110d4:	ldr	r1, [pc, #384]	; 1125c <abort@plt+0x4d4>
   110d8:	beq	11180 <abort@plt+0x3f8>
   110dc:	mov	r0, #0
   110e0:	bl	10c08 <dcgettext@plt>
   110e4:	ldr	r3, [pc, #372]	; 11260 <abort@plt+0x4d8>
   110e8:	ldr	r2, [pc, #372]	; 11264 <abort@plt+0x4dc>
   110ec:	mov	r1, r0
   110f0:	mov	r0, #1
   110f4:	bl	10d10 <__printf_chk@plt>
   110f8:	mov	r1, #0
   110fc:	mov	r0, #5
   11100:	bl	10d4c <setlocale@plt>
   11104:	cmp	r0, #0
   11108:	ldreq	r5, [pc, #328]	; 11258 <abort@plt+0x4d0>
   1110c:	beq	11128 <abort@plt+0x3a0>
   11110:	mov	r2, #3
   11114:	ldr	r1, [pc, #332]	; 11268 <abort@plt+0x4e0>
   11118:	bl	10d7c <strncmp@plt>
   1111c:	ldr	r5, [pc, #308]	; 11258 <abort@plt+0x4d0>
   11120:	cmp	r0, #0
   11124:	bne	11210 <abort@plt+0x488>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #312]	; 1126c <abort@plt+0x4e4>
   11130:	mov	r0, #0
   11134:	bl	10c08 <dcgettext@plt>
   11138:	ldr	r3, [pc, #280]	; 11258 <abort@plt+0x4d0>
   1113c:	ldr	r2, [pc, #284]	; 11260 <abort@plt+0x4d8>
   11140:	mov	r1, r0
   11144:	mov	r0, #1
   11148:	bl	10d10 <__printf_chk@plt>
   1114c:	mov	r2, #5
   11150:	ldr	r1, [pc, #280]	; 11270 <abort@plt+0x4e8>
   11154:	mov	r0, #0
   11158:	bl	10c08 <dcgettext@plt>
   1115c:	ldr	r2, [pc, #272]	; 11274 <abort@plt+0x4ec>
   11160:	cmp	r4, r5
   11164:	ldr	r3, [pc, #268]	; 11278 <abort@plt+0x4f0>
   11168:	movne	r3, r2
   1116c:	mov	r1, r0
   11170:	mov	r2, r4
   11174:	mov	r0, #1
   11178:	bl	10d10 <__printf_chk@plt>
   1117c:	b	11008 <abort@plt+0x280>
   11180:	mov	r0, r4
   11184:	bl	10c08 <dcgettext@plt>
   11188:	ldr	r3, [pc, #208]	; 11260 <abort@plt+0x4d8>
   1118c:	ldr	r2, [pc, #208]	; 11264 <abort@plt+0x4dc>
   11190:	mov	r1, r0
   11194:	mov	r0, #1
   11198:	bl	10d10 <__printf_chk@plt>
   1119c:	mov	r1, r4
   111a0:	mov	r0, #5
   111a4:	bl	10d4c <setlocale@plt>
   111a8:	cmp	r0, #0
   111ac:	beq	111c4 <abort@plt+0x43c>
   111b0:	mov	r2, #3
   111b4:	ldr	r1, [pc, #172]	; 11268 <abort@plt+0x4e0>
   111b8:	bl	10d7c <strncmp@plt>
   111bc:	cmp	r0, #0
   111c0:	bne	11208 <abort@plt+0x480>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #156]	; 1126c <abort@plt+0x4e4>
   111cc:	mov	r0, #0
   111d0:	bl	10c08 <dcgettext@plt>
   111d4:	ldr	r3, [pc, #124]	; 11258 <abort@plt+0x4d0>
   111d8:	ldr	r2, [pc, #128]	; 11260 <abort@plt+0x4d8>
   111dc:	mov	r4, r3
   111e0:	mov	r1, r0
   111e4:	mov	r0, #1
   111e8:	bl	10d10 <__printf_chk@plt>
   111ec:	ldr	r1, [pc, #124]	; 11270 <abort@plt+0x4e8>
   111f0:	mov	r2, #5
   111f4:	mov	r0, #0
   111f8:	bl	10c08 <dcgettext@plt>
   111fc:	ldr	r3, [pc, #116]	; 11278 <abort@plt+0x4f0>
   11200:	mov	r1, r0
   11204:	b	11170 <abort@plt+0x3e8>
   11208:	ldr	r5, [pc, #72]	; 11258 <abort@plt+0x4d0>
   1120c:	mov	r4, r5
   11210:	mov	r2, #5
   11214:	ldr	r1, [pc, #96]	; 1127c <abort@plt+0x4f4>
   11218:	mov	r0, #0
   1121c:	bl	10c08 <dcgettext@plt>
   11220:	ldr	r2, [pc, #48]	; 11258 <abort@plt+0x4d0>
   11224:	mov	r1, r0
   11228:	mov	r0, #1
   1122c:	bl	10d10 <__printf_chk@plt>
   11230:	b	11128 <abort@plt+0x3a0>
   11234:	andeq	r4, r2, r8, lsl #30
   11238:	andeq	r5, r2, r0, lsr #2
   1123c:			; <UNDEFINED> instruction: 0x000144bc
   11240:	andeq	r5, r2, r8, lsr r1
   11244:	andeq	r4, r1, r4, ror #9
   11248:	andeq	r5, r2, r4, lsr #2
   1124c:	andeq	r4, r1, r0, asr #10
   11250:	andeq	r4, r1, r0, ror r5
   11254:	andeq	r4, r1, ip, ror #8
   11258:			; <UNDEFINED> instruction: 0x000144b4
   1125c:	andeq	r4, r1, r8, lsr #11
   11260:	andeq	r4, r1, r0, asr #11
   11264:	andeq	r4, r1, r8, ror #11
   11268:	strdeq	r4, [r1], -r8
   1126c:	andeq	r4, r1, r4, asr #12
   11270:	andeq	r4, r1, r4, ror #12
   11274:	andeq	r4, r1, ip, lsr r5
   11278:	andeq	r4, r1, r0, ror #13
   1127c:	strdeq	r4, [r1], -ip
   11280:	ldr	r3, [pc, #4]	; 1128c <abort@plt+0x504>
   11284:	str	r0, [r3]
   11288:	bx	lr
   1128c:	andeq	r5, r2, r0, lsr r1
   11290:	ldr	r3, [pc, #4]	; 1129c <abort@plt+0x514>
   11294:	strb	r0, [r3, #4]
   11298:	bx	lr
   1129c:	andeq	r5, r2, r0, lsr r1
   112a0:	ldr	r3, [pc, #180]	; 1135c <abort@plt+0x5d4>
   112a4:	push	{r4, r5, r6, lr}
   112a8:	sub	sp, sp, #8
   112ac:	ldr	r0, [r3]
   112b0:	bl	13f34 <abort@plt+0x31ac>
   112b4:	cmp	r0, #0
   112b8:	beq	112e0 <abort@plt+0x558>
   112bc:	bl	10cec <__errno_location@plt>
   112c0:	ldr	r5, [pc, #152]	; 11360 <abort@plt+0x5d8>
   112c4:	ldrb	r3, [r5, #4]
   112c8:	cmp	r3, #0
   112cc:	mov	r4, r0
   112d0:	beq	112fc <abort@plt+0x574>
   112d4:	ldr	r3, [r0]
   112d8:	cmp	r3, #32
   112dc:	bne	112fc <abort@plt+0x574>
   112e0:	ldr	r3, [pc, #124]	; 11364 <abort@plt+0x5dc>
   112e4:	ldr	r0, [r3]
   112e8:	bl	13f34 <abort@plt+0x31ac>
   112ec:	cmp	r0, #0
   112f0:	bne	1133c <abort@plt+0x5b4>
   112f4:	add	sp, sp, #8
   112f8:	pop	{r4, r5, r6, pc}
   112fc:	mov	r2, #5
   11300:	ldr	r1, [pc, #96]	; 11368 <abort@plt+0x5e0>
   11304:	mov	r0, #0
   11308:	bl	10c08 <dcgettext@plt>
   1130c:	mov	r6, r0
   11310:	ldr	r0, [r5]
   11314:	cmp	r0, #0
   11318:	beq	11348 <abort@plt+0x5c0>
   1131c:	ldr	r4, [r4]
   11320:	bl	134dc <abort@plt+0x2754>
   11324:	mov	r1, r4
   11328:	str	r6, [sp]
   1132c:	ldr	r2, [pc, #56]	; 1136c <abort@plt+0x5e4>
   11330:	mov	r3, r0
   11334:	mov	r0, #0
   11338:	bl	10c80 <error@plt>
   1133c:	ldr	r3, [pc, #44]	; 11370 <abort@plt+0x5e8>
   11340:	ldr	r0, [r3]
   11344:	bl	10bcc <_exit@plt>
   11348:	mov	r3, r6
   1134c:	ldr	r1, [r4]
   11350:	ldr	r2, [pc, #28]	; 11374 <abort@plt+0x5ec>
   11354:	bl	10c80 <error@plt>
   11358:	b	1133c <abort@plt+0x5b4>
   1135c:	andeq	r5, r2, r4, lsr #2
   11360:	andeq	r5, r2, r0, lsr r1
   11364:	andeq	r5, r2, r0, lsr #2
   11368:	andeq	r4, r1, ip, asr #14
   1136c:	andeq	r4, r1, r8, asr r7
   11370:	andeq	r5, r2, ip, asr #1
   11374:	andeq	r4, r1, ip, asr r7
   11378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1137c:	sub	sp, sp, #20
   11380:	ldr	r5, [pc, #184]	; 11440 <abort@plt+0x6b8>
   11384:	ldr	r4, [pc, #184]	; 11444 <abort@plt+0x6bc>
   11388:	mov	r6, #0
   1138c:	ldr	ip, [r5]
   11390:	cmp	r0, #2
   11394:	ldr	r7, [r4]
   11398:	str	ip, [sp, #12]
   1139c:	ldr	sl, [sp, #56]	; 0x38
   113a0:	str	r6, [r4]
   113a4:	ldr	fp, [sp, #60]	; 0x3c
   113a8:	beq	113d4 <abort@plt+0x64c>
   113ac:	ldr	r0, [sp, #12]
   113b0:	ldr	r3, [pc, #144]	; 11448 <abort@plt+0x6c0>
   113b4:	ldr	r1, [r5]
   113b8:	mov	r2, #0
   113bc:	cmp	r0, r1
   113c0:	str	r7, [r4]
   113c4:	str	r2, [r3]
   113c8:	bne	1143c <abort@plt+0x6b4>
   113cc:	add	sp, sp, #20
   113d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113d4:	mov	r8, r2
   113d8:	mov	r9, r3
   113dc:	str	r6, [sp]
   113e0:	ldr	r3, [pc, #100]	; 1144c <abort@plt+0x6c4>
   113e4:	ldr	r2, [pc, #100]	; 11450 <abort@plt+0x6c8>
   113e8:	bl	10cbc <getopt_long@plt>
   113ec:	cmn	r0, #1
   113f0:	beq	113ac <abort@plt+0x624>
   113f4:	cmp	r0, #104	; 0x68
   113f8:	beq	11430 <abort@plt+0x6a8>
   113fc:	cmp	r0, #118	; 0x76
   11400:	bne	113ac <abort@plt+0x624>
   11404:	ldr	r0, [pc, #72]	; 11454 <abort@plt+0x6cc>
   11408:	add	ip, sp, #64	; 0x40
   1140c:	mov	r3, sl
   11410:	ldr	r0, [r0]
   11414:	mov	r2, r9
   11418:	mov	r1, r8
   1141c:	str	ip, [sp]
   11420:	str	ip, [sp, #8]
   11424:	bl	13abc <abort@plt+0x2d34>
   11428:	mov	r0, r6
   1142c:	bl	10cd4 <exit@plt>
   11430:	mov	r0, r6
   11434:	blx	fp
   11438:	b	113ac <abort@plt+0x624>
   1143c:	bl	10c14 <__stack_chk_fail@plt>
   11440:	andeq	r4, r2, r8, lsl #30
   11444:	andeq	r5, r2, r8, lsr #2
   11448:	andeq	r5, r2, r8, lsl r1
   1144c:	andeq	r4, r1, r0, ror #14
   11450:	muleq	r1, r0, r7
   11454:	andeq	r5, r2, r4, lsr #2
   11458:	push	{r4, r5, r6, lr}
   1145c:	subs	r4, r0, #0
   11460:	beq	114d4 <abort@plt+0x74c>
   11464:	mov	r1, #47	; 0x2f
   11468:	bl	10d58 <strrchr@plt>
   1146c:	subs	r5, r0, #0
   11470:	beq	114c0 <abort@plt+0x738>
   11474:	add	r6, r5, #1
   11478:	sub	r3, r6, r4
   1147c:	cmp	r3, #6
   11480:	ble	114c0 <abort@plt+0x738>
   11484:	mov	r2, #7
   11488:	ldr	r1, [pc, #96]	; 114f0 <abort@plt+0x768>
   1148c:	sub	r0, r5, #6
   11490:	bl	10d7c <strncmp@plt>
   11494:	cmp	r0, #0
   11498:	bne	114c0 <abort@plt+0x738>
   1149c:	mov	r2, #3
   114a0:	ldr	r1, [pc, #76]	; 114f4 <abort@plt+0x76c>
   114a4:	mov	r0, r6
   114a8:	bl	10d7c <strncmp@plt>
   114ac:	cmp	r0, #0
   114b0:	movne	r4, r6
   114b4:	ldreq	r3, [pc, #60]	; 114f8 <abort@plt+0x770>
   114b8:	addeq	r4, r5, #4
   114bc:	streq	r4, [r3]
   114c0:	ldr	r2, [pc, #52]	; 114fc <abort@plt+0x774>
   114c4:	ldr	r3, [pc, #52]	; 11500 <abort@plt+0x778>
   114c8:	str	r4, [r2]
   114cc:	str	r4, [r3]
   114d0:	pop	{r4, r5, r6, pc}
   114d4:	ldr	r3, [pc, #40]	; 11504 <abort@plt+0x77c>
   114d8:	mov	r2, #55	; 0x37
   114dc:	mov	r1, #1
   114e0:	ldr	r3, [r3]
   114e4:	ldr	r0, [pc, #28]	; 11508 <abort@plt+0x780>
   114e8:	bl	10c44 <fwrite@plt>
   114ec:	bl	10d88 <abort@plt>
   114f0:	ldrdeq	r4, [r1], -ip
   114f4:	andeq	r4, r1, r4, ror #15
   114f8:	andeq	r5, r2, r0, lsl r1
   114fc:	andeq	r5, r2, r8, lsr r1
   11500:	andeq	r5, r2, r4, lsl r1
   11504:	andeq	r5, r2, r0, lsr #2
   11508:	andeq	r4, r1, r4, lsr #15
   1150c:	push	{r4, lr}
   11510:	mov	r2, #48	; 0x30
   11514:	mov	r4, r1
   11518:	mov	r1, #0
   1151c:	bl	10d04 <memset@plt>
   11520:	cmp	r4, #10
   11524:	beq	11530 <abort@plt+0x7a8>
   11528:	str	r4, [r0]
   1152c:	pop	{r4, pc}
   11530:	bl	10d88 <abort@plt>
   11534:	push	{r4, r5, r6, lr}
   11538:	mov	r2, #5
   1153c:	mov	r5, r0
   11540:	mov	r6, r1
   11544:	mov	r1, r0
   11548:	mov	r0, #0
   1154c:	bl	10c08 <dcgettext@plt>
   11550:	cmp	r5, r0
   11554:	mov	r4, r0
   11558:	beq	11564 <abort@plt+0x7dc>
   1155c:	mov	r0, r4
   11560:	pop	{r4, r5, r6, pc}
   11564:	bl	13ff4 <abort@plt+0x326c>
   11568:	ldrb	r3, [r0]
   1156c:	bic	r3, r3, #32
   11570:	cmp	r3, #85	; 0x55
   11574:	bne	115d4 <abort@plt+0x84c>
   11578:	ldrb	r3, [r0, #1]
   1157c:	bic	r3, r3, #32
   11580:	cmp	r3, #84	; 0x54
   11584:	bne	1164c <abort@plt+0x8c4>
   11588:	ldrb	r3, [r0, #2]
   1158c:	bic	r3, r3, #32
   11590:	cmp	r3, #70	; 0x46
   11594:	bne	1164c <abort@plt+0x8c4>
   11598:	ldrb	r3, [r0, #3]
   1159c:	cmp	r3, #45	; 0x2d
   115a0:	bne	1164c <abort@plt+0x8c4>
   115a4:	ldrb	r3, [r0, #4]
   115a8:	cmp	r3, #56	; 0x38
   115ac:	bne	1164c <abort@plt+0x8c4>
   115b0:	ldrb	r3, [r0, #5]
   115b4:	cmp	r3, #0
   115b8:	bne	1164c <abort@plt+0x8c4>
   115bc:	ldrb	r2, [r4]
   115c0:	ldr	r3, [pc, #156]	; 11664 <abort@plt+0x8dc>
   115c4:	ldr	r4, [pc, #156]	; 11668 <abort@plt+0x8e0>
   115c8:	cmp	r2, #96	; 0x60
   115cc:	movne	r4, r3
   115d0:	b	1155c <abort@plt+0x7d4>
   115d4:	cmp	r3, #71	; 0x47
   115d8:	bne	1164c <abort@plt+0x8c4>
   115dc:	ldrb	r3, [r0, #1]
   115e0:	bic	r3, r3, #32
   115e4:	cmp	r3, #66	; 0x42
   115e8:	bne	1164c <abort@plt+0x8c4>
   115ec:	ldrb	r3, [r0, #2]
   115f0:	cmp	r3, #49	; 0x31
   115f4:	bne	1164c <abort@plt+0x8c4>
   115f8:	ldrb	r3, [r0, #3]
   115fc:	cmp	r3, #56	; 0x38
   11600:	bne	1164c <abort@plt+0x8c4>
   11604:	ldrb	r3, [r0, #4]
   11608:	cmp	r3, #48	; 0x30
   1160c:	bne	1164c <abort@plt+0x8c4>
   11610:	ldrb	r3, [r0, #5]
   11614:	cmp	r3, #51	; 0x33
   11618:	bne	1164c <abort@plt+0x8c4>
   1161c:	ldrb	r3, [r0, #6]
   11620:	cmp	r3, #48	; 0x30
   11624:	bne	1164c <abort@plt+0x8c4>
   11628:	ldrb	r3, [r0, #7]
   1162c:	cmp	r3, #0
   11630:	bne	1164c <abort@plt+0x8c4>
   11634:	ldrb	r2, [r4]
   11638:	ldr	r3, [pc, #44]	; 1166c <abort@plt+0x8e4>
   1163c:	ldr	r4, [pc, #44]	; 11670 <abort@plt+0x8e8>
   11640:	cmp	r2, #96	; 0x60
   11644:	movne	r4, r3
   11648:	b	1155c <abort@plt+0x7d4>
   1164c:	ldr	r3, [pc, #32]	; 11674 <abort@plt+0x8ec>
   11650:	ldr	r4, [pc, #32]	; 11678 <abort@plt+0x8f0>
   11654:	cmp	r6, #9
   11658:	movne	r4, r3
   1165c:	mov	r0, r4
   11660:	pop	{r4, r5, r6, pc}
   11664:	andeq	r4, r1, r0, asr #16
   11668:	andeq	r4, r1, ip, asr #16
   1166c:	andeq	r4, r1, r4, asr #16
   11670:	andeq	r4, r1, r8, asr #16
   11674:	andeq	r4, r1, r0, asr r8
   11678:	andeq	r4, r1, ip, lsr r8
   1167c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11680:	sub	sp, sp, #124	; 0x7c
   11684:	ldr	ip, [pc, #3576]	; 12484 <abort@plt+0x16fc>
   11688:	str	r3, [sp, #24]
   1168c:	ldr	r3, [sp, #168]	; 0xa8
   11690:	ldr	ip, [ip]
   11694:	str	r3, [sp, #56]	; 0x38
   11698:	ldr	r3, [sp, #172]	; 0xac
   1169c:	ldr	r8, [sp, #160]	; 0xa0
   116a0:	str	r3, [sp, #80]	; 0x50
   116a4:	ldr	r3, [sp, #176]	; 0xb0
   116a8:	mov	fp, r0
   116ac:	str	r3, [sp, #76]	; 0x4c
   116b0:	mov	sl, r1
   116b4:	str	r2, [sp, #36]	; 0x24
   116b8:	str	ip, [sp, #116]	; 0x74
   116bc:	bl	10c5c <__ctype_get_mb_cur_max@plt>
   116c0:	ldr	r3, [sp, #164]	; 0xa4
   116c4:	ands	r4, r3, #2
   116c8:	movne	r3, #1
   116cc:	moveq	r3, #0
   116d0:	str	r3, [sp, #32]
   116d4:	str	r0, [sp, #64]	; 0x40
   116d8:	cmp	r8, #10
   116dc:	ldrls	pc, [pc, r8, lsl #2]
   116e0:	b	12e90 <abort@plt+0x2108>
   116e4:	ldrdeq	r1, [r1], -r8
   116e8:	andeq	r1, r1, r0, ror fp
   116ec:	andeq	r2, r1, r0, ror r1
   116f0:	muleq	r1, r0, fp
   116f4:	andeq	r1, r1, r4, asr #20
   116f8:	andeq	r1, r1, ip, lsl #21
   116fc:	andeq	r1, r1, r8, lsl #22
   11700:	andeq	r1, r1, r0, asr #22
   11704:	andeq	r1, r1, r0, lsl r7
   11708:	andeq	r1, r1, r0, lsl r7
   1170c:	andeq	r1, r1, r0, lsl r7
   11710:	cmp	r8, #10
   11714:	beq	11738 <abort@plt+0x9b0>
   11718:	mov	r1, r8
   1171c:	ldr	r0, [pc, #3428]	; 12488 <abort@plt+0x1700>
   11720:	bl	11534 <abort@plt+0x7ac>
   11724:	mov	r1, r8
   11728:	str	r0, [sp, #80]	; 0x50
   1172c:	ldr	r0, [pc, #3420]	; 12490 <abort@plt+0x1708>
   11730:	bl	11534 <abort@plt+0x7ac>
   11734:	str	r0, [sp, #76]	; 0x4c
   11738:	cmp	r4, #0
   1173c:	movne	r4, #0
   11740:	beq	12b50 <abort@plt+0x1dc8>
   11744:	ldr	r7, [sp, #76]	; 0x4c
   11748:	mov	r5, #0
   1174c:	mov	r6, #1
   11750:	mov	r0, r7
   11754:	str	r6, [sp, #40]	; 0x28
   11758:	str	r5, [sp, #68]	; 0x44
   1175c:	bl	10ce0 <strlen@plt>
   11760:	str	r6, [sp, #28]
   11764:	str	r5, [sp, #44]	; 0x2c
   11768:	str	r5, [sp, #72]	; 0x48
   1176c:	str	r7, [sp, #60]	; 0x3c
   11770:	str	r0, [sp, #52]	; 0x34
   11774:	str	r8, [sp, #160]	; 0xa0
   11778:	mov	r8, fp
   1177c:	ldr	fp, [sp, #160]	; 0xa0
   11780:	mov	r9, #0
   11784:	ldr	r3, [sp, #24]
   11788:	cmn	r3, #1
   1178c:	beq	11cf4 <abort@plt+0xf6c>
   11790:	ldr	r3, [sp, #24]
   11794:	subs	r6, r3, r9
   11798:	movne	r6, #1
   1179c:	cmp	r6, #0
   117a0:	beq	11d0c <abort@plt+0xf84>
   117a4:	ldr	r7, [sp, #28]
   117a8:	ldr	r0, [sp, #36]	; 0x24
   117ac:	cmp	fp, #2
   117b0:	moveq	r7, #0
   117b4:	andne	r7, r7, #1
   117b8:	add	r3, r0, r9
   117bc:	cmp	r7, #0
   117c0:	str	r3, [sp, #48]	; 0x30
   117c4:	beq	121b0 <abort@plt+0x1428>
   117c8:	ldr	r2, [sp, #52]	; 0x34
   117cc:	cmp	r2, #0
   117d0:	beq	12494 <abort@plt+0x170c>
   117d4:	ldr	r1, [sp, #24]
   117d8:	cmp	r2, #1
   117dc:	mov	r3, r2
   117e0:	movls	r3, #0
   117e4:	movhi	r3, #1
   117e8:	cmn	r1, #1
   117ec:	movne	r3, #0
   117f0:	cmp	r3, #0
   117f4:	add	r5, r9, r2
   117f8:	beq	11804 <abort@plt+0xa7c>
   117fc:	bl	10ce0 <strlen@plt>
   11800:	str	r0, [sp, #24]
   11804:	ldr	r3, [sp, #24]
   11808:	cmp	r5, r3
   1180c:	bhi	12494 <abort@plt+0x170c>
   11810:	ldr	r2, [sp, #52]	; 0x34
   11814:	ldr	r1, [sp, #60]	; 0x3c
   11818:	ldr	r0, [sp, #48]	; 0x30
   1181c:	bl	10bfc <memcmp@plt>
   11820:	cmp	r0, #0
   11824:	bne	12494 <abort@plt+0x170c>
   11828:	ldr	r3, [sp, #32]
   1182c:	cmp	r3, #0
   11830:	bne	12d50 <abort@plt+0x1fc8>
   11834:	ldr	r3, [sp, #48]	; 0x30
   11838:	ldrb	r5, [r3]
   1183c:	cmp	r5, #126	; 0x7e
   11840:	ldrls	pc, [pc, r5, lsl #2]
   11844:	b	12114 <abort@plt+0x138c>
   11848:	andeq	r2, r1, r0
   1184c:	andeq	r2, r1, r4, lsl r1
   11850:	andeq	r2, r1, r4, lsl r1
   11854:	andeq	r2, r1, r4, lsl r1
   11858:	andeq	r2, r1, r4, lsl r1
   1185c:	andeq	r2, r1, r4, lsl r1
   11860:	andeq	r2, r1, r4, lsl r1
   11864:	andeq	r2, r1, ip, asr #1
   11868:	strheq	r2, [r1], -ip
   1186c:			; <UNDEFINED> instruction: 0x00011fbc
   11870:	andeq	r1, r1, r4, lsl #31
   11874:	ldrdeq	r1, [r1], -ip
   11878:	andeq	r1, r1, r4, asr #31
   1187c:	strdeq	r1, [r1], -r4
   11880:	andeq	r2, r1, r4, lsl r1
   11884:	andeq	r2, r1, r4, lsl r1
   11888:	andeq	r2, r1, r4, lsl r1
   1188c:	andeq	r2, r1, r4, lsl r1
   11890:	andeq	r2, r1, r4, lsl r1
   11894:	andeq	r2, r1, r4, lsl r1
   11898:	andeq	r2, r1, r4, lsl r1
   1189c:	andeq	r2, r1, r4, lsl r1
   118a0:	andeq	r2, r1, r4, lsl r1
   118a4:	andeq	r2, r1, r4, lsl r1
   118a8:	andeq	r2, r1, r4, lsl r1
   118ac:	andeq	r2, r1, r4, lsl r1
   118b0:	andeq	r2, r1, r4, lsl r1
   118b4:	andeq	r2, r1, r4, lsl r1
   118b8:	andeq	r2, r1, r4, lsl r1
   118bc:	andeq	r2, r1, r4, lsl r1
   118c0:	andeq	r2, r1, r4, lsl r1
   118c4:	andeq	r2, r1, r4, lsl r1
   118c8:	ldrdeq	r2, [r1], -r4
   118cc:	andeq	r1, r1, r8, ror #31
   118d0:	andeq	r1, r1, r8, ror #31
   118d4:	andeq	r2, r1, ip, ror #1
   118d8:	andeq	r1, r1, r8, ror #31
   118dc:	andeq	r2, r1, r8, lsl #2
   118e0:	andeq	r1, r1, r8, ror #31
   118e4:	andeq	r1, r1, r8, lsr #28
   118e8:	andeq	r1, r1, r8, ror #31
   118ec:	andeq	r1, r1, r8, ror #31
   118f0:	andeq	r1, r1, r8, ror #31
   118f4:	andeq	r2, r1, r8, lsl #2
   118f8:	andeq	r2, r1, r8, lsl #2
   118fc:	andeq	r2, r1, r8, lsl #2
   11900:	andeq	r2, r1, r8, lsl #2
   11904:	andeq	r2, r1, r8, lsl #2
   11908:	andeq	r2, r1, r8, lsl #2
   1190c:	andeq	r2, r1, r8, lsl #2
   11910:	andeq	r2, r1, r8, lsl #2
   11914:	andeq	r2, r1, r8, lsl #2
   11918:	andeq	r2, r1, r8, lsl #2
   1191c:	andeq	r2, r1, r8, lsl #2
   11920:	andeq	r2, r1, r8, lsl #2
   11924:	andeq	r2, r1, r8, lsl #2
   11928:	andeq	r2, r1, r8, lsl #2
   1192c:	andeq	r2, r1, r8, lsl #2
   11930:	andeq	r2, r1, r8, lsl #2
   11934:	andeq	r1, r1, r8, ror #31
   11938:	andeq	r1, r1, r8, ror #31
   1193c:	andeq	r1, r1, r8, ror #31
   11940:	andeq	r1, r1, r8, ror #31
   11944:	strdeq	r1, [r1], -ip
   11948:	andeq	r2, r1, r4, lsl r1
   1194c:	andeq	r2, r1, r8, lsl #2
   11950:	andeq	r2, r1, r8, lsl #2
   11954:	andeq	r2, r1, r8, lsl #2
   11958:	andeq	r2, r1, r8, lsl #2
   1195c:	andeq	r2, r1, r8, lsl #2
   11960:	andeq	r2, r1, r8, lsl #2
   11964:	andeq	r2, r1, r8, lsl #2
   11968:	andeq	r2, r1, r8, lsl #2
   1196c:	andeq	r2, r1, r8, lsl #2
   11970:	andeq	r2, r1, r8, lsl #2
   11974:	andeq	r2, r1, r8, lsl #2
   11978:	andeq	r2, r1, r8, lsl #2
   1197c:	andeq	r2, r1, r8, lsl #2
   11980:	andeq	r2, r1, r8, lsl #2
   11984:	andeq	r2, r1, r8, lsl #2
   11988:	andeq	r2, r1, r8, lsl #2
   1198c:	andeq	r2, r1, r8, lsl #2
   11990:	andeq	r2, r1, r8, lsl #2
   11994:	andeq	r2, r1, r8, lsl #2
   11998:	andeq	r2, r1, r8, lsl #2
   1199c:	andeq	r2, r1, r8, lsl #2
   119a0:	andeq	r2, r1, r8, lsl #2
   119a4:	andeq	r2, r1, r8, lsl #2
   119a8:	andeq	r2, r1, r8, lsl #2
   119ac:	andeq	r2, r1, r8, lsl #2
   119b0:	andeq	r2, r1, r8, lsl #2
   119b4:	andeq	r1, r1, r8, ror #31
   119b8:			; <UNDEFINED> instruction: 0x00011db4
   119bc:	andeq	r2, r1, r8, lsl #2
   119c0:	andeq	r1, r1, r8, ror #31
   119c4:	andeq	r2, r1, r8, lsl #2
   119c8:	andeq	r1, r1, r8, ror #31
   119cc:	andeq	r2, r1, r8, lsl #2
   119d0:	andeq	r2, r1, r8, lsl #2
   119d4:	andeq	r2, r1, r8, lsl #2
   119d8:	andeq	r2, r1, r8, lsl #2
   119dc:	andeq	r2, r1, r8, lsl #2
   119e0:	andeq	r2, r1, r8, lsl #2
   119e4:	andeq	r2, r1, r8, lsl #2
   119e8:	andeq	r2, r1, r8, lsl #2
   119ec:	andeq	r2, r1, r8, lsl #2
   119f0:	andeq	r2, r1, r8, lsl #2
   119f4:	andeq	r2, r1, r8, lsl #2
   119f8:	andeq	r2, r1, r8, lsl #2
   119fc:	andeq	r2, r1, r8, lsl #2
   11a00:	andeq	r2, r1, r8, lsl #2
   11a04:	andeq	r2, r1, r8, lsl #2
   11a08:	andeq	r2, r1, r8, lsl #2
   11a0c:	andeq	r2, r1, r8, lsl #2
   11a10:	andeq	r2, r1, r8, lsl #2
   11a14:	andeq	r2, r1, r8, lsl #2
   11a18:	andeq	r2, r1, r8, lsl #2
   11a1c:	andeq	r2, r1, r8, lsl #2
   11a20:	andeq	r2, r1, r8, lsl #2
   11a24:	andeq	r2, r1, r8, lsl #2
   11a28:	andeq	r2, r1, r8, lsl #2
   11a2c:	andeq	r2, r1, r8, lsl #2
   11a30:	andeq	r2, r1, r8, lsl #2
   11a34:	andeq	r1, r1, ip, asr #23
   11a38:	andeq	r1, r1, r8, ror #31
   11a3c:	andeq	r1, r1, ip, asr #23
   11a40:	andeq	r2, r1, ip, ror #1
   11a44:	cmp	r4, #0
   11a48:	moveq	r3, #1
   11a4c:	streq	r3, [sp, #28]
   11a50:	beq	1217c <abort@plt+0x13f4>
   11a54:	mov	r3, #0
   11a58:	mov	r4, r3
   11a5c:	mov	r2, #1
   11a60:	str	r2, [sp, #40]	; 0x28
   11a64:	str	r3, [sp, #68]	; 0x44
   11a68:	str	r2, [sp, #32]
   11a6c:	str	r2, [sp, #52]	; 0x34
   11a70:	ldr	r3, [pc, #2584]	; 12490 <abort@plt+0x1708>
   11a74:	str	r4, [sp, #44]	; 0x2c
   11a78:	str	r4, [sp, #72]	; 0x48
   11a7c:	str	r4, [sp, #28]
   11a80:	str	r3, [sp, #60]	; 0x3c
   11a84:	mov	r8, #2
   11a88:	b	11774 <abort@plt+0x9ec>
   11a8c:	cmp	r4, #0
   11a90:	bne	12d1c <abort@plt+0x1f94>
   11a94:	cmp	sl, #0
   11a98:	beq	12adc <abort@plt+0x1d54>
   11a9c:	mov	r3, #34	; 0x22
   11aa0:	strb	r3, [fp]
   11aa4:	ldr	r3, [pc, #2528]	; 1248c <abort@plt+0x1704>
   11aa8:	mov	r1, r4
   11aac:	mov	r2, #1
   11ab0:	str	r4, [sp, #68]	; 0x44
   11ab4:	str	r2, [sp, #40]	; 0x28
   11ab8:	mov	r4, r2
   11abc:	str	r1, [sp, #44]	; 0x2c
   11ac0:	str	r1, [sp, #72]	; 0x48
   11ac4:	str	r1, [sp, #32]
   11ac8:	str	r2, [sp, #28]
   11acc:	str	r2, [sp, #52]	; 0x34
   11ad0:	str	r3, [sp, #60]	; 0x3c
   11ad4:	b	11774 <abort@plt+0x9ec>
   11ad8:	mov	r3, #0
   11adc:	str	r3, [sp, #68]	; 0x44
   11ae0:	str	r3, [sp, #44]	; 0x2c
   11ae4:	str	r3, [sp, #32]
   11ae8:	str	r3, [sp, #28]
   11aec:	str	r3, [sp, #60]	; 0x3c
   11af0:	mov	r3, #1
   11af4:	str	r8, [sp, #72]	; 0x48
   11af8:	str	r8, [sp, #52]	; 0x34
   11afc:	mov	r4, r8
   11b00:	str	r3, [sp, #40]	; 0x28
   11b04:	b	11774 <abort@plt+0x9ec>
   11b08:	mov	r3, #1
   11b0c:	str	r3, [sp, #40]	; 0x28
   11b10:	str	r3, [sp, #32]
   11b14:	str	r3, [sp, #28]
   11b18:	str	r3, [sp, #52]	; 0x34
   11b1c:	ldr	r3, [pc, #2408]	; 1248c <abort@plt+0x1704>
   11b20:	mov	r2, #0
   11b24:	mov	r4, r2
   11b28:	str	r2, [sp, #68]	; 0x44
   11b2c:	str	r2, [sp, #44]	; 0x2c
   11b30:	str	r2, [sp, #72]	; 0x48
   11b34:	str	r3, [sp, #60]	; 0x3c
   11b38:	mov	r8, #5
   11b3c:	b	11774 <abort@plt+0x9ec>
   11b40:	mov	r3, #0
   11b44:	mov	r2, #1
   11b48:	str	r2, [sp, #40]	; 0x28
   11b4c:	mov	r4, r3
   11b50:	str	r3, [sp, #68]	; 0x44
   11b54:	str	r2, [sp, #28]
   11b58:	str	r3, [sp, #44]	; 0x2c
   11b5c:	str	r3, [sp, #72]	; 0x48
   11b60:	str	r3, [sp, #32]
   11b64:	str	r3, [sp, #52]	; 0x34
   11b68:	str	r3, [sp, #60]	; 0x3c
   11b6c:	b	11774 <abort@plt+0x9ec>
   11b70:	mov	r2, #1
   11b74:	mov	r3, #0
   11b78:	str	r2, [sp, #40]	; 0x28
   11b7c:	mov	r4, r3
   11b80:	str	r3, [sp, #68]	; 0x44
   11b84:	str	r8, [sp, #52]	; 0x34
   11b88:	str	r2, [sp, #32]
   11b8c:	b	11a70 <abort@plt+0xce8>
   11b90:	mov	r3, #1
   11b94:	str	r3, [sp, #40]	; 0x28
   11b98:	str	r3, [sp, #32]
   11b9c:	str	r3, [sp, #28]
   11ba0:	str	r3, [sp, #52]	; 0x34
   11ba4:	ldr	r3, [pc, #2276]	; 12490 <abort@plt+0x1708>
   11ba8:	mov	r2, #0
   11bac:	mov	r4, r2
   11bb0:	str	r2, [sp, #68]	; 0x44
   11bb4:	str	r2, [sp, #44]	; 0x2c
   11bb8:	str	r2, [sp, #72]	; 0x48
   11bbc:	str	r3, [sp, #60]	; 0x3c
   11bc0:	mov	r8, #2
   11bc4:	b	11774 <abort@plt+0x9ec>
   11bc8:	mov	r7, #0
   11bcc:	ldr	r3, [sp, #24]
   11bd0:	cmn	r3, #1
   11bd4:	beq	12710 <abort@plt+0x1988>
   11bd8:	ldr	r3, [sp, #24]
   11bdc:	subs	r3, r3, #1
   11be0:	movne	r3, #1
   11be4:	cmp	r3, #0
   11be8:	sub	r2, fp, #2
   11bec:	clz	r2, r2
   11bf0:	lsr	r2, r2, #5
   11bf4:	bne	11df0 <abort@plt+0x1068>
   11bf8:	cmp	r9, #0
   11bfc:	bne	11df0 <abort@plt+0x1068>
   11c00:	ldr	r3, [sp, #32]
   11c04:	tst	r3, r2
   11c08:	bne	11f10 <abort@plt+0x1188>
   11c0c:	ldr	r3, [sp, #28]
   11c10:	eor	r3, r3, #1
   11c14:	orr	r3, r2, r3
   11c18:	ldr	r2, [sp, #32]
   11c1c:	eor	r3, r3, #1
   11c20:	orrs	r3, r2, r3
   11c24:	beq	11c54 <abort@plt+0xecc>
   11c28:	mov	r3, #0
   11c2c:	ldr	r1, [sp, #56]	; 0x38
   11c30:	cmp	r1, #0
   11c34:	beq	11c54 <abort@plt+0xecc>
   11c38:	lsr	r2, r5, #5
   11c3c:	and	r0, r5, #31
   11c40:	uxtb	r2, r2
   11c44:	ldr	r1, [r1, r2, lsl #2]
   11c48:	lsr	r2, r1, r0
   11c4c:	tst	r2, #1
   11c50:	bne	11c5c <abort@plt+0xed4>
   11c54:	cmp	r7, #0
   11c58:	beq	11eac <abort@plt+0x1124>
   11c5c:	sub	r2, fp, #2
   11c60:	clz	r2, r2
   11c64:	lsr	r2, r2, #5
   11c68:	ldr	r3, [sp, #32]
   11c6c:	cmp	r3, #0
   11c70:	bne	11f9c <abort@plt+0x1214>
   11c74:	ldr	r3, [sp, #44]	; 0x2c
   11c78:	eor	r3, r3, #1
   11c7c:	ands	r3, r2, r3
   11c80:	beq	11cb8 <abort@plt+0xf30>
   11c84:	cmp	sl, r4
   11c88:	movhi	r2, #39	; 0x27
   11c8c:	strbhi	r2, [r8, r4]
   11c90:	add	r2, r4, #1
   11c94:	cmp	r2, sl
   11c98:	movcc	r1, #36	; 0x24
   11c9c:	strbcc	r1, [r8, r2]
   11ca0:	add	r2, r4, #2
   11ca4:	cmp	r2, sl
   11ca8:	add	r4, r4, #3
   11cac:	movcc	r1, #39	; 0x27
   11cb0:	strbcc	r1, [r8, r2]
   11cb4:	str	r3, [sp, #44]	; 0x2c
   11cb8:	cmp	r4, sl
   11cbc:	movcc	r3, #92	; 0x5c
   11cc0:	strbcc	r3, [r8, r4]
   11cc4:	add	r9, r9, #1
   11cc8:	add	r4, r4, #1
   11ccc:	cmp	r4, sl
   11cd0:	ldr	r3, [sp, #40]	; 0x28
   11cd4:	strbcc	r5, [r8, r4]
   11cd8:	cmp	r6, #0
   11cdc:	moveq	r3, #0
   11ce0:	str	r3, [sp, #40]	; 0x28
   11ce4:	ldr	r3, [sp, #24]
   11ce8:	add	r4, r4, #1
   11cec:	cmn	r3, #1
   11cf0:	bne	11790 <abort@plt+0xa08>
   11cf4:	ldr	r3, [sp, #36]	; 0x24
   11cf8:	ldrb	r6, [r3, r9]
   11cfc:	adds	r6, r6, #0
   11d00:	movne	r6, #1
   11d04:	cmp	r6, #0
   11d08:	bne	117a4 <abort@plt+0xa1c>
   11d0c:	str	fp, [sp, #160]	; 0xa0
   11d10:	mov	fp, r8
   11d14:	ldr	r8, [sp, #160]	; 0xa0
   11d18:	ldr	r1, [sp, #32]
   11d1c:	cmp	r4, #0
   11d20:	sub	r2, r8, #2
   11d24:	clz	r2, r2
   11d28:	lsr	r2, r2, #5
   11d2c:	andeq	r3, r2, r1
   11d30:	movne	r3, #0
   11d34:	cmp	r3, #0
   11d38:	bne	12e24 <abort@plt+0x209c>
   11d3c:	eor	r3, r1, #1
   11d40:	ands	r2, r2, r3
   11d44:	beq	12d60 <abort@plt+0x1fd8>
   11d48:	ldr	r3, [sp, #68]	; 0x44
   11d4c:	cmp	r3, #0
   11d50:	beq	12d64 <abort@plt+0x1fdc>
   11d54:	ldr	r3, [sp, #40]	; 0x28
   11d58:	cmp	r3, #0
   11d5c:	bne	12de0 <abort@plt+0x2058>
   11d60:	ldr	r3, [sp, #72]	; 0x48
   11d64:	adds	r3, r3, #0
   11d68:	movne	r3, #1
   11d6c:	cmp	sl, #0
   11d70:	movne	r3, #0
   11d74:	cmp	r3, #0
   11d78:	ldreq	r2, [sp, #68]	; 0x44
   11d7c:	beq	12d64 <abort@plt+0x1fdc>
   11d80:	ldr	sl, [sp, #72]	; 0x48
   11d84:	str	r3, [sp, #68]	; 0x44
   11d88:	ldr	r3, [pc, #1792]	; 12490 <abort@plt+0x1708>
   11d8c:	mov	r2, #39	; 0x27
   11d90:	mov	r4, #1
   11d94:	str	r3, [sp, #60]	; 0x3c
   11d98:	mov	r3, #0
   11d9c:	strb	r2, [fp]
   11da0:	str	r4, [sp, #52]	; 0x34
   11da4:	mov	r8, #2
   11da8:	str	r3, [sp, #32]
   11dac:	b	11774 <abort@plt+0x9ec>
   11db0:	mov	r7, #0
   11db4:	cmp	fp, #2
   11db8:	beq	126f0 <abort@plt+0x1968>
   11dbc:	ldr	r3, [sp, #52]	; 0x34
   11dc0:	ldr	r2, [sp, #28]
   11dc4:	ldr	r1, [sp, #32]
   11dc8:	cmp	r3, #0
   11dcc:	andne	r2, r2, r1
   11dd0:	moveq	r2, #0
   11dd4:	cmp	r2, #0
   11dd8:	moveq	r5, #92	; 0x5c
   11ddc:	moveq	r3, r5
   11de0:	bne	126fc <abort@plt+0x1974>
   11de4:	ldr	r1, [sp, #28]
   11de8:	cmp	r1, #0
   11dec:	bne	12e6c <abort@plt+0x20e4>
   11df0:	mov	r6, #0
   11df4:	b	11c0c <abort@plt+0xe84>
   11df8:	mov	r7, #0
   11dfc:	cmp	fp, #2
   11e00:	beq	12760 <abort@plt+0x19d8>
   11e04:	cmp	fp, #5
   11e08:	beq	12724 <abort@plt+0x199c>
   11e0c:	sub	r2, fp, #2
   11e10:	mov	r6, #0
   11e14:	clz	r2, r2
   11e18:	mov	r5, #63	; 0x3f
   11e1c:	lsr	r2, r2, #5
   11e20:	b	11c0c <abort@plt+0xe84>
   11e24:	mov	r7, #0
   11e28:	cmp	fp, #2
   11e2c:	strne	r6, [sp, #68]	; 0x44
   11e30:	movne	r2, #0
   11e34:	movne	r5, #39	; 0x27
   11e38:	bne	11c0c <abort@plt+0xe84>
   11e3c:	ldr	r3, [sp, #32]
   11e40:	cmp	r3, #0
   11e44:	bne	12b40 <abort@plt+0x1db8>
   11e48:	cmp	sl, #0
   11e4c:	ldr	r3, [sp, #72]	; 0x48
   11e50:	clz	r3, r3
   11e54:	lsr	r3, r3, #5
   11e58:	moveq	r3, #0
   11e5c:	cmp	r3, #0
   11e60:	bne	12a74 <abort@plt+0x1cec>
   11e64:	cmp	sl, r4
   11e68:	movhi	r3, #39	; 0x27
   11e6c:	strbhi	r3, [r8, r4]
   11e70:	add	r3, r4, #1
   11e74:	cmp	sl, r3
   11e78:	movhi	r2, #92	; 0x5c
   11e7c:	strbhi	r2, [r8, r3]
   11e80:	add	r3, r4, #2
   11e84:	cmp	sl, r3
   11e88:	movhi	r2, #39	; 0x27
   11e8c:	strbhi	r2, [r8, r3]
   11e90:	mov	r3, #0
   11e94:	cmp	r7, #0
   11e98:	add	r4, r4, #3
   11e9c:	str	r3, [sp, #44]	; 0x2c
   11ea0:	str	r6, [sp, #68]	; 0x44
   11ea4:	mov	r5, #39	; 0x27
   11ea8:	bne	11c5c <abort@plt+0xed4>
   11eac:	ldr	r2, [sp, #44]	; 0x2c
   11eb0:	eor	r3, r3, #1
   11eb4:	and	r3, r3, r2
   11eb8:	add	r9, r9, #1
   11ebc:	uxtb	r3, r3
   11ec0:	cmp	r3, #0
   11ec4:	beq	11ccc <abort@plt+0xf44>
   11ec8:	cmp	sl, r4
   11ecc:	movhi	r3, #39	; 0x27
   11ed0:	strbhi	r3, [r8, r4]
   11ed4:	add	r3, r4, #1
   11ed8:	cmp	sl, r3
   11edc:	movhi	r2, #39	; 0x27
   11ee0:	strbhi	r2, [r8, r3]
   11ee4:	mov	r3, #0
   11ee8:	add	r4, r4, #2
   11eec:	str	r3, [sp, #44]	; 0x2c
   11ef0:	b	11ccc <abort@plt+0xf44>
   11ef4:	mov	r3, #114	; 0x72
   11ef8:	ldr	r1, [sp, #32]
   11efc:	sub	r2, fp, #2
   11f00:	clz	r2, r2
   11f04:	lsr	r2, r2, #5
   11f08:	tst	r2, r1
   11f0c:	beq	11de4 <abort@plt+0x105c>
   11f10:	mov	fp, r8
   11f14:	mov	r8, #2
   11f18:	ldr	r3, [sp, #28]
   11f1c:	cmp	r3, #0
   11f20:	movne	r8, #4
   11f24:	ldr	r3, [sp, #164]	; 0xa4
   11f28:	mov	ip, #0
   11f2c:	bic	r3, r3, #2
   11f30:	str	r3, [sp, #4]
   11f34:	ldr	r3, [sp, #76]	; 0x4c
   11f38:	str	r8, [sp]
   11f3c:	str	r3, [sp, #16]
   11f40:	ldr	r3, [sp, #80]	; 0x50
   11f44:	ldr	r2, [sp, #36]	; 0x24
   11f48:	str	r3, [sp, #12]
   11f4c:	mov	r1, sl
   11f50:	ldr	r3, [sp, #24]
   11f54:	mov	r0, fp
   11f58:	str	ip, [sp, #8]
   11f5c:	bl	1167c <abort@plt+0x8f4>
   11f60:	mov	r4, r0
   11f64:	ldr	r3, [pc, #1304]	; 12484 <abort@plt+0x16fc>
   11f68:	ldr	r2, [sp, #116]	; 0x74
   11f6c:	mov	r0, r4
   11f70:	ldr	r3, [r3]
   11f74:	cmp	r2, r3
   11f78:	bne	12e68 <abort@plt+0x20e0>
   11f7c:	add	sp, sp, #124	; 0x7c
   11f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f84:	mov	r5, #110	; 0x6e
   11f88:	ldr	r3, [sp, #32]
   11f8c:	mov	r2, #0
   11f90:	cmp	r3, #0
   11f94:	mov	r6, r2
   11f98:	beq	11c74 <abort@plt+0xeec>
   11f9c:	str	fp, [sp, #160]	; 0xa0
   11fa0:	mov	fp, r8
   11fa4:	ldr	r8, [sp, #160]	; 0xa0
   11fa8:	mov	r3, r2
   11fac:	ldr	r2, [sp, #28]
   11fb0:	and	r2, r2, r3
   11fb4:	str	r2, [sp, #28]
   11fb8:	b	11f18 <abort@plt+0x1190>
   11fbc:	mov	r5, #116	; 0x74
   11fc0:	b	11f88 <abort@plt+0x1200>
   11fc4:	mov	r5, #102	; 0x66
   11fc8:	ldr	r3, [sp, #32]
   11fcc:	cmp	r3, #0
   11fd0:	bne	12b7c <abort@plt+0x1df4>
   11fd4:	mov	r6, #0
   11fd8:	b	11cb8 <abort@plt+0xf30>
   11fdc:	mov	r5, #118	; 0x76
   11fe0:	b	11fc8 <abort@plt+0x1240>
   11fe4:	mov	r7, #0
   11fe8:	mov	r6, #0
   11fec:	b	11c28 <abort@plt+0xea0>
   11ff0:	ldr	r3, [sp, #32]
   11ff4:	cmp	r3, #0
   11ff8:	bne	12dc0 <abort@plt+0x2038>
   11ffc:	mov	r7, r3
   12000:	ldr	r3, [sp, #44]	; 0x2c
   12004:	sub	r2, fp, #2
   12008:	eor	r3, r3, #1
   1200c:	clz	r2, r2
   12010:	lsr	r2, r2, #5
   12014:	ands	r3, r2, r3
   12018:	beq	12a60 <abort@plt+0x1cd8>
   1201c:	cmp	sl, r4
   12020:	movhi	r1, #39	; 0x27
   12024:	strbhi	r1, [r8, r4]
   12028:	add	r1, r4, #1
   1202c:	cmp	sl, r1
   12030:	movhi	r0, #36	; 0x24
   12034:	strbhi	r0, [r8, r1]
   12038:	add	r1, r4, #2
   1203c:	cmp	sl, r1
   12040:	movhi	r0, #39	; 0x27
   12044:	strbhi	r0, [r8, r1]
   12048:	add	r1, r4, #3
   1204c:	cmp	sl, r1
   12050:	bls	12ac0 <abort@plt+0x1d38>
   12054:	mov	r4, r1
   12058:	mov	r1, #92	; 0x5c
   1205c:	strb	r1, [r8, r4]
   12060:	mov	r1, r4
   12064:	str	r3, [sp, #44]	; 0x2c
   12068:	cmp	fp, #2
   1206c:	add	r4, r4, #1
   12070:	beq	12b08 <abort@plt+0x1d80>
   12074:	ldr	r0, [sp, #24]
   12078:	add	r3, r9, #1
   1207c:	cmp	r3, r0
   12080:	bcs	12098 <abort@plt+0x1310>
   12084:	ldr	r0, [sp, #36]	; 0x24
   12088:	ldrb	r3, [r0, r3]
   1208c:	sub	r3, r3, #48	; 0x30
   12090:	cmp	r3, #9
   12094:	bls	12b18 <abort@plt+0x1d90>
   12098:	mov	r5, #48	; 0x30
   1209c:	ldr	r3, [sp, #28]
   120a0:	eor	r3, r3, #1
   120a4:	orrs	r2, r2, r3
   120a8:	mov	r3, r6
   120ac:	moveq	r6, r2
   120b0:	beq	11c2c <abort@plt+0xea4>
   120b4:	mov	r6, #0
   120b8:	b	11c54 <abort@plt+0xecc>
   120bc:	mov	r2, #0
   120c0:	mov	r6, r2
   120c4:	mov	r5, #98	; 0x62
   120c8:	b	11c74 <abort@plt+0xeec>
   120cc:	mov	r5, #97	; 0x61
   120d0:	b	11fd4 <abort@plt+0x124c>
   120d4:	mov	r3, r7
   120d8:	mov	r6, r7
   120dc:	mov	r2, #0
   120e0:	mov	r7, r3
   120e4:	mov	r5, #32
   120e8:	b	11c0c <abort@plt+0xe84>
   120ec:	cmp	r9, #0
   120f0:	mov	r3, r7
   120f4:	bne	126bc <abort@plt+0x1934>
   120f8:	mov	r6, r7
   120fc:	mov	r2, r9
   12100:	mov	r7, r3
   12104:	b	11c0c <abort@plt+0xe84>
   12108:	mov	r6, r7
   1210c:	b	11c28 <abort@plt+0xea0>
   12110:	mov	r7, #0
   12114:	ldr	r3, [sp, #64]	; 0x40
   12118:	cmp	r3, #1
   1211c:	bne	12778 <abort@plt+0x19f0>
   12120:	bl	10cc8 <__ctype_b_loc@plt>
   12124:	ldr	r2, [sp, #64]	; 0x40
   12128:	sxth	r3, r5
   1212c:	mov	ip, r2
   12130:	lsl	r3, r3, #1
   12134:	ldr	r2, [r0]
   12138:	ldrh	r3, [r2, r3]
   1213c:	and	r3, r3, #16384	; 0x4000
   12140:	cmp	r3, #0
   12144:	ldr	r3, [sp, #28]
   12148:	movne	r6, #1
   1214c:	moveq	r6, #0
   12150:	movne	r2, #0
   12154:	andeq	r2, r3, #1
   12158:	cmp	r2, #0
   1215c:	bne	12a88 <abort@plt+0x1d00>
   12160:	sub	r2, fp, #2
   12164:	clz	r2, r2
   12168:	lsr	r2, r2, #5
   1216c:	b	11c0c <abort@plt+0xe84>
   12170:	cmp	r4, #0
   12174:	bne	12e34 <abort@plt+0x20ac>
   12178:	str	r4, [sp, #28]
   1217c:	cmp	sl, #0
   12180:	bne	12e78 <abort@plt+0x20f0>
   12184:	ldr	r3, [pc, #772]	; 12490 <abort@plt+0x1708>
   12188:	mov	r4, #1
   1218c:	str	r4, [sp, #40]	; 0x28
   12190:	str	r3, [sp, #60]	; 0x3c
   12194:	str	r4, [sp, #52]	; 0x34
   12198:	str	sl, [sp, #72]	; 0x48
   1219c:	str	sl, [sp, #68]	; 0x44
   121a0:	str	sl, [sp, #44]	; 0x2c
   121a4:	str	sl, [sp, #32]
   121a8:	mov	r8, #2
   121ac:	b	11774 <abort@plt+0x9ec>
   121b0:	ldr	r3, [sp, #36]	; 0x24
   121b4:	ldrb	r5, [r3, r9]
   121b8:	cmp	r5, #126	; 0x7e
   121bc:	ldrls	pc, [pc, r5, lsl #2]
   121c0:	b	12114 <abort@plt+0x138c>
   121c4:	strdeq	r2, [r1], -r8
   121c8:	andeq	r2, r1, r4, lsl r1
   121cc:	andeq	r2, r1, r4, lsl r1
   121d0:	andeq	r2, r1, r4, lsl r1
   121d4:	andeq	r2, r1, r4, lsl r1
   121d8:	andeq	r2, r1, r4, lsl r1
   121dc:	andeq	r2, r1, r4, lsl r1
   121e0:	andeq	r2, r1, r4, ror #7
   121e4:	ldrdeq	r2, [r1], -r0
   121e8:	andeq	r2, r1, r8, asr #7
   121ec:	andeq	r2, r1, r0, asr #7
   121f0:	andeq	r2, r1, r0, ror r4
   121f4:	andeq	r2, r1, ip, asr r4
   121f8:	strdeq	r1, [r1], -r4
   121fc:	andeq	r2, r1, r4, lsl r1
   12200:	andeq	r2, r1, r4, lsl r1
   12204:	andeq	r2, r1, r4, lsl r1
   12208:	andeq	r2, r1, r4, lsl r1
   1220c:	andeq	r2, r1, r4, lsl r1
   12210:	andeq	r2, r1, r4, lsl r1
   12214:	andeq	r2, r1, r4, lsl r1
   12218:	andeq	r2, r1, r4, lsl r1
   1221c:	andeq	r2, r1, r4, lsl r1
   12220:	andeq	r2, r1, r4, lsl r1
   12224:	andeq	r2, r1, r4, lsl r1
   12228:	andeq	r2, r1, r4, lsl r1
   1222c:	andeq	r2, r1, r4, lsl r1
   12230:	andeq	r2, r1, r4, lsl r1
   12234:	andeq	r2, r1, r4, lsl r1
   12238:	andeq	r2, r1, r4, lsl r1
   1223c:	andeq	r2, r1, r4, lsl r1
   12240:	andeq	r2, r1, r4, lsl r1
   12244:	andeq	r2, r1, ip, asr #8
   12248:	andeq	r2, r1, r8, lsr r4
   1224c:	andeq	r2, r1, r8, lsr r4
   12250:	andeq	r2, r1, r8, lsr #8
   12254:	andeq	r2, r1, r8, lsr r4
   12258:	andeq	r2, r1, r0, ror #2
   1225c:	andeq	r2, r1, r8, lsr r4
   12260:	andeq	r1, r1, r8, lsr #28
   12264:	andeq	r2, r1, r8, lsr r4
   12268:	andeq	r2, r1, r8, lsr r4
   1226c:	andeq	r2, r1, r8, lsr r4
   12270:	andeq	r2, r1, r0, ror #2
   12274:	andeq	r2, r1, r0, ror #2
   12278:	andeq	r2, r1, r0, ror #2
   1227c:	andeq	r2, r1, r0, ror #2
   12280:	andeq	r2, r1, r0, ror #2
   12284:	andeq	r2, r1, r0, ror #2
   12288:	andeq	r2, r1, r0, ror #2
   1228c:	andeq	r2, r1, r0, ror #2
   12290:	andeq	r2, r1, r0, ror #2
   12294:	andeq	r2, r1, r0, ror #2
   12298:	andeq	r2, r1, r0, ror #2
   1229c:	andeq	r2, r1, r0, ror #2
   122a0:	andeq	r2, r1, r0, ror #2
   122a4:	andeq	r2, r1, r0, ror #2
   122a8:	andeq	r2, r1, r0, ror #2
   122ac:	andeq	r2, r1, r0, ror #2
   122b0:	andeq	r2, r1, r8, lsr r4
   122b4:	andeq	r2, r1, r8, lsr r4
   122b8:	andeq	r2, r1, r8, lsr r4
   122bc:	andeq	r2, r1, r8, lsr r4
   122c0:	strdeq	r1, [r1], -ip
   122c4:	andeq	r2, r1, r4, lsl r1
   122c8:	andeq	r2, r1, r0, ror #2
   122cc:	andeq	r2, r1, r0, ror #2
   122d0:	andeq	r2, r1, r0, ror #2
   122d4:	andeq	r2, r1, r0, ror #2
   122d8:	andeq	r2, r1, r0, ror #2
   122dc:	andeq	r2, r1, r0, ror #2
   122e0:	andeq	r2, r1, r0, ror #2
   122e4:	andeq	r2, r1, r0, ror #2
   122e8:	andeq	r2, r1, r0, ror #2
   122ec:	andeq	r2, r1, r0, ror #2
   122f0:	andeq	r2, r1, r0, ror #2
   122f4:	andeq	r2, r1, r0, ror #2
   122f8:	andeq	r2, r1, r0, ror #2
   122fc:	andeq	r2, r1, r0, ror #2
   12300:	andeq	r2, r1, r0, ror #2
   12304:	andeq	r2, r1, r0, ror #2
   12308:	andeq	r2, r1, r0, ror #2
   1230c:	andeq	r2, r1, r0, ror #2
   12310:	andeq	r2, r1, r0, ror #2
   12314:	andeq	r2, r1, r0, ror #2
   12318:	andeq	r2, r1, r0, ror #2
   1231c:	andeq	r2, r1, r0, ror #2
   12320:	andeq	r2, r1, r0, ror #2
   12324:	andeq	r2, r1, r0, ror #2
   12328:	andeq	r2, r1, r0, ror #2
   1232c:	andeq	r2, r1, r0, ror #2
   12330:	andeq	r2, r1, r8, lsr r4
   12334:			; <UNDEFINED> instruction: 0x00011db4
   12338:	andeq	r2, r1, r0, ror #2
   1233c:	andeq	r2, r1, r8, lsr r4
   12340:	andeq	r2, r1, r0, ror #2
   12344:	andeq	r2, r1, r8, lsr r4
   12348:	andeq	r2, r1, r0, ror #2
   1234c:	andeq	r2, r1, r0, ror #2
   12350:	andeq	r2, r1, r0, ror #2
   12354:	andeq	r2, r1, r0, ror #2
   12358:	andeq	r2, r1, r0, ror #2
   1235c:	andeq	r2, r1, r0, ror #2
   12360:	andeq	r2, r1, r0, ror #2
   12364:	andeq	r2, r1, r0, ror #2
   12368:	andeq	r2, r1, r0, ror #2
   1236c:	andeq	r2, r1, r0, ror #2
   12370:	andeq	r2, r1, r0, ror #2
   12374:	andeq	r2, r1, r0, ror #2
   12378:	andeq	r2, r1, r0, ror #2
   1237c:	andeq	r2, r1, r0, ror #2
   12380:	andeq	r2, r1, r0, ror #2
   12384:	andeq	r2, r1, r0, ror #2
   12388:	andeq	r2, r1, r0, ror #2
   1238c:	andeq	r2, r1, r0, ror #2
   12390:	andeq	r2, r1, r0, ror #2
   12394:	andeq	r2, r1, r0, ror #2
   12398:	andeq	r2, r1, r0, ror #2
   1239c:	andeq	r2, r1, r0, ror #2
   123a0:	andeq	r2, r1, r0, ror #2
   123a4:	andeq	r2, r1, r0, ror #2
   123a8:	andeq	r2, r1, r0, ror #2
   123ac:	andeq	r2, r1, r0, ror #2
   123b0:	andeq	r1, r1, ip, asr #23
   123b4:	andeq	r2, r1, r8, lsr r4
   123b8:	andeq	r1, r1, ip, asr #23
   123bc:	andeq	r2, r1, r8, lsr #8
   123c0:	mov	r3, #110	; 0x6e
   123c4:	b	11ef8 <abort@plt+0x1170>
   123c8:	mov	r3, #116	; 0x74
   123cc:	b	11ef8 <abort@plt+0x1170>
   123d0:	sub	r2, fp, #2
   123d4:	mov	r3, #98	; 0x62
   123d8:	clz	r2, r2
   123dc:	lsr	r2, r2, #5
   123e0:	b	11de4 <abort@plt+0x105c>
   123e4:	sub	r2, fp, #2
   123e8:	mov	r3, #97	; 0x61
   123ec:	clz	r2, r2
   123f0:	lsr	r2, r2, #5
   123f4:	b	11de4 <abort@plt+0x105c>
   123f8:	ldr	r3, [sp, #28]
   123fc:	cmp	r3, #0
   12400:	bne	11ff0 <abort@plt+0x1268>
   12404:	ldr	r3, [sp, #164]	; 0xa4
   12408:	tst	r3, #1
   1240c:	bne	12a80 <abort@plt+0x1cf8>
   12410:	ldr	r6, [sp, #28]
   12414:	sub	r2, fp, #2
   12418:	mov	r7, r6
   1241c:	clz	r2, r2
   12420:	lsr	r2, r2, #5
   12424:	b	11c0c <abort@plt+0xe84>
   12428:	sub	r2, fp, #2
   1242c:	clz	r2, r2
   12430:	lsr	r2, r2, #5
   12434:	b	11bf8 <abort@plt+0xe70>
   12438:	sub	r2, fp, #2
   1243c:	mov	r6, #0
   12440:	clz	r2, r2
   12444:	lsr	r2, r2, #5
   12448:	b	11c00 <abort@plt+0xe78>
   1244c:	sub	r2, fp, #2
   12450:	clz	r2, r2
   12454:	lsr	r2, r2, #5
   12458:	b	11c00 <abort@plt+0xe78>
   1245c:	sub	r2, fp, #2
   12460:	mov	r3, #102	; 0x66
   12464:	clz	r2, r2
   12468:	lsr	r2, r2, #5
   1246c:	b	11de4 <abort@plt+0x105c>
   12470:	sub	r2, fp, #2
   12474:	mov	r3, #118	; 0x76
   12478:	clz	r2, r2
   1247c:	lsr	r2, r2, #5
   12480:	b	11de4 <abort@plt+0x105c>
   12484:	andeq	r4, r2, r8, lsl #30
   12488:	andeq	r4, r1, r4, asr r8
   1248c:	andeq	r4, r1, ip, lsr r8
   12490:	andeq	r4, r1, r0, asr r8
   12494:	ldr	r3, [sp, #48]	; 0x30
   12498:	ldrb	r5, [r3]
   1249c:	cmp	r5, #126	; 0x7e
   124a0:	ldrls	pc, [pc, r5, lsl #2]
   124a4:	b	12110 <abort@plt+0x1388>
   124a8:	strdeq	r1, [r1], -r0
   124ac:	andeq	r2, r1, r0, lsl r1
   124b0:	andeq	r2, r1, r0, lsl r1
   124b4:	andeq	r2, r1, r0, lsl r1
   124b8:	andeq	r2, r1, r0, lsl r1
   124bc:	andeq	r2, r1, r0, lsl r1
   124c0:	andeq	r2, r1, r0, lsl r1
   124c4:	andeq	r2, r1, r8, ror #13
   124c8:	andeq	r2, r1, r0, ror #13
   124cc:			; <UNDEFINED> instruction: 0x00011fbc
   124d0:	andeq	r1, r1, r4, lsl #31
   124d4:	ldrdeq	r1, [r1], -ip
   124d8:	andeq	r1, r1, r4, asr #31
   124dc:	ldrdeq	r2, [r1], -r4
   124e0:	andeq	r2, r1, r0, lsl r1
   124e4:	andeq	r2, r1, r0, lsl r1
   124e8:	andeq	r2, r1, r0, lsl r1
   124ec:	andeq	r2, r1, r0, lsl r1
   124f0:	andeq	r2, r1, r0, lsl r1
   124f4:	andeq	r2, r1, r0, lsl r1
   124f8:	andeq	r2, r1, r0, lsl r1
   124fc:	andeq	r2, r1, r0, lsl r1
   12500:	andeq	r2, r1, r0, lsl r1
   12504:	andeq	r2, r1, r0, lsl r1
   12508:	andeq	r2, r1, r0, lsl r1
   1250c:	andeq	r2, r1, r0, lsl r1
   12510:	andeq	r2, r1, r0, lsl r1
   12514:	andeq	r2, r1, r0, lsl r1
   12518:	andeq	r2, r1, r0, lsl r1
   1251c:	andeq	r2, r1, r0, lsl r1
   12520:	andeq	r2, r1, r0, lsl r1
   12524:	andeq	r2, r1, r0, lsl r1
   12528:	andeq	r2, r1, ip, asr #13
   1252c:	andeq	r1, r1, r4, ror #31
   12530:	andeq	r1, r1, r4, ror #31
   12534:			; <UNDEFINED> instruction: 0x000126b0
   12538:	andeq	r1, r1, r4, ror #31
   1253c:	andeq	r2, r1, r4, lsr #13
   12540:	andeq	r1, r1, r4, ror #31
   12544:	andeq	r1, r1, r4, lsr #28
   12548:	andeq	r1, r1, r4, ror #31
   1254c:	andeq	r1, r1, r4, ror #31
   12550:	andeq	r1, r1, r4, ror #31
   12554:	andeq	r2, r1, r4, lsr #13
   12558:	andeq	r2, r1, r4, lsr #13
   1255c:	andeq	r2, r1, r4, lsr #13
   12560:	andeq	r2, r1, r4, lsr #13
   12564:	andeq	r2, r1, r4, lsr #13
   12568:	andeq	r2, r1, r4, lsr #13
   1256c:	andeq	r2, r1, r4, lsr #13
   12570:	andeq	r2, r1, r4, lsr #13
   12574:	andeq	r2, r1, r4, lsr #13
   12578:	andeq	r2, r1, r4, lsr #13
   1257c:	andeq	r2, r1, r4, lsr #13
   12580:	andeq	r2, r1, r4, lsr #13
   12584:	andeq	r2, r1, r4, lsr #13
   12588:	andeq	r2, r1, r4, lsr #13
   1258c:	andeq	r2, r1, r4, lsr #13
   12590:	andeq	r2, r1, r4, lsr #13
   12594:	andeq	r1, r1, r4, ror #31
   12598:	andeq	r1, r1, r4, ror #31
   1259c:	andeq	r1, r1, r4, ror #31
   125a0:	andeq	r1, r1, r4, ror #31
   125a4:	strdeq	r1, [r1], -r8
   125a8:	andeq	r2, r1, r0, lsl r1
   125ac:	andeq	r2, r1, r4, lsr #13
   125b0:	andeq	r2, r1, r4, lsr #13
   125b4:	andeq	r2, r1, r4, lsr #13
   125b8:	andeq	r2, r1, r4, lsr #13
   125bc:	andeq	r2, r1, r4, lsr #13
   125c0:	andeq	r2, r1, r4, lsr #13
   125c4:	andeq	r2, r1, r4, lsr #13
   125c8:	andeq	r2, r1, r4, lsr #13
   125cc:	andeq	r2, r1, r4, lsr #13
   125d0:	andeq	r2, r1, r4, lsr #13
   125d4:	andeq	r2, r1, r4, lsr #13
   125d8:	andeq	r2, r1, r4, lsr #13
   125dc:	andeq	r2, r1, r4, lsr #13
   125e0:	andeq	r2, r1, r4, lsr #13
   125e4:	andeq	r2, r1, r4, lsr #13
   125e8:	andeq	r2, r1, r4, lsr #13
   125ec:	andeq	r2, r1, r4, lsr #13
   125f0:	andeq	r2, r1, r4, lsr #13
   125f4:	andeq	r2, r1, r4, lsr #13
   125f8:	andeq	r2, r1, r4, lsr #13
   125fc:	andeq	r2, r1, r4, lsr #13
   12600:	andeq	r2, r1, r4, lsr #13
   12604:	andeq	r2, r1, r4, lsr #13
   12608:	andeq	r2, r1, r4, lsr #13
   1260c:	andeq	r2, r1, r4, lsr #13
   12610:	andeq	r2, r1, r4, lsr #13
   12614:	andeq	r1, r1, r4, ror #31
   12618:			; <UNDEFINED> instruction: 0x00011db0
   1261c:	andeq	r2, r1, r4, lsr #13
   12620:	andeq	r1, r1, r4, ror #31
   12624:	andeq	r2, r1, r4, lsr #13
   12628:	andeq	r1, r1, r4, ror #31
   1262c:	andeq	r2, r1, r4, lsr #13
   12630:	andeq	r2, r1, r4, lsr #13
   12634:	andeq	r2, r1, r4, lsr #13
   12638:	andeq	r2, r1, r4, lsr #13
   1263c:	andeq	r2, r1, r4, lsr #13
   12640:	andeq	r2, r1, r4, lsr #13
   12644:	andeq	r2, r1, r4, lsr #13
   12648:	andeq	r2, r1, r4, lsr #13
   1264c:	andeq	r2, r1, r4, lsr #13
   12650:	andeq	r2, r1, r4, lsr #13
   12654:	andeq	r2, r1, r4, lsr #13
   12658:	andeq	r2, r1, r4, lsr #13
   1265c:	andeq	r2, r1, r4, lsr #13
   12660:	andeq	r2, r1, r4, lsr #13
   12664:	andeq	r2, r1, r4, lsr #13
   12668:	andeq	r2, r1, r4, lsr #13
   1266c:	andeq	r2, r1, r4, lsr #13
   12670:	andeq	r2, r1, r4, lsr #13
   12674:	andeq	r2, r1, r4, lsr #13
   12678:	andeq	r2, r1, r4, lsr #13
   1267c:	andeq	r2, r1, r4, lsr #13
   12680:	andeq	r2, r1, r4, lsr #13
   12684:	andeq	r2, r1, r4, lsr #13
   12688:	andeq	r2, r1, r4, lsr #13
   1268c:	andeq	r2, r1, r4, lsr #13
   12690:	andeq	r2, r1, r4, lsr #13
   12694:	andeq	r1, r1, r8, asr #23
   12698:	andeq	r1, r1, r4, ror #31
   1269c:	andeq	r1, r1, r8, asr #23
   126a0:			; <UNDEFINED> instruction: 0x000126b0
   126a4:	mov	r6, r7
   126a8:	mov	r7, #0
   126ac:	b	11c28 <abort@plt+0xea0>
   126b0:	cmp	r9, #0
   126b4:	mov	r3, #0
   126b8:	beq	120f8 <abort@plt+0x1370>
   126bc:	mov	r6, #0
   126c0:	mov	r7, r3
   126c4:	mov	r3, r6
   126c8:	b	11c2c <abort@plt+0xea4>
   126cc:	mov	r3, #0
   126d0:	b	120d8 <abort@plt+0x1350>
   126d4:	mov	r7, #0
   126d8:	mov	r3, #114	; 0x72
   126dc:	b	11ef8 <abort@plt+0x1170>
   126e0:	mov	r5, #98	; 0x62
   126e4:	b	11f88 <abort@plt+0x1200>
   126e8:	mov	r5, #97	; 0x61
   126ec:	b	11fc8 <abort@plt+0x1240>
   126f0:	ldr	r3, [sp, #32]
   126f4:	cmp	r3, #0
   126f8:	bne	12b40 <abort@plt+0x1db8>
   126fc:	add	r9, r9, #1
   12700:	ldr	r3, [sp, #44]	; 0x2c
   12704:	mov	r6, #0
   12708:	mov	r5, #92	; 0x5c
   1270c:	b	11ec0 <abort@plt+0x1138>
   12710:	ldr	r3, [sp, #36]	; 0x24
   12714:	ldrb	r3, [r3, #1]
   12718:	adds	r3, r3, #0
   1271c:	movne	r3, #1
   12720:	b	11be4 <abort@plt+0xe5c>
   12724:	ldr	r3, [sp, #164]	; 0xa4
   12728:	ands	r3, r3, #4
   1272c:	beq	12750 <abort@plt+0x19c8>
   12730:	ldr	r2, [sp, #24]
   12734:	add	r3, r9, #2
   12738:	cmp	r3, r2
   1273c:	bcs	12750 <abort@plt+0x19c8>
   12740:	ldr	r2, [sp, #48]	; 0x30
   12744:	ldrb	r5, [r2, #1]
   12748:	cmp	r5, #63	; 0x3f
   1274c:	beq	12bb4 <abort@plt+0x1e2c>
   12750:	mov	r2, #0
   12754:	mov	r6, r2
   12758:	mov	r5, #63	; 0x3f
   1275c:	b	11c0c <abort@plt+0xe84>
   12760:	ldr	r3, [sp, #32]
   12764:	cmp	r3, #0
   12768:	bne	12b40 <abort@plt+0x1db8>
   1276c:	mov	r6, r3
   12770:	mov	r5, #63	; 0x3f
   12774:	b	11c54 <abort@plt+0xecc>
   12778:	ldr	r3, [sp, #24]
   1277c:	cmn	r3, #1
   12780:	mov	r3, #0
   12784:	str	r3, [sp, #108]	; 0x6c
   12788:	str	r3, [sp, #112]	; 0x70
   1278c:	bne	1279c <abort@plt+0x1a14>
   12790:	ldr	r0, [sp, #36]	; 0x24
   12794:	bl	10ce0 <strlen@plt>
   12798:	str	r0, [sp, #24]
   1279c:	mov	r3, #0
   127a0:	str	sl, [sp, #88]	; 0x58
   127a4:	ldr	sl, [sp, #36]	; 0x24
   127a8:	str	r5, [sp, #92]	; 0x5c
   127ac:	mov	r5, r3
   127b0:	str	r7, [sp, #96]	; 0x60
   127b4:	str	r4, [sp, #100]	; 0x64
   127b8:	str	r8, [sp, #84]	; 0x54
   127bc:	ldr	r3, [sp, #24]
   127c0:	add	r4, r9, r5
   127c4:	add	r7, sl, r4
   127c8:	sub	r2, r3, r4
   127cc:	mov	r1, r7
   127d0:	add	r3, sp, #108	; 0x6c
   127d4:	add	r0, sp, #104	; 0x68
   127d8:	bl	13eb4 <abort@plt+0x312c>
   127dc:	subs	r8, r0, #0
   127e0:	beq	12830 <abort@plt+0x1aa8>
   127e4:	cmn	r8, #1
   127e8:	beq	12b90 <abort@plt+0x1e08>
   127ec:	cmn	r8, #2
   127f0:	beq	12cb0 <abort@plt+0x1f28>
   127f4:	ldr	r3, [sp, #32]
   127f8:	cmp	fp, #2
   127fc:	movne	r3, #0
   12800:	andeq	r3, r3, #1
   12804:	cmp	r3, #0
   12808:	bne	12990 <abort@plt+0x1c08>
   1280c:	ldr	r0, [sp, #104]	; 0x68
   12810:	bl	10c38 <iswprint@plt>
   12814:	add	r5, r5, r8
   12818:	cmp	r0, #0
   1281c:	add	r0, sp, #108	; 0x6c
   12820:	moveq	r6, #0
   12824:	bl	10be4 <mbsinit@plt>
   12828:	cmp	r0, #0
   1282c:	beq	127bc <abort@plt+0x1a34>
   12830:	ldr	r3, [sp, #28]
   12834:	mov	ip, r5
   12838:	eor	r2, r6, #1
   1283c:	ldr	r5, [sp, #92]	; 0x5c
   12840:	ldr	r7, [sp, #96]	; 0x60
   12844:	ldr	r4, [sp, #100]	; 0x64
   12848:	ldr	r8, [sp, #84]	; 0x54
   1284c:	ldr	sl, [sp, #88]	; 0x58
   12850:	and	r2, r2, r3
   12854:	cmp	ip, #1
   12858:	bls	12158 <abort@plt+0x13d0>
   1285c:	add	r1, ip, r9
   12860:	ldr	lr, [sp, #48]	; 0x30
   12864:	mov	r0, #0
   12868:	str	r6, [sp, #48]	; 0x30
   1286c:	mov	ip, #39	; 0x27
   12870:	ldr	r6, [sp, #44]	; 0x2c
   12874:	b	1292c <abort@plt+0x1ba4>
   12878:	ldr	r0, [sp, #32]
   1287c:	sub	r3, fp, #2
   12880:	cmp	r0, #0
   12884:	clz	r3, r3
   12888:	lsr	r3, r3, #5
   1288c:	bne	12a94 <abort@plt+0x1d0c>
   12890:	eor	r0, r6, #1
   12894:	ands	r3, r3, r0
   12898:	beq	128c8 <abort@plt+0x1b40>
   1289c:	add	r0, r4, #1
   128a0:	cmp	sl, r4
   128a4:	strbhi	ip, [r8, r4]
   128a8:	cmp	sl, r0
   128ac:	movhi	r6, #36	; 0x24
   128b0:	strbhi	r6, [r8, r0]
   128b4:	add	r0, r4, #2
   128b8:	mov	r6, r3
   128bc:	add	r4, r4, #3
   128c0:	cmp	sl, r0
   128c4:	strbhi	ip, [r8, r0]
   128c8:	cmp	sl, r4
   128cc:	movhi	r3, #92	; 0x5c
   128d0:	strbhi	r3, [r8, r4]
   128d4:	add	r3, r4, #1
   128d8:	cmp	sl, r3
   128dc:	lsrhi	r0, r5, #6
   128e0:	addhi	r0, r0, #48	; 0x30
   128e4:	strbhi	r0, [r8, r3]
   128e8:	add	r0, r4, #2
   128ec:	cmp	sl, r0
   128f0:	lsrhi	r3, r5, #3
   128f4:	andhi	r3, r3, #7
   128f8:	addhi	r3, r3, #48	; 0x30
   128fc:	add	r9, r9, #1
   12900:	strbhi	r3, [r8, r0]
   12904:	and	r5, r5, #7
   12908:	cmp	r9, r1
   1290c:	add	r5, r5, #48	; 0x30
   12910:	add	r4, r4, #3
   12914:	bcs	12ab4 <abort@plt+0x1d2c>
   12918:	mov	r0, r2
   1291c:	cmp	sl, r4
   12920:	strbhi	r5, [r8, r4]
   12924:	ldrb	r5, [lr, #1]!
   12928:	add	r4, r4, #1
   1292c:	cmp	r2, #0
   12930:	bne	12878 <abort@plt+0x1af0>
   12934:	eor	r3, r0, #1
   12938:	and	r3, r3, r6
   1293c:	cmp	r7, #0
   12940:	uxtb	r3, r3
   12944:	beq	12958 <abort@plt+0x1bd0>
   12948:	cmp	sl, r4
   1294c:	movhi	r7, #92	; 0x5c
   12950:	strbhi	r7, [r8, r4]
   12954:	add	r4, r4, #1
   12958:	add	r9, r9, #1
   1295c:	cmp	r9, r1
   12960:	bcs	12aa8 <abort@plt+0x1d20>
   12964:	cmp	r3, #0
   12968:	beq	12ad4 <abort@plt+0x1d4c>
   1296c:	cmp	sl, r4
   12970:	add	r3, r4, #1
   12974:	strbhi	ip, [r8, r4]
   12978:	mov	r7, #0
   1297c:	cmp	sl, r3
   12980:	strbhi	ip, [r8, r3]
   12984:	add	r4, r4, #2
   12988:	mov	r6, r7
   1298c:	b	1291c <abort@plt+0x1b94>
   12990:	cmp	r8, #1
   12994:	beq	1280c <abort@plt+0x1a84>
   12998:	add	r1, r4, #1
   1299c:	add	r3, sl, r8
   129a0:	add	r1, sl, r1
   129a4:	add	r4, r3, r4
   129a8:	ldrb	r3, [r1], #1
   129ac:	sub	r3, r3, #91	; 0x5b
   129b0:	cmp	r3, #33	; 0x21
   129b4:	ldrls	pc, [pc, r3, lsl #2]
   129b8:	b	12a44 <abort@plt+0x1cbc>
   129bc:	andeq	r2, r1, r0, asr sl
   129c0:	andeq	r2, r1, r0, asr sl
   129c4:	andeq	r2, r1, r4, asr #20
   129c8:	andeq	r2, r1, r0, asr sl
   129cc:	andeq	r2, r1, r4, asr #20
   129d0:	andeq	r2, r1, r0, asr sl
   129d4:	andeq	r2, r1, r4, asr #20
   129d8:	andeq	r2, r1, r4, asr #20
   129dc:	andeq	r2, r1, r4, asr #20
   129e0:	andeq	r2, r1, r4, asr #20
   129e4:	andeq	r2, r1, r4, asr #20
   129e8:	andeq	r2, r1, r4, asr #20
   129ec:	andeq	r2, r1, r4, asr #20
   129f0:	andeq	r2, r1, r4, asr #20
   129f4:	andeq	r2, r1, r4, asr #20
   129f8:	andeq	r2, r1, r4, asr #20
   129fc:	andeq	r2, r1, r4, asr #20
   12a00:	andeq	r2, r1, r4, asr #20
   12a04:	andeq	r2, r1, r4, asr #20
   12a08:	andeq	r2, r1, r4, asr #20
   12a0c:	andeq	r2, r1, r4, asr #20
   12a10:	andeq	r2, r1, r4, asr #20
   12a14:	andeq	r2, r1, r4, asr #20
   12a18:	andeq	r2, r1, r4, asr #20
   12a1c:	andeq	r2, r1, r4, asr #20
   12a20:	andeq	r2, r1, r4, asr #20
   12a24:	andeq	r2, r1, r4, asr #20
   12a28:	andeq	r2, r1, r4, asr #20
   12a2c:	andeq	r2, r1, r4, asr #20
   12a30:	andeq	r2, r1, r4, asr #20
   12a34:	andeq	r2, r1, r4, asr #20
   12a38:	andeq	r2, r1, r4, asr #20
   12a3c:	andeq	r2, r1, r4, asr #20
   12a40:	andeq	r2, r1, r0, asr sl
   12a44:	cmp	r4, r1
   12a48:	bne	129a8 <abort@plt+0x1c20>
   12a4c:	b	1280c <abort@plt+0x1a84>
   12a50:	ldr	fp, [sp, #84]	; 0x54
   12a54:	ldr	sl, [sp, #88]	; 0x58
   12a58:	mov	r8, #2
   12a5c:	b	11f18 <abort@plt+0x1190>
   12a60:	cmp	sl, r4
   12a64:	movls	r1, r4
   12a68:	bls	12068 <abort@plt+0x12e0>
   12a6c:	ldr	r3, [sp, #44]	; 0x2c
   12a70:	b	12058 <abort@plt+0x12d0>
   12a74:	str	sl, [sp, #72]	; 0x48
   12a78:	ldr	sl, [sp, #32]
   12a7c:	b	11e90 <abort@plt+0x1108>
   12a80:	add	r9, r9, #1
   12a84:	b	11784 <abort@plt+0x9fc>
   12a88:	ldr	r2, [sp, #28]
   12a8c:	mov	r6, #0
   12a90:	b	1285c <abort@plt+0x1ad4>
   12a94:	str	fp, [sp, #160]	; 0xa0
   12a98:	str	r3, [sp, #28]
   12a9c:	mov	fp, r8
   12aa0:	ldr	r8, [sp, #160]	; 0xa0
   12aa4:	b	11f18 <abort@plt+0x1190>
   12aa8:	str	r6, [sp, #44]	; 0x2c
   12aac:	ldr	r6, [sp, #48]	; 0x30
   12ab0:	b	11ec0 <abort@plt+0x1138>
   12ab4:	str	r6, [sp, #44]	; 0x2c
   12ab8:	ldr	r6, [sp, #48]	; 0x30
   12abc:	b	11ccc <abort@plt+0xf44>
   12ac0:	add	r4, r4, #4
   12ac4:	str	r3, [sp, #44]	; 0x2c
   12ac8:	mov	r6, #0
   12acc:	mov	r5, #48	; 0x30
   12ad0:	b	11c54 <abort@plt+0xecc>
   12ad4:	mov	r7, r3
   12ad8:	b	1291c <abort@plt+0x1b94>
   12adc:	ldr	r3, [pc, #-1624]	; 1248c <abort@plt+0x1704>
   12ae0:	mov	r4, #1
   12ae4:	str	r4, [sp, #40]	; 0x28
   12ae8:	str	r4, [sp, #28]
   12aec:	str	r4, [sp, #52]	; 0x34
   12af0:	str	sl, [sp, #72]	; 0x48
   12af4:	str	sl, [sp, #68]	; 0x44
   12af8:	str	sl, [sp, #44]	; 0x2c
   12afc:	str	sl, [sp, #32]
   12b00:	str	r3, [sp, #60]	; 0x3c
   12b04:	b	11774 <abort@plt+0x9ec>
   12b08:	mov	r3, r6
   12b0c:	mov	r5, #48	; 0x30
   12b10:	mov	r6, #0
   12b14:	b	11c54 <abort@plt+0xecc>
   12b18:	cmp	sl, r4
   12b1c:	movhi	r3, #48	; 0x30
   12b20:	strbhi	r3, [r8, r4]
   12b24:	add	r3, r1, #2
   12b28:	cmp	sl, r3
   12b2c:	movhi	r0, #48	; 0x30
   12b30:	strbhi	r0, [r8, r3]
   12b34:	add	r4, r1, #3
   12b38:	mov	r5, #48	; 0x30
   12b3c:	b	1209c <abort@plt+0x1314>
   12b40:	str	fp, [sp, #160]	; 0xa0
   12b44:	mov	fp, r8
   12b48:	ldr	r8, [sp, #160]	; 0xa0
   12b4c:	b	11f18 <abort@plt+0x1190>
   12b50:	ldr	r2, [sp, #80]	; 0x50
   12b54:	ldrb	r3, [r2]
   12b58:	cmp	r3, #0
   12b5c:	beq	11744 <abort@plt+0x9bc>
   12b60:	cmp	sl, r4
   12b64:	strbhi	r3, [fp, r4]
   12b68:	ldrb	r3, [r2, #1]!
   12b6c:	add	r4, r4, #1
   12b70:	cmp	r3, #0
   12b74:	bne	12b60 <abort@plt+0x1dd8>
   12b78:	b	11744 <abort@plt+0x9bc>
   12b7c:	str	fp, [sp, #160]	; 0xa0
   12b80:	mov	r3, #0
   12b84:	mov	fp, r8
   12b88:	ldr	r8, [sp, #160]	; 0xa0
   12b8c:	b	11fac <abort@plt+0x1224>
   12b90:	mov	ip, r5
   12b94:	ldr	r7, [sp, #96]	; 0x60
   12b98:	ldr	r5, [sp, #92]	; 0x5c
   12b9c:	ldr	r4, [sp, #100]	; 0x64
   12ba0:	ldr	r8, [sp, #84]	; 0x54
   12ba4:	ldr	sl, [sp, #88]	; 0x58
   12ba8:	ldr	r2, [sp, #28]
   12bac:	mov	r6, #0
   12bb0:	b	12854 <abort@plt+0x1acc>
   12bb4:	ldr	r2, [sp, #36]	; 0x24
   12bb8:	ldrb	r1, [r2, r3]
   12bbc:	sub	r2, r1, #33	; 0x21
   12bc0:	cmp	r2, #29
   12bc4:	ldrls	pc, [pc, r2, lsl #2]
   12bc8:	b	12ca4 <abort@plt+0x1f1c>
   12bcc:	andeq	r2, r1, r4, asr #24
   12bd0:	andeq	r2, r1, r4, lsr #25
   12bd4:	andeq	r2, r1, r4, lsr #25
   12bd8:	andeq	r2, r1, r4, lsr #25
   12bdc:	andeq	r2, r1, r4, lsr #25
   12be0:	andeq	r2, r1, r4, lsr #25
   12be4:	andeq	r2, r1, r4, asr #24
   12be8:	andeq	r2, r1, r4, asr #24
   12bec:	andeq	r2, r1, r4, asr #24
   12bf0:	andeq	r2, r1, r4, lsr #25
   12bf4:	andeq	r2, r1, r4, lsr #25
   12bf8:	andeq	r2, r1, r4, lsr #25
   12bfc:	andeq	r2, r1, r4, asr #24
   12c00:	andeq	r2, r1, r4, lsr #25
   12c04:	andeq	r2, r1, r4, asr #24
   12c08:	andeq	r2, r1, r4, lsr #25
   12c0c:	andeq	r2, r1, r4, lsr #25
   12c10:	andeq	r2, r1, r4, lsr #25
   12c14:	andeq	r2, r1, r4, lsr #25
   12c18:	andeq	r2, r1, r4, lsr #25
   12c1c:	andeq	r2, r1, r4, lsr #25
   12c20:	andeq	r2, r1, r4, lsr #25
   12c24:	andeq	r2, r1, r4, lsr #25
   12c28:	andeq	r2, r1, r4, lsr #25
   12c2c:	andeq	r2, r1, r4, lsr #25
   12c30:	andeq	r2, r1, r4, lsr #25
   12c34:	andeq	r2, r1, r4, lsr #25
   12c38:	andeq	r2, r1, r4, asr #24
   12c3c:	andeq	r2, r1, r4, asr #24
   12c40:	andeq	r2, r1, r4, asr #24
   12c44:	ldr	r2, [sp, #32]
   12c48:	cmp	r2, #0
   12c4c:	bne	12d50 <abort@plt+0x1fc8>
   12c50:	cmp	sl, r4
   12c54:	movhi	r2, #63	; 0x3f
   12c58:	strbhi	r2, [r8, r4]
   12c5c:	add	r2, r4, #1
   12c60:	cmp	sl, r2
   12c64:	movhi	r0, #34	; 0x22
   12c68:	strbhi	r0, [r8, r2]
   12c6c:	add	r2, r4, #2
   12c70:	cmp	sl, r2
   12c74:	movhi	r0, #34	; 0x22
   12c78:	strbhi	r0, [r8, r2]
   12c7c:	add	r2, r4, #3
   12c80:	cmp	sl, r2
   12c84:	movhi	r0, #63	; 0x3f
   12c88:	strbhi	r0, [r8, r2]
   12c8c:	mov	r2, #0
   12c90:	add	r4, r4, #4
   12c94:	mov	r5, r1
   12c98:	mov	r9, r3
   12c9c:	mov	r6, r2
   12ca0:	b	1209c <abort@plt+0x1314>
   12ca4:	mov	r2, #0
   12ca8:	mov	r6, r2
   12cac:	b	11c0c <abort@plt+0xe84>
   12cb0:	ldr	r0, [sp, #24]
   12cb4:	mov	r1, r4
   12cb8:	cmp	r1, r0
   12cbc:	mov	r2, r7
   12cc0:	mov	r3, r5
   12cc4:	mov	ip, r5
   12cc8:	ldr	r7, [sp, #96]	; 0x60
   12ccc:	ldr	r5, [sp, #92]	; 0x5c
   12cd0:	ldr	r4, [sp, #100]	; 0x64
   12cd4:	ldr	r8, [sp, #84]	; 0x54
   12cd8:	ldr	sl, [sp, #88]	; 0x58
   12cdc:	bcs	12d10 <abort@plt+0x1f88>
   12ce0:	ldrb	r6, [r2]
   12ce4:	cmp	r6, #0
   12ce8:	bne	12cfc <abort@plt+0x1f74>
   12cec:	b	12e2c <abort@plt+0x20a4>
   12cf0:	ldrb	r6, [r2, #1]!
   12cf4:	cmp	r6, #0
   12cf8:	beq	12db4 <abort@plt+0x202c>
   12cfc:	add	r3, r3, #1
   12d00:	add	r1, r9, r3
   12d04:	cmp	r1, r0
   12d08:	bcc	12cf0 <abort@plt+0x1f68>
   12d0c:	mov	ip, r3
   12d10:	ldr	r2, [sp, #28]
   12d14:	mov	r6, #0
   12d18:	b	12854 <abort@plt+0x1acc>
   12d1c:	mov	r3, #1
   12d20:	str	r3, [sp, #40]	; 0x28
   12d24:	str	r3, [sp, #32]
   12d28:	str	r3, [sp, #28]
   12d2c:	str	r3, [sp, #52]	; 0x34
   12d30:	ldr	r3, [pc, #-2220]	; 1248c <abort@plt+0x1704>
   12d34:	mov	r2, #0
   12d38:	str	r2, [sp, #68]	; 0x44
   12d3c:	str	r2, [sp, #44]	; 0x2c
   12d40:	str	r2, [sp, #72]	; 0x48
   12d44:	mov	r4, r2
   12d48:	str	r3, [sp, #60]	; 0x3c
   12d4c:	b	11774 <abort@plt+0x9ec>
   12d50:	str	fp, [sp, #160]	; 0xa0
   12d54:	mov	fp, r8
   12d58:	ldr	r8, [sp, #160]	; 0xa0
   12d5c:	b	11f24 <abort@plt+0x119c>
   12d60:	mov	r2, r3
   12d64:	ldr	r3, [sp, #60]	; 0x3c
   12d68:	cmp	r3, #0
   12d6c:	moveq	r2, #0
   12d70:	andne	r2, r2, #1
   12d74:	cmp	r2, #0
   12d78:	beq	12da4 <abort@plt+0x201c>
   12d7c:	mov	r2, r3
   12d80:	ldrb	r3, [r3]
   12d84:	cmp	r3, #0
   12d88:	beq	12da4 <abort@plt+0x201c>
   12d8c:	cmp	sl, r4
   12d90:	strbhi	r3, [fp, r4]
   12d94:	ldrb	r3, [r2, #1]!
   12d98:	add	r4, r4, #1
   12d9c:	cmp	r3, #0
   12da0:	bne	12d8c <abort@plt+0x2004>
   12da4:	cmp	sl, r4
   12da8:	movhi	r3, #0
   12dac:	strbhi	r3, [fp, r4]
   12db0:	b	11f64 <abort@plt+0x11dc>
   12db4:	mov	ip, r3
   12db8:	ldr	r2, [sp, #28]
   12dbc:	b	12854 <abort@plt+0x1acc>
   12dc0:	str	fp, [sp, #160]	; 0xa0
   12dc4:	mov	fp, r8
   12dc8:	ldr	r8, [sp, #160]	; 0xa0
   12dcc:	sub	r3, r8, #2
   12dd0:	clz	r3, r3
   12dd4:	lsr	r3, r3, #5
   12dd8:	str	r3, [sp, #28]
   12ddc:	b	11f18 <abort@plt+0x1190>
   12de0:	ldr	r3, [sp, #76]	; 0x4c
   12de4:	mov	ip, #5
   12de8:	str	r3, [sp, #16]
   12dec:	ldr	r3, [sp, #80]	; 0x50
   12df0:	ldr	r2, [sp, #36]	; 0x24
   12df4:	str	r3, [sp, #12]
   12df8:	ldr	r3, [sp, #56]	; 0x38
   12dfc:	ldr	r1, [sp, #72]	; 0x48
   12e00:	str	r3, [sp, #8]
   12e04:	ldr	r3, [sp, #164]	; 0xa4
   12e08:	mov	r0, fp
   12e0c:	str	r3, [sp, #4]
   12e10:	str	ip, [sp]
   12e14:	ldr	r3, [sp, #24]
   12e18:	bl	1167c <abort@plt+0x8f4>
   12e1c:	mov	r4, r0
   12e20:	b	11f64 <abort@plt+0x11dc>
   12e24:	mov	r8, #2
   12e28:	b	11f18 <abort@plt+0x1190>
   12e2c:	ldr	r2, [sp, #28]
   12e30:	b	12854 <abort@plt+0x1acc>
   12e34:	mov	r3, #0
   12e38:	str	r3, [sp, #68]	; 0x44
   12e3c:	str	r3, [sp, #44]	; 0x2c
   12e40:	str	r3, [sp, #72]	; 0x48
   12e44:	str	r3, [sp, #28]
   12e48:	mov	r4, r3
   12e4c:	ldr	r3, [pc, #-2500]	; 12490 <abort@plt+0x1708>
   12e50:	mov	r2, #1
   12e54:	str	r2, [sp, #40]	; 0x28
   12e58:	str	r2, [sp, #32]
   12e5c:	str	r2, [sp, #52]	; 0x34
   12e60:	str	r3, [sp, #60]	; 0x3c
   12e64:	b	11774 <abort@plt+0x9ec>
   12e68:	bl	10c14 <__stack_chk_fail@plt>
   12e6c:	mov	r5, r3
   12e70:	mov	r6, #0
   12e74:	b	11c68 <abort@plt+0xee0>
   12e78:	mov	r3, #0
   12e7c:	mov	r2, #1
   12e80:	str	r3, [sp, #44]	; 0x2c
   12e84:	str	r3, [sp, #72]	; 0x48
   12e88:	str	r2, [sp, #40]	; 0x28
   12e8c:	b	11d84 <abort@plt+0xffc>
   12e90:	bl	10d88 <abort@plt>
   12e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e98:	sub	sp, sp, #44	; 0x2c
   12e9c:	mov	r6, r0
   12ea0:	mov	r4, r3
   12ea4:	mov	sl, r1
   12ea8:	mov	fp, r2
   12eac:	bl	10cec <__errno_location@plt>
   12eb0:	ldr	r7, [pc, #364]	; 13024 <abort@plt+0x229c>
   12eb4:	cmp	r6, #0
   12eb8:	ldr	r5, [r7]
   12ebc:	ldr	r3, [r0]
   12ec0:	str	r3, [sp, #24]
   12ec4:	blt	13020 <abort@plt+0x2298>
   12ec8:	ldr	r3, [r7, #4]
   12ecc:	mov	r8, r0
   12ed0:	cmp	r3, r6
   12ed4:	bgt	12f20 <abort@plt+0x2198>
   12ed8:	cmn	r6, #-268435454	; 0xf0000002
   12edc:	bgt	1301c <abort@plt+0x2294>
   12ee0:	add	r9, r6, #1
   12ee4:	add	r3, r7, #8
   12ee8:	cmp	r5, r3
   12eec:	lsl	r1, r9, #3
   12ef0:	beq	12ffc <abort@plt+0x2274>
   12ef4:	mov	r0, r5
   12ef8:	bl	13c88 <abort@plt+0x2f00>
   12efc:	mov	r5, r0
   12f00:	str	r0, [r7]
   12f04:	ldr	r0, [r7, #4]
   12f08:	mov	r1, #0
   12f0c:	sub	r2, r9, r0
   12f10:	add	r0, r5, r0, lsl #3
   12f14:	lsl	r2, r2, #3
   12f18:	bl	10d04 <memset@plt>
   12f1c:	str	r9, [r7, #4]
   12f20:	add	r3, r5, r6, lsl #3
   12f24:	ldr	r1, [r4, #4]
   12f28:	ldr	r7, [r3, #4]
   12f2c:	ldr	r9, [r5, r6, lsl #3]
   12f30:	ldr	r2, [r4, #40]	; 0x28
   12f34:	ldr	ip, [r4, #44]	; 0x2c
   12f38:	str	r3, [sp, #28]
   12f3c:	ldr	r3, [r4]
   12f40:	orr	r1, r1, #1
   12f44:	add	lr, r4, #8
   12f48:	str	r1, [sp, #36]	; 0x24
   12f4c:	str	r1, [sp, #4]
   12f50:	str	r2, [sp, #12]
   12f54:	str	r3, [sp]
   12f58:	mov	r0, r7
   12f5c:	mov	r1, r9
   12f60:	str	ip, [sp, #16]
   12f64:	str	lr, [sp, #8]
   12f68:	mov	r3, fp
   12f6c:	mov	r2, sl
   12f70:	str	lr, [sp, #32]
   12f74:	bl	1167c <abort@plt+0x8f4>
   12f78:	cmp	r9, r0
   12f7c:	bhi	12fe8 <abort@plt+0x2260>
   12f80:	ldr	r3, [pc, #160]	; 13028 <abort@plt+0x22a0>
   12f84:	add	r9, r0, #1
   12f88:	cmp	r7, r3
   12f8c:	str	r9, [r5, r6, lsl #3]
   12f90:	beq	12f9c <abort@plt+0x2214>
   12f94:	mov	r0, r7
   12f98:	bl	10bc0 <free@plt>
   12f9c:	mov	r0, r9
   12fa0:	bl	13c2c <abort@plt+0x2ea4>
   12fa4:	ldr	lr, [sp, #28]
   12fa8:	ldr	ip, [r4, #44]	; 0x2c
   12fac:	ldr	r5, [r4, #40]	; 0x28
   12fb0:	mov	r3, fp
   12fb4:	mov	r2, sl
   12fb8:	mov	r1, r9
   12fbc:	str	r0, [lr, #4]
   12fc0:	ldr	lr, [r4]
   12fc4:	ldr	r4, [sp, #32]
   12fc8:	str	ip, [sp, #16]
   12fcc:	str	r4, [sp, #8]
   12fd0:	ldr	r4, [sp, #36]	; 0x24
   12fd4:	str	r5, [sp, #12]
   12fd8:	str	r4, [sp, #4]
   12fdc:	str	lr, [sp]
   12fe0:	mov	r7, r0
   12fe4:	bl	1167c <abort@plt+0x8f4>
   12fe8:	ldr	r3, [sp, #24]
   12fec:	mov	r0, r7
   12ff0:	str	r3, [r8]
   12ff4:	add	sp, sp, #44	; 0x2c
   12ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ffc:	mov	r0, #0
   13000:	bl	13c88 <abort@plt+0x2f00>
   13004:	ldr	r3, [pc, #32]	; 1302c <abort@plt+0x22a4>
   13008:	mov	r5, r0
   1300c:	ldm	r3, {r0, r1}
   13010:	str	r5, [r7]
   13014:	stm	r5, {r0, r1}
   13018:	b	12f04 <abort@plt+0x217c>
   1301c:	bl	13e74 <abort@plt+0x30ec>
   13020:	bl	10d88 <abort@plt>
   13024:	ldrdeq	r5, [r2], -r0
   13028:	andeq	r5, r2, ip, lsr r1
   1302c:	ldrdeq	r5, [r2], -r8
   13030:	push	{r4, r5, r6, lr}
   13034:	mov	r5, r0
   13038:	bl	10cec <__errno_location@plt>
   1303c:	cmp	r5, #0
   13040:	mov	r1, #48	; 0x30
   13044:	mov	r4, r0
   13048:	ldr	r0, [pc, #16]	; 13060 <abort@plt+0x22d8>
   1304c:	ldr	r6, [r4]
   13050:	movne	r0, r5
   13054:	bl	13e34 <abort@plt+0x30ac>
   13058:	str	r6, [r4]
   1305c:	pop	{r4, r5, r6, pc}
   13060:	andeq	r5, r2, ip, lsr r2
   13064:	ldr	r3, [pc, #12]	; 13078 <abort@plt+0x22f0>
   13068:	cmp	r0, #0
   1306c:	moveq	r0, r3
   13070:	ldr	r0, [r0]
   13074:	bx	lr
   13078:	andeq	r5, r2, ip, lsr r2
   1307c:	ldr	r3, [pc, #12]	; 13090 <abort@plt+0x2308>
   13080:	cmp	r0, #0
   13084:	moveq	r0, r3
   13088:	str	r1, [r0]
   1308c:	bx	lr
   13090:	andeq	r5, r2, ip, lsr r2
   13094:	ldr	r3, [pc, #52]	; 130d0 <abort@plt+0x2348>
   13098:	cmp	r0, #0
   1309c:	moveq	r0, r3
   130a0:	add	r3, r0, #8
   130a4:	push	{lr}		; (str lr, [sp, #-4]!)
   130a8:	lsr	lr, r1, #5
   130ac:	and	r1, r1, #31
   130b0:	ldr	ip, [r3, lr, lsl #2]
   130b4:	lsr	r0, ip, r1
   130b8:	eor	r2, r2, r0
   130bc:	and	r2, r2, #1
   130c0:	and	r0, r0, #1
   130c4:	eor	r1, ip, r2, lsl r1
   130c8:	str	r1, [r3, lr, lsl #2]
   130cc:	pop	{pc}		; (ldr pc, [sp], #4)
   130d0:	andeq	r5, r2, ip, lsr r2
   130d4:	ldr	r3, [pc, #16]	; 130ec <abort@plt+0x2364>
   130d8:	cmp	r0, #0
   130dc:	movne	r3, r0
   130e0:	ldr	r0, [r3, #4]
   130e4:	str	r1, [r3, #4]
   130e8:	bx	lr
   130ec:	andeq	r5, r2, ip, lsr r2
   130f0:	ldr	r3, [pc, #44]	; 13124 <abort@plt+0x239c>
   130f4:	cmp	r0, #0
   130f8:	moveq	r0, r3
   130fc:	mov	ip, #10
   13100:	cmp	r2, #0
   13104:	cmpne	r1, #0
   13108:	str	ip, [r0]
   1310c:	beq	1311c <abort@plt+0x2394>
   13110:	str	r1, [r0, #40]	; 0x28
   13114:	str	r2, [r0, #44]	; 0x2c
   13118:	bx	lr
   1311c:	push	{r4, lr}
   13120:	bl	10d88 <abort@plt>
   13124:	andeq	r5, r2, ip, lsr r2
   13128:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1312c:	sub	sp, sp, #24
   13130:	ldr	ip, [pc, #108]	; 131a4 <abort@plt+0x241c>
   13134:	ldr	r4, [sp, #56]	; 0x38
   13138:	mov	r9, r2
   1313c:	cmp	r4, #0
   13140:	moveq	r4, ip
   13144:	mov	sl, r3
   13148:	mov	r7, r0
   1314c:	mov	r8, r1
   13150:	bl	10cec <__errno_location@plt>
   13154:	ldr	r3, [r4, #44]	; 0x2c
   13158:	mov	r1, r8
   1315c:	ldr	r6, [r0]
   13160:	str	r3, [sp, #16]
   13164:	ldr	r2, [r4, #40]	; 0x28
   13168:	add	r3, r4, #8
   1316c:	str	r3, [sp, #8]
   13170:	str	r2, [sp, #12]
   13174:	ldr	r2, [r4, #4]
   13178:	mov	r5, r0
   1317c:	str	r2, [sp, #4]
   13180:	ldr	ip, [r4]
   13184:	mov	r3, sl
   13188:	mov	r2, r9
   1318c:	mov	r0, r7
   13190:	str	ip, [sp]
   13194:	bl	1167c <abort@plt+0x8f4>
   13198:	str	r6, [r5]
   1319c:	add	sp, sp, #24
   131a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131a4:	andeq	r5, r2, ip, lsr r2
   131a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131ac:	cmp	r3, #0
   131b0:	sub	sp, sp, #44	; 0x2c
   131b4:	ldr	r4, [pc, #192]	; 1327c <abort@plt+0x24f4>
   131b8:	mov	r6, r2
   131bc:	movne	r4, r3
   131c0:	mov	r9, r1
   131c4:	mov	r8, r0
   131c8:	bl	10cec <__errno_location@plt>
   131cc:	ldr	r3, [r4, #44]	; 0x2c
   131d0:	ldr	r5, [r4, #4]
   131d4:	add	sl, r4, #8
   131d8:	cmp	r6, #0
   131dc:	orreq	r5, r5, #1
   131e0:	mov	r1, #0
   131e4:	ldr	r2, [r0]
   131e8:	str	r3, [sp, #16]
   131ec:	ldr	r3, [r4, #40]	; 0x28
   131f0:	stmib	sp, {r5, sl}
   131f4:	str	r3, [sp, #12]
   131f8:	ldr	r3, [r4]
   131fc:	mov	r7, r0
   13200:	str	r2, [sp, #28]
   13204:	str	r3, [sp]
   13208:	mov	r2, r8
   1320c:	mov	r3, r9
   13210:	mov	r0, r1
   13214:	bl	1167c <abort@plt+0x8f4>
   13218:	add	r1, r0, #1
   1321c:	mov	fp, r0
   13220:	mov	r0, r1
   13224:	str	r1, [sp, #36]	; 0x24
   13228:	bl	13c2c <abort@plt+0x2ea4>
   1322c:	ldr	r3, [r4, #44]	; 0x2c
   13230:	mov	r2, r8
   13234:	str	r3, [sp, #16]
   13238:	ldr	r3, [r4, #40]	; 0x28
   1323c:	str	r5, [sp, #4]
   13240:	str	r3, [sp, #12]
   13244:	str	sl, [sp, #8]
   13248:	ldr	ip, [r4]
   1324c:	ldr	r1, [sp, #36]	; 0x24
   13250:	mov	r3, r9
   13254:	str	ip, [sp]
   13258:	str	r0, [sp, #32]
   1325c:	bl	1167c <abort@plt+0x8f4>
   13260:	ldr	r2, [sp, #28]
   13264:	cmp	r6, #0
   13268:	str	r2, [r7]
   1326c:	ldr	r0, [sp, #32]
   13270:	strne	fp, [r6]
   13274:	add	sp, sp, #44	; 0x2c
   13278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1327c:	andeq	r5, r2, ip, lsr r2
   13280:	mov	r3, r2
   13284:	mov	r2, #0
   13288:	b	131a8 <abort@plt+0x2420>
   1328c:	push	{r4, r5, r6, r7, r8, lr}
   13290:	ldr	r6, [pc, #112]	; 13308 <abort@plt+0x2580>
   13294:	ldr	r3, [r6, #4]
   13298:	ldr	r7, [r6]
   1329c:	cmp	r3, #1
   132a0:	ble	132c4 <abort@plt+0x253c>
   132a4:	sub	r5, r7, #8
   132a8:	add	r5, r5, r3, lsl #3
   132ac:	mov	r4, r7
   132b0:	ldr	r0, [r4, #12]
   132b4:	add	r4, r4, #8
   132b8:	bl	10bc0 <free@plt>
   132bc:	cmp	r4, r5
   132c0:	bne	132b0 <abort@plt+0x2528>
   132c4:	ldr	r0, [r7, #4]
   132c8:	ldr	r4, [pc, #60]	; 1330c <abort@plt+0x2584>
   132cc:	cmp	r0, r4
   132d0:	beq	132e4 <abort@plt+0x255c>
   132d4:	bl	10bc0 <free@plt>
   132d8:	mov	r3, #256	; 0x100
   132dc:	str	r4, [r6, #12]
   132e0:	str	r3, [r6, #8]
   132e4:	ldr	r4, [pc, #36]	; 13310 <abort@plt+0x2588>
   132e8:	cmp	r7, r4
   132ec:	beq	132fc <abort@plt+0x2574>
   132f0:	mov	r0, r7
   132f4:	bl	10bc0 <free@plt>
   132f8:	str	r4, [r6]
   132fc:	mov	r3, #1
   13300:	str	r3, [r6, #4]
   13304:	pop	{r4, r5, r6, r7, r8, pc}
   13308:	ldrdeq	r5, [r2], -r0
   1330c:	andeq	r5, r2, ip, lsr r1
   13310:	ldrdeq	r5, [r2], -r8
   13314:	ldr	r3, [pc, #4]	; 13320 <abort@plt+0x2598>
   13318:	mvn	r2, #0
   1331c:	b	12e94 <abort@plt+0x210c>
   13320:	andeq	r5, r2, ip, lsr r2
   13324:	ldr	r3, [pc]	; 1332c <abort@plt+0x25a4>
   13328:	b	12e94 <abort@plt+0x210c>
   1332c:	andeq	r5, r2, ip, lsr r2
   13330:	mov	r1, r0
   13334:	ldr	r3, [pc, #8]	; 13344 <abort@plt+0x25bc>
   13338:	mvn	r2, #0
   1333c:	mov	r0, #0
   13340:	b	12e94 <abort@plt+0x210c>
   13344:	andeq	r5, r2, ip, lsr r2
   13348:	mov	r2, r1
   1334c:	ldr	r3, [pc, #8]	; 1335c <abort@plt+0x25d4>
   13350:	mov	r1, r0
   13354:	mov	r0, #0
   13358:	b	12e94 <abort@plt+0x210c>
   1335c:	andeq	r5, r2, ip, lsr r2
   13360:	push	{r4, r5, r6, lr}
   13364:	sub	sp, sp, #56	; 0x38
   13368:	ldr	r4, [pc, #68]	; 133b4 <abort@plt+0x262c>
   1336c:	mov	r6, r2
   13370:	mov	r5, r0
   13374:	ldr	r3, [r4]
   13378:	add	r0, sp, #4
   1337c:	str	r3, [sp, #52]	; 0x34
   13380:	bl	1150c <abort@plt+0x784>
   13384:	add	r3, sp, #4
   13388:	mvn	r2, #0
   1338c:	mov	r1, r6
   13390:	mov	r0, r5
   13394:	bl	12e94 <abort@plt+0x210c>
   13398:	ldr	r2, [sp, #52]	; 0x34
   1339c:	ldr	r3, [r4]
   133a0:	cmp	r2, r3
   133a4:	bne	133b0 <abort@plt+0x2628>
   133a8:	add	sp, sp, #56	; 0x38
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	bl	10c14 <__stack_chk_fail@plt>
   133b4:	andeq	r4, r2, r8, lsl #30
   133b8:	push	{r4, r5, r6, r7, lr}
   133bc:	sub	sp, sp, #60	; 0x3c
   133c0:	ldr	r4, [pc, #72]	; 13410 <abort@plt+0x2688>
   133c4:	mov	r6, r2
   133c8:	mov	r7, r3
   133cc:	ldr	ip, [r4]
   133d0:	mov	r5, r0
   133d4:	add	r0, sp, #4
   133d8:	str	ip, [sp, #52]	; 0x34
   133dc:	bl	1150c <abort@plt+0x784>
   133e0:	add	r3, sp, #4
   133e4:	mov	r2, r7
   133e8:	mov	r1, r6
   133ec:	mov	r0, r5
   133f0:	bl	12e94 <abort@plt+0x210c>
   133f4:	ldr	r2, [sp, #52]	; 0x34
   133f8:	ldr	r3, [r4]
   133fc:	cmp	r2, r3
   13400:	bne	1340c <abort@plt+0x2684>
   13404:	add	sp, sp, #60	; 0x3c
   13408:	pop	{r4, r5, r6, r7, pc}
   1340c:	bl	10c14 <__stack_chk_fail@plt>
   13410:	andeq	r4, r2, r8, lsl #30
   13414:	mov	r2, r1
   13418:	mov	r1, r0
   1341c:	mov	r0, #0
   13420:	b	13360 <abort@plt+0x25d8>
   13424:	mov	r3, r2
   13428:	mov	r2, r1
   1342c:	mov	r1, r0
   13430:	mov	r0, #0
   13434:	b	133b8 <abort@plt+0x2630>
   13438:	push	{r4, r5, r6, r7, r8, r9, lr}
   1343c:	mov	r4, r2
   13440:	ldr	lr, [pc, #128]	; 134c8 <abort@plt+0x2740>
   13444:	mov	r8, r0
   13448:	mov	r9, r1
   1344c:	ldm	lr!, {r0, r1, r2, r3}
   13450:	sub	sp, sp, #60	; 0x3c
   13454:	add	ip, sp, #4
   13458:	lsr	r6, r4, #5
   1345c:	stmia	ip!, {r0, r1, r2, r3}
   13460:	add	r7, sp, #12
   13464:	ldm	lr!, {r0, r1, r2, r3}
   13468:	and	r4, r4, #31
   1346c:	ldr	r5, [pc, #88]	; 134cc <abort@plt+0x2744>
   13470:	stmia	ip!, {r0, r1, r2, r3}
   13474:	ldm	lr, {r0, r1, r2, r3}
   13478:	stm	ip, {r0, r1, r2, r3}
   1347c:	mov	r2, r9
   13480:	ldr	r3, [r7, r6, lsl #2]
   13484:	ldr	ip, [r5]
   13488:	mov	r1, r8
   1348c:	mvn	r0, r3, lsr r4
   13490:	and	r0, r0, #1
   13494:	str	ip, [sp, #52]	; 0x34
   13498:	eor	r4, r3, r0, lsl r4
   1349c:	add	r3, sp, #4
   134a0:	mov	r0, #0
   134a4:	str	r4, [r7, r6, lsl #2]
   134a8:	bl	12e94 <abort@plt+0x210c>
   134ac:	ldr	r2, [sp, #52]	; 0x34
   134b0:	ldr	r3, [r5]
   134b4:	cmp	r2, r3
   134b8:	bne	134c4 <abort@plt+0x273c>
   134bc:	add	sp, sp, #60	; 0x3c
   134c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   134c4:	bl	10c14 <__stack_chk_fail@plt>
   134c8:	andeq	r5, r2, ip, lsr r2
   134cc:	andeq	r4, r2, r8, lsl #30
   134d0:	mov	r2, r1
   134d4:	mvn	r1, #0
   134d8:	b	13438 <abort@plt+0x26b0>
   134dc:	mov	r2, #58	; 0x3a
   134e0:	mvn	r1, #0
   134e4:	b	13438 <abort@plt+0x26b0>
   134e8:	mov	r2, #58	; 0x3a
   134ec:	b	13438 <abort@plt+0x26b0>
   134f0:	push	{r4, r5, r6, r7, r8, lr}
   134f4:	sub	sp, sp, #104	; 0x68
   134f8:	ldr	r5, [pc, #120]	; 13578 <abort@plt+0x27f0>
   134fc:	mov	r6, r0
   13500:	mov	r0, sp
   13504:	ldr	r3, [r5]
   13508:	mov	r7, r2
   1350c:	str	r3, [sp, #100]	; 0x64
   13510:	bl	1150c <abort@plt+0x784>
   13514:	mov	ip, sp
   13518:	add	lr, sp, #52	; 0x34
   1351c:	ldm	ip!, {r0, r1, r2, r3}
   13520:	stmia	lr!, {r0, r1, r2, r3}
   13524:	ldm	ip!, {r0, r1, r2, r3}
   13528:	ldr	r8, [sp, #64]	; 0x40
   1352c:	stmia	lr!, {r0, r1, r2, r3}
   13530:	mvn	r4, r8
   13534:	ldm	ip, {r0, r1, r2, r3}
   13538:	and	ip, r4, #67108864	; 0x4000000
   1353c:	eor	ip, ip, r8
   13540:	str	ip, [sp, #64]	; 0x40
   13544:	stm	lr, {r0, r1, r2, r3}
   13548:	add	r3, sp, #52	; 0x34
   1354c:	mvn	r2, #0
   13550:	mov	r1, r7
   13554:	mov	r0, r6
   13558:	bl	12e94 <abort@plt+0x210c>
   1355c:	ldr	r2, [sp, #100]	; 0x64
   13560:	ldr	r3, [r5]
   13564:	cmp	r2, r3
   13568:	bne	13574 <abort@plt+0x27ec>
   1356c:	add	sp, sp, #104	; 0x68
   13570:	pop	{r4, r5, r6, r7, r8, pc}
   13574:	bl	10c14 <__stack_chk_fail@plt>
   13578:	andeq	r4, r2, r8, lsl #30
   1357c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13580:	mov	r6, r1
   13584:	ldr	lr, [pc, #132]	; 13610 <abort@plt+0x2888>
   13588:	mov	r5, r2
   1358c:	mov	r8, r0
   13590:	mov	r9, r3
   13594:	ldm	lr!, {r0, r1, r2, r3}
   13598:	sub	sp, sp, #60	; 0x3c
   1359c:	add	ip, sp, #4
   135a0:	ldr	r4, [pc, #108]	; 13614 <abort@plt+0x288c>
   135a4:	stmia	ip!, {r0, r1, r2, r3}
   135a8:	mov	r7, #10
   135ac:	ldm	lr!, {r0, r1, r2, r3}
   135b0:	cmp	r5, #0
   135b4:	cmpne	r6, #0
   135b8:	str	r7, [sp, #4]
   135bc:	stmia	ip!, {r0, r1, r2, r3}
   135c0:	ldm	lr, {r0, r1, r2, r3}
   135c4:	ldr	lr, [r4]
   135c8:	stm	ip, {r0, r1, r2, r3}
   135cc:	str	lr, [sp, #52]	; 0x34
   135d0:	beq	1360c <abort@plt+0x2884>
   135d4:	add	r3, sp, #4
   135d8:	ldr	r2, [sp, #88]	; 0x58
   135dc:	mov	r1, r9
   135e0:	mov	r0, r8
   135e4:	str	r6, [sp, #44]	; 0x2c
   135e8:	str	r5, [sp, #48]	; 0x30
   135ec:	bl	12e94 <abort@plt+0x210c>
   135f0:	ldr	r2, [sp, #52]	; 0x34
   135f4:	ldr	r3, [r4]
   135f8:	cmp	r2, r3
   135fc:	bne	13608 <abort@plt+0x2880>
   13600:	add	sp, sp, #60	; 0x3c
   13604:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13608:	bl	10c14 <__stack_chk_fail@plt>
   1360c:	bl	10d88 <abort@plt>
   13610:	andeq	r5, r2, ip, lsr r2
   13614:	andeq	r4, r2, r8, lsl #30
   13618:	push	{lr}		; (str lr, [sp, #-4]!)
   1361c:	sub	sp, sp, #12
   13620:	mvn	ip, #0
   13624:	str	ip, [sp]
   13628:	bl	1357c <abort@plt+0x27f4>
   1362c:	add	sp, sp, #12
   13630:	pop	{pc}		; (ldr pc, [sp], #4)
   13634:	push	{lr}		; (str lr, [sp, #-4]!)
   13638:	sub	sp, sp, #12
   1363c:	mvn	ip, #0
   13640:	mov	r3, r2
   13644:	str	ip, [sp]
   13648:	mov	r2, r1
   1364c:	mov	r1, r0
   13650:	mov	r0, #0
   13654:	bl	1357c <abort@plt+0x27f4>
   13658:	add	sp, sp, #12
   1365c:	pop	{pc}		; (ldr pc, [sp], #4)
   13660:	push	{lr}		; (str lr, [sp, #-4]!)
   13664:	sub	sp, sp, #12
   13668:	str	r3, [sp]
   1366c:	mov	r3, r2
   13670:	mov	r2, r1
   13674:	mov	r1, r0
   13678:	mov	r0, #0
   1367c:	bl	1357c <abort@plt+0x27f4>
   13680:	add	sp, sp, #12
   13684:	pop	{pc}		; (ldr pc, [sp], #4)
   13688:	ldr	r3, [pc]	; 13690 <abort@plt+0x2908>
   1368c:	b	12e94 <abort@plt+0x210c>
   13690:	andeq	r5, r2, r0, ror #1
   13694:	mov	r2, r1
   13698:	ldr	r3, [pc, #8]	; 136a8 <abort@plt+0x2920>
   1369c:	mov	r1, r0
   136a0:	mov	r0, #0
   136a4:	b	12e94 <abort@plt+0x210c>
   136a8:	andeq	r5, r2, r0, ror #1
   136ac:	ldr	r3, [pc, #4]	; 136b8 <abort@plt+0x2930>
   136b0:	mvn	r2, #0
   136b4:	b	12e94 <abort@plt+0x210c>
   136b8:	andeq	r5, r2, r0, ror #1
   136bc:	mov	r1, r0
   136c0:	ldr	r3, [pc, #8]	; 136d0 <abort@plt+0x2948>
   136c4:	mvn	r2, #0
   136c8:	mov	r0, #0
   136cc:	b	12e94 <abort@plt+0x210c>
   136d0:	andeq	r5, r2, r0, ror #1
   136d4:	push	{r4, r5, r6, lr}
   136d8:	sub	sp, sp, #32
   136dc:	cmp	r1, #0
   136e0:	mov	r5, r0
   136e4:	ldr	r4, [sp, #48]	; 0x30
   136e8:	ldr	r6, [sp, #52]	; 0x34
   136ec:	beq	1377c <abort@plt+0x29f4>
   136f0:	strd	r2, [sp]
   136f4:	mov	r3, r1
   136f8:	ldr	r2, [pc, #828]	; 13a3c <abort@plt+0x2cb4>
   136fc:	mov	r1, #1
   13700:	bl	10d28 <__fprintf_chk@plt>
   13704:	mov	r2, #5
   13708:	ldr	r1, [pc, #816]	; 13a40 <abort@plt+0x2cb8>
   1370c:	mov	r0, #0
   13710:	bl	10c08 <dcgettext@plt>
   13714:	ldr	r3, [pc, #808]	; 13a44 <abort@plt+0x2cbc>
   13718:	ldr	r2, [pc, #808]	; 13a48 <abort@plt+0x2cc0>
   1371c:	str	r3, [sp]
   13720:	mov	r1, #1
   13724:	mov	r3, r0
   13728:	mov	r0, r5
   1372c:	bl	10d28 <__fprintf_chk@plt>
   13730:	ldr	r1, [pc, #788]	; 13a4c <abort@plt+0x2cc4>
   13734:	mov	r2, #5
   13738:	mov	r0, #0
   1373c:	bl	10c08 <dcgettext@plt>
   13740:	mov	r1, r5
   13744:	bl	10b90 <fputs_unlocked@plt>
   13748:	cmp	r6, #9
   1374c:	ldrls	pc, [pc, r6, lsl #2]
   13750:	b	13a2c <abort@plt+0x2ca4>
   13754:	andeq	r3, r1, r8, lsr sl
   13758:	andeq	r3, r1, r0, lsl #16
   1375c:	andeq	r3, r1, ip, lsr #16
   13760:	andeq	r3, r1, r0, ror #16
   13764:	muleq	r1, ip, r8
   13768:	ldrdeq	r3, [r1], -ip
   1376c:	andeq	r3, r1, r4, lsr #18
   13770:	andeq	r3, r1, r4, ror r9
   13774:	andeq	r3, r1, ip, asr #19
   13778:	muleq	r1, r4, r7
   1377c:	str	r3, [sp]
   13780:	mov	r1, #1
   13784:	mov	r3, r2
   13788:	ldr	r2, [pc, #704]	; 13a50 <abort@plt+0x2cc8>
   1378c:	bl	10d28 <__fprintf_chk@plt>
   13790:	b	13704 <abort@plt+0x297c>
   13794:	ldr	r1, [pc, #696]	; 13a54 <abort@plt+0x2ccc>
   13798:	mov	r2, #5
   1379c:	mov	r0, #0
   137a0:	bl	10c08 <dcgettext@plt>
   137a4:	ldr	r2, [r4, #32]
   137a8:	ldr	r3, [r4, #28]
   137ac:	ldr	r1, [r4, #24]
   137b0:	str	r2, [sp, #28]
   137b4:	ldr	r2, [r4, #20]
   137b8:	str	r3, [sp, #24]
   137bc:	ldr	r3, [r4, #16]
   137c0:	str	r1, [sp, #20]
   137c4:	ldr	r1, [r4, #12]
   137c8:	str	r2, [sp, #16]
   137cc:	ldr	r2, [r4, #8]
   137d0:	str	r3, [sp, #12]
   137d4:	ldr	r3, [r4, #4]
   137d8:	str	r1, [sp, #8]
   137dc:	str	r2, [sp, #4]
   137e0:	str	r3, [sp]
   137e4:	mov	r1, #1
   137e8:	ldr	r3, [r4]
   137ec:	mov	r2, r0
   137f0:	mov	r0, r5
   137f4:	bl	10d28 <__fprintf_chk@plt>
   137f8:	add	sp, sp, #32
   137fc:	pop	{r4, r5, r6, pc}
   13800:	mov	r2, #5
   13804:	ldr	r1, [pc, #588]	; 13a58 <abort@plt+0x2cd0>
   13808:	mov	r0, #0
   1380c:	bl	10c08 <dcgettext@plt>
   13810:	ldr	r3, [r4]
   13814:	mov	r1, #1
   13818:	mov	r2, r0
   1381c:	mov	r0, r5
   13820:	add	sp, sp, #32
   13824:	pop	{r4, r5, r6, lr}
   13828:	b	10d28 <__fprintf_chk@plt>
   1382c:	mov	r2, #5
   13830:	ldr	r1, [pc, #548]	; 13a5c <abort@plt+0x2cd4>
   13834:	mov	r0, #0
   13838:	bl	10c08 <dcgettext@plt>
   1383c:	ldr	r2, [r4, #4]
   13840:	ldr	r3, [r4]
   13844:	mov	r1, #1
   13848:	str	r2, [sp, #48]	; 0x30
   1384c:	mov	r2, r0
   13850:	mov	r0, r5
   13854:	add	sp, sp, #32
   13858:	pop	{r4, r5, r6, lr}
   1385c:	b	10d28 <__fprintf_chk@plt>
   13860:	mov	r2, #5
   13864:	ldr	r1, [pc, #500]	; 13a60 <abort@plt+0x2cd8>
   13868:	mov	r0, #0
   1386c:	bl	10c08 <dcgettext@plt>
   13870:	ldr	r2, [r4, #8]
   13874:	ldr	r3, [r4, #4]
   13878:	mov	r1, #1
   1387c:	str	r2, [sp, #52]	; 0x34
   13880:	str	r3, [sp, #48]	; 0x30
   13884:	ldr	r3, [r4]
   13888:	mov	r2, r0
   1388c:	mov	r0, r5
   13890:	add	sp, sp, #32
   13894:	pop	{r4, r5, r6, lr}
   13898:	b	10d28 <__fprintf_chk@plt>
   1389c:	mov	r2, #5
   138a0:	ldr	r1, [pc, #444]	; 13a64 <abort@plt+0x2cdc>
   138a4:	mov	r0, #0
   138a8:	bl	10c08 <dcgettext@plt>
   138ac:	ldr	r1, [r4, #12]
   138b0:	ldr	r2, [r4, #8]
   138b4:	ldr	r3, [r4, #4]
   138b8:	str	r1, [sp, #8]
   138bc:	str	r2, [sp, #4]
   138c0:	str	r3, [sp]
   138c4:	mov	r1, #1
   138c8:	ldr	r3, [r4]
   138cc:	mov	r2, r0
   138d0:	mov	r0, r5
   138d4:	bl	10d28 <__fprintf_chk@plt>
   138d8:	b	137f8 <abort@plt+0x2a70>
   138dc:	mov	r2, #5
   138e0:	ldr	r1, [pc, #384]	; 13a68 <abort@plt+0x2ce0>
   138e4:	mov	r0, #0
   138e8:	bl	10c08 <dcgettext@plt>
   138ec:	ldr	r3, [r4, #16]
   138f0:	ldr	r1, [r4, #12]
   138f4:	ldr	r2, [r4, #8]
   138f8:	str	r3, [sp, #12]
   138fc:	ldr	r3, [r4, #4]
   13900:	str	r1, [sp, #8]
   13904:	str	r2, [sp, #4]
   13908:	str	r3, [sp]
   1390c:	mov	r1, #1
   13910:	ldr	r3, [r4]
   13914:	mov	r2, r0
   13918:	mov	r0, r5
   1391c:	bl	10d28 <__fprintf_chk@plt>
   13920:	b	137f8 <abort@plt+0x2a70>
   13924:	mov	r2, #5
   13928:	ldr	r1, [pc, #316]	; 13a6c <abort@plt+0x2ce4>
   1392c:	mov	r0, #0
   13930:	bl	10c08 <dcgettext@plt>
   13934:	ldr	r2, [r4, #20]
   13938:	ldr	r3, [r4, #16]
   1393c:	ldr	r1, [r4, #12]
   13940:	str	r2, [sp, #16]
   13944:	ldr	r2, [r4, #8]
   13948:	str	r3, [sp, #12]
   1394c:	ldr	r3, [r4, #4]
   13950:	str	r1, [sp, #8]
   13954:	str	r2, [sp, #4]
   13958:	str	r3, [sp]
   1395c:	mov	r1, #1
   13960:	ldr	r3, [r4]
   13964:	mov	r2, r0
   13968:	mov	r0, r5
   1396c:	bl	10d28 <__fprintf_chk@plt>
   13970:	b	137f8 <abort@plt+0x2a70>
   13974:	mov	r2, #5
   13978:	ldr	r1, [pc, #240]	; 13a70 <abort@plt+0x2ce8>
   1397c:	mov	r0, #0
   13980:	bl	10c08 <dcgettext@plt>
   13984:	ldr	r1, [r4, #24]
   13988:	ldr	r2, [r4, #20]
   1398c:	ldr	r3, [r4, #16]
   13990:	str	r1, [sp, #20]
   13994:	ldr	r1, [r4, #12]
   13998:	str	r2, [sp, #16]
   1399c:	ldr	r2, [r4, #8]
   139a0:	str	r3, [sp, #12]
   139a4:	ldr	r3, [r4, #4]
   139a8:	str	r1, [sp, #8]
   139ac:	str	r2, [sp, #4]
   139b0:	str	r3, [sp]
   139b4:	mov	r1, #1
   139b8:	ldr	r3, [r4]
   139bc:	mov	r2, r0
   139c0:	mov	r0, r5
   139c4:	bl	10d28 <__fprintf_chk@plt>
   139c8:	b	137f8 <abort@plt+0x2a70>
   139cc:	mov	r2, #5
   139d0:	ldr	r1, [pc, #156]	; 13a74 <abort@plt+0x2cec>
   139d4:	mov	r0, #0
   139d8:	bl	10c08 <dcgettext@plt>
   139dc:	ldr	r3, [r4, #28]
   139e0:	ldr	r1, [r4, #24]
   139e4:	ldr	r2, [r4, #20]
   139e8:	str	r3, [sp, #24]
   139ec:	ldr	r3, [r4, #16]
   139f0:	str	r1, [sp, #20]
   139f4:	ldr	r1, [r4, #12]
   139f8:	str	r2, [sp, #16]
   139fc:	ldr	r2, [r4, #8]
   13a00:	str	r3, [sp, #12]
   13a04:	ldr	r3, [r4, #4]
   13a08:	str	r1, [sp, #8]
   13a0c:	str	r2, [sp, #4]
   13a10:	str	r3, [sp]
   13a14:	mov	r1, #1
   13a18:	ldr	r3, [r4]
   13a1c:	mov	r2, r0
   13a20:	mov	r0, r5
   13a24:	bl	10d28 <__fprintf_chk@plt>
   13a28:	b	137f8 <abort@plt+0x2a70>
   13a2c:	mov	r2, #5
   13a30:	ldr	r1, [pc, #64]	; 13a78 <abort@plt+0x2cf0>
   13a34:	b	1379c <abort@plt+0x2a14>
   13a38:	bl	10d88 <abort@plt>
   13a3c:	andeq	r4, r1, r0, asr #17
   13a40:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13a44:	andeq	r0, r0, r2, ror #15
   13a48:	andeq	r4, r1, r8, lsr #23
   13a4c:	ldrdeq	r4, [r1], -r8
   13a50:	andeq	r4, r1, ip, asr #17
   13a54:			; <UNDEFINED> instruction: 0x00014ab0
   13a58:	andeq	r4, r1, r4, lsr #19
   13a5c:			; <UNDEFINED> instruction: 0x000149b4
   13a60:	andeq	r4, r1, ip, asr #19
   13a64:	andeq	r4, r1, r8, ror #19
   13a68:	andeq	r4, r1, r8, lsl #20
   13a6c:	andeq	r4, r1, ip, lsr #20
   13a70:	andeq	r4, r1, r4, asr sl
   13a74:	andeq	r4, r1, r0, lsl #21
   13a78:	andeq	r4, r1, r4, ror #21
   13a7c:	push	{r4, r5, lr}
   13a80:	sub	sp, sp, #12
   13a84:	ldr	r5, [sp, #24]
   13a88:	ldr	ip, [r5]
   13a8c:	cmp	ip, #0
   13a90:	beq	13aac <abort@plt+0x2d24>
   13a94:	mov	lr, r5
   13a98:	mov	ip, #0
   13a9c:	ldr	r4, [lr, #4]!
   13aa0:	add	ip, ip, #1
   13aa4:	cmp	r4, #0
   13aa8:	bne	13a9c <abort@plt+0x2d14>
   13aac:	stm	sp, {r5, ip}
   13ab0:	bl	136d4 <abort@plt+0x294c>
   13ab4:	add	sp, sp, #12
   13ab8:	pop	{r4, r5, pc}
   13abc:	push	{r4, r5, r6, lr}
   13ac0:	sub	sp, sp, #56	; 0x38
   13ac4:	ldr	r6, [pc, #88]	; 13b24 <abort@plt+0x2d9c>
   13ac8:	ldr	r5, [sp, #72]	; 0x48
   13acc:	add	r4, sp, #8
   13ad0:	ldr	ip, [r6]
   13ad4:	str	ip, [sp, #52]	; 0x34
   13ad8:	mov	ip, #0
   13adc:	ldr	lr, [r5], #4
   13ae0:	cmp	lr, #0
   13ae4:	str	lr, [r4, #4]!
   13ae8:	beq	13af8 <abort@plt+0x2d70>
   13aec:	add	ip, ip, #1
   13af0:	cmp	ip, #10
   13af4:	bne	13adc <abort@plt+0x2d54>
   13af8:	add	lr, sp, #12
   13afc:	str	ip, [sp, #4]
   13b00:	str	lr, [sp]
   13b04:	bl	136d4 <abort@plt+0x294c>
   13b08:	ldr	r2, [sp, #52]	; 0x34
   13b0c:	ldr	r3, [r6]
   13b10:	cmp	r2, r3
   13b14:	bne	13b20 <abort@plt+0x2d98>
   13b18:	add	sp, sp, #56	; 0x38
   13b1c:	pop	{r4, r5, r6, pc}
   13b20:	bl	10c14 <__stack_chk_fail@plt>
   13b24:	andeq	r4, r2, r8, lsl #30
   13b28:	push	{r3}		; (str r3, [sp, #-4]!)
   13b2c:	mov	ip, #0
   13b30:	push	{r4, r5, r6, lr}
   13b34:	sub	sp, sp, #60	; 0x3c
   13b38:	ldr	r6, [pc, #100]	; 13ba4 <abort@plt+0x2e1c>
   13b3c:	add	r5, sp, #8
   13b40:	add	r4, sp, #80	; 0x50
   13b44:	ldr	r3, [r6]
   13b48:	str	r4, [sp, #8]
   13b4c:	str	r3, [sp, #52]	; 0x34
   13b50:	ldr	r3, [sp, #76]	; 0x4c
   13b54:	ldr	lr, [r4], #4
   13b58:	cmp	lr, #0
   13b5c:	str	lr, [r5, #4]!
   13b60:	beq	13b70 <abort@plt+0x2de8>
   13b64:	add	ip, ip, #1
   13b68:	cmp	ip, #10
   13b6c:	bne	13b54 <abort@plt+0x2dcc>
   13b70:	add	lr, sp, #12
   13b74:	str	ip, [sp, #4]
   13b78:	str	lr, [sp]
   13b7c:	bl	136d4 <abort@plt+0x294c>
   13b80:	ldr	r2, [sp, #52]	; 0x34
   13b84:	ldr	r3, [r6]
   13b88:	cmp	r2, r3
   13b8c:	bne	13ba0 <abort@plt+0x2e18>
   13b90:	add	sp, sp, #60	; 0x3c
   13b94:	pop	{r4, r5, r6, lr}
   13b98:	add	sp, sp, #4
   13b9c:	bx	lr
   13ba0:	bl	10c14 <__stack_chk_fail@plt>
   13ba4:	andeq	r4, r2, r8, lsl #30
   13ba8:	push	{r4, lr}
   13bac:	mov	r2, #5
   13bb0:	ldr	r1, [pc, #88]	; 13c10 <abort@plt+0x2e88>
   13bb4:	mov	r0, #0
   13bb8:	bl	10c08 <dcgettext@plt>
   13bbc:	ldr	r2, [pc, #80]	; 13c14 <abort@plt+0x2e8c>
   13bc0:	mov	r1, r0
   13bc4:	mov	r0, #1
   13bc8:	bl	10d10 <__printf_chk@plt>
   13bcc:	mov	r2, #5
   13bd0:	ldr	r1, [pc, #64]	; 13c18 <abort@plt+0x2e90>
   13bd4:	mov	r0, #0
   13bd8:	bl	10c08 <dcgettext@plt>
   13bdc:	ldr	r3, [pc, #56]	; 13c1c <abort@plt+0x2e94>
   13be0:	ldr	r2, [pc, #56]	; 13c20 <abort@plt+0x2e98>
   13be4:	mov	r1, r0
   13be8:	mov	r0, #1
   13bec:	bl	10d10 <__printf_chk@plt>
   13bf0:	ldr	r1, [pc, #44]	; 13c24 <abort@plt+0x2e9c>
   13bf4:	mov	r2, #5
   13bf8:	mov	r0, #0
   13bfc:	bl	10c08 <dcgettext@plt>
   13c00:	ldr	r3, [pc, #32]	; 13c28 <abort@plt+0x2ea0>
   13c04:	pop	{r4, lr}
   13c08:	ldr	r1, [r3]
   13c0c:	b	10b90 <fputs_unlocked@plt>
   13c10:	andeq	r4, r1, r0, lsr #22
   13c14:	andeq	r4, r1, r8, lsr fp
   13c18:	andeq	r4, r1, r0, asr fp
   13c1c:	andeq	r4, r1, r0, asr #11
   13c20:	andeq	r4, r1, r8, ror #11
   13c24:	andeq	r4, r1, r4, ror #22
   13c28:	andeq	r5, r2, r4, lsr #2
   13c2c:	push	{r4, lr}
   13c30:	mov	r4, r0
   13c34:	bl	10c8c <malloc@plt>
   13c38:	adds	r4, r4, #0
   13c3c:	movne	r4, #1
   13c40:	cmp	r0, #0
   13c44:	movne	r4, #0
   13c48:	cmp	r4, #0
   13c4c:	popeq	{r4, pc}
   13c50:	bl	13e74 <abort@plt+0x30ec>
   13c54:	push	{r4, r5, r6, lr}
   13c58:	umull	r4, r5, r0, r1
   13c5c:	adds	r3, r5, #0
   13c60:	movne	r3, #1
   13c64:	cmp	r4, #0
   13c68:	blt	13c80 <abort@plt+0x2ef8>
   13c6c:	cmp	r3, #0
   13c70:	bne	13c80 <abort@plt+0x2ef8>
   13c74:	mul	r0, r1, r0
   13c78:	pop	{r4, r5, r6, lr}
   13c7c:	b	13c2c <abort@plt+0x2ea4>
   13c80:	bl	13e74 <abort@plt+0x30ec>
   13c84:	b	13c2c <abort@plt+0x2ea4>
   13c88:	adds	r3, r0, #0
   13c8c:	movne	r3, #1
   13c90:	cmp	r1, #0
   13c94:	movne	r3, #0
   13c98:	cmp	r3, #0
   13c9c:	push	{r4, lr}
   13ca0:	bne	13cc8 <abort@plt+0x2f40>
   13ca4:	mov	r4, r1
   13ca8:	bl	10c20 <realloc@plt>
   13cac:	adds	r4, r4, #0
   13cb0:	movne	r4, #1
   13cb4:	cmp	r0, #0
   13cb8:	movne	r4, #0
   13cbc:	cmp	r4, #0
   13cc0:	popeq	{r4, pc}
   13cc4:	bl	13e74 <abort@plt+0x30ec>
   13cc8:	bl	10bc0 <free@plt>
   13ccc:	mov	r0, #0
   13cd0:	pop	{r4, pc}
   13cd4:	push	{r4, r5, r6, lr}
   13cd8:	umull	r4, r5, r1, r2
   13cdc:	adds	r3, r5, #0
   13ce0:	movne	r3, #1
   13ce4:	cmp	r4, #0
   13ce8:	blt	13d00 <abort@plt+0x2f78>
   13cec:	cmp	r3, #0
   13cf0:	bne	13d00 <abort@plt+0x2f78>
   13cf4:	mul	r1, r2, r1
   13cf8:	pop	{r4, r5, r6, lr}
   13cfc:	b	13c88 <abort@plt+0x2f00>
   13d00:	bl	13e74 <abort@plt+0x30ec>
   13d04:	push	{r4, r5, r6, r7, r8, lr}
   13d08:	subs	r7, r0, #0
   13d0c:	mov	r6, r1
   13d10:	mov	r5, r2
   13d14:	ldr	r4, [r1]
   13d18:	beq	13d4c <abort@plt+0x2fc4>
   13d1c:	mov	r1, r2
   13d20:	ldr	r0, [pc, #104]	; 13d90 <abort@plt+0x3008>
   13d24:	bl	141c8 <abort@plt+0x3440>
   13d28:	cmp	r0, r4
   13d2c:	bls	13d70 <abort@plt+0x2fe8>
   13d30:	add	r3, r4, #1
   13d34:	add	r4, r3, r4, lsr #1
   13d38:	str	r4, [r6]
   13d3c:	mul	r1, r5, r4
   13d40:	mov	r0, r7
   13d44:	pop	{r4, r5, r6, r7, r8, lr}
   13d48:	b	13c88 <abort@plt+0x2f00>
   13d4c:	cmp	r4, #0
   13d50:	beq	13d74 <abort@plt+0x2fec>
   13d54:	umull	r0, r1, r4, r5
   13d58:	adds	r3, r1, #0
   13d5c:	movne	r3, #1
   13d60:	cmp	r0, #0
   13d64:	blt	13d70 <abort@plt+0x2fe8>
   13d68:	cmp	r3, #0
   13d6c:	beq	13d38 <abort@plt+0x2fb0>
   13d70:	bl	13e74 <abort@plt+0x30ec>
   13d74:	mov	r1, r2
   13d78:	mov	r0, #64	; 0x40
   13d7c:	bl	141c8 <abort@plt+0x3440>
   13d80:	cmp	r5, #64	; 0x40
   13d84:	movls	r4, r0
   13d88:	addhi	r4, r0, #1
   13d8c:	b	13d54 <abort@plt+0x2fcc>
   13d90:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13d94:	cmp	r0, #0
   13d98:	ldr	r3, [r1]
   13d9c:	beq	13dc0 <abort@plt+0x3038>
   13da0:	ldr	r2, [pc, #60]	; 13de4 <abort@plt+0x305c>
   13da4:	cmp	r3, r2
   13da8:	bhi	13ddc <abort@plt+0x3054>
   13dac:	add	r2, r3, #1
   13db0:	add	r3, r2, r3, lsr #1
   13db4:	str	r3, [r1]
   13db8:	mov	r1, r3
   13dbc:	b	13c88 <abort@plt+0x2f00>
   13dc0:	cmp	r3, #0
   13dc4:	bne	13dd8 <abort@plt+0x3050>
   13dc8:	mov	r3, #64	; 0x40
   13dcc:	str	r3, [r1]
   13dd0:	mov	r1, r3
   13dd4:	b	13c88 <abort@plt+0x2f00>
   13dd8:	bge	13db4 <abort@plt+0x302c>
   13ddc:	push	{r4, lr}
   13de0:	bl	13e74 <abort@plt+0x30ec>
   13de4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13de8:	push	{r4, lr}
   13dec:	mov	r4, r0
   13df0:	bl	13c2c <abort@plt+0x2ea4>
   13df4:	mov	r2, r4
   13df8:	mov	r1, #0
   13dfc:	pop	{r4, lr}
   13e00:	b	10d04 <memset@plt>
   13e04:	push	{r4, r5, r6, lr}
   13e08:	umull	r4, r5, r0, r1
   13e0c:	adds	r3, r5, #0
   13e10:	movne	r3, #1
   13e14:	cmp	r4, #0
   13e18:	blt	13e30 <abort@plt+0x30a8>
   13e1c:	cmp	r3, #0
   13e20:	bne	13e30 <abort@plt+0x30a8>
   13e24:	bl	10b84 <calloc@plt>
   13e28:	cmp	r0, #0
   13e2c:	popne	{r4, r5, r6, pc}
   13e30:	bl	13e74 <abort@plt+0x30ec>
   13e34:	push	{r4, r5, r6, lr}
   13e38:	mov	r4, r1
   13e3c:	mov	r5, r0
   13e40:	mov	r0, r1
   13e44:	bl	13c2c <abort@plt+0x2ea4>
   13e48:	mov	r2, r4
   13e4c:	mov	r1, r5
   13e50:	pop	{r4, r5, r6, lr}
   13e54:	b	10bd8 <memcpy@plt>
   13e58:	push	{r4, lr}
   13e5c:	mov	r4, r0
   13e60:	bl	10ce0 <strlen@plt>
   13e64:	add	r1, r0, #1
   13e68:	mov	r0, r4
   13e6c:	pop	{r4, lr}
   13e70:	b	13e34 <abort@plt+0x30ac>
   13e74:	ldr	r3, [pc, #44]	; 13ea8 <abort@plt+0x3120>
   13e78:	push	{r4, lr}
   13e7c:	mov	r2, #5
   13e80:	ldr	r1, [pc, #36]	; 13eac <abort@plt+0x3124>
   13e84:	mov	r0, #0
   13e88:	ldr	r4, [r3]
   13e8c:	bl	10c08 <dcgettext@plt>
   13e90:	ldr	r2, [pc, #24]	; 13eb0 <abort@plt+0x3128>
   13e94:	mov	r1, #0
   13e98:	mov	r3, r0
   13e9c:	mov	r0, r4
   13ea0:	bl	10c80 <error@plt>
   13ea4:	bl	10d88 <abort@plt>
   13ea8:	andeq	r5, r2, ip, asr #1
   13eac:	ldrdeq	r4, [r1], -r8
   13eb0:	andeq	r4, r1, ip, asr r7
   13eb4:	push	{r4, r5, r6, r7, r8, lr}
   13eb8:	subs	r7, r0, #0
   13ebc:	ldr	r5, [pc, #108]	; 13f30 <abort@plt+0x31a8>
   13ec0:	sub	sp, sp, #8
   13ec4:	mov	r8, r1
   13ec8:	ldr	r1, [r5]
   13ecc:	moveq	r7, sp
   13ed0:	str	r1, [sp, #4]
   13ed4:	mov	r0, r7
   13ed8:	mov	r1, r8
   13edc:	mov	r6, r2
   13ee0:	bl	10c74 <mbrtowc@plt>
   13ee4:	cmp	r6, #0
   13ee8:	cmnne	r0, #3
   13eec:	mov	r4, r0
   13ef0:	bhi	13f10 <abort@plt+0x3188>
   13ef4:	ldr	r2, [sp, #4]
   13ef8:	ldr	r3, [r5]
   13efc:	mov	r0, r4
   13f00:	cmp	r2, r3
   13f04:	bne	13f2c <abort@plt+0x31a4>
   13f08:	add	sp, sp, #8
   13f0c:	pop	{r4, r5, r6, r7, r8, pc}
   13f10:	mov	r0, #0
   13f14:	bl	13fa8 <abort@plt+0x3220>
   13f18:	cmp	r0, #0
   13f1c:	moveq	r4, #1
   13f20:	ldrbeq	r3, [r8]
   13f24:	streq	r3, [r7]
   13f28:	b	13ef4 <abort@plt+0x316c>
   13f2c:	bl	10c14 <__stack_chk_fail@plt>
   13f30:	andeq	r4, r2, r8, lsl #30
   13f34:	push	{r4, r5, r6, lr}
   13f38:	mov	r4, r0
   13f3c:	bl	10c68 <__fpending@plt>
   13f40:	ldr	r5, [r4]
   13f44:	and	r5, r5, #32
   13f48:	mov	r6, r0
   13f4c:	mov	r0, r4
   13f50:	bl	14028 <abort@plt+0x32a0>
   13f54:	cmp	r5, #0
   13f58:	mov	r4, r0
   13f5c:	bne	13f88 <abort@plt+0x3200>
   13f60:	cmp	r0, #0
   13f64:	beq	13f80 <abort@plt+0x31f8>
   13f68:	cmp	r6, #0
   13f6c:	bne	13fa0 <abort@plt+0x3218>
   13f70:	bl	10cec <__errno_location@plt>
   13f74:	ldr	r4, [r0]
   13f78:	subs	r4, r4, #9
   13f7c:	mvnne	r4, #0
   13f80:	mov	r0, r4
   13f84:	pop	{r4, r5, r6, pc}
   13f88:	cmp	r0, #0
   13f8c:	bne	13fa0 <abort@plt+0x3218>
   13f90:	bl	10cec <__errno_location@plt>
   13f94:	str	r4, [r0]
   13f98:	mvn	r4, #0
   13f9c:	b	13f80 <abort@plt+0x31f8>
   13fa0:	mvn	r4, #0
   13fa4:	b	13f80 <abort@plt+0x31f8>
   13fa8:	push	{r4, lr}
   13fac:	mov	r1, #0
   13fb0:	bl	10d4c <setlocale@plt>
   13fb4:	subs	r4, r0, #0
   13fb8:	beq	13fe4 <abort@plt+0x325c>
   13fbc:	ldr	r1, [pc, #40]	; 13fec <abort@plt+0x3264>
   13fc0:	bl	10ba8 <strcmp@plt>
   13fc4:	cmp	r0, #0
   13fc8:	popeq	{r4, pc}
   13fcc:	mov	r0, r4
   13fd0:	ldr	r1, [pc, #24]	; 13ff0 <abort@plt+0x3268>
   13fd4:	bl	10ba8 <strcmp@plt>
   13fd8:	adds	r0, r0, #0
   13fdc:	movne	r0, #1
   13fe0:	pop	{r4, pc}
   13fe4:	mov	r0, #1
   13fe8:	pop	{r4, pc}
   13fec:	andeq	r4, r1, ip, ror #23
   13ff0:	strdeq	r4, [r1], -r0
   13ff4:	push	{r4, lr}
   13ff8:	mov	r0, #14
   13ffc:	bl	10d64 <nl_langinfo@plt>
   14000:	cmp	r0, #0
   14004:	beq	1401c <abort@plt+0x3294>
   14008:	ldrb	r2, [r0]
   1400c:	ldr	r3, [pc, #16]	; 14024 <abort@plt+0x329c>
   14010:	cmp	r2, #0
   14014:	moveq	r0, r3
   14018:	pop	{r4, pc}
   1401c:	ldr	r0, [pc]	; 14024 <abort@plt+0x329c>
   14020:	pop	{r4, pc}
   14024:	strdeq	r4, [r1], -r8
   14028:	push	{r4, r5, lr}
   1402c:	sub	sp, sp, #12
   14030:	mov	r4, r0
   14034:	bl	10d1c <fileno@plt>
   14038:	cmp	r0, #0
   1403c:	mov	r0, r4
   14040:	blt	140bc <abort@plt+0x3334>
   14044:	bl	10ca4 <__freading@plt>
   14048:	cmp	r0, #0
   1404c:	bne	14088 <abort@plt+0x3300>
   14050:	mov	r0, r4
   14054:	bl	140c8 <abort@plt+0x3340>
   14058:	cmp	r0, #0
   1405c:	beq	140b8 <abort@plt+0x3330>
   14060:	bl	10cec <__errno_location@plt>
   14064:	mov	r5, r0
   14068:	mov	r0, r4
   1406c:	ldr	r4, [r5]
   14070:	bl	10d34 <fclose@plt>
   14074:	cmp	r4, #0
   14078:	mvnne	r0, #0
   1407c:	strne	r4, [r5]
   14080:	add	sp, sp, #12
   14084:	pop	{r4, r5, pc}
   14088:	mov	r0, r4
   1408c:	bl	10d1c <fileno@plt>
   14090:	mov	r3, #1
   14094:	str	r3, [sp]
   14098:	mov	r2, #0
   1409c:	mov	r3, #0
   140a0:	bl	10c50 <lseek64@plt>
   140a4:	mvn	r3, #0
   140a8:	mvn	r2, #0
   140ac:	cmp	r1, r3
   140b0:	cmpeq	r0, r2
   140b4:	bne	14050 <abort@plt+0x32c8>
   140b8:	mov	r0, r4
   140bc:	add	sp, sp, #12
   140c0:	pop	{r4, r5, lr}
   140c4:	b	10d34 <fclose@plt>
   140c8:	push	{r4, lr}
   140cc:	subs	r4, r0, #0
   140d0:	sub	sp, sp, #8
   140d4:	beq	140f0 <abort@plt+0x3368>
   140d8:	bl	10ca4 <__freading@plt>
   140dc:	cmp	r0, #0
   140e0:	beq	140f0 <abort@plt+0x3368>
   140e4:	ldr	r3, [r4]
   140e8:	tst	r3, #256	; 0x100
   140ec:	bne	14100 <abort@plt+0x3378>
   140f0:	mov	r0, r4
   140f4:	add	sp, sp, #8
   140f8:	pop	{r4, lr}
   140fc:	b	10bb4 <fflush@plt>
   14100:	mov	r3, #1
   14104:	str	r3, [sp]
   14108:	mov	r2, #0
   1410c:	mov	r3, #0
   14110:	mov	r0, r4
   14114:	bl	14128 <abort@plt+0x33a0>
   14118:	mov	r0, r4
   1411c:	add	sp, sp, #8
   14120:	pop	{r4, lr}
   14124:	b	10bb4 <fflush@plt>
   14128:	push	{r4, r5, r6, r7, r8, lr}
   1412c:	sub	sp, sp, #8
   14130:	ldmib	r0, {ip, lr}
   14134:	mov	r4, r0
   14138:	ldr	r5, [sp, #32]
   1413c:	cmp	lr, ip
   14140:	beq	14158 <abort@plt+0x33d0>
   14144:	str	r5, [sp, #32]
   14148:	mov	r0, r4
   1414c:	add	sp, sp, #8
   14150:	pop	{r4, r5, r6, r7, r8, lr}
   14154:	b	10d40 <fseeko64@plt>
   14158:	ldr	lr, [r0, #20]
   1415c:	ldr	ip, [r0, #16]
   14160:	cmp	lr, ip
   14164:	bne	14144 <abort@plt+0x33bc>
   14168:	ldr	r8, [r0, #36]	; 0x24
   1416c:	cmp	r8, #0
   14170:	bne	14144 <abort@plt+0x33bc>
   14174:	mov	r6, r2
   14178:	mov	r7, r3
   1417c:	bl	10d1c <fileno@plt>
   14180:	mov	r2, r6
   14184:	mov	r3, r7
   14188:	str	r5, [sp]
   1418c:	bl	10c50 <lseek64@plt>
   14190:	mvn	r3, #0
   14194:	mvn	r2, #0
   14198:	cmp	r1, r3
   1419c:	cmpeq	r0, r2
   141a0:	beq	141c0 <abort@plt+0x3438>
   141a4:	ldr	r3, [r4]
   141a8:	strd	r0, [r4, #80]	; 0x50
   141ac:	mov	r0, r8
   141b0:	bic	r3, r3, #16
   141b4:	str	r3, [r4]
   141b8:	add	sp, sp, #8
   141bc:	pop	{r4, r5, r6, r7, r8, pc}
   141c0:	mvn	r0, #0
   141c4:	b	141b8 <abort@plt+0x3430>
   141c8:	subs	r2, r1, #1
   141cc:	bxeq	lr
   141d0:	bcc	143a8 <abort@plt+0x3620>
   141d4:	cmp	r0, r1
   141d8:	bls	1438c <abort@plt+0x3604>
   141dc:	tst	r1, r2
   141e0:	beq	14398 <abort@plt+0x3610>
   141e4:	clz	r3, r0
   141e8:	clz	r2, r1
   141ec:	sub	r3, r2, r3
   141f0:	rsbs	r3, r3, #31
   141f4:	addne	r3, r3, r3, lsl #1
   141f8:	mov	r2, #0
   141fc:	addne	pc, pc, r3, lsl #2
   14200:	nop			; (mov r0, r0)
   14204:	cmp	r0, r1, lsl #31
   14208:	adc	r2, r2, r2
   1420c:	subcs	r0, r0, r1, lsl #31
   14210:	cmp	r0, r1, lsl #30
   14214:	adc	r2, r2, r2
   14218:	subcs	r0, r0, r1, lsl #30
   1421c:	cmp	r0, r1, lsl #29
   14220:	adc	r2, r2, r2
   14224:	subcs	r0, r0, r1, lsl #29
   14228:	cmp	r0, r1, lsl #28
   1422c:	adc	r2, r2, r2
   14230:	subcs	r0, r0, r1, lsl #28
   14234:	cmp	r0, r1, lsl #27
   14238:	adc	r2, r2, r2
   1423c:	subcs	r0, r0, r1, lsl #27
   14240:	cmp	r0, r1, lsl #26
   14244:	adc	r2, r2, r2
   14248:	subcs	r0, r0, r1, lsl #26
   1424c:	cmp	r0, r1, lsl #25
   14250:	adc	r2, r2, r2
   14254:	subcs	r0, r0, r1, lsl #25
   14258:	cmp	r0, r1, lsl #24
   1425c:	adc	r2, r2, r2
   14260:	subcs	r0, r0, r1, lsl #24
   14264:	cmp	r0, r1, lsl #23
   14268:	adc	r2, r2, r2
   1426c:	subcs	r0, r0, r1, lsl #23
   14270:	cmp	r0, r1, lsl #22
   14274:	adc	r2, r2, r2
   14278:	subcs	r0, r0, r1, lsl #22
   1427c:	cmp	r0, r1, lsl #21
   14280:	adc	r2, r2, r2
   14284:	subcs	r0, r0, r1, lsl #21
   14288:	cmp	r0, r1, lsl #20
   1428c:	adc	r2, r2, r2
   14290:	subcs	r0, r0, r1, lsl #20
   14294:	cmp	r0, r1, lsl #19
   14298:	adc	r2, r2, r2
   1429c:	subcs	r0, r0, r1, lsl #19
   142a0:	cmp	r0, r1, lsl #18
   142a4:	adc	r2, r2, r2
   142a8:	subcs	r0, r0, r1, lsl #18
   142ac:	cmp	r0, r1, lsl #17
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #17
   142b8:	cmp	r0, r1, lsl #16
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #16
   142c4:	cmp	r0, r1, lsl #15
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #15
   142d0:	cmp	r0, r1, lsl #14
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #14
   142dc:	cmp	r0, r1, lsl #13
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #13
   142e8:	cmp	r0, r1, lsl #12
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #12
   142f4:	cmp	r0, r1, lsl #11
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #11
   14300:	cmp	r0, r1, lsl #10
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #10
   1430c:	cmp	r0, r1, lsl #9
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #9
   14318:	cmp	r0, r1, lsl #8
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #8
   14324:	cmp	r0, r1, lsl #7
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #7
   14330:	cmp	r0, r1, lsl #6
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #6
   1433c:	cmp	r0, r1, lsl #5
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #5
   14348:	cmp	r0, r1, lsl #4
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #4
   14354:	cmp	r0, r1, lsl #3
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #3
   14360:	cmp	r0, r1, lsl #2
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #2
   1436c:	cmp	r0, r1, lsl #1
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #1
   14378:	cmp	r0, r1
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1
   14384:	mov	r0, r2
   14388:	bx	lr
   1438c:	moveq	r0, #1
   14390:	movne	r0, #0
   14394:	bx	lr
   14398:	clz	r2, r1
   1439c:	rsb	r2, r2, #31
   143a0:	lsr	r0, r0, r2
   143a4:	bx	lr
   143a8:	cmp	r0, #0
   143ac:	mvnne	r0, #0
   143b0:	b	143d4 <abort@plt+0x364c>
   143b4:	cmp	r1, #0
   143b8:	beq	143a8 <abort@plt+0x3620>
   143bc:	push	{r0, r1, lr}
   143c0:	bl	141c8 <abort@plt+0x3440>
   143c4:	pop	{r1, r2, lr}
   143c8:	mul	r3, r2, r0
   143cc:	sub	r1, r1, r3
   143d0:	bx	lr
   143d4:	push	{r1, lr}
   143d8:	mov	r0, #8
   143dc:	bl	10b9c <raise@plt>
   143e0:	pop	{r1, pc}
   143e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143e8:	mov	r7, r0
   143ec:	ldr	r6, [pc, #72]	; 1443c <abort@plt+0x36b4>
   143f0:	ldr	r5, [pc, #72]	; 14440 <abort@plt+0x36b8>
   143f4:	add	r6, pc, r6
   143f8:	add	r5, pc, r5
   143fc:	sub	r6, r6, r5
   14400:	mov	r8, r1
   14404:	mov	r9, r2
   14408:	bl	10b64 <calloc@plt-0x20>
   1440c:	asrs	r6, r6, #2
   14410:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14414:	mov	r4, #0
   14418:	add	r4, r4, #1
   1441c:	ldr	r3, [r5], #4
   14420:	mov	r2, r9
   14424:	mov	r1, r8
   14428:	mov	r0, r7
   1442c:	blx	r3
   14430:	cmp	r6, r4
   14434:	bne	14418 <abort@plt+0x3690>
   14438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1443c:	andeq	r0, r1, r8, lsl #22
   14440:	andeq	r0, r1, r0, lsl #22
   14444:	bx	lr
   14448:	ldr	r3, [pc, #12]	; 1445c <abort@plt+0x36d4>
   1444c:	mov	r1, #0
   14450:	add	r3, pc, r3
   14454:	ldr	r2, [r3]
   14458:	b	10cf8 <__cxa_atexit@plt>
   1445c:	andeq	r0, r1, ip, ror #24

Disassembly of section .fini:

00014460 <.fini>:
   14460:	push	{r3, lr}
   14464:	pop	{r3, pc}
