
raspbian-preinstalled/rmdir:     file format elf32-littlearm


Disassembly of section .init:

00010c7c <.init>:
   10c7c:	push	{r3, lr}
   10c80:	bl	112dc <__snprintf_chk@plt+0x3dc>
   10c84:	pop	{r3, pc}

Disassembly of section .plt:

00010c88 <calloc@plt-0x14>:
   10c88:	push	{lr}		; (str lr, [sp, #-4]!)
   10c8c:	ldr	lr, [pc, #4]	; 10c98 <calloc@plt-0x4>
   10c90:	add	lr, pc, lr
   10c94:	ldr	pc, [lr, #8]!
   10c98:	andeq	r7, r1, r8, ror #6

00010c9c <calloc@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #872]!	; 0x368

00010ca8 <fputs_unlocked@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #864]!	; 0x360

00010cb4 <raise@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #856]!	; 0x358

00010cc0 <strcmp@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #848]!	; 0x350

00010ccc <fflush@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #840]!	; 0x348

00010cd8 <free@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #832]!	; 0x340

00010ce4 <_exit@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #824]!	; 0x338

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #816]!	; 0x330

00010cfc <mbsinit@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #808]!	; 0x328

00010d08 <rmdir@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #800]!	; 0x320

00010d14 <fwrite_unlocked@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #792]!	; 0x318

00010d20 <memcmp@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #784]!	; 0x310

00010d2c <dcgettext@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #776]!	; 0x308

00010d38 <__stack_chk_fail@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #768]!	; 0x300

00010d44 <realloc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d50 <textdomain@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #752]!	; 0x2f0

00010d5c <iswprint@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #744]!	; 0x2e8

00010d68 <fwrite@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #736]!	; 0x2e0

00010d74 <lseek64@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d80 <__ctype_get_mb_cur_max@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #720]!	; 0x2d0

00010d8c <__fpending@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #712]!	; 0x2c8

00010d98 <mbrtowc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #704]!	; 0x2c0

00010da4 <error@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #696]!	; 0x2b8

00010db0 <malloc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dbc <__libc_start_main@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #680]!	; 0x2a8

00010dc8 <__freading@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #672]!	; 0x2a0

00010dd4 <__gmon_start__@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #664]!	; 0x298

00010de0 <getopt_long@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #656]!	; 0x290

00010dec <__ctype_b_loc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #648]!	; 0x288

00010df8 <exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #640]!	; 0x280

00010e04 <strlen@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #632]!	; 0x278

00010e10 <openat64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #624]!	; 0x270

00010e1c <__errno_location@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #616]!	; 0x268

00010e28 <__cxa_atexit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #608]!	; 0x260

00010e34 <memset@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #600]!	; 0x258

00010e40 <__printf_chk@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #592]!	; 0x250

00010e4c <fileno@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #584]!	; 0x248

00010e58 <__fprintf_chk@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #576]!	; 0x240

00010e64 <fclose@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #568]!	; 0x238

00010e70 <fseeko64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #560]!	; 0x230

00010e7c <__overflow@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #552]!	; 0x228

00010e88 <setlocale@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #544]!	; 0x220

00010e94 <strrchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #536]!	; 0x218

00010ea0 <nl_langinfo@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #528]!	; 0x210

00010eac <readdir64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #520]!	; 0x208

00010eb8 <fdopendir@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #512]!	; 0x200

00010ec4 <bindtextdomain@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ed0 <strncmp@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #496]!	; 0x1f0

00010edc <abort@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #488]!	; 0x1e8

00010ee8 <close@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ef4 <closedir@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #472]!	; 0x1d8

00010f00 <__snprintf_chk@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #464]!	; 0x1d0

Disassembly of section .text:

00010f0c <.text>:
   10f0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f10:	mov	r7, r0
   10f14:	sub	sp, sp, #20
   10f18:	ldr	r0, [r1]
   10f1c:	mov	r6, r1
   10f20:	bl	119e4 <__snprintf_chk@plt+0xae4>
   10f24:	ldr	r1, [pc, #816]	; 1125c <__snprintf_chk@plt+0x35c>
   10f28:	mov	r0, #6
   10f2c:	bl	10e88 <setlocale@plt>
   10f30:	ldr	r5, [pc, #808]	; 11260 <__snprintf_chk@plt+0x360>
   10f34:	ldr	r1, [pc, #808]	; 11264 <__snprintf_chk@plt+0x364>
   10f38:	ldr	r0, [pc, #808]	; 11268 <__snprintf_chk@plt+0x368>
   10f3c:	ldr	r9, [pc, #808]	; 1126c <__snprintf_chk@plt+0x36c>
   10f40:	ldr	r8, [pc, #808]	; 11270 <__snprintf_chk@plt+0x370>
   10f44:	bl	10ec4 <bindtextdomain@plt>
   10f48:	ldr	r0, [pc, #792]	; 11268 <__snprintf_chk@plt+0x368>
   10f4c:	bl	10d50 <textdomain@plt>
   10f50:	mov	r4, #0
   10f54:	ldr	r0, [pc, #792]	; 11274 <__snprintf_chk@plt+0x374>
   10f58:	bl	16784 <__snprintf_chk@plt+0x5884>
   10f5c:	strb	r4, [r5, #1]
   10f60:	str	r4, [sp]
   10f64:	mov	r3, r9
   10f68:	mov	r2, r8
   10f6c:	mov	r1, r6
   10f70:	mov	r0, r7
   10f74:	bl	10de0 <getopt_long@plt>
   10f78:	cmn	r0, #1
   10f7c:	beq	11008 <__snprintf_chk@plt+0x108>
   10f80:	cmp	r0, #112	; 0x70
   10f84:	beq	10ffc <__snprintf_chk@plt+0xfc>
   10f88:	ble	10fa0 <__snprintf_chk@plt+0xa0>
   10f8c:	cmp	r0, #118	; 0x76
   10f90:	bne	10fd8 <__snprintf_chk@plt+0xd8>
   10f94:	mov	r3, #1
   10f98:	strb	r3, [r5, #2]
   10f9c:	b	10f60 <__snprintf_chk@plt+0x60>
   10fa0:	cmn	r0, #3
   10fa4:	bne	10fec <__snprintf_chk@plt+0xec>
   10fa8:	ldr	r1, [pc, #712]	; 11278 <__snprintf_chk@plt+0x378>
   10fac:	ldr	r3, [pc, #712]	; 1127c <__snprintf_chk@plt+0x37c>
   10fb0:	ldr	r2, [pc, #712]	; 11280 <__snprintf_chk@plt+0x380>
   10fb4:	str	r4, [sp, #4]
   10fb8:	ldr	r0, [r1]
   10fbc:	ldr	r3, [r3]
   10fc0:	ldr	r1, [pc, #700]	; 11284 <__snprintf_chk@plt+0x384>
   10fc4:	str	r2, [sp]
   10fc8:	ldr	r2, [pc, #696]	; 11288 <__snprintf_chk@plt+0x388>
   10fcc:	bl	140b4 <__snprintf_chk@plt+0x31b4>
   10fd0:	mov	r0, #0
   10fd4:	bl	10df8 <exit@plt>
   10fd8:	cmp	r0, #256	; 0x100
   10fdc:	bne	11254 <__snprintf_chk@plt+0x354>
   10fe0:	mov	r3, #1
   10fe4:	strb	r3, [r5]
   10fe8:	b	10f60 <__snprintf_chk@plt+0x60>
   10fec:	cmn	r0, #2
   10ff0:	bne	11254 <__snprintf_chk@plt+0x354>
   10ff4:	mov	r0, #0
   10ff8:	bl	114fc <__snprintf_chk@plt+0x5fc>
   10ffc:	mov	r3, #1
   11000:	strb	r3, [r5, #1]
   11004:	b	10f60 <__snprintf_chk@plt+0x60>
   11008:	ldr	r8, [pc, #636]	; 1128c <__snprintf_chk@plt+0x38c>
   1100c:	ldr	r3, [r8]
   11010:	cmp	r3, r7
   11014:	beq	11234 <__snprintf_chk@plt+0x334>
   11018:	movge	r3, #1
   1101c:	strge	r3, [sp, #8]
   11020:	bge	111ec <__snprintf_chk@plt+0x2ec>
   11024:	mov	r2, #1
   11028:	str	r2, [sp, #8]
   1102c:	b	11060 <__snprintf_chk@plt+0x160>
   11030:	mov	r0, r4
   11034:	bl	10d08 <rmdir@plt>
   11038:	cmp	r0, #0
   1103c:	bne	110ac <__snprintf_chk@plt+0x1ac>
   11040:	ldrb	r9, [r5, #1]
   11044:	cmp	r9, #0
   11048:	bne	11104 <__snprintf_chk@plt+0x204>
   1104c:	ldr	r3, [r8]
   11050:	add	r3, r3, #1
   11054:	cmp	r3, r7
   11058:	str	r3, [r8]
   1105c:	bge	111ec <__snprintf_chk@plt+0x2ec>
   11060:	ldrb	r2, [r5, #2]
   11064:	ldr	r4, [r6, r3, lsl #2]
   11068:	cmp	r2, #0
   1106c:	beq	11030 <__snprintf_chk@plt+0x130>
   11070:	ldr	r3, [pc, #512]	; 11278 <__snprintf_chk@plt+0x378>
   11074:	mov	r2, #5
   11078:	ldr	r1, [pc, #528]	; 11290 <__snprintf_chk@plt+0x390>
   1107c:	mov	r0, #0
   11080:	ldr	r9, [r3]
   11084:	bl	10d2c <dcgettext@plt>
   11088:	mov	r1, r4
   1108c:	mov	fp, r0
   11090:	mov	r0, #4
   11094:	bl	139a0 <__snprintf_chk@plt+0x2aa0>
   11098:	mov	r1, fp
   1109c:	mov	r2, r0
   110a0:	mov	r0, r9
   110a4:	bl	117f8 <__snprintf_chk@plt+0x8f8>
   110a8:	b	11030 <__snprintf_chk@plt+0x130>
   110ac:	bl	10e1c <__errno_location@plt>
   110b0:	mov	r1, r4
   110b4:	mov	r9, r0
   110b8:	ldr	r0, [r0]
   110bc:	bl	11390 <__snprintf_chk@plt+0x490>
   110c0:	subs	fp, r0, #0
   110c4:	bne	1104c <__snprintf_chk@plt+0x14c>
   110c8:	mov	r2, #5
   110cc:	ldr	r1, [pc, #448]	; 11294 <__snprintf_chk@plt+0x394>
   110d0:	ldr	r9, [r9]
   110d4:	bl	10d2c <dcgettext@plt>
   110d8:	mov	r1, r4
   110dc:	mov	sl, r0
   110e0:	mov	r0, #4
   110e4:	bl	139a0 <__snprintf_chk@plt+0x2aa0>
   110e8:	mov	r2, sl
   110ec:	mov	r1, r9
   110f0:	mov	r3, r0
   110f4:	mov	r0, fp
   110f8:	bl	10da4 <error@plt>
   110fc:	str	fp, [sp, #8]
   11100:	b	1104c <__snprintf_chk@plt+0x14c>
   11104:	mov	r0, r4
   11108:	bl	119ac <__snprintf_chk@plt+0xaac>
   1110c:	mov	r1, #47	; 0x2f
   11110:	mov	r0, r4
   11114:	bl	10e94 <strrchr@plt>
   11118:	subs	r2, r0, #0
   1111c:	beq	111a0 <__snprintf_chk@plt+0x2a0>
   11120:	cmp	r4, r2
   11124:	bcs	11158 <__snprintf_chk@plt+0x258>
   11128:	ldrb	r3, [r2]
   1112c:	cmp	r3, #47	; 0x2f
   11130:	bne	11158 <__snprintf_chk@plt+0x258>
   11134:	sub	r3, r2, #1
   11138:	b	1114c <__snprintf_chk@plt+0x24c>
   1113c:	ldrb	r1, [r3]
   11140:	sub	r3, r3, #1
   11144:	cmp	r1, #47	; 0x2f
   11148:	bne	11158 <__snprintf_chk@plt+0x258>
   1114c:	cmp	r4, r3
   11150:	mov	r2, r3
   11154:	bne	1113c <__snprintf_chk@plt+0x23c>
   11158:	ldrb	r3, [r5, #2]
   1115c:	mov	r0, #0
   11160:	strb	r0, [r2, #1]
   11164:	cmp	r3, r0
   11168:	bne	111b4 <__snprintf_chk@plt+0x2b4>
   1116c:	mov	r0, r4
   11170:	bl	10d08 <rmdir@plt>
   11174:	cmp	r0, #0
   11178:	beq	1110c <__snprintf_chk@plt+0x20c>
   1117c:	bl	10e1c <__errno_location@plt>
   11180:	mov	r1, r4
   11184:	mov	r3, r0
   11188:	ldr	r0, [r0]
   1118c:	str	r3, [sp, #12]
   11190:	bl	11390 <__snprintf_chk@plt+0x490>
   11194:	ldr	r3, [sp, #12]
   11198:	subs	fp, r0, #0
   1119c:	beq	111fc <__snprintf_chk@plt+0x2fc>
   111a0:	mov	fp, r9
   111a4:	ldr	r3, [sp, #8]
   111a8:	and	r3, r3, fp
   111ac:	str	r3, [sp, #8]
   111b0:	b	1104c <__snprintf_chk@plt+0x14c>
   111b4:	ldr	r3, [pc, #188]	; 11278 <__snprintf_chk@plt+0x378>
   111b8:	mov	r2, #5
   111bc:	ldr	r1, [pc, #204]	; 11290 <__snprintf_chk@plt+0x390>
   111c0:	ldr	sl, [r3]
   111c4:	bl	10d2c <dcgettext@plt>
   111c8:	mov	r1, r4
   111cc:	mov	fp, r0
   111d0:	mov	r0, #4
   111d4:	bl	139a0 <__snprintf_chk@plt+0x2aa0>
   111d8:	mov	r1, fp
   111dc:	mov	r2, r0
   111e0:	mov	r0, sl
   111e4:	bl	117f8 <__snprintf_chk@plt+0x8f8>
   111e8:	b	1116c <__snprintf_chk@plt+0x26c>
   111ec:	ldr	r3, [sp, #8]
   111f0:	eor	r0, r3, #1
   111f4:	add	sp, sp, #20
   111f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111fc:	mov	r2, #5
   11200:	ldr	r1, [pc, #144]	; 11298 <__snprintf_chk@plt+0x398>
   11204:	ldr	r9, [r3]
   11208:	bl	10d2c <dcgettext@plt>
   1120c:	mov	r1, r4
   11210:	str	r0, [sp, #12]
   11214:	mov	r0, #4
   11218:	bl	139a0 <__snprintf_chk@plt+0x2aa0>
   1121c:	ldr	r2, [sp, #12]
   11220:	mov	r1, r9
   11224:	mov	r3, r0
   11228:	mov	r0, fp
   1122c:	bl	10da4 <error@plt>
   11230:	b	111a4 <__snprintf_chk@plt+0x2a4>
   11234:	mov	r2, #5
   11238:	ldr	r1, [pc, #92]	; 1129c <__snprintf_chk@plt+0x39c>
   1123c:	mov	r0, #0
   11240:	bl	10d2c <dcgettext@plt>
   11244:	mov	r1, #0
   11248:	mov	r2, r0
   1124c:	mov	r0, r1
   11250:	bl	10da4 <error@plt>
   11254:	mov	r0, #1
   11258:	bl	114fc <__snprintf_chk@plt+0x5fc>
   1125c:	ldrdeq	r7, [r1], -r4
   11260:	andeq	r8, r2, r9, asr #2
   11264:	andeq	r6, r1, r0, lsl #23
   11268:	ldrdeq	r6, [r1], -r4
   1126c:	andeq	r6, r1, r0, ror #15
   11270:	andeq	r6, r1, r4, lsr #23
   11274:	ldrdeq	r1, [r1], -r4
   11278:	andeq	r8, r2, r4, asr #2
   1127c:	andeq	r8, r2, r8, ror #1
   11280:	muleq	r1, r4, fp
   11284:	andeq	r6, r1, r0, asr r8
   11288:	ldrdeq	r6, [r1], -r0
   1128c:	andeq	r8, r2, r8, lsr r1
   11290:			; <UNDEFINED> instruction: 0x00016bb8
   11294:	ldrdeq	r6, [r1], -r0
   11298:	andeq	r6, r1, r4, ror #23
   1129c:	andeq	r6, r1, r8, lsr #23
   112a0:	mov	fp, #0
   112a4:	mov	lr, #0
   112a8:	pop	{r1}		; (ldr r1, [sp], #4)
   112ac:	mov	r2, sp
   112b0:	push	{r2}		; (str r2, [sp, #-4]!)
   112b4:	push	{r0}		; (str r0, [sp, #-4]!)
   112b8:	ldr	ip, [pc, #16]	; 112d0 <__snprintf_chk@plt+0x3d0>
   112bc:	push	{ip}		; (str ip, [sp, #-4]!)
   112c0:	ldr	r0, [pc, #12]	; 112d4 <__snprintf_chk@plt+0x3d4>
   112c4:	ldr	r3, [pc, #12]	; 112d8 <__snprintf_chk@plt+0x3d8>
   112c8:	bl	10dbc <__libc_start_main@plt>
   112cc:	bl	10edc <abort@plt>
   112d0:	andeq	r6, r1, r0, lsl #15
   112d4:	andeq	r0, r1, ip, lsl #30
   112d8:	andeq	r6, r1, r0, lsr #14
   112dc:	ldr	r3, [pc, #20]	; 112f8 <__snprintf_chk@plt+0x3f8>
   112e0:	ldr	r2, [pc, #20]	; 112fc <__snprintf_chk@plt+0x3fc>
   112e4:	add	r3, pc, r3
   112e8:	ldr	r2, [r3, r2]
   112ec:	cmp	r2, #0
   112f0:	bxeq	lr
   112f4:	b	10dd4 <__gmon_start__@plt>
   112f8:	andeq	r6, r1, r4, lsl sp
   112fc:	ldrdeq	r0, [r0], -ip
   11300:	ldr	r0, [pc, #24]	; 11320 <__snprintf_chk@plt+0x420>
   11304:	ldr	r3, [pc, #24]	; 11324 <__snprintf_chk@plt+0x424>
   11308:	cmp	r3, r0
   1130c:	bxeq	lr
   11310:	ldr	r3, [pc, #16]	; 11328 <__snprintf_chk@plt+0x428>
   11314:	cmp	r3, #0
   11318:	bxeq	lr
   1131c:	bx	r3
   11320:	andeq	r8, r2, r0, lsr r1
   11324:	andeq	r8, r2, r0, lsr r1
   11328:	andeq	r0, r0, r0
   1132c:	ldr	r0, [pc, #36]	; 11358 <__snprintf_chk@plt+0x458>
   11330:	ldr	r1, [pc, #36]	; 1135c <__snprintf_chk@plt+0x45c>
   11334:	sub	r1, r1, r0
   11338:	asr	r1, r1, #2
   1133c:	add	r1, r1, r1, lsr #31
   11340:	asrs	r1, r1, #1
   11344:	bxeq	lr
   11348:	ldr	r3, [pc, #16]	; 11360 <__snprintf_chk@plt+0x460>
   1134c:	cmp	r3, #0
   11350:	bxeq	lr
   11354:	bx	r3
   11358:	andeq	r8, r2, r0, lsr r1
   1135c:	andeq	r8, r2, r0, lsr r1
   11360:	andeq	r0, r0, r0
   11364:	push	{r4, lr}
   11368:	ldr	r4, [pc, #24]	; 11388 <__snprintf_chk@plt+0x488>
   1136c:	ldrb	r3, [r4]
   11370:	cmp	r3, #0
   11374:	popne	{r4, pc}
   11378:	bl	11300 <__snprintf_chk@plt+0x400>
   1137c:	mov	r3, #1
   11380:	strb	r3, [r4]
   11384:	pop	{r4, pc}
   11388:	andeq	r8, r2, r8, asr #2
   1138c:	b	1132c <__snprintf_chk@plt+0x42c>
   11390:	ldr	r3, [pc, #352]	; 114f8 <__snprintf_chk@plt+0x5f8>
   11394:	push	{r4, r5, r6, lr}
   11398:	ldrb	r3, [r3]
   1139c:	cmp	r3, #0
   113a0:	beq	113c0 <__snprintf_chk@plt+0x4c0>
   113a4:	cmp	r0, #39	; 0x27
   113a8:	cmpne	r0, #17
   113ac:	moveq	r4, #1
   113b0:	movne	r4, #0
   113b4:	bne	113cc <__snprintf_chk@plt+0x4cc>
   113b8:	mov	r0, r4
   113bc:	pop	{r4, r5, r6, pc}
   113c0:	mov	r4, #0
   113c4:	mov	r0, r4
   113c8:	pop	{r4, r5, r6, pc}
   113cc:	sub	r0, r0, #1
   113d0:	cmp	r0, #29
   113d4:	ldrls	pc, [pc, r0, lsl #2]
   113d8:	b	113b8 <__snprintf_chk@plt+0x4b8>
   113dc:	andeq	r1, r1, r4, asr r4
   113e0:			; <UNDEFINED> instruction: 0x000113b8
   113e4:			; <UNDEFINED> instruction: 0x000113b8
   113e8:			; <UNDEFINED> instruction: 0x000113b8
   113ec:			; <UNDEFINED> instruction: 0x000113b8
   113f0:			; <UNDEFINED> instruction: 0x000113b8
   113f4:			; <UNDEFINED> instruction: 0x000113b8
   113f8:			; <UNDEFINED> instruction: 0x000113b8
   113fc:			; <UNDEFINED> instruction: 0x000113b8
   11400:			; <UNDEFINED> instruction: 0x000113b8
   11404:			; <UNDEFINED> instruction: 0x000113b8
   11408:			; <UNDEFINED> instruction: 0x000113b8
   1140c:	andeq	r1, r1, r4, asr r4
   11410:			; <UNDEFINED> instruction: 0x000113b8
   11414:			; <UNDEFINED> instruction: 0x000113b8
   11418:	andeq	r1, r1, r4, asr r4
   1141c:			; <UNDEFINED> instruction: 0x000113b8
   11420:			; <UNDEFINED> instruction: 0x000113b8
   11424:			; <UNDEFINED> instruction: 0x000113b8
   11428:			; <UNDEFINED> instruction: 0x000113b8
   1142c:			; <UNDEFINED> instruction: 0x000113b8
   11430:			; <UNDEFINED> instruction: 0x000113b8
   11434:			; <UNDEFINED> instruction: 0x000113b8
   11438:			; <UNDEFINED> instruction: 0x000113b8
   1143c:			; <UNDEFINED> instruction: 0x000113b8
   11440:			; <UNDEFINED> instruction: 0x000113b8
   11444:			; <UNDEFINED> instruction: 0x000113b8
   11448:			; <UNDEFINED> instruction: 0x000113b8
   1144c:			; <UNDEFINED> instruction: 0x000113b8
   11450:	andeq	r1, r1, r4, asr r4
   11454:	mov	r2, #51456	; 0xc900
   11458:	mvn	r0, #99	; 0x63
   1145c:	bl	10e10 <openat64@plt>
   11460:	subs	r6, r0, #0
   11464:	blt	113c0 <__snprintf_chk@plt+0x4c0>
   11468:	bl	10eb8 <fdopendir@plt>
   1146c:	subs	r5, r0, #0
   11470:	beq	114ec <__snprintf_chk@plt+0x5ec>
   11474:	bl	10e1c <__errno_location@plt>
   11478:	mov	r3, #0
   1147c:	mov	r6, r0
   11480:	str	r3, [r0]
   11484:	mov	r0, r5
   11488:	bl	10eac <readdir64@plt>
   1148c:	cmp	r0, #0
   11490:	beq	114d4 <__snprintf_chk@plt+0x5d4>
   11494:	ldrb	r3, [r0, #19]
   11498:	cmp	r3, #46	; 0x2e
   1149c:	beq	114ac <__snprintf_chk@plt+0x5ac>
   114a0:	mov	r0, r5
   114a4:	bl	10ef4 <closedir@plt>
   114a8:	b	113b8 <__snprintf_chk@plt+0x4b8>
   114ac:	ldrb	r3, [r0, #20]
   114b0:	cmp	r3, #46	; 0x2e
   114b4:	moveq	r3, #2
   114b8:	movne	r3, #1
   114bc:	add	r0, r0, r3
   114c0:	ldrb	r3, [r0, #19]
   114c4:	cmp	r3, #47	; 0x2f
   114c8:	cmpne	r3, #0
   114cc:	beq	11484 <__snprintf_chk@plt+0x584>
   114d0:	b	114a0 <__snprintf_chk@plt+0x5a0>
   114d4:	mov	r0, r5
   114d8:	ldr	r4, [r6]
   114dc:	bl	10ef4 <closedir@plt>
   114e0:	clz	r4, r4
   114e4:	lsr	r4, r4, #5
   114e8:	b	113b8 <__snprintf_chk@plt+0x4b8>
   114ec:	mov	r0, r6
   114f0:	bl	10ee8 <close@plt>
   114f4:	b	113b8 <__snprintf_chk@plt+0x4b8>
   114f8:	andeq	r8, r2, r9, asr #2
   114fc:	ldr	r3, [pc, #672]	; 117a4 <__snprintf_chk@plt+0x8a4>
   11500:	push	{r7, lr}
   11504:	sub	sp, sp, #64	; 0x40
   11508:	ldr	r3, [r3]
   1150c:	subs	r5, r0, #0
   11510:	str	r3, [sp, #60]	; 0x3c
   11514:	beq	11550 <__snprintf_chk@plt+0x650>
   11518:	ldr	r3, [pc, #648]	; 117a8 <__snprintf_chk@plt+0x8a8>
   1151c:	mov	r2, #5
   11520:	ldr	r1, [pc, #644]	; 117ac <__snprintf_chk@plt+0x8ac>
   11524:	mov	r0, #0
   11528:	ldr	r4, [r3]
   1152c:	bl	10d2c <dcgettext@plt>
   11530:	ldr	r3, [pc, #632]	; 117b0 <__snprintf_chk@plt+0x8b0>
   11534:	mov	r1, #1
   11538:	ldr	r3, [r3]
   1153c:	mov	r2, r0
   11540:	mov	r0, r4
   11544:	bl	10e58 <__fprintf_chk@plt>
   11548:	mov	r0, r5
   1154c:	bl	10df8 <exit@plt>
   11550:	mov	r2, #5
   11554:	ldr	r1, [pc, #600]	; 117b4 <__snprintf_chk@plt+0x8b4>
   11558:	bl	10d2c <dcgettext@plt>
   1155c:	ldr	r3, [pc, #588]	; 117b0 <__snprintf_chk@plt+0x8b0>
   11560:	ldr	r4, [pc, #592]	; 117b8 <__snprintf_chk@plt+0x8b8>
   11564:	ldr	r2, [r3]
   11568:	mov	r1, r0
   1156c:	mov	r0, #1
   11570:	bl	10e40 <__printf_chk@plt>
   11574:	mov	r2, #5
   11578:	ldr	r1, [pc, #572]	; 117bc <__snprintf_chk@plt+0x8bc>
   1157c:	mov	r0, r5
   11580:	bl	10d2c <dcgettext@plt>
   11584:	ldr	r1, [r4]
   11588:	bl	10ca8 <fputs_unlocked@plt>
   1158c:	mov	r2, #5
   11590:	ldr	r1, [pc, #552]	; 117c0 <__snprintf_chk@plt+0x8c0>
   11594:	mov	r0, r5
   11598:	bl	10d2c <dcgettext@plt>
   1159c:	ldr	r1, [r4]
   115a0:	bl	10ca8 <fputs_unlocked@plt>
   115a4:	mov	r2, #5
   115a8:	ldr	r1, [pc, #532]	; 117c4 <__snprintf_chk@plt+0x8c4>
   115ac:	mov	r0, r5
   115b0:	bl	10d2c <dcgettext@plt>
   115b4:	ldr	r1, [r4]
   115b8:	bl	10ca8 <fputs_unlocked@plt>
   115bc:	mov	r2, #5
   115c0:	ldr	r1, [pc, #512]	; 117c8 <__snprintf_chk@plt+0x8c8>
   115c4:	mov	r0, r5
   115c8:	bl	10d2c <dcgettext@plt>
   115cc:	ldr	r1, [r4]
   115d0:	bl	10ca8 <fputs_unlocked@plt>
   115d4:	ldr	lr, [pc, #496]	; 117cc <__snprintf_chk@plt+0x8cc>
   115d8:	add	ip, sp, #4
   115dc:	ldm	lr!, {r0, r1, r2, r3}
   115e0:	stmia	ip!, {r0, r1, r2, r3}
   115e4:	ldm	lr!, {r0, r1, r2, r3}
   115e8:	ldr	r6, [sp, #4]
   115ec:	stmia	ip!, {r0, r1, r2, r3}
   115f0:	cmp	r6, #0
   115f4:	ldm	lr!, {r0, r1, r2, r3}
   115f8:	addeq	r4, sp, #4
   115fc:	stmia	ip!, {r0, r1, r2, r3}
   11600:	ldm	lr, {r0, r1}
   11604:	stm	ip, {r0, r1}
   11608:	beq	11638 <__snprintf_chk@plt+0x738>
   1160c:	ldr	r7, [pc, #444]	; 117d0 <__snprintf_chk@plt+0x8d0>
   11610:	add	r4, sp, #4
   11614:	b	11624 <__snprintf_chk@plt+0x724>
   11618:	ldr	r6, [r4, #8]!
   1161c:	cmp	r6, #0
   11620:	beq	11638 <__snprintf_chk@plt+0x738>
   11624:	mov	r1, r6
   11628:	mov	r0, r7
   1162c:	bl	10cc0 <strcmp@plt>
   11630:	cmp	r0, #0
   11634:	bne	11618 <__snprintf_chk@plt+0x718>
   11638:	ldr	r4, [r4, #4]
   1163c:	mov	r2, #5
   11640:	cmp	r4, #0
   11644:	ldr	r1, [pc, #392]	; 117d4 <__snprintf_chk@plt+0x8d4>
   11648:	beq	116f0 <__snprintf_chk@plt+0x7f0>
   1164c:	mov	r0, #0
   11650:	bl	10d2c <dcgettext@plt>
   11654:	ldr	r3, [pc, #380]	; 117d8 <__snprintf_chk@plt+0x8d8>
   11658:	ldr	r2, [pc, #380]	; 117dc <__snprintf_chk@plt+0x8dc>
   1165c:	mov	r1, r0
   11660:	mov	r0, #1
   11664:	bl	10e40 <__printf_chk@plt>
   11668:	mov	r1, #0
   1166c:	mov	r0, #5
   11670:	bl	10e88 <setlocale@plt>
   11674:	cmp	r0, #0
   11678:	ldreq	r6, [pc, #336]	; 117d0 <__snprintf_chk@plt+0x8d0>
   1167c:	beq	11698 <__snprintf_chk@plt+0x798>
   11680:	mov	r2, #3
   11684:	ldr	r1, [pc, #340]	; 117e0 <__snprintf_chk@plt+0x8e0>
   11688:	bl	10ed0 <strncmp@plt>
   1168c:	ldr	r6, [pc, #316]	; 117d0 <__snprintf_chk@plt+0x8d0>
   11690:	cmp	r0, #0
   11694:	bne	11780 <__snprintf_chk@plt+0x880>
   11698:	mov	r2, #5
   1169c:	ldr	r1, [pc, #320]	; 117e4 <__snprintf_chk@plt+0x8e4>
   116a0:	mov	r0, #0
   116a4:	bl	10d2c <dcgettext@plt>
   116a8:	ldr	r3, [pc, #288]	; 117d0 <__snprintf_chk@plt+0x8d0>
   116ac:	ldr	r2, [pc, #292]	; 117d8 <__snprintf_chk@plt+0x8d8>
   116b0:	mov	r1, r0
   116b4:	mov	r0, #1
   116b8:	bl	10e40 <__printf_chk@plt>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #288]	; 117e8 <__snprintf_chk@plt+0x8e8>
   116c4:	mov	r0, #0
   116c8:	bl	10d2c <dcgettext@plt>
   116cc:	ldr	r2, [pc, #280]	; 117ec <__snprintf_chk@plt+0x8ec>
   116d0:	cmp	r4, r6
   116d4:	ldr	r3, [pc, #276]	; 117f0 <__snprintf_chk@plt+0x8f0>
   116d8:	movne	r3, r2
   116dc:	mov	r1, r0
   116e0:	mov	r2, r4
   116e4:	mov	r0, #1
   116e8:	bl	10e40 <__printf_chk@plt>
   116ec:	b	11548 <__snprintf_chk@plt+0x648>
   116f0:	mov	r0, r4
   116f4:	bl	10d2c <dcgettext@plt>
   116f8:	ldr	r3, [pc, #216]	; 117d8 <__snprintf_chk@plt+0x8d8>
   116fc:	ldr	r2, [pc, #216]	; 117dc <__snprintf_chk@plt+0x8dc>
   11700:	mov	r1, r0
   11704:	mov	r0, #1
   11708:	bl	10e40 <__printf_chk@plt>
   1170c:	mov	r1, r4
   11710:	mov	r0, #5
   11714:	bl	10e88 <setlocale@plt>
   11718:	cmp	r0, #0
   1171c:	beq	11734 <__snprintf_chk@plt+0x834>
   11720:	mov	r2, #3
   11724:	ldr	r1, [pc, #180]	; 117e0 <__snprintf_chk@plt+0x8e0>
   11728:	bl	10ed0 <strncmp@plt>
   1172c:	cmp	r0, #0
   11730:	bne	11778 <__snprintf_chk@plt+0x878>
   11734:	mov	r2, #5
   11738:	ldr	r1, [pc, #164]	; 117e4 <__snprintf_chk@plt+0x8e4>
   1173c:	mov	r0, #0
   11740:	bl	10d2c <dcgettext@plt>
   11744:	ldr	r3, [pc, #132]	; 117d0 <__snprintf_chk@plt+0x8d0>
   11748:	ldr	r2, [pc, #136]	; 117d8 <__snprintf_chk@plt+0x8d8>
   1174c:	mov	r4, r3
   11750:	mov	r1, r0
   11754:	mov	r0, #1
   11758:	bl	10e40 <__printf_chk@plt>
   1175c:	ldr	r1, [pc, #132]	; 117e8 <__snprintf_chk@plt+0x8e8>
   11760:	mov	r2, #5
   11764:	mov	r0, #0
   11768:	bl	10d2c <dcgettext@plt>
   1176c:	ldr	r3, [pc, #124]	; 117f0 <__snprintf_chk@plt+0x8f0>
   11770:	mov	r1, r0
   11774:	b	116e0 <__snprintf_chk@plt+0x7e0>
   11778:	ldr	r6, [pc, #80]	; 117d0 <__snprintf_chk@plt+0x8d0>
   1177c:	mov	r4, r6
   11780:	mov	r2, #5
   11784:	ldr	r1, [pc, #104]	; 117f4 <__snprintf_chk@plt+0x8f4>
   11788:	mov	r0, #0
   1178c:	bl	10d2c <dcgettext@plt>
   11790:	ldr	r2, [pc, #56]	; 117d0 <__snprintf_chk@plt+0x8d0>
   11794:	mov	r1, r0
   11798:	mov	r0, #1
   1179c:	bl	10e40 <__printf_chk@plt>
   117a0:	b	11698 <__snprintf_chk@plt+0x798>
   117a4:	andeq	r7, r2, r8, lsl #30
   117a8:	andeq	r8, r2, r0, asr #2
   117ac:	andeq	r6, r1, r8, asr r8
   117b0:	andeq	r8, r2, r4, asr r1
   117b4:	andeq	r6, r1, r0, lsl #17
   117b8:	andeq	r8, r2, r4, asr #2
   117bc:	andeq	r6, r1, r4, lsr #17
   117c0:	andeq	r6, r1, r0, ror #18
   117c4:	andeq	r6, r1, r8, lsr #20
   117c8:	andeq	r6, r1, r8, asr sl
   117cc:	andeq	r6, r1, r8, lsr #15
   117d0:	andeq	r6, r1, r0, asr r8
   117d4:	muleq	r1, r0, sl
   117d8:	andeq	r6, r1, r8, lsr #21
   117dc:	ldrdeq	r6, [r1], -r0
   117e0:	andeq	r6, r1, r0, ror #21
   117e4:	andeq	r6, r1, ip, lsr #22
   117e8:	andeq	r6, r1, ip, asr #22
   117ec:	ldrdeq	r7, [r1], -r4
   117f0:	andeq	r6, r1, ip, lsl #24
   117f4:	andeq	r6, r1, r4, ror #21
   117f8:	push	{r1, r2, r3}
   117fc:	mov	r1, r0
   11800:	push	{r4, r5, r6, lr}
   11804:	sub	sp, sp, #12
   11808:	ldr	r5, [pc, #152]	; 118a8 <__snprintf_chk@plt+0x9a8>
   1180c:	ldr	r2, [pc, #152]	; 118ac <__snprintf_chk@plt+0x9ac>
   11810:	mov	r4, r0
   11814:	ldr	r3, [r5]
   11818:	ldr	r0, [r2]
   1181c:	str	r3, [sp, #4]
   11820:	ldr	r6, [sp, #28]
   11824:	bl	10ca8 <fputs_unlocked@plt>
   11828:	mov	r3, r4
   1182c:	mov	r2, #2
   11830:	mov	r1, #1
   11834:	ldr	r0, [pc, #116]	; 118b0 <__snprintf_chk@plt+0x9b0>
   11838:	bl	10d14 <fwrite_unlocked@plt>
   1183c:	add	r3, sp, #32
   11840:	mov	r1, r6
   11844:	mov	r2, r3
   11848:	mov	r0, r4
   1184c:	str	r3, [sp]
   11850:	bl	144c0 <__snprintf_chk@plt+0x35c0>
   11854:	ldr	r3, [r4, #20]
   11858:	ldr	r2, [r4, #24]
   1185c:	cmp	r3, r2
   11860:	addcc	r1, r3, #1
   11864:	movcc	r2, #10
   11868:	strcc	r1, [r4, #20]
   1186c:	strbcc	r2, [r3]
   11870:	bcs	11894 <__snprintf_chk@plt+0x994>
   11874:	ldr	r2, [sp, #4]
   11878:	ldr	r3, [r5]
   1187c:	cmp	r2, r3
   11880:	bne	118a4 <__snprintf_chk@plt+0x9a4>
   11884:	add	sp, sp, #12
   11888:	pop	{r4, r5, r6, lr}
   1188c:	add	sp, sp, #12
   11890:	bx	lr
   11894:	mov	r0, r4
   11898:	mov	r1, #10
   1189c:	bl	10e7c <__overflow@plt>
   118a0:	b	11874 <__snprintf_chk@plt+0x974>
   118a4:	bl	10d38 <__stack_chk_fail@plt>
   118a8:	andeq	r7, r2, r8, lsl #30
   118ac:	andeq	r8, r2, r4, asr r1
   118b0:			; <UNDEFINED> instruction: 0x00016cb4
   118b4:	ldr	r3, [pc, #4]	; 118c0 <__snprintf_chk@plt+0x9c0>
   118b8:	str	r0, [r3]
   118bc:	bx	lr
   118c0:	andeq	r8, r2, ip, asr #2
   118c4:	ldr	r3, [pc, #4]	; 118d0 <__snprintf_chk@plt+0x9d0>
   118c8:	strb	r0, [r3, #4]
   118cc:	bx	lr
   118d0:	andeq	r8, r2, ip, asr #2
   118d4:	ldr	r3, [pc, #180]	; 11990 <__snprintf_chk@plt+0xa90>
   118d8:	push	{r4, r5, r6, lr}
   118dc:	sub	sp, sp, #8
   118e0:	ldr	r0, [r3]
   118e4:	bl	145a4 <__snprintf_chk@plt+0x36a4>
   118e8:	cmp	r0, #0
   118ec:	beq	11914 <__snprintf_chk@plt+0xa14>
   118f0:	bl	10e1c <__errno_location@plt>
   118f4:	ldr	r5, [pc, #152]	; 11994 <__snprintf_chk@plt+0xa94>
   118f8:	ldrb	r3, [r5, #4]
   118fc:	cmp	r3, #0
   11900:	mov	r4, r0
   11904:	beq	11930 <__snprintf_chk@plt+0xa30>
   11908:	ldr	r3, [r0]
   1190c:	cmp	r3, #32
   11910:	bne	11930 <__snprintf_chk@plt+0xa30>
   11914:	ldr	r3, [pc, #124]	; 11998 <__snprintf_chk@plt+0xa98>
   11918:	ldr	r0, [r3]
   1191c:	bl	145a4 <__snprintf_chk@plt+0x36a4>
   11920:	cmp	r0, #0
   11924:	bne	11970 <__snprintf_chk@plt+0xa70>
   11928:	add	sp, sp, #8
   1192c:	pop	{r4, r5, r6, pc}
   11930:	mov	r2, #5
   11934:	ldr	r1, [pc, #96]	; 1199c <__snprintf_chk@plt+0xa9c>
   11938:	mov	r0, #0
   1193c:	bl	10d2c <dcgettext@plt>
   11940:	mov	r6, r0
   11944:	ldr	r0, [r5]
   11948:	cmp	r0, #0
   1194c:	beq	1197c <__snprintf_chk@plt+0xa7c>
   11950:	ldr	r4, [r4]
   11954:	bl	13a68 <__snprintf_chk@plt+0x2b68>
   11958:	mov	r1, r4
   1195c:	str	r6, [sp]
   11960:	ldr	r2, [pc, #56]	; 119a0 <__snprintf_chk@plt+0xaa0>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	bl	10da4 <error@plt>
   11970:	ldr	r3, [pc, #44]	; 119a4 <__snprintf_chk@plt+0xaa4>
   11974:	ldr	r0, [r3]
   11978:	bl	10ce4 <_exit@plt>
   1197c:	mov	r3, r6
   11980:	ldr	r1, [r4]
   11984:	ldr	r2, [pc, #28]	; 119a8 <__snprintf_chk@plt+0xaa8>
   11988:	bl	10da4 <error@plt>
   1198c:	b	11970 <__snprintf_chk@plt+0xa70>
   11990:	andeq	r8, r2, r4, asr #2
   11994:	andeq	r8, r2, ip, asr #2
   11998:	andeq	r8, r2, r0, asr #2
   1199c:	andeq	r6, r1, r0, asr #25
   119a0:	andeq	r6, r1, ip, asr #25
   119a4:	andeq	r8, r2, ip, ror #1
   119a8:	andeq	r6, r1, ip, asr #23
   119ac:	push	{r4, lr}
   119b0:	mov	r4, r0
   119b4:	bl	14618 <__snprintf_chk@plt+0x3718>
   119b8:	ldrb	r3, [r0]
   119bc:	cmp	r3, #0
   119c0:	movne	r4, r0
   119c4:	mov	r0, r4
   119c8:	bl	14668 <__snprintf_chk@plt+0x3768>
   119cc:	mov	r2, #0
   119d0:	ldrb	r3, [r4, r0]
   119d4:	strb	r2, [r4, r0]
   119d8:	subs	r0, r3, r2
   119dc:	movne	r0, #1
   119e0:	pop	{r4, pc}
   119e4:	push	{r4, r5, r6, lr}
   119e8:	subs	r4, r0, #0
   119ec:	beq	11a60 <__snprintf_chk@plt+0xb60>
   119f0:	mov	r1, #47	; 0x2f
   119f4:	bl	10e94 <strrchr@plt>
   119f8:	subs	r5, r0, #0
   119fc:	beq	11a4c <__snprintf_chk@plt+0xb4c>
   11a00:	add	r6, r5, #1
   11a04:	sub	r3, r6, r4
   11a08:	cmp	r3, #6
   11a0c:	ble	11a4c <__snprintf_chk@plt+0xb4c>
   11a10:	mov	r2, #7
   11a14:	ldr	r1, [pc, #96]	; 11a7c <__snprintf_chk@plt+0xb7c>
   11a18:	sub	r0, r5, #6
   11a1c:	bl	10ed0 <strncmp@plt>
   11a20:	cmp	r0, #0
   11a24:	bne	11a4c <__snprintf_chk@plt+0xb4c>
   11a28:	mov	r2, #3
   11a2c:	ldr	r1, [pc, #76]	; 11a80 <__snprintf_chk@plt+0xb80>
   11a30:	mov	r0, r6
   11a34:	bl	10ed0 <strncmp@plt>
   11a38:	cmp	r0, #0
   11a3c:	movne	r4, r6
   11a40:	ldreq	r3, [pc, #60]	; 11a84 <__snprintf_chk@plt+0xb84>
   11a44:	addeq	r4, r5, #4
   11a48:	streq	r4, [r3]
   11a4c:	ldr	r2, [pc, #52]	; 11a88 <__snprintf_chk@plt+0xb88>
   11a50:	ldr	r3, [pc, #52]	; 11a8c <__snprintf_chk@plt+0xb8c>
   11a54:	str	r4, [r2]
   11a58:	str	r4, [r3]
   11a5c:	pop	{r4, r5, r6, pc}
   11a60:	ldr	r3, [pc, #40]	; 11a90 <__snprintf_chk@plt+0xb90>
   11a64:	mov	r2, #55	; 0x37
   11a68:	mov	r1, #1
   11a6c:	ldr	r3, [r3]
   11a70:	ldr	r0, [pc, #28]	; 11a94 <__snprintf_chk@plt+0xb94>
   11a74:	bl	10d68 <fwrite@plt>
   11a78:	bl	10edc <abort@plt>
   11a7c:	andeq	r6, r1, ip, lsl #26
   11a80:	andeq	r6, r1, r4, lsl sp
   11a84:	andeq	r8, r2, r0, lsr r1
   11a88:	andeq	r8, r2, r4, asr r1
   11a8c:	andeq	r8, r2, r4, lsr r1
   11a90:	andeq	r8, r2, r0, asr #2
   11a94:	ldrdeq	r6, [r1], -r4
   11a98:	push	{r4, lr}
   11a9c:	mov	r2, #48	; 0x30
   11aa0:	mov	r4, r1
   11aa4:	mov	r1, #0
   11aa8:	bl	10e34 <memset@plt>
   11aac:	cmp	r4, #10
   11ab0:	beq	11abc <__snprintf_chk@plt+0xbbc>
   11ab4:	str	r4, [r0]
   11ab8:	pop	{r4, pc}
   11abc:	bl	10edc <abort@plt>
   11ac0:	push	{r4, r5, r6, lr}
   11ac4:	mov	r2, #5
   11ac8:	mov	r5, r0
   11acc:	mov	r6, r1
   11ad0:	mov	r1, r0
   11ad4:	mov	r0, #0
   11ad8:	bl	10d2c <dcgettext@plt>
   11adc:	cmp	r5, r0
   11ae0:	mov	r4, r0
   11ae4:	beq	11af0 <__snprintf_chk@plt+0xbf0>
   11ae8:	mov	r0, r4
   11aec:	pop	{r4, r5, r6, pc}
   11af0:	bl	14704 <__snprintf_chk@plt+0x3804>
   11af4:	ldrb	r3, [r0]
   11af8:	bic	r3, r3, #32
   11afc:	cmp	r3, #85	; 0x55
   11b00:	bne	11b60 <__snprintf_chk@plt+0xc60>
   11b04:	ldrb	r3, [r0, #1]
   11b08:	bic	r3, r3, #32
   11b0c:	cmp	r3, #84	; 0x54
   11b10:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b14:	ldrb	r3, [r0, #2]
   11b18:	bic	r3, r3, #32
   11b1c:	cmp	r3, #70	; 0x46
   11b20:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b24:	ldrb	r3, [r0, #3]
   11b28:	cmp	r3, #45	; 0x2d
   11b2c:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b30:	ldrb	r3, [r0, #4]
   11b34:	cmp	r3, #56	; 0x38
   11b38:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b3c:	ldrb	r3, [r0, #5]
   11b40:	cmp	r3, #0
   11b44:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b48:	ldrb	r2, [r4]
   11b4c:	ldr	r3, [pc, #156]	; 11bf0 <__snprintf_chk@plt+0xcf0>
   11b50:	ldr	r4, [pc, #156]	; 11bf4 <__snprintf_chk@plt+0xcf4>
   11b54:	cmp	r2, #96	; 0x60
   11b58:	movne	r4, r3
   11b5c:	b	11ae8 <__snprintf_chk@plt+0xbe8>
   11b60:	cmp	r3, #71	; 0x47
   11b64:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b68:	ldrb	r3, [r0, #1]
   11b6c:	bic	r3, r3, #32
   11b70:	cmp	r3, #66	; 0x42
   11b74:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b78:	ldrb	r3, [r0, #2]
   11b7c:	cmp	r3, #49	; 0x31
   11b80:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b84:	ldrb	r3, [r0, #3]
   11b88:	cmp	r3, #56	; 0x38
   11b8c:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b90:	ldrb	r3, [r0, #4]
   11b94:	cmp	r3, #48	; 0x30
   11b98:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11b9c:	ldrb	r3, [r0, #5]
   11ba0:	cmp	r3, #51	; 0x33
   11ba4:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11ba8:	ldrb	r3, [r0, #6]
   11bac:	cmp	r3, #48	; 0x30
   11bb0:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11bb4:	ldrb	r3, [r0, #7]
   11bb8:	cmp	r3, #0
   11bbc:	bne	11bd8 <__snprintf_chk@plt+0xcd8>
   11bc0:	ldrb	r2, [r4]
   11bc4:	ldr	r3, [pc, #44]	; 11bf8 <__snprintf_chk@plt+0xcf8>
   11bc8:	ldr	r4, [pc, #44]	; 11bfc <__snprintf_chk@plt+0xcfc>
   11bcc:	cmp	r2, #96	; 0x60
   11bd0:	movne	r4, r3
   11bd4:	b	11ae8 <__snprintf_chk@plt+0xbe8>
   11bd8:	ldr	r3, [pc, #32]	; 11c00 <__snprintf_chk@plt+0xd00>
   11bdc:	ldr	r4, [pc, #32]	; 11c04 <__snprintf_chk@plt+0xd04>
   11be0:	cmp	r6, #9
   11be4:	movne	r4, r3
   11be8:	mov	r0, r4
   11bec:	pop	{r4, r5, r6, pc}
   11bf0:	andeq	r6, r1, r0, ror sp
   11bf4:	andeq	r6, r1, ip, ror sp
   11bf8:	andeq	r6, r1, r4, ror sp
   11bfc:	andeq	r6, r1, r8, ror sp
   11c00:	andeq	r6, r1, r0, lsl #27
   11c04:	andeq	r6, r1, ip, ror #26
   11c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c0c:	sub	sp, sp, #124	; 0x7c
   11c10:	ldr	ip, [pc, #3576]	; 12a10 <__snprintf_chk@plt+0x1b10>
   11c14:	str	r3, [sp, #24]
   11c18:	ldr	r3, [sp, #168]	; 0xa8
   11c1c:	ldr	ip, [ip]
   11c20:	str	r3, [sp, #56]	; 0x38
   11c24:	ldr	r3, [sp, #172]	; 0xac
   11c28:	ldr	r8, [sp, #160]	; 0xa0
   11c2c:	str	r3, [sp, #80]	; 0x50
   11c30:	ldr	r3, [sp, #176]	; 0xb0
   11c34:	mov	fp, r0
   11c38:	str	r3, [sp, #76]	; 0x4c
   11c3c:	mov	sl, r1
   11c40:	str	r2, [sp, #36]	; 0x24
   11c44:	str	ip, [sp, #116]	; 0x74
   11c48:	bl	10d80 <__ctype_get_mb_cur_max@plt>
   11c4c:	ldr	r3, [sp, #164]	; 0xa4
   11c50:	ands	r4, r3, #2
   11c54:	movne	r3, #1
   11c58:	moveq	r3, #0
   11c5c:	str	r3, [sp, #32]
   11c60:	str	r0, [sp, #64]	; 0x40
   11c64:	cmp	r8, #10
   11c68:	ldrls	pc, [pc, r8, lsl #2]
   11c6c:	b	1341c <__snprintf_chk@plt+0x251c>
   11c70:	andeq	r2, r1, r4, rrx
   11c74:	strdeq	r2, [r1], -ip
   11c78:	strdeq	r2, [r1], -ip
   11c7c:	andeq	r2, r1, ip, lsl r1
   11c80:	ldrdeq	r1, [r1], -r0
   11c84:	andeq	r2, r1, r8, lsl r0
   11c88:	muleq	r1, r4, r0
   11c8c:	andeq	r2, r1, ip, asr #1
   11c90:	muleq	r1, ip, ip
   11c94:	muleq	r1, ip, ip
   11c98:	muleq	r1, ip, ip
   11c9c:	cmp	r8, #10
   11ca0:	beq	11cc4 <__snprintf_chk@plt+0xdc4>
   11ca4:	mov	r1, r8
   11ca8:	ldr	r0, [pc, #3428]	; 12a14 <__snprintf_chk@plt+0x1b14>
   11cac:	bl	11ac0 <__snprintf_chk@plt+0xbc0>
   11cb0:	mov	r1, r8
   11cb4:	str	r0, [sp, #80]	; 0x50
   11cb8:	ldr	r0, [pc, #3420]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   11cbc:	bl	11ac0 <__snprintf_chk@plt+0xbc0>
   11cc0:	str	r0, [sp, #76]	; 0x4c
   11cc4:	cmp	r4, #0
   11cc8:	movne	r4, #0
   11ccc:	beq	130dc <__snprintf_chk@plt+0x21dc>
   11cd0:	ldr	r7, [sp, #76]	; 0x4c
   11cd4:	mov	r5, #0
   11cd8:	mov	r6, #1
   11cdc:	mov	r0, r7
   11ce0:	str	r6, [sp, #40]	; 0x28
   11ce4:	str	r5, [sp, #68]	; 0x44
   11ce8:	bl	10e04 <strlen@plt>
   11cec:	str	r6, [sp, #28]
   11cf0:	str	r5, [sp, #44]	; 0x2c
   11cf4:	str	r5, [sp, #72]	; 0x48
   11cf8:	str	r7, [sp, #60]	; 0x3c
   11cfc:	str	r0, [sp, #52]	; 0x34
   11d00:	str	r8, [sp, #160]	; 0xa0
   11d04:	mov	r8, fp
   11d08:	ldr	fp, [sp, #160]	; 0xa0
   11d0c:	mov	r9, #0
   11d10:	ldr	r3, [sp, #24]
   11d14:	cmn	r3, #1
   11d18:	beq	12280 <__snprintf_chk@plt+0x1380>
   11d1c:	ldr	r3, [sp, #24]
   11d20:	subs	r6, r3, r9
   11d24:	movne	r6, #1
   11d28:	cmp	r6, #0
   11d2c:	beq	12298 <__snprintf_chk@plt+0x1398>
   11d30:	ldr	r7, [sp, #28]
   11d34:	ldr	r0, [sp, #36]	; 0x24
   11d38:	cmp	fp, #2
   11d3c:	moveq	r7, #0
   11d40:	andne	r7, r7, #1
   11d44:	add	r3, r0, r9
   11d48:	cmp	r7, #0
   11d4c:	str	r3, [sp, #48]	; 0x30
   11d50:	beq	1273c <__snprintf_chk@plt+0x183c>
   11d54:	ldr	r2, [sp, #52]	; 0x34
   11d58:	cmp	r2, #0
   11d5c:	beq	12a20 <__snprintf_chk@plt+0x1b20>
   11d60:	ldr	r1, [sp, #24]
   11d64:	cmp	r2, #1
   11d68:	mov	r3, r2
   11d6c:	movls	r3, #0
   11d70:	movhi	r3, #1
   11d74:	cmn	r1, #1
   11d78:	movne	r3, #0
   11d7c:	cmp	r3, #0
   11d80:	add	r5, r9, r2
   11d84:	beq	11d90 <__snprintf_chk@plt+0xe90>
   11d88:	bl	10e04 <strlen@plt>
   11d8c:	str	r0, [sp, #24]
   11d90:	ldr	r3, [sp, #24]
   11d94:	cmp	r5, r3
   11d98:	bhi	12a20 <__snprintf_chk@plt+0x1b20>
   11d9c:	ldr	r2, [sp, #52]	; 0x34
   11da0:	ldr	r1, [sp, #60]	; 0x3c
   11da4:	ldr	r0, [sp, #48]	; 0x30
   11da8:	bl	10d20 <memcmp@plt>
   11dac:	cmp	r0, #0
   11db0:	bne	12a20 <__snprintf_chk@plt+0x1b20>
   11db4:	ldr	r3, [sp, #32]
   11db8:	cmp	r3, #0
   11dbc:	bne	132dc <__snprintf_chk@plt+0x23dc>
   11dc0:	ldr	r3, [sp, #48]	; 0x30
   11dc4:	ldrb	r5, [r3]
   11dc8:	cmp	r5, #126	; 0x7e
   11dcc:	ldrls	pc, [pc, r5, lsl #2]
   11dd0:	b	126a0 <__snprintf_chk@plt+0x17a0>
   11dd4:	andeq	r2, r1, ip, lsl #11
   11dd8:	andeq	r2, r1, r0, lsr #13
   11ddc:	andeq	r2, r1, r0, lsr #13
   11de0:	andeq	r2, r1, r0, lsr #13
   11de4:	andeq	r2, r1, r0, lsr #13
   11de8:	andeq	r2, r1, r0, lsr #13
   11dec:	andeq	r2, r1, r0, lsr #13
   11df0:	andeq	r2, r1, r8, asr r6
   11df4:	andeq	r2, r1, r8, asr #12
   11df8:	andeq	r2, r1, r8, asr #10
   11dfc:	andeq	r2, r1, r0, lsl r5
   11e00:	andeq	r2, r1, r8, ror #10
   11e04:	andeq	r2, r1, r0, asr r5
   11e08:	andeq	r2, r1, r0, lsl #9
   11e0c:	andeq	r2, r1, r0, lsr #13
   11e10:	andeq	r2, r1, r0, lsr #13
   11e14:	andeq	r2, r1, r0, lsr #13
   11e18:	andeq	r2, r1, r0, lsr #13
   11e1c:	andeq	r2, r1, r0, lsr #13
   11e20:	andeq	r2, r1, r0, lsr #13
   11e24:	andeq	r2, r1, r0, lsr #13
   11e28:	andeq	r2, r1, r0, lsr #13
   11e2c:	andeq	r2, r1, r0, lsr #13
   11e30:	andeq	r2, r1, r0, lsr #13
   11e34:	andeq	r2, r1, r0, lsr #13
   11e38:	andeq	r2, r1, r0, lsr #13
   11e3c:	andeq	r2, r1, r0, lsr #13
   11e40:	andeq	r2, r1, r0, lsr #13
   11e44:	andeq	r2, r1, r0, lsr #13
   11e48:	andeq	r2, r1, r0, lsr #13
   11e4c:	andeq	r2, r1, r0, lsr #13
   11e50:	andeq	r2, r1, r0, lsr #13
   11e54:	andeq	r2, r1, r0, ror #12
   11e58:	andeq	r2, r1, r4, ror r5
   11e5c:	andeq	r2, r1, r4, ror r5
   11e60:	andeq	r2, r1, r8, ror r6
   11e64:	andeq	r2, r1, r4, ror r5
   11e68:	muleq	r1, r4, r6
   11e6c:	andeq	r2, r1, r4, ror r5
   11e70:			; <UNDEFINED> instruction: 0x000123b4
   11e74:	andeq	r2, r1, r4, ror r5
   11e78:	andeq	r2, r1, r4, ror r5
   11e7c:	andeq	r2, r1, r4, ror r5
   11e80:	muleq	r1, r4, r6
   11e84:	muleq	r1, r4, r6
   11e88:	muleq	r1, r4, r6
   11e8c:	muleq	r1, r4, r6
   11e90:	muleq	r1, r4, r6
   11e94:	muleq	r1, r4, r6
   11e98:	muleq	r1, r4, r6
   11e9c:	muleq	r1, r4, r6
   11ea0:	muleq	r1, r4, r6
   11ea4:	muleq	r1, r4, r6
   11ea8:	muleq	r1, r4, r6
   11eac:	muleq	r1, r4, r6
   11eb0:	muleq	r1, r4, r6
   11eb4:	muleq	r1, r4, r6
   11eb8:	muleq	r1, r4, r6
   11ebc:	muleq	r1, r4, r6
   11ec0:	andeq	r2, r1, r4, ror r5
   11ec4:	andeq	r2, r1, r4, ror r5
   11ec8:	andeq	r2, r1, r4, ror r5
   11ecc:	andeq	r2, r1, r4, ror r5
   11ed0:	andeq	r2, r1, r8, lsl #7
   11ed4:	andeq	r2, r1, r0, lsr #13
   11ed8:	muleq	r1, r4, r6
   11edc:	muleq	r1, r4, r6
   11ee0:	muleq	r1, r4, r6
   11ee4:	muleq	r1, r4, r6
   11ee8:	muleq	r1, r4, r6
   11eec:	muleq	r1, r4, r6
   11ef0:	muleq	r1, r4, r6
   11ef4:	muleq	r1, r4, r6
   11ef8:	muleq	r1, r4, r6
   11efc:	muleq	r1, r4, r6
   11f00:	muleq	r1, r4, r6
   11f04:	muleq	r1, r4, r6
   11f08:	muleq	r1, r4, r6
   11f0c:	muleq	r1, r4, r6
   11f10:	muleq	r1, r4, r6
   11f14:	muleq	r1, r4, r6
   11f18:	muleq	r1, r4, r6
   11f1c:	muleq	r1, r4, r6
   11f20:	muleq	r1, r4, r6
   11f24:	muleq	r1, r4, r6
   11f28:	muleq	r1, r4, r6
   11f2c:	muleq	r1, r4, r6
   11f30:	muleq	r1, r4, r6
   11f34:	muleq	r1, r4, r6
   11f38:	muleq	r1, r4, r6
   11f3c:	muleq	r1, r4, r6
   11f40:	andeq	r2, r1, r4, ror r5
   11f44:	andeq	r2, r1, r0, asr #6
   11f48:	muleq	r1, r4, r6
   11f4c:	andeq	r2, r1, r4, ror r5
   11f50:	muleq	r1, r4, r6
   11f54:	andeq	r2, r1, r4, ror r5
   11f58:	muleq	r1, r4, r6
   11f5c:	muleq	r1, r4, r6
   11f60:	muleq	r1, r4, r6
   11f64:	muleq	r1, r4, r6
   11f68:	muleq	r1, r4, r6
   11f6c:	muleq	r1, r4, r6
   11f70:	muleq	r1, r4, r6
   11f74:	muleq	r1, r4, r6
   11f78:	muleq	r1, r4, r6
   11f7c:	muleq	r1, r4, r6
   11f80:	muleq	r1, r4, r6
   11f84:	muleq	r1, r4, r6
   11f88:	muleq	r1, r4, r6
   11f8c:	muleq	r1, r4, r6
   11f90:	muleq	r1, r4, r6
   11f94:	muleq	r1, r4, r6
   11f98:	muleq	r1, r4, r6
   11f9c:	muleq	r1, r4, r6
   11fa0:	muleq	r1, r4, r6
   11fa4:	muleq	r1, r4, r6
   11fa8:	muleq	r1, r4, r6
   11fac:	muleq	r1, r4, r6
   11fb0:	muleq	r1, r4, r6
   11fb4:	muleq	r1, r4, r6
   11fb8:	muleq	r1, r4, r6
   11fbc:	muleq	r1, r4, r6
   11fc0:	andeq	r2, r1, r8, asr r1
   11fc4:	andeq	r2, r1, r4, ror r5
   11fc8:	andeq	r2, r1, r8, asr r1
   11fcc:	andeq	r2, r1, r8, ror r6
   11fd0:	cmp	r4, #0
   11fd4:	moveq	r3, #1
   11fd8:	streq	r3, [sp, #28]
   11fdc:	beq	12708 <__snprintf_chk@plt+0x1808>
   11fe0:	mov	r3, #0
   11fe4:	mov	r4, r3
   11fe8:	mov	r2, #1
   11fec:	str	r2, [sp, #40]	; 0x28
   11ff0:	str	r3, [sp, #68]	; 0x44
   11ff4:	str	r2, [sp, #32]
   11ff8:	str	r2, [sp, #52]	; 0x34
   11ffc:	ldr	r3, [pc, #2584]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   12000:	str	r4, [sp, #44]	; 0x2c
   12004:	str	r4, [sp, #72]	; 0x48
   12008:	str	r4, [sp, #28]
   1200c:	str	r3, [sp, #60]	; 0x3c
   12010:	mov	r8, #2
   12014:	b	11d00 <__snprintf_chk@plt+0xe00>
   12018:	cmp	r4, #0
   1201c:	bne	132a8 <__snprintf_chk@plt+0x23a8>
   12020:	cmp	sl, #0
   12024:	beq	13068 <__snprintf_chk@plt+0x2168>
   12028:	mov	r3, #34	; 0x22
   1202c:	strb	r3, [fp]
   12030:	ldr	r3, [pc, #2528]	; 12a18 <__snprintf_chk@plt+0x1b18>
   12034:	mov	r1, r4
   12038:	mov	r2, #1
   1203c:	str	r4, [sp, #68]	; 0x44
   12040:	str	r2, [sp, #40]	; 0x28
   12044:	mov	r4, r2
   12048:	str	r1, [sp, #44]	; 0x2c
   1204c:	str	r1, [sp, #72]	; 0x48
   12050:	str	r1, [sp, #32]
   12054:	str	r2, [sp, #28]
   12058:	str	r2, [sp, #52]	; 0x34
   1205c:	str	r3, [sp, #60]	; 0x3c
   12060:	b	11d00 <__snprintf_chk@plt+0xe00>
   12064:	mov	r3, #0
   12068:	str	r3, [sp, #68]	; 0x44
   1206c:	str	r3, [sp, #44]	; 0x2c
   12070:	str	r3, [sp, #32]
   12074:	str	r3, [sp, #28]
   12078:	str	r3, [sp, #60]	; 0x3c
   1207c:	mov	r3, #1
   12080:	str	r8, [sp, #72]	; 0x48
   12084:	str	r8, [sp, #52]	; 0x34
   12088:	mov	r4, r8
   1208c:	str	r3, [sp, #40]	; 0x28
   12090:	b	11d00 <__snprintf_chk@plt+0xe00>
   12094:	mov	r3, #1
   12098:	str	r3, [sp, #40]	; 0x28
   1209c:	str	r3, [sp, #32]
   120a0:	str	r3, [sp, #28]
   120a4:	str	r3, [sp, #52]	; 0x34
   120a8:	ldr	r3, [pc, #2408]	; 12a18 <__snprintf_chk@plt+0x1b18>
   120ac:	mov	r2, #0
   120b0:	mov	r4, r2
   120b4:	str	r2, [sp, #68]	; 0x44
   120b8:	str	r2, [sp, #44]	; 0x2c
   120bc:	str	r2, [sp, #72]	; 0x48
   120c0:	str	r3, [sp, #60]	; 0x3c
   120c4:	mov	r8, #5
   120c8:	b	11d00 <__snprintf_chk@plt+0xe00>
   120cc:	mov	r3, #0
   120d0:	mov	r2, #1
   120d4:	str	r2, [sp, #40]	; 0x28
   120d8:	mov	r4, r3
   120dc:	str	r3, [sp, #68]	; 0x44
   120e0:	str	r2, [sp, #28]
   120e4:	str	r3, [sp, #44]	; 0x2c
   120e8:	str	r3, [sp, #72]	; 0x48
   120ec:	str	r3, [sp, #32]
   120f0:	str	r3, [sp, #52]	; 0x34
   120f4:	str	r3, [sp, #60]	; 0x3c
   120f8:	b	11d00 <__snprintf_chk@plt+0xe00>
   120fc:	mov	r2, #1
   12100:	mov	r3, #0
   12104:	str	r2, [sp, #40]	; 0x28
   12108:	mov	r4, r3
   1210c:	str	r3, [sp, #68]	; 0x44
   12110:	str	r8, [sp, #52]	; 0x34
   12114:	str	r2, [sp, #32]
   12118:	b	11ffc <__snprintf_chk@plt+0x10fc>
   1211c:	mov	r3, #1
   12120:	str	r3, [sp, #40]	; 0x28
   12124:	str	r3, [sp, #32]
   12128:	str	r3, [sp, #28]
   1212c:	str	r3, [sp, #52]	; 0x34
   12130:	ldr	r3, [pc, #2276]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   12134:	mov	r2, #0
   12138:	mov	r4, r2
   1213c:	str	r2, [sp, #68]	; 0x44
   12140:	str	r2, [sp, #44]	; 0x2c
   12144:	str	r2, [sp, #72]	; 0x48
   12148:	str	r3, [sp, #60]	; 0x3c
   1214c:	mov	r8, #2
   12150:	b	11d00 <__snprintf_chk@plt+0xe00>
   12154:	mov	r7, #0
   12158:	ldr	r3, [sp, #24]
   1215c:	cmn	r3, #1
   12160:	beq	12c9c <__snprintf_chk@plt+0x1d9c>
   12164:	ldr	r3, [sp, #24]
   12168:	subs	r3, r3, #1
   1216c:	movne	r3, #1
   12170:	cmp	r3, #0
   12174:	sub	r2, fp, #2
   12178:	clz	r2, r2
   1217c:	lsr	r2, r2, #5
   12180:	bne	1237c <__snprintf_chk@plt+0x147c>
   12184:	cmp	r9, #0
   12188:	bne	1237c <__snprintf_chk@plt+0x147c>
   1218c:	ldr	r3, [sp, #32]
   12190:	tst	r3, r2
   12194:	bne	1249c <__snprintf_chk@plt+0x159c>
   12198:	ldr	r3, [sp, #28]
   1219c:	eor	r3, r3, #1
   121a0:	orr	r3, r2, r3
   121a4:	ldr	r2, [sp, #32]
   121a8:	eor	r3, r3, #1
   121ac:	orrs	r3, r2, r3
   121b0:	beq	121e0 <__snprintf_chk@plt+0x12e0>
   121b4:	mov	r3, #0
   121b8:	ldr	r1, [sp, #56]	; 0x38
   121bc:	cmp	r1, #0
   121c0:	beq	121e0 <__snprintf_chk@plt+0x12e0>
   121c4:	lsr	r2, r5, #5
   121c8:	and	r0, r5, #31
   121cc:	uxtb	r2, r2
   121d0:	ldr	r1, [r1, r2, lsl #2]
   121d4:	lsr	r2, r1, r0
   121d8:	tst	r2, #1
   121dc:	bne	121e8 <__snprintf_chk@plt+0x12e8>
   121e0:	cmp	r7, #0
   121e4:	beq	12438 <__snprintf_chk@plt+0x1538>
   121e8:	sub	r2, fp, #2
   121ec:	clz	r2, r2
   121f0:	lsr	r2, r2, #5
   121f4:	ldr	r3, [sp, #32]
   121f8:	cmp	r3, #0
   121fc:	bne	12528 <__snprintf_chk@plt+0x1628>
   12200:	ldr	r3, [sp, #44]	; 0x2c
   12204:	eor	r3, r3, #1
   12208:	ands	r3, r2, r3
   1220c:	beq	12244 <__snprintf_chk@plt+0x1344>
   12210:	cmp	sl, r4
   12214:	movhi	r2, #39	; 0x27
   12218:	strbhi	r2, [r8, r4]
   1221c:	add	r2, r4, #1
   12220:	cmp	r2, sl
   12224:	movcc	r1, #36	; 0x24
   12228:	strbcc	r1, [r8, r2]
   1222c:	add	r2, r4, #2
   12230:	cmp	r2, sl
   12234:	add	r4, r4, #3
   12238:	movcc	r1, #39	; 0x27
   1223c:	strbcc	r1, [r8, r2]
   12240:	str	r3, [sp, #44]	; 0x2c
   12244:	cmp	r4, sl
   12248:	movcc	r3, #92	; 0x5c
   1224c:	strbcc	r3, [r8, r4]
   12250:	add	r9, r9, #1
   12254:	add	r4, r4, #1
   12258:	cmp	r4, sl
   1225c:	ldr	r3, [sp, #40]	; 0x28
   12260:	strbcc	r5, [r8, r4]
   12264:	cmp	r6, #0
   12268:	moveq	r3, #0
   1226c:	str	r3, [sp, #40]	; 0x28
   12270:	ldr	r3, [sp, #24]
   12274:	add	r4, r4, #1
   12278:	cmn	r3, #1
   1227c:	bne	11d1c <__snprintf_chk@plt+0xe1c>
   12280:	ldr	r3, [sp, #36]	; 0x24
   12284:	ldrb	r6, [r3, r9]
   12288:	adds	r6, r6, #0
   1228c:	movne	r6, #1
   12290:	cmp	r6, #0
   12294:	bne	11d30 <__snprintf_chk@plt+0xe30>
   12298:	str	fp, [sp, #160]	; 0xa0
   1229c:	mov	fp, r8
   122a0:	ldr	r8, [sp, #160]	; 0xa0
   122a4:	ldr	r1, [sp, #32]
   122a8:	cmp	r4, #0
   122ac:	sub	r2, r8, #2
   122b0:	clz	r2, r2
   122b4:	lsr	r2, r2, #5
   122b8:	andeq	r3, r2, r1
   122bc:	movne	r3, #0
   122c0:	cmp	r3, #0
   122c4:	bne	133b0 <__snprintf_chk@plt+0x24b0>
   122c8:	eor	r3, r1, #1
   122cc:	ands	r2, r2, r3
   122d0:	beq	132ec <__snprintf_chk@plt+0x23ec>
   122d4:	ldr	r3, [sp, #68]	; 0x44
   122d8:	cmp	r3, #0
   122dc:	beq	132f0 <__snprintf_chk@plt+0x23f0>
   122e0:	ldr	r3, [sp, #40]	; 0x28
   122e4:	cmp	r3, #0
   122e8:	bne	1336c <__snprintf_chk@plt+0x246c>
   122ec:	ldr	r3, [sp, #72]	; 0x48
   122f0:	adds	r3, r3, #0
   122f4:	movne	r3, #1
   122f8:	cmp	sl, #0
   122fc:	movne	r3, #0
   12300:	cmp	r3, #0
   12304:	ldreq	r2, [sp, #68]	; 0x44
   12308:	beq	132f0 <__snprintf_chk@plt+0x23f0>
   1230c:	ldr	sl, [sp, #72]	; 0x48
   12310:	str	r3, [sp, #68]	; 0x44
   12314:	ldr	r3, [pc, #1792]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   12318:	mov	r2, #39	; 0x27
   1231c:	mov	r4, #1
   12320:	str	r3, [sp, #60]	; 0x3c
   12324:	mov	r3, #0
   12328:	strb	r2, [fp]
   1232c:	str	r4, [sp, #52]	; 0x34
   12330:	mov	r8, #2
   12334:	str	r3, [sp, #32]
   12338:	b	11d00 <__snprintf_chk@plt+0xe00>
   1233c:	mov	r7, #0
   12340:	cmp	fp, #2
   12344:	beq	12c7c <__snprintf_chk@plt+0x1d7c>
   12348:	ldr	r3, [sp, #52]	; 0x34
   1234c:	ldr	r2, [sp, #28]
   12350:	ldr	r1, [sp, #32]
   12354:	cmp	r3, #0
   12358:	andne	r2, r2, r1
   1235c:	moveq	r2, #0
   12360:	cmp	r2, #0
   12364:	moveq	r5, #92	; 0x5c
   12368:	moveq	r3, r5
   1236c:	bne	12c88 <__snprintf_chk@plt+0x1d88>
   12370:	ldr	r1, [sp, #28]
   12374:	cmp	r1, #0
   12378:	bne	133f8 <__snprintf_chk@plt+0x24f8>
   1237c:	mov	r6, #0
   12380:	b	12198 <__snprintf_chk@plt+0x1298>
   12384:	mov	r7, #0
   12388:	cmp	fp, #2
   1238c:	beq	12cec <__snprintf_chk@plt+0x1dec>
   12390:	cmp	fp, #5
   12394:	beq	12cb0 <__snprintf_chk@plt+0x1db0>
   12398:	sub	r2, fp, #2
   1239c:	mov	r6, #0
   123a0:	clz	r2, r2
   123a4:	mov	r5, #63	; 0x3f
   123a8:	lsr	r2, r2, #5
   123ac:	b	12198 <__snprintf_chk@plt+0x1298>
   123b0:	mov	r7, #0
   123b4:	cmp	fp, #2
   123b8:	strne	r6, [sp, #68]	; 0x44
   123bc:	movne	r2, #0
   123c0:	movne	r5, #39	; 0x27
   123c4:	bne	12198 <__snprintf_chk@plt+0x1298>
   123c8:	ldr	r3, [sp, #32]
   123cc:	cmp	r3, #0
   123d0:	bne	130cc <__snprintf_chk@plt+0x21cc>
   123d4:	cmp	sl, #0
   123d8:	ldr	r3, [sp, #72]	; 0x48
   123dc:	clz	r3, r3
   123e0:	lsr	r3, r3, #5
   123e4:	moveq	r3, #0
   123e8:	cmp	r3, #0
   123ec:	bne	13000 <__snprintf_chk@plt+0x2100>
   123f0:	cmp	sl, r4
   123f4:	movhi	r3, #39	; 0x27
   123f8:	strbhi	r3, [r8, r4]
   123fc:	add	r3, r4, #1
   12400:	cmp	sl, r3
   12404:	movhi	r2, #92	; 0x5c
   12408:	strbhi	r2, [r8, r3]
   1240c:	add	r3, r4, #2
   12410:	cmp	sl, r3
   12414:	movhi	r2, #39	; 0x27
   12418:	strbhi	r2, [r8, r3]
   1241c:	mov	r3, #0
   12420:	cmp	r7, #0
   12424:	add	r4, r4, #3
   12428:	str	r3, [sp, #44]	; 0x2c
   1242c:	str	r6, [sp, #68]	; 0x44
   12430:	mov	r5, #39	; 0x27
   12434:	bne	121e8 <__snprintf_chk@plt+0x12e8>
   12438:	ldr	r2, [sp, #44]	; 0x2c
   1243c:	eor	r3, r3, #1
   12440:	and	r3, r3, r2
   12444:	add	r9, r9, #1
   12448:	uxtb	r3, r3
   1244c:	cmp	r3, #0
   12450:	beq	12258 <__snprintf_chk@plt+0x1358>
   12454:	cmp	sl, r4
   12458:	movhi	r3, #39	; 0x27
   1245c:	strbhi	r3, [r8, r4]
   12460:	add	r3, r4, #1
   12464:	cmp	sl, r3
   12468:	movhi	r2, #39	; 0x27
   1246c:	strbhi	r2, [r8, r3]
   12470:	mov	r3, #0
   12474:	add	r4, r4, #2
   12478:	str	r3, [sp, #44]	; 0x2c
   1247c:	b	12258 <__snprintf_chk@plt+0x1358>
   12480:	mov	r3, #114	; 0x72
   12484:	ldr	r1, [sp, #32]
   12488:	sub	r2, fp, #2
   1248c:	clz	r2, r2
   12490:	lsr	r2, r2, #5
   12494:	tst	r2, r1
   12498:	beq	12370 <__snprintf_chk@plt+0x1470>
   1249c:	mov	fp, r8
   124a0:	mov	r8, #2
   124a4:	ldr	r3, [sp, #28]
   124a8:	cmp	r3, #0
   124ac:	movne	r8, #4
   124b0:	ldr	r3, [sp, #164]	; 0xa4
   124b4:	mov	ip, #0
   124b8:	bic	r3, r3, #2
   124bc:	str	r3, [sp, #4]
   124c0:	ldr	r3, [sp, #76]	; 0x4c
   124c4:	str	r8, [sp]
   124c8:	str	r3, [sp, #16]
   124cc:	ldr	r3, [sp, #80]	; 0x50
   124d0:	ldr	r2, [sp, #36]	; 0x24
   124d4:	str	r3, [sp, #12]
   124d8:	mov	r1, sl
   124dc:	ldr	r3, [sp, #24]
   124e0:	mov	r0, fp
   124e4:	str	ip, [sp, #8]
   124e8:	bl	11c08 <__snprintf_chk@plt+0xd08>
   124ec:	mov	r4, r0
   124f0:	ldr	r3, [pc, #1304]	; 12a10 <__snprintf_chk@plt+0x1b10>
   124f4:	ldr	r2, [sp, #116]	; 0x74
   124f8:	mov	r0, r4
   124fc:	ldr	r3, [r3]
   12500:	cmp	r2, r3
   12504:	bne	133f4 <__snprintf_chk@plt+0x24f4>
   12508:	add	sp, sp, #124	; 0x7c
   1250c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12510:	mov	r5, #110	; 0x6e
   12514:	ldr	r3, [sp, #32]
   12518:	mov	r2, #0
   1251c:	cmp	r3, #0
   12520:	mov	r6, r2
   12524:	beq	12200 <__snprintf_chk@plt+0x1300>
   12528:	str	fp, [sp, #160]	; 0xa0
   1252c:	mov	fp, r8
   12530:	ldr	r8, [sp, #160]	; 0xa0
   12534:	mov	r3, r2
   12538:	ldr	r2, [sp, #28]
   1253c:	and	r2, r2, r3
   12540:	str	r2, [sp, #28]
   12544:	b	124a4 <__snprintf_chk@plt+0x15a4>
   12548:	mov	r5, #116	; 0x74
   1254c:	b	12514 <__snprintf_chk@plt+0x1614>
   12550:	mov	r5, #102	; 0x66
   12554:	ldr	r3, [sp, #32]
   12558:	cmp	r3, #0
   1255c:	bne	13108 <__snprintf_chk@plt+0x2208>
   12560:	mov	r6, #0
   12564:	b	12244 <__snprintf_chk@plt+0x1344>
   12568:	mov	r5, #118	; 0x76
   1256c:	b	12554 <__snprintf_chk@plt+0x1654>
   12570:	mov	r7, #0
   12574:	mov	r6, #0
   12578:	b	121b4 <__snprintf_chk@plt+0x12b4>
   1257c:	ldr	r3, [sp, #32]
   12580:	cmp	r3, #0
   12584:	bne	1334c <__snprintf_chk@plt+0x244c>
   12588:	mov	r7, r3
   1258c:	ldr	r3, [sp, #44]	; 0x2c
   12590:	sub	r2, fp, #2
   12594:	eor	r3, r3, #1
   12598:	clz	r2, r2
   1259c:	lsr	r2, r2, #5
   125a0:	ands	r3, r2, r3
   125a4:	beq	12fec <__snprintf_chk@plt+0x20ec>
   125a8:	cmp	sl, r4
   125ac:	movhi	r1, #39	; 0x27
   125b0:	strbhi	r1, [r8, r4]
   125b4:	add	r1, r4, #1
   125b8:	cmp	sl, r1
   125bc:	movhi	r0, #36	; 0x24
   125c0:	strbhi	r0, [r8, r1]
   125c4:	add	r1, r4, #2
   125c8:	cmp	sl, r1
   125cc:	movhi	r0, #39	; 0x27
   125d0:	strbhi	r0, [r8, r1]
   125d4:	add	r1, r4, #3
   125d8:	cmp	sl, r1
   125dc:	bls	1304c <__snprintf_chk@plt+0x214c>
   125e0:	mov	r4, r1
   125e4:	mov	r1, #92	; 0x5c
   125e8:	strb	r1, [r8, r4]
   125ec:	mov	r1, r4
   125f0:	str	r3, [sp, #44]	; 0x2c
   125f4:	cmp	fp, #2
   125f8:	add	r4, r4, #1
   125fc:	beq	13094 <__snprintf_chk@plt+0x2194>
   12600:	ldr	r0, [sp, #24]
   12604:	add	r3, r9, #1
   12608:	cmp	r3, r0
   1260c:	bcs	12624 <__snprintf_chk@plt+0x1724>
   12610:	ldr	r0, [sp, #36]	; 0x24
   12614:	ldrb	r3, [r0, r3]
   12618:	sub	r3, r3, #48	; 0x30
   1261c:	cmp	r3, #9
   12620:	bls	130a4 <__snprintf_chk@plt+0x21a4>
   12624:	mov	r5, #48	; 0x30
   12628:	ldr	r3, [sp, #28]
   1262c:	eor	r3, r3, #1
   12630:	orrs	r2, r2, r3
   12634:	mov	r3, r6
   12638:	moveq	r6, r2
   1263c:	beq	121b8 <__snprintf_chk@plt+0x12b8>
   12640:	mov	r6, #0
   12644:	b	121e0 <__snprintf_chk@plt+0x12e0>
   12648:	mov	r2, #0
   1264c:	mov	r6, r2
   12650:	mov	r5, #98	; 0x62
   12654:	b	12200 <__snprintf_chk@plt+0x1300>
   12658:	mov	r5, #97	; 0x61
   1265c:	b	12560 <__snprintf_chk@plt+0x1660>
   12660:	mov	r3, r7
   12664:	mov	r6, r7
   12668:	mov	r2, #0
   1266c:	mov	r7, r3
   12670:	mov	r5, #32
   12674:	b	12198 <__snprintf_chk@plt+0x1298>
   12678:	cmp	r9, #0
   1267c:	mov	r3, r7
   12680:	bne	12c48 <__snprintf_chk@plt+0x1d48>
   12684:	mov	r6, r7
   12688:	mov	r2, r9
   1268c:	mov	r7, r3
   12690:	b	12198 <__snprintf_chk@plt+0x1298>
   12694:	mov	r6, r7
   12698:	b	121b4 <__snprintf_chk@plt+0x12b4>
   1269c:	mov	r7, #0
   126a0:	ldr	r3, [sp, #64]	; 0x40
   126a4:	cmp	r3, #1
   126a8:	bne	12d04 <__snprintf_chk@plt+0x1e04>
   126ac:	bl	10dec <__ctype_b_loc@plt>
   126b0:	ldr	r2, [sp, #64]	; 0x40
   126b4:	sxth	r3, r5
   126b8:	mov	ip, r2
   126bc:	lsl	r3, r3, #1
   126c0:	ldr	r2, [r0]
   126c4:	ldrh	r3, [r2, r3]
   126c8:	and	r3, r3, #16384	; 0x4000
   126cc:	cmp	r3, #0
   126d0:	ldr	r3, [sp, #28]
   126d4:	movne	r6, #1
   126d8:	moveq	r6, #0
   126dc:	movne	r2, #0
   126e0:	andeq	r2, r3, #1
   126e4:	cmp	r2, #0
   126e8:	bne	13014 <__snprintf_chk@plt+0x2114>
   126ec:	sub	r2, fp, #2
   126f0:	clz	r2, r2
   126f4:	lsr	r2, r2, #5
   126f8:	b	12198 <__snprintf_chk@plt+0x1298>
   126fc:	cmp	r4, #0
   12700:	bne	133c0 <__snprintf_chk@plt+0x24c0>
   12704:	str	r4, [sp, #28]
   12708:	cmp	sl, #0
   1270c:	bne	13404 <__snprintf_chk@plt+0x2504>
   12710:	ldr	r3, [pc, #772]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   12714:	mov	r4, #1
   12718:	str	r4, [sp, #40]	; 0x28
   1271c:	str	r3, [sp, #60]	; 0x3c
   12720:	str	r4, [sp, #52]	; 0x34
   12724:	str	sl, [sp, #72]	; 0x48
   12728:	str	sl, [sp, #68]	; 0x44
   1272c:	str	sl, [sp, #44]	; 0x2c
   12730:	str	sl, [sp, #32]
   12734:	mov	r8, #2
   12738:	b	11d00 <__snprintf_chk@plt+0xe00>
   1273c:	ldr	r3, [sp, #36]	; 0x24
   12740:	ldrb	r5, [r3, r9]
   12744:	cmp	r5, #126	; 0x7e
   12748:	ldrls	pc, [pc, r5, lsl #2]
   1274c:	b	126a0 <__snprintf_chk@plt+0x17a0>
   12750:	andeq	r2, r1, r4, lsl #19
   12754:	andeq	r2, r1, r0, lsr #13
   12758:	andeq	r2, r1, r0, lsr #13
   1275c:	andeq	r2, r1, r0, lsr #13
   12760:	andeq	r2, r1, r0, lsr #13
   12764:	andeq	r2, r1, r0, lsr #13
   12768:	andeq	r2, r1, r0, lsr #13
   1276c:	andeq	r2, r1, r0, ror r9
   12770:	andeq	r2, r1, ip, asr r9
   12774:	andeq	r2, r1, r4, asr r9
   12778:	andeq	r2, r1, ip, asr #18
   1277c:	strdeq	r2, [r1], -ip
   12780:	andeq	r2, r1, r8, ror #19
   12784:	andeq	r2, r1, r0, lsl #9
   12788:	andeq	r2, r1, r0, lsr #13
   1278c:	andeq	r2, r1, r0, lsr #13
   12790:	andeq	r2, r1, r0, lsr #13
   12794:	andeq	r2, r1, r0, lsr #13
   12798:	andeq	r2, r1, r0, lsr #13
   1279c:	andeq	r2, r1, r0, lsr #13
   127a0:	andeq	r2, r1, r0, lsr #13
   127a4:	andeq	r2, r1, r0, lsr #13
   127a8:	andeq	r2, r1, r0, lsr #13
   127ac:	andeq	r2, r1, r0, lsr #13
   127b0:	andeq	r2, r1, r0, lsr #13
   127b4:	andeq	r2, r1, r0, lsr #13
   127b8:	andeq	r2, r1, r0, lsr #13
   127bc:	andeq	r2, r1, r0, lsr #13
   127c0:	andeq	r2, r1, r0, lsr #13
   127c4:	andeq	r2, r1, r0, lsr #13
   127c8:	andeq	r2, r1, r0, lsr #13
   127cc:	andeq	r2, r1, r0, lsr #13
   127d0:	ldrdeq	r2, [r1], -r8
   127d4:	andeq	r2, r1, r4, asr #19
   127d8:	andeq	r2, r1, r4, asr #19
   127dc:			; <UNDEFINED> instruction: 0x000129b4
   127e0:	andeq	r2, r1, r4, asr #19
   127e4:	andeq	r2, r1, ip, ror #13
   127e8:	andeq	r2, r1, r4, asr #19
   127ec:			; <UNDEFINED> instruction: 0x000123b4
   127f0:	andeq	r2, r1, r4, asr #19
   127f4:	andeq	r2, r1, r4, asr #19
   127f8:	andeq	r2, r1, r4, asr #19
   127fc:	andeq	r2, r1, ip, ror #13
   12800:	andeq	r2, r1, ip, ror #13
   12804:	andeq	r2, r1, ip, ror #13
   12808:	andeq	r2, r1, ip, ror #13
   1280c:	andeq	r2, r1, ip, ror #13
   12810:	andeq	r2, r1, ip, ror #13
   12814:	andeq	r2, r1, ip, ror #13
   12818:	andeq	r2, r1, ip, ror #13
   1281c:	andeq	r2, r1, ip, ror #13
   12820:	andeq	r2, r1, ip, ror #13
   12824:	andeq	r2, r1, ip, ror #13
   12828:	andeq	r2, r1, ip, ror #13
   1282c:	andeq	r2, r1, ip, ror #13
   12830:	andeq	r2, r1, ip, ror #13
   12834:	andeq	r2, r1, ip, ror #13
   12838:	andeq	r2, r1, ip, ror #13
   1283c:	andeq	r2, r1, r4, asr #19
   12840:	andeq	r2, r1, r4, asr #19
   12844:	andeq	r2, r1, r4, asr #19
   12848:	andeq	r2, r1, r4, asr #19
   1284c:	andeq	r2, r1, r8, lsl #7
   12850:	andeq	r2, r1, r0, lsr #13
   12854:	andeq	r2, r1, ip, ror #13
   12858:	andeq	r2, r1, ip, ror #13
   1285c:	andeq	r2, r1, ip, ror #13
   12860:	andeq	r2, r1, ip, ror #13
   12864:	andeq	r2, r1, ip, ror #13
   12868:	andeq	r2, r1, ip, ror #13
   1286c:	andeq	r2, r1, ip, ror #13
   12870:	andeq	r2, r1, ip, ror #13
   12874:	andeq	r2, r1, ip, ror #13
   12878:	andeq	r2, r1, ip, ror #13
   1287c:	andeq	r2, r1, ip, ror #13
   12880:	andeq	r2, r1, ip, ror #13
   12884:	andeq	r2, r1, ip, ror #13
   12888:	andeq	r2, r1, ip, ror #13
   1288c:	andeq	r2, r1, ip, ror #13
   12890:	andeq	r2, r1, ip, ror #13
   12894:	andeq	r2, r1, ip, ror #13
   12898:	andeq	r2, r1, ip, ror #13
   1289c:	andeq	r2, r1, ip, ror #13
   128a0:	andeq	r2, r1, ip, ror #13
   128a4:	andeq	r2, r1, ip, ror #13
   128a8:	andeq	r2, r1, ip, ror #13
   128ac:	andeq	r2, r1, ip, ror #13
   128b0:	andeq	r2, r1, ip, ror #13
   128b4:	andeq	r2, r1, ip, ror #13
   128b8:	andeq	r2, r1, ip, ror #13
   128bc:	andeq	r2, r1, r4, asr #19
   128c0:	andeq	r2, r1, r0, asr #6
   128c4:	andeq	r2, r1, ip, ror #13
   128c8:	andeq	r2, r1, r4, asr #19
   128cc:	andeq	r2, r1, ip, ror #13
   128d0:	andeq	r2, r1, r4, asr #19
   128d4:	andeq	r2, r1, ip, ror #13
   128d8:	andeq	r2, r1, ip, ror #13
   128dc:	andeq	r2, r1, ip, ror #13
   128e0:	andeq	r2, r1, ip, ror #13
   128e4:	andeq	r2, r1, ip, ror #13
   128e8:	andeq	r2, r1, ip, ror #13
   128ec:	andeq	r2, r1, ip, ror #13
   128f0:	andeq	r2, r1, ip, ror #13
   128f4:	andeq	r2, r1, ip, ror #13
   128f8:	andeq	r2, r1, ip, ror #13
   128fc:	andeq	r2, r1, ip, ror #13
   12900:	andeq	r2, r1, ip, ror #13
   12904:	andeq	r2, r1, ip, ror #13
   12908:	andeq	r2, r1, ip, ror #13
   1290c:	andeq	r2, r1, ip, ror #13
   12910:	andeq	r2, r1, ip, ror #13
   12914:	andeq	r2, r1, ip, ror #13
   12918:	andeq	r2, r1, ip, ror #13
   1291c:	andeq	r2, r1, ip, ror #13
   12920:	andeq	r2, r1, ip, ror #13
   12924:	andeq	r2, r1, ip, ror #13
   12928:	andeq	r2, r1, ip, ror #13
   1292c:	andeq	r2, r1, ip, ror #13
   12930:	andeq	r2, r1, ip, ror #13
   12934:	andeq	r2, r1, ip, ror #13
   12938:	andeq	r2, r1, ip, ror #13
   1293c:	andeq	r2, r1, r8, asr r1
   12940:	andeq	r2, r1, r4, asr #19
   12944:	andeq	r2, r1, r8, asr r1
   12948:			; <UNDEFINED> instruction: 0x000129b4
   1294c:	mov	r3, #110	; 0x6e
   12950:	b	12484 <__snprintf_chk@plt+0x1584>
   12954:	mov	r3, #116	; 0x74
   12958:	b	12484 <__snprintf_chk@plt+0x1584>
   1295c:	sub	r2, fp, #2
   12960:	mov	r3, #98	; 0x62
   12964:	clz	r2, r2
   12968:	lsr	r2, r2, #5
   1296c:	b	12370 <__snprintf_chk@plt+0x1470>
   12970:	sub	r2, fp, #2
   12974:	mov	r3, #97	; 0x61
   12978:	clz	r2, r2
   1297c:	lsr	r2, r2, #5
   12980:	b	12370 <__snprintf_chk@plt+0x1470>
   12984:	ldr	r3, [sp, #28]
   12988:	cmp	r3, #0
   1298c:	bne	1257c <__snprintf_chk@plt+0x167c>
   12990:	ldr	r3, [sp, #164]	; 0xa4
   12994:	tst	r3, #1
   12998:	bne	1300c <__snprintf_chk@plt+0x210c>
   1299c:	ldr	r6, [sp, #28]
   129a0:	sub	r2, fp, #2
   129a4:	mov	r7, r6
   129a8:	clz	r2, r2
   129ac:	lsr	r2, r2, #5
   129b0:	b	12198 <__snprintf_chk@plt+0x1298>
   129b4:	sub	r2, fp, #2
   129b8:	clz	r2, r2
   129bc:	lsr	r2, r2, #5
   129c0:	b	12184 <__snprintf_chk@plt+0x1284>
   129c4:	sub	r2, fp, #2
   129c8:	mov	r6, #0
   129cc:	clz	r2, r2
   129d0:	lsr	r2, r2, #5
   129d4:	b	1218c <__snprintf_chk@plt+0x128c>
   129d8:	sub	r2, fp, #2
   129dc:	clz	r2, r2
   129e0:	lsr	r2, r2, #5
   129e4:	b	1218c <__snprintf_chk@plt+0x128c>
   129e8:	sub	r2, fp, #2
   129ec:	mov	r3, #102	; 0x66
   129f0:	clz	r2, r2
   129f4:	lsr	r2, r2, #5
   129f8:	b	12370 <__snprintf_chk@plt+0x1470>
   129fc:	sub	r2, fp, #2
   12a00:	mov	r3, #118	; 0x76
   12a04:	clz	r2, r2
   12a08:	lsr	r2, r2, #5
   12a0c:	b	12370 <__snprintf_chk@plt+0x1470>
   12a10:	andeq	r7, r2, r8, lsl #30
   12a14:	andeq	r6, r1, r4, lsl #27
   12a18:	andeq	r6, r1, ip, ror #26
   12a1c:	andeq	r6, r1, r0, lsl #27
   12a20:	ldr	r3, [sp, #48]	; 0x30
   12a24:	ldrb	r5, [r3]
   12a28:	cmp	r5, #126	; 0x7e
   12a2c:	ldrls	pc, [pc, r5, lsl #2]
   12a30:	b	1269c <__snprintf_chk@plt+0x179c>
   12a34:	andeq	r2, r1, ip, ror r5
   12a38:	muleq	r1, ip, r6
   12a3c:	muleq	r1, ip, r6
   12a40:	muleq	r1, ip, r6
   12a44:	muleq	r1, ip, r6
   12a48:	muleq	r1, ip, r6
   12a4c:	muleq	r1, ip, r6
   12a50:	andeq	r2, r1, r4, ror ip
   12a54:	andeq	r2, r1, ip, ror #24
   12a58:	andeq	r2, r1, r8, asr #10
   12a5c:	andeq	r2, r1, r0, lsl r5
   12a60:	andeq	r2, r1, r8, ror #10
   12a64:	andeq	r2, r1, r0, asr r5
   12a68:	andeq	r2, r1, r0, ror #24
   12a6c:	muleq	r1, ip, r6
   12a70:	muleq	r1, ip, r6
   12a74:	muleq	r1, ip, r6
   12a78:	muleq	r1, ip, r6
   12a7c:	muleq	r1, ip, r6
   12a80:	muleq	r1, ip, r6
   12a84:	muleq	r1, ip, r6
   12a88:	muleq	r1, ip, r6
   12a8c:	muleq	r1, ip, r6
   12a90:	muleq	r1, ip, r6
   12a94:	muleq	r1, ip, r6
   12a98:	muleq	r1, ip, r6
   12a9c:	muleq	r1, ip, r6
   12aa0:	muleq	r1, ip, r6
   12aa4:	muleq	r1, ip, r6
   12aa8:	muleq	r1, ip, r6
   12aac:	muleq	r1, ip, r6
   12ab0:	muleq	r1, ip, r6
   12ab4:	andeq	r2, r1, r8, asr ip
   12ab8:	andeq	r2, r1, r0, ror r5
   12abc:	andeq	r2, r1, r0, ror r5
   12ac0:	andeq	r2, r1, ip, lsr ip
   12ac4:	andeq	r2, r1, r0, ror r5
   12ac8:	andeq	r2, r1, r0, lsr ip
   12acc:	andeq	r2, r1, r0, ror r5
   12ad0:			; <UNDEFINED> instruction: 0x000123b0
   12ad4:	andeq	r2, r1, r0, ror r5
   12ad8:	andeq	r2, r1, r0, ror r5
   12adc:	andeq	r2, r1, r0, ror r5
   12ae0:	andeq	r2, r1, r0, lsr ip
   12ae4:	andeq	r2, r1, r0, lsr ip
   12ae8:	andeq	r2, r1, r0, lsr ip
   12aec:	andeq	r2, r1, r0, lsr ip
   12af0:	andeq	r2, r1, r0, lsr ip
   12af4:	andeq	r2, r1, r0, lsr ip
   12af8:	andeq	r2, r1, r0, lsr ip
   12afc:	andeq	r2, r1, r0, lsr ip
   12b00:	andeq	r2, r1, r0, lsr ip
   12b04:	andeq	r2, r1, r0, lsr ip
   12b08:	andeq	r2, r1, r0, lsr ip
   12b0c:	andeq	r2, r1, r0, lsr ip
   12b10:	andeq	r2, r1, r0, lsr ip
   12b14:	andeq	r2, r1, r0, lsr ip
   12b18:	andeq	r2, r1, r0, lsr ip
   12b1c:	andeq	r2, r1, r0, lsr ip
   12b20:	andeq	r2, r1, r0, ror r5
   12b24:	andeq	r2, r1, r0, ror r5
   12b28:	andeq	r2, r1, r0, ror r5
   12b2c:	andeq	r2, r1, r0, ror r5
   12b30:	andeq	r2, r1, r4, lsl #7
   12b34:	muleq	r1, ip, r6
   12b38:	andeq	r2, r1, r0, lsr ip
   12b3c:	andeq	r2, r1, r0, lsr ip
   12b40:	andeq	r2, r1, r0, lsr ip
   12b44:	andeq	r2, r1, r0, lsr ip
   12b48:	andeq	r2, r1, r0, lsr ip
   12b4c:	andeq	r2, r1, r0, lsr ip
   12b50:	andeq	r2, r1, r0, lsr ip
   12b54:	andeq	r2, r1, r0, lsr ip
   12b58:	andeq	r2, r1, r0, lsr ip
   12b5c:	andeq	r2, r1, r0, lsr ip
   12b60:	andeq	r2, r1, r0, lsr ip
   12b64:	andeq	r2, r1, r0, lsr ip
   12b68:	andeq	r2, r1, r0, lsr ip
   12b6c:	andeq	r2, r1, r0, lsr ip
   12b70:	andeq	r2, r1, r0, lsr ip
   12b74:	andeq	r2, r1, r0, lsr ip
   12b78:	andeq	r2, r1, r0, lsr ip
   12b7c:	andeq	r2, r1, r0, lsr ip
   12b80:	andeq	r2, r1, r0, lsr ip
   12b84:	andeq	r2, r1, r0, lsr ip
   12b88:	andeq	r2, r1, r0, lsr ip
   12b8c:	andeq	r2, r1, r0, lsr ip
   12b90:	andeq	r2, r1, r0, lsr ip
   12b94:	andeq	r2, r1, r0, lsr ip
   12b98:	andeq	r2, r1, r0, lsr ip
   12b9c:	andeq	r2, r1, r0, lsr ip
   12ba0:	andeq	r2, r1, r0, ror r5
   12ba4:	andeq	r2, r1, ip, lsr r3
   12ba8:	andeq	r2, r1, r0, lsr ip
   12bac:	andeq	r2, r1, r0, ror r5
   12bb0:	andeq	r2, r1, r0, lsr ip
   12bb4:	andeq	r2, r1, r0, ror r5
   12bb8:	andeq	r2, r1, r0, lsr ip
   12bbc:	andeq	r2, r1, r0, lsr ip
   12bc0:	andeq	r2, r1, r0, lsr ip
   12bc4:	andeq	r2, r1, r0, lsr ip
   12bc8:	andeq	r2, r1, r0, lsr ip
   12bcc:	andeq	r2, r1, r0, lsr ip
   12bd0:	andeq	r2, r1, r0, lsr ip
   12bd4:	andeq	r2, r1, r0, lsr ip
   12bd8:	andeq	r2, r1, r0, lsr ip
   12bdc:	andeq	r2, r1, r0, lsr ip
   12be0:	andeq	r2, r1, r0, lsr ip
   12be4:	andeq	r2, r1, r0, lsr ip
   12be8:	andeq	r2, r1, r0, lsr ip
   12bec:	andeq	r2, r1, r0, lsr ip
   12bf0:	andeq	r2, r1, r0, lsr ip
   12bf4:	andeq	r2, r1, r0, lsr ip
   12bf8:	andeq	r2, r1, r0, lsr ip
   12bfc:	andeq	r2, r1, r0, lsr ip
   12c00:	andeq	r2, r1, r0, lsr ip
   12c04:	andeq	r2, r1, r0, lsr ip
   12c08:	andeq	r2, r1, r0, lsr ip
   12c0c:	andeq	r2, r1, r0, lsr ip
   12c10:	andeq	r2, r1, r0, lsr ip
   12c14:	andeq	r2, r1, r0, lsr ip
   12c18:	andeq	r2, r1, r0, lsr ip
   12c1c:	andeq	r2, r1, r0, lsr ip
   12c20:	andeq	r2, r1, r4, asr r1
   12c24:	andeq	r2, r1, r0, ror r5
   12c28:	andeq	r2, r1, r4, asr r1
   12c2c:	andeq	r2, r1, ip, lsr ip
   12c30:	mov	r6, r7
   12c34:	mov	r7, #0
   12c38:	b	121b4 <__snprintf_chk@plt+0x12b4>
   12c3c:	cmp	r9, #0
   12c40:	mov	r3, #0
   12c44:	beq	12684 <__snprintf_chk@plt+0x1784>
   12c48:	mov	r6, #0
   12c4c:	mov	r7, r3
   12c50:	mov	r3, r6
   12c54:	b	121b8 <__snprintf_chk@plt+0x12b8>
   12c58:	mov	r3, #0
   12c5c:	b	12664 <__snprintf_chk@plt+0x1764>
   12c60:	mov	r7, #0
   12c64:	mov	r3, #114	; 0x72
   12c68:	b	12484 <__snprintf_chk@plt+0x1584>
   12c6c:	mov	r5, #98	; 0x62
   12c70:	b	12514 <__snprintf_chk@plt+0x1614>
   12c74:	mov	r5, #97	; 0x61
   12c78:	b	12554 <__snprintf_chk@plt+0x1654>
   12c7c:	ldr	r3, [sp, #32]
   12c80:	cmp	r3, #0
   12c84:	bne	130cc <__snprintf_chk@plt+0x21cc>
   12c88:	add	r9, r9, #1
   12c8c:	ldr	r3, [sp, #44]	; 0x2c
   12c90:	mov	r6, #0
   12c94:	mov	r5, #92	; 0x5c
   12c98:	b	1244c <__snprintf_chk@plt+0x154c>
   12c9c:	ldr	r3, [sp, #36]	; 0x24
   12ca0:	ldrb	r3, [r3, #1]
   12ca4:	adds	r3, r3, #0
   12ca8:	movne	r3, #1
   12cac:	b	12170 <__snprintf_chk@plt+0x1270>
   12cb0:	ldr	r3, [sp, #164]	; 0xa4
   12cb4:	ands	r3, r3, #4
   12cb8:	beq	12cdc <__snprintf_chk@plt+0x1ddc>
   12cbc:	ldr	r2, [sp, #24]
   12cc0:	add	r3, r9, #2
   12cc4:	cmp	r3, r2
   12cc8:	bcs	12cdc <__snprintf_chk@plt+0x1ddc>
   12ccc:	ldr	r2, [sp, #48]	; 0x30
   12cd0:	ldrb	r5, [r2, #1]
   12cd4:	cmp	r5, #63	; 0x3f
   12cd8:	beq	13140 <__snprintf_chk@plt+0x2240>
   12cdc:	mov	r2, #0
   12ce0:	mov	r6, r2
   12ce4:	mov	r5, #63	; 0x3f
   12ce8:	b	12198 <__snprintf_chk@plt+0x1298>
   12cec:	ldr	r3, [sp, #32]
   12cf0:	cmp	r3, #0
   12cf4:	bne	130cc <__snprintf_chk@plt+0x21cc>
   12cf8:	mov	r6, r3
   12cfc:	mov	r5, #63	; 0x3f
   12d00:	b	121e0 <__snprintf_chk@plt+0x12e0>
   12d04:	ldr	r3, [sp, #24]
   12d08:	cmn	r3, #1
   12d0c:	mov	r3, #0
   12d10:	str	r3, [sp, #108]	; 0x6c
   12d14:	str	r3, [sp, #112]	; 0x70
   12d18:	bne	12d28 <__snprintf_chk@plt+0x1e28>
   12d1c:	ldr	r0, [sp, #36]	; 0x24
   12d20:	bl	10e04 <strlen@plt>
   12d24:	str	r0, [sp, #24]
   12d28:	mov	r3, #0
   12d2c:	str	sl, [sp, #88]	; 0x58
   12d30:	ldr	sl, [sp, #36]	; 0x24
   12d34:	str	r5, [sp, #92]	; 0x5c
   12d38:	mov	r5, r3
   12d3c:	str	r7, [sp, #96]	; 0x60
   12d40:	str	r4, [sp, #100]	; 0x64
   12d44:	str	r8, [sp, #84]	; 0x54
   12d48:	ldr	r3, [sp, #24]
   12d4c:	add	r4, r9, r5
   12d50:	add	r7, sl, r4
   12d54:	sub	r2, r3, r4
   12d58:	mov	r1, r7
   12d5c:	add	r3, sp, #108	; 0x6c
   12d60:	add	r0, sp, #104	; 0x68
   12d64:	bl	14440 <__snprintf_chk@plt+0x3540>
   12d68:	subs	r8, r0, #0
   12d6c:	beq	12dbc <__snprintf_chk@plt+0x1ebc>
   12d70:	cmn	r8, #1
   12d74:	beq	1311c <__snprintf_chk@plt+0x221c>
   12d78:	cmn	r8, #2
   12d7c:	beq	1323c <__snprintf_chk@plt+0x233c>
   12d80:	ldr	r3, [sp, #32]
   12d84:	cmp	fp, #2
   12d88:	movne	r3, #0
   12d8c:	andeq	r3, r3, #1
   12d90:	cmp	r3, #0
   12d94:	bne	12f1c <__snprintf_chk@plt+0x201c>
   12d98:	ldr	r0, [sp, #104]	; 0x68
   12d9c:	bl	10d5c <iswprint@plt>
   12da0:	add	r5, r5, r8
   12da4:	cmp	r0, #0
   12da8:	add	r0, sp, #108	; 0x6c
   12dac:	moveq	r6, #0
   12db0:	bl	10cfc <mbsinit@plt>
   12db4:	cmp	r0, #0
   12db8:	beq	12d48 <__snprintf_chk@plt+0x1e48>
   12dbc:	ldr	r3, [sp, #28]
   12dc0:	mov	ip, r5
   12dc4:	eor	r2, r6, #1
   12dc8:	ldr	r5, [sp, #92]	; 0x5c
   12dcc:	ldr	r7, [sp, #96]	; 0x60
   12dd0:	ldr	r4, [sp, #100]	; 0x64
   12dd4:	ldr	r8, [sp, #84]	; 0x54
   12dd8:	ldr	sl, [sp, #88]	; 0x58
   12ddc:	and	r2, r2, r3
   12de0:	cmp	ip, #1
   12de4:	bls	126e4 <__snprintf_chk@plt+0x17e4>
   12de8:	add	r1, ip, r9
   12dec:	ldr	lr, [sp, #48]	; 0x30
   12df0:	mov	r0, #0
   12df4:	str	r6, [sp, #48]	; 0x30
   12df8:	mov	ip, #39	; 0x27
   12dfc:	ldr	r6, [sp, #44]	; 0x2c
   12e00:	b	12eb8 <__snprintf_chk@plt+0x1fb8>
   12e04:	ldr	r0, [sp, #32]
   12e08:	sub	r3, fp, #2
   12e0c:	cmp	r0, #0
   12e10:	clz	r3, r3
   12e14:	lsr	r3, r3, #5
   12e18:	bne	13020 <__snprintf_chk@plt+0x2120>
   12e1c:	eor	r0, r6, #1
   12e20:	ands	r3, r3, r0
   12e24:	beq	12e54 <__snprintf_chk@plt+0x1f54>
   12e28:	add	r0, r4, #1
   12e2c:	cmp	sl, r4
   12e30:	strbhi	ip, [r8, r4]
   12e34:	cmp	sl, r0
   12e38:	movhi	r6, #36	; 0x24
   12e3c:	strbhi	r6, [r8, r0]
   12e40:	add	r0, r4, #2
   12e44:	mov	r6, r3
   12e48:	add	r4, r4, #3
   12e4c:	cmp	sl, r0
   12e50:	strbhi	ip, [r8, r0]
   12e54:	cmp	sl, r4
   12e58:	movhi	r3, #92	; 0x5c
   12e5c:	strbhi	r3, [r8, r4]
   12e60:	add	r3, r4, #1
   12e64:	cmp	sl, r3
   12e68:	lsrhi	r0, r5, #6
   12e6c:	addhi	r0, r0, #48	; 0x30
   12e70:	strbhi	r0, [r8, r3]
   12e74:	add	r0, r4, #2
   12e78:	cmp	sl, r0
   12e7c:	lsrhi	r3, r5, #3
   12e80:	andhi	r3, r3, #7
   12e84:	addhi	r3, r3, #48	; 0x30
   12e88:	add	r9, r9, #1
   12e8c:	strbhi	r3, [r8, r0]
   12e90:	and	r5, r5, #7
   12e94:	cmp	r9, r1
   12e98:	add	r5, r5, #48	; 0x30
   12e9c:	add	r4, r4, #3
   12ea0:	bcs	13040 <__snprintf_chk@plt+0x2140>
   12ea4:	mov	r0, r2
   12ea8:	cmp	sl, r4
   12eac:	strbhi	r5, [r8, r4]
   12eb0:	ldrb	r5, [lr, #1]!
   12eb4:	add	r4, r4, #1
   12eb8:	cmp	r2, #0
   12ebc:	bne	12e04 <__snprintf_chk@plt+0x1f04>
   12ec0:	eor	r3, r0, #1
   12ec4:	and	r3, r3, r6
   12ec8:	cmp	r7, #0
   12ecc:	uxtb	r3, r3
   12ed0:	beq	12ee4 <__snprintf_chk@plt+0x1fe4>
   12ed4:	cmp	sl, r4
   12ed8:	movhi	r7, #92	; 0x5c
   12edc:	strbhi	r7, [r8, r4]
   12ee0:	add	r4, r4, #1
   12ee4:	add	r9, r9, #1
   12ee8:	cmp	r9, r1
   12eec:	bcs	13034 <__snprintf_chk@plt+0x2134>
   12ef0:	cmp	r3, #0
   12ef4:	beq	13060 <__snprintf_chk@plt+0x2160>
   12ef8:	cmp	sl, r4
   12efc:	add	r3, r4, #1
   12f00:	strbhi	ip, [r8, r4]
   12f04:	mov	r7, #0
   12f08:	cmp	sl, r3
   12f0c:	strbhi	ip, [r8, r3]
   12f10:	add	r4, r4, #2
   12f14:	mov	r6, r7
   12f18:	b	12ea8 <__snprintf_chk@plt+0x1fa8>
   12f1c:	cmp	r8, #1
   12f20:	beq	12d98 <__snprintf_chk@plt+0x1e98>
   12f24:	add	r1, r4, #1
   12f28:	add	r3, sl, r8
   12f2c:	add	r1, sl, r1
   12f30:	add	r4, r3, r4
   12f34:	ldrb	r3, [r1], #1
   12f38:	sub	r3, r3, #91	; 0x5b
   12f3c:	cmp	r3, #33	; 0x21
   12f40:	ldrls	pc, [pc, r3, lsl #2]
   12f44:	b	12fd0 <__snprintf_chk@plt+0x20d0>
   12f48:	ldrdeq	r2, [r1], -ip
   12f4c:	ldrdeq	r2, [r1], -ip
   12f50:	ldrdeq	r2, [r1], -r0
   12f54:	ldrdeq	r2, [r1], -ip
   12f58:	ldrdeq	r2, [r1], -r0
   12f5c:	ldrdeq	r2, [r1], -ip
   12f60:	ldrdeq	r2, [r1], -r0
   12f64:	ldrdeq	r2, [r1], -r0
   12f68:	ldrdeq	r2, [r1], -r0
   12f6c:	ldrdeq	r2, [r1], -r0
   12f70:	ldrdeq	r2, [r1], -r0
   12f74:	ldrdeq	r2, [r1], -r0
   12f78:	ldrdeq	r2, [r1], -r0
   12f7c:	ldrdeq	r2, [r1], -r0
   12f80:	ldrdeq	r2, [r1], -r0
   12f84:	ldrdeq	r2, [r1], -r0
   12f88:	ldrdeq	r2, [r1], -r0
   12f8c:	ldrdeq	r2, [r1], -r0
   12f90:	ldrdeq	r2, [r1], -r0
   12f94:	ldrdeq	r2, [r1], -r0
   12f98:	ldrdeq	r2, [r1], -r0
   12f9c:	ldrdeq	r2, [r1], -r0
   12fa0:	ldrdeq	r2, [r1], -r0
   12fa4:	ldrdeq	r2, [r1], -r0
   12fa8:	ldrdeq	r2, [r1], -r0
   12fac:	ldrdeq	r2, [r1], -r0
   12fb0:	ldrdeq	r2, [r1], -r0
   12fb4:	ldrdeq	r2, [r1], -r0
   12fb8:	ldrdeq	r2, [r1], -r0
   12fbc:	ldrdeq	r2, [r1], -r0
   12fc0:	ldrdeq	r2, [r1], -r0
   12fc4:	ldrdeq	r2, [r1], -r0
   12fc8:	ldrdeq	r2, [r1], -r0
   12fcc:	ldrdeq	r2, [r1], -ip
   12fd0:	cmp	r4, r1
   12fd4:	bne	12f34 <__snprintf_chk@plt+0x2034>
   12fd8:	b	12d98 <__snprintf_chk@plt+0x1e98>
   12fdc:	ldr	fp, [sp, #84]	; 0x54
   12fe0:	ldr	sl, [sp, #88]	; 0x58
   12fe4:	mov	r8, #2
   12fe8:	b	124a4 <__snprintf_chk@plt+0x15a4>
   12fec:	cmp	sl, r4
   12ff0:	movls	r1, r4
   12ff4:	bls	125f4 <__snprintf_chk@plt+0x16f4>
   12ff8:	ldr	r3, [sp, #44]	; 0x2c
   12ffc:	b	125e4 <__snprintf_chk@plt+0x16e4>
   13000:	str	sl, [sp, #72]	; 0x48
   13004:	ldr	sl, [sp, #32]
   13008:	b	1241c <__snprintf_chk@plt+0x151c>
   1300c:	add	r9, r9, #1
   13010:	b	11d10 <__snprintf_chk@plt+0xe10>
   13014:	ldr	r2, [sp, #28]
   13018:	mov	r6, #0
   1301c:	b	12de8 <__snprintf_chk@plt+0x1ee8>
   13020:	str	fp, [sp, #160]	; 0xa0
   13024:	str	r3, [sp, #28]
   13028:	mov	fp, r8
   1302c:	ldr	r8, [sp, #160]	; 0xa0
   13030:	b	124a4 <__snprintf_chk@plt+0x15a4>
   13034:	str	r6, [sp, #44]	; 0x2c
   13038:	ldr	r6, [sp, #48]	; 0x30
   1303c:	b	1244c <__snprintf_chk@plt+0x154c>
   13040:	str	r6, [sp, #44]	; 0x2c
   13044:	ldr	r6, [sp, #48]	; 0x30
   13048:	b	12258 <__snprintf_chk@plt+0x1358>
   1304c:	add	r4, r4, #4
   13050:	str	r3, [sp, #44]	; 0x2c
   13054:	mov	r6, #0
   13058:	mov	r5, #48	; 0x30
   1305c:	b	121e0 <__snprintf_chk@plt+0x12e0>
   13060:	mov	r7, r3
   13064:	b	12ea8 <__snprintf_chk@plt+0x1fa8>
   13068:	ldr	r3, [pc, #-1624]	; 12a18 <__snprintf_chk@plt+0x1b18>
   1306c:	mov	r4, #1
   13070:	str	r4, [sp, #40]	; 0x28
   13074:	str	r4, [sp, #28]
   13078:	str	r4, [sp, #52]	; 0x34
   1307c:	str	sl, [sp, #72]	; 0x48
   13080:	str	sl, [sp, #68]	; 0x44
   13084:	str	sl, [sp, #44]	; 0x2c
   13088:	str	sl, [sp, #32]
   1308c:	str	r3, [sp, #60]	; 0x3c
   13090:	b	11d00 <__snprintf_chk@plt+0xe00>
   13094:	mov	r3, r6
   13098:	mov	r5, #48	; 0x30
   1309c:	mov	r6, #0
   130a0:	b	121e0 <__snprintf_chk@plt+0x12e0>
   130a4:	cmp	sl, r4
   130a8:	movhi	r3, #48	; 0x30
   130ac:	strbhi	r3, [r8, r4]
   130b0:	add	r3, r1, #2
   130b4:	cmp	sl, r3
   130b8:	movhi	r0, #48	; 0x30
   130bc:	strbhi	r0, [r8, r3]
   130c0:	add	r4, r1, #3
   130c4:	mov	r5, #48	; 0x30
   130c8:	b	12628 <__snprintf_chk@plt+0x1728>
   130cc:	str	fp, [sp, #160]	; 0xa0
   130d0:	mov	fp, r8
   130d4:	ldr	r8, [sp, #160]	; 0xa0
   130d8:	b	124a4 <__snprintf_chk@plt+0x15a4>
   130dc:	ldr	r2, [sp, #80]	; 0x50
   130e0:	ldrb	r3, [r2]
   130e4:	cmp	r3, #0
   130e8:	beq	11cd0 <__snprintf_chk@plt+0xdd0>
   130ec:	cmp	sl, r4
   130f0:	strbhi	r3, [fp, r4]
   130f4:	ldrb	r3, [r2, #1]!
   130f8:	add	r4, r4, #1
   130fc:	cmp	r3, #0
   13100:	bne	130ec <__snprintf_chk@plt+0x21ec>
   13104:	b	11cd0 <__snprintf_chk@plt+0xdd0>
   13108:	str	fp, [sp, #160]	; 0xa0
   1310c:	mov	r3, #0
   13110:	mov	fp, r8
   13114:	ldr	r8, [sp, #160]	; 0xa0
   13118:	b	12538 <__snprintf_chk@plt+0x1638>
   1311c:	mov	ip, r5
   13120:	ldr	r7, [sp, #96]	; 0x60
   13124:	ldr	r5, [sp, #92]	; 0x5c
   13128:	ldr	r4, [sp, #100]	; 0x64
   1312c:	ldr	r8, [sp, #84]	; 0x54
   13130:	ldr	sl, [sp, #88]	; 0x58
   13134:	ldr	r2, [sp, #28]
   13138:	mov	r6, #0
   1313c:	b	12de0 <__snprintf_chk@plt+0x1ee0>
   13140:	ldr	r2, [sp, #36]	; 0x24
   13144:	ldrb	r1, [r2, r3]
   13148:	sub	r2, r1, #33	; 0x21
   1314c:	cmp	r2, #29
   13150:	ldrls	pc, [pc, r2, lsl #2]
   13154:	b	13230 <__snprintf_chk@plt+0x2330>
   13158:	ldrdeq	r3, [r1], -r0
   1315c:	andeq	r3, r1, r0, lsr r2
   13160:	andeq	r3, r1, r0, lsr r2
   13164:	andeq	r3, r1, r0, lsr r2
   13168:	andeq	r3, r1, r0, lsr r2
   1316c:	andeq	r3, r1, r0, lsr r2
   13170:	ldrdeq	r3, [r1], -r0
   13174:	ldrdeq	r3, [r1], -r0
   13178:	ldrdeq	r3, [r1], -r0
   1317c:	andeq	r3, r1, r0, lsr r2
   13180:	andeq	r3, r1, r0, lsr r2
   13184:	andeq	r3, r1, r0, lsr r2
   13188:	ldrdeq	r3, [r1], -r0
   1318c:	andeq	r3, r1, r0, lsr r2
   13190:	ldrdeq	r3, [r1], -r0
   13194:	andeq	r3, r1, r0, lsr r2
   13198:	andeq	r3, r1, r0, lsr r2
   1319c:	andeq	r3, r1, r0, lsr r2
   131a0:	andeq	r3, r1, r0, lsr r2
   131a4:	andeq	r3, r1, r0, lsr r2
   131a8:	andeq	r3, r1, r0, lsr r2
   131ac:	andeq	r3, r1, r0, lsr r2
   131b0:	andeq	r3, r1, r0, lsr r2
   131b4:	andeq	r3, r1, r0, lsr r2
   131b8:	andeq	r3, r1, r0, lsr r2
   131bc:	andeq	r3, r1, r0, lsr r2
   131c0:	andeq	r3, r1, r0, lsr r2
   131c4:	ldrdeq	r3, [r1], -r0
   131c8:	ldrdeq	r3, [r1], -r0
   131cc:	ldrdeq	r3, [r1], -r0
   131d0:	ldr	r2, [sp, #32]
   131d4:	cmp	r2, #0
   131d8:	bne	132dc <__snprintf_chk@plt+0x23dc>
   131dc:	cmp	sl, r4
   131e0:	movhi	r2, #63	; 0x3f
   131e4:	strbhi	r2, [r8, r4]
   131e8:	add	r2, r4, #1
   131ec:	cmp	sl, r2
   131f0:	movhi	r0, #34	; 0x22
   131f4:	strbhi	r0, [r8, r2]
   131f8:	add	r2, r4, #2
   131fc:	cmp	sl, r2
   13200:	movhi	r0, #34	; 0x22
   13204:	strbhi	r0, [r8, r2]
   13208:	add	r2, r4, #3
   1320c:	cmp	sl, r2
   13210:	movhi	r0, #63	; 0x3f
   13214:	strbhi	r0, [r8, r2]
   13218:	mov	r2, #0
   1321c:	add	r4, r4, #4
   13220:	mov	r5, r1
   13224:	mov	r9, r3
   13228:	mov	r6, r2
   1322c:	b	12628 <__snprintf_chk@plt+0x1728>
   13230:	mov	r2, #0
   13234:	mov	r6, r2
   13238:	b	12198 <__snprintf_chk@plt+0x1298>
   1323c:	ldr	r0, [sp, #24]
   13240:	mov	r1, r4
   13244:	cmp	r1, r0
   13248:	mov	r2, r7
   1324c:	mov	r3, r5
   13250:	mov	ip, r5
   13254:	ldr	r7, [sp, #96]	; 0x60
   13258:	ldr	r5, [sp, #92]	; 0x5c
   1325c:	ldr	r4, [sp, #100]	; 0x64
   13260:	ldr	r8, [sp, #84]	; 0x54
   13264:	ldr	sl, [sp, #88]	; 0x58
   13268:	bcs	1329c <__snprintf_chk@plt+0x239c>
   1326c:	ldrb	r6, [r2]
   13270:	cmp	r6, #0
   13274:	bne	13288 <__snprintf_chk@plt+0x2388>
   13278:	b	133b8 <__snprintf_chk@plt+0x24b8>
   1327c:	ldrb	r6, [r2, #1]!
   13280:	cmp	r6, #0
   13284:	beq	13340 <__snprintf_chk@plt+0x2440>
   13288:	add	r3, r3, #1
   1328c:	add	r1, r9, r3
   13290:	cmp	r1, r0
   13294:	bcc	1327c <__snprintf_chk@plt+0x237c>
   13298:	mov	ip, r3
   1329c:	ldr	r2, [sp, #28]
   132a0:	mov	r6, #0
   132a4:	b	12de0 <__snprintf_chk@plt+0x1ee0>
   132a8:	mov	r3, #1
   132ac:	str	r3, [sp, #40]	; 0x28
   132b0:	str	r3, [sp, #32]
   132b4:	str	r3, [sp, #28]
   132b8:	str	r3, [sp, #52]	; 0x34
   132bc:	ldr	r3, [pc, #-2220]	; 12a18 <__snprintf_chk@plt+0x1b18>
   132c0:	mov	r2, #0
   132c4:	str	r2, [sp, #68]	; 0x44
   132c8:	str	r2, [sp, #44]	; 0x2c
   132cc:	str	r2, [sp, #72]	; 0x48
   132d0:	mov	r4, r2
   132d4:	str	r3, [sp, #60]	; 0x3c
   132d8:	b	11d00 <__snprintf_chk@plt+0xe00>
   132dc:	str	fp, [sp, #160]	; 0xa0
   132e0:	mov	fp, r8
   132e4:	ldr	r8, [sp, #160]	; 0xa0
   132e8:	b	124b0 <__snprintf_chk@plt+0x15b0>
   132ec:	mov	r2, r3
   132f0:	ldr	r3, [sp, #60]	; 0x3c
   132f4:	cmp	r3, #0
   132f8:	moveq	r2, #0
   132fc:	andne	r2, r2, #1
   13300:	cmp	r2, #0
   13304:	beq	13330 <__snprintf_chk@plt+0x2430>
   13308:	mov	r2, r3
   1330c:	ldrb	r3, [r3]
   13310:	cmp	r3, #0
   13314:	beq	13330 <__snprintf_chk@plt+0x2430>
   13318:	cmp	sl, r4
   1331c:	strbhi	r3, [fp, r4]
   13320:	ldrb	r3, [r2, #1]!
   13324:	add	r4, r4, #1
   13328:	cmp	r3, #0
   1332c:	bne	13318 <__snprintf_chk@plt+0x2418>
   13330:	cmp	sl, r4
   13334:	movhi	r3, #0
   13338:	strbhi	r3, [fp, r4]
   1333c:	b	124f0 <__snprintf_chk@plt+0x15f0>
   13340:	mov	ip, r3
   13344:	ldr	r2, [sp, #28]
   13348:	b	12de0 <__snprintf_chk@plt+0x1ee0>
   1334c:	str	fp, [sp, #160]	; 0xa0
   13350:	mov	fp, r8
   13354:	ldr	r8, [sp, #160]	; 0xa0
   13358:	sub	r3, r8, #2
   1335c:	clz	r3, r3
   13360:	lsr	r3, r3, #5
   13364:	str	r3, [sp, #28]
   13368:	b	124a4 <__snprintf_chk@plt+0x15a4>
   1336c:	ldr	r3, [sp, #76]	; 0x4c
   13370:	mov	ip, #5
   13374:	str	r3, [sp, #16]
   13378:	ldr	r3, [sp, #80]	; 0x50
   1337c:	ldr	r2, [sp, #36]	; 0x24
   13380:	str	r3, [sp, #12]
   13384:	ldr	r3, [sp, #56]	; 0x38
   13388:	ldr	r1, [sp, #72]	; 0x48
   1338c:	str	r3, [sp, #8]
   13390:	ldr	r3, [sp, #164]	; 0xa4
   13394:	mov	r0, fp
   13398:	str	r3, [sp, #4]
   1339c:	str	ip, [sp]
   133a0:	ldr	r3, [sp, #24]
   133a4:	bl	11c08 <__snprintf_chk@plt+0xd08>
   133a8:	mov	r4, r0
   133ac:	b	124f0 <__snprintf_chk@plt+0x15f0>
   133b0:	mov	r8, #2
   133b4:	b	124a4 <__snprintf_chk@plt+0x15a4>
   133b8:	ldr	r2, [sp, #28]
   133bc:	b	12de0 <__snprintf_chk@plt+0x1ee0>
   133c0:	mov	r3, #0
   133c4:	str	r3, [sp, #68]	; 0x44
   133c8:	str	r3, [sp, #44]	; 0x2c
   133cc:	str	r3, [sp, #72]	; 0x48
   133d0:	str	r3, [sp, #28]
   133d4:	mov	r4, r3
   133d8:	ldr	r3, [pc, #-2500]	; 12a1c <__snprintf_chk@plt+0x1b1c>
   133dc:	mov	r2, #1
   133e0:	str	r2, [sp, #40]	; 0x28
   133e4:	str	r2, [sp, #32]
   133e8:	str	r2, [sp, #52]	; 0x34
   133ec:	str	r3, [sp, #60]	; 0x3c
   133f0:	b	11d00 <__snprintf_chk@plt+0xe00>
   133f4:	bl	10d38 <__stack_chk_fail@plt>
   133f8:	mov	r5, r3
   133fc:	mov	r6, #0
   13400:	b	121f4 <__snprintf_chk@plt+0x12f4>
   13404:	mov	r3, #0
   13408:	mov	r2, #1
   1340c:	str	r3, [sp, #44]	; 0x2c
   13410:	str	r3, [sp, #72]	; 0x48
   13414:	str	r2, [sp, #40]	; 0x28
   13418:	b	12310 <__snprintf_chk@plt+0x1410>
   1341c:	bl	10edc <abort@plt>
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	sub	sp, sp, #44	; 0x2c
   13428:	mov	r6, r0
   1342c:	mov	r4, r3
   13430:	mov	sl, r1
   13434:	mov	fp, r2
   13438:	bl	10e1c <__errno_location@plt>
   1343c:	ldr	r7, [pc, #364]	; 135b0 <__snprintf_chk@plt+0x26b0>
   13440:	cmp	r6, #0
   13444:	ldr	r5, [r7]
   13448:	ldr	r3, [r0]
   1344c:	str	r3, [sp, #24]
   13450:	blt	135ac <__snprintf_chk@plt+0x26ac>
   13454:	ldr	r3, [r7, #4]
   13458:	mov	r8, r0
   1345c:	cmp	r3, r6
   13460:	bgt	134ac <__snprintf_chk@plt+0x25ac>
   13464:	cmn	r6, #-268435454	; 0xf0000002
   13468:	bgt	135a8 <__snprintf_chk@plt+0x26a8>
   1346c:	add	r9, r6, #1
   13470:	add	r3, r7, #8
   13474:	cmp	r5, r3
   13478:	lsl	r1, r9, #3
   1347c:	beq	13588 <__snprintf_chk@plt+0x2688>
   13480:	mov	r0, r5
   13484:	bl	14214 <__snprintf_chk@plt+0x3314>
   13488:	mov	r5, r0
   1348c:	str	r0, [r7]
   13490:	ldr	r0, [r7, #4]
   13494:	mov	r1, #0
   13498:	sub	r2, r9, r0
   1349c:	add	r0, r5, r0, lsl #3
   134a0:	lsl	r2, r2, #3
   134a4:	bl	10e34 <memset@plt>
   134a8:	str	r9, [r7, #4]
   134ac:	add	r3, r5, r6, lsl #3
   134b0:	ldr	r1, [r4, #4]
   134b4:	ldr	r7, [r3, #4]
   134b8:	ldr	r9, [r5, r6, lsl #3]
   134bc:	ldr	r2, [r4, #40]	; 0x28
   134c0:	ldr	ip, [r4, #44]	; 0x2c
   134c4:	str	r3, [sp, #28]
   134c8:	ldr	r3, [r4]
   134cc:	orr	r1, r1, #1
   134d0:	add	lr, r4, #8
   134d4:	str	r1, [sp, #36]	; 0x24
   134d8:	str	r1, [sp, #4]
   134dc:	str	r2, [sp, #12]
   134e0:	str	r3, [sp]
   134e4:	mov	r0, r7
   134e8:	mov	r1, r9
   134ec:	str	ip, [sp, #16]
   134f0:	str	lr, [sp, #8]
   134f4:	mov	r3, fp
   134f8:	mov	r2, sl
   134fc:	str	lr, [sp, #32]
   13500:	bl	11c08 <__snprintf_chk@plt+0xd08>
   13504:	cmp	r9, r0
   13508:	bhi	13574 <__snprintf_chk@plt+0x2674>
   1350c:	ldr	r3, [pc, #160]	; 135b4 <__snprintf_chk@plt+0x26b4>
   13510:	add	r9, r0, #1
   13514:	cmp	r7, r3
   13518:	str	r9, [r5, r6, lsl #3]
   1351c:	beq	13528 <__snprintf_chk@plt+0x2628>
   13520:	mov	r0, r7
   13524:	bl	10cd8 <free@plt>
   13528:	mov	r0, r9
   1352c:	bl	141b8 <__snprintf_chk@plt+0x32b8>
   13530:	ldr	lr, [sp, #28]
   13534:	ldr	ip, [r4, #44]	; 0x2c
   13538:	ldr	r5, [r4, #40]	; 0x28
   1353c:	mov	r3, fp
   13540:	mov	r2, sl
   13544:	mov	r1, r9
   13548:	str	r0, [lr, #4]
   1354c:	ldr	lr, [r4]
   13550:	ldr	r4, [sp, #32]
   13554:	str	ip, [sp, #16]
   13558:	str	r4, [sp, #8]
   1355c:	ldr	r4, [sp, #36]	; 0x24
   13560:	str	r5, [sp, #12]
   13564:	str	r4, [sp, #4]
   13568:	str	lr, [sp]
   1356c:	mov	r7, r0
   13570:	bl	11c08 <__snprintf_chk@plt+0xd08>
   13574:	ldr	r3, [sp, #24]
   13578:	mov	r0, r7
   1357c:	str	r3, [r8]
   13580:	add	sp, sp, #44	; 0x2c
   13584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13588:	mov	r0, #0
   1358c:	bl	14214 <__snprintf_chk@plt+0x3314>
   13590:	ldr	r3, [pc, #32]	; 135b8 <__snprintf_chk@plt+0x26b8>
   13594:	mov	r5, r0
   13598:	ldm	r3, {r0, r1}
   1359c:	str	r5, [r7]
   135a0:	stm	r5, {r0, r1}
   135a4:	b	13490 <__snprintf_chk@plt+0x2590>
   135a8:	bl	14400 <__snprintf_chk@plt+0x3500>
   135ac:	bl	10edc <abort@plt>
   135b0:	strdeq	r8, [r2], -r0
   135b4:	andeq	r8, r2, r8, asr r1
   135b8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   135bc:	push	{r4, r5, r6, lr}
   135c0:	mov	r5, r0
   135c4:	bl	10e1c <__errno_location@plt>
   135c8:	cmp	r5, #0
   135cc:	mov	r1, #48	; 0x30
   135d0:	mov	r4, r0
   135d4:	ldr	r0, [pc, #16]	; 135ec <__snprintf_chk@plt+0x26ec>
   135d8:	ldr	r6, [r4]
   135dc:	movne	r0, r5
   135e0:	bl	143c0 <__snprintf_chk@plt+0x34c0>
   135e4:	str	r6, [r4]
   135e8:	pop	{r4, r5, r6, pc}
   135ec:	andeq	r8, r2, r8, asr r2
   135f0:	ldr	r3, [pc, #12]	; 13604 <__snprintf_chk@plt+0x2704>
   135f4:	cmp	r0, #0
   135f8:	moveq	r0, r3
   135fc:	ldr	r0, [r0]
   13600:	bx	lr
   13604:	andeq	r8, r2, r8, asr r2
   13608:	ldr	r3, [pc, #12]	; 1361c <__snprintf_chk@plt+0x271c>
   1360c:	cmp	r0, #0
   13610:	moveq	r0, r3
   13614:	str	r1, [r0]
   13618:	bx	lr
   1361c:	andeq	r8, r2, r8, asr r2
   13620:	ldr	r3, [pc, #52]	; 1365c <__snprintf_chk@plt+0x275c>
   13624:	cmp	r0, #0
   13628:	moveq	r0, r3
   1362c:	add	r3, r0, #8
   13630:	push	{lr}		; (str lr, [sp, #-4]!)
   13634:	lsr	lr, r1, #5
   13638:	and	r1, r1, #31
   1363c:	ldr	ip, [r3, lr, lsl #2]
   13640:	lsr	r0, ip, r1
   13644:	eor	r2, r2, r0
   13648:	and	r2, r2, #1
   1364c:	and	r0, r0, #1
   13650:	eor	r1, ip, r2, lsl r1
   13654:	str	r1, [r3, lr, lsl #2]
   13658:	pop	{pc}		; (ldr pc, [sp], #4)
   1365c:	andeq	r8, r2, r8, asr r2
   13660:	ldr	r3, [pc, #16]	; 13678 <__snprintf_chk@plt+0x2778>
   13664:	cmp	r0, #0
   13668:	movne	r3, r0
   1366c:	ldr	r0, [r3, #4]
   13670:	str	r1, [r3, #4]
   13674:	bx	lr
   13678:	andeq	r8, r2, r8, asr r2
   1367c:	ldr	r3, [pc, #44]	; 136b0 <__snprintf_chk@plt+0x27b0>
   13680:	cmp	r0, #0
   13684:	moveq	r0, r3
   13688:	mov	ip, #10
   1368c:	cmp	r2, #0
   13690:	cmpne	r1, #0
   13694:	str	ip, [r0]
   13698:	beq	136a8 <__snprintf_chk@plt+0x27a8>
   1369c:	str	r1, [r0, #40]	; 0x28
   136a0:	str	r2, [r0, #44]	; 0x2c
   136a4:	bx	lr
   136a8:	push	{r4, lr}
   136ac:	bl	10edc <abort@plt>
   136b0:	andeq	r8, r2, r8, asr r2
   136b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136b8:	sub	sp, sp, #24
   136bc:	ldr	ip, [pc, #108]	; 13730 <__snprintf_chk@plt+0x2830>
   136c0:	ldr	r4, [sp, #56]	; 0x38
   136c4:	mov	r9, r2
   136c8:	cmp	r4, #0
   136cc:	moveq	r4, ip
   136d0:	mov	sl, r3
   136d4:	mov	r7, r0
   136d8:	mov	r8, r1
   136dc:	bl	10e1c <__errno_location@plt>
   136e0:	ldr	r3, [r4, #44]	; 0x2c
   136e4:	mov	r1, r8
   136e8:	ldr	r6, [r0]
   136ec:	str	r3, [sp, #16]
   136f0:	ldr	r2, [r4, #40]	; 0x28
   136f4:	add	r3, r4, #8
   136f8:	str	r3, [sp, #8]
   136fc:	str	r2, [sp, #12]
   13700:	ldr	r2, [r4, #4]
   13704:	mov	r5, r0
   13708:	str	r2, [sp, #4]
   1370c:	ldr	ip, [r4]
   13710:	mov	r3, sl
   13714:	mov	r2, r9
   13718:	mov	r0, r7
   1371c:	str	ip, [sp]
   13720:	bl	11c08 <__snprintf_chk@plt+0xd08>
   13724:	str	r6, [r5]
   13728:	add	sp, sp, #24
   1372c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13730:	andeq	r8, r2, r8, asr r2
   13734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13738:	cmp	r3, #0
   1373c:	sub	sp, sp, #44	; 0x2c
   13740:	ldr	r4, [pc, #192]	; 13808 <__snprintf_chk@plt+0x2908>
   13744:	mov	r6, r2
   13748:	movne	r4, r3
   1374c:	mov	r9, r1
   13750:	mov	r8, r0
   13754:	bl	10e1c <__errno_location@plt>
   13758:	ldr	r3, [r4, #44]	; 0x2c
   1375c:	ldr	r5, [r4, #4]
   13760:	add	sl, r4, #8
   13764:	cmp	r6, #0
   13768:	orreq	r5, r5, #1
   1376c:	mov	r1, #0
   13770:	ldr	r2, [r0]
   13774:	str	r3, [sp, #16]
   13778:	ldr	r3, [r4, #40]	; 0x28
   1377c:	stmib	sp, {r5, sl}
   13780:	str	r3, [sp, #12]
   13784:	ldr	r3, [r4]
   13788:	mov	r7, r0
   1378c:	str	r2, [sp, #28]
   13790:	str	r3, [sp]
   13794:	mov	r2, r8
   13798:	mov	r3, r9
   1379c:	mov	r0, r1
   137a0:	bl	11c08 <__snprintf_chk@plt+0xd08>
   137a4:	add	r1, r0, #1
   137a8:	mov	fp, r0
   137ac:	mov	r0, r1
   137b0:	str	r1, [sp, #36]	; 0x24
   137b4:	bl	141b8 <__snprintf_chk@plt+0x32b8>
   137b8:	ldr	r3, [r4, #44]	; 0x2c
   137bc:	mov	r2, r8
   137c0:	str	r3, [sp, #16]
   137c4:	ldr	r3, [r4, #40]	; 0x28
   137c8:	str	r5, [sp, #4]
   137cc:	str	r3, [sp, #12]
   137d0:	str	sl, [sp, #8]
   137d4:	ldr	ip, [r4]
   137d8:	ldr	r1, [sp, #36]	; 0x24
   137dc:	mov	r3, r9
   137e0:	str	ip, [sp]
   137e4:	str	r0, [sp, #32]
   137e8:	bl	11c08 <__snprintf_chk@plt+0xd08>
   137ec:	ldr	r2, [sp, #28]
   137f0:	cmp	r6, #0
   137f4:	str	r2, [r7]
   137f8:	ldr	r0, [sp, #32]
   137fc:	strne	fp, [r6]
   13800:	add	sp, sp, #44	; 0x2c
   13804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13808:	andeq	r8, r2, r8, asr r2
   1380c:	mov	r3, r2
   13810:	mov	r2, #0
   13814:	b	13734 <__snprintf_chk@plt+0x2834>
   13818:	push	{r4, r5, r6, r7, r8, lr}
   1381c:	ldr	r6, [pc, #112]	; 13894 <__snprintf_chk@plt+0x2994>
   13820:	ldr	r3, [r6, #4]
   13824:	ldr	r7, [r6]
   13828:	cmp	r3, #1
   1382c:	ble	13850 <__snprintf_chk@plt+0x2950>
   13830:	sub	r5, r7, #8
   13834:	add	r5, r5, r3, lsl #3
   13838:	mov	r4, r7
   1383c:	ldr	r0, [r4, #12]
   13840:	add	r4, r4, #8
   13844:	bl	10cd8 <free@plt>
   13848:	cmp	r4, r5
   1384c:	bne	1383c <__snprintf_chk@plt+0x293c>
   13850:	ldr	r0, [r7, #4]
   13854:	ldr	r4, [pc, #60]	; 13898 <__snprintf_chk@plt+0x2998>
   13858:	cmp	r0, r4
   1385c:	beq	13870 <__snprintf_chk@plt+0x2970>
   13860:	bl	10cd8 <free@plt>
   13864:	mov	r3, #256	; 0x100
   13868:	str	r4, [r6, #12]
   1386c:	str	r3, [r6, #8]
   13870:	ldr	r4, [pc, #36]	; 1389c <__snprintf_chk@plt+0x299c>
   13874:	cmp	r7, r4
   13878:	beq	13888 <__snprintf_chk@plt+0x2988>
   1387c:	mov	r0, r7
   13880:	bl	10cd8 <free@plt>
   13884:	str	r4, [r6]
   13888:	mov	r3, #1
   1388c:	str	r3, [r6, #4]
   13890:	pop	{r4, r5, r6, r7, r8, pc}
   13894:	strdeq	r8, [r2], -r0
   13898:	andeq	r8, r2, r8, asr r1
   1389c:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   138a0:	ldr	r3, [pc, #4]	; 138ac <__snprintf_chk@plt+0x29ac>
   138a4:	mvn	r2, #0
   138a8:	b	13420 <__snprintf_chk@plt+0x2520>
   138ac:	andeq	r8, r2, r8, asr r2
   138b0:	ldr	r3, [pc]	; 138b8 <__snprintf_chk@plt+0x29b8>
   138b4:	b	13420 <__snprintf_chk@plt+0x2520>
   138b8:	andeq	r8, r2, r8, asr r2
   138bc:	mov	r1, r0
   138c0:	ldr	r3, [pc, #8]	; 138d0 <__snprintf_chk@plt+0x29d0>
   138c4:	mvn	r2, #0
   138c8:	mov	r0, #0
   138cc:	b	13420 <__snprintf_chk@plt+0x2520>
   138d0:	andeq	r8, r2, r8, asr r2
   138d4:	mov	r2, r1
   138d8:	ldr	r3, [pc, #8]	; 138e8 <__snprintf_chk@plt+0x29e8>
   138dc:	mov	r1, r0
   138e0:	mov	r0, #0
   138e4:	b	13420 <__snprintf_chk@plt+0x2520>
   138e8:	andeq	r8, r2, r8, asr r2
   138ec:	push	{r4, r5, r6, lr}
   138f0:	sub	sp, sp, #56	; 0x38
   138f4:	ldr	r4, [pc, #68]	; 13940 <__snprintf_chk@plt+0x2a40>
   138f8:	mov	r6, r2
   138fc:	mov	r5, r0
   13900:	ldr	r3, [r4]
   13904:	add	r0, sp, #4
   13908:	str	r3, [sp, #52]	; 0x34
   1390c:	bl	11a98 <__snprintf_chk@plt+0xb98>
   13910:	add	r3, sp, #4
   13914:	mvn	r2, #0
   13918:	mov	r1, r6
   1391c:	mov	r0, r5
   13920:	bl	13420 <__snprintf_chk@plt+0x2520>
   13924:	ldr	r2, [sp, #52]	; 0x34
   13928:	ldr	r3, [r4]
   1392c:	cmp	r2, r3
   13930:	bne	1393c <__snprintf_chk@plt+0x2a3c>
   13934:	add	sp, sp, #56	; 0x38
   13938:	pop	{r4, r5, r6, pc}
   1393c:	bl	10d38 <__stack_chk_fail@plt>
   13940:	andeq	r7, r2, r8, lsl #30
   13944:	push	{r4, r5, r6, r7, lr}
   13948:	sub	sp, sp, #60	; 0x3c
   1394c:	ldr	r4, [pc, #72]	; 1399c <__snprintf_chk@plt+0x2a9c>
   13950:	mov	r6, r2
   13954:	mov	r7, r3
   13958:	ldr	ip, [r4]
   1395c:	mov	r5, r0
   13960:	add	r0, sp, #4
   13964:	str	ip, [sp, #52]	; 0x34
   13968:	bl	11a98 <__snprintf_chk@plt+0xb98>
   1396c:	add	r3, sp, #4
   13970:	mov	r2, r7
   13974:	mov	r1, r6
   13978:	mov	r0, r5
   1397c:	bl	13420 <__snprintf_chk@plt+0x2520>
   13980:	ldr	r2, [sp, #52]	; 0x34
   13984:	ldr	r3, [r4]
   13988:	cmp	r2, r3
   1398c:	bne	13998 <__snprintf_chk@plt+0x2a98>
   13990:	add	sp, sp, #60	; 0x3c
   13994:	pop	{r4, r5, r6, r7, pc}
   13998:	bl	10d38 <__stack_chk_fail@plt>
   1399c:	andeq	r7, r2, r8, lsl #30
   139a0:	mov	r2, r1
   139a4:	mov	r1, r0
   139a8:	mov	r0, #0
   139ac:	b	138ec <__snprintf_chk@plt+0x29ec>
   139b0:	mov	r3, r2
   139b4:	mov	r2, r1
   139b8:	mov	r1, r0
   139bc:	mov	r0, #0
   139c0:	b	13944 <__snprintf_chk@plt+0x2a44>
   139c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   139c8:	mov	r4, r2
   139cc:	ldr	lr, [pc, #128]	; 13a54 <__snprintf_chk@plt+0x2b54>
   139d0:	mov	r8, r0
   139d4:	mov	r9, r1
   139d8:	ldm	lr!, {r0, r1, r2, r3}
   139dc:	sub	sp, sp, #60	; 0x3c
   139e0:	add	ip, sp, #4
   139e4:	lsr	r6, r4, #5
   139e8:	stmia	ip!, {r0, r1, r2, r3}
   139ec:	add	r7, sp, #12
   139f0:	ldm	lr!, {r0, r1, r2, r3}
   139f4:	and	r4, r4, #31
   139f8:	ldr	r5, [pc, #88]	; 13a58 <__snprintf_chk@plt+0x2b58>
   139fc:	stmia	ip!, {r0, r1, r2, r3}
   13a00:	ldm	lr, {r0, r1, r2, r3}
   13a04:	stm	ip, {r0, r1, r2, r3}
   13a08:	mov	r2, r9
   13a0c:	ldr	r3, [r7, r6, lsl #2]
   13a10:	ldr	ip, [r5]
   13a14:	mov	r1, r8
   13a18:	mvn	r0, r3, lsr r4
   13a1c:	and	r0, r0, #1
   13a20:	str	ip, [sp, #52]	; 0x34
   13a24:	eor	r4, r3, r0, lsl r4
   13a28:	add	r3, sp, #4
   13a2c:	mov	r0, #0
   13a30:	str	r4, [r7, r6, lsl #2]
   13a34:	bl	13420 <__snprintf_chk@plt+0x2520>
   13a38:	ldr	r2, [sp, #52]	; 0x34
   13a3c:	ldr	r3, [r5]
   13a40:	cmp	r2, r3
   13a44:	bne	13a50 <__snprintf_chk@plt+0x2b50>
   13a48:	add	sp, sp, #60	; 0x3c
   13a4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13a50:	bl	10d38 <__stack_chk_fail@plt>
   13a54:	andeq	r8, r2, r8, asr r2
   13a58:	andeq	r7, r2, r8, lsl #30
   13a5c:	mov	r2, r1
   13a60:	mvn	r1, #0
   13a64:	b	139c4 <__snprintf_chk@plt+0x2ac4>
   13a68:	mov	r2, #58	; 0x3a
   13a6c:	mvn	r1, #0
   13a70:	b	139c4 <__snprintf_chk@plt+0x2ac4>
   13a74:	mov	r2, #58	; 0x3a
   13a78:	b	139c4 <__snprintf_chk@plt+0x2ac4>
   13a7c:	push	{r4, r5, r6, r7, r8, lr}
   13a80:	sub	sp, sp, #104	; 0x68
   13a84:	ldr	r5, [pc, #120]	; 13b04 <__snprintf_chk@plt+0x2c04>
   13a88:	mov	r6, r0
   13a8c:	mov	r0, sp
   13a90:	ldr	r3, [r5]
   13a94:	mov	r7, r2
   13a98:	str	r3, [sp, #100]	; 0x64
   13a9c:	bl	11a98 <__snprintf_chk@plt+0xb98>
   13aa0:	mov	ip, sp
   13aa4:	add	lr, sp, #52	; 0x34
   13aa8:	ldm	ip!, {r0, r1, r2, r3}
   13aac:	stmia	lr!, {r0, r1, r2, r3}
   13ab0:	ldm	ip!, {r0, r1, r2, r3}
   13ab4:	ldr	r8, [sp, #64]	; 0x40
   13ab8:	stmia	lr!, {r0, r1, r2, r3}
   13abc:	mvn	r4, r8
   13ac0:	ldm	ip, {r0, r1, r2, r3}
   13ac4:	and	ip, r4, #67108864	; 0x4000000
   13ac8:	eor	ip, ip, r8
   13acc:	str	ip, [sp, #64]	; 0x40
   13ad0:	stm	lr, {r0, r1, r2, r3}
   13ad4:	add	r3, sp, #52	; 0x34
   13ad8:	mvn	r2, #0
   13adc:	mov	r1, r7
   13ae0:	mov	r0, r6
   13ae4:	bl	13420 <__snprintf_chk@plt+0x2520>
   13ae8:	ldr	r2, [sp, #100]	; 0x64
   13aec:	ldr	r3, [r5]
   13af0:	cmp	r2, r3
   13af4:	bne	13b00 <__snprintf_chk@plt+0x2c00>
   13af8:	add	sp, sp, #104	; 0x68
   13afc:	pop	{r4, r5, r6, r7, r8, pc}
   13b00:	bl	10d38 <__stack_chk_fail@plt>
   13b04:	andeq	r7, r2, r8, lsl #30
   13b08:	push	{r4, r5, r6, r7, r8, r9, lr}
   13b0c:	mov	r6, r1
   13b10:	ldr	lr, [pc, #132]	; 13b9c <__snprintf_chk@plt+0x2c9c>
   13b14:	mov	r5, r2
   13b18:	mov	r8, r0
   13b1c:	mov	r9, r3
   13b20:	ldm	lr!, {r0, r1, r2, r3}
   13b24:	sub	sp, sp, #60	; 0x3c
   13b28:	add	ip, sp, #4
   13b2c:	ldr	r4, [pc, #108]	; 13ba0 <__snprintf_chk@plt+0x2ca0>
   13b30:	stmia	ip!, {r0, r1, r2, r3}
   13b34:	mov	r7, #10
   13b38:	ldm	lr!, {r0, r1, r2, r3}
   13b3c:	cmp	r5, #0
   13b40:	cmpne	r6, #0
   13b44:	str	r7, [sp, #4]
   13b48:	stmia	ip!, {r0, r1, r2, r3}
   13b4c:	ldm	lr, {r0, r1, r2, r3}
   13b50:	ldr	lr, [r4]
   13b54:	stm	ip, {r0, r1, r2, r3}
   13b58:	str	lr, [sp, #52]	; 0x34
   13b5c:	beq	13b98 <__snprintf_chk@plt+0x2c98>
   13b60:	add	r3, sp, #4
   13b64:	ldr	r2, [sp, #88]	; 0x58
   13b68:	mov	r1, r9
   13b6c:	mov	r0, r8
   13b70:	str	r6, [sp, #44]	; 0x2c
   13b74:	str	r5, [sp, #48]	; 0x30
   13b78:	bl	13420 <__snprintf_chk@plt+0x2520>
   13b7c:	ldr	r2, [sp, #52]	; 0x34
   13b80:	ldr	r3, [r4]
   13b84:	cmp	r2, r3
   13b88:	bne	13b94 <__snprintf_chk@plt+0x2c94>
   13b8c:	add	sp, sp, #60	; 0x3c
   13b90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13b94:	bl	10d38 <__stack_chk_fail@plt>
   13b98:	bl	10edc <abort@plt>
   13b9c:	andeq	r8, r2, r8, asr r2
   13ba0:	andeq	r7, r2, r8, lsl #30
   13ba4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ba8:	sub	sp, sp, #12
   13bac:	mvn	ip, #0
   13bb0:	str	ip, [sp]
   13bb4:	bl	13b08 <__snprintf_chk@plt+0x2c08>
   13bb8:	add	sp, sp, #12
   13bbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13bc0:	push	{lr}		; (str lr, [sp, #-4]!)
   13bc4:	sub	sp, sp, #12
   13bc8:	mvn	ip, #0
   13bcc:	mov	r3, r2
   13bd0:	str	ip, [sp]
   13bd4:	mov	r2, r1
   13bd8:	mov	r1, r0
   13bdc:	mov	r0, #0
   13be0:	bl	13b08 <__snprintf_chk@plt+0x2c08>
   13be4:	add	sp, sp, #12
   13be8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bec:	push	{lr}		; (str lr, [sp, #-4]!)
   13bf0:	sub	sp, sp, #12
   13bf4:	str	r3, [sp]
   13bf8:	mov	r3, r2
   13bfc:	mov	r2, r1
   13c00:	mov	r1, r0
   13c04:	mov	r0, #0
   13c08:	bl	13b08 <__snprintf_chk@plt+0x2c08>
   13c0c:	add	sp, sp, #12
   13c10:	pop	{pc}		; (ldr pc, [sp], #4)
   13c14:	ldr	r3, [pc]	; 13c1c <__snprintf_chk@plt+0x2d1c>
   13c18:	b	13420 <__snprintf_chk@plt+0x2520>
   13c1c:	andeq	r8, r2, r0, lsl #2
   13c20:	mov	r2, r1
   13c24:	ldr	r3, [pc, #8]	; 13c34 <__snprintf_chk@plt+0x2d34>
   13c28:	mov	r1, r0
   13c2c:	mov	r0, #0
   13c30:	b	13420 <__snprintf_chk@plt+0x2520>
   13c34:	andeq	r8, r2, r0, lsl #2
   13c38:	ldr	r3, [pc, #4]	; 13c44 <__snprintf_chk@plt+0x2d44>
   13c3c:	mvn	r2, #0
   13c40:	b	13420 <__snprintf_chk@plt+0x2520>
   13c44:	andeq	r8, r2, r0, lsl #2
   13c48:	mov	r1, r0
   13c4c:	ldr	r3, [pc, #8]	; 13c5c <__snprintf_chk@plt+0x2d5c>
   13c50:	mvn	r2, #0
   13c54:	mov	r0, #0
   13c58:	b	13420 <__snprintf_chk@plt+0x2520>
   13c5c:	andeq	r8, r2, r0, lsl #2
   13c60:	push	{r4, r5, r6, lr}
   13c64:	sub	sp, sp, #32
   13c68:	cmp	r1, #0
   13c6c:	mov	r5, r0
   13c70:	ldr	r4, [sp, #48]	; 0x30
   13c74:	ldr	r6, [sp, #52]	; 0x34
   13c78:	beq	13d08 <__snprintf_chk@plt+0x2e08>
   13c7c:	strd	r2, [sp]
   13c80:	mov	r3, r1
   13c84:	ldr	r2, [pc, #828]	; 13fc8 <__snprintf_chk@plt+0x30c8>
   13c88:	mov	r1, #1
   13c8c:	bl	10e58 <__fprintf_chk@plt>
   13c90:	mov	r2, #5
   13c94:	ldr	r1, [pc, #816]	; 13fcc <__snprintf_chk@plt+0x30cc>
   13c98:	mov	r0, #0
   13c9c:	bl	10d2c <dcgettext@plt>
   13ca0:	ldr	r3, [pc, #808]	; 13fd0 <__snprintf_chk@plt+0x30d0>
   13ca4:	ldr	r2, [pc, #808]	; 13fd4 <__snprintf_chk@plt+0x30d4>
   13ca8:	str	r3, [sp]
   13cac:	mov	r1, #1
   13cb0:	mov	r3, r0
   13cb4:	mov	r0, r5
   13cb8:	bl	10e58 <__fprintf_chk@plt>
   13cbc:	ldr	r1, [pc, #788]	; 13fd8 <__snprintf_chk@plt+0x30d8>
   13cc0:	mov	r2, #5
   13cc4:	mov	r0, #0
   13cc8:	bl	10d2c <dcgettext@plt>
   13ccc:	mov	r1, r5
   13cd0:	bl	10ca8 <fputs_unlocked@plt>
   13cd4:	cmp	r6, #9
   13cd8:	ldrls	pc, [pc, r6, lsl #2]
   13cdc:	b	13fb8 <__snprintf_chk@plt+0x30b8>
   13ce0:	andeq	r3, r1, r4, asr #31
   13ce4:	andeq	r3, r1, ip, lsl #27
   13ce8:			; <UNDEFINED> instruction: 0x00013db8
   13cec:	andeq	r3, r1, ip, ror #27
   13cf0:	andeq	r3, r1, r8, lsr #28
   13cf4:	andeq	r3, r1, r8, ror #28
   13cf8:			; <UNDEFINED> instruction: 0x00013eb0
   13cfc:	andeq	r3, r1, r0, lsl #30
   13d00:	andeq	r3, r1, r8, asr pc
   13d04:	andeq	r3, r1, r0, lsr #26
   13d08:	str	r3, [sp]
   13d0c:	mov	r1, #1
   13d10:	mov	r3, r2
   13d14:	ldr	r2, [pc, #704]	; 13fdc <__snprintf_chk@plt+0x30dc>
   13d18:	bl	10e58 <__fprintf_chk@plt>
   13d1c:	b	13c90 <__snprintf_chk@plt+0x2d90>
   13d20:	ldr	r1, [pc, #696]	; 13fe0 <__snprintf_chk@plt+0x30e0>
   13d24:	mov	r2, #5
   13d28:	mov	r0, #0
   13d2c:	bl	10d2c <dcgettext@plt>
   13d30:	ldr	r2, [r4, #32]
   13d34:	ldr	r3, [r4, #28]
   13d38:	ldr	r1, [r4, #24]
   13d3c:	str	r2, [sp, #28]
   13d40:	ldr	r2, [r4, #20]
   13d44:	str	r3, [sp, #24]
   13d48:	ldr	r3, [r4, #16]
   13d4c:	str	r1, [sp, #20]
   13d50:	ldr	r1, [r4, #12]
   13d54:	str	r2, [sp, #16]
   13d58:	ldr	r2, [r4, #8]
   13d5c:	str	r3, [sp, #12]
   13d60:	ldr	r3, [r4, #4]
   13d64:	str	r1, [sp, #8]
   13d68:	str	r2, [sp, #4]
   13d6c:	str	r3, [sp]
   13d70:	mov	r1, #1
   13d74:	ldr	r3, [r4]
   13d78:	mov	r2, r0
   13d7c:	mov	r0, r5
   13d80:	bl	10e58 <__fprintf_chk@plt>
   13d84:	add	sp, sp, #32
   13d88:	pop	{r4, r5, r6, pc}
   13d8c:	mov	r2, #5
   13d90:	ldr	r1, [pc, #588]	; 13fe4 <__snprintf_chk@plt+0x30e4>
   13d94:	mov	r0, #0
   13d98:	bl	10d2c <dcgettext@plt>
   13d9c:	ldr	r3, [r4]
   13da0:	mov	r1, #1
   13da4:	mov	r2, r0
   13da8:	mov	r0, r5
   13dac:	add	sp, sp, #32
   13db0:	pop	{r4, r5, r6, lr}
   13db4:	b	10e58 <__fprintf_chk@plt>
   13db8:	mov	r2, #5
   13dbc:	ldr	r1, [pc, #548]	; 13fe8 <__snprintf_chk@plt+0x30e8>
   13dc0:	mov	r0, #0
   13dc4:	bl	10d2c <dcgettext@plt>
   13dc8:	ldr	r2, [r4, #4]
   13dcc:	ldr	r3, [r4]
   13dd0:	mov	r1, #1
   13dd4:	str	r2, [sp, #48]	; 0x30
   13dd8:	mov	r2, r0
   13ddc:	mov	r0, r5
   13de0:	add	sp, sp, #32
   13de4:	pop	{r4, r5, r6, lr}
   13de8:	b	10e58 <__fprintf_chk@plt>
   13dec:	mov	r2, #5
   13df0:	ldr	r1, [pc, #500]	; 13fec <__snprintf_chk@plt+0x30ec>
   13df4:	mov	r0, #0
   13df8:	bl	10d2c <dcgettext@plt>
   13dfc:	ldr	r2, [r4, #8]
   13e00:	ldr	r3, [r4, #4]
   13e04:	mov	r1, #1
   13e08:	str	r2, [sp, #52]	; 0x34
   13e0c:	str	r3, [sp, #48]	; 0x30
   13e10:	ldr	r3, [r4]
   13e14:	mov	r2, r0
   13e18:	mov	r0, r5
   13e1c:	add	sp, sp, #32
   13e20:	pop	{r4, r5, r6, lr}
   13e24:	b	10e58 <__fprintf_chk@plt>
   13e28:	mov	r2, #5
   13e2c:	ldr	r1, [pc, #444]	; 13ff0 <__snprintf_chk@plt+0x30f0>
   13e30:	mov	r0, #0
   13e34:	bl	10d2c <dcgettext@plt>
   13e38:	ldr	r1, [r4, #12]
   13e3c:	ldr	r2, [r4, #8]
   13e40:	ldr	r3, [r4, #4]
   13e44:	str	r1, [sp, #8]
   13e48:	str	r2, [sp, #4]
   13e4c:	str	r3, [sp]
   13e50:	mov	r1, #1
   13e54:	ldr	r3, [r4]
   13e58:	mov	r2, r0
   13e5c:	mov	r0, r5
   13e60:	bl	10e58 <__fprintf_chk@plt>
   13e64:	b	13d84 <__snprintf_chk@plt+0x2e84>
   13e68:	mov	r2, #5
   13e6c:	ldr	r1, [pc, #384]	; 13ff4 <__snprintf_chk@plt+0x30f4>
   13e70:	mov	r0, #0
   13e74:	bl	10d2c <dcgettext@plt>
   13e78:	ldr	r3, [r4, #16]
   13e7c:	ldr	r1, [r4, #12]
   13e80:	ldr	r2, [r4, #8]
   13e84:	str	r3, [sp, #12]
   13e88:	ldr	r3, [r4, #4]
   13e8c:	str	r1, [sp, #8]
   13e90:	str	r2, [sp, #4]
   13e94:	str	r3, [sp]
   13e98:	mov	r1, #1
   13e9c:	ldr	r3, [r4]
   13ea0:	mov	r2, r0
   13ea4:	mov	r0, r5
   13ea8:	bl	10e58 <__fprintf_chk@plt>
   13eac:	b	13d84 <__snprintf_chk@plt+0x2e84>
   13eb0:	mov	r2, #5
   13eb4:	ldr	r1, [pc, #316]	; 13ff8 <__snprintf_chk@plt+0x30f8>
   13eb8:	mov	r0, #0
   13ebc:	bl	10d2c <dcgettext@plt>
   13ec0:	ldr	r2, [r4, #20]
   13ec4:	ldr	r3, [r4, #16]
   13ec8:	ldr	r1, [r4, #12]
   13ecc:	str	r2, [sp, #16]
   13ed0:	ldr	r2, [r4, #8]
   13ed4:	str	r3, [sp, #12]
   13ed8:	ldr	r3, [r4, #4]
   13edc:	str	r1, [sp, #8]
   13ee0:	str	r2, [sp, #4]
   13ee4:	str	r3, [sp]
   13ee8:	mov	r1, #1
   13eec:	ldr	r3, [r4]
   13ef0:	mov	r2, r0
   13ef4:	mov	r0, r5
   13ef8:	bl	10e58 <__fprintf_chk@plt>
   13efc:	b	13d84 <__snprintf_chk@plt+0x2e84>
   13f00:	mov	r2, #5
   13f04:	ldr	r1, [pc, #240]	; 13ffc <__snprintf_chk@plt+0x30fc>
   13f08:	mov	r0, #0
   13f0c:	bl	10d2c <dcgettext@plt>
   13f10:	ldr	r1, [r4, #24]
   13f14:	ldr	r2, [r4, #20]
   13f18:	ldr	r3, [r4, #16]
   13f1c:	str	r1, [sp, #20]
   13f20:	ldr	r1, [r4, #12]
   13f24:	str	r2, [sp, #16]
   13f28:	ldr	r2, [r4, #8]
   13f2c:	str	r3, [sp, #12]
   13f30:	ldr	r3, [r4, #4]
   13f34:	str	r1, [sp, #8]
   13f38:	str	r2, [sp, #4]
   13f3c:	str	r3, [sp]
   13f40:	mov	r1, #1
   13f44:	ldr	r3, [r4]
   13f48:	mov	r2, r0
   13f4c:	mov	r0, r5
   13f50:	bl	10e58 <__fprintf_chk@plt>
   13f54:	b	13d84 <__snprintf_chk@plt+0x2e84>
   13f58:	mov	r2, #5
   13f5c:	ldr	r1, [pc, #156]	; 14000 <__snprintf_chk@plt+0x3100>
   13f60:	mov	r0, #0
   13f64:	bl	10d2c <dcgettext@plt>
   13f68:	ldr	r3, [r4, #28]
   13f6c:	ldr	r1, [r4, #24]
   13f70:	ldr	r2, [r4, #20]
   13f74:	str	r3, [sp, #24]
   13f78:	ldr	r3, [r4, #16]
   13f7c:	str	r1, [sp, #20]
   13f80:	ldr	r1, [r4, #12]
   13f84:	str	r2, [sp, #16]
   13f88:	ldr	r2, [r4, #8]
   13f8c:	str	r3, [sp, #12]
   13f90:	ldr	r3, [r4, #4]
   13f94:	str	r1, [sp, #8]
   13f98:	str	r2, [sp, #4]
   13f9c:	str	r3, [sp]
   13fa0:	mov	r1, #1
   13fa4:	ldr	r3, [r4]
   13fa8:	mov	r2, r0
   13fac:	mov	r0, r5
   13fb0:	bl	10e58 <__fprintf_chk@plt>
   13fb4:	b	13d84 <__snprintf_chk@plt+0x2e84>
   13fb8:	mov	r2, #5
   13fbc:	ldr	r1, [pc, #64]	; 14004 <__snprintf_chk@plt+0x3104>
   13fc0:	b	13d28 <__snprintf_chk@plt+0x2e28>
   13fc4:	bl	10edc <abort@plt>
   13fc8:	strdeq	r6, [r1], -r0
   13fcc:	andeq	r6, r1, r4, lsl #28
   13fd0:	andeq	r0, r0, r2, ror #15
   13fd4:	ldrdeq	r7, [r1], -r8
   13fd8:	andeq	r6, r1, r8, lsl #28
   13fdc:	strdeq	r6, [r1], -ip
   13fe0:	andeq	r6, r1, r0, ror #31
   13fe4:	ldrdeq	r6, [r1], -r4
   13fe8:	andeq	r6, r1, r4, ror #29
   13fec:	strdeq	r6, [r1], -ip
   13ff0:	andeq	r6, r1, r8, lsl pc
   13ff4:	andeq	r6, r1, r8, lsr pc
   13ff8:	andeq	r6, r1, ip, asr pc
   13ffc:	andeq	r6, r1, r4, lsl #31
   14000:			; <UNDEFINED> instruction: 0x00016fb0
   14004:	andeq	r7, r1, r4, lsl r0
   14008:	push	{r4, r5, lr}
   1400c:	sub	sp, sp, #12
   14010:	ldr	r5, [sp, #24]
   14014:	ldr	ip, [r5]
   14018:	cmp	ip, #0
   1401c:	beq	14038 <__snprintf_chk@plt+0x3138>
   14020:	mov	lr, r5
   14024:	mov	ip, #0
   14028:	ldr	r4, [lr, #4]!
   1402c:	add	ip, ip, #1
   14030:	cmp	r4, #0
   14034:	bne	14028 <__snprintf_chk@plt+0x3128>
   14038:	stm	sp, {r5, ip}
   1403c:	bl	13c60 <__snprintf_chk@plt+0x2d60>
   14040:	add	sp, sp, #12
   14044:	pop	{r4, r5, pc}
   14048:	push	{r4, r5, r6, lr}
   1404c:	sub	sp, sp, #56	; 0x38
   14050:	ldr	r6, [pc, #88]	; 140b0 <__snprintf_chk@plt+0x31b0>
   14054:	ldr	r5, [sp, #72]	; 0x48
   14058:	add	r4, sp, #8
   1405c:	ldr	ip, [r6]
   14060:	str	ip, [sp, #52]	; 0x34
   14064:	mov	ip, #0
   14068:	ldr	lr, [r5], #4
   1406c:	cmp	lr, #0
   14070:	str	lr, [r4, #4]!
   14074:	beq	14084 <__snprintf_chk@plt+0x3184>
   14078:	add	ip, ip, #1
   1407c:	cmp	ip, #10
   14080:	bne	14068 <__snprintf_chk@plt+0x3168>
   14084:	add	lr, sp, #12
   14088:	str	ip, [sp, #4]
   1408c:	str	lr, [sp]
   14090:	bl	13c60 <__snprintf_chk@plt+0x2d60>
   14094:	ldr	r2, [sp, #52]	; 0x34
   14098:	ldr	r3, [r6]
   1409c:	cmp	r2, r3
   140a0:	bne	140ac <__snprintf_chk@plt+0x31ac>
   140a4:	add	sp, sp, #56	; 0x38
   140a8:	pop	{r4, r5, r6, pc}
   140ac:	bl	10d38 <__stack_chk_fail@plt>
   140b0:	andeq	r7, r2, r8, lsl #30
   140b4:	push	{r3}		; (str r3, [sp, #-4]!)
   140b8:	mov	ip, #0
   140bc:	push	{r4, r5, r6, lr}
   140c0:	sub	sp, sp, #60	; 0x3c
   140c4:	ldr	r6, [pc, #100]	; 14130 <__snprintf_chk@plt+0x3230>
   140c8:	add	r5, sp, #8
   140cc:	add	r4, sp, #80	; 0x50
   140d0:	ldr	r3, [r6]
   140d4:	str	r4, [sp, #8]
   140d8:	str	r3, [sp, #52]	; 0x34
   140dc:	ldr	r3, [sp, #76]	; 0x4c
   140e0:	ldr	lr, [r4], #4
   140e4:	cmp	lr, #0
   140e8:	str	lr, [r5, #4]!
   140ec:	beq	140fc <__snprintf_chk@plt+0x31fc>
   140f0:	add	ip, ip, #1
   140f4:	cmp	ip, #10
   140f8:	bne	140e0 <__snprintf_chk@plt+0x31e0>
   140fc:	add	lr, sp, #12
   14100:	str	ip, [sp, #4]
   14104:	str	lr, [sp]
   14108:	bl	13c60 <__snprintf_chk@plt+0x2d60>
   1410c:	ldr	r2, [sp, #52]	; 0x34
   14110:	ldr	r3, [r6]
   14114:	cmp	r2, r3
   14118:	bne	1412c <__snprintf_chk@plt+0x322c>
   1411c:	add	sp, sp, #60	; 0x3c
   14120:	pop	{r4, r5, r6, lr}
   14124:	add	sp, sp, #4
   14128:	bx	lr
   1412c:	bl	10d38 <__stack_chk_fail@plt>
   14130:	andeq	r7, r2, r8, lsl #30
   14134:	push	{r4, lr}
   14138:	mov	r2, #5
   1413c:	ldr	r1, [pc, #88]	; 1419c <__snprintf_chk@plt+0x329c>
   14140:	mov	r0, #0
   14144:	bl	10d2c <dcgettext@plt>
   14148:	ldr	r2, [pc, #80]	; 141a0 <__snprintf_chk@plt+0x32a0>
   1414c:	mov	r1, r0
   14150:	mov	r0, #1
   14154:	bl	10e40 <__printf_chk@plt>
   14158:	mov	r2, #5
   1415c:	ldr	r1, [pc, #64]	; 141a4 <__snprintf_chk@plt+0x32a4>
   14160:	mov	r0, #0
   14164:	bl	10d2c <dcgettext@plt>
   14168:	ldr	r3, [pc, #56]	; 141a8 <__snprintf_chk@plt+0x32a8>
   1416c:	ldr	r2, [pc, #56]	; 141ac <__snprintf_chk@plt+0x32ac>
   14170:	mov	r1, r0
   14174:	mov	r0, #1
   14178:	bl	10e40 <__printf_chk@plt>
   1417c:	ldr	r1, [pc, #44]	; 141b0 <__snprintf_chk@plt+0x32b0>
   14180:	mov	r2, #5
   14184:	mov	r0, #0
   14188:	bl	10d2c <dcgettext@plt>
   1418c:	ldr	r3, [pc, #32]	; 141b4 <__snprintf_chk@plt+0x32b4>
   14190:	pop	{r4, lr}
   14194:	ldr	r1, [r3]
   14198:	b	10ca8 <fputs_unlocked@plt>
   1419c:	andeq	r7, r1, r0, asr r0
   141a0:	andeq	r7, r1, r8, rrx
   141a4:	andeq	r7, r1, r0, lsl #1
   141a8:	andeq	r6, r1, r8, lsr #21
   141ac:	ldrdeq	r6, [r1], -r0
   141b0:	muleq	r1, r4, r0
   141b4:	andeq	r8, r2, r4, asr #2
   141b8:	push	{r4, lr}
   141bc:	mov	r4, r0
   141c0:	bl	10db0 <malloc@plt>
   141c4:	adds	r4, r4, #0
   141c8:	movne	r4, #1
   141cc:	cmp	r0, #0
   141d0:	movne	r4, #0
   141d4:	cmp	r4, #0
   141d8:	popeq	{r4, pc}
   141dc:	bl	14400 <__snprintf_chk@plt+0x3500>
   141e0:	push	{r4, r5, r6, lr}
   141e4:	umull	r4, r5, r0, r1
   141e8:	adds	r3, r5, #0
   141ec:	movne	r3, #1
   141f0:	cmp	r4, #0
   141f4:	blt	1420c <__snprintf_chk@plt+0x330c>
   141f8:	cmp	r3, #0
   141fc:	bne	1420c <__snprintf_chk@plt+0x330c>
   14200:	mul	r0, r1, r0
   14204:	pop	{r4, r5, r6, lr}
   14208:	b	141b8 <__snprintf_chk@plt+0x32b8>
   1420c:	bl	14400 <__snprintf_chk@plt+0x3500>
   14210:	b	141b8 <__snprintf_chk@plt+0x32b8>
   14214:	adds	r3, r0, #0
   14218:	movne	r3, #1
   1421c:	cmp	r1, #0
   14220:	movne	r3, #0
   14224:	cmp	r3, #0
   14228:	push	{r4, lr}
   1422c:	bne	14254 <__snprintf_chk@plt+0x3354>
   14230:	mov	r4, r1
   14234:	bl	10d44 <realloc@plt>
   14238:	adds	r4, r4, #0
   1423c:	movne	r4, #1
   14240:	cmp	r0, #0
   14244:	movne	r4, #0
   14248:	cmp	r4, #0
   1424c:	popeq	{r4, pc}
   14250:	bl	14400 <__snprintf_chk@plt+0x3500>
   14254:	bl	10cd8 <free@plt>
   14258:	mov	r0, #0
   1425c:	pop	{r4, pc}
   14260:	push	{r4, r5, r6, lr}
   14264:	umull	r4, r5, r1, r2
   14268:	adds	r3, r5, #0
   1426c:	movne	r3, #1
   14270:	cmp	r4, #0
   14274:	blt	1428c <__snprintf_chk@plt+0x338c>
   14278:	cmp	r3, #0
   1427c:	bne	1428c <__snprintf_chk@plt+0x338c>
   14280:	mul	r1, r2, r1
   14284:	pop	{r4, r5, r6, lr}
   14288:	b	14214 <__snprintf_chk@plt+0x3314>
   1428c:	bl	14400 <__snprintf_chk@plt+0x3500>
   14290:	push	{r4, r5, r6, r7, r8, lr}
   14294:	subs	r7, r0, #0
   14298:	mov	r6, r1
   1429c:	mov	r5, r2
   142a0:	ldr	r4, [r1]
   142a4:	beq	142d8 <__snprintf_chk@plt+0x33d8>
   142a8:	mov	r1, r2
   142ac:	ldr	r0, [pc, #104]	; 1431c <__snprintf_chk@plt+0x341c>
   142b0:	bl	16504 <__snprintf_chk@plt+0x5604>
   142b4:	cmp	r0, r4
   142b8:	bls	142fc <__snprintf_chk@plt+0x33fc>
   142bc:	add	r3, r4, #1
   142c0:	add	r4, r3, r4, lsr #1
   142c4:	str	r4, [r6]
   142c8:	mul	r1, r5, r4
   142cc:	mov	r0, r7
   142d0:	pop	{r4, r5, r6, r7, r8, lr}
   142d4:	b	14214 <__snprintf_chk@plt+0x3314>
   142d8:	cmp	r4, #0
   142dc:	beq	14300 <__snprintf_chk@plt+0x3400>
   142e0:	umull	r0, r1, r4, r5
   142e4:	adds	r3, r1, #0
   142e8:	movne	r3, #1
   142ec:	cmp	r0, #0
   142f0:	blt	142fc <__snprintf_chk@plt+0x33fc>
   142f4:	cmp	r3, #0
   142f8:	beq	142c4 <__snprintf_chk@plt+0x33c4>
   142fc:	bl	14400 <__snprintf_chk@plt+0x3500>
   14300:	mov	r1, r2
   14304:	mov	r0, #64	; 0x40
   14308:	bl	16504 <__snprintf_chk@plt+0x5604>
   1430c:	cmp	r5, #64	; 0x40
   14310:	movls	r4, r0
   14314:	addhi	r4, r0, #1
   14318:	b	142e0 <__snprintf_chk@plt+0x33e0>
   1431c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14320:	cmp	r0, #0
   14324:	ldr	r3, [r1]
   14328:	beq	1434c <__snprintf_chk@plt+0x344c>
   1432c:	ldr	r2, [pc, #60]	; 14370 <__snprintf_chk@plt+0x3470>
   14330:	cmp	r3, r2
   14334:	bhi	14368 <__snprintf_chk@plt+0x3468>
   14338:	add	r2, r3, #1
   1433c:	add	r3, r2, r3, lsr #1
   14340:	str	r3, [r1]
   14344:	mov	r1, r3
   14348:	b	14214 <__snprintf_chk@plt+0x3314>
   1434c:	cmp	r3, #0
   14350:	bne	14364 <__snprintf_chk@plt+0x3464>
   14354:	mov	r3, #64	; 0x40
   14358:	str	r3, [r1]
   1435c:	mov	r1, r3
   14360:	b	14214 <__snprintf_chk@plt+0x3314>
   14364:	bge	14340 <__snprintf_chk@plt+0x3440>
   14368:	push	{r4, lr}
   1436c:	bl	14400 <__snprintf_chk@plt+0x3500>
   14370:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14374:	push	{r4, lr}
   14378:	mov	r4, r0
   1437c:	bl	141b8 <__snprintf_chk@plt+0x32b8>
   14380:	mov	r2, r4
   14384:	mov	r1, #0
   14388:	pop	{r4, lr}
   1438c:	b	10e34 <memset@plt>
   14390:	push	{r4, r5, r6, lr}
   14394:	umull	r4, r5, r0, r1
   14398:	adds	r3, r5, #0
   1439c:	movne	r3, #1
   143a0:	cmp	r4, #0
   143a4:	blt	143bc <__snprintf_chk@plt+0x34bc>
   143a8:	cmp	r3, #0
   143ac:	bne	143bc <__snprintf_chk@plt+0x34bc>
   143b0:	bl	10c9c <calloc@plt>
   143b4:	cmp	r0, #0
   143b8:	popne	{r4, r5, r6, pc}
   143bc:	bl	14400 <__snprintf_chk@plt+0x3500>
   143c0:	push	{r4, r5, r6, lr}
   143c4:	mov	r4, r1
   143c8:	mov	r5, r0
   143cc:	mov	r0, r1
   143d0:	bl	141b8 <__snprintf_chk@plt+0x32b8>
   143d4:	mov	r2, r4
   143d8:	mov	r1, r5
   143dc:	pop	{r4, r5, r6, lr}
   143e0:	b	10cf0 <memcpy@plt>
   143e4:	push	{r4, lr}
   143e8:	mov	r4, r0
   143ec:	bl	10e04 <strlen@plt>
   143f0:	add	r1, r0, #1
   143f4:	mov	r0, r4
   143f8:	pop	{r4, lr}
   143fc:	b	143c0 <__snprintf_chk@plt+0x34c0>
   14400:	ldr	r3, [pc, #44]	; 14434 <__snprintf_chk@plt+0x3534>
   14404:	push	{r4, lr}
   14408:	mov	r2, #5
   1440c:	ldr	r1, [pc, #36]	; 14438 <__snprintf_chk@plt+0x3538>
   14410:	mov	r0, #0
   14414:	ldr	r4, [r3]
   14418:	bl	10d2c <dcgettext@plt>
   1441c:	ldr	r2, [pc, #24]	; 1443c <__snprintf_chk@plt+0x353c>
   14420:	mov	r1, #0
   14424:	mov	r3, r0
   14428:	mov	r0, r4
   1442c:	bl	10da4 <error@plt>
   14430:	bl	10edc <abort@plt>
   14434:	andeq	r8, r2, ip, ror #1
   14438:	andeq	r7, r1, r8, lsl #2
   1443c:	andeq	r6, r1, ip, asr #23
   14440:	push	{r4, r5, r6, r7, r8, lr}
   14444:	subs	r7, r0, #0
   14448:	ldr	r5, [pc, #108]	; 144bc <__snprintf_chk@plt+0x35bc>
   1444c:	sub	sp, sp, #8
   14450:	mov	r8, r1
   14454:	ldr	r1, [r5]
   14458:	moveq	r7, sp
   1445c:	str	r1, [sp, #4]
   14460:	mov	r0, r7
   14464:	mov	r1, r8
   14468:	mov	r6, r2
   1446c:	bl	10d98 <mbrtowc@plt>
   14470:	cmp	r6, #0
   14474:	cmnne	r0, #3
   14478:	mov	r4, r0
   1447c:	bhi	1449c <__snprintf_chk@plt+0x359c>
   14480:	ldr	r2, [sp, #4]
   14484:	ldr	r3, [r5]
   14488:	mov	r0, r4
   1448c:	cmp	r2, r3
   14490:	bne	144b8 <__snprintf_chk@plt+0x35b8>
   14494:	add	sp, sp, #8
   14498:	pop	{r4, r5, r6, r7, r8, pc}
   1449c:	mov	r0, #0
   144a0:	bl	146b8 <__snprintf_chk@plt+0x37b8>
   144a4:	cmp	r0, #0
   144a8:	moveq	r4, #1
   144ac:	ldrbeq	r3, [r8]
   144b0:	streq	r3, [r7]
   144b4:	b	14480 <__snprintf_chk@plt+0x3580>
   144b8:	bl	10d38 <__stack_chk_fail@plt>
   144bc:	andeq	r7, r2, r8, lsl #30
   144c0:	push	{r4, r5, r6, r7, r8, lr}
   144c4:	sub	sp, sp, #2000	; 0x7d0
   144c8:	ldr	r5, [pc, #208]	; 145a0 <__snprintf_chk@plt+0x36a0>
   144cc:	sub	sp, sp, #8
   144d0:	add	r6, sp, #4
   144d4:	ldr	lr, [r5]
   144d8:	mov	r3, r2
   144dc:	mov	ip, #2000	; 0x7d0
   144e0:	mov	r2, r1
   144e4:	mov	r8, r0
   144e8:	mov	r1, sp
   144ec:	mov	r0, r6
   144f0:	str	lr, [sp, #2004]	; 0x7d4
   144f4:	str	ip, [sp]
   144f8:	bl	148e8 <__snprintf_chk@plt+0x39e8>
   144fc:	ldr	r4, [sp]
   14500:	subs	r7, r0, #0
   14504:	beq	1458c <__snprintf_chk@plt+0x368c>
   14508:	mov	r3, r8
   1450c:	mov	r2, r4
   14510:	mov	r1, #1
   14514:	bl	10d68 <fwrite@plt>
   14518:	cmp	r0, r4
   1451c:	bcc	14554 <__snprintf_chk@plt+0x3654>
   14520:	cmp	r7, r6
   14524:	beq	14530 <__snprintf_chk@plt+0x3630>
   14528:	mov	r0, r7
   1452c:	bl	10cd8 <free@plt>
   14530:	subs	r0, r4, #0
   14534:	blt	14580 <__snprintf_chk@plt+0x3680>
   14538:	ldr	r2, [sp, #2004]	; 0x7d4
   1453c:	ldr	r3, [r5]
   14540:	cmp	r2, r3
   14544:	bne	1459c <__snprintf_chk@plt+0x369c>
   14548:	add	sp, sp, #2000	; 0x7d0
   1454c:	add	sp, sp, #8
   14550:	pop	{r4, r5, r6, r7, r8, pc}
   14554:	cmp	r7, r6
   14558:	mvneq	r0, #0
   1455c:	beq	14538 <__snprintf_chk@plt+0x3638>
   14560:	bl	10e1c <__errno_location@plt>
   14564:	mov	r4, r0
   14568:	mov	r0, r7
   1456c:	ldr	r6, [r4]
   14570:	bl	10cd8 <free@plt>
   14574:	str	r6, [r4]
   14578:	mvn	r0, #0
   1457c:	b	14538 <__snprintf_chk@plt+0x3638>
   14580:	bl	10e1c <__errno_location@plt>
   14584:	mov	r3, #75	; 0x4b
   14588:	str	r3, [r0]
   1458c:	mov	r0, r8
   14590:	bl	148d8 <__snprintf_chk@plt+0x39d8>
   14594:	mvn	r0, #0
   14598:	b	14538 <__snprintf_chk@plt+0x3638>
   1459c:	bl	10d38 <__stack_chk_fail@plt>
   145a0:	andeq	r7, r2, r8, lsl #30
   145a4:	push	{r4, r5, r6, lr}
   145a8:	mov	r4, r0
   145ac:	bl	10d8c <__fpending@plt>
   145b0:	ldr	r5, [r4]
   145b4:	and	r5, r5, #32
   145b8:	mov	r6, r0
   145bc:	mov	r0, r4
   145c0:	bl	14738 <__snprintf_chk@plt+0x3838>
   145c4:	cmp	r5, #0
   145c8:	mov	r4, r0
   145cc:	bne	145f8 <__snprintf_chk@plt+0x36f8>
   145d0:	cmp	r0, #0
   145d4:	beq	145f0 <__snprintf_chk@plt+0x36f0>
   145d8:	cmp	r6, #0
   145dc:	bne	14610 <__snprintf_chk@plt+0x3710>
   145e0:	bl	10e1c <__errno_location@plt>
   145e4:	ldr	r4, [r0]
   145e8:	subs	r4, r4, #9
   145ec:	mvnne	r4, #0
   145f0:	mov	r0, r4
   145f4:	pop	{r4, r5, r6, pc}
   145f8:	cmp	r0, #0
   145fc:	bne	14610 <__snprintf_chk@plt+0x3710>
   14600:	bl	10e1c <__errno_location@plt>
   14604:	str	r4, [r0]
   14608:	mvn	r4, #0
   1460c:	b	145f0 <__snprintf_chk@plt+0x36f0>
   14610:	mvn	r4, #0
   14614:	b	145f0 <__snprintf_chk@plt+0x36f0>
   14618:	ldrb	r3, [r0]
   1461c:	cmp	r3, #47	; 0x2f
   14620:	bne	14630 <__snprintf_chk@plt+0x3730>
   14624:	ldrb	r3, [r0, #1]!
   14628:	cmp	r3, #47	; 0x2f
   1462c:	beq	14624 <__snprintf_chk@plt+0x3724>
   14630:	cmp	r3, #0
   14634:	bxeq	lr
   14638:	mov	r2, r0
   1463c:	mov	r1, #0
   14640:	cmp	r3, #47	; 0x2f
   14644:	moveq	r1, #1
   14648:	beq	14658 <__snprintf_chk@plt+0x3758>
   1464c:	cmp	r1, #0
   14650:	movne	r0, r2
   14654:	movne	r1, #0
   14658:	ldrb	r3, [r2, #1]!
   1465c:	cmp	r3, #0
   14660:	bne	14640 <__snprintf_chk@plt+0x3740>
   14664:	bx	lr
   14668:	push	{r4, lr}
   1466c:	mov	r4, r0
   14670:	bl	10e04 <strlen@plt>
   14674:	cmp	r0, #1
   14678:	popls	{r4, pc}
   1467c:	add	r2, r4, r0
   14680:	mov	r3, r0
   14684:	ldrb	r2, [r2, #-1]
   14688:	cmp	r2, #47	; 0x2f
   1468c:	subeq	r3, r0, #2
   14690:	addeq	r3, r4, r3
   14694:	rsbeq	r1, r4, #1
   14698:	popne	{r4, pc}
   1469c:	cmp	r3, r4
   146a0:	add	r0, r1, r3
   146a4:	popeq	{r4, pc}
   146a8:	ldrb	r2, [r3], #-1
   146ac:	cmp	r2, #47	; 0x2f
   146b0:	popne	{r4, pc}
   146b4:	b	1469c <__snprintf_chk@plt+0x379c>
   146b8:	push	{r4, lr}
   146bc:	mov	r1, #0
   146c0:	bl	10e88 <setlocale@plt>
   146c4:	subs	r4, r0, #0
   146c8:	beq	146f4 <__snprintf_chk@plt+0x37f4>
   146cc:	ldr	r1, [pc, #40]	; 146fc <__snprintf_chk@plt+0x37fc>
   146d0:	bl	10cc0 <strcmp@plt>
   146d4:	cmp	r0, #0
   146d8:	popeq	{r4, pc}
   146dc:	mov	r0, r4
   146e0:	ldr	r1, [pc, #24]	; 14700 <__snprintf_chk@plt+0x3800>
   146e4:	bl	10cc0 <strcmp@plt>
   146e8:	adds	r0, r0, #0
   146ec:	movne	r0, #1
   146f0:	pop	{r4, pc}
   146f4:	mov	r0, #1
   146f8:	pop	{r4, pc}
   146fc:	andeq	r7, r1, ip, lsl r1
   14700:	andeq	r7, r1, r0, lsr #2
   14704:	push	{r4, lr}
   14708:	mov	r0, #14
   1470c:	bl	10ea0 <nl_langinfo@plt>
   14710:	cmp	r0, #0
   14714:	beq	1472c <__snprintf_chk@plt+0x382c>
   14718:	ldrb	r2, [r0]
   1471c:	ldr	r3, [pc, #16]	; 14734 <__snprintf_chk@plt+0x3834>
   14720:	cmp	r2, #0
   14724:	moveq	r0, r3
   14728:	pop	{r4, pc}
   1472c:	ldr	r0, [pc]	; 14734 <__snprintf_chk@plt+0x3834>
   14730:	pop	{r4, pc}
   14734:	andeq	r7, r1, r8, lsr #2
   14738:	push	{r4, r5, lr}
   1473c:	sub	sp, sp, #12
   14740:	mov	r4, r0
   14744:	bl	10e4c <fileno@plt>
   14748:	cmp	r0, #0
   1474c:	mov	r0, r4
   14750:	blt	147cc <__snprintf_chk@plt+0x38cc>
   14754:	bl	10dc8 <__freading@plt>
   14758:	cmp	r0, #0
   1475c:	bne	14798 <__snprintf_chk@plt+0x3898>
   14760:	mov	r0, r4
   14764:	bl	147d8 <__snprintf_chk@plt+0x38d8>
   14768:	cmp	r0, #0
   1476c:	beq	147c8 <__snprintf_chk@plt+0x38c8>
   14770:	bl	10e1c <__errno_location@plt>
   14774:	mov	r5, r0
   14778:	mov	r0, r4
   1477c:	ldr	r4, [r5]
   14780:	bl	10e64 <fclose@plt>
   14784:	cmp	r4, #0
   14788:	mvnne	r0, #0
   1478c:	strne	r4, [r5]
   14790:	add	sp, sp, #12
   14794:	pop	{r4, r5, pc}
   14798:	mov	r0, r4
   1479c:	bl	10e4c <fileno@plt>
   147a0:	mov	r3, #1
   147a4:	str	r3, [sp]
   147a8:	mov	r2, #0
   147ac:	mov	r3, #0
   147b0:	bl	10d74 <lseek64@plt>
   147b4:	mvn	r3, #0
   147b8:	mvn	r2, #0
   147bc:	cmp	r1, r3
   147c0:	cmpeq	r0, r2
   147c4:	bne	14760 <__snprintf_chk@plt+0x3860>
   147c8:	mov	r0, r4
   147cc:	add	sp, sp, #12
   147d0:	pop	{r4, r5, lr}
   147d4:	b	10e64 <fclose@plt>
   147d8:	push	{r4, lr}
   147dc:	subs	r4, r0, #0
   147e0:	sub	sp, sp, #8
   147e4:	beq	14800 <__snprintf_chk@plt+0x3900>
   147e8:	bl	10dc8 <__freading@plt>
   147ec:	cmp	r0, #0
   147f0:	beq	14800 <__snprintf_chk@plt+0x3900>
   147f4:	ldr	r3, [r4]
   147f8:	tst	r3, #256	; 0x100
   147fc:	bne	14810 <__snprintf_chk@plt+0x3910>
   14800:	mov	r0, r4
   14804:	add	sp, sp, #8
   14808:	pop	{r4, lr}
   1480c:	b	10ccc <fflush@plt>
   14810:	mov	r3, #1
   14814:	str	r3, [sp]
   14818:	mov	r2, #0
   1481c:	mov	r3, #0
   14820:	mov	r0, r4
   14824:	bl	14838 <__snprintf_chk@plt+0x3938>
   14828:	mov	r0, r4
   1482c:	add	sp, sp, #8
   14830:	pop	{r4, lr}
   14834:	b	10ccc <fflush@plt>
   14838:	push	{r4, r5, r6, r7, r8, lr}
   1483c:	sub	sp, sp, #8
   14840:	ldmib	r0, {ip, lr}
   14844:	mov	r4, r0
   14848:	ldr	r5, [sp, #32]
   1484c:	cmp	lr, ip
   14850:	beq	14868 <__snprintf_chk@plt+0x3968>
   14854:	str	r5, [sp, #32]
   14858:	mov	r0, r4
   1485c:	add	sp, sp, #8
   14860:	pop	{r4, r5, r6, r7, r8, lr}
   14864:	b	10e70 <fseeko64@plt>
   14868:	ldr	lr, [r0, #20]
   1486c:	ldr	ip, [r0, #16]
   14870:	cmp	lr, ip
   14874:	bne	14854 <__snprintf_chk@plt+0x3954>
   14878:	ldr	r8, [r0, #36]	; 0x24
   1487c:	cmp	r8, #0
   14880:	bne	14854 <__snprintf_chk@plt+0x3954>
   14884:	mov	r6, r2
   14888:	mov	r7, r3
   1488c:	bl	10e4c <fileno@plt>
   14890:	mov	r2, r6
   14894:	mov	r3, r7
   14898:	str	r5, [sp]
   1489c:	bl	10d74 <lseek64@plt>
   148a0:	mvn	r3, #0
   148a4:	mvn	r2, #0
   148a8:	cmp	r1, r3
   148ac:	cmpeq	r0, r2
   148b0:	beq	148d0 <__snprintf_chk@plt+0x39d0>
   148b4:	ldr	r3, [r4]
   148b8:	strd	r0, [r4, #80]	; 0x50
   148bc:	mov	r0, r8
   148c0:	bic	r3, r3, #16
   148c4:	str	r3, [r4]
   148c8:	add	sp, sp, #8
   148cc:	pop	{r4, r5, r6, r7, r8, pc}
   148d0:	mvn	r0, #0
   148d4:	b	148c8 <__snprintf_chk@plt+0x39c8>
   148d8:	ldr	r3, [r0]
   148dc:	orr	r3, r3, #32
   148e0:	str	r3, [r0]
   148e4:	bx	lr
   148e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148ec:	mov	r9, r2
   148f0:	ldr	r2, [pc, #3592]	; 15700 <__snprintf_chk@plt+0x4800>
   148f4:	add	fp, sp, #32
   148f8:	sub	sp, sp, #540	; 0x21c
   148fc:	ldr	ip, [r2]
   14900:	str	r0, [fp, #-504]	; 0xfffffe08
   14904:	str	r1, [fp, #-532]	; 0xfffffdec
   14908:	mov	r0, r9
   1490c:	sub	r2, fp, #484	; 0x1e4
   14910:	sub	r1, fp, #364	; 0x16c
   14914:	mov	r4, r3
   14918:	str	ip, [fp, #-40]	; 0xffffffd8
   1491c:	bl	15838 <__snprintf_chk@plt+0x4938>
   14920:	cmp	r0, #0
   14924:	blt	14efc <__snprintf_chk@plt+0x3ffc>
   14928:	sub	r1, fp, #484	; 0x1e4
   1492c:	mov	r0, r4
   14930:	bl	15704 <__snprintf_chk@plt+0x4804>
   14934:	cmp	r0, #0
   14938:	blt	154b8 <__snprintf_chk@plt+0x45b8>
   1493c:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   14940:	ldr	r3, [fp, #-352]	; 0xfffffea0
   14944:	adds	r2, r2, #7
   14948:	mvncs	r2, #0
   1494c:	adds	r3, r3, r2
   14950:	bcs	14ef0 <__snprintf_chk@plt+0x3ff0>
   14954:	mov	r0, #6
   14958:	adds	r0, r3, r0
   1495c:	bcs	14ef0 <__snprintf_chk@plt+0x3ff0>
   14960:	cmp	r0, #4000	; 0xfa0
   14964:	bcc	14b94 <__snprintf_chk@plt+0x3c94>
   14968:	cmn	r0, #1
   1496c:	beq	14ef0 <__snprintf_chk@plt+0x3ff0>
   14970:	bl	10db0 <malloc@plt>
   14974:	subs	r3, r0, #0
   14978:	str	r3, [fp, #-516]	; 0xfffffdfc
   1497c:	beq	14ef0 <__snprintf_chk@plt+0x3ff0>
   14980:	str	r3, [fp, #-536]	; 0xfffffde8
   14984:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14988:	ldr	sl, [fp, #-360]	; 0xfffffe98
   1498c:	cmp	r3, #0
   14990:	ldr	r5, [fp, #-504]	; 0xfffffe08
   14994:	ldrne	r3, [fp, #-532]	; 0xfffffdec
   14998:	ldreq	r6, [fp, #-504]	; 0xfffffe08
   1499c:	mov	r4, #0
   149a0:	ldrne	r6, [r3]
   149a4:	mov	r3, r5
   149a8:	ldr	r5, [sl]
   149ac:	str	r4, [fp, #-528]	; 0xfffffdf0
   149b0:	cmp	r5, r9
   149b4:	beq	14e0c <__snprintf_chk@plt+0x3f0c>
   149b8:	sub	r5, r5, r9
   149bc:	adds	r2, r4, r5
   149c0:	mov	r7, r2
   149c4:	bcs	14e14 <__snprintf_chk@plt+0x3f14>
   149c8:	cmp	r6, r2
   149cc:	bcs	14a40 <__snprintf_chk@plt+0x3b40>
   149d0:	cmp	r6, #0
   149d4:	bne	14f04 <__snprintf_chk@plt+0x4004>
   149d8:	cmp	r2, #12
   149dc:	movls	r6, #12
   149e0:	bhi	14f14 <__snprintf_chk@plt+0x4014>
   149e4:	ldr	r2, [fp, #-504]	; 0xfffffe08
   149e8:	cmp	r3, r2
   149ec:	cmpne	r3, #0
   149f0:	sub	r8, r3, r2
   149f4:	clz	r8, r8
   149f8:	lsr	r8, r8, #5
   149fc:	bne	14ea8 <__snprintf_chk@plt+0x3fa8>
   14a00:	mov	r0, r6
   14a04:	str	r3, [fp, #-508]	; 0xfffffe04
   14a08:	bl	10db0 <malloc@plt>
   14a0c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14a10:	subs	ip, r0, #0
   14a14:	beq	152cc <__snprintf_chk@plt+0x43cc>
   14a18:	cmp	r4, #0
   14a1c:	moveq	r8, #0
   14a20:	cmp	r8, #0
   14a24:	moveq	r3, ip
   14a28:	beq	14a40 <__snprintf_chk@plt+0x3b40>
   14a2c:	mov	r1, r3
   14a30:	mov	r2, r4
   14a34:	str	ip, [fp, #-508]	; 0xfffffe04
   14a38:	bl	10cf0 <memcpy@plt>
   14a3c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14a40:	add	r0, r3, r4
   14a44:	mov	r2, r5
   14a48:	mov	r1, r9
   14a4c:	str	r3, [fp, #-508]	; 0xfffffe04
   14a50:	bl	10cf0 <memcpy@plt>
   14a54:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14a58:	ldr	r2, [fp, #-364]	; 0xfffffe94
   14a5c:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   14a60:	cmp	r2, r1
   14a64:	beq	155a0 <__snprintf_chk@plt+0x46a0>
   14a68:	ldrb	r1, [sl, #36]	; 0x24
   14a6c:	ldr	r2, [sl, #40]	; 0x28
   14a70:	cmp	r1, #37	; 0x25
   14a74:	beq	14d54 <__snprintf_chk@plt+0x3e54>
   14a78:	cmn	r2, #1
   14a7c:	beq	156fc <__snprintf_chk@plt+0x47fc>
   14a80:	ldr	r9, [fp, #-480]	; 0xfffffe20
   14a84:	cmp	r1, #110	; 0x6e
   14a88:	add	r1, r9, r2, lsl #4
   14a8c:	ldr	r5, [r9, r2, lsl #4]
   14a90:	beq	14ecc <__snprintf_chk@plt+0x3fcc>
   14a94:	ldr	r2, [sl, #8]
   14a98:	ldr	r0, [fp, #-516]	; 0xfffffdfc
   14a9c:	tst	r2, #1
   14aa0:	mov	r1, #37	; 0x25
   14aa4:	strb	r1, [r0]
   14aa8:	ldrne	r0, [fp, #-516]	; 0xfffffdfc
   14aac:	movne	r1, #39	; 0x27
   14ab0:	addne	r4, r0, #2
   14ab4:	strbne	r1, [r0, #1]
   14ab8:	addeq	r4, r0, #1
   14abc:	tst	r2, #2
   14ac0:	movne	r1, #45	; 0x2d
   14ac4:	strbne	r1, [r4], #1
   14ac8:	tst	r2, #4
   14acc:	movne	r1, #43	; 0x2b
   14ad0:	strbne	r1, [r4], #1
   14ad4:	tst	r2, #8
   14ad8:	movne	r1, #32
   14adc:	strbne	r1, [r4], #1
   14ae0:	tst	r2, #16
   14ae4:	movne	r1, #35	; 0x23
   14ae8:	strbne	r1, [r4], #1
   14aec:	tst	r2, #64	; 0x40
   14af0:	movne	r1, #73	; 0x49
   14af4:	strbne	r1, [r4], #1
   14af8:	tst	r2, #32
   14afc:	movne	r2, #48	; 0x30
   14b00:	strbne	r2, [r4], #1
   14b04:	ldr	r1, [sl, #12]
   14b08:	ldr	r8, [sl, #16]
   14b0c:	cmp	r1, r8
   14b10:	beq	14b30 <__snprintf_chk@plt+0x3c30>
   14b14:	sub	r8, r8, r1
   14b18:	mov	r0, r4
   14b1c:	mov	r2, r8
   14b20:	str	r3, [fp, #-508]	; 0xfffffe04
   14b24:	bl	10cf0 <memcpy@plt>
   14b28:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14b2c:	add	r4, r4, r8
   14b30:	ldr	r1, [sl, #24]
   14b34:	ldr	r8, [sl, #28]
   14b38:	cmp	r1, r8
   14b3c:	beq	14b5c <__snprintf_chk@plt+0x3c5c>
   14b40:	sub	r8, r8, r1
   14b44:	mov	r0, r4
   14b48:	mov	r2, r8
   14b4c:	str	r3, [fp, #-508]	; 0xfffffe04
   14b50:	bl	10cf0 <memcpy@plt>
   14b54:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14b58:	add	r4, r4, r8
   14b5c:	sub	r2, r5, #7
   14b60:	cmp	r2, #9
   14b64:	ldrls	pc, [pc, r2, lsl #2]
   14b68:	b	14bc4 <__snprintf_chk@plt+0x3cc4>
   14b6c:			; <UNDEFINED> instruction: 0x00014bbc
   14b70:			; <UNDEFINED> instruction: 0x00014bbc
   14b74:			; <UNDEFINED> instruction: 0x00014bb4
   14b78:			; <UNDEFINED> instruction: 0x00014bb4
   14b7c:	andeq	r4, r1, r4, asr #23
   14b80:	andeq	r4, r1, r4, lsr #30
   14b84:	andeq	r4, r1, r4, asr #23
   14b88:			; <UNDEFINED> instruction: 0x00014bbc
   14b8c:	andeq	r4, r1, r4, asr #23
   14b90:			; <UNDEFINED> instruction: 0x00014bbc
   14b94:	add	r3, r3, #13
   14b98:	bic	r3, r3, #7
   14b9c:	sub	sp, sp, r3
   14ba0:	add	r3, sp, #32
   14ba4:	str	r3, [fp, #-516]	; 0xfffffdfc
   14ba8:	mov	r3, #0
   14bac:	str	r3, [fp, #-536]	; 0xfffffde8
   14bb0:	b	14984 <__snprintf_chk@plt+0x3a84>
   14bb4:	mov	r2, #108	; 0x6c
   14bb8:	strb	r2, [r4], #1
   14bbc:	mov	r2, #108	; 0x6c
   14bc0:	strb	r2, [r4], #1
   14bc4:	ldrb	r2, [sl, #36]	; 0x24
   14bc8:	mov	r1, #0
   14bcc:	strb	r1, [r4, #1]
   14bd0:	strb	r2, [r4]
   14bd4:	ldr	r2, [sl, #20]
   14bd8:	cmn	r2, #1
   14bdc:	beq	1537c <__snprintf_chk@plt+0x447c>
   14be0:	ldr	r1, [r9, r2, lsl #4]
   14be4:	add	r2, r9, r2, lsl #4
   14be8:	cmp	r1, #5
   14bec:	bne	156fc <__snprintf_chk@plt+0x47fc>
   14bf0:	ldr	r2, [r2, #8]
   14bf4:	mov	r8, #1
   14bf8:	str	r2, [fp, #-492]	; 0xfffffe14
   14bfc:	ldr	r2, [sl, #32]
   14c00:	cmn	r2, #1
   14c04:	beq	14c2c <__snprintf_chk@plt+0x3d2c>
   14c08:	ldr	r1, [r9, r2, lsl #4]
   14c0c:	add	r9, r9, r2, lsl #4
   14c10:	cmp	r1, #5
   14c14:	bne	156fc <__snprintf_chk@plt+0x47fc>
   14c18:	sub	r2, fp, #36	; 0x24
   14c1c:	add	r2, r2, r8, lsl #2
   14c20:	ldr	r1, [r9, #8]
   14c24:	add	r8, r8, #1
   14c28:	str	r1, [r2, #-456]	; 0xfffffe38
   14c2c:	mov	r2, #2
   14c30:	adds	r2, r7, r2
   14c34:	str	r2, [fp, #-524]	; 0xfffffdf4
   14c38:	bcs	153b4 <__snprintf_chk@plt+0x44b4>
   14c3c:	cmp	r6, r2
   14c40:	bcs	153bc <__snprintf_chk@plt+0x44bc>
   14c44:	cmp	r6, #0
   14c48:	bne	15278 <__snprintf_chk@plt+0x4378>
   14c4c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14c50:	cmp	r2, #12
   14c54:	movls	r6, #12
   14c58:	bhi	1528c <__snprintf_chk@plt+0x438c>
   14c5c:	ldr	r1, [fp, #-504]	; 0xfffffe08
   14c60:	sub	r2, r3, r1
   14c64:	cmp	r3, r1
   14c68:	cmpne	r3, #0
   14c6c:	clz	r2, r2
   14c70:	lsr	r2, r2, #5
   14c74:	str	r2, [fp, #-508]	; 0xfffffe04
   14c78:	bne	15384 <__snprintf_chk@plt+0x4484>
   14c7c:	mov	r0, r6
   14c80:	str	r3, [fp, #-512]	; 0xfffffe00
   14c84:	bl	10db0 <malloc@plt>
   14c88:	ldr	r3, [fp, #-512]	; 0xfffffe00
   14c8c:	ldr	r2, [fp, #-508]	; 0xfffffe04
   14c90:	subs	r9, r0, #0
   14c94:	beq	152cc <__snprintf_chk@plt+0x43cc>
   14c98:	cmp	r7, #0
   14c9c:	moveq	r2, #0
   14ca0:	cmp	r2, #0
   14ca4:	beq	14cb4 <__snprintf_chk@plt+0x3db4>
   14ca8:	mov	r1, r3
   14cac:	mov	r2, r7
   14cb0:	bl	10cf0 <memcpy@plt>
   14cb4:	mov	r3, #0
   14cb8:	strb	r3, [r9, r7]
   14cbc:	bl	10e1c <__errno_location@plt>
   14cc0:	sub	r3, r5, #1
   14cc4:	str	r3, [fp, #-520]	; 0xfffffdf8
   14cc8:	ldr	r3, [r0]
   14ccc:	str	r0, [fp, #-508]	; 0xfffffe04
   14cd0:	str	r3, [fp, #-540]	; 0xfffffde4
   14cd4:	sub	r3, r6, r7
   14cd8:	str	r3, [fp, #-512]	; 0xfffffe00
   14cdc:	ldr	r3, [fp, #-512]	; 0xfffffe00
   14ce0:	mvn	r2, #0
   14ce4:	cmp	r3, #0
   14ce8:	str	r2, [fp, #-496]	; 0xfffffe10
   14cec:	ldr	r2, [fp, #-508]	; 0xfffffe04
   14cf0:	movge	r5, r3
   14cf4:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   14cf8:	mov	r1, #0
   14cfc:	str	r1, [r2]
   14d00:	mvnlt	r5, #-2147483648	; 0x80000000
   14d04:	cmp	r3, #16
   14d08:	ldrls	pc, [pc, r3, lsl #2]
   14d0c:	b	156fc <__snprintf_chk@plt+0x47fc>
   14d10:	andeq	r5, r1, r8, asr r2
   14d14:	andeq	r5, r1, r8, lsr r2
   14d18:	ldrdeq	r5, [r1], -ip
   14d1c:	muleq	r1, r0, r1
   14d20:	andeq	r4, r1, r0, lsr pc
   14d24:	andeq	r4, r1, r0, lsr pc
   14d28:	andeq	r4, r1, r0, lsr pc
   14d2c:	andeq	r4, r1, r0, lsr pc
   14d30:	andeq	r5, r1, r4, asr r0
   14d34:	andeq	r5, r1, r4, asr r0
   14d38:	andeq	r5, r1, r4, asr #2
   14d3c:	andeq	r5, r1, r4, asr #2
   14d40:	andeq	r4, r1, r0, lsr pc
   14d44:	andeq	r4, r1, r0, lsr pc
   14d48:	andeq	r4, r1, r0, lsr pc
   14d4c:	andeq	r4, r1, r0, lsr pc
   14d50:	andeq	r4, r1, r0, lsr pc
   14d54:	cmn	r2, #1
   14d58:	bne	156fc <__snprintf_chk@plt+0x47fc>
   14d5c:	mov	r2, #1
   14d60:	adds	r2, r7, r2
   14d64:	mov	r4, r2
   14d68:	bcs	153a4 <__snprintf_chk@plt+0x44a4>
   14d6c:	cmp	r6, r2
   14d70:	bcs	14de4 <__snprintf_chk@plt+0x3ee4>
   14d74:	cmp	r6, #0
   14d78:	bne	152c8 <__snprintf_chk@plt+0x43c8>
   14d7c:	cmp	r2, #12
   14d80:	movls	r6, #12
   14d84:	bhi	15500 <__snprintf_chk@plt+0x4600>
   14d88:	ldr	r2, [fp, #-504]	; 0xfffffe08
   14d8c:	cmp	r3, r2
   14d90:	cmpne	r3, #0
   14d94:	sub	r5, r3, r2
   14d98:	clz	r5, r5
   14d9c:	lsr	r5, r5, #5
   14da0:	bne	15494 <__snprintf_chk@plt+0x4594>
   14da4:	mov	r0, r6
   14da8:	str	r3, [fp, #-508]	; 0xfffffe04
   14dac:	bl	10db0 <malloc@plt>
   14db0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14db4:	subs	ip, r0, #0
   14db8:	beq	152cc <__snprintf_chk@plt+0x43cc>
   14dbc:	cmp	r7, #0
   14dc0:	moveq	r5, #0
   14dc4:	cmp	r5, #0
   14dc8:	moveq	r3, ip
   14dcc:	beq	14de4 <__snprintf_chk@plt+0x3ee4>
   14dd0:	mov	r1, r3
   14dd4:	mov	r2, r7
   14dd8:	str	ip, [fp, #-508]	; 0xfffffe04
   14ddc:	bl	10cf0 <memcpy@plt>
   14de0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14de4:	mov	r2, #37	; 0x25
   14de8:	strb	r2, [r3, r7]
   14dec:	ldr	r9, [sl, #4]
   14df0:	add	sl, sl, #44	; 0x2c
   14df4:	ldr	r2, [fp, #-528]	; 0xfffffdf0
   14df8:	ldr	r5, [sl]
   14dfc:	add	r2, r2, #1
   14e00:	cmp	r5, r9
   14e04:	str	r2, [fp, #-528]	; 0xfffffdf0
   14e08:	bne	149b8 <__snprintf_chk@plt+0x3ab8>
   14e0c:	mov	r7, r4
   14e10:	b	14a58 <__snprintf_chk@plt+0x3b58>
   14e14:	cmn	r6, #1
   14e18:	beq	1548c <__snprintf_chk@plt+0x458c>
   14e1c:	mov	r5, r3
   14e20:	bl	10e1c <__errno_location@plt>
   14e24:	mov	r9, r5
   14e28:	str	r0, [fp, #-508]	; 0xfffffe04
   14e2c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14e30:	cmp	r9, r3
   14e34:	cmpne	r9, #0
   14e38:	bne	152e8 <__snprintf_chk@plt+0x43e8>
   14e3c:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14e40:	cmp	r3, #0
   14e44:	beq	14e50 <__snprintf_chk@plt+0x3f50>
   14e48:	mov	r0, r3
   14e4c:	bl	10cd8 <free@plt>
   14e50:	ldr	r0, [fp, #-360]	; 0xfffffe98
   14e54:	sub	r3, fp, #348	; 0x15c
   14e58:	cmp	r0, r3
   14e5c:	beq	14e64 <__snprintf_chk@plt+0x3f64>
   14e60:	bl	10cd8 <free@plt>
   14e64:	ldr	r0, [fp, #-480]	; 0xfffffe20
   14e68:	sub	r3, fp, #476	; 0x1dc
   14e6c:	cmp	r0, r3
   14e70:	beq	14e78 <__snprintf_chk@plt+0x3f78>
   14e74:	bl	10cd8 <free@plt>
   14e78:	ldr	r2, [fp, #-508]	; 0xfffffe04
   14e7c:	mov	r5, #0
   14e80:	mov	r3, #12
   14e84:	str	r3, [r2]
   14e88:	ldr	r3, [pc, #2160]	; 15700 <__snprintf_chk@plt+0x4800>
   14e8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14e90:	mov	r0, r5
   14e94:	ldr	r3, [r3]
   14e98:	cmp	r2, r3
   14e9c:	bne	156ec <__snprintf_chk@plt+0x47ec>
   14ea0:	sub	sp, fp, #32
   14ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea8:	mov	r0, r3
   14eac:	mov	r1, r6
   14eb0:	str	r3, [fp, #-508]	; 0xfffffe04
   14eb4:	bl	10d44 <realloc@plt>
   14eb8:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14ebc:	cmp	r0, #0
   14ec0:	beq	15684 <__snprintf_chk@plt+0x4784>
   14ec4:	mov	r3, r0
   14ec8:	b	14a40 <__snprintf_chk@plt+0x3b40>
   14ecc:	sub	r5, r5, #18
   14ed0:	cmp	r5, #4
   14ed4:	ldrls	pc, [pc, r5, lsl #2]
   14ed8:	b	156fc <__snprintf_chk@plt+0x47fc>
   14edc:	andeq	r5, r1, ip, lsl r3
   14ee0:	andeq	r5, r1, ip, lsl #6
   14ee4:			; <UNDEFINED> instruction: 0x000152b8
   14ee8:			; <UNDEFINED> instruction: 0x000152b8
   14eec:	strdeq	r5, [r1], -r4
   14ef0:	bl	10e1c <__errno_location@plt>
   14ef4:	str	r0, [fp, #-508]	; 0xfffffe04
   14ef8:	b	14e50 <__snprintf_chk@plt+0x3f50>
   14efc:	mov	r5, #0
   14f00:	b	14e88 <__snprintf_chk@plt+0x3f88>
   14f04:	blt	152cc <__snprintf_chk@plt+0x43cc>
   14f08:	lsl	r6, r6, #1
   14f0c:	cmp	r6, r2
   14f10:	bcs	149e4 <__snprintf_chk@plt+0x3ae4>
   14f14:	cmn	r2, #1
   14f18:	beq	14e1c <__snprintf_chk@plt+0x3f1c>
   14f1c:	mov	r6, r2
   14f20:	b	149e4 <__snprintf_chk@plt+0x3ae4>
   14f24:	mov	r2, #76	; 0x4c
   14f28:	strb	r2, [r4], #1
   14f2c:	b	14bc4 <__snprintf_chk@plt+0x3cc4>
   14f30:	ldr	r2, [sl, #40]	; 0x28
   14f34:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14f38:	cmp	r8, #1
   14f3c:	add	r3, r3, r2, lsl #4
   14f40:	add	r0, r9, r7
   14f44:	ldr	r3, [r3, #8]
   14f48:	beq	151ac <__snprintf_chk@plt+0x42ac>
   14f4c:	cmp	r8, #2
   14f50:	beq	15200 <__snprintf_chk@plt+0x4300>
   14f54:	str	r3, [sp, #4]
   14f58:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14f5c:	sub	r2, fp, #496	; 0x1f0
   14f60:	str	r2, [sp, #8]
   14f64:	str	r3, [sp]
   14f68:	mov	r2, #1
   14f6c:	mvn	r3, #0
   14f70:	mov	r1, r5
   14f74:	bl	10f00 <__snprintf_chk@plt>
   14f78:	ldr	r2, [fp, #-496]	; 0xfffffe10
   14f7c:	cmp	r2, #0
   14f80:	blt	150a8 <__snprintf_chk@plt+0x41a8>
   14f84:	cmp	r2, r5
   14f88:	mov	r3, r2
   14f8c:	bcs	14fa0 <__snprintf_chk@plt+0x40a0>
   14f90:	add	r1, r9, r2
   14f94:	ldrb	r1, [r1, r7]
   14f98:	cmp	r1, #0
   14f9c:	bne	156fc <__snprintf_chk@plt+0x47fc>
   14fa0:	cmp	r2, r0
   14fa4:	bge	14fb0 <__snprintf_chk@plt+0x40b0>
   14fa8:	mov	r3, r0
   14fac:	str	r0, [fp, #-496]	; 0xfffffe10
   14fb0:	add	r2, r3, #1
   14fb4:	cmp	r2, r5
   14fb8:	bcc	15510 <__snprintf_chk@plt+0x4610>
   14fbc:	cmn	r5, #-2147483647	; 0x80000001
   14fc0:	beq	15528 <__snprintf_chk@plt+0x4628>
   14fc4:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14fc8:	add	r3, r3, r2
   14fcc:	cmp	r7, r3
   14fd0:	mvnhi	r3, #0
   14fd4:	cmp	r6, #0
   14fd8:	blt	1532c <__snprintf_chk@plt+0x442c>
   14fdc:	lsl	r2, r6, #1
   14fe0:	cmp	r2, r3
   14fe4:	movcs	r3, r2
   14fe8:	cmp	r6, r3
   14fec:	bcs	14cdc <__snprintf_chk@plt+0x3ddc>
   14ff0:	cmp	r2, r3
   14ff4:	bcc	15338 <__snprintf_chk@plt+0x4438>
   14ff8:	mov	r6, r2
   14ffc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15000:	cmp	r9, r3
   15004:	cmpne	r9, #0
   15008:	sub	r5, r9, r3
   1500c:	clz	r5, r5
   15010:	lsr	r5, r5, #5
   15014:	bne	15348 <__snprintf_chk@plt+0x4448>
   15018:	mov	r0, r6
   1501c:	bl	10db0 <malloc@plt>
   15020:	subs	r3, r0, #0
   15024:	beq	14e2c <__snprintf_chk@plt+0x3f2c>
   15028:	cmp	r7, #0
   1502c:	moveq	r5, #0
   15030:	cmp	r5, #0
   15034:	beq	1536c <__snprintf_chk@plt+0x446c>
   15038:	mov	r1, r9
   1503c:	mov	r2, r7
   15040:	mov	r9, r3
   15044:	bl	10cf0 <memcpy@plt>
   15048:	sub	r3, r6, r7
   1504c:	str	r3, [fp, #-512]	; 0xfffffe00
   15050:	b	14cdc <__snprintf_chk@plt+0x3ddc>
   15054:	ldr	r2, [sl, #40]	; 0x28
   15058:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1505c:	cmp	r8, #1
   15060:	add	r3, r3, r2, lsl #4
   15064:	add	r0, r9, r7
   15068:	ldrd	r2, [r3, #8]
   1506c:	beq	153f8 <__snprintf_chk@plt+0x44f8>
   15070:	cmp	r8, #2
   15074:	beq	153c4 <__snprintf_chk@plt+0x44c4>
   15078:	strd	r2, [sp, #8]
   1507c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15080:	sub	r1, fp, #496	; 0x1f0
   15084:	str	r1, [sp, #16]
   15088:	str	r3, [sp]
   1508c:	mov	r2, #1
   15090:	mvn	r3, #0
   15094:	mov	r1, r5
   15098:	bl	10f00 <__snprintf_chk@plt>
   1509c:	ldr	r2, [fp, #-496]	; 0xfffffe10
   150a0:	cmp	r2, #0
   150a4:	bge	14f84 <__snprintf_chk@plt+0x4084>
   150a8:	ldrb	r3, [r4, #1]
   150ac:	cmp	r3, #0
   150b0:	movne	r3, #0
   150b4:	strbne	r3, [r4, #1]
   150b8:	bne	14cdc <__snprintf_chk@plt+0x3ddc>
   150bc:	cmp	r0, #0
   150c0:	bge	14fa8 <__snprintf_chk@plt+0x40a8>
   150c4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   150c8:	ldr	r4, [r3]
   150cc:	cmp	r4, #0
   150d0:	bne	150e8 <__snprintf_chk@plt+0x41e8>
   150d4:	ldrb	r3, [sl, #36]	; 0x24
   150d8:	and	r3, r3, #239	; 0xef
   150dc:	cmp	r3, #99	; 0x63
   150e0:	moveq	r4, #84	; 0x54
   150e4:	movne	r4, #22
   150e8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   150ec:	cmp	r9, r3
   150f0:	cmpne	r9, #0
   150f4:	bne	15588 <__snprintf_chk@plt+0x4688>
   150f8:	ldr	r3, [fp, #-536]	; 0xfffffde8
   150fc:	cmp	r3, #0
   15100:	beq	1510c <__snprintf_chk@plt+0x420c>
   15104:	mov	r0, r3
   15108:	bl	10cd8 <free@plt>
   1510c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15110:	sub	r3, fp, #348	; 0x15c
   15114:	cmp	r0, r3
   15118:	beq	15120 <__snprintf_chk@plt+0x4220>
   1511c:	bl	10cd8 <free@plt>
   15120:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15124:	sub	r3, fp, #476	; 0x1dc
   15128:	cmp	r0, r3
   1512c:	beq	15134 <__snprintf_chk@plt+0x4234>
   15130:	bl	10cd8 <free@plt>
   15134:	ldr	r3, [fp, #-508]	; 0xfffffe04
   15138:	mov	r5, #0
   1513c:	str	r4, [r3]
   15140:	b	14e88 <__snprintf_chk@plt+0x3f88>
   15144:	ldr	r2, [sl, #40]	; 0x28
   15148:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1514c:	cmp	r8, #1
   15150:	add	r3, r3, r2, lsl #4
   15154:	add	r0, r9, r7
   15158:	ldrd	r2, [r3, #8]
   1515c:	beq	1545c <__snprintf_chk@plt+0x455c>
   15160:	cmp	r8, #2
   15164:	beq	15428 <__snprintf_chk@plt+0x4528>
   15168:	strd	r2, [sp, #8]
   1516c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15170:	sub	r1, fp, #496	; 0x1f0
   15174:	str	r1, [sp, #16]
   15178:	str	r3, [sp]
   1517c:	mov	r2, #1
   15180:	mvn	r3, #0
   15184:	mov	r1, r5
   15188:	bl	10f00 <__snprintf_chk@plt>
   1518c:	b	14f78 <__snprintf_chk@plt+0x4078>
   15190:	ldr	r2, [sl, #40]	; 0x28
   15194:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15198:	cmp	r8, #1
   1519c:	add	r3, r3, r2, lsl #4
   151a0:	add	r0, r9, r7
   151a4:	ldrh	r3, [r3, #8]
   151a8:	bne	14f4c <__snprintf_chk@plt+0x404c>
   151ac:	ldr	r2, [fp, #-492]	; 0xfffffe14
   151b0:	str	r3, [sp, #8]
   151b4:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   151b8:	sub	r1, fp, #496	; 0x1f0
   151bc:	str	r1, [sp, #12]
   151c0:	str	r3, [sp]
   151c4:	str	r2, [sp, #4]
   151c8:	mvn	r3, #0
   151cc:	mov	r2, r8
   151d0:	mov	r1, r5
   151d4:	bl	10f00 <__snprintf_chk@plt>
   151d8:	b	14f78 <__snprintf_chk@plt+0x4078>
   151dc:	ldr	r2, [sl, #40]	; 0x28
   151e0:	ldr	r3, [fp, #-480]	; 0xfffffe20
   151e4:	cmp	r8, #1
   151e8:	add	r3, r3, r2, lsl #4
   151ec:	add	r0, r9, r7
   151f0:	ldrsh	r3, [r3, #8]
   151f4:	beq	151ac <__snprintf_chk@plt+0x42ac>
   151f8:	cmp	r8, #2
   151fc:	bne	14f54 <__snprintf_chk@plt+0x4054>
   15200:	ldr	r1, [fp, #-488]	; 0xfffffe18
   15204:	ldr	r2, [fp, #-492]	; 0xfffffe14
   15208:	str	r3, [sp, #12]
   1520c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15210:	sub	ip, fp, #496	; 0x1f0
   15214:	str	r3, [sp]
   15218:	str	r1, [sp, #8]
   1521c:	str	r2, [sp, #4]
   15220:	str	ip, [sp, #16]
   15224:	mvn	r3, #0
   15228:	mov	r2, #1
   1522c:	mov	r1, r5
   15230:	bl	10f00 <__snprintf_chk@plt>
   15234:	b	14f78 <__snprintf_chk@plt+0x4078>
   15238:	ldr	r2, [sl, #40]	; 0x28
   1523c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15240:	cmp	r8, #1
   15244:	add	r3, r3, r2, lsl #4
   15248:	add	r0, r9, r7
   1524c:	ldrb	r3, [r3, #8]
   15250:	bne	14f4c <__snprintf_chk@plt+0x404c>
   15254:	b	151ac <__snprintf_chk@plt+0x42ac>
   15258:	ldr	r2, [sl, #40]	; 0x28
   1525c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   15260:	cmp	r8, #1
   15264:	add	r3, r3, r2, lsl #4
   15268:	add	r0, r9, r7
   1526c:	ldrsb	r3, [r3, #8]
   15270:	bne	14f4c <__snprintf_chk@plt+0x404c>
   15274:	b	151ac <__snprintf_chk@plt+0x42ac>
   15278:	blt	152cc <__snprintf_chk@plt+0x43cc>
   1527c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   15280:	lsl	r6, r6, #1
   15284:	cmp	r6, r2
   15288:	bcs	14c5c <__snprintf_chk@plt+0x3d5c>
   1528c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   15290:	mov	r1, #0
   15294:	cmn	r2, #1
   15298:	movne	r2, #0
   1529c:	moveq	r2, #1
   152a0:	cmp	r1, r1
   152a4:	movne	r2, #255	; 0xff
   152a8:	cmp	r2, r1
   152ac:	bne	14e1c <__snprintf_chk@plt+0x3f1c>
   152b0:	ldr	r6, [fp, #-524]	; 0xfffffdf4
   152b4:	b	14c5c <__snprintf_chk@plt+0x3d5c>
   152b8:	ldr	r2, [r1, #8]
   152bc:	mov	r4, r7
   152c0:	str	r7, [r2]
   152c4:	b	14dec <__snprintf_chk@plt+0x3eec>
   152c8:	bge	154f4 <__snprintf_chk@plt+0x45f4>
   152cc:	mov	r9, r3
   152d0:	bl	10e1c <__errno_location@plt>
   152d4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   152d8:	cmp	r9, r3
   152dc:	cmpne	r9, #0
   152e0:	str	r0, [fp, #-508]	; 0xfffffe04
   152e4:	beq	14e3c <__snprintf_chk@plt+0x3f3c>
   152e8:	mov	r0, r9
   152ec:	bl	10cd8 <free@plt>
   152f0:	b	14e3c <__snprintf_chk@plt+0x3f3c>
   152f4:	ldr	r2, [r1, #8]
   152f8:	mov	r1, #0
   152fc:	mov	r4, r7
   15300:	str	r7, [r2]
   15304:	str	r1, [r2, #4]
   15308:	b	14dec <__snprintf_chk@plt+0x3eec>
   1530c:	ldr	r2, [r1, #8]
   15310:	mov	r4, r7
   15314:	strh	r7, [r2]
   15318:	b	14dec <__snprintf_chk@plt+0x3eec>
   1531c:	ldr	r2, [r1, #8]
   15320:	mov	r4, r7
   15324:	strb	r7, [r2]
   15328:	b	14dec <__snprintf_chk@plt+0x3eec>
   1532c:	cmn	r6, #1
   15330:	beq	14cdc <__snprintf_chk@plt+0x3ddc>
   15334:	b	14e2c <__snprintf_chk@plt+0x3f2c>
   15338:	cmn	r3, #1
   1533c:	beq	14e2c <__snprintf_chk@plt+0x3f2c>
   15340:	mov	r6, r3
   15344:	b	14ffc <__snprintf_chk@plt+0x40fc>
   15348:	mov	r1, r6
   1534c:	mov	r0, r9
   15350:	bl	10d44 <realloc@plt>
   15354:	cmp	r0, #0
   15358:	beq	14e2c <__snprintf_chk@plt+0x3f2c>
   1535c:	sub	r3, r6, r7
   15360:	mov	r9, r0
   15364:	str	r3, [fp, #-512]	; 0xfffffe00
   15368:	b	14cdc <__snprintf_chk@plt+0x3ddc>
   1536c:	mov	r9, r3
   15370:	sub	r3, r6, r7
   15374:	str	r3, [fp, #-512]	; 0xfffffe00
   15378:	b	14cdc <__snprintf_chk@plt+0x3ddc>
   1537c:	mov	r8, #0
   15380:	b	14bfc <__snprintf_chk@plt+0x3cfc>
   15384:	mov	r0, r3
   15388:	mov	r1, r6
   1538c:	str	r3, [fp, #-508]	; 0xfffffe04
   15390:	bl	10d44 <realloc@plt>
   15394:	ldr	r3, [fp, #-508]	; 0xfffffe04
   15398:	subs	r9, r0, #0
   1539c:	bne	14cb4 <__snprintf_chk@plt+0x3db4>
   153a0:	b	152cc <__snprintf_chk@plt+0x43cc>
   153a4:	cmn	r6, #1
   153a8:	bne	14e1c <__snprintf_chk@plt+0x3f1c>
   153ac:	mov	r4, r6
   153b0:	b	14de4 <__snprintf_chk@plt+0x3ee4>
   153b4:	cmn	r6, #1
   153b8:	bne	14e1c <__snprintf_chk@plt+0x3f1c>
   153bc:	mov	r9, r3
   153c0:	b	14cb4 <__snprintf_chk@plt+0x3db4>
   153c4:	ldr	r1, [fp, #-492]	; 0xfffffe14
   153c8:	ldr	ip, [fp, #-488]	; 0xfffffe18
   153cc:	strd	r2, [sp, #16]
   153d0:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   153d4:	sub	lr, fp, #496	; 0x1f0
   153d8:	str	r3, [sp]
   153dc:	stmib	sp, {r1, ip}
   153e0:	str	lr, [sp, #24]
   153e4:	mvn	r3, #0
   153e8:	mov	r2, #1
   153ec:	mov	r1, r5
   153f0:	bl	10f00 <__snprintf_chk@plt>
   153f4:	b	14f78 <__snprintf_chk@plt+0x4078>
   153f8:	ldr	r1, [fp, #-492]	; 0xfffffe14
   153fc:	strd	r2, [sp, #8]
   15400:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15404:	sub	ip, fp, #496	; 0x1f0
   15408:	str	r3, [sp]
   1540c:	str	r1, [sp, #4]
   15410:	str	ip, [sp, #16]
   15414:	mvn	r3, #0
   15418:	mov	r2, r8
   1541c:	mov	r1, r5
   15420:	bl	10f00 <__snprintf_chk@plt>
   15424:	b	14f78 <__snprintf_chk@plt+0x4078>
   15428:	ldr	r1, [fp, #-492]	; 0xfffffe14
   1542c:	ldr	ip, [fp, #-488]	; 0xfffffe18
   15430:	strd	r2, [sp, #16]
   15434:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15438:	sub	lr, fp, #496	; 0x1f0
   1543c:	str	r3, [sp]
   15440:	stmib	sp, {r1, ip}
   15444:	str	lr, [sp, #24]
   15448:	mvn	r3, #0
   1544c:	mov	r2, #1
   15450:	mov	r1, r5
   15454:	bl	10f00 <__snprintf_chk@plt>
   15458:	b	14f78 <__snprintf_chk@plt+0x4078>
   1545c:	ldr	r1, [fp, #-492]	; 0xfffffe14
   15460:	strd	r2, [sp, #8]
   15464:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15468:	sub	ip, fp, #496	; 0x1f0
   1546c:	str	r3, [sp]
   15470:	str	r1, [sp, #4]
   15474:	str	ip, [sp, #16]
   15478:	mvn	r3, #0
   1547c:	mov	r2, r8
   15480:	mov	r1, r5
   15484:	bl	10f00 <__snprintf_chk@plt>
   15488:	b	14f78 <__snprintf_chk@plt+0x4078>
   1548c:	mov	r7, r6
   15490:	b	14a40 <__snprintf_chk@plt+0x3b40>
   15494:	mov	r0, r3
   15498:	mov	r1, r6
   1549c:	str	r3, [fp, #-508]	; 0xfffffe04
   154a0:	bl	10d44 <realloc@plt>
   154a4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   154a8:	cmp	r0, #0
   154ac:	beq	15684 <__snprintf_chk@plt+0x4784>
   154b0:	mov	r3, r0
   154b4:	b	14de4 <__snprintf_chk@plt+0x3ee4>
   154b8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   154bc:	sub	r3, fp, #348	; 0x15c
   154c0:	cmp	r0, r3
   154c4:	beq	154cc <__snprintf_chk@plt+0x45cc>
   154c8:	bl	10cd8 <free@plt>
   154cc:	ldr	r0, [fp, #-480]	; 0xfffffe20
   154d0:	sub	r3, fp, #476	; 0x1dc
   154d4:	cmp	r0, r3
   154d8:	beq	154e0 <__snprintf_chk@plt+0x45e0>
   154dc:	bl	10cd8 <free@plt>
   154e0:	bl	10e1c <__errno_location@plt>
   154e4:	mov	r3, #22
   154e8:	mov	r5, #0
   154ec:	str	r3, [r0]
   154f0:	b	14e88 <__snprintf_chk@plt+0x3f88>
   154f4:	lsl	r6, r6, #1
   154f8:	cmp	r6, r2
   154fc:	bcs	14d88 <__snprintf_chk@plt+0x3e88>
   15500:	cmn	r2, #1
   15504:	beq	14e1c <__snprintf_chk@plt+0x3f1c>
   15508:	mov	r6, r2
   1550c:	b	14d88 <__snprintf_chk@plt+0x3e88>
   15510:	add	r4, r7, r3
   15514:	ldr	r3, [fp, #-508]	; 0xfffffe04
   15518:	ldr	r2, [fp, #-540]	; 0xfffffde4
   1551c:	str	r2, [r3]
   15520:	mov	r3, r9
   15524:	b	14dec <__snprintf_chk@plt+0x3eec>
   15528:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1552c:	cmp	r9, r3
   15530:	cmpne	r9, #0
   15534:	bne	15594 <__snprintf_chk@plt+0x4694>
   15538:	ldr	r3, [fp, #-536]	; 0xfffffde8
   1553c:	cmp	r3, #0
   15540:	beq	1554c <__snprintf_chk@plt+0x464c>
   15544:	mov	r0, r3
   15548:	bl	10cd8 <free@plt>
   1554c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15550:	sub	r3, fp, #348	; 0x15c
   15554:	cmp	r0, r3
   15558:	beq	15560 <__snprintf_chk@plt+0x4660>
   1555c:	bl	10cd8 <free@plt>
   15560:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15564:	sub	r3, fp, #476	; 0x1dc
   15568:	cmp	r0, r3
   1556c:	beq	15574 <__snprintf_chk@plt+0x4674>
   15570:	bl	10cd8 <free@plt>
   15574:	ldr	r2, [fp, #-508]	; 0xfffffe04
   15578:	mov	r3, #75	; 0x4b
   1557c:	mov	r5, #0
   15580:	str	r3, [r2]
   15584:	b	14e88 <__snprintf_chk@plt+0x3f88>
   15588:	mov	r0, r9
   1558c:	bl	10cd8 <free@plt>
   15590:	b	150f8 <__snprintf_chk@plt+0x41f8>
   15594:	mov	r0, r9
   15598:	bl	10cd8 <free@plt>
   1559c:	b	15538 <__snprintf_chk@plt+0x4638>
   155a0:	mov	r5, r3
   155a4:	mov	r3, #1
   155a8:	adds	r4, r7, r3
   155ac:	mov	r8, r7
   155b0:	bcs	156f0 <__snprintf_chk@plt+0x47f0>
   155b4:	cmp	r6, r4
   155b8:	bcs	15624 <__snprintf_chk@plt+0x4724>
   155bc:	cmp	r6, #0
   155c0:	bne	156cc <__snprintf_chk@plt+0x47cc>
   155c4:	cmp	r4, #12
   155c8:	movls	r6, #12
   155cc:	bhi	156dc <__snprintf_chk@plt+0x47dc>
   155d0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   155d4:	cmp	r5, r3
   155d8:	cmpne	r5, #0
   155dc:	sub	r7, r5, r3
   155e0:	clz	r7, r7
   155e4:	lsr	r7, r7, #5
   155e8:	bne	156b0 <__snprintf_chk@plt+0x47b0>
   155ec:	mov	r0, r6
   155f0:	bl	10db0 <malloc@plt>
   155f4:	subs	r3, r0, #0
   155f8:	beq	14e20 <__snprintf_chk@plt+0x3f20>
   155fc:	cmp	r8, #0
   15600:	movne	r2, r7
   15604:	moveq	r2, #0
   15608:	cmp	r2, #0
   1560c:	moveq	r5, r3
   15610:	beq	15624 <__snprintf_chk@plt+0x4724>
   15614:	mov	r1, r5
   15618:	mov	r2, r8
   1561c:	mov	r5, r3
   15620:	bl	10cf0 <memcpy@plt>
   15624:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15628:	cmp	r5, r3
   1562c:	cmpne	r6, r4
   15630:	mov	r3, #0
   15634:	strb	r3, [r5, r8]
   15638:	bhi	15698 <__snprintf_chk@plt+0x4798>
   1563c:	ldr	r3, [fp, #-536]	; 0xfffffde8
   15640:	cmp	r3, #0
   15644:	beq	15650 <__snprintf_chk@plt+0x4750>
   15648:	mov	r0, r3
   1564c:	bl	10cd8 <free@plt>
   15650:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15654:	sub	r3, fp, #348	; 0x15c
   15658:	cmp	r0, r3
   1565c:	beq	15664 <__snprintf_chk@plt+0x4764>
   15660:	bl	10cd8 <free@plt>
   15664:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15668:	sub	r3, fp, #476	; 0x1dc
   1566c:	cmp	r0, r3
   15670:	beq	15678 <__snprintf_chk@plt+0x4778>
   15674:	bl	10cd8 <free@plt>
   15678:	ldr	r3, [fp, #-532]	; 0xfffffdec
   1567c:	str	r8, [r3]
   15680:	b	14e88 <__snprintf_chk@plt+0x3f88>
   15684:	mov	r5, r3
   15688:	bl	10e1c <__errno_location@plt>
   1568c:	mov	r9, r5
   15690:	str	r0, [fp, #-508]	; 0xfffffe04
   15694:	b	152e8 <__snprintf_chk@plt+0x43e8>
   15698:	mov	r0, r5
   1569c:	mov	r1, r4
   156a0:	bl	10d44 <realloc@plt>
   156a4:	cmp	r0, #0
   156a8:	movne	r5, r0
   156ac:	b	1563c <__snprintf_chk@plt+0x473c>
   156b0:	mov	r1, r6
   156b4:	mov	r0, r5
   156b8:	bl	10d44 <realloc@plt>
   156bc:	cmp	r0, #0
   156c0:	beq	15688 <__snprintf_chk@plt+0x4788>
   156c4:	mov	r5, r0
   156c8:	b	15624 <__snprintf_chk@plt+0x4724>
   156cc:	blt	14e20 <__snprintf_chk@plt+0x3f20>
   156d0:	lsl	r6, r6, #1
   156d4:	cmp	r6, r4
   156d8:	bcs	155d0 <__snprintf_chk@plt+0x46d0>
   156dc:	cmn	r4, #1
   156e0:	movne	r6, r4
   156e4:	bne	155d0 <__snprintf_chk@plt+0x46d0>
   156e8:	b	14e20 <__snprintf_chk@plt+0x3f20>
   156ec:	bl	10d38 <__stack_chk_fail@plt>
   156f0:	cmn	r6, #1
   156f4:	beq	15624 <__snprintf_chk@plt+0x4724>
   156f8:	b	14e20 <__snprintf_chk@plt+0x3f20>
   156fc:	bl	10edc <abort@plt>
   15700:	andeq	r7, r2, r8, lsl #30
   15704:	ldr	r3, [r1]
   15708:	ldr	r2, [r1, #4]
   1570c:	cmp	r3, #0
   15710:	beq	15820 <__snprintf_chk@plt+0x4920>
   15714:	push	{r4, r5, r6, lr}
   15718:	add	r2, r2, #8
   1571c:	ldr	r6, [pc, #268]	; 15830 <__snprintf_chk@plt+0x4930>
   15720:	ldr	lr, [pc, #268]	; 15834 <__snprintf_chk@plt+0x4934>
   15724:	mov	ip, #0
   15728:	ldr	r3, [r2, #-8]
   1572c:	sub	r3, r3, #1
   15730:	cmp	r3, #21
   15734:	ldrls	pc, [pc, r3, lsl #2]
   15738:	b	15828 <__snprintf_chk@plt+0x4928>
   1573c:	ldrdeq	r5, [r1], -r8
   15740:	ldrdeq	r5, [r1], -r8
   15744:	andeq	r5, r1, ip, asr #15
   15748:	andeq	r5, r1, ip, asr #15
   1574c:	muleq	r1, r4, r7
   15750:	muleq	r1, r4, r7
   15754:	muleq	r1, r4, r7
   15758:	muleq	r1, r4, r7
   1575c:			; <UNDEFINED> instruction: 0x000157b8
   15760:			; <UNDEFINED> instruction: 0x000157b8
   15764:	andeq	r5, r1, r4, ror #15
   15768:	andeq	r5, r1, r4, ror #15
   1576c:	muleq	r1, r4, r7
   15770:	muleq	r1, r4, r7
   15774:	strdeq	r5, [r1], -r8
   15778:	andeq	r5, r1, ip, lsl #16
   1577c:	muleq	r1, r4, r7
   15780:	muleq	r1, r4, r7
   15784:	muleq	r1, r4, r7
   15788:	muleq	r1, r4, r7
   1578c:	muleq	r1, r4, r7
   15790:	muleq	r1, r4, r7
   15794:	ldr	r3, [r0], #4
   15798:	str	r3, [r2]
   1579c:	ldr	r3, [r1]
   157a0:	add	ip, ip, #1
   157a4:	cmp	r3, ip
   157a8:	add	r2, r2, #16
   157ac:	bhi	15728 <__snprintf_chk@plt+0x4828>
   157b0:	mov	r0, #0
   157b4:	pop	{r4, r5, r6, pc}
   157b8:	add	r0, r0, #7
   157bc:	bic	r0, r0, #7
   157c0:	ldrd	r4, [r0], #8
   157c4:	strd	r4, [r2]
   157c8:	b	1579c <__snprintf_chk@plt+0x489c>
   157cc:	ldr	r3, [r0], #4
   157d0:	strh	r3, [r2]
   157d4:	b	1579c <__snprintf_chk@plt+0x489c>
   157d8:	ldr	r3, [r0], #4
   157dc:	strb	r3, [r2]
   157e0:	b	1579c <__snprintf_chk@plt+0x489c>
   157e4:	add	r0, r0, #7
   157e8:	bic	r0, r0, #7
   157ec:	ldrd	r4, [r0], #8
   157f0:	strd	r4, [r2]
   157f4:	b	1579c <__snprintf_chk@plt+0x489c>
   157f8:	ldr	r3, [r0], #4
   157fc:	cmp	r3, #0
   15800:	streq	lr, [r2]
   15804:	bne	15798 <__snprintf_chk@plt+0x4898>
   15808:	b	1579c <__snprintf_chk@plt+0x489c>
   1580c:	ldr	r3, [r0], #4
   15810:	cmp	r3, #0
   15814:	streq	r6, [r2]
   15818:	bne	15798 <__snprintf_chk@plt+0x4898>
   1581c:	b	1579c <__snprintf_chk@plt+0x489c>
   15820:	mov	r0, #0
   15824:	bx	lr
   15828:	mvn	r0, #0
   1582c:	pop	{r4, r5, r6, pc}
   15830:	andeq	r7, r1, r0, lsr r1
   15834:	andeq	r7, r1, ip, asr #2
   15838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1583c:	mov	sl, r2
   15840:	sub	sp, sp, #44	; 0x2c
   15844:	mov	fp, r1
   15848:	mov	r3, r1
   1584c:	mov	r1, sl
   15850:	mov	r2, #0
   15854:	mov	ip, #7
   15858:	str	r2, [r3], #16
   1585c:	str	fp, [sp, #4]
   15860:	str	r3, [fp, #4]
   15864:	mov	r4, r2
   15868:	str	r2, [r1], #8
   1586c:	str	ip, [sp, #8]
   15870:	mov	r7, r0
   15874:	str	r3, [sp, #36]	; 0x24
   15878:	str	r2, [sp, #28]
   1587c:	str	r1, [sp, #12]
   15880:	str	r2, [sp, #16]
   15884:	str	r1, [sl, #4]
   15888:	str	r2, [sp, #32]
   1588c:	mov	r9, r2
   15890:	str	ip, [sp, #24]
   15894:	mov	fp, sl
   15898:	b	158a8 <__snprintf_chk@plt+0x49a8>
   1589c:	cmp	r0, #37	; 0x25
   158a0:	mov	r5, r7
   158a4:	beq	158e8 <__snprintf_chk@plt+0x49e8>
   158a8:	mov	r2, r7
   158ac:	ldrb	r0, [r7], #1
   158b0:	cmp	r0, #0
   158b4:	bne	1589c <__snprintf_chk@plt+0x499c>
   158b8:	add	ip, r4, r4, lsl #2
   158bc:	ldr	fp, [sp, #4]
   158c0:	add	r4, r4, ip, lsl #1
   158c4:	mov	r1, r0
   158c8:	str	r2, [r3, r4, lsl #2]
   158cc:	ldr	r3, [sp, #16]
   158d0:	str	r3, [fp, #8]
   158d4:	ldr	r3, [sp, #28]
   158d8:	str	r3, [fp, #12]
   158dc:	mov	r0, r1
   158e0:	add	sp, sp, #44	; 0x2c
   158e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e8:	add	r1, r4, r4, lsl #2
   158ec:	mvn	r8, #0
   158f0:	add	r4, r4, r1, lsl #1
   158f4:	add	r6, r3, r4, lsl #2
   158f8:	str	r2, [r3, r4, lsl #2]
   158fc:	str	r9, [r6, #8]
   15900:	str	r9, [r6, #12]
   15904:	str	r9, [r6, #16]
   15908:	str	r9, [r6, #24]
   1590c:	str	r9, [r6, #28]
   15910:	str	r8, [r6, #20]
   15914:	str	r8, [r6, #32]
   15918:	str	r8, [r6, #40]	; 0x28
   1591c:	ldrb	r4, [r7]
   15920:	sub	r0, r4, #48	; 0x30
   15924:	uxtb	r3, r0
   15928:	cmp	r3, #9
   1592c:	bhi	15978 <__snprintf_chk@plt+0x4a78>
   15930:	b	15df0 <__snprintf_chk@plt+0x4ef0>
   15934:	cmp	r4, #45	; 0x2d
   15938:	beq	15994 <__snprintf_chk@plt+0x4a94>
   1593c:	cmp	r4, #43	; 0x2b
   15940:	beq	159a4 <__snprintf_chk@plt+0x4aa4>
   15944:	cmp	r4, #32
   15948:	beq	159b4 <__snprintf_chk@plt+0x4ab4>
   1594c:	cmp	r4, #35	; 0x23
   15950:	beq	159c4 <__snprintf_chk@plt+0x4ac4>
   15954:	cmp	r4, #48	; 0x30
   15958:	beq	159d4 <__snprintf_chk@plt+0x4ad4>
   1595c:	cmp	r4, #73	; 0x49
   15960:	bne	159e4 <__snprintf_chk@plt+0x4ae4>
   15964:	ldr	r3, [r6, #8]
   15968:	orr	r3, r3, #64	; 0x40
   1596c:	str	r3, [r6, #8]
   15970:	ldrb	r4, [r7]
   15974:	mov	r5, r7
   15978:	cmp	r4, #39	; 0x27
   1597c:	add	r7, r5, #1
   15980:	bne	15934 <__snprintf_chk@plt+0x4a34>
   15984:	ldr	r3, [r6, #8]
   15988:	orr	r3, r3, #1
   1598c:	str	r3, [r6, #8]
   15990:	b	15970 <__snprintf_chk@plt+0x4a70>
   15994:	ldr	r3, [r6, #8]
   15998:	orr	r3, r3, #2
   1599c:	str	r3, [r6, #8]
   159a0:	b	15970 <__snprintf_chk@plt+0x4a70>
   159a4:	ldr	r3, [r6, #8]
   159a8:	orr	r3, r3, #4
   159ac:	str	r3, [r6, #8]
   159b0:	b	15970 <__snprintf_chk@plt+0x4a70>
   159b4:	ldr	r3, [r6, #8]
   159b8:	orr	r3, r3, #8
   159bc:	str	r3, [r6, #8]
   159c0:	b	15970 <__snprintf_chk@plt+0x4a70>
   159c4:	ldr	r3, [r6, #8]
   159c8:	orr	r3, r3, #16
   159cc:	str	r3, [r6, #8]
   159d0:	b	15970 <__snprintf_chk@plt+0x4a70>
   159d4:	ldr	r3, [r6, #8]
   159d8:	orr	r3, r3, #32
   159dc:	str	r3, [r6, #8]
   159e0:	b	15970 <__snprintf_chk@plt+0x4a70>
   159e4:	cmp	r4, #42	; 0x2a
   159e8:	beq	15bc0 <__snprintf_chk@plt+0x4cc0>
   159ec:	sub	r3, r4, #48	; 0x30
   159f0:	cmp	r3, #9
   159f4:	bls	161e0 <__snprintf_chk@plt+0x52e0>
   159f8:	cmp	r4, #46	; 0x2e
   159fc:	beq	15c58 <__snprintf_chk@plt+0x4d58>
   15a00:	add	r5, r5, #1
   15a04:	mov	r3, #0
   15a08:	mov	r1, #1
   15a0c:	b	15a14 <__snprintf_chk@plt+0x4b14>
   15a10:	ldrb	r4, [r5], #1
   15a14:	cmp	r4, #104	; 0x68
   15a18:	andeq	r2, r3, #1
   15a1c:	mov	r7, r5
   15a20:	orreq	r3, r3, r1, lsl r2
   15a24:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a28:	cmp	r4, #76	; 0x4c
   15a2c:	orreq	r3, r3, #4
   15a30:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a34:	cmp	r4, #108	; 0x6c
   15a38:	addeq	r3, r3, #8
   15a3c:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a40:	cmp	r4, #106	; 0x6a
   15a44:	addeq	r3, r3, #16
   15a48:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a4c:	and	r2, r4, #223	; 0xdf
   15a50:	cmp	r2, #90	; 0x5a
   15a54:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a58:	cmp	r4, #116	; 0x74
   15a5c:	beq	15a10 <__snprintf_chk@plt+0x4b10>
   15a60:	sub	r2, r4, #37	; 0x25
   15a64:	cmp	r2, #83	; 0x53
   15a68:	ldrls	pc, [pc, r2, lsl #2]
   15a6c:	b	15e60 <__snprintf_chk@plt+0x4f60>
   15a70:	andeq	r5, r1, r4, asr sp
   15a74:	andeq	r5, r1, r0, ror #28
   15a78:	andeq	r5, r1, r0, ror #28
   15a7c:	andeq	r5, r1, r0, ror #28
   15a80:	andeq	r5, r1, r0, ror #28
   15a84:	andeq	r5, r1, r0, ror #28
   15a88:	andeq	r5, r1, r0, ror #28
   15a8c:	andeq	r5, r1, r0, ror #28
   15a90:	andeq	r5, r1, r0, ror #28
   15a94:	andeq	r5, r1, r0, ror #28
   15a98:	andeq	r5, r1, r0, ror #28
   15a9c:	andeq	r5, r1, r0, ror #28
   15aa0:	andeq	r5, r1, r0, ror #28
   15aa4:	andeq	r5, r1, r0, ror #28
   15aa8:	andeq	r5, r1, r0, ror #28
   15aac:	andeq	r5, r1, r0, ror #28
   15ab0:	andeq	r5, r1, r0, ror #28
   15ab4:	andeq	r5, r1, r0, ror #28
   15ab8:	andeq	r5, r1, r0, ror #28
   15abc:	andeq	r5, r1, r0, ror #28
   15ac0:	andeq	r5, r1, r0, ror #28
   15ac4:	andeq	r5, r1, r0, ror #28
   15ac8:	andeq	r5, r1, r0, ror #28
   15acc:	andeq	r5, r1, r0, ror #28
   15ad0:	andeq	r5, r1, r0, ror #28
   15ad4:	andeq	r5, r1, r0, ror #28
   15ad8:	andeq	r5, r1, r0, ror #28
   15adc:	andeq	r5, r1, r0, ror #28
   15ae0:	andeq	r5, r1, r8, lsr #31
   15ae4:	andeq	r5, r1, r0, ror #28
   15ae8:	strdeq	r5, [r1], -r4
   15aec:	andeq	r5, r1, r0, ror #28
   15af0:	andeq	r5, r1, r8, lsr #31
   15af4:	andeq	r5, r1, r8, lsr #31
   15af8:	andeq	r5, r1, r8, lsr #31
   15afc:	andeq	r5, r1, r0, ror #28
   15b00:	andeq	r5, r1, r0, ror #28
   15b04:	andeq	r5, r1, r0, ror #28
   15b08:	andeq	r5, r1, r0, ror #28
   15b0c:	andeq	r5, r1, r0, ror #28
   15b10:	andeq	r5, r1, r0, ror #28
   15b14:	andeq	r5, r1, r0, ror #28
   15b18:	andeq	r5, r1, r0, ror #28
   15b1c:	andeq	r5, r1, r0, ror #28
   15b20:	andeq	r5, r1, r0, ror #28
   15b24:	andeq	r5, r1, r0, ror #28
   15b28:	andeq	r6, r1, ip, ror #1
   15b2c:	andeq	r5, r1, r0, ror #28
   15b30:	andeq	r5, r1, r0, ror #28
   15b34:	andeq	r5, r1, r0, ror #28
   15b38:	andeq	r5, r1, r0, ror #28
   15b3c:	andeq	r6, r1, r8, lsr #1
   15b40:	andeq	r5, r1, r0, ror #28
   15b44:	andeq	r5, r1, r0, ror #28
   15b48:	andeq	r5, r1, r0, ror #28
   15b4c:	andeq	r5, r1, r0, ror #28
   15b50:	andeq	r5, r1, r0, ror #28
   15b54:	andeq	r5, r1, r0, ror #28
   15b58:	andeq	r5, r1, r0, ror #28
   15b5c:	andeq	r5, r1, r0, ror #28
   15b60:	andeq	r5, r1, r8, lsr #31
   15b64:	andeq	r5, r1, r0, ror #28
   15b68:	muleq	r1, r4, r0
   15b6c:	andeq	r6, r1, r0, asr r0
   15b70:	andeq	r5, r1, r8, lsr #31
   15b74:	andeq	r5, r1, r8, lsr #31
   15b78:	andeq	r5, r1, r8, lsr #31
   15b7c:	andeq	r5, r1, r0, ror #28
   15b80:	andeq	r6, r1, r0, asr r0
   15b84:	andeq	r5, r1, r0, ror #28
   15b88:	andeq	r5, r1, r0, ror #28
   15b8c:	andeq	r5, r1, r0, ror #28
   15b90:	andeq	r5, r1, r0, ror #28
   15b94:	andeq	r6, r1, r8, lsl #2
   15b98:	andeq	r6, r1, r8, lsr #1
   15b9c:	strdeq	r6, [r1], -ip
   15ba0:	andeq	r5, r1, r0, ror #28
   15ba4:	andeq	r5, r1, r0, ror #28
   15ba8:	andeq	r6, r1, ip, lsr r0
   15bac:	andeq	r5, r1, r0, ror #28
   15bb0:	andeq	r6, r1, r8, lsr #1
   15bb4:	andeq	r5, r1, r0, ror #28
   15bb8:	andeq	r5, r1, r0, ror #28
   15bbc:	andeq	r6, r1, r8, lsr #1
   15bc0:	str	r5, [r6, #12]
   15bc4:	str	r7, [r6, #16]
   15bc8:	ldrb	r3, [r5, #1]
   15bcc:	ldr	r2, [sp, #16]
   15bd0:	sub	r3, r3, #48	; 0x30
   15bd4:	cmp	r2, #0
   15bd8:	moveq	r2, #1
   15bdc:	str	r2, [sp, #16]
   15be0:	uxtb	r2, r3
   15be4:	cmp	r2, #9
   15be8:	bls	15fcc <__snprintf_chk@plt+0x50cc>
   15bec:	ldr	r4, [r6, #20]
   15bf0:	cmn	r4, #1
   15bf4:	beq	15f88 <__snprintf_chk@plt+0x5088>
   15bf8:	ldr	r3, [sp, #8]
   15bfc:	ldr	sl, [fp, #4]
   15c00:	cmp	r3, r4
   15c04:	bls	15ef0 <__snprintf_chk@plt+0x4ff0>
   15c08:	ldr	r2, [fp]
   15c0c:	cmp	r2, r4
   15c10:	bhi	15c2c <__snprintf_chk@plt+0x4d2c>
   15c14:	sub	r1, sl, #16
   15c18:	add	r2, r2, #1
   15c1c:	cmp	r2, r4
   15c20:	str	r9, [r1, r2, lsl #4]
   15c24:	bls	15c18 <__snprintf_chk@plt+0x4d18>
   15c28:	str	r2, [fp]
   15c2c:	ldr	r3, [sl, r4, lsl #4]
   15c30:	cmp	r3, #0
   15c34:	bne	1623c <__snprintf_chk@plt+0x533c>
   15c38:	mov	r3, r7
   15c3c:	mov	r2, #5
   15c40:	str	r2, [sl, r4, lsl #4]
   15c44:	ldrb	r4, [r3], #1
   15c48:	mov	r5, r7
   15c4c:	cmp	r4, #46	; 0x2e
   15c50:	mov	r7, r3
   15c54:	bne	15a00 <__snprintf_chk@plt+0x4b00>
   15c58:	ldrb	r3, [r5, #1]
   15c5c:	cmp	r3, #42	; 0x2a
   15c60:	bne	15ea8 <__snprintf_chk@plt+0x4fa8>
   15c64:	add	r7, r5, #2
   15c68:	str	r5, [r6, #24]
   15c6c:	str	r7, [r6, #28]
   15c70:	ldrb	r1, [r5, #2]
   15c74:	ldr	r3, [sp, #28]
   15c78:	sub	r1, r1, #48	; 0x30
   15c7c:	cmp	r3, #2
   15c80:	movcc	r3, #2
   15c84:	str	r3, [sp, #28]
   15c88:	uxtb	r3, r1
   15c8c:	cmp	r3, #9
   15c90:	bls	163bc <__snprintf_chk@plt+0x54bc>
   15c94:	ldr	r4, [r6, #32]
   15c98:	cmn	r4, #1
   15c9c:	beq	1639c <__snprintf_chk@plt+0x549c>
   15ca0:	ldr	r3, [sp, #8]
   15ca4:	ldr	sl, [fp, #4]
   15ca8:	cmp	r3, r4
   15cac:	bls	162c0 <__snprintf_chk@plt+0x53c0>
   15cb0:	ldr	r2, [fp]
   15cb4:	cmp	r2, r4
   15cb8:	bhi	15cd4 <__snprintf_chk@plt+0x4dd4>
   15cbc:	sub	r1, sl, #16
   15cc0:	add	r2, r2, #1
   15cc4:	cmp	r2, r4
   15cc8:	str	r9, [r1, r2, lsl #4]
   15ccc:	bls	15cc0 <__snprintf_chk@plt+0x4dc0>
   15cd0:	str	r2, [fp]
   15cd4:	ldr	r3, [sl, r4, lsl #4]
   15cd8:	cmp	r3, #0
   15cdc:	bne	16320 <__snprintf_chk@plt+0x5420>
   15ce0:	mov	r3, #5
   15ce4:	str	r3, [sl, r4, lsl #4]
   15ce8:	mov	r5, r7
   15cec:	ldrb	r4, [r7]
   15cf0:	b	15a00 <__snprintf_chk@plt+0x4b00>
   15cf4:	mov	r4, #99	; 0x63
   15cf8:	mov	r3, #14
   15cfc:	str	r3, [sp, #20]
   15d00:	cmn	r8, #1
   15d04:	strne	r8, [r6, #40]	; 0x28
   15d08:	beq	161c0 <__snprintf_chk@plt+0x52c0>
   15d0c:	ldr	r3, [sp, #8]
   15d10:	ldr	sl, [fp, #4]
   15d14:	cmp	r3, r8
   15d18:	bls	16164 <__snprintf_chk@plt+0x5264>
   15d1c:	ldr	r3, [fp]
   15d20:	cmp	r3, r8
   15d24:	bhi	15d40 <__snprintf_chk@plt+0x4e40>
   15d28:	sub	r1, sl, #16
   15d2c:	add	r3, r3, #1
   15d30:	cmp	r3, r8
   15d34:	str	r9, [r1, r3, lsl #4]
   15d38:	bls	15d2c <__snprintf_chk@plt+0x4e2c>
   15d3c:	str	r3, [fp]
   15d40:	ldr	r3, [sl, r8, lsl #4]
   15d44:	cmp	r3, #0
   15d48:	bne	1614c <__snprintf_chk@plt+0x524c>
   15d4c:	ldr	r3, [sp, #20]
   15d50:	str	r3, [sl, r8, lsl #4]
   15d54:	ldr	r3, [sp, #4]
   15d58:	strb	r4, [r6, #36]	; 0x24
   15d5c:	ldr	r2, [sp, #24]
   15d60:	ldr	r4, [r3]
   15d64:	str	r5, [r6, #4]
   15d68:	add	r4, r4, #1
   15d6c:	cmp	r2, r4
   15d70:	str	r4, [r3]
   15d74:	ldrhi	r3, [r3, #4]
   15d78:	bhi	158a8 <__snprintf_chk@plt+0x49a8>
   15d7c:	ldr	r3, [sp, #24]
   15d80:	cmp	r3, #0
   15d84:	blt	16498 <__snprintf_chk@plt+0x5598>
   15d88:	ldr	r3, [sp, #24]
   15d8c:	ldr	r2, [pc, #1896]	; 164fc <__snprintf_chk@plt+0x55fc>
   15d90:	lsl	r5, r3, #1
   15d94:	cmp	r5, r2
   15d98:	bhi	16498 <__snprintf_chk@plt+0x5598>
   15d9c:	ldr	r2, [sp, #4]
   15da0:	add	r1, r3, r3, lsl #2
   15da4:	ldr	r6, [r2, #4]
   15da8:	add	r1, r3, r1, lsl #1
   15dac:	ldr	r3, [sp, #36]	; 0x24
   15db0:	lsl	r1, r1, #3
   15db4:	cmp	r3, r6
   15db8:	beq	15f50 <__snprintf_chk@plt+0x5050>
   15dbc:	mov	r0, r6
   15dc0:	bl	10d44 <realloc@plt>
   15dc4:	subs	r3, r0, #0
   15dc8:	beq	16498 <__snprintf_chk@plt+0x5598>
   15dcc:	ldr	r2, [sp, #4]
   15dd0:	ldm	r2, {r4, r6}
   15dd4:	ldr	r2, [sp, #36]	; 0x24
   15dd8:	cmp	r2, r6
   15ddc:	beq	15f60 <__snprintf_chk@plt+0x5060>
   15de0:	ldr	r2, [sp, #4]
   15de4:	str	r5, [sp, #24]
   15de8:	str	r3, [r2, #4]
   15dec:	b	158a8 <__snprintf_chk@plt+0x49a8>
   15df0:	mov	r2, r7
   15df4:	ldrb	r3, [r2, #1]!
   15df8:	sub	r1, r3, #48	; 0x30
   15dfc:	cmp	r1, #9
   15e00:	bls	15df4 <__snprintf_chk@plt+0x4ef4>
   15e04:	cmp	r3, #36	; 0x24
   15e08:	mvnne	r8, #0
   15e0c:	bne	15978 <__snprintf_chk@plt+0x4a78>
   15e10:	mov	r2, #0
   15e14:	b	15e20 <__snprintf_chk@plt+0x4f20>
   15e18:	cmp	ip, #9
   15e1c:	bhi	1642c <__snprintf_chk@plt+0x552c>
   15e20:	ldr	r3, [pc, #1752]	; 16500 <__snprintf_chk@plt+0x5600>
   15e24:	mov	r1, r5
   15e28:	cmp	r2, r3
   15e2c:	addls	r2, r2, r2, lsl #2
   15e30:	mvnhi	r3, #0
   15e34:	lslls	r3, r2, #1
   15e38:	ldrb	ip, [r5, #1]!
   15e3c:	adds	r3, r0, r3
   15e40:	mov	r2, r3
   15e44:	sub	r0, ip, #48	; 0x30
   15e48:	uxtb	ip, r0
   15e4c:	bcc	15e18 <__snprintf_chk@plt+0x4f18>
   15e50:	cmp	ip, #9
   15e54:	mvn	r3, #0
   15e58:	mov	r1, r5
   15e5c:	bls	15e38 <__snprintf_chk@plt+0x4f38>
   15e60:	mov	sl, fp
   15e64:	ldr	fp, [sp, #4]
   15e68:	ldr	r3, [sl, #4]
   15e6c:	ldr	r2, [sp, #12]
   15e70:	cmp	r2, r3
   15e74:	beq	15e80 <__snprintf_chk@plt+0x4f80>
   15e78:	mov	r0, r3
   15e7c:	bl	10cd8 <free@plt>
   15e80:	ldr	r0, [fp, #4]
   15e84:	ldr	r3, [sp, #36]	; 0x24
   15e88:	cmp	r3, r0
   15e8c:	beq	15e94 <__snprintf_chk@plt+0x4f94>
   15e90:	bl	10cd8 <free@plt>
   15e94:	bl	10e1c <__errno_location@plt>
   15e98:	mov	r3, #22
   15e9c:	mvn	r1, #0
   15ea0:	str	r3, [r0]
   15ea4:	b	158dc <__snprintf_chk@plt+0x49dc>
   15ea8:	str	r5, [r6, #24]
   15eac:	ldrb	r3, [r5, #1]
   15eb0:	sub	r3, r3, #48	; 0x30
   15eb4:	cmp	r3, #9
   15eb8:	bhi	16474 <__snprintf_chk@plt+0x5574>
   15ebc:	ldrb	r3, [r7, #1]!
   15ec0:	sub	r3, r3, #48	; 0x30
   15ec4:	cmp	r3, #9
   15ec8:	bls	15ebc <__snprintf_chk@plt+0x4fbc>
   15ecc:	sub	r3, r7, r5
   15ed0:	mov	r5, r7
   15ed4:	ldr	r2, [sp, #28]
   15ed8:	str	r7, [r6, #28]
   15edc:	cmp	r2, r3
   15ee0:	movcs	r3, r2
   15ee4:	ldrb	r4, [r7]
   15ee8:	str	r3, [sp, #28]
   15eec:	b	15a00 <__snprintf_chk@plt+0x4b00>
   15ef0:	ldr	r3, [sp, #8]
   15ef4:	lsl	r3, r3, #1
   15ef8:	cmp	r3, r4
   15efc:	str	r3, [sp, #8]
   15f00:	addls	r3, r4, #1
   15f04:	strls	r3, [sp, #8]
   15f08:	ldr	r3, [sp, #8]
   15f0c:	cmn	r3, #-268435455	; 0xf0000001
   15f10:	bhi	164e4 <__snprintf_chk@plt+0x55e4>
   15f14:	ldr	r2, [sp, #12]
   15f18:	lsl	r1, r3, #4
   15f1c:	cmp	r2, sl
   15f20:	beq	1627c <__snprintf_chk@plt+0x537c>
   15f24:	mov	r0, sl
   15f28:	bl	10d44 <realloc@plt>
   15f2c:	ldr	r3, [fp, #4]
   15f30:	subs	sl, r0, #0
   15f34:	beq	164e8 <__snprintf_chk@plt+0x55e8>
   15f38:	ldr	r2, [sp, #12]
   15f3c:	cmp	r2, r3
   15f40:	ldr	r2, [fp]
   15f44:	beq	164f0 <__snprintf_chk@plt+0x55f0>
   15f48:	str	sl, [fp, #4]
   15f4c:	b	15c0c <__snprintf_chk@plt+0x4d0c>
   15f50:	mov	r0, r1
   15f54:	bl	10db0 <malloc@plt>
   15f58:	subs	r3, r0, #0
   15f5c:	beq	16378 <__snprintf_chk@plt+0x5478>
   15f60:	add	r2, r4, r4, lsl #2
   15f64:	mov	r0, r3
   15f68:	add	r2, r4, r2, lsl #1
   15f6c:	mov	r1, r6
   15f70:	lsl	r2, r2, #2
   15f74:	bl	10cf0 <memcpy@plt>
   15f78:	ldr	r2, [sp, #4]
   15f7c:	ldr	r4, [r2]
   15f80:	mov	r3, r0
   15f84:	b	15de0 <__snprintf_chk@plt+0x4ee0>
   15f88:	ldr	r3, [sp, #32]
   15f8c:	cmn	r3, #1
   15f90:	str	r3, [r6, #20]
   15f94:	add	r3, r3, #1
   15f98:	beq	15e60 <__snprintf_chk@plt+0x4f60>
   15f9c:	ldr	r4, [sp, #32]
   15fa0:	str	r3, [sp, #32]
   15fa4:	b	15bf8 <__snprintf_chk@plt+0x4cf8>
   15fa8:	cmp	r3, #15
   15fac:	movgt	r3, #12
   15fb0:	strgt	r3, [sp, #20]
   15fb4:	bgt	15d00 <__snprintf_chk@plt+0x4e00>
   15fb8:	tst	r3, #4
   15fbc:	movne	r3, #12
   15fc0:	moveq	r3, #11
   15fc4:	str	r3, [sp, #20]
   15fc8:	b	15d00 <__snprintf_chk@plt+0x4e00>
   15fcc:	mov	r1, r7
   15fd0:	ldrb	r2, [r1, #1]!
   15fd4:	sub	r0, r2, #48	; 0x30
   15fd8:	cmp	r0, #9
   15fdc:	bls	15fd0 <__snprintf_chk@plt+0x50d0>
   15fe0:	cmp	r2, #36	; 0x24
   15fe4:	bne	15bec <__snprintf_chk@plt+0x4cec>
   15fe8:	mov	r1, #0
   15fec:	b	15ff8 <__snprintf_chk@plt+0x50f8>
   15ff0:	cmp	ip, #9
   15ff4:	bhi	164b4 <__snprintf_chk@plt+0x55b4>
   15ff8:	ldr	r2, [pc, #1280]	; 16500 <__snprintf_chk@plt+0x5600>
   15ffc:	mov	r0, r7
   16000:	cmp	r1, r2
   16004:	addls	r1, r1, r1, lsl #2
   16008:	mvnhi	r2, #0
   1600c:	lslls	r2, r1, #1
   16010:	ldrb	ip, [r7, #1]!
   16014:	adds	r2, r3, r2
   16018:	mov	r1, r2
   1601c:	sub	r3, ip, #48	; 0x30
   16020:	uxtb	ip, r3
   16024:	bcc	15ff0 <__snprintf_chk@plt+0x50f0>
   16028:	cmp	ip, #9
   1602c:	mvn	r2, #0
   16030:	mov	r0, r7
   16034:	bls	16010 <__snprintf_chk@plt+0x5110>
   16038:	b	15e60 <__snprintf_chk@plt+0x4f60>
   1603c:	cmp	r3, #7
   16040:	movgt	r3, #16
   16044:	movle	r3, #15
   16048:	str	r3, [sp, #20]
   1604c:	b	15d00 <__snprintf_chk@plt+0x4e00>
   16050:	cmp	r3, #15
   16054:	bgt	1634c <__snprintf_chk@plt+0x544c>
   16058:	tst	r3, #4
   1605c:	bne	1634c <__snprintf_chk@plt+0x544c>
   16060:	cmp	r3, #7
   16064:	movgt	r3, #7
   16068:	strgt	r3, [sp, #20]
   1606c:	bgt	15d00 <__snprintf_chk@plt+0x4e00>
   16070:	tst	r3, #2
   16074:	movne	r3, #1
   16078:	strne	r3, [sp, #20]
   1607c:	bne	15d00 <__snprintf_chk@plt+0x4e00>
   16080:	tst	r3, #1
   16084:	movne	r3, #3
   16088:	moveq	r3, #5
   1608c:	str	r3, [sp, #20]
   16090:	b	15d00 <__snprintf_chk@plt+0x4e00>
   16094:	cmp	r3, #7
   16098:	movgt	r3, #14
   1609c:	movle	r3, #13
   160a0:	str	r3, [sp, #20]
   160a4:	b	15d00 <__snprintf_chk@plt+0x4e00>
   160a8:	cmp	r3, #15
   160ac:	bgt	16340 <__snprintf_chk@plt+0x5440>
   160b0:	tst	r3, #4
   160b4:	bne	16340 <__snprintf_chk@plt+0x5440>
   160b8:	cmp	r3, #7
   160bc:	movgt	r3, #8
   160c0:	strgt	r3, [sp, #20]
   160c4:	bgt	15d00 <__snprintf_chk@plt+0x4e00>
   160c8:	tst	r3, #2
   160cc:	movne	r3, #2
   160d0:	strne	r3, [sp, #20]
   160d4:	bne	15d00 <__snprintf_chk@plt+0x4e00>
   160d8:	tst	r3, #1
   160dc:	movne	r3, #4
   160e0:	moveq	r3, #6
   160e4:	str	r3, [sp, #20]
   160e8:	b	15d00 <__snprintf_chk@plt+0x4e00>
   160ec:	mov	r3, #16
   160f0:	str	r3, [sp, #20]
   160f4:	mov	r4, #115	; 0x73
   160f8:	b	15d00 <__snprintf_chk@plt+0x4e00>
   160fc:	mov	r3, #17
   16100:	str	r3, [sp, #20]
   16104:	b	15d00 <__snprintf_chk@plt+0x4e00>
   16108:	cmp	r3, #15
   1610c:	bgt	16334 <__snprintf_chk@plt+0x5434>
   16110:	tst	r3, #4
   16114:	bne	16334 <__snprintf_chk@plt+0x5434>
   16118:	cmp	r3, #7
   1611c:	movgt	r3, #21
   16120:	strgt	r3, [sp, #20]
   16124:	bgt	15d00 <__snprintf_chk@plt+0x4e00>
   16128:	tst	r3, #2
   1612c:	movne	r3, #18
   16130:	strne	r3, [sp, #20]
   16134:	bne	15d00 <__snprintf_chk@plt+0x4e00>
   16138:	tst	r3, #1
   1613c:	movne	r3, #19
   16140:	moveq	r3, #20
   16144:	str	r3, [sp, #20]
   16148:	b	15d00 <__snprintf_chk@plt+0x4e00>
   1614c:	ldr	r2, [sp, #20]
   16150:	cmp	r3, r2
   16154:	beq	15d54 <__snprintf_chk@plt+0x4e54>
   16158:	mov	r3, sl
   1615c:	ldr	fp, [sp, #4]
   16160:	b	15e6c <__snprintf_chk@plt+0x4f6c>
   16164:	ldr	r3, [sp, #8]
   16168:	lsl	r3, r3, #1
   1616c:	cmp	r3, r8
   16170:	str	r3, [sp, #8]
   16174:	addls	r3, r8, #1
   16178:	strls	r3, [sp, #8]
   1617c:	ldr	r3, [sp, #8]
   16180:	cmn	r3, #-268435455	; 0xf0000001
   16184:	bhi	164e4 <__snprintf_chk@plt+0x55e4>
   16188:	ldr	r2, [sp, #12]
   1618c:	lsl	r1, r3, #4
   16190:	cmp	r2, sl
   16194:	beq	16250 <__snprintf_chk@plt+0x5350>
   16198:	mov	r0, sl
   1619c:	bl	10d44 <realloc@plt>
   161a0:	subs	sl, r0, #0
   161a4:	beq	16498 <__snprintf_chk@plt+0x5598>
   161a8:	ldr	r3, [fp, #4]
   161ac:	ldr	r2, [sp, #12]
   161b0:	cmp	r2, r3
   161b4:	beq	164d8 <__snprintf_chk@plt+0x55d8>
   161b8:	str	sl, [fp, #4]
   161bc:	b	15d1c <__snprintf_chk@plt+0x4e1c>
   161c0:	ldr	r3, [sp, #32]
   161c4:	cmn	r3, #1
   161c8:	str	r3, [r6, #40]	; 0x28
   161cc:	add	r3, r3, #1
   161d0:	beq	15e60 <__snprintf_chk@plt+0x4f60>
   161d4:	ldr	r8, [sp, #32]
   161d8:	str	r3, [sp, #32]
   161dc:	b	15d0c <__snprintf_chk@plt+0x4e0c>
   161e0:	str	r5, [r6, #12]
   161e4:	ldrb	r3, [r5]
   161e8:	sub	r3, r3, #48	; 0x30
   161ec:	cmp	r3, #9
   161f0:	bhi	16230 <__snprintf_chk@plt+0x5330>
   161f4:	mov	r7, r5
   161f8:	b	16200 <__snprintf_chk@plt+0x5300>
   161fc:	mov	r7, r2
   16200:	ldrb	r3, [r7, #1]
   16204:	add	r2, r7, #1
   16208:	sub	r3, r3, #48	; 0x30
   1620c:	cmp	r3, #9
   16210:	bls	161fc <__snprintf_chk@plt+0x52fc>
   16214:	ldr	r3, [sp, #16]
   16218:	sub	r5, r2, r5
   1621c:	cmp	r3, r5
   16220:	movcc	r3, r5
   16224:	add	r7, r7, #2
   16228:	mov	r5, r2
   1622c:	str	r3, [sp, #16]
   16230:	str	r5, [r6, #16]
   16234:	ldrb	r4, [r5]
   16238:	b	159f8 <__snprintf_chk@plt+0x4af8>
   1623c:	cmp	r3, #5
   16240:	bne	16158 <__snprintf_chk@plt+0x5258>
   16244:	mov	r5, r7
   16248:	ldrb	r4, [r7], #1
   1624c:	b	159f8 <__snprintf_chk@plt+0x4af8>
   16250:	mov	r0, r1
   16254:	bl	10db0 <malloc@plt>
   16258:	subs	r3, r0, #0
   1625c:	beq	1628c <__snprintf_chk@plt+0x538c>
   16260:	ldr	r2, [fp]
   16264:	mov	r1, sl
   16268:	mov	r0, r3
   1626c:	lsl	r2, r2, #4
   16270:	bl	10cf0 <memcpy@plt>
   16274:	mov	sl, r0
   16278:	b	161b8 <__snprintf_chk@plt+0x52b8>
   1627c:	mov	r0, r1
   16280:	bl	10db0 <malloc@plt>
   16284:	subs	r3, r0, #0
   16288:	bne	16358 <__snprintf_chk@plt+0x5458>
   1628c:	ldr	fp, [sp, #4]
   16290:	ldr	r0, [fp, #4]
   16294:	ldr	r3, [sp, #36]	; 0x24
   16298:	cmp	r3, r0
   1629c:	beq	162a4 <__snprintf_chk@plt+0x53a4>
   162a0:	bl	10cd8 <free@plt>
   162a4:	bl	10e1c <__errno_location@plt>
   162a8:	mov	r3, #12
   162ac:	mvn	r1, #0
   162b0:	str	r3, [r0]
   162b4:	mov	r0, r1
   162b8:	add	sp, sp, #44	; 0x2c
   162bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162c0:	ldr	r3, [sp, #8]
   162c4:	lsl	r3, r3, #1
   162c8:	cmp	r3, r4
   162cc:	str	r3, [sp, #8]
   162d0:	addls	r3, r4, #1
   162d4:	strls	r3, [sp, #8]
   162d8:	ldr	r3, [sp, #8]
   162dc:	cmn	r3, #-268435455	; 0xf0000001
   162e0:	bhi	164e4 <__snprintf_chk@plt+0x55e4>
   162e4:	ldr	r2, [sp, #12]
   162e8:	lsl	r1, r3, #4
   162ec:	cmp	r2, sl
   162f0:	beq	16444 <__snprintf_chk@plt+0x5544>
   162f4:	mov	r0, sl
   162f8:	bl	10d44 <realloc@plt>
   162fc:	ldr	r3, [fp, #4]
   16300:	subs	sl, r0, #0
   16304:	beq	164e8 <__snprintf_chk@plt+0x55e8>
   16308:	ldr	r2, [sp, #12]
   1630c:	cmp	r2, r3
   16310:	ldr	r2, [fp]
   16314:	beq	164cc <__snprintf_chk@plt+0x55cc>
   16318:	str	sl, [fp, #4]
   1631c:	b	15cb4 <__snprintf_chk@plt+0x4db4>
   16320:	cmp	r3, #5
   16324:	bne	16158 <__snprintf_chk@plt+0x5258>
   16328:	ldrb	r4, [r7]
   1632c:	mov	r5, r7
   16330:	b	15a00 <__snprintf_chk@plt+0x4b00>
   16334:	mov	r3, #22
   16338:	str	r3, [sp, #20]
   1633c:	b	15d00 <__snprintf_chk@plt+0x4e00>
   16340:	mov	r3, #10
   16344:	str	r3, [sp, #20]
   16348:	b	15d00 <__snprintf_chk@plt+0x4e00>
   1634c:	mov	r3, #9
   16350:	str	r3, [sp, #20]
   16354:	b	15d00 <__snprintf_chk@plt+0x4e00>
   16358:	ldr	r2, [fp]
   1635c:	lsl	r2, r2, #4
   16360:	mov	r1, sl
   16364:	mov	r0, r3
   16368:	bl	10cf0 <memcpy@plt>
   1636c:	ldr	r2, [fp]
   16370:	mov	sl, r0
   16374:	b	15f48 <__snprintf_chk@plt+0x5048>
   16378:	mov	sl, fp
   1637c:	ldr	r2, [sp, #12]
   16380:	ldr	r3, [sl, #4]
   16384:	ldr	fp, [sp, #4]
   16388:	cmp	r2, r3
   1638c:	beq	162a4 <__snprintf_chk@plt+0x53a4>
   16390:	mov	r0, r3
   16394:	bl	10cd8 <free@plt>
   16398:	b	16290 <__snprintf_chk@plt+0x5390>
   1639c:	ldr	r3, [sp, #32]
   163a0:	cmn	r3, #1
   163a4:	str	r3, [r6, #32]
   163a8:	add	r3, r3, #1
   163ac:	beq	15e60 <__snprintf_chk@plt+0x4f60>
   163b0:	ldr	r4, [sp, #32]
   163b4:	str	r3, [sp, #32]
   163b8:	b	15ca0 <__snprintf_chk@plt+0x4da0>
   163bc:	mov	r2, r7
   163c0:	ldrb	r3, [r2, #1]!
   163c4:	sub	r0, r3, #48	; 0x30
   163c8:	cmp	r0, #9
   163cc:	bls	163c0 <__snprintf_chk@plt+0x54c0>
   163d0:	cmp	r3, #36	; 0x24
   163d4:	bne	15c94 <__snprintf_chk@plt+0x4d94>
   163d8:	mov	r2, #0
   163dc:	b	163e8 <__snprintf_chk@plt+0x54e8>
   163e0:	cmp	ip, #9
   163e4:	bhi	16480 <__snprintf_chk@plt+0x5580>
   163e8:	ldr	r3, [pc, #272]	; 16500 <__snprintf_chk@plt+0x5600>
   163ec:	mov	r0, r7
   163f0:	cmp	r2, r3
   163f4:	addls	r2, r2, r2, lsl #2
   163f8:	mvnhi	r3, #0
   163fc:	lslls	r3, r2, #1
   16400:	ldrb	ip, [r7, #1]!
   16404:	adds	r3, r1, r3
   16408:	mov	r2, r3
   1640c:	sub	r1, ip, #48	; 0x30
   16410:	uxtb	ip, r1
   16414:	bcc	163e0 <__snprintf_chk@plt+0x54e0>
   16418:	cmp	ip, #9
   1641c:	mvn	r3, #0
   16420:	mov	r0, r7
   16424:	bls	16400 <__snprintf_chk@plt+0x5500>
   16428:	b	15e60 <__snprintf_chk@plt+0x4f60>
   1642c:	sub	r8, r3, #1
   16430:	cmn	r8, #3
   16434:	bhi	15e60 <__snprintf_chk@plt+0x4f60>
   16438:	add	r5, r1, #2
   1643c:	ldrb	r4, [r1, #2]
   16440:	b	15978 <__snprintf_chk@plt+0x4a78>
   16444:	mov	r0, r1
   16448:	bl	10db0 <malloc@plt>
   1644c:	subs	r3, r0, #0
   16450:	beq	1628c <__snprintf_chk@plt+0x538c>
   16454:	ldr	r2, [fp]
   16458:	lsl	r2, r2, #4
   1645c:	mov	r1, sl
   16460:	mov	r0, r3
   16464:	bl	10cf0 <memcpy@plt>
   16468:	ldr	r2, [fp]
   1646c:	mov	sl, r0
   16470:	b	16318 <__snprintf_chk@plt+0x5418>
   16474:	mov	r5, r7
   16478:	mov	r3, #1
   1647c:	b	15ed4 <__snprintf_chk@plt+0x4fd4>
   16480:	sub	r4, r3, #1
   16484:	cmn	r4, #3
   16488:	bhi	15e60 <__snprintf_chk@plt+0x4f60>
   1648c:	str	r4, [r6, #32]
   16490:	add	r7, r0, #2
   16494:	b	15ca0 <__snprintf_chk@plt+0x4da0>
   16498:	mov	sl, fp
   1649c:	ldr	fp, [sp, #4]
   164a0:	ldr	r3, [sl, #4]
   164a4:	ldr	r2, [sp, #12]
   164a8:	cmp	r2, r3
   164ac:	bne	16390 <__snprintf_chk@plt+0x5490>
   164b0:	b	16290 <__snprintf_chk@plt+0x5390>
   164b4:	sub	r4, r2, #1
   164b8:	cmn	r4, #3
   164bc:	bhi	15e60 <__snprintf_chk@plt+0x4f60>
   164c0:	str	r4, [r6, #20]
   164c4:	add	r7, r0, #2
   164c8:	b	15bf8 <__snprintf_chk@plt+0x4cf8>
   164cc:	mov	r3, sl
   164d0:	ldr	sl, [sp, #12]
   164d4:	b	16458 <__snprintf_chk@plt+0x5558>
   164d8:	mov	r3, sl
   164dc:	mov	sl, r2
   164e0:	b	16260 <__snprintf_chk@plt+0x5360>
   164e4:	mov	r3, sl
   164e8:	ldr	fp, [sp, #4]
   164ec:	b	164a4 <__snprintf_chk@plt+0x55a4>
   164f0:	mov	r3, sl
   164f4:	ldr	sl, [sp, #12]
   164f8:	b	1635c <__snprintf_chk@plt+0x545c>
   164fc:	ldrbeq	r7, [r1, #1117]	; 0x45d
   16500:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   16504:	subs	r2, r1, #1
   16508:	bxeq	lr
   1650c:	bcc	166e4 <__snprintf_chk@plt+0x57e4>
   16510:	cmp	r0, r1
   16514:	bls	166c8 <__snprintf_chk@plt+0x57c8>
   16518:	tst	r1, r2
   1651c:	beq	166d4 <__snprintf_chk@plt+0x57d4>
   16520:	clz	r3, r0
   16524:	clz	r2, r1
   16528:	sub	r3, r2, r3
   1652c:	rsbs	r3, r3, #31
   16530:	addne	r3, r3, r3, lsl #1
   16534:	mov	r2, #0
   16538:	addne	pc, pc, r3, lsl #2
   1653c:	nop			; (mov r0, r0)
   16540:	cmp	r0, r1, lsl #31
   16544:	adc	r2, r2, r2
   16548:	subcs	r0, r0, r1, lsl #31
   1654c:	cmp	r0, r1, lsl #30
   16550:	adc	r2, r2, r2
   16554:	subcs	r0, r0, r1, lsl #30
   16558:	cmp	r0, r1, lsl #29
   1655c:	adc	r2, r2, r2
   16560:	subcs	r0, r0, r1, lsl #29
   16564:	cmp	r0, r1, lsl #28
   16568:	adc	r2, r2, r2
   1656c:	subcs	r0, r0, r1, lsl #28
   16570:	cmp	r0, r1, lsl #27
   16574:	adc	r2, r2, r2
   16578:	subcs	r0, r0, r1, lsl #27
   1657c:	cmp	r0, r1, lsl #26
   16580:	adc	r2, r2, r2
   16584:	subcs	r0, r0, r1, lsl #26
   16588:	cmp	r0, r1, lsl #25
   1658c:	adc	r2, r2, r2
   16590:	subcs	r0, r0, r1, lsl #25
   16594:	cmp	r0, r1, lsl #24
   16598:	adc	r2, r2, r2
   1659c:	subcs	r0, r0, r1, lsl #24
   165a0:	cmp	r0, r1, lsl #23
   165a4:	adc	r2, r2, r2
   165a8:	subcs	r0, r0, r1, lsl #23
   165ac:	cmp	r0, r1, lsl #22
   165b0:	adc	r2, r2, r2
   165b4:	subcs	r0, r0, r1, lsl #22
   165b8:	cmp	r0, r1, lsl #21
   165bc:	adc	r2, r2, r2
   165c0:	subcs	r0, r0, r1, lsl #21
   165c4:	cmp	r0, r1, lsl #20
   165c8:	adc	r2, r2, r2
   165cc:	subcs	r0, r0, r1, lsl #20
   165d0:	cmp	r0, r1, lsl #19
   165d4:	adc	r2, r2, r2
   165d8:	subcs	r0, r0, r1, lsl #19
   165dc:	cmp	r0, r1, lsl #18
   165e0:	adc	r2, r2, r2
   165e4:	subcs	r0, r0, r1, lsl #18
   165e8:	cmp	r0, r1, lsl #17
   165ec:	adc	r2, r2, r2
   165f0:	subcs	r0, r0, r1, lsl #17
   165f4:	cmp	r0, r1, lsl #16
   165f8:	adc	r2, r2, r2
   165fc:	subcs	r0, r0, r1, lsl #16
   16600:	cmp	r0, r1, lsl #15
   16604:	adc	r2, r2, r2
   16608:	subcs	r0, r0, r1, lsl #15
   1660c:	cmp	r0, r1, lsl #14
   16610:	adc	r2, r2, r2
   16614:	subcs	r0, r0, r1, lsl #14
   16618:	cmp	r0, r1, lsl #13
   1661c:	adc	r2, r2, r2
   16620:	subcs	r0, r0, r1, lsl #13
   16624:	cmp	r0, r1, lsl #12
   16628:	adc	r2, r2, r2
   1662c:	subcs	r0, r0, r1, lsl #12
   16630:	cmp	r0, r1, lsl #11
   16634:	adc	r2, r2, r2
   16638:	subcs	r0, r0, r1, lsl #11
   1663c:	cmp	r0, r1, lsl #10
   16640:	adc	r2, r2, r2
   16644:	subcs	r0, r0, r1, lsl #10
   16648:	cmp	r0, r1, lsl #9
   1664c:	adc	r2, r2, r2
   16650:	subcs	r0, r0, r1, lsl #9
   16654:	cmp	r0, r1, lsl #8
   16658:	adc	r2, r2, r2
   1665c:	subcs	r0, r0, r1, lsl #8
   16660:	cmp	r0, r1, lsl #7
   16664:	adc	r2, r2, r2
   16668:	subcs	r0, r0, r1, lsl #7
   1666c:	cmp	r0, r1, lsl #6
   16670:	adc	r2, r2, r2
   16674:	subcs	r0, r0, r1, lsl #6
   16678:	cmp	r0, r1, lsl #5
   1667c:	adc	r2, r2, r2
   16680:	subcs	r0, r0, r1, lsl #5
   16684:	cmp	r0, r1, lsl #4
   16688:	adc	r2, r2, r2
   1668c:	subcs	r0, r0, r1, lsl #4
   16690:	cmp	r0, r1, lsl #3
   16694:	adc	r2, r2, r2
   16698:	subcs	r0, r0, r1, lsl #3
   1669c:	cmp	r0, r1, lsl #2
   166a0:	adc	r2, r2, r2
   166a4:	subcs	r0, r0, r1, lsl #2
   166a8:	cmp	r0, r1, lsl #1
   166ac:	adc	r2, r2, r2
   166b0:	subcs	r0, r0, r1, lsl #1
   166b4:	cmp	r0, r1
   166b8:	adc	r2, r2, r2
   166bc:	subcs	r0, r0, r1
   166c0:	mov	r0, r2
   166c4:	bx	lr
   166c8:	moveq	r0, #1
   166cc:	movne	r0, #0
   166d0:	bx	lr
   166d4:	clz	r2, r1
   166d8:	rsb	r2, r2, #31
   166dc:	lsr	r0, r0, r2
   166e0:	bx	lr
   166e4:	cmp	r0, #0
   166e8:	mvnne	r0, #0
   166ec:	b	16710 <__snprintf_chk@plt+0x5810>
   166f0:	cmp	r1, #0
   166f4:	beq	166e4 <__snprintf_chk@plt+0x57e4>
   166f8:	push	{r0, r1, lr}
   166fc:	bl	16504 <__snprintf_chk@plt+0x5604>
   16700:	pop	{r1, r2, lr}
   16704:	mul	r3, r2, r0
   16708:	sub	r1, r1, r3
   1670c:	bx	lr
   16710:	push	{r1, lr}
   16714:	mov	r0, #8
   16718:	bl	10cb4 <raise@plt>
   1671c:	pop	{r1, pc}
   16720:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16724:	mov	r7, r0
   16728:	ldr	r6, [pc, #72]	; 16778 <__snprintf_chk@plt+0x5878>
   1672c:	ldr	r5, [pc, #72]	; 1677c <__snprintf_chk@plt+0x587c>
   16730:	add	r6, pc, r6
   16734:	add	r5, pc, r5
   16738:	sub	r6, r6, r5
   1673c:	mov	r8, r1
   16740:	mov	r9, r2
   16744:	bl	10c7c <calloc@plt-0x20>
   16748:	asrs	r6, r6, #2
   1674c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16750:	mov	r4, #0
   16754:	add	r4, r4, #1
   16758:	ldr	r3, [r5], #4
   1675c:	mov	r2, r9
   16760:	mov	r1, r8
   16764:	mov	r0, r7
   16768:	blx	r3
   1676c:	cmp	r6, r4
   16770:	bne	16754 <__snprintf_chk@plt+0x5854>
   16774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16778:	andeq	r1, r1, ip, asr #15
   1677c:	andeq	r1, r1, r4, asr #15
   16780:	bx	lr
   16784:	ldr	r3, [pc, #12]	; 16798 <__snprintf_chk@plt+0x5898>
   16788:	mov	r1, #0
   1678c:	add	r3, pc, r3
   16790:	ldr	r2, [r3]
   16794:	b	10e28 <__cxa_atexit@plt>
   16798:	andeq	r1, r1, r0, asr r9

Disassembly of section .fini:

0001679c <.fini>:
   1679c:	push	{r3, lr}
   167a0:	pop	{r3, pc}
