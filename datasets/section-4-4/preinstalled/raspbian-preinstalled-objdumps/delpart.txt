
raspbian-preinstalled/delpart:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	11018 <strspn@plt+0x374>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <raise@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <raise@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	muleq	r1, r4, r4

00010aac <raise@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1172]!	; 0x494

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1164]!	; 0x48c

00010ac4 <strtol@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1156]!	; 0x484

00010ad0 <strcspn@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1148]!	; 0x47c

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1140]!	; 0x474

00010ae8 <strndup@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1132]!	; 0x46c

00010af4 <memcpy@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1124]!	; 0x464

00010b00 <__strtoull_internal@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1116]!	; 0x45c

00010b0c <dcgettext@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1108]!	; 0x454

00010b18 <strdup@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1100]!	; 0x44c

00010b24 <__stack_chk_fail@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1092]!	; 0x444

00010b30 <textdomain@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1084]!	; 0x43c

00010b3c <err@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1076]!	; 0x434

00010b48 <ioctl@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1068]!	; 0x42c

00010b54 <open64@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1060]!	; 0x424

00010b60 <malloc@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1052]!	; 0x41c

00010b6c <__libc_start_main@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1044]!	; 0x414

00010b78 <__gmon_start__@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1036]!	; 0x40c

00010b84 <getopt_long@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1028]!	; 0x404

00010b90 <__ctype_b_loc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1020]!	; 0x3fc

00010b9c <exit@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1012]!	; 0x3f4

00010ba8 <strtoul@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1004]!	; 0x3ec

00010bb4 <strlen@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #996]!	; 0x3e4

00010bc0 <strchr@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #988]!	; 0x3dc

00010bcc <warnx@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #980]!	; 0x3d4

00010bd8 <__errno_location@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #972]!	; 0x3cc

00010be4 <__vasprintf_chk@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #964]!	; 0x3c4

00010bf0 <memset@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #956]!	; 0x3bc

00010bfc <fgetc@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #948]!	; 0x3b4

00010c08 <__printf_chk@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #940]!	; 0x3ac

00010c14 <strtod@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c20 <__fprintf_chk@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #924]!	; 0x39c

00010c2c <setlocale@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #916]!	; 0x394

00010c38 <errx@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #77824	; 0x13000
   10c40:	ldr	pc, [ip, #908]!	; 0x38c

00010c44 <fputc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #77824	; 0x13000
   10c4c:	ldr	pc, [ip, #900]!	; 0x384

00010c50 <localeconv@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #77824	; 0x13000
   10c58:	ldr	pc, [ip, #892]!	; 0x37c

00010c5c <__strtoll_internal@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #77824	; 0x13000
   10c64:	ldr	pc, [ip, #884]!	; 0x374

00010c68 <bindtextdomain@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #77824	; 0x13000
   10c70:	ldr	pc, [ip, #876]!	; 0x36c

00010c74 <fputs@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #77824	; 0x13000
   10c7c:	ldr	pc, [ip, #868]!	; 0x364

00010c80 <strncmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #77824	; 0x13000
   10c88:	ldr	pc, [ip, #860]!	; 0x35c

00010c8c <abort@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #77824	; 0x13000
   10c94:	ldr	pc, [ip, #852]!	; 0x354

00010c98 <__snprintf_chk@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #77824	; 0x13000
   10ca0:	ldr	pc, [ip, #844]!	; 0x34c

00010ca4 <strspn@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #77824	; 0x13000
   10cac:	ldr	pc, [ip, #836]!	; 0x344

Disassembly of section .text:

00010cb0 <.text>:
   10cb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   10cb4:	sub	sp, sp, #188	; 0xbc
   10cb8:	ldr	r5, [pc, #684]	; 10f6c <strspn@plt+0x2c8>
   10cbc:	mov	r7, r0
   10cc0:	mov	r6, r1
   10cc4:	ldr	r3, [r5]
   10cc8:	ldr	r1, [pc, #672]	; 10f70 <strspn@plt+0x2cc>
   10ccc:	mov	r0, #6
   10cd0:	str	r3, [sp, #180]	; 0xb4
   10cd4:	bl	10c2c <setlocale@plt>
   10cd8:	ldr	r1, [pc, #660]	; 10f74 <strspn@plt+0x2d0>
   10cdc:	ldr	r0, [pc, #660]	; 10f78 <strspn@plt+0x2d4>
   10ce0:	bl	10c68 <bindtextdomain@plt>
   10ce4:	mov	r4, #0
   10ce8:	ldr	r0, [pc, #648]	; 10f78 <strspn@plt+0x2d4>
   10cec:	bl	10b30 <textdomain@plt>
   10cf0:	mov	r1, r6
   10cf4:	mov	r0, r7
   10cf8:	str	r4, [sp]
   10cfc:	ldr	r3, [pc, #632]	; 10f7c <strspn@plt+0x2d8>
   10d00:	ldr	r2, [pc, #632]	; 10f80 <strspn@plt+0x2dc>
   10d04:	bl	10b84 <getopt_long@plt>
   10d08:	cmn	r0, #1
   10d0c:	beq	10d9c <strspn@plt+0xf8>
   10d10:	cmp	r0, #86	; 0x56
   10d14:	bne	10d5c <strspn@plt+0xb8>
   10d18:	mov	r2, #5
   10d1c:	ldr	r1, [pc, #608]	; 10f84 <strspn@plt+0x2e0>
   10d20:	mov	r0, r4
   10d24:	bl	10b0c <dcgettext@plt>
   10d28:	ldr	r2, [pc, #600]	; 10f88 <strspn@plt+0x2e4>
   10d2c:	ldr	r3, [pc, #600]	; 10f8c <strspn@plt+0x2e8>
   10d30:	ldr	r2, [r2]
   10d34:	mov	r1, r0
   10d38:	mov	r0, #1
   10d3c:	bl	10c08 <__printf_chk@plt>
   10d40:	ldr	r2, [sp, #180]	; 0xb4
   10d44:	ldr	r3, [r5]
   10d48:	mov	r0, #0
   10d4c:	cmp	r2, r3
   10d50:	bne	10f30 <strspn@plt+0x28c>
   10d54:	add	sp, sp, #188	; 0xbc
   10d58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10d5c:	cmp	r0, #104	; 0x68
   10d60:	beq	10e40 <strspn@plt+0x19c>
   10d64:	ldr	r3, [pc, #548]	; 10f90 <strspn@plt+0x2ec>
   10d68:	mov	r0, r4
   10d6c:	mov	r2, #5
   10d70:	ldr	r1, [pc, #540]	; 10f94 <strspn@plt+0x2f0>
   10d74:	ldr	r4, [r3]
   10d78:	bl	10b0c <dcgettext@plt>
   10d7c:	ldr	r3, [pc, #516]	; 10f88 <strspn@plt+0x2e4>
   10d80:	mov	r1, #1
   10d84:	ldr	r3, [r3]
   10d88:	mov	r2, r0
   10d8c:	mov	r0, r4
   10d90:	bl	10c20 <__fprintf_chk@plt>
   10d94:	mov	r0, #1
   10d98:	bl	10b9c <exit@plt>
   10d9c:	cmp	r7, #3
   10da0:	bne	10f34 <strspn@plt+0x290>
   10da4:	mov	r1, r4
   10da8:	ldr	r0, [r6, #4]
   10dac:	bl	10b54 <open64@plt>
   10db0:	subs	r9, r0, #0
   10db4:	blt	10f4c <strspn@plt+0x2a8>
   10db8:	mov	r2, #5
   10dbc:	ldr	r1, [pc, #468]	; 10f98 <strspn@plt+0x2f4>
   10dc0:	mov	r0, r4
   10dc4:	ldr	r6, [r6, #8]
   10dc8:	bl	10b0c <dcgettext@plt>
   10dcc:	mov	r7, #152	; 0x98
   10dd0:	mov	r1, r0
   10dd4:	mov	r0, r6
   10dd8:	bl	11cec <strspn@plt+0x1048>
   10ddc:	add	r6, sp, #24
   10de0:	mov	r2, r7
   10de4:	mov	r1, r4
   10de8:	mov	r8, r0
   10dec:	mov	r0, r6
   10df0:	bl	10bf0 <memset@plt>
   10df4:	mov	r3, #2
   10df8:	mov	r0, r9
   10dfc:	add	r2, sp, #8
   10e00:	ldr	r1, [pc, #404]	; 10f9c <strspn@plt+0x2f8>
   10e04:	str	r8, [sp, #40]	; 0x28
   10e08:	str	r7, [sp, #16]
   10e0c:	str	r6, [sp, #20]
   10e10:	str	r4, [sp, #12]
   10e14:	str	r3, [sp, #8]
   10e18:	bl	10b48 <ioctl@plt>
   10e1c:	cmp	r0, #0
   10e20:	beq	10d40 <strspn@plt+0x9c>
   10e24:	ldr	r1, [pc, #372]	; 10fa0 <strspn@plt+0x2fc>
   10e28:	mov	r0, r4
   10e2c:	mov	r2, #5
   10e30:	bl	10b0c <dcgettext@plt>
   10e34:	mov	r1, r0
   10e38:	mov	r0, #1
   10e3c:	bl	10b3c <err@plt>
   10e40:	ldr	r3, [pc, #348]	; 10fa4 <strspn@plt+0x300>
   10e44:	mov	r2, #5
   10e48:	ldr	r1, [pc, #344]	; 10fa8 <strspn@plt+0x304>
   10e4c:	ldr	r5, [r3]
   10e50:	mov	r0, r4
   10e54:	bl	10b0c <dcgettext@plt>
   10e58:	mov	r1, r5
   10e5c:	bl	10c74 <fputs@plt>
   10e60:	mov	r2, #5
   10e64:	ldr	r1, [pc, #320]	; 10fac <strspn@plt+0x308>
   10e68:	mov	r0, r4
   10e6c:	bl	10b0c <dcgettext@plt>
   10e70:	ldr	r3, [pc, #272]	; 10f88 <strspn@plt+0x2e4>
   10e74:	mov	r1, #1
   10e78:	ldr	r3, [r3]
   10e7c:	mov	r2, r0
   10e80:	mov	r0, r5
   10e84:	bl	10c20 <__fprintf_chk@plt>
   10e88:	mov	r1, r5
   10e8c:	mov	r0, #10
   10e90:	bl	10c44 <fputc@plt>
   10e94:	mov	r2, #5
   10e98:	ldr	r1, [pc, #272]	; 10fb0 <strspn@plt+0x30c>
   10e9c:	mov	r0, r4
   10ea0:	bl	10b0c <dcgettext@plt>
   10ea4:	mov	r1, r5
   10ea8:	bl	10c74 <fputs@plt>
   10eac:	mov	r2, #5
   10eb0:	ldr	r1, [pc, #252]	; 10fb4 <strspn@plt+0x310>
   10eb4:	mov	r0, r4
   10eb8:	bl	10b0c <dcgettext@plt>
   10ebc:	mov	r1, r5
   10ec0:	bl	10c74 <fputs@plt>
   10ec4:	mov	r2, #5
   10ec8:	ldr	r1, [pc, #232]	; 10fb8 <strspn@plt+0x314>
   10ecc:	mov	r0, r4
   10ed0:	bl	10b0c <dcgettext@plt>
   10ed4:	mov	r2, #5
   10ed8:	ldr	r1, [pc, #220]	; 10fbc <strspn@plt+0x318>
   10edc:	mov	r5, r0
   10ee0:	mov	r0, r4
   10ee4:	bl	10b0c <dcgettext@plt>
   10ee8:	ldr	r2, [pc, #208]	; 10fc0 <strspn@plt+0x31c>
   10eec:	mov	r3, r5
   10ef0:	str	r2, [sp]
   10ef4:	ldr	r1, [pc, #200]	; 10fc4 <strspn@plt+0x320>
   10ef8:	ldr	r2, [pc, #200]	; 10fc8 <strspn@plt+0x324>
   10efc:	str	r0, [sp, #4]
   10f00:	mov	r0, #1
   10f04:	bl	10c08 <__printf_chk@plt>
   10f08:	mov	r2, #5
   10f0c:	ldr	r1, [pc, #184]	; 10fcc <strspn@plt+0x328>
   10f10:	mov	r0, r4
   10f14:	bl	10b0c <dcgettext@plt>
   10f18:	ldr	r2, [pc, #176]	; 10fd0 <strspn@plt+0x32c>
   10f1c:	mov	r1, r0
   10f20:	mov	r0, #1
   10f24:	bl	10c08 <__printf_chk@plt>
   10f28:	mov	r0, r4
   10f2c:	bl	10b9c <exit@plt>
   10f30:	bl	10b24 <__stack_chk_fail@plt>
   10f34:	mov	r2, #5
   10f38:	ldr	r1, [pc, #148]	; 10fd4 <strspn@plt+0x330>
   10f3c:	mov	r0, r4
   10f40:	bl	10b0c <dcgettext@plt>
   10f44:	bl	10bcc <warnx@plt>
   10f48:	b	10d64 <strspn@plt+0xc0>
   10f4c:	mov	r2, #5
   10f50:	ldr	r1, [pc, #128]	; 10fd8 <strspn@plt+0x334>
   10f54:	mov	r0, r4
   10f58:	bl	10b0c <dcgettext@plt>
   10f5c:	ldr	r2, [r6, #4]
   10f60:	mov	r1, r0
   10f64:	mov	r0, #1
   10f68:	bl	10b3c <err@plt>
   10f6c:	andeq	r3, r2, r8, lsr lr
   10f70:	ldrdeq	r3, [r1], -r0
   10f74:	andeq	r3, r1, r4, lsl #5
   10f78:	muleq	r1, r8, r2
   10f7c:	andeq	r3, r1, r4, asr r2
   10f80:	andeq	r3, r1, r4, lsr #5
   10f84:	andeq	r3, r1, r8, lsr #5
   10f88:	andeq	r4, r2, r0, lsl r0
   10f8c:			; <UNDEFINED> instruction: 0x000132b4
   10f90:	andeq	r4, r2, r8, lsl r0
   10f94:			; <UNDEFINED> instruction: 0x000133bc
   10f98:	andeq	r3, r1, ip, lsl #8
   10f9c:	andeq	r1, r0, r9, ror #4
   10fa0:	andeq	r3, r1, r0, lsr r4
   10fa4:	andeq	r4, r2, ip, lsl r0
   10fa8:	andeq	r3, r1, r8, asr #5
   10fac:	ldrdeq	r3, [r1], -r4
   10fb0:	strdeq	r3, [r1], -ip
   10fb4:	andeq	r3, r1, r4, lsr r3
   10fb8:	andeq	r3, r1, r0, asr #6
   10fbc:	andeq	r3, r1, r4, asr r3
   10fc0:	andeq	r3, r1, r4, lsl #7
   10fc4:	andeq	r3, r1, r0, ror r3
   10fc8:	andeq	r3, r1, r4, ror #6
   10fcc:	muleq	r1, r4, r3
   10fd0:			; <UNDEFINED> instruction: 0x000133b0
   10fd4:	andeq	r3, r1, r4, ror #7
   10fd8:	strdeq	r3, [r1], -ip
   10fdc:	mov	fp, #0
   10fe0:	mov	lr, #0
   10fe4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fe8:	mov	r2, sp
   10fec:	push	{r2}		; (str r2, [sp, #-4]!)
   10ff0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ff4:	ldr	ip, [pc, #16]	; 1100c <strspn@plt+0x368>
   10ff8:	push	{ip}		; (str ip, [sp, #-4]!)
   10ffc:	ldr	r0, [pc, #12]	; 11010 <strspn@plt+0x36c>
   11000:	ldr	r3, [pc, #12]	; 11014 <strspn@plt+0x370>
   11004:	bl	10b6c <__libc_start_main@plt>
   11008:	bl	10c8c <abort@plt>
   1100c:	andeq	r3, r1, r4, asr #4
   11010:			; <UNDEFINED> instruction: 0x00010cb0
   11014:	andeq	r3, r1, r4, ror #3
   11018:	ldr	r3, [pc, #20]	; 11034 <strspn@plt+0x390>
   1101c:	ldr	r2, [pc, #20]	; 11038 <strspn@plt+0x394>
   11020:	add	r3, pc, r3
   11024:	ldr	r2, [r3, r2]
   11028:	cmp	r2, #0
   1102c:	bxeq	lr
   11030:	b	10b78 <__gmon_start__@plt>
   11034:	andeq	r2, r1, r4, lsl pc
   11038:	strheq	r0, [r0], -ip
   1103c:	ldr	r0, [pc, #24]	; 1105c <strspn@plt+0x3b8>
   11040:	ldr	r3, [pc, #24]	; 11060 <strspn@plt+0x3bc>
   11044:	cmp	r3, r0
   11048:	bxeq	lr
   1104c:	ldr	r3, [pc, #16]	; 11064 <strspn@plt+0x3c0>
   11050:	cmp	r3, #0
   11054:	bxeq	lr
   11058:	bx	r3
   1105c:	andeq	r4, r2, ip
   11060:	andeq	r4, r2, ip
   11064:	andeq	r0, r0, r0
   11068:	ldr	r0, [pc, #36]	; 11094 <strspn@plt+0x3f0>
   1106c:	ldr	r1, [pc, #36]	; 11098 <strspn@plt+0x3f4>
   11070:	sub	r1, r1, r0
   11074:	asr	r1, r1, #2
   11078:	add	r1, r1, r1, lsr #31
   1107c:	asrs	r1, r1, #1
   11080:	bxeq	lr
   11084:	ldr	r3, [pc, #16]	; 1109c <strspn@plt+0x3f8>
   11088:	cmp	r3, #0
   1108c:	bxeq	lr
   11090:	bx	r3
   11094:	andeq	r4, r2, ip
   11098:	andeq	r4, r2, ip
   1109c:	andeq	r0, r0, r0
   110a0:	push	{r4, lr}
   110a4:	ldr	r4, [pc, #24]	; 110c4 <strspn@plt+0x420>
   110a8:	ldrb	r3, [r4]
   110ac:	cmp	r3, #0
   110b0:	popne	{r4, pc}
   110b4:	bl	1103c <strspn@plt+0x398>
   110b8:	mov	r3, #1
   110bc:	strb	r3, [r4]
   110c0:	pop	{r4, pc}
   110c4:	andeq	r4, r2, r0, lsr #32
   110c8:	b	11068 <strspn@plt+0x3c4>
   110cc:	andeq	r0, r0, r0
   110d0:	cmp	r0, #0
   110d4:	mov	r3, #0
   110d8:	str	r3, [r1]
   110dc:	bxeq	lr
   110e0:	ldrsb	r2, [r0]
   110e4:	cmp	r2, #47	; 0x2f
   110e8:	bne	11124 <strspn@plt+0x480>
   110ec:	ldrsb	r3, [r0, #1]
   110f0:	cmp	r3, #47	; 0x2f
   110f4:	bne	1112c <strspn@plt+0x488>
   110f8:	add	r3, r0, #1
   110fc:	b	1110c <strspn@plt+0x468>
   11100:	ldrsb	r2, [r3]
   11104:	cmp	r2, #47	; 0x2f
   11108:	bne	1112c <strspn@plt+0x488>
   1110c:	cmp	r3, #0
   11110:	mov	r0, r3
   11114:	bxeq	lr
   11118:	ldrsb	r2, [r3], #1
   1111c:	cmp	r2, #47	; 0x2f
   11120:	beq	11100 <strspn@plt+0x45c>
   11124:	cmp	r2, #0
   11128:	beq	11168 <strspn@plt+0x4c4>
   1112c:	mov	r3, #1
   11130:	str	r3, [r1]
   11134:	ldrsb	r3, [r0, #1]
   11138:	add	r2, r0, #1
   1113c:	cmp	r3, #47	; 0x2f
   11140:	cmpne	r3, #0
   11144:	bxeq	lr
   11148:	rsb	r3, r0, #1
   1114c:	add	ip, r2, r3
   11150:	str	ip, [r1]
   11154:	ldrsb	ip, [r2, #1]!
   11158:	cmp	ip, #0
   1115c:	cmpne	ip, #47	; 0x2f
   11160:	bne	1114c <strspn@plt+0x4a8>
   11164:	bx	lr
   11168:	mov	r0, r2
   1116c:	bx	lr
   11170:	push	{r4, r5, r6, r7, r8, lr}
   11174:	mov	r7, r1
   11178:	ldrsb	r1, [r0]
   1117c:	cmp	r1, #0
   11180:	movne	r5, r0
   11184:	movne	r4, #0
   11188:	beq	111f4 <strspn@plt+0x550>
   1118c:	cmp	r1, #92	; 0x5c
   11190:	addne	r6, r5, r4
   11194:	beq	111c4 <strspn@plt+0x520>
   11198:	mov	r0, r7
   1119c:	bl	10bc0 <strchr@plt>
   111a0:	cmp	r0, #0
   111a4:	bne	111ec <strspn@plt+0x548>
   111a8:	ldrsb	r1, [r6, #1]!
   111ac:	add	r4, r4, #1
   111b0:	mov	r0, r4
   111b4:	cmp	r1, #0
   111b8:	popeq	{r4, r5, r6, r7, r8, pc}
   111bc:	cmp	r1, #92	; 0x5c
   111c0:	bne	11198 <strspn@plt+0x4f4>
   111c4:	add	r3, r5, r4
   111c8:	ldrsb	r3, [r3, #1]
   111cc:	cmp	r3, #0
   111d0:	beq	111ec <strspn@plt+0x548>
   111d4:	add	r4, r4, #2
   111d8:	mov	r0, r4
   111dc:	ldrsb	r1, [r5, r4]
   111e0:	cmp	r1, #0
   111e4:	bne	1118c <strspn@plt+0x4e8>
   111e8:	pop	{r4, r5, r6, r7, r8, pc}
   111ec:	mov	r0, r4
   111f0:	pop	{r4, r5, r6, r7, r8, pc}
   111f4:	mov	r0, r1
   111f8:	pop	{r4, r5, r6, r7, r8, pc}
   111fc:	ldr	ip, [pc, #244]	; 112f8 <strspn@plt+0x654>
   11200:	push	{r4, r5, r6, r7, r8, r9, lr}
   11204:	add	ip, pc, ip
   11208:	ldr	lr, [pc, #236]	; 112fc <strspn@plt+0x658>
   1120c:	sub	sp, sp, #12
   11210:	mov	r5, #0
   11214:	ldr	r7, [ip, lr]
   11218:	mov	r4, r0
   1121c:	mov	r8, r1
   11220:	ldr	r3, [r7]
   11224:	mov	r0, ip
   11228:	mov	r9, r2
   1122c:	str	r5, [sp]
   11230:	str	r3, [sp, #4]
   11234:	bl	10bd8 <__errno_location@plt>
   11238:	cmp	r4, r5
   1123c:	str	r5, [r0]
   11240:	beq	11250 <strspn@plt+0x5ac>
   11244:	ldrsb	r3, [r4]
   11248:	cmp	r3, r5
   1124c:	bne	11270 <strspn@plt+0x5cc>
   11250:	ldr	r1, [pc, #168]	; 11300 <strspn@plt+0x65c>
   11254:	mov	r3, r4
   11258:	add	r1, pc, r1
   1125c:	mov	r2, r8
   11260:	ldr	r0, [r1]
   11264:	ldr	r1, [pc, #152]	; 11304 <strspn@plt+0x660>
   11268:	add	r1, pc, r1
   1126c:	bl	10c38 <errx@plt>
   11270:	mov	r6, r0
   11274:	mov	r2, r9
   11278:	mov	r3, r5
   1127c:	mov	r1, sp
   11280:	mov	r0, r4
   11284:	bl	10b00 <__strtoull_internal@plt>
   11288:	ldr	r2, [r6]
   1128c:	cmp	r2, r5
   11290:	bne	112cc <strspn@plt+0x628>
   11294:	ldr	r3, [sp]
   11298:	cmp	r3, r4
   1129c:	beq	11250 <strspn@plt+0x5ac>
   112a0:	cmp	r3, r5
   112a4:	beq	112b4 <strspn@plt+0x610>
   112a8:	ldrsb	r3, [r3]
   112ac:	cmp	r3, r5
   112b0:	bne	11250 <strspn@plt+0x5ac>
   112b4:	ldr	r2, [sp, #4]
   112b8:	ldr	r3, [r7]
   112bc:	cmp	r2, r3
   112c0:	bne	112f4 <strspn@plt+0x650>
   112c4:	add	sp, sp, #12
   112c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   112cc:	ldr	r3, [pc, #52]	; 11308 <strspn@plt+0x664>
   112d0:	cmp	r2, #34	; 0x22
   112d4:	add	r3, pc, r3
   112d8:	ldr	r0, [r3]
   112dc:	bne	11250 <strspn@plt+0x5ac>
   112e0:	ldr	r1, [pc, #36]	; 1130c <strspn@plt+0x668>
   112e4:	mov	r3, r4
   112e8:	mov	r2, r8
   112ec:	add	r1, pc, r1
   112f0:	bl	10b3c <err@plt>
   112f4:	bl	10b24 <__stack_chk_fail@plt>
   112f8:	andeq	r2, r1, r0, lsr sp
   112fc:	strheq	r0, [r0], -r8
   11300:	andeq	r2, r1, r8, lsr #27
   11304:	andeq	r2, r0, r4, ror #3
   11308:	andeq	r2, r1, ip, lsr #26
   1130c:	andeq	r2, r0, r0, ror #2
   11310:	push	{r4, lr}
   11314:	mov	r5, r0
   11318:	mov	r4, r1
   1131c:	bl	10bd8 <__errno_location@plt>
   11320:	ldr	ip, [pc, #32]	; 11348 <strspn@plt+0x6a4>
   11324:	ldr	r1, [pc, #32]	; 1134c <strspn@plt+0x6a8>
   11328:	add	ip, pc, ip
   1132c:	mov	lr, #34	; 0x22
   11330:	mov	r3, r5
   11334:	mov	r2, r4
   11338:	add	r1, pc, r1
   1133c:	str	lr, [r0]
   11340:	ldr	r0, [ip]
   11344:	bl	10b3c <err@plt>
   11348:	ldrdeq	r2, [r1], -r8
   1134c:	andeq	r2, r0, r4, lsl r1
   11350:	push	{r4, r5, r6, lr}
   11354:	mov	r4, r0
   11358:	mov	r5, r1
   1135c:	bl	111fc <strspn@plt+0x558>
   11360:	mov	r3, #0
   11364:	mvn	r2, #0
   11368:	cmp	r1, r3
   1136c:	cmpeq	r0, r2
   11370:	popls	{r4, r5, r6, pc}
   11374:	mov	r1, r5
   11378:	mov	r0, r4
   1137c:	bl	11310 <strspn@plt+0x66c>
   11380:	ldr	r3, [pc, #8]	; 11390 <strspn@plt+0x6ec>
   11384:	add	r3, pc, r3
   11388:	str	r0, [r3]
   1138c:	bx	lr
   11390:	andeq	r2, r1, ip, ror ip
   11394:	ldr	r3, [pc, #1648]	; 11a0c <strspn@plt+0xd68>
   11398:	ldr	ip, [pc, #1648]	; 11a10 <strspn@plt+0xd6c>
   1139c:	add	r3, pc, r3
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a4:	mov	r5, r1
   113a8:	ldr	r1, [r3, ip]
   113ac:	sub	sp, sp, #52	; 0x34
   113b0:	mov	ip, r1
   113b4:	mov	r8, r0
   113b8:	str	r1, [sp, #24]
   113bc:	mov	r0, #0
   113c0:	mov	r1, #0
   113c4:	ldr	r3, [ip]
   113c8:	strd	r0, [r5]
   113cc:	mov	r9, r2
   113d0:	str	r3, [sp, #44]	; 0x2c
   113d4:	bl	10bd8 <__errno_location@plt>
   113d8:	cmp	r8, #0
   113dc:	mov	r4, r0
   113e0:	beq	115c0 <strspn@plt+0x91c>
   113e4:	ldrsb	fp, [r8]
   113e8:	cmp	fp, #0
   113ec:	beq	115c0 <strspn@plt+0x91c>
   113f0:	bl	10b90 <__ctype_b_loc@plt>
   113f4:	mov	r2, r8
   113f8:	ldr	r1, [r0]
   113fc:	b	11404 <strspn@plt+0x760>
   11400:	ldrsb	fp, [r2, #1]!
   11404:	uxtb	r3, fp
   11408:	lsl	r3, r3, #1
   1140c:	ldrh	ip, [r1, r3]
   11410:	ands	ip, ip, #8192	; 0x2000
   11414:	bne	11400 <strspn@plt+0x75c>
   11418:	cmp	fp, #45	; 0x2d
   1141c:	beq	115c0 <strspn@plt+0x91c>
   11420:	add	fp, sp, #40	; 0x28
   11424:	mov	r3, ip
   11428:	mov	r2, ip
   1142c:	str	ip, [r4]
   11430:	mov	r1, fp
   11434:	mov	r0, r8
   11438:	str	ip, [sp, #40]	; 0x28
   1143c:	bl	10b00 <__strtoull_internal@plt>
   11440:	ldr	sl, [sp, #40]	; 0x28
   11444:	cmp	sl, r8
   11448:	mov	r2, r0
   1144c:	mov	r3, r1
   11450:	ldr	r0, [r4]
   11454:	strd	r2, [sp, #16]
   11458:	beq	11740 <strspn@plt+0xa9c>
   1145c:	cmp	r0, #0
   11460:	bne	115e8 <strspn@plt+0x944>
   11464:	cmp	sl, #0
   11468:	beq	11774 <strspn@plt+0xad0>
   1146c:	ldrsb	r0, [sl]
   11470:	cmp	r0, #0
   11474:	beq	11768 <strspn@plt+0xac4>
   11478:	mov	r8, #0
   1147c:	mov	r2, #0
   11480:	mov	r3, #0
   11484:	str	r9, [sp, #32]
   11488:	mov	r6, fp
   1148c:	mov	r9, sl
   11490:	mov	r7, r8
   11494:	mov	sl, r2
   11498:	mov	fp, r3
   1149c:	str	r5, [sp, #28]
   114a0:	ldrsb	r2, [r9, #1]
   114a4:	cmp	r2, #105	; 0x69
   114a8:	beq	1162c <strspn@plt+0x988>
   114ac:	bic	r1, r2, #32
   114b0:	cmp	r1, #66	; 0x42
   114b4:	bne	1174c <strspn@plt+0xaa8>
   114b8:	ldrsb	r2, [r9, #2]
   114bc:	cmp	r2, #0
   114c0:	beq	11930 <strspn@plt+0xc8c>
   114c4:	bl	10c50 <localeconv@plt>
   114c8:	cmp	r0, #0
   114cc:	beq	115c0 <strspn@plt+0x91c>
   114d0:	ldr	r2, [r0]
   114d4:	cmp	r2, #0
   114d8:	beq	115c0 <strspn@plt+0x91c>
   114dc:	mov	r0, r2
   114e0:	str	r2, [sp]
   114e4:	bl	10bb4 <strlen@plt>
   114e8:	orrs	r3, sl, fp
   114ec:	mov	r5, r0
   114f0:	bne	115c0 <strspn@plt+0x91c>
   114f4:	ldrsb	r1, [r9]
   114f8:	cmp	r1, #0
   114fc:	beq	115c0 <strspn@plt+0x91c>
   11500:	ldr	r2, [sp]
   11504:	mov	r1, r9
   11508:	mov	r0, r2
   1150c:	mov	r2, r5
   11510:	bl	10c80 <strncmp@plt>
   11514:	cmp	r0, #0
   11518:	bne	115c0 <strspn@plt+0x91c>
   1151c:	ldrsb	r2, [r9, r5]
   11520:	add	r5, r9, r5
   11524:	cmp	r2, #48	; 0x30
   11528:	bne	11548 <strspn@plt+0x8a4>
   1152c:	add	r8, r8, #1
   11530:	sub	r1, r8, r5
   11534:	mov	r3, r5
   11538:	add	r8, r3, r1
   1153c:	ldrsb	r2, [r3, #1]!
   11540:	cmp	r2, #48	; 0x30
   11544:	beq	11538 <strspn@plt+0x894>
   11548:	mov	r3, #0
   1154c:	str	r7, [r4]
   11550:	mov	r2, r3
   11554:	mov	r1, r6
   11558:	mov	r0, r5
   1155c:	str	r7, [sp, #40]	; 0x28
   11560:	bl	10b00 <__strtoull_internal@plt>
   11564:	ldr	r9, [sp, #40]	; 0x28
   11568:	cmp	r9, r5
   1156c:	mov	sl, r0
   11570:	mov	fp, r1
   11574:	beq	1173c <strspn@plt+0xa98>
   11578:	ldr	ip, [r4]
   1157c:	cmp	ip, #0
   11580:	beq	11618 <strspn@plt+0x974>
   11584:	subs	r3, r0, #1
   11588:	str	r3, [sp, #8]
   1158c:	sbc	r3, r1, #0
   11590:	str	r3, [sp, #12]
   11594:	ldrd	r2, [sp, #8]
   11598:	mvn	r1, #0
   1159c:	mvn	r0, #2
   115a0:	cmp	r3, r1
   115a4:	cmpeq	r2, r0
   115a8:	bhi	1196c <strspn@plt+0xcc8>
   115ac:	cmp	r9, #0
   115b0:	beq	115c0 <strspn@plt+0x91c>
   115b4:	ldrsb	r2, [r9]
   115b8:	cmp	r2, #0
   115bc:	bne	114a0 <strspn@plt+0x7fc>
   115c0:	mov	r3, #22
   115c4:	mvn	r0, #21
   115c8:	str	r3, [r4]
   115cc:	ldr	r3, [sp, #24]
   115d0:	ldr	r2, [sp, #44]	; 0x2c
   115d4:	ldr	r3, [r3]
   115d8:	cmp	r2, r3
   115dc:	bne	11a08 <strspn@plt+0xd64>
   115e0:	add	sp, sp, #52	; 0x34
   115e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115e8:	subs	r6, r2, #1
   115ec:	sbc	r7, r3, #0
   115f0:	mvn	r3, #0
   115f4:	mvn	r2, #2
   115f8:	cmp	r7, r3
   115fc:	cmpeq	r6, r2
   11600:	bls	11464 <strspn@plt+0x7c0>
   11604:	rsb	r0, r0, #0
   11608:	cmp	r0, #0
   1160c:	bge	115cc <strspn@plt+0x928>
   11610:	rsb	r3, r0, #0
   11614:	b	115c8 <strspn@plt+0x924>
   11618:	orrs	r3, sl, fp
   1161c:	bne	115ac <strspn@plt+0x908>
   11620:	ldrsb	r2, [r9, #1]
   11624:	cmp	r2, #105	; 0x69
   11628:	bne	114ac <strspn@plt+0x808>
   1162c:	ldrsb	r2, [r9, #2]
   11630:	bic	r2, r2, #32
   11634:	cmp	r2, #66	; 0x42
   11638:	bne	114c4 <strspn@plt+0x820>
   1163c:	ldrsb	r2, [r9, #3]
   11640:	cmp	r2, #0
   11644:	bne	114c4 <strspn@plt+0x820>
   11648:	strd	sl, [sp]
   1164c:	mov	sl, r9
   11650:	ldr	r9, [sp, #32]
   11654:	mov	r3, #1024	; 0x400
   11658:	ldr	r5, [sp, #28]
   1165c:	str	r3, [sp, #28]
   11660:	ldrsb	r7, [sl]
   11664:	ldr	r6, [pc, #936]	; 11a14 <strspn@plt+0xd70>
   11668:	add	r6, pc, r6
   1166c:	mov	r1, r7
   11670:	mov	r0, r6
   11674:	bl	10bc0 <strchr@plt>
   11678:	cmp	r0, #0
   1167c:	beq	1194c <strspn@plt+0xca8>
   11680:	sub	ip, r0, r6
   11684:	add	fp, ip, #1
   11688:	cmp	fp, #0
   1168c:	beq	11758 <strspn@plt+0xab4>
   11690:	ldr	r3, [sp, #20]
   11694:	ldr	r6, [sp, #28]
   11698:	cmp	r3, #0
   1169c:	mov	r0, #0
   116a0:	asr	r7, r6, #31
   116a4:	mov	r1, #0
   116a8:	bne	119a8 <strspn@plt+0xd04>
   116ac:	orrs	r3, r0, r1
   116b0:	bne	1179c <strspn@plt+0xaf8>
   116b4:	str	fp, [sp, #32]
   116b8:	sub	ip, ip, #1
   116bc:	str	r8, [sp, #36]	; 0x24
   116c0:	mov	fp, r4
   116c4:	ldrd	r0, [sp, #16]
   116c8:	mov	lr, r5
   116cc:	mov	sl, r9
   116d0:	b	116e0 <strspn@plt+0xa3c>
   116d4:	orrs	r3, r4, r5
   116d8:	sub	ip, ip, #1
   116dc:	bne	11784 <strspn@plt+0xae0>
   116e0:	mul	r2, r0, r7
   116e4:	cmn	ip, #1
   116e8:	mla	r2, r6, r1, r2
   116ec:	umull	r0, r1, r0, r6
   116f0:	add	r2, r2, r1
   116f4:	mov	r1, r2
   116f8:	beq	11910 <strspn@plt+0xc6c>
   116fc:	cmp	r2, #0
   11700:	mov	r4, #0
   11704:	mov	r5, #0
   11708:	beq	116d4 <strspn@plt+0xa30>
   1170c:	umull	r2, r3, r6, r2
   11710:	umull	r8, r9, r0, r6
   11714:	strd	r2, [sp, #8]
   11718:	mov	r8, r9
   1171c:	ldr	r3, [sp, #12]
   11720:	adds	r8, r2, r8
   11724:	mov	r2, #0
   11728:	adc	r3, r3, r2
   1172c:	cmp	r3, r2
   11730:	movne	r4, #1
   11734:	movne	r5, #0
   11738:	b	116d4 <strspn@plt+0xa30>
   1173c:	ldr	r0, [r4]
   11740:	cmp	r0, #0
   11744:	beq	115c0 <strspn@plt+0x91c>
   11748:	b	11604 <strspn@plt+0x960>
   1174c:	cmp	r2, #0
   11750:	bne	114c4 <strspn@plt+0x820>
   11754:	b	11648 <strspn@plt+0x9a4>
   11758:	cmp	r9, #0
   1175c:	movne	r0, fp
   11760:	bne	117a8 <strspn@plt+0xb04>
   11764:	mov	r0, r9
   11768:	ldrd	r2, [sp, #16]
   1176c:	strd	r2, [r5]
   11770:	b	115cc <strspn@plt+0x928>
   11774:	ldrd	r2, [sp, #16]
   11778:	mov	r0, sl
   1177c:	strd	r2, [r5]
   11780:	b	115cc <strspn@plt+0x928>
   11784:	mov	r4, fp
   11788:	ldr	r8, [sp, #36]	; 0x24
   1178c:	ldr	fp, [sp, #32]
   11790:	mov	r5, lr
   11794:	mov	r9, sl
   11798:	strd	r0, [sp, #16]
   1179c:	mvn	r0, #33	; 0x21
   117a0:	cmp	r9, #0
   117a4:	beq	117ac <strspn@plt+0xb08>
   117a8:	str	fp, [r9]
   117ac:	ldrd	r2, [sp]
   117b0:	mov	r1, r2
   117b4:	orrs	r3, r1, r3
   117b8:	movne	r3, #1
   117bc:	moveq	r3, #0
   117c0:	cmp	fp, #0
   117c4:	moveq	r3, #0
   117c8:	cmp	r3, #0
   117cc:	beq	11904 <strspn@plt+0xc60>
   117d0:	ldr	r3, [pc, #576]	; 11a18 <strspn@plt+0xd74>
   117d4:	ldr	r1, [pc, #576]	; 11a1c <strspn@plt+0xd78>
   117d8:	umull	ip, r3, r3, r8
   117dc:	smull	ip, r1, r1, r8
   117e0:	lsr	r3, r3, #1
   117e4:	rsb	r1, r1, r8, asr #31
   117e8:	add	r3, r3, r3, lsl #1
   117ec:	add	r1, r1, fp
   117f0:	subs	r3, r8, r3
   117f4:	sub	r6, r1, #1
   117f8:	bne	11974 <strspn@plt+0xcd0>
   117fc:	ldrd	r8, [sp]
   11800:	adds	r3, r8, r8
   11804:	adc	r2, r9, r9
   11808:	adds	r3, r3, r8
   1180c:	adc	r2, r2, r9
   11810:	lsl	ip, r3, #5
   11814:	lsl	lr, r2, #5
   11818:	orr	lr, lr, r3, lsr #27
   1181c:	adds	r3, r3, ip
   11820:	adc	r2, r2, lr
   11824:	adds	r3, r8, r3
   11828:	str	r3, [sp]
   1182c:	ldr	r3, [sp, #4]
   11830:	adc	r3, r3, r2
   11834:	str	r3, [sp, #4]
   11838:	cmp	r6, #0
   1183c:	blt	115c0 <strspn@plt+0x91c>
   11840:	beq	118e8 <strspn@plt+0xc44>
   11844:	ldr	r3, [sp, #4]
   11848:	ldr	r8, [sp, #28]
   1184c:	cmp	r3, #0
   11850:	mov	r6, #0
   11854:	asr	r9, r8, #31
   11858:	mov	r7, #0
   1185c:	bne	119dc <strspn@plt+0xd38>
   11860:	orrs	r3, r6, r7
   11864:	bne	118e8 <strspn@plt+0xc44>
   11868:	sub	r1, r1, #3
   1186c:	ldrd	r2, [sp]
   11870:	mov	lr, r4
   11874:	str	r5, [sp, #8]
   11878:	b	11888 <strspn@plt+0xbe4>
   1187c:	orrs	ip, r6, r7
   11880:	sub	r1, r1, #1
   11884:	bne	118dc <strspn@plt+0xc38>
   11888:	mul	ip, r2, r9
   1188c:	cmn	r1, #1
   11890:	mla	ip, r8, r3, ip
   11894:	umull	r2, r3, r2, r8
   11898:	add	ip, ip, r3
   1189c:	mov	r3, ip
   118a0:	beq	118dc <strspn@plt+0xc38>
   118a4:	cmp	ip, #0
   118a8:	mov	r6, #0
   118ac:	mov	r7, #0
   118b0:	beq	1187c <strspn@plt+0xbd8>
   118b4:	umull	sl, fp, r2, r8
   118b8:	umull	r4, r5, r8, ip
   118bc:	mov	ip, fp
   118c0:	adds	ip, r4, ip
   118c4:	mov	ip, #0
   118c8:	adc	ip, r5, ip
   118cc:	cmp	ip, #0
   118d0:	movne	r6, #1
   118d4:	movne	r7, #0
   118d8:	b	1187c <strspn@plt+0xbd8>
   118dc:	ldr	r5, [sp, #8]
   118e0:	mov	r4, lr
   118e4:	strd	r2, [sp]
   118e8:	ldrd	r2, [sp]
   118ec:	ldr	r1, [sp, #16]
   118f0:	adds	r1, r1, r2
   118f4:	str	r1, [sp, #16]
   118f8:	ldr	r1, [sp, #20]
   118fc:	adc	r3, r1, r3
   11900:	str	r3, [sp, #20]
   11904:	ldrd	r2, [sp, #16]
   11908:	strd	r2, [r5]
   1190c:	b	11608 <strspn@plt+0x964>
   11910:	mov	r4, fp
   11914:	strd	r0, [sp, #16]
   11918:	ldr	r8, [sp, #36]	; 0x24
   1191c:	ldr	fp, [sp, #32]
   11920:	mov	r5, lr
   11924:	mov	r9, sl
   11928:	mov	r0, #0
   1192c:	b	117a0 <strspn@plt+0xafc>
   11930:	mov	r3, #1000	; 0x3e8
   11934:	strd	sl, [sp]
   11938:	ldr	r5, [sp, #28]
   1193c:	mov	sl, r9
   11940:	str	r3, [sp, #28]
   11944:	ldr	r9, [sp, #32]
   11948:	b	11660 <strspn@plt+0x9bc>
   1194c:	ldr	r6, [pc, #204]	; 11a20 <strspn@plt+0xd7c>
   11950:	mov	r1, r7
   11954:	add	r6, pc, r6
   11958:	mov	r0, r6
   1195c:	bl	10bc0 <strchr@plt>
   11960:	cmp	r0, #0
   11964:	bne	11680 <strspn@plt+0x9dc>
   11968:	b	115c0 <strspn@plt+0x91c>
   1196c:	mov	r0, ip
   11970:	b	11604 <strspn@plt+0x960>
   11974:	cmp	r3, #1
   11978:	bne	11838 <strspn@plt+0xb94>
   1197c:	ldrd	r8, [sp]
   11980:	lsl	r2, r9, #2
   11984:	lsl	r3, r8, #2
   11988:	adds	r3, r3, r8
   1198c:	orr	r2, r2, r8, lsr #30
   11990:	adc	r2, r2, r9
   11994:	adds	r3, r3, r3
   11998:	str	r3, [sp]
   1199c:	adc	r3, r2, r2
   119a0:	str	r3, [sp, #4]
   119a4:	b	11838 <strspn@plt+0xb94>
   119a8:	ldr	lr, [sp, #28]
   119ac:	ldr	r3, [sp, #16]
   119b0:	ldr	sl, [sp, #20]
   119b4:	umull	r2, r3, r3, lr
   119b8:	str	r3, [sp, #8]
   119bc:	mov	r3, #0
   119c0:	str	r3, [sp, #12]
   119c4:	ldrd	r2, [sp, #8]
   119c8:	umlal	r2, r3, sl, lr
   119cc:	cmp	r3, #0
   119d0:	movne	r0, #1
   119d4:	movne	r1, #0
   119d8:	b	116ac <strspn@plt+0xa08>
   119dc:	ldr	r3, [sp]
   119e0:	ldr	ip, [sp, #28]
   119e4:	ldr	lr, [sp, #4]
   119e8:	umull	sl, fp, r3, ip
   119ec:	mov	r3, #0
   119f0:	mov	r2, fp
   119f4:	umlal	r2, r3, lr, ip
   119f8:	cmp	r3, #0
   119fc:	movne	r6, #1
   11a00:	movne	r7, #0
   11a04:	b	11860 <strspn@plt+0xbbc>
   11a08:	bl	10b24 <__stack_chk_fail@plt>
   11a0c:	muleq	r1, r8, fp
   11a10:	strheq	r0, [r0], -r8
   11a14:	strdeq	r1, [r0], -r0
   11a18:	bge	feabc4cc <stdout@@GLIBC_2.4+0xfea984b0>
   11a1c:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   11a20:	andeq	r1, r0, r0, lsl fp
   11a24:	mov	r2, #0
   11a28:	b	11394 <strspn@plt+0x6f0>
   11a2c:	push	{r4, r5, r6, lr}
   11a30:	subs	r5, r0, #0
   11a34:	mov	r6, r1
   11a38:	beq	11aa4 <strspn@plt+0xe00>
   11a3c:	ldrsb	r4, [r5]
   11a40:	cmp	r4, #0
   11a44:	beq	11ab8 <strspn@plt+0xe14>
   11a48:	bl	10b90 <__ctype_b_loc@plt>
   11a4c:	mov	r3, r5
   11a50:	ldr	r0, [r0]
   11a54:	b	11a6c <strspn@plt+0xdc8>
   11a58:	adds	r3, r3, #1
   11a5c:	beq	11aa4 <strspn@plt+0xe00>
   11a60:	ldrsb	r4, [r3]
   11a64:	cmp	r4, #0
   11a68:	beq	11a80 <strspn@plt+0xddc>
   11a6c:	uxtb	r4, r4
   11a70:	lsl	r4, r4, #1
   11a74:	ldrh	r2, [r0, r4]
   11a78:	tst	r2, #2048	; 0x800
   11a7c:	bne	11a58 <strspn@plt+0xdb4>
   11a80:	cmp	r6, #0
   11a84:	strne	r3, [r6]
   11a88:	cmp	r5, r3
   11a8c:	bcs	11ab0 <strspn@plt+0xe0c>
   11a90:	ldrsb	r3, [r3]
   11a94:	cmp	r3, #0
   11a98:	bne	11ab0 <strspn@plt+0xe0c>
   11a9c:	mov	r0, #1
   11aa0:	pop	{r4, r5, r6, pc}
   11aa4:	cmp	r6, #0
   11aa8:	movne	r3, #0
   11aac:	strne	r3, [r6]
   11ab0:	mov	r0, #0
   11ab4:	pop	{r4, r5, r6, pc}
   11ab8:	cmp	r1, #0
   11abc:	strne	r5, [r1]
   11ac0:	b	11ab0 <strspn@plt+0xe0c>
   11ac4:	push	{r4, r5, r6, lr}
   11ac8:	subs	r5, r0, #0
   11acc:	mov	r6, r1
   11ad0:	beq	11b3c <strspn@plt+0xe98>
   11ad4:	ldrsb	r4, [r5]
   11ad8:	cmp	r4, #0
   11adc:	beq	11b50 <strspn@plt+0xeac>
   11ae0:	bl	10b90 <__ctype_b_loc@plt>
   11ae4:	mov	r3, r5
   11ae8:	ldr	r0, [r0]
   11aec:	b	11b04 <strspn@plt+0xe60>
   11af0:	adds	r3, r3, #1
   11af4:	beq	11b3c <strspn@plt+0xe98>
   11af8:	ldrsb	r4, [r3]
   11afc:	cmp	r4, #0
   11b00:	beq	11b18 <strspn@plt+0xe74>
   11b04:	uxtb	r4, r4
   11b08:	lsl	r4, r4, #1
   11b0c:	ldrh	r2, [r0, r4]
   11b10:	tst	r2, #4096	; 0x1000
   11b14:	bne	11af0 <strspn@plt+0xe4c>
   11b18:	cmp	r6, #0
   11b1c:	strne	r3, [r6]
   11b20:	cmp	r5, r3
   11b24:	bcs	11b48 <strspn@plt+0xea4>
   11b28:	ldrsb	r3, [r3]
   11b2c:	cmp	r3, #0
   11b30:	bne	11b48 <strspn@plt+0xea4>
   11b34:	mov	r0, #1
   11b38:	pop	{r4, r5, r6, pc}
   11b3c:	cmp	r6, #0
   11b40:	movne	r3, #0
   11b44:	strne	r3, [r6]
   11b48:	mov	r0, #0
   11b4c:	pop	{r4, r5, r6, pc}
   11b50:	cmp	r1, #0
   11b54:	strne	r5, [r1]
   11b58:	b	11b48 <strspn@plt+0xea4>
   11b5c:	push	{r1, r2, r3}
   11b60:	ldr	r3, [pc, #188]	; 11c24 <strspn@plt+0xf80>
   11b64:	ldr	r2, [pc, #188]	; 11c28 <strspn@plt+0xf84>
   11b68:	add	r3, pc, r3
   11b6c:	push	{r4, r5, r6, r7, r8, lr}
   11b70:	sub	sp, sp, #12
   11b74:	ldr	r7, [r3, r2]
   11b78:	ldr	r8, [sp, #36]	; 0x24
   11b7c:	mov	r6, r0
   11b80:	ldr	r3, [r7]
   11b84:	add	r4, sp, #48	; 0x30
   11b88:	str	r3, [sp, #4]
   11b8c:	b	11ba8 <strspn@plt+0xf04>
   11b90:	mov	r1, r5
   11b94:	mov	r0, r6
   11b98:	bl	10ab8 <strcmp@plt>
   11b9c:	add	r4, r4, #8
   11ba0:	cmp	r0, #0
   11ba4:	beq	11be0 <strspn@plt+0xf3c>
   11ba8:	ldr	r1, [r4, #-8]
   11bac:	sub	r3, r4, #4
   11bb0:	cmp	r1, #0
   11bb4:	str	r3, [sp]
   11bb8:	beq	11c00 <strspn@plt+0xf5c>
   11bbc:	ldr	r5, [r4, #-4]
   11bc0:	str	r4, [sp]
   11bc4:	cmp	r5, #0
   11bc8:	beq	11c00 <strspn@plt+0xf5c>
   11bcc:	mov	r0, r6
   11bd0:	bl	10ab8 <strcmp@plt>
   11bd4:	cmp	r0, #0
   11bd8:	bne	11b90 <strspn@plt+0xeec>
   11bdc:	mov	r0, #1
   11be0:	ldr	r2, [sp, #4]
   11be4:	ldr	r3, [r7]
   11be8:	cmp	r2, r3
   11bec:	bne	11c20 <strspn@plt+0xf7c>
   11bf0:	add	sp, sp, #12
   11bf4:	pop	{r4, r5, r6, r7, r8, lr}
   11bf8:	add	sp, sp, #12
   11bfc:	bx	lr
   11c00:	ldr	r1, [pc, #36]	; 11c2c <strspn@plt+0xf88>
   11c04:	mov	r3, r6
   11c08:	add	r1, pc, r1
   11c0c:	mov	r2, r8
   11c10:	ldr	r0, [r1]
   11c14:	ldr	r1, [pc, #20]	; 11c30 <strspn@plt+0xf8c>
   11c18:	add	r1, pc, r1
   11c1c:	bl	10c38 <errx@plt>
   11c20:	bl	10b24 <__stack_chk_fail@plt>
   11c24:	andeq	r2, r1, ip, asr #7
   11c28:	strheq	r0, [r0], -r8
   11c2c:	strdeq	r2, [r1], -r8
   11c30:	andeq	r1, r0, r4, lsr r8
   11c34:	cmp	r1, #0
   11c38:	beq	11c84 <strspn@plt+0xfe0>
   11c3c:	ldrsb	r3, [r0]
   11c40:	cmp	r3, #0
   11c44:	beq	11c84 <strspn@plt+0xfe0>
   11c48:	sxtb	r2, r2
   11c4c:	cmp	r3, r2
   11c50:	bxeq	lr
   11c54:	add	r1, r0, r1
   11c58:	add	r3, r0, #1
   11c5c:	b	11c78 <strspn@plt+0xfd4>
   11c60:	ldrsb	ip, [r3]
   11c64:	add	r3, r3, #1
   11c68:	cmp	ip, #0
   11c6c:	beq	11c84 <strspn@plt+0xfe0>
   11c70:	cmp	ip, r2
   11c74:	bxeq	lr
   11c78:	cmp	r3, r1
   11c7c:	mov	r0, r3
   11c80:	bne	11c60 <strspn@plt+0xfbc>
   11c84:	mov	r0, #0
   11c88:	bx	lr
   11c8c:	push	{r4, r5, r6, lr}
   11c90:	mov	r2, #10
   11c94:	mov	r4, r0
   11c98:	mov	r5, r1
   11c9c:	bl	11350 <strspn@plt+0x6ac>
   11ca0:	cmp	r0, #65536	; 0x10000
   11ca4:	bcs	11cb0 <strspn@plt+0x100c>
   11ca8:	uxth	r0, r0
   11cac:	pop	{r4, r5, r6, pc}
   11cb0:	mov	r1, r5
   11cb4:	mov	r0, r4
   11cb8:	bl	11310 <strspn@plt+0x66c>
   11cbc:	push	{r4, r5, r6, lr}
   11cc0:	mov	r2, #16
   11cc4:	mov	r4, r0
   11cc8:	mov	r5, r1
   11ccc:	bl	11350 <strspn@plt+0x6ac>
   11cd0:	cmp	r0, #65536	; 0x10000
   11cd4:	bcs	11ce0 <strspn@plt+0x103c>
   11cd8:	uxth	r0, r0
   11cdc:	pop	{r4, r5, r6, pc}
   11ce0:	mov	r1, r5
   11ce4:	mov	r0, r4
   11ce8:	bl	11310 <strspn@plt+0x66c>
   11cec:	mov	r2, #10
   11cf0:	b	11350 <strspn@plt+0x6ac>
   11cf4:	mov	r2, #16
   11cf8:	b	11350 <strspn@plt+0x6ac>
   11cfc:	ldr	r2, [pc, #236]	; 11df0 <strspn@plt+0x114c>
   11d00:	ldr	ip, [pc, #236]	; 11df4 <strspn@plt+0x1150>
   11d04:	add	r2, pc, r2
   11d08:	push	{r4, r5, r6, r7, r8, lr}
   11d0c:	sub	sp, sp, #8
   11d10:	ldr	r7, [r2, ip]
   11d14:	mov	r5, #0
   11d18:	mov	r4, r0
   11d1c:	ldr	r3, [r7]
   11d20:	mov	r8, r1
   11d24:	str	r5, [sp]
   11d28:	str	r3, [sp, #4]
   11d2c:	bl	10bd8 <__errno_location@plt>
   11d30:	cmp	r4, r5
   11d34:	str	r5, [r0]
   11d38:	beq	11d48 <strspn@plt+0x10a4>
   11d3c:	ldrsb	r3, [r4]
   11d40:	cmp	r3, r5
   11d44:	bne	11d68 <strspn@plt+0x10c4>
   11d48:	ldr	r1, [pc, #168]	; 11df8 <strspn@plt+0x1154>
   11d4c:	mov	r3, r4
   11d50:	add	r1, pc, r1
   11d54:	mov	r2, r8
   11d58:	ldr	r0, [r1]
   11d5c:	ldr	r1, [pc, #152]	; 11dfc <strspn@plt+0x1158>
   11d60:	add	r1, pc, r1
   11d64:	bl	10c38 <errx@plt>
   11d68:	mov	r6, r0
   11d6c:	mov	r2, #10
   11d70:	mov	r3, r5
   11d74:	mov	r1, sp
   11d78:	mov	r0, r4
   11d7c:	bl	10c5c <__strtoll_internal@plt>
   11d80:	ldr	r2, [r6]
   11d84:	cmp	r2, r5
   11d88:	bne	11dc4 <strspn@plt+0x1120>
   11d8c:	ldr	r3, [sp]
   11d90:	cmp	r3, r4
   11d94:	beq	11d48 <strspn@plt+0x10a4>
   11d98:	cmp	r3, r5
   11d9c:	beq	11dac <strspn@plt+0x1108>
   11da0:	ldrsb	r3, [r3]
   11da4:	cmp	r3, r5
   11da8:	bne	11d48 <strspn@plt+0x10a4>
   11dac:	ldr	r2, [sp, #4]
   11db0:	ldr	r3, [r7]
   11db4:	cmp	r2, r3
   11db8:	bne	11dec <strspn@plt+0x1148>
   11dbc:	add	sp, sp, #8
   11dc0:	pop	{r4, r5, r6, r7, r8, pc}
   11dc4:	ldr	r3, [pc, #52]	; 11e00 <strspn@plt+0x115c>
   11dc8:	cmp	r2, #34	; 0x22
   11dcc:	add	r3, pc, r3
   11dd0:	ldr	r0, [r3]
   11dd4:	bne	11d48 <strspn@plt+0x10a4>
   11dd8:	ldr	r1, [pc, #36]	; 11e04 <strspn@plt+0x1160>
   11ddc:	mov	r3, r4
   11de0:	mov	r2, r8
   11de4:	add	r1, pc, r1
   11de8:	bl	10b3c <err@plt>
   11dec:	bl	10b24 <__stack_chk_fail@plt>
   11df0:	andeq	r2, r1, r0, lsr r2
   11df4:	strheq	r0, [r0], -r8
   11df8:			; <UNDEFINED> instruction: 0x000122b0
   11dfc:	andeq	r1, r0, ip, ror #13
   11e00:	andeq	r2, r1, r4, lsr r2
   11e04:	andeq	r1, r0, r8, ror #12
   11e08:	push	{r4, r5, r6, r7, r8, lr}
   11e0c:	mov	r7, r0
   11e10:	mov	r6, r1
   11e14:	bl	11cfc <strspn@plt+0x1058>
   11e18:	mov	r3, #0
   11e1c:	mvn	r2, #0
   11e20:	adds	r4, r0, #-2147483648	; 0x80000000
   11e24:	adc	r5, r1, #0
   11e28:	cmp	r5, r3
   11e2c:	cmpeq	r4, r2
   11e30:	popls	{r4, r5, r6, r7, r8, pc}
   11e34:	bl	10bd8 <__errno_location@plt>
   11e38:	ldr	ip, [pc, #32]	; 11e60 <strspn@plt+0x11bc>
   11e3c:	ldr	r1, [pc, #32]	; 11e64 <strspn@plt+0x11c0>
   11e40:	add	ip, pc, ip
   11e44:	mov	lr, #34	; 0x22
   11e48:	mov	r3, r7
   11e4c:	mov	r2, r6
   11e50:	add	r1, pc, r1
   11e54:	str	lr, [r0]
   11e58:	ldr	r0, [ip]
   11e5c:	bl	10b3c <err@plt>
   11e60:	andeq	r2, r1, r0, asr #3
   11e64:	strdeq	r1, [r0], -ip
   11e68:	push	{r4, r5, r6, lr}
   11e6c:	mov	r5, r0
   11e70:	mov	r4, r1
   11e74:	bl	11e08 <strspn@plt+0x1164>
   11e78:	add	r3, r0, #32768	; 0x8000
   11e7c:	cmp	r3, #65536	; 0x10000
   11e80:	bcs	11e8c <strspn@plt+0x11e8>
   11e84:	sxth	r0, r0
   11e88:	pop	{r4, r5, r6, pc}
   11e8c:	bl	10bd8 <__errno_location@plt>
   11e90:	ldr	ip, [pc, #32]	; 11eb8 <strspn@plt+0x1214>
   11e94:	ldr	r1, [pc, #32]	; 11ebc <strspn@plt+0x1218>
   11e98:	add	ip, pc, ip
   11e9c:	mov	lr, #34	; 0x22
   11ea0:	mov	r3, r5
   11ea4:	mov	r2, r4
   11ea8:	add	r1, pc, r1
   11eac:	str	lr, [r0]
   11eb0:	ldr	r0, [ip]
   11eb4:	bl	10b3c <err@plt>
   11eb8:	andeq	r2, r1, r8, ror #2
   11ebc:	andeq	r1, r0, r4, lsr #11
   11ec0:	mov	r2, #10
   11ec4:	b	111fc <strspn@plt+0x558>
   11ec8:	mov	r2, #16
   11ecc:	b	111fc <strspn@plt+0x558>
   11ed0:	ldr	r2, [pc, #228]	; 11fbc <strspn@plt+0x1318>
   11ed4:	ldr	r3, [pc, #228]	; 11fc0 <strspn@plt+0x131c>
   11ed8:	add	r2, pc, r2
   11edc:	push	{r4, r5, r6, r7, r8, lr}
   11ee0:	sub	sp, sp, #8
   11ee4:	ldr	r7, [r2, r3]
   11ee8:	mov	r5, #0
   11eec:	mov	r4, r0
   11ef0:	ldr	r3, [r7]
   11ef4:	mov	r8, r1
   11ef8:	str	r5, [sp]
   11efc:	str	r3, [sp, #4]
   11f00:	bl	10bd8 <__errno_location@plt>
   11f04:	cmp	r4, r5
   11f08:	str	r5, [r0]
   11f0c:	beq	11f1c <strspn@plt+0x1278>
   11f10:	ldrsb	r3, [r4]
   11f14:	cmp	r3, r5
   11f18:	bne	11f3c <strspn@plt+0x1298>
   11f1c:	ldr	r1, [pc, #160]	; 11fc4 <strspn@plt+0x1320>
   11f20:	mov	r3, r4
   11f24:	add	r1, pc, r1
   11f28:	mov	r2, r8
   11f2c:	ldr	r0, [r1]
   11f30:	ldr	r1, [pc, #144]	; 11fc8 <strspn@plt+0x1324>
   11f34:	add	r1, pc, r1
   11f38:	bl	10c38 <errx@plt>
   11f3c:	mov	r6, r0
   11f40:	mov	r1, sp
   11f44:	mov	r0, r4
   11f48:	bl	10c14 <strtod@plt>
   11f4c:	ldr	r2, [r6]
   11f50:	cmp	r2, r5
   11f54:	bne	11f90 <strspn@plt+0x12ec>
   11f58:	ldr	r3, [sp]
   11f5c:	cmp	r3, r4
   11f60:	beq	11f1c <strspn@plt+0x1278>
   11f64:	cmp	r3, r5
   11f68:	beq	11f78 <strspn@plt+0x12d4>
   11f6c:	ldrsb	r3, [r3]
   11f70:	cmp	r3, r5
   11f74:	bne	11f1c <strspn@plt+0x1278>
   11f78:	ldr	r2, [sp, #4]
   11f7c:	ldr	r3, [r7]
   11f80:	cmp	r2, r3
   11f84:	bne	11fb8 <strspn@plt+0x1314>
   11f88:	add	sp, sp, #8
   11f8c:	pop	{r4, r5, r6, r7, r8, pc}
   11f90:	ldr	r3, [pc, #52]	; 11fcc <strspn@plt+0x1328>
   11f94:	cmp	r2, #34	; 0x22
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r0, [r3]
   11fa0:	bne	11f1c <strspn@plt+0x1278>
   11fa4:	ldr	r1, [pc, #36]	; 11fd0 <strspn@plt+0x132c>
   11fa8:	mov	r3, r4
   11fac:	mov	r2, r8
   11fb0:	add	r1, pc, r1
   11fb4:	bl	10b3c <err@plt>
   11fb8:	bl	10b24 <__stack_chk_fail@plt>
   11fbc:	andeq	r2, r1, ip, asr r0
   11fc0:	strheq	r0, [r0], -r8
   11fc4:	ldrdeq	r2, [r1], -ip
   11fc8:	andeq	r1, r0, r8, lsl r5
   11fcc:	andeq	r2, r1, r8, rrx
   11fd0:	muleq	r0, ip, r4
   11fd4:	ldr	r2, [pc, #232]	; 120c4 <strspn@plt+0x1420>
   11fd8:	ldr	r3, [pc, #232]	; 120c8 <strspn@plt+0x1424>
   11fdc:	add	r2, pc, r2
   11fe0:	push	{r4, r5, r6, r7, r8, lr}
   11fe4:	sub	sp, sp, #8
   11fe8:	ldr	r7, [r2, r3]
   11fec:	mov	r5, #0
   11ff0:	mov	r4, r0
   11ff4:	ldr	r3, [r7]
   11ff8:	mov	r8, r1
   11ffc:	str	r5, [sp]
   12000:	str	r3, [sp, #4]
   12004:	bl	10bd8 <__errno_location@plt>
   12008:	cmp	r4, r5
   1200c:	str	r5, [r0]
   12010:	beq	12020 <strspn@plt+0x137c>
   12014:	ldrsb	r3, [r4]
   12018:	cmp	r3, r5
   1201c:	bne	12040 <strspn@plt+0x139c>
   12020:	ldr	r1, [pc, #164]	; 120cc <strspn@plt+0x1428>
   12024:	mov	r3, r4
   12028:	add	r1, pc, r1
   1202c:	mov	r2, r8
   12030:	ldr	r0, [r1]
   12034:	ldr	r1, [pc, #148]	; 120d0 <strspn@plt+0x142c>
   12038:	add	r1, pc, r1
   1203c:	bl	10c38 <errx@plt>
   12040:	mov	r6, r0
   12044:	mov	r2, #10
   12048:	mov	r1, sp
   1204c:	mov	r0, r4
   12050:	bl	10ac4 <strtol@plt>
   12054:	ldr	r2, [r6]
   12058:	cmp	r2, r5
   1205c:	bne	12098 <strspn@plt+0x13f4>
   12060:	ldr	r3, [sp]
   12064:	cmp	r3, r4
   12068:	beq	12020 <strspn@plt+0x137c>
   1206c:	cmp	r3, r5
   12070:	beq	12080 <strspn@plt+0x13dc>
   12074:	ldrsb	r3, [r3]
   12078:	cmp	r3, r5
   1207c:	bne	12020 <strspn@plt+0x137c>
   12080:	ldr	r2, [sp, #4]
   12084:	ldr	r3, [r7]
   12088:	cmp	r2, r3
   1208c:	bne	120c0 <strspn@plt+0x141c>
   12090:	add	sp, sp, #8
   12094:	pop	{r4, r5, r6, r7, r8, pc}
   12098:	ldr	r3, [pc, #52]	; 120d4 <strspn@plt+0x1430>
   1209c:	cmp	r2, #34	; 0x22
   120a0:	add	r3, pc, r3
   120a4:	ldr	r0, [r3]
   120a8:	bne	12020 <strspn@plt+0x137c>
   120ac:	ldr	r1, [pc, #36]	; 120d8 <strspn@plt+0x1434>
   120b0:	mov	r3, r4
   120b4:	mov	r2, r8
   120b8:	add	r1, pc, r1
   120bc:	bl	10b3c <err@plt>
   120c0:	bl	10b24 <__stack_chk_fail@plt>
   120c4:	andeq	r1, r1, r8, asr pc
   120c8:	strheq	r0, [r0], -r8
   120cc:	ldrdeq	r1, [r1], -r8
   120d0:	andeq	r1, r0, r4, lsl r4
   120d4:	andeq	r1, r1, r0, ror #30
   120d8:	muleq	r0, r4, r3
   120dc:	ldr	r2, [pc, #232]	; 121cc <strspn@plt+0x1528>
   120e0:	ldr	r3, [pc, #232]	; 121d0 <strspn@plt+0x152c>
   120e4:	add	r2, pc, r2
   120e8:	push	{r4, r5, r6, r7, r8, lr}
   120ec:	sub	sp, sp, #8
   120f0:	ldr	r7, [r2, r3]
   120f4:	mov	r5, #0
   120f8:	mov	r4, r0
   120fc:	ldr	r3, [r7]
   12100:	mov	r8, r1
   12104:	str	r5, [sp]
   12108:	str	r3, [sp, #4]
   1210c:	bl	10bd8 <__errno_location@plt>
   12110:	cmp	r4, r5
   12114:	str	r5, [r0]
   12118:	beq	12128 <strspn@plt+0x1484>
   1211c:	ldrsb	r3, [r4]
   12120:	cmp	r3, r5
   12124:	bne	12148 <strspn@plt+0x14a4>
   12128:	ldr	r1, [pc, #164]	; 121d4 <strspn@plt+0x1530>
   1212c:	mov	r3, r4
   12130:	add	r1, pc, r1
   12134:	mov	r2, r8
   12138:	ldr	r0, [r1]
   1213c:	ldr	r1, [pc, #148]	; 121d8 <strspn@plt+0x1534>
   12140:	add	r1, pc, r1
   12144:	bl	10c38 <errx@plt>
   12148:	mov	r6, r0
   1214c:	mov	r2, #10
   12150:	mov	r1, sp
   12154:	mov	r0, r4
   12158:	bl	10ba8 <strtoul@plt>
   1215c:	ldr	r2, [r6]
   12160:	cmp	r2, r5
   12164:	bne	121a0 <strspn@plt+0x14fc>
   12168:	ldr	r3, [sp]
   1216c:	cmp	r3, r4
   12170:	beq	12128 <strspn@plt+0x1484>
   12174:	cmp	r3, r5
   12178:	beq	12188 <strspn@plt+0x14e4>
   1217c:	ldrsb	r3, [r3]
   12180:	cmp	r3, r5
   12184:	bne	12128 <strspn@plt+0x1484>
   12188:	ldr	r2, [sp, #4]
   1218c:	ldr	r3, [r7]
   12190:	cmp	r2, r3
   12194:	bne	121c8 <strspn@plt+0x1524>
   12198:	add	sp, sp, #8
   1219c:	pop	{r4, r5, r6, r7, r8, pc}
   121a0:	ldr	r3, [pc, #52]	; 121dc <strspn@plt+0x1538>
   121a4:	cmp	r2, #34	; 0x22
   121a8:	add	r3, pc, r3
   121ac:	ldr	r0, [r3]
   121b0:	bne	12128 <strspn@plt+0x1484>
   121b4:	ldr	r1, [pc, #36]	; 121e0 <strspn@plt+0x153c>
   121b8:	mov	r3, r4
   121bc:	mov	r2, r8
   121c0:	add	r1, pc, r1
   121c4:	bl	10b3c <err@plt>
   121c8:	bl	10b24 <__stack_chk_fail@plt>
   121cc:	andeq	r1, r1, r0, asr lr
   121d0:	strheq	r0, [r0], -r8
   121d4:	ldrdeq	r1, [r1], -r0
   121d8:	andeq	r1, r0, ip, lsl #6
   121dc:	andeq	r1, r1, r8, asr lr
   121e0:	andeq	r1, r0, ip, lsl #5
   121e4:	ldr	r3, [pc, #140]	; 12278 <strspn@plt+0x15d4>
   121e8:	ldr	r2, [pc, #140]	; 1227c <strspn@plt+0x15d8>
   121ec:	add	r3, pc, r3
   121f0:	push	{r4, r5, r6, lr}
   121f4:	sub	sp, sp, #16
   121f8:	ldr	r4, [r3, r2]
   121fc:	mov	r5, r1
   12200:	mov	r1, sp
   12204:	ldr	r3, [r4]
   12208:	mov	r6, r0
   1220c:	str	r3, [sp, #12]
   12210:	bl	11a24 <strspn@plt+0xd80>
   12214:	cmp	r0, #0
   12218:	beq	12258 <strspn@plt+0x15b4>
   1221c:	bl	10bd8 <__errno_location@plt>
   12220:	ldr	r3, [pc, #88]	; 12280 <strspn@plt+0x15dc>
   12224:	mov	r2, r5
   12228:	ldr	r1, [pc, r3]
   1222c:	ldr	r3, [r0]
   12230:	mov	r0, r1
   12234:	cmp	r3, #0
   12238:	mov	r3, r6
   1223c:	beq	1224c <strspn@plt+0x15a8>
   12240:	ldr	r1, [pc, #60]	; 12284 <strspn@plt+0x15e0>
   12244:	add	r1, pc, r1
   12248:	bl	10b3c <err@plt>
   1224c:	ldr	r1, [pc, #52]	; 12288 <strspn@plt+0x15e4>
   12250:	add	r1, pc, r1
   12254:	bl	10c38 <errx@plt>
   12258:	ldr	r2, [sp, #12]
   1225c:	ldr	r3, [r4]
   12260:	ldrd	r0, [sp]
   12264:	cmp	r2, r3
   12268:	bne	12274 <strspn@plt+0x15d0>
   1226c:	add	sp, sp, #16
   12270:	pop	{r4, r5, r6, pc}
   12274:	bl	10b24 <__stack_chk_fail@plt>
   12278:	andeq	r1, r1, r8, asr #26
   1227c:	strheq	r0, [r0], -r8
   12280:	ldrdeq	r1, [r1], -r8
   12284:	andeq	r1, r0, r8, lsl #4
   12288:	strdeq	r1, [r0], -ip
   1228c:	push	{r4, lr}
   12290:	mov	r4, r1
   12294:	mov	r1, r2
   12298:	bl	11ed0 <strspn@plt+0x122c>
   1229c:	vldr	d6, [pc, #28]	; 122c0 <strspn@plt+0x161c>
   122a0:	vcvt.s32.f64	s15, d0
   122a4:	vcvt.f64.s32	d5, s15
   122a8:	vstr	s15, [r4]
   122ac:	vsub.f64	d0, d0, d5
   122b0:	vmul.f64	d0, d0, d6
   122b4:	vcvt.s32.f64	s0, d0
   122b8:	vstr	s0, [r4, #4]
   122bc:	pop	{r4, pc}
   122c0:	andeq	r0, r0, r0
   122c4:	smlawbmi	lr, r0, r4, r8
   122c8:	and	r2, r0, #61440	; 0xf000
   122cc:	cmp	r2, #16384	; 0x4000
   122d0:	moveq	r2, r1
   122d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122d8:	moveq	sl, #100	; 0x64
   122dc:	mov	r3, r0
   122e0:	add	r9, r1, #1
   122e4:	add	r8, r1, #2
   122e8:	add	r7, r1, #3
   122ec:	add	r6, r1, #4
   122f0:	add	r5, r1, #5
   122f4:	add	r4, r1, #6
   122f8:	add	lr, r1, #7
   122fc:	add	ip, r1, #8
   12300:	add	r0, r1, #9
   12304:	strbeq	sl, [r2], #10
   12308:	beq	123ac <strspn@plt+0x1708>
   1230c:	cmp	r2, #40960	; 0xa000
   12310:	moveq	r2, r1
   12314:	moveq	sl, #108	; 0x6c
   12318:	strbeq	sl, [r2], #10
   1231c:	beq	123ac <strspn@plt+0x1708>
   12320:	cmp	r2, #8192	; 0x2000
   12324:	moveq	r2, r1
   12328:	moveq	sl, #99	; 0x63
   1232c:	strbeq	sl, [r2], #10
   12330:	beq	123ac <strspn@plt+0x1708>
   12334:	cmp	r2, #24576	; 0x6000
   12338:	moveq	r2, r1
   1233c:	moveq	sl, #98	; 0x62
   12340:	strbeq	sl, [r2], #10
   12344:	beq	123ac <strspn@plt+0x1708>
   12348:	cmp	r2, #49152	; 0xc000
   1234c:	moveq	r2, r1
   12350:	moveq	sl, #115	; 0x73
   12354:	strbeq	sl, [r2], #10
   12358:	beq	123ac <strspn@plt+0x1708>
   1235c:	cmp	r2, #4096	; 0x1000
   12360:	moveq	r2, r1
   12364:	moveq	sl, #112	; 0x70
   12368:	strbeq	sl, [r2], #10
   1236c:	beq	123ac <strspn@plt+0x1708>
   12370:	cmp	r2, #32768	; 0x8000
   12374:	moveq	r2, r1
   12378:	moveq	sl, #45	; 0x2d
   1237c:	strbeq	sl, [r2], #10
   12380:	beq	123ac <strspn@plt+0x1708>
   12384:	mov	r2, r0
   12388:	mov	r0, ip
   1238c:	mov	ip, lr
   12390:	mov	lr, r4
   12394:	mov	r4, r5
   12398:	mov	r5, r6
   1239c:	mov	r6, r7
   123a0:	mov	r7, r8
   123a4:	mov	r8, r9
   123a8:	mov	r9, r1
   123ac:	tst	r3, #256	; 0x100
   123b0:	movne	fp, #114	; 0x72
   123b4:	moveq	fp, #45	; 0x2d
   123b8:	tst	r3, #128	; 0x80
   123bc:	movne	sl, #119	; 0x77
   123c0:	moveq	sl, #45	; 0x2d
   123c4:	tst	r3, #2048	; 0x800
   123c8:	strb	fp, [r9]
   123cc:	and	r9, r3, #64	; 0x40
   123d0:	strb	sl, [r8]
   123d4:	beq	12470 <strspn@plt+0x17cc>
   123d8:	cmp	r9, #0
   123dc:	movne	r9, #115	; 0x73
   123e0:	moveq	r9, #83	; 0x53
   123e4:	tst	r3, #32
   123e8:	movne	r8, #114	; 0x72
   123ec:	moveq	r8, #45	; 0x2d
   123f0:	tst	r3, #16
   123f4:	strb	r9, [r7]
   123f8:	movne	r7, #119	; 0x77
   123fc:	moveq	r7, #45	; 0x2d
   12400:	tst	r3, #1024	; 0x400
   12404:	strb	r8, [r6]
   12408:	and	r6, r3, #8
   1240c:	strb	r7, [r5]
   12410:	beq	12480 <strspn@plt+0x17dc>
   12414:	cmp	r6, #0
   12418:	movne	r6, #115	; 0x73
   1241c:	moveq	r6, #83	; 0x53
   12420:	tst	r3, #4
   12424:	movne	r5, #114	; 0x72
   12428:	moveq	r5, #45	; 0x2d
   1242c:	tst	r3, #2
   12430:	strb	r6, [r4]
   12434:	movne	r4, #119	; 0x77
   12438:	moveq	r4, #45	; 0x2d
   1243c:	tst	r3, #512	; 0x200
   12440:	strb	r5, [lr]
   12444:	and	r3, r3, #1
   12448:	strb	r4, [ip]
   1244c:	beq	12490 <strspn@plt+0x17ec>
   12450:	cmp	r3, #0
   12454:	movne	ip, #116	; 0x74
   12458:	moveq	ip, #84	; 0x54
   1245c:	mov	r3, #0
   12460:	strb	ip, [r0]
   12464:	mov	r0, r1
   12468:	strb	r3, [r2]
   1246c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12470:	cmp	r9, #0
   12474:	movne	r9, #120	; 0x78
   12478:	moveq	r9, #45	; 0x2d
   1247c:	b	123e4 <strspn@plt+0x1740>
   12480:	cmp	r6, #0
   12484:	movne	r6, #120	; 0x78
   12488:	moveq	r6, #45	; 0x2d
   1248c:	b	12420 <strspn@plt+0x177c>
   12490:	cmp	r3, #0
   12494:	movne	ip, #120	; 0x78
   12498:	moveq	ip, #45	; 0x2d
   1249c:	b	1245c <strspn@plt+0x17b8>
   124a0:	ldr	r1, [pc, #680]	; 12750 <strspn@plt+0x1aac>
   124a4:	ldr	ip, [pc, #680]	; 12754 <strspn@plt+0x1ab0>
   124a8:	add	r1, pc, r1
   124ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b0:	sub	sp, sp, #108	; 0x6c
   124b4:	ldr	r8, [r1, ip]
   124b8:	tst	r0, #2
   124bc:	strd	r2, [sp, #32]
   124c0:	ldr	r1, [r8]
   124c4:	addeq	r9, sp, #60	; 0x3c
   124c8:	str	r1, [sp, #100]	; 0x64
   124cc:	ldrd	r2, [sp, #32]
   124d0:	movne	r1, #32
   124d4:	strbne	r1, [sp, #60]	; 0x3c
   124d8:	addne	ip, sp, #61	; 0x3d
   124dc:	addne	r9, sp, #60	; 0x3c
   124e0:	moveq	ip, r9
   124e4:	mov	r1, #10
   124e8:	mov	sl, #1
   124ec:	sub	lr, r1, #32
   124f0:	lsl	r4, sl, r1
   124f4:	lsl	r5, sl, lr
   124f8:	rsb	lr, r1, #32
   124fc:	orr	r5, r5, sl, lsr lr
   12500:	cmp	r3, r5
   12504:	cmpeq	r2, r4
   12508:	bcc	126c4 <strspn@plt+0x1a20>
   1250c:	add	r1, r1, #10
   12510:	cmp	r1, #70	; 0x46
   12514:	bne	124ec <strspn@plt+0x1848>
   12518:	mov	lr, ip
   1251c:	strd	r2, [sp, #32]
   12520:	mov	r4, r2
   12524:	tst	r0, #1
   12528:	mov	r2, #69	; 0x45
   1252c:	bic	r5, r3, #-268435456	; 0xf0000000
   12530:	lsr	sl, r3, #28
   12534:	strb	r2, [lr], #1
   12538:	bne	126ac <strspn@plt+0x1a08>
   1253c:	orrs	r3, r4, r5
   12540:	mov	r3, #0
   12544:	strb	r3, [lr]
   12548:	beq	126ec <strspn@plt+0x1a48>
   1254c:	sub	r2, r1, #20
   12550:	rsb	r0, r2, #32
   12554:	lsr	r3, r4, r2
   12558:	sub	r1, r1, #52	; 0x34
   1255c:	orr	r3, r3, r5, lsl r0
   12560:	orr	r3, r3, r5, lsr r1
   12564:	lsr	r2, r5, r2
   12568:	adds	r6, r3, #50	; 0x32
   1256c:	adc	r7, r2, #0
   12570:	mov	r3, #0
   12574:	mov	r2, #100	; 0x64
   12578:	mov	r0, r6
   1257c:	mov	r1, r7
   12580:	bl	13070 <strspn@plt+0x23cc>
   12584:	cmp	r1, #0
   12588:	cmpeq	r0, #10
   1258c:	mov	r2, r0
   12590:	mov	r3, r1
   12594:	addeq	sl, sl, #1
   12598:	beq	126ec <strspn@plt+0x1a48>
   1259c:	cmp	r7, #0
   125a0:	cmpeq	r6, #99	; 0x63
   125a4:	strd	r2, [sp, #32]
   125a8:	bls	126ec <strspn@plt+0x1a48>
   125ac:	bl	10c50 <localeconv@plt>
   125b0:	ldrd	r2, [sp, #32]
   125b4:	cmp	r0, #0
   125b8:	beq	12734 <strspn@plt+0x1a90>
   125bc:	ldr	r0, [r0]
   125c0:	cmp	r0, #0
   125c4:	beq	12740 <strspn@plt+0x1a9c>
   125c8:	ldrsb	r1, [r0]
   125cc:	cmp	r1, #0
   125d0:	ldreq	r0, [pc, #384]	; 12758 <strspn@plt+0x1ab4>
   125d4:	addeq	r0, pc, r0
   125d8:	ldr	r1, [pc, #380]	; 1275c <strspn@plt+0x1ab8>
   125dc:	strd	r2, [sp, #16]
   125e0:	add	r1, pc, r1
   125e4:	add	r4, sp, #68	; 0x44
   125e8:	mov	r3, #32
   125ec:	str	r0, [sp, #8]
   125f0:	str	r1, [sp]
   125f4:	str	r9, [sp, #24]
   125f8:	str	sl, [sp, #4]
   125fc:	mov	r0, r4
   12600:	mov	r1, r3
   12604:	mov	r2, #1
   12608:	bl	10c98 <__snprintf_chk@plt>
   1260c:	b	12714 <strspn@plt+0x1a70>
   12610:	ldr	r4, [pc, #328]	; 12760 <strspn@plt+0x1abc>
   12614:	mvn	sl, #0
   12618:	ldr	fp, [pc, #324]	; 12764 <strspn@plt+0x1ac0>
   1261c:	umull	r2, r3, lr, r4
   12620:	sub	r4, r1, #42	; 0x2a
   12624:	strd	r2, [sp, #40]	; 0x28
   12628:	ldr	r3, [sp, #44]	; 0x2c
   1262c:	lsl	r2, sl, lr
   12630:	lsr	r3, r3, #3
   12634:	str	r3, [sp, #52]	; 0x34
   12638:	ldr	r3, [sp, #32]
   1263c:	str	r4, [sp, #48]	; 0x30
   12640:	orr	r4, r2, sl, lsl r4
   12644:	lsr	r2, r3, lr
   12648:	mov	r3, r2
   1264c:	ldr	r2, [sp, #52]	; 0x34
   12650:	add	fp, pc, fp
   12654:	str	r4, [sp, #40]	; 0x28
   12658:	ldrsb	fp, [fp, r2]
   1265c:	mov	r2, r3
   12660:	ldr	r3, [sp, #36]	; 0x24
   12664:	rsb	r5, lr, #32
   12668:	ldr	r4, [sp, #40]	; 0x28
   1266c:	orr	r2, r2, r3, lsl r5
   12670:	orr	r4, r4, sl, lsr r5
   12674:	ldr	r3, [sp, #32]
   12678:	str	r4, [sp, #40]	; 0x28
   1267c:	cmp	r0, #0
   12680:	bic	r4, r3, sl, lsl lr
   12684:	ldr	r0, [sp, #36]	; 0x24
   12688:	ldr	r3, [sp, #48]	; 0x30
   1268c:	mov	lr, ip
   12690:	orr	sl, r2, r0, lsr r3
   12694:	ldr	r3, [sp, #40]	; 0x28
   12698:	strb	fp, [lr], #1
   1269c:	bic	r5, r0, r3
   126a0:	beq	1253c <strspn@plt+0x1898>
   126a4:	cmp	fp, #66	; 0x42
   126a8:	beq	1253c <strspn@plt+0x1898>
   126ac:	mov	r3, #105	; 0x69
   126b0:	strb	r3, [ip, #1]
   126b4:	mov	r3, #66	; 0x42
   126b8:	add	lr, ip, #3
   126bc:	strb	r3, [ip, #2]
   126c0:	b	1253c <strspn@plt+0x1898>
   126c4:	subs	lr, r1, #10
   126c8:	strd	r2, [sp, #32]
   126cc:	and	r0, r0, #1
   126d0:	bne	12610 <strspn@plt+0x196c>
   126d4:	ldr	sl, [sp, #32]
   126d8:	cmp	r0, #0
   126dc:	movne	r0, lr
   126e0:	mov	r3, #66	; 0x42
   126e4:	strb	r0, [ip, #1]
   126e8:	strb	r3, [ip]
   126ec:	ldr	r2, [pc, #116]	; 12768 <strspn@plt+0x1ac4>
   126f0:	add	r4, sp, #68	; 0x44
   126f4:	add	r2, pc, r2
   126f8:	mov	r3, #32
   126fc:	stm	sp, {r2, sl}
   12700:	str	r9, [sp, #8]
   12704:	mov	r0, r4
   12708:	mov	r1, r3
   1270c:	mov	r2, #1
   12710:	bl	10c98 <__snprintf_chk@plt>
   12714:	mov	r0, r4
   12718:	bl	10b18 <strdup@plt>
   1271c:	ldr	r2, [sp, #100]	; 0x64
   12720:	ldr	r3, [r8]
   12724:	cmp	r2, r3
   12728:	bne	1274c <strspn@plt+0x1aa8>
   1272c:	add	sp, sp, #108	; 0x6c
   12730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12734:	ldr	r0, [pc, #48]	; 1276c <strspn@plt+0x1ac8>
   12738:	add	r0, pc, r0
   1273c:	b	125d8 <strspn@plt+0x1934>
   12740:	ldr	r0, [pc, #40]	; 12770 <strspn@plt+0x1acc>
   12744:	add	r0, pc, r0
   12748:	b	125d8 <strspn@plt+0x1934>
   1274c:	bl	10b24 <__stack_chk_fail@plt>
   12750:	andeq	r1, r1, ip, lsl #21
   12754:	strheq	r0, [r0], -r8
   12758:	muleq	r0, ip, lr
   1275c:	muleq	r0, ip, lr
   12760:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12764:	andeq	r0, r0, r4, lsr #28
   12768:	muleq	r0, r4, sp
   1276c:	andeq	r0, r0, r8, lsr sp
   12770:	andeq	r0, r0, ip, lsr #26
   12774:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12778:	subs	r4, r0, #0
   1277c:	beq	1284c <strspn@plt+0x1ba8>
   12780:	ldrsb	lr, [r4]
   12784:	cmp	lr, #0
   12788:	beq	1284c <strspn@plt+0x1ba8>
   1278c:	cmp	r1, #0
   12790:	clz	ip, r2
   12794:	lsr	ip, ip, #5
   12798:	moveq	r0, #1
   1279c:	movne	r0, ip
   127a0:	cmp	r3, #0
   127a4:	moveq	r0, #1
   127a8:	cmp	r0, #0
   127ac:	bne	1284c <strspn@plt+0x1ba8>
   127b0:	mov	r8, r3
   127b4:	mov	r7, r2
   127b8:	mov	r9, r1
   127bc:	mov	r5, r0
   127c0:	b	1281c <strspn@plt+0x1b78>
   127c4:	cmp	r3, #0
   127c8:	bne	12808 <strspn@plt+0x1b64>
   127cc:	cmn	r4, #1
   127d0:	add	r6, r4, #1
   127d4:	beq	12854 <strspn@plt+0x1bb0>
   127d8:	cmp	r0, r6
   127dc:	bcs	1284c <strspn@plt+0x1ba8>
   127e0:	sub	r1, r6, r0
   127e4:	blx	r8
   127e8:	cmn	r0, #1
   127ec:	beq	1284c <strspn@plt+0x1ba8>
   127f0:	str	r0, [r9, r5, lsl #2]
   127f4:	ldrsb	r3, [r6]
   127f8:	add	r5, r5, #1
   127fc:	cmp	r3, #0
   12800:	beq	12854 <strspn@plt+0x1bb0>
   12804:	mov	r0, #0
   12808:	cmn	r4, #1
   1280c:	beq	12854 <strspn@plt+0x1bb0>
   12810:	ldrsb	lr, [r4, #1]!
   12814:	cmp	lr, #0
   12818:	beq	12854 <strspn@plt+0x1bb0>
   1281c:	cmp	r7, r5
   12820:	mov	r6, r4
   12824:	bls	1285c <strspn@plt+0x1bb8>
   12828:	cmp	r0, #0
   1282c:	moveq	r0, r4
   12830:	cmp	lr, #44	; 0x2c
   12834:	ldrsb	r3, [r4, #1]
   12838:	bne	127c4 <strspn@plt+0x1b20>
   1283c:	cmp	r3, #0
   12840:	beq	127cc <strspn@plt+0x1b28>
   12844:	cmp	r0, r6
   12848:	bcc	127e0 <strspn@plt+0x1b3c>
   1284c:	mvn	r0, #0
   12850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12854:	mov	r0, r5
   12858:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1285c:	mvn	r0, #1
   12860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12864:	cmp	r0, #0
   12868:	beq	128d4 <strspn@plt+0x1c30>
   1286c:	push	{r4, lr}
   12870:	mov	r4, r3
   12874:	cmp	r4, #0
   12878:	ldrsb	ip, [r0]
   1287c:	clz	r3, ip
   12880:	lsr	r3, r3, #5
   12884:	moveq	r3, #1
   12888:	cmp	r3, #0
   1288c:	bne	128cc <strspn@plt+0x1c28>
   12890:	ldr	lr, [r4]
   12894:	cmp	lr, r2
   12898:	bhi	128cc <strspn@plt+0x1c28>
   1289c:	cmp	ip, #43	; 0x2b
   128a0:	strne	r3, [r4]
   128a4:	addeq	r0, r0, #1
   128a8:	ldr	r3, [sp, #8]
   128ac:	addeq	r1, r1, lr, lsl #2
   128b0:	subeq	r2, r2, lr
   128b4:	bl	12774 <strspn@plt+0x1ad0>
   128b8:	cmp	r0, #0
   128bc:	ldrgt	r3, [r4]
   128c0:	addgt	r3, r3, r0
   128c4:	strgt	r3, [r4]
   128c8:	pop	{r4, pc}
   128cc:	mvn	r0, #0
   128d0:	pop	{r4, pc}
   128d4:	mvn	r0, #0
   128d8:	bx	lr
   128dc:	cmp	r2, #0
   128e0:	clz	r3, r1
   128e4:	lsr	r3, r3, #5
   128e8:	moveq	r3, #1
   128ec:	cmp	r0, #0
   128f0:	moveq	r3, #1
   128f4:	cmp	r3, #0
   128f8:	bne	129c4 <strspn@plt+0x1d20>
   128fc:	push	{r4, r5, r6, r7, r8, lr}
   12900:	mov	r6, r2
   12904:	mov	r2, r3
   12908:	ldrsb	r3, [r0]
   1290c:	mov	r8, r1
   12910:	mov	r4, r0
   12914:	mov	r7, #1
   12918:	cmp	r3, #0
   1291c:	beq	1298c <strspn@plt+0x1ce8>
   12920:	cmp	r2, #0
   12924:	moveq	r2, r4
   12928:	cmp	r3, #44	; 0x2c
   1292c:	mov	r5, r4
   12930:	ldrsb	r3, [r4, #1]!
   12934:	beq	12994 <strspn@plt+0x1cf0>
   12938:	cmp	r3, #0
   1293c:	bne	129b4 <strspn@plt+0x1d10>
   12940:	mov	r5, r4
   12944:	cmp	r2, r5
   12948:	sub	r1, r5, r2
   1294c:	mov	r0, r2
   12950:	bcs	129ac <strspn@plt+0x1d08>
   12954:	blx	r6
   12958:	mov	r2, r4
   1295c:	cmp	r0, #0
   12960:	and	r1, r0, #7
   12964:	poplt	{r4, r5, r6, r7, r8, pc}
   12968:	ldrb	r3, [r8, r0, asr #3]
   1296c:	orr	r3, r3, r7, lsl r1
   12970:	strb	r3, [r8, r0, asr #3]
   12974:	ldrsb	r3, [r5]
   12978:	cmp	r3, #0
   1297c:	beq	1298c <strspn@plt+0x1ce8>
   12980:	ldrsb	r3, [r4]
   12984:	cmp	r3, #0
   12988:	bne	12928 <strspn@plt+0x1c84>
   1298c:	mov	r0, #0
   12990:	pop	{r4, r5, r6, r7, r8, pc}
   12994:	cmp	r3, #0
   12998:	moveq	r5, r4
   1299c:	cmp	r2, r5
   129a0:	sub	r1, r5, r2
   129a4:	mov	r0, r2
   129a8:	bcc	12954 <strspn@plt+0x1cb0>
   129ac:	mvn	r0, #0
   129b0:	pop	{r4, r5, r6, r7, r8, pc}
   129b4:	adds	r4, r5, #1
   129b8:	bne	12918 <strspn@plt+0x1c74>
   129bc:	mov	r0, #0
   129c0:	pop	{r4, r5, r6, r7, r8, pc}
   129c4:	mvn	r0, #21
   129c8:	bx	lr
   129cc:	cmp	r2, #0
   129d0:	clz	r3, r1
   129d4:	lsr	r3, r3, #5
   129d8:	moveq	r3, #1
   129dc:	cmp	r0, #0
   129e0:	moveq	r3, #1
   129e4:	cmp	r3, #0
   129e8:	bne	12aac <strspn@plt+0x1e08>
   129ec:	push	{r4, r5, r6, r7, r8, lr}
   129f0:	mov	r6, r2
   129f4:	mov	r2, r3
   129f8:	ldrsb	r3, [r0]
   129fc:	mov	r7, r1
   12a00:	mov	r4, r0
   12a04:	cmp	r3, #0
   12a08:	beq	12a74 <strspn@plt+0x1dd0>
   12a0c:	cmp	r2, #0
   12a10:	moveq	r2, r4
   12a14:	cmp	r3, #44	; 0x2c
   12a18:	mov	r5, r4
   12a1c:	ldrsb	r3, [r4, #1]!
   12a20:	beq	12a7c <strspn@plt+0x1dd8>
   12a24:	cmp	r3, #0
   12a28:	bne	12a9c <strspn@plt+0x1df8>
   12a2c:	mov	r5, r4
   12a30:	cmp	r2, r5
   12a34:	sub	r1, r5, r2
   12a38:	mov	r0, r2
   12a3c:	bcs	12a94 <strspn@plt+0x1df0>
   12a40:	blx	r6
   12a44:	mov	r2, r4
   12a48:	cmp	r0, #0
   12a4c:	poplt	{r4, r5, r6, r7, r8, pc}
   12a50:	ldr	r3, [r7]
   12a54:	orr	r3, r3, r0
   12a58:	str	r3, [r7]
   12a5c:	ldrsb	r3, [r5]
   12a60:	cmp	r3, #0
   12a64:	beq	12a74 <strspn@plt+0x1dd0>
   12a68:	ldrsb	r3, [r4]
   12a6c:	cmp	r3, #0
   12a70:	bne	12a14 <strspn@plt+0x1d70>
   12a74:	mov	r0, #0
   12a78:	pop	{r4, r5, r6, r7, r8, pc}
   12a7c:	cmp	r3, #0
   12a80:	moveq	r5, r4
   12a84:	cmp	r2, r5
   12a88:	sub	r1, r5, r2
   12a8c:	mov	r0, r2
   12a90:	bcc	12a40 <strspn@plt+0x1d9c>
   12a94:	mvn	r0, #0
   12a98:	pop	{r4, r5, r6, r7, r8, pc}
   12a9c:	adds	r4, r5, #1
   12aa0:	bne	12a04 <strspn@plt+0x1d60>
   12aa4:	mov	r0, #0
   12aa8:	pop	{r4, r5, r6, r7, r8, pc}
   12aac:	mvn	r0, #21
   12ab0:	bx	lr
   12ab4:	ldr	ip, [pc, #396]	; 12c48 <strspn@plt+0x1fa4>
   12ab8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12abc:	add	ip, pc, ip
   12ac0:	ldr	lr, [pc, #388]	; 12c4c <strspn@plt+0x1fa8>
   12ac4:	sub	sp, sp, #8
   12ac8:	mov	r9, r3
   12acc:	ldr	r5, [ip, lr]
   12ad0:	mov	sl, #0
   12ad4:	subs	r4, r0, #0
   12ad8:	ldr	r3, [r5]
   12adc:	mov	r7, r1
   12ae0:	str	sl, [sp]
   12ae4:	mov	r1, ip
   12ae8:	str	r3, [sp, #4]
   12aec:	beq	12b60 <strspn@plt+0x1ebc>
   12af0:	str	r9, [r7]
   12af4:	str	r9, [r2]
   12af8:	mov	r6, r2
   12afc:	bl	10bd8 <__errno_location@plt>
   12b00:	str	sl, [r0]
   12b04:	ldrsb	r3, [r4]
   12b08:	mov	r8, r0
   12b0c:	cmp	r3, #58	; 0x3a
   12b10:	beq	12b7c <strspn@plt+0x1ed8>
   12b14:	mov	sl, sp
   12b18:	mov	r1, sl
   12b1c:	mov	r2, #10
   12b20:	mov	r0, r4
   12b24:	bl	10ac4 <strtol@plt>
   12b28:	str	r0, [r7]
   12b2c:	str	r0, [r6]
   12b30:	ldr	r0, [r8]
   12b34:	cmp	r0, #0
   12b38:	bne	12bcc <strspn@plt+0x1f28>
   12b3c:	ldr	r2, [sp]
   12b40:	cmp	r2, #0
   12b44:	cmpne	r2, r4
   12b48:	beq	12bcc <strspn@plt+0x1f28>
   12b4c:	ldrsb	r3, [r2]
   12b50:	cmp	r3, #58	; 0x3a
   12b54:	beq	12bd4 <strspn@plt+0x1f30>
   12b58:	cmp	r3, #45	; 0x2d
   12b5c:	beq	12be4 <strspn@plt+0x1f40>
   12b60:	mov	r0, #0
   12b64:	ldr	r2, [sp, #4]
   12b68:	ldr	r3, [r5]
   12b6c:	cmp	r2, r3
   12b70:	bne	12c44 <strspn@plt+0x1fa0>
   12b74:	add	sp, sp, #8
   12b78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b7c:	add	r4, r4, #1
   12b80:	mov	r0, r4
   12b84:	mov	r2, #10
   12b88:	mov	r1, sp
   12b8c:	bl	10ac4 <strtol@plt>
   12b90:	str	r0, [r6]
   12b94:	ldr	r3, [r8]
   12b98:	cmp	r3, #0
   12b9c:	bne	12bcc <strspn@plt+0x1f28>
   12ba0:	ldr	r3, [sp]
   12ba4:	cmp	r3, #0
   12ba8:	beq	12bcc <strspn@plt+0x1f28>
   12bac:	ldrsb	r2, [r3]
   12bb0:	sub	r3, r3, r4
   12bb4:	clz	r3, r3
   12bb8:	cmp	r2, #0
   12bbc:	lsr	r3, r3, #5
   12bc0:	movne	r3, #1
   12bc4:	cmp	r3, #0
   12bc8:	beq	12b60 <strspn@plt+0x1ebc>
   12bcc:	mvn	r0, #0
   12bd0:	b	12b64 <strspn@plt+0x1ec0>
   12bd4:	ldrsb	r3, [r2, #1]
   12bd8:	cmp	r3, #0
   12bdc:	streq	r9, [r6]
   12be0:	beq	12b64 <strspn@plt+0x1ec0>
   12be4:	mov	r3, #0
   12be8:	add	r4, r2, #1
   12bec:	str	r3, [r8]
   12bf0:	mov	r1, sl
   12bf4:	mov	r0, r4
   12bf8:	mov	r2, #10
   12bfc:	str	r3, [sp]
   12c00:	bl	10ac4 <strtol@plt>
   12c04:	str	r0, [r6]
   12c08:	ldr	r3, [r8]
   12c0c:	cmp	r3, #0
   12c10:	bne	12bcc <strspn@plt+0x1f28>
   12c14:	ldr	r2, [sp]
   12c18:	cmp	r2, #0
   12c1c:	beq	12bcc <strspn@plt+0x1f28>
   12c20:	ldrsb	r3, [r2]
   12c24:	sub	r2, r2, r4
   12c28:	clz	r2, r2
   12c2c:	cmp	r3, #0
   12c30:	lsr	r2, r2, #5
   12c34:	movne	r2, #1
   12c38:	cmp	r2, #0
   12c3c:	beq	12b60 <strspn@plt+0x1ebc>
   12c40:	b	12bcc <strspn@plt+0x1f28>
   12c44:	bl	10b24 <__stack_chk_fail@plt>
   12c48:	andeq	r1, r1, r8, ror r4
   12c4c:	strheq	r0, [r0], -r8
   12c50:	ldr	r3, [pc, #244]	; 12d4c <strspn@plt+0x20a8>
   12c54:	ldr	r2, [pc, #244]	; 12d50 <strspn@plt+0x20ac>
   12c58:	add	r3, pc, r3
   12c5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c60:	sub	sp, sp, #20
   12c64:	ldr	r9, [r3, r2]
   12c68:	cmp	r0, #0
   12c6c:	cmpne	r1, #0
   12c70:	ldr	r3, [r9]
   12c74:	str	r3, [sp, #12]
   12c78:	beq	12d40 <strspn@plt+0x209c>
   12c7c:	mov	r4, r1
   12c80:	add	r8, sp, #4
   12c84:	add	r7, sp, #8
   12c88:	b	12cc8 <strspn@plt+0x2024>
   12c8c:	cmp	r4, r3
   12c90:	bne	12d40 <strspn@plt+0x209c>
   12c94:	mov	r2, r4
   12c98:	mov	r1, r6
   12c9c:	mov	r0, r5
   12ca0:	bl	10c80 <strncmp@plt>
   12ca4:	cmp	r0, #0
   12ca8:	bne	12d40 <strspn@plt+0x209c>
   12cac:	adds	r0, r5, r4
   12cb0:	moveq	r3, #0
   12cb4:	movne	r3, #1
   12cb8:	adds	r4, r6, r4
   12cbc:	moveq	r3, #0
   12cc0:	cmp	r3, #0
   12cc4:	beq	12d40 <strspn@plt+0x209c>
   12cc8:	mov	r1, r8
   12ccc:	bl	110d0 <strspn@plt+0x42c>
   12cd0:	mov	r1, r7
   12cd4:	mov	r5, r0
   12cd8:	mov	r0, r4
   12cdc:	bl	110d0 <strspn@plt+0x42c>
   12ce0:	ldr	r4, [sp, #4]
   12ce4:	ldr	r3, [sp, #8]
   12ce8:	mov	r6, r0
   12cec:	adds	r0, r4, r3
   12cf0:	beq	12d24 <strspn@plt+0x2080>
   12cf4:	cmp	r0, #1
   12cf8:	bne	12c8c <strspn@plt+0x1fe8>
   12cfc:	cmp	r5, #0
   12d00:	beq	12d10 <strspn@plt+0x206c>
   12d04:	ldrsb	r2, [r5]
   12d08:	cmp	r2, #47	; 0x2f
   12d0c:	beq	12d28 <strspn@plt+0x2084>
   12d10:	cmp	r6, #0
   12d14:	beq	12c8c <strspn@plt+0x1fe8>
   12d18:	ldrsb	r2, [r6]
   12d1c:	cmp	r2, #47	; 0x2f
   12d20:	bne	12c8c <strspn@plt+0x1fe8>
   12d24:	mov	r0, #1
   12d28:	ldr	r2, [sp, #12]
   12d2c:	ldr	r3, [r9]
   12d30:	cmp	r2, r3
   12d34:	bne	12d48 <strspn@plt+0x20a4>
   12d38:	add	sp, sp, #20
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d40:	mov	r0, #0
   12d44:	b	12d28 <strspn@plt+0x2084>
   12d48:	bl	10b24 <__stack_chk_fail@plt>
   12d4c:	ldrdeq	r1, [r1], -ip
   12d50:	strheq	r0, [r0], -r8
   12d54:	orrs	r3, r0, r1
   12d58:	beq	12dd4 <strspn@plt+0x2130>
   12d5c:	cmp	r0, #0
   12d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d64:	mov	r4, r1
   12d68:	mov	r5, r0
   12d6c:	beq	12de0 <strspn@plt+0x213c>
   12d70:	cmp	r1, #0
   12d74:	beq	12df0 <strspn@plt+0x214c>
   12d78:	mov	r6, r2
   12d7c:	bl	10bb4 <strlen@plt>
   12d80:	mvn	r3, r0
   12d84:	cmp	r6, r3
   12d88:	mov	r7, r0
   12d8c:	movhi	r8, #0
   12d90:	bhi	12dcc <strspn@plt+0x2128>
   12d94:	add	r9, r6, r0
   12d98:	add	r0, r9, #1
   12d9c:	bl	10b60 <malloc@plt>
   12da0:	subs	r8, r0, #0
   12da4:	beq	12dcc <strspn@plt+0x2128>
   12da8:	mov	r1, r5
   12dac:	mov	r2, r7
   12db0:	bl	10af4 <memcpy@plt>
   12db4:	mov	r2, r6
   12db8:	mov	r1, r4
   12dbc:	add	r0, r8, r7
   12dc0:	bl	10af4 <memcpy@plt>
   12dc4:	mov	r3, #0
   12dc8:	strb	r3, [r8, r9]
   12dcc:	mov	r0, r8
   12dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12dd4:	ldr	r0, [pc, #28]	; 12df8 <strspn@plt+0x2154>
   12dd8:	add	r0, pc, r0
   12ddc:	b	10b18 <strdup@plt>
   12de0:	mov	r0, r4
   12de4:	mov	r1, r2
   12de8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12dec:	b	10ae8 <strndup@plt>
   12df0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12df4:	b	10b18 <strdup@plt>
   12df8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12dfc:	push	{r4, r5, r6, lr}
   12e00:	subs	r4, r1, #0
   12e04:	mov	r5, r0
   12e08:	moveq	r2, r4
   12e0c:	beq	12e1c <strspn@plt+0x2178>
   12e10:	mov	r0, r4
   12e14:	bl	10bb4 <strlen@plt>
   12e18:	mov	r2, r0
   12e1c:	mov	r1, r4
   12e20:	mov	r0, r5
   12e24:	pop	{r4, r5, r6, lr}
   12e28:	b	12d54 <strspn@plt+0x20b0>
   12e2c:	push	{r1, r2, r3}
   12e30:	ldr	r1, [pc, #132]	; 12ebc <strspn@plt+0x2218>
   12e34:	ldr	r3, [pc, #132]	; 12ec0 <strspn@plt+0x221c>
   12e38:	add	r1, pc, r1
   12e3c:	push	{r4, r5, lr}
   12e40:	mov	r5, r0
   12e44:	ldr	r4, [r1, r3]
   12e48:	sub	sp, sp, #16
   12e4c:	add	ip, sp, #32
   12e50:	ldr	r0, [r4]
   12e54:	ldr	r2, [sp, #28]
   12e58:	str	r0, [sp, #12]
   12e5c:	mov	r3, ip
   12e60:	add	r0, sp, #8
   12e64:	mov	r1, #1
   12e68:	str	ip, [sp, #4]
   12e6c:	bl	10be4 <__vasprintf_chk@plt>
   12e70:	subs	r2, r0, #0
   12e74:	movlt	r5, #0
   12e78:	blt	12e94 <strspn@plt+0x21f0>
   12e7c:	mov	r0, r5
   12e80:	ldr	r1, [sp, #8]
   12e84:	bl	12d54 <strspn@plt+0x20b0>
   12e88:	mov	r5, r0
   12e8c:	ldr	r0, [sp, #8]
   12e90:	bl	10adc <free@plt>
   12e94:	ldr	r2, [sp, #12]
   12e98:	ldr	r3, [r4]
   12e9c:	mov	r0, r5
   12ea0:	cmp	r2, r3
   12ea4:	bne	12eb8 <strspn@plt+0x2214>
   12ea8:	add	sp, sp, #16
   12eac:	pop	{r4, r5, lr}
   12eb0:	add	sp, sp, #12
   12eb4:	bx	lr
   12eb8:	bl	10b24 <__stack_chk_fail@plt>
   12ebc:	strdeq	r1, [r1], -ip
   12ec0:	strheq	r0, [r0], -r8
   12ec4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ec8:	mov	r6, r0
   12ecc:	ldr	r0, [pc, #348]	; 13030 <strspn@plt+0x238c>
   12ed0:	ldr	ip, [pc, #348]	; 13034 <strspn@plt+0x2390>
   12ed4:	add	r0, pc, r0
   12ed8:	ldr	r5, [r6]
   12edc:	ldr	r8, [r0, ip]
   12ee0:	sub	sp, sp, #8
   12ee4:	ldrsb	r4, [r5]
   12ee8:	mov	r9, r2
   12eec:	ldr	r2, [r8]
   12ef0:	cmp	r4, #0
   12ef4:	mov	r7, r1
   12ef8:	str	r2, [sp, #4]
   12efc:	mov	r1, r0
   12f00:	beq	12fb0 <strspn@plt+0x230c>
   12f04:	mov	r0, r5
   12f08:	mov	r1, r9
   12f0c:	mov	sl, r3
   12f10:	bl	10ca4 <strspn@plt>
   12f14:	add	r4, r5, r0
   12f18:	ldrsb	r5, [r5, r0]
   12f1c:	cmp	r5, #0
   12f20:	beq	13018 <strspn@plt+0x2374>
   12f24:	cmp	sl, #0
   12f28:	beq	12fcc <strspn@plt+0x2328>
   12f2c:	ldr	r0, [pc, #260]	; 13038 <strspn@plt+0x2394>
   12f30:	mov	r1, r5
   12f34:	add	r0, pc, r0
   12f38:	bl	10bc0 <strchr@plt>
   12f3c:	cmp	r0, #0
   12f40:	beq	12fe8 <strspn@plt+0x2344>
   12f44:	add	sl, r4, #1
   12f48:	mov	r3, #0
   12f4c:	mov	r0, sl
   12f50:	mov	r1, sp
   12f54:	strb	r5, [sp]
   12f58:	strb	r3, [sp, #1]
   12f5c:	bl	11170 <strspn@plt+0x4cc>
   12f60:	add	r3, r4, r0
   12f64:	str	r0, [r7]
   12f68:	ldrsb	r3, [r3, #1]
   12f6c:	subs	r5, r5, r3
   12f70:	movne	r5, #1
   12f74:	cmp	r3, #0
   12f78:	moveq	r5, #1
   12f7c:	cmp	r5, #0
   12f80:	bne	13018 <strspn@plt+0x2374>
   12f84:	add	r0, r0, #2
   12f88:	add	r5, r4, r0
   12f8c:	ldrsb	r1, [r4, r0]
   12f90:	cmp	r1, #0
   12f94:	beq	12fa8 <strspn@plt+0x2304>
   12f98:	mov	r0, r9
   12f9c:	bl	10bc0 <strchr@plt>
   12fa0:	cmp	r0, #0
   12fa4:	beq	13018 <strspn@plt+0x2374>
   12fa8:	mov	r4, sl
   12fac:	str	r5, [r6]
   12fb0:	ldr	r2, [sp, #4]
   12fb4:	ldr	r3, [r8]
   12fb8:	mov	r0, r4
   12fbc:	cmp	r2, r3
   12fc0:	bne	1302c <strspn@plt+0x2388>
   12fc4:	add	sp, sp, #8
   12fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fcc:	mov	r1, r9
   12fd0:	mov	r0, r4
   12fd4:	bl	10ad0 <strcspn@plt>
   12fd8:	add	r3, r4, r0
   12fdc:	str	r0, [r7]
   12fe0:	str	r3, [r6]
   12fe4:	b	12fb0 <strspn@plt+0x230c>
   12fe8:	mov	r1, r9
   12fec:	mov	r0, r4
   12ff0:	bl	11170 <strspn@plt+0x4cc>
   12ff4:	str	r0, [r7]
   12ff8:	ldrsb	r1, [r4, r0]
   12ffc:	add	r5, r4, r0
   13000:	cmp	r1, #0
   13004:	beq	13024 <strspn@plt+0x2380>
   13008:	mov	r0, r9
   1300c:	bl	10bc0 <strchr@plt>
   13010:	cmp	r0, #0
   13014:	bne	13024 <strspn@plt+0x2380>
   13018:	str	r4, [r6]
   1301c:	mov	r4, #0
   13020:	b	12fb0 <strspn@plt+0x230c>
   13024:	str	r5, [r6]
   13028:	b	12fb0 <strspn@plt+0x230c>
   1302c:	bl	10b24 <__stack_chk_fail@plt>
   13030:	andeq	r1, r1, r0, rrx
   13034:	strheq	r0, [r0], -r8
   13038:	andeq	r0, r0, ip, asr r5
   1303c:	push	{r4, lr}
   13040:	mov	r4, r0
   13044:	b	13050 <strspn@plt+0x23ac>
   13048:	cmp	r0, #10
   1304c:	beq	13068 <strspn@plt+0x23c4>
   13050:	mov	r0, r4
   13054:	bl	10bfc <fgetc@plt>
   13058:	cmn	r0, #1
   1305c:	bne	13048 <strspn@plt+0x23a4>
   13060:	mov	r0, #1
   13064:	pop	{r4, pc}
   13068:	mov	r0, #0
   1306c:	pop	{r4, pc}
   13070:	cmp	r3, #0
   13074:	cmpeq	r2, #0
   13078:	bne	13090 <strspn@plt+0x23ec>
   1307c:	cmp	r1, #0
   13080:	cmpeq	r0, #0
   13084:	mvnne	r1, #0
   13088:	mvnne	r0, #0
   1308c:	b	130ac <strspn@plt+0x2408>
   13090:	sub	sp, sp, #8
   13094:	push	{sp, lr}
   13098:	bl	130bc <strspn@plt+0x2418>
   1309c:	ldr	lr, [sp, #4]
   130a0:	add	sp, sp, #8
   130a4:	pop	{r2, r3}
   130a8:	bx	lr
   130ac:	push	{r1, lr}
   130b0:	mov	r0, #8
   130b4:	bl	10aac <raise@plt>
   130b8:	pop	{r1, pc}
   130bc:	cmp	r1, r3
   130c0:	cmpeq	r0, r2
   130c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130c8:	mov	r4, r0
   130cc:	movcc	r0, #0
   130d0:	mov	r5, r1
   130d4:	ldr	lr, [sp, #36]	; 0x24
   130d8:	movcc	r1, r0
   130dc:	bcc	131d8 <strspn@plt+0x2534>
   130e0:	cmp	r3, #0
   130e4:	clzeq	ip, r2
   130e8:	clzne	ip, r3
   130ec:	addeq	ip, ip, #32
   130f0:	cmp	r5, #0
   130f4:	clzeq	r1, r4
   130f8:	addeq	r1, r1, #32
   130fc:	clzne	r1, r5
   13100:	sub	ip, ip, r1
   13104:	sub	sl, ip, #32
   13108:	lsl	r9, r3, ip
   1310c:	rsb	fp, ip, #32
   13110:	orr	r9, r9, r2, lsl sl
   13114:	orr	r9, r9, r2, lsr fp
   13118:	lsl	r8, r2, ip
   1311c:	cmp	r5, r9
   13120:	cmpeq	r4, r8
   13124:	movcc	r0, #0
   13128:	movcc	r1, r0
   1312c:	bcc	13148 <strspn@plt+0x24a4>
   13130:	mov	r0, #1
   13134:	subs	r4, r4, r8
   13138:	lsl	r1, r0, sl
   1313c:	orr	r1, r1, r0, lsr fp
   13140:	lsl	r0, r0, ip
   13144:	sbc	r5, r5, r9
   13148:	cmp	ip, #0
   1314c:	beq	131d8 <strspn@plt+0x2534>
   13150:	lsr	r6, r8, #1
   13154:	orr	r6, r6, r9, lsl #31
   13158:	lsr	r7, r9, #1
   1315c:	mov	r2, ip
   13160:	b	13184 <strspn@plt+0x24e0>
   13164:	subs	r3, r4, r6
   13168:	sbc	r8, r5, r7
   1316c:	adds	r3, r3, r3
   13170:	adc	r8, r8, r8
   13174:	adds	r4, r3, #1
   13178:	adc	r5, r8, #0
   1317c:	subs	r2, r2, #1
   13180:	beq	131a0 <strspn@plt+0x24fc>
   13184:	cmp	r5, r7
   13188:	cmpeq	r4, r6
   1318c:	bcs	13164 <strspn@plt+0x24c0>
   13190:	adds	r4, r4, r4
   13194:	adc	r5, r5, r5
   13198:	subs	r2, r2, #1
   1319c:	bne	13184 <strspn@plt+0x24e0>
   131a0:	lsr	r3, r4, ip
   131a4:	orr	r3, r3, r5, lsl fp
   131a8:	lsr	r2, r5, ip
   131ac:	orr	r3, r3, r5, lsr sl
   131b0:	adds	r0, r0, r4
   131b4:	mov	r4, r3
   131b8:	lsl	r3, r2, ip
   131bc:	orr	r3, r3, r4, lsl sl
   131c0:	lsl	ip, r4, ip
   131c4:	orr	r3, r3, r4, lsr fp
   131c8:	adc	r1, r1, r5
   131cc:	subs	r0, r0, ip
   131d0:	mov	r5, r2
   131d4:	sbc	r1, r1, r3
   131d8:	cmp	lr, #0
   131dc:	strdne	r4, [lr]
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131e8:	mov	r7, r0
   131ec:	ldr	r6, [pc, #72]	; 1323c <strspn@plt+0x2598>
   131f0:	ldr	r5, [pc, #72]	; 13240 <strspn@plt+0x259c>
   131f4:	add	r6, pc, r6
   131f8:	add	r5, pc, r5
   131fc:	sub	r6, r6, r5
   13200:	mov	r8, r1
   13204:	mov	r9, r2
   13208:	bl	10a8c <raise@plt-0x20>
   1320c:	asrs	r6, r6, #2
   13210:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13214:	mov	r4, #0
   13218:	add	r4, r4, #1
   1321c:	ldr	r3, [r5], #4
   13220:	mov	r2, r9
   13224:	mov	r1, r8
   13228:	mov	r0, r7
   1322c:	blx	r3
   13230:	cmp	r6, r4
   13234:	bne	13218 <strspn@plt+0x2574>
   13238:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1323c:	andeq	r0, r1, r8, lsr ip
   13240:	andeq	r0, r1, r0, lsr ip
   13244:	bx	lr

Disassembly of section .fini:

00013248 <.fini>:
   13248:	push	{r3, lr}
   1324c:	pop	{r3, pc}
