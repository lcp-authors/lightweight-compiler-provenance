
raspbian-preinstalled/xprop:     file format elf32-littlearm


Disassembly of section .init:

0001108c <_init@@Base>:
   1108c:	push	{r3, lr}
   11090:	bl	1249c <mbtowc@plt+0x10d8>
   11094:	pop	{r3, pc}

Disassembly of section .plt:

00011098 <strcmp@plt-0x14>:
   11098:	push	{lr}		; (str lr, [sp, #-4]!)
   1109c:	ldr	lr, [pc, #4]	; 110a8 <_init@@Base+0x1c>
   110a0:	add	lr, pc, lr
   110a4:	ldr	pc, [lr, #8]!
   110a8:	andeq	r5, r1, r8, asr pc

000110ac <strcmp@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #3928]!	; 0xf58

000110b8 <strtol@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #3920]!	; 0xf50

000110c4 <__isoc99_fscanf@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #3912]!	; 0xf48

000110d0 <fopen@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #3904]!	; 0xf40

000110dc <XAllowEvents@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #3896]!	; 0xf38

000110e8 <fflush@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #3888]!	; 0xf30

000110f4 <XCreateFontCursor@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #3880]!	; 0xf28

00011100 <free@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #3872]!	; 0xf20

0001110c <memcpy@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #3864]!	; 0xf18

00011118 <XmbTextListToTextProperty@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #3856]!	; 0xf10

00011124 <_IO_getc@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #3848]!	; 0xf08

00011130 <XQueryTree@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3840]!	; 0xf00

0001113c <strdup@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3832]!	; 0xef8

00011148 <__stack_chk_fail@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3824]!	; 0xef0

00011154 <XFree@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3816]!	; 0xee8

00011160 <realloc@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3808]!	; 0xee0

0001116c <XDeleteProperty@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3800]!	; 0xed8

00011178 <XListProperties@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3792]!	; 0xed0

00011184 <iswprint@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3784]!	; 0xec8

00011190 <XLoadQueryFont@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #86016	; 0x15000
   11198:	ldr	pc, [ip, #3776]!	; 0xec0

0001119c <XGrabPointer@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #86016	; 0x15000
   111a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111a8 <__memcpy_chk@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #86016	; 0x15000
   111b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111b4 <_IO_putc@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #86016	; 0x15000
   111bc:	ldr	pc, [ip, #3752]!	; 0xea8

000111c0 <XDefaultScreen@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #86016	; 0x15000
   111c8:	ldr	pc, [ip, #3744]!	; 0xea0

000111cc <__strcpy_chk@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #86016	; 0x15000
   111d4:	ldr	pc, [ip, #3736]!	; 0xe98

000111d8 <XmbTextPropertyToTextList@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #86016	; 0x15000
   111e0:	ldr	pc, [ip, #3728]!	; 0xe90

000111e4 <XFetchName@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #86016	; 0x15000
   111ec:	ldr	pc, [ip, #3720]!	; 0xe88

000111f0 <getenv@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #86016	; 0x15000
   111f8:	ldr	pc, [ip, #3712]!	; 0xe80

000111fc <puts@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #86016	; 0x15000
   11204:	ldr	pc, [ip, #3704]!	; 0xe78

00011208 <malloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #86016	; 0x15000
   11210:	ldr	pc, [ip, #3696]!	; 0xe70

00011214 <__libc_start_main@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #86016	; 0x15000
   1121c:	ldr	pc, [ip, #3688]!	; 0xe68

00011220 <XOpenDisplay@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #86016	; 0x15000
   11228:	ldr	pc, [ip, #3680]!	; 0xe60

0001122c <__vfprintf_chk@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #86016	; 0x15000
   11234:	ldr	pc, [ip, #3672]!	; 0xe58

00011238 <__gmon_start__@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #86016	; 0x15000
   11240:	ldr	pc, [ip, #3664]!	; 0xe50

00011244 <__ctype_b_loc@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #86016	; 0x15000
   1124c:	ldr	pc, [ip, #3656]!	; 0xe48

00011250 <exit@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #86016	; 0x15000
   11258:	ldr	pc, [ip, #3648]!	; 0xe40

0001125c <XQueryPointer@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #86016	; 0x15000
   11264:	ldr	pc, [ip, #3640]!	; 0xe38

00011268 <strtoul@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #86016	; 0x15000
   11270:	ldr	pc, [ip, #3632]!	; 0xe30

00011274 <strlen@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #86016	; 0x15000
   1127c:	ldr	pc, [ip, #3624]!	; 0xe28

00011280 <XUngrabPointer@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #86016	; 0x15000
   11288:	ldr	pc, [ip, #3616]!	; 0xe20

0001128c <XSetErrorHandler@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #86016	; 0x15000
   11294:	ldr	pc, [ip, #3608]!	; 0xe18

00011298 <ungetc@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #86016	; 0x15000
   112a0:	ldr	pc, [ip, #3600]!	; 0xe10

000112a4 <XNextEvent@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #86016	; 0x15000
   112ac:	ldr	pc, [ip, #3592]!	; 0xe08

000112b0 <XInternAtom@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #86016	; 0x15000
   112b8:	ldr	pc, [ip, #3584]!	; 0xe00

000112bc <__strcat_chk@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #86016	; 0x15000
   112c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112c8 <__sprintf_chk@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #86016	; 0x15000
   112d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112d4 <snprintf@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #86016	; 0x15000
   112dc:	ldr	pc, [ip, #3560]!	; 0xde8

000112e0 <__isoc99_sscanf@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #86016	; 0x15000
   112e8:	ldr	pc, [ip, #3552]!	; 0xde0

000112ec <XChangeProperty@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #86016	; 0x15000
   112f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112f8 <XDisplayName@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #86016	; 0x15000
   11300:	ldr	pc, [ip, #3536]!	; 0xdd0

00011304 <XGetAtomName@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #86016	; 0x15000
   1130c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011310 <__printf_chk@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #86016	; 0x15000
   11318:	ldr	pc, [ip, #3520]!	; 0xdc0

0001131c <XSelectInput@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #86016	; 0x15000
   11324:	ldr	pc, [ip, #3512]!	; 0xdb8

00011328 <__fprintf_chk@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #86016	; 0x15000
   11330:	ldr	pc, [ip, #3504]!	; 0xdb0

00011334 <fclose@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #86016	; 0x15000
   1133c:	ldr	pc, [ip, #3496]!	; 0xda8

00011340 <strtok@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #86016	; 0x15000
   11348:	ldr	pc, [ip, #3488]!	; 0xda0

0001134c <setlocale@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #86016	; 0x15000
   11354:	ldr	pc, [ip, #3480]!	; 0xd98

00011358 <XGetWindowAttributes@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #86016	; 0x15000
   11360:	ldr	pc, [ip, #3472]!	; 0xd90

00011364 <nl_langinfo@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #86016	; 0x15000
   1136c:	ldr	pc, [ip, #3464]!	; 0xd88

00011370 <fputc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #86016	; 0x15000
   11378:	ldr	pc, [ip, #3456]!	; 0xd80

0001137c <sprintf@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #86016	; 0x15000
   11384:	ldr	pc, [ip, #3448]!	; 0xd78

00011388 <XWindowEvent@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #86016	; 0x15000
   11390:	ldr	pc, [ip, #3440]!	; 0xd70

00011394 <XGetWindowProperty@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #86016	; 0x15000
   1139c:	ldr	pc, [ip, #3432]!	; 0xd68

000113a0 <XCloseDisplay@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #86016	; 0x15000
   113a8:	ldr	pc, [ip, #3424]!	; 0xd60

000113ac <abort@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #86016	; 0x15000
   113b4:	ldr	pc, [ip, #3416]!	; 0xd58

000113b8 <__snprintf_chk@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #86016	; 0x15000
   113c0:	ldr	pc, [ip, #3408]!	; 0xd50

000113c4 <mbtowc@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #86016	; 0x15000
   113cc:	ldr	pc, [ip, #3400]!	; 0xd48

Disassembly of section .text:

000113d0 <.text>:
   113d0:	ldr	r2, [pc, #52]	; 1140c <mbtowc@plt+0x48>
   113d4:	ldr	r3, [pc, #52]	; 11410 <mbtowc@plt+0x4c>
   113d8:	push	{lr}		; (str lr, [sp, #-4]!)
   113dc:	sub	sp, sp, #12
   113e0:	ldr	r4, [r2]
   113e4:	ldr	r5, [r3]
   113e8:	bl	112f8 <XDisplayName@plt>
   113ec:	mov	r3, r5
   113f0:	ldr	r2, [pc, #28]	; 11414 <mbtowc@plt+0x50>
   113f4:	mov	r1, #1
   113f8:	str	r0, [sp]
   113fc:	mov	r0, r4
   11400:	bl	11328 <__fprintf_chk@plt>
   11404:	mov	r0, #1
   11408:	bl	11250 <exit@plt>
   1140c:	andeq	r7, r2, r0, asr #11
   11410:	andeq	r7, r2, r4, lsr #2
   11414:	muleq	r1, r0, fp
   11418:	ldr	r3, [pc, #104]	; 11488 <mbtowc@plt+0xc4>
   1141c:	push	{lr}		; (str lr, [sp, #-4]!)
   11420:	mov	r6, r0
   11424:	sub	sp, sp, #12
   11428:	ldr	r0, [r3]
   1142c:	bl	110e8 <fflush@plt>
   11430:	cmp	r6, #0
   11434:	ldr	r5, [pc, #80]	; 1148c <mbtowc@plt+0xc8>
   11438:	ldr	r4, [pc, #80]	; 11490 <mbtowc@plt+0xcc>
   1143c:	beq	11458 <mbtowc@plt+0x94>
   11440:	str	r6, [sp]
   11444:	ldr	r3, [r5]
   11448:	ldr	r2, [pc, #68]	; 11494 <mbtowc@plt+0xd0>
   1144c:	mov	r1, #1
   11450:	ldr	r0, [r4]
   11454:	bl	11328 <__fprintf_chk@plt>
   11458:	ldr	r3, [r5]
   1145c:	ldr	r2, [pc, #52]	; 11498 <mbtowc@plt+0xd4>
   11460:	mov	r1, #1
   11464:	ldr	r0, [r4]
   11468:	bl	11328 <__fprintf_chk@plt>
   1146c:	ldr	r0, [r4]
   11470:	ldr	r3, [pc, #36]	; 1149c <mbtowc@plt+0xd8>
   11474:	ldr	r2, [pc, #36]	; 114a0 <mbtowc@plt+0xdc>
   11478:	mov	r1, #1
   1147c:	bl	11328 <__fprintf_chk@plt>
   11480:	mov	r0, #1
   11484:	bl	11250 <exit@plt>
   11488:	andeq	r7, r2, r4, asr #11
   1148c:	andeq	r7, r2, r4, lsr #2
   11490:	andeq	r7, r2, r0, asr #11
   11494:	andeq	r5, r1, r4, lsl r1
   11498:	andeq	r5, r1, r0, lsr #2
   1149c:	andeq	r5, r1, ip, asr r1
   114a0:	andeq	r5, r1, r4, asr r5
   114a4:	ldr	r3, [pc, #3756]	; 12358 <mbtowc@plt+0xf94>
   114a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114ac:	sub	sp, sp, #196	; 0xc4
   114b0:	ldr	ip, [pc, #3748]	; 1235c <mbtowc@plt+0xf98>
   114b4:	ldr	r2, [r1]
   114b8:	ldr	r3, [r3]
   114bc:	mov	r6, r1
   114c0:	str	r0, [sp, #44]	; 0x2c
   114c4:	ldr	r1, [pc, #3732]	; 12360 <mbtowc@plt+0xf9c>
   114c8:	mov	r0, #0
   114cc:	str	r3, [sp, #188]	; 0xbc
   114d0:	str	r2, [ip]
   114d4:	bl	1134c <setlocale@plt>
   114d8:	mov	r1, r6
   114dc:	add	r0, sp, #44	; 0x2c
   114e0:	bl	12690 <mbtowc@plt+0x12cc>
   114e4:	mov	r1, r6
   114e8:	add	r0, sp, #44	; 0x2c
   114ec:	bl	128b4 <mbtowc@plt+0x14f0>
   114f0:	ldr	sl, [pc, #3692]	; 12364 <mbtowc@plt+0xfa0>
   114f4:	ldr	r4, [sp, #44]	; 0x2c
   114f8:	mov	r3, #0
   114fc:	cmp	r4, r3
   11500:	str	r3, [sl, #16]
   11504:	str	r0, [sl, #52]	; 0x34
   11508:	beq	11548 <mbtowc@plt+0x184>
   1150c:	ldr	r7, [pc, #3668]	; 12368 <mbtowc@plt+0xfa4>
   11510:	sub	r5, r6, #4
   11514:	b	11520 <mbtowc@plt+0x15c>
   11518:	subs	r4, r4, #1
   1151c:	beq	11548 <mbtowc@plt+0x184>
   11520:	mov	r1, r7
   11524:	ldr	r0, [r5, #4]!
   11528:	bl	110ac <strcmp@plt>
   1152c:	cmp	r0, #0
   11530:	bne	11518 <mbtowc@plt+0x154>
   11534:	mov	r3, #1
   11538:	str	r3, [sl, #16]
   1153c:	ldr	r4, [pc, #3624]	; 1236c <mbtowc@plt+0xfa8>
   11540:	mov	r5, #46	; 0x2e
   11544:	b	11550 <mbtowc@plt+0x18c>
   11548:	ldr	r4, [pc, #3616]	; 12370 <mbtowc@plt+0xfac>
   1154c:	mov	r5, #27
   11550:	ldr	r7, [pc, #3612]	; 12374 <mbtowc@plt+0xfb0>
   11554:	sub	r5, r5, #1
   11558:	add	r4, r4, #16
   1155c:	ldr	r0, [r4, #-12]
   11560:	cmp	r0, #0
   11564:	bne	11584 <mbtowc@plt+0x1c0>
   11568:	mov	r2, #1
   1156c:	ldr	r1, [r4, #-16]
   11570:	ldr	r0, [r7]
   11574:	bl	112b0 <XInternAtom@plt>
   11578:	cmp	r0, #0
   1157c:	str	r0, [r4, #-12]
   11580:	beq	1158c <mbtowc@plt+0x1c8>
   11584:	ldmdb	r4, {r1, r2}
   11588:	bl	1317c <mbtowc@plt+0x1db8>
   1158c:	subs	r5, r5, #1
   11590:	add	r4, r4, #16
   11594:	bpl	1155c <mbtowc@plt+0x198>
   11598:	ldr	r0, [pc, #3544]	; 12378 <mbtowc@plt+0xfb4>
   1159c:	bl	111f0 <getenv@plt>
   115a0:	subs	r4, r0, #0
   115a4:	beq	115c4 <mbtowc@plt+0x200>
   115a8:	ldr	r1, [pc, #3532]	; 1237c <mbtowc@plt+0xfb8>
   115ac:	bl	110d0 <fopen@plt>
   115b0:	subs	r5, r0, #0
   115b4:	beq	117b4 <mbtowc@plt+0x3f0>
   115b8:	bl	13204 <mbtowc@plt+0x1e40>
   115bc:	mov	r0, r5
   115c0:	bl	11334 <fclose@plt>
   115c4:	mov	r3, #0
   115c8:	str	r3, [sp, #28]
   115cc:	str	r3, [sp, #24]
   115d0:	str	r3, [sp, #20]
   115d4:	ldr	r7, [sp, #44]	; 0x2c
   115d8:	ldr	r8, [pc, #3488]	; 12380 <mbtowc@plt+0xfbc>
   115dc:	ldr	r9, [pc, #3488]	; 12384 <mbtowc@plt+0xfc0>
   115e0:	b	11618 <mbtowc@plt+0x254>
   115e4:	sub	r7, r7, #2
   115e8:	cmp	r7, #0
   115ec:	str	r7, [sp, #44]	; 0x2c
   115f0:	add	fp, r6, #8
   115f4:	beq	122ac <mbtowc@plt+0xee8>
   115f8:	ldr	r0, [r6, #8]
   115fc:	mov	r2, #10
   11600:	bl	110b8 <strtol@plt>
   11604:	ldr	r3, [pc, #3428]	; 12370 <mbtowc@plt+0xfac>
   11608:	ldr	r5, [sp, #44]	; 0x2c
   1160c:	str	r0, [r3, #1168]	; 0x490
   11610:	mov	r7, r5
   11614:	mov	r6, fp
   11618:	sub	r5, r7, #1
   1161c:	cmp	r5, #0
   11620:	str	r5, [sp, #44]	; 0x2c
   11624:	add	fp, r6, #4
   11628:	ble	117f0 <mbtowc@plt+0x42c>
   1162c:	ldr	r4, [r6, #4]
   11630:	ldrb	r3, [r4]
   11634:	cmp	r3, #45	; 0x2d
   11638:	bne	118ac <mbtowc@plt+0x4e8>
   1163c:	mov	r1, r8
   11640:	mov	r0, r4
   11644:	bl	110ac <strcmp@plt>
   11648:	cmp	r0, #0
   1164c:	beq	11610 <mbtowc@plt+0x24c>
   11650:	mov	r1, r9
   11654:	mov	r0, r4
   11658:	bl	110ac <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	beq	11f20 <mbtowc@plt+0xb5c>
   11664:	ldr	r1, [pc, #3356]	; 12388 <mbtowc@plt+0xfc4>
   11668:	mov	r0, r4
   1166c:	bl	110ac <strcmp@plt>
   11670:	cmp	r0, #0
   11674:	moveq	r3, #1
   11678:	streq	r3, [sl, #60]	; 0x3c
   1167c:	beq	11610 <mbtowc@plt+0x24c>
   11680:	ldr	r1, [pc, #3332]	; 1238c <mbtowc@plt+0xfc8>
   11684:	mov	r0, r4
   11688:	bl	110ac <strcmp@plt>
   1168c:	cmp	r0, #0
   11690:	moveq	r3, #1
   11694:	streq	r3, [sl, #976]	; 0x3d0
   11698:	beq	11610 <mbtowc@plt+0x24c>
   1169c:	ldr	r1, [pc, #3308]	; 12390 <mbtowc@plt+0xfcc>
   116a0:	mov	r0, r4
   116a4:	bl	110ac <strcmp@plt>
   116a8:	subs	r1, r0, #0
   116ac:	beq	115e4 <mbtowc@plt+0x220>
   116b0:	ldr	r1, [pc, #3292]	; 12394 <mbtowc@plt+0xfd0>
   116b4:	mov	r0, r4
   116b8:	bl	110ac <strcmp@plt>
   116bc:	cmp	r0, #0
   116c0:	beq	116d8 <mbtowc@plt+0x314>
   116c4:	ldr	r1, [pc, #3276]	; 12398 <mbtowc@plt+0xfd4>
   116c8:	mov	r0, r4
   116cc:	bl	110ac <strcmp@plt>
   116d0:	cmp	r0, #0
   116d4:	bne	11720 <mbtowc@plt+0x35c>
   116d8:	sub	r7, r7, #2
   116dc:	cmp	r7, #0
   116e0:	str	r7, [sp, #44]	; 0x2c
   116e4:	beq	12300 <mbtowc@plt+0xf3c>
   116e8:	ldr	r1, [pc, #3212]	; 1237c <mbtowc@plt+0xfb8>
   116ec:	ldr	r0, [r6, #8]
   116f0:	bl	110d0 <fopen@plt>
   116f4:	subs	r4, r0, #0
   116f8:	beq	11714 <mbtowc@plt+0x350>
   116fc:	bl	13204 <mbtowc@plt+0x1e40>
   11700:	mov	r0, r4
   11704:	bl	11334 <fclose@plt>
   11708:	add	fp, r6, #8
   1170c:	ldr	r5, [sp, #44]	; 0x2c
   11710:	b	11610 <mbtowc@plt+0x24c>
   11714:	ldr	r1, [r6, #8]
   11718:	ldr	r0, [pc, #3196]	; 1239c <mbtowc@plt+0xfd8>
   1171c:	bl	127d0 <mbtowc@plt+0x140c>
   11720:	ldr	r1, [pc, #3136]	; 12368 <mbtowc@plt+0xfa4>
   11724:	mov	r0, r4
   11728:	bl	110ac <strcmp@plt>
   1172c:	cmp	r0, #0
   11730:	beq	117c0 <mbtowc@plt+0x3fc>
   11734:	ldr	r1, [pc, #3172]	; 123a0 <mbtowc@plt+0xfdc>
   11738:	mov	r0, r4
   1173c:	bl	110ac <strcmp@plt>
   11740:	cmp	r0, #0
   11744:	bne	11f54 <mbtowc@plt+0xb90>
   11748:	add	r4, sp, #64	; 0x40
   1174c:	sub	r7, r7, #2
   11750:	cmp	r7, #0
   11754:	str	r7, [sp, #44]	; 0x2c
   11758:	str	r0, [sp, #64]	; 0x40
   1175c:	str	r0, [r4, #4]
   11760:	str	r0, [r4, #8]
   11764:	str	r0, [r4, #12]
   11768:	str	r0, [r4, #16]
   1176c:	str	r0, [r4, #20]
   11770:	str	r0, [r4, #24]
   11774:	add	fp, r6, #8
   11778:	beq	122f8 <mbtowc@plt+0xf34>
   1177c:	ldr	r2, [sp, #20]
   11780:	ldr	r3, [r6, #8]
   11784:	cmp	r2, #0
   11788:	str	r3, [sp, #68]	; 0x44
   1178c:	beq	121a8 <mbtowc@plt+0xde4>
   11790:	add	r3, sp, #76	; 0x4c
   11794:	ldm	r3, {r0, r1, r2, r3}
   11798:	stm	sp, {r0, r1, r2, r3}
   1179c:	ldr	r0, [sp, #20]
   117a0:	ldm	r4, {r1, r2, r3}
   117a4:	bl	13110 <mbtowc@plt+0x1d4c>
   117a8:	ldr	r5, [sp, #44]	; 0x2c
   117ac:	str	r0, [sp, #20]
   117b0:	b	11610 <mbtowc@plt+0x24c>
   117b4:	mov	r1, r4
   117b8:	ldr	r0, [pc, #3036]	; 1239c <mbtowc@plt+0xfd8>
   117bc:	bl	127d0 <mbtowc@plt+0x140c>
   117c0:	sub	r7, r7, #2
   117c4:	cmp	r7, #0
   117c8:	str	r7, [sp, #44]	; 0x2c
   117cc:	add	fp, r6, #8
   117d0:	beq	122cc <mbtowc@plt+0xf08>
   117d4:	ldr	r0, [r6, #8]
   117d8:	bl	12880 <mbtowc@plt+0x14bc>
   117dc:	mvn	r3, #0
   117e0:	str	r3, [sl, #52]	; 0x34
   117e4:	ldr	r5, [sp, #44]	; 0x2c
   117e8:	str	r0, [sl, #56]	; 0x38
   117ec:	b	11610 <mbtowc@plt+0x24c>
   117f0:	ldr	r3, [sp, #20]
   117f4:	ldr	r2, [sp, #24]
   117f8:	cmp	r2, #0
   117fc:	cmpeq	r3, #0
   11800:	ldr	r3, [sl, #52]	; 0x34
   11804:	beq	118c0 <mbtowc@plt+0x4fc>
   11808:	cmp	r3, #0
   1180c:	beq	11f04 <mbtowc@plt+0xb40>
   11810:	ldr	r3, [sp, #20]
   11814:	cmp	r3, #0
   11818:	beq	12308 <mbtowc@plt+0xf44>
   1181c:	ldr	r3, [sl, #52]	; 0x34
   11820:	cmn	r3, #1
   11824:	beq	12120 <mbtowc@plt+0xd5c>
   11828:	ldr	r4, [sp, #20]
   1182c:	ldr	r8, [r4]
   11830:	cmp	r8, #0
   11834:	ble	12178 <mbtowc@plt+0xdb4>
   11838:	ldr	r9, [pc, #2868]	; 12374 <mbtowc@plt+0xfb0>
   1183c:	mov	r5, r8
   11840:	str	r9, [sp, #32]
   11844:	str	r8, [sp, #28]
   11848:	b	11864 <mbtowc@plt+0x4a0>
   1184c:	mov	r1, r7
   11850:	mov	r0, r6
   11854:	bl	1116c <XDeleteProperty@plt>
   11858:	subs	r5, r5, #1
   1185c:	add	r4, r4, #28
   11860:	beq	11a0c <mbtowc@plt+0x648>
   11864:	ldr	r6, [r9]
   11868:	ldr	r8, [r4, #4]
   1186c:	mov	r2, #1
   11870:	mov	r0, r6
   11874:	mov	r1, r8
   11878:	ldr	r7, [sl, #52]	; 0x34
   1187c:	bl	112b0 <XInternAtom@plt>
   11880:	subs	r2, r0, #0
   11884:	bne	1184c <mbtowc@plt+0x488>
   11888:	ldr	r3, [pc, #2764]	; 1235c <mbtowc@plt+0xf98>
   1188c:	ldr	r0, [pc, #2832]	; 123a4 <mbtowc@plt+0xfe0>
   11890:	str	r8, [sp]
   11894:	ldr	r2, [pc, #2828]	; 123a8 <mbtowc@plt+0xfe4>
   11898:	ldr	r3, [r3]
   1189c:	mov	r1, #1
   118a0:	ldr	r0, [r0]
   118a4:	bl	11328 <__fprintf_chk@plt>
   118a8:	b	11858 <mbtowc@plt+0x494>
   118ac:	ldr	r3, [sp, #20]
   118b0:	ldr	r2, [sp, #24]
   118b4:	cmp	r2, #0
   118b8:	cmpeq	r3, #0
   118bc:	bne	12318 <mbtowc@plt+0xf54>
   118c0:	ldr	r3, [sl, #52]	; 0x34
   118c4:	cmp	r3, #0
   118c8:	beq	11efc <mbtowc@plt+0xb38>
   118cc:	add	r3, sp, #64	; 0x40
   118d0:	ldr	r7, [sp, #44]	; 0x2c
   118d4:	mov	r2, r3
   118d8:	str	r3, [sp, #28]
   118dc:	cmp	r7, #0
   118e0:	mov	r3, #0
   118e4:	str	r3, [r2, #4]
   118e8:	str	r3, [sp, #64]	; 0x40
   118ec:	str	r3, [r2, #8]
   118f0:	str	r3, [r2, #12]
   118f4:	str	r3, [r2, #16]
   118f8:	str	r3, [r2, #20]
   118fc:	str	r3, [r2, #24]
   11900:	beq	11e80 <mbtowc@plt+0xabc>
   11904:	bl	130e4 <mbtowc@plt+0x1d20>
   11908:	cmp	r7, #0
   1190c:	str	r0, [sp, #24]
   11910:	ble	11edc <mbtowc@plt+0xb18>
   11914:	bl	11244 <__ctype_b_loc@plt>
   11918:	mov	r9, r0
   1191c:	b	11970 <mbtowc@plt+0x5ac>
   11920:	cmp	r2, #0
   11924:	beq	122a4 <mbtowc@plt+0xee0>
   11928:	ldr	r6, [fp, #4]
   1192c:	sub	r7, r2, #1
   11930:	add	fp, r8, #4
   11934:	ldr	r3, [pc, #2616]	; 12374 <mbtowc@plt+0xfb0>
   11938:	mov	r2, #1
   1193c:	mov	r1, r6
   11940:	ldr	r0, [r3]
   11944:	str	r6, [sp, #68]	; 0x44
   11948:	bl	112b0 <XInternAtom@plt>
   1194c:	strd	r4, [sp, #84]	; 0x54
   11950:	cmp	r0, #0
   11954:	bne	119e4 <mbtowc@plt+0x620>
   11958:	mov	r2, r6
   1195c:	mov	r1, r5
   11960:	mov	r0, r4
   11964:	bl	143c0 <mbtowc@plt+0x2ffc>
   11968:	cmp	r7, #0
   1196c:	beq	11edc <mbtowc@plt+0xb18>
   11970:	mov	r8, fp
   11974:	ldr	ip, [r9]
   11978:	ldr	r5, [r8], #4
   1197c:	sub	r2, r7, #1
   11980:	ldrb	r0, [r5]
   11984:	lsl	r1, r0, #1
   11988:	ldrh	r4, [ip, r1]
   1198c:	ands	r4, r4, #2048	; 0x800
   11990:	beq	119bc <mbtowc@plt+0x5f8>
   11994:	cmp	r2, #0
   11998:	beq	122c4 <mbtowc@plt+0xf00>
   1199c:	ldr	r1, [fp, #4]
   119a0:	add	ip, fp, #8
   119a4:	mov	r4, r5
   119a8:	ldrb	r0, [r1]
   119ac:	mov	fp, r8
   119b0:	sub	r2, r7, #2
   119b4:	mov	r8, ip
   119b8:	mov	r5, r1
   119bc:	str	r2, [sp, #20]
   119c0:	bl	139ec <mbtowc@plt+0x2628>
   119c4:	ldr	r2, [sp, #20]
   119c8:	cmp	r0, #0
   119cc:	bne	11920 <mbtowc@plt+0x55c>
   119d0:	mov	r6, r5
   119d4:	mov	r7, r2
   119d8:	mov	fp, r8
   119dc:	mov	r5, r0
   119e0:	b	11934 <mbtowc@plt+0x570>
   119e4:	add	r3, sp, #76	; 0x4c
   119e8:	str	r0, [sp, #72]	; 0x48
   119ec:	ldm	r3, {r0, r1, r2, r3}
   119f0:	stm	sp, {r0, r1, r2, r3}
   119f4:	ldr	r3, [sp, #28]
   119f8:	ldr	r0, [sp, #24]
   119fc:	ldm	r3, {r1, r2, r3}
   11a00:	bl	13110 <mbtowc@plt+0x1d4c>
   11a04:	str	r0, [sp, #24]
   11a08:	b	11958 <mbtowc@plt+0x594>
   11a0c:	ldr	r2, [sp, #24]
   11a10:	ldr	r8, [sp, #28]
   11a14:	mov	r3, #28
   11a18:	cmp	r2, #0
   11a1c:	ldr	r2, [sp, #20]
   11a20:	mla	r3, r3, r8, r2
   11a24:	str	r3, [sp, #20]
   11a28:	beq	11b90 <mbtowc@plt+0x7cc>
   11a2c:	ldr	r3, [sl, #52]	; 0x34
   11a30:	cmn	r3, #1
   11a34:	beq	12128 <mbtowc@plt+0xd64>
   11a38:	ldr	r3, [sp, #24]
   11a3c:	ldr	r3, [r3]
   11a40:	cmp	r3, #0
   11a44:	str	r3, [sp, #28]
   11a48:	ldr	r3, [pc, #2340]	; 12374 <mbtowc@plt+0xfb0>
   11a4c:	movgt	r8, #0
   11a50:	str	r3, [sp, #32]
   11a54:	ldrgt	r6, [sp, #24]
   11a58:	strgt	fp, [sp, #36]	; 0x24
   11a5c:	ble	11ba4 <mbtowc@plt+0x7e0>
   11a60:	ldr	r3, [sp, #32]
   11a64:	ldr	r4, [r6, #4]
   11a68:	mov	r2, #0
   11a6c:	ldr	r7, [r3]
   11a70:	ldr	r3, [r6, #16]
   11a74:	mov	r1, r4
   11a78:	mov	r0, r7
   11a7c:	str	r3, [sp, #52]	; 0x34
   11a80:	bl	112b0 <XInternAtom@plt>
   11a84:	add	r2, sp, #60	; 0x3c
   11a88:	add	r1, sp, #56	; 0x38
   11a8c:	str	r8, [sp, #60]	; 0x3c
   11a90:	str	r8, [sp, #56]	; 0x38
   11a94:	str	r0, [sp, #24]
   11a98:	bl	13028 <mbtowc@plt+0x1c64>
   11a9c:	ldr	r0, [sp, #56]	; 0x38
   11aa0:	cmp	r0, #0
   11aa4:	beq	1234c <mbtowc@plt+0xf88>
   11aa8:	bl	13464 <mbtowc@plt+0x20a0>
   11aac:	mov	r1, #0
   11ab0:	mov	r5, r0
   11ab4:	ldr	r0, [sp, #56]	; 0x38
   11ab8:	bl	134d8 <mbtowc@plt+0x2114>
   11abc:	sub	r3, r0, #97	; 0x61
   11ac0:	cmp	r3, #23
   11ac4:	ldrls	pc, [pc, r3, lsl #2]
   11ac8:	b	12340 <mbtowc@plt+0xf7c>
   11acc:	andeq	r1, r1, r8, asr #26
   11ad0:	andeq	r1, r1, r0, ror sp
   11ad4:	muleq	r1, r0, ip
   11ad8:	andeq	r2, r1, r0, asr #6
   11adc:	andeq	r2, r1, r0, asr #6
   11ae0:	andeq	r2, r1, r0, asr #6
   11ae4:	andeq	r2, r1, r0, asr #6
   11ae8:	andeq	r2, r1, r0, asr #6
   11aec:	ldrdeq	r1, [r1], -r8
   11af0:	andeq	r2, r1, r0, asr #6
   11af4:	andeq	r2, r1, r0, asr #6
   11af8:	andeq	r2, r1, r0, asr #6
   11afc:	andeq	r2, r1, r0, asr #6
   11b00:	andeq	r2, r1, r0, asr #6
   11b04:	andeq	r2, r1, r0, asr #6
   11b08:	andeq	r2, r1, r0, asr #6
   11b0c:	andeq	r2, r1, r0, asr #6
   11b10:	andeq	r2, r1, r0, asr #6
   11b14:			; <UNDEFINED> instruction: 0x00011bb8
   11b18:	andeq	r1, r1, r4, asr #27
   11b1c:	andeq	r1, r1, ip, lsr #22
   11b20:	andeq	r2, r1, r0, asr #6
   11b24:	andeq	r2, r1, r0, asr #6
   11b28:	muleq	r1, r0, ip
   11b2c:	cmp	r5, #8
   11b30:	bne	122dc <mbtowc@plt+0xf18>
   11b34:	mov	r2, #0
   11b38:	ldr	r1, [pc, #2156]	; 123ac <mbtowc@plt+0xfe8>
   11b3c:	mov	r0, r7
   11b40:	bl	112b0 <XInternAtom@plt>
   11b44:	ldr	fp, [sp, #52]	; 0x34
   11b48:	mov	r9, r0
   11b4c:	mov	r0, fp
   11b50:	bl	11274 <strlen@plt>
   11b54:	mov	r4, r0
   11b58:	ldr	r1, [sl, #52]	; 0x34
   11b5c:	str	r4, [sp, #12]
   11b60:	stm	sp, {r5, r8, fp}
   11b64:	mov	r3, r9
   11b68:	ldr	r2, [sp, #24]
   11b6c:	mov	r0, r7
   11b70:	bl	112ec <XChangeProperty@plt>
   11b74:	ldr	r3, [sp, #28]
   11b78:	add	r6, r6, #28
   11b7c:	subs	r3, r3, #1
   11b80:	str	r3, [sp, #28]
   11b84:	bne	11a60 <mbtowc@plt+0x69c>
   11b88:	ldr	fp, [sp, #36]	; 0x24
   11b8c:	str	r6, [sp, #24]
   11b90:	ldr	r3, [sp, #20]
   11b94:	ldr	r2, [sp, #24]
   11b98:	cmp	r2, #0
   11b9c:	cmpeq	r3, #0
   11ba0:	beq	118cc <mbtowc@plt+0x508>
   11ba4:	ldr	r3, [sp, #32]
   11ba8:	ldr	r0, [r3]
   11bac:	bl	113a0 <XCloseDisplay@plt>
   11bb0:	mov	r0, #0
   11bb4:	bl	11250 <exit@plt>
   11bb8:	cmp	r5, #8
   11bbc:	bne	122d4 <mbtowc@plt+0xf10>
   11bc0:	ldr	fp, [sp, #52]	; 0x34
   11bc4:	mov	r9, #31
   11bc8:	mov	r0, fp
   11bcc:	bl	11274 <strlen@plt>
   11bd0:	mov	r4, r0
   11bd4:	b	11b58 <mbtowc@plt+0x794>
   11bd8:	ldr	r0, [sp, #52]	; 0x34
   11bdc:	bl	1113c <strdup@plt>
   11be0:	ldr	r1, [pc, #1992]	; 123b0 <mbtowc@plt+0xfec>
   11be4:	str	r0, [sp, #40]	; 0x28
   11be8:	bl	11340 <strtok@plt>
   11bec:	mov	r2, #0
   11bf0:	mov	r1, r2
   11bf4:	bl	11268 <strtoul@plt>
   11bf8:	cmp	r5, #16
   11bfc:	beq	12150 <mbtowc@plt+0xd8c>
   11c00:	cmp	r5, #32
   11c04:	beq	12144 <mbtowc@plt+0xd80>
   11c08:	cmp	r5, #8
   11c0c:	strbeq	r0, [sl, #516]	; 0x204
   11c10:	ldreq	fp, [pc, #1948]	; 123b4 <mbtowc@plt+0xff0>
   11c14:	movne	fp, #0
   11c18:	ldr	r1, [pc, #1936]	; 123b0 <mbtowc@plt+0xfec>
   11c1c:	mov	r0, #0
   11c20:	bl	11340 <strtok@plt>
   11c24:	cmp	r0, #0
   11c28:	beq	12288 <mbtowc@plt+0xec4>
   11c2c:	ldr	r9, [pc, #1916]	; 123b0 <mbtowc@plt+0xfec>
   11c30:	mov	r4, #1
   11c34:	b	11c6c <mbtowc@plt+0x8a8>
   11c38:	cmp	r5, #32
   11c3c:	beq	11e24 <mbtowc@plt+0xa60>
   11c40:	cmp	r5, #8
   11c44:	ldreq	r3, [pc, #1896]	; 123b4 <mbtowc@plt+0xff0>
   11c48:	strbeq	r0, [r4, r3]
   11c4c:	add	r4, r4, #1
   11c50:	cmp	r4, #64	; 0x40
   11c54:	beq	11e58 <mbtowc@plt+0xa94>
   11c58:	mov	r1, r9
   11c5c:	mov	r0, #0
   11c60:	bl	11340 <strtok@plt>
   11c64:	cmp	r0, #0
   11c68:	beq	11e70 <mbtowc@plt+0xaac>
   11c6c:	mov	r2, #0
   11c70:	mov	r1, r2
   11c74:	bl	11268 <strtoul@plt>
   11c78:	cmp	r5, #16
   11c7c:	bne	11c38 <mbtowc@plt+0x874>
   11c80:	ldr	r2, [pc, #1840]	; 123b8 <mbtowc@plt+0xff4>
   11c84:	lsl	r3, r4, #1
   11c88:	strh	r0, [r3, r2]
   11c8c:	b	11c4c <mbtowc@plt+0x888>
   11c90:	ldr	r0, [sp, #52]	; 0x34
   11c94:	bl	1113c <strdup@plt>
   11c98:	ldr	r1, [pc, #1808]	; 123b0 <mbtowc@plt+0xfec>
   11c9c:	str	r0, [sp, #40]	; 0x28
   11ca0:	bl	11340 <strtok@plt>
   11ca4:	mov	r2, #0
   11ca8:	mov	r1, r2
   11cac:	bl	11268 <strtoul@plt>
   11cb0:	cmp	r5, #16
   11cb4:	beq	1216c <mbtowc@plt+0xda8>
   11cb8:	cmp	r5, #32
   11cbc:	beq	12160 <mbtowc@plt+0xd9c>
   11cc0:	cmp	r5, #8
   11cc4:	strbeq	r0, [sl, #68]	; 0x44
   11cc8:	ldreq	fp, [pc, #1772]	; 123bc <mbtowc@plt+0xff8>
   11ccc:	movne	fp, #0
   11cd0:	ldr	r1, [pc, #1752]	; 123b0 <mbtowc@plt+0xfec>
   11cd4:	mov	r0, #0
   11cd8:	bl	11340 <strtok@plt>
   11cdc:	cmp	r0, #0
   11ce0:	beq	12290 <mbtowc@plt+0xecc>
   11ce4:	ldr	r9, [pc, #1732]	; 123b0 <mbtowc@plt+0xfec>
   11ce8:	mov	r4, #1
   11cec:	b	11d24 <mbtowc@plt+0x960>
   11cf0:	cmp	r5, #32
   11cf4:	beq	11e18 <mbtowc@plt+0xa54>
   11cf8:	cmp	r5, #8
   11cfc:	ldreq	r3, [pc, #1720]	; 123bc <mbtowc@plt+0xff8>
   11d00:	strbeq	r0, [r4, r3]
   11d04:	add	r4, r4, #1
   11d08:	cmp	r4, #64	; 0x40
   11d0c:	beq	11e30 <mbtowc@plt+0xa6c>
   11d10:	mov	r1, r9
   11d14:	mov	r0, #0
   11d18:	bl	11340 <strtok@plt>
   11d1c:	cmp	r0, #0
   11d20:	beq	11e48 <mbtowc@plt+0xa84>
   11d24:	mov	r2, #0
   11d28:	mov	r1, r2
   11d2c:	bl	11268 <strtoul@plt>
   11d30:	cmp	r5, #16
   11d34:	bne	11cf0 <mbtowc@plt+0x92c>
   11d38:	ldr	r2, [pc, #1664]	; 123c0 <mbtowc@plt+0xffc>
   11d3c:	lsl	r3, r4, #1
   11d40:	strh	r0, [r3, r2]
   11d44:	b	11d04 <mbtowc@plt+0x940>
   11d48:	ldr	r3, [sp, #32]
   11d4c:	mov	r2, #0
   11d50:	ldr	r1, [sp, #52]	; 0x34
   11d54:	ldr	r0, [r3]
   11d58:	bl	112b0 <XInternAtom@plt>
   11d5c:	mov	r4, #1
   11d60:	ldr	fp, [pc, #1628]	; 123c4 <mbtowc@plt+0x1000>
   11d64:	mov	r9, #4
   11d68:	str	r0, [sl, #972]	; 0x3cc
   11d6c:	b	11b58 <mbtowc@plt+0x794>
   11d70:	ldr	r9, [sp, #52]	; 0x34
   11d74:	ldr	r1, [pc, #1612]	; 123c8 <mbtowc@plt+0x1004>
   11d78:	mov	r0, r9
   11d7c:	bl	110ac <strcmp@plt>
   11d80:	cmp	r0, #0
   11d84:	beq	11fc8 <mbtowc@plt+0xc04>
   11d88:	mov	r0, r9
   11d8c:	ldr	r1, [pc, #1592]	; 123cc <mbtowc@plt+0x1008>
   11d90:	bl	110ac <strcmp@plt>
   11d94:	cmp	r0, #0
   11d98:	bne	12104 <mbtowc@plt+0xd40>
   11d9c:	cmp	r5, #8
   11da0:	beq	12130 <mbtowc@plt+0xd6c>
   11da4:	cmp	r5, #16
   11da8:	bne	12044 <mbtowc@plt+0xc80>
   11dac:	ldr	r3, [pc, #1564]	; 123d0 <mbtowc@plt+0x100c>
   11db0:	mov	r4, #1
   11db4:	mov	fp, r3
   11db8:	strh	r0, [r3]
   11dbc:	mov	r9, #19
   11dc0:	b	11b58 <mbtowc@plt+0x794>
   11dc4:	cmp	r5, #8
   11dc8:	bne	122b4 <mbtowc@plt+0xef0>
   11dcc:	add	r3, sp, #64	; 0x40
   11dd0:	str	r3, [sp]
   11dd4:	mov	r2, #1
   11dd8:	mov	r3, #3
   11ddc:	add	r1, sp, #52	; 0x34
   11de0:	mov	r0, r7
   11de4:	bl	11118 <XmbTextListToTextProperty@plt>
   11de8:	cmp	r0, #0
   11dec:	ldreq	r9, [sp, #68]	; 0x44
   11df0:	ldreq	fp, [sp, #64]	; 0x40
   11df4:	ldreq	r4, [sp, #76]	; 0x4c
   11df8:	beq	11b58 <mbtowc@plt+0x794>
   11dfc:	ldr	r1, [pc, #1440]	; 123a4 <mbtowc@plt+0xfe0>
   11e00:	mov	r3, r4
   11e04:	ldr	r2, [pc, #1480]	; 123d4 <mbtowc@plt+0x1010>
   11e08:	ldr	r0, [r1]
   11e0c:	mov	r1, #1
   11e10:	bl	11328 <__fprintf_chk@plt>
   11e14:	b	11b74 <mbtowc@plt+0x7b0>
   11e18:	ldr	r3, [pc, #1464]	; 123d8 <mbtowc@plt+0x1014>
   11e1c:	str	r0, [r3, r4, lsl #2]
   11e20:	b	11d04 <mbtowc@plt+0x940>
   11e24:	ldr	r3, [pc, #1456]	; 123dc <mbtowc@plt+0x1018>
   11e28:	str	r0, [r3, r4, lsl #2]
   11e2c:	b	11c4c <mbtowc@plt+0x888>
   11e30:	ldr	r1, [pc, #1388]	; 123a4 <mbtowc@plt+0xfe0>
   11e34:	mov	r3, r4
   11e38:	ldr	r2, [pc, #1440]	; 123e0 <mbtowc@plt+0x101c>
   11e3c:	ldr	r0, [r1]
   11e40:	mov	r1, #1
   11e44:	bl	11328 <__fprintf_chk@plt>
   11e48:	ldr	r0, [sp, #40]	; 0x28
   11e4c:	bl	11100 <free@plt>
   11e50:	mov	r9, #6
   11e54:	b	11b58 <mbtowc@plt+0x794>
   11e58:	ldr	r1, [pc, #1348]	; 123a4 <mbtowc@plt+0xfe0>
   11e5c:	mov	r3, r4
   11e60:	ldr	r2, [pc, #1400]	; 123e0 <mbtowc@plt+0x101c>
   11e64:	ldr	r0, [r1]
   11e68:	mov	r1, #1
   11e6c:	bl	11328 <__fprintf_chk@plt>
   11e70:	ldr	r0, [sp, #40]	; 0x28
   11e74:	bl	11100 <free@plt>
   11e78:	mov	r9, #19
   11e7c:	b	11b58 <mbtowc@plt+0x794>
   11e80:	ldr	r1, [sl, #52]	; 0x34
   11e84:	cmn	r1, #1
   11e88:	beq	12274 <mbtowc@plt+0xeb0>
   11e8c:	ldr	r3, [pc, #1248]	; 12374 <mbtowc@plt+0xfb0>
   11e90:	add	r2, sp, #60	; 0x3c
   11e94:	ldr	r0, [r3]
   11e98:	bl	11178 <XListProperties@plt>
   11e9c:	mov	r4, r0
   11ea0:	b	11ec0 <mbtowc@plt+0xafc>
   11ea4:	ldr	r0, [r4, r7, lsl #2]
   11ea8:	bl	13a40 <mbtowc@plt+0x267c>
   11eac:	mov	r1, #0
   11eb0:	add	r7, r7, #1
   11eb4:	mov	r2, r0
   11eb8:	mov	r0, r1
   11ebc:	bl	143c0 <mbtowc@plt+0x2ffc>
   11ec0:	ldr	r3, [sp, #60]	; 0x3c
   11ec4:	cmp	r7, r3
   11ec8:	blt	11ea4 <mbtowc@plt+0xae0>
   11ecc:	mov	r0, r4
   11ed0:	bl	11154 <XFree@plt>
   11ed4:	mov	r3, #0
   11ed8:	str	r3, [sp, #24]
   11edc:	ldr	r3, [sl, #976]	; 0x3d0
   11ee0:	cmp	r3, #0
   11ee4:	beq	11ef4 <mbtowc@plt+0xb30>
   11ee8:	ldr	r1, [sl, #52]	; 0x34
   11eec:	cmn	r1, #1
   11ef0:	bne	12058 <mbtowc@plt+0xc94>
   11ef4:	mov	r0, #0
   11ef8:	bl	11250 <exit@plt>
   11efc:	str	r3, [sp, #24]
   11f00:	str	r3, [sp, #20]
   11f04:	ldr	r3, [pc, #1128]	; 12374 <mbtowc@plt+0xfb0>
   11f08:	ldr	r2, [sp, #28]
   11f0c:	ldr	r0, [r3]
   11f10:	eor	r1, r2, #1
   11f14:	bl	12b00 <mbtowc@plt+0x173c>
   11f18:	str	r0, [sl, #52]	; 0x34
   11f1c:	b	11810 <mbtowc@plt+0x44c>
   11f20:	str	r0, [sp, #20]
   11f24:	ldr	r0, [pc, #1208]	; 123e4 <mbtowc@plt+0x1020>
   11f28:	bl	111fc <puts@plt>
   11f2c:	ldr	r3, [pc, #1064]	; 1235c <mbtowc@plt+0xf98>
   11f30:	ldr	r1, [pc, #1200]	; 123e8 <mbtowc@plt+0x1024>
   11f34:	mov	r0, #1
   11f38:	ldr	r2, [r3]
   11f3c:	bl	11310 <__printf_chk@plt>
   11f40:	ldr	r0, [pc, #1188]	; 123ec <mbtowc@plt+0x1028>
   11f44:	bl	111fc <puts@plt>
   11f48:	ldr	r3, [sp, #20]
   11f4c:	mov	r0, r3
   11f50:	bl	11250 <exit@plt>
   11f54:	ldr	r1, [pc, #1172]	; 123f0 <mbtowc@plt+0x102c>
   11f58:	mov	r0, r4
   11f5c:	bl	110ac <strcmp@plt>
   11f60:	cmp	r0, #0
   11f64:	beq	11fd0 <mbtowc@plt+0xc0c>
   11f68:	ldr	r1, [pc, #1156]	; 123f4 <mbtowc@plt+0x1030>
   11f6c:	mov	r0, r4
   11f70:	bl	110ac <strcmp@plt>
   11f74:	cmp	r0, #0
   11f78:	beq	1219c <mbtowc@plt+0xdd8>
   11f7c:	ldr	r1, [pc, #1140]	; 123f8 <mbtowc@plt+0x1034>
   11f80:	mov	r0, r4
   11f84:	bl	110ac <strcmp@plt>
   11f88:	cmp	r0, #0
   11f8c:	beq	121b4 <mbtowc@plt+0xdf0>
   11f90:	ldr	r1, [pc, #1124]	; 123fc <mbtowc@plt+0x1038>
   11f94:	mov	r0, r4
   11f98:	bl	110ac <strcmp@plt>
   11f9c:	cmp	r0, #0
   11fa0:	beq	121b4 <mbtowc@plt+0xdf0>
   11fa4:	ldr	r1, [pc, #1108]	; 12400 <mbtowc@plt+0x103c>
   11fa8:	mov	r0, r4
   11fac:	bl	110ac <strcmp@plt>
   11fb0:	subs	r5, r0, #0
   11fb4:	bne	12318 <mbtowc@plt+0xf54>
   11fb8:	ldr	r0, [pc, #1092]	; 12404 <mbtowc@plt+0x1040>
   11fbc:	bl	111fc <puts@plt>
   11fc0:	mov	r0, r5
   11fc4:	bl	11250 <exit@plt>
   11fc8:	mov	r0, #1
   11fcc:	b	11d9c <mbtowc@plt+0x9d8>
   11fd0:	add	r4, sp, #64	; 0x40
   11fd4:	cmp	r5, #2
   11fd8:	str	r0, [sp, #64]	; 0x40
   11fdc:	str	r0, [r4, #4]
   11fe0:	str	r0, [r4, #8]
   11fe4:	str	r0, [r4, #12]
   11fe8:	str	r0, [r4, #16]
   11fec:	str	r0, [r4, #20]
   11ff0:	str	r0, [r4, #24]
   11ff4:	ble	122bc <mbtowc@plt+0xef8>
   11ff8:	ldr	r3, [sp, #24]
   11ffc:	ldr	r2, [r6, #8]
   12000:	cmp	r3, #0
   12004:	ldr	r3, [r6, #12]
   12008:	sub	r7, r7, #4
   1200c:	str	r7, [sp, #44]	; 0x2c
   12010:	str	r2, [sp, #68]	; 0x44
   12014:	str	r3, [sp, #80]	; 0x50
   12018:	add	fp, r6, #16
   1201c:	beq	12298 <mbtowc@plt+0xed4>
   12020:	add	r3, sp, #76	; 0x4c
   12024:	ldm	r3, {r0, r1, r2, r3}
   12028:	stm	sp, {r0, r1, r2, r3}
   1202c:	ldr	r0, [sp, #24]
   12030:	ldm	r4, {r1, r2, r3}
   12034:	bl	13110 <mbtowc@plt+0x1d4c>
   12038:	ldr	r5, [sp, #44]	; 0x2c
   1203c:	str	r0, [sp, #24]
   12040:	b	11610 <mbtowc@plt+0x24c>
   12044:	str	r0, [sl, #968]	; 0x3c8
   12048:	mov	r4, #1
   1204c:	ldr	fp, [pc, #948]	; 12408 <mbtowc@plt+0x1044>
   12050:	mov	r9, #19
   12054:	b	11b58 <mbtowc@plt+0x794>
   12058:	ldr	r3, [pc, #788]	; 12374 <mbtowc@plt+0xfb0>
   1205c:	mov	r2, #4325376	; 0x420000
   12060:	str	r3, [sp, #32]
   12064:	ldr	r0, [r3]
   12068:	bl	1131c <XSelectInput@plt>
   1206c:	ldr	r0, [pc, #920]	; 1240c <mbtowc@plt+0x1048>
   12070:	bl	1128c <XSetErrorHandler@plt>
   12074:	ldr	r4, [pc, #916]	; 12410 <mbtowc@plt+0x104c>
   12078:	ldr	r5, [sp, #24]
   1207c:	str	r0, [sl, #12]
   12080:	ldr	r0, [r4]
   12084:	bl	110e8 <fflush@plt>
   12088:	ldr	r3, [sp, #32]
   1208c:	add	r1, sp, #92	; 0x5c
   12090:	ldr	r0, [r3]
   12094:	bl	112a4 <XNextEvent@plt>
   12098:	ldr	r3, [sp, #92]	; 0x5c
   1209c:	cmp	r3, #17
   120a0:	beq	11ef4 <mbtowc@plt+0xb30>
   120a4:	cmp	r3, #28
   120a8:	bne	12080 <mbtowc@plt+0xcbc>
   120ac:	cmp	r5, #0
   120b0:	ldr	r0, [sp, #112]	; 0x70
   120b4:	beq	12190 <mbtowc@plt+0xdcc>
   120b8:	ldr	lr, [r5]
   120bc:	mov	r3, r5
   120c0:	mov	r2, #0
   120c4:	b	120cc <mbtowc@plt+0xd08>
   120c8:	add	r2, r2, #1
   120cc:	cmp	lr, r2
   120d0:	ble	12080 <mbtowc@plt+0xcbc>
   120d4:	mov	r1, r3
   120d8:	add	r3, r3, #28
   120dc:	ldr	ip, [r1, #8]
   120e0:	cmp	r0, ip
   120e4:	bne	120c8 <mbtowc@plt+0xd04>
   120e8:	ldrd	r6, [r1, #20]
   120ec:	bl	13a40 <mbtowc@plt+0x267c>
   120f0:	mov	r1, r7
   120f4:	mov	r2, r0
   120f8:	mov	r0, r6
   120fc:	bl	143c0 <mbtowc@plt+0x2ffc>
   12100:	b	12080 <mbtowc@plt+0xcbc>
   12104:	ldr	r1, [pc, #664]	; 123a4 <mbtowc@plt+0xfe0>
   12108:	mov	r3, r4
   1210c:	ldr	r2, [pc, #768]	; 12414 <mbtowc@plt+0x1050>
   12110:	ldr	r0, [r1]
   12114:	mov	r1, #1
   12118:	bl	11328 <__fprintf_chk@plt>
   1211c:	b	11b74 <mbtowc@plt+0x7b0>
   12120:	ldr	r0, [pc, #752]	; 12418 <mbtowc@plt+0x1054>
   12124:	bl	127d0 <mbtowc@plt+0x140c>
   12128:	ldr	r0, [pc, #748]	; 1241c <mbtowc@plt+0x1058>
   1212c:	bl	127d0 <mbtowc@plt+0x140c>
   12130:	strb	r0, [sl, #964]	; 0x3c4
   12134:	mov	r4, #1
   12138:	ldr	fp, [pc, #736]	; 12420 <mbtowc@plt+0x105c>
   1213c:	mov	r9, #19
   12140:	b	11b58 <mbtowc@plt+0x794>
   12144:	str	r0, [sl, #708]	; 0x2c4
   12148:	ldr	fp, [pc, #652]	; 123dc <mbtowc@plt+0x1018>
   1214c:	b	11c18 <mbtowc@plt+0x854>
   12150:	ldr	r3, [pc, #608]	; 123b8 <mbtowc@plt+0xff4>
   12154:	mov	fp, r3
   12158:	strh	r0, [r3]
   1215c:	b	11c18 <mbtowc@plt+0x854>
   12160:	str	r0, [sl, #260]	; 0x104
   12164:	ldr	fp, [pc, #620]	; 123d8 <mbtowc@plt+0x1014>
   12168:	b	11cd0 <mbtowc@plt+0x90c>
   1216c:	strh	r0, [sl, #132]	; 0x84
   12170:	ldr	fp, [pc, #584]	; 123c0 <mbtowc@plt+0xffc>
   12174:	b	11cd0 <mbtowc@plt+0x90c>
   12178:	ldr	r3, [sp, #24]
   1217c:	cmp	r3, #0
   12180:	ldreq	r3, [pc, #492]	; 12374 <mbtowc@plt+0xfb0>
   12184:	streq	r3, [sp, #32]
   12188:	bne	11a38 <mbtowc@plt+0x674>
   1218c:	b	11ba4 <mbtowc@plt+0x7e0>
   12190:	mov	r7, r5
   12194:	mov	r6, r5
   12198:	b	120ec <mbtowc@plt+0xd28>
   1219c:	mov	r3, #1
   121a0:	str	r3, [sp, #28]
   121a4:	b	11610 <mbtowc@plt+0x24c>
   121a8:	bl	130e4 <mbtowc@plt+0x1d20>
   121ac:	str	r0, [sp, #20]
   121b0:	b	11790 <mbtowc@plt+0x3cc>
   121b4:	sub	r3, r7, #2
   121b8:	cmp	r3, #0
   121bc:	str	r3, [sp, #44]	; 0x2c
   121c0:	beq	122f0 <mbtowc@plt+0xf2c>
   121c4:	sub	r5, r7, #3
   121c8:	ldr	r3, [r6, #8]
   121cc:	cmp	r5, #0
   121d0:	str	r5, [sp, #44]	; 0x2c
   121d4:	str	r3, [sp, #32]
   121d8:	add	fp, r6, #12
   121dc:	beq	122f0 <mbtowc@plt+0xf2c>
   121e0:	bl	11244 <__ctype_b_loc@plt>
   121e4:	ldr	r4, [r6, #12]
   121e8:	ldrb	r2, [r4]
   121ec:	lsl	r2, r2, #1
   121f0:	ldr	r1, [r0]
   121f4:	ldrh	r2, [r1, r2]
   121f8:	tst	r2, #2048	; 0x800
   121fc:	beq	122e4 <mbtowc@plt+0xf20>
   12200:	cmp	r5, #1
   12204:	moveq	r5, #0
   12208:	beq	1222c <mbtowc@plt+0xe68>
   1220c:	ldr	r5, [r6, #16]
   12210:	ldrb	r0, [r5]
   12214:	bl	139ec <mbtowc@plt+0x2628>
   12218:	cmp	r0, #0
   1221c:	addne	fp, r6, #16
   12220:	moveq	r5, r0
   12224:	subne	r7, r7, #4
   12228:	strne	r7, [sp, #44]	; 0x2c
   1222c:	ldr	r0, [pc, #320]	; 12374 <mbtowc@plt+0xfb0>
   12230:	ldr	r1, [sp, #32]
   12234:	mov	r2, #0
   12238:	ldr	r0, [r0]
   1223c:	bl	112b0 <XInternAtom@plt>
   12240:	mov	r2, r5
   12244:	mov	r1, r4
   12248:	bl	1317c <mbtowc@plt+0x1db8>
   1224c:	ldr	r5, [sp, #44]	; 0x2c
   12250:	b	11610 <mbtowc@plt+0x24c>
   12254:	ldr	r3, [r3, #40]	; 0x28
   12258:	ldr	r0, [r3, r7, lsl #3]
   1225c:	bl	13a40 <mbtowc@plt+0x267c>
   12260:	mov	r1, #0
   12264:	add	r7, r7, #1
   12268:	mov	r2, r0
   1226c:	mov	r0, r1
   12270:	bl	143c0 <mbtowc@plt+0x2ffc>
   12274:	ldr	r3, [sl, #56]	; 0x38
   12278:	ldr	r2, [r3, #36]	; 0x24
   1227c:	cmp	r7, r2
   12280:	blt	12254 <mbtowc@plt+0xe90>
   12284:	b	11ed4 <mbtowc@plt+0xb10>
   12288:	mov	r4, #1
   1228c:	b	11e70 <mbtowc@plt+0xaac>
   12290:	mov	r4, #1
   12294:	b	11e48 <mbtowc@plt+0xa84>
   12298:	bl	130e4 <mbtowc@plt+0x1d20>
   1229c:	str	r0, [sp, #24]
   122a0:	b	12020 <mbtowc@plt+0xc5c>
   122a4:	ldr	r0, [pc, #376]	; 12424 <mbtowc@plt+0x1060>
   122a8:	bl	11418 <mbtowc@plt+0x54>
   122ac:	ldr	r0, [pc, #372]	; 12428 <mbtowc@plt+0x1064>
   122b0:	bl	11418 <mbtowc@plt+0x54>
   122b4:	ldr	r0, [pc, #368]	; 1242c <mbtowc@plt+0x1068>
   122b8:	bl	127d0 <mbtowc@plt+0x140c>
   122bc:	ldr	r0, [pc, #364]	; 12430 <mbtowc@plt+0x106c>
   122c0:	bl	11418 <mbtowc@plt+0x54>
   122c4:	ldr	r0, [pc, #360]	; 12434 <mbtowc@plt+0x1070>
   122c8:	bl	11418 <mbtowc@plt+0x54>
   122cc:	ldr	r0, [pc, #356]	; 12438 <mbtowc@plt+0x1074>
   122d0:	bl	11418 <mbtowc@plt+0x54>
   122d4:	ldr	r0, [pc, #352]	; 1243c <mbtowc@plt+0x1078>
   122d8:	bl	127d0 <mbtowc@plt+0x140c>
   122dc:	ldr	r0, [pc, #348]	; 12440 <mbtowc@plt+0x107c>
   122e0:	bl	127d0 <mbtowc@plt+0x140c>
   122e4:	mov	r1, r4
   122e8:	ldr	r0, [pc, #340]	; 12444 <mbtowc@plt+0x1080>
   122ec:	bl	127d0 <mbtowc@plt+0x140c>
   122f0:	ldr	r0, [pc, #336]	; 12448 <mbtowc@plt+0x1084>
   122f4:	bl	11418 <mbtowc@plt+0x54>
   122f8:	ldr	r0, [pc, #332]	; 1244c <mbtowc@plt+0x1088>
   122fc:	bl	11418 <mbtowc@plt+0x54>
   12300:	ldr	r0, [pc, #328]	; 12450 <mbtowc@plt+0x108c>
   12304:	bl	11418 <mbtowc@plt+0x54>
   12308:	ldr	r3, [sp, #24]
   1230c:	cmp	r3, #0
   12310:	bne	11a2c <mbtowc@plt+0x668>
   12314:	b	118cc <mbtowc@plt+0x508>
   12318:	ldr	r2, [pc, #132]	; 123a4 <mbtowc@plt+0xfe0>
   1231c:	ldr	r3, [pc, #56]	; 1235c <mbtowc@plt+0xf98>
   12320:	str	r4, [sp]
   12324:	mov	r1, #1
   12328:	ldr	r0, [r2]
   1232c:	ldr	r3, [r3]
   12330:	ldr	r2, [pc, #284]	; 12454 <mbtowc@plt+0x1090>
   12334:	bl	11328 <__fprintf_chk@plt>
   12338:	mov	r0, #0
   1233c:	bl	11418 <mbtowc@plt+0x54>
   12340:	mov	r1, r0
   12344:	ldr	r0, [pc, #268]	; 12458 <mbtowc@plt+0x1094>
   12348:	bl	127d0 <mbtowc@plt+0x140c>
   1234c:	mov	r1, r4
   12350:	ldr	r0, [pc, #260]	; 1245c <mbtowc@plt+0x1098>
   12354:	bl	127d0 <mbtowc@plt+0x140c>
   12358:	andeq	r6, r2, r0, lsl #30
   1235c:	andeq	r7, r2, r4, lsr #2
   12360:	andeq	r5, r1, ip, lsl r1
   12364:	ldrdeq	r7, [r2], -r8
   12368:	andeq	r5, r1, r8, asr r5
   1236c:	ldrdeq	r7, [r2], -r8
   12370:	andeq	r7, r2, r8, lsr #2
   12374:	andeq	r7, r2, ip, asr #11
   12378:	andeq	r5, r1, r0, ror #10
   1237c:	andeq	r5, r1, r0, ror r5
   12380:	andeq	r4, r1, r4, ror #23
   12384:	muleq	r1, r8, r5
   12388:	andeq	r5, r1, ip, lsr #17
   1238c:			; <UNDEFINED> instruction: 0x000158b4
   12390:			; <UNDEFINED> instruction: 0x000158bc
   12394:	andeq	r5, r1, r0, ror #17
   12398:	andeq	r5, r1, ip, ror #17
   1239c:	andeq	r5, r1, r4, ror r5
   123a0:	andeq	r5, r1, r8, lsr #18
   123a4:	andeq	r7, r2, r0, asr #11
   123a8:	andeq	r5, r1, r4, lsr #20
   123ac:	andeq	r5, r1, r0, asr #21
   123b0:	andeq	r5, r1, ip, lsr fp
   123b4:	ldrdeq	r7, [r2], -ip
   123b8:	andeq	r7, r2, ip, lsl r8
   123bc:	andeq	r7, r2, ip, lsl r6
   123c0:	andeq	r7, r2, ip, asr r6
   123c4:	andeq	r7, r2, r4, lsr #19
   123c8:	andeq	r4, r1, r0, ror lr
   123cc:	andeq	r4, r1, r8, ror #28
   123d0:	muleq	r2, lr, r9
   123d4:	andeq	r5, r1, r4, lsl #22
   123d8:	ldrdeq	r7, [r2], -ip
   123dc:	muleq	r2, ip, r8
   123e0:	andeq	r5, r1, r0, asr #22
   123e4:	andeq	r5, r1, r4, lsr #11
   123e8:			; <UNDEFINED> instruction: 0x000155b8
   123ec:	strdeq	r5, [r1], -r4
   123f0:	andeq	r5, r1, r0, asr r9
   123f4:	andeq	r5, r1, r8, ror r9
   123f8:	andeq	r5, r1, r0, lsl #19
   123fc:	andeq	r5, r1, r4, lsl #19
   12400:	andeq	r5, r1, r0, asr #19
   12404:	andeq	r5, r1, ip, asr #19
   12408:	andeq	r7, r2, r0, lsr #19
   1240c:	andeq	r3, r1, r4, lsr #19
   12410:	andeq	r7, r2, r4, asr #11
   12414:	andeq	r5, r1, ip, ror fp
   12418:	strdeq	r5, [r1], -r8
   1241c:	andeq	r5, r1, r0, asr #20
   12420:	muleq	r2, ip, r9
   12424:	andeq	r5, r1, r0, asr #23
   12428:	andeq	r5, r1, r4, asr #17
   1242c:	andeq	r5, r1, ip, asr #21
   12430:	andeq	r5, r1, r8, asr r9
   12434:	andeq	r5, r1, r0, lsr #23
   12438:	andeq	r5, r1, ip, lsl #18
   1243c:	andeq	r5, r1, r4, asr r0
   12440:	andeq	r5, r1, r8, lsl #21
   12444:			; <UNDEFINED> instruction: 0x000159b0
   12448:	andeq	r5, r1, ip, lsl #19
   1244c:	andeq	r5, r1, r0, lsr r9
   12450:	strdeq	r5, [r1], -r0
   12454:	ldrdeq	r5, [r1], -r8
   12458:	andeq	r4, r1, r4, ror #30
   1245c:	andeq	r5, r1, r8, ror #20
   12460:	mov	fp, #0
   12464:	mov	lr, #0
   12468:	pop	{r1}		; (ldr r1, [sp], #4)
   1246c:	mov	r2, sp
   12470:	push	{r2}		; (str r2, [sp, #-4]!)
   12474:	push	{r0}		; (str r0, [sp, #-4]!)
   12478:	ldr	ip, [pc, #16]	; 12490 <mbtowc@plt+0x10cc>
   1247c:	push	{ip}		; (str ip, [sp, #-4]!)
   12480:	ldr	r0, [pc, #12]	; 12494 <mbtowc@plt+0x10d0>
   12484:	ldr	r3, [pc, #12]	; 12498 <mbtowc@plt+0x10d4>
   12488:	bl	11214 <__libc_start_main@plt>
   1248c:	bl	113ac <abort@plt>
   12490:	andeq	r4, r1, r0, lsl #23
   12494:	andeq	r1, r1, r4, lsr #9
   12498:	andeq	r4, r1, r0, lsr #22
   1249c:	ldr	r3, [pc, #20]	; 124b8 <mbtowc@plt+0x10f4>
   124a0:	ldr	r2, [pc, #20]	; 124bc <mbtowc@plt+0x10f8>
   124a4:	add	r3, pc, r3
   124a8:	ldr	r2, [r3, r2]
   124ac:	cmp	r2, #0
   124b0:	bxeq	lr
   124b4:	b	11238 <__gmon_start__@plt>
   124b8:	andeq	r4, r1, r4, asr fp
   124bc:	andeq	r0, r0, r8, lsl r1
   124c0:	ldr	r0, [pc, #24]	; 124e0 <mbtowc@plt+0x111c>
   124c4:	ldr	r3, [pc, #24]	; 124e4 <mbtowc@plt+0x1120>
   124c8:	cmp	r3, r0
   124cc:	bxeq	lr
   124d0:	ldr	r3, [pc, #16]	; 124e8 <mbtowc@plt+0x1124>
   124d4:	cmp	r3, #0
   124d8:	bxeq	lr
   124dc:	bx	r3
   124e0:			; <UNDEFINED> instruction: 0x000275bc
   124e4:			; <UNDEFINED> instruction: 0x000275bc
   124e8:	andeq	r0, r0, r0
   124ec:	ldr	r0, [pc, #36]	; 12518 <mbtowc@plt+0x1154>
   124f0:	ldr	r1, [pc, #36]	; 1251c <mbtowc@plt+0x1158>
   124f4:	sub	r1, r1, r0
   124f8:	asr	r1, r1, #2
   124fc:	add	r1, r1, r1, lsr #31
   12500:	asrs	r1, r1, #1
   12504:	bxeq	lr
   12508:	ldr	r3, [pc, #16]	; 12520 <mbtowc@plt+0x115c>
   1250c:	cmp	r3, #0
   12510:	bxeq	lr
   12514:	bx	r3
   12518:			; <UNDEFINED> instruction: 0x000275bc
   1251c:			; <UNDEFINED> instruction: 0x000275bc
   12520:	andeq	r0, r0, r0
   12524:	push	{r4, lr}
   12528:	ldr	r4, [pc, #24]	; 12548 <mbtowc@plt+0x1184>
   1252c:	ldrb	r3, [r4]
   12530:	cmp	r3, #0
   12534:	popne	{r4, pc}
   12538:	bl	124c0 <mbtowc@plt+0x10fc>
   1253c:	mov	r3, #1
   12540:	strb	r3, [r4]
   12544:	pop	{r4, pc}
   12548:	andeq	r7, r2, r8, asr #11
   1254c:	b	124ec <mbtowc@plt+0x1128>
   12550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12554:	add	r9, r1, #4
   12558:	ldr	r6, [r0]
   1255c:	sub	sp, sp, #12
   12560:	cmp	r6, #1
   12564:	ble	12650 <mbtowc@plt+0x128c>
   12568:	mov	r3, #0
   1256c:	mov	r5, r1
   12570:	mov	r7, r0
   12574:	ldr	r8, [pc, #232]	; 12664 <mbtowc@plt+0x12a0>
   12578:	mov	sl, #1
   1257c:	str	r3, [sp, #4]
   12580:	b	125c4 <mbtowc@plt+0x1200>
   12584:	ldr	r1, [pc, #220]	; 12668 <mbtowc@plt+0x12a4>
   12588:	mov	r0, fp
   1258c:	bl	110ac <strcmp@plt>
   12590:	cmp	r0, #0
   12594:	beq	125e0 <mbtowc@plt+0x121c>
   12598:	ldr	r1, [pc, #204]	; 1266c <mbtowc@plt+0x12a8>
   1259c:	mov	r0, fp
   125a0:	bl	110ac <strcmp@plt>
   125a4:	add	r1, r9, #4
   125a8:	cmp	r0, #0
   125ac:	beq	12620 <mbtowc@plt+0x125c>
   125b0:	add	sl, sl, #1
   125b4:	cmp	r6, sl
   125b8:	str	fp, [r9]
   125bc:	mov	r9, r1
   125c0:	ble	1260c <mbtowc@plt+0x1248>
   125c4:	ldr	fp, [r5, sl, lsl #2]
   125c8:	mov	r1, r8
   125cc:	mov	r0, fp
   125d0:	bl	110ac <strcmp@plt>
   125d4:	add	r4, r5, sl, lsl #2
   125d8:	cmp	r0, #0
   125dc:	bne	12584 <mbtowc@plt+0x11c0>
   125e0:	add	sl, sl, #1
   125e4:	cmp	r6, sl
   125e8:	ble	1265c <mbtowc@plt+0x1298>
   125ec:	ldr	r3, [r7]
   125f0:	ldr	r2, [r4, #4]
   125f4:	add	sl, sl, #1
   125f8:	sub	r3, r3, #2
   125fc:	cmp	r6, sl
   12600:	str	r2, [sp, #4]
   12604:	str	r3, [r7]
   12608:	bgt	125c4 <mbtowc@plt+0x1200>
   1260c:	mov	r3, #0
   12610:	ldr	r0, [sp, #4]
   12614:	str	r3, [r9]
   12618:	add	sp, sp, #12
   1261c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12620:	mov	r3, r4
   12624:	mov	r2, r3
   12628:	mov	r4, fp
   1262c:	b	12638 <mbtowc@plt+0x1274>
   12630:	ldr	r4, [r2, #4]!
   12634:	add	r1, r1, #4
   12638:	add	sl, sl, #1
   1263c:	cmp	r6, sl
   12640:	str	r4, [r1, #-4]
   12644:	mov	r9, r1
   12648:	bgt	12630 <mbtowc@plt+0x126c>
   1264c:	b	1260c <mbtowc@plt+0x1248>
   12650:	mov	r3, #0
   12654:	str	r3, [sp, #4]
   12658:	b	1260c <mbtowc@plt+0x1248>
   1265c:	ldr	r0, [pc, #12]	; 12670 <mbtowc@plt+0x12ac>
   12660:	bl	11418 <mbtowc@plt+0x54>
   12664:			; <UNDEFINED> instruction: 0x00014bb4
   12668:	andeq	r4, r1, r0, asr #23
   1266c:	andeq	r4, r1, r4, ror #23
   12670:	andeq	r4, r1, r4, asr #23
   12674:	push	{r4, lr}
   12678:	mov	r4, r0
   1267c:	bl	11220 <XOpenDisplay@plt>
   12680:	cmp	r0, #0
   12684:	popne	{r4, pc}
   12688:	mov	r0, r4
   1268c:	bl	113d0 <mbtowc@plt+0xc>
   12690:	push	{r4, lr}
   12694:	bl	12550 <mbtowc@plt+0x118c>
   12698:	mov	r4, r0
   1269c:	bl	11220 <XOpenDisplay@plt>
   126a0:	subs	r3, r0, #0
   126a4:	beq	126bc <mbtowc@plt+0x12f8>
   126a8:	ldr	r4, [pc, #20]	; 126c4 <mbtowc@plt+0x1300>
   126ac:	str	r3, [r4]
   126b0:	bl	111c0 <XDefaultScreen@plt>
   126b4:	str	r0, [r4, #4]
   126b8:	pop	{r4, pc}
   126bc:	mov	r0, r4
   126c0:	bl	113d0 <mbtowc@plt+0xc>
   126c4:	andeq	r7, r2, ip, asr #11
   126c8:	push	{r4, lr}
   126cc:	ldr	r4, [pc, #24]	; 126ec <mbtowc@plt+0x1328>
   126d0:	ldr	r0, [r4]
   126d4:	cmp	r0, #0
   126d8:	popeq	{r4, pc}
   126dc:	bl	113a0 <XCloseDisplay@plt>
   126e0:	mov	r3, #0
   126e4:	str	r3, [r4]
   126e8:	pop	{r4, pc}
   126ec:	andeq	r7, r2, ip, asr #11
   126f0:	push	{r4, r5, r6, r7, r8, lr}
   126f4:	sub	sp, sp, #32
   126f8:	ldr	r6, [pc, #204]	; 127cc <mbtowc@plt+0x1408>
   126fc:	mov	r8, r2
   12700:	add	r2, sp, #12
   12704:	ldr	r3, [r6]
   12708:	mov	r7, r0
   1270c:	str	r3, [sp, #28]
   12710:	mov	r4, r1
   12714:	bl	111e4 <XFetchName@plt>
   12718:	cmp	r0, #0
   1271c:	beq	12734 <mbtowc@plt+0x1370>
   12720:	mov	r1, r8
   12724:	ldr	r0, [sp, #12]
   12728:	bl	110ac <strcmp@plt>
   1272c:	cmp	r0, #0
   12730:	beq	127ac <mbtowc@plt+0x13e8>
   12734:	add	ip, sp, #24
   12738:	add	r0, sp, #16
   1273c:	add	r3, sp, #20
   12740:	mov	r1, r4
   12744:	stm	sp, {r0, ip}
   12748:	mov	r2, r3
   1274c:	mov	r0, r7
   12750:	bl	11130 <XQueryTree@plt>
   12754:	subs	r4, r0, #0
   12758:	beq	127ac <mbtowc@plt+0x13e8>
   1275c:	ldr	r3, [sp, #24]
   12760:	cmp	r3, #0
   12764:	beq	12798 <mbtowc@plt+0x13d4>
   12768:	mov	r5, #0
   1276c:	ldr	r3, [sp, #16]
   12770:	mov	r2, r8
   12774:	mov	r0, r7
   12778:	ldr	r1, [r3, r5, lsl #2]
   1277c:	bl	126f0 <mbtowc@plt+0x132c>
   12780:	subs	r4, r0, #0
   12784:	bne	1279c <mbtowc@plt+0x13d8>
   12788:	ldr	r3, [sp, #24]
   1278c:	add	r5, r5, #1
   12790:	cmp	r5, r3
   12794:	bcc	1276c <mbtowc@plt+0x13a8>
   12798:	mov	r4, #0
   1279c:	ldr	r0, [sp, #16]
   127a0:	cmp	r0, #0
   127a4:	beq	127ac <mbtowc@plt+0x13e8>
   127a8:	bl	11154 <XFree@plt>
   127ac:	ldr	r2, [sp, #28]
   127b0:	ldr	r3, [r6]
   127b4:	mov	r0, r4
   127b8:	cmp	r2, r3
   127bc:	bne	127c8 <mbtowc@plt+0x1404>
   127c0:	add	sp, sp, #32
   127c4:	pop	{r4, r5, r6, r7, r8, pc}
   127c8:	bl	11148 <__stack_chk_fail@plt>
   127cc:	andeq	r6, r2, r0, lsl #30
   127d0:	push	{r0, r1, r2, r3}
   127d4:	ldr	r3, [pc, #140]	; 12868 <mbtowc@plt+0x14a4>
   127d8:	ldr	r2, [pc, #140]	; 1286c <mbtowc@plt+0x14a8>
   127dc:	ldr	r4, [pc, #140]	; 12870 <mbtowc@plt+0x14ac>
   127e0:	push	{lr}		; (str lr, [sp, #-4]!)
   127e4:	sub	sp, sp, #12
   127e8:	ldr	r3, [r3]
   127ec:	ldr	r0, [r2]
   127f0:	str	r3, [sp, #4]
   127f4:	ldr	r6, [sp, #16]
   127f8:	bl	110e8 <fflush@plt>
   127fc:	ldr	r0, [r4]
   12800:	bl	110e8 <fflush@plt>
   12804:	ldr	r3, [pc, #104]	; 12874 <mbtowc@plt+0x14b0>
   12808:	ldr	r2, [pc, #104]	; 12878 <mbtowc@plt+0x14b4>
   1280c:	mov	r1, #1
   12810:	ldr	r3, [r3]
   12814:	ldr	r0, [r4]
   12818:	bl	11328 <__fprintf_chk@plt>
   1281c:	ldr	r5, [pc, #88]	; 1287c <mbtowc@plt+0x14b8>
   12820:	add	ip, sp, #20
   12824:	mov	r2, r6
   12828:	mov	r3, ip
   1282c:	mov	r1, #1
   12830:	ldr	r0, [r4]
   12834:	str	ip, [sp]
   12838:	bl	1122c <__vfprintf_chk@plt>
   1283c:	ldr	r1, [r4]
   12840:	mov	r0, #10
   12844:	bl	11370 <fputc@plt>
   12848:	ldr	r0, [r5]
   1284c:	cmp	r0, #0
   12850:	beq	12860 <mbtowc@plt+0x149c>
   12854:	bl	113a0 <XCloseDisplay@plt>
   12858:	mov	r3, #0
   1285c:	str	r3, [r5]
   12860:	mov	r0, #1
   12864:	bl	11250 <exit@plt>
   12868:	andeq	r6, r2, r0, lsl #30
   1286c:	andeq	r7, r2, r4, asr #11
   12870:	andeq	r7, r2, r0, asr #11
   12874:	andeq	r7, r2, r4, lsr #2
   12878:	andeq	r4, r1, r8, ror #23
   1287c:	andeq	r7, r2, ip, asr #11
   12880:	ldr	r3, [pc, #36]	; 128ac <mbtowc@plt+0x14e8>
   12884:	push	{r4, lr}
   12888:	mov	r1, r0
   1288c:	mov	r4, r0
   12890:	ldr	r0, [r3]
   12894:	bl	11190 <XLoadQueryFont@plt>
   12898:	cmp	r0, #0
   1289c:	popne	{r4, pc}
   128a0:	mov	r1, r4
   128a4:	ldr	r0, [pc, #4]	; 128b0 <mbtowc@plt+0x14ec>
   128a8:	bl	127d0 <mbtowc@plt+0x140c>
   128ac:	andeq	r7, r2, ip, asr #11
   128b0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   128b4:	ldr	r3, [pc, #532]	; 12ad0 <mbtowc@plt+0x170c>
   128b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128bc:	sub	sp, sp, #28
   128c0:	ldr	r2, [r3]
   128c4:	mov	r3, #0
   128c8:	add	r8, r1, #4
   128cc:	str	r3, [sp, #16]
   128d0:	mov	r3, #1
   128d4:	mov	r5, r1
   128d8:	str	r0, [sp, #12]
   128dc:	str	r8, [sp, #8]
   128e0:	str	r2, [sp, #20]
   128e4:	ldr	r6, [r0]
   128e8:	str	r3, [sp, #4]
   128ec:	ldr	r9, [pc, #480]	; 12ad4 <mbtowc@plt+0x1710>
   128f0:	ldr	sl, [pc, #480]	; 12ad8 <mbtowc@plt+0x1714>
   128f4:	ldr	fp, [pc, #480]	; 12adc <mbtowc@plt+0x1718>
   128f8:	b	1293c <mbtowc@plt+0x1578>
   128fc:	subs	r6, r6, #2
   12900:	add	r4, r5, #8
   12904:	beq	12ac4 <mbtowc@plt+0x1700>
   12908:	ldr	r3, [pc, #464]	; 12ae0 <mbtowc@plt+0x171c>
   1290c:	ldr	r2, [r5, #8]
   12910:	ldm	r3, {r0, r3}
   12914:	ldr	r1, [r0, #140]	; 0x8c
   12918:	add	r3, r3, r3, lsl #2
   1291c:	add	r3, r1, r3, lsl #4
   12920:	ldr	r1, [r3, #8]
   12924:	bl	126f0 <mbtowc@plt+0x132c>
   12928:	cmp	r0, #0
   1292c:	str	r0, [sp, #16]
   12930:	beq	12ab8 <mbtowc@plt+0x16f4>
   12934:	mov	r5, r4
   12938:	add	r8, r5, #4
   1293c:	sub	r7, r6, #1
   12940:	cmp	r7, #0
   12944:	ble	12a84 <mbtowc@plt+0x16c0>
   12948:	ldr	r4, [r5, #4]
   1294c:	mov	r1, r9
   12950:	mov	r0, r4
   12954:	bl	110ac <strcmp@plt>
   12958:	cmp	r0, #0
   1295c:	beq	12a44 <mbtowc@plt+0x1680>
   12960:	mov	r1, sl
   12964:	mov	r0, r4
   12968:	bl	110ac <strcmp@plt>
   1296c:	cmp	r0, #0
   12970:	beq	129f4 <mbtowc@plt+0x1630>
   12974:	mov	r1, fp
   12978:	mov	r0, r4
   1297c:	bl	110ac <strcmp@plt>
   12980:	cmp	r0, #0
   12984:	beq	128fc <mbtowc@plt+0x1538>
   12988:	ldr	r1, [pc, #340]	; 12ae4 <mbtowc@plt+0x1720>
   1298c:	mov	r0, r4
   12990:	bl	110ac <strcmp@plt>
   12994:	cmp	r0, #0
   12998:	bne	12a1c <mbtowc@plt+0x1658>
   1299c:	subs	r6, r6, #2
   129a0:	add	r4, r5, #8
   129a4:	beq	12ab0 <mbtowc@plt+0x16ec>
   129a8:	add	r7, sp, #24
   129ac:	ldr	r1, [pc, #308]	; 12ae8 <mbtowc@plt+0x1724>
   129b0:	str	r0, [r7, #-8]!
   129b4:	ldr	r0, [r5, #8]
   129b8:	mov	r2, r7
   129bc:	bl	112e0 <__isoc99_sscanf@plt>
   129c0:	ldr	r3, [sp, #16]
   129c4:	cmp	r3, #0
   129c8:	bne	12934 <mbtowc@plt+0x1570>
   129cc:	mov	r2, r7
   129d0:	ldr	r1, [pc, #276]	; 12aec <mbtowc@plt+0x1728>
   129d4:	ldr	r0, [r5, #8]
   129d8:	bl	112e0 <__isoc99_sscanf@plt>
   129dc:	ldr	r3, [sp, #16]
   129e0:	cmp	r3, #0
   129e4:	bne	12934 <mbtowc@plt+0x1570>
   129e8:	ldr	r1, [r5, #8]
   129ec:	ldr	r0, [pc, #252]	; 12af0 <mbtowc@plt+0x172c>
   129f0:	bl	127d0 <mbtowc@plt+0x140c>
   129f4:	ldr	r3, [pc, #228]	; 12ae0 <mbtowc@plt+0x171c>
   129f8:	mov	r6, r7
   129fc:	mov	r5, r8
   12a00:	ldrd	r2, [r3]
   12a04:	ldr	r2, [r2, #140]	; 0x8c
   12a08:	add	r3, r3, r3, lsl #2
   12a0c:	add	r3, r2, r3, lsl #4
   12a10:	ldr	r3, [r3, #8]
   12a14:	str	r3, [sp, #16]
   12a18:	b	12938 <mbtowc@plt+0x1574>
   12a1c:	ldr	r3, [sp, #8]
   12a20:	ldr	r2, [sp, #4]
   12a24:	add	r3, r3, #4
   12a28:	str	r4, [r3, #-4]
   12a2c:	add	r2, r2, #1
   12a30:	str	r2, [sp, #4]
   12a34:	str	r3, [sp, #8]
   12a38:	mov	r6, r7
   12a3c:	mov	r5, r8
   12a40:	b	12938 <mbtowc@plt+0x1574>
   12a44:	ldr	r3, [sp, #4]
   12a48:	ldr	r1, [sp, #8]
   12a4c:	subs	r2, r6, #2
   12a50:	add	r3, r3, #1
   12a54:	str	r4, [r1]
   12a58:	streq	r3, [sp, #4]
   12a5c:	beq	12a84 <mbtowc@plt+0x16c0>
   12a60:	mov	r3, r1
   12a64:	ldr	r1, [r8, #4]!
   12a68:	subs	r2, r2, #1
   12a6c:	str	r1, [r3, #4]!
   12a70:	bne	12a64 <mbtowc@plt+0x16a0>
   12a74:	ldr	r3, [sp, #4]
   12a78:	add	r6, r6, r3
   12a7c:	sub	r3, r6, #1
   12a80:	str	r3, [sp, #4]
   12a84:	ldr	r3, [sp, #12]
   12a88:	ldr	r2, [sp, #4]
   12a8c:	ldr	r0, [sp, #16]
   12a90:	str	r2, [r3]
   12a94:	ldr	r3, [pc, #52]	; 12ad0 <mbtowc@plt+0x170c>
   12a98:	ldr	r2, [sp, #20]
   12a9c:	ldr	r3, [r3]
   12aa0:	cmp	r2, r3
   12aa4:	bne	12acc <mbtowc@plt+0x1708>
   12aa8:	add	sp, sp, #28
   12aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ab0:	ldr	r0, [pc, #60]	; 12af4 <mbtowc@plt+0x1730>
   12ab4:	bl	11418 <mbtowc@plt+0x54>
   12ab8:	ldr	r1, [r5, #8]
   12abc:	ldr	r0, [pc, #52]	; 12af8 <mbtowc@plt+0x1734>
   12ac0:	bl	127d0 <mbtowc@plt+0x140c>
   12ac4:	ldr	r0, [pc, #48]	; 12afc <mbtowc@plt+0x1738>
   12ac8:	bl	11418 <mbtowc@plt+0x54>
   12acc:	bl	11148 <__stack_chk_fail@plt>
   12ad0:	andeq	r6, r2, r0, lsl #30
   12ad4:	andeq	r4, r1, r4, ror #23
   12ad8:	andeq	r4, r1, ip, lsl #24
   12adc:	andeq	r4, r1, r4, lsl ip
   12ae0:	andeq	r7, r2, ip, asr #11
   12ae4:	andeq	r4, r1, r8, asr ip
   12ae8:	andeq	r4, r1, r8, ror ip
   12aec:	andeq	r4, r1, r0, lsl #25
   12af0:	andeq	r4, r1, r4, lsl #25
   12af4:	andeq	r4, r1, ip, asr ip
   12af8:	andeq	r4, r1, r8, lsr ip
   12afc:	andeq	r4, r1, ip, lsl ip
   12b00:	ldr	r3, [pc, #344]	; 12c60 <mbtowc@plt+0x189c>
   12b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b08:	sub	sp, sp, #132	; 0x84
   12b0c:	ldr	r3, [r3, #4]
   12b10:	ldr	sl, [pc, #332]	; 12c64 <mbtowc@plt+0x18a0>
   12b14:	ldr	r2, [r0, #140]	; 0x8c
   12b18:	add	r3, r3, r3, lsl #2
   12b1c:	ldr	ip, [sl]
   12b20:	add	r3, r2, r3, lsl #4
   12b24:	mov	fp, r1
   12b28:	mov	r1, #34	; 0x22
   12b2c:	ldr	r9, [r3, #8]
   12b30:	mov	r6, r0
   12b34:	str	ip, [sp, #124]	; 0x7c
   12b38:	bl	110f4 <XCreateFontCursor@plt>
   12b3c:	mov	r4, #1
   12b40:	mov	r2, #0
   12b44:	str	r9, [sp, #8]
   12b48:	mov	r1, r9
   12b4c:	str	r2, [sp, #16]
   12b50:	stm	sp, {r2, r4}
   12b54:	mov	r3, #12
   12b58:	str	r0, [sp, #12]
   12b5c:	mov	r0, r6
   12b60:	bl	1119c <XGrabPointer@plt>
   12b64:	subs	r7, r0, #0
   12b68:	moveq	r8, r7
   12b6c:	moveq	r5, r7
   12b70:	beq	12b90 <mbtowc@plt+0x17cc>
   12b74:	b	12c54 <mbtowc@plt+0x1890>
   12b78:	adds	r5, r7, #0
   12b7c:	movne	r5, #1
   12b80:	clz	r4, r8
   12b84:	lsr	r4, r4, #5
   12b88:	orrs	r1, r4, r5
   12b8c:	beq	12bf0 <mbtowc@plt+0x182c>
   12b90:	mov	r2, #0
   12b94:	mov	r1, #1
   12b98:	mov	r0, r6
   12b9c:	bl	110dc <XAllowEvents@plt>
   12ba0:	add	r3, sp, #28
   12ba4:	mov	r2, #12
   12ba8:	mov	r1, r9
   12bac:	mov	r0, r6
   12bb0:	bl	11388 <XWindowEvent@plt>
   12bb4:	ldr	r3, [sp, #28]
   12bb8:	cmp	r3, #4
   12bbc:	beq	12c34 <mbtowc@plt+0x1870>
   12bc0:	cmp	r3, #5
   12bc4:	bne	12b78 <mbtowc@plt+0x17b4>
   12bc8:	cmp	r5, #0
   12bcc:	moveq	r7, r5
   12bd0:	beq	12b80 <mbtowc@plt+0x17bc>
   12bd4:	subs	r7, r7, #1
   12bd8:	movne	r5, #1
   12bdc:	moveq	r5, #0
   12be0:	clz	r4, r8
   12be4:	lsr	r4, r4, #5
   12be8:	orrs	r1, r4, r5
   12bec:	bne	12b90 <mbtowc@plt+0x17cc>
   12bf0:	mov	r0, r6
   12bf4:	bl	11280 <XUngrabPointer@plt>
   12bf8:	cmp	r9, r8
   12bfc:	cmpne	fp, #0
   12c00:	beq	12c18 <mbtowc@plt+0x1854>
   12c04:	mov	r2, r8
   12c08:	mov	r1, r9
   12c0c:	mov	r0, r6
   12c10:	bl	12e5c <mbtowc@plt+0x1a98>
   12c14:	mov	r8, r0
   12c18:	ldr	r2, [sp, #124]	; 0x7c
   12c1c:	ldr	r3, [sl]
   12c20:	mov	r0, r8
   12c24:	cmp	r2, r3
   12c28:	bne	12c5c <mbtowc@plt+0x1898>
   12c2c:	add	sp, sp, #132	; 0x84
   12c30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c34:	cmp	r4, #0
   12c38:	beq	12c48 <mbtowc@plt+0x1884>
   12c3c:	ldr	r8, [sp, #52]	; 0x34
   12c40:	cmp	r8, #0
   12c44:	moveq	r8, r9
   12c48:	add	r7, r7, #1
   12c4c:	mov	r5, #1
   12c50:	b	12b80 <mbtowc@plt+0x17bc>
   12c54:	ldr	r0, [pc, #12]	; 12c68 <mbtowc@plt+0x18a4>
   12c58:	bl	127d0 <mbtowc@plt+0x140c>
   12c5c:	bl	11148 <__stack_chk_fail@plt>
   12c60:	andeq	r7, r2, ip, asr #11
   12c64:	andeq	r6, r2, r0, lsl #30
   12c68:	andeq	r4, r1, r4, lsr #25
   12c6c:	push	{r4, lr}
   12c70:	sub	sp, sp, #56	; 0x38
   12c74:	add	r3, sp, #56	; 0x38
   12c78:	mov	ip, #0
   12c7c:	str	ip, [r3, #-16]!
   12c80:	ldr	r4, [pc, #120]	; 12d00 <mbtowc@plt+0x193c>
   12c84:	str	r3, [sp, #28]
   12c88:	add	r3, sp, #44	; 0x2c
   12c8c:	str	r3, [sp, #24]
   12c90:	add	r3, sp, #48	; 0x30
   12c94:	str	r3, [sp, #20]
   12c98:	add	r3, sp, #36	; 0x24
   12c9c:	ldr	lr, [r4]
   12ca0:	str	r3, [sp, #16]
   12ca4:	add	r3, sp, #32
   12ca8:	str	r3, [sp, #12]
   12cac:	str	ip, [sp, #8]
   12cb0:	str	ip, [sp, #4]
   12cb4:	str	ip, [sp]
   12cb8:	mov	r3, ip
   12cbc:	str	lr, [sp, #52]	; 0x34
   12cc0:	str	ip, [sp, #32]
   12cc4:	bl	11394 <XGetWindowProperty@plt>
   12cc8:	ldr	r0, [sp, #40]	; 0x28
   12ccc:	cmp	r0, #0
   12cd0:	beq	12cd8 <mbtowc@plt+0x1914>
   12cd4:	bl	11154 <XFree@plt>
   12cd8:	ldr	r0, [sp, #32]
   12cdc:	ldr	r2, [sp, #52]	; 0x34
   12ce0:	ldr	r3, [r4]
   12ce4:	adds	r0, r0, #0
   12ce8:	movne	r0, #1
   12cec:	cmp	r2, r3
   12cf0:	bne	12cfc <mbtowc@plt+0x1938>
   12cf4:	add	sp, sp, #56	; 0x38
   12cf8:	pop	{r4, pc}
   12cfc:	bl	11148 <__stack_chk_fail@plt>
   12d00:	andeq	r6, r2, r0, lsl #30
   12d04:	push	{r4, r5, r6, r7, r8, r9, lr}
   12d08:	sub	sp, sp, #124	; 0x7c
   12d0c:	ldr	r7, [pc, #320]	; 12e54 <mbtowc@plt+0x1a90>
   12d10:	add	r2, sp, #20
   12d14:	add	r3, sp, #16
   12d18:	ldr	ip, [r7]
   12d1c:	str	r2, [sp, #4]
   12d20:	str	r3, [sp]
   12d24:	add	r2, sp, #8
   12d28:	add	r3, sp, #12
   12d2c:	str	ip, [sp, #116]	; 0x74
   12d30:	mov	r6, r0
   12d34:	bl	11130 <XQueryTree@plt>
   12d38:	subs	r4, r0, #0
   12d3c:	beq	12de4 <mbtowc@plt+0x1a20>
   12d40:	ldr	r0, [sp, #16]
   12d44:	cmp	r0, #0
   12d48:	moveq	r4, r0
   12d4c:	beq	12de4 <mbtowc@plt+0x1a20>
   12d50:	ldr	r5, [sp, #20]
   12d54:	subs	r5, r5, #1
   12d58:	bmi	12e00 <mbtowc@plt+0x1a3c>
   12d5c:	ldr	r9, [pc, #244]	; 12e58 <mbtowc@plt+0x1a94>
   12d60:	lsl	r4, r5, #2
   12d64:	mov	r8, #0
   12d68:	b	12d98 <mbtowc@plt+0x19d4>
   12d6c:	ldr	r3, [sp, #92]	; 0x5c
   12d70:	ldr	r2, [sp, #16]
   12d74:	cmp	r3, #2
   12d78:	add	r3, r2, r4
   12d7c:	beq	12dc0 <mbtowc@plt+0x19fc>
   12d80:	str	r8, [r3]
   12d84:	sub	r5, r5, #1
   12d88:	cmn	r5, #1
   12d8c:	sub	r4, r4, #4
   12d90:	ldr	r0, [sp, #16]
   12d94:	beq	12e08 <mbtowc@plt+0x1a44>
   12d98:	ldr	r1, [r0, r4]
   12d9c:	add	r2, sp, #24
   12da0:	mov	r0, r6
   12da4:	bl	11358 <XGetWindowAttributes@plt>
   12da8:	ldr	r3, [sp, #56]	; 0x38
   12dac:	cmp	r3, #1
   12db0:	beq	12d6c <mbtowc@plt+0x19a8>
   12db4:	ldr	r3, [sp, #16]
   12db8:	add	r3, r3, r4
   12dbc:	b	12d80 <mbtowc@plt+0x19bc>
   12dc0:	ldr	r1, [r2, r4]
   12dc4:	mov	r0, r6
   12dc8:	ldr	r2, [r9]
   12dcc:	bl	12c6c <mbtowc@plt+0x18a8>
   12dd0:	cmp	r0, #0
   12dd4:	beq	12d84 <mbtowc@plt+0x19c0>
   12dd8:	ldr	r0, [sp, #16]
   12ddc:	ldr	r4, [r0, r4]
   12de0:	bl	11154 <XFree@plt>
   12de4:	ldr	r2, [sp, #116]	; 0x74
   12de8:	ldr	r3, [r7]
   12dec:	mov	r0, r4
   12df0:	cmp	r2, r3
   12df4:	bne	12e50 <mbtowc@plt+0x1a8c>
   12df8:	add	sp, sp, #124	; 0x7c
   12dfc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e00:	mov	r4, #0
   12e04:	b	12de0 <mbtowc@plt+0x1a1c>
   12e08:	ldr	r5, [sp, #20]
   12e0c:	subs	r5, r5, #1
   12e10:	bmi	12e00 <mbtowc@plt+0x1a3c>
   12e14:	lsl	r8, r5, #2
   12e18:	b	12e2c <mbtowc@plt+0x1a68>
   12e1c:	sub	r5, r5, #1
   12e20:	cmn	r5, #1
   12e24:	sub	r8, r8, #4
   12e28:	beq	12e00 <mbtowc@plt+0x1a3c>
   12e2c:	ldr	r1, [r0, r8]
   12e30:	cmp	r1, #0
   12e34:	beq	12e1c <mbtowc@plt+0x1a58>
   12e38:	mov	r0, r6
   12e3c:	bl	12d04 <mbtowc@plt+0x1940>
   12e40:	subs	r4, r0, #0
   12e44:	ldr	r0, [sp, #16]
   12e48:	beq	12e1c <mbtowc@plt+0x1a58>
   12e4c:	b	12de0 <mbtowc@plt+0x1a1c>
   12e50:	bl	11148 <__stack_chk_fail@plt>
   12e54:	andeq	r6, r2, r0, lsl #30
   12e58:	ldrdeq	r7, [r2], -r4
   12e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e60:	sub	sp, sp, #60	; 0x3c
   12e64:	ldr	r9, [pc, #428]	; 13018 <mbtowc@plt+0x1c54>
   12e68:	mov	r7, r1
   12e6c:	mov	r4, r2
   12e70:	ldr	r3, [r9]
   12e74:	mov	r2, #0
   12e78:	ldr	r1, [pc, #412]	; 1301c <mbtowc@plt+0x1c58>
   12e7c:	str	r3, [sp, #52]	; 0x34
   12e80:	mov	r8, r0
   12e84:	bl	112b0 <XInternAtom@plt>
   12e88:	subs	r2, r0, #0
   12e8c:	beq	12f0c <mbtowc@plt+0x1b48>
   12e90:	add	r6, sp, #56	; 0x38
   12e94:	mov	ip, #0
   12e98:	add	r3, sp, #32
   12e9c:	add	fp, sp, #48	; 0x30
   12ea0:	add	sl, sp, #36	; 0x24
   12ea4:	str	ip, [r6, #-16]!
   12ea8:	mov	r0, #33	; 0x21
   12eac:	str	r3, [sp, #12]
   12eb0:	add	r5, sp, #44	; 0x2c
   12eb4:	mvn	r3, #-2147483648	; 0x80000000
   12eb8:	str	r0, [sp, #8]
   12ebc:	str	r3, [sp]
   12ec0:	mov	r1, r7
   12ec4:	str	ip, [sp, #4]
   12ec8:	str	r6, [sp, #28]
   12ecc:	str	r5, [sp, #24]
   12ed0:	strd	sl, [sp, #16]
   12ed4:	mov	r3, ip
   12ed8:	mov	r0, r8
   12edc:	str	ip, [sp, #32]
   12ee0:	bl	11394 <XGetWindowProperty@plt>
   12ee4:	cmp	r0, #0
   12ee8:	bne	12f0c <mbtowc@plt+0x1b48>
   12eec:	ldr	r7, [sp, #40]	; 0x28
   12ef0:	cmp	r7, #0
   12ef4:	beq	12f0c <mbtowc@plt+0x1b48>
   12ef8:	ldr	r3, [sp, #32]
   12efc:	cmp	r3, #33	; 0x21
   12f00:	beq	12f84 <mbtowc@plt+0x1bc0>
   12f04:	mov	r0, r7
   12f08:	bl	11154 <XFree@plt>
   12f0c:	mov	r5, r4
   12f10:	ldr	r4, [pc, #264]	; 13020 <mbtowc@plt+0x1c5c>
   12f14:	ldr	r2, [r4]
   12f18:	cmp	r2, #0
   12f1c:	beq	12f64 <mbtowc@plt+0x1ba0>
   12f20:	mov	r1, r5
   12f24:	mov	r0, r8
   12f28:	bl	12c6c <mbtowc@plt+0x18a8>
   12f2c:	cmp	r0, #0
   12f30:	bne	12f48 <mbtowc@plt+0x1b84>
   12f34:	mov	r1, r5
   12f38:	mov	r0, r8
   12f3c:	bl	12d04 <mbtowc@plt+0x1940>
   12f40:	cmp	r0, #0
   12f44:	movne	r5, r0
   12f48:	ldr	r2, [sp, #52]	; 0x34
   12f4c:	ldr	r3, [r9]
   12f50:	mov	r0, r5
   12f54:	cmp	r2, r3
   12f58:	bne	13014 <mbtowc@plt+0x1c50>
   12f5c:	add	sp, sp, #60	; 0x3c
   12f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f64:	ldr	r1, [pc, #184]	; 13024 <mbtowc@plt+0x1c60>
   12f68:	mov	r0, r8
   12f6c:	bl	112b0 <XInternAtom@plt>
   12f70:	cmp	r0, #0
   12f74:	mov	r2, r0
   12f78:	str	r0, [r4]
   12f7c:	bne	12f20 <mbtowc@plt+0x1b5c>
   12f80:	b	12f48 <mbtowc@plt+0x1b84>
   12f84:	ldr	r3, [sp, #36]	; 0x24
   12f88:	cmp	r3, #32
   12f8c:	bne	12f04 <mbtowc@plt+0x1b40>
   12f90:	ldr	r1, [sp, #48]	; 0x30
   12f94:	cmp	r1, #0
   12f98:	beq	1300c <mbtowc@plt+0x1c48>
   12f9c:	ldr	r3, [r7]
   12fa0:	cmp	r3, r4
   12fa4:	movne	r3, r7
   12fa8:	beq	12fc4 <mbtowc@plt+0x1c00>
   12fac:	add	r0, r0, #1
   12fb0:	cmp	r0, r1
   12fb4:	beq	1300c <mbtowc@plt+0x1c48>
   12fb8:	ldr	r2, [r3, #4]!
   12fbc:	cmp	r2, r4
   12fc0:	bne	12fac <mbtowc@plt+0x1be8>
   12fc4:	str	r5, [sp, #12]
   12fc8:	str	r5, [sp, #8]
   12fcc:	str	r5, [sp, #4]
   12fd0:	str	r5, [sp]
   12fd4:	str	fp, [sp, #16]
   12fd8:	mov	r3, r6
   12fdc:	mov	r2, sl
   12fe0:	mov	r1, r4
   12fe4:	mov	r0, r8
   12fe8:	bl	1125c <XQueryPointer@plt>
   12fec:	ldr	r5, [sp, #40]	; 0x28
   12ff0:	cmp	r5, #0
   12ff4:	beq	13004 <mbtowc@plt+0x1c40>
   12ff8:	mov	r0, r7
   12ffc:	bl	11154 <XFree@plt>
   13000:	b	12f10 <mbtowc@plt+0x1b4c>
   13004:	mov	r5, r4
   13008:	b	12f48 <mbtowc@plt+0x1b84>
   1300c:	mov	r5, r4
   13010:	b	12ff8 <mbtowc@plt+0x1c34>
   13014:	bl	11148 <__stack_chk_fail@plt>
   13018:	andeq	r6, r2, r0, lsl #30
   1301c:	andeq	r4, r1, ip, asr #25
   13020:	ldrdeq	r7, [r2], -r4
   13024:	andeq	r4, r1, r0, ror #25
   13028:	ldr	r3, [pc, #120]	; 130a8 <mbtowc@plt+0x1ce4>
   1302c:	ldr	ip, [r3]
   13030:	cmp	ip, #0
   13034:	bxeq	lr
   13038:	ldr	r3, [ip]
   1303c:	subs	r3, r3, #1
   13040:	bxmi	lr
   13044:	push	{r4, r5, lr}
   13048:	rsb	r4, r3, r3, lsl #3
   1304c:	lsl	r4, r4, #2
   13050:	add	lr, ip, r4
   13054:	ldr	r5, [lr, #8]
   13058:	cmp	r0, r5
   1305c:	subne	r4, r4, #28
   13060:	addne	ip, ip, r4
   13064:	beq	13084 <mbtowc@plt+0x1cc0>
   13068:	subs	r3, r3, #1
   1306c:	mov	lr, ip
   13070:	popcc	{r4, r5, pc}
   13074:	ldr	r4, [lr, #8]
   13078:	sub	ip, ip, #28
   1307c:	cmp	r4, r0
   13080:	bne	13068 <mbtowc@plt+0x1ca4>
   13084:	ldr	r3, [r1]
   13088:	cmp	r3, #0
   1308c:	ldreq	r3, [lr, #20]
   13090:	streq	r3, [r1]
   13094:	ldr	r3, [r2]
   13098:	cmp	r3, #0
   1309c:	ldreq	r3, [lr, #24]
   130a0:	streq	r3, [r2]
   130a4:	pop	{r4, r5, pc}
   130a8:	ldrdeq	r7, [r2], -r8
   130ac:	mov	r0, #0
   130b0:	bx	lr
   130b4:	push	{r4, lr}
   130b8:	mov	r4, r0
   130bc:	mov	r0, r4
   130c0:	bl	11124 <_IO_getc@plt>
   130c4:	cmp	r0, #32
   130c8:	sub	r2, r0, #9
   130cc:	beq	130bc <mbtowc@plt+0x1cf8>
   130d0:	cmp	r2, #1
   130d4:	bls	130bc <mbtowc@plt+0x1cf8>
   130d8:	mov	r1, r4
   130dc:	pop	{r4, lr}
   130e0:	b	11298 <ungetc@plt>
   130e4:	push	{r4, lr}
   130e8:	mov	r0, #28
   130ec:	bl	11208 <malloc@plt>
   130f0:	subs	r3, r0, #0
   130f4:	beq	13104 <mbtowc@plt+0x1d40>
   130f8:	mov	r2, #0
   130fc:	str	r2, [r3]
   13100:	pop	{r4, pc}
   13104:	ldr	r0, [pc]	; 1310c <mbtowc@plt+0x1d48>
   13108:	bl	127d0 <mbtowc@plt+0x140c>
   1310c:	andeq	r4, r1, r8, asr #26
   13110:	sub	sp, sp, #16
   13114:	push	{r4, r5, r6, r7, r8, lr}
   13118:	add	r5, sp, #28
   1311c:	ldr	r6, [r0]
   13120:	stm	r5, {r1, r2, r3}
   13124:	add	r6, r6, #1
   13128:	rsb	r4, r6, r6, lsl #3
   1312c:	lsl	r4, r4, #2
   13130:	mov	r1, r4
   13134:	bl	11160 <realloc@plt>
   13138:	subs	r7, r0, #0
   1313c:	beq	13170 <mbtowc@plt+0x1dac>
   13140:	mov	lr, r5
   13144:	add	ip, r7, r4
   13148:	ldm	lr!, {r0, r1, r2, r3}
   1314c:	sub	ip, ip, #28
   13150:	stmia	ip!, {r0, r1, r2, r3}
   13154:	ldm	lr, {r0, r1, r2}
   13158:	stm	ip, {r0, r1, r2}
   1315c:	mov	r0, r7
   13160:	str	r6, [r7]
   13164:	pop	{r4, r5, r6, r7, r8, lr}
   13168:	add	sp, sp, #16
   1316c:	bx	lr
   13170:	ldr	r0, [pc]	; 13178 <mbtowc@plt+0x1db4>
   13174:	bl	127d0 <mbtowc@plt+0x140c>
   13178:	andeq	r4, r1, r8, asr #26
   1317c:	push	{r4, r5, r6, lr}
   13180:	sub	sp, sp, #56	; 0x38
   13184:	ldr	r5, [pc, #116]	; 13200 <mbtowc@plt+0x1e3c>
   13188:	mov	r3, #0
   1318c:	add	r4, sp, #28
   13190:	ldr	ip, [r5]
   13194:	mov	r6, r0
   13198:	cmp	ip, r3
   1319c:	str	r3, [r4, #4]
   131a0:	str	r3, [sp, #28]
   131a4:	str	r3, [r4, #12]
   131a8:	str	r3, [r4, #16]
   131ac:	beq	131e0 <mbtowc@plt+0x1e1c>
   131b0:	add	r3, sp, #56	; 0x38
   131b4:	str	r1, [sp, #48]	; 0x30
   131b8:	str	r2, [sp, #52]	; 0x34
   131bc:	ldmdb	r3, {r0, r1, r2, r3}
   131c0:	str	r6, [sp, #36]	; 0x24
   131c4:	stm	sp, {r0, r1, r2, r3}
   131c8:	mov	r0, ip
   131cc:	ldm	r4, {r1, r2, r3}
   131d0:	bl	13110 <mbtowc@plt+0x1d4c>
   131d4:	str	r0, [r5]
   131d8:	add	sp, sp, #56	; 0x38
   131dc:	pop	{r4, r5, r6, pc}
   131e0:	str	r2, [sp, #20]
   131e4:	str	r1, [sp, #16]
   131e8:	bl	130e4 <mbtowc@plt+0x1d20>
   131ec:	ldr	r2, [sp, #20]
   131f0:	ldr	r1, [sp, #16]
   131f4:	mov	ip, r0
   131f8:	str	r0, [r5]
   131fc:	b	131b0 <mbtowc@plt+0x1dec>
   13200:	ldrdeq	r7, [r2], -r8
   13204:	ldr	r3, [pc, #416]	; 133ac <mbtowc@plt+0x1fe8>
   13208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1320c:	sub	sp, sp, #1104	; 0x450
   13210:	sub	sp, sp, #12
   13214:	ldr	r3, [r3]
   13218:	mov	r5, r0
   1321c:	str	r3, [sp, #1108]	; 0x454
   13220:	ldr	r8, [pc, #392]	; 133b0 <mbtowc@plt+0x1fec>
   13224:	ldr	r9, [pc, #392]	; 133b4 <mbtowc@plt+0x1ff0>
   13228:	ldr	sl, [pc, #392]	; 133b8 <mbtowc@plt+0x1ff4>
   1322c:	b	1323c <mbtowc@plt+0x1e78>
   13230:	mov	r1, r7
   13234:	mov	r0, r6
   13238:	bl	1317c <mbtowc@plt+0x1db8>
   1323c:	add	r3, sp, #8
   13240:	add	r2, sp, #108	; 0x6c
   13244:	mov	r1, r8
   13248:	mov	r0, r5
   1324c:	bl	110c4 <__isoc99_fscanf@plt>
   13250:	cmn	r0, #1
   13254:	beq	13370 <mbtowc@plt+0x1fac>
   13258:	cmp	r0, #2
   1325c:	bne	13398 <mbtowc@plt+0x1fd4>
   13260:	mov	r2, #0
   13264:	add	r1, sp, #108	; 0x6c
   13268:	ldr	r0, [r9]
   1326c:	bl	112b0 <XInternAtom@plt>
   13270:	mov	r6, r0
   13274:	add	r0, sp, #8
   13278:	bl	1113c <strdup@plt>
   1327c:	subs	r7, r0, #0
   13280:	beq	1332c <mbtowc@plt+0x1f68>
   13284:	mov	r0, r5
   13288:	bl	130b4 <mbtowc@plt+0x1cf0>
   1328c:	mov	r0, r5
   13290:	bl	11124 <_IO_getc@plt>
   13294:	mov	r1, r5
   13298:	mov	r4, r0
   1329c:	bl	11298 <ungetc@plt>
   132a0:	cmp	r4, #39	; 0x27
   132a4:	movne	r2, sl
   132a8:	bne	13230 <mbtowc@plt+0x1e6c>
   132ac:	mov	r0, r5
   132b0:	bl	130b4 <mbtowc@plt+0x1cf0>
   132b4:	mov	r0, r5
   132b8:	bl	11124 <_IO_getc@plt>
   132bc:	cmn	r0, #1
   132c0:	beq	13390 <mbtowc@plt+0x1fcc>
   132c4:	cmp	r0, #39	; 0x27
   132c8:	bne	133a0 <mbtowc@plt+0x1fdc>
   132cc:	ldr	fp, [pc, #232]	; 133bc <mbtowc@plt+0x1ff8>
   132d0:	ldr	r4, [pc, #232]	; 133c0 <mbtowc@plt+0x1ffc>
   132d4:	b	132fc <mbtowc@plt+0x1f38>
   132d8:	cmp	r0, #92	; 0x5c
   132dc:	strb	r0, [fp]
   132e0:	add	r2, fp, #1
   132e4:	sub	r3, r4, #1
   132e8:	beq	13334 <mbtowc@plt+0x1f70>
   132ec:	cmn	r3, #1
   132f0:	beq	13368 <mbtowc@plt+0x1fa4>
   132f4:	mov	fp, r2
   132f8:	mov	r4, r3
   132fc:	mov	r0, r5
   13300:	bl	11124 <_IO_getc@plt>
   13304:	cmn	r0, #1
   13308:	beq	13390 <mbtowc@plt+0x1fcc>
   1330c:	cmp	r0, #39	; 0x27
   13310:	bne	132d8 <mbtowc@plt+0x1f14>
   13314:	mov	r3, #0
   13318:	strb	r3, [fp]
   1331c:	ldr	r0, [pc, #152]	; 133bc <mbtowc@plt+0x1ff8>
   13320:	bl	1113c <strdup@plt>
   13324:	subs	r2, r0, #0
   13328:	bne	13230 <mbtowc@plt+0x1e6c>
   1332c:	ldr	r0, [pc, #144]	; 133c4 <mbtowc@plt+0x2000>
   13330:	bl	127d0 <mbtowc@plt+0x140c>
   13334:	mov	r0, r5
   13338:	str	r3, [sp, #4]
   1333c:	bl	11124 <_IO_getc@plt>
   13340:	cmn	r0, #1
   13344:	beq	13390 <mbtowc@plt+0x1fcc>
   13348:	cmp	r0, #10
   1334c:	ldr	r3, [sp, #4]
   13350:	subne	r3, r4, #2
   13354:	strbne	r0, [fp, #1]
   13358:	addne	r2, fp, #2
   1335c:	moveq	r2, fp
   13360:	cmp	r3, #0
   13364:	bge	132f4 <mbtowc@plt+0x1f30>
   13368:	ldr	r0, [pc, #88]	; 133c8 <mbtowc@plt+0x2004>
   1336c:	bl	127d0 <mbtowc@plt+0x140c>
   13370:	ldr	r3, [pc, #52]	; 133ac <mbtowc@plt+0x1fe8>
   13374:	ldr	r2, [sp, #1108]	; 0x454
   13378:	ldr	r3, [r3]
   1337c:	cmp	r2, r3
   13380:	bne	133a8 <mbtowc@plt+0x1fe4>
   13384:	add	sp, sp, #1104	; 0x450
   13388:	add	sp, sp, #12
   1338c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13390:	ldr	r0, [pc, #52]	; 133cc <mbtowc@plt+0x2008>
   13394:	bl	127d0 <mbtowc@plt+0x140c>
   13398:	ldr	r0, [pc, #48]	; 133d0 <mbtowc@plt+0x200c>
   1339c:	bl	127d0 <mbtowc@plt+0x140c>
   133a0:	ldr	r0, [pc, #44]	; 133d4 <mbtowc@plt+0x2010>
   133a4:	bl	127d0 <mbtowc@plt+0x140c>
   133a8:	bl	11148 <__stack_chk_fail@plt>
   133ac:	andeq	r6, r2, r0, lsl #30
   133b0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   133b4:	andeq	r7, r2, ip, asr #11
   133b8:	andeq	r4, r1, r8, asr sp
   133bc:	andeq	r1, sl, r0, lsr fp
   133c0:	andeq	sl, r7, r0, lsr #2
   133c4:	andeq	r4, r1, r8, asr #26
   133c8:	andeq	r4, r1, r8, asr #27
   133cc:	andeq	r4, r1, r8, ror sp
   133d0:	andeq	r4, r1, r0, ror #26
   133d4:	muleq	r1, ip, sp
   133d8:	push	{r4, lr}
   133dc:	mov	r4, r0
   133e0:	bl	11244 <__ctype_b_loc@plt>
   133e4:	mov	r2, r4
   133e8:	ldr	r1, [r0]
   133ec:	mov	r0, r2
   133f0:	add	r2, r2, #1
   133f4:	ldrb	r3, [r0]
   133f8:	lsl	r3, r3, #1
   133fc:	ldrh	r3, [r1, r3]
   13400:	tst	r3, #2048	; 0x800
   13404:	bne	133ec <mbtowc@plt+0x2028>
   13408:	pop	{r4, pc}
   1340c:	push	{r4, r5, r6, lr}
   13410:	mov	r4, r0
   13414:	mov	r5, r1
   13418:	bl	11244 <__ctype_b_loc@plt>
   1341c:	ldrb	r3, [r4]
   13420:	lsl	r3, r3, #1
   13424:	ldr	r2, [r0]
   13428:	ldrh	r3, [r2, r3]
   1342c:	tst	r3, #2048	; 0x800
   13430:	beq	13454 <mbtowc@plt+0x2090>
   13434:	mov	r0, r4
   13438:	mov	r2, #10
   1343c:	mov	r1, #0
   13440:	bl	110b8 <strtol@plt>
   13444:	str	r0, [r5]
   13448:	mov	r0, r4
   1344c:	pop	{r4, r5, r6, lr}
   13450:	b	133d8 <mbtowc@plt+0x2014>
   13454:	mov	r1, r4
   13458:	ldr	r0, [pc]	; 13460 <mbtowc@plt+0x209c>
   1345c:	bl	127d0 <mbtowc@plt+0x140c>
   13460:	andeq	r4, r1, r4, lsl #28
   13464:	push	{r4, r5, lr}
   13468:	sub	sp, sp, #12
   1346c:	ldr	r4, [pc, #92]	; 134d0 <mbtowc@plt+0x210c>
   13470:	mov	r1, sp
   13474:	mov	r5, r0
   13478:	ldr	r3, [r4]
   1347c:	str	r3, [sp, #4]
   13480:	bl	1340c <mbtowc@plt+0x2048>
   13484:	ldr	r0, [sp]
   13488:	sub	r3, r0, #16
   1348c:	bics	r3, r3, #16
   13490:	moveq	r3, #0
   13494:	movne	r3, #1
   13498:	bics	r2, r0, #8
   1349c:	moveq	r3, #0
   134a0:	cmp	r3, #0
   134a4:	bne	134c4 <mbtowc@plt+0x2100>
   134a8:	ldr	r2, [sp, #4]
   134ac:	ldr	r3, [r4]
   134b0:	cmp	r2, r3
   134b4:	bne	134c0 <mbtowc@plt+0x20fc>
   134b8:	add	sp, sp, #12
   134bc:	pop	{r4, r5, pc}
   134c0:	bl	11148 <__stack_chk_fail@plt>
   134c4:	mov	r1, r5
   134c8:	ldr	r0, [pc, #4]	; 134d4 <mbtowc@plt+0x2110>
   134cc:	bl	127d0 <mbtowc@plt+0x140c>
   134d0:	andeq	r6, r2, r0, lsl #30
   134d4:	andeq	r4, r1, r4, lsl lr
   134d8:	push	{r4, r5, r6, lr}
   134dc:	sub	sp, sp, #8
   134e0:	ldr	r6, [pc, #88]	; 13540 <mbtowc@plt+0x217c>
   134e4:	mov	r4, r1
   134e8:	mov	r1, sp
   134ec:	ldr	r3, [r6]
   134f0:	str	r3, [sp, #4]
   134f4:	bl	1340c <mbtowc@plt+0x2048>
   134f8:	ldrb	r3, [r0]
   134fc:	mov	r5, r0
   13500:	cmp	r3, #0
   13504:	beq	13530 <mbtowc@plt+0x216c>
   13508:	bl	11274 <strlen@plt>
   1350c:	ldr	r2, [sp, #4]
   13510:	ldr	r3, [r6]
   13514:	cmp	r0, r4
   13518:	suble	r4, r0, #1
   1351c:	cmp	r2, r3
   13520:	ldrb	r0, [r5, r4]
   13524:	bne	1353c <mbtowc@plt+0x2178>
   13528:	add	sp, sp, #8
   1352c:	pop	{r4, r5, r6, pc}
   13530:	mov	r1, r0
   13534:	ldr	r0, [pc, #8]	; 13544 <mbtowc@plt+0x2180>
   13538:	bl	127d0 <mbtowc@plt+0x140c>
   1353c:	bl	11148 <__stack_chk_fail@plt>
   13540:	andeq	r6, r2, r0, lsl #30
   13544:	andeq	r4, r1, r4, lsl lr
   13548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1354c:	mov	r9, r0
   13550:	ldr	r6, [pc, #440]	; 13710 <mbtowc@plt+0x234c>
   13554:	ldrb	r0, [r0]
   13558:	sub	sp, sp, #8
   1355c:	ldr	ip, [r6]
   13560:	cmp	r0, #40	; 0x28
   13564:	str	ip, [sp, #4]
   13568:	beq	136ac <mbtowc@plt+0x22e8>
   1356c:	cmp	r0, #33	; 0x21
   13570:	mov	r7, r3
   13574:	beq	1368c <mbtowc@plt+0x22c8>
   13578:	mov	r3, #0
   1357c:	str	r3, [r7]
   13580:	mov	r8, r1
   13584:	mov	r5, r2
   13588:	bl	11244 <__ctype_b_loc@plt>
   1358c:	ldrb	r3, [r9]
   13590:	lsl	r2, r3, #1
   13594:	ldr	r1, [r0]
   13598:	ldrh	r4, [r1, r2]
   1359c:	ands	r4, r4, #2048	; 0x800
   135a0:	bne	13624 <mbtowc@plt+0x2260>
   135a4:	cmp	r3, #36	; 0x24
   135a8:	beq	13658 <mbtowc@plt+0x2294>
   135ac:	cmp	r3, #109	; 0x6d
   135b0:	bne	13704 <mbtowc@plt+0x2340>
   135b4:	add	r0, r9, #1
   135b8:	mov	r1, sp
   135bc:	bl	1340c <mbtowc@plt+0x2048>
   135c0:	ldr	sl, [sp]
   135c4:	mov	r9, r0
   135c8:	b	135e4 <mbtowc@plt+0x2220>
   135cc:	mov	r1, r4
   135d0:	mov	r0, r5
   135d4:	bl	134d8 <mbtowc@plt+0x2114>
   135d8:	cmp	r0, #109	; 0x6d
   135dc:	beq	13638 <mbtowc@plt+0x2274>
   135e0:	add	r4, r4, #1
   135e4:	mov	r0, r5
   135e8:	bl	11274 <strlen@plt>
   135ec:	cmp	r4, r0
   135f0:	blt	135cc <mbtowc@plt+0x2208>
   135f4:	mov	r3, #0
   135f8:	str	r3, [r7]
   135fc:	ldrb	r3, [r9]
   13600:	cmp	r3, #61	; 0x3d
   13604:	beq	136cc <mbtowc@plt+0x2308>
   13608:	ldr	r2, [sp, #4]
   1360c:	ldr	r3, [r6]
   13610:	mov	r0, r9
   13614:	cmp	r2, r3
   13618:	bne	13700 <mbtowc@plt+0x233c>
   1361c:	add	sp, sp, #8
   13620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13624:	mov	r0, r9
   13628:	mov	r1, r7
   1362c:	bl	1340c <mbtowc@plt+0x2048>
   13630:	mov	r9, r0
   13634:	b	135fc <mbtowc@plt+0x2238>
   13638:	rsb	r4, r4, r4, lsl #3
   1363c:	mov	r2, #1
   13640:	add	r4, r8, r4, lsl #2
   13644:	ldr	r3, [r4, #8]
   13648:	ands	r3, r3, r2, lsl sl
   1364c:	movne	r3, r2
   13650:	moveq	r3, #0
   13654:	b	135f8 <mbtowc@plt+0x2234>
   13658:	add	r0, r9, #1
   1365c:	mov	r1, sp
   13660:	bl	1340c <mbtowc@plt+0x2048>
   13664:	ldr	r3, [r8]
   13668:	ldr	r2, [sp]
   1366c:	cmp	r3, r2
   13670:	movge	r3, r2
   13674:	rsb	r3, r3, r3, lsl #3
   13678:	add	r3, r8, r3, lsl #2
   1367c:	ldr	r3, [r3, #8]
   13680:	str	r3, [r7]
   13684:	mov	r9, r0
   13688:	b	135fc <mbtowc@plt+0x2238>
   1368c:	add	r0, r9, #1
   13690:	bl	13548 <mbtowc@plt+0x2184>
   13694:	ldr	r3, [r7]
   13698:	clz	r3, r3
   1369c:	lsr	r3, r3, #5
   136a0:	str	r3, [r7]
   136a4:	mov	r9, r0
   136a8:	b	13608 <mbtowc@plt+0x2244>
   136ac:	add	r0, r9, #1
   136b0:	bl	13548 <mbtowc@plt+0x2184>
   136b4:	ldrb	r3, [r0]
   136b8:	cmp	r3, #41	; 0x29
   136bc:	addeq	r9, r0, #1
   136c0:	beq	13608 <mbtowc@plt+0x2244>
   136c4:	ldr	r0, [pc, #72]	; 13714 <mbtowc@plt+0x2350>
   136c8:	bl	127d0 <mbtowc@plt+0x140c>
   136cc:	mov	r2, r5
   136d0:	add	r0, r9, #1
   136d4:	mov	r3, sp
   136d8:	mov	r1, r8
   136dc:	bl	13548 <mbtowc@plt+0x2184>
   136e0:	ldr	r3, [r7]
   136e4:	ldr	r2, [sp]
   136e8:	sub	r3, r3, r2
   136ec:	clz	r3, r3
   136f0:	lsr	r3, r3, #5
   136f4:	str	r3, [r7]
   136f8:	mov	r9, r0
   136fc:	b	13608 <mbtowc@plt+0x2244>
   13700:	bl	11148 <__stack_chk_fail@plt>
   13704:	mov	r1, r9
   13708:	ldr	r0, [pc, #8]	; 13718 <mbtowc@plt+0x2354>
   1370c:	bl	127d0 <mbtowc@plt+0x140c>
   13710:	andeq	r6, r2, r0, lsl #30
   13714:	andeq	r4, r1, r4, lsr #28
   13718:	andeq	r4, r1, r0, lsr lr
   1371c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13720:	mov	r4, r0
   13724:	sub	sp, sp, #8
   13728:	add	r0, r1, #1
   1372c:	mov	r5, r1
   13730:	mov	r9, r2
   13734:	bl	11208 <malloc@plt>
   13738:	subs	r7, r0, #0
   1373c:	beq	13950 <mbtowc@plt+0x258c>
   13740:	mov	r1, r4
   13744:	mov	r2, r5
   13748:	bl	1110c <memcpy@plt>
   1374c:	ldr	r4, [pc, #516]	; 13958 <mbtowc@plt+0x2594>
   13750:	ldr	r2, [pc, #516]	; 1395c <mbtowc@plt+0x2598>
   13754:	mov	r6, #0
   13758:	ldr	sl, [pc, #512]	; 13960 <mbtowc@plt+0x259c>
   1375c:	ldr	r1, [pc, #512]	; 13964 <mbtowc@plt+0x25a0>
   13760:	strb	r6, [r7, r5]
   13764:	mov	r8, #92	; 0x5c
   13768:	mov	r5, r7
   1376c:	mov	r3, #34	; 0x22
   13770:	str	r1, [r4, #8]
   13774:	str	r2, [r4, #4]
   13778:	strb	r3, [r2, #-1]
   1377c:	ldrb	r3, [r5], #1
   13780:	cmp	r3, #0
   13784:	beq	137e8 <mbtowc@plt+0x2424>
   13788:	cmp	r3, #10
   1378c:	ldr	r1, [r4, #8]
   13790:	beq	13878 <mbtowc@plt+0x24b4>
   13794:	bhi	13810 <mbtowc@plt+0x244c>
   13798:	cmp	r3, #9
   1379c:	bne	138a4 <mbtowc@plt+0x24e0>
   137a0:	cmp	r1, #0
   137a4:	ble	13868 <mbtowc@plt+0x24a4>
   137a8:	sub	r3, r1, #1
   137ac:	add	r0, r2, #1
   137b0:	cmp	r3, #0
   137b4:	stmib	r4, {r0, r3}
   137b8:	strb	r8, [r2]
   137bc:	subne	r1, r1, #2
   137c0:	movne	r0, #116	; 0x74
   137c4:	beq	1386c <mbtowc@plt+0x24a8>
   137c8:	add	r3, r2, #2
   137cc:	strb	r0, [r2, #1]
   137d0:	str	r3, [r4, #4]
   137d4:	mov	r2, r3
   137d8:	ldrb	r3, [r5], #1
   137dc:	str	r1, [r4, #8]
   137e0:	cmp	r3, #0
   137e4:	bne	13788 <mbtowc@plt+0x23c4>
   137e8:	mov	r1, r2
   137ec:	mov	ip, #34	; 0x22
   137f0:	strb	ip, [r1], #2
   137f4:	mov	r0, r7
   137f8:	strb	r3, [r2, #1]
   137fc:	str	r1, [r4, #4]
   13800:	bl	11100 <free@plt>
   13804:	ldr	r0, [pc, #348]	; 13968 <mbtowc@plt+0x25a4>
   13808:	add	sp, sp, #8
   1380c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13810:	cmp	r3, #34	; 0x22
   13814:	beq	13820 <mbtowc@plt+0x245c>
   13818:	cmp	r3, #92	; 0x5c
   1381c:	bne	138a4 <mbtowc@plt+0x24e0>
   13820:	cmp	r1, #0
   13824:	strble	r6, [r2]
   13828:	ble	13870 <mbtowc@plt+0x24ac>
   1382c:	sub	r0, r1, #1
   13830:	add	ip, r2, #1
   13834:	cmp	r0, #0
   13838:	strb	r8, [r2]
   1383c:	str	r0, [r4, #8]
   13840:	str	ip, [r4, #4]
   13844:	moveq	r2, ip
   13848:	beq	13870 <mbtowc@plt+0x24ac>
   1384c:	add	r0, r2, #2
   13850:	sub	r1, r1, #2
   13854:	strb	r3, [r2, #1]
   13858:	str	r1, [r4, #8]
   1385c:	str	r0, [r4, #4]
   13860:	mov	r2, r0
   13864:	b	1377c <mbtowc@plt+0x23b8>
   13868:	strb	r6, [r2]
   1386c:	ldr	r2, [r4, #4]
   13870:	strb	r6, [r2]
   13874:	b	1377c <mbtowc@plt+0x23b8>
   13878:	cmp	r1, #0
   1387c:	ble	13868 <mbtowc@plt+0x24a4>
   13880:	sub	r3, r1, #1
   13884:	add	r0, r2, #1
   13888:	cmp	r3, #0
   1388c:	stmib	r4, {r0, r3}
   13890:	strb	r8, [r2]
   13894:	subne	r1, r1, #2
   13898:	movne	r0, #110	; 0x6e
   1389c:	bne	137c8 <mbtowc@plt+0x2404>
   138a0:	b	1386c <mbtowc@plt+0x24a8>
   138a4:	sub	r0, r3, #32
   138a8:	cmp	r0, #94	; 0x5e
   138ac:	bls	138e8 <mbtowc@plt+0x2524>
   138b0:	cmp	r9, #0
   138b4:	lsrne	r0, r3, #7
   138b8:	moveq	r0, #0
   138bc:	cmp	r0, #0
   138c0:	beq	13908 <mbtowc@plt+0x2544>
   138c4:	cmp	r1, #0
   138c8:	ble	13870 <mbtowc@plt+0x24ac>
   138cc:	add	r0, r2, #1
   138d0:	sub	r1, r1, #1
   138d4:	strb	r3, [r2]
   138d8:	str	r1, [r4, #8]
   138dc:	str	r0, [r4, #4]
   138e0:	mov	r2, r0
   138e4:	b	1377c <mbtowc@plt+0x23b8>
   138e8:	cmp	r1, #0
   138ec:	ble	13870 <mbtowc@plt+0x24ac>
   138f0:	add	r0, r2, #1
   138f4:	sub	r1, r1, #1
   138f8:	strb	r3, [r2]
   138fc:	mov	r2, r0
   13900:	strd	r0, [r4, #4]
   13904:	b	1377c <mbtowc@plt+0x23b8>
   13908:	cmp	r1, #0
   1390c:	addgt	r0, r2, #1
   13910:	subgt	r1, r1, #1
   13914:	strble	r0, [r2]
   13918:	strbgt	r8, [r2]
   1391c:	strgt	r1, [r4, #8]
   13920:	strgt	r0, [r4, #4]
   13924:	movle	r0, r2
   13928:	str	r3, [sp, #4]
   1392c:	mov	r2, #1
   13930:	mvn	r3, #0
   13934:	str	sl, [sp]
   13938:	bl	113b8 <__snprintf_chk@plt>
   1393c:	ldrd	r2, [r4, #4]
   13940:	add	r2, r2, #3
   13944:	sub	r3, r3, #3
   13948:	strd	r2, [r4, #4]
   1394c:	b	1377c <mbtowc@plt+0x23b8>
   13950:	ldr	r0, [pc, #20]	; 1396c <mbtowc@plt+0x25a8>
   13954:	bl	127d0 <mbtowc@plt+0x140c>
   13958:	ldrdeq	r7, [r2], -r8
   1395c:	andeq	r7, r2, sp, lsr #19
   13960:	andeq	r4, r1, r0, asr #28
   13964:	andeq	sl, r7, pc, lsl r1
   13968:	andeq	r7, r2, ip, lsr #19
   1396c:	andeq	r4, r1, r8, asr #26
   13970:	push	{r4, lr}
   13974:	mov	r0, #14
   13978:	bl	11364 <nl_langinfo@plt>
   1397c:	subs	r3, r0, #0
   13980:	beq	13998 <mbtowc@plt+0x25d4>
   13984:	ldr	r1, [pc, #20]	; 139a0 <mbtowc@plt+0x25dc>
   13988:	bl	110ac <strcmp@plt>
   1398c:	clz	r0, r0
   13990:	lsr	r0, r0, #5
   13994:	pop	{r4, pc}
   13998:	mov	r0, r3
   1399c:	pop	{r4, pc}
   139a0:	andeq	r4, r1, r8, asr #28
   139a4:	ldrb	r3, [r1, #16]
   139a8:	cmp	r3, #8
   139ac:	cmpne	r3, #3
   139b0:	beq	139c8 <mbtowc@plt+0x2604>
   139b4:	ldr	r3, [pc, #40]	; 139e4 <mbtowc@plt+0x2620>
   139b8:	ldr	r3, [r3, #12]
   139bc:	cmp	r3, #0
   139c0:	beq	139dc <mbtowc@plt+0x2618>
   139c4:	bx	r3
   139c8:	push	{r4, lr}
   139cc:	ldr	r0, [pc, #20]	; 139e8 <mbtowc@plt+0x2624>
   139d0:	bl	111fc <puts@plt>
   139d4:	mov	r0, #0
   139d8:	bl	11250 <exit@plt>
   139dc:	mov	r0, r3
   139e0:	bx	lr
   139e4:	ldrdeq	r7, [r2], -r8
   139e8:	andeq	r5, r1, ip, lsl r1
   139ec:	subs	r2, r0, #45	; 0x2d
   139f0:	movne	r2, #1
   139f4:	cmp	r0, #0
   139f8:	movne	r3, r2
   139fc:	moveq	r3, #0
   13a00:	cmp	r3, #0
   13a04:	beq	13a38 <mbtowc@plt+0x2674>
   13a08:	push	{r4, lr}
   13a0c:	mov	r4, r0
   13a10:	bl	11244 <__ctype_b_loc@plt>
   13a14:	lsl	r3, r4, #1
   13a18:	ldr	r2, [r0]
   13a1c:	ldrh	r3, [r2, r3]
   13a20:	lsr	r3, r3, #10
   13a24:	eor	r3, r3, #1
   13a28:	cmp	r4, #95	; 0x5f
   13a2c:	moveq	r0, #0
   13a30:	andne	r0, r3, #1
   13a34:	pop	{r4, pc}
   13a38:	mov	r0, r3
   13a3c:	bx	lr
   13a40:	ldr	r2, [pc, #260]	; 13b4c <mbtowc@plt+0x2788>
   13a44:	push	{r4, r5, r6, lr}
   13a48:	mov	r4, r0
   13a4c:	ldr	r3, [pc, #252]	; 13b50 <mbtowc@plt+0x278c>
   13a50:	ldr	r0, [r2, #16]
   13a54:	add	r2, r3, #432	; 0x1b0
   13a58:	cmp	r0, #0
   13a5c:	movne	r3, r2
   13a60:	movne	ip, #45	; 0x2d
   13a64:	ldr	r2, [r3, #4]
   13a68:	moveq	ip, #26
   13a6c:	cmp	r4, r2
   13a70:	addne	ip, ip, #1
   13a74:	sub	sp, sp, #8
   13a78:	addne	ip, r3, ip, lsl #4
   13a7c:	bne	13a90 <mbtowc@plt+0x26cc>
   13a80:	b	13b14 <mbtowc@plt+0x2750>
   13a84:	ldr	r2, [r3, #4]
   13a88:	cmp	r4, r2
   13a8c:	beq	13b14 <mbtowc@plt+0x2750>
   13a90:	add	r3, r3, #16
   13a94:	cmp	r3, ip
   13a98:	bne	13a84 <mbtowc@plt+0x26c0>
   13a9c:	ldr	r0, [pc, #176]	; 13b54 <mbtowc@plt+0x2790>
   13aa0:	bl	1128c <XSetErrorHandler@plt>
   13aa4:	ldr	r3, [pc, #172]	; 13b58 <mbtowc@plt+0x2794>
   13aa8:	mov	r1, r4
   13aac:	mov	r5, r0
   13ab0:	ldr	r0, [r3]
   13ab4:	bl	11304 <XGetAtomName@plt>
   13ab8:	mov	r6, r0
   13abc:	mov	r0, r5
   13ac0:	bl	1128c <XSetErrorHandler@plt>
   13ac4:	cmp	r6, #0
   13ac8:	beq	13b28 <mbtowc@plt+0x2764>
   13acc:	mov	r0, r6
   13ad0:	bl	11274 <strlen@plt>
   13ad4:	ldr	r5, [pc, #128]	; 13b5c <mbtowc@plt+0x2798>
   13ad8:	ldr	r4, [pc, #128]	; 13b60 <mbtowc@plt+0x279c>
   13adc:	mov	r1, r6
   13ae0:	ldr	r3, [pc, #124]	; 13b64 <mbtowc@plt+0x27a0>
   13ae4:	cmp	r0, r5
   13ae8:	movcc	r5, r0
   13aec:	mov	r2, r5
   13af0:	mov	r0, r4
   13af4:	bl	111a8 <__memcpy_chk@plt>
   13af8:	mov	r3, #0
   13afc:	mov	r0, r6
   13b00:	strb	r3, [r4, r5]
   13b04:	bl	11154 <XFree@plt>
   13b08:	mov	r0, r4
   13b0c:	add	sp, sp, #8
   13b10:	pop	{r4, r5, r6, pc}
   13b14:	ldr	r0, [r3]
   13b18:	cmp	r0, #0
   13b1c:	beq	13a9c <mbtowc@plt+0x26d8>
   13b20:	add	sp, sp, #8
   13b24:	pop	{r4, r5, r6, pc}
   13b28:	ldr	r2, [pc, #56]	; 13b68 <mbtowc@plt+0x27a4>
   13b2c:	ldr	r3, [pc, #48]	; 13b64 <mbtowc@plt+0x27a0>
   13b30:	ldr	r0, [pc, #40]	; 13b60 <mbtowc@plt+0x279c>
   13b34:	stm	sp, {r2, r4}
   13b38:	mov	r1, r3
   13b3c:	mov	r2, #1
   13b40:	bl	113b8 <__snprintf_chk@plt>
   13b44:	ldr	r0, [pc, #20]	; 13b60 <mbtowc@plt+0x279c>
   13b48:	b	13b20 <mbtowc@plt+0x275c>
   13b4c:	ldrdeq	r7, [r2], -r8
   13b50:	andeq	r7, r2, r8, lsr #2
   13b54:	andeq	r3, r1, ip, lsr #1
   13b58:	andeq	r7, r2, ip, asr #11
   13b5c:	andeq	sl, r7, r0, lsr #2
   13b60:	andeq	r7, r2, ip, lsr #19
   13b64:	andeq	sl, r7, r4, lsl #3
   13b68:	andeq	r4, r1, r0, asr lr
   13b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b70:	vpush	{d8-d12}
   13b74:	ldr	r3, [pc, #1988]	; 14340 <mbtowc@plt+0x2f7c>
   13b78:	rsb	r4, r2, r2, lsl #3
   13b7c:	mov	ip, r1
   13b80:	ldr	r3, [r3]
   13b84:	sub	sp, sp, #76	; 0x4c
   13b88:	add	r4, r0, r4, lsl #2
   13b8c:	mov	r1, r2
   13b90:	mov	r0, ip
   13b94:	str	r3, [sp, #68]	; 0x44
   13b98:	bl	134d8 <mbtowc@plt+0x2114>
   13b9c:	ldr	r2, [r4, #16]
   13ba0:	ldr	r6, [r4, #8]
   13ba4:	mov	r5, r2
   13ba8:	sub	r3, r0, #97	; 0x61
   13bac:	cmp	r3, #23
   13bb0:	ldrls	pc, [pc, r3, lsl #2]
   13bb4:	b	1430c <mbtowc@plt+0x2f48>
   13bb8:	andeq	r3, r1, r8, ror #28
   13bbc:	andeq	r3, r1, r4, ror lr
   13bc0:	andeq	r3, r1, r8, lsl #29
   13bc4:	andeq	r4, r1, ip, lsl #6
   13bc8:	andeq	r4, r1, ip, lsl #6
   13bcc:	andeq	r4, r1, ip, lsl #6
   13bd0:	andeq	r4, r1, ip, lsl #6
   13bd4:	andeq	r4, r1, ip, lsl #6
   13bd8:	muleq	r1, r0, lr
   13bdc:	andeq	r4, r1, ip, lsl #6
   13be0:	andeq	r4, r1, ip, lsl #6
   13be4:	andeq	r4, r1, ip, lsl #6
   13be8:	muleq	r1, r8, lr
   13bec:	andeq	r4, r1, ip, lsl #6
   13bf0:	andeq	r3, r1, r0, lsr pc
   13bf4:	andeq	r4, r1, ip, lsl #6
   13bf8:	andeq	r4, r1, ip, lsl #6
   13bfc:	andeq	r4, r1, ip, lsl #6
   13c00:	andeq	r3, r1, r8, lsl ip
   13c04:	andeq	r3, r1, r8, asr #24
   13c08:			; <UNDEFINED> instruction: 0x00013db0
   13c0c:	andeq	r4, r1, ip, lsl #6
   13c10:	andeq	r4, r1, ip, lsl #6
   13c14:	andeq	r3, r1, r4, asr #28
   13c18:	mov	r1, r6
   13c1c:	mov	r0, r5
   13c20:	mov	r2, #0
   13c24:	bl	1371c <mbtowc@plt+0x2358>
   13c28:	ldr	r3, [pc, #1808]	; 14340 <mbtowc@plt+0x2f7c>
   13c2c:	ldr	r2, [sp, #68]	; 0x44
   13c30:	ldr	r3, [r3]
   13c34:	cmp	r2, r3
   13c38:	bne	14308 <mbtowc@plt+0x2f44>
   13c3c:	add	sp, sp, #76	; 0x4c
   13c40:	vpop	{d8-d12}
   13c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c48:	ldr	r3, [pc, #1780]	; 14344 <mbtowc@plt+0x2f80>
   13c4c:	ldr	r1, [r4, #12]
   13c50:	mov	ip, #8
   13c54:	ldr	r0, [r3]
   13c58:	str	r1, [sp, #56]	; 0x38
   13c5c:	add	r3, sp, #44	; 0x2c
   13c60:	add	r2, sp, #40	; 0x28
   13c64:	add	r1, sp, #52	; 0x34
   13c68:	str	r5, [sp, #52]	; 0x34
   13c6c:	str	r6, [sp, #64]	; 0x40
   13c70:	str	ip, [sp, #60]	; 0x3c
   13c74:	bl	111d8 <XmbTextPropertyToTextList@plt>
   13c78:	cmp	r0, #0
   13c7c:	bne	13c18 <mbtowc@plt+0x2854>
   13c80:	ldr	r9, [pc, #1728]	; 14348 <mbtowc@plt+0x2f84>
   13c84:	ldr	r4, [pc, #1728]	; 1434c <mbtowc@plt+0x2f88>
   13c88:	ldr	r8, [pc, #1728]	; 14350 <mbtowc@plt+0x2f8c>
   13c8c:	ldr	fp, [pc, #1728]	; 14354 <mbtowc@plt+0x2f90>
   13c90:	ldr	r2, [pc, #1728]	; 14358 <mbtowc@plt+0x2f94>
   13c94:	mov	r3, #34	; 0x22
   13c98:	str	r2, [r9, #8]
   13c9c:	str	r4, [r9, #4]
   13ca0:	strb	r3, [r4, #-1]
   13ca4:	ldr	r5, [sp, #44]	; 0x2c
   13ca8:	cmp	r5, #0
   13cac:	ble	13d90 <mbtowc@plt+0x29cc>
   13cb0:	ldr	r3, [sp, #40]	; 0x28
   13cb4:	add	r2, r3, #4
   13cb8:	str	r2, [sp, #40]	; 0x28
   13cbc:	ldr	r7, [r3]
   13cc0:	mov	r0, r7
   13cc4:	bl	11274 <strlen@plt>
   13cc8:	subs	r6, r0, #0
   13ccc:	bne	13cfc <mbtowc@plt+0x2938>
   13cd0:	b	13d80 <mbtowc@plt+0x29bc>
   13cd4:	ldr	r0, [sp, #48]	; 0x30
   13cd8:	bl	11184 <iswprint@plt>
   13cdc:	cmp	r0, #0
   13ce0:	beq	13d18 <mbtowc@plt+0x2954>
   13ce4:	cmp	sl, r5
   13ce8:	ble	14180 <mbtowc@plt+0x2dbc>
   13cec:	sub	r6, r6, sl
   13cf0:	cmp	r6, #0
   13cf4:	add	r7, r7, sl
   13cf8:	ble	13d7c <mbtowc@plt+0x29b8>
   13cfc:	mov	r2, r6
   13d00:	mov	r1, r7
   13d04:	add	r0, sp, #48	; 0x30
   13d08:	bl	113c4 <mbtowc@plt>
   13d0c:	ldr	r5, [r9, #8]
   13d10:	subs	sl, r0, #0
   13d14:	bgt	13cd4 <mbtowc@plt+0x2910>
   13d18:	cmp	r5, #0
   13d1c:	movle	r3, #0
   13d20:	movgt	r3, #92	; 0x5c
   13d24:	strble	r3, [r4]
   13d28:	strbgt	r3, [r4]
   13d2c:	ldrb	r3, [r7], #1
   13d30:	subgt	r5, r5, #1
   13d34:	addgt	r0, r4, #1
   13d38:	movle	r0, r4
   13d3c:	stmibgt	r9, {r0, r5}
   13d40:	mov	r1, r5
   13d44:	str	r3, [sp, #4]
   13d48:	str	r8, [sp]
   13d4c:	mvn	r3, #0
   13d50:	mov	r2, #1
   13d54:	bl	113b8 <__snprintf_chk@plt>
   13d58:	ldr	r4, [r9, #4]
   13d5c:	ldr	r3, [r9, #8]
   13d60:	sub	r6, r6, #1
   13d64:	add	r4, r4, #3
   13d68:	sub	r3, r3, #3
   13d6c:	cmp	r6, #0
   13d70:	str	r4, [r9, #4]
   13d74:	str	r3, [r9, #8]
   13d78:	bgt	13cfc <mbtowc@plt+0x2938>
   13d7c:	ldr	r5, [sp, #44]	; 0x2c
   13d80:	sub	r5, r5, #1
   13d84:	cmp	r5, #0
   13d88:	str	r5, [sp, #44]	; 0x2c
   13d8c:	bgt	142a4 <mbtowc@plt+0x2ee0>
   13d90:	mov	r3, r4
   13d94:	mov	r1, #34	; 0x22
   13d98:	mov	r2, #0
   13d9c:	strb	r1, [r3], #2
   13da0:	ldr	r0, [pc, #1460]	; 1435c <mbtowc@plt+0x2f98>
   13da4:	strb	r2, [r4, #1]
   13da8:	str	r3, [r9, #4]
   13dac:	b	13c28 <mbtowc@plt+0x2864>
   13db0:	cmp	r6, #0
   13db4:	ble	142d0 <mbtowc@plt+0x2f0c>
   13db8:	add	ip, r2, r6
   13dbc:	mov	r2, #0
   13dc0:	ldr	r4, [pc, #1432]	; 14360 <mbtowc@plt+0x2f9c>
   13dc4:	sub	ip, ip, #1
   13dc8:	mov	r0, r2
   13dcc:	sub	r1, r5, #1
   13dd0:	b	13de8 <mbtowc@plt+0x2a24>
   13dd4:	cmp	r0, #0
   13dd8:	bne	142e8 <mbtowc@plt+0x2f24>
   13ddc:	mov	r2, r3
   13de0:	cmp	ip, r1
   13de4:	beq	142d0 <mbtowc@plt+0x2f0c>
   13de8:	ldrb	r3, [r1, #1]!
   13dec:	tst	r3, #128	; 0x80
   13df0:	beq	13dd4 <mbtowc@plt+0x2a10>
   13df4:	and	lr, r3, #192	; 0xc0
   13df8:	cmp	lr, #128	; 0x80
   13dfc:	beq	141c8 <mbtowc@plt+0x2e04>
   13e00:	and	r2, r3, #224	; 0xe0
   13e04:	cmp	r2, #192	; 0xc0
   13e08:	beq	1424c <mbtowc@plt+0x2e88>
   13e0c:	and	r2, r3, #240	; 0xf0
   13e10:	cmp	r2, #224	; 0xe0
   13e14:	beq	14268 <mbtowc@plt+0x2ea4>
   13e18:	and	r2, r3, #248	; 0xf8
   13e1c:	cmp	r2, #240	; 0xf0
   13e20:	bne	142f0 <mbtowc@plt+0x2f2c>
   13e24:	cmp	r0, #0
   13e28:	bne	142e8 <mbtowc@plt+0x2f24>
   13e2c:	lsl	r3, r3, #18
   13e30:	and	r2, r3, #1835008	; 0x1c0000
   13e34:	cmp	r2, r4
   13e38:	bhi	142f0 <mbtowc@plt+0x2f2c>
   13e3c:	mov	r0, #3
   13e40:	b	13de0 <mbtowc@plt+0x2a1c>
   13e44:	ldr	r2, [pc, #1304]	; 14364 <mbtowc@plt+0x2fa0>
   13e48:	mov	r3, #21
   13e4c:	stm	sp, {r2, r6}
   13e50:	mov	r1, r3
   13e54:	mov	r2, #1
   13e58:	ldr	r0, [pc, #1288]	; 14368 <mbtowc@plt+0x2fa4>
   13e5c:	bl	113b8 <__snprintf_chk@plt>
   13e60:	ldr	r0, [pc, #1280]	; 14368 <mbtowc@plt+0x2fa4>
   13e64:	b	13c28 <mbtowc@plt+0x2864>
   13e68:	mov	r0, r6
   13e6c:	bl	13a40 <mbtowc@plt+0x267c>
   13e70:	b	13c28 <mbtowc@plt+0x2864>
   13e74:	ldr	r3, [pc, #1264]	; 1436c <mbtowc@plt+0x2fa8>
   13e78:	cmp	r6, #0
   13e7c:	ldr	r0, [pc, #1260]	; 14370 <mbtowc@plt+0x2fac>
   13e80:	movne	r0, r3
   13e84:	b	13c28 <mbtowc@plt+0x2864>
   13e88:	ldr	r2, [pc, #1252]	; 14374 <mbtowc@plt+0x2fb0>
   13e8c:	b	13e48 <mbtowc@plt+0x2a84>
   13e90:	ldr	r2, [pc, #1248]	; 14378 <mbtowc@plt+0x2fb4>
   13e94:	b	13e48 <mbtowc@plt+0x2a84>
   13e98:	ldr	r2, [pc, #1244]	; 1437c <mbtowc@plt+0x2fb8>
   13e9c:	ldr	r3, [pc, #1208]	; 1435c <mbtowc@plt+0x2f98>
   13ea0:	mov	r4, #0
   13ea4:	ldm	r2, {r0, r1}
   13ea8:	mov	r8, r3
   13eac:	ldr	sl, [pc, #1216]	; 14374 <mbtowc@plt+0x2fb0>
   13eb0:	stm	r3, {r0, r1}
   13eb4:	ldr	r7, [pc, #1196]	; 14368 <mbtowc@plt+0x2fa4>
   13eb8:	ldr	r9, [pc, #1216]	; 14380 <mbtowc@plt+0x2fbc>
   13ebc:	ldr	fp, [pc, #1216]	; 14384 <mbtowc@plt+0x2fc0>
   13ec0:	mov	r3, r4
   13ec4:	mov	r5, #1
   13ec8:	b	13f0c <mbtowc@plt+0x2b48>
   13ecc:	mov	r3, #21
   13ed0:	mov	r1, r3
   13ed4:	mov	r2, #1
   13ed8:	str	r4, [sp, #4]
   13edc:	str	sl, [sp]
   13ee0:	mov	r0, r7
   13ee4:	bl	113b8 <__snprintf_chk@plt>
   13ee8:	mov	r2, r9
   13eec:	mov	r1, r7
   13ef0:	mov	r0, r8
   13ef4:	bl	112bc <__strcat_chk@plt>
   13ef8:	mov	r3, #1
   13efc:	add	r4, r4, #1
   13f00:	cmp	r4, #33	; 0x21
   13f04:	lsl	r5, r5, #1
   13f08:	beq	14280 <mbtowc@plt+0x2ebc>
   13f0c:	tst	r6, r5
   13f10:	beq	13efc <mbtowc@plt+0x2b38>
   13f14:	cmp	r3, #0
   13f18:	beq	13ecc <mbtowc@plt+0x2b08>
   13f1c:	mov	r2, r9
   13f20:	mov	r1, fp
   13f24:	mov	r0, r8
   13f28:	bl	112bc <__strcat_chk@plt>
   13f2c:	b	13ecc <mbtowc@plt+0x2b08>
   13f30:	ldr	r9, [pc, #1040]	; 14348 <mbtowc@plt+0x2f84>
   13f34:	bic	r6, r6, #3
   13f38:	add	r5, r2, r6
   13f3c:	mov	r4, r2
   13f40:	ldr	r0, [r9, #44]	; 0x2c
   13f44:	str	r5, [sp, #32]
   13f48:	bl	11100 <free@plt>
   13f4c:	mov	r0, #0
   13f50:	cmp	r4, r5
   13f54:	str	r0, [r9, #44]	; 0x2c
   13f58:	bcs	13c28 <mbtowc@plt+0x2864>
   13f5c:	vldr	d12, [pc, #948]	; 14318 <mbtowc@plt+0x2f54>
   13f60:	vldr	d11, [pc, #952]	; 14320 <mbtowc@plt+0x2f5c>
   13f64:	ldr	sl, [pc, #1052]	; 14388 <mbtowc@plt+0x2fc4>
   13f68:	str	r9, [sp, #36]	; 0x24
   13f6c:	mov	r3, r0
   13f70:	mov	r9, r4
   13f74:	str	r0, [sp, #28]
   13f78:	ldr	r5, [r9, #4]
   13f7c:	ldr	r7, [r9], #8
   13f80:	ldr	r2, [sp, #28]
   13f84:	add	r1, r7, #2
   13f88:	lsl	ip, r5, #2
   13f8c:	add	r2, r2, #80	; 0x50
   13f90:	sub	r4, r3, r0
   13f94:	mla	r3, ip, r1, r2
   13f98:	str	r5, [sp, #16]
   13f9c:	mov	r1, r3
   13fa0:	str	r3, [sp, #28]
   13fa4:	bl	11160 <realloc@plt>
   13fa8:	ldr	r3, [sp, #36]	; 0x24
   13fac:	cmp	r0, #0
   13fb0:	str	r0, [r3, #44]	; 0x2c
   13fb4:	beq	14300 <mbtowc@plt+0x2f3c>
   13fb8:	ldr	r3, [sp, #32]
   13fbc:	mul	r6, r5, r7
   13fc0:	sub	r3, r3, r9
   13fc4:	add	r4, r0, r4
   13fc8:	cmp	r6, r3, asr #2
   13fcc:	bhi	13c28 <mbtowc@plt+0x2864>
   13fd0:	str	r5, [sp, #4]
   13fd4:	ldr	r3, [pc, #944]	; 1438c <mbtowc@plt+0x2fc8>
   13fd8:	str	r7, [sp]
   13fdc:	mvn	r2, #0
   13fe0:	mov	r1, #1
   13fe4:	mov	r0, r4
   13fe8:	bl	112c8 <__sprintf_chk@plt>
   13fec:	cmp	r5, #144	; 0x90
   13ff0:	cmpls	r7, #144	; 0x90
   13ff4:	mov	r3, r5
   13ff8:	movhi	fp, #1
   13ffc:	movls	fp, #0
   14000:	mov	ip, r0
   14004:	add	r5, r4, r0
   14008:	bhi	141a0 <mbtowc@plt+0x2ddc>
   1400c:	cmp	r3, #0
   14010:	beq	14298 <mbtowc@plt+0x2ed4>
   14014:	ldr	r3, [pc, #884]	; 14390 <mbtowc@plt+0x2fcc>
   14018:	vldr	d10, [pc, #776]	; 14328 <mbtowc@plt+0x2f64>
   1401c:	ldr	r2, [pc, #880]	; 14394 <mbtowc@plt+0x2fd0>
   14020:	ldrh	r3, [r3]
   14024:	str	r2, [sp, #12]
   14028:	str	r9, [sp, #8]
   1402c:	str	r3, [sp, #20]
   14030:	lsl	r3, r7, #2
   14034:	str	r3, [sp, #24]
   14038:	ldr	r3, [sp, #20]
   1403c:	cmp	r7, #0
   14040:	strh	r3, [r5], #1
   14044:	beq	14138 <mbtowc@plt+0x2d74>
   14048:	vldr	d9, [pc, #736]	; 14330 <mbtowc@plt+0x2f6c>
   1404c:	vldr	d8, [pc, #740]	; 14338 <mbtowc@plt+0x2f74>
   14050:	ldr	r8, [pc, #832]	; 14398 <mbtowc@plt+0x2fd4>
   14054:	ldr	r6, [sp, #8]
   14058:	mov	r9, #0
   1405c:	b	14088 <mbtowc@plt+0x2cc4>
   14060:	add	r2, r4, r4, lsl #4
   14064:	add	r9, r9, #1
   14068:	add	r2, r4, r2, lsl #2
   1406c:	cmp	r9, r7
   14070:	umull	r2, r3, r2, sl
   14074:	add	r5, r5, #1
   14078:	add	r3, r8, r3, lsr #6
   1407c:	ldrb	r3, [r3, #20]
   14080:	strb	r3, [r5, #-1]
   14084:	beq	14128 <mbtowc@plt+0x2d64>
   14088:	ldr	r3, [r6], #4
   1408c:	lsr	r1, r3, #8
   14090:	lsr	r2, r3, #16
   14094:	uxtb	r1, r1
   14098:	uxtb	r2, r2
   1409c:	vmov	s15, r1
   140a0:	vcvt.f64.s32	d3, s15
   140a4:	vmov	s15, r2
   140a8:	uxtb	r2, r3
   140ac:	lsr	r3, r3, #24
   140b0:	vmov	s12, r2
   140b4:	vcvt.f64.s32	d4, s15
   140b8:	vmov	s15, r3
   140bc:	vcvt.f64.s32	d6, s12
   140c0:	vcvt.f64.s32	d5, s15
   140c4:	vdiv.f64	d7, d3, d12
   140c8:	vdiv.f64	d3, d4, d12
   140cc:	vmul.f64	d7, d7, d10
   140d0:	vdiv.f64	d4, d6, d12
   140d4:	vmla.f64	d7, d3, d11
   140d8:	vdiv.f64	d6, d5, d12
   140dc:	vmla.f64	d7, d4, d9
   140e0:	vsub.f64	d7, d8, d7
   140e4:	vmul.f64	d7, d7, d6
   140e8:	vcvt.u32.f64	s15, d7
   140ec:	vmov	r4, s15
   140f0:	bl	13970 <mbtowc@plt+0x25ac>
   140f4:	cmp	r0, #0
   140f8:	beq	14060 <mbtowc@plt+0x2c9c>
   140fc:	lsl	r2, r4, #2
   14100:	mov	r0, r5
   14104:	umull	r2, r3, r2, sl
   14108:	ldr	r1, [pc, #652]	; 1439c <mbtowc@plt+0x2fd8>
   1410c:	add	r9, r9, #1
   14110:	lsr	r2, r3, #6
   14114:	add	r2, r8, r2, lsl #2
   14118:	bl	1137c <sprintf@plt>
   1411c:	cmp	r9, r7
   14120:	add	r5, r5, r0
   14124:	bne	14088 <mbtowc@plt+0x2cc4>
   14128:	ldr	r3, [sp, #8]
   1412c:	ldr	r2, [sp, #24]
   14130:	add	r3, r3, r2
   14134:	str	r3, [sp, #8]
   14138:	ldr	r3, [sp, #12]
   1413c:	ldr	r2, [sp, #16]
   14140:	add	fp, fp, #1
   14144:	ldrh	r3, [r3]
   14148:	cmp	fp, r2
   1414c:	strh	r3, [r5], #1
   14150:	bne	14038 <mbtowc@plt+0x2c74>
   14154:	ldr	r9, [sp, #8]
   14158:	ldr	r3, [sp, #12]
   1415c:	ldrh	r2, [r3]
   14160:	mov	r3, r5
   14164:	strh	r2, [r3], #1
   14168:	ldr	r2, [sp, #32]
   1416c:	cmp	r2, r9
   14170:	ldr	r2, [sp, #36]	; 0x24
   14174:	ldr	r0, [r2, #44]	; 0x2c
   14178:	bhi	13f78 <mbtowc@plt+0x2bb4>
   1417c:	b	13c28 <mbtowc@plt+0x2864>
   14180:	mov	r0, r4
   14184:	sub	r5, r5, sl
   14188:	add	r4, r4, sl
   1418c:	mov	r2, sl
   14190:	mov	r1, r7
   14194:	bl	1110c <memcpy@plt>
   14198:	strd	r4, [r9, #4]
   1419c:	b	13cec <mbtowc@plt+0x2928>
   141a0:	ldr	lr, [pc, #504]	; 143a0 <mbtowc@plt+0x2fdc>
   141a4:	mov	r3, r5
   141a8:	add	r9, r9, r6, lsl #2
   141ac:	ldm	lr!, {r0, r1, r2}
   141b0:	ldrb	lr, [lr]
   141b4:	str	r0, [r4, ip]
   141b8:	str	r1, [r5, #4]
   141bc:	str	r2, [r5, #8]
   141c0:	strb	lr, [r3, #12]!
   141c4:	b	14168 <mbtowc@plt+0x2da4>
   141c8:	cmp	r0, #0
   141cc:	beq	142f8 <mbtowc@plt+0x2f34>
   141d0:	sub	r0, r0, #1
   141d4:	and	r3, r3, #63	; 0x3f
   141d8:	add	lr, r0, r0, lsl #1
   141dc:	lsl	lr, lr, #1
   141e0:	orrs	r2, r2, r3, lsl lr
   141e4:	bne	13de0 <mbtowc@plt+0x2a1c>
   141e8:	ldr	r4, [pc, #436]	; 143a4 <mbtowc@plt+0x2fe0>
   141ec:	mov	r1, r6
   141f0:	mov	r0, r5
   141f4:	mov	r2, #0
   141f8:	bl	1371c <mbtowc@plt+0x2358>
   141fc:	bl	1113c <strdup@plt>
   14200:	subs	r5, r0, #0
   14204:	beq	14300 <mbtowc@plt+0x2f3c>
   14208:	mov	r0, r4
   1420c:	bl	11274 <strlen@plt>
   14210:	ldr	r6, [pc, #324]	; 1435c <mbtowc@plt+0x2f98>
   14214:	ldr	r3, [pc, #356]	; 14380 <mbtowc@plt+0x2fbc>
   14218:	mov	r1, r4
   1421c:	mov	r2, r0
   14220:	mov	r7, r0
   14224:	mov	r0, r6
   14228:	bl	111a8 <__memcpy_chk@plt>
   1422c:	ldr	r2, [pc, #332]	; 14380 <mbtowc@plt+0x2fbc>
   14230:	mov	r1, r5
   14234:	add	r0, r6, r7
   14238:	bl	111cc <__strcpy_chk@plt>
   1423c:	mov	r0, r5
   14240:	bl	11100 <free@plt>
   14244:	mov	r0, r6
   14248:	b	13c28 <mbtowc@plt+0x2864>
   1424c:	cmp	r0, #0
   14250:	bne	142e8 <mbtowc@plt+0x2f24>
   14254:	lsl	r3, r3, #6
   14258:	ands	r2, r3, #1984	; 0x7c0
   1425c:	beq	141e8 <mbtowc@plt+0x2e24>
   14260:	mov	r0, #1
   14264:	b	13de0 <mbtowc@plt+0x2a1c>
   14268:	cmp	r0, #0
   1426c:	bne	142e8 <mbtowc@plt+0x2f24>
   14270:	lsl	r3, r3, #12
   14274:	mov	r0, #2
   14278:	uxth	r2, r3
   1427c:	b	13de0 <mbtowc@plt+0x2a1c>
   14280:	ldr	r2, [pc, #248]	; 14380 <mbtowc@plt+0x2fbc>
   14284:	ldr	r1, [pc, #284]	; 143a8 <mbtowc@plt+0x2fe4>
   14288:	ldr	r0, [pc, #204]	; 1435c <mbtowc@plt+0x2f98>
   1428c:	bl	112bc <__strcat_chk@plt>
   14290:	ldr	r0, [pc, #196]	; 1435c <mbtowc@plt+0x2f98>
   14294:	b	13c28 <mbtowc@plt+0x2864>
   14298:	ldr	r3, [pc, #244]	; 14394 <mbtowc@plt+0x2fd0>
   1429c:	str	r3, [sp, #12]
   142a0:	b	14158 <mbtowc@plt+0x2d94>
   142a4:	mov	r0, r4
   142a8:	mov	r2, fp
   142ac:	ldr	r1, [r9, #8]
   142b0:	bl	112d4 <snprintf@plt>
   142b4:	ldr	r4, [r9, #4]
   142b8:	ldr	r3, [r9, #8]
   142bc:	add	r4, r4, #4
   142c0:	sub	r3, r3, #4
   142c4:	str	r4, [r9, #4]
   142c8:	str	r3, [r9, #8]
   142cc:	b	13ca4 <mbtowc@plt+0x28e0>
   142d0:	bl	13970 <mbtowc@plt+0x25ac>
   142d4:	mov	r1, r6
   142d8:	mov	r2, r0
   142dc:	mov	r0, r5
   142e0:	bl	1371c <mbtowc@plt+0x2358>
   142e4:	b	13c28 <mbtowc@plt+0x2864>
   142e8:	ldr	r4, [pc, #188]	; 143ac <mbtowc@plt+0x2fe8>
   142ec:	b	141ec <mbtowc@plt+0x2e28>
   142f0:	ldr	r4, [pc, #184]	; 143b0 <mbtowc@plt+0x2fec>
   142f4:	b	141ec <mbtowc@plt+0x2e28>
   142f8:	ldr	r4, [pc, #180]	; 143b4 <mbtowc@plt+0x2ff0>
   142fc:	b	141ec <mbtowc@plt+0x2e28>
   14300:	ldr	r0, [pc, #176]	; 143b8 <mbtowc@plt+0x2ff4>
   14304:	bl	127d0 <mbtowc@plt+0x140c>
   14308:	bl	11148 <__stack_chk_fail@plt>
   1430c:	mov	r1, r0
   14310:	ldr	r0, [pc, #164]	; 143bc <mbtowc@plt+0x2ff8>
   14314:	bl	127d0 <mbtowc@plt+0x140c>
   14318:	andeq	r0, r0, r0
   1431c:	rsbmi	lr, pc, r0
   14320:	andeq	r0, r0, r0
   14324:	rsbsmi	fp, r2, r0
   14328:	andeq	r0, r0, r0
   1432c:	addmi	r5, r2, r0, lsl #16
   14330:	andeq	r0, r0, r0
   14334:	subsmi	r8, ip, r0
   14338:	andeq	r0, r0, r0
   1433c:	addmi	r4, pc, r0
   14340:	andeq	r6, r2, r0, lsl #30
   14344:	andeq	r7, r2, ip, asr #11
   14348:	ldrdeq	r7, [r2], -r8
   1434c:	andeq	r7, r2, sp, lsr #19
   14350:	andeq	r4, r1, r0, asr #28
   14354:	andeq	r4, r1, r0, lsr #30
   14358:	andeq	sl, r7, r0, lsr #2
   1435c:	andeq	r7, r2, ip, lsr #19
   14360:			; <UNDEFINED> instruction: 0x0010ffff
   14364:	andeq	r4, r1, r8, ror ip
   14368:	andeq	r7, r2, ip, ror #11
   1436c:	andeq	r4, r1, r0, ror lr
   14370:	andeq	r4, r1, r8, ror #28
   14374:	andeq	r4, r1, r0, lsl #25
   14378:	andeq	r4, r1, r8, lsr #30
   1437c:	andeq	r4, r1, ip, lsr #30
   14380:	andeq	sl, r7, r4, lsl #3
   14384:	andeq	r4, r1, r4, lsr pc
   14388:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1438c:	andeq	r4, r1, ip, lsr pc
   14390:	andeq	r4, r1, r0, ror #30
   14394:	andeq	r5, r1, r8, asr r1
   14398:	andeq	r4, r1, ip, ror #25
   1439c:	andeq	r4, r1, r0, lsr #28
   143a0:	andeq	r4, r1, r0, asr pc
   143a4:	andeq	r4, r1, r0, lsr #29
   143a8:	andeq	r4, r1, r8, lsr pc
   143ac:	andeq	r4, r1, r8, ror lr
   143b0:	andeq	r4, r1, ip, asr #29
   143b4:	strdeq	r4, [r1], -r8
   143b8:	andeq	r4, r1, r8, asr #26
   143bc:	andeq	r4, r1, r4, ror #30
   143c0:	ldr	r3, [pc, #1784]	; 14ac0 <mbtowc@plt+0x36fc>
   143c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c8:	sub	sp, sp, #100	; 0x64
   143cc:	ldr	r4, [pc, #1776]	; 14ac4 <mbtowc@plt+0x3700>
   143d0:	ldr	r3, [r3]
   143d4:	mov	r5, r2
   143d8:	str	r0, [sp, #44]	; 0x2c
   143dc:	str	r1, [sp, #40]	; 0x28
   143e0:	mov	r0, #1
   143e4:	ldr	r1, [pc, #1756]	; 14ac8 <mbtowc@plt+0x3704>
   143e8:	str	r3, [sp, #92]	; 0x5c
   143ec:	bl	11310 <__printf_chk@plt>
   143f0:	mov	r1, r5
   143f4:	ldr	r0, [r4]
   143f8:	mov	r2, #1
   143fc:	bl	112b0 <XInternAtom@plt>
   14400:	subs	r6, r0, #0
   14404:	bne	1442c <mbtowc@plt+0x3068>
   14408:	ldr	r0, [pc, #1724]	; 14acc <mbtowc@plt+0x3708>
   1440c:	bl	111fc <puts@plt>
   14410:	ldr	r3, [pc, #1704]	; 14ac0 <mbtowc@plt+0x36fc>
   14414:	ldr	r2, [sp, #92]	; 0x5c
   14418:	ldr	r3, [r3]
   1441c:	cmp	r2, r3
   14420:	bne	14a80 <mbtowc@plt+0x36bc>
   14424:	add	sp, sp, #100	; 0x64
   14428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1442c:	ldr	r5, [pc, #1692]	; 14ad0 <mbtowc@plt+0x370c>
   14430:	ldr	r1, [r5, #52]	; 0x34
   14434:	cmn	r1, #1
   14438:	bne	1448c <mbtowc@plt+0x30c8>
   1443c:	ldr	r3, [r5, #56]	; 0x38
   14440:	ldr	ip, [r3, #36]	; 0x24
   14444:	cmp	ip, #0
   14448:	ble	14534 <mbtowc@plt+0x3170>
   1444c:	ldr	r0, [r3, #40]	; 0x28
   14450:	ldr	r3, [r0]
   14454:	cmp	r6, r3
   14458:	addne	r2, r0, #8
   1445c:	movne	r3, #0
   14460:	bne	1447c <mbtowc@plt+0x30b8>
   14464:	b	1490c <mbtowc@plt+0x3548>
   14468:	ldr	r1, [r0, r3, lsl #3]
   1446c:	mov	lr, r2
   14470:	cmp	r6, r1
   14474:	add	r2, r2, #8
   14478:	beq	14910 <mbtowc@plt+0x354c>
   1447c:	add	r3, r3, #1
   14480:	cmp	r3, ip
   14484:	bne	14468 <mbtowc@plt+0x30a4>
   14488:	b	14534 <mbtowc@plt+0x3170>
   1448c:	ldr	r0, [r5, #64]	; 0x40
   14490:	cmp	r0, #0
   14494:	beq	144a8 <mbtowc@plt+0x30e4>
   14498:	bl	11154 <XFree@plt>
   1449c:	ldr	r1, [r5, #52]	; 0x34
   144a0:	mov	r3, #0
   144a4:	str	r3, [r5, #64]	; 0x40
   144a8:	ldr	r7, [pc, #1572]	; 14ad4 <mbtowc@plt+0x3710>
   144ac:	ldr	ip, [pc, #1572]	; 14ad8 <mbtowc@plt+0x3714>
   144b0:	ldr	r0, [r4]
   144b4:	ldr	r2, [r7, #1168]	; 0x490
   144b8:	str	ip, [sp, #28]
   144bc:	adds	r3, r2, #3
   144c0:	addmi	r3, r2, #6
   144c4:	add	r2, sp, #64	; 0x40
   144c8:	asr	r3, r3, #2
   144cc:	str	r3, [sp]
   144d0:	add	r3, sp, #60	; 0x3c
   144d4:	add	ip, sp, #56	; 0x38
   144d8:	str	r2, [sp, #24]
   144dc:	str	r3, [sp, #20]
   144e0:	add	r2, sp, #52	; 0x34
   144e4:	mov	r3, #0
   144e8:	str	r2, [sp, #12]
   144ec:	str	ip, [sp, #16]
   144f0:	str	r3, [sp, #8]
   144f4:	str	r3, [sp, #4]
   144f8:	mov	r2, r6
   144fc:	bl	11394 <XGetWindowProperty@plt>
   14500:	cmp	r0, #3
   14504:	beq	14a9c <mbtowc@plt+0x36d8>
   14508:	cmp	r0, #0
   1450c:	bne	14a94 <mbtowc@plt+0x36d0>
   14510:	ldr	r9, [sp, #56]	; 0x38
   14514:	cmp	r9, #32
   14518:	beq	14540 <mbtowc@plt+0x317c>
   1451c:	cmp	r9, #16
   14520:	beq	14a54 <mbtowc@plt+0x3690>
   14524:	cmp	r9, #8
   14528:	beq	14a68 <mbtowc@plt+0x36a4>
   1452c:	cmp	r9, #0
   14530:	bne	1479c <mbtowc@plt+0x33d8>
   14534:	ldr	r0, [pc, #1440]	; 14adc <mbtowc@plt+0x3718>
   14538:	bl	111fc <puts@plt>
   1453c:	b	14410 <mbtowc@plt+0x304c>
   14540:	mov	r1, #4
   14544:	ldr	r4, [sp, #60]	; 0x3c
   14548:	ldr	r3, [r7, #1168]	; 0x490
   1454c:	ldr	r2, [r5, #60]	; 0x3c
   14550:	mul	r4, r4, r1
   14554:	ldr	r5, [r5, #64]	; 0x40
   14558:	cmp	r4, r3
   1455c:	movcs	r4, r3
   14560:	ldr	r3, [sp, #52]	; 0x34
   14564:	cmp	r2, #0
   14568:	str	r3, [sp, #36]	; 0x24
   1456c:	bne	1494c <mbtowc@plt+0x3588>
   14570:	ldr	r3, [sp, #36]	; 0x24
   14574:	cmp	r3, #0
   14578:	beq	14930 <mbtowc@plt+0x356c>
   1457c:	mov	r0, r3
   14580:	bl	13a40 <mbtowc@plt+0x267c>
   14584:	add	r8, sp, #40	; 0x28
   14588:	ldr	r1, [pc, #1360]	; 14ae0 <mbtowc@plt+0x371c>
   1458c:	add	r7, sp, #44	; 0x2c
   14590:	mov	r2, r0
   14594:	mov	r0, #1
   14598:	bl	11310 <__printf_chk@plt>
   1459c:	mov	r0, r6
   145a0:	mov	r2, r8
   145a4:	mov	r1, r7
   145a8:	bl	13028 <mbtowc@plt+0x1c64>
   145ac:	mov	r2, r8
   145b0:	mov	r1, r7
   145b4:	ldr	r0, [sp, #36]	; 0x24
   145b8:	bl	13028 <mbtowc@plt+0x1c64>
   145bc:	ldr	r0, [sp, #44]	; 0x2c
   145c0:	cmp	r0, #0
   145c4:	ldreq	r3, [pc, #1304]	; 14ae4 <mbtowc@plt+0x3720>
   145c8:	moveq	r0, r3
   145cc:	streq	r3, [sp, #44]	; 0x2c
   145d0:	ldr	r3, [sp, #40]	; 0x28
   145d4:	cmp	r3, #0
   145d8:	ldreq	r3, [pc, #1288]	; 14ae8 <mbtowc@plt+0x3724>
   145dc:	streq	r3, [sp, #40]	; 0x28
   145e0:	bl	13464 <mbtowc@plt+0x20a0>
   145e4:	cmp	r0, r9
   145e8:	cmpne	r0, #0
   145ec:	movne	r7, #1
   145f0:	moveq	r7, #0
   145f4:	bne	14974 <mbtowc@plt+0x35b0>
   145f8:	add	r6, sp, #64	; 0x40
   145fc:	str	r7, [sp, #64]	; 0x40
   14600:	str	r7, [r6, #4]
   14604:	str	r7, [r6, #8]
   14608:	str	r7, [r6, #12]
   1460c:	str	r7, [r6, #16]
   14610:	str	r7, [r6, #20]
   14614:	str	r7, [r6, #24]
   14618:	ldr	fp, [sp, #44]	; 0x2c
   1461c:	bl	130e4 <mbtowc@plt+0x1d20>
   14620:	cmp	r9, #0
   14624:	add	sl, r9, #7
   14628:	movge	sl, r9
   1462c:	asr	sl, sl, #3
   14630:	cmp	r4, sl
   14634:	mov	r8, r0
   14638:	blt	14690 <mbtowc@plt+0x32cc>
   1463c:	mov	r1, r7
   14640:	mov	r0, fp
   14644:	bl	134d8 <mbtowc@plt+0x2114>
   14648:	sub	r3, r0, #115	; 0x73
   1464c:	ands	r3, r3, #253	; 0xfd
   14650:	beq	14730 <mbtowc@plt+0x336c>
   14654:	cmp	r0, #116	; 0x74
   14658:	beq	14800 <mbtowc@plt+0x343c>
   1465c:	cmp	r0, #111	; 0x6f
   14660:	bne	14784 <mbtowc@plt+0x33c0>
   14664:	cmp	r9, #32
   14668:	bne	14a8c <mbtowc@plt+0x36c8>
   1466c:	add	r3, sp, #76	; 0x4c
   14670:	str	r5, [sp, #80]	; 0x50
   14674:	ldm	r3, {r0, r1, r2, r3}
   14678:	str	r4, [sp, #72]	; 0x48
   1467c:	stm	sp, {r0, r1, r2, r3}
   14680:	mov	r0, r8
   14684:	ldm	r6, {r1, r2, r3}
   14688:	bl	13110 <mbtowc@plt+0x1d4c>
   1468c:	mov	r8, r0
   14690:	ldr	sl, [sp, #40]	; 0x28
   14694:	ldr	r5, [sp, #44]	; 0x2c
   14698:	ldr	r9, [pc, #1100]	; 14aec <mbtowc@plt+0x3728>
   1469c:	ldr	fp, [pc, #1100]	; 14af0 <mbtowc@plt+0x372c>
   146a0:	ldr	r4, [pc, #1056]	; 14ac8 <mbtowc@plt+0x3704>
   146a4:	ldr	r7, [pc, #1096]	; 14af4 <mbtowc@plt+0x3730>
   146a8:	ldrb	r0, [sl]
   146ac:	add	r3, sl, #1
   146b0:	cmp	r0, #0
   146b4:	beq	147f4 <mbtowc@plt+0x3430>
   146b8:	cmp	r0, #41	; 0x29
   146bc:	beq	14834 <mbtowc@plt+0x3470>
   146c0:	bls	147a0 <mbtowc@plt+0x33dc>
   146c4:	cmp	r0, #63	; 0x3f
   146c8:	beq	1484c <mbtowc@plt+0x3488>
   146cc:	cmp	r0, #92	; 0x5c
   146d0:	bne	1483c <mbtowc@plt+0x3478>
   146d4:	ldrb	r0, [sl, #1]
   146d8:	add	sl, sl, #2
   146dc:	cmp	r0, #0
   146e0:	beq	146a8 <mbtowc@plt+0x32e4>
   146e4:	cmp	r0, #110	; 0x6e
   146e8:	beq	14a70 <mbtowc@plt+0x36ac>
   146ec:	bhi	14a3c <mbtowc@plt+0x3678>
   146f0:	sub	r3, r0, #48	; 0x30
   146f4:	cmp	r3, #7
   146f8:	bhi	14a5c <mbtowc@plt+0x3698>
   146fc:	mov	r2, r6
   14700:	mov	r1, fp
   14704:	mov	r0, sl
   14708:	bl	112e0 <__isoc99_sscanf@plt>
   1470c:	cmp	r0, #1
   14710:	bne	14aa8 <mbtowc@plt+0x36e4>
   14714:	mov	r0, sl
   14718:	bl	133d8 <mbtowc@plt+0x2014>
   1471c:	ldr	r1, [r9]
   14720:	mov	sl, r0
   14724:	ldr	r0, [sp, #64]	; 0x40
   14728:	bl	111b4 <_IO_putc@plt>
   1472c:	b	146a8 <mbtowc@plt+0x32e4>
   14730:	cmp	r9, #8
   14734:	bne	14a84 <mbtowc@plt+0x36c0>
   14738:	str	r5, [sp, #80]	; 0x50
   1473c:	ldrb	r2, [r5], #1
   14740:	sub	r4, r4, #1
   14744:	add	r3, r3, #1
   14748:	cmp	r2, #0
   1474c:	cmpne	r4, #0
   14750:	bgt	1473c <mbtowc@plt+0x3378>
   14754:	str	r3, [sp, #72]	; 0x48
   14758:	add	r3, sp, #76	; 0x4c
   1475c:	add	r7, r7, #1
   14760:	ldm	r3, {r0, r1, r2, r3}
   14764:	stm	sp, {r0, r1, r2, r3}
   14768:	mov	r0, r8
   1476c:	ldm	r6, {r1, r2, r3}
   14770:	bl	13110 <mbtowc@plt+0x1d4c>
   14774:	cmp	sl, r4
   14778:	mov	r8, r0
   1477c:	ble	1463c <mbtowc@plt+0x3278>
   14780:	b	14690 <mbtowc@plt+0x32cc>
   14784:	cmp	r9, #16
   14788:	beq	148e4 <mbtowc@plt+0x3520>
   1478c:	cmp	r9, #32
   14790:	beq	148d8 <mbtowc@plt+0x3514>
   14794:	cmp	r9, #8
   14798:	beq	148c0 <mbtowc@plt+0x34fc>
   1479c:	bl	113ac <abort@plt>
   147a0:	cmp	r0, #36	; 0x24
   147a4:	bne	1483c <mbtowc@plt+0x3478>
   147a8:	mov	r0, r3
   147ac:	mov	r1, r6
   147b0:	bl	1340c <mbtowc@plt+0x2048>
   147b4:	ldrb	r3, [r0]
   147b8:	mov	sl, r0
   147bc:	cmp	r3, #43	; 0x2b
   147c0:	beq	14994 <mbtowc@plt+0x35d0>
   147c4:	ldr	r2, [sp, #64]	; 0x40
   147c8:	ldr	r3, [r8]
   147cc:	cmp	r2, r3
   147d0:	movge	r2, r7
   147d4:	blt	14a28 <mbtowc@plt+0x3664>
   147d8:	mov	r1, r4
   147dc:	mov	r0, #1
   147e0:	bl	11310 <__printf_chk@plt>
   147e4:	ldrb	r0, [sl]
   147e8:	add	r3, sl, #1
   147ec:	cmp	r0, #0
   147f0:	bne	146b8 <mbtowc@plt+0x32f4>
   147f4:	mov	r0, r8
   147f8:	bl	11100 <free@plt>
   147fc:	b	14410 <mbtowc@plt+0x304c>
   14800:	ldr	r3, [sp, #36]	; 0x24
   14804:	cmp	r9, #8
   14808:	str	r3, [sp, #76]	; 0x4c
   1480c:	bne	14a84 <mbtowc@plt+0x36c0>
   14810:	mov	r3, #0
   14814:	str	r5, [sp, #80]	; 0x50
   14818:	ldrb	r2, [r5], #1
   1481c:	sub	r4, r4, #1
   14820:	add	r3, r3, #1
   14824:	cmp	r2, #0
   14828:	cmpne	r4, #0
   1482c:	bgt	14818 <mbtowc@plt+0x3454>
   14830:	b	14754 <mbtowc@plt+0x3390>
   14834:	mov	sl, r3
   14838:	b	146a8 <mbtowc@plt+0x32e4>
   1483c:	ldr	r1, [r9]
   14840:	mov	sl, r3
   14844:	bl	111b4 <_IO_putc@plt>
   14848:	b	146a8 <mbtowc@plt+0x32e4>
   1484c:	mov	r0, r3
   14850:	mov	r2, r5
   14854:	mov	r3, r6
   14858:	mov	r1, r8
   1485c:	bl	13548 <mbtowc@plt+0x2184>
   14860:	ldrb	r3, [r0]
   14864:	cmp	r3, #40	; 0x28
   14868:	bne	14ab4 <mbtowc@plt+0x36f0>
   1486c:	ldr	r2, [sp, #64]	; 0x40
   14870:	add	sl, r0, #1
   14874:	cmp	r2, #0
   14878:	bne	146a8 <mbtowc@plt+0x32e4>
   1487c:	b	1489c <mbtowc@plt+0x34d8>
   14880:	bls	148fc <mbtowc@plt+0x3538>
   14884:	cmp	r3, #41	; 0x29
   14888:	subeq	r2, r2, #1
   1488c:	beq	14898 <mbtowc@plt+0x34d4>
   14890:	cmp	r3, #92	; 0x5c
   14894:	addeq	r1, sl, #2
   14898:	mov	sl, r1
   1489c:	ldrb	r3, [sl]
   148a0:	add	r1, sl, #1
   148a4:	cmp	r2, #0
   148a8:	cmpeq	r3, #41	; 0x29
   148ac:	beq	1498c <mbtowc@plt+0x35c8>
   148b0:	cmp	r3, #40	; 0x28
   148b4:	bne	14880 <mbtowc@plt+0x34bc>
   148b8:	add	r2, r2, #1
   148bc:	b	14898 <mbtowc@plt+0x34d4>
   148c0:	ldrb	r3, [r5]
   148c4:	cmp	r0, #105	; 0x69
   148c8:	add	r5, r5, #1
   148cc:	sub	r4, r4, #1
   148d0:	sxtbeq	r3, r3
   148d4:	b	14754 <mbtowc@plt+0x3390>
   148d8:	sub	r4, r4, #4
   148dc:	ldr	r3, [r5], #4
   148e0:	b	14754 <mbtowc@plt+0x3390>
   148e4:	ldrh	r3, [r5]
   148e8:	cmp	r0, #105	; 0x69
   148ec:	add	r5, r5, #2
   148f0:	sub	r4, r4, #2
   148f4:	sxtheq	r3, r3
   148f8:	b	14754 <mbtowc@plt+0x3390>
   148fc:	cmp	r3, #0
   14900:	bne	14898 <mbtowc@plt+0x34d4>
   14904:	ldr	r0, [pc, #492]	; 14af8 <mbtowc@plt+0x3734>
   14908:	bl	127d0 <mbtowc@plt+0x140c>
   1490c:	mov	lr, r0
   14910:	ldr	r2, [r5, #60]	; 0x3c
   14914:	ldr	r3, [lr, #4]
   14918:	cmp	r2, #0
   1491c:	str	r3, [r5, #48]	; 0x30
   14920:	bne	14a00 <mbtowc@plt+0x363c>
   14924:	ldr	r5, [pc, #464]	; 14afc <mbtowc@plt+0x3738>
   14928:	mov	r9, #32
   1492c:	mov	r4, #4
   14930:	mov	r0, r6
   14934:	add	r2, sp, #40	; 0x28
   14938:	add	r1, sp, #44	; 0x2c
   1493c:	bl	13028 <mbtowc@plt+0x1c64>
   14940:	mov	r3, #0
   14944:	str	r3, [sp, #36]	; 0x24
   14948:	b	145bc <mbtowc@plt+0x31f8>
   1494c:	add	r8, sp, #40	; 0x28
   14950:	add	r7, sp, #44	; 0x2c
   14954:	mov	r0, r6
   14958:	mov	r2, r8
   1495c:	mov	r1, r7
   14960:	bl	13028 <mbtowc@plt+0x1c64>
   14964:	ldr	r3, [sp, #36]	; 0x24
   14968:	cmp	r3, #0
   1496c:	bne	145ac <mbtowc@plt+0x31e8>
   14970:	b	145bc <mbtowc@plt+0x31f8>
   14974:	mov	r2, r0
   14978:	mov	r3, r9
   1497c:	ldr	r1, [pc, #380]	; 14b00 <mbtowc@plt+0x373c>
   14980:	mov	r0, #1
   14984:	bl	11310 <__printf_chk@plt>
   14988:	b	14410 <mbtowc@plt+0x304c>
   1498c:	mov	sl, r1
   14990:	b	146a8 <mbtowc@plt+0x32e4>
   14994:	ldr	r3, [r8]
   14998:	ldr	r2, [sp, #64]	; 0x40
   1499c:	add	sl, r0, #1
   149a0:	cmp	r3, r2
   149a4:	ble	146a8 <mbtowc@plt+0x32e4>
   149a8:	mov	r1, r5
   149ac:	mov	r0, r8
   149b0:	bl	13b6c <mbtowc@plt+0x27a8>
   149b4:	mov	r2, r0
   149b8:	mov	r1, r4
   149bc:	mov	r0, #1
   149c0:	bl	11310 <__printf_chk@plt>
   149c4:	ldr	r3, [sp, #64]	; 0x40
   149c8:	add	r3, r3, #1
   149cc:	str	r3, [sp, #64]	; 0x40
   149d0:	ldr	r2, [r8]
   149d4:	cmp	r2, r3
   149d8:	ble	146a8 <mbtowc@plt+0x32e4>
   149dc:	ldr	r1, [pc, #288]	; 14b04 <mbtowc@plt+0x3740>
   149e0:	mov	r0, #1
   149e4:	bl	11310 <__printf_chk@plt>
   149e8:	ldr	r2, [sp, #64]	; 0x40
   149ec:	ldr	r3, [r8]
   149f0:	cmp	r3, r2
   149f4:	bgt	149a8 <mbtowc@plt+0x35e4>
   149f8:	mov	r2, r7
   149fc:	b	149b8 <mbtowc@plt+0x35f4>
   14a00:	mov	r0, r6
   14a04:	add	r2, sp, #40	; 0x28
   14a08:	add	r1, sp, #44	; 0x2c
   14a0c:	bl	13028 <mbtowc@plt+0x1c64>
   14a10:	mov	r3, #0
   14a14:	ldr	r5, [pc, #224]	; 14afc <mbtowc@plt+0x3738>
   14a18:	mov	r9, #32
   14a1c:	mov	r4, #4
   14a20:	str	r3, [sp, #36]	; 0x24
   14a24:	b	145bc <mbtowc@plt+0x31f8>
   14a28:	mov	r1, r5
   14a2c:	mov	r0, r8
   14a30:	bl	13b6c <mbtowc@plt+0x27a8>
   14a34:	mov	r2, r0
   14a38:	b	147d8 <mbtowc@plt+0x3414>
   14a3c:	cmp	r0, #116	; 0x74
   14a40:	bne	14a5c <mbtowc@plt+0x3698>
   14a44:	ldr	r1, [r9]
   14a48:	mov	r0, #9
   14a4c:	bl	111b4 <_IO_putc@plt>
   14a50:	b	146a8 <mbtowc@plt+0x32e4>
   14a54:	mov	r1, #2
   14a58:	b	14544 <mbtowc@plt+0x3180>
   14a5c:	ldr	r1, [r9]
   14a60:	bl	111b4 <_IO_putc@plt>
   14a64:	b	146a8 <mbtowc@plt+0x32e4>
   14a68:	mov	r1, #1
   14a6c:	b	14544 <mbtowc@plt+0x3180>
   14a70:	ldr	r1, [r9]
   14a74:	mov	r0, #10
   14a78:	bl	111b4 <_IO_putc@plt>
   14a7c:	b	146a8 <mbtowc@plt+0x32e4>
   14a80:	bl	11148 <__stack_chk_fail@plt>
   14a84:	ldr	r0, [pc, #124]	; 14b08 <mbtowc@plt+0x3744>
   14a88:	bl	127d0 <mbtowc@plt+0x140c>
   14a8c:	ldr	r0, [pc, #120]	; 14b0c <mbtowc@plt+0x3748>
   14a90:	bl	127d0 <mbtowc@plt+0x140c>
   14a94:	ldr	r0, [pc, #116]	; 14b10 <mbtowc@plt+0x374c>
   14a98:	bl	127d0 <mbtowc@plt+0x140c>
   14a9c:	ldr	r1, [r5, #52]	; 0x34
   14aa0:	ldr	r0, [pc, #108]	; 14b14 <mbtowc@plt+0x3750>
   14aa4:	bl	127d0 <mbtowc@plt+0x140c>
   14aa8:	mov	r1, sl
   14aac:	ldr	r0, [pc, #100]	; 14b18 <mbtowc@plt+0x3754>
   14ab0:	bl	127d0 <mbtowc@plt+0x140c>
   14ab4:	mov	r1, r0
   14ab8:	ldr	r0, [pc, #92]	; 14b1c <mbtowc@plt+0x3758>
   14abc:	bl	127d0 <mbtowc@plt+0x140c>
   14ac0:	andeq	r6, r2, r0, lsl #30
   14ac4:	andeq	r7, r2, ip, asr #11
   14ac8:	andeq	r4, r1, r0, lsr #28
   14acc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14ad0:	ldrdeq	r7, [r2], -r8
   14ad4:	andeq	r7, r2, r8, lsr #2
   14ad8:	andeq	r7, r2, r8, lsl r6
   14adc:	strdeq	r4, [r1], -ip
   14ae0:	andeq	r5, r1, ip
   14ae4:	andeq	r4, r1, r0, lsl #31
   14ae8:	andeq	r4, r1, r8, asr sp
   14aec:	andeq	r7, r2, r4, asr #11
   14af0:	andeq	r5, r1, r4, asr #1
   14af4:	andeq	r4, r1, r4, lsl #31
   14af8:	andeq	r5, r1, r4, lsl #2
   14afc:	andeq	r7, r2, r8, lsl #12
   14b00:	andeq	r5, r1, r4, lsl r0
   14b04:	andeq	r4, r1, r4, lsr pc
   14b08:	andeq	r5, r1, r4, asr r0
   14b0c:	andeq	r5, r1, ip, lsl #1
   14b10:	andeq	r4, r1, r0, ror #31
   14b14:			; <UNDEFINED> instruction: 0x00014fbc
   14b18:	andeq	r5, r1, r8, asr #1
   14b1c:	andeq	r5, r1, r0, ror #1
   14b20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b24:	mov	r7, r0
   14b28:	ldr	r6, [pc, #72]	; 14b78 <mbtowc@plt+0x37b4>
   14b2c:	ldr	r5, [pc, #72]	; 14b7c <mbtowc@plt+0x37b8>
   14b30:	add	r6, pc, r6
   14b34:	add	r5, pc, r5
   14b38:	sub	r6, r6, r5
   14b3c:	mov	r8, r1
   14b40:	mov	r9, r2
   14b44:	bl	1108c <_init@@Base>
   14b48:	asrs	r6, r6, #2
   14b4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b50:	mov	r4, #0
   14b54:	add	r4, r4, #1
   14b58:	ldr	r3, [r5], #4
   14b5c:	mov	r2, r9
   14b60:	mov	r1, r8
   14b64:	mov	r0, r7
   14b68:	blx	r3
   14b6c:	cmp	r6, r4
   14b70:	bne	14b54 <mbtowc@plt+0x3790>
   14b74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b78:	andeq	r2, r1, r4, asr #7
   14b7c:			; <UNDEFINED> instruction: 0x000123bc
   14b80:	bx	lr

Disassembly of section .fini:

00014b84 <_fini@@Base>:
   14b84:	push	{r3, lr}
   14b88:	pop	{r3, pc}
