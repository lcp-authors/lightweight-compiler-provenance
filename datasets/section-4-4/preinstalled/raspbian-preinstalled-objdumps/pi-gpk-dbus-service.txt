
raspbian-preinstalled/pi-gpk-dbus-service:     file format elf32-littlearm


Disassembly of section .init:

00014eb8 <.init>:
   14eb8:	push	{r3, lr}
   14ebc:	bl	1621c <g_strcmp0@plt+0x39c>
   14ec0:	pop	{r3, pc}

Disassembly of section .plt:

00014ec4 <gtk_expander_get_expanded@plt-0x14>:
   14ec4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ec8:	ldr	lr, [pc, #4]	; 14ed4 <gtk_expander_get_expanded@plt-0x4>
   14ecc:	add	lr, pc, lr
   14ed0:	ldr	pc, [lr, #8]!
   14ed4:	andeq	ip, r2, ip, lsr #2

00014ed8 <gtk_expander_get_expanded@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #44, 20	; 0x2c000
   14ee0:	ldr	pc, [ip, #300]!	; 0x12c

00014ee4 <g_string_set_size@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #44, 20	; 0x2c000
   14eec:	ldr	pc, [ip, #292]!	; 0x124

00014ef0 <g_object_new@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #44, 20	; 0x2c000
   14ef8:	ldr	pc, [ip, #284]!	; 0x11c

00014efc <dbus_g_proxy_new_for_name_owner@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #44, 20	; 0x2c000
   14f04:	ldr	pc, [ip, #276]!	; 0x114

00014f08 <g_malloc_n@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #44, 20	; 0x2c000
   14f10:	ldr	pc, [ip, #268]!	; 0x10c

00014f14 <g_object_ref@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #44, 20	; 0x2c000
   14f1c:	ldr	pc, [ip, #260]!	; 0x104

00014f20 <gtk_tree_view_append_column@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #44, 20	; 0x2c000
   14f28:	ldr	pc, [ip, #252]!	; 0xfc

00014f2c <g_settings_get_boolean@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #44, 20	; 0x2c000
   14f34:	ldr	pc, [ip, #244]!	; 0xf4

00014f38 <gtk_window_set_type_hint@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #44, 20	; 0x2c000
   14f40:	ldr	pc, [ip, #236]!	; 0xec

00014f44 <gtk_dialog_get_action_area@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #44, 20	; 0x2c000
   14f4c:	ldr	pc, [ip, #228]!	; 0xe4

00014f50 <g_option_context_parse@plt>:
   14f50:	add	ip, pc, #0, 12
   14f54:	add	ip, ip, #44, 20	; 0x2c000
   14f58:	ldr	pc, [ip, #220]!	; 0xdc

00014f5c <g_option_context_add_group@plt>:
   14f5c:	add	ip, pc, #0, 12
   14f60:	add	ip, ip, #44, 20	; 0x2c000
   14f64:	ldr	pc, [ip, #212]!	; 0xd4

00014f68 <g_main_loop_is_running@plt>:
   14f68:	add	ip, pc, #0, 12
   14f6c:	add	ip, ip, #44, 20	; 0x2c000
   14f70:	ldr	pc, [ip, #204]!	; 0xcc

00014f74 <notify_notification_set_hint_string@plt>:
   14f74:	add	ip, pc, #0, 12
   14f78:	add	ip, ip, #44, 20	; 0x2c000
   14f7c:	ldr	pc, [ip, #196]!	; 0xc4

00014f80 <pk_results_get_package_array@plt>:
   14f80:	add	ip, pc, #0, 12
   14f84:	add	ip, ip, #44, 20	; 0x2c000
   14f88:	ldr	pc, [ip, #188]!	; 0xbc

00014f8c <g_settings_new@plt>:
   14f8c:	add	ip, pc, #0, 12
   14f90:	add	ip, ip, #44, 20	; 0x2c000
   14f94:	ldr	pc, [ip, #180]!	; 0xb4

00014f98 <gdk_x11_window_get_xid@plt>:
   14f98:	add	ip, pc, #0, 12
   14f9c:	add	ip, ip, #44, 20	; 0x2c000
   14fa0:	ldr	pc, [ip, #172]!	; 0xac

00014fa4 <gtk_message_dialog_format_secondary_text@plt>:
   14fa4:	add	ip, pc, #0, 12
   14fa8:	add	ip, ip, #44, 20	; 0x2c000
   14fac:	ldr	pc, [ip, #164]!	; 0xa4

00014fb0 <pk_task_install_files_async@plt>:
   14fb0:	add	ip, pc, #0, 12
   14fb4:	add	ip, ip, #44, 20	; 0x2c000
   14fb8:	ldr	pc, [ip, #156]!	; 0x9c

00014fbc <notify_notification_new@plt>:
   14fbc:	add	ip, pc, #0, 12
   14fc0:	add	ip, ip, #44, 20	; 0x2c000
   14fc4:	ldr	pc, [ip, #148]!	; 0x94

00014fc8 <pk_results_get_media_change_required_array@plt>:
   14fc8:	add	ip, pc, #0, 12
   14fcc:	add	ip, ip, #44, 20	; 0x2c000
   14fd0:	ldr	pc, [ip, #140]!	; 0x8c

00014fd4 <g_return_if_fail_warning@plt>:
   14fd4:	add	ip, pc, #0, 12
   14fd8:	add	ip, ip, #44, 20	; 0x2c000
   14fdc:	ldr	pc, [ip, #132]!	; 0x84

00014fe0 <g_type_register_static_simple@plt>:
   14fe0:	add	ip, pc, #0, 12
   14fe4:	add	ip, ip, #44, 20	; 0x2c000
   14fe8:	ldr	pc, [ip, #124]!	; 0x7c

00014fec <gtk_container_add_with_properties@plt>:
   14fec:	add	ip, pc, #0, 12
   14ff0:	add	ip, ip, #44, 20	; 0x2c000
   14ff4:	ldr	pc, [ip, #116]!	; 0x74

00014ff8 <gdk_error_trap_pop@plt>:
   14ff8:	add	ip, pc, #0, 12
   14ffc:	add	ip, ip, #44, 20	; 0x2c000
   15000:	ldr	pc, [ip, #108]!	; 0x6c

00015004 <gtk_list_store_set@plt>:
   15004:	add	ip, pc, #0, 12
   15008:	add	ip, ip, #44, 20	; 0x2c000
   1500c:	ldr	pc, [ip, #100]!	; 0x64

00015010 <pk_package_get_id@plt>:
   15010:	add	ip, pc, #0, 12
   15014:	add	ip, ip, #44, 20	; 0x2c000
   15018:	ldr	pc, [ip, #92]!	; 0x5c

0001501c <gtk_dialog_add_button@plt>:
   1501c:	add	ip, pc, #0, 12
   15020:	add	ip, ip, #44, 20	; 0x2c000
   15024:	ldr	pc, [ip, #84]!	; 0x54

00015028 <g_type_class_adjust_private_offset@plt>:
   15028:	add	ip, pc, #0, 12
   1502c:	add	ip, ip, #44, 20	; 0x2c000
   15030:	ldr	pc, [ip, #76]!	; 0x4c

00015034 <g_timeout_add@plt>:
   15034:	add	ip, pc, #0, 12
   15038:	add	ip, ip, #44, 20	; 0x2c000
   1503c:	ldr	pc, [ip, #68]!	; 0x44

00015040 <gtk_tree_view_column_pack_start@plt>:
   15040:	add	ip, pc, #0, 12
   15044:	add	ip, ip, #44, 20	; 0x2c000
   15048:	ldr	pc, [ip, #60]!	; 0x3c

0001504c <pk_package_ids_from_id@plt>:
   1504c:	add	ip, pc, #0, 12
   15050:	add	ip, ip, #44, 20	; 0x2c000
   15054:	ldr	pc, [ip, #52]!	; 0x34

00015058 <g_format_size@plt>:
   15058:	add	ip, pc, #0, 12
   1505c:	add	ip, ip, #44, 20	; 0x2c000
   15060:	ldr	pc, [ip, #44]!	; 0x2c

00015064 <g_error_free@plt>:
   15064:	add	ip, pc, #0, 12
   15068:	add	ip, ip, #44, 20	; 0x2c000
   1506c:	ldr	pc, [ip, #36]!	; 0x24

00015070 <strtol@plt>:
   15070:	add	ip, pc, #0, 12
   15074:	add	ip, ip, #44, 20	; 0x2c000
   15078:	ldr	pc, [ip, #28]!

0001507c <XGetWindowProperty@plt>:
   1507c:	add	ip, pc, #0, 12
   15080:	add	ip, ip, #44, 20	; 0x2c000
   15084:	ldr	pc, [ip, #20]!

00015088 <pk_package_sack_get_details@plt>:
   15088:	add	ip, pc, #0, 12
   1508c:	add	ip, ip, #44, 20	; 0x2c000
   15090:	ldr	pc, [ip, #12]!

00015094 <g_key_file_load_from_file@plt>:
   15094:	add	ip, pc, #0, 12
   15098:	add	ip, ip, #44, 20	; 0x2c000
   1509c:	ldr	pc, [ip, #4]!

000150a0 <bind_textdomain_codeset@plt>:
   150a0:	add	ip, pc, #0, 12
   150a4:	add	ip, ip, #176128	; 0x2b000
   150a8:	ldr	pc, [ip, #4092]!	; 0xffc

000150ac <pk_client_what_provides_async@plt>:
   150ac:	add	ip, pc, #0, 12
   150b0:	add	ip, ip, #176128	; 0x2b000
   150b4:	ldr	pc, [ip, #4084]!	; 0xff4

000150b8 <gtk_label_get_type@plt>:
   150b8:	add	ip, pc, #0, 12
   150bc:	add	ip, ip, #176128	; 0x2b000
   150c0:	ldr	pc, [ip, #4076]!	; 0xfec

000150c4 <gtk_label_set_label@plt>:
   150c4:	add	ip, pc, #0, 12
   150c8:	add	ip, ip, #176128	; 0x2b000
   150cc:	ldr	pc, [ip, #4068]!	; 0xfe4

000150d0 <gtk_get_option_group@plt>:
   150d0:	add	ip, pc, #0, 12
   150d4:	add	ip, ip, #176128	; 0x2b000
   150d8:	ldr	pc, [ip, #4060]!	; 0xfdc

000150dc <g_timer_elapsed@plt>:
   150dc:	add	ip, pc, #0, 12
   150e0:	add	ip, ip, #176128	; 0x2b000
   150e4:	ldr	pc, [ip, #4052]!	; 0xfd4

000150e8 <g_log_set_handler@plt>:
   150e8:	add	ip, pc, #0, 12
   150ec:	add	ip, ip, #176128	; 0x2b000
   150f0:	ldr	pc, [ip, #4044]!	; 0xfcc

000150f4 <gtk_widget_get_type@plt>:
   150f4:	add	ip, pc, #0, 12
   150f8:	add	ip, ip, #176128	; 0x2b000
   150fc:	ldr	pc, [ip, #4036]!	; 0xfc4

00015100 <g_string_new@plt>:
   15100:	add	ip, pc, #0, 12
   15104:	add	ip, ip, #176128	; 0x2b000
   15108:	ldr	pc, [ip, #4028]!	; 0xfbc

0001510c <g_str_equal@plt>:
   1510c:	add	ip, pc, #0, 12
   15110:	add	ip, ip, #176128	; 0x2b000
   15114:	ldr	pc, [ip, #4020]!	; 0xfb4

00015118 <gtk_tree_view_set_model@plt>:
   15118:	add	ip, pc, #0, 12
   1511c:	add	ip, ip, #176128	; 0x2b000
   15120:	ldr	pc, [ip, #4012]!	; 0xfac

00015124 <pk_package_id_split@plt>:
   15124:	add	ip, pc, #0, 12
   15128:	add	ip, ip, #176128	; 0x2b000
   1512c:	ldr	pc, [ip, #4004]!	; 0xfa4

00015130 <gtk_text_buffer_delete_mark@plt>:
   15130:	add	ip, pc, #0, 12
   15134:	add	ip, ip, #176128	; 0x2b000
   15138:	ldr	pc, [ip, #3996]!	; 0xf9c

0001513c <g_timer_destroy@plt>:
   1513c:	add	ip, pc, #0, 12
   15140:	add	ip, ip, #176128	; 0x2b000
   15144:	ldr	pc, [ip, #3988]!	; 0xf94

00015148 <g_type_check_instance_cast@plt>:
   15148:	add	ip, pc, #0, 12
   1514c:	add	ip, ip, #176128	; 0x2b000
   15150:	ldr	pc, [ip, #3980]!	; 0xf8c

00015154 <gtk_tree_view_column_new_with_attributes@plt>:
   15154:	add	ip, pc, #0, 12
   15158:	add	ip, ip, #176128	; 0x2b000
   1515c:	ldr	pc, [ip, #3972]!	; 0xf84

00015160 <gtk_tree_view_columns_autosize@plt>:
   15160:	add	ip, pc, #0, 12
   15164:	add	ip, ip, #176128	; 0x2b000
   15168:	ldr	pc, [ip, #3964]!	; 0xf7c

0001516c <gtk_text_view_get_type@plt>:
   1516c:	add	ip, pc, #0, 12
   15170:	add	ip, ip, #176128	; 0x2b000
   15174:	ldr	pc, [ip, #3956]!	; 0xf74

00015178 <g_option_context_new@plt>:
   15178:	add	ip, pc, #0, 12
   1517c:	add	ip, ip, #176128	; 0x2b000
   15180:	ldr	pc, [ip, #3948]!	; 0xf6c

00015184 <dbus_g_proxy_new_for_name@plt>:
   15184:	add	ip, pc, #0, 12
   15188:	add	ip, ip, #176128	; 0x2b000
   1518c:	ldr	pc, [ip, #3940]!	; 0xf64

00015190 <gtk_widget_get_window@plt>:
   15190:	add	ip, pc, #0, 12
   15194:	add	ip, ip, #176128	; 0x2b000
   15198:	ldr	pc, [ip, #3932]!	; 0xf5c

0001519c <gtk_widget_hide@plt>:
   1519c:	add	ip, pc, #0, 12
   151a0:	add	ip, ip, #176128	; 0x2b000
   151a4:	ldr	pc, [ip, #3924]!	; 0xf54

000151a8 <g_option_group_new@plt>:
   151a8:	add	ip, pc, #0, 12
   151ac:	add	ip, ip, #176128	; 0x2b000
   151b0:	ldr	pc, [ip, #3916]!	; 0xf4c

000151b4 <pk_client_search_files@plt>:
   151b4:	add	ip, pc, #0, 12
   151b8:	add	ip, ip, #176128	; 0x2b000
   151bc:	ldr	pc, [ip, #3908]!	; 0xf44

000151c0 <pk_control_get_properties@plt>:
   151c0:	add	ip, pc, #0, 12
   151c4:	add	ip, ip, #176128	; 0x2b000
   151c8:	ldr	pc, [ip, #3900]!	; 0xf3c

000151cc <pk_role_enum_to_string@plt>:
   151cc:	add	ip, pc, #0, 12
   151d0:	add	ip, ip, #176128	; 0x2b000
   151d4:	ldr	pc, [ip, #3892]!	; 0xf34

000151d8 <g_file_read_link@plt>:
   151d8:	add	ip, pc, #0, 12
   151dc:	add	ip, ip, #176128	; 0x2b000
   151e0:	ldr	pc, [ip, #3884]!	; 0xf2c

000151e4 <gtk_widget_realize@plt>:
   151e4:	add	ip, pc, #0, 12
   151e8:	add	ip, ip, #176128	; 0x2b000
   151ec:	ldr	pc, [ip, #3876]!	; 0xf24

000151f0 <g_log@plt>:
   151f0:	add	ip, pc, #0, 12
   151f4:	add	ip, ip, #176128	; 0x2b000
   151f8:	ldr	pc, [ip, #3868]!	; 0xf1c

000151fc <gtk_progress_bar_set_pulse_step@plt>:
   151fc:	add	ip, pc, #0, 12
   15200:	add	ip, ip, #176128	; 0x2b000
   15204:	ldr	pc, [ip, #3860]!	; 0xf14

00015208 <g_option_context_set_summary@plt>:
   15208:	add	ip, pc, #0, 12
   1520c:	add	ip, ip, #176128	; 0x2b000
   15210:	ldr	pc, [ip, #3852]!	; 0xf0c

00015214 <g_main_loop_quit@plt>:
   15214:	add	ip, pc, #0, 12
   15218:	add	ip, ip, #176128	; 0x2b000
   1521c:	ldr	pc, [ip, #3844]!	; 0xf04

00015220 <g_cancellable_cancel@plt>:
   15220:	add	ip, pc, #0, 12
   15224:	add	ip, ip, #176128	; 0x2b000
   15228:	ldr	pc, [ip, #3836]!	; 0xefc

0001522c <pk_status_enum_to_string@plt>:
   1522c:	add	ip, pc, #0, 12
   15230:	add	ip, ip, #176128	; 0x2b000
   15234:	ldr	pc, [ip, #3828]!	; 0xef4

00015238 <gtk_expander_get_type@plt>:
   15238:	add	ip, pc, #0, 12
   1523c:	add	ip, ip, #176128	; 0x2b000
   15240:	ldr	pc, [ip, #3820]!	; 0xeec

00015244 <pk_results_get_error_code@plt>:
   15244:	add	ip, pc, #0, 12
   15248:	add	ip, ip, #176128	; 0x2b000
   1524c:	ldr	pc, [ip, #3812]!	; 0xee4

00015250 <g_path_get_basename@plt>:
   15250:	add	ip, pc, #0, 12
   15254:	add	ip, ip, #176128	; 0x2b000
   15258:	ldr	pc, [ip, #3804]!	; 0xedc

0001525c <gtk_text_buffer_insert@plt>:
   1525c:	add	ip, pc, #0, 12
   15260:	add	ip, ip, #176128	; 0x2b000
   15264:	ldr	pc, [ip, #3796]!	; 0xed4

00015268 <gtk_toggle_button_get_type@plt>:
   15268:	add	ip, pc, #0, 12
   1526c:	add	ip, ip, #176128	; 0x2b000
   15270:	ldr	pc, [ip, #3788]!	; 0xecc

00015274 <gtk_box_new@plt>:
   15274:	add	ip, pc, #0, 12
   15278:	add	ip, ip, #176128	; 0x2b000
   1527c:	ldr	pc, [ip, #3780]!	; 0xec4

00015280 <g_build_filename@plt>:
   15280:	add	ip, pc, #0, 12
   15284:	add	ip, ip, #176128	; 0x2b000
   15288:	ldr	pc, [ip, #3772]!	; 0xebc

0001528c <dbus_g_method_get_sender@plt>:
   1528c:	add	ip, pc, #0, 12
   15290:	add	ip, ip, #176128	; 0x2b000
   15294:	ldr	pc, [ip, #3764]!	; 0xeb4

00015298 <pk_client_get_type@plt>:
   15298:	add	ip, pc, #0, 12
   1529c:	add	ip, ip, #176128	; 0x2b000
   152a0:	ldr	pc, [ip, #3756]!	; 0xeac

000152a4 <dbus_g_method_return_error@plt>:
   152a4:	add	ip, pc, #0, 12
   152a8:	add	ip, ip, #176128	; 0x2b000
   152ac:	ldr	pc, [ip, #3748]!	; 0xea4

000152b0 <gtk_widget_set_tooltip_text@plt>:
   152b0:	add	ip, pc, #0, 12
   152b4:	add	ip, ip, #176128	; 0x2b000
   152b8:	ldr	pc, [ip, #3740]!	; 0xe9c

000152bc <gtk_window_set_icon_name@plt>:
   152bc:	add	ip, pc, #0, 12
   152c0:	add	ip, ip, #176128	; 0x2b000
   152c4:	ldr	pc, [ip, #3732]!	; 0xe94

000152c8 <g_set_error_literal@plt>:
   152c8:	add	ip, pc, #0, 12
   152cc:	add	ip, ip, #176128	; 0x2b000
   152d0:	ldr	pc, [ip, #3724]!	; 0xe8c

000152d4 <pk_error_get_details@plt>:
   152d4:	add	ip, pc, #0, 12
   152d8:	add	ip, ip, #176128	; 0x2b000
   152dc:	ldr	pc, [ip, #3716]!	; 0xe84

000152e0 <gtk_tree_selection_set_mode@plt>:
   152e0:	add	ip, pc, #0, 12
   152e4:	add	ip, ip, #176128	; 0x2b000
   152e8:	ldr	pc, [ip, #3708]!	; 0xe7c

000152ec <pk_error_get_code@plt>:
   152ec:	add	ip, pc, #0, 12
   152f0:	add	ip, ip, #176128	; 0x2b000
   152f4:	ldr	pc, [ip, #3700]!	; 0xe74

000152f8 <gtk_button_new_with_mnemonic@plt>:
   152f8:	add	ip, pc, #0, 12
   152fc:	add	ip, ip, #176128	; 0x2b000
   15300:	ldr	pc, [ip, #3692]!	; 0xe6c

00015304 <notify_is_initted@plt>:
   15304:	add	ip, pc, #0, 12
   15308:	add	ip, ip, #176128	; 0x2b000
   1530c:	ldr	pc, [ip, #3684]!	; 0xe64

00015310 <dbus_g_proxy_call@plt>:
   15310:	add	ip, pc, #0, 12
   15314:	add	ip, ip, #176128	; 0x2b000
   15318:	ldr	pc, [ip, #3676]!	; 0xe5c

0001531c <gtk_widget_get_style_context@plt>:
   1531c:	add	ip, pc, #0, 12
   15320:	add	ip, ip, #176128	; 0x2b000
   15324:	ldr	pc, [ip, #3668]!	; 0xe54

00015328 <gtk_tree_view_get_model@plt>:
   15328:	add	ip, pc, #0, 12
   1532c:	add	ip, ip, #176128	; 0x2b000
   15330:	ldr	pc, [ip, #3660]!	; 0xe4c

00015334 <textdomain@plt>:
   15334:	add	ip, pc, #0, 12
   15338:	add	ip, ip, #176128	; 0x2b000
   1533c:	ldr	pc, [ip, #3652]!	; 0xe44

00015340 <gdk_pixbuf_new_subpixbuf@plt>:
   15340:	add	ip, pc, #0, 12
   15344:	add	ip, ip, #176128	; 0x2b000
   15348:	ldr	pc, [ip, #3644]!	; 0xe3c

0001534c <gtk_text_buffer_get_type@plt>:
   1534c:	add	ip, pc, #0, 12
   15350:	add	ip, ip, #176128	; 0x2b000
   15354:	ldr	pc, [ip, #3636]!	; 0xe34

00015358 <gtk_tree_view_column_set_sort_column_id@plt>:
   15358:	add	ip, pc, #0, 12
   1535c:	add	ip, ip, #176128	; 0x2b000
   15360:	ldr	pc, [ip, #3628]!	; 0xe2c

00015364 <g_option_group_set_parse_hooks@plt>:
   15364:	add	ip, pc, #0, 12
   15368:	add	ip, ip, #176128	; 0x2b000
   1536c:	ldr	pc, [ip, #3620]!	; 0xe24

00015370 <g_hash_table_new_full@plt>:
   15370:	add	ip, pc, #0, 12
   15374:	add	ip, ip, #176128	; 0x2b000
   15378:	ldr	pc, [ip, #3612]!	; 0xe1c

0001537c <pango_attr_list_unref@plt>:
   1537c:	add	ip, pc, #0, 12
   15380:	add	ip, ip, #176128	; 0x2b000
   15384:	ldr	pc, [ip, #3604]!	; 0xe14

00015388 <pk_package_sack_filter_by_info@plt>:
   15388:	add	ip, pc, #0, 12
   1538c:	add	ip, ip, #176128	; 0x2b000
   15390:	ldr	pc, [ip, #3596]!	; 0xe0c

00015394 <g_signal_emit@plt>:
   15394:	add	ip, pc, #0, 12
   15398:	add	ip, ip, #176128	; 0x2b000
   1539c:	ldr	pc, [ip, #3588]!	; 0xe04

000153a0 <g_strdup@plt>:
   153a0:	add	ip, pc, #0, 12
   153a4:	add	ip, ip, #176128	; 0x2b000
   153a8:	ldr	pc, [ip, #3580]!	; 0xdfc

000153ac <pk_control_new@plt>:
   153ac:	add	ip, pc, #0, 12
   153b0:	add	ip, ip, #176128	; 0x2b000
   153b4:	ldr	pc, [ip, #3572]!	; 0xdf4

000153b8 <dbus_g_bus_get@plt>:
   153b8:	add	ip, pc, #0, 12
   153bc:	add	ip, ip, #176128	; 0x2b000
   153c0:	ldr	pc, [ip, #3564]!	; 0xdec

000153c4 <strftime@plt>:
   153c4:	add	ip, pc, #0, 12
   153c8:	add	ip, ip, #176128	; 0x2b000
   153cc:	ldr	pc, [ip, #3556]!	; 0xde4

000153d0 <g_hash_table_insert@plt>:
   153d0:	add	ip, pc, #0, 12
   153d4:	add	ip, ip, #176128	; 0x2b000
   153d8:	ldr	pc, [ip, #3548]!	; 0xddc

000153dc <memset@plt>:
   153dc:	add	ip, pc, #0, 12
   153e0:	add	ip, ip, #176128	; 0x2b000
   153e4:	ldr	pc, [ip, #3540]!	; 0xdd4

000153e8 <pk_package_sack_get_total_bytes@plt>:
   153e8:	add	ip, pc, #0, 12
   153ec:	add	ip, ip, #176128	; 0x2b000
   153f0:	ldr	pc, [ip, #3532]!	; 0xdcc

000153f4 <gdk_error_trap_push@plt>:
   153f4:	add	ip, pc, #0, 12
   153f8:	add	ip, ip, #176128	; 0x2b000
   153fc:	ldr	pc, [ip, #3524]!	; 0xdc4

00015400 <dbus_g_object_type_install_info@plt>:
   15400:	add	ip, pc, #0, 12
   15404:	add	ip, ip, #176128	; 0x2b000
   15408:	ldr	pc, [ip, #3516]!	; 0xdbc

0001540c <gtk_container_get_type@plt>:
   1540c:	add	ip, pc, #0, 12
   15410:	add	ip, ip, #176128	; 0x2b000
   15414:	ldr	pc, [ip, #3508]!	; 0xdb4

00015418 <gtk_builder_get_object@plt>:
   15418:	add	ip, pc, #0, 12
   1541c:	add	ip, ip, #176128	; 0x2b000
   15420:	ldr	pc, [ip, #3500]!	; 0xdac

00015424 <pk_task_user_declined@plt>:
   15424:	add	ip, pc, #0, 12
   15428:	add	ip, ip, #176128	; 0x2b000
   1542c:	ldr	pc, [ip, #3492]!	; 0xda4

00015430 <gtk_text_buffer_get_iter_at_mark@plt>:
   15430:	add	ip, pc, #0, 12
   15434:	add	ip, ip, #176128	; 0x2b000
   15438:	ldr	pc, [ip, #3484]!	; 0xd9c

0001543c <gtk_scrolled_window_set_overlay_scrolling@plt>:
   1543c:	add	ip, pc, #0, 12
   15440:	add	ip, ip, #176128	; 0x2b000
   15444:	ldr	pc, [ip, #3476]!	; 0xd94

00015448 <gtk_container_set_border_width@plt>:
   15448:	add	ip, pc, #0, 12
   1544c:	add	ip, ip, #176128	; 0x2b000
   15450:	ldr	pc, [ip, #3468]!	; 0xd8c

00015454 <pk_client_generic_finish@plt>:
   15454:	add	ip, pc, #0, 12
   15458:	add	ip, ip, #176128	; 0x2b000
   1545c:	ldr	pc, [ip, #3460]!	; 0xd84

00015460 <gtk_progress_bar_set_fraction@plt>:
   15460:	add	ip, pc, #0, 12
   15464:	add	ip, ip, #176128	; 0x2b000
   15468:	ldr	pc, [ip, #3452]!	; 0xd7c

0001546c <pk_task_user_accepted@plt>:
   1546c:	add	ip, pc, #0, 12
   15470:	add	ip, ip, #176128	; 0x2b000
   15474:	ldr	pc, [ip, #3444]!	; 0xd74

00015478 <g_ptr_array_new_with_free_func@plt>:
   15478:	add	ip, pc, #0, 12
   1547c:	add	ip, ip, #176128	; 0x2b000
   15480:	ldr	pc, [ip, #3436]!	; 0xd6c

00015484 <gtk_image_set_from_pixbuf@plt>:
   15484:	add	ip, pc, #0, 12
   15488:	add	ip, ip, #176128	; 0x2b000
   1548c:	ldr	pc, [ip, #3428]!	; 0xd64

00015490 <g_strdup_printf@plt>:
   15490:	add	ip, pc, #0, 12
   15494:	add	ip, ip, #176128	; 0x2b000
   15498:	ldr	pc, [ip, #3420]!	; 0xd5c

0001549c <gtk_show_uri@plt>:
   1549c:	add	ip, pc, #0, 12
   154a0:	add	ip, ip, #176128	; 0x2b000
   154a4:	ldr	pc, [ip, #3412]!	; 0xd54

000154a8 <dcngettext@plt>:
   154a8:	add	ip, pc, #0, 12
   154ac:	add	ip, ip, #176128	; 0x2b000
   154b0:	ldr	pc, [ip, #3404]!	; 0xd4c

000154b4 <gtk_icon_theme_append_search_path@plt>:
   154b4:	add	ip, pc, #0, 12
   154b8:	add	ip, ip, #176128	; 0x2b000
   154bc:	ldr	pc, [ip, #3396]!	; 0xd44

000154c0 <g_main_loop_run@plt>:
   154c0:	add	ip, pc, #0, 12
   154c4:	add	ip, ip, #176128	; 0x2b000
   154c8:	ldr	pc, [ip, #3388]!	; 0xd3c

000154cc <pk_error_enum_to_string@plt>:
   154cc:	add	ip, pc, #0, 12
   154d0:	add	ip, ip, #176128	; 0x2b000
   154d4:	ldr	pc, [ip, #3380]!	; 0xd34

000154d8 <gtk_icon_theme_load_icon@plt>:
   154d8:	add	ip, pc, #0, 12
   154dc:	add	ip, ip, #176128	; 0x2b000
   154e0:	ldr	pc, [ip, #3372]!	; 0xd2c

000154e4 <g_signal_new@plt>:
   154e4:	add	ip, pc, #0, 12
   154e8:	add	ip, ip, #176128	; 0x2b000
   154ec:	ldr	pc, [ip, #3364]!	; 0xd24

000154f0 <gtk_scrolled_window_new@plt>:
   154f0:	add	ip, pc, #0, 12
   154f4:	add	ip, ip, #176128	; 0x2b000
   154f8:	ldr	pc, [ip, #3356]!	; 0xd1c

000154fc <g_main_loop_new@plt>:
   154fc:	add	ip, pc, #0, 12
   15500:	add	ip, ip, #176128	; 0x2b000
   15504:	ldr	pc, [ip, #3348]!	; 0xd14

00015508 <g_markup_parse_context_parse@plt>:
   15508:	add	ip, pc, #0, 12
   1550c:	add	ip, ip, #176128	; 0x2b000
   15510:	ldr	pc, [ip, #3340]!	; 0xd0c

00015514 <abort@plt>:
   15514:	add	ip, pc, #0, 12
   15518:	add	ip, ip, #176128	; 0x2b000
   1551c:	ldr	pc, [ip, #3332]!	; 0xd04

00015520 <gdk_pixbuf_get_height@plt>:
   15520:	add	ip, pc, #0, 12
   15524:	add	ip, ip, #176128	; 0x2b000
   15528:	ldr	pc, [ip, #3324]!	; 0xcfc

0001552c <dbus_g_error_domain_register@plt>:
   1552c:	add	ip, pc, #0, 12
   15530:	add	ip, ip, #176128	; 0x2b000
   15534:	ldr	pc, [ip, #3316]!	; 0xcf4

00015538 <gtk_text_view_new@plt>:
   15538:	add	ip, pc, #0, 12
   1553c:	add	ip, ip, #176128	; 0x2b000
   15540:	ldr	pc, [ip, #3308]!	; 0xcec

00015544 <gtk_label_new@plt>:
   15544:	add	ip, pc, #0, 12
   15548:	add	ip, ip, #176128	; 0x2b000
   1554c:	ldr	pc, [ip, #3300]!	; 0xce4

00015550 <notify_notification_set_urgency@plt>:
   15550:	add	ip, pc, #0, 12
   15554:	add	ip, ip, #176128	; 0x2b000
   15558:	ldr	pc, [ip, #3292]!	; 0xcdc

0001555c <g_strsplit@plt>:
   1555c:	add	ip, pc, #0, 12
   15560:	add	ip, ip, #176128	; 0x2b000
   15564:	ldr	pc, [ip, #3284]!	; 0xcd4

00015568 <g_error_new@plt>:
   15568:	add	ip, pc, #0, 12
   1556c:	add	ip, ip, #176128	; 0x2b000
   15570:	ldr	pc, [ip, #3276]!	; 0xccc

00015574 <gtk_cell_renderer_text_new@plt>:
   15574:	add	ip, pc, #0, 12
   15578:	add	ip, ip, #176128	; 0x2b000
   1557c:	ldr	pc, [ip, #3268]!	; 0xcc4

00015580 <pk_task_get_type@plt>:
   15580:	add	ip, pc, #0, 12
   15584:	add	ip, ip, #176128	; 0x2b000
   15588:	ldr	pc, [ip, #3260]!	; 0xcbc

0001558c <pk_ptr_array_to_strv@plt>:
   1558c:	add	ip, pc, #0, 12
   15590:	add	ip, ip, #176128	; 0x2b000
   15594:	ldr	pc, [ip, #3252]!	; 0xcb4

00015598 <gtk_window_set_title@plt>:
   15598:	add	ip, pc, #0, 12
   1559c:	add	ip, ip, #176128	; 0x2b000
   155a0:	ldr	pc, [ip, #3244]!	; 0xcac

000155a4 <gdk_x11_get_xatom_by_name_for_display@plt>:
   155a4:	add	ip, pc, #0, 12
   155a8:	add	ip, ip, #176128	; 0x2b000
   155ac:	ldr	pc, [ip, #3236]!	; 0xca4

000155b0 <gdk_pixbuf_get_width@plt>:
   155b0:	add	ip, pc, #0, 12
   155b4:	add	ip, ip, #176128	; 0x2b000
   155b8:	ldr	pc, [ip, #3228]!	; 0xc9c

000155bc <gtk_widget_set_size_request@plt>:
   155bc:	add	ip, pc, #0, 12
   155c0:	add	ip, ip, #176128	; 0x2b000
   155c4:	ldr	pc, [ip, #3220]!	; 0xc94

000155c8 <gtk_container_add@plt>:
   155c8:	add	ip, pc, #0, 12
   155cc:	add	ip, ip, #176128	; 0x2b000
   155d0:	ldr	pc, [ip, #3212]!	; 0xc8c

000155d4 <gdk_display_get_default@plt>:
   155d4:	add	ip, pc, #0, 12
   155d8:	add	ip, ip, #176128	; 0x2b000
   155dc:	ldr	pc, [ip, #3204]!	; 0xc84

000155e0 <gtk_text_view_set_buffer@plt>:
   155e0:	add	ip, pc, #0, 12
   155e4:	add	ip, ip, #176128	; 0x2b000
   155e8:	ldr	pc, [ip, #3196]!	; 0xc7c

000155ec <gtk_window_set_default_size@plt>:
   155ec:	add	ip, pc, #0, 12
   155f0:	add	ip, ip, #176128	; 0x2b000
   155f4:	ldr	pc, [ip, #3188]!	; 0xc74

000155f8 <g_type_instance_get_private@plt>:
   155f8:	add	ip, pc, #0, 12
   155fc:	add	ip, ip, #176128	; 0x2b000
   15600:	ldr	pc, [ip, #3180]!	; 0xc6c

00015604 <g_strjoin@plt>:
   15604:	add	ip, pc, #0, 12
   15608:	add	ip, ip, #176128	; 0x2b000
   1560c:	ldr	pc, [ip, #3172]!	; 0xc64

00015610 <gtk_tree_view_column_new@plt>:
   15610:	add	ip, pc, #0, 12
   15614:	add	ip, ip, #176128	; 0x2b000
   15618:	ldr	pc, [ip, #3164]!	; 0xc5c

0001561c <g_str_has_prefix@plt>:
   1561c:	add	ip, pc, #0, 12
   15620:	add	ip, ip, #176128	; 0x2b000
   15624:	ldr	pc, [ip, #3156]!	; 0xc54

00015628 <pk_package_sack_get_array@plt>:
   15628:	add	ip, pc, #0, 12
   1562c:	add	ip, ip, #176128	; 0x2b000
   15630:	ldr	pc, [ip, #3148]!	; 0xc4c

00015634 <pk_client_search_files_async@plt>:
   15634:	add	ip, pc, #0, 12
   15638:	add	ip, ip, #176128	; 0x2b000
   1563c:	ldr	pc, [ip, #3140]!	; 0xc44

00015640 <localtime@plt>:
   15640:	add	ip, pc, #0, 12
   15644:	add	ip, ip, #176128	; 0x2b000
   15648:	ldr	pc, [ip, #3132]!	; 0xc3c

0001564c <gtk_scrolled_window_set_policy@plt>:
   1564c:	add	ip, pc, #0, 12
   15650:	add	ip, ip, #176128	; 0x2b000
   15654:	ldr	pc, [ip, #3124]!	; 0xc34

00015658 <g_cancellable_new@plt>:
   15658:	add	ip, pc, #0, 12
   1565c:	add	ip, ip, #176128	; 0x2b000
   15660:	ldr	pc, [ip, #3116]!	; 0xc2c

00015664 <gtk_box_get_type@plt>:
   15664:	add	ip, pc, #0, 12
   15668:	add	ip, ip, #176128	; 0x2b000
   1566c:	ldr	pc, [ip, #3108]!	; 0xc24

00015670 <g_signal_connect_data@plt>:
   15670:	add	ip, pc, #0, 12
   15674:	add	ip, ip, #176128	; 0x2b000
   15678:	ldr	pc, [ip, #3100]!	; 0xc1c

0001567c <g_once_init_enter@plt>:
   1567c:	add	ip, pc, #0, 12
   15680:	add	ip, ip, #176128	; 0x2b000
   15684:	ldr	pc, [ip, #3092]!	; 0xc14

00015688 <g_timer_reset@plt>:
   15688:	add	ip, pc, #0, 12
   1568c:	add	ip, ip, #176128	; 0x2b000
   15690:	ldr	pc, [ip, #3084]!	; 0xc0c

00015694 <pk_task_remove_packages_async@plt>:
   15694:	add	ip, pc, #0, 12
   15698:	add	ip, ip, #176128	; 0x2b000
   1569c:	ldr	pc, [ip, #3076]!	; 0xc04

000156a0 <gtk_notebook_append_page@plt>:
   156a0:	add	ip, pc, #0, 12
   156a4:	add	ip, ip, #176128	; 0x2b000
   156a8:	ldr	pc, [ip, #3068]!	; 0xbfc

000156ac <gtk_text_buffer_set_text@plt>:
   156ac:	add	ip, pc, #0, 12
   156b0:	add	ip, ip, #176128	; 0x2b000
   156b4:	ldr	pc, [ip, #3060]!	; 0xbf4

000156b8 <g_app_info_launch@plt>:
   156b8:	add	ip, pc, #0, 12
   156bc:	add	ip, ip, #176128	; 0x2b000
   156c0:	ldr	pc, [ip, #3052]!	; 0xbec

000156c4 <gtk_text_tag_table_lookup@plt>:
   156c4:	add	ip, pc, #0, 12
   156c8:	add	ip, ip, #176128	; 0x2b000
   156cc:	ldr	pc, [ip, #3044]!	; 0xbe4

000156d0 <dbus_g_method_return@plt>:
   156d0:	add	ip, pc, #0, 12
   156d4:	add	ip, ip, #176128	; 0x2b000
   156d8:	ldr	pc, [ip, #3036]!	; 0xbdc

000156dc <g_hash_table_lookup@plt>:
   156dc:	add	ip, pc, #0, 12
   156e0:	add	ip, ip, #176128	; 0x2b000
   156e4:	ldr	pc, [ip, #3028]!	; 0xbd4

000156e8 <gtk_widget_destroy@plt>:
   156e8:	add	ip, pc, #0, 12
   156ec:	add	ip, ip, #176128	; 0x2b000
   156f0:	ldr	pc, [ip, #3020]!	; 0xbcc

000156f4 <gdk_window_set_transient_for@plt>:
   156f4:	add	ip, pc, #0, 12
   156f8:	add	ip, ip, #176128	; 0x2b000
   156fc:	ldr	pc, [ip, #3012]!	; 0xbc4

00015700 <gtk_box_pack_start@plt>:
   15700:	add	ip, pc, #0, 12
   15704:	add	ip, ip, #176128	; 0x2b000
   15708:	ldr	pc, [ip, #3004]!	; 0xbbc

0001570c <dbus_g_connection_register_g_object@plt>:
   1570c:	add	ip, pc, #0, 12
   15710:	add	ip, ip, #176128	; 0x2b000
   15714:	ldr	pc, [ip, #2996]!	; 0xbb4

00015718 <pk_bitfield_from_enums@plt>:
   15718:	add	ip, pc, #0, 12
   1571c:	add	ip, ip, #176128	; 0x2b000
   15720:	ldr	pc, [ip, #2988]!	; 0xbac

00015724 <gtk_progress_bar_get_type@plt>:
   15724:	add	ip, pc, #0, 12
   15728:	add	ip, ip, #176128	; 0x2b000
   1572c:	ldr	pc, [ip, #2980]!	; 0xba4

00015730 <gtk_text_tag_table_add@plt>:
   15730:	add	ip, pc, #0, 12
   15734:	add	ip, ip, #176128	; 0x2b000
   15738:	ldr	pc, [ip, #2972]!	; 0xb9c

0001573c <gtk_text_tag_new@plt>:
   1573c:	add	ip, pc, #0, 12
   15740:	add	ip, ip, #176128	; 0x2b000
   15744:	ldr	pc, [ip, #2964]!	; 0xb94

00015748 <g_intern_static_string@plt>:
   15748:	add	ip, pc, #0, 12
   1574c:	add	ip, ip, #176128	; 0x2b000
   15750:	ldr	pc, [ip, #2956]!	; 0xb8c

00015754 <gtk_notebook_new@plt>:
   15754:	add	ip, pc, #0, 12
   15758:	add	ip, ip, #176128	; 0x2b000
   1575c:	ldr	pc, [ip, #2948]!	; 0xb84

00015760 <notify_notification_set_timeout@plt>:
   15760:	add	ip, pc, #0, 12
   15764:	add	ip, ip, #176128	; 0x2b000
   15768:	ldr	pc, [ip, #2940]!	; 0xb7c

0001576c <gtk_image_get_type@plt>:
   1576c:	add	ip, pc, #0, 12
   15770:	add	ip, ip, #176128	; 0x2b000
   15774:	ldr	pc, [ip, #2932]!	; 0xb74

00015778 <g_strstr_len@plt>:
   15778:	add	ip, pc, #0, 12
   1577c:	add	ip, ip, #176128	; 0x2b000
   15780:	ldr	pc, [ip, #2924]!	; 0xb6c

00015784 <g_file_get_contents@plt>:
   15784:	add	ip, pc, #0, 12
   15788:	add	ip, ip, #176128	; 0x2b000
   1578c:	ldr	pc, [ip, #2916]!	; 0xb64

00015790 <g_strfreev@plt>:
   15790:	add	ip, pc, #0, 12
   15794:	add	ip, ip, #176128	; 0x2b000
   15798:	ldr	pc, [ip, #2908]!	; 0xb5c

0001579c <g_app_info_get_type@plt>:
   1579c:	add	ip, pc, #0, 12
   157a0:	add	ip, ip, #176128	; 0x2b000
   157a4:	ldr	pc, [ip, #2900]!	; 0xb54

000157a8 <g_strv_length@plt>:
   157a8:	add	ip, pc, #0, 12
   157ac:	add	ip, ip, #176128	; 0x2b000
   157b0:	ldr	pc, [ip, #2892]!	; 0xb4c

000157b4 <notify_notification_add_action@plt>:
   157b4:	add	ip, pc, #0, 12
   157b8:	add	ip, ip, #176128	; 0x2b000
   157bc:	ldr	pc, [ip, #2884]!	; 0xb44

000157c0 <pango_attr_iterator_range@plt>:
   157c0:	add	ip, pc, #0, 12
   157c4:	add	ip, ip, #176128	; 0x2b000
   157c8:	ldr	pc, [ip, #2876]!	; 0xb3c

000157cc <g_option_context_free@plt>:
   157cc:	add	ip, pc, #0, 12
   157d0:	add	ip, ip, #176128	; 0x2b000
   157d4:	ldr	pc, [ip, #2868]!	; 0xb34

000157d8 <fileno@plt>:
   157d8:	add	ip, pc, #0, 12
   157dc:	add	ip, ip, #176128	; 0x2b000
   157e0:	ldr	pc, [ip, #2860]!	; 0xb2c

000157e4 <gtk_window_present_with_time@plt>:
   157e4:	add	ip, pc, #0, 12
   157e8:	add	ip, ip, #176128	; 0x2b000
   157ec:	ldr	pc, [ip, #2852]!	; 0xb24

000157f0 <__stack_chk_fail@plt>:
   157f0:	add	ip, pc, #0, 12
   157f4:	add	ip, ip, #176128	; 0x2b000
   157f8:	ldr	pc, [ip, #2844]!	; 0xb1c

000157fc <gdk_x11_window_foreign_new_for_display@plt>:
   157fc:	add	ip, pc, #0, 12
   15800:	add	ip, ip, #176128	; 0x2b000
   15804:	ldr	pc, [ip, #2836]!	; 0xb14

00015808 <gtk_tree_view_get_type@plt>:
   15808:	add	ip, pc, #0, 12
   1580c:	add	ip, ip, #176128	; 0x2b000
   15810:	ldr	pc, [ip, #2828]!	; 0xb0c

00015814 <gtk_list_store_new@plt>:
   15814:	add	ip, pc, #0, 12
   15818:	add	ip, ip, #176128	; 0x2b000
   1581c:	ldr	pc, [ip, #2820]!	; 0xb04

00015820 <gtk_progress_bar_pulse@plt>:
   15820:	add	ip, pc, #0, 12
   15824:	add	ip, ip, #176128	; 0x2b000
   15828:	ldr	pc, [ip, #2812]!	; 0xafc

0001582c <gtk_text_view_set_left_margin@plt>:
   1582c:	add	ip, pc, #0, 12
   15830:	add	ip, ip, #176128	; 0x2b000
   15834:	ldr	pc, [ip, #2804]!	; 0xaf4

00015838 <g_str_hash@plt>:
   15838:	add	ip, pc, #0, 12
   1583c:	add	ip, ip, #176128	; 0x2b000
   15840:	ldr	pc, [ip, #2796]!	; 0xaec

00015844 <g_markup_parse_context_new@plt>:
   15844:	add	ip, pc, #0, 12
   15848:	add	ip, ip, #176128	; 0x2b000
   1584c:	ldr	pc, [ip, #2788]!	; 0xae4

00015850 <isatty@plt>:
   15850:	add	ip, pc, #0, 12
   15854:	add	ip, ip, #176128	; 0x2b000
   15858:	ldr	pc, [ip, #2780]!	; 0xadc

0001585c <gtk_message_dialog_format_secondary_markup@plt>:
   1585c:	add	ip, pc, #0, 12
   15860:	add	ip, ip, #176128	; 0x2b000
   15864:	ldr	pc, [ip, #2772]!	; 0xad4

00015868 <g_ascii_strdown@plt>:
   15868:	add	ip, pc, #0, 12
   1586c:	add	ip, ip, #176128	; 0x2b000
   15870:	ldr	pc, [ip, #2764]!	; 0xacc

00015874 <g_free@plt>:
   15874:	add	ip, pc, #0, 12
   15878:	add	ip, ip, #176128	; 0x2b000
   1587c:	ldr	pc, [ip, #2756]!	; 0xac4

00015880 <dcgettext@plt>:
   15880:	add	ip, pc, #0, 12
   15884:	add	ip, ip, #176128	; 0x2b000
   15888:	ldr	pc, [ip, #2748]!	; 0xabc

0001588c <g_markup_parse_context_free@plt>:
   1588c:	add	ip, pc, #0, 12
   15890:	add	ip, ip, #176128	; 0x2b000
   15894:	ldr	pc, [ip, #2740]!	; 0xab4

00015898 <g_hash_table_unref@plt>:
   15898:	add	ip, pc, #0, 12
   1589c:	add	ip, ip, #176128	; 0x2b000
   158a0:	ldr	pc, [ip, #2732]!	; 0xaac

000158a4 <g_file_test@plt>:
   158a4:	add	ip, pc, #0, 12
   158a8:	add	ip, ip, #176128	; 0x2b000
   158ac:	ldr	pc, [ip, #2724]!	; 0xaa4

000158b0 <gtk_tree_view_column_set_expand@plt>:
   158b0:	add	ip, pc, #0, 12
   158b4:	add	ip, ip, #176128	; 0x2b000
   158b8:	ldr	pc, [ip, #2716]!	; 0xa9c

000158bc <gtk_main@plt>:
   158bc:	add	ip, pc, #0, 12
   158c0:	add	ip, ip, #176128	; 0x2b000
   158c4:	ldr	pc, [ip, #2708]!	; 0xa94

000158c8 <g_object_set@plt>:
   158c8:	add	ip, pc, #0, 12
   158cc:	add	ip, ip, #176128	; 0x2b000
   158d0:	ldr	pc, [ip, #2700]!	; 0xa8c

000158d4 <gtk_text_buffer_insert_at_cursor@plt>:
   158d4:	add	ip, pc, #0, 12
   158d8:	add	ip, ip, #176128	; 0x2b000
   158dc:	ldr	pc, [ip, #2692]!	; 0xa84

000158e0 <gtk_message_dialog_get_type@plt>:
   158e0:	add	ip, pc, #0, 12
   158e4:	add	ip, ip, #176128	; 0x2b000
   158e8:	ldr	pc, [ip, #2684]!	; 0xa7c

000158ec <g_ptr_array_new@plt>:
   158ec:	add	ip, pc, #0, 12
   158f0:	add	ip, ip, #176128	; 0x2b000
   158f4:	ldr	pc, [ip, #2676]!	; 0xa74

000158f8 <gtk_cell_renderer_pixbuf_new@plt>:
   158f8:	add	ip, pc, #0, 12
   158fc:	add	ip, ip, #176128	; 0x2b000
   15900:	ldr	pc, [ip, #2668]!	; 0xa6c

00015904 <gtk_text_view_set_right_margin@plt>:
   15904:	add	ip, pc, #0, 12
   15908:	add	ip, ip, #176128	; 0x2b000
   1590c:	ldr	pc, [ip, #2660]!	; 0xa64

00015910 <g_object_get@plt>:
   15910:	add	ip, pc, #0, 12
   15914:	add	ip, ip, #176128	; 0x2b000
   15918:	ldr	pc, [ip, #2652]!	; 0xa5c

0001591c <gtk_tree_selection_get_selected@plt>:
   1591c:	add	ip, pc, #0, 12
   15920:	add	ip, ip, #176128	; 0x2b000
   15924:	ldr	pc, [ip, #2644]!	; 0xa54

00015928 <gtk_dialog_get_type@plt>:
   15928:	add	ip, pc, #0, 12
   1592c:	add	ip, ip, #176128	; 0x2b000
   15930:	ldr	pc, [ip, #2636]!	; 0xa4c

00015934 <XFree@plt>:
   15934:	add	ip, pc, #0, 12
   15938:	add	ip, ip, #176128	; 0x2b000
   1593c:	ldr	pc, [ip, #2628]!	; 0xa44

00015940 <pk_results_get_repo_signature_required_array@plt>:
   15940:	add	ip, pc, #0, 12
   15944:	add	ip, ip, #176128	; 0x2b000
   15948:	ldr	pc, [ip, #2620]!	; 0xa3c

0001594c <gtk_tree_view_get_selection@plt>:
   1594c:	add	ip, pc, #0, 12
   15950:	add	ip, ip, #176128	; 0x2b000
   15954:	ldr	pc, [ip, #2612]!	; 0xa34

00015958 <gtk_tree_model_get_type@plt>:
   15958:	add	ip, pc, #0, 12
   1595c:	add	ip, ip, #176128	; 0x2b000
   15960:	ldr	pc, [ip, #2604]!	; 0xa2c

00015964 <gtk_list_store_append@plt>:
   15964:	add	ip, pc, #0, 12
   15968:	add	ip, ip, #176128	; 0x2b000
   1596c:	ldr	pc, [ip, #2596]!	; 0xa24

00015970 <gtk_text_buffer_create_mark@plt>:
   15970:	add	ip, pc, #0, 12
   15974:	add	ip, ip, #176128	; 0x2b000
   15978:	ldr	pc, [ip, #2588]!	; 0xa1c

0001597c <gtk_text_view_set_editable@plt>:
   1597c:	add	ip, pc, #0, 12
   15980:	add	ip, ip, #176128	; 0x2b000
   15984:	ldr	pc, [ip, #2580]!	; 0xa14

00015988 <g_type_class_add_private@plt>:
   15988:	add	ip, pc, #0, 12
   1598c:	add	ip, ip, #176128	; 0x2b000
   15990:	ldr	pc, [ip, #2572]!	; 0xa0c

00015994 <pk_task_generic_finish@plt>:
   15994:	add	ip, pc, #0, 12
   15998:	add	ip, ip, #176128	; 0x2b000
   1599c:	ldr	pc, [ip, #2564]!	; 0xa04

000159a0 <g_timeout_add_seconds@plt>:
   159a0:	add	ip, pc, #0, 12
   159a4:	add	ip, ip, #176128	; 0x2b000
   159a8:	ldr	pc, [ip, #2556]!	; 0x9fc

000159ac <g_set_application_name@plt>:
   159ac:	add	ip, pc, #0, 12
   159b0:	add	ip, ip, #176128	; 0x2b000
   159b4:	ldr	pc, [ip, #2548]!	; 0x9f4

000159b8 <raise@plt>:
   159b8:	add	ip, pc, #0, 12
   159bc:	add	ip, ip, #176128	; 0x2b000
   159c0:	ldr	pc, [ip, #2540]!	; 0x9ec

000159c4 <gtk_toggle_button_set_active@plt>:
   159c4:	add	ip, pc, #0, 12
   159c8:	add	ip, ip, #176128	; 0x2b000
   159cc:	ldr	pc, [ip, #2532]!	; 0x9e4

000159d0 <gtk_dialog_get_content_area@plt>:
   159d0:	add	ip, pc, #0, 12
   159d4:	add	ip, ip, #176128	; 0x2b000
   159d8:	ldr	pc, [ip, #2524]!	; 0x9dc

000159dc <g_type_check_instance_is_a@plt>:
   159dc:	add	ip, pc, #0, 12
   159e0:	add	ip, ip, #176128	; 0x2b000
   159e4:	ldr	pc, [ip, #2516]!	; 0x9d4

000159e8 <g_print@plt>:
   159e8:	add	ip, pc, #0, 12
   159ec:	add	ip, ip, #176128	; 0x2b000
   159f0:	ldr	pc, [ip, #2508]!	; 0x9cc

000159f4 <getuid@plt>:
   159f4:	add	ip, pc, #0, 12
   159f8:	add	ip, ip, #176128	; 0x2b000
   159fc:	ldr	pc, [ip, #2500]!	; 0x9c4

00015a00 <bindtextdomain@plt>:
   15a00:	add	ip, pc, #0, 12
   15a04:	add	ip, ip, #176128	; 0x2b000
   15a08:	ldr	pc, [ip, #2492]!	; 0x9bc

00015a0c <notify_init@plt>:
   15a0c:	add	ip, pc, #0, 12
   15a10:	add	ip, ip, #176128	; 0x2b000
   15a14:	ldr	pc, [ip, #2484]!	; 0x9b4

00015a18 <g_key_file_get_string@plt>:
   15a18:	add	ip, pc, #0, 12
   15a1c:	add	ip, ip, #176128	; 0x2b000
   15a20:	ldr	pc, [ip, #2476]!	; 0x9ac

00015a24 <g_quark_from_static_string@plt>:
   15a24:	add	ip, pc, #0, 12
   15a28:	add	ip, ip, #176128	; 0x2b000
   15a2c:	ldr	pc, [ip, #2468]!	; 0x9a4

00015a30 <pk_client_error_quark@plt>:
   15a30:	add	ip, pc, #0, 12
   15a34:	add	ip, ip, #176128	; 0x2b000
   15a38:	ldr	pc, [ip, #2460]!	; 0x99c

00015a3c <gdk_window_get_type@plt>:
   15a3c:	add	ip, pc, #0, 12
   15a40:	add	ip, ip, #176128	; 0x2b000
   15a44:	ldr	pc, [ip, #2452]!	; 0x994

00015a48 <notify_notification_show@plt>:
   15a48:	add	ip, pc, #0, 12
   15a4c:	add	ip, ip, #176128	; 0x2b000
   15a50:	ldr	pc, [ip, #2444]!	; 0x98c

00015a54 <pk_results_get_eula_required_array@plt>:
   15a54:	add	ip, pc, #0, 12
   15a58:	add	ip, ip, #176128	; 0x2b000
   15a5c:	ldr	pc, [ip, #2436]!	; 0x984

00015a60 <pk_client_resolve_async@plt>:
   15a60:	add	ip, pc, #0, 12
   15a64:	add	ip, ip, #176128	; 0x2b000
   15a68:	ldr	pc, [ip, #2428]!	; 0x97c

00015a6c <pk_package_sack_get_size@plt>:
   15a6c:	add	ip, pc, #0, 12
   15a70:	add	ip, ip, #176128	; 0x2b000
   15a74:	ldr	pc, [ip, #2420]!	; 0x974

00015a78 <gtk_style_context_get_color@plt>:
   15a78:	add	ip, pc, #0, 12
   15a7c:	add	ip, ip, #176128	; 0x2b000
   15a80:	ldr	pc, [ip, #2412]!	; 0x96c

00015a84 <pk_results_get_package_sack@plt>:
   15a84:	add	ip, pc, #0, 12
   15a88:	add	ip, ip, #176128	; 0x2b000
   15a8c:	ldr	pc, [ip, #2404]!	; 0x964

00015a90 <setlocale@plt>:
   15a90:	add	ip, pc, #0, 12
   15a94:	add	ip, ip, #176128	; 0x2b000
   15a98:	ldr	pc, [ip, #2396]!	; 0x95c

00015a9c <g_strconcat@plt>:
   15a9c:	add	ip, pc, #0, 12
   15aa0:	add	ip, ip, #176128	; 0x2b000
   15aa4:	ldr	pc, [ip, #2388]!	; 0x954

00015aa8 <g_option_context_add_main_entries@plt>:
   15aa8:	add	ip, pc, #0, 12
   15aac:	add	ip, ip, #176128	; 0x2b000
   15ab0:	ldr	pc, [ip, #2380]!	; 0x94c

00015ab4 <pk_task_install_packages_async@plt>:
   15ab4:	add	ip, pc, #0, 12
   15ab8:	add	ip, ip, #176128	; 0x2b000
   15abc:	ldr	pc, [ip, #2372]!	; 0x944

00015ac0 <g_key_file_new@plt>:
   15ac0:	add	ip, pc, #0, 12
   15ac4:	add	ip, ip, #176128	; 0x2b000
   15ac8:	ldr	pc, [ip, #2364]!	; 0x93c

00015acc <gtk_text_buffer_insert_with_tags@plt>:
   15acc:	add	ip, pc, #0, 12
   15ad0:	add	ip, ip, #176128	; 0x2b000
   15ad4:	ldr	pc, [ip, #2356]!	; 0x934

00015ad8 <g_timer_new@plt>:
   15ad8:	add	ip, pc, #0, 12
   15adc:	add	ip, ip, #176128	; 0x2b000
   15ae0:	ldr	pc, [ip, #2348]!	; 0x92c

00015ae4 <gtk_window_set_resizable@plt>:
   15ae4:	add	ip, pc, #0, 12
   15ae8:	add	ip, ip, #176128	; 0x2b000
   15aec:	ldr	pc, [ip, #2340]!	; 0x924

00015af0 <gtk_widget_show_all@plt>:
   15af0:	add	ip, pc, #0, 12
   15af4:	add	ip, ip, #176128	; 0x2b000
   15af8:	ldr	pc, [ip, #2332]!	; 0x91c

00015afc <gtk_builder_new@plt>:
   15afc:	add	ip, pc, #0, 12
   15b00:	add	ip, ip, #176128	; 0x2b000
   15b04:	ldr	pc, [ip, #2324]!	; 0x914

00015b08 <g_string_free@plt>:
   15b08:	add	ip, pc, #0, 12
   15b0c:	add	ip, ip, #176128	; 0x2b000
   15b10:	ldr	pc, [ip, #2316]!	; 0x90c

00015b14 <gtk_dialog_run@plt>:
   15b14:	add	ip, pc, #0, 12
   15b18:	add	ip, ip, #176128	; 0x2b000
   15b1c:	ldr	pc, [ip, #2308]!	; 0x904

00015b20 <g_realloc_n@plt>:
   15b20:	add	ip, pc, #0, 12
   15b24:	add	ip, ip, #176128	; 0x2b000
   15b28:	ldr	pc, [ip, #2300]!	; 0x8fc

00015b2c <pango_attr_iterator_get@plt>:
   15b2c:	add	ip, pc, #0, 12
   15b30:	add	ip, ip, #176128	; 0x2b000
   15b34:	ldr	pc, [ip, #2292]!	; 0x8f4

00015b38 <pango_attr_iterator_next@plt>:
   15b38:	add	ip, pc, #0, 12
   15b3c:	add	ip, ip, #176128	; 0x2b000
   15b40:	ldr	pc, [ip, #2284]!	; 0x8ec

00015b44 <pk_info_enum_to_string@plt>:
   15b44:	add	ip, pc, #0, 12
   15b48:	add	ip, ip, #176128	; 0x2b000
   15b4c:	ldr	pc, [ip, #2276]!	; 0x8e4

00015b50 <gtk_widget_show@plt>:
   15b50:	add	ip, pc, #0, 12
   15b54:	add	ip, ip, #176128	; 0x2b000
   15b58:	ldr	pc, [ip, #2268]!	; 0x8dc

00015b5c <g_object_unref@plt>:
   15b5c:	add	ip, pc, #0, 12
   15b60:	add	ip, ip, #176128	; 0x2b000
   15b64:	ldr	pc, [ip, #2260]!	; 0x8d4

00015b68 <strlen@plt>:
   15b68:	add	ip, pc, #0, 12
   15b6c:	add	ip, ip, #176128	; 0x2b000
   15b70:	ldr	pc, [ip, #2252]!	; 0x8cc

00015b74 <g_cclosure_marshal_VOID__VOID@plt>:
   15b74:	add	ip, pc, #0, 12
   15b78:	add	ip, ip, #176128	; 0x2b000
   15b7c:	ldr	pc, [ip, #2244]!	; 0x8c4

00015b80 <gtk_text_buffer_get_tag_table@plt>:
   15b80:	add	ip, pc, #0, 12
   15b84:	add	ip, ip, #176128	; 0x2b000
   15b88:	ldr	pc, [ip, #2236]!	; 0x8bc

00015b8c <pango_attr_iterator_destroy@plt>:
   15b8c:	add	ip, pc, #0, 12
   15b90:	add	ip, ip, #176128	; 0x2b000
   15b94:	ldr	pc, [ip, #2228]!	; 0x8b4

00015b98 <g_once_init_leave@plt>:
   15b98:	add	ip, pc, #0, 12
   15b9c:	add	ip, ip, #176128	; 0x2b000
   15ba0:	ldr	pc, [ip, #2220]!	; 0x8ac

00015ba4 <gtk_icon_size_lookup@plt>:
   15ba4:	add	ip, pc, #0, 12
   15ba8:	add	ip, ip, #176128	; 0x2b000
   15bac:	ldr	pc, [ip, #2212]!	; 0x8a4

00015bb0 <g_desktop_app_info_new_from_filename@plt>:
   15bb0:	add	ip, pc, #0, 12
   15bb4:	add	ip, ip, #176128	; 0x2b000
   15bb8:	ldr	pc, [ip, #2204]!	; 0x89c

00015bbc <gtk_button_set_label@plt>:
   15bbc:	add	ip, pc, #0, 12
   15bc0:	add	ip, ip, #176128	; 0x2b000
   15bc4:	ldr	pc, [ip, #2196]!	; 0x894

00015bc8 <g_log_set_fatal_mask@plt>:
   15bc8:	add	ip, pc, #0, 12
   15bcc:	add	ip, ip, #176128	; 0x2b000
   15bd0:	ldr	pc, [ip, #2188]!	; 0x88c

00015bd4 <g_value_peek_pointer@plt>:
   15bd4:	add	ip, pc, #0, 12
   15bd8:	add	ip, ip, #176128	; 0x2b000
   15bdc:	ldr	pc, [ip, #2180]!	; 0x884

00015be0 <gtk_tree_selection_unselect_all@plt>:
   15be0:	add	ip, pc, #0, 12
   15be4:	add	ip, ip, #176128	; 0x2b000
   15be8:	ldr	pc, [ip, #2172]!	; 0x87c

00015bec <gtk_window_set_transient_for@plt>:
   15bec:	add	ip, pc, #0, 12
   15bf0:	add	ip, ip, #176128	; 0x2b000
   15bf4:	ldr	pc, [ip, #2164]!	; 0x874

00015bf8 <gtk_text_buffer_new@plt>:
   15bf8:	add	ip, pc, #0, 12
   15bfc:	add	ip, ip, #176128	; 0x2b000
   15c00:	ldr	pc, [ip, #2156]!	; 0x86c

00015c04 <gtk_label_set_max_width_chars@plt>:
   15c04:	add	ip, pc, #0, 12
   15c08:	add	ip, ip, #176128	; 0x2b000
   15c0c:	ldr	pc, [ip, #2148]!	; 0x864

00015c10 <g_settings_get_string@plt>:
   15c10:	add	ip, pc, #0, 12
   15c14:	add	ip, ip, #176128	; 0x2b000
   15c18:	ldr	pc, [ip, #2140]!	; 0x85c

00015c1c <g_source_set_name_by_id@plt>:
   15c1c:	add	ip, pc, #0, 12
   15c20:	add	ip, ip, #176128	; 0x2b000
   15c24:	ldr	pc, [ip, #2132]!	; 0x854

00015c28 <g_malloc0_n@plt>:
   15c28:	add	ip, pc, #0, 12
   15c2c:	add	ip, ip, #176128	; 0x2b000
   15c30:	ldr	pc, [ip, #2124]!	; 0x84c

00015c34 <pk_package_id_to_printable@plt>:
   15c34:	add	ip, pc, #0, 12
   15c38:	add	ip, ip, #176128	; 0x2b000
   15c3c:	ldr	pc, [ip, #2116]!	; 0x844

00015c40 <g_key_file_free@plt>:
   15c40:	add	ip, pc, #0, 12
   15c44:	add	ip, ip, #176128	; 0x2b000
   15c48:	ldr	pc, [ip, #2108]!	; 0x83c

00015c4c <gtk_main_quit@plt>:
   15c4c:	add	ip, pc, #0, 12
   15c50:	add	ip, ip, #176128	; 0x2b000
   15c54:	ldr	pc, [ip, #2100]!	; 0x834

00015c58 <g_type_class_peek_parent@plt>:
   15c58:	add	ip, pc, #0, 12
   15c5c:	add	ip, ip, #176128	; 0x2b000
   15c60:	ldr	pc, [ip, #2092]!	; 0x82c

00015c64 <gtk_tree_view_column_add_attribute@plt>:
   15c64:	add	ip, pc, #0, 12
   15c68:	add	ip, ip, #176128	; 0x2b000
   15c6c:	ldr	pc, [ip, #2084]!	; 0x824

00015c70 <gtk_tree_view_new_with_model@plt>:
   15c70:	add	ip, pc, #0, 12
   15c74:	add	ip, ip, #176128	; 0x2b000
   15c78:	ldr	pc, [ip, #2076]!	; 0x81c

00015c7c <g_ptr_array_unref@plt>:
   15c7c:	add	ip, pc, #0, 12
   15c80:	add	ip, ip, #176128	; 0x2b000
   15c84:	ldr	pc, [ip, #2068]!	; 0x814

00015c88 <g_enum_register_static@plt>:
   15c88:	add	ip, pc, #0, 12
   15c8c:	add	ip, ip, #176128	; 0x2b000
   15c90:	ldr	pc, [ip, #2060]!	; 0x80c

00015c94 <gtk_scrolled_window_get_type@plt>:
   15c94:	add	ip, pc, #0, 12
   15c98:	add	ip, ip, #176128	; 0x2b000
   15c9c:	ldr	pc, [ip, #2052]!	; 0x804

00015ca0 <g_malloc0@plt>:
   15ca0:	add	ip, pc, #0, 12
   15ca4:	add	ip, ip, #176128	; 0x2b000
   15ca8:	ldr	pc, [ip, #2044]!	; 0x7fc

00015cac <gtk_window_set_modal@plt>:
   15cac:	add	ip, pc, #0, 12
   15cb0:	add	ip, ip, #176128	; 0x2b000
   15cb4:	ldr	pc, [ip, #2036]!	; 0x7f4

00015cb8 <strcmp@plt>:
   15cb8:	add	ip, pc, #0, 12
   15cbc:	add	ip, ip, #176128	; 0x2b000
   15cc0:	ldr	pc, [ip, #2028]!	; 0x7ec

00015cc4 <g_ptr_array_add@plt>:
   15cc4:	add	ip, pc, #0, 12
   15cc8:	add	ip, ip, #176128	; 0x2b000
   15ccc:	ldr	pc, [ip, #2020]!	; 0x7e4

00015cd0 <g_markup_escape_text@plt>:
   15cd0:	add	ip, pc, #0, 12
   15cd4:	add	ip, ip, #176128	; 0x2b000
   15cd8:	ldr	pc, [ip, #2012]!	; 0x7dc

00015cdc <g_str_has_suffix@plt>:
   15cdc:	add	ip, pc, #0, 12
   15ce0:	add	ip, ip, #176128	; 0x2b000
   15ce4:	ldr	pc, [ip, #2004]!	; 0x7d4

00015ce8 <gtk_init@plt>:
   15ce8:	add	ip, pc, #0, 12
   15cec:	add	ip, ip, #176128	; 0x2b000
   15cf0:	ldr	pc, [ip, #1996]!	; 0x7cc

00015cf4 <gtk_image_set_from_icon_name@plt>:
   15cf4:	add	ip, pc, #0, 12
   15cf8:	add	ip, ip, #176128	; 0x2b000
   15cfc:	ldr	pc, [ip, #1988]!	; 0x7c4

00015d00 <g_settings_set_boolean@plt>:
   15d00:	add	ip, pc, #0, 12
   15d04:	add	ip, ip, #176128	; 0x2b000
   15d08:	ldr	pc, [ip, #1980]!	; 0x7bc

00015d0c <time@plt>:
   15d0c:	add	ip, pc, #0, 12
   15d10:	add	ip, ip, #176128	; 0x2b000
   15d14:	ldr	pc, [ip, #1972]!	; 0x7b4

00015d18 <pango_parse_markup@plt>:
   15d18:	add	ip, pc, #0, 12
   15d1c:	add	ip, ip, #176128	; 0x2b000
   15d20:	ldr	pc, [ip, #1964]!	; 0x7ac

00015d24 <gtk_message_dialog_new@plt>:
   15d24:	add	ip, pc, #0, 12
   15d28:	add	ip, ip, #176128	; 0x2b000
   15d2c:	ldr	pc, [ip, #1956]!	; 0x7a4

00015d30 <gtk_icon_theme_get_default@plt>:
   15d30:	add	ip, pc, #0, 12
   15d34:	add	ip, ip, #176128	; 0x2b000
   15d38:	ldr	pc, [ip, #1948]!	; 0x79c

00015d3c <gtk_label_set_markup@plt>:
   15d3c:	add	ip, pc, #0, 12
   15d40:	add	ip, ip, #176128	; 0x2b000
   15d44:	ldr	pc, [ip, #1940]!	; 0x794

00015d48 <gtk_tree_view_set_headers_visible@plt>:
   15d48:	add	ip, pc, #0, 12
   15d4c:	add	ip, ip, #176128	; 0x2b000
   15d50:	ldr	pc, [ip, #1932]!	; 0x78c

00015d54 <g_string_append@plt>:
   15d54:	add	ip, pc, #0, 12
   15d58:	add	ip, ip, #176128	; 0x2b000
   15d5c:	ldr	pc, [ip, #1924]!	; 0x784

00015d60 <pk_enum_find_string@plt>:
   15d60:	add	ip, pc, #0, 12
   15d64:	add	ip, ip, #176128	; 0x2b000
   15d68:	ldr	pc, [ip, #1916]!	; 0x77c

00015d6c <gtk_tree_model_get_iter@plt>:
   15d6c:	add	ip, pc, #0, 12
   15d70:	add	ip, ip, #176128	; 0x2b000
   15d74:	ldr	pc, [ip, #1908]!	; 0x774

00015d78 <dbus_g_thread_init@plt>:
   15d78:	add	ip, pc, #0, 12
   15d7c:	add	ip, ip, #176128	; 0x2b000
   15d80:	ldr	pc, [ip, #1900]!	; 0x76c

00015d84 <g_strjoinv@plt>:
   15d84:	add	ip, pc, #0, 12
   15d88:	add	ip, ip, #176128	; 0x2b000
   15d8c:	ldr	pc, [ip, #1892]!	; 0x764

00015d90 <gtk_check_button_new_with_label@plt>:
   15d90:	add	ip, pc, #0, 12
   15d94:	add	ip, ip, #176128	; 0x2b000
   15d98:	ldr	pc, [ip, #1884]!	; 0x75c

00015d9c <gtk_tree_model_get@plt>:
   15d9c:	add	ip, pc, #0, 12
   15da0:	add	ip, ip, #176128	; 0x2b000
   15da4:	ldr	pc, [ip, #1876]!	; 0x754

00015da8 <g_string_append_printf@plt>:
   15da8:	add	ip, pc, #0, 12
   15dac:	add	ip, ip, #176128	; 0x2b000
   15db0:	ldr	pc, [ip, #1868]!	; 0x74c

00015db4 <g_set_error@plt>:
   15db4:	add	ip, pc, #0, 12
   15db8:	add	ip, ip, #176128	; 0x2b000
   15dbc:	ldr	pc, [ip, #1860]!	; 0x744

00015dc0 <g_type_check_class_cast@plt>:
   15dc0:	add	ip, pc, #0, 12
   15dc4:	add	ip, ip, #176128	; 0x2b000
   15dc8:	ldr	pc, [ip, #1852]!	; 0x73c

00015dcc <gtk_list_store_clear@plt>:
   15dcc:	add	ip, pc, #0, 12
   15dd0:	add	ip, ip, #176128	; 0x2b000
   15dd4:	ldr	pc, [ip, #1844]!	; 0x734

00015dd8 <__libc_start_main@plt>:
   15dd8:	add	ip, pc, #0, 12
   15ddc:	add	ip, ip, #176128	; 0x2b000
   15de0:	ldr	pc, [ip, #1836]!	; 0x72c

00015de4 <gtk_button_get_type@plt>:
   15de4:	add	ip, pc, #0, 12
   15de8:	add	ip, ip, #176128	; 0x2b000
   15dec:	ldr	pc, [ip, #1828]!	; 0x724

00015df0 <g_main_loop_unref@plt>:
   15df0:	add	ip, pc, #0, 12
   15df4:	add	ip, ip, #176128	; 0x2b000
   15df8:	ldr	pc, [ip, #1820]!	; 0x71c

00015dfc <__gmon_start__@plt>:
   15dfc:	add	ip, pc, #0, 12
   15e00:	add	ip, ip, #176128	; 0x2b000
   15e04:	ldr	pc, [ip, #1812]!	; 0x714

00015e08 <gtk_builder_add_from_file@plt>:
   15e08:	add	ip, pc, #0, 12
   15e0c:	add	ip, ip, #176128	; 0x2b000
   15e10:	ldr	pc, [ip, #1804]!	; 0x70c

00015e14 <gtk_notebook_get_type@plt>:
   15e14:	add	ip, pc, #0, 12
   15e18:	add	ip, ip, #176128	; 0x2b000
   15e1c:	ldr	pc, [ip, #1796]!	; 0x704

00015e20 <gdk_x11_display_get_xdisplay@plt>:
   15e20:	add	ip, pc, #0, 12
   15e24:	add	ip, ip, #176128	; 0x2b000
   15e28:	ldr	pc, [ip, #1788]!	; 0x6fc

00015e2c <pango_attr_list_get_iterator@plt>:
   15e2c:	add	ip, pc, #0, 12
   15e30:	add	ip, ip, #176128	; 0x2b000
   15e34:	ldr	pc, [ip, #1780]!	; 0x6f4

00015e38 <gtk_window_get_type@plt>:
   15e38:	add	ip, pc, #0, 12
   15e3c:	add	ip, ip, #176128	; 0x2b000
   15e40:	ldr	pc, [ip, #1772]!	; 0x6ec

00015e44 <gdk_error_trap_pop_ignored@plt>:
   15e44:	add	ip, pc, #0, 12
   15e48:	add	ip, ip, #176128	; 0x2b000
   15e4c:	ldr	pc, [ip, #1764]!	; 0x6e4

00015e50 <gtk_widget_set_sensitive@plt>:
   15e50:	add	ip, pc, #0, 12
   15e54:	add	ip, ip, #176128	; 0x2b000
   15e58:	ldr	pc, [ip, #1756]!	; 0x6dc

00015e5c <g_source_remove@plt>:
   15e5c:	add	ip, pc, #0, 12
   15e60:	add	ip, ip, #176128	; 0x2b000
   15e64:	ldr	pc, [ip, #1748]!	; 0x6d4

00015e68 <gtk_toggle_button_get_active@plt>:
   15e68:	add	ip, pc, #0, 12
   15e6c:	add	ip, ip, #176128	; 0x2b000
   15e70:	ldr	pc, [ip, #1740]!	; 0x6cc

00015e74 <gtk_progress_bar_set_text@plt>:
   15e74:	add	ip, pc, #0, 12
   15e78:	add	ip, ip, #176128	; 0x2b000
   15e7c:	ldr	pc, [ip, #1732]!	; 0x6c4

00015e80 <g_strcmp0@plt>:
   15e80:	add	ip, pc, #0, 12
   15e84:	add	ip, ip, #176128	; 0x2b000
   15e88:	ldr	pc, [ip, #1724]!	; 0x6bc

Disassembly of section .text:

00015e90 <.text>:
   15e90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e94:	sub	sp, sp, #120	; 0x78
   15e98:	ldr	r7, [pc, #744]	; 16188 <g_strcmp0@plt+0x308>
   15e9c:	mov	r4, #0
   15ea0:	str	r0, [sp, #36]	; 0x24
   15ea4:	ldr	r3, [r7]
   15ea8:	str	r1, [sp, #32]
   15eac:	mov	r2, #52	; 0x34
   15eb0:	mov	r1, r4
   15eb4:	add	r0, sp, #64	; 0x40
   15eb8:	str	r3, [sp, #116]	; 0x74
   15ebc:	str	r4, [sp, #44]	; 0x2c
   15ec0:	str	r4, [sp, #48]	; 0x30
   15ec4:	bl	153dc <memset@plt>
   15ec8:	ldr	ip, [pc, #700]	; 1618c <g_strcmp0@plt+0x30c>
   15ecc:	add	r3, sp, #44	; 0x2c
   15ed0:	mov	r2, #5
   15ed4:	mov	r0, r4
   15ed8:	ldr	r1, [pc, #688]	; 16190 <g_strcmp0@plt+0x310>
   15edc:	str	ip, [sp, #60]	; 0x3c
   15ee0:	str	r3, [sp, #76]	; 0x4c
   15ee4:	bl	15880 <dcgettext@plt>
   15ee8:	ldr	r1, [pc, #676]	; 16194 <g_strcmp0@plt+0x314>
   15eec:	ldr	r6, [pc, #676]	; 16198 <g_strcmp0@plt+0x318>
   15ef0:	str	r0, [sp, #80]	; 0x50
   15ef4:	mov	r0, #6
   15ef8:	bl	15a90 <setlocale@plt>
   15efc:	ldr	r1, [pc, #664]	; 1619c <g_strcmp0@plt+0x31c>
   15f00:	ldr	r0, [pc, #664]	; 161a0 <g_strcmp0@plt+0x320>
   15f04:	bl	15a00 <bindtextdomain@plt>
   15f08:	ldr	r1, [pc, #660]	; 161a4 <g_strcmp0@plt+0x324>
   15f0c:	ldr	r0, [pc, #652]	; 161a0 <g_strcmp0@plt+0x320>
   15f10:	bl	150a0 <bind_textdomain_codeset@plt>
   15f14:	ldr	r0, [pc, #644]	; 161a0 <g_strcmp0@plt+0x320>
   15f18:	bl	15334 <textdomain@plt>
   15f1c:	bl	15d78 <dbus_g_thread_init@plt>
   15f20:	mov	r2, #5
   15f24:	ldr	r1, [pc, #636]	; 161a8 <g_strcmp0@plt+0x328>
   15f28:	mov	r0, r4
   15f2c:	bl	15880 <dcgettext@plt>
   15f30:	bl	15a0c <notify_init@plt>
   15f34:	mov	r2, #5
   15f38:	ldr	r1, [pc, #616]	; 161a8 <g_strcmp0@plt+0x328>
   15f3c:	mov	r0, r4
   15f40:	bl	15880 <dcgettext@plt>
   15f44:	bl	159ac <g_set_application_name@plt>
   15f48:	mov	r0, r4
   15f4c:	bl	15178 <g_option_context_new@plt>
   15f50:	mov	r2, #5
   15f54:	ldr	r1, [pc, #592]	; 161ac <g_strcmp0@plt+0x32c>
   15f58:	mov	r5, r0
   15f5c:	mov	r0, r4
   15f60:	bl	15880 <dcgettext@plt>
   15f64:	mov	r1, r0
   15f68:	mov	r0, r5
   15f6c:	bl	15208 <g_option_context_set_summary@plt>
   15f70:	mov	r2, r4
   15f74:	mov	r0, r5
   15f78:	add	r1, sp, #60	; 0x3c
   15f7c:	bl	15aa8 <g_option_context_add_main_entries@plt>
   15f80:	bl	1d87c <g_strcmp0@plt+0x79fc>
   15f84:	mov	r1, r0
   15f88:	mov	r0, r5
   15f8c:	bl	14f5c <g_option_context_add_group@plt>
   15f90:	mov	r0, #1
   15f94:	bl	150d0 <gtk_get_option_group@plt>
   15f98:	mov	r1, r0
   15f9c:	mov	r0, r5
   15fa0:	bl	14f5c <g_option_context_add_group@plt>
   15fa4:	mov	r3, r4
   15fa8:	add	r2, sp, #32
   15fac:	add	r1, sp, #36	; 0x24
   15fb0:	mov	r0, r5
   15fb4:	bl	14f50 <g_option_context_parse@plt>
   15fb8:	mov	r0, r5
   15fbc:	bl	157cc <g_option_context_free@plt>
   15fc0:	add	r1, sp, #32
   15fc4:	add	r0, sp, #36	; 0x24
   15fc8:	bl	15ce8 <gtk_init@plt>
   15fcc:	bl	172a8 <g_strcmp0@plt+0x1428>
   15fd0:	mov	r1, r4
   15fd4:	mov	r5, r0
   15fd8:	mov	r0, r4
   15fdc:	bl	154fc <g_main_loop_new@plt>
   15fe0:	add	r1, sp, #48	; 0x30
   15fe4:	str	r0, [r6]
   15fe8:	mov	r0, r4
   15fec:	bl	153b8 <dbus_g_bus_get@plt>
   15ff0:	ldr	r4, [sp, #48]	; 0x30
   15ff4:	cmp	r4, #0
   15ff8:	beq	16048 <g_strcmp0@plt+0x1c8>
   15ffc:	ldr	r3, [r4, #8]
   16000:	ldr	r2, [pc, #424]	; 161b0 <g_strcmp0@plt+0x330>
   16004:	mov	r1, #16
   16008:	ldr	r0, [pc, #420]	; 161b4 <g_strcmp0@plt+0x334>
   1600c:	bl	151f0 <g_log@plt>
   16010:	ldr	r0, [sp, #48]	; 0x30
   16014:	bl	15064 <g_error_free@plt>
   16018:	mov	r4, #1
   1601c:	ldr	r0, [r6]
   16020:	bl	15df0 <g_main_loop_unref@plt>
   16024:	mov	r0, r5
   16028:	bl	15b5c <g_object_unref@plt>
   1602c:	ldr	r2, [sp, #116]	; 0x74
   16030:	ldr	r3, [r7]
   16034:	mov	r0, r4
   16038:	cmp	r2, r3
   1603c:	bne	16184 <g_strcmp0@plt+0x304>
   16040:	add	sp, sp, #120	; 0x78
   16044:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16048:	mov	r8, r0
   1604c:	mov	r1, #80	; 0x50
   16050:	mov	r0, r5
   16054:	bl	15148 <g_type_check_instance_cast@plt>
   16058:	ldr	r3, [pc, #344]	; 161b8 <g_strcmp0@plt+0x338>
   1605c:	ldr	r2, [pc, #344]	; 161bc <g_strcmp0@plt+0x33c>
   16060:	mov	r1, r3
   16064:	str	r4, [sp, #52]	; 0x34
   16068:	mov	r9, r0
   1606c:	mov	r0, r8
   16070:	bl	15184 <dbus_g_proxy_new_for_name@plt>
   16074:	ldr	ip, [pc, #324]	; 161c0 <g_strcmp0@plt+0x340>
   16078:	mov	r3, #28
   1607c:	add	r1, sp, #56	; 0x38
   16080:	mov	r2, #7
   16084:	str	r1, [sp, #20]
   16088:	str	r3, [sp, #16]
   1608c:	str	r3, [sp, #4]
   16090:	str	r2, [sp, #8]
   16094:	str	r4, [sp, #24]
   16098:	str	r4, [sp, #12]
   1609c:	str	ip, [sp]
   160a0:	mov	r3, #64	; 0x40
   160a4:	add	r2, sp, #52	; 0x34
   160a8:	ldr	r1, [pc, #276]	; 161c4 <g_strcmp0@plt+0x344>
   160ac:	mov	sl, r0
   160b0:	bl	15310 <dbus_g_proxy_call@plt>
   160b4:	cmp	r0, #0
   160b8:	beq	16144 <g_strcmp0@plt+0x2c4>
   160bc:	mov	r1, #80	; 0x50
   160c0:	mov	r0, sl
   160c4:	bl	15148 <g_type_check_instance_cast@plt>
   160c8:	bl	15b5c <g_object_unref@plt>
   160cc:	ldr	r3, [sp, #56]	; 0x38
   160d0:	cmp	r3, #1
   160d4:	beq	160f0 <g_strcmp0@plt+0x270>
   160d8:	ldr	r2, [pc, #232]	; 161c8 <g_strcmp0@plt+0x348>
   160dc:	mov	r1, #16
   160e0:	ldr	r0, [pc, #204]	; 161b4 <g_strcmp0@plt+0x334>
   160e4:	bl	151f0 <g_log@plt>
   160e8:	mov	r4, #1
   160ec:	b	1601c <g_strcmp0@plt+0x19c>
   160f0:	bl	16904 <g_strcmp0@plt+0xa84>
   160f4:	ldr	r1, [pc, #208]	; 161cc <g_strcmp0@plt+0x34c>
   160f8:	bl	15400 <dbus_g_object_type_install_info@plt>
   160fc:	bl	16fc0 <g_strcmp0@plt+0x1140>
   16100:	mov	sl, r0
   16104:	bl	16fec <g_strcmp0@plt+0x116c>
   16108:	mov	r1, r4
   1610c:	mov	r2, r0
   16110:	mov	r0, sl
   16114:	bl	1552c <dbus_g_error_domain_register@plt>
   16118:	mov	r2, r9
   1611c:	mov	r0, r8
   16120:	ldr	r1, [pc, #168]	; 161d0 <g_strcmp0@plt+0x350>
   16124:	bl	1570c <dbus_g_connection_register_g_object@plt>
   16128:	ldr	r3, [sp, #44]	; 0x2c
   1612c:	cmp	r3, #0
   16130:	beq	16168 <g_strcmp0@plt+0x2e8>
   16134:	ldr	r0, [r6]
   16138:	bl	154c0 <g_main_loop_run@plt>
   1613c:	mov	r4, #0
   16140:	b	1601c <g_strcmp0@plt+0x19c>
   16144:	ldr	r3, [sp, #52]	; 0x34
   16148:	ldr	r2, [pc, #132]	; 161d4 <g_strcmp0@plt+0x354>
   1614c:	mov	r1, #16
   16150:	ldr	r3, [r3, #8]
   16154:	ldr	r0, [pc, #88]	; 161b4 <g_strcmp0@plt+0x334>
   16158:	bl	151f0 <g_log@plt>
   1615c:	ldr	r0, [sp, #52]	; 0x34
   16160:	bl	15064 <g_error_free@plt>
   16164:	b	160d8 <g_strcmp0@plt+0x258>
   16168:	mov	r2, r5
   1616c:	ldr	r1, [pc, #100]	; 161d8 <g_strcmp0@plt+0x358>
   16170:	mov	r0, #5
   16174:	bl	159a0 <g_timeout_add_seconds@plt>
   16178:	ldr	r1, [pc, #92]	; 161dc <g_strcmp0@plt+0x35c>
   1617c:	bl	15c1c <g_source_set_name_by_id@plt>
   16180:	b	16134 <g_strcmp0@plt+0x2b4>
   16184:	bl	157f0 <__stack_chk_fail@plt>
   16188:	andeq	r0, r4, r0, asr lr
   1618c:	ldrdeq	r8, [r2], -ip
   16190:	andeq	r8, r2, ip, ror #29
   16194:	muleq	r2, r4, r6
   16198:	andeq	r1, r4, ip, asr r5
   1619c:	andeq	r8, r2, r0, lsr #30
   161a0:	andeq	r8, r2, r4, lsr pc
   161a4:	andeq	r8, r2, r0, asr #30
   161a8:	andeq	r8, r2, r8, asr #30
   161ac:	andeq	r8, r2, ip, asr pc
   161b0:	andeq	sl, r2, r0, asr r5
   161b4:	andeq	r8, r2, ip, lsl #29
   161b8:	andeq	r8, r2, r4, lsl #31
   161bc:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   161c0:	andeq	r8, r2, r0, asr #31
   161c4:			; <UNDEFINED> instruction: 0x00028fb4
   161c8:	andeq	r9, r2, r0, lsl r0
   161cc:	muleq	r2, r8, r9
   161d0:	strdeq	r8, [r2], -r4
   161d4:	ldrdeq	r8, [r2], -ip
   161d8:	muleq	r1, r4, r4
   161dc:	andeq	r9, r2, r4, lsr r0
   161e0:	mov	fp, #0
   161e4:	mov	lr, #0
   161e8:	pop	{r1}		; (ldr r1, [sp], #4)
   161ec:	mov	r2, sp
   161f0:	push	{r2}		; (str r2, [sp, #-4]!)
   161f4:	push	{r0}		; (str r0, [sp, #-4]!)
   161f8:	ldr	ip, [pc, #16]	; 16210 <g_strcmp0@plt+0x390>
   161fc:	push	{ip}		; (str ip, [sp, #-4]!)
   16200:	ldr	r0, [pc, #12]	; 16214 <g_strcmp0@plt+0x394>
   16204:	ldr	r3, [pc, #12]	; 16218 <g_strcmp0@plt+0x398>
   16208:	bl	15dd8 <__libc_start_main@plt>
   1620c:	bl	15514 <abort@plt>
   16210:	ldrdeq	r8, [r2], -r0
   16214:	muleq	r1, r0, lr
   16218:	andeq	r8, r2, r0, ror r8
   1621c:	ldr	r3, [pc, #20]	; 16238 <g_strcmp0@plt+0x3b8>
   16220:	ldr	r2, [pc, #20]	; 1623c <g_strcmp0@plt+0x3bc>
   16224:	add	r3, pc, r3
   16228:	ldr	r2, [r3, r2]
   1622c:	cmp	r2, #0
   16230:	bxeq	lr
   16234:	b	15dfc <__gmon_start__@plt>
   16238:	ldrdeq	sl, [r2], -r4
   1623c:	andeq	r0, r0, r8, asr #10
   16240:	ldr	r0, [pc, #24]	; 16260 <g_strcmp0@plt+0x3e0>
   16244:	ldr	r3, [pc, #24]	; 16264 <g_strcmp0@plt+0x3e4>
   16248:	cmp	r3, r0
   1624c:	bxeq	lr
   16250:	ldr	r3, [pc, #16]	; 16268 <g_strcmp0@plt+0x3e8>
   16254:	cmp	r3, #0
   16258:	bxeq	lr
   1625c:	bx	r3
   16260:	andeq	r1, r4, r4, asr r5
   16264:	andeq	r1, r4, r4, asr r5
   16268:	andeq	r0, r0, r0
   1626c:	ldr	r0, [pc, #36]	; 16298 <g_strcmp0@plt+0x418>
   16270:	ldr	r1, [pc, #36]	; 1629c <g_strcmp0@plt+0x41c>
   16274:	sub	r1, r1, r0
   16278:	asr	r1, r1, #2
   1627c:	add	r1, r1, r1, lsr #31
   16280:	asrs	r1, r1, #1
   16284:	bxeq	lr
   16288:	ldr	r3, [pc, #16]	; 162a0 <g_strcmp0@plt+0x420>
   1628c:	cmp	r3, #0
   16290:	bxeq	lr
   16294:	bx	r3
   16298:	andeq	r1, r4, r4, asr r5
   1629c:	andeq	r1, r4, r4, asr r5
   162a0:	andeq	r0, r0, r0
   162a4:	push	{r4, lr}
   162a8:	ldr	r4, [pc, #24]	; 162c8 <g_strcmp0@plt+0x448>
   162ac:	ldrb	r3, [r4]
   162b0:	cmp	r3, #0
   162b4:	popne	{r4, pc}
   162b8:	bl	16240 <g_strcmp0@plt+0x3c0>
   162bc:	mov	r3, #1
   162c0:	strb	r3, [r4]
   162c4:	pop	{r4, pc}
   162c8:	andeq	r1, r4, r8, asr r5
   162cc:	b	1626c <g_strcmp0@plt+0x3ec>
   162d0:	push	{r4, r5, r6, r7, r8, lr}
   162d4:	cmp	r2, #5
   162d8:	ldr	r6, [sp, #28]
   162dc:	beq	162f4 <g_strcmp0@plt+0x474>
   162e0:	ldr	r2, [pc, #112]	; 16358 <g_strcmp0@plt+0x4d8>
   162e4:	ldr	r1, [pc, #112]	; 1635c <g_strcmp0@plt+0x4dc>
   162e8:	ldr	r0, [pc, #112]	; 16360 <g_strcmp0@plt+0x4e0>
   162ec:	pop	{r4, r5, r6, r7, r8, lr}
   162f0:	b	14fd4 <g_return_if_fail_warning@plt>
   162f4:	mov	r4, r3
   162f8:	ldr	r3, [r0]
   162fc:	mov	r5, r0
   16300:	tst	r3, #536870912	; 0x20000000
   16304:	bne	16348 <g_strcmp0@plt+0x4c8>
   16308:	mov	r0, r4
   1630c:	bl	15bd4 <g_value_peek_pointer@plt>
   16310:	mov	r7, r0
   16314:	ldr	r0, [r5, #8]
   16318:	cmp	r6, #0
   1631c:	ldr	r3, [r4, #104]	; 0x68
   16320:	ldreq	r6, [r5, #16]
   16324:	str	r0, [sp, #28]
   16328:	str	r3, [sp, #24]
   1632c:	mov	r0, r7
   16330:	ldr	r3, [r4, #80]	; 0x50
   16334:	ldr	r2, [r4, #56]	; 0x38
   16338:	ldr	r1, [r4, #32]
   1633c:	mov	ip, r6
   16340:	pop	{r4, r5, r6, r7, r8, lr}
   16344:	bx	ip
   16348:	mov	r0, r4
   1634c:	ldr	r7, [r5, #8]
   16350:	bl	15bd4 <g_value_peek_pointer@plt>
   16354:	b	16318 <g_strcmp0@plt+0x498>
   16358:	andeq	r8, r2, r8, ror lr
   1635c:	andeq	r8, r2, r0, ror #17
   16360:	andeq	r8, r2, ip, lsl #29
   16364:	push	{r4, r5, r6, r7, r8, lr}
   16368:	cmp	r2, #4
   1636c:	ldr	r6, [sp, #28]
   16370:	beq	16388 <g_strcmp0@plt+0x508>
   16374:	ldr	r2, [pc, #104]	; 163e4 <g_strcmp0@plt+0x564>
   16378:	ldr	r1, [pc, #104]	; 163e8 <g_strcmp0@plt+0x568>
   1637c:	ldr	r0, [pc, #104]	; 163ec <g_strcmp0@plt+0x56c>
   16380:	pop	{r4, r5, r6, r7, r8, lr}
   16384:	b	14fd4 <g_return_if_fail_warning@plt>
   16388:	mov	r4, r3
   1638c:	ldr	r3, [r0]
   16390:	mov	r5, r0
   16394:	tst	r3, #536870912	; 0x20000000
   16398:	bne	163d4 <g_strcmp0@plt+0x554>
   1639c:	mov	r0, r4
   163a0:	bl	15bd4 <g_value_peek_pointer@plt>
   163a4:	mov	r7, r0
   163a8:	ldr	r0, [r5, #8]
   163ac:	cmp	r6, #0
   163b0:	ldreq	r6, [r5, #16]
   163b4:	str	r0, [sp, #24]
   163b8:	mov	ip, r6
   163bc:	mov	r0, r7
   163c0:	ldr	r3, [r4, #80]	; 0x50
   163c4:	ldr	r2, [r4, #56]	; 0x38
   163c8:	ldr	r1, [r4, #32]
   163cc:	pop	{r4, r5, r6, r7, r8, lr}
   163d0:	bx	ip
   163d4:	mov	r0, r4
   163d8:	ldr	r7, [r5, #8]
   163dc:	bl	15bd4 <g_value_peek_pointer@plt>
   163e0:	b	163ac <g_strcmp0@plt+0x52c>
   163e4:	muleq	r2, ip, lr
   163e8:	andeq	r8, r2, ip, lsl r9
   163ec:	andeq	r8, r2, ip, lsl #29
   163f0:	push	{r4, r5, r6, r7, lr}
   163f4:	sub	sp, sp, #20
   163f8:	cmp	r2, #6
   163fc:	ldr	r6, [sp, #44]	; 0x2c
   16400:	beq	1641c <g_strcmp0@plt+0x59c>
   16404:	ldr	r2, [pc, #124]	; 16488 <g_strcmp0@plt+0x608>
   16408:	ldr	r1, [pc, #124]	; 1648c <g_strcmp0@plt+0x60c>
   1640c:	ldr	r0, [pc, #124]	; 16490 <g_strcmp0@plt+0x610>
   16410:	add	sp, sp, #20
   16414:	pop	{r4, r5, r6, r7, lr}
   16418:	b	14fd4 <g_return_if_fail_warning@plt>
   1641c:	mov	r4, r3
   16420:	ldr	r3, [r0]
   16424:	mov	r5, r0
   16428:	tst	r3, #536870912	; 0x20000000
   1642c:	bne	16478 <g_strcmp0@plt+0x5f8>
   16430:	mov	r0, r4
   16434:	bl	15bd4 <g_value_peek_pointer@plt>
   16438:	mov	r7, r0
   1643c:	ldr	r0, [r5, #8]
   16440:	ldr	r2, [r4, #128]	; 0x80
   16444:	ldr	r3, [r4, #104]	; 0x68
   16448:	cmp	r6, #0
   1644c:	ldreq	r6, [r5, #16]
   16450:	str	r0, [sp, #8]
   16454:	str	r2, [sp, #4]
   16458:	str	r3, [sp]
   1645c:	mov	r0, r7
   16460:	ldr	r3, [r4, #80]	; 0x50
   16464:	ldr	r2, [r4, #56]	; 0x38
   16468:	ldr	r1, [r4, #32]
   1646c:	blx	r6
   16470:	add	sp, sp, #20
   16474:	pop	{r4, r5, r6, r7, pc}
   16478:	mov	r0, r4
   1647c:	ldr	r7, [r5, #8]
   16480:	bl	15bd4 <g_value_peek_pointer@plt>
   16484:	b	16440 <g_strcmp0@plt+0x5c0>
   16488:			; <UNDEFINED> instruction: 0x00028eb0
   1648c:	andeq	r8, r2, r4, asr r9
   16490:	andeq	r8, r2, ip, lsl #29
   16494:	push	{r4, lr}
   16498:	bl	17058 <g_strcmp0@plt+0x11d8>
   1649c:	cmp	r0, #60	; 0x3c
   164a0:	bhi	164ac <g_strcmp0@plt+0x62c>
   164a4:	mov	r0, #1
   164a8:	pop	{r4, pc}
   164ac:	ldr	r2, [pc, #28]	; 164d0 <g_strcmp0@plt+0x650>
   164b0:	mov	r1, #128	; 0x80
   164b4:	ldr	r0, [pc, #24]	; 164d4 <g_strcmp0@plt+0x654>
   164b8:	bl	151f0 <g_log@plt>
   164bc:	ldr	r3, [pc, #20]	; 164d8 <g_strcmp0@plt+0x658>
   164c0:	ldr	r0, [r3]
   164c4:	bl	15214 <g_main_loop_quit@plt>
   164c8:	mov	r0, #0
   164cc:	pop	{r4, pc}
   164d0:	andeq	r8, r2, r4, asr #29
   164d4:	andeq	r8, r2, ip, lsl #29
   164d8:	andeq	r1, r4, ip, asr r5
   164dc:	push	{lr}		; (str lr, [sp, #-4]!)
   164e0:	sub	sp, sp, #20
   164e4:	ldr	r0, [pc, #48]	; 1651c <g_strcmp0@plt+0x69c>
   164e8:	bl	15748 <g_intern_static_string@plt>
   164ec:	ldr	r1, [pc, #44]	; 16520 <g_strcmp0@plt+0x6a0>
   164f0:	mov	r2, #0
   164f4:	mov	r3, #16
   164f8:	stmib	sp, {r1, r2}
   164fc:	str	r3, [sp]
   16500:	mov	r2, #68	; 0x44
   16504:	ldr	r3, [pc, #24]	; 16524 <g_strcmp0@plt+0x6a4>
   16508:	mov	r1, r0
   1650c:	mov	r0, #80	; 0x50
   16510:	bl	14fe0 <g_type_register_static_simple@plt>
   16514:	add	sp, sp, #20
   16518:	pop	{pc}		; (ldr pc, [sp], #4)
   1651c:	muleq	r2, r8, r0
   16520:	andeq	r6, r1, r4, asr r9
   16524:	andeq	r6, r1, r8, lsr #10
   16528:	push	{r4, lr}
   1652c:	mov	r4, r0
   16530:	bl	15c58 <g_type_class_peek_parent@plt>
   16534:	ldr	r1, [pc, #64]	; 1657c <g_strcmp0@plt+0x6fc>
   16538:	ldr	r3, [r1, #4]
   1653c:	cmp	r3, #0
   16540:	str	r0, [r1]
   16544:	bne	1656c <g_strcmp0@plt+0x6ec>
   16548:	mov	r1, #80	; 0x50
   1654c:	mov	r0, r4
   16550:	bl	15dc0 <g_type_check_class_cast@plt>
   16554:	ldr	r3, [pc, #36]	; 16580 <g_strcmp0@plt+0x700>
   16558:	mov	r1, #28
   1655c:	str	r3, [r0, #24]
   16560:	mov	r0, r4
   16564:	pop	{r4, lr}
   16568:	b	15988 <g_type_class_add_private@plt>
   1656c:	add	r1, r1, #4
   16570:	mov	r0, r4
   16574:	bl	15028 <g_type_class_adjust_private_offset@plt>
   16578:	b	16548 <g_strcmp0@plt+0x6c8>
   1657c:	andeq	r1, r4, r0, ror #10
   16580:	andeq	r6, r1, r4, lsl sl
   16584:	ldr	r3, [r1, #12]
   16588:	push	{r4, lr}
   1658c:	mov	r4, r0
   16590:	ldr	r2, [r3, #12]
   16594:	ldr	r0, [r3, #8]
   16598:	cmp	r2, #0
   1659c:	subne	r2, r2, #1
   165a0:	strne	r2, [r3, #12]
   165a4:	bl	15688 <g_timer_reset@plt>
   165a8:	mov	r0, r4
   165ac:	pop	{r4, lr}
   165b0:	b	15b5c <g_object_unref@plt>
   165b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165b8:	sub	sp, sp, #36	; 0x24
   165bc:	mov	r8, r0
   165c0:	str	r1, [sp, #24]
   165c4:	mov	r0, r2
   165c8:	ldr	r1, [pc, #756]	; 168c4 <g_strcmp0@plt+0xa44>
   165cc:	mvn	r2, #0
   165d0:	bl	1555c <g_strsplit@plt>
   165d4:	mov	r4, r0
   165d8:	str	r0, [sp, #20]
   165dc:	bl	157a8 <g_strv_length@plt>
   165e0:	cmp	r0, #0
   165e4:	beq	166e0 <g_strcmp0@plt+0x860>
   165e8:	add	r0, r4, r0, lsl #2
   165ec:	sub	r4, r4, #4
   165f0:	ldr	sl, [pc, #720]	; 168c8 <g_strcmp0@plt+0xa48>
   165f4:	ldr	fp, [pc, #720]	; 168cc <g_strcmp0@plt+0xa4c>
   165f8:	sub	r9, r0, #4
   165fc:	mov	r5, r4
   16600:	b	16638 <g_strcmp0@plt+0x7b8>
   16604:	bl	15718 <pk_bitfield_from_enums@plt>
   16608:	mvn	ip, #0
   1660c:	mov	r2, #4
   16610:	mov	r3, #3
   16614:	stmib	sp, {r2, ip}
   16618:	str	r3, [sp]
   1661c:	mov	r1, r6
   16620:	mov	r3, #2
   16624:	mov	r2, #1
   16628:	bl	15718 <pk_bitfield_from_enums@plt>
   1662c:	cmp	r5, r9
   16630:	strd	r0, [r8]
   16634:	beq	16678 <g_strcmp0@plt+0x7f8>
   16638:	mov	r1, sl
   1663c:	ldr	r0, [r5, #4]!
   16640:	bl	15e80 <g_strcmp0@plt>
   16644:	mvn	r1, #0
   16648:	subs	r6, r0, #0
   1664c:	mov	r0, #5
   16650:	beq	16604 <g_strcmp0@plt+0x784>
   16654:	mov	r1, fp
   16658:	ldr	r0, [r5]
   1665c:	bl	15e80 <g_strcmp0@plt>
   16660:	cmp	r0, #0
   16664:	moveq	r2, #0
   16668:	moveq	r3, #0
   1666c:	strdeq	r2, [r8]
   16670:	cmp	r5, r9
   16674:	bne	16638 <g_strcmp0@plt+0x7b8>
   16678:	ldr	r5, [pc, #592]	; 168d0 <g_strcmp0@plt+0xa50>
   1667c:	ldr	r6, [pc, #592]	; 168d4 <g_strcmp0@plt+0xa54>
   16680:	ldr	r7, [pc, #592]	; 168d8 <g_strcmp0@plt+0xa58>
   16684:	ldr	sl, [pc, #592]	; 168dc <g_strcmp0@plt+0xa5c>
   16688:	ldr	fp, [pc, #592]	; 168e0 <g_strcmp0@plt+0xa60>
   1668c:	b	166a4 <g_strcmp0@plt+0x824>
   16690:	ldr	r3, [r8]
   16694:	orr	r3, r3, #1
   16698:	str	r3, [r8]
   1669c:	cmp	r4, r9
   166a0:	beq	166e0 <g_strcmp0@plt+0x860>
   166a4:	mov	r1, r5
   166a8:	ldr	r0, [r4, #4]!
   166ac:	bl	15e80 <g_strcmp0@plt>
   166b0:	cmp	r0, #0
   166b4:	beq	16690 <g_strcmp0@plt+0x810>
   166b8:	mov	r1, r6
   166bc:	ldr	r0, [r4]
   166c0:	bl	15e80 <g_strcmp0@plt>
   166c4:	cmp	r0, #0
   166c8:	bne	166f0 <g_strcmp0@plt+0x870>
   166cc:	ldr	r3, [r8]
   166d0:	cmp	r4, r9
   166d4:	orr	r3, r3, #2
   166d8:	str	r3, [r8]
   166dc:	bne	166a4 <g_strcmp0@plt+0x824>
   166e0:	ldr	r0, [sp, #20]
   166e4:	add	sp, sp, #36	; 0x24
   166e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166ec:	b	15790 <g_strfreev@plt>
   166f0:	mov	r1, r7
   166f4:	ldr	r0, [r4]
   166f8:	bl	15e80 <g_strcmp0@plt>
   166fc:	cmp	r0, #0
   16700:	ldreq	r3, [r8]
   16704:	orreq	r3, r3, #4
   16708:	streq	r3, [r8]
   1670c:	beq	1669c <g_strcmp0@plt+0x81c>
   16710:	mov	r1, sl
   16714:	ldr	r0, [r4]
   16718:	bl	15e80 <g_strcmp0@plt>
   1671c:	cmp	r0, #0
   16720:	ldreq	r3, [r8]
   16724:	orreq	r3, r3, #8
   16728:	streq	r3, [r8]
   1672c:	beq	1669c <g_strcmp0@plt+0x81c>
   16730:	mov	r1, fp
   16734:	ldr	r0, [r4]
   16738:	bl	15e80 <g_strcmp0@plt>
   1673c:	cmp	r0, #0
   16740:	ldreq	r3, [r8]
   16744:	orreq	r3, r3, #16
   16748:	streq	r3, [r8]
   1674c:	beq	1669c <g_strcmp0@plt+0x81c>
   16750:	ldr	r1, [pc, #396]	; 168e4 <g_strcmp0@plt+0xa64>
   16754:	ldr	r0, [r4]
   16758:	bl	15e80 <g_strcmp0@plt>
   1675c:	cmp	r0, #0
   16760:	bne	1679c <g_strcmp0@plt+0x91c>
   16764:	mvn	r1, #0
   16768:	mov	r0, #5
   1676c:	bl	15718 <pk_bitfield_from_enums@plt>
   16770:	mov	ip, #1
   16774:	ldr	r2, [r8]
   16778:	sub	r3, r0, #32
   1677c:	rsb	r1, r0, #32
   16780:	lsl	r3, ip, r3
   16784:	orr	r3, r3, ip, lsr r1
   16788:	ldr	r1, [r8, #4]
   1678c:	orr	r2, r2, ip, lsl r0
   16790:	orr	r3, r1, r3
   16794:	strd	r2, [r8]
   16798:	b	1669c <g_strcmp0@plt+0x81c>
   1679c:	ldr	r1, [pc, #324]	; 168e8 <g_strcmp0@plt+0xa68>
   167a0:	ldr	r0, [r4]
   167a4:	bl	15e80 <g_strcmp0@plt>
   167a8:	cmp	r0, #0
   167ac:	ldreq	r3, [r8]
   167b0:	biceq	r3, r3, #1
   167b4:	streq	r3, [r8]
   167b8:	beq	1669c <g_strcmp0@plt+0x81c>
   167bc:	ldr	r1, [pc, #296]	; 168ec <g_strcmp0@plt+0xa6c>
   167c0:	ldr	r0, [r4]
   167c4:	bl	15e80 <g_strcmp0@plt>
   167c8:	cmp	r0, #0
   167cc:	ldreq	r3, [r8]
   167d0:	biceq	r3, r3, #2
   167d4:	streq	r3, [r8]
   167d8:	beq	1669c <g_strcmp0@plt+0x81c>
   167dc:	ldr	r1, [pc, #268]	; 168f0 <g_strcmp0@plt+0xa70>
   167e0:	ldr	r0, [r4]
   167e4:	bl	15e80 <g_strcmp0@plt>
   167e8:	cmp	r0, #0
   167ec:	ldreq	r3, [r8]
   167f0:	biceq	r3, r3, #4
   167f4:	streq	r3, [r8]
   167f8:	beq	1669c <g_strcmp0@plt+0x81c>
   167fc:	ldr	r1, [pc, #240]	; 168f4 <g_strcmp0@plt+0xa74>
   16800:	ldr	r0, [r4]
   16804:	bl	15e80 <g_strcmp0@plt>
   16808:	cmp	r0, #0
   1680c:	ldreq	r3, [r8]
   16810:	biceq	r3, r3, #8
   16814:	streq	r3, [r8]
   16818:	beq	1669c <g_strcmp0@plt+0x81c>
   1681c:	ldr	r1, [pc, #212]	; 168f8 <g_strcmp0@plt+0xa78>
   16820:	ldr	r0, [r4]
   16824:	bl	15e80 <g_strcmp0@plt>
   16828:	cmp	r0, #0
   1682c:	ldreq	r3, [r8]
   16830:	biceq	r3, r3, #16
   16834:	streq	r3, [r8]
   16838:	beq	1669c <g_strcmp0@plt+0x81c>
   1683c:	ldr	r1, [pc, #184]	; 168fc <g_strcmp0@plt+0xa7c>
   16840:	ldr	r0, [r4]
   16844:	bl	15e80 <g_strcmp0@plt>
   16848:	subs	r3, r0, #0
   1684c:	str	r3, [sp, #28]
   16850:	bne	16890 <g_strcmp0@plt+0xa10>
   16854:	mvn	r1, #0
   16858:	mov	r0, #5
   1685c:	bl	15718 <pk_bitfield_from_enums@plt>
   16860:	mov	ip, #1
   16864:	ldr	r3, [sp, #28]
   16868:	sub	r2, r0, #32
   1686c:	rsb	r1, r0, #32
   16870:	orr	r3, r3, ip, lsl r2
   16874:	ldr	r2, [r8]
   16878:	orr	r3, r3, ip, lsr r1
   1687c:	ldr	r1, [r8, #4]
   16880:	bic	r2, r2, ip, lsl r0
   16884:	bic	r3, r1, r3
   16888:	strd	r2, [r8]
   1688c:	b	1669c <g_strcmp0@plt+0x81c>
   16890:	ldr	r1, [pc, #104]	; 16900 <g_strcmp0@plt+0xa80>
   16894:	ldr	r0, [r4]
   16898:	bl	1561c <g_str_has_prefix@plt>
   1689c:	cmp	r0, #0
   168a0:	beq	1669c <g_strcmp0@plt+0x81c>
   168a4:	ldr	r0, [r4]
   168a8:	mov	r2, #10
   168ac:	add	r0, r0, #8
   168b0:	mov	r1, #0
   168b4:	bl	15070 <strtol@plt>
   168b8:	ldr	r3, [sp, #24]
   168bc:	str	r0, [r3]
   168c0:	b	1669c <g_strcmp0@plt+0x81c>
   168c4:	andeq	r9, r2, r0, lsr #1
   168c8:	andeq	r9, r2, r4, lsr #1
   168cc:	andeq	r9, r2, ip, lsr #1
   168d0:	strheq	r9, [r2], -r4
   168d4:	andeq	r9, r2, r8, asr #1
   168d8:	ldrdeq	r9, [r2], -ip
   168dc:	strdeq	r9, [r2], -r4
   168e0:	andeq	r9, r2, r4, lsl #2
   168e4:	andeq	r9, r2, r4, lsl r1
   168e8:	andeq	r9, r2, r4, lsr #2
   168ec:	andeq	r9, r2, r8, lsr r1
   168f0:	andeq	r9, r2, ip, asr #2
   168f4:	andeq	r9, r2, r4, ror #2
   168f8:	andeq	r9, r2, r4, ror r1
   168fc:	andeq	r9, r2, r4, lsl #3
   16900:	muleq	r2, r4, r1
   16904:	push	{r4, lr}
   16908:	mcr	15, 0, r0, cr7, cr10, {5}
   1690c:	ldr	r4, [pc, #60]	; 16950 <g_strcmp0@plt+0xad0>
   16910:	ldr	r3, [r4, #8]
   16914:	mcr	15, 0, r0, cr7, cr10, {5}
   16918:	cmp	r3, #0
   1691c:	beq	16928 <g_strcmp0@plt+0xaa8>
   16920:	ldr	r0, [r4, #8]
   16924:	pop	{r4, pc}
   16928:	add	r0, r4, #8
   1692c:	bl	1567c <g_once_init_enter@plt>
   16930:	cmp	r0, #0
   16934:	beq	16920 <g_strcmp0@plt+0xaa0>
   16938:	bl	164dc <g_strcmp0@plt+0x65c>
   1693c:	mov	r1, r0
   16940:	add	r0, r4, #8
   16944:	bl	15b98 <g_once_init_leave@plt>
   16948:	ldr	r0, [r4, #8]
   1694c:	pop	{r4, pc}
   16950:	andeq	r1, r4, r0, ror #10
   16954:	push	{r4, r5, r6, r7, r8, r9, lr}
   16958:	sub	sp, sp, #12
   1695c:	mov	r4, r0
   16960:	bl	16904 <g_strcmp0@plt+0xa84>
   16964:	mov	r6, #0
   16968:	ldr	r5, [pc, #152]	; 16a08 <g_strcmp0@plt+0xb88>
   1696c:	ldr	r8, [pc, #152]	; 16a0c <g_strcmp0@plt+0xb8c>
   16970:	mov	r1, r0
   16974:	mov	r0, r4
   16978:	bl	155f8 <g_type_instance_get_private@plt>
   1697c:	mvn	r3, #0
   16980:	mov	r7, r0
   16984:	str	r0, [r4, #12]
   16988:	str	r3, [r7, #4]
   1698c:	ldr	r0, [pc, #124]	; 16a10 <g_strcmp0@plt+0xb90>
   16990:	bl	14f8c <g_settings_new@plt>
   16994:	ldr	r9, [r4, #12]
   16998:	str	r0, [r7]
   1699c:	bl	20368 <g_strcmp0@plt+0xa4e8>
   169a0:	ldr	r7, [r4, #12]
   169a4:	str	r0, [r9, #16]
   169a8:	bl	15ad8 <g_timer_new@plt>
   169ac:	mov	r1, r6
   169b0:	str	r0, [r7, #8]
   169b4:	mov	r0, r6
   169b8:	bl	153b8 <dbus_g_bus_get@plt>
   169bc:	mov	r3, r5
   169c0:	mov	r2, r8
   169c4:	mov	r1, r5
   169c8:	str	r6, [sp]
   169cc:	ldr	r7, [r4, #12]
   169d0:	bl	14efc <dbus_g_proxy_new_for_name_owner@plt>
   169d4:	mov	r1, r6
   169d8:	str	r0, [r7, #20]
   169dc:	mov	r0, #1
   169e0:	bl	153b8 <dbus_g_bus_get@plt>
   169e4:	str	r6, [sp]
   169e8:	mov	r2, r8
   169ec:	mov	r3, r5
   169f0:	mov	r1, r5
   169f4:	ldr	r4, [r4, #12]
   169f8:	bl	14efc <dbus_g_proxy_new_for_name_owner@plt>
   169fc:	str	r0, [r4, #24]
   16a00:	add	sp, sp, #12
   16a04:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16a08:	andeq	r8, r2, r4, lsl #31
   16a0c:			; <UNDEFINED> instruction: 0x000291b4
   16a10:	andeq	r9, r2, r0, lsr #3
   16a14:	push	{r4, r5, r6, lr}
   16a18:	mov	r5, r0
   16a1c:	bl	16904 <g_strcmp0@plt+0xa84>
   16a20:	cmp	r5, #0
   16a24:	beq	16acc <g_strcmp0@plt+0xc4c>
   16a28:	ldr	r3, [r5]
   16a2c:	cmp	r3, #0
   16a30:	beq	16a40 <g_strcmp0@plt+0xbc0>
   16a34:	ldr	r3, [r3]
   16a38:	cmp	r3, r0
   16a3c:	beq	16a54 <g_strcmp0@plt+0xbd4>
   16a40:	mov	r1, r0
   16a44:	mov	r0, r5
   16a48:	bl	159dc <g_type_check_instance_is_a@plt>
   16a4c:	cmp	r0, #0
   16a50:	beq	16acc <g_strcmp0@plt+0xc4c>
   16a54:	bl	16904 <g_strcmp0@plt+0xa84>
   16a58:	mov	r1, r0
   16a5c:	mov	r0, r5
   16a60:	bl	15148 <g_type_check_instance_cast@plt>
   16a64:	ldr	r3, [r0, #12]
   16a68:	mov	r4, r0
   16a6c:	cmp	r3, #0
   16a70:	beq	16ae0 <g_strcmp0@plt+0xc60>
   16a74:	ldr	r0, [r3, #8]
   16a78:	bl	1513c <g_timer_destroy@plt>
   16a7c:	ldr	r3, [r4, #12]
   16a80:	ldr	r0, [r3]
   16a84:	bl	15b5c <g_object_unref@plt>
   16a88:	ldr	r3, [r4, #12]
   16a8c:	ldr	r0, [r3, #16]
   16a90:	bl	15b5c <g_object_unref@plt>
   16a94:	ldr	r3, [r4, #12]
   16a98:	ldr	r0, [r3, #20]
   16a9c:	bl	15b5c <g_object_unref@plt>
   16aa0:	ldr	r3, [r4, #12]
   16aa4:	ldr	r0, [r3, #24]
   16aa8:	bl	15b5c <g_object_unref@plt>
   16aac:	ldr	r3, [pc, #64]	; 16af4 <g_strcmp0@plt+0xc74>
   16ab0:	mov	r1, #80	; 0x50
   16ab4:	ldr	r0, [r3]
   16ab8:	bl	15dc0 <g_type_check_class_cast@plt>
   16abc:	ldr	r3, [r0, #24]
   16ac0:	mov	r0, r5
   16ac4:	pop	{r4, r5, r6, lr}
   16ac8:	bx	r3
   16acc:	ldr	r2, [pc, #36]	; 16af8 <g_strcmp0@plt+0xc78>
   16ad0:	ldr	r1, [pc, #36]	; 16afc <g_strcmp0@plt+0xc7c>
   16ad4:	ldr	r0, [pc, #36]	; 16b00 <g_strcmp0@plt+0xc80>
   16ad8:	pop	{r4, r5, r6, lr}
   16adc:	b	14fd4 <g_return_if_fail_warning@plt>
   16ae0:	ldr	r2, [pc, #28]	; 16b04 <g_strcmp0@plt+0xc84>
   16ae4:	ldr	r1, [pc, #16]	; 16afc <g_strcmp0@plt+0xc7c>
   16ae8:	ldr	r0, [pc, #16]	; 16b00 <g_strcmp0@plt+0xc80>
   16aec:	pop	{r4, r5, r6, lr}
   16af0:	b	14fd4 <g_return_if_fail_warning@plt>
   16af4:	andeq	r1, r4, r0, ror #10
   16af8:	ldrdeq	r9, [r2], -r0
   16afc:	andeq	r9, r2, r0, asr r0
   16b00:	andeq	r8, r2, ip, lsl #29
   16b04:	andeq	r9, r2, r4, ror #3
   16b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b0c:	mov	r6, #0
   16b10:	ldr	r8, [pc, #1108]	; 16f6c <g_strcmp0@plt+0x10ec>
   16b14:	sub	sp, sp, #60	; 0x3c
   16b18:	mov	r7, #0
   16b1c:	mov	r4, r0
   16b20:	ldr	r0, [r8]
   16b24:	strd	r6, [sp, #40]	; 0x28
   16b28:	mov	r9, r1
   16b2c:	mov	fp, r2
   16b30:	mov	sl, r3
   16b34:	str	r0, [sp, #52]	; 0x34
   16b38:	bl	1d588 <g_strcmp0@plt+0x7708>
   16b3c:	ldr	r3, [r4, #12]
   16b40:	mvn	r2, #0
   16b44:	strd	r6, [sp, #40]	; 0x28
   16b48:	ldr	r1, [pc, #1056]	; 16f70 <g_strcmp0@plt+0x10f0>
   16b4c:	str	r2, [r3, #4]
   16b50:	mov	r5, r0
   16b54:	ldr	r0, [r3]
   16b58:	bl	15c10 <g_settings_get_string@plt>
   16b5c:	subs	r6, r0, #0
   16b60:	addeq	r7, sp, #40	; 0x28
   16b64:	beq	16b94 <g_strcmp0@plt+0xd14>
   16b68:	ldr	r2, [pc, #1028]	; 16f74 <g_strcmp0@plt+0x10f4>
   16b6c:	mov	r1, #128	; 0x80
   16b70:	ldr	r0, [pc, #1024]	; 16f78 <g_strcmp0@plt+0x10f8>
   16b74:	mov	r3, r6
   16b78:	bl	151f0 <g_log@plt>
   16b7c:	ldr	r1, [r4, #12]
   16b80:	add	r7, sp, #40	; 0x28
   16b84:	add	r1, r1, #4
   16b88:	mov	r0, r7
   16b8c:	mov	r2, r6
   16b90:	bl	165b4 <g_strcmp0@plt+0x734>
   16b94:	mov	r0, r6
   16b98:	bl	15874 <g_free@plt>
   16b9c:	ldr	r1, [r4, #12]
   16ba0:	mov	r2, fp
   16ba4:	add	r1, r1, #4
   16ba8:	mov	r0, r7
   16bac:	bl	165b4 <g_strcmp0@plt+0x734>
   16bb0:	mov	r3, fp
   16bb4:	ldr	r2, [pc, #960]	; 16f7c <g_strcmp0@plt+0x10fc>
   16bb8:	mov	r1, #128	; 0x80
   16bbc:	ldr	r0, [pc, #948]	; 16f78 <g_strcmp0@plt+0x10f8>
   16bc0:	bl	151f0 <g_log@plt>
   16bc4:	ldr	r3, [r4, #12]
   16bc8:	ldr	r1, [pc, #944]	; 16f80 <g_strcmp0@plt+0x1100>
   16bcc:	ldr	r0, [r3]
   16bd0:	bl	15c10 <g_settings_get_string@plt>
   16bd4:	subs	r6, r0, #0
   16bd8:	beq	16c04 <g_strcmp0@plt+0xd84>
   16bdc:	ldr	r2, [pc, #928]	; 16f84 <g_strcmp0@plt+0x1104>
   16be0:	mov	r1, #128	; 0x80
   16be4:	ldr	r0, [pc, #908]	; 16f78 <g_strcmp0@plt+0x10f8>
   16be8:	mov	r3, r6
   16bec:	bl	151f0 <g_log@plt>
   16bf0:	ldr	r1, [r4, #12]
   16bf4:	mov	r0, r7
   16bf8:	add	r1, r1, #4
   16bfc:	mov	r2, r6
   16c00:	bl	165b4 <g_strcmp0@plt+0x734>
   16c04:	mov	r0, r6
   16c08:	bl	15874 <g_free@plt>
   16c0c:	ldr	r3, [sp, #40]	; 0x28
   16c10:	ldr	r2, [pc, #880]	; 16f88 <g_strcmp0@plt+0x1108>
   16c14:	mov	r1, #128	; 0x80
   16c18:	ldr	r0, [pc, #856]	; 16f78 <g_strcmp0@plt+0x10f8>
   16c1c:	bl	151f0 <g_log@plt>
   16c20:	ldrd	r2, [sp, #40]	; 0x28
   16c24:	mov	r0, r5
   16c28:	bl	1a734 <g_strcmp0@plt+0x48b4>
   16c2c:	cmp	r9, #0
   16c30:	bne	16df0 <g_strcmp0@plt+0xf70>
   16c34:	mov	r1, sl
   16c38:	mov	r0, r5
   16c3c:	bl	1a854 <g_strcmp0@plt+0x49d4>
   16c40:	mov	r1, r9
   16c44:	mov	r0, r5
   16c48:	bl	1a9a0 <g_strcmp0@plt+0x4b20>
   16c4c:	mov	r0, sl
   16c50:	bl	1528c <dbus_g_method_get_sender@plt>
   16c54:	mov	r3, #0
   16c58:	str	r3, [sp, #28]
   16c5c:	mov	r7, r0
   16c60:	bl	16904 <g_strcmp0@plt+0xa84>
   16c64:	ldr	r3, [r4]
   16c68:	cmp	r3, #0
   16c6c:	beq	16c7c <g_strcmp0@plt+0xdfc>
   16c70:	ldr	r3, [r3]
   16c74:	cmp	r3, r0
   16c78:	beq	16c90 <g_strcmp0@plt+0xe10>
   16c7c:	mov	r1, r0
   16c80:	mov	r0, r4
   16c84:	bl	159dc <g_type_check_instance_is_a@plt>
   16c88:	subs	r6, r0, #0
   16c8c:	beq	16cf8 <g_strcmp0@plt+0xe78>
   16c90:	cmp	r7, #0
   16c94:	beq	16e30 <g_strcmp0@plt+0xfb0>
   16c98:	bl	16904 <g_strcmp0@plt+0xa84>
   16c9c:	ldr	r3, [r4]
   16ca0:	cmp	r3, #0
   16ca4:	beq	16cb4 <g_strcmp0@plt+0xe34>
   16ca8:	ldr	r3, [r3]
   16cac:	cmp	r0, r3
   16cb0:	beq	16d50 <g_strcmp0@plt+0xed0>
   16cb4:	mov	r1, r0
   16cb8:	mov	r0, r4
   16cbc:	bl	159dc <g_type_check_instance_is_a@plt>
   16cc0:	cmp	r0, #0
   16cc4:	bne	16d50 <g_strcmp0@plt+0xed0>
   16cc8:	ldr	r2, [pc, #700]	; 16f8c <g_strcmp0@plt+0x110c>
   16ccc:	ldr	r1, [pc, #700]	; 16f90 <g_strcmp0@plt+0x1110>
   16cd0:	ldr	r0, [pc, #672]	; 16f78 <g_strcmp0@plt+0x10f8>
   16cd4:	bl	14fd4 <g_return_if_fail_warning@plt>
   16cd8:	ldr	r2, [pc, #692]	; 16f94 <g_strcmp0@plt+0x1114>
   16cdc:	mov	r1, #16
   16ce0:	ldr	r0, [pc, #656]	; 16f78 <g_strcmp0@plt+0x10f8>
   16ce4:	bl	151f0 <g_log@plt>
   16ce8:	mov	r0, #0
   16cec:	bl	15874 <g_free@plt>
   16cf0:	mov	r6, #0
   16cf4:	b	16d08 <g_strcmp0@plt+0xe88>
   16cf8:	ldr	r2, [pc, #652]	; 16f8c <g_strcmp0@plt+0x110c>
   16cfc:	ldr	r1, [pc, #660]	; 16f98 <g_strcmp0@plt+0x1118>
   16d00:	ldr	r0, [pc, #624]	; 16f78 <g_strcmp0@plt+0x10f8>
   16d04:	bl	14fd4 <g_return_if_fail_warning@plt>
   16d08:	ldr	r3, [r4, #12]
   16d0c:	ldr	r0, [r3, #8]
   16d10:	bl	15688 <g_timer_reset@plt>
   16d14:	ldr	r2, [r4, #12]
   16d18:	mov	r0, r7
   16d1c:	ldr	r3, [r2, #12]
   16d20:	add	r3, r3, #1
   16d24:	str	r3, [r2, #12]
   16d28:	bl	15874 <g_free@plt>
   16d2c:	mov	r0, r6
   16d30:	bl	15874 <g_free@plt>
   16d34:	ldr	r2, [sp, #52]	; 0x34
   16d38:	ldr	r3, [r8]
   16d3c:	mov	r0, r5
   16d40:	cmp	r2, r3
   16d44:	bne	16f68 <g_strcmp0@plt+0x10e8>
   16d48:	add	sp, sp, #60	; 0x3c
   16d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d50:	ldr	r3, [r4, #12]
   16d54:	ldr	r2, [r3, #20]
   16d58:	cmp	r2, #0
   16d5c:	beq	16e48 <g_strcmp0@plt+0xfc8>
   16d60:	ldr	r0, [r3, #24]
   16d64:	cmp	r0, #0
   16d68:	beq	16e5c <g_strcmp0@plt+0xfdc>
   16d6c:	mov	r1, #0
   16d70:	mov	r3, #28
   16d74:	add	ip, sp, #32
   16d78:	str	r1, [sp, #16]
   16d7c:	str	r1, [sp, #4]
   16d80:	str	ip, [sp, #12]
   16d84:	str	r3, [sp, #8]
   16d88:	mvn	ip, #0
   16d8c:	str	r1, [sp, #36]	; 0x24
   16d90:	str	r7, [sp]
   16d94:	add	r2, sp, #36	; 0x24
   16d98:	mov	r3, #64	; 0x40
   16d9c:	ldr	r1, [pc, #504]	; 16f9c <g_strcmp0@plt+0x111c>
   16da0:	str	ip, [sp, #32]
   16da4:	bl	15310 <dbus_g_proxy_call@plt>
   16da8:	cmp	r0, #0
   16dac:	beq	16ed4 <g_strcmp0@plt+0x1054>
   16db0:	ldr	r1, [sp, #32]
   16db4:	cmn	r1, #1
   16db8:	beq	16e70 <g_strcmp0@plt+0xff0>
   16dbc:	ldr	r0, [pc, #476]	; 16fa0 <g_strcmp0@plt+0x1120>
   16dc0:	bl	15490 <g_strdup_printf@plt>
   16dc4:	add	r1, sp, #28
   16dc8:	mov	r9, r0
   16dcc:	bl	151d8 <g_file_read_link@plt>
   16dd0:	subs	r6, r0, #0
   16dd4:	beq	16f04 <g_strcmp0@plt+0x1084>
   16dd8:	mov	r0, r9
   16ddc:	bl	15874 <g_free@plt>
   16de0:	mov	r1, r6
   16de4:	mov	r0, r5
   16de8:	bl	1d3bc <g_strcmp0@plt+0x753c>
   16dec:	b	16d08 <g_strcmp0@plt+0xe88>
   16df0:	ldr	r3, [r4, #12]
   16df4:	mov	r1, r9
   16df8:	ldr	r0, [r3, #16]
   16dfc:	bl	1fddc <g_strcmp0@plt+0x9f5c>
   16e00:	subs	r6, r0, #0
   16e04:	bne	16f30 <g_strcmp0@plt+0x10b0>
   16e08:	mov	r1, sl
   16e0c:	mov	r0, r5
   16e10:	bl	1a854 <g_strcmp0@plt+0x49d4>
   16e14:	mov	r1, r6
   16e18:	mov	r0, r5
   16e1c:	bl	1a9a0 <g_strcmp0@plt+0x4b20>
   16e20:	mov	r1, r9
   16e24:	mov	r0, r5
   16e28:	bl	1a8f0 <g_strcmp0@plt+0x4a70>
   16e2c:	b	16c4c <g_strcmp0@plt+0xdcc>
   16e30:	ldr	r2, [pc, #364]	; 16fa4 <g_strcmp0@plt+0x1124>
   16e34:	ldr	r1, [pc, #348]	; 16f98 <g_strcmp0@plt+0x1118>
   16e38:	ldr	r0, [pc, #312]	; 16f78 <g_strcmp0@plt+0x10f8>
   16e3c:	bl	14fd4 <g_return_if_fail_warning@plt>
   16e40:	mov	r6, r7
   16e44:	b	16d08 <g_strcmp0@plt+0xe88>
   16e48:	ldr	r2, [pc, #344]	; 16fa8 <g_strcmp0@plt+0x1128>
   16e4c:	ldr	r1, [pc, #316]	; 16f90 <g_strcmp0@plt+0x1110>
   16e50:	ldr	r0, [pc, #288]	; 16f78 <g_strcmp0@plt+0x10f8>
   16e54:	bl	14fd4 <g_return_if_fail_warning@plt>
   16e58:	b	16cd8 <g_strcmp0@plt+0xe58>
   16e5c:	ldr	r2, [pc, #328]	; 16fac <g_strcmp0@plt+0x112c>
   16e60:	ldr	r1, [pc, #296]	; 16f90 <g_strcmp0@plt+0x1110>
   16e64:	ldr	r0, [pc, #268]	; 16f78 <g_strcmp0@plt+0x10f8>
   16e68:	bl	14fd4 <g_return_if_fail_warning@plt>
   16e6c:	b	16cd8 <g_strcmp0@plt+0xe58>
   16e70:	ldr	r3, [r4, #12]
   16e74:	mov	ip, #0
   16e78:	add	r1, sp, #32
   16e7c:	ldr	r0, [r3, #20]
   16e80:	mov	r3, #28
   16e84:	str	r1, [sp, #12]
   16e88:	str	r3, [sp, #8]
   16e8c:	add	r2, sp, #36	; 0x24
   16e90:	str	r7, [sp]
   16e94:	str	ip, [sp, #16]
   16e98:	str	ip, [sp, #4]
   16e9c:	mov	r3, #64	; 0x40
   16ea0:	ldr	r1, [pc, #244]	; 16f9c <g_strcmp0@plt+0x111c>
   16ea4:	str	ip, [sp, #36]	; 0x24
   16ea8:	bl	15310 <dbus_g_proxy_call@plt>
   16eac:	cmp	r0, #0
   16eb0:	beq	16f44 <g_strcmp0@plt+0x10c4>
   16eb4:	ldr	r1, [sp, #32]
   16eb8:	cmn	r1, #1
   16ebc:	bne	16dbc <g_strcmp0@plt+0xf3c>
   16ec0:	ldr	r2, [pc, #232]	; 16fb0 <g_strcmp0@plt+0x1130>
   16ec4:	mov	r1, #16
   16ec8:	ldr	r0, [pc, #168]	; 16f78 <g_strcmp0@plt+0x10f8>
   16ecc:	bl	151f0 <g_log@plt>
   16ed0:	b	16cd8 <g_strcmp0@plt+0xe58>
   16ed4:	ldr	r3, [sp, #36]	; 0x24
   16ed8:	mov	r1, #128	; 0x80
   16edc:	ldr	r2, [pc, #208]	; 16fb4 <g_strcmp0@plt+0x1134>
   16ee0:	ldr	r3, [r3, #8]
   16ee4:	ldr	r0, [pc, #140]	; 16f78 <g_strcmp0@plt+0x10f8>
   16ee8:	bl	151f0 <g_log@plt>
   16eec:	ldr	r0, [sp, #36]	; 0x24
   16ef0:	bl	15064 <g_error_free@plt>
   16ef4:	ldr	r1, [sp, #32]
   16ef8:	cmn	r1, #1
   16efc:	bne	16dbc <g_strcmp0@plt+0xf3c>
   16f00:	b	16e70 <g_strcmp0@plt+0xff0>
   16f04:	ldr	r3, [sp, #28]
   16f08:	ldr	r2, [pc, #168]	; 16fb8 <g_strcmp0@plt+0x1138>
   16f0c:	mov	r1, #16
   16f10:	ldr	r3, [r3, #8]
   16f14:	ldr	r0, [pc, #92]	; 16f78 <g_strcmp0@plt+0x10f8>
   16f18:	bl	151f0 <g_log@plt>
   16f1c:	ldr	r0, [sp, #28]
   16f20:	bl	15064 <g_error_free@plt>
   16f24:	mov	r0, r9
   16f28:	bl	15874 <g_free@plt>
   16f2c:	b	16d08 <g_strcmp0@plt+0xe88>
   16f30:	ldr	r3, [r4, #12]
   16f34:	ldr	r0, [r3, #16]
   16f38:	bl	1ff24 <g_strcmp0@plt+0xa0a4>
   16f3c:	mov	r6, r0
   16f40:	b	16e08 <g_strcmp0@plt+0xf88>
   16f44:	ldr	r3, [sp, #36]	; 0x24
   16f48:	ldr	r2, [pc, #108]	; 16fbc <g_strcmp0@plt+0x113c>
   16f4c:	mov	r1, #128	; 0x80
   16f50:	ldr	r3, [r3, #8]
   16f54:	ldr	r0, [pc, #28]	; 16f78 <g_strcmp0@plt+0x10f8>
   16f58:	bl	151f0 <g_log@plt>
   16f5c:	ldr	r0, [sp, #36]	; 0x24
   16f60:	bl	15064 <g_error_free@plt>
   16f64:	b	16eb4 <g_strcmp0@plt+0x1034>
   16f68:	bl	157f0 <__stack_chk_fail@plt>
   16f6c:	andeq	r0, r4, r0, asr lr
   16f70:	strdeq	r9, [r2], -r8
   16f74:	andeq	r9, r2, r4, lsl r2
   16f78:	andeq	r8, r2, ip, lsl #29
   16f7c:	andeq	r9, r2, r4, lsr #4
   16f80:	andeq	r9, r2, r4, lsr r2
   16f84:	andeq	r9, r2, r0, asr r2
   16f88:	andeq	r9, r2, r0, ror #4
   16f8c:	andeq	r9, r2, ip, ror #4
   16f90:	andeq	r9, r2, r4, lsl #1
   16f94:	andeq	r9, r2, r8, asr r3
   16f98:	andeq	r9, r2, r4, rrx
   16f9c:	andeq	r9, r2, r0, ror #5
   16fa0:	andeq	r9, r2, r4, lsl #7
   16fa4:	andeq	r9, r2, r0, lsl #5
   16fa8:	muleq	r2, r0, r2
   16fac:			; <UNDEFINED> instruction: 0x000292b8
   16fb0:	andeq	r9, r2, r4, asr #6
   16fb4:	strdeq	r9, [r2], -ip
   16fb8:	andeq	r9, r2, ip, ror #6
   16fbc:	andeq	r9, r2, r0, lsr #6
   16fc0:	push	{r4, lr}
   16fc4:	ldr	r4, [pc, #24]	; 16fe4 <g_strcmp0@plt+0x1164>
   16fc8:	ldr	r0, [r4, #12]
   16fcc:	cmp	r0, #0
   16fd0:	popne	{r4, pc}
   16fd4:	ldr	r0, [pc, #12]	; 16fe8 <g_strcmp0@plt+0x1168>
   16fd8:	bl	15a24 <g_quark_from_static_string@plt>
   16fdc:	str	r0, [r4, #12]
   16fe0:	pop	{r4, pc}
   16fe4:	andeq	r1, r4, r0, ror #10
   16fe8:	muleq	r2, r4, r3
   16fec:	push	{r4, r5, r6, lr}
   16ff0:	ldr	r6, [pc, #84]	; 1704c <g_strcmp0@plt+0x11cc>
   16ff4:	ldr	r4, [r6, #16]
   16ff8:	cmp	r4, #0
   16ffc:	bne	17044 <g_strcmp0@plt+0x11c4>
   17000:	add	r5, r6, #20
   17004:	str	r4, [r5]
   17008:	mov	r0, r4
   1700c:	bl	154cc <pk_error_enum_to_string@plt>
   17010:	add	r5, r5, #12
   17014:	str	r0, [r5, #-8]
   17018:	mov	r0, r4
   1701c:	bl	154cc <pk_error_enum_to_string@plt>
   17020:	add	r4, r4, #1
   17024:	cmp	r4, #69	; 0x45
   17028:	str	r0, [r5, #-4]
   1702c:	bne	17004 <g_strcmp0@plt+0x1184>
   17030:	ldr	r1, [pc, #24]	; 17050 <g_strcmp0@plt+0x11d0>
   17034:	ldr	r0, [pc, #24]	; 17054 <g_strcmp0@plt+0x11d4>
   17038:	bl	15c88 <g_enum_register_static@plt>
   1703c:	mov	r4, r0
   17040:	str	r0, [r6, #16]
   17044:	mov	r0, r4
   17048:	pop	{r4, r5, r6, pc}
   1704c:	andeq	r1, r4, r0, ror #10
   17050:	andeq	r1, r4, r4, ror r5
   17054:	andeq	r9, r2, r4, lsr #7
   17058:	ldr	r3, [r0, #12]
   1705c:	push	{r4, lr}
   17060:	ldr	r1, [r3, #12]
   17064:	cmp	r1, #0
   17068:	movne	r4, #0
   1706c:	bne	17094 <g_strcmp0@plt+0x1214>
   17070:	ldr	r0, [r3, #8]
   17074:	bl	150dc <g_timer_elapsed@plt>
   17078:	ldr	r2, [pc, #28]	; 1709c <g_strcmp0@plt+0x121c>
   1707c:	mov	r1, #128	; 0x80
   17080:	ldr	r0, [pc, #24]	; 170a0 <g_strcmp0@plt+0x1220>
   17084:	vcvt.u32.f64	s15, d0
   17088:	vmov	r3, s15
   1708c:	vmov	r4, s15
   17090:	bl	151f0 <g_log@plt>
   17094:	mov	r0, r4
   17098:	pop	{r4, pc}
   1709c:			; <UNDEFINED> instruction: 0x000293b4
   170a0:	andeq	r8, r2, ip, lsl #29
   170a4:	push	{r4, r5, r6, lr}
   170a8:	mov	r4, r1
   170ac:	mov	r5, r0
   170b0:	mov	r1, #0
   170b4:	bl	16b08 <g_strcmp0@plt+0xc88>
   170b8:	mov	r3, r5
   170bc:	mov	r1, r4
   170c0:	ldr	r2, [pc, #4]	; 170cc <g_strcmp0@plt+0x124c>
   170c4:	pop	{r4, r5, r6, lr}
   170c8:	b	1aa18 <g_strcmp0@plt+0x4b98>
   170cc:	andeq	r6, r1, r4, lsl #11
   170d0:	push	{r4, r5, r6, lr}
   170d4:	mov	r4, r1
   170d8:	mov	r5, r0
   170dc:	mov	r1, #0
   170e0:	bl	16b08 <g_strcmp0@plt+0xc88>
   170e4:	mov	r3, r5
   170e8:	mov	r1, r4
   170ec:	ldr	r2, [pc, #4]	; 170f8 <g_strcmp0@plt+0x1278>
   170f0:	pop	{r4, r5, r6, lr}
   170f4:	b	1ab24 <g_strcmp0@plt+0x4ca4>
   170f8:	andeq	r6, r1, r4, lsl #11
   170fc:	push	{r4, r5, r6, lr}
   17100:	mov	r4, r2
   17104:	mov	r5, r0
   17108:	mov	r2, r3
   1710c:	ldr	r3, [sp, #16]
   17110:	bl	16b08 <g_strcmp0@plt+0xc88>
   17114:	mov	r3, r5
   17118:	mov	r1, r4
   1711c:	ldr	r2, [pc, #4]	; 17128 <g_strcmp0@plt+0x12a8>
   17120:	pop	{r4, r5, r6, lr}
   17124:	b	1ac48 <g_strcmp0@plt+0x4dc8>
   17128:	andeq	r6, r1, r4, lsl #11
   1712c:	push	{r4, r5, r6, lr}
   17130:	mov	r4, r2
   17134:	mov	r5, r0
   17138:	mov	r2, r3
   1713c:	ldr	r3, [sp, #16]
   17140:	bl	16b08 <g_strcmp0@plt+0xc88>
   17144:	mov	r3, r5
   17148:	mov	r1, r4
   1714c:	ldr	r2, [pc, #4]	; 17158 <g_strcmp0@plt+0x12d8>
   17150:	pop	{r4, r5, r6, lr}
   17154:	b	1b368 <g_strcmp0@plt+0x54e8>
   17158:	andeq	r6, r1, r4, lsl #11
   1715c:	push	{r4, r5, r6, lr}
   17160:	mov	r4, r2
   17164:	mov	r5, r0
   17168:	mov	r2, r3
   1716c:	ldr	r3, [sp, #16]
   17170:	bl	16b08 <g_strcmp0@plt+0xc88>
   17174:	mov	r3, r5
   17178:	mov	r1, r4
   1717c:	ldr	r2, [pc, #4]	; 17188 <g_strcmp0@plt+0x1308>
   17180:	pop	{r4, r5, r6, lr}
   17184:	b	1ce68 <g_strcmp0@plt+0x6fe8>
   17188:	andeq	r6, r1, r4, lsl #11
   1718c:	push	{r4, r5, r6, lr}
   17190:	mov	r4, r2
   17194:	mov	r5, r0
   17198:	mov	r2, r3
   1719c:	ldr	r3, [sp, #16]
   171a0:	bl	16b08 <g_strcmp0@plt+0xc88>
   171a4:	mov	r3, r5
   171a8:	mov	r1, r4
   171ac:	ldr	r2, [pc, #4]	; 171b8 <g_strcmp0@plt+0x1338>
   171b0:	pop	{r4, r5, r6, lr}
   171b4:	b	1affc <g_strcmp0@plt+0x517c>
   171b8:	andeq	r6, r1, r4, lsl #11
   171bc:	push	{r4, r5, r6, lr}
   171c0:	mov	r4, r2
   171c4:	mov	r5, r0
   171c8:	mov	r2, r3
   171cc:	ldr	r3, [sp, #16]
   171d0:	bl	16b08 <g_strcmp0@plt+0xc88>
   171d4:	mov	r3, r5
   171d8:	mov	r1, r4
   171dc:	ldr	r2, [pc, #4]	; 171e8 <g_strcmp0@plt+0x1368>
   171e0:	pop	{r4, r5, r6, lr}
   171e4:	b	1bd90 <g_strcmp0@plt+0x5f10>
   171e8:	andeq	r6, r1, r4, lsl #11
   171ec:	push	{r4, r5, r6, lr}
   171f0:	mov	r4, r2
   171f4:	mov	r5, r0
   171f8:	mov	r2, r3
   171fc:	ldr	r3, [sp, #16]
   17200:	bl	16b08 <g_strcmp0@plt+0xc88>
   17204:	mov	r3, r5
   17208:	mov	r1, r4
   1720c:	ldr	r2, [pc, #4]	; 17218 <g_strcmp0@plt+0x1398>
   17210:	pop	{r4, r5, r6, lr}
   17214:	b	1c198 <g_strcmp0@plt+0x6318>
   17218:	andeq	r6, r1, r4, lsl #11
   1721c:	push	{r4, r5, r6, lr}
   17220:	mov	r4, r2
   17224:	mov	r5, r0
   17228:	mov	r2, r3
   1722c:	ldr	r3, [sp, #16]
   17230:	bl	16b08 <g_strcmp0@plt+0xc88>
   17234:	mov	r3, r5
   17238:	mov	r1, r4
   1723c:	ldr	r2, [pc, #4]	; 17248 <g_strcmp0@plt+0x13c8>
   17240:	pop	{r4, r5, r6, lr}
   17244:	b	1b680 <g_strcmp0@plt+0x5800>
   17248:	andeq	r6, r1, r4, lsl #11
   1724c:	push	{r4, r5, r6, lr}
   17250:	mov	r4, r3
   17254:	mov	r5, r0
   17258:	ldrd	r2, [sp, #16]
   1725c:	bl	16b08 <g_strcmp0@plt+0xc88>
   17260:	mov	r3, r5
   17264:	mov	r1, r4
   17268:	ldr	r2, [pc, #4]	; 17274 <g_strcmp0@plt+0x13f4>
   1726c:	pop	{r4, r5, r6, lr}
   17270:	b	1c6a8 <g_strcmp0@plt+0x6828>
   17274:	andeq	r6, r1, r4, lsl #11
   17278:	push	{r4, r5, r6, lr}
   1727c:	mov	r4, r2
   17280:	mov	r5, r0
   17284:	mov	r2, r3
   17288:	ldr	r3, [sp, #16]
   1728c:	bl	16b08 <g_strcmp0@plt+0xc88>
   17290:	mov	r3, r5
   17294:	mov	r1, r4
   17298:	ldr	r2, [pc, #4]	; 172a4 <g_strcmp0@plt+0x1424>
   1729c:	pop	{r4, r5, r6, lr}
   172a0:	b	1caf0 <g_strcmp0@plt+0x6c70>
   172a4:	andeq	r6, r1, r4, lsl #11
   172a8:	push	{r4, lr}
   172ac:	bl	16904 <g_strcmp0@plt+0xa84>
   172b0:	mov	r1, #0
   172b4:	bl	14ef0 <g_object_new@plt>
   172b8:	mov	r4, r0
   172bc:	bl	16904 <g_strcmp0@plt+0xa84>
   172c0:	mov	r1, r0
   172c4:	mov	r0, r4
   172c8:	pop	{r4, lr}
   172cc:	b	15148 <g_type_check_instance_cast@plt>
   172d0:	push	{lr}		; (str lr, [sp, #-4]!)
   172d4:	sub	sp, sp, #20
   172d8:	ldr	r0, [pc, #48]	; 17310 <g_strcmp0@plt+0x1490>
   172dc:	bl	15748 <g_intern_static_string@plt>
   172e0:	ldr	r1, [pc, #44]	; 17314 <g_strcmp0@plt+0x1494>
   172e4:	mov	r2, #0
   172e8:	mov	r3, #16
   172ec:	stmib	sp, {r1, r2}
   172f0:	str	r3, [sp]
   172f4:	mov	r2, #68	; 0x44
   172f8:	ldr	r3, [pc, #24]	; 17318 <g_strcmp0@plt+0x1498>
   172fc:	mov	r1, r0
   17300:	mov	r0, #80	; 0x50
   17304:	bl	14fe0 <g_type_register_static_simple@plt>
   17308:	add	sp, sp, #20
   1730c:	pop	{pc}		; (ldr pc, [sp], #4)
   17310:	andeq	r9, r2, r8, ror #12
   17314:	ldrdeq	r9, [r1], -ip
   17318:	andeq	r7, r1, ip, ror #13
   1731c:	ldr	r3, [r0, #12]
   17320:	push	{r4, r5, r6, lr}
   17324:	mvn	r2, #0
   17328:	sub	sp, sp, #16
   1732c:	mov	r4, r0
   17330:	mov	r1, #6
   17334:	mov	r0, #3
   17338:	ldr	r5, [r3, #36]	; 0x24
   1733c:	bl	15718 <pk_bitfield_from_enums@plt>
   17340:	mov	r2, r0
   17344:	mov	r3, r1
   17348:	mov	r0, r5
   1734c:	mov	r1, #1
   17350:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   17354:	ldr	r3, [r4, #12]
   17358:	mov	r2, #5
   1735c:	ldr	r1, [pc, #140]	; 173f0 <g_strcmp0@plt+0x1570>
   17360:	mov	r0, #0
   17364:	ldr	r5, [r3, #36]	; 0x24
   17368:	bl	15880 <dcgettext@plt>
   1736c:	mov	r1, r0
   17370:	mov	r0, r5
   17374:	bl	210e0 <g_strcmp0@plt+0xb260>
   17378:	ldr	r3, [r4, #12]
   1737c:	ldr	r2, [r3, #56]	; 0x38
   17380:	cmp	r2, #0
   17384:	bne	173e0 <g_strcmp0@plt+0x1560>
   17388:	ldr	r0, [r3, #36]	; 0x24
   1738c:	bl	21f40 <g_strcmp0@plt+0xc0c0>
   17390:	ldr	r3, [r4, #12]
   17394:	ldr	r6, [r3, #8]
   17398:	mov	r5, r0
   1739c:	bl	25594 <g_strcmp0@plt+0xf714>
   173a0:	mov	r1, r0
   173a4:	mov	r0, r6
   173a8:	bl	15148 <g_type_check_instance_cast@plt>
   173ac:	mov	r1, r5
   173b0:	bl	267d4 <g_strcmp0@plt+0x10954>
   173b4:	ldr	r2, [r4, #12]
   173b8:	ldr	ip, [pc, #52]	; 173f4 <g_strcmp0@plt+0x1574>
   173bc:	ldr	r3, [pc, #52]	; 173f8 <g_strcmp0@plt+0x1578>
   173c0:	ldr	r1, [r2, #104]	; 0x68
   173c4:	ldr	r0, [r2, #8]
   173c8:	str	r4, [sp, #8]
   173cc:	stm	sp, {r4, ip}
   173d0:	mov	r2, #0
   173d4:	bl	15ab4 <pk_task_install_packages_async@plt>
   173d8:	add	sp, sp, #16
   173dc:	pop	{r4, r5, r6, pc}
   173e0:	ldr	r0, [r3, #36]	; 0x24
   173e4:	bl	22324 <g_strcmp0@plt+0xc4a4>
   173e8:	ldr	r3, [r4, #12]
   173ec:	b	17388 <g_strcmp0@plt+0x1508>
   173f0:	andeq	r9, r2, r4, ror r6
   173f4:	andeq	r9, r1, r0, lsl r6
   173f8:	andeq	sl, r1, r0, ror #5
   173fc:	push	{r4, r5, r6, r7, r8, lr}
   17400:	mov	r4, r0
   17404:	mov	r7, r1
   17408:	mov	r5, r2
   1740c:	ldr	r1, [pc, #152]	; 174ac <g_strcmp0@plt+0x162c>
   17410:	mov	r2, #5
   17414:	mov	r0, #0
   17418:	bl	15880 <dcgettext@plt>
   1741c:	ldr	r3, [r4, #12]
   17420:	ldr	r2, [r3, #64]	; 0x40
   17424:	cmp	r2, #0
   17428:	popeq	{r4, r5, r6, r7, r8, pc}
   1742c:	mov	r6, r0
   17430:	mov	r2, #0
   17434:	ldr	r0, [r3, #36]	; 0x24
   17438:	mov	r1, #3
   1743c:	mov	r3, #0
   17440:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   17444:	cmp	r5, #0
   17448:	beq	1745c <g_strcmp0@plt+0x15dc>
   1744c:	ldr	r8, [r5]
   17450:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17454:	cmp	r8, r0
   17458:	beq	1749c <g_strcmp0@plt+0x161c>
   1745c:	ldr	r3, [r4, #12]
   17460:	mov	r1, r7
   17464:	ldr	r0, [r3, #36]	; 0x24
   17468:	bl	210e0 <g_strcmp0@plt+0xb260>
   1746c:	ldr	r3, [r4, #12]
   17470:	mov	r1, r6
   17474:	ldr	r0, [r3, #36]	; 0x24
   17478:	bl	213e8 <g_strcmp0@plt+0xb568>
   1747c:	ldr	r3, [r4, #12]
   17480:	ldr	r1, [r3, #68]	; 0x44
   17484:	ldr	r0, [r3, #36]	; 0x24
   17488:	bl	22070 <g_strcmp0@plt+0xc1f0>
   1748c:	ldr	r3, [r4, #12]
   17490:	pop	{r4, r5, r6, r7, r8, lr}
   17494:	ldr	r0, [r3, #36]	; 0x24
   17498:	b	2232c <g_strcmp0@plt+0xc4ac>
   1749c:	ldr	r0, [r5, #4]
   174a0:	bl	1e010 <g_strcmp0@plt+0x8190>
   174a4:	mov	r6, r0
   174a8:	b	1745c <g_strcmp0@plt+0x15dc>
   174ac:	andeq	r9, r2, r8, lsl #13
   174b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   174b4:	sub	sp, sp, #20
   174b8:	ldr	r7, [pc, #488]	; 176a8 <g_strcmp0@plt+0x1828>
   174bc:	mov	r3, #0
   174c0:	mov	r6, r0
   174c4:	ldr	r2, [r7]
   174c8:	mov	r0, r1
   174cc:	mov	r4, r1
   174d0:	str	r2, [sp, #12]
   174d4:	str	r3, [sp, #8]
   174d8:	bl	152ec <pk_error_get_code@plt>
   174dc:	cmp	r0, #34	; 0x22
   174e0:	beq	174f4 <g_strcmp0@plt+0x1674>
   174e4:	mov	r0, r4
   174e8:	bl	152ec <pk_error_get_code@plt>
   174ec:	cmp	r0, #21
   174f0:	bne	17618 <g_strcmp0@plt+0x1798>
   174f4:	mov	r0, r4
   174f8:	bl	152ec <pk_error_get_code@plt>
   174fc:	bl	154cc <pk_error_enum_to_string@plt>
   17500:	ldr	r2, [pc, #420]	; 176ac <g_strcmp0@plt+0x182c>
   17504:	mov	r1, #16
   17508:	mov	r3, r0
   1750c:	ldr	r0, [pc, #412]	; 176b0 <g_strcmp0@plt+0x1830>
   17510:	bl	151f0 <g_log@plt>
   17514:	mov	r0, r4
   17518:	bl	152ec <pk_error_get_code@plt>
   1751c:	bl	154cc <pk_error_enum_to_string@plt>
   17520:	ldr	r2, [pc, #396]	; 176b4 <g_strcmp0@plt+0x1834>
   17524:	mov	r1, #128	; 0x80
   17528:	mov	r3, r0
   1752c:	ldr	r0, [pc, #380]	; 176b0 <g_strcmp0@plt+0x1830>
   17530:	bl	151f0 <g_log@plt>
   17534:	mov	r0, r4
   17538:	bl	152ec <pk_error_get_code@plt>
   1753c:	bl	1d980 <g_strcmp0@plt+0x7b00>
   17540:	mov	r8, r0
   17544:	mov	r0, r4
   17548:	bl	152ec <pk_error_get_code@plt>
   1754c:	bl	1e010 <g_strcmp0@plt+0x8190>
   17550:	ldr	r5, [r6, #12]
   17554:	ldr	r3, [r5, #56]	; 0x38
   17558:	cmp	r3, #0
   1755c:	mov	r9, r0
   17560:	bne	17650 <g_strcmp0@plt+0x17d0>
   17564:	ldr	r0, [r5, #84]	; 0x54
   17568:	cmp	r0, #0
   1756c:	beq	17578 <g_strcmp0@plt+0x16f8>
   17570:	bl	15b5c <g_object_unref@plt>
   17574:	ldr	r5, [r6, #12]
   17578:	mov	r0, r4
   1757c:	bl	14f14 <g_object_ref@plt>
   17580:	mov	r1, r9
   17584:	mov	r2, #0
   17588:	str	r0, [r5, #84]	; 0x54
   1758c:	mov	r0, r8
   17590:	bl	14fbc <notify_notification_new@plt>
   17594:	ldr	r2, [pc, #284]	; 176b8 <g_strcmp0@plt+0x1838>
   17598:	ldr	r1, [pc, #284]	; 176bc <g_strcmp0@plt+0x183c>
   1759c:	mov	r4, r0
   175a0:	bl	14f74 <notify_notification_set_hint_string@plt>
   175a4:	mov	r0, r4
   175a8:	ldr	r1, [pc, #272]	; 176c0 <g_strcmp0@plt+0x1840>
   175ac:	bl	15760 <notify_notification_set_timeout@plt>
   175b0:	mov	r0, r4
   175b4:	mov	r1, #0
   175b8:	bl	15550 <notify_notification_set_urgency@plt>
   175bc:	mov	r2, #5
   175c0:	ldr	r1, [pc, #252]	; 176c4 <g_strcmp0@plt+0x1844>
   175c4:	mov	r0, #0
   175c8:	bl	15880 <dcgettext@plt>
   175cc:	mov	r3, #0
   175d0:	str	r3, [sp, #4]
   175d4:	ldr	r1, [pc, #236]	; 176c8 <g_strcmp0@plt+0x1848>
   175d8:	ldr	r3, [pc, #236]	; 176cc <g_strcmp0@plt+0x184c>
   175dc:	str	r6, [sp]
   175e0:	mov	r2, r0
   175e4:	mov	r0, r4
   175e8:	bl	157b4 <notify_notification_add_action@plt>
   175ec:	mov	r0, r4
   175f0:	add	r1, sp, #8
   175f4:	bl	15a48 <notify_notification_show@plt>
   175f8:	cmp	r0, #0
   175fc:	beq	1762c <g_strcmp0@plt+0x17ac>
   17600:	ldr	r2, [sp, #12]
   17604:	ldr	r3, [r7]
   17608:	cmp	r2, r3
   1760c:	bne	176a4 <g_strcmp0@plt+0x1824>
   17610:	add	sp, sp, #20
   17614:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17618:	mov	r0, r4
   1761c:	bl	152ec <pk_error_get_code@plt>
   17620:	cmp	r0, #17
   17624:	bne	17514 <g_strcmp0@plt+0x1694>
   17628:	b	174f4 <g_strcmp0@plt+0x1674>
   1762c:	ldr	r3, [sp, #8]
   17630:	ldr	r2, [pc, #152]	; 176d0 <g_strcmp0@plt+0x1850>
   17634:	mov	r1, #16
   17638:	ldr	r3, [r3, #8]
   1763c:	ldr	r0, [pc, #108]	; 176b0 <g_strcmp0@plt+0x1830>
   17640:	bl	151f0 <g_log@plt>
   17644:	ldr	r0, [sp, #8]
   17648:	bl	15064 <g_error_free@plt>
   1764c:	b	17600 <g_strcmp0@plt+0x1780>
   17650:	ldr	r0, [r5, #36]	; 0x24
   17654:	bl	21f40 <g_strcmp0@plt+0xc0c0>
   17658:	mov	r5, r0
   1765c:	bl	150f4 <gtk_widget_get_type@plt>
   17660:	mov	r1, r0
   17664:	mov	r0, r5
   17668:	bl	15148 <g_type_check_instance_cast@plt>
   1766c:	mov	r5, r0
   17670:	bl	15e38 <gtk_window_get_type@plt>
   17674:	mov	r1, r0
   17678:	mov	r0, r5
   1767c:	bl	15148 <g_type_check_instance_cast@plt>
   17680:	mov	r5, r0
   17684:	mov	r0, r4
   17688:	bl	152d4 <pk_error_get_details@plt>
   1768c:	mov	r2, r9
   17690:	mov	r1, r8
   17694:	mov	r3, r0
   17698:	mov	r0, r5
   1769c:	bl	26cd8 <g_strcmp0@plt+0x10e58>
   176a0:	b	17600 <g_strcmp0@plt+0x1780>
   176a4:	bl	157f0 <__stack_chk_fail@plt>
   176a8:	andeq	r0, r4, r0, asr lr
   176ac:	andeq	r9, r2, r8, ror #13
   176b0:	andeq	r8, r2, ip, lsl #29
   176b4:	strdeq	r9, [r2], -r4
   176b8:	andeq	r9, r2, r0, lsl #14
   176bc:	andeq	r9, r2, r0, lsl r7
   176c0:	muleq	r0, r8, sl
   176c4:	andeq	r9, r2, r0, lsr #14
   176c8:	andeq	r9, r2, r0, lsr r7
   176cc:	andeq	sl, r1, r0, lsl #4
   176d0:	andeq	r9, r2, r4, asr #14
   176d4:	ldr	r3, [r1, #12]
   176d8:	ldr	r0, [r3, #36]	; 0x24
   176dc:	b	223d4 <g_strcmp0@plt+0xc554>
   176e0:	ldr	r3, [r1, #12]
   176e4:	ldr	r0, [r3, #112]	; 0x70
   176e8:	b	15220 <g_cancellable_cancel@plt>
   176ec:	push	{r4, lr}
   176f0:	mov	r4, r0
   176f4:	bl	15c58 <g_type_class_peek_parent@plt>
   176f8:	ldr	r1, [pc, #64]	; 17740 <g_strcmp0@plt+0x18c0>
   176fc:	ldr	r3, [r1, #4]
   17700:	cmp	r3, #0
   17704:	str	r0, [r1]
   17708:	bne	17730 <g_strcmp0@plt+0x18b0>
   1770c:	mov	r1, #80	; 0x50
   17710:	mov	r0, r4
   17714:	bl	15dc0 <g_type_check_class_cast@plt>
   17718:	ldr	r3, [pc, #36]	; 17744 <g_strcmp0@plt+0x18c4>
   1771c:	mov	r1, #128	; 0x80
   17720:	str	r3, [r0, #24]
   17724:	mov	r0, r4
   17728:	pop	{r4, lr}
   1772c:	b	15988 <g_type_class_add_private@plt>
   17730:	add	r1, r1, #4
   17734:	mov	r0, r4
   17738:	bl	15028 <g_type_class_adjust_private_offset@plt>
   1773c:	b	1770c <g_strcmp0@plt+0x188c>
   17740:			; <UNDEFINED> instruction: 0x000418b0
   17744:	andeq	sl, r1, r4, ror r5
   17748:	cmp	r1, #0
   1774c:	beq	177dc <g_strcmp0@plt+0x195c>
   17750:	ldr	r3, [r0, #12]
   17754:	push	{r4, r5, lr}
   17758:	mov	r4, r0
   1775c:	ldr	r3, [r3, #100]	; 0x64
   17760:	sub	sp, sp, #12
   17764:	cmp	r3, #0
   17768:	mov	r5, r1
   1776c:	ldr	r2, [r1, #8]
   17770:	beq	177c4 <g_strcmp0@plt+0x1944>
   17774:	str	r2, [sp]
   17778:	mov	r1, #128	; 0x80
   1777c:	ldr	r2, [pc, #112]	; 177f4 <g_strcmp0@plt+0x1974>
   17780:	ldr	r0, [pc, #112]	; 177f8 <g_strcmp0@plt+0x1978>
   17784:	bl	151f0 <g_log@plt>
   17788:	ldr	r3, [r4, #12]
   1778c:	mov	r1, r5
   17790:	ldr	r0, [r3, #100]	; 0x64
   17794:	bl	152a4 <dbus_g_method_return_error@plt>
   17798:	ldr	r3, [r4, #12]
   1779c:	mov	r1, #0
   177a0:	ldr	r2, [r3, #116]	; 0x74
   177a4:	str	r1, [r3, #100]	; 0x64
   177a8:	cmp	r2, r1
   177ac:	beq	177ec <g_strcmp0@plt+0x196c>
   177b0:	ldr	r1, [r3, #120]	; 0x78
   177b4:	mov	r0, r4
   177b8:	add	sp, sp, #12
   177bc:	pop	{r4, r5, lr}
   177c0:	bx	r2
   177c4:	mov	r3, r2
   177c8:	mov	r1, #4
   177cc:	ldr	r2, [pc, #40]	; 177fc <g_strcmp0@plt+0x197c>
   177d0:	ldr	r0, [pc, #32]	; 177f8 <g_strcmp0@plt+0x1978>
   177d4:	bl	151f0 <g_log@plt>
   177d8:	b	177d8 <g_strcmp0@plt+0x1958>
   177dc:	ldr	r2, [pc, #28]	; 17800 <g_strcmp0@plt+0x1980>
   177e0:	ldr	r1, [pc, #28]	; 17804 <g_strcmp0@plt+0x1984>
   177e4:	ldr	r0, [pc, #12]	; 177f8 <g_strcmp0@plt+0x1978>
   177e8:	b	14fd4 <g_return_if_fail_warning@plt>
   177ec:	add	sp, sp, #12
   177f0:	pop	{r4, r5, pc}
   177f4:	andeq	r9, r2, ip, lsl #15
   177f8:	andeq	r8, r2, ip, lsl #29
   177fc:	andeq	r9, r2, r0, ror #14
   17800:	andeq	r9, r2, r0, asr r7
   17804:	andeq	r9, r2, ip, asr #7
   17808:	adds	r1, r1, #8
   1780c:	movne	r1, #1
   17810:	cmp	r2, #0
   17814:	moveq	r1, #1
   17818:	cmp	r1, #0
   1781c:	push	{r4, r5, r6, lr}
   17820:	mov	r4, r3
   17824:	bne	17844 <g_strcmp0@plt+0x19c4>
   17828:	mov	r0, r2
   1782c:	ldr	r5, [r3, #12]
   17830:	bl	1504c <pk_package_ids_from_id@plt>
   17834:	str	r0, [r5, #104]	; 0x68
   17838:	mov	r0, r4
   1783c:	pop	{r4, r5, r6, lr}
   17840:	b	1731c <g_strcmp0@plt+0x149c>
   17844:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17848:	ldr	r2, [pc, #164]	; 178f4 <g_strcmp0@plt+0x1a74>
   1784c:	mov	r1, #17
   17850:	bl	15568 <g_error_new@plt>
   17854:	mov	r1, r0
   17858:	mov	r5, r0
   1785c:	mov	r0, r4
   17860:	bl	17748 <g_strcmp0@plt+0x18c8>
   17864:	mov	r0, r5
   17868:	bl	15064 <g_error_free@plt>
   1786c:	ldr	r3, [r4, #12]
   17870:	ldr	r2, [r3, #64]	; 0x40
   17874:	cmp	r2, #0
   17878:	popeq	{r4, r5, r6, pc}
   1787c:	ldr	r0, [r3, #36]	; 0x24
   17880:	mov	r2, #0
   17884:	mov	r3, #0
   17888:	mov	r1, #3
   1788c:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   17890:	ldr	r3, [r4, #12]
   17894:	mov	r2, #5
   17898:	ldr	r1, [pc, #88]	; 178f8 <g_strcmp0@plt+0x1a78>
   1789c:	mov	r0, #0
   178a0:	ldr	r5, [r3, #36]	; 0x24
   178a4:	bl	15880 <dcgettext@plt>
   178a8:	mov	r1, r0
   178ac:	mov	r0, r5
   178b0:	bl	210e0 <g_strcmp0@plt+0xb260>
   178b4:	ldr	r3, [r4, #12]
   178b8:	mov	r2, #5
   178bc:	ldr	r1, [pc, #56]	; 178fc <g_strcmp0@plt+0x1a7c>
   178c0:	mov	r0, #0
   178c4:	ldr	r5, [r3, #36]	; 0x24
   178c8:	bl	15880 <dcgettext@plt>
   178cc:	mov	r1, r0
   178d0:	mov	r0, r5
   178d4:	bl	213e8 <g_strcmp0@plt+0xb568>
   178d8:	ldr	r3, [r4, #12]
   178dc:	ldr	r0, [r3, #36]	; 0x24
   178e0:	bl	22324 <g_strcmp0@plt+0xc4a4>
   178e4:	ldr	r3, [r4, #12]
   178e8:	pop	{r4, r5, r6, lr}
   178ec:	ldr	r0, [r3, #36]	; 0x24
   178f0:	b	2232c <g_strcmp0@plt+0xc4ac>
   178f4:	andeq	r9, r2, r0, asr #15
   178f8:	andeq	r9, r2, r4, ror #15
   178fc:	andeq	r9, r2, r0, lsl #16
   17900:	push	{r4, r5, r6, lr}
   17904:	mov	r4, r0
   17908:	ldr	r5, [r0]
   1790c:	mov	r6, r1
   17910:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17914:	cmp	r5, r0
   17918:	beq	17950 <g_strcmp0@plt+0x1ad0>
   1791c:	ldr	r4, [r4]
   17920:	bl	15a30 <pk_client_error_quark@plt>
   17924:	cmp	r4, r0
   17928:	bne	17960 <g_strcmp0@plt+0x1ae0>
   1792c:	ldr	r0, [r6]
   17930:	cmp	r0, #255	; 0xff
   17934:	bgt	17958 <g_strcmp0@plt+0x1ad8>
   17938:	cmp	r0, #9
   1793c:	ldrls	r3, [pc, #52]	; 17978 <g_strcmp0@plt+0x1af8>
   17940:	addls	r0, r3, r0, lsl #2
   17944:	ldrls	r0, [r0, #32]
   17948:	movhi	r0, #4
   1794c:	pop	{r4, r5, r6, pc}
   17950:	ldr	r0, [r6]
   17954:	pop	{r4, r5, r6, pc}
   17958:	sub	r0, r0, #255	; 0xff
   1795c:	pop	{r4, r5, r6, pc}
   17960:	ldr	r2, [pc, #20]	; 1797c <g_strcmp0@plt+0x1afc>
   17964:	mov	r1, #16
   17968:	ldr	r0, [pc, #16]	; 17980 <g_strcmp0@plt+0x1b00>
   1796c:	bl	151f0 <g_log@plt>
   17970:	mov	r0, #4
   17974:	pop	{r4, r5, r6, pc}
   17978:	andeq	r9, r2, ip, asr #7
   1797c:	andeq	r9, r2, ip, lsr #16
   17980:	andeq	r8, r2, ip, lsl #29
   17984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17988:	sub	sp, sp, #24
   1798c:	ldr	r6, [pc, #588]	; 17be0 <g_strcmp0@plt+0x1d60>
   17990:	mov	r4, #0
   17994:	mov	r7, r2
   17998:	ldr	r3, [r6]
   1799c:	add	r2, sp, #8
   179a0:	str	r3, [sp, #20]
   179a4:	str	r4, [sp, #8]
   179a8:	str	r4, [sp, #16]
   179ac:	bl	15454 <pk_client_generic_finish@plt>
   179b0:	subs	r8, r0, #0
   179b4:	beq	17b18 <g_strcmp0@plt+0x1c98>
   179b8:	bl	15244 <pk_results_get_error_code@plt>
   179bc:	subs	r5, r0, #0
   179c0:	beq	17a78 <g_strcmp0@plt+0x1bf8>
   179c4:	bl	152ec <pk_error_get_code@plt>
   179c8:	bl	154cc <pk_error_enum_to_string@plt>
   179cc:	mov	r9, r0
   179d0:	mov	r0, r5
   179d4:	bl	152d4 <pk_error_get_details@plt>
   179d8:	mov	r3, r9
   179dc:	ldr	r2, [pc, #512]	; 17be4 <g_strcmp0@plt+0x1d64>
   179e0:	mov	r1, #16
   179e4:	str	r0, [sp]
   179e8:	ldr	r0, [pc, #504]	; 17be8 <g_strcmp0@plt+0x1d68>
   179ec:	bl	151f0 <g_log@plt>
   179f0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   179f4:	mov	r9, r0
   179f8:	mov	r0, r5
   179fc:	bl	152ec <pk_error_get_code@plt>
   17a00:	cmp	r0, #17
   17a04:	mov	r0, r5
   17a08:	movne	sl, #0
   17a0c:	moveq	sl, #17
   17a10:	bl	152d4 <pk_error_get_details@plt>
   17a14:	ldr	r2, [pc, #464]	; 17bec <g_strcmp0@plt+0x1d6c>
   17a18:	mov	r1, sl
   17a1c:	mov	r3, r0
   17a20:	mov	r0, r9
   17a24:	bl	15568 <g_error_new@plt>
   17a28:	mov	r1, r0
   17a2c:	mov	r9, r0
   17a30:	mov	r0, r7
   17a34:	bl	17748 <g_strcmp0@plt+0x18c8>
   17a38:	mov	r0, r9
   17a3c:	bl	15064 <g_error_free@plt>
   17a40:	ldr	r0, [sp, #16]
   17a44:	bl	15874 <g_free@plt>
   17a48:	mov	r0, r4
   17a4c:	bl	15790 <g_strfreev@plt>
   17a50:	mov	r0, r5
   17a54:	bl	15b5c <g_object_unref@plt>
   17a58:	mov	r0, r8
   17a5c:	bl	15b5c <g_object_unref@plt>
   17a60:	ldr	r2, [sp, #20]
   17a64:	ldr	r3, [r6]
   17a68:	cmp	r2, r3
   17a6c:	bne	17bdc <g_strcmp0@plt+0x1d5c>
   17a70:	add	sp, sp, #24
   17a74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a78:	mov	r0, r8
   17a7c:	bl	14f80 <pk_results_get_package_array@plt>
   17a80:	ldr	r9, [r0, #4]
   17a84:	mov	r4, r0
   17a88:	cmp	r9, #0
   17a8c:	beq	17b90 <g_strcmp0@plt+0x1d10>
   17a90:	ldr	r2, [r0]
   17a94:	add	r1, sp, #16
   17a98:	ldr	r3, [pc, #336]	; 17bf0 <g_strcmp0@plt+0x1d70>
   17a9c:	ldr	r0, [r2]
   17aa0:	add	r2, sp, #12
   17aa4:	stm	sp, {r1, r5}
   17aa8:	ldr	r1, [pc, #324]	; 17bf4 <g_strcmp0@plt+0x1d74>
   17aac:	bl	15910 <g_object_get@plt>
   17ab0:	ldr	r0, [sp, #16]
   17ab4:	bl	15124 <pk_package_id_split@plt>
   17ab8:	ldr	r3, [r7, #12]
   17abc:	ldr	r2, [pc, #308]	; 17bf8 <g_strcmp0@plt+0x1d78>
   17ac0:	mov	r1, #128	; 0x80
   17ac4:	ldr	r3, [r3, #100]	; 0x64
   17ac8:	mov	r9, r0
   17acc:	ldr	r0, [pc, #276]	; 17be8 <g_strcmp0@plt+0x1d68>
   17ad0:	bl	151f0 <g_log@plt>
   17ad4:	ldr	r3, [r7, #12]
   17ad8:	ldr	r1, [sp, #12]
   17adc:	ldr	r2, [r9]
   17ae0:	ldr	r0, [r3, #100]	; 0x64
   17ae4:	sub	r1, r1, #1
   17ae8:	clz	r1, r1
   17aec:	lsr	r1, r1, #5
   17af0:	bl	156d0 <dbus_g_method_return@plt>
   17af4:	ldr	r3, [r7, #12]
   17af8:	ldr	r0, [sp, #16]
   17afc:	str	r5, [r3, #100]	; 0x64
   17b00:	bl	15874 <g_free@plt>
   17b04:	mov	r0, r9
   17b08:	bl	15790 <g_strfreev@plt>
   17b0c:	mov	r0, r4
   17b10:	bl	15c7c <g_ptr_array_unref@plt>
   17b14:	b	17a58 <g_strcmp0@plt+0x1bd8>
   17b18:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17b1c:	mov	r4, r0
   17b20:	ldr	r0, [sp, #8]
   17b24:	add	r1, r0, #4
   17b28:	bl	17900 <g_strcmp0@plt+0x1a80>
   17b2c:	ldr	r3, [sp, #8]
   17b30:	ldr	r2, [pc, #180]	; 17bec <g_strcmp0@plt+0x1d6c>
   17b34:	ldr	r3, [r3, #8]
   17b38:	mov	r1, r0
   17b3c:	mov	r0, r4
   17b40:	bl	15568 <g_error_new@plt>
   17b44:	mov	r4, r0
   17b48:	mov	r1, r0
   17b4c:	mov	r0, r7
   17b50:	bl	17748 <g_strcmp0@plt+0x18c8>
   17b54:	ldr	r3, [sp, #8]
   17b58:	ldr	r2, [pc, #156]	; 17bfc <g_strcmp0@plt+0x1d7c>
   17b5c:	mov	r1, #16
   17b60:	ldr	r3, [r3, #8]
   17b64:	ldr	r0, [pc, #124]	; 17be8 <g_strcmp0@plt+0x1d68>
   17b68:	bl	151f0 <g_log@plt>
   17b6c:	ldr	r0, [sp, #8]
   17b70:	bl	15064 <g_error_free@plt>
   17b74:	mov	r0, r4
   17b78:	bl	15064 <g_error_free@plt>
   17b7c:	ldr	r0, [sp, #16]
   17b80:	bl	15874 <g_free@plt>
   17b84:	mov	r0, r8
   17b88:	bl	15790 <g_strfreev@plt>
   17b8c:	b	17a60 <g_strcmp0@plt+0x1be0>
   17b90:	ldr	r2, [pc, #104]	; 17c00 <g_strcmp0@plt+0x1d80>
   17b94:	mov	r1, #16
   17b98:	ldr	r0, [pc, #72]	; 17be8 <g_strcmp0@plt+0x1d68>
   17b9c:	bl	151f0 <g_log@plt>
   17ba0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17ba4:	ldr	r2, [pc, #88]	; 17c04 <g_strcmp0@plt+0x1d84>
   17ba8:	mov	r1, r9
   17bac:	bl	15568 <g_error_new@plt>
   17bb0:	mov	r1, r0
   17bb4:	mov	r5, r0
   17bb8:	mov	r0, r7
   17bbc:	bl	17748 <g_strcmp0@plt+0x18c8>
   17bc0:	mov	r0, r5
   17bc4:	bl	15064 <g_error_free@plt>
   17bc8:	ldr	r0, [sp, #16]
   17bcc:	bl	15874 <g_free@plt>
   17bd0:	mov	r0, r9
   17bd4:	bl	15790 <g_strfreev@plt>
   17bd8:	b	17b0c <g_strcmp0@plt+0x1c8c>
   17bdc:	bl	157f0 <__stack_chk_fail@plt>
   17be0:	andeq	r0, r4, r0, asr lr
   17be4:	andeq	r9, r2, r0, lsl #17
   17be8:	andeq	r8, r2, ip, lsl #29
   17bec:	andeq	r9, r2, ip, asr #16
   17bf0:	andeq	r9, r2, r4, asr #17
   17bf4:	andeq	r0, r3, r8, lsr #17
   17bf8:	ldrdeq	r9, [r2], -r0
   17bfc:	andeq	r9, r2, r8, ror #16
   17c00:	muleq	r2, ip, r8
   17c04:	andeq	r9, r2, r8, lsr #17
   17c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c0c:	sub	sp, sp, #36	; 0x24
   17c10:	ldr	r7, [pc, #1020]	; 18014 <g_strcmp0@plt+0x2194>
   17c14:	mov	r4, #0
   17c18:	mov	r8, r2
   17c1c:	ldr	r3, [r7]
   17c20:	add	r2, sp, #16
   17c24:	str	r3, [sp, #28]
   17c28:	str	r4, [sp, #16]
   17c2c:	str	r4, [sp, #24]
   17c30:	bl	15454 <pk_client_generic_finish@plt>
   17c34:	subs	r3, r0, #0
   17c38:	str	r3, [sp, #8]
   17c3c:	beq	17e04 <g_strcmp0@plt+0x1f84>
   17c40:	bl	15244 <pk_results_get_error_code@plt>
   17c44:	subs	r6, r0, #0
   17c48:	beq	17ccc <g_strcmp0@plt+0x1e4c>
   17c4c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17c50:	mov	r5, r0
   17c54:	mov	r0, r6
   17c58:	bl	152ec <pk_error_get_code@plt>
   17c5c:	cmp	r0, #17
   17c60:	mov	r0, r6
   17c64:	movne	r9, #0
   17c68:	moveq	r9, #17
   17c6c:	bl	152d4 <pk_error_get_details@plt>
   17c70:	ldr	r2, [pc, #928]	; 18018 <g_strcmp0@plt+0x2198>
   17c74:	mov	r1, r9
   17c78:	mov	r3, r0
   17c7c:	mov	r0, r5
   17c80:	bl	15568 <g_error_new@plt>
   17c84:	mov	r1, r0
   17c88:	mov	r5, r0
   17c8c:	mov	r0, r8
   17c90:	bl	17748 <g_strcmp0@plt+0x18c8>
   17c94:	mov	r0, r5
   17c98:	bl	15064 <g_error_free@plt>
   17c9c:	mov	r0, r4
   17ca0:	bl	15874 <g_free@plt>
   17ca4:	mov	r0, r6
   17ca8:	bl	15b5c <g_object_unref@plt>
   17cac:	ldr	r0, [sp, #8]
   17cb0:	bl	15b5c <g_object_unref@plt>
   17cb4:	ldr	r2, [sp, #28]
   17cb8:	ldr	r3, [r7]
   17cbc:	cmp	r2, r3
   17cc0:	bne	18010 <g_strcmp0@plt+0x2190>
   17cc4:	add	sp, sp, #36	; 0x24
   17cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ccc:	ldr	r0, [sp, #8]
   17cd0:	bl	14f80 <pk_results_get_package_array@plt>
   17cd4:	ldr	r3, [r0, #4]
   17cd8:	mov	r5, r0
   17cdc:	cmp	r3, #0
   17ce0:	beq	17e5c <g_strcmp0@plt+0x1fdc>
   17ce4:	ldr	sl, [pc, #816]	; 1801c <g_strcmp0@plt+0x219c>
   17ce8:	ldr	r9, [pc, #816]	; 18020 <g_strcmp0@plt+0x21a0>
   17cec:	str	r6, [sp, #12]
   17cf0:	mov	r4, r6
   17cf4:	mov	fp, r6
   17cf8:	b	17d1c <g_strcmp0@plt+0x1e9c>
   17cfc:	cmp	r3, #2
   17d00:	ldr	r0, [sp, #24]
   17d04:	beq	17d64 <g_strcmp0@plt+0x1ee4>
   17d08:	bl	15874 <g_free@plt>
   17d0c:	ldr	r3, [r5, #4]
   17d10:	add	r4, r4, #1
   17d14:	cmp	r3, r4
   17d18:	bls	17d8c <g_strcmp0@plt+0x1f0c>
   17d1c:	ldr	r1, [r5]
   17d20:	add	ip, sp, #24
   17d24:	mov	r3, sl
   17d28:	ldr	r0, [r1, r4, lsl #2]
   17d2c:	add	r2, sp, #20
   17d30:	mov	r1, r9
   17d34:	str	fp, [sp, #4]
   17d38:	str	ip, [sp]
   17d3c:	bl	15910 <g_object_get@plt>
   17d40:	ldr	r3, [sp, #20]
   17d44:	cmp	r3, #1
   17d48:	bne	17cfc <g_strcmp0@plt+0x1e7c>
   17d4c:	ldr	r0, [sp, #24]
   17d50:	str	r3, [sp, #12]
   17d54:	bl	153a0 <g_strdup@plt>
   17d58:	mov	r6, r0
   17d5c:	ldr	r0, [sp, #24]
   17d60:	b	17d08 <g_strcmp0@plt+0x1e88>
   17d64:	mov	r3, r0
   17d68:	ldr	r2, [pc, #692]	; 18024 <g_strcmp0@plt+0x21a4>
   17d6c:	mov	r1, #128	; 0x80
   17d70:	ldr	r0, [pc, #688]	; 18028 <g_strcmp0@plt+0x21a8>
   17d74:	bl	151f0 <g_log@plt>
   17d78:	ldr	r0, [sp, #24]
   17d7c:	bl	153a0 <g_strdup@plt>
   17d80:	mov	r6, r0
   17d84:	ldr	r0, [sp, #24]
   17d88:	b	17d08 <g_strcmp0@plt+0x1e88>
   17d8c:	ldr	r3, [sp, #12]
   17d90:	ldr	r4, [r8, #12]
   17d94:	cmp	r3, #0
   17d98:	beq	17de4 <g_strcmp0@plt+0x1f64>
   17d9c:	ldr	r3, [r4, #64]	; 0x40
   17da0:	cmp	r3, #0
   17da4:	bne	17f64 <g_strcmp0@plt+0x20e4>
   17da8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17dac:	ldr	r2, [pc, #632]	; 1802c <g_strcmp0@plt+0x21ac>
   17db0:	mov	r1, #0
   17db4:	bl	15568 <g_error_new@plt>
   17db8:	mov	r1, r0
   17dbc:	mov	r4, r0
   17dc0:	mov	r0, r8
   17dc4:	bl	17748 <g_strcmp0@plt+0x18c8>
   17dc8:	mov	r0, r4
   17dcc:	bl	15064 <g_error_free@plt>
   17dd0:	mov	r0, r6
   17dd4:	bl	15874 <g_free@plt>
   17dd8:	mov	r0, r5
   17ddc:	bl	15c7c <g_ptr_array_unref@plt>
   17de0:	b	17cac <g_strcmp0@plt+0x1e2c>
   17de4:	mov	r0, r6
   17de8:	bl	1504c <pk_package_ids_from_id@plt>
   17dec:	str	r0, [r4, #104]	; 0x68
   17df0:	mov	r0, r8
   17df4:	bl	1731c <g_strcmp0@plt+0x149c>
   17df8:	mov	r0, r6
   17dfc:	bl	15874 <g_free@plt>
   17e00:	b	17dd8 <g_strcmp0@plt+0x1f58>
   17e04:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17e08:	mov	r4, r0
   17e0c:	ldr	r0, [sp, #16]
   17e10:	add	r1, r0, #4
   17e14:	bl	17900 <g_strcmp0@plt+0x1a80>
   17e18:	ldr	r3, [sp, #16]
   17e1c:	ldr	r2, [pc, #500]	; 18018 <g_strcmp0@plt+0x2198>
   17e20:	ldr	r3, [r3, #8]
   17e24:	mov	r1, r0
   17e28:	mov	r0, r4
   17e2c:	bl	15568 <g_error_new@plt>
   17e30:	mov	r1, r0
   17e34:	mov	r4, r0
   17e38:	mov	r0, r8
   17e3c:	bl	17748 <g_strcmp0@plt+0x18c8>
   17e40:	ldr	r0, [sp, #16]
   17e44:	bl	15064 <g_error_free@plt>
   17e48:	mov	r0, r4
   17e4c:	bl	15064 <g_error_free@plt>
   17e50:	ldr	r0, [sp, #8]
   17e54:	bl	15874 <g_free@plt>
   17e58:	b	17cb4 <g_strcmp0@plt+0x1e34>
   17e5c:	ldr	r3, [r8, #12]
   17e60:	ldr	r2, [r3, #64]	; 0x40
   17e64:	cmp	r2, #0
   17e68:	bne	17ea0 <g_strcmp0@plt+0x2020>
   17e6c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   17e70:	ldr	r2, [pc, #440]	; 18030 <g_strcmp0@plt+0x21b0>
   17e74:	mov	r1, #8
   17e78:	bl	15568 <g_error_new@plt>
   17e7c:	mov	r1, r0
   17e80:	mov	r4, r0
   17e84:	mov	r0, r8
   17e88:	bl	17748 <g_strcmp0@plt+0x18c8>
   17e8c:	mov	r0, r4
   17e90:	bl	15064 <g_error_free@plt>
   17e94:	mov	r0, #0
   17e98:	bl	15874 <g_free@plt>
   17e9c:	b	17dd8 <g_strcmp0@plt+0x1f58>
   17ea0:	ldr	r0, [r3, #40]	; 0x28
   17ea4:	mov	r1, #4
   17ea8:	bl	205b0 <g_strcmp0@plt+0xa730>
   17eac:	mov	r3, #0
   17eb0:	mov	r1, #3
   17eb4:	subs	r4, r0, #0
   17eb8:	ldr	r0, [r8, #12]
   17ebc:	movne	r2, #4
   17ec0:	moveq	r2, #0
   17ec4:	ldr	r0, [r0, #36]	; 0x24
   17ec8:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   17ecc:	ldr	r3, [r8, #12]
   17ed0:	mov	r2, #5
   17ed4:	ldr	r1, [pc, #344]	; 18034 <g_strcmp0@plt+0x21b4>
   17ed8:	mov	r0, #0
   17edc:	ldr	r6, [r3, #36]	; 0x24
   17ee0:	bl	15880 <dcgettext@plt>
   17ee4:	mov	r1, r0
   17ee8:	mov	r0, r6
   17eec:	bl	210e0 <g_strcmp0@plt+0xb260>
   17ef0:	ldr	r3, [r8, #12]
   17ef4:	mov	r2, #5
   17ef8:	ldr	r1, [pc, #312]	; 18038 <g_strcmp0@plt+0x21b8>
   17efc:	mov	r0, #0
   17f00:	ldr	r6, [r3, #36]	; 0x24
   17f04:	bl	15880 <dcgettext@plt>
   17f08:	mov	r1, r0
   17f0c:	mov	r0, r6
   17f10:	bl	213e8 <g_strcmp0@plt+0xb568>
   17f14:	ldr	r3, [r8, #12]
   17f18:	mov	r2, #5
   17f1c:	ldr	r1, [pc, #280]	; 1803c <g_strcmp0@plt+0x21bc>
   17f20:	mov	r0, #0
   17f24:	ldr	r6, [r3, #36]	; 0x24
   17f28:	bl	15880 <dcgettext@plt>
   17f2c:	mov	r1, r0
   17f30:	mov	r0, r6
   17f34:	bl	21950 <g_strcmp0@plt+0xbad0>
   17f38:	ldr	r3, [r8, #12]
   17f3c:	ldr	r0, [r3, #36]	; 0x24
   17f40:	bl	22324 <g_strcmp0@plt+0xc4a4>
   17f44:	ldr	r3, [r8, #12]
   17f48:	ldr	r0, [r3, #36]	; 0x24
   17f4c:	bl	2232c <g_strcmp0@plt+0xc4ac>
   17f50:	cmn	r0, #5
   17f54:	beq	18004 <g_strcmp0@plt+0x2184>
   17f58:	mov	r0, r4
   17f5c:	bl	15874 <g_free@plt>
   17f60:	b	17e6c <g_strcmp0@plt+0x1fec>
   17f64:	mov	r0, r6
   17f68:	bl	15124 <pk_package_id_split@plt>
   17f6c:	mov	r2, #5
   17f70:	ldr	r1, [pc, #200]	; 18040 <g_strcmp0@plt+0x21c0>
   17f74:	mov	r4, r0
   17f78:	mov	r0, #0
   17f7c:	bl	15880 <dcgettext@plt>
   17f80:	ldr	r1, [r4]
   17f84:	bl	15490 <g_strdup_printf@plt>
   17f88:	mov	r2, #0
   17f8c:	mov	r3, #0
   17f90:	mov	r1, #3
   17f94:	mov	r9, r0
   17f98:	ldr	r0, [r8, #12]
   17f9c:	ldr	r0, [r0, #36]	; 0x24
   17fa0:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   17fa4:	ldr	r3, [r8, #12]
   17fa8:	mov	r2, #5
   17fac:	ldr	r1, [pc, #144]	; 18044 <g_strcmp0@plt+0x21c4>
   17fb0:	mov	r0, #0
   17fb4:	ldr	sl, [r3, #36]	; 0x24
   17fb8:	bl	15880 <dcgettext@plt>
   17fbc:	mov	r1, r0
   17fc0:	mov	r0, sl
   17fc4:	bl	210e0 <g_strcmp0@plt+0xb260>
   17fc8:	ldr	r3, [r8, #12]
   17fcc:	mov	r1, r9
   17fd0:	ldr	r0, [r3, #36]	; 0x24
   17fd4:	bl	213e8 <g_strcmp0@plt+0xb568>
   17fd8:	ldr	r3, [r8, #12]
   17fdc:	ldr	r0, [r3, #36]	; 0x24
   17fe0:	bl	22324 <g_strcmp0@plt+0xc4a4>
   17fe4:	ldr	r3, [r8, #12]
   17fe8:	ldr	r0, [r3, #36]	; 0x24
   17fec:	bl	2232c <g_strcmp0@plt+0xc4ac>
   17ff0:	mov	r0, r9
   17ff4:	bl	15874 <g_free@plt>
   17ff8:	mov	r0, r4
   17ffc:	bl	15790 <g_strfreev@plt>
   18000:	b	17da8 <g_strcmp0@plt+0x1f28>
   18004:	mov	r0, r4
   18008:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   1800c:	b	17f58 <g_strcmp0@plt+0x20d8>
   18010:	bl	157f0 <__stack_chk_fail@plt>
   18014:	andeq	r0, r4, r0, asr lr
   18018:	andeq	r9, r2, r8, ror #16
   1801c:	andeq	r9, r2, r4, asr #17
   18020:	andeq	r0, r3, r8, lsr #17
   18024:	andeq	r9, r2, r0, ror #18
   18028:	andeq	r8, r2, ip, lsl #29
   1802c:	andeq	r9, r2, r0, asr #19
   18030:	andeq	r9, r2, r0, asr r9
   18034:	strdeq	r9, [r2], -r8
   18038:	andeq	r9, r2, r0, lsl r9
   1803c:	andeq	r9, r2, ip, lsr r9
   18040:	andeq	r9, r2, ip, ror r9
   18044:	andeq	r9, r2, r8, lsr #19
   18048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1804c:	sub	sp, sp, #36	; 0x24
   18050:	ldr	r7, [pc, #1156]	; 184dc <g_strcmp0@plt+0x265c>
   18054:	mov	r4, #0
   18058:	mov	r8, r2
   1805c:	ldr	r3, [r7]
   18060:	add	r2, sp, #16
   18064:	str	r3, [sp, #28]
   18068:	str	r4, [sp, #16]
   1806c:	str	r4, [sp, #24]
   18070:	bl	15994 <pk_task_generic_finish@plt>
   18074:	subs	r3, r0, #0
   18078:	str	r3, [sp, #8]
   1807c:	beq	18240 <g_strcmp0@plt+0x23c0>
   18080:	bl	15244 <pk_results_get_error_code@plt>
   18084:	subs	r6, r0, #0
   18088:	beq	1810c <g_strcmp0@plt+0x228c>
   1808c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18090:	mov	r5, r0
   18094:	mov	r0, r6
   18098:	bl	152ec <pk_error_get_code@plt>
   1809c:	cmp	r0, #17
   180a0:	mov	r0, r6
   180a4:	movne	r9, #0
   180a8:	moveq	r9, #17
   180ac:	bl	152d4 <pk_error_get_details@plt>
   180b0:	ldr	r2, [pc, #1064]	; 184e0 <g_strcmp0@plt+0x2660>
   180b4:	mov	r1, r9
   180b8:	mov	r3, r0
   180bc:	mov	r0, r5
   180c0:	bl	15568 <g_error_new@plt>
   180c4:	mov	r1, r0
   180c8:	mov	r5, r0
   180cc:	mov	r0, r8
   180d0:	bl	17748 <g_strcmp0@plt+0x18c8>
   180d4:	mov	r0, r5
   180d8:	bl	15064 <g_error_free@plt>
   180dc:	mov	r0, r4
   180e0:	bl	15874 <g_free@plt>
   180e4:	mov	r0, r6
   180e8:	bl	15b5c <g_object_unref@plt>
   180ec:	ldr	r0, [sp, #8]
   180f0:	bl	15b5c <g_object_unref@plt>
   180f4:	ldr	r2, [sp, #28]
   180f8:	ldr	r3, [r7]
   180fc:	cmp	r2, r3
   18100:	bne	184d8 <g_strcmp0@plt+0x2658>
   18104:	add	sp, sp, #36	; 0x24
   18108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1810c:	ldr	r0, [sp, #8]
   18110:	bl	14f80 <pk_results_get_package_array@plt>
   18114:	ldr	r3, [r0, #4]
   18118:	mov	r5, r0
   1811c:	cmp	r3, #0
   18120:	beq	18298 <g_strcmp0@plt+0x2418>
   18124:	ldr	sl, [pc, #952]	; 184e4 <g_strcmp0@plt+0x2664>
   18128:	ldr	r9, [pc, #952]	; 184e8 <g_strcmp0@plt+0x2668>
   1812c:	str	r6, [sp, #12]
   18130:	mov	r4, r6
   18134:	mov	fp, r6
   18138:	b	1815c <g_strcmp0@plt+0x22dc>
   1813c:	cmp	r3, #2
   18140:	ldr	r0, [sp, #24]
   18144:	beq	18198 <g_strcmp0@plt+0x2318>
   18148:	bl	15874 <g_free@plt>
   1814c:	ldr	r3, [r5, #4]
   18150:	add	r4, r4, #1
   18154:	cmp	r3, r4
   18158:	bls	181c0 <g_strcmp0@plt+0x2340>
   1815c:	ldr	r1, [r5]
   18160:	add	ip, sp, #24
   18164:	mov	r3, sl
   18168:	ldr	r0, [r1, r4, lsl #2]
   1816c:	add	r2, sp, #20
   18170:	mov	r1, r9
   18174:	str	fp, [sp, #4]
   18178:	str	ip, [sp]
   1817c:	bl	15910 <g_object_get@plt>
   18180:	ldr	r3, [sp, #20]
   18184:	cmp	r3, #1
   18188:	bne	1813c <g_strcmp0@plt+0x22bc>
   1818c:	str	r3, [sp, #12]
   18190:	ldr	r0, [sp, #24]
   18194:	b	18148 <g_strcmp0@plt+0x22c8>
   18198:	mov	r3, r0
   1819c:	ldr	r2, [pc, #840]	; 184ec <g_strcmp0@plt+0x266c>
   181a0:	mov	r1, #128	; 0x80
   181a4:	ldr	r0, [pc, #836]	; 184f0 <g_strcmp0@plt+0x2670>
   181a8:	bl	151f0 <g_log@plt>
   181ac:	ldr	r0, [sp, #24]
   181b0:	bl	153a0 <g_strdup@plt>
   181b4:	mov	r6, r0
   181b8:	ldr	r0, [sp, #24]
   181bc:	b	18148 <g_strcmp0@plt+0x22c8>
   181c0:	ldr	r3, [sp, #12]
   181c4:	ldr	r4, [r8, #12]
   181c8:	cmp	r3, #0
   181cc:	bne	18200 <g_strcmp0@plt+0x2380>
   181d0:	cmp	r6, #0
   181d4:	beq	182dc <g_strcmp0@plt+0x245c>
   181d8:	mov	r0, r5
   181dc:	bl	24068 <g_strcmp0@plt+0xe1e8>
   181e0:	str	r0, [r4, #104]	; 0x68
   181e4:	mov	r0, r8
   181e8:	bl	1731c <g_strcmp0@plt+0x149c>
   181ec:	mov	r0, r6
   181f0:	bl	15874 <g_free@plt>
   181f4:	mov	r0, r5
   181f8:	bl	15c7c <g_ptr_array_unref@plt>
   181fc:	b	180ec <g_strcmp0@plt+0x226c>
   18200:	ldr	r3, [r4, #64]	; 0x40
   18204:	cmp	r3, #0
   18208:	bne	18440 <g_strcmp0@plt+0x25c0>
   1820c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18210:	ldr	r2, [pc, #732]	; 184f4 <g_strcmp0@plt+0x2674>
   18214:	mov	r1, #0
   18218:	bl	15568 <g_error_new@plt>
   1821c:	mov	r1, r0
   18220:	mov	r4, r0
   18224:	mov	r0, r8
   18228:	bl	17748 <g_strcmp0@plt+0x18c8>
   1822c:	mov	r0, r4
   18230:	bl	15064 <g_error_free@plt>
   18234:	mov	r0, r6
   18238:	bl	15874 <g_free@plt>
   1823c:	b	181f4 <g_strcmp0@plt+0x2374>
   18240:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18244:	mov	r4, r0
   18248:	ldr	r0, [sp, #16]
   1824c:	add	r1, r0, #4
   18250:	bl	17900 <g_strcmp0@plt+0x1a80>
   18254:	ldr	r3, [sp, #16]
   18258:	ldr	r2, [pc, #640]	; 184e0 <g_strcmp0@plt+0x2660>
   1825c:	ldr	r3, [r3, #8]
   18260:	mov	r1, r0
   18264:	mov	r0, r4
   18268:	bl	15568 <g_error_new@plt>
   1826c:	mov	r1, r0
   18270:	mov	r4, r0
   18274:	mov	r0, r8
   18278:	bl	17748 <g_strcmp0@plt+0x18c8>
   1827c:	ldr	r0, [sp, #16]
   18280:	bl	15064 <g_error_free@plt>
   18284:	mov	r0, r4
   18288:	bl	15064 <g_error_free@plt>
   1828c:	ldr	r0, [sp, #8]
   18290:	bl	15874 <g_free@plt>
   18294:	b	180f4 <g_strcmp0@plt+0x2274>
   18298:	ldr	r3, [r8, #12]
   1829c:	ldr	r0, [r3, #64]	; 0x40
   182a0:	cmp	r0, #0
   182a4:	beq	18370 <g_strcmp0@plt+0x24f0>
   182a8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   182ac:	ldr	r2, [pc, #580]	; 184f8 <g_strcmp0@plt+0x2678>
   182b0:	mov	r1, #8
   182b4:	bl	15568 <g_error_new@plt>
   182b8:	mov	r1, r0
   182bc:	mov	r4, r0
   182c0:	mov	r0, r8
   182c4:	bl	17748 <g_strcmp0@plt+0x18c8>
   182c8:	mov	r0, r4
   182cc:	bl	15064 <g_error_free@plt>
   182d0:	mov	r0, #0
   182d4:	bl	15874 <g_free@plt>
   182d8:	b	181f4 <g_strcmp0@plt+0x2374>
   182dc:	ldr	r3, [r4, #64]	; 0x40
   182e0:	cmp	r3, #0
   182e4:	bne	182f8 <g_strcmp0@plt+0x2478>
   182e8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   182ec:	ldr	r2, [pc, #520]	; 184fc <g_strcmp0@plt+0x267c>
   182f0:	mov	r1, #0
   182f4:	b	182b4 <g_strcmp0@plt+0x2434>
   182f8:	ldr	r0, [r4, #36]	; 0x24
   182fc:	mov	r2, #0
   18300:	mov	r3, #0
   18304:	mov	r1, #3
   18308:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1830c:	ldr	r3, [r8, #12]
   18310:	mov	r2, #5
   18314:	ldr	r1, [pc, #484]	; 18500 <g_strcmp0@plt+0x2680>
   18318:	mov	r0, r6
   1831c:	ldr	r4, [r3, #36]	; 0x24
   18320:	bl	15880 <dcgettext@plt>
   18324:	mov	r1, r0
   18328:	mov	r0, r4
   1832c:	bl	210e0 <g_strcmp0@plt+0xb260>
   18330:	ldr	r3, [r8, #12]
   18334:	mov	r2, #5
   18338:	mov	r0, r6
   1833c:	ldr	r1, [pc, #448]	; 18504 <g_strcmp0@plt+0x2684>
   18340:	ldr	r4, [r3, #36]	; 0x24
   18344:	bl	15880 <dcgettext@plt>
   18348:	mov	r1, r0
   1834c:	mov	r0, r4
   18350:	bl	213e8 <g_strcmp0@plt+0xb568>
   18354:	ldr	r3, [r8, #12]
   18358:	ldr	r0, [r3, #36]	; 0x24
   1835c:	bl	22324 <g_strcmp0@plt+0xc4a4>
   18360:	ldr	r3, [r8, #12]
   18364:	ldr	r0, [r3, #36]	; 0x24
   18368:	bl	2232c <g_strcmp0@plt+0xc4ac>
   1836c:	b	182e8 <g_strcmp0@plt+0x2468>
   18370:	mov	r2, #5
   18374:	ldr	r1, [pc, #396]	; 18508 <g_strcmp0@plt+0x2688>
   18378:	bl	15880 <dcgettext@plt>
   1837c:	bl	15490 <g_strdup_printf@plt>
   18380:	ldr	r3, [r8, #12]
   18384:	mov	r1, #4
   18388:	mov	r4, r0
   1838c:	ldr	r0, [r3, #40]	; 0x28
   18390:	bl	205b0 <g_strcmp0@plt+0xa730>
   18394:	mov	r3, #0
   18398:	mov	r1, #3
   1839c:	subs	r6, r0, #0
   183a0:	ldr	r0, [r8, #12]
   183a4:	movne	r2, #4
   183a8:	moveq	r2, #0
   183ac:	ldr	r0, [r0, #36]	; 0x24
   183b0:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   183b4:	ldr	r3, [r8, #12]
   183b8:	mov	r1, r4
   183bc:	ldr	r0, [r3, #36]	; 0x24
   183c0:	bl	210e0 <g_strcmp0@plt+0xb260>
   183c4:	ldr	r3, [r8, #12]
   183c8:	mov	r2, #5
   183cc:	ldr	r1, [pc, #312]	; 1850c <g_strcmp0@plt+0x268c>
   183d0:	mov	r0, #0
   183d4:	ldr	r9, [r3, #36]	; 0x24
   183d8:	bl	15880 <dcgettext@plt>
   183dc:	mov	r1, r0
   183e0:	mov	r0, r9
   183e4:	bl	213e8 <g_strcmp0@plt+0xb568>
   183e8:	ldr	r3, [r8, #12]
   183ec:	mov	r2, #5
   183f0:	ldr	r1, [pc, #280]	; 18510 <g_strcmp0@plt+0x2690>
   183f4:	mov	r0, #0
   183f8:	ldr	r9, [r3, #36]	; 0x24
   183fc:	bl	15880 <dcgettext@plt>
   18400:	mov	r1, r0
   18404:	mov	r0, r9
   18408:	bl	21950 <g_strcmp0@plt+0xbad0>
   1840c:	ldr	r3, [r8, #12]
   18410:	ldr	r0, [r3, #36]	; 0x24
   18414:	bl	22324 <g_strcmp0@plt+0xc4a4>
   18418:	ldr	r3, [r8, #12]
   1841c:	ldr	r0, [r3, #36]	; 0x24
   18420:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18424:	cmn	r0, #5
   18428:	beq	184cc <g_strcmp0@plt+0x264c>
   1842c:	mov	r0, r6
   18430:	bl	15874 <g_free@plt>
   18434:	mov	r0, r4
   18438:	bl	15874 <g_free@plt>
   1843c:	b	182a8 <g_strcmp0@plt+0x2428>
   18440:	mov	r2, #0
   18444:	mov	r1, #2
   18448:	ldr	r0, [r4, #36]	; 0x24
   1844c:	mov	r3, #0
   18450:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   18454:	ldr	r3, [r8, #12]
   18458:	mov	r4, #5
   1845c:	ldr	r0, [r3, #104]	; 0x68
   18460:	ldr	r9, [r3, #36]	; 0x24
   18464:	bl	157a8 <g_strv_length@plt>
   18468:	str	r4, [sp]
   1846c:	ldr	r2, [pc, #160]	; 18514 <g_strcmp0@plt+0x2694>
   18470:	ldr	r1, [pc, #160]	; 18518 <g_strcmp0@plt+0x2698>
   18474:	mov	r3, r0
   18478:	mov	r0, #0
   1847c:	bl	154a8 <dcngettext@plt>
   18480:	mov	r1, r0
   18484:	mov	r0, r9
   18488:	bl	210e0 <g_strcmp0@plt+0xb260>
   1848c:	ldr	r3, [r8, #12]
   18490:	mov	r2, r4
   18494:	ldr	r1, [pc, #128]	; 1851c <g_strcmp0@plt+0x269c>
   18498:	mov	r0, #0
   1849c:	ldr	r4, [r3, #36]	; 0x24
   184a0:	bl	15880 <dcgettext@plt>
   184a4:	mov	r1, r0
   184a8:	mov	r0, r4
   184ac:	bl	213e8 <g_strcmp0@plt+0xb568>
   184b0:	ldr	r3, [r8, #12]
   184b4:	ldr	r0, [r3, #36]	; 0x24
   184b8:	bl	22324 <g_strcmp0@plt+0xc4a4>
   184bc:	ldr	r3, [r8, #12]
   184c0:	ldr	r0, [r3, #36]	; 0x24
   184c4:	bl	2232c <g_strcmp0@plt+0xc4ac>
   184c8:	b	1820c <g_strcmp0@plt+0x238c>
   184cc:	mov	r0, r6
   184d0:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   184d4:	b	1842c <g_strcmp0@plt+0x25ac>
   184d8:	bl	157f0 <__stack_chk_fail@plt>
   184dc:	andeq	r0, r4, r0, asr lr
   184e0:	andeq	r9, r2, r8, ror #16
   184e4:	andeq	r9, r2, r4, asr #17
   184e8:	andeq	r0, r3, r8, lsr #17
   184ec:	andeq	r9, r2, r8, lsr sl
   184f0:	andeq	r8, r2, ip, lsl #29
   184f4:	andeq	r9, r2, r8, lsr #21
   184f8:	andeq	r9, r2, r4, lsr #20
   184fc:	strdeq	r9, [r2], -ip
   18500:	andeq	r9, r2, r0, asr #21
   18504:	ldrdeq	r9, [r2], -ip
   18508:	ldrdeq	r9, [r2], -r4
   1850c:	andeq	r9, r2, ip, ror #19
   18510:	andeq	r9, r2, ip, lsr r9
   18514:	andeq	r9, r2, r0, asr sl
   18518:	andeq	r9, r2, r4, ror sl
   1851c:	muleq	r2, r8, sl
   18520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18524:	sub	sp, sp, #20
   18528:	ldr	r5, [pc, #852]	; 18884 <g_strcmp0@plt+0x2a04>
   1852c:	mov	r4, r2
   18530:	mov	r2, #0
   18534:	ldr	r3, [r5]
   18538:	str	r2, [sp, #8]
   1853c:	add	r2, sp, #8
   18540:	str	r3, [sp, #12]
   18544:	bl	15454 <pk_client_generic_finish@plt>
   18548:	subs	r7, r0, #0
   1854c:	beq	1870c <g_strcmp0@plt+0x288c>
   18550:	bl	15244 <pk_results_get_error_code@plt>
   18554:	subs	r6, r0, #0
   18558:	beq	185d4 <g_strcmp0@plt+0x2754>
   1855c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18560:	mov	r8, r0
   18564:	mov	r0, r6
   18568:	bl	152ec <pk_error_get_code@plt>
   1856c:	cmp	r0, #17
   18570:	mov	r0, r6
   18574:	movne	r9, #0
   18578:	moveq	r9, #17
   1857c:	bl	152d4 <pk_error_get_details@plt>
   18580:	ldr	r2, [pc, #768]	; 18888 <g_strcmp0@plt+0x2a08>
   18584:	mov	r1, r9
   18588:	mov	r3, r0
   1858c:	mov	r0, r8
   18590:	bl	15568 <g_error_new@plt>
   18594:	mov	r1, r0
   18598:	mov	r8, r0
   1859c:	mov	r0, r4
   185a0:	bl	17748 <g_strcmp0@plt+0x18c8>
   185a4:	mov	r0, r8
   185a8:	bl	15064 <g_error_free@plt>
   185ac:	mov	r0, r6
   185b0:	bl	15b5c <g_object_unref@plt>
   185b4:	mov	r0, r7
   185b8:	bl	15b5c <g_object_unref@plt>
   185bc:	ldr	r2, [sp, #12]
   185c0:	ldr	r3, [r5]
   185c4:	cmp	r2, r3
   185c8:	bne	18880 <g_strcmp0@plt+0x2a00>
   185cc:	add	sp, sp, #20
   185d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185d4:	mov	r0, r7
   185d8:	bl	14f80 <pk_results_get_package_array@plt>
   185dc:	ldr	r2, [r4, #12]
   185e0:	ldr	r3, [r0, #4]
   185e4:	mov	r8, r0
   185e8:	cmp	r3, #0
   185ec:	beq	1875c <g_strcmp0@plt+0x28dc>
   185f0:	ldr	r2, [r2, #52]	; 0x34
   185f4:	cmp	r2, #0
   185f8:	beq	186f8 <g_strcmp0@plt+0x2878>
   185fc:	mov	r9, #5
   18600:	ldr	r2, [pc, #644]	; 1888c <g_strcmp0@plt+0x2a0c>
   18604:	ldr	r1, [pc, #644]	; 18890 <g_strcmp0@plt+0x2a10>
   18608:	mov	r0, r6
   1860c:	str	r9, [sp]
   18610:	bl	154a8 <dcngettext@plt>
   18614:	ldr	r3, [r8, #4]
   18618:	ldr	r2, [pc, #628]	; 18894 <g_strcmp0@plt+0x2a14>
   1861c:	ldr	r1, [pc, #628]	; 18898 <g_strcmp0@plt+0x2a18>
   18620:	str	r9, [sp]
   18624:	mov	fp, r0
   18628:	mov	r0, r6
   1862c:	bl	154a8 <dcngettext@plt>
   18630:	mov	r2, #16
   18634:	mov	r1, r6
   18638:	mov	r3, #0
   1863c:	mov	sl, r0
   18640:	ldr	r0, [r4, #12]
   18644:	ldr	r0, [r0, #36]	; 0x24
   18648:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1864c:	ldr	r3, [r4, #12]
   18650:	mov	r1, r8
   18654:	ldr	r0, [r3, #36]	; 0x24
   18658:	bl	22638 <g_strcmp0@plt+0xc7b8>
   1865c:	ldr	r3, [r4, #12]
   18660:	mov	r1, fp
   18664:	ldr	r0, [r3, #36]	; 0x24
   18668:	bl	210e0 <g_strcmp0@plt+0xb260>
   1866c:	ldr	r3, [r4, #12]
   18670:	mov	r1, sl
   18674:	ldr	r0, [r3, #36]	; 0x24
   18678:	bl	213e8 <g_strcmp0@plt+0xb568>
   1867c:	ldr	r3, [r4, #12]
   18680:	ldr	r1, [pc, #532]	; 1889c <g_strcmp0@plt+0x2a1c>
   18684:	ldr	r0, [r3, #36]	; 0x24
   18688:	bl	21dac <g_strcmp0@plt+0xbf2c>
   1868c:	ldr	r3, [r4, #12]
   18690:	mov	r2, r9
   18694:	mov	r0, r6
   18698:	ldr	r1, [pc, #512]	; 188a0 <g_strcmp0@plt+0x2a20>
   1869c:	ldr	r6, [r3, #36]	; 0x24
   186a0:	bl	15880 <dcgettext@plt>
   186a4:	mov	r1, r0
   186a8:	mov	r0, r6
   186ac:	bl	21950 <g_strcmp0@plt+0xbad0>
   186b0:	ldr	r3, [r4, #12]
   186b4:	ldr	r1, [r3, #68]	; 0x44
   186b8:	ldr	r0, [r3, #36]	; 0x24
   186bc:	bl	22070 <g_strcmp0@plt+0xc1f0>
   186c0:	ldr	r3, [r4, #12]
   186c4:	ldr	r0, [r3, #36]	; 0x24
   186c8:	bl	2232c <g_strcmp0@plt+0xc4ac>
   186cc:	cmn	r0, #5
   186d0:	bne	18794 <g_strcmp0@plt+0x2914>
   186d4:	mov	r0, r8
   186d8:	ldr	r6, [r4, #12]
   186dc:	bl	24068 <g_strcmp0@plt+0xe1e8>
   186e0:	str	r0, [r6, #104]	; 0x68
   186e4:	mov	r0, r4
   186e8:	bl	1731c <g_strcmp0@plt+0x149c>
   186ec:	mov	r0, r8
   186f0:	bl	15c7c <g_ptr_array_unref@plt>
   186f4:	b	185b4 <g_strcmp0@plt+0x2734>
   186f8:	ldr	r2, [pc, #420]	; 188a4 <g_strcmp0@plt+0x2a24>
   186fc:	mov	r1, #128	; 0x80
   18700:	ldr	r0, [pc, #416]	; 188a8 <g_strcmp0@plt+0x2a28>
   18704:	bl	151f0 <g_log@plt>
   18708:	b	186d4 <g_strcmp0@plt+0x2854>
   1870c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18710:	mov	r6, r0
   18714:	ldr	r0, [sp, #8]
   18718:	add	r1, r0, #4
   1871c:	bl	17900 <g_strcmp0@plt+0x1a80>
   18720:	ldr	r3, [sp, #8]
   18724:	ldr	r2, [pc, #348]	; 18888 <g_strcmp0@plt+0x2a08>
   18728:	ldr	r3, [r3, #8]
   1872c:	mov	r1, r0
   18730:	mov	r0, r6
   18734:	bl	15568 <g_error_new@plt>
   18738:	mov	r1, r0
   1873c:	mov	r6, r0
   18740:	mov	r0, r4
   18744:	bl	17748 <g_strcmp0@plt+0x18c8>
   18748:	ldr	r0, [sp, #8]
   1874c:	bl	15064 <g_error_free@plt>
   18750:	mov	r0, r6
   18754:	bl	15064 <g_error_free@plt>
   18758:	b	185bc <g_strcmp0@plt+0x273c>
   1875c:	ldr	r1, [r2, #64]	; 0x40
   18760:	cmp	r1, #0
   18764:	bne	187b0 <g_strcmp0@plt+0x2930>
   18768:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1876c:	ldr	r2, [pc, #312]	; 188ac <g_strcmp0@plt+0x2a2c>
   18770:	mov	r1, #8
   18774:	bl	15568 <g_error_new@plt>
   18778:	mov	r6, r0
   1877c:	mov	r1, r0
   18780:	mov	r0, r4
   18784:	bl	17748 <g_strcmp0@plt+0x18c8>
   18788:	mov	r0, r6
   1878c:	bl	15064 <g_error_free@plt>
   18790:	b	186ec <g_strcmp0@plt+0x286c>
   18794:	ldr	r3, [r4, #12]
   18798:	ldr	r0, [r3, #36]	; 0x24
   1879c:	bl	223d4 <g_strcmp0@plt+0xc554>
   187a0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   187a4:	ldr	r2, [pc, #260]	; 188b0 <g_strcmp0@plt+0x2a30>
   187a8:	mov	r1, #17
   187ac:	b	18774 <g_strcmp0@plt+0x28f4>
   187b0:	ldr	r0, [r2, #40]	; 0x28
   187b4:	mov	r1, r3
   187b8:	bl	205b0 <g_strcmp0@plt+0xa730>
   187bc:	mov	r3, #0
   187c0:	mov	r1, #3
   187c4:	subs	r6, r0, #0
   187c8:	ldr	r0, [r4, #12]
   187cc:	movne	r2, #4
   187d0:	moveq	r2, #0
   187d4:	ldr	r0, [r0, #36]	; 0x24
   187d8:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   187dc:	ldr	r3, [r4, #12]
   187e0:	mov	r2, #5
   187e4:	ldr	r1, [pc, #200]	; 188b4 <g_strcmp0@plt+0x2a34>
   187e8:	mov	r0, #0
   187ec:	ldr	r9, [r3, #36]	; 0x24
   187f0:	bl	15880 <dcgettext@plt>
   187f4:	mov	r1, r0
   187f8:	mov	r0, r9
   187fc:	bl	210e0 <g_strcmp0@plt+0xb260>
   18800:	ldr	r3, [r4, #12]
   18804:	mov	r2, #5
   18808:	ldr	r1, [pc, #168]	; 188b8 <g_strcmp0@plt+0x2a38>
   1880c:	mov	r0, #0
   18810:	ldr	r9, [r3, #36]	; 0x24
   18814:	bl	15880 <dcgettext@plt>
   18818:	mov	r1, r0
   1881c:	mov	r0, r9
   18820:	bl	213e8 <g_strcmp0@plt+0xb568>
   18824:	ldr	r3, [r4, #12]
   18828:	mov	r2, #5
   1882c:	ldr	r1, [pc, #136]	; 188bc <g_strcmp0@plt+0x2a3c>
   18830:	mov	r0, #0
   18834:	ldr	r9, [r3, #36]	; 0x24
   18838:	bl	15880 <dcgettext@plt>
   1883c:	mov	r1, r0
   18840:	mov	r0, r9
   18844:	bl	21950 <g_strcmp0@plt+0xbad0>
   18848:	ldr	r3, [r4, #12]
   1884c:	ldr	r0, [r3, #36]	; 0x24
   18850:	bl	22324 <g_strcmp0@plt+0xc4a4>
   18854:	ldr	r3, [r4, #12]
   18858:	ldr	r0, [r3, #36]	; 0x24
   1885c:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18860:	cmn	r0, #5
   18864:	beq	18874 <g_strcmp0@plt+0x29f4>
   18868:	mov	r0, r6
   1886c:	bl	15874 <g_free@plt>
   18870:	b	18768 <g_strcmp0@plt+0x28e8>
   18874:	mov	r0, r6
   18878:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   1887c:	b	18868 <g_strcmp0@plt+0x29e8>
   18880:	bl	157f0 <__stack_chk_fail@plt>
   18884:	andeq	r0, r4, r0, asr lr
   18888:	andeq	r9, r2, r8, ror #16
   1888c:			; <UNDEFINED> instruction: 0x00029bbc
   18890:	ldrdeq	r9, [r2], -ip
   18894:	strdeq	r9, [r2], -ip
   18898:	andeq	r9, r2, r8, lsr #24
   1889c:	andeq	r9, r2, r4, asr ip
   188a0:	andeq	r9, r2, r8, ror #24
   188a4:	andeq	r9, r2, r8, lsl #23
   188a8:	andeq	r8, r2, ip, lsl #29
   188ac:	andeq	r9, r2, r0, ror fp
   188b0:	andeq	r9, r2, r0, ror ip
   188b4:	andeq	r9, r2, ip, lsl fp
   188b8:	andeq	r9, r2, r8, lsr fp
   188bc:	andeq	r9, r2, ip, lsr r9
   188c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188c4:	sub	sp, sp, #16
   188c8:	ldr	r5, [pc, #844]	; 18c1c <g_strcmp0@plt+0x2d9c>
   188cc:	mov	r4, r2
   188d0:	mov	r2, #0
   188d4:	ldr	r3, [r5]
   188d8:	str	r2, [sp, #8]
   188dc:	add	r2, sp, #8
   188e0:	str	r3, [sp, #12]
   188e4:	bl	15454 <pk_client_generic_finish@plt>
   188e8:	subs	r7, r0, #0
   188ec:	beq	18a94 <g_strcmp0@plt+0x2c14>
   188f0:	bl	15244 <pk_results_get_error_code@plt>
   188f4:	subs	r6, r0, #0
   188f8:	beq	18974 <g_strcmp0@plt+0x2af4>
   188fc:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18900:	mov	r8, r0
   18904:	mov	r0, r6
   18908:	bl	152ec <pk_error_get_code@plt>
   1890c:	cmp	r0, #17
   18910:	mov	r0, r6
   18914:	movne	r9, #0
   18918:	moveq	r9, #17
   1891c:	bl	152d4 <pk_error_get_details@plt>
   18920:	ldr	r2, [pc, #760]	; 18c20 <g_strcmp0@plt+0x2da0>
   18924:	mov	r1, r9
   18928:	mov	r3, r0
   1892c:	mov	r0, r8
   18930:	bl	15568 <g_error_new@plt>
   18934:	mov	r1, r0
   18938:	mov	r8, r0
   1893c:	mov	r0, r4
   18940:	bl	17748 <g_strcmp0@plt+0x18c8>
   18944:	mov	r0, r8
   18948:	bl	15064 <g_error_free@plt>
   1894c:	mov	r0, r6
   18950:	bl	15b5c <g_object_unref@plt>
   18954:	mov	r0, r7
   18958:	bl	15b5c <g_object_unref@plt>
   1895c:	ldr	r2, [sp, #12]
   18960:	ldr	r3, [r5]
   18964:	cmp	r2, r3
   18968:	bne	18c18 <g_strcmp0@plt+0x2d98>
   1896c:	add	sp, sp, #16
   18970:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18974:	mov	r0, r7
   18978:	bl	14f80 <pk_results_get_package_array@plt>
   1897c:	ldr	r3, [r4, #12]
   18980:	ldr	r9, [r0, #4]
   18984:	mov	r8, r0
   18988:	cmp	r9, #0
   1898c:	beq	18ae4 <g_strcmp0@plt+0x2c64>
   18990:	ldr	r3, [r3, #52]	; 0x34
   18994:	cmp	r3, #0
   18998:	beq	18a80 <g_strcmp0@plt+0x2c00>
   1899c:	mov	sl, #5
   189a0:	mov	r3, r9
   189a4:	ldr	r2, [pc, #632]	; 18c24 <g_strcmp0@plt+0x2da4>
   189a8:	ldr	r1, [pc, #632]	; 18c28 <g_strcmp0@plt+0x2da8>
   189ac:	mov	r0, r6
   189b0:	str	sl, [sp]
   189b4:	bl	154a8 <dcngettext@plt>
   189b8:	mov	r2, #16
   189bc:	mov	r1, r6
   189c0:	mov	r3, #0
   189c4:	mov	r9, r0
   189c8:	ldr	r0, [r4, #12]
   189cc:	ldr	r0, [r0, #36]	; 0x24
   189d0:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   189d4:	ldr	r3, [r4, #12]
   189d8:	mov	r1, r8
   189dc:	ldr	r0, [r3, #36]	; 0x24
   189e0:	bl	22638 <g_strcmp0@plt+0xc7b8>
   189e4:	ldr	r3, [r4, #12]
   189e8:	mov	r1, r9
   189ec:	ldr	r0, [r3, #36]	; 0x24
   189f0:	bl	210e0 <g_strcmp0@plt+0xb260>
   189f4:	ldr	r3, [r4, #12]
   189f8:	mov	r1, r9
   189fc:	ldr	r0, [r3, #36]	; 0x24
   18a00:	bl	213e8 <g_strcmp0@plt+0xb568>
   18a04:	ldr	r3, [r4, #12]
   18a08:	ldr	r1, [pc, #540]	; 18c2c <g_strcmp0@plt+0x2dac>
   18a0c:	ldr	r0, [r3, #36]	; 0x24
   18a10:	bl	21dac <g_strcmp0@plt+0xbf2c>
   18a14:	ldr	r3, [r4, #12]
   18a18:	mov	r2, sl
   18a1c:	mov	r0, r6
   18a20:	ldr	r1, [pc, #520]	; 18c30 <g_strcmp0@plt+0x2db0>
   18a24:	ldr	r6, [r3, #36]	; 0x24
   18a28:	bl	15880 <dcgettext@plt>
   18a2c:	mov	r1, r0
   18a30:	mov	r0, r6
   18a34:	bl	21950 <g_strcmp0@plt+0xbad0>
   18a38:	ldr	r3, [r4, #12]
   18a3c:	ldr	r1, [r3, #68]	; 0x44
   18a40:	ldr	r0, [r3, #36]	; 0x24
   18a44:	bl	22070 <g_strcmp0@plt+0xc1f0>
   18a48:	ldr	r3, [r4, #12]
   18a4c:	ldr	r0, [r3, #36]	; 0x24
   18a50:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18a54:	cmn	r0, #5
   18a58:	bne	18b1c <g_strcmp0@plt+0x2c9c>
   18a5c:	mov	r0, r8
   18a60:	ldr	r6, [r4, #12]
   18a64:	bl	24068 <g_strcmp0@plt+0xe1e8>
   18a68:	str	r0, [r6, #104]	; 0x68
   18a6c:	mov	r0, r4
   18a70:	bl	1731c <g_strcmp0@plt+0x149c>
   18a74:	mov	r0, r8
   18a78:	bl	15c7c <g_ptr_array_unref@plt>
   18a7c:	b	18954 <g_strcmp0@plt+0x2ad4>
   18a80:	ldr	r2, [pc, #428]	; 18c34 <g_strcmp0@plt+0x2db4>
   18a84:	mov	r1, #128	; 0x80
   18a88:	ldr	r0, [pc, #424]	; 18c38 <g_strcmp0@plt+0x2db8>
   18a8c:	bl	151f0 <g_log@plt>
   18a90:	b	18a5c <g_strcmp0@plt+0x2bdc>
   18a94:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18a98:	mov	r6, r0
   18a9c:	ldr	r0, [sp, #8]
   18aa0:	add	r1, r0, #4
   18aa4:	bl	17900 <g_strcmp0@plt+0x1a80>
   18aa8:	ldr	r3, [sp, #8]
   18aac:	ldr	r2, [pc, #364]	; 18c20 <g_strcmp0@plt+0x2da0>
   18ab0:	ldr	r3, [r3, #8]
   18ab4:	mov	r1, r0
   18ab8:	mov	r0, r6
   18abc:	bl	15568 <g_error_new@plt>
   18ac0:	mov	r1, r0
   18ac4:	mov	r6, r0
   18ac8:	mov	r0, r4
   18acc:	bl	17748 <g_strcmp0@plt+0x18c8>
   18ad0:	ldr	r0, [sp, #8]
   18ad4:	bl	15064 <g_error_free@plt>
   18ad8:	mov	r0, r6
   18adc:	bl	15064 <g_error_free@plt>
   18ae0:	b	1895c <g_strcmp0@plt+0x2adc>
   18ae4:	ldr	r2, [r3, #64]	; 0x40
   18ae8:	cmp	r2, #0
   18aec:	bne	18b38 <g_strcmp0@plt+0x2cb8>
   18af0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18af4:	ldr	r2, [pc, #320]	; 18c3c <g_strcmp0@plt+0x2dbc>
   18af8:	mov	r1, #8
   18afc:	bl	15568 <g_error_new@plt>
   18b00:	mov	r6, r0
   18b04:	mov	r1, r0
   18b08:	mov	r0, r4
   18b0c:	bl	17748 <g_strcmp0@plt+0x18c8>
   18b10:	mov	r0, r6
   18b14:	bl	15064 <g_error_free@plt>
   18b18:	b	18a74 <g_strcmp0@plt+0x2bf4>
   18b1c:	ldr	r3, [r4, #12]
   18b20:	ldr	r0, [r3, #36]	; 0x24
   18b24:	bl	223d4 <g_strcmp0@plt+0xc554>
   18b28:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18b2c:	ldr	r2, [pc, #268]	; 18c40 <g_strcmp0@plt+0x2dc0>
   18b30:	mov	r1, #17
   18b34:	b	18afc <g_strcmp0@plt+0x2c7c>
   18b38:	ldr	r0, [r3, #40]	; 0x28
   18b3c:	mov	r1, #1
   18b40:	bl	205b0 <g_strcmp0@plt+0xa730>
   18b44:	mov	r2, #5
   18b48:	ldr	r3, [r8, #4]
   18b4c:	ldr	r1, [pc, #240]	; 18c44 <g_strcmp0@plt+0x2dc4>
   18b50:	str	r2, [sp]
   18b54:	ldr	r2, [pc, #236]	; 18c48 <g_strcmp0@plt+0x2dc8>
   18b58:	mov	r6, r0
   18b5c:	mov	r0, r9
   18b60:	bl	154a8 <dcngettext@plt>
   18b64:	cmp	r6, #0
   18b68:	movne	r2, #4
   18b6c:	moveq	r2, #0
   18b70:	mov	r3, #0
   18b74:	mov	r1, #3
   18b78:	mov	r9, r0
   18b7c:	ldr	r0, [r4, #12]
   18b80:	ldr	r0, [r0, #36]	; 0x24
   18b84:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   18b88:	ldr	r3, [r4, #12]
   18b8c:	mov	r1, r9
   18b90:	ldr	r0, [r3, #36]	; 0x24
   18b94:	bl	210e0 <g_strcmp0@plt+0xb260>
   18b98:	ldr	r3, [r4, #12]
   18b9c:	mov	r2, #5
   18ba0:	ldr	r1, [pc, #164]	; 18c4c <g_strcmp0@plt+0x2dcc>
   18ba4:	mov	r0, #0
   18ba8:	ldr	r9, [r3, #36]	; 0x24
   18bac:	bl	15880 <dcgettext@plt>
   18bb0:	mov	r1, r0
   18bb4:	mov	r0, r9
   18bb8:	bl	213e8 <g_strcmp0@plt+0xb568>
   18bbc:	ldr	r3, [r4, #12]
   18bc0:	mov	r2, #5
   18bc4:	ldr	r1, [pc, #132]	; 18c50 <g_strcmp0@plt+0x2dd0>
   18bc8:	mov	r0, #0
   18bcc:	ldr	r9, [r3, #36]	; 0x24
   18bd0:	bl	15880 <dcgettext@plt>
   18bd4:	mov	r1, r0
   18bd8:	mov	r0, r9
   18bdc:	bl	21950 <g_strcmp0@plt+0xbad0>
   18be0:	ldr	r3, [r4, #12]
   18be4:	ldr	r0, [r3, #36]	; 0x24
   18be8:	bl	22324 <g_strcmp0@plt+0xc4a4>
   18bec:	ldr	r3, [r4, #12]
   18bf0:	ldr	r0, [r3, #36]	; 0x24
   18bf4:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18bf8:	cmn	r0, #5
   18bfc:	beq	18c0c <g_strcmp0@plt+0x2d8c>
   18c00:	mov	r0, r6
   18c04:	bl	15874 <g_free@plt>
   18c08:	b	18af0 <g_strcmp0@plt+0x2c70>
   18c0c:	mov	r0, r6
   18c10:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   18c14:	b	18c00 <g_strcmp0@plt+0x2d80>
   18c18:	bl	157f0 <__stack_chk_fail@plt>
   18c1c:	andeq	r0, r4, r0, asr lr
   18c20:	andeq	r9, r2, ip, lsl #25
   18c24:	strdeq	r9, [r2], -ip
   18c28:	andeq	r9, r2, r8, lsr #24
   18c2c:	andeq	r9, r2, r4, asr ip
   18c30:	andeq	r9, r2, r8, ror #24
   18c34:	andeq	r9, r2, r8, lsl #23
   18c38:	andeq	r8, r2, ip, lsl #29
   18c3c:	andeq	r9, r2, r8, lsl #26
   18c40:	andeq	r9, r2, r0, ror ip
   18c44:	andeq	r9, r2, r8, asr #25
   18c48:			; <UNDEFINED> instruction: 0x00029cb0
   18c4c:	ldrdeq	r9, [r2], -ip
   18c50:	andeq	r9, r2, ip, lsr r9
   18c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c58:	sub	sp, sp, #20
   18c5c:	ldr	r5, [pc, #856]	; 18fbc <g_strcmp0@plt+0x313c>
   18c60:	mov	r4, r2
   18c64:	mov	r2, #0
   18c68:	ldr	r3, [r5]
   18c6c:	str	r2, [sp, #8]
   18c70:	add	r2, sp, #8
   18c74:	str	r3, [sp, #12]
   18c78:	bl	15454 <pk_client_generic_finish@plt>
   18c7c:	subs	r7, r0, #0
   18c80:	beq	18e40 <g_strcmp0@plt+0x2fc0>
   18c84:	bl	15244 <pk_results_get_error_code@plt>
   18c88:	subs	r6, r0, #0
   18c8c:	beq	18d08 <g_strcmp0@plt+0x2e88>
   18c90:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18c94:	mov	r8, r0
   18c98:	mov	r0, r6
   18c9c:	bl	152ec <pk_error_get_code@plt>
   18ca0:	cmp	r0, #17
   18ca4:	mov	r0, r6
   18ca8:	movne	r9, #0
   18cac:	moveq	r9, #17
   18cb0:	bl	152d4 <pk_error_get_details@plt>
   18cb4:	ldr	r2, [pc, #772]	; 18fc0 <g_strcmp0@plt+0x3140>
   18cb8:	mov	r1, r9
   18cbc:	mov	r3, r0
   18cc0:	mov	r0, r8
   18cc4:	bl	15568 <g_error_new@plt>
   18cc8:	mov	r1, r0
   18ccc:	mov	r8, r0
   18cd0:	mov	r0, r4
   18cd4:	bl	17748 <g_strcmp0@plt+0x18c8>
   18cd8:	mov	r0, r8
   18cdc:	bl	15064 <g_error_free@plt>
   18ce0:	mov	r0, r6
   18ce4:	bl	15b5c <g_object_unref@plt>
   18ce8:	mov	r0, r7
   18cec:	bl	15b5c <g_object_unref@plt>
   18cf0:	ldr	r2, [sp, #12]
   18cf4:	ldr	r3, [r5]
   18cf8:	cmp	r2, r3
   18cfc:	bne	18fb8 <g_strcmp0@plt+0x3138>
   18d00:	add	sp, sp, #20
   18d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d08:	mov	r0, r7
   18d0c:	bl	14f80 <pk_results_get_package_array@plt>
   18d10:	ldr	r3, [r0, #4]
   18d14:	mov	r8, r0
   18d18:	cmp	r3, #0
   18d1c:	beq	18e90 <g_strcmp0@plt+0x3010>
   18d20:	ldr	r2, [r4, #12]
   18d24:	ldr	r2, [r2, #52]	; 0x34
   18d28:	cmp	r2, #0
   18d2c:	beq	18e2c <g_strcmp0@plt+0x2fac>
   18d30:	mov	r9, #5
   18d34:	ldr	r2, [pc, #648]	; 18fc4 <g_strcmp0@plt+0x3144>
   18d38:	ldr	r1, [pc, #648]	; 18fc8 <g_strcmp0@plt+0x3148>
   18d3c:	mov	r0, r6
   18d40:	str	r9, [sp]
   18d44:	bl	154a8 <dcngettext@plt>
   18d48:	ldr	r3, [r8, #4]
   18d4c:	ldr	r2, [pc, #632]	; 18fcc <g_strcmp0@plt+0x314c>
   18d50:	ldr	r1, [pc, #632]	; 18fd0 <g_strcmp0@plt+0x3150>
   18d54:	str	r9, [sp]
   18d58:	mov	fp, r0
   18d5c:	mov	r0, r6
   18d60:	bl	154a8 <dcngettext@plt>
   18d64:	mov	r2, #16
   18d68:	mov	r1, r6
   18d6c:	mov	r3, #0
   18d70:	mov	sl, r0
   18d74:	ldr	r0, [r4, #12]
   18d78:	ldr	r0, [r0, #36]	; 0x24
   18d7c:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   18d80:	ldr	r3, [r4, #12]
   18d84:	mov	r1, r8
   18d88:	ldr	r0, [r3, #36]	; 0x24
   18d8c:	bl	22638 <g_strcmp0@plt+0xc7b8>
   18d90:	ldr	r3, [r4, #12]
   18d94:	mov	r1, fp
   18d98:	ldr	r0, [r3, #36]	; 0x24
   18d9c:	bl	210e0 <g_strcmp0@plt+0xb260>
   18da0:	ldr	r3, [r4, #12]
   18da4:	mov	r1, sl
   18da8:	ldr	r0, [r3, #36]	; 0x24
   18dac:	bl	213e8 <g_strcmp0@plt+0xb568>
   18db0:	ldr	r3, [r4, #12]
   18db4:	ldr	r1, [pc, #536]	; 18fd4 <g_strcmp0@plt+0x3154>
   18db8:	ldr	r0, [r3, #36]	; 0x24
   18dbc:	bl	21dac <g_strcmp0@plt+0xbf2c>
   18dc0:	ldr	r3, [r4, #12]
   18dc4:	mov	r2, r9
   18dc8:	mov	r0, r6
   18dcc:	ldr	r1, [pc, #516]	; 18fd8 <g_strcmp0@plt+0x3158>
   18dd0:	ldr	r6, [r3, #36]	; 0x24
   18dd4:	bl	15880 <dcgettext@plt>
   18dd8:	mov	r1, r0
   18ddc:	mov	r0, r6
   18de0:	bl	21950 <g_strcmp0@plt+0xbad0>
   18de4:	ldr	r3, [r4, #12]
   18de8:	ldr	r1, [r3, #68]	; 0x44
   18dec:	ldr	r0, [r3, #36]	; 0x24
   18df0:	bl	22070 <g_strcmp0@plt+0xc1f0>
   18df4:	ldr	r3, [r4, #12]
   18df8:	ldr	r0, [r3, #36]	; 0x24
   18dfc:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18e00:	cmn	r0, #5
   18e04:	bne	18ecc <g_strcmp0@plt+0x304c>
   18e08:	mov	r0, r8
   18e0c:	ldr	r6, [r4, #12]
   18e10:	bl	24068 <g_strcmp0@plt+0xe1e8>
   18e14:	str	r0, [r6, #104]	; 0x68
   18e18:	mov	r0, r4
   18e1c:	bl	1731c <g_strcmp0@plt+0x149c>
   18e20:	mov	r0, r8
   18e24:	bl	15c7c <g_ptr_array_unref@plt>
   18e28:	b	18ce8 <g_strcmp0@plt+0x2e68>
   18e2c:	ldr	r2, [pc, #424]	; 18fdc <g_strcmp0@plt+0x315c>
   18e30:	mov	r1, #128	; 0x80
   18e34:	ldr	r0, [pc, #420]	; 18fe0 <g_strcmp0@plt+0x3160>
   18e38:	bl	151f0 <g_log@plt>
   18e3c:	b	18e08 <g_strcmp0@plt+0x2f88>
   18e40:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18e44:	mov	r6, r0
   18e48:	ldr	r0, [sp, #8]
   18e4c:	add	r1, r0, #4
   18e50:	bl	17900 <g_strcmp0@plt+0x1a80>
   18e54:	ldr	r3, [sp, #8]
   18e58:	ldr	r2, [pc, #352]	; 18fc0 <g_strcmp0@plt+0x3140>
   18e5c:	ldr	r3, [r3, #8]
   18e60:	mov	r1, r0
   18e64:	mov	r0, r6
   18e68:	bl	15568 <g_error_new@plt>
   18e6c:	mov	r1, r0
   18e70:	mov	r6, r0
   18e74:	mov	r0, r4
   18e78:	bl	17748 <g_strcmp0@plt+0x18c8>
   18e7c:	ldr	r0, [sp, #8]
   18e80:	bl	15064 <g_error_free@plt>
   18e84:	mov	r0, r6
   18e88:	bl	15064 <g_error_free@plt>
   18e8c:	b	18cf0 <g_strcmp0@plt+0x2e70>
   18e90:	ldr	r3, [r4, #12]
   18e94:	ldr	r2, [r3, #64]	; 0x40
   18e98:	cmp	r2, #0
   18e9c:	bne	18ee8 <g_strcmp0@plt+0x3068>
   18ea0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18ea4:	ldr	r2, [pc, #312]	; 18fe4 <g_strcmp0@plt+0x3164>
   18ea8:	mov	r1, #8
   18eac:	bl	15568 <g_error_new@plt>
   18eb0:	mov	r6, r0
   18eb4:	mov	r1, r0
   18eb8:	mov	r0, r4
   18ebc:	bl	17748 <g_strcmp0@plt+0x18c8>
   18ec0:	mov	r0, r6
   18ec4:	bl	15064 <g_error_free@plt>
   18ec8:	b	18e20 <g_strcmp0@plt+0x2fa0>
   18ecc:	ldr	r3, [r4, #12]
   18ed0:	ldr	r0, [r3, #36]	; 0x24
   18ed4:	bl	223d4 <g_strcmp0@plt+0xc554>
   18ed8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   18edc:	ldr	r2, [pc, #260]	; 18fe8 <g_strcmp0@plt+0x3168>
   18ee0:	mov	r1, #17
   18ee4:	b	18eac <g_strcmp0@plt+0x302c>
   18ee8:	ldr	r0, [r3, #40]	; 0x28
   18eec:	mov	r1, #4
   18ef0:	bl	205b0 <g_strcmp0@plt+0xa730>
   18ef4:	mov	r3, #0
   18ef8:	mov	r1, #3
   18efc:	subs	r6, r0, #0
   18f00:	ldr	r0, [r4, #12]
   18f04:	movne	r2, #4
   18f08:	moveq	r2, #0
   18f0c:	ldr	r0, [r0, #36]	; 0x24
   18f10:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   18f14:	ldr	r3, [r4, #12]
   18f18:	mov	r2, #5
   18f1c:	ldr	r1, [pc, #200]	; 18fec <g_strcmp0@plt+0x316c>
   18f20:	mov	r0, #0
   18f24:	ldr	r9, [r3, #36]	; 0x24
   18f28:	bl	15880 <dcgettext@plt>
   18f2c:	mov	r1, r0
   18f30:	mov	r0, r9
   18f34:	bl	210e0 <g_strcmp0@plt+0xb260>
   18f38:	ldr	r3, [r4, #12]
   18f3c:	mov	r2, #5
   18f40:	ldr	r1, [pc, #168]	; 18ff0 <g_strcmp0@plt+0x3170>
   18f44:	mov	r0, #0
   18f48:	ldr	r9, [r3, #36]	; 0x24
   18f4c:	bl	15880 <dcgettext@plt>
   18f50:	mov	r1, r0
   18f54:	mov	r0, r9
   18f58:	bl	213e8 <g_strcmp0@plt+0xb568>
   18f5c:	ldr	r3, [r4, #12]
   18f60:	mov	r2, #5
   18f64:	ldr	r1, [pc, #136]	; 18ff4 <g_strcmp0@plt+0x3174>
   18f68:	mov	r0, #0
   18f6c:	ldr	r9, [r3, #36]	; 0x24
   18f70:	bl	15880 <dcgettext@plt>
   18f74:	mov	r1, r0
   18f78:	mov	r0, r9
   18f7c:	bl	21950 <g_strcmp0@plt+0xbad0>
   18f80:	ldr	r3, [r4, #12]
   18f84:	ldr	r0, [r3, #36]	; 0x24
   18f88:	bl	22324 <g_strcmp0@plt+0xc4a4>
   18f8c:	ldr	r3, [r4, #12]
   18f90:	ldr	r0, [r3, #36]	; 0x24
   18f94:	bl	2232c <g_strcmp0@plt+0xc4ac>
   18f98:	cmn	r0, #5
   18f9c:	beq	18fac <g_strcmp0@plt+0x312c>
   18fa0:	mov	r0, r6
   18fa4:	bl	15874 <g_free@plt>
   18fa8:	b	18ea0 <g_strcmp0@plt+0x3020>
   18fac:	mov	r0, r6
   18fb0:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   18fb4:	b	18fa0 <g_strcmp0@plt+0x3120>
   18fb8:	bl	157f0 <__stack_chk_fail@plt>
   18fbc:	andeq	r0, r4, r0, asr lr
   18fc0:	andeq	r9, r2, r8, ror #16
   18fc4:			; <UNDEFINED> instruction: 0x00029bbc
   18fc8:	ldrdeq	r9, [r2], -ip
   18fcc:	strdeq	r9, [r2], -ip
   18fd0:	andeq	r9, r2, r8, lsr #24
   18fd4:	andeq	r9, r2, r4, asr ip
   18fd8:	andeq	r9, r2, r8, ror #24
   18fdc:	andeq	r9, r2, r8, lsl #23
   18fe0:	andeq	r8, r2, ip, lsl #29
   18fe4:	andeq	r9, r2, r8, ror sp
   18fe8:	andeq	r9, r2, r0, ror ip
   18fec:	andeq	r9, r2, ip, lsl sp
   18ff0:	andeq	r9, r2, r0, asr #26
   18ff4:	andeq	r9, r2, ip, lsr r9
   18ff8:	push	{r4, r5, r6, r7, r8, r9, lr}
   18ffc:	sub	sp, sp, #12
   19000:	ldr	r4, [pc, #596]	; 1925c <g_strcmp0@plt+0x33dc>
   19004:	mov	r5, r2
   19008:	mov	r2, #0
   1900c:	ldr	r3, [r4]
   19010:	str	r2, [sp]
   19014:	mov	r2, sp
   19018:	str	r3, [sp, #4]
   1901c:	bl	15454 <pk_client_generic_finish@plt>
   19020:	subs	r7, r0, #0
   19024:	beq	19118 <g_strcmp0@plt+0x3298>
   19028:	bl	15244 <pk_results_get_error_code@plt>
   1902c:	subs	r6, r0, #0
   19030:	beq	190ac <g_strcmp0@plt+0x322c>
   19034:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19038:	mov	r8, r0
   1903c:	mov	r0, r6
   19040:	bl	152ec <pk_error_get_code@plt>
   19044:	cmp	r0, #17
   19048:	mov	r0, r6
   1904c:	movne	r9, #0
   19050:	moveq	r9, #17
   19054:	bl	152d4 <pk_error_get_details@plt>
   19058:	ldr	r2, [pc, #512]	; 19260 <g_strcmp0@plt+0x33e0>
   1905c:	mov	r1, r9
   19060:	mov	r3, r0
   19064:	mov	r0, r8
   19068:	bl	15568 <g_error_new@plt>
   1906c:	mov	r1, r0
   19070:	mov	r8, r0
   19074:	mov	r0, r5
   19078:	bl	17748 <g_strcmp0@plt+0x18c8>
   1907c:	mov	r0, r8
   19080:	bl	15064 <g_error_free@plt>
   19084:	mov	r0, r6
   19088:	bl	15b5c <g_object_unref@plt>
   1908c:	mov	r0, r7
   19090:	bl	15b5c <g_object_unref@plt>
   19094:	ldr	r2, [sp, #4]
   19098:	ldr	r3, [r4]
   1909c:	cmp	r2, r3
   190a0:	bne	19258 <g_strcmp0@plt+0x33d8>
   190a4:	add	sp, sp, #12
   190a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   190ac:	mov	r0, r7
   190b0:	bl	14f80 <pk_results_get_package_array@plt>
   190b4:	ldr	r3, [r0, #4]
   190b8:	mov	r6, r0
   190bc:	cmp	r3, #0
   190c0:	ldr	r3, [r5, #12]
   190c4:	bne	19108 <g_strcmp0@plt+0x3288>
   190c8:	ldr	r2, [r3, #64]	; 0x40
   190cc:	cmp	r2, #0
   190d0:	bne	19188 <g_strcmp0@plt+0x3308>
   190d4:	bl	16fc0 <g_strcmp0@plt+0x1140>
   190d8:	ldr	r2, [pc, #388]	; 19264 <g_strcmp0@plt+0x33e4>
   190dc:	mov	r1, #8
   190e0:	bl	15568 <g_error_new@plt>
   190e4:	mov	r8, r0
   190e8:	mov	r1, r0
   190ec:	mov	r0, r5
   190f0:	bl	17748 <g_strcmp0@plt+0x18c8>
   190f4:	mov	r0, r8
   190f8:	bl	15064 <g_error_free@plt>
   190fc:	mov	r0, r6
   19100:	bl	15c7c <g_ptr_array_unref@plt>
   19104:	b	1908c <g_strcmp0@plt+0x320c>
   19108:	mov	r1, r0
   1910c:	ldr	r0, [r3, #96]	; 0x60
   19110:	bl	23c20 <g_strcmp0@plt+0xdda0>
   19114:	b	190fc <g_strcmp0@plt+0x327c>
   19118:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1911c:	mov	r6, r0
   19120:	ldr	r0, [sp]
   19124:	add	r1, r0, #4
   19128:	bl	17900 <g_strcmp0@plt+0x1a80>
   1912c:	ldr	r3, [sp]
   19130:	ldr	r2, [pc, #296]	; 19260 <g_strcmp0@plt+0x33e0>
   19134:	ldr	r3, [r3, #8]
   19138:	mov	r1, r0
   1913c:	mov	r0, r6
   19140:	bl	15568 <g_error_new@plt>
   19144:	mov	r2, #5
   19148:	ldr	r1, [pc, #280]	; 19268 <g_strcmp0@plt+0x33e8>
   1914c:	mov	r6, r0
   19150:	mov	r0, r7
   19154:	bl	15880 <dcgettext@plt>
   19158:	mov	r2, r6
   1915c:	mov	r1, r0
   19160:	mov	r0, r5
   19164:	bl	173fc <g_strcmp0@plt+0x157c>
   19168:	mov	r1, r6
   1916c:	mov	r0, r5
   19170:	bl	17748 <g_strcmp0@plt+0x18c8>
   19174:	ldr	r0, [sp]
   19178:	bl	15064 <g_error_free@plt>
   1917c:	mov	r0, r6
   19180:	bl	15064 <g_error_free@plt>
   19184:	b	19094 <g_strcmp0@plt+0x3214>
   19188:	ldr	r0, [r3, #40]	; 0x28
   1918c:	mov	r1, #2
   19190:	bl	205b0 <g_strcmp0@plt+0xa730>
   19194:	mov	r3, #0
   19198:	mov	r1, #3
   1919c:	subs	r8, r0, #0
   191a0:	ldr	r0, [r5, #12]
   191a4:	movne	r2, #4
   191a8:	moveq	r2, #0
   191ac:	ldr	r0, [r0, #36]	; 0x24
   191b0:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   191b4:	ldr	r3, [r5, #12]
   191b8:	mov	r2, #5
   191bc:	ldr	r1, [pc, #168]	; 1926c <g_strcmp0@plt+0x33ec>
   191c0:	mov	r0, #0
   191c4:	ldr	r9, [r3, #36]	; 0x24
   191c8:	bl	15880 <dcgettext@plt>
   191cc:	mov	r1, r0
   191d0:	mov	r0, r9
   191d4:	bl	210e0 <g_strcmp0@plt+0xb260>
   191d8:	ldr	r3, [r5, #12]
   191dc:	mov	r2, #5
   191e0:	ldr	r1, [pc, #136]	; 19270 <g_strcmp0@plt+0x33f0>
   191e4:	mov	r0, #0
   191e8:	ldr	r9, [r3, #36]	; 0x24
   191ec:	bl	15880 <dcgettext@plt>
   191f0:	mov	r1, r0
   191f4:	mov	r0, r9
   191f8:	bl	213e8 <g_strcmp0@plt+0xb568>
   191fc:	ldr	r3, [r5, #12]
   19200:	mov	r2, #5
   19204:	ldr	r1, [pc, #104]	; 19274 <g_strcmp0@plt+0x33f4>
   19208:	mov	r0, #0
   1920c:	ldr	r9, [r3, #36]	; 0x24
   19210:	bl	15880 <dcgettext@plt>
   19214:	mov	r1, r0
   19218:	mov	r0, r9
   1921c:	bl	21950 <g_strcmp0@plt+0xbad0>
   19220:	ldr	r3, [r5, #12]
   19224:	ldr	r0, [r3, #36]	; 0x24
   19228:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1922c:	ldr	r3, [r5, #12]
   19230:	ldr	r0, [r3, #36]	; 0x24
   19234:	bl	2232c <g_strcmp0@plt+0xc4ac>
   19238:	cmn	r0, #5
   1923c:	beq	1924c <g_strcmp0@plt+0x33cc>
   19240:	mov	r0, r8
   19244:	bl	15874 <g_free@plt>
   19248:	b	190d4 <g_strcmp0@plt+0x3254>
   1924c:	mov	r0, r8
   19250:	bl	23f3c <g_strcmp0@plt+0xe0bc>
   19254:	b	19240 <g_strcmp0@plt+0x33c0>
   19258:	bl	157f0 <__stack_chk_fail@plt>
   1925c:	andeq	r0, r4, r0, asr lr
   19260:	andeq	r9, r2, ip, lsl #25
   19264:	andeq	r9, r2, r0, lsl lr
   19268:	muleq	r2, r8, sp
   1926c:			; <UNDEFINED> instruction: 0x00029db8
   19270:	ldrdeq	r9, [r2], -r0
   19274:	andeq	r9, r2, ip, lsr r9
   19278:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1927c:	sub	sp, sp, #32
   19280:	ldr	r5, [pc, #708]	; 1954c <g_strcmp0@plt+0x36cc>
   19284:	mov	r4, r2
   19288:	mov	r2, #0
   1928c:	ldr	r3, [r5]
   19290:	str	r2, [sp, #24]
   19294:	add	r2, sp, #24
   19298:	str	r3, [sp, #28]
   1929c:	bl	15454 <pk_client_generic_finish@plt>
   192a0:	subs	r7, r0, #0
   192a4:	beq	19458 <g_strcmp0@plt+0x35d8>
   192a8:	bl	15244 <pk_results_get_error_code@plt>
   192ac:	subs	r6, r0, #0
   192b0:	beq	1932c <g_strcmp0@plt+0x34ac>
   192b4:	bl	16fc0 <g_strcmp0@plt+0x1140>
   192b8:	mov	r8, r0
   192bc:	mov	r0, r6
   192c0:	bl	152ec <pk_error_get_code@plt>
   192c4:	cmp	r0, #17
   192c8:	mov	r0, r6
   192cc:	movne	r9, #0
   192d0:	moveq	r9, #17
   192d4:	bl	152d4 <pk_error_get_details@plt>
   192d8:	ldr	r2, [pc, #624]	; 19550 <g_strcmp0@plt+0x36d0>
   192dc:	mov	r1, r9
   192e0:	mov	r3, r0
   192e4:	mov	r0, r8
   192e8:	bl	15568 <g_error_new@plt>
   192ec:	mov	r1, r0
   192f0:	mov	r8, r0
   192f4:	mov	r0, r4
   192f8:	bl	17748 <g_strcmp0@plt+0x18c8>
   192fc:	mov	r0, r8
   19300:	bl	15064 <g_error_free@plt>
   19304:	mov	r0, r6
   19308:	bl	15b5c <g_object_unref@plt>
   1930c:	mov	r0, r7
   19310:	bl	15b5c <g_object_unref@plt>
   19314:	ldr	r2, [sp, #28]
   19318:	ldr	r3, [r5]
   1931c:	cmp	r2, r3
   19320:	bne	19548 <g_strcmp0@plt+0x36c8>
   19324:	add	sp, sp, #32
   19328:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1932c:	mov	r0, r7
   19330:	bl	14f80 <pk_results_get_package_array@plt>
   19334:	ldr	r9, [r0, #4]
   19338:	mov	r8, r0
   1933c:	cmp	r9, #0
   19340:	bne	19388 <g_strcmp0@plt+0x3508>
   19344:	ldr	r3, [r4, #12]
   19348:	ldr	r2, [r3, #64]	; 0x40
   1934c:	cmp	r2, #0
   19350:	bne	194c0 <g_strcmp0@plt+0x3640>
   19354:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19358:	ldr	r2, [pc, #500]	; 19554 <g_strcmp0@plt+0x36d4>
   1935c:	mov	r1, #8
   19360:	bl	15568 <g_error_new@plt>
   19364:	mov	r6, r0
   19368:	mov	r1, r0
   1936c:	mov	r0, r4
   19370:	bl	17748 <g_strcmp0@plt+0x18c8>
   19374:	mov	r0, r6
   19378:	bl	15064 <g_error_free@plt>
   1937c:	mov	r0, r8
   19380:	bl	15c7c <g_ptr_array_unref@plt>
   19384:	b	1930c <g_strcmp0@plt+0x348c>
   19388:	ldr	sl, [r4, #12]
   1938c:	bl	24068 <g_strcmp0@plt+0xe1e8>
   19390:	ldr	r3, [r4, #12]
   19394:	mvn	r2, #0
   19398:	mov	r1, #6
   1939c:	ldr	r9, [r3, #36]	; 0x24
   193a0:	str	r0, [sl, #104]	; 0x68
   193a4:	mov	r0, #3
   193a8:	bl	15718 <pk_bitfield_from_enums@plt>
   193ac:	mov	r2, r0
   193b0:	mov	r3, r1
   193b4:	mov	r0, r9
   193b8:	mov	r1, #1
   193bc:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   193c0:	ldr	r3, [r4, #12]
   193c4:	mov	r2, #5
   193c8:	mov	r0, r6
   193cc:	ldr	r1, [pc, #388]	; 19558 <g_strcmp0@plt+0x36d8>
   193d0:	ldr	r6, [r3, #36]	; 0x24
   193d4:	bl	15880 <dcgettext@plt>
   193d8:	mov	r1, r0
   193dc:	mov	r0, r6
   193e0:	bl	210e0 <g_strcmp0@plt+0xb260>
   193e4:	ldr	r3, [r4, #12]
   193e8:	ldr	r2, [r3, #56]	; 0x38
   193ec:	cmp	r2, #0
   193f0:	bne	19538 <g_strcmp0@plt+0x36b8>
   193f4:	ldr	r0, [r3, #36]	; 0x24
   193f8:	bl	21f40 <g_strcmp0@plt+0xc0c0>
   193fc:	ldr	r3, [r4, #12]
   19400:	ldr	r9, [r3, #8]
   19404:	mov	r6, r0
   19408:	bl	25594 <g_strcmp0@plt+0xf714>
   1940c:	mov	r1, r0
   19410:	mov	r0, r9
   19414:	bl	15148 <g_type_check_instance_cast@plt>
   19418:	mov	r1, r6
   1941c:	bl	267d4 <g_strcmp0@plt+0x10954>
   19420:	ldr	r3, [r4, #12]
   19424:	ldr	ip, [pc, #304]	; 1955c <g_strcmp0@plt+0x36dc>
   19428:	ldr	lr, [pc, #304]	; 19560 <g_strcmp0@plt+0x36e0>
   1942c:	mov	r2, #0
   19430:	ldr	r1, [r3, #104]	; 0x68
   19434:	ldr	r0, [r3, #8]
   19438:	mov	r3, #1
   1943c:	stm	sp, {r2, ip}
   19440:	str	r4, [sp, #16]
   19444:	str	r4, [sp, #8]
   19448:	str	lr, [sp, #12]
   1944c:	mov	r2, r3
   19450:	bl	15694 <pk_task_remove_packages_async@plt>
   19454:	b	1937c <g_strcmp0@plt+0x34fc>
   19458:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1945c:	mov	r6, r0
   19460:	ldr	r0, [sp, #24]
   19464:	add	r1, r0, #4
   19468:	bl	17900 <g_strcmp0@plt+0x1a80>
   1946c:	ldr	r3, [sp, #24]
   19470:	ldr	r2, [pc, #216]	; 19550 <g_strcmp0@plt+0x36d0>
   19474:	ldr	r3, [r3, #8]
   19478:	mov	r1, r0
   1947c:	mov	r0, r6
   19480:	bl	15568 <g_error_new@plt>
   19484:	mov	r6, r0
   19488:	mov	r1, r0
   1948c:	mov	r0, r4
   19490:	bl	17748 <g_strcmp0@plt+0x18c8>
   19494:	ldr	r3, [sp, #24]
   19498:	ldr	r2, [pc, #196]	; 19564 <g_strcmp0@plt+0x36e4>
   1949c:	mov	r1, #16
   194a0:	ldr	r3, [r3, #8]
   194a4:	ldr	r0, [pc, #188]	; 19568 <g_strcmp0@plt+0x36e8>
   194a8:	bl	151f0 <g_log@plt>
   194ac:	ldr	r0, [sp, #24]
   194b0:	bl	15064 <g_error_free@plt>
   194b4:	mov	r0, r6
   194b8:	bl	15064 <g_error_free@plt>
   194bc:	b	19314 <g_strcmp0@plt+0x3494>
   194c0:	ldr	r0, [r3, #36]	; 0x24
   194c4:	mov	r2, #0
   194c8:	mov	r3, #0
   194cc:	mov	r1, #3
   194d0:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   194d4:	ldr	r3, [r4, #12]
   194d8:	mov	r2, #5
   194dc:	ldr	r1, [pc, #136]	; 1956c <g_strcmp0@plt+0x36ec>
   194e0:	mov	r0, r9
   194e4:	ldr	r6, [r3, #36]	; 0x24
   194e8:	bl	15880 <dcgettext@plt>
   194ec:	mov	r1, r0
   194f0:	mov	r0, r6
   194f4:	bl	210e0 <g_strcmp0@plt+0xb260>
   194f8:	ldr	r3, [r4, #12]
   194fc:	mov	r2, #5
   19500:	mov	r0, r9
   19504:	ldr	r1, [pc, #100]	; 19570 <g_strcmp0@plt+0x36f0>
   19508:	ldr	r6, [r3, #36]	; 0x24
   1950c:	bl	15880 <dcgettext@plt>
   19510:	mov	r1, r0
   19514:	mov	r0, r6
   19518:	bl	213e8 <g_strcmp0@plt+0xb568>
   1951c:	ldr	r3, [r4, #12]
   19520:	ldr	r0, [r3, #36]	; 0x24
   19524:	bl	22324 <g_strcmp0@plt+0xc4a4>
   19528:	ldr	r3, [r4, #12]
   1952c:	ldr	r0, [r3, #36]	; 0x24
   19530:	bl	2232c <g_strcmp0@plt+0xc4ac>
   19534:	b	19354 <g_strcmp0@plt+0x34d4>
   19538:	ldr	r0, [r3, #36]	; 0x24
   1953c:	bl	22324 <g_strcmp0@plt+0xc4a4>
   19540:	ldr	r3, [r4, #12]
   19544:	b	193f4 <g_strcmp0@plt+0x3574>
   19548:	bl	157f0 <__stack_chk_fail@plt>
   1954c:	andeq	r0, r4, r0, asr lr
   19550:	andeq	r9, r2, r8, lsr lr
   19554:	andeq	r9, r2, r0, lsl #29
   19558:	andeq	r9, r2, r0, lsr #29
   1955c:	andeq	sl, r1, r0, ror #5
   19560:	muleq	r1, r4, r7
   19564:	andeq	r9, r2, r8, ror #16
   19568:	andeq	r8, r2, ip, lsl #29
   1956c:	andeq	r9, r2, r8, asr lr
   19570:	andeq	r9, r2, r0, lsl r9
   19574:	ldr	r3, [r0, #12]
   19578:	push	{r4, r5, lr}
   1957c:	mov	r5, r1
   19580:	ldr	r3, [r3, #100]	; 0x64
   19584:	sub	sp, sp, #12
   19588:	cmp	r3, #0
   1958c:	beq	195ec <g_strcmp0@plt+0x376c>
   19590:	mov	r4, r0
   19594:	ldr	r2, [pc, #104]	; 19604 <g_strcmp0@plt+0x3784>
   19598:	str	r1, [sp]
   1959c:	ldr	r0, [pc, #100]	; 19608 <g_strcmp0@plt+0x3788>
   195a0:	mov	r1, #128	; 0x80
   195a4:	bl	151f0 <g_log@plt>
   195a8:	ldr	r3, [r4, #12]
   195ac:	mov	r1, r5
   195b0:	ldr	r0, [r3, #100]	; 0x64
   195b4:	bl	156d0 <dbus_g_method_return@plt>
   195b8:	ldr	r3, [r4, #12]
   195bc:	mov	r1, #0
   195c0:	ldr	r2, [r3, #116]	; 0x74
   195c4:	str	r1, [r3, #100]	; 0x64
   195c8:	cmp	r2, r1
   195cc:	beq	195e4 <g_strcmp0@plt+0x3764>
   195d0:	ldr	r1, [r3, #120]	; 0x78
   195d4:	mov	r0, r4
   195d8:	add	sp, sp, #12
   195dc:	pop	{r4, r5, lr}
   195e0:	bx	r2
   195e4:	add	sp, sp, #12
   195e8:	pop	{r4, r5, pc}
   195ec:	mov	r3, r1
   195f0:	ldr	r2, [pc, #20]	; 1960c <g_strcmp0@plt+0x378c>
   195f4:	mov	r1, #4
   195f8:	ldr	r0, [pc, #8]	; 19608 <g_strcmp0@plt+0x3788>
   195fc:	bl	151f0 <g_log@plt>
   19600:	b	19600 <g_strcmp0@plt+0x3780>
   19604:	andeq	r9, r2, r0, ror #29
   19608:	andeq	r8, r2, ip, lsl #29
   1960c:			; <UNDEFINED> instruction: 0x00029eb4
   19610:	push	{r4, r5, r6, r7, r8, r9, lr}
   19614:	sub	sp, sp, #20
   19618:	ldr	r5, [pc, #352]	; 19780 <g_strcmp0@plt+0x3900>
   1961c:	mov	r6, r2
   19620:	mov	r2, #0
   19624:	ldr	r3, [r5]
   19628:	str	r2, [sp, #8]
   1962c:	add	r2, sp, #8
   19630:	str	r3, [sp, #12]
   19634:	bl	15994 <pk_task_generic_finish@plt>
   19638:	subs	r7, r0, #0
   1963c:	beq	1970c <g_strcmp0@plt+0x388c>
   19640:	bl	15244 <pk_results_get_error_code@plt>
   19644:	subs	r4, r0, #0
   19648:	beq	196fc <g_strcmp0@plt+0x387c>
   1964c:	bl	152ec <pk_error_get_code@plt>
   19650:	bl	154cc <pk_error_enum_to_string@plt>
   19654:	mov	r8, r0
   19658:	mov	r0, r4
   1965c:	bl	152d4 <pk_error_get_details@plt>
   19660:	mov	r3, r8
   19664:	ldr	r2, [pc, #280]	; 19784 <g_strcmp0@plt+0x3904>
   19668:	mov	r1, #16
   1966c:	str	r0, [sp]
   19670:	ldr	r0, [pc, #272]	; 19788 <g_strcmp0@plt+0x3908>
   19674:	bl	151f0 <g_log@plt>
   19678:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1967c:	mov	r8, r0
   19680:	mov	r0, r4
   19684:	bl	152ec <pk_error_get_code@plt>
   19688:	cmp	r0, #17
   1968c:	mov	r0, r4
   19690:	movne	r9, #0
   19694:	moveq	r9, #17
   19698:	bl	152d4 <pk_error_get_details@plt>
   1969c:	ldr	r2, [pc, #232]	; 1978c <g_strcmp0@plt+0x390c>
   196a0:	mov	r1, r9
   196a4:	mov	r3, r0
   196a8:	mov	r0, r8
   196ac:	bl	15568 <g_error_new@plt>
   196b0:	mov	r1, r4
   196b4:	mov	r8, r0
   196b8:	mov	r0, r6
   196bc:	bl	174b0 <g_strcmp0@plt+0x1630>
   196c0:	mov	r1, r8
   196c4:	mov	r0, r6
   196c8:	bl	17748 <g_strcmp0@plt+0x18c8>
   196cc:	mov	r0, r8
   196d0:	bl	15064 <g_error_free@plt>
   196d4:	mov	r0, r4
   196d8:	bl	15b5c <g_object_unref@plt>
   196dc:	mov	r0, r7
   196e0:	bl	15b5c <g_object_unref@plt>
   196e4:	ldr	r2, [sp, #12]
   196e8:	ldr	r3, [r5]
   196ec:	cmp	r2, r3
   196f0:	bne	1977c <g_strcmp0@plt+0x38fc>
   196f4:	add	sp, sp, #20
   196f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   196fc:	mov	r0, r6
   19700:	mov	r1, #1
   19704:	bl	19574 <g_strcmp0@plt+0x36f4>
   19708:	b	196dc <g_strcmp0@plt+0x385c>
   1970c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19710:	mov	r4, r0
   19714:	ldr	r0, [sp, #8]
   19718:	add	r1, r0, #4
   1971c:	bl	17900 <g_strcmp0@plt+0x1a80>
   19720:	ldr	r3, [sp, #8]
   19724:	ldr	r2, [pc, #96]	; 1978c <g_strcmp0@plt+0x390c>
   19728:	ldr	r3, [r3, #8]
   1972c:	mov	r1, r0
   19730:	mov	r0, r4
   19734:	bl	15568 <g_error_new@plt>
   19738:	mov	r2, #5
   1973c:	ldr	r1, [pc, #76]	; 19790 <g_strcmp0@plt+0x3910>
   19740:	mov	r4, r0
   19744:	mov	r0, r7
   19748:	bl	15880 <dcgettext@plt>
   1974c:	mov	r2, r4
   19750:	mov	r1, r0
   19754:	mov	r0, r6
   19758:	bl	173fc <g_strcmp0@plt+0x157c>
   1975c:	mov	r1, r4
   19760:	mov	r0, r6
   19764:	bl	17748 <g_strcmp0@plt+0x18c8>
   19768:	ldr	r0, [sp, #8]
   1976c:	bl	15064 <g_error_free@plt>
   19770:	mov	r0, r4
   19774:	bl	15064 <g_error_free@plt>
   19778:	b	196e4 <g_strcmp0@plt+0x3864>
   1977c:	bl	157f0 <__stack_chk_fail@plt>
   19780:	andeq	r0, r4, r0, asr lr
   19784:	andeq	r9, r2, ip, lsl #30
   19788:	andeq	r8, r2, ip, lsl #29
   1978c:	andeq	sl, r2, r0, asr r5
   19790:	andeq	r9, r2, r4, ror #15
   19794:	push	{r4, r5, r6, r7, r8, r9, lr}
   19798:	sub	sp, sp, #12
   1979c:	ldr	r4, [pc, #308]	; 198d8 <g_strcmp0@plt+0x3a58>
   197a0:	mov	r5, r2
   197a4:	mov	r2, #0
   197a8:	ldr	r3, [r4]
   197ac:	str	r2, [sp]
   197b0:	mov	r2, sp
   197b4:	str	r3, [sp, #4]
   197b8:	bl	15994 <pk_task_generic_finish@plt>
   197bc:	subs	r7, r0, #0
   197c0:	beq	19864 <g_strcmp0@plt+0x39e4>
   197c4:	bl	15244 <pk_results_get_error_code@plt>
   197c8:	subs	r6, r0, #0
   197cc:	beq	19854 <g_strcmp0@plt+0x39d4>
   197d0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   197d4:	mov	r8, r0
   197d8:	mov	r0, r6
   197dc:	bl	152ec <pk_error_get_code@plt>
   197e0:	cmp	r0, #17
   197e4:	mov	r0, r6
   197e8:	movne	r9, #0
   197ec:	moveq	r9, #17
   197f0:	bl	152d4 <pk_error_get_details@plt>
   197f4:	ldr	r2, [pc, #224]	; 198dc <g_strcmp0@plt+0x3a5c>
   197f8:	mov	r1, r9
   197fc:	mov	r3, r0
   19800:	mov	r0, r8
   19804:	bl	15568 <g_error_new@plt>
   19808:	mov	r1, r6
   1980c:	mov	r8, r0
   19810:	mov	r0, r5
   19814:	bl	174b0 <g_strcmp0@plt+0x1630>
   19818:	mov	r1, r8
   1981c:	mov	r0, r5
   19820:	bl	17748 <g_strcmp0@plt+0x18c8>
   19824:	mov	r0, r8
   19828:	bl	15064 <g_error_free@plt>
   1982c:	mov	r0, r6
   19830:	bl	15b5c <g_object_unref@plt>
   19834:	mov	r0, r7
   19838:	bl	15b5c <g_object_unref@plt>
   1983c:	ldr	r2, [sp, #4]
   19840:	ldr	r3, [r4]
   19844:	cmp	r2, r3
   19848:	bne	198d4 <g_strcmp0@plt+0x3a54>
   1984c:	add	sp, sp, #12
   19850:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19854:	mov	r0, r5
   19858:	mov	r1, #1
   1985c:	bl	19574 <g_strcmp0@plt+0x36f4>
   19860:	b	19834 <g_strcmp0@plt+0x39b4>
   19864:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19868:	mov	r6, r0
   1986c:	ldr	r0, [sp]
   19870:	add	r1, r0, #4
   19874:	bl	17900 <g_strcmp0@plt+0x1a80>
   19878:	ldr	r3, [sp]
   1987c:	ldr	r2, [pc, #88]	; 198dc <g_strcmp0@plt+0x3a5c>
   19880:	ldr	r3, [r3, #8]
   19884:	mov	r1, r0
   19888:	mov	r0, r6
   1988c:	bl	15568 <g_error_new@plt>
   19890:	mov	r2, #5
   19894:	ldr	r1, [pc, #68]	; 198e0 <g_strcmp0@plt+0x3a60>
   19898:	mov	r6, r0
   1989c:	mov	r0, r7
   198a0:	bl	15880 <dcgettext@plt>
   198a4:	mov	r2, r6
   198a8:	mov	r1, r0
   198ac:	mov	r0, r5
   198b0:	bl	173fc <g_strcmp0@plt+0x157c>
   198b4:	mov	r1, r6
   198b8:	mov	r0, r5
   198bc:	bl	17748 <g_strcmp0@plt+0x18c8>
   198c0:	ldr	r0, [sp]
   198c4:	bl	15064 <g_error_free@plt>
   198c8:	mov	r0, r6
   198cc:	bl	15064 <g_error_free@plt>
   198d0:	b	1983c <g_strcmp0@plt+0x39bc>
   198d4:	bl	157f0 <__stack_chk_fail@plt>
   198d8:	andeq	r0, r4, r0, asr lr
   198dc:	andeq	r9, r2, r0, lsr pc
   198e0:	andeq	r9, r2, r0, asr pc
   198e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   198e8:	sub	sp, sp, #20
   198ec:	ldr	r4, [pc, #348]	; 19a50 <g_strcmp0@plt+0x3bd0>
   198f0:	mov	r6, r2
   198f4:	mov	r2, #0
   198f8:	ldr	r3, [r4]
   198fc:	str	r2, [sp, #8]
   19900:	add	r2, sp, #8
   19904:	str	r3, [sp, #12]
   19908:	bl	15454 <pk_client_generic_finish@plt>
   1990c:	subs	r7, r0, #0
   19910:	beq	199f0 <g_strcmp0@plt+0x3b70>
   19914:	bl	15244 <pk_results_get_error_code@plt>
   19918:	subs	r5, r0, #0
   1991c:	beq	199a8 <g_strcmp0@plt+0x3b28>
   19920:	bl	152ec <pk_error_get_code@plt>
   19924:	bl	154cc <pk_error_enum_to_string@plt>
   19928:	mov	r8, r0
   1992c:	mov	r0, r5
   19930:	bl	152d4 <pk_error_get_details@plt>
   19934:	mov	r3, r8
   19938:	ldr	r2, [pc, #276]	; 19a54 <g_strcmp0@plt+0x3bd4>
   1993c:	mov	r1, #16
   19940:	str	r0, [sp]
   19944:	ldr	r0, [pc, #268]	; 19a58 <g_strcmp0@plt+0x3bd8>
   19948:	bl	151f0 <g_log@plt>
   1994c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19950:	mov	r8, r0
   19954:	mov	r0, r5
   19958:	bl	152ec <pk_error_get_code@plt>
   1995c:	cmp	r0, #17
   19960:	mov	r0, r5
   19964:	movne	r9, #0
   19968:	moveq	r9, #17
   1996c:	bl	152d4 <pk_error_get_details@plt>
   19970:	ldr	r2, [pc, #228]	; 19a5c <g_strcmp0@plt+0x3bdc>
   19974:	mov	r1, r9
   19978:	mov	r3, r0
   1997c:	mov	r0, r8
   19980:	bl	15568 <g_error_new@plt>
   19984:	mov	r1, r0
   19988:	mov	r8, r0
   1998c:	mov	r0, r6
   19990:	bl	17748 <g_strcmp0@plt+0x18c8>
   19994:	mov	r0, r8
   19998:	bl	15064 <g_error_free@plt>
   1999c:	mov	r0, r5
   199a0:	bl	15b5c <g_object_unref@plt>
   199a4:	b	199d0 <g_strcmp0@plt+0x3b50>
   199a8:	mov	r0, r7
   199ac:	bl	14f80 <pk_results_get_package_array@plt>
   199b0:	mov	r5, r0
   199b4:	mov	r0, r6
   199b8:	ldr	r1, [r5, #4]
   199bc:	adds	r1, r1, #0
   199c0:	movne	r1, #1
   199c4:	bl	19574 <g_strcmp0@plt+0x36f4>
   199c8:	mov	r0, r5
   199cc:	bl	15c7c <g_ptr_array_unref@plt>
   199d0:	mov	r0, r7
   199d4:	bl	15b5c <g_object_unref@plt>
   199d8:	ldr	r2, [sp, #12]
   199dc:	ldr	r3, [r4]
   199e0:	cmp	r2, r3
   199e4:	bne	19a4c <g_strcmp0@plt+0x3bcc>
   199e8:	add	sp, sp, #20
   199ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   199f0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   199f4:	mov	r5, r0
   199f8:	ldr	r0, [sp, #8]
   199fc:	add	r1, r0, #4
   19a00:	bl	17900 <g_strcmp0@plt+0x1a80>
   19a04:	ldr	r3, [sp, #8]
   19a08:	ldr	r2, [pc, #76]	; 19a5c <g_strcmp0@plt+0x3bdc>
   19a0c:	ldr	r3, [r3, #8]
   19a10:	mov	r1, r0
   19a14:	mov	r0, r5
   19a18:	bl	15568 <g_error_new@plt>
   19a1c:	mov	r1, r0
   19a20:	mov	r0, r6
   19a24:	bl	17748 <g_strcmp0@plt+0x18c8>
   19a28:	ldr	r3, [sp, #8]
   19a2c:	ldr	r2, [pc, #40]	; 19a5c <g_strcmp0@plt+0x3bdc>
   19a30:	mov	r1, #16
   19a34:	ldr	r3, [r3, #8]
   19a38:	ldr	r0, [pc, #24]	; 19a58 <g_strcmp0@plt+0x3bd8>
   19a3c:	bl	151f0 <g_log@plt>
   19a40:	ldr	r0, [sp, #8]
   19a44:	bl	15064 <g_error_free@plt>
   19a48:	b	199d8 <g_strcmp0@plt+0x3b58>
   19a4c:	bl	157f0 <__stack_chk_fail@plt>
   19a50:	andeq	r0, r4, r0, asr lr
   19a54:	andeq	r9, r2, r0, lsl #17
   19a58:	andeq	r8, r2, ip, lsl #29
   19a5c:	andeq	r9, r2, r8, ror #16
   19a60:	push	{r4, r5, r6, r7, r8, r9, lr}
   19a64:	sub	sp, sp, #20
   19a68:	ldr	r5, [pc, #380]	; 19bec <g_strcmp0@plt+0x3d6c>
   19a6c:	mov	r6, r2
   19a70:	mov	r2, #0
   19a74:	ldr	r3, [r5]
   19a78:	str	r2, [sp, #8]
   19a7c:	add	r2, sp, #8
   19a80:	str	r3, [sp, #12]
   19a84:	bl	15994 <pk_task_generic_finish@plt>
   19a88:	subs	r7, r0, #0
   19a8c:	beq	19b5c <g_strcmp0@plt+0x3cdc>
   19a90:	bl	15244 <pk_results_get_error_code@plt>
   19a94:	subs	r4, r0, #0
   19a98:	beq	19b4c <g_strcmp0@plt+0x3ccc>
   19a9c:	bl	152ec <pk_error_get_code@plt>
   19aa0:	bl	154cc <pk_error_enum_to_string@plt>
   19aa4:	mov	r8, r0
   19aa8:	mov	r0, r4
   19aac:	bl	152d4 <pk_error_get_details@plt>
   19ab0:	mov	r3, r8
   19ab4:	ldr	r2, [pc, #308]	; 19bf0 <g_strcmp0@plt+0x3d70>
   19ab8:	mov	r1, #16
   19abc:	str	r0, [sp]
   19ac0:	ldr	r0, [pc, #300]	; 19bf4 <g_strcmp0@plt+0x3d74>
   19ac4:	bl	151f0 <g_log@plt>
   19ac8:	mov	r1, r4
   19acc:	mov	r0, r6
   19ad0:	bl	174b0 <g_strcmp0@plt+0x1630>
   19ad4:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19ad8:	mov	r8, r0
   19adc:	mov	r0, r4
   19ae0:	bl	152ec <pk_error_get_code@plt>
   19ae4:	cmp	r0, #17
   19ae8:	mov	r0, r4
   19aec:	movne	r9, #0
   19af0:	moveq	r9, #17
   19af4:	bl	152d4 <pk_error_get_details@plt>
   19af8:	ldr	r2, [pc, #248]	; 19bf8 <g_strcmp0@plt+0x3d78>
   19afc:	mov	r1, r9
   19b00:	mov	r3, r0
   19b04:	mov	r0, r8
   19b08:	bl	15568 <g_error_new@plt>
   19b0c:	mov	r1, r0
   19b10:	mov	r8, r0
   19b14:	mov	r0, r6
   19b18:	bl	17748 <g_strcmp0@plt+0x18c8>
   19b1c:	mov	r0, r8
   19b20:	bl	15064 <g_error_free@plt>
   19b24:	mov	r0, r4
   19b28:	bl	15b5c <g_object_unref@plt>
   19b2c:	mov	r0, r7
   19b30:	bl	15b5c <g_object_unref@plt>
   19b34:	ldr	r2, [sp, #12]
   19b38:	ldr	r3, [r5]
   19b3c:	cmp	r2, r3
   19b40:	bne	19be8 <g_strcmp0@plt+0x3d68>
   19b44:	add	sp, sp, #20
   19b48:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19b4c:	mov	r0, r6
   19b50:	mov	r1, #1
   19b54:	bl	19574 <g_strcmp0@plt+0x36f4>
   19b58:	b	19b2c <g_strcmp0@plt+0x3cac>
   19b5c:	ldr	r3, [r6, #12]
   19b60:	ldr	r0, [r3, #108]	; 0x6c
   19b64:	bl	157a8 <g_strv_length@plt>
   19b68:	mov	r3, #5
   19b6c:	ldr	r2, [pc, #136]	; 19bfc <g_strcmp0@plt+0x3d7c>
   19b70:	str	r3, [sp]
   19b74:	ldr	r1, [pc, #132]	; 19c00 <g_strcmp0@plt+0x3d80>
   19b78:	mov	r3, r0
   19b7c:	mov	r0, r7
   19b80:	bl	154a8 <dcngettext@plt>
   19b84:	mov	r7, r0
   19b88:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19b8c:	mov	r4, r0
   19b90:	ldr	r0, [sp, #8]
   19b94:	add	r1, r0, #4
   19b98:	bl	17900 <g_strcmp0@plt+0x1a80>
   19b9c:	ldr	r3, [sp, #8]
   19ba0:	ldr	r2, [pc, #92]	; 19c04 <g_strcmp0@plt+0x3d84>
   19ba4:	ldr	r3, [r3, #8]
   19ba8:	mov	r1, r0
   19bac:	mov	r0, r4
   19bb0:	bl	15568 <g_error_new@plt>
   19bb4:	mov	r1, r7
   19bb8:	mov	r2, r0
   19bbc:	mov	r4, r0
   19bc0:	mov	r0, r6
   19bc4:	bl	173fc <g_strcmp0@plt+0x157c>
   19bc8:	mov	r1, r4
   19bcc:	mov	r0, r6
   19bd0:	bl	17748 <g_strcmp0@plt+0x18c8>
   19bd4:	ldr	r0, [sp, #8]
   19bd8:	bl	15064 <g_error_free@plt>
   19bdc:	mov	r0, r4
   19be0:	bl	15064 <g_error_free@plt>
   19be4:	b	19b34 <g_strcmp0@plt+0x3cb4>
   19be8:	bl	157f0 <__stack_chk_fail@plt>
   19bec:	andeq	r0, r4, r0, asr lr
   19bf0:	andeq	r9, r2, r4, lsl #31
   19bf4:	andeq	r8, r2, ip, lsl #29
   19bf8:	andeq	r9, r2, r4, lsr #31
   19bfc:	andeq	r9, r2, ip, ror #30
   19c00:	andeq	r9, r2, r8, lsr #19
   19c04:	andeq	sl, r2, r0, asr r5
   19c08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c0c:	sub	sp, sp, #20
   19c10:	ldr	r5, [pc, #644]	; 19e9c <g_strcmp0@plt+0x401c>
   19c14:	mov	r4, r2
   19c18:	mov	r2, #0
   19c1c:	ldr	r3, [r5]
   19c20:	str	r2, [sp, #8]
   19c24:	add	r2, sp, #8
   19c28:	str	r3, [sp, #12]
   19c2c:	bl	15454 <pk_client_generic_finish@plt>
   19c30:	subs	r7, r0, #0
   19c34:	beq	19df8 <g_strcmp0@plt+0x3f78>
   19c38:	bl	15244 <pk_results_get_error_code@plt>
   19c3c:	subs	r6, r0, #0
   19c40:	beq	19cbc <g_strcmp0@plt+0x3e3c>
   19c44:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19c48:	mov	r8, r0
   19c4c:	mov	r0, r6
   19c50:	bl	152ec <pk_error_get_code@plt>
   19c54:	cmp	r0, #17
   19c58:	mov	r0, r6
   19c5c:	movne	r9, #0
   19c60:	moveq	r9, #17
   19c64:	bl	152d4 <pk_error_get_details@plt>
   19c68:	ldr	r2, [pc, #560]	; 19ea0 <g_strcmp0@plt+0x4020>
   19c6c:	mov	r1, r9
   19c70:	mov	r3, r0
   19c74:	mov	r0, r8
   19c78:	bl	15568 <g_error_new@plt>
   19c7c:	mov	r1, r0
   19c80:	mov	r8, r0
   19c84:	mov	r0, r4
   19c88:	bl	17748 <g_strcmp0@plt+0x18c8>
   19c8c:	mov	r0, r8
   19c90:	bl	15064 <g_error_free@plt>
   19c94:	mov	r0, r6
   19c98:	bl	15b5c <g_object_unref@plt>
   19c9c:	mov	r0, r7
   19ca0:	bl	15b5c <g_object_unref@plt>
   19ca4:	ldr	r2, [sp, #12]
   19ca8:	ldr	r3, [r5]
   19cac:	cmp	r2, r3
   19cb0:	bne	19e98 <g_strcmp0@plt+0x4018>
   19cb4:	add	sp, sp, #20
   19cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cbc:	mov	r0, r7
   19cc0:	bl	14f80 <pk_results_get_package_array@plt>
   19cc4:	ldr	r3, [r4, #12]
   19cc8:	ldr	r9, [r0, #4]
   19ccc:	mov	r8, r0
   19cd0:	cmp	r9, #0
   19cd4:	beq	19e48 <g_strcmp0@plt+0x3fc8>
   19cd8:	ldr	r3, [r3, #52]	; 0x34
   19cdc:	cmp	r3, #0
   19ce0:	beq	19de4 <g_strcmp0@plt+0x3f64>
   19ce4:	mov	sl, #5
   19ce8:	mov	r3, r9
   19cec:	ldr	r2, [pc, #432]	; 19ea4 <g_strcmp0@plt+0x4024>
   19cf0:	ldr	r1, [pc, #432]	; 19ea8 <g_strcmp0@plt+0x4028>
   19cf4:	mov	r0, r6
   19cf8:	str	sl, [sp]
   19cfc:	bl	154a8 <dcngettext@plt>
   19d00:	ldr	r3, [r8, #4]
   19d04:	ldr	r2, [pc, #416]	; 19eac <g_strcmp0@plt+0x402c>
   19d08:	ldr	r1, [pc, #416]	; 19eb0 <g_strcmp0@plt+0x4030>
   19d0c:	str	sl, [sp]
   19d10:	mov	fp, r0
   19d14:	mov	r0, r6
   19d18:	bl	154a8 <dcngettext@plt>
   19d1c:	mov	r2, #16
   19d20:	mov	r1, r6
   19d24:	mov	r3, #0
   19d28:	mov	r9, r0
   19d2c:	ldr	r0, [r4, #12]
   19d30:	ldr	r0, [r0, #36]	; 0x24
   19d34:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   19d38:	ldr	r3, [r4, #12]
   19d3c:	mov	r1, r8
   19d40:	ldr	r0, [r3, #36]	; 0x24
   19d44:	bl	22638 <g_strcmp0@plt+0xc7b8>
   19d48:	ldr	r3, [r4, #12]
   19d4c:	mov	r1, fp
   19d50:	ldr	r0, [r3, #36]	; 0x24
   19d54:	bl	210e0 <g_strcmp0@plt+0xb260>
   19d58:	ldr	r3, [r4, #12]
   19d5c:	mov	r1, r9
   19d60:	ldr	r0, [r3, #36]	; 0x24
   19d64:	bl	213e8 <g_strcmp0@plt+0xb568>
   19d68:	ldr	r3, [r4, #12]
   19d6c:	ldr	r1, [pc, #320]	; 19eb4 <g_strcmp0@plt+0x4034>
   19d70:	ldr	r0, [r3, #36]	; 0x24
   19d74:	bl	21dac <g_strcmp0@plt+0xbf2c>
   19d78:	ldr	r3, [r4, #12]
   19d7c:	mov	r2, sl
   19d80:	mov	r0, r6
   19d84:	ldr	r1, [pc, #300]	; 19eb8 <g_strcmp0@plt+0x4038>
   19d88:	ldr	r6, [r3, #36]	; 0x24
   19d8c:	bl	15880 <dcgettext@plt>
   19d90:	mov	r1, r0
   19d94:	mov	r0, r6
   19d98:	bl	21950 <g_strcmp0@plt+0xbad0>
   19d9c:	ldr	r3, [r4, #12]
   19da0:	ldr	r1, [r3, #68]	; 0x44
   19da4:	ldr	r0, [r3, #36]	; 0x24
   19da8:	bl	22070 <g_strcmp0@plt+0xc1f0>
   19dac:	ldr	r3, [r4, #12]
   19db0:	ldr	r0, [r3, #36]	; 0x24
   19db4:	bl	2232c <g_strcmp0@plt+0xc4ac>
   19db8:	cmn	r0, #5
   19dbc:	bne	19e60 <g_strcmp0@plt+0x3fe0>
   19dc0:	mov	r0, r8
   19dc4:	ldr	r6, [r4, #12]
   19dc8:	bl	24068 <g_strcmp0@plt+0xe1e8>
   19dcc:	str	r0, [r6, #104]	; 0x68
   19dd0:	mov	r0, r4
   19dd4:	bl	1731c <g_strcmp0@plt+0x149c>
   19dd8:	mov	r0, r8
   19ddc:	bl	15c7c <g_ptr_array_unref@plt>
   19de0:	b	19c9c <g_strcmp0@plt+0x3e1c>
   19de4:	ldr	r2, [pc, #208]	; 19ebc <g_strcmp0@plt+0x403c>
   19de8:	mov	r1, #128	; 0x80
   19dec:	ldr	r0, [pc, #204]	; 19ec0 <g_strcmp0@plt+0x4040>
   19df0:	bl	151f0 <g_log@plt>
   19df4:	b	19dc0 <g_strcmp0@plt+0x3f40>
   19df8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19dfc:	mov	r6, r0
   19e00:	ldr	r0, [sp, #8]
   19e04:	add	r1, r0, #4
   19e08:	bl	17900 <g_strcmp0@plt+0x1a80>
   19e0c:	ldr	r3, [sp, #8]
   19e10:	ldr	r2, [pc, #136]	; 19ea0 <g_strcmp0@plt+0x4020>
   19e14:	ldr	r3, [r3, #8]
   19e18:	mov	r1, r0
   19e1c:	mov	r0, r6
   19e20:	bl	15568 <g_error_new@plt>
   19e24:	mov	r1, r0
   19e28:	mov	r6, r0
   19e2c:	mov	r0, r4
   19e30:	bl	17748 <g_strcmp0@plt+0x18c8>
   19e34:	ldr	r0, [sp, #8]
   19e38:	bl	15064 <g_error_free@plt>
   19e3c:	mov	r0, r6
   19e40:	bl	15064 <g_error_free@plt>
   19e44:	b	19ca4 <g_strcmp0@plt+0x3e24>
   19e48:	ldr	r0, [r3, #36]	; 0x24
   19e4c:	bl	223d4 <g_strcmp0@plt+0xc554>
   19e50:	mov	r1, r9
   19e54:	mov	r0, r4
   19e58:	bl	19574 <g_strcmp0@plt+0x36f4>
   19e5c:	b	19dd8 <g_strcmp0@plt+0x3f58>
   19e60:	ldr	r3, [r4, #12]
   19e64:	ldr	r0, [r3, #36]	; 0x24
   19e68:	bl	223d4 <g_strcmp0@plt+0xc554>
   19e6c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   19e70:	ldr	r2, [pc, #76]	; 19ec4 <g_strcmp0@plt+0x4044>
   19e74:	mov	r1, #17
   19e78:	bl	15568 <g_error_new@plt>
   19e7c:	mov	r6, r0
   19e80:	mov	r1, r0
   19e84:	mov	r0, r4
   19e88:	bl	17748 <g_strcmp0@plt+0x18c8>
   19e8c:	mov	r0, r6
   19e90:	bl	15064 <g_error_free@plt>
   19e94:	b	19dd8 <g_strcmp0@plt+0x3f58>
   19e98:	bl	157f0 <__stack_chk_fail@plt>
   19e9c:	andeq	r0, r4, r0, asr lr
   19ea0:	andeq	r9, r2, r8, ror #16
   19ea4:	andeq	r9, r2, r0, asr #31
   19ea8:	andeq	r9, r2, r0, ror #31
   19eac:	strdeq	r9, [r2], -ip
   19eb0:	andeq	r9, r2, r8, lsr #24
   19eb4:	andeq	r9, r2, r4, asr ip
   19eb8:	andeq	r9, r2, r8, ror #24
   19ebc:	andeq	r9, r2, r8, lsl #23
   19ec0:	andeq	r8, r2, ip, lsl #29
   19ec4:	andeq	r9, r2, r0, ror ip
   19ec8:	ldr	ip, [r0, #12]
   19ecc:	push	{r4, r5, r6, r7, r8, lr}
   19ed0:	ldr	lr, [ip, #44]	; 0x2c
   19ed4:	cmp	lr, #0
   19ed8:	bne	19ee4 <g_strcmp0@plt+0x4064>
   19edc:	mov	r0, #1
   19ee0:	pop	{r4, r5, r6, r7, r8, pc}
   19ee4:	mov	r4, r0
   19ee8:	mov	r7, r3
   19eec:	ldr	r0, [ip, #36]	; 0x24
   19ef0:	mov	r6, r2
   19ef4:	mov	r5, r1
   19ef8:	mov	r2, #0
   19efc:	mov	r3, #0
   19f00:	mov	r1, #0
   19f04:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   19f08:	ldr	r3, [r4, #12]
   19f0c:	mov	r1, r7
   19f10:	ldr	r0, [r3, #36]	; 0x24
   19f14:	bl	21950 <g_strcmp0@plt+0xbad0>
   19f18:	ldr	r3, [r4, #12]
   19f1c:	ldr	r1, [r3, #76]	; 0x4c
   19f20:	ldr	r0, [r3, #36]	; 0x24
   19f24:	cmp	r1, #0
   19f28:	ldreq	r1, [pc, #88]	; 19f88 <g_strcmp0@plt+0x4108>
   19f2c:	bl	21dac <g_strcmp0@plt+0xbf2c>
   19f30:	ldr	r3, [r4, #12]
   19f34:	mov	r1, r5
   19f38:	ldr	r0, [r3, #36]	; 0x24
   19f3c:	bl	210e0 <g_strcmp0@plt+0xb260>
   19f40:	ldr	r3, [r4, #12]
   19f44:	mov	r1, r6
   19f48:	ldr	r0, [r3, #36]	; 0x24
   19f4c:	bl	213e8 <g_strcmp0@plt+0xb568>
   19f50:	ldr	r3, [r4, #12]
   19f54:	ldr	r1, [r3, #68]	; 0x44
   19f58:	ldr	r0, [r3, #36]	; 0x24
   19f5c:	bl	22070 <g_strcmp0@plt+0xc1f0>
   19f60:	ldr	r3, [r4, #12]
   19f64:	ldr	r0, [r3, #36]	; 0x24
   19f68:	bl	2232c <g_strcmp0@plt+0xc4ac>
   19f6c:	cmn	r0, #5
   19f70:	beq	19edc <g_strcmp0@plt+0x405c>
   19f74:	ldr	r3, [r4, #12]
   19f78:	ldr	r0, [r3, #36]	; 0x24
   19f7c:	bl	223d4 <g_strcmp0@plt+0xc554>
   19f80:	mov	r0, #0
   19f84:	pop	{r4, r5, r6, r7, r8, pc}
   19f88:	andeq	sl, r2, r0
   19f8c:	push	{r4, lr}
   19f90:	mcr	15, 0, r0, cr7, cr10, {5}
   19f94:	ldr	r4, [pc, #60]	; 19fd8 <g_strcmp0@plt+0x4158>
   19f98:	ldr	r3, [r4, #8]
   19f9c:	mcr	15, 0, r0, cr7, cr10, {5}
   19fa0:	cmp	r3, #0
   19fa4:	beq	19fb0 <g_strcmp0@plt+0x4130>
   19fa8:	ldr	r0, [r4, #8]
   19fac:	pop	{r4, pc}
   19fb0:	add	r0, r4, #8
   19fb4:	bl	1567c <g_once_init_enter@plt>
   19fb8:	cmp	r0, #0
   19fbc:	beq	19fa8 <g_strcmp0@plt+0x4128>
   19fc0:	bl	172d0 <g_strcmp0@plt+0x1450>
   19fc4:	mov	r1, r0
   19fc8:	add	r0, r4, #8
   19fcc:	bl	15b98 <g_once_init_leave@plt>
   19fd0:	ldr	r0, [r4, #8]
   19fd4:	pop	{r4, pc}
   19fd8:			; <UNDEFINED> instruction: 0x000418b0
   19fdc:	push	{r4, r5, r6, r7, lr}
   19fe0:	sub	sp, sp, #12
   19fe4:	mov	r4, r0
   19fe8:	bl	19f8c <g_strcmp0@plt+0x410c>
   19fec:	mov	r6, #0
   19ff0:	mov	r1, r0
   19ff4:	mov	r0, r4
   19ff8:	bl	155f8 <g_type_instance_get_private@plt>
   19ffc:	str	r0, [r4, #12]
   1a000:	str	r6, [r0, #104]	; 0x68
   1a004:	str	r6, [r0, #108]	; 0x6c
   1a008:	str	r6, [r0]
   1a00c:	str	r6, [r0, #72]	; 0x48
   1a010:	str	r6, [r0, #80]	; 0x50
   1a014:	str	r6, [r0, #76]	; 0x4c
   1a018:	str	r6, [r0, #84]	; 0x54
   1a01c:	str	r6, [r0, #100]	; 0x64
   1a020:	mov	r5, r0
   1a024:	bl	15658 <g_cancellable_new@plt>
   1a028:	ldr	r3, [r4, #12]
   1a02c:	mov	r2, #1
   1a030:	mov	r1, #2
   1a034:	str	r0, [r5, #112]	; 0x70
   1a038:	str	r1, [r3, #16]
   1a03c:	str	r6, [r3, #68]	; 0x44
   1a040:	str	r2, [r3, #44]	; 0x2c
   1a044:	str	r2, [r3, #48]	; 0x30
   1a048:	str	r2, [r3, #52]	; 0x34
   1a04c:	str	r2, [r3, #56]	; 0x38
   1a050:	str	r2, [r3, #60]	; 0x3c
   1a054:	str	r2, [r3, #64]	; 0x40
   1a058:	bl	15d30 <gtk_icon_theme_get_default@plt>
   1a05c:	ldr	r1, [pc, #372]	; 1a1d8 <g_strcmp0@plt+0x4358>
   1a060:	bl	154b4 <gtk_icon_theme_append_search_path@plt>
   1a064:	bl	15304 <notify_is_initted@plt>
   1a068:	cmp	r0, r6
   1a06c:	beq	1a1c4 <g_strcmp0@plt+0x4344>
   1a070:	ldr	r7, [r4, #12]
   1a074:	bl	206cc <g_strcmp0@plt+0xa84c>
   1a078:	ldr	r6, [r4, #12]
   1a07c:	mov	r5, #0
   1a080:	str	r0, [r7, #40]	; 0x28
   1a084:	bl	22810 <g_strcmp0@plt+0xc990>
   1a088:	ldr	r3, [r4, #12]
   1a08c:	str	r0, [r6, #36]	; 0x24
   1a090:	ldr	r0, [r3, #36]	; 0x24
   1a094:	bl	21f40 <g_strcmp0@plt+0xc0c0>
   1a098:	ldr	r3, [r4, #12]
   1a09c:	ldr	r1, [pc, #312]	; 1a1dc <g_strcmp0@plt+0x435c>
   1a0a0:	mov	r6, r0
   1a0a4:	ldr	r0, [r3, #36]	; 0x24
   1a0a8:	bl	21004 <g_strcmp0@plt+0xb184>
   1a0ac:	ldr	r1, [r4, #12]
   1a0b0:	mov	r3, r4
   1a0b4:	ldr	r2, [pc, #292]	; 1a1e0 <g_strcmp0@plt+0x4360>
   1a0b8:	ldr	r0, [r1, #36]	; 0x24
   1a0bc:	ldr	r1, [pc, #288]	; 1a1e4 <g_strcmp0@plt+0x4364>
   1a0c0:	str	r5, [sp, #4]
   1a0c4:	str	r5, [sp]
   1a0c8:	bl	15670 <g_signal_connect_data@plt>
   1a0cc:	ldr	r1, [r4, #12]
   1a0d0:	ldr	r2, [pc, #272]	; 1a1e8 <g_strcmp0@plt+0x4368>
   1a0d4:	mov	r3, r4
   1a0d8:	ldr	r0, [r1, #36]	; 0x24
   1a0dc:	ldr	r1, [pc, #264]	; 1a1ec <g_strcmp0@plt+0x436c>
   1a0e0:	str	r5, [sp, #4]
   1a0e4:	str	r5, [sp]
   1a0e8:	bl	15670 <g_signal_connect_data@plt>
   1a0ec:	ldr	r7, [r4, #12]
   1a0f0:	bl	23368 <g_strcmp0@plt+0xd4e8>
   1a0f4:	ldr	r3, [r4, #12]
   1a0f8:	mov	r1, r6
   1a0fc:	str	r0, [r7, #92]	; 0x5c
   1a100:	ldr	r0, [r3, #92]	; 0x5c
   1a104:	bl	23288 <g_strcmp0@plt+0xd408>
   1a108:	ldr	r7, [r4, #12]
   1a10c:	bl	23f14 <g_strcmp0@plt+0xe094>
   1a110:	ldr	ip, [r4, #12]
   1a114:	ldr	r2, [pc, #212]	; 1a1f0 <g_strcmp0@plt+0x4370>
   1a118:	mov	r3, r4
   1a11c:	ldr	r1, [pc, #208]	; 1a1f4 <g_strcmp0@plt+0x4374>
   1a120:	str	r0, [r7, #96]	; 0x60
   1a124:	ldr	r0, [ip, #96]	; 0x60
   1a128:	str	r5, [sp, #4]
   1a12c:	str	r5, [sp]
   1a130:	bl	15670 <g_signal_connect_data@plt>
   1a134:	ldr	r3, [r4, #12]
   1a138:	mov	r1, r6
   1a13c:	ldr	r0, [r3, #96]	; 0x60
   1a140:	bl	23e30 <g_strcmp0@plt+0xdfb0>
   1a144:	ldr	r6, [r4, #12]
   1a148:	bl	20bac <g_strcmp0@plt+0xad2c>
   1a14c:	ldr	r3, [r4, #12]
   1a150:	mov	r1, r5
   1a154:	str	r0, [r6, #32]
   1a158:	ldr	r0, [r3, #32]
   1a15c:	bl	20a38 <g_strcmp0@plt+0xabb8>
   1a160:	ldr	r0, [pc, #144]	; 1a1f8 <g_strcmp0@plt+0x4378>
   1a164:	ldr	r7, [r4, #12]
   1a168:	bl	14f8c <g_settings_new@plt>
   1a16c:	ldr	r6, [r4, #12]
   1a170:	str	r0, [r7, #4]
   1a174:	bl	153ac <pk_control_new@plt>
   1a178:	str	r0, [r6, #12]
   1a17c:	bl	26870 <g_strcmp0@plt+0x109f0>
   1a180:	mov	r7, r0
   1a184:	bl	15580 <pk_task_get_type@plt>
   1a188:	ldr	r6, [r4, #12]
   1a18c:	mov	r1, r0
   1a190:	mov	r0, r7
   1a194:	bl	15148 <g_type_check_instance_cast@plt>
   1a198:	ldr	r3, [r4, #12]
   1a19c:	mov	r1, r5
   1a1a0:	mov	r2, r5
   1a1a4:	str	r0, [r6, #8]
   1a1a8:	ldr	r0, [r3, #12]
   1a1ac:	bl	151c0 <pk_control_get_properties@plt>
   1a1b0:	ldr	r3, [r4, #12]
   1a1b4:	asr	r1, r0, #31
   1a1b8:	strd	r0, [r3, #24]
   1a1bc:	add	sp, sp, #12
   1a1c0:	pop	{r4, r5, r6, r7, pc}
   1a1c4:	mov	r2, #5
   1a1c8:	ldr	r1, [pc, #44]	; 1a1fc <g_strcmp0@plt+0x437c>
   1a1cc:	bl	15880 <dcgettext@plt>
   1a1d0:	bl	15a0c <notify_init@plt>
   1a1d4:	b	1a070 <g_strcmp0@plt+0x41f0>
   1a1d8:	andeq	sl, r2, r0, lsl r0
   1a1dc:	andeq	sl, r2, ip, lsr #32
   1a1e0:	andeq	r7, r1, r0, ror #13
   1a1e4:	andeq	sl, r2, r4, asr #32
   1a1e8:	ldrdeq	r7, [r1], -r4
   1a1ec:	andeq	sl, r2, ip, asr #32
   1a1f0:	andeq	r7, r1, r8, lsl #16
   1a1f4:	andeq	sl, r2, r4, asr r0
   1a1f8:	andeq	r9, r2, r0, lsr #3
   1a1fc:	andeq	r8, r2, r8, asr #30
   1a200:	push	{r4, r5, r6, lr}
   1a204:	mov	r4, r2
   1a208:	mov	r5, r1
   1a20c:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a210:	mov	r1, r0
   1a214:	mov	r0, r4
   1a218:	bl	15148 <g_type_check_instance_cast@plt>
   1a21c:	ldr	r3, [r0, #12]
   1a220:	ldr	r3, [r3, #84]	; 0x54
   1a224:	cmp	r3, #0
   1a228:	beq	1a2b4 <g_strcmp0@plt+0x4434>
   1a22c:	mov	r4, r0
   1a230:	ldr	r1, [pc, #144]	; 1a2c8 <g_strcmp0@plt+0x4448>
   1a234:	mov	r0, r5
   1a238:	bl	15e80 <g_strcmp0@plt>
   1a23c:	subs	r6, r0, #0
   1a240:	bne	1a29c <g_strcmp0@plt+0x441c>
   1a244:	ldr	r3, [r4, #12]
   1a248:	ldr	r0, [r3, #84]	; 0x54
   1a24c:	bl	152d4 <pk_error_get_details@plt>
   1a250:	mvn	r1, #0
   1a254:	bl	15cd0 <g_markup_escape_text@plt>
   1a258:	mov	r2, #5
   1a25c:	ldr	r1, [pc, #104]	; 1a2cc <g_strcmp0@plt+0x444c>
   1a260:	mov	r4, r0
   1a264:	mov	r0, r6
   1a268:	bl	15880 <dcgettext@plt>
   1a26c:	mov	r2, #5
   1a270:	ldr	r1, [pc, #88]	; 1a2d0 <g_strcmp0@plt+0x4450>
   1a274:	mov	r5, r0
   1a278:	mov	r0, r6
   1a27c:	bl	15880 <dcgettext@plt>
   1a280:	mov	r2, r4
   1a284:	mov	r1, r0
   1a288:	mov	r0, r5
   1a28c:	bl	26cf4 <g_strcmp0@plt+0x10e74>
   1a290:	mov	r0, r4
   1a294:	pop	{r4, r5, r6, lr}
   1a298:	b	15874 <g_free@plt>
   1a29c:	mov	r3, r5
   1a2a0:	ldr	r2, [pc, #44]	; 1a2d4 <g_strcmp0@plt+0x4454>
   1a2a4:	mov	r1, #16
   1a2a8:	ldr	r0, [pc, #40]	; 1a2d8 <g_strcmp0@plt+0x4458>
   1a2ac:	pop	{r4, r5, r6, lr}
   1a2b0:	b	151f0 <g_log@plt>
   1a2b4:	ldr	r2, [pc, #32]	; 1a2dc <g_strcmp0@plt+0x445c>
   1a2b8:	mov	r1, #16
   1a2bc:	ldr	r0, [pc, #20]	; 1a2d8 <g_strcmp0@plt+0x4458>
   1a2c0:	pop	{r4, r5, r6, lr}
   1a2c4:	b	151f0 <g_log@plt>
   1a2c8:	andeq	r9, r2, r0, lsr r7
   1a2cc:	andeq	sl, r2, r0, lsl #1
   1a2d0:	muleq	r2, r0, r0
   1a2d4:	strheq	sl, [r2], -r0
   1a2d8:	andeq	r8, r2, ip, lsl #29
   1a2dc:	andeq	sl, r2, ip, asr r0
   1a2e0:	ldr	r3, [r2, #12]
   1a2e4:	push	{r4, r5, r6, r7, lr}
   1a2e8:	mov	r6, r2
   1a2ec:	ldr	r4, [pc, #596]	; 1a548 <g_strcmp0@plt+0x46c8>
   1a2f0:	ldr	r3, [r3, #56]	; 0x38
   1a2f4:	sub	sp, sp, #60	; 0x3c
   1a2f8:	mov	r2, #0
   1a2fc:	mov	r5, r1
   1a300:	ldr	r1, [r4]
   1a304:	cmp	r3, r2
   1a308:	str	r1, [sp, #52]	; 0x34
   1a30c:	str	r2, [sp, #48]	; 0x30
   1a310:	moveq	r0, r3
   1a314:	bne	1a334 <g_strcmp0@plt+0x44b4>
   1a318:	bl	15874 <g_free@plt>
   1a31c:	ldr	r2, [sp, #52]	; 0x34
   1a320:	ldr	r3, [r4]
   1a324:	cmp	r2, r3
   1a328:	bne	1a544 <g_strcmp0@plt+0x46c4>
   1a32c:	add	sp, sp, #60	; 0x3c
   1a330:	pop	{r4, r5, r6, r7, pc}
   1a334:	ldr	r1, [pc, #528]	; 1a54c <g_strcmp0@plt+0x46cc>
   1a338:	ldr	r3, [pc, #528]	; 1a550 <g_strcmp0@plt+0x46d0>
   1a33c:	ldr	lr, [pc, #528]	; 1a554 <g_strcmp0@plt+0x46d4>
   1a340:	str	r2, [sp, #28]
   1a344:	add	ip, sp, #48	; 0x30
   1a348:	str	r1, [sp, #20]
   1a34c:	add	r2, sp, #40	; 0x28
   1a350:	add	r1, sp, #44	; 0x2c
   1a354:	str	r3, [sp, #4]
   1a358:	add	r3, sp, #36	; 0x24
   1a35c:	str	r1, [sp, #16]
   1a360:	str	r2, [sp, #8]
   1a364:	str	r3, [sp]
   1a368:	str	lr, [sp, #12]
   1a36c:	str	ip, [sp, #24]
   1a370:	ldr	r3, [pc, #480]	; 1a558 <g_strcmp0@plt+0x46d8>
   1a374:	add	r2, sp, #32
   1a378:	ldr	r1, [pc, #476]	; 1a55c <g_strcmp0@plt+0x46dc>
   1a37c:	bl	15910 <g_object_get@plt>
   1a380:	cmp	r5, #0
   1a384:	beq	1a3b0 <g_strcmp0@plt+0x4530>
   1a388:	cmp	r5, #2
   1a38c:	beq	1a3c8 <g_strcmp0@plt+0x4548>
   1a390:	cmp	r5, #3
   1a394:	beq	1a3e0 <g_strcmp0@plt+0x4560>
   1a398:	cmp	r5, #4
   1a39c:	beq	1a3f8 <g_strcmp0@plt+0x4578>
   1a3a0:	cmp	r5, #8
   1a3a4:	beq	1a490 <g_strcmp0@plt+0x4610>
   1a3a8:	ldr	r0, [sp, #48]	; 0x30
   1a3ac:	b	1a318 <g_strcmp0@plt+0x4498>
   1a3b0:	ldr	r0, [pc, #424]	; 1a560 <g_strcmp0@plt+0x46e0>
   1a3b4:	ldr	r2, [pc, #424]	; 1a564 <g_strcmp0@plt+0x46e4>
   1a3b8:	mov	r1, #128	; 0x80
   1a3bc:	bl	151f0 <g_log@plt>
   1a3c0:	ldr	r0, [sp, #48]	; 0x30
   1a3c4:	b	1a318 <g_strcmp0@plt+0x4498>
   1a3c8:	ldr	r3, [r6, #12]
   1a3cc:	ldr	r1, [sp, #36]	; 0x24
   1a3d0:	ldr	r0, [r3, #36]	; 0x24
   1a3d4:	bl	21af8 <g_strcmp0@plt+0xbc78>
   1a3d8:	ldr	r0, [sp, #48]	; 0x30
   1a3dc:	b	1a318 <g_strcmp0@plt+0x4498>
   1a3e0:	ldr	r3, [r6, #12]
   1a3e4:	ldr	r1, [sp, #32]
   1a3e8:	ldr	r0, [r3, #36]	; 0x24
   1a3ec:	bl	21fd0 <g_strcmp0@plt+0xc150>
   1a3f0:	ldr	r0, [sp, #48]	; 0x30
   1a3f4:	b	1a318 <g_strcmp0@plt+0x4498>
   1a3f8:	ldr	r5, [sp, #44]	; 0x2c
   1a3fc:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a400:	ldr	r3, [r6]
   1a404:	cmp	r3, #0
   1a408:	beq	1a418 <g_strcmp0@plt+0x4598>
   1a40c:	ldr	r3, [r3]
   1a410:	cmp	r0, r3
   1a414:	beq	1a45c <g_strcmp0@plt+0x45dc>
   1a418:	mov	r1, r0
   1a41c:	mov	r0, r6
   1a420:	bl	159dc <g_type_check_instance_is_a@plt>
   1a424:	cmp	r0, #0
   1a428:	bne	1a45c <g_strcmp0@plt+0x45dc>
   1a42c:	ldr	r2, [pc, #308]	; 1a568 <g_strcmp0@plt+0x46e8>
   1a430:	ldr	r1, [pc, #308]	; 1a56c <g_strcmp0@plt+0x46ec>
   1a434:	ldr	r0, [pc, #292]	; 1a560 <g_strcmp0@plt+0x46e0>
   1a438:	bl	14fd4 <g_return_if_fail_warning@plt>
   1a43c:	ldr	r3, [sp, #44]	; 0x2c
   1a440:	cmp	r3, #18
   1a444:	bne	1a3a8 <g_strcmp0@plt+0x4528>
   1a448:	ldr	r3, [r6, #12]
   1a44c:	mov	r1, #100	; 0x64
   1a450:	ldr	r0, [r3, #36]	; 0x24
   1a454:	bl	21af8 <g_strcmp0@plt+0xbc78>
   1a458:	b	1a3a8 <g_strcmp0@plt+0x4528>
   1a45c:	ldr	r3, [r6, #12]
   1a460:	ldr	r7, [r3, #56]	; 0x38
   1a464:	cmp	r7, #0
   1a468:	bne	1a4d8 <g_strcmp0@plt+0x4658>
   1a46c:	sub	r2, r5, #20
   1a470:	cmp	r5, #7
   1a474:	cmpne	r2, #5
   1a478:	bls	1a4a4 <g_strcmp0@plt+0x4624>
   1a47c:	ldr	r2, [pc, #236]	; 1a570 <g_strcmp0@plt+0x46f0>
   1a480:	mov	r1, #16
   1a484:	ldr	r0, [pc, #212]	; 1a560 <g_strcmp0@plt+0x46e0>
   1a488:	bl	151f0 <g_log@plt>
   1a48c:	b	1a43c <g_strcmp0@plt+0x45bc>
   1a490:	ldr	r3, [r6, #12]
   1a494:	ldr	r1, [sp, #40]	; 0x28
   1a498:	ldr	r0, [r3, #36]	; 0x24
   1a49c:	bl	21c88 <g_strcmp0@plt+0xbe08>
   1a4a0:	b	1a3a8 <g_strcmp0@plt+0x4528>
   1a4a4:	mov	r2, #0
   1a4a8:	ldr	r0, [r3, #36]	; 0x24
   1a4ac:	mov	r1, #1
   1a4b0:	mov	r3, #0
   1a4b4:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1a4b8:	ldr	r3, [r6, #12]
   1a4bc:	mov	r1, r7
   1a4c0:	ldr	r0, [r3, #36]	; 0x24
   1a4c4:	bl	22070 <g_strcmp0@plt+0xc1f0>
   1a4c8:	ldr	r3, [r6, #12]
   1a4cc:	ldr	r2, [r3, #56]	; 0x38
   1a4d0:	cmp	r2, #0
   1a4d4:	beq	1a47c <g_strcmp0@plt+0x45fc>
   1a4d8:	ldr	r0, [r3, #36]	; 0x24
   1a4dc:	mov	r1, r5
   1a4e0:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1a4e4:	mov	r0, r5
   1a4e8:	bl	1e890 <g_strcmp0@plt+0x8a10>
   1a4ec:	ldr	r3, [r6, #12]
   1a4f0:	mov	r1, r0
   1a4f4:	ldr	r0, [r3, #36]	; 0x24
   1a4f8:	bl	210e0 <g_strcmp0@plt+0xb260>
   1a4fc:	cmp	r5, #1
   1a500:	beq	1a530 <g_strcmp0@plt+0x46b0>
   1a504:	cmp	r5, #18
   1a508:	bne	1a43c <g_strcmp0@plt+0x45bc>
   1a50c:	ldr	r3, [r6, #12]
   1a510:	mov	r1, #0
   1a514:	ldr	r0, [r3, #36]	; 0x24
   1a518:	bl	21fd0 <g_strcmp0@plt+0xc150>
   1a51c:	ldr	r3, [r6, #12]
   1a520:	mov	r1, #100	; 0x64
   1a524:	ldr	r0, [r3, #36]	; 0x24
   1a528:	bl	21af8 <g_strcmp0@plt+0xbc78>
   1a52c:	b	1a43c <g_strcmp0@plt+0x45bc>
   1a530:	ldr	r3, [r6, #12]
   1a534:	mvn	r1, #0
   1a538:	ldr	r0, [r3, #36]	; 0x24
   1a53c:	bl	21af8 <g_strcmp0@plt+0xbc78>
   1a540:	b	1a43c <g_strcmp0@plt+0x45bc>
   1a544:	bl	157f0 <__stack_chk_fail@plt>
   1a548:	andeq	r0, r4, r0, asr lr
   1a54c:	andeq	r9, r2, r4, asr #17
   1a550:	andeq	sl, r2, ip, ror #1
   1a554:	andeq	sl, r2, r4, ror #1
   1a558:	andeq	sl, r2, r8, asr #1
   1a55c:	ldrdeq	sl, [r2], -r4
   1a560:	andeq	r8, r2, ip, lsl #29
   1a564:	strdeq	sl, [r2], -ip
   1a568:	andeq	sl, r2, r8, lsl #2
   1a56c:	andeq	r9, r2, r4, lsl r4
   1a570:	andeq	sl, r2, r4, lsr #2
   1a574:	push	{r4, r5, r6, lr}
   1a578:	mov	r5, r0
   1a57c:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a580:	cmp	r5, #0
   1a584:	beq	1a6f4 <g_strcmp0@plt+0x4874>
   1a588:	ldr	r3, [r5]
   1a58c:	cmp	r3, #0
   1a590:	beq	1a5a0 <g_strcmp0@plt+0x4720>
   1a594:	ldr	r3, [r3]
   1a598:	cmp	r3, r0
   1a59c:	beq	1a5b4 <g_strcmp0@plt+0x4734>
   1a5a0:	mov	r1, r0
   1a5a4:	mov	r0, r5
   1a5a8:	bl	159dc <g_type_check_instance_is_a@plt>
   1a5ac:	cmp	r0, #0
   1a5b0:	beq	1a6f4 <g_strcmp0@plt+0x4874>
   1a5b4:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a5b8:	mov	r1, r0
   1a5bc:	mov	r0, r5
   1a5c0:	bl	15148 <g_type_check_instance_cast@plt>
   1a5c4:	ldr	r3, [r0, #12]
   1a5c8:	mov	r4, r0
   1a5cc:	cmp	r3, #0
   1a5d0:	beq	1a708 <g_strcmp0@plt+0x4888>
   1a5d4:	ldr	r2, [r3, #100]	; 0x64
   1a5d8:	cmp	r2, #0
   1a5dc:	beq	1a60c <g_strcmp0@plt+0x478c>
   1a5e0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1a5e4:	ldr	r2, [pc, #304]	; 1a71c <g_strcmp0@plt+0x489c>
   1a5e8:	mov	r1, #4
   1a5ec:	bl	15568 <g_error_new@plt>
   1a5f0:	mov	r1, r0
   1a5f4:	mov	r6, r0
   1a5f8:	mov	r0, r4
   1a5fc:	bl	17748 <g_strcmp0@plt+0x18c8>
   1a600:	mov	r0, r6
   1a604:	bl	15064 <g_error_free@plt>
   1a608:	ldr	r3, [r4, #12]
   1a60c:	ldr	r0, [r3, #72]	; 0x48
   1a610:	bl	15874 <g_free@plt>
   1a614:	ldr	r3, [r4, #12]
   1a618:	ldr	r0, [r3, #76]	; 0x4c
   1a61c:	bl	15874 <g_free@plt>
   1a620:	ldr	r3, [r4, #12]
   1a624:	ldr	r0, [r3, #80]	; 0x50
   1a628:	bl	15874 <g_free@plt>
   1a62c:	ldr	r3, [r4, #12]
   1a630:	ldr	r0, [r3, #84]	; 0x54
   1a634:	cmp	r0, #0
   1a638:	beq	1a644 <g_strcmp0@plt+0x47c4>
   1a63c:	bl	15b5c <g_object_unref@plt>
   1a640:	ldr	r3, [r4, #12]
   1a644:	ldr	r0, [r3, #108]	; 0x6c
   1a648:	bl	15790 <g_strfreev@plt>
   1a64c:	ldr	r3, [r4, #12]
   1a650:	ldr	r0, [r3, #104]	; 0x68
   1a654:	bl	15790 <g_strfreev@plt>
   1a658:	ldr	r3, [r4, #12]
   1a65c:	ldr	r6, [r3, #8]
   1a660:	bl	15298 <pk_client_get_type@plt>
   1a664:	mov	r1, r0
   1a668:	mov	r0, r6
   1a66c:	bl	15148 <g_type_check_instance_cast@plt>
   1a670:	bl	15b5c <g_object_unref@plt>
   1a674:	ldr	r3, [r4, #12]
   1a678:	ldr	r0, [r3, #12]
   1a67c:	bl	15b5c <g_object_unref@plt>
   1a680:	ldr	r3, [r4, #12]
   1a684:	ldr	r0, [r3, #4]
   1a688:	bl	15b5c <g_object_unref@plt>
   1a68c:	ldr	r3, [r4, #12]
   1a690:	ldr	r0, [r3, #36]	; 0x24
   1a694:	bl	15b5c <g_object_unref@plt>
   1a698:	ldr	r3, [r4, #12]
   1a69c:	ldr	r0, [r3, #40]	; 0x28
   1a6a0:	bl	15b5c <g_object_unref@plt>
   1a6a4:	ldr	r3, [r4, #12]
   1a6a8:	ldr	r0, [r3, #32]
   1a6ac:	bl	15b5c <g_object_unref@plt>
   1a6b0:	ldr	r3, [r4, #12]
   1a6b4:	ldr	r0, [r3, #112]	; 0x70
   1a6b8:	bl	15b5c <g_object_unref@plt>
   1a6bc:	ldr	r3, [r4, #12]
   1a6c0:	ldr	r0, [r3, #92]	; 0x5c
   1a6c4:	bl	15b5c <g_object_unref@plt>
   1a6c8:	ldr	r3, [r4, #12]
   1a6cc:	ldr	r0, [r3, #96]	; 0x60
   1a6d0:	bl	15b5c <g_object_unref@plt>
   1a6d4:	ldr	r3, [pc, #68]	; 1a720 <g_strcmp0@plt+0x48a0>
   1a6d8:	mov	r1, #80	; 0x50
   1a6dc:	ldr	r0, [r3]
   1a6e0:	bl	15dc0 <g_type_check_class_cast@plt>
   1a6e4:	ldr	r3, [r0, #24]
   1a6e8:	mov	r0, r5
   1a6ec:	pop	{r4, r5, r6, lr}
   1a6f0:	bx	r3
   1a6f4:	ldr	r2, [pc, #40]	; 1a724 <g_strcmp0@plt+0x48a4>
   1a6f8:	ldr	r1, [pc, #40]	; 1a728 <g_strcmp0@plt+0x48a8>
   1a6fc:	ldr	r0, [pc, #40]	; 1a72c <g_strcmp0@plt+0x48ac>
   1a700:	pop	{r4, r5, r6, lr}
   1a704:	b	14fd4 <g_return_if_fail_warning@plt>
   1a708:	ldr	r2, [pc, #32]	; 1a730 <g_strcmp0@plt+0x48b0>
   1a70c:	ldr	r1, [pc, #20]	; 1a728 <g_strcmp0@plt+0x48a8>
   1a710:	ldr	r0, [pc, #20]	; 1a72c <g_strcmp0@plt+0x48ac>
   1a714:	pop	{r4, r5, r6, lr}
   1a718:	b	14fd4 <g_return_if_fail_warning@plt>
   1a71c:	andeq	sl, r2, ip, ror #2
   1a720:			; <UNDEFINED> instruction: 0x000418b0
   1a724:	andeq	sl, r2, ip, lsr r1
   1a728:	andeq	r9, r2, r0, lsr r4
   1a72c:	andeq	r8, r2, ip, lsl #29
   1a730:	andeq	sl, r2, r8, asr r1
   1a734:	push	{r4, r5, r6, lr}
   1a738:	mov	r5, r0
   1a73c:	sub	sp, sp, #24
   1a740:	mov	r4, r2
   1a744:	mov	r6, r3
   1a748:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a74c:	cmp	r5, #0
   1a750:	beq	1a828 <g_strcmp0@plt+0x49a8>
   1a754:	ldr	r3, [r5]
   1a758:	cmp	r3, #0
   1a75c:	beq	1a76c <g_strcmp0@plt+0x48ec>
   1a760:	ldr	r3, [r3]
   1a764:	cmp	r3, r0
   1a768:	beq	1a780 <g_strcmp0@plt+0x4900>
   1a76c:	mov	r1, r0
   1a770:	mov	r0, r5
   1a774:	bl	159dc <g_type_check_instance_is_a@plt>
   1a778:	cmp	r0, #0
   1a77c:	beq	1a828 <g_strcmp0@plt+0x49a8>
   1a780:	ldr	r3, [r5, #12]
   1a784:	lsr	r2, r4, #1
   1a788:	and	r2, r2, #1
   1a78c:	str	r2, [r3, #48]	; 0x30
   1a790:	lsr	r0, r4, #2
   1a794:	and	r2, r4, #1
   1a798:	lsr	r1, r4, #3
   1a79c:	str	r2, [r3, #44]	; 0x2c
   1a7a0:	and	r0, r0, #1
   1a7a4:	and	r1, r1, #1
   1a7a8:	lsr	r2, r4, #4
   1a7ac:	and	r2, r2, #1
   1a7b0:	strd	r0, [r3, #52]	; 0x34
   1a7b4:	str	r2, [r3, #60]	; 0x3c
   1a7b8:	mvn	r1, #0
   1a7bc:	mov	r0, #5
   1a7c0:	bl	15718 <pk_bitfield_from_enums@plt>
   1a7c4:	ldr	ip, [r5, #12]
   1a7c8:	rsb	r3, r0, #32
   1a7cc:	lsr	r4, r4, r0
   1a7d0:	sub	r0, r0, #32
   1a7d4:	orr	r4, r4, r6, lsl r3
   1a7d8:	orr	r4, r4, r6, lsr r0
   1a7dc:	and	r4, r4, #1
   1a7e0:	str	r4, [ip, #64]	; 0x40
   1a7e4:	ldr	r3, [ip, #44]	; 0x2c
   1a7e8:	str	r4, [sp, #16]
   1a7ec:	ldr	r2, [ip, #60]	; 0x3c
   1a7f0:	str	r2, [sp, #12]
   1a7f4:	ldr	r1, [ip, #56]	; 0x38
   1a7f8:	ldr	r2, [pc, #68]	; 1a844 <g_strcmp0@plt+0x49c4>
   1a7fc:	str	r1, [sp, #8]
   1a800:	ldr	r0, [ip, #52]	; 0x34
   1a804:	mov	r1, #128	; 0x80
   1a808:	str	r0, [sp, #4]
   1a80c:	ldr	ip, [ip, #48]	; 0x30
   1a810:	ldr	r0, [pc, #48]	; 1a848 <g_strcmp0@plt+0x49c8>
   1a814:	str	ip, [sp]
   1a818:	bl	151f0 <g_log@plt>
   1a81c:	mov	r0, #1
   1a820:	add	sp, sp, #24
   1a824:	pop	{r4, r5, r6, pc}
   1a828:	ldr	r2, [pc, #28]	; 1a84c <g_strcmp0@plt+0x49cc>
   1a82c:	ldr	r1, [pc, #28]	; 1a850 <g_strcmp0@plt+0x49d0>
   1a830:	ldr	r0, [pc, #16]	; 1a848 <g_strcmp0@plt+0x49c8>
   1a834:	bl	14fd4 <g_return_if_fail_warning@plt>
   1a838:	mov	r0, #0
   1a83c:	add	sp, sp, #24
   1a840:	pop	{r4, r5, r6, pc}
   1a844:	andeq	sl, r2, r8, lsl #3
   1a848:	andeq	r8, r2, ip, lsl #29
   1a84c:	andeq	sl, r2, r8, lsl #2
   1a850:	andeq	r9, r2, r8, asr #8
   1a854:	push	{r4, r5, r6, lr}
   1a858:	mov	r4, r0
   1a85c:	mov	r5, r1
   1a860:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a864:	cmp	r4, #0
   1a868:	beq	1a8b0 <g_strcmp0@plt+0x4a30>
   1a86c:	ldr	r3, [r4]
   1a870:	cmp	r3, #0
   1a874:	beq	1a884 <g_strcmp0@plt+0x4a04>
   1a878:	ldr	r3, [r3]
   1a87c:	cmp	r3, r0
   1a880:	beq	1a898 <g_strcmp0@plt+0x4a18>
   1a884:	mov	r1, r0
   1a888:	mov	r0, r4
   1a88c:	bl	159dc <g_type_check_instance_is_a@plt>
   1a890:	cmp	r0, #0
   1a894:	beq	1a8b0 <g_strcmp0@plt+0x4a30>
   1a898:	cmp	r5, #0
   1a89c:	beq	1a8c8 <g_strcmp0@plt+0x4a48>
   1a8a0:	ldr	r3, [r4, #12]
   1a8a4:	mov	r0, #1
   1a8a8:	str	r5, [r3, #100]	; 0x64
   1a8ac:	pop	{r4, r5, r6, pc}
   1a8b0:	ldr	r2, [pc, #40]	; 1a8e0 <g_strcmp0@plt+0x4a60>
   1a8b4:	ldr	r1, [pc, #40]	; 1a8e4 <g_strcmp0@plt+0x4a64>
   1a8b8:	ldr	r0, [pc, #40]	; 1a8e8 <g_strcmp0@plt+0x4a68>
   1a8bc:	bl	14fd4 <g_return_if_fail_warning@plt>
   1a8c0:	mov	r0, #0
   1a8c4:	pop	{r4, r5, r6, pc}
   1a8c8:	ldr	r2, [pc, #28]	; 1a8ec <g_strcmp0@plt+0x4a6c>
   1a8cc:	ldr	r1, [pc, #16]	; 1a8e4 <g_strcmp0@plt+0x4a64>
   1a8d0:	ldr	r0, [pc, #16]	; 1a8e8 <g_strcmp0@plt+0x4a68>
   1a8d4:	bl	14fd4 <g_return_if_fail_warning@plt>
   1a8d8:	mov	r0, r5
   1a8dc:	pop	{r4, r5, r6, pc}
   1a8e0:	andeq	sl, r2, r8, lsl #2
   1a8e4:	andeq	r9, r2, r8, ror #8
   1a8e8:	andeq	r8, r2, ip, lsl #29
   1a8ec:	andeq	sl, r2, r8, ror #3
   1a8f0:	push	{r4, r5, r6, lr}
   1a8f4:	mov	r4, r0
   1a8f8:	mov	r5, r1
   1a8fc:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a900:	cmp	r4, #0
   1a904:	beq	1a978 <g_strcmp0@plt+0x4af8>
   1a908:	ldr	r3, [r4]
   1a90c:	cmp	r3, #0
   1a910:	beq	1a920 <g_strcmp0@plt+0x4aa0>
   1a914:	ldr	r3, [r3]
   1a918:	cmp	r3, r0
   1a91c:	beq	1a934 <g_strcmp0@plt+0x4ab4>
   1a920:	mov	r1, r0
   1a924:	mov	r0, r4
   1a928:	bl	159dc <g_type_check_instance_is_a@plt>
   1a92c:	cmp	r0, #0
   1a930:	beq	1a978 <g_strcmp0@plt+0x4af8>
   1a934:	bl	155d4 <gdk_display_get_default@plt>
   1a938:	mov	r1, r5
   1a93c:	ldr	r5, [r4, #12]
   1a940:	bl	157fc <gdk_x11_window_foreign_new_for_display@plt>
   1a944:	ldr	r3, [r4, #12]
   1a948:	ldr	r2, [pc, #64]	; 1a990 <g_strcmp0@plt+0x4b10>
   1a94c:	mov	r1, #128	; 0x80
   1a950:	str	r0, [r5]
   1a954:	ldr	r0, [pc, #56]	; 1a994 <g_strcmp0@plt+0x4b14>
   1a958:	ldr	r3, [r3]
   1a95c:	bl	151f0 <g_log@plt>
   1a960:	ldr	r3, [r4, #12]
   1a964:	ldr	r1, [r3]
   1a968:	ldr	r0, [r3, #36]	; 0x24
   1a96c:	bl	21248 <g_strcmp0@plt+0xb3c8>
   1a970:	mov	r0, #1
   1a974:	pop	{r4, r5, r6, pc}
   1a978:	ldr	r2, [pc, #24]	; 1a998 <g_strcmp0@plt+0x4b18>
   1a97c:	ldr	r1, [pc, #24]	; 1a99c <g_strcmp0@plt+0x4b1c>
   1a980:	ldr	r0, [pc, #12]	; 1a994 <g_strcmp0@plt+0x4b14>
   1a984:	bl	14fd4 <g_return_if_fail_warning@plt>
   1a988:	mov	r0, #0
   1a98c:	pop	{r4, r5, r6, pc}
   1a990:	strdeq	sl, [r2], -r8
   1a994:	andeq	r8, r2, ip, lsl #29
   1a998:	andeq	sl, r2, r8, lsl #2
   1a99c:	andeq	r9, r2, r4, lsl #9
   1a9a0:	push	{r4, r5, r6, lr}
   1a9a4:	mov	r4, r0
   1a9a8:	mov	r5, r1
   1a9ac:	bl	19f8c <g_strcmp0@plt+0x410c>
   1a9b0:	cmp	r4, #0
   1a9b4:	beq	1a9f4 <g_strcmp0@plt+0x4b74>
   1a9b8:	ldr	r3, [r4]
   1a9bc:	cmp	r3, #0
   1a9c0:	beq	1a9d0 <g_strcmp0@plt+0x4b50>
   1a9c4:	ldr	r3, [r3]
   1a9c8:	cmp	r3, r0
   1a9cc:	beq	1a9e4 <g_strcmp0@plt+0x4b64>
   1a9d0:	mov	r1, r0
   1a9d4:	mov	r0, r4
   1a9d8:	bl	159dc <g_type_check_instance_is_a@plt>
   1a9dc:	cmp	r0, #0
   1a9e0:	beq	1a9f4 <g_strcmp0@plt+0x4b74>
   1a9e4:	ldr	r3, [r4, #12]
   1a9e8:	mov	r0, #1
   1a9ec:	str	r5, [r3, #68]	; 0x44
   1a9f0:	pop	{r4, r5, r6, pc}
   1a9f4:	ldr	r2, [pc, #16]	; 1aa0c <g_strcmp0@plt+0x4b8c>
   1a9f8:	ldr	r1, [pc, #16]	; 1aa10 <g_strcmp0@plt+0x4b90>
   1a9fc:	ldr	r0, [pc, #16]	; 1aa14 <g_strcmp0@plt+0x4b94>
   1aa00:	bl	14fd4 <g_return_if_fail_warning@plt>
   1aa04:	mov	r0, #0
   1aa08:	pop	{r4, r5, r6, pc}
   1aa0c:	andeq	sl, r2, r8, lsl #2
   1aa10:	muleq	r2, ip, r4
   1aa14:	andeq	r8, r2, ip, lsl #29
   1aa18:	push	{r4, r5, r6, r7, lr}
   1aa1c:	mov	r4, r0
   1aa20:	sub	sp, sp, #28
   1aa24:	mov	r5, r1
   1aa28:	mov	r7, r2
   1aa2c:	mov	r6, r3
   1aa30:	bl	19f8c <g_strcmp0@plt+0x410c>
   1aa34:	cmp	r4, #0
   1aa38:	beq	1aae8 <g_strcmp0@plt+0x4c68>
   1aa3c:	ldr	r3, [r4]
   1aa40:	cmp	r3, #0
   1aa44:	beq	1aa54 <g_strcmp0@plt+0x4bd4>
   1aa48:	ldr	r3, [r3]
   1aa4c:	cmp	r3, r0
   1aa50:	beq	1aa68 <g_strcmp0@plt+0x4be8>
   1aa54:	mov	r1, r0
   1aa58:	mov	r0, r4
   1aa5c:	bl	159dc <g_type_check_instance_is_a@plt>
   1aa60:	cmp	r0, #0
   1aa64:	beq	1aae8 <g_strcmp0@plt+0x4c68>
   1aa68:	cmp	r5, #0
   1aa6c:	beq	1ab00 <g_strcmp0@plt+0x4c80>
   1aa70:	ldr	r3, [r4, #12]
   1aa74:	mov	r2, #1
   1aa78:	ldr	r1, [pc, #136]	; 1ab08 <g_strcmp0@plt+0x4c88>
   1aa7c:	str	r7, [r3, #116]	; 0x74
   1aa80:	str	r6, [r3, #120]	; 0x78
   1aa84:	mov	r0, r5
   1aa88:	bl	1555c <g_strsplit@plt>
   1aa8c:	ldr	r3, [r4, #12]
   1aa90:	ldr	r6, [r3, #8]
   1aa94:	mov	r5, r0
   1aa98:	bl	15298 <pk_client_get_type@plt>
   1aa9c:	mov	r1, r0
   1aaa0:	mov	r0, r6
   1aaa4:	bl	15148 <g_type_check_instance_cast@plt>
   1aaa8:	ldr	r1, [pc, #92]	; 1ab0c <g_strcmp0@plt+0x4c8c>
   1aaac:	ldr	r2, [pc, #92]	; 1ab10 <g_strcmp0@plt+0x4c90>
   1aab0:	mov	r3, #0
   1aab4:	str	r2, [sp, #8]
   1aab8:	str	r3, [sp, #4]
   1aabc:	str	r5, [sp]
   1aac0:	str	r4, [sp, #20]
   1aac4:	str	r4, [sp, #12]
   1aac8:	str	r1, [sp, #16]
   1aacc:	mov	r2, #4
   1aad0:	mov	r3, #0
   1aad4:	bl	15a60 <pk_client_resolve_async@plt>
   1aad8:	mov	r0, r5
   1aadc:	add	sp, sp, #28
   1aae0:	pop	{r4, r5, r6, r7, lr}
   1aae4:	b	15790 <g_strfreev@plt>
   1aae8:	ldr	r2, [pc, #36]	; 1ab14 <g_strcmp0@plt+0x4c94>
   1aaec:	ldr	r1, [pc, #36]	; 1ab18 <g_strcmp0@plt+0x4c98>
   1aaf0:	ldr	r0, [pc, #36]	; 1ab1c <g_strcmp0@plt+0x4c9c>
   1aaf4:	add	sp, sp, #28
   1aaf8:	pop	{r4, r5, r6, r7, lr}
   1aafc:	b	14fd4 <g_return_if_fail_warning@plt>
   1ab00:	ldr	r2, [pc, #24]	; 1ab20 <g_strcmp0@plt+0x4ca0>
   1ab04:	b	1aaec <g_strcmp0@plt+0x4c6c>
   1ab08:	andeq	sl, r2, r4, lsr #4
   1ab0c:	andeq	r9, r1, r4, ror #17
   1ab10:	andeq	sl, r1, r0, ror #5
   1ab14:	andeq	sl, r2, r8, lsl #2
   1ab18:			; <UNDEFINED> instruction: 0x000294b8
   1ab1c:	andeq	r8, r2, ip, lsl #29
   1ab20:	andeq	sl, r2, ip, lsl #4
   1ab24:	push	{r4, r5, r6, r7, lr}
   1ab28:	mov	r4, r0
   1ab2c:	sub	sp, sp, #28
   1ab30:	mov	r5, r1
   1ab34:	mov	r7, r2
   1ab38:	mov	r6, r3
   1ab3c:	bl	19f8c <g_strcmp0@plt+0x410c>
   1ab40:	cmp	r4, #0
   1ab44:	beq	1ac08 <g_strcmp0@plt+0x4d88>
   1ab48:	ldr	r3, [r4]
   1ab4c:	cmp	r3, #0
   1ab50:	beq	1ab60 <g_strcmp0@plt+0x4ce0>
   1ab54:	ldr	r3, [r3]
   1ab58:	cmp	r3, r0
   1ab5c:	beq	1ab74 <g_strcmp0@plt+0x4cf4>
   1ab60:	mov	r1, r0
   1ab64:	mov	r0, r4
   1ab68:	bl	159dc <g_type_check_instance_is_a@plt>
   1ab6c:	cmp	r0, #0
   1ab70:	beq	1ac08 <g_strcmp0@plt+0x4d88>
   1ab74:	cmp	r5, #0
   1ab78:	beq	1ac20 <g_strcmp0@plt+0x4da0>
   1ab7c:	ldr	r1, [r4, #12]
   1ab80:	mov	r3, r5
   1ab84:	ldr	r2, [pc, #156]	; 1ac28 <g_strcmp0@plt+0x4da8>
   1ab88:	str	r7, [r1, #116]	; 0x74
   1ab8c:	str	r6, [r1, #120]	; 0x78
   1ab90:	ldr	r0, [pc, #148]	; 1ac2c <g_strcmp0@plt+0x4dac>
   1ab94:	mov	r1, #128	; 0x80
   1ab98:	bl	151f0 <g_log@plt>
   1ab9c:	mvn	r2, #0
   1aba0:	ldr	r1, [pc, #136]	; 1ac30 <g_strcmp0@plt+0x4db0>
   1aba4:	mov	r0, r5
   1aba8:	bl	1555c <g_strsplit@plt>
   1abac:	ldr	r3, [r4, #12]
   1abb0:	ldr	r6, [r3, #8]
   1abb4:	mov	r5, r0
   1abb8:	bl	15298 <pk_client_get_type@plt>
   1abbc:	mov	r1, r0
   1abc0:	mov	r0, r6
   1abc4:	bl	15148 <g_type_check_instance_cast@plt>
   1abc8:	ldr	r1, [pc, #100]	; 1ac34 <g_strcmp0@plt+0x4db4>
   1abcc:	ldr	r2, [pc, #100]	; 1ac38 <g_strcmp0@plt+0x4db8>
   1abd0:	mov	r3, #0
   1abd4:	str	r2, [sp, #8]
   1abd8:	str	r3, [sp, #4]
   1abdc:	str	r5, [sp]
   1abe0:	str	r4, [sp, #20]
   1abe4:	str	r4, [sp, #12]
   1abe8:	str	r1, [sp, #16]
   1abec:	mov	r2, #65536	; 0x10000
   1abf0:	mov	r3, #0
   1abf4:	bl	15634 <pk_client_search_files_async@plt>
   1abf8:	mov	r0, r5
   1abfc:	add	sp, sp, #28
   1ac00:	pop	{r4, r5, r6, r7, lr}
   1ac04:	b	15790 <g_strfreev@plt>
   1ac08:	ldr	r2, [pc, #44]	; 1ac3c <g_strcmp0@plt+0x4dbc>
   1ac0c:	ldr	r1, [pc, #44]	; 1ac40 <g_strcmp0@plt+0x4dc0>
   1ac10:	ldr	r0, [pc, #20]	; 1ac2c <g_strcmp0@plt+0x4dac>
   1ac14:	add	sp, sp, #28
   1ac18:	pop	{r4, r5, r6, r7, lr}
   1ac1c:	b	14fd4 <g_return_if_fail_warning@plt>
   1ac20:	ldr	r2, [pc, #28]	; 1ac44 <g_strcmp0@plt+0x4dc4>
   1ac24:	b	1ac0c <g_strcmp0@plt+0x4d8c>
   1ac28:	andeq	sl, r2, ip, lsr r2
   1ac2c:	andeq	r8, r2, ip, lsl #29
   1ac30:	andeq	sl, r2, ip, asr #4
   1ac34:	andeq	r7, r1, r4, lsl #19
   1ac38:	andeq	sl, r1, r0, ror #5
   1ac3c:	andeq	sl, r2, r8, lsl #2
   1ac40:	ldrdeq	r9, [r2], -r4
   1ac44:	andeq	sl, r2, r8, lsr #4
   1ac48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac4c:	mov	r6, r0
   1ac50:	ldr	r8, [pc, #868]	; 1afbc <g_strcmp0@plt+0x513c>
   1ac54:	sub	sp, sp, #28
   1ac58:	mov	r4, r1
   1ac5c:	ldr	r0, [r8]
   1ac60:	mov	r1, #0
   1ac64:	mov	r7, r2
   1ac68:	mov	r5, r3
   1ac6c:	str	r0, [sp, #20]
   1ac70:	str	r1, [sp, #16]
   1ac74:	bl	19f8c <g_strcmp0@plt+0x410c>
   1ac78:	cmp	r6, #0
   1ac7c:	beq	1aeac <g_strcmp0@plt+0x502c>
   1ac80:	ldr	r3, [r6]
   1ac84:	cmp	r3, #0
   1ac88:	beq	1ac98 <g_strcmp0@plt+0x4e18>
   1ac8c:	ldr	r3, [r3]
   1ac90:	cmp	r3, r0
   1ac94:	beq	1acac <g_strcmp0@plt+0x4e2c>
   1ac98:	mov	r1, r0
   1ac9c:	mov	r0, r6
   1aca0:	bl	159dc <g_type_check_instance_is_a@plt>
   1aca4:	cmp	r0, #0
   1aca8:	beq	1aeac <g_strcmp0@plt+0x502c>
   1acac:	cmp	r4, #0
   1acb0:	beq	1aed4 <g_strcmp0@plt+0x5054>
   1acb4:	ldr	r3, [r6, #12]
   1acb8:	ldr	r0, [pc, #768]	; 1afc0 <g_strcmp0@plt+0x5140>
   1acbc:	str	r7, [r3, #116]	; 0x74
   1acc0:	str	r5, [r3, #120]	; 0x78
   1acc4:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1acc8:	mov	r7, r0
   1accc:	ldr	r0, [pc, #748]	; 1afc0 <g_strcmp0@plt+0x5140>
   1acd0:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1acd4:	mov	r5, r0
   1acd8:	ldr	r0, [r4]
   1acdc:	cmp	r0, #0
   1ace0:	beq	1ad14 <g_strcmp0@plt+0x4e94>
   1ace4:	bl	153a0 <g_strdup@plt>
   1ace8:	mov	r1, r0
   1acec:	mov	r0, r7
   1acf0:	bl	15cc4 <g_ptr_array_add@plt>
   1acf4:	ldr	r0, [r4]
   1acf8:	bl	15250 <g_path_get_basename@plt>
   1acfc:	mov	r1, r0
   1ad00:	mov	r0, r5
   1ad04:	bl	15cc4 <g_ptr_array_add@plt>
   1ad08:	ldr	r0, [r4, #4]!
   1ad0c:	cmp	r0, #0
   1ad10:	bne	1ace4 <g_strcmp0@plt+0x4e64>
   1ad14:	ldr	r4, [r6, #12]
   1ad18:	ldr	r3, [r4, #44]	; 0x2c
   1ad1c:	cmp	r3, #0
   1ad20:	beq	1adf0 <g_strcmp0@plt+0x4f70>
   1ad24:	mov	r2, #5
   1ad28:	ldr	r3, [r5, #4]
   1ad2c:	ldr	r1, [pc, #656]	; 1afc4 <g_strcmp0@plt+0x5144>
   1ad30:	str	r2, [sp]
   1ad34:	mov	r0, #0
   1ad38:	ldr	r2, [pc, #648]	; 1afc8 <g_strcmp0@plt+0x5148>
   1ad3c:	bl	154a8 <dcngettext@plt>
   1ad40:	ldr	r3, [r5, #4]
   1ad44:	cmp	r3, #1
   1ad48:	mov	fp, r0
   1ad4c:	bne	1aee8 <g_strcmp0@plt+0x5068>
   1ad50:	ldr	r3, [r5]
   1ad54:	ldr	r0, [r3]
   1ad58:	bl	153a0 <g_strdup@plt>
   1ad5c:	mov	r4, r0
   1ad60:	ldr	r0, [r6, #12]
   1ad64:	mov	r2, #0
   1ad68:	mov	r3, #0
   1ad6c:	mov	r1, #0
   1ad70:	ldr	r0, [r0, #36]	; 0x24
   1ad74:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1ad78:	ldr	r3, [r6, #12]
   1ad7c:	mov	r1, fp
   1ad80:	ldr	r0, [r3, #36]	; 0x24
   1ad84:	bl	210e0 <g_strcmp0@plt+0xb260>
   1ad88:	ldr	r3, [r6, #12]
   1ad8c:	mov	r1, r4
   1ad90:	ldr	r0, [r3, #36]	; 0x24
   1ad94:	bl	213e8 <g_strcmp0@plt+0xb568>
   1ad98:	ldr	r3, [r6, #12]
   1ad9c:	mov	r2, #5
   1ada0:	ldr	r1, [pc, #548]	; 1afcc <g_strcmp0@plt+0x514c>
   1ada4:	mov	r0, #0
   1ada8:	ldr	r9, [r3, #36]	; 0x24
   1adac:	bl	15880 <dcgettext@plt>
   1adb0:	mov	r1, r0
   1adb4:	mov	r0, r9
   1adb8:	bl	21950 <g_strcmp0@plt+0xbad0>
   1adbc:	ldr	r3, [r6, #12]
   1adc0:	ldr	r1, [r3, #68]	; 0x44
   1adc4:	ldr	r0, [r3, #36]	; 0x24
   1adc8:	bl	22070 <g_strcmp0@plt+0xc1f0>
   1adcc:	ldr	r3, [r6, #12]
   1add0:	ldr	r0, [r3, #36]	; 0x24
   1add4:	bl	2232c <g_strcmp0@plt+0xc4ac>
   1add8:	mov	r9, r0
   1addc:	mov	r0, r4
   1ade0:	bl	15874 <g_free@plt>
   1ade4:	cmn	r9, #5
   1ade8:	bne	1af50 <g_strcmp0@plt+0x50d0>
   1adec:	ldr	r4, [r6, #12]
   1adf0:	mov	r0, r7
   1adf4:	bl	1558c <pk_ptr_array_to_strv@plt>
   1adf8:	ldr	ip, [r6, #12]
   1adfc:	mov	r2, #0
   1ae00:	mov	r1, #1
   1ae04:	mov	r3, #0
   1ae08:	str	r0, [r4, #108]	; 0x6c
   1ae0c:	ldr	r0, [ip, #36]	; 0x24
   1ae10:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1ae14:	ldr	r3, [r6, #12]
   1ae18:	ldr	r0, [r3, #108]	; 0x6c
   1ae1c:	bl	157a8 <g_strv_length@plt>
   1ae20:	ldr	r1, [r6, #12]
   1ae24:	mov	r3, #5
   1ae28:	ldr	r2, [pc, #416]	; 1afd0 <g_strcmp0@plt+0x5150>
   1ae2c:	ldr	r4, [r1, #36]	; 0x24
   1ae30:	ldr	r1, [pc, #412]	; 1afd4 <g_strcmp0@plt+0x5154>
   1ae34:	str	r3, [sp]
   1ae38:	mov	r3, r0
   1ae3c:	mov	r0, #0
   1ae40:	bl	154a8 <dcngettext@plt>
   1ae44:	mov	r1, r0
   1ae48:	mov	r0, r4
   1ae4c:	bl	210e0 <g_strcmp0@plt+0xb260>
   1ae50:	ldr	r3, [r6, #12]
   1ae54:	ldr	r2, [r3, #56]	; 0x38
   1ae58:	cmp	r2, #0
   1ae5c:	bne	1aec0 <g_strcmp0@plt+0x5040>
   1ae60:	ldr	r1, [r3, #108]	; 0x6c
   1ae64:	ldr	r0, [r3, #8]
   1ae68:	ldr	r3, [pc, #360]	; 1afd8 <g_strcmp0@plt+0x5158>
   1ae6c:	str	r6, [sp, #8]
   1ae70:	str	r3, [sp, #4]
   1ae74:	str	r6, [sp]
   1ae78:	ldr	r3, [pc, #348]	; 1afdc <g_strcmp0@plt+0x515c>
   1ae7c:	mov	r2, #0
   1ae80:	bl	14fb0 <pk_task_install_files_async@plt>
   1ae84:	mov	r0, r7
   1ae88:	bl	15c7c <g_ptr_array_unref@plt>
   1ae8c:	mov	r0, r5
   1ae90:	bl	15c7c <g_ptr_array_unref@plt>
   1ae94:	ldr	r2, [sp, #20]
   1ae98:	ldr	r3, [r8]
   1ae9c:	cmp	r2, r3
   1aea0:	bne	1afb8 <g_strcmp0@plt+0x5138>
   1aea4:	add	sp, sp, #28
   1aea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aeac:	ldr	r2, [pc, #300]	; 1afe0 <g_strcmp0@plt+0x5160>
   1aeb0:	ldr	r1, [pc, #300]	; 1afe4 <g_strcmp0@plt+0x5164>
   1aeb4:	ldr	r0, [pc, #300]	; 1afe8 <g_strcmp0@plt+0x5168>
   1aeb8:	bl	14fd4 <g_return_if_fail_warning@plt>
   1aebc:	b	1ae94 <g_strcmp0@plt+0x5014>
   1aec0:	ldr	r1, [r3, #68]	; 0x44
   1aec4:	ldr	r0, [r3, #36]	; 0x24
   1aec8:	bl	22070 <g_strcmp0@plt+0xc1f0>
   1aecc:	ldr	r3, [r6, #12]
   1aed0:	b	1ae60 <g_strcmp0@plt+0x4fe0>
   1aed4:	ldr	r2, [pc, #272]	; 1afec <g_strcmp0@plt+0x516c>
   1aed8:	ldr	r1, [pc, #260]	; 1afe4 <g_strcmp0@plt+0x5164>
   1aedc:	ldr	r0, [pc, #260]	; 1afe8 <g_strcmp0@plt+0x5168>
   1aee0:	bl	14fd4 <g_return_if_fail_warning@plt>
   1aee4:	b	1ae94 <g_strcmp0@plt+0x5014>
   1aee8:	mov	r0, #0
   1aeec:	bl	15100 <g_string_new@plt>
   1aef0:	ldr	r3, [r5, #4]
   1aef4:	cmp	r3, #0
   1aef8:	movne	r4, #0
   1aefc:	ldrne	sl, [pc, #236]	; 1aff0 <g_strcmp0@plt+0x5170>
   1af00:	mov	r9, r0
   1af04:	beq	1af2c <g_strcmp0@plt+0x50ac>
   1af08:	ldr	r3, [r5]
   1af0c:	mov	r1, sl
   1af10:	mov	r0, r9
   1af14:	ldr	r2, [r3, r4, lsl #2]
   1af18:	bl	15da8 <g_string_append_printf@plt>
   1af1c:	ldr	r3, [r5, #4]
   1af20:	add	r4, r4, #1
   1af24:	cmp	r4, r3
   1af28:	bcc	1af08 <g_strcmp0@plt+0x5088>
   1af2c:	ldr	r1, [r9, #4]
   1af30:	mov	r0, r9
   1af34:	sub	r1, r1, #1
   1af38:	bl	14ee4 <g_string_set_size@plt>
   1af3c:	mov	r0, r9
   1af40:	mov	r1, #0
   1af44:	bl	15b08 <g_string_free@plt>
   1af48:	mov	r4, r0
   1af4c:	b	1ad60 <g_strcmp0@plt+0x4ee0>
   1af50:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1af54:	ldr	r3, [pc, #152]	; 1aff4 <g_strcmp0@plt+0x5174>
   1af58:	mov	r2, #17
   1af5c:	mov	r1, r0
   1af60:	add	r0, sp, #16
   1af64:	bl	152c8 <g_set_error_literal@plt>
   1af68:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1af6c:	mov	r4, r0
   1af70:	ldr	r0, [sp, #16]
   1af74:	add	r1, r0, #4
   1af78:	bl	17900 <g_strcmp0@plt+0x1a80>
   1af7c:	ldr	r3, [sp, #16]
   1af80:	ldr	r2, [pc, #112]	; 1aff8 <g_strcmp0@plt+0x5178>
   1af84:	ldr	r3, [r3, #8]
   1af88:	mov	r1, r0
   1af8c:	mov	r0, r4
   1af90:	bl	15568 <g_error_new@plt>
   1af94:	mov	r1, r0
   1af98:	mov	r4, r0
   1af9c:	mov	r0, r6
   1afa0:	bl	17748 <g_strcmp0@plt+0x18c8>
   1afa4:	ldr	r0, [sp, #16]
   1afa8:	bl	15064 <g_error_free@plt>
   1afac:	mov	r0, r4
   1afb0:	bl	15064 <g_error_free@plt>
   1afb4:	b	1ae84 <g_strcmp0@plt+0x5004>
   1afb8:	bl	157f0 <__stack_chk_fail@plt>
   1afbc:	andeq	r0, r4, r0, asr lr
   1afc0:	andeq	r5, r1, r4, ror r8
   1afc4:	andeq	sl, r2, r8, lsl #5
   1afc8:	andeq	sl, r2, r4, ror #4
   1afcc:	andeq	r9, r2, r8, ror #24
   1afd0:	ldrdeq	sl, [r2], -r8
   1afd4:	andeq	sl, r2, ip, ror #5
   1afd8:	andeq	r9, r1, r0, ror #20
   1afdc:	andeq	sl, r1, r0, ror #5
   1afe0:	andeq	sl, r2, r8, lsl #2
   1afe4:	strdeq	r9, [r2], -r0
   1afe8:	andeq	r8, r2, ip, lsl #29
   1afec:	andeq	sl, r2, r0, asr r2
   1aff0:	andeq	sl, r2, ip, lsr #5
   1aff4:			; <UNDEFINED> instruction: 0x0002a2b4
   1aff8:			; <UNDEFINED> instruction: 0x0002a2bc
   1affc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b000:	mov	r4, r0
   1b004:	sub	sp, sp, #24
   1b008:	mov	r6, r1
   1b00c:	mov	r7, r2
   1b010:	mov	r5, r3
   1b014:	bl	19f8c <g_strcmp0@plt+0x410c>
   1b018:	cmp	r4, #0
   1b01c:	beq	1b260 <g_strcmp0@plt+0x53e0>
   1b020:	ldr	r3, [r4]
   1b024:	cmp	r3, #0
   1b028:	beq	1b038 <g_strcmp0@plt+0x51b8>
   1b02c:	ldr	r3, [r3]
   1b030:	cmp	r3, r0
   1b034:	beq	1b04c <g_strcmp0@plt+0x51cc>
   1b038:	mov	r1, r0
   1b03c:	mov	r0, r4
   1b040:	bl	159dc <g_type_check_instance_is_a@plt>
   1b044:	cmp	r0, #0
   1b048:	beq	1b260 <g_strcmp0@plt+0x53e0>
   1b04c:	cmp	r6, #0
   1b050:	beq	1b28c <g_strcmp0@plt+0x540c>
   1b054:	ldr	r3, [r4, #12]
   1b058:	ldr	r2, [r3, #52]	; 0x34
   1b05c:	str	r7, [r3, #116]	; 0x74
   1b060:	cmp	r2, #0
   1b064:	str	r5, [r3, #120]	; 0x78
   1b068:	beq	1b278 <g_strcmp0@plt+0x53f8>
   1b06c:	ldr	r0, [pc, #668]	; 1b310 <g_strcmp0@plt+0x5490>
   1b070:	bl	15100 <g_string_new@plt>
   1b074:	mov	r7, r0
   1b078:	mov	r0, r6
   1b07c:	bl	157a8 <g_strv_length@plt>
   1b080:	subs	r9, r0, #0
   1b084:	beq	1b2a4 <g_strcmp0@plt+0x5424>
   1b088:	cmp	r9, #1
   1b08c:	ldr	r2, [r6]
   1b090:	beq	1b300 <g_strcmp0@plt+0x5480>
   1b094:	sub	r8, r6, #4
   1b098:	add	r8, r8, r9, lsl #2
   1b09c:	mov	r5, r6
   1b0a0:	ldr	sl, [pc, #620]	; 1b314 <g_strcmp0@plt+0x5494>
   1b0a4:	b	1b0ac <g_strcmp0@plt+0x522c>
   1b0a8:	ldr	r2, [r5, #4]!
   1b0ac:	mov	r1, sl
   1b0b0:	mov	r0, r7
   1b0b4:	bl	15da8 <g_string_append_printf@plt>
   1b0b8:	cmp	r5, r8
   1b0bc:	bne	1b0a8 <g_strcmp0@plt+0x5228>
   1b0c0:	mov	r0, r7
   1b0c4:	mov	r1, #0
   1b0c8:	bl	15b08 <g_string_free@plt>
   1b0cc:	mov	r5, #5
   1b0d0:	mov	r3, r9
   1b0d4:	ldr	r2, [pc, #572]	; 1b318 <g_strcmp0@plt+0x5498>
   1b0d8:	ldr	r1, [pc, #572]	; 1b31c <g_strcmp0@plt+0x549c>
   1b0dc:	str	r5, [sp]
   1b0e0:	mov	r8, r0
   1b0e4:	mov	r0, #0
   1b0e8:	bl	154a8 <dcngettext@plt>
   1b0ec:	mov	r3, r9
   1b0f0:	ldr	r2, [pc, #552]	; 1b320 <g_strcmp0@plt+0x54a0>
   1b0f4:	ldr	r1, [pc, #552]	; 1b324 <g_strcmp0@plt+0x54a4>
   1b0f8:	str	r5, [sp]
   1b0fc:	mov	r7, r0
   1b100:	mov	r0, #0
   1b104:	bl	154a8 <dcngettext@plt>
   1b108:	mov	r1, r7
   1b10c:	mov	r2, r8
   1b110:	mov	r3, r0
   1b114:	ldr	r0, [pc, #524]	; 1b328 <g_strcmp0@plt+0x54a8>
   1b118:	bl	15490 <g_strdup_printf@plt>
   1b11c:	mov	r7, r0
   1b120:	mov	r0, r8
   1b124:	bl	15874 <g_free@plt>
   1b128:	ldr	r3, [r4, #12]
   1b12c:	ldr	r0, [r3, #72]	; 0x48
   1b130:	str	r5, [sp]
   1b134:	cmp	r0, #0
   1b138:	mov	r3, r9
   1b13c:	beq	1b2b8 <g_strcmp0@plt+0x5438>
   1b140:	ldr	r2, [pc, #484]	; 1b32c <g_strcmp0@plt+0x54ac>
   1b144:	ldr	r1, [pc, #484]	; 1b330 <g_strcmp0@plt+0x54b0>
   1b148:	mov	r0, #0
   1b14c:	bl	154a8 <dcngettext@plt>
   1b150:	ldr	r3, [r4, #12]
   1b154:	ldr	r1, [r3, #72]	; 0x48
   1b158:	bl	15490 <g_strdup_printf@plt>
   1b15c:	mov	r5, r0
   1b160:	mov	r2, #5
   1b164:	ldr	r1, [pc, #456]	; 1b334 <g_strcmp0@plt+0x54b4>
   1b168:	mov	r0, #0
   1b16c:	bl	15880 <dcgettext@plt>
   1b170:	mov	r2, r7
   1b174:	mov	r1, r5
   1b178:	mov	r3, r0
   1b17c:	mov	r0, r4
   1b180:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1b184:	mov	r8, r0
   1b188:	mov	r0, r5
   1b18c:	bl	15874 <g_free@plt>
   1b190:	mov	r0, r7
   1b194:	bl	15874 <g_free@plt>
   1b198:	cmp	r8, #0
   1b19c:	beq	1b2d0 <g_strcmp0@plt+0x5450>
   1b1a0:	ldr	r0, [r4, #12]
   1b1a4:	mov	r2, #0
   1b1a8:	mov	r3, #0
   1b1ac:	mov	r1, #1
   1b1b0:	ldr	r0, [r0, #36]	; 0x24
   1b1b4:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1b1b8:	ldr	r3, [r4, #12]
   1b1bc:	mov	r2, #5
   1b1c0:	ldr	r1, [pc, #368]	; 1b338 <g_strcmp0@plt+0x54b8>
   1b1c4:	mov	r0, #0
   1b1c8:	ldr	r5, [r3, #36]	; 0x24
   1b1cc:	bl	15880 <dcgettext@plt>
   1b1d0:	mov	r1, r0
   1b1d4:	mov	r0, r5
   1b1d8:	bl	210e0 <g_strcmp0@plt+0xb260>
   1b1dc:	ldr	r3, [r4, #12]
   1b1e0:	mov	r1, #1
   1b1e4:	ldr	r0, [r3, #36]	; 0x24
   1b1e8:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1b1ec:	ldr	r3, [r4, #12]
   1b1f0:	ldr	r2, [r3, #56]	; 0x38
   1b1f4:	cmp	r2, #0
   1b1f8:	bne	1b294 <g_strcmp0@plt+0x5414>
   1b1fc:	ldr	r5, [r3, #8]
   1b200:	bl	15298 <pk_client_get_type@plt>
   1b204:	mov	r1, r0
   1b208:	mov	r0, r5
   1b20c:	bl	15148 <g_type_check_instance_cast@plt>
   1b210:	mvn	r2, #0
   1b214:	mov	r1, #16
   1b218:	mov	r5, r0
   1b21c:	mov	r0, #18
   1b220:	bl	15718 <pk_bitfield_from_enums@plt>
   1b224:	ldr	ip, [pc, #272]	; 1b33c <g_strcmp0@plt+0x54bc>
   1b228:	ldr	r2, [pc, #272]	; 1b340 <g_strcmp0@plt+0x54c0>
   1b22c:	mov	r3, #0
   1b230:	str	r2, [sp, #8]
   1b234:	str	r3, [sp, #4]
   1b238:	str	r4, [sp, #20]
   1b23c:	str	r4, [sp, #12]
   1b240:	str	r6, [sp]
   1b244:	str	ip, [sp, #16]
   1b248:	mov	r2, r0
   1b24c:	mov	r3, r1
   1b250:	mov	r0, r5
   1b254:	bl	15a60 <pk_client_resolve_async@plt>
   1b258:	add	sp, sp, #24
   1b25c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b260:	ldr	r2, [pc, #220]	; 1b344 <g_strcmp0@plt+0x54c4>
   1b264:	ldr	r1, [pc, #220]	; 1b348 <g_strcmp0@plt+0x54c8>
   1b268:	ldr	r0, [pc, #220]	; 1b34c <g_strcmp0@plt+0x54cc>
   1b26c:	add	sp, sp, #24
   1b270:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b274:	b	14fd4 <g_return_if_fail_warning@plt>
   1b278:	ldr	r2, [pc, #208]	; 1b350 <g_strcmp0@plt+0x54d0>
   1b27c:	mov	r1, #128	; 0x80
   1b280:	ldr	r0, [pc, #196]	; 1b34c <g_strcmp0@plt+0x54cc>
   1b284:	bl	151f0 <g_log@plt>
   1b288:	b	1b1a0 <g_strcmp0@plt+0x5320>
   1b28c:	ldr	r2, [pc, #192]	; 1b354 <g_strcmp0@plt+0x54d4>
   1b290:	b	1b264 <g_strcmp0@plt+0x53e4>
   1b294:	ldr	r0, [r3, #36]	; 0x24
   1b298:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1b29c:	ldr	r3, [r4, #12]
   1b2a0:	b	1b1fc <g_strcmp0@plt+0x537c>
   1b2a4:	mov	r0, r4
   1b2a8:	mov	r1, #1
   1b2ac:	add	sp, sp, #24
   1b2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b2b4:	b	19574 <g_strcmp0@plt+0x36f4>
   1b2b8:	ldr	r2, [pc, #152]	; 1b358 <g_strcmp0@plt+0x54d8>
   1b2bc:	ldr	r1, [pc, #152]	; 1b35c <g_strcmp0@plt+0x54dc>
   1b2c0:	bl	154a8 <dcngettext@plt>
   1b2c4:	bl	153a0 <g_strdup@plt>
   1b2c8:	mov	r5, r0
   1b2cc:	b	1b160 <g_strcmp0@plt+0x52e0>
   1b2d0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1b2d4:	ldr	r2, [pc, #132]	; 1b360 <g_strcmp0@plt+0x54e0>
   1b2d8:	mov	r1, #17
   1b2dc:	bl	15568 <g_error_new@plt>
   1b2e0:	mov	r5, r0
   1b2e4:	mov	r1, r0
   1b2e8:	mov	r0, r4
   1b2ec:	bl	17748 <g_strcmp0@plt+0x18c8>
   1b2f0:	mov	r0, r5
   1b2f4:	add	sp, sp, #24
   1b2f8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b2fc:	b	15064 <g_error_free@plt>
   1b300:	ldr	r1, [pc, #92]	; 1b364 <g_strcmp0@plt+0x54e4>
   1b304:	mov	r0, r7
   1b308:	bl	15da8 <g_string_append_printf@plt>
   1b30c:	b	1b0c0 <g_strcmp0@plt+0x5240>
   1b310:	muleq	r2, r4, r6
   1b314:	andeq	sl, r2, ip, lsr #5
   1b318:	andeq	sl, r2, r4, lsl r3
   1b31c:	andeq	sl, r2, r8, lsr r3
   1b320:	andeq	sl, r2, ip, asr r3
   1b324:	muleq	r2, r8, r3
   1b328:	ldrdeq	sl, [r2], -r0
   1b32c:	ldrdeq	sl, [r2], -ip
   1b330:	strdeq	sl, [r2], -ip
   1b334:	andeq	r9, r2, r8, ror #24
   1b338:	andeq	sl, r2, r0, lsl #9
   1b33c:	andeq	r8, r1, r8, asr #32
   1b340:	andeq	sl, r1, r0, ror #5
   1b344:	andeq	sl, r2, r8, lsl #2
   1b348:	andeq	r9, r2, r4, lsl r5
   1b34c:	andeq	r8, r2, ip, lsl #29
   1b350:	andeq	r9, r2, r8, lsl #23
   1b354:	andeq	sl, r2, r0, lsl #6
   1b358:	andeq	sl, r2, ip, lsl r4
   1b35c:	andeq	sl, r2, r0, asr #8
   1b360:	andeq	sl, r2, r8, ror #8
   1b364:			; <UNDEFINED> instruction: 0x0002a2b0
   1b368:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b36c:	mov	r5, r0
   1b370:	sub	sp, sp, #24
   1b374:	mov	r9, r1
   1b378:	mov	r6, r2
   1b37c:	mov	r4, r3
   1b380:	bl	19f8c <g_strcmp0@plt+0x410c>
   1b384:	cmp	r5, #0
   1b388:	beq	1b598 <g_strcmp0@plt+0x5718>
   1b38c:	ldr	r3, [r5]
   1b390:	cmp	r3, #0
   1b394:	beq	1b3a4 <g_strcmp0@plt+0x5524>
   1b398:	ldr	r3, [r3]
   1b39c:	cmp	r3, r0
   1b3a0:	beq	1b3b8 <g_strcmp0@plt+0x5538>
   1b3a4:	mov	r1, r0
   1b3a8:	mov	r0, r5
   1b3ac:	bl	159dc <g_type_check_instance_is_a@plt>
   1b3b0:	cmp	r0, #0
   1b3b4:	beq	1b598 <g_strcmp0@plt+0x5718>
   1b3b8:	cmp	r9, #0
   1b3bc:	beq	1b5c4 <g_strcmp0@plt+0x5744>
   1b3c0:	ldr	r3, [r5, #12]
   1b3c4:	ldr	r2, [r3, #44]	; 0x2c
   1b3c8:	str	r6, [r3, #116]	; 0x74
   1b3cc:	cmp	r2, #0
   1b3d0:	str	r4, [r3, #120]	; 0x78
   1b3d4:	beq	1b5b0 <g_strcmp0@plt+0x5730>
   1b3d8:	ldr	r0, [pc, #584]	; 1b628 <g_strcmp0@plt+0x57a8>
   1b3dc:	bl	15100 <g_string_new@plt>
   1b3e0:	mov	r6, r0
   1b3e4:	mov	r0, r9
   1b3e8:	bl	157a8 <g_strv_length@plt>
   1b3ec:	cmp	r0, #1
   1b3f0:	mov	sl, r0
   1b3f4:	beq	1b5cc <g_strcmp0@plt+0x574c>
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b424 <g_strcmp0@plt+0x55a4>
   1b400:	sub	r4, r9, #4
   1b404:	ldr	r8, [pc, #544]	; 1b62c <g_strcmp0@plt+0x57ac>
   1b408:	add	r7, r4, r0, lsl #2
   1b40c:	ldr	r2, [r4, #4]!
   1b410:	mov	r1, r8
   1b414:	mov	r0, r6
   1b418:	bl	15da8 <g_string_append_printf@plt>
   1b41c:	cmp	r7, r4
   1b420:	bne	1b40c <g_strcmp0@plt+0x558c>
   1b424:	mov	r0, r6
   1b428:	mov	r1, #0
   1b42c:	bl	15b08 <g_string_free@plt>
   1b430:	mov	r4, #5
   1b434:	mov	r3, sl
   1b438:	ldr	r2, [pc, #496]	; 1b630 <g_strcmp0@plt+0x57b0>
   1b43c:	ldr	r1, [pc, #496]	; 1b634 <g_strcmp0@plt+0x57b4>
   1b440:	str	r4, [sp]
   1b444:	mov	r7, r0
   1b448:	mov	r0, #0
   1b44c:	bl	154a8 <dcngettext@plt>
   1b450:	mov	r3, sl
   1b454:	ldr	r2, [pc, #476]	; 1b638 <g_strcmp0@plt+0x57b8>
   1b458:	ldr	r1, [pc, #476]	; 1b63c <g_strcmp0@plt+0x57bc>
   1b45c:	str	r4, [sp]
   1b460:	mov	r6, r0
   1b464:	mov	r0, #0
   1b468:	bl	154a8 <dcngettext@plt>
   1b46c:	mov	r1, r6
   1b470:	mov	r2, r7
   1b474:	mov	r3, r0
   1b478:	ldr	r0, [pc, #448]	; 1b640 <g_strcmp0@plt+0x57c0>
   1b47c:	bl	15490 <g_strdup_printf@plt>
   1b480:	ldr	r3, [r5, #12]
   1b484:	mov	r6, r0
   1b488:	ldr	r0, [r3, #72]	; 0x48
   1b48c:	str	r4, [sp]
   1b490:	cmp	r0, #0
   1b494:	mov	r3, sl
   1b498:	beq	1b5e0 <g_strcmp0@plt+0x5760>
   1b49c:	ldr	r2, [pc, #416]	; 1b644 <g_strcmp0@plt+0x57c4>
   1b4a0:	ldr	r1, [pc, #416]	; 1b648 <g_strcmp0@plt+0x57c8>
   1b4a4:	mov	r0, #0
   1b4a8:	bl	154a8 <dcngettext@plt>
   1b4ac:	ldr	r3, [r5, #12]
   1b4b0:	ldr	r1, [r3, #72]	; 0x48
   1b4b4:	bl	15490 <g_strdup_printf@plt>
   1b4b8:	mov	r4, r0
   1b4bc:	mov	r2, #5
   1b4c0:	ldr	r1, [pc, #388]	; 1b64c <g_strcmp0@plt+0x57cc>
   1b4c4:	mov	r0, #0
   1b4c8:	bl	15880 <dcgettext@plt>
   1b4cc:	mov	r2, r6
   1b4d0:	mov	r1, r4
   1b4d4:	mov	r3, r0
   1b4d8:	mov	r0, r5
   1b4dc:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1b4e0:	mov	r7, r0
   1b4e4:	mov	r0, r4
   1b4e8:	bl	15874 <g_free@plt>
   1b4ec:	mov	r0, r6
   1b4f0:	bl	15874 <g_free@plt>
   1b4f4:	cmp	r7, #0
   1b4f8:	beq	1b5f8 <g_strcmp0@plt+0x5778>
   1b4fc:	ldr	r3, [r5, #12]
   1b500:	mov	r2, #5
   1b504:	ldr	r1, [pc, #324]	; 1b650 <g_strcmp0@plt+0x57d0>
   1b508:	mov	r0, #0
   1b50c:	ldr	r4, [r3, #36]	; 0x24
   1b510:	bl	15880 <dcgettext@plt>
   1b514:	mov	r1, r0
   1b518:	mov	r0, r4
   1b51c:	bl	210e0 <g_strcmp0@plt+0xb260>
   1b520:	ldr	r3, [r5, #12]
   1b524:	mov	r1, #1
   1b528:	ldr	r0, [r3, #36]	; 0x24
   1b52c:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1b530:	ldr	r3, [r5, #12]
   1b534:	ldr	r4, [r3, #8]
   1b538:	bl	15298 <pk_client_get_type@plt>
   1b53c:	mov	r1, r0
   1b540:	mov	r0, r4
   1b544:	bl	15148 <g_type_check_instance_cast@plt>
   1b548:	mvn	r2, #0
   1b54c:	mov	r1, #16
   1b550:	mov	r4, r0
   1b554:	mov	r0, #18
   1b558:	bl	15718 <pk_bitfield_from_enums@plt>
   1b55c:	ldr	ip, [pc, #240]	; 1b654 <g_strcmp0@plt+0x57d4>
   1b560:	ldr	r2, [pc, #240]	; 1b658 <g_strcmp0@plt+0x57d8>
   1b564:	mov	r3, #0
   1b568:	str	r2, [sp, #8]
   1b56c:	str	r3, [sp, #4]
   1b570:	str	r5, [sp, #20]
   1b574:	str	r5, [sp, #12]
   1b578:	str	r9, [sp]
   1b57c:	str	ip, [sp, #16]
   1b580:	mov	r2, r0
   1b584:	mov	r3, r1
   1b588:	mov	r0, r4
   1b58c:	bl	15634 <pk_client_search_files_async@plt>
   1b590:	add	sp, sp, #24
   1b594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b598:	ldr	r2, [pc, #188]	; 1b65c <g_strcmp0@plt+0x57dc>
   1b59c:	ldr	r1, [pc, #188]	; 1b660 <g_strcmp0@plt+0x57e0>
   1b5a0:	ldr	r0, [pc, #188]	; 1b664 <g_strcmp0@plt+0x57e4>
   1b5a4:	add	sp, sp, #24
   1b5a8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b5ac:	b	14fd4 <g_return_if_fail_warning@plt>
   1b5b0:	ldr	r2, [pc, #176]	; 1b668 <g_strcmp0@plt+0x57e8>
   1b5b4:	mov	r1, #128	; 0x80
   1b5b8:	ldr	r0, [pc, #164]	; 1b664 <g_strcmp0@plt+0x57e4>
   1b5bc:	bl	151f0 <g_log@plt>
   1b5c0:	b	1b4fc <g_strcmp0@plt+0x567c>
   1b5c4:	ldr	r2, [pc, #160]	; 1b66c <g_strcmp0@plt+0x57ec>
   1b5c8:	b	1b59c <g_strcmp0@plt+0x571c>
   1b5cc:	ldr	r2, [r9]
   1b5d0:	ldr	r1, [pc, #152]	; 1b670 <g_strcmp0@plt+0x57f0>
   1b5d4:	mov	r0, r6
   1b5d8:	bl	15da8 <g_string_append_printf@plt>
   1b5dc:	b	1b424 <g_strcmp0@plt+0x55a4>
   1b5e0:	ldr	r2, [pc, #140]	; 1b674 <g_strcmp0@plt+0x57f4>
   1b5e4:	ldr	r1, [pc, #140]	; 1b678 <g_strcmp0@plt+0x57f8>
   1b5e8:	bl	154a8 <dcngettext@plt>
   1b5ec:	bl	153a0 <g_strdup@plt>
   1b5f0:	mov	r4, r0
   1b5f4:	b	1b4bc <g_strcmp0@plt+0x563c>
   1b5f8:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1b5fc:	ldr	r2, [pc, #120]	; 1b67c <g_strcmp0@plt+0x57fc>
   1b600:	mov	r1, #17
   1b604:	bl	15568 <g_error_new@plt>
   1b608:	mov	r4, r0
   1b60c:	mov	r1, r0
   1b610:	mov	r0, r5
   1b614:	bl	17748 <g_strcmp0@plt+0x18c8>
   1b618:	mov	r0, r4
   1b61c:	add	sp, sp, #24
   1b620:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b624:	b	15064 <g_error_free@plt>
   1b628:	muleq	r2, r4, r6
   1b62c:	andeq	sl, r2, ip, lsr #5
   1b630:	andeq	sl, r2, ip, lsr #9
   1b634:	ldrdeq	sl, [r2], -r0
   1b638:	strdeq	sl, [r2], -r0
   1b63c:	andeq	sl, r2, ip, lsl r5
   1b640:	andeq	sl, r2, r8, asr #10
   1b644:	andeq	sl, r2, r4, asr r5
   1b648:	andeq	sl, r2, r0, ror r5
   1b64c:	andeq	r9, r2, r8, ror #24
   1b650:	ldrdeq	sl, [r2], -r4
   1b654:	andeq	r7, r1, r8, lsl #24
   1b658:	andeq	sl, r1, r0, ror #5
   1b65c:	andeq	sl, r2, r8, lsl #2
   1b660:	andeq	r9, r2, r8, lsr r5
   1b664:	andeq	r8, r2, ip, lsl #29
   1b668:	andeq	r9, r2, r8, lsl #23
   1b66c:	muleq	r2, r8, r4
   1b670:			; <UNDEFINED> instruction: 0x0002a2b0
   1b674:	andeq	sl, r2, ip, lsl #11
   1b678:			; <UNDEFINED> instruction: 0x0002a5b0
   1b67c:	andeq	sl, r2, r8, ror #8
   1b680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b684:	sub	sp, sp, #52	; 0x34
   1b688:	mov	r4, r0
   1b68c:	str	r1, [sp, #28]
   1b690:	mov	r6, r2
   1b694:	mov	r5, r3
   1b698:	bl	19f8c <g_strcmp0@plt+0x410c>
   1b69c:	cmp	r4, #0
   1b6a0:	beq	1b964 <g_strcmp0@plt+0x5ae4>
   1b6a4:	ldr	r3, [r4]
   1b6a8:	cmp	r3, #0
   1b6ac:	beq	1b6bc <g_strcmp0@plt+0x583c>
   1b6b0:	ldr	r3, [r3]
   1b6b4:	cmp	r3, r0
   1b6b8:	beq	1b6d0 <g_strcmp0@plt+0x5850>
   1b6bc:	mov	r1, r0
   1b6c0:	mov	r0, r4
   1b6c4:	bl	159dc <g_type_check_instance_is_a@plt>
   1b6c8:	cmp	r0, #0
   1b6cc:	beq	1b964 <g_strcmp0@plt+0x5ae4>
   1b6d0:	ldr	r3, [sp, #28]
   1b6d4:	cmp	r3, #0
   1b6d8:	beq	1bb78 <g_strcmp0@plt+0x5cf8>
   1b6dc:	ldr	r3, [r4, #12]
   1b6e0:	ldr	r1, [pc, #1548]	; 1bcf4 <g_strcmp0@plt+0x5e74>
   1b6e4:	str	r5, [r3, #120]	; 0x78
   1b6e8:	str	r6, [r3, #116]	; 0x74
   1b6ec:	ldr	r0, [r3, #4]
   1b6f0:	bl	14f2c <g_settings_get_boolean@plt>
   1b6f4:	subs	r5, r0, #0
   1b6f8:	beq	1bba0 <g_strcmp0@plt+0x5d20>
   1b6fc:	ldr	r3, [r4, #12]
   1b700:	ldr	r3, [r3, #44]	; 0x2c
   1b704:	cmp	r3, #0
   1b708:	beq	1b97c <g_strcmp0@plt+0x5afc>
   1b70c:	ldr	r5, [sp, #28]
   1b710:	mov	r0, r5
   1b714:	bl	157a8 <g_strv_length@plt>
   1b718:	subs	r2, r0, #0
   1b71c:	str	r2, [sp, #32]
   1b720:	beq	1bc38 <g_strcmp0@plt+0x5db8>
   1b724:	sub	r3, r5, #4
   1b728:	lsl	r2, r2, #2
   1b72c:	mov	r8, r3
   1b730:	str	r3, [sp, #44]	; 0x2c
   1b734:	mov	r7, #0
   1b738:	add	r3, r3, r2
   1b73c:	ldr	fp, [pc, #1460]	; 1bcf8 <g_strcmp0@plt+0x5e78>
   1b740:	ldr	sl, [pc, #1460]	; 1bcfc <g_strcmp0@plt+0x5e7c>
   1b744:	ldr	r9, [pc, #1460]	; 1bd00 <g_strcmp0@plt+0x5e80>
   1b748:	str	r4, [sp, #36]	; 0x24
   1b74c:	mov	r6, r7
   1b750:	mov	r4, r8
   1b754:	mov	r8, r3
   1b758:	str	r2, [sp, #40]	; 0x28
   1b75c:	mov	r2, #2
   1b760:	mov	r1, fp
   1b764:	ldr	r0, [r4, #4]!
   1b768:	bl	1555c <g_strsplit@plt>
   1b76c:	mov	r2, sl
   1b770:	mvn	r1, #0
   1b774:	mov	r5, r0
   1b778:	ldr	r0, [r0, #4]
   1b77c:	bl	15778 <g_strstr_len@plt>
   1b780:	mov	r2, r9
   1b784:	mvn	r1, #0
   1b788:	cmp	r0, #0
   1b78c:	ldr	r0, [r5, #4]
   1b790:	movne	r6, #1
   1b794:	bl	15778 <g_strstr_len@plt>
   1b798:	cmp	r0, #0
   1b79c:	mov	r0, r5
   1b7a0:	movne	r7, #1
   1b7a4:	bl	15790 <g_strfreev@plt>
   1b7a8:	cmp	r4, r8
   1b7ac:	bne	1b75c <g_strcmp0@plt+0x58dc>
   1b7b0:	ldr	r9, [sp, #32]
   1b7b4:	mov	r3, #5
   1b7b8:	ldr	r2, [pc, #1348]	; 1bd04 <g_strcmp0@plt+0x5e84>
   1b7bc:	ldr	r1, [pc, #1348]	; 1bd08 <g_strcmp0@plt+0x5e88>
   1b7c0:	str	r3, [sp]
   1b7c4:	mov	r0, #0
   1b7c8:	mov	r3, r9
   1b7cc:	ldr	r4, [sp, #36]	; 0x24
   1b7d0:	bl	154a8 <dcngettext@plt>
   1b7d4:	mov	r5, r0
   1b7d8:	ldr	r0, [pc, #1324]	; 1bd0c <g_strcmp0@plt+0x5e8c>
   1b7dc:	bl	15100 <g_string_new@plt>
   1b7e0:	mov	r2, r5
   1b7e4:	ldr	r1, [pc, #1316]	; 1bd10 <g_strcmp0@plt+0x5e90>
   1b7e8:	mov	r8, r0
   1b7ec:	bl	15da8 <g_string_append_printf@plt>
   1b7f0:	eor	r3, r7, #1
   1b7f4:	and	r3, r3, r6
   1b7f8:	and	r3, r3, #1
   1b7fc:	cmp	r9, #1
   1b800:	str	r3, [sp, #36]	; 0x24
   1b804:	beq	1bc04 <g_strcmp0@plt+0x5d84>
   1b808:	ldr	r5, [sp, #44]	; 0x2c
   1b80c:	ldr	r3, [sp, #40]	; 0x28
   1b810:	ldr	sl, [pc, #1248]	; 1bcf8 <g_strcmp0@plt+0x5e78>
   1b814:	add	fp, r5, r3
   1b818:	mov	r2, #2
   1b81c:	mov	r1, sl
   1b820:	ldr	r0, [r5, #4]!
   1b824:	bl	1555c <g_strsplit@plt>
   1b828:	ldr	r1, [pc, #1252]	; 1bd14 <g_strcmp0@plt+0x5e94>
   1b82c:	ldr	r2, [r0]
   1b830:	mov	r9, r0
   1b834:	mov	r0, r8
   1b838:	bl	15da8 <g_string_append_printf@plt>
   1b83c:	mov	r0, r9
   1b840:	bl	15790 <g_strfreev@plt>
   1b844:	cmp	fp, r5
   1b848:	bne	1b818 <g_strcmp0@plt+0x5998>
   1b84c:	mov	r5, #5
   1b850:	ldr	r3, [sp, #32]
   1b854:	ldr	r2, [pc, #1212]	; 1bd18 <g_strcmp0@plt+0x5e98>
   1b858:	ldr	r1, [pc, #1212]	; 1bd1c <g_strcmp0@plt+0x5e9c>
   1b85c:	str	r5, [sp]
   1b860:	mov	r0, #0
   1b864:	bl	154a8 <dcngettext@plt>
   1b868:	ldr	r1, [pc, #1200]	; 1bd20 <g_strcmp0@plt+0x5ea0>
   1b86c:	mov	r2, r0
   1b870:	mov	r0, r8
   1b874:	bl	15da8 <g_string_append_printf@plt>
   1b878:	ldr	r1, [r8, #4]
   1b87c:	mov	r0, r8
   1b880:	sub	r1, r1, #1
   1b884:	bl	14ee4 <g_string_set_size@plt>
   1b888:	mov	r0, r8
   1b88c:	mov	r1, #0
   1b890:	bl	15b08 <g_string_free@plt>
   1b894:	ldr	r3, [r4, #12]
   1b898:	mov	r8, r0
   1b89c:	ldr	r0, [r3, #72]	; 0x48
   1b8a0:	ldr	r3, [sp, #36]	; 0x24
   1b8a4:	cmp	r0, #0
   1b8a8:	beq	1bbb8 <g_strcmp0@plt+0x5d38>
   1b8ac:	cmp	r3, #0
   1b8b0:	bne	1bb80 <g_strcmp0@plt+0x5d00>
   1b8b4:	eor	r6, r6, #1
   1b8b8:	mov	r2, #5
   1b8bc:	ands	r0, r6, r7
   1b8c0:	ldr	r3, [sp, #32]
   1b8c4:	str	r2, [sp]
   1b8c8:	beq	1bbf8 <g_strcmp0@plt+0x5d78>
   1b8cc:	ldr	r2, [pc, #1104]	; 1bd24 <g_strcmp0@plt+0x5ea4>
   1b8d0:	ldr	r1, [pc, #1104]	; 1bd28 <g_strcmp0@plt+0x5ea8>
   1b8d4:	mov	r0, #0
   1b8d8:	bl	154a8 <dcngettext@plt>
   1b8dc:	ldr	r3, [r4, #12]
   1b8e0:	ldr	r1, [r3, #72]	; 0x48
   1b8e4:	bl	15490 <g_strdup_printf@plt>
   1b8e8:	mov	r6, r0
   1b8ec:	mov	r2, #5
   1b8f0:	ldr	r1, [pc, #1076]	; 1bd2c <g_strcmp0@plt+0x5eac>
   1b8f4:	mov	r0, #0
   1b8f8:	bl	15880 <dcgettext@plt>
   1b8fc:	mov	r2, r8
   1b900:	mov	r1, r6
   1b904:	mov	r3, r0
   1b908:	mov	r0, r4
   1b90c:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1b910:	mov	r5, r0
   1b914:	mov	r0, r6
   1b918:	bl	15874 <g_free@plt>
   1b91c:	mov	r0, r8
   1b920:	bl	15874 <g_free@plt>
   1b924:	cmp	r5, #0
   1b928:	bne	1b98c <g_strcmp0@plt+0x5b0c>
   1b92c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1b930:	ldr	r2, [pc, #1016]	; 1bd30 <g_strcmp0@plt+0x5eb0>
   1b934:	mov	r1, #17
   1b938:	bl	15568 <g_error_new@plt>
   1b93c:	mov	r6, r0
   1b940:	mov	r1, r0
   1b944:	mov	r0, r4
   1b948:	bl	17748 <g_strcmp0@plt+0x18c8>
   1b94c:	mov	r0, r6
   1b950:	bl	15064 <g_error_free@plt>
   1b954:	mov	r9, r5
   1b958:	mov	sl, r5
   1b95c:	mov	r6, r5
   1b960:	b	1bb50 <g_strcmp0@plt+0x5cd0>
   1b964:	ldr	r2, [pc, #968]	; 1bd34 <g_strcmp0@plt+0x5eb4>
   1b968:	ldr	r1, [pc, #968]	; 1bd38 <g_strcmp0@plt+0x5eb8>
   1b96c:	ldr	r0, [pc, #968]	; 1bd3c <g_strcmp0@plt+0x5ebc>
   1b970:	add	sp, sp, #52	; 0x34
   1b974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b978:	b	14fd4 <g_return_if_fail_warning@plt>
   1b97c:	ldr	r2, [pc, #956]	; 1bd40 <g_strcmp0@plt+0x5ec0>
   1b980:	mov	r1, #128	; 0x80
   1b984:	ldr	r0, [pc, #944]	; 1bd3c <g_strcmp0@plt+0x5ebc>
   1b988:	bl	151f0 <g_log@plt>
   1b98c:	ldr	r3, [r4, #12]
   1b990:	mvn	r2, #0
   1b994:	mov	r1, #6
   1b998:	mov	r0, #3
   1b99c:	ldr	r5, [r3, #36]	; 0x24
   1b9a0:	bl	15718 <pk_bitfield_from_enums@plt>
   1b9a4:	mov	r2, r0
   1b9a8:	mov	r3, r1
   1b9ac:	mov	r0, r5
   1b9b0:	mov	r1, #1
   1b9b4:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1b9b8:	ldr	r3, [r4, #12]
   1b9bc:	mov	r2, #5
   1b9c0:	ldr	r1, [pc, #892]	; 1bd44 <g_strcmp0@plt+0x5ec4>
   1b9c4:	mov	r0, #0
   1b9c8:	ldr	r5, [r3, #36]	; 0x24
   1b9cc:	bl	15880 <dcgettext@plt>
   1b9d0:	mov	r1, r0
   1b9d4:	mov	r0, r5
   1b9d8:	bl	210e0 <g_strcmp0@plt+0xb260>
   1b9dc:	ldr	r3, [r4, #12]
   1b9e0:	mov	r1, #1
   1b9e4:	ldr	r0, [r3, #36]	; 0x24
   1b9e8:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1b9ec:	ldr	r3, [r4, #12]
   1b9f0:	ldr	r2, [r3, #56]	; 0x38
   1b9f4:	cmp	r2, #0
   1b9f8:	bne	1bb94 <g_strcmp0@plt+0x5d14>
   1b9fc:	ldr	r0, [pc, #836]	; 1bd48 <g_strcmp0@plt+0x5ec8>
   1ba00:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1ba04:	mov	r8, r0
   1ba08:	ldr	r0, [pc, #824]	; 1bd48 <g_strcmp0@plt+0x5ec8>
   1ba0c:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1ba10:	ldr	r3, [sp, #28]
   1ba14:	mov	r7, r0
   1ba18:	ldr	r0, [r3]
   1ba1c:	cmp	r0, #0
   1ba20:	beq	1ba78 <g_strcmp0@plt+0x5bf8>
   1ba24:	ldr	r9, [pc, #716]	; 1bcf8 <g_strcmp0@plt+0x5e78>
   1ba28:	ldr	r6, [sp, #28]
   1ba2c:	mov	r2, #2
   1ba30:	mov	r1, r9
   1ba34:	bl	1555c <g_strsplit@plt>
   1ba38:	mov	r5, r0
   1ba3c:	ldr	r0, [r0]
   1ba40:	bl	153a0 <g_strdup@plt>
   1ba44:	mov	r1, r0
   1ba48:	mov	r0, r8
   1ba4c:	bl	15cc4 <g_ptr_array_add@plt>
   1ba50:	ldr	r0, [r5, #4]
   1ba54:	bl	153a0 <g_strdup@plt>
   1ba58:	mov	r1, r0
   1ba5c:	mov	r0, r7
   1ba60:	bl	15cc4 <g_ptr_array_add@plt>
   1ba64:	mov	r0, r5
   1ba68:	bl	15790 <g_strfreev@plt>
   1ba6c:	ldr	r0, [r6, #4]!
   1ba70:	cmp	r0, #0
   1ba74:	bne	1ba2c <g_strcmp0@plt+0x5bac>
   1ba78:	mov	r0, r8
   1ba7c:	bl	1558c <pk_ptr_array_to_strv@plt>
   1ba80:	mov	r1, r0
   1ba84:	mov	r9, r0
   1ba88:	ldr	r0, [pc, #700]	; 1bd4c <g_strcmp0@plt+0x5ecc>
   1ba8c:	bl	15d84 <g_strjoinv@plt>
   1ba90:	mov	r2, #5
   1ba94:	ldr	r1, [pc, #692]	; 1bd50 <g_strcmp0@plt+0x5ed0>
   1ba98:	mov	r5, r0
   1ba9c:	mov	r0, #0
   1baa0:	bl	15880 <dcgettext@plt>
   1baa4:	mov	r1, r5
   1baa8:	bl	15490 <g_strdup_printf@plt>
   1baac:	ldr	r3, [r4, #12]
   1bab0:	mov	r1, r0
   1bab4:	mov	r6, r0
   1bab8:	ldr	r0, [r3, #36]	; 0x24
   1babc:	bl	213e8 <g_strcmp0@plt+0xb568>
   1bac0:	mov	r0, r7
   1bac4:	bl	1558c <pk_ptr_array_to_strv@plt>
   1bac8:	ldr	r3, [r4, #12]
   1bacc:	ldr	fp, [r3, #8]
   1bad0:	mov	sl, r0
   1bad4:	bl	15298 <pk_client_get_type@plt>
   1bad8:	mov	r1, r0
   1badc:	mov	r0, fp
   1bae0:	bl	15148 <g_type_check_instance_cast@plt>
   1bae4:	mvn	r3, #0
   1bae8:	mov	r2, #16
   1baec:	mov	r1, #18
   1baf0:	mov	fp, r0
   1baf4:	mov	r0, #3
   1baf8:	bl	15718 <pk_bitfield_from_enums@plt>
   1bafc:	ldr	ip, [pc, #592]	; 1bd54 <g_strcmp0@plt+0x5ed4>
   1bb00:	ldr	r2, [pc, #592]	; 1bd58 <g_strcmp0@plt+0x5ed8>
   1bb04:	mov	r3, #0
   1bb08:	str	r2, [sp, #8]
   1bb0c:	str	r3, [sp, #4]
   1bb10:	str	sl, [sp]
   1bb14:	str	r4, [sp, #20]
   1bb18:	str	r4, [sp, #12]
   1bb1c:	str	ip, [sp, #16]
   1bb20:	mov	r2, r0
   1bb24:	mov	r3, r1
   1bb28:	mov	r0, fp
   1bb2c:	bl	150ac <pk_client_what_provides_async@plt>
   1bb30:	cmp	r8, #0
   1bb34:	beq	1bb40 <g_strcmp0@plt+0x5cc0>
   1bb38:	mov	r0, r8
   1bb3c:	bl	15c7c <g_ptr_array_unref@plt>
   1bb40:	cmp	r7, #0
   1bb44:	beq	1bb50 <g_strcmp0@plt+0x5cd0>
   1bb48:	mov	r0, r7
   1bb4c:	bl	15c7c <g_ptr_array_unref@plt>
   1bb50:	mov	r0, sl
   1bb54:	bl	15790 <g_strfreev@plt>
   1bb58:	mov	r0, r9
   1bb5c:	bl	15790 <g_strfreev@plt>
   1bb60:	mov	r0, r6
   1bb64:	bl	15874 <g_free@plt>
   1bb68:	mov	r0, r5
   1bb6c:	add	sp, sp, #52	; 0x34
   1bb70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb74:	b	15874 <g_free@plt>
   1bb78:	ldr	r2, [pc, #476]	; 1bd5c <g_strcmp0@plt+0x5edc>
   1bb7c:	b	1b968 <g_strcmp0@plt+0x5ae8>
   1bb80:	str	r5, [sp]
   1bb84:	ldr	r3, [sp, #32]
   1bb88:	ldr	r2, [pc, #464]	; 1bd60 <g_strcmp0@plt+0x5ee0>
   1bb8c:	ldr	r1, [pc, #464]	; 1bd64 <g_strcmp0@plt+0x5ee4>
   1bb90:	b	1b8d4 <g_strcmp0@plt+0x5a54>
   1bb94:	ldr	r0, [r3, #36]	; 0x24
   1bb98:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1bb9c:	b	1b9fc <g_strcmp0@plt+0x5b7c>
   1bba0:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1bba4:	ldr	r3, [pc, #328]	; 1bcf4 <g_strcmp0@plt+0x5e74>
   1bba8:	ldr	r2, [pc, #440]	; 1bd68 <g_strcmp0@plt+0x5ee8>
   1bbac:	mov	r1, #48	; 0x30
   1bbb0:	bl	15568 <g_error_new@plt>
   1bbb4:	b	1b93c <g_strcmp0@plt+0x5abc>
   1bbb8:	cmp	r3, #0
   1bbbc:	bne	1bcd4 <g_strcmp0@plt+0x5e54>
   1bbc0:	eor	r6, r6, #1
   1bbc4:	ands	r0, r6, r7
   1bbc8:	mov	r2, #5
   1bbcc:	str	r2, [sp]
   1bbd0:	ldr	r3, [sp, #32]
   1bbd4:	ldrne	r2, [pc, #400]	; 1bd6c <g_strcmp0@plt+0x5eec>
   1bbd8:	ldrne	r1, [pc, #400]	; 1bd70 <g_strcmp0@plt+0x5ef0>
   1bbdc:	movne	r0, #0
   1bbe0:	ldreq	r2, [pc, #396]	; 1bd74 <g_strcmp0@plt+0x5ef4>
   1bbe4:	ldreq	r1, [pc, #396]	; 1bd78 <g_strcmp0@plt+0x5ef8>
   1bbe8:	bl	154a8 <dcngettext@plt>
   1bbec:	bl	153a0 <g_strdup@plt>
   1bbf0:	mov	r6, r0
   1bbf4:	b	1b8ec <g_strcmp0@plt+0x5a6c>
   1bbf8:	ldr	r2, [pc, #380]	; 1bd7c <g_strcmp0@plt+0x5efc>
   1bbfc:	ldr	r1, [pc, #380]	; 1bd80 <g_strcmp0@plt+0x5f00>
   1bc00:	b	1b8d8 <g_strcmp0@plt+0x5a58>
   1bc04:	ldr	r3, [sp, #28]
   1bc08:	mov	r2, #2
   1bc0c:	ldr	r1, [pc, #228]	; 1bcf8 <g_strcmp0@plt+0x5e78>
   1bc10:	ldr	r0, [r3]
   1bc14:	bl	1555c <g_strsplit@plt>
   1bc18:	ldr	r1, [pc, #356]	; 1bd84 <g_strcmp0@plt+0x5f04>
   1bc1c:	mov	r5, r0
   1bc20:	ldr	r2, [r0]
   1bc24:	mov	r0, r8
   1bc28:	bl	15da8 <g_string_append_printf@plt>
   1bc2c:	mov	r0, r5
   1bc30:	bl	15790 <g_strfreev@plt>
   1bc34:	b	1b84c <g_strcmp0@plt+0x59cc>
   1bc38:	ldr	r8, [sp, #32]
   1bc3c:	mov	r6, #5
   1bc40:	mov	r3, r8
   1bc44:	ldr	r2, [pc, #184]	; 1bd04 <g_strcmp0@plt+0x5e84>
   1bc48:	ldr	r1, [pc, #184]	; 1bd08 <g_strcmp0@plt+0x5e88>
   1bc4c:	str	r6, [sp]
   1bc50:	bl	154a8 <dcngettext@plt>
   1bc54:	mov	r7, r0
   1bc58:	ldr	r0, [pc, #172]	; 1bd0c <g_strcmp0@plt+0x5e8c>
   1bc5c:	bl	15100 <g_string_new@plt>
   1bc60:	mov	r2, r7
   1bc64:	ldr	r1, [pc, #164]	; 1bd10 <g_strcmp0@plt+0x5e90>
   1bc68:	mov	r5, r0
   1bc6c:	bl	15da8 <g_string_append_printf@plt>
   1bc70:	mov	r3, r8
   1bc74:	str	r6, [sp]
   1bc78:	ldr	r2, [pc, #152]	; 1bd18 <g_strcmp0@plt+0x5e98>
   1bc7c:	ldr	r1, [pc, #152]	; 1bd1c <g_strcmp0@plt+0x5e9c>
   1bc80:	mov	r0, r8
   1bc84:	bl	154a8 <dcngettext@plt>
   1bc88:	ldr	r1, [pc, #144]	; 1bd20 <g_strcmp0@plt+0x5ea0>
   1bc8c:	mov	r2, r0
   1bc90:	mov	r0, r5
   1bc94:	bl	15da8 <g_string_append_printf@plt>
   1bc98:	ldr	r1, [r5, #4]
   1bc9c:	mov	r0, r5
   1bca0:	sub	r1, r1, #1
   1bca4:	bl	14ee4 <g_string_set_size@plt>
   1bca8:	mov	r1, r8
   1bcac:	mov	r0, r5
   1bcb0:	bl	15b08 <g_string_free@plt>
   1bcb4:	ldr	r3, [r4, #12]
   1bcb8:	ldr	r6, [sp, #32]
   1bcbc:	ldr	r3, [r3, #72]	; 0x48
   1bcc0:	mov	r7, r6
   1bcc4:	cmp	r3, #0
   1bcc8:	mov	r8, r0
   1bccc:	bne	1b8b4 <g_strcmp0@plt+0x5a34>
   1bcd0:	b	1bbc0 <g_strcmp0@plt+0x5d40>
   1bcd4:	ldr	r3, [sp, #32]
   1bcd8:	ldr	r2, [pc, #168]	; 1bd88 <g_strcmp0@plt+0x5f08>
   1bcdc:	ldr	r1, [pc, #168]	; 1bd8c <g_strcmp0@plt+0x5f0c>
   1bce0:	str	r5, [sp]
   1bce4:	bl	154a8 <dcngettext@plt>
   1bce8:	bl	153a0 <g_strdup@plt>
   1bcec:	mov	r6, r0
   1bcf0:	b	1b8ec <g_strcmp0@plt+0x5a6c>
   1bcf4:	strdeq	sl, [r2], -ip
   1bcf8:	andeq	sl, r2, r4, lsr #4
   1bcfc:	andeq	sl, r2, r0, lsr r6
   1bd00:	andeq	sl, r2, ip, lsr r6
   1bd04:	andeq	sl, r2, r8, asr #12
   1bd08:	andeq	sl, r2, ip, ror #12
   1bd0c:	muleq	r2, r4, r6
   1bd10:	muleq	r2, r0, r6
   1bd14:	andeq	sl, r2, ip, lsr #5
   1bd18:	muleq	r2, r8, r6
   1bd1c:	andeq	sl, r2, r0, asr #13
   1bd20:	andeq	sl, r2, r4, ror #13
   1bd24:	andeq	sl, r2, r8, asr r7
   1bd28:	andeq	sl, r2, ip, lsl #15
   1bd2c:	muleq	r2, r4, r9
   1bd30:	andeq	sl, r2, r8, ror #8
   1bd34:	andeq	sl, r2, r8, lsl #2
   1bd38:	andeq	r9, r2, ip, asr r5
   1bd3c:	andeq	r8, r2, ip, lsl #29
   1bd40:	andeq	r9, r2, r8, lsl #23
   1bd44:	muleq	r2, ip, r9
   1bd48:	andeq	r5, r1, r4, ror r8
   1bd4c:			; <UNDEFINED> instruction: 0x0002a9b4
   1bd50:			; <UNDEFINED> instruction: 0x0002a9b8
   1bd54:	andeq	r8, r1, r0, lsr #10
   1bd58:	andeq	sl, r1, r0, ror #5
   1bd5c:	andeq	sl, r2, r8, ror #11
   1bd60:	andeq	sl, r2, ip, ror #13
   1bd64:	andeq	sl, r2, r0, lsr #14
   1bd68:	andeq	sl, r2, r0, lsl r6
   1bd6c:	andeq	sl, r2, r4, lsr #17
   1bd70:	andeq	sl, r2, r0, ror #17
   1bd74:	andeq	sl, r2, ip, lsl r9
   1bd78:	andeq	sl, r2, r8, asr r9
   1bd7c:	andeq	sl, r2, r4, asr #15
   1bd80:	strdeq	sl, [r2], -r8
   1bd84:			; <UNDEFINED> instruction: 0x0002a2b0
   1bd88:	andeq	sl, r2, ip, lsr #16
   1bd8c:	andeq	sl, r2, r8, ror #16
   1bd90:	push	{r4, r5, r6, r7, r8, lr}
   1bd94:	mov	r4, r0
   1bd98:	sub	sp, sp, #24
   1bd9c:	mov	r6, r1
   1bda0:	mov	r7, r2
   1bda4:	mov	r5, r3
   1bda8:	bl	19f8c <g_strcmp0@plt+0x410c>
   1bdac:	cmp	r4, #0
   1bdb0:	beq	1bf94 <g_strcmp0@plt+0x6114>
   1bdb4:	ldr	r3, [r4]
   1bdb8:	cmp	r3, #0
   1bdbc:	beq	1bdcc <g_strcmp0@plt+0x5f4c>
   1bdc0:	ldr	r3, [r3]
   1bdc4:	cmp	r3, r0
   1bdc8:	beq	1bde0 <g_strcmp0@plt+0x5f60>
   1bdcc:	mov	r1, r0
   1bdd0:	mov	r0, r4
   1bdd4:	bl	159dc <g_type_check_instance_is_a@plt>
   1bdd8:	cmp	r0, #0
   1bddc:	beq	1bf94 <g_strcmp0@plt+0x6114>
   1bde0:	cmp	r6, #0
   1bde4:	beq	1bfc4 <g_strcmp0@plt+0x6144>
   1bde8:	ldr	r3, [r4, #12]
   1bdec:	ldr	r1, [pc, #608]	; 1c054 <g_strcmp0@plt+0x61d4>
   1bdf0:	str	r5, [r3, #120]	; 0x78
   1bdf4:	str	r7, [r3, #116]	; 0x74
   1bdf8:	ldr	r0, [r3, #4]
   1bdfc:	bl	14f2c <g_settings_get_boolean@plt>
   1be00:	subs	r5, r0, #0
   1be04:	beq	1bfdc <g_strcmp0@plt+0x615c>
   1be08:	ldr	r3, [r4, #12]
   1be0c:	ldr	r5, [r3, #44]	; 0x2c
   1be10:	cmp	r5, #0
   1be14:	beq	1bfac <g_strcmp0@plt+0x612c>
   1be18:	mov	r2, #5
   1be1c:	ldr	r1, [pc, #564]	; 1c058 <g_strcmp0@plt+0x61d8>
   1be20:	mov	r0, #0
   1be24:	bl	15880 <dcgettext@plt>
   1be28:	mov	r2, #5
   1be2c:	ldr	r1, [pc, #552]	; 1c05c <g_strcmp0@plt+0x61dc>
   1be30:	ldr	r7, [r6]
   1be34:	mov	r5, r0
   1be38:	mov	r0, #0
   1be3c:	bl	15880 <dcgettext@plt>
   1be40:	mov	r2, r7
   1be44:	mov	r1, r5
   1be48:	mov	r3, r0
   1be4c:	ldr	r0, [pc, #524]	; 1c060 <g_strcmp0@plt+0x61e0>
   1be50:	bl	15490 <g_strdup_printf@plt>
   1be54:	ldr	r3, [r4, #12]
   1be58:	mov	r7, r0
   1be5c:	ldr	r0, [r3, #72]	; 0x48
   1be60:	mov	r3, #5
   1be64:	cmp	r0, #0
   1be68:	str	r3, [sp]
   1be6c:	mov	r3, #1
   1be70:	beq	1c010 <g_strcmp0@plt+0x6190>
   1be74:	ldr	r2, [pc, #488]	; 1c064 <g_strcmp0@plt+0x61e4>
   1be78:	ldr	r1, [pc, #488]	; 1c068 <g_strcmp0@plt+0x61e8>
   1be7c:	mov	r0, #0
   1be80:	bl	154a8 <dcngettext@plt>
   1be84:	ldr	r3, [r4, #12]
   1be88:	ldr	r1, [r3, #72]	; 0x48
   1be8c:	bl	15490 <g_strdup_printf@plt>
   1be90:	mov	r5, r0
   1be94:	mov	r2, #5
   1be98:	ldr	r1, [pc, #460]	; 1c06c <g_strcmp0@plt+0x61ec>
   1be9c:	mov	r0, #0
   1bea0:	bl	15880 <dcgettext@plt>
   1bea4:	mov	r2, r7
   1bea8:	mov	r1, r5
   1beac:	mov	r3, r0
   1beb0:	mov	r0, r4
   1beb4:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1beb8:	cmp	r0, #0
   1bebc:	beq	1c028 <g_strcmp0@plt+0x61a8>
   1bec0:	ldr	r0, [r4, #12]
   1bec4:	mov	r2, #0
   1bec8:	mov	r3, #0
   1becc:	mov	r1, #1
   1bed0:	ldr	r0, [r0, #36]	; 0x24
   1bed4:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1bed8:	ldr	r3, [r4, #12]
   1bedc:	mov	r2, #5
   1bee0:	ldr	r1, [pc, #392]	; 1c070 <g_strcmp0@plt+0x61f0>
   1bee4:	mov	r0, #0
   1bee8:	ldr	r8, [r3, #36]	; 0x24
   1beec:	bl	15880 <dcgettext@plt>
   1bef0:	mov	r1, r0
   1bef4:	mov	r0, r8
   1bef8:	bl	210e0 <g_strcmp0@plt+0xb260>
   1befc:	ldr	r3, [r4, #12]
   1bf00:	mov	r1, #1
   1bf04:	ldr	r0, [r3, #36]	; 0x24
   1bf08:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1bf0c:	ldr	r3, [r4, #12]
   1bf10:	ldr	r2, [r3, #56]	; 0x38
   1bf14:	cmp	r2, #0
   1bf18:	bne	1bfcc <g_strcmp0@plt+0x614c>
   1bf1c:	ldr	r8, [r3, #8]
   1bf20:	bl	15298 <pk_client_get_type@plt>
   1bf24:	mov	r1, r0
   1bf28:	mov	r0, r8
   1bf2c:	bl	15148 <g_type_check_instance_cast@plt>
   1bf30:	mvn	r3, #0
   1bf34:	mov	r2, #16
   1bf38:	mov	r1, #18
   1bf3c:	mov	r8, r0
   1bf40:	mov	r0, #3
   1bf44:	bl	15718 <pk_bitfield_from_enums@plt>
   1bf48:	ldr	r2, [pc, #292]	; 1c074 <g_strcmp0@plt+0x61f4>
   1bf4c:	ldr	ip, [pc, #292]	; 1c078 <g_strcmp0@plt+0x61f8>
   1bf50:	mov	r3, #0
   1bf54:	str	r2, [sp, #8]
   1bf58:	str	r3, [sp, #4]
   1bf5c:	str	r4, [sp, #20]
   1bf60:	str	r4, [sp, #12]
   1bf64:	str	r6, [sp]
   1bf68:	str	ip, [sp, #16]
   1bf6c:	mov	r2, r0
   1bf70:	mov	r3, r1
   1bf74:	mov	r0, r8
   1bf78:	bl	150ac <pk_client_what_provides_async@plt>
   1bf7c:	mov	r0, r5
   1bf80:	bl	15874 <g_free@plt>
   1bf84:	mov	r0, r7
   1bf88:	add	sp, sp, #24
   1bf8c:	pop	{r4, r5, r6, r7, r8, lr}
   1bf90:	b	15874 <g_free@plt>
   1bf94:	ldr	r2, [pc, #224]	; 1c07c <g_strcmp0@plt+0x61fc>
   1bf98:	ldr	r1, [pc, #224]	; 1c080 <g_strcmp0@plt+0x6200>
   1bf9c:	ldr	r0, [pc, #224]	; 1c084 <g_strcmp0@plt+0x6204>
   1bfa0:	add	sp, sp, #24
   1bfa4:	pop	{r4, r5, r6, r7, r8, lr}
   1bfa8:	b	14fd4 <g_return_if_fail_warning@plt>
   1bfac:	ldr	r2, [pc, #212]	; 1c088 <g_strcmp0@plt+0x6208>
   1bfb0:	mov	r1, #128	; 0x80
   1bfb4:	ldr	r0, [pc, #200]	; 1c084 <g_strcmp0@plt+0x6204>
   1bfb8:	mov	r7, r5
   1bfbc:	bl	151f0 <g_log@plt>
   1bfc0:	b	1bec0 <g_strcmp0@plt+0x6040>
   1bfc4:	ldr	r2, [pc, #192]	; 1c08c <g_strcmp0@plt+0x620c>
   1bfc8:	b	1bf98 <g_strcmp0@plt+0x6118>
   1bfcc:	ldr	r0, [r3, #36]	; 0x24
   1bfd0:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1bfd4:	ldr	r3, [r4, #12]
   1bfd8:	b	1bf1c <g_strcmp0@plt+0x609c>
   1bfdc:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1bfe0:	ldr	r3, [pc, #108]	; 1c054 <g_strcmp0@plt+0x61d4>
   1bfe4:	ldr	r2, [pc, #164]	; 1c090 <g_strcmp0@plt+0x6210>
   1bfe8:	mov	r1, #48	; 0x30
   1bfec:	bl	15568 <g_error_new@plt>
   1bff0:	mov	r7, r5
   1bff4:	mov	r1, r0
   1bff8:	mov	r6, r0
   1bffc:	mov	r0, r4
   1c000:	bl	17748 <g_strcmp0@plt+0x18c8>
   1c004:	mov	r0, r6
   1c008:	bl	15064 <g_error_free@plt>
   1c00c:	b	1bf7c <g_strcmp0@plt+0x60fc>
   1c010:	ldr	r2, [pc, #124]	; 1c094 <g_strcmp0@plt+0x6214>
   1c014:	ldr	r1, [pc, #124]	; 1c098 <g_strcmp0@plt+0x6218>
   1c018:	bl	154a8 <dcngettext@plt>
   1c01c:	bl	153a0 <g_strdup@plt>
   1c020:	mov	r5, r0
   1c024:	b	1be94 <g_strcmp0@plt+0x6014>
   1c028:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c02c:	ldr	r2, [pc, #104]	; 1c09c <g_strcmp0@plt+0x621c>
   1c030:	mov	r1, #17
   1c034:	bl	15568 <g_error_new@plt>
   1c038:	mov	r6, r0
   1c03c:	mov	r1, r0
   1c040:	mov	r0, r4
   1c044:	bl	17748 <g_strcmp0@plt+0x18c8>
   1c048:	mov	r0, r6
   1c04c:	bl	15064 <g_error_free@plt>
   1c050:	b	1bf7c <g_strcmp0@plt+0x60fc>
   1c054:	andeq	sl, r2, r8, ror #19
   1c058:	andeq	sl, r2, r0, lsl #20
   1c05c:	andeq	sl, r2, r0, asr #20
   1c060:	andeq	sl, r2, r8, asr #10
   1c064:	andeq	sl, r2, r0, lsl #21
   1c068:	muleq	r2, ip, sl
   1c06c:	muleq	r2, r4, r9
   1c070:	andeq	sl, r2, r0, lsl #22
   1c074:	andeq	sl, r1, r0, ror #5
   1c078:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1c07c:	andeq	sl, r2, r8, lsl #2
   1c080:	andeq	r9, r2, r8, lsl #11
   1c084:	andeq	r8, r2, ip, lsl #29
   1c088:	andeq	r9, r2, r8, lsl #23
   1c08c:	ldrdeq	sl, [r2], -r4
   1c090:	andeq	sl, r2, r0, lsl r6
   1c094:			; <UNDEFINED> instruction: 0x0002aab8
   1c098:	ldrdeq	sl, [r2], -ip
   1c09c:	andeq	sl, r2, r8, ror #8
   1c0a0:	push	{r4, lr}
   1c0a4:	mov	r4, r0
   1c0a8:	bl	15b68 <strlen@plt>
   1c0ac:	cmp	r0, #6
   1c0b0:	bls	1c0c0 <g_strcmp0@plt+0x6240>
   1c0b4:	add	r0, r4, #6
   1c0b8:	pop	{r4, lr}
   1c0bc:	b	153a0 <g_strdup@plt>
   1c0c0:	mov	r0, #0
   1c0c4:	pop	{r4, pc}
   1c0c8:	push	{r4, r5, r6, lr}
   1c0cc:	mov	r6, r0
   1c0d0:	mov	r0, r1
   1c0d4:	mov	r5, r1
   1c0d8:	bl	1c0a0 <g_strcmp0@plt+0x6220>
   1c0dc:	subs	r4, r0, #0
   1c0e0:	beq	1c130 <g_strcmp0@plt+0x62b0>
   1c0e4:	ldr	r3, [r6, #12]
   1c0e8:	mov	r1, r4
   1c0ec:	ldr	r0, [r3, #32]
   1c0f0:	bl	20b94 <g_strcmp0@plt+0xad14>
   1c0f4:	mov	r2, #5
   1c0f8:	subs	r5, r0, #0
   1c0fc:	beq	1c158 <g_strcmp0@plt+0x62d8>
   1c100:	mov	r1, r5
   1c104:	ldr	r0, [pc, #124]	; 1c188 <g_strcmp0@plt+0x6308>
   1c108:	bl	15880 <dcgettext@plt>
   1c10c:	bl	153a0 <g_strdup@plt>
   1c110:	subs	r6, r0, #0
   1c114:	beq	1c178 <g_strcmp0@plt+0x62f8>
   1c118:	mov	r0, r4
   1c11c:	bl	15874 <g_free@plt>
   1c120:	mov	r0, r5
   1c124:	bl	15874 <g_free@plt>
   1c128:	mov	r0, r6
   1c12c:	pop	{r4, r5, r6, pc}
   1c130:	mov	r2, #5
   1c134:	ldr	r1, [pc, #80]	; 1c18c <g_strcmp0@plt+0x630c>
   1c138:	bl	15880 <dcgettext@plt>
   1c13c:	mov	r2, r5
   1c140:	mov	r5, r4
   1c144:	mov	r1, r0
   1c148:	ldr	r0, [pc, #64]	; 1c190 <g_strcmp0@plt+0x6310>
   1c14c:	bl	15490 <g_strdup_printf@plt>
   1c150:	mov	r6, r0
   1c154:	b	1c118 <g_strcmp0@plt+0x6298>
   1c158:	ldr	r1, [pc, #52]	; 1c194 <g_strcmp0@plt+0x6314>
   1c15c:	bl	15880 <dcgettext@plt>
   1c160:	mov	r2, r4
   1c164:	mov	r1, r0
   1c168:	ldr	r0, [pc, #32]	; 1c190 <g_strcmp0@plt+0x6310>
   1c16c:	bl	15490 <g_strdup_printf@plt>
   1c170:	mov	r6, r0
   1c174:	b	1c118 <g_strcmp0@plt+0x6298>
   1c178:	mov	r0, r5
   1c17c:	bl	153a0 <g_strdup@plt>
   1c180:	mov	r6, r0
   1c184:	b	1c118 <g_strcmp0@plt+0x6298>
   1c188:	andeq	sl, r2, r8, asr fp
   1c18c:	andeq	sl, r2, ip, lsl fp
   1c190:	andeq	sl, r2, r4, lsr fp
   1c194:	andeq	sl, r2, ip, lsr fp
   1c198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c19c:	mov	r5, r0
   1c1a0:	sub	sp, sp, #28
   1c1a4:	mov	r8, r1
   1c1a8:	mov	r6, r2
   1c1ac:	mov	r4, r3
   1c1b0:	bl	19f8c <g_strcmp0@plt+0x410c>
   1c1b4:	cmp	r5, #0
   1c1b8:	beq	1c29c <g_strcmp0@plt+0x641c>
   1c1bc:	ldr	r3, [r5]
   1c1c0:	cmp	r3, #0
   1c1c4:	beq	1c1d4 <g_strcmp0@plt+0x6354>
   1c1c8:	ldr	r3, [r3]
   1c1cc:	cmp	r3, r0
   1c1d0:	beq	1c1e8 <g_strcmp0@plt+0x6368>
   1c1d4:	mov	r1, r0
   1c1d8:	mov	r0, r5
   1c1dc:	bl	159dc <g_type_check_instance_is_a@plt>
   1c1e0:	cmp	r0, #0
   1c1e4:	beq	1c29c <g_strcmp0@plt+0x641c>
   1c1e8:	cmp	r8, #0
   1c1ec:	beq	1c360 <g_strcmp0@plt+0x64e0>
   1c1f0:	ldr	r3, [r5, #12]
   1c1f4:	ldr	r1, [pc, #1072]	; 1c62c <g_strcmp0@plt+0x67ac>
   1c1f8:	str	r6, [r3, #116]	; 0x74
   1c1fc:	str	r4, [r3, #120]	; 0x78
   1c200:	ldr	r0, [r3, #4]
   1c204:	bl	15c10 <g_settings_get_string@plt>
   1c208:	subs	r7, r0, #0
   1c20c:	beq	1c368 <g_strcmp0@plt+0x64e8>
   1c210:	ldr	r1, [pc, #1048]	; 1c630 <g_strcmp0@plt+0x67b0>
   1c214:	mvn	r2, #0
   1c218:	bl	1555c <g_strsplit@plt>
   1c21c:	ldr	r1, [r0]
   1c220:	mov	r6, r0
   1c224:	cmp	r1, #0
   1c228:	beq	1c2b4 <g_strcmp0@plt+0x6434>
   1c22c:	mov	r4, r0
   1c230:	b	1c240 <g_strcmp0@plt+0x63c0>
   1c234:	ldr	r1, [r4, #4]!
   1c238:	cmp	r1, #0
   1c23c:	beq	1c2b4 <g_strcmp0@plt+0x6434>
   1c240:	ldr	r3, [r5, #12]
   1c244:	ldr	r0, [r3, #80]	; 0x50
   1c248:	bl	15e80 <g_strcmp0@plt>
   1c24c:	cmp	r0, #0
   1c250:	bne	1c234 <g_strcmp0@plt+0x63b4>
   1c254:	mov	r0, r7
   1c258:	bl	15874 <g_free@plt>
   1c25c:	mov	r0, r6
   1c260:	bl	15790 <g_strfreev@plt>
   1c264:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c268:	ldr	r3, [r5, #12]
   1c26c:	ldr	r2, [pc, #960]	; 1c634 <g_strcmp0@plt+0x67b4>
   1c270:	mov	r1, #48	; 0x30
   1c274:	ldr	r3, [r3, #80]	; 0x50
   1c278:	bl	15568 <g_error_new@plt>
   1c27c:	mov	r4, r0
   1c280:	mov	r1, r0
   1c284:	mov	r0, r5
   1c288:	bl	17748 <g_strcmp0@plt+0x18c8>
   1c28c:	mov	r0, r4
   1c290:	add	sp, sp, #28
   1c294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c298:	b	15064 <g_error_free@plt>
   1c29c:	ldr	r2, [pc, #916]	; 1c638 <g_strcmp0@plt+0x67b8>
   1c2a0:	ldr	r1, [pc, #916]	; 1c63c <g_strcmp0@plt+0x67bc>
   1c2a4:	ldr	r0, [pc, #916]	; 1c640 <g_strcmp0@plt+0x67c0>
   1c2a8:	add	sp, sp, #28
   1c2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2b0:	b	14fd4 <g_return_if_fail_warning@plt>
   1c2b4:	mov	r0, r7
   1c2b8:	bl	15874 <g_free@plt>
   1c2bc:	mov	r0, r6
   1c2c0:	bl	15790 <g_strfreev@plt>
   1c2c4:	mov	r0, r8
   1c2c8:	bl	157a8 <g_strv_length@plt>
   1c2cc:	ldr	r3, [r5, #12]
   1c2d0:	ldr	r1, [pc, #876]	; 1c644 <g_strcmp0@plt+0x67c4>
   1c2d4:	mov	r9, r0
   1c2d8:	ldr	r0, [r3, #4]
   1c2dc:	bl	14f2c <g_settings_get_boolean@plt>
   1c2e0:	cmp	r0, #0
   1c2e4:	beq	1c38c <g_strcmp0@plt+0x650c>
   1c2e8:	ldr	r3, [r5, #12]
   1c2ec:	ldr	r3, [r3, #44]	; 0x2c
   1c2f0:	cmp	r3, #0
   1c2f4:	beq	1c5a0 <g_strcmp0@plt+0x6720>
   1c2f8:	cmp	r9, #0
   1c2fc:	beq	1c61c <g_strcmp0@plt+0x679c>
   1c300:	ldr	sl, [pc, #832]	; 1c648 <g_strcmp0@plt+0x67c8>
   1c304:	mov	r4, r8
   1c308:	mov	r6, #0
   1c30c:	b	1c32c <g_strcmp0@plt+0x64ac>
   1c310:	ldr	r0, [r4, #-4]
   1c314:	bl	15b68 <strlen@plt>
   1c318:	sub	r0, r0, #7
   1c31c:	cmp	r0, #13
   1c320:	bhi	1c378 <g_strcmp0@plt+0x64f8>
   1c324:	cmp	r9, r6
   1c328:	beq	1c3a0 <g_strcmp0@plt+0x6520>
   1c32c:	ldr	r0, [r4]
   1c330:	mov	r1, sl
   1c334:	bl	1561c <g_str_has_prefix@plt>
   1c338:	mov	r7, r4
   1c33c:	add	r6, r6, #1
   1c340:	add	r4, r4, #4
   1c344:	cmp	r0, #0
   1c348:	bne	1c310 <g_strcmp0@plt+0x6490>
   1c34c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c350:	ldr	r3, [r7]
   1c354:	ldr	r2, [pc, #752]	; 1c64c <g_strcmp0@plt+0x67cc>
   1c358:	mov	r1, #4
   1c35c:	b	1c278 <g_strcmp0@plt+0x63f8>
   1c360:	ldr	r2, [pc, #744]	; 1c650 <g_strcmp0@plt+0x67d0>
   1c364:	b	1c2a0 <g_strcmp0@plt+0x6420>
   1c368:	bl	15874 <g_free@plt>
   1c36c:	mov	r0, r7
   1c370:	bl	15790 <g_strfreev@plt>
   1c374:	b	1c2c4 <g_strcmp0@plt+0x6444>
   1c378:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c37c:	ldr	r3, [r7]
   1c380:	ldr	r2, [pc, #716]	; 1c654 <g_strcmp0@plt+0x67d4>
   1c384:	mov	r1, #4
   1c388:	b	1c278 <g_strcmp0@plt+0x63f8>
   1c38c:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c390:	ldr	r3, [pc, #684]	; 1c644 <g_strcmp0@plt+0x67c4>
   1c394:	ldr	r2, [pc, #700]	; 1c658 <g_strcmp0@plt+0x67d8>
   1c398:	mov	r1, #48	; 0x30
   1c39c:	b	1c278 <g_strcmp0@plt+0x63f8>
   1c3a0:	ldr	r0, [pc, #692]	; 1c65c <g_strcmp0@plt+0x67dc>
   1c3a4:	bl	15100 <g_string_new@plt>
   1c3a8:	cmp	r9, #1
   1c3ac:	mov	r7, r0
   1c3b0:	beq	1c5dc <g_strcmp0@plt+0x675c>
   1c3b4:	sub	r4, r8, #4
   1c3b8:	ldr	sl, [pc, #672]	; 1c660 <g_strcmp0@plt+0x67e0>
   1c3bc:	add	fp, r4, r9, lsl #2
   1c3c0:	ldr	r1, [r4, #4]!
   1c3c4:	mov	r0, r5
   1c3c8:	bl	1c0c8 <g_strcmp0@plt+0x6248>
   1c3cc:	mov	r1, sl
   1c3d0:	mov	r2, r0
   1c3d4:	mov	r6, r0
   1c3d8:	mov	r0, r7
   1c3dc:	bl	15da8 <g_string_append_printf@plt>
   1c3e0:	mov	r0, r6
   1c3e4:	bl	15874 <g_free@plt>
   1c3e8:	cmp	fp, r4
   1c3ec:	bne	1c3c0 <g_strcmp0@plt+0x6540>
   1c3f0:	mov	r0, r7
   1c3f4:	mov	r1, #0
   1c3f8:	bl	15b08 <g_string_free@plt>
   1c3fc:	mov	r4, #5
   1c400:	mov	r3, r9
   1c404:	ldr	r2, [pc, #600]	; 1c664 <g_strcmp0@plt+0x67e4>
   1c408:	ldr	r1, [pc, #600]	; 1c668 <g_strcmp0@plt+0x67e8>
   1c40c:	str	r4, [sp]
   1c410:	mov	r7, r0
   1c414:	mov	r0, #0
   1c418:	bl	154a8 <dcngettext@plt>
   1c41c:	mov	r3, r9
   1c420:	ldr	r2, [pc, #580]	; 1c66c <g_strcmp0@plt+0x67ec>
   1c424:	ldr	r1, [pc, #580]	; 1c670 <g_strcmp0@plt+0x67f0>
   1c428:	str	r4, [sp]
   1c42c:	mov	r6, r0
   1c430:	mov	r0, #0
   1c434:	bl	154a8 <dcngettext@plt>
   1c438:	mov	r1, r6
   1c43c:	mov	r2, r7
   1c440:	mov	r3, r0
   1c444:	ldr	r0, [pc, #552]	; 1c674 <g_strcmp0@plt+0x67f4>
   1c448:	bl	15490 <g_strdup_printf@plt>
   1c44c:	mov	r6, r0
   1c450:	mov	r0, r7
   1c454:	bl	15874 <g_free@plt>
   1c458:	ldr	r3, [r5, #12]
   1c45c:	ldr	r0, [r3, #72]	; 0x48
   1c460:	str	r4, [sp]
   1c464:	cmp	r0, #0
   1c468:	mov	r3, r9
   1c46c:	beq	1c5c4 <g_strcmp0@plt+0x6744>
   1c470:	ldr	r2, [pc, #512]	; 1c678 <g_strcmp0@plt+0x67f8>
   1c474:	ldr	r1, [pc, #512]	; 1c67c <g_strcmp0@plt+0x67fc>
   1c478:	mov	r0, #0
   1c47c:	bl	154a8 <dcngettext@plt>
   1c480:	ldr	r3, [r5, #12]
   1c484:	ldr	r1, [r3, #72]	; 0x48
   1c488:	bl	15490 <g_strdup_printf@plt>
   1c48c:	mov	r4, r0
   1c490:	mov	r2, #5
   1c494:	ldr	r1, [pc, #484]	; 1c680 <g_strcmp0@plt+0x6800>
   1c498:	mov	r0, #0
   1c49c:	bl	15880 <dcgettext@plt>
   1c4a0:	mov	r2, r6
   1c4a4:	mov	r1, r4
   1c4a8:	mov	r3, r0
   1c4ac:	mov	r0, r5
   1c4b0:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1c4b4:	mov	r7, r0
   1c4b8:	mov	r0, r4
   1c4bc:	bl	15874 <g_free@plt>
   1c4c0:	mov	r0, r6
   1c4c4:	bl	15874 <g_free@plt>
   1c4c8:	cmp	r7, #0
   1c4cc:	beq	1c608 <g_strcmp0@plt+0x6788>
   1c4d0:	mov	r2, #5
   1c4d4:	mov	r3, r9
   1c4d8:	str	r2, [sp]
   1c4dc:	ldr	r1, [pc, #416]	; 1c684 <g_strcmp0@plt+0x6804>
   1c4e0:	ldr	r2, [pc, #416]	; 1c688 <g_strcmp0@plt+0x6808>
   1c4e4:	mov	r0, #0
   1c4e8:	bl	154a8 <dcngettext@plt>
   1c4ec:	mov	r2, #0
   1c4f0:	mov	r3, #0
   1c4f4:	mov	r1, #1
   1c4f8:	mov	r4, r0
   1c4fc:	ldr	r0, [r5, #12]
   1c500:	ldr	r0, [r0, #36]	; 0x24
   1c504:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1c508:	ldr	r3, [r5, #12]
   1c50c:	mov	r1, r4
   1c510:	ldr	r0, [r3, #36]	; 0x24
   1c514:	bl	210e0 <g_strcmp0@plt+0xb260>
   1c518:	ldr	r3, [r5, #12]
   1c51c:	mov	r1, #1
   1c520:	ldr	r0, [r3, #36]	; 0x24
   1c524:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1c528:	ldr	r3, [r5, #12]
   1c52c:	ldr	r2, [r3, #56]	; 0x38
   1c530:	cmp	r2, #0
   1c534:	bne	1c5b4 <g_strcmp0@plt+0x6734>
   1c538:	ldr	r4, [r3, #8]
   1c53c:	bl	15298 <pk_client_get_type@plt>
   1c540:	mov	r1, r0
   1c544:	mov	r0, r4
   1c548:	bl	15148 <g_type_check_instance_cast@plt>
   1c54c:	mvn	r3, #0
   1c550:	mov	r2, #16
   1c554:	mov	r1, #18
   1c558:	mov	r4, r0
   1c55c:	mov	r0, #3
   1c560:	bl	15718 <pk_bitfield_from_enums@plt>
   1c564:	ldr	ip, [pc, #288]	; 1c68c <g_strcmp0@plt+0x680c>
   1c568:	ldr	r2, [pc, #288]	; 1c690 <g_strcmp0@plt+0x6810>
   1c56c:	mov	r3, #0
   1c570:	str	r2, [sp, #8]
   1c574:	str	r3, [sp, #4]
   1c578:	str	r5, [sp, #20]
   1c57c:	str	r5, [sp, #12]
   1c580:	str	r8, [sp]
   1c584:	str	ip, [sp, #16]
   1c588:	mov	r2, r0
   1c58c:	mov	r3, r1
   1c590:	mov	r0, r4
   1c594:	bl	150ac <pk_client_what_provides_async@plt>
   1c598:	add	sp, sp, #28
   1c59c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5a0:	ldr	r2, [pc, #236]	; 1c694 <g_strcmp0@plt+0x6814>
   1c5a4:	mov	r1, #128	; 0x80
   1c5a8:	ldr	r0, [pc, #144]	; 1c640 <g_strcmp0@plt+0x67c0>
   1c5ac:	bl	151f0 <g_log@plt>
   1c5b0:	b	1c4d0 <g_strcmp0@plt+0x6650>
   1c5b4:	ldr	r0, [r3, #36]	; 0x24
   1c5b8:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1c5bc:	ldr	r3, [r5, #12]
   1c5c0:	b	1c538 <g_strcmp0@plt+0x66b8>
   1c5c4:	ldr	r2, [pc, #204]	; 1c698 <g_strcmp0@plt+0x6818>
   1c5c8:	ldr	r1, [pc, #204]	; 1c69c <g_strcmp0@plt+0x681c>
   1c5cc:	bl	154a8 <dcngettext@plt>
   1c5d0:	bl	153a0 <g_strdup@plt>
   1c5d4:	mov	r4, r0
   1c5d8:	b	1c490 <g_strcmp0@plt+0x6610>
   1c5dc:	ldr	r1, [r8]
   1c5e0:	mov	r0, r5
   1c5e4:	bl	1c0c8 <g_strcmp0@plt+0x6248>
   1c5e8:	ldr	r1, [pc, #176]	; 1c6a0 <g_strcmp0@plt+0x6820>
   1c5ec:	mov	r4, r0
   1c5f0:	mov	r2, r0
   1c5f4:	mov	r0, r7
   1c5f8:	bl	15da8 <g_string_append_printf@plt>
   1c5fc:	mov	r0, r4
   1c600:	bl	15874 <g_free@plt>
   1c604:	b	1c3f0 <g_strcmp0@plt+0x6570>
   1c608:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1c60c:	ldr	r2, [pc, #144]	; 1c6a4 <g_strcmp0@plt+0x6824>
   1c610:	mov	r1, #17
   1c614:	bl	15568 <g_error_new@plt>
   1c618:	b	1c27c <g_strcmp0@plt+0x63fc>
   1c61c:	ldr	r0, [pc, #56]	; 1c65c <g_strcmp0@plt+0x67dc>
   1c620:	bl	15100 <g_string_new@plt>
   1c624:	mov	r7, r0
   1c628:	b	1c3f0 <g_strcmp0@plt+0x6570>
   1c62c:	andeq	sl, r2, r0, ror fp
   1c630:	andeq	r9, r2, r0, lsr #1
   1c634:	andeq	sl, r2, ip, ror #26
   1c638:	andeq	sl, r2, r8, lsl #2
   1c63c:	andeq	r9, r2, ip, lsr #11
   1c640:	andeq	r8, r2, ip, lsl #29
   1c644:	andeq	sl, r2, r8, lsl #23
   1c648:	muleq	r2, ip, fp
   1c64c:	andeq	sl, r2, r4, lsr #23
   1c650:	andeq	sl, r2, r0, ror #22
   1c654:	andeq	sl, r2, r0, asr #23
   1c658:	andeq	sl, r2, r0, lsl r6
   1c65c:	muleq	r2, r4, r6
   1c660:	andeq	sl, r2, ip, lsr #5
   1c664:	ldrdeq	sl, [r2], -ip
   1c668:	andeq	sl, r2, ip, lsl ip
   1c66c:	andeq	sl, r2, ip, asr ip
   1c670:	muleq	r2, r0, ip
   1c674:	ldrdeq	sl, [r2], -r0
   1c678:	andeq	sl, r2, r4, asr #25
   1c67c:	andeq	sl, r2, r0, ror #25
   1c680:	muleq	r2, r4, r9
   1c684:	andeq	sl, r2, r8, asr sp
   1c688:	andeq	sl, r2, r4, asr #26
   1c68c:	andeq	r8, r1, r0, asr #17
   1c690:	andeq	sl, r1, r0, ror #5
   1c694:	andeq	r9, r2, r8, lsl #23
   1c698:	strdeq	sl, [r2], -ip
   1c69c:	andeq	sl, r2, r0, lsr #26
   1c6a0:			; <UNDEFINED> instruction: 0x0002a2b0
   1c6a4:	andeq	sl, r2, r8, ror #8
   1c6a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6ac:	mov	r4, r0
   1c6b0:	sub	sp, sp, #28
   1c6b4:	mov	r5, r1
   1c6b8:	mov	r7, r2
   1c6bc:	mov	r6, r3
   1c6c0:	bl	19f8c <g_strcmp0@plt+0x410c>
   1c6c4:	cmp	r4, #0
   1c6c8:	beq	1ca00 <g_strcmp0@plt+0x6b80>
   1c6cc:	ldr	r3, [r4]
   1c6d0:	cmp	r3, #0
   1c6d4:	beq	1c6e4 <g_strcmp0@plt+0x6864>
   1c6d8:	ldr	r3, [r3]
   1c6dc:	cmp	r0, r3
   1c6e0:	beq	1c6f8 <g_strcmp0@plt+0x6878>
   1c6e4:	mov	r1, r0
   1c6e8:	mov	r0, r4
   1c6ec:	bl	159dc <g_type_check_instance_is_a@plt>
   1c6f0:	cmp	r0, #0
   1c6f4:	beq	1ca00 <g_strcmp0@plt+0x6b80>
   1c6f8:	cmp	r5, #0
   1c6fc:	beq	1ca2c <g_strcmp0@plt+0x6bac>
   1c700:	ldr	r3, [r4, #12]
   1c704:	ldr	r2, [r3, #44]	; 0x2c
   1c708:	str	r7, [r3, #116]	; 0x74
   1c70c:	cmp	r2, #0
   1c710:	str	r6, [r3, #120]	; 0x78
   1c714:	beq	1ca18 <g_strcmp0@plt+0x6b98>
   1c718:	mov	r0, r5
   1c71c:	bl	157a8 <g_strv_length@plt>
   1c720:	mov	r2, #5
   1c724:	ldr	r1, [pc, #868]	; 1ca90 <g_strcmp0@plt+0x6c10>
   1c728:	str	r2, [sp]
   1c72c:	ldr	r2, [pc, #864]	; 1ca94 <g_strcmp0@plt+0x6c14>
   1c730:	mov	r3, r0
   1c734:	mov	r8, r0
   1c738:	mov	r0, #0
   1c73c:	bl	154a8 <dcngettext@plt>
   1c740:	mov	r7, r0
   1c744:	ldr	r0, [pc, #844]	; 1ca98 <g_strcmp0@plt+0x6c18>
   1c748:	bl	15100 <g_string_new@plt>
   1c74c:	mov	r2, r7
   1c750:	ldr	r1, [pc, #836]	; 1ca9c <g_strcmp0@plt+0x6c1c>
   1c754:	mov	r6, r0
   1c758:	bl	15da8 <g_string_append_printf@plt>
   1c75c:	cmp	r8, #1
   1c760:	beq	1ca40 <g_strcmp0@plt+0x6bc0>
   1c764:	cmp	r8, #0
   1c768:	beq	1c790 <g_strcmp0@plt+0x6910>
   1c76c:	sub	r7, r5, #4
   1c770:	ldr	sl, [pc, #808]	; 1caa0 <g_strcmp0@plt+0x6c20>
   1c774:	add	r9, r7, r8, lsl #2
   1c778:	ldr	r2, [r7, #4]!
   1c77c:	mov	r1, sl
   1c780:	mov	r0, r6
   1c784:	bl	15da8 <g_string_append_printf@plt>
   1c788:	cmp	r9, r7
   1c78c:	bne	1c778 <g_strcmp0@plt+0x68f8>
   1c790:	mov	r7, #5
   1c794:	mov	r3, r8
   1c798:	str	r7, [sp]
   1c79c:	ldr	r2, [pc, #768]	; 1caa4 <g_strcmp0@plt+0x6c24>
   1c7a0:	ldr	r1, [pc, #768]	; 1caa8 <g_strcmp0@plt+0x6c28>
   1c7a4:	mov	r0, #0
   1c7a8:	bl	154a8 <dcngettext@plt>
   1c7ac:	ldr	r1, [pc, #760]	; 1caac <g_strcmp0@plt+0x6c2c>
   1c7b0:	mov	r2, r0
   1c7b4:	mov	r0, r6
   1c7b8:	bl	15da8 <g_string_append_printf@plt>
   1c7bc:	ldr	r1, [r6, #4]
   1c7c0:	mov	r0, r6
   1c7c4:	sub	r1, r1, #1
   1c7c8:	bl	14ee4 <g_string_set_size@plt>
   1c7cc:	mov	r0, r6
   1c7d0:	mov	r1, #0
   1c7d4:	bl	15b08 <g_string_free@plt>
   1c7d8:	mov	r3, r8
   1c7dc:	ldr	r2, [pc, #716]	; 1cab0 <g_strcmp0@plt+0x6c30>
   1c7e0:	ldr	r1, [pc, #716]	; 1cab4 <g_strcmp0@plt+0x6c34>
   1c7e4:	str	r7, [sp]
   1c7e8:	mov	r6, r0
   1c7ec:	mov	r0, #0
   1c7f0:	bl	154a8 <dcngettext@plt>
   1c7f4:	bl	153a0 <g_strdup@plt>
   1c7f8:	mov	r2, r7
   1c7fc:	ldr	r1, [pc, #692]	; 1cab8 <g_strcmp0@plt+0x6c38>
   1c800:	mov	r8, r0
   1c804:	mov	r0, #0
   1c808:	bl	15880 <dcgettext@plt>
   1c80c:	mov	r2, r6
   1c810:	mov	r1, r8
   1c814:	mov	r3, r0
   1c818:	mov	r0, r4
   1c81c:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1c820:	mov	r7, r0
   1c824:	mov	r0, r8
   1c828:	bl	15874 <g_free@plt>
   1c82c:	mov	r0, r6
   1c830:	bl	15874 <g_free@plt>
   1c834:	cmp	r7, #0
   1c838:	beq	1ca54 <g_strcmp0@plt+0x6bd4>
   1c83c:	ldr	r3, [r4, #12]
   1c840:	mvn	r2, #0
   1c844:	mov	r1, #6
   1c848:	mov	r0, #3
   1c84c:	ldr	r6, [r3, #36]	; 0x24
   1c850:	bl	15718 <pk_bitfield_from_enums@plt>
   1c854:	mov	r2, r0
   1c858:	mov	r3, r1
   1c85c:	mov	r0, r6
   1c860:	mov	r1, #1
   1c864:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1c868:	ldr	r3, [r4, #12]
   1c86c:	mov	r2, #5
   1c870:	ldr	r1, [pc, #580]	; 1cabc <g_strcmp0@plt+0x6c3c>
   1c874:	mov	r0, #0
   1c878:	ldr	r6, [r3, #36]	; 0x24
   1c87c:	bl	15880 <dcgettext@plt>
   1c880:	mov	r1, r0
   1c884:	mov	r0, r6
   1c888:	bl	210e0 <g_strcmp0@plt+0xb260>
   1c88c:	ldr	r3, [r4, #12]
   1c890:	mov	r1, #1
   1c894:	ldr	r0, [r3, #36]	; 0x24
   1c898:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1c89c:	ldr	r3, [r4, #12]
   1c8a0:	ldr	r2, [r3, #56]	; 0x38
   1c8a4:	cmp	r2, #0
   1c8a8:	bne	1ca34 <g_strcmp0@plt+0x6bb4>
   1c8ac:	ldr	r0, [pc, #524]	; 1cac0 <g_strcmp0@plt+0x6c40>
   1c8b0:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1c8b4:	mov	r7, r0
   1c8b8:	ldr	r0, [pc, #512]	; 1cac0 <g_strcmp0@plt+0x6c40>
   1c8bc:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   1c8c0:	mov	r6, r0
   1c8c4:	ldr	r0, [r5]
   1c8c8:	cmp	r0, #0
   1c8cc:	beq	1c900 <g_strcmp0@plt+0x6a80>
   1c8d0:	bl	153a0 <g_strdup@plt>
   1c8d4:	mov	r1, r0
   1c8d8:	mov	r0, r7
   1c8dc:	bl	15cc4 <g_ptr_array_add@plt>
   1c8e0:	ldr	r0, [r5]
   1c8e4:	bl	153a0 <g_strdup@plt>
   1c8e8:	mov	r1, r0
   1c8ec:	mov	r0, r6
   1c8f0:	bl	15cc4 <g_ptr_array_add@plt>
   1c8f4:	ldr	r0, [r5, #4]!
   1c8f8:	cmp	r0, #0
   1c8fc:	bne	1c8d0 <g_strcmp0@plt+0x6a50>
   1c900:	mov	r0, r7
   1c904:	bl	1558c <pk_ptr_array_to_strv@plt>
   1c908:	mov	r1, r0
   1c90c:	mov	r9, r0
   1c910:	ldr	r0, [pc, #428]	; 1cac4 <g_strcmp0@plt+0x6c44>
   1c914:	bl	15d84 <g_strjoinv@plt>
   1c918:	mov	r2, #5
   1c91c:	ldr	r1, [pc, #420]	; 1cac8 <g_strcmp0@plt+0x6c48>
   1c920:	mov	r5, r0
   1c924:	mov	r0, #0
   1c928:	bl	15880 <dcgettext@plt>
   1c92c:	mov	r1, r5
   1c930:	bl	15490 <g_strdup_printf@plt>
   1c934:	ldr	r3, [r4, #12]
   1c938:	mov	r1, r0
   1c93c:	mov	r8, r0
   1c940:	ldr	r0, [r3, #36]	; 0x24
   1c944:	bl	213e8 <g_strcmp0@plt+0xb568>
   1c948:	mov	r0, r6
   1c94c:	bl	1558c <pk_ptr_array_to_strv@plt>
   1c950:	ldr	r3, [r4, #12]
   1c954:	ldr	fp, [r3, #8]
   1c958:	mov	sl, r0
   1c95c:	bl	15298 <pk_client_get_type@plt>
   1c960:	mov	r1, r0
   1c964:	mov	r0, fp
   1c968:	bl	15148 <g_type_check_instance_cast@plt>
   1c96c:	mvn	r3, #0
   1c970:	mov	r2, #16
   1c974:	mov	r1, #18
   1c978:	mov	fp, r0
   1c97c:	mov	r0, #3
   1c980:	bl	15718 <pk_bitfield_from_enums@plt>
   1c984:	ldr	ip, [pc, #320]	; 1cacc <g_strcmp0@plt+0x6c4c>
   1c988:	ldr	r2, [pc, #320]	; 1cad0 <g_strcmp0@plt+0x6c50>
   1c98c:	mov	r3, #0
   1c990:	str	r2, [sp, #8]
   1c994:	str	r3, [sp, #4]
   1c998:	str	sl, [sp]
   1c99c:	str	r4, [sp, #20]
   1c9a0:	str	r4, [sp, #12]
   1c9a4:	str	ip, [sp, #16]
   1c9a8:	mov	r2, r0
   1c9ac:	mov	r3, r1
   1c9b0:	mov	r0, fp
   1c9b4:	bl	150ac <pk_client_what_provides_async@plt>
   1c9b8:	cmp	r7, #0
   1c9bc:	beq	1c9c8 <g_strcmp0@plt+0x6b48>
   1c9c0:	mov	r0, r7
   1c9c4:	bl	15c7c <g_ptr_array_unref@plt>
   1c9c8:	cmp	r6, #0
   1c9cc:	beq	1c9d8 <g_strcmp0@plt+0x6b58>
   1c9d0:	mov	r0, r6
   1c9d4:	bl	15c7c <g_ptr_array_unref@plt>
   1c9d8:	mov	r0, sl
   1c9dc:	bl	15790 <g_strfreev@plt>
   1c9e0:	mov	r0, r9
   1c9e4:	bl	15790 <g_strfreev@plt>
   1c9e8:	mov	r0, r8
   1c9ec:	bl	15874 <g_free@plt>
   1c9f0:	mov	r0, r5
   1c9f4:	add	sp, sp, #28
   1c9f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c9fc:	b	15874 <g_free@plt>
   1ca00:	ldr	r2, [pc, #204]	; 1cad4 <g_strcmp0@plt+0x6c54>
   1ca04:	ldr	r1, [pc, #204]	; 1cad8 <g_strcmp0@plt+0x6c58>
   1ca08:	ldr	r0, [pc, #204]	; 1cadc <g_strcmp0@plt+0x6c5c>
   1ca0c:	add	sp, sp, #28
   1ca10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca14:	b	14fd4 <g_return_if_fail_warning@plt>
   1ca18:	ldr	r2, [pc, #192]	; 1cae0 <g_strcmp0@plt+0x6c60>
   1ca1c:	mov	r1, #128	; 0x80
   1ca20:	ldr	r0, [pc, #180]	; 1cadc <g_strcmp0@plt+0x6c5c>
   1ca24:	bl	151f0 <g_log@plt>
   1ca28:	b	1c83c <g_strcmp0@plt+0x69bc>
   1ca2c:	ldr	r2, [pc, #176]	; 1cae4 <g_strcmp0@plt+0x6c64>
   1ca30:	b	1ca04 <g_strcmp0@plt+0x6b84>
   1ca34:	ldr	r0, [r3, #36]	; 0x24
   1ca38:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1ca3c:	b	1c8ac <g_strcmp0@plt+0x6a2c>
   1ca40:	ldr	r2, [r5]
   1ca44:	ldr	r1, [pc, #156]	; 1cae8 <g_strcmp0@plt+0x6c68>
   1ca48:	mov	r0, r6
   1ca4c:	bl	15da8 <g_string_append_printf@plt>
   1ca50:	b	1c790 <g_strcmp0@plt+0x6910>
   1ca54:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1ca58:	ldr	r2, [pc, #140]	; 1caec <g_strcmp0@plt+0x6c6c>
   1ca5c:	mov	r1, #17
   1ca60:	bl	15568 <g_error_new@plt>
   1ca64:	mov	r5, r7
   1ca68:	mov	r8, r7
   1ca6c:	mov	r9, r7
   1ca70:	mov	sl, r7
   1ca74:	mov	r1, r0
   1ca78:	mov	r6, r0
   1ca7c:	mov	r0, r4
   1ca80:	bl	17748 <g_strcmp0@plt+0x18c8>
   1ca84:	mov	r0, r6
   1ca88:	bl	15064 <g_error_free@plt>
   1ca8c:	b	1c9d8 <g_strcmp0@plt+0x6b58>
   1ca90:	andeq	sl, r2, ip, asr #27
   1ca94:	andeq	sl, r2, r4, lsr #27
   1ca98:	muleq	r2, r4, r6
   1ca9c:	muleq	r2, r0, r6
   1caa0:	andeq	sl, r2, ip, lsr #5
   1caa4:	muleq	r2, r8, r6
   1caa8:	andeq	sl, r2, r0, asr #13
   1caac:	andeq	sl, r2, r4, ror #13
   1cab0:	strdeq	sl, [r2], -r0
   1cab4:	andeq	sl, r2, r8, lsr #28
   1cab8:	muleq	r2, r4, r9
   1cabc:	andeq	sl, r2, r4, ror #28
   1cac0:	andeq	r5, r1, r4, ror r8
   1cac4:			; <UNDEFINED> instruction: 0x0002a9b4
   1cac8:	andeq	sl, r2, ip, ror lr
   1cacc:	andeq	r8, r1, r4, asr ip
   1cad0:	andeq	sl, r1, r0, ror #5
   1cad4:	andeq	sl, r2, r8, lsl #2
   1cad8:	ldrdeq	r9, [r2], -r8
   1cadc:	andeq	r8, r2, ip, lsl #29
   1cae0:	andeq	r9, r2, r8, lsl #23
   1cae4:	andeq	sl, r2, ip, lsl #27
   1cae8:			; <UNDEFINED> instruction: 0x0002a2b0
   1caec:	andeq	sl, r2, r8, ror #8
   1caf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1caf4:	sub	sp, sp, #44	; 0x2c
   1caf8:	mov	fp, r0
   1cafc:	str	r1, [sp, #32]
   1cb00:	mov	r5, r2
   1cb04:	mov	r4, r3
   1cb08:	bl	19f8c <g_strcmp0@plt+0x410c>
   1cb0c:	cmp	fp, #0
   1cb10:	beq	1cc9c <g_strcmp0@plt+0x6e1c>
   1cb14:	ldr	r3, [fp]
   1cb18:	cmp	r3, #0
   1cb1c:	beq	1cb2c <g_strcmp0@plt+0x6cac>
   1cb20:	ldr	r3, [r3]
   1cb24:	cmp	r3, r0
   1cb28:	beq	1cb40 <g_strcmp0@plt+0x6cc0>
   1cb2c:	mov	r1, r0
   1cb30:	mov	r0, fp
   1cb34:	bl	159dc <g_type_check_instance_is_a@plt>
   1cb38:	cmp	r0, #0
   1cb3c:	beq	1cc9c <g_strcmp0@plt+0x6e1c>
   1cb40:	ldr	r3, [sp, #32]
   1cb44:	cmp	r3, #0
   1cb48:	beq	1ce24 <g_strcmp0@plt+0x6fa4>
   1cb4c:	ldr	r3, [fp, #12]
   1cb50:	mvn	r2, #0
   1cb54:	mov	r1, #6
   1cb58:	str	r5, [r3, #116]	; 0x74
   1cb5c:	str	r4, [r3, #120]	; 0x78
   1cb60:	mov	r0, #3
   1cb64:	ldr	r5, [r3, #36]	; 0x24
   1cb68:	bl	15718 <pk_bitfield_from_enums@plt>
   1cb6c:	mov	r2, r0
   1cb70:	mov	r3, r1
   1cb74:	mov	r0, r5
   1cb78:	mov	r1, #1
   1cb7c:	bl	21a30 <g_strcmp0@plt+0xbbb0>
   1cb80:	ldr	r3, [fp, #12]
   1cb84:	mov	r2, #5
   1cb88:	ldr	r1, [pc, #684]	; 1ce3c <g_strcmp0@plt+0x6fbc>
   1cb8c:	mov	r0, #0
   1cb90:	ldr	r4, [r3, #36]	; 0x24
   1cb94:	bl	15880 <dcgettext@plt>
   1cb98:	mov	r1, r0
   1cb9c:	mov	r0, r4
   1cba0:	bl	210e0 <g_strcmp0@plt+0xb260>
   1cba4:	ldr	r3, [fp, #12]
   1cba8:	mov	r1, #1
   1cbac:	ldr	r0, [r3, #36]	; 0x24
   1cbb0:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1cbb4:	ldr	r3, [fp, #12]
   1cbb8:	ldr	r2, [r3, #56]	; 0x38
   1cbbc:	cmp	r2, #0
   1cbc0:	bne	1ce18 <g_strcmp0@plt+0x6f98>
   1cbc4:	ldr	r0, [sp, #32]
   1cbc8:	bl	157a8 <g_strv_length@plt>
   1cbcc:	cmp	r0, #1
   1cbd0:	mov	r4, r0
   1cbd4:	bhi	1ce2c <g_strcmp0@plt+0x6fac>
   1cbd8:	mov	r1, #4
   1cbdc:	bl	15c28 <g_malloc0_n@plt>
   1cbe0:	cmp	r4, #0
   1cbe4:	str	r0, [sp, #28]
   1cbe8:	beq	1cce4 <g_strcmp0@plt+0x6e64>
   1cbec:	ldr	r3, [sp, #32]
   1cbf0:	mov	r2, #0
   1cbf4:	ldr	r1, [pc, #580]	; 1ce40 <g_strcmp0@plt+0x6fc0>
   1cbf8:	ldr	r0, [r3]
   1cbfc:	bl	1555c <g_strsplit@plt>
   1cc00:	mov	r4, r0
   1cc04:	str	r0, [sp, #24]
   1cc08:	bl	157a8 <g_strv_length@plt>
   1cc0c:	subs	sl, r0, #0
   1cc10:	beq	1ce0c <g_strcmp0@plt+0x6f8c>
   1cc14:	mov	r7, #0
   1cc18:	ldr	r9, [pc, #548]	; 1ce44 <g_strcmp0@plt+0x6fc4>
   1cc1c:	ldr	r8, [pc, #548]	; 1ce48 <g_strcmp0@plt+0x6fc8>
   1cc20:	mov	r6, r7
   1cc24:	mov	r5, r7
   1cc28:	sub	r4, r4, #4
   1cc2c:	b	1cc60 <g_strcmp0@plt+0x6de0>
   1cc30:	add	r0, r0, #4
   1cc34:	bl	153a0 <g_strdup@plt>
   1cc38:	mov	r6, r0
   1cc3c:	cmp	r6, #0
   1cc40:	add	r5, r5, #1
   1cc44:	clz	r3, r7
   1cc48:	lsr	r3, r3, #5
   1cc4c:	moveq	r3, #1
   1cc50:	cmp	sl, r5
   1cc54:	beq	1ccb4 <g_strcmp0@plt+0x6e34>
   1cc58:	cmp	r3, #0
   1cc5c:	beq	1cd00 <g_strcmp0@plt+0x6e80>
   1cc60:	mov	r1, r9
   1cc64:	ldr	r0, [r4, #4]!
   1cc68:	bl	1561c <g_str_has_prefix@plt>
   1cc6c:	mov	r1, r8
   1cc70:	cmp	r0, #0
   1cc74:	ldr	r0, [r4]
   1cc78:	bne	1cc30 <g_strcmp0@plt+0x6db0>
   1cc7c:	bl	1561c <g_str_has_prefix@plt>
   1cc80:	cmp	r0, #0
   1cc84:	beq	1cc3c <g_strcmp0@plt+0x6dbc>
   1cc88:	ldr	r0, [r4]
   1cc8c:	add	r0, r0, #4
   1cc90:	bl	153a0 <g_strdup@plt>
   1cc94:	mov	r7, r0
   1cc98:	b	1cc3c <g_strcmp0@plt+0x6dbc>
   1cc9c:	ldr	r2, [pc, #424]	; 1ce4c <g_strcmp0@plt+0x6fcc>
   1cca0:	ldr	r1, [pc, #424]	; 1ce50 <g_strcmp0@plt+0x6fd0>
   1cca4:	ldr	r0, [pc, #424]	; 1ce54 <g_strcmp0@plt+0x6fd4>
   1cca8:	add	sp, sp, #44	; 0x2c
   1ccac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccb0:	b	14fd4 <g_return_if_fail_warning@plt>
   1ccb4:	ldr	r0, [sp, #24]
   1ccb8:	str	r3, [sp, #36]	; 0x24
   1ccbc:	bl	15790 <g_strfreev@plt>
   1ccc0:	ldr	r3, [sp, #36]	; 0x24
   1ccc4:	cmp	r3, #0
   1ccc8:	beq	1cd08 <g_strcmp0@plt+0x6e88>
   1cccc:	ldr	r3, [sp, #32]
   1ccd0:	ldr	r2, [pc, #384]	; 1ce58 <g_strcmp0@plt+0x6fd8>
   1ccd4:	mov	r1, #16
   1ccd8:	ldr	r3, [r3]
   1ccdc:	ldr	r0, [pc, #368]	; 1ce54 <g_strcmp0@plt+0x6fd4>
   1cce0:	bl	151f0 <g_log@plt>
   1cce4:	mov	r0, fp
   1cce8:	mov	r1, #0
   1ccec:	bl	19574 <g_strcmp0@plt+0x36f4>
   1ccf0:	ldr	r0, [sp, #28]
   1ccf4:	add	sp, sp, #44	; 0x2c
   1ccf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccfc:	b	15790 <g_strfreev@plt>
   1cd00:	ldr	r0, [sp, #24]
   1cd04:	bl	15790 <g_strfreev@plt>
   1cd08:	ldr	r3, [pc, #304]	; 1ce40 <g_strcmp0@plt+0x6fc0>
   1cd0c:	mov	ip, #0
   1cd10:	mov	r1, r3
   1cd14:	mov	r2, r7
   1cd18:	str	ip, [sp]
   1cd1c:	mov	r0, r6
   1cd20:	bl	15a9c <g_strconcat@plt>
   1cd24:	mvn	r1, #0
   1cd28:	mov	r5, r0
   1cd2c:	bl	15868 <g_ascii_strdown@plt>
   1cd30:	mov	r4, r0
   1cd34:	mov	r0, r5
   1cd38:	bl	15874 <g_free@plt>
   1cd3c:	ldrb	r3, [r4]
   1cd40:	cmp	r3, #0
   1cd44:	movne	r2, r4
   1cd48:	movne	r1, #95	; 0x5f
   1cd4c:	beq	1cd64 <g_strcmp0@plt+0x6ee4>
   1cd50:	cmp	r3, #32
   1cd54:	strbeq	r1, [r2]
   1cd58:	ldrb	r3, [r2, #1]!
   1cd5c:	cmp	r3, #0
   1cd60:	bne	1cd50 <g_strcmp0@plt+0x6ed0>
   1cd64:	mov	r0, r4
   1cd68:	bl	153a0 <g_strdup@plt>
   1cd6c:	ldr	r6, [sp, #28]
   1cd70:	mov	r5, #0
   1cd74:	str	r0, [r6]
   1cd78:	mov	r0, r4
   1cd7c:	bl	15874 <g_free@plt>
   1cd80:	mov	r2, #4
   1cd84:	mov	r1, #2
   1cd88:	mov	r0, r6
   1cd8c:	bl	15b20 <g_realloc_n@plt>
   1cd90:	ldr	r3, [fp, #12]
   1cd94:	ldr	r4, [r3, #8]
   1cd98:	str	r5, [r0, #4]
   1cd9c:	mov	r6, r0
   1cda0:	str	r0, [sp, #28]
   1cda4:	bl	15298 <pk_client_get_type@plt>
   1cda8:	mov	r1, r0
   1cdac:	mov	r0, r4
   1cdb0:	bl	15148 <g_type_check_instance_cast@plt>
   1cdb4:	mvn	r3, #0
   1cdb8:	mov	r2, #16
   1cdbc:	mov	r1, #18
   1cdc0:	mov	r4, r0
   1cdc4:	mov	r0, #3
   1cdc8:	bl	15718 <pk_bitfield_from_enums@plt>
   1cdcc:	ldr	r2, [pc, #136]	; 1ce5c <g_strcmp0@plt+0x6fdc>
   1cdd0:	ldr	r3, [pc, #136]	; 1ce60 <g_strcmp0@plt+0x6fe0>
   1cdd4:	str	r2, [sp, #16]
   1cdd8:	str	r3, [sp, #8]
   1cddc:	str	r5, [sp, #4]
   1cde0:	str	r6, [sp]
   1cde4:	str	fp, [sp, #20]
   1cde8:	str	fp, [sp, #12]
   1cdec:	mov	r2, r0
   1cdf0:	mov	r3, r1
   1cdf4:	mov	r0, r4
   1cdf8:	bl	150ac <pk_client_what_provides_async@plt>
   1cdfc:	ldr	r0, [sp, #28]
   1ce00:	add	sp, sp, #44	; 0x2c
   1ce04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce08:	b	15790 <g_strfreev@plt>
   1ce0c:	ldr	r0, [sp, #24]
   1ce10:	bl	15790 <g_strfreev@plt>
   1ce14:	b	1cccc <g_strcmp0@plt+0x6e4c>
   1ce18:	ldr	r0, [r3, #36]	; 0x24
   1ce1c:	bl	22324 <g_strcmp0@plt+0xc4a4>
   1ce20:	b	1cbc4 <g_strcmp0@plt+0x6d44>
   1ce24:	ldr	r2, [pc, #56]	; 1ce64 <g_strcmp0@plt+0x6fe4>
   1ce28:	b	1cca0 <g_strcmp0@plt+0x6e20>
   1ce2c:	mov	r0, #4
   1ce30:	bl	15ca0 <g_malloc0@plt>
   1ce34:	str	r0, [sp, #28]
   1ce38:	b	1cbec <g_strcmp0@plt+0x6d6c>
   1ce3c:	andeq	sl, r2, r0, lsl #9
   1ce40:	andeq	sl, r2, ip, lsr #29
   1ce44:			; <UNDEFINED> instruction: 0x0002aeb0
   1ce48:			; <UNDEFINED> instruction: 0x0002aeb8
   1ce4c:	andeq	sl, r2, r8, lsl #2
   1ce50:	andeq	r9, r2, r0, lsl #12
   1ce54:	andeq	r8, r2, ip, lsl #29
   1ce58:	andeq	sl, r2, r0, asr #29
   1ce5c:	andeq	r9, r1, r8, lsl #24
   1ce60:	andeq	sl, r1, r0, ror #5
   1ce64:	muleq	r2, r8, lr
   1ce68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ce6c:	mov	r5, r0
   1ce70:	sub	sp, sp, #24
   1ce74:	mov	r9, r1
   1ce78:	mov	r6, r2
   1ce7c:	mov	r4, r3
   1ce80:	bl	19f8c <g_strcmp0@plt+0x410c>
   1ce84:	cmp	r5, #0
   1ce88:	beq	1d09c <g_strcmp0@plt+0x721c>
   1ce8c:	ldr	r3, [r5]
   1ce90:	cmp	r3, #0
   1ce94:	beq	1cea4 <g_strcmp0@plt+0x7024>
   1ce98:	ldr	r3, [r3]
   1ce9c:	cmp	r3, r0
   1cea0:	beq	1ceb8 <g_strcmp0@plt+0x7038>
   1cea4:	mov	r1, r0
   1cea8:	mov	r0, r5
   1ceac:	bl	159dc <g_type_check_instance_is_a@plt>
   1ceb0:	cmp	r0, #0
   1ceb4:	beq	1d09c <g_strcmp0@plt+0x721c>
   1ceb8:	cmp	r9, #0
   1cebc:	beq	1d0c8 <g_strcmp0@plt+0x7248>
   1cec0:	ldr	r3, [r5, #12]
   1cec4:	ldr	r2, [r3, #44]	; 0x2c
   1cec8:	str	r6, [r3, #116]	; 0x74
   1cecc:	cmp	r2, #0
   1ced0:	str	r4, [r3, #120]	; 0x78
   1ced4:	beq	1d0b4 <g_strcmp0@plt+0x7234>
   1ced8:	ldr	r0, [pc, #588]	; 1d12c <g_strcmp0@plt+0x72ac>
   1cedc:	bl	15100 <g_string_new@plt>
   1cee0:	mov	r6, r0
   1cee4:	mov	r0, r9
   1cee8:	bl	157a8 <g_strv_length@plt>
   1ceec:	cmp	r0, #1
   1cef0:	mov	sl, r0
   1cef4:	beq	1d0d0 <g_strcmp0@plt+0x7250>
   1cef8:	cmp	r0, #0
   1cefc:	beq	1cf24 <g_strcmp0@plt+0x70a4>
   1cf00:	sub	r4, r9, #4
   1cf04:	ldr	r8, [pc, #548]	; 1d130 <g_strcmp0@plt+0x72b0>
   1cf08:	add	r7, r4, r0, lsl #2
   1cf0c:	ldr	r2, [r4, #4]!
   1cf10:	mov	r1, r8
   1cf14:	mov	r0, r6
   1cf18:	bl	15da8 <g_string_append_printf@plt>
   1cf1c:	cmp	r7, r4
   1cf20:	bne	1cf0c <g_strcmp0@plt+0x708c>
   1cf24:	mov	r0, r6
   1cf28:	mov	r1, #0
   1cf2c:	bl	15b08 <g_string_free@plt>
   1cf30:	mov	r4, #5
   1cf34:	mov	r3, sl
   1cf38:	ldr	r2, [pc, #500]	; 1d134 <g_strcmp0@plt+0x72b4>
   1cf3c:	ldr	r1, [pc, #500]	; 1d138 <g_strcmp0@plt+0x72b8>
   1cf40:	str	r4, [sp]
   1cf44:	mov	r7, r0
   1cf48:	mov	r0, #0
   1cf4c:	bl	154a8 <dcngettext@plt>
   1cf50:	mov	r3, sl
   1cf54:	ldr	r2, [pc, #480]	; 1d13c <g_strcmp0@plt+0x72bc>
   1cf58:	ldr	r1, [pc, #480]	; 1d140 <g_strcmp0@plt+0x72c0>
   1cf5c:	str	r4, [sp]
   1cf60:	mov	r6, r0
   1cf64:	mov	r0, #0
   1cf68:	bl	154a8 <dcngettext@plt>
   1cf6c:	mov	r1, r6
   1cf70:	mov	r2, r7
   1cf74:	mov	r3, r0
   1cf78:	ldr	r0, [pc, #452]	; 1d144 <g_strcmp0@plt+0x72c4>
   1cf7c:	bl	15490 <g_strdup_printf@plt>
   1cf80:	ldr	r3, [r5, #12]
   1cf84:	mov	r6, r0
   1cf88:	ldr	r0, [r3, #72]	; 0x48
   1cf8c:	str	r4, [sp]
   1cf90:	cmp	r0, #0
   1cf94:	mov	r3, sl
   1cf98:	beq	1d0e4 <g_strcmp0@plt+0x7264>
   1cf9c:	ldr	r2, [pc, #420]	; 1d148 <g_strcmp0@plt+0x72c8>
   1cfa0:	ldr	r1, [pc, #420]	; 1d14c <g_strcmp0@plt+0x72cc>
   1cfa4:	mov	r0, #0
   1cfa8:	bl	154a8 <dcngettext@plt>
   1cfac:	ldr	r3, [r5, #12]
   1cfb0:	ldr	r1, [r3, #72]	; 0x48
   1cfb4:	bl	15490 <g_strdup_printf@plt>
   1cfb8:	mov	r4, r0
   1cfbc:	mov	r2, #5
   1cfc0:	ldr	r1, [pc, #392]	; 1d150 <g_strcmp0@plt+0x72d0>
   1cfc4:	mov	r0, #0
   1cfc8:	bl	15880 <dcgettext@plt>
   1cfcc:	mov	r2, r6
   1cfd0:	mov	r1, r4
   1cfd4:	mov	r3, r0
   1cfd8:	mov	r0, r5
   1cfdc:	bl	19ec8 <g_strcmp0@plt+0x4048>
   1cfe0:	mov	r7, r0
   1cfe4:	mov	r0, r4
   1cfe8:	bl	15874 <g_free@plt>
   1cfec:	mov	r0, r6
   1cff0:	bl	15874 <g_free@plt>
   1cff4:	cmp	r7, #0
   1cff8:	beq	1d0fc <g_strcmp0@plt+0x727c>
   1cffc:	ldr	r3, [r5, #12]
   1d000:	mov	r2, #5
   1d004:	ldr	r1, [pc, #328]	; 1d154 <g_strcmp0@plt+0x72d4>
   1d008:	mov	r0, #0
   1d00c:	ldr	r4, [r3, #36]	; 0x24
   1d010:	bl	15880 <dcgettext@plt>
   1d014:	mov	r1, r0
   1d018:	mov	r0, r4
   1d01c:	bl	210e0 <g_strcmp0@plt+0xb260>
   1d020:	ldr	r3, [r5, #12]
   1d024:	mov	r1, #1
   1d028:	ldr	r0, [r3, #36]	; 0x24
   1d02c:	bl	21ea4 <g_strcmp0@plt+0xc024>
   1d030:	ldr	r3, [r5, #12]
   1d034:	ldr	r4, [r3, #8]
   1d038:	bl	15298 <pk_client_get_type@plt>
   1d03c:	mov	r1, r0
   1d040:	mov	r0, r4
   1d044:	bl	15148 <g_type_check_instance_cast@plt>
   1d048:	mvn	r3, #0
   1d04c:	mov	r2, #2
   1d050:	mov	r1, #16
   1d054:	mov	r4, r0
   1d058:	mov	r0, #18
   1d05c:	bl	15718 <pk_bitfield_from_enums@plt>
   1d060:	ldr	ip, [pc, #240]	; 1d158 <g_strcmp0@plt+0x72d8>
   1d064:	ldr	r2, [pc, #240]	; 1d15c <g_strcmp0@plt+0x72dc>
   1d068:	mov	r3, #0
   1d06c:	str	r2, [sp, #8]
   1d070:	str	r3, [sp, #4]
   1d074:	str	r5, [sp, #20]
   1d078:	str	r5, [sp, #12]
   1d07c:	str	r9, [sp]
   1d080:	str	ip, [sp, #16]
   1d084:	mov	r2, r0
   1d088:	mov	r3, r1
   1d08c:	mov	r0, r4
   1d090:	bl	15634 <pk_client_search_files_async@plt>
   1d094:	add	sp, sp, #24
   1d098:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d09c:	ldr	r2, [pc, #188]	; 1d160 <g_strcmp0@plt+0x72e0>
   1d0a0:	ldr	r1, [pc, #188]	; 1d164 <g_strcmp0@plt+0x72e4>
   1d0a4:	ldr	r0, [pc, #188]	; 1d168 <g_strcmp0@plt+0x72e8>
   1d0a8:	add	sp, sp, #24
   1d0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d0b0:	b	14fd4 <g_return_if_fail_warning@plt>
   1d0b4:	ldr	r2, [pc, #176]	; 1d16c <g_strcmp0@plt+0x72ec>
   1d0b8:	mov	r1, #128	; 0x80
   1d0bc:	ldr	r0, [pc, #164]	; 1d168 <g_strcmp0@plt+0x72e8>
   1d0c0:	bl	151f0 <g_log@plt>
   1d0c4:	b	1cffc <g_strcmp0@plt+0x717c>
   1d0c8:	ldr	r2, [pc, #160]	; 1d170 <g_strcmp0@plt+0x72f0>
   1d0cc:	b	1d0a0 <g_strcmp0@plt+0x7220>
   1d0d0:	ldr	r2, [r9]
   1d0d4:	ldr	r1, [pc, #152]	; 1d174 <g_strcmp0@plt+0x72f4>
   1d0d8:	mov	r0, r6
   1d0dc:	bl	15da8 <g_string_append_printf@plt>
   1d0e0:	b	1cf24 <g_strcmp0@plt+0x70a4>
   1d0e4:	ldr	r2, [pc, #140]	; 1d178 <g_strcmp0@plt+0x72f8>
   1d0e8:	ldr	r1, [pc, #140]	; 1d17c <g_strcmp0@plt+0x72fc>
   1d0ec:	bl	154a8 <dcngettext@plt>
   1d0f0:	bl	153a0 <g_strdup@plt>
   1d0f4:	mov	r4, r0
   1d0f8:	b	1cfbc <g_strcmp0@plt+0x713c>
   1d0fc:	bl	16fc0 <g_strcmp0@plt+0x1140>
   1d100:	ldr	r2, [pc, #120]	; 1d180 <g_strcmp0@plt+0x7300>
   1d104:	mov	r1, #17
   1d108:	bl	15568 <g_error_new@plt>
   1d10c:	mov	r4, r0
   1d110:	mov	r1, r0
   1d114:	mov	r0, r5
   1d118:	bl	17748 <g_strcmp0@plt+0x18c8>
   1d11c:	mov	r0, r4
   1d120:	add	sp, sp, #24
   1d124:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d128:	b	15064 <g_error_free@plt>
   1d12c:	muleq	r2, r4, r6
   1d130:	andeq	sl, r2, ip, lsr #5
   1d134:	andeq	sl, r2, r4, ror #29
   1d138:	andeq	sl, r2, ip, lsl #30
   1d13c:	andeq	sl, r2, r0, lsr pc
   1d140:	andeq	sl, r2, r8, asr pc
   1d144:	andeq	sl, r2, r8, asr #10
   1d148:	andeq	sl, r2, r0, lsl #31
   1d14c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1d150:	strdeq	sl, [r2], -ip
   1d154:	ldrdeq	sl, [r2], -r4
   1d158:	andeq	r9, r1, r8, ror r2
   1d15c:	andeq	sl, r1, r0, ror #5
   1d160:	andeq	sl, r2, r8, lsl #2
   1d164:	andeq	r9, r2, r8, lsr #12
   1d168:	andeq	r8, r2, ip, lsl #29
   1d16c:	andeq	r9, r2, r8, lsl #23
   1d170:	muleq	r2, r8, r4
   1d174:			; <UNDEFINED> instruction: 0x0002a2b0
   1d178:			; <UNDEFINED> instruction: 0x0002afb8
   1d17c:	ldrdeq	sl, [r2], -r8
   1d180:	andeq	sl, r2, r8, ror #8
   1d184:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d188:	sub	sp, sp, #36	; 0x24
   1d18c:	ldr	r6, [pc, #364]	; 1d300 <g_strcmp0@plt+0x7480>
   1d190:	mvn	r2, #0
   1d194:	mov	r4, r0
   1d198:	ldr	r3, [r6]
   1d19c:	mov	r0, r1
   1d1a0:	mov	r5, #0
   1d1a4:	mov	r7, r1
   1d1a8:	ldr	r1, [pc, #340]	; 1d304 <g_strcmp0@plt+0x7484>
   1d1ac:	str	r3, [sp, #28]
   1d1b0:	str	r5, [sp, #24]
   1d1b4:	bl	1555c <g_strsplit@plt>
   1d1b8:	ldr	r3, [r4, #12]
   1d1bc:	ldr	r9, [r3, #8]
   1d1c0:	mov	r8, r0
   1d1c4:	bl	15298 <pk_client_get_type@plt>
   1d1c8:	mov	r1, r0
   1d1cc:	mov	r0, r9
   1d1d0:	bl	15148 <g_type_check_instance_cast@plt>
   1d1d4:	ldr	r2, [pc, #300]	; 1d308 <g_strcmp0@plt+0x7488>
   1d1d8:	add	r3, sp, #24
   1d1dc:	str	r2, [sp, #8]
   1d1e0:	str	r3, [sp, #16]
   1d1e4:	str	r5, [sp, #4]
   1d1e8:	str	r4, [sp, #12]
   1d1ec:	str	r8, [sp]
   1d1f0:	mov	r2, #4
   1d1f4:	mov	r3, #0
   1d1f8:	bl	151b4 <pk_client_search_files@plt>
   1d1fc:	subs	r9, r0, #0
   1d200:	beq	1d2c4 <g_strcmp0@plt+0x7444>
   1d204:	bl	14f80 <pk_results_get_package_array@plt>
   1d208:	mov	r5, r0
   1d20c:	ldr	r0, [r0, #4]
   1d210:	cmp	r0, #0
   1d214:	beq	1d2a4 <g_strcmp0@plt+0x7424>
   1d218:	cmp	r0, #1
   1d21c:	bne	1d290 <g_strcmp0@plt+0x7410>
   1d220:	ldr	r3, [r5]
   1d224:	ldr	r0, [r3]
   1d228:	bl	15010 <pk_package_get_id@plt>
   1d22c:	bl	15124 <pk_package_id_split@plt>
   1d230:	mov	r4, r0
   1d234:	ldr	r0, [r0]
   1d238:	bl	153a0 <g_strdup@plt>
   1d23c:	ldr	r2, [pc, #200]	; 1d30c <g_strcmp0@plt+0x748c>
   1d240:	mov	r1, #128	; 0x80
   1d244:	mov	r7, r0
   1d248:	mov	r3, r0
   1d24c:	ldr	r0, [pc, #188]	; 1d310 <g_strcmp0@plt+0x7490>
   1d250:	bl	151f0 <g_log@plt>
   1d254:	mov	r0, r8
   1d258:	bl	15790 <g_strfreev@plt>
   1d25c:	mov	r0, r4
   1d260:	bl	15790 <g_strfreev@plt>
   1d264:	mov	r0, r5
   1d268:	bl	15c7c <g_ptr_array_unref@plt>
   1d26c:	mov	r0, r9
   1d270:	bl	15b5c <g_object_unref@plt>
   1d274:	ldr	r2, [sp, #28]
   1d278:	ldr	r3, [r6]
   1d27c:	mov	r0, r7
   1d280:	cmp	r2, r3
   1d284:	bne	1d2fc <g_strcmp0@plt+0x747c>
   1d288:	add	sp, sp, #36	; 0x24
   1d28c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d290:	ldr	r2, [pc, #124]	; 1d314 <g_strcmp0@plt+0x7494>
   1d294:	mov	r1, #16
   1d298:	ldr	r0, [pc, #112]	; 1d310 <g_strcmp0@plt+0x7490>
   1d29c:	bl	151f0 <g_log@plt>
   1d2a0:	b	1d220 <g_strcmp0@plt+0x73a0>
   1d2a4:	mov	r3, r7
   1d2a8:	mov	r4, r0
   1d2ac:	ldr	r2, [pc, #100]	; 1d318 <g_strcmp0@plt+0x7498>
   1d2b0:	mov	r1, #128	; 0x80
   1d2b4:	ldr	r0, [pc, #84]	; 1d310 <g_strcmp0@plt+0x7490>
   1d2b8:	bl	151f0 <g_log@plt>
   1d2bc:	mov	r7, r4
   1d2c0:	b	1d254 <g_strcmp0@plt+0x73d4>
   1d2c4:	ldr	r3, [sp, #24]
   1d2c8:	ldr	r2, [pc, #76]	; 1d31c <g_strcmp0@plt+0x749c>
   1d2cc:	mov	r1, #16
   1d2d0:	ldr	r3, [r3, #8]
   1d2d4:	ldr	r0, [pc, #52]	; 1d310 <g_strcmp0@plt+0x7490>
   1d2d8:	bl	151f0 <g_log@plt>
   1d2dc:	ldr	r0, [sp, #24]
   1d2e0:	bl	15064 <g_error_free@plt>
   1d2e4:	mov	r0, r8
   1d2e8:	bl	15790 <g_strfreev@plt>
   1d2ec:	mov	r0, r9
   1d2f0:	bl	15790 <g_strfreev@plt>
   1d2f4:	mov	r7, r9
   1d2f8:	b	1d274 <g_strcmp0@plt+0x73f4>
   1d2fc:	bl	157f0 <__stack_chk_fail@plt>
   1d300:	andeq	r0, r4, r0, asr lr
   1d304:	andeq	sl, r2, ip, asr #4
   1d308:	andeq	sl, r1, r0, ror #5
   1d30c:	andeq	fp, r2, r4, asr r0
   1d310:	andeq	r8, r2, ip, lsl #29
   1d314:	andeq	fp, r2, r8, lsr r0
   1d318:	andeq	fp, r2, r4
   1d31c:	andeq	r9, r2, ip, asr #16
   1d320:	push	{r4, r5, r6, lr}
   1d324:	mov	r2, #0
   1d328:	mov	r6, r0
   1d32c:	ldr	r1, [pc, #124]	; 1d3b0 <g_strcmp0@plt+0x7530>
   1d330:	ldr	r0, [pc, #124]	; 1d3b4 <g_strcmp0@plt+0x7534>
   1d334:	bl	15280 <g_build_filename@plt>
   1d338:	mov	r4, r0
   1d33c:	mov	r1, r0
   1d340:	mov	r0, r6
   1d344:	bl	15e80 <g_strcmp0@plt>
   1d348:	subs	r5, r0, #0
   1d34c:	mov	r0, r4
   1d350:	bne	1d380 <g_strcmp0@plt+0x7500>
   1d354:	bl	15874 <g_free@plt>
   1d358:	mov	r2, r5
   1d35c:	ldr	r1, [pc, #84]	; 1d3b8 <g_strcmp0@plt+0x7538>
   1d360:	ldr	r0, [pc, #76]	; 1d3b4 <g_strcmp0@plt+0x7534>
   1d364:	bl	15280 <g_build_filename@plt>
   1d368:	mov	r4, #1
   1d36c:	mov	r5, r0
   1d370:	mov	r0, r5
   1d374:	bl	15874 <g_free@plt>
   1d378:	mov	r0, r4
   1d37c:	pop	{r4, r5, r6, pc}
   1d380:	bl	15874 <g_free@plt>
   1d384:	mov	r2, #0
   1d388:	ldr	r1, [pc, #40]	; 1d3b8 <g_strcmp0@plt+0x7538>
   1d38c:	ldr	r0, [pc, #32]	; 1d3b4 <g_strcmp0@plt+0x7534>
   1d390:	bl	15280 <g_build_filename@plt>
   1d394:	mov	r1, r0
   1d398:	mov	r5, r0
   1d39c:	mov	r0, r6
   1d3a0:	bl	15e80 <g_strcmp0@plt>
   1d3a4:	clz	r4, r0
   1d3a8:	lsr	r4, r4, #5
   1d3ac:	b	1d370 <g_strcmp0@plt+0x74f0>
   1d3b0:	andeq	fp, r2, r4, rrx
   1d3b4:	andeq	fp, r2, r0, lsl #1
   1d3b8:	andeq	fp, r2, r0, lsr #1
   1d3bc:	push	{r4, r5, r6, r7, lr}
   1d3c0:	mov	r4, r0
   1d3c4:	sub	sp, sp, #12
   1d3c8:	mov	r6, r1
   1d3cc:	bl	19f8c <g_strcmp0@plt+0x410c>
   1d3d0:	cmp	r4, #0
   1d3d4:	beq	1d4e8 <g_strcmp0@plt+0x7668>
   1d3d8:	ldr	r3, [r4]
   1d3dc:	cmp	r3, #0
   1d3e0:	beq	1d3f0 <g_strcmp0@plt+0x7570>
   1d3e4:	ldr	r3, [r3]
   1d3e8:	cmp	r3, r0
   1d3ec:	beq	1d404 <g_strcmp0@plt+0x7584>
   1d3f0:	mov	r1, r0
   1d3f4:	mov	r0, r4
   1d3f8:	bl	159dc <g_type_check_instance_is_a@plt>
   1d3fc:	cmp	r0, #0
   1d400:	beq	1d4e8 <g_strcmp0@plt+0x7668>
   1d404:	ldr	r3, [r4, #12]
   1d408:	mov	r5, #0
   1d40c:	ldr	r0, [r3, #80]	; 0x50
   1d410:	bl	15874 <g_free@plt>
   1d414:	ldr	r3, [r4, #12]
   1d418:	ldr	r0, [r3, #72]	; 0x48
   1d41c:	bl	15874 <g_free@plt>
   1d420:	ldr	r3, [r4, #12]
   1d424:	ldr	r0, [r3, #76]	; 0x4c
   1d428:	bl	15874 <g_free@plt>
   1d42c:	mov	r0, r6
   1d430:	ldr	r7, [r4, #12]
   1d434:	bl	153a0 <g_strdup@plt>
   1d438:	ldr	r3, [r4, #12]
   1d43c:	str	r0, [r7, #80]	; 0x50
   1d440:	str	r5, [r3, #72]	; 0x48
   1d444:	str	r5, [r3, #76]	; 0x4c
   1d448:	mov	r0, r6
   1d44c:	bl	1d320 <g_strcmp0@plt+0x74a0>
   1d450:	cmp	r0, r5
   1d454:	beq	1d468 <g_strcmp0@plt+0x75e8>
   1d458:	ldr	r3, [r4, #12]
   1d45c:	ldr	r3, [r3]
   1d460:	cmp	r3, r5
   1d464:	bne	1d504 <g_strcmp0@plt+0x7684>
   1d468:	mov	r1, r6
   1d46c:	mov	r0, r4
   1d470:	bl	1d184 <g_strcmp0@plt+0x7304>
   1d474:	ldr	r2, [pc, #240]	; 1d56c <g_strcmp0@plt+0x76ec>
   1d478:	mov	r1, #128	; 0x80
   1d47c:	mov	r5, r0
   1d480:	mov	r3, r0
   1d484:	ldr	r0, [pc, #228]	; 1d570 <g_strcmp0@plt+0x76f0>
   1d488:	bl	151f0 <g_log@plt>
   1d48c:	cmp	r5, #0
   1d490:	beq	1d4a4 <g_strcmp0@plt+0x7624>
   1d494:	mov	r0, r5
   1d498:	ldr	r7, [r4, #12]
   1d49c:	bl	153a0 <g_strdup@plt>
   1d4a0:	str	r0, [r7, #72]	; 0x48
   1d4a4:	ldr	r3, [r4, #12]
   1d4a8:	ldr	r3, [r3, #72]	; 0x48
   1d4ac:	cmp	r3, #0
   1d4b0:	beq	1d544 <g_strcmp0@plt+0x76c4>
   1d4b4:	mov	r0, r5
   1d4b8:	bl	15874 <g_free@plt>
   1d4bc:	ldr	r0, [r4, #12]
   1d4c0:	ldr	r2, [pc, #172]	; 1d574 <g_strcmp0@plt+0x76f4>
   1d4c4:	mov	r1, #128	; 0x80
   1d4c8:	ldr	r3, [r0, #72]	; 0x48
   1d4cc:	ldr	r0, [r0, #76]	; 0x4c
   1d4d0:	str	r0, [sp]
   1d4d4:	ldr	r0, [pc, #148]	; 1d570 <g_strcmp0@plt+0x76f0>
   1d4d8:	bl	151f0 <g_log@plt>
   1d4dc:	mov	r0, #1
   1d4e0:	add	sp, sp, #12
   1d4e4:	pop	{r4, r5, r6, r7, pc}
   1d4e8:	ldr	r2, [pc, #136]	; 1d578 <g_strcmp0@plt+0x76f8>
   1d4ec:	ldr	r1, [pc, #136]	; 1d57c <g_strcmp0@plt+0x76fc>
   1d4f0:	ldr	r0, [pc, #120]	; 1d570 <g_strcmp0@plt+0x76f0>
   1d4f4:	bl	14fd4 <g_return_if_fail_warning@plt>
   1d4f8:	mov	r0, #0
   1d4fc:	add	sp, sp, #12
   1d500:	pop	{r4, r5, r6, r7, pc}
   1d504:	ldr	r2, [pc, #116]	; 1d580 <g_strcmp0@plt+0x7700>
   1d508:	mov	r1, #128	; 0x80
   1d50c:	ldr	r0, [pc, #92]	; 1d570 <g_strcmp0@plt+0x76f0>
   1d510:	bl	151f0 <g_log@plt>
   1d514:	bl	20368 <g_strcmp0@plt+0xa4e8>
   1d518:	ldr	r3, [r4, #12]
   1d51c:	ldr	r1, [r3]
   1d520:	mov	r6, r0
   1d524:	bl	1fe8c <g_strcmp0@plt+0xa00c>
   1d528:	mov	r0, r6
   1d52c:	ldr	r7, [r4, #12]
   1d530:	bl	20174 <g_strcmp0@plt+0xa2f4>
   1d534:	str	r0, [r7, #72]	; 0x48
   1d538:	mov	r0, r6
   1d53c:	bl	15b5c <g_object_unref@plt>
   1d540:	b	1d4b4 <g_strcmp0@plt+0x7634>
   1d544:	mov	r3, r5
   1d548:	ldr	r2, [pc, #52]	; 1d584 <g_strcmp0@plt+0x7704>
   1d54c:	mov	r1, #128	; 0x80
   1d550:	ldr	r0, [pc, #24]	; 1d570 <g_strcmp0@plt+0x76f0>
   1d554:	bl	151f0 <g_log@plt>
   1d558:	mov	r0, r6
   1d55c:	ldr	r6, [r4, #12]
   1d560:	bl	15250 <g_path_get_basename@plt>
   1d564:	str	r0, [r6, #72]	; 0x48
   1d568:	b	1d4b4 <g_strcmp0@plt+0x7634>
   1d56c:	andeq	fp, r2, r4, asr r0
   1d570:	andeq	r8, r2, ip, lsl #29
   1d574:	andeq	fp, r2, ip, lsl #2
   1d578:	andeq	sl, r2, r8, lsl #2
   1d57c:	andeq	r9, r2, r0, asr r6
   1d580:	strheq	fp, [r2], -r8
   1d584:	ldrdeq	fp, [r2], -ip
   1d588:	push	{r4, lr}
   1d58c:	bl	19f8c <g_strcmp0@plt+0x410c>
   1d590:	mov	r1, #0
   1d594:	bl	14ef0 <g_object_new@plt>
   1d598:	mov	r4, r0
   1d59c:	bl	19f8c <g_strcmp0@plt+0x410c>
   1d5a0:	mov	r1, r0
   1d5a4:	mov	r0, r4
   1d5a8:	pop	{r4, lr}
   1d5ac:	b	15148 <g_type_check_instance_cast@plt>
   1d5b0:	bx	lr
   1d5b4:	push	{r4, r5, r6, r7, r8, lr}
   1d5b8:	sub	sp, sp, #272	; 0x110
   1d5bc:	ldr	r7, [pc, #312]	; 1d6fc <g_strcmp0@plt+0x787c>
   1d5c0:	mov	r4, r0
   1d5c4:	add	r0, sp, #8
   1d5c8:	ldr	r3, [r7]
   1d5cc:	mov	r6, r1
   1d5d0:	mov	r8, r2
   1d5d4:	str	r3, [sp, #268]	; 0x10c
   1d5d8:	bl	15d0c <time@plt>
   1d5dc:	add	r0, sp, #8
   1d5e0:	bl	15640 <localtime@plt>
   1d5e4:	ldr	r2, [pc, #276]	; 1d700 <g_strcmp0@plt+0x7880>
   1d5e8:	mov	r1, #254	; 0xfe
   1d5ec:	mov	r3, r0
   1d5f0:	add	r0, sp, #12
   1d5f4:	bl	153c4 <strftime@plt>
   1d5f8:	ldr	r3, [pc, #260]	; 1d704 <g_strcmp0@plt+0x7884>
   1d5fc:	ldr	r3, [r3]
   1d600:	cmp	r3, #0
   1d604:	bne	1d63c <g_strcmp0@plt+0x77bc>
   1d608:	cmp	r6, #128	; 0x80
   1d60c:	mov	r3, r8
   1d610:	mov	r2, r4
   1d614:	add	r1, sp, #12
   1d618:	ldreq	r0, [pc, #232]	; 1d708 <g_strcmp0@plt+0x7888>
   1d61c:	ldrne	r0, [pc, #232]	; 1d70c <g_strcmp0@plt+0x788c>
   1d620:	bl	159e8 <g_print@plt>
   1d624:	ldr	r2, [sp, #268]	; 0x10c
   1d628:	ldr	r3, [r7]
   1d62c:	cmp	r2, r3
   1d630:	bne	1d6f8 <g_strcmp0@plt+0x7878>
   1d634:	add	sp, sp, #272	; 0x110
   1d638:	pop	{r4, r5, r6, r7, r8, pc}
   1d63c:	add	r3, sp, #12
   1d640:	mov	r2, #32
   1d644:	mov	r1, #27
   1d648:	ldr	r0, [pc, #192]	; 1d710 <g_strcmp0@plt+0x7890>
   1d64c:	bl	159e8 <g_print@plt>
   1d650:	ldr	r1, [pc, #188]	; 1d714 <g_strcmp0@plt+0x7894>
   1d654:	mov	r0, r4
   1d658:	bl	15e80 <g_strcmp0@plt>
   1d65c:	cmp	r0, #0
   1d660:	movne	r3, #0
   1d664:	movne	r1, #27
   1d668:	moveq	r1, #27
   1d66c:	streq	r0, [sp, #4]
   1d670:	moveq	r3, r4
   1d674:	stmne	sp, {r1, r3}
   1d678:	streq	r1, [sp]
   1d67c:	movne	r3, r4
   1d680:	moveq	r2, #34	; 0x22
   1d684:	movne	r2, #36	; 0x24
   1d688:	ldr	r0, [pc, #136]	; 1d718 <g_strcmp0@plt+0x7898>
   1d68c:	bl	159e8 <g_print@plt>
   1d690:	mov	r0, r4
   1d694:	bl	15b68 <strlen@plt>
   1d698:	cmp	r0, #19
   1d69c:	mov	r4, r0
   1d6a0:	bhi	1d6bc <g_strcmp0@plt+0x783c>
   1d6a4:	ldr	r5, [pc, #112]	; 1d71c <g_strcmp0@plt+0x789c>
   1d6a8:	add	r4, r4, #1
   1d6ac:	mov	r0, r5
   1d6b0:	bl	159e8 <g_print@plt>
   1d6b4:	cmp	r4, #20
   1d6b8:	bne	1d6a8 <g_strcmp0@plt+0x7828>
   1d6bc:	sub	r6, r6, #4
   1d6c0:	bics	r6, r6, #4
   1d6c4:	movne	r2, #0
   1d6c8:	movne	r1, #27
   1d6cc:	moveq	r1, #27
   1d6d0:	stmne	sp, {r1, r2}
   1d6d4:	streq	r6, [sp, #4]
   1d6d8:	moveq	r3, r8
   1d6dc:	streq	r1, [sp]
   1d6e0:	moveq	r2, #31
   1d6e4:	movne	r3, r8
   1d6e8:	movne	r2, #34	; 0x22
   1d6ec:	ldr	r0, [pc, #44]	; 1d720 <g_strcmp0@plt+0x78a0>
   1d6f0:	bl	159e8 <g_print@plt>
   1d6f4:	b	1d624 <g_strcmp0@plt+0x77a4>
   1d6f8:	bl	157f0 <__stack_chk_fail@plt>
   1d6fc:	andeq	r0, r4, r0, asr lr
   1d700:	andeq	fp, r2, r4, lsr #2
   1d704:			; <UNDEFINED> instruction: 0x000418bc
   1d708:	andeq	fp, r2, r0, lsr r1
   1d70c:	andeq	fp, r2, ip, lsr r1
   1d710:	andeq	fp, r2, r0, asr r1
   1d714:	andeq	r8, r2, ip, lsl #29
   1d718:	andeq	fp, r2, ip, asr r1
   1d71c:	andeq	fp, r2, ip, ror #2
   1d720:	andeq	fp, r2, r0, ror r1
   1d724:	push	{r4, r5, lr}
   1d728:	sub	sp, sp, #68	; 0x44
   1d72c:	ldr	r4, [pc, #104]	; 1d79c <g_strcmp0@plt+0x791c>
   1d730:	mov	r5, r0
   1d734:	mov	r2, #52	; 0x34
   1d738:	ldr	r3, [r4]
   1d73c:	mov	r1, #0
   1d740:	add	r0, sp, #8
   1d744:	str	r3, [sp, #60]	; 0x3c
   1d748:	bl	153dc <memset@plt>
   1d74c:	ldr	r2, [pc, #76]	; 1d7a0 <g_strcmp0@plt+0x7920>
   1d750:	ldr	r1, [pc, #76]	; 1d7a4 <g_strcmp0@plt+0x7924>
   1d754:	ldr	ip, [pc, #76]	; 1d7a8 <g_strcmp0@plt+0x7928>
   1d758:	mov	r3, #118	; 0x76
   1d75c:	str	r2, [sp, #4]
   1d760:	str	r1, [sp, #20]
   1d764:	mov	r2, #0
   1d768:	mov	r0, r5
   1d76c:	add	r1, sp, #4
   1d770:	strb	r3, [sp, #8]
   1d774:	str	ip, [sp, #24]
   1d778:	bl	15aa8 <g_option_context_add_main_entries@plt>
   1d77c:	ldr	r2, [sp, #60]	; 0x3c
   1d780:	ldr	r3, [r4]
   1d784:	cmp	r2, r3
   1d788:	bne	1d798 <g_strcmp0@plt+0x7918>
   1d78c:	mov	r0, #1
   1d790:	add	sp, sp, #68	; 0x44
   1d794:	pop	{r4, r5, pc}
   1d798:	bl	157f0 <__stack_chk_fail@plt>
   1d79c:	andeq	r0, r4, r0, asr lr
   1d7a0:	andeq	fp, r2, r0, lsl #3
   1d7a4:	andeq	r1, r4, r0, asr #17
   1d7a8:	andeq	fp, r2, r8, lsl #3
   1d7ac:	ldr	r3, [pc, #60]	; 1d7f0 <g_strcmp0@plt+0x7970>
   1d7b0:	ldr	r3, [r3, #4]
   1d7b4:	cmp	r3, #0
   1d7b8:	beq	1d7e4 <g_strcmp0@plt+0x7964>
   1d7bc:	push	{r4, lr}
   1d7c0:	mov	r1, #12
   1d7c4:	mov	r4, r0
   1d7c8:	bl	15bc8 <g_log_set_fatal_mask@plt>
   1d7cc:	mov	r0, r4
   1d7d0:	mov	r3, #0
   1d7d4:	ldr	r2, [pc, #24]	; 1d7f4 <g_strcmp0@plt+0x7974>
   1d7d8:	mov	r1, #156	; 0x9c
   1d7dc:	pop	{r4, lr}
   1d7e0:	b	150e8 <g_log_set_handler@plt>
   1d7e4:	ldr	r2, [pc, #12]	; 1d7f8 <g_strcmp0@plt+0x7978>
   1d7e8:	mov	r1, #144	; 0x90
   1d7ec:	b	150e8 <g_log_set_handler@plt>
   1d7f0:			; <UNDEFINED> instruction: 0x000418bc
   1d7f4:			; <UNDEFINED> instruction: 0x0001d5b4
   1d7f8:			; <UNDEFINED> instruction: 0x0001d5b0
   1d7fc:	push	{lr}		; (str lr, [sp, #-4]!)
   1d800:	sub	sp, sp, #12
   1d804:	ldr	r0, [pc, #88]	; 1d864 <g_strcmp0@plt+0x79e4>
   1d808:	bl	1d7ac <g_strcmp0@plt+0x792c>
   1d80c:	ldr	r3, [pc, #84]	; 1d868 <g_strcmp0@plt+0x79e8>
   1d810:	ldr	r0, [r3]
   1d814:	bl	157d8 <fileno@plt>
   1d818:	bl	15850 <isatty@plt>
   1d81c:	ldr	ip, [pc, #72]	; 1d86c <g_strcmp0@plt+0x79ec>
   1d820:	ldr	r1, [pc, #72]	; 1d870 <g_strcmp0@plt+0x79f0>
   1d824:	ldr	r3, [pc, #72]	; 1d874 <g_strcmp0@plt+0x79f4>
   1d828:	ldr	lr, [ip, #4]
   1d82c:	ldr	r2, [pc, #68]	; 1d878 <g_strcmp0@plt+0x79f8>
   1d830:	cmp	lr, #0
   1d834:	moveq	r3, r1
   1d838:	mov	r1, #128	; 0x80
   1d83c:	sub	lr, r0, #1
   1d840:	clz	lr, lr
   1d844:	lsr	lr, lr, #5
   1d848:	str	lr, [sp]
   1d84c:	ldr	r0, [pc, #16]	; 1d864 <g_strcmp0@plt+0x79e4>
   1d850:	str	lr, [ip]
   1d854:	bl	151f0 <g_log@plt>
   1d858:	mov	r0, #1
   1d85c:	add	sp, sp, #12
   1d860:	pop	{pc}		; (ldr pc, [sp], #4)
   1d864:	andeq	r8, r2, ip, lsl #29
   1d868:	andeq	r1, r4, r4, asr r5
   1d86c:			; <UNDEFINED> instruction: 0x000418bc
   1d870:			; <UNDEFINED> instruction: 0x0002b1bc
   1d874:			; <UNDEFINED> instruction: 0x0002b1b4
   1d878:	andeq	fp, r2, r8, asr #3
   1d87c:	push	{r4, lr}
   1d880:	mov	r2, #5
   1d884:	sub	sp, sp, #8
   1d888:	ldr	r1, [pc, #76]	; 1d8dc <g_strcmp0@plt+0x7a5c>
   1d88c:	mov	r0, #0
   1d890:	bl	15880 <dcgettext@plt>
   1d894:	mov	r2, #5
   1d898:	ldr	r1, [pc, #64]	; 1d8e0 <g_strcmp0@plt+0x7a60>
   1d89c:	mov	r4, r0
   1d8a0:	mov	r0, #0
   1d8a4:	bl	15880 <dcgettext@plt>
   1d8a8:	mov	r3, #0
   1d8ac:	mov	r1, r4
   1d8b0:	str	r3, [sp]
   1d8b4:	mov	r2, r0
   1d8b8:	ldr	r0, [pc, #36]	; 1d8e4 <g_strcmp0@plt+0x7a64>
   1d8bc:	bl	151a8 <g_option_group_new@plt>
   1d8c0:	ldr	r2, [pc, #32]	; 1d8e8 <g_strcmp0@plt+0x7a68>
   1d8c4:	ldr	r1, [pc, #32]	; 1d8ec <g_strcmp0@plt+0x7a6c>
   1d8c8:	mov	r4, r0
   1d8cc:	bl	15364 <g_option_group_set_parse_hooks@plt>
   1d8d0:	mov	r0, r4
   1d8d4:	add	sp, sp, #8
   1d8d8:	pop	{r4, pc}
   1d8dc:	strdeq	fp, [r2], -r0
   1d8e0:	andeq	fp, r2, r4, lsl #4
   1d8e4:	andeq	fp, r2, ip, lsl r2
   1d8e8:	strdeq	sp, [r1], -ip
   1d8ec:	andeq	sp, r1, r4, lsr #14
   1d8f0:	cmp	r0, #3
   1d8f4:	ldrls	pc, [pc, r0, lsl #2]
   1d8f8:	b	1d94c <g_strcmp0@plt+0x7acc>
   1d8fc:	andeq	sp, r1, ip, lsr r9
   1d900:	andeq	sp, r1, ip, lsr #18
   1d904:	andeq	sp, r1, ip, lsl r9
   1d908:	andeq	sp, r1, ip, lsl #18
   1d90c:	mov	r2, #5
   1d910:	ldr	r1, [pc, #80]	; 1d968 <g_strcmp0@plt+0x7ae8>
   1d914:	mov	r0, #0
   1d918:	b	15880 <dcgettext@plt>
   1d91c:	mov	r2, #5
   1d920:	ldr	r1, [pc, #68]	; 1d96c <g_strcmp0@plt+0x7aec>
   1d924:	mov	r0, #0
   1d928:	b	15880 <dcgettext@plt>
   1d92c:	mov	r2, #5
   1d930:	ldr	r1, [pc, #56]	; 1d970 <g_strcmp0@plt+0x7af0>
   1d934:	mov	r0, #0
   1d938:	b	15880 <dcgettext@plt>
   1d93c:	mov	r2, #5
   1d940:	ldr	r1, [pc, #44]	; 1d974 <g_strcmp0@plt+0x7af4>
   1d944:	mov	r0, #0
   1d948:	b	15880 <dcgettext@plt>
   1d94c:	push	{r4, lr}
   1d950:	mov	r1, #16
   1d954:	ldr	r2, [pc, #28]	; 1d978 <g_strcmp0@plt+0x7af8>
   1d958:	ldr	r0, [pc, #28]	; 1d97c <g_strcmp0@plt+0x7afc>
   1d95c:	bl	151f0 <g_log@plt>
   1d960:	mov	r0, #0
   1d964:	pop	{r4, pc}
   1d968:	strdeq	fp, [r2], -ip
   1d96c:	strdeq	fp, [r2], -r8
   1d970:	strdeq	fp, [r2], -r4
   1d974:	andeq	fp, r2, r4, lsl #16
   1d978:	andeq	fp, r2, ip, lsl #16
   1d97c:	andeq	r8, r2, ip, lsl #29
   1d980:	cmp	r0, #67	; 0x43
   1d984:	ldrls	pc, [pc, r0, lsl #2]
   1d988:	b	1dedc <g_strcmp0@plt+0x805c>
   1d98c:	andeq	sp, r1, ip, asr #29
   1d990:			; <UNDEFINED> instruction: 0x0001debc
   1d994:	andeq	sp, r1, ip, lsr #29
   1d998:	muleq	r1, ip, lr
   1d99c:	andeq	sp, r1, ip, lsl #29
   1d9a0:	andeq	sp, r1, ip, ror lr
   1d9a4:	andeq	sp, r1, ip, ror #28
   1d9a8:	andeq	sp, r1, ip, asr lr
   1d9ac:	andeq	sp, r1, ip, asr #28
   1d9b0:	andeq	sp, r1, ip, lsr lr
   1d9b4:	andeq	sp, r1, ip, lsr #28
   1d9b8:	andeq	sp, r1, ip, lsl lr
   1d9bc:	andeq	sp, r1, ip, lsl #28
   1d9c0:	strdeq	sp, [r1], -ip
   1d9c4:	andeq	sp, r1, ip, ror #27
   1d9c8:	ldrdeq	sp, [r1], -ip
   1d9cc:	andeq	sp, r1, ip, asr #27
   1d9d0:			; <UNDEFINED> instruction: 0x0001ddbc
   1d9d4:	andeq	sp, r1, ip, lsr #27
   1d9d8:	muleq	r1, ip, sp
   1d9dc:	andeq	sp, r1, ip, lsl #27
   1d9e0:	andeq	sp, r1, ip, ror sp
   1d9e4:	andeq	sp, r1, ip, ror #26
   1d9e8:	andeq	sp, r1, ip, asr sp
   1d9ec:	andeq	sp, r1, ip, asr #26
   1d9f0:	andeq	sp, r1, ip, lsr sp
   1d9f4:	andeq	sp, r1, ip, lsr #26
   1d9f8:	andeq	sp, r1, ip, lsl sp
   1d9fc:	andeq	sp, r1, ip, lsl #26
   1da00:	strdeq	sp, [r1], -ip
   1da04:	andeq	sp, r1, ip, ror #25
   1da08:	ldrdeq	sp, [r1], -ip
   1da0c:	andeq	sp, r1, ip, asr #25
   1da10:			; <UNDEFINED> instruction: 0x0001dcbc
   1da14:	andeq	sp, r1, ip, lsr #25
   1da18:	muleq	r1, ip, ip
   1da1c:	andeq	sp, r1, ip, lsl #25
   1da20:	andeq	sp, r1, ip, ror ip
   1da24:	andeq	sp, r1, ip, ror #24
   1da28:	andeq	sp, r1, ip, asr ip
   1da2c:	andeq	sp, r1, ip, asr #24
   1da30:	andeq	sp, r1, ip, lsr ip
   1da34:	andeq	sp, r1, ip, lsr #24
   1da38:	andeq	sp, r1, ip, lsl ip
   1da3c:	andeq	sp, r1, ip, lsl #24
   1da40:	strdeq	sp, [r1], -ip
   1da44:	andeq	sp, r1, ip, ror #23
   1da48:	ldrdeq	sp, [r1], -ip
   1da4c:	andeq	sp, r1, ip, asr #23
   1da50:			; <UNDEFINED> instruction: 0x0001dbbc
   1da54:	andeq	sp, r1, ip, lsr #23
   1da58:	muleq	r1, ip, fp
   1da5c:	andeq	sp, r1, ip, lsl #23
   1da60:	andeq	sp, r1, ip, ror fp
   1da64:	andeq	sp, r1, ip, ror #22
   1da68:	andeq	sp, r1, ip, asr fp
   1da6c:	andeq	sp, r1, ip, asr #22
   1da70:	andeq	sp, r1, ip, lsr fp
   1da74:	andeq	sp, r1, ip, lsr #22
   1da78:	andeq	sp, r1, ip, lsl fp
   1da7c:	andeq	sp, r1, ip, lsl #22
   1da80:	strdeq	sp, [r1], -ip
   1da84:	andeq	sp, r1, ip, ror #21
   1da88:	ldrdeq	sp, [r1], -ip
   1da8c:	andeq	sp, r1, ip, asr #21
   1da90:			; <UNDEFINED> instruction: 0x0001dabc
   1da94:	andeq	sp, r1, ip, lsr #21
   1da98:	muleq	r1, ip, sl
   1da9c:	mov	r2, #5
   1daa0:	ldr	r1, [pc, #1104]	; 1def8 <g_strcmp0@plt+0x8078>
   1daa4:	mov	r0, #0
   1daa8:	b	15880 <dcgettext@plt>
   1daac:	mov	r2, #5
   1dab0:	ldr	r1, [pc, #1092]	; 1defc <g_strcmp0@plt+0x807c>
   1dab4:	mov	r0, #0
   1dab8:	b	15880 <dcgettext@plt>
   1dabc:	mov	r2, #5
   1dac0:	ldr	r1, [pc, #1080]	; 1df00 <g_strcmp0@plt+0x8080>
   1dac4:	mov	r0, #0
   1dac8:	b	15880 <dcgettext@plt>
   1dacc:	mov	r2, #5
   1dad0:	ldr	r1, [pc, #1068]	; 1df04 <g_strcmp0@plt+0x8084>
   1dad4:	mov	r0, #0
   1dad8:	b	15880 <dcgettext@plt>
   1dadc:	mov	r2, #5
   1dae0:	ldr	r1, [pc, #1056]	; 1df08 <g_strcmp0@plt+0x8088>
   1dae4:	mov	r0, #0
   1dae8:	b	15880 <dcgettext@plt>
   1daec:	mov	r2, #5
   1daf0:	ldr	r1, [pc, #1044]	; 1df0c <g_strcmp0@plt+0x808c>
   1daf4:	mov	r0, #0
   1daf8:	b	15880 <dcgettext@plt>
   1dafc:	mov	r2, #5
   1db00:	ldr	r1, [pc, #1032]	; 1df10 <g_strcmp0@plt+0x8090>
   1db04:	mov	r0, #0
   1db08:	b	15880 <dcgettext@plt>
   1db0c:	mov	r2, #5
   1db10:	ldr	r1, [pc, #1020]	; 1df14 <g_strcmp0@plt+0x8094>
   1db14:	mov	r0, #0
   1db18:	b	15880 <dcgettext@plt>
   1db1c:	mov	r2, #5
   1db20:	ldr	r1, [pc, #1008]	; 1df18 <g_strcmp0@plt+0x8098>
   1db24:	mov	r0, #0
   1db28:	b	15880 <dcgettext@plt>
   1db2c:	mov	r2, #5
   1db30:	ldr	r1, [pc, #996]	; 1df1c <g_strcmp0@plt+0x809c>
   1db34:	mov	r0, #0
   1db38:	b	15880 <dcgettext@plt>
   1db3c:	mov	r2, #5
   1db40:	ldr	r1, [pc, #984]	; 1df20 <g_strcmp0@plt+0x80a0>
   1db44:	mov	r0, #0
   1db48:	b	15880 <dcgettext@plt>
   1db4c:	mov	r2, #5
   1db50:	ldr	r1, [pc, #972]	; 1df24 <g_strcmp0@plt+0x80a4>
   1db54:	mov	r0, #0
   1db58:	b	15880 <dcgettext@plt>
   1db5c:	mov	r2, #5
   1db60:	ldr	r1, [pc, #960]	; 1df28 <g_strcmp0@plt+0x80a8>
   1db64:	mov	r0, #0
   1db68:	b	15880 <dcgettext@plt>
   1db6c:	mov	r2, #5
   1db70:	ldr	r1, [pc, #948]	; 1df2c <g_strcmp0@plt+0x80ac>
   1db74:	mov	r0, #0
   1db78:	b	15880 <dcgettext@plt>
   1db7c:	mov	r2, #5
   1db80:	ldr	r1, [pc, #936]	; 1df30 <g_strcmp0@plt+0x80b0>
   1db84:	mov	r0, #0
   1db88:	b	15880 <dcgettext@plt>
   1db8c:	mov	r2, #5
   1db90:	ldr	r1, [pc, #924]	; 1df34 <g_strcmp0@plt+0x80b4>
   1db94:	mov	r0, #0
   1db98:	b	15880 <dcgettext@plt>
   1db9c:	mov	r2, #5
   1dba0:	ldr	r1, [pc, #912]	; 1df38 <g_strcmp0@plt+0x80b8>
   1dba4:	mov	r0, #0
   1dba8:	b	15880 <dcgettext@plt>
   1dbac:	mov	r2, #5
   1dbb0:	ldr	r1, [pc, #900]	; 1df3c <g_strcmp0@plt+0x80bc>
   1dbb4:	mov	r0, #0
   1dbb8:	b	15880 <dcgettext@plt>
   1dbbc:	mov	r2, #5
   1dbc0:	ldr	r1, [pc, #888]	; 1df40 <g_strcmp0@plt+0x80c0>
   1dbc4:	mov	r0, #0
   1dbc8:	b	15880 <dcgettext@plt>
   1dbcc:	mov	r2, #5
   1dbd0:	ldr	r1, [pc, #876]	; 1df44 <g_strcmp0@plt+0x80c4>
   1dbd4:	mov	r0, #0
   1dbd8:	b	15880 <dcgettext@plt>
   1dbdc:	mov	r2, #5
   1dbe0:	ldr	r1, [pc, #864]	; 1df48 <g_strcmp0@plt+0x80c8>
   1dbe4:	mov	r0, #0
   1dbe8:	b	15880 <dcgettext@plt>
   1dbec:	mov	r2, #5
   1dbf0:	ldr	r1, [pc, #852]	; 1df4c <g_strcmp0@plt+0x80cc>
   1dbf4:	mov	r0, #0
   1dbf8:	b	15880 <dcgettext@plt>
   1dbfc:	mov	r2, #5
   1dc00:	ldr	r1, [pc, #840]	; 1df50 <g_strcmp0@plt+0x80d0>
   1dc04:	mov	r0, #0
   1dc08:	b	15880 <dcgettext@plt>
   1dc0c:	mov	r2, #5
   1dc10:	ldr	r1, [pc, #828]	; 1df54 <g_strcmp0@plt+0x80d4>
   1dc14:	mov	r0, #0
   1dc18:	b	15880 <dcgettext@plt>
   1dc1c:	mov	r2, #5
   1dc20:	ldr	r1, [pc, #816]	; 1df58 <g_strcmp0@plt+0x80d8>
   1dc24:	mov	r0, #0
   1dc28:	b	15880 <dcgettext@plt>
   1dc2c:	mov	r2, #5
   1dc30:	ldr	r1, [pc, #804]	; 1df5c <g_strcmp0@plt+0x80dc>
   1dc34:	mov	r0, #0
   1dc38:	b	15880 <dcgettext@plt>
   1dc3c:	mov	r2, #5
   1dc40:	ldr	r1, [pc, #792]	; 1df60 <g_strcmp0@plt+0x80e0>
   1dc44:	mov	r0, #0
   1dc48:	b	15880 <dcgettext@plt>
   1dc4c:	mov	r2, #5
   1dc50:	ldr	r1, [pc, #780]	; 1df64 <g_strcmp0@plt+0x80e4>
   1dc54:	mov	r0, #0
   1dc58:	b	15880 <dcgettext@plt>
   1dc5c:	mov	r2, #5
   1dc60:	ldr	r1, [pc, #768]	; 1df68 <g_strcmp0@plt+0x80e8>
   1dc64:	mov	r0, #0
   1dc68:	b	15880 <dcgettext@plt>
   1dc6c:	mov	r2, #5
   1dc70:	ldr	r1, [pc, #756]	; 1df6c <g_strcmp0@plt+0x80ec>
   1dc74:	mov	r0, #0
   1dc78:	b	15880 <dcgettext@plt>
   1dc7c:	mov	r2, #5
   1dc80:	ldr	r1, [pc, #744]	; 1df70 <g_strcmp0@plt+0x80f0>
   1dc84:	mov	r0, #0
   1dc88:	b	15880 <dcgettext@plt>
   1dc8c:	mov	r2, #5
   1dc90:	ldr	r1, [pc, #732]	; 1df74 <g_strcmp0@plt+0x80f4>
   1dc94:	mov	r0, #0
   1dc98:	b	15880 <dcgettext@plt>
   1dc9c:	mov	r2, #5
   1dca0:	ldr	r1, [pc, #720]	; 1df78 <g_strcmp0@plt+0x80f8>
   1dca4:	mov	r0, #0
   1dca8:	b	15880 <dcgettext@plt>
   1dcac:	mov	r2, #5
   1dcb0:	ldr	r1, [pc, #708]	; 1df7c <g_strcmp0@plt+0x80fc>
   1dcb4:	mov	r0, #0
   1dcb8:	b	15880 <dcgettext@plt>
   1dcbc:	mov	r2, #5
   1dcc0:	ldr	r1, [pc, #696]	; 1df80 <g_strcmp0@plt+0x8100>
   1dcc4:	mov	r0, #0
   1dcc8:	b	15880 <dcgettext@plt>
   1dccc:	mov	r2, #5
   1dcd0:	ldr	r1, [pc, #684]	; 1df84 <g_strcmp0@plt+0x8104>
   1dcd4:	mov	r0, #0
   1dcd8:	b	15880 <dcgettext@plt>
   1dcdc:	mov	r2, #5
   1dce0:	ldr	r1, [pc, #672]	; 1df88 <g_strcmp0@plt+0x8108>
   1dce4:	mov	r0, #0
   1dce8:	b	15880 <dcgettext@plt>
   1dcec:	mov	r2, #5
   1dcf0:	ldr	r1, [pc, #660]	; 1df8c <g_strcmp0@plt+0x810c>
   1dcf4:	mov	r0, #0
   1dcf8:	b	15880 <dcgettext@plt>
   1dcfc:	mov	r2, #5
   1dd00:	ldr	r1, [pc, #648]	; 1df90 <g_strcmp0@plt+0x8110>
   1dd04:	mov	r0, #0
   1dd08:	b	15880 <dcgettext@plt>
   1dd0c:	mov	r2, #5
   1dd10:	ldr	r1, [pc, #636]	; 1df94 <g_strcmp0@plt+0x8114>
   1dd14:	mov	r0, #0
   1dd18:	b	15880 <dcgettext@plt>
   1dd1c:	mov	r2, #5
   1dd20:	ldr	r1, [pc, #624]	; 1df98 <g_strcmp0@plt+0x8118>
   1dd24:	mov	r0, #0
   1dd28:	b	15880 <dcgettext@plt>
   1dd2c:	mov	r2, #5
   1dd30:	ldr	r1, [pc, #612]	; 1df9c <g_strcmp0@plt+0x811c>
   1dd34:	mov	r0, #0
   1dd38:	b	15880 <dcgettext@plt>
   1dd3c:	mov	r2, #5
   1dd40:	ldr	r1, [pc, #600]	; 1dfa0 <g_strcmp0@plt+0x8120>
   1dd44:	mov	r0, #0
   1dd48:	b	15880 <dcgettext@plt>
   1dd4c:	mov	r2, #5
   1dd50:	ldr	r1, [pc, #588]	; 1dfa4 <g_strcmp0@plt+0x8124>
   1dd54:	mov	r0, #0
   1dd58:	b	15880 <dcgettext@plt>
   1dd5c:	mov	r2, #5
   1dd60:	ldr	r1, [pc, #576]	; 1dfa8 <g_strcmp0@plt+0x8128>
   1dd64:	mov	r0, #0
   1dd68:	b	15880 <dcgettext@plt>
   1dd6c:	mov	r2, #5
   1dd70:	ldr	r1, [pc, #564]	; 1dfac <g_strcmp0@plt+0x812c>
   1dd74:	mov	r0, #0
   1dd78:	b	15880 <dcgettext@plt>
   1dd7c:	mov	r2, #5
   1dd80:	ldr	r1, [pc, #552]	; 1dfb0 <g_strcmp0@plt+0x8130>
   1dd84:	mov	r0, #0
   1dd88:	b	15880 <dcgettext@plt>
   1dd8c:	mov	r2, #5
   1dd90:	ldr	r1, [pc, #540]	; 1dfb4 <g_strcmp0@plt+0x8134>
   1dd94:	mov	r0, #0
   1dd98:	b	15880 <dcgettext@plt>
   1dd9c:	mov	r2, #5
   1dda0:	ldr	r1, [pc, #528]	; 1dfb8 <g_strcmp0@plt+0x8138>
   1dda4:	mov	r0, #0
   1dda8:	b	15880 <dcgettext@plt>
   1ddac:	mov	r2, #5
   1ddb0:	ldr	r1, [pc, #516]	; 1dfbc <g_strcmp0@plt+0x813c>
   1ddb4:	mov	r0, #0
   1ddb8:	b	15880 <dcgettext@plt>
   1ddbc:	mov	r2, #5
   1ddc0:	ldr	r1, [pc, #504]	; 1dfc0 <g_strcmp0@plt+0x8140>
   1ddc4:	mov	r0, #0
   1ddc8:	b	15880 <dcgettext@plt>
   1ddcc:	mov	r2, #5
   1ddd0:	ldr	r1, [pc, #492]	; 1dfc4 <g_strcmp0@plt+0x8144>
   1ddd4:	mov	r0, #0
   1ddd8:	b	15880 <dcgettext@plt>
   1dddc:	mov	r2, #5
   1dde0:	ldr	r1, [pc, #480]	; 1dfc8 <g_strcmp0@plt+0x8148>
   1dde4:	mov	r0, #0
   1dde8:	b	15880 <dcgettext@plt>
   1ddec:	mov	r2, #5
   1ddf0:	ldr	r1, [pc, #468]	; 1dfcc <g_strcmp0@plt+0x814c>
   1ddf4:	mov	r0, #0
   1ddf8:	b	15880 <dcgettext@plt>
   1ddfc:	mov	r2, #5
   1de00:	ldr	r1, [pc, #456]	; 1dfd0 <g_strcmp0@plt+0x8150>
   1de04:	mov	r0, #0
   1de08:	b	15880 <dcgettext@plt>
   1de0c:	mov	r2, #5
   1de10:	ldr	r1, [pc, #444]	; 1dfd4 <g_strcmp0@plt+0x8154>
   1de14:	mov	r0, #0
   1de18:	b	15880 <dcgettext@plt>
   1de1c:	mov	r2, #5
   1de20:	ldr	r1, [pc, #432]	; 1dfd8 <g_strcmp0@plt+0x8158>
   1de24:	mov	r0, #0
   1de28:	b	15880 <dcgettext@plt>
   1de2c:	mov	r2, #5
   1de30:	ldr	r1, [pc, #420]	; 1dfdc <g_strcmp0@plt+0x815c>
   1de34:	mov	r0, #0
   1de38:	b	15880 <dcgettext@plt>
   1de3c:	mov	r2, #5
   1de40:	ldr	r1, [pc, #408]	; 1dfe0 <g_strcmp0@plt+0x8160>
   1de44:	mov	r0, #0
   1de48:	b	15880 <dcgettext@plt>
   1de4c:	mov	r2, #5
   1de50:	ldr	r1, [pc, #396]	; 1dfe4 <g_strcmp0@plt+0x8164>
   1de54:	mov	r0, #0
   1de58:	b	15880 <dcgettext@plt>
   1de5c:	mov	r2, #5
   1de60:	ldr	r1, [pc, #384]	; 1dfe8 <g_strcmp0@plt+0x8168>
   1de64:	mov	r0, #0
   1de68:	b	15880 <dcgettext@plt>
   1de6c:	mov	r2, #5
   1de70:	ldr	r1, [pc, #372]	; 1dfec <g_strcmp0@plt+0x816c>
   1de74:	mov	r0, #0
   1de78:	b	15880 <dcgettext@plt>
   1de7c:	mov	r2, #5
   1de80:	ldr	r1, [pc, #360]	; 1dff0 <g_strcmp0@plt+0x8170>
   1de84:	mov	r0, #0
   1de88:	b	15880 <dcgettext@plt>
   1de8c:	mov	r2, #5
   1de90:	ldr	r1, [pc, #348]	; 1dff4 <g_strcmp0@plt+0x8174>
   1de94:	mov	r0, #0
   1de98:	b	15880 <dcgettext@plt>
   1de9c:	mov	r2, #5
   1dea0:	ldr	r1, [pc, #336]	; 1dff8 <g_strcmp0@plt+0x8178>
   1dea4:	mov	r0, #0
   1dea8:	b	15880 <dcgettext@plt>
   1deac:	mov	r2, #5
   1deb0:	ldr	r1, [pc, #324]	; 1dffc <g_strcmp0@plt+0x817c>
   1deb4:	mov	r0, #0
   1deb8:	b	15880 <dcgettext@plt>
   1debc:	mov	r2, #5
   1dec0:	ldr	r1, [pc, #312]	; 1e000 <g_strcmp0@plt+0x8180>
   1dec4:	mov	r0, #0
   1dec8:	b	15880 <dcgettext@plt>
   1decc:	mov	r2, #5
   1ded0:	ldr	r1, [pc, #300]	; 1e004 <g_strcmp0@plt+0x8184>
   1ded4:	mov	r0, #0
   1ded8:	b	15880 <dcgettext@plt>
   1dedc:	push	{r4, lr}
   1dee0:	mov	r1, #16
   1dee4:	ldr	r2, [pc, #284]	; 1e008 <g_strcmp0@plt+0x8188>
   1dee8:	ldr	r0, [pc, #284]	; 1e00c <g_strcmp0@plt+0x818c>
   1deec:	bl	151f0 <g_log@plt>
   1def0:	mov	r0, #0
   1def4:	pop	{r4, pc}
   1def8:	strdeq	fp, [r2], -ip
   1defc:	andeq	fp, r2, r4, ror #31
   1df00:	andeq	fp, r2, r8, asr #31
   1df04:	andeq	fp, r2, r8, lsr #31
   1df08:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   1df0c:	andeq	fp, r2, r8, ror #30
   1df10:	andeq	fp, r2, r4, asr #30
   1df14:	andeq	fp, r2, ip, lsl pc
   1df18:	strdeq	fp, [r2], -ip
   1df1c:	andeq	fp, r2, r0, ror #29
   1df20:	andeq	fp, r2, r8, asr #29
   1df24:	andeq	fp, r2, ip, lsr #29
   1df28:	muleq	r2, r8, lr
   1df2c:	andeq	fp, r2, r0, lsl #29
   1df30:	andeq	fp, r2, r4, ror #28
   1df34:	andeq	fp, r2, r8, asr #28
   1df38:	andeq	fp, r2, r4, lsr #28
   1df3c:	strdeq	fp, [r2], -ip
   1df40:	andeq	fp, r2, r8, ror #27
   1df44:	ldrdeq	fp, [r2], -r0
   1df48:			; <UNDEFINED> instruction: 0x0002bdb4
   1df4c:	muleq	r2, r4, sp
   1df50:	andeq	fp, r2, r8, ror #26
   1df54:	andeq	fp, r2, ip, lsr sp
   1df58:	andeq	fp, r2, ip, lsl sp
   1df5c:	strdeq	fp, [r2], -r4
   1df60:	ldrdeq	fp, [r2], -r0
   1df64:			; <UNDEFINED> instruction: 0x0002bcbc
   1df68:	andeq	fp, r2, r4, lsr #25
   1df6c:	andeq	fp, r2, ip, lsl #25
   1df70:	andeq	fp, r2, r8, ror fp
   1df74:	andeq	fp, r2, ip, asr fp
   1df78:	andeq	fp, r2, r4, lsr fp
   1df7c:	andeq	fp, r2, r4, lsl fp
   1df80:	andeq	fp, r2, r8, ror #24
   1df84:	strdeq	fp, [r2], -r0
   1df88:	andeq	fp, r2, ip, asr #24
   1df8c:	andeq	fp, r2, r4, lsr ip
   1df90:	andeq	fp, r2, ip, lsl ip
   1df94:	strdeq	fp, [r2], -r4
   1df98:	ldrdeq	fp, [r2], -ip
   1df9c:	andeq	fp, r2, ip, asr #23
   1dfa0:	ldrdeq	fp, [r2], -r0
   1dfa4:	andeq	fp, r2, r8, lsr #21
   1dfa8:			; <UNDEFINED> instruction: 0x0002bbb8
   1dfac:	andeq	fp, r2, r0, lsr #23
   1dfb0:	andeq	fp, r2, r4, lsl #21
   1dfb4:	andeq	fp, r2, r0, asr #20
   1dfb8:	andeq	fp, r2, r0, lsr #20
   1dfbc:	andeq	fp, r2, r0, ror #16
   1dfc0:	andeq	fp, r2, ip, ror #20
   1dfc4:	andeq	fp, r2, ip, lsl #20
   1dfc8:	muleq	r2, r0, r8
   1dfcc:	andeq	fp, r2, r4, asr #19
   1dfd0:	andeq	fp, r2, r4, lsr #19
   1dfd4:	andeq	fp, r2, r8, lsl #19
   1dfd8:	andeq	fp, r2, r0, ror r9
   1dfdc:	andeq	fp, r2, r4, asr r9
   1dfe0:	andeq	r9, r2, r4, ror sl
   1dfe4:	andeq	fp, r2, r8, lsr r9
   1dfe8:	andeq	fp, r2, r8, lsl r9
   1dfec:	andeq	fp, r2, r0, ror #19
   1dff0:	strdeq	fp, [r2], -r4
   1dff4:	andeq	fp, r2, ip, asr #17
   1dff8:	andeq	fp, r2, ip, lsr #17
   1dffc:	andeq	fp, r2, r0, asr #16
   1e000:	andeq	fp, r2, r0, lsl #17
   1e004:	andeq	fp, r2, r0, lsr #16
   1e008:	andeq	ip, r2, ip
   1e00c:	andeq	r8, r2, ip, lsl #29
   1e010:	cmp	r0, #67	; 0x43
   1e014:	ldrls	pc, [pc, r0, lsl #2]
   1e018:	b	1e56c <g_strcmp0@plt+0x86ec>
   1e01c:	andeq	lr, r1, ip, asr r5
   1e020:	andeq	lr, r1, ip, asr #10
   1e024:	andeq	lr, r1, ip, lsr r5
   1e028:	andeq	lr, r1, ip, lsr #10
   1e02c:	andeq	lr, r1, ip, lsl r5
   1e030:	andeq	lr, r1, ip, lsl #10
   1e034:	strdeq	lr, [r1], -ip
   1e038:	andeq	lr, r1, ip, ror #9
   1e03c:	ldrdeq	lr, [r1], -ip
   1e040:	andeq	lr, r1, ip, asr #9
   1e044:			; <UNDEFINED> instruction: 0x0001e4bc
   1e048:	andeq	lr, r1, ip, lsr #9
   1e04c:	muleq	r1, ip, r4
   1e050:	andeq	lr, r1, ip, lsl #9
   1e054:	andeq	lr, r1, ip, ror r4
   1e058:	andeq	lr, r1, ip, ror #8
   1e05c:	andeq	lr, r1, ip, asr r4
   1e060:	andeq	lr, r1, ip, asr #8
   1e064:	andeq	lr, r1, ip, lsr r4
   1e068:	andeq	lr, r1, ip, lsr #8
   1e06c:	andeq	lr, r1, ip, lsl r4
   1e070:	andeq	lr, r1, ip, lsl #8
   1e074:	strdeq	lr, [r1], -ip
   1e078:	andeq	lr, r1, ip, ror #7
   1e07c:	ldrdeq	lr, [r1], -ip
   1e080:	andeq	lr, r1, ip, asr #7
   1e084:			; <UNDEFINED> instruction: 0x0001e3bc
   1e088:	andeq	lr, r1, ip, lsr #7
   1e08c:	muleq	r1, ip, r3
   1e090:	andeq	lr, r1, ip, lsl #7
   1e094:	andeq	lr, r1, ip, ror r3
   1e098:	andeq	lr, r1, ip, ror #6
   1e09c:	andeq	lr, r1, ip, asr r3
   1e0a0:	andeq	lr, r1, ip, asr #6
   1e0a4:	andeq	lr, r1, ip, lsr r3
   1e0a8:	andeq	lr, r1, ip, lsr #6
   1e0ac:	andeq	lr, r1, ip, lsl r3
   1e0b0:	andeq	lr, r1, ip, lsl #6
   1e0b4:	strdeq	lr, [r1], -ip
   1e0b8:	andeq	lr, r1, ip, ror #5
   1e0bc:	ldrdeq	lr, [r1], -ip
   1e0c0:	andeq	lr, r1, ip, asr #5
   1e0c4:			; <UNDEFINED> instruction: 0x0001e2bc
   1e0c8:	andeq	lr, r1, ip, lsr #5
   1e0cc:	muleq	r1, ip, r2
   1e0d0:	andeq	lr, r1, ip, lsl #5
   1e0d4:	andeq	lr, r1, ip, ror r2
   1e0d8:	andeq	lr, r1, ip, ror #4
   1e0dc:	andeq	lr, r1, ip, asr r2
   1e0e0:	andeq	lr, r1, ip, asr #4
   1e0e4:	andeq	lr, r1, ip, lsr r2
   1e0e8:	andeq	lr, r1, ip, lsr #4
   1e0ec:	andeq	lr, r1, ip, lsl r2
   1e0f0:	andeq	lr, r1, ip, lsl #4
   1e0f4:	strdeq	lr, [r1], -ip
   1e0f8:	andeq	lr, r1, ip, ror #3
   1e0fc:	ldrdeq	lr, [r1], -ip
   1e100:	andeq	lr, r1, ip, asr #3
   1e104:			; <UNDEFINED> instruction: 0x0001e1bc
   1e108:	andeq	lr, r1, ip, lsr #3
   1e10c:	muleq	r1, ip, r1
   1e110:	andeq	lr, r1, ip, lsl #3
   1e114:	andeq	lr, r1, ip, ror r1
   1e118:	andeq	lr, r1, ip, ror #2
   1e11c:	andeq	lr, r1, ip, asr r1
   1e120:	andeq	lr, r1, ip, asr #2
   1e124:	andeq	lr, r1, ip, lsr r1
   1e128:	andeq	lr, r1, ip, lsr #2
   1e12c:	mov	r2, #5
   1e130:	ldr	r1, [pc, #1084]	; 1e574 <g_strcmp0@plt+0x86f4>
   1e134:	mov	r0, #0
   1e138:	b	15880 <dcgettext@plt>
   1e13c:	mov	r2, #5
   1e140:	ldr	r1, [pc, #1072]	; 1e578 <g_strcmp0@plt+0x86f8>
   1e144:	mov	r0, #0
   1e148:	b	15880 <dcgettext@plt>
   1e14c:	mov	r2, #5
   1e150:	ldr	r1, [pc, #1060]	; 1e57c <g_strcmp0@plt+0x86fc>
   1e154:	mov	r0, #0
   1e158:	b	15880 <dcgettext@plt>
   1e15c:	mov	r2, #5
   1e160:	ldr	r1, [pc, #1048]	; 1e580 <g_strcmp0@plt+0x8700>
   1e164:	mov	r0, #0
   1e168:	b	15880 <dcgettext@plt>
   1e16c:	mov	r2, #5
   1e170:	ldr	r1, [pc, #1036]	; 1e584 <g_strcmp0@plt+0x8704>
   1e174:	mov	r0, #0
   1e178:	b	15880 <dcgettext@plt>
   1e17c:	mov	r2, #5
   1e180:	ldr	r1, [pc, #1024]	; 1e588 <g_strcmp0@plt+0x8708>
   1e184:	mov	r0, #0
   1e188:	b	15880 <dcgettext@plt>
   1e18c:	mov	r2, #5
   1e190:	ldr	r1, [pc, #1012]	; 1e58c <g_strcmp0@plt+0x870c>
   1e194:	mov	r0, #0
   1e198:	b	15880 <dcgettext@plt>
   1e19c:	mov	r2, #5
   1e1a0:	ldr	r1, [pc, #1000]	; 1e590 <g_strcmp0@plt+0x8710>
   1e1a4:	mov	r0, #0
   1e1a8:	b	15880 <dcgettext@plt>
   1e1ac:	mov	r2, #5
   1e1b0:	ldr	r1, [pc, #988]	; 1e594 <g_strcmp0@plt+0x8714>
   1e1b4:	mov	r0, #0
   1e1b8:	b	15880 <dcgettext@plt>
   1e1bc:	mov	r2, #5
   1e1c0:	ldr	r1, [pc, #976]	; 1e598 <g_strcmp0@plt+0x8718>
   1e1c4:	mov	r0, #0
   1e1c8:	b	15880 <dcgettext@plt>
   1e1cc:	mov	r2, #5
   1e1d0:	ldr	r1, [pc, #964]	; 1e59c <g_strcmp0@plt+0x871c>
   1e1d4:	mov	r0, #0
   1e1d8:	b	15880 <dcgettext@plt>
   1e1dc:	mov	r2, #5
   1e1e0:	ldr	r1, [pc, #952]	; 1e5a0 <g_strcmp0@plt+0x8720>
   1e1e4:	mov	r0, #0
   1e1e8:	b	15880 <dcgettext@plt>
   1e1ec:	mov	r2, #5
   1e1f0:	ldr	r1, [pc, #940]	; 1e5a4 <g_strcmp0@plt+0x8724>
   1e1f4:	mov	r0, #0
   1e1f8:	b	15880 <dcgettext@plt>
   1e1fc:	mov	r2, #5
   1e200:	ldr	r1, [pc, #928]	; 1e5a8 <g_strcmp0@plt+0x8728>
   1e204:	mov	r0, #0
   1e208:	b	15880 <dcgettext@plt>
   1e20c:	mov	r2, #5
   1e210:	ldr	r1, [pc, #916]	; 1e5ac <g_strcmp0@plt+0x872c>
   1e214:	mov	r0, #0
   1e218:	b	15880 <dcgettext@plt>
   1e21c:	mov	r2, #5
   1e220:	ldr	r1, [pc, #904]	; 1e5b0 <g_strcmp0@plt+0x8730>
   1e224:	mov	r0, #0
   1e228:	b	15880 <dcgettext@plt>
   1e22c:	mov	r2, #5
   1e230:	ldr	r1, [pc, #892]	; 1e5b4 <g_strcmp0@plt+0x8734>
   1e234:	mov	r0, #0
   1e238:	b	15880 <dcgettext@plt>
   1e23c:	mov	r2, #5
   1e240:	ldr	r1, [pc, #880]	; 1e5b8 <g_strcmp0@plt+0x8738>
   1e244:	mov	r0, #0
   1e248:	b	15880 <dcgettext@plt>
   1e24c:	mov	r2, #5
   1e250:	ldr	r1, [pc, #868]	; 1e5bc <g_strcmp0@plt+0x873c>
   1e254:	mov	r0, #0
   1e258:	b	15880 <dcgettext@plt>
   1e25c:	mov	r2, #5
   1e260:	ldr	r1, [pc, #856]	; 1e5c0 <g_strcmp0@plt+0x8740>
   1e264:	mov	r0, #0
   1e268:	b	15880 <dcgettext@plt>
   1e26c:	mov	r2, #5
   1e270:	ldr	r1, [pc, #844]	; 1e5c4 <g_strcmp0@plt+0x8744>
   1e274:	mov	r0, #0
   1e278:	b	15880 <dcgettext@plt>
   1e27c:	mov	r2, #5
   1e280:	ldr	r1, [pc, #832]	; 1e5c8 <g_strcmp0@plt+0x8748>
   1e284:	mov	r0, #0
   1e288:	b	15880 <dcgettext@plt>
   1e28c:	mov	r2, #5
   1e290:	ldr	r1, [pc, #820]	; 1e5cc <g_strcmp0@plt+0x874c>
   1e294:	mov	r0, #0
   1e298:	b	15880 <dcgettext@plt>
   1e29c:	mov	r2, #5
   1e2a0:	ldr	r1, [pc, #808]	; 1e5d0 <g_strcmp0@plt+0x8750>
   1e2a4:	mov	r0, #0
   1e2a8:	b	15880 <dcgettext@plt>
   1e2ac:	mov	r2, #5
   1e2b0:	ldr	r1, [pc, #796]	; 1e5d4 <g_strcmp0@plt+0x8754>
   1e2b4:	mov	r0, #0
   1e2b8:	b	15880 <dcgettext@plt>
   1e2bc:	mov	r2, #5
   1e2c0:	ldr	r1, [pc, #784]	; 1e5d8 <g_strcmp0@plt+0x8758>
   1e2c4:	mov	r0, #0
   1e2c8:	b	15880 <dcgettext@plt>
   1e2cc:	mov	r2, #5
   1e2d0:	ldr	r1, [pc, #772]	; 1e5dc <g_strcmp0@plt+0x875c>
   1e2d4:	mov	r0, #0
   1e2d8:	b	15880 <dcgettext@plt>
   1e2dc:	mov	r2, #5
   1e2e0:	ldr	r1, [pc, #760]	; 1e5e0 <g_strcmp0@plt+0x8760>
   1e2e4:	mov	r0, #0
   1e2e8:	b	15880 <dcgettext@plt>
   1e2ec:	mov	r2, #5
   1e2f0:	ldr	r1, [pc, #748]	; 1e5e4 <g_strcmp0@plt+0x8764>
   1e2f4:	mov	r0, #0
   1e2f8:	b	15880 <dcgettext@plt>
   1e2fc:	mov	r2, #5
   1e300:	ldr	r1, [pc, #736]	; 1e5e8 <g_strcmp0@plt+0x8768>
   1e304:	mov	r0, #0
   1e308:	b	15880 <dcgettext@plt>
   1e30c:	mov	r2, #5
   1e310:	ldr	r1, [pc, #724]	; 1e5ec <g_strcmp0@plt+0x876c>
   1e314:	mov	r0, #0
   1e318:	b	15880 <dcgettext@plt>
   1e31c:	mov	r2, #5
   1e320:	ldr	r1, [pc, #712]	; 1e5f0 <g_strcmp0@plt+0x8770>
   1e324:	mov	r0, #0
   1e328:	b	15880 <dcgettext@plt>
   1e32c:	mov	r2, #5
   1e330:	ldr	r1, [pc, #700]	; 1e5f4 <g_strcmp0@plt+0x8774>
   1e334:	mov	r0, #0
   1e338:	b	15880 <dcgettext@plt>
   1e33c:	mov	r2, #5
   1e340:	ldr	r1, [pc, #688]	; 1e5f8 <g_strcmp0@plt+0x8778>
   1e344:	mov	r0, #0
   1e348:	b	15880 <dcgettext@plt>
   1e34c:	mov	r2, #5
   1e350:	ldr	r1, [pc, #676]	; 1e5fc <g_strcmp0@plt+0x877c>
   1e354:	mov	r0, #0
   1e358:	b	15880 <dcgettext@plt>
   1e35c:	mov	r2, #5
   1e360:	ldr	r1, [pc, #664]	; 1e600 <g_strcmp0@plt+0x8780>
   1e364:	mov	r0, #0
   1e368:	b	15880 <dcgettext@plt>
   1e36c:	mov	r2, #5
   1e370:	ldr	r1, [pc, #652]	; 1e604 <g_strcmp0@plt+0x8784>
   1e374:	mov	r0, #0
   1e378:	b	15880 <dcgettext@plt>
   1e37c:	mov	r2, #5
   1e380:	ldr	r1, [pc, #640]	; 1e608 <g_strcmp0@plt+0x8788>
   1e384:	mov	r0, #0
   1e388:	b	15880 <dcgettext@plt>
   1e38c:	mov	r2, #5
   1e390:	ldr	r1, [pc, #628]	; 1e60c <g_strcmp0@plt+0x878c>
   1e394:	mov	r0, #0
   1e398:	b	15880 <dcgettext@plt>
   1e39c:	mov	r2, #5
   1e3a0:	ldr	r1, [pc, #616]	; 1e610 <g_strcmp0@plt+0x8790>
   1e3a4:	mov	r0, #0
   1e3a8:	b	15880 <dcgettext@plt>
   1e3ac:	mov	r2, #5
   1e3b0:	ldr	r1, [pc, #604]	; 1e614 <g_strcmp0@plt+0x8794>
   1e3b4:	mov	r0, #0
   1e3b8:	b	15880 <dcgettext@plt>
   1e3bc:	mov	r2, #5
   1e3c0:	ldr	r1, [pc, #592]	; 1e618 <g_strcmp0@plt+0x8798>
   1e3c4:	mov	r0, #0
   1e3c8:	b	15880 <dcgettext@plt>
   1e3cc:	mov	r2, #5
   1e3d0:	ldr	r1, [pc, #580]	; 1e61c <g_strcmp0@plt+0x879c>
   1e3d4:	mov	r0, #0
   1e3d8:	b	15880 <dcgettext@plt>
   1e3dc:	mov	r2, #5
   1e3e0:	ldr	r1, [pc, #568]	; 1e620 <g_strcmp0@plt+0x87a0>
   1e3e4:	mov	r0, #0
   1e3e8:	b	15880 <dcgettext@plt>
   1e3ec:	mov	r2, #5
   1e3f0:	ldr	r1, [pc, #556]	; 1e624 <g_strcmp0@plt+0x87a4>
   1e3f4:	mov	r0, #0
   1e3f8:	b	15880 <dcgettext@plt>
   1e3fc:	mov	r2, #5
   1e400:	ldr	r1, [pc, #544]	; 1e628 <g_strcmp0@plt+0x87a8>
   1e404:	mov	r0, #0
   1e408:	b	15880 <dcgettext@plt>
   1e40c:	mov	r2, #5
   1e410:	ldr	r1, [pc, #532]	; 1e62c <g_strcmp0@plt+0x87ac>
   1e414:	mov	r0, #0
   1e418:	b	15880 <dcgettext@plt>
   1e41c:	mov	r2, #5
   1e420:	ldr	r1, [pc, #520]	; 1e630 <g_strcmp0@plt+0x87b0>
   1e424:	mov	r0, #0
   1e428:	b	15880 <dcgettext@plt>
   1e42c:	mov	r2, #5
   1e430:	ldr	r1, [pc, #508]	; 1e634 <g_strcmp0@plt+0x87b4>
   1e434:	mov	r0, #0
   1e438:	b	15880 <dcgettext@plt>
   1e43c:	mov	r2, #5
   1e440:	ldr	r1, [pc, #496]	; 1e638 <g_strcmp0@plt+0x87b8>
   1e444:	mov	r0, #0
   1e448:	b	15880 <dcgettext@plt>
   1e44c:	mov	r2, #5
   1e450:	ldr	r1, [pc, #484]	; 1e63c <g_strcmp0@plt+0x87bc>
   1e454:	mov	r0, #0
   1e458:	b	15880 <dcgettext@plt>
   1e45c:	mov	r2, #5
   1e460:	ldr	r1, [pc, #472]	; 1e640 <g_strcmp0@plt+0x87c0>
   1e464:	mov	r0, #0
   1e468:	b	15880 <dcgettext@plt>
   1e46c:	mov	r2, #5
   1e470:	ldr	r1, [pc, #460]	; 1e644 <g_strcmp0@plt+0x87c4>
   1e474:	mov	r0, #0
   1e478:	b	15880 <dcgettext@plt>
   1e47c:	mov	r2, #5
   1e480:	ldr	r1, [pc, #448]	; 1e648 <g_strcmp0@plt+0x87c8>
   1e484:	mov	r0, #0
   1e488:	b	15880 <dcgettext@plt>
   1e48c:	mov	r2, #5
   1e490:	ldr	r1, [pc, #436]	; 1e64c <g_strcmp0@plt+0x87cc>
   1e494:	mov	r0, #0
   1e498:	b	15880 <dcgettext@plt>
   1e49c:	mov	r2, #5
   1e4a0:	ldr	r1, [pc, #424]	; 1e650 <g_strcmp0@plt+0x87d0>
   1e4a4:	mov	r0, #0
   1e4a8:	b	15880 <dcgettext@plt>
   1e4ac:	mov	r2, #5
   1e4b0:	ldr	r1, [pc, #412]	; 1e654 <g_strcmp0@plt+0x87d4>
   1e4b4:	mov	r0, #0
   1e4b8:	b	15880 <dcgettext@plt>
   1e4bc:	mov	r2, #5
   1e4c0:	ldr	r1, [pc, #400]	; 1e658 <g_strcmp0@plt+0x87d8>
   1e4c4:	mov	r0, #0
   1e4c8:	b	15880 <dcgettext@plt>
   1e4cc:	mov	r2, #5
   1e4d0:	ldr	r1, [pc, #388]	; 1e65c <g_strcmp0@plt+0x87dc>
   1e4d4:	mov	r0, #0
   1e4d8:	b	15880 <dcgettext@plt>
   1e4dc:	mov	r2, #5
   1e4e0:	ldr	r1, [pc, #376]	; 1e660 <g_strcmp0@plt+0x87e0>
   1e4e4:	mov	r0, #0
   1e4e8:	b	15880 <dcgettext@plt>
   1e4ec:	mov	r2, #5
   1e4f0:	ldr	r1, [pc, #364]	; 1e664 <g_strcmp0@plt+0x87e4>
   1e4f4:	mov	r0, #0
   1e4f8:	b	15880 <dcgettext@plt>
   1e4fc:	mov	r2, #5
   1e500:	ldr	r1, [pc, #352]	; 1e668 <g_strcmp0@plt+0x87e8>
   1e504:	mov	r0, #0
   1e508:	b	15880 <dcgettext@plt>
   1e50c:	mov	r2, #5
   1e510:	ldr	r1, [pc, #340]	; 1e66c <g_strcmp0@plt+0x87ec>
   1e514:	mov	r0, #0
   1e518:	b	15880 <dcgettext@plt>
   1e51c:	mov	r2, #5
   1e520:	ldr	r1, [pc, #328]	; 1e670 <g_strcmp0@plt+0x87f0>
   1e524:	mov	r0, #0
   1e528:	b	15880 <dcgettext@plt>
   1e52c:	mov	r2, #5
   1e530:	ldr	r1, [pc, #316]	; 1e674 <g_strcmp0@plt+0x87f4>
   1e534:	mov	r0, #0
   1e538:	b	15880 <dcgettext@plt>
   1e53c:	mov	r2, #5
   1e540:	ldr	r1, [pc, #304]	; 1e678 <g_strcmp0@plt+0x87f8>
   1e544:	mov	r0, #0
   1e548:	b	15880 <dcgettext@plt>
   1e54c:	mov	r2, #5
   1e550:	ldr	r1, [pc, #292]	; 1e67c <g_strcmp0@plt+0x87fc>
   1e554:	mov	r0, #0
   1e558:	b	15880 <dcgettext@plt>
   1e55c:	mov	r2, #5
   1e560:	ldr	r1, [pc, #280]	; 1e680 <g_strcmp0@plt+0x8800>
   1e564:	mov	r0, #0
   1e568:	b	15880 <dcgettext@plt>
   1e56c:	mov	r0, #0
   1e570:	bx	lr
   1e574:			; <UNDEFINED> instruction: 0x0002d7b8
   1e578:	andeq	sp, r2, ip, lsr #14
   1e57c:	andeq	sp, r2, r8, ror #14
   1e580:	strdeq	sp, [r2], -r4
   1e584:			; <UNDEFINED> instruction: 0x0002d6b4
   1e588:	andeq	sp, r2, r8, ror r6
   1e58c:	andeq	sp, r2, r8, lsr r6
   1e590:			; <UNDEFINED> instruction: 0x0002d5b8
   1e594:	andeq	sp, r2, r4, asr #10
   1e598:	ldrdeq	sp, [r2], -r4
   1e59c:	andeq	sp, r2, r4, ror #8
   1e5a0:	strdeq	sp, [r2], -r0
   1e5a4:	andeq	sp, r2, r0, ror r3
   1e5a8:	andeq	sp, r2, ip, lsr r3
   1e5ac:	strdeq	sp, [r2], -r4
   1e5b0:	andeq	sp, r2, r0, asr #5
   1e5b4:	andeq	sp, r2, r8, lsl #5
   1e5b8:	andeq	sp, r2, ip, asr #4
   1e5bc:	ldrdeq	sp, [r2], -r0
   1e5c0:	andeq	sp, r2, ip, ror #2
   1e5c4:	andeq	sp, r2, r0, lsr r1
   1e5c8:	andeq	sp, r2, r4, asr #1
   1e5cc:	andeq	sp, r2, r4, ror r0
   1e5d0:	andeq	ip, r2, r8, ror #31
   1e5d4:	andeq	ip, r2, r4, ror #30
   1e5d8:	strdeq	ip, [r2], -r8
   1e5dc:	andeq	ip, r2, r8, lsr #29
   1e5e0:	andeq	ip, r2, r8, asr lr
   1e5e4:	andeq	ip, r2, r4, lsl #28
   1e5e8:	muleq	r2, r0, sp
   1e5ec:	andeq	ip, r2, r4, lsr sl
   1e5f0:			; <UNDEFINED> instruction: 0x0002c9b4
   1e5f4:	andeq	ip, r2, r0, asr r9
   1e5f8:	strdeq	ip, [r2], -r0
   1e5fc:	andeq	ip, r2, r4, asr sp
   1e600:	andeq	ip, r2, r0, lsl #17
   1e604:	andeq	ip, r2, r0, ror #25
   1e608:	andeq	ip, r2, r8, lsr #25
   1e60c:	andeq	ip, r2, r0, asr ip
   1e610:	andeq	ip, r2, ip, lsl ip
   1e614:	andeq	ip, r2, ip, ror #23
   1e618:	andeq	ip, r2, r4, ror fp
   1e61c:	andeq	ip, r2, r4, asr r8
   1e620:	strdeq	ip, [r2], -r0
   1e624:	andeq	ip, r2, r4, lsr #22
   1e628:			; <UNDEFINED> instruction: 0x0002cab4
   1e62c:	andeq	ip, r2, r8, lsl #15
   1e630:	andeq	ip, r2, r0, lsl r7
   1e634:	andeq	ip, r2, ip, lsr #13
   1e638:	muleq	r2, ip, r0
   1e63c:	andeq	ip, r2, r4, asr #14
   1e640:	andeq	ip, r2, r4, asr #12
   1e644:	andeq	ip, r2, r8, ror #2
   1e648:	muleq	r2, r0, r5
   1e64c:	andeq	ip, r2, r8, lsl r5
   1e650:	andeq	ip, r2, r0, lsr #9
   1e654:	andeq	ip, r2, r4, asr r4
   1e658:	andeq	ip, r2, ip, lsl #8
   1e65c:	andeq	ip, r2, r8, asr #7
   1e660:	andeq	ip, r2, ip, ror #6
   1e664:	andeq	ip, r2, ip, lsl r3
   1e668:			; <UNDEFINED> instruction: 0x0002c5bc
   1e66c:			; <UNDEFINED> instruction: 0x0002c2b0
   1e670:	andeq	ip, r2, r8, lsr #4
   1e674:	andeq	ip, r2, r4, lsr #3
   1e678:	andeq	ip, r2, ip, lsr r0
   1e67c:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1e680:	andeq	ip, r2, ip, lsl r0
   1e684:	sub	r3, r0, #1
   1e688:	cmp	r3, #5
   1e68c:	ldrls	pc, [pc, r3, lsl #2]
   1e690:	b	1e70c <g_strcmp0@plt+0x888c>
   1e694:			; <UNDEFINED> instruction: 0x0001e6bc
   1e698:	andeq	lr, r1, ip, asr #13
   1e69c:	ldrdeq	lr, [r1], -ip
   1e6a0:	andeq	lr, r1, ip, ror #13
   1e6a4:	strdeq	lr, [r1], -ip
   1e6a8:	andeq	lr, r1, ip, lsr #13
   1e6ac:	mov	r2, #5
   1e6b0:	ldr	r1, [pc, #116]	; 1e72c <g_strcmp0@plt+0x88ac>
   1e6b4:	mov	r0, #0
   1e6b8:	b	15880 <dcgettext@plt>
   1e6bc:	mov	r2, #5
   1e6c0:	ldr	r1, [pc, #104]	; 1e730 <g_strcmp0@plt+0x88b0>
   1e6c4:	mov	r0, #0
   1e6c8:	b	15880 <dcgettext@plt>
   1e6cc:	mov	r2, #5
   1e6d0:	ldr	r1, [pc, #92]	; 1e734 <g_strcmp0@plt+0x88b4>
   1e6d4:	mov	r0, #0
   1e6d8:	b	15880 <dcgettext@plt>
   1e6dc:	mov	r2, #5
   1e6e0:	ldr	r1, [pc, #80]	; 1e738 <g_strcmp0@plt+0x88b8>
   1e6e4:	mov	r0, #0
   1e6e8:	b	15880 <dcgettext@plt>
   1e6ec:	mov	r2, #5
   1e6f0:	ldr	r1, [pc, #68]	; 1e73c <g_strcmp0@plt+0x88bc>
   1e6f4:	mov	r0, #0
   1e6f8:	b	15880 <dcgettext@plt>
   1e6fc:	mov	r2, #5
   1e700:	ldr	r1, [pc, #56]	; 1e740 <g_strcmp0@plt+0x88c0>
   1e704:	mov	r0, #0
   1e708:	b	15880 <dcgettext@plt>
   1e70c:	mov	r3, r0
   1e710:	push	{r4, lr}
   1e714:	mov	r1, #16
   1e718:	ldr	r2, [pc, #36]	; 1e744 <g_strcmp0@plt+0x88c4>
   1e71c:	ldr	r0, [pc, #36]	; 1e748 <g_strcmp0@plt+0x88c8>
   1e720:	bl	151f0 <g_log@plt>
   1e724:	mov	r0, #0
   1e728:	pop	{r4, pc}
   1e72c:	andeq	sp, r2, r0, asr #17
   1e730:	ldrdeq	sp, [r2], -ip
   1e734:	strdeq	sp, [r2], -r8
   1e738:	andeq	sp, r2, ip, lsr #16
   1e73c:	andeq	sp, r2, ip, asr r8
   1e740:	andeq	sp, r2, r8, ror r8
   1e744:	strdeq	sp, [r2], -r8
   1e748:	andeq	r8, r2, ip, lsl #29
   1e74c:	sub	r3, r0, #1
   1e750:	cmp	r3, #5
   1e754:	ldrls	pc, [pc, r3, lsl #2]
   1e758:	b	1e7d4 <g_strcmp0@plt+0x8954>
   1e75c:	andeq	lr, r1, r4, lsl #15
   1e760:	muleq	r1, r4, r7
   1e764:	andeq	lr, r1, r4, lsr #15
   1e768:			; <UNDEFINED> instruction: 0x0001e7b4
   1e76c:	andeq	lr, r1, r4, asr #15
   1e770:	andeq	lr, r1, r4, ror r7
   1e774:	mov	r2, #5
   1e778:	ldr	r1, [pc, #116]	; 1e7f4 <g_strcmp0@plt+0x8974>
   1e77c:	mov	r0, #0
   1e780:	b	15880 <dcgettext@plt>
   1e784:	mov	r2, #5
   1e788:	ldr	r1, [pc, #104]	; 1e7f8 <g_strcmp0@plt+0x8978>
   1e78c:	mov	r0, #0
   1e790:	b	15880 <dcgettext@plt>
   1e794:	mov	r2, #5
   1e798:	ldr	r1, [pc, #92]	; 1e7fc <g_strcmp0@plt+0x897c>
   1e79c:	mov	r0, #0
   1e7a0:	b	15880 <dcgettext@plt>
   1e7a4:	mov	r2, #5
   1e7a8:	ldr	r1, [pc, #80]	; 1e800 <g_strcmp0@plt+0x8980>
   1e7ac:	mov	r0, #0
   1e7b0:	b	15880 <dcgettext@plt>
   1e7b4:	mov	r2, #5
   1e7b8:	ldr	r1, [pc, #68]	; 1e804 <g_strcmp0@plt+0x8984>
   1e7bc:	mov	r0, #0
   1e7c0:	b	15880 <dcgettext@plt>
   1e7c4:	mov	r2, #5
   1e7c8:	ldr	r1, [pc, #56]	; 1e808 <g_strcmp0@plt+0x8988>
   1e7cc:	mov	r0, #0
   1e7d0:	b	15880 <dcgettext@plt>
   1e7d4:	mov	r3, r0
   1e7d8:	push	{r4, lr}
   1e7dc:	mov	r1, #16
   1e7e0:	ldr	r2, [pc, #36]	; 1e80c <g_strcmp0@plt+0x898c>
   1e7e4:	ldr	r0, [pc, #36]	; 1e810 <g_strcmp0@plt+0x8990>
   1e7e8:	bl	151f0 <g_log@plt>
   1e7ec:	mov	r0, #0
   1e7f0:	pop	{r4, pc}
   1e7f4:	andeq	sp, r2, ip, asr #19
   1e7f8:	andeq	sp, r2, r4, lsl r9
   1e7fc:	andeq	sp, r2, ip, ror #18
   1e800:	andeq	sp, r2, r4, asr #18
   1e804:	andeq	sp, r2, ip, lsr #18
   1e808:	muleq	r2, r4, r9
   1e80c:	strdeq	sp, [r2], -r8
   1e810:	andeq	r8, r2, ip, lsl #29
   1e814:	cmp	r0, #2
   1e818:	beq	1e84c <g_strcmp0@plt+0x89cc>
   1e81c:	cmp	r0, #3
   1e820:	beq	1e86c <g_strcmp0@plt+0x89ec>
   1e824:	cmp	r0, #1
   1e828:	beq	1e85c <g_strcmp0@plt+0x89dc>
   1e82c:	mov	r3, r0
   1e830:	push	{r4, lr}
   1e834:	mov	r1, #16
   1e838:	ldr	r2, [pc, #60]	; 1e87c <g_strcmp0@plt+0x89fc>
   1e83c:	ldr	r0, [pc, #60]	; 1e880 <g_strcmp0@plt+0x8a00>
   1e840:	bl	151f0 <g_log@plt>
   1e844:	mov	r0, #0
   1e848:	pop	{r4, pc}
   1e84c:	mov	r2, #5
   1e850:	ldr	r1, [pc, #44]	; 1e884 <g_strcmp0@plt+0x8a04>
   1e854:	mov	r0, #0
   1e858:	b	15880 <dcgettext@plt>
   1e85c:	mov	r2, #5
   1e860:	ldr	r1, [pc, #32]	; 1e888 <g_strcmp0@plt+0x8a08>
   1e864:	mov	r0, #0
   1e868:	b	15880 <dcgettext@plt>
   1e86c:	mov	r2, #5
   1e870:	ldr	r1, [pc, #20]	; 1e88c <g_strcmp0@plt+0x8a0c>
   1e874:	mov	r0, #0
   1e878:	b	15880 <dcgettext@plt>
   1e87c:	andeq	sp, r2, r0, lsl sl
   1e880:	andeq	r8, r2, ip, lsl #29
   1e884:	strdeq	sp, [r2], -ip
   1e888:	strdeq	sp, [r2], -r4
   1e88c:	andeq	sp, r2, r8, lsl #20
   1e890:	cmp	r0, #35	; 0x23
   1e894:	ldrls	pc, [pc, r0, lsl #2]
   1e898:	b	1eb6c <g_strcmp0@plt+0x8cec>
   1e89c:	andeq	lr, r1, ip, asr fp
   1e8a0:	andeq	lr, r1, ip, asr #22
   1e8a4:	andeq	lr, r1, ip, lsr fp
   1e8a8:	andeq	lr, r1, ip, lsr #22
   1e8ac:	andeq	lr, r1, ip, lsl fp
   1e8b0:	andeq	lr, r1, ip, lsl #22
   1e8b4:	strdeq	lr, [r1], -ip
   1e8b8:	andeq	lr, r1, ip, ror #21
   1e8bc:	ldrdeq	lr, [r1], -ip
   1e8c0:	andeq	lr, r1, ip, asr #21
   1e8c4:			; <UNDEFINED> instruction: 0x0001eabc
   1e8c8:	andeq	lr, r1, ip, lsr #21
   1e8cc:	muleq	r1, ip, sl
   1e8d0:	andeq	lr, r1, ip, lsl #21
   1e8d4:	andeq	lr, r1, ip, ror sl
   1e8d8:	andeq	lr, r1, ip, ror #20
   1e8dc:	andeq	lr, r1, ip, asr sl
   1e8e0:	andeq	lr, r1, ip, asr #20
   1e8e4:	andeq	lr, r1, ip, lsr sl
   1e8e8:	andeq	lr, r1, ip, lsr #20
   1e8ec:	andeq	lr, r1, ip, lsl sl
   1e8f0:	andeq	lr, r1, ip, lsl #20
   1e8f4:	strdeq	lr, [r1], -ip
   1e8f8:	andeq	lr, r1, ip, ror #19
   1e8fc:	ldrdeq	lr, [r1], -ip
   1e900:	andeq	lr, r1, ip, asr #19
   1e904:			; <UNDEFINED> instruction: 0x0001e9bc
   1e908:	andeq	lr, r1, ip, lsr #19
   1e90c:	muleq	r1, ip, r9
   1e910:	andeq	lr, r1, ip, lsl #19
   1e914:	andeq	lr, r1, ip, ror r9
   1e918:	andeq	lr, r1, ip, ror #18
   1e91c:	andeq	lr, r1, ip, asr r9
   1e920:	andeq	lr, r1, ip, asr #18
   1e924:	andeq	lr, r1, ip, lsr r9
   1e928:	andeq	lr, r1, ip, lsr #18
   1e92c:	mov	r2, #5
   1e930:	ldr	r1, [pc, #600]	; 1eb90 <g_strcmp0@plt+0x8d10>
   1e934:	mov	r0, #0
   1e938:	b	15880 <dcgettext@plt>
   1e93c:	mov	r2, #5
   1e940:	ldr	r1, [pc, #588]	; 1eb94 <g_strcmp0@plt+0x8d14>
   1e944:	mov	r0, #0
   1e948:	b	15880 <dcgettext@plt>
   1e94c:	mov	r2, #5
   1e950:	ldr	r1, [pc, #576]	; 1eb98 <g_strcmp0@plt+0x8d18>
   1e954:	mov	r0, #0
   1e958:	b	15880 <dcgettext@plt>
   1e95c:	mov	r2, #5
   1e960:	ldr	r1, [pc, #564]	; 1eb9c <g_strcmp0@plt+0x8d1c>
   1e964:	mov	r0, #0
   1e968:	b	15880 <dcgettext@plt>
   1e96c:	mov	r2, #5
   1e970:	ldr	r1, [pc, #552]	; 1eba0 <g_strcmp0@plt+0x8d20>
   1e974:	mov	r0, #0
   1e978:	b	15880 <dcgettext@plt>
   1e97c:	mov	r2, #5
   1e980:	ldr	r1, [pc, #540]	; 1eba4 <g_strcmp0@plt+0x8d24>
   1e984:	mov	r0, #0
   1e988:	b	15880 <dcgettext@plt>
   1e98c:	mov	r2, #5
   1e990:	ldr	r1, [pc, #528]	; 1eba8 <g_strcmp0@plt+0x8d28>
   1e994:	mov	r0, #0
   1e998:	b	15880 <dcgettext@plt>
   1e99c:	mov	r2, #5
   1e9a0:	ldr	r1, [pc, #516]	; 1ebac <g_strcmp0@plt+0x8d2c>
   1e9a4:	mov	r0, #0
   1e9a8:	b	15880 <dcgettext@plt>
   1e9ac:	mov	r2, #5
   1e9b0:	ldr	r1, [pc, #504]	; 1ebb0 <g_strcmp0@plt+0x8d30>
   1e9b4:	mov	r0, #0
   1e9b8:	b	15880 <dcgettext@plt>
   1e9bc:	mov	r2, #5
   1e9c0:	ldr	r1, [pc, #492]	; 1ebb4 <g_strcmp0@plt+0x8d34>
   1e9c4:	mov	r0, #0
   1e9c8:	b	15880 <dcgettext@plt>
   1e9cc:	mov	r2, #5
   1e9d0:	ldr	r1, [pc, #480]	; 1ebb8 <g_strcmp0@plt+0x8d38>
   1e9d4:	mov	r0, #0
   1e9d8:	b	15880 <dcgettext@plt>
   1e9dc:	mov	r2, #5
   1e9e0:	ldr	r1, [pc, #468]	; 1ebbc <g_strcmp0@plt+0x8d3c>
   1e9e4:	mov	r0, #0
   1e9e8:	b	15880 <dcgettext@plt>
   1e9ec:	mov	r2, #5
   1e9f0:	ldr	r1, [pc, #456]	; 1ebc0 <g_strcmp0@plt+0x8d40>
   1e9f4:	mov	r0, #0
   1e9f8:	b	15880 <dcgettext@plt>
   1e9fc:	mov	r2, #5
   1ea00:	ldr	r1, [pc, #444]	; 1ebc4 <g_strcmp0@plt+0x8d44>
   1ea04:	mov	r0, #0
   1ea08:	b	15880 <dcgettext@plt>
   1ea0c:	mov	r2, #5
   1ea10:	ldr	r1, [pc, #432]	; 1ebc8 <g_strcmp0@plt+0x8d48>
   1ea14:	mov	r0, #0
   1ea18:	b	15880 <dcgettext@plt>
   1ea1c:	mov	r2, #5
   1ea20:	ldr	r1, [pc, #420]	; 1ebcc <g_strcmp0@plt+0x8d4c>
   1ea24:	mov	r0, #0
   1ea28:	b	15880 <dcgettext@plt>
   1ea2c:	mov	r2, #5
   1ea30:	ldr	r1, [pc, #408]	; 1ebd0 <g_strcmp0@plt+0x8d50>
   1ea34:	mov	r0, #0
   1ea38:	b	15880 <dcgettext@plt>
   1ea3c:	mov	r2, #5
   1ea40:	ldr	r1, [pc, #396]	; 1ebd4 <g_strcmp0@plt+0x8d54>
   1ea44:	mov	r0, #0
   1ea48:	b	15880 <dcgettext@plt>
   1ea4c:	mov	r2, #5
   1ea50:	ldr	r1, [pc, #384]	; 1ebd8 <g_strcmp0@plt+0x8d58>
   1ea54:	mov	r0, #0
   1ea58:	b	15880 <dcgettext@plt>
   1ea5c:	mov	r2, #5
   1ea60:	ldr	r1, [pc, #372]	; 1ebdc <g_strcmp0@plt+0x8d5c>
   1ea64:	mov	r0, #0
   1ea68:	b	15880 <dcgettext@plt>
   1ea6c:	mov	r2, #5
   1ea70:	ldr	r1, [pc, #360]	; 1ebe0 <g_strcmp0@plt+0x8d60>
   1ea74:	mov	r0, #0
   1ea78:	b	15880 <dcgettext@plt>
   1ea7c:	mov	r2, #5
   1ea80:	ldr	r1, [pc, #348]	; 1ebe4 <g_strcmp0@plt+0x8d64>
   1ea84:	mov	r0, #0
   1ea88:	b	15880 <dcgettext@plt>
   1ea8c:	mov	r2, #5
   1ea90:	ldr	r1, [pc, #336]	; 1ebe8 <g_strcmp0@plt+0x8d68>
   1ea94:	mov	r0, #0
   1ea98:	b	15880 <dcgettext@plt>
   1ea9c:	mov	r2, #5
   1eaa0:	ldr	r1, [pc, #324]	; 1ebec <g_strcmp0@plt+0x8d6c>
   1eaa4:	mov	r0, #0
   1eaa8:	b	15880 <dcgettext@plt>
   1eaac:	mov	r2, #5
   1eab0:	ldr	r1, [pc, #312]	; 1ebf0 <g_strcmp0@plt+0x8d70>
   1eab4:	mov	r0, #0
   1eab8:	b	15880 <dcgettext@plt>
   1eabc:	mov	r2, #5
   1eac0:	ldr	r1, [pc, #300]	; 1ebf4 <g_strcmp0@plt+0x8d74>
   1eac4:	mov	r0, #0
   1eac8:	b	15880 <dcgettext@plt>
   1eacc:	mov	r2, #5
   1ead0:	ldr	r1, [pc, #288]	; 1ebf8 <g_strcmp0@plt+0x8d78>
   1ead4:	mov	r0, #0
   1ead8:	b	15880 <dcgettext@plt>
   1eadc:	mov	r2, #5
   1eae0:	ldr	r1, [pc, #276]	; 1ebfc <g_strcmp0@plt+0x8d7c>
   1eae4:	mov	r0, #0
   1eae8:	b	15880 <dcgettext@plt>
   1eaec:	mov	r2, #5
   1eaf0:	ldr	r1, [pc, #264]	; 1ec00 <g_strcmp0@plt+0x8d80>
   1eaf4:	mov	r0, #0
   1eaf8:	b	15880 <dcgettext@plt>
   1eafc:	mov	r2, #5
   1eb00:	ldr	r1, [pc, #252]	; 1ec04 <g_strcmp0@plt+0x8d84>
   1eb04:	mov	r0, #0
   1eb08:	b	15880 <dcgettext@plt>
   1eb0c:	mov	r2, #5
   1eb10:	ldr	r1, [pc, #240]	; 1ec08 <g_strcmp0@plt+0x8d88>
   1eb14:	mov	r0, #0
   1eb18:	b	15880 <dcgettext@plt>
   1eb1c:	mov	r2, #5
   1eb20:	ldr	r1, [pc, #228]	; 1ec0c <g_strcmp0@plt+0x8d8c>
   1eb24:	mov	r0, #0
   1eb28:	b	15880 <dcgettext@plt>
   1eb2c:	mov	r2, #5
   1eb30:	ldr	r1, [pc, #216]	; 1ec10 <g_strcmp0@plt+0x8d90>
   1eb34:	mov	r0, #0
   1eb38:	b	15880 <dcgettext@plt>
   1eb3c:	mov	r2, #5
   1eb40:	ldr	r1, [pc, #204]	; 1ec14 <g_strcmp0@plt+0x8d94>
   1eb44:	mov	r0, #0
   1eb48:	b	15880 <dcgettext@plt>
   1eb4c:	mov	r2, #5
   1eb50:	ldr	r1, [pc, #192]	; 1ec18 <g_strcmp0@plt+0x8d98>
   1eb54:	mov	r0, #0
   1eb58:	b	15880 <dcgettext@plt>
   1eb5c:	mov	r2, #5
   1eb60:	ldr	r1, [pc, #180]	; 1ec1c <g_strcmp0@plt+0x8d9c>
   1eb64:	mov	r0, #0
   1eb68:	b	15880 <dcgettext@plt>
   1eb6c:	push	{r4, lr}
   1eb70:	bl	1522c <pk_status_enum_to_string@plt>
   1eb74:	ldr	r2, [pc, #164]	; 1ec20 <g_strcmp0@plt+0x8da0>
   1eb78:	mov	r1, #16
   1eb7c:	mov	r3, r0
   1eb80:	ldr	r0, [pc, #156]	; 1ec24 <g_strcmp0@plt+0x8da4>
   1eb84:	bl	151f0 <g_log@plt>
   1eb88:	mov	r0, #0
   1eb8c:	pop	{r4, pc}
   1eb90:	andeq	sp, r2, ip, lsr sp
   1eb94:	andeq	sp, r2, r4, lsl sp
   1eb98:	andeq	sp, r2, r8, ror #25
   1eb9c:			; <UNDEFINED> instruction: 0x0002dcbc
   1eba0:	andeq	sp, r2, r0, lsr #25
   1eba4:	andeq	sp, r2, ip, ror ip
   1eba8:	andeq	sp, r2, r0, ror #24
   1ebac:	andeq	sp, r2, r0, asr #24
   1ebb0:	andeq	sp, r2, r0, lsr ip
   1ebb4:	andeq	sp, r2, ip, lsl ip
   1ebb8:	strdeq	sp, [r2], -ip
   1ebbc:	andeq	sp, r2, r8, ror #23
   1ebc0:	andeq	sp, r2, r8, asr #23
   1ebc4:			; <UNDEFINED> instruction: 0x0002dbb0
   1ebc8:	muleq	r2, r0, fp
   1ebcc:	andeq	sp, r2, ip, ror #22
   1ebd0:	andeq	sp, r2, r0, ror #22
   1ebd4:	andeq	sp, r2, r4, asr fp
   1ebd8:	andeq	sp, r2, r4, asr #22
   1ebdc:	andeq	sp, r2, r0, lsr fp
   1ebe0:	andeq	sp, r2, r0, lsr #22
   1ebe4:	andeq	sp, r2, ip, lsl #22
   1ebe8:	strdeq	sp, [r2], -r4
   1ebec:	andeq	sp, r2, r0, ror #21
   1ebf0:	andeq	sp, r2, r8, asr #21
   1ebf4:			; <UNDEFINED> instruction: 0x0002dab4
   1ebf8:	andeq	r9, r2, r4, ror r6
   1ebfc:	andeq	sp, r2, r0, lsl #21
   1ec00:	muleq	r2, r8, sl
   1ec04:	andeq	r9, r2, r0, lsr #29
   1ec08:	andeq	sp, r2, ip, ror #20
   1ec0c:	andeq	sp, r2, r0, ror #20
   1ec10:	andeq	sp, r2, r8, asr sl
   1ec14:	andeq	sp, r2, r8, lsr sl
   1ec18:	andeq	sp, r2, r4, asr #20
   1ec1c:	andeq	sp, r2, r8, lsr #20
   1ec20:	andeq	sp, r2, ip, asr #26
   1ec24:	andeq	r8, r2, ip, lsl #29
   1ec28:	sub	r3, r0, #3
   1ec2c:	push	{r4, lr}
   1ec30:	mov	r4, r1
   1ec34:	sub	sp, sp, #8
   1ec38:	cmp	r3, #6
   1ec3c:	ldrls	pc, [pc, r3, lsl #2]
   1ec40:	b	1ed1c <g_strcmp0@plt+0x8e9c>
   1ec44:	andeq	lr, r1, ip, lsl #25
   1ec48:	andeq	lr, r1, r4, lsr #25
   1ec4c:			; <UNDEFINED> instruction: 0x0001ecbc
   1ec50:	ldrdeq	lr, [r1], -r4
   1ec54:	andeq	lr, r1, ip, ror #25
   1ec58:	andeq	lr, r1, r4, lsl #26
   1ec5c:	andeq	lr, r1, r0, ror #24
   1ec60:	mov	r3, #5
   1ec64:	str	r3, [sp]
   1ec68:	ldr	r2, [pc, #208]	; 1ed40 <g_strcmp0@plt+0x8ec0>
   1ec6c:	mov	r3, r1
   1ec70:	ldr	r1, [pc, #204]	; 1ed44 <g_strcmp0@plt+0x8ec4>
   1ec74:	mov	r0, #0
   1ec78:	bl	154a8 <dcngettext@plt>
   1ec7c:	mov	r1, r4
   1ec80:	add	sp, sp, #8
   1ec84:	pop	{r4, lr}
   1ec88:	b	15490 <g_strdup_printf@plt>
   1ec8c:	mov	r3, #5
   1ec90:	str	r3, [sp]
   1ec94:	ldr	r2, [pc, #172]	; 1ed48 <g_strcmp0@plt+0x8ec8>
   1ec98:	mov	r3, r1
   1ec9c:	ldr	r1, [pc, #168]	; 1ed4c <g_strcmp0@plt+0x8ecc>
   1eca0:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1eca4:	mov	r3, #5
   1eca8:	str	r3, [sp]
   1ecac:	ldr	r2, [pc, #156]	; 1ed50 <g_strcmp0@plt+0x8ed0>
   1ecb0:	mov	r3, r1
   1ecb4:	ldr	r1, [pc, #152]	; 1ed54 <g_strcmp0@plt+0x8ed4>
   1ecb8:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1ecbc:	mov	r3, #5
   1ecc0:	str	r3, [sp]
   1ecc4:	ldr	r2, [pc, #140]	; 1ed58 <g_strcmp0@plt+0x8ed8>
   1ecc8:	mov	r3, r1
   1eccc:	ldr	r1, [pc, #136]	; 1ed5c <g_strcmp0@plt+0x8edc>
   1ecd0:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1ecd4:	mov	r3, #5
   1ecd8:	str	r3, [sp]
   1ecdc:	ldr	r2, [pc, #124]	; 1ed60 <g_strcmp0@plt+0x8ee0>
   1ece0:	mov	r3, r1
   1ece4:	ldr	r1, [pc, #120]	; 1ed64 <g_strcmp0@plt+0x8ee4>
   1ece8:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1ecec:	mov	r3, #5
   1ecf0:	str	r3, [sp]
   1ecf4:	ldr	r2, [pc, #108]	; 1ed68 <g_strcmp0@plt+0x8ee8>
   1ecf8:	mov	r3, r1
   1ecfc:	ldr	r1, [pc, #104]	; 1ed6c <g_strcmp0@plt+0x8eec>
   1ed00:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1ed04:	mov	r3, #5
   1ed08:	str	r3, [sp]
   1ed0c:	ldr	r2, [pc, #92]	; 1ed70 <g_strcmp0@plt+0x8ef0>
   1ed10:	mov	r3, r1
   1ed14:	ldr	r1, [pc, #88]	; 1ed74 <g_strcmp0@plt+0x8ef4>
   1ed18:	b	1ec74 <g_strcmp0@plt+0x8df4>
   1ed1c:	bl	15b44 <pk_info_enum_to_string@plt>
   1ed20:	ldr	r2, [pc, #80]	; 1ed78 <g_strcmp0@plt+0x8ef8>
   1ed24:	mov	r1, #16
   1ed28:	mov	r3, r0
   1ed2c:	ldr	r0, [pc, #72]	; 1ed7c <g_strcmp0@plt+0x8efc>
   1ed30:	bl	151f0 <g_log@plt>
   1ed34:	mov	r0, #0
   1ed38:	add	sp, sp, #8
   1ed3c:	pop	{r4, pc}
   1ed40:	andeq	sp, r2, r0, asr lr
   1ed44:	andeq	sp, r2, r4, ror #28
   1ed48:	andeq	sp, r2, r4, ror #26
   1ed4c:	andeq	sp, r2, r8, ror sp
   1ed50:	andeq	sp, r2, r0, lsr #28
   1ed54:	andeq	sp, r2, r8, lsr lr
   1ed58:	andeq	sp, r2, ip, lsl #27
   1ed5c:	muleq	r2, r8, sp
   1ed60:	strdeq	sp, [r2], -r8
   1ed64:	andeq	sp, r2, ip, lsl #28
   1ed68:	andeq	sp, r2, r4, lsr #27
   1ed6c:			; <UNDEFINED> instruction: 0x0002ddbc
   1ed70:	ldrdeq	sp, [r2], -r0
   1ed74:	andeq	sp, r2, r4, ror #27
   1ed78:	andeq	sp, r2, r8, ror lr
   1ed7c:	andeq	r8, r2, ip, lsl #29
   1ed80:	sub	r3, r0, #1
   1ed84:	cmp	r3, #23
   1ed88:	ldrls	pc, [pc, r3, lsl #2]
   1ed8c:	b	1eea0 <g_strcmp0@plt+0x9020>
   1ed90:	andeq	lr, r1, r0, lsl #28
   1ed94:	andeq	lr, r1, r0, lsl lr
   1ed98:	andeq	lr, r1, r0, lsr #28
   1ed9c:	andeq	lr, r1, r0, lsr lr
   1eda0:	andeq	lr, r1, r0, asr #28
   1eda4:	andeq	lr, r1, r0, asr lr
   1eda8:	andeq	lr, r1, r0, ror #28
   1edac:	andeq	lr, r1, r0, ror lr
   1edb0:	andeq	lr, r1, r0, lsl #29
   1edb4:	andeq	lr, r1, r0, lsr #29
   1edb8:	andeq	lr, r1, r0, lsr #29
   1edbc:	andeq	lr, r1, r0, lsr #29
   1edc0:	andeq	lr, r1, r0, lsr #29
   1edc4:	andeq	lr, r1, r0, lsr #29
   1edc8:	andeq	lr, r1, r0, lsr #29
   1edcc:	andeq	lr, r1, r0, lsl #28
   1edd0:	andeq	lr, r1, r0, lsl lr
   1edd4:	andeq	lr, r1, r0, lsr #29
   1edd8:	andeq	lr, r1, r0, lsr #29
   1eddc:	andeq	lr, r1, r0, lsr #29
   1ede0:	andeq	lr, r1, r0, lsr #29
   1ede4:	andeq	lr, r1, r0, lsr #29
   1ede8:	muleq	r1, r0, lr
   1edec:	strdeq	lr, [r1], -r0
   1edf0:	mov	r2, #5
   1edf4:	ldr	r1, [pc, #200]	; 1eec4 <g_strcmp0@plt+0x9044>
   1edf8:	mov	r0, #0
   1edfc:	b	15880 <dcgettext@plt>
   1ee00:	mov	r2, #5
   1ee04:	ldr	r1, [pc, #188]	; 1eec8 <g_strcmp0@plt+0x9048>
   1ee08:	mov	r0, #0
   1ee0c:	b	15880 <dcgettext@plt>
   1ee10:	mov	r2, #5
   1ee14:	ldr	r1, [pc, #176]	; 1eecc <g_strcmp0@plt+0x904c>
   1ee18:	mov	r0, #0
   1ee1c:	b	15880 <dcgettext@plt>
   1ee20:	mov	r2, #5
   1ee24:	ldr	r1, [pc, #164]	; 1eed0 <g_strcmp0@plt+0x9050>
   1ee28:	mov	r0, #0
   1ee2c:	b	15880 <dcgettext@plt>
   1ee30:	mov	r2, #5
   1ee34:	ldr	r1, [pc, #152]	; 1eed4 <g_strcmp0@plt+0x9054>
   1ee38:	mov	r0, #0
   1ee3c:	b	15880 <dcgettext@plt>
   1ee40:	mov	r2, #5
   1ee44:	ldr	r1, [pc, #140]	; 1eed8 <g_strcmp0@plt+0x9058>
   1ee48:	mov	r0, #0
   1ee4c:	b	15880 <dcgettext@plt>
   1ee50:	mov	r2, #5
   1ee54:	ldr	r1, [pc, #128]	; 1eedc <g_strcmp0@plt+0x905c>
   1ee58:	mov	r0, #0
   1ee5c:	b	15880 <dcgettext@plt>
   1ee60:	mov	r2, #5
   1ee64:	ldr	r1, [pc, #116]	; 1eee0 <g_strcmp0@plt+0x9060>
   1ee68:	mov	r0, #0
   1ee6c:	b	15880 <dcgettext@plt>
   1ee70:	mov	r2, #5
   1ee74:	ldr	r1, [pc, #104]	; 1eee4 <g_strcmp0@plt+0x9064>
   1ee78:	mov	r0, #0
   1ee7c:	b	15880 <dcgettext@plt>
   1ee80:	mov	r2, #5
   1ee84:	ldr	r1, [pc, #92]	; 1eee8 <g_strcmp0@plt+0x9068>
   1ee88:	mov	r0, #0
   1ee8c:	b	15880 <dcgettext@plt>
   1ee90:	mov	r2, #5
   1ee94:	ldr	r1, [pc, #80]	; 1eeec <g_strcmp0@plt+0x906c>
   1ee98:	mov	r0, #0
   1ee9c:	b	15880 <dcgettext@plt>
   1eea0:	push	{r4, lr}
   1eea4:	bl	15b44 <pk_info_enum_to_string@plt>
   1eea8:	ldr	r2, [pc, #64]	; 1eef0 <g_strcmp0@plt+0x9070>
   1eeac:	mov	r1, #16
   1eeb0:	mov	r3, r0
   1eeb4:	ldr	r0, [pc, #56]	; 1eef4 <g_strcmp0@plt+0x9074>
   1eeb8:	bl	151f0 <g_log@plt>
   1eebc:	mov	r0, #0
   1eec0:	pop	{r4, pc}
   1eec4:	andeq	sp, r2, r8, lsr #30
   1eec8:	andeq	sp, r2, r0, lsl pc
   1eecc:	andeq	sp, r2, ip, lsl pc
   1eed0:	muleq	r2, r8, lr
   1eed4:	andeq	sp, r2, ip, ror #29
   1eed8:	andeq	sp, r2, r8, lsr #29
   1eedc:	ldrdeq	sp, [r2], -ip
   1eee0:			; <UNDEFINED> instruction: 0x0002deb8
   1eee4:	andeq	sp, r2, ip, asr #29
   1eee8:	andeq	sp, r2, r0, lsl #30
   1eeec:	andeq	sp, r2, r0, lsr pc
   1eef0:	andeq	sp, r2, ip, lsr pc
   1eef4:	andeq	r8, r2, ip, lsl #29
   1eef8:	sub	r3, r0, #10
   1eefc:	cmp	r3, #12
   1ef00:	ldrls	pc, [pc, r3, lsl #2]
   1ef04:	b	1efcc <g_strcmp0@plt+0x914c>
   1ef08:	andeq	lr, r1, ip, asr #30
   1ef0c:	andeq	lr, r1, ip, asr pc
   1ef10:	andeq	lr, r1, ip, ror #30
   1ef14:	andeq	lr, r1, ip, ror pc
   1ef18:	andeq	lr, r1, ip, lsl #31
   1ef1c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1ef20:	andeq	lr, r1, ip, asr #31
   1ef24:	andeq	lr, r1, ip, asr #31
   1ef28:	andeq	lr, r1, ip, asr #31
   1ef2c:	andeq	lr, r1, ip, lsr #31
   1ef30:	andeq	lr, r1, ip, asr #31
   1ef34:			; <UNDEFINED> instruction: 0x0001efbc
   1ef38:	andeq	lr, r1, ip, lsr pc
   1ef3c:	mov	r2, #5
   1ef40:	ldr	r1, [pc, #168]	; 1eff0 <g_strcmp0@plt+0x9170>
   1ef44:	mov	r0, #0
   1ef48:	b	15880 <dcgettext@plt>
   1ef4c:	mov	r2, #5
   1ef50:	ldr	r1, [pc, #156]	; 1eff4 <g_strcmp0@plt+0x9174>
   1ef54:	mov	r0, #0
   1ef58:	b	15880 <dcgettext@plt>
   1ef5c:	mov	r2, #5
   1ef60:	ldr	r1, [pc, #144]	; 1eff8 <g_strcmp0@plt+0x9178>
   1ef64:	mov	r0, #0
   1ef68:	b	15880 <dcgettext@plt>
   1ef6c:	mov	r2, #5
   1ef70:	ldr	r1, [pc, #132]	; 1effc <g_strcmp0@plt+0x917c>
   1ef74:	mov	r0, #0
   1ef78:	b	15880 <dcgettext@plt>
   1ef7c:	mov	r2, #5
   1ef80:	ldr	r1, [pc, #120]	; 1f000 <g_strcmp0@plt+0x9180>
   1ef84:	mov	r0, #0
   1ef88:	b	15880 <dcgettext@plt>
   1ef8c:	mov	r2, #5
   1ef90:	ldr	r1, [pc, #108]	; 1f004 <g_strcmp0@plt+0x9184>
   1ef94:	mov	r0, #0
   1ef98:	b	15880 <dcgettext@plt>
   1ef9c:	mov	r2, #5
   1efa0:	ldr	r1, [pc, #96]	; 1f008 <g_strcmp0@plt+0x9188>
   1efa4:	mov	r0, #0
   1efa8:	b	15880 <dcgettext@plt>
   1efac:	mov	r2, #5
   1efb0:	ldr	r1, [pc, #84]	; 1f00c <g_strcmp0@plt+0x918c>
   1efb4:	mov	r0, #0
   1efb8:	b	15880 <dcgettext@plt>
   1efbc:	mov	r2, #5
   1efc0:	ldr	r1, [pc, #72]	; 1f010 <g_strcmp0@plt+0x9190>
   1efc4:	mov	r0, #0
   1efc8:	b	15880 <dcgettext@plt>
   1efcc:	push	{r4, lr}
   1efd0:	bl	15b44 <pk_info_enum_to_string@plt>
   1efd4:	ldr	r2, [pc, #56]	; 1f014 <g_strcmp0@plt+0x9194>
   1efd8:	mov	r1, #16
   1efdc:	mov	r3, r0
   1efe0:	ldr	r0, [pc, #48]	; 1f018 <g_strcmp0@plt+0x9198>
   1efe4:	bl	151f0 <g_log@plt>
   1efe8:	mov	r0, #0
   1efec:	pop	{r4, pc}
   1eff0:			; <UNDEFINED> instruction: 0x0002dfb8
   1eff4:	andeq	sp, r2, r4, asr pc
   1eff8:	andeq	sp, r2, r0, ror #30
   1effc:	andeq	sp, r2, ip, ror #30
   1f000:	andeq	sp, r2, r8, ror pc
   1f004:	andeq	sp, r2, r4, lsl #31
   1f008:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   1f00c:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1f010:	andeq	sp, r2, ip, lsr #31
   1f014:	andeq	sp, r2, ip, lsr pc
   1f018:	andeq	r8, r2, ip, lsl #29
   1f01c:	sub	r3, r0, #10
   1f020:	cmp	r3, #12
   1f024:	ldrls	pc, [pc, r3, lsl #2]
   1f028:	b	1f0f0 <g_strcmp0@plt+0x9270>
   1f02c:	andeq	pc, r1, r0, ror r0	; <UNPREDICTABLE>
   1f030:	andeq	pc, r1, r0, lsl #1
   1f034:	muleq	r1, r0, r0
   1f038:	andeq	pc, r1, r0, lsr #1
   1f03c:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   1f040:	andeq	pc, r1, r0, asr #1
   1f044:	strdeq	pc, [r1], -r0
   1f048:	strdeq	pc, [r1], -r0
   1f04c:	strdeq	pc, [r1], -r0
   1f050:	ldrdeq	pc, [r1], -r0
   1f054:	strdeq	pc, [r1], -r0
   1f058:	andeq	pc, r1, r0, ror #1
   1f05c:	andeq	pc, r1, r0, rrx
   1f060:	mov	r2, #5
   1f064:	ldr	r1, [pc, #168]	; 1f114 <g_strcmp0@plt+0x9294>
   1f068:	mov	r0, #0
   1f06c:	b	15880 <dcgettext@plt>
   1f070:	mov	r2, #5
   1f074:	ldr	r1, [pc, #156]	; 1f118 <g_strcmp0@plt+0x9298>
   1f078:	mov	r0, #0
   1f07c:	b	15880 <dcgettext@plt>
   1f080:	mov	r2, #5
   1f084:	ldr	r1, [pc, #144]	; 1f11c <g_strcmp0@plt+0x929c>
   1f088:	mov	r0, #0
   1f08c:	b	15880 <dcgettext@plt>
   1f090:	mov	r2, #5
   1f094:	ldr	r1, [pc, #132]	; 1f120 <g_strcmp0@plt+0x92a0>
   1f098:	mov	r0, #0
   1f09c:	b	15880 <dcgettext@plt>
   1f0a0:	mov	r2, #5
   1f0a4:	ldr	r1, [pc, #120]	; 1f124 <g_strcmp0@plt+0x92a4>
   1f0a8:	mov	r0, #0
   1f0ac:	b	15880 <dcgettext@plt>
   1f0b0:	mov	r2, #5
   1f0b4:	ldr	r1, [pc, #108]	; 1f128 <g_strcmp0@plt+0x92a8>
   1f0b8:	mov	r0, #0
   1f0bc:	b	15880 <dcgettext@plt>
   1f0c0:	mov	r2, #5
   1f0c4:	ldr	r1, [pc, #96]	; 1f12c <g_strcmp0@plt+0x92ac>
   1f0c8:	mov	r0, #0
   1f0cc:	b	15880 <dcgettext@plt>
   1f0d0:	mov	r2, #5
   1f0d4:	ldr	r1, [pc, #84]	; 1f130 <g_strcmp0@plt+0x92b0>
   1f0d8:	mov	r0, #0
   1f0dc:	b	15880 <dcgettext@plt>
   1f0e0:	mov	r2, #5
   1f0e4:	ldr	r1, [pc, #72]	; 1f134 <g_strcmp0@plt+0x92b4>
   1f0e8:	mov	r0, #0
   1f0ec:	b	15880 <dcgettext@plt>
   1f0f0:	push	{r4, lr}
   1f0f4:	bl	15b44 <pk_info_enum_to_string@plt>
   1f0f8:	ldr	r2, [pc, #56]	; 1f138 <g_strcmp0@plt+0x92b8>
   1f0fc:	mov	r1, #16
   1f100:	mov	r3, r0
   1f104:	ldr	r0, [pc, #48]	; 1f13c <g_strcmp0@plt+0x92bc>
   1f108:	bl	151f0 <g_log@plt>
   1f10c:	mov	r0, #0
   1f110:	pop	{r4, pc}
   1f114:	andeq	lr, r2, r4, lsl r0
   1f118:	andeq	sp, r2, r8, asr #31
   1f11c:	ldrdeq	sp, [r2], -r4
   1f120:	andeq	sp, r2, r0, lsl pc
   1f124:	ldrdeq	sp, [r2], -ip
   1f128:	andeq	sp, r2, r4, ror #31
   1f12c:	strdeq	sp, [r2], -r0
   1f130:	strdeq	sp, [r2], -ip
   1f134:	andeq	lr, r2, r8
   1f138:	andeq	sp, r2, ip, lsr pc
   1f13c:	andeq	r8, r2, ip, lsl #29
   1f140:	cmp	r0, #32
   1f144:	ldrls	pc, [pc, r0, lsl #2]
   1f148:	b	1f3c0 <g_strcmp0@plt+0x9540>
   1f14c:			; <UNDEFINED> instruction: 0x0001f3b0
   1f150:	andeq	pc, r1, r0, lsr #7
   1f154:	muleq	r1, r0, r3
   1f158:	andeq	pc, r1, r0, lsl #7
   1f15c:	andeq	pc, r1, r0, ror r3	; <UNPREDICTABLE>
   1f160:	andeq	pc, r1, r0, ror #6
   1f164:	andeq	pc, r1, r0, asr r3	; <UNPREDICTABLE>
   1f168:	andeq	pc, r1, r0, asr #6
   1f16c:	andeq	pc, r1, r0, lsr r3	; <UNPREDICTABLE>
   1f170:	andeq	pc, r1, r0, lsr #6
   1f174:	andeq	pc, r1, r0, lsl r3	; <UNPREDICTABLE>
   1f178:	andeq	pc, r1, r0, lsl #6
   1f17c:	strdeq	pc, [r1], -r0
   1f180:	andeq	pc, r1, r0, ror #5
   1f184:	ldrdeq	pc, [r1], -r0
   1f188:	andeq	pc, r1, r0, asr #5
   1f18c:			; <UNDEFINED> instruction: 0x0001f2b0
   1f190:	andeq	pc, r1, r0, lsr #5
   1f194:	muleq	r1, r0, r2
   1f198:	andeq	pc, r1, r0, lsl #5
   1f19c:	andeq	pc, r1, r0, ror r2	; <UNPREDICTABLE>
   1f1a0:	andeq	pc, r1, r0, ror #4
   1f1a4:	andeq	pc, r1, r0, asr r2	; <UNPREDICTABLE>
   1f1a8:	andeq	pc, r1, r0, asr #4
   1f1ac:	andeq	pc, r1, r0, lsr r2	; <UNPREDICTABLE>
   1f1b0:	andeq	pc, r1, r0, lsr #4
   1f1b4:	andeq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
   1f1b8:	andeq	pc, r1, r0, lsl #4
   1f1bc:	strdeq	pc, [r1], -r0
   1f1c0:	andeq	pc, r1, r0, ror #3
   1f1c4:	andeq	pc, r1, r0, lsl #7
   1f1c8:	andeq	pc, r1, r0, ror r3	; <UNPREDICTABLE>
   1f1cc:	ldrdeq	pc, [r1], -r0
   1f1d0:	mov	r2, #5
   1f1d4:	ldr	r1, [pc, #520]	; 1f3e4 <g_strcmp0@plt+0x9564>
   1f1d8:	mov	r0, #0
   1f1dc:	b	15880 <dcgettext@plt>
   1f1e0:	mov	r2, #5
   1f1e4:	ldr	r1, [pc, #508]	; 1f3e8 <g_strcmp0@plt+0x9568>
   1f1e8:	mov	r0, #0
   1f1ec:	b	15880 <dcgettext@plt>
   1f1f0:	mov	r2, #5
   1f1f4:	ldr	r1, [pc, #496]	; 1f3ec <g_strcmp0@plt+0x956c>
   1f1f8:	mov	r0, #0
   1f1fc:	b	15880 <dcgettext@plt>
   1f200:	mov	r2, #5
   1f204:	ldr	r1, [pc, #484]	; 1f3f0 <g_strcmp0@plt+0x9570>
   1f208:	mov	r0, #0
   1f20c:	b	15880 <dcgettext@plt>
   1f210:	mov	r2, #5
   1f214:	ldr	r1, [pc, #472]	; 1f3f4 <g_strcmp0@plt+0x9574>
   1f218:	mov	r0, #0
   1f21c:	b	15880 <dcgettext@plt>
   1f220:	mov	r2, #5
   1f224:	ldr	r1, [pc, #460]	; 1f3f8 <g_strcmp0@plt+0x9578>
   1f228:	mov	r0, #0
   1f22c:	b	15880 <dcgettext@plt>
   1f230:	mov	r2, #5
   1f234:	ldr	r1, [pc, #448]	; 1f3fc <g_strcmp0@plt+0x957c>
   1f238:	mov	r0, #0
   1f23c:	b	15880 <dcgettext@plt>
   1f240:	mov	r2, #5
   1f244:	ldr	r1, [pc, #436]	; 1f400 <g_strcmp0@plt+0x9580>
   1f248:	mov	r0, #0
   1f24c:	b	15880 <dcgettext@plt>
   1f250:	mov	r2, #5
   1f254:	ldr	r1, [pc, #424]	; 1f404 <g_strcmp0@plt+0x9584>
   1f258:	mov	r0, #0
   1f25c:	b	15880 <dcgettext@plt>
   1f260:	mov	r2, #5
   1f264:	ldr	r1, [pc, #412]	; 1f408 <g_strcmp0@plt+0x9588>
   1f268:	mov	r0, #0
   1f26c:	b	15880 <dcgettext@plt>
   1f270:	mov	r2, #5
   1f274:	ldr	r1, [pc, #400]	; 1f40c <g_strcmp0@plt+0x958c>
   1f278:	mov	r0, #0
   1f27c:	b	15880 <dcgettext@plt>
   1f280:	mov	r2, #5
   1f284:	ldr	r1, [pc, #388]	; 1f410 <g_strcmp0@plt+0x9590>
   1f288:	mov	r0, #0
   1f28c:	b	15880 <dcgettext@plt>
   1f290:	mov	r2, #5
   1f294:	ldr	r1, [pc, #376]	; 1f414 <g_strcmp0@plt+0x9594>
   1f298:	mov	r0, #0
   1f29c:	b	15880 <dcgettext@plt>
   1f2a0:	mov	r2, #5
   1f2a4:	ldr	r1, [pc, #364]	; 1f418 <g_strcmp0@plt+0x9598>
   1f2a8:	mov	r0, #0
   1f2ac:	b	15880 <dcgettext@plt>
   1f2b0:	mov	r2, #5
   1f2b4:	ldr	r1, [pc, #352]	; 1f41c <g_strcmp0@plt+0x959c>
   1f2b8:	mov	r0, #0
   1f2bc:	b	15880 <dcgettext@plt>
   1f2c0:	mov	r2, #5
   1f2c4:	ldr	r1, [pc, #340]	; 1f420 <g_strcmp0@plt+0x95a0>
   1f2c8:	mov	r0, #0
   1f2cc:	b	15880 <dcgettext@plt>
   1f2d0:	mov	r2, #5
   1f2d4:	ldr	r1, [pc, #328]	; 1f424 <g_strcmp0@plt+0x95a4>
   1f2d8:	mov	r0, #0
   1f2dc:	b	15880 <dcgettext@plt>
   1f2e0:	mov	r2, #5
   1f2e4:	ldr	r1, [pc, #316]	; 1f428 <g_strcmp0@plt+0x95a8>
   1f2e8:	mov	r0, #0
   1f2ec:	b	15880 <dcgettext@plt>
   1f2f0:	mov	r2, #5
   1f2f4:	ldr	r1, [pc, #304]	; 1f42c <g_strcmp0@plt+0x95ac>
   1f2f8:	mov	r0, #0
   1f2fc:	b	15880 <dcgettext@plt>
   1f300:	mov	r2, #5
   1f304:	ldr	r1, [pc, #292]	; 1f430 <g_strcmp0@plt+0x95b0>
   1f308:	mov	r0, #0
   1f30c:	b	15880 <dcgettext@plt>
   1f310:	mov	r2, #5
   1f314:	ldr	r1, [pc, #280]	; 1f434 <g_strcmp0@plt+0x95b4>
   1f318:	mov	r0, #0
   1f31c:	b	15880 <dcgettext@plt>
   1f320:	mov	r2, #5
   1f324:	ldr	r1, [pc, #268]	; 1f438 <g_strcmp0@plt+0x95b8>
   1f328:	mov	r0, #0
   1f32c:	b	15880 <dcgettext@plt>
   1f330:	mov	r2, #5
   1f334:	ldr	r1, [pc, #256]	; 1f43c <g_strcmp0@plt+0x95bc>
   1f338:	mov	r0, #0
   1f33c:	b	15880 <dcgettext@plt>
   1f340:	mov	r2, #5
   1f344:	ldr	r1, [pc, #244]	; 1f440 <g_strcmp0@plt+0x95c0>
   1f348:	mov	r0, #0
   1f34c:	b	15880 <dcgettext@plt>
   1f350:	mov	r2, #5
   1f354:	ldr	r1, [pc, #232]	; 1f444 <g_strcmp0@plt+0x95c4>
   1f358:	mov	r0, #0
   1f35c:	b	15880 <dcgettext@plt>
   1f360:	mov	r2, #5
   1f364:	ldr	r1, [pc, #220]	; 1f448 <g_strcmp0@plt+0x95c8>
   1f368:	mov	r0, #0
   1f36c:	b	15880 <dcgettext@plt>
   1f370:	mov	r2, #5
   1f374:	ldr	r1, [pc, #208]	; 1f44c <g_strcmp0@plt+0x95cc>
   1f378:	mov	r0, #0
   1f37c:	b	15880 <dcgettext@plt>
   1f380:	mov	r2, #5
   1f384:	ldr	r1, [pc, #196]	; 1f450 <g_strcmp0@plt+0x95d0>
   1f388:	mov	r0, #0
   1f38c:	b	15880 <dcgettext@plt>
   1f390:	mov	r2, #5
   1f394:	ldr	r1, [pc, #184]	; 1f454 <g_strcmp0@plt+0x95d4>
   1f398:	mov	r0, #0
   1f39c:	b	15880 <dcgettext@plt>
   1f3a0:	mov	r2, #5
   1f3a4:	ldr	r1, [pc, #172]	; 1f458 <g_strcmp0@plt+0x95d8>
   1f3a8:	mov	r0, #0
   1f3ac:	b	15880 <dcgettext@plt>
   1f3b0:	mov	r2, #5
   1f3b4:	ldr	r1, [pc, #160]	; 1f45c <g_strcmp0@plt+0x95dc>
   1f3b8:	mov	r0, #0
   1f3bc:	b	15880 <dcgettext@plt>
   1f3c0:	push	{r4, lr}
   1f3c4:	bl	151cc <pk_role_enum_to_string@plt>
   1f3c8:	ldr	r2, [pc, #144]	; 1f460 <g_strcmp0@plt+0x95e0>
   1f3cc:	mov	r1, #16
   1f3d0:	mov	r3, r0
   1f3d4:	ldr	r0, [pc, #136]	; 1f464 <g_strcmp0@plt+0x95e4>
   1f3d8:	bl	151f0 <g_log@plt>
   1f3dc:	mov	r0, #0
   1f3e0:	pop	{r4, pc}
   1f3e4:	andeq	lr, r2, r4, asr r1
   1f3e8:	andeq	lr, r2, r4, asr r2
   1f3ec:	andeq	lr, r2, r8, lsr r2
   1f3f0:	andeq	lr, r2, r4, lsr #4
   1f3f4:	strdeq	lr, [r2], -r8
   1f3f8:	andeq	sp, r2, r0, lsl #21
   1f3fc:	andeq	lr, r2, r8, ror #3
   1f400:	andeq	lr, r2, r0, lsr #3
   1f404:	andeq	lr, r2, ip, lsl #2
   1f408:	andeq	lr, r2, r4, asr #1
   1f40c:	strheq	lr, [r2], -r0
   1f410:	ldrdeq	sl, [r2], -r4
   1f414:	muleq	r2, ip, r0
   1f418:	andeq	lr, r2, r0, lsl #3
   1f41c:	andeq	lr, r2, r8, ror #2
   1f420:	andeq	lr, r2, r0, asr #2
   1f424:	andeq	sp, r2, r8, ror pc
   1f428:	strdeq	lr, [r2], -r0
   1f42c:			; <UNDEFINED> instruction: 0x0002e1b8
   1f430:	andeq	sp, r2, ip, ror #30
   1f434:	andeq	lr, r2, r0, ror #1
   1f438:	andeq	lr, r2, ip, lsl #1
   1f43c:	andeq	lr, r2, r0, asr r0
   1f440:	andeq	lr, r2, r8, ror r0
   1f444:	andeq	lr, r2, r0, lsr #2
   1f448:	ldrdeq	lr, [r2], -r0
   1f44c:	andeq	lr, r2, ip, lsl #3
   1f450:	andeq	lr, r2, r8, rrx
   1f454:	andeq	lr, r2, r8, lsr r0
   1f458:	andeq	sp, r2, r0, ror #22
   1f45c:	andeq	lr, r2, r4, lsr #32
   1f460:	andeq	lr, r2, ip, ror #4
   1f464:	andeq	r8, r2, ip, lsl #29
   1f468:	cmp	r0, #32
   1f46c:	ldrls	pc, [pc, r0, lsl #2]
   1f470:	b	1f6e8 <g_strcmp0@plt+0x9868>
   1f474:	ldrdeq	pc, [r1], -r8
   1f478:	andeq	pc, r1, r8, asr #13
   1f47c:			; <UNDEFINED> instruction: 0x0001f6b8
   1f480:	andeq	pc, r1, r8, lsr #13
   1f484:	muleq	r1, r8, r6
   1f488:	andeq	pc, r1, r8, lsl #13
   1f48c:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>
   1f490:	andeq	pc, r1, r8, ror #12
   1f494:	andeq	pc, r1, r8, asr r6	; <UNPREDICTABLE>
   1f498:	andeq	pc, r1, r8, asr #12
   1f49c:	andeq	pc, r1, r8, lsr r6	; <UNPREDICTABLE>
   1f4a0:	andeq	pc, r1, r8, lsr #12
   1f4a4:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   1f4a8:	andeq	pc, r1, r8, lsl #12
   1f4ac:	strdeq	pc, [r1], -r8
   1f4b0:	andeq	pc, r1, r8, ror #11
   1f4b4:	ldrdeq	pc, [r1], -r8
   1f4b8:	andeq	pc, r1, r8, asr #11
   1f4bc:			; <UNDEFINED> instruction: 0x0001f5b8
   1f4c0:	andeq	pc, r1, r8, lsr #11
   1f4c4:	muleq	r1, r8, r5
   1f4c8:	andeq	pc, r1, r8, lsl #11
   1f4cc:	andeq	pc, r1, r8, ror r5	; <UNPREDICTABLE>
   1f4d0:	andeq	pc, r1, r8, ror #10
   1f4d4:	andeq	pc, r1, r8, asr r5	; <UNPREDICTABLE>
   1f4d8:	andeq	pc, r1, r8, asr #10
   1f4dc:	andeq	pc, r1, r8, lsr r5	; <UNPREDICTABLE>
   1f4e0:	andeq	pc, r1, r8, lsr #10
   1f4e4:	andeq	pc, r1, r8, lsl r5	; <UNPREDICTABLE>
   1f4e8:	andeq	pc, r1, r8, lsl #10
   1f4ec:	andeq	pc, r1, r8, lsr #13
   1f4f0:	muleq	r1, r8, r6
   1f4f4:	strdeq	pc, [r1], -r8
   1f4f8:	mov	r2, #5
   1f4fc:	ldr	r1, [pc, #520]	; 1f70c <g_strcmp0@plt+0x988c>
   1f500:	mov	r0, #0
   1f504:	b	15880 <dcgettext@plt>
   1f508:	mov	r2, #5
   1f50c:	ldr	r1, [pc, #508]	; 1f710 <g_strcmp0@plt+0x9890>
   1f510:	mov	r0, #0
   1f514:	b	15880 <dcgettext@plt>
   1f518:	mov	r2, #5
   1f51c:	ldr	r1, [pc, #496]	; 1f714 <g_strcmp0@plt+0x9894>
   1f520:	mov	r0, #0
   1f524:	b	15880 <dcgettext@plt>
   1f528:	mov	r2, #5
   1f52c:	ldr	r1, [pc, #484]	; 1f718 <g_strcmp0@plt+0x9898>
   1f530:	mov	r0, #0
   1f534:	b	15880 <dcgettext@plt>
   1f538:	mov	r2, #5
   1f53c:	ldr	r1, [pc, #472]	; 1f71c <g_strcmp0@plt+0x989c>
   1f540:	mov	r0, #0
   1f544:	b	15880 <dcgettext@plt>
   1f548:	mov	r2, #5
   1f54c:	ldr	r1, [pc, #460]	; 1f720 <g_strcmp0@plt+0x98a0>
   1f550:	mov	r0, #0
   1f554:	b	15880 <dcgettext@plt>
   1f558:	mov	r2, #5
   1f55c:	ldr	r1, [pc, #448]	; 1f724 <g_strcmp0@plt+0x98a4>
   1f560:	mov	r0, #0
   1f564:	b	15880 <dcgettext@plt>
   1f568:	mov	r2, #5
   1f56c:	ldr	r1, [pc, #436]	; 1f728 <g_strcmp0@plt+0x98a8>
   1f570:	mov	r0, #0
   1f574:	b	15880 <dcgettext@plt>
   1f578:	mov	r2, #5
   1f57c:	ldr	r1, [pc, #424]	; 1f72c <g_strcmp0@plt+0x98ac>
   1f580:	mov	r0, #0
   1f584:	b	15880 <dcgettext@plt>
   1f588:	mov	r2, #5
   1f58c:	ldr	r1, [pc, #412]	; 1f730 <g_strcmp0@plt+0x98b0>
   1f590:	mov	r0, #0
   1f594:	b	15880 <dcgettext@plt>
   1f598:	mov	r2, #5
   1f59c:	ldr	r1, [pc, #400]	; 1f734 <g_strcmp0@plt+0x98b4>
   1f5a0:	mov	r0, #0
   1f5a4:	b	15880 <dcgettext@plt>
   1f5a8:	mov	r2, #5
   1f5ac:	ldr	r1, [pc, #388]	; 1f738 <g_strcmp0@plt+0x98b8>
   1f5b0:	mov	r0, #0
   1f5b4:	b	15880 <dcgettext@plt>
   1f5b8:	mov	r2, #5
   1f5bc:	ldr	r1, [pc, #376]	; 1f73c <g_strcmp0@plt+0x98bc>
   1f5c0:	mov	r0, #0
   1f5c4:	b	15880 <dcgettext@plt>
   1f5c8:	mov	r2, #5
   1f5cc:	ldr	r1, [pc, #364]	; 1f740 <g_strcmp0@plt+0x98c0>
   1f5d0:	mov	r0, #0
   1f5d4:	b	15880 <dcgettext@plt>
   1f5d8:	mov	r2, #5
   1f5dc:	ldr	r1, [pc, #352]	; 1f744 <g_strcmp0@plt+0x98c4>
   1f5e0:	mov	r0, #0
   1f5e4:	b	15880 <dcgettext@plt>
   1f5e8:	mov	r2, #5
   1f5ec:	ldr	r1, [pc, #340]	; 1f748 <g_strcmp0@plt+0x98c8>
   1f5f0:	mov	r0, #0
   1f5f4:	b	15880 <dcgettext@plt>
   1f5f8:	mov	r2, #5
   1f5fc:	ldr	r1, [pc, #328]	; 1f74c <g_strcmp0@plt+0x98cc>
   1f600:	mov	r0, #0
   1f604:	b	15880 <dcgettext@plt>
   1f608:	mov	r2, #5
   1f60c:	ldr	r1, [pc, #316]	; 1f750 <g_strcmp0@plt+0x98d0>
   1f610:	mov	r0, #0
   1f614:	b	15880 <dcgettext@plt>
   1f618:	mov	r2, #5
   1f61c:	ldr	r1, [pc, #304]	; 1f754 <g_strcmp0@plt+0x98d4>
   1f620:	mov	r0, #0
   1f624:	b	15880 <dcgettext@plt>
   1f628:	mov	r2, #5
   1f62c:	ldr	r1, [pc, #292]	; 1f758 <g_strcmp0@plt+0x98d8>
   1f630:	mov	r0, #0
   1f634:	b	15880 <dcgettext@plt>
   1f638:	mov	r2, #5
   1f63c:	ldr	r1, [pc, #280]	; 1f75c <g_strcmp0@plt+0x98dc>
   1f640:	mov	r0, #0
   1f644:	b	15880 <dcgettext@plt>
   1f648:	mov	r2, #5
   1f64c:	ldr	r1, [pc, #268]	; 1f760 <g_strcmp0@plt+0x98e0>
   1f650:	mov	r0, #0
   1f654:	b	15880 <dcgettext@plt>
   1f658:	mov	r2, #5
   1f65c:	ldr	r1, [pc, #256]	; 1f764 <g_strcmp0@plt+0x98e4>
   1f660:	mov	r0, #0
   1f664:	b	15880 <dcgettext@plt>
   1f668:	mov	r2, #5
   1f66c:	ldr	r1, [pc, #244]	; 1f768 <g_strcmp0@plt+0x98e8>
   1f670:	mov	r0, #0
   1f674:	b	15880 <dcgettext@plt>
   1f678:	mov	r2, #5
   1f67c:	ldr	r1, [pc, #232]	; 1f76c <g_strcmp0@plt+0x98ec>
   1f680:	mov	r0, #0
   1f684:	b	15880 <dcgettext@plt>
   1f688:	mov	r2, #5
   1f68c:	ldr	r1, [pc, #220]	; 1f770 <g_strcmp0@plt+0x98f0>
   1f690:	mov	r0, #0
   1f694:	b	15880 <dcgettext@plt>
   1f698:	mov	r2, #5
   1f69c:	ldr	r1, [pc, #208]	; 1f774 <g_strcmp0@plt+0x98f4>
   1f6a0:	mov	r0, #0
   1f6a4:	b	15880 <dcgettext@plt>
   1f6a8:	mov	r2, #5
   1f6ac:	ldr	r1, [pc, #196]	; 1f778 <g_strcmp0@plt+0x98f8>
   1f6b0:	mov	r0, #0
   1f6b4:	b	15880 <dcgettext@plt>
   1f6b8:	mov	r2, #5
   1f6bc:	ldr	r1, [pc, #184]	; 1f77c <g_strcmp0@plt+0x98fc>
   1f6c0:	mov	r0, #0
   1f6c4:	b	15880 <dcgettext@plt>
   1f6c8:	mov	r2, #5
   1f6cc:	ldr	r1, [pc, #172]	; 1f780 <g_strcmp0@plt+0x9900>
   1f6d0:	mov	r0, #0
   1f6d4:	b	15880 <dcgettext@plt>
   1f6d8:	mov	r2, #5
   1f6dc:	ldr	r1, [pc, #160]	; 1f784 <g_strcmp0@plt+0x9904>
   1f6e0:	mov	r0, #0
   1f6e4:	b	15880 <dcgettext@plt>
   1f6e8:	push	{r4, lr}
   1f6ec:	bl	151cc <pk_role_enum_to_string@plt>
   1f6f0:	ldr	r2, [pc, #144]	; 1f788 <g_strcmp0@plt+0x9908>
   1f6f4:	mov	r1, #16
   1f6f8:	mov	r3, r0
   1f6fc:	ldr	r0, [pc, #136]	; 1f78c <g_strcmp0@plt+0x990c>
   1f700:	bl	151f0 <g_log@plt>
   1f704:	mov	r0, #0
   1f708:	pop	{r4, pc}
   1f70c:	ldrdeq	lr, [r2], -ip
   1f710:	andeq	lr, r2, r4, asr #9
   1f714:	andeq	lr, r2, ip, lsr #9
   1f718:	muleq	r2, ip, r4
   1f71c:	andeq	lr, r2, r0, lsl #9
   1f720:	andeq	lr, r2, ip, ror #8
   1f724:	andeq	lr, r2, ip, asr r4
   1f728:	andeq	lr, r2, r0, lsr #8
   1f72c:	andeq	lr, r2, ip, lsl #7
   1f730:	andeq	lr, r2, r8, lsl r3
   1f734:	andeq	lr, r2, r8, lsl #6
   1f738:	strdeq	lr, [r2], -r4
   1f73c:	ldrdeq	lr, [r2], -r4
   1f740:	andeq	lr, r2, r4, lsl #8
   1f744:	strdeq	lr, [r2], -r0
   1f748:	andeq	lr, r2, r8, asr #7
   1f74c:	andeq	lr, r2, r4, lsr r3
   1f750:	andeq	lr, r2, r4, ror r3
   1f754:	andeq	lr, r2, r4, lsr r4
   1f758:	andeq	lr, r2, r8, asr #6
   1f75c:	andeq	lr, r2, ip, asr r3
   1f760:	andeq	lr, r2, r8, asr #5
   1f764:	muleq	r2, r8, r2
   1f768:			; <UNDEFINED> instruction: 0x0002e2b8
   1f76c:	andeq	lr, r2, ip, lsr #7
   1f770:	andeq	lr, r2, r8, asr #8
   1f774:	andeq	lr, r2, r0, lsl r4
   1f778:	andeq	lr, r2, ip, lsr #5
   1f77c:	andeq	lr, r2, r4, lsl #5
   1f780:	andeq	lr, r2, r0, lsr #7
   1f784:	andeq	lr, r2, r4, lsr #32
   1f788:	andeq	lr, r2, ip, ror #4
   1f78c:	andeq	r8, r2, ip, lsl #29
   1f790:	cmp	r0, #34	; 0x22
   1f794:	ldrls	pc, [pc, r0, lsl #2]
   1f798:	b	1fa58 <g_strcmp0@plt+0x9bd8>
   1f79c:	andeq	pc, r1, r8, asr #20
   1f7a0:	andeq	pc, r1, r8, lsr sl	; <UNPREDICTABLE>
   1f7a4:	andeq	pc, r1, r8, lsr #20
   1f7a8:	andeq	pc, r1, r8, lsl sl	; <UNPREDICTABLE>
   1f7ac:	andeq	pc, r1, r8, lsl #20
   1f7b0:	strdeq	pc, [r1], -r8
   1f7b4:	andeq	pc, r1, r8, ror #19
   1f7b8:	ldrdeq	pc, [r1], -r8
   1f7bc:	andeq	pc, r1, r8, asr #19
   1f7c0:			; <UNDEFINED> instruction: 0x0001f9b8
   1f7c4:	andeq	pc, r1, r8, lsr #19
   1f7c8:	muleq	r1, r8, r9
   1f7cc:	andeq	pc, r1, r8, lsl #19
   1f7d0:	andeq	pc, r1, r8, ror r9	; <UNPREDICTABLE>
   1f7d4:	andeq	pc, r1, r8, ror #18
   1f7d8:	andeq	pc, r1, r8, asr r9	; <UNPREDICTABLE>
   1f7dc:	andeq	pc, r1, r8, asr #18
   1f7e0:	andeq	pc, r1, r8, lsr r9	; <UNPREDICTABLE>
   1f7e4:	andeq	pc, r1, r8, lsr #18
   1f7e8:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   1f7ec:	andeq	pc, r1, r8, lsl #18
   1f7f0:	strdeq	pc, [r1], -r8
   1f7f4:	andeq	pc, r1, r8, ror #17
   1f7f8:	ldrdeq	pc, [r1], -r8
   1f7fc:	andeq	pc, r1, r8, asr #17
   1f800:			; <UNDEFINED> instruction: 0x0001f8b8
   1f804:	andeq	pc, r1, r8, lsr #17
   1f808:	muleq	r1, r8, r8
   1f80c:	andeq	pc, r1, r8, lsl #17
   1f810:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   1f814:	andeq	pc, r1, r8, ror #16
   1f818:	andeq	pc, r1, r8, asr r8	; <UNPREDICTABLE>
   1f81c:	andeq	pc, r1, r8, asr #16
   1f820:	andeq	pc, r1, r8, lsr r8	; <UNPREDICTABLE>
   1f824:	andeq	pc, r1, r8, lsr #16
   1f828:	mov	r2, #5
   1f82c:	ldr	r1, [pc, #580]	; 1fa78 <g_strcmp0@plt+0x9bf8>
   1f830:	mov	r0, #0
   1f834:	b	15880 <dcgettext@plt>
   1f838:	mov	r2, #5
   1f83c:	ldr	r1, [pc, #568]	; 1fa7c <g_strcmp0@plt+0x9bfc>
   1f840:	mov	r0, #0
   1f844:	b	15880 <dcgettext@plt>
   1f848:	mov	r2, #5
   1f84c:	ldr	r1, [pc, #556]	; 1fa80 <g_strcmp0@plt+0x9c00>
   1f850:	mov	r0, #0
   1f854:	b	15880 <dcgettext@plt>
   1f858:	mov	r2, #5
   1f85c:	ldr	r1, [pc, #544]	; 1fa84 <g_strcmp0@plt+0x9c04>
   1f860:	mov	r0, #0
   1f864:	b	15880 <dcgettext@plt>
   1f868:	mov	r2, #5
   1f86c:	ldr	r1, [pc, #532]	; 1fa88 <g_strcmp0@plt+0x9c08>
   1f870:	mov	r0, #0
   1f874:	b	15880 <dcgettext@plt>
   1f878:	mov	r2, #5
   1f87c:	ldr	r1, [pc, #520]	; 1fa8c <g_strcmp0@plt+0x9c0c>
   1f880:	mov	r0, #0
   1f884:	b	15880 <dcgettext@plt>
   1f888:	mov	r2, #5
   1f88c:	ldr	r1, [pc, #508]	; 1fa90 <g_strcmp0@plt+0x9c10>
   1f890:	mov	r0, #0
   1f894:	b	15880 <dcgettext@plt>
   1f898:	mov	r2, #5
   1f89c:	ldr	r1, [pc, #496]	; 1fa94 <g_strcmp0@plt+0x9c14>
   1f8a0:	mov	r0, #0
   1f8a4:	b	15880 <dcgettext@plt>
   1f8a8:	mov	r2, #5
   1f8ac:	ldr	r1, [pc, #484]	; 1fa98 <g_strcmp0@plt+0x9c18>
   1f8b0:	mov	r0, #0
   1f8b4:	b	15880 <dcgettext@plt>
   1f8b8:	mov	r2, #5
   1f8bc:	ldr	r1, [pc, #472]	; 1fa9c <g_strcmp0@plt+0x9c1c>
   1f8c0:	mov	r0, #0
   1f8c4:	b	15880 <dcgettext@plt>
   1f8c8:	mov	r2, #5
   1f8cc:	ldr	r1, [pc, #460]	; 1faa0 <g_strcmp0@plt+0x9c20>
   1f8d0:	mov	r0, #0
   1f8d4:	b	15880 <dcgettext@plt>
   1f8d8:	mov	r2, #5
   1f8dc:	ldr	r1, [pc, #448]	; 1faa4 <g_strcmp0@plt+0x9c24>
   1f8e0:	mov	r0, #0
   1f8e4:	b	15880 <dcgettext@plt>
   1f8e8:	mov	r2, #5
   1f8ec:	ldr	r1, [pc, #436]	; 1faa8 <g_strcmp0@plt+0x9c28>
   1f8f0:	mov	r0, #0
   1f8f4:	b	15880 <dcgettext@plt>
   1f8f8:	mov	r2, #5
   1f8fc:	ldr	r1, [pc, #424]	; 1faac <g_strcmp0@plt+0x9c2c>
   1f900:	mov	r0, #0
   1f904:	b	15880 <dcgettext@plt>
   1f908:	mov	r2, #5
   1f90c:	ldr	r1, [pc, #412]	; 1fab0 <g_strcmp0@plt+0x9c30>
   1f910:	mov	r0, #0
   1f914:	b	15880 <dcgettext@plt>
   1f918:	mov	r2, #5
   1f91c:	ldr	r1, [pc, #400]	; 1fab4 <g_strcmp0@plt+0x9c34>
   1f920:	mov	r0, #0
   1f924:	b	15880 <dcgettext@plt>
   1f928:	mov	r2, #5
   1f92c:	ldr	r1, [pc, #388]	; 1fab8 <g_strcmp0@plt+0x9c38>
   1f930:	mov	r0, #0
   1f934:	b	15880 <dcgettext@plt>
   1f938:	mov	r2, #5
   1f93c:	ldr	r1, [pc, #376]	; 1fabc <g_strcmp0@plt+0x9c3c>
   1f940:	mov	r0, #0
   1f944:	b	15880 <dcgettext@plt>
   1f948:	mov	r2, #5
   1f94c:	ldr	r1, [pc, #364]	; 1fac0 <g_strcmp0@plt+0x9c40>
   1f950:	mov	r0, #0
   1f954:	b	15880 <dcgettext@plt>
   1f958:	mov	r2, #5
   1f95c:	ldr	r1, [pc, #352]	; 1fac4 <g_strcmp0@plt+0x9c44>
   1f960:	mov	r0, #0
   1f964:	b	15880 <dcgettext@plt>
   1f968:	mov	r2, #5
   1f96c:	ldr	r1, [pc, #340]	; 1fac8 <g_strcmp0@plt+0x9c48>
   1f970:	mov	r0, #0
   1f974:	b	15880 <dcgettext@plt>
   1f978:	mov	r2, #5
   1f97c:	ldr	r1, [pc, #328]	; 1facc <g_strcmp0@plt+0x9c4c>
   1f980:	mov	r0, #0
   1f984:	b	15880 <dcgettext@plt>
   1f988:	mov	r2, #5
   1f98c:	ldr	r1, [pc, #316]	; 1fad0 <g_strcmp0@plt+0x9c50>
   1f990:	mov	r0, #0
   1f994:	b	15880 <dcgettext@plt>
   1f998:	mov	r2, #5
   1f99c:	ldr	r1, [pc, #304]	; 1fad4 <g_strcmp0@plt+0x9c54>
   1f9a0:	mov	r0, #0
   1f9a4:	b	15880 <dcgettext@plt>
   1f9a8:	mov	r2, #5
   1f9ac:	ldr	r1, [pc, #292]	; 1fad8 <g_strcmp0@plt+0x9c58>
   1f9b0:	mov	r0, #0
   1f9b4:	b	15880 <dcgettext@plt>
   1f9b8:	mov	r2, #5
   1f9bc:	ldr	r1, [pc, #280]	; 1fadc <g_strcmp0@plt+0x9c5c>
   1f9c0:	mov	r0, #0
   1f9c4:	b	15880 <dcgettext@plt>
   1f9c8:	mov	r2, #5
   1f9cc:	ldr	r1, [pc, #268]	; 1fae0 <g_strcmp0@plt+0x9c60>
   1f9d0:	mov	r0, #0
   1f9d4:	b	15880 <dcgettext@plt>
   1f9d8:	mov	r2, #5
   1f9dc:	ldr	r1, [pc, #256]	; 1fae4 <g_strcmp0@plt+0x9c64>
   1f9e0:	mov	r0, #0
   1f9e4:	b	15880 <dcgettext@plt>
   1f9e8:	mov	r2, #5
   1f9ec:	ldr	r1, [pc, #244]	; 1fae8 <g_strcmp0@plt+0x9c68>
   1f9f0:	mov	r0, #0
   1f9f4:	b	15880 <dcgettext@plt>
   1f9f8:	mov	r2, #5
   1f9fc:	ldr	r1, [pc, #232]	; 1faec <g_strcmp0@plt+0x9c6c>
   1fa00:	mov	r0, #0
   1fa04:	b	15880 <dcgettext@plt>
   1fa08:	mov	r2, #5
   1fa0c:	ldr	r1, [pc, #220]	; 1faf0 <g_strcmp0@plt+0x9c70>
   1fa10:	mov	r0, #0
   1fa14:	b	15880 <dcgettext@plt>
   1fa18:	mov	r2, #5
   1fa1c:	ldr	r1, [pc, #208]	; 1faf4 <g_strcmp0@plt+0x9c74>
   1fa20:	mov	r0, #0
   1fa24:	b	15880 <dcgettext@plt>
   1fa28:	mov	r2, #5
   1fa2c:	ldr	r1, [pc, #196]	; 1faf8 <g_strcmp0@plt+0x9c78>
   1fa30:	mov	r0, #0
   1fa34:	b	15880 <dcgettext@plt>
   1fa38:	mov	r2, #5
   1fa3c:	ldr	r1, [pc, #184]	; 1fafc <g_strcmp0@plt+0x9c7c>
   1fa40:	mov	r0, #0
   1fa44:	b	15880 <dcgettext@plt>
   1fa48:	mov	r2, #5
   1fa4c:	ldr	r1, [pc, #172]	; 1fb00 <g_strcmp0@plt+0x9c80>
   1fa50:	mov	r0, #0
   1fa54:	b	15880 <dcgettext@plt>
   1fa58:	mov	r3, r0
   1fa5c:	push	{r4, lr}
   1fa60:	mov	r1, #16
   1fa64:	ldr	r2, [pc, #152]	; 1fb04 <g_strcmp0@plt+0x9c84>
   1fa68:	ldr	r0, [pc, #152]	; 1fb08 <g_strcmp0@plt+0x9c88>
   1fa6c:	bl	151f0 <g_log@plt>
   1fa70:	mov	r0, #0
   1fa74:	pop	{r4, pc}
   1fa78:	andeq	lr, r2, ip, ror #12
   1fa7c:	andeq	lr, r2, r4, ror #12
   1fa80:	andeq	lr, r2, r0, asr r6
   1fa84:	andeq	lr, r2, r4, asr #12
   1fa88:	andeq	lr, r2, r4, lsr r6
   1fa8c:	andeq	lr, r2, ip, lsr #12
   1fa90:	andeq	lr, r2, ip, asr #11
   1fa94:	andeq	lr, r2, r8, asr #10
   1fa98:	muleq	r2, r8, r5
   1fa9c:	ldrdeq	lr, [r2], -ip
   1faa0:	andeq	lr, r2, ip, lsl r6
   1faa4:	andeq	lr, r2, ip, lsl #11
   1faa8:	andeq	lr, r2, r0, lsr r5
   1faac:	andeq	lr, r2, r8, ror #11
   1fab0:	andeq	lr, r2, r8, lsr #10
   1fab4:	andeq	lr, r2, r0, lsr #10
   1fab8:	andeq	lr, r2, ip, lsl #12
   1fabc:	andeq	lr, r2, ip, lsr r5
   1fac0:	andeq	lr, r2, r4, lsl r6
   1fac4:			; <UNDEFINED> instruction: 0x0002e5bc
   1fac8:			; <UNDEFINED> instruction: 0x0002e5b4
   1facc:	andeq	lr, r2, r4, lsl r5
   1fad0:	andeq	lr, r2, r8, lsl #10
   1fad4:	andeq	lr, r2, r0, lsl #10
   1fad8:	andeq	lr, r2, r0, lsr #11
   1fadc:	strdeq	lr, [r2], -r4
   1fae0:	andeq	lr, r2, ip, ror #10
   1fae4:	andeq	lr, r2, ip, ror r5
   1fae8:	andeq	lr, r2, r0, ror #10
   1faec:	andeq	lr, r2, r0, asr r5
   1faf0:	strdeq	lr, [r2], -ip
   1faf4:	andeq	lr, r2, r8, lsr #11
   1faf8:	andeq	lr, r2, r8, ror #9
   1fafc:	ldrdeq	lr, [r2], -r8
   1fb00:	andeq	lr, r2, ip, ror r6
   1fb04:	andeq	lr, r2, ip, lsl #13
   1fb08:	andeq	r8, r2, ip, lsl #29
   1fb0c:	mov	r1, r0
   1fb10:	ldr	r0, [pc]	; 1fb18 <g_strcmp0@plt+0x9c98>
   1fb14:	b	15d60 <pk_enum_find_string@plt>
   1fb18:	andeq	fp, r2, r4, lsr #4
   1fb1c:	mov	r1, r0
   1fb20:	ldr	r0, [pc]	; 1fb28 <g_strcmp0@plt+0x9ca8>
   1fb24:	b	15d60 <pk_enum_find_string@plt>
   1fb28:	strdeq	fp, [r2], -r4
   1fb2c:	mov	r1, r0
   1fb30:	ldr	r0, [pc]	; 1fb38 <g_strcmp0@plt+0x9cb8>
   1fb34:	b	15d60 <pk_enum_find_string@plt>
   1fb38:	andeq	fp, r2, ip, lsl r4
   1fb3c:	mov	r1, r0
   1fb40:	ldr	r0, [pc]	; 1fb48 <g_strcmp0@plt+0x9cc8>
   1fb44:	b	15d60 <pk_enum_find_string@plt>
   1fb48:	andeq	fp, r2, r4, asr #10
   1fb4c:	mov	r1, r0
   1fb50:	ldr	r0, [pc]	; 1fb58 <g_strcmp0@plt+0x9cd8>
   1fb54:	b	15d60 <pk_enum_find_string@plt>
   1fb58:	andeq	fp, r2, r4, asr r6
   1fb5c:	mov	r1, r0
   1fb60:	push	{r4, lr}
   1fb64:	ldr	r0, [pc, #16]	; 1fb7c <g_strcmp0@plt+0x9cfc>
   1fb68:	bl	15d60 <pk_enum_find_string@plt>
   1fb6c:	ldrb	r3, [r0]
   1fb70:	cmp	r3, #0
   1fb74:	moveq	r0, #0
   1fb78:	pop	{r4, pc}
   1fb7c:	andeq	fp, r2, r4, ror r7
   1fb80:	mov	r1, r0
   1fb84:	ldr	r0, [pc]	; 1fb8c <g_strcmp0@plt+0x9d0c>
   1fb88:	b	15d60 <pk_enum_find_string@plt>
   1fb8c:			; <UNDEFINED> instruction: 0x0002b7b4
   1fb90:	cmp	r0, #25
   1fb94:	bhi	1fb9c <g_strcmp0@plt+0x9d1c>
   1fb98:	b	1eef8 <g_strcmp0@plt+0x9078>
   1fb9c:	sub	r0, r0, #26
   1fba0:	b	1f01c <g_strcmp0@plt+0x919c>
   1fba4:	cmp	r0, #10
   1fba8:	beq	1fbcc <g_strcmp0@plt+0x9d4c>
   1fbac:	sub	r3, r0, #11
   1fbb0:	cmp	r3, #1
   1fbb4:	bls	1fbd4 <g_strcmp0@plt+0x9d54>
   1fbb8:	cmp	r0, #25
   1fbbc:	bhi	1fbdc <g_strcmp0@plt+0x9d5c>
   1fbc0:	mov	r1, r0
   1fbc4:	ldr	r0, [pc, #28]	; 1fbe8 <g_strcmp0@plt+0x9d68>
   1fbc8:	b	15d60 <pk_enum_find_string@plt>
   1fbcc:	ldr	r0, [pc, #24]	; 1fbec <g_strcmp0@plt+0x9d6c>
   1fbd0:	bx	lr
   1fbd4:	ldr	r0, [pc, #20]	; 1fbf0 <g_strcmp0@plt+0x9d70>
   1fbd8:	bx	lr
   1fbdc:	sub	r1, r0, #26
   1fbe0:	ldr	r0, [pc]	; 1fbe8 <g_strcmp0@plt+0x9d68>
   1fbe4:	b	15d60 <pk_enum_find_string@plt>
   1fbe8:	andeq	fp, r2, r4, lsr #4
   1fbec:	andeq	lr, r2, r4, lsr #13
   1fbf0:	andeq	sl, r2, ip, lsr #32
   1fbf4:	push	{lr}		; (str lr, [sp, #-4]!)
   1fbf8:	sub	sp, sp, #20
   1fbfc:	ldr	r0, [pc, #48]	; 1fc34 <g_strcmp0@plt+0x9db4>
   1fc00:	bl	15748 <g_intern_static_string@plt>
   1fc04:	ldr	r1, [pc, #44]	; 1fc38 <g_strcmp0@plt+0x9db8>
   1fc08:	mov	r2, #0
   1fc0c:	mov	r3, #16
   1fc10:	stmib	sp, {r1, r2}
   1fc14:	str	r3, [sp]
   1fc18:	mov	r2, #68	; 0x44
   1fc1c:	ldr	r3, [pc, #24]	; 1fc3c <g_strcmp0@plt+0x9dbc>
   1fc20:	mov	r1, r0
   1fc24:	mov	r0, #80	; 0x50
   1fc28:	bl	14fe0 <g_type_register_static_simple@plt>
   1fc2c:	add	sp, sp, #20
   1fc30:	pop	{pc}		; (ldr pc, [sp], #4)
   1fc34:	muleq	r2, r0, ip
   1fc38:	andeq	pc, r1, ip, ror #25
   1fc3c:	andeq	pc, r1, r0, asr #24
   1fc40:	push	{r4, lr}
   1fc44:	mov	r4, r0
   1fc48:	bl	15c58 <g_type_class_peek_parent@plt>
   1fc4c:	ldr	r1, [pc, #64]	; 1fc94 <g_strcmp0@plt+0x9e14>
   1fc50:	ldr	r3, [r1, #4]
   1fc54:	cmp	r3, #0
   1fc58:	str	r0, [r1]
   1fc5c:	bne	1fc84 <g_strcmp0@plt+0x9e04>
   1fc60:	mov	r1, #80	; 0x50
   1fc64:	mov	r0, r4
   1fc68:	bl	15dc0 <g_type_check_class_cast@plt>
   1fc6c:	ldr	r3, [pc, #36]	; 1fc98 <g_strcmp0@plt+0x9e18>
   1fc70:	mov	r1, #12
   1fc74:	str	r3, [r0, #24]
   1fc78:	mov	r0, r4
   1fc7c:	pop	{r4, lr}
   1fc80:	b	15988 <g_type_class_add_private@plt>
   1fc84:	add	r1, r1, #4
   1fc88:	mov	r0, r4
   1fc8c:	bl	15028 <g_type_class_adjust_private_offset@plt>
   1fc90:	b	1fc60 <g_strcmp0@plt+0x9de0>
   1fc94:	andeq	r1, r4, r4, asr #17
   1fc98:	andeq	pc, r1, r4, lsr #26
   1fc9c:	push	{r4, lr}
   1fca0:	mcr	15, 0, r0, cr7, cr10, {5}
   1fca4:	ldr	r4, [pc, #60]	; 1fce8 <g_strcmp0@plt+0x9e68>
   1fca8:	ldr	r3, [r4, #8]
   1fcac:	mcr	15, 0, r0, cr7, cr10, {5}
   1fcb0:	cmp	r3, #0
   1fcb4:	beq	1fcc0 <g_strcmp0@plt+0x9e40>
   1fcb8:	ldr	r0, [r4, #8]
   1fcbc:	pop	{r4, pc}
   1fcc0:	add	r0, r4, #8
   1fcc4:	bl	1567c <g_once_init_enter@plt>
   1fcc8:	cmp	r0, #0
   1fccc:	beq	1fcb8 <g_strcmp0@plt+0x9e38>
   1fcd0:	bl	1fbf4 <g_strcmp0@plt+0x9d74>
   1fcd4:	mov	r1, r0
   1fcd8:	add	r0, r4, #8
   1fcdc:	bl	15b98 <g_once_init_leave@plt>
   1fce0:	ldr	r0, [r4, #8]
   1fce4:	pop	{r4, pc}
   1fce8:	andeq	r1, r4, r4, asr #17
   1fcec:	push	{r4, r5, r6, lr}
   1fcf0:	mov	r5, r0
   1fcf4:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1fcf8:	mov	r1, r0
   1fcfc:	mov	r0, r5
   1fd00:	bl	155f8 <g_type_instance_get_private@plt>
   1fd04:	mov	r3, #0
   1fd08:	str	r0, [r5, #12]
   1fd0c:	str	r3, [r0, #4]
   1fd10:	str	r3, [r0, #8]
   1fd14:	mov	r4, r0
   1fd18:	bl	155d4 <gdk_display_get_default@plt>
   1fd1c:	str	r0, [r4]
   1fd20:	pop	{r4, r5, r6, pc}
   1fd24:	push	{r4, lr}
   1fd28:	mov	r4, r0
   1fd2c:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1fd30:	cmp	r4, #0
   1fd34:	beq	1fda0 <g_strcmp0@plt+0x9f20>
   1fd38:	ldr	r3, [r4]
   1fd3c:	cmp	r3, #0
   1fd40:	beq	1fd50 <g_strcmp0@plt+0x9ed0>
   1fd44:	ldr	r3, [r3]
   1fd48:	cmp	r3, r0
   1fd4c:	beq	1fd64 <g_strcmp0@plt+0x9ee4>
   1fd50:	mov	r1, r0
   1fd54:	mov	r0, r4
   1fd58:	bl	159dc <g_type_check_instance_is_a@plt>
   1fd5c:	cmp	r0, #0
   1fd60:	beq	1fda0 <g_strcmp0@plt+0x9f20>
   1fd64:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1fd68:	mov	r1, r0
   1fd6c:	mov	r0, r4
   1fd70:	bl	15148 <g_type_check_instance_cast@plt>
   1fd74:	ldr	r3, [r0, #12]
   1fd78:	cmp	r3, #0
   1fd7c:	beq	1fdb4 <g_strcmp0@plt+0x9f34>
   1fd80:	ldr	r3, [pc, #64]	; 1fdc8 <g_strcmp0@plt+0x9f48>
   1fd84:	mov	r1, #80	; 0x50
   1fd88:	ldr	r0, [r3]
   1fd8c:	bl	15dc0 <g_type_check_class_cast@plt>
   1fd90:	ldr	r3, [r0, #24]
   1fd94:	mov	r0, r4
   1fd98:	pop	{r4, lr}
   1fd9c:	bx	r3
   1fda0:	ldr	r2, [pc, #36]	; 1fdcc <g_strcmp0@plt+0x9f4c>
   1fda4:	ldr	r1, [pc, #36]	; 1fdd0 <g_strcmp0@plt+0x9f50>
   1fda8:	ldr	r0, [pc, #36]	; 1fdd4 <g_strcmp0@plt+0x9f54>
   1fdac:	pop	{r4, lr}
   1fdb0:	b	14fd4 <g_return_if_fail_warning@plt>
   1fdb4:	ldr	r2, [pc, #28]	; 1fdd8 <g_strcmp0@plt+0x9f58>
   1fdb8:	ldr	r1, [pc, #16]	; 1fdd0 <g_strcmp0@plt+0x9f50>
   1fdbc:	ldr	r0, [pc, #16]	; 1fdd4 <g_strcmp0@plt+0x9f54>
   1fdc0:	pop	{r4, lr}
   1fdc4:	b	14fd4 <g_return_if_fail_warning@plt>
   1fdc8:	andeq	r1, r4, r4, asr #17
   1fdcc:	muleq	r2, r8, ip
   1fdd0:	andeq	lr, r2, ip, lsr #24
   1fdd4:	andeq	r8, r2, ip, lsl #29
   1fdd8:	andeq	lr, r2, ip, lsr #25
   1fddc:	push	{r4, r5, r6, lr}
   1fde0:	mov	r4, r0
   1fde4:	mov	r5, r1
   1fde8:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1fdec:	cmp	r4, #0
   1fdf0:	beq	1fe64 <g_strcmp0@plt+0x9fe4>
   1fdf4:	ldr	r3, [r4]
   1fdf8:	cmp	r3, #0
   1fdfc:	beq	1fe0c <g_strcmp0@plt+0x9f8c>
   1fe00:	ldr	r3, [r3]
   1fe04:	cmp	r3, r0
   1fe08:	beq	1fe20 <g_strcmp0@plt+0x9fa0>
   1fe0c:	mov	r1, r0
   1fe10:	mov	r0, r4
   1fe14:	bl	159dc <g_type_check_instance_is_a@plt>
   1fe18:	cmp	r0, #0
   1fe1c:	beq	1fe64 <g_strcmp0@plt+0x9fe4>
   1fe20:	ldr	r3, [r4, #12]
   1fe24:	mov	r1, r5
   1fe28:	ldr	r0, [r3]
   1fe2c:	bl	157fc <gdk_x11_window_foreign_new_for_display@plt>
   1fe30:	subs	r5, r0, #0
   1fe34:	beq	1fe5c <g_strcmp0@plt+0x9fdc>
   1fe38:	ldr	r6, [r4, #12]
   1fe3c:	ldr	r0, [r6]
   1fe40:	bl	15e20 <gdk_x11_display_get_xdisplay@plt>
   1fe44:	ldr	r4, [r4, #12]
   1fe48:	str	r0, [r6, #4]
   1fe4c:	mov	r0, r5
   1fe50:	bl	14f98 <gdk_x11_window_get_xid@plt>
   1fe54:	mov	r5, #1
   1fe58:	str	r0, [r4, #8]
   1fe5c:	mov	r0, r5
   1fe60:	pop	{r4, r5, r6, pc}
   1fe64:	ldr	r2, [pc, #20]	; 1fe80 <g_strcmp0@plt+0xa000>
   1fe68:	ldr	r1, [pc, #20]	; 1fe84 <g_strcmp0@plt+0xa004>
   1fe6c:	ldr	r0, [pc, #20]	; 1fe88 <g_strcmp0@plt+0xa008>
   1fe70:	mov	r5, #0
   1fe74:	bl	14fd4 <g_return_if_fail_warning@plt>
   1fe78:	mov	r0, r5
   1fe7c:	pop	{r4, r5, r6, pc}
   1fe80:	andeq	lr, r2, r0, asr #25
   1fe84:	andeq	lr, r2, r0, asr #24
   1fe88:	andeq	r8, r2, ip, lsl #29
   1fe8c:	push	{r4, r5, r6, lr}
   1fe90:	mov	r4, r0
   1fe94:	mov	r6, r1
   1fe98:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1fe9c:	cmp	r4, #0
   1fea0:	beq	1fefc <g_strcmp0@plt+0xa07c>
   1fea4:	ldr	r3, [r4]
   1fea8:	cmp	r3, #0
   1feac:	beq	1febc <g_strcmp0@plt+0xa03c>
   1feb0:	ldr	r3, [r3]
   1feb4:	cmp	r3, r0
   1feb8:	beq	1fed0 <g_strcmp0@plt+0xa050>
   1febc:	mov	r1, r0
   1fec0:	mov	r0, r4
   1fec4:	bl	159dc <g_type_check_instance_is_a@plt>
   1fec8:	cmp	r0, #0
   1fecc:	beq	1fefc <g_strcmp0@plt+0xa07c>
   1fed0:	ldr	r5, [r4, #12]
   1fed4:	ldr	r0, [r5]
   1fed8:	bl	15e20 <gdk_x11_display_get_xdisplay@plt>
   1fedc:	ldr	r4, [r4, #12]
   1fee0:	str	r0, [r5, #4]
   1fee4:	mov	r0, r6
   1fee8:	bl	14f98 <gdk_x11_window_get_xid@plt>
   1feec:	mov	r3, #1
   1fef0:	str	r0, [r4, #8]
   1fef4:	mov	r0, r3
   1fef8:	pop	{r4, r5, r6, pc}
   1fefc:	ldr	r2, [pc, #20]	; 1ff18 <g_strcmp0@plt+0xa098>
   1ff00:	ldr	r1, [pc, #20]	; 1ff1c <g_strcmp0@plt+0xa09c>
   1ff04:	ldr	r0, [pc, #20]	; 1ff20 <g_strcmp0@plt+0xa0a0>
   1ff08:	bl	14fd4 <g_return_if_fail_warning@plt>
   1ff0c:	mov	r3, #0
   1ff10:	mov	r0, r3
   1ff14:	pop	{r4, r5, r6, pc}
   1ff18:	andeq	lr, r2, r0, asr #25
   1ff1c:	andeq	lr, r2, r0, asr ip
   1ff20:	andeq	r8, r2, ip, lsl #29
   1ff24:	push	{r4, r5, r6, r7, lr}
   1ff28:	sub	sp, sp, #68	; 0x44
   1ff2c:	ldr	r5, [pc, #532]	; 20148 <g_strcmp0@plt+0xa2c8>
   1ff30:	mov	r3, #0
   1ff34:	mov	r4, r0
   1ff38:	ldr	r2, [r5]
   1ff3c:	str	r3, [sp, #36]	; 0x24
   1ff40:	str	r2, [sp, #60]	; 0x3c
   1ff44:	str	r3, [sp, #56]	; 0x38
   1ff48:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   1ff4c:	cmp	r4, #0
   1ff50:	beq	1ff80 <g_strcmp0@plt+0xa100>
   1ff54:	ldr	r3, [r4]
   1ff58:	cmp	r3, #0
   1ff5c:	beq	1ff6c <g_strcmp0@plt+0xa0ec>
   1ff60:	ldr	r3, [r3]
   1ff64:	cmp	r3, r0
   1ff68:	beq	1ffac <g_strcmp0@plt+0xa12c>
   1ff6c:	mov	r1, r0
   1ff70:	mov	r0, r4
   1ff74:	bl	159dc <g_type_check_instance_is_a@plt>
   1ff78:	cmp	r0, #0
   1ff7c:	bne	1ffac <g_strcmp0@plt+0xa12c>
   1ff80:	ldr	r0, [pc, #452]	; 2014c <g_strcmp0@plt+0xa2cc>
   1ff84:	ldr	r2, [pc, #452]	; 20150 <g_strcmp0@plt+0xa2d0>
   1ff88:	ldr	r1, [pc, #452]	; 20154 <g_strcmp0@plt+0xa2d4>
   1ff8c:	bl	14fd4 <g_return_if_fail_warning@plt>
   1ff90:	mov	r0, #0
   1ff94:	ldr	r2, [sp, #60]	; 0x3c
   1ff98:	ldr	r3, [r5]
   1ff9c:	cmp	r2, r3
   1ffa0:	bne	20144 <g_strcmp0@plt+0xa2c4>
   1ffa4:	add	sp, sp, #68	; 0x44
   1ffa8:	pop	{r4, r5, r6, r7, pc}
   1ffac:	ldr	r3, [r4, #12]
   1ffb0:	ldr	r3, [r3, #8]
   1ffb4:	cmp	r3, #0
   1ffb8:	beq	2006c <g_strcmp0@plt+0xa1ec>
   1ffbc:	bl	153f4 <gdk_error_trap_push@plt>
   1ffc0:	ldr	r3, [r4, #12]
   1ffc4:	ldr	r1, [pc, #396]	; 20158 <g_strcmp0@plt+0xa2d8>
   1ffc8:	mvn	r7, #-2147483648	; 0x80000000
   1ffcc:	ldr	r0, [r3]
   1ffd0:	bl	155a4 <gdk_x11_get_xatom_by_name_for_display@plt>
   1ffd4:	ldr	r3, [r4, #12]
   1ffd8:	add	lr, sp, #56	; 0x38
   1ffdc:	mov	r2, #33	; 0x21
   1ffe0:	ldr	ip, [r3, #4]
   1ffe4:	ldr	r1, [r3, #8]
   1ffe8:	str	lr, [sp, #28]
   1ffec:	add	lr, sp, #52	; 0x34
   1fff0:	str	lr, [sp, #24]
   1fff4:	add	lr, sp, #48	; 0x30
   1fff8:	str	lr, [sp, #20]
   1fffc:	add	lr, sp, #44	; 0x2c
   20000:	mov	r3, #0
   20004:	str	lr, [sp, #16]
   20008:	add	lr, sp, #40	; 0x28
   2000c:	str	lr, [sp, #12]
   20010:	str	r2, [sp, #8]
   20014:	str	r3, [sp, #4]
   20018:	str	r7, [sp]
   2001c:	mov	r2, r0
   20020:	mov	r0, ip
   20024:	bl	1507c <XGetWindowProperty@plt>
   20028:	mov	r6, r0
   2002c:	bl	14ff8 <gdk_error_trap_pop@plt>
   20030:	orrs	r6, r6, r0
   20034:	bne	2011c <g_strcmp0@plt+0xa29c>
   20038:	ldr	r3, [sp, #40]	; 0x28
   2003c:	cmp	r3, #33	; 0x21
   20040:	beq	20080 <g_strcmp0@plt+0xa200>
   20044:	ldr	r2, [pc, #272]	; 2015c <g_strcmp0@plt+0xa2dc>
   20048:	mov	r1, #16
   2004c:	ldr	r0, [pc, #248]	; 2014c <g_strcmp0@plt+0xa2cc>
   20050:	bl	151f0 <g_log@plt>
   20054:	ldr	r0, [sp, #56]	; 0x38
   20058:	cmp	r0, #0
   2005c:	beq	20064 <g_strcmp0@plt+0xa1e4>
   20060:	bl	15934 <XFree@plt>
   20064:	ldr	r0, [sp, #36]	; 0x24
   20068:	b	1ff94 <g_strcmp0@plt+0xa114>
   2006c:	ldr	r2, [pc, #236]	; 20160 <g_strcmp0@plt+0xa2e0>
   20070:	mov	r1, #128	; 0x80
   20074:	ldr	r0, [pc, #208]	; 2014c <g_strcmp0@plt+0xa2cc>
   20078:	bl	151f0 <g_log@plt>
   2007c:	b	20054 <g_strcmp0@plt+0xa1d4>
   20080:	bl	153f4 <gdk_error_trap_push@plt>
   20084:	ldr	r3, [r4, #12]
   20088:	ldr	r1, [pc, #212]	; 20164 <g_strcmp0@plt+0xa2e4>
   2008c:	ldr	r0, [r3]
   20090:	bl	155a4 <gdk_x11_get_xatom_by_name_for_display@plt>
   20094:	ldr	r3, [sp, #56]	; 0x38
   20098:	ldr	r2, [r4, #12]
   2009c:	add	lr, sp, #36	; 0x24
   200a0:	ldr	r1, [r3]
   200a4:	add	r3, sp, #52	; 0x34
   200a8:	ldr	ip, [r2, #4]
   200ac:	str	r3, [sp, #24]
   200b0:	add	r3, sp, #48	; 0x30
   200b4:	str	r3, [sp, #20]
   200b8:	add	r3, sp, #44	; 0x2c
   200bc:	mov	r2, #6
   200c0:	str	r3, [sp, #16]
   200c4:	add	r3, sp, #40	; 0x28
   200c8:	str	r3, [sp, #12]
   200cc:	str	lr, [sp, #28]
   200d0:	mov	r3, r6
   200d4:	str	r2, [sp, #8]
   200d8:	str	r6, [sp, #4]
   200dc:	str	r7, [sp]
   200e0:	mov	r2, r0
   200e4:	mov	r0, ip
   200e8:	bl	1507c <XGetWindowProperty@plt>
   200ec:	mov	r4, r0
   200f0:	bl	14ff8 <gdk_error_trap_pop@plt>
   200f4:	orrs	r3, r4, r0
   200f8:	bne	20130 <g_strcmp0@plt+0xa2b0>
   200fc:	ldr	r3, [sp, #40]	; 0x28
   20100:	cmp	r3, #6
   20104:	beq	20054 <g_strcmp0@plt+0xa1d4>
   20108:	ldr	r2, [pc, #88]	; 20168 <g_strcmp0@plt+0xa2e8>
   2010c:	mov	r1, #16
   20110:	ldr	r0, [pc, #52]	; 2014c <g_strcmp0@plt+0xa2cc>
   20114:	bl	151f0 <g_log@plt>
   20118:	b	20054 <g_strcmp0@plt+0xa1d4>
   2011c:	ldr	r2, [pc, #72]	; 2016c <g_strcmp0@plt+0xa2ec>
   20120:	mov	r1, #16
   20124:	ldr	r0, [pc, #32]	; 2014c <g_strcmp0@plt+0xa2cc>
   20128:	bl	151f0 <g_log@plt>
   2012c:	b	20054 <g_strcmp0@plt+0xa1d4>
   20130:	ldr	r2, [pc, #56]	; 20170 <g_strcmp0@plt+0xa2f0>
   20134:	mov	r1, #16
   20138:	ldr	r0, [pc, #12]	; 2014c <g_strcmp0@plt+0xa2cc>
   2013c:	bl	151f0 <g_log@plt>
   20140:	b	20054 <g_strcmp0@plt+0xa1d4>
   20144:	bl	157f0 <__stack_chk_fail@plt>
   20148:	andeq	r0, r4, r0, asr lr
   2014c:	andeq	r8, r2, ip, lsl #29
   20150:	andeq	lr, r2, r0, asr #25
   20154:	andeq	lr, r2, r4, ror #24
   20158:	strdeq	lr, [r2], -r8
   2015c:	andeq	lr, r2, ip, lsr sp
   20160:	ldrdeq	lr, [r2], -r4
   20164:	andeq	lr, r2, r0, asr sp
   20168:	andeq	lr, r2, r4, lsl #27
   2016c:	andeq	lr, r2, r4, lsl sp
   20170:	andeq	lr, r2, r4, ror #26
   20174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20178:	sub	sp, sp, #60	; 0x3c
   2017c:	ldr	r5, [pc, #452]	; 20348 <g_strcmp0@plt+0xa4c8>
   20180:	mov	r4, r0
   20184:	mov	r2, #0
   20188:	ldr	r3, [r5]
   2018c:	str	r2, [sp, #32]
   20190:	str	r3, [sp, #52]	; 0x34
   20194:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   20198:	cmp	r4, #0
   2019c:	beq	201cc <g_strcmp0@plt+0xa34c>
   201a0:	ldr	r3, [r4]
   201a4:	cmp	r3, #0
   201a8:	beq	201b8 <g_strcmp0@plt+0xa338>
   201ac:	ldr	r3, [r3]
   201b0:	cmp	r3, r0
   201b4:	beq	201fc <g_strcmp0@plt+0xa37c>
   201b8:	mov	r1, r0
   201bc:	mov	r0, r4
   201c0:	bl	159dc <g_type_check_instance_is_a@plt>
   201c4:	cmp	r0, #0
   201c8:	bne	201fc <g_strcmp0@plt+0xa37c>
   201cc:	ldr	r2, [pc, #376]	; 2034c <g_strcmp0@plt+0xa4cc>
   201d0:	ldr	r1, [pc, #376]	; 20350 <g_strcmp0@plt+0xa4d0>
   201d4:	ldr	r0, [pc, #376]	; 20354 <g_strcmp0@plt+0xa4d4>
   201d8:	bl	14fd4 <g_return_if_fail_warning@plt>
   201dc:	mov	r4, #0
   201e0:	ldr	r2, [sp, #52]	; 0x34
   201e4:	ldr	r3, [r5]
   201e8:	mov	r0, r4
   201ec:	cmp	r2, r3
   201f0:	bne	20344 <g_strcmp0@plt+0xa4c4>
   201f4:	add	sp, sp, #60	; 0x3c
   201f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201fc:	ldr	r3, [r4, #12]
   20200:	ldr	r3, [r3, #8]
   20204:	cmp	r3, #0
   20208:	beq	2031c <g_strcmp0@plt+0xa49c>
   2020c:	bl	153f4 <gdk_error_trap_push@plt>
   20210:	ldr	r3, [r4, #12]
   20214:	ldr	r1, [pc, #316]	; 20358 <g_strcmp0@plt+0xa4d8>
   20218:	add	r9, sp, #48	; 0x30
   2021c:	ldr	r0, [r3]
   20220:	bl	155a4 <gdk_x11_get_xatom_by_name_for_display@plt>
   20224:	ldr	r3, [r4, #12]
   20228:	ldr	r1, [pc, #300]	; 2035c <g_strcmp0@plt+0xa4dc>
   2022c:	add	r8, sp, #44	; 0x2c
   20230:	add	r7, sp, #40	; 0x28
   20234:	add	r6, sp, #36	; 0x24
   20238:	add	sl, sp, #32
   2023c:	mov	fp, r0
   20240:	ldr	r0, [r3]
   20244:	bl	155a4 <gdk_x11_get_xatom_by_name_for_display@plt>
   20248:	ldr	r3, [r4, #12]
   2024c:	mvn	lr, #-2147483648	; 0x80000000
   20250:	mov	r2, fp
   20254:	ldr	ip, [r3, #4]
   20258:	ldr	r1, [r3, #8]
   2025c:	mov	r3, #0
   20260:	str	r3, [sp, #4]
   20264:	str	lr, [sp]
   20268:	str	sl, [sp, #28]
   2026c:	strd	r8, [sp, #20]
   20270:	strd	r6, [sp, #12]
   20274:	str	r0, [sp, #8]
   20278:	mov	r0, ip
   2027c:	bl	1507c <XGetWindowProperty@plt>
   20280:	mov	fp, r0
   20284:	bl	15e44 <gdk_error_trap_pop_ignored@plt>
   20288:	cmp	fp, #0
   2028c:	bne	2029c <g_strcmp0@plt+0xa41c>
   20290:	ldr	r3, [sp, #44]	; 0x2c
   20294:	cmp	r3, #0
   20298:	bne	20334 <g_strcmp0@plt+0xa4b4>
   2029c:	bl	153f4 <gdk_error_trap_push@plt>
   202a0:	ldr	r3, [r4, #12]
   202a4:	mov	ip, #31
   202a8:	mvn	r2, #-2147483648	; 0x80000000
   202ac:	ldrd	r0, [r3, #4]
   202b0:	mov	r3, #0
   202b4:	strd	r6, [sp, #12]
   202b8:	stm	sp, {r2, r3, ip}
   202bc:	mov	r2, #39	; 0x27
   202c0:	str	sl, [sp, #28]
   202c4:	str	r9, [sp, #24]
   202c8:	str	r8, [sp, #20]
   202cc:	bl	1507c <XGetWindowProperty@plt>
   202d0:	mov	r6, r0
   202d4:	bl	15e44 <gdk_error_trap_pop_ignored@plt>
   202d8:	cmp	r6, #0
   202dc:	bne	202ec <g_strcmp0@plt+0xa46c>
   202e0:	ldr	r3, [sp, #44]	; 0x2c
   202e4:	cmp	r3, #0
   202e8:	bne	20334 <g_strcmp0@plt+0xa4b4>
   202ec:	ldr	r3, [r4, #12]
   202f0:	ldr	r2, [pc, #104]	; 20360 <g_strcmp0@plt+0xa4e0>
   202f4:	mov	r1, #16
   202f8:	ldr	r3, [r3, #8]
   202fc:	ldr	r0, [pc, #80]	; 20354 <g_strcmp0@plt+0xa4d4>
   20300:	bl	151f0 <g_log@plt>
   20304:	mov	r4, #0
   20308:	ldr	r0, [sp, #32]
   2030c:	cmp	r0, #0
   20310:	beq	201e0 <g_strcmp0@plt+0xa360>
   20314:	bl	15934 <XFree@plt>
   20318:	b	201e0 <g_strcmp0@plt+0xa360>
   2031c:	ldr	r2, [pc, #64]	; 20364 <g_strcmp0@plt+0xa4e4>
   20320:	mov	r1, #128	; 0x80
   20324:	ldr	r0, [pc, #40]	; 20354 <g_strcmp0@plt+0xa4d4>
   20328:	mov	r4, r3
   2032c:	bl	151f0 <g_log@plt>
   20330:	b	20308 <g_strcmp0@plt+0xa488>
   20334:	ldr	r0, [sp, #32]
   20338:	bl	153a0 <g_strdup@plt>
   2033c:	mov	r4, r0
   20340:	b	20308 <g_strcmp0@plt+0xa488>
   20344:	bl	157f0 <__stack_chk_fail@plt>
   20348:	andeq	r0, r4, r0, asr lr
   2034c:	andeq	lr, r2, r0, asr #25
   20350:	andeq	lr, r2, ip, ror ip
   20354:	andeq	r8, r2, ip, lsl #29
   20358:	muleq	r2, ip, sp
   2035c:	andeq	lr, r2, ip, lsr #27
   20360:			; <UNDEFINED> instruction: 0x0002edb8
   20364:	ldrdeq	lr, [r2], -r4
   20368:	push	{r4, lr}
   2036c:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   20370:	mov	r1, #0
   20374:	bl	14ef0 <g_object_new@plt>
   20378:	mov	r4, r0
   2037c:	bl	1fc9c <g_strcmp0@plt+0x9e1c>
   20380:	mov	r1, r0
   20384:	mov	r0, r4
   20388:	pop	{r4, lr}
   2038c:	b	15148 <g_type_check_instance_cast@plt>
   20390:	push	{lr}		; (str lr, [sp, #-4]!)
   20394:	sub	sp, sp, #20
   20398:	ldr	r0, [pc, #48]	; 203d0 <g_strcmp0@plt+0xa550>
   2039c:	bl	15748 <g_intern_static_string@plt>
   203a0:	ldr	r1, [pc, #44]	; 203d4 <g_strcmp0@plt+0xa554>
   203a4:	mov	r2, #0
   203a8:	mov	r3, #16
   203ac:	stmib	sp, {r1, r2}
   203b0:	str	r3, [sp]
   203b4:	mov	r2, #68	; 0x44
   203b8:	ldr	r3, [pc, #24]	; 203d8 <g_strcmp0@plt+0xa558>
   203bc:	mov	r1, r0
   203c0:	mov	r0, #80	; 0x50
   203c4:	bl	14fe0 <g_type_register_static_simple@plt>
   203c8:	add	sp, sp, #20
   203cc:	pop	{pc}		; (ldr pc, [sp], #4)
   203d0:	strdeq	lr, [r2], -r4
   203d4:	andeq	r0, r2, r8, lsl #9
   203d8:	ldrdeq	r0, [r2], -ip
   203dc:	push	{r4, lr}
   203e0:	mov	r4, r0
   203e4:	bl	15c58 <g_type_class_peek_parent@plt>
   203e8:	ldr	r1, [pc, #64]	; 20430 <g_strcmp0@plt+0xa5b0>
   203ec:	ldr	r3, [r1, #4]
   203f0:	cmp	r3, #0
   203f4:	str	r0, [r1]
   203f8:	bne	20420 <g_strcmp0@plt+0xa5a0>
   203fc:	mov	r1, #80	; 0x50
   20400:	mov	r0, r4
   20404:	bl	15dc0 <g_type_check_class_cast@plt>
   20408:	ldr	r3, [pc, #36]	; 20434 <g_strcmp0@plt+0xa5b4>
   2040c:	mov	r1, #4
   20410:	str	r3, [r0, #24]
   20414:	mov	r0, r4
   20418:	pop	{r4, lr}
   2041c:	b	15988 <g_type_class_add_private@plt>
   20420:	add	r1, r1, #4
   20424:	mov	r0, r4
   20428:	bl	15028 <g_type_class_adjust_private_offset@plt>
   2042c:	b	203fc <g_strcmp0@plt+0xa57c>
   20430:	ldrdeq	r1, [r4], -r0
   20434:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20438:	push	{r4, lr}
   2043c:	mcr	15, 0, r0, cr7, cr10, {5}
   20440:	ldr	r4, [pc, #60]	; 20484 <g_strcmp0@plt+0xa604>
   20444:	ldr	r3, [r4, #8]
   20448:	mcr	15, 0, r0, cr7, cr10, {5}
   2044c:	cmp	r3, #0
   20450:	beq	2045c <g_strcmp0@plt+0xa5dc>
   20454:	ldr	r0, [r4, #8]
   20458:	pop	{r4, pc}
   2045c:	add	r0, r4, #8
   20460:	bl	1567c <g_once_init_enter@plt>
   20464:	cmp	r0, #0
   20468:	beq	20454 <g_strcmp0@plt+0xa5d4>
   2046c:	bl	20390 <g_strcmp0@plt+0xa510>
   20470:	mov	r1, r0
   20474:	add	r0, r4, #8
   20478:	bl	15b98 <g_once_init_leave@plt>
   2047c:	ldr	r0, [r4, #8]
   20480:	pop	{r4, pc}
   20484:	ldrdeq	r1, [r4], -r0
   20488:	push	{r4, r5, r6, lr}
   2048c:	mov	r4, r0
   20490:	bl	20438 <g_strcmp0@plt+0xa5b8>
   20494:	mov	r1, r0
   20498:	mov	r0, r4
   2049c:	bl	155f8 <g_type_instance_get_private@plt>
   204a0:	str	r0, [r4, #12]
   204a4:	mov	r5, r0
   204a8:	bl	15ac0 <g_key_file_new@plt>
   204ac:	ldr	ip, [r4, #12]
   204b0:	mov	r3, #0
   204b4:	mov	r2, r3
   204b8:	ldr	r1, [pc, #36]	; 204e4 <g_strcmp0@plt+0xa664>
   204bc:	str	r0, [r5]
   204c0:	ldr	r0, [ip]
   204c4:	bl	15094 <g_key_file_load_from_file@plt>
   204c8:	cmp	r0, #0
   204cc:	popne	{r4, r5, r6, pc}
   204d0:	ldr	r2, [pc, #16]	; 204e8 <g_strcmp0@plt+0xa668>
   204d4:	mov	r1, #16
   204d8:	ldr	r0, [pc, #12]	; 204ec <g_strcmp0@plt+0xa66c>
   204dc:	pop	{r4, r5, r6, lr}
   204e0:	b	151f0 <g_log@plt>
   204e4:	andeq	lr, r2, r0, lsl #28
   204e8:	andeq	lr, r2, ip, lsl lr
   204ec:	andeq	r8, r2, ip, lsl #29
   204f0:	push	{r4, lr}
   204f4:	mov	r4, r0
   204f8:	bl	20438 <g_strcmp0@plt+0xa5b8>
   204fc:	cmp	r4, #0
   20500:	beq	20574 <g_strcmp0@plt+0xa6f4>
   20504:	ldr	r3, [r4]
   20508:	cmp	r3, #0
   2050c:	beq	2051c <g_strcmp0@plt+0xa69c>
   20510:	ldr	r3, [r3]
   20514:	cmp	r3, r0
   20518:	beq	20530 <g_strcmp0@plt+0xa6b0>
   2051c:	mov	r1, r0
   20520:	mov	r0, r4
   20524:	bl	159dc <g_type_check_instance_is_a@plt>
   20528:	cmp	r0, #0
   2052c:	beq	20574 <g_strcmp0@plt+0xa6f4>
   20530:	bl	20438 <g_strcmp0@plt+0xa5b8>
   20534:	mov	r1, r0
   20538:	mov	r0, r4
   2053c:	bl	15148 <g_type_check_instance_cast@plt>
   20540:	ldr	r3, [r0, #12]
   20544:	cmp	r3, #0
   20548:	beq	20588 <g_strcmp0@plt+0xa708>
   2054c:	ldr	r0, [r3]
   20550:	bl	15c40 <g_key_file_free@plt>
   20554:	ldr	r3, [pc, #64]	; 2059c <g_strcmp0@plt+0xa71c>
   20558:	mov	r1, #80	; 0x50
   2055c:	ldr	r0, [r3]
   20560:	bl	15dc0 <g_type_check_class_cast@plt>
   20564:	ldr	r3, [r0, #24]
   20568:	mov	r0, r4
   2056c:	pop	{r4, lr}
   20570:	bx	r3
   20574:	ldr	r2, [pc, #36]	; 205a0 <g_strcmp0@plt+0xa720>
   20578:	ldr	r1, [pc, #36]	; 205a4 <g_strcmp0@plt+0xa724>
   2057c:	ldr	r0, [pc, #36]	; 205a8 <g_strcmp0@plt+0xa728>
   20580:	pop	{r4, lr}
   20584:	b	14fd4 <g_return_if_fail_warning@plt>
   20588:	ldr	r2, [pc, #28]	; 205ac <g_strcmp0@plt+0xa72c>
   2058c:	ldr	r1, [pc, #16]	; 205a4 <g_strcmp0@plt+0xa724>
   20590:	ldr	r0, [pc, #16]	; 205a8 <g_strcmp0@plt+0xa728>
   20594:	pop	{r4, lr}
   20598:	b	14fd4 <g_return_if_fail_warning@plt>
   2059c:	ldrdeq	r1, [r4], -r0
   205a0:	andeq	lr, r2, ip, lsr #28
   205a4:	andeq	lr, r2, r0, ror #27
   205a8:	andeq	r8, r2, ip, lsl #29
   205ac:	andeq	lr, r2, r4, asr #28
   205b0:	push	{r4, r5, r6, lr}
   205b4:	subs	r5, r1, #0
   205b8:	mov	r6, r0
   205bc:	beq	2068c <g_strcmp0@plt+0xa80c>
   205c0:	cmp	r5, #1
   205c4:	beq	2069c <g_strcmp0@plt+0xa81c>
   205c8:	cmp	r5, #2
   205cc:	beq	20694 <g_strcmp0@plt+0xa814>
   205d0:	ldr	r3, [pc, #204]	; 206a4 <g_strcmp0@plt+0xa824>
   205d4:	cmp	r5, #3
   205d8:	ldr	r2, [pc, #200]	; 206a8 <g_strcmp0@plt+0xa828>
   205dc:	moveq	r2, r3
   205e0:	ldr	r1, [r6, #12]
   205e4:	mov	r3, #0
   205e8:	ldr	r0, [r1]
   205ec:	ldr	r1, [pc, #184]	; 206ac <g_strcmp0@plt+0xa82c>
   205f0:	bl	15a18 <g_key_file_get_string@plt>
   205f4:	ldr	r1, [pc, #180]	; 206b0 <g_strcmp0@plt+0xa830>
   205f8:	mov	r4, r0
   205fc:	bl	15e80 <g_strcmp0@plt>
   20600:	cmp	r0, #0
   20604:	beq	2062c <g_strcmp0@plt+0xa7ac>
   20608:	cmp	r4, #0
   2060c:	beq	20634 <g_strcmp0@plt+0xa7b4>
   20610:	mov	r3, r4
   20614:	ldr	r2, [pc, #152]	; 206b4 <g_strcmp0@plt+0xa834>
   20618:	mov	r1, #128	; 0x80
   2061c:	ldr	r0, [pc, #148]	; 206b8 <g_strcmp0@plt+0xa838>
   20620:	bl	151f0 <g_log@plt>
   20624:	mov	r0, r4
   20628:	pop	{r4, r5, r6, pc}
   2062c:	mov	r0, r4
   20630:	bl	15874 <g_free@plt>
   20634:	cmp	r5, #4
   20638:	moveq	r4, #0
   2063c:	beq	20610 <g_strcmp0@plt+0xa790>
   20640:	ldr	r2, [pc, #116]	; 206bc <g_strcmp0@plt+0xa83c>
   20644:	mov	r1, #128	; 0x80
   20648:	ldr	r0, [pc, #104]	; 206b8 <g_strcmp0@plt+0xa838>
   2064c:	bl	151f0 <g_log@plt>
   20650:	ldr	r1, [r6, #12]
   20654:	mov	r3, #0
   20658:	ldr	r2, [pc, #72]	; 206a8 <g_strcmp0@plt+0xa828>
   2065c:	ldr	r0, [r1]
   20660:	ldr	r1, [pc, #68]	; 206ac <g_strcmp0@plt+0xa82c>
   20664:	bl	15a18 <g_key_file_get_string@plt>
   20668:	ldr	r1, [pc, #64]	; 206b0 <g_strcmp0@plt+0xa830>
   2066c:	mov	r4, r0
   20670:	bl	15e80 <g_strcmp0@plt>
   20674:	subs	r5, r0, #0
   20678:	bne	20610 <g_strcmp0@plt+0xa790>
   2067c:	mov	r0, r4
   20680:	bl	15874 <g_free@plt>
   20684:	mov	r4, r5
   20688:	b	20610 <g_strcmp0@plt+0xa790>
   2068c:	ldr	r2, [pc, #44]	; 206c0 <g_strcmp0@plt+0xa840>
   20690:	b	205e0 <g_strcmp0@plt+0xa760>
   20694:	ldr	r2, [pc, #40]	; 206c4 <g_strcmp0@plt+0xa844>
   20698:	b	205e0 <g_strcmp0@plt+0xa760>
   2069c:	ldr	r2, [pc, #36]	; 206c8 <g_strcmp0@plt+0xa848>
   206a0:	b	205e0 <g_strcmp0@plt+0xa760>
   206a4:	andeq	lr, r2, r4, lsl #29
   206a8:	andeq	lr, r2, r0, ror lr
   206ac:	muleq	r2, r0, lr
   206b0:	andeq	lr, r2, r4, lsr #29
   206b4:			; <UNDEFINED> instruction: 0x0002eebc
   206b8:	andeq	r8, r2, ip, lsl #29
   206bc:	andeq	lr, r2, ip, lsr #29
   206c0:	andeq	lr, r2, ip, asr lr
   206c4:	andeq	lr, r2, ip, ror lr
   206c8:	andeq	lr, r2, r8, ror #28
   206cc:	push	{r4, lr}
   206d0:	bl	20438 <g_strcmp0@plt+0xa5b8>
   206d4:	mov	r1, #0
   206d8:	bl	14ef0 <g_object_new@plt>
   206dc:	mov	r4, r0
   206e0:	bl	20438 <g_strcmp0@plt+0xa5b8>
   206e4:	mov	r1, r0
   206e8:	mov	r0, r4
   206ec:	pop	{r4, lr}
   206f0:	b	15148 <g_type_check_instance_cast@plt>
   206f4:	push	{lr}		; (str lr, [sp, #-4]!)
   206f8:	sub	sp, sp, #20
   206fc:	ldr	r0, [pc, #48]	; 20734 <g_strcmp0@plt+0xa8b4>
   20700:	bl	15748 <g_intern_static_string@plt>
   20704:	ldr	r1, [pc, #44]	; 20738 <g_strcmp0@plt+0xa8b8>
   20708:	mov	r2, #0
   2070c:	mov	r3, #16
   20710:	stmib	sp, {r1, r2}
   20714:	str	r3, [sp]
   20718:	mov	r2, #68	; 0x44
   2071c:	ldr	r3, [pc, #24]	; 2073c <g_strcmp0@plt+0xa8bc>
   20720:	mov	r1, r0
   20724:	mov	r0, #80	; 0x50
   20728:	bl	14fe0 <g_type_register_static_simple@plt>
   2072c:	add	sp, sp, #20
   20730:	pop	{pc}		; (ldr pc, [sp], #4)
   20734:	strdeq	lr, [r2], -r0
   20738:	andeq	r0, r2, r0, lsr r9
   2073c:	andeq	r0, r2, r0, asr #14
   20740:	push	{r4, lr}
   20744:	mov	r4, r0
   20748:	bl	15c58 <g_type_class_peek_parent@plt>
   2074c:	ldr	r1, [pc, #64]	; 20794 <g_strcmp0@plt+0xa914>
   20750:	ldr	r3, [r1, #4]
   20754:	cmp	r3, #0
   20758:	str	r0, [r1]
   2075c:	bne	20784 <g_strcmp0@plt+0xa904>
   20760:	mov	r1, #80	; 0x50
   20764:	mov	r0, r4
   20768:	bl	15dc0 <g_type_check_class_cast@plt>
   2076c:	ldr	r3, [pc, #36]	; 20798 <g_strcmp0@plt+0xa918>
   20770:	mov	r1, #4
   20774:	str	r3, [r0, #24]
   20778:	mov	r0, r4
   2077c:	pop	{r4, lr}
   20780:	b	15988 <g_type_class_add_private@plt>
   20784:	add	r1, r1, #4
   20788:	mov	r0, r4
   2078c:	bl	15028 <g_type_class_adjust_private_offset@plt>
   20790:	b	20760 <g_strcmp0@plt+0xa8e0>
   20794:	ldrdeq	r1, [r4], -ip
   20798:	andeq	r0, r2, r8, ror r9
   2079c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   207a0:	mov	r0, r1
   207a4:	sub	sp, sp, #20
   207a8:	ldr	r1, [pc, #288]	; 208d0 <g_strcmp0@plt+0xaa50>
   207ac:	mov	r4, r3
   207b0:	mov	r5, r2
   207b4:	bl	15cb8 <strcmp@plt>
   207b8:	ldr	r3, [sp, #56]	; 0x38
   207bc:	str	r3, [sp, #12]
   207c0:	subs	r6, r0, #0
   207c4:	beq	207d0 <g_strcmp0@plt+0xa950>
   207c8:	add	sp, sp, #20
   207cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207d0:	mov	r0, r5
   207d4:	bl	157a8 <g_strv_length@plt>
   207d8:	cmp	r0, #0
   207dc:	beq	207c8 <g_strcmp0@plt+0xa948>
   207e0:	sub	r5, r5, #4
   207e4:	ldr	sl, [pc, #232]	; 208d4 <g_strcmp0@plt+0xaa54>
   207e8:	ldr	r9, [pc, #232]	; 208d8 <g_strcmp0@plt+0xaa58>
   207ec:	ldr	r8, [pc, #232]	; 208dc <g_strcmp0@plt+0xaa5c>
   207f0:	add	r7, r5, r0, lsl #2
   207f4:	str	r6, [sp, #8]
   207f8:	str	r6, [sp, #4]
   207fc:	ldr	fp, [r5, #4]!
   20800:	mov	r1, sl
   20804:	mov	r0, fp
   20808:	bl	15cb8 <strcmp@plt>
   2080c:	mov	r1, r9
   20810:	add	r4, r4, #4
   20814:	cmp	r0, #0
   20818:	mov	r0, fp
   2081c:	ldreq	r3, [r4, #-4]
   20820:	streq	r3, [sp, #4]
   20824:	bl	15cb8 <strcmp@plt>
   20828:	mov	r1, r8
   2082c:	cmp	r0, #0
   20830:	mov	r0, fp
   20834:	ldreq	r3, [r4, #-4]
   20838:	streq	r3, [sp, #8]
   2083c:	bl	15cb8 <strcmp@plt>
   20840:	cmp	r0, #0
   20844:	ldreq	r6, [r4, #-4]
   20848:	cmp	r5, r7
   2084c:	bne	207fc <g_strcmp0@plt+0xa97c>
   20850:	cmp	r6, #0
   20854:	beq	207c8 <g_strcmp0@plt+0xa948>
   20858:	ldr	r0, [sp, #4]
   2085c:	cmp	r0, #0
   20860:	beq	20890 <g_strcmp0@plt+0xaa10>
   20864:	ldr	r3, [sp, #12]
   20868:	ldr	r3, [r3, #12]
   2086c:	ldr	r4, [r3]
   20870:	bl	153a0 <g_strdup@plt>
   20874:	mov	r5, r0
   20878:	mov	r0, r6
   2087c:	bl	153a0 <g_strdup@plt>
   20880:	mov	r1, r5
   20884:	mov	r2, r0
   20888:	mov	r0, r4
   2088c:	bl	153d0 <g_hash_table_insert@plt>
   20890:	ldr	r0, [sp, #8]
   20894:	cmp	r0, #0
   20898:	beq	207c8 <g_strcmp0@plt+0xa948>
   2089c:	ldr	r3, [sp, #12]
   208a0:	ldr	r3, [r3, #12]
   208a4:	ldr	r4, [r3]
   208a8:	bl	153a0 <g_strdup@plt>
   208ac:	mov	r5, r0
   208b0:	mov	r0, r6
   208b4:	bl	153a0 <g_strdup@plt>
   208b8:	mov	r1, r5
   208bc:	mov	r2, r0
   208c0:	mov	r0, r4
   208c4:	add	sp, sp, #20
   208c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   208cc:	b	153d0 <g_hash_table_insert@plt>
   208d0:	strdeq	lr, [r2], -ip
   208d4:	andeq	lr, r2, ip, lsl #30
   208d8:	andeq	lr, r2, ip, lsl pc
   208dc:	andeq	lr, r2, ip, lsr #30
   208e0:	push	{r4, lr}
   208e4:	mcr	15, 0, r0, cr7, cr10, {5}
   208e8:	ldr	r4, [pc, #60]	; 2092c <g_strcmp0@plt+0xaaac>
   208ec:	ldr	r3, [r4, #8]
   208f0:	mcr	15, 0, r0, cr7, cr10, {5}
   208f4:	cmp	r3, #0
   208f8:	beq	20904 <g_strcmp0@plt+0xaa84>
   208fc:	ldr	r0, [r4, #8]
   20900:	pop	{r4, pc}
   20904:	add	r0, r4, #8
   20908:	bl	1567c <g_once_init_enter@plt>
   2090c:	cmp	r0, #0
   20910:	beq	208fc <g_strcmp0@plt+0xaa7c>
   20914:	bl	206f4 <g_strcmp0@plt+0xa874>
   20918:	mov	r1, r0
   2091c:	add	r0, r4, #8
   20920:	bl	15b98 <g_once_init_leave@plt>
   20924:	ldr	r0, [r4, #8]
   20928:	pop	{r4, pc}
   2092c:	ldrdeq	r1, [r4], -ip
   20930:	push	{r4, r5, r6, lr}
   20934:	mov	r5, r0
   20938:	bl	208e0 <g_strcmp0@plt+0xaa60>
   2093c:	mov	r1, r0
   20940:	mov	r0, r5
   20944:	bl	155f8 <g_type_instance_get_private@plt>
   20948:	ldr	r3, [pc, #28]	; 2096c <g_strcmp0@plt+0xaaec>
   2094c:	ldr	r1, [pc, #28]	; 20970 <g_strcmp0@plt+0xaaf0>
   20950:	mov	r2, r3
   20954:	mov	r4, r0
   20958:	str	r0, [r5, #12]
   2095c:	ldr	r0, [pc, #16]	; 20974 <g_strcmp0@plt+0xaaf4>
   20960:	bl	15370 <g_hash_table_new_full@plt>
   20964:	str	r0, [r4]
   20968:	pop	{r4, r5, r6, pc}
   2096c:	andeq	r5, r1, r4, ror r8
   20970:	andeq	r5, r1, ip, lsl #2
   20974:	andeq	r5, r1, r8, lsr r8
   20978:	push	{r4, lr}
   2097c:	mov	r4, r0
   20980:	bl	208e0 <g_strcmp0@plt+0xaa60>
   20984:	cmp	r4, #0
   20988:	beq	209fc <g_strcmp0@plt+0xab7c>
   2098c:	ldr	r3, [r4]
   20990:	cmp	r3, #0
   20994:	beq	209a4 <g_strcmp0@plt+0xab24>
   20998:	ldr	r3, [r3]
   2099c:	cmp	r3, r0
   209a0:	beq	209b8 <g_strcmp0@plt+0xab38>
   209a4:	mov	r1, r0
   209a8:	mov	r0, r4
   209ac:	bl	159dc <g_type_check_instance_is_a@plt>
   209b0:	cmp	r0, #0
   209b4:	beq	209fc <g_strcmp0@plt+0xab7c>
   209b8:	bl	208e0 <g_strcmp0@plt+0xaa60>
   209bc:	mov	r1, r0
   209c0:	mov	r0, r4
   209c4:	bl	15148 <g_type_check_instance_cast@plt>
   209c8:	ldr	r3, [r0, #12]
   209cc:	cmp	r3, #0
   209d0:	beq	20a10 <g_strcmp0@plt+0xab90>
   209d4:	ldr	r0, [r3]
   209d8:	bl	15898 <g_hash_table_unref@plt>
   209dc:	ldr	r3, [pc, #64]	; 20a24 <g_strcmp0@plt+0xaba4>
   209e0:	mov	r1, #80	; 0x50
   209e4:	ldr	r0, [r3]
   209e8:	bl	15dc0 <g_type_check_class_cast@plt>
   209ec:	ldr	r3, [r0, #24]
   209f0:	mov	r0, r4
   209f4:	pop	{r4, lr}
   209f8:	bx	r3
   209fc:	ldr	r2, [pc, #36]	; 20a28 <g_strcmp0@plt+0xaba8>
   20a00:	ldr	r1, [pc, #36]	; 20a2c <g_strcmp0@plt+0xabac>
   20a04:	ldr	r0, [pc, #36]	; 20a30 <g_strcmp0@plt+0xabb0>
   20a08:	pop	{r4, lr}
   20a0c:	b	14fd4 <g_return_if_fail_warning@plt>
   20a10:	ldr	r2, [pc, #28]	; 20a34 <g_strcmp0@plt+0xabb4>
   20a14:	ldr	r1, [pc, #16]	; 20a2c <g_strcmp0@plt+0xabac>
   20a18:	ldr	r0, [pc, #16]	; 20a30 <g_strcmp0@plt+0xabb0>
   20a1c:	pop	{r4, lr}
   20a20:	b	14fd4 <g_return_if_fail_warning@plt>
   20a24:	ldrdeq	r1, [r4], -ip
   20a28:	andeq	lr, r2, r4, lsr pc
   20a2c:	andeq	lr, r2, r4, asr #29
   20a30:	andeq	r8, r2, ip, lsl #29
   20a34:	andeq	lr, r2, r0, asr pc
   20a38:	push	{r4, r5, r6, r7, r8, r9, lr}
   20a3c:	sub	sp, sp, #28
   20a40:	ldr	r6, [pc, #296]	; 20b70 <g_strcmp0@plt+0xacf0>
   20a44:	ldr	r5, [pc, #296]	; 20b74 <g_strcmp0@plt+0xacf4>
   20a48:	mov	ip, #0
   20a4c:	ldr	lr, [r6]
   20a50:	mov	r3, r5
   20a54:	str	ip, [sp]
   20a58:	ldr	r2, [pc, #280]	; 20b78 <g_strcmp0@plt+0xacf8>
   20a5c:	mov	r8, r0
   20a60:	mov	r7, r1
   20a64:	ldr	r0, [pc, #272]	; 20b7c <g_strcmp0@plt+0xacfc>
   20a68:	ldr	r1, [pc, #272]	; 20b80 <g_strcmp0@plt+0xad00>
   20a6c:	str	lr, [sp, #20]
   20a70:	str	ip, [sp, #12]
   20a74:	bl	15280 <g_build_filename@plt>
   20a78:	mov	r1, #16
   20a7c:	mov	r4, r0
   20a80:	bl	158a4 <g_file_test@plt>
   20a84:	subs	r9, r0, #0
   20a88:	beq	20b44 <g_strcmp0@plt+0xacc4>
   20a8c:	mov	r1, #16
   20a90:	mov	r0, r4
   20a94:	bl	158a4 <g_file_test@plt>
   20a98:	subs	r5, r0, #0
   20a9c:	beq	20b28 <g_strcmp0@plt+0xaca8>
   20aa0:	mov	r3, r7
   20aa4:	add	r2, sp, #16
   20aa8:	add	r1, sp, #12
   20aac:	mov	r0, r4
   20ab0:	bl	15784 <g_file_get_contents@plt>
   20ab4:	subs	r5, r0, #0
   20ab8:	bne	20ae8 <g_strcmp0@plt+0xac68>
   20abc:	mov	r0, r4
   20ac0:	bl	15874 <g_free@plt>
   20ac4:	ldr	r0, [sp, #12]
   20ac8:	bl	15874 <g_free@plt>
   20acc:	ldr	r2, [sp, #20]
   20ad0:	ldr	r3, [r6]
   20ad4:	mov	r0, r5
   20ad8:	cmp	r2, r3
   20adc:	bne	20b6c <g_strcmp0@plt+0xacec>
   20ae0:	add	sp, sp, #28
   20ae4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20ae8:	mov	r2, r8
   20aec:	mov	r3, #0
   20af0:	mov	r1, #4
   20af4:	ldr	r0, [pc, #136]	; 20b84 <g_strcmp0@plt+0xad04>
   20af8:	bl	15844 <g_markup_parse_context_new@plt>
   20afc:	mov	r3, r7
   20b00:	ldr	r2, [sp, #16]
   20b04:	ldr	r1, [sp, #12]
   20b08:	mov	r8, r0
   20b0c:	bl	15508 <g_markup_parse_context_parse@plt>
   20b10:	cmp	r8, #0
   20b14:	mov	r5, r0
   20b18:	beq	20abc <g_strcmp0@plt+0xac3c>
   20b1c:	mov	r0, r8
   20b20:	bl	1588c <g_markup_parse_context_free@plt>
   20b24:	b	20abc <g_strcmp0@plt+0xac3c>
   20b28:	str	r4, [sp]
   20b2c:	mov	r0, r7
   20b30:	ldr	r3, [pc, #80]	; 20b88 <g_strcmp0@plt+0xad08>
   20b34:	mov	r2, r5
   20b38:	mov	r1, #1
   20b3c:	bl	15db4 <g_set_error@plt>
   20b40:	b	20abc <g_strcmp0@plt+0xac3c>
   20b44:	mov	r0, r4
   20b48:	bl	15874 <g_free@plt>
   20b4c:	stm	sp, {r5, r9}
   20b50:	ldr	r3, [pc, #32]	; 20b78 <g_strcmp0@plt+0xacf8>
   20b54:	ldr	r2, [pc, #36]	; 20b80 <g_strcmp0@plt+0xad00>
   20b58:	ldr	r1, [pc, #44]	; 20b8c <g_strcmp0@plt+0xad0c>
   20b5c:	ldr	r0, [pc, #44]	; 20b90 <g_strcmp0@plt+0xad10>
   20b60:	bl	15280 <g_build_filename@plt>
   20b64:	mov	r4, r0
   20b68:	b	20a8c <g_strcmp0@plt+0xac0c>
   20b6c:	bl	157f0 <__stack_chk_fail@plt>
   20b70:	andeq	r0, r4, r0, asr lr
   20b74:	andeq	lr, r2, r8, ror #30
   20b78:	andeq	lr, r2, r4, ror pc
   20b7c:	andeq	lr, r2, r0, lsl #31
   20b80:	andeq	lr, r2, r0, ror pc
   20b84:	ldrdeq	lr, [r2], -ip
   20b88:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   20b8c:	andeq	lr, r2, ip, lsl #31
   20b90:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   20b94:	ldr	r3, [r0, #12]
   20b98:	push	{r4, lr}
   20b9c:	ldr	r0, [r3]
   20ba0:	bl	156dc <g_hash_table_lookup@plt>
   20ba4:	pop	{r4, lr}
   20ba8:	b	153a0 <g_strdup@plt>
   20bac:	push	{r4, lr}
   20bb0:	bl	208e0 <g_strcmp0@plt+0xaa60>
   20bb4:	mov	r1, #0
   20bb8:	bl	14ef0 <g_object_new@plt>
   20bbc:	mov	r4, r0
   20bc0:	bl	208e0 <g_strcmp0@plt+0xaa60>
   20bc4:	mov	r1, r0
   20bc8:	mov	r0, r4
   20bcc:	pop	{r4, lr}
   20bd0:	b	15148 <g_type_check_instance_cast@plt>
   20bd4:	andeq	r0, r0, r0
   20bd8:	push	{lr}		; (str lr, [sp, #-4]!)
   20bdc:	sub	sp, sp, #20
   20be0:	ldr	r0, [pc, #48]	; 20c18 <g_strcmp0@plt+0xad98>
   20be4:	bl	15748 <g_intern_static_string@plt>
   20be8:	ldr	r1, [pc, #44]	; 20c1c <g_strcmp0@plt+0xad9c>
   20bec:	mov	r2, #0
   20bf0:	mov	r3, #16
   20bf4:	stmib	sp, {r1, r2}
   20bf8:	str	r3, [sp]
   20bfc:	mov	r2, #68	; 0x44
   20c00:	ldr	r3, [pc, #24]	; 20c20 <g_strcmp0@plt+0xada0>
   20c04:	mov	r1, r0
   20c08:	mov	r0, #80	; 0x50
   20c0c:	bl	14fe0 <g_type_register_static_simple@plt>
   20c10:	add	sp, sp, #20
   20c14:	pop	{pc}		; (ldr pc, [sp], #4)
   20c18:	andeq	pc, r2, r0, ror #3
   20c1c:	ldrdeq	r1, [r2], -r4
   20c20:	andeq	r0, r2, r4, lsr #24
   20c24:	push	{r4, r5, r6, r7, r8, lr}
   20c28:	sub	sp, sp, #24
   20c2c:	mov	r4, r0
   20c30:	bl	15c58 <g_type_class_peek_parent@plt>
   20c34:	ldr	r5, [pc, #236]	; 20d28 <g_strcmp0@plt+0xaea8>
   20c38:	ldr	r3, [r5, #4]
   20c3c:	cmp	r3, #0
   20c40:	str	r0, [r5]
   20c44:	bne	20d18 <g_strcmp0@plt+0xae98>
   20c48:	mov	r1, #80	; 0x50
   20c4c:	mov	r0, r4
   20c50:	bl	15dc0 <g_type_check_class_cast@plt>
   20c54:	ldr	r3, [pc, #208]	; 20d2c <g_strcmp0@plt+0xaeac>
   20c58:	ldr	r7, [pc, #208]	; 20d30 <g_strcmp0@plt+0xaeb0>
   20c5c:	mov	r8, #4
   20c60:	mov	r1, #56	; 0x38
   20c64:	mov	r6, r0
   20c68:	mov	r0, r4
   20c6c:	str	r3, [r6, #24]
   20c70:	mov	r4, #0
   20c74:	bl	15988 <g_type_class_add_private@plt>
   20c78:	ldr	r1, [r6]
   20c7c:	mov	r3, r4
   20c80:	str	r7, [sp, #8]
   20c84:	str	r4, [sp, #16]
   20c88:	str	r4, [sp, #4]
   20c8c:	str	r4, [sp]
   20c90:	str	r8, [sp, #12]
   20c94:	mov	r2, #2
   20c98:	ldr	r0, [pc, #148]	; 20d34 <g_strcmp0@plt+0xaeb4>
   20c9c:	bl	154e4 <g_signal_new@plt>
   20ca0:	ldr	r1, [r6]
   20ca4:	mov	r3, r4
   20ca8:	str	r4, [sp, #16]
   20cac:	stmib	sp, {r4, r7, r8}
   20cb0:	mov	r2, #2
   20cb4:	str	r4, [sp]
   20cb8:	str	r0, [r5, #12]
   20cbc:	ldr	r0, [pc, #116]	; 20d38 <g_strcmp0@plt+0xaeb8>
   20cc0:	bl	154e4 <g_signal_new@plt>
   20cc4:	ldr	r1, [r6]
   20cc8:	mov	r3, r4
   20ccc:	str	r4, [sp, #16]
   20cd0:	stmib	sp, {r4, r7, r8}
   20cd4:	mov	r2, #2
   20cd8:	str	r4, [sp]
   20cdc:	str	r0, [r5, #8]
   20ce0:	ldr	r0, [pc, #84]	; 20d3c <g_strcmp0@plt+0xaebc>
   20ce4:	bl	154e4 <g_signal_new@plt>
   20ce8:	ldr	r1, [r6]
   20cec:	mov	r3, r4
   20cf0:	str	r4, [sp, #16]
   20cf4:	stmib	sp, {r4, r7, r8}
   20cf8:	mov	r2, #2
   20cfc:	str	r4, [sp]
   20d00:	str	r0, [r5, #16]
   20d04:	ldr	r0, [pc, #52]	; 20d40 <g_strcmp0@plt+0xaec0>
   20d08:	bl	154e4 <g_signal_new@plt>
   20d0c:	str	r0, [r5, #20]
   20d10:	add	sp, sp, #24
   20d14:	pop	{r4, r5, r6, r7, r8, pc}
   20d18:	add	r1, r5, #4
   20d1c:	mov	r0, r4
   20d20:	bl	15028 <g_type_class_adjust_private_offset@plt>
   20d24:	b	20c48 <g_strcmp0@plt+0xadc8>
   20d28:	andeq	r1, r4, r8, ror #17
   20d2c:	strdeq	r2, [r2], -r8
   20d30:	andeq	r5, r1, r4, ror fp
   20d34:	strdeq	pc, [r2], -r0
   20d38:	andeq	sl, r2, ip, asr #32
   20d3c:	strdeq	fp, [r2], -r4
   20d40:	andeq	sl, r2, r4, asr #32
   20d44:	ldr	r3, [r0, #12]
   20d48:	push	{r4, r5, r6, lr}
   20d4c:	mov	r4, r2
   20d50:	ldr	r0, [r3]
   20d54:	bl	15418 <gtk_builder_get_object@plt>
   20d58:	mov	r5, r0
   20d5c:	bl	150f4 <gtk_widget_get_type@plt>
   20d60:	mov	r1, r0
   20d64:	mov	r0, r5
   20d68:	bl	15148 <g_type_check_instance_cast@plt>
   20d6c:	cmp	r4, #0
   20d70:	beq	20d7c <g_strcmp0@plt+0xaefc>
   20d74:	pop	{r4, r5, r6, lr}
   20d78:	b	15b50 <gtk_widget_show@plt>
   20d7c:	pop	{r4, r5, r6, lr}
   20d80:	b	1519c <gtk_widget_hide@plt>
   20d84:	ldr	r3, [r1, #12]
   20d88:	mvn	r2, #5
   20d8c:	push	{r4, lr}
   20d90:	mov	r4, r1
   20d94:	str	r2, [r3, #20]
   20d98:	ldr	r0, [r3, #16]
   20d9c:	bl	14f68 <g_main_loop_is_running@plt>
   20da0:	subs	r2, r0, #0
   20da4:	beq	20db8 <g_strcmp0@plt+0xaf38>
   20da8:	ldr	r3, [r4, #12]
   20dac:	pop	{r4, lr}
   20db0:	ldr	r0, [r3, #16]
   20db4:	b	15214 <g_main_loop_quit@plt>
   20db8:	ldr	r3, [pc, #12]	; 20dcc <g_strcmp0@plt+0xaf4c>
   20dbc:	mov	r0, r4
   20dc0:	pop	{r4, lr}
   20dc4:	ldr	r1, [r3, #20]
   20dc8:	b	15394 <g_signal_emit@plt>
   20dcc:	andeq	r1, r4, r8, ror #17
   20dd0:	ldr	r3, [r1, #12]
   20dd4:	push	{r4, lr}
   20dd8:	mvn	r2, #4
   20ddc:	mov	r4, r1
   20de0:	str	r2, [r3, #20]
   20de4:	ldr	r0, [r3, #16]
   20de8:	bl	15214 <g_main_loop_quit@plt>
   20dec:	ldr	r3, [r4, #12]
   20df0:	ldr	r0, [r3, #16]
   20df4:	bl	14f68 <g_main_loop_is_running@plt>
   20df8:	subs	r2, r0, #0
   20dfc:	beq	20e10 <g_strcmp0@plt+0xaf90>
   20e00:	ldr	r3, [r4, #12]
   20e04:	pop	{r4, lr}
   20e08:	ldr	r0, [r3, #16]
   20e0c:	b	15214 <g_main_loop_quit@plt>
   20e10:	ldr	r3, [pc, #12]	; 20e24 <g_strcmp0@plt+0xafa4>
   20e14:	mov	r0, r4
   20e18:	pop	{r4, lr}
   20e1c:	ldr	r1, [r3, #16]
   20e20:	b	15394 <g_signal_emit@plt>
   20e24:	andeq	r1, r4, r8, ror #17
   20e28:	ldr	r3, [r1, #12]
   20e2c:	push	{r4, r5, r6, lr}
   20e30:	mvn	r2, #6
   20e34:	mov	r4, r1
   20e38:	ldr	r0, [r3, #16]
   20e3c:	str	r2, [r3, #20]
   20e40:	bl	15214 <g_main_loop_quit@plt>
   20e44:	ldr	r3, [r4, #12]
   20e48:	ldr	r0, [r3, #4]
   20e4c:	cmp	r0, #0
   20e50:	bne	20ea8 <g_strcmp0@plt+0xb028>
   20e54:	ldr	r5, [r3, #48]	; 0x30
   20e58:	bl	26fa4 <g_strcmp0@plt+0x11124>
   20e5c:	mov	r1, r0
   20e60:	mov	r0, r5
   20e64:	bl	15148 <g_type_check_instance_cast@plt>
   20e68:	mov	r1, #0
   20e6c:	bl	272c0 <g_strcmp0@plt+0x11440>
   20e70:	ldr	r3, [r4, #12]
   20e74:	ldr	r0, [r3, #16]
   20e78:	bl	14f68 <g_main_loop_is_running@plt>
   20e7c:	subs	r2, r0, #0
   20e80:	beq	20e94 <g_strcmp0@plt+0xb014>
   20e84:	ldr	r3, [r4, #12]
   20e88:	pop	{r4, r5, r6, lr}
   20e8c:	ldr	r0, [r3, #16]
   20e90:	b	15214 <g_main_loop_quit@plt>
   20e94:	ldr	r3, [pc, #32]	; 20ebc <g_strcmp0@plt+0xb03c>
   20e98:	mov	r0, r4
   20e9c:	pop	{r4, r5, r6, lr}
   20ea0:	ldr	r1, [r3, #8]
   20ea4:	b	15394 <g_signal_emit@plt>
   20ea8:	bl	15e5c <g_source_remove@plt>
   20eac:	ldr	r3, [r4, #12]
   20eb0:	mov	r2, #0
   20eb4:	str	r2, [r3, #4]
   20eb8:	b	20e54 <g_strcmp0@plt+0xafd4>
   20ebc:	andeq	r1, r4, r8, ror #17
   20ec0:	push	{r4, lr}
   20ec4:	mcr	15, 0, r0, cr7, cr10, {5}
   20ec8:	ldr	r4, [pc, #60]	; 20f0c <g_strcmp0@plt+0xb08c>
   20ecc:	ldr	r3, [r4, #24]
   20ed0:	mcr	15, 0, r0, cr7, cr10, {5}
   20ed4:	cmp	r3, #0
   20ed8:	beq	20ee4 <g_strcmp0@plt+0xb064>
   20edc:	ldr	r0, [r4, #24]
   20ee0:	pop	{r4, pc}
   20ee4:	add	r0, r4, #24
   20ee8:	bl	1567c <g_once_init_enter@plt>
   20eec:	cmp	r0, #0
   20ef0:	beq	20edc <g_strcmp0@plt+0xb05c>
   20ef4:	bl	20bd8 <g_strcmp0@plt+0xad58>
   20ef8:	mov	r1, r0
   20efc:	add	r0, r4, #24
   20f00:	bl	15b98 <g_once_init_leave@plt>
   20f04:	ldr	r0, [r4, #24]
   20f08:	pop	{r4, pc}
   20f0c:	andeq	r1, r4, r8, ror #17
   20f10:	push	{r4, lr}
   20f14:	mov	r4, r0
   20f18:	bl	20ec0 <g_strcmp0@plt+0xb040>
   20f1c:	cmp	r4, #0
   20f20:	beq	20fbc <g_strcmp0@plt+0xb13c>
   20f24:	ldr	r3, [r4]
   20f28:	cmp	r3, #0
   20f2c:	beq	20f3c <g_strcmp0@plt+0xb0bc>
   20f30:	ldr	r3, [r3]
   20f34:	cmp	r3, r0
   20f38:	beq	20f50 <g_strcmp0@plt+0xb0d0>
   20f3c:	mov	r1, r0
   20f40:	mov	r0, r4
   20f44:	bl	159dc <g_type_check_instance_is_a@plt>
   20f48:	cmp	r0, #0
   20f4c:	beq	20fbc <g_strcmp0@plt+0xb13c>
   20f50:	ldr	r1, [pc, #144]	; 20fe8 <g_strcmp0@plt+0xb168>
   20f54:	ldr	r3, [pc, #144]	; 20fec <g_strcmp0@plt+0xb16c>
   20f58:	ldr	r2, [r1, #28]
   20f5c:	add	r0, r2, #1
   20f60:	umull	ip, r3, r3, r2
   20f64:	str	r0, [r1, #28]
   20f68:	lsr	r3, r3, #4
   20f6c:	add	r3, r3, r3, lsl #2
   20f70:	cmp	r2, r3, lsl #2
   20f74:	beq	20fd4 <g_strcmp0@plt+0xb154>
   20f78:	ldr	r3, [r4, #12]
   20f7c:	ldr	r1, [pc, #108]	; 20ff0 <g_strcmp0@plt+0xb170>
   20f80:	ldr	r0, [r3]
   20f84:	bl	15418 <gtk_builder_get_object@plt>
   20f88:	mov	r4, r0
   20f8c:	bl	150f4 <gtk_widget_get_type@plt>
   20f90:	mov	r1, r0
   20f94:	mov	r0, r4
   20f98:	bl	15148 <g_type_check_instance_cast@plt>
   20f9c:	mov	r4, r0
   20fa0:	bl	15724 <gtk_progress_bar_get_type@plt>
   20fa4:	mov	r1, r0
   20fa8:	mov	r0, r4
   20fac:	bl	15148 <g_type_check_instance_cast@plt>
   20fb0:	bl	15820 <gtk_progress_bar_pulse@plt>
   20fb4:	mov	r0, #1
   20fb8:	pop	{r4, pc}
   20fbc:	ldr	r2, [pc, #48]	; 20ff4 <g_strcmp0@plt+0xb174>
   20fc0:	ldr	r1, [pc, #48]	; 20ff8 <g_strcmp0@plt+0xb178>
   20fc4:	ldr	r0, [pc, #48]	; 20ffc <g_strcmp0@plt+0xb17c>
   20fc8:	bl	14fd4 <g_return_if_fail_warning@plt>
   20fcc:	mov	r0, #0
   20fd0:	pop	{r4, pc}
   20fd4:	ldr	r2, [pc, #36]	; 21000 <g_strcmp0@plt+0xb180>
   20fd8:	mov	r1, #128	; 0x80
   20fdc:	ldr	r0, [pc, #24]	; 20ffc <g_strcmp0@plt+0xb17c>
   20fe0:	bl	151f0 <g_log@plt>
   20fe4:	b	20f78 <g_strcmp0@plt+0xb0f8>
   20fe8:	andeq	r1, r4, r8, ror #17
   20fec:	stclgt	12, cr12, [ip], {205}	; 0xcd
   20ff0:	andeq	pc, r2, r8, lsr #4
   20ff4:	strdeq	pc, [r2], -r8
   20ff8:			; <UNDEFINED> instruction: 0x0002efbc
   20ffc:	andeq	r8, r2, ip, lsl #29
   21000:	andeq	pc, r2, r8, lsl r2	; <UNPREDICTABLE>
   21004:	push	{r4, r5, r6, lr}
   21008:	mov	r5, r0
   2100c:	mov	r4, r1
   21010:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21014:	cmp	r5, #0
   21018:	beq	21098 <g_strcmp0@plt+0xb218>
   2101c:	ldr	r3, [r5]
   21020:	cmp	r3, #0
   21024:	beq	21034 <g_strcmp0@plt+0xb1b4>
   21028:	ldr	r3, [r3]
   2102c:	cmp	r3, r0
   21030:	beq	21048 <g_strcmp0@plt+0xb1c8>
   21034:	mov	r1, r0
   21038:	mov	r0, r5
   2103c:	bl	159dc <g_type_check_instance_is_a@plt>
   21040:	cmp	r0, #0
   21044:	beq	21098 <g_strcmp0@plt+0xb218>
   21048:	cmp	r4, #0
   2104c:	beq	210b0 <g_strcmp0@plt+0xb230>
   21050:	ldr	r2, [pc, #112]	; 210c8 <g_strcmp0@plt+0xb248>
   21054:	mov	r3, r4
   21058:	mov	r1, #128	; 0x80
   2105c:	ldr	r0, [pc, #104]	; 210cc <g_strcmp0@plt+0xb24c>
   21060:	bl	151f0 <g_log@plt>
   21064:	ldr	r3, [r5, #12]
   21068:	ldr	r1, [pc, #96]	; 210d0 <g_strcmp0@plt+0xb250>
   2106c:	ldr	r0, [r3]
   21070:	bl	15418 <gtk_builder_get_object@plt>
   21074:	mov	r5, r0
   21078:	bl	15e38 <gtk_window_get_type@plt>
   2107c:	mov	r1, r0
   21080:	mov	r0, r5
   21084:	bl	15148 <g_type_check_instance_cast@plt>
   21088:	mov	r1, r4
   2108c:	bl	152bc <gtk_window_set_icon_name@plt>
   21090:	mov	r0, #1
   21094:	pop	{r4, r5, r6, pc}
   21098:	ldr	r2, [pc, #52]	; 210d4 <g_strcmp0@plt+0xb254>
   2109c:	ldr	r1, [pc, #52]	; 210d8 <g_strcmp0@plt+0xb258>
   210a0:	ldr	r0, [pc, #36]	; 210cc <g_strcmp0@plt+0xb24c>
   210a4:	bl	14fd4 <g_return_if_fail_warning@plt>
   210a8:	mov	r0, #0
   210ac:	pop	{r4, r5, r6, pc}
   210b0:	ldr	r2, [pc, #36]	; 210dc <g_strcmp0@plt+0xb25c>
   210b4:	ldr	r1, [pc, #28]	; 210d8 <g_strcmp0@plt+0xb258>
   210b8:	ldr	r0, [pc, #12]	; 210cc <g_strcmp0@plt+0xb24c>
   210bc:	bl	14fd4 <g_return_if_fail_warning@plt>
   210c0:	mov	r0, r4
   210c4:	pop	{r4, r5, r6, pc}
   210c8:	andeq	pc, r2, ip, asr #4
   210cc:	andeq	r8, r2, ip, lsl #29
   210d0:	andeq	pc, r2, r4, ror #4
   210d4:	strdeq	pc, [r2], -r8
   210d8:	ldrdeq	lr, [r2], -ip
   210dc:	andeq	pc, r2, ip, lsr r2	; <UNPREDICTABLE>
   210e0:	push	{r4, r5, r6, r7, r8, lr}
   210e4:	mov	r5, r0
   210e8:	mov	r4, r1
   210ec:	bl	20ec0 <g_strcmp0@plt+0xb040>
   210f0:	cmp	r5, #0
   210f4:	beq	211b4 <g_strcmp0@plt+0xb334>
   210f8:	ldr	r3, [r5]
   210fc:	cmp	r3, #0
   21100:	beq	21110 <g_strcmp0@plt+0xb290>
   21104:	ldr	r3, [r3]
   21108:	cmp	r3, r0
   2110c:	beq	21124 <g_strcmp0@plt+0xb2a4>
   21110:	mov	r1, r0
   21114:	mov	r0, r5
   21118:	bl	159dc <g_type_check_instance_is_a@plt>
   2111c:	cmp	r0, #0
   21120:	beq	211b4 <g_strcmp0@plt+0xb334>
   21124:	cmp	r4, #0
   21128:	beq	211cc <g_strcmp0@plt+0xb34c>
   2112c:	ldr	r3, [r5, #12]
   21130:	ldr	r6, [r3, #12]
   21134:	cmp	r6, #0
   21138:	beq	211e4 <g_strcmp0@plt+0xb364>
   2113c:	ldr	r0, [r3, #28]
   21140:	bl	15874 <g_free@plt>
   21144:	mov	r0, r4
   21148:	ldr	r6, [r5, #12]
   2114c:	bl	153a0 <g_strdup@plt>
   21150:	mov	r1, r4
   21154:	str	r0, [r6, #28]
   21158:	ldr	r0, [pc, #200]	; 21228 <g_strcmp0@plt+0xb3a8>
   2115c:	bl	15490 <g_strdup_printf@plt>
   21160:	ldr	r2, [pc, #196]	; 2122c <g_strcmp0@plt+0xb3ac>
   21164:	mov	r1, #128	; 0x80
   21168:	mov	r4, r0
   2116c:	mov	r3, r0
   21170:	ldr	r0, [pc, #184]	; 21230 <g_strcmp0@plt+0xb3b0>
   21174:	bl	151f0 <g_log@plt>
   21178:	ldr	r3, [r5, #12]
   2117c:	ldr	r1, [pc, #176]	; 21234 <g_strcmp0@plt+0xb3b4>
   21180:	ldr	r0, [r3]
   21184:	bl	15418 <gtk_builder_get_object@plt>
   21188:	mov	r5, r0
   2118c:	bl	150b8 <gtk_label_get_type@plt>
   21190:	mov	r1, r0
   21194:	mov	r0, r5
   21198:	bl	15148 <g_type_check_instance_cast@plt>
   2119c:	mov	r1, r4
   211a0:	bl	15d3c <gtk_label_set_markup@plt>
   211a4:	mov	r0, r4
   211a8:	bl	15874 <g_free@plt>
   211ac:	mov	r0, #1
   211b0:	pop	{r4, r5, r6, r7, r8, pc}
   211b4:	ldr	r2, [pc, #124]	; 21238 <g_strcmp0@plt+0xb3b8>
   211b8:	ldr	r1, [pc, #124]	; 2123c <g_strcmp0@plt+0xb3bc>
   211bc:	ldr	r0, [pc, #108]	; 21230 <g_strcmp0@plt+0xb3b0>
   211c0:	bl	14fd4 <g_return_if_fail_warning@plt>
   211c4:	mov	r0, #0
   211c8:	pop	{r4, r5, r6, r7, r8, pc}
   211cc:	ldr	r2, [pc, #108]	; 21240 <g_strcmp0@plt+0xb3c0>
   211d0:	ldr	r1, [pc, #100]	; 2123c <g_strcmp0@plt+0xb3bc>
   211d4:	ldr	r0, [pc, #84]	; 21230 <g_strcmp0@plt+0xb3b0>
   211d8:	bl	14fd4 <g_return_if_fail_warning@plt>
   211dc:	mov	r0, r4
   211e0:	pop	{r4, r5, r6, r7, r8, pc}
   211e4:	ldr	r0, [r3]
   211e8:	ldr	r1, [pc, #84]	; 21244 <g_strcmp0@plt+0xb3c4>
   211ec:	bl	15418 <gtk_builder_get_object@plt>
   211f0:	mov	r7, r0
   211f4:	bl	150f4 <gtk_widget_get_type@plt>
   211f8:	mov	r1, r0
   211fc:	mov	r0, r7
   21200:	bl	15148 <g_type_check_instance_cast@plt>
   21204:	mov	r7, r0
   21208:	bl	15e38 <gtk_window_get_type@plt>
   2120c:	mov	r1, r0
   21210:	mov	r0, r7
   21214:	bl	15148 <g_type_check_instance_cast@plt>
   21218:	mov	r1, r6
   2121c:	bl	15cac <gtk_window_set_modal@plt>
   21220:	ldr	r3, [r5, #12]
   21224:	b	2113c <g_strcmp0@plt+0xb2bc>
   21228:	andeq	pc, r2, r4, lsl #5
   2122c:	muleq	r2, ip, r2
   21230:	andeq	r8, r2, ip, lsl #29
   21234:			; <UNDEFINED> instruction: 0x0002f2b0
   21238:	strdeq	pc, [r2], -r8
   2123c:	andeq	pc, r2, r0
   21240:	andeq	pc, r2, r4, ror r2	; <UNPREDICTABLE>
   21244:	andeq	pc, r2, r4, ror #4
   21248:	push	{r4, r5, r6, lr}
   2124c:	mov	r4, r0
   21250:	mov	r5, r1
   21254:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21258:	cmp	r4, #0
   2125c:	beq	21314 <g_strcmp0@plt+0xb494>
   21260:	ldr	r3, [r4]
   21264:	cmp	r3, #0
   21268:	beq	21278 <g_strcmp0@plt+0xb3f8>
   2126c:	ldr	r3, [r3]
   21270:	cmp	r3, r0
   21274:	beq	2128c <g_strcmp0@plt+0xb40c>
   21278:	mov	r1, r0
   2127c:	mov	r0, r4
   21280:	bl	159dc <g_type_check_instance_is_a@plt>
   21284:	cmp	r0, #0
   21288:	beq	21314 <g_strcmp0@plt+0xb494>
   2128c:	cmp	r5, #0
   21290:	beq	2132c <g_strcmp0@plt+0xb4ac>
   21294:	bl	15a3c <gdk_window_get_type@plt>
   21298:	mov	r1, r0
   2129c:	mov	r0, r5
   212a0:	bl	15148 <g_type_check_instance_cast@plt>
   212a4:	subs	r6, r0, #0
   212a8:	beq	213b8 <g_strcmp0@plt+0xb538>
   212ac:	ldr	r3, [r4, #12]
   212b0:	ldr	r1, [pc, #280]	; 213d0 <g_strcmp0@plt+0xb550>
   212b4:	ldr	r0, [r3]
   212b8:	bl	15418 <gtk_builder_get_object@plt>
   212bc:	mov	r6, r0
   212c0:	bl	150f4 <gtk_widget_get_type@plt>
   212c4:	mov	r1, r0
   212c8:	mov	r0, r6
   212cc:	bl	15148 <g_type_check_instance_cast@plt>
   212d0:	mov	r6, r0
   212d4:	bl	151e4 <gtk_widget_realize@plt>
   212d8:	bl	15e38 <gtk_window_get_type@plt>
   212dc:	mov	r1, r0
   212e0:	mov	r0, r6
   212e4:	bl	15148 <g_type_check_instance_cast@plt>
   212e8:	mov	r1, #1
   212ec:	bl	15cac <gtk_window_set_modal@plt>
   212f0:	mov	r0, r6
   212f4:	bl	15190 <gtk_widget_get_window@plt>
   212f8:	mov	r1, r5
   212fc:	bl	156f4 <gdk_window_set_transient_for@plt>
   21300:	ldr	r2, [r4, #12]
   21304:	mov	r3, #1
   21308:	mov	r0, r3
   2130c:	str	r3, [r2, #12]
   21310:	pop	{r4, r5, r6, pc}
   21314:	ldr	r2, [pc, #184]	; 213d4 <g_strcmp0@plt+0xb554>
   21318:	ldr	r1, [pc, #184]	; 213d8 <g_strcmp0@plt+0xb558>
   2131c:	ldr	r0, [pc, #184]	; 213dc <g_strcmp0@plt+0xb55c>
   21320:	bl	14fd4 <g_return_if_fail_warning@plt>
   21324:	mov	r0, #0
   21328:	pop	{r4, r5, r6, pc}
   2132c:	ldr	r3, [r4, #12]
   21330:	ldr	r3, [r3, #12]
   21334:	cmp	r3, #0
   21338:	beq	213b0 <g_strcmp0@plt+0xb530>
   2133c:	ldr	r2, [pc, #156]	; 213e0 <g_strcmp0@plt+0xb560>
   21340:	mov	r1, #16
   21344:	ldr	r0, [pc, #144]	; 213dc <g_strcmp0@plt+0xb55c>
   21348:	bl	151f0 <g_log@plt>
   2134c:	ldr	r3, [r4, #12]
   21350:	ldr	r1, [pc, #120]	; 213d0 <g_strcmp0@plt+0xb550>
   21354:	ldr	r0, [r3]
   21358:	bl	15418 <gtk_builder_get_object@plt>
   2135c:	mov	r6, r0
   21360:	bl	150f4 <gtk_widget_get_type@plt>
   21364:	mov	r1, r0
   21368:	mov	r0, r6
   2136c:	bl	15148 <g_type_check_instance_cast@plt>
   21370:	mov	r6, r0
   21374:	bl	15e38 <gtk_window_get_type@plt>
   21378:	mov	r1, r0
   2137c:	mov	r0, r6
   21380:	bl	15148 <g_type_check_instance_cast@plt>
   21384:	mov	r1, r5
   21388:	bl	15cac <gtk_window_set_modal@plt>
   2138c:	ldr	r3, [r4, #12]
   21390:	ldr	r1, [r3, #28]
   21394:	str	r5, [r3, #12]
   21398:	cmp	r1, #0
   2139c:	beq	21324 <g_strcmp0@plt+0xb4a4>
   213a0:	mov	r0, r4
   213a4:	bl	210e0 <g_strcmp0@plt+0xb260>
   213a8:	mov	r0, r5
   213ac:	pop	{r4, r5, r6, pc}
   213b0:	mov	r0, #1
   213b4:	pop	{r4, r5, r6, pc}
   213b8:	ldr	r2, [pc, #36]	; 213e4 <g_strcmp0@plt+0xb564>
   213bc:	mov	r1, #16
   213c0:	ldr	r0, [pc, #20]	; 213dc <g_strcmp0@plt+0xb55c>
   213c4:	bl	151f0 <g_log@plt>
   213c8:	mov	r0, r6
   213cc:	pop	{r4, r5, r6, pc}
   213d0:	andeq	pc, r2, r4, ror #4
   213d4:	strdeq	pc, [r2], -r8
   213d8:	andeq	pc, r2, ip, lsl r0	; <UNPREDICTABLE>
   213dc:	andeq	r8, r2, ip, lsl #29
   213e0:			; <UNDEFINED> instruction: 0x0002f2bc
   213e4:	andeq	pc, r2, r8, lsl #6
   213e8:	push	{r4, r5, r6, lr}
   213ec:	mov	r4, r0
   213f0:	mov	r5, r1
   213f4:	bl	20ec0 <g_strcmp0@plt+0xb040>
   213f8:	cmp	r4, #0
   213fc:	beq	2148c <g_strcmp0@plt+0xb60c>
   21400:	ldr	r3, [r4]
   21404:	cmp	r3, #0
   21408:	beq	21418 <g_strcmp0@plt+0xb598>
   2140c:	ldr	r3, [r3]
   21410:	cmp	r3, r0
   21414:	beq	2142c <g_strcmp0@plt+0xb5ac>
   21418:	mov	r1, r0
   2141c:	mov	r0, r4
   21420:	bl	159dc <g_type_check_instance_is_a@plt>
   21424:	cmp	r0, #0
   21428:	beq	2148c <g_strcmp0@plt+0xb60c>
   2142c:	cmp	r5, #0
   21430:	beq	214a4 <g_strcmp0@plt+0xb624>
   21434:	ldr	r3, [r4, #12]
   21438:	ldr	r0, [r3, #8]
   2143c:	cmp	r0, #0
   21440:	popeq	{r4, r5, r6, pc}
   21444:	ldr	r2, [pc, #112]	; 214bc <g_strcmp0@plt+0xb63c>
   21448:	mov	r3, r5
   2144c:	mov	r1, #128	; 0x80
   21450:	ldr	r0, [pc, #104]	; 214c0 <g_strcmp0@plt+0xb640>
   21454:	bl	151f0 <g_log@plt>
   21458:	ldr	r3, [r4, #12]
   2145c:	ldr	r1, [pc, #96]	; 214c4 <g_strcmp0@plt+0xb644>
   21460:	ldr	r0, [r3]
   21464:	bl	15418 <gtk_builder_get_object@plt>
   21468:	mov	r4, r0
   2146c:	bl	150b8 <gtk_label_get_type@plt>
   21470:	mov	r1, r0
   21474:	mov	r0, r4
   21478:	bl	15148 <g_type_check_instance_cast@plt>
   2147c:	mov	r1, r5
   21480:	bl	15d3c <gtk_label_set_markup@plt>
   21484:	mov	r0, #1
   21488:	pop	{r4, r5, r6, pc}
   2148c:	ldr	r2, [pc, #52]	; 214c8 <g_strcmp0@plt+0xb648>
   21490:	ldr	r1, [pc, #52]	; 214cc <g_strcmp0@plt+0xb64c>
   21494:	ldr	r0, [pc, #36]	; 214c0 <g_strcmp0@plt+0xb640>
   21498:	bl	14fd4 <g_return_if_fail_warning@plt>
   2149c:	mov	r0, #0
   214a0:	pop	{r4, r5, r6, pc}
   214a4:	ldr	r2, [pc, #36]	; 214d0 <g_strcmp0@plt+0xb650>
   214a8:	ldr	r1, [pc, #28]	; 214cc <g_strcmp0@plt+0xb64c>
   214ac:	ldr	r0, [pc, #12]	; 214c0 <g_strcmp0@plt+0xb640>
   214b0:	bl	14fd4 <g_return_if_fail_warning@plt>
   214b4:	mov	r0, r5
   214b8:	pop	{r4, r5, r6, pc}
   214bc:	andeq	pc, r2, r0, lsr r3	; <UNPREDICTABLE>
   214c0:	andeq	r8, r2, ip, lsl #29
   214c4:	andeq	pc, r2, r4, asr #6
   214c8:	strdeq	pc, [r2], -r8
   214cc:	andeq	pc, r2, r8, lsr r0	; <UNPREDICTABLE>
   214d0:	andeq	pc, r2, r0, lsr #6
   214d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   214d8:	sub	sp, sp, #20
   214dc:	ldr	sl, [pc, #1032]	; 218ec <g_strcmp0@plt+0xba6c>
   214e0:	mov	r5, #0
   214e4:	mov	r4, r0
   214e8:	ldr	r3, [sl]
   214ec:	str	r5, [sp, #8]
   214f0:	str	r3, [sp, #12]
   214f4:	bl	20ec0 <g_strcmp0@plt+0xb040>
   214f8:	mov	r8, #0
   214fc:	mov	r9, #0
   21500:	mov	r7, #5
   21504:	mov	r1, r0
   21508:	mov	r0, r4
   2150c:	bl	155f8 <g_type_instance_get_private@plt>
   21510:	mov	r1, r5
   21514:	mov	fp, r0
   21518:	str	r0, [r4, #12]
   2151c:	mov	r0, r5
   21520:	bl	154fc <g_main_loop_new@plt>
   21524:	ldr	r6, [r4, #12]
   21528:	mov	r3, #64	; 0x40
   2152c:	mvn	lr, #0
   21530:	mov	ip, #1
   21534:	mov	r2, r3
   21538:	mov	r1, r3
   2153c:	str	r0, [fp, #16]
   21540:	str	lr, [r6, #20]
   21544:	str	ip, [r6, #8]
   21548:	strd	r8, [r6, #40]	; 0x28
   2154c:	str	r5, [r6, #4]
   21550:	str	r5, [r6, #12]
   21554:	str	r5, [r6, #32]
   21558:	str	r5, [r6, #28]
   2155c:	str	r7, [r6, #36]	; 0x24
   21560:	mov	r0, #3
   21564:	bl	15814 <gtk_list_store_new@plt>
   21568:	ldr	r8, [r4, #12]
   2156c:	str	r0, [r6, #24]
   21570:	bl	15afc <gtk_builder_new@plt>
   21574:	ldr	r3, [r4, #12]
   21578:	add	r2, sp, #8
   2157c:	ldr	r1, [pc, #876]	; 218f0 <g_strcmp0@plt+0xba70>
   21580:	str	r0, [r8]
   21584:	ldr	r0, [r3]
   21588:	bl	15e08 <gtk_builder_add_from_file@plt>
   2158c:	cmp	r0, r5
   21590:	beq	218c4 <g_strcmp0@plt+0xba44>
   21594:	ldr	r6, [r4, #12]
   21598:	bl	27808 <g_strcmp0@plt+0x11988>
   2159c:	ldr	r3, [r4, #12]
   215a0:	ldr	r1, [pc, #844]	; 218f4 <g_strcmp0@plt+0xba74>
   215a4:	str	r0, [r6, #48]	; 0x30
   215a8:	ldr	r0, [r3]
   215ac:	bl	15418 <gtk_builder_get_object@plt>
   215b0:	mov	r6, r0
   215b4:	bl	15664 <gtk_box_get_type@plt>
   215b8:	mov	r1, r0
   215bc:	mov	r0, r6
   215c0:	bl	15148 <g_type_check_instance_cast@plt>
   215c4:	ldr	r1, [r4, #12]
   215c8:	mov	r2, r5
   215cc:	mov	r3, r5
   215d0:	ldr	r1, [r1, #48]	; 0x30
   215d4:	str	r5, [sp]
   215d8:	bl	15700 <gtk_box_pack_start@plt>
   215dc:	ldr	r3, [r4, #12]
   215e0:	ldr	r0, [r3, #48]	; 0x30
   215e4:	bl	15b50 <gtk_widget_show@plt>
   215e8:	ldr	r3, [r4, #12]
   215ec:	ldr	r1, [pc, #772]	; 218f8 <g_strcmp0@plt+0xba78>
   215f0:	ldr	r0, [r3]
   215f4:	bl	15418 <gtk_builder_get_object@plt>
   215f8:	mov	r6, r0
   215fc:	bl	15808 <gtk_tree_view_get_type@plt>
   21600:	mov	r1, r0
   21604:	mov	r9, r0
   21608:	mov	r0, r6
   2160c:	bl	15148 <g_type_check_instance_cast@plt>
   21610:	mov	r6, r0
   21614:	bl	15610 <gtk_tree_view_column_new@plt>
   21618:	mov	r8, r0
   2161c:	bl	158f8 <gtk_cell_renderer_pixbuf_new@plt>
   21620:	mov	r3, r5
   21624:	mov	r2, r7
   21628:	ldr	r1, [pc, #716]	; 218fc <g_strcmp0@plt+0xba7c>
   2162c:	mov	fp, r0
   21630:	bl	158c8 <g_object_set@plt>
   21634:	mov	r2, r5
   21638:	mov	r0, r8
   2163c:	mov	r1, fp
   21640:	bl	15040 <gtk_tree_view_column_pack_start@plt>
   21644:	mov	r3, r5
   21648:	ldr	r2, [pc, #688]	; 21900 <g_strcmp0@plt+0xba80>
   2164c:	mov	r0, r8
   21650:	mov	r1, fp
   21654:	bl	15c64 <gtk_tree_view_column_add_attribute@plt>
   21658:	mov	r1, r8
   2165c:	mov	r0, r6
   21660:	bl	14f20 <gtk_tree_view_append_column@plt>
   21664:	bl	15574 <gtk_cell_renderer_text_new@plt>
   21668:	mov	r2, r7
   2166c:	ldr	r1, [pc, #656]	; 21904 <g_strcmp0@plt+0xba84>
   21670:	mov	r8, r0
   21674:	mov	r0, r5
   21678:	bl	15880 <dcgettext@plt>
   2167c:	ldr	r2, [pc, #644]	; 21908 <g_strcmp0@plt+0xba88>
   21680:	mov	r3, #2
   21684:	mov	r1, r8
   21688:	str	r5, [sp]
   2168c:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   21690:	mov	r1, #2
   21694:	mov	r7, r0
   21698:	bl	15358 <gtk_tree_view_column_set_sort_column_id@plt>
   2169c:	mov	r1, r7
   216a0:	mov	r0, r6
   216a4:	bl	14f20 <gtk_tree_view_append_column@plt>
   216a8:	mov	r1, r5
   216ac:	mov	r0, r6
   216b0:	bl	15d48 <gtk_tree_view_set_headers_visible@plt>
   216b4:	mov	r0, r6
   216b8:	bl	1594c <gtk_tree_view_get_selection@plt>
   216bc:	mov	r1, r5
   216c0:	mov	r6, r0
   216c4:	bl	152e0 <gtk_tree_selection_set_mode@plt>
   216c8:	mov	r0, r6
   216cc:	bl	15be0 <gtk_tree_selection_unselect_all@plt>
   216d0:	ldr	r3, [r4, #12]
   216d4:	ldr	r1, [pc, #540]	; 218f8 <g_strcmp0@plt+0xba78>
   216d8:	ldr	r0, [r3]
   216dc:	bl	15418 <gtk_builder_get_object@plt>
   216e0:	mov	r1, r9
   216e4:	bl	15148 <g_type_check_instance_cast@plt>
   216e8:	mov	r6, r0
   216ec:	bl	15958 <gtk_tree_model_get_type@plt>
   216f0:	ldr	r3, [r4, #12]
   216f4:	mov	r1, r0
   216f8:	ldr	r0, [r3, #24]
   216fc:	bl	15148 <g_type_check_instance_cast@plt>
   21700:	mov	r1, r0
   21704:	mov	r0, r6
   21708:	bl	15118 <gtk_tree_view_set_model@plt>
   2170c:	ldr	r3, [r4, #12]
   21710:	ldr	r1, [pc, #500]	; 2190c <g_strcmp0@plt+0xba8c>
   21714:	ldr	r0, [r3]
   21718:	bl	15418 <gtk_builder_get_object@plt>
   2171c:	mov	r7, r0
   21720:	bl	150f4 <gtk_widget_get_type@plt>
   21724:	mov	r6, r0
   21728:	mov	r1, r0
   2172c:	mov	r0, r7
   21730:	bl	15148 <g_type_check_instance_cast@plt>
   21734:	ldr	r2, [pc, #468]	; 21910 <g_strcmp0@plt+0xba90>
   21738:	str	r5, [sp, #4]
   2173c:	str	r5, [sp]
   21740:	mov	r3, r4
   21744:	ldr	r1, [pc, #456]	; 21914 <g_strcmp0@plt+0xba94>
   21748:	bl	15670 <g_signal_connect_data@plt>
   2174c:	ldr	r3, [r4, #12]
   21750:	ldr	r1, [pc, #448]	; 21918 <g_strcmp0@plt+0xba98>
   21754:	ldr	r0, [r3]
   21758:	bl	15418 <gtk_builder_get_object@plt>
   2175c:	mov	r1, r6
   21760:	bl	15148 <g_type_check_instance_cast@plt>
   21764:	ldr	r2, [pc, #432]	; 2191c <g_strcmp0@plt+0xba9c>
   21768:	str	r5, [sp, #4]
   2176c:	str	r5, [sp]
   21770:	mov	r3, r4
   21774:	ldr	r1, [pc, #420]	; 21920 <g_strcmp0@plt+0xbaa0>
   21778:	bl	15670 <g_signal_connect_data@plt>
   2177c:	ldr	r3, [r4, #12]
   21780:	ldr	r1, [pc, #412]	; 21924 <g_strcmp0@plt+0xbaa4>
   21784:	ldr	r0, [r3]
   21788:	bl	15418 <gtk_builder_get_object@plt>
   2178c:	mov	r1, r6
   21790:	bl	15148 <g_type_check_instance_cast@plt>
   21794:	ldr	r2, [pc, #396]	; 21928 <g_strcmp0@plt+0xbaa8>
   21798:	str	r5, [sp, #4]
   2179c:	str	r5, [sp]
   217a0:	mov	r3, r4
   217a4:	ldr	r1, [pc, #372]	; 21920 <g_strcmp0@plt+0xbaa0>
   217a8:	bl	15670 <g_signal_connect_data@plt>
   217ac:	ldr	r3, [r4, #12]
   217b0:	ldr	r1, [pc, #372]	; 2192c <g_strcmp0@plt+0xbaac>
   217b4:	ldr	r0, [r3]
   217b8:	bl	15418 <gtk_builder_get_object@plt>
   217bc:	mov	r1, r6
   217c0:	bl	15148 <g_type_check_instance_cast@plt>
   217c4:	ldr	r2, [pc, #356]	; 21930 <g_strcmp0@plt+0xbab0>
   217c8:	str	r5, [sp, #4]
   217cc:	str	r5, [sp]
   217d0:	mov	r3, r4
   217d4:	ldr	r1, [pc, #324]	; 21920 <g_strcmp0@plt+0xbaa0>
   217d8:	bl	15670 <g_signal_connect_data@plt>
   217dc:	ldr	r3, [r4, #12]
   217e0:	ldr	r1, [pc, #332]	; 21934 <g_strcmp0@plt+0xbab4>
   217e4:	ldr	r0, [r3]
   217e8:	bl	15418 <gtk_builder_get_object@plt>
   217ec:	mov	r1, r6
   217f0:	bl	15148 <g_type_check_instance_cast@plt>
   217f4:	mov	r5, r0
   217f8:	bl	150b8 <gtk_label_get_type@plt>
   217fc:	mov	r1, r0
   21800:	mov	r0, r5
   21804:	bl	15148 <g_type_check_instance_cast@plt>
   21808:	mov	r1, #80	; 0x50
   2180c:	bl	15c04 <gtk_label_set_max_width_chars@plt>
   21810:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21814:	ldr	r3, [r4]
   21818:	cmp	r3, #0
   2181c:	beq	2182c <g_strcmp0@plt+0xb9ac>
   21820:	ldr	r3, [r3]
   21824:	cmp	r3, r0
   21828:	beq	21840 <g_strcmp0@plt+0xb9c0>
   2182c:	mov	r1, r0
   21830:	mov	r0, r4
   21834:	bl	159dc <g_type_check_instance_is_a@plt>
   21838:	cmp	r0, #0
   2183c:	beq	218b0 <g_strcmp0@plt+0xba30>
   21840:	ldr	r2, [pc, #240]	; 21938 <g_strcmp0@plt+0xbab8>
   21844:	ldr	r3, [pc, #240]	; 2193c <g_strcmp0@plt+0xbabc>
   21848:	mov	r1, #128	; 0x80
   2184c:	ldr	r0, [pc, #236]	; 21940 <g_strcmp0@plt+0xbac0>
   21850:	bl	151f0 <g_log@plt>
   21854:	ldr	r3, [r4, #12]
   21858:	ldr	r1, [pc, #172]	; 2190c <g_strcmp0@plt+0xba8c>
   2185c:	ldr	r0, [r3]
   21860:	bl	15418 <gtk_builder_get_object@plt>
   21864:	mov	r5, r0
   21868:	bl	15e38 <gtk_window_get_type@plt>
   2186c:	mov	r1, r0
   21870:	mov	r0, r5
   21874:	bl	15148 <g_type_check_instance_cast@plt>
   21878:	ldr	r1, [pc, #188]	; 2193c <g_strcmp0@plt+0xbabc>
   2187c:	bl	15598 <gtk_window_set_title@plt>
   21880:	ldr	r1, [pc, #180]	; 2193c <g_strcmp0@plt+0xbabc>
   21884:	mov	r0, r4
   21888:	bl	210e0 <g_strcmp0@plt+0xb260>
   2188c:	mov	r0, r4
   21890:	ldr	r1, [pc, #164]	; 2193c <g_strcmp0@plt+0xbabc>
   21894:	bl	213e8 <g_strcmp0@plt+0xb568>
   21898:	ldr	r2, [sp, #12]
   2189c:	ldr	r3, [sl]
   218a0:	cmp	r2, r3
   218a4:	bne	218e8 <g_strcmp0@plt+0xba68>
   218a8:	add	sp, sp, #20
   218ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   218b0:	ldr	r2, [pc, #140]	; 21944 <g_strcmp0@plt+0xbac4>
   218b4:	ldr	r1, [pc, #140]	; 21948 <g_strcmp0@plt+0xbac8>
   218b8:	ldr	r0, [pc, #128]	; 21940 <g_strcmp0@plt+0xbac0>
   218bc:	bl	14fd4 <g_return_if_fail_warning@plt>
   218c0:	b	21880 <g_strcmp0@plt+0xba00>
   218c4:	ldr	r3, [sp, #8]
   218c8:	ldr	r2, [pc, #124]	; 2194c <g_strcmp0@plt+0xbacc>
   218cc:	mov	r1, #16
   218d0:	ldr	r3, [r3, #8]
   218d4:	ldr	r0, [pc, #100]	; 21940 <g_strcmp0@plt+0xbac0>
   218d8:	bl	151f0 <g_log@plt>
   218dc:	ldr	r0, [sp, #8]
   218e0:	bl	15064 <g_error_free@plt>
   218e4:	b	21810 <g_strcmp0@plt+0xb990>
   218e8:	bl	157f0 <__stack_chk_fail@plt>
   218ec:	andeq	r0, r4, r0, asr lr
   218f0:	andeq	pc, r2, r4, asr r3	; <UNPREDICTABLE>
   218f4:	muleq	r2, r4, r3
   218f8:	andeq	pc, r2, r0, lsr #7
   218fc:			; <UNDEFINED> instruction: 0x0002f3b4
   21900:	andeq	pc, r2, r0, asr #7
   21904:	andeq	pc, r2, ip, asr #7
   21908:	ldrdeq	pc, [r2], -r4
   2190c:	andeq	pc, r2, r4, ror #4
   21910:	andeq	r2, r2, ip, lsr #9
   21914:	ldrdeq	pc, [r2], -ip
   21918:	andeq	pc, r2, ip, ror #7
   2191c:	andeq	r0, r2, r8, lsr #28
   21920:	strdeq	pc, [r2], -ip
   21924:	andeq	pc, r2, r4, lsl #8
   21928:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   2192c:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   21930:	andeq	r0, r2, r4, lsl #27
   21934:	andeq	pc, r2, r4, asr #6
   21938:	andeq	pc, r2, r4, lsr #8
   2193c:	muleq	r2, r4, r6
   21940:	andeq	r8, r2, ip, lsl #29
   21944:	strdeq	pc, [r2], -r8
   21948:	andeq	pc, r2, r8, asr r0	; <UNPREDICTABLE>
   2194c:	andeq	pc, r2, ip, ror r3	; <UNPREDICTABLE>
   21950:	push	{r4, r5, r6, lr}
   21954:	mov	r4, r0
   21958:	mov	r5, r1
   2195c:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21960:	cmp	r4, #0
   21964:	beq	219f8 <g_strcmp0@plt+0xbb78>
   21968:	ldr	r3, [r4]
   2196c:	cmp	r3, #0
   21970:	beq	21980 <g_strcmp0@plt+0xbb00>
   21974:	ldr	r3, [r3]
   21978:	cmp	r3, r0
   2197c:	beq	21994 <g_strcmp0@plt+0xbb14>
   21980:	mov	r1, r0
   21984:	mov	r0, r4
   21988:	bl	159dc <g_type_check_instance_is_a@plt>
   2198c:	cmp	r0, #0
   21990:	beq	219f8 <g_strcmp0@plt+0xbb78>
   21994:	ldr	r2, [pc, #128]	; 21a1c <g_strcmp0@plt+0xbb9c>
   21998:	mov	r3, r5
   2199c:	mov	r1, #128	; 0x80
   219a0:	ldr	r0, [pc, #120]	; 21a20 <g_strcmp0@plt+0xbba0>
   219a4:	bl	151f0 <g_log@plt>
   219a8:	ldr	r3, [r4, #12]
   219ac:	ldr	r1, [pc, #112]	; 21a24 <g_strcmp0@plt+0xbba4>
   219b0:	ldr	r0, [r3]
   219b4:	bl	15418 <gtk_builder_get_object@plt>
   219b8:	mov	r4, r0
   219bc:	bl	150f4 <gtk_widget_get_type@plt>
   219c0:	mov	r1, r0
   219c4:	mov	r0, r4
   219c8:	bl	15148 <g_type_check_instance_cast@plt>
   219cc:	cmp	r5, #0
   219d0:	mov	r4, r0
   219d4:	beq	21a10 <g_strcmp0@plt+0xbb90>
   219d8:	bl	15de4 <gtk_button_get_type@plt>
   219dc:	mov	r1, r0
   219e0:	mov	r0, r4
   219e4:	bl	15148 <g_type_check_instance_cast@plt>
   219e8:	mov	r1, r5
   219ec:	bl	15bbc <gtk_button_set_label@plt>
   219f0:	mov	r0, #1
   219f4:	pop	{r4, r5, r6, pc}
   219f8:	ldr	r2, [pc, #40]	; 21a28 <g_strcmp0@plt+0xbba8>
   219fc:	ldr	r1, [pc, #40]	; 21a2c <g_strcmp0@plt+0xbbac>
   21a00:	ldr	r0, [pc, #24]	; 21a20 <g_strcmp0@plt+0xbba0>
   21a04:	bl	14fd4 <g_return_if_fail_warning@plt>
   21a08:	mov	r0, #0
   21a0c:	pop	{r4, r5, r6, pc}
   21a10:	bl	1519c <gtk_widget_hide@plt>
   21a14:	mov	r0, #1
   21a18:	pop	{r4, r5, r6, pc}
   21a1c:	andeq	pc, r2, r0, asr #8
   21a20:	andeq	r8, r2, ip, lsl #29
   21a24:	andeq	pc, r2, r4, lsl #8
   21a28:	strdeq	pc, [r2], -r8
   21a2c:	andeq	pc, r2, ip, ror r0	; <UNPREDICTABLE>
   21a30:	push	{r4, r5, r6, r7, r8, lr}
   21a34:	mov	r4, r0
   21a38:	mov	r8, r1
   21a3c:	mov	r6, r2
   21a40:	mov	r7, r3
   21a44:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21a48:	cmp	r4, #0
   21a4c:	beq	21acc <g_strcmp0@plt+0xbc4c>
   21a50:	ldr	r3, [r4]
   21a54:	cmp	r3, #0
   21a58:	beq	21a68 <g_strcmp0@plt+0xbbe8>
   21a5c:	ldr	r3, [r3]
   21a60:	cmp	r3, r0
   21a64:	beq	21a7c <g_strcmp0@plt+0xbbfc>
   21a68:	mov	r1, r0
   21a6c:	mov	r0, r4
   21a70:	bl	159dc <g_type_check_instance_is_a@plt>
   21a74:	cmp	r0, #0
   21a78:	beq	21acc <g_strcmp0@plt+0xbc4c>
   21a7c:	ldr	r3, [r4, #12]
   21a80:	mov	r5, #0
   21a84:	ldr	r1, [pc, #88]	; 21ae4 <g_strcmp0@plt+0xbc64>
   21a88:	strd	r6, [r3, #40]	; 0x28
   21a8c:	str	r8, [r3, #36]	; 0x24
   21a90:	str	r5, [r3, #32]
   21a94:	ldr	r0, [r3]
   21a98:	bl	15418 <gtk_builder_get_object@plt>
   21a9c:	mov	r6, r0
   21aa0:	bl	150b8 <gtk_label_get_type@plt>
   21aa4:	mov	r1, r0
   21aa8:	mov	r0, r6
   21aac:	bl	15148 <g_type_check_instance_cast@plt>
   21ab0:	ldr	r1, [pc, #48]	; 21ae8 <g_strcmp0@plt+0xbc68>
   21ab4:	bl	150c4 <gtk_label_set_label@plt>
   21ab8:	mov	r1, r5
   21abc:	mov	r0, r4
   21ac0:	bl	21950 <g_strcmp0@plt+0xbad0>
   21ac4:	mov	r0, #1
   21ac8:	pop	{r4, r5, r6, r7, r8, pc}
   21acc:	ldr	r2, [pc, #24]	; 21aec <g_strcmp0@plt+0xbc6c>
   21ad0:	ldr	r1, [pc, #24]	; 21af0 <g_strcmp0@plt+0xbc70>
   21ad4:	ldr	r0, [pc, #24]	; 21af4 <g_strcmp0@plt+0xbc74>
   21ad8:	bl	14fd4 <g_return_if_fail_warning@plt>
   21adc:	mov	r0, #0
   21ae0:	pop	{r4, r5, r6, r7, r8, pc}
   21ae4:	andeq	pc, r2, r4, asr #6
   21ae8:	muleq	r2, r4, r6
   21aec:	strdeq	pc, [r2], -r8
   21af0:	muleq	r2, r8, r0
   21af4:	andeq	r8, r2, ip, lsl #29
   21af8:	push	{r4, r5, r6, r7, r8, lr}
   21afc:	mov	r4, r0
   21b00:	mov	r5, r1
   21b04:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21b08:	cmp	r4, #0
   21b0c:	beq	21bc0 <g_strcmp0@plt+0xbd40>
   21b10:	ldr	r3, [r4]
   21b14:	cmp	r3, #0
   21b18:	beq	21b28 <g_strcmp0@plt+0xbca8>
   21b1c:	ldr	r3, [r3]
   21b20:	cmp	r3, r0
   21b24:	beq	21b3c <g_strcmp0@plt+0xbcbc>
   21b28:	mov	r1, r0
   21b2c:	mov	r0, r4
   21b30:	bl	159dc <g_type_check_instance_is_a@plt>
   21b34:	cmp	r0, #0
   21b38:	beq	21bc0 <g_strcmp0@plt+0xbd40>
   21b3c:	cmp	r5, #100	; 0x64
   21b40:	bgt	21bd8 <g_strcmp0@plt+0xbd58>
   21b44:	ldr	r2, [pc, #284]	; 21c68 <g_strcmp0@plt+0xbde8>
   21b48:	mov	r3, r5
   21b4c:	mov	r1, #128	; 0x80
   21b50:	ldr	r0, [pc, #276]	; 21c6c <g_strcmp0@plt+0xbdec>
   21b54:	bl	151f0 <g_log@plt>
   21b58:	ldr	r3, [r4, #12]
   21b5c:	ldr	r1, [pc, #268]	; 21c70 <g_strcmp0@plt+0xbdf0>
   21b60:	ldr	r0, [r3]
   21b64:	bl	15418 <gtk_builder_get_object@plt>
   21b68:	mov	r7, r0
   21b6c:	bl	15724 <gtk_progress_bar_get_type@plt>
   21b70:	mov	r1, r0
   21b74:	mov	r6, r0
   21b78:	mov	r0, r7
   21b7c:	bl	15148 <g_type_check_instance_cast@plt>
   21b80:	ldr	r3, [r4, #12]
   21b84:	mov	r7, r0
   21b88:	ldr	r0, [r3, #4]
   21b8c:	cmp	r0, #0
   21b90:	bne	21bf0 <g_strcmp0@plt+0xbd70>
   21b94:	cmp	r5, #0
   21b98:	blt	21c08 <g_strcmp0@plt+0xbd88>
   21b9c:	vmov	s15, r5
   21ba0:	vldr	d0, [pc, #176]	; 21c58 <g_strcmp0@plt+0xbdd8>
   21ba4:	mov	r0, r7
   21ba8:	vcvt.f32.s32	s14, s15
   21bac:	vcvt.f64.f32	d7, s14
   21bb0:	vdiv.f64	d0, d7, d0
   21bb4:	bl	15460 <gtk_progress_bar_set_fraction@plt>
   21bb8:	mov	r0, #1
   21bbc:	pop	{r4, r5, r6, r7, r8, pc}
   21bc0:	ldr	r2, [pc, #172]	; 21c74 <g_strcmp0@plt+0xbdf4>
   21bc4:	ldr	r1, [pc, #172]	; 21c78 <g_strcmp0@plt+0xbdf8>
   21bc8:	ldr	r0, [pc, #156]	; 21c6c <g_strcmp0@plt+0xbdec>
   21bcc:	bl	14fd4 <g_return_if_fail_warning@plt>
   21bd0:	mov	r0, #0
   21bd4:	pop	{r4, r5, r6, r7, r8, pc}
   21bd8:	ldr	r2, [pc, #156]	; 21c7c <g_strcmp0@plt+0xbdfc>
   21bdc:	ldr	r1, [pc, #148]	; 21c78 <g_strcmp0@plt+0xbdf8>
   21be0:	ldr	r0, [pc, #132]	; 21c6c <g_strcmp0@plt+0xbdec>
   21be4:	bl	14fd4 <g_return_if_fail_warning@plt>
   21be8:	mov	r0, #0
   21bec:	pop	{r4, r5, r6, r7, r8, pc}
   21bf0:	bl	15e5c <g_source_remove@plt>
   21bf4:	ldr	r3, [r4, #12]
   21bf8:	mov	r2, #0
   21bfc:	cmp	r5, #0
   21c00:	str	r2, [r3, #4]
   21c04:	bge	21b9c <g_strcmp0@plt+0xbd1c>
   21c08:	ldr	r0, [r3]
   21c0c:	ldr	r1, [pc, #92]	; 21c70 <g_strcmp0@plt+0xbdf0>
   21c10:	bl	15418 <gtk_builder_get_object@plt>
   21c14:	mov	r1, r6
   21c18:	bl	15148 <g_type_check_instance_cast@plt>
   21c1c:	vldr	d0, [pc, #60]	; 21c60 <g_strcmp0@plt+0xbde0>
   21c20:	bl	151fc <gtk_progress_bar_set_pulse_step@plt>
   21c24:	mov	r2, r4
   21c28:	ldr	r1, [pc, #80]	; 21c80 <g_strcmp0@plt+0xbe00>
   21c2c:	mov	r0, #75	; 0x4b
   21c30:	ldr	r5, [r4, #12]
   21c34:	bl	15034 <g_timeout_add@plt>
   21c38:	ldr	r3, [r4, #12]
   21c3c:	ldr	r1, [pc, #64]	; 21c84 <g_strcmp0@plt+0xbe04>
   21c40:	str	r0, [r5, #4]
   21c44:	ldr	r0, [r3, #4]
   21c48:	bl	15c1c <g_source_set_name_by_id@plt>
   21c4c:	mov	r0, #1
   21c50:	pop	{r4, r5, r6, r7, r8, pc}
   21c54:	nop			; (mov r0, r0)
   21c58:	andeq	r0, r0, r0
   21c5c:	subsmi	r0, r9, r0
   21c60:			; <UNDEFINED> instruction: 0x47ae147b
   21c64:	svccc	0x00a47ae1
   21c68:	andeq	pc, r2, r8, ror #8
   21c6c:	andeq	r8, r2, ip, lsl #29
   21c70:	andeq	pc, r2, r8, lsr #4
   21c74:	strdeq	pc, [r2], -r8
   21c78:	strheq	pc, [r2], -r0	; <UNPREDICTABLE>
   21c7c:	andeq	pc, r2, r4, asr r4	; <UNPREDICTABLE>
   21c80:	andeq	r0, r2, r0, lsl pc
   21c84:	andeq	pc, r2, r0, lsl #9
   21c88:	push	{r4, r5, r6, lr}
   21c8c:	mov	r5, r0
   21c90:	mov	r4, r1
   21c94:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21c98:	cmp	r5, #0
   21c9c:	beq	21d60 <g_strcmp0@plt+0xbee0>
   21ca0:	ldr	r3, [r5]
   21ca4:	cmp	r3, #0
   21ca8:	beq	21cb8 <g_strcmp0@plt+0xbe38>
   21cac:	ldr	r3, [r3]
   21cb0:	cmp	r3, r0
   21cb4:	beq	21ccc <g_strcmp0@plt+0xbe4c>
   21cb8:	mov	r1, r0
   21cbc:	mov	r0, r5
   21cc0:	bl	159dc <g_type_check_instance_is_a@plt>
   21cc4:	cmp	r0, #0
   21cc8:	beq	21d60 <g_strcmp0@plt+0xbee0>
   21ccc:	ldr	r2, [pc, #188]	; 21d90 <g_strcmp0@plt+0xbf10>
   21cd0:	mov	r3, r4
   21cd4:	mov	r1, #128	; 0x80
   21cd8:	ldr	r0, [pc, #180]	; 21d94 <g_strcmp0@plt+0xbf14>
   21cdc:	bl	151f0 <g_log@plt>
   21ce0:	ldr	r3, [r5, #12]
   21ce4:	ldr	r1, [pc, #172]	; 21d98 <g_strcmp0@plt+0xbf18>
   21ce8:	ldr	r0, [r3]
   21cec:	bl	15418 <gtk_builder_get_object@plt>
   21cf0:	mov	r6, r0
   21cf4:	bl	15724 <gtk_progress_bar_get_type@plt>
   21cf8:	mov	r1, r0
   21cfc:	mov	r5, r0
   21d00:	mov	r0, r6
   21d04:	bl	15148 <g_type_check_instance_cast@plt>
   21d08:	cmp	r4, #0
   21d0c:	mov	r6, r0
   21d10:	beq	21d78 <g_strcmp0@plt+0xbef8>
   21d14:	mov	r0, r4
   21d18:	bl	24c88 <g_strcmp0@plt+0xee08>
   21d1c:	mov	r2, #5
   21d20:	ldr	r1, [pc, #116]	; 21d9c <g_strcmp0@plt+0xbf1c>
   21d24:	mov	r5, r0
   21d28:	mov	r0, #0
   21d2c:	bl	15880 <dcgettext@plt>
   21d30:	mov	r1, r5
   21d34:	bl	15490 <g_strdup_printf@plt>
   21d38:	mov	r4, r0
   21d3c:	mov	r1, r0
   21d40:	mov	r0, r6
   21d44:	bl	15e74 <gtk_progress_bar_set_text@plt>
   21d48:	mov	r0, r5
   21d4c:	bl	15874 <g_free@plt>
   21d50:	mov	r0, r4
   21d54:	bl	15874 <g_free@plt>
   21d58:	mov	r0, #1
   21d5c:	pop	{r4, r5, r6, pc}
   21d60:	ldr	r2, [pc, #56]	; 21da0 <g_strcmp0@plt+0xbf20>
   21d64:	ldr	r1, [pc, #56]	; 21da4 <g_strcmp0@plt+0xbf24>
   21d68:	ldr	r0, [pc, #36]	; 21d94 <g_strcmp0@plt+0xbf14>
   21d6c:	bl	14fd4 <g_return_if_fail_warning@plt>
   21d70:	mov	r0, #0
   21d74:	pop	{r4, r5, r6, pc}
   21d78:	mov	r1, r5
   21d7c:	bl	15148 <g_type_check_instance_cast@plt>
   21d80:	ldr	r1, [pc, #32]	; 21da8 <g_strcmp0@plt+0xbf28>
   21d84:	bl	15e74 <gtk_progress_bar_set_text@plt>
   21d88:	mov	r5, r4
   21d8c:	b	21d48 <g_strcmp0@plt+0xbec8>
   21d90:	muleq	r2, r8, r4
   21d94:	andeq	r8, r2, ip, lsl #29
   21d98:	andeq	pc, r2, r8, lsr #4
   21d9c:			; <UNDEFINED> instruction: 0x0002f4b0
   21da0:	strdeq	pc, [r2], -r8
   21da4:	ldrdeq	pc, [r2], -r0
   21da8:	muleq	r2, r4, r6
   21dac:	push	{r4, r5, r6, r7, r8, lr}
   21db0:	mov	r4, r0
   21db4:	mov	r6, r1
   21db8:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21dbc:	cmp	r4, #0
   21dc0:	beq	21e60 <g_strcmp0@plt+0xbfe0>
   21dc4:	ldr	r3, [r4]
   21dc8:	cmp	r3, #0
   21dcc:	beq	21ddc <g_strcmp0@plt+0xbf5c>
   21dd0:	ldr	r3, [r3]
   21dd4:	cmp	r3, r0
   21dd8:	beq	21df0 <g_strcmp0@plt+0xbf70>
   21ddc:	mov	r1, r0
   21de0:	mov	r0, r4
   21de4:	bl	159dc <g_type_check_instance_is_a@plt>
   21de8:	cmp	r0, #0
   21dec:	beq	21e60 <g_strcmp0@plt+0xbfe0>
   21df0:	cmp	r6, #0
   21df4:	beq	21e78 <g_strcmp0@plt+0xbff8>
   21df8:	ldr	r2, [r4, #12]
   21dfc:	mov	r5, #1
   21e00:	mov	r3, r6
   21e04:	str	r5, [r2, #32]
   21e08:	mov	r1, #128	; 0x80
   21e0c:	ldr	r2, [pc, #124]	; 21e90 <g_strcmp0@plt+0xc010>
   21e10:	ldr	r0, [pc, #124]	; 21e94 <g_strcmp0@plt+0xc014>
   21e14:	bl	151f0 <g_log@plt>
   21e18:	ldr	r3, [r4, #12]
   21e1c:	ldr	r7, [r3, #48]	; 0x30
   21e20:	bl	26fa4 <g_strcmp0@plt+0x11124>
   21e24:	mov	r1, r0
   21e28:	mov	r0, r7
   21e2c:	bl	15148 <g_type_check_instance_cast@plt>
   21e30:	mov	r1, #0
   21e34:	bl	272c0 <g_strcmp0@plt+0x11440>
   21e38:	bl	1576c <gtk_image_get_type@plt>
   21e3c:	ldr	r3, [r4, #12]
   21e40:	mov	r1, r0
   21e44:	ldr	r0, [r3, #48]	; 0x30
   21e48:	bl	15148 <g_type_check_instance_cast@plt>
   21e4c:	mov	r1, r6
   21e50:	mov	r2, #6
   21e54:	bl	15cf4 <gtk_image_set_from_icon_name@plt>
   21e58:	mov	r0, r5
   21e5c:	pop	{r4, r5, r6, r7, r8, pc}
   21e60:	ldr	r2, [pc, #48]	; 21e98 <g_strcmp0@plt+0xc018>
   21e64:	ldr	r1, [pc, #48]	; 21e9c <g_strcmp0@plt+0xc01c>
   21e68:	ldr	r0, [pc, #36]	; 21e94 <g_strcmp0@plt+0xc014>
   21e6c:	bl	14fd4 <g_return_if_fail_warning@plt>
   21e70:	mov	r0, #0
   21e74:	pop	{r4, r5, r6, r7, r8, pc}
   21e78:	ldr	r2, [pc, #32]	; 21ea0 <g_strcmp0@plt+0xc020>
   21e7c:	ldr	r1, [pc, #24]	; 21e9c <g_strcmp0@plt+0xc01c>
   21e80:	ldr	r0, [pc, #12]	; 21e94 <g_strcmp0@plt+0xc014>
   21e84:	bl	14fd4 <g_return_if_fail_warning@plt>
   21e88:	mov	r0, r6
   21e8c:	pop	{r4, r5, r6, r7, r8, pc}
   21e90:	ldrdeq	pc, [r2], -r4
   21e94:	andeq	r8, r2, ip, lsl #29
   21e98:	strdeq	pc, [r2], -r8
   21e9c:	strdeq	pc, [r2], -r0
   21ea0:	andeq	pc, r2, r4, asr #9
   21ea4:	push	{r4, r5, r6, lr}
   21ea8:	mov	r4, r0
   21eac:	mov	r5, r1
   21eb0:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21eb4:	cmp	r4, #0
   21eb8:	beq	21f1c <g_strcmp0@plt+0xc09c>
   21ebc:	ldr	r3, [r4]
   21ec0:	cmp	r3, #0
   21ec4:	beq	21ed4 <g_strcmp0@plt+0xc054>
   21ec8:	ldr	r3, [r3]
   21ecc:	cmp	r3, r0
   21ed0:	beq	21ee8 <g_strcmp0@plt+0xc068>
   21ed4:	mov	r1, r0
   21ed8:	mov	r0, r4
   21edc:	bl	159dc <g_type_check_instance_is_a@plt>
   21ee0:	cmp	r0, #0
   21ee4:	beq	21f1c <g_strcmp0@plt+0xc09c>
   21ee8:	ldr	r3, [r4, #12]
   21eec:	mov	r4, #1
   21ef0:	str	r4, [r3, #32]
   21ef4:	ldr	r6, [r3, #48]	; 0x30
   21ef8:	bl	26fa4 <g_strcmp0@plt+0x11124>
   21efc:	mov	r1, r0
   21f00:	mov	r0, r6
   21f04:	bl	15148 <g_type_check_instance_cast@plt>
   21f08:	mov	r1, r5
   21f0c:	mov	r2, #6
   21f10:	bl	24be4 <g_strcmp0@plt+0xed64>
   21f14:	mov	r0, r4
   21f18:	pop	{r4, r5, r6, pc}
   21f1c:	ldr	r2, [pc, #16]	; 21f34 <g_strcmp0@plt+0xc0b4>
   21f20:	ldr	r1, [pc, #16]	; 21f38 <g_strcmp0@plt+0xc0b8>
   21f24:	ldr	r0, [pc, #16]	; 21f3c <g_strcmp0@plt+0xc0bc>
   21f28:	bl	14fd4 <g_return_if_fail_warning@plt>
   21f2c:	mov	r0, #0
   21f30:	pop	{r4, r5, r6, pc}
   21f34:	strdeq	pc, [r2], -r8
   21f38:	andeq	pc, r2, ip, lsl #2
   21f3c:	andeq	r8, r2, ip, lsl #29
   21f40:	push	{r4, lr}
   21f44:	mov	r4, r0
   21f48:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21f4c:	cmp	r4, #0
   21f50:	beq	21fa8 <g_strcmp0@plt+0xc128>
   21f54:	ldr	r3, [r4]
   21f58:	cmp	r3, #0
   21f5c:	beq	21f6c <g_strcmp0@plt+0xc0ec>
   21f60:	ldr	r3, [r3]
   21f64:	cmp	r3, r0
   21f68:	beq	21f80 <g_strcmp0@plt+0xc100>
   21f6c:	mov	r1, r0
   21f70:	mov	r0, r4
   21f74:	bl	159dc <g_type_check_instance_is_a@plt>
   21f78:	cmp	r0, #0
   21f7c:	beq	21fa8 <g_strcmp0@plt+0xc128>
   21f80:	ldr	r3, [r4, #12]
   21f84:	ldr	r1, [pc, #52]	; 21fc0 <g_strcmp0@plt+0xc140>
   21f88:	ldr	r0, [r3]
   21f8c:	bl	15418 <gtk_builder_get_object@plt>
   21f90:	mov	r4, r0
   21f94:	bl	15e38 <gtk_window_get_type@plt>
   21f98:	mov	r1, r0
   21f9c:	mov	r0, r4
   21fa0:	pop	{r4, lr}
   21fa4:	b	15148 <g_type_check_instance_cast@plt>
   21fa8:	ldr	r2, [pc, #20]	; 21fc4 <g_strcmp0@plt+0xc144>
   21fac:	ldr	r1, [pc, #20]	; 21fc8 <g_strcmp0@plt+0xc148>
   21fb0:	ldr	r0, [pc, #20]	; 21fcc <g_strcmp0@plt+0xc14c>
   21fb4:	bl	14fd4 <g_return_if_fail_warning@plt>
   21fb8:	mov	r0, #0
   21fbc:	pop	{r4, pc}
   21fc0:	andeq	pc, r2, r4, ror #4
   21fc4:	strdeq	pc, [r2], -r8
   21fc8:	andeq	pc, r2, r0, lsr r1	; <UNPREDICTABLE>
   21fcc:	andeq	r8, r2, ip, lsl #29
   21fd0:	push	{r4, r5, r6, lr}
   21fd4:	mov	r4, r0
   21fd8:	mov	r5, r1
   21fdc:	bl	20ec0 <g_strcmp0@plt+0xb040>
   21fe0:	cmp	r4, #0
   21fe4:	beq	22048 <g_strcmp0@plt+0xc1c8>
   21fe8:	ldr	r3, [r4]
   21fec:	cmp	r3, #0
   21ff0:	beq	22000 <g_strcmp0@plt+0xc180>
   21ff4:	ldr	r3, [r3]
   21ff8:	cmp	r3, r0
   21ffc:	beq	22014 <g_strcmp0@plt+0xc194>
   22000:	mov	r1, r0
   22004:	mov	r0, r4
   22008:	bl	159dc <g_type_check_instance_is_a@plt>
   2200c:	cmp	r0, #0
   22010:	beq	22048 <g_strcmp0@plt+0xc1c8>
   22014:	ldr	r3, [r4, #12]
   22018:	ldr	r1, [pc, #64]	; 22060 <g_strcmp0@plt+0xc1e0>
   2201c:	ldr	r0, [r3]
   22020:	bl	15418 <gtk_builder_get_object@plt>
   22024:	mov	r4, r0
   22028:	bl	150f4 <gtk_widget_get_type@plt>
   2202c:	mov	r1, r0
   22030:	mov	r0, r4
   22034:	bl	15148 <g_type_check_instance_cast@plt>
   22038:	mov	r1, r5
   2203c:	bl	15e50 <gtk_widget_set_sensitive@plt>
   22040:	mov	r0, #1
   22044:	pop	{r4, r5, r6, pc}
   22048:	ldr	r2, [pc, #20]	; 22064 <g_strcmp0@plt+0xc1e4>
   2204c:	ldr	r1, [pc, #20]	; 22068 <g_strcmp0@plt+0xc1e8>
   22050:	ldr	r0, [pc, #20]	; 2206c <g_strcmp0@plt+0xc1ec>
   22054:	bl	14fd4 <g_return_if_fail_warning@plt>
   22058:	mov	r0, #0
   2205c:	pop	{r4, r5, r6, pc}
   22060:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   22064:	strdeq	pc, [r2], -r8
   22068:	andeq	pc, r2, ip, asr #2
   2206c:	andeq	r8, r2, ip, lsl #29
   22070:	push	{r4, r5, r6, r7, r8, lr}
   22074:	mov	r4, r0
   22078:	mov	r7, r1
   2207c:	bl	20ec0 <g_strcmp0@plt+0xb040>
   22080:	cmp	r4, #0
   22084:	beq	22210 <g_strcmp0@plt+0xc390>
   22088:	ldr	r3, [r4]
   2208c:	cmp	r3, #0
   22090:	beq	220a0 <g_strcmp0@plt+0xc220>
   22094:	ldr	r3, [r3]
   22098:	cmp	r3, r0
   2209c:	beq	220b4 <g_strcmp0@plt+0xc234>
   220a0:	mov	r1, r0
   220a4:	mov	r0, r4
   220a8:	bl	159dc <g_type_check_instance_is_a@plt>
   220ac:	cmp	r0, #0
   220b0:	beq	22210 <g_strcmp0@plt+0xc390>
   220b4:	ldr	r3, [r4, #12]
   220b8:	ldr	r1, [pc, #548]	; 222e4 <g_strcmp0@plt+0xc464>
   220bc:	ldr	r0, [r3]
   220c0:	bl	15418 <gtk_builder_get_object@plt>
   220c4:	mov	r5, r0
   220c8:	bl	150f4 <gtk_widget_get_type@plt>
   220cc:	mov	r1, r0
   220d0:	mov	r6, r0
   220d4:	mov	r0, r5
   220d8:	bl	15148 <g_type_check_instance_cast@plt>
   220dc:	bl	15b50 <gtk_widget_show@plt>
   220e0:	ldr	r3, [r4, #12]
   220e4:	ldr	r0, [r3, #48]	; 0x30
   220e8:	bl	15b50 <gtk_widget_show@plt>
   220ec:	ldr	r3, [r4, #12]
   220f0:	ldr	r2, [r3, #36]	; 0x24
   220f4:	cmp	r2, #0
   220f8:	bne	22228 <g_strcmp0@plt+0xc3a8>
   220fc:	ldr	r3, [r3, #32]
   22100:	cmp	r3, #0
   22104:	beq	222b4 <g_strcmp0@plt+0xc434>
   22108:	mvn	r3, #0
   2210c:	mov	r2, #6
   22110:	mov	r1, #2
   22114:	mov	r0, #0
   22118:	bl	15718 <pk_bitfield_from_enums@plt>
   2211c:	mov	r1, #1
   22120:	mov	r5, r0
   22124:	mov	r0, r4
   22128:	bl	21fd0 <g_strcmp0@plt+0xc150>
   2212c:	ldr	r3, [r4, #12]
   22130:	ldr	r2, [r3, #40]	; 0x28
   22134:	mov	r0, r4
   22138:	adds	r5, r5, r2
   2213c:	and	r2, r5, #1
   22140:	ldr	r1, [pc, #416]	; 222e8 <g_strcmp0@plt+0xc468>
   22144:	bl	20d44 <g_strcmp0@plt+0xaec4>
   22148:	lsr	r2, r5, #1
   2214c:	mov	r0, r4
   22150:	and	r2, r2, #1
   22154:	ldr	r1, [pc, #400]	; 222ec <g_strcmp0@plt+0xc46c>
   22158:	bl	20d44 <g_strcmp0@plt+0xaec4>
   2215c:	lsr	r2, r5, #2
   22160:	mov	r0, r4
   22164:	and	r2, r2, #1
   22168:	ldr	r1, [pc, #384]	; 222f0 <g_strcmp0@plt+0xc470>
   2216c:	bl	20d44 <g_strcmp0@plt+0xaec4>
   22170:	lsr	r2, r5, #5
   22174:	mov	r0, r4
   22178:	and	r2, r2, #1
   2217c:	ldr	r1, [pc, #368]	; 222f4 <g_strcmp0@plt+0xc474>
   22180:	bl	20d44 <g_strcmp0@plt+0xaec4>
   22184:	lsr	r2, r5, #6
   22188:	mov	r0, r4
   2218c:	and	r2, r2, #1
   22190:	ldr	r1, [pc, #352]	; 222f8 <g_strcmp0@plt+0xc478>
   22194:	bl	20d44 <g_strcmp0@plt+0xaec4>
   22198:	lsr	r2, r5, #4
   2219c:	mov	r0, r4
   221a0:	and	r2, r2, #1
   221a4:	ldr	r1, [pc, #336]	; 222fc <g_strcmp0@plt+0xc47c>
   221a8:	bl	20d44 <g_strcmp0@plt+0xaec4>
   221ac:	lsr	r2, r5, #3
   221b0:	mov	r0, r4
   221b4:	and	r2, r2, #1
   221b8:	ldr	r1, [pc, #320]	; 22300 <g_strcmp0@plt+0xc480>
   221bc:	bl	20d44 <g_strcmp0@plt+0xaec4>
   221c0:	mov	r2, #1
   221c4:	mov	r0, r4
   221c8:	ldr	r1, [pc, #308]	; 22304 <g_strcmp0@plt+0xc484>
   221cc:	bl	20d44 <g_strcmp0@plt+0xaec4>
   221d0:	ldr	r3, [r4, #12]
   221d4:	ldr	r1, [pc, #300]	; 22308 <g_strcmp0@plt+0xc488>
   221d8:	ldr	r0, [r3]
   221dc:	bl	15418 <gtk_builder_get_object@plt>
   221e0:	mov	r1, r6
   221e4:	bl	15148 <g_type_check_instance_cast@plt>
   221e8:	mov	r4, r0
   221ec:	bl	151e4 <gtk_widget_realize@plt>
   221f0:	bl	15e38 <gtk_window_get_type@plt>
   221f4:	mov	r1, r0
   221f8:	mov	r0, r4
   221fc:	bl	15148 <g_type_check_instance_cast@plt>
   22200:	mov	r1, r7
   22204:	bl	157e4 <gtk_window_present_with_time@plt>
   22208:	mov	r0, #1
   2220c:	pop	{r4, r5, r6, r7, r8, pc}
   22210:	ldr	r2, [pc, #244]	; 2230c <g_strcmp0@plt+0xc48c>
   22214:	ldr	r1, [pc, #244]	; 22310 <g_strcmp0@plt+0xc490>
   22218:	ldr	r0, [pc, #244]	; 22314 <g_strcmp0@plt+0xc494>
   2221c:	bl	14fd4 <g_return_if_fail_warning@plt>
   22220:	mov	r0, #0
   22224:	pop	{r4, r5, r6, r7, r8, pc}
   22228:	cmp	r2, #2
   2222c:	beq	22298 <g_strcmp0@plt+0xc418>
   22230:	cmp	r2, #3
   22234:	beq	22270 <g_strcmp0@plt+0xc3f0>
   22238:	cmp	r2, #1
   2223c:	movne	r5, #0
   22240:	bne	22130 <g_strcmp0@plt+0xc2b0>
   22244:	ldr	r3, [r3, #32]
   22248:	cmp	r3, #0
   2224c:	beq	222c4 <g_strcmp0@plt+0xc444>
   22250:	mvn	r3, #0
   22254:	mov	r2, #5
   22258:	mov	r1, #0
   2225c:	mov	r0, #1
   22260:	bl	15718 <pk_bitfield_from_enums@plt>
   22264:	ldr	r3, [r4, #12]
   22268:	mov	r5, r0
   2226c:	b	22130 <g_strcmp0@plt+0xc2b0>
   22270:	ldr	r3, [r3, #32]
   22274:	cmp	r3, #0
   22278:	beq	222d4 <g_strcmp0@plt+0xc454>
   2227c:	mvn	r2, #0
   22280:	mov	r1, #6
   22284:	mov	r0, #1
   22288:	bl	15718 <pk_bitfield_from_enums@plt>
   2228c:	ldr	r3, [r4, #12]
   22290:	mov	r5, r0
   22294:	b	22130 <g_strcmp0@plt+0xc2b0>
   22298:	ldr	r3, [r3, #32]
   2229c:	cmp	r3, #0
   222a0:	bne	2227c <g_strcmp0@plt+0xc3fc>
   222a4:	ldr	r1, [pc, #108]	; 22318 <g_strcmp0@plt+0xc498>
   222a8:	mov	r0, r4
   222ac:	bl	21dac <g_strcmp0@plt+0xbf2c>
   222b0:	b	2227c <g_strcmp0@plt+0xc3fc>
   222b4:	ldr	r1, [pc, #96]	; 2231c <g_strcmp0@plt+0xc49c>
   222b8:	mov	r0, r4
   222bc:	bl	21dac <g_strcmp0@plt+0xbf2c>
   222c0:	b	22108 <g_strcmp0@plt+0xc288>
   222c4:	ldr	r1, [pc, #84]	; 22320 <g_strcmp0@plt+0xc4a0>
   222c8:	mov	r0, r4
   222cc:	bl	21dac <g_strcmp0@plt+0xbf2c>
   222d0:	b	22250 <g_strcmp0@plt+0xc3d0>
   222d4:	ldr	r1, [pc, #68]	; 22320 <g_strcmp0@plt+0xc4a0>
   222d8:	mov	r0, r4
   222dc:	bl	21dac <g_strcmp0@plt+0xbf2c>
   222e0:	b	2227c <g_strcmp0@plt+0xc3fc>
   222e4:			; <UNDEFINED> instruction: 0x0002f2b0
   222e8:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   222ec:	andeq	pc, r2, ip, ror #7
   222f0:	andeq	pc, r2, r4, lsl #8
   222f4:	andeq	pc, r2, r8, lsr #4
   222f8:	andeq	pc, r2, r4, asr #6
   222fc:	strdeq	pc, [r2], -r8
   22300:	andeq	pc, r2, r0, lsl r5	; <UNPREDICTABLE>
   22304:	andeq	pc, r2, r4, lsr #10
   22308:	andeq	pc, r2, r4, ror #4
   2230c:	strdeq	pc, [r2], -r8
   22310:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   22314:	andeq	r8, r2, ip, lsl #29
   22318:	andeq	r9, r2, r4, asr ip
   2231c:	andeq	pc, r2, r8, ror #9
   22320:	ldrdeq	lr, [r2], -ip
   22324:	mov	r1, #0
   22328:	b	22070 <g_strcmp0@plt+0xc1f0>
   2232c:	push	{r4, lr}
   22330:	mov	r4, r0
   22334:	bl	20ec0 <g_strcmp0@plt+0xb040>
   22338:	cmp	r4, #0
   2233c:	beq	223a0 <g_strcmp0@plt+0xc520>
   22340:	ldr	r3, [r4]
   22344:	cmp	r3, #0
   22348:	beq	22358 <g_strcmp0@plt+0xc4d8>
   2234c:	ldr	r3, [r3]
   22350:	cmp	r3, r0
   22354:	beq	2236c <g_strcmp0@plt+0xc4ec>
   22358:	mov	r1, r0
   2235c:	mov	r0, r4
   22360:	bl	159dc <g_type_check_instance_is_a@plt>
   22364:	cmp	r0, #0
   22368:	beq	223a0 <g_strcmp0@plt+0xc520>
   2236c:	ldr	r3, [r4, #12]
   22370:	ldr	r0, [r3, #16]
   22374:	bl	14f68 <g_main_loop_is_running@plt>
   22378:	cmp	r0, #0
   2237c:	bne	223b8 <g_strcmp0@plt+0xc538>
   22380:	ldr	r3, [r4, #12]
   22384:	mvn	r2, #0
   22388:	str	r2, [r3, #20]
   2238c:	ldr	r0, [r3, #16]
   22390:	bl	154c0 <g_main_loop_run@plt>
   22394:	ldr	r3, [r4, #12]
   22398:	ldr	r0, [r3, #20]
   2239c:	pop	{r4, pc}
   223a0:	ldr	r2, [pc, #32]	; 223c8 <g_strcmp0@plt+0xc548>
   223a4:	ldr	r1, [pc, #32]	; 223cc <g_strcmp0@plt+0xc54c>
   223a8:	ldr	r0, [pc, #32]	; 223d0 <g_strcmp0@plt+0xc550>
   223ac:	bl	14fd4 <g_return_if_fail_warning@plt>
   223b0:	mov	r0, #0
   223b4:	pop	{r4, pc}
   223b8:	ldr	r3, [r4, #12]
   223bc:	ldr	r0, [r3, #16]
   223c0:	bl	15214 <g_main_loop_quit@plt>
   223c4:	b	22380 <g_strcmp0@plt+0xc500>
   223c8:	strdeq	pc, [r2], -r8
   223cc:	muleq	r2, r4, r1
   223d0:	andeq	r8, r2, ip, lsl #29
   223d4:	push	{r4, r5, r6, lr}
   223d8:	mov	r4, r0
   223dc:	bl	20ec0 <g_strcmp0@plt+0xb040>
   223e0:	cmp	r4, #0
   223e4:	beq	22470 <g_strcmp0@plt+0xc5f0>
   223e8:	ldr	r3, [r4]
   223ec:	cmp	r3, #0
   223f0:	beq	22400 <g_strcmp0@plt+0xc580>
   223f4:	ldr	r3, [r3]
   223f8:	cmp	r3, r0
   223fc:	beq	22414 <g_strcmp0@plt+0xc594>
   22400:	mov	r1, r0
   22404:	mov	r0, r4
   22408:	bl	159dc <g_type_check_instance_is_a@plt>
   2240c:	cmp	r0, #0
   22410:	beq	22470 <g_strcmp0@plt+0xc5f0>
   22414:	ldr	r3, [r4, #12]
   22418:	ldr	r1, [pc, #124]	; 2249c <g_strcmp0@plt+0xc61c>
   2241c:	ldr	r0, [r3]
   22420:	bl	15418 <gtk_builder_get_object@plt>
   22424:	mov	r5, r0
   22428:	bl	150f4 <gtk_widget_get_type@plt>
   2242c:	mov	r1, r0
   22430:	mov	r0, r5
   22434:	bl	15148 <g_type_check_instance_cast@plt>
   22438:	bl	1519c <gtk_widget_hide@plt>
   2243c:	ldr	r3, [r4, #12]
   22440:	ldr	r0, [r3, #4]
   22444:	cmp	r0, #0
   22448:	bne	22488 <g_strcmp0@plt+0xc608>
   2244c:	ldr	r4, [r3, #48]	; 0x30
   22450:	bl	26fa4 <g_strcmp0@plt+0x11124>
   22454:	mov	r1, r0
   22458:	mov	r0, r4
   2245c:	bl	15148 <g_type_check_instance_cast@plt>
   22460:	mov	r1, #0
   22464:	bl	272c0 <g_strcmp0@plt+0x11440>
   22468:	mov	r0, #1
   2246c:	pop	{r4, r5, r6, pc}
   22470:	ldr	r2, [pc, #40]	; 224a0 <g_strcmp0@plt+0xc620>
   22474:	ldr	r1, [pc, #40]	; 224a4 <g_strcmp0@plt+0xc624>
   22478:	ldr	r0, [pc, #40]	; 224a8 <g_strcmp0@plt+0xc628>
   2247c:	bl	14fd4 <g_return_if_fail_warning@plt>
   22480:	mov	r0, #0
   22484:	pop	{r4, r5, r6, pc}
   22488:	bl	15e5c <g_source_remove@plt>
   2248c:	ldr	r3, [r4, #12]
   22490:	mov	r2, #0
   22494:	str	r2, [r3, #4]
   22498:	b	2244c <g_strcmp0@plt+0xc5cc>
   2249c:	andeq	pc, r2, r4, ror #4
   224a0:	strdeq	pc, [r2], -r8
   224a4:	andeq	pc, r2, ip, lsr #3
   224a8:	andeq	r8, r2, ip, lsl #29
   224ac:	push	{r4, lr}
   224b0:	mov	r4, r2
   224b4:	mvn	r2, #3
   224b8:	ldr	r3, [r4, #12]
   224bc:	mov	r0, r4
   224c0:	str	r2, [r3, #20]
   224c4:	bl	223d4 <g_strcmp0@plt+0xc554>
   224c8:	ldr	r3, [r4, #12]
   224cc:	ldr	r0, [r3, #16]
   224d0:	bl	14f68 <g_main_loop_is_running@plt>
   224d4:	cmp	r0, #0
   224d8:	bne	224e4 <g_strcmp0@plt+0xc664>
   224dc:	mov	r0, #1
   224e0:	pop	{r4, pc}
   224e4:	ldr	r3, [r4, #12]
   224e8:	ldr	r0, [r3, #16]
   224ec:	bl	15214 <g_main_loop_quit@plt>
   224f0:	mov	r0, #1
   224f4:	pop	{r4, pc}
   224f8:	push	{r4, r5, r6, lr}
   224fc:	mov	r5, r0
   22500:	bl	20ec0 <g_strcmp0@plt+0xb040>
   22504:	cmp	r5, #0
   22508:	beq	225d0 <g_strcmp0@plt+0xc750>
   2250c:	ldr	r3, [r5]
   22510:	cmp	r3, #0
   22514:	beq	22524 <g_strcmp0@plt+0xc6a4>
   22518:	ldr	r3, [r3]
   2251c:	cmp	r3, r0
   22520:	beq	22538 <g_strcmp0@plt+0xc6b8>
   22524:	mov	r1, r0
   22528:	mov	r0, r5
   2252c:	bl	159dc <g_type_check_instance_is_a@plt>
   22530:	cmp	r0, #0
   22534:	beq	225d0 <g_strcmp0@plt+0xc750>
   22538:	bl	20ec0 <g_strcmp0@plt+0xb040>
   2253c:	mov	r1, r0
   22540:	mov	r0, r5
   22544:	bl	15148 <g_type_check_instance_cast@plt>
   22548:	ldr	r3, [r0, #12]
   2254c:	mov	r4, r0
   22550:	cmp	r3, #0
   22554:	beq	225e4 <g_strcmp0@plt+0xc764>
   22558:	ldr	r0, [r3, #4]
   2255c:	cmp	r0, #0
   22560:	bne	22618 <g_strcmp0@plt+0xc798>
   22564:	mov	r0, r4
   22568:	bl	223d4 <g_strcmp0@plt+0xc554>
   2256c:	ldr	r3, [r4, #12]
   22570:	ldr	r0, [r3, #16]
   22574:	bl	14f68 <g_main_loop_is_running@plt>
   22578:	cmp	r0, #0
   2257c:	bne	225f8 <g_strcmp0@plt+0xc778>
   22580:	ldr	r3, [r4, #12]
   22584:	ldr	r0, [r3, #24]
   22588:	bl	15b5c <g_object_unref@plt>
   2258c:	ldr	r3, [r4, #12]
   22590:	ldr	r0, [r3]
   22594:	bl	15b5c <g_object_unref@plt>
   22598:	ldr	r3, [r4, #12]
   2259c:	ldr	r0, [r3, #16]
   225a0:	bl	15df0 <g_main_loop_unref@plt>
   225a4:	ldr	r3, [r4, #12]
   225a8:	ldr	r0, [r3, #28]
   225ac:	bl	15874 <g_free@plt>
   225b0:	ldr	r3, [pc, #104]	; 22620 <g_strcmp0@plt+0xc7a0>
   225b4:	mov	r1, #80	; 0x50
   225b8:	ldr	r0, [r3]
   225bc:	bl	15dc0 <g_type_check_class_cast@plt>
   225c0:	ldr	r3, [r0, #24]
   225c4:	mov	r0, r5
   225c8:	pop	{r4, r5, r6, lr}
   225cc:	bx	r3
   225d0:	ldr	r2, [pc, #76]	; 22624 <g_strcmp0@plt+0xc7a4>
   225d4:	ldr	r1, [pc, #76]	; 22628 <g_strcmp0@plt+0xc7a8>
   225d8:	ldr	r0, [pc, #76]	; 2262c <g_strcmp0@plt+0xc7ac>
   225dc:	pop	{r4, r5, r6, lr}
   225e0:	b	14fd4 <g_return_if_fail_warning@plt>
   225e4:	ldr	r2, [pc, #68]	; 22630 <g_strcmp0@plt+0xc7b0>
   225e8:	ldr	r1, [pc, #56]	; 22628 <g_strcmp0@plt+0xc7a8>
   225ec:	ldr	r0, [pc, #56]	; 2262c <g_strcmp0@plt+0xc7ac>
   225f0:	pop	{r4, r5, r6, lr}
   225f4:	b	14fd4 <g_return_if_fail_warning@plt>
   225f8:	ldr	r2, [pc, #52]	; 22634 <g_strcmp0@plt+0xc7b4>
   225fc:	mov	r1, #16
   22600:	ldr	r0, [pc, #36]	; 2262c <g_strcmp0@plt+0xc7ac>
   22604:	bl	151f0 <g_log@plt>
   22608:	ldr	r3, [r4, #12]
   2260c:	ldr	r0, [r3, #16]
   22610:	bl	15214 <g_main_loop_quit@plt>
   22614:	b	22580 <g_strcmp0@plt+0xc700>
   22618:	bl	15e5c <g_source_remove@plt>
   2261c:	b	22564 <g_strcmp0@plt+0xc6e4>
   22620:	andeq	r1, r4, r8, ror #17
   22624:	andeq	pc, r2, r8, lsr r5	; <UNPREDICTABLE>
   22628:	andeq	pc, r2, r4, asr #3
   2262c:	andeq	r8, r2, ip, lsl #29
   22630:	andeq	pc, r2, r8, asr r5	; <UNPREDICTABLE>
   22634:	andeq	pc, r2, r0, ror r5	; <UNPREDICTABLE>
   22638:	ldr	r2, [pc, #444]	; 227fc <g_strcmp0@plt+0xc97c>
   2263c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22640:	mov	r8, r0
   22644:	ldr	r0, [r0, #12]
   22648:	sub	sp, sp, #68	; 0x44
   2264c:	ldr	r2, [r2]
   22650:	mov	r3, #0
   22654:	ldr	r0, [r0, #24]
   22658:	str	r2, [sp, #60]	; 0x3c
   2265c:	mov	r5, r1
   22660:	str	r3, [sp, #36]	; 0x24
   22664:	str	r3, [sp, #40]	; 0x28
   22668:	bl	15dcc <gtk_list_store_clear@plt>
   2266c:	ldr	r3, [r8, #12]
   22670:	ldr	r1, [pc, #392]	; 22800 <g_strcmp0@plt+0xc980>
   22674:	ldr	r0, [r3]
   22678:	bl	15418 <gtk_builder_get_object@plt>
   2267c:	mov	r4, r0
   22680:	bl	150f4 <gtk_widget_get_type@plt>
   22684:	mov	r1, r0
   22688:	mov	r0, r4
   2268c:	bl	15148 <g_type_check_instance_cast@plt>
   22690:	ldr	r3, [r5, #4]
   22694:	cmp	r3, #5
   22698:	str	r0, [sp, #28]
   2269c:	bhi	227e4 <g_strcmp0@plt+0xc964>
   226a0:	cmp	r3, #1
   226a4:	bhi	227d0 <g_strcmp0@plt+0xc950>
   226a8:	cmp	r3, #0
   226ac:	movne	r4, #0
   226b0:	ldrne	r9, [pc, #332]	; 22804 <g_strcmp0@plt+0xc984>
   226b4:	beq	227b0 <g_strcmp0@plt+0xc930>
   226b8:	ldr	r1, [r5]
   226bc:	mov	r3, #0
   226c0:	add	r2, sp, #32
   226c4:	ldr	r6, [r1, r4, lsl #2]
   226c8:	mov	r1, r9
   226cc:	mov	r0, r6
   226d0:	bl	15910 <g_object_get@plt>
   226d4:	ldr	r3, [sp, #32]
   226d8:	bic	r3, r3, #4
   226dc:	cmp	r3, #10
   226e0:	beq	227a0 <g_strcmp0@plt+0xc920>
   226e4:	mov	sl, #0
   226e8:	add	r3, sp, #40	; 0x28
   226ec:	mov	r0, r6
   226f0:	add	r2, sp, #36	; 0x24
   226f4:	ldr	r1, [pc, #268]	; 22808 <g_strcmp0@plt+0xc988>
   226f8:	stm	sp, {r3, sl}
   226fc:	ldr	r3, [pc, #264]	; 2280c <g_strcmp0@plt+0xc98c>
   22700:	bl	15910 <g_object_get@plt>
   22704:	ldr	r0, [sp, #28]
   22708:	bl	1531c <gtk_widget_get_style_context@plt>
   2270c:	ldr	r2, [sp, #40]	; 0x28
   22710:	ldr	r1, [sp, #36]	; 0x24
   22714:	bl	24730 <g_strcmp0@plt+0xe8b0>
   22718:	mov	r6, r0
   2271c:	ldr	r0, [sp, #36]	; 0x24
   22720:	bl	15124 <pk_package_id_split@plt>
   22724:	mov	fp, r0
   22728:	mov	r0, #1
   2272c:	bl	1fb0c <g_strcmp0@plt+0x9c8c>
   22730:	ldr	r2, [r8, #12]
   22734:	add	r1, sp, #44	; 0x2c
   22738:	mov	r7, r0
   2273c:	ldr	r0, [r2, #24]
   22740:	bl	15964 <gtk_list_store_append@plt>
   22744:	ldr	r2, [r8, #12]
   22748:	ldr	lr, [sp, #36]	; 0x24
   2274c:	mvn	ip, #0
   22750:	ldr	r0, [r2, #24]
   22754:	str	lr, [sp, #4]
   22758:	str	ip, [sp, #16]
   2275c:	mov	lr, #2
   22760:	mov	ip, #1
   22764:	mov	r3, r7
   22768:	mov	r2, sl
   2276c:	add	r1, sp, #44	; 0x2c
   22770:	str	lr, [sp, #8]
   22774:	str	ip, [sp]
   22778:	str	r6, [sp, #12]
   2277c:	bl	15004 <gtk_list_store_set@plt>
   22780:	mov	r0, fp
   22784:	bl	15790 <g_strfreev@plt>
   22788:	ldr	r0, [sp, #36]	; 0x24
   2278c:	bl	15874 <g_free@plt>
   22790:	ldr	r0, [sp, #40]	; 0x28
   22794:	bl	15874 <g_free@plt>
   22798:	mov	r0, r6
   2279c:	bl	15874 <g_free@plt>
   227a0:	ldr	r3, [r5, #4]
   227a4:	add	r4, r4, #1
   227a8:	cmp	r3, r4
   227ac:	bhi	226b8 <g_strcmp0@plt+0xc838>
   227b0:	ldr	r3, [pc, #68]	; 227fc <g_strcmp0@plt+0xc97c>
   227b4:	ldr	r2, [sp, #60]	; 0x3c
   227b8:	mov	r0, #1
   227bc:	ldr	r3, [r3]
   227c0:	cmp	r2, r3
   227c4:	bne	227f8 <g_strcmp0@plt+0xc978>
   227c8:	add	sp, sp, #68	; 0x44
   227cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227d0:	mov	r2, #150	; 0x96
   227d4:	mvn	r1, #0
   227d8:	bl	155bc <gtk_widget_set_size_request@plt>
   227dc:	ldr	r3, [r5, #4]
   227e0:	b	226a8 <g_strcmp0@plt+0xc828>
   227e4:	mov	r2, #300	; 0x12c
   227e8:	mvn	r1, #0
   227ec:	bl	155bc <gtk_widget_set_size_request@plt>
   227f0:	ldr	r3, [r5, #4]
   227f4:	b	226a8 <g_strcmp0@plt+0xc828>
   227f8:	bl	157f0 <__stack_chk_fail@plt>
   227fc:	andeq	r0, r4, r0, asr lr
   22800:	strdeq	pc, [r2], -r8
   22804:	andeq	r0, r3, r8, lsr #17
   22808:	andeq	r9, r2, r4, asr #17
   2280c:	andeq	pc, r2, ip, lsl #11
   22810:	push	{r4, lr}
   22814:	bl	20ec0 <g_strcmp0@plt+0xb040>
   22818:	mov	r1, #0
   2281c:	bl	14ef0 <g_object_new@plt>
   22820:	mov	r4, r0
   22824:	bl	20ec0 <g_strcmp0@plt+0xb040>
   22828:	mov	r1, r0
   2282c:	mov	r0, r4
   22830:	pop	{r4, lr}
   22834:	b	15148 <g_type_check_instance_cast@plt>
   22838:	push	{lr}		; (str lr, [sp, #-4]!)
   2283c:	sub	sp, sp, #20
   22840:	ldr	r0, [pc, #48]	; 22878 <g_strcmp0@plt+0xc9f8>
   22844:	bl	15748 <g_intern_static_string@plt>
   22848:	ldr	r1, [pc, #44]	; 2287c <g_strcmp0@plt+0xc9fc>
   2284c:	mov	r2, #0
   22850:	mov	r3, #16
   22854:	stmib	sp, {r1, r2}
   22858:	str	r3, [sp]
   2285c:	mov	r2, #68	; 0x44
   22860:	ldr	r3, [pc, #24]	; 22880 <g_strcmp0@plt+0xca00>
   22864:	mov	r1, r0
   22868:	mov	r0, #80	; 0x50
   2286c:	bl	14fe0 <g_type_register_static_simple@plt>
   22870:	add	sp, sp, #20
   22874:	pop	{pc}		; (ldr pc, [sp], #4)
   22878:	ldrdeq	pc, [r2], -ip
   2287c:	andeq	r2, r2, r4, ror ip
   22880:	andeq	r2, r2, r0, lsr #19
   22884:	ldr	r3, [r1, #12]
   22888:	push	{r4, lr}
   2288c:	ldr	r1, [pc, #32]	; 228b4 <g_strcmp0@plt+0xca34>
   22890:	ldr	r0, [r3]
   22894:	bl	15418 <gtk_builder_get_object@plt>
   22898:	mov	r4, r0
   2289c:	bl	150f4 <gtk_widget_get_type@plt>
   228a0:	mov	r1, r0
   228a4:	mov	r0, r4
   228a8:	bl	15148 <g_type_check_instance_cast@plt>
   228ac:	pop	{r4, lr}
   228b0:	b	1519c <gtk_widget_hide@plt>
   228b4:	andeq	pc, r2, ip, ror #11
   228b8:	ldr	r3, [r2, #12]
   228bc:	push	{r4, lr}
   228c0:	ldr	r0, [r3]
   228c4:	ldr	r1, [pc, #32]	; 228ec <g_strcmp0@plt+0xca6c>
   228c8:	bl	15418 <gtk_builder_get_object@plt>
   228cc:	mov	r4, r0
   228d0:	bl	150f4 <gtk_widget_get_type@plt>
   228d4:	mov	r1, r0
   228d8:	mov	r0, r4
   228dc:	bl	15148 <g_type_check_instance_cast@plt>
   228e0:	bl	1519c <gtk_widget_hide@plt>
   228e4:	mov	r0, #0
   228e8:	pop	{r4, pc}
   228ec:	andeq	pc, r2, ip, ror #11
   228f0:	push	{r4, lr}
   228f4:	sub	sp, sp, #40	; 0x28
   228f8:	ldr	r4, [pc, #144]	; 22990 <g_strcmp0@plt+0xcb10>
   228fc:	mov	r3, #0
   22900:	add	r2, sp, #20
   22904:	ldr	r1, [r4]
   22908:	str	r3, [sp, #16]
   2290c:	str	r1, [sp, #36]	; 0x24
   22910:	add	r1, sp, #12
   22914:	bl	1591c <gtk_tree_selection_get_selected@plt>
   22918:	cmp	r0, #0
   2291c:	beq	22978 <g_strcmp0@plt+0xcaf8>
   22920:	ldr	r0, [sp, #16]
   22924:	bl	15874 <g_free@plt>
   22928:	mvn	r3, #0
   2292c:	add	r1, sp, #20
   22930:	str	r3, [sp]
   22934:	mov	r2, #2
   22938:	add	r3, sp, #16
   2293c:	ldr	r0, [sp, #12]
   22940:	bl	15d9c <gtk_tree_model_get@plt>
   22944:	ldr	r3, [sp, #16]
   22948:	ldr	r2, [pc, #68]	; 22994 <g_strcmp0@plt+0xcb14>
   2294c:	mov	r1, #128	; 0x80
   22950:	ldr	r0, [pc, #64]	; 22998 <g_strcmp0@plt+0xcb18>
   22954:	bl	151f0 <g_log@plt>
   22958:	ldr	r0, [sp, #16]
   2295c:	bl	15874 <g_free@plt>
   22960:	ldr	r2, [sp, #36]	; 0x24
   22964:	ldr	r3, [r4]
   22968:	cmp	r2, r3
   2296c:	bne	2298c <g_strcmp0@plt+0xcb0c>
   22970:	add	sp, sp, #40	; 0x28
   22974:	pop	{r4, pc}
   22978:	ldr	r2, [pc, #28]	; 2299c <g_strcmp0@plt+0xcb1c>
   2297c:	mov	r1, #128	; 0x80
   22980:	ldr	r0, [pc, #16]	; 22998 <g_strcmp0@plt+0xcb18>
   22984:	bl	151f0 <g_log@plt>
   22988:	b	22958 <g_strcmp0@plt+0xcad8>
   2298c:	bl	157f0 <__stack_chk_fail@plt>
   22990:	andeq	r0, r4, r0, asr lr
   22994:	strdeq	pc, [r2], -ip
   22998:	andeq	r8, r2, ip, lsl #29
   2299c:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   229a0:	push	{r4, lr}
   229a4:	mov	r4, r0
   229a8:	bl	15c58 <g_type_class_peek_parent@plt>
   229ac:	ldr	r1, [pc, #64]	; 229f4 <g_strcmp0@plt+0xcb74>
   229b0:	ldr	r3, [r1, #4]
   229b4:	cmp	r3, #0
   229b8:	str	r0, [r1]
   229bc:	bne	229e4 <g_strcmp0@plt+0xcb64>
   229c0:	mov	r1, #80	; 0x50
   229c4:	mov	r0, r4
   229c8:	bl	15dc0 <g_type_check_class_cast@plt>
   229cc:	ldr	r3, [pc, #36]	; 229f8 <g_strcmp0@plt+0xcb78>
   229d0:	mov	r1, #8
   229d4:	str	r3, [r0, #24]
   229d8:	mov	r0, r4
   229dc:	pop	{r4, lr}
   229e0:	b	15988 <g_type_class_add_private@plt>
   229e4:	add	r1, r1, #4
   229e8:	mov	r0, r4
   229ec:	bl	15028 <g_type_class_adjust_private_offset@plt>
   229f0:	b	229c0 <g_strcmp0@plt+0xcb40>
   229f4:	andeq	r1, r4, r8, lsl #18
   229f8:	strheq	r3, [r2], -r8
   229fc:	push	{r4, r5, r6, r7, lr}
   22a00:	sub	sp, sp, #12
   22a04:	ldr	r5, [pc, #176]	; 22abc <g_strcmp0@plt+0xcc3c>
   22a08:	mov	r6, #0
   22a0c:	subs	r4, r0, #0
   22a10:	ldr	r3, [r5]
   22a14:	str	r6, [sp]
   22a18:	str	r3, [sp, #4]
   22a1c:	beq	22aa4 <g_strcmp0@plt+0xcc24>
   22a20:	bl	15bb0 <g_desktop_app_info_new_from_filename@plt>
   22a24:	mov	r4, r0
   22a28:	bl	1579c <g_app_info_get_type@plt>
   22a2c:	mov	r1, r0
   22a30:	mov	r0, r4
   22a34:	bl	15148 <g_type_check_instance_cast@plt>
   22a38:	mov	r3, sp
   22a3c:	mov	r2, r6
   22a40:	mov	r1, r6
   22a44:	mov	r7, r0
   22a48:	bl	156b8 <g_app_info_launch@plt>
   22a4c:	subs	r4, r0, #0
   22a50:	beq	22a80 <g_strcmp0@plt+0xcc00>
   22a54:	cmp	r7, #0
   22a58:	beq	22a64 <g_strcmp0@plt+0xcbe4>
   22a5c:	mov	r0, r7
   22a60:	bl	15b5c <g_object_unref@plt>
   22a64:	ldr	r2, [sp, #4]
   22a68:	ldr	r3, [r5]
   22a6c:	mov	r0, r4
   22a70:	cmp	r2, r3
   22a74:	bne	22ab8 <g_strcmp0@plt+0xcc38>
   22a78:	add	sp, sp, #12
   22a7c:	pop	{r4, r5, r6, r7, pc}
   22a80:	ldr	r3, [sp]
   22a84:	ldr	r2, [pc, #52]	; 22ac0 <g_strcmp0@plt+0xcc40>
   22a88:	mov	r1, #16
   22a8c:	ldr	r3, [r3, #8]
   22a90:	ldr	r0, [pc, #44]	; 22ac4 <g_strcmp0@plt+0xcc44>
   22a94:	bl	151f0 <g_log@plt>
   22a98:	ldr	r0, [sp]
   22a9c:	bl	15064 <g_error_free@plt>
   22aa0:	b	22a54 <g_strcmp0@plt+0xcbd4>
   22aa4:	ldr	r2, [pc, #28]	; 22ac8 <g_strcmp0@plt+0xcc48>
   22aa8:	mov	r1, #16
   22aac:	ldr	r0, [pc, #16]	; 22ac4 <g_strcmp0@plt+0xcc44>
   22ab0:	bl	151f0 <g_log@plt>
   22ab4:	b	22a64 <g_strcmp0@plt+0xcbe4>
   22ab8:	bl	157f0 <__stack_chk_fail@plt>
   22abc:	andeq	r0, r4, r0, asr lr
   22ac0:	andeq	pc, r2, r0, lsr r6	; <UNPREDICTABLE>
   22ac4:	andeq	r8, r2, ip, lsl #29
   22ac8:	andeq	pc, r2, r0, lsr #12
   22acc:	push	{r4, r5, r6, lr}
   22ad0:	sub	sp, sp, #32
   22ad4:	ldr	r4, [pc, #128]	; 22b5c <g_strcmp0@plt+0xccdc>
   22ad8:	mov	r5, r1
   22adc:	ldr	r3, [r4]
   22ae0:	str	r3, [sp, #28]
   22ae4:	bl	15328 <gtk_tree_view_get_model@plt>
   22ae8:	mov	r2, r5
   22aec:	add	r1, sp, #12
   22af0:	mov	r6, r0
   22af4:	bl	15d6c <gtk_tree_model_get_iter@plt>
   22af8:	cmp	r0, #0
   22afc:	beq	22b44 <g_strcmp0@plt+0xccc4>
   22b00:	mvn	r3, #0
   22b04:	add	r1, sp, #12
   22b08:	mov	r0, r6
   22b0c:	str	r3, [sp]
   22b10:	mov	r2, #2
   22b14:	add	r3, sp, #8
   22b18:	bl	15d9c <gtk_tree_model_get@plt>
   22b1c:	ldr	r0, [sp, #8]
   22b20:	bl	229fc <g_strcmp0@plt+0xcb7c>
   22b24:	ldr	r0, [sp, #8]
   22b28:	bl	15874 <g_free@plt>
   22b2c:	ldr	r2, [sp, #28]
   22b30:	ldr	r3, [r4]
   22b34:	cmp	r2, r3
   22b38:	bne	22b58 <g_strcmp0@plt+0xccd8>
   22b3c:	add	sp, sp, #32
   22b40:	pop	{r4, r5, r6, pc}
   22b44:	ldr	r2, [pc, #20]	; 22b60 <g_strcmp0@plt+0xcce0>
   22b48:	mov	r1, #16
   22b4c:	ldr	r0, [pc, #16]	; 22b64 <g_strcmp0@plt+0xcce4>
   22b50:	bl	151f0 <g_log@plt>
   22b54:	b	22b2c <g_strcmp0@plt+0xccac>
   22b58:	bl	157f0 <__stack_chk_fail@plt>
   22b5c:	andeq	r0, r4, r0, asr lr
   22b60:	andeq	pc, r2, r8, asr #12
   22b64:	andeq	r8, r2, ip, lsl #29
   22b68:	push	{r4, r5, lr}
   22b6c:	sub	sp, sp, #44	; 0x2c
   22b70:	ldr	r4, [pc, #156]	; 22c14 <g_strcmp0@plt+0xcd94>
   22b74:	ldr	r2, [r1, #12]
   22b78:	ldr	r1, [pc, #152]	; 22c18 <g_strcmp0@plt+0xcd98>
   22b7c:	ldr	r3, [r4]
   22b80:	ldr	r0, [r2]
   22b84:	str	r3, [sp, #36]	; 0x24
   22b88:	bl	15418 <gtk_builder_get_object@plt>
   22b8c:	mov	r5, r0
   22b90:	bl	15808 <gtk_tree_view_get_type@plt>
   22b94:	mov	r1, r0
   22b98:	mov	r0, r5
   22b9c:	bl	15148 <g_type_check_instance_cast@plt>
   22ba0:	bl	1594c <gtk_tree_view_get_selection@plt>
   22ba4:	add	r2, sp, #20
   22ba8:	add	r1, sp, #12
   22bac:	bl	1591c <gtk_tree_selection_get_selected@plt>
   22bb0:	cmp	r0, #0
   22bb4:	beq	22bfc <g_strcmp0@plt+0xcd7c>
   22bb8:	mvn	r3, #0
   22bbc:	add	r1, sp, #20
   22bc0:	str	r3, [sp]
   22bc4:	mov	r2, #2
   22bc8:	add	r3, sp, #16
   22bcc:	ldr	r0, [sp, #12]
   22bd0:	bl	15d9c <gtk_tree_model_get@plt>
   22bd4:	ldr	r0, [sp, #16]
   22bd8:	bl	229fc <g_strcmp0@plt+0xcb7c>
   22bdc:	ldr	r0, [sp, #16]
   22be0:	bl	15874 <g_free@plt>
   22be4:	ldr	r2, [sp, #36]	; 0x24
   22be8:	ldr	r3, [r4]
   22bec:	cmp	r2, r3
   22bf0:	bne	22c10 <g_strcmp0@plt+0xcd90>
   22bf4:	add	sp, sp, #44	; 0x2c
   22bf8:	pop	{r4, r5, pc}
   22bfc:	ldr	r2, [pc, #24]	; 22c1c <g_strcmp0@plt+0xcd9c>
   22c00:	mov	r1, #16
   22c04:	ldr	r0, [pc, #20]	; 22c20 <g_strcmp0@plt+0xcda0>
   22c08:	bl	151f0 <g_log@plt>
   22c0c:	b	22be4 <g_strcmp0@plt+0xcd64>
   22c10:	bl	157f0 <__stack_chk_fail@plt>
   22c14:	andeq	r0, r4, r0, asr lr
   22c18:	andeq	pc, r2, r0, ror #12
   22c1c:	andeq	pc, r2, r8, asr #12
   22c20:	andeq	r8, r2, ip, lsl #29
   22c24:	push	{r4, lr}
   22c28:	mcr	15, 0, r0, cr7, cr10, {5}
   22c2c:	ldr	r4, [pc, #60]	; 22c70 <g_strcmp0@plt+0xcdf0>
   22c30:	ldr	r3, [r4, #8]
   22c34:	mcr	15, 0, r0, cr7, cr10, {5}
   22c38:	cmp	r3, #0
   22c3c:	beq	22c48 <g_strcmp0@plt+0xcdc8>
   22c40:	ldr	r0, [r4, #8]
   22c44:	pop	{r4, pc}
   22c48:	add	r0, r4, #8
   22c4c:	bl	1567c <g_once_init_enter@plt>
   22c50:	cmp	r0, #0
   22c54:	beq	22c40 <g_strcmp0@plt+0xcdc0>
   22c58:	bl	22838 <g_strcmp0@plt+0xc9b8>
   22c5c:	mov	r1, r0
   22c60:	add	r0, r4, #8
   22c64:	bl	15b98 <g_once_init_leave@plt>
   22c68:	ldr	r0, [r4, #8]
   22c6c:	pop	{r4, pc}
   22c70:	andeq	r1, r4, r8, lsl #18
   22c74:	push	{r4, r5, r6, r7, r8, r9, lr}
   22c78:	sub	sp, sp, #20
   22c7c:	ldr	r8, [pc, #972]	; 23050 <g_strcmp0@plt+0xd1d0>
   22c80:	mov	r2, #0
   22c84:	mov	r5, r0
   22c88:	ldr	r3, [r8]
   22c8c:	str	r2, [sp, #8]
   22c90:	str	r3, [sp, #12]
   22c94:	bl	22c24 <g_strcmp0@plt+0xcda4>
   22c98:	mov	r1, r0
   22c9c:	mov	r0, r5
   22ca0:	bl	155f8 <g_type_instance_get_private@plt>
   22ca4:	str	r0, [r5, #12]
   22ca8:	mov	r4, r0
   22cac:	bl	15afc <gtk_builder_new@plt>
   22cb0:	ldr	r3, [r5, #12]
   22cb4:	add	r2, sp, #8
   22cb8:	ldr	r1, [pc, #916]	; 23054 <g_strcmp0@plt+0xd1d4>
   22cbc:	str	r0, [r4]
   22cc0:	ldr	r0, [r3]
   22cc4:	bl	15e08 <gtk_builder_add_from_file@plt>
   22cc8:	cmp	r0, #0
   22ccc:	beq	23028 <g_strcmp0@plt+0xd1a8>
   22cd0:	ldr	r3, [r5, #12]
   22cd4:	ldr	r1, [pc, #892]	; 23058 <g_strcmp0@plt+0xd1d8>
   22cd8:	mov	r4, #0
   22cdc:	ldr	r0, [r3]
   22ce0:	bl	15418 <gtk_builder_get_object@plt>
   22ce4:	mov	r7, r0
   22ce8:	bl	150f4 <gtk_widget_get_type@plt>
   22cec:	mov	r6, r0
   22cf0:	mov	r1, r0
   22cf4:	mov	r0, r7
   22cf8:	bl	15148 <g_type_check_instance_cast@plt>
   22cfc:	mov	r3, r5
   22d00:	ldr	r2, [pc, #852]	; 2305c <g_strcmp0@plt+0xd1dc>
   22d04:	ldr	r1, [pc, #852]	; 23060 <g_strcmp0@plt+0xd1e0>
   22d08:	str	r4, [sp, #4]
   22d0c:	str	r4, [sp]
   22d10:	mov	r9, r0
   22d14:	bl	15670 <g_signal_connect_data@plt>
   22d18:	bl	15e38 <gtk_window_get_type@plt>
   22d1c:	mov	r7, r0
   22d20:	mov	r1, r0
   22d24:	mov	r0, r9
   22d28:	bl	15148 <g_type_check_instance_cast@plt>
   22d2c:	ldr	r1, [pc, #816]	; 23064 <g_strcmp0@plt+0xd1e4>
   22d30:	bl	152bc <gtk_window_set_icon_name@plt>
   22d34:	mov	r1, r7
   22d38:	mov	r0, r9
   22d3c:	bl	15148 <g_type_check_instance_cast@plt>
   22d40:	mov	r2, #300	; 0x12c
   22d44:	mov	r1, #600	; 0x258
   22d48:	bl	24624 <g_strcmp0@plt+0xe7a4>
   22d4c:	ldr	r3, [r5, #12]
   22d50:	ldr	r1, [pc, #784]	; 23068 <g_strcmp0@plt+0xd1e8>
   22d54:	ldr	r0, [r3]
   22d58:	bl	15418 <gtk_builder_get_object@plt>
   22d5c:	mov	r1, r6
   22d60:	bl	15148 <g_type_check_instance_cast@plt>
   22d64:	ldr	r2, [pc, #768]	; 2306c <g_strcmp0@plt+0xd1ec>
   22d68:	mov	r3, r5
   22d6c:	ldr	r1, [pc, #764]	; 23070 <g_strcmp0@plt+0xd1f0>
   22d70:	str	r4, [sp, #4]
   22d74:	str	r4, [sp]
   22d78:	bl	15670 <g_signal_connect_data@plt>
   22d7c:	ldr	r3, [r5, #12]
   22d80:	ldr	r1, [pc, #748]	; 23074 <g_strcmp0@plt+0xd1f4>
   22d84:	ldr	r0, [r3]
   22d88:	bl	15418 <gtk_builder_get_object@plt>
   22d8c:	mov	r1, r6
   22d90:	bl	15148 <g_type_check_instance_cast@plt>
   22d94:	bl	1519c <gtk_widget_hide@plt>
   22d98:	ldr	r3, [r5, #12]
   22d9c:	ldr	r1, [pc, #724]	; 23078 <g_strcmp0@plt+0xd1f8>
   22da0:	ldr	r0, [r3]
   22da4:	bl	15418 <gtk_builder_get_object@plt>
   22da8:	mov	r1, r6
   22dac:	bl	15148 <g_type_check_instance_cast@plt>
   22db0:	bl	1519c <gtk_widget_hide@plt>
   22db4:	ldr	r3, [r5, #12]
   22db8:	ldr	r1, [pc, #664]	; 23058 <g_strcmp0@plt+0xd1d8>
   22dbc:	ldr	r0, [r3]
   22dc0:	bl	15418 <gtk_builder_get_object@plt>
   22dc4:	mov	r1, r6
   22dc8:	bl	15148 <g_type_check_instance_cast@plt>
   22dcc:	mov	r1, r7
   22dd0:	mov	r9, r0
   22dd4:	bl	15148 <g_type_check_instance_cast@plt>
   22dd8:	ldr	r1, [pc, #644]	; 23064 <g_strcmp0@plt+0xd1e4>
   22ddc:	bl	152bc <gtk_window_set_icon_name@plt>
   22de0:	mov	r1, r7
   22de4:	mov	r0, r9
   22de8:	bl	15148 <g_type_check_instance_cast@plt>
   22dec:	mov	r2, #5
   22df0:	ldr	r1, [pc, #644]	; 2307c <g_strcmp0@plt+0xd1fc>
   22df4:	mov	r7, r0
   22df8:	mov	r0, r4
   22dfc:	bl	15880 <dcgettext@plt>
   22e00:	mov	r1, r0
   22e04:	mov	r0, r7
   22e08:	bl	15598 <gtk_window_set_title@plt>
   22e0c:	mov	r2, #5
   22e10:	ldr	r1, [pc, #616]	; 23080 <g_strcmp0@plt+0xd200>
   22e14:	mov	r0, r4
   22e18:	bl	15880 <dcgettext@plt>
   22e1c:	bl	152f8 <gtk_button_new_with_mnemonic@plt>
   22e20:	mov	r7, r0
   22e24:	bl	15928 <gtk_dialog_get_type@plt>
   22e28:	mov	r1, r0
   22e2c:	mov	r0, r9
   22e30:	bl	15148 <g_type_check_instance_cast@plt>
   22e34:	bl	14f44 <gtk_dialog_get_action_area@plt>
   22e38:	mov	r9, r0
   22e3c:	bl	15664 <gtk_box_get_type@plt>
   22e40:	mov	r1, r0
   22e44:	mov	r0, r9
   22e48:	bl	15148 <g_type_check_instance_cast@plt>
   22e4c:	mov	r1, r7
   22e50:	mov	r3, r4
   22e54:	mov	r2, r4
   22e58:	str	r4, [sp]
   22e5c:	bl	15700 <gtk_box_pack_start@plt>
   22e60:	mov	r0, r7
   22e64:	bl	15b50 <gtk_widget_show@plt>
   22e68:	mov	r3, r5
   22e6c:	mov	r0, r7
   22e70:	ldr	r2, [pc, #524]	; 23084 <g_strcmp0@plt+0xd204>
   22e74:	ldr	r1, [pc, #500]	; 23070 <g_strcmp0@plt+0xd1f0>
   22e78:	str	r4, [sp, #4]
   22e7c:	str	r4, [sp]
   22e80:	bl	15670 <g_signal_connect_data@plt>
   22e84:	mov	r3, #64	; 0x40
   22e88:	mov	r2, r3
   22e8c:	str	r3, [sp]
   22e90:	mov	r1, r3
   22e94:	mov	r0, #3
   22e98:	ldr	r7, [r5, #12]
   22e9c:	bl	15814 <gtk_list_store_new@plt>
   22ea0:	ldr	r3, [r5, #12]
   22ea4:	ldr	r1, [pc, #476]	; 23088 <g_strcmp0@plt+0xd208>
   22ea8:	str	r0, [r7, #4]
   22eac:	ldr	r0, [r3]
   22eb0:	bl	15418 <gtk_builder_get_object@plt>
   22eb4:	mov	r1, r6
   22eb8:	bl	15148 <g_type_check_instance_cast@plt>
   22ebc:	mov	r6, r0
   22ec0:	bl	15808 <gtk_tree_view_get_type@plt>
   22ec4:	mov	r7, r0
   22ec8:	mov	r1, r0
   22ecc:	mov	r0, r6
   22ed0:	bl	15148 <g_type_check_instance_cast@plt>
   22ed4:	mov	r9, r0
   22ed8:	bl	15958 <gtk_tree_model_get_type@plt>
   22edc:	ldr	r3, [r5, #12]
   22ee0:	mov	r1, r0
   22ee4:	ldr	r0, [r3, #4]
   22ee8:	bl	15148 <g_type_check_instance_cast@plt>
   22eec:	mov	r1, r0
   22ef0:	mov	r0, r9
   22ef4:	bl	15118 <gtk_tree_view_set_model@plt>
   22ef8:	mov	r1, r7
   22efc:	mov	r0, r6
   22f00:	bl	15148 <g_type_check_instance_cast@plt>
   22f04:	mov	r3, r5
   22f08:	ldr	r2, [pc, #380]	; 2308c <g_strcmp0@plt+0xd20c>
   22f0c:	ldr	r1, [pc, #380]	; 23090 <g_strcmp0@plt+0xd210>
   22f10:	str	r4, [sp, #4]
   22f14:	str	r4, [sp]
   22f18:	bl	15670 <g_signal_connect_data@plt>
   22f1c:	mov	r1, r7
   22f20:	mov	r0, r6
   22f24:	bl	15148 <g_type_check_instance_cast@plt>
   22f28:	bl	1594c <gtk_tree_view_get_selection@plt>
   22f2c:	mov	r3, r5
   22f30:	ldr	r2, [pc, #348]	; 23094 <g_strcmp0@plt+0xd214>
   22f34:	ldr	r1, [pc, #348]	; 23098 <g_strcmp0@plt+0xd218>
   22f38:	str	r4, [sp, #4]
   22f3c:	str	r4, [sp]
   22f40:	bl	15670 <g_signal_connect_data@plt>
   22f44:	mov	r1, r7
   22f48:	mov	r0, r6
   22f4c:	bl	15148 <g_type_check_instance_cast@plt>
   22f50:	mov	r9, r0
   22f54:	bl	158f8 <gtk_cell_renderer_pixbuf_new@plt>
   22f58:	mov	r3, r4
   22f5c:	mov	r2, #6
   22f60:	ldr	r1, [pc, #308]	; 2309c <g_strcmp0@plt+0xd21c>
   22f64:	mov	r5, r0
   22f68:	bl	158c8 <g_object_set@plt>
   22f6c:	mov	r2, #5
   22f70:	ldr	r1, [pc, #296]	; 230a0 <g_strcmp0@plt+0xd220>
   22f74:	mov	r0, r4
   22f78:	bl	15880 <dcgettext@plt>
   22f7c:	mov	r3, r4
   22f80:	ldr	r2, [pc, #284]	; 230a4 <g_strcmp0@plt+0xd224>
   22f84:	mov	r1, r5
   22f88:	str	r4, [sp]
   22f8c:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   22f90:	mov	r1, r0
   22f94:	mov	r0, r9
   22f98:	bl	14f20 <gtk_tree_view_append_column@plt>
   22f9c:	bl	15574 <gtk_cell_renderer_text_new@plt>
   22fa0:	mov	r2, #5
   22fa4:	ldr	r1, [pc, #252]	; 230a8 <g_strcmp0@plt+0xd228>
   22fa8:	mov	r5, r0
   22fac:	mov	r0, r4
   22fb0:	bl	15880 <dcgettext@plt>
   22fb4:	mov	r3, #1
   22fb8:	ldr	r2, [pc, #236]	; 230ac <g_strcmp0@plt+0xd22c>
   22fbc:	mov	r1, r5
   22fc0:	str	r4, [sp]
   22fc4:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   22fc8:	mov	r1, #1
   22fcc:	mov	r5, r0
   22fd0:	bl	15358 <gtk_tree_view_column_set_sort_column_id@plt>
   22fd4:	mov	r1, r5
   22fd8:	mov	r0, r9
   22fdc:	bl	14f20 <gtk_tree_view_append_column@plt>
   22fe0:	mov	r0, r5
   22fe4:	mov	r1, #1
   22fe8:	bl	158b0 <gtk_tree_view_column_set_expand@plt>
   22fec:	mov	r1, r7
   22ff0:	mov	r0, r6
   22ff4:	bl	15148 <g_type_check_instance_cast@plt>
   22ff8:	bl	15160 <gtk_tree_view_columns_autosize@plt>
   22ffc:	mov	r1, r7
   23000:	mov	r0, r6
   23004:	bl	15148 <g_type_check_instance_cast@plt>
   23008:	mov	r1, r4
   2300c:	bl	15d48 <gtk_tree_view_set_headers_visible@plt>
   23010:	ldr	r2, [sp, #12]
   23014:	ldr	r3, [r8]
   23018:	cmp	r2, r3
   2301c:	bne	2304c <g_strcmp0@plt+0xd1cc>
   23020:	add	sp, sp, #20
   23024:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23028:	ldr	r3, [sp, #8]
   2302c:	ldr	r2, [pc, #124]	; 230b0 <g_strcmp0@plt+0xd230>
   23030:	mov	r1, #16
   23034:	ldr	r3, [r3, #8]
   23038:	ldr	r0, [pc, #116]	; 230b4 <g_strcmp0@plt+0xd234>
   2303c:	bl	151f0 <g_log@plt>
   23040:	ldr	r0, [sp, #8]
   23044:	bl	15064 <g_error_free@plt>
   23048:	b	22cd0 <g_strcmp0@plt+0xce50>
   2304c:	bl	157f0 <__stack_chk_fail@plt>
   23050:	andeq	r0, r4, r0, asr lr
   23054:	andeq	pc, r2, r0, ror r6	; <UNPREDICTABLE>
   23058:	andeq	pc, r2, ip, ror #11
   2305c:			; <UNDEFINED> instruction: 0x000228b8
   23060:	ldrdeq	pc, [r2], -ip
   23064:	muleq	r2, r4, r6
   23068:	andeq	pc, r2, ip, ror #7
   2306c:	andeq	r2, r2, r4, lsl #17
   23070:	strdeq	pc, [r2], -ip
   23074:	andeq	pc, r2, ip, lsr #13
   23078:			; <UNDEFINED> instruction: 0x0002f6b8
   2307c:	andeq	pc, r2, r8, asr #13
   23080:	andeq	pc, r2, r0, ror #13
   23084:	andeq	r2, r2, r8, ror #22
   23088:	andeq	pc, r2, r0, ror #12
   2308c:	andeq	r2, r2, ip, asr #21
   23090:	andeq	pc, r2, r8, ror #13
   23094:	strdeq	r2, [r2], -r0
   23098:	strdeq	pc, [r2], -r8
   2309c:			; <UNDEFINED> instruction: 0x0002f3b4
   230a0:	andeq	pc, r2, r0, lsl #14
   230a4:	andeq	pc, r2, r0, asr #7
   230a8:	andeq	pc, r2, r8, lsl #14
   230ac:	ldrdeq	pc, [r2], -r4
   230b0:	andeq	pc, r2, ip, ror r3	; <UNPREDICTABLE>
   230b4:	andeq	r8, r2, ip, lsl #29
   230b8:	push	{r4, r5, r6, r7, r8, lr}
   230bc:	mov	r4, r0
   230c0:	bl	22c24 <g_strcmp0@plt+0xcda4>
   230c4:	cmp	r4, #0
   230c8:	beq	231a8 <g_strcmp0@plt+0xd328>
   230cc:	ldr	r3, [r4]
   230d0:	cmp	r3, #0
   230d4:	beq	230e4 <g_strcmp0@plt+0xd264>
   230d8:	ldr	r3, [r3]
   230dc:	cmp	r3, r0
   230e0:	beq	230f8 <g_strcmp0@plt+0xd278>
   230e4:	mov	r1, r0
   230e8:	mov	r0, r4
   230ec:	bl	159dc <g_type_check_instance_is_a@plt>
   230f0:	cmp	r0, #0
   230f4:	beq	231a8 <g_strcmp0@plt+0xd328>
   230f8:	bl	22c24 <g_strcmp0@plt+0xcda4>
   230fc:	mov	r1, r0
   23100:	mov	r0, r4
   23104:	bl	15148 <g_type_check_instance_cast@plt>
   23108:	ldr	r1, [pc, #172]	; 231bc <g_strcmp0@plt+0xd33c>
   2310c:	ldr	r3, [r0, #12]
   23110:	mov	r5, r0
   23114:	ldr	r0, [r3]
   23118:	bl	15418 <gtk_builder_get_object@plt>
   2311c:	mov	r7, r0
   23120:	bl	150f4 <gtk_widget_get_type@plt>
   23124:	mov	r1, r0
   23128:	mov	r6, r0
   2312c:	mov	r0, r7
   23130:	bl	15148 <g_type_check_instance_cast@plt>
   23134:	subs	r7, r0, #0
   23138:	beq	23170 <g_strcmp0@plt+0xd2f0>
   2313c:	ldr	r3, [r7]
   23140:	cmp	r3, #0
   23144:	beq	23154 <g_strcmp0@plt+0xd2d4>
   23148:	ldr	r3, [r3]
   2314c:	cmp	r6, r3
   23150:	beq	23168 <g_strcmp0@plt+0xd2e8>
   23154:	mov	r1, r6
   23158:	mov	r0, r7
   2315c:	bl	159dc <g_type_check_instance_is_a@plt>
   23160:	cmp	r0, #0
   23164:	beq	23170 <g_strcmp0@plt+0xd2f0>
   23168:	mov	r0, r7
   2316c:	bl	1519c <gtk_widget_hide@plt>
   23170:	ldr	r3, [r5, #12]
   23174:	ldr	r0, [r3]
   23178:	bl	15b5c <g_object_unref@plt>
   2317c:	ldr	r3, [r5, #12]
   23180:	ldr	r0, [r3, #4]
   23184:	bl	15b5c <g_object_unref@plt>
   23188:	ldr	r3, [pc, #48]	; 231c0 <g_strcmp0@plt+0xd340>
   2318c:	mov	r1, #80	; 0x50
   23190:	ldr	r0, [r3]
   23194:	bl	15dc0 <g_type_check_class_cast@plt>
   23198:	ldr	r3, [r0, #24]
   2319c:	mov	r0, r4
   231a0:	pop	{r4, r5, r6, r7, r8, lr}
   231a4:	bx	r3
   231a8:	ldr	r2, [pc, #20]	; 231c4 <g_strcmp0@plt+0xd344>
   231ac:	ldr	r1, [pc, #20]	; 231c8 <g_strcmp0@plt+0xd348>
   231b0:	ldr	r0, [pc, #20]	; 231cc <g_strcmp0@plt+0xd34c>
   231b4:	pop	{r4, r5, r6, r7, r8, lr}
   231b8:	b	14fd4 <g_return_if_fail_warning@plt>
   231bc:	andeq	pc, r2, ip, ror #11
   231c0:	andeq	r1, r4, r8, lsl #18
   231c4:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   231c8:	muleq	r2, r4, r5
   231cc:	andeq	r8, r2, ip, lsl #29
   231d0:	push	{r4, r5, r6, lr}
   231d4:	mov	r5, r0
   231d8:	mov	r4, r1
   231dc:	bl	22c24 <g_strcmp0@plt+0xcda4>
   231e0:	cmp	r5, #0
   231e4:	beq	23244 <g_strcmp0@plt+0xd3c4>
   231e8:	ldr	r3, [r5]
   231ec:	cmp	r3, #0
   231f0:	beq	23200 <g_strcmp0@plt+0xd380>
   231f4:	ldr	r3, [r3]
   231f8:	cmp	r3, r0
   231fc:	beq	23214 <g_strcmp0@plt+0xd394>
   23200:	mov	r1, r0
   23204:	mov	r0, r5
   23208:	bl	159dc <g_type_check_instance_is_a@plt>
   2320c:	cmp	r0, #0
   23210:	beq	23244 <g_strcmp0@plt+0xd3c4>
   23214:	cmp	r4, #0
   23218:	beq	2325c <g_strcmp0@plt+0xd3dc>
   2321c:	ldr	r3, [r5, #12]
   23220:	ldr	r0, [r3, #4]
   23224:	bl	15dcc <gtk_list_store_clear@plt>
   23228:	ldr	r3, [r4]
   2322c:	ldr	r2, [pc, #64]	; 23274 <g_strcmp0@plt+0xd3f4>
   23230:	mov	r1, #128	; 0x80
   23234:	ldr	r0, [pc, #60]	; 23278 <g_strcmp0@plt+0xd3f8>
   23238:	bl	151f0 <g_log@plt>
   2323c:	mov	r0, #1
   23240:	pop	{r4, r5, r6, pc}
   23244:	ldr	r2, [pc, #48]	; 2327c <g_strcmp0@plt+0xd3fc>
   23248:	ldr	r1, [pc, #48]	; 23280 <g_strcmp0@plt+0xd400>
   2324c:	ldr	r0, [pc, #36]	; 23278 <g_strcmp0@plt+0xd3f8>
   23250:	bl	14fd4 <g_return_if_fail_warning@plt>
   23254:	mov	r0, #0
   23258:	pop	{r4, r5, r6, pc}
   2325c:	ldr	r2, [pc, #32]	; 23284 <g_strcmp0@plt+0xd404>
   23260:	ldr	r1, [pc, #24]	; 23280 <g_strcmp0@plt+0xd400>
   23264:	ldr	r0, [pc, #12]	; 23278 <g_strcmp0@plt+0xd3f8>
   23268:	bl	14fd4 <g_return_if_fail_warning@plt>
   2326c:	mov	r0, r4
   23270:	pop	{r4, r5, r6, pc}
   23274:	andeq	pc, r2, ip, asr r7	; <UNPREDICTABLE>
   23278:	andeq	r8, r2, ip, lsl #29
   2327c:	andeq	pc, r2, ip, lsr #14
   23280:	andeq	pc, r2, ip, lsr #11
   23284:	andeq	pc, r2, r8, asr #14
   23288:	push	{r4, r5, r6, lr}
   2328c:	mov	r5, r0
   23290:	mov	r4, r1
   23294:	bl	22c24 <g_strcmp0@plt+0xcda4>
   23298:	cmp	r5, #0
   2329c:	beq	23324 <g_strcmp0@plt+0xd4a4>
   232a0:	ldr	r3, [r5]
   232a4:	cmp	r3, #0
   232a8:	beq	232b8 <g_strcmp0@plt+0xd438>
   232ac:	ldr	r3, [r3]
   232b0:	cmp	r3, r0
   232b4:	beq	232cc <g_strcmp0@plt+0xd44c>
   232b8:	mov	r1, r0
   232bc:	mov	r0, r5
   232c0:	bl	159dc <g_type_check_instance_is_a@plt>
   232c4:	cmp	r0, #0
   232c8:	beq	23324 <g_strcmp0@plt+0xd4a4>
   232cc:	cmp	r4, #0
   232d0:	beq	2333c <g_strcmp0@plt+0xd4bc>
   232d4:	ldr	r3, [r5, #12]
   232d8:	ldr	r1, [pc, #116]	; 23354 <g_strcmp0@plt+0xd4d4>
   232dc:	ldr	r0, [r3]
   232e0:	bl	15418 <gtk_builder_get_object@plt>
   232e4:	mov	r5, r0
   232e8:	bl	15e38 <gtk_window_get_type@plt>
   232ec:	mov	r1, r0
   232f0:	mov	r0, r5
   232f4:	bl	15148 <g_type_check_instance_cast@plt>
   232f8:	mov	r1, r4
   232fc:	mov	r5, r0
   23300:	bl	15bec <gtk_window_set_transient_for@plt>
   23304:	mov	r0, r5
   23308:	mov	r1, #1
   2330c:	bl	15cac <gtk_window_set_modal@plt>
   23310:	mov	r0, r5
   23314:	mov	r1, #1
   23318:	bl	14f38 <gtk_window_set_type_hint@plt>
   2331c:	mov	r0, #1
   23320:	pop	{r4, r5, r6, pc}
   23324:	ldr	r2, [pc, #44]	; 23358 <g_strcmp0@plt+0xd4d8>
   23328:	ldr	r1, [pc, #44]	; 2335c <g_strcmp0@plt+0xd4dc>
   2332c:	ldr	r0, [pc, #44]	; 23360 <g_strcmp0@plt+0xd4e0>
   23330:	bl	14fd4 <g_return_if_fail_warning@plt>
   23334:	mov	r0, #0
   23338:	pop	{r4, r5, r6, pc}
   2333c:	ldr	r2, [pc, #32]	; 23364 <g_strcmp0@plt+0xd4e4>
   23340:	ldr	r1, [pc, #20]	; 2335c <g_strcmp0@plt+0xd4dc>
   23344:	ldr	r0, [pc, #20]	; 23360 <g_strcmp0@plt+0xd4e0>
   23348:	bl	14fd4 <g_return_if_fail_warning@plt>
   2334c:	mov	r0, r4
   23350:	pop	{r4, r5, r6, pc}
   23354:	andeq	pc, r2, ip, ror #11
   23358:	andeq	pc, r2, ip, lsr #14
   2335c:	andeq	pc, r2, r0, asr #11
   23360:	andeq	r8, r2, ip, lsl #29
   23364:	andeq	pc, r2, r8, ror r7	; <UNPREDICTABLE>
   23368:	push	{r4, lr}
   2336c:	bl	22c24 <g_strcmp0@plt+0xcda4>
   23370:	mov	r1, #0
   23374:	bl	14ef0 <g_object_new@plt>
   23378:	mov	r4, r0
   2337c:	bl	22c24 <g_strcmp0@plt+0xcda4>
   23380:	mov	r1, r0
   23384:	mov	r0, r4
   23388:	pop	{r4, lr}
   2338c:	b	15148 <g_type_check_instance_cast@plt>
   23390:	push	{lr}		; (str lr, [sp, #-4]!)
   23394:	sub	sp, sp, #20
   23398:	ldr	r0, [pc, #48]	; 233d0 <g_strcmp0@plt+0xd550>
   2339c:	bl	15748 <g_intern_static_string@plt>
   233a0:	ldr	r1, [pc, #44]	; 233d4 <g_strcmp0@plt+0xd554>
   233a4:	mov	r2, #0
   233a8:	mov	r3, #16
   233ac:	stmib	sp, {r1, r2}
   233b0:	str	r3, [sp]
   233b4:	mov	r2, #72	; 0x48
   233b8:	ldr	r3, [pc, #24]	; 233d8 <g_strcmp0@plt+0xd558>
   233bc:	mov	r1, r0
   233c0:	mov	r0, #80	; 0x50
   233c4:	bl	14fe0 <g_type_register_static_simple@plt>
   233c8:	add	sp, sp, #20
   233cc:	pop	{pc}		; (ldr pc, [sp], #4)
   233d0:	ldrdeq	pc, [r2], -ip
   233d4:			; <UNDEFINED> instruction: 0x000236bc
   233d8:	andeq	r3, r2, ip, lsr #9
   233dc:	push	{r4, r5, lr}
   233e0:	mov	r4, r1
   233e4:	sub	sp, sp, #12
   233e8:	ldr	r3, [r4, #12]
   233ec:	ldr	r1, [pc, #72]	; 2343c <g_strcmp0@plt+0xd5bc>
   233f0:	ldr	r0, [r3]
   233f4:	bl	15418 <gtk_builder_get_object@plt>
   233f8:	mov	r5, r0
   233fc:	bl	150f4 <gtk_widget_get_type@plt>
   23400:	mov	r1, r0
   23404:	mov	r0, r5
   23408:	bl	15148 <g_type_check_instance_cast@plt>
   2340c:	bl	1519c <gtk_widget_hide@plt>
   23410:	ldr	r3, [r4, #12]
   23414:	ldr	r2, [pc, #36]	; 23440 <g_strcmp0@plt+0xd5c0>
   23418:	mov	r0, r4
   2341c:	ldr	r3, [r3, #4]
   23420:	ldr	r1, [r2]
   23424:	str	r3, [sp]
   23428:	mov	r2, #0
   2342c:	mvn	r3, #7
   23430:	bl	15394 <g_signal_emit@plt>
   23434:	add	sp, sp, #12
   23438:	pop	{r4, r5, pc}
   2343c:	andeq	pc, r2, ip, ror #11
   23440:	andeq	r1, r4, r4, lsl r9
   23444:	push	{r4, r5, lr}
   23448:	mov	r4, r1
   2344c:	sub	sp, sp, #12
   23450:	ldr	r3, [r4, #12]
   23454:	ldr	r1, [pc, #72]	; 234a4 <g_strcmp0@plt+0xd624>
   23458:	ldr	r0, [r3]
   2345c:	bl	15418 <gtk_builder_get_object@plt>
   23460:	mov	r5, r0
   23464:	bl	150f4 <gtk_widget_get_type@plt>
   23468:	mov	r1, r0
   2346c:	mov	r0, r5
   23470:	bl	15148 <g_type_check_instance_cast@plt>
   23474:	bl	1519c <gtk_widget_hide@plt>
   23478:	ldr	r3, [r4, #12]
   2347c:	ldr	r2, [pc, #36]	; 234a8 <g_strcmp0@plt+0xd628>
   23480:	mov	r0, r4
   23484:	ldr	r3, [r3, #4]
   23488:	ldr	r1, [r2]
   2348c:	str	r3, [sp]
   23490:	mov	r2, #0
   23494:	mvn	r3, #8
   23498:	bl	15394 <g_signal_emit@plt>
   2349c:	add	sp, sp, #12
   234a0:	pop	{r4, r5, pc}
   234a4:	andeq	pc, r2, ip, ror #11
   234a8:	andeq	r1, r4, r4, lsl r9
   234ac:	push	{r4, r5, r6, lr}
   234b0:	sub	sp, sp, #32
   234b4:	mov	r5, r0
   234b8:	bl	15c58 <g_type_class_peek_parent@plt>
   234bc:	ldr	r4, [pc, #140]	; 23550 <g_strcmp0@plt+0xd6d0>
   234c0:	ldr	r3, [r4, #8]
   234c4:	cmp	r3, #0
   234c8:	str	r0, [r4, #4]
   234cc:	bne	23540 <g_strcmp0@plt+0xd6c0>
   234d0:	mov	r1, #80	; 0x50
   234d4:	mov	r0, r5
   234d8:	bl	15dc0 <g_type_check_class_cast@plt>
   234dc:	ldr	r3, [pc, #112]	; 23554 <g_strcmp0@plt+0xd6d4>
   234e0:	mov	r1, #12
   234e4:	mov	r6, r0
   234e8:	mov	r0, r5
   234ec:	str	r3, [r6, #24]
   234f0:	bl	15988 <g_type_class_add_private@plt>
   234f4:	ldr	r0, [pc, #92]	; 23558 <g_strcmp0@plt+0xd6d8>
   234f8:	mov	r3, #64	; 0x40
   234fc:	ldr	r1, [r6]
   23500:	mov	ip, #28
   23504:	mov	r2, #2
   23508:	str	r0, [sp, #8]
   2350c:	str	r3, [sp, #24]
   23510:	mov	r0, #4
   23514:	mov	r3, #0
   23518:	str	r0, [sp, #12]
   2351c:	str	ip, [sp, #20]
   23520:	str	r2, [sp, #16]
   23524:	str	r3, [sp, #4]
   23528:	str	r3, [sp]
   2352c:	ldr	r0, [pc, #40]	; 2355c <g_strcmp0@plt+0xd6dc>
   23530:	bl	154e4 <g_signal_new@plt>
   23534:	str	r0, [r4]
   23538:	add	sp, sp, #32
   2353c:	pop	{r4, r5, r6, pc}
   23540:	add	r1, r4, #8
   23544:	mov	r0, r5
   23548:	bl	15028 <g_type_class_adjust_private_offset@plt>
   2354c:	b	234d0 <g_strcmp0@plt+0xd650>
   23550:	andeq	r1, r4, r4, lsl r9
   23554:	andeq	r3, r2, r8, lsl #22
   23558:	andeq	r6, r2, r0, lsr #26
   2355c:	andeq	sl, r2, r4, asr r0
   23560:	push	{r4, r5, lr}
   23564:	sub	sp, sp, #36	; 0x24
   23568:	ldr	r4, [pc, #144]	; 23600 <g_strcmp0@plt+0xd780>
   2356c:	mov	r5, r1
   23570:	add	r2, sp, #12
   23574:	ldr	r3, [r4]
   23578:	add	r1, sp, #8
   2357c:	str	r3, [sp, #28]
   23580:	bl	1591c <gtk_tree_selection_get_selected@plt>
   23584:	cmp	r0, #0
   23588:	beq	235e8 <g_strcmp0@plt+0xd768>
   2358c:	ldr	r3, [r5, #12]
   23590:	ldr	r0, [r3, #4]
   23594:	bl	15874 <g_free@plt>
   23598:	ldr	r3, [r5, #12]
   2359c:	mvn	r2, #0
   235a0:	add	r1, sp, #12
   235a4:	add	r3, r3, #4
   235a8:	str	r2, [sp]
   235ac:	ldr	r0, [sp, #8]
   235b0:	mov	r2, #2
   235b4:	bl	15d9c <gtk_tree_model_get@plt>
   235b8:	ldr	r3, [r5, #12]
   235bc:	ldr	r2, [pc, #64]	; 23604 <g_strcmp0@plt+0xd784>
   235c0:	mov	r1, #128	; 0x80
   235c4:	ldr	r3, [r3, #4]
   235c8:	ldr	r0, [pc, #56]	; 23608 <g_strcmp0@plt+0xd788>
   235cc:	bl	151f0 <g_log@plt>
   235d0:	ldr	r2, [sp, #28]
   235d4:	ldr	r3, [r4]
   235d8:	cmp	r2, r3
   235dc:	bne	235fc <g_strcmp0@plt+0xd77c>
   235e0:	add	sp, sp, #36	; 0x24
   235e4:	pop	{r4, r5, pc}
   235e8:	ldr	r2, [pc, #28]	; 2360c <g_strcmp0@plt+0xd78c>
   235ec:	mov	r1, #128	; 0x80
   235f0:	ldr	r0, [pc, #16]	; 23608 <g_strcmp0@plt+0xd788>
   235f4:	bl	151f0 <g_log@plt>
   235f8:	b	235d0 <g_strcmp0@plt+0xd750>
   235fc:	bl	157f0 <__stack_chk_fail@plt>
   23600:	andeq	r0, r4, r0, asr lr
   23604:	strdeq	pc, [r2], -ip
   23608:	andeq	r8, r2, ip, lsl #29
   2360c:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   23610:	cmn	r1, #4
   23614:	bxne	lr
   23618:	push	{r4, r5, lr}
   2361c:	sub	sp, sp, #12
   23620:	mov	r4, r2
   23624:	mov	r5, r0
   23628:	bl	150f4 <gtk_widget_get_type@plt>
   2362c:	mov	r1, r0
   23630:	mov	r0, r5
   23634:	bl	15148 <g_type_check_instance_cast@plt>
   23638:	bl	1519c <gtk_widget_hide@plt>
   2363c:	ldr	r3, [r4, #12]
   23640:	ldr	r2, [pc, #32]	; 23668 <g_strcmp0@plt+0xd7e8>
   23644:	mov	r0, r4
   23648:	ldr	r3, [r3, #4]
   2364c:	ldr	r1, [r2]
   23650:	str	r3, [sp]
   23654:	mov	r2, #0
   23658:	mvn	r3, #8
   2365c:	bl	15394 <g_signal_emit@plt>
   23660:	add	sp, sp, #12
   23664:	pop	{r4, r5, pc}
   23668:	andeq	r1, r4, r4, lsl r9
   2366c:	push	{r4, lr}
   23670:	mcr	15, 0, r0, cr7, cr10, {5}
   23674:	ldr	r4, [pc, #60]	; 236b8 <g_strcmp0@plt+0xd838>
   23678:	ldr	r3, [r4, #12]
   2367c:	mcr	15, 0, r0, cr7, cr10, {5}
   23680:	cmp	r3, #0
   23684:	beq	23690 <g_strcmp0@plt+0xd810>
   23688:	ldr	r0, [r4, #12]
   2368c:	pop	{r4, pc}
   23690:	add	r0, r4, #12
   23694:	bl	1567c <g_once_init_enter@plt>
   23698:	cmp	r0, #0
   2369c:	beq	23688 <g_strcmp0@plt+0xd808>
   236a0:	bl	23390 <g_strcmp0@plt+0xd510>
   236a4:	mov	r1, r0
   236a8:	add	r0, r4, #12
   236ac:	bl	15b98 <g_once_init_leave@plt>
   236b0:	ldr	r0, [r4, #12]
   236b4:	pop	{r4, pc}
   236b8:	andeq	r1, r4, r4, lsl r9
   236bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   236c0:	sub	sp, sp, #20
   236c4:	ldr	r8, [pc, #984]	; 23aa4 <g_strcmp0@plt+0xdc24>
   236c8:	mov	r6, #0
   236cc:	mov	r5, r0
   236d0:	ldr	r3, [r8]
   236d4:	str	r6, [sp, #8]
   236d8:	str	r3, [sp, #12]
   236dc:	bl	2366c <g_strcmp0@plt+0xd7ec>
   236e0:	mov	r1, r0
   236e4:	mov	r0, r5
   236e8:	bl	155f8 <g_type_instance_get_private@plt>
   236ec:	str	r0, [r5, #12]
   236f0:	str	r6, [r0, #4]
   236f4:	mov	r4, r0
   236f8:	bl	15afc <gtk_builder_new@plt>
   236fc:	ldr	r3, [r5, #12]
   23700:	add	r2, sp, #8
   23704:	ldr	r1, [pc, #924]	; 23aa8 <g_strcmp0@plt+0xdc28>
   23708:	str	r0, [r4]
   2370c:	ldr	r0, [r3]
   23710:	bl	15e08 <gtk_builder_add_from_file@plt>
   23714:	cmp	r0, r6
   23718:	beq	23a7c <g_strcmp0@plt+0xdbfc>
   2371c:	ldr	r3, [r5, #12]
   23720:	ldr	r1, [pc, #900]	; 23aac <g_strcmp0@plt+0xdc2c>
   23724:	mov	r4, #0
   23728:	ldr	r0, [r3]
   2372c:	bl	15418 <gtk_builder_get_object@plt>
   23730:	mov	r7, r0
   23734:	bl	150f4 <gtk_widget_get_type@plt>
   23738:	mov	r6, r0
   2373c:	mov	r1, r0
   23740:	mov	r0, r7
   23744:	bl	15148 <g_type_check_instance_cast@plt>
   23748:	mov	r7, r0
   2374c:	bl	15928 <gtk_dialog_get_type@plt>
   23750:	mov	r1, r0
   23754:	mov	sl, r0
   23758:	mov	r0, r7
   2375c:	bl	15148 <g_type_check_instance_cast@plt>
   23760:	ldr	r2, [pc, #840]	; 23ab0 <g_strcmp0@plt+0xdc30>
   23764:	mov	r3, r5
   23768:	ldr	r1, [pc, #836]	; 23ab4 <g_strcmp0@plt+0xdc34>
   2376c:	str	r4, [sp, #4]
   23770:	str	r4, [sp]
   23774:	bl	15670 <g_signal_connect_data@plt>
   23778:	ldr	r3, [r5, #12]
   2377c:	ldr	r1, [pc, #808]	; 23aac <g_strcmp0@plt+0xdc2c>
   23780:	ldr	r0, [r3]
   23784:	bl	15418 <gtk_builder_get_object@plt>
   23788:	mov	r1, r6
   2378c:	bl	15148 <g_type_check_instance_cast@plt>
   23790:	mov	r7, r0
   23794:	bl	15e38 <gtk_window_get_type@plt>
   23798:	mov	r9, r0
   2379c:	mov	r1, r0
   237a0:	mov	r0, r7
   237a4:	bl	15148 <g_type_check_instance_cast@plt>
   237a8:	ldr	r1, [pc, #776]	; 23ab8 <g_strcmp0@plt+0xdc38>
   237ac:	bl	152bc <gtk_window_set_icon_name@plt>
   237b0:	mov	r1, r9
   237b4:	mov	r0, r7
   237b8:	bl	15148 <g_type_check_instance_cast@plt>
   237bc:	mov	r2, #5
   237c0:	ldr	r1, [pc, #756]	; 23abc <g_strcmp0@plt+0xdc3c>
   237c4:	mov	fp, r0
   237c8:	mov	r0, r4
   237cc:	bl	15880 <dcgettext@plt>
   237d0:	mov	r1, r0
   237d4:	mov	r0, fp
   237d8:	bl	15598 <gtk_window_set_title@plt>
   237dc:	mov	r1, r9
   237e0:	mov	r0, r7
   237e4:	bl	15148 <g_type_check_instance_cast@plt>
   237e8:	mov	r2, #300	; 0x12c
   237ec:	mov	r1, #600	; 0x258
   237f0:	bl	24624 <g_strcmp0@plt+0xe7a4>
   237f4:	ldr	r3, [r5, #12]
   237f8:	ldr	r1, [pc, #704]	; 23ac0 <g_strcmp0@plt+0xdc40>
   237fc:	ldr	r0, [r3]
   23800:	bl	15418 <gtk_builder_get_object@plt>
   23804:	mov	r1, r6
   23808:	bl	15148 <g_type_check_instance_cast@plt>
   2380c:	mov	r3, r5
   23810:	ldr	r2, [pc, #684]	; 23ac4 <g_strcmp0@plt+0xdc44>
   23814:	ldr	r1, [pc, #684]	; 23ac8 <g_strcmp0@plt+0xdc48>
   23818:	str	r4, [sp, #4]
   2381c:	str	r4, [sp]
   23820:	bl	15670 <g_signal_connect_data@plt>
   23824:	mov	r2, #5
   23828:	ldr	r1, [pc, #668]	; 23acc <g_strcmp0@plt+0xdc4c>
   2382c:	mov	r0, r4
   23830:	bl	15880 <dcgettext@plt>
   23834:	bl	152f8 <gtk_button_new_with_mnemonic@plt>
   23838:	mov	r3, r5
   2383c:	ldr	r2, [pc, #652]	; 23ad0 <g_strcmp0@plt+0xdc50>
   23840:	ldr	r1, [pc, #640]	; 23ac8 <g_strcmp0@plt+0xdc48>
   23844:	str	r4, [sp, #4]
   23848:	str	r4, [sp]
   2384c:	mov	r7, r0
   23850:	bl	15670 <g_signal_connect_data@plt>
   23854:	mov	r2, #5
   23858:	ldr	r1, [pc, #628]	; 23ad4 <g_strcmp0@plt+0xdc54>
   2385c:	mov	r0, r4
   23860:	bl	15880 <dcgettext@plt>
   23864:	mov	r1, r0
   23868:	mov	r0, r7
   2386c:	bl	152b0 <gtk_widget_set_tooltip_text@plt>
   23870:	ldr	r3, [r5, #12]
   23874:	ldr	r1, [pc, #560]	; 23aac <g_strcmp0@plt+0xdc2c>
   23878:	ldr	r0, [r3]
   2387c:	bl	15418 <gtk_builder_get_object@plt>
   23880:	mov	r1, r6
   23884:	bl	15148 <g_type_check_instance_cast@plt>
   23888:	mov	r1, sl
   2388c:	bl	15148 <g_type_check_instance_cast@plt>
   23890:	bl	14f44 <gtk_dialog_get_action_area@plt>
   23894:	mov	r9, r0
   23898:	bl	15664 <gtk_box_get_type@plt>
   2389c:	mov	r1, r0
   238a0:	mov	r0, r9
   238a4:	bl	15148 <g_type_check_instance_cast@plt>
   238a8:	mov	r2, r4
   238ac:	mov	r1, r7
   238b0:	mov	r3, r4
   238b4:	str	r4, [sp]
   238b8:	bl	15700 <gtk_box_pack_start@plt>
   238bc:	mov	r0, r7
   238c0:	bl	15b50 <gtk_widget_show@plt>
   238c4:	ldr	r3, [r5, #12]
   238c8:	ldr	r1, [pc, #520]	; 23ad8 <g_strcmp0@plt+0xdc58>
   238cc:	ldr	r0, [r3]
   238d0:	bl	15418 <gtk_builder_get_object@plt>
   238d4:	mov	r1, r6
   238d8:	bl	15148 <g_type_check_instance_cast@plt>
   238dc:	bl	1519c <gtk_widget_hide@plt>
   238e0:	ldr	r3, [r5, #12]
   238e4:	ldr	r1, [pc, #496]	; 23adc <g_strcmp0@plt+0xdc5c>
   238e8:	ldr	r0, [r3]
   238ec:	bl	15418 <gtk_builder_get_object@plt>
   238f0:	mov	r1, r6
   238f4:	bl	15148 <g_type_check_instance_cast@plt>
   238f8:	bl	1519c <gtk_widget_hide@plt>
   238fc:	mov	r3, #64	; 0x40
   23900:	mov	r2, r3
   23904:	str	r3, [sp]
   23908:	mov	r1, r3
   2390c:	mov	r0, #3
   23910:	ldr	r7, [r5, #12]
   23914:	bl	15814 <gtk_list_store_new@plt>
   23918:	ldr	r3, [r5, #12]
   2391c:	ldr	r1, [pc, #444]	; 23ae0 <g_strcmp0@plt+0xdc60>
   23920:	str	r0, [r7, #8]
   23924:	ldr	r0, [r3]
   23928:	bl	15418 <gtk_builder_get_object@plt>
   2392c:	mov	r1, r6
   23930:	bl	15148 <g_type_check_instance_cast@plt>
   23934:	mov	r6, r0
   23938:	bl	15808 <gtk_tree_view_get_type@plt>
   2393c:	mov	r7, r0
   23940:	mov	r1, r0
   23944:	mov	r0, r6
   23948:	bl	15148 <g_type_check_instance_cast@plt>
   2394c:	mov	r9, r0
   23950:	bl	15958 <gtk_tree_model_get_type@plt>
   23954:	ldr	r3, [r5, #12]
   23958:	mov	r1, r0
   2395c:	ldr	r0, [r3, #8]
   23960:	bl	15148 <g_type_check_instance_cast@plt>
   23964:	mov	r1, r0
   23968:	mov	r0, r9
   2396c:	bl	15118 <gtk_tree_view_set_model@plt>
   23970:	mov	r1, r7
   23974:	mov	r0, r6
   23978:	bl	15148 <g_type_check_instance_cast@plt>
   2397c:	bl	1594c <gtk_tree_view_get_selection@plt>
   23980:	mov	r3, r5
   23984:	ldr	r2, [pc, #344]	; 23ae4 <g_strcmp0@plt+0xdc64>
   23988:	ldr	r1, [pc, #344]	; 23ae8 <g_strcmp0@plt+0xdc68>
   2398c:	str	r4, [sp, #4]
   23990:	str	r4, [sp]
   23994:	bl	15670 <g_signal_connect_data@plt>
   23998:	mov	r1, r7
   2399c:	mov	r0, r6
   239a0:	bl	15148 <g_type_check_instance_cast@plt>
   239a4:	mov	r9, r0
   239a8:	bl	158f8 <gtk_cell_renderer_pixbuf_new@plt>
   239ac:	mov	r3, r4
   239b0:	mov	r2, #6
   239b4:	ldr	r1, [pc, #304]	; 23aec <g_strcmp0@plt+0xdc6c>
   239b8:	mov	r5, r0
   239bc:	bl	158c8 <g_object_set@plt>
   239c0:	mov	r2, #5
   239c4:	ldr	r1, [pc, #292]	; 23af0 <g_strcmp0@plt+0xdc70>
   239c8:	mov	r0, r4
   239cc:	bl	15880 <dcgettext@plt>
   239d0:	mov	r3, r4
   239d4:	ldr	r2, [pc, #280]	; 23af4 <g_strcmp0@plt+0xdc74>
   239d8:	mov	r1, r5
   239dc:	str	r4, [sp]
   239e0:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   239e4:	mov	r1, r0
   239e8:	mov	r0, r9
   239ec:	bl	14f20 <gtk_tree_view_append_column@plt>
   239f0:	bl	15574 <gtk_cell_renderer_text_new@plt>
   239f4:	mov	r2, #5
   239f8:	ldr	r1, [pc, #248]	; 23af8 <g_strcmp0@plt+0xdc78>
   239fc:	mov	r5, r0
   23a00:	mov	r0, r4
   23a04:	bl	15880 <dcgettext@plt>
   23a08:	mov	r3, #1
   23a0c:	ldr	r2, [pc, #232]	; 23afc <g_strcmp0@plt+0xdc7c>
   23a10:	mov	r1, r5
   23a14:	str	r4, [sp]
   23a18:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   23a1c:	mov	r1, #1
   23a20:	mov	r5, r0
   23a24:	bl	15358 <gtk_tree_view_column_set_sort_column_id@plt>
   23a28:	mov	r1, r5
   23a2c:	mov	r0, r9
   23a30:	bl	14f20 <gtk_tree_view_append_column@plt>
   23a34:	mov	r0, r5
   23a38:	mov	r1, #1
   23a3c:	bl	158b0 <gtk_tree_view_column_set_expand@plt>
   23a40:	mov	r1, r7
   23a44:	mov	r0, r6
   23a48:	bl	15148 <g_type_check_instance_cast@plt>
   23a4c:	bl	15160 <gtk_tree_view_columns_autosize@plt>
   23a50:	mov	r1, r7
   23a54:	mov	r0, r6
   23a58:	bl	15148 <g_type_check_instance_cast@plt>
   23a5c:	mov	r1, r4
   23a60:	bl	15d48 <gtk_tree_view_set_headers_visible@plt>
   23a64:	ldr	r2, [sp, #12]
   23a68:	ldr	r3, [r8]
   23a6c:	cmp	r2, r3
   23a70:	bne	23aa0 <g_strcmp0@plt+0xdc20>
   23a74:	add	sp, sp, #20
   23a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a7c:	ldr	r3, [sp, #8]
   23a80:	ldr	r2, [pc, #120]	; 23b00 <g_strcmp0@plt+0xdc80>
   23a84:	mov	r1, #16
   23a88:	ldr	r3, [r3, #8]
   23a8c:	ldr	r0, [pc, #112]	; 23b04 <g_strcmp0@plt+0xdc84>
   23a90:	bl	151f0 <g_log@plt>
   23a94:	ldr	r0, [sp, #8]
   23a98:	bl	15064 <g_error_free@plt>
   23a9c:	b	2371c <g_strcmp0@plt+0xd89c>
   23aa0:	bl	157f0 <__stack_chk_fail@plt>
   23aa4:	andeq	r0, r4, r0, asr lr
   23aa8:	andeq	pc, r2, r0, ror r6	; <UNPREDICTABLE>
   23aac:	andeq	pc, r2, ip, ror #11
   23ab0:	andeq	r3, r2, r0, lsl r6
   23ab4:	strdeq	pc, [r2], -r0
   23ab8:	muleq	r2, r4, r6
   23abc:	strdeq	pc, [r2], -ip
   23ac0:	andeq	pc, r2, ip, ror #7
   23ac4:	andeq	r3, r2, r4, asr #8
   23ac8:	strdeq	pc, [r2], -ip
   23acc:	andeq	pc, r2, ip, lsr #16
   23ad0:	ldrdeq	r3, [r2], -ip
   23ad4:	andeq	pc, r2, r8, lsr r8	; <UNPREDICTABLE>
   23ad8:	andeq	pc, r2, ip, lsr #13
   23adc:			; <UNDEFINED> instruction: 0x0002f6b8
   23ae0:	andeq	pc, r2, r0, ror #12
   23ae4:	andeq	r3, r2, r0, ror #10
   23ae8:	strdeq	pc, [r2], -r8
   23aec:			; <UNDEFINED> instruction: 0x0002f3b4
   23af0:	andeq	pc, r2, r0, lsl #14
   23af4:	andeq	pc, r2, r0, asr #7
   23af8:	andeq	pc, r2, r8, lsl #14
   23afc:	ldrdeq	pc, [r2], -r4
   23b00:	andeq	pc, r2, ip, ror r3	; <UNPREDICTABLE>
   23b04:	andeq	r8, r2, ip, lsl #29
   23b08:	push	{r4, r5, r6, r7, r8, lr}
   23b0c:	mov	r4, r0
   23b10:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23b14:	cmp	r4, #0
   23b18:	beq	23bf8 <g_strcmp0@plt+0xdd78>
   23b1c:	ldr	r3, [r4]
   23b20:	cmp	r3, #0
   23b24:	beq	23b34 <g_strcmp0@plt+0xdcb4>
   23b28:	ldr	r3, [r3]
   23b2c:	cmp	r3, r0
   23b30:	beq	23b48 <g_strcmp0@plt+0xdcc8>
   23b34:	mov	r1, r0
   23b38:	mov	r0, r4
   23b3c:	bl	159dc <g_type_check_instance_is_a@plt>
   23b40:	cmp	r0, #0
   23b44:	beq	23bf8 <g_strcmp0@plt+0xdd78>
   23b48:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23b4c:	mov	r1, r0
   23b50:	mov	r0, r4
   23b54:	bl	15148 <g_type_check_instance_cast@plt>
   23b58:	ldr	r1, [pc, #172]	; 23c0c <g_strcmp0@plt+0xdd8c>
   23b5c:	ldr	r3, [r0, #12]
   23b60:	mov	r5, r0
   23b64:	ldr	r0, [r3]
   23b68:	bl	15418 <gtk_builder_get_object@plt>
   23b6c:	mov	r7, r0
   23b70:	bl	150f4 <gtk_widget_get_type@plt>
   23b74:	mov	r1, r0
   23b78:	mov	r6, r0
   23b7c:	mov	r0, r7
   23b80:	bl	15148 <g_type_check_instance_cast@plt>
   23b84:	subs	r7, r0, #0
   23b88:	beq	23bc0 <g_strcmp0@plt+0xdd40>
   23b8c:	ldr	r3, [r7]
   23b90:	cmp	r3, #0
   23b94:	beq	23ba4 <g_strcmp0@plt+0xdd24>
   23b98:	ldr	r3, [r3]
   23b9c:	cmp	r6, r3
   23ba0:	beq	23bb8 <g_strcmp0@plt+0xdd38>
   23ba4:	mov	r1, r6
   23ba8:	mov	r0, r7
   23bac:	bl	159dc <g_type_check_instance_is_a@plt>
   23bb0:	cmp	r0, #0
   23bb4:	beq	23bc0 <g_strcmp0@plt+0xdd40>
   23bb8:	mov	r0, r7
   23bbc:	bl	1519c <gtk_widget_hide@plt>
   23bc0:	ldr	r3, [r5, #12]
   23bc4:	ldr	r0, [r3, #4]
   23bc8:	bl	15874 <g_free@plt>
   23bcc:	ldr	r3, [r5, #12]
   23bd0:	ldr	r0, [r3]
   23bd4:	bl	15b5c <g_object_unref@plt>
   23bd8:	ldr	r3, [pc, #48]	; 23c10 <g_strcmp0@plt+0xdd90>
   23bdc:	mov	r1, #80	; 0x50
   23be0:	ldr	r0, [r3, #4]
   23be4:	bl	15dc0 <g_type_check_class_cast@plt>
   23be8:	ldr	r3, [r0, #24]
   23bec:	mov	r0, r4
   23bf0:	pop	{r4, r5, r6, r7, r8, lr}
   23bf4:	bx	r3
   23bf8:	ldr	r2, [pc, #20]	; 23c14 <g_strcmp0@plt+0xdd94>
   23bfc:	ldr	r1, [pc, #20]	; 23c18 <g_strcmp0@plt+0xdd98>
   23c00:	ldr	r0, [pc, #20]	; 23c1c <g_strcmp0@plt+0xdd9c>
   23c04:	pop	{r4, r5, r6, r7, r8, lr}
   23c08:	b	14fd4 <g_return_if_fail_warning@plt>
   23c0c:	andeq	pc, r2, ip, ror #11
   23c10:	andeq	r1, r4, r4, lsl r9
   23c14:	andeq	pc, r2, r8, asr #16
   23c18:	andeq	pc, r2, r8, lsl #15
   23c1c:	andeq	r8, r2, ip, lsl #29
   23c20:	ldr	r2, [pc, #480]	; 23e08 <g_strcmp0@plt+0xdf88>
   23c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c28:	sub	sp, sp, #52	; 0x34
   23c2c:	ldr	r2, [r2]
   23c30:	mov	r3, #0
   23c34:	mov	r5, r0
   23c38:	mov	r8, r1
   23c3c:	str	r2, [sp, #44]	; 0x2c
   23c40:	str	r3, [sp, #20]
   23c44:	str	r3, [sp, #24]
   23c48:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23c4c:	cmp	r5, #0
   23c50:	beq	23dd4 <g_strcmp0@plt+0xdf54>
   23c54:	ldr	r3, [r5]
   23c58:	cmp	r3, #0
   23c5c:	beq	23c6c <g_strcmp0@plt+0xddec>
   23c60:	ldr	r3, [r3]
   23c64:	cmp	r3, r0
   23c68:	beq	23c80 <g_strcmp0@plt+0xde00>
   23c6c:	mov	r1, r0
   23c70:	mov	r0, r5
   23c74:	bl	159dc <g_type_check_instance_is_a@plt>
   23c78:	cmp	r0, #0
   23c7c:	beq	23dd4 <g_strcmp0@plt+0xdf54>
   23c80:	cmp	r8, #0
   23c84:	beq	23dec <g_strcmp0@plt+0xdf6c>
   23c88:	ldr	r3, [r5, #12]
   23c8c:	ldr	r1, [pc, #376]	; 23e0c <g_strcmp0@plt+0xdf8c>
   23c90:	ldr	r0, [r3]
   23c94:	bl	15418 <gtk_builder_get_object@plt>
   23c98:	mov	r4, r0
   23c9c:	bl	150f4 <gtk_widget_get_type@plt>
   23ca0:	mov	r1, r0
   23ca4:	mov	r0, r4
   23ca8:	bl	15148 <g_type_check_instance_cast@plt>
   23cac:	ldr	r3, [r8, #4]
   23cb0:	cmp	r3, #0
   23cb4:	mov	sl, r0
   23cb8:	beq	23dac <g_strcmp0@plt+0xdf2c>
   23cbc:	ldr	fp, [pc, #332]	; 23e10 <g_strcmp0@plt+0xdf90>
   23cc0:	mov	r4, #0
   23cc4:	ldr	r1, [r8]
   23cc8:	mov	ip, #0
   23ccc:	ldr	r3, [pc, #320]	; 23e14 <g_strcmp0@plt+0xdf94>
   23cd0:	ldr	r0, [r1, r4, lsl #2]
   23cd4:	str	ip, [sp, #12]
   23cd8:	add	ip, sp, #24
   23cdc:	add	r2, sp, #16
   23ce0:	stmib	sp, {fp, ip}
   23ce4:	add	ip, sp, #20
   23ce8:	str	ip, [sp]
   23cec:	ldr	r1, [pc, #292]	; 23e18 <g_strcmp0@plt+0xdf98>
   23cf0:	bl	15910 <g_object_get@plt>
   23cf4:	ldr	r2, [pc, #288]	; 23e1c <g_strcmp0@plt+0xdf9c>
   23cf8:	ldr	r3, [sp, #20]
   23cfc:	mov	r1, #128	; 0x80
   23d00:	ldr	r0, [pc, #280]	; 23e20 <g_strcmp0@plt+0xdfa0>
   23d04:	bl	151f0 <g_log@plt>
   23d08:	ldr	r3, [r5, #12]
   23d0c:	add	r1, sp, #28
   23d10:	mvn	r7, #0
   23d14:	ldr	r0, [r3, #8]
   23d18:	bl	15964 <gtk_list_store_append@plt>
   23d1c:	mov	r0, sl
   23d20:	bl	1531c <gtk_widget_get_style_context@plt>
   23d24:	ldr	r2, [sp, #24]
   23d28:	ldr	r1, [sp, #20]
   23d2c:	bl	24730 <g_strcmp0@plt+0xe8b0>
   23d30:	add	r4, r4, #1
   23d34:	mov	r6, r0
   23d38:	ldr	r0, [sp, #16]
   23d3c:	bl	1fb0c <g_strcmp0@plt+0x9c8c>
   23d40:	ldr	r3, [r5, #12]
   23d44:	ldr	r1, [sp, #20]
   23d48:	mov	r2, #2
   23d4c:	mov	r9, r0
   23d50:	ldr	r0, [r3, #8]
   23d54:	mov	r3, r6
   23d58:	stmib	sp, {r1, r7}
   23d5c:	str	r2, [sp]
   23d60:	add	r1, sp, #28
   23d64:	mov	r2, #1
   23d68:	bl	15004 <gtk_list_store_set@plt>
   23d6c:	ldr	r1, [r5, #12]
   23d70:	mov	r3, r9
   23d74:	mov	r2, #0
   23d78:	ldr	r0, [r1, #8]
   23d7c:	add	r1, sp, #28
   23d80:	str	r7, [sp]
   23d84:	bl	15004 <gtk_list_store_set@plt>
   23d88:	ldr	r0, [sp, #20]
   23d8c:	bl	15874 <g_free@plt>
   23d90:	ldr	r0, [sp, #24]
   23d94:	bl	15874 <g_free@plt>
   23d98:	mov	r0, r6
   23d9c:	bl	15874 <g_free@plt>
   23da0:	ldr	r3, [r8, #4]
   23da4:	cmp	r3, r4
   23da8:	bhi	23cc4 <g_strcmp0@plt+0xde44>
   23dac:	mov	r0, sl
   23db0:	bl	15b50 <gtk_widget_show@plt>
   23db4:	mov	r0, #1
   23db8:	ldr	r3, [pc, #72]	; 23e08 <g_strcmp0@plt+0xdf88>
   23dbc:	ldr	r2, [sp, #44]	; 0x2c
   23dc0:	ldr	r3, [r3]
   23dc4:	cmp	r2, r3
   23dc8:	bne	23e04 <g_strcmp0@plt+0xdf84>
   23dcc:	add	sp, sp, #52	; 0x34
   23dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dd4:	ldr	r0, [pc, #68]	; 23e20 <g_strcmp0@plt+0xdfa0>
   23dd8:	ldr	r2, [pc, #68]	; 23e24 <g_strcmp0@plt+0xdfa4>
   23ddc:	ldr	r1, [pc, #68]	; 23e28 <g_strcmp0@plt+0xdfa8>
   23de0:	bl	14fd4 <g_return_if_fail_warning@plt>
   23de4:	mov	r0, #0
   23de8:	b	23db8 <g_strcmp0@plt+0xdf38>
   23dec:	ldr	r0, [pc, #44]	; 23e20 <g_strcmp0@plt+0xdfa0>
   23df0:	ldr	r2, [pc, #52]	; 23e2c <g_strcmp0@plt+0xdfac>
   23df4:	ldr	r1, [pc, #44]	; 23e28 <g_strcmp0@plt+0xdfa8>
   23df8:	bl	14fd4 <g_return_if_fail_warning@plt>
   23dfc:	mov	r0, r8
   23e00:	b	23db8 <g_strcmp0@plt+0xdf38>
   23e04:	bl	157f0 <__stack_chk_fail@plt>
   23e08:	andeq	r0, r4, r0, asr lr
   23e0c:	andeq	pc, r2, ip, ror #11
   23e10:	andeq	pc, r2, ip, lsl #11
   23e14:	andeq	r9, r2, r4, asr #17
   23e18:	andeq	r0, r3, r8, lsr #17
   23e1c:	muleq	r2, r8, r8
   23e20:	andeq	r8, r2, ip, lsl #29
   23e24:	andeq	pc, r2, r8, ror #16
   23e28:	andeq	pc, r2, r4, lsr #15
   23e2c:	andeq	pc, r2, r8, lsl #17
   23e30:	push	{r4, r5, r6, lr}
   23e34:	mov	r5, r0
   23e38:	mov	r4, r1
   23e3c:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23e40:	cmp	r5, #0
   23e44:	beq	23ecc <g_strcmp0@plt+0xe04c>
   23e48:	ldr	r3, [r5]
   23e4c:	cmp	r3, #0
   23e50:	beq	23e60 <g_strcmp0@plt+0xdfe0>
   23e54:	ldr	r3, [r3]
   23e58:	cmp	r3, r0
   23e5c:	beq	23e74 <g_strcmp0@plt+0xdff4>
   23e60:	mov	r1, r0
   23e64:	mov	r0, r5
   23e68:	bl	159dc <g_type_check_instance_is_a@plt>
   23e6c:	cmp	r0, #0
   23e70:	beq	23ecc <g_strcmp0@plt+0xe04c>
   23e74:	cmp	r4, #0
   23e78:	beq	23ee4 <g_strcmp0@plt+0xe064>
   23e7c:	ldr	r3, [r5, #12]
   23e80:	ldr	r1, [pc, #116]	; 23efc <g_strcmp0@plt+0xe07c>
   23e84:	ldr	r0, [r3]
   23e88:	bl	15418 <gtk_builder_get_object@plt>
   23e8c:	mov	r5, r0
   23e90:	bl	15e38 <gtk_window_get_type@plt>
   23e94:	mov	r1, r0
   23e98:	mov	r0, r5
   23e9c:	bl	15148 <g_type_check_instance_cast@plt>
   23ea0:	mov	r1, r4
   23ea4:	mov	r5, r0
   23ea8:	bl	15bec <gtk_window_set_transient_for@plt>
   23eac:	mov	r0, r5
   23eb0:	mov	r1, #1
   23eb4:	bl	15cac <gtk_window_set_modal@plt>
   23eb8:	mov	r0, r5
   23ebc:	ldr	r1, [pc, #60]	; 23f00 <g_strcmp0@plt+0xe080>
   23ec0:	bl	15598 <gtk_window_set_title@plt>
   23ec4:	mov	r0, #1
   23ec8:	pop	{r4, r5, r6, pc}
   23ecc:	ldr	r2, [pc, #48]	; 23f04 <g_strcmp0@plt+0xe084>
   23ed0:	ldr	r1, [pc, #48]	; 23f08 <g_strcmp0@plt+0xe088>
   23ed4:	ldr	r0, [pc, #48]	; 23f0c <g_strcmp0@plt+0xe08c>
   23ed8:	bl	14fd4 <g_return_if_fail_warning@plt>
   23edc:	mov	r0, #0
   23ee0:	pop	{r4, r5, r6, pc}
   23ee4:	ldr	r2, [pc, #36]	; 23f10 <g_strcmp0@plt+0xe090>
   23ee8:	ldr	r1, [pc, #24]	; 23f08 <g_strcmp0@plt+0xe088>
   23eec:	ldr	r0, [pc, #24]	; 23f0c <g_strcmp0@plt+0xe08c>
   23ef0:	bl	14fd4 <g_return_if_fail_warning@plt>
   23ef4:	mov	r0, r4
   23ef8:	pop	{r4, r5, r6, pc}
   23efc:	andeq	pc, r2, ip, ror #11
   23f00:	muleq	r2, r4, r6
   23f04:	andeq	pc, r2, r8, ror #16
   23f08:			; <UNDEFINED> instruction: 0x0002f7bc
   23f0c:	andeq	r8, r2, ip, lsl #29
   23f10:	andeq	pc, r2, r8, ror r7	; <UNPREDICTABLE>
   23f14:	push	{r4, lr}
   23f18:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23f1c:	mov	r1, #0
   23f20:	bl	14ef0 <g_object_new@plt>
   23f24:	mov	r4, r0
   23f28:	bl	2366c <g_strcmp0@plt+0xd7ec>
   23f2c:	mov	r1, r0
   23f30:	mov	r0, r4
   23f34:	pop	{r4, lr}
   23f38:	b	15148 <g_type_check_instance_cast@plt>
   23f3c:	push	{r4, r5, r6, lr}
   23f40:	sub	sp, sp, #8
   23f44:	ldr	r4, [pc, #132]	; 23fd0 <g_strcmp0@plt+0xe150>
   23f48:	mov	r2, #0
   23f4c:	subs	r5, r0, #0
   23f50:	ldr	r3, [r4]
   23f54:	str	r2, [sp]
   23f58:	str	r3, [sp, #4]
   23f5c:	beq	23f94 <g_strcmp0@plt+0xe114>
   23f60:	mov	r3, sp
   23f64:	mov	r0, r2
   23f68:	mov	r1, r5
   23f6c:	bl	1549c <gtk_show_uri@plt>
   23f70:	subs	r6, r0, #0
   23f74:	beq	23fac <g_strcmp0@plt+0xe12c>
   23f78:	ldr	r2, [sp, #4]
   23f7c:	ldr	r3, [r4]
   23f80:	mov	r0, r6
   23f84:	cmp	r2, r3
   23f88:	bne	23fcc <g_strcmp0@plt+0xe14c>
   23f8c:	add	sp, sp, #8
   23f90:	pop	{r4, r5, r6, pc}
   23f94:	ldr	r2, [pc, #56]	; 23fd4 <g_strcmp0@plt+0xe154>
   23f98:	ldr	r1, [pc, #56]	; 23fd8 <g_strcmp0@plt+0xe158>
   23f9c:	ldr	r0, [pc, #56]	; 23fdc <g_strcmp0@plt+0xe15c>
   23fa0:	mov	r6, r5
   23fa4:	bl	14fd4 <g_return_if_fail_warning@plt>
   23fa8:	b	23f78 <g_strcmp0@plt+0xe0f8>
   23fac:	mov	r3, r5
   23fb0:	ldr	r2, [pc, #40]	; 23fe0 <g_strcmp0@plt+0xe160>
   23fb4:	mov	r1, #16
   23fb8:	ldr	r0, [pc, #28]	; 23fdc <g_strcmp0@plt+0xe15c>
   23fbc:	bl	151f0 <g_log@plt>
   23fc0:	ldr	r0, [sp]
   23fc4:	bl	15064 <g_error_free@plt>
   23fc8:	b	23f78 <g_strcmp0@plt+0xe0f8>
   23fcc:	bl	157f0 <__stack_chk_fail@plt>
   23fd0:	andeq	r0, r4, r0, asr lr
   23fd4:			; <UNDEFINED> instruction: 0x0002f8bc
   23fd8:	andeq	pc, r2, ip, lsr #17
   23fdc:	andeq	r8, r2, ip, lsl #29
   23fe0:	andeq	pc, r2, r8, asr #17
   23fe4:	andeq	r0, r0, r0
   23fe8:	ldrb	r2, [r0]
   23fec:	cmp	r2, #0
   23ff0:	beq	24050 <g_strcmp0@plt+0xe1d0>
   23ff4:	push	{r4, r5, r6, lr}
   23ff8:	mov	r4, r0
   23ffc:	ldr	r1, [pc, #84]	; 24058 <g_strcmp0@plt+0xe1d8>
   24000:	bl	1561c <g_str_has_prefix@plt>
   24004:	subs	r5, r0, #0
   24008:	bne	24028 <g_strcmp0@plt+0xe1a8>
   2400c:	mov	r0, r4
   24010:	ldr	r1, [pc, #68]	; 2405c <g_strcmp0@plt+0xe1dc>
   24014:	bl	15cdc <g_str_has_suffix@plt>
   24018:	cmp	r0, #0
   2401c:	bne	2403c <g_strcmp0@plt+0xe1bc>
   24020:	mov	r0, #0
   24024:	pop	{r4, r5, r6, pc}
   24028:	mov	r2, #5
   2402c:	ldr	r1, [pc, #44]	; 24060 <g_strcmp0@plt+0xe1e0>
   24030:	mov	r0, #0
   24034:	pop	{r4, r5, r6, lr}
   24038:	b	15880 <dcgettext@plt>
   2403c:	mov	r0, r5
   24040:	mov	r2, #5
   24044:	ldr	r1, [pc, #24]	; 24064 <g_strcmp0@plt+0xe1e4>
   24048:	pop	{r4, r5, r6, lr}
   2404c:	b	15880 <dcgettext@plt>
   24050:	mov	r0, #0
   24054:	bx	lr
   24058:	ldrdeq	r0, [r3], -r8
   2405c:	andeq	pc, r2, ip, ror r9	; <UNPREDICTABLE>
   24060:	andeq	pc, r2, r4, ror r9	; <UNPREDICTABLE>
   24064:	andeq	pc, r2, r0, lsl #19
   24068:	push	{r4, r5, r6, r7, r8, lr}
   2406c:	mov	r5, r0
   24070:	ldr	r0, [r0, #4]
   24074:	mov	r1, #4
   24078:	add	r0, r0, #1
   2407c:	bl	15c28 <g_malloc0_n@plt>
   24080:	ldr	r3, [r5, #4]
   24084:	cmp	r3, #0
   24088:	mov	r7, r0
   2408c:	beq	240bc <g_strcmp0@plt+0xe23c>
   24090:	sub	r6, r0, #4
   24094:	mov	r4, #0
   24098:	ldr	r3, [r5]
   2409c:	ldr	r0, [r3, r4, lsl #2]
   240a0:	bl	15010 <pk_package_get_id@plt>
   240a4:	bl	153a0 <g_strdup@plt>
   240a8:	ldr	r3, [r5, #4]
   240ac:	add	r4, r4, #1
   240b0:	cmp	r3, r4
   240b4:	str	r0, [r6, #4]!
   240b8:	bhi	24098 <g_strcmp0@plt+0xe218>
   240bc:	mov	r0, r7
   240c0:	pop	{r4, r5, r6, r7, r8, pc}
   240c4:	push	{r4, r5, r6, lr}
   240c8:	subs	r4, r0, #0
   240cc:	beq	24114 <g_strcmp0@plt+0xe294>
   240d0:	bl	158ec <g_ptr_array_new@plt>
   240d4:	mov	r6, r0
   240d8:	mov	r0, r4
   240dc:	bl	157a8 <g_strv_length@plt>
   240e0:	cmp	r0, #0
   240e4:	subne	r4, r4, #4
   240e8:	addne	r5, r4, r0, lsl #2
   240ec:	beq	2410c <g_strcmp0@plt+0xe28c>
   240f0:	ldr	r0, [r4, #4]!
   240f4:	bl	153a0 <g_strdup@plt>
   240f8:	mov	r1, r0
   240fc:	mov	r0, r6
   24100:	bl	15cc4 <g_ptr_array_add@plt>
   24104:	cmp	r4, r5
   24108:	bne	240f0 <g_strcmp0@plt+0xe270>
   2410c:	mov	r0, r6
   24110:	pop	{r4, r5, r6, pc}
   24114:	ldr	r2, [pc, #20]	; 24130 <g_strcmp0@plt+0xe2b0>
   24118:	ldr	r1, [pc, #20]	; 24134 <g_strcmp0@plt+0xe2b4>
   2411c:	ldr	r0, [pc, #20]	; 24138 <g_strcmp0@plt+0xe2b8>
   24120:	mov	r6, r4
   24124:	bl	14fd4 <g_return_if_fail_warning@plt>
   24128:	mov	r0, r6
   2412c:	pop	{r4, r5, r6, pc}
   24130:	andeq	pc, r2, r8, lsl #19
   24134:	andeq	pc, r2, r0, ror #17
   24138:	andeq	r8, r2, ip, lsl #29
   2413c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24140:	mov	r7, r1
   24144:	ldr	r8, [pc, #1156]	; 245d0 <g_strcmp0@plt+0xe750>
   24148:	sub	sp, sp, #60	; 0x3c
   2414c:	mov	r3, #0
   24150:	ldr	r1, [r8]
   24154:	subs	r6, r0, #0
   24158:	str	r1, [sp, #52]	; 0x34
   2415c:	str	r3, [sp, #24]
   24160:	beq	241c4 <g_strcmp0@plt+0xe344>
   24164:	mov	r4, r2
   24168:	bl	1534c <gtk_text_buffer_get_type@plt>
   2416c:	ldr	r3, [r6]
   24170:	cmp	r3, #0
   24174:	beq	24184 <g_strcmp0@plt+0xe304>
   24178:	ldr	r3, [r3]
   2417c:	cmp	r3, r0
   24180:	beq	24198 <g_strcmp0@plt+0xe318>
   24184:	mov	r1, r0
   24188:	mov	r0, r6
   2418c:	bl	159dc <g_type_check_instance_is_a@plt>
   24190:	cmp	r0, #0
   24194:	beq	241c4 <g_strcmp0@plt+0xe344>
   24198:	cmp	r4, #0
   2419c:	beq	24574 <g_strcmp0@plt+0xe6f4>
   241a0:	ldrb	r3, [r4]
   241a4:	cmp	r3, #0
   241a8:	bne	241d8 <g_strcmp0@plt+0xe358>
   241ac:	ldr	r2, [sp, #52]	; 0x34
   241b0:	ldr	r3, [r8]
   241b4:	cmp	r2, r3
   241b8:	bne	245cc <g_strcmp0@plt+0xe74c>
   241bc:	add	sp, sp, #60	; 0x3c
   241c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241c4:	ldr	r2, [pc, #1032]	; 245d4 <g_strcmp0@plt+0xe754>
   241c8:	ldr	r1, [pc, #1032]	; 245d8 <g_strcmp0@plt+0xe758>
   241cc:	ldr	r0, [pc, #1032]	; 245dc <g_strcmp0@plt+0xe75c>
   241d0:	bl	14fd4 <g_return_if_fail_warning@plt>
   241d4:	b	241ac <g_strcmp0@plt+0xe32c>
   241d8:	mov	r5, #0
   241dc:	add	r2, sp, #24
   241e0:	add	r3, sp, #28
   241e4:	str	r2, [sp, #8]
   241e8:	str	r3, [sp]
   241ec:	mov	r0, r4
   241f0:	str	r5, [sp, #4]
   241f4:	mov	r2, r5
   241f8:	add	r3, sp, #20
   241fc:	mvn	r1, #0
   24200:	bl	15d18 <pango_parse_markup@plt>
   24204:	cmp	r0, r5
   24208:	beq	24588 <g_strcmp0@plt+0xe708>
   2420c:	ldr	r3, [sp, #20]
   24210:	cmp	r3, #0
   24214:	beq	245ac <g_strcmp0@plt+0xe72c>
   24218:	mov	r3, r5
   2421c:	mov	r1, r5
   24220:	mov	r2, r7
   24224:	mov	r0, r6
   24228:	bl	15970 <gtk_text_buffer_create_mark@plt>
   2422c:	ldr	fp, [pc, #940]	; 245e0 <g_strcmp0@plt+0xe760>
   24230:	ldr	sl, [pc, #940]	; 245e4 <g_strcmp0@plt+0xe764>
   24234:	mov	r9, r0
   24238:	ldr	r0, [sp, #20]
   2423c:	bl	15e2c <pango_attr_list_get_iterator@plt>
   24240:	mov	r4, r0
   24244:	add	r2, sp, #36	; 0x24
   24248:	add	r1, sp, #32
   2424c:	mov	r0, r4
   24250:	bl	157c0 <pango_attr_iterator_range@plt>
   24254:	ldr	r3, [sp, #36]	; 0x24
   24258:	mov	r0, #0
   2425c:	cmn	r3, #-2147483647	; 0x80000001
   24260:	ldreq	r3, [sp, #32]
   24264:	subeq	r3, r3, #1
   24268:	streq	r3, [sp, #36]	; 0x24
   2426c:	bl	1573c <gtk_text_tag_new@plt>
   24270:	mov	r1, #1
   24274:	mov	r5, r0
   24278:	mov	r0, r4
   2427c:	bl	15b2c <pango_attr_iterator_get@plt>
   24280:	cmp	r0, #0
   24284:	beq	2429c <g_strcmp0@plt+0xe41c>
   24288:	ldr	r2, [r0, #12]
   2428c:	mov	r3, #0
   24290:	mov	r1, fp
   24294:	mov	r0, r5
   24298:	bl	158c8 <g_object_set@plt>
   2429c:	mov	r1, #2
   242a0:	mov	r0, r4
   242a4:	bl	15b2c <pango_attr_iterator_get@plt>
   242a8:	cmp	r0, #0
   242ac:	beq	242c4 <g_strcmp0@plt+0xe444>
   242b0:	ldr	r2, [r0, #12]
   242b4:	mov	r3, #0
   242b8:	mov	r1, sl
   242bc:	mov	r0, r5
   242c0:	bl	158c8 <g_object_set@plt>
   242c4:	mov	r1, #3
   242c8:	mov	r0, r4
   242cc:	bl	15b2c <pango_attr_iterator_get@plt>
   242d0:	cmp	r0, #0
   242d4:	beq	242ec <g_strcmp0@plt+0xe46c>
   242d8:	ldr	r2, [r0, #12]
   242dc:	mov	r3, #0
   242e0:	ldr	r1, [pc, #768]	; 245e8 <g_strcmp0@plt+0xe768>
   242e4:	mov	r0, r5
   242e8:	bl	158c8 <g_object_set@plt>
   242ec:	mov	r1, #4
   242f0:	mov	r0, r4
   242f4:	bl	15b2c <pango_attr_iterator_get@plt>
   242f8:	cmp	r0, #0
   242fc:	beq	24314 <g_strcmp0@plt+0xe494>
   24300:	ldr	r2, [r0, #12]
   24304:	mov	r3, #0
   24308:	ldr	r1, [pc, #732]	; 245ec <g_strcmp0@plt+0xe76c>
   2430c:	mov	r0, r5
   24310:	bl	158c8 <g_object_set@plt>
   24314:	mov	r1, #5
   24318:	mov	r0, r4
   2431c:	bl	15b2c <pango_attr_iterator_get@plt>
   24320:	cmp	r0, #0
   24324:	beq	2433c <g_strcmp0@plt+0xe4bc>
   24328:	ldr	r2, [r0, #12]
   2432c:	mov	r3, #0
   24330:	ldr	r1, [pc, #696]	; 245f0 <g_strcmp0@plt+0xe770>
   24334:	mov	r0, r5
   24338:	bl	158c8 <g_object_set@plt>
   2433c:	mov	r1, #6
   24340:	mov	r0, r4
   24344:	bl	15b2c <pango_attr_iterator_get@plt>
   24348:	cmp	r0, #0
   2434c:	beq	24364 <g_strcmp0@plt+0xe4e4>
   24350:	ldr	r2, [r0, #12]
   24354:	mov	r3, #0
   24358:	ldr	r1, [pc, #660]	; 245f4 <g_strcmp0@plt+0xe774>
   2435c:	mov	r0, r5
   24360:	bl	158c8 <g_object_set@plt>
   24364:	mov	r1, #7
   24368:	mov	r0, r4
   2436c:	bl	15b2c <pango_attr_iterator_get@plt>
   24370:	cmp	r0, #0
   24374:	beq	2438c <g_strcmp0@plt+0xe50c>
   24378:	ldr	r2, [r0, #12]
   2437c:	mov	r3, #0
   24380:	ldr	r1, [pc, #624]	; 245f8 <g_strcmp0@plt+0xe778>
   24384:	mov	r0, r5
   24388:	bl	158c8 <g_object_set@plt>
   2438c:	mov	r1, #8
   24390:	mov	r0, r4
   24394:	bl	15b2c <pango_attr_iterator_get@plt>
   24398:	cmp	r0, #0
   2439c:	beq	243b4 <g_strcmp0@plt+0xe534>
   243a0:	ldr	r2, [r0, #12]
   243a4:	mov	r3, #0
   243a8:	ldr	r1, [pc, #588]	; 245fc <g_strcmp0@plt+0xe77c>
   243ac:	mov	r0, r5
   243b0:	bl	158c8 <g_object_set@plt>
   243b4:	mov	r1, #9
   243b8:	mov	r0, r4
   243bc:	bl	15b2c <pango_attr_iterator_get@plt>
   243c0:	cmp	r0, #0
   243c4:	beq	243f4 <g_strcmp0@plt+0xe574>
   243c8:	ldr	r1, [r0, #12]
   243cc:	ldrh	lr, [r0, #16]
   243d0:	mov	ip, #0
   243d4:	str	r1, [sp, #44]	; 0x2c
   243d8:	mov	r3, ip
   243dc:	add	r2, sp, #40	; 0x28
   243e0:	ldr	r1, [pc, #536]	; 24600 <g_strcmp0@plt+0xe780>
   243e4:	mov	r0, r5
   243e8:	strh	lr, [sp, #48]	; 0x30
   243ec:	str	ip, [sp, #40]	; 0x28
   243f0:	bl	158c8 <g_object_set@plt>
   243f4:	mov	r1, #10
   243f8:	mov	r0, r4
   243fc:	bl	15b2c <pango_attr_iterator_get@plt>
   24400:	cmp	r0, #0
   24404:	beq	24434 <g_strcmp0@plt+0xe5b4>
   24408:	ldr	r1, [r0, #12]
   2440c:	ldrh	lr, [r0, #16]
   24410:	mov	ip, #0
   24414:	str	r1, [sp, #44]	; 0x2c
   24418:	mov	r3, ip
   2441c:	add	r2, sp, #40	; 0x28
   24420:	ldr	r1, [pc, #476]	; 24604 <g_strcmp0@plt+0xe784>
   24424:	mov	r0, r5
   24428:	strh	lr, [sp, #48]	; 0x30
   2442c:	str	ip, [sp, #40]	; 0x28
   24430:	bl	158c8 <g_object_set@plt>
   24434:	mov	r1, #11
   24438:	mov	r0, r4
   2443c:	bl	15b2c <pango_attr_iterator_get@plt>
   24440:	cmp	r0, #0
   24444:	beq	2445c <g_strcmp0@plt+0xe5dc>
   24448:	ldr	r2, [r0, #12]
   2444c:	mov	r3, #0
   24450:	ldr	r1, [pc, #432]	; 24608 <g_strcmp0@plt+0xe788>
   24454:	mov	r0, r5
   24458:	bl	158c8 <g_object_set@plt>
   2445c:	mov	r1, #12
   24460:	mov	r0, r4
   24464:	bl	15b2c <pango_attr_iterator_get@plt>
   24468:	cmp	r0, #0
   2446c:	beq	2448c <g_strcmp0@plt+0xe60c>
   24470:	ldr	r2, [r0, #12]
   24474:	mov	r3, #0
   24478:	subs	r2, r2, r3
   2447c:	movne	r2, #1
   24480:	ldr	r1, [pc, #388]	; 2460c <g_strcmp0@plt+0xe78c>
   24484:	mov	r0, r5
   24488:	bl	158c8 <g_object_set@plt>
   2448c:	mov	r1, #13
   24490:	mov	r0, r4
   24494:	bl	15b2c <pango_attr_iterator_get@plt>
   24498:	cmp	r0, #0
   2449c:	beq	244b4 <g_strcmp0@plt+0xe634>
   244a0:	ldr	r2, [r0, #12]
   244a4:	mov	r3, #0
   244a8:	ldr	r1, [pc, #352]	; 24610 <g_strcmp0@plt+0xe790>
   244ac:	mov	r0, r5
   244b0:	bl	158c8 <g_object_set@plt>
   244b4:	mov	r1, #15
   244b8:	mov	r0, r4
   244bc:	bl	15b2c <pango_attr_iterator_get@plt>
   244c0:	cmp	r0, #0
   244c4:	beq	244e0 <g_strcmp0@plt+0xe660>
   244c8:	mov	r1, #0
   244cc:	ldrd	r2, [r0, #16]
   244d0:	str	r1, [sp]
   244d4:	mov	r0, r5
   244d8:	ldr	r1, [pc, #308]	; 24614 <g_strcmp0@plt+0xe794>
   244dc:	bl	158c8 <g_object_set@plt>
   244e0:	mov	r0, r6
   244e4:	bl	15b80 <gtk_text_buffer_get_tag_table@plt>
   244e8:	mov	r1, r5
   244ec:	bl	15730 <gtk_text_tag_table_add@plt>
   244f0:	mov	r0, r6
   244f4:	bl	15b80 <gtk_text_buffer_get_tag_table@plt>
   244f8:	ldr	r1, [pc, #280]	; 24618 <g_strcmp0@plt+0xe798>
   244fc:	bl	156c4 <gtk_text_tag_table_lookup@plt>
   24500:	ldrd	r2, [sp, #32]
   24504:	ldr	ip, [sp, #28]
   24508:	mov	r1, #0
   2450c:	sub	r3, r3, r2
   24510:	str	r1, [sp, #8]
   24514:	add	r2, ip, r2
   24518:	mov	r1, r7
   2451c:	str	r5, [sp]
   24520:	str	r0, [sp, #4]
   24524:	mov	r0, r6
   24528:	bl	15acc <gtk_text_buffer_insert_with_tags@plt>
   2452c:	mov	r2, r9
   24530:	mov	r1, r7
   24534:	mov	r0, r6
   24538:	bl	15430 <gtk_text_buffer_get_iter_at_mark@plt>
   2453c:	mov	r0, r4
   24540:	bl	15b38 <pango_attr_iterator_next@plt>
   24544:	cmp	r0, #0
   24548:	bne	24244 <g_strcmp0@plt+0xe3c4>
   2454c:	mov	r1, r9
   24550:	mov	r0, r6
   24554:	bl	15130 <gtk_text_buffer_delete_mark@plt>
   24558:	mov	r0, r4
   2455c:	bl	15b8c <pango_attr_iterator_destroy@plt>
   24560:	ldr	r0, [sp, #20]
   24564:	bl	1537c <pango_attr_list_unref@plt>
   24568:	ldr	r0, [sp, #28]
   2456c:	bl	15874 <g_free@plt>
   24570:	b	241ac <g_strcmp0@plt+0xe32c>
   24574:	ldr	r2, [pc, #160]	; 2461c <g_strcmp0@plt+0xe79c>
   24578:	ldr	r1, [pc, #88]	; 245d8 <g_strcmp0@plt+0xe758>
   2457c:	ldr	r0, [pc, #88]	; 245dc <g_strcmp0@plt+0xe75c>
   24580:	bl	14fd4 <g_return_if_fail_warning@plt>
   24584:	b	241ac <g_strcmp0@plt+0xe32c>
   24588:	ldr	r3, [sp, #24]
   2458c:	ldr	r2, [pc, #140]	; 24620 <g_strcmp0@plt+0xe7a0>
   24590:	mov	r1, #16
   24594:	ldr	r3, [r3, #8]
   24598:	ldr	r0, [pc, #60]	; 245dc <g_strcmp0@plt+0xe75c>
   2459c:	bl	151f0 <g_log@plt>
   245a0:	ldr	r0, [sp, #24]
   245a4:	bl	15064 <g_error_free@plt>
   245a8:	b	241ac <g_strcmp0@plt+0xe32c>
   245ac:	mov	r0, r6
   245b0:	mov	r1, r7
   245b4:	mvn	r3, #0
   245b8:	ldr	r2, [sp, #28]
   245bc:	bl	1525c <gtk_text_buffer_insert@plt>
   245c0:	ldr	r0, [sp, #28]
   245c4:	bl	15874 <g_free@plt>
   245c8:	b	241ac <g_strcmp0@plt+0xe32c>
   245cc:	bl	157f0 <__stack_chk_fail@plt>
   245d0:	andeq	r0, r4, r0, asr lr
   245d4:	muleq	r2, r8, r9
   245d8:	strdeq	pc, [r2], -r8
   245dc:	andeq	r8, r2, ip, lsl #29
   245e0:	andeq	pc, r2, r0, ror #19
   245e4:	andeq	pc, r2, ip, ror #19
   245e8:	strdeq	pc, [r2], -r4
   245ec:	strdeq	pc, [r2], -ip
   245f0:	andeq	pc, r2, r4, lsl #20
   245f4:	andeq	pc, r2, ip, lsl #20
   245f8:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   245fc:	andeq	pc, r2, ip, lsl sl	; <UNPREDICTABLE>
   24600:	andeq	pc, r2, r8, lsr #20
   24604:	andeq	pc, r2, r8, lsr sl	; <UNPREDICTABLE>
   24608:	andeq	pc, r2, r8, asr #20
   2460c:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   24610:	andeq	pc, r2, r4, ror #20
   24614:	andeq	pc, r2, ip, ror #20
   24618:	andeq	pc, r2, r4, ror sl	; <UNPREDICTABLE>
   2461c:			; <UNDEFINED> instruction: 0x0002f9b4
   24620:	andeq	pc, r2, r4, asr #19
   24624:	cmp	r1, #0
   24628:	clz	r3, r2
   2462c:	lsr	r3, r3, #5
   24630:	push	{r4, r5, r6, r7, lr}
   24634:	movne	r4, r3
   24638:	moveq	r4, #1
   2463c:	cmp	r4, #0
   24640:	sub	sp, sp, #12
   24644:	beq	24660 <g_strcmp0@plt+0xe7e0>
   24648:	ldr	r3, [pc, #88]	; 246a8 <g_strcmp0@plt+0xe828>
   2464c:	ldr	r0, [r3]
   24650:	clz	r0, r0
   24654:	lsr	r0, r0, #5
   24658:	add	sp, sp, #12
   2465c:	pop	{r4, r5, r6, r7, pc}
   24660:	mov	r3, r1
   24664:	mov	r6, r2
   24668:	mov	r5, r1
   2466c:	mov	r7, r0
   24670:	str	r2, [sp]
   24674:	mov	r1, #128	; 0x80
   24678:	ldr	r2, [pc, #44]	; 246ac <g_strcmp0@plt+0xe82c>
   2467c:	ldr	r0, [pc, #44]	; 246b0 <g_strcmp0@plt+0xe830>
   24680:	bl	151f0 <g_log@plt>
   24684:	mov	r0, r7
   24688:	mov	r2, r6
   2468c:	mov	r1, r5
   24690:	bl	155ec <gtk_window_set_default_size@plt>
   24694:	ldr	r3, [pc, #12]	; 246a8 <g_strcmp0@plt+0xe828>
   24698:	mov	r0, #1
   2469c:	str	r4, [r3]
   246a0:	add	sp, sp, #12
   246a4:	pop	{r4, r5, r6, r7, pc}
   246a8:	andeq	r1, r4, r4, lsr #18
   246ac:	andeq	pc, r2, ip, ror sl	; <UNPREDICTABLE>
   246b0:	andeq	r8, r2, ip, lsl #29
   246b4:	push	{r4, r5, r6, lr}
   246b8:	subs	r4, r1, #0
   246bc:	bne	246d8 <g_strcmp0@plt+0xe858>
   246c0:	ldr	r2, [pc, #92]	; 24724 <g_strcmp0@plt+0xe8a4>
   246c4:	ldr	r1, [pc, #92]	; 24728 <g_strcmp0@plt+0xe8a8>
   246c8:	ldr	r0, [pc, #92]	; 2472c <g_strcmp0@plt+0xe8ac>
   246cc:	bl	14fd4 <g_return_if_fail_warning@plt>
   246d0:	mov	r0, r4
   246d4:	pop	{r4, r5, r6, pc}
   246d8:	mov	r5, r0
   246dc:	bl	155d4 <gdk_display_get_default@plt>
   246e0:	mov	r1, r4
   246e4:	bl	157fc <gdk_x11_window_foreign_new_for_display@plt>
   246e8:	mov	r6, r0
   246ec:	bl	150f4 <gtk_widget_get_type@plt>
   246f0:	mov	r1, r0
   246f4:	mov	r0, r5
   246f8:	bl	15148 <g_type_check_instance_cast@plt>
   246fc:	bl	15190 <gtk_widget_get_window@plt>
   24700:	mov	r1, #1
   24704:	mov	r4, r0
   24708:	mov	r0, r5
   2470c:	bl	15cac <gtk_window_set_modal@plt>
   24710:	mov	r0, r4
   24714:	mov	r1, r6
   24718:	bl	156f4 <gdk_window_set_transient_for@plt>
   2471c:	mov	r0, #1
   24720:	pop	{r4, r5, r6, pc}
   24724:	muleq	r2, r8, sl
   24728:	andeq	pc, r2, r8, lsl r9	; <UNPREDICTABLE>
   2472c:	andeq	r8, r2, ip, lsl #29
   24730:	push	{r4, r5, r6, r7, r8, lr}
   24734:	sub	sp, sp, #40	; 0x28
   24738:	ldr	r6, [pc, #520]	; 24948 <g_strcmp0@plt+0xeac8>
   2473c:	subs	r4, r1, #0
   24740:	ldr	r3, [r6]
   24744:	str	r3, [sp, #36]	; 0x24
   24748:	beq	248dc <g_strcmp0@plt+0xea5c>
   2474c:	cmp	r0, #0
   24750:	mov	r7, r2
   24754:	beq	248f0 <g_strcmp0@plt+0xea70>
   24758:	mov	r2, sp
   2475c:	mov	r1, #8
   24760:	bl	15a78 <gtk_style_context_get_color@plt>
   24764:	vldr	d4, [pc, #468]	; 24940 <g_strcmp0@plt+0xeac0>
   24768:	vldr	d5, [sp, #16]
   2476c:	vldr	d6, [sp, #8]
   24770:	vldr	d7, [sp]
   24774:	ldr	r0, [pc, #464]	; 2494c <g_strcmp0@plt+0xeacc>
   24778:	vmul.f64	d5, d5, d4
   2477c:	vmul.f64	d6, d6, d4
   24780:	vmul.f64	d7, d7, d4
   24784:	vcvt.u32.f64	s11, d5
   24788:	vcvt.u32.f64	s13, d6
   2478c:	vcvt.u32.f64	s15, d7
   24790:	vmov	r3, s11
   24794:	vmov	r2, s13
   24798:	vmov	r1, s15
   2479c:	bl	15490 <g_strdup_printf@plt>
   247a0:	mov	r8, r0
   247a4:	mov	r0, r4
   247a8:	bl	15124 <pk_package_id_split@plt>
   247ac:	subs	r5, r0, #0
   247b0:	beq	2491c <g_strcmp0@plt+0xea9c>
   247b4:	cmp	r7, #0
   247b8:	beq	247c8 <g_strcmp0@plt+0xe948>
   247bc:	ldrb	r3, [r7]
   247c0:	cmp	r3, #0
   247c4:	bne	24848 <g_strcmp0@plt+0xe9c8>
   247c8:	ldr	r0, [r5]
   247cc:	bl	15100 <g_string_new@plt>
   247d0:	ldr	r2, [r5, #4]
   247d4:	ldrb	r3, [r2]
   247d8:	cmp	r3, #0
   247dc:	mov	r4, r0
   247e0:	bne	24900 <g_strcmp0@plt+0xea80>
   247e4:	ldr	r0, [r5, #8]
   247e8:	bl	23fe8 <g_strcmp0@plt+0xe168>
   247ec:	subs	r2, r0, #0
   247f0:	beq	24800 <g_strcmp0@plt+0xe980>
   247f4:	ldr	r1, [pc, #340]	; 24950 <g_strcmp0@plt+0xead0>
   247f8:	mov	r0, r4
   247fc:	bl	15da8 <g_string_append_printf@plt>
   24800:	mov	r0, r4
   24804:	mov	r1, #0
   24808:	bl	15b08 <g_string_free@plt>
   2480c:	mov	r7, #0
   24810:	mov	r4, r0
   24814:	mov	r0, r7
   24818:	bl	15874 <g_free@plt>
   2481c:	mov	r0, r8
   24820:	bl	15874 <g_free@plt>
   24824:	mov	r0, r5
   24828:	bl	15790 <g_strfreev@plt>
   2482c:	ldr	r2, [sp, #36]	; 0x24
   24830:	ldr	r3, [r6]
   24834:	mov	r0, r4
   24838:	cmp	r2, r3
   2483c:	bne	2493c <g_strcmp0@plt+0xeabc>
   24840:	add	sp, sp, #40	; 0x28
   24844:	pop	{r4, r5, r6, r7, r8, pc}
   24848:	ldr	r0, [pc, #260]	; 24954 <g_strcmp0@plt+0xead4>
   2484c:	bl	15100 <g_string_new@plt>
   24850:	mvn	r1, #0
   24854:	mov	r4, r0
   24858:	mov	r0, r7
   2485c:	bl	15cd0 <g_markup_escape_text@plt>
   24860:	ldr	r1, [pc, #240]	; 24958 <g_strcmp0@plt+0xead8>
   24864:	mov	r2, r0
   24868:	mov	r7, r0
   2486c:	mov	r0, r4
   24870:	bl	15da8 <g_string_append_printf@plt>
   24874:	mov	r2, r8
   24878:	mov	r0, r4
   2487c:	ldr	r1, [pc, #216]	; 2495c <g_strcmp0@plt+0xeadc>
   24880:	bl	15da8 <g_string_append_printf@plt>
   24884:	mov	r0, r4
   24888:	ldr	r1, [r5]
   2488c:	bl	15d54 <g_string_append@plt>
   24890:	ldr	r2, [r5, #4]
   24894:	ldrb	r3, [r2]
   24898:	cmp	r3, #0
   2489c:	bne	2490c <g_strcmp0@plt+0xea8c>
   248a0:	ldr	r0, [r5, #8]
   248a4:	bl	23fe8 <g_strcmp0@plt+0xe168>
   248a8:	subs	r2, r0, #0
   248ac:	beq	248bc <g_strcmp0@plt+0xea3c>
   248b0:	ldr	r1, [pc, #152]	; 24950 <g_strcmp0@plt+0xead0>
   248b4:	mov	r0, r4
   248b8:	bl	15da8 <g_string_append_printf@plt>
   248bc:	ldr	r1, [pc, #156]	; 24960 <g_strcmp0@plt+0xeae0>
   248c0:	mov	r0, r4
   248c4:	bl	15d54 <g_string_append@plt>
   248c8:	mov	r0, r4
   248cc:	mov	r1, #0
   248d0:	bl	15b08 <g_string_free@plt>
   248d4:	mov	r4, r0
   248d8:	b	24814 <g_strcmp0@plt+0xe994>
   248dc:	ldr	r2, [pc, #128]	; 24964 <g_strcmp0@plt+0xeae4>
   248e0:	ldr	r1, [pc, #128]	; 24968 <g_strcmp0@plt+0xeae8>
   248e4:	ldr	r0, [pc, #128]	; 2496c <g_strcmp0@plt+0xeaec>
   248e8:	bl	14fd4 <g_return_if_fail_warning@plt>
   248ec:	b	2482c <g_strcmp0@plt+0xe9ac>
   248f0:	ldr	r0, [pc, #120]	; 24970 <g_strcmp0@plt+0xeaf0>
   248f4:	bl	153a0 <g_strdup@plt>
   248f8:	mov	r8, r0
   248fc:	b	247a4 <g_strcmp0@plt+0xe924>
   24900:	ldr	r1, [pc, #108]	; 24974 <g_strcmp0@plt+0xeaf4>
   24904:	bl	15da8 <g_string_append_printf@plt>
   24908:	b	247e4 <g_strcmp0@plt+0xe964>
   2490c:	ldr	r1, [pc, #96]	; 24974 <g_strcmp0@plt+0xeaf4>
   24910:	mov	r0, r4
   24914:	bl	15da8 <g_string_append_printf@plt>
   24918:	b	248a0 <g_strcmp0@plt+0xea20>
   2491c:	mov	r3, r4
   24920:	ldr	r2, [pc, #80]	; 24978 <g_strcmp0@plt+0xeaf8>
   24924:	mov	r1, #16
   24928:	ldr	r0, [pc, #60]	; 2496c <g_strcmp0@plt+0xeaec>
   2492c:	bl	151f0 <g_log@plt>
   24930:	mov	r4, r5
   24934:	mov	r7, r5
   24938:	b	24814 <g_strcmp0@plt+0xe994>
   2493c:	bl	157f0 <__stack_chk_fail@plt>
   24940:	andeq	r0, r0, r0
   24944:	rsbmi	lr, pc, r0
   24948:	andeq	r0, r4, r0, asr lr
   2494c:			; <UNDEFINED> instruction: 0x0002fab8
   24950:	andeq	pc, r2, r8, ror #21
   24954:	muleq	r2, r4, r6
   24958:			; <UNDEFINED> instruction: 0x0002a2b0
   2495c:	strdeq	pc, [r2], -r0
   24960:	andeq	pc, r2, r4, lsl #22
   24964:	andeq	pc, r2, r4, lsr #21
   24968:	andeq	pc, r2, r4, lsr r9	; <UNPREDICTABLE>
   2496c:	andeq	r8, r2, ip, lsl #29
   24970:	andeq	pc, r2, r8, asr #21
   24974:	andeq	pc, r2, r4, ror #21
   24978:	ldrdeq	pc, [r2], -r0
   2497c:	push	{r4, r5, r6, lr}
   24980:	subs	r4, r0, #0
   24984:	beq	249f4 <g_strcmp0@plt+0xeb74>
   24988:	mov	r5, r1
   2498c:	bl	15124 <pk_package_id_split@plt>
   24990:	cmp	r5, #0
   24994:	mov	r6, r0
   24998:	beq	249a8 <g_strcmp0@plt+0xeb28>
   2499c:	ldrb	r3, [r5]
   249a0:	cmp	r3, #0
   249a4:	bne	249c4 <g_strcmp0@plt+0xeb44>
   249a8:	ldr	r0, [r6]
   249ac:	bl	153a0 <g_strdup@plt>
   249b0:	mov	r4, r0
   249b4:	mov	r0, r6
   249b8:	bl	15790 <g_strfreev@plt>
   249bc:	mov	r0, r4
   249c0:	pop	{r4, r5, r6, pc}
   249c4:	mov	r0, r5
   249c8:	mvn	r1, #0
   249cc:	bl	15cd0 <g_markup_escape_text@plt>
   249d0:	ldr	r2, [r6]
   249d4:	mov	r5, r0
   249d8:	mov	r1, r0
   249dc:	ldr	r0, [pc, #40]	; 24a0c <g_strcmp0@plt+0xeb8c>
   249e0:	bl	15490 <g_strdup_printf@plt>
   249e4:	mov	r4, r0
   249e8:	mov	r0, r5
   249ec:	bl	15874 <g_free@plt>
   249f0:	b	249b4 <g_strcmp0@plt+0xeb34>
   249f4:	ldr	r2, [pc, #20]	; 24a10 <g_strcmp0@plt+0xeb90>
   249f8:	ldr	r1, [pc, #20]	; 24a14 <g_strcmp0@plt+0xeb94>
   249fc:	ldr	r0, [pc, #20]	; 24a18 <g_strcmp0@plt+0xeb98>
   24a00:	bl	14fd4 <g_return_if_fail_warning@plt>
   24a04:	mov	r0, r4
   24a08:	pop	{r4, r5, r6, pc}
   24a0c:	andeq	pc, r2, ip, lsl #22
   24a10:	andeq	pc, r2, r4, lsr #21
   24a14:	andeq	pc, r2, r4, asr r9	; <UNPREDICTABLE>
   24a18:	andeq	r8, r2, ip, lsl #29
   24a1c:	push	{r4, r5, r6, r7, r8, r9, lr}
   24a20:	sub	sp, sp, #12
   24a24:	mov	r4, r1
   24a28:	mov	r5, r0
   24a2c:	bl	159f4 <getuid@plt>
   24a30:	adds	r0, r0, #0
   24a34:	movne	r0, #1
   24a38:	cmp	r4, #0
   24a3c:	moveq	r0, #1
   24a40:	cmp	r0, #0
   24a44:	movne	r4, #0
   24a48:	movne	r5, r4
   24a4c:	movne	r6, #1
   24a50:	beq	24a70 <g_strcmp0@plt+0xebf0>
   24a54:	mov	r0, r4
   24a58:	bl	15874 <g_free@plt>
   24a5c:	mov	r0, r5
   24a60:	bl	15874 <g_free@plt>
   24a64:	mov	r0, r6
   24a68:	add	sp, sp, #12
   24a6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24a70:	cmp	r5, #0
   24a74:	beq	24ba0 <g_strcmp0@plt+0xed20>
   24a78:	mov	r2, #5
   24a7c:	ldr	r1, [pc, #312]	; 24bbc <g_strcmp0@plt+0xed3c>
   24a80:	bl	15880 <dcgettext@plt>
   24a84:	mov	r1, r5
   24a88:	bl	15490 <g_strdup_printf@plt>
   24a8c:	mov	r4, r0
   24a90:	mov	r2, #5
   24a94:	ldr	r1, [pc, #292]	; 24bc0 <g_strcmp0@plt+0xed40>
   24a98:	mov	r0, #0
   24a9c:	bl	15880 <dcgettext@plt>
   24aa0:	mov	r2, #5
   24aa4:	ldr	r1, [pc, #280]	; 24bc4 <g_strcmp0@plt+0xed44>
   24aa8:	ldr	r8, [pc, #280]	; 24bc8 <g_strcmp0@plt+0xed48>
   24aac:	mov	r5, r0
   24ab0:	mov	r0, #0
   24ab4:	bl	15880 <dcgettext@plt>
   24ab8:	mov	r1, r5
   24abc:	mov	r3, #0
   24ac0:	mov	r2, r0
   24ac4:	ldr	r0, [pc, #256]	; 24bcc <g_strcmp0@plt+0xed4c>
   24ac8:	bl	15604 <g_strjoin@plt>
   24acc:	mov	r2, #1
   24ad0:	mov	r3, #3
   24ad4:	mov	r1, r2
   24ad8:	str	r4, [sp, #4]
   24adc:	str	r8, [sp]
   24ae0:	mov	r5, r0
   24ae4:	mov	r0, #0
   24ae8:	bl	15d24 <gtk_message_dialog_new@plt>
   24aec:	mov	r6, r0
   24af0:	bl	15928 <gtk_dialog_get_type@plt>
   24af4:	mov	r7, r0
   24af8:	mov	r1, r0
   24afc:	mov	r0, r6
   24b00:	bl	15148 <g_type_check_instance_cast@plt>
   24b04:	mov	r2, #5
   24b08:	ldr	r1, [pc, #192]	; 24bd0 <g_strcmp0@plt+0xed50>
   24b0c:	mov	r9, r0
   24b10:	mov	r0, #0
   24b14:	bl	15880 <dcgettext@plt>
   24b18:	mvn	r2, #4
   24b1c:	mov	r1, r0
   24b20:	mov	r0, r9
   24b24:	bl	1501c <gtk_dialog_add_button@plt>
   24b28:	bl	158e0 <gtk_message_dialog_get_type@plt>
   24b2c:	mov	r1, r0
   24b30:	mov	r0, r6
   24b34:	bl	15148 <g_type_check_instance_cast@plt>
   24b38:	mov	r2, r5
   24b3c:	mov	r1, r8
   24b40:	bl	14fa4 <gtk_message_dialog_format_secondary_text@plt>
   24b44:	bl	15e38 <gtk_window_get_type@plt>
   24b48:	mov	r1, r0
   24b4c:	mov	r0, r6
   24b50:	bl	15148 <g_type_check_instance_cast@plt>
   24b54:	ldr	r1, [pc, #120]	; 24bd4 <g_strcmp0@plt+0xed54>
   24b58:	bl	152bc <gtk_window_set_icon_name@plt>
   24b5c:	mov	r1, r7
   24b60:	mov	r0, r6
   24b64:	bl	15148 <g_type_check_instance_cast@plt>
   24b68:	bl	15b14 <gtk_dialog_run@plt>
   24b6c:	mov	r7, r0
   24b70:	mov	r0, r6
   24b74:	bl	156e8 <gtk_widget_destroy@plt>
   24b78:	cmn	r7, #5
   24b7c:	moveq	r6, #1
   24b80:	beq	24a54 <g_strcmp0@plt+0xebd4>
   24b84:	mov	r3, #0
   24b88:	ldr	r2, [pc, #72]	; 24bd8 <g_strcmp0@plt+0xed58>
   24b8c:	mov	r1, #16
   24b90:	ldr	r0, [pc, #68]	; 24bdc <g_strcmp0@plt+0xed5c>
   24b94:	bl	151f0 <g_log@plt>
   24b98:	mov	r6, #0
   24b9c:	b	24a54 <g_strcmp0@plt+0xebd4>
   24ba0:	mov	r2, #5
   24ba4:	ldr	r1, [pc, #52]	; 24be0 <g_strcmp0@plt+0xed60>
   24ba8:	mov	r0, r5
   24bac:	bl	15880 <dcgettext@plt>
   24bb0:	bl	153a0 <g_strdup@plt>
   24bb4:	mov	r4, r0
   24bb8:	b	24a90 <g_strcmp0@plt+0xec10>
   24bbc:	andeq	pc, r2, r0, asr fp	; <UNPREDICTABLE>
   24bc0:	andeq	pc, r2, r4, ror fp	; <UNPREDICTABLE>
   24bc4:	andeq	pc, r2, ip, lsr #23
   24bc8:	andeq	sl, r2, r0, asr r5
   24bcc:	andeq	fp, r2, ip, asr #2
   24bd0:	andeq	pc, r2, r8, lsl #24
   24bd4:	muleq	r2, r4, r6
   24bd8:	andeq	pc, r2, ip, lsl ip	; <UNPREDICTABLE>
   24bdc:	andeq	r8, r2, ip, lsl #29
   24be0:	andeq	pc, r2, ip, lsl fp	; <UNPREDICTABLE>
   24be4:	push	{r4, r5, r6, r7, r8, lr}
   24be8:	mov	r4, r0
   24bec:	mov	r0, r1
   24bf0:	mov	r5, r1
   24bf4:	mov	r7, r2
   24bf8:	bl	1fb2c <g_strcmp0@plt+0x9cac>
   24bfc:	ldr	r1, [pc, #124]	; 24c80 <g_strcmp0@plt+0xee00>
   24c00:	mov	r6, r0
   24c04:	bl	1561c <g_str_has_prefix@plt>
   24c08:	cmp	r0, #0
   24c0c:	bne	24c50 <g_strcmp0@plt+0xedd0>
   24c10:	ldr	r1, [pc, #108]	; 24c84 <g_strcmp0@plt+0xee04>
   24c14:	mov	r0, r6
   24c18:	bl	1561c <g_str_has_prefix@plt>
   24c1c:	cmp	r0, #0
   24c20:	movne	r1, #50	; 0x32
   24c24:	beq	24c6c <g_strcmp0@plt+0xedec>
   24c28:	mov	r0, r4
   24c2c:	bl	271f8 <g_strcmp0@plt+0x11378>
   24c30:	mov	r2, r6
   24c34:	mov	r1, r7
   24c38:	mov	r0, r4
   24c3c:	bl	27510 <g_strcmp0@plt+0x11690>
   24c40:	cmp	r5, #18
   24c44:	beq	24c58 <g_strcmp0@plt+0xedd8>
   24c48:	mov	r0, #1
   24c4c:	pop	{r4, r5, r6, r7, r8, pc}
   24c50:	mov	r1, #150	; 0x96
   24c54:	b	24c28 <g_strcmp0@plt+0xeda8>
   24c58:	mov	r0, r4
   24c5c:	mov	r1, #0
   24c60:	bl	272c0 <g_strcmp0@plt+0x11440>
   24c64:	mov	r0, #1
   24c68:	pop	{r4, r5, r6, r7, r8, pc}
   24c6c:	mov	r2, r6
   24c70:	mov	r1, r7
   24c74:	mov	r0, r4
   24c78:	bl	27450 <g_strcmp0@plt+0x115d0>
   24c7c:	b	24c40 <g_strcmp0@plt+0xedc0>
   24c80:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   24c84:	andeq	lr, r2, r4, lsl fp
   24c88:	push	{r4, lr}
   24c8c:	subs	r4, r0, #0
   24c90:	sub	sp, sp, #8
   24c94:	beq	24d18 <g_strcmp0@plt+0xee98>
   24c98:	cmp	r4, #59	; 0x3b
   24c9c:	bls	24d30 <g_strcmp0@plt+0xeeb0>
   24ca0:	vmov	s15, r4
   24ca4:	vldr	d4, [pc, #156]	; 24d48 <g_strcmp0@plt+0xeec8>
   24ca8:	vldr	d5, [pc, #160]	; 24d50 <g_strcmp0@plt+0xeed0>
   24cac:	vcvt.f64.u32	d6, s15
   24cb0:	vdiv.f64	d7, d6, d4
   24cb4:	vadd.f64	d7, d7, d5
   24cb8:	vcvt.u32.f64	s15, d7
   24cbc:	vmov	r4, s15
   24cc0:	cmp	r4, #59	; 0x3b
   24cc4:	bls	24d00 <g_strcmp0@plt+0xee80>
   24cc8:	ldr	r3, [pc, #136]	; 24d58 <g_strcmp0@plt+0xeed8>
   24ccc:	mov	r2, #5
   24cd0:	str	r2, [sp]
   24cd4:	umull	r3, r4, r3, r4
   24cd8:	ldr	r2, [pc, #124]	; 24d5c <g_strcmp0@plt+0xeedc>
   24cdc:	ldr	r1, [pc, #124]	; 24d60 <g_strcmp0@plt+0xeee0>
   24ce0:	lsr	r4, r4, #5
   24ce4:	mov	r3, r4
   24ce8:	mov	r0, #0
   24cec:	bl	154a8 <dcngettext@plt>
   24cf0:	mov	r1, r4
   24cf4:	add	sp, sp, #8
   24cf8:	pop	{r4, lr}
   24cfc:	b	15490 <g_strdup_printf@plt>
   24d00:	mov	r3, #5
   24d04:	str	r3, [sp]
   24d08:	ldr	r2, [pc, #84]	; 24d64 <g_strcmp0@plt+0xeee4>
   24d0c:	vmov	r3, s15
   24d10:	ldr	r1, [pc, #80]	; 24d68 <g_strcmp0@plt+0xeee8>
   24d14:	b	24ce8 <g_strcmp0@plt+0xee68>
   24d18:	mov	r2, #5
   24d1c:	ldr	r1, [pc, #72]	; 24d6c <g_strcmp0@plt+0xeeec>
   24d20:	bl	15880 <dcgettext@plt>
   24d24:	add	sp, sp, #8
   24d28:	pop	{r4, lr}
   24d2c:	b	15490 <g_strdup_printf@plt>
   24d30:	mov	r3, #5
   24d34:	str	r3, [sp]
   24d38:	ldr	r2, [pc, #48]	; 24d70 <g_strcmp0@plt+0xeef0>
   24d3c:	mov	r3, r4
   24d40:	ldr	r1, [pc, #44]	; 24d74 <g_strcmp0@plt+0xeef4>
   24d44:	b	24ce8 <g_strcmp0@plt+0xee68>
   24d48:	andeq	r0, r0, r0
   24d4c:	submi	r0, lr, r0
   24d50:	andeq	r0, r0, r0
   24d54:	svccc	0x00e00000
   24d58:	stmhi	r8, {r0, r3, r7, fp, pc}
   24d5c:	andeq	pc, r2, r0, ror ip	; <UNPREDICTABLE>
   24d60:	andeq	pc, r2, ip, ror ip	; <UNPREDICTABLE>
   24d64:	andeq	pc, r2, r8, asr ip	; <UNPREDICTABLE>
   24d68:	andeq	pc, r2, r4, ror #24
   24d6c:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   24d70:	andeq	pc, r2, r0, asr #24
   24d74:	andeq	pc, r2, ip, asr #24
   24d78:	push	{r4, r5, r6, r7, r8, lr}
   24d7c:	subs	r5, r0, #0
   24d80:	sub	sp, sp, #8
   24d84:	beq	24eac <g_strcmp0@plt+0xf02c>
   24d88:	cmp	r5, #59	; 0x3b
   24d8c:	bls	24f30 <g_strcmp0@plt+0xf0b0>
   24d90:	vmov	s15, r5
   24d94:	vldr	d5, [pc, #436]	; 24f50 <g_strcmp0@plt+0xf0d0>
   24d98:	vldr	d6, [pc, #440]	; 24f58 <g_strcmp0@plt+0xf0d8>
   24d9c:	vcvt.f64.u32	d4, s15
   24da0:	vdiv.f64	d7, d4, d5
   24da4:	vadd.f64	d7, d7, d6
   24da8:	vcvt.u32.f64	s15, d7
   24dac:	vmov	r4, s15
   24db0:	cmp	r4, #59	; 0x3b
   24db4:	bls	24dfc <g_strcmp0@plt+0xef7c>
   24db8:	ldr	r5, [pc, #416]	; 24f60 <g_strcmp0@plt+0xf0e0>
   24dbc:	umull	r3, r5, r5, r4
   24dc0:	lsr	r5, r5, #5
   24dc4:	rsb	r3, r5, r5, lsl #4
   24dc8:	subs	r4, r4, r3, lsl #2
   24dcc:	bne	24e40 <g_strcmp0@plt+0xefc0>
   24dd0:	mov	r3, #5
   24dd4:	ldr	r2, [pc, #392]	; 24f64 <g_strcmp0@plt+0xf0e4>
   24dd8:	ldr	r1, [pc, #392]	; 24f68 <g_strcmp0@plt+0xf0e8>
   24ddc:	str	r3, [sp]
   24de0:	mov	r0, r4
   24de4:	mov	r3, r5
   24de8:	bl	154a8 <dcngettext@plt>
   24dec:	mov	r1, r5
   24df0:	add	sp, sp, #8
   24df4:	pop	{r4, r5, r6, r7, r8, lr}
   24df8:	b	15490 <g_strdup_printf@plt>
   24dfc:	ldr	r6, [pc, #348]	; 24f60 <g_strcmp0@plt+0xf0e0>
   24e00:	umull	r3, r6, r6, r5
   24e04:	lsr	r6, r6, #5
   24e08:	rsb	r6, r6, r6, lsl #4
   24e0c:	subs	r6, r5, r6, lsl #2
   24e10:	bne	24ec4 <g_strcmp0@plt+0xf044>
   24e14:	mov	r3, #5
   24e18:	str	r3, [sp]
   24e1c:	mov	r0, r6
   24e20:	vmov	r3, s15
   24e24:	ldr	r2, [pc, #320]	; 24f6c <g_strcmp0@plt+0xf0ec>
   24e28:	ldr	r1, [pc, #320]	; 24f70 <g_strcmp0@plt+0xf0f0>
   24e2c:	bl	154a8 <dcngettext@plt>
   24e30:	mov	r1, r4
   24e34:	add	sp, sp, #8
   24e38:	pop	{r4, r5, r6, r7, r8, lr}
   24e3c:	b	15490 <g_strdup_printf@plt>
   24e40:	mov	r2, #5
   24e44:	ldr	r1, [pc, #296]	; 24f74 <g_strcmp0@plt+0xf0f4>
   24e48:	mov	r0, #0
   24e4c:	mov	r6, r2
   24e50:	bl	15880 <dcgettext@plt>
   24e54:	mov	r3, r5
   24e58:	str	r6, [sp]
   24e5c:	ldr	r2, [pc, #276]	; 24f78 <g_strcmp0@plt+0xf0f8>
   24e60:	ldr	r1, [pc, #276]	; 24f7c <g_strcmp0@plt+0xf0fc>
   24e64:	mov	r7, r0
   24e68:	mov	r0, #0
   24e6c:	bl	154a8 <dcngettext@plt>
   24e70:	mov	r3, r4
   24e74:	str	r6, [sp]
   24e78:	ldr	r2, [pc, #256]	; 24f80 <g_strcmp0@plt+0xf100>
   24e7c:	ldr	r1, [pc, #256]	; 24f84 <g_strcmp0@plt+0xf104>
   24e80:	mov	r8, r0
   24e84:	mov	r0, #0
   24e88:	bl	154a8 <dcngettext@plt>
   24e8c:	mov	r2, r8
   24e90:	mov	r3, r4
   24e94:	mov	r1, r5
   24e98:	str	r0, [sp]
   24e9c:	mov	r0, r7
   24ea0:	bl	15490 <g_strdup_printf@plt>
   24ea4:	add	sp, sp, #8
   24ea8:	pop	{r4, r5, r6, r7, r8, pc}
   24eac:	mov	r2, #5
   24eb0:	ldr	r1, [pc, #208]	; 24f88 <g_strcmp0@plt+0xf108>
   24eb4:	bl	15880 <dcgettext@plt>
   24eb8:	add	sp, sp, #8
   24ebc:	pop	{r4, r5, r6, r7, r8, lr}
   24ec0:	b	15490 <g_strdup_printf@plt>
   24ec4:	mov	r2, #5
   24ec8:	ldr	r1, [pc, #164]	; 24f74 <g_strcmp0@plt+0xf0f4>
   24ecc:	mov	r0, #0
   24ed0:	mov	r5, r2
   24ed4:	bl	15880 <dcgettext@plt>
   24ed8:	mov	r3, r4
   24edc:	str	r5, [sp]
   24ee0:	ldr	r2, [pc, #152]	; 24f80 <g_strcmp0@plt+0xf100>
   24ee4:	ldr	r1, [pc, #152]	; 24f84 <g_strcmp0@plt+0xf104>
   24ee8:	mov	r7, r0
   24eec:	mov	r0, #0
   24ef0:	bl	154a8 <dcngettext@plt>
   24ef4:	mov	r3, r6
   24ef8:	str	r5, [sp]
   24efc:	ldr	r2, [pc, #136]	; 24f8c <g_strcmp0@plt+0xf10c>
   24f00:	ldr	r1, [pc, #136]	; 24f90 <g_strcmp0@plt+0xf110>
   24f04:	mov	r8, r0
   24f08:	mov	r0, #0
   24f0c:	bl	154a8 <dcngettext@plt>
   24f10:	mov	r2, r8
   24f14:	mov	r3, r6
   24f18:	mov	r1, r4
   24f1c:	str	r0, [sp]
   24f20:	mov	r0, r7
   24f24:	bl	15490 <g_strdup_printf@plt>
   24f28:	add	sp, sp, #8
   24f2c:	pop	{r4, r5, r6, r7, r8, pc}
   24f30:	mov	r3, #5
   24f34:	str	r3, [sp]
   24f38:	ldr	r2, [pc, #84]	; 24f94 <g_strcmp0@plt+0xf114>
   24f3c:	mov	r3, r5
   24f40:	ldr	r1, [pc, #80]	; 24f98 <g_strcmp0@plt+0xf118>
   24f44:	mov	r0, #0
   24f48:	b	24de8 <g_strcmp0@plt+0xef68>
   24f4c:	nop			; (mov r0, r0)
   24f50:	andeq	r0, r0, r0
   24f54:	submi	r0, lr, r0
   24f58:	andeq	r0, r0, r0
   24f5c:	svccc	0x00e00000
   24f60:	stmhi	r8, {r0, r3, r7, fp, pc}
   24f64:	andeq	pc, r2, r0, ror ip	; <UNPREDICTABLE>
   24f68:	andeq	pc, r2, ip, ror ip	; <UNPREDICTABLE>
   24f6c:	andeq	pc, r2, r8, asr ip	; <UNPREDICTABLE>
   24f70:	andeq	pc, r2, r4, ror #24
   24f74:	andeq	pc, r2, r4, lsl #25
   24f78:			; <UNDEFINED> instruction: 0x0002fcb0
   24f7c:			; <UNDEFINED> instruction: 0x0002fcb8
   24f80:	muleq	r2, r0, ip
   24f84:	muleq	r2, r8, ip
   24f88:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   24f8c:	andeq	pc, r2, r0, lsr #25
   24f90:	andeq	pc, r2, r8, lsr #25
   24f94:	andeq	pc, r2, r0, asr #24
   24f98:	andeq	pc, r2, ip, asr #24
   24f9c:	push	{r4, lr}
   24fa0:	sub	sp, sp, #8
   24fa4:	mov	r4, r0
   24fa8:	bl	157a8 <g_strv_length@plt>
   24fac:	subs	r2, r0, #0
   24fb0:	ldreq	r0, [pc, #224]	; 25098 <g_strcmp0@plt+0xf218>
   24fb4:	beq	24ff0 <g_strcmp0@plt+0xf170>
   24fb8:	cmp	r2, #1
   24fbc:	beq	24fec <g_strcmp0@plt+0xf16c>
   24fc0:	cmp	r2, #2
   24fc4:	beq	25054 <g_strcmp0@plt+0xf1d4>
   24fc8:	cmp	r2, #3
   24fcc:	beq	25074 <g_strcmp0@plt+0xf1f4>
   24fd0:	cmp	r2, #4
   24fd4:	beq	24ffc <g_strcmp0@plt+0xf17c>
   24fd8:	cmp	r2, #5
   24fdc:	movne	r0, #0
   24fe0:	beq	25024 <g_strcmp0@plt+0xf1a4>
   24fe4:	add	sp, sp, #8
   24fe8:	pop	{r4, pc}
   24fec:	ldr	r0, [r4]
   24ff0:	add	sp, sp, #8
   24ff4:	pop	{r4, lr}
   24ff8:	b	153a0 <g_strdup@plt>
   24ffc:	mov	r2, #5
   25000:	ldr	r1, [pc, #148]	; 2509c <g_strcmp0@plt+0xf21c>
   25004:	mov	r0, #0
   25008:	bl	15880 <dcgettext@plt>
   2500c:	ldr	r2, [r4, #12]
   25010:	ldr	r3, [r4, #8]
   25014:	str	r2, [sp]
   25018:	ldm	r4, {r1, r2}
   2501c:	bl	15490 <g_strdup_printf@plt>
   25020:	b	24fe4 <g_strcmp0@plt+0xf164>
   25024:	ldr	r1, [pc, #116]	; 250a0 <g_strcmp0@plt+0xf220>
   25028:	mov	r0, #0
   2502c:	bl	15880 <dcgettext@plt>
   25030:	ldr	r2, [r4, #16]
   25034:	ldr	r3, [r4, #12]
   25038:	str	r2, [sp, #4]
   2503c:	str	r3, [sp]
   25040:	ldrd	r2, [r4, #4]
   25044:	ldr	r1, [r4]
   25048:	bl	15490 <g_strdup_printf@plt>
   2504c:	add	sp, sp, #8
   25050:	pop	{r4, pc}
   25054:	mov	r2, #5
   25058:	ldr	r1, [pc, #68]	; 250a4 <g_strcmp0@plt+0xf224>
   2505c:	mov	r0, #0
   25060:	bl	15880 <dcgettext@plt>
   25064:	ldm	r4, {r1, r2}
   25068:	add	sp, sp, #8
   2506c:	pop	{r4, lr}
   25070:	b	15490 <g_strdup_printf@plt>
   25074:	mov	r2, #5
   25078:	ldr	r1, [pc, #40]	; 250a8 <g_strcmp0@plt+0xf228>
   2507c:	mov	r0, #0
   25080:	bl	15880 <dcgettext@plt>
   25084:	ldrd	r2, [r4, #4]
   25088:	ldr	r1, [r4]
   2508c:	add	sp, sp, #8
   25090:	pop	{r4, lr}
   25094:	b	15490 <g_strdup_printf@plt>
   25098:	andeq	lr, r2, r4, lsr #29
   2509c:	andeq	pc, r2, r4, asr #25
   250a0:	andeq	pc, r2, r0, asr #25
   250a4:	andeq	pc, r2, ip, asr #25
   250a8:	andeq	pc, r2, r8, asr #25
   250ac:	mov	r0, #0
   250b0:	bx	lr
   250b4:	push	{r4, lr}
   250b8:	sub	sp, sp, #16
   250bc:	bl	15580 <pk_task_get_type@plt>
   250c0:	mov	r4, r0
   250c4:	ldr	r0, [pc, #48]	; 250fc <g_strcmp0@plt+0xf27c>
   250c8:	bl	15748 <g_intern_static_string@plt>
   250cc:	ldr	r1, [pc, #44]	; 25100 <g_strcmp0@plt+0xf280>
   250d0:	mov	r2, #0
   250d4:	mov	r3, #24
   250d8:	stmib	sp, {r1, r2}
   250dc:	str	r3, [sp]
   250e0:	mov	r2, #132	; 0x84
   250e4:	ldr	r3, [pc, #24]	; 25104 <g_strcmp0@plt+0xf284>
   250e8:	mov	r1, r0
   250ec:	mov	r0, r4
   250f0:	bl	14fe0 <g_type_register_static_simple@plt>
   250f4:	add	sp, sp, #16
   250f8:	pop	{r4, pc}
   250fc:	strdeq	pc, [r2], -r4
   25100:	andeq	r5, r2, r4, ror #11
   25104:	andeq	r5, r2, r8, lsr #3
   25108:	push	{r4, lr}
   2510c:	mov	r4, r1
   25110:	bl	150f4 <gtk_widget_get_type@plt>
   25114:	ldr	r3, [r4, #20]
   25118:	mov	r1, r0
   2511c:	ldr	r0, [r3, #12]
   25120:	bl	15148 <g_type_check_instance_cast@plt>
   25124:	bl	1519c <gtk_widget_hide@plt>
   25128:	bl	15580 <pk_task_get_type@plt>
   2512c:	mov	r1, r0
   25130:	mov	r0, r4
   25134:	bl	15148 <g_type_check_instance_cast@plt>
   25138:	ldr	r3, [r4, #20]
   2513c:	ldr	r1, [r3, #28]
   25140:	bl	1546c <pk_task_user_accepted@plt>
   25144:	ldr	r3, [r4, #20]
   25148:	mov	r2, #0
   2514c:	str	r2, [r3, #28]
   25150:	str	r2, [r3, #12]
   25154:	pop	{r4, pc}
   25158:	push	{r4, lr}
   2515c:	mov	r4, r1
   25160:	bl	150f4 <gtk_widget_get_type@plt>
   25164:	ldr	r3, [r4, #20]
   25168:	mov	r1, r0
   2516c:	ldr	r0, [r3, #12]
   25170:	bl	15148 <g_type_check_instance_cast@plt>
   25174:	bl	1519c <gtk_widget_hide@plt>
   25178:	bl	15580 <pk_task_get_type@plt>
   2517c:	mov	r1, r0
   25180:	mov	r0, r4
   25184:	bl	15148 <g_type_check_instance_cast@plt>
   25188:	ldr	r3, [r4, #20]
   2518c:	ldr	r1, [r3, #28]
   25190:	bl	15424 <pk_task_user_declined@plt>
   25194:	ldr	r3, [r4, #20]
   25198:	mov	r2, #0
   2519c:	str	r2, [r3, #28]
   251a0:	str	r2, [r3, #12]
   251a4:	pop	{r4, pc}
   251a8:	push	{r4, r5, r6, lr}
   251ac:	mov	r4, r0
   251b0:	bl	15c58 <g_type_class_peek_parent@plt>
   251b4:	ldr	r1, [pc, #128]	; 2523c <g_strcmp0@plt+0xf3bc>
   251b8:	ldr	r3, [r1, #4]
   251bc:	cmp	r3, #0
   251c0:	str	r0, [r1]
   251c4:	bne	2522c <g_strcmp0@plt+0xf3ac>
   251c8:	mov	r1, #80	; 0x50
   251cc:	mov	r0, r4
   251d0:	bl	15dc0 <g_type_check_class_cast@plt>
   251d4:	mov	r5, r0
   251d8:	bl	15580 <pk_task_get_type@plt>
   251dc:	mov	r1, r0
   251e0:	mov	r0, r4
   251e4:	bl	15dc0 <g_type_check_class_cast@plt>
   251e8:	ldr	r1, [pc, #80]	; 25240 <g_strcmp0@plt+0xf3c0>
   251ec:	ldr	r2, [pc, #80]	; 25244 <g_strcmp0@plt+0xf3c4>
   251f0:	str	r1, [r5, #24]
   251f4:	ldr	lr, [pc, #76]	; 25248 <g_strcmp0@plt+0xf3c8>
   251f8:	ldr	r1, [pc, #76]	; 2524c <g_strcmp0@plt+0xf3cc>
   251fc:	ldr	ip, [pc, #76]	; 25250 <g_strcmp0@plt+0xf3d0>
   25200:	mov	r3, r0
   25204:	mov	r0, r4
   25208:	str	r2, [r3, #92]	; 0x5c
   2520c:	ldr	r2, [pc, #64]	; 25254 <g_strcmp0@plt+0xf3d4>
   25210:	str	lr, [r3, #96]	; 0x60
   25214:	str	r1, [r3, #104]	; 0x68
   25218:	str	ip, [r3, #100]	; 0x64
   2521c:	str	r2, [r3, #108]	; 0x6c
   25220:	mov	r1, #36	; 0x24
   25224:	pop	{r4, r5, r6, lr}
   25228:	b	15988 <g_type_class_add_private@plt>
   2522c:	add	r1, r1, #4
   25230:	mov	r0, r4
   25234:	bl	15028 <g_type_class_adjust_private_offset@plt>
   25238:	b	251c8 <g_strcmp0@plt+0xf348>
   2523c:	andeq	r1, r4, r8, lsr #18
   25240:	andeq	r6, r2, r4, ror #14
   25244:	andeq	r6, r2, r8, lsr r5
   25248:	andeq	r6, r2, r4, lsl #5
   2524c:	andeq	r5, r2, ip, lsl lr
   25250:	andeq	r6, r2, r4, lsl r0
   25254:	andeq	r5, r2, r4, lsl #21
   25258:	push	{r4, r5, r6, lr}
   2525c:	mov	r4, r1
   25260:	mov	r6, r0
   25264:	mov	r5, r2
   25268:	bl	150f4 <gtk_widget_get_type@plt>
   2526c:	cmn	r4, #8
   25270:	mov	r1, r0
   25274:	mov	r0, r6
   25278:	beq	2528c <g_strcmp0@plt+0xf40c>
   2527c:	bl	15148 <g_type_check_instance_cast@plt>
   25280:	mov	r1, r5
   25284:	pop	{r4, r5, r6, lr}
   25288:	b	25158 <g_strcmp0@plt+0xf2d8>
   2528c:	bl	15148 <g_type_check_instance_cast@plt>
   25290:	mov	r1, r5
   25294:	pop	{r4, r5, r6, lr}
   25298:	b	25108 <g_strcmp0@plt+0xf288>
   2529c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252a0:	mov	r3, r1
   252a4:	ldr	r6, [pc, #676]	; 25550 <g_strcmp0@plt+0xf6d0>
   252a8:	sub	sp, sp, #20
   252ac:	mov	r7, r2
   252b0:	ldr	r2, [r6]
   252b4:	mov	r1, r7
   252b8:	mov	sl, r0
   252bc:	mov	r0, r3
   252c0:	mov	r3, #0
   252c4:	str	r2, [sp, #12]
   252c8:	str	r3, [sp, #8]
   252cc:	bl	15388 <pk_package_sack_filter_by_info@plt>
   252d0:	mov	r4, r0
   252d4:	bl	15a6c <pk_package_sack_get_size@plt>
   252d8:	cmp	r0, #0
   252dc:	beq	25344 <g_strcmp0@plt+0xf4c4>
   252e0:	mov	r1, #6
   252e4:	mov	r0, #1
   252e8:	bl	15274 <gtk_box_new@plt>
   252ec:	sub	r7, r7, #11
   252f0:	mov	r5, r0
   252f4:	bl	1540c <gtk_container_get_type@plt>
   252f8:	mov	r1, r0
   252fc:	mov	r0, r5
   25300:	bl	15148 <g_type_check_instance_cast@plt>
   25304:	mov	r1, #12
   25308:	bl	15448 <gtk_container_set_border_width@plt>
   2530c:	mov	r2, #5
   25310:	cmp	r7, #9
   25314:	ldrls	pc, [pc, r7, lsl #2]
   25318:	b	254fc <g_strcmp0@plt+0xf67c>
   2531c:	andeq	r5, r2, r0, lsr #8
   25320:	andeq	r5, r2, ip, asr #8
   25324:	andeq	r5, r2, r8, ror r4
   25328:	strdeq	r5, [r2], -ip
   2532c:	andeq	r5, r2, r4, lsr #9
   25330:	strdeq	r5, [r2], -ip
   25334:	strdeq	r5, [r2], -ip
   25338:	strdeq	r5, [r2], -ip
   2533c:	ldrdeq	r5, [r2], -r0
   25340:	andeq	r5, r2, r0, lsl #7
   25344:	mov	r0, r7
   25348:	bl	15b44 <pk_info_enum_to_string@plt>
   2534c:	ldr	r2, [pc, #512]	; 25554 <g_strcmp0@plt+0xf6d4>
   25350:	mov	r1, #128	; 0x80
   25354:	mov	r3, r0
   25358:	ldr	r0, [pc, #504]	; 25558 <g_strcmp0@plt+0xf6d8>
   2535c:	bl	151f0 <g_log@plt>
   25360:	mov	r0, r4
   25364:	bl	15b5c <g_object_unref@plt>
   25368:	ldr	r2, [sp, #12]
   2536c:	ldr	r3, [r6]
   25370:	cmp	r2, r3
   25374:	bne	2554c <g_strcmp0@plt+0xf6cc>
   25378:	add	sp, sp, #20
   2537c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25380:	ldr	r1, [pc, #468]	; 2555c <g_strcmp0@plt+0xf6dc>
   25384:	mov	r0, #0
   25388:	bl	15880 <dcgettext@plt>
   2538c:	mov	r2, #5
   25390:	ldr	r1, [pc, #456]	; 25560 <g_strcmp0@plt+0xf6e0>
   25394:	mov	fp, r0
   25398:	mov	r0, #0
   2539c:	bl	15880 <dcgettext@plt>
   253a0:	bl	15544 <gtk_label_new@plt>
   253a4:	str	r0, [sp, #4]
   253a8:	add	r2, sp, #8
   253ac:	mov	r1, #0
   253b0:	mov	r0, r4
   253b4:	bl	15088 <pk_package_sack_get_details@plt>
   253b8:	cmp	r0, #0
   253bc:	beq	25528 <g_strcmp0@plt+0xf6a8>
   253c0:	mov	r0, r4
   253c4:	bl	153e8 <pk_package_sack_get_total_bytes@plt>
   253c8:	mov	r8, r0
   253cc:	mov	r0, r4
   253d0:	mov	r9, r1
   253d4:	bl	15628 <pk_package_sack_get_array@plt>
   253d8:	mov	r2, r8
   253dc:	mov	r3, r9
   253e0:	mov	r1, fp
   253e4:	mov	r7, r0
   253e8:	mov	r0, r5
   253ec:	bl	28260 <g_strcmp0@plt+0x123e0>
   253f0:	mov	r1, r7
   253f4:	mov	r0, r5
   253f8:	bl	280c4 <g_strcmp0@plt+0x12244>
   253fc:	ldr	r2, [sp, #4]
   25400:	mov	r1, r5
   25404:	mov	r0, sl
   25408:	bl	156a0 <gtk_notebook_append_page@plt>
   2540c:	cmp	r7, #0
   25410:	beq	25360 <g_strcmp0@plt+0xf4e0>
   25414:	mov	r0, r7
   25418:	bl	15c7c <g_ptr_array_unref@plt>
   2541c:	b	25360 <g_strcmp0@plt+0xf4e0>
   25420:	ldr	r1, [pc, #316]	; 25564 <g_strcmp0@plt+0xf6e4>
   25424:	mov	r0, #0
   25428:	bl	15880 <dcgettext@plt>
   2542c:	mov	r2, #5
   25430:	ldr	r1, [pc, #304]	; 25568 <g_strcmp0@plt+0xf6e8>
   25434:	mov	fp, r0
   25438:	mov	r0, #0
   2543c:	bl	15880 <dcgettext@plt>
   25440:	bl	15544 <gtk_label_new@plt>
   25444:	str	r0, [sp, #4]
   25448:	b	253a8 <g_strcmp0@plt+0xf528>
   2544c:	ldr	r1, [pc, #280]	; 2556c <g_strcmp0@plt+0xf6ec>
   25450:	mov	r0, #0
   25454:	bl	15880 <dcgettext@plt>
   25458:	mov	r2, #5
   2545c:	ldr	r1, [pc, #268]	; 25570 <g_strcmp0@plt+0xf6f0>
   25460:	mov	fp, r0
   25464:	mov	r0, #0
   25468:	bl	15880 <dcgettext@plt>
   2546c:	bl	15544 <gtk_label_new@plt>
   25470:	str	r0, [sp, #4]
   25474:	b	253a8 <g_strcmp0@plt+0xf528>
   25478:	ldr	r1, [pc, #244]	; 25574 <g_strcmp0@plt+0xf6f4>
   2547c:	mov	r0, #0
   25480:	bl	15880 <dcgettext@plt>
   25484:	mov	r2, #5
   25488:	ldr	r1, [pc, #232]	; 25578 <g_strcmp0@plt+0xf6f8>
   2548c:	mov	fp, r0
   25490:	mov	r0, #0
   25494:	bl	15880 <dcgettext@plt>
   25498:	bl	15544 <gtk_label_new@plt>
   2549c:	str	r0, [sp, #4]
   254a0:	b	253a8 <g_strcmp0@plt+0xf528>
   254a4:	ldr	r1, [pc, #200]	; 25574 <g_strcmp0@plt+0xf6f4>
   254a8:	mov	r0, #0
   254ac:	bl	15880 <dcgettext@plt>
   254b0:	mov	r2, #5
   254b4:	ldr	r1, [pc, #192]	; 2557c <g_strcmp0@plt+0xf6fc>
   254b8:	mov	fp, r0
   254bc:	mov	r0, #0
   254c0:	bl	15880 <dcgettext@plt>
   254c4:	bl	15544 <gtk_label_new@plt>
   254c8:	str	r0, [sp, #4]
   254cc:	b	253a8 <g_strcmp0@plt+0xf528>
   254d0:	ldr	r1, [pc, #168]	; 25580 <g_strcmp0@plt+0xf700>
   254d4:	mov	r0, #0
   254d8:	bl	15880 <dcgettext@plt>
   254dc:	mov	r2, #5
   254e0:	ldr	r1, [pc, #156]	; 25584 <g_strcmp0@plt+0xf704>
   254e4:	mov	fp, r0
   254e8:	mov	r0, #0
   254ec:	bl	15880 <dcgettext@plt>
   254f0:	bl	15544 <gtk_label_new@plt>
   254f4:	str	r0, [sp, #4]
   254f8:	b	253a8 <g_strcmp0@plt+0xf528>
   254fc:	ldr	r1, [pc, #132]	; 25588 <g_strcmp0@plt+0xf708>
   25500:	mov	r0, #0
   25504:	bl	15880 <dcgettext@plt>
   25508:	mov	r2, #5
   2550c:	ldr	r1, [pc, #120]	; 2558c <g_strcmp0@plt+0xf70c>
   25510:	mov	fp, r0
   25514:	mov	r0, #0
   25518:	bl	15880 <dcgettext@plt>
   2551c:	bl	15544 <gtk_label_new@plt>
   25520:	str	r0, [sp, #4]
   25524:	b	253a8 <g_strcmp0@plt+0xf528>
   25528:	ldr	r3, [sp, #8]
   2552c:	ldr	r2, [pc, #92]	; 25590 <g_strcmp0@plt+0xf710>
   25530:	mov	r1, #16
   25534:	ldr	r3, [r3, #8]
   25538:	ldr	r0, [pc, #24]	; 25558 <g_strcmp0@plt+0xf6d8>
   2553c:	bl	151f0 <g_log@plt>
   25540:	ldr	r0, [sp, #8]
   25544:	bl	15064 <g_error_free@plt>
   25548:	b	253c0 <g_strcmp0@plt+0xf540>
   2554c:	bl	157f0 <__stack_chk_fail@plt>
   25550:	andeq	r0, r4, r0, asr lr
   25554:	strdeq	pc, [r2], -ip
   25558:	andeq	r8, r2, ip, lsl #29
   2555c:	strdeq	pc, [r2], -r0
   25560:	andeq	pc, r2, r4, lsr #28
   25564:	andeq	pc, r2, r4, ror sp	; <UNPREDICTABLE>
   25568:	andeq	pc, r2, r4, lsr #27
   2556c:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   25570:	andeq	r9, r2, r8, ror #24
   25574:	andeq	pc, r2, r4, asr #26
   25578:	strdeq	sl, [r2], -ip
   2557c:	strdeq	sp, [r2], -r0
   25580:	andeq	pc, r2, ip, lsr #27
   25584:	andeq	pc, r2, r4, ror #27
   25588:	andeq	pc, r2, r0, lsr lr	; <UNPREDICTABLE>
   2558c:	andeq	lr, r2, r8, lsr #10
   25590:	andeq	pc, r2, r4, ror #28
   25594:	push	{r4, lr}
   25598:	mcr	15, 0, r0, cr7, cr10, {5}
   2559c:	ldr	r4, [pc, #60]	; 255e0 <g_strcmp0@plt+0xf760>
   255a0:	ldr	r3, [r4, #8]
   255a4:	mcr	15, 0, r0, cr7, cr10, {5}
   255a8:	cmp	r3, #0
   255ac:	beq	255b8 <g_strcmp0@plt+0xf738>
   255b0:	ldr	r0, [r4, #8]
   255b4:	pop	{r4, pc}
   255b8:	add	r0, r4, #8
   255bc:	bl	1567c <g_once_init_enter@plt>
   255c0:	cmp	r0, #0
   255c4:	beq	255b0 <g_strcmp0@plt+0xf730>
   255c8:	bl	250b4 <g_strcmp0@plt+0xf234>
   255cc:	mov	r1, r0
   255d0:	add	r0, r4, #8
   255d4:	bl	15b98 <g_once_init_leave@plt>
   255d8:	ldr	r0, [r4, #8]
   255dc:	pop	{r4, pc}
   255e0:	andeq	r1, r4, r8, lsr #18
   255e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   255e8:	sub	sp, sp, #16
   255ec:	ldr	r7, [pc, #1076]	; 25a28 <g_strcmp0@plt+0xfba8>
   255f0:	mov	r4, r0
   255f4:	mov	r6, #0
   255f8:	ldr	r3, [r7]
   255fc:	str	r3, [sp, #12]
   25600:	bl	25594 <g_strcmp0@plt+0xf714>
   25604:	mov	r1, r0
   25608:	mov	r0, r4
   2560c:	bl	155f8 <g_type_instance_get_private@plt>
   25610:	mov	r5, r0
   25614:	str	r0, [r4, #20]
   25618:	ldr	r0, [pc, #1036]	; 25a2c <g_strcmp0@plt+0xfbac>
   2561c:	str	r6, [r5, #28]
   25620:	str	r6, [r5, #8]
   25624:	str	r6, [r5, #12]
   25628:	bl	14f8c <g_settings_new@plt>
   2562c:	ldr	r8, [r4, #20]
   25630:	str	r0, [r5, #4]
   25634:	str	r6, [sp, #8]
   25638:	bl	15afc <gtk_builder_new@plt>
   2563c:	ldr	r3, [r4, #20]
   25640:	add	r2, sp, #8
   25644:	ldr	r1, [pc, #996]	; 25a30 <g_strcmp0@plt+0xfbb0>
   25648:	str	r0, [r8, #16]
   2564c:	ldr	r0, [r3, #16]
   25650:	bl	15e08 <gtk_builder_add_from_file@plt>
   25654:	cmp	r0, r6
   25658:	beq	259b8 <g_strcmp0@plt+0xfb38>
   2565c:	ldr	r3, [r4, #20]
   25660:	ldr	r1, [pc, #972]	; 25a34 <g_strcmp0@plt+0xfbb4>
   25664:	mov	r6, #0
   25668:	ldr	r0, [r3, #16]
   2566c:	bl	15418 <gtk_builder_get_object@plt>
   25670:	mov	r8, r0
   25674:	bl	150f4 <gtk_widget_get_type@plt>
   25678:	mov	r5, r0
   2567c:	mov	r1, r0
   25680:	mov	r0, r8
   25684:	bl	15148 <g_type_check_instance_cast@plt>
   25688:	ldr	r2, [pc, #936]	; 25a38 <g_strcmp0@plt+0xfbb8>
   2568c:	str	r6, [sp, #4]
   25690:	str	r6, [sp]
   25694:	mov	r3, r4
   25698:	ldr	r1, [pc, #924]	; 25a3c <g_strcmp0@plt+0xfbbc>
   2569c:	bl	15670 <g_signal_connect_data@plt>
   256a0:	ldr	r3, [r4, #20]
   256a4:	ldr	r1, [pc, #904]	; 25a34 <g_strcmp0@plt+0xfbb4>
   256a8:	ldr	r0, [r3, #16]
   256ac:	bl	15418 <gtk_builder_get_object@plt>
   256b0:	mov	r1, r5
   256b4:	bl	15148 <g_type_check_instance_cast@plt>
   256b8:	mov	r9, r0
   256bc:	bl	15e38 <gtk_window_get_type@plt>
   256c0:	mov	r1, r0
   256c4:	mov	r8, r0
   256c8:	mov	r0, r9
   256cc:	bl	15148 <g_type_check_instance_cast@plt>
   256d0:	ldr	r1, [pc, #872]	; 25a40 <g_strcmp0@plt+0xfbc0>
   256d4:	bl	152bc <gtk_window_set_icon_name@plt>
   256d8:	ldr	r3, [r4, #20]
   256dc:	ldr	r1, [pc, #864]	; 25a44 <g_strcmp0@plt+0xfbc4>
   256e0:	ldr	r0, [r3, #16]
   256e4:	bl	15418 <gtk_builder_get_object@plt>
   256e8:	mov	r1, r5
   256ec:	bl	15148 <g_type_check_instance_cast@plt>
   256f0:	ldr	r2, [pc, #832]	; 25a38 <g_strcmp0@plt+0xfbb8>
   256f4:	str	r6, [sp, #4]
   256f8:	str	r6, [sp]
   256fc:	mov	r3, r4
   25700:	ldr	r1, [pc, #832]	; 25a48 <g_strcmp0@plt+0xfbc8>
   25704:	bl	15670 <g_signal_connect_data@plt>
   25708:	ldr	r3, [r4, #20]
   2570c:	ldr	r1, [pc, #824]	; 25a4c <g_strcmp0@plt+0xfbcc>
   25710:	ldr	r0, [r3, #16]
   25714:	bl	15418 <gtk_builder_get_object@plt>
   25718:	mov	r1, r5
   2571c:	bl	15148 <g_type_check_instance_cast@plt>
   25720:	bl	1519c <gtk_widget_hide@plt>
   25724:	mov	r2, #5
   25728:	ldr	r1, [pc, #800]	; 25a50 <g_strcmp0@plt+0xfbd0>
   2572c:	mov	r0, r6
   25730:	bl	15880 <dcgettext@plt>
   25734:	bl	152f8 <gtk_button_new_with_mnemonic@plt>
   25738:	mov	r3, r4
   2573c:	str	r6, [sp, #4]
   25740:	str	r6, [sp]
   25744:	ldr	r2, [pc, #776]	; 25a54 <g_strcmp0@plt+0xfbd4>
   25748:	ldr	r1, [pc, #760]	; 25a48 <g_strcmp0@plt+0xfbc8>
   2574c:	mov	r9, r0
   25750:	bl	15670 <g_signal_connect_data@plt>
   25754:	mov	r2, #5
   25758:	mov	r0, r6
   2575c:	ldr	r1, [pc, #756]	; 25a58 <g_strcmp0@plt+0xfbd8>
   25760:	bl	15880 <dcgettext@plt>
   25764:	mov	r1, r0
   25768:	mov	r0, r9
   2576c:	bl	152b0 <gtk_widget_set_tooltip_text@plt>
   25770:	ldr	r3, [r4, #20]
   25774:	ldr	r1, [pc, #696]	; 25a34 <g_strcmp0@plt+0xfbb4>
   25778:	ldr	r0, [r3, #16]
   2577c:	bl	15418 <gtk_builder_get_object@plt>
   25780:	mov	r1, r5
   25784:	bl	15148 <g_type_check_instance_cast@plt>
   25788:	mov	sl, r0
   2578c:	bl	15928 <gtk_dialog_get_type@plt>
   25790:	mov	r1, r0
   25794:	mov	r0, sl
   25798:	bl	15148 <g_type_check_instance_cast@plt>
   2579c:	bl	14f44 <gtk_dialog_get_action_area@plt>
   257a0:	mov	sl, r0
   257a4:	bl	15664 <gtk_box_get_type@plt>
   257a8:	mov	r1, r0
   257ac:	mov	r0, sl
   257b0:	bl	15148 <g_type_check_instance_cast@plt>
   257b4:	mov	r3, r6
   257b8:	mov	r2, r6
   257bc:	mov	r1, r9
   257c0:	str	r6, [sp]
   257c4:	bl	15700 <gtk_box_pack_start@plt>
   257c8:	mov	r0, r9
   257cc:	bl	15b50 <gtk_widget_show@plt>
   257d0:	str	r6, [sp, #8]
   257d4:	ldr	r6, [r4, #20]
   257d8:	bl	15afc <gtk_builder_new@plt>
   257dc:	ldr	r3, [r4, #20]
   257e0:	add	r2, sp, #8
   257e4:	ldr	r1, [pc, #624]	; 25a5c <g_strcmp0@plt+0xfbdc>
   257e8:	str	r0, [r6, #24]
   257ec:	ldr	r0, [r3, #24]
   257f0:	bl	15e08 <gtk_builder_add_from_file@plt>
   257f4:	cmp	r0, #0
   257f8:	beq	25a00 <g_strcmp0@plt+0xfb80>
   257fc:	ldr	r3, [r4, #20]
   25800:	ldr	r1, [pc, #600]	; 25a60 <g_strcmp0@plt+0xfbe0>
   25804:	mov	r6, #0
   25808:	ldr	r0, [r3, #24]
   2580c:	bl	15418 <gtk_builder_get_object@plt>
   25810:	mov	r1, r5
   25814:	bl	15148 <g_type_check_instance_cast@plt>
   25818:	ldr	r2, [pc, #536]	; 25a38 <g_strcmp0@plt+0xfbb8>
   2581c:	str	r6, [sp, #4]
   25820:	str	r6, [sp]
   25824:	mov	r3, r4
   25828:	ldr	r1, [pc, #524]	; 25a3c <g_strcmp0@plt+0xfbbc>
   2582c:	bl	15670 <g_signal_connect_data@plt>
   25830:	ldr	r3, [r4, #20]
   25834:	ldr	r1, [pc, #548]	; 25a60 <g_strcmp0@plt+0xfbe0>
   25838:	ldr	r0, [r3, #24]
   2583c:	bl	15418 <gtk_builder_get_object@plt>
   25840:	mov	r1, r5
   25844:	bl	15148 <g_type_check_instance_cast@plt>
   25848:	mov	r1, r8
   2584c:	bl	15148 <g_type_check_instance_cast@plt>
   25850:	ldr	r1, [pc, #488]	; 25a40 <g_strcmp0@plt+0xfbc0>
   25854:	bl	152bc <gtk_window_set_icon_name@plt>
   25858:	ldr	r3, [r4, #20]
   2585c:	ldr	r1, [pc, #512]	; 25a64 <g_strcmp0@plt+0xfbe4>
   25860:	ldr	r0, [r3, #24]
   25864:	bl	15418 <gtk_builder_get_object@plt>
   25868:	mov	r1, r5
   2586c:	bl	15148 <g_type_check_instance_cast@plt>
   25870:	ldr	r2, [pc, #476]	; 25a54 <g_strcmp0@plt+0xfbd4>
   25874:	str	r6, [sp, #4]
   25878:	str	r6, [sp]
   2587c:	mov	r3, r4
   25880:	ldr	r1, [pc, #448]	; 25a48 <g_strcmp0@plt+0xfbc8>
   25884:	bl	15670 <g_signal_connect_data@plt>
   25888:	ldr	r3, [r4, #20]
   2588c:	ldr	r1, [pc, #468]	; 25a68 <g_strcmp0@plt+0xfbe8>
   25890:	ldr	r0, [r3, #24]
   25894:	bl	15418 <gtk_builder_get_object@plt>
   25898:	mov	r1, r5
   2589c:	bl	15148 <g_type_check_instance_cast@plt>
   258a0:	mov	r3, r4
   258a4:	ldr	r2, [pc, #396]	; 25a38 <g_strcmp0@plt+0xfbb8>
   258a8:	ldr	r1, [pc, #408]	; 25a48 <g_strcmp0@plt+0xfbc8>
   258ac:	str	r6, [sp, #4]
   258b0:	str	r6, [sp]
   258b4:	bl	15670 <g_signal_connect_data@plt>
   258b8:	str	r6, [sp, #8]
   258bc:	ldr	r6, [r4, #20]
   258c0:	bl	15afc <gtk_builder_new@plt>
   258c4:	ldr	r3, [r4, #20]
   258c8:	add	r2, sp, #8
   258cc:	ldr	r1, [pc, #408]	; 25a6c <g_strcmp0@plt+0xfbec>
   258d0:	str	r0, [r6, #20]
   258d4:	ldr	r0, [r3, #20]
   258d8:	bl	15e08 <gtk_builder_add_from_file@plt>
   258dc:	cmp	r0, #0
   258e0:	beq	259dc <g_strcmp0@plt+0xfb5c>
   258e4:	ldr	r3, [r4, #20]
   258e8:	ldr	r1, [pc, #384]	; 25a70 <g_strcmp0@plt+0xfbf0>
   258ec:	mov	r6, #0
   258f0:	ldr	r0, [r3, #20]
   258f4:	bl	15418 <gtk_builder_get_object@plt>
   258f8:	mov	r1, r5
   258fc:	bl	15148 <g_type_check_instance_cast@plt>
   25900:	ldr	r2, [pc, #304]	; 25a38 <g_strcmp0@plt+0xfbb8>
   25904:	mov	r3, r4
   25908:	ldr	r1, [pc, #300]	; 25a3c <g_strcmp0@plt+0xfbbc>
   2590c:	str	r6, [sp, #4]
   25910:	str	r6, [sp]
   25914:	bl	15670 <g_signal_connect_data@plt>
   25918:	ldr	r3, [r4, #20]
   2591c:	ldr	r1, [pc, #332]	; 25a70 <g_strcmp0@plt+0xfbf0>
   25920:	ldr	r0, [r3, #20]
   25924:	bl	15418 <gtk_builder_get_object@plt>
   25928:	mov	r1, r5
   2592c:	bl	15148 <g_type_check_instance_cast@plt>
   25930:	mov	r1, r8
   25934:	bl	15148 <g_type_check_instance_cast@plt>
   25938:	ldr	r1, [pc, #256]	; 25a40 <g_strcmp0@plt+0xfbc0>
   2593c:	bl	152bc <gtk_window_set_icon_name@plt>
   25940:	ldr	r3, [r4, #20]
   25944:	ldr	r1, [pc, #296]	; 25a74 <g_strcmp0@plt+0xfbf4>
   25948:	ldr	r0, [r3, #20]
   2594c:	bl	15418 <gtk_builder_get_object@plt>
   25950:	mov	r1, r5
   25954:	bl	15148 <g_type_check_instance_cast@plt>
   25958:	ldr	r2, [pc, #244]	; 25a54 <g_strcmp0@plt+0xfbd4>
   2595c:	mov	r3, r4
   25960:	ldr	r1, [pc, #224]	; 25a48 <g_strcmp0@plt+0xfbc8>
   25964:	str	r6, [sp, #4]
   25968:	str	r6, [sp]
   2596c:	bl	15670 <g_signal_connect_data@plt>
   25970:	ldr	r3, [r4, #20]
   25974:	ldr	r1, [pc, #252]	; 25a78 <g_strcmp0@plt+0xfbf8>
   25978:	ldr	r0, [r3, #20]
   2597c:	bl	15418 <gtk_builder_get_object@plt>
   25980:	mov	r1, r5
   25984:	bl	15148 <g_type_check_instance_cast@plt>
   25988:	mov	r3, r4
   2598c:	ldr	r2, [pc, #164]	; 25a38 <g_strcmp0@plt+0xfbb8>
   25990:	str	r6, [sp, #4]
   25994:	str	r6, [sp]
   25998:	ldr	r1, [pc, #168]	; 25a48 <g_strcmp0@plt+0xfbc8>
   2599c:	bl	15670 <g_signal_connect_data@plt>
   259a0:	ldr	r2, [sp, #12]
   259a4:	ldr	r3, [r7]
   259a8:	cmp	r2, r3
   259ac:	bne	25a24 <g_strcmp0@plt+0xfba4>
   259b0:	add	sp, sp, #16
   259b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   259b8:	ldr	r3, [sp, #8]
   259bc:	ldr	r2, [pc, #184]	; 25a7c <g_strcmp0@plt+0xfbfc>
   259c0:	mov	r1, #16
   259c4:	ldr	r3, [r3, #8]
   259c8:	ldr	r0, [pc, #176]	; 25a80 <g_strcmp0@plt+0xfc00>
   259cc:	bl	151f0 <g_log@plt>
   259d0:	ldr	r0, [sp, #8]
   259d4:	bl	15064 <g_error_free@plt>
   259d8:	b	2565c <g_strcmp0@plt+0xf7dc>
   259dc:	ldr	r3, [sp, #8]
   259e0:	ldr	r2, [pc, #148]	; 25a7c <g_strcmp0@plt+0xfbfc>
   259e4:	mov	r1, #16
   259e8:	ldr	r3, [r3, #8]
   259ec:	ldr	r0, [pc, #140]	; 25a80 <g_strcmp0@plt+0xfc00>
   259f0:	bl	151f0 <g_log@plt>
   259f4:	ldr	r0, [sp, #8]
   259f8:	bl	15064 <g_error_free@plt>
   259fc:	b	258e4 <g_strcmp0@plt+0xfa64>
   25a00:	ldr	r3, [sp, #8]
   25a04:	ldr	r2, [pc, #112]	; 25a7c <g_strcmp0@plt+0xfbfc>
   25a08:	mov	r1, #16
   25a0c:	ldr	r3, [r3, #8]
   25a10:	ldr	r0, [pc, #104]	; 25a80 <g_strcmp0@plt+0xfc00>
   25a14:	bl	151f0 <g_log@plt>
   25a18:	ldr	r0, [sp, #8]
   25a1c:	bl	15064 <g_error_free@plt>
   25a20:	b	257fc <g_strcmp0@plt+0xf97c>
   25a24:	bl	157f0 <__stack_chk_fail@plt>
   25a28:	andeq	r0, r4, r0, asr lr
   25a2c:	andeq	r9, r2, r0, lsr #3
   25a30:	muleq	r2, r0, lr
   25a34:			; <UNDEFINED> instruction: 0x0002feb8
   25a38:	andeq	r5, r2, r8, asr r1
   25a3c:	ldrdeq	pc, [r2], -ip
   25a40:	muleq	r2, r4, r6
   25a44:	andeq	pc, r2, ip, ror #7
   25a48:	strdeq	pc, [r2], -ip
   25a4c:	andeq	pc, r2, r8, asr #29
   25a50:	ldrdeq	pc, [r2], -ip
   25a54:	andeq	r5, r2, r8, lsl #2
   25a58:	andeq	pc, r2, ip, ror #29
   25a5c:	andeq	pc, r2, r8, lsl #30
   25a60:	andeq	pc, r2, r0, lsr pc	; <UNPREDICTABLE>
   25a64:	andeq	pc, r2, ip, lsr pc	; <UNPREDICTABLE>
   25a68:	andeq	pc, r2, r4, lsl r4	; <UNPREDICTABLE>
   25a6c:	andeq	pc, r2, ip, asr #30
   25a70:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   25a74:	andeq	pc, r2, r4, lsl #31
   25a78:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   25a7c:	andeq	pc, r2, ip, ror r3	; <UNPREDICTABLE>
   25a80:	andeq	r8, r2, ip, lsl #29
   25a84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25a88:	sub	sp, sp, #40	; 0x28
   25a8c:	ldr	r8, [pc, #816]	; 25dc4 <g_strcmp0@plt+0xff44>
   25a90:	mov	r5, r2
   25a94:	mov	r6, r1
   25a98:	ldr	r3, [r8]
   25a9c:	mov	r9, r0
   25aa0:	str	r3, [sp, #36]	; 0x24
   25aa4:	bl	25594 <g_strcmp0@plt+0xf714>
   25aa8:	ldr	r7, [pc, #792]	; 25dc8 <g_strcmp0@plt+0xff48>
   25aac:	add	sl, sp, #24
   25ab0:	mov	r1, r0
   25ab4:	mov	r0, r9
   25ab8:	bl	15148 <g_type_check_instance_cast@plt>
   25abc:	mov	r2, #0
   25ac0:	mov	r3, #0
   25ac4:	mov	lr, #0
   25ac8:	add	ip, sp, #20
   25acc:	strd	r2, [sp, #24]
   25ad0:	ldr	r1, [pc, #756]	; 25dcc <g_strcmp0@plt+0xff4c>
   25ad4:	ldr	r3, [pc, #756]	; 25dd0 <g_strcmp0@plt+0xff50>
   25ad8:	add	r2, sp, #16
   25adc:	ldr	r4, [r0, #20]
   25ae0:	mov	r0, r5
   25ae4:	str	r6, [r4, #28]
   25ae8:	stmib	sp, {r7, sl, lr}
   25aec:	str	ip, [sp]
   25af0:	bl	15910 <g_object_get@plt>
   25af4:	ldr	r3, [sp, #16]
   25af8:	cmp	r3, #14
   25afc:	beq	25b14 <g_strcmp0@plt+0xfc94>
   25b00:	ldr	r1, [pc, #716]	; 25dd4 <g_strcmp0@plt+0xff54>
   25b04:	ldr	r0, [r4, #4]
   25b08:	bl	14f2c <g_settings_get_boolean@plt>
   25b0c:	cmp	r0, #0
   25b10:	beq	25d94 <g_strcmp0@plt+0xff14>
   25b14:	mov	r2, #5
   25b18:	ldr	r1, [pc, #696]	; 25dd8 <g_strcmp0@plt+0xff58>
   25b1c:	mov	r0, #0
   25b20:	bl	15880 <dcgettext@plt>
   25b24:	ldr	r3, [sp, #16]
   25b28:	cmp	r3, #11
   25b2c:	mov	r7, r0
   25b30:	beq	25d28 <g_strcmp0@plt+0xfea8>
   25b34:	cmp	r3, #14
   25b38:	beq	25d70 <g_strcmp0@plt+0xfef0>
   25b3c:	cmp	r3, #22
   25b40:	beq	25d04 <g_strcmp0@plt+0xfe84>
   25b44:	cmp	r3, #10
   25b48:	beq	25d4c <g_strcmp0@plt+0xfecc>
   25b4c:	mov	r2, #5
   25b50:	ldr	r1, [pc, #644]	; 25ddc <g_strcmp0@plt+0xff5c>
   25b54:	mov	r0, #0
   25b58:	bl	15880 <dcgettext@plt>
   25b5c:	mov	sl, r0
   25b60:	ldr	r6, [pc, #632]	; 25de0 <g_strcmp0@plt+0xff60>
   25b64:	mov	r3, #3
   25b68:	mov	r1, r3
   25b6c:	mov	r2, #0
   25b70:	ldr	r0, [r4, #8]
   25b74:	strd	r6, [sp]
   25b78:	bl	15d24 <gtk_message_dialog_new@plt>
   25b7c:	mov	r7, r0
   25b80:	bl	15e38 <gtk_window_get_type@plt>
   25b84:	mov	r1, r0
   25b88:	mov	r0, r7
   25b8c:	bl	15148 <g_type_check_instance_cast@plt>
   25b90:	str	r0, [r4, #12]
   25b94:	mov	r7, r0
   25b98:	bl	158e0 <gtk_message_dialog_get_type@plt>
   25b9c:	mov	r1, r0
   25ba0:	mov	r0, r7
   25ba4:	bl	15148 <g_type_check_instance_cast@plt>
   25ba8:	mov	r2, sl
   25bac:	mov	r1, r6
   25bb0:	bl	1585c <gtk_message_dialog_format_secondary_markup@plt>
   25bb4:	bl	15754 <gtk_notebook_new@plt>
   25bb8:	mov	r6, r0
   25bbc:	bl	15e14 <gtk_notebook_get_type@plt>
   25bc0:	mov	r1, r0
   25bc4:	mov	r0, r6
   25bc8:	bl	15148 <g_type_check_instance_cast@plt>
   25bcc:	mov	r6, r0
   25bd0:	mov	r0, r5
   25bd4:	bl	15a84 <pk_results_get_package_sack@plt>
   25bd8:	mov	r2, #12
   25bdc:	mov	r5, r0
   25be0:	mov	r1, r0
   25be4:	mov	r0, r6
   25be8:	bl	2529c <g_strcmp0@plt+0xf41c>
   25bec:	mov	r0, r6
   25bf0:	mov	r1, r5
   25bf4:	mov	r2, #13
   25bf8:	bl	2529c <g_strcmp0@plt+0xf41c>
   25bfc:	mov	r0, r6
   25c00:	mov	r1, r5
   25c04:	mov	r2, #11
   25c08:	bl	2529c <g_strcmp0@plt+0xf41c>
   25c0c:	mov	r0, r6
   25c10:	mov	r1, r5
   25c14:	mov	r2, #15
   25c18:	bl	2529c <g_strcmp0@plt+0xf41c>
   25c1c:	mov	r0, r6
   25c20:	mov	r1, r5
   25c24:	mov	r2, #19
   25c28:	bl	2529c <g_strcmp0@plt+0xf41c>
   25c2c:	mov	r2, #20
   25c30:	mov	r1, r5
   25c34:	mov	r0, r6
   25c38:	bl	2529c <g_strcmp0@plt+0xf41c>
   25c3c:	bl	15928 <gtk_dialog_get_type@plt>
   25c40:	mov	r7, r0
   25c44:	mov	r1, r0
   25c48:	ldr	r0, [r4, #12]
   25c4c:	bl	15148 <g_type_check_instance_cast@plt>
   25c50:	mov	r1, r6
   25c54:	bl	28004 <g_strcmp0@plt+0x12184>
   25c58:	mov	r1, r7
   25c5c:	ldr	r0, [r4, #12]
   25c60:	bl	15148 <g_type_check_instance_cast@plt>
   25c64:	ldr	r1, [pc, #360]	; 25dd4 <g_strcmp0@plt+0xff54>
   25c68:	bl	27f10 <g_strcmp0@plt+0x12090>
   25c6c:	mov	r1, r7
   25c70:	ldr	r0, [r4, #12]
   25c74:	bl	15148 <g_type_check_instance_cast@plt>
   25c78:	mov	r2, #5
   25c7c:	ldr	r1, [pc, #352]	; 25de4 <g_strcmp0@plt+0xff64>
   25c80:	mov	r6, r0
   25c84:	mov	r0, #0
   25c88:	bl	15880 <dcgettext@plt>
   25c8c:	mvn	r2, #7
   25c90:	mov	r1, r0
   25c94:	mov	r0, r6
   25c98:	bl	1501c <gtk_dialog_add_button@plt>
   25c9c:	ldr	r1, [pc, #324]	; 25de8 <g_strcmp0@plt+0xff68>
   25ca0:	ldr	r0, [r4, #12]
   25ca4:	bl	152bc <gtk_window_set_icon_name@plt>
   25ca8:	mov	r2, #0
   25cac:	mov	r3, r9
   25cb0:	ldr	r0, [r4, #12]
   25cb4:	ldr	r1, [pc, #304]	; 25dec <g_strcmp0@plt+0xff6c>
   25cb8:	str	r2, [sp, #4]
   25cbc:	str	r2, [sp]
   25cc0:	ldr	r2, [pc, #296]	; 25df0 <g_strcmp0@plt+0xff70>
   25cc4:	bl	15670 <g_signal_connect_data@plt>
   25cc8:	bl	150f4 <gtk_widget_get_type@plt>
   25ccc:	mov	r1, r0
   25cd0:	ldr	r0, [r4, #12]
   25cd4:	bl	15148 <g_type_check_instance_cast@plt>
   25cd8:	bl	15af0 <gtk_widget_show_all@plt>
   25cdc:	cmp	r5, #0
   25ce0:	beq	25cec <g_strcmp0@plt+0xfe6c>
   25ce4:	mov	r0, r5
   25ce8:	bl	15b5c <g_object_unref@plt>
   25cec:	ldr	r2, [sp, #36]	; 0x24
   25cf0:	ldr	r3, [r8]
   25cf4:	cmp	r2, r3
   25cf8:	bne	25dc0 <g_strcmp0@plt+0xff40>
   25cfc:	add	sp, sp, #40	; 0x28
   25d00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25d04:	mov	r3, #5
   25d08:	str	r3, [sp]
   25d0c:	ldr	r2, [pc, #224]	; 25df4 <g_strcmp0@plt+0xff74>
   25d10:	ldr	r3, [sp, #20]
   25d14:	ldr	r1, [pc, #220]	; 25df8 <g_strcmp0@plt+0xff78>
   25d18:	mov	r0, #0
   25d1c:	bl	154a8 <dcngettext@plt>
   25d20:	mov	sl, r0
   25d24:	b	25b60 <g_strcmp0@plt+0xfce0>
   25d28:	mov	r3, #5
   25d2c:	str	r3, [sp]
   25d30:	ldr	r2, [pc, #196]	; 25dfc <g_strcmp0@plt+0xff7c>
   25d34:	ldr	r3, [sp, #20]
   25d38:	ldr	r1, [pc, #192]	; 25e00 <g_strcmp0@plt+0xff80>
   25d3c:	mov	r0, #0
   25d40:	bl	154a8 <dcngettext@plt>
   25d44:	mov	sl, r0
   25d48:	b	25b60 <g_strcmp0@plt+0xfce0>
   25d4c:	mov	r3, #5
   25d50:	str	r3, [sp]
   25d54:	ldr	r2, [pc, #168]	; 25e04 <g_strcmp0@plt+0xff84>
   25d58:	ldr	r3, [sp, #20]
   25d5c:	ldr	r1, [pc, #164]	; 25e08 <g_strcmp0@plt+0xff88>
   25d60:	mov	r0, #0
   25d64:	bl	154a8 <dcngettext@plt>
   25d68:	mov	sl, r0
   25d6c:	b	25b60 <g_strcmp0@plt+0xfce0>
   25d70:	mov	r3, #5
   25d74:	str	r3, [sp]
   25d78:	ldr	r2, [pc, #140]	; 25e0c <g_strcmp0@plt+0xff8c>
   25d7c:	ldr	r3, [sp, #20]
   25d80:	ldr	r1, [pc, #136]	; 25e10 <g_strcmp0@plt+0xff90>
   25d84:	mov	r0, #0
   25d88:	bl	154a8 <dcngettext@plt>
   25d8c:	mov	sl, r0
   25d90:	b	25b60 <g_strcmp0@plt+0xfce0>
   25d94:	ldr	r2, [pc, #120]	; 25e14 <g_strcmp0@plt+0xff94>
   25d98:	mov	r1, #128	; 0x80
   25d9c:	ldr	r0, [pc, #116]	; 25e18 <g_strcmp0@plt+0xff98>
   25da0:	bl	151f0 <g_log@plt>
   25da4:	bl	15580 <pk_task_get_type@plt>
   25da8:	mov	r1, r0
   25dac:	mov	r0, r9
   25db0:	bl	15148 <g_type_check_instance_cast@plt>
   25db4:	ldr	r1, [r4, #28]
   25db8:	bl	1546c <pk_task_user_accepted@plt>
   25dbc:	b	25cec <g_strcmp0@plt+0xfe6c>
   25dc0:	bl	157f0 <__stack_chk_fail@plt>
   25dc4:	andeq	r0, r4, r0, asr lr
   25dc8:	andeq	pc, r2, ip, lsr #31
   25dcc:	andeq	pc, r2, r4, lsr #31
   25dd0:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   25dd4:	andeq	pc, r2, r0, asr #31
   25dd8:	strdeq	pc, [r2], -r8
   25ddc:	andeq	r0, r3, r8, asr r2
   25de0:	andeq	sl, r2, r0, asr r5
   25de4:	andeq	r0, r3, r4, lsr #5
   25de8:	muleq	r2, r4, r6
   25dec:	strdeq	pc, [r2], -r0
   25df0:	andeq	r5, r2, r8, asr r2
   25df4:	andeq	r0, r3, ip, lsr r1
   25df8:	andeq	r0, r3, r4, lsl #3
   25dfc:	andeq	r0, r3, ip, lsl r0
   25e00:	andeq	r0, r3, r4, rrx
   25e04:	andeq	r0, r3, ip, asr #3
   25e08:	andeq	r0, r3, r4, lsl r2
   25e0c:	andeq	r0, r3, ip, lsr #1
   25e10:	strdeq	r0, [r3], -r4
   25e14:	ldrdeq	pc, [r2], -r0
   25e18:	andeq	r8, r2, ip, lsl #29
   25e1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25e20:	sub	sp, sp, #32
   25e24:	ldr	r7, [pc, #436]	; 25fe0 <g_strcmp0@plt+0x10160>
   25e28:	mov	r6, r2
   25e2c:	mov	r5, r1
   25e30:	ldr	r3, [r7]
   25e34:	mov	r9, r0
   25e38:	str	r3, [sp, #28]
   25e3c:	bl	25594 <g_strcmp0@plt+0xf714>
   25e40:	mov	r1, r0
   25e44:	mov	r0, r9
   25e48:	bl	15148 <g_type_check_instance_cast@plt>
   25e4c:	ldr	r4, [r0, #20]
   25e50:	mov	r0, r6
   25e54:	str	r5, [r4, #28]
   25e58:	bl	14fc8 <pk_results_get_media_change_required_array@plt>
   25e5c:	ldr	r3, [r0, #4]
   25e60:	mov	r6, r0
   25e64:	cmp	r3, #1
   25e68:	beq	25ea8 <g_strcmp0@plt+0x10028>
   25e6c:	ldr	r2, [pc, #368]	; 25fe4 <g_strcmp0@plt+0x10164>
   25e70:	mov	r1, #16
   25e74:	ldr	r0, [pc, #364]	; 25fe8 <g_strcmp0@plt+0x10168>
   25e78:	bl	151f0 <g_log@plt>
   25e7c:	mov	r8, #0
   25e80:	mov	r0, r8
   25e84:	bl	15874 <g_free@plt>
   25e88:	mov	r0, r6
   25e8c:	bl	15c7c <g_ptr_array_unref@plt>
   25e90:	ldr	r2, [sp, #28]
   25e94:	ldr	r3, [r7]
   25e98:	cmp	r2, r3
   25e9c:	bne	25fdc <g_strcmp0@plt+0x1015c>
   25ea0:	add	sp, sp, #32
   25ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25ea8:	ldr	r3, [r0]
   25eac:	ldr	r1, [pc, #312]	; 25fec <g_strcmp0@plt+0x1016c>
   25eb0:	mov	r5, #0
   25eb4:	add	r2, sp, #24
   25eb8:	ldr	r0, [r3]
   25ebc:	add	r3, sp, #20
   25ec0:	stmib	sp, {r1, r2, r5}
   25ec4:	add	r2, sp, #16
   25ec8:	str	r3, [sp]
   25ecc:	ldr	r1, [pc, #284]	; 25ff0 <g_strcmp0@plt+0x10170>
   25ed0:	ldr	r3, [pc, #284]	; 25ff4 <g_strcmp0@plt+0x10174>
   25ed4:	bl	15910 <g_object_get@plt>
   25ed8:	ldr	r0, [sp, #20]
   25edc:	bl	1d8f0 <g_strcmp0@plt+0x7a70>
   25ee0:	mov	r2, #5
   25ee4:	ldr	r1, [pc, #268]	; 25ff8 <g_strcmp0@plt+0x10178>
   25ee8:	mov	r8, r0
   25eec:	mov	r0, r5
   25ef0:	bl	15880 <dcgettext@plt>
   25ef4:	mov	r1, r8
   25ef8:	ldr	r2, [sp, #24]
   25efc:	bl	15490 <g_strdup_printf@plt>
   25f00:	mov	r2, #5
   25f04:	ldr	r1, [pc, #240]	; 25ffc <g_strcmp0@plt+0x1017c>
   25f08:	ldr	sl, [r4, #8]
   25f0c:	mov	r8, r0
   25f10:	mov	r0, r5
   25f14:	bl	15880 <dcgettext@plt>
   25f18:	mov	r3, #3
   25f1c:	mov	r1, r3
   25f20:	mov	r2, r5
   25f24:	str	r0, [sp]
   25f28:	mov	r0, sl
   25f2c:	bl	15d24 <gtk_message_dialog_new@plt>
   25f30:	mov	sl, r0
   25f34:	bl	15e38 <gtk_window_get_type@plt>
   25f38:	mov	r1, r0
   25f3c:	mov	r0, sl
   25f40:	bl	15148 <g_type_check_instance_cast@plt>
   25f44:	str	r0, [r4, #12]
   25f48:	mov	sl, r0
   25f4c:	bl	158e0 <gtk_message_dialog_get_type@plt>
   25f50:	mov	r1, r0
   25f54:	mov	r0, sl
   25f58:	bl	15148 <g_type_check_instance_cast@plt>
   25f5c:	mov	r2, r8
   25f60:	ldr	r1, [pc, #152]	; 26000 <g_strcmp0@plt+0x10180>
   25f64:	bl	1585c <gtk_message_dialog_format_secondary_markup@plt>
   25f68:	bl	15928 <gtk_dialog_get_type@plt>
   25f6c:	mov	r1, r0
   25f70:	ldr	r0, [r4, #12]
   25f74:	bl	15148 <g_type_check_instance_cast@plt>
   25f78:	mov	r2, #5
   25f7c:	ldr	r1, [pc, #128]	; 26004 <g_strcmp0@plt+0x10184>
   25f80:	mov	sl, r0
   25f84:	mov	r0, r5
   25f88:	bl	15880 <dcgettext@plt>
   25f8c:	mvn	r2, #7
   25f90:	mov	r1, r0
   25f94:	mov	r0, sl
   25f98:	bl	1501c <gtk_dialog_add_button@plt>
   25f9c:	ldr	r0, [r4, #12]
   25fa0:	ldr	r1, [pc, #96]	; 26008 <g_strcmp0@plt+0x10188>
   25fa4:	bl	152bc <gtk_window_set_icon_name@plt>
   25fa8:	ldr	r0, [r4, #12]
   25fac:	mov	r3, r9
   25fb0:	ldr	r2, [pc, #84]	; 2600c <g_strcmp0@plt+0x1018c>
   25fb4:	ldr	r1, [pc, #84]	; 26010 <g_strcmp0@plt+0x10190>
   25fb8:	str	r5, [sp, #4]
   25fbc:	str	r5, [sp]
   25fc0:	bl	15670 <g_signal_connect_data@plt>
   25fc4:	bl	150f4 <gtk_widget_get_type@plt>
   25fc8:	mov	r1, r0
   25fcc:	ldr	r0, [r4, #12]
   25fd0:	bl	15148 <g_type_check_instance_cast@plt>
   25fd4:	bl	15af0 <gtk_widget_show_all@plt>
   25fd8:	b	25e80 <g_strcmp0@plt+0x10000>
   25fdc:	bl	157f0 <__stack_chk_fail@plt>
   25fe0:	andeq	r0, r4, r0, asr lr
   25fe4:			; <UNDEFINED> instruction: 0x000302b0
   25fe8:	andeq	r8, r2, ip, lsl #29
   25fec:	andeq	r0, r3, r4, ror #5
   25ff0:	ldrdeq	r0, [r3], -r8
   25ff4:	andeq	r0, r3, ip, asr #5
   25ff8:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   25ffc:			; <UNDEFINED> instruction: 0x0002bdb4
   26000:	andeq	sl, r2, r0, asr r5
   26004:	andeq	r0, r3, r4, lsr #5
   26008:	muleq	r2, r4, r6
   2600c:	andeq	r5, r2, r8, asr r2
   26010:	strdeq	pc, [r2], -r0
   26014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26018:	sub	sp, sp, #44	; 0x2c
   2601c:	ldr	r6, [pc, #560]	; 26254 <g_strcmp0@plt+0x103d4>
   26020:	mov	sl, #0
   26024:	mov	r5, r1
   26028:	ldr	r3, [r6]
   2602c:	mov	r7, r2
   26030:	mov	r4, r0
   26034:	str	r3, [sp, #36]	; 0x24
   26038:	str	sl, [sp, #24]
   2603c:	str	sl, [sp, #28]
   26040:	str	sl, [sp, #32]
   26044:	bl	25594 <g_strcmp0@plt+0xf714>
   26048:	mov	r1, r0
   2604c:	mov	r0, r4
   26050:	bl	15148 <g_type_check_instance_cast@plt>
   26054:	ldr	r4, [r0, #20]
   26058:	mov	r0, r7
   2605c:	str	r5, [r4, #28]
   26060:	bl	15a54 <pk_results_get_eula_required_array@plt>
   26064:	ldr	r8, [r0, #4]
   26068:	mov	r5, r0
   2606c:	cmp	r8, #1
   26070:	beq	260d8 <g_strcmp0@plt+0x10258>
   26074:	mov	r3, r8
   26078:	ldr	r2, [pc, #472]	; 26258 <g_strcmp0@plt+0x103d8>
   2607c:	mov	r1, #16
   26080:	ldr	r0, [pc, #468]	; 2625c <g_strcmp0@plt+0x103dc>
   26084:	bl	151f0 <g_log@plt>
   26088:	mov	r7, sl
   2608c:	mov	r9, sl
   26090:	mov	r0, r9
   26094:	bl	15874 <g_free@plt>
   26098:	ldr	r0, [sp, #24]
   2609c:	bl	15874 <g_free@plt>
   260a0:	ldr	r0, [sp, #28]
   260a4:	bl	15874 <g_free@plt>
   260a8:	ldr	r0, [sp, #32]
   260ac:	bl	15874 <g_free@plt>
   260b0:	mov	r0, r7
   260b4:	bl	15790 <g_strfreev@plt>
   260b8:	mov	r0, r5
   260bc:	bl	15c7c <g_ptr_array_unref@plt>
   260c0:	ldr	r2, [sp, #36]	; 0x24
   260c4:	ldr	r3, [r6]
   260c8:	cmp	r2, r3
   260cc:	bne	26250 <g_strcmp0@plt+0x103d0>
   260d0:	add	sp, sp, #44	; 0x2c
   260d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   260d8:	ldr	r3, [r0]
   260dc:	ldr	r1, [pc, #380]	; 26260 <g_strcmp0@plt+0x103e0>
   260e0:	add	r2, sp, #32
   260e4:	ldr	r0, [r3]
   260e8:	add	r3, sp, #28
   260ec:	stmib	sp, {r1, r2, sl}
   260f0:	add	r2, sp, #24
   260f4:	str	r3, [sp]
   260f8:	ldr	r1, [pc, #356]	; 26264 <g_strcmp0@plt+0x103e4>
   260fc:	ldr	r3, [pc, #356]	; 26268 <g_strcmp0@plt+0x103e8>
   26100:	bl	15910 <g_object_get@plt>
   26104:	ldr	r1, [pc, #352]	; 2626c <g_strcmp0@plt+0x103ec>
   26108:	ldr	r0, [r4, #24]
   2610c:	bl	15418 <gtk_builder_get_object@plt>
   26110:	mov	r7, r0
   26114:	bl	150f4 <gtk_widget_get_type@plt>
   26118:	mov	r1, r0
   2611c:	mov	fp, r0
   26120:	mov	r0, r7
   26124:	bl	15148 <g_type_check_instance_cast@plt>
   26128:	str	r0, [sp, #20]
   2612c:	ldr	r0, [sp, #24]
   26130:	bl	15124 <pk_package_id_split@plt>
   26134:	ldr	r2, [sp, #28]
   26138:	ldr	r1, [r0]
   2613c:	mov	r7, r0
   26140:	ldr	r0, [pc, #296]	; 26270 <g_strcmp0@plt+0x103f0>
   26144:	bl	15490 <g_strdup_printf@plt>
   26148:	mov	r9, r0
   2614c:	bl	150b8 <gtk_label_get_type@plt>
   26150:	ldr	r3, [sp, #20]
   26154:	mov	r1, r0
   26158:	mov	r0, r3
   2615c:	bl	15148 <g_type_check_instance_cast@plt>
   26160:	mov	r1, r9
   26164:	bl	150c4 <gtk_label_set_label@plt>
   26168:	mov	r0, sl
   2616c:	bl	15bf8 <gtk_text_buffer_new@plt>
   26170:	ldr	r1, [sp, #32]
   26174:	str	r1, [sp, #20]
   26178:	mov	sl, r0
   2617c:	mov	r0, r1
   26180:	bl	15b68 <strlen@plt>
   26184:	ldr	r1, [sp, #20]
   26188:	mov	r2, r0
   2618c:	mov	r0, sl
   26190:	bl	158d4 <gtk_text_buffer_insert_at_cursor@plt>
   26194:	ldr	r1, [pc, #216]	; 26274 <g_strcmp0@plt+0x103f4>
   26198:	ldr	r0, [r4, #24]
   2619c:	bl	15418 <gtk_builder_get_object@plt>
   261a0:	mov	r1, fp
   261a4:	bl	15148 <g_type_check_instance_cast@plt>
   261a8:	str	r0, [sp, #20]
   261ac:	bl	1516c <gtk_text_view_get_type@plt>
   261b0:	mov	r1, r0
   261b4:	ldr	r0, [sp, #20]
   261b8:	bl	15148 <g_type_check_instance_cast@plt>
   261bc:	mov	r1, sl
   261c0:	bl	155e0 <gtk_text_view_set_buffer@plt>
   261c4:	mov	r2, #200	; 0xc8
   261c8:	ldr	r0, [sp, #20]
   261cc:	mov	r1, #100	; 0x64
   261d0:	bl	155bc <gtk_widget_set_size_request@plt>
   261d4:	ldr	r1, [pc, #156]	; 26278 <g_strcmp0@plt+0x103f8>
   261d8:	ldr	r0, [r4, #24]
   261dc:	bl	15418 <gtk_builder_get_object@plt>
   261e0:	str	r0, [sp, #20]
   261e4:	bl	15e38 <gtk_window_get_type@plt>
   261e8:	ldr	r3, [sp, #20]
   261ec:	mov	r1, r0
   261f0:	mov	r0, r3
   261f4:	bl	15148 <g_type_check_instance_cast@plt>
   261f8:	ldr	r1, [r4, #8]
   261fc:	cmp	r1, #0
   26200:	mov	r3, r0
   26204:	str	r0, [r4, #12]
   26208:	beq	2622c <g_strcmp0@plt+0x103ac>
   2620c:	bl	15bec <gtk_window_set_transient_for@plt>
   26210:	mov	r1, r8
   26214:	ldr	r0, [r4, #12]
   26218:	bl	15cac <gtk_window_set_modal@plt>
   2621c:	ldr	r1, [pc, #88]	; 2627c <g_strcmp0@plt+0x103fc>
   26220:	ldr	r0, [r4, #12]
   26224:	bl	15598 <gtk_window_set_title@plt>
   26228:	ldr	r3, [r4, #12]
   2622c:	ldr	r2, [pc, #76]	; 26280 <g_strcmp0@plt+0x10400>
   26230:	mov	r1, fp
   26234:	mov	r0, r3
   26238:	str	r2, [r4, #32]
   2623c:	bl	15148 <g_type_check_instance_cast@plt>
   26240:	bl	15b50 <gtk_widget_show@plt>
   26244:	mov	r0, sl
   26248:	bl	15b5c <g_object_unref@plt>
   2624c:	b	26090 <g_strcmp0@plt+0x10210>
   26250:	bl	157f0 <__stack_chk_fail@plt>
   26254:	andeq	r0, r4, r0, asr lr
   26258:			; <UNDEFINED> instruction: 0x000302b0
   2625c:	andeq	r8, r2, ip, lsl #29
   26260:	andeq	r0, r3, ip, asr #6
   26264:	andeq	r9, r2, r4, asr #17
   26268:	andeq	r0, r3, r0, asr #6
   2626c:			; <UNDEFINED> instruction: 0x0002f2b0
   26270:	andeq	r0, r3, r0, ror #6
   26274:	muleq	r3, r0, r3
   26278:	andeq	pc, r2, r0, lsr pc	; <UNPREDICTABLE>
   2627c:	muleq	r2, r4, r6
   26280:	andeq	r0, r3, r4, lsr #7
   26284:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26288:	sub	sp, sp, #56	; 0x38
   2628c:	ldr	sl, [pc, #612]	; 264f8 <g_strcmp0@plt+0x10678>
   26290:	mov	r4, #0
   26294:	mov	r5, r1
   26298:	ldr	r3, [sl]
   2629c:	mov	r6, r2
   262a0:	str	r3, [sp, #52]	; 0x34
   262a4:	mov	r7, r0
   262a8:	str	r4, [sp, #32]
   262ac:	str	r4, [sp, #36]	; 0x24
   262b0:	str	r4, [sp, #40]	; 0x28
   262b4:	str	r4, [sp, #44]	; 0x2c
   262b8:	str	r4, [sp, #48]	; 0x30
   262bc:	bl	25594 <g_strcmp0@plt+0xf714>
   262c0:	mov	r1, r0
   262c4:	mov	r0, r7
   262c8:	bl	15148 <g_type_check_instance_cast@plt>
   262cc:	ldr	r9, [r0, #20]
   262d0:	mov	r0, r6
   262d4:	str	r5, [r9, #28]
   262d8:	bl	15940 <pk_results_get_repo_signature_required_array@plt>
   262dc:	ldr	r8, [r0, #4]
   262e0:	mov	r5, r0
   262e4:	cmp	r8, #1
   262e8:	beq	26350 <g_strcmp0@plt+0x104d0>
   262ec:	mov	r3, r8
   262f0:	ldr	r2, [pc, #516]	; 264fc <g_strcmp0@plt+0x1067c>
   262f4:	mov	r1, #16
   262f8:	ldr	r0, [pc, #512]	; 26500 <g_strcmp0@plt+0x10680>
   262fc:	bl	151f0 <g_log@plt>
   26300:	mov	r0, r4
   26304:	bl	15874 <g_free@plt>
   26308:	ldr	r0, [sp, #32]
   2630c:	bl	15874 <g_free@plt>
   26310:	ldr	r0, [sp, #36]	; 0x24
   26314:	bl	15874 <g_free@plt>
   26318:	ldr	r0, [sp, #40]	; 0x28
   2631c:	bl	15874 <g_free@plt>
   26320:	ldr	r0, [sp, #44]	; 0x2c
   26324:	bl	15874 <g_free@plt>
   26328:	ldr	r0, [sp, #48]	; 0x30
   2632c:	bl	15874 <g_free@plt>
   26330:	mov	r0, r5
   26334:	bl	15c7c <g_ptr_array_unref@plt>
   26338:	ldr	r2, [sp, #52]	; 0x34
   2633c:	ldr	r3, [sl]
   26340:	cmp	r2, r3
   26344:	bne	264f4 <g_strcmp0@plt+0x10674>
   26348:	add	sp, sp, #56	; 0x38
   2634c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26350:	ldr	r1, [r0]
   26354:	ldr	r2, [pc, #424]	; 26504 <g_strcmp0@plt+0x10684>
   26358:	ldr	r3, [pc, #424]	; 26508 <g_strcmp0@plt+0x10688>
   2635c:	ldr	lr, [pc, #424]	; 2650c <g_strcmp0@plt+0x1068c>
   26360:	add	ip, sp, #48	; 0x30
   26364:	ldr	r0, [r1]
   26368:	add	r1, sp, #44	; 0x2c
   2636c:	str	r2, [sp, #20]
   26370:	str	r3, [sp, #12]
   26374:	add	r2, sp, #40	; 0x28
   26378:	add	r3, sp, #36	; 0x24
   2637c:	str	lr, [sp, #4]
   26380:	str	ip, [sp, #24]
   26384:	str	r4, [sp, #28]
   26388:	str	r1, [sp, #16]
   2638c:	str	r2, [sp, #8]
   26390:	str	r3, [sp]
   26394:	add	r2, sp, #32
   26398:	ldr	r3, [pc, #368]	; 26510 <g_strcmp0@plt+0x10690>
   2639c:	ldr	r1, [pc, #368]	; 26514 <g_strcmp0@plt+0x10694>
   263a0:	bl	15910 <g_object_get@plt>
   263a4:	ldr	r1, [pc, #364]	; 26518 <g_strcmp0@plt+0x10698>
   263a8:	ldr	r0, [r9, #20]
   263ac:	bl	15418 <gtk_builder_get_object@plt>
   263b0:	mov	r4, r0
   263b4:	bl	150f4 <gtk_widget_get_type@plt>
   263b8:	mov	r6, r0
   263bc:	mov	r1, r0
   263c0:	mov	r0, r4
   263c4:	bl	15148 <g_type_check_instance_cast@plt>
   263c8:	mov	r4, r0
   263cc:	bl	150b8 <gtk_label_get_type@plt>
   263d0:	mov	r7, r0
   263d4:	mov	r1, r0
   263d8:	mov	r0, r4
   263dc:	bl	15148 <g_type_check_instance_cast@plt>
   263e0:	ldr	r1, [sp, #36]	; 0x24
   263e4:	bl	150c4 <gtk_label_set_label@plt>
   263e8:	ldr	r1, [pc, #300]	; 2651c <g_strcmp0@plt+0x1069c>
   263ec:	ldr	r0, [r9, #20]
   263f0:	bl	15418 <gtk_builder_get_object@plt>
   263f4:	mov	r1, r6
   263f8:	bl	15148 <g_type_check_instance_cast@plt>
   263fc:	mov	r1, r7
   26400:	bl	15148 <g_type_check_instance_cast@plt>
   26404:	ldr	r1, [sp, #40]	; 0x28
   26408:	bl	150c4 <gtk_label_set_label@plt>
   2640c:	ldr	r1, [pc, #268]	; 26520 <g_strcmp0@plt+0x106a0>
   26410:	ldr	r0, [r9, #20]
   26414:	bl	15418 <gtk_builder_get_object@plt>
   26418:	mov	r1, r6
   2641c:	bl	15148 <g_type_check_instance_cast@plt>
   26420:	mov	r1, r7
   26424:	bl	15148 <g_type_check_instance_cast@plt>
   26428:	ldr	r1, [sp, #44]	; 0x2c
   2642c:	bl	150c4 <gtk_label_set_label@plt>
   26430:	ldr	r1, [pc, #236]	; 26524 <g_strcmp0@plt+0x106a4>
   26434:	ldr	r0, [r9, #20]
   26438:	bl	15418 <gtk_builder_get_object@plt>
   2643c:	mov	r1, r6
   26440:	bl	15148 <g_type_check_instance_cast@plt>
   26444:	mov	r1, r7
   26448:	bl	15148 <g_type_check_instance_cast@plt>
   2644c:	ldr	r1, [sp, #48]	; 0x30
   26450:	bl	150c4 <gtk_label_set_label@plt>
   26454:	ldr	r0, [sp, #32]
   26458:	bl	15c34 <pk_package_id_to_printable@plt>
   2645c:	ldr	r1, [pc, #196]	; 26528 <g_strcmp0@plt+0x106a8>
   26460:	mov	r4, r0
   26464:	ldr	r0, [r9, #20]
   26468:	bl	15418 <gtk_builder_get_object@plt>
   2646c:	mov	r1, r6
   26470:	bl	15148 <g_type_check_instance_cast@plt>
   26474:	mov	r1, r7
   26478:	bl	15148 <g_type_check_instance_cast@plt>
   2647c:	mov	r1, r4
   26480:	bl	150c4 <gtk_label_set_label@plt>
   26484:	ldr	r1, [pc, #160]	; 2652c <g_strcmp0@plt+0x106ac>
   26488:	ldr	r0, [r9, #20]
   2648c:	bl	15418 <gtk_builder_get_object@plt>
   26490:	mov	r7, r0
   26494:	bl	15e38 <gtk_window_get_type@plt>
   26498:	mov	r1, r0
   2649c:	mov	r0, r7
   264a0:	bl	15148 <g_type_check_instance_cast@plt>
   264a4:	ldr	r1, [r9, #8]
   264a8:	cmp	r1, #0
   264ac:	mov	r3, r0
   264b0:	str	r0, [r9, #12]
   264b4:	beq	264d8 <g_strcmp0@plt+0x10658>
   264b8:	bl	15bec <gtk_window_set_transient_for@plt>
   264bc:	mov	r1, r8
   264c0:	ldr	r0, [r9, #12]
   264c4:	bl	15cac <gtk_window_set_modal@plt>
   264c8:	ldr	r1, [pc, #96]	; 26530 <g_strcmp0@plt+0x106b0>
   264cc:	ldr	r0, [r9, #12]
   264d0:	bl	15598 <gtk_window_set_title@plt>
   264d4:	ldr	r3, [r9, #12]
   264d8:	ldr	r2, [pc, #84]	; 26534 <g_strcmp0@plt+0x106b4>
   264dc:	mov	r1, r6
   264e0:	mov	r0, r3
   264e4:	str	r2, [r9, #32]
   264e8:	bl	15148 <g_type_check_instance_cast@plt>
   264ec:	bl	15b50 <gtk_widget_show@plt>
   264f0:	b	26300 <g_strcmp0@plt+0x10480>
   264f4:	bl	157f0 <__stack_chk_fail@plt>
   264f8:	andeq	r0, r4, r0, asr lr
   264fc:			; <UNDEFINED> instruction: 0x000302b0
   26500:	andeq	r8, r2, ip, lsl #29
   26504:			; <UNDEFINED> instruction: 0x000303bc
   26508:	andeq	r0, r3, r4, asr #7
   2650c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   26510:	andeq	r0, r3, ip, lsr #7
   26514:	andeq	r9, r2, r4, asr #17
   26518:	ldrdeq	r0, [r3], -r8
   2651c:	andeq	r0, r3, r4, ror #7
   26520:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   26524:	strdeq	r0, [r3], -ip
   26528:	andeq	r0, r3, r8, lsl #8
   2652c:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   26530:	muleq	r2, r4, r6
   26534:	andeq	r0, r3, r8, lsl r4
   26538:	push	{r4, r5, r6, r7, r8, r9, lr}
   2653c:	sub	sp, sp, #20
   26540:	ldr	r7, [pc, #488]	; 26730 <g_strcmp0@plt+0x108b0>
   26544:	mov	r6, r2
   26548:	mov	r5, r1
   2654c:	ldr	r3, [r7]
   26550:	mov	r4, r0
   26554:	str	r3, [sp, #12]
   26558:	bl	25594 <g_strcmp0@plt+0xf714>
   2655c:	mov	r1, r0
   26560:	mov	r0, r4
   26564:	bl	15148 <g_type_check_instance_cast@plt>
   26568:	ldr	r1, [pc, #452]	; 26734 <g_strcmp0@plt+0x108b4>
   2656c:	ldr	r4, [r0, #20]
   26570:	str	r5, [r4, #28]
   26574:	ldr	r0, [r4, #16]
   26578:	bl	15418 <gtk_builder_get_object@plt>
   2657c:	mov	r8, r0
   26580:	bl	150f4 <gtk_widget_get_type@plt>
   26584:	mov	r1, r0
   26588:	mov	r5, r0
   2658c:	mov	r0, r8
   26590:	bl	15148 <g_type_check_instance_cast@plt>
   26594:	bl	1519c <gtk_widget_hide@plt>
   26598:	mov	r0, r6
   2659c:	mov	r3, #0
   265a0:	add	r2, sp, #8
   265a4:	ldr	r1, [pc, #396]	; 26738 <g_strcmp0@plt+0x108b8>
   265a8:	bl	15910 <g_object_get@plt>
   265ac:	ldr	r3, [sp, #8]
   265b0:	mov	r2, #5
   265b4:	cmp	r3, #22
   265b8:	ldr	r1, [pc, #380]	; 2673c <g_strcmp0@plt+0x108bc>
   265bc:	mov	r0, #0
   265c0:	beq	266f0 <g_strcmp0@plt+0x10870>
   265c4:	bl	15880 <dcgettext@plt>
   265c8:	mov	r2, #5
   265cc:	ldr	r1, [pc, #364]	; 26740 <g_strcmp0@plt+0x108c0>
   265d0:	mov	r6, r0
   265d4:	mov	r0, #0
   265d8:	bl	15880 <dcgettext@plt>
   265dc:	mov	r2, #5
   265e0:	ldr	r1, [pc, #348]	; 26744 <g_strcmp0@plt+0x108c4>
   265e4:	mov	r8, r0
   265e8:	mov	r0, #0
   265ec:	bl	15880 <dcgettext@plt>
   265f0:	ldr	r1, [pc, #336]	; 26748 <g_strcmp0@plt+0x108c8>
   265f4:	mov	r2, #5
   265f8:	mov	r9, r0
   265fc:	mov	r0, #0
   26600:	bl	15880 <dcgettext@plt>
   26604:	mov	r2, r8
   26608:	mov	r3, r9
   2660c:	mov	r1, r6
   26610:	str	r0, [sp]
   26614:	ldr	r0, [pc, #304]	; 2674c <g_strcmp0@plt+0x108cc>
   26618:	bl	15490 <g_strdup_printf@plt>
   2661c:	ldr	r1, [pc, #300]	; 26750 <g_strcmp0@plt+0x108d0>
   26620:	mov	r6, r0
   26624:	ldr	r0, [r4, #16]
   26628:	bl	15418 <gtk_builder_get_object@plt>
   2662c:	mov	r1, r5
   26630:	bl	15148 <g_type_check_instance_cast@plt>
   26634:	mov	r8, r0
   26638:	bl	150b8 <gtk_label_get_type@plt>
   2663c:	mov	r1, r0
   26640:	mov	r0, r8
   26644:	bl	15148 <g_type_check_instance_cast@plt>
   26648:	mov	r1, r6
   2664c:	bl	15d3c <gtk_label_set_markup@plt>
   26650:	mov	r0, r6
   26654:	bl	15874 <g_free@plt>
   26658:	ldr	r1, [pc, #244]	; 26754 <g_strcmp0@plt+0x108d4>
   2665c:	ldr	r0, [r4, #16]
   26660:	bl	15418 <gtk_builder_get_object@plt>
   26664:	mov	r6, r0
   26668:	bl	15e38 <gtk_window_get_type@plt>
   2666c:	mov	r1, r0
   26670:	mov	r0, r6
   26674:	bl	15148 <g_type_check_instance_cast@plt>
   26678:	ldr	r1, [r4, #8]
   2667c:	cmp	r1, #0
   26680:	mov	r6, r0
   26684:	str	r0, [r4, #12]
   26688:	beq	266ac <g_strcmp0@plt+0x1082c>
   2668c:	bl	15bec <gtk_window_set_transient_for@plt>
   26690:	mov	r1, #1
   26694:	ldr	r0, [r4, #12]
   26698:	bl	15cac <gtk_window_set_modal@plt>
   2669c:	ldr	r1, [pc, #180]	; 26758 <g_strcmp0@plt+0x108d8>
   266a0:	ldr	r0, [r4, #12]
   266a4:	bl	15598 <gtk_window_set_title@plt>
   266a8:	ldr	r6, [r4, #12]
   266ac:	mov	r2, #5
   266b0:	ldr	r1, [pc, #132]	; 2673c <g_strcmp0@plt+0x108bc>
   266b4:	mov	r0, #0
   266b8:	bl	15880 <dcgettext@plt>
   266bc:	mov	r1, r0
   266c0:	mov	r0, r6
   266c4:	bl	15598 <gtk_window_set_title@plt>
   266c8:	mov	r1, r5
   266cc:	ldr	r0, [r4, #12]
   266d0:	bl	15148 <g_type_check_instance_cast@plt>
   266d4:	bl	15b50 <gtk_widget_show@plt>
   266d8:	ldr	r2, [sp, #12]
   266dc:	ldr	r3, [r7]
   266e0:	cmp	r2, r3
   266e4:	bne	2672c <g_strcmp0@plt+0x108ac>
   266e8:	add	sp, sp, #20
   266ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   266f0:	bl	15880 <dcgettext@plt>
   266f4:	mov	r2, #5
   266f8:	ldr	r1, [pc, #92]	; 2675c <g_strcmp0@plt+0x108dc>
   266fc:	mov	r6, r0
   26700:	mov	r0, #0
   26704:	bl	15880 <dcgettext@plt>
   26708:	mov	r2, #5
   2670c:	ldr	r1, [pc, #48]	; 26744 <g_strcmp0@plt+0x108c4>
   26710:	mov	r8, r0
   26714:	mov	r0, #0
   26718:	bl	15880 <dcgettext@plt>
   2671c:	mov	r2, #5
   26720:	ldr	r1, [pc, #56]	; 26760 <g_strcmp0@plt+0x108e0>
   26724:	mov	r9, r0
   26728:	b	265fc <g_strcmp0@plt+0x1077c>
   2672c:	bl	157f0 <__stack_chk_fail@plt>
   26730:	andeq	r0, r4, r0, asr lr
   26734:			; <UNDEFINED> instruction: 0x0002f2b0
   26738:	andeq	pc, r2, r4, lsr #31
   2673c:	andeq	r0, r3, r8, lsr #8
   26740:	andeq	r0, r3, ip, lsr #10
   26744:	andeq	r0, r3, r0, lsr #9
   26748:	andeq	r0, r3, r4, ror r5
   2674c:	andeq	r0, r3, ip, lsl r5
   26750:	andeq	pc, r2, r4, asr #6
   26754:			; <UNDEFINED> instruction: 0x0002feb8
   26758:	muleq	r2, r4, r6
   2675c:	andeq	r0, r3, ip, asr r4
   26760:	andeq	r0, r3, r4, ror #9
   26764:	push	{r4, r5, r6, lr}
   26768:	mov	r5, r0
   2676c:	bl	25594 <g_strcmp0@plt+0xf714>
   26770:	mov	r1, r0
   26774:	mov	r0, r5
   26778:	bl	15148 <g_type_check_instance_cast@plt>
   2677c:	ldr	r3, [r0, #20]
   26780:	mov	r4, r0
   26784:	ldr	r0, [r3, #16]
   26788:	bl	15b5c <g_object_unref@plt>
   2678c:	ldr	r3, [r4, #20]
   26790:	ldr	r0, [r3, #20]
   26794:	bl	15b5c <g_object_unref@plt>
   26798:	ldr	r3, [r4, #20]
   2679c:	ldr	r0, [r3, #24]
   267a0:	bl	15b5c <g_object_unref@plt>
   267a4:	ldr	r3, [r4, #20]
   267a8:	ldr	r0, [r3, #4]
   267ac:	bl	15b5c <g_object_unref@plt>
   267b0:	ldr	r3, [pc, #24]	; 267d0 <g_strcmp0@plt+0x10950>
   267b4:	mov	r1, #80	; 0x50
   267b8:	ldr	r0, [r3]
   267bc:	bl	15dc0 <g_type_check_class_cast@plt>
   267c0:	ldr	r3, [r0, #24]
   267c4:	mov	r0, r5
   267c8:	pop	{r4, r5, r6, lr}
   267cc:	bx	r3
   267d0:	andeq	r1, r4, r8, lsr #18
   267d4:	push	{r4, r5, r6, lr}
   267d8:	mov	r4, r0
   267dc:	mov	r5, r1
   267e0:	bl	25594 <g_strcmp0@plt+0xf714>
   267e4:	cmp	r4, #0
   267e8:	beq	26830 <g_strcmp0@plt+0x109b0>
   267ec:	ldr	r3, [r4]
   267f0:	cmp	r3, #0
   267f4:	beq	26804 <g_strcmp0@plt+0x10984>
   267f8:	ldr	r3, [r3]
   267fc:	cmp	r3, r0
   26800:	beq	26818 <g_strcmp0@plt+0x10998>
   26804:	mov	r1, r0
   26808:	mov	r0, r4
   2680c:	bl	159dc <g_type_check_instance_is_a@plt>
   26810:	cmp	r0, #0
   26814:	beq	26830 <g_strcmp0@plt+0x109b0>
   26818:	cmp	r5, #0
   2681c:	beq	26848 <g_strcmp0@plt+0x109c8>
   26820:	ldr	r3, [r4, #20]
   26824:	mov	r0, #1
   26828:	str	r5, [r3, #8]
   2682c:	pop	{r4, r5, r6, pc}
   26830:	ldr	r2, [pc, #40]	; 26860 <g_strcmp0@plt+0x109e0>
   26834:	ldr	r1, [pc, #40]	; 26864 <g_strcmp0@plt+0x109e4>
   26838:	ldr	r0, [pc, #40]	; 26868 <g_strcmp0@plt+0x109e8>
   2683c:	bl	14fd4 <g_return_if_fail_warning@plt>
   26840:	mov	r0, #0
   26844:	pop	{r4, r5, r6, pc}
   26848:	ldr	r2, [pc, #28]	; 2686c <g_strcmp0@plt+0x109ec>
   2684c:	ldr	r1, [pc, #16]	; 26864 <g_strcmp0@plt+0x109e4>
   26850:	ldr	r0, [pc, #16]	; 26868 <g_strcmp0@plt+0x109e8>
   26854:	bl	14fd4 <g_return_if_fail_warning@plt>
   26858:	mov	r0, r5
   2685c:	pop	{r4, r5, r6, pc}
   26860:	andeq	r0, r3, ip, lsr #11
   26864:	ldrdeq	pc, [r2], -r8
   26868:	andeq	r8, r2, ip, lsl #29
   2686c:	andeq	r0, r3, r0, asr #11
   26870:	push	{r4, lr}
   26874:	bl	25594 <g_strcmp0@plt+0xf714>
   26878:	mov	r1, #0
   2687c:	bl	14ef0 <g_object_new@plt>
   26880:	mov	r4, r0
   26884:	bl	25594 <g_strcmp0@plt+0xf714>
   26888:	mov	r1, r0
   2688c:	mov	r0, r4
   26890:	pop	{r4, lr}
   26894:	b	15148 <g_type_check_instance_cast@plt>
   26898:	push	{r4, r5, r6, lr}
   2689c:	mov	r4, r2
   268a0:	mov	r5, r0
   268a4:	bl	15238 <gtk_expander_get_type@plt>
   268a8:	mov	r1, r0
   268ac:	mov	r0, r5
   268b0:	bl	15148 <g_type_check_instance_cast@plt>
   268b4:	ldr	r1, [pc, #72]	; 26904 <g_strcmp0@plt+0x10a84>
   268b8:	mov	r5, r0
   268bc:	mov	r0, r4
   268c0:	bl	15418 <gtk_builder_get_object@plt>
   268c4:	mov	r4, r0
   268c8:	bl	15e38 <gtk_window_get_type@plt>
   268cc:	mov	r1, r0
   268d0:	mov	r0, r4
   268d4:	bl	15148 <g_type_check_instance_cast@plt>
   268d8:	mov	r4, r0
   268dc:	mov	r0, r5
   268e0:	bl	14ed8 <gtk_expander_get_expanded@plt>
   268e4:	subs	r1, r0, #0
   268e8:	mov	r0, r4
   268ec:	beq	268fc <g_strcmp0@plt+0x10a7c>
   268f0:	mov	r1, #1
   268f4:	pop	{r4, r5, r6, lr}
   268f8:	b	15ae4 <gtk_window_set_resizable@plt>
   268fc:	pop	{r4, r5, r6, lr}
   26900:	b	15ae4 <gtk_window_set_resizable@plt>
   26904:			; <UNDEFINED> instruction: 0x0002feb8
   26908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2690c:	sub	sp, sp, #28
   26910:	ldr	r9, [pc, #884]	; 26c8c <g_strcmp0@plt+0x10e0c>
   26914:	cmp	r2, #0
   26918:	str	r2, [sp, #8]
   2691c:	ldr	r2, [r9]
   26920:	mov	r7, #0
   26924:	str	r1, [sp, #12]
   26928:	str	r2, [sp, #20]
   2692c:	str	r7, [sp, #16]
   26930:	beq	26bc0 <g_strcmp0@plt+0x10d40>
   26934:	mov	sl, r3
   26938:	mov	fp, r0
   2693c:	bl	15afc <gtk_builder_new@plt>
   26940:	add	r2, sp, #16
   26944:	ldr	r1, [pc, #836]	; 26c90 <g_strcmp0@plt+0x10e10>
   26948:	mov	r4, r0
   2694c:	bl	15e08 <gtk_builder_add_from_file@plt>
   26950:	cmp	r0, r7
   26954:	beq	26b9c <g_strcmp0@plt+0x10d1c>
   26958:	ldr	r1, [pc, #820]	; 26c94 <g_strcmp0@plt+0x10e14>
   2695c:	mov	r0, r4
   26960:	bl	15418 <gtk_builder_get_object@plt>
   26964:	mov	r6, r0
   26968:	bl	150f4 <gtk_widget_get_type@plt>
   2696c:	mov	r1, r0
   26970:	mov	r5, r0
   26974:	mov	r0, r6
   26978:	bl	15148 <g_type_check_instance_cast@plt>
   2697c:	mov	r8, r0
   26980:	bl	15e38 <gtk_window_get_type@plt>
   26984:	mov	r6, r0
   26988:	mov	r1, r0
   2698c:	mov	r0, r8
   26990:	bl	15148 <g_type_check_instance_cast@plt>
   26994:	mov	r1, r7
   26998:	bl	15ae4 <gtk_window_set_resizable@plt>
   2699c:	mov	r2, #2
   269a0:	mov	r3, r7
   269a4:	str	r2, [sp, #4]
   269a8:	ldr	r1, [pc, #744]	; 26c98 <g_strcmp0@plt+0x10e18>
   269ac:	ldr	r2, [pc, #744]	; 26c9c <g_strcmp0@plt+0x10e1c>
   269b0:	str	r7, [sp]
   269b4:	mov	r0, r8
   269b8:	bl	15670 <g_signal_connect_data@plt>
   269bc:	mov	r1, r6
   269c0:	mov	r0, r8
   269c4:	bl	15148 <g_type_check_instance_cast@plt>
   269c8:	ldr	r1, [pc, #720]	; 26ca0 <g_strcmp0@plt+0x10e20>
   269cc:	bl	15598 <gtk_window_set_title@plt>
   269d0:	cmp	fp, #0
   269d4:	mov	r1, r6
   269d8:	mov	r0, r8
   269dc:	beq	26bd8 <g_strcmp0@plt+0x10d58>
   269e0:	bl	15148 <g_type_check_instance_cast@plt>
   269e4:	mov	r1, fp
   269e8:	bl	15bec <gtk_window_set_transient_for@plt>
   269ec:	mov	r0, r8
   269f0:	mov	r1, r6
   269f4:	bl	15148 <g_type_check_instance_cast@plt>
   269f8:	ldr	r1, [pc, #676]	; 26ca4 <g_strcmp0@plt+0x10e24>
   269fc:	bl	152bc <gtk_window_set_icon_name@plt>
   26a00:	ldr	r1, [pc, #672]	; 26ca8 <g_strcmp0@plt+0x10e28>
   26a04:	mov	r0, r4
   26a08:	bl	15418 <gtk_builder_get_object@plt>
   26a0c:	mov	r1, r5
   26a10:	bl	15148 <g_type_check_instance_cast@plt>
   26a14:	mov	r7, #0
   26a18:	mov	r3, #2
   26a1c:	ldr	r2, [pc, #632]	; 26c9c <g_strcmp0@plt+0x10e1c>
   26a20:	str	r3, [sp, #4]
   26a24:	ldr	r1, [pc, #640]	; 26cac <g_strcmp0@plt+0x10e2c>
   26a28:	mov	r3, r7
   26a2c:	str	r7, [sp]
   26a30:	bl	15670 <g_signal_connect_data@plt>
   26a34:	ldr	r1, [pc, #628]	; 26cb0 <g_strcmp0@plt+0x10e30>
   26a38:	mov	r0, r4
   26a3c:	bl	15418 <gtk_builder_get_object@plt>
   26a40:	mov	r1, r5
   26a44:	bl	15148 <g_type_check_instance_cast@plt>
   26a48:	mov	r3, r4
   26a4c:	ldr	r2, [pc, #608]	; 26cb4 <g_strcmp0@plt+0x10e34>
   26a50:	ldr	r1, [pc, #608]	; 26cb8 <g_strcmp0@plt+0x10e38>
   26a54:	str	r7, [sp, #4]
   26a58:	str	r7, [sp]
   26a5c:	bl	15670 <g_signal_connect_data@plt>
   26a60:	ldr	r1, [pc, #596]	; 26cbc <g_strcmp0@plt+0x10e3c>
   26a64:	mov	r0, r4
   26a68:	bl	15418 <gtk_builder_get_object@plt>
   26a6c:	mov	r1, r5
   26a70:	bl	15148 <g_type_check_instance_cast@plt>
   26a74:	mov	fp, r0
   26a78:	bl	150b8 <gtk_label_get_type@plt>
   26a7c:	mov	r1, r0
   26a80:	mov	r8, r0
   26a84:	mov	r0, fp
   26a88:	bl	15148 <g_type_check_instance_cast@plt>
   26a8c:	ldr	r1, [sp, #12]
   26a90:	bl	150c4 <gtk_label_set_label@plt>
   26a94:	ldr	r1, [pc, #548]	; 26cc0 <g_strcmp0@plt+0x10e40>
   26a98:	mov	r0, r4
   26a9c:	bl	15418 <gtk_builder_get_object@plt>
   26aa0:	mov	r1, r5
   26aa4:	bl	15148 <g_type_check_instance_cast@plt>
   26aa8:	mov	r1, r8
   26aac:	bl	15148 <g_type_check_instance_cast@plt>
   26ab0:	ldr	r1, [sp, #8]
   26ab4:	bl	15d3c <gtk_label_set_markup@plt>
   26ab8:	cmp	sl, r7
   26abc:	beq	26acc <g_strcmp0@plt+0x10c4c>
   26ac0:	ldrb	r3, [sl]
   26ac4:	cmp	r3, r7
   26ac8:	bne	26be8 <g_strcmp0@plt+0x10d68>
   26acc:	ldr	r1, [pc, #476]	; 26cb0 <g_strcmp0@plt+0x10e30>
   26ad0:	mov	r0, r4
   26ad4:	bl	15418 <gtk_builder_get_object@plt>
   26ad8:	mov	r1, r5
   26adc:	bl	15148 <g_type_check_instance_cast@plt>
   26ae0:	bl	1519c <gtk_widget_hide@plt>
   26ae4:	ldr	r1, [pc, #424]	; 26c94 <g_strcmp0@plt+0x10e14>
   26ae8:	mov	r0, r4
   26aec:	bl	15418 <gtk_builder_get_object@plt>
   26af0:	mov	r1, r5
   26af4:	bl	15148 <g_type_check_instance_cast@plt>
   26af8:	mov	r1, r6
   26afc:	mov	r7, r0
   26b00:	bl	15148 <g_type_check_instance_cast@plt>
   26b04:	ldr	r1, [sp, #64]	; 0x40
   26b08:	bl	157e4 <gtk_window_present_with_time@plt>
   26b0c:	mov	r1, r6
   26b10:	mov	r0, r7
   26b14:	bl	15148 <g_type_check_instance_cast@plt>
   26b18:	ldr	r1, [pc, #388]	; 26ca4 <g_strcmp0@plt+0x10e24>
   26b1c:	bl	152bc <gtk_window_set_icon_name@plt>
   26b20:	bl	158bc <gtk_main@plt>
   26b24:	cmp	r7, #0
   26b28:	movne	r8, #0
   26b2c:	beq	26b6c <g_strcmp0@plt+0x10cec>
   26b30:	ldr	r3, [r7]
   26b34:	cmp	r3, #0
   26b38:	beq	26b48 <g_strcmp0@plt+0x10cc8>
   26b3c:	ldr	r3, [r3]
   26b40:	cmp	r5, r3
   26b44:	beq	26b90 <g_strcmp0@plt+0x10d10>
   26b48:	mov	r1, r5
   26b4c:	mov	r0, r7
   26b50:	bl	159dc <g_type_check_instance_is_a@plt>
   26b54:	cmp	r0, #0
   26b58:	bne	26b90 <g_strcmp0@plt+0x10d10>
   26b5c:	cmp	r8, #0
   26b60:	beq	26b6c <g_strcmp0@plt+0x10cec>
   26b64:	mov	r0, r8
   26b68:	bl	15b5c <g_object_unref@plt>
   26b6c:	mov	r0, r4
   26b70:	bl	15b5c <g_object_unref@plt>
   26b74:	mov	r0, #1
   26b78:	ldr	r2, [sp, #20]
   26b7c:	ldr	r3, [r9]
   26b80:	cmp	r2, r3
   26b84:	bne	26c88 <g_strcmp0@plt+0x10e08>
   26b88:	add	sp, sp, #28
   26b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26b90:	mov	r0, r7
   26b94:	bl	1519c <gtk_widget_hide@plt>
   26b98:	b	26b5c <g_strcmp0@plt+0x10cdc>
   26b9c:	ldr	r3, [sp, #16]
   26ba0:	ldr	r2, [pc, #284]	; 26cc4 <g_strcmp0@plt+0x10e44>
   26ba4:	mov	r1, #16
   26ba8:	ldr	r3, [r3, #8]
   26bac:	ldr	r0, [pc, #276]	; 26cc8 <g_strcmp0@plt+0x10e48>
   26bb0:	bl	151f0 <g_log@plt>
   26bb4:	ldr	r0, [sp, #16]
   26bb8:	bl	15064 <g_error_free@plt>
   26bbc:	b	26b6c <g_strcmp0@plt+0x10cec>
   26bc0:	ldr	r0, [pc, #256]	; 26cc8 <g_strcmp0@plt+0x10e48>
   26bc4:	ldr	r2, [pc, #256]	; 26ccc <g_strcmp0@plt+0x10e4c>
   26bc8:	ldr	r1, [pc, #256]	; 26cd0 <g_strcmp0@plt+0x10e50>
   26bcc:	bl	14fd4 <g_return_if_fail_warning@plt>
   26bd0:	ldr	r0, [sp, #8]
   26bd4:	b	26b78 <g_strcmp0@plt+0x10cf8>
   26bd8:	bl	15148 <g_type_check_instance_cast@plt>
   26bdc:	mov	r1, #1
   26be0:	bl	15cac <gtk_window_set_modal@plt>
   26be4:	b	269ec <g_strcmp0@plt+0x10b6c>
   26be8:	mov	r0, r7
   26bec:	bl	15bf8 <gtk_text_buffer_new@plt>
   26bf0:	mov	r8, r0
   26bf4:	mov	r0, sl
   26bf8:	bl	15b68 <strlen@plt>
   26bfc:	mov	r1, sl
   26c00:	mov	r2, r0
   26c04:	mov	r0, r8
   26c08:	bl	158d4 <gtk_text_buffer_insert_at_cursor@plt>
   26c0c:	ldr	r1, [pc, #192]	; 26cd4 <g_strcmp0@plt+0x10e54>
   26c10:	mov	r0, r4
   26c14:	bl	15418 <gtk_builder_get_object@plt>
   26c18:	mov	r1, r5
   26c1c:	bl	15148 <g_type_check_instance_cast@plt>
   26c20:	mov	r7, r0
   26c24:	bl	1516c <gtk_text_view_get_type@plt>
   26c28:	mov	r1, r0
   26c2c:	mov	r0, r7
   26c30:	bl	15148 <g_type_check_instance_cast@plt>
   26c34:	mov	r1, r8
   26c38:	bl	155e0 <gtk_text_view_set_buffer@plt>
   26c3c:	ldr	r1, [pc, #80]	; 26c94 <g_strcmp0@plt+0x10e14>
   26c40:	mov	r0, r4
   26c44:	bl	15418 <gtk_builder_get_object@plt>
   26c48:	mov	r1, r5
   26c4c:	bl	15148 <g_type_check_instance_cast@plt>
   26c50:	mov	r1, r6
   26c54:	mov	r7, r0
   26c58:	bl	15148 <g_type_check_instance_cast@plt>
   26c5c:	ldr	r1, [sp, #64]	; 0x40
   26c60:	bl	157e4 <gtk_window_present_with_time@plt>
   26c64:	mov	r1, r6
   26c68:	mov	r0, r7
   26c6c:	bl	15148 <g_type_check_instance_cast@plt>
   26c70:	ldr	r1, [pc, #44]	; 26ca4 <g_strcmp0@plt+0x10e24>
   26c74:	bl	152bc <gtk_window_set_icon_name@plt>
   26c78:	bl	158bc <gtk_main@plt>
   26c7c:	cmp	r7, #0
   26c80:	bne	26b30 <g_strcmp0@plt+0x10cb0>
   26c84:	b	26b5c <g_strcmp0@plt+0x10cdc>
   26c88:	bl	157f0 <__stack_chk_fail@plt>
   26c8c:	andeq	r0, r4, r0, asr lr
   26c90:	muleq	r2, r0, lr
   26c94:			; <UNDEFINED> instruction: 0x0002feb8
   26c98:	ldrdeq	pc, [r2], -ip
   26c9c:	andeq	r5, r1, ip, asr #24
   26ca0:	muleq	r2, r4, r6
   26ca4:	muleq	r2, r4, r6
   26ca8:	andeq	pc, r2, ip, ror #7
   26cac:	strdeq	pc, [r2], -ip
   26cb0:	andeq	pc, r2, r8, asr #29
   26cb4:	muleq	r2, r8, r8
   26cb8:	strdeq	r0, [r3], -ip
   26cbc:			; <UNDEFINED> instruction: 0x0002f2b0
   26cc0:	andeq	pc, r2, r4, asr #6
   26cc4:	andeq	pc, r2, ip, ror r3	; <UNPREDICTABLE>
   26cc8:	andeq	r8, r2, ip, lsl #29
   26ccc:	andeq	pc, r2, r0, lsr #6
   26cd0:	ldrdeq	r0, [r3], -r8
   26cd4:	muleq	r3, r0, r3
   26cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   26cdc:	sub	sp, sp, #12
   26ce0:	mov	ip, #0
   26ce4:	str	ip, [sp]
   26ce8:	bl	26908 <g_strcmp0@plt+0x10a88>
   26cec:	add	sp, sp, #12
   26cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   26cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   26cf8:	sub	sp, sp, #12
   26cfc:	mov	ip, #0
   26d00:	mov	r3, r2
   26d04:	str	ip, [sp]
   26d08:	mov	r2, r1
   26d0c:	mov	r1, r0
   26d10:	mov	r0, ip
   26d14:	bl	26908 <g_strcmp0@plt+0x10a88>
   26d18:	add	sp, sp, #12
   26d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   26d20:	push	{r4, r5, r6, r7, r8, lr}
   26d24:	cmp	r2, #3
   26d28:	ldr	r6, [sp, #28]
   26d2c:	beq	26d44 <g_strcmp0@plt+0x10ec4>
   26d30:	ldr	r2, [pc, #100]	; 26d9c <g_strcmp0@plt+0x10f1c>
   26d34:	ldr	r1, [pc, #100]	; 26da0 <g_strcmp0@plt+0x10f20>
   26d38:	ldr	r0, [pc, #100]	; 26da4 <g_strcmp0@plt+0x10f24>
   26d3c:	pop	{r4, r5, r6, r7, r8, lr}
   26d40:	b	14fd4 <g_return_if_fail_warning@plt>
   26d44:	mov	r4, r3
   26d48:	ldr	r3, [r0]
   26d4c:	mov	r5, r0
   26d50:	tst	r3, #536870912	; 0x20000000
   26d54:	bne	26d88 <g_strcmp0@plt+0x10f08>
   26d58:	mov	r0, r4
   26d5c:	bl	15bd4 <g_value_peek_pointer@plt>
   26d60:	ldr	r3, [r5, #8]
   26d64:	mov	r7, r0
   26d68:	cmp	r6, #0
   26d6c:	mov	r0, r7
   26d70:	ldreq	r6, [r5, #16]
   26d74:	ldr	r2, [r4, #56]	; 0x38
   26d78:	ldr	r1, [r4, #32]
   26d7c:	mov	ip, r6
   26d80:	pop	{r4, r5, r6, r7, r8, lr}
   26d84:	bx	ip
   26d88:	mov	r0, r4
   26d8c:	ldr	r7, [r5, #8]
   26d90:	bl	15bd4 <g_value_peek_pointer@plt>
   26d94:	mov	r3, r0
   26d98:	b	26d68 <g_strcmp0@plt+0x10ee8>
   26d9c:	andeq	r0, r3, r8, asr r6
   26da0:	andeq	r0, r3, r0, lsl r6
   26da4:	andeq	r8, r2, ip, lsl #29
   26da8:	push	{r4, r5, r6, r7, r8, lr}
   26dac:	cmp	r2, #4
   26db0:	ldr	r6, [sp, #28]
   26db4:	beq	26dcc <g_strcmp0@plt+0x10f4c>
   26db8:	ldr	r2, [pc, #104]	; 26e28 <g_strcmp0@plt+0x10fa8>
   26dbc:	ldr	r1, [pc, #104]	; 26e2c <g_strcmp0@plt+0x10fac>
   26dc0:	ldr	r0, [pc, #104]	; 26e30 <g_strcmp0@plt+0x10fb0>
   26dc4:	pop	{r4, r5, r6, r7, r8, lr}
   26dc8:	b	14fd4 <g_return_if_fail_warning@plt>
   26dcc:	mov	r4, r3
   26dd0:	ldr	r3, [r0]
   26dd4:	mov	r5, r0
   26dd8:	tst	r3, #536870912	; 0x20000000
   26ddc:	bne	26e18 <g_strcmp0@plt+0x10f98>
   26de0:	mov	r0, r4
   26de4:	bl	15bd4 <g_value_peek_pointer@plt>
   26de8:	mov	r7, r0
   26dec:	ldr	r0, [r5, #8]
   26df0:	cmp	r6, #0
   26df4:	ldreq	r6, [r5, #16]
   26df8:	str	r0, [sp, #24]
   26dfc:	mov	ip, r6
   26e00:	mov	r0, r7
   26e04:	ldr	r3, [r4, #80]	; 0x50
   26e08:	ldr	r2, [r4, #56]	; 0x38
   26e0c:	ldr	r1, [r4, #32]
   26e10:	pop	{r4, r5, r6, r7, r8, lr}
   26e14:	bx	ip
   26e18:	mov	r0, r4
   26e1c:	ldr	r7, [r5, #8]
   26e20:	bl	15bd4 <g_value_peek_pointer@plt>
   26e24:	b	26df0 <g_strcmp0@plt+0x10f70>
   26e28:	muleq	r2, ip, lr
   26e2c:	andeq	r0, r3, r0, lsr r6
   26e30:	andeq	r8, r2, ip, lsl #29
   26e34:	push	{r4, lr}
   26e38:	sub	sp, sp, #16
   26e3c:	bl	1576c <gtk_image_get_type@plt>
   26e40:	mov	r4, r0
   26e44:	ldr	r0, [pc, #48]	; 26e7c <g_strcmp0@plt+0x10ffc>
   26e48:	bl	15748 <g_intern_static_string@plt>
   26e4c:	ldr	r1, [pc, #44]	; 26e80 <g_strcmp0@plt+0x11000>
   26e50:	mov	r2, #0
   26e54:	mov	r3, #48	; 0x30
   26e58:	stmib	sp, {r1, r2}
   26e5c:	str	r3, [sp]
   26e60:	mov	r2, #444	; 0x1bc
   26e64:	ldr	r3, [pc, #24]	; 26e84 <g_strcmp0@plt+0x11004>
   26e68:	mov	r1, r0
   26e6c:	mov	r0, r4
   26e70:	bl	14fe0 <g_type_register_static_simple@plt>
   26e74:	add	sp, sp, #16
   26e78:	pop	{r4, pc}
   26e7c:	andeq	r0, r3, r0, lsr r7
   26e80:	strdeq	r6, [r2], -r4
   26e84:	andeq	r6, r2, r8, lsl #29
   26e88:	push	{r4, r5, r6, lr}
   26e8c:	mov	r5, r0
   26e90:	ldr	r4, [pc, #68]	; 26edc <g_strcmp0@plt+0x1105c>
   26e94:	bl	15c58 <g_type_class_peek_parent@plt>
   26e98:	ldr	r3, [r4]
   26e9c:	cmp	r3, #0
   26ea0:	bne	26ecc <g_strcmp0@plt+0x1104c>
   26ea4:	bl	150f4 <gtk_widget_get_type@plt>
   26ea8:	mov	r1, r0
   26eac:	mov	r0, r5
   26eb0:	bl	15dc0 <g_type_check_class_cast@plt>
   26eb4:	ldr	r3, [pc, #36]	; 26ee0 <g_strcmp0@plt+0x11060>
   26eb8:	str	r3, [r0, #76]	; 0x4c
   26ebc:	mov	r0, r5
   26ec0:	bl	15c58 <g_type_class_peek_parent@plt>
   26ec4:	str	r0, [r4, #4]
   26ec8:	pop	{r4, r5, r6, pc}
   26ecc:	mov	r1, r4
   26ed0:	mov	r0, r5
   26ed4:	bl	15028 <g_type_class_adjust_private_offset@plt>
   26ed8:	b	26ea4 <g_strcmp0@plt+0x11024>
   26edc:	andeq	r1, r4, r4, lsr r9
   26ee0:	andeq	r7, r2, r4, lsl #3
   26ee4:	ldr	r1, [pc, #164]	; 26f90 <g_strcmp0@plt+0x11110>
   26ee8:	ldr	r3, [pc, #164]	; 26f94 <g_strcmp0@plt+0x11114>
   26eec:	push	{r4, r5, r6, lr}
   26ef0:	mov	r4, r0
   26ef4:	ldr	r2, [r1, #8]
   26ef8:	add	r0, r2, #1
   26efc:	umull	ip, r3, r3, r2
   26f00:	str	r0, [r1, #8]
   26f04:	lsr	r3, r3, #4
   26f08:	add	r3, r3, r3, lsl #2
   26f0c:	cmp	r2, r3, lsl #2
   26f10:	beq	26f58 <g_strcmp0@plt+0x110d8>
   26f14:	ldr	r5, [r4, #44]	; 0x2c
   26f18:	cmp	r5, #0
   26f1c:	beq	26f74 <g_strcmp0@plt+0x110f4>
   26f20:	bl	1576c <gtk_image_get_type@plt>
   26f24:	mov	r1, r0
   26f28:	mov	r0, r4
   26f2c:	bl	15148 <g_type_check_instance_cast@plt>
   26f30:	ldr	r2, [r4, #32]
   26f34:	ldr	r3, [r4, #44]	; 0x2c
   26f38:	ldr	r1, [r3, r2, lsl #2]
   26f3c:	bl	15484 <gtk_image_set_from_pixbuf@plt>
   26f40:	ldrd	r0, [r4, #32]
   26f44:	add	r0, r0, #1
   26f48:	bl	28600 <g_strcmp0@plt+0x12780>
   26f4c:	mov	r0, #1
   26f50:	str	r1, [r4, #32]
   26f54:	pop	{r4, r5, r6, pc}
   26f58:	ldr	r2, [pc, #56]	; 26f98 <g_strcmp0@plt+0x11118>
   26f5c:	mov	r1, #128	; 0x80
   26f60:	ldr	r0, [pc, #52]	; 26f9c <g_strcmp0@plt+0x1111c>
   26f64:	bl	151f0 <g_log@plt>
   26f68:	ldr	r5, [r4, #44]	; 0x2c
   26f6c:	cmp	r5, #0
   26f70:	bne	26f20 <g_strcmp0@plt+0x110a0>
   26f74:	ldr	r2, [pc, #36]	; 26fa0 <g_strcmp0@plt+0x11120>
   26f78:	mov	r1, #16
   26f7c:	ldr	r0, [pc, #24]	; 26f9c <g_strcmp0@plt+0x1111c>
   26f80:	bl	151f0 <g_log@plt>
   26f84:	str	r5, [r4, #28]
   26f88:	mov	r0, r5
   26f8c:	pop	{r4, r5, r6, pc}
   26f90:	andeq	r1, r4, r4, lsr r9
   26f94:	stclgt	12, cr12, [ip], {205}	; 0xcd
   26f98:	andeq	pc, r2, r8, lsl r2	; <UNPREDICTABLE>
   26f9c:	andeq	r8, r2, ip, lsl #29
   26fa0:	andeq	r0, r3, r0, asr #14
   26fa4:	push	{r4, lr}
   26fa8:	mcr	15, 0, r0, cr7, cr10, {5}
   26fac:	ldr	r4, [pc, #60]	; 26ff0 <g_strcmp0@plt+0x11170>
   26fb0:	ldr	r3, [r4, #12]
   26fb4:	mcr	15, 0, r0, cr7, cr10, {5}
   26fb8:	cmp	r3, #0
   26fbc:	beq	26fc8 <g_strcmp0@plt+0x11148>
   26fc0:	ldr	r0, [r4, #12]
   26fc4:	pop	{r4, pc}
   26fc8:	add	r0, r4, #12
   26fcc:	bl	1567c <g_once_init_enter@plt>
   26fd0:	cmp	r0, #0
   26fd4:	beq	26fc0 <g_strcmp0@plt+0x11140>
   26fd8:	bl	26e34 <g_strcmp0@plt+0x10fb4>
   26fdc:	mov	r1, r0
   26fe0:	add	r0, r4, #12
   26fe4:	bl	15b98 <g_once_init_leave@plt>
   26fe8:	ldr	r0, [r4, #12]
   26fec:	pop	{r4, pc}
   26ff0:	andeq	r1, r4, r4, lsr r9
   26ff4:	push	{r4, r5, lr}
   26ff8:	mov	r4, r0
   26ffc:	sub	sp, sp, #12
   27000:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27004:	cmp	r4, #0
   27008:	beq	27088 <g_strcmp0@plt+0x11208>
   2700c:	ldr	r3, [r4]
   27010:	cmp	r3, #0
   27014:	beq	27024 <g_strcmp0@plt+0x111a4>
   27018:	ldr	r3, [r3]
   2701c:	cmp	r3, r0
   27020:	beq	27038 <g_strcmp0@plt+0x111b8>
   27024:	mov	r1, r0
   27028:	mov	r0, r4
   2702c:	bl	159dc <g_type_check_instance_is_a@plt>
   27030:	cmp	r0, #0
   27034:	beq	27088 <g_strcmp0@plt+0x11208>
   27038:	mov	r5, #0
   2703c:	mov	r3, #200	; 0xc8
   27040:	str	r3, [r4, #40]	; 0x28
   27044:	str	r5, [r4, #44]	; 0x2c
   27048:	str	r5, [r4, #24]
   2704c:	str	r5, [r4, #28]
   27050:	str	r5, [r4, #32]
   27054:	str	r5, [r4, #36]	; 0x24
   27058:	bl	150f4 <gtk_widget_get_type@plt>
   2705c:	mov	r1, r0
   27060:	mov	r0, r4
   27064:	bl	15148 <g_type_check_instance_cast@plt>
   27068:	str	r5, [sp, #4]
   2706c:	str	r5, [sp]
   27070:	mov	r3, r4
   27074:	ldr	r2, [pc, #36]	; 270a0 <g_strcmp0@plt+0x11220>
   27078:	ldr	r1, [pc, #36]	; 270a4 <g_strcmp0@plt+0x11224>
   2707c:	bl	15670 <g_signal_connect_data@plt>
   27080:	add	sp, sp, #12
   27084:	pop	{r4, r5, pc}
   27088:	ldr	r2, [pc, #24]	; 270a8 <g_strcmp0@plt+0x11228>
   2708c:	ldr	r1, [pc, #24]	; 270ac <g_strcmp0@plt+0x1122c>
   27090:	ldr	r0, [pc, #24]	; 270b0 <g_strcmp0@plt+0x11230>
   27094:	add	sp, sp, #12
   27098:	pop	{r4, r5, lr}
   2709c:	b	14fd4 <g_return_if_fail_warning@plt>
   270a0:	andeq	r7, r2, r4, asr #7
   270a4:	andeq	r0, r3, r4, ror r7
   270a8:	andeq	r0, r3, r8, asr r7
   270ac:	andeq	r0, r3, ip, ror #12
   270b0:	andeq	r8, r2, ip, lsl #29
   270b4:	push	{r4, r5, r6, lr}
   270b8:	mov	r5, r0
   270bc:	bl	26fa4 <g_strcmp0@plt+0x11124>
   270c0:	cmp	r5, #0
   270c4:	beq	27144 <g_strcmp0@plt+0x112c4>
   270c8:	ldr	r3, [r5]
   270cc:	cmp	r3, #0
   270d0:	beq	270e0 <g_strcmp0@plt+0x11260>
   270d4:	ldr	r3, [r3]
   270d8:	cmp	r3, r0
   270dc:	beq	270f4 <g_strcmp0@plt+0x11274>
   270e0:	mov	r1, r0
   270e4:	mov	r0, r5
   270e8:	bl	159dc <g_type_check_instance_is_a@plt>
   270ec:	cmp	r0, #0
   270f0:	beq	27144 <g_strcmp0@plt+0x112c4>
   270f4:	ldr	r6, [r5, #44]	; 0x2c
   270f8:	cmp	r6, #0
   270fc:	beq	2715c <g_strcmp0@plt+0x112dc>
   27100:	ldr	r3, [r5, #36]	; 0x24
   27104:	cmp	r3, #0
   27108:	movne	r4, #0
   2710c:	beq	2712c <g_strcmp0@plt+0x112ac>
   27110:	ldr	r0, [r6, r4, lsl #2]
   27114:	bl	15b5c <g_object_unref@plt>
   27118:	ldr	r3, [r5, #36]	; 0x24
   2711c:	add	r4, r4, #1
   27120:	cmp	r4, r3
   27124:	ldr	r6, [r5, #44]	; 0x2c
   27128:	bcc	27110 <g_strcmp0@plt+0x11290>
   2712c:	mov	r0, r6
   27130:	bl	15874 <g_free@plt>
   27134:	mov	r3, #0
   27138:	mov	r0, #1
   2713c:	str	r3, [r5, #44]	; 0x2c
   27140:	pop	{r4, r5, r6, pc}
   27144:	ldr	r2, [pc, #40]	; 27174 <g_strcmp0@plt+0x112f4>
   27148:	ldr	r1, [pc, #40]	; 27178 <g_strcmp0@plt+0x112f8>
   2714c:	ldr	r0, [pc, #40]	; 2717c <g_strcmp0@plt+0x112fc>
   27150:	bl	14fd4 <g_return_if_fail_warning@plt>
   27154:	mov	r0, #0
   27158:	pop	{r4, r5, r6, pc}
   2715c:	ldr	r2, [pc, #28]	; 27180 <g_strcmp0@plt+0x11300>
   27160:	mov	r1, #128	; 0x80
   27164:	ldr	r0, [pc, #16]	; 2717c <g_strcmp0@plt+0x112fc>
   27168:	bl	151f0 <g_log@plt>
   2716c:	mov	r0, r6
   27170:	pop	{r4, r5, r6, pc}
   27174:	andeq	r0, r3, r8, asr r7
   27178:	andeq	r0, r3, r4, lsl #13
   2717c:	andeq	r8, r2, ip, lsl #29
   27180:	andeq	r0, r3, r4, lsl #15
   27184:	push	{r4, r5, r6, lr}
   27188:	mov	r5, r0
   2718c:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27190:	mov	r1, r0
   27194:	mov	r0, r5
   27198:	bl	15148 <g_type_check_instance_cast@plt>
   2719c:	mov	r4, r0
   271a0:	ldr	r0, [r0, #28]
   271a4:	cmp	r0, #0
   271a8:	bne	271ec <g_strcmp0@plt+0x1136c>
   271ac:	ldr	r0, [r4, #24]
   271b0:	bl	15874 <g_free@plt>
   271b4:	mov	r3, #0
   271b8:	str	r3, [r4, #24]
   271bc:	mov	r0, r4
   271c0:	bl	270b4 <g_strcmp0@plt+0x11234>
   271c4:	ldr	r3, [pc, #40]	; 271f4 <g_strcmp0@plt+0x11374>
   271c8:	ldr	r4, [r3, #4]
   271cc:	bl	150f4 <gtk_widget_get_type@plt>
   271d0:	mov	r1, r0
   271d4:	mov	r0, r4
   271d8:	bl	15dc0 <g_type_check_class_cast@plt>
   271dc:	ldr	r3, [r0, #76]	; 0x4c
   271e0:	mov	r0, r5
   271e4:	pop	{r4, r5, r6, lr}
   271e8:	bx	r3
   271ec:	bl	15e5c <g_source_remove@plt>
   271f0:	b	271ac <g_strcmp0@plt+0x1132c>
   271f4:	andeq	r1, r4, r4, lsr r9
   271f8:	push	{r4, r5, r6, lr}
   271fc:	mov	r4, r0
   27200:	mov	r5, r1
   27204:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27208:	cmp	r4, #0
   2720c:	beq	27268 <g_strcmp0@plt+0x113e8>
   27210:	ldr	r3, [r4]
   27214:	cmp	r3, #0
   27218:	beq	27228 <g_strcmp0@plt+0x113a8>
   2721c:	ldr	r3, [r3]
   27220:	cmp	r3, r0
   27224:	beq	2723c <g_strcmp0@plt+0x113bc>
   27228:	mov	r1, r0
   2722c:	mov	r0, r4
   27230:	bl	159dc <g_type_check_instance_is_a@plt>
   27234:	cmp	r0, #0
   27238:	beq	27268 <g_strcmp0@plt+0x113e8>
   2723c:	ldr	r0, [pc, #100]	; 272a8 <g_strcmp0@plt+0x11428>
   27240:	mov	r3, r5
   27244:	ldr	r2, [pc, #96]	; 272ac <g_strcmp0@plt+0x1142c>
   27248:	mov	r1, #128	; 0x80
   2724c:	bl	151f0 <g_log@plt>
   27250:	ldr	r0, [r4, #28]
   27254:	str	r5, [r4, #40]	; 0x28
   27258:	cmp	r0, #0
   2725c:	bne	27280 <g_strcmp0@plt+0x11400>
   27260:	mov	r0, #1
   27264:	pop	{r4, r5, r6, pc}
   27268:	ldr	r2, [pc, #64]	; 272b0 <g_strcmp0@plt+0x11430>
   2726c:	ldr	r1, [pc, #64]	; 272b4 <g_strcmp0@plt+0x11434>
   27270:	ldr	r0, [pc, #48]	; 272a8 <g_strcmp0@plt+0x11428>
   27274:	bl	14fd4 <g_return_if_fail_warning@plt>
   27278:	mov	r0, #0
   2727c:	pop	{r4, r5, r6, pc}
   27280:	bl	15e5c <g_source_remove@plt>
   27284:	mov	r2, r4
   27288:	ldr	r1, [pc, #40]	; 272b8 <g_strcmp0@plt+0x11438>
   2728c:	ldr	r0, [r4, #40]	; 0x28
   27290:	bl	15034 <g_timeout_add@plt>
   27294:	ldr	r1, [pc, #32]	; 272bc <g_strcmp0@plt+0x1143c>
   27298:	str	r0, [r4, #28]
   2729c:	bl	15c1c <g_source_set_name_by_id@plt>
   272a0:	mov	r0, #1
   272a4:	pop	{r4, r5, r6, pc}
   272a8:	andeq	r8, r2, ip, lsl #29
   272ac:	muleq	r3, r4, r7
   272b0:	andeq	r0, r3, r8, asr r7
   272b4:	andeq	r0, r3, r4, lsr #13
   272b8:	andeq	r6, r2, r4, ror #29
   272bc:	andeq	r0, r3, ip, lsr #15
   272c0:	push	{r4, r5, r6, lr}
   272c4:	mov	r4, r0
   272c8:	mov	r5, r1
   272cc:	bl	26fa4 <g_strcmp0@plt+0x11124>
   272d0:	cmp	r4, #0
   272d4:	beq	27330 <g_strcmp0@plt+0x114b0>
   272d8:	ldr	r3, [r4]
   272dc:	cmp	r3, #0
   272e0:	beq	272f0 <g_strcmp0@plt+0x11470>
   272e4:	ldr	r3, [r3]
   272e8:	cmp	r3, r0
   272ec:	beq	27304 <g_strcmp0@plt+0x11484>
   272f0:	mov	r1, r0
   272f4:	mov	r0, r4
   272f8:	bl	159dc <g_type_check_instance_is_a@plt>
   272fc:	cmp	r0, #0
   27300:	beq	27330 <g_strcmp0@plt+0x114b0>
   27304:	cmp	r5, #0
   27308:	ldr	r0, [r4, #28]
   2730c:	bne	27348 <g_strcmp0@plt+0x114c8>
   27310:	cmp	r0, #0
   27314:	bne	27380 <g_strcmp0@plt+0x11500>
   27318:	ldr	r2, [pc, #136]	; 273a8 <g_strcmp0@plt+0x11528>
   2731c:	mov	r1, #128	; 0x80
   27320:	ldr	r0, [pc, #132]	; 273ac <g_strcmp0@plt+0x1152c>
   27324:	bl	151f0 <g_log@plt>
   27328:	mov	r0, r5
   2732c:	pop	{r4, r5, r6, pc}
   27330:	ldr	r2, [pc, #120]	; 273b0 <g_strcmp0@plt+0x11530>
   27334:	ldr	r1, [pc, #120]	; 273b4 <g_strcmp0@plt+0x11534>
   27338:	ldr	r0, [pc, #108]	; 273ac <g_strcmp0@plt+0x1152c>
   2733c:	bl	14fd4 <g_return_if_fail_warning@plt>
   27340:	mov	r0, #0
   27344:	pop	{r4, r5, r6, pc}
   27348:	cmp	r0, #0
   2734c:	bne	27390 <g_strcmp0@plt+0x11510>
   27350:	mov	r2, r4
   27354:	str	r0, [r4, #32]
   27358:	ldr	r1, [pc, #88]	; 273b8 <g_strcmp0@plt+0x11538>
   2735c:	ldr	r0, [r4, #40]	; 0x28
   27360:	bl	15034 <g_timeout_add@plt>
   27364:	ldr	r1, [pc, #80]	; 273bc <g_strcmp0@plt+0x1153c>
   27368:	str	r0, [r4, #28]
   2736c:	bl	15c1c <g_source_set_name_by_id@plt>
   27370:	mov	r0, r4
   27374:	bl	26ee4 <g_strcmp0@plt+0x11064>
   27378:	mov	r0, #1
   2737c:	pop	{r4, r5, r6, pc}
   27380:	bl	15e5c <g_source_remove@plt>
   27384:	str	r5, [r4, #28]
   27388:	mov	r0, #1
   2738c:	pop	{r4, r5, r6, pc}
   27390:	ldr	r2, [pc, #40]	; 273c0 <g_strcmp0@plt+0x11540>
   27394:	mov	r1, #128	; 0x80
   27398:	ldr	r0, [pc, #12]	; 273ac <g_strcmp0@plt+0x1152c>
   2739c:	bl	151f0 <g_log@plt>
   273a0:	mov	r0, #0
   273a4:	pop	{r4, r5, r6, pc}
   273a8:	ldrdeq	r0, [r3], -r8
   273ac:	andeq	r8, r2, ip, lsl #29
   273b0:	andeq	r0, r3, r8, asr r7
   273b4:	andeq	r0, r3, r8, asr #13
   273b8:	andeq	r6, r2, r4, ror #29
   273bc:	andeq	r0, r3, r8, lsl r8
   273c0:	strdeq	r0, [r3], -r8
   273c4:	push	{r4, r5, r6, lr}
   273c8:	sub	sp, sp, #8
   273cc:	ldr	r4, [pc, #108]	; 27440 <g_strcmp0@plt+0x115c0>
   273d0:	mov	r6, r2
   273d4:	mov	r3, #0
   273d8:	ldr	ip, [r4]
   273dc:	mov	r2, sp
   273e0:	ldr	r1, [pc, #92]	; 27444 <g_strcmp0@plt+0x115c4>
   273e4:	str	ip, [sp, #4]
   273e8:	bl	15910 <g_object_get@plt>
   273ec:	ldr	r5, [sp]
   273f0:	cmp	r5, #0
   273f4:	bne	27404 <g_strcmp0@plt+0x11584>
   273f8:	ldr	r3, [r6, #28]
   273fc:	cmp	r3, #0
   27400:	bne	2741c <g_strcmp0@plt+0x1159c>
   27404:	ldr	r2, [sp, #4]
   27408:	ldr	r3, [r4]
   2740c:	cmp	r2, r3
   27410:	bne	2743c <g_strcmp0@plt+0x115bc>
   27414:	add	sp, sp, #8
   27418:	pop	{r4, r5, r6, pc}
   2741c:	ldr	r2, [pc, #36]	; 27448 <g_strcmp0@plt+0x115c8>
   27420:	mov	r1, #128	; 0x80
   27424:	ldr	r0, [pc, #32]	; 2744c <g_strcmp0@plt+0x115cc>
   27428:	bl	151f0 <g_log@plt>
   2742c:	mov	r1, r5
   27430:	mov	r0, r6
   27434:	bl	272c0 <g_strcmp0@plt+0x11440>
   27438:	b	27404 <g_strcmp0@plt+0x11584>
   2743c:	bl	157f0 <__stack_chk_fail@plt>
   27440:	andeq	r0, r4, r0, asr lr
   27444:	andeq	r0, r3, ip, ror r7
   27448:	andeq	r0, r3, r8, lsr r8
   2744c:	andeq	r8, r2, ip, lsl #29
   27450:	push	{r4, r5, r6, lr}
   27454:	mov	r5, r0
   27458:	mov	r6, r1
   2745c:	mov	r4, r2
   27460:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27464:	cmp	r5, #0
   27468:	beq	274d0 <g_strcmp0@plt+0x11650>
   2746c:	ldr	r3, [r5]
   27470:	cmp	r3, #0
   27474:	beq	27484 <g_strcmp0@plt+0x11604>
   27478:	ldr	r3, [r3]
   2747c:	cmp	r3, r0
   27480:	beq	27498 <g_strcmp0@plt+0x11618>
   27484:	mov	r1, r0
   27488:	mov	r0, r5
   2748c:	bl	159dc <g_type_check_instance_is_a@plt>
   27490:	cmp	r0, #0
   27494:	beq	274d0 <g_strcmp0@plt+0x11650>
   27498:	cmp	r4, #0
   2749c:	beq	274e8 <g_strcmp0@plt+0x11668>
   274a0:	mov	r1, #0
   274a4:	mov	r0, r5
   274a8:	bl	272c0 <g_strcmp0@plt+0x11440>
   274ac:	bl	1576c <gtk_image_get_type@plt>
   274b0:	mov	r1, r0
   274b4:	mov	r0, r5
   274b8:	bl	15148 <g_type_check_instance_cast@plt>
   274bc:	mov	r2, r6
   274c0:	mov	r1, r4
   274c4:	bl	15cf4 <gtk_image_set_from_icon_name@plt>
   274c8:	mov	r0, #1
   274cc:	pop	{r4, r5, r6, pc}
   274d0:	ldr	r2, [pc, #40]	; 27500 <g_strcmp0@plt+0x11680>
   274d4:	ldr	r1, [pc, #40]	; 27504 <g_strcmp0@plt+0x11684>
   274d8:	ldr	r0, [pc, #40]	; 27508 <g_strcmp0@plt+0x11688>
   274dc:	bl	14fd4 <g_return_if_fail_warning@plt>
   274e0:	mov	r0, #0
   274e4:	pop	{r4, r5, r6, pc}
   274e8:	ldr	r2, [pc, #28]	; 2750c <g_strcmp0@plt+0x1168c>
   274ec:	ldr	r1, [pc, #16]	; 27504 <g_strcmp0@plt+0x11684>
   274f0:	ldr	r0, [pc, #16]	; 27508 <g_strcmp0@plt+0x11688>
   274f4:	bl	14fd4 <g_return_if_fail_warning@plt>
   274f8:	mov	r0, r4
   274fc:	pop	{r4, r5, r6, pc}
   27500:	andeq	r0, r3, r8, asr r7
   27504:	andeq	r0, r3, ip, ror #13
   27508:	andeq	r8, r2, ip, lsl #29
   2750c:	andeq	sl, r2, r4, lsl r2
   27510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27514:	sub	sp, sp, #36	; 0x24
   27518:	ldr	fp, [pc, #704]	; 277e0 <g_strcmp0@plt+0x11960>
   2751c:	mov	r7, r0
   27520:	mov	r5, r1
   27524:	ldr	r3, [fp]
   27528:	mov	r4, r2
   2752c:	str	r3, [sp, #28]
   27530:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27534:	cmp	r7, #0
   27538:	beq	27640 <g_strcmp0@plt+0x117c0>
   2753c:	ldr	r3, [r7]
   27540:	cmp	r3, #0
   27544:	beq	27554 <g_strcmp0@plt+0x116d4>
   27548:	ldr	r3, [r3]
   2754c:	cmp	r3, r0
   27550:	beq	27568 <g_strcmp0@plt+0x116e8>
   27554:	mov	r1, r0
   27558:	mov	r0, r7
   2755c:	bl	159dc <g_type_check_instance_is_a@plt>
   27560:	cmp	r0, #0
   27564:	beq	27640 <g_strcmp0@plt+0x117c0>
   27568:	cmp	r4, #0
   2756c:	beq	27688 <g_strcmp0@plt+0x11808>
   27570:	mov	r1, r4
   27574:	ldr	r0, [r7, #24]
   27578:	bl	15e80 <g_strcmp0@plt>
   2757c:	subs	r8, r0, #0
   27580:	beq	27670 <g_strcmp0@plt+0x117f0>
   27584:	mov	r1, #0
   27588:	mov	r0, r7
   2758c:	bl	272c0 <g_strcmp0@plt+0x11440>
   27590:	ldr	r0, [r7, #24]
   27594:	bl	15874 <g_free@plt>
   27598:	mov	r0, r4
   2759c:	bl	153a0 <g_strdup@plt>
   275a0:	ldr	r3, [r7, #44]	; 0x2c
   275a4:	cmp	r3, #0
   275a8:	str	r0, [r7, #24]
   275ac:	beq	275b8 <g_strcmp0@plt+0x11738>
   275b0:	mov	r0, r7
   275b4:	bl	270b4 <g_strcmp0@plt+0x11234>
   275b8:	mov	r3, r4
   275bc:	ldr	r2, [pc, #544]	; 277e4 <g_strcmp0@plt+0x11964>
   275c0:	mov	r1, #128	; 0x80
   275c4:	ldr	r0, [pc, #540]	; 277e8 <g_strcmp0@plt+0x11968>
   275c8:	bl	151f0 <g_log@plt>
   275cc:	mov	r0, r5
   275d0:	add	r2, sp, #24
   275d4:	add	r1, sp, #20
   275d8:	bl	15ba4 <gtk_icon_size_lookup@plt>
   275dc:	subs	r8, r0, #0
   275e0:	beq	276a0 <g_strcmp0@plt+0x11820>
   275e4:	bl	15d30 <gtk_icon_theme_get_default@plt>
   275e8:	mov	r3, #0
   275ec:	str	r3, [sp]
   275f0:	ldr	r2, [sp, #20]
   275f4:	mov	r1, r4
   275f8:	bl	154d8 <gtk_icon_theme_load_icon@plt>
   275fc:	subs	r8, r0, #0
   27600:	beq	277c4 <g_strcmp0@plt+0x11944>
   27604:	mov	r0, r4
   27608:	ldr	r1, [pc, #476]	; 277ec <g_strcmp0@plt+0x1196c>
   2760c:	bl	15e80 <g_strcmp0@plt>
   27610:	cmp	r0, #0
   27614:	beq	27788 <g_strcmp0@plt+0x11908>
   27618:	ldr	r3, [sp, #20]
   2761c:	mov	r0, r8
   27620:	cmp	r3, #0
   27624:	beq	27634 <g_strcmp0@plt+0x117b4>
   27628:	ldr	r3, [sp, #24]
   2762c:	cmp	r3, #0
   27630:	bne	276b4 <g_strcmp0@plt+0x11834>
   27634:	bl	15b5c <g_object_unref@plt>
   27638:	mov	r8, #0
   2763c:	b	27654 <g_strcmp0@plt+0x117d4>
   27640:	ldr	r2, [pc, #424]	; 277f0 <g_strcmp0@plt+0x11970>
   27644:	ldr	r1, [pc, #424]	; 277f4 <g_strcmp0@plt+0x11974>
   27648:	ldr	r0, [pc, #408]	; 277e8 <g_strcmp0@plt+0x11968>
   2764c:	bl	14fd4 <g_return_if_fail_warning@plt>
   27650:	mov	r8, #0
   27654:	ldr	r2, [sp, #28]
   27658:	ldr	r3, [fp]
   2765c:	mov	r0, r8
   27660:	cmp	r2, r3
   27664:	bne	277dc <g_strcmp0@plt+0x1195c>
   27668:	add	sp, sp, #36	; 0x24
   2766c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27670:	mov	r3, r4
   27674:	ldr	r2, [pc, #380]	; 277f8 <g_strcmp0@plt+0x11978>
   27678:	mov	r1, #128	; 0x80
   2767c:	ldr	r0, [pc, #356]	; 277e8 <g_strcmp0@plt+0x11968>
   27680:	bl	151f0 <g_log@plt>
   27684:	b	27654 <g_strcmp0@plt+0x117d4>
   27688:	ldr	r2, [pc, #364]	; 277fc <g_strcmp0@plt+0x1197c>
   2768c:	ldr	r1, [pc, #352]	; 277f4 <g_strcmp0@plt+0x11974>
   27690:	ldr	r0, [pc, #336]	; 277e8 <g_strcmp0@plt+0x11968>
   27694:	mov	r8, r4
   27698:	bl	14fd4 <g_return_if_fail_warning@plt>
   2769c:	b	27654 <g_strcmp0@plt+0x117d4>
   276a0:	ldr	r2, [pc, #344]	; 27800 <g_strcmp0@plt+0x11980>
   276a4:	mov	r1, #16
   276a8:	ldr	r0, [pc, #312]	; 277e8 <g_strcmp0@plt+0x11968>
   276ac:	bl	151f0 <g_log@plt>
   276b0:	b	27654 <g_strcmp0@plt+0x117d4>
   276b4:	bl	155b0 <gdk_pixbuf_get_width@plt>
   276b8:	ldr	r1, [sp, #20]
   276bc:	bl	28620 <g_strcmp0@plt+0x127a0>
   276c0:	mov	r4, #0
   276c4:	mov	sl, r0
   276c8:	mov	r0, r8
   276cc:	bl	15520 <gdk_pixbuf_get_height@plt>
   276d0:	ldr	r1, [sp, #24]
   276d4:	bl	28620 <g_strcmp0@plt+0x127a0>
   276d8:	str	r4, [r7, #32]
   276dc:	mov	r1, #4
   276e0:	mov	r5, r0
   276e4:	str	r0, [sp, #12]
   276e8:	mul	r0, r0, sl
   276ec:	str	r0, [r7, #36]	; 0x24
   276f0:	bl	14f08 <g_malloc_n@plt>
   276f4:	cmp	r5, r4
   276f8:	strgt	r4, [sp, #8]
   276fc:	movgt	r9, r4
   27700:	str	r0, [r7, #44]	; 0x2c
   27704:	ble	2776c <g_strcmp0@plt+0x118ec>
   27708:	cmp	sl, #0
   2770c:	ble	2775c <g_strcmp0@plt+0x118dc>
   27710:	ldr	r3, [sp, #8]
   27714:	mov	r4, #0
   27718:	lsl	r5, r3, #2
   2771c:	ldr	r2, [sp, #24]
   27720:	ldr	r3, [sp, #20]
   27724:	str	r2, [sp]
   27728:	mov	r0, r8
   2772c:	mul	r1, r4, r3
   27730:	mul	r2, r9, r2
   27734:	ldr	r6, [r7, #44]	; 0x2c
   27738:	bl	15340 <gdk_pixbuf_new_subpixbuf@plt>
   2773c:	add	r4, r4, #1
   27740:	cmp	sl, r4
   27744:	str	r0, [r6, r5]
   27748:	add	r5, r5, #4
   2774c:	bne	2771c <g_strcmp0@plt+0x1189c>
   27750:	ldr	r3, [sp, #8]
   27754:	add	r3, sl, r3
   27758:	str	r3, [sp, #8]
   2775c:	ldr	r3, [sp, #12]
   27760:	add	r9, r9, #1
   27764:	cmp	r3, r9
   27768:	bne	27708 <g_strcmp0@plt+0x11888>
   2776c:	mov	r0, r8
   27770:	bl	15b5c <g_object_unref@plt>
   27774:	mov	r0, r7
   27778:	mov	r1, #1
   2777c:	bl	272c0 <g_strcmp0@plt+0x11440>
   27780:	mov	r8, #1
   27784:	b	27654 <g_strcmp0@plt+0x117d4>
   27788:	mov	r0, r8
   2778c:	bl	155b0 <gdk_pixbuf_get_width@plt>
   27790:	cmp	r0, #0
   27794:	add	r3, r0, #7
   27798:	movge	r3, r0
   2779c:	mov	r0, r8
   277a0:	asr	r3, r3, #3
   277a4:	str	r3, [sp, #20]
   277a8:	bl	15520 <gdk_pixbuf_get_height@plt>
   277ac:	add	r3, r0, #3
   277b0:	cmp	r0, #0
   277b4:	movlt	r0, r3
   277b8:	asr	r3, r0, #2
   277bc:	str	r3, [sp, #24]
   277c0:	b	27618 <g_strcmp0@plt+0x11798>
   277c4:	mov	r3, r4
   277c8:	ldr	r2, [pc, #52]	; 27804 <g_strcmp0@plt+0x11984>
   277cc:	mov	r1, #128	; 0x80
   277d0:	ldr	r0, [pc, #16]	; 277e8 <g_strcmp0@plt+0x11968>
   277d4:	bl	151f0 <g_log@plt>
   277d8:	b	27654 <g_strcmp0@plt+0x117d4>
   277dc:	bl	157f0 <__stack_chk_fail@plt>
   277e0:	andeq	r0, r4, r0, asr lr
   277e4:	andeq	r0, r3, r4, lsl #17
   277e8:	andeq	r8, r2, ip, lsl #29
   277ec:	andeq	lr, r2, r4, lsl fp
   277f0:	andeq	r0, r3, r8, asr r7
   277f4:	andeq	r0, r3, ip, lsl #14
   277f8:	andeq	r0, r3, r8, asr r8
   277fc:	andeq	sl, r2, r4, lsl r2
   27800:	muleq	r3, r4, r8
   27804:			; <UNDEFINED> instruction: 0x000308b0
   27808:	push	{r4, lr}
   2780c:	bl	26fa4 <g_strcmp0@plt+0x11124>
   27810:	mov	r1, #0
   27814:	pop	{r4, lr}
   27818:	b	14ef0 <g_object_new@plt>
   2781c:	mov	r0, r1
   27820:	b	15b5c <g_object_unref@plt>
   27824:	push	{r4, r5, r6, lr}
   27828:	sub	sp, sp, #8
   2782c:	mov	r4, r0
   27830:	bl	15610 <gtk_tree_view_column_new@plt>
   27834:	mov	r5, r0
   27838:	bl	158f8 <gtk_cell_renderer_pixbuf_new@plt>
   2783c:	mov	r3, #0
   27840:	mov	r2, #5
   27844:	ldr	r1, [pc, #176]	; 278fc <g_strcmp0@plt+0x11a7c>
   27848:	mov	r6, r0
   2784c:	bl	158c8 <g_object_set@plt>
   27850:	mov	r1, r6
   27854:	mov	r0, r5
   27858:	mov	r2, #0
   2785c:	bl	15040 <gtk_tree_view_column_pack_start@plt>
   27860:	mov	r3, #0
   27864:	ldr	r2, [pc, #148]	; 27900 <g_strcmp0@plt+0x11a80>
   27868:	mov	r1, r6
   2786c:	mov	r0, r5
   27870:	bl	15c64 <gtk_tree_view_column_add_attribute@plt>
   27874:	mov	r1, r5
   27878:	mov	r0, r4
   2787c:	bl	14f20 <gtk_tree_view_append_column@plt>
   27880:	bl	15574 <gtk_cell_renderer_text_new@plt>
   27884:	mov	r5, #0
   27888:	mov	r2, #5
   2788c:	ldr	r1, [pc, #112]	; 27904 <g_strcmp0@plt+0x11a84>
   27890:	mov	r6, r0
   27894:	mov	r0, r5
   27898:	bl	15880 <dcgettext@plt>
   2789c:	mov	r3, #2
   278a0:	ldr	r2, [pc, #96]	; 27908 <g_strcmp0@plt+0x11a88>
   278a4:	mov	r1, r6
   278a8:	str	r5, [sp]
   278ac:	bl	15154 <gtk_tree_view_column_new_with_attributes@plt>
   278b0:	mov	r1, #2
   278b4:	mov	r6, r0
   278b8:	bl	15358 <gtk_tree_view_column_set_sort_column_id@plt>
   278bc:	mov	r1, r6
   278c0:	mov	r0, r4
   278c4:	bl	14f20 <gtk_tree_view_append_column@plt>
   278c8:	mov	r1, r5
   278cc:	mov	r0, r4
   278d0:	bl	15d48 <gtk_tree_view_set_headers_visible@plt>
   278d4:	mov	r0, r4
   278d8:	bl	1594c <gtk_tree_view_get_selection@plt>
   278dc:	mov	r1, r5
   278e0:	mov	r4, r0
   278e4:	bl	152e0 <gtk_tree_selection_set_mode@plt>
   278e8:	mov	r0, r4
   278ec:	bl	15be0 <gtk_tree_selection_unselect_all@plt>
   278f0:	mov	r0, #1
   278f4:	add	sp, sp, #8
   278f8:	pop	{r4, r5, r6, pc}
   278fc:			; <UNDEFINED> instruction: 0x0002f3b4
   27900:	andeq	pc, r2, r0, asr #7
   27904:	andeq	pc, r2, ip, asr #7
   27908:	ldrdeq	pc, [r2], -r4
   2790c:	push	{r4, r5, r6, lr}
   27910:	sub	sp, sp, #8
   27914:	mov	r4, r1
   27918:	mov	r5, r0
   2791c:	bl	15268 <gtk_toggle_button_get_type@plt>
   27920:	mov	r1, r0
   27924:	mov	r0, r5
   27928:	bl	15148 <g_type_check_instance_cast@plt>
   2792c:	bl	15e68 <gtk_toggle_button_get_active@plt>
   27930:	mov	r3, r4
   27934:	ldr	r2, [pc, #60]	; 27978 <g_strcmp0@plt+0x11af8>
   27938:	mov	r1, #128	; 0x80
   2793c:	mov	r5, r0
   27940:	str	r0, [sp]
   27944:	ldr	r0, [pc, #48]	; 2797c <g_strcmp0@plt+0x11afc>
   27948:	bl	151f0 <g_log@plt>
   2794c:	ldr	r0, [pc, #44]	; 27980 <g_strcmp0@plt+0x11b00>
   27950:	bl	14f8c <g_settings_new@plt>
   27954:	clz	r2, r5
   27958:	mov	r1, r4
   2795c:	lsr	r2, r2, #5
   27960:	mov	r6, r0
   27964:	bl	15d00 <g_settings_set_boolean@plt>
   27968:	mov	r0, r6
   2796c:	add	sp, sp, #8
   27970:	pop	{r4, r5, r6, lr}
   27974:	b	15b5c <g_object_unref@plt>
   27978:	andeq	r0, r3, r8, asr #17
   2797c:	andeq	r8, r2, ip, lsl #29
   27980:	andeq	r9, r2, r0, lsr #3
   27984:	ldr	r2, [pc, #316]	; 27ac8 <g_strcmp0@plt+0x11c48>
   27988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2798c:	mov	r3, #64	; 0x40
   27990:	sub	sp, sp, #60	; 0x3c
   27994:	ldr	ip, [r2]
   27998:	mov	r4, #0
   2799c:	mov	r8, r1
   279a0:	mov	r2, r3
   279a4:	mov	r1, r3
   279a8:	mov	r9, r0
   279ac:	mov	r0, #3
   279b0:	str	ip, [sp, #52]	; 0x34
   279b4:	str	r4, [sp, #28]
   279b8:	str	r4, [sp, #32]
   279bc:	bl	15814 <gtk_list_store_new@plt>
   279c0:	ldr	r3, [r8]
   279c4:	cmp	r3, r4
   279c8:	mov	r6, r0
   279cc:	beq	27aa4 <g_strcmp0@plt+0x11c24>
   279d0:	ldr	fp, [pc, #244]	; 27acc <g_strcmp0@plt+0x11c4c>
   279d4:	ldr	r1, [r9]
   279d8:	mov	ip, #0
   279dc:	ldr	r3, [pc, #236]	; 27ad0 <g_strcmp0@plt+0x11c50>
   279e0:	ldr	r0, [r1, r4, lsl #2]
   279e4:	str	ip, [sp, #12]
   279e8:	add	ip, sp, #32
   279ec:	add	r2, sp, #24
   279f0:	stmib	sp, {fp, ip}
   279f4:	add	ip, sp, #28
   279f8:	str	ip, [sp]
   279fc:	ldr	r1, [pc, #208]	; 27ad4 <g_strcmp0@plt+0x11c54>
   27a00:	bl	15910 <g_object_get@plt>
   27a04:	ldr	r2, [sp, #32]
   27a08:	ldr	r1, [sp, #28]
   27a0c:	mov	r0, #0
   27a10:	bl	24730 <g_strcmp0@plt+0xe8b0>
   27a14:	add	r4, r4, #1
   27a18:	mov	r5, r0
   27a1c:	ldr	r0, [sp, #28]
   27a20:	bl	15124 <pk_package_id_split@plt>
   27a24:	mov	r7, r0
   27a28:	ldr	r0, [sp, #24]
   27a2c:	bl	1fb0c <g_strcmp0@plt+0x9c8c>
   27a30:	add	r1, sp, #36	; 0x24
   27a34:	mov	sl, r0
   27a38:	mov	r0, r6
   27a3c:	bl	15964 <gtk_list_store_append@plt>
   27a40:	ldr	ip, [sp, #28]
   27a44:	mvn	r0, #0
   27a48:	mov	r1, #2
   27a4c:	mov	r2, #1
   27a50:	mov	r3, sl
   27a54:	str	ip, [sp, #4]
   27a58:	str	r0, [sp, #16]
   27a5c:	str	r1, [sp, #8]
   27a60:	str	r2, [sp]
   27a64:	add	r1, sp, #36	; 0x24
   27a68:	mov	r2, #0
   27a6c:	mov	r0, r6
   27a70:	str	r5, [sp, #12]
   27a74:	bl	15004 <gtk_list_store_set@plt>
   27a78:	mov	r0, r7
   27a7c:	bl	15790 <g_strfreev@plt>
   27a80:	ldr	r0, [sp, #28]
   27a84:	bl	15874 <g_free@plt>
   27a88:	ldr	r0, [sp, #32]
   27a8c:	bl	15874 <g_free@plt>
   27a90:	mov	r0, r5
   27a94:	bl	15874 <g_free@plt>
   27a98:	ldr	r3, [r8]
   27a9c:	cmp	r4, r3
   27aa0:	bcc	279d4 <g_strcmp0@plt+0x11b54>
   27aa4:	ldr	r3, [pc, #28]	; 27ac8 <g_strcmp0@plt+0x11c48>
   27aa8:	ldr	r2, [sp, #52]	; 0x34
   27aac:	mov	r0, r6
   27ab0:	ldr	r3, [r3]
   27ab4:	cmp	r2, r3
   27ab8:	bne	27ac4 <g_strcmp0@plt+0x11c44>
   27abc:	add	sp, sp, #60	; 0x3c
   27ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ac4:	bl	157f0 <__stack_chk_fail@plt>
   27ac8:	andeq	r0, r4, r0, asr lr
   27acc:	andeq	pc, r2, ip, lsl #11
   27ad0:	andeq	r9, r2, r4, asr #17
   27ad4:	andeq	r0, r3, r8, lsr #17
   27ad8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27adc:	mov	r4, r0
   27ae0:	bl	157a8 <g_strv_length@plt>
   27ae4:	mov	r6, r0
   27ae8:	ldr	r0, [pc, #192]	; 27bb0 <g_strcmp0@plt+0x11d30>
   27aec:	bl	15478 <g_ptr_array_new_with_free_func@plt>
   27af0:	cmp	r6, #0
   27af4:	mov	r7, r0
   27af8:	beq	27b60 <g_strcmp0@plt+0x11ce0>
   27afc:	sub	r4, r4, #4
   27b00:	ldr	r9, [pc, #172]	; 27bb4 <g_strcmp0@plt+0x11d34>
   27b04:	ldr	r8, [pc, #172]	; 27bb8 <g_strcmp0@plt+0x11d38>
   27b08:	add	r6, r4, r6, lsl #2
   27b0c:	b	27b34 <g_strcmp0@plt+0x11cb4>
   27b10:	ldr	r0, [r5]
   27b14:	bl	153a0 <g_strdup@plt>
   27b18:	mov	r1, r0
   27b1c:	mov	r0, r7
   27b20:	bl	15cc4 <g_ptr_array_add@plt>
   27b24:	mov	r0, r5
   27b28:	bl	15790 <g_strfreev@plt>
   27b2c:	cmp	r4, r6
   27b30:	beq	27b60 <g_strcmp0@plt+0x11ce0>
   27b34:	ldr	r0, [r4, #4]!
   27b38:	bl	15124 <pk_package_id_split@plt>
   27b3c:	subs	r5, r0, #0
   27b40:	bne	27b10 <g_strcmp0@plt+0x11c90>
   27b44:	ldr	r3, [r4]
   27b48:	mov	r2, r9
   27b4c:	mov	r1, #16
   27b50:	mov	r0, r8
   27b54:	bl	151f0 <g_log@plt>
   27b58:	cmp	r4, r6
   27b5c:	bne	27b34 <g_strcmp0@plt+0x11cb4>
   27b60:	mov	r0, r7
   27b64:	bl	1558c <pk_ptr_array_to_strv@plt>
   27b68:	mov	r5, r0
   27b6c:	bl	24f9c <g_strcmp0@plt+0xf11c>
   27b70:	mov	r4, r0
   27b74:	mov	r0, r5
   27b78:	bl	15790 <g_strfreev@plt>
   27b7c:	cmp	r4, #0
   27b80:	beq	27b94 <g_strcmp0@plt+0x11d14>
   27b84:	mov	r0, r7
   27b88:	bl	15c7c <g_ptr_array_unref@plt>
   27b8c:	mov	r0, r4
   27b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27b94:	mov	r0, r4
   27b98:	mov	r2, #5
   27b9c:	ldr	r1, [pc, #24]	; 27bbc <g_strcmp0@plt+0x11d3c>
   27ba0:	bl	15880 <dcgettext@plt>
   27ba4:	bl	153a0 <g_strdup@plt>
   27ba8:	mov	r4, r0
   27bac:	b	27b84 <g_strcmp0@plt+0x11d04>
   27bb0:	andeq	r5, r1, r4, ror r8
   27bb4:	ldrdeq	r0, [r3], -ip
   27bb8:	andeq	r8, r2, ip, lsl #29
   27bbc:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   27bc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   27bc4:	mov	r5, r1
   27bc8:	sub	sp, sp, #20
   27bcc:	add	r1, r1, #4
   27bd0:	mov	r9, r0
   27bd4:	mov	r0, r5
   27bd8:	bl	27984 <g_strcmp0@plt+0x11b04>
   27bdc:	mov	r8, r0
   27be0:	bl	15958 <gtk_tree_model_get_type@plt>
   27be4:	mov	r1, r0
   27be8:	mov	r0, r8
   27bec:	bl	15148 <g_type_check_instance_cast@plt>
   27bf0:	bl	15c70 <gtk_tree_view_new_with_model@plt>
   27bf4:	mov	r7, r0
   27bf8:	bl	15808 <gtk_tree_view_get_type@plt>
   27bfc:	mov	r1, r0
   27c00:	mov	r0, r7
   27c04:	bl	15148 <g_type_check_instance_cast@plt>
   27c08:	bl	27824 <g_strcmp0@plt+0x119a4>
   27c0c:	mov	r0, r7
   27c10:	bl	15b50 <gtk_widget_show@plt>
   27c14:	mov	r1, #0
   27c18:	mov	r0, r1
   27c1c:	bl	154f0 <gtk_scrolled_window_new@plt>
   27c20:	mov	r4, r0
   27c24:	bl	15c94 <gtk_scrolled_window_get_type@plt>
   27c28:	mov	r6, r0
   27c2c:	mov	r1, r0
   27c30:	mov	r0, r4
   27c34:	bl	15148 <g_type_check_instance_cast@plt>
   27c38:	mov	r2, #1
   27c3c:	mov	r1, #2
   27c40:	bl	1564c <gtk_scrolled_window_set_policy@plt>
   27c44:	mov	r1, r6
   27c48:	mov	r0, r4
   27c4c:	bl	15148 <g_type_check_instance_cast@plt>
   27c50:	mov	r1, #0
   27c54:	bl	1543c <gtk_scrolled_window_set_overlay_scrolling@plt>
   27c58:	bl	1540c <gtk_container_get_type@plt>
   27c5c:	mov	r1, r0
   27c60:	mov	r6, r0
   27c64:	mov	r0, r4
   27c68:	bl	15148 <g_type_check_instance_cast@plt>
   27c6c:	mov	r1, r7
   27c70:	bl	155c8 <gtk_container_add@plt>
   27c74:	mov	r0, r4
   27c78:	bl	15b50 <gtk_widget_show@plt>
   27c7c:	mov	r1, r6
   27c80:	mov	r0, r4
   27c84:	bl	15148 <g_type_check_instance_cast@plt>
   27c88:	mov	r1, #6
   27c8c:	bl	15448 <gtk_container_set_border_width@plt>
   27c90:	ldr	r3, [r5, #4]
   27c94:	cmp	r3, #5
   27c98:	bhi	27d3c <g_strcmp0@plt+0x11ebc>
   27c9c:	cmp	r3, #1
   27ca0:	bhi	27d10 <g_strcmp0@plt+0x11e90>
   27ca4:	bl	15928 <gtk_dialog_get_type@plt>
   27ca8:	mov	r5, #1
   27cac:	mov	r1, r0
   27cb0:	mov	r0, r9
   27cb4:	bl	15148 <g_type_check_instance_cast@plt>
   27cb8:	bl	159d0 <gtk_dialog_get_content_area@plt>
   27cbc:	mov	r1, r6
   27cc0:	bl	15148 <g_type_check_instance_cast@plt>
   27cc4:	ldr	r3, [pc, #144]	; 27d5c <g_strcmp0@plt+0x11edc>
   27cc8:	mov	r6, #0
   27ccc:	mov	r1, r4
   27cd0:	stm	sp, {r3, r5, r6}
   27cd4:	mov	r3, r5
   27cd8:	ldr	r2, [pc, #128]	; 27d60 <g_strcmp0@plt+0x11ee0>
   27cdc:	bl	14fec <gtk_container_add_with_properties@plt>
   27ce0:	mov	r0, r9
   27ce4:	mov	r1, #80	; 0x50
   27ce8:	bl	15148 <g_type_check_instance_cast@plt>
   27cec:	str	r6, [sp, #4]
   27cf0:	str	r6, [sp]
   27cf4:	mov	r3, r8
   27cf8:	ldr	r2, [pc, #100]	; 27d64 <g_strcmp0@plt+0x11ee4>
   27cfc:	ldr	r1, [pc, #100]	; 27d68 <g_strcmp0@plt+0x11ee8>
   27d00:	bl	15670 <g_signal_connect_data@plt>
   27d04:	mov	r0, r5
   27d08:	add	sp, sp, #20
   27d0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27d10:	bl	150f4 <gtk_widget_get_type@plt>
   27d14:	mov	r1, r0
   27d18:	mov	r0, r4
   27d1c:	bl	15148 <g_type_check_instance_cast@plt>
   27d20:	ldr	r2, [r5, #4]
   27d24:	mvn	r1, #0
   27d28:	add	r2, r2, r2, lsl #1
   27d2c:	lsl	r2, r2, #4
   27d30:	add	r2, r2, #8
   27d34:	bl	155bc <gtk_widget_set_size_request@plt>
   27d38:	b	27ca4 <g_strcmp0@plt+0x11e24>
   27d3c:	bl	150f4 <gtk_widget_get_type@plt>
   27d40:	mov	r1, r0
   27d44:	mov	r0, r4
   27d48:	bl	15148 <g_type_check_instance_cast@plt>
   27d4c:	mov	r2, #248	; 0xf8
   27d50:	mvn	r1, #0
   27d54:	bl	155bc <gtk_widget_set_size_request@plt>
   27d58:	b	27ca4 <g_strcmp0@plt+0x11e24>
   27d5c:	andeq	r0, r3, r8, lsl #18
   27d60:	andeq	r0, r3, r0, lsl #18
   27d64:	andeq	r7, r2, ip, lsl r8
   27d68:	andeq	r0, r3, r0, lsl r9
   27d6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27d70:	mov	r9, r0
   27d74:	mov	r0, r1
   27d78:	bl	1558c <pk_ptr_array_to_strv@plt>
   27d7c:	mov	r1, r0
   27d80:	ldr	r0, [pc, #384]	; 27f08 <g_strcmp0@plt+0x12088>
   27d84:	bl	15d84 <g_strjoinv@plt>
   27d88:	mov	r8, r0
   27d8c:	bl	28398 <g_strcmp0@plt+0x12518>
   27d90:	cmp	r0, #0
   27d94:	bne	27ee4 <g_strcmp0@plt+0x12064>
   27d98:	bl	15538 <gtk_text_view_new@plt>
   27d9c:	mov	r5, r0
   27da0:	bl	1516c <gtk_text_view_get_type@plt>
   27da4:	mov	r6, r0
   27da8:	mov	r1, r0
   27dac:	mov	r0, r5
   27db0:	bl	15148 <g_type_check_instance_cast@plt>
   27db4:	mov	r1, #0
   27db8:	bl	1597c <gtk_text_view_set_editable@plt>
   27dbc:	mov	r1, r6
   27dc0:	mov	r0, r5
   27dc4:	bl	15148 <g_type_check_instance_cast@plt>
   27dc8:	mov	r1, #5
   27dcc:	bl	1582c <gtk_text_view_set_left_margin@plt>
   27dd0:	mov	r1, r6
   27dd4:	mov	r0, r5
   27dd8:	bl	15148 <g_type_check_instance_cast@plt>
   27ddc:	mov	r1, #5
   27de0:	bl	15904 <gtk_text_view_set_right_margin@plt>
   27de4:	mov	r1, #0
   27de8:	mov	r0, r1
   27dec:	bl	154f0 <gtk_scrolled_window_new@plt>
   27df0:	mov	r4, r0
   27df4:	bl	15c94 <gtk_scrolled_window_get_type@plt>
   27df8:	mov	r7, r0
   27dfc:	mov	r1, r0
   27e00:	mov	r0, r4
   27e04:	bl	15148 <g_type_check_instance_cast@plt>
   27e08:	mov	r2, #1
   27e0c:	mov	r1, #2
   27e10:	bl	1564c <gtk_scrolled_window_set_policy@plt>
   27e14:	mov	r1, r7
   27e18:	mov	r0, r4
   27e1c:	bl	15148 <g_type_check_instance_cast@plt>
   27e20:	mov	r1, #0
   27e24:	bl	1543c <gtk_scrolled_window_set_overlay_scrolling@plt>
   27e28:	bl	1540c <gtk_container_get_type@plt>
   27e2c:	mov	r7, r0
   27e30:	mov	r1, r0
   27e34:	mov	r0, r4
   27e38:	bl	15148 <g_type_check_instance_cast@plt>
   27e3c:	mov	r1, r5
   27e40:	bl	155c8 <gtk_container_add@plt>
   27e44:	mov	r0, r4
   27e48:	bl	15b50 <gtk_widget_show@plt>
   27e4c:	mov	r0, #0
   27e50:	bl	15bf8 <gtk_text_buffer_new@plt>
   27e54:	mvn	r2, #0
   27e58:	mov	r1, r8
   27e5c:	mov	sl, r0
   27e60:	bl	156ac <gtk_text_buffer_set_text@plt>
   27e64:	mov	r1, r6
   27e68:	mov	r0, r5
   27e6c:	bl	15148 <g_type_check_instance_cast@plt>
   27e70:	mov	r1, sl
   27e74:	bl	155e0 <gtk_text_view_set_buffer@plt>
   27e78:	mov	r0, r5
   27e7c:	bl	15b50 <gtk_widget_show@plt>
   27e80:	mov	r1, r7
   27e84:	mov	r0, r4
   27e88:	bl	15148 <g_type_check_instance_cast@plt>
   27e8c:	mov	r1, #6
   27e90:	bl	15448 <gtk_container_set_border_width@plt>
   27e94:	bl	150f4 <gtk_widget_get_type@plt>
   27e98:	mov	r1, r0
   27e9c:	mov	r0, r4
   27ea0:	bl	15148 <g_type_check_instance_cast@plt>
   27ea4:	mov	r2, #300	; 0x12c
   27ea8:	mvn	r1, #0
   27eac:	bl	155bc <gtk_widget_set_size_request@plt>
   27eb0:	bl	15928 <gtk_dialog_get_type@plt>
   27eb4:	mov	r1, r0
   27eb8:	mov	r0, r9
   27ebc:	bl	15148 <g_type_check_instance_cast@plt>
   27ec0:	bl	159d0 <gtk_dialog_get_content_area@plt>
   27ec4:	mov	r1, r7
   27ec8:	bl	15148 <g_type_check_instance_cast@plt>
   27ecc:	mov	r1, r4
   27ed0:	bl	155c8 <gtk_container_add@plt>
   27ed4:	mov	r0, r8
   27ed8:	bl	15874 <g_free@plt>
   27edc:	mov	r0, #1
   27ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27ee4:	mov	r0, r8
   27ee8:	bl	15874 <g_free@plt>
   27eec:	mov	r2, #5
   27ef0:	ldr	r1, [pc, #20]	; 27f0c <g_strcmp0@plt+0x1208c>
   27ef4:	mov	r0, #0
   27ef8:	bl	15880 <dcgettext@plt>
   27efc:	bl	153a0 <g_strdup@plt>
   27f00:	mov	r8, r0
   27f04:	b	27d98 <g_strcmp0@plt+0x11f18>
   27f08:	andeq	fp, r2, ip, asr #2
   27f0c:	andeq	r0, r3, ip, lsl r9
   27f10:	push	{r4, r5, r6, r7, lr}
   27f14:	mov	r2, #5
   27f18:	sub	sp, sp, #20
   27f1c:	mov	r6, r1
   27f20:	mov	r7, r0
   27f24:	ldr	r1, [pc, #192]	; 27fec <g_strcmp0@plt+0x1216c>
   27f28:	mov	r0, #0
   27f2c:	bl	15880 <dcgettext@plt>
   27f30:	bl	15d90 <gtk_check_button_new_with_label@plt>
   27f34:	mov	r4, #0
   27f38:	mov	r3, r6
   27f3c:	ldr	r2, [pc, #172]	; 27ff0 <g_strcmp0@plt+0x12170>
   27f40:	str	r4, [sp, #4]
   27f44:	str	r4, [sp]
   27f48:	ldr	r1, [pc, #164]	; 27ff4 <g_strcmp0@plt+0x12174>
   27f4c:	mov	r5, r0
   27f50:	bl	15670 <g_signal_connect_data@plt>
   27f54:	bl	15928 <gtk_dialog_get_type@plt>
   27f58:	mov	r1, r0
   27f5c:	mov	r0, r7
   27f60:	bl	15148 <g_type_check_instance_cast@plt>
   27f64:	bl	159d0 <gtk_dialog_get_content_area@plt>
   27f68:	mov	r7, r0
   27f6c:	bl	1540c <gtk_container_get_type@plt>
   27f70:	mov	r1, r0
   27f74:	mov	r0, r7
   27f78:	bl	15148 <g_type_check_instance_cast@plt>
   27f7c:	ldr	r2, [pc, #116]	; 27ff8 <g_strcmp0@plt+0x12178>
   27f80:	mov	r3, r4
   27f84:	mov	r1, r5
   27f88:	str	r4, [sp, #8]
   27f8c:	str	r4, [sp, #4]
   27f90:	str	r2, [sp]
   27f94:	ldr	r2, [pc, #96]	; 27ffc <g_strcmp0@plt+0x1217c>
   27f98:	bl	14fec <gtk_container_add_with_properties@plt>
   27f9c:	ldr	r0, [pc, #92]	; 28000 <g_strcmp0@plt+0x12180>
   27fa0:	bl	14f8c <g_settings_new@plt>
   27fa4:	mov	r1, r6
   27fa8:	mov	r7, r0
   27fac:	bl	14f2c <g_settings_get_boolean@plt>
   27fb0:	mov	r4, r0
   27fb4:	mov	r0, r7
   27fb8:	bl	15b5c <g_object_unref@plt>
   27fbc:	bl	15268 <gtk_toggle_button_get_type@plt>
   27fc0:	mov	r1, r0
   27fc4:	mov	r0, r5
   27fc8:	bl	15148 <g_type_check_instance_cast@plt>
   27fcc:	clz	r1, r4
   27fd0:	lsr	r1, r1, #5
   27fd4:	bl	159c4 <gtk_toggle_button_set_active@plt>
   27fd8:	mov	r0, r5
   27fdc:	bl	15b50 <gtk_widget_show@plt>
   27fe0:	mov	r0, #1
   27fe4:	add	sp, sp, #20
   27fe8:	pop	{r4, r5, r6, r7, pc}
   27fec:	andeq	r0, r3, r8, lsr #18
   27ff0:	andeq	r7, r2, ip, lsl #18
   27ff4:	strdeq	pc, [r2], -ip
   27ff8:	andeq	r0, r3, r8, lsl #18
   27ffc:	andeq	r0, r3, r0, lsl #18
   28000:	andeq	r9, r2, r0, lsr #3
   28004:	push	{r4, r5, lr}
   28008:	mov	r4, r1
   2800c:	sub	sp, sp, #20
   28010:	mov	r5, r0
   28014:	bl	15e14 <gtk_notebook_get_type@plt>
   28018:	cmp	r4, #0
   2801c:	moveq	r0, r4
   28020:	beq	280b4 <g_strcmp0@plt+0x12234>
   28024:	ldr	r3, [r4]
   28028:	cmp	r3, #0
   2802c:	beq	2803c <g_strcmp0@plt+0x121bc>
   28030:	ldr	r3, [r3]
   28034:	cmp	r3, r0
   28038:	beq	28050 <g_strcmp0@plt+0x121d0>
   2803c:	mov	r1, r0
   28040:	mov	r0, r4
   28044:	bl	159dc <g_type_check_instance_is_a@plt>
   28048:	cmp	r0, #0
   2804c:	beq	280b4 <g_strcmp0@plt+0x12234>
   28050:	bl	15928 <gtk_dialog_get_type@plt>
   28054:	mov	r1, r0
   28058:	mov	r0, r5
   2805c:	bl	15148 <g_type_check_instance_cast@plt>
   28060:	bl	159d0 <gtk_dialog_get_content_area@plt>
   28064:	mov	r5, r0
   28068:	bl	1540c <gtk_container_get_type@plt>
   2806c:	mov	r1, r0
   28070:	mov	r0, r5
   28074:	bl	15148 <g_type_check_instance_cast@plt>
   28078:	mov	r5, r0
   2807c:	bl	150f4 <gtk_widget_get_type@plt>
   28080:	mov	r1, r0
   28084:	mov	r0, r4
   28088:	bl	15148 <g_type_check_instance_cast@plt>
   2808c:	ldr	r2, [pc, #40]	; 280bc <g_strcmp0@plt+0x1223c>
   28090:	mov	r3, #0
   28094:	str	r2, [sp]
   28098:	str	r3, [sp, #8]
   2809c:	str	r3, [sp, #4]
   280a0:	ldr	r2, [pc, #24]	; 280c0 <g_strcmp0@plt+0x12240>
   280a4:	mov	r1, r0
   280a8:	mov	r0, r5
   280ac:	bl	14fec <gtk_container_add_with_properties@plt>
   280b0:	mov	r0, #1
   280b4:	add	sp, sp, #20
   280b8:	pop	{r4, r5, pc}
   280bc:	andeq	r0, r3, r8, lsl #18
   280c0:	andeq	r0, r3, r0, lsl #18
   280c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   280c8:	mov	r5, r1
   280cc:	sub	sp, sp, #20
   280d0:	add	r1, r1, #4
   280d4:	mov	r9, r0
   280d8:	mov	r0, r5
   280dc:	bl	27984 <g_strcmp0@plt+0x11b04>
   280e0:	mov	r8, r0
   280e4:	bl	15958 <gtk_tree_model_get_type@plt>
   280e8:	mov	r1, r0
   280ec:	mov	r0, r8
   280f0:	bl	15148 <g_type_check_instance_cast@plt>
   280f4:	bl	15c70 <gtk_tree_view_new_with_model@plt>
   280f8:	mov	r7, r0
   280fc:	bl	15808 <gtk_tree_view_get_type@plt>
   28100:	mov	r1, r0
   28104:	mov	r0, r7
   28108:	bl	15148 <g_type_check_instance_cast@plt>
   2810c:	bl	27824 <g_strcmp0@plt+0x119a4>
   28110:	mov	r0, r7
   28114:	bl	15b50 <gtk_widget_show@plt>
   28118:	mov	r1, #0
   2811c:	mov	r0, r1
   28120:	bl	154f0 <gtk_scrolled_window_new@plt>
   28124:	mov	r4, r0
   28128:	bl	15c94 <gtk_scrolled_window_get_type@plt>
   2812c:	mov	r6, r0
   28130:	mov	r1, r0
   28134:	mov	r0, r4
   28138:	bl	15148 <g_type_check_instance_cast@plt>
   2813c:	mov	r2, #1
   28140:	mov	r1, #2
   28144:	bl	1564c <gtk_scrolled_window_set_policy@plt>
   28148:	mov	r1, r6
   2814c:	mov	r0, r4
   28150:	bl	15148 <g_type_check_instance_cast@plt>
   28154:	mov	r1, #0
   28158:	bl	1543c <gtk_scrolled_window_set_overlay_scrolling@plt>
   2815c:	bl	1540c <gtk_container_get_type@plt>
   28160:	mov	r1, r0
   28164:	mov	r6, r0
   28168:	mov	r0, r4
   2816c:	bl	15148 <g_type_check_instance_cast@plt>
   28170:	mov	r1, r7
   28174:	bl	155c8 <gtk_container_add@plt>
   28178:	mov	r0, r4
   2817c:	bl	15b50 <gtk_widget_show@plt>
   28180:	mov	r1, r6
   28184:	mov	r0, r4
   28188:	bl	15148 <g_type_check_instance_cast@plt>
   2818c:	mov	r1, #6
   28190:	bl	15448 <gtk_container_set_border_width@plt>
   28194:	ldr	r3, [r5, #4]
   28198:	cmp	r3, #5
   2819c:	bhi	28230 <g_strcmp0@plt+0x123b0>
   281a0:	cmp	r3, #1
   281a4:	bhi	28204 <g_strcmp0@plt+0x12384>
   281a8:	mov	r1, r6
   281ac:	mov	r0, r9
   281b0:	bl	15148 <g_type_check_instance_cast@plt>
   281b4:	ldr	r3, [pc, #148]	; 28250 <g_strcmp0@plt+0x123d0>
   281b8:	mov	r6, #0
   281bc:	mov	r5, #1
   281c0:	mov	r1, r4
   281c4:	stm	sp, {r3, r5, r6}
   281c8:	mov	r3, r5
   281cc:	ldr	r2, [pc, #128]	; 28254 <g_strcmp0@plt+0x123d4>
   281d0:	bl	14fec <gtk_container_add_with_properties@plt>
   281d4:	mov	r0, r9
   281d8:	mov	r1, #80	; 0x50
   281dc:	bl	15148 <g_type_check_instance_cast@plt>
   281e0:	str	r6, [sp, #4]
   281e4:	str	r6, [sp]
   281e8:	mov	r3, r8
   281ec:	ldr	r2, [pc, #100]	; 28258 <g_strcmp0@plt+0x123d8>
   281f0:	ldr	r1, [pc, #100]	; 2825c <g_strcmp0@plt+0x123dc>
   281f4:	bl	15670 <g_signal_connect_data@plt>
   281f8:	mov	r0, r5
   281fc:	add	sp, sp, #20
   28200:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28204:	bl	150f4 <gtk_widget_get_type@plt>
   28208:	mov	r1, r0
   2820c:	mov	r0, r4
   28210:	bl	15148 <g_type_check_instance_cast@plt>
   28214:	ldr	r2, [r5, #4]
   28218:	mvn	r1, #0
   2821c:	add	r2, r2, r2, lsl #1
   28220:	lsl	r2, r2, #4
   28224:	add	r2, r2, #8
   28228:	bl	155bc <gtk_widget_set_size_request@plt>
   2822c:	b	281a8 <g_strcmp0@plt+0x12328>
   28230:	bl	150f4 <gtk_widget_get_type@plt>
   28234:	mov	r1, r0
   28238:	mov	r0, r4
   2823c:	bl	15148 <g_type_check_instance_cast@plt>
   28240:	mov	r2, #248	; 0xf8
   28244:	mvn	r1, #0
   28248:	bl	155bc <gtk_widget_set_size_request@plt>
   2824c:	b	281a8 <g_strcmp0@plt+0x12328>
   28250:	andeq	r0, r3, r8, lsl #18
   28254:	andeq	r0, r3, r0, lsl #18
   28258:	andeq	r7, r2, ip, lsl r8
   2825c:	andeq	r0, r3, r0, lsl r9
   28260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28264:	sub	sp, sp, #16
   28268:	mov	r4, r2
   2826c:	mov	r5, r3
   28270:	mov	r9, r0
   28274:	mov	r6, r1
   28278:	bl	1540c <gtk_container_get_type@plt>
   2827c:	orrs	r3, r4, r5
   28280:	mov	sl, r0
   28284:	beq	28348 <g_strcmp0@plt+0x124c8>
   28288:	mov	r1, r5
   2828c:	mov	r0, r4
   28290:	bl	15058 <g_format_size@plt>
   28294:	mov	r1, r6
   28298:	mov	r4, #0
   2829c:	mov	r2, r0
   282a0:	mov	r5, r0
   282a4:	ldr	r0, [pc, #224]	; 2838c <g_strcmp0@plt+0x1250c>
   282a8:	bl	15490 <g_strdup_printf@plt>
   282ac:	mov	r1, #6
   282b0:	mov	r7, r0
   282b4:	mov	r0, #0
   282b8:	bl	15274 <gtk_box_new@plt>
   282bc:	mov	r1, sl
   282c0:	mov	r8, r0
   282c4:	mov	r0, r9
   282c8:	bl	15148 <g_type_check_instance_cast@plt>
   282cc:	ldr	r3, [pc, #188]	; 28390 <g_strcmp0@plt+0x12510>
   282d0:	ldr	r2, [pc, #188]	; 28394 <g_strcmp0@plt+0x12514>
   282d4:	mov	r1, r8
   282d8:	str	r3, [sp]
   282dc:	str	r4, [sp, #8]
   282e0:	mov	r3, r4
   282e4:	str	r4, [sp, #4]
   282e8:	bl	14fec <gtk_container_add_with_properties@plt>
   282ec:	mov	r0, r7
   282f0:	bl	15544 <gtk_label_new@plt>
   282f4:	mov	r6, r0
   282f8:	bl	15664 <gtk_box_get_type@plt>
   282fc:	mov	r1, r0
   28300:	mov	r0, r8
   28304:	bl	15148 <g_type_check_instance_cast@plt>
   28308:	str	r4, [sp]
   2830c:	mov	r3, r4
   28310:	mov	r2, r4
   28314:	mov	r1, r6
   28318:	bl	15700 <gtk_box_pack_start@plt>
   2831c:	mov	r0, r8
   28320:	bl	15b50 <gtk_widget_show@plt>
   28324:	mov	r0, r6
   28328:	bl	15b50 <gtk_widget_show@plt>
   2832c:	mov	r0, r7
   28330:	bl	15874 <g_free@plt>
   28334:	mov	r0, r5
   28338:	bl	15874 <g_free@plt>
   2833c:	mov	r0, #1
   28340:	add	sp, sp, #16
   28344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28348:	mov	r0, r6
   2834c:	bl	15544 <gtk_label_new@plt>
   28350:	mov	r1, sl
   28354:	mov	r6, r0
   28358:	mov	r0, r9
   2835c:	bl	15148 <g_type_check_instance_cast@plt>
   28360:	ldr	r2, [pc, #40]	; 28390 <g_strcmp0@plt+0x12510>
   28364:	mov	r3, #0
   28368:	str	r2, [sp]
   2836c:	mov	r5, r3
   28370:	mov	r1, r6
   28374:	str	r3, [sp, #8]
   28378:	str	r3, [sp, #4]
   2837c:	ldr	r2, [pc, #16]	; 28394 <g_strcmp0@plt+0x12514>
   28380:	bl	14fec <gtk_container_add_with_properties@plt>
   28384:	mov	r7, r5
   28388:	b	28324 <g_strcmp0@plt+0x124a4>
   2838c:	andeq	sl, r2, r4, lsr fp
   28390:	andeq	r0, r3, r8, lsl #18
   28394:	andeq	r0, r3, r0, lsl #18
   28398:	cmp	r0, #0
   2839c:	ldrbne	r0, [r0]
   283a0:	clzne	r0, r0
   283a4:	lsrne	r0, r0, #5
   283a8:	moveq	r0, #1
   283ac:	bx	lr
   283b0:	cmp	r0, #0
   283b4:	bxeq	lr
   283b8:	ldrb	r2, [r0]
   283bc:	cmp	r2, #0
   283c0:	beq	28404 <g_strcmp0@plt+0x12584>
   283c4:	cmp	r1, #1
   283c8:	bls	2840c <g_strcmp0@plt+0x1258c>
   283cc:	ldrb	r3, [r0, #1]
   283d0:	cmp	r3, #0
   283d4:	beq	2840c <g_strcmp0@plt+0x1258c>
   283d8:	sub	r1, r1, #1
   283dc:	add	ip, r0, r1
   283e0:	add	r3, r0, #1
   283e4:	rsb	r2, r0, #1
   283e8:	cmp	r3, ip
   283ec:	add	r0, r2, r3
   283f0:	bxeq	lr
   283f4:	ldrb	r1, [r3, #1]!
   283f8:	cmp	r1, #0
   283fc:	bne	283e8 <g_strcmp0@plt+0x12568>
   28400:	bx	lr
   28404:	mov	r0, r2
   28408:	bx	lr
   2840c:	mov	r0, #1
   28410:	bx	lr
   28414:	subs	r2, r1, #1
   28418:	bxeq	lr
   2841c:	bcc	285f4 <g_strcmp0@plt+0x12774>
   28420:	cmp	r0, r1
   28424:	bls	285d8 <g_strcmp0@plt+0x12758>
   28428:	tst	r1, r2
   2842c:	beq	285e4 <g_strcmp0@plt+0x12764>
   28430:	clz	r3, r0
   28434:	clz	r2, r1
   28438:	sub	r3, r2, r3
   2843c:	rsbs	r3, r3, #31
   28440:	addne	r3, r3, r3, lsl #1
   28444:	mov	r2, #0
   28448:	addne	pc, pc, r3, lsl #2
   2844c:	nop			; (mov r0, r0)
   28450:	cmp	r0, r1, lsl #31
   28454:	adc	r2, r2, r2
   28458:	subcs	r0, r0, r1, lsl #31
   2845c:	cmp	r0, r1, lsl #30
   28460:	adc	r2, r2, r2
   28464:	subcs	r0, r0, r1, lsl #30
   28468:	cmp	r0, r1, lsl #29
   2846c:	adc	r2, r2, r2
   28470:	subcs	r0, r0, r1, lsl #29
   28474:	cmp	r0, r1, lsl #28
   28478:	adc	r2, r2, r2
   2847c:	subcs	r0, r0, r1, lsl #28
   28480:	cmp	r0, r1, lsl #27
   28484:	adc	r2, r2, r2
   28488:	subcs	r0, r0, r1, lsl #27
   2848c:	cmp	r0, r1, lsl #26
   28490:	adc	r2, r2, r2
   28494:	subcs	r0, r0, r1, lsl #26
   28498:	cmp	r0, r1, lsl #25
   2849c:	adc	r2, r2, r2
   284a0:	subcs	r0, r0, r1, lsl #25
   284a4:	cmp	r0, r1, lsl #24
   284a8:	adc	r2, r2, r2
   284ac:	subcs	r0, r0, r1, lsl #24
   284b0:	cmp	r0, r1, lsl #23
   284b4:	adc	r2, r2, r2
   284b8:	subcs	r0, r0, r1, lsl #23
   284bc:	cmp	r0, r1, lsl #22
   284c0:	adc	r2, r2, r2
   284c4:	subcs	r0, r0, r1, lsl #22
   284c8:	cmp	r0, r1, lsl #21
   284cc:	adc	r2, r2, r2
   284d0:	subcs	r0, r0, r1, lsl #21
   284d4:	cmp	r0, r1, lsl #20
   284d8:	adc	r2, r2, r2
   284dc:	subcs	r0, r0, r1, lsl #20
   284e0:	cmp	r0, r1, lsl #19
   284e4:	adc	r2, r2, r2
   284e8:	subcs	r0, r0, r1, lsl #19
   284ec:	cmp	r0, r1, lsl #18
   284f0:	adc	r2, r2, r2
   284f4:	subcs	r0, r0, r1, lsl #18
   284f8:	cmp	r0, r1, lsl #17
   284fc:	adc	r2, r2, r2
   28500:	subcs	r0, r0, r1, lsl #17
   28504:	cmp	r0, r1, lsl #16
   28508:	adc	r2, r2, r2
   2850c:	subcs	r0, r0, r1, lsl #16
   28510:	cmp	r0, r1, lsl #15
   28514:	adc	r2, r2, r2
   28518:	subcs	r0, r0, r1, lsl #15
   2851c:	cmp	r0, r1, lsl #14
   28520:	adc	r2, r2, r2
   28524:	subcs	r0, r0, r1, lsl #14
   28528:	cmp	r0, r1, lsl #13
   2852c:	adc	r2, r2, r2
   28530:	subcs	r0, r0, r1, lsl #13
   28534:	cmp	r0, r1, lsl #12
   28538:	adc	r2, r2, r2
   2853c:	subcs	r0, r0, r1, lsl #12
   28540:	cmp	r0, r1, lsl #11
   28544:	adc	r2, r2, r2
   28548:	subcs	r0, r0, r1, lsl #11
   2854c:	cmp	r0, r1, lsl #10
   28550:	adc	r2, r2, r2
   28554:	subcs	r0, r0, r1, lsl #10
   28558:	cmp	r0, r1, lsl #9
   2855c:	adc	r2, r2, r2
   28560:	subcs	r0, r0, r1, lsl #9
   28564:	cmp	r0, r1, lsl #8
   28568:	adc	r2, r2, r2
   2856c:	subcs	r0, r0, r1, lsl #8
   28570:	cmp	r0, r1, lsl #7
   28574:	adc	r2, r2, r2
   28578:	subcs	r0, r0, r1, lsl #7
   2857c:	cmp	r0, r1, lsl #6
   28580:	adc	r2, r2, r2
   28584:	subcs	r0, r0, r1, lsl #6
   28588:	cmp	r0, r1, lsl #5
   2858c:	adc	r2, r2, r2
   28590:	subcs	r0, r0, r1, lsl #5
   28594:	cmp	r0, r1, lsl #4
   28598:	adc	r2, r2, r2
   2859c:	subcs	r0, r0, r1, lsl #4
   285a0:	cmp	r0, r1, lsl #3
   285a4:	adc	r2, r2, r2
   285a8:	subcs	r0, r0, r1, lsl #3
   285ac:	cmp	r0, r1, lsl #2
   285b0:	adc	r2, r2, r2
   285b4:	subcs	r0, r0, r1, lsl #2
   285b8:	cmp	r0, r1, lsl #1
   285bc:	adc	r2, r2, r2
   285c0:	subcs	r0, r0, r1, lsl #1
   285c4:	cmp	r0, r1
   285c8:	adc	r2, r2, r2
   285cc:	subcs	r0, r0, r1
   285d0:	mov	r0, r2
   285d4:	bx	lr
   285d8:	moveq	r0, #1
   285dc:	movne	r0, #0
   285e0:	bx	lr
   285e4:	clz	r2, r1
   285e8:	rsb	r2, r2, #31
   285ec:	lsr	r0, r0, r2
   285f0:	bx	lr
   285f4:	cmp	r0, #0
   285f8:	mvnne	r0, #0
   285fc:	b	28860 <g_strcmp0@plt+0x129e0>
   28600:	cmp	r1, #0
   28604:	beq	285f4 <g_strcmp0@plt+0x12774>
   28608:	push	{r0, r1, lr}
   2860c:	bl	28414 <g_strcmp0@plt+0x12594>
   28610:	pop	{r1, r2, lr}
   28614:	mul	r3, r2, r0
   28618:	sub	r1, r1, r3
   2861c:	bx	lr
   28620:	cmp	r1, #0
   28624:	beq	28830 <g_strcmp0@plt+0x129b0>
   28628:	eor	ip, r0, r1
   2862c:	rsbmi	r1, r1, #0
   28630:	subs	r2, r1, #1
   28634:	beq	287fc <g_strcmp0@plt+0x1297c>
   28638:	movs	r3, r0
   2863c:	rsbmi	r3, r0, #0
   28640:	cmp	r3, r1
   28644:	bls	28808 <g_strcmp0@plt+0x12988>
   28648:	tst	r1, r2
   2864c:	beq	28818 <g_strcmp0@plt+0x12998>
   28650:	clz	r2, r3
   28654:	clz	r0, r1
   28658:	sub	r2, r0, r2
   2865c:	rsbs	r2, r2, #31
   28660:	addne	r2, r2, r2, lsl #1
   28664:	mov	r0, #0
   28668:	addne	pc, pc, r2, lsl #2
   2866c:	nop			; (mov r0, r0)
   28670:	cmp	r3, r1, lsl #31
   28674:	adc	r0, r0, r0
   28678:	subcs	r3, r3, r1, lsl #31
   2867c:	cmp	r3, r1, lsl #30
   28680:	adc	r0, r0, r0
   28684:	subcs	r3, r3, r1, lsl #30
   28688:	cmp	r3, r1, lsl #29
   2868c:	adc	r0, r0, r0
   28690:	subcs	r3, r3, r1, lsl #29
   28694:	cmp	r3, r1, lsl #28
   28698:	adc	r0, r0, r0
   2869c:	subcs	r3, r3, r1, lsl #28
   286a0:	cmp	r3, r1, lsl #27
   286a4:	adc	r0, r0, r0
   286a8:	subcs	r3, r3, r1, lsl #27
   286ac:	cmp	r3, r1, lsl #26
   286b0:	adc	r0, r0, r0
   286b4:	subcs	r3, r3, r1, lsl #26
   286b8:	cmp	r3, r1, lsl #25
   286bc:	adc	r0, r0, r0
   286c0:	subcs	r3, r3, r1, lsl #25
   286c4:	cmp	r3, r1, lsl #24
   286c8:	adc	r0, r0, r0
   286cc:	subcs	r3, r3, r1, lsl #24
   286d0:	cmp	r3, r1, lsl #23
   286d4:	adc	r0, r0, r0
   286d8:	subcs	r3, r3, r1, lsl #23
   286dc:	cmp	r3, r1, lsl #22
   286e0:	adc	r0, r0, r0
   286e4:	subcs	r3, r3, r1, lsl #22
   286e8:	cmp	r3, r1, lsl #21
   286ec:	adc	r0, r0, r0
   286f0:	subcs	r3, r3, r1, lsl #21
   286f4:	cmp	r3, r1, lsl #20
   286f8:	adc	r0, r0, r0
   286fc:	subcs	r3, r3, r1, lsl #20
   28700:	cmp	r3, r1, lsl #19
   28704:	adc	r0, r0, r0
   28708:	subcs	r3, r3, r1, lsl #19
   2870c:	cmp	r3, r1, lsl #18
   28710:	adc	r0, r0, r0
   28714:	subcs	r3, r3, r1, lsl #18
   28718:	cmp	r3, r1, lsl #17
   2871c:	adc	r0, r0, r0
   28720:	subcs	r3, r3, r1, lsl #17
   28724:	cmp	r3, r1, lsl #16
   28728:	adc	r0, r0, r0
   2872c:	subcs	r3, r3, r1, lsl #16
   28730:	cmp	r3, r1, lsl #15
   28734:	adc	r0, r0, r0
   28738:	subcs	r3, r3, r1, lsl #15
   2873c:	cmp	r3, r1, lsl #14
   28740:	adc	r0, r0, r0
   28744:	subcs	r3, r3, r1, lsl #14
   28748:	cmp	r3, r1, lsl #13
   2874c:	adc	r0, r0, r0
   28750:	subcs	r3, r3, r1, lsl #13
   28754:	cmp	r3, r1, lsl #12
   28758:	adc	r0, r0, r0
   2875c:	subcs	r3, r3, r1, lsl #12
   28760:	cmp	r3, r1, lsl #11
   28764:	adc	r0, r0, r0
   28768:	subcs	r3, r3, r1, lsl #11
   2876c:	cmp	r3, r1, lsl #10
   28770:	adc	r0, r0, r0
   28774:	subcs	r3, r3, r1, lsl #10
   28778:	cmp	r3, r1, lsl #9
   2877c:	adc	r0, r0, r0
   28780:	subcs	r3, r3, r1, lsl #9
   28784:	cmp	r3, r1, lsl #8
   28788:	adc	r0, r0, r0
   2878c:	subcs	r3, r3, r1, lsl #8
   28790:	cmp	r3, r1, lsl #7
   28794:	adc	r0, r0, r0
   28798:	subcs	r3, r3, r1, lsl #7
   2879c:	cmp	r3, r1, lsl #6
   287a0:	adc	r0, r0, r0
   287a4:	subcs	r3, r3, r1, lsl #6
   287a8:	cmp	r3, r1, lsl #5
   287ac:	adc	r0, r0, r0
   287b0:	subcs	r3, r3, r1, lsl #5
   287b4:	cmp	r3, r1, lsl #4
   287b8:	adc	r0, r0, r0
   287bc:	subcs	r3, r3, r1, lsl #4
   287c0:	cmp	r3, r1, lsl #3
   287c4:	adc	r0, r0, r0
   287c8:	subcs	r3, r3, r1, lsl #3
   287cc:	cmp	r3, r1, lsl #2
   287d0:	adc	r0, r0, r0
   287d4:	subcs	r3, r3, r1, lsl #2
   287d8:	cmp	r3, r1, lsl #1
   287dc:	adc	r0, r0, r0
   287e0:	subcs	r3, r3, r1, lsl #1
   287e4:	cmp	r3, r1
   287e8:	adc	r0, r0, r0
   287ec:	subcs	r3, r3, r1
   287f0:	cmp	ip, #0
   287f4:	rsbmi	r0, r0, #0
   287f8:	bx	lr
   287fc:	teq	ip, r0
   28800:	rsbmi	r0, r0, #0
   28804:	bx	lr
   28808:	movcc	r0, #0
   2880c:	asreq	r0, ip, #31
   28810:	orreq	r0, r0, #1
   28814:	bx	lr
   28818:	clz	r2, r1
   2881c:	rsb	r2, r2, #31
   28820:	cmp	ip, #0
   28824:	lsr	r0, r3, r2
   28828:	rsbmi	r0, r0, #0
   2882c:	bx	lr
   28830:	cmp	r0, #0
   28834:	mvngt	r0, #-2147483648	; 0x80000000
   28838:	movlt	r0, #-2147483648	; 0x80000000
   2883c:	b	28860 <g_strcmp0@plt+0x129e0>
   28840:	cmp	r1, #0
   28844:	beq	28830 <g_strcmp0@plt+0x129b0>
   28848:	push	{r0, r1, lr}
   2884c:	bl	28628 <g_strcmp0@plt+0x127a8>
   28850:	pop	{r1, r2, lr}
   28854:	mul	r3, r2, r0
   28858:	sub	r1, r1, r3
   2885c:	bx	lr
   28860:	push	{r1, lr}
   28864:	mov	r0, #8
   28868:	bl	159b8 <raise@plt>
   2886c:	pop	{r1, pc}
   28870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28874:	mov	r7, r0
   28878:	ldr	r6, [pc, #72]	; 288c8 <g_strcmp0@plt+0x12a48>
   2887c:	ldr	r5, [pc, #72]	; 288cc <g_strcmp0@plt+0x12a4c>
   28880:	add	r6, pc, r6
   28884:	add	r5, pc, r5
   28888:	sub	r6, r6, r5
   2888c:	mov	r8, r1
   28890:	mov	r9, r2
   28894:	bl	14eb8 <gtk_expander_get_expanded@plt-0x20>
   28898:	asrs	r6, r6, #2
   2889c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   288a0:	mov	r4, #0
   288a4:	add	r4, r4, #1
   288a8:	ldr	r3, [r5], #4
   288ac:	mov	r2, r9
   288b0:	mov	r1, r8
   288b4:	mov	r0, r7
   288b8:	blx	r3
   288bc:	cmp	r6, r4
   288c0:	bne	288a4 <g_strcmp0@plt+0x12a24>
   288c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   288c8:	andeq	r8, r1, r4, asr #11
   288cc:			; <UNDEFINED> instruction: 0x000185bc
   288d0:	bx	lr

Disassembly of section .fini:

000288d4 <.fini>:
   288d4:	push	{r3, lr}
   288d8:	pop	{r3, pc}
