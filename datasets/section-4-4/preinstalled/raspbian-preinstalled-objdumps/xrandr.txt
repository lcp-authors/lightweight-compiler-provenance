
raspbian-preinstalled/xrandr:     file format elf32-littlearm


Disassembly of section .init:

00011608 <.init>:
   11608:	push	{r3, lr}
   1160c:	bl	17118 <XRRGetOutputInfo@plt+0x56b8>
   11610:	pop	{r3, pc}

Disassembly of section .plt:

00011614 <calloc@plt-0x14>:
   11614:	push	{lr}		; (str lr, [sp, #-4]!)
   11618:	ldr	lr, [pc, #4]	; 11624 <calloc@plt-0x4>
   1161c:	add	lr, pc, lr
   11620:	ldr	pc, [lr, #8]!
   11624:	ldrdeq	sl, [r1], -ip

00011628 <calloc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #106496	; 0x1a000
   11630:	ldr	pc, [ip, #2524]!	; 0x9dc

00011634 <raise@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #106496	; 0x1a000
   1163c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011640 <XRRFreeScreenConfigInfo@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #106496	; 0x1a000
   11648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001164c <log@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #106496	; 0x1a000
   11654:	ldr	pc, [ip, #2500]!	; 0x9c4

00011658 <strcmp@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #106496	; 0x1a000
   11660:	ldr	pc, [ip, #2492]!	; 0x9bc

00011664 <strtol@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #106496	; 0x1a000
   1166c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011670 <XRRGetCrtcInfo@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #106496	; 0x1a000
   11678:	ldr	pc, [ip, #2476]!	; 0x9ac

0001167c <XRRListOutputProperties@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #106496	; 0x1a000
   11684:	ldr	pc, [ip, #2468]!	; 0x9a4

00011688 <XRRQueryExtension@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #106496	; 0x1a000
   11690:	ldr	pc, [ip, #2460]!	; 0x99c

00011694 <XRRQueryVersion@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #106496	; 0x1a000
   1169c:	ldr	pc, [ip, #2452]!	; 0x994

000116a0 <free@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #106496	; 0x1a000
   116a8:	ldr	pc, [ip, #2444]!	; 0x98c

000116ac <XRRSetCrtcTransform@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #106496	; 0x1a000
   116b4:	ldr	pc, [ip, #2436]!	; 0x984

000116b8 <XRRGetCrtcGammaSize@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #106496	; 0x1a000
   116c0:	ldr	pc, [ip, #2428]!	; 0x97c

000116c4 <XRRConfigRotations@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #106496	; 0x1a000
   116cc:	ldr	pc, [ip, #2420]!	; 0x974

000116d0 <XRRGetProviderInfo@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #106496	; 0x1a000
   116d8:	ldr	pc, [ip, #2412]!	; 0x96c

000116dc <memcpy@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #106496	; 0x1a000
   116e4:	ldr	pc, [ip, #2404]!	; 0x964

000116e8 <XRRSetOutputPrimary@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #106496	; 0x1a000
   116f0:	ldr	pc, [ip, #2396]!	; 0x95c

000116f4 <XRRUpdateConfiguration@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #106496	; 0x1a000
   116fc:	ldr	pc, [ip, #2388]!	; 0x954

00011700 <pow@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #106496	; 0x1a000
   11708:	ldr	pc, [ip, #2380]!	; 0x94c

0001170c <memcmp@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #106496	; 0x1a000
   11714:	ldr	pc, [ip, #2372]!	; 0x944

00011718 <strdup@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #106496	; 0x1a000
   11720:	ldr	pc, [ip, #2364]!	; 0x93c

00011724 <__stack_chk_fail@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #106496	; 0x1a000
   1172c:	ldr	pc, [ip, #2356]!	; 0x934

00011730 <XFree@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #106496	; 0x1a000
   11738:	ldr	pc, [ip, #2348]!	; 0x92c

0001173c <XRRSetMonitor@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #106496	; 0x1a000
   11744:	ldr	pc, [ip, #2340]!	; 0x924

00011748 <realloc@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #106496	; 0x1a000
   11750:	ldr	pc, [ip, #2332]!	; 0x91c

00011754 <XRRGetScreenResources@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #106496	; 0x1a000
   1175c:	ldr	pc, [ip, #2324]!	; 0x914

00011760 <strcasecmp@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #106496	; 0x1a000
   11768:	ldr	pc, [ip, #2316]!	; 0x90c

0001176c <XRRConfigSizes@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #106496	; 0x1a000
   11774:	ldr	pc, [ip, #2308]!	; 0x904

00011778 <fwrite@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #106496	; 0x1a000
   11780:	ldr	pc, [ip, #2300]!	; 0x8fc

00011784 <XRRAllocGamma@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #106496	; 0x1a000
   1178c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011790 <XRRSetScreenSize@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #106496	; 0x1a000
   11798:	ldr	pc, [ip, #2284]!	; 0x8ec

0001179c <floor@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #106496	; 0x1a000
   117a4:	ldr	pc, [ip, #2276]!	; 0x8e4

000117a8 <puts@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #106496	; 0x1a000
   117b0:	ldr	pc, [ip, #2268]!	; 0x8dc

000117b4 <malloc@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #106496	; 0x1a000
   117bc:	ldr	pc, [ip, #2260]!	; 0x8d4

000117c0 <__libc_start_main@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #106496	; 0x1a000
   117c8:	ldr	pc, [ip, #2252]!	; 0x8cc

000117cc <XOpenDisplay@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #106496	; 0x1a000
   117d4:	ldr	pc, [ip, #2244]!	; 0x8c4

000117d8 <XRRSetScreenConfigAndRate@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #106496	; 0x1a000
   117e0:	ldr	pc, [ip, #2236]!	; 0x8bc

000117e4 <__vfprintf_chk@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #106496	; 0x1a000
   117ec:	ldr	pc, [ip, #2228]!	; 0x8b4

000117f0 <__gmon_start__@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #106496	; 0x1a000
   117f8:	ldr	pc, [ip, #2220]!	; 0x8ac

000117fc <XRRGetOutputPrimary@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #106496	; 0x1a000
   11804:	ldr	pc, [ip, #2212]!	; 0x8a4

00011808 <XRRGetMonitors@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #106496	; 0x1a000
   11810:	ldr	pc, [ip, #2204]!	; 0x89c

00011814 <exit@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #106496	; 0x1a000
   1181c:	ldr	pc, [ip, #2196]!	; 0x894

00011820 <XRRCreateMode@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #106496	; 0x1a000
   11828:	ldr	pc, [ip, #2188]!	; 0x88c

0001182c <XRRConfigCurrentRate@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #106496	; 0x1a000
   11834:	ldr	pc, [ip, #2180]!	; 0x884

00011838 <strlen@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #106496	; 0x1a000
   11840:	ldr	pc, [ip, #2172]!	; 0x87c

00011844 <XRRDestroyMode@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #106496	; 0x1a000
   1184c:	ldr	pc, [ip, #2164]!	; 0x874

00011850 <XUngrabServer@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #106496	; 0x1a000
   11858:	ldr	pc, [ip, #2156]!	; 0x86c

0001185c <XRRSetCrtcConfig@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #106496	; 0x1a000
   11864:	ldr	pc, [ip, #2148]!	; 0x864

00011868 <XRRConfigCurrentConfiguration@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #106496	; 0x1a000
   11870:	ldr	pc, [ip, #2140]!	; 0x85c

00011874 <XRRAddOutputMode@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #106496	; 0x1a000
   1187c:	ldr	pc, [ip, #2132]!	; 0x854

00011880 <XNextEvent@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #106496	; 0x1a000
   11888:	ldr	pc, [ip, #2124]!	; 0x84c

0001188c <XRRFreeProviderResources@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #106496	; 0x1a000
   11894:	ldr	pc, [ip, #2116]!	; 0x844

00011898 <XInternAtom@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #106496	; 0x1a000
   118a0:	ldr	pc, [ip, #2108]!	; 0x83c

000118a4 <__isoc99_sscanf@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #106496	; 0x1a000
   118ac:	ldr	pc, [ip, #2100]!	; 0x834

000118b0 <XRRGetPanning@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #106496	; 0x1a000
   118b8:	ldr	pc, [ip, #2092]!	; 0x82c

000118bc <XRRSetProviderOffloadSink@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #106496	; 0x1a000
   118c4:	ldr	pc, [ip, #2084]!	; 0x824

000118c8 <memset@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #106496	; 0x1a000
   118d0:	ldr	pc, [ip, #2076]!	; 0x81c

000118d4 <XDisplayName@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #106496	; 0x1a000
   118dc:	ldr	pc, [ip, #2068]!	; 0x814

000118e0 <putchar@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #106496	; 0x1a000
   118e8:	ldr	pc, [ip, #2060]!	; 0x80c

000118ec <XRRGetScreenResourcesCurrent@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #106496	; 0x1a000
   118f4:	ldr	pc, [ip, #2052]!	; 0x804

000118f8 <XGetAtomName@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #106496	; 0x1a000
   11900:	ldr	pc, [ip, #2044]!	; 0x7fc

00011904 <XSync@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #106496	; 0x1a000
   1190c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011910 <__printf_chk@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #106496	; 0x1a000
   11918:	ldr	pc, [ip, #2028]!	; 0x7ec

0001191c <XSelectInput@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #106496	; 0x1a000
   11924:	ldr	pc, [ip, #2020]!	; 0x7e4

00011928 <strtod@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #106496	; 0x1a000
   11930:	ldr	pc, [ip, #2012]!	; 0x7dc

00011934 <XGrabServer@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #106496	; 0x1a000
   1193c:	ldr	pc, [ip, #2004]!	; 0x7d4

00011940 <XRRSetCrtcGamma@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #106496	; 0x1a000
   11948:	ldr	pc, [ip, #1996]!	; 0x7cc

0001194c <__fprintf_chk@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #106496	; 0x1a000
   11954:	ldr	pc, [ip, #1988]!	; 0x7c4

00011958 <ceil@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #106496	; 0x1a000
   11960:	ldr	pc, [ip, #1980]!	; 0x7bc

00011964 <XRRSetProviderOutputSource@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #106496	; 0x1a000
   1196c:	ldr	pc, [ip, #1972]!	; 0x7b4

00011970 <XRRGetScreenSizeRange@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #106496	; 0x1a000
   11978:	ldr	pc, [ip, #1964]!	; 0x7ac

0001197c <strtok@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #106496	; 0x1a000
   11984:	ldr	pc, [ip, #1956]!	; 0x7a4

00011988 <XRRAllocateMonitor@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #106496	; 0x1a000
   11990:	ldr	pc, [ip, #1948]!	; 0x79c

00011994 <XRRFreeMonitors@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #106496	; 0x1a000
   1199c:	ldr	pc, [ip, #1940]!	; 0x794

000119a0 <XRRConfigRates@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #106496	; 0x1a000
   119a8:	ldr	pc, [ip, #1932]!	; 0x78c

000119ac <XRRQueryOutputProperty@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #106496	; 0x1a000
   119b4:	ldr	pc, [ip, #1924]!	; 0x784

000119b8 <XRRGetOutputProperty@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #106496	; 0x1a000
   119c0:	ldr	pc, [ip, #1916]!	; 0x77c

000119c4 <XRRDeleteMonitor@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #106496	; 0x1a000
   119cc:	ldr	pc, [ip, #1908]!	; 0x774

000119d0 <XRRFreeGamma@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #106496	; 0x1a000
   119d8:	ldr	pc, [ip, #1900]!	; 0x76c

000119dc <exp@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #106496	; 0x1a000
   119e4:	ldr	pc, [ip, #1892]!	; 0x764

000119e8 <XRRGetScreenInfo@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #106496	; 0x1a000
   119f0:	ldr	pc, [ip, #1884]!	; 0x75c

000119f4 <XRRGetProviderResources@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #106496	; 0x1a000
   119fc:	ldr	pc, [ip, #1876]!	; 0x754

00011a00 <XRRChangeOutputProperty@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #106496	; 0x1a000
   11a08:	ldr	pc, [ip, #1868]!	; 0x74c

00011a0c <XRRGetCrtcGamma@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #106496	; 0x1a000
   11a14:	ldr	pc, [ip, #1860]!	; 0x744

00011a18 <XRRSetPanning@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #106496	; 0x1a000
   11a20:	ldr	pc, [ip, #1852]!	; 0x73c

00011a24 <XRRSelectInput@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #106496	; 0x1a000
   11a2c:	ldr	pc, [ip, #1844]!	; 0x734

00011a30 <XRRGetCrtcTransform@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #106496	; 0x1a000
   11a38:	ldr	pc, [ip, #1836]!	; 0x72c

00011a3c <strncmp@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #106496	; 0x1a000
   11a44:	ldr	pc, [ip, #1828]!	; 0x724

00011a48 <abort@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #106496	; 0x1a000
   11a50:	ldr	pc, [ip, #1820]!	; 0x71c

00011a54 <XRRDeleteOutputMode@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #106496	; 0x1a000
   11a5c:	ldr	pc, [ip, #1812]!	; 0x714

00011a60 <XRRGetOutputInfo@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #106496	; 0x1a000
   11a68:	ldr	pc, [ip, #1804]!	; 0x70c

Disassembly of section .text:

00011a70 <.text>:
   11a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a74:	vpush	{d8-d13}
   11a78:	ldr	r3, [pc, #456]	; 11c48 <XRRGetOutputInfo@plt+0x1e8>
   11a7c:	mov	sl, r0
   11a80:	cmp	r0, #1
   11a84:	ldr	r0, [pc, #640]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11a88:	add	fp, sp, #80	; 0x50
   11a8c:	mov	r8, r1
   11a90:	sub	sp, sp, #340	; 0x154
   11a94:	ldr	r2, [r3]
   11a98:	ldr	r1, [r1]
   11a9c:	mov	r3, #0
   11aa0:	vldr	d8, [pc, #408]	; 11c40 <XRRGetOutputInfo@plt+0x1e0>
   11aa4:	str	r1, [r0, #12]
   11aa8:	str	r2, [fp, #-88]	; 0xffffffa8
   11aac:	str	r3, [fp, #-248]	; 0xffffff08
   11ab0:	str	r3, [fp, #-244]	; 0xffffff0c
   11ab4:	ble	15354 <XRRGetOutputInfo@plt+0x38f4>
   11ab8:	ldr	r9, [pc, #396]	; 11c4c <XRRGetOutputInfo@plt+0x1ec>
   11abc:	mov	r4, #1
   11ac0:	mvn	r2, #0
   11ac4:	str	r3, [fp, #-380]	; 0xfffffe84
   11ac8:	str	r2, [fp, #-332]	; 0xfffffeb4
   11acc:	str	r3, [fp, #-360]	; 0xfffffe98
   11ad0:	str	r3, [fp, #-344]	; 0xfffffea8
   11ad4:	str	r3, [fp, #-372]	; 0xfffffe8c
   11ad8:	str	r3, [fp, #-376]	; 0xfffffe88
   11adc:	str	r3, [fp, #-328]	; 0xfffffeb8
   11ae0:	str	r3, [fp, #-336]	; 0xfffffeb0
   11ae4:	str	r3, [fp, #-340]	; 0xfffffeac
   11ae8:	str	r3, [fp, #-368]	; 0xfffffe90
   11aec:	str	r3, [fp, #-352]	; 0xfffffea0
   11af0:	str	r3, [fp, #-280]	; 0xfffffee8
   11af4:	str	r3, [fp, #-276]	; 0xfffffeec
   11af8:	str	r3, [fp, #-356]	; 0xfffffe9c
   11afc:	str	r3, [fp, #-312]	; 0xfffffec8
   11b00:	str	r3, [fp, #-272]	; 0xfffffef0
   11b04:	str	r3, [fp, #-364]	; 0xfffffe94
   11b08:	str	r3, [fp, #-324]	; 0xfffffebc
   11b0c:	str	r3, [fp, #-316]	; 0xfffffec4
   11b10:	str	r3, [fp, #-264]	; 0xfffffef8
   11b14:	str	r3, [fp, #-268]	; 0xfffffef4
   11b18:	str	r3, [fp, #-308]	; 0xfffffecc
   11b1c:	str	r2, [fp, #-348]	; 0xfffffea4
   11b20:	ldr	r6, [r8, r4, lsl #2]
   11b24:	mov	r0, r9
   11b28:	mov	r1, r6
   11b2c:	bl	11658 <strcmp@plt>
   11b30:	mov	r5, r4
   11b34:	lsl	r7, r4, #2
   11b38:	cmp	r0, #0
   11b3c:	beq	11d1c <XRRGetOutputInfo@plt+0x2bc>
   11b40:	mov	r1, r6
   11b44:	ldr	r0, [pc, #260]	; 11c50 <XRRGetOutputInfo@plt+0x1f0>
   11b48:	bl	11658 <strcmp@plt>
   11b4c:	cmp	r0, #0
   11b50:	beq	11d1c <XRRGetOutputInfo@plt+0x2bc>
   11b54:	mov	r1, r6
   11b58:	ldr	r0, [pc, #244]	; 11c54 <XRRGetOutputInfo@plt+0x1f4>
   11b5c:	bl	11658 <strcmp@plt>
   11b60:	cmp	r0, #0
   11b64:	beq	11d1c <XRRGetOutputInfo@plt+0x2bc>
   11b68:	mov	r1, r6
   11b6c:	ldr	r0, [pc, #228]	; 11c58 <XRRGetOutputInfo@plt+0x1f8>
   11b70:	bl	11658 <strcmp@plt>
   11b74:	cmp	r0, #0
   11b78:	beq	141ac <XRRGetOutputInfo@plt+0x274c>
   11b7c:	mov	r1, r6
   11b80:	ldr	r0, [pc, #212]	; 11c5c <XRRGetOutputInfo@plt+0x1fc>
   11b84:	bl	11658 <strcmp@plt>
   11b88:	cmp	r0, #0
   11b8c:	beq	141ac <XRRGetOutputInfo@plt+0x274c>
   11b90:	mov	r1, r6
   11b94:	ldr	r0, [pc, #196]	; 11c60 <XRRGetOutputInfo@plt+0x200>
   11b98:	bl	11658 <strcmp@plt>
   11b9c:	cmp	r0, #0
   11ba0:	beq	12084 <XRRGetOutputInfo@plt+0x624>
   11ba4:	mov	r1, r6
   11ba8:	ldr	r0, [pc, #180]	; 11c64 <XRRGetOutputInfo@plt+0x204>
   11bac:	bl	11658 <strcmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	beq	12094 <XRRGetOutputInfo@plt+0x634>
   11bb8:	mov	r1, r6
   11bbc:	ldr	r0, [pc, #164]	; 11c68 <XRRGetOutputInfo@plt+0x208>
   11bc0:	bl	11658 <strcmp@plt>
   11bc4:	cmp	r0, #0
   11bc8:	beq	120a8 <XRRGetOutputInfo@plt+0x648>
   11bcc:	mov	r1, r6
   11bd0:	ldr	r0, [pc, #148]	; 11c6c <XRRGetOutputInfo@plt+0x20c>
   11bd4:	bl	11658 <strcmp@plt>
   11bd8:	cmp	r0, #0
   11bdc:	beq	121b4 <XRRGetOutputInfo@plt+0x754>
   11be0:	mov	r1, r6
   11be4:	ldr	r0, [pc, #132]	; 11c70 <XRRGetOutputInfo@plt+0x210>
   11be8:	bl	11658 <strcmp@plt>
   11bec:	cmp	r0, #0
   11bf0:	bne	120b4 <XRRGetOutputInfo@plt+0x654>
   11bf4:	add	r4, r4, #1
   11bf8:	cmp	sl, r4
   11bfc:	ble	15c1c <XRRGetOutputInfo@plt+0x41bc>
   11c00:	sub	r3, fp, #244	; 0xf4
   11c04:	sub	r2, fp, #248	; 0xf8
   11c08:	ldr	r1, [pc, #100]	; 11c74 <XRRGetOutputInfo@plt+0x214>
   11c0c:	ldr	r0, [r8, r4, lsl #2]
   11c10:	bl	118a4 <__isoc99_sscanf@plt>
   11c14:	cmp	r0, #2
   11c18:	beq	121a0 <XRRGetOutputInfo@plt+0x740>
   11c1c:	ldr	r0, [r8, r4, lsl #2]
   11c20:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   11c24:	subs	r3, r0, #0
   11c28:	str	r3, [fp, #-332]	; 0xfffffeb4
   11c2c:	blt	157e8 <XRRGetOutputInfo@plt+0x3d88>
   11c30:	mov	r3, #1
   11c34:	str	r3, [fp, #-316]	; 0xfffffec4
   11c38:	str	r3, [fp, #-268]	; 0xfffffef4
   11c3c:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   11c40:	andeq	r0, r0, r0
   11c44:	svclt	0x00f00000	; IMB
   11c48:	andeq	fp, r2, r8, ror #29
   11c4c:	andeq	sl, r1, r4, asr #6
   11c50:	andeq	sl, r1, r0, asr r3
   11c54:	andeq	sl, r1, ip, asr r3
   11c58:	andeq	sl, r1, ip, ror r3
   11c5c:	andeq	sl, r1, r4, lsl #7
   11c60:	strdeq	sl, [r1], -r0
   11c64:	strdeq	sl, [r1], -ip
   11c68:	andeq	sl, r1, r8, lsl #22
   11c6c:	andeq	sl, r1, r4, lsl fp
   11c70:	andeq	sl, r1, r0, lsr #22
   11c74:	andeq	sl, r1, ip, lsr #22
   11c78:	andeq	ip, r2, r8, lsr #4
   11c7c:	andeq	ip, r2, r8, lsl r2
   11c80:	andeq	ip, r2, r8, lsr r2
   11c84:			; <UNDEFINED> instruction: 0x0001b6bc
   11c88:	ldrdeq	fp, [r1], -r4
   11c8c:	strdeq	fp, [r1], -r4
   11c90:	strdeq	fp, [r1], -ip
   11c94:	andeq	sl, r1, r4, lsr #22
   11c98:	andeq	sl, r1, ip, asr fp
   11c9c:	andeq	fp, r1, ip, lsr r4
   11ca0:	andeq	fp, r1, r4, lsr #8
   11ca4:	ldrdeq	fp, [r1], -ip
   11ca8:	strdeq	fp, [r1], -r4
   11cac:	andeq	fp, r1, r0, lsr #4
   11cb0:	strdeq	fp, [r1], -r8
   11cb4:	andeq	sl, r1, r0, ror #22
   11cb8:	andeq	sl, r1, r8, ror #22
   11cbc:	andeq	sl, r1, r4, ror fp
   11cc0:	andeq	sl, r1, r8, ror fp
   11cc4:	andeq	sl, r1, r4, lsl #23
   11cc8:	andeq	sl, r1, r8, lsl #23
   11ccc:	andeq	sl, r1, ip, lsl #23
   11cd0:	andeq	ip, r2, r4, lsl #3
   11cd4:	muleq	r1, r8, fp
   11cd8:	andeq	fp, r1, r8, asr #8
   11cdc:	andeq	r9, r1, r8, asr #26
   11ce0:	andeq	fp, r1, r8, lsl #9
   11ce4:	ldrdeq	fp, [r1], -r0
   11ce8:	strdeq	sl, [r1], -r0
   11cec:	ldrdeq	sl, [r1], -ip
   11cf0:	strdeq	sl, [r1], -r8
   11cf4:	andeq	sl, r1, ip, lsr #2
   11cf8:	andeq	fp, r1, r0, asr #12
   11cfc:			; <UNDEFINED> instruction: 0x0001b4b8
   11d00:	muleq	r1, r4, r6
   11d04:	muleq	r1, ip, r6
   11d08:	muleq	r1, ip, r4
   11d0c:	andeq	ip, r2, r0, lsr #3
   11d10:	andeq	fp, r1, r4, lsr #9
   11d14:	andeq	sl, r1, ip, ror #21
   11d18:	andeq	r9, r1, r8, asr #27
   11d1c:	add	r4, r4, #1
   11d20:	cmp	sl, r4
   11d24:	ble	155a8 <XRRGetOutputInfo@plt+0x3b48>
   11d28:	ldr	r3, [r8, r4, lsl #2]
   11d2c:	str	r3, [fp, #-264]	; 0xfffffef8
   11d30:	add	r4, r4, #1
   11d34:	cmp	sl, r4
   11d38:	bgt	11b20 <XRRGetOutputInfo@plt+0xc0>
   11d3c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   11d40:	cmp	r3, #0
   11d44:	ldr	r3, [fp, #-308]	; 0xfffffecc
   11d48:	moveq	r3, #1
   11d4c:	str	r3, [fp, #-308]	; 0xfffffecc
   11d50:	ldr	r3, [pc, #-76]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11d54:	ldr	r3, [r3, #28]
   11d58:	cmp	r3, #0
   11d5c:	bne	12138 <XRRGetOutputInfo@plt+0x6d8>
   11d60:	ldr	r3, [fp, #-324]	; 0xfffffebc
   11d64:	cmp	r3, #0
   11d68:	bne	122b8 <XRRGetOutputInfo@plt+0x858>
   11d6c:	ldr	r0, [fp, #-264]	; 0xfffffef8
   11d70:	bl	117cc <XOpenDisplay@plt>
   11d74:	ldr	r3, [pc, #-112]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11d78:	cmp	r0, #0
   11d7c:	str	r0, [r3, #24]
   11d80:	beq	157f0 <XRRGetOutputInfo@plt+0x3d90>
   11d84:	ldr	r2, [pc, #-188]	; 11cd0 <XRRGetOutputInfo@plt+0x270>
   11d88:	str	r2, [fp, #-320]	; 0xfffffec0
   11d8c:	ldr	r3, [r2, #4]
   11d90:	cmp	r3, #0
   11d94:	ldrlt	r3, [r0, #132]	; 0x84
   11d98:	strlt	r3, [r2, #4]
   11d9c:	ldr	r3, [fp, #-320]	; 0xfffffec0
   11da0:	ldr	r2, [r0, #136]	; 0x88
   11da4:	ldr	r3, [r3, #4]
   11da8:	cmp	r2, r3
   11dac:	ble	1584c <XRRGetOutputInfo@plt+0x3dec>
   11db0:	ldr	r2, [r0, #140]	; 0x8c
   11db4:	add	r3, r3, r3, lsl #2
   11db8:	ldr	ip, [pc, #-180]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11dbc:	add	r3, r2, r3, lsl #4
   11dc0:	sub	r1, fp, #256	; 0x100
   11dc4:	ldr	r3, [r3, #8]
   11dc8:	sub	r2, fp, #252	; 0xfc
   11dcc:	str	r3, [ip, #40]	; 0x28
   11dd0:	bl	11688 <XRRQueryExtension@plt>
   11dd4:	cmp	r0, #0
   11dd8:	beq	1582c <XRRGetOutputInfo@plt+0x3dcc>
   11ddc:	ldr	r3, [pc, #-216]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11de0:	sub	r2, fp, #236	; 0xec
   11de4:	sub	r1, fp, #240	; 0xf0
   11de8:	ldr	r0, [r3, #24]
   11dec:	bl	11694 <XRRQueryVersion@plt>
   11df0:	cmp	r0, #0
   11df4:	beq	1582c <XRRGetOutputInfo@plt+0x3dcc>
   11df8:	ldr	r3, [fp, #-240]	; 0xffffff10
   11dfc:	cmp	r3, #1
   11e00:	ble	1215c <XRRGetOutputInfo@plt+0x6fc>
   11e04:	ldr	r2, [pc, #-256]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e08:	mov	r3, #1
   11e0c:	str	r3, [r2, #44]	; 0x2c
   11e10:	str	r3, [r2, #68]	; 0x44
   11e14:	str	r3, [r2, #172]	; 0xac
   11e18:	ldr	r2, [pc, #-276]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e1c:	mov	r3, #1
   11e20:	str	r3, [r2, #168]	; 0xa8
   11e24:	ldr	r3, [pc, #-288]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e28:	ldr	r2, [fp, #-276]	; 0xfffffeec
   11e2c:	ldr	r3, [r3, #44]	; 0x2c
   11e30:	cmp	r3, #0
   11e34:	moveq	r2, #0
   11e38:	cmp	r2, #0
   11e3c:	bne	14498 <XRRGetOutputInfo@plt+0x2a38>
   11e40:	ldr	r3, [pc, #-316]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e44:	ldr	r2, [fp, #-280]	; 0xfffffee8
   11e48:	ldr	r3, [r3, #44]	; 0x2c
   11e4c:	cmp	r3, #0
   11e50:	moveq	r2, #0
   11e54:	cmp	r2, #0
   11e58:	bne	145bc <XRRGetOutputInfo@plt+0x2b5c>
   11e5c:	ldr	r3, [fp, #-340]	; 0xfffffeac
   11e60:	cmp	r3, #0
   11e64:	beq	11ecc <XRRGetOutputInfo@plt+0x46c>
   11e68:	ldr	r3, [pc, #-356]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e6c:	ldr	r3, [r3, #172]	; 0xac
   11e70:	cmp	r3, #0
   11e74:	beq	15824 <XRRGetOutputInfo@plt+0x3dc4>
   11e78:	mov	r0, #1
   11e7c:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   11e80:	ldr	r2, [pc, #-380]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11e84:	ldr	r3, [r2, #172]	; 0xac
   11e88:	cmp	r3, #0
   11e8c:	beq	11e9c <XRRGetOutputInfo@plt+0x43c>
   11e90:	ldr	r3, [r2, #20]
   11e94:	cmp	r3, #0
   11e98:	beq	12c74 <XRRGetOutputInfo@plt+0x1214>
   11e9c:	ldr	r0, [pc, #-552]	; 11c7c <XRRGetOutputInfo@plt+0x21c>
   11ea0:	bl	1789c <XRRGetOutputInfo@plt+0x5e3c>
   11ea4:	mov	r4, r0
   11ea8:	ldr	r0, [pc, #-568]	; 11c78 <XRRGetOutputInfo@plt+0x218>
   11eac:	bl	1789c <XRRGetOutputInfo@plt+0x5e3c>
   11eb0:	ldr	r3, [pc, #-428]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11eb4:	ldr	r1, [r4, #8]
   11eb8:	ldr	r3, [r3, #24]
   11ebc:	subs	r2, r0, #0
   11ec0:	mov	r0, r3
   11ec4:	ldrne	r2, [r2, #8]
   11ec8:	bl	11964 <XRRSetProviderOutputSource@plt>
   11ecc:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   11ed0:	cmp	r3, #0
   11ed4:	beq	11f3c <XRRGetOutputInfo@plt+0x4dc>
   11ed8:	ldr	r3, [pc, #-468]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11edc:	ldr	r3, [r3, #172]	; 0xac
   11ee0:	cmp	r3, #0
   11ee4:	beq	1581c <XRRGetOutputInfo@plt+0x3dbc>
   11ee8:	mov	r0, #1
   11eec:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   11ef0:	ldr	r2, [pc, #-492]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11ef4:	ldr	r3, [r2, #172]	; 0xac
   11ef8:	cmp	r3, #0
   11efc:	beq	11f0c <XRRGetOutputInfo@plt+0x4ac>
   11f00:	ldr	r3, [r2, #20]
   11f04:	cmp	r3, #0
   11f08:	beq	12c6c <XRRGetOutputInfo@plt+0x120c>
   11f0c:	ldr	r0, [pc, #-664]	; 11c7c <XRRGetOutputInfo@plt+0x21c>
   11f10:	bl	1789c <XRRGetOutputInfo@plt+0x5e3c>
   11f14:	mov	r4, r0
   11f18:	ldr	r0, [pc, #-672]	; 11c80 <XRRGetOutputInfo@plt+0x220>
   11f1c:	bl	1789c <XRRGetOutputInfo@plt+0x5e3c>
   11f20:	ldr	r3, [pc, #-540]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11f24:	ldr	r1, [r4, #8]
   11f28:	ldr	r3, [r3, #24]
   11f2c:	subs	r2, r0, #0
   11f30:	mov	r0, r3
   11f34:	ldrne	r2, [r2, #8]
   11f38:	bl	118bc <XRRSetProviderOffloadSink@plt>
   11f3c:	ldr	r3, [fp, #-312]	; 0xfffffec8
   11f40:	cmp	r3, #0
   11f44:	bne	122c4 <XRRGetOutputInfo@plt+0x864>
   11f48:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   11f4c:	cmp	r3, #0
   11f50:	bne	121c0 <XRRGetOutputInfo@plt+0x760>
   11f54:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   11f58:	cmp	r3, #0
   11f5c:	bne	127e8 <XRRGetOutputInfo@plt+0xd88>
   11f60:	ldr	r3, [fp, #-308]	; 0xfffffecc
   11f64:	cmp	r3, #0
   11f68:	beq	11f90 <XRRGetOutputInfo@plt+0x530>
   11f6c:	ldr	r3, [pc, #-616]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11f70:	ldr	r2, [fp, #-352]	; 0xfffffea0
   11f74:	ldr	r3, [r3, #44]	; 0x2c
   11f78:	eor	r2, r2, #1
   11f7c:	cmp	r3, #0
   11f80:	andne	r3, r2, #1
   11f84:	moveq	r3, #0
   11f88:	cmp	r3, #0
   11f8c:	bne	127e8 <XRRGetOutputInfo@plt+0xd88>
   11f90:	ldr	r3, [fp, #-368]	; 0xfffffe90
   11f94:	cmp	r3, #0
   11f98:	beq	12700 <XRRGetOutputInfo@plt+0xca0>
   11f9c:	ldr	r3, [pc, #-664]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11fa0:	ldr	r4, [r3, #172]	; 0xac
   11fa4:	cmp	r4, #0
   11fa8:	beq	14ce0 <XRRGetOutputInfo@plt+0x3280>
   11fac:	ldr	r0, [fp, #-344]	; 0xfffffea8
   11fb0:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   11fb4:	ldr	r2, [pc, #-688]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11fb8:	ldr	r3, [r2, #172]	; 0xac
   11fbc:	cmp	r3, #0
   11fc0:	beq	126f0 <XRRGetOutputInfo@plt+0xc90>
   11fc4:	ldr	r3, [r2, #20]
   11fc8:	cmp	r3, #0
   11fcc:	beq	126ec <XRRGetOutputInfo@plt+0xc8c>
   11fd0:	ldr	r3, [pc, #-716]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11fd4:	ldr	r1, [pc, #-856]	; 11c84 <XRRGetOutputInfo@plt+0x224>
   11fd8:	mov	r0, #1
   11fdc:	ldr	r2, [r3, #16]
   11fe0:	bl	11910 <__printf_chk@plt>
   11fe4:	ldr	sl, [pc, #-868]	; 11c88 <XRRGetOutputInfo@plt+0x228>
   11fe8:	ldr	r9, [pc, #-788]	; 11cdc <XRRGetOutputInfo@plt+0x27c>
   11fec:	mov	r6, #0
   11ff0:	ldr	r3, [pc, #-748]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   11ff4:	ldr	r3, [r3, #16]
   11ff8:	cmp	r3, r6
   11ffc:	ble	12700 <XRRGetOutputInfo@plt+0xca0>
   12000:	ldr	r2, [pc, #-764]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12004:	mov	r3, #20
   12008:	mov	r0, #1
   1200c:	ldr	r1, [r2, #20]
   12010:	mov	r2, r6
   12014:	mla	r3, r3, r6, r1
   12018:	mov	r1, sl
   1201c:	ldr	r7, [pc, #-920]	; 11c8c <XRRGetOutputInfo@plt+0x22c>
   12020:	ldr	r5, [r3, #16]
   12024:	mov	r4, #0
   12028:	mov	r8, #1
   1202c:	ldr	ip, [r5]
   12030:	str	ip, [sp]
   12034:	ldr	r3, [r3, #8]
   12038:	bl	11910 <__printf_chk@plt>
   1203c:	lsl	r3, r8, r4
   12040:	ldr	r2, [r5]
   12044:	tst	r3, r2
   12048:	bne	15074 <XRRGetOutputInfo@plt+0x3614>
   1204c:	add	r4, r4, #1
   12050:	cmp	r4, #4
   12054:	bne	1203c <XRRGetOutputInfo@plt+0x5dc>
   12058:	ldr	r3, [r5, #20]
   1205c:	ldr	r1, [pc, #-980]	; 11c90 <XRRGetOutputInfo@plt+0x230>
   12060:	str	r3, [sp, #4]
   12064:	ldr	r3, [r5, #24]
   12068:	mov	r0, #1
   1206c:	str	r3, [sp]
   12070:	ldr	r3, [r5, #12]
   12074:	ldr	r2, [r5, #4]
   12078:	bl	11910 <__printf_chk@plt>
   1207c:	add	r6, r6, #1
   12080:	b	11ff0 <XRRGetOutputInfo@plt+0x590>
   12084:	ldr	r2, [pc, #-896]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12088:	mov	r3, #1
   1208c:	str	r3, [r2, #28]
   12090:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   12094:	ldr	r2, [pc, #-912]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12098:	mov	r3, #1
   1209c:	str	r3, [r2, #32]
   120a0:	str	r3, [r2, #28]
   120a4:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   120a8:	ldr	r3, [pc, #-992]	; 11cd0 <XRRGetOutputInfo@plt+0x270>
   120ac:	str	r0, [r3, #12]
   120b0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   120b4:	mov	r1, r6
   120b8:	ldr	r0, [pc, #-1068]	; 11c94 <XRRGetOutputInfo@plt+0x234>
   120bc:	bl	11658 <strcmp@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	11bf4 <XRRGetOutputInfo@plt+0x194>
   120c8:	mov	r1, r6
   120cc:	ldr	r0, [pc, #-1084]	; 11c98 <XRRGetOutputInfo@plt+0x238>
   120d0:	bl	11658 <strcmp@plt>
   120d4:	cmp	r0, #0
   120d8:	bne	12730 <XRRGetOutputInfo@plt+0xcd0>
   120dc:	add	r4, r4, #1
   120e0:	cmp	sl, r4
   120e4:	ble	1586c <XRRGetOutputInfo@plt+0x3e0c>
   120e8:	ldr	r5, [r8, r4, lsl #2]
   120ec:	sub	r1, fp, #204	; 0xcc
   120f0:	mov	r0, r5
   120f4:	bl	11928 <strtod@plt>
   120f8:	ldr	r3, [fp, #-204]	; 0xffffff34
   120fc:	cmp	r5, r3
   12100:	vmov.f64	d8, d0
   12104:	beq	15c10 <XRRGetOutputInfo@plt+0x41b0>
   12108:	ldr	r2, [fp, #-272]	; 0xfffffef0
   1210c:	cmp	r2, #0
   12110:	beq	11c30 <XRRGetOutputInfo@plt+0x1d0>
   12114:	ldr	r3, [r2, #4]
   12118:	mov	r1, #1
   1211c:	orr	r3, r3, #128	; 0x80
   12120:	str	r1, [fp, #-312]	; 0xfffffec8
   12124:	vstr	d0, [r2, #72]	; 0x48
   12128:	str	r3, [r2, #4]
   1212c:	str	r1, [fp, #-316]	; 0xfffffec4
   12130:	str	r1, [fp, #-268]	; 0xfffffef4
   12134:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   12138:	ldr	r3, [fp, #-312]	; 0xfffffec8
   1213c:	ldr	r2, [fp, #-316]	; 0xfffffec4
   12140:	eor	r3, r3, #1
   12144:	ands	r3, r3, r2
   12148:	str	r3, [fp, #-308]	; 0xfffffecc
   1214c:	moveq	r3, #1
   12150:	strne	r3, [fp, #-352]	; 0xfffffea0
   12154:	streq	r3, [fp, #-308]	; 0xfffffecc
   12158:	b	11d60 <XRRGetOutputInfo@plt+0x300>
   1215c:	bne	11e24 <XRRGetOutputInfo@plt+0x3c4>
   12160:	ldr	r2, [fp, #-236]	; 0xffffff14
   12164:	cmp	r2, #1
   12168:	ble	11e24 <XRRGetOutputInfo@plt+0x3c4>
   1216c:	ldr	r1, [pc, #-1128]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12170:	cmp	r2, #2
   12174:	str	r3, [r1, #44]	; 0x2c
   12178:	ble	11e24 <XRRGetOutputInfo@plt+0x3c4>
   1217c:	ldr	r1, [pc, #-1144]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12180:	cmp	r2, #3
   12184:	str	r3, [r1, #68]	; 0x44
   12188:	ble	11e24 <XRRGetOutputInfo@plt+0x3c4>
   1218c:	cmp	r2, #4
   12190:	ldr	r2, [pc, #-1164]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12194:	str	r3, [r2, #172]	; 0xac
   12198:	bgt	11e18 <XRRGetOutputInfo@plt+0x3b8>
   1219c:	b	11e24 <XRRGetOutputInfo@plt+0x3c4>
   121a0:	mov	r3, #1
   121a4:	str	r3, [fp, #-364]	; 0xfffffe94
   121a8:	str	r3, [fp, #-316]	; 0xfffffec4
   121ac:	str	r3, [fp, #-268]	; 0xfffffef4
   121b0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   121b4:	mov	r3, #1
   121b8:	str	r3, [fp, #-344]	; 0xfffffea8
   121bc:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   121c0:	ldr	r3, [pc, #-1212]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   121c4:	ldr	r3, [r3, #168]	; 0xa8
   121c8:	cmp	r3, #0
   121cc:	beq	12720 <XRRGetOutputInfo@plt+0xcc0>
   121d0:	mov	r0, #1
   121d4:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   121d8:	ldr	r2, [pc, #-1236]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   121dc:	ldr	r3, [r2, #168]	; 0xa8
   121e0:	cmp	r3, #0
   121e4:	beq	121f4 <XRRGetOutputInfo@plt+0x794>
   121e8:	ldr	r3, [r2, #64]	; 0x40
   121ec:	cmp	r3, #0
   121f0:	beq	15184 <XRRGetOutputInfo@plt+0x3724>
   121f4:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   121f8:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   121fc:	ldr	r3, [pc, #-1272]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12200:	ldr	r5, [r3, #76]	; 0x4c
   12204:	cmp	r5, #0
   12208:	beq	122a0 <XRRGetOutputInfo@plt+0x840>
   1220c:	ldr	r7, [pc, #-1400]	; 11c9c <XRRGetOutputInfo@plt+0x23c>
   12210:	ldr	r6, [pc, #-1400]	; 11ca0 <XRRGetOutputInfo@plt+0x240>
   12214:	ldr	r4, [r5, #8]
   12218:	ldr	r3, [pc, #-1300]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   1221c:	cmp	r4, #0
   12220:	ldr	r1, [r5, #4]
   12224:	ldr	r0, [r3, #24]
   12228:	bne	13518 <XRRGetOutputInfo@plt+0x1ab8>
   1222c:	mov	r2, #1
   12230:	bl	11898 <XInternAtom@plt>
   12234:	subs	r2, r0, #0
   12238:	beq	12284 <XRRGetOutputInfo@plt+0x824>
   1223c:	ldr	r3, [pc, #-1336]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12240:	ldr	r3, [r3, #64]	; 0x40
   12244:	cmp	r3, #0
   12248:	beq	136a0 <XRRGetOutputInfo@plt+0x1c40>
   1224c:	ldr	r0, [r3]
   12250:	cmp	r0, #0
   12254:	ble	135e0 <XRRGetOutputInfo@plt+0x1b80>
   12258:	ldr	r3, [r3, #4]
   1225c:	ldr	r1, [r3]
   12260:	cmp	r1, r2
   12264:	bne	12278 <XRRGetOutputInfo@plt+0x818>
   12268:	b	135e4 <XRRGetOutputInfo@plt+0x1b84>
   1226c:	ldr	r1, [r3, #44]!	; 0x2c
   12270:	cmp	r1, r2
   12274:	beq	135e4 <XRRGetOutputInfo@plt+0x1b84>
   12278:	add	r4, r4, #1
   1227c:	cmp	r0, r4
   12280:	bne	1226c <XRRGetOutputInfo@plt+0x80c>
   12284:	ldr	r2, [r5, #4]
   12288:	mov	r1, r6
   1228c:	mov	r0, #1
   12290:	bl	11910 <__printf_chk@plt>
   12294:	ldr	r5, [r5]
   12298:	cmp	r5, #0
   1229c:	bne	12214 <XRRGetOutputInfo@plt+0x7b4>
   122a0:	ldr	r3, [pc, #-1436]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   122a4:	mov	r1, #0
   122a8:	ldr	r0, [r3, #24]
   122ac:	bl	11904 <XSync@plt>
   122b0:	mov	r0, #0
   122b4:	bl	11814 <exit@plt>
   122b8:	ldr	r0, [pc, #-1564]	; 11ca4 <XRRGetOutputInfo@plt+0x244>
   122bc:	bl	117a8 <puts@plt>
   122c0:	b	11d6c <XRRGetOutputInfo@plt+0x30c>
   122c4:	mov	r0, #1
   122c8:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   122cc:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   122d0:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   122d4:	ldr	r7, [fp, #-312]	; 0xfffffec8
   122d8:	mov	r6, #1
   122dc:	ldr	r3, [pc, #-1496]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   122e0:	ldr	r4, [r3]
   122e4:	cmp	r4, #0
   122e8:	beq	13734 <XRRGetOutputInfo@plt+0x1cd4>
   122ec:	mov	r9, #0
   122f0:	str	r9, [fp, #-264]	; 0xfffffef8
   122f4:	ldr	r5, [r4, #4]
   122f8:	tst	r5, #4
   122fc:	beq	12388 <XRRGetOutputInfo@plt+0x928>
   12300:	ldr	sl, [r4, #80]	; 0x50
   12304:	cmp	sl, #0
   12308:	beq	12388 <XRRGetOutputInfo@plt+0x928>
   1230c:	ldr	r8, [r4, #104]	; 0x68
   12310:	sub	r0, fp, #204	; 0xcc
   12314:	str	r8, [fp, #-200]	; 0xffffff38
   12318:	str	r6, [fp, #-204]	; 0xffffff34
   1231c:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   12320:	cmp	r0, #0
   12324:	beq	15348 <XRRGetOutputInfo@plt+0x38e8>
   12328:	ldr	r3, [r0, #80]	; 0x50
   1232c:	cmp	r3, #0
   12330:	beq	12530 <XRRGetOutputInfo@plt+0xad0>
   12334:	ldr	r3, [r0, #4]
   12338:	and	r3, r3, #12
   1233c:	cmp	r3, #4
   12340:	streq	r7, [fp, #-264]	; 0xfffffef8
   12344:	beq	12388 <XRRGetOutputInfo@plt+0x928>
   12348:	ldr	r3, [r4, #100]	; 0x64
   1234c:	cmp	r3, #4
   12350:	ldrls	pc, [pc, r3, lsl #2]
   12354:	b	1237c <XRRGetOutputInfo@plt+0x91c>
   12358:	andeq	r2, r1, r0, asr #8
   1235c:			; <UNDEFINED> instruction: 0x000123b0
   12360:	andeq	r2, r1, r4, lsl #9
   12364:	strdeq	r2, [r1], -r8
   12368:	andeq	r2, r1, ip, ror #6
   1236c:	ldr	r3, [r0, #108]	; 0x6c
   12370:	str	r3, [r4, #108]	; 0x6c
   12374:	ldr	r3, [r0, #112]	; 0x70
   12378:	str	r3, [r4, #112]	; 0x70
   1237c:	mov	r9, r7
   12380:	orr	r5, r5, #8
   12384:	str	r5, [r4, #4]
   12388:	ldr	r4, [r4]
   1238c:	cmp	r4, #0
   12390:	bne	122f4 <XRRGetOutputInfo@plt+0x894>
   12394:	ldr	r3, [fp, #-264]	; 0xfffffef8
   12398:	cmp	r3, #0
   1239c:	beq	12548 <XRRGetOutputInfo@plt+0xae8>
   123a0:	cmp	r9, #0
   123a4:	bne	122dc <XRRGetOutputInfo@plt+0x87c>
   123a8:	ldr	r0, [pc, #-1800]	; 11ca8 <XRRGetOutputInfo@plt+0x248>
   123ac:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   123b0:	ldr	r3, [r0, #112]	; 0x70
   123b4:	str	r3, [r4, #112]	; 0x70
   123b8:	ldrh	r3, [r0, #116]	; 0x74
   123bc:	ldr	r2, [r0, #108]	; 0x6c
   123c0:	ldr	r1, [r0, #80]	; 0x50
   123c4:	and	r3, r3, #15
   123c8:	sub	r3, r3, #1
   123cc:	cmp	r3, #7
   123d0:	ldrls	pc, [pc, r3, lsl #2]
   123d4:	b	124d0 <XRRGetOutputInfo@plt+0xa70>
   123d8:	andeq	r2, r1, r8, ror #9
   123dc:	andeq	r2, r1, r8, asr #9
   123e0:	ldrdeq	r2, [r1], -r0
   123e4:	andeq	r2, r1, r8, ror #9
   123e8:	ldrdeq	r2, [r1], -r0
   123ec:	ldrdeq	r2, [r1], -r0
   123f0:	ldrdeq	r2, [r1], -r0
   123f4:	andeq	r2, r1, r8, asr #9
   123f8:	ldr	r3, [r0, #108]	; 0x6c
   123fc:	str	r3, [r4, #108]	; 0x6c
   12400:	ldrh	r3, [r0, #116]	; 0x74
   12404:	ldr	r2, [r0, #112]	; 0x70
   12408:	ldr	r1, [r0, #80]	; 0x50
   1240c:	and	r3, r3, #15
   12410:	sub	r3, r3, #1
   12414:	cmp	r3, #7
   12418:	ldrls	pc, [pc, r3, lsl #2]
   1241c:	b	124e0 <XRRGetOutputInfo@plt+0xa80>
   12420:	strdeq	r2, [r1], -r4
   12424:	ldrdeq	r2, [r1], -r8
   12428:	andeq	r2, r1, r0, ror #9
   1242c:	strdeq	r2, [r1], -r4
   12430:	andeq	r2, r1, r0, ror #9
   12434:	andeq	r2, r1, r0, ror #9
   12438:	andeq	r2, r1, r0, ror #9
   1243c:	ldrdeq	r2, [r1], -r8
   12440:	ldrh	r3, [r4, #116]	; 0x74
   12444:	ldr	r2, [r0, #112]	; 0x70
   12448:	and	r3, r3, #15
   1244c:	sub	r3, r3, #1
   12450:	str	r2, [r4, #112]	; 0x70
   12454:	ldr	r2, [r0, #108]	; 0x6c
   12458:	cmp	r3, #7
   1245c:	ldrls	pc, [pc, r3, lsl #2]
   12460:	b	124d0 <XRRGetOutputInfo@plt+0xa70>
   12464:	andeq	r2, r1, ip, lsl #10
   12468:	andeq	r2, r1, r0, lsl #10
   1246c:	ldrdeq	r2, [r1], -r0
   12470:	andeq	r2, r1, ip, lsl #10
   12474:	ldrdeq	r2, [r1], -r0
   12478:	ldrdeq	r2, [r1], -r0
   1247c:	ldrdeq	r2, [r1], -r0
   12480:	andeq	r2, r1, r0, lsl #10
   12484:	ldrh	r3, [r4, #116]	; 0x74
   12488:	ldr	r2, [r0, #108]	; 0x6c
   1248c:	and	r3, r3, #15
   12490:	sub	r3, r3, #1
   12494:	str	r2, [r4, #108]	; 0x6c
   12498:	ldr	r2, [r0, #112]	; 0x70
   1249c:	cmp	r3, #7
   124a0:	ldrls	pc, [pc, r3, lsl #2]
   124a4:	b	124e0 <XRRGetOutputInfo@plt+0xa80>
   124a8:	andeq	r2, r1, r4, lsr #10
   124ac:	andeq	r2, r1, r8, lsl r5
   124b0:	andeq	r2, r1, r0, ror #9
   124b4:	andeq	r2, r1, r4, lsr #10
   124b8:	andeq	r2, r1, r0, ror #9
   124bc:	andeq	r2, r1, r0, ror #9
   124c0:	andeq	r2, r1, r0, ror #9
   124c4:	andeq	r2, r1, r8, lsl r5
   124c8:	ldr	r3, [r1, #8]
   124cc:	add	r2, r2, r3
   124d0:	str	r2, [r4, #108]	; 0x6c
   124d4:	b	1237c <XRRGetOutputInfo@plt+0x91c>
   124d8:	ldr	r3, [r1, #4]
   124dc:	add	r2, r2, r3
   124e0:	str	r2, [r4, #112]	; 0x70
   124e4:	b	1237c <XRRGetOutputInfo@plt+0x91c>
   124e8:	ldr	r3, [r1, #4]
   124ec:	add	r2, r2, r3
   124f0:	b	124d0 <XRRGetOutputInfo@plt+0xa70>
   124f4:	ldr	r3, [r1, #8]
   124f8:	add	r2, r2, r3
   124fc:	b	124e0 <XRRGetOutputInfo@plt+0xa80>
   12500:	ldr	r3, [sl, #8]
   12504:	sub	r2, r2, r3
   12508:	b	124d0 <XRRGetOutputInfo@plt+0xa70>
   1250c:	ldr	r3, [sl, #4]
   12510:	sub	r2, r2, r3
   12514:	b	124d0 <XRRGetOutputInfo@plt+0xa70>
   12518:	ldr	r3, [sl, #4]
   1251c:	sub	r2, r2, r3
   12520:	b	124e0 <XRRGetOutputInfo@plt+0xa80>
   12524:	ldr	r3, [sl, #8]
   12528:	sub	r2, r2, r3
   1252c:	b	124e0 <XRRGetOutputInfo@plt+0xa80>
   12530:	orr	r5, r5, #8
   12534:	str	r5, [r4, #4]
   12538:	str	r3, [r4, #108]	; 0x6c
   1253c:	str	r3, [r4, #112]	; 0x70
   12540:	mov	r9, r7
   12544:	b	12388 <XRRGetOutputInfo@plt+0x928>
   12548:	ldr	r3, [pc, #-2116]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   1254c:	ldr	r4, [r3]
   12550:	ldr	r5, [r3, #92]	; 0x5c
   12554:	cmp	r4, #0
   12558:	beq	1373c <XRRGetOutputInfo@plt+0x1cdc>
   1255c:	mov	r2, #32768	; 0x8000
   12560:	mov	r1, r2
   12564:	mov	r3, r4
   12568:	ldr	r0, [r3, #80]	; 0x50
   1256c:	cmp	r0, #0
   12570:	beq	1258c <XRRGetOutputInfo@plt+0xb2c>
   12574:	ldr	ip, [r3, #108]	; 0x6c
   12578:	ldr	r0, [r3, #112]	; 0x70
   1257c:	cmp	r1, ip
   12580:	movge	r1, ip
   12584:	cmp	r2, r0
   12588:	movge	r2, r0
   1258c:	ldr	r3, [r3]
   12590:	cmp	r3, #0
   12594:	bne	12568 <XRRGetOutputInfo@plt+0xb08>
   12598:	orrs	r3, r1, r2
   1259c:	bne	14bb4 <XRRGetOutputInfo@plt+0x3154>
   125a0:	cmp	r5, #0
   125a4:	beq	125bc <XRRGetOutputInfo@plt+0xb5c>
   125a8:	ldr	r3, [pc, #-2212]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   125ac:	ldr	r5, [fp, #-312]	; 0xfffffec8
   125b0:	ldr	r3, [r3, #88]	; 0x58
   125b4:	cmp	r3, #0
   125b8:	moveq	r5, #0
   125bc:	ldr	r6, [pc, #-2328]	; 11cac <XRRGetOutputInfo@plt+0x24c>
   125c0:	b	12628 <XRRGetOutputInfo@plt+0xbc8>
   125c4:	ldr	r7, [pc, #-2240]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   125c8:	add	r2, r3, ip
   125cc:	ldr	r1, [r7, #92]	; 0x5c
   125d0:	cmp	r2, r1
   125d4:	ldr	r2, [r7, #88]	; 0x58
   125d8:	bgt	125e8 <XRRGetOutputInfo@plt+0xb88>
   125dc:	add	r7, r0, lr
   125e0:	cmp	r7, r2
   125e4:	ble	1261c <XRRGetOutputInfo@plt+0xbbc>
   125e8:	ldr	r8, [fp, #-204]	; 0xffffff34
   125ec:	ldr	r7, [fp, #-200]	; 0xffffff38
   125f0:	add	r3, r3, r8
   125f4:	add	r0, r0, r7
   125f8:	sub	ip, ip, r8
   125fc:	sub	lr, lr, r7
   12600:	str	r0, [sp, #12]
   12604:	str	r3, [sp, #8]
   12608:	str	ip, [sp]
   1260c:	str	lr, [sp, #4]
   12610:	mov	r0, r6
   12614:	ldr	r3, [r4, #16]
   12618:	bl	175cc <XRRGetOutputInfo@plt+0x5b6c>
   1261c:	ldr	r4, [r4]
   12620:	cmp	r4, #0
   12624:	beq	13758 <XRRGetOutputInfo@plt+0x1cf8>
   12628:	ldr	r0, [r4, #80]	; 0x50
   1262c:	cmp	r0, #0
   12630:	beq	1261c <XRRGetOutputInfo@plt+0xbbc>
   12634:	sub	r3, fp, #204	; 0xcc
   12638:	add	r2, r4, #184	; 0xb8
   1263c:	ldrh	r1, [r4, #116]	; 0x74
   12640:	bl	1824c <XRRGetOutputInfo@plt+0x67ec>
   12644:	cmp	r5, #0
   12648:	ldr	r3, [r4, #108]	; 0x6c
   1264c:	ldr	r0, [r4, #112]	; 0x70
   12650:	ldr	ip, [fp, #-196]	; 0xffffff3c
   12654:	ldr	lr, [fp, #-192]	; 0xffffff40
   12658:	bne	125c4 <XRRGetOutputInfo@plt+0xb64>
   1265c:	ldr	r1, [pc, #-2392]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12660:	add	r3, r3, ip
   12664:	add	r0, r0, lr
   12668:	ldr	r2, [r1, #92]	; 0x5c
   1266c:	cmp	r3, r2
   12670:	ldr	r2, [pc, #-2412]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12674:	strgt	r3, [r1, #92]	; 0x5c
   12678:	ldr	r3, [r2, #88]	; 0x58
   1267c:	cmp	r0, r3
   12680:	ldr	r3, [r4, #4]
   12684:	strgt	r0, [r2, #88]	; 0x58
   12688:	tst	r3, #1024	; 0x400
   1268c:	addne	r3, r4, #120	; 0x78
   12690:	bne	126ac <XRRGetOutputInfo@plt+0xc4c>
   12694:	ldr	r3, [r4, #48]	; 0x30
   12698:	cmp	r3, #0
   1269c:	beq	1261c <XRRGetOutputInfo@plt+0xbbc>
   126a0:	ldr	r3, [r3, #28]
   126a4:	cmp	r3, #0
   126a8:	beq	1261c <XRRGetOutputInfo@plt+0xbbc>
   126ac:	ldr	ip, [pc, #-2472]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   126b0:	ldr	r2, [r3, #4]
   126b4:	ldr	r0, [r3, #12]
   126b8:	ldr	r1, [ip, #92]	; 0x5c
   126bc:	add	r2, r2, r0
   126c0:	cmp	r2, r1
   126c4:	ldr	r1, [pc, #-2496]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   126c8:	strhi	r2, [ip, #92]	; 0x5c
   126cc:	ldr	r2, [r3, #8]
   126d0:	ldr	r3, [r3, #16]
   126d4:	ldr	r1, [r1, #88]	; 0x58
   126d8:	add	r3, r2, r3
   126dc:	cmp	r3, r1
   126e0:	ldrhi	r2, [pc, #-2524]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   126e4:	strhi	r3, [r2, #88]	; 0x58
   126e8:	b	1261c <XRRGetOutputInfo@plt+0xbbc>
   126ec:	bl	17e4c <XRRGetOutputInfo@plt+0x63ec>
   126f0:	ldr	r3, [pc, #-2540]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   126f4:	ldr	r3, [r3, #20]
   126f8:	cmp	r3, #0
   126fc:	bne	11fd0 <XRRGetOutputInfo@plt+0x570>
   12700:	ldr	r3, [fp, #-376]	; 0xfffffe88
   12704:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   12708:	orrs	r3, r3, r2
   1270c:	beq	1494c <XRRGetOutputInfo@plt+0x2eec>
   12710:	ldr	r4, [pc, #-2572]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12714:	ldr	r3, [r4, #168]	; 0xa8
   12718:	cmp	r3, #0
   1271c:	bne	14ee8 <XRRGetOutputInfo@plt+0x3488>
   12720:	ldr	r0, [pc, #-2680]	; 11cb0 <XRRGetOutputInfo@plt+0x250>
   12724:	bl	117a8 <puts@plt>
   12728:	mov	r0, #0
   1272c:	bl	11814 <exit@plt>
   12730:	mov	r1, r6
   12734:	ldr	r0, [pc, #-2696]	; 11cb4 <XRRGetOutputInfo@plt+0x254>
   12738:	bl	11658 <strcmp@plt>
   1273c:	cmp	r0, #0
   12740:	beq	120dc <XRRGetOutputInfo@plt+0x67c>
   12744:	mov	r1, r6
   12748:	ldr	r0, [pc, #-2712]	; 11cb8 <XRRGetOutputInfo@plt+0x258>
   1274c:	bl	11658 <strcmp@plt>
   12750:	cmp	r0, #0
   12754:	beq	120dc <XRRGetOutputInfo@plt+0x67c>
   12758:	mov	r1, r6
   1275c:	ldr	r0, [pc, #-2728]	; 11cbc <XRRGetOutputInfo@plt+0x25c>
   12760:	bl	11658 <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	beq	153bc <XRRGetOutputInfo@plt+0x395c>
   1276c:	mov	r1, r6
   12770:	ldr	r0, [pc, #-2744]	; 11cc0 <XRRGetOutputInfo@plt+0x260>
   12774:	bl	11658 <strcmp@plt>
   12778:	cmp	r0, #0
   1277c:	beq	153bc <XRRGetOutputInfo@plt+0x395c>
   12780:	mov	r1, r6
   12784:	ldr	r0, [pc, #-2760]	; 11cc4 <XRRGetOutputInfo@plt+0x264>
   12788:	bl	11658 <strcmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	157a8 <XRRGetOutputInfo@plt+0x3d48>
   12794:	mov	r1, r6
   12798:	ldr	r0, [pc, #-2776]	; 11cc8 <XRRGetOutputInfo@plt+0x268>
   1279c:	bl	11658 <strcmp@plt>
   127a0:	cmp	r0, #0
   127a4:	beq	15784 <XRRGetOutputInfo@plt+0x3d24>
   127a8:	mov	r1, r6
   127ac:	ldr	r0, [pc, #-2792]	; 11ccc <XRRGetOutputInfo@plt+0x26c>
   127b0:	bl	11658 <strcmp@plt>
   127b4:	cmp	r0, #0
   127b8:	bne	15690 <XRRGetOutputInfo@plt+0x3c30>
   127bc:	add	r4, r4, #1
   127c0:	cmp	sl, r4
   127c4:	ble	158c4 <XRRGetOutputInfo@plt+0x3e64>
   127c8:	ldr	r0, [r8, r4, lsl #2]
   127cc:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   127d0:	ldr	r3, [pc, #-2824]	; 11cd0 <XRRGetOutputInfo@plt+0x270>
   127d4:	cmp	r0, #0
   127d8:	str	r0, [r3, #4]
   127dc:	bge	11d30 <XRRGetOutputInfo@plt+0x2d0>
   127e0:	ldr	r0, [pc, #-2836]	; 11cd4 <XRRGetOutputInfo@plt+0x274>
   127e4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   127e8:	ldr	r0, [fp, #-344]	; 0xfffffea8
   127ec:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   127f0:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   127f4:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   127f8:	ldr	ip, [pc, #-2804]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   127fc:	ldr	r3, [fp, #-320]	; 0xfffffec0
   12800:	mov	r4, ip
   12804:	ldr	r1, [ip, #24]
   12808:	ldr	r2, [r3, #4]
   1280c:	mov	r3, #80	; 0x50
   12810:	ldr	r0, [r1, #140]	; 0x8c
   12814:	ldr	r1, [ip, #56]	; 0x38
   12818:	mla	r3, r3, r2, r0
   1281c:	str	r1, [sp, #16]
   12820:	ldr	r1, [ip, #60]	; 0x3c
   12824:	str	r1, [sp, #12]
   12828:	ldr	r0, [r3, #16]
   1282c:	ldr	r1, [pc, #-2908]	; 11cd8 <XRRGetOutputInfo@plt+0x278>
   12830:	str	r0, [sp, #8]
   12834:	ldr	r3, [r3, #12]
   12838:	mov	r0, #1
   1283c:	str	r3, [sp, #4]
   12840:	ldr	r3, [ip, #48]	; 0x30
   12844:	str	r3, [sp]
   12848:	ldr	r3, [ip, #52]	; 0x34
   1284c:	bl	11910 <__printf_chk@plt>
   12850:	ldr	r9, [r4]
   12854:	cmp	r9, #0
   12858:	beq	12c0c <XRRGetOutputInfo@plt+0x11ac>
   1285c:	ldr	r3, [r9, #48]	; 0x30
   12860:	ldr	r8, [r9, #28]
   12864:	cmp	r3, #0
   12868:	str	r3, [fp, #-268]	; 0xfffffef4
   1286c:	ldrne	r3, [r3, #20]
   12870:	ldreq	r3, [fp, #-268]	; 0xfffffef4
   12874:	ldr	r5, [r8, #28]
   12878:	str	r3, [fp, #-276]	; 0xfffffeec
   1287c:	ldr	r3, [r9, #80]	; 0x50
   12880:	cmp	r5, #0
   12884:	str	r3, [fp, #-264]	; 0xfffffef8
   12888:	ble	1372c <XRRGetOutputInfo@plt+0x1ccc>
   1288c:	ldr	r3, [r8, #32]
   12890:	str	r8, [fp, #-272]	; 0xfffffef0
   12894:	sub	sl, r3, #4
   12898:	sub	r3, fp, #204	; 0xcc
   1289c:	add	r5, sl, r5, lsl #2
   128a0:	mov	r8, sl
   128a4:	mov	r6, #0
   128a8:	mov	r4, #1
   128ac:	mov	r7, #2
   128b0:	mov	sl, r3
   128b4:	ldr	r2, [r8, #4]!
   128b8:	mov	r0, sl
   128bc:	str	r2, [fp, #-196]	; 0xffffff3c
   128c0:	str	r7, [fp, #-204]	; 0xffffff34
   128c4:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   128c8:	cmp	r0, #0
   128cc:	beq	128e8 <XRRGetOutputInfo@plt+0xe88>
   128d0:	ldr	r2, [r0, #20]
   128d4:	cmp	r6, #0
   128d8:	moveq	r6, #1
   128dc:	ldrh	r2, [r2, #36]	; 0x24
   128e0:	andne	r4, r4, r2
   128e4:	moveq	r4, r2
   128e8:	cmp	r5, r8
   128ec:	bne	128b4 <XRRGetOutputInfo@plt+0xe54>
   128f0:	ldr	r8, [fp, #-272]	; 0xfffffef0
   128f4:	ldrh	r3, [r8, #24]
   128f8:	ldr	ip, [pc, #-3108]	; 11cdc <XRRGetOutputInfo@plt+0x27c>
   128fc:	ldr	r2, [r8, #8]
   12900:	ldr	r1, [pc, #-3112]	; 11ce0 <XRRGetOutputInfo@plt+0x280>
   12904:	add	r3, ip, r3, lsl #2
   12908:	mov	r0, #1
   1290c:	ldr	r3, [r3, #176]	; 0xb0
   12910:	bl	11910 <__printf_chk@plt>
   12914:	ldr	r3, [r9, #248]	; 0xf8
   12918:	cmp	r3, #0
   1291c:	bne	13508 <XRRGetOutputInfo@plt+0x1aa8>
   12920:	ldr	r3, [fp, #-264]	; 0xfffffef8
   12924:	cmp	r3, #0
   12928:	beq	129e4 <XRRGetOutputInfo@plt+0xf84>
   1292c:	ldr	r0, [fp, #-276]	; 0xfffffeec
   12930:	cmp	r0, #0
   12934:	beq	13674 <XRRGetOutputInfo@plt+0x1c14>
   12938:	add	r1, r0, #8
   1293c:	ldm	r1, {r1, r2, r3}
   12940:	str	r1, [sp, #4]
   12944:	ldr	r1, [r0, #4]
   12948:	mov	r0, #1
   1294c:	str	r1, [sp]
   12950:	ldr	r1, [pc, #-3188]	; 11ce4 <XRRGetOutputInfo@plt+0x284>
   12954:	bl	11910 <__printf_chk@plt>
   12958:	ldr	r3, [pc, #-3156]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   1295c:	ldr	r3, [r3, #28]
   12960:	cmp	r3, #0
   12964:	bne	12c8c <XRRGetOutputInfo@plt+0x122c>
   12968:	ldrh	r2, [r9, #116]	; 0x74
   1296c:	cmp	r2, #1
   12970:	beq	12cbc <XRRGetOutputInfo@plt+0x125c>
   12974:	tst	r2, #15
   12978:	ldreq	r2, [pc, #-3224]	; 11ce8 <XRRGetOutputInfo@plt+0x288>
   1297c:	beq	129a0 <XRRGetOutputInfo@plt+0xf40>
   12980:	mov	r3, #0
   12984:	asr	r1, r2, r3
   12988:	tst	r1, #1
   1298c:	bne	14488 <XRRGetOutputInfo@plt+0x2a28>
   12990:	add	r3, r3, #1
   12994:	cmp	r3, #4
   12998:	bne	12984 <XRRGetOutputInfo@plt+0xf24>
   1299c:	ldr	r2, [pc, #-3256]	; 11cec <XRRGetOutputInfo@plt+0x28c>
   129a0:	ldr	r1, [pc, #-3248]	; 11cf8 <XRRGetOutputInfo@plt+0x298>
   129a4:	mov	r0, #1
   129a8:	bl	11910 <__printf_chk@plt>
   129ac:	ldrh	r3, [r9, #116]	; 0x74
   129b0:	ands	r3, r3, #48	; 0x30
   129b4:	beq	129e4 <XRRGetOutputInfo@plt+0xf84>
   129b8:	cmp	r3, #32
   129bc:	beq	1446c <XRRGetOutputInfo@plt+0x2a0c>
   129c0:	cmp	r3, #48	; 0x30
   129c4:	beq	141a4 <XRRGetOutputInfo@plt+0x2744>
   129c8:	ldr	r1, [pc, #-3296]	; 11cf0 <XRRGetOutputInfo@plt+0x290>
   129cc:	cmp	r3, #16
   129d0:	ldr	r2, [pc, #-3300]	; 11cf4 <XRRGetOutputInfo@plt+0x294>
   129d4:	movne	r2, r1
   129d8:	ldr	r1, [pc, #-3304]	; 11cf8 <XRRGetOutputInfo@plt+0x298>
   129dc:	mov	r0, #1
   129e0:	bl	11910 <__printf_chk@plt>
   129e4:	cmp	r4, #1
   129e8:	bne	12cc4 <XRRGetOutputInfo@plt+0x1264>
   129ec:	ldr	r3, [pc, #-3304]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   129f0:	ldr	r3, [r3, #28]
   129f4:	cmp	r3, #0
   129f8:	bne	12cc4 <XRRGetOutputInfo@plt+0x1264>
   129fc:	ldr	r3, [fp, #-264]	; 0xfffffef8
   12a00:	cmp	r3, #0
   12a04:	beq	12a18 <XRRGetOutputInfo@plt+0xfb8>
   12a08:	ldrd	r2, [r8, #16]
   12a0c:	ldr	r1, [pc, #-3352]	; 11cfc <XRRGetOutputInfo@plt+0x29c>
   12a10:	mov	r0, #1
   12a14:	bl	11910 <__printf_chk@plt>
   12a18:	ldr	r3, [fp, #-268]	; 0xfffffef4
   12a1c:	cmp	r3, #0
   12a20:	beq	12a3c <XRRGetOutputInfo@plt+0xfdc>
   12a24:	ldr	r4, [r3, #28]
   12a28:	cmp	r4, #0
   12a2c:	beq	12a3c <XRRGetOutputInfo@plt+0xfdc>
   12a30:	ldr	r2, [r4, #12]
   12a34:	cmp	r2, #0
   12a38:	bne	136ac <XRRGetOutputInfo@plt+0x1c4c>
   12a3c:	mov	r0, #10
   12a40:	bl	118e0 <putchar@plt>
   12a44:	ldr	r3, [pc, #-3392]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12a48:	ldr	r3, [r3, #28]
   12a4c:	cmp	r3, #0
   12a50:	bne	12d5c <XRRGetOutputInfo@plt+0x12fc>
   12a54:	ldr	r3, [pc, #-3408]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12a58:	ldr	r3, [r3, #80]	; 0x50
   12a5c:	cmp	r3, #0
   12a60:	bne	12ff0 <XRRGetOutputInfo@plt+0x1590>
   12a64:	ldr	r4, [r8, #44]	; 0x2c
   12a68:	mov	r1, #4
   12a6c:	mov	r0, r4
   12a70:	bl	11628 <calloc@plt>
   12a74:	subs	r3, r0, #0
   12a78:	str	r3, [fp, #-276]	; 0xfffffeec
   12a7c:	beq	157d4 <XRRGetOutputInfo@plt+0x3d74>
   12a80:	cmp	r4, #0
   12a84:	movgt	sl, #0
   12a88:	ldrgt	r3, [fp, #-276]	; 0xfffffeec
   12a8c:	strgt	r9, [fp, #-280]	; 0xfffffee8
   12a90:	subgt	r7, r3, #4
   12a94:	bgt	12aac <XRRGetOutputInfo@plt+0x104c>
   12a98:	b	12bf8 <XRRGetOutputInfo@plt+0x1198>
   12a9c:	ldr	r3, [r8, #44]	; 0x2c
   12aa0:	add	sl, sl, #1
   12aa4:	cmp	r3, sl
   12aa8:	ble	12bf4 <XRRGetOutputInfo@plt+0x1194>
   12aac:	ldr	r5, [r7, #4]!
   12ab0:	cmp	r5, #0
   12ab4:	bne	12a9c <XRRGetOutputInfo@plt+0x103c>
   12ab8:	ldr	r3, [r8, #52]	; 0x34
   12abc:	sub	r2, fp, #204	; 0xcc
   12ac0:	mov	r1, #2
   12ac4:	ldr	r3, [r3, sl, lsl #2]
   12ac8:	mov	r0, r2
   12acc:	str	r3, [fp, #-196]	; 0xffffff3c
   12ad0:	str	r2, [fp, #-264]	; 0xfffffef8
   12ad4:	str	r1, [fp, #-204]	; 0xffffff34
   12ad8:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   12adc:	mov	r9, r0
   12ae0:	mov	r0, #32
   12ae4:	bl	118e0 <putchar@plt>
   12ae8:	ldr	r2, [r9, #44]	; 0x2c
   12aec:	ldr	r1, [pc, #-3572]	; 11d00 <XRRGetOutputInfo@plt+0x2a0>
   12af0:	mov	r0, #1
   12af4:	bl	11910 <__printf_chk@plt>
   12af8:	ldr	r3, [r8, #44]	; 0x2c
   12afc:	cmp	r3, sl
   12b00:	ble	12bdc <XRRGetOutputInfo@plt+0x117c>
   12b04:	mov	r6, r7
   12b08:	mov	r4, sl
   12b0c:	str	sl, [fp, #-268]	; 0xfffffef4
   12b10:	str	r7, [fp, #-272]	; 0xfffffef0
   12b14:	ldr	sl, [fp, #-264]	; 0xfffffef8
   12b18:	ldr	r7, [fp, #-280]	; 0xfffffee8
   12b1c:	b	12b88 <XRRGetOutputInfo@plt+0x1128>
   12b20:	ldr	r3, [r5, #52]	; 0x34
   12b24:	mov	r2, #1
   12b28:	orr	r3, r3, #-2147483648	; 0x80000000
   12b2c:	str	r2, [r6]
   12b30:	str	r3, [r5, #52]	; 0x34
   12b34:	mov	r0, r5
   12b38:	bl	171d0 <XRRGetOutputInfo@plt+0x5770>
   12b3c:	ldr	r1, [pc, #-3648]	; 11d04 <XRRGetOutputInfo@plt+0x2a4>
   12b40:	mov	r0, #1
   12b44:	vmov	r2, r3, d0
   12b48:	bl	11910 <__printf_chk@plt>
   12b4c:	ldr	r3, [r7, #80]	; 0x50
   12b50:	cmp	r3, r5
   12b54:	moveq	r0, #42	; 0x2a
   12b58:	movne	r0, #32
   12b5c:	bl	118e0 <putchar@plt>
   12b60:	ldr	r3, [r8, #48]	; 0x30
   12b64:	cmp	r3, r4
   12b68:	ble	12c7c <XRRGetOutputInfo@plt+0x121c>
   12b6c:	mov	r0, #43	; 0x2b
   12b70:	bl	118e0 <putchar@plt>
   12b74:	ldr	r3, [r8, #44]	; 0x2c
   12b78:	add	r4, r4, #1
   12b7c:	cmp	r3, r4
   12b80:	ble	12bd4 <XRRGetOutputInfo@plt+0x1174>
   12b84:	ldr	r5, [r6, #4]!
   12b88:	cmp	r5, #0
   12b8c:	bne	12b78 <XRRGetOutputInfo@plt+0x1118>
   12b90:	ldr	r3, [r8, #52]	; 0x34
   12b94:	mov	r2, #2
   12b98:	mov	r0, sl
   12b9c:	ldr	r3, [r3, r4, lsl #2]
   12ba0:	str	r2, [fp, #-204]	; 0xffffff34
   12ba4:	str	r3, [fp, #-196]	; 0xffffff3c
   12ba8:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   12bac:	mov	r5, r0
   12bb0:	ldr	r0, [r9, #44]	; 0x2c
   12bb4:	ldr	r1, [r5, #44]	; 0x2c
   12bb8:	bl	11658 <strcmp@plt>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12b20 <XRRGetOutputInfo@plt+0x10c0>
   12bc4:	ldr	r3, [r8, #44]	; 0x2c
   12bc8:	add	r4, r4, #1
   12bcc:	cmp	r3, r4
   12bd0:	bgt	12b84 <XRRGetOutputInfo@plt+0x1124>
   12bd4:	ldr	sl, [fp, #-268]	; 0xfffffef4
   12bd8:	ldr	r7, [fp, #-272]	; 0xfffffef0
   12bdc:	mov	r0, #10
   12be0:	bl	118e0 <putchar@plt>
   12be4:	ldr	r3, [r8, #44]	; 0x2c
   12be8:	add	sl, sl, #1
   12bec:	cmp	r3, sl
   12bf0:	bgt	12aac <XRRGetOutputInfo@plt+0x104c>
   12bf4:	ldr	r9, [fp, #-280]	; 0xfffffee8
   12bf8:	ldr	r0, [fp, #-276]	; 0xfffffeec
   12bfc:	bl	116a0 <free@plt>
   12c00:	ldr	r9, [r9]
   12c04:	cmp	r9, #0
   12c08:	bne	1285c <XRRGetOutputInfo@plt+0xdfc>
   12c0c:	ldr	r3, [pc, #-3848]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12c10:	ldr	r3, [r3, #36]	; 0x24
   12c14:	ldr	r2, [r3, #24]
   12c18:	cmp	r2, #0
   12c1c:	movgt	r4, #0
   12c20:	ldrgt	r5, [fp, #-328]	; 0xfffffeb8
   12c24:	ble	12c64 <XRRGetOutputInfo@plt+0x1204>
   12c28:	ldr	r0, [r3, #28]
   12c2c:	add	r0, r0, r4
   12c30:	ldr	r3, [r0, #52]	; 0x34
   12c34:	cmp	r3, #0
   12c38:	blt	12c48 <XRRGetOutputInfo@plt+0x11e8>
   12c3c:	mov	r2, #0
   12c40:	mov	r1, r2
   12c44:	bl	17710 <XRRGetOutputInfo@plt+0x5cb0>
   12c48:	ldr	r3, [pc, #-3908]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12c4c:	add	r5, r5, #1
   12c50:	add	r4, r4, #56	; 0x38
   12c54:	ldr	r3, [r3, #36]	; 0x24
   12c58:	ldr	r2, [r3, #24]
   12c5c:	cmp	r2, r5
   12c60:	bgt	12c28 <XRRGetOutputInfo@plt+0x11c8>
   12c64:	mov	r0, #0
   12c68:	bl	11814 <exit@plt>
   12c6c:	bl	17e4c <XRRGetOutputInfo@plt+0x63ec>
   12c70:	b	11f0c <XRRGetOutputInfo@plt+0x4ac>
   12c74:	bl	17e4c <XRRGetOutputInfo@plt+0x63ec>
   12c78:	b	11e9c <XRRGetOutputInfo@plt+0x43c>
   12c7c:	mov	r0, #32
   12c80:	bl	118e0 <putchar@plt>
   12c84:	ldr	r3, [r8, #44]	; 0x2c
   12c88:	b	12bc8 <XRRGetOutputInfo@plt+0x1168>
   12c8c:	ldr	r3, [fp, #-264]	; 0xfffffef8
   12c90:	ldr	r1, [pc, #-3984]	; 11d08 <XRRGetOutputInfo@plt+0x2a8>
   12c94:	mov	r0, #1
   12c98:	ldr	r2, [r3]
   12c9c:	bl	11910 <__printf_chk@plt>
   12ca0:	ldrh	r2, [r9, #116]	; 0x74
   12ca4:	cmp	r2, #1
   12ca8:	bne	12974 <XRRGetOutputInfo@plt+0xf14>
   12cac:	ldr	r3, [pc, #-4008]	; 11d0c <XRRGetOutputInfo@plt+0x2ac>
   12cb0:	ldr	r3, [r3, #28]
   12cb4:	cmp	r3, #0
   12cb8:	bne	12980 <XRRGetOutputInfo@plt+0xf20>
   12cbc:	cmp	r4, #1
   12cc0:	beq	12a08 <XRRGetOutputInfo@plt+0xfa8>
   12cc4:	ldr	r1, [pc, #-4028]	; 11d10 <XRRGetOutputInfo@plt+0x2b0>
   12cc8:	mov	r0, #1
   12ccc:	ldr	r6, [pc, #-4032]	; 11d14 <XRRGetOutputInfo@plt+0x2b4>
   12cd0:	bl	11910 <__printf_chk@plt>
   12cd4:	mov	r5, #0
   12cd8:	mov	r2, #1
   12cdc:	asr	r3, r4, r5
   12ce0:	tst	r3, #1
   12ce4:	beq	12d08 <XRRGetOutputInfo@plt+0x12a8>
   12ce8:	cmp	r2, #0
   12cec:	beq	135d4 <XRRGetOutputInfo@plt+0x1b74>
   12cf0:	ldr	r3, [pc, #-4064]	; 11d18 <XRRGetOutputInfo@plt+0x2b8>
   12cf4:	mov	r1, r6
   12cf8:	mov	r0, #1
   12cfc:	ldr	r2, [r3, r5, lsl #2]
   12d00:	bl	11910 <__printf_chk@plt>
   12d04:	mov	r2, #0
   12d08:	add	r5, r5, #1
   12d0c:	cmp	r5, #4
   12d10:	bne	12cdc <XRRGetOutputInfo@plt+0x127c>
   12d14:	tst	r4, #16
   12d18:	and	r4, r4, #32
   12d1c:	beq	13660 <XRRGetOutputInfo@plt+0x1c00>
   12d20:	cmp	r2, #0
   12d24:	beq	14458 <XRRGetOutputInfo@plt+0x29f8>
   12d28:	ldr	r1, [pc, #1472]	; 132f0 <XRRGetOutputInfo@plt+0x1890>
   12d2c:	mov	r0, #1
   12d30:	bl	11910 <__printf_chk@plt>
   12d34:	cmp	r4, #0
   12d38:	beq	12d50 <XRRGetOutputInfo@plt+0x12f0>
   12d3c:	mov	r0, #32
   12d40:	bl	118e0 <putchar@plt>
   12d44:	ldr	r1, [pc, #1448]	; 132f4 <XRRGetOutputInfo@plt+0x1894>
   12d48:	mov	r0, #1
   12d4c:	bl	11910 <__printf_chk@plt>
   12d50:	mov	r0, #41	; 0x29
   12d54:	bl	118e0 <putchar@plt>
   12d58:	b	129fc <XRRGetOutputInfo@plt+0xf9c>
   12d5c:	ldr	r2, [r9, #20]
   12d60:	ldr	r1, [pc, #1424]	; 132f8 <XRRGetOutputInfo@plt+0x1898>
   12d64:	mov	r0, #1
   12d68:	bl	11910 <__printf_chk@plt>
   12d6c:	ldr	r2, [r8]
   12d70:	ldr	r1, [pc, #1412]	; 132fc <XRRGetOutputInfo@plt+0x189c>
   12d74:	mov	r0, #1
   12d78:	bl	11910 <__printf_chk@plt>
   12d7c:	ldrh	r3, [r8, #26]
   12d80:	ldr	r2, [pc, #1400]	; 13300 <XRRGetOutputInfo@plt+0x18a0>
   12d84:	ldr	r1, [pc, #1400]	; 13304 <XRRGetOutputInfo@plt+0x18a4>
   12d88:	mov	r0, #1
   12d8c:	add	r3, r2, r3, lsl #2
   12d90:	ldr	r2, [r3, #188]	; 0xbc
   12d94:	bl	11910 <__printf_chk@plt>
   12d98:	vldr	s15, [r9, #232]	; 0xe8
   12d9c:	vcmp.f32	s15, #0.0
   12da0:	vmrs	APSR_nzcv, fpscr
   12da4:	beq	12dc8 <XRRGetOutputInfo@plt+0x1368>
   12da8:	vldr	s12, [r9, #236]	; 0xec
   12dac:	vcmp.f32	s12, #0.0
   12db0:	vmrs	APSR_nzcv, fpscr
   12db4:	beq	12dc8 <XRRGetOutputInfo@plt+0x1368>
   12db8:	vldr	s10, [r9, #240]	; 0xf0
   12dbc:	vcmp.f32	s10, #0.0
   12dc0:	vmrs	APSR_nzcv, fpscr
   12dc4:	bne	152fc <XRRGetOutputInfo@plt+0x389c>
   12dc8:	ldr	r1, [pc, #1336]	; 13308 <XRRGetOutputInfo@plt+0x18a8>
   12dcc:	mov	r0, #1
   12dd0:	bl	11910 <__printf_chk@plt>
   12dd4:	ldr	r3, [r8, #36]	; 0x24
   12dd8:	cmp	r3, #0
   12ddc:	ble	12e30 <XRRGetOutputInfo@plt+0x13d0>
   12de0:	ldr	r6, [pc, #1316]	; 1330c <XRRGetOutputInfo@plt+0x18ac>
   12de4:	mov	r4, #0
   12de8:	sub	r7, fp, #204	; 0xcc
   12dec:	mov	r5, #2
   12df0:	ldr	r3, [r8, #40]	; 0x28
   12df4:	mov	r0, r7
   12df8:	ldr	r3, [r3, r4, lsl #2]
   12dfc:	str	r5, [fp, #-204]	; 0xffffff34
   12e00:	str	r3, [fp, #-196]	; 0xffffff3c
   12e04:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   12e08:	cmp	r0, #0
   12e0c:	beq	12e20 <XRRGetOutputInfo@plt+0x13c0>
   12e10:	ldr	r2, [r0, #16]
   12e14:	mov	r1, r6
   12e18:	mov	r0, #1
   12e1c:	bl	11910 <__printf_chk@plt>
   12e20:	ldr	r3, [r8, #36]	; 0x24
   12e24:	add	r4, r4, #1
   12e28:	cmp	r3, r4
   12e2c:	bgt	12df0 <XRRGetOutputInfo@plt+0x1390>
   12e30:	mov	r0, #10
   12e34:	bl	118e0 <putchar@plt>
   12e38:	ldr	r3, [r9, #48]	; 0x30
   12e3c:	cmp	r3, #0
   12e40:	beq	12e54 <XRRGetOutputInfo@plt+0x13f4>
   12e44:	ldr	r2, [r3, #12]
   12e48:	ldr	r1, [pc, #1216]	; 13310 <XRRGetOutputInfo@plt+0x18b0>
   12e4c:	mov	r0, #1
   12e50:	bl	11910 <__printf_chk@plt>
   12e54:	ldr	r1, [pc, #1208]	; 13314 <XRRGetOutputInfo@plt+0x18b4>
   12e58:	mov	r0, #1
   12e5c:	bl	11910 <__printf_chk@plt>
   12e60:	ldr	r3, [r8, #28]
   12e64:	cmp	r3, #0
   12e68:	ble	12ebc <XRRGetOutputInfo@plt+0x145c>
   12e6c:	ldr	r6, [pc, #1188]	; 13318 <XRRGetOutputInfo@plt+0x18b8>
   12e70:	mov	r4, #0
   12e74:	sub	r7, fp, #204	; 0xcc
   12e78:	mov	r5, #2
   12e7c:	ldr	r3, [r8, #32]
   12e80:	mov	r0, r7
   12e84:	ldr	r3, [r3, r4, lsl #2]
   12e88:	str	r5, [fp, #-204]	; 0xffffff34
   12e8c:	str	r3, [fp, #-196]	; 0xffffff3c
   12e90:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   12e94:	cmp	r0, #0
   12e98:	beq	12eac <XRRGetOutputInfo@plt+0x144c>
   12e9c:	ldr	r2, [r0, #12]
   12ea0:	mov	r1, r6
   12ea4:	mov	r0, #1
   12ea8:	bl	11910 <__printf_chk@plt>
   12eac:	ldr	r3, [r8, #28]
   12eb0:	add	r4, r4, #1
   12eb4:	cmp	r3, r4
   12eb8:	bgt	12e7c <XRRGetOutputInfo@plt+0x141c>
   12ebc:	mov	r0, #10
   12ec0:	bl	118e0 <putchar@plt>
   12ec4:	ldr	r3, [r9, #48]	; 0x30
   12ec8:	cmp	r3, #0
   12ecc:	beq	12f3c <XRRGetOutputInfo@plt+0x14dc>
   12ed0:	ldr	r4, [r3, #28]
   12ed4:	cmp	r4, #0
   12ed8:	beq	12f3c <XRRGetOutputInfo@plt+0x14dc>
   12edc:	ldr	r3, [r4, #8]
   12ee0:	ldr	r1, [pc, #1076]	; 1331c <XRRGetOutputInfo@plt+0x18bc>
   12ee4:	str	r3, [sp, #4]
   12ee8:	ldr	r3, [r4, #4]
   12eec:	mov	r0, #1
   12ef0:	str	r3, [sp]
   12ef4:	ldrd	r2, [r4, #12]
   12ef8:	bl	11910 <__printf_chk@plt>
   12efc:	ldr	r3, [r4, #24]
   12f00:	ldr	r1, [pc, #1048]	; 13320 <XRRGetOutputInfo@plt+0x18c0>
   12f04:	str	r3, [sp, #4]
   12f08:	ldr	r3, [r4, #20]
   12f0c:	mov	r0, #1
   12f10:	str	r3, [sp]
   12f14:	ldrd	r2, [r4, #28]
   12f18:	bl	11910 <__printf_chk@plt>
   12f1c:	ldr	r3, [r4, #48]	; 0x30
   12f20:	ldr	r1, [pc, #1020]	; 13324 <XRRGetOutputInfo@plt+0x18c4>
   12f24:	str	r3, [sp, #4]
   12f28:	ldr	r3, [r4, #44]	; 0x2c
   12f2c:	mov	r0, #1
   12f30:	str	r3, [sp]
   12f34:	ldrd	r2, [r4, #36]	; 0x24
   12f38:	bl	11910 <__printf_chk@plt>
   12f3c:	ldr	r3, [pc, #1076]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   12f40:	ldr	r3, [r3, #28]
   12f44:	cmp	r3, #0
   12f48:	beq	12a54 <XRRGetOutputInfo@plt+0xff4>
   12f4c:	vldr	d8, [pc, #916]	; 132e8 <XRRGetOutputInfo@plt+0x1888>
   12f50:	ldr	r6, [pc, #976]	; 13328 <XRRGetOutputInfo@plt+0x18c8>
   12f54:	ldr	sl, [pc, #976]	; 1332c <XRRGetOutputInfo@plt+0x18cc>
   12f58:	ldr	r1, [pc, #976]	; 13330 <XRRGetOutputInfo@plt+0x18d0>
   12f5c:	mov	r0, #1
   12f60:	add	r5, r9, #196	; 0xc4
   12f64:	add	r7, r9, #220	; 0xdc
   12f68:	bl	11910 <__printf_chk@plt>
   12f6c:	add	r3, r9, #232	; 0xe8
   12f70:	str	r3, [fp, #-264]	; 0xfffffef8
   12f74:	sub	r4, r5, #12
   12f78:	vldmia	r4!, {s14}
   12f7c:	mov	r1, r6
   12f80:	mov	r0, #1
   12f84:	vcvt.f64.s32	d7, s14
   12f88:	vmul.f64	d7, d7, d8
   12f8c:	vmov	r2, r3, d7
   12f90:	bl	11910 <__printf_chk@plt>
   12f94:	cmp	r5, r4
   12f98:	bne	12f78 <XRRGetOutputInfo@plt+0x1518>
   12f9c:	cmp	r7, r5
   12fa0:	beq	12fc0 <XRRGetOutputInfo@plt+0x1560>
   12fa4:	mov	r1, sl
   12fa8:	mov	r0, #1
   12fac:	bl	11910 <__printf_chk@plt>
   12fb0:	ldr	r3, [fp, #-264]	; 0xfffffef8
   12fb4:	add	r5, r5, #12
   12fb8:	cmp	r3, r5
   12fbc:	bne	12f74 <XRRGetOutputInfo@plt+0x1514>
   12fc0:	ldr	r2, [r9, #220]	; 0xdc
   12fc4:	cmp	r2, #0
   12fc8:	beq	12fd8 <XRRGetOutputInfo@plt+0x1578>
   12fcc:	ldr	r1, [pc, #864]	; 13334 <XRRGetOutputInfo@plt+0x18d4>
   12fd0:	mov	r0, #1
   12fd4:	bl	11910 <__printf_chk@plt>
   12fd8:	mov	r0, #10
   12fdc:	bl	118e0 <putchar@plt>
   12fe0:	ldr	r3, [pc, #912]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   12fe4:	ldr	r3, [r3, #28]
   12fe8:	cmp	r3, #0
   12fec:	beq	12a54 <XRRGetOutputInfo@plt+0xff4>
   12ff0:	ldr	r3, [pc, #896]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   12ff4:	sub	r2, fp, #228	; 0xe4
   12ff8:	ldr	r1, [r9, #20]
   12ffc:	ldr	r0, [r3, #24]
   13000:	bl	1167c <XRRListOutputProperties@plt>
   13004:	ldr	r3, [fp, #-228]	; 0xffffff1c
   13008:	cmp	r3, #0
   1300c:	ble	13384 <XRRGetOutputInfo@plt+0x1924>
   13010:	sub	r3, r0, #4
   13014:	str	r3, [fp, #-264]	; 0xfffffef8
   13018:	mov	r3, #0
   1301c:	str	r3, [fp, #-268]	; 0xfffffef4
   13020:	sub	r3, fp, #204	; 0xcc
   13024:	str	r3, [fp, #-288]	; 0xfffffee0
   13028:	sub	r3, fp, #212	; 0xd4
   1302c:	str	r3, [fp, #-284]	; 0xfffffee4
   13030:	sub	r3, fp, #216	; 0xd8
   13034:	str	r3, [fp, #-280]	; 0xfffffee8
   13038:	sub	r3, fp, #220	; 0xdc
   1303c:	str	r3, [fp, #-276]	; 0xfffffeec
   13040:	sub	r3, fp, #224	; 0xe0
   13044:	str	r3, [fp, #-292]	; 0xfffffedc
   13048:	str	r9, [fp, #-272]	; 0xfffffef0
   1304c:	str	r8, [fp, #-296]	; 0xfffffed8
   13050:	b	1307c <XRRGetOutputInfo@plt+0x161c>
   13054:	cmp	r2, #0
   13058:	bgt	13418 <XRRGetOutputInfo@plt+0x19b8>
   1305c:	mov	r0, r5
   13060:	bl	116a0 <free@plt>
   13064:	ldr	r2, [fp, #-268]	; 0xfffffef4
   13068:	ldr	r3, [fp, #-228]	; 0xffffff1c
   1306c:	add	r2, r2, #1
   13070:	cmp	r3, r2
   13074:	str	r2, [fp, #-268]	; 0xfffffef4
   13078:	ble	1337c <XRRGetOutputInfo@plt+0x191c>
   1307c:	ldr	r4, [fp, #-264]	; 0xfffffef8
   13080:	ldr	r5, [pc, #752]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13084:	ldr	r1, [r4, #4]!
   13088:	ldr	r0, [r5, #24]
   1308c:	str	r4, [fp, #-264]	; 0xfffffef8
   13090:	bl	118f8 <XGetAtomName@plt>
   13094:	ldr	r6, [fp, #-272]	; 0xfffffef0
   13098:	ldr	lr, [fp, #-292]	; 0xfffffedc
   1309c:	ldr	r2, [r4]
   130a0:	ldr	r1, [r6, #20]
   130a4:	mov	r3, #0
   130a8:	mov	ip, #100	; 0x64
   130ac:	mov	sl, r0
   130b0:	ldr	r0, [r5, #24]
   130b4:	str	lr, [sp, #32]
   130b8:	ldr	lr, [fp, #-284]	; 0xfffffee4
   130bc:	str	lr, [sp, #28]
   130c0:	ldr	lr, [fp, #-280]	; 0xfffffee8
   130c4:	str	lr, [sp, #24]
   130c8:	ldr	lr, [fp, #-276]	; 0xfffffeec
   130cc:	str	lr, [sp, #20]
   130d0:	ldr	lr, [fp, #-288]	; 0xfffffee0
   130d4:	str	r3, [sp, #12]
   130d8:	str	lr, [sp, #16]
   130dc:	str	r3, [sp, #8]
   130e0:	str	r3, [sp, #4]
   130e4:	str	ip, [sp]
   130e8:	bl	119b8 <XRRGetOutputProperty@plt>
   130ec:	ldr	r1, [r6, #20]
   130f0:	ldr	r2, [r4]
   130f4:	ldr	r0, [r5, #24]
   130f8:	bl	119ac <XRRQueryOutputProperty@plt>
   130fc:	mov	r2, sl
   13100:	ldr	r1, [pc, #560]	; 13338 <XRRGetOutputInfo@plt+0x18d8>
   13104:	mov	r5, r0
   13108:	mov	r0, #1
   1310c:	bl	11910 <__printf_chk@plt>
   13110:	ldr	r6, [fp, #-220]	; 0xffffff24
   13114:	cmp	r6, #16
   13118:	beq	132e0 <XRRGetOutputInfo@plt+0x1880>
   1311c:	cmp	r6, #32
   13120:	beq	131c4 <XRRGetOutputInfo@plt+0x1764>
   13124:	cmp	r6, #8
   13128:	moveq	r9, #1
   1312c:	beq	131c8 <XRRGetOutputInfo@plt+0x1768>
   13130:	ldr	r3, [r5, #4]
   13134:	ldr	r2, [r5, #12]
   13138:	cmp	r3, #0
   1313c:	bne	13054 <XRRGetOutputInfo@plt+0x15f4>
   13140:	cmp	r2, #0
   13144:	ble	1305c <XRRGetOutputInfo@plt+0x15fc>
   13148:	ldr	r1, [pc, #492]	; 1333c <XRRGetOutputInfo@plt+0x18dc>
   1314c:	mov	r0, #1
   13150:	bl	11910 <__printf_chk@plt>
   13154:	ldr	r3, [r5, #12]
   13158:	cmp	r3, #0
   1315c:	movgt	r6, #0
   13160:	ldrgt	r4, [pc, #500]	; 1335c <XRRGetOutputInfo@plt+0x18fc>
   13164:	bgt	13178 <XRRGetOutputInfo@plt+0x1718>
   13168:	b	131b8 <XRRGetOutputInfo@plt+0x1758>
   1316c:	add	r6, r6, #1
   13170:	cmp	r6, r3
   13174:	bge	131b8 <XRRGetOutputInfo@plt+0x1758>
   13178:	ldr	r2, [r5, #16]
   1317c:	ldr	r1, [fp, #-204]	; 0xffffff34
   13180:	add	r2, r2, r6, lsl #2
   13184:	mov	r0, #32
   13188:	bl	179e0 <XRRGetOutputInfo@plt+0x5f80>
   1318c:	ldr	r3, [r5, #12]
   13190:	sub	r2, r3, #1
   13194:	cmp	r2, r6
   13198:	ble	1316c <XRRGetOutputInfo@plt+0x170c>
   1319c:	mov	r1, r4
   131a0:	mov	r0, #1
   131a4:	bl	11910 <__printf_chk@plt>
   131a8:	ldr	r3, [r5, #12]
   131ac:	add	r6, r6, #1
   131b0:	cmp	r6, r3
   131b4:	blt	13178 <XRRGetOutputInfo@plt+0x1718>
   131b8:	mov	r0, #10
   131bc:	bl	118e0 <putchar@plt>
   131c0:	b	1305c <XRRGetOutputInfo@plt+0x15fc>
   131c4:	mov	r9, #4
   131c8:	ldr	r1, [pc, #368]	; 13340 <XRRGetOutputInfo@plt+0x18e0>
   131cc:	mov	r0, sl
   131d0:	bl	11658 <strcmp@plt>
   131d4:	ldr	r8, [fp, #-204]	; 0xffffff34
   131d8:	ldr	r7, [fp, #-216]	; 0xffffff28
   131dc:	ldr	r4, [fp, #-224]	; 0xffffff20
   131e0:	cmp	r0, #0
   131e4:	bne	13250 <XRRGetOutputInfo@plt+0x17f0>
   131e8:	cmp	r6, #8
   131ec:	cmpeq	r8, #19
   131f0:	beq	135f8 <XRRGetOutputInfo@plt+0x1b98>
   131f4:	cmp	r7, #0
   131f8:	ble	13244 <XRRGetOutputInfo@plt+0x17e4>
   131fc:	mov	sl, #0
   13200:	b	13208 <XRRGetOutputInfo@plt+0x17a8>
   13204:	add	r4, r4, r9
   13208:	mov	r2, r4
   1320c:	mov	r1, r8
   13210:	mov	r0, r6
   13214:	bl	179e0 <XRRGetOutputInfo@plt+0x5f80>
   13218:	add	sl, sl, #1
   1321c:	mov	r0, #32
   13220:	bl	118e0 <putchar@plt>
   13224:	cmp	r7, sl
   13228:	beq	13244 <XRRGetOutputInfo@plt+0x17e4>
   1322c:	tst	sl, #15
   13230:	bne	13204 <XRRGetOutputInfo@plt+0x17a4>
   13234:	ldr	r1, [pc, #300]	; 13368 <XRRGetOutputInfo@plt+0x1908>
   13238:	mov	r0, #1
   1323c:	bl	11910 <__printf_chk@plt>
   13240:	b	13204 <XRRGetOutputInfo@plt+0x17a4>
   13244:	mov	r0, #10
   13248:	bl	118e0 <putchar@plt>
   1324c:	b	13130 <XRRGetOutputInfo@plt+0x16d0>
   13250:	mov	r0, sl
   13254:	ldr	r1, [pc, #232]	; 13344 <XRRGetOutputInfo@plt+0x18e4>
   13258:	bl	11658 <strcmp@plt>
   1325c:	subs	sl, r0, #0
   13260:	bne	131f4 <XRRGetOutputInfo@plt+0x1794>
   13264:	cmp	r6, #8
   13268:	cmpeq	r8, #19
   1326c:	moveq	r3, #1
   13270:	movne	r3, #0
   13274:	cmp	r7, #16
   13278:	movne	r3, #0
   1327c:	andeq	r3, r3, #1
   13280:	cmp	r3, #0
   13284:	beq	131f4 <XRRGetOutputInfo@plt+0x1794>
   13288:	mov	r0, #123	; 0x7b
   1328c:	bl	118e0 <putchar@plt>
   13290:	ldr	r6, [pc, #176]	; 13348 <XRRGetOutputInfo@plt+0x18e8>
   13294:	sub	r4, r4, #1
   13298:	ldrb	r2, [r4, #1]!
   1329c:	mov	r1, r6
   132a0:	mov	r0, #1
   132a4:	bl	11910 <__printf_chk@plt>
   132a8:	sub	r3, sl, #5
   132ac:	bic	r3, r3, #4
   132b0:	bic	r2, sl, #4
   132b4:	cmp	r3, #0
   132b8:	cmpne	r2, #3
   132bc:	bne	132c8 <XRRGetOutputInfo@plt+0x1868>
   132c0:	mov	r0, #45	; 0x2d
   132c4:	bl	118e0 <putchar@plt>
   132c8:	add	sl, sl, #1
   132cc:	cmp	sl, #16
   132d0:	bne	13298 <XRRGetOutputInfo@plt+0x1838>
   132d4:	ldr	r0, [pc, #112]	; 1334c <XRRGetOutputInfo@plt+0x18ec>
   132d8:	bl	117a8 <puts@plt>
   132dc:	b	13130 <XRRGetOutputInfo@plt+0x16d0>
   132e0:	mov	r9, #2
   132e4:	b	131c8 <XRRGetOutputInfo@plt+0x1768>
   132e8:	andeq	r0, r0, r0
   132ec:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   132f0:	andeq	fp, r1, r8, lsr #9
   132f4:			; <UNDEFINED> instruction: 0x0001b4b0
   132f8:	andeq	fp, r1, ip, lsl #10
   132fc:	andeq	fp, r1, r0, lsr #10
   13300:	andeq	r9, r1, r8, asr #26
   13304:	andeq	fp, r1, r4, lsr r5
   13308:	andeq	fp, r1, ip, ror r5
   1330c:	andeq	fp, r1, r0, asr #12
   13310:	andeq	fp, r1, ip, lsl #11
   13314:	andeq	fp, r1, r0, lsr #11
   13318:			; <UNDEFINED> instruction: 0x0001b5b0
   1331c:			; <UNDEFINED> instruction: 0x0001b5b4
   13320:	ldrdeq	fp, [r1], -r0
   13324:	andeq	fp, r1, ip, ror #11
   13328:	andeq	fp, r1, r8, lsl r6
   1332c:	andeq	fp, r1, ip, lsl r6
   13330:	andeq	fp, r1, r8, lsl #12
   13334:	andeq	fp, r1, ip, lsr #12
   13338:	andeq	fp, r1, r4, asr #12
   1333c:	andeq	fp, r1, r4, lsl #13
   13340:	andeq	fp, r1, ip, asr #12
   13344:	andeq	fp, r1, r0, ror #12
   13348:	andeq	fp, r1, r8, ror #12
   1334c:	andeq	fp, r1, r0, ror r6
   13350:	muleq	r1, r0, r1
   13354:	andeq	fp, r1, ip, lsl #9
   13358:	andeq	fp, r1, r4, ror r6
   1335c:	andeq	fp, r1, r0, lsl #13
   13360:	muleq	r1, r0, r4
   13364:	andeq	fp, r1, r8, asr r6
   13368:	andeq	fp, r1, r4, asr r6
   1336c:	ldrdeq	fp, [r1], -r0
   13370:	andeq	fp, r1, r8, asr #9
   13374:	andeq	fp, r1, r0, ror #9
   13378:	andeq	ip, r2, r0, lsr #3
   1337c:	ldr	r9, [fp, #-272]	; 0xfffffef0
   13380:	ldr	r8, [fp, #-296]	; 0xfffffed8
   13384:	ldr	r3, [pc, #-20]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13388:	ldr	r4, [r8, #44]	; 0x2c
   1338c:	ldr	r3, [r3, #28]
   13390:	cmp	r3, #0
   13394:	beq	12a68 <XRRGetOutputInfo@plt+0x1008>
   13398:	cmp	r4, #0
   1339c:	ble	12c00 <XRRGetOutputInfo@plt+0x11a0>
   133a0:	mov	r4, #0
   133a4:	sub	r7, fp, #204	; 0xcc
   133a8:	mov	r6, #2
   133ac:	ldr	r3, [r8, #52]	; 0x34
   133b0:	mov	r0, r7
   133b4:	ldr	r3, [r3, r4, lsl #2]
   133b8:	str	r6, [fp, #-204]	; 0xffffff34
   133bc:	str	r3, [fp, #-196]	; 0xffffff3c
   133c0:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   133c4:	ldr	r2, [r8, #48]	; 0x30
   133c8:	ldr	r1, [r9, #80]	; 0x50
   133cc:	cmp	r2, r4
   133d0:	movle	r2, #0
   133d4:	movgt	r2, #1
   133d8:	add	r4, r4, #1
   133dc:	mov	r5, r0
   133e0:	sub	r1, r1, r0
   133e4:	clz	r1, r1
   133e8:	lsr	r1, r1, #5
   133ec:	bl	17710 <XRRGetOutputInfo@plt+0x5cb0>
   133f0:	ldr	r3, [r5, #52]	; 0x34
   133f4:	orr	r3, r3, #-2147483648	; 0x80000000
   133f8:	str	r3, [r5, #52]	; 0x34
   133fc:	ldr	r3, [r8, #44]	; 0x2c
   13400:	cmp	r3, r4
   13404:	bgt	133ac <XRRGetOutputInfo@plt+0x194c>
   13408:	ldr	r9, [r9]
   1340c:	cmp	r9, #0
   13410:	bne	1285c <XRRGetOutputInfo@plt+0xdfc>
   13414:	b	12c0c <XRRGetOutputInfo@plt+0x11ac>
   13418:	ldr	r1, [pc, #-208]	; 13350 <XRRGetOutputInfo@plt+0x18f0>
   1341c:	ldr	r3, [pc, #-208]	; 13354 <XRRGetOutputInfo@plt+0x18f4>
   13420:	cmp	r2, #2
   13424:	moveq	r3, r1
   13428:	mov	r2, r3
   1342c:	ldr	r1, [pc, #-220]	; 13358 <XRRGetOutputInfo@plt+0x18f8>
   13430:	mov	r0, #1
   13434:	bl	11910 <__printf_chk@plt>
   13438:	ldr	r3, [r5, #12]
   1343c:	cmp	r3, #1
   13440:	ble	134ec <XRRGetOutputInfo@plt+0x1a8c>
   13444:	mov	r7, #0
   13448:	ldr	r6, [pc, #-244]	; 1335c <XRRGetOutputInfo@plt+0x18fc>
   1344c:	mov	r4, r7
   13450:	b	13464 <XRRGetOutputInfo@plt+0x1a04>
   13454:	add	r7, r7, #1
   13458:	cmp	r7, r3
   1345c:	add	r4, r4, #8
   13460:	bge	134ec <XRRGetOutputInfo@plt+0x1a8c>
   13464:	mov	r0, #40	; 0x28
   13468:	bl	118e0 <putchar@plt>
   1346c:	ldr	r2, [r5, #16]
   13470:	ldr	r1, [fp, #-204]	; 0xffffff34
   13474:	add	r2, r2, r4
   13478:	mov	r0, #32
   1347c:	bl	179e0 <XRRGetOutputInfo@plt+0x5f80>
   13480:	mov	r1, r6
   13484:	mov	r0, #1
   13488:	bl	11910 <__printf_chk@plt>
   1348c:	ldr	r2, [r5, #16]
   13490:	add	r3, r4, #4
   13494:	add	r2, r2, r3
   13498:	ldr	r1, [fp, #-204]	; 0xffffff34
   1349c:	mov	r0, #32
   134a0:	bl	179e0 <XRRGetOutputInfo@plt+0x5f80>
   134a4:	mov	r0, #41	; 0x29
   134a8:	bl	118e0 <putchar@plt>
   134ac:	ldr	r3, [r5, #12]
   134b0:	add	r3, r3, r3, lsr #31
   134b4:	asr	r3, r3, #1
   134b8:	sub	r2, r3, #1
   134bc:	cmp	r2, r7
   134c0:	ble	13454 <XRRGetOutputInfo@plt+0x19f4>
   134c4:	mov	r1, r6
   134c8:	mov	r0, #1
   134cc:	bl	11910 <__printf_chk@plt>
   134d0:	ldr	r3, [r5, #12]
   134d4:	add	r7, r7, #1
   134d8:	add	r4, r4, #8
   134dc:	add	r3, r3, r3, lsr #31
   134e0:	asr	r3, r3, #1
   134e4:	cmp	r7, r3
   134e8:	blt	13464 <XRRGetOutputInfo@plt+0x1a04>
   134ec:	mov	r0, #10
   134f0:	bl	118e0 <putchar@plt>
   134f4:	ldr	r3, [r5, #4]
   134f8:	cmp	r3, #0
   134fc:	bne	1305c <XRRGetOutputInfo@plt+0x15fc>
   13500:	ldr	r2, [r5, #12]
   13504:	b	13140 <XRRGetOutputInfo@plt+0x16e0>
   13508:	ldr	r1, [pc, #-432]	; 13360 <XRRGetOutputInfo@plt+0x1900>
   1350c:	mov	r0, #1
   13510:	bl	11910 <__printf_chk@plt>
   13514:	b	12920 <XRRGetOutputInfo@plt+0xec0>
   13518:	mov	r2, #0
   1351c:	bl	11898 <XInternAtom@plt>
   13520:	ldr	r3, [pc, #-432]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13524:	ldr	r1, [r5, #40]	; 0x28
   13528:	mov	r4, r0
   1352c:	ldr	r0, [r3, #24]
   13530:	bl	11988 <XRRAllocateMonitor@plt>
   13534:	str	r4, [r0]
   13538:	ldr	r3, [r5, #12]
   1353c:	mov	r8, r0
   13540:	str	r3, [r0, #4]
   13544:	ldr	r3, [r5, #16]
   13548:	str	r3, [r0, #16]
   1354c:	ldr	r3, [r5, #20]
   13550:	str	r3, [r0, #20]
   13554:	ldr	r3, [r5, #24]
   13558:	str	r3, [r0, #24]
   1355c:	ldr	r3, [r5, #28]
   13560:	str	r3, [r0, #28]
   13564:	ldr	r3, [r5, #32]
   13568:	str	r3, [r0, #32]
   1356c:	ldr	r3, [r5, #36]	; 0x24
   13570:	str	r3, [r0, #36]	; 0x24
   13574:	ldr	r3, [r5, #40]	; 0x28
   13578:	cmp	r3, #0
   1357c:	movgt	r4, #0
   13580:	ble	135b4 <XRRGetOutputInfo@plt+0x1b54>
   13584:	ldr	r0, [r5, #44]	; 0x2c
   13588:	add	r0, r0, r4, lsl #4
   1358c:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   13590:	cmp	r0, #0
   13594:	beq	157bc <XRRGetOutputInfo@plt+0x3d5c>
   13598:	ldr	r3, [r8, #40]	; 0x28
   1359c:	ldr	r2, [r0, #20]
   135a0:	str	r2, [r3, r4, lsl #2]
   135a4:	ldr	r3, [r5, #40]	; 0x28
   135a8:	add	r4, r4, #1
   135ac:	cmp	r3, r4
   135b0:	bgt	13584 <XRRGetOutputInfo@plt+0x1b24>
   135b4:	ldr	r3, [pc, #-580]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   135b8:	mov	r2, r8
   135bc:	ldr	r0, [r3, #24]
   135c0:	ldr	r1, [r3, #40]	; 0x28
   135c4:	bl	1173c <XRRSetMonitor@plt>
   135c8:	mov	r0, r8
   135cc:	bl	11994 <XRRFreeMonitors@plt>
   135d0:	b	12294 <XRRGetOutputInfo@plt+0x834>
   135d4:	mov	r0, #32
   135d8:	bl	118e0 <putchar@plt>
   135dc:	b	12cf0 <XRRGetOutputInfo@plt+0x1290>
   135e0:	beq	12284 <XRRGetOutputInfo@plt+0x824>
   135e4:	ldr	r3, [pc, #-628]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   135e8:	ldr	r1, [r3, #40]	; 0x28
   135ec:	ldr	r0, [r3, #24]
   135f0:	bl	119c4 <XRRDeleteMonitor@plt>
   135f4:	b	12294 <XRRGetOutputInfo@plt+0x834>
   135f8:	ldr	r1, [pc, #-664]	; 13368 <XRRGetOutputInfo@plt+0x1908>
   135fc:	mov	r0, #1
   13600:	bl	11910 <__printf_chk@plt>
   13604:	cmp	r7, #0
   13608:	ble	13244 <XRRGetOutputInfo@plt+0x17e4>
   1360c:	sub	r7, r7, #1
   13610:	add	r7, r4, r7
   13614:	sub	r6, r4, #1
   13618:	ldr	r8, [pc, #-700]	; 13364 <XRRGetOutputInfo@plt+0x1904>
   1361c:	b	13624 <XRRGetOutputInfo@plt+0x1bc4>
   13620:	mov	r6, r9
   13624:	mov	r0, #1
   13628:	add	r9, r6, r0
   1362c:	ldrb	r2, [r6, #1]
   13630:	mov	r1, r8
   13634:	bl	11910 <__printf_chk@plt>
   13638:	cmp	r7, r9
   1363c:	beq	13244 <XRRGetOutputInfo@plt+0x17e4>
   13640:	add	r6, r6, #2
   13644:	sub	r6, r6, r4
   13648:	tst	r6, #15
   1364c:	bne	13620 <XRRGetOutputInfo@plt+0x1bc0>
   13650:	ldr	r1, [pc, #-752]	; 13368 <XRRGetOutputInfo@plt+0x1908>
   13654:	mov	r0, #1
   13658:	bl	11910 <__printf_chk@plt>
   1365c:	b	13620 <XRRGetOutputInfo@plt+0x1bc0>
   13660:	cmp	r4, #0
   13664:	beq	12d50 <XRRGetOutputInfo@plt+0x12f0>
   13668:	cmp	r2, #0
   1366c:	bne	12d44 <XRRGetOutputInfo@plt+0x12e4>
   13670:	b	12d3c <XRRGetOutputInfo@plt+0x12dc>
   13674:	ldr	r3, [r9, #112]	; 0x70
   13678:	ldr	r1, [pc, #-788]	; 1336c <XRRGetOutputInfo@plt+0x190c>
   1367c:	str	r3, [sp, #4]
   13680:	ldr	r3, [r9, #108]	; 0x6c
   13684:	mov	r0, #1
   13688:	str	r3, [sp]
   1368c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   13690:	ldr	r3, [r2, #8]
   13694:	ldr	r2, [r2, #4]
   13698:	bl	11910 <__printf_chk@plt>
   1369c:	b	12958 <XRRGetOutputInfo@plt+0xef8>
   136a0:	mov	r0, r7
   136a4:	bl	117a8 <puts@plt>
   136a8:	b	12294 <XRRGetOutputInfo@plt+0x834>
   136ac:	ldr	r3, [r4, #8]
   136b0:	ldr	r1, [pc, #-840]	; 13370 <XRRGetOutputInfo@plt+0x1910>
   136b4:	str	r3, [sp, #4]
   136b8:	ldr	r3, [r4, #4]
   136bc:	mov	r0, #1
   136c0:	str	r3, [sp]
   136c4:	ldr	r3, [r4, #16]
   136c8:	bl	11910 <__printf_chk@plt>
   136cc:	ldr	r2, [r4, #28]
   136d0:	cmp	r2, #0
   136d4:	beq	14414 <XRRGetOutputInfo@plt+0x29b4>
   136d8:	ldr	r1, [r4, #20]
   136dc:	ldr	r3, [r4, #4]
   136e0:	cmp	r1, r3
   136e4:	beq	143f8 <XRRGetOutputInfo@plt+0x2998>
   136e8:	ldr	r3, [r4, #48]	; 0x30
   136ec:	str	r3, [sp, #20]
   136f0:	ldr	r3, [r4, #44]	; 0x2c
   136f4:	ldr	r1, [pc, #-904]	; 13374 <XRRGetOutputInfo@plt+0x1914>
   136f8:	str	r3, [sp, #16]
   136fc:	ldr	r3, [r4, #40]	; 0x28
   13700:	mov	r0, #1
   13704:	str	r3, [sp, #12]
   13708:	ldr	r3, [r4, #36]	; 0x24
   1370c:	str	r3, [sp, #8]
   13710:	ldr	r3, [r4, #24]
   13714:	str	r3, [sp, #4]
   13718:	ldr	r3, [r4, #20]
   1371c:	str	r3, [sp]
   13720:	ldr	r3, [r4, #32]
   13724:	bl	11910 <__printf_chk@plt>
   13728:	b	12a3c <XRRGetOutputInfo@plt+0xfdc>
   1372c:	mov	r4, #1
   13730:	b	128f4 <XRRGetOutputInfo@plt+0xe94>
   13734:	ldr	r3, [pc, #-964]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13738:	ldr	r5, [r3, #92]	; 0x5c
   1373c:	cmp	r5, #0
   13740:	beq	13758 <XRRGetOutputInfo@plt+0x1cf8>
   13744:	ldr	r3, [pc, #-980]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13748:	ldr	r5, [r3, #88]	; 0x58
   1374c:	ldr	r3, [fp, #-312]	; 0xfffffec8
   13750:	cmp	r5, #0
   13754:	movne	r5, r3
   13758:	ldr	r2, [pc, #-1000]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   1375c:	ldr	r3, [r2, #92]	; 0x5c
   13760:	ldr	r1, [r2, #60]	; 0x3c
   13764:	ldr	r0, [r2, #88]	; 0x58
   13768:	cmp	r3, r1
   1376c:	ldr	r2, [r2, #56]	; 0x38
   13770:	bgt	15d08 <XRRGetOutputInfo@plt+0x42a8>
   13774:	cmp	r0, r2
   13778:	bgt	15d08 <XRRGetOutputInfo@plt+0x42a8>
   1377c:	ldr	r2, [pc, #-1036]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13780:	cmp	r5, #0
   13784:	ldr	r1, [r2, #52]	; 0x34
   13788:	ldr	r2, [r2, #48]	; 0x30
   1378c:	beq	14930 <XRRGetOutputInfo@plt+0x2ed0>
   13790:	cmp	r3, r1
   13794:	blt	15d00 <XRRGetOutputInfo@plt+0x42a0>
   13798:	cmp	r2, r0
   1379c:	bgt	15d00 <XRRGetOutputInfo@plt+0x42a0>
   137a0:	ldr	r3, [pc, #-1072]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   137a4:	str	sp, [fp, #-264]	; 0xfffffef8
   137a8:	ldm	r3, {r5, r9}
   137ac:	lsl	r8, r9, #2
   137b0:	add	r2, r8, #7
   137b4:	bic	r2, r2, #7
   137b8:	sub	sp, sp, r2
   137bc:	add	r3, sp, #40	; 0x28
   137c0:	cmp	r5, #0
   137c4:	str	r3, [fp, #-268]	; 0xfffffef4
   137c8:	beq	138f8 <XRRGetOutputInfo@plt+0x1e98>
   137cc:	mov	r4, #2
   137d0:	b	13818 <XRRGetOutputInfo@plt+0x1db8>
   137d4:	ldr	r2, [r6, #20]
   137d8:	ldr	r3, [r2, #28]
   137dc:	cmp	r3, #0
   137e0:	ble	1380c <XRRGetOutputInfo@plt+0x1dac>
   137e4:	cmp	r3, #1
   137e8:	bne	14370 <XRRGetOutputInfo@plt+0x2910>
   137ec:	ldr	r3, [r2, #32]
   137f0:	sub	r0, fp, #204	; 0xcc
   137f4:	ldr	r3, [r3]
   137f8:	str	r4, [fp, #-204]	; 0xffffff34
   137fc:	str	r3, [fp, #-196]	; 0xffffff3c
   13800:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   13804:	cmp	r5, r0
   13808:	bne	14370 <XRRGetOutputInfo@plt+0x2910>
   1380c:	ldr	r5, [r5]
   13810:	cmp	r5, #0
   13814:	beq	138f8 <XRRGetOutputInfo@plt+0x1e98>
   13818:	ldr	r3, [r5, #4]
   1381c:	cmp	r3, #0
   13820:	beq	1380c <XRRGetOutputInfo@plt+0x1dac>
   13824:	ldr	r3, [r5, #80]	; 0x50
   13828:	cmp	r3, #0
   1382c:	beq	1380c <XRRGetOutputInfo@plt+0x1dac>
   13830:	ldr	r6, [r5, #48]	; 0x30
   13834:	cmp	r6, #0
   13838:	bne	137d4 <XRRGetOutputInfo@plt+0x1d74>
   1383c:	ldr	r3, [r5, #28]
   13840:	ldr	r2, [r3, #28]
   13844:	cmp	r2, #0
   13848:	bgt	13864 <XRRGetOutputInfo@plt+0x1e04>
   1384c:	b	14368 <XRRGetOutputInfo@plt+0x2908>
   13850:	ldr	r3, [r5, #28]
   13854:	add	r6, r6, #1
   13858:	ldr	r2, [r3, #28]
   1385c:	cmp	r6, r2
   13860:	bge	14368 <XRRGetOutputInfo@plt+0x2908>
   13864:	ldr	r3, [r3, #32]
   13868:	sub	r0, fp, #204	; 0xcc
   1386c:	add	r7, r3, r6, lsl #2
   13870:	ldr	r3, [r3, r6, lsl #2]
   13874:	str	r4, [fp, #-204]	; 0xffffff34
   13878:	str	r3, [fp, #-196]	; 0xffffff3c
   1387c:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   13880:	subs	sl, r0, #0
   13884:	beq	158d0 <XRRGetOutputInfo@plt+0x3e70>
   13888:	mov	r1, r5
   1388c:	bl	1858c <XRRGetOutputInfo@plt+0x6b2c>
   13890:	cmp	r0, #0
   13894:	beq	13850 <XRRGetOutputInfo@plt+0x1df0>
   13898:	str	sl, [r5, #48]	; 0x30
   1389c:	b	1380c <XRRGetOutputInfo@plt+0x1dac>
   138a0:	bl	18770 <XRRGetOutputInfo@plt+0x6d10>
   138a4:	ldr	r3, [pc, #-1332]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   138a8:	ldr	r3, [r3]
   138ac:	cmp	r3, #0
   138b0:	beq	138f8 <XRRGetOutputInfo@plt+0x1e98>
   138b4:	mov	r0, #1
   138b8:	ldr	r2, [r3, #80]	; 0x50
   138bc:	cmp	r2, #0
   138c0:	beq	138d0 <XRRGetOutputInfo@plt+0x1e70>
   138c4:	ldr	r2, [r3, #48]	; 0x30
   138c8:	cmp	r2, #0
   138cc:	beq	15880 <XRRGetOutputInfo@plt+0x3e20>
   138d0:	ldr	r2, [r3, #4]
   138d4:	cmp	r2, #0
   138d8:	bne	138ec <XRRGetOutputInfo@plt+0x1e8c>
   138dc:	ldr	r1, [r3, #48]	; 0x30
   138e0:	ldr	r2, [r3, #52]	; 0x34
   138e4:	cmp	r1, r2
   138e8:	strne	r0, [r3, #4]
   138ec:	ldr	r3, [r3]
   138f0:	cmp	r3, #0
   138f4:	bne	138b8 <XRRGetOutputInfo@plt+0x1e58>
   138f8:	ldr	r3, [pc, #-1416]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   138fc:	ldr	sp, [fp, #-264]	; 0xfffffef8
   13900:	ldr	r4, [r3]
   13904:	cmp	r4, #0
   13908:	bne	13948 <XRRGetOutputInfo@plt+0x1ee8>
   1390c:	b	139b4 <XRRGetOutputInfo@plt+0x1f54>
   13910:	ldr	r1, [r5, #48]	; 0x30
   13914:	add	r1, r1, #1
   13918:	lsl	r1, r1, #2
   1391c:	bl	11748 <realloc@plt>
   13920:	str	r0, [r5, #44]	; 0x2c
   13924:	cmp	r0, #0
   13928:	beq	157d4 <XRRGetOutputInfo@plt+0x3d74>
   1392c:	ldr	r3, [r5, #48]	; 0x30
   13930:	add	r2, r3, #1
   13934:	str	r2, [r5, #48]	; 0x30
   13938:	str	r4, [r0, r3, lsl #2]
   1393c:	ldr	r4, [r4]
   13940:	cmp	r4, #0
   13944:	beq	139b4 <XRRGetOutputInfo@plt+0x1f54>
   13948:	ldr	r3, [r4, #80]	; 0x50
   1394c:	cmp	r3, #0
   13950:	beq	1393c <XRRGetOutputInfo@plt+0x1edc>
   13954:	ldr	r5, [r4, #48]	; 0x30
   13958:	ldr	r0, [r5, #44]	; 0x2c
   1395c:	cmp	r0, #0
   13960:	bne	13910 <XRRGetOutputInfo@plt+0x1eb0>
   13964:	mov	r0, #4
   13968:	bl	117b4 <malloc@plt>
   1396c:	add	r1, r4, #184	; 0xb8
   13970:	str	r0, [r5, #44]	; 0x2c
   13974:	ldr	r3, [r4, #108]	; 0x6c
   13978:	add	r0, r5, #100	; 0x64
   1397c:	str	r3, [r5, #32]
   13980:	ldr	r3, [r4, #112]	; 0x70
   13984:	str	r3, [r5, #36]	; 0x24
   13988:	ldrh	r3, [r4, #116]	; 0x74
   1398c:	strh	r3, [r5, #40]	; 0x28
   13990:	ldr	r3, [r4, #80]	; 0x50
   13994:	str	r3, [r5, #24]
   13998:	ldr	r3, [r4, #224]	; 0xe0
   1399c:	str	r3, [sp]
   139a0:	ldr	r3, [r4, #228]	; 0xe4
   139a4:	ldr	r2, [r4, #220]	; 0xdc
   139a8:	bl	173a8 <XRRGetOutputInfo@plt+0x5948>
   139ac:	ldr	r0, [r5, #44]	; 0x2c
   139b0:	b	13924 <XRRGetOutputInfo@plt+0x1ec4>
   139b4:	ldr	r3, [pc, #-1604]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   139b8:	ldr	r3, [r3, #4]
   139bc:	cmp	r3, #0
   139c0:	str	r3, [fp, #-264]	; 0xfffffef8
   139c4:	ble	13a70 <XRRGetOutputInfo@plt+0x2010>
   139c8:	ldr	r3, [pc, #-1624]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   139cc:	mov	r7, #0
   139d0:	mov	r6, #1
   139d4:	ldr	r4, [r3, #8]
   139d8:	ldr	r9, [r4, #20]
   139dc:	ldr	r3, [r9, #28]
   139e0:	cmp	r3, #0
   139e4:	movgt	r5, #0
   139e8:	movgt	r8, #2
   139ec:	ble	13a2c <XRRGetOutputInfo@plt+0x1fcc>
   139f0:	ldr	r3, [r9, #32]
   139f4:	sub	r0, fp, #204	; 0xcc
   139f8:	ldr	sl, [r3, r5, lsl #2]
   139fc:	str	r8, [fp, #-204]	; 0xffffff34
   13a00:	str	sl, [fp, #-196]	; 0xffffff3c
   13a04:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   13a08:	cmp	r0, #0
   13a0c:	beq	1533c <XRRGetOutputInfo@plt+0x38dc>
   13a10:	ldr	r3, [r0, #4]
   13a14:	add	r5, r5, #1
   13a18:	cmp	r3, #0
   13a1c:	strne	r6, [r4, #16]
   13a20:	ldr	r3, [r9, #28]
   13a24:	cmp	r5, r3
   13a28:	blt	139f0 <XRRGetOutputInfo@plt+0x1f90>
   13a2c:	ldr	r1, [r4, #48]	; 0x30
   13a30:	cmp	r1, #0
   13a34:	ble	13a5c <XRRGetOutputInfo@plt+0x1ffc>
   13a38:	ldr	r3, [r4, #44]	; 0x2c
   13a3c:	sub	r3, r3, #4
   13a40:	add	r1, r3, r1, lsl #2
   13a44:	ldr	r2, [r3, #4]!
   13a48:	ldr	r2, [r2, #4]
   13a4c:	cmp	r2, #0
   13a50:	strne	r6, [r4, #16]
   13a54:	cmp	r1, r3
   13a58:	bne	13a44 <XRRGetOutputInfo@plt+0x1fe4>
   13a5c:	ldr	r3, [fp, #-264]	; 0xfffffef8
   13a60:	add	r7, r7, #1
   13a64:	cmp	r3, r7
   13a68:	add	r4, r4, #148	; 0x94
   13a6c:	bne	139d8 <XRRGetOutputInfo@plt+0x1f78>
   13a70:	ldr	r3, [pc, #-1792]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13a74:	ldr	r4, [r3, #112]	; 0x70
   13a78:	cmp	r4, #0
   13a7c:	beq	13af8 <XRRGetOutputInfo@plt+0x2098>
   13a80:	mov	r3, #1
   13a84:	sub	r0, fp, #204	; 0xcc
   13a88:	str	r4, [fp, #-200]	; 0xffffff38
   13a8c:	str	r3, [fp, #-204]	; 0xffffff34
   13a90:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   13a94:	cmp	r0, #0
   13a98:	beq	157dc <XRRGetOutputInfo@plt+0x3d7c>
   13a9c:	ldr	r2, [r0, #28]
   13aa0:	ldr	r1, [r0, #80]	; 0x50
   13aa4:	cmp	r2, #0
   13aa8:	cmpne	r1, #0
   13aac:	beq	13af8 <XRRGetOutputInfo@plt+0x2098>
   13ab0:	ldr	r3, [r2, #20]
   13ab4:	cmp	r3, #0
   13ab8:	beq	13af8 <XRRGetOutputInfo@plt+0x2098>
   13abc:	ldr	r0, [pc, #-1868]	; 13378 <XRRGetOutputInfo@plt+0x1918>
   13ac0:	ldr	ip, [r1, #4]
   13ac4:	ldr	r1, [r1, #8]
   13ac8:	ldr	r0, [r0, #92]	; 0x5c
   13acc:	cmp	ip, r0
   13ad0:	beq	15610 <XRRGetOutputInfo@plt+0x3bb0>
   13ad4:	vmov	s15, r1
   13ad8:	vldr	d5, [pc, #576]	; 13d20 <XRRGetOutputInfo@plt+0x22c0>
   13adc:	vmov	s13, r3
   13ae0:	ldr	r3, [pc, #640]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13ae4:	vcvt.f64.u32	d7, s15
   13ae8:	vcvt.f64.u32	d6, s13
   13aec:	vmul.f64	d7, d7, d5
   13af0:	vdiv.f64	d5, d7, d6
   13af4:	vstr	d5, [r3, #104]	; 0x68
   13af8:	ldr	r2, [pc, #616]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13afc:	ldr	r3, [r2, #100]	; 0x64
   13b00:	cmp	r3, #0
   13b04:	beq	13b14 <XRRGetOutputInfo@plt+0x20b4>
   13b08:	ldr	r3, [r2, #96]	; 0x60
   13b0c:	cmp	r3, #0
   13b10:	bne	13bb4 <XRRGetOutputInfo@plt+0x2154>
   13b14:	ldr	r0, [pc, #588]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13b18:	ldr	r2, [fp, #-320]	; 0xfffffec0
   13b1c:	mov	r1, #80	; 0x50
   13b20:	ldr	r3, [r0, #24]
   13b24:	ldr	r2, [r2, #4]
   13b28:	vldr	d7, [r0, #104]	; 0x68
   13b2c:	ldr	r3, [r3, #140]	; 0x8c
   13b30:	mla	r2, r1, r2, r3
   13b34:	ldr	r3, [r0, #92]	; 0x5c
   13b38:	ldr	r1, [r0, #88]	; 0x58
   13b3c:	ldr	r0, [r2, #12]
   13b40:	cmp	r0, r3
   13b44:	beq	150a0 <XRRGetOutputInfo@plt+0x3640>
   13b48:	vcmpe.f64	d7, #0.0
   13b4c:	vmrs	APSR_nzcv, fpscr
   13b50:	bhi	13b78 <XRRGetOutputInfo@plt+0x2118>
   13b54:	vldr	s14, [r2, #16]
   13b58:	vldr	d4, [pc, #448]	; 13d20 <XRRGetOutputInfo@plt+0x22c0>
   13b5c:	vldr	s10, [r2, #24]
   13b60:	ldr	r2, [pc, #512]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13b64:	vcvt.f64.s32	d7, s14
   13b68:	vcvt.f64.s32	d5, s10
   13b6c:	vmul.f64	d7, d7, d4
   13b70:	vdiv.f64	d4, d7, d5
   13b74:	vstr	d4, [r2, #104]	; 0x68
   13b78:	vmov	s15, r3
   13b7c:	vmov	s13, r1
   13b80:	vldr	d5, [pc, #408]	; 13d20 <XRRGetOutputInfo@plt+0x22c0>
   13b84:	ldr	r3, [pc, #476]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13b88:	vcvt.f64.s32	d7, s15
   13b8c:	vcvt.f64.s32	d6, s13
   13b90:	vldr	d4, [r3, #104]	; 0x68
   13b94:	vmul.f64	d7, d7, d5
   13b98:	vmul.f64	d6, d6, d5
   13b9c:	vdiv.f64	d5, d7, d4
   13ba0:	vdiv.f64	d7, d6, d4
   13ba4:	vcvt.s32.f64	s10, d5
   13ba8:	vstr	s10, [r3, #100]	; 0x64
   13bac:	vcvt.s32.f64	s14, d7
   13bb0:	vstr	s14, [r3, #96]	; 0x60
   13bb4:	ldr	r3, [pc, #428]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13bb8:	ldr	r4, [r3]
   13bbc:	cmp	r4, #0
   13bc0:	beq	13f18 <XRRGetOutputInfo@plt+0x24b8>
   13bc4:	mov	r5, #1
   13bc8:	ldr	r6, [r4, #48]	; 0x30
   13bcc:	cmp	r6, #0
   13bd0:	beq	13c38 <XRRGetOutputInfo@plt+0x21d8>
   13bd4:	ldr	r3, [r4, #4]
   13bd8:	tst	r3, #1024	; 0x400
   13bdc:	beq	13c38 <XRRGetOutputInfo@plt+0x21d8>
   13be0:	ldr	r3, [r6, #28]
   13be4:	cmp	r3, #0
   13be8:	beq	14474 <XRRGetOutputInfo@plt+0x2a14>
   13bec:	ldr	r2, [r6, #28]
   13bf0:	add	r3, r4, #120	; 0x78
   13bf4:	add	r6, r4, #168	; 0xa8
   13bf8:	ldr	lr, [r3]
   13bfc:	ldr	ip, [r3, #4]
   13c00:	ldr	r0, [r3, #8]
   13c04:	ldr	r1, [r3, #12]
   13c08:	add	r3, r3, #16
   13c0c:	cmp	r3, r6
   13c10:	str	lr, [r2]
   13c14:	str	ip, [r2, #4]
   13c18:	str	r0, [r2, #8]
   13c1c:	str	r1, [r2, #12]
   13c20:	add	r2, r2, #16
   13c24:	bne	13bf8 <XRRGetOutputInfo@plt+0x2198>
   13c28:	ldr	r3, [r3]
   13c2c:	str	r3, [r2]
   13c30:	ldr	r3, [r4, #48]	; 0x30
   13c34:	str	r5, [r3, #16]
   13c38:	ldr	r4, [r4]
   13c3c:	cmp	r4, #0
   13c40:	bne	13bc8 <XRRGetOutputInfo@plt+0x2168>
   13c44:	ldr	r3, [pc, #284]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13c48:	ldr	r4, [r3]
   13c4c:	cmp	r4, #0
   13c50:	beq	13f18 <XRRGetOutputInfo@plt+0x24b8>
   13c54:	vldr	s25, [pc, #220]	; 13d38 <XRRGetOutputInfo@plt+0x22d8>
   13c58:	vldr	d9, [pc, #200]	; 13d28 <XRRGetOutputInfo@plt+0x22c8>
   13c5c:	vldr	d8, [pc, #204]	; 13d30 <XRRGetOutputInfo@plt+0x22d0>
   13c60:	ldr	r7, [pc, #212]	; 13d3c <XRRGetOutputInfo@plt+0x22dc>
   13c64:	b	13c74 <XRRGetOutputInfo@plt+0x2214>
   13c68:	ldr	r4, [r4]
   13c6c:	cmp	r4, #0
   13c70:	beq	13f18 <XRRGetOutputInfo@plt+0x24b8>
   13c74:	ldr	r3, [r4, #4]
   13c78:	tst	r3, #2048	; 0x800
   13c7c:	beq	13c68 <XRRGetOutputInfo@plt+0x2208>
   13c80:	ldr	sl, [r4, #48]	; 0x30
   13c84:	cmp	sl, #0
   13c88:	beq	158bc <XRRGetOutputInfo@plt+0x3e5c>
   13c8c:	ldr	r3, [pc, #212]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13c90:	ldr	r1, [sl, #8]
   13c94:	ldr	r0, [r3, #24]
   13c98:	bl	116b8 <XRRGetCrtcGammaSize@plt>
   13c9c:	subs	r9, r0, #0
   13ca0:	beq	158b4 <XRRGetOutputInfo@plt+0x3e54>
   13ca4:	cmp	r9, #65536	; 0x10000
   13ca8:	bgt	158fc <XRRGetOutputInfo@plt+0x3e9c>
   13cac:	bl	11784 <XRRAllocGamma@plt>
   13cb0:	subs	r8, r0, #0
   13cb4:	beq	158f4 <XRRGetOutputInfo@plt+0x3e94>
   13cb8:	vldr	s15, [r4, #232]	; 0xe8
   13cbc:	vcmp.f32	s15, #0.0
   13cc0:	vmrs	APSR_nzcv, fpscr
   13cc4:	vdivne.f32	s24, s25, s15
   13cc8:	vldr	s15, [r4, #236]	; 0xec
   13ccc:	vstreq	s25, [r4, #232]	; 0xe8
   13cd0:	vmoveq.f32	s24, s25
   13cd4:	vcmp.f32	s15, #0.0
   13cd8:	vmrs	APSR_nzcv, fpscr
   13cdc:	vdivne.f32	s23, s25, s15
   13ce0:	vldr	s15, [r4, #240]	; 0xf0
   13ce4:	vstreq	s25, [r4, #236]	; 0xec
   13ce8:	vmoveq.f32	s23, s25
   13cec:	vcmp.f32	s15, #0.0
   13cf0:	vmrs	APSR_nzcv, fpscr
   13cf4:	vdivne.f32	s22, s25, s15
   13cf8:	vstreq	s25, [r4, #240]	; 0xf0
   13cfc:	vmoveq.f32	s22, s25
   13d00:	cmp	r9, #0
   13d04:	subgt	r3, r9, #1
   13d08:	movgt	r5, #0
   13d0c:	vmovgt	s15, r3
   13d10:	vcvtgt.f64.s32	d10, s15
   13d14:	bgt	13dec <XRRGetOutputInfo@plt+0x238c>
   13d18:	b	13ef0 <XRRGetOutputInfo@plt+0x2490>
   13d1c:	nop			; (mov r0, r0)
   13d20:	strbtvs	r6, [r6], -r6, ror #12
   13d24:	eorsmi	r6, r9, r6, ror #12
   13d28:	andeq	r0, r0, r0
   13d2c:	svccc	0x00f00000	; IMB
   13d30:	andeq	r0, r0, r0
   13d34:	rscmi	pc, pc, r0, ror #31
   13d38:	svccc	0x00800000
   13d3c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   13d40:	ldrdeq	fp, [r1], -r4
   13d44:	andeq	sl, r1, ip, lsl r1
   13d48:	ldrdeq	sl, [r1], -r8
   13d4c:	andeq	sl, r1, ip, lsl #7
   13d50:			; <UNDEFINED> instruction: 0x0001b3b8
   13d54:	andeq	sl, r1, r4, lsl r1
   13d58:	andeq	r9, r1, r8, asr #26
   13d5c:	ldrdeq	fp, [r1], -r0
   13d60:	andeq	r9, r1, r0, lsr #31
   13d64:	andeq	fp, r1, ip, lsr #1
   13d68:	andeq	ip, r2, r0, lsr #3
   13d6c:	vmul.f64	d7, d13, d8
   13d70:	ldr	r3, [r8, #4]
   13d74:	vcmp.f32	s23, s25
   13d78:	vmrs	APSR_nzcv, fpscr
   13d7c:	vcvt.u32.f64	s14, d7
   13d80:	vmov	r2, s14
   13d84:	strh	r2, [r3, r6]
   13d88:	bne	13e60 <XRRGetOutputInfo@plt+0x2400>
   13d8c:	vldr	s15, [r4, #244]	; 0xf4
   13d90:	vcmp.f32	s15, s25
   13d94:	vmrs	APSR_nzcv, fpscr
   13d98:	bne	13e60 <XRRGetOutputInfo@plt+0x2400>
   13d9c:	vmul.f64	d7, d13, d8
   13da0:	ldr	r3, [r8, #8]
   13da4:	vcmp.f32	s22, s25
   13da8:	vmrs	APSR_nzcv, fpscr
   13dac:	vcvt.u32.f64	s14, d7
   13db0:	vmov	r2, s14
   13db4:	strh	r2, [r3, r6]
   13db8:	bne	13ea8 <XRRGetOutputInfo@plt+0x2448>
   13dbc:	vldr	s15, [r4, #244]	; 0xf4
   13dc0:	vcmp.f32	s15, s25
   13dc4:	vmrs	APSR_nzcv, fpscr
   13dc8:	bne	13ea8 <XRRGetOutputInfo@plt+0x2448>
   13dcc:	vmul.f64	d13, d13, d8
   13dd0:	ldr	r3, [r8, #12]
   13dd4:	add	r5, r5, #1
   13dd8:	cmp	r9, r5
   13ddc:	vcvt.u32.f64	s26, d13
   13de0:	vmov	r2, s26
   13de4:	strh	r2, [r3, r6]
   13de8:	beq	13ef0 <XRRGetOutputInfo@plt+0x2490>
   13dec:	vmov	s15, r5
   13df0:	vcmp.f32	s24, s25
   13df4:	lsl	r6, r5, #1
   13df8:	vcvt.f64.s32	d7, s15
   13dfc:	vmrs	APSR_nzcv, fpscr
   13e00:	vdiv.f64	d13, d7, d10
   13e04:	bne	13e18 <XRRGetOutputInfo@plt+0x23b8>
   13e08:	vldr	s15, [r4, #244]	; 0xf4
   13e0c:	vcmp.f32	s15, s25
   13e10:	vmrs	APSR_nzcv, fpscr
   13e14:	beq	13d6c <XRRGetOutputInfo@plt+0x230c>
   13e18:	vcvt.f64.f32	d1, s24
   13e1c:	vmov.f64	d0, d13
   13e20:	bl	11700 <pow@plt>
   13e24:	vldr	s14, [r4, #244]	; 0xf4
   13e28:	ldr	r2, [r8, #4]
   13e2c:	vcvt.f64.f32	d7, s14
   13e30:	vmul.f64	d0, d7, d0
   13e34:	vcmpe.f64	d0, d9
   13e38:	vmrs	APSR_nzcv, fpscr
   13e3c:	vcmp.f32	s23, s25
   13e40:	vmulmi.f64	d0, d0, d8
   13e44:	movpl	r3, r7
   13e48:	vcvtmi.u32.f64	s0, d0
   13e4c:	vmovmi	r3, s0
   13e50:	uxthmi	r3, r3
   13e54:	vmrs	APSR_nzcv, fpscr
   13e58:	strh	r3, [r2, r6]
   13e5c:	beq	13d8c <XRRGetOutputInfo@plt+0x232c>
   13e60:	vcvt.f64.f32	d1, s23
   13e64:	vmov.f64	d0, d13
   13e68:	bl	11700 <pow@plt>
   13e6c:	vldr	s14, [r4, #244]	; 0xf4
   13e70:	ldr	r2, [r8, #8]
   13e74:	vcvt.f64.f32	d7, s14
   13e78:	vmul.f64	d0, d7, d0
   13e7c:	vcmpe.f64	d0, d9
   13e80:	vmrs	APSR_nzcv, fpscr
   13e84:	vcmp.f32	s22, s25
   13e88:	vmulmi.f64	d0, d0, d8
   13e8c:	movpl	r3, r7
   13e90:	vcvtmi.u32.f64	s0, d0
   13e94:	vmovmi	r3, s0
   13e98:	uxthmi	r3, r3
   13e9c:	vmrs	APSR_nzcv, fpscr
   13ea0:	strh	r3, [r2, r6]
   13ea4:	beq	13dbc <XRRGetOutputInfo@plt+0x235c>
   13ea8:	vmov.f64	d0, d13
   13eac:	vcvt.f64.f32	d1, s22
   13eb0:	bl	11700 <pow@plt>
   13eb4:	vldr	s14, [r4, #244]	; 0xf4
   13eb8:	ldr	r2, [r8, #12]
   13ebc:	add	r5, r5, #1
   13ec0:	vcvt.f64.f32	d7, s14
   13ec4:	vmul.f64	d0, d7, d0
   13ec8:	vcmpe.f64	d0, d9
   13ecc:	vmrs	APSR_nzcv, fpscr
   13ed0:	vmulmi.f64	d0, d0, d8
   13ed4:	movpl	r3, r7
   13ed8:	vcvtmi.u32.f64	s0, d0
   13edc:	vmovmi	r3, s0
   13ee0:	uxthmi	r3, r3
   13ee4:	cmp	r9, r5
   13ee8:	strh	r3, [r2, r6]
   13eec:	bne	13dec <XRRGetOutputInfo@plt+0x238c>
   13ef0:	ldr	r3, [pc, #-400]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13ef4:	ldr	r1, [sl, #8]
   13ef8:	mov	r2, r8
   13efc:	ldr	r0, [r3, #24]
   13f00:	bl	11940 <XRRSetCrtcGamma@plt>
   13f04:	mov	r0, r8
   13f08:	bl	116a0 <free@plt>
   13f0c:	ldr	r4, [r4]
   13f10:	cmp	r4, #0
   13f14:	bne	13c74 <XRRGetOutputInfo@plt+0x2214>
   13f18:	ldr	r3, [fp, #-320]	; 0xfffffec0
   13f1c:	ldr	r3, [r3, #12]
   13f20:	cmp	r3, #0
   13f24:	bne	14cc0 <XRRGetOutputInfo@plt+0x3260>
   13f28:	ldr	r3, [pc, #-456]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13f2c:	ldr	r3, [r3, #36]	; 0x24
   13f30:	ldr	r3, [r3, #8]
   13f34:	cmp	r3, #0
   13f38:	movgt	r6, #0
   13f3c:	movgt	r7, r6
   13f40:	movgt	r8, #2
   13f44:	movgt	r9, #1
   13f48:	ble	14004 <XRRGetOutputInfo@plt+0x25a4>
   13f4c:	ldr	r3, [pc, #-492]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13f50:	ldr	r4, [r3, #8]
   13f54:	add	r4, r4, r6
   13f58:	ldr	r5, [r4, #20]
   13f5c:	ldr	r3, [r5, #20]
   13f60:	cmp	r3, #0
   13f64:	beq	13fe8 <XRRGetOutputInfo@plt+0x2588>
   13f68:	ldr	r2, [r4, #24]
   13f6c:	cmp	r2, #0
   13f70:	beq	13fd4 <XRRGetOutputInfo@plt+0x2574>
   13f74:	sub	r0, fp, #204	; 0xcc
   13f78:	str	r8, [fp, #-204]	; 0xffffff34
   13f7c:	str	r3, [fp, #-196]	; 0xffffff3c
   13f80:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   13f84:	cmp	r0, #0
   13f88:	beq	15cec <XRRGetOutputInfo@plt+0x428c>
   13f8c:	sub	r3, fp, #204	; 0xcc
   13f90:	add	r2, r4, #52	; 0x34
   13f94:	ldrh	r1, [r5, #24]
   13f98:	bl	1824c <XRRGetOutputInfo@plt+0x67ec>
   13f9c:	ldr	r0, [pc, #-572]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13fa0:	ldr	r3, [r5, #4]
   13fa4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13fa8:	ldr	r2, [r0, #92]	; 0x5c
   13fac:	add	r3, r3, r1
   13fb0:	cmp	r3, r2
   13fb4:	bgt	13fd0 <XRRGetOutputInfo@plt+0x2570>
   13fb8:	ldr	r3, [r5, #8]
   13fbc:	ldr	r1, [fp, #-192]	; 0xffffff40
   13fc0:	ldr	r2, [r0, #88]	; 0x58
   13fc4:	add	r3, r3, r1
   13fc8:	cmp	r3, r2
   13fcc:	ble	13fe8 <XRRGetOutputInfo@plt+0x2588>
   13fd0:	str	r9, [r4, #16]
   13fd4:	add	r1, r4, #12
   13fd8:	add	r0, r4, #8
   13fdc:	bl	17b54 <XRRGetOutputInfo@plt+0x60f4>
   13fe0:	cmp	r0, #0
   13fe4:	bne	15894 <XRRGetOutputInfo@plt+0x3e34>
   13fe8:	ldr	r3, [pc, #-648]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   13fec:	add	r7, r7, #1
   13ff0:	add	r6, r6, #148	; 0x94
   13ff4:	ldr	r3, [r3, #36]	; 0x24
   13ff8:	ldr	r3, [r3, #8]
   13ffc:	cmp	r7, r3
   14000:	blt	13f4c <XRRGetOutputInfo@plt+0x24ec>
   14004:	ldr	ip, [pc, #-676]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14008:	ldr	r2, [fp, #-320]	; 0xfffffec0
   1400c:	mov	r1, #80	; 0x50
   14010:	ldr	r3, [ip, #24]
   14014:	ldr	r2, [r2, #4]
   14018:	ldr	r0, [r3, #140]	; 0x8c
   1401c:	ldr	r3, [ip, #92]	; 0x5c
   14020:	mla	r1, r1, r2, r0
   14024:	ldr	r0, [r1, #12]
   14028:	cmp	r0, r3
   1402c:	beq	14c4c <XRRGetOutputInfo@plt+0x31ec>
   14030:	ldr	r1, [pc, #-720]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14034:	ldr	r1, [r1, #28]
   14038:	cmp	r1, #0
   1403c:	bne	14c8c <XRRGetOutputInfo@plt+0x322c>
   14040:	ldr	r2, [pc, #-736]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14044:	ldr	r3, [r2, #32]
   14048:	cmp	r3, #0
   1404c:	bne	1407c <XRRGetOutputInfo@plt+0x261c>
   14050:	ldr	r3, [r2, #96]	; 0x60
   14054:	mov	r1, r2
   14058:	str	r3, [sp, #4]
   1405c:	mov	r0, r1
   14060:	ldr	r3, [r2, #100]	; 0x64
   14064:	str	r3, [sp]
   14068:	ldr	r3, [r2, #88]	; 0x58
   1406c:	ldr	r1, [r1, #40]	; 0x28
   14070:	ldr	r2, [r2, #92]	; 0x5c
   14074:	ldr	r0, [r0, #24]
   14078:	bl	11790 <XRRSetScreenSize@plt>
   1407c:	ldr	r3, [pc, #-796]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14080:	ldr	r3, [r3, #36]	; 0x24
   14084:	ldr	r3, [r3, #8]
   14088:	cmp	r3, #0
   1408c:	movgt	r5, #0
   14090:	ldrgt	r8, [pc, #-856]	; 13d40 <XRRGetOutputInfo@plt+0x22e0>
   14094:	movgt	r6, r5
   14098:	ble	1422c <XRRGetOutputInfo@plt+0x27cc>
   1409c:	ldr	r3, [pc, #-828]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   140a0:	ldr	r4, [r3, #8]
   140a4:	add	r4, r4, r5
   140a8:	ldr	r3, [r4, #16]
   140ac:	cmp	r3, #0
   140b0:	beq	14210 <XRRGetOutputInfo@plt+0x27b0>
   140b4:	ldr	r9, [r4, #24]
   140b8:	cmp	r9, #0
   140bc:	beq	14210 <XRRGetOutputInfo@plt+0x27b0>
   140c0:	ldr	sl, [r4, #48]	; 0x30
   140c4:	mov	r1, #4
   140c8:	mov	r0, sl
   140cc:	bl	11628 <calloc@plt>
   140d0:	subs	r7, r0, #0
   140d4:	beq	14464 <XRRGetOutputInfo@plt+0x2a04>
   140d8:	cmp	sl, #0
   140dc:	addgt	r1, r7, sl, lsl #2
   140e0:	subgt	r1, r1, #4
   140e4:	subgt	r3, r7, #4
   140e8:	rsbgt	r0, r7, #4
   140ec:	ble	1410c <XRRGetOutputInfo@plt+0x26ac>
   140f0:	ldr	r2, [r4, #44]	; 0x2c
   140f4:	add	r2, r2, r3
   140f8:	ldr	r2, [r2, r0]
   140fc:	ldr	r2, [r2, #20]
   14100:	str	r2, [r3, #4]!
   14104:	cmp	r1, r3
   14108:	bne	140f0 <XRRGetOutputInfo@plt+0x2690>
   1410c:	ldr	r3, [pc, #-940]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14110:	ldr	sl, [r9]
   14114:	ldr	r3, [r3, #28]
   14118:	cmp	r3, #0
   1411c:	bne	14298 <XRRGetOutputInfo@plt+0x2838>
   14120:	ldr	r3, [pc, #-960]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14124:	ldr	r3, [r3, #32]
   14128:	cmp	r3, #0
   1412c:	bne	1428c <XRRGetOutputInfo@plt+0x282c>
   14130:	add	r9, r4, #100	; 0x64
   14134:	mov	r1, r9
   14138:	add	r0, r4, #52	; 0x34
   1413c:	bl	17af0 <XRRGetOutputInfo@plt+0x6090>
   14140:	cmp	r0, #0
   14144:	beq	1430c <XRRGetOutputInfo@plt+0x28ac>
   14148:	ldr	r0, [pc, #-1000]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   1414c:	ldr	r3, [r4, #48]	; 0x30
   14150:	ldr	r2, [r4, #8]
   14154:	ldr	r1, [r0, #36]	; 0x24
   14158:	ldr	r0, [r0, #24]
   1415c:	str	r3, [sp, #20]
   14160:	str	r7, [sp, #16]
   14164:	ldrh	r3, [r4, #40]	; 0x28
   14168:	str	sl, [sp, #8]
   1416c:	str	r3, [sp, #12]
   14170:	ldr	r3, [r4, #36]	; 0x24
   14174:	str	r3, [sp, #4]
   14178:	ldr	r3, [r4, #32]
   1417c:	str	r3, [sp]
   14180:	mov	r3, #0
   14184:	bl	1185c <XRRSetCrtcConfig@plt>
   14188:	subs	r9, r0, #0
   1418c:	beq	141cc <XRRGetOutputInfo@plt+0x276c>
   14190:	mov	r0, r7
   14194:	bl	116a0 <free@plt>
   14198:	ldr	r1, [r4, #12]
   1419c:	mov	r0, r9
   141a0:	bl	17c64 <XRRGetOutputInfo@plt+0x6204>
   141a4:	ldr	r2, [pc, #-1128]	; 13d44 <XRRGetOutputInfo@plt+0x22e4>
   141a8:	b	129d8 <XRRGetOutputInfo@plt+0xf78>
   141ac:	ldr	r3, [pc, #-1100]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   141b0:	ldr	r1, [pc, #-1136]	; 13d48 <XRRGetOutputInfo@plt+0x22e8>
   141b4:	mov	r0, #1
   141b8:	ldr	r2, [r3, #12]
   141bc:	ldr	r3, [pc, #-1144]	; 13d4c <XRRGetOutputInfo@plt+0x22ec>
   141c0:	bl	11910 <__printf_chk@plt>
   141c4:	mov	r0, #0
   141c8:	bl	11814 <exit@plt>
   141cc:	ldr	r3, [r4, #28]
   141d0:	cmp	r3, #0
   141d4:	beq	1428c <XRRGetOutputInfo@plt+0x282c>
   141d8:	ldr	r1, [pc, #-1144]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   141dc:	ldr	r2, [r1, #68]	; 0x44
   141e0:	cmp	r2, #0
   141e4:	beq	1588c <XRRGetOutputInfo@plt+0x3e2c>
   141e8:	mov	r0, r1
   141ec:	ldr	r2, [r4, #8]
   141f0:	ldr	r1, [r1, #36]	; 0x24
   141f4:	ldr	r0, [r0, #24]
   141f8:	bl	11a18 <XRRSetPanning@plt>
   141fc:	mov	r9, r0
   14200:	mov	r0, r7
   14204:	bl	116a0 <free@plt>
   14208:	cmp	r9, #0
   1420c:	bne	14198 <XRRGetOutputInfo@plt+0x2738>
   14210:	ldr	r3, [pc, #-1200]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14214:	add	r6, r6, #1
   14218:	add	r5, r5, #148	; 0x94
   1421c:	ldr	r3, [r3, #36]	; 0x24
   14220:	ldr	r3, [r3, #8]
   14224:	cmp	r6, r3
   14228:	blt	1409c <XRRGetOutputInfo@plt+0x263c>
   1422c:	ldr	r3, [pc, #-1228]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14230:	ldr	r3, [r3, #84]	; 0x54
   14234:	cmp	r3, #0
   14238:	bne	1431c <XRRGetOutputInfo@plt+0x28bc>
   1423c:	ldr	r3, [pc, #-1244]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14240:	ldr	r4, [r3]
   14244:	cmp	r4, #0
   14248:	bne	1425c <XRRGetOutputInfo@plt+0x27fc>
   1424c:	b	14330 <XRRGetOutputInfo@plt+0x28d0>
   14250:	ldr	r4, [r4]
   14254:	cmp	r4, #0
   14258:	beq	14330 <XRRGetOutputInfo@plt+0x28d0>
   1425c:	ldr	r3, [r4, #4]
   14260:	tst	r3, #4096	; 0x1000
   14264:	beq	14250 <XRRGetOutputInfo@plt+0x27f0>
   14268:	ldr	r3, [r4, #248]	; 0xf8
   1426c:	cmp	r3, #0
   14270:	beq	14250 <XRRGetOutputInfo@plt+0x27f0>
   14274:	ldr	r3, [pc, #-1300]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14278:	ldr	r2, [r4, #20]
   1427c:	ldr	r1, [r3, #40]	; 0x28
   14280:	ldr	r0, [r3, #24]
   14284:	bl	116e8 <XRRSetOutputPrimary@plt>
   14288:	b	14250 <XRRGetOutputInfo@plt+0x27f0>
   1428c:	mov	r0, r7
   14290:	bl	116a0 <free@plt>
   14294:	b	14210 <XRRGetOutputInfo@plt+0x27b0>
   14298:	mov	r0, r9
   1429c:	bl	171d0 <XRRGetOutputInfo@plt+0x5770>
   142a0:	ldr	r3, [r4, #36]	; 0x24
   142a4:	ldr	r1, [pc, #-1372]	; 13d50 <XRRGetOutputInfo@plt+0x22f0>
   142a8:	str	r3, [sp, #12]
   142ac:	ldr	r3, [r4, #32]
   142b0:	mov	r0, #1
   142b4:	str	r3, [sp, #8]
   142b8:	vstr	d0, [sp]
   142bc:	ldr	r3, [r9, #44]	; 0x2c
   142c0:	ldr	r2, [r4, #12]
   142c4:	bl	11910 <__printf_chk@plt>
   142c8:	ldr	r3, [r4, #48]	; 0x30
   142cc:	cmp	r3, #0
   142d0:	movgt	r9, #0
   142d4:	ble	14300 <XRRGetOutputInfo@plt+0x28a0>
   142d8:	ldr	r3, [r4, #44]	; 0x2c
   142dc:	mov	r0, #1
   142e0:	mov	r1, r8
   142e4:	ldr	r3, [r3, r9, lsl #2]
   142e8:	add	r9, r9, r0
   142ec:	ldr	r2, [r3, #16]
   142f0:	bl	11910 <__printf_chk@plt>
   142f4:	ldr	r3, [r4, #48]	; 0x30
   142f8:	cmp	r9, r3
   142fc:	blt	142d8 <XRRGetOutputInfo@plt+0x2878>
   14300:	mov	r0, #10
   14304:	bl	118e0 <putchar@plt>
   14308:	b	14120 <XRRGetOutputInfo@plt+0x26c0>
   1430c:	mov	r1, r9
   14310:	add	r0, r4, #8
   14314:	bl	17bd0 <XRRGetOutputInfo@plt+0x6170>
   14318:	b	14148 <XRRGetOutputInfo@plt+0x26e8>
   1431c:	ldr	r3, [pc, #-1468]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14320:	mov	r2, #0
   14324:	ldr	r1, [r3, #40]	; 0x28
   14328:	ldr	r0, [r3, #24]
   1432c:	bl	116e8 <XRRSetOutputPrimary@plt>
   14330:	ldr	r3, [fp, #-320]	; 0xfffffec0
   14334:	ldr	r3, [r3, #12]
   14338:	cmp	r3, #0
   1433c:	bne	14cd0 <XRRGetOutputInfo@plt+0x3270>
   14340:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14344:	cmp	r3, #0
   14348:	bne	121c0 <XRRGetOutputInfo@plt+0x760>
   1434c:	ldr	r3, [pc, #-1516]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14350:	ldr	r4, [fp, #-328]	; 0xfffffeb8
   14354:	ldr	r0, [r3, #24]
   14358:	mov	r1, r4
   1435c:	bl	11904 <XSync@plt>
   14360:	mov	r0, r4
   14364:	bl	11814 <exit@plt>
   14368:	mov	r2, #0
   1436c:	str	r2, [r5, #48]	; 0x30
   14370:	ldr	r3, [pc, #-1552]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14374:	ldr	r0, [r3]
   14378:	cmp	r0, #0
   1437c:	movne	r3, r0
   14380:	beq	14398 <XRRGetOutputInfo@plt+0x2938>
   14384:	ldr	r2, [r3, #48]	; 0x30
   14388:	str	r2, [r3, #52]	; 0x34
   1438c:	ldr	r3, [r3]
   14390:	cmp	r3, #0
   14394:	bne	14384 <XRRGetOutputInfo@plt+0x2924>
   14398:	cmp	r9, #0
   1439c:	ble	138a0 <XRRGetOutputInfo@plt+0x1e40>
   143a0:	ldr	r3, [pc, #-1600]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   143a4:	ldr	r5, [fp, #-268]	; 0xfffffef4
   143a8:	mov	lr, #0
   143ac:	ldr	r4, [r3, #8]
   143b0:	add	r8, r5, r8
   143b4:	mov	r2, r5
   143b8:	mov	r3, r4
   143bc:	ldr	r1, [r3, #20]
   143c0:	add	r3, r3, #148	; 0x94
   143c4:	ldr	ip, [r1, #28]
   143c8:	str	lr, [r1, #28]
   143cc:	str	ip, [r2], #4
   143d0:	cmp	r8, r2
   143d4:	bne	143bc <XRRGetOutputInfo@plt+0x295c>
   143d8:	bl	18770 <XRRGetOutputInfo@plt+0x6d10>
   143dc:	ldr	r3, [r4, #20]
   143e0:	ldr	r2, [r5], #4
   143e4:	add	r4, r4, #148	; 0x94
   143e8:	cmp	r8, r5
   143ec:	str	r2, [r3, #28]
   143f0:	bne	143dc <XRRGetOutputInfo@plt+0x297c>
   143f4:	b	138a4 <XRRGetOutputInfo@plt+0x1e44>
   143f8:	ldr	r1, [r4, #12]
   143fc:	ldr	r3, [r4, #36]	; 0x24
   14400:	cmp	r2, r1
   14404:	ldr	r1, [r4, #44]	; 0x2c
   14408:	bne	136e8 <XRRGetOutputInfo@plt+0x1c88>
   1440c:	orrs	r3, r1, r3
   14410:	bne	136e8 <XRRGetOutputInfo@plt+0x1c88>
   14414:	ldr	r3, [r4, #32]
   14418:	cmp	r3, #0
   1441c:	beq	12a3c <XRRGetOutputInfo@plt+0xfdc>
   14420:	ldr	r0, [r4, #24]
   14424:	ldr	r1, [r4, #8]
   14428:	cmp	r0, r1
   1442c:	bne	136e8 <XRRGetOutputInfo@plt+0x1c88>
   14430:	ldr	r1, [r4, #16]
   14434:	cmp	r3, r1
   14438:	bne	136e8 <XRRGetOutputInfo@plt+0x1c88>
   1443c:	ldr	r3, [r4, #40]	; 0x28
   14440:	cmp	r3, #0
   14444:	ldr	r3, [r4, #48]	; 0x30
   14448:	bne	136ec <XRRGetOutputInfo@plt+0x1c8c>
   1444c:	cmp	r3, #0
   14450:	beq	12a3c <XRRGetOutputInfo@plt+0xfdc>
   14454:	b	136ec <XRRGetOutputInfo@plt+0x1c8c>
   14458:	mov	r0, #32
   1445c:	bl	118e0 <putchar@plt>
   14460:	b	12d28 <XRRGetOutputInfo@plt+0x12c8>
   14464:	mov	r9, #11
   14468:	b	14198 <XRRGetOutputInfo@plt+0x2738>
   1446c:	ldr	r2, [pc, #-1824]	; 13d54 <XRRGetOutputInfo@plt+0x22f4>
   14470:	b	129d8 <XRRGetOutputInfo@plt+0xf78>
   14474:	mov	r0, #52	; 0x34
   14478:	bl	117b4 <malloc@plt>
   1447c:	str	r0, [r6, #28]
   14480:	ldr	r6, [r4, #48]	; 0x30
   14484:	b	13bec <XRRGetOutputInfo@plt+0x218c>
   14488:	ldr	r2, [pc, #-1848]	; 13d58 <XRRGetOutputInfo@plt+0x22f8>
   1448c:	add	r3, r2, r3, lsl #2
   14490:	ldr	r2, [r3, #128]	; 0x80
   14494:	b	129a0 <XRRGetOutputInfo@plt+0xf40>
   14498:	mov	r0, #1
   1449c:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   144a0:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   144a4:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   144a8:	ldr	r3, [pc, #-1864]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   144ac:	ldr	r4, [r3, #116]	; 0x74
   144b0:	cmp	r4, #0
   144b4:	beq	14518 <XRRGetOutputInfo@plt+0x2ab8>
   144b8:	ldr	r3, [r4, #4]
   144bc:	cmp	r3, #3
   144c0:	ldrls	pc, [pc, r3, lsl #2]
   144c4:	b	1450c <XRRGetOutputInfo@plt+0x2aac>
   144c8:	andeq	r4, r1, ip, ror #10
   144cc:	andeq	r4, r1, r8, asr #10
   144d0:	andeq	r4, r1, r4, lsl #11
   144d4:	ldrdeq	r4, [r1], -r8
   144d8:	add	r0, r4, #64	; 0x40
   144dc:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   144e0:	subs	r5, r0, #0
   144e4:	beq	157c4 <XRRGetOutputInfo@plt+0x3d64>
   144e8:	add	r0, r4, #80	; 0x50
   144ec:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   144f0:	cmp	r0, #0
   144f4:	beq	158e8 <XRRGetOutputInfo@plt+0x3e88>
   144f8:	ldr	r3, [pc, #-1944]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   144fc:	ldr	r2, [r0]
   14500:	ldr	r1, [r5, #20]
   14504:	ldr	r0, [r3, #24]
   14508:	bl	11a54 <XRRDeleteOutputMode@plt>
   1450c:	ldr	r4, [r4]
   14510:	cmp	r4, #0
   14514:	bne	144b8 <XRRGetOutputInfo@plt+0x2a58>
   14518:	ldr	r2, [fp, #-280]	; 0xfffffee8
   1451c:	ldr	r3, [fp, #-312]	; 0xfffffec8
   14520:	orr	r3, r3, r2
   14524:	ldr	r2, [fp, #-328]	; 0xfffffeb8
   14528:	orrs	r4, r3, r2
   1452c:	bne	11e40 <XRRGetOutputInfo@plt+0x3e0>
   14530:	ldr	r3, [pc, #-2000]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14534:	mov	r1, r4
   14538:	ldr	r0, [r3, #24]
   1453c:	bl	11904 <XSync@plt>
   14540:	mov	r0, r4
   14544:	bl	11814 <exit@plt>
   14548:	add	r0, r4, #80	; 0x50
   1454c:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   14550:	cmp	r0, #0
   14554:	beq	158dc <XRRGetOutputInfo@plt+0x3e7c>
   14558:	ldr	r3, [pc, #-2040]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   1455c:	ldr	r1, [r0]
   14560:	ldr	r0, [r3, #24]
   14564:	bl	11844 <XRRDestroyMode@plt>
   14568:	b	1450c <XRRGetOutputInfo@plt+0x2aac>
   1456c:	ldr	r3, [pc, #-2060]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14570:	add	r2, r4, #8
   14574:	ldr	r1, [r3, #40]	; 0x28
   14578:	ldr	r0, [r3, #24]
   1457c:	bl	11820 <XRRCreateMode@plt>
   14580:	b	1450c <XRRGetOutputInfo@plt+0x2aac>
   14584:	add	r0, r4, #64	; 0x40
   14588:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   1458c:	subs	r5, r0, #0
   14590:	beq	158a8 <XRRGetOutputInfo@plt+0x3e48>
   14594:	add	r0, r4, #80	; 0x50
   14598:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   1459c:	cmp	r0, #0
   145a0:	beq	1589c <XRRGetOutputInfo@plt+0x3e3c>
   145a4:	ldr	r3, [pc, #-2116]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   145a8:	ldr	r2, [r0]
   145ac:	ldr	r1, [r5, #20]
   145b0:	ldr	r0, [r3, #24]
   145b4:	bl	11874 <XRRAddOutputMode@plt>
   145b8:	b	1450c <XRRGetOutputInfo@plt+0x2aac>
   145bc:	mov	r0, #1
   145c0:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   145c4:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   145c8:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   145cc:	ldr	r3, [pc, #-2156]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   145d0:	ldr	r3, [r3]
   145d4:	str	r3, [fp, #-280]	; 0xfffffee8
   145d8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   145dc:	cmp	r3, #0
   145e0:	beq	14c0c <XRRGetOutputInfo@plt+0x31ac>
   145e4:	ldr	r3, [fp, #-280]	; 0xfffffee8
   145e8:	ldr	r3, [r3, #8]
   145ec:	cmp	r3, #0
   145f0:	str	r3, [fp, #-276]	; 0xfffffeec
   145f4:	beq	148fc <XRRGetOutputInfo@plt+0x2e9c>
   145f8:	sub	r3, fp, #212	; 0xd4
   145fc:	str	r3, [fp, #-304]	; 0xfffffed0
   14600:	sub	r3, fp, #216	; 0xd8
   14604:	str	r3, [fp, #-300]	; 0xfffffed4
   14608:	sub	r3, fp, #220	; 0xdc
   1460c:	str	r3, [fp, #-296]	; 0xfffffed8
   14610:	sub	r3, fp, #224	; 0xe0
   14614:	str	r3, [fp, #-292]	; 0xfffffedc
   14618:	b	146c0 <XRRGetOutputInfo@plt+0x2c60>
   1461c:	ldr	r3, [fp, #-276]	; 0xfffffeec
   14620:	sub	r2, fp, #232	; 0xe8
   14624:	ldr	r1, [pc, #-2256]	; 13d5c <XRRGetOutputInfo@plt+0x22fc>
   14628:	ldr	r0, [r3, #8]
   1462c:	bl	118a4 <__isoc99_sscanf@plt>
   14630:	cmp	r0, #1
   14634:	beq	1490c <XRRGetOutputInfo@plt+0x2eac>
   14638:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1463c:	sub	r2, fp, #232	; 0xe8
   14640:	ldr	r1, [pc, #-2280]	; 13d60 <XRRGetOutputInfo@plt+0x2300>
   14644:	ldr	r0, [r3, #8]
   14648:	bl	118a4 <__isoc99_sscanf@plt>
   1464c:	cmp	r0, #1
   14650:	beq	1490c <XRRGetOutputInfo@plt+0x2eac>
   14654:	ldr	r3, [fp, #-276]	; 0xfffffeec
   14658:	mov	r4, #0
   1465c:	mov	r7, #8
   14660:	ldr	r5, [r3, #8]
   14664:	mov	r9, #31
   14668:	mov	r0, r5
   1466c:	bl	11838 <strlen@plt>
   14670:	str	r0, [fp, #-268]	; 0xfffffef4
   14674:	ldr	r3, [fp, #-280]	; 0xfffffee8
   14678:	ldr	ip, [fp, #-268]	; 0xfffffef4
   1467c:	ldr	r2, [fp, #-284]	; 0xfffffee4
   14680:	ldr	r1, [r3, #20]
   14684:	ldr	r3, [pc, #-2340]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14688:	ldr	r0, [r3, #24]
   1468c:	str	ip, [sp, #12]
   14690:	mov	ip, #0
   14694:	mov	r3, r9
   14698:	str	r5, [sp, #8]
   1469c:	stm	sp, {r7, ip}
   146a0:	bl	11a00 <XRRChangeOutputProperty@plt>
   146a4:	mov	r0, r4
   146a8:	bl	116a0 <free@plt>
   146ac:	ldr	r3, [fp, #-276]	; 0xfffffeec
   146b0:	ldr	r3, [r3]
   146b4:	cmp	r3, #0
   146b8:	str	r3, [fp, #-276]	; 0xfffffeec
   146bc:	beq	148fc <XRRGetOutputInfo@plt+0x2e9c>
   146c0:	ldr	r3, [fp, #-276]	; 0xfffffeec
   146c4:	ldr	r4, [pc, #-2404]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   146c8:	mov	r2, #0
   146cc:	ldr	r1, [r3, #4]
   146d0:	ldr	r0, [r4, #24]
   146d4:	bl	11898 <XInternAtom@plt>
   146d8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   146dc:	sub	ip, fp, #228	; 0xe4
   146e0:	ldr	r1, [r3, #20]
   146e4:	mov	r3, #100	; 0x64
   146e8:	str	r0, [fp, #-284]	; 0xfffffee4
   146ec:	mov	r2, r0
   146f0:	ldr	r0, [r4, #24]
   146f4:	str	ip, [sp, #32]
   146f8:	ldr	ip, [fp, #-300]	; 0xfffffed4
   146fc:	str	ip, [sp, #28]
   14700:	ldr	ip, [fp, #-296]	; 0xfffffed8
   14704:	str	ip, [sp, #24]
   14708:	ldr	ip, [fp, #-292]	; 0xfffffedc
   1470c:	str	ip, [sp, #20]
   14710:	ldr	ip, [fp, #-304]	; 0xfffffed0
   14714:	str	ip, [sp, #16]
   14718:	mov	ip, #0
   1471c:	str	ip, [sp, #12]
   14720:	stm	sp, {r3, ip}
   14724:	str	ip, [sp, #8]
   14728:	mov	r3, ip
   1472c:	bl	119b8 <XRRGetOutputProperty@plt>
   14730:	cmp	r0, #0
   14734:	bne	1461c <XRRGetOutputInfo@plt+0x2bbc>
   14738:	ldr	r3, [fp, #-280]	; 0xfffffee8
   1473c:	ldr	r2, [fp, #-284]	; 0xfffffee4
   14740:	ldr	r0, [r4, #24]
   14744:	ldr	r1, [r3, #20]
   14748:	bl	119ac <XRRQueryOutputProperty@plt>
   1474c:	cmp	r0, #0
   14750:	beq	1461c <XRRGetOutputInfo@plt+0x2bbc>
   14754:	ldr	r9, [fp, #-212]	; 0xffffff2c
   14758:	ldr	r7, [fp, #-224]	; 0xffffff20
   1475c:	cmp	r9, #19
   14760:	cmpne	r9, #6
   14764:	bne	14788 <XRRGetOutputInfo@plt+0x2d28>
   14768:	cmp	r7, #16
   1476c:	beq	148f0 <XRRGetOutputInfo@plt+0x2e90>
   14770:	cmp	r7, #32
   14774:	beq	147a4 <XRRGetOutputInfo@plt+0x2d44>
   14778:	cmp	r7, #8
   1477c:	moveq	r3, #1
   14780:	streq	r3, [fp, #-264]	; 0xfffffef8
   14784:	beq	147ac <XRRGetOutputInfo@plt+0x2d4c>
   14788:	cmp	r9, #0
   1478c:	beq	1461c <XRRGetOutputInfo@plt+0x2bbc>
   14790:	cmp	r9, #4
   14794:	beq	15c98 <XRRGetOutputInfo@plt+0x4238>
   14798:	cmp	r9, #31
   1479c:	beq	14654 <XRRGetOutputInfo@plt+0x2bf4>
   147a0:	b	146ac <XRRGetOutputInfo@plt+0x2c4c>
   147a4:	mov	r3, #4
   147a8:	str	r3, [fp, #-264]	; 0xfffffef8
   147ac:	ldr	r3, [fp, #-276]	; 0xfffffeec
   147b0:	ldr	r0, [r3, #8]
   147b4:	bl	11718 <strdup@plt>
   147b8:	ldr	r1, [pc, #-2652]	; 13d64 <XRRGetOutputInfo@plt+0x2304>
   147bc:	str	r0, [fp, #-288]	; 0xfffffee0
   147c0:	bl	1197c <strtok@plt>
   147c4:	subs	sl, r0, #0
   147c8:	beq	14c34 <XRRGetOutputInfo@plt+0x31d4>
   147cc:	mov	r4, #0
   147d0:	sub	r3, fp, #204	; 0xcc
   147d4:	mov	r5, r4
   147d8:	ldr	r6, [fp, #-264]	; 0xfffffef8
   147dc:	str	r3, [fp, #-272]	; 0xfffffef0
   147e0:	mov	r8, sl
   147e4:	b	14858 <XRRGetOutputInfo@plt+0x2df8>
   147e8:	sub	ip, r7, #16
   147ec:	clz	ip, ip
   147f0:	lsr	ip, ip, #5
   147f4:	tst	r1, ip
   147f8:	bne	148c4 <XRRGetOutputInfo@plt+0x2e64>
   147fc:	sub	lr, r7, #32
   14800:	clz	lr, lr
   14804:	lsr	lr, lr, #5
   14808:	tst	r1, lr
   1480c:	bne	14834 <XRRGetOutputInfo@plt+0x2dd4>
   14810:	sub	r1, r9, #6
   14814:	clz	r1, r1
   14818:	lsr	r1, r1, #5
   1481c:	tst	r0, r1
   14820:	bne	148bc <XRRGetOutputInfo@plt+0x2e5c>
   14824:	tst	ip, r1
   14828:	bne	148c4 <XRRGetOutputInfo@plt+0x2e64>
   1482c:	tst	lr, r1
   14830:	beq	14bf8 <XRRGetOutputInfo@plt+0x3198>
   14834:	str	sl, [r5, r4, lsl #2]
   14838:	ldr	r1, [pc, #-2780]	; 13d64 <XRRGetOutputInfo@plt+0x2304>
   1483c:	mov	r0, #0
   14840:	bl	1197c <strtok@plt>
   14844:	ldr	r3, [fp, #-264]	; 0xfffffef8
   14848:	mov	r4, r8
   1484c:	add	r6, r6, r3
   14850:	subs	r8, r0, #0
   14854:	beq	148d0 <XRRGetOutputInfo@plt+0x2e70>
   14858:	ldr	r1, [fp, #-272]	; 0xfffffef0
   1485c:	mov	r2, #0
   14860:	mov	r0, r8
   14864:	bl	11664 <strtol@plt>
   14868:	ldr	r1, [fp, #-204]	; 0xffffff34
   1486c:	cmp	r8, r1
   14870:	mov	sl, r0
   14874:	beq	14c44 <XRRGetOutputInfo@plt+0x31e4>
   14878:	ldrb	r1, [r1]
   1487c:	cmp	r1, #0
   14880:	bne	14c40 <XRRGetOutputInfo@plt+0x31e0>
   14884:	mov	r0, r5
   14888:	mov	r1, r6
   1488c:	bl	11748 <realloc@plt>
   14890:	sub	r1, r9, #19
   14894:	clz	r1, r1
   14898:	lsr	r1, r1, #5
   1489c:	add	r8, r4, #1
   148a0:	str	r8, [fp, #-268]	; 0xfffffef4
   148a4:	mov	r5, r0
   148a8:	sub	r0, r7, #8
   148ac:	clz	r0, r0
   148b0:	lsr	r0, r0, #5
   148b4:	tst	r1, r0
   148b8:	beq	147e8 <XRRGetOutputInfo@plt+0x2d88>
   148bc:	strb	sl, [r5, r4]
   148c0:	b	14838 <XRRGetOutputInfo@plt+0x2dd8>
   148c4:	lsl	r4, r4, #1
   148c8:	strh	sl, [r5, r4]
   148cc:	b	14838 <XRRGetOutputInfo@plt+0x2dd8>
   148d0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   148d4:	bl	116a0 <free@plt>
   148d8:	cmp	r5, #0
   148dc:	beq	14788 <XRRGetOutputInfo@plt+0x2d28>
   148e0:	ldr	r9, [fp, #-212]	; 0xffffff2c
   148e4:	ldr	r7, [fp, #-224]	; 0xffffff20
   148e8:	mov	r4, r5
   148ec:	b	14674 <XRRGetOutputInfo@plt+0x2c14>
   148f0:	mov	r3, #2
   148f4:	str	r3, [fp, #-264]	; 0xfffffef8
   148f8:	b	147ac <XRRGetOutputInfo@plt+0x2d4c>
   148fc:	ldr	r3, [fp, #-280]	; 0xfffffee8
   14900:	ldr	r3, [r3]
   14904:	str	r3, [fp, #-280]	; 0xfffffee8
   14908:	b	145d8 <XRRGetOutputInfo@plt+0x2b78>
   1490c:	ldr	r3, [fp, #-232]	; 0xffffff18
   14910:	mov	r4, #0
   14914:	str	r3, [fp, #-204]	; 0xffffff34
   14918:	mov	r3, #1
   1491c:	str	r3, [fp, #-268]	; 0xfffffef4
   14920:	sub	r5, fp, #204	; 0xcc
   14924:	mov	r7, #32
   14928:	mov	r9, #19
   1492c:	b	14674 <XRRGetOutputInfo@plt+0x2c14>
   14930:	cmp	r3, r1
   14934:	ldrlt	r3, [pc, #-3028]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14938:	strlt	r1, [r3, #92]	; 0x5c
   1493c:	cmp	r2, r0
   14940:	ldrgt	r3, [pc, #-3040]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14944:	strgt	r2, [r3, #88]	; 0x58
   14948:	b	137a0 <XRRGetOutputInfo@plt+0x1d40>
   1494c:	ldr	r3, [pc, #-3052]	; 13d68 <XRRGetOutputInfo@plt+0x2308>
   14950:	ldr	r1, [r3, #40]	; 0x28
   14954:	ldr	r0, [r3, #24]
   14958:	bl	119e8 <XRRGetScreenInfo@plt>
   1495c:	subs	r3, r0, #0
   14960:	str	r3, [fp, #-264]	; 0xfffffef8
   14964:	beq	15878 <XRRGetOutputInfo@plt+0x3e18>
   14968:	sub	r3, fp, #224	; 0xe0
   1496c:	mov	r1, r3
   14970:	str	r3, [fp, #-268]	; 0xfffffef4
   14974:	bl	11868 <XRRConfigCurrentConfiguration@plt>
   14978:	sub	r1, fp, #220	; 0xdc
   1497c:	mov	r9, r0
   14980:	ldr	r0, [fp, #-264]	; 0xfffffef8
   14984:	bl	1176c <XRRConfigSizes@plt>
   14988:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1498c:	cmp	r3, #0
   14990:	mov	r7, r0
   14994:	bne	14cf0 <XRRGetOutputInfo@plt+0x3290>
   14998:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   1499c:	cmn	r3, #1
   149a0:	streq	r9, [fp, #-332]	; 0xfffffeb4
   149a4:	beq	149b8 <XRRGetOutputInfo@plt+0x2f58>
   149a8:	ldr	r3, [fp, #-220]	; 0xffffff24
   149ac:	ldr	r2, [fp, #-332]	; 0xfffffeb4
   149b0:	cmp	r3, r2
   149b4:	ble	15924 <XRRGetOutputInfo@plt+0x3ec4>
   149b8:	ldr	r3, [fp, #-348]	; 0xfffffea4
   149bc:	cmn	r3, #1
   149c0:	beq	15150 <XRRGetOutputInfo@plt+0x36f0>
   149c4:	ldr	r0, [fp, #-264]	; 0xfffffef8
   149c8:	bl	1182c <XRRConfigCurrentRate@plt>
   149cc:	vcmpe.f64	d8, #0.0
   149d0:	vmrs	APSR_nzcv, fpscr
   149d4:	mov	sl, r0
   149d8:	bpl	150e8 <XRRGetOutputInfo@plt+0x3688>
   149dc:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   149e0:	cmp	r9, r3
   149e4:	vmoveq	s15, r0
   149e8:	vcvteq.f64.s32	d8, s15
   149ec:	vldrne	d8, [pc, #836]	; 14d38 <XRRGetOutputInfo@plt+0x32d8>
   149f0:	ldr	r3, [fp, #-324]	; 0xfffffebc
   149f4:	cmp	r3, #0
   149f8:	bne	15278 <XRRGetOutputInfo@plt+0x3818>
   149fc:	ldr	r3, [fp, #-308]	; 0xfffffecc
   14a00:	ldr	r2, [fp, #-352]	; 0xfffffea0
   14a04:	orrs	r3, r3, r2
   14a08:	bne	15190 <XRRGetOutputInfo@plt+0x3730>
   14a0c:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14a10:	ldr	r0, [fp, #-264]	; 0xfffffef8
   14a14:	bl	116c4 <XRRConfigRotations@plt>
   14a18:	ldr	r3, [fp, #-360]	; 0xfffffe98
   14a1c:	cmp	r3, #0
   14a20:	mov	r4, r0
   14a24:	beq	14a3c <XRRGetOutputInfo@plt+0x2fdc>
   14a28:	ldrh	r3, [fp, #-224]	; 0xffffff20
   14a2c:	tst	r3, #16
   14a30:	movne	r3, #0
   14a34:	moveq	r3, #16
   14a38:	str	r3, [fp, #-360]	; 0xfffffe98
   14a3c:	ldr	r3, [fp, #-380]	; 0xfffffe84
   14a40:	cmp	r3, #0
   14a44:	beq	14a5c <XRRGetOutputInfo@plt+0x2ffc>
   14a48:	ldrh	r3, [fp, #-224]	; 0xffffff20
   14a4c:	tst	r3, #32
   14a50:	ldreq	r3, [fp, #-360]	; 0xfffffe98
   14a54:	orreq	r3, r3, #32
   14a58:	streq	r3, [fp, #-360]	; 0xfffffe98
   14a5c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   14a60:	cmp	r3, #0
   14a64:	beq	14b44 <XRRGetOutputInfo@plt+0x30e4>
   14a68:	ldrh	r2, [fp, #-224]	; 0xffffff20
   14a6c:	tst	r2, #15
   14a70:	beq	153b4 <XRRGetOutputInfo@plt+0x3954>
   14a74:	mov	r3, #0
   14a78:	asr	r1, r2, r3
   14a7c:	tst	r1, #1
   14a80:	bne	15798 <XRRGetOutputInfo@plt+0x3d38>
   14a84:	add	r3, r3, #1
   14a88:	cmp	r3, #4
   14a8c:	bne	14a78 <XRRGetOutputInfo@plt+0x3018>
   14a90:	ldr	r2, [pc, #680]	; 14d40 <XRRGetOutputInfo@plt+0x32e0>
   14a94:	ldr	r1, [pc, #680]	; 14d44 <XRRGetOutputInfo@plt+0x32e4>
   14a98:	mov	r0, #1
   14a9c:	bl	11910 <__printf_chk@plt>
   14aa0:	ldrh	r2, [fp, #-224]	; 0xffffff20
   14aa4:	and	r2, r2, #48	; 0x30
   14aa8:	cmp	r2, #16
   14aac:	beq	1567c <XRRGetOutputInfo@plt+0x3c1c>
   14ab0:	bls	150d0 <XRRGetOutputInfo@plt+0x3670>
   14ab4:	cmp	r2, #32
   14ab8:	ldreq	r2, [pc, #648]	; 14d48 <XRRGetOutputInfo@plt+0x32e8>
   14abc:	beq	14ad4 <XRRGetOutputInfo@plt+0x3074>
   14ac0:	ldr	r1, [pc, #644]	; 14d4c <XRRGetOutputInfo@plt+0x32ec>
   14ac4:	ldr	r3, [pc, #700]	; 14d88 <XRRGetOutputInfo@plt+0x3328>
   14ac8:	cmp	r2, #48	; 0x30
   14acc:	moveq	r2, r1
   14ad0:	movne	r2, r3
   14ad4:	ldr	r1, [pc, #628]	; 14d50 <XRRGetOutputInfo@plt+0x32f0>
   14ad8:	mov	r0, #1
   14adc:	bl	11910 <__printf_chk@plt>
   14ae0:	ldr	r1, [pc, #620]	; 14d54 <XRRGetOutputInfo@plt+0x32f4>
   14ae4:	mov	r0, #1
   14ae8:	bl	11910 <__printf_chk@plt>
   14aec:	ldr	r7, [pc, #988]	; 14ed0 <XRRGetOutputInfo@plt+0x3470>
   14af0:	ldr	r6, [pc, #608]	; 14d58 <XRRGetOutputInfo@plt+0x32f8>
   14af4:	mov	r5, #0
   14af8:	asr	r3, r4, r5
   14afc:	tst	r3, #1
   14b00:	bne	1508c <XRRGetOutputInfo@plt+0x362c>
   14b04:	add	r5, r5, #1
   14b08:	cmp	r5, #4
   14b0c:	bne	14af8 <XRRGetOutputInfo@plt+0x3098>
   14b10:	mov	r0, #10
   14b14:	bl	118e0 <putchar@plt>
   14b18:	ldr	r1, [pc, #572]	; 14d5c <XRRGetOutputInfo@plt+0x32fc>
   14b1c:	mov	r0, #1
   14b20:	bl	11910 <__printf_chk@plt>
   14b24:	tst	r4, #48	; 0x30
   14b28:	beq	155b4 <XRRGetOutputInfo@plt+0x3b54>
   14b2c:	tst	r4, #16
   14b30:	bne	1566c <XRRGetOutputInfo@plt+0x3c0c>
   14b34:	tst	r4, #32
   14b38:	bne	155f4 <XRRGetOutputInfo@plt+0x3b94>
   14b3c:	mov	r0, #10
   14b40:	bl	118e0 <putchar@plt>
   14b44:	ldr	r3, [pc, #864]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14b48:	ldr	r3, [r3, #28]
   14b4c:	cmp	r3, #0
   14b50:	bne	152a4 <XRRGetOutputInfo@plt+0x3844>
   14b54:	ldr	r4, [pc, #848]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14b58:	mov	r2, #131072	; 0x20000
   14b5c:	ldr	r1, [r4, #40]	; 0x28
   14b60:	ldr	r0, [r4, #24]
   14b64:	bl	1191c <XSelectInput@plt>
   14b68:	ldr	r3, [fp, #-316]	; 0xfffffec4
   14b6c:	cmp	r3, #0
   14b70:	beq	14b88 <XRRGetOutputInfo@plt+0x3128>
   14b74:	ldr	r3, [r4, #32]
   14b78:	cmp	r3, #0
   14b7c:	beq	153cc <XRRGetOutputInfo@plt+0x396c>
   14b80:	mov	r3, #0
   14b84:	str	r3, [fp, #-316]	; 0xfffffec4
   14b88:	ldr	r0, [fp, #-264]	; 0xfffffef8
   14b8c:	bl	11640 <XRRFreeScreenConfigInfo@plt>
   14b90:	ldr	r3, [pc, #456]	; 14d60 <XRRGetOutputInfo@plt+0x3300>
   14b94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b98:	ldr	r0, [fp, #-316]	; 0xfffffec4
   14b9c:	ldr	r3, [r3]
   14ba0:	cmp	r2, r3
   14ba4:	bne	157d0 <XRRGetOutputInfo@plt+0x3d70>
   14ba8:	sub	sp, fp, #80	; 0x50
   14bac:	vpop	{d8-d13}
   14bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bb4:	mov	r3, r4
   14bb8:	ldr	r0, [r3, #80]	; 0x50
   14bbc:	cmp	r0, #0
   14bc0:	beq	14be8 <XRRGetOutputInfo@plt+0x3188>
   14bc4:	ldr	lr, [r3, #108]	; 0x6c
   14bc8:	ldr	ip, [r3, #112]	; 0x70
   14bcc:	ldr	r0, [r3, #4]
   14bd0:	sub	lr, lr, r1
   14bd4:	sub	ip, ip, r2
   14bd8:	orr	r0, r0, #8
   14bdc:	str	lr, [r3, #108]	; 0x6c
   14be0:	str	ip, [r3, #112]	; 0x70
   14be4:	str	r0, [r3, #4]
   14be8:	ldr	r3, [r3]
   14bec:	cmp	r3, #0
   14bf0:	bne	14bb8 <XRRGetOutputInfo@plt+0x3158>
   14bf4:	b	125a0 <XRRGetOutputInfo@plt+0xb40>
   14bf8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   14bfc:	bl	116a0 <free@plt>
   14c00:	mov	r0, r5
   14c04:	bl	116a0 <free@plt>
   14c08:	b	14788 <XRRGetOutputInfo@plt+0x2d28>
   14c0c:	ldr	r3, [fp, #-312]	; 0xfffffec8
   14c10:	cmp	r3, #0
   14c14:	bne	11e5c <XRRGetOutputInfo@plt+0x3fc>
   14c18:	ldr	r3, [pc, #652]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14c1c:	ldr	r4, [fp, #-312]	; 0xfffffec8
   14c20:	ldr	r0, [r3, #24]
   14c24:	mov	r1, r4
   14c28:	bl	11904 <XSync@plt>
   14c2c:	mov	r0, r4
   14c30:	bl	11814 <exit@plt>
   14c34:	ldr	r0, [fp, #-288]	; 0xfffffee0
   14c38:	bl	116a0 <free@plt>
   14c3c:	b	14788 <XRRGetOutputInfo@plt+0x2d28>
   14c40:	mov	r1, r8
   14c44:	ldr	r0, [pc, #596]	; 14ea0 <XRRGetOutputInfo@plt+0x3440>
   14c48:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   14c4c:	ldr	r0, [pc, #600]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14c50:	ldr	ip, [r1, #16]
   14c54:	ldr	r0, [r0, #88]	; 0x58
   14c58:	cmp	ip, r0
   14c5c:	bne	14030 <XRRGetOutputInfo@plt+0x25d0>
   14c60:	ldr	r0, [pc, #580]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14c64:	ldr	ip, [r1, #20]
   14c68:	ldr	r0, [r0, #100]	; 0x64
   14c6c:	cmp	ip, r0
   14c70:	bne	14030 <XRRGetOutputInfo@plt+0x25d0>
   14c74:	ldr	r0, [r1, #24]
   14c78:	ldr	r1, [pc, #556]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14c7c:	ldr	r1, [r1, #96]	; 0x60
   14c80:	cmp	r0, r1
   14c84:	bne	14030 <XRRGetOutputInfo@plt+0x25d0>
   14c88:	b	1407c <XRRGetOutputInfo@plt+0x261c>
   14c8c:	ldr	lr, [pc, #536]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14c90:	ldr	r1, [pc, #204]	; 14d64 <XRRGetOutputInfo@plt+0x3304>
   14c94:	mov	r0, #1
   14c98:	ldrd	r4, [lr, #104]	; 0x68
   14c9c:	strd	r4, [sp, #16]
   14ca0:	ldr	ip, [lr, #96]	; 0x60
   14ca4:	str	ip, [sp, #8]
   14ca8:	ldr	ip, [lr, #100]	; 0x64
   14cac:	str	ip, [sp, #4]
   14cb0:	ldr	ip, [lr, #88]	; 0x58
   14cb4:	str	ip, [sp]
   14cb8:	bl	11910 <__printf_chk@plt>
   14cbc:	b	14040 <XRRGetOutputInfo@plt+0x25e0>
   14cc0:	ldr	r3, [pc, #484]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14cc4:	ldr	r0, [r3, #24]
   14cc8:	bl	11934 <XGrabServer@plt>
   14ccc:	b	13f28 <XRRGetOutputInfo@plt+0x24c8>
   14cd0:	ldr	r3, [pc, #468]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14cd4:	ldr	r0, [r3, #24]
   14cd8:	bl	11850 <XUngrabServer@plt>
   14cdc:	b	14340 <XRRGetOutputInfo@plt+0x28e0>
   14ce0:	ldr	r0, [pc, #128]	; 14d68 <XRRGetOutputInfo@plt+0x3308>
   14ce4:	bl	117a8 <puts@plt>
   14ce8:	mov	r0, r4
   14cec:	bl	11814 <exit@plt>
   14cf0:	ldr	r1, [fp, #-220]	; 0xffffff24
   14cf4:	ldr	r3, [fp, #-248]	; 0xffffff08
   14cf8:	ldr	r0, [fp, #-244]	; 0xffffff0c
   14cfc:	mov	r2, #0
   14d00:	add	ip, r7, #4
   14d04:	b	14d0c <XRRGetOutputInfo@plt+0x32ac>
   14d08:	add	r2, r2, #1
   14d0c:	cmp	r1, r2
   14d10:	ble	15904 <XRRGetOutputInfo@plt+0x3ea4>
   14d14:	ldr	lr, [r7, r2, lsl #4]
   14d18:	cmp	lr, r3
   14d1c:	bne	14d08 <XRRGetOutputInfo@plt+0x32a8>
   14d20:	ldr	lr, [ip, r2, lsl #4]
   14d24:	cmp	lr, r0
   14d28:	bne	14d08 <XRRGetOutputInfo@plt+0x32a8>
   14d2c:	str	r2, [fp, #-332]	; 0xfffffeb4
   14d30:	b	149b8 <XRRGetOutputInfo@plt+0x2f58>
   14d34:	nop			; (mov r0, r0)
	...
   14d40:	ldrdeq	sl, [r1], -ip
   14d44:	andeq	fp, r1, r8, ror #16
   14d48:	andeq	sl, r1, r4, lsl r1
   14d4c:	andeq	sl, r1, ip, lsl r1
   14d50:	andeq	fp, r1, r0, lsl #17
   14d54:	muleq	r1, ip, r8
   14d58:			; <UNDEFINED> instruction: 0x0001b8b4
   14d5c:			; <UNDEFINED> instruction: 0x0001b8b8
   14d60:	andeq	fp, r2, r8, ror #29
   14d64:	muleq	r1, r4, r3
   14d68:	andeq	fp, r1, r4, lsr #13
   14d6c:	andeq	fp, r1, r8, lsr r7
   14d70:	muleq	r1, r0, r1
   14d74:	andeq	sl, r1, ip, lsr r3
   14d78:	andeq	sl, r1, r0, asr #6
   14d7c:	andeq	fp, r1, r8, asr #14
   14d80:	andeq	fp, r1, r0, asr #12
   14d84:	andeq	fp, r1, r8, ror #14
   14d88:	strdeq	sl, [r1], -r8
   14d8c:			; <UNDEFINED> instruction: 0x0001b7b8
   14d90:	andeq	fp, r1, r8, lsl #16
   14d94:	andeq	fp, r1, r0, ror #16
   14d98:	andeq	fp, r1, r8, lsr r8
   14d9c:	andeq	fp, r1, ip, asr r8
   14da0:	andeq	fp, r1, r4, ror #15
   14da4:	andeq	fp, r1, r0, ror #17
   14da8:	andeq	fp, r1, r4, lsl #18
   14dac:	andeq	fp, r1, r8, asr #10
   14db0:	andeq	fp, r1, r8, ror #10
   14db4:	andeq	fp, r1, r4, ror #5
   14db8:	strdeq	sl, [r1], -r0
   14dbc:	andeq	fp, r1, r4, ror #21
   14dc0:	andeq	fp, r1, r8, asr r9
   14dc4:	andeq	fp, r1, r0, asr #21
   14dc8:	andeq	fp, r1, r8, ror r9
   14dcc:	muleq	r1, ip, r9
   14dd0:	ldrdeq	fp, [r1], -r4
   14dd4:	andeq	fp, r1, r0, lsl #20
   14dd8:	andeq	fp, r1, r0, lsl sl
   14ddc:	andeq	fp, r1, r0, lsr sl
   14de0:	andeq	fp, r1, r4, asr sl
   14de4:	andeq	fp, r1, r8, ror sl
   14de8:	muleq	r1, ip, sl
   14dec:	andeq	sl, r1, ip, lsl #2
   14df0:	ldrdeq	fp, [r1], -r8
   14df4:	andeq	fp, r1, ip, lsl r9
   14df8:	ldrdeq	fp, [r1], -r0
   14dfc:	andeq	sl, r1, ip, lsr #2
   14e00:	andeq	fp, r1, ip, lsr #18
   14e04:	andeq	sl, r1, r0, asr #23
   14e08:	andeq	sl, r1, r4, asr #23
   14e0c:	andeq	sl, r1, ip, asr #23
   14e10:	ldrdeq	sl, [r1], -r0
   14e14:	strdeq	sl, [r1], -ip
   14e18:	andeq	sl, r1, r4, lsl #24
   14e1c:	andeq	sl, r1, ip, lsl #24
   14e20:	andeq	sl, r1, r8, lsl ip
   14e24:	andeq	sl, r1, r8, lsr #24
   14e28:	andeq	r9, r1, r8, asr #26
   14e2c:	andeq	fp, r1, r0, lsl r4
   14e30:	andeq	r9, r1, r4, lsr #29
   14e34:	andeq	fp, r1, r0, lsl #6
   14e38:	andeq	sl, r1, r4, lsr fp
   14e3c:	andeq	fp, r1, r0, lsl #2
   14e40:	andeq	fp, r1, r4, asr #3
   14e44:	muleq	r1, r4, r1
   14e48:	andeq	fp, r1, r4, asr #2
   14e4c:	andeq	fp, r1, r8, lsl r1
   14e50:	andeq	fp, r1, r4, asr #5
   14e54:	ldrdeq	fp, [r1], -ip
   14e58:	andeq	fp, r1, r8, ror r1
   14e5c:	andeq	fp, r1, r4, lsr r3
   14e60:	andeq	fp, r1, r8, lsl r3
   14e64:	andeq	sl, r1, r4, asr #1
   14e68:	andeq	fp, r1, r0, ror #2
   14e6c:	andeq	fp, r1, r8, ror r3
   14e70:	andeq	fp, r1, r8, asr #6
   14e74:	andeq	fp, r1, r0, lsl #22
   14e78:	muleq	r2, r8, r1
   14e7c:	andeq	fp, r1, r0, lsl #15
   14e80:	andeq	sl, r1, r4, lsr ip
   14e84:	andeq	sl, r1, r0, ror #24
   14e88:	andeq	sl, r1, r8, ror #24
   14e8c:	andeq	ip, r2, r4, lsl #3
   14e90:	andeq	sl, r1, r4, lsr r1
   14e94:	andeq	sl, r1, r0, asr #2
   14e98:	andeq	fp, r1, ip, lsr #22
   14e9c:	andeq	sl, r1, r0, ror ip
   14ea0:	andeq	r9, r1, ip, ror #28
   14ea4:	andeq	sl, r1, ip, ror ip
   14ea8:	andeq	sl, r1, ip, lsr #22
   14eac:	andeq	ip, r2, r0, lsr #3
   14eb0:	andeq	fp, r1, r4, lsr #5
   14eb4:	andeq	fp, r1, r8, ror #4
   14eb8:	andeq	sl, r1, r4, lsl #25
   14ebc:	andeq	sl, r1, r8, lsr #25
   14ec0:			; <UNDEFINED> instruction: 0x0001acb4
   14ec4:	andeq	sl, r1, r0, asr #25
   14ec8:	andeq	sl, r1, ip, asr #25
   14ecc:	ldrdeq	sl, [r1], -ip
   14ed0:	andeq	r9, r1, r8, asr #27
   14ed4:	andeq	sl, r1, r0, ror #23
   14ed8:	andeq	sl, r1, r0, ror #6
   14edc:	andeq	sl, r1, r0, asr #24
   14ee0:	andeq	sl, r1, r8, ror #25
   14ee4:	andeq	r9, r1, r4, ror #27
   14ee8:	ldr	r0, [fp, #-344]	; 0xfffffea8
   14eec:	bl	17f14 <XRRGetOutputInfo@plt+0x64b4>
   14ef0:	ldr	r3, [r4, #168]	; 0xa8
   14ef4:	cmp	r3, #0
   14ef8:	beq	14f08 <XRRGetOutputInfo@plt+0x34a8>
   14efc:	ldr	r3, [r4, #64]	; 0x40
   14f00:	cmp	r3, #0
   14f04:	beq	15604 <XRRGetOutputInfo@plt+0x3ba4>
   14f08:	bl	18038 <XRRGetOutputInfo@plt+0x65d8>
   14f0c:	bl	188bc <XRRGetOutputInfo@plt+0x6e5c>
   14f10:	ldr	r3, [pc, #-108]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14f14:	ldr	r3, [r3, #64]	; 0x40
   14f18:	cmp	r3, #0
   14f1c:	beq	1494c <XRRGetOutputInfo@plt+0x2eec>
   14f20:	ldr	r2, [r3]
   14f24:	ldr	r1, [pc, #-448]	; 14d6c <XRRGetOutputInfo@plt+0x330c>
   14f28:	mov	r0, #1
   14f2c:	bl	11910 <__printf_chk@plt>
   14f30:	mov	r9, #0
   14f34:	ldr	r3, [pc, #-144]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14f38:	ldr	r3, [r3, #64]	; 0x40
   14f3c:	ldr	r2, [r3]
   14f40:	cmp	r2, r9
   14f44:	ble	1494c <XRRGetOutputInfo@plt+0x2eec>
   14f48:	mov	r4, #44	; 0x2c
   14f4c:	ldr	r2, [r3, #4]
   14f50:	mul	r4, r4, r9
   14f54:	ldr	r7, [pc, #-176]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   14f58:	add	r3, r2, r4
   14f5c:	ldr	r1, [r2, r4]
   14f60:	ldmib	r3, {r5, r6}
   14f64:	ldr	r2, [pc, #-508]	; 14d70 <XRRGetOutputInfo@plt+0x3310>
   14f68:	ldr	r3, [pc, #-508]	; 14d74 <XRRGetOutputInfo@plt+0x3314>
   14f6c:	cmp	r6, #0
   14f70:	moveq	r3, r2
   14f74:	mov	r6, r3
   14f78:	cmp	r5, #0
   14f7c:	ldr	r3, [pc, #-524]	; 14d78 <XRRGetOutputInfo@plt+0x3318>
   14f80:	ldr	r0, [r7, #24]
   14f84:	moveq	r3, r2
   14f88:	mov	r5, r3
   14f8c:	bl	118f8 <XGetAtomName@plt>
   14f90:	ldr	r1, [r7, #64]	; 0x40
   14f94:	mov	r3, r6
   14f98:	mov	r2, r9
   14f9c:	ldr	r1, [r1, #4]
   14fa0:	add	r1, r1, r4
   14fa4:	ldr	ip, [r1, #20]
   14fa8:	str	ip, [sp, #28]
   14fac:	ldr	ip, [r1, #16]
   14fb0:	str	ip, [sp, #24]
   14fb4:	ldr	ip, [r1, #36]	; 0x24
   14fb8:	str	ip, [sp, #20]
   14fbc:	ldr	ip, [r1, #28]
   14fc0:	str	ip, [sp, #16]
   14fc4:	ldr	ip, [r1, #32]
   14fc8:	str	ip, [sp, #12]
   14fcc:	ldr	r1, [r1, #24]
   14fd0:	str	r5, [sp]
   14fd4:	str	r1, [sp, #8]
   14fd8:	ldr	r1, [pc, #-612]	; 14d7c <XRRGetOutputInfo@plt+0x331c>
   14fdc:	str	r0, [sp, #4]
   14fe0:	mov	r0, #1
   14fe4:	bl	11910 <__printf_chk@plt>
   14fe8:	ldr	r3, [r7, #64]	; 0x40
   14fec:	ldr	r3, [r3, #4]
   14ff0:	add	r3, r3, r4
   14ff4:	ldr	r2, [r3, #12]
   14ff8:	cmp	r2, #0
   14ffc:	ble	15064 <XRRGetOutputInfo@plt+0x3604>
   15000:	ldr	r7, [pc, #-648]	; 14d80 <XRRGetOutputInfo@plt+0x3320>
   15004:	mov	sl, #0
   15008:	sub	r6, fp, #204	; 0xcc
   1500c:	mov	r5, #2
   15010:	ldr	r3, [r3, #40]	; 0x28
   15014:	mov	r0, r6
   15018:	ldr	r8, [r3, sl, lsl #2]
   1501c:	str	r5, [fp, #-204]	; 0xffffff34
   15020:	str	r8, [fp, #-196]	; 0xffffff3c
   15024:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   15028:	add	sl, sl, #1
   1502c:	cmp	r0, #0
   15030:	moveq	r2, r8
   15034:	ldrne	r2, [r0, #16]
   15038:	movne	r1, r7
   1503c:	ldreq	r1, [pc, #-704]	; 14d84 <XRRGetOutputInfo@plt+0x3324>
   15040:	mov	r0, #1
   15044:	bl	11910 <__printf_chk@plt>
   15048:	ldr	r3, [pc, #-420]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   1504c:	ldr	r3, [r3, #64]	; 0x40
   15050:	ldr	r3, [r3, #4]
   15054:	add	r3, r3, r4
   15058:	ldr	r2, [r3, #12]
   1505c:	cmp	r2, sl
   15060:	bgt	15010 <XRRGetOutputInfo@plt+0x35b0>
   15064:	mov	r0, #10
   15068:	add	r9, r9, #1
   1506c:	bl	118e0 <putchar@plt>
   15070:	b	14f34 <XRRGetOutputInfo@plt+0x34d4>
   15074:	add	r3, r9, r3, lsl #2
   15078:	mov	r1, r7
   1507c:	ldr	r2, [r3, #208]	; 0xd0
   15080:	mov	r0, #1
   15084:	bl	11910 <__printf_chk@plt>
   15088:	b	1204c <XRRGetOutputInfo@plt+0x5ec>
   1508c:	ldr	r2, [r7, r5, lsl #2]
   15090:	mov	r1, r6
   15094:	mov	r0, #1
   15098:	bl	11910 <__printf_chk@plt>
   1509c:	b	14b04 <XRRGetOutputInfo@plt+0x30a4>
   150a0:	ldr	r0, [r2, #16]
   150a4:	cmp	r0, r1
   150a8:	bne	13b48 <XRRGetOutputInfo@plt+0x20e8>
   150ac:	vcmp.f64	d7, #0.0
   150b0:	vmrs	APSR_nzcv, fpscr
   150b4:	bne	13b48 <XRRGetOutputInfo@plt+0x20e8>
   150b8:	ldr	r1, [r2, #20]
   150bc:	ldr	r3, [r2, #24]
   150c0:	ldr	r2, [pc, #-540]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   150c4:	str	r1, [r2, #100]	; 0x64
   150c8:	str	r3, [r2, #96]	; 0x60
   150cc:	b	13bb4 <XRRGetOutputInfo@plt+0x2154>
   150d0:	ldr	r1, [pc, #-748]	; 14dec <XRRGetOutputInfo@plt+0x338c>
   150d4:	ldr	r3, [pc, #-852]	; 14d88 <XRRGetOutputInfo@plt+0x3328>
   150d8:	cmp	r2, #0
   150dc:	moveq	r2, r1
   150e0:	movne	r2, r3
   150e4:	b	14ad4 <XRRGetOutputInfo@plt+0x3074>
   150e8:	sub	r2, fp, #216	; 0xd8
   150ec:	ldr	r1, [fp, #-332]	; 0xfffffeb4
   150f0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   150f4:	bl	119a0 <XRRConfigRates@plt>
   150f8:	ldr	r2, [fp, #-216]	; 0xffffff28
   150fc:	mov	r3, #0
   15100:	sub	r0, r0, #2
   15104:	b	15124 <XRRGetOutputInfo@plt+0x36c4>
   15108:	ldrsh	r1, [r0, #2]!
   1510c:	vmov	s14, r1
   15110:	vcvt.f64.s32	d7, s14
   15114:	vcmp.f64	d7, d8
   15118:	vmrs	APSR_nzcv, fpscr
   1511c:	beq	149f0 <XRRGetOutputInfo@plt+0x2f90>
   15120:	add	r3, r3, #1
   15124:	cmp	r2, r3
   15128:	bgt	15108 <XRRGetOutputInfo@plt+0x36a8>
   1512c:	bne	149f0 <XRRGetOutputInfo@plt+0x2f90>
   15130:	vstr	d8, [sp]
   15134:	ldr	r3, [pc, #-708]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   15138:	ldr	r2, [pc, #-948]	; 14d8c <XRRGetOutputInfo@plt+0x332c>
   1513c:	mov	r1, #1
   15140:	ldr	r0, [r3]
   15144:	bl	1194c <__fprintf_chk@plt>
   15148:	mov	r0, #1
   1514c:	bl	11814 <exit@plt>
   15150:	ldrh	r3, [fp, #-224]	; 0xffffff20
   15154:	and	r3, r3, #15
   15158:	cmp	r3, #1
   1515c:	beq	15ce0 <XRRGetOutputInfo@plt+0x4280>
   15160:	cmp	r3, #2
   15164:	beq	15cd4 <XRRGetOutputInfo@plt+0x4274>
   15168:	cmp	r3, #4
   1516c:	beq	15cc8 <XRRGetOutputInfo@plt+0x4268>
   15170:	cmp	r3, #8
   15174:	movne	r3, #4
   15178:	moveq	r3, #3
   1517c:	str	r3, [fp, #-348]	; 0xfffffea4
   15180:	b	149c4 <XRRGetOutputInfo@plt+0x2f64>
   15184:	mov	r0, #1
   15188:	bl	17fb4 <XRRGetOutputInfo@plt+0x6554>
   1518c:	b	121f4 <XRRGetOutputInfo@plt+0x794>
   15190:	ldr	r0, [pc, #-1032]	; 14d90 <XRRGetOutputInfo@plt+0x3330>
   15194:	bl	117a8 <puts@plt>
   15198:	mov	r6, #0
   1519c:	ldr	r8, [pc, #-1040]	; 14d94 <XRRGetOutputInfo@plt+0x3334>
   151a0:	b	151b4 <XRRGetOutputInfo@plt+0x3754>
   151a4:	mov	r0, #10
   151a8:	add	r6, r6, #1
   151ac:	add	r7, r7, #16
   151b0:	bl	118e0 <putchar@plt>
   151b4:	ldr	r3, [fp, #-220]	; 0xffffff24
   151b8:	cmp	r3, r6
   151bc:	ble	14a0c <XRRGetOutputInfo@plt+0x2fac>
   151c0:	ldr	r2, [r7, #12]
   151c4:	cmp	r9, r6
   151c8:	str	r2, [sp, #12]
   151cc:	ldr	r1, [r7, #8]
   151d0:	moveq	r2, #42	; 0x2a
   151d4:	str	r1, [sp, #8]
   151d8:	ldr	r0, [r7, #4]
   151dc:	movne	r2, #32
   151e0:	str	r0, [sp, #4]
   151e4:	ldr	ip, [r7]
   151e8:	mov	r3, r6
   151ec:	ldr	r1, [pc, #-1116]	; 14d98 <XRRGetOutputInfo@plt+0x3338>
   151f0:	str	ip, [sp]
   151f4:	mov	r0, #1
   151f8:	bl	11910 <__printf_chk@plt>
   151fc:	sub	r2, fp, #216	; 0xd8
   15200:	mov	r1, r6
   15204:	ldr	r0, [fp, #-264]	; 0xfffffef8
   15208:	bl	119a0 <XRRConfigRates@plt>
   1520c:	ldr	r3, [fp, #-216]	; 0xffffff28
   15210:	cmp	r3, #0
   15214:	mov	r5, r0
   15218:	beq	151a4 <XRRGetOutputInfo@plt+0x3744>
   1521c:	ldr	r1, [pc, #-1160]	; 14d9c <XRRGetOutputInfo@plt+0x333c>
   15220:	mov	r0, #1
   15224:	bl	11910 <__printf_chk@plt>
   15228:	ldr	r3, [fp, #-216]	; 0xffffff28
   1522c:	cmp	r3, #0
   15230:	ble	151a4 <XRRGetOutputInfo@plt+0x3744>
   15234:	sub	r5, r5, #2
   15238:	mov	r4, #0
   1523c:	cmp	r9, r6
   15240:	ldrsh	r3, [r5, #2]!
   15244:	movne	r2, #32
   15248:	bne	15258 <XRRGetOutputInfo@plt+0x37f8>
   1524c:	cmp	sl, r3
   15250:	moveq	r2, #42	; 0x2a
   15254:	movne	r2, #32
   15258:	mov	r1, r8
   1525c:	mov	r0, #1
   15260:	bl	11910 <__printf_chk@plt>
   15264:	ldr	r3, [fp, #-216]	; 0xffffff28
   15268:	add	r4, r4, #1
   1526c:	cmp	r3, r4
   15270:	bgt	1523c <XRRGetOutputInfo@plt+0x37dc>
   15274:	b	151a4 <XRRGetOutputInfo@plt+0x3744>
   15278:	ldr	r3, [pc, #-980]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   1527c:	sub	r2, fp, #204	; 0xcc
   15280:	sub	r1, fp, #212	; 0xd4
   15284:	ldr	r0, [r3, #24]
   15288:	bl	11694 <XRRQueryVersion@plt>
   1528c:	ldr	r3, [fp, #-204]	; 0xffffff34
   15290:	ldr	r2, [fp, #-212]	; 0xffffff2c
   15294:	ldr	r1, [pc, #-1276]	; 14da0 <XRRGetOutputInfo@plt+0x3340>
   15298:	mov	r0, #1
   1529c:	bl	11910 <__printf_chk@plt>
   152a0:	b	149fc <XRRGetOutputInfo@plt+0x2f9c>
   152a4:	ldr	r1, [fp, #-348]	; 0xfffffea4
   152a8:	ldr	r3, [pc, #-1160]	; 14e28 <XRRGetOutputInfo@plt+0x33c8>
   152ac:	ldr	r2, [fp, #-332]	; 0xfffffeb4
   152b0:	add	r3, r3, r1, lsl #2
   152b4:	mov	r0, #1
   152b8:	ldr	r3, [r3, #128]	; 0x80
   152bc:	ldr	r1, [pc, #-1312]	; 14da4 <XRRGetOutputInfo@plt+0x3344>
   152c0:	bl	11910 <__printf_chk@plt>
   152c4:	ldr	r1, [pc, #-1316]	; 14da8 <XRRGetOutputInfo@plt+0x3348>
   152c8:	mov	r0, #1
   152cc:	bl	11910 <__printf_chk@plt>
   152d0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   152d4:	cmp	r3, #0
   152d8:	beq	1565c <XRRGetOutputInfo@plt+0x3bfc>
   152dc:	tst	r3, #16
   152e0:	bne	1564c <XRRGetOutputInfo@plt+0x3bec>
   152e4:	ldr	r3, [fp, #-360]	; 0xfffffe98
   152e8:	tst	r3, #32
   152ec:	bne	1563c <XRRGetOutputInfo@plt+0x3bdc>
   152f0:	mov	r0, #10
   152f4:	bl	118e0 <putchar@plt>
   152f8:	b	14b54 <XRRGetOutputInfo@plt+0x30f4>
   152fc:	vcvt.f64.f32	d7, s15
   15300:	vcvt.f64.f32	d5, s10
   15304:	vcvt.f64.f32	d6, s12
   15308:	ldr	r1, [pc, #-1380]	; 14dac <XRRGetOutputInfo@plt+0x334c>
   1530c:	mov	r0, #1
   15310:	vmov	r2, r3, d7
   15314:	vstr	d5, [sp, #8]
   15318:	vstr	d6, [sp]
   1531c:	bl	11910 <__printf_chk@plt>
   15320:	vldr	s15, [r9, #244]	; 0xf4
   15324:	ldr	r1, [pc, #-1404]	; 14db0 <XRRGetOutputInfo@plt+0x3350>
   15328:	mov	r0, #1
   1532c:	vcvt.f64.f32	d7, s15
   15330:	vmov	r2, r3, d7
   15334:	bl	11910 <__printf_chk@plt>
   15338:	b	12dc8 <XRRGetOutputInfo@plt+0x1368>
   1533c:	mov	r1, sl
   15340:	ldr	r0, [pc, #-1428]	; 14db4 <XRRGetOutputInfo@plt+0x3354>
   15344:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15348:	mov	r1, r8
   1534c:	ldr	r0, [pc, #-1276]	; 14e58 <XRRGetOutputInfo@plt+0x33f8>
   15350:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15354:	mvn	r2, #0
   15358:	str	r3, [fp, #-276]	; 0xfffffeec
   1535c:	str	r3, [fp, #-344]	; 0xfffffea8
   15360:	str	r3, [fp, #-352]	; 0xfffffea0
   15364:	str	r3, [fp, #-340]	; 0xfffffeac
   15368:	str	r3, [fp, #-356]	; 0xfffffe9c
   1536c:	str	r3, [fp, #-324]	; 0xfffffebc
   15370:	str	r3, [fp, #-316]	; 0xfffffec4
   15374:	str	r3, [fp, #-312]	; 0xfffffec8
   15378:	str	r3, [fp, #-336]	; 0xfffffeb0
   1537c:	str	r3, [fp, #-376]	; 0xfffffe88
   15380:	str	r3, [fp, #-380]	; 0xfffffe84
   15384:	str	r3, [fp, #-368]	; 0xfffffe90
   15388:	str	r3, [fp, #-280]	; 0xfffffee8
   1538c:	str	r3, [fp, #-372]	; 0xfffffe8c
   15390:	str	r3, [fp, #-360]	; 0xfffffe98
   15394:	str	r3, [fp, #-328]	; 0xfffffeb8
   15398:	str	r3, [fp, #-264]	; 0xfffffef8
   1539c:	str	r3, [fp, #-364]	; 0xfffffe94
   153a0:	mov	r3, #1
   153a4:	str	r2, [fp, #-348]	; 0xfffffea4
   153a8:	str	r2, [fp, #-332]	; 0xfffffeb4
   153ac:	str	r3, [fp, #-308]	; 0xfffffecc
   153b0:	b	11d50 <XRRGetOutputInfo@plt+0x2f0>
   153b4:	ldr	r2, [pc, #-1540]	; 14db8 <XRRGetOutputInfo@plt+0x3358>
   153b8:	b	14a94 <XRRGetOutputInfo@plt+0x3034>
   153bc:	mov	r3, #1
   153c0:	str	r3, [fp, #-324]	; 0xfffffebc
   153c4:	str	r3, [fp, #-268]	; 0xfffffef4
   153c8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   153cc:	mov	r2, #1
   153d0:	ldr	r1, [r4, #40]	; 0x28
   153d4:	ldr	r0, [r4, #24]
   153d8:	bl	11a24 <XRRSelectInput@plt>
   153dc:	ldr	r3, [r4, #32]
   153e0:	cmp	r3, #0
   153e4:	bne	14b80 <XRRGetOutputInfo@plt+0x3120>
   153e8:	str	r3, [sp, #8]
   153ec:	vcvt.s32.f64	s16, d8
   153f0:	ldr	r1, [fp, #-348]	; 0xfffffea4
   153f4:	ldr	r3, [fp, #-360]	; 0xfffffe98
   153f8:	mov	r2, #1
   153fc:	orr	r2, r3, r2, lsl r1
   15400:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   15404:	uxth	r2, r2
   15408:	str	r2, [sp]
   1540c:	vmov	r2, s16
   15410:	uxth	r3, r3
   15414:	sxth	r2, r2
   15418:	str	r2, [sp, #4]
   1541c:	ldr	r1, [fp, #-264]	; 0xfffffef8
   15420:	ldr	r2, [r4, #40]	; 0x28
   15424:	ldr	r0, [r4, #24]
   15428:	bl	117d8 <XRRSetScreenConfigAndRate@plt>
   1542c:	ldr	r2, [r4, #32]
   15430:	cmp	r2, #0
   15434:	sub	r3, r0, #3
   15438:	clz	r3, r3
   1543c:	lsr	r3, r3, #5
   15440:	movne	r3, #0
   15444:	cmp	r3, #0
   15448:	bne	15684 <XRRGetOutputInfo@plt+0x3c24>
   1544c:	ldr	r1, [pc, #-1448]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   15450:	ldr	r1, [r1, #28]
   15454:	cmp	r1, #0
   15458:	str	r1, [fp, #-316]	; 0xfffffec4
   1545c:	beq	14b88 <XRRGetOutputInfo@plt+0x3128>
   15460:	orrs	r2, r0, r2
   15464:	str	r2, [fp, #-316]	; 0xfffffec4
   15468:	bne	15cf8 <XRRGetOutputInfo@plt+0x4298>
   1546c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   15470:	cmp	r9, r3
   15474:	beq	14b88 <XRRGetOutputInfo@plt+0x3128>
   15478:	ldr	r7, [pc, #-1732]	; 14dbc <XRRGetOutputInfo@plt+0x335c>
   1547c:	ldr	r6, [pc, #-1732]	; 14dc0 <XRRGetOutputInfo@plt+0x3360>
   15480:	ldr	r5, [pc, #-1732]	; 14dc4 <XRRGetOutputInfo@plt+0x3364>
   15484:	sub	r4, fp, #188	; 0xbc
   15488:	ldr	r3, [pc, #-1508]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   1548c:	mov	r1, r4
   15490:	ldr	r0, [r3, #24]
   15494:	bl	11880 <XNextEvent@plt>
   15498:	ldr	r2, [fp, #-188]	; 0xffffff44
   1549c:	mov	r1, r7
   154a0:	mov	r0, #1
   154a4:	bl	11910 <__printf_chk@plt>
   154a8:	mov	r0, r4
   154ac:	bl	116f4 <XRRUpdateConfiguration@plt>
   154b0:	ldr	r2, [fp, #-188]	; 0xffffff44
   154b4:	cmp	r2, #22
   154b8:	beq	155c4 <XRRGetOutputInfo@plt+0x3b64>
   154bc:	ldr	r3, [fp, #-256]	; 0xffffff00
   154c0:	cmp	r2, r3
   154c4:	bne	155e4 <XRRGetOutputInfo@plt+0x3b84>
   154c8:	ldr	r0, [pc, #-1800]	; 14dc8 <XRRGetOutputInfo@plt+0x3368>
   154cc:	bl	117a8 <puts@plt>
   154d0:	ldrh	r3, [fp, #-152]	; 0xffffff68
   154d4:	ldr	r1, [pc, #-1808]	; 14dcc <XRRGetOutputInfo@plt+0x336c>
   154d8:	mov	r0, #1
   154dc:	str	r3, [sp, #4]
   154e0:	ldrh	r3, [fp, #-156]	; 0xffffff64
   154e4:	ldr	r5, [pc, #-1600]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   154e8:	mov	r4, #80	; 0x50
   154ec:	str	r3, [sp]
   154f0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   154f4:	bl	11910 <__printf_chk@plt>
   154f8:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   154fc:	ldr	r1, [pc, #-1844]	; 14dd0 <XRRGetOutputInfo@plt+0x3370>
   15500:	mov	r0, #1
   15504:	bl	11910 <__printf_chk@plt>
   15508:	ldrh	r2, [fp, #-152]	; 0xffffff68
   1550c:	ldr	r1, [pc, #-1856]	; 14dd4 <XRRGetOutputInfo@plt+0x3374>
   15510:	mov	r0, #1
   15514:	bl	11910 <__printf_chk@plt>
   15518:	ldr	r3, [fp, #-136]	; 0xffffff78
   1551c:	ldr	r1, [pc, #-1868]	; 14dd8 <XRRGetOutputInfo@plt+0x3378>
   15520:	str	r3, [sp, #4]
   15524:	ldr	r3, [fp, #-140]	; 0xffffff74
   15528:	mov	r0, #1
   1552c:	str	r3, [sp]
   15530:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   15534:	bl	11910 <__printf_chk@plt>
   15538:	ldr	r6, [fp, #-320]	; 0xfffffec0
   1553c:	ldr	r3, [r5, #24]
   15540:	ldr	r1, [pc, #-1900]	; 14ddc <XRRGetOutputInfo@plt+0x337c>
   15544:	ldr	r2, [r6, #4]
   15548:	ldr	r3, [r3, #140]	; 0x8c
   1554c:	mov	r0, #1
   15550:	mla	r2, r4, r2, r3
   15554:	ldrd	r2, [r2, #12]
   15558:	bl	11910 <__printf_chk@plt>
   1555c:	ldr	r3, [r5, #24]
   15560:	ldr	r2, [r6, #4]
   15564:	ldr	r1, [pc, #-1932]	; 14de0 <XRRGetOutputInfo@plt+0x3380>
   15568:	ldr	r3, [r3, #140]	; 0x8c
   1556c:	mov	r0, #1
   15570:	mla	r2, r4, r2, r3
   15574:	ldrd	r2, [r2, #20]
   15578:	bl	11910 <__printf_chk@plt>
   1557c:	ldrh	r2, [fp, #-154]	; 0xffffff66
   15580:	cmp	r2, #5
   15584:	movhi	r0, #1
   15588:	ldrls	r3, [pc, #-1896]	; 14e28 <XRRGetOutputInfo@plt+0x33c8>
   1558c:	ldrhi	r1, [pc, #-1968]	; 14de4 <XRRGetOutputInfo@plt+0x3384>
   15590:	ldrls	r1, [pc, #-1968]	; 14de8 <XRRGetOutputInfo@plt+0x3388>
   15594:	movls	r0, #1
   15598:	addls	r3, r3, r2, lsl #2
   1559c:	ldrls	r2, [r3, #188]	; 0xbc
   155a0:	bl	11910 <__printf_chk@plt>
   155a4:	b	14b88 <XRRGetOutputInfo@plt+0x3128>
   155a8:	ldr	r1, [r8, r5, lsl #2]
   155ac:	ldr	r0, [pc, #-1756]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   155b0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   155b4:	ldr	r1, [pc, #-2000]	; 14dec <XRRGetOutputInfo@plt+0x338c>
   155b8:	mov	r0, #1
   155bc:	bl	11910 <__printf_chk@plt>
   155c0:	b	14b3c <XRRGetOutputInfo@plt+0x30dc>
   155c4:	mov	r0, r6
   155c8:	bl	117a8 <puts@plt>
   155cc:	ldr	r2, [fp, #-188]	; 0xffffff44
   155d0:	ldr	r3, [fp, #-256]	; 0xffffff00
   155d4:	cmp	r2, r3
   155d8:	beq	154c8 <XRRGetOutputInfo@plt+0x3a68>
   155dc:	cmp	r2, #22
   155e0:	beq	15488 <XRRGetOutputInfo@plt+0x3a28>
   155e4:	mov	r1, r5
   155e8:	mov	r0, #1
   155ec:	bl	11910 <__printf_chk@plt>
   155f0:	b	15488 <XRRGetOutputInfo@plt+0x3a28>
   155f4:	ldr	r1, [pc, #-2060]	; 14df0 <XRRGetOutputInfo@plt+0x3390>
   155f8:	mov	r0, #1
   155fc:	bl	11910 <__printf_chk@plt>
   15600:	b	14b3c <XRRGetOutputInfo@plt+0x30dc>
   15604:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   15608:	bl	17fb4 <XRRGetOutputInfo@plt+0x6554>
   1560c:	b	14f08 <XRRGetOutputInfo@plt+0x34a8>
   15610:	ldr	r0, [pc, #-1900]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   15614:	ldr	r0, [r0, #88]	; 0x58
   15618:	cmp	r0, r1
   1561c:	bne	13ad4 <XRRGetOutputInfo@plt+0x2074>
   15620:	ldr	r2, [r2, #16]
   15624:	ldr	r1, [pc, #-1920]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   15628:	cmp	r2, #0
   1562c:	str	r3, [r1, #96]	; 0x60
   15630:	str	r2, [r1, #100]	; 0x64
   15634:	bne	13bb4 <XRRGetOutputInfo@plt+0x2154>
   15638:	b	13b14 <XRRGetOutputInfo@plt+0x20b4>
   1563c:	ldr	r1, [pc, #-2132]	; 14df0 <XRRGetOutputInfo@plt+0x3390>
   15640:	mov	r0, #1
   15644:	bl	11910 <__printf_chk@plt>
   15648:	b	152f0 <XRRGetOutputInfo@plt+0x3890>
   1564c:	ldr	r1, [pc, #-2140]	; 14df8 <XRRGetOutputInfo@plt+0x3398>
   15650:	mov	r0, #1
   15654:	bl	11910 <__printf_chk@plt>
   15658:	b	152e4 <XRRGetOutputInfo@plt+0x3884>
   1565c:	ldr	r1, [pc, #-2160]	; 14df4 <XRRGetOutputInfo@plt+0x3394>
   15660:	mov	r0, #1
   15664:	bl	11910 <__printf_chk@plt>
   15668:	b	152f0 <XRRGetOutputInfo@plt+0x3890>
   1566c:	ldr	r1, [pc, #-2172]	; 14df8 <XRRGetOutputInfo@plt+0x3398>
   15670:	mov	r0, #1
   15674:	bl	11910 <__printf_chk@plt>
   15678:	b	14b34 <XRRGetOutputInfo@plt+0x30d4>
   1567c:	ldr	r2, [pc, #-2184]	; 14dfc <XRRGetOutputInfo@plt+0x339c>
   15680:	b	14ad4 <XRRGetOutputInfo@plt+0x3074>
   15684:	ldr	r0, [pc, #-2188]	; 14e00 <XRRGetOutputInfo@plt+0x33a0>
   15688:	bl	117a8 <puts@plt>
   1568c:	b	14b88 <XRRGetOutputInfo@plt+0x3128>
   15690:	mov	r1, r6
   15694:	ldr	r0, [pc, #-2200]	; 14e04 <XRRGetOutputInfo@plt+0x33a4>
   15698:	bl	11658 <strcmp@plt>
   1569c:	cmp	r0, #0
   156a0:	beq	15ba0 <XRRGetOutputInfo@plt+0x4140>
   156a4:	mov	r1, r6
   156a8:	ldr	r0, [pc, #-2216]	; 14e08 <XRRGetOutputInfo@plt+0x33a8>
   156ac:	bl	11658 <strcmp@plt>
   156b0:	cmp	r0, #0
   156b4:	beq	15ba0 <XRRGetOutputInfo@plt+0x4140>
   156b8:	mov	r1, r6
   156bc:	ldr	r0, [pc, #-2232]	; 14e0c <XRRGetOutputInfo@plt+0x33ac>
   156c0:	bl	11658 <strcmp@plt>
   156c4:	cmp	r0, #0
   156c8:	beq	15b54 <XRRGetOutputInfo@plt+0x40f4>
   156cc:	mov	r1, r6
   156d0:	ldr	r0, [pc, #-2248]	; 14e10 <XRRGetOutputInfo@plt+0x33b0>
   156d4:	bl	11658 <strcmp@plt>
   156d8:	cmp	r0, #0
   156dc:	beq	15b54 <XRRGetOutputInfo@plt+0x40f4>
   156e0:	mov	r1, r6
   156e4:	ldr	r0, [pc, #-2264]	; 14e14 <XRRGetOutputInfo@plt+0x33b4>
   156e8:	bl	11658 <strcmp@plt>
   156ec:	cmp	r0, #0
   156f0:	beq	159e4 <XRRGetOutputInfo@plt+0x3f84>
   156f4:	mov	r1, r6
   156f8:	ldr	r0, [pc, #-2280]	; 14e18 <XRRGetOutputInfo@plt+0x33b8>
   156fc:	bl	11658 <strcmp@plt>
   15700:	cmp	r0, #0
   15704:	beq	159e4 <XRRGetOutputInfo@plt+0x3f84>
   15708:	mov	r1, r6
   1570c:	ldr	r0, [pc, #-2296]	; 14e1c <XRRGetOutputInfo@plt+0x33bc>
   15710:	bl	11658 <strcmp@plt>
   15714:	cmp	r0, #0
   15718:	beq	159e4 <XRRGetOutputInfo@plt+0x3f84>
   1571c:	mov	r1, r6
   15720:	ldr	r0, [pc, #-2312]	; 14e20 <XRRGetOutputInfo@plt+0x33c0>
   15724:	bl	11658 <strcmp@plt>
   15728:	cmp	r0, #0
   1572c:	beq	159e4 <XRRGetOutputInfo@plt+0x3f84>
   15730:	mov	r1, r6
   15734:	ldr	r0, [pc, #-2328]	; 14e24 <XRRGetOutputInfo@plt+0x33c4>
   15738:	bl	11658 <strcmp@plt>
   1573c:	cmp	r0, #0
   15740:	bne	15980 <XRRGetOutputInfo@plt+0x3f20>
   15744:	add	r4, r4, #1
   15748:	cmp	sl, r4
   1574c:	ble	15974 <XRRGetOutputInfo@plt+0x3f14>
   15750:	ldr	r2, [r8, r4, lsl #2]
   15754:	mov	r3, #1
   15758:	sub	r0, fp, #204	; 0xcc
   1575c:	str	r3, [fp, #-204]	; 0xffffff34
   15760:	str	r2, [fp, #-200]	; 0xffffff38
   15764:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   15768:	subs	r3, r0, #0
   1576c:	str	r3, [fp, #-272]	; 0xfffffef0
   15770:	beq	15948 <XRRGetOutputInfo@plt+0x3ee8>
   15774:	mov	r3, #1
   15778:	str	r3, [fp, #-312]	; 0xfffffec8
   1577c:	str	r3, [fp, #-268]	; 0xfffffef4
   15780:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15784:	mov	r3, #1
   15788:	str	r3, [fp, #-380]	; 0xfffffe84
   1578c:	str	r3, [fp, #-316]	; 0xfffffec4
   15790:	str	r3, [fp, #-268]	; 0xfffffef4
   15794:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15798:	ldr	r2, [pc, #-2424]	; 14e28 <XRRGetOutputInfo@plt+0x33c8>
   1579c:	add	r3, r2, r3, lsl #2
   157a0:	ldr	r2, [r3, #128]	; 0x80
   157a4:	b	14a94 <XRRGetOutputInfo@plt+0x3034>
   157a8:	mov	r3, #1
   157ac:	str	r3, [fp, #-360]	; 0xfffffe98
   157b0:	str	r3, [fp, #-316]	; 0xfffffec4
   157b4:	str	r3, [fp, #-268]	; 0xfffffef4
   157b8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   157bc:	ldr	r0, [pc, #-2456]	; 14e2c <XRRGetOutputInfo@plt+0x33cc>
   157c0:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   157c4:	ldr	r1, [r4, #68]	; 0x44
   157c8:	ldr	r0, [pc, #-2424]	; 14e58 <XRRGetOutputInfo@plt+0x33f8>
   157cc:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   157d0:	bl	11724 <__stack_chk_fail@plt>
   157d4:	ldr	r0, [pc, #-2476]	; 14e30 <XRRGetOutputInfo@plt+0x33d0>
   157d8:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   157dc:	mov	r1, r4
   157e0:	ldr	r0, [pc, #-2484]	; 14e34 <XRRGetOutputInfo@plt+0x33d4>
   157e4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   157e8:	ldr	r0, [pc, #-2488]	; 14e38 <XRRGetOutputInfo@plt+0x33d8>
   157ec:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   157f0:	ldr	r3, [pc, #-2432]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   157f4:	ldr	r0, [fp, #-264]	; 0xfffffef8
   157f8:	ldr	r4, [r3]
   157fc:	bl	118d4 <XDisplayName@plt>
   15800:	ldr	r2, [pc, #-2508]	; 14e3c <XRRGetOutputInfo@plt+0x33dc>
   15804:	mov	r1, #1
   15808:	mov	r3, r0
   1580c:	mov	r0, r4
   15810:	bl	1194c <__fprintf_chk@plt>
   15814:	mov	r0, #1
   15818:	bl	11814 <exit@plt>
   1581c:	ldr	r0, [pc, #-2532]	; 14e40 <XRRGetOutputInfo@plt+0x33e0>
   15820:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15824:	ldr	r0, [pc, #-2536]	; 14e44 <XRRGetOutputInfo@plt+0x33e4>
   15828:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   1582c:	ldr	r3, [pc, #-2492]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   15830:	mov	r2, #24
   15834:	mov	r1, #1
   15838:	ldr	r3, [r3]
   1583c:	ldr	r0, [pc, #-2556]	; 14e48 <XRRGetOutputInfo@plt+0x33e8>
   15840:	bl	11778 <fwrite@plt>
   15844:	mov	r0, #1
   15848:	bl	11814 <exit@plt>
   1584c:	ldr	r1, [pc, #-2524]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   15850:	str	r2, [sp]
   15854:	ldr	r2, [pc, #-2576]	; 14e4c <XRRGetOutputInfo@plt+0x33ec>
   15858:	ldr	r0, [r1]
   1585c:	mov	r1, #1
   15860:	bl	1194c <__fprintf_chk@plt>
   15864:	mov	r0, #1
   15868:	bl	11814 <exit@plt>
   1586c:	ldr	r1, [r8, r5, lsl #2]
   15870:	ldr	r0, [pc, #-2464]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15874:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15878:	mov	r0, #1
   1587c:	bl	11814 <exit@plt>
   15880:	ldr	r1, [r3, #16]
   15884:	ldr	r0, [pc, #-2620]	; 14e50 <XRRGetOutputInfo@plt+0x33f0>
   15888:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   1588c:	ldr	r0, [pc, #-2624]	; 14e54 <XRRGetOutputInfo@plt+0x33f4>
   15890:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15894:	ldr	r1, [r4, #12]
   15898:	bl	17c64 <XRRGetOutputInfo@plt+0x6204>
   1589c:	ldr	r1, [r4, #84]	; 0x54
   158a0:	ldr	r0, [pc, #-2624]	; 14e68 <XRRGetOutputInfo@plt+0x3408>
   158a4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158a8:	ldr	r1, [r4, #68]	; 0x44
   158ac:	ldr	r0, [pc, #-2652]	; 14e58 <XRRGetOutputInfo@plt+0x33f8>
   158b0:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158b4:	ldr	r0, [pc, #-2656]	; 14e5c <XRRGetOutputInfo@plt+0x33fc>
   158b8:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158bc:	ldr	r0, [pc, #-2660]	; 14e60 <XRRGetOutputInfo@plt+0x3400>
   158c0:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158c4:	ldr	r1, [r8, r5, lsl #2]
   158c8:	ldr	r0, [pc, #-2552]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   158cc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   158d0:	ldr	r1, [r7]
   158d4:	ldr	r0, [pc, #-2680]	; 14e64 <XRRGetOutputInfo@plt+0x3404>
   158d8:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158dc:	ldr	r1, [r4, #84]	; 0x54
   158e0:	ldr	r0, [pc, #-2688]	; 14e68 <XRRGetOutputInfo@plt+0x3408>
   158e4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158e8:	ldr	r1, [r4, #84]	; 0x54
   158ec:	ldr	r0, [pc, #-2700]	; 14e68 <XRRGetOutputInfo@plt+0x3408>
   158f0:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158f4:	ldr	r0, [pc, #-2704]	; 14e6c <XRRGetOutputInfo@plt+0x340c>
   158f8:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   158fc:	ldr	r0, [pc, #-2708]	; 14e70 <XRRGetOutputInfo@plt+0x3410>
   15900:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15904:	ldr	r2, [pc, #-2708]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   15908:	str	r0, [sp]
   1590c:	mov	r1, #1
   15910:	ldr	r0, [r2]
   15914:	ldr	r2, [pc, #-2728]	; 14e74 <XRRGetOutputInfo@plt+0x3414>
   15918:	bl	1194c <__fprintf_chk@plt>
   1591c:	mov	r0, #1
   15920:	bl	11814 <exit@plt>
   15924:	ldr	r2, [pc, #-2740]	; 14e78 <XRRGetOutputInfo@plt+0x3418>
   15928:	str	r3, [sp]
   1592c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   15930:	ldr	r0, [r2]
   15934:	mov	r1, #1
   15938:	ldr	r2, [pc, #-2756]	; 14e7c <XRRGetOutputInfo@plt+0x341c>
   1593c:	bl	1194c <__fprintf_chk@plt>
   15940:	mov	r0, #1
   15944:	bl	11814 <exit@plt>
   15948:	bl	176c0 <XRRGetOutputInfo@plt+0x5c60>
   1594c:	mov	r3, #1
   15950:	mov	r5, r3
   15954:	mov	r2, #3
   15958:	ldr	r1, [r8, r4, lsl #2]
   1595c:	str	r3, [fp, #-312]	; 0xfffffec8
   15960:	str	r0, [fp, #-272]	; 0xfffffef0
   15964:	add	r0, r0, #12
   15968:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   1596c:	str	r5, [fp, #-268]	; 0xfffffef4
   15970:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15974:	ldr	r1, [r8, r5, lsl #2]
   15978:	ldr	r0, [pc, #-2728]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   1597c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15980:	mov	r1, r6
   15984:	ldr	r0, [pc, #-2828]	; 14e80 <XRRGetOutputInfo@plt+0x3420>
   15988:	bl	11658 <strcmp@plt>
   1598c:	cmp	r0, #0
   15990:	beq	15a64 <XRRGetOutputInfo@plt+0x4004>
   15994:	mov	r1, r6
   15998:	ldr	r0, [pc, #-2844]	; 14e84 <XRRGetOutputInfo@plt+0x3424>
   1599c:	bl	11658 <strcmp@plt>
   159a0:	cmp	r0, #0
   159a4:	bne	15a14 <XRRGetOutputInfo@plt+0x3fb4>
   159a8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   159ac:	cmp	r3, #0
   159b0:	beq	15a08 <XRRGetOutputInfo@plt+0x3fa8>
   159b4:	add	r4, r4, #1
   159b8:	cmp	sl, r4
   159bc:	ble	159fc <XRRGetOutputInfo@plt+0x3f9c>
   159c0:	ldr	r5, [fp, #-272]	; 0xfffffef0
   159c4:	mov	r2, #6
   159c8:	ldr	r1, [r8, r4, lsl #2]
   159cc:	add	r0, r5, #32
   159d0:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   159d4:	ldr	r3, [r5, #4]
   159d8:	orr	r3, r3, #1
   159dc:	str	r3, [r5, #4]
   159e0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   159e4:	ldr	r1, [pc, #-2880]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   159e8:	mov	r3, #1
   159ec:	str	r3, [fp, #-356]	; 0xfffffe9c
   159f0:	str	r3, [r1, #80]	; 0x50
   159f4:	str	r3, [fp, #-268]	; 0xfffffef4
   159f8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   159fc:	ldr	r1, [r8, r5, lsl #2]
   15a00:	ldr	r0, [pc, #-2864]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15a04:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15a08:	mov	r1, r6
   15a0c:	ldr	r0, [pc, #-2872]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15a10:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15a14:	mov	r1, r6
   15a18:	ldr	r0, [pc, #-2968]	; 14e88 <XRRGetOutputInfo@plt+0x3428>
   15a1c:	bl	11658 <strcmp@plt>
   15a20:	cmp	r0, #0
   15a24:	bne	15b14 <XRRGetOutputInfo@plt+0x40b4>
   15a28:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15a2c:	cmp	r3, #0
   15a30:	beq	15b08 <XRRGetOutputInfo@plt+0x40a8>
   15a34:	add	r4, r4, #1
   15a38:	cmp	sl, r4
   15a3c:	ble	15ac0 <XRRGetOutputInfo@plt+0x4060>
   15a40:	ldr	r5, [fp, #-272]	; 0xfffffef0
   15a44:	mov	r2, #3
   15a48:	ldr	r1, [r8, r4, lsl #2]
   15a4c:	add	r0, r5, #56	; 0x38
   15a50:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   15a54:	ldr	r3, [r5, #4]
   15a58:	orr	r3, r3, #2
   15a5c:	str	r3, [r5, #4]
   15a60:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15a64:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15a68:	cmp	r3, #0
   15a6c:	beq	15afc <XRRGetOutputInfo@plt+0x409c>
   15a70:	add	r4, r4, #1
   15a74:	cmp	sl, r4
   15a78:	ble	15af0 <XRRGetOutputInfo@plt+0x4090>
   15a7c:	ldr	r5, [pc, #-3064]	; 14e8c <XRRGetOutputInfo@plt+0x342c>
   15a80:	ldr	r6, [r8, r4, lsl #2]
   15a84:	mvn	r3, #0
   15a88:	mov	r1, r6
   15a8c:	ldr	r0, [pc, #-3076]	; 14e90 <XRRGetOutputInfo@plt+0x3430>
   15a90:	str	r3, [r5, #8]
   15a94:	bl	11658 <strcmp@plt>
   15a98:	cmp	r0, #0
   15a9c:	beq	15ad0 <XRRGetOutputInfo@plt+0x4070>
   15aa0:	mov	r1, r6
   15aa4:	ldr	r0, [pc, #-3096]	; 14e94 <XRRGetOutputInfo@plt+0x3434>
   15aa8:	bl	11658 <strcmp@plt>
   15aac:	cmp	r0, #0
   15ab0:	beq	15acc <XRRGetOutputInfo@plt+0x406c>
   15ab4:	mov	r1, r6
   15ab8:	ldr	r0, [pc, #-3112]	; 14e98 <XRRGetOutputInfo@plt+0x3438>
   15abc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15ac0:	ldr	r1, [r8, r5, lsl #2]
   15ac4:	ldr	r0, [pc, #-3060]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15ac8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15acc:	mov	r0, #1
   15ad0:	ldr	r2, [fp, #-272]	; 0xfffffef0
   15ad4:	str	r0, [r5, #8]
   15ad8:	ldr	r3, [r2, #4]
   15adc:	orr	r3, r3, #8192	; 0x2000
   15ae0:	str	r3, [r2, #4]
   15ae4:	mov	r3, #1
   15ae8:	str	r3, [fp, #-268]	; 0xfffffef4
   15aec:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15af0:	ldr	r1, [r8, r5, lsl #2]
   15af4:	ldr	r0, [pc, #-3108]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15af8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15afc:	mov	r1, r6
   15b00:	ldr	r0, [pc, #-3116]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15b04:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15b08:	mov	r1, r6
   15b0c:	ldr	r0, [pc, #-3128]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15b10:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15b14:	mov	r1, r6
   15b18:	ldr	r0, [pc, #-3204]	; 14e9c <XRRGetOutputInfo@plt+0x343c>
   15b1c:	bl	11658 <strcmp@plt>
   15b20:	cmp	r0, #0
   15b24:	bne	15c34 <XRRGetOutputInfo@plt+0x41d4>
   15b28:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15b2c:	cmp	r3, #0
   15b30:	beq	15c28 <XRRGetOutputInfo@plt+0x41c8>
   15b34:	ldr	r1, [fp, #-272]	; 0xfffffef0
   15b38:	ldr	r2, [r1, #56]	; 0x38
   15b3c:	ldr	r3, [r1, #4]
   15b40:	orr	r2, r2, #8
   15b44:	orr	r3, r3, #2
   15b48:	str	r2, [r1, #56]	; 0x38
   15b4c:	str	r3, [r1, #4]
   15b50:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15b54:	add	r4, r4, #1
   15b58:	cmp	sl, r4
   15b5c:	ble	15bf4 <XRRGetOutputInfo@plt+0x4194>
   15b60:	mov	r2, #10
   15b64:	sub	r1, fp, #204	; 0xcc
   15b68:	ldr	r0, [r8, r4, lsl #2]
   15b6c:	bl	11664 <strtol@plt>
   15b70:	ldr	r6, [r8, r4, lsl #2]
   15b74:	ldr	r3, [fp, #-204]	; 0xffffff34
   15b78:	cmp	r6, r3
   15b7c:	str	r0, [fp, #-348]	; 0xfffffea4
   15b80:	beq	15bac <XRRGetOutputInfo@plt+0x414c>
   15b84:	ldr	r3, [fp, #-348]	; 0xfffffea4
   15b88:	cmp	r3, #3
   15b8c:	bls	11c30 <XRRGetOutputInfo@plt+0x1d0>
   15b90:	mov	r2, r6
   15b94:	ldr	r1, [r8, r5, lsl #2]
   15b98:	ldr	r0, [pc, #-3276]	; 14ed4 <XRRGetOutputInfo@plt+0x3474>
   15b9c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15ba0:	mov	r3, #1
   15ba4:	str	r3, [fp, #-308]	; 0xfffffecc
   15ba8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15bac:	mov	r3, #0
   15bb0:	str	r3, [fp, #-348]	; 0xfffffea4
   15bb4:	ldr	r7, [pc, #-3308]	; 14ed0 <XRRGetOutputInfo@plt+0x3470>
   15bb8:	mov	r3, r8
   15bbc:	mov	r8, r4
   15bc0:	mov	r4, r3
   15bc4:	mov	r1, r6
   15bc8:	ldr	r0, [r7], #4
   15bcc:	bl	11658 <strcmp@plt>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15c00 <XRRGetOutputInfo@plt+0x41a0>
   15bd8:	ldr	r3, [fp, #-348]	; 0xfffffea4
   15bdc:	add	r3, r3, #1
   15be0:	cmp	r3, #4
   15be4:	str	r3, [fp, #-348]	; 0xfffffea4
   15be8:	bne	15bc4 <XRRGetOutputInfo@plt+0x4164>
   15bec:	mov	r8, r4
   15bf0:	b	15b90 <XRRGetOutputInfo@plt+0x4130>
   15bf4:	ldr	r1, [r8, r5, lsl #2]
   15bf8:	ldr	r0, [pc, #-3368]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15bfc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15c00:	mov	r3, r4
   15c04:	mov	r4, r8
   15c08:	mov	r8, r3
   15c0c:	b	15b84 <XRRGetOutputInfo@plt+0x4124>
   15c10:	mov	r1, r5
   15c14:	ldr	r0, [pc, #-3452]	; 14ea0 <XRRGetOutputInfo@plt+0x3440>
   15c18:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15c1c:	ldr	r1, [r8, r5, lsl #2]
   15c20:	ldr	r0, [pc, #-3408]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15c24:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15c28:	mov	r1, r6
   15c2c:	ldr	r0, [pc, #-3416]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15c30:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15c34:	mov	r1, r6
   15c38:	ldr	r0, [pc, #-3484]	; 14ea4 <XRRGetOutputInfo@plt+0x3444>
   15c3c:	bl	11658 <strcmp@plt>
   15c40:	cmp	r0, #0
   15c44:	bne	15d38 <XRRGetOutputInfo@plt+0x42d8>
   15c48:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15c4c:	cmp	r3, #0
   15c50:	beq	15d2c <XRRGetOutputInfo@plt+0x42cc>
   15c54:	add	r4, r4, #1
   15c58:	cmp	sl, r4
   15c5c:	ble	15d20 <XRRGetOutputInfo@plt+0x42c0>
   15c60:	ldr	r2, [fp, #-272]	; 0xfffffef0
   15c64:	ldr	r1, [pc, #-3524]	; 14ea8 <XRRGetOutputInfo@plt+0x3448>
   15c68:	add	r3, r2, #112	; 0x70
   15c6c:	ldr	r0, [r8, r4, lsl #2]
   15c70:	add	r2, r2, #108	; 0x6c
   15c74:	bl	118a4 <__isoc99_sscanf@plt>
   15c78:	add	r3, r8, r4, lsl #2
   15c7c:	cmp	r0, #2
   15c80:	bne	15d14 <XRRGetOutputInfo@plt+0x42b4>
   15c84:	ldr	r2, [fp, #-272]	; 0xfffffef0
   15c88:	ldr	r3, [r2, #4]
   15c8c:	orr	r3, r3, #8
   15c90:	str	r3, [r2, #4]
   15c94:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15c98:	ldr	r3, [fp, #-276]	; 0xfffffeec
   15c9c:	mov	r2, #0
   15ca0:	mov	r4, #0
   15ca4:	ldr	r1, [r3, #8]
   15ca8:	ldr	r3, [pc, #-3588]	; 14eac <XRRGetOutputInfo@plt+0x344c>
   15cac:	sub	r5, fp, #204	; 0xcc
   15cb0:	ldr	r0, [r3, #24]
   15cb4:	bl	11898 <XInternAtom@plt>
   15cb8:	mov	r3, #1
   15cbc:	str	r3, [fp, #-268]	; 0xfffffef4
   15cc0:	str	r0, [fp, #-204]	; 0xffffff34
   15cc4:	b	14674 <XRRGetOutputInfo@plt+0x2c14>
   15cc8:	mov	r3, #2
   15ccc:	str	r3, [fp, #-348]	; 0xfffffea4
   15cd0:	b	149c4 <XRRGetOutputInfo@plt+0x2f64>
   15cd4:	mov	r3, #1
   15cd8:	str	r3, [fp, #-348]	; 0xfffffea4
   15cdc:	b	149c4 <XRRGetOutputInfo@plt+0x2f64>
   15ce0:	mov	r3, #0
   15ce4:	str	r3, [fp, #-348]	; 0xfffffea4
   15ce8:	b	149c4 <XRRGetOutputInfo@plt+0x2f64>
   15cec:	ldr	r1, [r4, #12]
   15cf0:	mov	r0, #3
   15cf4:	bl	17c64 <XRRGetOutputInfo@plt+0x6204>
   15cf8:	str	r3, [fp, #-316]	; 0xfffffec4
   15cfc:	b	14b88 <XRRGetOutputInfo@plt+0x3128>
   15d00:	ldr	r0, [pc, #-3672]	; 14eb0 <XRRGetOutputInfo@plt+0x3450>
   15d04:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15d08:	str	r0, [sp]
   15d0c:	ldr	r0, [pc, #-3680]	; 14eb4 <XRRGetOutputInfo@plt+0x3454>
   15d10:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   15d14:	ldr	r1, [r3]
   15d18:	ldr	r0, [pc, #-3688]	; 14eb8 <XRRGetOutputInfo@plt+0x3458>
   15d1c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15d20:	ldr	r1, [r8, r5, lsl #2]
   15d24:	ldr	r0, [pc, #-3668]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15d28:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15d2c:	mov	r1, r6
   15d30:	ldr	r0, [pc, #-3676]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15d34:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15d38:	mov	r1, r6
   15d3c:	ldr	r0, [pc, #-3720]	; 14ebc <XRRGetOutputInfo@plt+0x345c>
   15d40:	bl	11658 <strcmp@plt>
   15d44:	cmp	r0, #0
   15d48:	beq	15dd8 <XRRGetOutputInfo@plt+0x4378>
   15d4c:	mov	r1, r6
   15d50:	ldr	r0, [pc, #-3736]	; 14ec0 <XRRGetOutputInfo@plt+0x3460>
   15d54:	bl	11658 <strcmp@plt>
   15d58:	cmp	r0, #0
   15d5c:	beq	15dd8 <XRRGetOutputInfo@plt+0x4378>
   15d60:	mov	r1, r6
   15d64:	ldr	r0, [pc, #-3752]	; 14ec4 <XRRGetOutputInfo@plt+0x3464>
   15d68:	bl	11658 <strcmp@plt>
   15d6c:	cmp	r0, #0
   15d70:	beq	15e88 <XRRGetOutputInfo@plt+0x4428>
   15d74:	mov	r1, r6
   15d78:	ldr	r0, [pc, #-3768]	; 14ec8 <XRRGetOutputInfo@plt+0x3468>
   15d7c:	bl	11658 <strcmp@plt>
   15d80:	cmp	r0, #0
   15d84:	beq	15e88 <XRRGetOutputInfo@plt+0x4428>
   15d88:	mov	r1, r6
   15d8c:	ldr	r0, [pc, #-3784]	; 14ecc <XRRGetOutputInfo@plt+0x346c>
   15d90:	bl	11658 <strcmp@plt>
   15d94:	cmp	r0, #0
   15d98:	bne	15e54 <XRRGetOutputInfo@plt+0x43f4>
   15d9c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15da0:	cmp	r3, #0
   15da4:	beq	15e48 <XRRGetOutputInfo@plt+0x43e8>
   15da8:	add	r4, r4, #1
   15dac:	cmp	sl, r4
   15db0:	ble	15e3c <XRRGetOutputInfo@plt+0x43dc>
   15db4:	mov	r2, #0
   15db8:	ldr	r1, [fp, #-272]	; 0xfffffef0
   15dbc:	ldr	r3, [r1, #4]
   15dc0:	str	r2, [r1, #100]	; 0x64
   15dc4:	ldr	r2, [r8, r4, lsl #2]
   15dc8:	orr	r3, r3, #4
   15dcc:	str	r2, [r1, #104]	; 0x68
   15dd0:	str	r3, [r1, #4]
   15dd4:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15dd8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15ddc:	cmp	r3, #0
   15de0:	beq	15f88 <XRRGetOutputInfo@plt+0x4528>
   15de4:	add	r4, r4, #1
   15de8:	cmp	sl, r4
   15dec:	ble	15f7c <XRRGetOutputInfo@plt+0x451c>
   15df0:	ldr	r2, [r8, r4, lsl #2]
   15df4:	ldr	r7, [pc, #-3884]	; 14ed0 <XRRGetOutputInfo@plt+0x3470>
   15df8:	str	r8, [fp, #-284]	; 0xfffffee4
   15dfc:	mov	r6, #0
   15e00:	mov	r8, r4
   15e04:	mov	r4, r2
   15e08:	mov	r1, r4
   15e0c:	ldr	r0, [r7], #4
   15e10:	bl	11658 <strcmp@plt>
   15e14:	cmp	r0, #0
   15e18:	beq	15f94 <XRRGetOutputInfo@plt+0x4534>
   15e1c:	add	r6, r6, #1
   15e20:	cmp	r6, #4
   15e24:	bne	15e08 <XRRGetOutputInfo@plt+0x43a8>
   15e28:	ldr	r8, [fp, #-284]	; 0xfffffee4
   15e2c:	mov	r2, r4
   15e30:	ldr	r0, [pc, #-3940]	; 14ed4 <XRRGetOutputInfo@plt+0x3474>
   15e34:	ldr	r1, [r8, r5, lsl #2]
   15e38:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15e3c:	ldr	r1, [r8, r5, lsl #2]
   15e40:	ldr	r0, [pc, #-3952]	; 14ed8 <XRRGetOutputInfo@plt+0x3478>
   15e44:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15e48:	mov	r1, r6
   15e4c:	ldr	r0, [pc, #-3960]	; 14edc <XRRGetOutputInfo@plt+0x347c>
   15e50:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15e54:	mov	r1, r6
   15e58:	ldr	r0, [pc, #-3968]	; 14ee0 <XRRGetOutputInfo@plt+0x3480>
   15e5c:	bl	11658 <strcmp@plt>
   15e60:	cmp	r0, #0
   15e64:	bne	15f48 <XRRGetOutputInfo@plt+0x44e8>
   15e68:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15e6c:	cmp	r3, #0
   15e70:	beq	15f3c <XRRGetOutputInfo@plt+0x44dc>
   15e74:	add	r4, r4, #1
   15e78:	cmp	sl, r4
   15e7c:	ble	15eec <XRRGetOutputInfo@plt+0x448c>
   15e80:	mov	r2, #1
   15e84:	b	15db8 <XRRGetOutputInfo@plt+0x4358>
   15e88:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15e8c:	cmp	r3, #0
   15e90:	beq	15f30 <XRRGetOutputInfo@plt+0x44d0>
   15e94:	add	r4, r4, #1
   15e98:	cmp	sl, r4
   15e9c:	ble	15f24 <XRRGetOutputInfo@plt+0x44c4>
   15ea0:	ldr	r2, [r8, r4, lsl #2]
   15ea4:	ldr	r7, [pc, #-4040]	; 14ee4 <XRRGetOutputInfo@plt+0x3484>
   15ea8:	str	r8, [fp, #-284]	; 0xfffffee4
   15eac:	mov	r6, #0
   15eb0:	mov	r8, r4
   15eb4:	mov	r4, r2
   15eb8:	mov	r1, r4
   15ebc:	ldr	r0, [r7], #4
   15ec0:	bl	11658 <strcmp@plt>
   15ec4:	cmp	r0, #0
   15ec8:	beq	15ef8 <XRRGetOutputInfo@plt+0x4498>
   15ecc:	add	r6, r6, #1
   15ed0:	cmp	r6, #4
   15ed4:	bne	15eb8 <XRRGetOutputInfo@plt+0x4458>
   15ed8:	ldr	r8, [fp, #-284]	; 0xfffffee4
   15edc:	mov	r2, r4
   15ee0:	ldr	r0, [pc, #2328]	; 16800 <XRRGetOutputInfo@plt+0x4da0>
   15ee4:	ldr	r1, [r8, r5, lsl #2]
   15ee8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15eec:	ldr	r1, [r8, r5, lsl #2]
   15ef0:	ldr	r0, [pc, #2552]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   15ef4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15ef8:	ldr	r1, [fp, #-272]	; 0xfffffef0
   15efc:	mov	r4, r8
   15f00:	ldr	r8, [fp, #-284]	; 0xfffffee4
   15f04:	ldrh	r3, [r1, #116]	; 0x74
   15f08:	ldr	r2, [r1, #4]
   15f0c:	bic	r3, r3, #48	; 0x30
   15f10:	orr	r6, r3, r6, lsl #4
   15f14:	orr	r3, r2, #32
   15f18:	strh	r6, [r1, #116]	; 0x74
   15f1c:	str	r3, [r1, #4]
   15f20:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15f24:	ldr	r1, [r8, r5, lsl #2]
   15f28:	ldr	r0, [pc, #2496]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   15f2c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15f30:	mov	r1, r6
   15f34:	ldr	r0, [pc, #2248]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   15f38:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15f3c:	mov	r1, r6
   15f40:	ldr	r0, [pc, #2236]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   15f44:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15f48:	mov	r1, r6
   15f4c:	ldr	r0, [pc, #2228]	; 16808 <XRRGetOutputInfo@plt+0x4da8>
   15f50:	bl	11658 <strcmp@plt>
   15f54:	cmp	r0, #0
   15f58:	bne	15fdc <XRRGetOutputInfo@plt+0x457c>
   15f5c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15f60:	cmp	r3, #0
   15f64:	beq	15fd0 <XRRGetOutputInfo@plt+0x4570>
   15f68:	add	r4, r4, #1
   15f6c:	cmp	sl, r4
   15f70:	ble	15fc4 <XRRGetOutputInfo@plt+0x4564>
   15f74:	mov	r2, #2
   15f78:	b	15db8 <XRRGetOutputInfo@plt+0x4358>
   15f7c:	ldr	r1, [r8, r5, lsl #2]
   15f80:	ldr	r0, [pc, #2408]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   15f84:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15f88:	mov	r1, r6
   15f8c:	ldr	r0, [pc, #2160]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   15f90:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15f94:	ldr	r0, [fp, #-272]	; 0xfffffef0
   15f98:	mov	r1, #1
   15f9c:	mov	r4, r8
   15fa0:	ldrh	r3, [r0, #116]	; 0x74
   15fa4:	ldr	r2, [r0, #4]
   15fa8:	ldr	r8, [fp, #-284]	; 0xfffffee4
   15fac:	bic	r3, r3, #15
   15fb0:	orr	r6, r3, r1, lsl r6
   15fb4:	orr	r3, r2, #16
   15fb8:	strh	r6, [r0, #116]	; 0x74
   15fbc:	str	r3, [r0, #4]
   15fc0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   15fc4:	ldr	r1, [r8, r5, lsl #2]
   15fc8:	ldr	r0, [pc, #2336]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   15fcc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15fd0:	mov	r1, r6
   15fd4:	ldr	r0, [pc, #2088]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   15fd8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   15fdc:	mov	r1, r6
   15fe0:	ldr	r0, [pc, #2084]	; 1680c <XRRGetOutputInfo@plt+0x4dac>
   15fe4:	bl	11658 <strcmp@plt>
   15fe8:	cmp	r0, #0
   15fec:	bne	16010 <XRRGetOutputInfo@plt+0x45b0>
   15ff0:	ldr	r3, [fp, #-272]	; 0xfffffef0
   15ff4:	cmp	r3, #0
   15ff8:	beq	16050 <XRRGetOutputInfo@plt+0x45f0>
   15ffc:	add	r4, r4, #1
   16000:	cmp	sl, r4
   16004:	ble	16044 <XRRGetOutputInfo@plt+0x45e4>
   16008:	mov	r2, #3
   1600c:	b	15db8 <XRRGetOutputInfo@plt+0x4358>
   16010:	mov	r1, r6
   16014:	ldr	r0, [pc, #2036]	; 16810 <XRRGetOutputInfo@plt+0x4db0>
   16018:	bl	11658 <strcmp@plt>
   1601c:	cmp	r0, #0
   16020:	bne	16074 <XRRGetOutputInfo@plt+0x4614>
   16024:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16028:	cmp	r3, #0
   1602c:	beq	16068 <XRRGetOutputInfo@plt+0x4608>
   16030:	add	r4, r4, #1
   16034:	cmp	sl, r4
   16038:	ble	1605c <XRRGetOutputInfo@plt+0x45fc>
   1603c:	mov	r2, #4
   16040:	b	15db8 <XRRGetOutputInfo@plt+0x4358>
   16044:	ldr	r1, [r8, r5, lsl #2]
   16048:	ldr	r0, [pc, #2208]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   1604c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16050:	mov	r1, r6
   16054:	ldr	r0, [pc, #1960]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16058:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   1605c:	ldr	r1, [r8, r5, lsl #2]
   16060:	ldr	r0, [pc, #2184]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16064:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16068:	mov	r1, r6
   1606c:	ldr	r0, [pc, #1936]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16070:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16074:	mov	r1, r6
   16078:	ldr	r0, [pc, #1940]	; 16814 <XRRGetOutputInfo@plt+0x4db4>
   1607c:	bl	11658 <strcmp@plt>
   16080:	cmp	r0, #0
   16084:	bne	16148 <XRRGetOutputInfo@plt+0x46e8>
   16088:	ldr	r3, [fp, #-272]	; 0xfffffef0
   1608c:	cmp	r3, #0
   16090:	beq	16320 <XRRGetOutputInfo@plt+0x48c0>
   16094:	add	r4, r4, #1
   16098:	cmp	sl, r4
   1609c:	ble	16314 <XRRGetOutputInfo@plt+0x48b4>
   160a0:	ldr	lr, [fp, #-272]	; 0xfffffef0
   160a4:	add	ip, lr, #168	; 0xa8
   160a8:	add	r0, lr, #164	; 0xa4
   160ac:	add	r1, lr, #160	; 0xa0
   160b0:	add	r2, lr, #156	; 0x9c
   160b4:	add	r3, lr, #144	; 0x90
   160b8:	str	ip, [sp, #36]	; 0x24
   160bc:	str	r0, [sp, #32]
   160c0:	str	r1, [sp, #28]
   160c4:	add	r0, lr, #152	; 0x98
   160c8:	add	r1, lr, #148	; 0x94
   160cc:	str	r2, [sp, #24]
   160d0:	str	r3, [sp, #20]
   160d4:	add	r2, lr, #128	; 0x80
   160d8:	add	r3, lr, #124	; 0x7c
   160dc:	add	ip, lr, #140	; 0x8c
   160e0:	str	r1, [sp, #8]
   160e4:	str	r2, [sp, #4]
   160e8:	str	r3, [sp]
   160ec:	str	ip, [sp, #16]
   160f0:	str	r0, [sp, #12]
   160f4:	add	r3, lr, #136	; 0x88
   160f8:	ldr	r0, [r8, r4, lsl #2]
   160fc:	add	r2, lr, #132	; 0x84
   16100:	ldr	r1, [pc, #1808]	; 16818 <XRRGetOutputInfo@plt+0x4db8>
   16104:	bl	118a4 <__isoc99_sscanf@plt>
   16108:	add	r3, r8, r4, lsl #2
   1610c:	sub	r0, r0, #2
   16110:	cmp	r0, #10
   16114:	ldrls	pc, [pc, r0, lsl #2]
   16118:	b	16304 <XRRGetOutputInfo@plt+0x48a4>
   1611c:			; <UNDEFINED> instruction: 0x000161bc
   16120:	andeq	r6, r1, r4, lsl #6
   16124:	andeq	r6, r1, ip, asr #3
   16128:	andeq	r6, r1, r4, lsl #6
   1612c:	andeq	r6, r1, r4, lsl #6
   16130:	andeq	r6, r1, r4, lsl #6
   16134:	andeq	r6, r1, r4, ror #3
   16138:	andeq	r6, r1, r4, lsl #6
   1613c:	andeq	r6, r1, r4, lsl #6
   16140:	andeq	r6, r1, r4, lsl #6
   16144:	strdeq	r6, [r1], -ip
   16148:	mov	r1, r6
   1614c:	ldr	r0, [pc, #1736]	; 1681c <XRRGetOutputInfo@plt+0x4dbc>
   16150:	bl	11658 <strcmp@plt>
   16154:	cmp	r0, #0
   16158:	bne	16238 <XRRGetOutputInfo@plt+0x47d8>
   1615c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16160:	cmp	r3, #0
   16164:	beq	1622c <XRRGetOutputInfo@plt+0x47cc>
   16168:	add	r4, r4, #1
   1616c:	cmp	sl, r4
   16170:	ble	16220 <XRRGetOutputInfo@plt+0x47c0>
   16174:	ldr	r2, [fp, #-272]	; 0xfffffef0
   16178:	ldr	r1, [pc, #1696]	; 16820 <XRRGetOutputInfo@plt+0x4dc0>
   1617c:	add	r3, r2, #240	; 0xf0
   16180:	str	r3, [sp]
   16184:	add	r3, r2, #236	; 0xec
   16188:	ldr	r0, [r8, r4, lsl #2]
   1618c:	add	r2, r2, #232	; 0xe8
   16190:	bl	118a4 <__isoc99_sscanf@plt>
   16194:	add	r3, r8, r4, lsl #2
   16198:	cmp	r0, #3
   1619c:	bne	16210 <XRRGetOutputInfo@plt+0x47b0>
   161a0:	ldr	r2, [fp, #-272]	; 0xfffffef0
   161a4:	mov	r1, #1
   161a8:	str	r1, [fp, #-312]	; 0xfffffec8
   161ac:	ldr	r3, [r2, #4]
   161b0:	orr	r3, r3, #2048	; 0x800
   161b4:	str	r3, [r2, #4]
   161b8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   161bc:	ldr	r2, [fp, #-272]	; 0xfffffef0
   161c0:	mov	r3, #0
   161c4:	str	r3, [r2, #128]	; 0x80
   161c8:	str	r3, [r2, #124]	; 0x7c
   161cc:	ldr	r2, [fp, #-272]	; 0xfffffef0
   161d0:	mov	r3, #0
   161d4:	str	r3, [r2, #152]	; 0x98
   161d8:	str	r3, [r2, #148]	; 0x94
   161dc:	str	r3, [r2, #144]	; 0x90
   161e0:	str	r3, [r2, #140]	; 0x8c
   161e4:	ldr	r2, [fp, #-272]	; 0xfffffef0
   161e8:	mov	r3, #0
   161ec:	str	r3, [r2, #168]	; 0xa8
   161f0:	str	r3, [r2, #164]	; 0xa4
   161f4:	str	r3, [r2, #160]	; 0xa0
   161f8:	str	r3, [r2, #156]	; 0x9c
   161fc:	ldr	r2, [fp, #-272]	; 0xfffffef0
   16200:	ldr	r3, [r2, #4]
   16204:	orr	r3, r3, #1024	; 0x400
   16208:	str	r3, [r2, #4]
   1620c:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16210:	ldr	r2, [r3]
   16214:	ldr	r1, [r8, r5, lsl #2]
   16218:	ldr	r0, [pc, #1504]	; 16800 <XRRGetOutputInfo@plt+0x4da0>
   1621c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16220:	ldr	r1, [r8, r5, lsl #2]
   16224:	ldr	r0, [pc, #1732]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16228:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   1622c:	mov	r1, r6
   16230:	ldr	r0, [pc, #1484]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16234:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16238:	mov	r1, r6
   1623c:	ldr	r0, [pc, #1504]	; 16824 <XRRGetOutputInfo@plt+0x4dc4>
   16240:	bl	11658 <strcmp@plt>
   16244:	cmp	r0, #0
   16248:	bne	162c4 <XRRGetOutputInfo@plt+0x4864>
   1624c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16250:	cmp	r3, #0
   16254:	beq	162b8 <XRRGetOutputInfo@plt+0x4858>
   16258:	add	r4, r4, #1
   1625c:	cmp	sl, r4
   16260:	ble	162ac <XRRGetOutputInfo@plt+0x484c>
   16264:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16268:	ldr	r1, [pc, #1464]	; 16828 <XRRGetOutputInfo@plt+0x4dc8>
   1626c:	add	r2, r3, #244	; 0xf4
   16270:	ldr	r0, [r8, r4, lsl #2]
   16274:	bl	118a4 <__isoc99_sscanf@plt>
   16278:	add	r3, r8, r4, lsl #2
   1627c:	cmp	r0, #1
   16280:	str	r0, [fp, #-312]	; 0xfffffec8
   16284:	bne	1629c <XRRGetOutputInfo@plt+0x483c>
   16288:	ldr	r2, [fp, #-272]	; 0xfffffef0
   1628c:	ldr	r3, [r2, #4]
   16290:	orr	r3, r3, #2048	; 0x800
   16294:	str	r3, [r2, #4]
   16298:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   1629c:	ldr	r2, [r3]
   162a0:	ldr	r1, [r8, r5, lsl #2]
   162a4:	ldr	r0, [pc, #1364]	; 16800 <XRRGetOutputInfo@plt+0x4da0>
   162a8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   162ac:	ldr	r1, [r8, r5, lsl #2]
   162b0:	ldr	r0, [pc, #1592]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   162b4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   162b8:	mov	r1, r6
   162bc:	ldr	r0, [pc, #1344]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   162c0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   162c4:	mov	r1, r6
   162c8:	ldr	r0, [pc, #1372]	; 1682c <XRRGetOutputInfo@plt+0x4dcc>
   162cc:	bl	11658 <strcmp@plt>
   162d0:	cmp	r0, #0
   162d4:	bne	16338 <XRRGetOutputInfo@plt+0x48d8>
   162d8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   162dc:	cmp	r3, #0
   162e0:	beq	1632c <XRRGetOutputInfo@plt+0x48cc>
   162e4:	ldr	r1, [fp, #-272]	; 0xfffffef0
   162e8:	mov	r2, #1
   162ec:	str	r2, [fp, #-312]	; 0xfffffec8
   162f0:	ldr	r3, [r1, #4]
   162f4:	str	r2, [r1, #248]	; 0xf8
   162f8:	orr	r3, r3, #4096	; 0x1000
   162fc:	str	r3, [r1, #4]
   16300:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16304:	ldr	r2, [r3]
   16308:	ldr	r1, [r8, r5, lsl #2]
   1630c:	ldr	r0, [pc, #1260]	; 16800 <XRRGetOutputInfo@plt+0x4da0>
   16310:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16314:	ldr	r1, [r8, r5, lsl #2]
   16318:	ldr	r0, [pc, #1488]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   1631c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16320:	mov	r1, r6
   16324:	ldr	r0, [pc, #1240]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16328:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   1632c:	mov	r1, r6
   16330:	ldr	r0, [pc, #1228]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16334:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16338:	mov	r1, r6
   1633c:	ldr	r0, [pc, #1260]	; 16830 <XRRGetOutputInfo@plt+0x4dd0>
   16340:	bl	11658 <strcmp@plt>
   16344:	cmp	r0, #0
   16348:	beq	163c8 <XRRGetOutputInfo@plt+0x4968>
   1634c:	mov	r1, r6
   16350:	ldr	r0, [pc, #1244]	; 16834 <XRRGetOutputInfo@plt+0x4dd4>
   16354:	bl	11658 <strcmp@plt>
   16358:	cmp	r0, #0
   1635c:	bne	163f4 <XRRGetOutputInfo@plt+0x4994>
   16360:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16364:	cmp	r3, #0
   16368:	beq	163e8 <XRRGetOutputInfo@plt+0x4988>
   1636c:	add	r5, r4, #2
   16370:	cmp	r5, sl
   16374:	bge	163dc <XRRGetOutputInfo@plt+0x497c>
   16378:	mov	r0, #12
   1637c:	bl	117b4 <malloc@plt>
   16380:	ldr	r1, [fp, #-272]	; 0xfffffef0
   16384:	add	r4, r4, #1
   16388:	ldr	r2, [r1, #8]
   1638c:	add	r3, r8, r4, lsl #2
   16390:	str	r2, [r0]
   16394:	str	r0, [r1, #8]
   16398:	ldr	r2, [r8, r4, lsl #2]
   1639c:	ldr	r3, [r3, #4]
   163a0:	mov	r4, r5
   163a4:	strd	r2, [r0, #4]
   163a8:	ldr	r3, [r1, #4]
   163ac:	mov	r2, r1
   163b0:	orr	r3, r3, #256	; 0x100
   163b4:	mov	r1, #1
   163b8:	str	r1, [fp, #-280]	; 0xfffffee8
   163bc:	str	r3, [r2, #4]
   163c0:	str	r1, [fp, #-312]	; 0xfffffec8
   163c4:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   163c8:	ldr	r2, [pc, #1328]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   163cc:	mov	r3, #1
   163d0:	str	r3, [fp, #-312]	; 0xfffffec8
   163d4:	str	r3, [r2, #84]	; 0x54
   163d8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   163dc:	mov	r1, r6
   163e0:	ldr	r0, [pc, #1300]	; 168fc <XRRGetOutputInfo@plt+0x4e9c>
   163e4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   163e8:	mov	r1, r6
   163ec:	ldr	r0, [pc, #1040]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   163f0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   163f4:	mov	r1, r6
   163f8:	ldr	r0, [pc, #1080]	; 16838 <XRRGetOutputInfo@plt+0x4dd8>
   163fc:	bl	11658 <strcmp@plt>
   16400:	cmp	r0, #0
   16404:	bne	164c8 <XRRGetOutputInfo@plt+0x4a68>
   16408:	ldr	r3, [fp, #-272]	; 0xfffffef0
   1640c:	cmp	r3, #0
   16410:	beq	16600 <XRRGetOutputInfo@plt+0x4ba0>
   16414:	add	r4, r4, #1
   16418:	cmp	sl, r4
   1641c:	ble	165f4 <XRRGetOutputInfo@plt+0x4b94>
   16420:	sub	r3, fp, #204	; 0xcc
   16424:	sub	r2, fp, #212	; 0xd4
   16428:	ldr	r1, [pc, #1036]	; 1683c <XRRGetOutputInfo@plt+0x4ddc>
   1642c:	ldr	r0, [r8, r4, lsl #2]
   16430:	bl	118a4 <__isoc99_sscanf@plt>
   16434:	add	r3, r8, r4, lsl #2
   16438:	cmp	r0, #2
   1643c:	bne	16548 <XRRGetOutputInfo@plt+0x4ae8>
   16440:	ldr	r5, [fp, #-272]	; 0xfffffef0
   16444:	add	r0, r5, #184	; 0xb8
   16448:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   1644c:	vldr	d4, [fp, #-212]	; 0xffffff2c
   16450:	vldr	d7, [pc, #920]	; 167f0 <XRRGetOutputInfo@plt+0x4d90>
   16454:	vldr	d5, [pc, #924]	; 167f8 <XRRGetOutputInfo@plt+0x4d98>
   16458:	mov	ip, #0
   1645c:	ldr	r1, [r5, #4]
   16460:	vmul.f64	d6, d4, d7
   16464:	ldr	r0, [pc, #980]	; 16840 <XRRGetOutputInfo@plt+0x4de0>
   16468:	vcmp.f64	d4, d5
   1646c:	ldr	r3, [pc, #976]	; 16844 <XRRGetOutputInfo@plt+0x4de4>
   16470:	orr	r1, r1, #512	; 0x200
   16474:	mov	lr, #65536	; 0x10000
   16478:	vmrs	APSR_nzcv, fpscr
   1647c:	vcvt.s32.f64	s12, d6
   16480:	movne	r2, #1
   16484:	moveq	r2, #0
   16488:	vstr	s12, [r5, #184]	; 0xb8
   1648c:	vldr	d6, [fp, #-204]	; 0xffffff34
   16490:	str	r1, [r5, #4]
   16494:	str	lr, [r5, #216]	; 0xd8
   16498:	str	ip, [r5, #224]	; 0xe0
   1649c:	vmul.f64	d7, d6, d7
   164a0:	str	ip, [r5, #228]	; 0xe4
   164a4:	vcmp.f64	d6, d5
   164a8:	vmrs	APSR_nzcv, fpscr
   164ac:	vcvt.s32.f64	s14, d7
   164b0:	movne	r2, #1
   164b4:	cmp	r2, ip
   164b8:	moveq	r3, r0
   164bc:	str	r3, [r5, #220]	; 0xdc
   164c0:	vstr	s14, [r5, #200]	; 0xc8
   164c4:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   164c8:	mov	r1, r6
   164cc:	ldr	r0, [pc, #884]	; 16848 <XRRGetOutputInfo@plt+0x4de8>
   164d0:	bl	11658 <strcmp@plt>
   164d4:	cmp	r0, #0
   164d8:	bne	16580 <XRRGetOutputInfo@plt+0x4b20>
   164dc:	ldr	r3, [fp, #-272]	; 0xfffffef0
   164e0:	cmp	r3, #0
   164e4:	beq	16574 <XRRGetOutputInfo@plt+0x4b14>
   164e8:	add	r4, r4, #1
   164ec:	cmp	sl, r4
   164f0:	ble	16568 <XRRGetOutputInfo@plt+0x4b08>
   164f4:	sub	r3, fp, #204	; 0xcc
   164f8:	sub	r2, fp, #212	; 0xd4
   164fc:	ldr	r1, [pc, #840]	; 1684c <XRRGetOutputInfo@plt+0x4dec>
   16500:	ldr	r0, [r8, r4, lsl #2]
   16504:	bl	118a4 <__isoc99_sscanf@plt>
   16508:	add	r3, r8, r4, lsl #2
   1650c:	cmp	r0, #2
   16510:	bne	1655c <XRRGetOutputInfo@plt+0x4afc>
   16514:	ldr	r1, [fp, #-212]	; 0xffffff2c
   16518:	cmp	r1, #0
   1651c:	ble	16554 <XRRGetOutputInfo@plt+0x4af4>
   16520:	ldr	r2, [fp, #-204]	; 0xffffff34
   16524:	cmp	r2, #0
   16528:	ble	16554 <XRRGetOutputInfo@plt+0x4af4>
   1652c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   16530:	ldr	r3, [r0, #4]
   16534:	str	r1, [r0, #176]	; 0xb0
   16538:	orr	r3, r3, #512	; 0x200
   1653c:	str	r2, [r0, #180]	; 0xb4
   16540:	str	r3, [r0, #4]
   16544:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16548:	ldr	r1, [r3]
   1654c:	ldr	r0, [pc, #764]	; 16850 <XRRGetOutputInfo@plt+0x4df0>
   16550:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16554:	ldr	r0, [pc, #760]	; 16854 <XRRGetOutputInfo@plt+0x4df4>
   16558:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   1655c:	ldr	r1, [r3]
   16560:	ldr	r0, [pc, #752]	; 16858 <XRRGetOutputInfo@plt+0x4df8>
   16564:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16568:	ldr	r1, [r8, r5, lsl #2]
   1656c:	ldr	r0, [pc, #892]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16570:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16574:	mov	r1, r6
   16578:	ldr	r0, [pc, #644]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   1657c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16580:	mov	r1, r6
   16584:	ldr	r0, [pc, #720]	; 1685c <XRRGetOutputInfo@plt+0x4dfc>
   16588:	bl	11658 <strcmp@plt>
   1658c:	cmp	r0, #0
   16590:	bne	166e4 <XRRGetOutputInfo@plt+0x4c84>
   16594:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16598:	cmp	r3, #0
   1659c:	beq	166d8 <XRRGetOutputInfo@plt+0x4c78>
   165a0:	add	r4, r4, #1
   165a4:	cmp	sl, r4
   165a8:	ble	166c0 <XRRGetOutputInfo@plt+0x4c60>
   165ac:	ldr	r3, [fp, #-272]	; 0xfffffef0
   165b0:	add	r7, r8, r4, lsl #2
   165b4:	add	r5, r3, #184	; 0xb8
   165b8:	mov	r0, r5
   165bc:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   165c0:	ldr	r3, [r8, r4, lsl #2]
   165c4:	ldr	r1, [pc, #772]	; 168d0 <XRRGetOutputInfo@plt+0x4e70>
   165c8:	mov	r0, r3
   165cc:	str	r3, [fp, #-284]	; 0xfffffee4
   165d0:	bl	11658 <strcmp@plt>
   165d4:	ldr	r3, [fp, #-284]	; 0xfffffee4
   165d8:	cmp	r0, #0
   165dc:	bne	1660c <XRRGetOutputInfo@plt+0x4bac>
   165e0:	ldr	r2, [fp, #-272]	; 0xfffffef0
   165e4:	ldr	r3, [r2, #4]
   165e8:	orr	r3, r3, #512	; 0x200
   165ec:	str	r3, [r2, #4]
   165f0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   165f4:	ldr	r1, [r8, r5, lsl #2]
   165f8:	ldr	r0, [pc, #752]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   165fc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16600:	mov	r1, r6
   16604:	ldr	r0, [pc, #504]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16608:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   1660c:	sub	ip, fp, #132	; 0x84
   16610:	sub	r1, fp, #140	; 0x8c
   16614:	mov	r0, r3
   16618:	str	ip, [sp, #20]
   1661c:	sub	r3, fp, #148	; 0x94
   16620:	sub	ip, fp, #156	; 0x9c
   16624:	str	r1, [sp, #16]
   16628:	sub	r1, fp, #164	; 0xa4
   1662c:	sub	lr, fp, #124	; 0x7c
   16630:	str	r3, [sp, #12]
   16634:	sub	r6, fp, #188	; 0xbc
   16638:	sub	r3, fp, #172	; 0xac
   1663c:	stmib	sp, {r1, ip}
   16640:	str	r3, [sp]
   16644:	mov	r2, r6
   16648:	str	lr, [sp, #24]
   1664c:	sub	r3, fp, #180	; 0xb4
   16650:	ldr	r1, [pc, #520]	; 16860 <XRRGetOutputInfo@plt+0x4e00>
   16654:	bl	118a4 <__isoc99_sscanf@plt>
   16658:	cmp	r0, #9
   1665c:	bne	166cc <XRRGetOutputInfo@plt+0x4c6c>
   16660:	mov	r0, r5
   16664:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   16668:	ldr	r3, [fp, #-272]	; 0xfffffef0
   1666c:	vldr	d6, [pc, #380]	; 167f0 <XRRGetOutputInfo@plt+0x4d90>
   16670:	add	r0, r3, #220	; 0xdc
   16674:	mov	r1, r5
   16678:	mov	r2, r6
   1667c:	mov	r3, #3
   16680:	vldmia	r2!, {d7}
   16684:	subs	r3, r3, #1
   16688:	vmul.f64	d7, d7, d6
   1668c:	vcvt.s32.f64	s14, d7
   16690:	vstmia	r1!, {s14}
   16694:	bne	16680 <XRRGetOutputInfo@plt+0x4c20>
   16698:	add	r5, r5, #12
   1669c:	cmp	r0, r5
   166a0:	add	r6, r6, #24
   166a4:	bne	16674 <XRRGetOutputInfo@plt+0x4c14>
   166a8:	ldr	r1, [fp, #-272]	; 0xfffffef0
   166ac:	ldr	r2, [pc, #400]	; 16844 <XRRGetOutputInfo@plt+0x4de4>
   166b0:	str	r3, [r1, #224]	; 0xe0
   166b4:	str	r3, [r1, #228]	; 0xe4
   166b8:	str	r2, [r1, #220]	; 0xdc
   166bc:	b	165e0 <XRRGetOutputInfo@plt+0x4b80>
   166c0:	ldr	r1, [r8, r5, lsl #2]
   166c4:	ldr	r0, [pc, #548]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   166c8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   166cc:	ldr	r1, [r7]
   166d0:	ldr	r0, [pc, #396]	; 16864 <XRRGetOutputInfo@plt+0x4e04>
   166d4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   166d8:	mov	r1, r6
   166dc:	ldr	r0, [pc, #288]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   166e0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   166e4:	mov	r1, r6
   166e8:	ldr	r0, [pc, #376]	; 16868 <XRRGetOutputInfo@plt+0x4e08>
   166ec:	bl	11658 <strcmp@plt>
   166f0:	cmp	r0, #0
   166f4:	bne	1673c <XRRGetOutputInfo@plt+0x4cdc>
   166f8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   166fc:	cmp	r3, #0
   16700:	beq	16788 <XRRGetOutputInfo@plt+0x4d28>
   16704:	ldr	r3, [fp, #-272]	; 0xfffffef0
   16708:	ldr	r1, [r3, #56]	; 0x38
   1670c:	ldr	r2, [r3, #32]
   16710:	str	r0, [r3, #64]	; 0x40
   16714:	str	r0, [r3, #40]	; 0x28
   16718:	mov	r0, r3
   1671c:	ldr	r3, [r3, #4]
   16720:	orr	r1, r1, #2
   16724:	orr	r2, r2, #2
   16728:	orr	r3, r3, #3
   1672c:	str	r1, [r0, #56]	; 0x38
   16730:	str	r2, [r0, #32]
   16734:	str	r3, [r0, #4]
   16738:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   1673c:	mov	r1, r6
   16740:	ldr	r0, [pc, #292]	; 1686c <XRRGetOutputInfo@plt+0x4e0c>
   16744:	bl	11658 <strcmp@plt>
   16748:	cmp	r0, #0
   1674c:	bne	167a0 <XRRGetOutputInfo@plt+0x4d40>
   16750:	add	r4, r4, #1
   16754:	cmp	sl, r4
   16758:	ble	16794 <XRRGetOutputInfo@plt+0x4d34>
   1675c:	ldr	r3, [pc, #268]	; 16870 <XRRGetOutputInfo@plt+0x4e10>
   16760:	ldr	r1, [pc, #228]	; 1684c <XRRGetOutputInfo@plt+0x4dec>
   16764:	add	r2, r3, #4
   16768:	ldr	r0, [r8, r4, lsl #2]
   1676c:	bl	118a4 <__isoc99_sscanf@plt>
   16770:	add	r3, r8, r4, lsl #2
   16774:	cmp	r0, #2
   16778:	beq	15774 <XRRGetOutputInfo@plt+0x3d14>
   1677c:	ldr	r1, [r3]
   16780:	ldr	r0, [pc, #236]	; 16874 <XRRGetOutputInfo@plt+0x4e14>
   16784:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16788:	mov	r1, r6
   1678c:	ldr	r0, [pc, #112]	; 16804 <XRRGetOutputInfo@plt+0x4da4>
   16790:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16794:	ldr	r1, [r8, r5, lsl #2]
   16798:	ldr	r0, [pc, #336]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   1679c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   167a0:	mov	r1, r6
   167a4:	ldr	r0, [pc, #204]	; 16878 <XRRGetOutputInfo@plt+0x4e18>
   167a8:	bl	11658 <strcmp@plt>
   167ac:	cmp	r0, #0
   167b0:	bne	16904 <XRRGetOutputInfo@plt+0x4ea4>
   167b4:	add	r4, r4, #1
   167b8:	cmp	sl, r4
   167bc:	ble	16958 <XRRGetOutputInfo@plt+0x4ef8>
   167c0:	ldr	r3, [pc, #180]	; 1687c <XRRGetOutputInfo@plt+0x4e1c>
   167c4:	ldr	r1, [pc, #128]	; 1684c <XRRGetOutputInfo@plt+0x4dec>
   167c8:	add	r2, r3, #4
   167cc:	ldr	r0, [r8, r4, lsl #2]
   167d0:	bl	118a4 <__isoc99_sscanf@plt>
   167d4:	add	r3, r8, r4, lsl #2
   167d8:	cmp	r0, #2
   167dc:	beq	15774 <XRRGetOutputInfo@plt+0x3d14>
   167e0:	ldr	r1, [r3]
   167e4:	ldr	r0, [pc, #148]	; 16880 <XRRGetOutputInfo@plt+0x4e20>
   167e8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   167ec:	nop			; (mov r0, r0)
   167f0:	andeq	r0, r0, r0
   167f4:	rscsmi	r0, r0, r0
   167f8:	andeq	r0, r0, r0
   167fc:	svccc	0x00f00000	; IMB
   16800:	andeq	sl, r1, r0, ror #23
   16804:	andeq	sl, r1, r0, asr #24
   16808:	strdeq	sl, [r1], -r4
   1680c:	strdeq	sl, [r1], -ip
   16810:	andeq	sl, r1, r4, lsl #26
   16814:	andeq	sl, r1, r0, lsl sp
   16818:	andeq	sl, r1, ip, lsl sp
   1681c:	andeq	sl, r1, r0, asr #26
   16820:	andeq	sl, r1, r8, asr #26
   16824:	andeq	sl, r1, r4, asr sp
   16828:	andeq	sl, r1, r4, ror #26
   1682c:	andeq	sl, r1, r8, ror #26
   16830:	andeq	sl, r1, r4, ror sp
   16834:	andeq	sl, r1, r0, lsl #27
   16838:	andeq	sl, r1, r4, lsr #27
   1683c:	andeq	sl, r1, ip, lsr #27
   16840:	andeq	sl, r1, r0, asr #2
   16844:	andeq	sl, r1, r4, lsr r1
   16848:	andeq	sl, r1, r0, ror #27
   1684c:	andeq	sl, r1, ip, lsr #22
   16850:			; <UNDEFINED> instruction: 0x0001adb4
   16854:	andeq	sl, r1, ip, lsl lr
   16858:	strdeq	sl, [r1], -r0
   1685c:	andeq	sl, r1, ip, asr #28
   16860:	andeq	sl, r1, r8, asr lr
   16864:	andeq	sl, r1, ip, ror lr
   16868:	andeq	sl, r1, r8, lsr #29
   1686c:			; <UNDEFINED> instruction: 0x0001aeb0
   16870:	strdeq	ip, [r2], -r8
   16874:			; <UNDEFINED> instruction: 0x0001aeb8
   16878:	andeq	sl, r1, r4, ror #29
   1687c:	andeq	ip, r2, r0, lsl #4
   16880:	andeq	sl, r1, ip, ror #29
   16884:	andeq	sl, r1, r8, lsl pc
   16888:	andeq	sl, r1, r0, lsr #30
   1688c:	andeq	sl, r1, r8, lsr #30
   16890:	andeq	sl, r1, r0, lsr pc
   16894:	andeq	sl, r1, r8, lsr pc
   16898:	andeq	sl, r1, r4, ror pc
   1689c:	andeq	sl, r1, r0, lsl #31
   168a0:	andeq	sl, r1, ip, lsl #31
   168a4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   168a8:	andeq	sl, r1, r8, lsr #31
   168ac:	andeq	ip, r2, r8, lsr #4
   168b0:	andeq	sl, r1, r4, asr #31
   168b4:	andeq	ip, r2, r8, lsl r2
   168b8:	andeq	ip, r2, r8, lsr r2
   168bc:	andeq	sl, r1, r0, ror #31
   168c0:	strdeq	sl, [r1], -r0
   168c4:	andeq	fp, r1, r8
   168c8:	andeq	fp, r1, r4, lsr r0
   168cc:	andeq	fp, r1, ip, lsr r0
   168d0:	andeq	sl, r1, ip, lsl #2
   168d4:	andeq	fp, r1, r8, lsl r0
   168d8:	andeq	fp, r1, ip, ror r0
   168dc:	andeq	fp, r1, ip, lsr #1
   168e0:	andeq	fp, r1, ip, lsl #1
   168e4:	muleq	r1, ip, r0
   168e8:	strheq	fp, [r1], -r0
   168ec:	andeq	ip, r2, ip, ror #3
   168f0:	andeq	sl, r1, r0, ror #6
   168f4:	andeq	fp, r1, r0, asr #1
   168f8:	andeq	fp, r1, r0, asr r0
   168fc:	andeq	sl, r1, r8, lsl #27
   16900:	andeq	ip, r2, r0, lsr #3
   16904:	mov	r1, r6
   16908:	ldr	r0, [pc, #-140]	; 16884 <XRRGetOutputInfo@plt+0x4e24>
   1690c:	bl	11658 <strcmp@plt>
   16910:	cmp	r0, #0
   16914:	bne	16970 <XRRGetOutputInfo@plt+0x4f10>
   16918:	add	r4, r4, #1
   1691c:	cmp	sl, r4
   16920:	ble	16964 <XRRGetOutputInfo@plt+0x4f04>
   16924:	sub	r1, fp, #204	; 0xcc
   16928:	ldr	r0, [r8, r4, lsl #2]
   1692c:	bl	11928 <strtod@plt>
   16930:	ldr	r2, [fp, #-204]	; 0xffffff34
   16934:	ldr	r3, [r8, r4, lsl #2]
   16938:	cmp	r3, r2
   1693c:	ldr	r2, [pc, #-68]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16940:	vstr	d0, [r2, #104]	; 0x68
   16944:	moveq	r0, #0
   16948:	moveq	r1, #0
   1694c:	streq	r3, [r2, #112]	; 0x70
   16950:	strdeq	r0, [r2, #104]	; 0x68
   16954:	b	15774 <XRRGetOutputInfo@plt+0x3d14>
   16958:	ldr	r1, [r8, r5, lsl #2]
   1695c:	ldr	r0, [pc, #-116]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16960:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16964:	ldr	r1, [r8, r5, lsl #2]
   16968:	ldr	r0, [pc, #-128]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   1696c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16970:	mov	r1, r6
   16974:	ldr	r0, [pc, #-244]	; 16888 <XRRGetOutputInfo@plt+0x4e28>
   16978:	bl	11658 <strcmp@plt>
   1697c:	cmp	r0, #0
   16980:	beq	16a80 <XRRGetOutputInfo@plt+0x5020>
   16984:	mov	r1, r6
   16988:	ldr	r0, [pc, #-260]	; 1688c <XRRGetOutputInfo@plt+0x4e2c>
   1698c:	bl	11658 <strcmp@plt>
   16990:	cmp	r0, #0
   16994:	beq	170b4 <XRRGetOutputInfo@plt+0x5654>
   16998:	mov	r1, r6
   1699c:	ldr	r0, [pc, #-276]	; 16890 <XRRGetOutputInfo@plt+0x4e30>
   169a0:	bl	11658 <strcmp@plt>
   169a4:	cmp	r0, #0
   169a8:	beq	170a8 <XRRGetOutputInfo@plt+0x5648>
   169ac:	mov	r1, r6
   169b0:	ldr	r0, [pc, #-292]	; 16894 <XRRGetOutputInfo@plt+0x4e34>
   169b4:	bl	11658 <strcmp@plt>
   169b8:	cmp	r0, #0
   169bc:	beq	16f44 <XRRGetOutputInfo@plt+0x54e4>
   169c0:	mov	r1, r6
   169c4:	ldr	r0, [pc, #-308]	; 16898 <XRRGetOutputInfo@plt+0x4e38>
   169c8:	bl	11658 <strcmp@plt>
   169cc:	cmp	r0, #0
   169d0:	beq	16ef0 <XRRGetOutputInfo@plt+0x5490>
   169d4:	mov	r1, r6
   169d8:	ldr	r0, [pc, #-324]	; 1689c <XRRGetOutputInfo@plt+0x4e3c>
   169dc:	bl	11658 <strcmp@plt>
   169e0:	cmp	r0, #0
   169e4:	beq	16e88 <XRRGetOutputInfo@plt+0x5428>
   169e8:	mov	r1, r6
   169ec:	ldr	r0, [pc, #-340]	; 168a0 <XRRGetOutputInfo@plt+0x4e40>
   169f0:	bl	11658 <strcmp@plt>
   169f4:	cmp	r0, #0
   169f8:	beq	16e20 <XRRGetOutputInfo@plt+0x53c0>
   169fc:	mov	r1, r6
   16a00:	ldr	r0, [pc, #-356]	; 168a4 <XRRGetOutputInfo@plt+0x4e44>
   16a04:	bl	11658 <strcmp@plt>
   16a08:	cmp	r0, #0
   16a0c:	beq	16b64 <XRRGetOutputInfo@plt+0x5104>
   16a10:	mov	r1, r6
   16a14:	ldr	r0, [pc, #-372]	; 168a8 <XRRGetOutputInfo@plt+0x4e48>
   16a18:	bl	11658 <strcmp@plt>
   16a1c:	subs	r3, r0, #0
   16a20:	bne	16af4 <XRRGetOutputInfo@plt+0x5094>
   16a24:	add	r2, r4, #1
   16a28:	cmp	sl, r2
   16a2c:	ble	16ad0 <XRRGetOutputInfo@plt+0x5070>
   16a30:	add	r7, r8, r7
   16a34:	add	r4, r4, #2
   16a38:	ldr	r1, [r7, #4]
   16a3c:	mov	r2, #7
   16a40:	ldr	r0, [pc, #-404]	; 168b4 <XRRGetOutputInfo@plt+0x4e54>
   16a44:	str	r3, [fp, #-268]	; 0xfffffef4
   16a48:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16a4c:	cmp	sl, r4
   16a50:	bgt	16aac <XRRGetOutputInfo@plt+0x504c>
   16a54:	ldr	r3, [pc, #-348]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16a58:	mov	r0, #1
   16a5c:	mov	r1, r3
   16a60:	ldr	r2, [r3, #136]	; 0x88
   16a64:	ldr	r3, [fp, #-268]	; 0xfffffef4
   16a68:	orr	r2, r2, #2
   16a6c:	str	r0, [fp, #-340]	; 0xfffffeac
   16a70:	str	r3, [r1, #144]	; 0x90
   16a74:	str	r2, [r1, #136]	; 0x88
   16a78:	str	r0, [fp, #-268]	; 0xfffffef4
   16a7c:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16a80:	ldr	r1, [fp, #-272]	; 0xfffffef0
   16a84:	cmp	r1, #0
   16a88:	beq	16adc <XRRGetOutputInfo@plt+0x507c>
   16a8c:	ldr	r3, [r1, #4]
   16a90:	mov	r2, #1
   16a94:	orr	r3, r3, #64	; 0x40
   16a98:	str	r2, [fp, #-312]	; 0xfffffec8
   16a9c:	str	r3, [r1, #4]
   16aa0:	str	r2, [r1, #172]	; 0xac
   16aa4:	str	r2, [fp, #-268]	; 0xfffffef4
   16aa8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16aac:	mov	r3, #1
   16ab0:	mov	r5, r3
   16ab4:	ldr	r1, [r7, #8]
   16ab8:	mov	r2, #7
   16abc:	ldr	r0, [pc, #-536]	; 168ac <XRRGetOutputInfo@plt+0x4e4c>
   16ac0:	str	r3, [fp, #-340]	; 0xfffffeac
   16ac4:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16ac8:	str	r5, [fp, #-268]	; 0xfffffef4
   16acc:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16ad0:	ldr	r1, [r8, r4, lsl #2]
   16ad4:	ldr	r0, [pc, #-492]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16ad8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16adc:	ldr	r1, [pc, #-484]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16ae0:	mov	r3, #1
   16ae4:	str	r3, [fp, #-312]	; 0xfffffec8
   16ae8:	str	r3, [r1, #72]	; 0x48
   16aec:	str	r3, [fp, #-268]	; 0xfffffef4
   16af0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16af4:	mov	r1, r6
   16af8:	ldr	r0, [pc, #-592]	; 168b0 <XRRGetOutputInfo@plt+0x4e50>
   16afc:	bl	11658 <strcmp@plt>
   16b00:	subs	r3, r0, #0
   16b04:	bne	16ba4 <XRRGetOutputInfo@plt+0x5144>
   16b08:	add	r2, r4, #1
   16b0c:	cmp	sl, r2
   16b10:	ble	16b98 <XRRGetOutputInfo@plt+0x5138>
   16b14:	add	r7, r8, r7
   16b18:	add	r4, r4, #2
   16b1c:	ldr	r1, [r7, #4]
   16b20:	mov	r2, #7
   16b24:	ldr	r0, [pc, #-632]	; 168b4 <XRRGetOutputInfo@plt+0x4e54>
   16b28:	str	r3, [fp, #-268]	; 0xfffffef4
   16b2c:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16b30:	cmp	sl, r4
   16b34:	bgt	16b74 <XRRGetOutputInfo@plt+0x5114>
   16b38:	ldr	r3, [pc, #-576]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16b3c:	mov	r0, #1
   16b40:	mov	r1, r3
   16b44:	ldr	r2, [r3, #152]	; 0x98
   16b48:	ldr	r3, [fp, #-268]	; 0xfffffef4
   16b4c:	orr	r2, r2, #2
   16b50:	str	r0, [fp, #-336]	; 0xfffffeb0
   16b54:	str	r3, [r1, #160]	; 0xa0
   16b58:	str	r2, [r1, #152]	; 0x98
   16b5c:	str	r0, [fp, #-268]	; 0xfffffef4
   16b60:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16b64:	mov	r3, #1
   16b68:	str	r3, [fp, #-368]	; 0xfffffe90
   16b6c:	str	r3, [fp, #-268]	; 0xfffffef4
   16b70:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16b74:	mov	r3, #1
   16b78:	mov	r5, r3
   16b7c:	ldr	r1, [r7, #8]
   16b80:	mov	r2, #7
   16b84:	ldr	r0, [pc, #-724]	; 168b8 <XRRGetOutputInfo@plt+0x4e58>
   16b88:	str	r3, [fp, #-336]	; 0xfffffeb0
   16b8c:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16b90:	str	r5, [fp, #-268]	; 0xfffffef4
   16b94:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16b98:	ldr	r1, [r8, r4, lsl #2]
   16b9c:	ldr	r0, [pc, #-692]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16ba0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16ba4:	mov	r1, r6
   16ba8:	ldr	r0, [pc, #-756]	; 168bc <XRRGetOutputInfo@plt+0x4e5c>
   16bac:	bl	11658 <strcmp@plt>
   16bb0:	cmp	r0, #0
   16bb4:	beq	16e04 <XRRGetOutputInfo@plt+0x53a4>
   16bb8:	mov	r1, r6
   16bbc:	ldr	r0, [pc, #-772]	; 168c0 <XRRGetOutputInfo@plt+0x4e60>
   16bc0:	bl	11658 <strcmp@plt>
   16bc4:	cmp	r0, #0
   16bc8:	beq	16dc8 <XRRGetOutputInfo@plt+0x5368>
   16bcc:	mov	r1, r6
   16bd0:	ldr	r0, [pc, #-788]	; 168c4 <XRRGetOutputInfo@plt+0x4e64>
   16bd4:	bl	11658 <strcmp@plt>
   16bd8:	cmp	r0, #0
   16bdc:	bne	16d68 <XRRGetOutputInfo@plt+0x5308>
   16be0:	mov	r1, #48	; 0x30
   16be4:	mov	r0, #1
   16be8:	bl	11628 <calloc@plt>
   16bec:	add	r4, r4, #3
   16bf0:	cmp	r4, sl
   16bf4:	mov	r5, r0
   16bf8:	bge	16cbc <XRRGetOutputInfo@plt+0x525c>
   16bfc:	add	r6, r8, r7
   16c00:	add	r7, r7, #8
   16c04:	ldr	r1, [r6, #4]
   16c08:	mov	ip, #1
   16c0c:	mov	r2, #4
   16c10:	ldrb	r3, [r1]
   16c14:	cmp	r3, #42	; 0x2a
   16c18:	moveq	r3, #1
   16c1c:	streq	r3, [r0, #12]
   16c20:	ldr	r3, [r8, r7]
   16c24:	addeq	r1, r1, #1
   16c28:	str	r1, [r5, #4]
   16c2c:	mov	r0, r3
   16c30:	ldr	r1, [pc, #-880]	; 168c8 <XRRGetOutputInfo@plt+0x4e68>
   16c34:	str	ip, [r5, #8]
   16c38:	str	r3, [fp, #-268]	; 0xfffffef4
   16c3c:	bl	11a3c <strncmp@plt>
   16c40:	add	r7, r8, r7
   16c44:	cmp	r0, #0
   16c48:	beq	16c84 <XRRGetOutputInfo@plt+0x5224>
   16c4c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   16c50:	add	lr, r5, #20
   16c54:	add	ip, r5, #16
   16c58:	add	r1, r5, #36	; 0x24
   16c5c:	add	r2, r5, #28
   16c60:	mov	r0, r3
   16c64:	stmib	sp, {r1, ip, lr}
   16c68:	add	r3, r5, #32
   16c6c:	str	r2, [sp]
   16c70:	ldr	r1, [pc, #-940]	; 168cc <XRRGetOutputInfo@plt+0x4e6c>
   16c74:	add	r2, r5, #24
   16c78:	bl	118a4 <__isoc99_sscanf@plt>
   16c7c:	cmp	r0, #6
   16c80:	bne	16e14 <XRRGetOutputInfo@plt+0x53b4>
   16c84:	ldr	r7, [r6, #12]
   16c88:	ldr	r1, [pc, #-960]	; 168d0 <XRRGetOutputInfo@plt+0x4e70>
   16c8c:	mov	r0, r7
   16c90:	bl	11658 <strcmp@plt>
   16c94:	cmp	r0, #0
   16c98:	bne	16cdc <XRRGetOutputInfo@plt+0x527c>
   16c9c:	ldr	r3, [pc, #-932]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16ca0:	ldr	r2, [pc, #-956]	; 168ec <XRRGetOutputInfo@plt+0x4e8c>
   16ca4:	ldr	r3, [r3, #76]	; 0x4c
   16ca8:	cmp	r3, #0
   16cac:	beq	16cc8 <XRRGetOutputInfo@plt+0x5268>
   16cb0:	mov	r2, r3
   16cb4:	ldr	r3, [r3]
   16cb8:	b	16ca8 <XRRGetOutputInfo@plt+0x5248>
   16cbc:	mov	r1, r6
   16cc0:	ldr	r0, [pc, #-1012]	; 168d4 <XRRGetOutputInfo@plt+0x4e74>
   16cc4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16cc8:	mov	r3, #1
   16ccc:	str	r3, [fp, #-328]	; 0xfffffeb8
   16cd0:	str	r5, [r2]
   16cd4:	str	r3, [fp, #-268]	; 0xfffffef4
   16cd8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16cdc:	mov	r2, r7
   16ce0:	ldr	r1, [pc, #-1040]	; 168d8 <XRRGetOutputInfo@plt+0x4e78>
   16ce4:	mov	r0, #1
   16ce8:	bl	11910 <__printf_chk@plt>
   16cec:	mov	r0, r7
   16cf0:	ldr	r1, [pc, #-1052]	; 168dc <XRRGetOutputInfo@plt+0x4e7c>
   16cf4:	bl	1197c <strtok@plt>
   16cf8:	subs	r6, r0, #0
   16cfc:	beq	16c9c <XRRGetOutputInfo@plt+0x523c>
   16d00:	ldr	r1, [r5, #40]	; 0x28
   16d04:	ldr	r0, [r5, #44]	; 0x2c
   16d08:	add	r1, r1, #1
   16d0c:	mov	r7, #0
   16d10:	lsl	r1, r1, #4
   16d14:	bl	11748 <realloc@plt>
   16d18:	mov	r2, r6
   16d1c:	ldr	r1, [pc, #-1092]	; 168e0 <XRRGetOutputInfo@plt+0x4e80>
   16d20:	str	r0, [r5, #44]	; 0x2c
   16d24:	mov	r0, #1
   16d28:	bl	11910 <__printf_chk@plt>
   16d2c:	ldr	r3, [r5, #40]	; 0x28
   16d30:	ldr	r0, [r5, #44]	; 0x2c
   16d34:	add	ip, r3, #1
   16d38:	mov	r1, r6
   16d3c:	add	r0, r0, r3, lsl #4
   16d40:	mov	r2, #7
   16d44:	str	ip, [r5, #40]	; 0x28
   16d48:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16d4c:	ldrd	r2, [r5, #40]	; 0x28
   16d50:	ldr	r1, [pc, #-1140]	; 168e4 <XRRGetOutputInfo@plt+0x4e84>
   16d54:	mov	r0, #1
   16d58:	add	r3, r3, r2, lsl #4
   16d5c:	ldr	r2, [r3, #-12]
   16d60:	bl	11910 <__printf_chk@plt>
   16d64:	b	16cec <XRRGetOutputInfo@plt+0x528c>
   16d68:	mov	r1, r6
   16d6c:	ldr	r0, [pc, #-1164]	; 168e8 <XRRGetOutputInfo@plt+0x4e88>
   16d70:	bl	11658 <strcmp@plt>
   16d74:	cmp	r0, #0
   16d78:	bne	16df8 <XRRGetOutputInfo@plt+0x5398>
   16d7c:	add	r4, r4, #1
   16d80:	mov	r1, #48	; 0x30
   16d84:	mov	r0, #1
   16d88:	bl	11628 <calloc@plt>
   16d8c:	cmp	sl, r4
   16d90:	ble	16dec <XRRGetOutputInfo@plt+0x538c>
   16d94:	add	r7, r8, r7
   16d98:	mov	r2, #0
   16d9c:	ldr	r3, [r7, #4]
   16da0:	str	r2, [r0, #8]
   16da4:	str	r3, [r0, #4]
   16da8:	ldr	r3, [pc, #-1200]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16dac:	ldr	r2, [pc, #-1224]	; 168ec <XRRGetOutputInfo@plt+0x4e8c>
   16db0:	ldr	r3, [r3, #76]	; 0x4c
   16db4:	cmp	r3, #0
   16db8:	beq	16dd8 <XRRGetOutputInfo@plt+0x5378>
   16dbc:	mov	r2, r3
   16dc0:	ldr	r3, [r3]
   16dc4:	b	16db4 <XRRGetOutputInfo@plt+0x5354>
   16dc8:	mov	r3, #1
   16dcc:	str	r3, [fp, #-372]	; 0xfffffe8c
   16dd0:	str	r3, [fp, #-268]	; 0xfffffef4
   16dd4:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16dd8:	mov	r3, #1
   16ddc:	str	r3, [fp, #-328]	; 0xfffffeb8
   16de0:	str	r0, [r2]
   16de4:	str	r3, [fp, #-268]	; 0xfffffef4
   16de8:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16dec:	ldr	r1, [r8, r5, lsl #2]
   16df0:	ldr	r0, [pc, #-1288]	; 168f0 <XRRGetOutputInfo@plt+0x4e90>
   16df4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16df8:	mov	r1, r6
   16dfc:	ldr	r0, [pc, #-1296]	; 168f4 <XRRGetOutputInfo@plt+0x4e94>
   16e00:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16e04:	mov	r3, #1
   16e08:	str	r3, [fp, #-376]	; 0xfffffe88
   16e0c:	str	r3, [fp, #-268]	; 0xfffffef4
   16e10:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16e14:	ldr	r1, [r7]
   16e18:	ldr	r0, [pc, #-1320]	; 168f8 <XRRGetOutputInfo@plt+0x4e98>
   16e1c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16e20:	mov	r1, #96	; 0x60
   16e24:	mov	r0, #1
   16e28:	bl	11628 <calloc@plt>
   16e2c:	add	r4, r4, #2
   16e30:	cmp	r4, sl
   16e34:	mov	r5, r0
   16e38:	bge	16ed8 <XRRGetOutputInfo@plt+0x5478>
   16e3c:	add	r7, r8, r7
   16e40:	mov	r2, #3
   16e44:	ldr	r1, [r7, #4]
   16e48:	add	r0, r0, #64	; 0x40
   16e4c:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16e50:	ldr	r1, [r7, #8]
   16e54:	mov	r2, #3
   16e58:	add	r0, r5, #80	; 0x50
   16e5c:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16e60:	ldr	r1, [pc, #-1384]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16e64:	mov	r3, #3
   16e68:	ldr	r2, [r1, #116]	; 0x74
   16e6c:	mov	r0, #1
   16e70:	str	r0, [fp, #-276]	; 0xfffffeec
   16e74:	str	r2, [r5]
   16e78:	str	r5, [r1, #116]	; 0x74
   16e7c:	str	r3, [r5, #4]
   16e80:	str	r0, [fp, #-268]	; 0xfffffef4
   16e84:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16e88:	mov	r1, #96	; 0x60
   16e8c:	mov	r0, #1
   16e90:	bl	11628 <calloc@plt>
   16e94:	add	r4, r4, #2
   16e98:	cmp	r4, sl
   16e9c:	mov	r5, r0
   16ea0:	bge	16ee4 <XRRGetOutputInfo@plt+0x5484>
   16ea4:	add	r7, r8, r7
   16ea8:	mov	r2, #3
   16eac:	ldr	r1, [r7, #4]
   16eb0:	add	r0, r0, #64	; 0x40
   16eb4:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16eb8:	ldr	r1, [r7, #8]
   16ebc:	mov	r2, #3
   16ec0:	add	r0, r5, #80	; 0x50
   16ec4:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16ec8:	ldr	r1, [pc, #-1488]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16ecc:	mov	r3, #2
   16ed0:	ldr	r2, [r1, #116]	; 0x74
   16ed4:	b	16e6c <XRRGetOutputInfo@plt+0x540c>
   16ed8:	mov	r1, r6
   16edc:	ldr	r0, [pc, #-1512]	; 168fc <XRRGetOutputInfo@plt+0x4e9c>
   16ee0:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16ee4:	mov	r1, r6
   16ee8:	ldr	r0, [pc, #-1524]	; 168fc <XRRGetOutputInfo@plt+0x4e9c>
   16eec:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   16ef0:	mov	r1, #96	; 0x60
   16ef4:	mov	r0, #1
   16ef8:	bl	11628 <calloc@plt>
   16efc:	add	r4, r4, #1
   16f00:	cmp	sl, r4
   16f04:	mov	r6, r0
   16f08:	ble	17044 <XRRGetOutputInfo@plt+0x55e4>
   16f0c:	add	r7, r8, r7
   16f10:	mov	r2, #3
   16f14:	ldr	r1, [r7, #4]
   16f18:	add	r0, r0, #80	; 0x50
   16f1c:	bl	174ec <XRRGetOutputInfo@plt+0x5a8c>
   16f20:	ldr	r1, [pc, #-1576]	; 16900 <XRRGetOutputInfo@plt+0x4ea0>
   16f24:	mov	r3, #1
   16f28:	str	r3, [fp, #-276]	; 0xfffffeec
   16f2c:	ldr	r2, [r1, #116]	; 0x74
   16f30:	str	r3, [r6, #4]
   16f34:	str	r3, [fp, #-268]	; 0xfffffef4
   16f38:	str	r2, [r6]
   16f3c:	str	r6, [r1, #116]	; 0x74
   16f40:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   16f44:	mov	r1, #96	; 0x60
   16f48:	mov	r0, #1
   16f4c:	bl	11628 <calloc@plt>
   16f50:	add	r6, r8, r7
   16f54:	add	r3, r4, #10
   16f58:	cmp	r3, sl
   16f5c:	ldr	r1, [r6, #4]
   16f60:	mov	r5, r0
   16f64:	bge	170a0 <XRRGetOutputInfo@plt+0x5640>
   16f68:	mov	r0, r1
   16f6c:	str	r1, [r5, #52]	; 0x34
   16f70:	bl	11838 <strlen@plt>
   16f74:	ldr	r7, [r6, #8]
   16f78:	sub	r1, fp, #204	; 0xcc
   16f7c:	str	r0, [r5, #56]	; 0x38
   16f80:	mov	r0, r7
   16f84:	bl	11928 <strtod@plt>
   16f88:	ldr	r3, [fp, #-204]	; 0xffffff34
   16f8c:	cmp	r7, r3
   16f90:	beq	17094 <XRRGetOutputInfo@plt+0x5634>
   16f94:	vldr	d7, [pc, #292]	; 170c0 <XRRGetOutputInfo@plt+0x5660>
   16f98:	ldr	r0, [r6, #12]
   16f9c:	ldr	r7, [pc, #292]	; 170c8 <XRRGetOutputInfo@plt+0x5668>
   16fa0:	add	r4, r4, #11
   16fa4:	vmul.f64	d7, d0, d7
   16fa8:	vcvt.u32.f64	s14, d7
   16fac:	vstr	s14, [r5, #20]
   16fb0:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16fb4:	str	r0, [r5, #12]
   16fb8:	ldr	r0, [r6, #16]
   16fbc:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16fc0:	str	r0, [r5, #24]
   16fc4:	ldr	r0, [r6, #20]
   16fc8:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16fcc:	str	r0, [r5, #28]
   16fd0:	ldr	r0, [r6, #24]
   16fd4:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16fd8:	str	r0, [r5, #32]
   16fdc:	ldr	r0, [r6, #28]
   16fe0:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16fe4:	str	r0, [r5, #16]
   16fe8:	ldr	r0, [r6, #32]
   16fec:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16ff0:	str	r0, [r5, #40]	; 0x28
   16ff4:	ldr	r0, [r6, #36]	; 0x24
   16ff8:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   16ffc:	str	r0, [r5, #44]	; 0x2c
   17000:	ldr	r0, [r6, #40]	; 0x28
   17004:	bl	17490 <XRRGetOutputInfo@plt+0x5a30>
   17008:	mov	r3, #0
   1700c:	str	r3, [r5, #60]	; 0x3c
   17010:	str	r0, [r5, #48]	; 0x30
   17014:	cmp	r4, sl
   17018:	beq	1706c <XRRGetOutputInfo@plt+0x560c>
   1701c:	mov	r6, #0
   17020:	ldr	r0, [r7, r6, lsl #3]
   17024:	cmp	r0, #0
   17028:	beq	1706c <XRRGetOutputInfo@plt+0x560c>
   1702c:	ldr	r1, [r8, r4, lsl #2]
   17030:	bl	11760 <strcasecmp@plt>
   17034:	cmp	r0, #0
   17038:	beq	17050 <XRRGetOutputInfo@plt+0x55f0>
   1703c:	add	r6, r6, #1
   17040:	b	17020 <XRRGetOutputInfo@plt+0x55c0>
   17044:	ldr	r1, [r8, r5, lsl #2]
   17048:	ldr	r0, [pc, #124]	; 170cc <XRRGetOutputInfo@plt+0x566c>
   1704c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   17050:	add	r6, r7, r6, lsl #3
   17054:	ldr	r3, [r5, #60]	; 0x3c
   17058:	ldr	r2, [r6, #4]
   1705c:	add	r4, r4, #1
   17060:	orr	r3, r3, r2
   17064:	str	r3, [r5, #60]	; 0x3c
   17068:	b	17014 <XRRGetOutputInfo@plt+0x55b4>
   1706c:	ldr	r1, [pc, #92]	; 170d0 <XRRGetOutputInfo@plt+0x5670>
   17070:	mov	r3, #0
   17074:	str	r3, [r5, #4]
   17078:	ldr	r2, [r1, #116]	; 0x74
   1707c:	str	r5, [r1, #116]	; 0x74
   17080:	str	r2, [r5]
   17084:	mov	r2, #1
   17088:	str	r2, [fp, #-276]	; 0xfffffeec
   1708c:	str	r2, [fp, #-268]	; 0xfffffef4
   17090:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   17094:	mov	r1, r7
   17098:	ldr	r0, [pc, #52]	; 170d4 <XRRGetOutputInfo@plt+0x5674>
   1709c:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   170a0:	ldr	r0, [pc, #48]	; 170d8 <XRRGetOutputInfo@plt+0x5678>
   170a4:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   170a8:	mov	r3, #1
   170ac:	str	r3, [fp, #-352]	; 0xfffffea0
   170b0:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   170b4:	mov	r3, #1
   170b8:	str	r3, [fp, #-356]	; 0xfffffe9c
   170bc:	b	11d30 <XRRGetOutputInfo@plt+0x2d0>
   170c0:	andeq	r0, r0, r0
   170c4:	smlawbmi	lr, r0, r4, r8
   170c8:	andeq	r9, r1, r8, asr #26
   170cc:	andeq	sl, r1, r0, ror #6
   170d0:	andeq	ip, r2, r0, lsr #3
   170d4:	andeq	r9, r1, ip, ror #28
   170d8:	andeq	sl, r1, r4, asr #30
   170dc:	mov	fp, #0
   170e0:	mov	lr, #0
   170e4:	pop	{r1}		; (ldr r1, [sp], #4)
   170e8:	mov	r2, sp
   170ec:	push	{r2}		; (str r2, [sp, #-4]!)
   170f0:	push	{r0}		; (str r0, [sp, #-4]!)
   170f4:	ldr	ip, [pc, #16]	; 1710c <XRRGetOutputInfo@plt+0x56ac>
   170f8:	push	{ip}		; (str ip, [sp, #-4]!)
   170fc:	ldr	r0, [pc, #12]	; 17110 <XRRGetOutputInfo@plt+0x56b0>
   17100:	ldr	r3, [pc, #12]	; 17114 <XRRGetOutputInfo@plt+0x56b4>
   17104:	bl	117c0 <__libc_start_main@plt>
   17108:	bl	11a48 <abort@plt>
   1710c:	andeq	r9, r1, r8, lsr sp
   17110:	andeq	r1, r1, r0, ror sl
   17114:	ldrdeq	r9, [r1], -r8
   17118:	ldr	r3, [pc, #20]	; 17134 <XRRGetOutputInfo@plt+0x56d4>
   1711c:	ldr	r2, [pc, #20]	; 17138 <XRRGetOutputInfo@plt+0x56d8>
   17120:	add	r3, pc, r3
   17124:	ldr	r2, [r3, r2]
   17128:	cmp	r2, #0
   1712c:	bxeq	lr
   17130:	b	117f0 <__gmon_start__@plt>
   17134:	ldrdeq	r4, [r1], -r8
   17138:	andeq	r0, r0, r8, ror r1
   1713c:	ldr	r0, [pc, #24]	; 1715c <XRRGetOutputInfo@plt+0x56fc>
   17140:	ldr	r3, [pc, #24]	; 17160 <XRRGetOutputInfo@plt+0x5700>
   17144:	cmp	r3, r0
   17148:	bxeq	lr
   1714c:	ldr	r3, [pc, #16]	; 17164 <XRRGetOutputInfo@plt+0x5704>
   17150:	cmp	r3, #0
   17154:	bxeq	lr
   17158:	bx	r3
   1715c:	muleq	r2, r4, r1
   17160:	muleq	r2, r4, r1
   17164:	andeq	r0, r0, r0
   17168:	ldr	r0, [pc, #36]	; 17194 <XRRGetOutputInfo@plt+0x5734>
   1716c:	ldr	r1, [pc, #36]	; 17198 <XRRGetOutputInfo@plt+0x5738>
   17170:	sub	r1, r1, r0
   17174:	asr	r1, r1, #2
   17178:	add	r1, r1, r1, lsr #31
   1717c:	asrs	r1, r1, #1
   17180:	bxeq	lr
   17184:	ldr	r3, [pc, #16]	; 1719c <XRRGetOutputInfo@plt+0x573c>
   17188:	cmp	r3, #0
   1718c:	bxeq	lr
   17190:	bx	r3
   17194:	muleq	r2, r4, r1
   17198:	muleq	r2, r4, r1
   1719c:	andeq	r0, r0, r0
   171a0:	push	{r4, lr}
   171a4:	ldr	r4, [pc, #24]	; 171c4 <XRRGetOutputInfo@plt+0x5764>
   171a8:	ldrb	r3, [r4]
   171ac:	cmp	r3, #0
   171b0:	popne	{r4, pc}
   171b4:	bl	1713c <XRRGetOutputInfo@plt+0x56dc>
   171b8:	mov	r3, #1
   171bc:	strb	r3, [r4]
   171c0:	pop	{r4, pc}
   171c4:	muleq	r2, ip, r1
   171c8:	b	17168 <XRRGetOutputInfo@plt+0x5708>
   171cc:	andeq	r0, r0, r0
   171d0:	vldr	s15, [r0, #40]	; 0x28
   171d4:	ldr	r3, [r0, #52]	; 0x34
   171d8:	ldr	r2, [r0, #24]
   171dc:	tst	r3, #32
   171e0:	vcvt.f64.u32	d7, s15
   171e4:	vaddne.f64	d7, d7, d7
   171e8:	tst	r3, #16
   171ec:	vldrne	d6, [pc, #60]	; 17230 <XRRGetOutputInfo@plt+0x57d0>
   171f0:	vmulne.f64	d7, d7, d6
   171f4:	vcmp.f64	d7, #0.0
   171f8:	vmrs	APSR_nzcv, fpscr
   171fc:	movne	r3, #1
   17200:	moveq	r3, #0
   17204:	cmp	r2, #0
   17208:	moveq	r3, #0
   1720c:	cmp	r3, #0
   17210:	vmovne	s13, r2
   17214:	vldrne	s10, [r0, #12]
   17218:	vcvtne.f64.u32	d6, s13
   1721c:	vcvtne.f64.u32	d5, s10
   17220:	vmulne.f64	d7, d6, d7
   17224:	vdivne.f64	d0, d5, d7
   17228:	vldreq	d0, [pc, #8]	; 17238 <XRRGetOutputInfo@plt+0x57d8>
   1722c:	bx	lr
   17230:	andeq	r0, r0, r0
   17234:	svccc	0x00e00000
	...
   17240:	ldr	r3, [pc, #124]	; 172c4 <XRRGetOutputInfo@plt+0x5864>
   17244:	push	{r4, r5, r6, r7, r8, lr}
   17248:	ldr	r5, [r3]
   1724c:	cmp	r5, #0
   17250:	beq	172bc <XRRGetOutputInfo@plt+0x585c>
   17254:	ldr	r7, [r0]
   17258:	mov	r6, r0
   1725c:	ldr	r4, [r5, #12]
   17260:	and	r4, r4, r7
   17264:	tst	r4, #2
   17268:	beq	1727c <XRRGetOutputInfo@plt+0x581c>
   1726c:	ldr	r2, [r6, #8]
   17270:	ldr	r3, [r5, #20]
   17274:	cmp	r2, r3
   17278:	beq	172bc <XRRGetOutputInfo@plt+0x585c>
   1727c:	tst	r4, #1
   17280:	beq	17298 <XRRGetOutputInfo@plt+0x5838>
   17284:	ldr	r1, [r5, #16]
   17288:	ldr	r0, [r6, #4]
   1728c:	bl	11658 <strcmp@plt>
   17290:	cmp	r0, #0
   17294:	beq	172bc <XRRGetOutputInfo@plt+0x585c>
   17298:	tst	r4, #4
   1729c:	beq	172b0 <XRRGetOutputInfo@plt+0x5850>
   172a0:	ldr	r2, [r6, #12]
   172a4:	ldr	r3, [r5, #24]
   172a8:	cmp	r2, r3
   172ac:	beq	172bc <XRRGetOutputInfo@plt+0x585c>
   172b0:	ldr	r5, [r5]
   172b4:	cmp	r5, #0
   172b8:	bne	1725c <XRRGetOutputInfo@plt+0x57fc>
   172bc:	mov	r0, r5
   172c0:	pop	{r4, r5, r6, r7, r8, pc}
   172c4:	andeq	ip, r2, r0, lsr #3
   172c8:	ldr	r3, [pc, #144]	; 17360 <XRRGetOutputInfo@plt+0x5900>
   172cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172d0:	ldr	r8, [r3, #4]
   172d4:	cmp	r8, #0
   172d8:	ble	17354 <XRRGetOutputInfo@plt+0x58f4>
   172dc:	ldr	r5, [r3, #8]
   172e0:	ldr	sl, [r0]
   172e4:	mov	r7, r0
   172e8:	mov	r6, #0
   172ec:	ldr	r4, [r5]
   172f0:	add	r6, r6, #1
   172f4:	and	r4, r4, sl
   172f8:	tst	r4, #2
   172fc:	mov	r9, r5
   17300:	beq	17314 <XRRGetOutputInfo@plt+0x58b4>
   17304:	ldr	r2, [r7, #8]
   17308:	ldr	r3, [r5, #8]
   1730c:	cmp	r2, r3
   17310:	beq	17358 <XRRGetOutputInfo@plt+0x58f8>
   17314:	tst	r4, #1
   17318:	beq	17330 <XRRGetOutputInfo@plt+0x58d0>
   1731c:	ldr	r1, [r5, #4]
   17320:	ldr	r0, [r7, #4]
   17324:	bl	11658 <strcmp@plt>
   17328:	cmp	r0, #0
   1732c:	beq	17358 <XRRGetOutputInfo@plt+0x58f8>
   17330:	tst	r4, #4
   17334:	beq	17348 <XRRGetOutputInfo@plt+0x58e8>
   17338:	ldr	r2, [r7, #12]
   1733c:	ldr	r3, [r5, #12]
   17340:	cmp	r2, r3
   17344:	beq	17358 <XRRGetOutputInfo@plt+0x58f8>
   17348:	cmp	r6, r8
   1734c:	add	r5, r5, #148	; 0x94
   17350:	bne	172ec <XRRGetOutputInfo@plt+0x588c>
   17354:	mov	r9, #0
   17358:	mov	r0, r9
   1735c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17360:	andeq	ip, r2, r0, lsr #3
   17364:	ldr	ip, [pc, #56]	; 173a4 <XRRGetOutputInfo@plt+0x5944>
   17368:	mov	r3, #0
   1736c:	mov	r1, #65536	; 0x10000
   17370:	str	r3, [r0, #4]
   17374:	str	r3, [r0, #8]
   17378:	str	r3, [r0, #12]
   1737c:	str	r3, [r0, #20]
   17380:	str	r3, [r0, #24]
   17384:	str	r3, [r0, #28]
   17388:	str	r3, [r0, #40]	; 0x28
   1738c:	str	r3, [r0, #44]	; 0x2c
   17390:	str	ip, [r0, #36]	; 0x24
   17394:	str	r1, [r0]
   17398:	str	r1, [r0, #16]
   1739c:	str	r1, [r0, #32]
   173a0:	bx	lr
   173a4:	muleq	r1, r0, r1
   173a8:	push	{r4, r5, r6, r7, r8, lr}
   173ac:	mov	lr, r1
   173b0:	mov	r4, r0
   173b4:	mov	r8, r2
   173b8:	mov	r7, r3
   173bc:	ldm	lr!, {r0, r1, r2, r3}
   173c0:	mov	ip, r4
   173c4:	ldr	r6, [sp, #24]
   173c8:	stmia	ip!, {r0, r1, r2, r3}
   173cc:	lsl	r5, r6, #2
   173d0:	ldm	lr!, {r0, r1, r2, r3}
   173d4:	stmia	ip!, {r0, r1, r2, r3}
   173d8:	mov	r0, r8
   173dc:	ldr	r3, [lr]
   173e0:	str	r3, [ip]
   173e4:	bl	11718 <strdup@plt>
   173e8:	str	r6, [r4, #40]	; 0x28
   173ec:	str	r0, [r4, #36]	; 0x24
   173f0:	mov	r0, r5
   173f4:	bl	117b4 <malloc@plt>
   173f8:	mov	r2, r5
   173fc:	mov	r1, r7
   17400:	str	r0, [r4, #44]	; 0x2c
   17404:	pop	{r4, r5, r6, r7, r8, lr}
   17408:	b	116dc <memcpy@plt>
   1740c:	push	{r0, r1, r2, r3}
   17410:	ldr	r3, [pc, #100]	; 1747c <XRRGetOutputInfo@plt+0x5a1c>
   17414:	push	{lr}		; (str lr, [sp, #-4]!)
   17418:	sub	sp, sp, #12
   1741c:	ldr	r4, [pc, #92]	; 17480 <XRRGetOutputInfo@plt+0x5a20>
   17420:	ldr	r5, [pc, #92]	; 17484 <XRRGetOutputInfo@plt+0x5a24>
   17424:	ldr	r1, [r3]
   17428:	ldr	r6, [sp, #16]
   1742c:	add	ip, sp, #20
   17430:	ldr	r3, [r5, #12]
   17434:	ldr	r2, [pc, #76]	; 17488 <XRRGetOutputInfo@plt+0x5a28>
   17438:	str	r1, [sp, #4]
   1743c:	ldr	r0, [r4]
   17440:	mov	r1, #1
   17444:	str	ip, [sp]
   17448:	bl	1194c <__fprintf_chk@plt>
   1744c:	mov	r2, r6
   17450:	ldr	r3, [sp]
   17454:	mov	r1, #1
   17458:	ldr	r0, [r4]
   1745c:	bl	117e4 <__vfprintf_chk@plt>
   17460:	ldr	r3, [r5, #12]
   17464:	ldr	r0, [r4]
   17468:	ldr	r2, [pc, #28]	; 1748c <XRRGetOutputInfo@plt+0x5a2c>
   1746c:	mov	r1, #1
   17470:	bl	1194c <__fprintf_chk@plt>
   17474:	mov	r0, #1
   17478:	bl	11814 <exit@plt>
   1747c:	andeq	fp, r2, r8, ror #29
   17480:	muleq	r2, r8, r1
   17484:	andeq	ip, r2, r0, lsr #3
   17488:	andeq	r9, r1, ip, lsr lr
   1748c:	andeq	r9, r1, r4, asr #28
   17490:	push	{r4, r5, lr}
   17494:	sub	sp, sp, #12
   17498:	ldr	r4, [pc, #68]	; 174e4 <XRRGetOutputInfo@plt+0x5a84>
   1749c:	mov	r1, sp
   174a0:	mov	r2, #10
   174a4:	ldr	r3, [r4]
   174a8:	mov	r5, r0
   174ac:	str	r3, [sp, #4]
   174b0:	bl	11664 <strtol@plt>
   174b4:	ldr	r1, [sp]
   174b8:	cmp	r1, r5
   174bc:	beq	174d8 <XRRGetOutputInfo@plt+0x5a78>
   174c0:	ldr	r2, [sp, #4]
   174c4:	ldr	r3, [r4]
   174c8:	cmp	r2, r3
   174cc:	bne	174e0 <XRRGetOutputInfo@plt+0x5a80>
   174d0:	add	sp, sp, #12
   174d4:	pop	{r4, r5, pc}
   174d8:	ldr	r0, [pc, #8]	; 174e8 <XRRGetOutputInfo@plt+0x5a88>
   174dc:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   174e0:	bl	11724 <__stack_chk_fail@plt>
   174e4:	andeq	fp, r2, r8, ror #29
   174e8:	andeq	r9, r1, ip, ror #28
   174ec:	push	{r4, r5, r6, r7, lr}
   174f0:	sub	sp, sp, #20
   174f4:	ldr	r6, [pc, #192]	; 175bc <XRRGetOutputInfo@plt+0x5b5c>
   174f8:	tst	r2, #2
   174fc:	mov	r5, r2
   17500:	ldr	r3, [r6]
   17504:	mov	r4, r0
   17508:	mov	r7, r1
   1750c:	str	r3, [sp, #12]
   17510:	bne	1754c <XRRGetOutputInfo@plt+0x5aec>
   17514:	tst	r5, #4
   17518:	bne	1757c <XRRGetOutputInfo@plt+0x5b1c>
   1751c:	tst	r5, #1
   17520:	beq	175b0 <XRRGetOutputInfo@plt+0x5b50>
   17524:	ldr	r3, [r4]
   17528:	str	r7, [r4, #4]
   1752c:	orr	r3, r3, #1
   17530:	str	r3, [r4]
   17534:	ldr	r2, [sp, #12]
   17538:	ldr	r3, [r6]
   1753c:	cmp	r2, r3
   17540:	bne	175ac <XRRGetOutputInfo@plt+0x5b4c>
   17544:	add	sp, sp, #20
   17548:	pop	{r4, r5, r6, r7, pc}
   1754c:	add	r2, sp, #4
   17550:	ldr	r1, [pc, #104]	; 175c0 <XRRGetOutputInfo@plt+0x5b60>
   17554:	mov	r0, r7
   17558:	bl	118a4 <__isoc99_sscanf@plt>
   1755c:	cmp	r0, #1
   17560:	bne	17514 <XRRGetOutputInfo@plt+0x5ab4>
   17564:	ldr	r3, [r4]
   17568:	ldr	r2, [sp, #4]
   1756c:	orr	r3, r3, #2
   17570:	str	r3, [r4]
   17574:	str	r2, [r4, #8]
   17578:	b	17534 <XRRGetOutputInfo@plt+0x5ad4>
   1757c:	add	r2, sp, #8
   17580:	ldr	r1, [pc, #60]	; 175c4 <XRRGetOutputInfo@plt+0x5b64>
   17584:	mov	r0, r7
   17588:	bl	118a4 <__isoc99_sscanf@plt>
   1758c:	cmp	r0, #1
   17590:	bne	1751c <XRRGetOutputInfo@plt+0x5abc>
   17594:	ldr	r3, [r4]
   17598:	ldr	r2, [sp, #8]
   1759c:	orr	r3, r3, #4
   175a0:	str	r3, [r4]
   175a4:	str	r2, [r4, #12]
   175a8:	b	17534 <XRRGetOutputInfo@plt+0x5ad4>
   175ac:	bl	11724 <__stack_chk_fail@plt>
   175b0:	mov	r1, r7
   175b4:	ldr	r0, [pc, #12]	; 175c8 <XRRGetOutputInfo@plt+0x5b68>
   175b8:	bl	1740c <XRRGetOutputInfo@plt+0x59ac>
   175bc:	andeq	fp, r2, r8, ror #29
   175c0:	andeq	r9, r1, r0, lsr #31
   175c4:	ldrdeq	fp, [r1], -r0
   175c8:	muleq	r1, r0, lr
   175cc:	push	{r0, r1, r2, r3}
   175d0:	push	{r4, r5, r6, lr}
   175d4:	sub	sp, sp, #8
   175d8:	ldr	r4, [pc, #100]	; 17644 <XRRGetOutputInfo@plt+0x5be4>
   175dc:	ldr	r5, [pc, #100]	; 17648 <XRRGetOutputInfo@plt+0x5be8>
   175e0:	ldr	r3, [pc, #100]	; 1764c <XRRGetOutputInfo@plt+0x5bec>
   175e4:	ldr	r1, [r4]
   175e8:	ldr	r6, [sp, #24]
   175ec:	add	ip, sp, #28
   175f0:	ldr	r3, [r3, #12]
   175f4:	ldr	r2, [pc, #84]	; 17650 <XRRGetOutputInfo@plt+0x5bf0>
   175f8:	str	r1, [sp, #4]
   175fc:	ldr	r0, [r5]
   17600:	mov	r1, #1
   17604:	str	ip, [sp]
   17608:	bl	1194c <__fprintf_chk@plt>
   1760c:	mov	r2, r6
   17610:	ldr	r3, [sp]
   17614:	ldr	r0, [r5]
   17618:	mov	r1, #1
   1761c:	bl	117e4 <__vfprintf_chk@plt>
   17620:	ldr	r2, [sp, #4]
   17624:	ldr	r3, [r4]
   17628:	cmp	r2, r3
   1762c:	bne	17640 <XRRGetOutputInfo@plt+0x5be0>
   17630:	add	sp, sp, #8
   17634:	pop	{r4, r5, r6, lr}
   17638:	add	sp, sp, #16
   1763c:	bx	lr
   17640:	bl	11724 <__stack_chk_fail@plt>
   17644:	andeq	fp, r2, r8, ror #29
   17648:	muleq	r2, r8, r1
   1764c:	andeq	ip, r2, r0, lsr #3
   17650:	andeq	r9, r1, ip, lsr lr
   17654:	push	{r0, r1, r2, r3}
   17658:	ldr	r2, [pc, #80]	; 176b0 <XRRGetOutputInfo@plt+0x5c50>
   1765c:	push	{lr}		; (str lr, [sp, #-4]!)
   17660:	sub	sp, sp, #12
   17664:	ldr	r4, [pc, #72]	; 176b4 <XRRGetOutputInfo@plt+0x5c54>
   17668:	ldr	r3, [pc, #72]	; 176b8 <XRRGetOutputInfo@plt+0x5c58>
   1766c:	ldr	r1, [r2]
   17670:	ldr	r5, [sp, #16]
   17674:	add	ip, sp, #20
   17678:	ldr	r3, [r3, #12]
   1767c:	ldr	r2, [pc, #56]	; 176bc <XRRGetOutputInfo@plt+0x5c5c>
   17680:	str	r1, [sp, #4]
   17684:	ldr	r0, [r4]
   17688:	mov	r1, #1
   1768c:	str	ip, [sp]
   17690:	bl	1194c <__fprintf_chk@plt>
   17694:	mov	r2, r5
   17698:	ldr	r0, [r4]
   1769c:	ldr	r3, [sp]
   176a0:	mov	r1, #1
   176a4:	bl	117e4 <__vfprintf_chk@plt>
   176a8:	mov	r0, #1
   176ac:	bl	11814 <exit@plt>
   176b0:	andeq	fp, r2, r8, ror #29
   176b4:	muleq	r2, r8, r1
   176b8:	andeq	ip, r2, r0, lsr #3
   176bc:	andeq	r9, r1, ip, lsr lr
   176c0:	push	{r4, lr}
   176c4:	mov	r1, #256	; 0x100
   176c8:	mov	r0, #1
   176cc:	bl	11628 <calloc@plt>
   176d0:	subs	r3, r0, #0
   176d4:	beq	17700 <XRRGetOutputInfo@plt+0x5ca0>
   176d8:	ldr	r1, [pc, #40]	; 17708 <XRRGetOutputInfo@plt+0x5ca8>
   176dc:	mov	r2, #0
   176e0:	mov	lr, #1065353216	; 0x3f800000
   176e4:	ldr	ip, [r1]
   176e8:	str	r2, [r3]
   176ec:	str	lr, [r3, #244]	; 0xf4
   176f0:	str	r2, [r3, #252]	; 0xfc
   176f4:	str	r3, [r1]
   176f8:	str	r3, [ip]
   176fc:	pop	{r4, pc}
   17700:	ldr	r0, [pc, #4]	; 1770c <XRRGetOutputInfo@plt+0x5cac>
   17704:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   17708:	andeq	ip, r2, r4, lsl #3
   1770c:	andeq	r9, r1, r4, lsr #29
   17710:	push	{r4, r5, r6, r7, r8, r9, lr}
   17714:	vldr	s15, [r0, #12]
   17718:	vldr	d5, [pc, #328]	; 17868 <XRRGetOutputInfo@plt+0x5e08>
   1771c:	sub	sp, sp, #28
   17720:	ldr	r3, [r0]
   17724:	vcvt.f64.u32	d7, s15
   17728:	mov	r6, r0
   1772c:	mov	r9, r1
   17730:	mov	r8, r2
   17734:	ldr	r1, [pc, #324]	; 17880 <XRRGetOutputInfo@plt+0x5e20>
   17738:	ldr	r2, [r0, #44]	; 0x2c
   1773c:	mov	r0, #1
   17740:	ldr	r4, [pc, #316]	; 17884 <XRRGetOutputInfo@plt+0x5e24>
   17744:	vdiv.f64	d6, d7, d5
   17748:	ldr	r7, [pc, #312]	; 17888 <XRRGetOutputInfo@plt+0x5e28>
   1774c:	mov	r5, #2
   17750:	vstr	d6, [sp]
   17754:	bl	11910 <__printf_chk@plt>
   17758:	mov	r3, #1
   1775c:	b	17774 <XRRGetOutputInfo@plt+0x5d14>
   17760:	cmp	r5, #0
   17764:	add	r4, r4, #8
   17768:	beq	1779c <XRRGetOutputInfo@plt+0x5d3c>
   1776c:	mov	r3, r5
   17770:	ldr	r5, [r4, #-8]
   17774:	ldr	r2, [r6, #52]	; 0x34
   17778:	tst	r3, r2
   1777c:	beq	17760 <XRRGetOutputInfo@plt+0x5d00>
   17780:	ldr	r2, [r4, #-20]	; 0xffffffec
   17784:	mov	r1, r7
   17788:	mov	r0, #1
   1778c:	bl	11910 <__printf_chk@plt>
   17790:	cmp	r5, #0
   17794:	add	r4, r4, #8
   17798:	bne	1776c <XRRGetOutputInfo@plt+0x5d0c>
   1779c:	cmp	r9, #0
   177a0:	bne	17840 <XRRGetOutputInfo@plt+0x5de0>
   177a4:	cmp	r8, #0
   177a8:	bne	17854 <XRRGetOutputInfo@plt+0x5df4>
   177ac:	mov	r0, #10
   177b0:	bl	118e0 <putchar@plt>
   177b4:	ldr	r1, [r6, #24]
   177b8:	ldr	r0, [r6, #12]
   177bc:	cmp	r1, #0
   177c0:	ldr	lr, [r6, #28]
   177c4:	vmovne	s15, r0
   177c8:	vmovne	s13, r1
   177cc:	vldrne	d5, [pc, #156]	; 17870 <XRRGetOutputInfo@plt+0x5e10>
   177d0:	vldreq	d7, [pc, #160]	; 17878 <XRRGetOutputInfo@plt+0x5e18>
   177d4:	ldr	ip, [r6, #20]
   177d8:	ldr	r2, [r6, #4]
   177dc:	ldr	r3, [r6, #16]
   177e0:	mov	r0, #1
   177e4:	stmib	sp, {r1, lr}
   177e8:	str	ip, [sp]
   177ec:	ldr	r1, [pc, #152]	; 1788c <XRRGetOutputInfo@plt+0x5e2c>
   177f0:	vcvtne.f64.u32	d7, s15
   177f4:	vcvtne.f64.u32	d6, s13
   177f8:	vdivne.f64	d4, d7, d6
   177fc:	vdivne.f64	d7, d4, d5
   17800:	vstr	d7, [sp, #16]
   17804:	bl	11910 <__printf_chk@plt>
   17808:	mov	r0, r6
   1780c:	bl	171d0 <XRRGetOutputInfo@plt+0x5770>
   17810:	ldr	r2, [r6, #40]	; 0x28
   17814:	ldr	r3, [r6, #36]	; 0x24
   17818:	ldr	r1, [pc, #112]	; 17890 <XRRGetOutputInfo@plt+0x5e30>
   1781c:	str	r2, [sp, #4]
   17820:	str	r3, [sp]
   17824:	mov	r0, #1
   17828:	ldr	r3, [r6, #32]
   1782c:	ldr	r2, [r6, #8]
   17830:	vstr	d0, [sp, #8]
   17834:	bl	11910 <__printf_chk@plt>
   17838:	add	sp, sp, #28
   1783c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17840:	ldr	r1, [pc, #76]	; 17894 <XRRGetOutputInfo@plt+0x5e34>
   17844:	mov	r0, #1
   17848:	bl	11910 <__printf_chk@plt>
   1784c:	cmp	r8, #0
   17850:	beq	177ac <XRRGetOutputInfo@plt+0x5d4c>
   17854:	ldr	r1, [pc, #60]	; 17898 <XRRGetOutputInfo@plt+0x5e38>
   17858:	mov	r0, #1
   1785c:	bl	11910 <__printf_chk@plt>
   17860:	b	177ac <XRRGetOutputInfo@plt+0x5d4c>
   17864:	nop			; (mov r0, r0)
   17868:	andeq	r0, r0, r0
   1786c:	smlawbmi	lr, r0, r4, r8
   17870:	andeq	r0, r0, r0
   17874:	addmi	r4, pc, r0
	...
   17880:			; <UNDEFINED> instruction: 0x00019eb4
   17884:	andeq	r9, r1, ip, asr sp
   17888:	andeq	fp, r1, r0, asr #12
   1788c:	andeq	r9, r1, r4, ror #29
   17890:	andeq	r9, r1, r0, lsr pc
   17894:	andeq	r9, r1, ip, asr #29
   17898:	ldrdeq	r9, [r1], -r8
   1789c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   178a0:	ldr	r9, [r0]
   178a4:	tst	r9, #2
   178a8:	beq	178b8 <XRRGetOutputInfo@plt+0x5e58>
   178ac:	ldr	r8, [r0, #8]
   178b0:	cmp	r8, #0
   178b4:	beq	17940 <XRRGetOutputInfo@plt+0x5ee0>
   178b8:	ldr	r3, [pc, #264]	; 179c8 <XRRGetOutputInfo@plt+0x5f68>
   178bc:	mov	r7, r0
   178c0:	ldr	sl, [r3, #16]
   178c4:	cmp	sl, #0
   178c8:	ble	17948 <XRRGetOutputInfo@plt+0x5ee8>
   178cc:	ldr	r5, [r3, #20]
   178d0:	mov	r6, #0
   178d4:	b	1791c <XRRGetOutputInfo@plt+0x5ebc>
   178d8:	tst	r4, #1
   178dc:	beq	178f4 <XRRGetOutputInfo@plt+0x5e94>
   178e0:	ldr	r1, [r5, #4]
   178e4:	ldr	r0, [r7, #4]
   178e8:	bl	11658 <strcmp@plt>
   178ec:	cmp	r0, #0
   178f0:	beq	17940 <XRRGetOutputInfo@plt+0x5ee0>
   178f4:	tst	r4, #4
   178f8:	beq	1790c <XRRGetOutputInfo@plt+0x5eac>
   178fc:	ldr	r2, [r7, #12]
   17900:	ldr	r3, [r5, #12]
   17904:	cmp	r2, r3
   17908:	beq	17940 <XRRGetOutputInfo@plt+0x5ee0>
   1790c:	add	r6, r6, #1
   17910:	cmp	r6, sl
   17914:	add	r5, r5, #20
   17918:	beq	17948 <XRRGetOutputInfo@plt+0x5ee8>
   1791c:	ldr	r4, [r5]
   17920:	mov	r8, r5
   17924:	and	r4, r4, r9
   17928:	tst	r4, #2
   1792c:	beq	178d8 <XRRGetOutputInfo@plt+0x5e78>
   17930:	ldr	r2, [r7, #8]
   17934:	ldr	r3, [r5, #8]
   17938:	cmp	r2, r3
   1793c:	bne	178d8 <XRRGetOutputInfo@plt+0x5e78>
   17940:	mov	r0, r8
   17944:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17948:	ldr	r1, [pc, #124]	; 179cc <XRRGetOutputInfo@plt+0x5f6c>
   1794c:	mov	r0, #1
   17950:	bl	11910 <__printf_chk@plt>
   17954:	ldr	r3, [r7]
   17958:	tst	r3, #2
   1795c:	bne	17990 <XRRGetOutputInfo@plt+0x5f30>
   17960:	tst	r3, #1
   17964:	bne	179b4 <XRRGetOutputInfo@plt+0x5f54>
   17968:	tst	r3, #4
   1796c:	beq	179a4 <XRRGetOutputInfo@plt+0x5f44>
   17970:	ldr	r2, [r7, #12]
   17974:	ldr	r1, [pc, #84]	; 179d0 <XRRGetOutputInfo@plt+0x5f70>
   17978:	mov	r0, #1
   1797c:	bl	11910 <__printf_chk@plt>
   17980:	mov	r0, #10
   17984:	bl	118e0 <putchar@plt>
   17988:	mov	r0, #1
   1798c:	bl	11814 <exit@plt>
   17990:	ldr	r2, [r7, #8]
   17994:	ldr	r1, [pc, #56]	; 179d4 <XRRGetOutputInfo@plt+0x5f74>
   17998:	mov	r0, #1
   1799c:	bl	11910 <__printf_chk@plt>
   179a0:	b	17980 <XRRGetOutputInfo@plt+0x5f20>
   179a4:	ldr	r1, [pc, #44]	; 179d8 <XRRGetOutputInfo@plt+0x5f78>
   179a8:	mov	r0, #1
   179ac:	bl	11910 <__printf_chk@plt>
   179b0:	b	17980 <XRRGetOutputInfo@plt+0x5f20>
   179b4:	ldr	r2, [r7, #4]
   179b8:	ldr	r1, [pc, #28]	; 179dc <XRRGetOutputInfo@plt+0x5f7c>
   179bc:	mov	r0, #1
   179c0:	bl	11910 <__printf_chk@plt>
   179c4:	b	17980 <XRRGetOutputInfo@plt+0x5f20>
   179c8:	andeq	ip, r2, r0, lsr #3
   179cc:	andeq	r9, r1, ip, ror pc
   179d0:			; <UNDEFINED> instruction: 0x00019fb0
   179d4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   179d8:			; <UNDEFINED> instruction: 0x00019fbc
   179dc:	andeq	r9, r1, r8, lsr #31
   179e0:	cmp	r1, #4
   179e4:	cmpeq	r0, #32
   179e8:	beq	17a44 <XRRGetOutputInfo@plt+0x5fe4>
   179ec:	cmp	r1, #19
   179f0:	beq	17a1c <XRRGetOutputInfo@plt+0x5fbc>
   179f4:	cmp	r1, #6
   179f8:	bne	17a14 <XRRGetOutputInfo@plt+0x5fb4>
   179fc:	cmp	r0, #8
   17a00:	beq	17a88 <XRRGetOutputInfo@plt+0x6028>
   17a04:	cmp	r0, #16
   17a08:	beq	17a98 <XRRGetOutputInfo@plt+0x6038>
   17a0c:	cmp	r0, #32
   17a10:	beq	17aa8 <XRRGetOutputInfo@plt+0x6048>
   17a14:	mov	r0, #63	; 0x3f
   17a18:	b	118e0 <putchar@plt>
   17a1c:	cmp	r0, #8
   17a20:	beq	17ab8 <XRRGetOutputInfo@plt+0x6058>
   17a24:	cmp	r0, #16
   17a28:	beq	17ac8 <XRRGetOutputInfo@plt+0x6068>
   17a2c:	cmp	r0, #32
   17a30:	bne	17a14 <XRRGetOutputInfo@plt+0x5fb4>
   17a34:	ldr	r2, [r2]
   17a38:	ldr	r1, [pc, #152]	; 17ad8 <XRRGetOutputInfo@plt+0x6078>
   17a3c:	mov	r0, #1
   17a40:	b	11910 <__printf_chk@plt>
   17a44:	ldr	r3, [pc, #144]	; 17adc <XRRGetOutputInfo@plt+0x607c>
   17a48:	push	{r4, lr}
   17a4c:	ldr	r1, [r2]
   17a50:	ldr	r0, [r3, #24]
   17a54:	bl	118f8 <XGetAtomName@plt>
   17a58:	subs	r4, r0, #0
   17a5c:	bne	17a6c <XRRGetOutputInfo@plt+0x600c>
   17a60:	mov	r0, #63	; 0x3f
   17a64:	pop	{r4, lr}
   17a68:	b	118e0 <putchar@plt>
   17a6c:	mov	r2, r4
   17a70:	ldr	r1, [pc, #104]	; 17ae0 <XRRGetOutputInfo@plt+0x6080>
   17a74:	mov	r0, #1
   17a78:	bl	11910 <__printf_chk@plt>
   17a7c:	mov	r0, r4
   17a80:	pop	{r4, lr}
   17a84:	b	11730 <XFree@plt>
   17a88:	ldrb	r2, [r2]
   17a8c:	ldr	r1, [pc, #80]	; 17ae4 <XRRGetOutputInfo@plt+0x6084>
   17a90:	mov	r0, #1
   17a94:	b	11910 <__printf_chk@plt>
   17a98:	ldrh	r2, [r2]
   17a9c:	ldr	r1, [pc, #64]	; 17ae4 <XRRGetOutputInfo@plt+0x6084>
   17aa0:	mov	r0, #1
   17aa4:	b	11910 <__printf_chk@plt>
   17aa8:	ldr	r2, [r2]
   17aac:	ldr	r1, [pc, #52]	; 17ae8 <XRRGetOutputInfo@plt+0x6088>
   17ab0:	mov	r0, #1
   17ab4:	b	11910 <__printf_chk@plt>
   17ab8:	ldrsb	r2, [r2]
   17abc:	ldr	r1, [pc, #40]	; 17aec <XRRGetOutputInfo@plt+0x608c>
   17ac0:	mov	r0, #1
   17ac4:	b	11910 <__printf_chk@plt>
   17ac8:	ldrsh	r2, [r2]
   17acc:	ldr	r1, [pc, #24]	; 17aec <XRRGetOutputInfo@plt+0x608c>
   17ad0:	mov	r0, #1
   17ad4:	b	11910 <__printf_chk@plt>
   17ad8:	andeq	r9, r1, ip, asr #31
   17adc:	andeq	ip, r2, r0, lsr #3
   17ae0:	andeq	sl, r1, ip, ror #21
   17ae4:	ldrdeq	r9, [r1], -r0
   17ae8:	ldrdeq	r9, [r1], -r4
   17aec:	ldrdeq	fp, [r1], -r0
   17af0:	push	{r4, r5, r6, lr}
   17af4:	mov	r2, #36	; 0x24
   17af8:	mov	r5, r0
   17afc:	mov	r6, r1
   17b00:	bl	1170c <memcmp@plt>
   17b04:	subs	r4, r0, #0
   17b08:	movne	r4, #0
   17b0c:	bne	17b4c <XRRGetOutputInfo@plt+0x60ec>
   17b10:	ldr	r1, [r6, #36]	; 0x24
   17b14:	ldr	r0, [r5, #36]	; 0x24
   17b18:	bl	11658 <strcmp@plt>
   17b1c:	cmp	r0, #0
   17b20:	bne	17b4c <XRRGetOutputInfo@plt+0x60ec>
   17b24:	ldr	r2, [r5, #40]	; 0x28
   17b28:	ldr	r3, [r6, #40]	; 0x28
   17b2c:	cmp	r2, r3
   17b30:	bne	17b4c <XRRGetOutputInfo@plt+0x60ec>
   17b34:	lsl	r2, r2, #2
   17b38:	ldr	r1, [r6, #44]	; 0x2c
   17b3c:	ldr	r0, [r5, #44]	; 0x2c
   17b40:	bl	1170c <memcmp@plt>
   17b44:	clz	r4, r0
   17b48:	lsr	r4, r4, #5
   17b4c:	mov	r0, r4
   17b50:	pop	{r4, r5, r6, pc}
   17b54:	push	{r4, r5, lr}
   17b58:	mov	r5, r0
   17b5c:	ldr	r4, [pc, #100]	; 17bc8 <XRRGetOutputInfo@plt+0x6168>
   17b60:	sub	sp, sp, #28
   17b64:	ldr	r3, [r4, #28]
   17b68:	cmp	r3, #0
   17b6c:	bne	17bb4 <XRRGetOutputInfo@plt+0x6154>
   17b70:	ldr	r3, [r4, #32]
   17b74:	cmp	r3, #0
   17b78:	movne	r0, #0
   17b7c:	bne	17bac <XRRGetOutputInfo@plt+0x614c>
   17b80:	mov	r1, #1
   17b84:	str	r3, [sp, #20]
   17b88:	str	r3, [sp, #16]
   17b8c:	str	r3, [sp, #8]
   17b90:	str	r3, [sp, #4]
   17b94:	str	r3, [sp]
   17b98:	ldr	r0, [r4, #24]
   17b9c:	ldr	r2, [r5]
   17ba0:	str	r1, [sp, #12]
   17ba4:	ldr	r1, [r4, #36]	; 0x24
   17ba8:	bl	1185c <XRRSetCrtcConfig@plt>
   17bac:	add	sp, sp, #28
   17bb0:	pop	{r4, r5, pc}
   17bb4:	ldr	r2, [r1]
   17bb8:	mov	r0, #1
   17bbc:	ldr	r1, [pc, #8]	; 17bcc <XRRGetOutputInfo@plt+0x616c>
   17bc0:	bl	11910 <__printf_chk@plt>
   17bc4:	b	17b70 <XRRGetOutputInfo@plt+0x6110>
   17bc8:	andeq	ip, r2, r0, lsr #3
   17bcc:	ldrdeq	r9, [r1], -r8
   17bd0:	push	{r4, r5, r6, r7, lr}
   17bd4:	sub	sp, sp, #28
   17bd8:	ldr	r5, [pc, #124]	; 17c5c <XRRGetOutputInfo@plt+0x61fc>
   17bdc:	ldr	r6, [pc, #124]	; 17c60 <XRRGetOutputInfo@plt+0x6200>
   17be0:	mov	r7, r0
   17be4:	ldr	r3, [r5]
   17be8:	mov	r4, r1
   17bec:	ldr	r0, [r6, #24]
   17bf0:	add	r2, sp, #16
   17bf4:	add	r1, sp, #12
   17bf8:	str	r3, [sp, #20]
   17bfc:	bl	11694 <XRRQueryVersion@plt>
   17c00:	ldr	r3, [sp, #12]
   17c04:	cmp	r3, #1
   17c08:	bgt	17c34 <XRRGetOutputInfo@plt+0x61d4>
   17c0c:	beq	17c28 <XRRGetOutputInfo@plt+0x61c8>
   17c10:	ldr	r2, [sp, #20]
   17c14:	ldr	r3, [r5]
   17c18:	cmp	r2, r3
   17c1c:	bne	17c58 <XRRGetOutputInfo@plt+0x61f8>
   17c20:	add	sp, sp, #28
   17c24:	pop	{r4, r5, r6, r7, pc}
   17c28:	ldr	r3, [sp, #16]
   17c2c:	cmp	r3, #2
   17c30:	ble	17c10 <XRRGetOutputInfo@plt+0x61b0>
   17c34:	ldrd	r2, [r4, #40]	; 0x28
   17c38:	ldr	r1, [r7]
   17c3c:	ldr	r0, [r6, #24]
   17c40:	str	r2, [sp, #4]
   17c44:	str	r3, [sp]
   17c48:	mov	r2, r4
   17c4c:	ldr	r3, [r4, #36]	; 0x24
   17c50:	bl	116ac <XRRSetCrtcTransform@plt>
   17c54:	b	17c10 <XRRGetOutputInfo@plt+0x61b0>
   17c58:	bl	11724 <__stack_chk_fail@plt>
   17c5c:	andeq	fp, r2, r8, ror #29
   17c60:	andeq	ip, r2, r0, lsr #3
   17c64:	cmp	r0, #11
   17c68:	ldr	r4, [pc, #444]	; 17e2c <XRRGetOutputInfo@plt+0x63cc>
   17c6c:	ldrls	r3, [pc, #444]	; 17e30 <XRRGetOutputInfo@plt+0x63d0>
   17c70:	ldrhi	r3, [pc, #444]	; 17e34 <XRRGetOutputInfo@plt+0x63d4>
   17c74:	addls	r0, r3, r0, lsl #2
   17c78:	ldr	r2, [pc, #440]	; 17e38 <XRRGetOutputInfo@plt+0x63d8>
   17c7c:	ldrls	r3, [r0, #80]	; 0x50
   17c80:	push	{r7, lr}
   17c84:	sub	sp, sp, #24
   17c88:	stm	sp, {r1, r3}
   17c8c:	ldr	r3, [r4, #12]
   17c90:	ldr	r0, [r2]
   17c94:	mov	r1, #1
   17c98:	ldr	r2, [pc, #412]	; 17e3c <XRRGetOutputInfo@plt+0x63dc>
   17c9c:	bl	1194c <__fprintf_chk@plt>
   17ca0:	ldr	r3, [r4, #36]	; 0x24
   17ca4:	ldr	r3, [r3, #8]
   17ca8:	cmp	r3, #0
   17cac:	ble	17ce4 <XRRGetOutputInfo@plt+0x6284>
   17cb0:	mov	r5, #0
   17cb4:	mov	r6, r5
   17cb8:	ldr	r0, [r4, #8]
   17cbc:	add	r6, r6, #1
   17cc0:	add	r0, r0, r5
   17cc4:	add	r1, r0, #12
   17cc8:	add	r0, r0, #8
   17ccc:	bl	17b54 <XRRGetOutputInfo@plt+0x60f4>
   17cd0:	ldr	r3, [r4, #36]	; 0x24
   17cd4:	add	r5, r5, #148	; 0x94
   17cd8:	ldr	r3, [r3, #8]
   17cdc:	cmp	r6, r3
   17ce0:	blt	17cb8 <XRRGetOutputInfo@plt+0x6258>
   17ce4:	ldr	r3, [r4, #28]
   17ce8:	cmp	r3, #0
   17cec:	bne	17e14 <XRRGetOutputInfo@plt+0x63b4>
   17cf0:	ldr	r3, [r4, #32]
   17cf4:	cmp	r3, #0
   17cf8:	bne	17d30 <XRRGetOutputInfo@plt+0x62d0>
   17cfc:	ldr	r3, [pc, #316]	; 17e40 <XRRGetOutputInfo@plt+0x63e0>
   17d00:	ldr	r0, [r4, #24]
   17d04:	mov	r1, #80	; 0x50
   17d08:	ldr	r2, [r3, #4]
   17d0c:	ldr	r3, [r0, #140]	; 0x8c
   17d10:	mla	r2, r1, r2, r3
   17d14:	ldr	r1, [r4, #40]	; 0x28
   17d18:	ldr	r3, [r2, #24]
   17d1c:	str	r3, [sp, #4]
   17d20:	ldr	r3, [r2, #20]
   17d24:	str	r3, [sp]
   17d28:	ldrd	r2, [r2, #12]
   17d2c:	bl	11790 <XRRSetScreenSize@plt>
   17d30:	ldr	r3, [r4, #36]	; 0x24
   17d34:	ldr	r3, [r3, #8]
   17d38:	cmp	r3, #0
   17d3c:	ble	17dfc <XRRGetOutputInfo@plt+0x639c>
   17d40:	mov	r7, #0
   17d44:	ldr	sl, [pc, #248]	; 17e44 <XRRGetOutputInfo@plt+0x63e4>
   17d48:	mov	r8, r7
   17d4c:	b	17dd0 <XRRGetOutputInfo@plt+0x6370>
   17d50:	ldr	r3, [r4, #32]
   17d54:	cmp	r3, #0
   17d58:	bne	17db8 <XRRGetOutputInfo@plt+0x6358>
   17d5c:	add	r9, r5, #52	; 0x34
   17d60:	mov	r0, r9
   17d64:	add	r1, r5, #100	; 0x64
   17d68:	bl	17af0 <XRRGetOutputInfo@plt+0x6090>
   17d6c:	cmp	r0, #0
   17d70:	beq	17e04 <XRRGetOutputInfo@plt+0x63a4>
   17d74:	ldr	r3, [r6, #28]
   17d78:	ldr	r2, [r5, #8]
   17d7c:	str	r3, [sp, #20]
   17d80:	ldr	r3, [r6, #32]
   17d84:	ldr	r1, [r4, #36]	; 0x24
   17d88:	str	r3, [sp, #16]
   17d8c:	ldrh	r0, [r6, #24]
   17d90:	mov	r3, #0
   17d94:	str	r0, [sp, #12]
   17d98:	ldr	r0, [r6, #20]
   17d9c:	str	r0, [sp, #8]
   17da0:	ldr	r0, [r6, #8]
   17da4:	str	r0, [sp, #4]
   17da8:	ldr	ip, [r6, #4]
   17dac:	ldr	r0, [r4, #24]
   17db0:	str	ip, [sp]
   17db4:	bl	1185c <XRRSetCrtcConfig@plt>
   17db8:	ldr	r3, [r4, #36]	; 0x24
   17dbc:	add	r8, r8, #1
   17dc0:	add	r7, r7, #148	; 0x94
   17dc4:	ldr	r3, [r3, #8]
   17dc8:	cmp	r8, r3
   17dcc:	bge	17dfc <XRRGetOutputInfo@plt+0x639c>
   17dd0:	ldr	r5, [r4, #8]
   17dd4:	ldr	r3, [r4, #28]
   17dd8:	add	r5, r5, r7
   17ddc:	cmp	r3, #0
   17de0:	ldr	r6, [r5, #20]
   17de4:	beq	17d50 <XRRGetOutputInfo@plt+0x62f0>
   17de8:	ldr	r2, [r5, #12]
   17dec:	mov	r1, sl
   17df0:	mov	r0, #1
   17df4:	bl	11910 <__printf_chk@plt>
   17df8:	b	17d50 <XRRGetOutputInfo@plt+0x62f0>
   17dfc:	mov	r0, #1
   17e00:	bl	11814 <exit@plt>
   17e04:	mov	r1, r9
   17e08:	add	r0, r5, #8
   17e0c:	bl	17bd0 <XRRGetOutputInfo@plt+0x6170>
   17e10:	b	17d74 <XRRGetOutputInfo@plt+0x6314>
   17e14:	ldr	r3, [pc, #36]	; 17e40 <XRRGetOutputInfo@plt+0x63e0>
   17e18:	ldr	r1, [pc, #40]	; 17e48 <XRRGetOutputInfo@plt+0x63e8>
   17e1c:	mov	r0, #1
   17e20:	ldr	r2, [r3, #4]
   17e24:	bl	11910 <__printf_chk@plt>
   17e28:	b	17cf0 <XRRGetOutputInfo@plt+0x6290>
   17e2c:	andeq	ip, r2, r0, lsr #3
   17e30:	andeq	r9, r1, r8, asr #26
   17e34:	andeq	r9, r1, ip, ror #31
   17e38:	muleq	r2, r8, r1
   17e3c:	strdeq	r9, [r1], -ip
   17e40:	andeq	ip, r2, r4, lsl #3
   17e44:	andeq	sl, r1, ip, lsr #32
   17e48:	andeq	sl, r1, r8, lsl r0
   17e4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17e50:	ldr	r8, [pc, #180]	; 17f0c <XRRGetOutputInfo@plt+0x64ac>
   17e54:	ldr	r1, [r8, #40]	; 0x28
   17e58:	ldr	r0, [r8, #24]
   17e5c:	bl	119f4 <XRRGetProviderResources@plt>
   17e60:	mov	r1, #20
   17e64:	ldr	r4, [r0, #4]
   17e68:	mov	r9, r0
   17e6c:	mov	r0, r4
   17e70:	str	r4, [r8, #16]
   17e74:	bl	11628 <calloc@plt>
   17e78:	cmp	r0, #0
   17e7c:	str	r0, [r8, #20]
   17e80:	beq	17f04 <XRRGetOutputInfo@plt+0x64a4>
   17e84:	cmp	r4, #0
   17e88:	movgt	r5, r0
   17e8c:	movgt	r4, #0
   17e90:	bgt	17e9c <XRRGetOutputInfo@plt+0x643c>
   17e94:	b	17ef8 <XRRGetOutputInfo@plt+0x6498>
   17e98:	ldr	r5, [r8, #20]
   17e9c:	ldr	r3, [r9, #8]
   17ea0:	ldr	r1, [r8, #36]	; 0x24
   17ea4:	ldr	r0, [r8, #24]
   17ea8:	ldr	r2, [r3, r4, lsl #2]
   17eac:	bl	116d0 <XRRGetProviderInfo@plt>
   17eb0:	add	r7, r4, r4, lsl #2
   17eb4:	ldr	r1, [r8, #16]
   17eb8:	add	r6, r5, r7, lsl #2
   17ebc:	str	r0, [r6, #16]
   17ec0:	ldr	r2, [r9, #8]
   17ec4:	ldr	r3, [r5, r7, lsl #2]
   17ec8:	ldr	ip, [r2, r4, lsl #2]
   17ecc:	orr	r2, r3, #6
   17ed0:	str	ip, [r6, #8]
   17ed4:	str	r2, [r5, r7, lsl #2]
   17ed8:	str	r4, [r6, #12]
   17edc:	add	r4, r4, #1
   17ee0:	ldr	r2, [r0, #20]
   17ee4:	orr	r3, r3, #7
   17ee8:	cmp	r4, r1
   17eec:	str	r3, [r5, r7, lsl #2]
   17ef0:	str	r2, [r6, #4]
   17ef4:	blt	17e98 <XRRGetOutputInfo@plt+0x6438>
   17ef8:	mov	r0, r9
   17efc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f00:	b	1188c <XRRFreeProviderResources@plt>
   17f04:	ldr	r0, [pc, #4]	; 17f10 <XRRGetOutputInfo@plt+0x64b0>
   17f08:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   17f0c:	andeq	ip, r2, r0, lsr #3
   17f10:	andeq	r9, r1, r4, lsr #29
   17f14:	push	{r4, r5, lr}
   17f18:	sub	sp, sp, #12
   17f1c:	ldr	r4, [pc, #132]	; 17fa8 <XRRGetOutputInfo@plt+0x6548>
   17f20:	ldr	r3, [r4, #44]	; 0x2c
   17f24:	cmp	r3, #0
   17f28:	beq	17fa0 <XRRGetOutputInfo@plt+0x6540>
   17f2c:	ldr	r3, [r4, #36]	; 0x24
   17f30:	cmp	r3, #0
   17f34:	beq	17f40 <XRRGetOutputInfo@plt+0x64e0>
   17f38:	add	sp, sp, #12
   17f3c:	pop	{r4, r5, pc}
   17f40:	add	r2, r4, #56	; 0x38
   17f44:	add	r3, r4, #60	; 0x3c
   17f48:	mov	r5, r0
   17f4c:	str	r2, [sp, #4]
   17f50:	str	r3, [sp]
   17f54:	ldr	r1, [r4, #40]	; 0x28
   17f58:	add	r3, r4, #48	; 0x30
   17f5c:	add	r2, r4, #52	; 0x34
   17f60:	ldr	r0, [r4, #24]
   17f64:	bl	11970 <XRRGetScreenSizeRange@plt>
   17f68:	cmp	r5, #0
   17f6c:	ldr	r1, [r4, #40]	; 0x28
   17f70:	ldr	r0, [r4, #24]
   17f74:	bne	17f94 <XRRGetOutputInfo@plt+0x6534>
   17f78:	bl	11754 <XRRGetScreenResources@plt>
   17f7c:	str	r0, [r4, #36]	; 0x24
   17f80:	ldr	r3, [r4, #36]	; 0x24
   17f84:	cmp	r3, #0
   17f88:	bne	17f38 <XRRGetOutputInfo@plt+0x64d8>
   17f8c:	ldr	r0, [pc, #24]	; 17fac <XRRGetOutputInfo@plt+0x654c>
   17f90:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   17f94:	bl	118ec <XRRGetScreenResourcesCurrent@plt>
   17f98:	str	r0, [r4, #36]	; 0x24
   17f9c:	b	17f80 <XRRGetOutputInfo@plt+0x6520>
   17fa0:	ldr	r0, [pc, #8]	; 17fb0 <XRRGetOutputInfo@plt+0x6550>
   17fa4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   17fa8:	andeq	ip, r2, r0, lsr #3
   17fac:	andeq	sl, r1, r4, rrx
   17fb0:	andeq	sl, r1, r0, asr #32
   17fb4:	push	{r4, r5, r6, lr}
   17fb8:	sub	sp, sp, #8
   17fbc:	ldr	r5, [pc, #104]	; 1802c <XRRGetOutputInfo@plt+0x65cc>
   17fc0:	ldr	r4, [pc, #104]	; 18030 <XRRGetOutputInfo@plt+0x65d0>
   17fc4:	mov	r2, r0
   17fc8:	ldr	ip, [r5]
   17fcc:	mov	r3, sp
   17fd0:	ldr	r1, [r4, #40]	; 0x28
   17fd4:	ldr	r0, [r4, #24]
   17fd8:	str	ip, [sp, #4]
   17fdc:	bl	11808 <XRRGetMonitors@plt>
   17fe0:	ldr	r3, [sp]
   17fe4:	cmn	r3, #1
   17fe8:	beq	18020 <XRRGetOutputInfo@plt+0x65c0>
   17fec:	mov	r6, r0
   17ff0:	mov	r1, #8
   17ff4:	mov	r0, #1
   17ff8:	bl	11628 <calloc@plt>
   17ffc:	ldr	r1, [sp, #4]
   18000:	ldr	r3, [sp]
   18004:	ldr	r2, [r5]
   18008:	cmp	r1, r2
   1800c:	str	r0, [r4, #64]	; 0x40
   18010:	stm	r0, {r3, r6}
   18014:	bne	18028 <XRRGetOutputInfo@plt+0x65c8>
   18018:	add	sp, sp, #8
   1801c:	pop	{r4, r5, r6, pc}
   18020:	ldr	r0, [pc, #12]	; 18034 <XRRGetOutputInfo@plt+0x65d4>
   18024:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   18028:	bl	11724 <__stack_chk_fail@plt>
   1802c:	andeq	fp, r2, r8, ror #29
   18030:	andeq	ip, r2, r0, lsr #3
   18034:	andeq	sl, r1, r4, lsl #1
   18038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1803c:	sub	sp, sp, #68	; 0x44
   18040:	ldr	r5, [pc, #500]	; 1823c <XRRGetOutputInfo@plt+0x67dc>
   18044:	ldr	r8, [pc, #500]	; 18240 <XRRGetOutputInfo@plt+0x67e0>
   18048:	mov	r1, #148	; 0x94
   1804c:	ldr	r4, [r5, #36]	; 0x24
   18050:	ldr	r3, [r8]
   18054:	ldr	r6, [r4, #8]
   18058:	str	r3, [sp, #60]	; 0x3c
   1805c:	mov	r0, r6
   18060:	str	r6, [r5, #4]
   18064:	bl	11628 <calloc@plt>
   18068:	cmp	r0, #0
   1806c:	str	r0, [r5, #8]
   18070:	beq	18230 <XRRGetOutputInfo@plt+0x67d0>
   18074:	cmp	r6, #0
   18078:	movgt	r6, #0
   1807c:	movgt	r7, r6
   18080:	bgt	18174 <XRRGetOutputInfo@plt+0x6714>
   18084:	b	18208 <XRRGetOutputInfo@plt+0x67a8>
   18088:	ldr	r0, [r5, #36]	; 0x24
   1808c:	ldr	r2, [r5, #8]
   18090:	cmp	r9, #0
   18094:	ldr	ip, [r0, #12]
   18098:	ldr	r1, [r2, r6]
   1809c:	add	r3, r2, r6
   180a0:	ldr	ip, [ip, sl]
   180a4:	orr	r1, r1, #6
   180a8:	str	ip, [r3, #8]
   180ac:	str	r1, [r2, r6]
   180b0:	str	r7, [r3, #12]
   180b4:	beq	18220 <XRRGetOutputInfo@plt+0x67c0>
   180b8:	str	r4, [r3, #28]
   180bc:	str	r9, [r3, #20]
   180c0:	ldr	r2, [r9, #20]
   180c4:	cmp	r2, #0
   180c8:	moveq	r1, #1
   180cc:	streq	r2, [r3, #24]
   180d0:	streq	r2, [r3, #32]
   180d4:	streq	r2, [r3, #36]	; 0x24
   180d8:	strheq	r1, [r3, #40]	; 0x28
   180dc:	ldr	r3, [r0, #12]
   180e0:	add	r2, sp, #8
   180e4:	ldr	r0, [r5, #24]
   180e8:	ldr	r1, [r3, sl]
   180ec:	bl	11a30 <XRRGetCrtcTransform@plt>
   180f0:	ldr	r4, [r5, #8]
   180f4:	cmp	r0, #0
   180f8:	beq	181f4 <XRRGetOutputInfo@plt+0x6794>
   180fc:	ldr	r1, [sp, #8]
   18100:	add	r4, r4, r6
   18104:	cmp	r1, #0
   18108:	add	r9, r4, #52	; 0x34
   1810c:	beq	181fc <XRRGetOutputInfo@plt+0x679c>
   18110:	ldr	ip, [r1, #88]	; 0x58
   18114:	ldr	r3, [r1, #92]	; 0x5c
   18118:	ldr	r2, [r1, #84]	; 0x54
   1811c:	mov	r0, r9
   18120:	str	ip, [sp]
   18124:	add	r1, r1, #48	; 0x30
   18128:	bl	173a8 <XRRGetOutputInfo@plt+0x5948>
   1812c:	ldr	r0, [sp, #8]
   18130:	bl	11730 <XFree@plt>
   18134:	ldr	r4, [r5, #8]
   18138:	add	r4, r4, r6
   1813c:	add	r9, r4, #52	; 0x34
   18140:	ldr	r0, [r4, #92]	; 0x5c
   18144:	ldr	r3, [r4, #96]	; 0x60
   18148:	ldr	r2, [r4, #88]	; 0x58
   1814c:	mov	r1, r9
   18150:	str	r0, [sp]
   18154:	add	r0, r4, #100	; 0x64
   18158:	bl	173a8 <XRRGetOutputInfo@plt+0x5948>
   1815c:	ldr	r4, [r5, #36]	; 0x24
   18160:	add	r7, r7, #1
   18164:	add	r6, r6, #148	; 0x94
   18168:	ldr	r3, [r4, #8]
   1816c:	cmp	r7, r3
   18170:	bge	18208 <XRRGetOutputInfo@plt+0x67a8>
   18174:	ldr	r3, [r4, #12]
   18178:	mov	r1, r4
   1817c:	ldr	r0, [r5, #24]
   18180:	ldr	r2, [r3, r7, lsl #2]
   18184:	bl	11670 <XRRGetCrtcInfo@plt>
   18188:	ldr	r4, [r5, #68]	; 0x44
   1818c:	lsl	sl, r7, #2
   18190:	cmp	r4, #0
   18194:	mov	r9, r0
   18198:	beq	18088 <XRRGetOutputInfo@plt+0x6628>
   1819c:	mov	r2, #48	; 0x30
   181a0:	mov	r1, #0
   181a4:	add	r0, sp, #12
   181a8:	bl	118c8 <memset@plt>
   181ac:	ldr	r3, [r5, #36]	; 0x24
   181b0:	ldr	r0, [r5, #24]
   181b4:	mov	r1, r3
   181b8:	ldr	r3, [r3, #12]
   181bc:	ldr	r2, [r3, r7, lsl #2]
   181c0:	bl	118b0 <XRRGetPanning@plt>
   181c4:	mov	r2, #52	; 0x34
   181c8:	add	r1, sp, #8
   181cc:	ldr	r3, [r0]
   181d0:	mov	r4, r0
   181d4:	str	r3, [sp, #8]
   181d8:	bl	1170c <memcmp@plt>
   181dc:	subs	fp, r0, #0
   181e0:	bne	18088 <XRRGetOutputInfo@plt+0x6628>
   181e4:	mov	r0, r4
   181e8:	bl	116a0 <free@plt>
   181ec:	mov	r4, fp
   181f0:	b	18088 <XRRGetOutputInfo@plt+0x6628>
   181f4:	add	r4, r4, r6
   181f8:	add	r9, r4, #52	; 0x34
   181fc:	mov	r0, r9
   18200:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   18204:	b	18140 <XRRGetOutputInfo@plt+0x66e0>
   18208:	ldr	r2, [sp, #60]	; 0x3c
   1820c:	ldr	r3, [r8]
   18210:	cmp	r2, r3
   18214:	bne	18238 <XRRGetOutputInfo@plt+0x67d8>
   18218:	add	sp, sp, #68	; 0x44
   1821c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18220:	ldr	r3, [r0, #12]
   18224:	ldr	r0, [pc, #24]	; 18244 <XRRGetOutputInfo@plt+0x67e4>
   18228:	ldr	r1, [r3, sl]
   1822c:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   18230:	ldr	r0, [pc, #16]	; 18248 <XRRGetOutputInfo@plt+0x67e8>
   18234:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   18238:	bl	11724 <__stack_chk_fail@plt>
   1823c:	andeq	ip, r2, r0, lsr #3
   18240:	andeq	fp, r2, r8, ror #29
   18244:	muleq	r1, ip, r0
   18248:	andeq	r9, r1, r4, lsr #29
   1824c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18250:	vpush	{d8-d13}
   18254:	ldr	r6, [pc, #660]	; 184f0 <XRRGetOutputInfo@plt+0x6a90>
   18258:	and	r1, r1, #15
   1825c:	sub	r1, r1, #1
   18260:	sub	sp, sp, #100	; 0x64
   18264:	ldr	ip, [r6]
   18268:	mov	sl, r2
   1826c:	mov	r4, r3
   18270:	str	ip, [sp, #92]	; 0x5c
   18274:	cmp	r1, #7
   18278:	ldrls	pc, [pc, r1, lsl #2]
   1827c:	b	18388 <XRRGetOutputInfo@plt+0x6928>
   18280:	andeq	r8, r1, r0, lsl #7
   18284:	andeq	r8, r1, r0, lsr #5
   18288:	andeq	r8, r1, r8, lsl #7
   1828c:	andeq	r8, r1, r0, lsl #7
   18290:	andeq	r8, r1, r8, lsl #7
   18294:	andeq	r8, r1, r8, lsl #7
   18298:	andeq	r8, r1, r8, lsl #7
   1829c:	andeq	r8, r1, r0, lsr #5
   182a0:	ldr	ip, [r0, #8]
   182a4:	cmp	r1, #7
   182a8:	ldrls	pc, [pc, r1, lsl #2]
   182ac:	b	184bc <XRRGetOutputInfo@plt+0x6a5c>
   182b0:	andeq	r8, r1, r8, ror r3
   182b4:	ldrdeq	r8, [r1], -r0
   182b8:			; <UNDEFINED> instruction: 0x000184bc
   182bc:	andeq	r8, r1, r8, ror r3
   182c0:			; <UNDEFINED> instruction: 0x000184bc
   182c4:			; <UNDEFINED> instruction: 0x000184bc
   182c8:			; <UNDEFINED> instruction: 0x000184bc
   182cc:	ldrdeq	r8, [r1], -r0
   182d0:	ldr	lr, [r0, #4]
   182d4:	vldr	d13, [pc, #492]	; 184c8 <XRRGetOutputInfo@plt+0x6a68>
   182d8:	vldr	d10, [pc, #496]	; 184d0 <XRRGetOutputInfo@plt+0x6a70>
   182dc:	vldr	d12, [pc, #500]	; 184d8 <XRRGetOutputInfo@plt+0x6a78>
   182e0:	vldr	d11, [pc, #504]	; 184e0 <XRRGetOutputInfo@plt+0x6a80>
   182e4:	mov	r0, #0
   182e8:	mov	r3, r0
   182ec:	mov	r1, r0
   182f0:	mov	r5, r0
   182f4:	add	fp, sp, #60	; 0x3c
   182f8:	add	r7, sp, #32
   182fc:	add	r2, sl, #36	; 0x24
   18300:	str	r2, [sp, #4]
   18304:	str	ip, [sp, #68]	; 0x44
   18308:	str	ip, [sp, #76]	; 0x4c
   1830c:	str	lr, [sp, #80]	; 0x50
   18310:	str	lr, [sp, #88]	; 0x58
   18314:	str	r0, [sp, #60]	; 0x3c
   18318:	str	r0, [sp, #64]	; 0x40
   1831c:	str	r0, [sp, #72]	; 0x48
   18320:	str	r0, [sp, #84]	; 0x54
   18324:	vmov	s15, r1
   18328:	vstr	d13, [sp, #24]
   1832c:	mov	r0, r7
   18330:	vcvt.f64.s32	d9, s15
   18334:	vmov	s15, r3
   18338:	mov	r3, sl
   1833c:	vcvt.f64.s32	d8, s15
   18340:	vstr	d9, [sp, #8]
   18344:	vstr	d8, [sp, #16]
   18348:	vmov.f64	d5, d9
   1834c:	vldr	d6, [pc, #404]	; 184e8 <XRRGetOutputInfo@plt+0x6a88>
   18350:	add	r1, sp, #16
   18354:	mov	ip, r3
   18358:	vldmia	ip!, {s14}
   1835c:	cmp	r7, r1
   18360:	vcvt.f64.s32	d7, s14
   18364:	vmul.f64	d7, d7, d10
   18368:	vmla.f64	d6, d7, d5
   1836c:	beq	18390 <XRRGetOutputInfo@plt+0x6930>
   18370:	vldmia	r1!, {d5}
   18374:	b	18358 <XRRGetOutputInfo@plt+0x68f8>
   18378:	ldr	lr, [r0, #8]
   1837c:	b	182d4 <XRRGetOutputInfo@plt+0x6874>
   18380:	ldr	ip, [r0, #4]
   18384:	b	182a4 <XRRGetOutputInfo@plt+0x6844>
   18388:	mov	ip, #0
   1838c:	b	182a4 <XRRGetOutputInfo@plt+0x6844>
   18390:	ldr	r2, [sp, #4]
   18394:	add	r3, r3, #12
   18398:	cmp	r2, r3
   1839c:	vstmia	r0!, {d6}
   183a0:	bne	18348 <XRRGetOutputInfo@plt+0x68e8>
   183a4:	vldr	d4, [sp, #48]	; 0x30
   183a8:	vcmp.f64	d4, #0.0
   183ac:	vmrs	APSR_nzcv, fpscr
   183b0:	beq	183f8 <XRRGetOutputInfo@plt+0x6998>
   183b4:	vldr	d7, [sp, #32]
   183b8:	vdiv.f64	d6, d7, d4
   183bc:	vcmpe.f64	d6, d12
   183c0:	vmrs	APSR_nzcv, fpscr
   183c4:	bgt	183f8 <XRRGetOutputInfo@plt+0x6998>
   183c8:	vcmpe.f64	d6, d11
   183cc:	vmrs	APSR_nzcv, fpscr
   183d0:	bmi	183f8 <XRRGetOutputInfo@plt+0x6998>
   183d4:	vldr	d7, [sp, #40]	; 0x28
   183d8:	vdiv.f64	d5, d7, d4
   183dc:	vcmpe.f64	d5, d12
   183e0:	vmrs	APSR_nzcv, fpscr
   183e4:	bgt	183f8 <XRRGetOutputInfo@plt+0x6998>
   183e8:	vcmpe.f64	d5, d11
   183ec:	vmrs	APSR_nzcv, fpscr
   183f0:	vmovpl.f64	d8, d5
   183f4:	vmovpl.f64	d9, d6
   183f8:	vmov.f64	d0, d9
   183fc:	bl	1179c <floor@plt>
   18400:	vcvt.s32.f64	s15, d0
   18404:	vmov.f64	d0, d8
   18408:	vstr	s15, [sp]
   1840c:	bl	1179c <floor@plt>
   18410:	vcvt.s32.f64	s15, d0
   18414:	vmov.f64	d0, d9
   18418:	vmov	r9, s15
   1841c:	bl	11958 <ceil@plt>
   18420:	vcvt.s32.f64	s15, d0
   18424:	vmov.f64	d0, d8
   18428:	vmov	r8, s15
   1842c:	bl	11958 <ceil@plt>
   18430:	cmp	r5, #0
   18434:	ldr	r0, [sp]
   18438:	add	r5, r5, #1
   1843c:	vcvt.s32.f64	s15, d0
   18440:	vmov	ip, s15
   18444:	beq	18490 <XRRGetOutputInfo@plt+0x6a30>
   18448:	ldr	lr, [r4]
   1844c:	ldr	r1, [r4, #8]
   18450:	cmp	r0, lr
   18454:	strlt	r0, [r4]
   18458:	ldr	r0, [r4, #4]
   1845c:	ldr	r3, [r4, #12]
   18460:	cmp	r9, r0
   18464:	strlt	r9, [r4, #4]
   18468:	cmp	r8, r1
   1846c:	strgt	r8, [r4, #8]
   18470:	cmp	ip, r3
   18474:	strgt	ip, [r4, #12]
   18478:	cmp	r5, #4
   1847c:	beq	184a0 <XRRGetOutputInfo@plt+0x6a40>
   18480:	ldr	r1, [fp, #8]
   18484:	ldr	r3, [fp, #12]
   18488:	add	fp, fp, #8
   1848c:	b	18324 <XRRGetOutputInfo@plt+0x68c4>
   18490:	stm	r4, {r0, r9}
   18494:	str	r8, [r4, #8]
   18498:	vstr	s15, [r4, #12]
   1849c:	b	18480 <XRRGetOutputInfo@plt+0x6a20>
   184a0:	ldr	r2, [sp, #92]	; 0x5c
   184a4:	ldr	r3, [r6]
   184a8:	cmp	r2, r3
   184ac:	bne	184c4 <XRRGetOutputInfo@plt+0x6a64>
   184b0:	add	sp, sp, #100	; 0x64
   184b4:	vpop	{d8-d13}
   184b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184bc:	mov	lr, #0
   184c0:	b	182d4 <XRRGetOutputInfo@plt+0x6874>
   184c4:	bl	11724 <__stack_chk_fail@plt>
   184c8:	andeq	r0, r0, r0
   184cc:	svccc	0x00f00000	; IMB
   184d0:	andeq	r0, r0, r0
   184d4:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   184d8:	andeq	r0, r0, r0
   184dc:	sbcsmi	pc, pc, r0, asr #31
   184e0:	andeq	r0, r0, r0
   184e4:	sbcsgt	pc, pc, r0, asr #31
	...
   184f0:	andeq	fp, r2, r8, ror #29
   184f4:	ldr	r3, [pc, #140]	; 18588 <XRRGetOutputInfo@plt+0x6b28>
   184f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   184fc:	ldr	r3, [r3, #36]	; 0x24
   18500:	ldr	r9, [r3, #24]
   18504:	cmp	r9, #0
   18508:	ble	18580 <XRRGetOutputInfo@plt+0x6b20>
   1850c:	ldr	r8, [r0]
   18510:	mov	r6, #0
   18514:	ldr	r4, [r3, #28]
   18518:	and	sl, r8, #2
   1851c:	mov	r7, r0
   18520:	and	r8, r8, #1
   18524:	mov	r5, r6
   18528:	cmp	sl, #0
   1852c:	add	r5, r5, #1
   18530:	beq	18544 <XRRGetOutputInfo@plt+0x6ae4>
   18534:	ldr	r2, [r7, #8]
   18538:	ldr	r3, [r4]
   1853c:	cmp	r2, r3
   18540:	beq	18574 <XRRGetOutputInfo@plt+0x6b14>
   18544:	cmp	r8, #0
   18548:	beq	18560 <XRRGetOutputInfo@plt+0x6b00>
   1854c:	ldr	r1, [r4, #44]	; 0x2c
   18550:	ldr	r0, [r7, #4]
   18554:	bl	11658 <strcmp@plt>
   18558:	orrs	r3, r6, r0
   1855c:	moveq	r6, r4
   18560:	cmp	r9, r5
   18564:	add	r4, r4, #56	; 0x38
   18568:	bne	18528 <XRRGetOutputInfo@plt+0x6ac8>
   1856c:	mov	r0, r6
   18570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18574:	mov	r6, r4
   18578:	mov	r0, r6
   1857c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18580:	mov	r6, #0
   18584:	b	1856c <XRRGetOutputInfo@plt+0x6b0c>
   18588:	andeq	ip, r2, r0, lsr #3
   1858c:	push	{r4, r5, r6, r7, lr}
   18590:	sub	sp, sp, #36	; 0x24
   18594:	ldr	r6, [r1, #28]
   18598:	ldr	r5, [pc, #456]	; 18768 <XRRGetOutputInfo@plt+0x6d08>
   1859c:	ldr	lr, [r6, #28]
   185a0:	ldr	r3, [r5]
   185a4:	cmp	lr, #0
   185a8:	str	r3, [sp, #28]
   185ac:	ble	18600 <XRRGetOutputInfo@plt+0x6ba0>
   185b0:	ldr	r2, [r6, #32]
   185b4:	ldr	r4, [r0, #8]
   185b8:	ldr	r3, [r2]
   185bc:	cmp	r4, r3
   185c0:	beq	18604 <XRRGetOutputInfo@plt+0x6ba4>
   185c4:	mov	r3, #0
   185c8:	b	185d8 <XRRGetOutputInfo@plt+0x6b78>
   185cc:	ldr	ip, [r2, #4]!
   185d0:	cmp	ip, r4
   185d4:	beq	18604 <XRRGetOutputInfo@plt+0x6ba4>
   185d8:	add	r3, r3, #1
   185dc:	cmp	r3, lr
   185e0:	bne	185cc <XRRGetOutputInfo@plt+0x6b6c>
   185e4:	mov	r0, #0
   185e8:	ldr	r2, [sp, #28]
   185ec:	ldr	r3, [r5]
   185f0:	cmp	r2, r3
   185f4:	bne	18764 <XRRGetOutputInfo@plt+0x6d04>
   185f8:	add	sp, sp, #36	; 0x24
   185fc:	pop	{r4, r5, r6, r7, pc}
   18600:	beq	185e4 <XRRGetOutputInfo@plt+0x6b84>
   18604:	ldr	r3, [pc, #352]	; 1876c <XRRGetOutputInfo@plt+0x6d0c>
   18608:	ldr	r3, [r3]
   1860c:	cmp	r3, #0
   18610:	beq	18688 <XRRGetOutputInfo@plt+0x6c28>
   18614:	cmp	r1, r3
   18618:	beq	18608 <XRRGetOutputInfo@plt+0x6ba8>
   1861c:	ldr	r2, [r3, #80]	; 0x50
   18620:	cmp	r2, #0
   18624:	beq	18608 <XRRGetOutputInfo@plt+0x6ba8>
   18628:	ldr	r2, [r3, #48]	; 0x30
   1862c:	cmp	r2, r0
   18630:	bne	18608 <XRRGetOutputInfo@plt+0x6ba8>
   18634:	ldr	r4, [r6, #36]	; 0x24
   18638:	cmp	r4, #0
   1863c:	ble	18678 <XRRGetOutputInfo@plt+0x6c18>
   18640:	ldr	ip, [r6, #40]	; 0x28
   18644:	ldr	r7, [r3, #20]
   18648:	ldr	r2, [ip]
   1864c:	cmp	r7, r2
   18650:	beq	18608 <XRRGetOutputInfo@plt+0x6ba8>
   18654:	mov	r2, #0
   18658:	b	18668 <XRRGetOutputInfo@plt+0x6c08>
   1865c:	ldr	lr, [ip, #4]!
   18660:	cmp	lr, r7
   18664:	beq	18608 <XRRGetOutputInfo@plt+0x6ba8>
   18668:	add	r2, r2, #1
   1866c:	cmp	r4, r2
   18670:	bne	1865c <XRRGetOutputInfo@plt+0x6bfc>
   18674:	b	185e4 <XRRGetOutputInfo@plt+0x6b84>
   18678:	beq	185e4 <XRRGetOutputInfo@plt+0x6b84>
   1867c:	ldr	r3, [r3]
   18680:	cmp	r3, #0
   18684:	bne	18614 <XRRGetOutputInfo@plt+0x6bb4>
   18688:	ldr	r3, [r0, #48]	; 0x30
   1868c:	cmp	r3, #0
   18690:	beq	186ec <XRRGetOutputInfo@plt+0x6c8c>
   18694:	ldr	r2, [r0, #24]
   18698:	ldr	r3, [r1, #80]	; 0x50
   1869c:	cmp	r2, r3
   186a0:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   186a4:	ldr	r2, [r0, #32]
   186a8:	ldr	r3, [r1, #108]	; 0x6c
   186ac:	cmp	r2, r3
   186b0:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   186b4:	ldr	r2, [r0, #36]	; 0x24
   186b8:	ldr	r3, [r1, #112]	; 0x70
   186bc:	cmp	r2, r3
   186c0:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   186c4:	ldrh	r2, [r0, #40]	; 0x28
   186c8:	ldrh	r3, [r1, #116]	; 0x74
   186cc:	cmp	r2, r3
   186d0:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   186d4:	add	r1, r1, #184	; 0xb8
   186d8:	add	r0, r0, #52	; 0x34
   186dc:	bl	17af0 <XRRGetOutputInfo@plt+0x6090>
   186e0:	adds	r0, r0, #0
   186e4:	movne	r0, #1
   186e8:	b	185e8 <XRRGetOutputInfo@plt+0x6b88>
   186ec:	ldr	r4, [r0, #20]
   186f0:	str	r1, [sp, #4]
   186f4:	ldr	r3, [r4, #28]
   186f8:	cmp	r3, #0
   186fc:	moveq	r0, #1
   18700:	beq	185e8 <XRRGetOutputInfo@plt+0x6b88>
   18704:	ldr	r2, [r4, #20]
   18708:	mov	r3, #2
   1870c:	add	r0, sp, #12
   18710:	str	r3, [sp, #12]
   18714:	str	r2, [sp, #20]
   18718:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   1871c:	ldr	r1, [sp, #4]
   18720:	ldr	r3, [r1, #80]	; 0x50
   18724:	cmp	r3, r0
   18728:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   1872c:	ldr	r2, [r4, #4]
   18730:	ldr	r3, [r1, #108]	; 0x6c
   18734:	cmp	r2, r3
   18738:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   1873c:	ldr	r2, [r4, #8]
   18740:	ldr	r3, [r1, #112]	; 0x70
   18744:	cmp	r2, r3
   18748:	bne	185e4 <XRRGetOutputInfo@plt+0x6b84>
   1874c:	ldrh	r0, [r4, #24]
   18750:	ldrh	r3, [r1, #116]	; 0x74
   18754:	sub	r0, r0, r3
   18758:	clz	r0, r0
   1875c:	lsr	r0, r0, #5
   18760:	b	185e8 <XRRGetOutputInfo@plt+0x6b88>
   18764:	bl	11724 <__stack_chk_fail@plt>
   18768:	andeq	fp, r2, r8, ror #29
   1876c:	andeq	ip, r2, r0, lsr #3
   18770:	ldr	r3, [pc, #312]	; 188b0 <XRRGetOutputInfo@plt+0x6e50>
   18774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18778:	sub	sp, sp, #28
   1877c:	ldr	r3, [r3]
   18780:	subs	r5, r0, #0
   18784:	str	r3, [sp, #20]
   18788:	beq	18898 <XRRGetOutputInfo@plt+0x6e38>
   1878c:	ldr	r7, [r5]
   18790:	mov	r9, #0
   18794:	mov	r0, r7
   18798:	str	r9, [r5, #48]	; 0x30
   1879c:	bl	18770 <XRRGetOutputInfo@plt+0x6d10>
   187a0:	ldr	r3, [r5, #80]	; 0x50
   187a4:	cmp	r3, r9
   187a8:	mov	r8, r0
   187ac:	beq	18878 <XRRGetOutputInfo@plt+0x6e18>
   187b0:	ldr	r2, [r5, #28]
   187b4:	ldr	r3, [r2, #28]
   187b8:	cmp	r3, r9
   187bc:	ble	18864 <XRRGetOutputInfo@plt+0x6e04>
   187c0:	mov	fp, r9
   187c4:	mov	r4, r9
   187c8:	ldr	r6, [r2, #32]
   187cc:	mov	r3, #2
   187d0:	add	r0, sp, #4
   187d4:	ldr	r2, [r6, fp, lsl #2]
   187d8:	str	r3, [sp, #4]
   187dc:	str	r2, [sp, #12]
   187e0:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   187e4:	add	r6, r6, fp, lsl #2
   187e8:	subs	sl, r0, #0
   187ec:	beq	188a4 <XRRGetOutputInfo@plt+0x6e44>
   187f0:	cmp	r7, #0
   187f4:	movne	r1, r7
   187f8:	beq	1880c <XRRGetOutputInfo@plt+0x6dac>
   187fc:	str	r4, [r1, #48]	; 0x30
   18800:	ldr	r1, [r1]
   18804:	cmp	r1, #0
   18808:	bne	187fc <XRRGetOutputInfo@plt+0x6d9c>
   1880c:	mov	r1, r5
   18810:	mov	r0, sl
   18814:	bl	1858c <XRRGetOutputInfo@plt+0x6b2c>
   18818:	cmp	r0, #0
   1881c:	beq	18850 <XRRGetOutputInfo@plt+0x6df0>
   18820:	ldr	r6, [r5, #52]	; 0x34
   18824:	ldr	r3, [pc, #136]	; 188b4 <XRRGetOutputInfo@plt+0x6e54>
   18828:	cmp	r6, sl
   1882c:	movne	r3, #1000	; 0x3e8
   18830:	str	sl, [r5, #48]	; 0x30
   18834:	mov	r0, r7
   18838:	mov	r6, r3
   1883c:	bl	18770 <XRRGetOutputInfo@plt+0x6d10>
   18840:	add	r0, r0, r6
   18844:	cmp	r0, r8
   18848:	movgt	r9, sl
   1884c:	movgt	r8, r0
   18850:	ldr	r2, [r5, #28]
   18854:	add	fp, fp, #1
   18858:	ldr	r1, [r2, #28]
   1885c:	cmp	r1, fp
   18860:	bgt	187c8 <XRRGetOutputInfo@plt+0x6d68>
   18864:	ldr	r3, [r5, #48]	; 0x30
   18868:	mov	r0, r7
   1886c:	cmp	r3, r9
   18870:	strne	r9, [r5, #48]	; 0x30
   18874:	bl	18770 <XRRGetOutputInfo@plt+0x6d10>
   18878:	ldr	r3, [pc, #48]	; 188b0 <XRRGetOutputInfo@plt+0x6e50>
   1887c:	ldr	r2, [sp, #20]
   18880:	mov	r0, r8
   18884:	ldr	r3, [r3]
   18888:	cmp	r2, r3
   1888c:	bne	188a0 <XRRGetOutputInfo@plt+0x6e40>
   18890:	add	sp, sp, #28
   18894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18898:	mov	r8, r5
   1889c:	b	18878 <XRRGetOutputInfo@plt+0x6e18>
   188a0:	bl	11724 <__stack_chk_fail@plt>
   188a4:	ldr	r1, [r6]
   188a8:	ldr	r0, [pc, #8]	; 188b8 <XRRGetOutputInfo@plt+0x6e58>
   188ac:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   188b0:	andeq	fp, r2, r8, ror #29
   188b4:	andeq	r0, r0, r9, ror #7
   188b8:	andeq	sl, r1, r4, asr #1
   188bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   188c0:	vpush	{d8-d15}
   188c4:	ldr	r3, [pc, #1116]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   188c8:	ldr	r1, [r3, #36]	; 0x24
   188cc:	ldr	r3, [pc, #1080]	; 18d0c <XRRGetOutputInfo@plt+0x72ac>
   188d0:	sub	sp, sp, #100	; 0x64
   188d4:	ldr	r2, [r3]
   188d8:	ldr	r3, [r1, #16]
   188dc:	str	r2, [sp, #92]	; 0x5c
   188e0:	cmp	r3, #0
   188e4:	ble	18ca4 <XRRGetOutputInfo@plt+0x7244>
   188e8:	vldr	d9, [pc, #976]	; 18cc0 <XRRGetOutputInfo@plt+0x7260>
   188ec:	vldr	d11, [pc, #980]	; 18cc8 <XRRGetOutputInfo@plt+0x7268>
   188f0:	vldr	d10, [pc, #984]	; 18cd0 <XRRGetOutputInfo@plt+0x7270>
   188f4:	vldr	d12, [pc, #988]	; 18cd8 <XRRGetOutputInfo@plt+0x7278>
   188f8:	vldr	d13, [pc, #992]	; 18ce0 <XRRGetOutputInfo@plt+0x7280>
   188fc:	mov	r9, #0
   18900:	ldr	r3, [r1, #20]
   18904:	ldr	r2, [pc, #1052]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   18908:	lsl	r6, r9, #2
   1890c:	ldr	r0, [r2, #24]
   18910:	ldr	r2, [r3, r9, lsl #2]
   18914:	bl	11a60 <XRRGetOutputInfo@plt>
   18918:	ldr	r3, [pc, #1032]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   1891c:	subs	r5, r0, #0
   18920:	beq	197f0 <XRRGetOutputInfo@plt+0x7d90>
   18924:	ldr	r8, [r3, #36]	; 0x24
   18928:	ldr	r3, [sp, #60]	; 0x3c
   1892c:	add	r0, sp, #60	; 0x3c
   18930:	ldr	r2, [r8, #20]
   18934:	orr	r3, r3, #7
   18938:	ldr	r2, [r2, r9, lsl #2]
   1893c:	str	r9, [sp, #72]	; 0x48
   18940:	str	r2, [sp, #68]	; 0x44
   18944:	ldr	r2, [r5, #8]
   18948:	str	r3, [sp, #60]	; 0x3c
   1894c:	str	r2, [sp, #64]	; 0x40
   18950:	bl	17240 <XRRGetOutputInfo@plt+0x57e0>
   18954:	subs	fp, r0, #0
   18958:	beq	1927c <XRRGetOutputInfo@plt+0x781c>
   1895c:	ldr	r2, [fp, #172]	; 0xac
   18960:	mov	r3, #1
   18964:	cmp	r2, #0
   18968:	str	r3, [fp, #252]	; 0xfc
   1896c:	ldrh	r3, [r5, #24]
   18970:	beq	18dcc <XRRGetOutputInfo@plt+0x736c>
   18974:	cmp	r3, #1
   18978:	beq	18d94 <XRRGetOutputInfo@plt+0x7334>
   1897c:	cmp	r3, #0
   18980:	beq	19328 <XRRGetOutputInfo@plt+0x78c8>
   18984:	cmp	r3, #2
   18988:	beq	19328 <XRRGetOutputInfo@plt+0x78c8>
   1898c:	ldr	r3, [r8, #20]
   18990:	ldr	r6, [r3, r6]
   18994:	ldr	r3, [r5, #44]	; 0x2c
   18998:	cmp	r3, #0
   1899c:	beq	18de8 <XRRGetOutputInfo@plt+0x7388>
   189a0:	ldr	r7, [fp, #4]
   189a4:	ldr	r4, [fp, #32]
   189a8:	ldr	r3, [fp, #12]
   189ac:	tst	r3, #2
   189b0:	orreq	r3, r3, #2
   189b4:	streq	r3, [fp, #12]
   189b8:	streq	r6, [fp, #20]
   189bc:	tst	r3, #1
   189c0:	orreq	r3, r3, #1
   189c4:	ldreq	r2, [r5, #8]
   189c8:	streq	r3, [fp, #12]
   189cc:	streq	r2, [fp, #16]
   189d0:	tst	r7, #1
   189d4:	str	r5, [fp, #28]
   189d8:	ldreq	r3, [r5, #4]
   189dc:	orreq	r4, r4, #2
   189e0:	streq	r4, [fp, #32]
   189e4:	streq	r3, [fp, #40]	; 0x28
   189e8:	cmp	r4, #2
   189ec:	beq	190c8 <XRRGetOutputInfo@plt+0x7668>
   189f0:	add	r0, fp, #32
   189f4:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   189f8:	cmp	r0, #0
   189fc:	str	r0, [fp, #48]	; 0x30
   18a00:	beq	19258 <XRRGetOutputInfo@plt+0x77f8>
   18a04:	ldr	ip, [r5, #28]
   18a08:	cmp	ip, #0
   18a0c:	ble	19750 <XRRGetOutputInfo@plt+0x7cf0>
   18a10:	ldr	r3, [r5, #32]
   18a14:	ldr	r2, [r0, #8]
   18a18:	ldr	r1, [r3]
   18a1c:	cmp	r1, r2
   18a20:	beq	18a48 <XRRGetOutputInfo@plt+0x6fe8>
   18a24:	mov	r1, #0
   18a28:	b	18a38 <XRRGetOutputInfo@plt+0x6fd8>
   18a2c:	ldr	r0, [r3, #4]!
   18a30:	cmp	r0, r2
   18a34:	beq	18a48 <XRRGetOutputInfo@plt+0x6fe8>
   18a38:	add	r1, r1, #1
   18a3c:	cmp	r1, ip
   18a40:	bne	18a2c <XRRGetOutputInfo@plt+0x6fcc>
   18a44:	b	19754 <XRRGetOutputInfo@plt+0x7cf4>
   18a48:	tst	r7, #2
   18a4c:	ldr	r4, [fp, #56]	; 0x38
   18a50:	bne	18e0c <XRRGetOutputInfo@plt+0x73ac>
   18a54:	ldr	r3, [r5, #4]
   18a58:	orr	r4, r4, #2
   18a5c:	cmp	r3, #0
   18a60:	beq	190b4 <XRRGetOutputInfo@plt+0x7654>
   18a64:	mov	r2, #2
   18a68:	add	r0, sp, #76	; 0x4c
   18a6c:	str	r3, [sp, #84]	; 0x54
   18a70:	str	r2, [sp, #76]	; 0x4c
   18a74:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   18a78:	cmp	r0, #0
   18a7c:	beq	190b4 <XRRGetOutputInfo@plt+0x7654>
   18a80:	ldr	r3, [r0, #20]
   18a84:	cmp	r3, #0
   18a88:	beq	190b4 <XRRGetOutputInfo@plt+0x7654>
   18a8c:	ldr	r5, [r3, #20]
   18a90:	str	r4, [fp, #56]	; 0x38
   18a94:	cmp	r5, #0
   18a98:	str	r5, [fp, #64]	; 0x40
   18a9c:	beq	19244 <XRRGetOutputInfo@plt+0x77e4>
   18aa0:	mov	r3, #2
   18aa4:	add	r0, sp, #76	; 0x4c
   18aa8:	str	r5, [sp, #84]	; 0x54
   18aac:	str	r3, [sp, #76]	; 0x4c
   18ab0:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   18ab4:	cmp	r0, #0
   18ab8:	str	r0, [fp, #80]	; 0x50
   18abc:	beq	19804 <XRRGetOutputInfo@plt+0x7da4>
   18ac0:	ldr	r7, [fp, #4]
   18ac4:	ldr	r5, [fp, #28]
   18ac8:	tst	r7, #8
   18acc:	and	r2, r7, #16
   18ad0:	bne	18fb8 <XRRGetOutputInfo@plt+0x7558>
   18ad4:	ldr	r3, [fp, #48]	; 0x30
   18ad8:	cmp	r3, #0
   18adc:	beq	19360 <XRRGetOutputInfo@plt+0x7900>
   18ae0:	ldr	r1, [r3, #20]
   18ae4:	cmp	r2, #0
   18ae8:	ldrh	r6, [fp, #116]	; 0x74
   18aec:	ldr	r2, [r1, #4]
   18af0:	str	r2, [fp, #108]	; 0x6c
   18af4:	ldr	r2, [r3, #20]
   18af8:	ldr	r2, [r2, #8]
   18afc:	str	r2, [fp, #112]	; 0x70
   18b00:	bne	18b24 <XRRGetOutputInfo@plt+0x70c4>
   18b04:	bic	r6, r6, #15
   18b08:	uxth	r6, r6
   18b0c:	strh	r6, [fp, #116]	; 0x74
   18b10:	ldr	r3, [r3, #20]
   18b14:	ldrh	r3, [r3, #24]
   18b18:	and	r3, r3, #15
   18b1c:	orr	r6, r3, r6
   18b20:	strh	r6, [fp, #116]	; 0x74
   18b24:	tst	r7, #32
   18b28:	bne	18b54 <XRRGetOutputInfo@plt+0x70f4>
   18b2c:	ldr	r3, [fp, #48]	; 0x30
   18b30:	bic	r6, r6, #48	; 0x30
   18b34:	cmp	r3, #0
   18b38:	uxth	r6, r6
   18b3c:	strh	r6, [fp, #116]	; 0x74
   18b40:	ldrne	r3, [r3, #20]
   18b44:	ldrhne	r3, [r3, #24]
   18b48:	andne	r3, r3, #48	; 0x30
   18b4c:	orrne	r6, r3, r6
   18b50:	strhne	r6, [fp, #116]	; 0x74
   18b54:	ldr	r4, [r5, #28]
   18b58:	cmp	r4, #0
   18b5c:	ble	18c24 <XRRGetOutputInfo@plt+0x71c4>
   18b60:	ldr	sl, [r5, #32]
   18b64:	add	r3, sp, #76	; 0x4c
   18b68:	mov	r8, #0
   18b6c:	sub	sl, sl, #4
   18b70:	and	r5, r6, #15
   18b74:	str	r3, [sp, #16]
   18b78:	and	r3, r6, #48	; 0x30
   18b7c:	str	r3, [sp, #24]
   18b80:	ldr	r3, [sl, #4]!
   18b84:	ldr	r0, [sp, #16]
   18b88:	str	r3, [sp, #84]	; 0x54
   18b8c:	mov	r3, #2
   18b90:	str	r3, [sp, #76]	; 0x4c
   18b94:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   18b98:	cmp	r0, #0
   18b9c:	beq	18c18 <XRRGetOutputInfo@plt+0x71b8>
   18ba0:	ldr	r3, [r0, #20]
   18ba4:	ldrh	r3, [r3, #36]	; 0x24
   18ba8:	tst	r3, r5
   18bac:	bne	18df8 <XRRGetOutputInfo@plt+0x7398>
   18bb0:	cmp	r5, #0
   18bb4:	ldr	r1, [fp, #16]
   18bb8:	ldreq	r2, [pc, #296]	; 18ce8 <XRRGetOutputInfo@plt+0x7288>
   18bbc:	beq	18be0 <XRRGetOutputInfo@plt+0x7180>
   18bc0:	mov	r3, #0
   18bc4:	asr	r2, r6, r3
   18bc8:	tst	r2, #1
   18bcc:	bne	1981c <XRRGetOutputInfo@plt+0x7dbc>
   18bd0:	add	r3, r3, #1
   18bd4:	cmp	r3, #4
   18bd8:	bne	18bc4 <XRRGetOutputInfo@plt+0x7164>
   18bdc:	ldr	r2, [pc, #264]	; 18cec <XRRGetOutputInfo@plt+0x728c>
   18be0:	ldr	r3, [sp, #24]
   18be4:	cmp	r3, #16
   18be8:	beq	19814 <XRRGetOutputInfo@plt+0x7db4>
   18bec:	bls	197d8 <XRRGetOutputInfo@plt+0x7d78>
   18bf0:	ldr	ip, [sp, #24]
   18bf4:	cmp	ip, #32
   18bf8:	ldreq	r3, [pc, #240]	; 18cf0 <XRRGetOutputInfo@plt+0x7290>
   18bfc:	beq	18c10 <XRRGetOutputInfo@plt+0x71b0>
   18c00:	ldr	r0, [pc, #236]	; 18cf4 <XRRGetOutputInfo@plt+0x7294>
   18c04:	cmp	ip, #48	; 0x30
   18c08:	ldr	r3, [pc, #232]	; 18cf8 <XRRGetOutputInfo@plt+0x7298>
   18c0c:	movne	r3, r0
   18c10:	ldr	r0, [pc, #228]	; 18cfc <XRRGetOutputInfo@plt+0x729c>
   18c14:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   18c18:	add	r8, r8, #1
   18c1c:	cmp	r8, r4
   18c20:	bne	18b80 <XRRGetOutputInfo@plt+0x7120>
   18c24:	ands	r5, r7, #2048	; 0x800
   18c28:	beq	190f8 <XRRGetOutputInfo@plt+0x7698>
   18c2c:	ldr	r3, [fp, #4]
   18c30:	tst	r3, #512	; 0x200
   18c34:	bne	18ffc <XRRGetOutputInfo@plt+0x759c>
   18c38:	ldr	r1, [fp, #48]	; 0x30
   18c3c:	add	r0, fp, #184	; 0xb8
   18c40:	cmp	r1, #0
   18c44:	beq	19378 <XRRGetOutputInfo@plt+0x7918>
   18c48:	ldr	ip, [r1, #92]	; 0x5c
   18c4c:	ldr	r3, [r1, #96]	; 0x60
   18c50:	ldr	r2, [r1, #88]	; 0x58
   18c54:	str	ip, [sp]
   18c58:	add	r1, r1, #52	; 0x34
   18c5c:	bl	173a8 <XRRGetOutputInfo@plt+0x5948>
   18c60:	ldr	r3, [fp, #4]
   18c64:	tst	r3, #8192	; 0x2000
   18c68:	beq	18c84 <XRRGetOutputInfo@plt+0x7224>
   18c6c:	ldr	r1, [pc, #184]	; 18d2c <XRRGetOutputInfo@plt+0x72cc>
   18c70:	ldr	r2, [pc, #136]	; 18d00 <XRRGetOutputInfo@plt+0x72a0>
   18c74:	ldr	r1, [r1, #8]
   18c78:	add	r2, r2, r1, lsl #2
   18c7c:	ldr	r2, [r2, #148]	; 0x94
   18c80:	str	r2, [fp, #220]	; 0xdc
   18c84:	tst	r3, #4096	; 0x1000
   18c88:	beq	19224 <XRRGetOutputInfo@plt+0x77c4>
   18c8c:	ldr	r3, [pc, #148]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   18c90:	add	r9, r9, #1
   18c94:	ldr	r1, [r3, #36]	; 0x24
   18c98:	ldr	r3, [r1, #16]
   18c9c:	cmp	r3, r9
   18ca0:	bgt	18900 <XRRGetOutputInfo@plt+0x6ea0>
   18ca4:	ldr	r3, [pc, #124]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   18ca8:	ldr	r4, [r3]
   18cac:	cmp	r4, #0
   18cb0:	beq	18d74 <XRRGetOutputInfo@plt+0x7314>
   18cb4:	ldr	r6, [pc, #72]	; 18d04 <XRRGetOutputInfo@plt+0x72a4>
   18cb8:	ldr	r5, [pc, #72]	; 18d08 <XRRGetOutputInfo@plt+0x72a8>
   18cbc:	b	18d48 <XRRGetOutputInfo@plt+0x72e8>
	...
   18ccc:	rscsmi	r0, r0, r0
   18cd0:	andeq	r0, r0, r0
   18cd4:	svccc	0x00f00000	; IMB
   18cd8:	andeq	r0, r0, r0
   18cdc:	rscmi	pc, pc, r0, ror #31
   18ce0:	bl	72999c <__bss_end__@@Base+0x6fd74c>
   18ce4:	svccc	0x001a36e2
   18ce8:	strdeq	sl, [r1], -r0
   18cec:	ldrdeq	sl, [r1], -ip
   18cf0:	andeq	sl, r1, r4, lsl r1
   18cf4:	strdeq	sl, [r1], -r8
   18cf8:	andeq	sl, r1, ip, lsl r1
   18cfc:	andeq	sl, r1, r4, lsr r2
   18d00:	andeq	r9, r1, r8, asr #26
   18d04:	muleq	r2, r8, r1
   18d08:	ldrdeq	sl, [r1], -r0
   18d0c:	andeq	fp, r2, r8, ror #29
   18d10:	andeq	sl, r1, r0, ror r1
   18d14:	strdeq	sl, [r1], -r8
   18d18:	andeq	sl, r1, r0, asr #2
   18d1c:	andeq	sl, r1, r4, lsr r1
   18d20:	andeq	sl, r1, r4, asr #1
   18d24:	andeq	sl, r1, r0, lsr #3
   18d28:	andeq	ip, r2, r0, lsr #3
   18d2c:	andeq	ip, r2, r4, lsl #3
   18d30:	andeq	sl, r1, r8, ror #4
   18d34:			; <UNDEFINED> instruction: 0x0001a2b8
   18d38:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   18d3c:	ldr	r4, [r4]
   18d40:	cmp	r4, #0
   18d44:	beq	18d74 <XRRGetOutputInfo@plt+0x7314>
   18d48:	ldr	r3, [r4, #252]	; 0xfc
   18d4c:	cmp	r3, #0
   18d50:	bne	18d3c <XRRGetOutputInfo@plt+0x72dc>
   18d54:	ldr	r3, [r4, #16]
   18d58:	mov	r2, r5
   18d5c:	mov	r1, #1
   18d60:	ldr	r0, [r6]
   18d64:	bl	1194c <__fprintf_chk@plt>
   18d68:	ldr	r4, [r4]
   18d6c:	cmp	r4, #0
   18d70:	bne	18d48 <XRRGetOutputInfo@plt+0x72e8>
   18d74:	ldr	r3, [pc, #-112]	; 18d0c <XRRGetOutputInfo@plt+0x72ac>
   18d78:	ldr	r2, [sp, #92]	; 0x5c
   18d7c:	ldr	r3, [r3]
   18d80:	cmp	r2, r3
   18d84:	bne	1982c <XRRGetOutputInfo@plt+0x7dcc>
   18d88:	add	sp, sp, #100	; 0x64
   18d8c:	vpop	{d8-d15}
   18d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d94:	ldr	r7, [fp, #4]
   18d98:	ldr	r4, [fp, #32]
   18d9c:	ands	r3, r7, #2
   18da0:	bne	194b4 <XRRGetOutputInfo@plt+0x7a54>
   18da4:	ldr	r2, [fp, #56]	; 0x38
   18da8:	orr	r4, r4, #2
   18dac:	orr	r7, r7, #3
   18db0:	orr	r2, r2, #2
   18db4:	str	r4, [fp, #32]
   18db8:	str	r7, [fp, #4]
   18dbc:	str	r3, [fp, #64]	; 0x40
   18dc0:	str	r3, [fp, #40]	; 0x28
   18dc4:	str	r2, [fp, #56]	; 0x38
   18dc8:	ldrh	r3, [r5, #24]
   18dcc:	ldr	r2, [r8, #20]
   18dd0:	cmp	r3, #1
   18dd4:	ldr	r6, [r2, r6]
   18dd8:	beq	189a0 <XRRGetOutputInfo@plt+0x6f40>
   18ddc:	ldr	r3, [r5, #44]	; 0x2c
   18de0:	cmp	r3, #0
   18de4:	bne	189a0 <XRRGetOutputInfo@plt+0x6f40>
   18de8:	ldr	r1, [r5, #8]
   18dec:	ldr	r0, [pc, #-228]	; 18d10 <XRRGetOutputInfo@plt+0x72b0>
   18df0:	bl	175cc <XRRGetOutputInfo@plt+0x5b6c>
   18df4:	b	189a0 <XRRGetOutputInfo@plt+0x6f40>
   18df8:	ldr	r2, [sp, #24]
   18dfc:	bics	r3, r2, r3
   18e00:	beq	18c18 <XRRGetOutputInfo@plt+0x71b8>
   18e04:	ldr	r1, [fp, #16]
   18e08:	b	18bc0 <XRRGetOutputInfo@plt+0x7160>
   18e0c:	cmp	r4, #2
   18e10:	ldr	r5, [fp, #28]
   18e14:	beq	192f8 <XRRGetOutputInfo@plt+0x7898>
   18e18:	ldr	r3, [r5, #44]	; 0x2c
   18e1c:	cmp	r4, #8
   18e20:	str	r3, [sp, #16]
   18e24:	beq	19384 <XRRGetOutputInfo@plt+0x7924>
   18e28:	ldr	r3, [sp, #16]
   18e2c:	cmp	r3, #0
   18e30:	ble	1931c <XRRGetOutputInfo@plt+0x78bc>
   18e34:	ldr	r7, [r5, #52]	; 0x34
   18e38:	mov	r8, #0
   18e3c:	add	r3, sp, #76	; 0x4c
   18e40:	and	r2, r4, #2
   18e44:	str	r9, [sp, #24]
   18e48:	str	r5, [sp, #32]
   18e4c:	vmov.f64	d8, d9
   18e50:	sub	r7, r7, #4
   18e54:	mov	r6, r8
   18e58:	and	sl, r4, #1
   18e5c:	str	r4, [sp, #40]	; 0x28
   18e60:	mov	r5, r3
   18e64:	mov	r9, r2
   18e68:	b	18ea4 <XRRGetOutputInfo@plt+0x7444>
   18e6c:	mov	r0, r4
   18e70:	bl	171d0 <XRRGetOutputInfo@plt+0x5770>
   18e74:	cmp	r8, #0
   18e78:	vsub.f64	d0, d0, d4
   18e7c:	vabs.f64	d0, d0
   18e80:	beq	18f20 <XRRGetOutputInfo@plt+0x74c0>
   18e84:	vcmpe.f64	d0, d8
   18e88:	vmrs	APSR_nzcv, fpscr
   18e8c:	vmovmi.f64	d8, d0
   18e90:	movmi	r8, r4
   18e94:	ldr	r3, [sp, #16]
   18e98:	add	r6, r6, #1
   18e9c:	cmp	r6, r3
   18ea0:	beq	18f38 <XRRGetOutputInfo@plt+0x74d8>
   18ea4:	ldr	r3, [r7, #4]!
   18ea8:	mov	r0, r5
   18eac:	str	r3, [sp, #84]	; 0x54
   18eb0:	mov	r3, #2
   18eb4:	str	r3, [sp, #76]	; 0x4c
   18eb8:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   18ebc:	subs	r4, r0, #0
   18ec0:	beq	18e94 <XRRGetOutputInfo@plt+0x7434>
   18ec4:	cmp	r9, #0
   18ec8:	beq	18edc <XRRGetOutputInfo@plt+0x747c>
   18ecc:	ldr	r1, [fp, #64]	; 0x40
   18ed0:	ldr	r2, [r4]
   18ed4:	cmp	r1, r2
   18ed8:	beq	194d0 <XRRGetOutputInfo@plt+0x7a70>
   18edc:	cmp	sl, #0
   18ee0:	beq	18e94 <XRRGetOutputInfo@plt+0x7434>
   18ee4:	ldr	r1, [r4, #44]	; 0x2c
   18ee8:	ldr	r0, [fp, #60]	; 0x3c
   18eec:	bl	11658 <strcmp@plt>
   18ef0:	cmp	r0, #0
   18ef4:	bne	18e94 <XRRGetOutputInfo@plt+0x7434>
   18ef8:	vldr	d4, [fp, #72]	; 0x48
   18efc:	vcmp.f64	d4, #0.0
   18f00:	vmrs	APSR_nzcv, fpscr
   18f04:	bne	18e6c <XRRGetOutputInfo@plt+0x740c>
   18f08:	ldr	r2, [r4, #52]	; 0x34
   18f0c:	tst	r2, #32
   18f10:	vmoveq.f64	d0, d9
   18f14:	bne	18e94 <XRRGetOutputInfo@plt+0x7434>
   18f18:	cmp	r8, #0
   18f1c:	bne	18e84 <XRRGetOutputInfo@plt+0x7424>
   18f20:	ldr	r3, [sp, #16]
   18f24:	add	r6, r6, #1
   18f28:	cmp	r6, r3
   18f2c:	vmov.f64	d8, d0
   18f30:	mov	r8, r4
   18f34:	bne	18ea4 <XRRGetOutputInfo@plt+0x7444>
   18f38:	cmp	r8, #0
   18f3c:	ldr	r9, [sp, #24]
   18f40:	ldr	r5, [sp, #32]
   18f44:	ldr	r4, [sp, #40]	; 0x28
   18f48:	str	r8, [fp, #80]	; 0x50
   18f4c:	bne	18f68 <XRRGetOutputInfo@plt+0x7508>
   18f50:	tst	r4, #8
   18f54:	bne	19798 <XRRGetOutputInfo@plt+0x7d38>
   18f58:	tst	r4, #1
   18f5c:	bne	19830 <XRRGetOutputInfo@plt+0x7dd0>
   18f60:	ands	r8, r4, #2
   18f64:	bne	1983c <XRRGetOutputInfo@plt+0x7ddc>
   18f68:	ldr	r0, [r5, #44]	; 0x2c
   18f6c:	cmp	r0, #0
   18f70:	ble	18fa8 <XRRGetOutputInfo@plt+0x7548>
   18f74:	ldr	r3, [r5, #52]	; 0x34
   18f78:	ldr	ip, [r8]
   18f7c:	ldr	r2, [r3]
   18f80:	cmp	r2, ip
   18f84:	movne	r2, #0
   18f88:	bne	18f9c <XRRGetOutputInfo@plt+0x753c>
   18f8c:	b	19274 <XRRGetOutputInfo@plt+0x7814>
   18f90:	ldr	r1, [r3, #4]!
   18f94:	cmp	r1, ip
   18f98:	beq	19274 <XRRGetOutputInfo@plt+0x7814>
   18f9c:	add	r2, r2, #1
   18fa0:	cmp	r0, r2
   18fa4:	bne	18f90 <XRRGetOutputInfo@plt+0x7530>
   18fa8:	ldr	r2, [r8, #44]	; 0x2c
   18fac:	ldr	r1, [fp, #16]
   18fb0:	ldr	r0, [pc, #-676]	; 18d14 <XRRGetOutputInfo@plt+0x72b4>
   18fb4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   18fb8:	cmp	r2, #0
   18fbc:	ldrh	r6, [fp, #116]	; 0x74
   18fc0:	bne	18b24 <XRRGetOutputInfo@plt+0x70c4>
   18fc4:	bic	r6, r6, #15
   18fc8:	ldr	r3, [fp, #48]	; 0x30
   18fcc:	uxth	r6, r6
   18fd0:	cmp	r3, #0
   18fd4:	strh	r6, [fp, #116]	; 0x74
   18fd8:	bne	18b10 <XRRGetOutputInfo@plt+0x70b0>
   18fdc:	mov	r3, #1
   18fe0:	mov	r6, r3
   18fe4:	strh	r3, [fp, #116]	; 0x74
   18fe8:	b	18b24 <XRRGetOutputInfo@plt+0x70c4>
   18fec:	ldr	r3, [fp, #4]
   18ff0:	tst	r3, #512	; 0x200
   18ff4:	addeq	r0, fp, #184	; 0xb8
   18ff8:	beq	19378 <XRRGetOutputInfo@plt+0x7918>
   18ffc:	ldr	r2, [fp, #176]	; 0xb0
   19000:	cmp	r2, #0
   19004:	ble	18c64 <XRRGetOutputInfo@plt+0x7204>
   19008:	ldr	r1, [fp, #80]	; 0x50
   1900c:	cmp	r1, #0
   19010:	beq	18c64 <XRRGetOutputInfo@plt+0x7204>
   19014:	vldr	s8, [r1, #4]
   19018:	vldr	s12, [r1, #8]
   1901c:	vmov	s15, r2
   19020:	vldr	s11, [fp, #180]	; 0xb4
   19024:	vcvt.f64.u32	d4, s8
   19028:	vcvt.f64.u32	d6, s12
   1902c:	vcvt.f64.s32	d7, s15
   19030:	vcvt.f64.s32	d5, s11
   19034:	ldr	r3, [pc, #-788]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   19038:	ldr	r3, [r3, #28]
   1903c:	cmp	r3, #0
   19040:	vdiv.f64	d14, d7, d4
   19044:	vdiv.f64	d8, d5, d6
   19048:	bne	194e4 <XRRGetOutputInfo@plt+0x7a84>
   1904c:	add	r0, fp, #184	; 0xb8
   19050:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   19054:	vmul.f64	d6, d14, d11
   19058:	mov	r1, #0
   1905c:	vmul.f64	d7, d8, d11
   19060:	str	r1, [fp, #224]	; 0xe0
   19064:	vcmp.f64	d14, d10
   19068:	str	r1, [fp, #228]	; 0xe4
   1906c:	ldr	r0, [pc, #-860]	; 18d18 <XRRGetOutputInfo@plt+0x72b8>
   19070:	ldr	r2, [pc, #-860]	; 18d1c <XRRGetOutputInfo@plt+0x72bc>
   19074:	mov	ip, #65536	; 0x10000
   19078:	vcvt.s32.f64	s12, d6
   1907c:	ldr	r3, [fp, #4]
   19080:	vcvt.s32.f64	s14, d7
   19084:	str	ip, [fp, #216]	; 0xd8
   19088:	vstr	s12, [fp, #184]	; 0xb8
   1908c:	vstr	s14, [fp, #200]	; 0xc8
   19090:	vmrs	APSR_nzcv, fpscr
   19094:	vcmp.f64	d8, d10
   19098:	movne	r1, #1
   1909c:	vmrs	APSR_nzcv, fpscr
   190a0:	movne	r1, #1
   190a4:	cmp	r1, #0
   190a8:	moveq	r2, r0
   190ac:	str	r2, [fp, #220]	; 0xdc
   190b0:	b	18c64 <XRRGetOutputInfo@plt+0x7204>
   190b4:	ldr	r3, [fp, #48]	; 0x30
   190b8:	cmp	r3, #0
   190bc:	beq	1923c <XRRGetOutputInfo@plt+0x77dc>
   190c0:	ldr	r3, [r3, #20]
   190c4:	b	18a8c <XRRGetOutputInfo@plt+0x702c>
   190c8:	ldr	r3, [fp, #40]	; 0x28
   190cc:	cmp	r3, #0
   190d0:	streq	r3, [fp, #48]	; 0x30
   190d4:	beq	18a48 <XRRGetOutputInfo@plt+0x6fe8>
   190d8:	add	r0, fp, #32
   190dc:	bl	172c8 <XRRGetOutputInfo@plt+0x5868>
   190e0:	cmp	r0, #0
   190e4:	str	r0, [fp, #48]	; 0x30
   190e8:	bne	18a04 <XRRGetOutputInfo@plt+0x6fa4>
   190ec:	ldr	r1, [fp, #40]	; 0x28
   190f0:	ldr	r0, [pc, #-984]	; 18d20 <XRRGetOutputInfo@plt+0x72c0>
   190f4:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   190f8:	ldr	r3, [fp, #48]	; 0x30
   190fc:	cmp	r3, #0
   19100:	beq	18fec <XRRGetOutputInfo@plt+0x758c>
   19104:	ldr	r1, [r3, #8]
   19108:	ldr	r3, [pc, #-1000]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   1910c:	ldr	r0, [r3, #24]
   19110:	bl	116b8 <XRRGetCrtcGammaSize@plt>
   19114:	subs	r7, r0, #0
   19118:	beq	194c0 <XRRGetOutputInfo@plt+0x7a60>
   1911c:	ldr	r3, [fp, #48]	; 0x30
   19120:	ldr	r2, [pc, #-1024]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   19124:	ldr	r1, [r3, #8]
   19128:	ldr	r0, [r2, #24]
   1912c:	bl	11a0c <XRRGetCrtcGamma@plt>
   19130:	subs	r8, r0, #0
   19134:	beq	197a0 <XRRGetOutputInfo@plt+0x7d40>
   19138:	ldmib	r8, {r0, r3, lr}
   1913c:	sub	r4, r7, #1
   19140:	cmp	r4, #0
   19144:	str	r3, [sp, #16]
   19148:	ble	197b0 <XRRGetOutputInfo@plt+0x7d50>
   1914c:	lsl	sl, r4, #1
   19150:	ldr	r3, [pc, #-1056]	; 18d38 <XRRGetOutputInfo@plt+0x72d8>
   19154:	ldrh	r1, [r0, sl]
   19158:	cmp	r1, r3
   1915c:	bne	197d0 <XRRGetOutputInfo@plt+0x7d70>
   19160:	sub	r3, r7, #-2147483647	; 0x80000001
   19164:	mov	r5, r4
   19168:	add	r3, r0, r3, lsl #1
   1916c:	b	1917c <XRRGetOutputInfo@plt+0x771c>
   19170:	ldrh	r2, [r3, #-2]!
   19174:	cmp	r2, r1
   19178:	bne	19184 <XRRGetOutputInfo@plt+0x7724>
   1917c:	subs	r5, r5, #1
   19180:	bne	19170 <XRRGetOutputInfo@plt+0x7710>
   19184:	ldr	r2, [sp, #16]
   19188:	ldr	r3, [pc, #-1112]	; 18d38 <XRRGetOutputInfo@plt+0x72d8>
   1918c:	ldrh	ip, [r2, sl]
   19190:	cmp	ip, r3
   19194:	bne	19520 <XRRGetOutputInfo@plt+0x7ac0>
   19198:	sub	r3, r7, #-2147483647	; 0x80000001
   1919c:	mov	r6, r4
   191a0:	add	r2, r2, r3, lsl #1
   191a4:	b	191b4 <XRRGetOutputInfo@plt+0x7754>
   191a8:	ldrh	r1, [r2, #-2]!
   191ac:	cmp	r1, ip
   191b0:	bne	19524 <XRRGetOutputInfo@plt+0x7ac4>
   191b4:	subs	r6, r6, #1
   191b8:	bne	191a8 <XRRGetOutputInfo@plt+0x7748>
   191bc:	ldrh	r1, [lr, sl]
   191c0:	ldr	r2, [pc, #-1168]	; 18d38 <XRRGetOutputInfo@plt+0x72d8>
   191c4:	cmp	r1, r2
   191c8:	bne	19760 <XRRGetOutputInfo@plt+0x7d00>
   191cc:	add	r3, lr, r3, lsl #1
   191d0:	ldr	r1, [pc, #-1184]	; 18d38 <XRRGetOutputInfo@plt+0x72d8>
   191d4:	b	191e4 <XRRGetOutputInfo@plt+0x7784>
   191d8:	ldrh	r2, [r3, #-2]!
   191dc:	cmp	r2, r1
   191e0:	bne	19538 <XRRGetOutputInfo@plt+0x7ad8>
   191e4:	subs	r4, r4, #1
   191e8:	bne	191d8 <XRRGetOutputInfo@plt+0x7778>
   191ec:	cmp	r5, r6
   191f0:	movlt	r3, r6
   191f4:	bge	19728 <XRRGetOutputInfo@plt+0x7cc8>
   191f8:	ldr	r0, [sp, #16]
   191fc:	asr	r1, r3, #1
   19200:	add	r2, r1, #1
   19204:	add	r1, r0, r1, lsl #1
   19208:	vmov	s10, r2
   1920c:	add	r2, r3, #1
   19210:	lsl	r3, r3, #1
   19214:	vmov	s15, r2
   19218:	vcvt.f64.s32	d5, s10
   1921c:	vcvt.f64.s32	d6, s15
   19220:	b	19574 <XRRGetOutputInfo@plt+0x7b14>
   19224:	ldr	r3, [pc, #-1284]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   19228:	ldr	r0, [r3, #68]	; 0x44
   1922c:	cmp	r0, #0
   19230:	bne	19500 <XRRGetOutputInfo@plt+0x7aa0>
   19234:	str	r0, [fp, #248]	; 0xf8
   19238:	b	18c8c <XRRGetOutputInfo@plt+0x722c>
   1923c:	str	r4, [fp, #56]	; 0x38
   19240:	str	r3, [fp, #64]	; 0x40
   19244:	mov	r3, #0
   19248:	str	r3, [fp, #80]	; 0x50
   1924c:	ldr	r7, [fp, #4]
   19250:	ldr	r5, [fp, #28]
   19254:	b	18ac8 <XRRGetOutputInfo@plt+0x7068>
   19258:	tst	r4, #2
   1925c:	bne	190ec <XRRGetOutputInfo@plt+0x768c>
   19260:	tst	r4, #4
   19264:	beq	18a04 <XRRGetOutputInfo@plt+0x6fa4>
   19268:	ldr	r1, [fp, #44]	; 0x2c
   1926c:	ldr	r0, [pc, #-1360]	; 18d24 <XRRGetOutputInfo@plt+0x72c4>
   19270:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   19274:	ldr	r7, [fp, #4]
   19278:	b	18ac8 <XRRGetOutputInfo@plt+0x7068>
   1927c:	bl	176c0 <XRRGetOutputInfo@plt+0x5c60>
   19280:	ldr	r3, [sp, #60]	; 0x3c
   19284:	ldr	r1, [pc, #-1380]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   19288:	tst	r3, #2
   1928c:	ldrne	r2, [sp, #68]	; 0x44
   19290:	ldr	r1, [r1, #72]	; 0x48
   19294:	strne	r2, [r0, #20]
   19298:	tst	r3, #1
   1929c:	mov	fp, r0
   192a0:	ldrne	r2, [sp, #64]	; 0x40
   192a4:	strne	r2, [r0, #16]
   192a8:	tst	r3, #4
   192ac:	ldrne	r2, [sp, #72]	; 0x48
   192b0:	strne	r2, [r0, #24]
   192b4:	ldr	r2, [r0, #12]
   192b8:	cmp	r1, #0
   192bc:	orr	r3, r2, r3
   192c0:	str	r3, [r0, #12]
   192c4:	beq	1895c <XRRGetOutputInfo@plt+0x6efc>
   192c8:	ldrh	r3, [r5, #24]
   192cc:	cmp	r3, #0
   192d0:	beq	1976c <XRRGetOutputInfo@plt+0x7d0c>
   192d4:	cmp	r3, #1
   192d8:	bne	1895c <XRRGetOutputInfo@plt+0x6efc>
   192dc:	ldr	r2, [r5, #4]
   192e0:	cmp	r2, #0
   192e4:	strne	r3, [r0, #172]	; 0xac
   192e8:	ldrne	r2, [r0, #4]
   192ec:	orrne	r3, r2, #64	; 0x40
   192f0:	strne	r3, [r0, #4]
   192f4:	b	1895c <XRRGetOutputInfo@plt+0x6efc>
   192f8:	ldr	r3, [fp, #64]	; 0x40
   192fc:	cmp	r3, #0
   19300:	streq	r3, [fp, #80]	; 0x50
   19304:	beq	18ac8 <XRRGetOutputInfo@plt+0x7068>
   19308:	ldr	r3, [r5, #44]	; 0x2c
   1930c:	str	r3, [sp, #16]
   19310:	ldr	r3, [sp, #16]
   19314:	cmp	r3, #0
   19318:	bgt	18e34 <XRRGetOutputInfo@plt+0x73d4>
   1931c:	mov	r3, #0
   19320:	str	r3, [fp, #80]	; 0x50
   19324:	b	18f50 <XRRGetOutputInfo@plt+0x74f0>
   19328:	ldr	r2, [fp, #4]
   1932c:	tst	r2, #2
   19330:	bne	18dcc <XRRGetOutputInfo@plt+0x736c>
   19334:	ldr	r3, [fp, #56]	; 0x38
   19338:	orr	r2, r2, #2
   1933c:	orr	r3, r3, #8
   19340:	str	r2, [fp, #4]
   19344:	str	r3, [fp, #56]	; 0x38
   19348:	ldrh	r3, [r5, #24]
   1934c:	ldr	r2, [r8, #20]
   19350:	cmp	r3, #1
   19354:	ldr	r6, [r2, r6]
   19358:	bne	18ddc <XRRGetOutputInfo@plt+0x737c>
   1935c:	b	189a0 <XRRGetOutputInfo@plt+0x6f40>
   19360:	cmp	r2, #0
   19364:	str	r3, [fp, #108]	; 0x6c
   19368:	str	r3, [fp, #112]	; 0x70
   1936c:	beq	18fdc <XRRGetOutputInfo@plt+0x757c>
   19370:	ldrh	r6, [fp, #116]	; 0x74
   19374:	b	18b24 <XRRGetOutputInfo@plt+0x70c4>
   19378:	bl	17364 <XRRGetOutputInfo@plt+0x5904>
   1937c:	ldr	r3, [fp, #4]
   19380:	b	18c64 <XRRGetOutputInfo@plt+0x7204>
   19384:	cmp	r3, #0
   19388:	ble	19790 <XRRGetOutputInfo@plt+0x7d30>
   1938c:	ldr	r3, [r5, #52]	; 0x34
   19390:	mov	r7, #0
   19394:	ldr	r2, [r5, #48]	; 0x30
   19398:	sub	sl, r3, #4
   1939c:	str	r5, [sp, #32]
   193a0:	add	r3, sp, #76	; 0x4c
   193a4:	ldr	r5, [sp, #16]
   193a8:	str	fp, [sp, #48]	; 0x30
   193ac:	mov	r8, r7
   193b0:	mov	r6, r7
   193b4:	mov	fp, r3
   193b8:	str	r2, [sp, #24]
   193bc:	str	r9, [sp, #52]	; 0x34
   193c0:	ldr	r3, [sl, #4]!
   193c4:	mov	r0, fp
   193c8:	str	r3, [sp, #84]	; 0x54
   193cc:	mov	r3, #2
   193d0:	str	r3, [sp, #76]	; 0x4c
   193d4:	bl	184f4 <XRRGetOutputInfo@plt+0x6a94>
   193d8:	ldr	r3, [sp, #24]
   193dc:	cmp	r6, r3
   193e0:	movlt	r4, #0
   193e4:	mov	r9, r0
   193e8:	blt	1946c <XRRGetOutputInfo@plt+0x7a0c>
   193ec:	ldr	r3, [pc, #-1740]	; 18d28 <XRRGetOutputInfo@plt+0x72c8>
   193f0:	ldr	r2, [sp, #32]
   193f4:	ldr	r1, [r3, #24]
   193f8:	ldr	r3, [pc, #-1748]	; 18d2c <XRRGetOutputInfo@plt+0x72cc>
   193fc:	ldr	r2, [r2, #20]
   19400:	ldr	r1, [r1, #140]	; 0x8c
   19404:	ldr	r3, [r3, #4]
   19408:	cmp	r2, #0
   1940c:	str	r2, [sp, #16]
   19410:	add	r3, r3, r3, lsl #2
   19414:	add	r1, r1, r3, lsl #4
   19418:	ldr	r3, [r0, #8]
   1941c:	ldr	r4, [r1, #16]
   19420:	subeq	r4, r4, r3
   19424:	beq	19464 <XRRGetOutputInfo@plt+0x7a04>
   19428:	rsb	r0, r4, r4, lsl #5
   1942c:	ldr	r1, [r1, #24]
   19430:	add	r0, r4, r0, lsl #2
   19434:	str	r3, [sp, #40]	; 0x28
   19438:	lsl	r0, r0, #3
   1943c:	bl	19a88 <XRRGetOutputInfo@plt+0x8028>
   19440:	ldr	r3, [sp, #40]	; 0x28
   19444:	ldr	r2, [sp, #16]
   19448:	mov	r1, r2
   1944c:	mov	r4, r0
   19450:	rsb	r0, r3, r3, lsl #5
   19454:	add	r0, r3, r0, lsl #2
   19458:	lsl	r0, r0, #3
   1945c:	bl	1987c <XRRGetOutputInfo@plt+0x7e1c>
   19460:	sub	r4, r4, r0
   19464:	cmp	r4, #0
   19468:	rsblt	r4, r4, #0
   1946c:	cmp	r4, r7
   19470:	movge	r3, #0
   19474:	movlt	r3, #1
   19478:	cmp	r8, #0
   1947c:	moveq	r3, #1
   19480:	cmp	r3, #0
   19484:	add	r6, r6, #1
   19488:	movne	r7, r4
   1948c:	movne	r8, r9
   19490:	cmp	r6, r5
   19494:	bne	193c0 <XRRGetOutputInfo@plt+0x7960>
   19498:	ldr	fp, [sp, #48]	; 0x30
   1949c:	cmp	r8, #0
   194a0:	ldr	r9, [sp, #52]	; 0x34
   194a4:	ldr	r5, [sp, #32]
   194a8:	str	r8, [fp, #80]	; 0x50
   194ac:	bne	18f68 <XRRGetOutputInfo@plt+0x7508>
   194b0:	b	19798 <XRRGetOutputInfo@plt+0x7d38>
   194b4:	ldr	r3, [r8, #20]
   194b8:	ldr	r6, [r3, r6]
   194bc:	b	189a8 <XRRGetOutputInfo@plt+0x6f48>
   194c0:	ldr	r1, [fp, #16]
   194c4:	ldr	r0, [pc, #-1948]	; 18d30 <XRRGetOutputInfo@plt+0x72d0>
   194c8:	bl	175cc <XRRGetOutputInfo@plt+0x5b6c>
   194cc:	b	18c2c <XRRGetOutputInfo@plt+0x71cc>
   194d0:	ldr	r9, [sp, #24]
   194d4:	ldr	r5, [sp, #32]
   194d8:	str	r4, [fp, #80]	; 0x50
   194dc:	mov	r8, r4
   194e0:	b	18f68 <XRRGetOutputInfo@plt+0x7508>
   194e4:	ldr	r2, [fp, #16]
   194e8:	ldr	r1, [pc, #-1980]	; 18d34 <XRRGetOutputInfo@plt+0x72d4>
   194ec:	vstr	d8, [sp, #8]
   194f0:	vstr	d14, [sp]
   194f4:	mov	r0, #1
   194f8:	bl	11910 <__printf_chk@plt>
   194fc:	b	1904c <XRRGetOutputInfo@plt+0x75ec>
   19500:	ldr	r1, [r3, #40]	; 0x28
   19504:	ldr	r0, [r3, #24]
   19508:	bl	117fc <XRRGetOutputPrimary@plt>
   1950c:	ldr	r3, [fp, #20]
   19510:	sub	r0, r3, r0
   19514:	clz	r0, r0
   19518:	lsr	r0, r0, #5
   1951c:	b	19234 <XRRGetOutputInfo@plt+0x77d4>
   19520:	mov	r6, r4
   19524:	ldrh	r2, [lr, sl]
   19528:	ldr	r3, [pc, #-2040]	; 18d38 <XRRGetOutputInfo@plt+0x72d8>
   1952c:	cmp	r2, r3
   19530:	subeq	r3, r7, #-2147483647	; 0x80000001
   19534:	beq	191cc <XRRGetOutputInfo@plt+0x776c>
   19538:	cmp	r5, r6
   1953c:	movlt	r3, r6
   19540:	bge	19760 <XRRGetOutputInfo@plt+0x7d00>
   19544:	cmp	r3, r4
   19548:	bge	191f8 <XRRGetOutputInfo@plt+0x7798>
   1954c:	asr	r3, r4, #1
   19550:	add	r2, r3, #1
   19554:	add	r1, lr, r3, lsl #1
   19558:	vmov	s10, r2
   1955c:	add	r2, r4, #1
   19560:	mov	r0, lr
   19564:	vmov	s15, r2
   19568:	vcvt.f64.s32	d5, s10
   1956c:	lsl	r3, r4, #1
   19570:	vcvt.f64.s32	d6, s15
   19574:	ldrh	r3, [r0, r3]
   19578:	vmov	s14, r3
   1957c:	vcvt.f64.u32	d7, s14
   19580:	vdiv.f64	d0, d7, d12
   19584:	vcmpe.f64	d0, d13
   19588:	vmrs	APSR_nzcv, fpscr
   1958c:	bpl	195b4 <XRRGetOutputInfo@plt+0x7b54>
   19590:	mov	r3, #1065353216	; 0x3f800000
   19594:	mov	r2, #0
   19598:	str	r2, [fp, #244]	; 0xf4
   1959c:	str	r3, [fp, #232]	; 0xe8
   195a0:	str	r3, [fp, #236]	; 0xec
   195a4:	str	r3, [fp, #240]	; 0xf0
   195a8:	mov	r0, r8
   195ac:	bl	119d0 <XRRFreeGamma@plt>
   195b0:	b	18c2c <XRRGetOutputInfo@plt+0x71cc>
   195b4:	vmov	s15, r7
   195b8:	cmp	r7, r2
   195bc:	vcvt.f64.s32	d8, s15
   195c0:	beq	1962c <XRRGetOutputInfo@plt+0x7bcc>
   195c4:	vdiv.f64	d14, d5, d8
   195c8:	ldrh	r7, [r1]
   195cc:	vdiv.f64	d15, d6, d8
   195d0:	bl	1164c <log@plt>
   195d4:	vstr	d0, [sp, #40]	; 0x28
   195d8:	vmov.f64	d0, d14
   195dc:	bl	1164c <log@plt>
   195e0:	vmov	s15, r7
   195e4:	vstr	d0, [sp, #32]
   195e8:	vcvt.f64.u32	d0, s15
   195ec:	vdiv.f64	d0, d0, d12
   195f0:	bl	1164c <log@plt>
   195f4:	vstr	d0, [sp, #24]
   195f8:	vmov.f64	d0, d15
   195fc:	bl	1164c <log@plt>
   19600:	vstr	d0, [sp, #16]
   19604:	vdiv.f64	d0, d14, d15
   19608:	bl	1164c <log@plt>
   1960c:	vldr	d6, [sp, #16]
   19610:	vldr	d7, [sp, #24]
   19614:	vldr	d4, [sp, #32]
   19618:	vldr	d5, [sp, #40]	; 0x28
   1961c:	vmul.f64	d7, d7, d6
   19620:	vnmls.f64	d7, d5, d4
   19624:	vdiv.f64	d0, d7, d0
   19628:	bl	119dc <exp@plt>
   1962c:	vcvt.f32.f64	s0, d0
   19630:	asr	r5, r5, #1
   19634:	asr	r6, r6, #1
   19638:	lsl	r3, r5, #1
   1963c:	add	r5, r5, #1
   19640:	asr	r4, r4, #1
   19644:	vstr	s0, [fp, #244]	; 0xf4
   19648:	vldr	s14, [fp, #244]	; 0xf4
   1964c:	ldr	r2, [r8, #4]
   19650:	vcvt.f64.f32	d7, s14
   19654:	ldrh	r3, [r2, r3]
   19658:	vmov	s12, r3
   1965c:	vcvt.f64.u32	d6, s12
   19660:	vdiv.f64	d0, d6, d7
   19664:	vdiv.f64	d0, d0, d12
   19668:	bl	1164c <log@plt>
   1966c:	vmov	s15, r5
   19670:	vmov.f64	d14, d0
   19674:	vcvt.f64.s32	d0, s15
   19678:	vdiv.f64	d0, d0, d8
   1967c:	bl	1164c <log@plt>
   19680:	lsl	r3, r6, #1
   19684:	vldr	s14, [fp, #244]	; 0xf4
   19688:	vcvt.f64.f32	d7, s14
   1968c:	vdiv.f64	d0, d14, d0
   19690:	vcvt.f32.f64	s0, d0
   19694:	vstr	s0, [fp, #232]	; 0xe8
   19698:	ldr	r2, [r8, #8]
   1969c:	ldrh	r3, [r2, r3]
   196a0:	vmov	s12, r3
   196a4:	vcvt.f64.u32	d6, s12
   196a8:	vdiv.f64	d0, d6, d7
   196ac:	vdiv.f64	d0, d0, d12
   196b0:	bl	1164c <log@plt>
   196b4:	add	r3, r6, #1
   196b8:	vmov.f64	d14, d0
   196bc:	vmov	s0, r3
   196c0:	vcvt.f64.s32	d0, s0
   196c4:	vdiv.f64	d0, d0, d8
   196c8:	bl	1164c <log@plt>
   196cc:	lsl	r3, r4, #1
   196d0:	vldr	s14, [fp, #244]	; 0xf4
   196d4:	vcvt.f64.f32	d7, s14
   196d8:	vdiv.f64	d0, d14, d0
   196dc:	vcvt.f32.f64	s0, d0
   196e0:	vstr	s0, [fp, #236]	; 0xec
   196e4:	ldr	r2, [r8, #12]
   196e8:	ldrh	r3, [r2, r3]
   196ec:	vmov	s12, r3
   196f0:	vcvt.f64.u32	d6, s12
   196f4:	vdiv.f64	d0, d6, d7
   196f8:	vdiv.f64	d0, d0, d12
   196fc:	bl	1164c <log@plt>
   19700:	add	r3, r4, #1
   19704:	vmov.f64	d14, d0
   19708:	vmov	s0, r3
   1970c:	vcvt.f64.s32	d0, s0
   19710:	vdiv.f64	d0, d0, d8
   19714:	bl	1164c <log@plt>
   19718:	vdiv.f64	d0, d14, d0
   1971c:	vcvt.f32.f64	s0, d0
   19720:	vstr	s0, [fp, #240]	; 0xf0
   19724:	b	195a8 <XRRGetOutputInfo@plt+0x7b48>
   19728:	cmp	r5, #0
   1972c:	movne	r3, r5
   19730:	bne	191fc <XRRGetOutputInfo@plt+0x779c>
   19734:	mov	r3, #2
   19738:	vldr	d6, [pc, #264]	; 19848 <XRRGetOutputInfo@plt+0x7de8>
   1973c:	vmov.f64	d5, d10
   19740:	mov	r2, r3
   19744:	mov	r1, r0
   19748:	mov	r4, r5
   1974c:	b	19574 <XRRGetOutputInfo@plt+0x7b14>
   19750:	ldr	r2, [r0, #8]
   19754:	ldr	r1, [fp, #16]
   19758:	ldr	r0, [pc, #240]	; 19850 <XRRGetOutputInfo@plt+0x7df0>
   1975c:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   19760:	str	r0, [sp, #16]
   19764:	mov	r3, r5
   19768:	b	19544 <XRRGetOutputInfo@plt+0x7ae4>
   1976c:	ldr	r3, [r5, #4]
   19770:	cmp	r3, #0
   19774:	bne	1895c <XRRGetOutputInfo@plt+0x6efc>
   19778:	ldr	r3, [r0, #4]
   1977c:	mov	r2, #1
   19780:	orr	r3, r3, #64	; 0x40
   19784:	str	r3, [r0, #4]
   19788:	str	r2, [r0, #172]	; 0xac
   1978c:	b	1895c <XRRGetOutputInfo@plt+0x6efc>
   19790:	mov	r3, #0
   19794:	str	r3, [fp, #80]	; 0x50
   19798:	ldr	r0, [pc, #180]	; 19854 <XRRGetOutputInfo@plt+0x7df4>
   1979c:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   197a0:	ldr	r1, [fp, #16]
   197a4:	ldr	r0, [pc, #172]	; 19858 <XRRGetOutputInfo@plt+0x7df8>
   197a8:	bl	175cc <XRRGetOutputInfo@plt+0x5b6c>
   197ac:	b	18c2c <XRRGetOutputInfo@plt+0x71cc>
   197b0:	mov	r3, #2
   197b4:	mov	r4, r5
   197b8:	mov	r6, r5
   197bc:	mov	r2, r3
   197c0:	mov	r1, r0
   197c4:	vldr	d6, [pc, #124]	; 19848 <XRRGetOutputInfo@plt+0x7de8>
   197c8:	vmov.f64	d5, d10
   197cc:	b	19574 <XRRGetOutputInfo@plt+0x7b14>
   197d0:	mov	r5, r4
   197d4:	b	19184 <XRRGetOutputInfo@plt+0x7724>
   197d8:	ldr	ip, [sp, #24]
   197dc:	ldr	r0, [pc, #120]	; 1985c <XRRGetOutputInfo@plt+0x7dfc>
   197e0:	cmp	ip, #0
   197e4:	ldr	r3, [pc, #116]	; 19860 <XRRGetOutputInfo@plt+0x7e00>
   197e8:	movne	r3, r0
   197ec:	b	18c10 <XRRGetOutputInfo@plt+0x71b0>
   197f0:	ldr	r3, [r3, #36]	; 0x24
   197f4:	ldr	r0, [pc, #104]	; 19864 <XRRGetOutputInfo@plt+0x7e04>
   197f8:	ldr	r3, [r3, #20]
   197fc:	ldr	r1, [r3, r6]
   19800:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   19804:	ldr	r2, [fp, #16]
   19808:	mov	r1, r5
   1980c:	ldr	r0, [pc, #84]	; 19868 <XRRGetOutputInfo@plt+0x7e08>
   19810:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   19814:	ldr	r3, [pc, #80]	; 1986c <XRRGetOutputInfo@plt+0x7e0c>
   19818:	b	18c10 <XRRGetOutputInfo@plt+0x71b0>
   1981c:	ldr	r2, [pc, #76]	; 19870 <XRRGetOutputInfo@plt+0x7e10>
   19820:	add	r3, r2, r3, lsl #2
   19824:	ldr	r2, [r3, #128]	; 0x80
   19828:	b	18be0 <XRRGetOutputInfo@plt+0x7180>
   1982c:	bl	11724 <__stack_chk_fail@plt>
   19830:	ldr	r1, [fp, #60]	; 0x3c
   19834:	ldr	r0, [pc, #56]	; 19874 <XRRGetOutputInfo@plt+0x7e14>
   19838:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   1983c:	ldr	r1, [fp, #64]	; 0x40
   19840:	ldr	r0, [pc, #48]	; 19878 <XRRGetOutputInfo@plt+0x7e18>
   19844:	bl	17654 <XRRGetOutputInfo@plt+0x5bf4>
   19848:	andeq	r0, r0, r0
   1984c:	andmi	r0, r0, r0
   19850:	andeq	sl, r1, r8, lsl r3
   19854:	andeq	sl, r1, r8, ror #3
   19858:	muleq	r1, r4, r2
   1985c:	strdeq	sl, [r1], -r8
   19860:	andeq	sl, r1, ip, lsl #2
   19864:	andeq	sl, r1, r8, asr #2
   19868:			; <UNDEFINED> instruction: 0x0001a1b8
   1986c:	andeq	sl, r1, ip, lsr #2
   19870:	andeq	r9, r1, r8, asr #26
   19874:	andeq	sl, r1, r4, lsl #4
   19878:	andeq	sl, r1, ip, lsl r2
   1987c:	subs	r2, r1, #1
   19880:	bxeq	lr
   19884:	bcc	19a5c <XRRGetOutputInfo@plt+0x7ffc>
   19888:	cmp	r0, r1
   1988c:	bls	19a40 <XRRGetOutputInfo@plt+0x7fe0>
   19890:	tst	r1, r2
   19894:	beq	19a4c <XRRGetOutputInfo@plt+0x7fec>
   19898:	clz	r3, r0
   1989c:	clz	r2, r1
   198a0:	sub	r3, r2, r3
   198a4:	rsbs	r3, r3, #31
   198a8:	addne	r3, r3, r3, lsl #1
   198ac:	mov	r2, #0
   198b0:	addne	pc, pc, r3, lsl #2
   198b4:	nop			; (mov r0, r0)
   198b8:	cmp	r0, r1, lsl #31
   198bc:	adc	r2, r2, r2
   198c0:	subcs	r0, r0, r1, lsl #31
   198c4:	cmp	r0, r1, lsl #30
   198c8:	adc	r2, r2, r2
   198cc:	subcs	r0, r0, r1, lsl #30
   198d0:	cmp	r0, r1, lsl #29
   198d4:	adc	r2, r2, r2
   198d8:	subcs	r0, r0, r1, lsl #29
   198dc:	cmp	r0, r1, lsl #28
   198e0:	adc	r2, r2, r2
   198e4:	subcs	r0, r0, r1, lsl #28
   198e8:	cmp	r0, r1, lsl #27
   198ec:	adc	r2, r2, r2
   198f0:	subcs	r0, r0, r1, lsl #27
   198f4:	cmp	r0, r1, lsl #26
   198f8:	adc	r2, r2, r2
   198fc:	subcs	r0, r0, r1, lsl #26
   19900:	cmp	r0, r1, lsl #25
   19904:	adc	r2, r2, r2
   19908:	subcs	r0, r0, r1, lsl #25
   1990c:	cmp	r0, r1, lsl #24
   19910:	adc	r2, r2, r2
   19914:	subcs	r0, r0, r1, lsl #24
   19918:	cmp	r0, r1, lsl #23
   1991c:	adc	r2, r2, r2
   19920:	subcs	r0, r0, r1, lsl #23
   19924:	cmp	r0, r1, lsl #22
   19928:	adc	r2, r2, r2
   1992c:	subcs	r0, r0, r1, lsl #22
   19930:	cmp	r0, r1, lsl #21
   19934:	adc	r2, r2, r2
   19938:	subcs	r0, r0, r1, lsl #21
   1993c:	cmp	r0, r1, lsl #20
   19940:	adc	r2, r2, r2
   19944:	subcs	r0, r0, r1, lsl #20
   19948:	cmp	r0, r1, lsl #19
   1994c:	adc	r2, r2, r2
   19950:	subcs	r0, r0, r1, lsl #19
   19954:	cmp	r0, r1, lsl #18
   19958:	adc	r2, r2, r2
   1995c:	subcs	r0, r0, r1, lsl #18
   19960:	cmp	r0, r1, lsl #17
   19964:	adc	r2, r2, r2
   19968:	subcs	r0, r0, r1, lsl #17
   1996c:	cmp	r0, r1, lsl #16
   19970:	adc	r2, r2, r2
   19974:	subcs	r0, r0, r1, lsl #16
   19978:	cmp	r0, r1, lsl #15
   1997c:	adc	r2, r2, r2
   19980:	subcs	r0, r0, r1, lsl #15
   19984:	cmp	r0, r1, lsl #14
   19988:	adc	r2, r2, r2
   1998c:	subcs	r0, r0, r1, lsl #14
   19990:	cmp	r0, r1, lsl #13
   19994:	adc	r2, r2, r2
   19998:	subcs	r0, r0, r1, lsl #13
   1999c:	cmp	r0, r1, lsl #12
   199a0:	adc	r2, r2, r2
   199a4:	subcs	r0, r0, r1, lsl #12
   199a8:	cmp	r0, r1, lsl #11
   199ac:	adc	r2, r2, r2
   199b0:	subcs	r0, r0, r1, lsl #11
   199b4:	cmp	r0, r1, lsl #10
   199b8:	adc	r2, r2, r2
   199bc:	subcs	r0, r0, r1, lsl #10
   199c0:	cmp	r0, r1, lsl #9
   199c4:	adc	r2, r2, r2
   199c8:	subcs	r0, r0, r1, lsl #9
   199cc:	cmp	r0, r1, lsl #8
   199d0:	adc	r2, r2, r2
   199d4:	subcs	r0, r0, r1, lsl #8
   199d8:	cmp	r0, r1, lsl #7
   199dc:	adc	r2, r2, r2
   199e0:	subcs	r0, r0, r1, lsl #7
   199e4:	cmp	r0, r1, lsl #6
   199e8:	adc	r2, r2, r2
   199ec:	subcs	r0, r0, r1, lsl #6
   199f0:	cmp	r0, r1, lsl #5
   199f4:	adc	r2, r2, r2
   199f8:	subcs	r0, r0, r1, lsl #5
   199fc:	cmp	r0, r1, lsl #4
   19a00:	adc	r2, r2, r2
   19a04:	subcs	r0, r0, r1, lsl #4
   19a08:	cmp	r0, r1, lsl #3
   19a0c:	adc	r2, r2, r2
   19a10:	subcs	r0, r0, r1, lsl #3
   19a14:	cmp	r0, r1, lsl #2
   19a18:	adc	r2, r2, r2
   19a1c:	subcs	r0, r0, r1, lsl #2
   19a20:	cmp	r0, r1, lsl #1
   19a24:	adc	r2, r2, r2
   19a28:	subcs	r0, r0, r1, lsl #1
   19a2c:	cmp	r0, r1
   19a30:	adc	r2, r2, r2
   19a34:	subcs	r0, r0, r1
   19a38:	mov	r0, r2
   19a3c:	bx	lr
   19a40:	moveq	r0, #1
   19a44:	movne	r0, #0
   19a48:	bx	lr
   19a4c:	clz	r2, r1
   19a50:	rsb	r2, r2, #31
   19a54:	lsr	r0, r0, r2
   19a58:	bx	lr
   19a5c:	cmp	r0, #0
   19a60:	mvnne	r0, #0
   19a64:	b	19cc8 <XRRGetOutputInfo@plt+0x8268>
   19a68:	cmp	r1, #0
   19a6c:	beq	19a5c <XRRGetOutputInfo@plt+0x7ffc>
   19a70:	push	{r0, r1, lr}
   19a74:	bl	1987c <XRRGetOutputInfo@plt+0x7e1c>
   19a78:	pop	{r1, r2, lr}
   19a7c:	mul	r3, r2, r0
   19a80:	sub	r1, r1, r3
   19a84:	bx	lr
   19a88:	cmp	r1, #0
   19a8c:	beq	19c98 <XRRGetOutputInfo@plt+0x8238>
   19a90:	eor	ip, r0, r1
   19a94:	rsbmi	r1, r1, #0
   19a98:	subs	r2, r1, #1
   19a9c:	beq	19c64 <XRRGetOutputInfo@plt+0x8204>
   19aa0:	movs	r3, r0
   19aa4:	rsbmi	r3, r0, #0
   19aa8:	cmp	r3, r1
   19aac:	bls	19c70 <XRRGetOutputInfo@plt+0x8210>
   19ab0:	tst	r1, r2
   19ab4:	beq	19c80 <XRRGetOutputInfo@plt+0x8220>
   19ab8:	clz	r2, r3
   19abc:	clz	r0, r1
   19ac0:	sub	r2, r0, r2
   19ac4:	rsbs	r2, r2, #31
   19ac8:	addne	r2, r2, r2, lsl #1
   19acc:	mov	r0, #0
   19ad0:	addne	pc, pc, r2, lsl #2
   19ad4:	nop			; (mov r0, r0)
   19ad8:	cmp	r3, r1, lsl #31
   19adc:	adc	r0, r0, r0
   19ae0:	subcs	r3, r3, r1, lsl #31
   19ae4:	cmp	r3, r1, lsl #30
   19ae8:	adc	r0, r0, r0
   19aec:	subcs	r3, r3, r1, lsl #30
   19af0:	cmp	r3, r1, lsl #29
   19af4:	adc	r0, r0, r0
   19af8:	subcs	r3, r3, r1, lsl #29
   19afc:	cmp	r3, r1, lsl #28
   19b00:	adc	r0, r0, r0
   19b04:	subcs	r3, r3, r1, lsl #28
   19b08:	cmp	r3, r1, lsl #27
   19b0c:	adc	r0, r0, r0
   19b10:	subcs	r3, r3, r1, lsl #27
   19b14:	cmp	r3, r1, lsl #26
   19b18:	adc	r0, r0, r0
   19b1c:	subcs	r3, r3, r1, lsl #26
   19b20:	cmp	r3, r1, lsl #25
   19b24:	adc	r0, r0, r0
   19b28:	subcs	r3, r3, r1, lsl #25
   19b2c:	cmp	r3, r1, lsl #24
   19b30:	adc	r0, r0, r0
   19b34:	subcs	r3, r3, r1, lsl #24
   19b38:	cmp	r3, r1, lsl #23
   19b3c:	adc	r0, r0, r0
   19b40:	subcs	r3, r3, r1, lsl #23
   19b44:	cmp	r3, r1, lsl #22
   19b48:	adc	r0, r0, r0
   19b4c:	subcs	r3, r3, r1, lsl #22
   19b50:	cmp	r3, r1, lsl #21
   19b54:	adc	r0, r0, r0
   19b58:	subcs	r3, r3, r1, lsl #21
   19b5c:	cmp	r3, r1, lsl #20
   19b60:	adc	r0, r0, r0
   19b64:	subcs	r3, r3, r1, lsl #20
   19b68:	cmp	r3, r1, lsl #19
   19b6c:	adc	r0, r0, r0
   19b70:	subcs	r3, r3, r1, lsl #19
   19b74:	cmp	r3, r1, lsl #18
   19b78:	adc	r0, r0, r0
   19b7c:	subcs	r3, r3, r1, lsl #18
   19b80:	cmp	r3, r1, lsl #17
   19b84:	adc	r0, r0, r0
   19b88:	subcs	r3, r3, r1, lsl #17
   19b8c:	cmp	r3, r1, lsl #16
   19b90:	adc	r0, r0, r0
   19b94:	subcs	r3, r3, r1, lsl #16
   19b98:	cmp	r3, r1, lsl #15
   19b9c:	adc	r0, r0, r0
   19ba0:	subcs	r3, r3, r1, lsl #15
   19ba4:	cmp	r3, r1, lsl #14
   19ba8:	adc	r0, r0, r0
   19bac:	subcs	r3, r3, r1, lsl #14
   19bb0:	cmp	r3, r1, lsl #13
   19bb4:	adc	r0, r0, r0
   19bb8:	subcs	r3, r3, r1, lsl #13
   19bbc:	cmp	r3, r1, lsl #12
   19bc0:	adc	r0, r0, r0
   19bc4:	subcs	r3, r3, r1, lsl #12
   19bc8:	cmp	r3, r1, lsl #11
   19bcc:	adc	r0, r0, r0
   19bd0:	subcs	r3, r3, r1, lsl #11
   19bd4:	cmp	r3, r1, lsl #10
   19bd8:	adc	r0, r0, r0
   19bdc:	subcs	r3, r3, r1, lsl #10
   19be0:	cmp	r3, r1, lsl #9
   19be4:	adc	r0, r0, r0
   19be8:	subcs	r3, r3, r1, lsl #9
   19bec:	cmp	r3, r1, lsl #8
   19bf0:	adc	r0, r0, r0
   19bf4:	subcs	r3, r3, r1, lsl #8
   19bf8:	cmp	r3, r1, lsl #7
   19bfc:	adc	r0, r0, r0
   19c00:	subcs	r3, r3, r1, lsl #7
   19c04:	cmp	r3, r1, lsl #6
   19c08:	adc	r0, r0, r0
   19c0c:	subcs	r3, r3, r1, lsl #6
   19c10:	cmp	r3, r1, lsl #5
   19c14:	adc	r0, r0, r0
   19c18:	subcs	r3, r3, r1, lsl #5
   19c1c:	cmp	r3, r1, lsl #4
   19c20:	adc	r0, r0, r0
   19c24:	subcs	r3, r3, r1, lsl #4
   19c28:	cmp	r3, r1, lsl #3
   19c2c:	adc	r0, r0, r0
   19c30:	subcs	r3, r3, r1, lsl #3
   19c34:	cmp	r3, r1, lsl #2
   19c38:	adc	r0, r0, r0
   19c3c:	subcs	r3, r3, r1, lsl #2
   19c40:	cmp	r3, r1, lsl #1
   19c44:	adc	r0, r0, r0
   19c48:	subcs	r3, r3, r1, lsl #1
   19c4c:	cmp	r3, r1
   19c50:	adc	r0, r0, r0
   19c54:	subcs	r3, r3, r1
   19c58:	cmp	ip, #0
   19c5c:	rsbmi	r0, r0, #0
   19c60:	bx	lr
   19c64:	teq	ip, r0
   19c68:	rsbmi	r0, r0, #0
   19c6c:	bx	lr
   19c70:	movcc	r0, #0
   19c74:	asreq	r0, ip, #31
   19c78:	orreq	r0, r0, #1
   19c7c:	bx	lr
   19c80:	clz	r2, r1
   19c84:	rsb	r2, r2, #31
   19c88:	cmp	ip, #0
   19c8c:	lsr	r0, r3, r2
   19c90:	rsbmi	r0, r0, #0
   19c94:	bx	lr
   19c98:	cmp	r0, #0
   19c9c:	mvngt	r0, #-2147483648	; 0x80000000
   19ca0:	movlt	r0, #-2147483648	; 0x80000000
   19ca4:	b	19cc8 <XRRGetOutputInfo@plt+0x8268>
   19ca8:	cmp	r1, #0
   19cac:	beq	19c98 <XRRGetOutputInfo@plt+0x8238>
   19cb0:	push	{r0, r1, lr}
   19cb4:	bl	19a90 <XRRGetOutputInfo@plt+0x8030>
   19cb8:	pop	{r1, r2, lr}
   19cbc:	mul	r3, r2, r0
   19cc0:	sub	r1, r1, r3
   19cc4:	bx	lr
   19cc8:	push	{r1, lr}
   19ccc:	mov	r0, #8
   19cd0:	bl	11634 <raise@plt>
   19cd4:	pop	{r1, pc}
   19cd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19cdc:	mov	r7, r0
   19ce0:	ldr	r6, [pc, #72]	; 19d30 <XRRGetOutputInfo@plt+0x82d0>
   19ce4:	ldr	r5, [pc, #72]	; 19d34 <XRRGetOutputInfo@plt+0x82d4>
   19ce8:	add	r6, pc, r6
   19cec:	add	r5, pc, r5
   19cf0:	sub	r6, r6, r5
   19cf4:	mov	r8, r1
   19cf8:	mov	r9, r2
   19cfc:	bl	11608 <calloc@plt-0x20>
   19d00:	asrs	r6, r6, #2
   19d04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d08:	mov	r4, #0
   19d0c:	add	r4, r4, #1
   19d10:	ldr	r3, [r5], #4
   19d14:	mov	r2, r9
   19d18:	mov	r1, r8
   19d1c:	mov	r0, r7
   19d20:	blx	r3
   19d24:	cmp	r6, r4
   19d28:	bne	19d0c <XRRGetOutputInfo@plt+0x82ac>
   19d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d30:	strdeq	r2, [r1], -r4
   19d34:	andeq	r2, r1, ip, ror #3
   19d38:	bx	lr

Disassembly of section .fini:

00019d3c <.fini>:
   19d3c:	push	{r3, lr}
   19d40:	pop	{r3, pc}
