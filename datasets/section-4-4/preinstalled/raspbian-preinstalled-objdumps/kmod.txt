
raspbian-preinstalled/kmod:     file format elf32-littlearm


Disassembly of section .init:

000119a8 <.init>:
   119a8:	push	{r3, lr}
   119ac:	bl	121a0 <ASN1_STRING_length@plt+0x22c>
   119b0:	pop	{r3, pc}

Disassembly of section .plt:

000119b4 <CMS_SignerInfo_get0_signature@plt-0x14>:
   119b4:	push	{lr}		; (str lr, [sp, #-4]!)
   119b8:	ldr	lr, [pc, #4]	; 119c4 <CMS_SignerInfo_get0_signature@plt-0x4>
   119bc:	add	lr, pc, lr
   119c0:	ldr	pc, [lr, #8]!
   119c4:	andeq	lr, r2, r8, lsr r4

000119c8 <CMS_SignerInfo_get0_signature@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #188416	; 0x2e000
   119d0:	ldr	pc, [ip, #1080]!	; 0x438

000119d4 <OPENSSL_sk_value@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #188416	; 0x2e000
   119dc:	ldr	pc, [ip, #1072]!	; 0x430

000119e0 <init_module@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #188416	; 0x2e000
   119e8:	ldr	pc, [ip, #1064]!	; 0x428

000119ec <qsort@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #188416	; 0x2e000
   119f4:	ldr	pc, [ip, #1056]!	; 0x420

000119f8 <strerror@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #188416	; 0x2e000
   11a00:	ldr	pc, [ip, #1048]!	; 0x418

00011a04 <regfree@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #188416	; 0x2e000
   11a0c:	ldr	pc, [ip, #1040]!	; 0x410

00011a10 <mkdir@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #188416	; 0x2e000
   11a18:	ldr	pc, [ip, #1032]!	; 0x408

00011a1c <unsetenv@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #188416	; 0x2e000
   11a24:	ldr	pc, [ip, #1024]!	; 0x400

00011a28 <abort@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #188416	; 0x2e000
   11a30:	ldr	pc, [ip, #1016]!	; 0x3f8

00011a34 <opendir@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #188416	; 0x2e000
   11a3c:	ldr	pc, [ip, #1008]!	; 0x3f0

00011a40 <memcmp@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #188416	; 0x2e000
   11a48:	ldr	pc, [ip, #1000]!	; 0x3e8

00011a4c <__libc_start_main@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #188416	; 0x2e000
   11a54:	ldr	pc, [ip, #992]!	; 0x3e0

00011a58 <__gmon_start__@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #188416	; 0x2e000
   11a60:	ldr	pc, [ip, #984]!	; 0x3d8

00011a64 <CMS_get0_SignerInfos@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #188416	; 0x2e000
   11a6c:	ldr	pc, [ip, #976]!	; 0x3d0

00011a70 <strsep@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #188416	; 0x2e000
   11a78:	ldr	pc, [ip, #968]!	; 0x3c8

00011a7c <OBJ_obj2nid@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #188416	; 0x2e000
   11a84:	ldr	pc, [ip, #960]!	; 0x3c0

00011a88 <fclose@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #188416	; 0x2e000
   11a90:	ldr	pc, [ip, #952]!	; 0x3b8

00011a94 <fgets@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #188416	; 0x2e000
   11a9c:	ldr	pc, [ip, #944]!	; 0x3b0

00011aa0 <getenv@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #188416	; 0x2e000
   11aa8:	ldr	pc, [ip, #936]!	; 0x3a8

00011aac <__printf_chk@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #188416	; 0x2e000
   11ab4:	ldr	pc, [ip, #928]!	; 0x3a0

00011ab8 <system@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #188416	; 0x2e000
   11ac0:	ldr	pc, [ip, #920]!	; 0x398

00011ac4 <strchr@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #188416	; 0x2e000
   11acc:	ldr	pc, [ip, #912]!	; 0x390

00011ad0 <get_current_dir_name@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #188416	; 0x2e000
   11ad8:	ldr	pc, [ip, #904]!	; 0x388

00011adc <CMS_ContentInfo_free@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #188416	; 0x2e000
   11ae4:	ldr	pc, [ip, #896]!	; 0x380

00011ae8 <calloc@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #188416	; 0x2e000
   11af0:	ldr	pc, [ip, #888]!	; 0x378

00011af4 <__uflow@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #188416	; 0x2e000
   11afc:	ldr	pc, [ip, #880]!	; 0x370

00011b00 <d2i_CMS_bio@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #188416	; 0x2e000
   11b08:	ldr	pc, [ip, #872]!	; 0x368

00011b0c <X509_ALGOR_get0@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #188416	; 0x2e000
   11b14:	ldr	pc, [ip, #864]!	; 0x360

00011b18 <memset@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #188416	; 0x2e000
   11b20:	ldr	pc, [ip, #856]!	; 0x358

00011b24 <uname@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #188416	; 0x2e000
   11b2c:	ldr	pc, [ip, #848]!	; 0x350

00011b30 <ASN1_INTEGER_to_BN@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #188416	; 0x2e000
   11b38:	ldr	pc, [ip, #840]!	; 0x348

00011b3c <strrchr@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #188416	; 0x2e000
   11b44:	ldr	pc, [ip, #832]!	; 0x340

00011b48 <X509_NAME_get_entry@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #188416	; 0x2e000
   11b50:	ldr	pc, [ip, #824]!	; 0x338

00011b54 <BN_num_bits@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #188416	; 0x2e000
   11b5c:	ldr	pc, [ip, #816]!	; 0x330

00011b60 <X509_NAME_ENTRY_get_data@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #188416	; 0x2e000
   11b68:	ldr	pc, [ip, #808]!	; 0x328

00011b6c <__assert_fail@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #188416	; 0x2e000
   11b74:	ldr	pc, [ip, #800]!	; 0x320

00011b78 <__fxstat64@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #188416	; 0x2e000
   11b80:	ldr	pc, [ip, #792]!	; 0x318

00011b84 <renameat@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #188416	; 0x2e000
   11b8c:	ldr	pc, [ip, #784]!	; 0x310

00011b90 <ASN1_STRING_get0_data@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #188416	; 0x2e000
   11b98:	ldr	pc, [ip, #776]!	; 0x308

00011b9c <strtoull@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #188416	; 0x2e000
   11ba4:	ldr	pc, [ip, #768]!	; 0x300

00011ba8 <free@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #188416	; 0x2e000
   11bb0:	ldr	pc, [ip, #760]!	; 0x2f8

00011bb4 <read@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #188416	; 0x2e000
   11bbc:	ldr	pc, [ip, #752]!	; 0x2f0

00011bc0 <write@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #188416	; 0x2e000
   11bc8:	ldr	pc, [ip, #744]!	; 0x2e8

00011bcc <getopt_long@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #188416	; 0x2e000
   11bd4:	ldr	pc, [ip, #736]!	; 0x2e0

00011bd8 <secure_getenv@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #188416	; 0x2e000
   11be0:	ldr	pc, [ip, #728]!	; 0x2d8

00011be4 <openlog@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #188416	; 0x2e000
   11bec:	ldr	pc, [ip, #720]!	; 0x2d0

00011bf0 <openat64@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #188416	; 0x2e000
   11bf8:	ldr	pc, [ip, #712]!	; 0x2c8

00011bfc <gettimeofday@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #188416	; 0x2e000
   11c04:	ldr	pc, [ip, #704]!	; 0x2c0

00011c08 <fseek@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #188416	; 0x2e000
   11c10:	ldr	pc, [ip, #696]!	; 0x2b8

00011c14 <__asprintf_chk@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #188416	; 0x2e000
   11c1c:	ldr	pc, [ip, #688]!	; 0x2b0

00011c20 <__memcpy_chk@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #188416	; 0x2e000
   11c28:	ldr	pc, [ip, #680]!	; 0x2a8

00011c2c <fflush@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #188416	; 0x2e000
   11c34:	ldr	pc, [ip, #672]!	; 0x2a0

00011c38 <regcomp@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #188416	; 0x2e000
   11c40:	ldr	pc, [ip, #664]!	; 0x298

00011c44 <strlen@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #188416	; 0x2e000
   11c4c:	ldr	pc, [ip, #656]!	; 0x290

00011c50 <sscanf@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #188416	; 0x2e000
   11c58:	ldr	pc, [ip, #648]!	; 0x288

00011c5c <memcpy@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #188416	; 0x2e000
   11c64:	ldr	pc, [ip, #640]!	; 0x280

00011c68 <fopen64@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #188416	; 0x2e000
   11c70:	ldr	pc, [ip, #632]!	; 0x278

00011c74 <BIO_new_mem_buf@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #188416	; 0x2e000
   11c7c:	ldr	pc, [ip, #624]!	; 0x270

00011c80 <ftell@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #188416	; 0x2e000
   11c88:	ldr	pc, [ip, #616]!	; 0x268

00011c8c <strtol@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #188416	; 0x2e000
   11c94:	ldr	pc, [ip, #608]!	; 0x260

00011c98 <strcpy@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #188416	; 0x2e000
   11ca0:	ldr	pc, [ip, #600]!	; 0x258

00011ca4 <open64@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #188416	; 0x2e000
   11cac:	ldr	pc, [ip, #592]!	; 0x250

00011cb0 <__vfprintf_chk@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #188416	; 0x2e000
   11cb8:	ldr	pc, [ip, #584]!	; 0x248

00011cbc <raise@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #188416	; 0x2e000
   11cc4:	ldr	pc, [ip, #576]!	; 0x240

00011cc8 <__snprintf_chk@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #188416	; 0x2e000
   11cd0:	ldr	pc, [ip, #568]!	; 0x238

00011cd4 <dirfd@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #188416	; 0x2e000
   11cdc:	ldr	pc, [ip, #560]!	; 0x230

00011ce0 <fdopen@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #188416	; 0x2e000
   11ce8:	ldr	pc, [ip, #552]!	; 0x228

00011cec <__syslog_chk@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #188416	; 0x2e000
   11cf4:	ldr	pc, [ip, #544]!	; 0x220

00011cf8 <strstr@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #188416	; 0x2e000
   11d00:	ldr	pc, [ip, #536]!	; 0x218

00011d04 <close@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #188416	; 0x2e000
   11d0c:	ldr	pc, [ip, #528]!	; 0x210

00011d10 <fwrite@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #188416	; 0x2e000
   11d18:	ldr	pc, [ip, #520]!	; 0x208

00011d1c <lzma_code@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #188416	; 0x2e000
   11d24:	ldr	pc, [ip, #512]!	; 0x200

00011d28 <closedir@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #188416	; 0x2e000
   11d30:	ldr	pc, [ip, #504]!	; 0x1f8

00011d34 <__ctype_b_loc@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #188416	; 0x2e000
   11d3c:	ldr	pc, [ip, #496]!	; 0x1f0

00011d40 <__xstat64@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #188416	; 0x2e000
   11d48:	ldr	pc, [ip, #488]!	; 0x1e8

00011d4c <strdup@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #188416	; 0x2e000
   11d54:	ldr	pc, [ip, #480]!	; 0x1e0

00011d58 <lseek64@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #188416	; 0x2e000
   11d60:	ldr	pc, [ip, #472]!	; 0x1d8

00011d64 <malloc@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #188416	; 0x2e000
   11d6c:	ldr	pc, [ip, #464]!	; 0x1d0

00011d70 <mmap64@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #188416	; 0x2e000
   11d78:	ldr	pc, [ip, #456]!	; 0x1c8

00011d7c <X509_NAME_ENTRY_get_object@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #188416	; 0x2e000
   11d84:	ldr	pc, [ip, #448]!	; 0x1c0

00011d88 <__stack_chk_fail@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #188416	; 0x2e000
   11d90:	ldr	pc, [ip, #440]!	; 0x1b8

00011d94 <__fprintf_chk@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #188416	; 0x2e000
   11d9c:	ldr	pc, [ip, #432]!	; 0x1b0

00011da0 <X509_NAME_entry_count@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #188416	; 0x2e000
   11da8:	ldr	pc, [ip, #424]!	; 0x1a8

00011dac <strnlen@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #188416	; 0x2e000
   11db4:	ldr	pc, [ip, #416]!	; 0x1a0

00011db8 <fputc@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #188416	; 0x2e000
   11dc0:	ldr	pc, [ip, #408]!	; 0x198

00011dc4 <strtok@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #188416	; 0x2e000
   11dcc:	ldr	pc, [ip, #400]!	; 0x190

00011dd0 <strtok_r@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #188416	; 0x2e000
   11dd8:	ldr	pc, [ip, #392]!	; 0x188

00011ddc <regexec@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #188416	; 0x2e000
   11de4:	ldr	pc, [ip, #384]!	; 0x180

00011de8 <lzma_end@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #188416	; 0x2e000
   11df0:	ldr	pc, [ip, #376]!	; 0x178

00011df4 <memmove@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #188416	; 0x2e000
   11dfc:	ldr	pc, [ip, #368]!	; 0x170

00011e00 <fnmatch@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #188416	; 0x2e000
   11e08:	ldr	pc, [ip, #360]!	; 0x168

00011e0c <puts@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #188416	; 0x2e000
   11e14:	ldr	pc, [ip, #352]!	; 0x160

00011e18 <getpid@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #188416	; 0x2e000
   11e20:	ldr	pc, [ip, #344]!	; 0x158

00011e24 <closelog@plt>:
   11e24:	add	ip, pc, #0, 12
   11e28:	add	ip, ip, #188416	; 0x2e000
   11e2c:	ldr	pc, [ip, #336]!	; 0x150

00011e30 <munmap@plt>:
   11e30:	add	ip, pc, #0, 12
   11e34:	add	ip, ip, #188416	; 0x2e000
   11e38:	ldr	pc, [ip, #328]!	; 0x148

00011e3c <BN_bn2bin@plt>:
   11e3c:	add	ip, pc, #0, 12
   11e40:	add	ip, ip, #188416	; 0x2e000
   11e44:	ldr	pc, [ip, #320]!	; 0x140

00011e48 <delete_module@plt>:
   11e48:	add	ip, pc, #0, 12
   11e4c:	add	ip, ip, #188416	; 0x2e000
   11e50:	ldr	pc, [ip, #312]!	; 0x138

00011e54 <readdir64@plt>:
   11e54:	add	ip, pc, #0, 12
   11e58:	add	ip, ip, #188416	; 0x2e000
   11e5c:	ldr	pc, [ip, #304]!	; 0x130

00011e60 <putc@plt>:
   11e60:	add	ip, pc, #0, 12
   11e64:	add	ip, ip, #188416	; 0x2e000
   11e68:	ldr	pc, [ip, #296]!	; 0x128

00011e6c <unlinkat@plt>:
   11e6c:	add	ip, pc, #0, 12
   11e70:	add	ip, ip, #188416	; 0x2e000
   11e74:	ldr	pc, [ip, #288]!	; 0x120

00011e78 <BIO_free@plt>:
   11e78:	add	ip, pc, #0, 12
   11e7c:	add	ip, ip, #188416	; 0x2e000
   11e80:	ldr	pc, [ip, #280]!	; 0x118

00011e84 <strcspn@plt>:
   11e84:	add	ip, pc, #0, 12
   11e88:	add	ip, ip, #188416	; 0x2e000
   11e8c:	ldr	pc, [ip, #272]!	; 0x110

00011e90 <__sprintf_chk@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #188416	; 0x2e000
   11e98:	ldr	pc, [ip, #264]!	; 0x108

00011e9c <fread@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #188416	; 0x2e000
   11ea4:	ldr	pc, [ip, #256]!	; 0x100

00011ea8 <strncmp@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #188416	; 0x2e000
   11eb0:	ldr	pc, [ip, #248]!	; 0xf8

00011eb4 <ferror@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #188416	; 0x2e000
   11ebc:	ldr	pc, [ip, #240]!	; 0xf0

00011ec0 <realloc@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #188416	; 0x2e000
   11ec8:	ldr	pc, [ip, #232]!	; 0xe8

00011ecc <syscall@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #188416	; 0x2e000
   11ed4:	ldr	pc, [ip, #224]!	; 0xe0

00011ed8 <lzma_stream_decoder@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #188416	; 0x2e000
   11ee0:	ldr	pc, [ip, #216]!	; 0xd8

00011ee4 <__fxstatat64@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #188416	; 0x2e000
   11eec:	ldr	pc, [ip, #208]!	; 0xd0

00011ef0 <CMS_SignerInfo_get0_algs@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #188416	; 0x2e000
   11ef8:	ldr	pc, [ip, #200]!	; 0xc8

00011efc <CMS_SignerInfo_get0_signer_id@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #188416	; 0x2e000
   11f04:	ldr	pc, [ip, #192]!	; 0xc0

00011f08 <setenv@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #188416	; 0x2e000
   11f10:	ldr	pc, [ip, #184]!	; 0xb8

00011f14 <strcmp@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #188416	; 0x2e000
   11f1c:	ldr	pc, [ip, #176]!	; 0xb0

00011f20 <exit@plt>:
   11f20:	add	ip, pc, #0, 12
   11f24:	add	ip, ip, #188416	; 0x2e000
   11f28:	ldr	pc, [ip, #168]!	; 0xa8

00011f2c <__vasprintf_chk@plt>:
   11f2c:	add	ip, pc, #0, 12
   11f30:	add	ip, ip, #188416	; 0x2e000
   11f34:	ldr	pc, [ip, #160]!	; 0xa0

00011f38 <__errno_location@plt>:
   11f38:	add	ip, pc, #0, 12
   11f3c:	add	ip, ip, #188416	; 0x2e000
   11f40:	ldr	pc, [ip, #152]!	; 0x98

00011f44 <basename@plt>:
   11f44:	add	ip, pc, #0, 12
   11f48:	add	ip, ip, #188416	; 0x2e000
   11f4c:	ldr	pc, [ip, #144]!	; 0x90

00011f50 <BN_free@plt>:
   11f50:	add	ip, pc, #0, 12
   11f54:	add	ip, ip, #188416	; 0x2e000
   11f58:	ldr	pc, [ip, #136]!	; 0x88

00011f5c <fdopendir@plt>:
   11f5c:	add	ip, pc, #0, 12
   11f60:	add	ip, ip, #188416	; 0x2e000
   11f64:	ldr	pc, [ip, #128]!	; 0x80

00011f68 <fputs@plt>:
   11f68:	add	ip, pc, #0, 12
   11f6c:	add	ip, ip, #188416	; 0x2e000
   11f70:	ldr	pc, [ip, #120]!	; 0x78

00011f74 <ASN1_STRING_length@plt>:
   11f74:	add	ip, pc, #0, 12
   11f78:	add	ip, ip, #188416	; 0x2e000
   11f7c:	ldr	pc, [ip, #112]!	; 0x70

Disassembly of section .text:

00011f80 <.text>:
   11f80:	ldr	r3, [pc, #424]	; 12130 <ASN1_STRING_length@plt+0x1bc>
   11f84:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f88:	mov	r6, r0
   11f8c:	sub	sp, sp, #12
   11f90:	mov	r5, r1
   11f94:	ldr	r0, [r3]
   11f98:	ldr	r1, [pc, #404]	; 12134 <ASN1_STRING_length@plt+0x1c0>
   11f9c:	bl	11f14 <strcmp@plt>
   11fa0:	subs	r4, r0, #0
   11fa4:	bne	12000 <ASN1_STRING_length@plt+0x8c>
   11fa8:	str	r4, [sp]
   11fac:	ldr	r3, [pc, #388]	; 12138 <ASN1_STRING_length@plt+0x1c4>
   11fb0:	ldr	r2, [pc, #388]	; 1213c <ASN1_STRING_length@plt+0x1c8>
   11fb4:	mov	r1, r5
   11fb8:	mov	r0, r6
   11fbc:	bl	11bcc <getopt_long@plt>
   11fc0:	cmn	r0, #1
   11fc4:	beq	12044 <ASN1_STRING_length@plt+0xd0>
   11fc8:	cmp	r0, #86	; 0x56
   11fcc:	beq	120f0 <ASN1_STRING_length@plt+0x17c>
   11fd0:	cmp	r0, #104	; 0x68
   11fd4:	beq	12104 <ASN1_STRING_length@plt+0x190>
   11fd8:	cmp	r0, #63	; 0x3f
   11fdc:	beq	120e8 <ASN1_STRING_length@plt+0x174>
   11fe0:	ldr	r1, [pc, #344]	; 12140 <ASN1_STRING_length@plt+0x1cc>
   11fe4:	mov	r3, r0
   11fe8:	ldr	r2, [pc, #340]	; 12144 <ASN1_STRING_length@plt+0x1d0>
   11fec:	ldr	r0, [r1]
   11ff0:	mov	r1, #1
   11ff4:	bl	11d94 <__fprintf_chk@plt>
   11ff8:	mov	r4, #1
   11ffc:	b	12038 <ASN1_STRING_length@plt+0xc4>
   12000:	ldr	r0, [r5]
   12004:	bl	11f44 <basename@plt>
   12008:	ldr	r4, [pc, #312]	; 12148 <ASN1_STRING_length@plt+0x1d4>
   1200c:	add	r8, r4, #24
   12010:	mov	r9, r0
   12014:	ldr	r7, [r4, #4]!
   12018:	mov	r1, r9
   1201c:	ldr	r0, [r7]
   12020:	bl	11f14 <strcmp@plt>
   12024:	cmp	r0, #0
   12028:	beq	120ac <ASN1_STRING_length@plt+0x138>
   1202c:	cmp	r4, r8
   12030:	bne	12014 <ASN1_STRING_length@plt+0xa0>
   12034:	mvn	r4, #1
   12038:	mov	r0, r4
   1203c:	add	sp, sp, #12
   12040:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12044:	ldr	r3, [pc, #256]	; 1214c <ASN1_STRING_length@plt+0x1d8>
   12048:	ldr	r3, [r3]
   1204c:	cmp	r6, r3
   12050:	ble	12114 <ASN1_STRING_length@plt+0x1a0>
   12054:	ldr	r4, [pc, #244]	; 12150 <ASN1_STRING_length@plt+0x1dc>
   12058:	ldr	r8, [r5, r3, lsl #2]
   1205c:	add	r9, r4, #12
   12060:	ldr	r7, [r4], #4
   12064:	mov	r1, r8
   12068:	ldr	r0, [r7]
   1206c:	bl	11f14 <strcmp@plt>
   12070:	cmp	r0, #0
   12074:	beq	120c4 <ASN1_STRING_length@plt+0x150>
   12078:	cmp	r4, r9
   1207c:	bne	12060 <ASN1_STRING_length@plt+0xec>
   12080:	ldr	r1, [pc, #184]	; 12140 <ASN1_STRING_length@plt+0x1cc>
   12084:	mov	r3, r8
   12088:	ldr	r2, [pc, #196]	; 12154 <ASN1_STRING_length@plt+0x1e0>
   1208c:	ldr	r0, [r1]
   12090:	mov	r1, #1
   12094:	bl	11d94 <__fprintf_chk@plt>
   12098:	mov	r1, r5
   1209c:	mov	r0, r6
   120a0:	bl	12254 <ASN1_STRING_length@plt+0x2e0>
   120a4:	mov	r4, #1
   120a8:	b	12038 <ASN1_STRING_length@plt+0xc4>
   120ac:	ldr	r3, [r7, #4]
   120b0:	mov	r1, r5
   120b4:	mov	r0, r6
   120b8:	add	sp, sp, #12
   120bc:	pop	{r4, r5, r6, r7, r8, r9, lr}
   120c0:	bx	r3
   120c4:	sub	r6, r6, #1
   120c8:	add	r5, r5, #4
   120cc:	ldr	r3, [r7, #4]
   120d0:	mov	r1, r5
   120d4:	mov	r0, r6
   120d8:	blx	r3
   120dc:	subs	r4, r0, #0
   120e0:	bge	12038 <ASN1_STRING_length@plt+0xc4>
   120e4:	b	12080 <ASN1_STRING_length@plt+0x10c>
   120e8:	mov	r4, #1
   120ec:	b	12038 <ASN1_STRING_length@plt+0xc4>
   120f0:	ldr	r0, [pc, #96]	; 12158 <ASN1_STRING_length@plt+0x1e4>
   120f4:	bl	11e0c <puts@plt>
   120f8:	ldr	r0, [pc, #92]	; 1215c <ASN1_STRING_length@plt+0x1e8>
   120fc:	bl	11e0c <puts@plt>
   12100:	b	12038 <ASN1_STRING_length@plt+0xc4>
   12104:	mov	r1, r5
   12108:	mov	r0, r6
   1210c:	bl	12254 <ASN1_STRING_length@plt+0x2e0>
   12110:	b	12038 <ASN1_STRING_length@plt+0xc4>
   12114:	ldr	r3, [pc, #36]	; 12140 <ASN1_STRING_length@plt+0x1cc>
   12118:	mov	r2, #16
   1211c:	mov	r1, #1
   12120:	ldr	r3, [r3]
   12124:	ldr	r0, [pc, #52]	; 12160 <ASN1_STRING_length@plt+0x1ec>
   12128:	bl	11d10 <fwrite@plt>
   1212c:	b	12098 <ASN1_STRING_length@plt+0x124>
   12130:	andeq	r0, r4, r8, lsr r0
   12134:	ldrdeq	sl, [r2], -r8
   12138:	andeq	sl, r2, r0, ror r7
   1213c:	andeq	sl, r2, r0, lsr #15
   12140:	andeq	r0, r4, r8, asr #32
   12144:	andeq	sl, r2, r4, lsl r7
   12148:	muleq	r2, r8, r5
   1214c:	andeq	r0, r4, r0, asr #32
   12150:	muleq	r2, r0, r5
   12154:	andeq	sl, r2, r8, asr r7
   12158:	andeq	sl, r2, r0, ror #13
   1215c:	strdeq	sl, [r2], -r0
   12160:	andeq	sl, r2, r4, asr #14
   12164:	mov	fp, #0
   12168:	mov	lr, #0
   1216c:	pop	{r1}		; (ldr r1, [sp], #4)
   12170:	mov	r2, sp
   12174:	push	{r2}		; (str r2, [sp, #-4]!)
   12178:	push	{r0}		; (str r0, [sp, #-4]!)
   1217c:	ldr	ip, [pc, #16]	; 12194 <ASN1_STRING_length@plt+0x220>
   12180:	push	{ip}		; (str ip, [sp, #-4]!)
   12184:	ldr	r0, [pc, #12]	; 12198 <ASN1_STRING_length@plt+0x224>
   12188:	ldr	r3, [pc, #12]	; 1219c <ASN1_STRING_length@plt+0x228>
   1218c:	bl	11a4c <__libc_start_main@plt>
   12190:	bl	11a28 <abort@plt>
   12194:	andeq	sl, r2, r8, ror r5
   12198:	andeq	r1, r1, r0, lsl #31
   1219c:	andeq	sl, r2, r8, lsl r5
   121a0:	ldr	r3, [pc, #20]	; 121bc <ASN1_STRING_length@plt+0x248>
   121a4:	ldr	r2, [pc, #20]	; 121c0 <ASN1_STRING_length@plt+0x24c>
   121a8:	add	r3, pc, r3
   121ac:	ldr	r2, [r3, r2]
   121b0:	cmp	r2, #0
   121b4:	bxeq	lr
   121b8:	b	11a58 <__gmon_start__@plt>
   121bc:	andeq	sp, r2, ip, asr #24
   121c0:	strdeq	r0, [r0], -r4
   121c4:	ldr	r0, [pc, #24]	; 121e4 <ASN1_STRING_length@plt+0x270>
   121c8:	ldr	r3, [pc, #24]	; 121e8 <ASN1_STRING_length@plt+0x274>
   121cc:	cmp	r3, r0
   121d0:	bxeq	lr
   121d4:	ldr	r3, [pc, #16]	; 121ec <ASN1_STRING_length@plt+0x278>
   121d8:	cmp	r3, #0
   121dc:	bxeq	lr
   121e0:	bx	r3
   121e4:	andeq	r0, r4, r8, lsr r0
   121e8:	andeq	r0, r4, r8, lsr r0
   121ec:	andeq	r0, r0, r0
   121f0:	ldr	r0, [pc, #36]	; 1221c <ASN1_STRING_length@plt+0x2a8>
   121f4:	ldr	r1, [pc, #36]	; 12220 <ASN1_STRING_length@plt+0x2ac>
   121f8:	sub	r1, r1, r0
   121fc:	asr	r1, r1, #2
   12200:	add	r1, r1, r1, lsr #31
   12204:	asrs	r1, r1, #1
   12208:	bxeq	lr
   1220c:	ldr	r3, [pc, #16]	; 12224 <ASN1_STRING_length@plt+0x2b0>
   12210:	cmp	r3, #0
   12214:	bxeq	lr
   12218:	bx	r3
   1221c:	andeq	r0, r4, r8, lsr r0
   12220:	andeq	r0, r4, r8, lsr r0
   12224:	andeq	r0, r0, r0
   12228:	push	{r4, lr}
   1222c:	ldr	r4, [pc, #24]	; 1224c <ASN1_STRING_length@plt+0x2d8>
   12230:	ldrb	r3, [r4]
   12234:	cmp	r3, #0
   12238:	popne	{r4, pc}
   1223c:	bl	121c4 <ASN1_STRING_length@plt+0x250>
   12240:	mov	r3, #1
   12244:	strb	r3, [r4]
   12248:	pop	{r4, pc}
   1224c:	andeq	r0, r4, r4, asr r0
   12250:	b	121f0 <ASN1_STRING_length@plt+0x27c>
   12254:	push	{r4, r5, r6, lr}
   12258:	ldr	r0, [r1]
   1225c:	bl	11f44 <basename@plt>
   12260:	ldr	r4, [pc, #148]	; 122fc <ASN1_STRING_length@plt+0x388>
   12264:	ldr	r1, [pc, #148]	; 12300 <ASN1_STRING_length@plt+0x38c>
   12268:	ldr	r6, [pc, #148]	; 12304 <ASN1_STRING_length@plt+0x390>
   1226c:	add	r5, r4, #8
   12270:	mov	r2, r0
   12274:	mov	r0, #1
   12278:	bl	11aac <__printf_chk@plt>
   1227c:	ldr	r2, [pc, #132]	; 12308 <ASN1_STRING_length@plt+0x394>
   12280:	ldr	ip, [pc, #132]	; 1230c <ASN1_STRING_length@plt+0x398>
   12284:	cmp	r2, #0
   12288:	mov	r3, r2
   1228c:	mov	r1, r6
   12290:	mov	r0, #1
   12294:	beq	122a0 <ASN1_STRING_length@plt+0x32c>
   12298:	ldr	r2, [ip]
   1229c:	bl	11aac <__printf_chk@plt>
   122a0:	cmp	r4, r5
   122a4:	ldrne	ip, [r4], #4
   122a8:	ldrne	r2, [ip, #8]
   122ac:	bne	12284 <ASN1_STRING_length@plt+0x310>
   122b0:	ldr	r4, [pc, #88]	; 12310 <ASN1_STRING_length@plt+0x39c>
   122b4:	ldr	r0, [pc, #88]	; 12314 <ASN1_STRING_length@plt+0x3a0>
   122b8:	bl	11e0c <puts@plt>
   122bc:	ldr	r6, [pc, #64]	; 12304 <ASN1_STRING_length@plt+0x390>
   122c0:	ldr	ip, [pc, #80]	; 12318 <ASN1_STRING_length@plt+0x3a4>
   122c4:	add	r5, r4, #20
   122c8:	b	122d0 <ASN1_STRING_length@plt+0x35c>
   122cc:	ldr	ip, [r4], #4
   122d0:	ldr	r2, [ip, #8]
   122d4:	mov	r1, r6
   122d8:	subs	r3, r2, #0
   122dc:	mov	r0, #1
   122e0:	beq	122ec <ASN1_STRING_length@plt+0x378>
   122e4:	ldr	r2, [ip]
   122e8:	bl	11aac <__printf_chk@plt>
   122ec:	cmp	r4, r5
   122f0:	bne	122cc <ASN1_STRING_length@plt+0x358>
   122f4:	mov	r0, #0
   122f8:	pop	{r4, r5, r6, pc}
   122fc:	muleq	r2, r4, r5
   12300:	andeq	sl, r2, r8, asr #11
   12304:	andeq	sl, r2, r8, lsl #13
   12308:			; <UNDEFINED> instruction: 0x0002a5b4
   1230c:	andeq	sl, r2, r4, lsl #11
   12310:	andeq	sl, r2, r0, lsr #11
   12314:	muleq	r2, r4, r6
   12318:	andeq	sl, r2, r8, lsr r8
   1231c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12320:	sub	sp, sp, #36	; 0x24
   12324:	ldr	sl, [pc, #468]	; 12500 <ASN1_STRING_length@plt+0x58c>
   12328:	mov	r4, r0
   1232c:	cmp	r0, #1
   12330:	ldr	r3, [sl]
   12334:	mov	r0, #0
   12338:	str	r3, [sp, #28]
   1233c:	str	r0, [sp, #20]
   12340:	beq	12378 <ASN1_STRING_length@plt+0x404>
   12344:	ldr	r0, [pc, #440]	; 12504 <ASN1_STRING_length@plt+0x590>
   12348:	ldr	r3, [r1]
   1234c:	ldr	r2, [pc, #436]	; 12508 <ASN1_STRING_length@plt+0x594>
   12350:	ldr	r0, [r0]
   12354:	mov	r1, #1
   12358:	bl	11d94 <__fprintf_chk@plt>
   1235c:	mov	r0, #1
   12360:	ldr	r2, [sp, #28]
   12364:	ldr	r3, [sl]
   12368:	cmp	r2, r3
   1236c:	bne	124fc <ASN1_STRING_length@plt+0x588>
   12370:	add	sp, sp, #36	; 0x24
   12374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12378:	add	r1, sp, #20
   1237c:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   12380:	subs	r3, r0, #0
   12384:	str	r3, [sp, #12]
   12388:	beq	124a8 <ASN1_STRING_length@plt+0x534>
   1238c:	add	r1, sp, #24
   12390:	bl	238f4 <ASN1_STRING_length@plt+0x11980>
   12394:	cmp	r0, #0
   12398:	blt	124c8 <ASN1_STRING_length@plt+0x554>
   1239c:	ldr	r0, [pc, #360]	; 1250c <ASN1_STRING_length@plt+0x598>
   123a0:	bl	11e0c <puts@plt>
   123a4:	ldr	r9, [sp, #24]
   123a8:	cmp	r9, #0
   123ac:	beq	12490 <ASN1_STRING_length@plt+0x51c>
   123b0:	ldr	r6, [pc, #344]	; 12510 <ASN1_STRING_length@plt+0x59c>
   123b4:	mov	r0, r9
   123b8:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   123bc:	mov	r8, r0
   123c0:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   123c4:	mov	r4, r0
   123c8:	mov	r0, r8
   123cc:	bl	24860 <ASN1_STRING_length@plt+0x128ec>
   123d0:	mov	r5, r0
   123d4:	mov	r0, r8
   123d8:	bl	244bc <ASN1_STRING_length@plt+0x12548>
   123dc:	mov	r2, r4
   123e0:	ldr	r1, [pc, #300]	; 12514 <ASN1_STRING_length@plt+0x5a0>
   123e4:	str	r5, [sp]
   123e8:	mov	r3, r0
   123ec:	mov	r0, #1
   123f0:	bl	11aac <__printf_chk@plt>
   123f4:	mov	r0, r8
   123f8:	bl	24a14 <ASN1_STRING_length@plt+0x12aa0>
   123fc:	subs	r7, r0, #0
   12400:	movne	fp, #1
   12404:	movne	r4, r7
   12408:	beq	1245c <ASN1_STRING_length@plt+0x4e8>
   1240c:	mov	r0, r4
   12410:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   12414:	cmp	fp, #0
   12418:	ldr	r1, [r6]
   1241c:	mov	fp, #0
   12420:	mov	r5, r0
   12424:	moveq	r0, #44	; 0x2c
   12428:	movne	r0, #32
   1242c:	bl	11e60 <putc@plt>
   12430:	mov	r0, r5
   12434:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   12438:	ldr	r1, [r6]
   1243c:	bl	11f68 <fputs@plt>
   12440:	mov	r0, r5
   12444:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   12448:	mov	r1, r4
   1244c:	mov	r0, r7
   12450:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   12454:	subs	r4, r0, #0
   12458:	bne	1240c <ASN1_STRING_length@plt+0x498>
   1245c:	ldr	r1, [r6]
   12460:	mov	r0, #10
   12464:	bl	11e60 <putc@plt>
   12468:	mov	r0, r7
   1246c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   12470:	mov	r0, r8
   12474:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   12478:	mov	r1, r9
   1247c:	ldr	r0, [sp, #24]
   12480:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   12484:	subs	r9, r0, #0
   12488:	bne	123b4 <ASN1_STRING_length@plt+0x440>
   1248c:	ldr	r9, [sp, #24]
   12490:	mov	r0, r9
   12494:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   12498:	ldr	r0, [sp, #12]
   1249c:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   124a0:	mov	r0, #0
   124a4:	b	12360 <ASN1_STRING_length@plt+0x3ec>
   124a8:	ldr	r3, [pc, #84]	; 12504 <ASN1_STRING_length@plt+0x590>
   124ac:	mov	r2, #26
   124b0:	mov	r1, r4
   124b4:	ldr	r3, [r3]
   124b8:	ldr	r0, [pc, #88]	; 12518 <ASN1_STRING_length@plt+0x5a4>
   124bc:	bl	11d10 <fwrite@plt>
   124c0:	mov	r0, r4
   124c4:	b	12360 <ASN1_STRING_length@plt+0x3ec>
   124c8:	ldr	r3, [pc, #52]	; 12504 <ASN1_STRING_length@plt+0x590>
   124cc:	rsb	r0, r0, #0
   124d0:	ldr	r5, [r3]
   124d4:	bl	119f8 <strerror@plt>
   124d8:	ldr	r2, [pc, #60]	; 1251c <ASN1_STRING_length@plt+0x5a8>
   124dc:	mov	r1, r4
   124e0:	mov	r3, r0
   124e4:	mov	r0, r5
   124e8:	bl	11d94 <__fprintf_chk@plt>
   124ec:	ldr	r0, [sp, #12]
   124f0:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   124f4:	mov	r0, r4
   124f8:	b	12360 <ASN1_STRING_length@plt+0x3ec>
   124fc:	bl	11d88 <__stack_chk_fail@plt>
   12500:	andeq	pc, r3, r8, ror #25
   12504:	andeq	r0, r4, r8, asr #32
   12508:	andeq	sl, r2, ip, lsr #15
   1250c:	andeq	sl, r2, r0, lsl #16
   12510:	andeq	r0, r4, r4, asr #32
   12514:	andeq	sl, r2, r8, lsr #16
   12518:			; <UNDEFINED> instruction: 0x0002a7b8
   1251c:	ldrdeq	sl, [r2], -r4
   12520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12524:	mov	r3, #0
   12528:	ldr	fp, [pc, #1144]	; 129a8 <ASN1_STRING_length@plt+0xa34>
   1252c:	sub	sp, sp, #156	; 0x9c
   12530:	ldr	r9, [pc, #1140]	; 129ac <ASN1_STRING_length@plt+0xa38>
   12534:	ldr	r8, [pc, #1140]	; 129b0 <ASN1_STRING_length@plt+0xa3c>
   12538:	ldr	r2, [fp]
   1253c:	mov	sl, r3
   12540:	mov	r4, r0
   12544:	mov	r6, r1
   12548:	mov	r7, r3
   1254c:	add	r5, sp, #40	; 0x28
   12550:	str	r2, [sp, #148]	; 0x94
   12554:	str	r3, [sp, #32]
   12558:	str	r5, [sp]
   1255c:	mov	r3, r9
   12560:	mov	r2, r8
   12564:	mov	r1, r6
   12568:	mov	r0, r4
   1256c:	str	r7, [sp, #40]	; 0x28
   12570:	bl	11bcc <getopt_long@plt>
   12574:	cmn	r0, #1
   12578:	beq	12704 <ASN1_STRING_length@plt+0x790>
   1257c:	sub	r3, r0, #63	; 0x3f
   12580:	cmp	r3, #55	; 0x37
   12584:	ldrls	pc, [pc, r3, lsl #2]
   12588:	b	126ec <ASN1_STRING_length@plt+0x778>
   1258c:	andeq	r2, r1, r4, ror r6
   12590:	andeq	r2, r1, ip, ror #13
   12594:	andeq	r2, r1, ip, ror #13
   12598:	andeq	r2, r1, ip, ror #13
   1259c:	andeq	r2, r1, ip, ror #13
   125a0:	andeq	r2, r1, ip, ror #13
   125a4:	andeq	r2, r1, ip, ror #13
   125a8:	andeq	r2, r1, ip, ror #13
   125ac:	andeq	r2, r1, ip, ror #13
   125b0:	andeq	r2, r1, ip, ror #13
   125b4:	andeq	r2, r1, ip, ror #13
   125b8:	andeq	r2, r1, ip, ror #13
   125bc:	andeq	r2, r1, ip, ror #13
   125c0:	andeq	r2, r1, ip, ror #13
   125c4:	andeq	r2, r1, ip, ror #13
   125c8:	andeq	r2, r1, ip, ror #13
   125cc:	andeq	r2, r1, ip, ror #13
   125d0:	andeq	r2, r1, ip, ror #13
   125d4:	andeq	r2, r1, ip, ror #13
   125d8:	andeq	r2, r1, ip, ror #13
   125dc:	andeq	r2, r1, ip, ror #13
   125e0:	andeq	r2, r1, ip, ror #13
   125e4:	andeq	r2, r1, ip, ror #13
   125e8:	muleq	r1, r4, r6
   125ec:	andeq	r2, r1, ip, ror #13
   125f0:	andeq	r2, r1, ip, ror #13
   125f4:	andeq	r2, r1, ip, ror #13
   125f8:	andeq	r2, r1, ip, ror #13
   125fc:	andeq	r2, r1, ip, ror #13
   12600:	andeq	r2, r1, ip, ror #13
   12604:	andeq	r2, r1, ip, ror #13
   12608:	andeq	r2, r1, ip, ror #13
   1260c:	andeq	r2, r1, ip, ror #13
   12610:	andeq	r2, r1, ip, ror #13
   12614:	andeq	r2, r1, ip, ror #13
   12618:	andeq	r2, r1, ip, ror #13
   1261c:	andeq	r2, r1, ip, ror #13
   12620:	andeq	r2, r1, ip, ror #13
   12624:	andeq	r2, r1, ip, ror #13
   12628:	andeq	r2, r1, ip, ror #12
   1262c:	andeq	r2, r1, ip, ror #13
   12630:	ldrdeq	r2, [r1], -r0
   12634:	andeq	r2, r1, ip, ror #13
   12638:	andeq	r2, r1, ip, ror #13
   1263c:	andeq	r2, r1, ip, ror #13
   12640:	andeq	r2, r1, ip, ror #13
   12644:	andeq	r2, r1, ip, ror #13
   12648:	andeq	r2, r1, ip, ror #13
   1264c:	andeq	r2, r1, ip, ror #13
   12650:	andeq	r2, r1, ip, ror #13
   12654:	andeq	r2, r1, ip, ror #13
   12658:	andeq	r2, r1, ip, ror #13
   1265c:	andeq	r2, r1, r0, asr #13
   12660:	andeq	r2, r1, ip, ror #13
   12664:	andeq	r2, r1, ip, ror #13
   12668:	andeq	r2, r1, ip, lsr #13
   1266c:	mov	sl, #512	; 0x200
   12670:	b	12558 <ASN1_STRING_length@plt+0x5e4>
   12674:	mov	r4, #1
   12678:	ldr	r2, [sp, #148]	; 0x94
   1267c:	ldr	r3, [fp]
   12680:	mov	r0, r4
   12684:	cmp	r2, r3
   12688:	bne	129a4 <ASN1_STRING_length@plt+0xa30>
   1268c:	add	sp, sp, #156	; 0x9c
   12690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12694:	ldr	r0, [pc, #792]	; 129b4 <ASN1_STRING_length@plt+0xa40>
   12698:	bl	11e0c <puts@plt>
   1269c:	ldr	r0, [pc, #788]	; 129b8 <ASN1_STRING_length@plt+0xa44>
   126a0:	bl	11e0c <puts@plt>
   126a4:	mov	r4, #0
   126a8:	b	12678 <ASN1_STRING_length@plt+0x704>
   126ac:	ldr	r2, [pc, #776]	; 129bc <ASN1_STRING_length@plt+0xa48>
   126b0:	ldr	r3, [r2]
   126b4:	add	r3, r3, #1
   126b8:	str	r3, [r2]
   126bc:	b	12558 <ASN1_STRING_length@plt+0x5e4>
   126c0:	ldr	r2, [pc, #760]	; 129c0 <ASN1_STRING_length@plt+0xa4c>
   126c4:	mov	r3, #1
   126c8:	str	r3, [r2]
   126cc:	b	12558 <ASN1_STRING_length@plt+0x5e4>
   126d0:	ldr	r3, [pc, #748]	; 129c4 <ASN1_STRING_length@plt+0xa50>
   126d4:	ldr	r1, [pc, #748]	; 129c8 <ASN1_STRING_length@plt+0xa54>
   126d8:	mov	r0, #1
   126dc:	ldr	r2, [r3]
   126e0:	bl	11aac <__printf_chk@plt>
   126e4:	mov	r4, #0
   126e8:	b	12678 <ASN1_STRING_length@plt+0x704>
   126ec:	mov	r2, r0
   126f0:	ldr	r1, [pc, #724]	; 129cc <ASN1_STRING_length@plt+0xa58>
   126f4:	mov	r0, #3
   126f8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   126fc:	mov	r4, #1
   12700:	b	12678 <ASN1_STRING_length@plt+0x704>
   12704:	ldr	r3, [pc, #692]	; 129c0 <ASN1_STRING_length@plt+0xa4c>
   12708:	ldr	r7, [pc, #704]	; 129d0 <ASN1_STRING_length@plt+0xa5c>
   1270c:	ldr	r0, [r3]
   12710:	adds	r0, r0, #0
   12714:	movne	r0, #1
   12718:	bl	1a18c <ASN1_STRING_length@plt+0x8218>
   1271c:	ldr	r3, [r7]
   12720:	cmp	r3, r4
   12724:	bge	1284c <ASN1_STRING_length@plt+0x8d8>
   12728:	add	r1, sp, #32
   1272c:	mov	r0, #0
   12730:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   12734:	subs	r3, r0, #0
   12738:	str	r3, [sp, #12]
   1273c:	beq	128a8 <ASN1_STRING_length@plt+0x934>
   12740:	ldr	r3, [pc, #628]	; 129bc <ASN1_STRING_length@plt+0xa48>
   12744:	ldr	r1, [r3]
   12748:	bl	1a314 <ASN1_STRING_length@plt+0x83a0>
   1274c:	ldr	r7, [r7]
   12750:	cmp	r4, r7
   12754:	ble	12950 <ASN1_STRING_length@plt+0x9dc>
   12758:	sub	r3, r7, #-1073741823	; 0xc0000001
   1275c:	add	r3, r6, r3, lsl #2
   12760:	mov	r6, #0
   12764:	str	r6, [sp, #16]
   12768:	mov	r6, r4
   1276c:	mov	r4, r3
   12770:	b	127f0 <ASN1_STRING_length@plt+0x87c>
   12774:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   12778:	cmp	r0, #0
   1277c:	blt	12864 <ASN1_STRING_length@plt+0x8f0>
   12780:	cmp	sl, #0
   12784:	ldr	r9, [sp, #36]	; 0x24
   12788:	bne	127c8 <ASN1_STRING_length@plt+0x854>
   1278c:	mov	r0, r9
   12790:	bl	23bc8 <ASN1_STRING_length@plt+0x11c54>
   12794:	cmp	r0, #0
   12798:	mov	r0, r9
   1279c:	beq	12970 <ASN1_STRING_length@plt+0x9fc>
   127a0:	blt	12958 <ASN1_STRING_length@plt+0x9e4>
   127a4:	bl	24a14 <ASN1_STRING_length@plt+0x12aa0>
   127a8:	subs	r3, r0, #0
   127ac:	str	r3, [sp, #20]
   127b0:	mov	r0, r9
   127b4:	bne	128bc <ASN1_STRING_length@plt+0x948>
   127b8:	bl	24860 <ASN1_STRING_length@plt+0x128ec>
   127bc:	cmp	r0, #0
   127c0:	bne	12988 <ASN1_STRING_length@plt+0xa14>
   127c4:	ldr	r9, [sp, #36]	; 0x24
   127c8:	mov	r0, r9
   127cc:	mov	r1, sl
   127d0:	bl	22b98 <ASN1_STRING_length@plt+0x10c24>
   127d4:	cmp	r0, #0
   127d8:	blt	12820 <ASN1_STRING_length@plt+0x8ac>
   127dc:	add	r7, r7, #1
   127e0:	ldr	r0, [sp, #36]	; 0x24
   127e4:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   127e8:	cmp	r6, r7
   127ec:	beq	12898 <ASN1_STRING_length@plt+0x924>
   127f0:	ldr	r8, [r4, #4]!
   127f4:	mov	r2, r5
   127f8:	mov	r1, r8
   127fc:	mov	r0, #3
   12800:	bl	11d40 <__xstat64@plt>
   12804:	add	r2, sp, #36	; 0x24
   12808:	mov	r1, r8
   1280c:	cmp	r0, #0
   12810:	ldr	r0, [sp, #12]
   12814:	beq	12774 <ASN1_STRING_length@plt+0x800>
   12818:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   1281c:	b	12778 <ASN1_STRING_length@plt+0x804>
   12820:	rsb	r0, r0, #0
   12824:	bl	119f8 <strerror@plt>
   12828:	mov	r2, r8
   1282c:	ldr	r1, [pc, #416]	; 129d4 <ASN1_STRING_length@plt+0xa60>
   12830:	mov	r3, r0
   12834:	mov	r0, #3
   12838:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1283c:	ldr	r3, [sp, #16]
   12840:	add	r3, r3, #1
   12844:	str	r3, [sp, #16]
   12848:	b	127dc <ASN1_STRING_length@plt+0x868>
   1284c:	ldr	r1, [pc, #388]	; 129d8 <ASN1_STRING_length@plt+0xa64>
   12850:	mov	r0, #3
   12854:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12858:	mov	r4, #1
   1285c:	bl	1a1b8 <ASN1_STRING_length@plt+0x8244>
   12860:	b	12678 <ASN1_STRING_length@plt+0x704>
   12864:	rsb	r0, r0, #0
   12868:	ldr	r6, [sp, #16]
   1286c:	bl	119f8 <strerror@plt>
   12870:	adds	r4, r6, #0
   12874:	mov	r2, r8
   12878:	ldr	r1, [pc, #348]	; 129dc <ASN1_STRING_length@plt+0xa68>
   1287c:	movne	r4, #1
   12880:	mov	r3, r0
   12884:	mov	r0, #3
   12888:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1288c:	ldr	r0, [sp, #12]
   12890:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   12894:	b	1285c <ASN1_STRING_length@plt+0x8e8>
   12898:	ldr	r6, [sp, #16]
   1289c:	adds	r4, r6, #0
   128a0:	movne	r4, #1
   128a4:	b	1288c <ASN1_STRING_length@plt+0x918>
   128a8:	ldr	r1, [pc, #304]	; 129e0 <ASN1_STRING_length@plt+0xa6c>
   128ac:	mov	r0, #3
   128b0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   128b4:	mov	r4, #1
   128b8:	b	1285c <ASN1_STRING_length@plt+0x8e8>
   128bc:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   128c0:	ldr	r1, [pc, #284]	; 129e4 <ASN1_STRING_length@plt+0xa70>
   128c4:	mov	r2, r0
   128c8:	mov	r0, #3
   128cc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   128d0:	ldr	r3, [sp, #20]
   128d4:	str	sl, [sp, #24]
   128d8:	mov	r8, r3
   128dc:	mov	sl, r3
   128e0:	str	r4, [sp, #28]
   128e4:	mov	r0, r8
   128e8:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   128ec:	ldr	r3, [pc, #244]	; 129e8 <ASN1_STRING_length@plt+0xa74>
   128f0:	ldr	r4, [r3]
   128f4:	mov	r9, r0
   128f8:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   128fc:	ldr	r2, [pc, #232]	; 129ec <ASN1_STRING_length@plt+0xa78>
   12900:	mov	r1, #1
   12904:	mov	r3, r0
   12908:	mov	r0, r4
   1290c:	bl	11d94 <__fprintf_chk@plt>
   12910:	mov	r0, r9
   12914:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   12918:	mov	r1, r8
   1291c:	mov	r0, sl
   12920:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   12924:	subs	r8, r0, #0
   12928:	bne	128e4 <ASN1_STRING_length@plt+0x970>
   1292c:	ldr	r3, [pc, #180]	; 129e8 <ASN1_STRING_length@plt+0xa74>
   12930:	mov	r0, #10
   12934:	ldr	sl, [sp, #24]
   12938:	ldr	r1, [r3]
   1293c:	ldr	r4, [sp, #28]
   12940:	bl	11db8 <fputc@plt>
   12944:	ldr	r0, [sp, #20]
   12948:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   1294c:	b	1283c <ASN1_STRING_length@plt+0x8c8>
   12950:	mov	r4, #0
   12954:	b	1288c <ASN1_STRING_length@plt+0x918>
   12958:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   1295c:	ldr	r1, [pc, #140]	; 129f0 <ASN1_STRING_length@plt+0xa7c>
   12960:	mov	r2, r0
   12964:	mov	r0, #3
   12968:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1296c:	b	1283c <ASN1_STRING_length@plt+0x8c8>
   12970:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   12974:	ldr	r1, [pc, #120]	; 129f4 <ASN1_STRING_length@plt+0xa80>
   12978:	mov	r2, r0
   1297c:	mov	r0, #3
   12980:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12984:	b	1283c <ASN1_STRING_length@plt+0x8c8>
   12988:	mov	r0, r9
   1298c:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   12990:	ldr	r1, [pc, #96]	; 129f8 <ASN1_STRING_length@plt+0xa84>
   12994:	mov	r2, r0
   12998:	mov	r0, #3
   1299c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   129a0:	b	1283c <ASN1_STRING_length@plt+0x8c8>
   129a4:	bl	11d88 <__stack_chk_fail@plt>
   129a8:	andeq	pc, r3, r8, ror #25
   129ac:	muleq	r2, r8, r8
   129b0:	strdeq	sl, [r2], -r8
   129b4:	andeq	sl, r2, r0, ror #13
   129b8:	strdeq	sl, [r2], -r0
   129bc:	andeq	r0, r4, r0
   129c0:	andeq	r0, r4, r8, asr r0
   129c4:	andeq	r0, r4, r8, lsr r0
   129c8:	andeq	sl, r2, r0, lsl #18
   129cc:	andeq	sl, r2, ip, ror sl
   129d0:	andeq	r0, r4, r0, asr #32
   129d4:	andeq	sl, r2, r0, ror #22
   129d8:	andeq	sl, r2, r4, lsr #21
   129dc:	ldrdeq	sl, [r2], -r0
   129e0:			; <UNDEFINED> instruction: 0x0002aabc
   129e4:	andeq	sl, r2, ip, lsr #22
   129e8:	andeq	r0, r4, r8, asr #32
   129ec:	andeq	sl, r2, r4, asr #22
   129f0:	andeq	sl, r2, r8, lsl #22
   129f4:	strdeq	sl, [r2], -r0
   129f8:	andeq	sl, r2, r8, asr #22
   129fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a00:	mov	r3, #0
   12a04:	ldr	r4, [pc, #1004]	; 12df8 <ASN1_STRING_length@plt+0xe84>
   12a08:	ldr	sl, [pc, #1004]	; 12dfc <ASN1_STRING_length@plt+0xe88>
   12a0c:	ldr	r9, [pc, #1004]	; 12e00 <ASN1_STRING_length@plt+0xe8c>
   12a10:	sub	sp, sp, #44	; 0x2c
   12a14:	ldr	r2, [r4]
   12a18:	mov	r7, r3
   12a1c:	mov	r6, r0
   12a20:	mov	r5, r1
   12a24:	mov	r8, r3
   12a28:	str	r2, [sp, #36]	; 0x24
   12a2c:	str	r3, [sp, #28]
   12a30:	add	r3, sp, #32
   12a34:	str	r3, [sp]
   12a38:	mov	r2, r9
   12a3c:	mov	r3, sl
   12a40:	mov	r1, r5
   12a44:	mov	r0, r6
   12a48:	str	r8, [sp, #32]
   12a4c:	bl	11bcc <getopt_long@plt>
   12a50:	cmn	r0, #1
   12a54:	beq	12b3c <ASN1_STRING_length@plt+0xbc8>
   12a58:	sub	r3, r0, #63	; 0x3f
   12a5c:	cmp	r3, #52	; 0x34
   12a60:	ldrls	pc, [pc, r3, lsl #2]
   12a64:	b	12c68 <ASN1_STRING_length@plt+0xcf4>
   12a68:	andeq	r2, r1, r0, lsl ip
   12a6c:	andeq	r2, r1, r8, ror #24
   12a70:	andeq	r2, r1, r8, ror #24
   12a74:	andeq	r2, r1, r8, ror #24
   12a78:	andeq	r2, r1, r8, ror #24
   12a7c:	andeq	r2, r1, r8, ror #24
   12a80:	andeq	r2, r1, r8, ror #24
   12a84:	andeq	r2, r1, r8, ror #24
   12a88:	andeq	r2, r1, r8, ror #24
   12a8c:	andeq	r2, r1, r8, ror #24
   12a90:	andeq	r2, r1, r8, ror #24
   12a94:	andeq	r2, r1, r8, ror #24
   12a98:	andeq	r2, r1, r8, ror #24
   12a9c:	andeq	r2, r1, r8, ror #24
   12aa0:	andeq	r2, r1, r8, ror #24
   12aa4:	andeq	r2, r1, r8, ror #24
   12aa8:	andeq	r2, r1, r8, ror #24
   12aac:	andeq	r2, r1, r8, ror #24
   12ab0:	andeq	r2, r1, r8, ror #24
   12ab4:	andeq	r2, r1, r8, ror #24
   12ab8:	andeq	r2, r1, r8, ror #24
   12abc:	andeq	r2, r1, r8, ror #24
   12ac0:	andeq	r2, r1, r8, ror #24
   12ac4:	andeq	r2, r1, r0, asr ip
   12ac8:	andeq	r2, r1, r8, ror #24
   12acc:	andeq	r2, r1, r8, ror #24
   12ad0:	andeq	r2, r1, r8, ror #24
   12ad4:	andeq	r2, r1, r8, ror #24
   12ad8:	andeq	r2, r1, r8, ror #24
   12adc:	andeq	r2, r1, r8, ror #24
   12ae0:	andeq	r2, r1, r8, ror #24
   12ae4:	andeq	r2, r1, r8, ror #24
   12ae8:	andeq	r2, r1, r8, ror #24
   12aec:	andeq	r2, r1, r8, ror #24
   12af0:	andeq	r2, r1, r8, ror #24
   12af4:	andeq	r2, r1, r8, ror #24
   12af8:	andeq	r2, r1, r8, ror #24
   12afc:	andeq	r2, r1, r8, ror #24
   12b00:	andeq	r2, r1, r8, ror #24
   12b04:	andeq	r2, r1, r8, asr #24
   12b08:	andeq	r2, r1, r8, ror #24
   12b0c:	andeq	r2, r1, ip, lsr #24
   12b10:	andeq	r2, r1, r8, ror #24
   12b14:	andeq	r2, r1, r8, ror #24
   12b18:	andeq	r2, r1, r8, ror #24
   12b1c:	andeq	r2, r1, r8, ror #24
   12b20:	andeq	r2, r1, r8, ror #24
   12b24:	andeq	r2, r1, r8, ror #24
   12b28:	andeq	r2, r1, r8, ror #24
   12b2c:	andeq	r2, r1, r0, lsr sl
   12b30:	andeq	r2, r1, r8, ror #24
   12b34:	andeq	r2, r1, r8, ror #24
   12b38:	andeq	r2, r1, r0, lsr sl
   12b3c:	ldr	r3, [pc, #704]	; 12e04 <ASN1_STRING_length@plt+0xe90>
   12b40:	ldr	sl, [r3]
   12b44:	cmp	sl, r6
   12b48:	bge	12ce4 <ASN1_STRING_length@plt+0xd70>
   12b4c:	ldr	r3, [r5, sl, lsl #2]
   12b50:	ldr	r1, [pc, #688]	; 12e08 <ASN1_STRING_length@plt+0xe94>
   12b54:	mov	r0, r3
   12b58:	str	r3, [sp, #16]
   12b5c:	bl	11f14 <strcmp@plt>
   12b60:	add	r5, r5, sl, lsl #2
   12b64:	cmp	r0, #0
   12b68:	beq	12cf8 <ASN1_STRING_length@plt+0xd84>
   12b6c:	add	sl, sl, #1
   12b70:	cmp	r6, sl
   12b74:	ble	12dec <ASN1_STRING_length@plt+0xe78>
   12b78:	mov	r8, #0
   12b7c:	mov	fp, r8
   12b80:	str	r7, [sp, #20]
   12b84:	str	r6, [sp, #12]
   12b88:	b	12bd4 <ASN1_STRING_length@plt+0xc60>
   12b8c:	cmp	r8, #0
   12b90:	addne	r1, r8, #1
   12b94:	movne	r3, #32
   12b98:	strbne	r3, [r9, r8]
   12b9c:	addne	r0, r9, r1
   12ba0:	addne	r8, r6, r1
   12ba4:	moveq	r0, r9
   12ba8:	mov	r2, r6
   12bac:	mov	r1, r7
   12bb0:	moveq	r8, r6
   12bb4:	bl	11c5c <memcpy@plt>
   12bb8:	ldr	r3, [sp, #12]
   12bbc:	add	sl, sl, #1
   12bc0:	cmp	r3, sl
   12bc4:	mov	r3, #0
   12bc8:	strb	r3, [r9, r8]
   12bcc:	mov	fp, r9
   12bd0:	beq	12c80 <ASN1_STRING_length@plt+0xd0c>
   12bd4:	ldr	r7, [r5, #4]!
   12bd8:	mov	r0, r7
   12bdc:	bl	11c44 <strlen@plt>
   12be0:	add	r1, r0, r8
   12be4:	mov	r6, r0
   12be8:	add	r1, r1, #2
   12bec:	mov	r0, fp
   12bf0:	bl	11ec0 <realloc@plt>
   12bf4:	subs	r9, r0, #0
   12bf8:	bne	12b8c <ASN1_STRING_length@plt+0xc18>
   12bfc:	mov	r0, #3
   12c00:	ldr	r1, [pc, #516]	; 12e0c <ASN1_STRING_length@plt+0xe98>
   12c04:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12c08:	mov	r0, fp
   12c0c:	bl	11ba8 <free@plt>
   12c10:	mov	r0, #1
   12c14:	ldr	r2, [sp, #36]	; 0x24
   12c18:	ldr	r3, [r4]
   12c1c:	cmp	r2, r3
   12c20:	bne	12df4 <ASN1_STRING_length@plt+0xe80>
   12c24:	add	sp, sp, #44	; 0x2c
   12c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c2c:	ldr	r3, [pc, #476]	; 12e10 <ASN1_STRING_length@plt+0xe9c>
   12c30:	ldr	r1, [pc, #476]	; 12e14 <ASN1_STRING_length@plt+0xea0>
   12c34:	mov	r0, #1
   12c38:	ldr	r2, [r3]
   12c3c:	bl	11aac <__printf_chk@plt>
   12c40:	mov	r0, #0
   12c44:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12c48:	mov	r7, #3
   12c4c:	b	12a30 <ASN1_STRING_length@plt+0xabc>
   12c50:	ldr	r0, [pc, #448]	; 12e18 <ASN1_STRING_length@plt+0xea4>
   12c54:	bl	11e0c <puts@plt>
   12c58:	ldr	r0, [pc, #444]	; 12e1c <ASN1_STRING_length@plt+0xea8>
   12c5c:	bl	11e0c <puts@plt>
   12c60:	mov	r0, #0
   12c64:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12c68:	mov	r2, r0
   12c6c:	ldr	r1, [pc, #428]	; 12e20 <ASN1_STRING_length@plt+0xeac>
   12c70:	mov	r0, #3
   12c74:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12c78:	mov	r0, #1
   12c7c:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12c80:	ldr	r7, [sp, #20]
   12c84:	add	r1, sp, #28
   12c88:	mov	r0, #0
   12c8c:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   12c90:	subs	r6, r0, #0
   12c94:	beq	12d2c <ASN1_STRING_length@plt+0xdb8>
   12c98:	add	r2, sp, #32
   12c9c:	ldr	r1, [sp, #16]
   12ca0:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   12ca4:	subs	r5, r0, #0
   12ca8:	blt	12d0c <ASN1_STRING_length@plt+0xd98>
   12cac:	mov	r1, r7
   12cb0:	mov	r2, r9
   12cb4:	ldr	r0, [sp, #32]
   12cb8:	bl	22c44 <ASN1_STRING_length@plt+0x10cd0>
   12cbc:	subs	r5, r0, #0
   12cc0:	blt	12d48 <ASN1_STRING_length@plt+0xdd4>
   12cc4:	ldr	r0, [sp, #32]
   12cc8:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   12ccc:	mov	r0, r6
   12cd0:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   12cd4:	mov	r0, r9
   12cd8:	bl	11ba8 <free@plt>
   12cdc:	lsr	r0, r5, #31
   12ce0:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12ce4:	mov	r0, #3
   12ce8:	ldr	r1, [pc, #308]	; 12e24 <ASN1_STRING_length@plt+0xeb0>
   12cec:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12cf0:	mov	r0, #1
   12cf4:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12cf8:	mov	r0, #3
   12cfc:	ldr	r1, [pc, #292]	; 12e28 <ASN1_STRING_length@plt+0xeb4>
   12d00:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12d04:	mov	r0, #1
   12d08:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12d0c:	rsb	r0, r5, #0
   12d10:	bl	119f8 <strerror@plt>
   12d14:	ldr	r2, [sp, #16]
   12d18:	ldr	r1, [pc, #268]	; 12e2c <ASN1_STRING_length@plt+0xeb8>
   12d1c:	mov	r3, r0
   12d20:	mov	r0, #3
   12d24:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12d28:	b	12ccc <ASN1_STRING_length@plt+0xd58>
   12d2c:	ldr	r1, [pc, #252]	; 12e30 <ASN1_STRING_length@plt+0xebc>
   12d30:	mov	r0, #3
   12d34:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12d38:	mov	r0, r9
   12d3c:	bl	11ba8 <free@plt>
   12d40:	mov	r0, #1
   12d44:	b	12c14 <ASN1_STRING_length@plt+0xca0>
   12d48:	rsb	r0, r5, #0
   12d4c:	sub	r3, r0, #2
   12d50:	cmp	r3, #20
   12d54:	ldrls	pc, [pc, r3, lsl #2]
   12d58:	b	12de0 <ASN1_STRING_length@plt+0xe6c>
   12d5c:	ldrdeq	r2, [r1], -r8
   12d60:	ldrdeq	r2, [r1], -r0
   12d64:	andeq	r2, r1, r0, ror #27
   12d68:	andeq	r2, r1, r0, ror #27
   12d6c:	andeq	r2, r1, r0, ror #27
   12d70:	andeq	r2, r1, r0, ror #27
   12d74:	andeq	r2, r1, r8, asr #27
   12d78:	andeq	r2, r1, r0, ror #27
   12d7c:	andeq	r2, r1, r0, ror #27
   12d80:	andeq	r2, r1, r0, ror #27
   12d84:	andeq	r2, r1, r0, ror #27
   12d88:	andeq	r2, r1, r0, ror #27
   12d8c:	andeq	r2, r1, r0, ror #27
   12d90:	andeq	r2, r1, r0, ror #27
   12d94:	andeq	r2, r1, r0, ror #27
   12d98:	andeq	r2, r1, r0, ror #27
   12d9c:	andeq	r2, r1, r0, ror #27
   12da0:	andeq	r2, r1, r0, ror #27
   12da4:	andeq	r2, r1, r0, ror #27
   12da8:	andeq	r2, r1, r0, ror #27
   12dac:			; <UNDEFINED> instruction: 0x00012db0
   12db0:	ldr	r3, [pc, #124]	; 12e34 <ASN1_STRING_length@plt+0xec0>
   12db4:	ldr	r2, [sp, #16]
   12db8:	ldr	r1, [pc, #120]	; 12e38 <ASN1_STRING_length@plt+0xec4>
   12dbc:	mov	r0, #3
   12dc0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12dc4:	b	12cc4 <ASN1_STRING_length@plt+0xd50>
   12dc8:	ldr	r3, [pc, #108]	; 12e3c <ASN1_STRING_length@plt+0xec8>
   12dcc:	b	12db4 <ASN1_STRING_length@plt+0xe40>
   12dd0:	ldr	r3, [pc, #104]	; 12e40 <ASN1_STRING_length@plt+0xecc>
   12dd4:	b	12db4 <ASN1_STRING_length@plt+0xe40>
   12dd8:	ldr	r3, [pc, #100]	; 12e44 <ASN1_STRING_length@plt+0xed0>
   12ddc:	b	12db4 <ASN1_STRING_length@plt+0xe40>
   12de0:	bl	119f8 <strerror@plt>
   12de4:	mov	r3, r0
   12de8:	b	12db4 <ASN1_STRING_length@plt+0xe40>
   12dec:	mov	r9, #0
   12df0:	b	12c84 <ASN1_STRING_length@plt+0xd10>
   12df4:	bl	11d88 <__stack_chk_fail@plt>
   12df8:	andeq	pc, r3, r8, ror #25
   12dfc:	andeq	sl, r2, r4, asr #23
   12e00:	strdeq	sl, [r2], -r4
   12e04:	andeq	r0, r4, r0, asr #32
   12e08:	andeq	sl, r2, ip, ror #25
   12e0c:	andeq	ip, r2, r4, ror #5
   12e10:	andeq	r0, r4, r8, lsr r0
   12e14:	andeq	sl, r2, r4, ror #24
   12e18:	andeq	sl, r2, r0, ror #13
   12e1c:	strdeq	sl, [r2], -r0
   12e20:	andeq	sl, r2, ip, ror sl
   12e24:	ldrdeq	sl, [r2], -r8
   12e28:	strdeq	sl, [r2], -r0
   12e2c:	andeq	sl, r2, r0, lsr #26
   12e30:			; <UNDEFINED> instruction: 0x0002aabc
   12e34:	andeq	sl, r2, r4, lsr ip
   12e38:	andeq	sl, r2, r0, asr #26
   12e3c:	strdeq	sl, [r2], -ip
   12e40:	andeq	sl, r2, r4, lsl ip
   12e44:	andeq	sl, r2, r8, asr #24
   12e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e4c:	mov	r7, r1
   12e50:	sub	sp, sp, #12
   12e54:	mov	r4, r0
   12e58:	mov	r1, #58	; 0x3a
   12e5c:	mov	r0, r7
   12e60:	mov	sl, r2
   12e64:	bl	11ac4 <strchr@plt>
   12e68:	subs	r6, r0, #0
   12e6c:	beq	12f58 <ASN1_STRING_length@plt+0xfe4>
   12e70:	mov	r0, r4
   12e74:	ldr	r1, [pc, #268]	; 12f88 <ASN1_STRING_length@plt+0x1014>
   12e78:	bl	11f14 <strcmp@plt>
   12e7c:	add	r5, r6, #1
   12e80:	sub	r6, r6, r7
   12e84:	mov	r4, r0
   12e88:	mov	r0, r5
   12e8c:	bl	11c44 <strlen@plt>
   12e90:	cmp	r4, #0
   12e94:	ldr	r9, [sl]
   12e98:	movne	r3, #0
   12e9c:	moveq	fp, r5
   12ea0:	mov	r8, r0
   12ea4:	moveq	r8, r4
   12ea8:	streq	r0, [sp, #4]
   12eac:	moveq	r5, r8
   12eb0:	strne	r3, [sp, #4]
   12eb4:	movne	fp, r3
   12eb8:	cmp	r9, #0
   12ebc:	beq	12f20 <ASN1_STRING_length@plt+0xfac>
   12ec0:	mov	r4, r9
   12ec4:	b	12ed4 <ASN1_STRING_length@plt+0xf60>
   12ec8:	ldr	r4, [r4]
   12ecc:	cmp	r4, #0
   12ed0:	beq	12f20 <ASN1_STRING_length@plt+0xfac>
   12ed4:	ldr	r2, [r4, #16]
   12ed8:	cmp	r6, r2
   12edc:	bne	12ec8 <ASN1_STRING_length@plt+0xf54>
   12ee0:	mov	r2, r6
   12ee4:	mov	r1, r7
   12ee8:	ldr	r0, [r4, #4]
   12eec:	bl	11a40 <memcmp@plt>
   12ef0:	cmp	r0, #0
   12ef4:	bne	12ec8 <ASN1_STRING_length@plt+0xf54>
   12ef8:	cmp	fp, #0
   12efc:	mov	r0, #0
   12f00:	ldrne	r3, [sp, #4]
   12f04:	strne	fp, [r4, #8]
   12f08:	strne	r3, [r4, #20]
   12f0c:	cmp	r5, #0
   12f10:	strne	r5, [r4, #12]
   12f14:	strne	r8, [r4, #24]
   12f18:	add	sp, sp, #12
   12f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f20:	mov	r0, #28
   12f24:	bl	11d64 <malloc@plt>
   12f28:	subs	r4, r0, #0
   12f2c:	beq	12f74 <ASN1_STRING_length@plt+0x1000>
   12f30:	mov	r2, #0
   12f34:	str	r9, [r4]
   12f38:	str	r4, [sl]
   12f3c:	str	r7, [r4, #4]
   12f40:	str	r6, [r4, #16]
   12f44:	str	r2, [r4, #8]
   12f48:	str	r2, [r4, #12]
   12f4c:	str	r2, [r4, #20]
   12f50:	str	r2, [r4, #24]
   12f54:	b	12ef8 <ASN1_STRING_length@plt+0xf84>
   12f58:	mov	r0, #3
   12f5c:	mov	r3, r7
   12f60:	mov	r2, r4
   12f64:	ldr	r1, [pc, #32]	; 12f8c <ASN1_STRING_length@plt+0x1018>
   12f68:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12f6c:	mov	r0, r6
   12f70:	b	12f18 <ASN1_STRING_length@plt+0xfa4>
   12f74:	mov	r0, #3
   12f78:	ldr	r1, [pc, #16]	; 12f90 <ASN1_STRING_length@plt+0x101c>
   12f7c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   12f80:	mvn	r0, #11
   12f84:	b	12f18 <ASN1_STRING_length@plt+0xfa4>
   12f88:	andeq	fp, r2, r8, lsr #5
   12f8c:	andeq	fp, r2, r4, lsl #5
   12f90:			; <UNDEFINED> instruction: 0x0002b2b0
   12f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f98:	mov	r3, #0
   12f9c:	ldr	r6, [pc, #1164]	; 13430 <ASN1_STRING_length@plt+0x14bc>
   12fa0:	ldr	r9, [pc, #1164]	; 13434 <ASN1_STRING_length@plt+0x14c0>
   12fa4:	sub	sp, sp, #52	; 0x34
   12fa8:	ldr	r2, [r6]
   12fac:	ldr	r1, [r9]
   12fb0:	cmp	r2, r3
   12fb4:	str	r1, [sp, #44]	; 0x2c
   12fb8:	str	r3, [sp, #32]
   12fbc:	str	r3, [sp, #36]	; 0x24
   12fc0:	mov	r4, r0
   12fc4:	beq	13350 <ASN1_STRING_length@plt+0x13dc>
   12fc8:	mov	r0, r2
   12fcc:	ldr	r1, [pc, #1124]	; 13438 <ASN1_STRING_length@plt+0x14c4>
   12fd0:	bl	11f14 <strcmp@plt>
   12fd4:	subs	r8, r0, #0
   12fd8:	beq	13394 <ASN1_STRING_length@plt+0x1420>
   12fdc:	add	r1, sp, #32
   12fe0:	mov	r0, r4
   12fe4:	bl	24ce4 <ASN1_STRING_length@plt+0x12d70>
   12fe8:	subs	r8, r0, #0
   12fec:	blt	133b8 <ASN1_STRING_length@plt+0x1444>
   12ff0:	ldr	r0, [r6]
   12ff4:	ldr	r4, [sp, #32]
   12ff8:	cmp	r0, #0
   12ffc:	beq	1320c <ASN1_STRING_length@plt+0x1298>
   13000:	ldr	r1, [pc, #1076]	; 1343c <ASN1_STRING_length@plt+0x14c8>
   13004:	bl	11f14 <strcmp@plt>
   13008:	subs	r7, r0, #0
   1300c:	beq	13218 <ASN1_STRING_length@plt+0x12a4>
   13010:	cmp	r4, #0
   13014:	beq	13108 <ASN1_STRING_length@plt+0x1194>
   13018:	ldr	fp, [pc, #1052]	; 1343c <ASN1_STRING_length@plt+0x14c8>
   1301c:	ldr	sl, [pc, #1052]	; 13440 <ASN1_STRING_length@plt+0x14cc>
   13020:	b	13048 <ASN1_STRING_length@plt+0x10d4>
   13024:	mov	r1, r5
   13028:	bl	11f14 <strcmp@plt>
   1302c:	cmp	r0, #0
   13030:	beq	130d8 <ASN1_STRING_length@plt+0x1164>
   13034:	mov	r1, r4
   13038:	ldr	r0, [sp, #32]
   1303c:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13040:	subs	r4, r0, #0
   13044:	beq	13150 <ASN1_STRING_length@plt+0x11dc>
   13048:	mov	r0, r4
   1304c:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   13050:	mov	r5, r0
   13054:	mov	r0, r4
   13058:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   1305c:	mov	r7, r0
   13060:	ldr	r0, [r6]
   13064:	cmp	r0, #0
   13068:	bne	13024 <ASN1_STRING_length@plt+0x10b0>
   1306c:	mov	r1, fp
   13070:	mov	r0, r5
   13074:	bl	11f14 <strcmp@plt>
   13078:	cmp	r0, #0
   1307c:	beq	130f0 <ASN1_STRING_length@plt+0x117c>
   13080:	ldr	r1, [pc, #956]	; 13444 <ASN1_STRING_length@plt+0x14d0>
   13084:	mov	r0, r5
   13088:	bl	11f14 <strcmp@plt>
   1308c:	cmp	r0, #0
   13090:	beq	130f0 <ASN1_STRING_length@plt+0x117c>
   13094:	ldrb	r3, [sl]
   13098:	cmp	r3, #0
   1309c:	beq	13378 <ASN1_STRING_length@plt+0x1404>
   130a0:	mov	r0, r5
   130a4:	str	r3, [sp, #28]
   130a8:	bl	11c44 <strlen@plt>
   130ac:	ldr	r3, [sp, #28]
   130b0:	str	r7, [sp, #4]
   130b4:	str	r3, [sp, #8]
   130b8:	ldr	r3, [pc, #904]	; 13448 <ASN1_STRING_length@plt+0x14d4>
   130bc:	mov	r2, r5
   130c0:	str	r3, [sp]
   130c4:	ldr	r1, [pc, #896]	; 1344c <ASN1_STRING_length@plt+0x14d8>
   130c8:	rsb	r3, r0, #15
   130cc:	mov	r0, #1
   130d0:	bl	11aac <__printf_chk@plt>
   130d4:	b	13034 <ASN1_STRING_length@plt+0x10c0>
   130d8:	mov	r2, r7
   130dc:	ldrb	r3, [sl]
   130e0:	ldr	r1, [pc, #872]	; 13450 <ASN1_STRING_length@plt+0x14dc>
   130e4:	mov	r0, #1
   130e8:	bl	11aac <__printf_chk@plt>
   130ec:	b	13034 <ASN1_STRING_length@plt+0x10c0>
   130f0:	mov	r1, r7
   130f4:	mov	r0, r5
   130f8:	add	r2, sp, #36	; 0x24
   130fc:	bl	12e48 <ASN1_STRING_length@plt+0xed4>
   13100:	subs	r8, r0, #0
   13104:	bge	13034 <ASN1_STRING_length@plt+0x10c0>
   13108:	ldr	r0, [sp, #36]	; 0x24
   1310c:	cmp	r0, #0
   13110:	beq	1312c <ASN1_STRING_length@plt+0x11b8>
   13114:	ldr	r3, [r0]
   13118:	str	r3, [sp, #36]	; 0x24
   1311c:	bl	11ba8 <free@plt>
   13120:	ldr	r0, [sp, #36]	; 0x24
   13124:	cmp	r0, #0
   13128:	bne	13114 <ASN1_STRING_length@plt+0x11a0>
   1312c:	ldr	r0, [sp, #32]
   13130:	bl	24ce0 <ASN1_STRING_length@plt+0x12d6c>
   13134:	ldr	r2, [sp, #44]	; 0x2c
   13138:	ldr	r3, [r9]
   1313c:	mov	r0, r8
   13140:	cmp	r2, r3
   13144:	bne	1342c <ASN1_STRING_length@plt+0x14b8>
   13148:	add	sp, sp, #52	; 0x34
   1314c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13150:	ldr	r3, [r6]
   13154:	cmp	r3, #0
   13158:	bne	13108 <ASN1_STRING_length@plt+0x1194>
   1315c:	ldr	r4, [sp, #36]	; 0x24
   13160:	cmp	r4, #0
   13164:	beq	1312c <ASN1_STRING_length@plt+0x11b8>
   13168:	ldr	r5, [pc, #720]	; 13440 <ASN1_STRING_length@plt+0x14cc>
   1316c:	ldr	r6, [pc, #736]	; 13454 <ASN1_STRING_length@plt+0x14e0>
   13170:	ldr	sl, [pc, #736]	; 13458 <ASN1_STRING_length@plt+0x14e4>
   13174:	ldr	r7, [pc, #736]	; 1345c <ASN1_STRING_length@plt+0x14e8>
   13178:	b	131b8 <ASN1_STRING_length@plt+0x1244>
   1317c:	str	ip, [sp, #20]
   13180:	str	r1, [sp, #16]
   13184:	ldr	r1, [r4, #24]
   13188:	str	r2, [sp, #8]
   1318c:	str	r1, [sp, #12]
   13190:	stm	sp, {r0, lr}
   13194:	mov	r2, r6
   13198:	mov	r1, r7
   1319c:	mov	r0, #1
   131a0:	bl	11aac <__printf_chk@plt>
   131a4:	mov	r0, r4
   131a8:	bl	11ba8 <free@plt>
   131ac:	ldr	r4, [sp, #36]	; 0x24
   131b0:	cmp	r4, #0
   131b4:	beq	1312c <ASN1_STRING_length@plt+0x11b8>
   131b8:	ldr	r2, [r4, #8]
   131bc:	ldr	r3, [r4]
   131c0:	cmp	r2, #0
   131c4:	str	r3, [sp, #36]	; 0x24
   131c8:	ldr	r1, [r4, #12]
   131cc:	ldr	r3, [r4, #16]
   131d0:	ldr	r0, [r4, #4]
   131d4:	ldrb	ip, [r5]
   131d8:	beq	1333c <ASN1_STRING_length@plt+0x13c8>
   131dc:	cmp	r1, #0
   131e0:	ldr	lr, [r4, #20]
   131e4:	bne	1317c <ASN1_STRING_length@plt+0x1208>
   131e8:	str	ip, [sp, #12]
   131ec:	str	r2, [sp, #8]
   131f0:	str	lr, [sp, #4]
   131f4:	str	r0, [sp]
   131f8:	mov	r2, r6
   131fc:	mov	r1, sl
   13200:	mov	r0, #1
   13204:	bl	11aac <__printf_chk@plt>
   13208:	b	131a4 <ASN1_STRING_length@plt+0x1230>
   1320c:	cmp	r4, #0
   13210:	bne	13018 <ASN1_STRING_length@plt+0x10a4>
   13214:	b	1315c <ASN1_STRING_length@plt+0x11e8>
   13218:	cmp	r4, #0
   1321c:	str	r7, [sp, #40]	; 0x28
   13220:	beq	13408 <ASN1_STRING_length@plt+0x1494>
   13224:	ldr	sl, [pc, #528]	; 1343c <ASN1_STRING_length@plt+0x14c8>
   13228:	ldr	fp, [pc, #532]	; 13444 <ASN1_STRING_length@plt+0x14d0>
   1322c:	mov	r5, r4
   13230:	mov	r0, r5
   13234:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   13238:	mov	r6, r0
   1323c:	mov	r0, r5
   13240:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   13244:	mov	r1, sl
   13248:	mov	r8, r0
   1324c:	mov	r0, r6
   13250:	bl	11f14 <strcmp@plt>
   13254:	cmp	r0, #0
   13258:	beq	13270 <ASN1_STRING_length@plt+0x12fc>
   1325c:	mov	r1, fp
   13260:	mov	r0, r6
   13264:	bl	11f14 <strcmp@plt>
   13268:	cmp	r0, #0
   1326c:	bne	13288 <ASN1_STRING_length@plt+0x1314>
   13270:	mov	r1, r8
   13274:	mov	r0, r6
   13278:	add	r2, sp, #40	; 0x28
   1327c:	bl	12e48 <ASN1_STRING_length@plt+0xed4>
   13280:	subs	r7, r0, #0
   13284:	blt	133e4 <ASN1_STRING_length@plt+0x1470>
   13288:	mov	r1, r5
   1328c:	mov	r0, r4
   13290:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13294:	subs	r5, r0, #0
   13298:	bne	13230 <ASN1_STRING_length@plt+0x12bc>
   1329c:	ldr	r4, [sp, #40]	; 0x28
   132a0:	cmp	r4, #0
   132a4:	beq	13408 <ASN1_STRING_length@plt+0x1494>
   132a8:	ldr	r5, [pc, #400]	; 13440 <ASN1_STRING_length@plt+0x14cc>
   132ac:	ldr	r8, [pc, #428]	; 13460 <ASN1_STRING_length@plt+0x14ec>
   132b0:	ldr	r6, [pc, #428]	; 13464 <ASN1_STRING_length@plt+0x14f0>
   132b4:	ldr	sl, [pc, #428]	; 13468 <ASN1_STRING_length@plt+0x14f4>
   132b8:	b	132f4 <ASN1_STRING_length@plt+0x1380>
   132bc:	str	lr, [sp, #16]
   132c0:	str	r0, [sp, #12]
   132c4:	ldr	r0, [r4, #24]
   132c8:	str	r1, [sp, #4]
   132cc:	str	r0, [sp, #8]
   132d0:	str	ip, [sp]
   132d4:	mov	r1, r6
   132d8:	mov	r0, #1
   132dc:	bl	11aac <__printf_chk@plt>
   132e0:	mov	r0, r4
   132e4:	bl	11ba8 <free@plt>
   132e8:	ldr	r4, [sp, #40]	; 0x28
   132ec:	cmp	r4, #0
   132f0:	beq	13408 <ASN1_STRING_length@plt+0x1494>
   132f4:	ldr	r1, [r4, #8]
   132f8:	ldr	r3, [r4]
   132fc:	cmp	r1, #0
   13300:	str	r3, [sp, #40]	; 0x28
   13304:	ldr	r0, [r4, #12]
   13308:	ldr	r2, [r4, #16]
   1330c:	ldr	r3, [r4, #4]
   13310:	ldrb	lr, [r5]
   13314:	beq	13410 <ASN1_STRING_length@plt+0x149c>
   13318:	cmp	r0, #0
   1331c:	ldr	ip, [r4, #20]
   13320:	bne	132bc <ASN1_STRING_length@plt+0x1348>
   13324:	stmib	sp, {r1, lr}
   13328:	str	ip, [sp]
   1332c:	mov	r1, r8
   13330:	mov	r0, #1
   13334:	bl	11aac <__printf_chk@plt>
   13338:	b	132e0 <ASN1_STRING_length@plt+0x136c>
   1333c:	str	ip, [sp, #12]
   13340:	str	r1, [sp, #8]
   13344:	ldr	r2, [r4, #24]
   13348:	str	r2, [sp, #4]
   1334c:	b	131f4 <ASN1_STRING_length@plt+0x1280>
   13350:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   13354:	ldr	r5, [pc, #228]	; 13440 <ASN1_STRING_length@plt+0x14cc>
   13358:	ldr	r2, [pc, #268]	; 1346c <ASN1_STRING_length@plt+0x14f8>
   1335c:	ldr	r1, [pc, #268]	; 13470 <ASN1_STRING_length@plt+0x14fc>
   13360:	ldrb	r3, [r5]
   13364:	str	r3, [sp]
   13368:	mov	r3, r0
   1336c:	mov	r0, #1
   13370:	bl	11aac <__printf_chk@plt>
   13374:	b	12fdc <ASN1_STRING_length@plt+0x1068>
   13378:	str	r3, [sp]
   1337c:	mov	r2, r5
   13380:	mov	r3, r7
   13384:	ldr	r1, [pc, #232]	; 13474 <ASN1_STRING_length@plt+0x1500>
   13388:	mov	r0, #1
   1338c:	bl	11aac <__printf_chk@plt>
   13390:	b	13034 <ASN1_STRING_length@plt+0x10c0>
   13394:	mov	r0, r4
   13398:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   1339c:	ldr	r3, [pc, #156]	; 13440 <ASN1_STRING_length@plt+0x14cc>
   133a0:	ldr	r1, [pc, #168]	; 13450 <ASN1_STRING_length@plt+0x14dc>
   133a4:	ldrb	r3, [r3]
   133a8:	mov	r2, r0
   133ac:	mov	r0, #1
   133b0:	bl	11aac <__printf_chk@plt>
   133b4:	b	13134 <ASN1_STRING_length@plt+0x11c0>
   133b8:	mov	r0, r4
   133bc:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   133c0:	mov	r4, r0
   133c4:	rsb	r0, r8, #0
   133c8:	bl	119f8 <strerror@plt>
   133cc:	mov	r2, r4
   133d0:	ldr	r1, [pc, #160]	; 13478 <ASN1_STRING_length@plt+0x1504>
   133d4:	mov	r3, r0
   133d8:	mov	r0, #3
   133dc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   133e0:	b	13134 <ASN1_STRING_length@plt+0x11c0>
   133e4:	ldr	r0, [sp, #40]	; 0x28
   133e8:	cmp	r0, #0
   133ec:	beq	13408 <ASN1_STRING_length@plt+0x1494>
   133f0:	ldr	r3, [r0]
   133f4:	str	r3, [sp, #40]	; 0x28
   133f8:	bl	11ba8 <free@plt>
   133fc:	ldr	r0, [sp, #40]	; 0x28
   13400:	cmp	r0, #0
   13404:	bne	133f0 <ASN1_STRING_length@plt+0x147c>
   13408:	mov	r8, r7
   1340c:	b	13108 <ASN1_STRING_length@plt+0x1194>
   13410:	stmib	sp, {r0, lr}
   13414:	ldr	r1, [r4, #24]
   13418:	mov	r0, #1
   1341c:	str	r1, [sp]
   13420:	mov	r1, sl
   13424:	bl	11aac <__printf_chk@plt>
   13428:	b	132e0 <ASN1_STRING_length@plt+0x136c>
   1342c:	bl	11d88 <__stack_chk_fail@plt>
   13430:	andeq	r0, r4, ip, asr r0
   13434:	andeq	pc, r3, r8, ror #25
   13438:	andeq	fp, r2, ip, lsr #3
   1343c:	andeq	fp, r2, r8, lsr #5
   13440:	andeq	r0, r4, r4
   13444:	andeq	fp, r2, r0, lsl #4
   13448:	andeq	sp, r2, r4, rrx
   1344c:	andeq	fp, r2, r4, asr #4
   13450:			; <UNDEFINED> instruction: 0x0002b1b8
   13454:	andeq	fp, r2, r0, asr r2
   13458:	andeq	fp, r2, r8, asr r2
   1345c:	andeq	fp, r2, ip, ror #4
   13460:	andeq	fp, r2, r0, lsr r2
   13464:	andeq	fp, r2, ip, lsl r2
   13468:	andeq	fp, r2, ip, lsl #4
   1346c:	andeq	fp, r2, r0, asr #3
   13470:	andeq	fp, r2, ip, asr #3
   13474:	andeq	fp, r2, ip, lsr r2
   13478:	ldrdeq	fp, [r2], -r8
   1347c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13480:	sub	sp, sp, #4608	; 0x1200
   13484:	ldr	sl, [pc, #1240]	; 13964 <ASN1_STRING_length@plt+0x19f0>
   13488:	sub	sp, sp, #28
   1348c:	mov	r3, #0
   13490:	mov	r6, r1
   13494:	ldr	r8, [pc, #1228]	; 13968 <ASN1_STRING_length@plt+0x19f4>
   13498:	add	r1, sp, #4608	; 0x1200
   1349c:	ldr	r7, [pc, #1224]	; 1396c <ASN1_STRING_length@plt+0x19f8>
   134a0:	ldr	fp, [pc, #1224]	; 13970 <ASN1_STRING_length@plt+0x19fc>
   134a4:	ldr	r2, [sl]
   134a8:	add	r1, r1, #20
   134ac:	mov	r9, r3
   134b0:	mov	r5, r0
   134b4:	add	r4, sp, #32
   134b8:	str	r3, [sp, #16]
   134bc:	str	r2, [r1]
   134c0:	str	r3, [sp, #24]
   134c4:	mov	ip, #0
   134c8:	str	r4, [sp]
   134cc:	mov	r3, r8
   134d0:	mov	r2, r7
   134d4:	mov	r1, r6
   134d8:	mov	r0, r5
   134dc:	str	ip, [sp, #32]
   134e0:	bl	11bcc <getopt_long@plt>
   134e4:	cmn	r0, #1
   134e8:	beq	13718 <ASN1_STRING_length@plt+0x17a4>
   134ec:	sub	r3, r0, #48	; 0x30
   134f0:	cmp	r3, #64	; 0x40
   134f4:	ldrls	pc, [pc, r3, lsl #2]
   134f8:	b	13700 <ASN1_STRING_length@plt+0x178c>
   134fc:	andeq	r3, r1, r4, asr r6
   13500:	andeq	r3, r1, r0, lsl #14
   13504:	andeq	r3, r1, r0, lsl #14
   13508:	andeq	r3, r1, r0, lsl #14
   1350c:	andeq	r3, r1, r0, lsl #14
   13510:	andeq	r3, r1, r0, lsl #14
   13514:	andeq	r3, r1, r0, lsl #14
   13518:	andeq	r3, r1, r0, lsl #14
   1351c:	andeq	r3, r1, r0, lsl #14
   13520:	andeq	r3, r1, r0, lsl #14
   13524:	andeq	r3, r1, r0, lsl #14
   13528:	andeq	r3, r1, r0, lsl #14
   1352c:	andeq	r3, r1, r0, lsl #14
   13530:	andeq	r3, r1, r0, lsl #14
   13534:	andeq	r3, r1, r0, lsl #14
   13538:	andeq	r3, r1, r8, lsr #12
   1353c:	andeq	r3, r1, r0, lsl #14
   13540:	andeq	r3, r1, r0, lsl #14
   13544:	andeq	r3, r1, r0, lsl #14
   13548:	andeq	r3, r1, r0, lsl #14
   1354c:	andeq	r3, r1, r0, lsl #14
   13550:	andeq	r3, r1, r0, lsl #14
   13554:	strdeq	r3, [r1], -r0
   13558:	andeq	r3, r1, r0, lsl #14
   1355c:	andeq	r3, r1, r0, lsl #14
   13560:	andeq	r3, r1, r0, lsl #14
   13564:	andeq	r3, r1, r0, lsl #14
   13568:	andeq	r3, r1, r0, lsl #14
   1356c:	andeq	r3, r1, r0, lsl #14
   13570:	andeq	r3, r1, r0, lsl #14
   13574:	andeq	r3, r1, r0, lsl #14
   13578:	andeq	r3, r1, r0, lsl #14
   1357c:	andeq	r3, r1, r0, lsl #14
   13580:	andeq	r3, r1, r0, lsl #14
   13584:	andeq	r3, r1, r0, lsl #14
   13588:	andeq	r3, r1, r0, lsl #14
   1358c:	andeq	r3, r1, r0, lsl #14
   13590:	andeq	r3, r1, r0, lsl #14
   13594:	ldrdeq	r3, [r1], -r8
   13598:	andeq	r3, r1, r0, lsl #14
   1359c:	andeq	r3, r1, r0, lsl #14
   135a0:	andeq	r3, r1, r0, lsl #14
   135a4:	andeq	r3, r1, r0, lsl #14
   135a8:	andeq	r3, r1, r0, lsl #14
   135ac:	andeq	r3, r1, r0, lsl #14
   135b0:	andeq	r3, r1, r0, lsl #14
   135b4:	andeq	r3, r1, r0, lsl #14
   135b8:	andeq	r3, r1, r0, lsl #14
   135bc:	andeq	r3, r1, r0, lsl #14
   135c0:	andeq	r3, r1, ip, asr #13
   135c4:	andeq	r3, r1, r0, asr #13
   135c8:	andeq	r3, r1, r0, lsl #14
   135cc:			; <UNDEFINED> instruction: 0x000136b4
   135d0:	andeq	r3, r1, r0, lsl #14
   135d4:	andeq	r3, r1, r0, lsl #14
   135d8:	andeq	r3, r1, r0, lsl #14
   135dc:	muleq	r1, r8, r6
   135e0:	andeq	r3, r1, r0, lsl #14
   135e4:	andeq	r3, r1, r0, lsl #14
   135e8:	andeq	r3, r1, r8, lsl #13
   135ec:	andeq	r3, r1, ip, ror r6
   135f0:	andeq	r3, r1, r0, lsl #14
   135f4:	andeq	r3, r1, r0, ror r6
   135f8:	andeq	r3, r1, r0, lsl #14
   135fc:	andeq	r3, r1, r4, ror #12
   13600:	add	r0, sp, #140	; 0x8c
   13604:	bl	11b24 <uname@plt>
   13608:	cmp	r0, #0
   1360c:	addge	r3, sp, #152	; 0x98
   13610:	addge	r3, r3, #118	; 0x76
   13614:	strge	r3, [sp, #16]
   13618:	bge	13748 <ASN1_STRING_length@plt+0x17d4>
   1361c:	ldr	r1, [pc, #848]	; 13974 <ASN1_STRING_length@plt+0x1a00>
   13620:	mov	r0, #3
   13624:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13628:	mov	r5, #1
   1362c:	add	r3, sp, #4608	; 0x1200
   13630:	add	r3, r3, #20
   13634:	ldr	r2, [r3]
   13638:	ldr	r3, [sl]
   1363c:	mov	r0, r5
   13640:	cmp	r2, r3
   13644:	bne	13960 <ASN1_STRING_length@plt+0x19ec>
   13648:	add	sp, sp, #4608	; 0x1200
   1364c:	add	sp, sp, #28
   13650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13654:	ldr	r2, [pc, #796]	; 13978 <ASN1_STRING_length@plt+0x1a04>
   13658:	mov	r3, #0
   1365c:	strb	r3, [r2]
   13660:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   13664:	ldr	r3, [pc, #784]	; 1397c <ASN1_STRING_length@plt+0x1a08>
   13668:	str	r3, [fp]
   1366c:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   13670:	ldr	r3, [pc, #776]	; 13980 <ASN1_STRING_length@plt+0x1a0c>
   13674:	str	r3, [fp]
   13678:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   1367c:	ldr	r3, [pc, #768]	; 13984 <ASN1_STRING_length@plt+0x1a10>
   13680:	str	r3, [fp]
   13684:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   13688:	ldr	r3, [pc, #760]	; 13988 <ASN1_STRING_length@plt+0x1a14>
   1368c:	ldr	r3, [r3]
   13690:	str	r3, [sp, #16]
   13694:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   13698:	ldr	r3, [pc, #748]	; 1398c <ASN1_STRING_length@plt+0x1a18>
   1369c:	ldr	r1, [pc, #748]	; 13990 <ASN1_STRING_length@plt+0x1a1c>
   136a0:	mov	r0, #1
   136a4:	ldr	r2, [r3]
   136a8:	bl	11aac <__printf_chk@plt>
   136ac:	mov	r5, #0
   136b0:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   136b4:	ldr	r3, [pc, #728]	; 13994 <ASN1_STRING_length@plt+0x1a20>
   136b8:	str	r3, [fp]
   136bc:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   136c0:	ldr	r3, [pc, #704]	; 13988 <ASN1_STRING_length@plt+0x1a14>
   136c4:	ldr	r9, [r3]
   136c8:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   136cc:	ldr	r3, [pc, #708]	; 13998 <ASN1_STRING_length@plt+0x1a24>
   136d0:	str	r3, [fp]
   136d4:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   136d8:	ldr	r0, [pc, #700]	; 1399c <ASN1_STRING_length@plt+0x1a28>
   136dc:	bl	11e0c <puts@plt>
   136e0:	ldr	r0, [pc, #696]	; 139a0 <ASN1_STRING_length@plt+0x1a2c>
   136e4:	bl	11e0c <puts@plt>
   136e8:	mov	r5, #0
   136ec:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   136f0:	ldr	r3, [pc, #656]	; 13988 <ASN1_STRING_length@plt+0x1a14>
   136f4:	ldr	r3, [r3]
   136f8:	str	r3, [fp]
   136fc:	b	134c4 <ASN1_STRING_length@plt+0x1550>
   13700:	mov	r2, r0
   13704:	ldr	r1, [pc, #664]	; 139a4 <ASN1_STRING_length@plt+0x1a30>
   13708:	mov	r0, #3
   1370c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13710:	mov	r5, #1
   13714:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   13718:	ldr	r8, [pc, #648]	; 139a8 <ASN1_STRING_length@plt+0x1a34>
   1371c:	ldr	r3, [r8]
   13720:	cmp	r3, r5
   13724:	bge	1392c <ASN1_STRING_length@plt+0x19b8>
   13728:	ldr	r2, [sp, #16]
   1372c:	orrs	r0, r2, r9
   13730:	beq	13770 <ASN1_STRING_length@plt+0x17fc>
   13734:	ldr	r3, [pc, #624]	; 139ac <ASN1_STRING_length@plt+0x1a38>
   13738:	cmp	r9, #0
   1373c:	moveq	r9, r3
   13740:	cmp	r2, #0
   13744:	beq	13600 <ASN1_STRING_length@plt+0x168c>
   13748:	ldr	r2, [pc, #608]	; 139b0 <ASN1_STRING_length@plt+0x1a3c>
   1374c:	ldr	r1, [sp, #16]
   13750:	mov	r3, #4096	; 0x1000
   13754:	str	r1, [sp, #8]
   13758:	stm	sp, {r2, r9}
   1375c:	add	r0, sp, #532	; 0x214
   13760:	mov	r1, r3
   13764:	mov	r2, #1
   13768:	bl	11cc8 <__snprintf_chk@plt>
   1376c:	add	r0, sp, #532	; 0x214
   13770:	add	r1, sp, #24
   13774:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   13778:	subs	r3, r0, #0
   1377c:	str	r3, [sp, #16]
   13780:	beq	13894 <ASN1_STRING_length@plt+0x1920>
   13784:	ldr	r3, [r8]
   13788:	cmp	r5, r3
   1378c:	ble	13940 <ASN1_STRING_length@plt+0x19cc>
   13790:	sub	r3, r3, #-1073741823	; 0xc0000001
   13794:	sub	r2, r6, #4
   13798:	add	r9, r6, r3, lsl #2
   1379c:	add	r3, r2, r5, lsl #2
   137a0:	mov	r5, #0
   137a4:	str	r3, [sp, #20]
   137a8:	ldr	r7, [r9, #4]!
   137ac:	mov	r2, r4
   137b0:	mov	r1, r7
   137b4:	mov	r0, #3
   137b8:	bl	11d40 <__xstat64@plt>
   137bc:	cmp	r0, #0
   137c0:	bne	137d4 <ASN1_STRING_length@plt+0x1860>
   137c4:	ldr	r3, [sp, #48]	; 0x30
   137c8:	and	r3, r3, #61440	; 0xf000
   137cc:	cmp	r3, #32768	; 0x8000
   137d0:	beq	138a8 <ASN1_STRING_length@plt+0x1934>
   137d4:	mov	r3, #0
   137d8:	mov	r2, r4
   137dc:	mov	r1, r7
   137e0:	ldr	r0, [sp, #16]
   137e4:	str	r3, [sp, #32]
   137e8:	bl	22320 <ASN1_STRING_length@plt+0x103ac>
   137ec:	subs	r6, r0, #0
   137f0:	blt	13908 <ASN1_STRING_length@plt+0x1994>
   137f4:	ldr	r2, [sp, #32]
   137f8:	cmp	r2, #0
   137fc:	beq	13948 <ASN1_STRING_length@plt+0x19d4>
   13800:	add	r3, sp, #28
   13804:	mov	r1, #2
   13808:	ldr	r0, [sp, #16]
   1380c:	bl	22f34 <ASN1_STRING_length@plt+0x10fc0>
   13810:	mov	r6, r0
   13814:	ldr	r0, [sp, #32]
   13818:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   1381c:	cmp	r6, #0
   13820:	blt	1391c <ASN1_STRING_length@plt+0x19a8>
   13824:	ldr	fp, [sp, #28]
   13828:	cmp	fp, #0
   1382c:	beq	13948 <ASN1_STRING_length@plt+0x19d4>
   13830:	mov	r0, fp
   13834:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13838:	mov	r8, r0
   1383c:	bl	12f94 <ASN1_STRING_length@plt+0x1020>
   13840:	mov	r7, r0
   13844:	mov	r0, r8
   13848:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   1384c:	mov	r1, fp
   13850:	ldr	r0, [sp, #28]
   13854:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13858:	cmp	r7, #0
   1385c:	movlt	r6, r7
   13860:	subs	fp, r0, #0
   13864:	bne	13830 <ASN1_STRING_length@plt+0x18bc>
   13868:	ldr	r0, [sp, #28]
   1386c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   13870:	cmp	r6, #0
   13874:	movlt	r5, r6
   13878:	ldr	r3, [sp, #20]
   1387c:	cmp	r3, r9
   13880:	bne	137a8 <ASN1_STRING_length@plt+0x1834>
   13884:	lsr	r5, r5, #31
   13888:	ldr	r0, [sp, #16]
   1388c:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   13890:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   13894:	ldr	r1, [pc, #280]	; 139b4 <ASN1_STRING_length@plt+0x1a40>
   13898:	mov	r0, #3
   1389c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   138a0:	mov	r5, #1
   138a4:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   138a8:	mov	r0, r7
   138ac:	bl	11c44 <strlen@plt>
   138b0:	mov	r1, r0
   138b4:	mov	r0, r7
   138b8:	bl	1b674 <ASN1_STRING_length@plt+0x9700>
   138bc:	cmp	r0, #0
   138c0:	beq	137d4 <ASN1_STRING_length@plt+0x1860>
   138c4:	mov	r2, r4
   138c8:	mov	r1, r7
   138cc:	ldr	r0, [sp, #16]
   138d0:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   138d4:	subs	r6, r0, #0
   138d8:	blt	138f4 <ASN1_STRING_length@plt+0x1980>
   138dc:	ldr	r0, [sp, #32]
   138e0:	bl	12f94 <ASN1_STRING_length@plt+0x1020>
   138e4:	mov	r6, r0
   138e8:	ldr	r0, [sp, #32]
   138ec:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   138f0:	b	13870 <ASN1_STRING_length@plt+0x18fc>
   138f4:	mov	r2, r7
   138f8:	ldr	r1, [pc, #184]	; 139b8 <ASN1_STRING_length@plt+0x1a44>
   138fc:	mov	r0, #3
   13900:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13904:	b	13870 <ASN1_STRING_length@plt+0x18fc>
   13908:	mov	r2, r7
   1390c:	ldr	r1, [pc, #168]	; 139bc <ASN1_STRING_length@plt+0x1a48>
   13910:	mov	r0, #3
   13914:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13918:	b	13870 <ASN1_STRING_length@plt+0x18fc>
   1391c:	ldr	r1, [pc, #156]	; 139c0 <ASN1_STRING_length@plt+0x1a4c>
   13920:	mov	r0, #3
   13924:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13928:	b	13870 <ASN1_STRING_length@plt+0x18fc>
   1392c:	ldr	r1, [pc, #144]	; 139c4 <ASN1_STRING_length@plt+0x1a50>
   13930:	mov	r0, #3
   13934:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13938:	mov	r5, #1
   1393c:	b	1362c <ASN1_STRING_length@plt+0x16b8>
   13940:	mov	r5, #0
   13944:	b	13888 <ASN1_STRING_length@plt+0x1914>
   13948:	mov	r2, r7
   1394c:	ldr	r1, [pc, #116]	; 139c8 <ASN1_STRING_length@plt+0x1a54>
   13950:	mov	r0, #3
   13954:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13958:	mvn	r5, #1
   1395c:	b	13878 <ASN1_STRING_length@plt+0x1904>
   13960:	bl	11d88 <__stack_chk_fail@plt>
   13964:	andeq	pc, r3, r8, ror #25
   13968:	andeq	sl, r2, ip, lsl #27
   1396c:	andeq	sl, r2, ip, asr #28
   13970:	andeq	r0, r4, ip, asr r0
   13974:	andeq	fp, r2, ip, lsl #2
   13978:	andeq	r0, r4, r4
   1397c:	andeq	fp, r2, r8, lsr #5
   13980:	andeq	fp, r2, ip, lsr #3
   13984:	andeq	sl, r2, r0, ror lr
   13988:	andeq	r0, r4, r0, asr r0
   1398c:	andeq	r0, r4, r8, lsr r0
   13990:	andeq	sl, r2, r8, ror lr
   13994:	andeq	sl, r2, r4, ror #28
   13998:	andeq	sl, r2, ip, asr lr
   1399c:	andeq	sl, r2, r0, ror #13
   139a0:	strdeq	sl, [r2], -r0
   139a4:	andeq	sl, r2, ip, ror sl
   139a8:	andeq	r0, r4, r0, asr #32
   139ac:	andeq	sp, r2, r4, rrx
   139b0:	andeq	fp, r2, r0, lsr #2
   139b4:			; <UNDEFINED> instruction: 0x0002aabc
   139b8:	andeq	fp, r2, r4, lsr r1
   139bc:	andeq	fp, r2, r0, asr r1
   139c0:	andeq	fp, r2, r4, lsl #3
   139c4:	andeq	fp, r2, ip, ror #1
   139c8:	andeq	fp, r2, ip, ror #2
   139cc:	push	{r4, r5, lr}
   139d0:	sub	sp, sp, #20
   139d4:	ldr	r4, [pc, #168]	; 13a84 <ASN1_STRING_length@plt+0x1b10>
   139d8:	mov	r5, r0
   139dc:	ldr	r0, [pc, #164]	; 13a88 <ASN1_STRING_length@plt+0x1b14>
   139e0:	ldr	r3, [r4]
   139e4:	str	r3, [sp, #12]
   139e8:	bl	11aa0 <getenv@plt>
   139ec:	subs	r3, r0, #0
   139f0:	beq	13a6c <ASN1_STRING_length@plt+0x1af8>
   139f4:	str	r5, [sp]
   139f8:	ldr	r2, [pc, #140]	; 13a8c <ASN1_STRING_length@plt+0x1b18>
   139fc:	mov	r1, #1
   13a00:	add	r0, sp, #8
   13a04:	bl	11c14 <__asprintf_chk@plt>
   13a08:	cmp	r0, #0
   13a0c:	blt	13a48 <ASN1_STRING_length@plt+0x1ad4>
   13a10:	mov	r2, #1
   13a14:	ldr	r1, [sp, #8]
   13a18:	ldr	r0, [pc, #104]	; 13a88 <ASN1_STRING_length@plt+0x1b14>
   13a1c:	bl	11f08 <setenv@plt>
   13a20:	cmp	r0, #0
   13a24:	blt	13a58 <ASN1_STRING_length@plt+0x1ae4>
   13a28:	ldr	r0, [sp, #8]
   13a2c:	bl	11ba8 <free@plt>
   13a30:	ldr	r2, [sp, #12]
   13a34:	ldr	r3, [r4]
   13a38:	cmp	r2, r3
   13a3c:	bne	13a80 <ASN1_STRING_length@plt+0x1b0c>
   13a40:	add	sp, sp, #20
   13a44:	pop	{r4, r5, pc}
   13a48:	ldr	r1, [pc, #64]	; 13a90 <ASN1_STRING_length@plt+0x1b1c>
   13a4c:	mov	r0, #3
   13a50:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13a54:	b	13a30 <ASN1_STRING_length@plt+0x1abc>
   13a58:	ldr	r2, [sp, #8]
   13a5c:	ldr	r1, [pc, #48]	; 13a94 <ASN1_STRING_length@plt+0x1b20>
   13a60:	mov	r0, #3
   13a64:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13a68:	b	13a28 <ASN1_STRING_length@plt+0x1ab4>
   13a6c:	mov	r1, r5
   13a70:	mov	r2, #1
   13a74:	ldr	r0, [pc, #12]	; 13a88 <ASN1_STRING_length@plt+0x1b14>
   13a78:	bl	11f08 <setenv@plt>
   13a7c:	b	13a30 <ASN1_STRING_length@plt+0x1abc>
   13a80:	bl	11d88 <__stack_chk_fail@plt>
   13a84:	andeq	pc, r3, r8, ror #25
   13a88:	muleq	r2, r8, lr
   13a8c:	andeq	fp, r2, ip, lsr #29
   13a90:			; <UNDEFINED> instruction: 0x0002beb4
   13a94:	andeq	fp, r2, r4, ror #29
   13a98:	push	{r0, r1, r2, r3}
   13a9c:	ldr	r3, [pc, #120]	; 13b1c <ASN1_STRING_length@plt+0x1ba8>
   13aa0:	push	{r4, r5, lr}
   13aa4:	sub	sp, sp, #12
   13aa8:	ldr	r4, [pc, #112]	; 13b20 <ASN1_STRING_length@plt+0x1bac>
   13aac:	ldr	r1, [r3]
   13ab0:	ldr	r2, [sp, #24]
   13ab4:	ldr	r3, [r4]
   13ab8:	cmp	r1, #0
   13abc:	str	r3, [sp, #4]
   13ac0:	bne	13ad4 <ASN1_STRING_length@plt+0x1b60>
   13ac4:	ldr	r3, [pc, #88]	; 13b24 <ASN1_STRING_length@plt+0x1bb0>
   13ac8:	ldr	r3, [r3]
   13acc:	cmp	r3, #4
   13ad0:	ble	13af8 <ASN1_STRING_length@plt+0x1b84>
   13ad4:	ldr	r5, [pc, #76]	; 13b28 <ASN1_STRING_length@plt+0x1bb4>
   13ad8:	add	ip, sp, #28
   13adc:	mov	r3, ip
   13ae0:	ldr	r0, [r5]
   13ae4:	mov	r1, #1
   13ae8:	str	ip, [sp]
   13aec:	bl	11cb0 <__vfprintf_chk@plt>
   13af0:	ldr	r0, [r5]
   13af4:	bl	11c2c <fflush@plt>
   13af8:	ldr	r2, [sp, #4]
   13afc:	ldr	r3, [r4]
   13b00:	cmp	r2, r3
   13b04:	bne	13b18 <ASN1_STRING_length@plt+0x1ba4>
   13b08:	add	sp, sp, #12
   13b0c:	pop	{r4, r5, lr}
   13b10:	add	sp, sp, #16
   13b14:	bx	lr
   13b18:	bl	11d88 <__stack_chk_fail@plt>
   13b1c:	andeq	r0, r4, r0, rrx
   13b20:	andeq	pc, r3, r8, ror #25
   13b24:	andeq	r0, r4, ip
   13b28:	andeq	r0, r4, r4, asr #32
   13b2c:	push	{r4, r5, r6, r7, r8, lr}
   13b30:	mov	r4, r0
   13b34:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13b38:	mov	r5, r0
   13b3c:	mov	r0, r4
   13b40:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13b44:	mov	r1, r0
   13b48:	ldr	r0, [pc, #204]	; 13c1c <ASN1_STRING_length@plt+0x1ca8>
   13b4c:	bl	13a98 <ASN1_STRING_length@plt+0x1b24>
   13b50:	ldr	r3, [pc, #200]	; 13c20 <ASN1_STRING_length@plt+0x1cac>
   13b54:	ldr	r3, [r3]
   13b58:	cmp	r3, #0
   13b5c:	movne	r7, #0
   13b60:	bne	13bdc <ASN1_STRING_length@plt+0x1c68>
   13b64:	ldr	r3, [pc, #184]	; 13c24 <ASN1_STRING_length@plt+0x1cb0>
   13b68:	mov	r0, r4
   13b6c:	ldr	r3, [r3]
   13b70:	cmp	r3, #0
   13b74:	movne	r1, #512	; 0x200
   13b78:	moveq	r1, #0
   13b7c:	bl	22b98 <ASN1_STRING_length@plt+0x10c24>
   13b80:	cmn	r0, #17
   13b84:	mov	r7, r0
   13b88:	beq	13be4 <ASN1_STRING_length@plt+0x1c70>
   13b8c:	mov	r0, r4
   13b90:	bl	22938 <ASN1_STRING_length@plt+0x109c4>
   13b94:	subs	r6, r0, #0
   13b98:	beq	13bdc <ASN1_STRING_length@plt+0x1c68>
   13b9c:	mov	r4, r6
   13ba0:	mov	r0, r4
   13ba4:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13ba8:	mov	r5, r0
   13bac:	bl	24860 <ASN1_STRING_length@plt+0x128ec>
   13bb0:	cmp	r0, #0
   13bb4:	beq	13c10 <ASN1_STRING_length@plt+0x1c9c>
   13bb8:	mov	r0, r5
   13bbc:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13bc0:	mov	r1, r4
   13bc4:	mov	r0, r6
   13bc8:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13bcc:	subs	r4, r0, #0
   13bd0:	bne	13ba0 <ASN1_STRING_length@plt+0x1c2c>
   13bd4:	mov	r0, r6
   13bd8:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   13bdc:	mov	r0, r7
   13be0:	pop	{r4, r5, r6, r7, r8, pc}
   13be4:	ldr	r3, [pc, #60]	; 13c28 <ASN1_STRING_length@plt+0x1cb4>
   13be8:	ldr	r3, [r3]
   13bec:	cmp	r3, #0
   13bf0:	moveq	r7, r3
   13bf4:	beq	13b8c <ASN1_STRING_length@plt+0x1c18>
   13bf8:	ldr	r3, [pc, #44]	; 13c2c <ASN1_STRING_length@plt+0x1cb8>
   13bfc:	mov	r2, r5
   13c00:	ldr	r1, [pc, #40]	; 13c30 <ASN1_STRING_length@plt+0x1cbc>
   13c04:	ldr	r0, [r3]
   13c08:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13c0c:	b	13b8c <ASN1_STRING_length@plt+0x1c18>
   13c10:	mov	r0, r5
   13c14:	bl	13b2c <ASN1_STRING_length@plt+0x1bb8>
   13c18:	b	13bb8 <ASN1_STRING_length@plt+0x1c44>
   13c1c:	andeq	ip, r2, r0, lsr #1
   13c20:	andeq	r0, r4, r4, rrx
   13c24:	andeq	r0, r4, ip, rrx
   13c28:	andeq	r0, r4, r8, rrx
   13c2c:	andeq	r0, r4, r8
   13c30:	andeq	ip, r2, ip, lsr #1
   13c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c38:	sub	sp, sp, #28
   13c3c:	ldr	fp, [pc, #792]	; 13f5c <ASN1_STRING_length@plt+0x1fe8>
   13c40:	mov	r3, #0
   13c44:	mov	sl, r2
   13c48:	ldr	ip, [fp]
   13c4c:	add	r2, sp, #16
   13c50:	str	r3, [sp, #16]
   13c54:	str	ip, [sp, #20]
   13c58:	mov	r4, r0
   13c5c:	mov	r7, r1
   13c60:	bl	22320 <ASN1_STRING_length@plt+0x103ac>
   13c64:	ldr	r5, [sp, #16]
   13c68:	clz	r3, r5
   13c6c:	lsr	r3, r3, #5
   13c70:	orrs	r3, r3, r0, lsr #31
   13c74:	bne	13f1c <ASN1_STRING_length@plt+0x1fa8>
   13c78:	ldr	r3, [pc, #736]	; 13f60 <ASN1_STRING_length@plt+0x1fec>
   13c7c:	ldr	r2, [pc, #736]	; 13f64 <ASN1_STRING_length@plt+0x1ff0>
   13c80:	ldr	r1, [pc, #736]	; 13f68 <ASN1_STRING_length@plt+0x1ff4>
   13c84:	ldr	r3, [r3]
   13c88:	ldr	r2, [r2]
   13c8c:	mov	r6, r0
   13c90:	orrs	r2, r3, r2
   13c94:	ldr	r7, [r1]
   13c98:	beq	13dc8 <ASN1_STRING_length@plt+0x1e54>
   13c9c:	orrs	r3, r3, r7
   13ca0:	moveq	r7, #2
   13ca4:	movne	r7, #3
   13ca8:	ldr	r3, [pc, #700]	; 13f6c <ASN1_STRING_length@plt+0x1ff8>
   13cac:	ldr	r3, [r3]
   13cb0:	cmp	r3, #0
   13cb4:	ldr	r3, [pc, #692]	; 13f70 <ASN1_STRING_length@plt+0x1ffc>
   13cb8:	orrne	r7, r7, #4
   13cbc:	ldr	r3, [r3]
   13cc0:	cmp	r3, #0
   13cc4:	ldr	r3, [pc, #680]	; 13f74 <ASN1_STRING_length@plt+0x2000>
   13cc8:	orrne	r7, r7, #8
   13ccc:	ldr	r3, [r3]
   13cd0:	cmp	r3, #0
   13cd4:	ldr	r3, [pc, #668]	; 13f78 <ASN1_STRING_length@plt+0x2004>
   13cd8:	orrne	r7, r7, #16
   13cdc:	ldr	r3, [r3]
   13ce0:	cmp	r3, #0
   13ce4:	bne	13dc0 <ASN1_STRING_length@plt+0x1e4c>
   13ce8:	ldr	r3, [pc, #652]	; 13f7c <ASN1_STRING_length@plt+0x2008>
   13cec:	ldr	r9, [pc, #652]	; 13f80 <ASN1_STRING_length@plt+0x200c>
   13cf0:	ldr	r3, [r3]
   13cf4:	cmp	r3, #5
   13cf8:	movlt	r9, #0
   13cfc:	ldr	r3, [pc, #640]	; 13f84 <ASN1_STRING_length@plt+0x2010>
   13d00:	ldr	r8, [pc, #640]	; 13f88 <ASN1_STRING_length@plt+0x2014>
   13d04:	ldr	r3, [r3]
   13d08:	cmp	r3, #0
   13d0c:	ldr	r3, [pc, #632]	; 13f8c <ASN1_STRING_length@plt+0x2018>
   13d10:	orrne	r7, r7, #393216	; 0x60000
   13d14:	orreq	r7, r7, #262144	; 0x40000
   13d18:	ldr	r3, [r3]
   13d1c:	cmp	r3, #0
   13d20:	orrne	r7, r7, #32
   13d24:	mov	r0, r5
   13d28:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13d2c:	ldr	r3, [r8]
   13d30:	cmp	r3, #0
   13d34:	mov	r4, r0
   13d38:	beq	13e24 <ASN1_STRING_length@plt+0x1eb0>
   13d3c:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13d40:	bl	11e0c <puts@plt>
   13d44:	cmp	r6, #0
   13d48:	blt	13dd4 <ASN1_STRING_length@plt+0x1e60>
   13d4c:	mov	r0, r4
   13d50:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13d54:	mov	r1, r5
   13d58:	ldr	r0, [sp, #16]
   13d5c:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13d60:	subs	r5, r0, #0
   13d64:	beq	13f08 <ASN1_STRING_length@plt+0x1f94>
   13d68:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13d6c:	ldr	r3, [r8]
   13d70:	cmp	r3, #0
   13d74:	mov	r4, r0
   13d78:	beq	13e24 <ASN1_STRING_length@plt+0x1eb0>
   13d7c:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13d80:	bl	11e0c <puts@plt>
   13d84:	mov	r0, r4
   13d88:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13d8c:	mov	r1, r5
   13d90:	ldr	r0, [sp, #16]
   13d94:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13d98:	subs	r5, r0, #0
   13d9c:	beq	13f08 <ASN1_STRING_length@plt+0x1f94>
   13da0:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13da4:	ldr	r3, [r8]
   13da8:	cmp	r3, #0
   13dac:	mov	r4, r0
   13db0:	beq	13e24 <ASN1_STRING_length@plt+0x1eb0>
   13db4:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13db8:	bl	11e0c <puts@plt>
   13dbc:	b	13d4c <ASN1_STRING_length@plt+0x1dd8>
   13dc0:	ldr	r9, [pc, #440]	; 13f80 <ASN1_STRING_length@plt+0x200c>
   13dc4:	b	13cfc <ASN1_STRING_length@plt+0x1d88>
   13dc8:	cmp	r7, #0
   13dcc:	movne	r7, #1
   13dd0:	b	13ca8 <ASN1_STRING_length@plt+0x1d34>
   13dd4:	cmn	r6, #17
   13dd8:	bne	13e44 <ASN1_STRING_length@plt+0x1ed0>
   13ddc:	mov	r0, r4
   13de0:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13de4:	ldr	r1, [pc, #420]	; 13f90 <ASN1_STRING_length@plt+0x201c>
   13de8:	mov	r2, r0
   13dec:	mov	r0, #3
   13df0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13df4:	mov	r0, r4
   13df8:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13dfc:	mov	r1, r5
   13e00:	ldr	r0, [sp, #16]
   13e04:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13e08:	subs	r5, r0, #0
   13e0c:	beq	13ee4 <ASN1_STRING_length@plt+0x1f70>
   13e10:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13e14:	ldr	r3, [r8]
   13e18:	cmp	r3, #0
   13e1c:	mov	r4, r0
   13e20:	bne	13f10 <ASN1_STRING_length@plt+0x1f9c>
   13e24:	mov	r3, #0
   13e28:	mov	r2, sl
   13e2c:	stm	sp, {r3, r9}
   13e30:	mov	r1, r7
   13e34:	mov	r0, r4
   13e38:	bl	23c00 <ASN1_STRING_length@plt+0x11c8c>
   13e3c:	mov	r6, r0
   13e40:	b	13d44 <ASN1_STRING_length@plt+0x1dd0>
   13e44:	cmn	r6, #2
   13e48:	bne	13ea0 <ASN1_STRING_length@plt+0x1f2c>
   13e4c:	mov	r0, r4
   13e50:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13e54:	ldr	r1, [pc, #312]	; 13f94 <ASN1_STRING_length@plt+0x2020>
   13e58:	mov	r2, r0
   13e5c:	mov	r0, #3
   13e60:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13e64:	mov	r0, r4
   13e68:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13e6c:	mov	r1, r5
   13e70:	ldr	r0, [sp, #16]
   13e74:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13e78:	subs	r5, r0, #0
   13e7c:	beq	13ee4 <ASN1_STRING_length@plt+0x1f70>
   13e80:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   13e84:	ldr	r3, [r8]
   13e88:	cmp	r3, #0
   13e8c:	mov	r4, r0
   13e90:	beq	13e24 <ASN1_STRING_length@plt+0x1eb0>
   13e94:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13e98:	bl	11e0c <puts@plt>
   13e9c:	b	13e4c <ASN1_STRING_length@plt+0x1ed8>
   13ea0:	mov	r0, r4
   13ea4:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13ea8:	str	r0, [sp, #12]
   13eac:	rsb	r0, r6, #0
   13eb0:	bl	119f8 <strerror@plt>
   13eb4:	ldr	r2, [sp, #12]
   13eb8:	ldr	r1, [pc, #216]	; 13f98 <ASN1_STRING_length@plt+0x2024>
   13ebc:	mov	r3, r0
   13ec0:	mov	r0, #3
   13ec4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13ec8:	mov	r0, r4
   13ecc:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   13ed0:	mov	r1, r5
   13ed4:	ldr	r0, [sp, #16]
   13ed8:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   13edc:	subs	r5, r0, #0
   13ee0:	bne	13d24 <ASN1_STRING_length@plt+0x1db0>
   13ee4:	ldr	r0, [sp, #16]
   13ee8:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   13eec:	ldr	r2, [sp, #20]
   13ef0:	ldr	r3, [fp]
   13ef4:	mov	r0, r6
   13ef8:	cmp	r2, r3
   13efc:	bne	13f58 <ASN1_STRING_length@plt+0x1fe4>
   13f00:	add	sp, sp, #28
   13f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f08:	mov	r6, #0
   13f0c:	b	13ee4 <ASN1_STRING_length@plt+0x1f70>
   13f10:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   13f14:	bl	11e0c <puts@plt>
   13f18:	b	13ddc <ASN1_STRING_length@plt+0x1e68>
   13f1c:	ldr	r3, [pc, #120]	; 13f9c <ASN1_STRING_length@plt+0x2028>
   13f20:	cmp	r4, #0
   13f24:	ldr	r5, [r3]
   13f28:	beq	13f50 <ASN1_STRING_length@plt+0x1fdc>
   13f2c:	mov	r0, r4
   13f30:	bl	1bf00 <ASN1_STRING_length@plt+0x9f8c>
   13f34:	mov	r3, r0
   13f38:	mov	r2, r7
   13f3c:	mov	r0, r5
   13f40:	ldr	r1, [pc, #88]	; 13fa0 <ASN1_STRING_length@plt+0x202c>
   13f44:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   13f48:	mvn	r6, #1
   13f4c:	b	13eec <ASN1_STRING_length@plt+0x1f78>
   13f50:	ldr	r3, [pc, #76]	; 13fa4 <ASN1_STRING_length@plt+0x2030>
   13f54:	b	13f38 <ASN1_STRING_length@plt+0x1fc4>
   13f58:	bl	11d88 <__stack_chk_fail@plt>
   13f5c:	andeq	pc, r3, r8, ror #25
   13f60:	andeq	r0, r4, ip, rrx
   13f64:	andeq	r0, r4, r0, lsl #1
   13f68:	andeq	r0, r4, r4, lsl #1
   13f6c:	andeq	r0, r4, r0, ror r0
   13f70:	andeq	r0, r4, r4, ror r0
   13f74:	andeq	r0, r4, r4, rrx
   13f78:	andeq	r0, r4, r0, rrx
   13f7c:	andeq	r0, r4, ip
   13f80:	andeq	r3, r1, r8, lsr #31
   13f84:	andeq	r0, r4, r8, lsl #1
   13f88:	andeq	r0, r4, r8, ror r0
   13f8c:	andeq	r0, r4, r8, rrx
   13f90:	andeq	fp, r2, r4, asr #30
   13f94:	andeq	fp, r2, r8, ror pc
   13f98:	andeq	fp, r2, ip, asr #31
   13f9c:	andeq	r0, r4, r8
   13fa0:	andeq	fp, r2, ip, lsl pc
   13fa4:	andeq	fp, r2, r0, lsl pc
   13fa8:	cmp	r1, #0
   13fac:	push	{r4, r5, r6, lr}
   13fb0:	mov	r4, r2
   13fb4:	bne	13fe8 <ASN1_STRING_length@plt+0x2074>
   13fb8:	mov	r5, r0
   13fbc:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   13fc0:	cmp	r0, #0
   13fc4:	mov	r0, r5
   13fc8:	beq	14004 <ASN1_STRING_length@plt+0x2090>
   13fcc:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   13fd0:	mov	r3, r4
   13fd4:	ldr	r1, [pc, #80]	; 1402c <ASN1_STRING_length@plt+0x20b8>
   13fd8:	pop	{r4, r5, r6, lr}
   13fdc:	mov	r2, r0
   13fe0:	mov	r0, #1
   13fe4:	b	11aac <__printf_chk@plt>
   13fe8:	bl	232a0 <ASN1_STRING_length@plt+0x1132c>
   13fec:	mov	r3, r4
   13ff0:	ldr	r1, [pc, #56]	; 14030 <ASN1_STRING_length@plt+0x20bc>
   13ff4:	pop	{r4, r5, r6, lr}
   13ff8:	mov	r2, r0
   13ffc:	mov	r0, #1
   14000:	b	11aac <__printf_chk@plt>
   14004:	bl	23bc8 <ASN1_STRING_length@plt+0x11c54>
   14008:	cmp	r0, #0
   1400c:	popne	{r4, r5, r6, pc}
   14010:	mov	r0, r5
   14014:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   14018:	ldr	r1, [pc, #20]	; 14034 <ASN1_STRING_length@plt+0x20c0>
   1401c:	pop	{r4, r5, r6, lr}
   14020:	mov	r2, r0
   14024:	mov	r0, #1
   14028:	b	11aac <__printf_chk@plt>
   1402c:	andeq	ip, r2, r0, lsl r0
   14030:	strdeq	fp, [r2], -r4
   14034:	andeq	ip, r2, r4
   14038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1403c:	sub	sp, sp, #28
   14040:	ldr	r9, [pc, #800]	; 14368 <ASN1_STRING_length@plt+0x23f4>
   14044:	mov	r7, r1
   14048:	mov	r5, r0
   1404c:	ldr	r3, [r9]
   14050:	str	r3, [sp, #20]
   14054:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   14058:	ldr	r2, [pc, #780]	; 1436c <ASN1_STRING_length@plt+0x23f8>
   1405c:	mov	r3, #0
   14060:	str	r3, [sp, #12]
   14064:	ldr	r2, [r2]
   14068:	str	r3, [sp, #16]
   1406c:	cmp	r2, r3
   14070:	mov	r8, r0
   14074:	beq	141f0 <ASN1_STRING_length@plt+0x227c>
   14078:	ldr	r3, [pc, #752]	; 14370 <ASN1_STRING_length@plt+0x23fc>
   1407c:	ldr	r3, [r3]
   14080:	cmp	r3, #0
   14084:	beq	141c0 <ASN1_STRING_length@plt+0x224c>
   14088:	mov	r6, #0
   1408c:	mov	r1, #0
   14090:	ldr	r0, [sp, #16]
   14094:	bl	143a8 <ASN1_STRING_length@plt+0x2434>
   14098:	cmp	r7, #0
   1409c:	beq	140b0 <ASN1_STRING_length@plt+0x213c>
   140a0:	ldr	r3, [pc, #716]	; 14374 <ASN1_STRING_length@plt+0x2400>
   140a4:	ldr	r3, [r3]
   140a8:	cmp	r3, #0
   140ac:	bne	14254 <ASN1_STRING_length@plt+0x22e0>
   140b0:	ldr	r3, [pc, #696]	; 14370 <ASN1_STRING_length@plt+0x23fc>
   140b4:	ldr	r3, [r3]
   140b8:	cmp	r3, #0
   140bc:	beq	14184 <ASN1_STRING_length@plt+0x2210>
   140c0:	cmp	r6, #0
   140c4:	beq	1419c <ASN1_STRING_length@plt+0x2228>
   140c8:	mov	r0, r5
   140cc:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   140d0:	str	r0, [sp, #4]
   140d4:	mov	r0, r6
   140d8:	bl	11d4c <strdup@plt>
   140dc:	subs	r6, r0, #0
   140e0:	beq	1435c <ASN1_STRING_length@plt+0x23e8>
   140e4:	bl	11c44 <strlen@plt>
   140e8:	ldr	fp, [pc, #648]	; 14378 <ASN1_STRING_length@plt+0x2404>
   140ec:	mov	r5, r0
   140f0:	b	14144 <ASN1_STRING_length@plt+0x21d0>
   140f4:	sub	r0, r5, #12
   140f8:	bl	11d64 <malloc@plt>
   140fc:	sub	r8, r4, r6
   14100:	sub	r5, r5, #13
   14104:	add	r4, r4, #13
   14108:	sub	sl, r5, r8
   1410c:	subs	r7, r0, #0
   14110:	beq	1421c <ASN1_STRING_length@plt+0x22a8>
   14114:	mov	r1, r6
   14118:	mov	r2, r8
   1411c:	bl	11c5c <memcpy@plt>
   14120:	mov	r2, sl
   14124:	mov	r1, r4
   14128:	add	r0, r7, r8
   1412c:	bl	11c5c <memcpy@plt>
   14130:	mov	r3, #0
   14134:	mov	r0, r6
   14138:	strb	r3, [r7, r5]
   1413c:	bl	11ba8 <free@plt>
   14140:	mov	r6, r7
   14144:	mov	r1, fp
   14148:	mov	r0, r6
   1414c:	bl	11cf8 <strstr@plt>
   14150:	subs	r4, r0, #0
   14154:	bne	140f4 <ASN1_STRING_length@plt+0x2180>
   14158:	mov	r2, r6
   1415c:	ldr	r1, [pc, #536]	; 1437c <ASN1_STRING_length@plt+0x2408>
   14160:	ldr	r0, [pc, #536]	; 14380 <ASN1_STRING_length@plt+0x240c>
   14164:	bl	13a98 <ASN1_STRING_length@plt+0x1b24>
   14168:	ldr	r3, [pc, #532]	; 14384 <ASN1_STRING_length@plt+0x2410>
   1416c:	ldr	r3, [r3]
   14170:	cmp	r3, #0
   14174:	beq	14270 <ASN1_STRING_length@plt+0x22fc>
   14178:	mov	r0, r6
   1417c:	bl	11ba8 <free@plt>
   14180:	b	141b0 <ASN1_STRING_length@plt+0x223c>
   14184:	cmp	r6, #0
   14188:	bne	140c8 <ASN1_STRING_length@plt+0x2154>
   1418c:	mov	r0, r5
   14190:	bl	24860 <ASN1_STRING_length@plt+0x128ec>
   14194:	cmp	r0, #0
   14198:	bgt	1431c <ASN1_STRING_length@plt+0x23a8>
   1419c:	mov	r0, r5
   141a0:	bl	13b2c <ASN1_STRING_length@plt+0x1bb8>
   141a4:	mov	r4, r0
   141a8:	cmp	r4, #0
   141ac:	blt	14228 <ASN1_STRING_length@plt+0x22b4>
   141b0:	mov	r1, #0
   141b4:	ldr	r0, [sp, #12]
   141b8:	bl	143a8 <ASN1_STRING_length@plt+0x2434>
   141bc:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   141c0:	mov	r0, r5
   141c4:	bl	23bc8 <ASN1_STRING_length@plt+0x11c54>
   141c8:	cmp	r0, #0
   141cc:	blt	142d0 <ASN1_STRING_length@plt+0x235c>
   141d0:	bne	14088 <ASN1_STRING_length@plt+0x2114>
   141d4:	ldr	r3, [pc, #428]	; 14388 <ASN1_STRING_length@plt+0x2414>
   141d8:	mov	r2, r8
   141dc:	ldr	r1, [pc, #424]	; 1438c <ASN1_STRING_length@plt+0x2418>
   141e0:	ldr	r0, [r3]
   141e4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   141e8:	mvn	r4, #1
   141ec:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   141f0:	add	r2, sp, #16
   141f4:	add	r1, sp, #12
   141f8:	mov	r0, r5
   141fc:	bl	23344 <ASN1_STRING_length@plt+0x113d0>
   14200:	subs	r4, r0, #0
   14204:	blt	142fc <ASN1_STRING_length@plt+0x2388>
   14208:	mov	r0, r5
   1420c:	bl	23850 <ASN1_STRING_length@plt+0x118dc>
   14210:	subs	r6, r0, #0
   14214:	bne	1408c <ASN1_STRING_length@plt+0x2118>
   14218:	b	14078 <ASN1_STRING_length@plt+0x2104>
   1421c:	mov	r0, r6
   14220:	bl	11ba8 <free@plt>
   14224:	mvn	r4, #11
   14228:	ldr	r0, [sp, #12]
   1422c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   14230:	ldr	r0, [sp, #16]
   14234:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   14238:	ldr	r2, [sp, #20]
   1423c:	ldr	r3, [r9]
   14240:	mov	r0, r4
   14244:	cmp	r2, r3
   14248:	bne	14364 <ASN1_STRING_length@plt+0x23f0>
   1424c:	add	sp, sp, #28
   14250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14254:	mov	r0, r5
   14258:	bl	22938 <ASN1_STRING_length@plt+0x109c4>
   1425c:	mov	r1, #1
   14260:	bl	143a8 <ASN1_STRING_length@plt+0x2434>
   14264:	subs	r4, r0, #0
   14268:	bge	140b0 <ASN1_STRING_length@plt+0x213c>
   1426c:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   14270:	mov	r2, #1
   14274:	ldr	r1, [sp, #4]
   14278:	ldr	r0, [pc, #272]	; 14390 <ASN1_STRING_length@plt+0x241c>
   1427c:	bl	11f08 <setenv@plt>
   14280:	mov	r0, r6
   14284:	bl	11ab8 <system@plt>
   14288:	mov	r4, r0
   1428c:	ldr	r0, [pc, #252]	; 14390 <ASN1_STRING_length@plt+0x241c>
   14290:	bl	11a1c <unsetenv@plt>
   14294:	cmn	r4, #1
   14298:	beq	14338 <ASN1_STRING_length@plt+0x23c4>
   1429c:	asr	r3, r4, #8
   142a0:	ands	ip, r3, #255	; 0xff
   142a4:	beq	142c4 <ASN1_STRING_length@plt+0x2350>
   142a8:	ldr	r1, [pc, #216]	; 14388 <ASN1_STRING_length@plt+0x2414>
   142ac:	ldr	r3, [sp, #4]
   142b0:	ldr	r2, [pc, #196]	; 1437c <ASN1_STRING_length@plt+0x2408>
   142b4:	ldr	r0, [r1]
   142b8:	ldr	r1, [pc, #212]	; 14394 <ASN1_STRING_length@plt+0x2420>
   142bc:	rsb	r4, ip, #0
   142c0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   142c4:	mov	r0, r6
   142c8:	bl	11ba8 <free@plt>
   142cc:	b	141a8 <ASN1_STRING_length@plt+0x2234>
   142d0:	ldr	r3, [pc, #192]	; 14398 <ASN1_STRING_length@plt+0x2424>
   142d4:	ldr	r4, [r3]
   142d8:	cmp	r4, #0
   142dc:	beq	14228 <ASN1_STRING_length@plt+0x22b4>
   142e0:	ldr	r3, [pc, #160]	; 14388 <ASN1_STRING_length@plt+0x2414>
   142e4:	mov	r2, r8
   142e8:	ldr	r1, [pc, #172]	; 1439c <ASN1_STRING_length@plt+0x2428>
   142ec:	ldr	r0, [r3]
   142f0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   142f4:	mvn	r4, #1
   142f8:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   142fc:	rsb	r0, r4, #0
   14300:	bl	119f8 <strerror@plt>
   14304:	mov	r2, r8
   14308:	ldr	r1, [pc, #144]	; 143a0 <ASN1_STRING_length@plt+0x242c>
   1430c:	mov	r3, r0
   14310:	mov	r0, #4
   14314:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14318:	b	14238 <ASN1_STRING_length@plt+0x22c4>
   1431c:	ldr	r3, [pc, #100]	; 14388 <ASN1_STRING_length@plt+0x2414>
   14320:	mov	r2, r8
   14324:	ldr	r1, [pc, #120]	; 143a4 <ASN1_STRING_length@plt+0x2430>
   14328:	ldr	r0, [r3]
   1432c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14330:	mvn	r4, #15
   14334:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   14338:	ldr	r1, [pc, #72]	; 14388 <ASN1_STRING_length@plt+0x2414>
   1433c:	ldr	r3, [sp, #4]
   14340:	ldr	r2, [pc, #52]	; 1437c <ASN1_STRING_length@plt+0x2408>
   14344:	ldr	r0, [r1]
   14348:	ldr	r1, [pc, #68]	; 14394 <ASN1_STRING_length@plt+0x2420>
   1434c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14350:	mov	r0, r6
   14354:	bl	11ba8 <free@plt>
   14358:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   1435c:	mvn	r4, #11
   14360:	b	14228 <ASN1_STRING_length@plt+0x22b4>
   14364:	bl	11d88 <__stack_chk_fail@plt>
   14368:	andeq	pc, r3, r8, ror #25
   1436c:	andeq	r0, r4, r0, ror r0
   14370:	andeq	r0, r4, r4, ror r0
   14374:	andeq	r0, r4, ip, ror r0
   14378:	andeq	ip, r2, ip, asr r0
   1437c:	andeq	ip, r2, ip, asr #1
   14380:	muleq	r2, r4, r5
   14384:	andeq	r0, r4, r4, rrx
   14388:	andeq	r0, r4, r8
   1438c:	strdeq	sl, [r2], -r0
   14390:	andeq	ip, r2, ip, rrx
   14394:	andeq	ip, r2, ip, ror r0
   14398:	andeq	r0, r4, r8, rrx
   1439c:	andeq	ip, r2, ip, lsr #1
   143a0:	andeq	ip, r2, r0, lsr #32
   143a4:	andeq	ip, r2, r4, asr #32
   143a8:	push	{r4, r5, r6, r7, r8, lr}
   143ac:	mov	r8, r1
   143b0:	mov	r7, r0
   143b4:	bl	1da58 <ASN1_STRING_length@plt+0xbae4>
   143b8:	subs	r4, r0, #0
   143bc:	bne	143d0 <ASN1_STRING_length@plt+0x245c>
   143c0:	b	14408 <ASN1_STRING_length@plt+0x2494>
   143c4:	bl	1d96c <ASN1_STRING_length@plt+0xb9f8>
   143c8:	subs	r4, r0, #0
   143cc:	beq	14408 <ASN1_STRING_length@plt+0x2494>
   143d0:	mov	r0, r4
   143d4:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   143d8:	mov	r1, #0
   143dc:	mov	r6, r0
   143e0:	bl	14038 <ASN1_STRING_length@plt+0x20c4>
   143e4:	mov	r5, r0
   143e8:	mov	r0, r6
   143ec:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   143f0:	ands	r3, r8, r5, lsr #31
   143f4:	mov	r1, r4
   143f8:	mov	r0, r7
   143fc:	beq	143c4 <ASN1_STRING_length@plt+0x2450>
   14400:	mov	r0, r5
   14404:	pop	{r4, r5, r6, r7, r8, pc}
   14408:	mov	r5, #0
   1440c:	mov	r0, r5
   14410:	pop	{r4, r5, r6, r7, r8, pc}
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14418:	sub	sp, sp, #4544	; 0x11c0
   1441c:	ldr	r3, [pc, #3560]	; 1520c <ASN1_STRING_length@plt+0x3298>
   14420:	sub	sp, sp, #12
   14424:	add	r2, sp, #4544	; 0x11c0
   14428:	ldr	r3, [r3]
   1442c:	add	r2, r2, #4
   14430:	mov	r5, r0
   14434:	ldr	r0, [pc, #3540]	; 15210 <ASN1_STRING_length@plt+0x329c>
   14438:	mov	sl, r1
   1443c:	str	r3, [r2]
   14440:	bl	11aa0 <getenv@plt>
   14444:	subs	r9, r0, #0
   14448:	beq	14abc <ASN1_STRING_length@plt+0x2b48>
   1444c:	ldrb	r3, [r9]
   14450:	cmp	r3, #0
   14454:	beq	14c74 <ASN1_STRING_length@plt+0x2d00>
   14458:	mov	r6, r9
   1445c:	mov	r2, #0
   14460:	cmp	r3, #32
   14464:	ldrb	r3, [r6, #1]!
   14468:	addeq	r2, r2, #1
   1446c:	cmp	r3, #0
   14470:	bne	14460 <ASN1_STRING_length@plt+0x24ec>
   14474:	sub	r6, r6, r9
   14478:	add	r8, r5, #3
   1447c:	add	r8, r8, r2
   14480:	add	r0, r8, r6
   14484:	lsl	r0, r0, #2
   14488:	bl	11d64 <malloc@plt>
   1448c:	subs	r4, r0, #0
   14490:	beq	14ac8 <ASN1_STRING_length@plt+0x2b54>
   14494:	ldr	r3, [sl]
   14498:	add	r7, r4, r8, lsl #2
   1449c:	add	r2, r6, #1
   144a0:	mov	r1, r9
   144a4:	str	r3, [r4]
   144a8:	mov	r0, r7
   144ac:	bl	11c5c <memcpy@plt>
   144b0:	ldrb	r2, [r4, r8, lsl #2]
   144b4:	add	r6, r7, r6
   144b8:	cmp	r2, #0
   144bc:	addeq	r0, r4, #4
   144c0:	moveq	r8, #1
   144c4:	beq	14544 <ASN1_STRING_length@plt+0x25d0>
   144c8:	mov	r3, #0
   144cc:	mov	lr, r3
   144d0:	mov	r1, r7
   144d4:	mov	r8, #1
   144d8:	b	144fc <ASN1_STRING_length@plt+0x2588>
   144dc:	ldrb	ip, [r3]
   144e0:	cmp	ip, r2
   144e4:	addne	ip, r1, #1
   144e8:	beq	147a4 <ASN1_STRING_length@plt+0x2830>
   144ec:	ldrb	r2, [r1, #1]
   144f0:	mov	r1, ip
   144f4:	cmp	r2, #0
   144f8:	beq	14534 <ASN1_STRING_length@plt+0x25c0>
   144fc:	lsl	r9, r8, #2
   14500:	cmp	r3, #0
   14504:	add	r0, r4, r9
   14508:	bne	144dc <ASN1_STRING_length@plt+0x2568>
   1450c:	cmp	r2, #32
   14510:	add	ip, r1, #1
   14514:	beq	14824 <ASN1_STRING_length@plt+0x28b0>
   14518:	cmp	r2, #39	; 0x27
   1451c:	cmpne	r2, #34	; 0x22
   14520:	ldrb	r2, [r1, #1]
   14524:	moveq	r3, r1
   14528:	mov	r1, ip
   1452c:	cmp	r2, #0
   14530:	bne	144fc <ASN1_STRING_length@plt+0x2588>
   14534:	cmp	r7, ip
   14538:	addcc	r8, r8, #1
   1453c:	strcc	r7, [r0]
   14540:	addcc	r0, r4, r8, lsl #2
   14544:	sub	r2, r5, #1
   14548:	add	r1, sl, #4
   1454c:	add	r5, r8, r5
   14550:	lsl	r2, r2, #2
   14554:	bl	11c5c <memcpy@plt>
   14558:	mov	r3, #0
   1455c:	str	r3, [r4, r5, lsl #2]
   14560:	sub	r5, r5, #1
   14564:	mov	r6, #0
   14568:	ldr	r9, [pc, #3236]	; 15214 <ASN1_STRING_length@plt+0x32a0>
   1456c:	ldr	r8, [pc, #3236]	; 15218 <ASN1_STRING_length@plt+0x32a4>
   14570:	mov	fp, r6
   14574:	add	r7, sp, #56	; 0x38
   14578:	str	r6, [sp, #32]
   1457c:	str	r6, [sp, #36]	; 0x24
   14580:	str	r6, [sp, #40]	; 0x28
   14584:	str	r6, [sp, #28]
   14588:	str	r6, [sp, #24]
   1458c:	str	r6, [sp, #20]
   14590:	str	r6, [sp, #16]
   14594:	mov	ip, #0
   14598:	str	r7, [sp]
   1459c:	mov	r3, r9
   145a0:	mov	r2, r8
   145a4:	mov	r1, r4
   145a8:	mov	r0, r5
   145ac:	str	ip, [sp, #56]	; 0x38
   145b0:	bl	11bcc <getopt_long@plt>
   145b4:	cmn	r0, #1
   145b8:	beq	14adc <ASN1_STRING_length@plt+0x2b68>
   145bc:	sub	r3, r0, #1
   145c0:	cmp	r3, #117	; 0x75
   145c4:	ldrls	pc, [pc, r3, lsl #2]
   145c8:	b	14aa4 <ASN1_STRING_length@plt+0x2b30>
   145cc:	andeq	r4, r1, ip, ror #20
   145d0:	andeq	r4, r1, ip, ror sl
   145d4:	andeq	r4, r1, r4, lsr #17
   145d8:	muleq	r1, r8, r8
   145dc:	andeq	r4, r1, ip, lsl #21
   145e0:	muleq	r1, ip, sl
   145e4:	andeq	r4, r1, r4, lsr #21
   145e8:	andeq	r4, r1, r4, lsr #21
   145ec:	andeq	r4, r1, r4, lsr #21
   145f0:	andeq	r4, r1, r4, lsr #21
   145f4:	andeq	r4, r1, r4, lsr #21
   145f8:	andeq	r4, r1, r4, lsr #21
   145fc:	andeq	r4, r1, r4, lsr #21
   14600:	andeq	r4, r1, r4, lsr #21
   14604:	andeq	r4, r1, r4, lsr #21
   14608:	andeq	r4, r1, r4, lsr #21
   1460c:	andeq	r4, r1, r4, lsr #21
   14610:	andeq	r4, r1, r4, lsr #21
   14614:	andeq	r4, r1, r4, lsr #21
   14618:	andeq	r4, r1, r4, lsr #21
   1461c:	andeq	r4, r1, r4, lsr #21
   14620:	andeq	r4, r1, r4, lsr #21
   14624:	andeq	r4, r1, r4, lsr #21
   14628:	andeq	r4, r1, r4, lsr #21
   1462c:	andeq	r4, r1, r4, lsr #21
   14630:	andeq	r4, r1, r4, lsr #21
   14634:	andeq	r4, r1, r4, lsr #21
   14638:	andeq	r4, r1, r4, lsr #21
   1463c:	andeq	r4, r1, r4, lsr #21
   14640:	andeq	r4, r1, r4, lsr #21
   14644:	andeq	r4, r1, r4, lsr #21
   14648:	andeq	r4, r1, r4, lsr #21
   1464c:	andeq	r4, r1, r4, lsr #21
   14650:	andeq	r4, r1, r4, lsr #21
   14654:	andeq	r4, r1, r4, lsr #21
   14658:	andeq	r4, r1, r4, lsr #21
   1465c:	andeq	r4, r1, r4, lsr #21
   14660:	andeq	r4, r1, r4, lsr #21
   14664:	andeq	r4, r1, r4, lsr #21
   14668:	andeq	r4, r1, r4, lsr #21
   1466c:	andeq	r4, r1, r4, lsr #21
   14670:	andeq	r4, r1, r4, lsr #21
   14674:	andeq	r4, r1, r4, lsr #21
   14678:	andeq	r4, r1, r4, lsr #21
   1467c:	andeq	r4, r1, r4, lsr #21
   14680:	andeq	r4, r1, r4, lsr #21
   14684:	andeq	r4, r1, r4, lsr #21
   14688:	andeq	r4, r1, r4, lsr #21
   1468c:	andeq	r4, r1, r4, lsr #21
   14690:	andeq	r4, r1, r4, lsr #21
   14694:	andeq	r4, r1, r4, lsr #21
   14698:	andeq	r4, r1, r4, lsr #21
   1469c:	andeq	r4, r1, r4, lsr #21
   146a0:	andeq	r4, r1, r4, lsr #21
   146a4:	andeq	r4, r1, r4, lsr #21
   146a8:	andeq	r4, r1, r4, lsr #21
   146ac:	andeq	r4, r1, r4, lsr #21
   146b0:	andeq	r4, r1, r4, lsr #21
   146b4:	andeq	r4, r1, r4, lsr #21
   146b8:	andeq	r4, r1, r4, lsr #21
   146bc:	andeq	r4, r1, r4, lsr #21
   146c0:	andeq	r4, r1, r4, lsr #21
   146c4:	andeq	r4, r1, ip, asr #16
   146c8:	andeq	r4, r1, r4, lsr #21
   146cc:	andeq	r4, r1, r4, lsr #21
   146d0:	andeq	r4, r1, r4, lsr #21
   146d4:			; <UNDEFINED> instruction: 0x000148b4
   146d8:	andeq	r4, r1, ip, lsl r9
   146dc:	andeq	r4, r1, r4, lsr #21
   146e0:	andeq	r4, r1, r4, lsr #21
   146e4:	andeq	r4, r1, r4, lsr #21
   146e8:	andeq	r4, r1, r4, lsr #21
   146ec:	andeq	r4, r1, r4, lsr #21
   146f0:	andeq	r4, r1, r4, lsr #21
   146f4:	andeq	r4, r1, r4, lsr #21
   146f8:	andeq	r4, r1, r4, lsr #21
   146fc:	andeq	r4, r1, r4, lsr #21
   14700:	andeq	r4, r1, r4, lsr #21
   14704:	andeq	r4, r1, r4, lsr #21
   14708:	andeq	r4, r1, r4, lsr #21
   1470c:	andeq	r4, r1, r4, lsr #21
   14710:	andeq	r4, r1, ip, lsr r9
   14714:	andeq	r4, r1, ip, asr #18
   14718:	andeq	r4, r1, r4, lsr #21
   1471c:	andeq	r4, r1, r4, lsr #21
   14720:	andeq	r4, r1, ip, asr r9
   14724:	andeq	r4, r1, r4, lsr #21
   14728:	andeq	r4, r1, r4, lsr #21
   1472c:	andeq	r4, r1, r4, lsr #21
   14730:	andeq	r4, r1, r4, lsr #21
   14734:	andeq	r4, r1, r4, lsr #21
   14738:	andeq	r4, r1, r4, lsr #21
   1473c:	andeq	r4, r1, r4, lsr #21
   14740:	andeq	r4, r1, r4, lsr #21
   14744:	andeq	r4, r1, r4, lsr #21
   14748:	andeq	r4, r1, r4, lsr #21
   1474c:	andeq	r4, r1, r4, ror r9
   14750:	andeq	r4, r1, ip, lsl #19
   14754:	muleq	r1, ip, r9
   14758:	andeq	r4, r1, r4, lsr #19
   1475c:	andeq	r4, r1, r4, lsr #21
   14760:			; <UNDEFINED> instruction: 0x000149b4
   14764:	andeq	r4, r1, r4, lsr #21
   14768:	andeq	r4, r1, r4, asr #19
   1476c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14770:	andeq	r4, r1, r4, lsr #21
   14774:	andeq	r4, r1, r4, lsr #21
   14778:	andeq	r4, r1, r4, lsr #21
   1477c:	andeq	r4, r1, r4, lsr #21
   14780:	andeq	r4, r1, r4, lsl #20
   14784:	andeq	r4, r1, r4, lsr #21
   14788:	andeq	r4, r1, r4, lsr #21
   1478c:	andeq	r4, r1, r4, lsl sl
   14790:	andeq	r4, r1, ip, lsr #20
   14794:	andeq	r4, r1, r8, lsr sl
   14798:	andeq	r4, r1, r4, lsr #21
   1479c:	andeq	r4, r1, r4, lsr #21
   147a0:	andeq	r4, r1, r0, asr sl
   147a4:	cmp	r7, r3
   147a8:	bne	147d4 <ASN1_STRING_length@plt+0x2860>
   147ac:	add	r3, r7, #1
   147b0:	mov	r7, r1
   147b4:	add	r9, r9, #4
   147b8:	str	r3, [r0]
   147bc:	add	r8, r8, #1
   147c0:	strb	lr, [r7], #1
   147c4:	add	r0, r4, r9
   147c8:	mov	r3, #0
   147cc:	mov	ip, r7
   147d0:	b	144ec <ASN1_STRING_length@plt+0x2578>
   147d4:	sub	ip, r1, #1
   147d8:	cmp	ip, r3
   147dc:	bls	147f0 <ASN1_STRING_length@plt+0x287c>
   147e0:	ldrb	r2, [r3, #1]
   147e4:	strb	r2, [r3], #1
   147e8:	cmp	ip, r3
   147ec:	bne	147e0 <ASN1_STRING_length@plt+0x286c>
   147f0:	sub	r9, r6, #2
   147f4:	cmp	ip, r9
   147f8:	movcc	r3, ip
   147fc:	bcs	14810 <ASN1_STRING_length@plt+0x289c>
   14800:	ldrb	r2, [r3, #2]
   14804:	strb	r2, [r3], #1
   14808:	cmp	r9, r3
   1480c:	bne	14800 <ASN1_STRING_length@plt+0x288c>
   14810:	strb	lr, [r6, #-2]
   14814:	sub	r1, r1, #2
   14818:	mov	r6, r9
   1481c:	mov	r3, #0
   14820:	b	144ec <ASN1_STRING_length@plt+0x2578>
   14824:	add	r9, r9, #4
   14828:	str	r7, [r0]
   1482c:	add	r8, r8, #1
   14830:	add	r0, r4, r9
   14834:	strb	r3, [r1]
   14838:	mov	r7, ip
   1483c:	b	144ec <ASN1_STRING_length@plt+0x2578>
   14840:	ldr	r1, [pc, #2516]	; 1521c <ASN1_STRING_length@plt+0x32a8>
   14844:	mov	r0, #3
   14848:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1484c:	mov	fp, #1
   14850:	bl	1a1b8 <ASN1_STRING_length@plt+0x8244>
   14854:	cmp	sl, r4
   14858:	beq	14864 <ASN1_STRING_length@plt+0x28f0>
   1485c:	mov	r0, r4
   14860:	bl	11ba8 <free@plt>
   14864:	ldr	r0, [sp, #16]
   14868:	bl	11ba8 <free@plt>
   1486c:	add	r3, sp, #4544	; 0x11c0
   14870:	add	r3, r3, #4
   14874:	ldr	r2, [r3]
   14878:	ldr	r3, [pc, #2444]	; 1520c <ASN1_STRING_length@plt+0x3298>
   1487c:	mov	r0, fp
   14880:	ldr	r3, [r3]
   14884:	cmp	r2, r3
   14888:	bne	151fc <ASN1_STRING_length@plt+0x3288>
   1488c:	add	sp, sp, #4544	; 0x11c0
   14890:	add	sp, sp, #12
   14894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14898:	mov	r3, #1
   1489c:	str	r3, [sp, #32]
   148a0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   148a4:	ldr	r3, [pc, #2420]	; 15220 <ASN1_STRING_length@plt+0x32ac>
   148a8:	mov	r2, #1
   148ac:	str	r2, [r3]
   148b0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   148b4:	ldr	r3, [sp, #20]
   148b8:	ldr	r0, [sp, #16]
   148bc:	add	r3, r3, #2
   148c0:	lsl	r3, r3, #2
   148c4:	mov	r1, r3
   148c8:	str	r3, [sp, #44]	; 0x2c
   148cc:	bl	11ec0 <realloc@plt>
   148d0:	ldr	r3, [sp, #44]	; 0x2c
   148d4:	subs	r2, r0, #0
   148d8:	beq	150f8 <ASN1_STRING_length@plt+0x3184>
   148dc:	ldr	r1, [pc, #2368]	; 15224 <ASN1_STRING_length@plt+0x32b0>
   148e0:	add	r3, r2, r3
   148e4:	str	r2, [sp, #16]
   148e8:	ldr	ip, [r1]
   148ec:	ldr	r2, [sp, #20]
   148f0:	mov	r0, #0
   148f4:	add	r2, r2, #1
   148f8:	str	r0, [r3, #-4]
   148fc:	str	ip, [r3, #-8]
   14900:	ldr	r0, [pc, #2336]	; 15228 <ASN1_STRING_length@plt+0x32b4>
   14904:	str	r2, [sp, #20]
   14908:	bl	139cc <ASN1_STRING_length@plt+0x1a58>
   1490c:	ldr	r1, [pc, #2320]	; 15224 <ASN1_STRING_length@plt+0x32b0>
   14910:	ldr	r0, [r1]
   14914:	bl	139cc <ASN1_STRING_length@plt+0x1a58>
   14918:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1491c:	ldr	r0, [pc, #2312]	; 1522c <ASN1_STRING_length@plt+0x32b8>
   14920:	ldr	r1, [pc, #2312]	; 15230 <ASN1_STRING_length@plt+0x32bc>
   14924:	ldr	r2, [pc, #2312]	; 15234 <ASN1_STRING_length@plt+0x32c0>
   14928:	mov	r3, #1
   1492c:	str	r3, [r0]
   14930:	str	r3, [r1]
   14934:	str	r3, [r2]
   14938:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1493c:	ldr	r3, [pc, #2292]	; 15238 <ASN1_STRING_length@plt+0x32c4>
   14940:	mov	r2, #1
   14944:	str	r2, [r3]
   14948:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1494c:	ldr	r3, [pc, #2256]	; 15224 <ASN1_STRING_length@plt+0x32b0>
   14950:	ldr	r3, [r3]
   14954:	str	r3, [sp, #28]
   14958:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1495c:	ldr	r0, [pc, #2264]	; 1523c <ASN1_STRING_length@plt+0x32c8>
   14960:	bl	11e0c <puts@plt>
   14964:	ldr	r0, [pc, #2260]	; 15240 <ASN1_STRING_length@plt+0x32cc>
   14968:	bl	11e0c <puts@plt>
   1496c:	mov	fp, #0
   14970:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   14974:	ldr	r3, [pc, #2248]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   14978:	mov	r2, #4
   1497c:	mov	r1, #1
   14980:	str	r1, [sp, #40]	; 0x28
   14984:	str	r2, [r3]
   14988:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1498c:	ldr	r3, [pc, #2228]	; 15248 <ASN1_STRING_length@plt+0x32d4>
   14990:	mov	r2, #1
   14994:	str	r2, [r3]
   14998:	b	14594 <ASN1_STRING_length@plt+0x2620>
   1499c:	mov	fp, #1
   149a0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   149a4:	ldr	r3, [pc, #2168]	; 15224 <ASN1_STRING_length@plt+0x32b0>
   149a8:	ldr	r3, [r3]
   149ac:	str	r3, [sp, #24]
   149b0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   149b4:	ldr	r3, [pc, #2192]	; 1524c <ASN1_STRING_length@plt+0x32d8>
   149b8:	mov	r2, #1
   149bc:	str	r2, [r3]
   149c0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   149c4:	ldr	r3, [pc, #2180]	; 15250 <ASN1_STRING_length@plt+0x32dc>
   149c8:	ldr	r1, [pc, #2180]	; 15254 <ASN1_STRING_length@plt+0x32e0>
   149cc:	mov	r0, #1
   149d0:	ldr	r3, [r3]
   149d4:	mov	fp, #0
   149d8:	str	r3, [sp, #12]
   149dc:	str	r3, [sp, #8]
   149e0:	str	r3, [sp, #4]
   149e4:	str	r3, [sp]
   149e8:	mov	r2, r3
   149ec:	bl	11aac <__printf_chk@plt>
   149f0:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   149f4:	ldr	r3, [pc, #2140]	; 15258 <ASN1_STRING_length@plt+0x32e4>
   149f8:	mov	r2, #1
   149fc:	str	r2, [r3]
   14a00:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a04:	ldr	r3, [pc, #2084]	; 15230 <ASN1_STRING_length@plt+0x32bc>
   14a08:	mov	r2, #1
   14a0c:	str	r2, [r3]
   14a10:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a14:	ldr	r0, [pc, #2112]	; 1525c <ASN1_STRING_length@plt+0x32e8>
   14a18:	bl	139cc <ASN1_STRING_length@plt+0x1a58>
   14a1c:	ldr	r2, [pc, #2108]	; 15260 <ASN1_STRING_length@plt+0x32ec>
   14a20:	mov	r3, #0
   14a24:	str	r3, [r2]
   14a28:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a2c:	mov	r3, #1
   14a30:	str	r3, [sp, #36]	; 0x24
   14a34:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a38:	ldr	r0, [pc, #2084]	; 15264 <ASN1_STRING_length@plt+0x32f0>
   14a3c:	bl	139cc <ASN1_STRING_length@plt+0x1a58>
   14a40:	ldr	r3, [pc, #2080]	; 15268 <ASN1_STRING_length@plt+0x32f4>
   14a44:	mov	r2, #1
   14a48:	str	r2, [r3]
   14a4c:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a50:	ldr	r0, [pc, #2068]	; 1526c <ASN1_STRING_length@plt+0x32f8>
   14a54:	bl	139cc <ASN1_STRING_length@plt+0x1a58>
   14a58:	ldr	r2, [pc, #2048]	; 15260 <ASN1_STRING_length@plt+0x32ec>
   14a5c:	ldr	r3, [r2]
   14a60:	add	r3, r3, #1
   14a64:	str	r3, [r2]
   14a68:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a6c:	ldr	r3, [pc, #2044]	; 15270 <ASN1_STRING_length@plt+0x32fc>
   14a70:	mov	r2, #1
   14a74:	str	r2, [r3]
   14a78:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a7c:	ldr	r3, [pc, #2032]	; 15274 <ASN1_STRING_length@plt+0x3300>
   14a80:	mov	r2, #1
   14a84:	str	r2, [r3]
   14a88:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a8c:	ldr	r3, [pc, #2020]	; 15278 <ASN1_STRING_length@plt+0x3304>
   14a90:	mov	r2, #1
   14a94:	str	r2, [r3]
   14a98:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14a9c:	mov	r6, #1
   14aa0:	b	14594 <ASN1_STRING_length@plt+0x2620>
   14aa4:	mov	r2, r0
   14aa8:	ldr	r1, [pc, #1996]	; 1527c <ASN1_STRING_length@plt+0x3308>
   14aac:	mov	r0, #3
   14ab0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14ab4:	mov	fp, #1
   14ab8:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   14abc:	cmp	sl, #0
   14ac0:	movne	r4, sl
   14ac4:	bne	14564 <ASN1_STRING_length@plt+0x25f0>
   14ac8:	ldr	r1, [pc, #1968]	; 15280 <ASN1_STRING_length@plt+0x330c>
   14acc:	mov	r0, #3
   14ad0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14ad4:	mov	fp, #1
   14ad8:	b	1486c <ASN1_STRING_length@plt+0x28f8>
   14adc:	ldr	r2, [pc, #1924]	; 15268 <ASN1_STRING_length@plt+0x32f4>
   14ae0:	ldr	r3, [pc, #1948]	; 15284 <ASN1_STRING_length@plt+0x3310>
   14ae4:	ldr	r0, [r2]
   14ae8:	ldr	r8, [r3]
   14aec:	adds	r0, r0, #0
   14af0:	movne	r0, #1
   14af4:	sub	r9, r5, r8
   14af8:	bl	1a18c <ASN1_STRING_length@plt+0x8218>
   14afc:	orrs	r3, fp, r9
   14b00:	beq	14840 <ASN1_STRING_length@plt+0x28cc>
   14b04:	ldr	r2, [sp, #24]
   14b08:	ldr	ip, [sp, #28]
   14b0c:	orrs	r0, r2, ip
   14b10:	beq	14b5c <ASN1_STRING_length@plt+0x2be8>
   14b14:	ldr	r3, [pc, #1900]	; 15288 <ASN1_STRING_length@plt+0x3314>
   14b18:	subs	r1, r2, #0
   14b1c:	moveq	r1, r3
   14b20:	cmp	ip, #0
   14b24:	str	r1, [sp, #24]
   14b28:	beq	14d88 <ASN1_STRING_length@plt+0x2e14>
   14b2c:	ldr	r1, [sp, #28]
   14b30:	ldr	r2, [pc, #1876]	; 1528c <ASN1_STRING_length@plt+0x3318>
   14b34:	str	r1, [sp, #8]
   14b38:	ldr	r1, [sp, #24]
   14b3c:	mov	r3, #4096	; 0x1000
   14b40:	str	r1, [sp, #4]
   14b44:	str	r2, [sp]
   14b48:	add	r0, sp, #452	; 0x1c4
   14b4c:	mov	r1, r3
   14b50:	mov	r2, #1
   14b54:	bl	11cc8 <__snprintf_chk@plt>
   14b58:	add	r0, sp, #452	; 0x1c4
   14b5c:	ldr	r1, [sp, #16]
   14b60:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   14b64:	subs	r3, r0, #0
   14b68:	str	r3, [sp, #20]
   14b6c:	beq	14e68 <ASN1_STRING_length@plt+0x2ef4>
   14b70:	ldr	r3, [pc, #1768]	; 15260 <ASN1_STRING_length@plt+0x32ec>
   14b74:	ldr	r1, [r3]
   14b78:	bl	1a314 <ASN1_STRING_length@plt+0x83a0>
   14b7c:	ldr	r0, [sp, #20]
   14b80:	bl	1d4b0 <ASN1_STRING_length@plt+0xb53c>
   14b84:	cmp	fp, #0
   14b88:	bne	14c80 <ASN1_STRING_length@plt+0x2d0c>
   14b8c:	ldr	r3, [sp, #32]
   14b90:	cmp	r3, #0
   14b94:	add	r3, r4, r8, lsl #2
   14b98:	str	r3, [sp, #28]
   14b9c:	bne	14dcc <ASN1_STRING_length@plt+0x2e58>
   14ba0:	cmp	r6, #0
   14ba4:	bne	14ff8 <ASN1_STRING_length@plt+0x3084>
   14ba8:	ldr	r3, [sp, #36]	; 0x24
   14bac:	cmp	r3, #0
   14bb0:	beq	14eac <ASN1_STRING_length@plt+0x2f38>
   14bb4:	cmp	r9, #0
   14bb8:	ble	14c68 <ASN1_STRING_length@plt+0x2cf4>
   14bbc:	ldr	r3, [sp, #28]
   14bc0:	str	r4, [sp, #24]
   14bc4:	sub	r5, r3, #4
   14bc8:	add	fp, r5, r9, lsl #2
   14bcc:	ldr	r9, [sp, #20]
   14bd0:	str	sl, [sp, #28]
   14bd4:	ldr	r4, [r5, #4]!
   14bd8:	mov	r3, #0
   14bdc:	mov	r2, r7
   14be0:	mov	r1, r4
   14be4:	mov	r0, r9
   14be8:	str	r3, [sp, #56]	; 0x38
   14bec:	bl	22320 <ASN1_STRING_length@plt+0x103ac>
   14bf0:	cmp	r0, #0
   14bf4:	movlt	r6, r0
   14bf8:	blt	14c54 <ASN1_STRING_length@plt+0x2ce0>
   14bfc:	ldr	r8, [sp, #56]	; 0x38
   14c00:	cmp	r8, #0
   14c04:	bne	14c20 <ASN1_STRING_length@plt+0x2cac>
   14c08:	b	14e7c <ASN1_STRING_length@plt+0x2f08>
   14c0c:	mov	r1, r8
   14c10:	ldr	r0, [sp, #56]	; 0x38
   14c14:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   14c18:	subs	r8, r0, #0
   14c1c:	beq	14dc0 <ASN1_STRING_length@plt+0x2e4c>
   14c20:	mov	r0, r8
   14c24:	bl	22a54 <ASN1_STRING_length@plt+0x10ae0>
   14c28:	mov	r1, #1
   14c2c:	mov	sl, r0
   14c30:	bl	14038 <ASN1_STRING_length@plt+0x20c4>
   14c34:	mov	r4, r0
   14c38:	mov	r0, sl
   14c3c:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   14c40:	cmp	r4, #0
   14c44:	bge	14c0c <ASN1_STRING_length@plt+0x2c98>
   14c48:	ldr	r0, [sp, #56]	; 0x38
   14c4c:	mov	r6, r4
   14c50:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   14c54:	cmp	fp, r5
   14c58:	bne	14bd4 <ASN1_STRING_length@plt+0x2c60>
   14c5c:	ldr	r4, [sp, #24]
   14c60:	ldr	sl, [sp, #28]
   14c64:	lsr	fp, r6, #31
   14c68:	ldr	r0, [sp, #20]
   14c6c:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   14c70:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   14c74:	mov	r6, r3
   14c78:	mov	r2, r3
   14c7c:	b	14478 <ASN1_STRING_length@plt+0x2504>
   14c80:	ldr	lr, [pc, #1544]	; 15290 <ASN1_STRING_length@plt+0x331c>
   14c84:	add	ip, sp, #60	; 0x3c
   14c88:	add	r5, sp, #72	; 0x48
   14c8c:	ldm	lr!, {r0, r1, r2, r3}
   14c90:	add	r6, sp, #64	; 0x40
   14c94:	ldr	r8, [pc, #1528]	; 15294 <ASN1_STRING_length@plt+0x3320>
   14c98:	ldr	r9, [pc, #1528]	; 15298 <ASN1_STRING_length@plt+0x3324>
   14c9c:	stmia	ip!, {r0, r1, r2, r3}
   14ca0:	add	r7, r5, #40	; 0x28
   14ca4:	ldm	lr!, {r0, r1, r2, r3}
   14ca8:	ldr	fp, [sp, #20]
   14cac:	str	r4, [sp, #24]
   14cb0:	stmia	ip!, {r0, r1, r2, r3}
   14cb4:	ldm	lr, {r0, r1, r2, r3}
   14cb8:	stm	ip, {r0, r1, r2, r3}
   14cbc:	mov	r0, fp
   14cc0:	ldr	r3, [r6]
   14cc4:	blx	r3
   14cc8:	subs	r5, r0, #0
   14ccc:	beq	14d3c <ASN1_STRING_length@plt+0x2dc8>
   14cd0:	mov	r0, r5
   14cd4:	bl	1f8bc <ASN1_STRING_length@plt+0xd948>
   14cd8:	cmp	r0, #0
   14cdc:	beq	14d34 <ASN1_STRING_length@plt+0x2dc0>
   14ce0:	mov	r0, r5
   14ce4:	ldr	r4, [r6, #-4]
   14ce8:	bl	1f834 <ASN1_STRING_length@plt+0xd8c0>
   14cec:	mov	r2, r4
   14cf0:	mov	r1, r9
   14cf4:	mov	r3, r0
   14cf8:	mov	r0, #1
   14cfc:	bl	11aac <__printf_chk@plt>
   14d00:	mov	r0, r5
   14d04:	bl	1f858 <ASN1_STRING_length@plt+0xd8e4>
   14d08:	ldr	r1, [r8]
   14d0c:	subs	r4, r0, #0
   14d10:	beq	14db4 <ASN1_STRING_length@plt+0x2e40>
   14d14:	mov	r0, #32
   14d18:	bl	11e60 <putc@plt>
   14d1c:	mov	r0, r4
   14d20:	bl	11e0c <puts@plt>
   14d24:	mov	r0, r5
   14d28:	bl	1f8bc <ASN1_STRING_length@plt+0xd948>
   14d2c:	cmp	r0, #0
   14d30:	bne	14ce0 <ASN1_STRING_length@plt+0x2d6c>
   14d34:	mov	r0, r5
   14d38:	bl	1f8f0 <ASN1_STRING_length@plt+0xd97c>
   14d3c:	add	r6, r6, #8
   14d40:	cmp	r7, r6
   14d44:	bne	14cbc <ASN1_STRING_length@plt+0x2d48>
   14d48:	ldr	r0, [pc, #1356]	; 1529c <ASN1_STRING_length@plt+0x3328>
   14d4c:	ldr	r4, [sp, #24]
   14d50:	bl	11e0c <puts@plt>
   14d54:	ldr	r0, [r8]
   14d58:	bl	11c2c <fflush@plt>
   14d5c:	ldr	r5, [sp, #20]
   14d60:	mov	r2, #1
   14d64:	mov	r1, r2
   14d68:	mov	r0, r5
   14d6c:	bl	1d610 <ASN1_STRING_length@plt+0xb69c>
   14d70:	mov	r2, #1
   14d74:	mov	r1, #2
   14d78:	mov	r0, r5
   14d7c:	bl	1d610 <ASN1_STRING_length@plt+0xb69c>
   14d80:	mov	fp, #0
   14d84:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   14d88:	add	r0, sp, #60	; 0x3c
   14d8c:	bl	11b24 <uname@plt>
   14d90:	cmp	r0, #0
   14d94:	addge	r3, sp, #190	; 0xbe
   14d98:	strge	r3, [sp, #28]
   14d9c:	bge	14b2c <ASN1_STRING_length@plt+0x2bb8>
   14da0:	ldr	r1, [pc, #1272]	; 152a0 <ASN1_STRING_length@plt+0x332c>
   14da4:	mov	r0, #3
   14da8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14dac:	mov	fp, #1
   14db0:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   14db4:	mov	r0, #10
   14db8:	bl	11e60 <putc@plt>
   14dbc:	b	14cd0 <ASN1_STRING_length@plt+0x2d5c>
   14dc0:	ldr	r0, [sp, #56]	; 0x38
   14dc4:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   14dc8:	b	14c54 <ASN1_STRING_length@plt+0x2ce0>
   14dcc:	ldr	r5, [r4, r8, lsl #2]
   14dd0:	mov	r2, r7
   14dd4:	mov	r1, r5
   14dd8:	ldr	r0, [sp, #20]
   14ddc:	str	fp, [sp, #52]	; 0x34
   14de0:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   14de4:	cmp	r0, #0
   14de8:	blt	150dc <ASN1_STRING_length@plt+0x3168>
   14dec:	add	r1, sp, #52	; 0x34
   14df0:	ldr	r0, [sp, #56]	; 0x38
   14df4:	bl	24fcc <ASN1_STRING_length@plt+0x13058>
   14df8:	cmp	r0, #0
   14dfc:	blt	15194 <ASN1_STRING_length@plt+0x3220>
   14e00:	ldr	r5, [sp, #52]	; 0x34
   14e04:	cmp	r5, #0
   14e08:	beq	14e54 <ASN1_STRING_length@plt+0x2ee0>
   14e0c:	ldr	r6, [pc, #1168]	; 152a4 <ASN1_STRING_length@plt+0x3330>
   14e10:	mov	r0, r5
   14e14:	bl	24f88 <ASN1_STRING_length@plt+0x13014>
   14e18:	mov	r7, r0
   14e1c:	mov	r0, r5
   14e20:	bl	24fa0 <ASN1_STRING_length@plt+0x1302c>
   14e24:	str	r7, [sp]
   14e28:	mov	r2, r0
   14e2c:	mov	r3, r1
   14e30:	mov	r0, #1
   14e34:	mov	r1, r6
   14e38:	bl	11aac <__printf_chk@plt>
   14e3c:	mov	r1, r5
   14e40:	ldr	r0, [sp, #52]	; 0x34
   14e44:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   14e48:	subs	r5, r0, #0
   14e4c:	bne	14e10 <ASN1_STRING_length@plt+0x2e9c>
   14e50:	ldr	r5, [sp, #52]	; 0x34
   14e54:	mov	r0, r5
   14e58:	bl	24fc8 <ASN1_STRING_length@plt+0x13054>
   14e5c:	ldr	r0, [sp, #56]	; 0x38
   14e60:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   14e64:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   14e68:	ldr	r1, [pc, #1080]	; 152a8 <ASN1_STRING_length@plt+0x3334>
   14e6c:	mov	r0, #3
   14e70:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14e74:	mov	fp, #1
   14e78:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   14e7c:	ldr	r3, [pc, #960]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   14e80:	mov	r2, r4
   14e84:	ldr	r1, [pc, #1056]	; 152ac <ASN1_STRING_length@plt+0x3338>
   14e88:	ldr	r0, [r3]
   14e8c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   14e90:	ldr	r8, [sp, #56]	; 0x38
   14e94:	cmp	r8, #0
   14e98:	bne	14c20 <ASN1_STRING_length@plt+0x2cac>
   14e9c:	mov	r0, r8
   14ea0:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   14ea4:	mvn	r6, #1
   14ea8:	b	14c54 <ASN1_STRING_length@plt+0x2ce0>
   14eac:	ldr	r3, [sp, #40]	; 0x28
   14eb0:	cmp	r3, #0
   14eb4:	bne	15098 <ASN1_STRING_length@plt+0x3124>
   14eb8:	cmp	r9, #1
   14ebc:	ble	15200 <ASN1_STRING_length@plt+0x328c>
   14ec0:	ldr	r8, [sp, #40]	; 0x28
   14ec4:	ldr	r3, [sp, #28]
   14ec8:	mov	fp, r8
   14ecc:	str	r3, [sp, #24]
   14ed0:	mov	r7, #1
   14ed4:	str	r9, [sp, #32]
   14ed8:	str	r4, [sp, #36]	; 0x24
   14edc:	str	sl, [sp, #40]	; 0x28
   14ee0:	b	14f08 <ASN1_STRING_length@plt+0x2f94>
   14ee4:	mov	r1, r6
   14ee8:	add	r2, r4, #1
   14eec:	add	fp, fp, r4
   14ef0:	bl	11c5c <memcpy@plt>
   14ef4:	ldr	r3, [sp, #32]
   14ef8:	add	r7, r7, #1
   14efc:	cmp	r3, r7
   14f00:	mov	r8, r9
   14f04:	beq	15160 <ASN1_STRING_length@plt+0x31ec>
   14f08:	ldr	r3, [sp, #24]
   14f0c:	ldr	r6, [r3, #4]!
   14f10:	mov	r0, r6
   14f14:	str	r3, [sp, #24]
   14f18:	bl	11c44 <strlen@plt>
   14f1c:	mov	r1, #61	; 0x3d
   14f20:	mov	r4, r0
   14f24:	mov	r0, r6
   14f28:	bl	11ac4 <strchr@plt>
   14f2c:	subs	r5, r0, #0
   14f30:	moveq	sl, r5
   14f34:	beq	14f70 <ASN1_STRING_length@plt+0x2ffc>
   14f38:	ldrb	r3, [r5, #1]
   14f3c:	add	r5, r5, #1
   14f40:	cmp	r3, #34	; 0x22
   14f44:	cmpne	r3, #39	; 0x27
   14f48:	moveq	r2, #0
   14f4c:	movne	r2, #1
   14f50:	moveq	sl, r2
   14f54:	beq	14f70 <ASN1_STRING_length@plt+0x2ffc>
   14f58:	mov	r1, #32
   14f5c:	mov	r0, r5
   14f60:	bl	11ac4 <strchr@plt>
   14f64:	cmp	r0, #0
   14f68:	moveq	sl, #0
   14f6c:	movne	sl, #2
   14f70:	add	r1, r4, fp
   14f74:	add	r1, r1, #2
   14f78:	add	r1, r1, sl
   14f7c:	mov	r0, r8
   14f80:	bl	11ec0 <realloc@plt>
   14f84:	subs	r9, r0, #0
   14f88:	beq	1510c <ASN1_STRING_length@plt+0x3198>
   14f8c:	cmp	fp, #0
   14f90:	movne	r1, #32
   14f94:	strbne	r1, [r9, fp]
   14f98:	addne	fp, fp, #1
   14f9c:	addne	r0, r9, fp
   14fa0:	moveq	r0, r9
   14fa4:	cmp	sl, #0
   14fa8:	beq	14ee4 <ASN1_STRING_length@plt+0x2f70>
   14fac:	sub	r8, r5, r6
   14fb0:	add	fp, fp, r8
   14fb4:	mov	r1, r6
   14fb8:	mov	r2, r8
   14fbc:	sub	r4, r4, r8
   14fc0:	add	r8, fp, #1
   14fc4:	bl	11c5c <memcpy@plt>
   14fc8:	mov	r6, #34	; 0x22
   14fcc:	mov	r2, r4
   14fd0:	add	r4, r4, r8
   14fd4:	strb	r6, [r9, fp]
   14fd8:	mov	r1, r5
   14fdc:	add	r0, r9, r8
   14fe0:	add	fp, r4, #1
   14fe4:	bl	11c5c <memcpy@plt>
   14fe8:	mov	r3, #0
   14fec:	strb	r6, [r9, r4]
   14ff0:	strb	r3, [r9, fp]
   14ff4:	b	14ef4 <ASN1_STRING_length@plt+0x2f80>
   14ff8:	ldr	r3, [sp, #28]
   14ffc:	mov	r2, r7
   15000:	ldr	r0, [sp, #20]
   15004:	ldr	r5, [r3]
   15008:	str	fp, [sp, #52]	; 0x34
   1500c:	mov	r1, r5
   15010:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   15014:	cmp	r0, #0
   15018:	blt	15144 <ASN1_STRING_length@plt+0x31d0>
   1501c:	add	r1, sp, #52	; 0x34
   15020:	ldr	r0, [sp, #56]	; 0x38
   15024:	bl	251ac <ASN1_STRING_length@plt+0x13238>
   15028:	cmp	r0, #0
   1502c:	blt	151c8 <ASN1_STRING_length@plt+0x3254>
   15030:	ldr	r5, [sp, #52]	; 0x34
   15034:	cmp	r5, #0
   15038:	beq	15080 <ASN1_STRING_length@plt+0x310c>
   1503c:	ldr	r7, [pc, #608]	; 152a4 <ASN1_STRING_length@plt+0x3330>
   15040:	mov	r0, r5
   15044:	bl	25168 <ASN1_STRING_length@plt+0x131f4>
   15048:	mov	r6, r0
   1504c:	mov	r0, r5
   15050:	bl	25180 <ASN1_STRING_length@plt+0x1320c>
   15054:	str	r6, [sp]
   15058:	mov	r2, r0
   1505c:	mov	r3, r1
   15060:	mov	r0, #1
   15064:	mov	r1, r7
   15068:	bl	11aac <__printf_chk@plt>
   1506c:	mov	r1, r5
   15070:	ldr	r0, [sp, #52]	; 0x34
   15074:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   15078:	subs	r5, r0, #0
   1507c:	bne	15040 <ASN1_STRING_length@plt+0x30cc>
   15080:	ldr	r0, [sp, #52]	; 0x34
   15084:	bl	251a8 <ASN1_STRING_length@plt+0x13234>
   15088:	ldr	r0, [sp, #56]	; 0x38
   1508c:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   15090:	mov	fp, #0
   15094:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   15098:	cmp	r9, #0
   1509c:	ble	14c68 <ASN1_STRING_length@plt+0x2cf4>
   150a0:	ldr	r3, [sp, #28]
   150a4:	ldr	r6, [sp, #36]	; 0x24
   150a8:	sub	r5, r3, #4
   150ac:	ldr	r7, [sp, #20]
   150b0:	add	r9, r5, r9, lsl #2
   150b4:	ldr	r1, [r5, #4]!
   150b8:	mov	r2, #0
   150bc:	mov	r0, r7
   150c0:	bl	13c34 <ASN1_STRING_length@plt+0x1cc0>
   150c4:	cmp	r0, #0
   150c8:	movlt	r6, r0
   150cc:	cmp	r9, r5
   150d0:	bne	150b4 <ASN1_STRING_length@plt+0x3140>
   150d4:	lsr	fp, r6, #31
   150d8:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   150dc:	ldr	r3, [pc, #352]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   150e0:	mov	r2, r5
   150e4:	ldr	r1, [pc, #448]	; 152ac <ASN1_STRING_length@plt+0x3338>
   150e8:	ldr	r0, [r3]
   150ec:	ldr	fp, [sp, #32]
   150f0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   150f4:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   150f8:	ldr	r1, [pc, #432]	; 152b0 <ASN1_STRING_length@plt+0x333c>
   150fc:	mov	r0, #3
   15100:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15104:	mov	fp, #1
   15108:	b	14850 <ASN1_STRING_length@plt+0x28dc>
   1510c:	bl	11f38 <__errno_location@plt>
   15110:	ldr	r4, [sp, #36]	; 0x24
   15114:	ldr	sl, [sp, #40]	; 0x28
   15118:	ldr	r5, [r0]
   1511c:	mov	r0, r8
   15120:	bl	11ba8 <free@plt>
   15124:	ldr	r1, [pc, #392]	; 152b4 <ASN1_STRING_length@plt+0x3340>
   15128:	mov	r0, #3
   1512c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15130:	cmp	r5, #0
   15134:	beq	15200 <ASN1_STRING_length@plt+0x328c>
   15138:	movgt	fp, #1
   1513c:	movle	fp, #0
   15140:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   15144:	ldr	r3, [pc, #248]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   15148:	mov	r2, r5
   1514c:	ldr	r1, [pc, #344]	; 152ac <ASN1_STRING_length@plt+0x3338>
   15150:	ldr	r0, [r3]
   15154:	mov	fp, r6
   15158:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1515c:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   15160:	ldr	r4, [sp, #36]	; 0x24
   15164:	ldr	sl, [sp, #40]	; 0x28
   15168:	mov	r2, r9
   1516c:	ldr	r3, [sp, #28]
   15170:	ldr	r0, [sp, #20]
   15174:	mov	r5, r2
   15178:	ldr	r1, [r3]
   1517c:	bl	13c34 <ASN1_STRING_length@plt+0x1cc0>
   15180:	mov	fp, r0
   15184:	mov	r0, r5
   15188:	bl	11ba8 <free@plt>
   1518c:	lsr	fp, fp, #31
   15190:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   15194:	ldr	r3, [pc, #168]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   15198:	rsb	r0, r0, #0
   1519c:	ldr	fp, [sp, #32]
   151a0:	ldr	r6, [r3]
   151a4:	bl	119f8 <strerror@plt>
   151a8:	mov	r2, r5
   151ac:	ldr	r1, [pc, #260]	; 152b8 <ASN1_STRING_length@plt+0x3344>
   151b0:	mov	r3, r0
   151b4:	mov	r0, r6
   151b8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   151bc:	ldr	r0, [sp, #56]	; 0x38
   151c0:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   151c4:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   151c8:	ldr	r3, [pc, #116]	; 15244 <ASN1_STRING_length@plt+0x32d0>
   151cc:	rsb	r0, r0, #0
   151d0:	mov	fp, r6
   151d4:	ldr	r6, [r3]
   151d8:	bl	119f8 <strerror@plt>
   151dc:	mov	r2, r5
   151e0:	ldr	r1, [pc, #212]	; 152bc <ASN1_STRING_length@plt+0x3348>
   151e4:	mov	r3, r0
   151e8:	mov	r0, r6
   151ec:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   151f0:	ldr	r0, [sp, #56]	; 0x38
   151f4:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   151f8:	b	14c68 <ASN1_STRING_length@plt+0x2cf4>
   151fc:	bl	11d88 <__stack_chk_fail@plt>
   15200:	mov	r3, #0
   15204:	mov	r2, r3
   15208:	b	1516c <ASN1_STRING_length@plt+0x31f8>
   1520c:	andeq	pc, r3, r8, ror #25
   15210:	muleq	r2, r8, lr
   15214:	andeq	fp, r2, r4, lsr r3
   15218:	strdeq	fp, [r2], -r4
   1521c:			; <UNDEFINED> instruction: 0x0002bdb4
   15220:	andeq	r0, r4, r8, rrx
   15224:	andeq	r0, r4, r0, asr r0
   15228:	andeq	fp, r2, ip, asr #10
   1522c:	andeq	r0, r4, r4, ror r0
   15230:	andeq	r0, r4, r4, rrx
   15234:	andeq	r0, r4, r0, rrx
   15238:	andeq	r0, r4, r8, ror r0
   1523c:	andeq	sl, r2, r0, ror #13
   15240:	strdeq	sl, [r2], -r0
   15244:	andeq	r0, r4, r8
   15248:	andeq	r0, r4, r8, lsl #1
   1524c:	andeq	r0, r4, ip, rrx
   15250:	andeq	r0, r4, r8, lsr r0
   15254:	andeq	fp, r2, ip, asr r5
   15258:	andeq	r0, r4, r0, ror r0
   1525c:	andeq	fp, r2, r4, asr r5
   15260:	andeq	r0, r4, ip
   15264:	andeq	fp, r2, r0, asr r5
   15268:	andeq	r0, r4, ip, lsl #1
   1526c:	andeq	fp, r2, r8, asr r5
   15270:	andeq	r0, r4, r4, lsl #1
   15274:	andeq	r0, r4, r0, lsl #1
   15278:	andeq	r0, r4, ip, ror r0
   1527c:	andeq	sl, r2, ip, ror sl
   15280:	andeq	fp, r2, ip, lsl #10
   15284:	andeq	r0, r4, r0, asr #32
   15288:	andeq	sp, r2, r4, rrx
   1528c:	andeq	fp, r2, r0, lsr #2
   15290:	andeq	fp, r2, r4, lsl #6
   15294:	andeq	r0, r4, r4, asr #32
   15298:	andeq	fp, r2, ip, lsr #29
   1529c:	ldrdeq	fp, [r2], -r4
   152a0:	andeq	fp, r2, ip, lsl #2
   152a4:	andeq	fp, r2, r4, lsr lr
   152a8:			; <UNDEFINED> instruction: 0x0002aabc
   152ac:	andeq	fp, r2, ip, ror #2
   152b0:	andeq	fp, r2, ip, lsr r5
   152b4:	andeq	fp, r2, r8, ror #28
   152b8:	andeq	fp, r2, ip, lsl #28
   152bc:	andeq	fp, r2, r4, asr #28
   152c0:	ldr	r2, [r0]
   152c4:	ldr	r3, [r1]
   152c8:	ldr	r0, [r2, #48]	; 0x30
   152cc:	ldr	r3, [r3, #48]	; 0x30
   152d0:	sub	r0, r0, r3
   152d4:	bx	lr
   152d8:	ldr	r2, [r0]
   152dc:	ldr	r3, [r1]
   152e0:	ldr	r0, [r2, #52]	; 0x34
   152e4:	ldr	r3, [r3, #52]	; 0x34
   152e8:	sub	r0, r0, r3
   152ec:	bx	lr
   152f0:	push	{r4, r5, r6, lr}
   152f4:	ldr	r5, [r0, #28]
   152f8:	cmp	r5, #0
   152fc:	beq	1532c <ASN1_STRING_length@plt+0x33b8>
   15300:	ldr	r4, [r0, #24]
   15304:	add	r5, r4, r5, lsl #2
   15308:	sub	r6, r5, #4
   1530c:	sub	r4, r4, #4
   15310:	mov	r5, #0
   15314:	ldr	r0, [r4, #4]!
   15318:	bl	152f0 <ASN1_STRING_length@plt+0x337c>
   1531c:	cmp	r4, r6
   15320:	add	r0, r0, #1
   15324:	add	r5, r5, r0
   15328:	bne	15314 <ASN1_STRING_length@plt+0x33a0>
   1532c:	mov	r0, r5
   15330:	pop	{r4, r5, r6, pc}
   15334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15338:	ldr	sl, [r0, #28]
   1533c:	cmp	sl, #0
   15340:	beq	153f0 <ASN1_STRING_length@plt+0x347c>
   15344:	mov	r6, r1
   15348:	mov	r1, #0
   1534c:	mov	r7, r3
   15350:	mov	r9, r2
   15354:	mov	r8, r0
   15358:	mov	r5, r1
   1535c:	ldr	r2, [r8, #24]
   15360:	ldr	r3, [r7]
   15364:	cmp	r3, #0
   15368:	ldr	r0, [r2, r5, lsl #2]
   1536c:	beq	153a0 <ASN1_STRING_length@plt+0x342c>
   15370:	ldr	r2, [r6]
   15374:	cmp	r0, r2
   15378:	beq	153d0 <ASN1_STRING_length@plt+0x345c>
   1537c:	mov	lr, r6
   15380:	mov	ip, #0
   15384:	b	15394 <ASN1_STRING_length@plt+0x3420>
   15388:	ldr	r4, [lr, #4]!
   1538c:	cmp	r4, r0
   15390:	beq	153d0 <ASN1_STRING_length@plt+0x345c>
   15394:	add	ip, ip, #1
   15398:	cmp	r3, ip
   1539c:	bne	15388 <ASN1_STRING_length@plt+0x3414>
   153a0:	cmp	r9, r3
   153a4:	bls	153e4 <ASN1_STRING_length@plt+0x3470>
   153a8:	add	r2, r3, #1
   153ac:	str	r0, [r6, r3, lsl #2]
   153b0:	mov	r1, r6
   153b4:	str	r2, [r7]
   153b8:	mov	r3, r7
   153bc:	mov	r2, r9
   153c0:	bl	15334 <ASN1_STRING_length@plt+0x33c0>
   153c4:	subs	r1, r0, #0
   153c8:	blt	153dc <ASN1_STRING_length@plt+0x3468>
   153cc:	ldr	sl, [r8, #28]
   153d0:	add	r5, r5, #1
   153d4:	cmp	sl, r5
   153d8:	bhi	1535c <ASN1_STRING_length@plt+0x33e8>
   153dc:	mov	r0, r1
   153e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153e4:	mvn	r1, #27
   153e8:	mov	r0, r1
   153ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153f0:	mov	r1, sl
   153f4:	b	153dc <ASN1_STRING_length@plt+0x3468>
   153f8:	push	{r4, r5, r6, lr}
   153fc:	mov	r6, r0
   15400:	ldrb	r4, [r0, #8]
   15404:	ldrb	r2, [r0, #9]
   15408:	cmp	r4, r2
   1540c:	bgt	15438 <ASN1_STRING_length@plt+0x34c4>
   15410:	add	r5, r0, r4, lsl #2
   15414:	add	r5, r5, #8
   15418:	ldr	r3, [r5, #4]!
   1541c:	add	r4, r4, #1
   15420:	subs	r0, r3, #0
   15424:	beq	15430 <ASN1_STRING_length@plt+0x34bc>
   15428:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   1542c:	ldrb	r2, [r6, #9]
   15430:	cmp	r2, r4
   15434:	bge	15418 <ASN1_STRING_length@plt+0x34a4>
   15438:	ldr	r0, [r6, #4]
   1543c:	cmp	r0, #0
   15440:	beq	15454 <ASN1_STRING_length@plt+0x34e0>
   15444:	ldr	r4, [r0]
   15448:	bl	11ba8 <free@plt>
   1544c:	subs	r0, r4, #0
   15450:	bne	15444 <ASN1_STRING_length@plt+0x34d0>
   15454:	ldr	r0, [r6]
   15458:	bl	11ba8 <free@plt>
   1545c:	mov	r0, r6
   15460:	pop	{r4, r5, r6, lr}
   15464:	b	11ba8 <free@plt>
   15468:	mov	r3, r0
   1546c:	push	{r4, lr}
   15470:	sub	sp, sp, #8
   15474:	ldr	r2, [r3], #16
   15478:	mov	r4, r0
   1547c:	cmp	r2, #0
   15480:	ldrne	r1, [r2, #4]
   15484:	ldreq	r1, [pc, #36]	; 154b0 <ASN1_STRING_length@plt+0x353c>
   15488:	str	r2, [sp]
   1548c:	str	r1, [sp, #4]
   15490:	mov	r2, r0
   15494:	ldr	r1, [pc, #24]	; 154b4 <ASN1_STRING_length@plt+0x3540>
   15498:	mov	r0, #7
   1549c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   154a0:	mov	r0, r4
   154a4:	add	sp, sp, #8
   154a8:	pop	{r4, lr}
   154ac:	b	11ba8 <free@plt>
   154b0:	andeq	sp, r2, r4, rrx
   154b4:	andeq	sp, r2, r4, lsl #18
   154b8:	ldrb	r3, [r0]
   154bc:	cmp	r3, #0
   154c0:	bxeq	lr
   154c4:	push	{r4, r5, r6, lr}
   154c8:	mov	r5, r0
   154cc:	sub	sp, sp, #8
   154d0:	ldr	r6, [pc, #64]	; 15518 <ASN1_STRING_length@plt+0x35a4>
   154d4:	mov	r4, r0
   154d8:	b	154e8 <ASN1_STRING_length@plt+0x3574>
   154dc:	ldrb	r3, [r4, #1]!
   154e0:	cmp	r3, #0
   154e4:	beq	15510 <ASN1_STRING_length@plt+0x359c>
   154e8:	cmp	r3, #127	; 0x7f
   154ec:	ble	154dc <ASN1_STRING_length@plt+0x3568>
   154f0:	mov	r2, r3
   154f4:	str	r5, [sp]
   154f8:	mov	r1, r6
   154fc:	mov	r0, #2
   15500:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15504:	ldrb	r3, [r4, #1]!
   15508:	cmp	r3, #0
   1550c:	bne	154e8 <ASN1_STRING_length@plt+0x3574>
   15510:	add	sp, sp, #8
   15514:	pop	{r4, r5, r6, pc}
   15518:	andeq	sp, r2, r0, ror r4
   1551c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15520:	mov	sl, r2
   15524:	ldr	r2, [pc, #756]	; 15820 <ASN1_STRING_length@plt+0x38ac>
   15528:	sub	sp, sp, #148	; 0x94
   1552c:	mov	r5, r0
   15530:	ldr	r2, [r2]
   15534:	str	r3, [sp, #16]
   15538:	mov	r3, #1
   1553c:	str	r1, [sp, #28]
   15540:	str	r2, [sp, #140]	; 0x8c
   15544:	str	r3, [sp, #24]
   15548:	bl	11cd4 <dirfd@plt>
   1554c:	ldr	r6, [pc, #720]	; 15824 <ASN1_STRING_length@plt+0x38b0>
   15550:	ldr	fp, [pc, #720]	; 15828 <ASN1_STRING_length@plt+0x38b4>
   15554:	str	r0, [sp, #20]
   15558:	mov	r0, r5
   1555c:	bl	11e54 <readdir64@plt>
   15560:	cmp	r0, #0
   15564:	beq	1564c <ASN1_STRING_length@plt+0x36d8>
   15568:	ldrb	r3, [r0, #19]
   1556c:	add	r4, r0, #19
   15570:	cmp	r3, #46	; 0x2e
   15574:	beq	1566c <ASN1_STRING_length@plt+0x36f8>
   15578:	mov	r1, r6
   1557c:	mov	r0, r4
   15580:	bl	11f14 <strcmp@plt>
   15584:	cmp	r0, #0
   15588:	beq	15558 <ASN1_STRING_length@plt+0x35e4>
   1558c:	mov	r1, fp
   15590:	mov	r0, r4
   15594:	bl	11f14 <strcmp@plt>
   15598:	cmp	r0, #0
   1559c:	beq	15558 <ASN1_STRING_length@plt+0x35e4>
   155a0:	mov	r0, r4
   155a4:	bl	11c44 <strlen@plt>
   155a8:	ldr	r9, [pc, #636]	; 1582c <ASN1_STRING_length@plt+0x38b8>
   155ac:	add	r8, r0, sl
   155b0:	add	r3, r8, #2
   155b4:	cmp	r3, r9
   155b8:	mov	r7, r0
   155bc:	bhi	15690 <ASN1_STRING_length@plt+0x371c>
   155c0:	mov	r3, #0
   155c4:	str	r3, [sp]
   155c8:	mov	r2, r4
   155cc:	add	r3, sp, #32
   155d0:	ldr	r1, [sp, #20]
   155d4:	mov	r0, #3
   155d8:	bl	11ee4 <__fxstatat64@plt>
   155dc:	cmp	r0, #0
   155e0:	blt	1578c <ASN1_STRING_length@plt+0x3818>
   155e4:	ldr	r3, [sp, #48]	; 0x30
   155e8:	and	r3, r3, #61440	; 0xf000
   155ec:	cmp	r3, #16384	; 0x4000
   155f0:	beq	156c8 <ASN1_STRING_length@plt+0x3754>
   155f4:	cmp	r3, #32768	; 0x8000
   155f8:	bne	156b4 <ASN1_STRING_length@plt+0x3740>
   155fc:	mov	r1, r7
   15600:	mov	r0, r4
   15604:	bl	1b674 <ASN1_STRING_length@plt+0x9700>
   15608:	cmp	r0, #0
   1560c:	beq	15558 <ASN1_STRING_length@plt+0x35e4>
   15610:	ldr	r3, [sp, #16]
   15614:	mov	r1, r4
   15618:	add	r0, r3, sl
   1561c:	add	r2, r7, #1
   15620:	bl	11c5c <memcpy@plt>
   15624:	ldr	r4, [sp, #112]	; 0x70
   15628:	ldr	r3, [sp, #28]
   1562c:	cmp	r4, r3
   15630:	bgt	157bc <ASN1_STRING_length@plt+0x3848>
   15634:	mov	r3, #1
   15638:	mov	r0, r5
   1563c:	str	r3, [sp, #24]
   15640:	bl	11e54 <readdir64@plt>
   15644:	cmp	r0, #0
   15648:	bne	15568 <ASN1_STRING_length@plt+0x35f4>
   1564c:	ldr	r3, [pc, #460]	; 15820 <ASN1_STRING_length@plt+0x38ac>
   15650:	ldr	r2, [sp, #140]	; 0x8c
   15654:	ldr	r0, [sp, #24]
   15658:	ldr	r3, [r3]
   1565c:	cmp	r2, r3
   15660:	bne	1581c <ASN1_STRING_length@plt+0x38a8>
   15664:	add	sp, sp, #148	; 0x94
   15668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1566c:	ldrb	r3, [r0, #20]
   15670:	cmp	r3, #0
   15674:	beq	15558 <ASN1_STRING_length@plt+0x35e4>
   15678:	cmp	r3, #46	; 0x2e
   1567c:	bne	15578 <ASN1_STRING_length@plt+0x3604>
   15680:	ldrb	r3, [r0, #21]
   15684:	cmp	r3, #0
   15688:	bne	15578 <ASN1_STRING_length@plt+0x3604>
   1568c:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   15690:	ldr	r1, [sp, #16]
   15694:	mov	r2, #0
   15698:	mov	r3, r4
   1569c:	strb	r2, [r1, sl]
   156a0:	mov	r0, #3
   156a4:	mov	r2, r1
   156a8:	ldr	r1, [pc, #384]	; 15830 <ASN1_STRING_length@plt+0x38bc>
   156ac:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   156b0:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   156b4:	ldr	r2, [sp, #16]
   156b8:	ldr	r1, [pc, #372]	; 15834 <ASN1_STRING_length@plt+0x38c0>
   156bc:	mov	r0, #3
   156c0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   156c4:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   156c8:	ldr	r3, [sp, #16]
   156cc:	add	r2, r7, #1
   156d0:	add	r0, r3, sl
   156d4:	mov	r1, r4
   156d8:	bl	11c5c <memcpy@plt>
   156dc:	add	r3, r8, #256	; 0x100
   156e0:	add	r3, r3, #1
   156e4:	cmp	r3, r9
   156e8:	bhi	157ec <ASN1_STRING_length@plt+0x3878>
   156ec:	mov	r2, #0
   156f0:	mov	r1, r4
   156f4:	ldr	r0, [sp, #20]
   156f8:	bl	11bf0 <openat64@plt>
   156fc:	subs	r7, r0, #0
   15700:	blt	157a4 <ASN1_STRING_length@plt+0x3830>
   15704:	bl	11f5c <fdopendir@plt>
   15708:	subs	r4, r0, #0
   1570c:	beq	15800 <ASN1_STRING_length@plt+0x388c>
   15710:	ldr	r1, [sp, #16]
   15714:	add	r3, r8, #1
   15718:	mov	ip, #0
   1571c:	mov	r2, #47	; 0x2f
   15720:	strb	r2, [r1, r8]
   15724:	strb	ip, [r1, r3]
   15728:	mov	r2, r3
   1572c:	mov	r3, r1
   15730:	ldr	r1, [sp, #28]
   15734:	bl	1551c <ASN1_STRING_length@plt+0x35a8>
   15738:	mov	r7, r0
   1573c:	str	r0, [sp, #24]
   15740:	mov	r0, r4
   15744:	bl	11d28 <closedir@plt>
   15748:	cmp	r7, #0
   1574c:	beq	157e0 <ASN1_STRING_length@plt+0x386c>
   15750:	bge	15558 <ASN1_STRING_length@plt+0x35e4>
   15754:	ldr	r4, [sp, #16]
   15758:	ldr	r2, [sp, #24]
   1575c:	mov	r3, #0
   15760:	rsb	r0, r2, #0
   15764:	strb	r3, [r4, r8]
   15768:	bl	119f8 <strerror@plt>
   1576c:	mov	r2, r4
   15770:	ldr	r1, [pc, #192]	; 15838 <ASN1_STRING_length@plt+0x38c4>
   15774:	mov	r3, r0
   15778:	mov	r0, #3
   1577c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15780:	mov	r3, #1
   15784:	str	r3, [sp, #24]
   15788:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   1578c:	mov	r3, r4
   15790:	ldr	r2, [sp, #20]
   15794:	ldr	r1, [pc, #160]	; 1583c <ASN1_STRING_length@plt+0x38c8>
   15798:	mov	r0, #3
   1579c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   157a0:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   157a4:	mov	r3, r4
   157a8:	ldr	r2, [sp, #20]
   157ac:	ldr	r1, [pc, #140]	; 15840 <ASN1_STRING_length@plt+0x38cc>
   157b0:	mov	r0, #3
   157b4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   157b8:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   157bc:	mov	r0, r3
   157c0:	asr	r1, r3, #31
   157c4:	asr	r5, r4, #31
   157c8:	strd	r0, [sp, #8]
   157cc:	ldr	r2, [sp, #16]
   157d0:	strd	r4, [sp]
   157d4:	ldr	r1, [pc, #104]	; 15844 <ASN1_STRING_length@plt+0x38d0>
   157d8:	mov	r0, #7
   157dc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   157e0:	mov	r3, #0
   157e4:	str	r3, [sp, #24]
   157e8:	b	1564c <ASN1_STRING_length@plt+0x36d8>
   157ec:	ldr	r2, [sp, #16]
   157f0:	ldr	r1, [pc, #80]	; 15848 <ASN1_STRING_length@plt+0x38d4>
   157f4:	mov	r0, #3
   157f8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   157fc:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   15800:	mov	r2, r7
   15804:	ldr	r1, [pc, #64]	; 1584c <ASN1_STRING_length@plt+0x38d8>
   15808:	mov	r0, #3
   1580c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15810:	mov	r0, r7
   15814:	bl	11d04 <close@plt>
   15818:	b	15558 <ASN1_STRING_length@plt+0x35e4>
   1581c:	bl	11d88 <__stack_chk_fail@plt>
   15820:	andeq	pc, r3, r8, ror #25
   15824:	andeq	ip, r2, r0, ror #8
   15828:	andeq	ip, r2, r8, ror #8
   1582c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15830:	andeq	ip, r2, r0, ror r4
   15834:	andeq	ip, r2, r0, lsl r5
   15838:	andeq	ip, r2, r0, lsr r5
   1583c:	andeq	ip, r2, r8, lsl #9
   15840:	andeq	ip, r2, r0, asr #9
   15844:	strdeq	ip, [r2], -r4
   15848:	andeq	ip, r2, r0, lsr #9
   1584c:	andeq	ip, r2, r0, ror #9
   15850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15854:	sub	sp, sp, #28
   15858:	mov	r4, r3
   1585c:	str	r0, [sp, #8]
   15860:	mov	r0, r2
   15864:	mov	r9, r2
   15868:	str	r1, [sp, #12]
   1586c:	bl	11c44 <strlen@plt>
   15870:	cmp	r4, #0
   15874:	mov	r6, r0
   15878:	beq	159d0 <ASN1_STRING_length@plt+0x3a5c>
   1587c:	mov	r0, r4
   15880:	bl	11c44 <strlen@plt>
   15884:	mov	r8, r0
   15888:	ldr	r3, [sp, #12]
   1588c:	ldr	r5, [r3]
   15890:	ldr	r3, [sp, #8]
   15894:	cmp	r5, #0
   15898:	ldr	sl, [r3]
   1589c:	beq	158f8 <ASN1_STRING_length@plt+0x3984>
   158a0:	sub	r7, sl, #4
   158a4:	mov	fp, #0
   158a8:	b	158bc <ASN1_STRING_length@plt+0x3948>
   158ac:	blt	158fc <ASN1_STRING_length@plt+0x3988>
   158b0:	add	fp, fp, #1
   158b4:	cmp	r5, fp
   158b8:	beq	158f8 <ASN1_STRING_length@plt+0x3984>
   158bc:	ldr	r3, [r7, #4]!
   158c0:	mov	r0, r4
   158c4:	ldr	r1, [r3, #8]
   158c8:	bl	11f14 <strcmp@plt>
   158cc:	cmp	r0, #0
   158d0:	bne	158ac <ASN1_STRING_length@plt+0x3938>
   158d4:	str	r4, [sp]
   158d8:	mov	r3, r9
   158dc:	mov	r2, r6
   158e0:	ldr	r1, [pc, #312]	; 15a20 <ASN1_STRING_length@plt+0x3aac>
   158e4:	mov	r0, #7
   158e8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   158ec:	mvn	r0, #16
   158f0:	add	sp, sp, #28
   158f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158f8:	mov	fp, r5
   158fc:	add	r3, r8, r6
   15900:	add	r0, r3, #14
   15904:	str	r3, [sp, #16]
   15908:	bl	11d64 <malloc@plt>
   1590c:	subs	r7, r0, #0
   15910:	beq	159f0 <ASN1_STRING_length@plt+0x3a7c>
   15914:	add	r3, r5, #1
   15918:	mov	r0, sl
   1591c:	lsl	r1, r3, #2
   15920:	str	r3, [sp, #20]
   15924:	bl	11ec0 <realloc@plt>
   15928:	subs	sl, r0, #0
   1592c:	beq	15a04 <ASN1_STRING_length@plt+0x3a90>
   15930:	ldr	r2, [sp, #8]
   15934:	lsl	r3, fp, #2
   15938:	cmp	r5, fp
   1593c:	str	sl, [r2]
   15940:	add	r1, sl, r3
   15944:	bhi	159b0 <ASN1_STRING_length@plt+0x3a3c>
   15948:	add	r0, r7, #12
   1594c:	add	r5, r6, #1
   15950:	add	r5, r0, r5
   15954:	str	r7, [sl, r3]
   15958:	mov	r2, r6
   1595c:	stm	r7, {r6, r8}
   15960:	mov	r1, r9
   15964:	str	r5, [r7, #8]
   15968:	add	r6, r7, r6
   1596c:	bl	11c5c <memcpy@plt>
   15970:	mov	r3, #47	; 0x2f
   15974:	mov	r2, r8
   15978:	mov	r1, r4
   1597c:	strb	r3, [r6, #12]
   15980:	mov	r0, r5
   15984:	bl	11c5c <memcpy@plt>
   15988:	ldr	r2, [sp, #16]
   1598c:	mov	r3, #0
   15990:	add	r7, r7, r2
   15994:	ldr	r2, [sp, #12]
   15998:	ldr	r1, [sp, #20]
   1599c:	mov	r0, r3
   159a0:	str	r1, [r2]
   159a4:	strb	r3, [r7, #13]
   159a8:	add	sp, sp, #28
   159ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159b0:	sub	r2, r5, fp
   159b4:	add	r0, r3, #4
   159b8:	lsl	r2, r2, #2
   159bc:	add	r0, sl, r0
   159c0:	str	r3, [sp, #8]
   159c4:	bl	11df4 <memmove@plt>
   159c8:	ldr	r3, [sp, #8]
   159cc:	b	15948 <ASN1_STRING_length@plt+0x39d4>
   159d0:	mov	r0, r9
   159d4:	bl	11f44 <basename@plt>
   159d8:	sub	r6, r6, #1
   159dc:	mov	r4, r0
   159e0:	bl	11c44 <strlen@plt>
   159e4:	mov	r8, r0
   159e8:	sub	r6, r6, r0
   159ec:	b	15888 <ASN1_STRING_length@plt+0x3914>
   159f0:	mov	r0, #3
   159f4:	ldr	r1, [pc, #40]	; 15a24 <ASN1_STRING_length@plt+0x3ab0>
   159f8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   159fc:	mvn	r0, #11
   15a00:	b	159a8 <ASN1_STRING_length@plt+0x3a34>
   15a04:	ldr	r1, [pc, #24]	; 15a24 <ASN1_STRING_length@plt+0x3ab0>
   15a08:	mov	r0, #3
   15a0c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15a10:	mov	r0, r7
   15a14:	bl	11ba8 <free@plt>
   15a18:	mvn	r0, #11
   15a1c:	b	159a8 <ASN1_STRING_length@plt+0x3a34>
   15a20:	andeq	ip, r2, r4, lsl #5
   15a24:			; <UNDEFINED> instruction: 0x0002c2b0
   15a28:	push	{r4, lr}
   15a2c:	sub	sp, sp, #8
   15a30:	ldr	r1, [r0, #4]
   15a34:	ldr	r3, [r0]
   15a38:	mov	r4, r0
   15a3c:	mov	r2, r0
   15a40:	str	r1, [sp]
   15a44:	mov	r0, #7
   15a48:	ldr	r1, [pc, #64]	; 15a90 <ASN1_STRING_length@plt+0x3b1c>
   15a4c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15a50:	add	r0, r4, #24
   15a54:	bl	1a9c0 <ASN1_STRING_length@plt+0x8a4c>
   15a58:	ldr	r0, [r4]
   15a5c:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   15a60:	ldr	r0, [r4, #16]
   15a64:	bl	24ce0 <ASN1_STRING_length@plt+0x12d6c>
   15a68:	ldr	r0, [r4, #20]
   15a6c:	bl	253a0 <ASN1_STRING_length@plt+0x1342c>
   15a70:	ldr	r0, [r4, #12]
   15a74:	bl	11ba8 <free@plt>
   15a78:	ldr	r0, [r4, #4]
   15a7c:	bl	11ba8 <free@plt>
   15a80:	mov	r0, r4
   15a84:	add	sp, sp, #8
   15a88:	pop	{r4, lr}
   15a8c:	b	11ba8 <free@plt>
   15a90:	andeq	sp, r2, r4, lsl #10
   15a94:	push	{r4, r5, r6, lr}
   15a98:	mov	r5, r0
   15a9c:	ldr	r0, [r0, #32]
   15aa0:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   15aa4:	ldr	r0, [r5, #24]
   15aa8:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   15aac:	ldr	r0, [r5, #28]
   15ab0:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   15ab4:	ldr	r3, [r5, #12]
   15ab8:	cmp	r3, #0
   15abc:	beq	15ae0 <ASN1_STRING_length@plt+0x3b6c>
   15ac0:	mov	r4, #0
   15ac4:	ldr	r3, [r5, #8]
   15ac8:	ldr	r0, [r3, r4, lsl #2]
   15acc:	bl	15a28 <ASN1_STRING_length@plt+0x3ab4>
   15ad0:	ldr	r3, [r5, #12]
   15ad4:	add	r4, r4, #1
   15ad8:	cmp	r3, r4
   15adc:	bhi	15ac4 <ASN1_STRING_length@plt+0x3b50>
   15ae0:	add	r0, r5, #8
   15ae4:	bl	1a9c0 <ASN1_STRING_length@plt+0x8a4c>
   15ae8:	ldr	r0, [r5, #4]
   15aec:	pop	{r4, r5, r6, lr}
   15af0:	b	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   15af4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15af8:	mov	r7, r0
   15afc:	ldr	r4, [r0]
   15b00:	mov	r8, r1
   15b04:	cmp	r4, #0
   15b08:	mov	r9, r2
   15b0c:	beq	15ba0 <ASN1_STRING_length@plt+0x3c2c>
   15b10:	mov	r5, r4
   15b14:	mov	r6, #0
   15b18:	add	r0, r5, #8
   15b1c:	mov	r1, r8
   15b20:	bl	11f14 <strcmp@plt>
   15b24:	ldr	r5, [r5]
   15b28:	cmp	r0, #0
   15b2c:	moveq	r6, #1
   15b30:	cmp	r5, #0
   15b34:	bne	15b18 <ASN1_STRING_length@plt+0x3ba4>
   15b38:	ldr	r3, [r4, #4]
   15b3c:	cmp	r9, r3
   15b40:	bhi	15b54 <ASN1_STRING_length@plt+0x3be0>
   15b44:	b	15b64 <ASN1_STRING_length@plt+0x3bf0>
   15b48:	ldr	r3, [r4, #4]
   15b4c:	cmp	r3, r9
   15b50:	bcs	15b64 <ASN1_STRING_length@plt+0x3bf0>
   15b54:	mov	r7, r4
   15b58:	ldr	r4, [r4]
   15b5c:	cmp	r4, #0
   15b60:	bne	15b48 <ASN1_STRING_length@plt+0x3bd4>
   15b64:	mov	r0, r8
   15b68:	bl	11c44 <strlen@plt>
   15b6c:	mov	r1, #1
   15b70:	mov	sl, r0
   15b74:	add	r0, r0, #9
   15b78:	bl	11ae8 <calloc@plt>
   15b7c:	add	r2, sl, #1
   15b80:	mov	r1, r8
   15b84:	mov	r5, r0
   15b88:	add	r0, r0, #8
   15b8c:	stm	r5, {r4, r9}
   15b90:	bl	11c5c <memcpy@plt>
   15b94:	str	r5, [r7]
   15b98:	mov	r0, r6
   15b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ba0:	mov	r6, r4
   15ba4:	b	15b64 <ASN1_STRING_length@plt+0x3bf0>
   15ba8:	push	{r4, lr}
   15bac:	mov	r1, #1
   15bb0:	mov	r0, #524	; 0x20c
   15bb4:	bl	11ae8 <calloc@plt>
   15bb8:	mov	r4, r0
   15bbc:	ldr	r0, [pc, #20]	; 15bd8 <ASN1_STRING_length@plt+0x3c64>
   15bc0:	bl	11d4c <strdup@plt>
   15bc4:	mvn	r3, #127	; 0x7f
   15bc8:	strb	r3, [r4, #8]
   15bcc:	str	r0, [r4]
   15bd0:	mov	r0, r4
   15bd4:	pop	{r4, pc}
   15bd8:	andeq	sp, r2, r4, rrx
   15bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15be0:	sub	sp, sp, #20
   15be4:	mov	r4, r2
   15be8:	mov	sl, r0
   15bec:	mov	r0, r1
   15bf0:	mov	fp, r1
   15bf4:	str	r3, [sp, #12]
   15bf8:	str	r2, [sp, #8]
   15bfc:	bl	154b8 <ASN1_STRING_length@plt+0x3544>
   15c00:	mov	r0, r4
   15c04:	bl	154b8 <ASN1_STRING_length@plt+0x3544>
   15c08:	mov	r8, #0
   15c0c:	mov	r3, fp
   15c10:	ldr	fp, [sl]
   15c14:	add	r4, r3, r8
   15c18:	ldrb	r1, [r3, r8]
   15c1c:	ldrb	r5, [fp]
   15c20:	cmp	r5, #0
   15c24:	beq	15d40 <ASN1_STRING_length@plt+0x3dcc>
   15c28:	cmp	r5, r1
   15c2c:	movne	r2, #1
   15c30:	movne	r6, r8
   15c34:	movne	r7, fp
   15c38:	strne	r2, [sp, #4]
   15c3c:	bne	15cbc <ASN1_STRING_length@plt+0x3d48>
   15c40:	add	r6, r8, #1
   15c44:	mov	ip, r4
   15c48:	add	r0, r3, r6
   15c4c:	add	r2, fp, #1
   15c50:	b	15c64 <ASN1_STRING_length@plt+0x3cf0>
   15c54:	cmp	r5, r1
   15c58:	add	r1, r6, #1
   15c5c:	bne	15cb4 <ASN1_STRING_length@plt+0x3d40>
   15c60:	mov	r6, r1
   15c64:	ldrb	r5, [r2]
   15c68:	mov	r7, r2
   15c6c:	mov	r4, r0
   15c70:	cmp	r5, #0
   15c74:	sub	r9, r0, ip
   15c78:	ldrb	r1, [r0]
   15c7c:	add	r2, r2, #1
   15c80:	mov	r8, r6
   15c84:	add	r0, r0, #1
   15c88:	bne	15c54 <ASN1_STRING_length@plt+0x3ce0>
   15c8c:	cmp	r1, #0
   15c90:	beq	15d28 <ASN1_STRING_length@plt+0x3db4>
   15c94:	add	r4, r1, #2
   15c98:	add	r2, sl, r4, lsl #2
   15c9c:	ldr	r2, [r2, #4]
   15ca0:	cmp	r2, #0
   15ca4:	beq	15d48 <ASN1_STRING_length@plt+0x3dd4>
   15ca8:	add	r8, r8, #1
   15cac:	mov	sl, r2
   15cb0:	b	15c10 <ASN1_STRING_length@plt+0x3c9c>
   15cb4:	add	r2, r9, #1
   15cb8:	str	r2, [sp, #4]
   15cbc:	mov	r1, #1
   15cc0:	mov	r0, #524	; 0x20c
   15cc4:	str	r3, [sp]
   15cc8:	bl	11ae8 <calloc@plt>
   15ccc:	mov	r2, #524	; 0x20c
   15cd0:	mov	r1, sl
   15cd4:	mov	r9, r0
   15cd8:	bl	11c5c <memcpy@plt>
   15cdc:	ldr	r3, [sp, #4]
   15ce0:	add	r0, fp, r3
   15ce4:	bl	11d4c <strdup@plt>
   15ce8:	mov	r2, #524	; 0x20c
   15cec:	mov	r1, #0
   15cf0:	str	r0, [r9]
   15cf4:	mov	r0, sl
   15cf8:	bl	11b18 <memset@plt>
   15cfc:	add	r2, sl, r5, lsl #2
   15d00:	mov	r3, #0
   15d04:	strb	r3, [r7]
   15d08:	str	fp, [sl]
   15d0c:	strb	r5, [sl, #8]
   15d10:	strb	r5, [sl, #9]
   15d14:	str	r9, [r2, #12]
   15d18:	ldrb	r1, [r4]
   15d1c:	ldr	r3, [sp]
   15d20:	cmp	r1, #0
   15d24:	bne	15c94 <ASN1_STRING_length@plt+0x3d20>
   15d28:	ldr	r2, [sp, #12]
   15d2c:	ldr	r1, [sp, #8]
   15d30:	add	r0, sl, #4
   15d34:	add	sp, sp, #20
   15d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d3c:	b	15af4 <ASN1_STRING_length@plt+0x3b80>
   15d40:	mov	r6, r8
   15d44:	b	15c8c <ASN1_STRING_length@plt+0x3d18>
   15d48:	mov	fp, r3
   15d4c:	ldrb	r3, [sl, #8]
   15d50:	mov	r0, #524	; 0x20c
   15d54:	cmp	r3, r1
   15d58:	ldrb	r3, [sl, #9]
   15d5c:	strbhi	r1, [sl, #8]
   15d60:	cmp	r3, r1
   15d64:	strbcc	r1, [sl, #9]
   15d68:	mov	r1, #1
   15d6c:	bl	11ae8 <calloc@plt>
   15d70:	add	sl, sl, r4, lsl #2
   15d74:	mov	r5, r0
   15d78:	add	r0, r6, #1
   15d7c:	str	r5, [sl, #4]
   15d80:	add	r0, fp, r0
   15d84:	bl	11d4c <strdup@plt>
   15d88:	mvn	r3, #127	; 0x7f
   15d8c:	ldr	r2, [sp, #12]
   15d90:	ldr	r1, [sp, #8]
   15d94:	strb	r3, [r5, #8]
   15d98:	str	r0, [r5]
   15d9c:	add	r0, r5, #4
   15da0:	bl	15af4 <ASN1_STRING_length@plt+0x3b80>
   15da4:	mov	r0, #0
   15da8:	add	sp, sp, #20
   15dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15db4:	mov	r7, r0
   15db8:	sub	sp, sp, #20
   15dbc:	mov	r0, r1
   15dc0:	mov	r6, r1
   15dc4:	ldr	fp, [r7]
   15dc8:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   15dcc:	mov	sl, r0
   15dd0:	bl	11c44 <strlen@plt>
   15dd4:	mov	r9, r0
   15dd8:	add	r1, r0, #69	; 0x45
   15ddc:	mov	r0, #1
   15de0:	add	r9, r9, r0
   15de4:	bl	11ae8 <calloc@plt>
   15de8:	subs	r4, r0, #0
   15dec:	beq	15f88 <ASN1_STRING_length@plt+0x4014>
   15df0:	ldr	r3, [r7, #12]
   15df4:	mvn	r2, #-2147483648	; 0x80000000
   15df8:	add	r3, r3, #1
   15dfc:	add	r8, r4, #68	; 0x44
   15e00:	str	r3, [r4, #48]	; 0x30
   15e04:	mov	r1, sl
   15e08:	str	r2, [r4, #52]	; 0x34
   15e0c:	str	r6, [r4]
   15e10:	mov	r2, r9
   15e14:	mov	r0, r8
   15e18:	bl	11c5c <memcpy@plt>
   15e1c:	mov	r1, #4
   15e20:	add	r0, r4, #24
   15e24:	str	r9, [r4, #44]	; 0x2c
   15e28:	bl	1a8bc <ASN1_STRING_length@plt+0x8948>
   15e2c:	mov	r0, r6
   15e30:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   15e34:	bl	11d4c <strdup@plt>
   15e38:	mov	r1, #47	; 0x2f
   15e3c:	str	r0, [r4, #4]
   15e40:	mov	sl, r0
   15e44:	bl	11b3c <strrchr@plt>
   15e48:	add	r3, fp, #4096	; 0x1000
   15e4c:	add	r1, fp, #4
   15e50:	ldr	r3, [r3, #4]
   15e54:	str	r3, [sp, #12]
   15e58:	sub	r2, r0, sl
   15e5c:	str	r2, [r4, #40]	; 0x28
   15e60:	mov	r5, r0
   15e64:	mov	r2, r3
   15e68:	mov	r0, sl
   15e6c:	bl	11ea8 <strncmp@plt>
   15e70:	cmp	r0, #0
   15e74:	movne	r0, #0
   15e78:	beq	15f08 <ASN1_STRING_length@plt+0x3f94>
   15e7c:	str	r0, [r4, #8]
   15e80:	mov	r2, r4
   15e84:	mov	r1, r8
   15e88:	ldr	r0, [r7, #28]
   15e8c:	bl	1acfc <ASN1_STRING_length@plt+0x8d88>
   15e90:	subs	sl, r0, #0
   15e94:	blt	15f20 <ASN1_STRING_length@plt+0x3fac>
   15e98:	ldr	r0, [r4, #8]
   15e9c:	cmp	r0, #0
   15ea0:	beq	15edc <ASN1_STRING_length@plt+0x3f68>
   15ea4:	sub	r5, r5, r0
   15ea8:	add	r5, r5, r9
   15eac:	add	r1, r5, #4
   15eb0:	bl	1b424 <ASN1_STRING_length@plt+0x94b0>
   15eb4:	mov	r3, #0
   15eb8:	mov	r2, r4
   15ebc:	add	r5, r0, r5
   15ec0:	str	r0, [r4, #12]
   15ec4:	strb	r3, [r5, #3]
   15ec8:	ldr	r1, [r4, #12]
   15ecc:	ldr	r0, [r7, #24]
   15ed0:	bl	1acfc <ASN1_STRING_length@plt+0x8d88>
   15ed4:	subs	sl, r0, #0
   15ed8:	blt	15f58 <ASN1_STRING_length@plt+0x3fe4>
   15edc:	ldr	r2, [r4, #4]
   15ee0:	mov	r3, r6
   15ee4:	str	r2, [sp]
   15ee8:	ldr	r1, [pc, #160]	; 15f90 <ASN1_STRING_length@plt+0x401c>
   15eec:	mov	r2, r4
   15ef0:	mov	r0, #7
   15ef4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15ef8:	mov	sl, #0
   15efc:	mov	r0, sl
   15f00:	add	sp, sp, #20
   15f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f08:	ldr	r3, [sp, #12]
   15f0c:	ldrb	r2, [sl, r3]
   15f10:	cmp	r2, #47	; 0x2f
   15f14:	addeq	r0, r3, #1
   15f18:	addeq	r0, sl, r0
   15f1c:	b	15e7c <ASN1_STRING_length@plt+0x3f08>
   15f20:	rsb	r0, sl, #0
   15f24:	bl	119f8 <strerror@plt>
   15f28:	mov	r2, r8
   15f2c:	ldr	r1, [pc, #96]	; 15f94 <ASN1_STRING_length@plt+0x4020>
   15f30:	mov	r3, r0
   15f34:	mov	r0, #3
   15f38:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15f3c:	ldr	r0, [r4, #12]
   15f40:	bl	11ba8 <free@plt>
   15f44:	mov	r0, r4
   15f48:	bl	11ba8 <free@plt>
   15f4c:	mov	r0, sl
   15f50:	add	sp, sp, #20
   15f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f58:	rsb	r0, sl, #0
   15f5c:	ldr	r5, [r4, #12]
   15f60:	bl	119f8 <strerror@plt>
   15f64:	mov	r2, r5
   15f68:	ldr	r1, [pc, #36]	; 15f94 <ASN1_STRING_length@plt+0x4020>
   15f6c:	mov	r3, r0
   15f70:	mov	r0, #3
   15f74:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   15f78:	mov	r1, r8
   15f7c:	ldr	r0, [r7, #28]
   15f80:	bl	1b05c <ASN1_STRING_length@plt+0x90e8>
   15f84:	b	15f3c <ASN1_STRING_length@plt+0x3fc8>
   15f88:	mvn	sl, #11
   15f8c:	b	15efc <ASN1_STRING_length@plt+0x3f88>
   15f90:	ldrdeq	ip, [r2], -r8
   15f94:	andeq	ip, r2, r0, asr #11
   15f98:	push	{r4, r5, r6, lr}
   15f9c:	mov	r5, r0
   15fa0:	ldr	r6, [pc, #148]	; 1603c <ASN1_STRING_length@plt+0x40c8>
   15fa4:	sub	sp, sp, #32
   15fa8:	mov	r3, r1
   15fac:	ldr	ip, [r6]
   15fb0:	mov	r2, #49	; 0x31
   15fb4:	mov	r4, r1
   15fb8:	ldr	r0, [pc, #128]	; 16040 <ASN1_STRING_length@plt+0x40cc>
   15fbc:	mov	r1, #1
   15fc0:	str	ip, [sp, #28]
   15fc4:	bl	11d10 <fwrite@plt>
   15fc8:	ldr	r0, [r5, #32]
   15fcc:	add	r1, sp, #16
   15fd0:	bl	1b2a8 <ASN1_STRING_length@plt+0x9334>
   15fd4:	ldr	r5, [pc, #104]	; 16044 <ASN1_STRING_length@plt+0x40d0>
   15fd8:	add	r2, sp, #12
   15fdc:	mov	r1, #0
   15fe0:	add	r0, sp, #16
   15fe4:	bl	1b2b8 <ASN1_STRING_length@plt+0x9344>
   15fe8:	cmp	r0, #0
   15fec:	beq	16020 <ASN1_STRING_length@plt+0x40ac>
   15ff0:	ldr	r3, [sp, #12]
   15ff4:	ldr	r2, [r3]
   15ff8:	cmp	r2, #0
   15ffc:	beq	15fd8 <ASN1_STRING_length@plt+0x4064>
   16000:	add	r2, r2, #68	; 0x44
   16004:	str	r2, [sp]
   16008:	add	r3, r3, #16
   1600c:	mov	r2, r5
   16010:	mov	r1, #1
   16014:	mov	r0, r4
   16018:	bl	11d94 <__fprintf_chk@plt>
   1601c:	b	15fd8 <ASN1_STRING_length@plt+0x4064>
   16020:	ldr	r2, [sp, #28]
   16024:	ldr	r3, [r6]
   16028:	cmp	r2, r3
   1602c:	bne	16038 <ASN1_STRING_length@plt+0x40c4>
   16030:	add	sp, sp, #32
   16034:	pop	{r4, r5, r6, pc}
   16038:	bl	11d88 <__stack_chk_fail@plt>
   1603c:	andeq	pc, r3, r8, ror #25
   16040:	andeq	sp, r2, r8, asr r7
   16044:	andeq	sp, r2, ip, lsl #15
   16048:	ldr	r2, [pc, #564]	; 16284 <ASN1_STRING_length@plt+0x4310>
   1604c:	ldr	r3, [r0, #12]
   16050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16054:	sub	sp, sp, #60	; 0x3c
   16058:	ldr	r2, [r2]
   1605c:	cmp	r3, #0
   16060:	str	r0, [sp, #28]
   16064:	str	r1, [sp, #36]	; 0x24
   16068:	str	r2, [sp, #52]	; 0x34
   1606c:	beq	16174 <ASN1_STRING_length@plt+0x4200>
   16070:	ldr	r8, [pc, #528]	; 16288 <ASN1_STRING_length@plt+0x4314>
   16074:	ldr	fp, [pc, #528]	; 1628c <ASN1_STRING_length@plt+0x4318>
   16078:	mov	r2, #1
   1607c:	str	r2, [sp, #32]
   16080:	mov	r2, #0
   16084:	str	r2, [sp, #16]
   16088:	ldr	r2, [sp, #28]
   1608c:	ldr	r1, [sp, #16]
   16090:	ldr	r2, [r2, #8]
   16094:	ldr	r6, [r2, r1, lsl #2]
   16098:	ldr	r4, [r6, #16]
   1609c:	cmp	r4, #0
   160a0:	beq	16160 <ASN1_STRING_length@plt+0x41ec>
   160a4:	mov	r3, #0
   160a8:	mov	r9, r3
   160ac:	mov	r7, r3
   160b0:	str	r3, [sp, #24]
   160b4:	str	r3, [sp, #20]
   160b8:	mov	r0, r4
   160bc:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   160c0:	mov	sl, r0
   160c4:	mov	r0, r4
   160c8:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   160cc:	mov	r1, r8
   160d0:	mov	r5, r0
   160d4:	mov	r0, sl
   160d8:	bl	11f14 <strcmp@plt>
   160dc:	cmp	r0, #0
   160e0:	bne	16118 <ASN1_STRING_length@plt+0x41a4>
   160e4:	mov	r2, #8
   160e8:	mov	r1, fp
   160ec:	mov	r0, r5
   160f0:	bl	11ea8 <strncmp@plt>
   160f4:	cmp	r0, #0
   160f8:	bne	16194 <ASN1_STRING_length@plt+0x4220>
   160fc:	adds	r3, r9, #0
   16100:	add	r7, r5, #8
   16104:	movne	r3, #1
   16108:	cmp	r7, #0
   1610c:	moveq	r3, #0
   16110:	cmp	r3, #0
   16114:	bne	161d8 <ASN1_STRING_length@plt+0x4264>
   16118:	ldr	r4, [r4]
   1611c:	ldr	r3, [r6, #16]
   16120:	cmp	r4, r3
   16124:	beq	16130 <ASN1_STRING_length@plt+0x41bc>
   16128:	cmp	r4, #0
   1612c:	bne	160b8 <ASN1_STRING_length@plt+0x4144>
   16130:	cmp	r7, #0
   16134:	beq	16158 <ASN1_STRING_length@plt+0x41e4>
   16138:	cmp	r9, #0
   1613c:	add	r6, r6, #68	; 0x44
   16140:	bne	161dc <ASN1_STRING_length@plt+0x4268>
   16144:	mov	r3, r7
   16148:	mov	r2, r6
   1614c:	ldr	r1, [pc, #316]	; 16290 <ASN1_STRING_length@plt+0x431c>
   16150:	mov	r0, #3
   16154:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16158:	ldr	r3, [sp, #28]
   1615c:	ldr	r3, [r3, #12]
   16160:	ldr	r2, [sp, #16]
   16164:	add	r2, r2, #1
   16168:	cmp	r3, r2
   1616c:	str	r2, [sp, #16]
   16170:	bhi	16088 <ASN1_STRING_length@plt+0x4114>
   16174:	ldr	r3, [pc, #264]	; 16284 <ASN1_STRING_length@plt+0x4310>
   16178:	ldr	r2, [sp, #52]	; 0x34
   1617c:	mov	r0, #0
   16180:	ldr	r3, [r3]
   16184:	cmp	r2, r3
   16188:	bne	16280 <ASN1_STRING_length@plt+0x430c>
   1618c:	add	sp, sp, #60	; 0x3c
   16190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16194:	add	r2, sp, #44	; 0x2c
   16198:	add	r3, sp, #48	; 0x30
   1619c:	ldr	r1, [pc, #240]	; 16294 <ASN1_STRING_length@plt+0x4320>
   161a0:	mov	r0, r5
   161a4:	bl	11c50 <sscanf@plt>
   161a8:	cmp	r0, #2
   161ac:	bne	16224 <ASN1_STRING_length@plt+0x42b0>
   161b0:	ldr	r3, [sp, #44]	; 0x2c
   161b4:	cmp	r7, #0
   161b8:	str	r3, [sp, #20]
   161bc:	ldr	r3, [sp, #48]	; 0x30
   161c0:	mov	r9, #99	; 0x63
   161c4:	str	r3, [sp, #24]
   161c8:	mov	r3, #1
   161cc:	moveq	r3, #0
   161d0:	cmp	r3, #0
   161d4:	beq	16118 <ASN1_STRING_length@plt+0x41a4>
   161d8:	add	r6, r6, #68	; 0x44
   161dc:	ldr	r3, [sp, #32]
   161e0:	cmp	r3, #0
   161e4:	bne	16268 <ASN1_STRING_length@plt+0x42f4>
   161e8:	ldr	r3, [sp, #24]
   161ec:	stm	sp, {r7, r9}
   161f0:	str	r3, [sp, #12]
   161f4:	ldr	r3, [sp, #20]
   161f8:	ldr	r2, [pc, #152]	; 16298 <ASN1_STRING_length@plt+0x4324>
   161fc:	str	r3, [sp, #8]
   16200:	mov	r1, #1
   16204:	mov	r3, r6
   16208:	ldr	r0, [sp, #36]	; 0x24
   1620c:	bl	11d94 <__fprintf_chk@plt>
   16210:	mov	r3, #0
   16214:	str	r3, [sp, #32]
   16218:	ldr	r3, [sp, #28]
   1621c:	ldr	r3, [r3, #12]
   16220:	b	16160 <ASN1_STRING_length@plt+0x41ec>
   16224:	add	r2, sp, #44	; 0x2c
   16228:	mov	r0, r5
   1622c:	add	r3, sp, #48	; 0x30
   16230:	ldr	r1, [pc, #100]	; 1629c <ASN1_STRING_length@plt+0x4328>
   16234:	bl	11c50 <sscanf@plt>
   16238:	cmp	r0, #2
   1623c:	beq	1624c <ASN1_STRING_length@plt+0x42d8>
   16240:	adds	r3, r9, #0
   16244:	movne	r3, #1
   16248:	b	16108 <ASN1_STRING_length@plt+0x4194>
   1624c:	ldr	r3, [sp, #44]	; 0x2c
   16250:	mov	r9, #98	; 0x62
   16254:	str	r3, [sp, #20]
   16258:	ldr	r3, [sp, #48]	; 0x30
   1625c:	str	r3, [sp, #24]
   16260:	mov	r3, #1
   16264:	b	16108 <ASN1_STRING_length@plt+0x4194>
   16268:	ldr	r3, [sp, #36]	; 0x24
   1626c:	mov	r2, #52	; 0x34
   16270:	mov	r1, #1
   16274:	ldr	r0, [pc, #36]	; 162a0 <ASN1_STRING_length@plt+0x432c>
   16278:	bl	11d10 <fwrite@plt>
   1627c:	b	161e8 <ASN1_STRING_length@plt+0x4274>
   16280:	bl	11d88 <__stack_chk_fail@plt>
   16284:	andeq	pc, r3, r8, ror #25
   16288:	andeq	ip, r2, r4, lsr #2
   1628c:	andeq	sp, r2, r4, asr #12
   16290:	andeq	sp, r2, r0, asr #13
   16294:	andeq	sp, r2, r0, asr r6
   16298:			; <UNDEFINED> instruction: 0x0002d6b0
   1629c:	andeq	sp, r2, r4, ror #12
   162a0:	andeq	sp, r2, r8, ror r6
   162a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162a8:	sub	sp, sp, #20
   162ac:	mov	r4, r0
   162b0:	mov	r3, r1
   162b4:	str	r0, [sp, #12]
   162b8:	mov	r8, r1
   162bc:	mov	r2, #55	; 0x37
   162c0:	mov	r1, #1
   162c4:	ldr	r0, [pc, #196]	; 16390 <ASN1_STRING_length@plt+0x441c>
   162c8:	bl	11d10 <fwrite@plt>
   162cc:	ldr	r3, [r4, #12]
   162d0:	cmp	r3, #0
   162d4:	beq	16384 <ASN1_STRING_length@plt+0x4410>
   162d8:	ldr	sl, [pc, #180]	; 16394 <ASN1_STRING_length@plt+0x4420>
   162dc:	ldr	r9, [pc, #180]	; 16398 <ASN1_STRING_length@plt+0x4424>
   162e0:	mov	r2, #0
   162e4:	str	r2, [sp, #8]
   162e8:	ldr	r2, [sp, #12]
   162ec:	ldr	r1, [sp, #8]
   162f0:	ldr	r2, [r2, #8]
   162f4:	ldr	r6, [r2, r1, lsl #2]
   162f8:	ldr	r4, [r6, #16]
   162fc:	cmp	r4, #0
   16300:	beq	16370 <ASN1_STRING_length@plt+0x43fc>
   16304:	add	r7, r6, #68	; 0x44
   16308:	b	16314 <ASN1_STRING_length@plt+0x43a0>
   1630c:	cmp	r4, #0
   16310:	beq	16368 <ASN1_STRING_length@plt+0x43f4>
   16314:	mov	r0, r4
   16318:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   1631c:	mov	fp, r0
   16320:	mov	r0, r4
   16324:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   16328:	mov	r1, sl
   1632c:	mov	r5, r0
   16330:	mov	r0, fp
   16334:	bl	11f14 <strcmp@plt>
   16338:	mov	r3, r7
   1633c:	mov	r2, r9
   16340:	mov	r1, #1
   16344:	cmp	r0, #0
   16348:	mov	r0, r8
   1634c:	bne	16358 <ASN1_STRING_length@plt+0x43e4>
   16350:	str	r5, [sp]
   16354:	bl	11d94 <__fprintf_chk@plt>
   16358:	ldr	r4, [r4]
   1635c:	ldr	r3, [r6, #16]
   16360:	cmp	r4, r3
   16364:	bne	1630c <ASN1_STRING_length@plt+0x4398>
   16368:	ldr	r3, [sp, #12]
   1636c:	ldr	r3, [r3, #12]
   16370:	ldr	r2, [sp, #8]
   16374:	add	r2, r2, #1
   16378:	cmp	r3, r2
   1637c:	str	r2, [sp, #8]
   16380:	bhi	162e8 <ASN1_STRING_length@plt+0x4374>
   16384:	mov	r0, #0
   16388:	add	sp, sp, #20
   1638c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16390:	andeq	sp, r2, r0, lsl r7
   16394:	andeq	sp, r2, r8, lsl r8
   16398:	andeq	sp, r2, r8, asr #14
   1639c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163a0:	sub	sp, sp, #20
   163a4:	mov	r4, r0
   163a8:	mov	r3, r1
   163ac:	str	r0, [sp, #12]
   163b0:	mov	r6, r1
   163b4:	mov	r2, #45	; 0x2d
   163b8:	mov	r1, #1
   163bc:	ldr	r0, [pc, #196]	; 16488 <ASN1_STRING_length@plt+0x4514>
   163c0:	bl	11d10 <fwrite@plt>
   163c4:	ldr	r3, [r4, #12]
   163c8:	cmp	r3, #0
   163cc:	beq	1647c <ASN1_STRING_length@plt+0x4508>
   163d0:	ldr	r8, [pc, #180]	; 1648c <ASN1_STRING_length@plt+0x4518>
   163d4:	ldr	r7, [pc, #180]	; 16490 <ASN1_STRING_length@plt+0x451c>
   163d8:	mov	r2, #0
   163dc:	str	r2, [sp, #8]
   163e0:	ldr	r2, [sp, #12]
   163e4:	ldr	r1, [sp, #8]
   163e8:	ldr	r2, [r2, #8]
   163ec:	ldr	r5, [r2, r1, lsl #2]
   163f0:	ldr	r4, [r5, #16]
   163f4:	cmp	r4, #0
   163f8:	beq	16468 <ASN1_STRING_length@plt+0x44f4>
   163fc:	add	r9, r5, #68	; 0x44
   16400:	b	1640c <ASN1_STRING_length@plt+0x4498>
   16404:	cmp	r4, #0
   16408:	beq	16460 <ASN1_STRING_length@plt+0x44ec>
   1640c:	mov	r0, r4
   16410:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   16414:	mov	sl, r0
   16418:	mov	r0, r4
   1641c:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   16420:	mov	r1, r8
   16424:	mov	fp, r0
   16428:	mov	r0, sl
   1642c:	bl	11f14 <strcmp@plt>
   16430:	mov	r3, fp
   16434:	mov	r2, r7
   16438:	mov	r1, #1
   1643c:	cmp	r0, #0
   16440:	mov	r0, r6
   16444:	bne	16450 <ASN1_STRING_length@plt+0x44dc>
   16448:	str	r9, [sp]
   1644c:	bl	11d94 <__fprintf_chk@plt>
   16450:	ldr	r4, [r4]
   16454:	ldr	r3, [r5, #16]
   16458:	cmp	r4, r3
   1645c:	bne	16404 <ASN1_STRING_length@plt+0x4490>
   16460:	ldr	r3, [sp, #12]
   16464:	ldr	r3, [r3, #12]
   16468:	ldr	r2, [sp, #8]
   1646c:	add	r2, r2, #1
   16470:	cmp	r3, r2
   16474:	str	r2, [sp, #8]
   16478:	bhi	163e0 <ASN1_STRING_length@plt+0x446c>
   1647c:	mov	r0, #0
   16480:	add	sp, sp, #20
   16484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16488:	andeq	sp, r2, r0, lsr #10
   1648c:	andeq	ip, r2, r4, lsr #2
   16490:	andeq	sp, r2, r0, asr r5
   16494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16498:	sub	sp, sp, #12
   1649c:	ldr	r7, [pc, #484]	; 16688 <ASN1_STRING_length@plt+0x4714>
   164a0:	subs	r8, r0, #0
   164a4:	moveq	r0, r8
   164a8:	ldr	r3, [r7]
   164ac:	str	r3, [sp, #4]
   164b0:	beq	1657c <ASN1_STRING_length@plt+0x4608>
   164b4:	ldrb	r4, [r8, #8]
   164b8:	mov	r5, r1
   164bc:	tst	r4, #128	; 0x80
   164c0:	beq	16594 <ASN1_STRING_length@plt+0x4620>
   164c4:	mov	r0, r1
   164c8:	bl	11c80 <ftell@plt>
   164cc:	mov	r6, r0
   164d0:	ldr	r0, [r8]
   164d4:	ldrb	sl, [r0]
   164d8:	cmp	sl, #0
   164dc:	bne	16638 <ASN1_STRING_length@plt+0x46c4>
   164e0:	mov	r0, sl
   164e4:	bl	11ba8 <free@plt>
   164e8:	ldr	r3, [r8, #4]
   164ec:	cmp	r3, #0
   164f0:	beq	16578 <ASN1_STRING_length@plt+0x4604>
   164f4:	mov	r2, #0
   164f8:	ldr	r3, [r3]
   164fc:	add	r2, r2, #1
   16500:	cmp	r3, #0
   16504:	bne	164f8 <ASN1_STRING_length@plt+0x4584>
   16508:	rev	ip, r2
   1650c:	mov	r0, sp
   16510:	mov	r3, r5
   16514:	mov	r2, #1
   16518:	mov	r1, #4
   1651c:	str	ip, [sp]
   16520:	bl	11d10 <fwrite@plt>
   16524:	ldr	r4, [r8, #4]
   16528:	cmp	r4, #0
   1652c:	beq	16574 <ASN1_STRING_length@plt+0x4600>
   16530:	ldr	ip, [r4, #4]
   16534:	mov	r3, r5
   16538:	rev	ip, ip
   1653c:	mov	r2, #1
   16540:	mov	r1, #4
   16544:	mov	r0, sp
   16548:	str	ip, [sp]
   1654c:	bl	11d10 <fwrite@plt>
   16550:	mov	r1, r5
   16554:	add	r0, r4, #8
   16558:	bl	11f68 <fputs@plt>
   1655c:	mov	r1, r5
   16560:	mov	r0, #0
   16564:	bl	11db8 <fputc@plt>
   16568:	ldr	r4, [r4]
   1656c:	cmp	r4, #0
   16570:	bne	16530 <ASN1_STRING_length@plt+0x45bc>
   16574:	orr	r6, r6, #1073741824	; 0x40000000
   16578:	mov	r0, r6
   1657c:	ldr	r2, [sp, #4]
   16580:	ldr	r3, [r7]
   16584:	cmp	r2, r3
   16588:	bne	16684 <ASN1_STRING_length@plt+0x4710>
   1658c:	add	sp, sp, #12
   16590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16594:	ldrb	r9, [r8, #9]
   16598:	sub	r9, r9, r4
   1659c:	add	r9, r9, #1
   165a0:	lsl	r0, r9, #2
   165a4:	bl	11d64 <malloc@plt>
   165a8:	cmp	r9, #0
   165ac:	mov	sl, r0
   165b0:	ble	16664 <ASN1_STRING_length@plt+0x46f0>
   165b4:	sub	fp, r0, #4
   165b8:	mov	r6, #0
   165bc:	add	r4, r6, r4
   165c0:	mov	r1, r5
   165c4:	add	r4, r8, r4, lsl #2
   165c8:	add	r6, r6, #1
   165cc:	ldr	r0, [r4, #12]
   165d0:	bl	16494 <ASN1_STRING_length@plt+0x4520>
   165d4:	cmp	r6, r9
   165d8:	rev	r0, r0
   165dc:	str	r0, [fp, #4]!
   165e0:	ldrbne	r4, [r8, #8]
   165e4:	bne	165bc <ASN1_STRING_length@plt+0x4648>
   165e8:	mov	r0, r5
   165ec:	bl	11c80 <ftell@plt>
   165f0:	mov	r6, r0
   165f4:	ldr	r0, [r8]
   165f8:	ldrb	r3, [r0]
   165fc:	cmp	r3, #0
   16600:	bne	16640 <ASN1_STRING_length@plt+0x46cc>
   16604:	mov	r1, r5
   16608:	ldrb	r0, [r8, #8]
   1660c:	bl	11db8 <fputc@plt>
   16610:	mov	r1, r5
   16614:	ldrb	r0, [r8, #9]
   16618:	bl	11db8 <fputc@plt>
   1661c:	mov	r3, r5
   16620:	mov	r2, r9
   16624:	mov	r1, #4
   16628:	mov	r0, sl
   1662c:	bl	11d10 <fwrite@plt>
   16630:	orr	r6, r6, #536870912	; 0x20000000
   16634:	b	164e0 <ASN1_STRING_length@plt+0x456c>
   16638:	mov	r9, #0
   1663c:	mov	sl, r9
   16640:	mov	r1, r5
   16644:	bl	11f68 <fputs@plt>
   16648:	mov	r1, r5
   1664c:	mov	r0, #0
   16650:	bl	11db8 <fputc@plt>
   16654:	orr	r6, r6, #-2147483648	; 0x80000000
   16658:	cmp	r9, #0
   1665c:	beq	164e0 <ASN1_STRING_length@plt+0x456c>
   16660:	b	16604 <ASN1_STRING_length@plt+0x4690>
   16664:	mov	r0, r5
   16668:	bl	11c80 <ftell@plt>
   1666c:	mov	r6, r0
   16670:	ldr	r0, [r8]
   16674:	ldrb	r3, [r0]
   16678:	cmp	r3, #0
   1667c:	beq	16658 <ASN1_STRING_length@plt+0x46e4>
   16680:	b	16640 <ASN1_STRING_length@plt+0x46cc>
   16684:	bl	11d88 <__stack_chk_fail@plt>
   16688:	andeq	pc, r3, r8, ror #25
   1668c:	push	{r4, r5, r6, r7, r8, lr}
   16690:	mov	r4, r1
   16694:	ldr	r6, [pc, #268]	; 167a8 <ASN1_STRING_length@plt+0x4834>
   16698:	sub	sp, sp, #8
   1669c:	ldr	ip, [pc, #264]	; 167ac <ASN1_STRING_length@plt+0x4838>
   166a0:	ldr	r1, [r6]
   166a4:	mov	r3, r4
   166a8:	mov	r2, #1
   166ac:	str	r1, [sp, #4]
   166b0:	mov	r8, r0
   166b4:	mov	r1, #4
   166b8:	mov	r0, sp
   166bc:	str	ip, [sp]
   166c0:	bl	11d10 <fwrite@plt>
   166c4:	ldr	ip, [pc, #228]	; 167b0 <ASN1_STRING_length@plt+0x483c>
   166c8:	mov	r3, r4
   166cc:	mov	r2, #1
   166d0:	mov	r1, #4
   166d4:	mov	r0, sp
   166d8:	str	ip, [sp]
   166dc:	bl	11d10 <fwrite@plt>
   166e0:	mov	r0, r4
   166e4:	bl	11c80 <ftell@plt>
   166e8:	subs	r7, r0, #0
   166ec:	blt	1677c <ASN1_STRING_length@plt+0x4808>
   166f0:	mov	r3, r4
   166f4:	mov	r2, #1
   166f8:	mov	r1, #4
   166fc:	mov	r5, #0
   16700:	mov	r0, sp
   16704:	str	r5, [sp]
   16708:	bl	11d10 <fwrite@plt>
   1670c:	mov	r1, r4
   16710:	mov	r0, r8
   16714:	bl	16494 <ASN1_STRING_length@plt+0x4520>
   16718:	rev	r3, r0
   1671c:	mov	r0, r4
   16720:	str	r3, [sp]
   16724:	bl	11c80 <ftell@plt>
   16728:	subs	r8, r0, #0
   1672c:	blt	16794 <ASN1_STRING_length@plt+0x4820>
   16730:	mov	r1, r7
   16734:	mov	r2, r5
   16738:	mov	r0, r4
   1673c:	bl	11c08 <fseek@plt>
   16740:	mov	r3, r4
   16744:	mov	r2, #1
   16748:	mov	r1, #4
   1674c:	mov	r0, sp
   16750:	bl	11d10 <fwrite@plt>
   16754:	mov	r2, r5
   16758:	mov	r1, r8
   1675c:	mov	r0, r4
   16760:	bl	11c08 <fseek@plt>
   16764:	ldr	r2, [sp, #4]
   16768:	ldr	r3, [r6]
   1676c:	cmp	r2, r3
   16770:	bne	16790 <ASN1_STRING_length@plt+0x481c>
   16774:	add	sp, sp, #8
   16778:	pop	{r4, r5, r6, r7, r8, pc}
   1677c:	ldr	r3, [pc, #48]	; 167b4 <ASN1_STRING_length@plt+0x4840>
   16780:	mov	r2, #416	; 0x1a0
   16784:	ldr	r1, [pc, #44]	; 167b8 <ASN1_STRING_length@plt+0x4844>
   16788:	ldr	r0, [pc, #44]	; 167bc <ASN1_STRING_length@plt+0x4848>
   1678c:	bl	11b6c <__assert_fail@plt>
   16790:	bl	11d88 <__stack_chk_fail@plt>
   16794:	ldr	r3, [pc, #24]	; 167b4 <ASN1_STRING_length@plt+0x4840>
   16798:	ldr	r2, [pc, #32]	; 167c0 <ASN1_STRING_length@plt+0x484c>
   1679c:	ldr	r1, [pc, #20]	; 167b8 <ASN1_STRING_length@plt+0x4844>
   167a0:	ldr	r0, [pc, #28]	; 167c4 <ASN1_STRING_length@plt+0x4850>
   167a4:	bl	11b6c <__assert_fail@plt>
   167a8:	andeq	pc, r3, r8, ror #25
   167ac:			; <UNDEFINED> instruction: 0x57f407b0
   167b0:	mrseq	r0, R8_usr
   167b4:	andeq	ip, r2, r4, lsr #4
   167b8:			; <UNDEFINED> instruction: 0x0002d4bc
   167bc:	ldrdeq	sp, [r2], -r0
   167c0:	andeq	r0, r0, r9, lsr #3
   167c4:	andeq	sp, r2, r4, ror #9
   167c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   167cc:	sub	sp, sp, #12
   167d0:	ldr	r6, [pc, #168]	; 16880 <ASN1_STRING_length@plt+0x490c>
   167d4:	mov	r8, #0
   167d8:	mov	r7, r1
   167dc:	ldr	r3, [r6]
   167e0:	str	r8, [sp]
   167e4:	str	r3, [sp, #4]
   167e8:	mov	r9, r0
   167ec:	bl	152f0 <ASN1_STRING_length@plt+0x337c>
   167f0:	cmp	r0, r8
   167f4:	str	r0, [r1]
   167f8:	beq	16864 <ASN1_STRING_length@plt+0x48f0>
   167fc:	mov	r4, r0
   16800:	lsl	r0, r0, #2
   16804:	bl	11d64 <malloc@plt>
   16808:	subs	r5, r0, #0
   1680c:	beq	16864 <ASN1_STRING_length@plt+0x48f0>
   16810:	mov	r2, r4
   16814:	mov	r0, r9
   16818:	mov	r3, sp
   1681c:	mov	r1, r5
   16820:	bl	15334 <ASN1_STRING_length@plt+0x33c0>
   16824:	cmp	r0, #0
   16828:	blt	1686c <ASN1_STRING_length@plt+0x48f8>
   1682c:	ldr	r3, [pc, #80]	; 16884 <ASN1_STRING_length@plt+0x4910>
   16830:	mov	r2, #4
   16834:	ldr	r1, [sp]
   16838:	mov	r0, r5
   1683c:	bl	119ec <qsort@plt>
   16840:	ldr	r3, [sp]
   16844:	str	r3, [r7]
   16848:	ldr	r2, [sp, #4]
   1684c:	ldr	r3, [r6]
   16850:	mov	r0, r5
   16854:	cmp	r2, r3
   16858:	bne	1687c <ASN1_STRING_length@plt+0x4908>
   1685c:	add	sp, sp, #12
   16860:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16864:	mov	r5, #0
   16868:	b	16848 <ASN1_STRING_length@plt+0x48d4>
   1686c:	mov	r0, r5
   16870:	bl	11ba8 <free@plt>
   16874:	mov	r5, r8
   16878:	b	16848 <ASN1_STRING_length@plt+0x48d4>
   1687c:	bl	11d88 <__stack_chk_fail@plt>
   16880:	andeq	pc, r3, r8, ror #25
   16884:	ldrdeq	r5, [r1], -r8
   16888:	ldr	r3, [pc, #276]	; 169a4 <ASN1_STRING_length@plt+0x4a30>
   1688c:	ldr	r2, [r0, #12]
   16890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16894:	sub	sp, sp, #12
   16898:	ldr	r3, [r3]
   1689c:	cmp	r2, #0
   168a0:	str	r3, [sp, #4]
   168a4:	beq	1696c <ASN1_STRING_length@plt+0x49f8>
   168a8:	ldr	fp, [pc, #248]	; 169a8 <ASN1_STRING_length@plt+0x4a34>
   168ac:	ldr	r8, [pc, #248]	; 169ac <ASN1_STRING_length@plt+0x4a38>
   168b0:	mov	r9, r0
   168b4:	mov	r6, r1
   168b8:	mov	r7, #0
   168bc:	ldr	r3, [r9, #8]
   168c0:	mov	r2, fp
   168c4:	mov	r1, #1
   168c8:	ldr	r4, [r3, r7, lsl #2]
   168cc:	mov	r0, r6
   168d0:	ldr	r5, [r4, #8]
   168d4:	cmp	r5, #0
   168d8:	ldreq	r5, [r4, #4]
   168dc:	mov	r3, r5
   168e0:	bl	11d94 <__fprintf_chk@plt>
   168e4:	ldr	r3, [r4, #28]
   168e8:	cmp	r3, #0
   168ec:	beq	16950 <ASN1_STRING_length@plt+0x49dc>
   168f0:	mov	r0, r4
   168f4:	mov	r1, sp
   168f8:	bl	167c8 <ASN1_STRING_length@plt+0x4854>
   168fc:	subs	sl, r0, #0
   16900:	beq	1698c <ASN1_STRING_length@plt+0x4a18>
   16904:	ldr	r3, [sp]
   16908:	cmp	r3, #0
   1690c:	subne	r5, sl, #4
   16910:	movne	r4, #0
   16914:	beq	16948 <ASN1_STRING_length@plt+0x49d4>
   16918:	ldr	r2, [r5, #4]!
   1691c:	mov	r1, #1
   16920:	mov	r0, r6
   16924:	ldr	r3, [r2, #8]
   16928:	add	r4, r4, #1
   1692c:	cmp	r3, #0
   16930:	ldreq	r3, [r2, #4]
   16934:	mov	r2, r8
   16938:	bl	11d94 <__fprintf_chk@plt>
   1693c:	ldr	r3, [sp]
   16940:	cmp	r3, r4
   16944:	bhi	16918 <ASN1_STRING_length@plt+0x49a4>
   16948:	mov	r0, sl
   1694c:	bl	11ba8 <free@plt>
   16950:	mov	r1, r6
   16954:	mov	r0, #10
   16958:	bl	11e60 <putc@plt>
   1695c:	ldr	r3, [r9, #12]
   16960:	add	r7, r7, #1
   16964:	cmp	r3, r7
   16968:	bhi	168bc <ASN1_STRING_length@plt+0x4948>
   1696c:	ldr	r3, [pc, #48]	; 169a4 <ASN1_STRING_length@plt+0x4a30>
   16970:	ldr	r2, [sp, #4]
   16974:	mov	r0, #0
   16978:	ldr	r3, [r3]
   1697c:	cmp	r2, r3
   16980:	bne	169a0 <ASN1_STRING_length@plt+0x4a2c>
   16984:	add	sp, sp, #12
   16988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1698c:	mov	r2, r5
   16990:	ldr	r1, [pc, #24]	; 169b0 <ASN1_STRING_length@plt+0x4a3c>
   16994:	mov	r0, #3
   16998:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1699c:	b	16950 <ASN1_STRING_length@plt+0x49dc>
   169a0:	bl	11d88 <__stack_chk_fail@plt>
   169a4:	andeq	pc, r3, r8, ror #25
   169a8:	ldrdeq	sp, [r2], -r0
   169ac:	andeq	sl, r2, r4, asr #22
   169b0:	ldrdeq	sp, [r2], -r4
   169b4:	push	{r4, lr}
   169b8:	add	r4, r0, #4096	; 0x1000
   169bc:	ldr	r0, [r4, #12]
   169c0:	cmp	r0, #0
   169c4:	beq	169f8 <ASN1_STRING_length@plt+0x4a84>
   169c8:	ldr	r3, [r0]
   169cc:	str	r3, [r4, #12]
   169d0:	bl	11ba8 <free@plt>
   169d4:	ldr	r0, [r4, #12]
   169d8:	cmp	r0, #0
   169dc:	bne	169c8 <ASN1_STRING_length@plt+0x4a54>
   169e0:	ldr	r0, [r4, #16]
   169e4:	cmp	r0, #0
   169e8:	beq	16a04 <ASN1_STRING_length@plt+0x4a90>
   169ec:	ldr	r3, [r0]
   169f0:	str	r3, [r4, #16]
   169f4:	bl	11ba8 <free@plt>
   169f8:	ldr	r0, [r4, #16]
   169fc:	cmp	r0, #0
   16a00:	bne	169ec <ASN1_STRING_length@plt+0x4a78>
   16a04:	ldr	r0, [r4, #20]
   16a08:	cmp	r0, #0
   16a0c:	popeq	{r4, pc}
   16a10:	ldr	r3, [r0]
   16a14:	str	r3, [r4, #20]
   16a18:	bl	11ba8 <free@plt>
   16a1c:	ldr	r0, [r4, #20]
   16a20:	cmp	r0, #0
   16a24:	bne	16a10 <ASN1_STRING_length@plt+0x4a9c>
   16a28:	pop	{r4, pc}
   16a2c:	push	{r4, r5, r6, r7, r8, lr}
   16a30:	mov	r5, r1
   16a34:	mov	r7, r0
   16a38:	ldr	r1, [pc, #188]	; 16afc <ASN1_STRING_length@plt+0x4b88>
   16a3c:	mov	r0, r5
   16a40:	bl	11f14 <strcmp@plt>
   16a44:	cmp	r0, #0
   16a48:	beq	16ac0 <ASN1_STRING_length@plt+0x4b4c>
   16a4c:	ldr	r1, [pc, #172]	; 16b00 <ASN1_STRING_length@plt+0x4b8c>
   16a50:	mov	r0, r5
   16a54:	bl	11f14 <strcmp@plt>
   16a58:	cmp	r0, #0
   16a5c:	beq	16af4 <ASN1_STRING_length@plt+0x4b80>
   16a60:	mov	r0, r5
   16a64:	bl	11c44 <strlen@plt>
   16a68:	mov	r8, r0
   16a6c:	add	r0, r0, #13
   16a70:	bl	11d64 <malloc@plt>
   16a74:	subs	r4, r0, #0
   16a78:	beq	16ae0 <ASN1_STRING_length@plt+0x4b6c>
   16a7c:	mov	r6, #0
   16a80:	str	r8, [r4, #8]
   16a84:	add	r2, r8, #1
   16a88:	str	r6, [r4, #4]
   16a8c:	mov	r1, r5
   16a90:	add	r0, r4, #12
   16a94:	bl	11c5c <memcpy@plt>
   16a98:	mov	r3, r6
   16a9c:	mov	r2, r5
   16aa0:	ldr	r1, [pc, #92]	; 16b04 <ASN1_STRING_length@plt+0x4b90>
   16aa4:	mov	r0, #7
   16aa8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16aac:	ldr	r3, [r7]
   16ab0:	mov	r0, #0
   16ab4:	str	r3, [r4]
   16ab8:	str	r4, [r7]
   16abc:	pop	{r4, r5, r6, r7, r8, pc}
   16ac0:	mov	r6, #1
   16ac4:	mov	r0, #12
   16ac8:	bl	11d64 <malloc@plt>
   16acc:	subs	r4, r0, #0
   16ad0:	movne	r3, #0
   16ad4:	strne	r6, [r4, #4]
   16ad8:	strne	r3, [r4, #8]
   16adc:	bne	16a98 <ASN1_STRING_length@plt+0x4b24>
   16ae0:	ldr	r1, [pc, #32]	; 16b08 <ASN1_STRING_length@plt+0x4b94>
   16ae4:	mov	r0, #3
   16ae8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16aec:	mvn	r0, #11
   16af0:	pop	{r4, r5, r6, r7, r8, pc}
   16af4:	mov	r6, #2
   16af8:	b	16ac4 <ASN1_STRING_length@plt+0x4b50>
   16afc:	andeq	ip, r2, ip, lsl #4
   16b00:	andeq	ip, r2, r8, lsl r2
   16b04:	strdeq	ip, [r2], -r4
   16b08:	ldrdeq	ip, [r2], -r8
   16b0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16b10:	sub	sp, sp, #12
   16b14:	cmp	r3, #0
   16b18:	mov	r9, r1
   16b1c:	mov	r7, r2
   16b20:	ldr	r6, [sp, #48]	; 0x30
   16b24:	bne	16b40 <ASN1_STRING_length@plt+0x4bcc>
   16b28:	ldr	r3, [r0]
   16b2c:	ldrb	r2, [r2]
   16b30:	add	r3, r3, #4096	; 0x1000
   16b34:	ldrb	r3, [r3, #8]
   16b38:	cmp	r2, r3
   16b3c:	addeq	r7, r7, #1
   16b40:	mov	r0, r7
   16b44:	bl	11c44 <strlen@plt>
   16b48:	mov	r5, r0
   16b4c:	add	r0, r0, #17
   16b50:	bl	11d64 <malloc@plt>
   16b54:	add	r5, r5, #1
   16b58:	subs	r4, r0, #0
   16b5c:	beq	16be4 <ASN1_STRING_length@plt+0x4c70>
   16b60:	ldrd	r2, [sp, #40]	; 0x28
   16b64:	add	r8, r4, #16
   16b68:	mov	r1, r7
   16b6c:	strd	r2, [r4, #8]
   16b70:	str	r6, [r4]
   16b74:	mov	r2, r5
   16b78:	mov	r0, r8
   16b7c:	bl	11c5c <memcpy@plt>
   16b80:	mov	r2, r4
   16b84:	mov	r1, r8
   16b88:	ldr	r0, [r9]
   16b8c:	bl	1aae4 <ASN1_STRING_length@plt+0x8b70>
   16b90:	subs	r5, r0, #0
   16b94:	blt	16bd0 <ASN1_STRING_length@plt+0x4c5c>
   16b98:	cmp	r6, #0
   16b9c:	mov	r2, r4
   16ba0:	ldrne	r3, [r6, #4]
   16ba4:	ldreq	r3, [pc, #64]	; 16bec <ASN1_STRING_length@plt+0x4c78>
   16ba8:	str	r6, [sp]
   16bac:	str	r3, [sp, #4]
   16bb0:	ldr	r1, [pc, #56]	; 16bf0 <ASN1_STRING_length@plt+0x4c7c>
   16bb4:	mov	r3, r8
   16bb8:	mov	r0, #7
   16bbc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16bc0:	mov	r5, #0
   16bc4:	mov	r0, r5
   16bc8:	add	sp, sp, #12
   16bcc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16bd0:	mov	r0, r4
   16bd4:	bl	11ba8 <free@plt>
   16bd8:	mov	r0, r5
   16bdc:	add	sp, sp, #12
   16be0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16be4:	mvn	r5, #11
   16be8:	b	16bc4 <ASN1_STRING_length@plt+0x4c50>
   16bec:	andeq	sp, r2, r4, rrx
   16bf0:	andeq	ip, r2, ip, ror #14
   16bf4:	push	{r4, r5, r6, r7, r8, lr}
   16bf8:	mov	r6, #0
   16bfc:	sub	sp, sp, #16
   16c00:	mov	r7, #0
   16c04:	add	r5, r0, #32
   16c08:	mov	r8, #0
   16c0c:	mov	r4, r0
   16c10:	mov	r1, r5
   16c14:	str	r8, [sp, #8]
   16c18:	mov	r3, #1
   16c1c:	ldr	r2, [pc, #120]	; 16c9c <ASN1_STRING_length@plt+0x4d28>
   16c20:	strd	r6, [sp]
   16c24:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   16c28:	str	r8, [sp, #8]
   16c2c:	mov	r1, r5
   16c30:	mov	r3, #1
   16c34:	ldr	r2, [pc, #100]	; 16ca0 <ASN1_STRING_length@plt+0x4d2c>
   16c38:	strd	r6, [sp]
   16c3c:	mov	r0, r4
   16c40:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   16c44:	ldr	r3, [r4]
   16c48:	ldr	r8, [pc, #84]	; 16ca4 <ASN1_STRING_length@plt+0x4d30>
   16c4c:	add	r3, r3, #4096	; 0x1000
   16c50:	ldr	r0, [r4, #32]
   16c54:	ldrb	r1, [r3, #8]
   16c58:	cmp	r1, #84	; 0x54
   16c5c:	movne	r1, r8
   16c60:	addeq	r1, r8, #1
   16c64:	bl	1aef4 <ASN1_STRING_length@plt+0x8f80>
   16c68:	cmp	r0, #0
   16c6c:	beq	16c78 <ASN1_STRING_length@plt+0x4d04>
   16c70:	add	sp, sp, #16
   16c74:	pop	{r4, r5, r6, r7, r8, pc}
   16c78:	str	r0, [sp, #8]
   16c7c:	strd	r6, [sp]
   16c80:	mov	r2, r8
   16c84:	mov	r1, r5
   16c88:	mov	r0, r4
   16c8c:	mov	r3, #1
   16c90:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   16c94:	add	sp, sp, #16
   16c98:	pop	{r4, r5, r6, r7, r8, pc}
   16c9c:	muleq	r2, r8, r5
   16ca0:	andeq	ip, r2, r8, lsr #11
   16ca4:	muleq	r2, r0, r5
   16ca8:	push	{r4, r5, r6, lr}
   16cac:	sub	sp, sp, #48	; 0x30
   16cb0:	ldr	r4, [pc, #136]	; 16d40 <ASN1_STRING_length@plt+0x4dcc>
   16cb4:	mov	r5, r1
   16cb8:	mov	r6, r0
   16cbc:	ldr	r3, [r4]
   16cc0:	mov	r0, r1
   16cc4:	ldr	r1, [pc, #120]	; 16d44 <ASN1_STRING_length@plt+0x4dd0>
   16cc8:	str	r3, [sp, #44]	; 0x2c
   16ccc:	bl	11f14 <strcmp@plt>
   16cd0:	cmp	r0, #0
   16cd4:	moveq	r0, #1
   16cd8:	bne	16cf4 <ASN1_STRING_length@plt+0x4d80>
   16cdc:	ldr	r2, [sp, #44]	; 0x2c
   16ce0:	ldr	r3, [r4]
   16ce4:	cmp	r2, r3
   16ce8:	bne	16d3c <ASN1_STRING_length@plt+0x4dc8>
   16cec:	add	sp, sp, #48	; 0x30
   16cf0:	pop	{r4, r5, r6, pc}
   16cf4:	mov	r1, r5
   16cf8:	add	r0, sp, #12
   16cfc:	mov	r2, #9
   16d00:	bl	11c38 <regcomp@plt>
   16d04:	subs	r3, r0, #0
   16d08:	movne	r0, #0
   16d0c:	bne	16cdc <ASN1_STRING_length@plt+0x4d68>
   16d10:	str	r3, [sp]
   16d14:	mov	r2, r3
   16d18:	ldr	r1, [r6]
   16d1c:	add	r0, sp, #12
   16d20:	bl	11ddc <regexec@plt>
   16d24:	mov	r5, r0
   16d28:	add	r0, sp, #12
   16d2c:	bl	11a04 <regfree@plt>
   16d30:	clz	r0, r5
   16d34:	lsr	r0, r0, #5
   16d38:	b	16cdc <ASN1_STRING_length@plt+0x4d68>
   16d3c:	bl	11d88 <__stack_chk_fail@plt>
   16d40:	andeq	pc, r3, r8, ror #25
   16d44:	ldrdeq	ip, [r2], -r4
   16d48:	ldr	r3, [pc, #408]	; 16ee8 <ASN1_STRING_length@plt+0x4f74>
   16d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d50:	sub	sp, sp, #1056	; 0x420
   16d54:	ldr	r9, [pc, #400]	; 16eec <ASN1_STRING_length@plt+0x4f78>
   16d58:	ldr	r3, [r3]
   16d5c:	sub	sp, sp, #12
   16d60:	ldr	r2, [r9]
   16d64:	cmp	r3, r1
   16d68:	add	r5, sp, #36	; 0x24
   16d6c:	mov	r3, #1024	; 0x400
   16d70:	mov	r4, #0
   16d74:	str	r1, [sp, #4]
   16d78:	str	r2, [sp, #1060]	; 0x424
   16d7c:	str	r5, [sp, #12]
   16d80:	str	r3, [sp, #16]
   16d84:	strb	r4, [sp, #20]
   16d88:	beq	16eb4 <ASN1_STRING_length@plt+0x4f40>
   16d8c:	mov	r8, r0
   16d90:	bl	15ba8 <ASN1_STRING_length@plt+0x3c34>
   16d94:	subs	r7, r0, #0
   16d98:	beq	16eb0 <ASN1_STRING_length@plt+0x4f3c>
   16d9c:	ldr	r3, [pc, #332]	; 16ef0 <ASN1_STRING_length@plt+0x4f7c>
   16da0:	add	r6, sp, #12
   16da4:	ldm	r3, {r0, r1}
   16da8:	str	r0, [r5]
   16dac:	strh	r1, [sp, #40]	; 0x28
   16db0:	lsr	r1, r1, #16
   16db4:	strb	r1, [sp, #42]	; 0x2a
   16db8:	ldr	r0, [r8, #32]
   16dbc:	add	r1, sp, #24
   16dc0:	bl	1b2a8 <ASN1_STRING_length@plt+0x9334>
   16dc4:	add	r2, sp, #8
   16dc8:	mov	r1, #0
   16dcc:	add	r0, sp, #24
   16dd0:	bl	1b2b8 <ASN1_STRING_length@plt+0x9344>
   16dd4:	subs	r4, r0, #0
   16dd8:	beq	16e74 <ASN1_STRING_length@plt+0x4f00>
   16ddc:	ldr	r4, [sp, #8]
   16de0:	ldr	r3, [r4]
   16de4:	cmp	r3, #0
   16de8:	beq	16dc4 <ASN1_STRING_length@plt+0x4e50>
   16dec:	add	fp, r4, #16
   16df0:	mov	r0, fp
   16df4:	bl	11c44 <strlen@plt>
   16df8:	add	r1, r0, #8
   16dfc:	mov	sl, r0
   16e00:	mov	r0, r6
   16e04:	bl	1b398 <ASN1_STRING_length@plt+0x9424>
   16e08:	cmp	r0, #0
   16e0c:	blt	16ebc <ASN1_STRING_length@plt+0x4f48>
   16e10:	ldr	r0, [sp, #12]
   16e14:	add	r2, sl, #1
   16e18:	mov	r1, fp
   16e1c:	add	r0, r0, #7
   16e20:	bl	11c5c <memcpy@plt>
   16e24:	ldr	r3, [r4]
   16e28:	mov	r1, r5
   16e2c:	add	r2, r3, #68	; 0x44
   16e30:	mov	r0, r7
   16e34:	ldrh	r3, [r3, #56]	; 0x38
   16e38:	bl	15bdc <ASN1_STRING_length@plt+0x3c68>
   16e3c:	cmp	r0, #0
   16e40:	beq	16dc4 <ASN1_STRING_length@plt+0x4e50>
   16e44:	ldr	r3, [r8]
   16e48:	add	r3, r3, #4096	; 0x1000
   16e4c:	ldrb	r3, [r3, #11]
   16e50:	cmp	r3, #0
   16e54:	beq	16dc4 <ASN1_STRING_length@plt+0x4e50>
   16e58:	ldr	r3, [r4]
   16e5c:	mov	r2, r5
   16e60:	add	r3, r3, #68	; 0x44
   16e64:	ldr	r1, [pc, #136]	; 16ef4 <ASN1_STRING_length@plt+0x4f80>
   16e68:	mov	r0, #4
   16e6c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16e70:	b	16dc4 <ASN1_STRING_length@plt+0x4e50>
   16e74:	mov	r0, r7
   16e78:	ldr	r1, [sp, #4]
   16e7c:	bl	1668c <ASN1_STRING_length@plt+0x4718>
   16e80:	mov	r0, r7
   16e84:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   16e88:	mov	r0, r6
   16e8c:	bl	1b410 <ASN1_STRING_length@plt+0x949c>
   16e90:	ldr	r2, [sp, #1060]	; 0x424
   16e94:	ldr	r3, [r9]
   16e98:	mov	r0, r4
   16e9c:	cmp	r2, r3
   16ea0:	bne	16ee4 <ASN1_STRING_length@plt+0x4f70>
   16ea4:	add	sp, sp, #1056	; 0x420
   16ea8:	add	sp, sp, #12
   16eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eb0:	mvn	r4, #11
   16eb4:	add	r6, sp, #12
   16eb8:	b	16e88 <ASN1_STRING_length@plt+0x4f14>
   16ebc:	mov	r0, r7
   16ec0:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   16ec4:	mov	r0, #12
   16ec8:	bl	119f8 <strerror@plt>
   16ecc:	ldr	r1, [pc, #36]	; 16ef8 <ASN1_STRING_length@plt+0x4f84>
   16ed0:	mvn	r4, #11
   16ed4:	mov	r2, r0
   16ed8:	mov	r0, #3
   16edc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16ee0:	b	16e88 <ASN1_STRING_length@plt+0x4f14>
   16ee4:	bl	11d88 <__stack_chk_fail@plt>
   16ee8:	andeq	r0, r4, r4, asr #32
   16eec:	andeq	pc, r3, r8, ror #25
   16ef0:	andeq	sp, r2, r0, lsr #15
   16ef4:	andeq	sp, r2, r8, lsr #15
   16ef8:	andeq	sp, r2, r8, asr #15
   16efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f00:	sub	sp, sp, #4096	; 0x1000
   16f04:	ldr	r3, [pc, #368]	; 1707c <ASN1_STRING_length@plt+0x5108>
   16f08:	sub	sp, sp, #20
   16f0c:	add	r2, sp, #4096	; 0x1000
   16f10:	ldr	r3, [r3]
   16f14:	add	r2, r2, #12
   16f18:	mov	r9, r0
   16f1c:	str	r1, [sp, #4]
   16f20:	str	r3, [r2]
   16f24:	bl	15ba8 <ASN1_STRING_length@plt+0x3c34>
   16f28:	subs	sl, r0, #0
   16f2c:	beq	17070 <ASN1_STRING_length@plt+0x50fc>
   16f30:	ldr	r3, [r9, #12]
   16f34:	cmp	r3, #0
   16f38:	beq	17018 <ASN1_STRING_length@plt+0x50a4>
   16f3c:	ldr	r7, [pc, #316]	; 17080 <ASN1_STRING_length@plt+0x510c>
   16f40:	mov	r8, #0
   16f44:	ldr	r2, [r9, #8]
   16f48:	ldr	r6, [r2, r8, lsl #2]
   16f4c:	ldr	r4, [r6, #16]
   16f50:	cmp	r4, #0
   16f54:	bne	16fa8 <ASN1_STRING_length@plt+0x5034>
   16f58:	b	1700c <ASN1_STRING_length@plt+0x5098>
   16f5c:	add	r5, r6, #68	; 0x44
   16f60:	mov	r2, r5
   16f64:	ldrh	r3, [r6, #56]	; 0x38
   16f68:	add	r1, sp, #12
   16f6c:	mov	r0, sl
   16f70:	bl	15bdc <ASN1_STRING_length@plt+0x3c68>
   16f74:	cmp	r0, #0
   16f78:	beq	16f90 <ASN1_STRING_length@plt+0x501c>
   16f7c:	ldr	r3, [r9]
   16f80:	add	r3, r3, #4096	; 0x1000
   16f84:	ldrb	r3, [r3, #11]
   16f88:	cmp	r3, #0
   16f8c:	bne	17058 <ASN1_STRING_length@plt+0x50e4>
   16f90:	ldr	r4, [r4]
   16f94:	ldr	r3, [r6, #16]
   16f98:	cmp	r4, r3
   16f9c:	beq	17008 <ASN1_STRING_length@plt+0x5094>
   16fa0:	cmp	r4, #0
   16fa4:	beq	17008 <ASN1_STRING_length@plt+0x5094>
   16fa8:	mov	r0, r4
   16fac:	bl	24cc0 <ASN1_STRING_length@plt+0x12d4c>
   16fb0:	mov	r5, r0
   16fb4:	mov	r0, r4
   16fb8:	bl	24cd0 <ASN1_STRING_length@plt+0x12d5c>
   16fbc:	mov	r1, r7
   16fc0:	mov	fp, r0
   16fc4:	mov	r0, r5
   16fc8:	bl	11f14 <strcmp@plt>
   16fcc:	subs	r2, r0, #0
   16fd0:	bne	16f90 <ASN1_STRING_length@plt+0x501c>
   16fd4:	add	r1, sp, #12
   16fd8:	mov	r0, fp
   16fdc:	bl	1b478 <ASN1_STRING_length@plt+0x9504>
   16fe0:	cmp	r0, #0
   16fe4:	bge	16f5c <ASN1_STRING_length@plt+0x4fe8>
   16fe8:	mov	r2, fp
   16fec:	ldr	r1, [pc, #144]	; 17084 <ASN1_STRING_length@plt+0x5110>
   16ff0:	mov	r0, #4
   16ff4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   16ff8:	ldr	r4, [r4]
   16ffc:	ldr	r3, [r6, #16]
   17000:	cmp	r4, r3
   17004:	bne	16fa0 <ASN1_STRING_length@plt+0x502c>
   17008:	ldr	r3, [r9, #12]
   1700c:	add	r8, r8, #1
   17010:	cmp	r8, r3
   17014:	bcc	16f44 <ASN1_STRING_length@plt+0x4fd0>
   17018:	ldr	r1, [sp, #4]
   1701c:	mov	r0, sl
   17020:	bl	1668c <ASN1_STRING_length@plt+0x4718>
   17024:	mov	r0, sl
   17028:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   1702c:	mov	r0, #0
   17030:	add	r3, sp, #4096	; 0x1000
   17034:	add	r3, r3, #12
   17038:	ldr	r2, [r3]
   1703c:	ldr	r3, [pc, #56]	; 1707c <ASN1_STRING_length@plt+0x5108>
   17040:	ldr	r3, [r3]
   17044:	cmp	r2, r3
   17048:	bne	17078 <ASN1_STRING_length@plt+0x5104>
   1704c:	add	sp, sp, #4096	; 0x1000
   17050:	add	sp, sp, #20
   17054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17058:	mov	r3, r5
   1705c:	add	r2, sp, #12
   17060:	ldr	r1, [pc, #32]	; 17088 <ASN1_STRING_length@plt+0x5114>
   17064:	mov	r0, #4
   17068:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1706c:	b	16f90 <ASN1_STRING_length@plt+0x501c>
   17070:	mvn	r0, #11
   17074:	b	17030 <ASN1_STRING_length@plt+0x50bc>
   17078:	bl	11d88 <__stack_chk_fail@plt>
   1707c:	andeq	pc, r3, r8, ror #25
   17080:	andeq	ip, r2, r4, lsr #2
   17084:	andeq	sp, r2, r0, ror #10
   17088:	andeq	sp, r2, ip, ror r5
   1708c:	ldr	r3, [pc, #20]	; 170a8 <ASN1_STRING_length@plt+0x5134>
   17090:	ldr	r3, [r3]
   17094:	cmp	r3, r1
   17098:	beq	170a0 <ASN1_STRING_length@plt+0x512c>
   1709c:	b	16efc <ASN1_STRING_length@plt+0x4f88>
   170a0:	mov	r0, #0
   170a4:	bx	lr
   170a8:	andeq	r0, r4, r4, asr #32
   170ac:	ldr	r3, [pc, #656]	; 17344 <ASN1_STRING_length@plt+0x53d0>
   170b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   170b4:	sub	sp, sp, #36	; 0x24
   170b8:	ldr	r2, [r3]
   170bc:	ldr	r3, [pc, #644]	; 17348 <ASN1_STRING_length@plt+0x53d4>
   170c0:	cmp	r2, r1
   170c4:	str	r1, [sp, #20]
   170c8:	ldr	r3, [r3]
   170cc:	moveq	r0, #0
   170d0:	str	r3, [sp, #28]
   170d4:	beq	17204 <ASN1_STRING_length@plt+0x5290>
   170d8:	mov	sl, r0
   170dc:	bl	15ba8 <ASN1_STRING_length@plt+0x3c34>
   170e0:	subs	r3, r0, #0
   170e4:	str	r3, [sp, #16]
   170e8:	beq	17338 <ASN1_STRING_length@plt+0x53c4>
   170ec:	ldr	r3, [sl, #12]
   170f0:	cmp	r3, #0
   170f4:	beq	171e8 <ASN1_STRING_length@plt+0x5274>
   170f8:	mov	r3, #0
   170fc:	str	r3, [sp]
   17100:	ldr	r3, [sl, #8]
   17104:	ldr	r2, [sp]
   17108:	add	r1, sp, #24
   1710c:	ldr	r3, [r3, r2, lsl #2]
   17110:	str	r3, [sp, #8]
   17114:	ldr	r4, [r3, #8]
   17118:	ldr	r0, [sp, #8]
   1711c:	cmp	r4, #0
   17120:	ldreq	r4, [r3, #4]
   17124:	bl	167c8 <ASN1_STRING_length@plt+0x4854>
   17128:	subs	r3, r0, #0
   1712c:	str	r3, [sp, #4]
   17130:	bne	17220 <ASN1_STRING_length@plt+0x52ac>
   17134:	ldr	r3, [sp, #24]
   17138:	cmp	r3, #0
   1713c:	bne	17310 <ASN1_STRING_length@plt+0x539c>
   17140:	mov	r0, r4
   17144:	bl	11c44 <strlen@plt>
   17148:	add	r7, r0, #1
   1714c:	add	r0, r7, #1
   17150:	bl	11d64 <malloc@plt>
   17154:	subs	r6, r0, #0
   17158:	beq	172f8 <ASN1_STRING_length@plt+0x5384>
   1715c:	mov	r0, r4
   17160:	bl	11c44 <strlen@plt>
   17164:	mov	r1, r4
   17168:	mov	r5, r0
   1716c:	mov	r2, r0
   17170:	add	r4, r5, #1
   17174:	mov	r0, r6
   17178:	bl	11c5c <memcpy@plt>
   1717c:	mov	r3, #58	; 0x3a
   17180:	strb	r3, [r6, r5]
   17184:	mov	r3, #0
   17188:	strb	r3, [r6, r4]
   1718c:	ldr	r3, [sp, #8]
   17190:	mov	r2, r6
   17194:	add	r1, r3, #68	; 0x44
   17198:	ldr	r0, [sp, #16]
   1719c:	ldrh	r3, [r3, #56]	; 0x38
   171a0:	bl	15bdc <ASN1_STRING_length@plt+0x3c68>
   171a4:	cmp	r0, #0
   171a8:	beq	171c0 <ASN1_STRING_length@plt+0x524c>
   171ac:	ldr	r3, [sl]
   171b0:	add	r3, r3, #4096	; 0x1000
   171b4:	ldrb	r3, [r3, #11]
   171b8:	cmp	r3, #0
   171bc:	bne	17324 <ASN1_STRING_length@plt+0x53b0>
   171c0:	mov	r0, r6
   171c4:	bl	11ba8 <free@plt>
   171c8:	ldr	r0, [sp, #4]
   171cc:	bl	11ba8 <free@plt>
   171d0:	ldr	r2, [sp]
   171d4:	ldr	r3, [sl, #12]
   171d8:	add	r2, r2, #1
   171dc:	cmp	r2, r3
   171e0:	str	r2, [sp]
   171e4:	bcc	17100 <ASN1_STRING_length@plt+0x518c>
   171e8:	ldr	r4, [sp, #16]
   171ec:	ldr	r1, [sp, #20]
   171f0:	mov	r0, r4
   171f4:	bl	1668c <ASN1_STRING_length@plt+0x4718>
   171f8:	mov	r0, r4
   171fc:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   17200:	mov	r0, #0
   17204:	ldr	r3, [pc, #316]	; 17348 <ASN1_STRING_length@plt+0x53d4>
   17208:	ldr	r2, [sp, #28]
   1720c:	ldr	r3, [r3]
   17210:	cmp	r2, r3
   17214:	bne	17340 <ASN1_STRING_length@plt+0x53cc>
   17218:	add	sp, sp, #36	; 0x24
   1721c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17220:	mov	r0, r4
   17224:	bl	11c44 <strlen@plt>
   17228:	ldr	r8, [sp, #24]
   1722c:	cmp	r8, #0
   17230:	add	r3, r0, #1
   17234:	mov	fp, r0
   17238:	str	r3, [sp, #12]
   1723c:	mov	r7, r3
   17240:	beq	1714c <ASN1_STRING_length@plt+0x51d8>
   17244:	ldr	r3, [sp, #4]
   17248:	lsl	r8, r8, #2
   1724c:	sub	r9, r8, #4
   17250:	sub	r5, r3, #4
   17254:	add	r6, r3, r9
   17258:	mov	r8, r5
   1725c:	ldr	r3, [r8, #4]!
   17260:	ldr	r0, [r3, #8]
   17264:	cmp	r0, #0
   17268:	ldreq	r0, [r3, #4]
   1726c:	bl	11c44 <strlen@plt>
   17270:	cmp	r6, r8
   17274:	add	r0, r0, #1
   17278:	add	r7, r7, r0
   1727c:	bne	1725c <ASN1_STRING_length@plt+0x52e8>
   17280:	add	r0, r7, #1
   17284:	bl	11d64 <malloc@plt>
   17288:	subs	r6, r0, #0
   1728c:	beq	172f8 <ASN1_STRING_length@plt+0x5384>
   17290:	mov	r1, r4
   17294:	mov	r2, fp
   17298:	bl	11c5c <memcpy@plt>
   1729c:	ldr	r2, [sp, #4]
   172a0:	ldr	r4, [sp, #12]
   172a4:	add	r8, r2, r9
   172a8:	mov	r7, #32
   172ac:	mov	r3, #58	; 0x3a
   172b0:	strb	r3, [r6, fp]
   172b4:	ldr	r3, [r5, #4]!
   172b8:	strb	r7, [r6, r4]
   172bc:	add	r4, r4, #1
   172c0:	ldr	r9, [r3, #8]
   172c4:	cmp	r9, #0
   172c8:	ldreq	r9, [r3, #4]
   172cc:	mov	r0, r9
   172d0:	bl	11c44 <strlen@plt>
   172d4:	mov	r1, r9
   172d8:	mov	fp, r0
   172dc:	mov	r2, r0
   172e0:	add	r0, r6, r4
   172e4:	bl	11c5c <memcpy@plt>
   172e8:	cmp	r8, r5
   172ec:	add	r4, r4, fp
   172f0:	bne	172b4 <ASN1_STRING_length@plt+0x5340>
   172f4:	b	17184 <ASN1_STRING_length@plt+0x5210>
   172f8:	ldr	r0, [sp, #4]
   172fc:	bl	11ba8 <free@plt>
   17300:	ldr	r1, [pc, #68]	; 1734c <ASN1_STRING_length@plt+0x53d8>
   17304:	mov	r0, #3
   17308:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1730c:	b	171d0 <ASN1_STRING_length@plt+0x525c>
   17310:	mov	r2, r4
   17314:	ldr	r1, [pc, #52]	; 17350 <ASN1_STRING_length@plt+0x53dc>
   17318:	mov	r0, #3
   1731c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17320:	b	171d0 <ASN1_STRING_length@plt+0x525c>
   17324:	mov	r2, r6
   17328:	ldr	r1, [pc, #36]	; 17354 <ASN1_STRING_length@plt+0x53e0>
   1732c:	mov	r0, #4
   17330:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17334:	b	171c0 <ASN1_STRING_length@plt+0x524c>
   17338:	mvn	r0, #11
   1733c:	b	17204 <ASN1_STRING_length@plt+0x5290>
   17340:	bl	11d88 <__stack_chk_fail@plt>
   17344:	andeq	r0, r4, r4, asr #32
   17348:	andeq	pc, r3, r8, ror #25
   1734c:	andeq	sp, r2, r4, lsl #12
   17350:	ldrdeq	sp, [r2], -r4
   17354:	andeq	sp, r2, r8, lsr #12
   17358:	push	{r0, r1, r2, r3}
   1735c:	ldr	r3, [pc, #104]	; 173cc <ASN1_STRING_length@plt+0x5458>
   17360:	push	{r4, r5, lr}
   17364:	sub	sp, sp, #12
   17368:	ldr	r4, [pc, #96]	; 173d0 <ASN1_STRING_length@plt+0x545c>
   1736c:	ldr	r2, [r3]
   17370:	ldr	r3, [r4]
   17374:	cmp	r2, #4
   17378:	str	r3, [sp, #4]
   1737c:	ble	173a8 <ASN1_STRING_length@plt+0x5434>
   17380:	ldr	r5, [pc, #76]	; 173d4 <ASN1_STRING_length@plt+0x5460>
   17384:	add	ip, sp, #28
   17388:	mov	r3, ip
   1738c:	ldr	r0, [r5]
   17390:	ldr	r2, [pc, #64]	; 173d8 <ASN1_STRING_length@plt+0x5464>
   17394:	mov	r1, #1
   17398:	str	ip, [sp]
   1739c:	bl	11cb0 <__vfprintf_chk@plt>
   173a0:	ldr	r0, [r5]
   173a4:	bl	11c2c <fflush@plt>
   173a8:	ldr	r2, [sp, #4]
   173ac:	ldr	r3, [r4]
   173b0:	cmp	r2, r3
   173b4:	bne	173c8 <ASN1_STRING_length@plt+0x5454>
   173b8:	add	sp, sp, #12
   173bc:	pop	{r4, r5, lr}
   173c0:	add	sp, sp, #16
   173c4:	bx	lr
   173c8:	bl	11d88 <__stack_chk_fail@plt>
   173cc:	andeq	r0, r4, r0, lsr #32
   173d0:	andeq	pc, r3, r8, ror #25
   173d4:	andeq	r0, r4, r4, asr #32
   173d8:	andeq	ip, r2, r0, ror r2
   173dc:	push	{r4, r5, r6, r7, r8, lr}
   173e0:	mov	r4, r1
   173e4:	mov	r1, #0
   173e8:	mov	r5, r0
   173ec:	bl	11ca4 <open64@plt>
   173f0:	subs	r6, r0, #0
   173f4:	blt	17464 <ASN1_STRING_length@plt+0x54f0>
   173f8:	mov	r2, #0
   173fc:	mov	r1, r4
   17400:	bl	11bf0 <openat64@plt>
   17404:	subs	r7, r0, #0
   17408:	blt	1742c <ASN1_STRING_length@plt+0x54b8>
   1740c:	ldr	r1, [pc, #104]	; 1747c <ASN1_STRING_length@plt+0x5508>
   17410:	bl	11ce0 <fdopen@plt>
   17414:	subs	r5, r0, #0
   17418:	beq	17448 <ASN1_STRING_length@plt+0x54d4>
   1741c:	mov	r0, r6
   17420:	bl	11d04 <close@plt>
   17424:	mov	r0, r5
   17428:	pop	{r4, r5, r6, r7, r8, pc}
   1742c:	mov	r3, r5
   17430:	mov	r2, r4
   17434:	ldr	r1, [pc, #68]	; 17480 <ASN1_STRING_length@plt+0x550c>
   17438:	mov	r0, #4
   1743c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17440:	mov	r5, #0
   17444:	b	1741c <ASN1_STRING_length@plt+0x54a8>
   17448:	mov	r2, r4
   1744c:	ldr	r1, [pc, #48]	; 17484 <ASN1_STRING_length@plt+0x5510>
   17450:	mov	r0, #4
   17454:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17458:	mov	r0, r7
   1745c:	bl	11d04 <close@plt>
   17460:	b	1741c <ASN1_STRING_length@plt+0x54a8>
   17464:	mov	r2, r5
   17468:	ldr	r1, [pc, #24]	; 17488 <ASN1_STRING_length@plt+0x5514>
   1746c:	mov	r0, #4
   17470:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17474:	mov	r5, #0
   17478:	b	17424 <ASN1_STRING_length@plt+0x54b0>
   1747c:	andeq	sp, r2, ip, lsr r0
   17480:	andeq	ip, r2, ip, lsr #15
   17484:	andeq	ip, r2, ip, asr #15
   17488:	andeq	ip, r2, r8, lsl #15
   1748c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17490:	sub	sp, sp, #8192	; 0x2000
   17494:	ldr	r7, [pc, #276]	; 175b0 <ASN1_STRING_length@plt+0x563c>
   17498:	sub	sp, sp, #8
   1749c:	ldr	r0, [r0]
   174a0:	add	r2, sp, #8192	; 0x2000
   174a4:	ldr	r3, [r7]
   174a8:	add	r2, r2, #4
   174ac:	mov	r9, r1
   174b0:	add	r0, r0, #4
   174b4:	ldr	r1, [pc, #248]	; 175b4 <ASN1_STRING_length@plt+0x5640>
   174b8:	str	r3, [r2]
   174bc:	bl	173dc <ASN1_STRING_length@plt+0x5468>
   174c0:	subs	r4, r0, #0
   174c4:	moveq	r0, r4
   174c8:	beq	17564 <ASN1_STRING_length@plt+0x55f0>
   174cc:	bl	15ba8 <ASN1_STRING_length@plt+0x3c34>
   174d0:	subs	r5, r0, #0
   174d4:	beq	17558 <ASN1_STRING_length@plt+0x55e4>
   174d8:	ldr	r6, [pc, #216]	; 175b8 <ASN1_STRING_length@plt+0x5644>
   174dc:	ldr	r8, [pc, #216]	; 175bc <ASN1_STRING_length@plt+0x5648>
   174e0:	mov	r2, r4
   174e4:	mov	r1, #4096	; 0x1000
   174e8:	add	r0, sp, #4
   174ec:	bl	11a94 <fgets@plt>
   174f0:	subs	sl, r0, #0
   174f4:	beq	17588 <ASN1_STRING_length@plt+0x5614>
   174f8:	bl	11d34 <__ctype_b_loc@plt>
   174fc:	ldrb	r3, [sp, #4]
   17500:	lsl	r3, r3, #1
   17504:	ldr	r2, [r0]
   17508:	ldrh	r3, [r2, r3]
   1750c:	tst	r3, #1024	; 0x400
   17510:	beq	17544 <ASN1_STRING_length@plt+0x55d0>
   17514:	add	r1, sp, #4096	; 0x1000
   17518:	add	r1, r1, #4
   1751c:	mov	r2, #0
   17520:	add	r0, sp, #4
   17524:	bl	1b638 <ASN1_STRING_length@plt+0x96c4>
   17528:	add	r1, sp, #4096	; 0x1000
   1752c:	add	r1, r1, #4
   17530:	mov	r3, #0
   17534:	mov	r2, r6
   17538:	mov	r0, r5
   1753c:	bl	15bdc <ASN1_STRING_length@plt+0x3c68>
   17540:	b	174e0 <ASN1_STRING_length@plt+0x556c>
   17544:	add	r2, sp, #4
   17548:	mov	r1, r8
   1754c:	mov	r0, #3
   17550:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17554:	b	174e0 <ASN1_STRING_length@plt+0x556c>
   17558:	mov	r0, r4
   1755c:	bl	11a88 <fclose@plt>
   17560:	mvn	r0, #11
   17564:	add	r3, sp, #8192	; 0x2000
   17568:	add	r3, r3, #4
   1756c:	ldr	r2, [r3]
   17570:	ldr	r3, [r7]
   17574:	cmp	r2, r3
   17578:	bne	175ac <ASN1_STRING_length@plt+0x5638>
   1757c:	add	sp, sp, #8192	; 0x2000
   17580:	add	sp, sp, #8
   17584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17588:	mov	r1, r9
   1758c:	mov	r0, r5
   17590:	bl	1668c <ASN1_STRING_length@plt+0x4718>
   17594:	mov	r0, r5
   17598:	bl	153f8 <ASN1_STRING_length@plt+0x3484>
   1759c:	mov	r0, r4
   175a0:	bl	11a88 <fclose@plt>
   175a4:	mov	r0, sl
   175a8:	b	17564 <ASN1_STRING_length@plt+0x55f0>
   175ac:	bl	11d88 <__stack_chk_fail@plt>
   175b0:	andeq	pc, r3, r8, ror #25
   175b4:	muleq	r2, ip, r5
   175b8:	andeq	sp, r2, r4, rrx
   175bc:	andeq	sp, r2, ip, lsr #11
   175c0:	ldr	r3, [pc, #20]	; 175dc <ASN1_STRING_length@plt+0x5668>
   175c4:	ldr	r3, [r3]
   175c8:	cmp	r3, r1
   175cc:	beq	175d4 <ASN1_STRING_length@plt+0x5660>
   175d0:	b	1748c <ASN1_STRING_length@plt+0x5518>
   175d4:	mov	r0, #0
   175d8:	bx	lr
   175dc:	andeq	r0, r4, r4, asr #32
   175e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175e4:	mov	r6, r3
   175e8:	sub	sp, sp, #4160	; 0x1040
   175ec:	ldr	r3, [pc, #1324]	; 17b20 <ASN1_STRING_length@plt+0x5bac>
   175f0:	sub	sp, sp, #20
   175f4:	mov	r4, r1
   175f8:	mov	r1, r2
   175fc:	add	r2, sp, #4160	; 0x1040
   17600:	ldr	r3, [r3]
   17604:	add	r2, r2, #12
   17608:	mov	sl, r0
   1760c:	add	r0, r6, r4
   17610:	str	r3, [r2]
   17614:	bl	1b674 <ASN1_STRING_length@plt+0x9700>
   17618:	cmp	r0, #0
   1761c:	bne	17650 <ASN1_STRING_length@plt+0x56dc>
   17620:	mov	r4, #0
   17624:	add	r3, sp, #4160	; 0x1040
   17628:	add	r3, r3, #12
   1762c:	ldr	r2, [r3]
   17630:	ldr	r3, [pc, #1256]	; 17b20 <ASN1_STRING_length@plt+0x5bac>
   17634:	mov	r0, r4
   17638:	ldr	r3, [r3]
   1763c:	cmp	r2, r3
   17640:	bne	17b1c <ASN1_STRING_length@plt+0x5ba8>
   17644:	add	sp, sp, #4160	; 0x1040
   17648:	add	sp, sp, #20
   1764c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17650:	add	r1, sp, #76	; 0x4c
   17654:	add	r2, sp, #72	; 0x48
   17658:	mov	r0, r6
   1765c:	bl	1b638 <ASN1_STRING_length@plt+0x96c4>
   17660:	cmp	r0, #0
   17664:	beq	17b04 <ASN1_STRING_length@plt+0x5b90>
   17668:	ldr	r2, [sl]
   1766c:	add	r3, sp, #76	; 0x4c
   17670:	add	r2, r2, #4096	; 0x1000
   17674:	ldr	r1, [pc, #1192]	; 17b24 <ASN1_STRING_length@plt+0x5bb0>
   17678:	ldr	r2, [r2, #4]
   1767c:	mov	r0, #7
   17680:	add	r2, r2, #1
   17684:	add	r2, r6, r2
   17688:	str	r2, [sp, #40]	; 0x28
   1768c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17690:	add	r1, sp, #76	; 0x4c
   17694:	ldr	r0, [sl, #28]
   17698:	bl	1aef4 <ASN1_STRING_length@plt+0x8f80>
   1769c:	subs	fp, r0, #0
   176a0:	beq	17824 <ASN1_STRING_length@plt+0x58b0>
   176a4:	ldr	r5, [sl]
   176a8:	ldr	lr, [fp, #40]	; 0x28
   176ac:	ldr	r0, [sp, #72]	; 0x48
   176b0:	ldr	ip, [fp, #44]	; 0x2c
   176b4:	ldr	r2, [fp, #4]
   176b8:	add	r7, r5, #4096	; 0x1000
   176bc:	mov	r3, r6
   176c0:	add	r8, r4, r0
   176c4:	add	ip, lr, ip
   176c8:	ldr	r1, [pc, #1112]	; 17b28 <ASN1_STRING_length@plt+0x5bb4>
   176cc:	mov	r0, #7
   176d0:	str	ip, [sp, #44]	; 0x2c
   176d4:	str	r2, [sp, #36]	; 0x24
   176d8:	str	r7, [sp, #32]
   176dc:	str	r8, [sp, #48]	; 0x30
   176e0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   176e4:	ldr	r4, [r7, #4]
   176e8:	add	r5, r5, #4
   176ec:	mov	r2, r4
   176f0:	mov	r1, r5
   176f4:	mov	r0, r6
   176f8:	bl	11ea8 <strncmp@plt>
   176fc:	mov	r1, r5
   17700:	ldr	r5, [sp, #36]	; 0x24
   17704:	mov	r2, r4
   17708:	cmp	r0, #0
   1770c:	addeq	r3, r4, #1
   17710:	addeq	r3, r6, r3
   17714:	movne	r3, #0
   17718:	mvneq	r9, r4
   1771c:	mov	r0, r5
   17720:	streq	r3, [sp, #8]
   17724:	strne	r3, [sp, #8]
   17728:	movne	r9, r3
   1772c:	addeq	r9, r9, r8
   17730:	bl	11ea8 <strncmp@plt>
   17734:	cmp	r0, #0
   17738:	addeq	r3, r4, #1
   1773c:	addeq	r3, r5, r3
   17740:	streq	r3, [sp, #12]
   17744:	ldreq	r3, [sp, #44]	; 0x2c
   17748:	mvneq	r4, r4
   1774c:	addeq	r3, r4, r3
   17750:	movne	r3, #0
   17754:	strne	r3, [sp, #12]
   17758:	str	r3, [sp, #24]
   1775c:	ldr	r3, [sp, #32]
   17760:	ldr	r4, [r3, #12]
   17764:	cmp	r4, #0
   17768:	beq	178ac <ASN1_STRING_length@plt+0x5938>
   1776c:	ldr	r7, [pc, #952]	; 17b2c <ASN1_STRING_length@plt+0x5bb8>
   17770:	ldr	r8, [sp, #24]
   17774:	str	sl, [sp, #16]
   17778:	b	17790 <ASN1_STRING_length@plt+0x581c>
   1777c:	cmp	sl, r8
   17780:	beq	17878 <ASN1_STRING_length@plt+0x5904>
   17784:	ldr	r4, [r4]
   17788:	cmp	r4, #0
   1778c:	beq	178a8 <ASN1_STRING_length@plt+0x5934>
   17790:	add	r5, r4, #8
   17794:	mov	r2, r5
   17798:	mov	r1, r7
   1779c:	mov	r0, #7
   177a0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   177a4:	ldr	sl, [r4, #4]
   177a8:	cmp	sl, r9
   177ac:	bne	1777c <ASN1_STRING_length@plt+0x5808>
   177b0:	mov	r2, r9
   177b4:	ldr	r1, [sp, #8]
   177b8:	mov	r0, r5
   177bc:	bl	11a40 <memcmp@plt>
   177c0:	cmp	r0, #0
   177c4:	bne	1777c <ASN1_STRING_length@plt+0x5808>
   177c8:	ldr	sl, [sp, #16]
   177cc:	ldr	r3, [sp, #40]	; 0x28
   177d0:	ldr	r2, [fp, #8]
   177d4:	ldr	r1, [pc, #852]	; 17b30 <ASN1_STRING_length@plt+0x5bbc>
   177d8:	mov	r0, #7
   177dc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   177e0:	ldr	r2, [fp, #4]
   177e4:	ldr	r3, [fp]
   177e8:	ldr	r1, [pc, #836]	; 17b34 <ASN1_STRING_length@plt+0x5bc0>
   177ec:	str	r2, [sp]
   177f0:	mov	r0, #7
   177f4:	mov	r2, fp
   177f8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   177fc:	ldr	r1, [fp, #12]
   17800:	cmp	r1, #0
   17804:	beq	17810 <ASN1_STRING_length@plt+0x589c>
   17808:	ldr	r0, [sl, #24]
   1780c:	bl	1b05c <ASN1_STRING_length@plt+0x90e8>
   17810:	add	r1, fp, #68	; 0x44
   17814:	ldr	r0, [sl, #28]
   17818:	bl	1b05c <ASN1_STRING_length@plt+0x90e8>
   1781c:	mov	r0, fp
   17820:	bl	15a28 <ASN1_STRING_length@plt+0x3ab4>
   17824:	add	r2, sp, #68	; 0x44
   17828:	mov	r1, r6
   1782c:	ldr	r0, [sl, #4]
   17830:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   17834:	subs	r4, r0, #0
   17838:	blt	17ab0 <ASN1_STRING_length@plt+0x5b3c>
   1783c:	mov	r0, sl
   17840:	ldr	r1, [sp, #68]	; 0x44
   17844:	bl	15db0 <ASN1_STRING_length@plt+0x3e3c>
   17848:	subs	r4, r0, #0
   1784c:	bge	17620 <ASN1_STRING_length@plt+0x56ac>
   17850:	rsb	r0, r4, #0
   17854:	bl	119f8 <strerror@plt>
   17858:	mov	r2, r6
   1785c:	ldr	r1, [pc, #724]	; 17b38 <ASN1_STRING_length@plt+0x5bc4>
   17860:	mov	r3, r0
   17864:	mov	r0, #3
   17868:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1786c:	ldr	r0, [sp, #68]	; 0x44
   17870:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   17874:	b	17624 <ASN1_STRING_length@plt+0x56b0>
   17878:	mov	r0, r5
   1787c:	mov	r2, r8
   17880:	ldr	r1, [sp, #12]
   17884:	bl	11a40 <memcmp@plt>
   17888:	cmp	r0, #0
   1788c:	bne	17784 <ASN1_STRING_length@plt+0x5810>
   17890:	ldr	r3, [fp, #4]
   17894:	mov	r2, r6
   17898:	ldr	r1, [pc, #668]	; 17b3c <ASN1_STRING_length@plt+0x5bc8>
   1789c:	mov	r0, #7
   178a0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   178a4:	b	17620 <ASN1_STRING_length@plt+0x56ac>
   178a8:	ldr	sl, [sp, #16]
   178ac:	ldr	r3, [sp, #32]
   178b0:	ldr	r4, [r3, #16]
   178b4:	cmp	r4, #0
   178b8:	beq	17ae8 <ASN1_STRING_length@plt+0x5b74>
   178bc:	mvn	r3, #0
   178c0:	str	fp, [sp, #52]	; 0x34
   178c4:	str	r3, [sp, #28]
   178c8:	ldr	fp, [sp, #36]	; 0x24
   178cc:	str	r3, [sp, #20]
   178d0:	str	r3, [sp, #16]
   178d4:	mov	r5, #0
   178d8:	str	sl, [sp, #36]	; 0x24
   178dc:	b	17978 <ASN1_STRING_length@plt+0x5a04>
   178e0:	cmp	r3, #2
   178e4:	addne	r2, r4, #12
   178e8:	ldreq	r2, [pc, #592]	; 17b40 <ASN1_STRING_length@plt+0x5bcc>
   178ec:	ldr	r1, [pc, #592]	; 17b44 <ASN1_STRING_length@plt+0x5bd0>
   178f0:	mov	r0, #7
   178f4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   178f8:	ldr	r3, [r4, #4]
   178fc:	cmp	r3, #1
   17900:	streq	r5, [sp, #28]
   17904:	beq	17968 <ASN1_STRING_length@plt+0x59f4>
   17908:	cmp	r3, #2
   1790c:	beq	179e4 <ASN1_STRING_length@plt+0x5a70>
   17910:	ldr	r7, [r4, #8]
   17914:	cmp	r9, r7
   17918:	bls	1792c <ASN1_STRING_length@plt+0x59b8>
   1791c:	ldr	r3, [sp, #8]
   17920:	ldrb	r3, [r3, r7]
   17924:	cmp	r3, #47	; 0x2f
   17928:	beq	17a90 <ASN1_STRING_length@plt+0x5b1c>
   1792c:	ldr	r3, [sp, #24]
   17930:	cmp	r3, r7
   17934:	bls	17968 <ASN1_STRING_length@plt+0x59f4>
   17938:	ldr	r3, [sp, #12]
   1793c:	ldrb	r3, [r3, r7]
   17940:	cmp	r3, #47	; 0x2f
   17944:	bne	17968 <ASN1_STRING_length@plt+0x59f4>
   17948:	mov	r2, r7
   1794c:	ldr	r1, [sp, #12]
   17950:	add	r0, r4, #12
   17954:	bl	11a40 <memcmp@plt>
   17958:	ldr	r3, [sp, #16]
   1795c:	cmp	r0, #0
   17960:	moveq	r3, r5
   17964:	str	r3, [sp, #16]
   17968:	ldr	r4, [r4]
   1796c:	add	r5, r5, #1
   17970:	cmp	r4, #0
   17974:	beq	1798c <ASN1_STRING_length@plt+0x5a18>
   17978:	ldr	r3, [r4, #4]
   1797c:	cmp	r3, #1
   17980:	bne	178e0 <ASN1_STRING_length@plt+0x596c>
   17984:	ldr	r2, [pc, #444]	; 17b48 <ASN1_STRING_length@plt+0x5bd4>
   17988:	b	178ec <ASN1_STRING_length@plt+0x5978>
   1798c:	ldr	r3, [sp, #20]
   17990:	ldr	fp, [sp, #52]	; 0x34
   17994:	cmn	r3, #1
   17998:	ldr	sl, [sp, #36]	; 0x24
   1799c:	beq	17ad0 <ASN1_STRING_length@plt+0x5b5c>
   179a0:	ldr	r2, [sp, #16]
   179a4:	ldr	r1, [sp, #28]
   179a8:	cmn	r2, #1
   179ac:	mov	r3, r2
   179b0:	moveq	r3, r1
   179b4:	str	r3, [sp, #16]
   179b8:	ldr	r4, [sp, #20]
   179bc:	ldr	r5, [sp, #16]
   179c0:	str	r4, [sp]
   179c4:	ldr	r2, [sp, #28]
   179c8:	mov	r3, r5
   179cc:	ldr	r1, [pc, #376]	; 17b4c <ASN1_STRING_length@plt+0x5bd8>
   179d0:	mov	r0, #7
   179d4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   179d8:	cmp	r4, r5
   179dc:	bgt	177cc <ASN1_STRING_length@plt+0x5858>
   179e0:	b	17890 <ASN1_STRING_length@plt+0x591c>
   179e4:	ldr	r3, [sp, #32]
   179e8:	ldr	r8, [r3, #20]
   179ec:	cmp	r8, #0
   179f0:	beq	17968 <ASN1_STRING_length@plt+0x59f4>
   179f4:	str	r4, [sp, #56]	; 0x38
   179f8:	ldr	sl, [sp, #44]	; 0x2c
   179fc:	ldr	r4, [sp, #48]	; 0x30
   17a00:	str	r9, [sp, #60]	; 0x3c
   17a04:	ldr	r7, [r8, #4]
   17a08:	add	r9, r8, #8
   17a0c:	cmp	r4, r7
   17a10:	bls	17a40 <ASN1_STRING_length@plt+0x5acc>
   17a14:	ldrb	r2, [r6, r7]
   17a18:	cmp	r2, #47	; 0x2f
   17a1c:	bne	17a40 <ASN1_STRING_length@plt+0x5acc>
   17a20:	mov	r2, r7
   17a24:	mov	r1, r9
   17a28:	mov	r0, r6
   17a2c:	bl	11a40 <memcmp@plt>
   17a30:	ldr	r3, [sp, #20]
   17a34:	cmp	r0, #0
   17a38:	moveq	r3, r5
   17a3c:	str	r3, [sp, #20]
   17a40:	cmp	sl, r7
   17a44:	bls	17a74 <ASN1_STRING_length@plt+0x5b00>
   17a48:	ldrb	r2, [fp, r7]
   17a4c:	cmp	r2, #47	; 0x2f
   17a50:	bne	17a74 <ASN1_STRING_length@plt+0x5b00>
   17a54:	mov	r2, r7
   17a58:	mov	r1, r9
   17a5c:	mov	r0, fp
   17a60:	bl	11a40 <memcmp@plt>
   17a64:	ldr	r3, [sp, #16]
   17a68:	cmp	r0, #0
   17a6c:	moveq	r3, r5
   17a70:	str	r3, [sp, #16]
   17a74:	ldr	r8, [r8]
   17a78:	add	r5, r5, #1
   17a7c:	cmp	r8, #0
   17a80:	bne	17a04 <ASN1_STRING_length@plt+0x5a90>
   17a84:	ldr	r4, [sp, #56]	; 0x38
   17a88:	ldr	r9, [sp, #60]	; 0x3c
   17a8c:	b	17968 <ASN1_STRING_length@plt+0x59f4>
   17a90:	mov	r2, r7
   17a94:	ldr	r1, [sp, #8]
   17a98:	add	r0, r4, #12
   17a9c:	bl	11a40 <memcmp@plt>
   17aa0:	cmp	r0, #0
   17aa4:	streq	r5, [sp, #20]
   17aa8:	beq	17968 <ASN1_STRING_length@plt+0x59f4>
   17aac:	b	1792c <ASN1_STRING_length@plt+0x59b8>
   17ab0:	rsb	r0, r4, #0
   17ab4:	bl	119f8 <strerror@plt>
   17ab8:	mov	r2, r6
   17abc:	ldr	r1, [pc, #140]	; 17b50 <ASN1_STRING_length@plt+0x5bdc>
   17ac0:	mov	r3, r0
   17ac4:	mov	r0, #3
   17ac8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17acc:	b	17624 <ASN1_STRING_length@plt+0x56b0>
   17ad0:	ldr	r3, [sp, #16]
   17ad4:	cmn	r3, #1
   17ad8:	ldr	r3, [sp, #28]
   17adc:	strne	r3, [sp, #20]
   17ae0:	bne	179b8 <ASN1_STRING_length@plt+0x5a44>
   17ae4:	b	17aec <ASN1_STRING_length@plt+0x5b78>
   17ae8:	mvn	r3, #0
   17aec:	str	r3, [sp]
   17af0:	mov	r2, r3
   17af4:	ldr	r1, [pc, #80]	; 17b4c <ASN1_STRING_length@plt+0x5bd8>
   17af8:	mov	r0, #7
   17afc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17b00:	b	17890 <ASN1_STRING_length@plt+0x591c>
   17b04:	mov	r2, r6
   17b08:	ldr	r1, [pc, #68]	; 17b54 <ASN1_STRING_length@plt+0x5be0>
   17b0c:	mov	r0, #3
   17b10:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17b14:	mvn	r4, #21
   17b18:	b	17624 <ASN1_STRING_length@plt+0x56b0>
   17b1c:	bl	11d88 <__stack_chk_fail@plt>
   17b20:	andeq	pc, r3, r8, ror #25
   17b24:	andeq	ip, r2, ip, lsr r6
   17b28:	andeq	ip, r2, ip, asr #12
   17b2c:	andeq	ip, r2, r0, ror r6
   17b30:	andeq	ip, r2, r0, ror #13
   17b34:	andeq	ip, r2, r0, lsl r7
   17b38:	andeq	ip, r2, ip, asr #14
   17b3c:			; <UNDEFINED> instruction: 0x0002c6b8
   17b40:	andeq	ip, r2, r0, lsl #12
   17b44:	andeq	ip, r2, r0, lsl #13
   17b48:	andeq	ip, r2, ip, lsl #12
   17b4c:	andeq	ip, r2, ip, lsl #13
   17b50:	andeq	ip, r2, ip, lsr #14
   17b54:	andeq	ip, r2, r8, lsl r6
   17b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b5c:	mov	r5, r1
   17b60:	ldr	r1, [pc, #648]	; 17df0 <ASN1_STRING_length@plt+0x5e7c>
   17b64:	sub	sp, sp, #148	; 0x94
   17b68:	mov	r9, r2
   17b6c:	ldr	r1, [r1]
   17b70:	str	r0, [sp, #20]
   17b74:	mov	r0, r5
   17b78:	str	r3, [sp, #12]
   17b7c:	str	r1, [sp, #140]	; 0x8c
   17b80:	bl	11cd4 <dirfd@plt>
   17b84:	ldr	r6, [pc, #616]	; 17df4 <ASN1_STRING_length@plt+0x5e80>
   17b88:	ldr	sl, [pc, #616]	; 17df8 <ASN1_STRING_length@plt+0x5e84>
   17b8c:	mov	r7, #0
   17b90:	str	r0, [sp, #16]
   17b94:	mov	r0, r5
   17b98:	bl	11e54 <readdir64@plt>
   17b9c:	subs	fp, r0, #0
   17ba0:	beq	17d18 <ASN1_STRING_length@plt+0x5da4>
   17ba4:	ldrb	r2, [fp, #19]
   17ba8:	add	r4, fp, #19
   17bac:	cmp	r2, #46	; 0x2e
   17bb0:	beq	17d38 <ASN1_STRING_length@plt+0x5dc4>
   17bb4:	mov	r1, r6
   17bb8:	mov	r0, r4
   17bbc:	bl	11f14 <strcmp@plt>
   17bc0:	cmp	r0, #0
   17bc4:	beq	17b94 <ASN1_STRING_length@plt+0x5c20>
   17bc8:	mov	r1, sl
   17bcc:	mov	r0, r4
   17bd0:	bl	11f14 <strcmp@plt>
   17bd4:	cmp	r0, #0
   17bd8:	beq	17b94 <ASN1_STRING_length@plt+0x5c20>
   17bdc:	mov	r0, r4
   17be0:	bl	11c44 <strlen@plt>
   17be4:	add	r3, r0, r9
   17be8:	mov	r8, r0
   17bec:	add	r1, r3, #2
   17bf0:	ldr	r0, [sp, #12]
   17bf4:	str	r3, [sp, #28]
   17bf8:	bl	1b398 <ASN1_STRING_length@plt+0x9424>
   17bfc:	cmp	r0, #0
   17c00:	blt	17d78 <ASN1_STRING_length@plt+0x5e04>
   17c04:	ldr	r3, [sp, #12]
   17c08:	add	r2, r8, #1
   17c0c:	mov	r1, r4
   17c10:	ldr	r3, [r3]
   17c14:	add	r0, r3, r9
   17c18:	str	r3, [sp, #24]
   17c1c:	bl	11c5c <memcpy@plt>
   17c20:	ldrb	r3, [fp, #18]
   17c24:	cmp	r3, #8
   17c28:	beq	17d5c <ASN1_STRING_length@plt+0x5de8>
   17c2c:	cmp	r3, #4
   17c30:	beq	17c70 <ASN1_STRING_length@plt+0x5cfc>
   17c34:	mov	r3, #0
   17c38:	str	r3, [sp]
   17c3c:	mov	r2, r4
   17c40:	add	r3, sp, #32
   17c44:	ldr	r1, [sp, #16]
   17c48:	mov	r0, #3
   17c4c:	bl	11ee4 <__fxstatat64@plt>
   17c50:	cmp	r0, #0
   17c54:	blt	17db8 <ASN1_STRING_length@plt+0x5e44>
   17c58:	ldr	r3, [sp, #48]	; 0x30
   17c5c:	and	r3, r3, #61440	; 0xf000
   17c60:	cmp	r3, #32768	; 0x8000
   17c64:	beq	17d5c <ASN1_STRING_length@plt+0x5de8>
   17c68:	cmp	r3, #16384	; 0x4000
   17c6c:	bne	17d8c <ASN1_STRING_length@plt+0x5e18>
   17c70:	mov	r2, #0
   17c74:	mov	r1, r4
   17c78:	ldr	r0, [sp, #16]
   17c7c:	bl	11bf0 <openat64@plt>
   17c80:	subs	r8, r0, #0
   17c84:	blt	17da0 <ASN1_STRING_length@plt+0x5e2c>
   17c88:	bl	11f5c <fdopendir@plt>
   17c8c:	subs	r4, r0, #0
   17c90:	beq	17dd0 <ASN1_STRING_length@plt+0x5e5c>
   17c94:	ldr	r0, [sp, #28]
   17c98:	ldr	ip, [sp, #24]
   17c9c:	add	r3, r0, #1
   17ca0:	mov	r2, #47	; 0x2f
   17ca4:	mov	r1, #0
   17ca8:	strb	r2, [ip, r0]
   17cac:	strb	r1, [ip, r3]
   17cb0:	mov	r2, r3
   17cb4:	mov	r1, r4
   17cb8:	ldr	r3, [sp, #12]
   17cbc:	ldr	r0, [sp, #20]
   17cc0:	bl	17b58 <ASN1_STRING_length@plt+0x5be4>
   17cc4:	mov	r7, r0
   17cc8:	mov	r0, r4
   17ccc:	bl	11d28 <closedir@plt>
   17cd0:	cmp	r7, #0
   17cd4:	bge	17b94 <ASN1_STRING_length@plt+0x5c20>
   17cd8:	ldr	r2, [sp, #28]
   17cdc:	rsb	r0, r7, #0
   17ce0:	ldr	r7, [sp, #24]
   17ce4:	mov	r4, #0
   17ce8:	strb	r4, [r7, r2]
   17cec:	bl	119f8 <strerror@plt>
   17cf0:	mov	r2, r7
   17cf4:	ldr	r1, [pc, #256]	; 17dfc <ASN1_STRING_length@plt+0x5e88>
   17cf8:	mov	r7, r4
   17cfc:	mov	r3, r0
   17d00:	mov	r0, #3
   17d04:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17d08:	mov	r0, r5
   17d0c:	bl	11e54 <readdir64@plt>
   17d10:	subs	fp, r0, #0
   17d14:	bne	17ba4 <ASN1_STRING_length@plt+0x5c30>
   17d18:	ldr	r3, [pc, #208]	; 17df0 <ASN1_STRING_length@plt+0x5e7c>
   17d1c:	ldr	r2, [sp, #140]	; 0x8c
   17d20:	mov	r0, r7
   17d24:	ldr	r3, [r3]
   17d28:	cmp	r2, r3
   17d2c:	bne	17dec <ASN1_STRING_length@plt+0x5e78>
   17d30:	add	sp, sp, #148	; 0x94
   17d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d38:	ldrb	r2, [fp, #20]
   17d3c:	cmp	r2, #0
   17d40:	beq	17b94 <ASN1_STRING_length@plt+0x5c20>
   17d44:	cmp	r2, #46	; 0x2e
   17d48:	bne	17bb4 <ASN1_STRING_length@plt+0x5c40>
   17d4c:	ldrb	r2, [fp, #21]
   17d50:	cmp	r2, #0
   17d54:	bne	17bb4 <ASN1_STRING_length@plt+0x5c40>
   17d58:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17d5c:	mov	r2, r8
   17d60:	ldr	r3, [sp, #24]
   17d64:	mov	r1, r9
   17d68:	ldr	r0, [sp, #20]
   17d6c:	bl	175e0 <ASN1_STRING_length@plt+0x566c>
   17d70:	mov	r7, r0
   17d74:	b	17cd0 <ASN1_STRING_length@plt+0x5d5c>
   17d78:	ldr	r1, [pc, #128]	; 17e00 <ASN1_STRING_length@plt+0x5e8c>
   17d7c:	mov	r0, #3
   17d80:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17d84:	mvn	r7, #11
   17d88:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17d8c:	ldr	r2, [sp, #24]
   17d90:	ldr	r1, [pc, #108]	; 17e04 <ASN1_STRING_length@plt+0x5e90>
   17d94:	mov	r0, #3
   17d98:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17d9c:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17da0:	mov	r3, r4
   17da4:	ldr	r2, [sp, #16]
   17da8:	ldr	r1, [pc, #88]	; 17e08 <ASN1_STRING_length@plt+0x5e94>
   17dac:	mov	r0, #3
   17db0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17db4:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17db8:	mov	r3, r4
   17dbc:	ldr	r2, [sp, #16]
   17dc0:	ldr	r1, [pc, #68]	; 17e0c <ASN1_STRING_length@plt+0x5e98>
   17dc4:	mov	r0, #3
   17dc8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17dcc:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17dd0:	mov	r2, r8
   17dd4:	ldr	r1, [pc, #52]	; 17e10 <ASN1_STRING_length@plt+0x5e9c>
   17dd8:	mov	r0, #3
   17ddc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17de0:	mov	r0, r8
   17de4:	bl	11d04 <close@plt>
   17de8:	b	17b94 <ASN1_STRING_length@plt+0x5c20>
   17dec:	bl	11d88 <__stack_chk_fail@plt>
   17df0:	andeq	pc, r3, r8, ror #25
   17df4:	andeq	ip, r2, r0, ror #8
   17df8:	andeq	ip, r2, r8, ror #8
   17dfc:	andeq	ip, r2, r0, lsr r5
   17e00:	strdeq	ip, [r2], -r4
   17e04:	andeq	ip, r2, r0, lsl r5
   17e08:	andeq	ip, r2, r0, asr #9
   17e0c:	andeq	ip, r2, r8, lsl #9
   17e10:	andeq	ip, r2, r0, ror #9
   17e14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17e18:	sub	sp, sp, #272	; 0x110
   17e1c:	ldr	r7, [pc, #240]	; 17f14 <ASN1_STRING_length@plt+0x5fa0>
   17e20:	add	r2, sp, #12
   17e24:	mov	sl, r0
   17e28:	ldr	r3, [r7]
   17e2c:	mov	r0, r1
   17e30:	str	r3, [sp, #268]	; 0x10c
   17e34:	mov	r8, #0
   17e38:	mov	r3, #256	; 0x100
   17e3c:	mov	r4, r1
   17e40:	str	r2, [sp]
   17e44:	str	r3, [sp, #4]
   17e48:	strb	r8, [sp, #8]
   17e4c:	bl	11a34 <opendir@plt>
   17e50:	subs	r9, r0, #0
   17e54:	beq	17eec <ASN1_STRING_length@plt+0x5f78>
   17e58:	mov	r0, r4
   17e5c:	bl	11c44 <strlen@plt>
   17e60:	mov	r5, sp
   17e64:	add	r1, r0, #2
   17e68:	mov	r6, r0
   17e6c:	mov	r0, r5
   17e70:	bl	1b398 <ASN1_STRING_length@plt+0x9424>
   17e74:	cmp	r0, #0
   17e78:	mvnlt	r4, #11
   17e7c:	blt	17ec0 <ASN1_STRING_length@plt+0x5f4c>
   17e80:	ldr	r3, [sp]
   17e84:	mov	r1, r4
   17e88:	mov	r0, r3
   17e8c:	mov	r2, r6
   17e90:	bl	11c5c <memcpy@plt>
   17e94:	add	r1, r6, #1
   17e98:	mov	r2, #47	; 0x2f
   17e9c:	mov	r3, r0
   17ea0:	mov	r0, sl
   17ea4:	strb	r2, [r3, r6]
   17ea8:	strb	r8, [r3, r1]
   17eac:	mov	r2, r1
   17eb0:	mov	r3, r5
   17eb4:	mov	r1, r9
   17eb8:	bl	17b58 <ASN1_STRING_length@plt+0x5be4>
   17ebc:	mov	r4, r0
   17ec0:	mov	r0, r9
   17ec4:	bl	11d28 <closedir@plt>
   17ec8:	mov	r0, r5
   17ecc:	bl	1b410 <ASN1_STRING_length@plt+0x949c>
   17ed0:	ldr	r2, [sp, #268]	; 0x10c
   17ed4:	ldr	r3, [r7]
   17ed8:	mov	r0, r4
   17edc:	cmp	r2, r3
   17ee0:	bne	17f10 <ASN1_STRING_length@plt+0x5f9c>
   17ee4:	add	sp, sp, #272	; 0x110
   17ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17eec:	bl	11f38 <__errno_location@plt>
   17ef0:	mov	r2, r4
   17ef4:	ldr	r1, [pc, #28]	; 17f18 <ASN1_STRING_length@plt+0x5fa4>
   17ef8:	mov	r5, sp
   17efc:	ldr	r4, [r0]
   17f00:	mov	r0, #3
   17f04:	rsb	r4, r4, #0
   17f08:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   17f0c:	b	17ec8 <ASN1_STRING_length@plt+0x5f54>
   17f10:	bl	11d88 <__stack_chk_fail@plt>
   17f14:	andeq	pc, r3, r8, ror #25
   17f18:	andeq	ip, r2, r8, lsl #15
   17f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f20:	sub	sp, sp, #15040	; 0x3ac0
   17f24:	ldr	r3, [pc, #4060]	; 18f08 <ASN1_STRING_length@plt+0x6f94>
   17f28:	sub	sp, sp, #60	; 0x3c
   17f2c:	add	ip, sp, #15040	; 0x3ac0
   17f30:	mov	fp, #0
   17f34:	ldr	r3, [r3]
   17f38:	add	ip, ip, #52	; 0x34
   17f3c:	ldr	r6, [pc, #4040]	; 18f0c <ASN1_STRING_length@plt+0x6f98>
   17f40:	ldr	r7, [pc, #4040]	; 18f10 <ASN1_STRING_length@plt+0x6f9c>
   17f44:	ldr	r8, [pc, #4040]	; 18f14 <ASN1_STRING_length@plt+0x6fa0>
   17f48:	ldr	r2, [pc, #4040]	; 18f18 <ASN1_STRING_length@plt+0x6fa4>
   17f4c:	mov	r5, r0
   17f50:	mov	r4, r1
   17f54:	add	r0, sp, #720	; 0x2d0
   17f58:	mov	r1, fp
   17f5c:	add	sl, sp, #224	; 0xe0
   17f60:	str	r3, [ip]
   17f64:	str	fp, [sp, #72]	; 0x48
   17f68:	bl	11b18 <memset@plt>
   17f6c:	add	r0, sp, #84	; 0x54
   17f70:	mov	r1, fp
   17f74:	mov	r2, #36	; 0x24
   17f78:	bl	11b18 <memset@plt>
   17f7c:	str	fp, [sp, #28]
   17f80:	str	fp, [sp, #48]	; 0x30
   17f84:	str	fp, [sp, #56]	; 0x38
   17f88:	str	fp, [sp, #32]
   17f8c:	str	fp, [sp, #44]	; 0x2c
   17f90:	str	fp, [sp, #40]	; 0x28
   17f94:	str	fp, [sp, #52]	; 0x34
   17f98:	mov	ip, #0
   17f9c:	str	sl, [sp]
   17fa0:	mov	r3, r6
   17fa4:	mov	r2, r7
   17fa8:	mov	r1, r4
   17fac:	mov	r0, r5
   17fb0:	str	ip, [sp, #224]	; 0xe0
   17fb4:	bl	11bcc <getopt_long@plt>
   17fb8:	cmn	r0, #1
   17fbc:	beq	182b0 <ASN1_STRING_length@plt+0x633c>
   17fc0:	sub	r3, r0, #63	; 0x3f
   17fc4:	cmp	r3, #56	; 0x38
   17fc8:	ldrls	pc, [pc, r3, lsl #2]
   17fcc:	b	1829c <ASN1_STRING_length@plt+0x6328>
   17fd0:	andeq	r8, r1, r8, ror #1
   17fd4:	muleq	r1, ip, r2
   17fd8:	andeq	r8, r1, r4, ror #3
   17fdc:	muleq	r1, ip, r2
   17fe0:	andeq	r8, r1, r0, lsr #3
   17fe4:	muleq	r1, ip, r2
   17fe8:	andeq	r8, r1, r4, lsl #3
   17fec:	andeq	r8, r1, r8, ror r1
   17ff0:	muleq	r1, ip, r2
   17ff4:	muleq	r1, ip, r2
   17ff8:	muleq	r1, ip, r2
   17ffc:	muleq	r1, ip, r2
   18000:	muleq	r1, ip, r2
   18004:	muleq	r1, ip, r2
   18008:	muleq	r1, ip, r2
   1800c:	muleq	r1, ip, r2
   18010:	muleq	r1, ip, r2
   18014:	andeq	r8, r1, r4, asr r1
   18018:	muleq	r1, ip, r2
   1801c:	muleq	r1, ip, r2
   18020:	muleq	r1, ip, r2
   18024:	muleq	r1, ip, r2
   18028:	muleq	r1, ip, r2
   1802c:	andeq	r8, r1, ip, lsr r1
   18030:	muleq	r1, ip, r2
   18034:	muleq	r1, ip, r2
   18038:	muleq	r1, ip, r2
   1803c:	muleq	r1, ip, r2
   18040:	muleq	r1, ip, r2
   18044:	muleq	r1, ip, r2
   18048:	muleq	r1, ip, r2
   1804c:	muleq	r1, ip, r2
   18050:	muleq	r1, ip, r2
   18054:	muleq	r1, ip, r2
   18058:	andeq	r8, r1, r0, lsr r1
   1805c:	andeq	r8, r1, r8, ror r2
   18060:	muleq	r1, ip, r2
   18064:	muleq	r1, ip, r2
   18068:	andeq	r8, r1, r4, ror #4
   1806c:	muleq	r1, ip, r2
   18070:	muleq	r1, ip, r2
   18074:	andeq	r8, r1, ip, asr #4
   18078:	muleq	r1, ip, r2
   1807c:	muleq	r1, ip, r2
   18080:	muleq	r1, ip, r2
   18084:	muleq	r1, ip, r2
   18088:	andeq	r8, r1, r8, lsr #4
   1808c:	andeq	r8, r1, r8, lsl r2
   18090:	muleq	r1, ip, r2
   18094:	muleq	r1, ip, r2
   18098:	andeq	r8, r1, r8, lsr #4
   1809c:	andeq	r8, r1, r8, lsr #4
   180a0:	muleq	r1, ip, r2
   180a4:	muleq	r1, ip, r2
   180a8:	andeq	r8, r1, r8, lsr #4
   180ac:	andeq	r8, r1, r4, lsl #4
   180b0:	strdeq	r8, [r1], -r0
   180b4:	bl	11f38 <__errno_location@plt>
   180b8:	ldr	r7, [r0]
   180bc:	rsb	r7, r7, #0
   180c0:	cmp	r7, #0
   180c4:	bge	18490 <ASN1_STRING_length@plt+0x651c>
   180c8:	rsb	r0, r7, #0
   180cc:	bl	119f8 <strerror@plt>
   180d0:	ldr	r1, [pc, #3652]	; 18f1c <ASN1_STRING_length@plt+0x6fa8>
   180d4:	mov	r2, r0
   180d8:	mov	r0, #2
   180dc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   180e0:	mov	r0, r6
   180e4:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   180e8:	add	r0, sp, #720	; 0x2d0
   180ec:	bl	169b4 <ASN1_STRING_length@plt+0x4a40>
   180f0:	mov	r4, #1
   180f4:	mov	r0, fp
   180f8:	bl	11ba8 <free@plt>
   180fc:	ldr	r0, [sp, #28]
   18100:	bl	11ba8 <free@plt>
   18104:	add	r3, sp, #15040	; 0x3ac0
   18108:	add	r3, r3, #52	; 0x34
   1810c:	ldr	r2, [r3]
   18110:	ldr	r3, [pc, #3568]	; 18f08 <ASN1_STRING_length@plt+0x6f94>
   18114:	mov	r0, r4
   18118:	ldr	r3, [r3]
   1811c:	cmp	r2, r3
   18120:	bne	19edc <ASN1_STRING_length@plt+0x7f68>
   18124:	add	sp, sp, #15040	; 0x3ac0
   18128:	add	sp, sp, #60	; 0x3c
   1812c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18130:	mov	r3, #1
   18134:	str	r3, [sp, #40]	; 0x28
   18138:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   1813c:	ldr	r0, [pc, #3548]	; 18f20 <ASN1_STRING_length@plt+0x6fac>
   18140:	bl	11e0c <puts@plt>
   18144:	ldr	r0, [pc, #3544]	; 18f24 <ASN1_STRING_length@plt+0x6fb0>
   18148:	bl	11e0c <puts@plt>
   1814c:	mov	r4, #0
   18150:	b	180f4 <ASN1_STRING_length@plt+0x6180>
   18154:	ldr	r3, [r8]
   18158:	ldrb	r2, [r3, #1]
   1815c:	cmp	r2, #0
   18160:	bne	1987c <ASN1_STRING_length@plt+0x7908>
   18164:	add	r2, sp, #4800	; 0x12c0
   18168:	ldrb	r3, [r3]
   1816c:	add	r2, r2, #24
   18170:	strb	r3, [r2]
   18174:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18178:	ldr	r3, [r8]
   1817c:	str	r3, [sp, #56]	; 0x38
   18180:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18184:	add	r2, sp, #4800	; 0x12c0
   18188:	add	r2, r2, #25
   1818c:	mov	r3, #1
   18190:	strb	r3, [r2]
   18194:	ldr	r3, [r8]
   18198:	str	r3, [sp, #48]	; 0x30
   1819c:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   181a0:	ldr	r3, [sp, #32]
   181a4:	mov	r0, fp
   181a8:	add	r9, r3, #2
   181ac:	lsl	r9, r9, #2
   181b0:	mov	r1, r9
   181b4:	bl	11ec0 <realloc@plt>
   181b8:	cmp	r0, #0
   181bc:	beq	1988c <ASN1_STRING_length@plt+0x7918>
   181c0:	ldr	r1, [sp, #32]
   181c4:	ldr	r2, [r8]
   181c8:	add	r9, r0, r9
   181cc:	mov	r3, #0
   181d0:	add	r1, r1, #1
   181d4:	str	r1, [sp, #32]
   181d8:	mov	fp, r0
   181dc:	strd	r2, [r9, #-8]
   181e0:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   181e4:	mov	r3, #1
   181e8:	str	r3, [sp, #44]	; 0x2c
   181ec:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   181f0:	add	r2, sp, #4800	; 0x12c0
   181f4:	add	r2, r2, #27
   181f8:	mov	r3, #1
   181fc:	strb	r3, [r2]
   18200:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18204:	ldr	r2, [pc, #3356]	; 18f28 <ASN1_STRING_length@plt+0x6fb4>
   18208:	ldr	r3, [r2]
   1820c:	add	r3, r3, #1
   18210:	str	r3, [r2]
   18214:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18218:	ldr	r3, [pc, #3340]	; 18f2c <ASN1_STRING_length@plt+0x6fb8>
   1821c:	ldr	r3, [r3]
   18220:	str	r3, [sp, #52]	; 0x34
   18224:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18228:	ldr	r3, [sp, #224]	; 0xe0
   1822c:	cmp	r3, #0
   18230:	movle	r2, r0
   18234:	ldrgt	r2, [r6, r3, lsl #4]
   18238:	ldrgt	r1, [pc, #3312]	; 18f30 <ASN1_STRING_length@plt+0x6fbc>
   1823c:	ldrle	r1, [pc, #3312]	; 18f34 <ASN1_STRING_length@plt+0x6fc0>
   18240:	mov	r0, #4
   18244:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18248:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   1824c:	ldr	r3, [pc, #3300]	; 18f38 <ASN1_STRING_length@plt+0x6fc4>
   18250:	ldr	r1, [pc, #3300]	; 18f3c <ASN1_STRING_length@plt+0x6fc8>
   18254:	mov	r0, #1
   18258:	ldr	r2, [r3]
   1825c:	bl	11aac <__printf_chk@plt>
   18260:	b	1814c <ASN1_STRING_length@plt+0x61d8>
   18264:	add	r2, sp, #4800	; 0x12c0
   18268:	add	r2, r2, #26
   1826c:	mov	r3, #1
   18270:	strb	r3, [r2]
   18274:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   18278:	ldr	r3, [sp, #28]
   1827c:	cmp	r3, #0
   18280:	beq	1828c <ASN1_STRING_length@plt+0x6318>
   18284:	mov	r0, r3
   18288:	bl	11ba8 <free@plt>
   1828c:	ldr	r0, [r8]
   18290:	bl	1b9cc <ASN1_STRING_length@plt+0x9a58>
   18294:	str	r0, [sp, #28]
   18298:	b	17f98 <ASN1_STRING_length@plt+0x6024>
   1829c:	mov	r2, r0
   182a0:	ldr	r1, [pc, #3224]	; 18f40 <ASN1_STRING_length@plt+0x6fcc>
   182a4:	mov	r0, #3
   182a8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   182ac:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   182b0:	ldr	r3, [pc, #3212]	; 18f44 <ASN1_STRING_length@plt+0x6fd0>
   182b4:	mov	r9, r0
   182b8:	ldr	r3, [r3]
   182bc:	cmp	r3, r5
   182c0:	blt	18590 <ASN1_STRING_length@plt+0x661c>
   182c4:	add	r0, sp, #328	; 0x148
   182c8:	bl	11b24 <uname@plt>
   182cc:	cmp	r0, #0
   182d0:	blt	19820 <ASN1_STRING_length@plt+0x78ac>
   182d4:	add	r3, sp, #376	; 0x178
   182d8:	add	r3, r3, #82	; 0x52
   182dc:	mov	r1, r3
   182e0:	str	r3, [sp, #720]	; 0x2d0
   182e4:	ldr	r3, [sp, #28]
   182e8:	ldr	r2, [pc, #3160]	; 18f48 <ASN1_STRING_length@plt+0x6fd4>
   182ec:	cmp	r3, #0
   182f0:	ldr	r0, [pc, #3156]	; 18f4c <ASN1_STRING_length@plt+0x6fd8>
   182f4:	movne	r2, r3
   182f8:	add	r6, sp, #724	; 0x2d4
   182fc:	mov	r3, #4096	; 0x1000
   18300:	stm	sp, {r0, r2}
   18304:	str	r1, [sp, #8]
   18308:	mov	r2, #1
   1830c:	mov	r1, r3
   18310:	mov	r0, r6
   18314:	bl	11cc8 <__snprintf_chk@plt>
   18318:	ldr	r3, [pc, #3108]	; 18f44 <ASN1_STRING_length@plt+0x6fd0>
   1831c:	ldr	r2, [sp, #40]	; 0x28
   18320:	ldr	r3, [r3]
   18324:	cmp	r3, r5
   18328:	ldr	r3, [sp, #44]	; 0x2c
   1832c:	moveq	r2, #1
   18330:	cmp	r3, #0
   18334:	add	r3, sp, #4800	; 0x12c0
   18338:	add	r3, r3, #20
   1833c:	str	r2, [sp, #40]	; 0x28
   18340:	str	r0, [r3]
   18344:	beq	185c8 <ASN1_STRING_length@plt+0x6654>
   18348:	ldr	r3, [pc, #3036]	; 18f2c <ASN1_STRING_length@plt+0x6fb8>
   1834c:	ldr	r2, [sp, #52]	; 0x34
   18350:	ldr	r3, [r3]
   18354:	cmp	r3, r2
   18358:	beq	185d4 <ASN1_STRING_length@plt+0x6660>
   1835c:	mov	r0, r6
   18360:	bl	11a34 <opendir@plt>
   18364:	subs	r8, r0, #0
   18368:	beq	1985c <ASN1_STRING_length@plt+0x78e8>
   1836c:	bl	11cd4 <dirfd@plt>
   18370:	mov	r3, #0
   18374:	str	r3, [sp]
   18378:	ldr	r2, [pc, #3024]	; 18f50 <ASN1_STRING_length@plt+0x6fdc>
   1837c:	mov	r3, sl
   18380:	mov	r1, r0
   18384:	mov	r0, #3
   18388:	bl	11ee4 <__fxstatat64@plt>
   1838c:	subs	r3, r0, #0
   18390:	str	r3, [sp, #32]
   18394:	bne	18d50 <ASN1_STRING_length@plt+0x6ddc>
   18398:	mov	r0, r6
   1839c:	bl	11c44 <strlen@plt>
   183a0:	add	r3, sp, #4800	; 0x12c0
   183a4:	add	r3, r3, #52	; 0x34
   183a8:	mov	r1, r6
   183ac:	mov	r6, r3
   183b0:	mov	r7, r0
   183b4:	mov	r2, r0
   183b8:	mov	r0, r3
   183bc:	mov	r3, #4096	; 0x1000
   183c0:	bl	11c20 <__memcpy_chk@plt>
   183c4:	add	r3, sp, #6848	; 0x1ac0
   183c8:	add	r3, r3, #56	; 0x38
   183cc:	add	r2, r7, #1
   183d0:	add	r7, r3, r7
   183d4:	mov	ip, #47	; 0x2f
   183d8:	add	lr, r3, r2
   183dc:	strb	ip, [r7, #-2052]	; 0xfffff7fc
   183e0:	ldr	ip, [sp, #32]
   183e4:	mov	r3, r6
   183e8:	ldr	r1, [sp, #304]	; 0x130
   183ec:	mov	r0, r8
   183f0:	strb	ip, [lr, #-2052]	; 0xfffff7fc
   183f4:	bl	1551c <ASN1_STRING_length@plt+0x35a8>
   183f8:	mov	r6, r0
   183fc:	mov	r0, r8
   18400:	bl	11d28 <closedir@plt>
   18404:	cmp	r6, #1
   18408:	beq	185d4 <ASN1_STRING_length@plt+0x6660>
   1840c:	add	r7, sp, #724	; 0x2d4
   18410:	mov	r0, r7
   18414:	add	r1, sp, #72	; 0x48
   18418:	bl	1c600 <ASN1_STRING_length@plt+0xa68c>
   1841c:	subs	r6, r0, #0
   18420:	beq	18d78 <ASN1_STRING_length@plt+0x6e04>
   18424:	ldr	r3, [pc, #2812]	; 18f28 <ASN1_STRING_length@plt+0x6fb4>
   18428:	ldr	r1, [r3]
   1842c:	bl	1a314 <ASN1_STRING_length@plt+0x83a0>
   18430:	add	r3, sp, #720	; 0x2d0
   18434:	mov	r1, #128	; 0x80
   18438:	add	r0, sp, #92	; 0x5c
   1843c:	str	r3, [sp, #84]	; 0x54
   18440:	str	r6, [sp, #88]	; 0x58
   18444:	bl	1a8bc <ASN1_STRING_length@plt+0x8948>
   18448:	mov	r1, #0
   1844c:	mov	r0, #512	; 0x200
   18450:	bl	1a9f0 <ASN1_STRING_length@plt+0x8a7c>
   18454:	cmp	r0, #0
   18458:	str	r0, [sp, #108]	; 0x6c
   1845c:	beq	180b4 <ASN1_STRING_length@plt+0x6140>
   18460:	mov	r1, #0
   18464:	mov	r0, #512	; 0x200
   18468:	bl	1a9f0 <ASN1_STRING_length@plt+0x8a7c>
   1846c:	cmp	r0, #0
   18470:	str	r0, [sp, #112]	; 0x70
   18474:	beq	18d8c <ASN1_STRING_length@plt+0x6e18>
   18478:	ldr	r1, [pc, #2772]	; 18f54 <ASN1_STRING_length@plt+0x6fe0>
   1847c:	mov	r0, #2048	; 0x800
   18480:	bl	1a9f0 <ASN1_STRING_length@plt+0x8a7c>
   18484:	cmp	r0, #0
   18488:	str	r0, [sp, #116]	; 0x74
   1848c:	beq	19a20 <ASN1_STRING_length@plt+0x7aac>
   18490:	ldr	r3, [sp, #48]	; 0x30
   18494:	cmp	r3, #0
   18498:	beq	185ec <ASN1_STRING_length@plt+0x6678>
   1849c:	mov	r0, r3
   184a0:	ldr	r1, [pc, #2736]	; 18f58 <ASN1_STRING_length@plt+0x6fe4>
   184a4:	bl	11c68 <fopen64@plt>
   184a8:	subs	r3, r0, #0
   184ac:	str	r3, [sp, #40]	; 0x28
   184b0:	beq	19994 <ASN1_STRING_length@plt+0x7a20>
   184b4:	ldr	r2, [sp, #48]	; 0x30
   184b8:	ldr	r1, [pc, #2716]	; 18f5c <ASN1_STRING_length@plt+0x6fe8>
   184bc:	mov	r0, #7
   184c0:	ldr	r8, [pc, #2712]	; 18f60 <ASN1_STRING_length@plt+0x6fec>
   184c4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   184c8:	mov	r7, #0
   184cc:	add	r3, sp, #4800	; 0x12c0
   184d0:	add	r3, r3, #52	; 0x34
   184d4:	str	r3, [sp, #32]
   184d8:	str	r9, [sp, #56]	; 0x38
   184dc:	ldr	r2, [sp, #40]	; 0x28
   184e0:	mov	r1, #10240	; 0x2800
   184e4:	ldr	r0, [sp, #32]
   184e8:	bl	11a94 <fgets@plt>
   184ec:	cmp	r0, #0
   184f0:	beq	18758 <ASN1_STRING_length@plt+0x67e4>
   184f4:	mov	r1, r8
   184f8:	ldr	r0, [sp, #32]
   184fc:	bl	11dc4 <strtok@plt>
   18500:	mov	r1, r8
   18504:	add	r7, r7, #1
   18508:	mov	r6, r0
   1850c:	mov	r0, #0
   18510:	bl	11dc4 <strtok@plt>
   18514:	mov	r1, r8
   18518:	mov	r9, r0
   1851c:	mov	r0, #0
   18520:	bl	11dc4 <strtok@plt>
   18524:	cmp	r6, #0
   18528:	clz	r3, r9
   1852c:	lsr	r3, r3, #5
   18530:	moveq	r3, #1
   18534:	cmp	r0, #0
   18538:	moveq	r3, #1
   1853c:	cmp	r3, #0
   18540:	bne	184dc <ASN1_STRING_length@plt+0x6568>
   18544:	ldr	r1, [pc, #2584]	; 18f64 <ASN1_STRING_length@plt+0x6ff0>
   18548:	bl	11f14 <strcmp@plt>
   1854c:	cmp	r0, #0
   18550:	bne	184dc <ASN1_STRING_length@plt+0x6568>
   18554:	mov	r2, #16
   18558:	mov	r1, sl
   1855c:	mov	r0, r6
   18560:	bl	11b9c <strtoull@plt>
   18564:	ldr	r3, [sp, #224]	; 0xe0
   18568:	ldrb	r3, [r3]
   1856c:	cmp	r3, #0
   18570:	bne	18bc8 <ASN1_STRING_length@plt+0x6c54>
   18574:	strd	r0, [sp]
   18578:	str	r3, [sp, #8]
   1857c:	mov	r2, r9
   18580:	add	r1, sp, #116	; 0x74
   18584:	add	r0, sp, #84	; 0x54
   18588:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   1858c:	b	184dc <ASN1_STRING_length@plt+0x6568>
   18590:	ldr	r0, [r4, r3, lsl #2]
   18594:	add	r2, sp, #120	; 0x78
   18598:	mov	r3, sl
   1859c:	ldr	r1, [pc, #2500]	; 18f68 <ASN1_STRING_length@plt+0x6ff4>
   185a0:	bl	11c50 <sscanf@plt>
   185a4:	cmp	r0, #2
   185a8:	bne	1873c <ASN1_STRING_length@plt+0x67c8>
   185ac:	ldr	r0, [pc, #2448]	; 18f44 <ASN1_STRING_length@plt+0x6fd0>
   185b0:	ldr	r3, [r0]
   185b4:	add	r2, r3, #1
   185b8:	ldr	r1, [r4, r3, lsl #2]
   185bc:	str	r2, [r0]
   185c0:	str	r1, [sp, #720]	; 0x2d0
   185c4:	b	182e4 <ASN1_STRING_length@plt+0x6370>
   185c8:	ldr	r3, [sp, #40]	; 0x28
   185cc:	str	r3, [sp, #44]	; 0x2c
   185d0:	b	1840c <ASN1_STRING_length@plt+0x6498>
   185d4:	mov	r4, #0
   185d8:	add	r0, sp, #84	; 0x54
   185dc:	bl	15a94 <ASN1_STRING_length@plt+0x3b20>
   185e0:	add	r0, sp, #720	; 0x2d0
   185e4:	bl	169b4 <ASN1_STRING_length@plt+0x4a40>
   185e8:	b	180f4 <ASN1_STRING_length@plt+0x6180>
   185ec:	ldr	lr, [sp, #56]	; 0x38
   185f0:	cmp	lr, #0
   185f4:	beq	197c4 <ASN1_STRING_length@plt+0x7850>
   185f8:	ldr	r2, [pc, #2412]	; 18f6c <ASN1_STRING_length@plt+0x6ff8>
   185fc:	add	r3, sp, #4800	; 0x12c0
   18600:	add	r3, r3, #40	; 0x28
   18604:	ldm	r2, {r0, r1, r2}
   18608:	stmia	r3!, {r0, r1}
   1860c:	lsr	ip, r2, #16
   18610:	ldr	r1, [pc, #2368]	; 18f58 <ASN1_STRING_length@plt+0x6fe4>
   18614:	mov	r0, lr
   18618:	strh	r2, [r3], #2
   1861c:	strb	ip, [r3]
   18620:	bl	11c68 <fopen64@plt>
   18624:	subs	r8, r0, #0
   18628:	beq	19a50 <ASN1_STRING_length@plt+0x7adc>
   1862c:	ldr	r2, [sp, #56]	; 0x38
   18630:	ldr	r1, [pc, #2360]	; 18f70 <ASN1_STRING_length@plt+0x6ffc>
   18634:	mov	r0, #7
   18638:	ldr	r7, [sp, #48]	; 0x30
   1863c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18640:	add	r3, sp, #4800	; 0x12c0
   18644:	add	r3, r3, #56	; 0x38
   18648:	str	r3, [sp, #40]	; 0x28
   1864c:	add	r3, sp, #4800	; 0x12c0
   18650:	add	r3, r3, #52	; 0x34
   18654:	str	r4, [sp, #48]	; 0x30
   18658:	mov	r4, r3
   1865c:	mov	r2, r8
   18660:	mov	r1, #10240	; 0x2800
   18664:	mov	r0, r4
   18668:	bl	11a94 <fgets@plt>
   1866c:	cmp	r0, #0
   18670:	beq	197f8 <ASN1_STRING_length@plt+0x7884>
   18674:	mov	r1, #32
   18678:	mov	r0, r4
   1867c:	bl	11ac4 <strchr@plt>
   18680:	add	r7, r7, #1
   18684:	cmp	r0, #0
   18688:	beq	18720 <ASN1_STRING_length@plt+0x67ac>
   1868c:	add	r0, r0, #1
   18690:	mov	r1, #32
   18694:	bl	11ac4 <strchr@plt>
   18698:	subs	r6, r0, #0
   1869c:	beq	18720 <ASN1_STRING_length@plt+0x67ac>
   186a0:	ldr	r3, [sp, #84]	; 0x54
   186a4:	ldrb	r2, [r6, #1]
   186a8:	add	r3, r3, #4096	; 0x1000
   186ac:	ldrb	r3, [r3, #8]
   186b0:	cmp	r2, r3
   186b4:	ldr	r3, [sp, #40]	; 0x28
   186b8:	addne	r6, r6, #1
   186bc:	addeq	r6, r6, #2
   186c0:	sub	r1, r3, #16
   186c4:	mov	r2, #10
   186c8:	mov	r0, r6
   186cc:	bl	11ea8 <strncmp@plt>
   186d0:	subs	r3, r0, #0
   186d4:	str	r3, [sp, #32]
   186d8:	bne	1865c <ASN1_STRING_length@plt+0x66e8>
   186dc:	mov	r1, #10
   186e0:	mov	r0, r6
   186e4:	bl	11ac4 <strchr@plt>
   186e8:	mov	r1, #0
   186ec:	add	r2, r6, #10
   186f0:	cmp	r0, #0
   186f4:	ldrne	r3, [sp, #32]
   186f8:	strbne	r3, [r0]
   186fc:	mov	r0, #0
   18700:	mov	r3, #0
   18704:	strd	r0, [sp]
   18708:	str	r3, [sp, #8]
   1870c:	add	r1, sp, #116	; 0x74
   18710:	mov	r3, #1
   18714:	add	r0, sp, #84	; 0x54
   18718:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   1871c:	b	1865c <ASN1_STRING_length@plt+0x66e8>
   18720:	str	r4, [sp]
   18724:	mov	r3, r7
   18728:	ldr	r2, [sp, #56]	; 0x38
   1872c:	ldr	r1, [pc, #2112]	; 18f74 <ASN1_STRING_length@plt+0x7000>
   18730:	mov	r0, #3
   18734:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18738:	b	1865c <ASN1_STRING_length@plt+0x66e8>
   1873c:	ldr	r3, [pc, #2048]	; 18f44 <ASN1_STRING_length@plt+0x6fd0>
   18740:	ldr	r1, [pc, #2096]	; 18f78 <ASN1_STRING_length@plt+0x7004>
   18744:	mov	r0, #3
   18748:	ldr	r3, [r3]
   1874c:	ldr	r2, [r4, r3, lsl #2]
   18750:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18754:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   18758:	add	r0, sp, #84	; 0x54
   1875c:	ldr	r9, [sp, #56]	; 0x38
   18760:	bl	16bf4 <ASN1_STRING_length@plt+0x4c80>
   18764:	mov	r0, #7
   18768:	ldr	r2, [sp, #48]	; 0x30
   1876c:	ldr	r1, [pc, #2056]	; 18f7c <ASN1_STRING_length@plt+0x7008>
   18770:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18774:	ldr	r0, [sp, #40]	; 0x28
   18778:	bl	11a88 <fclose@plt>
   1877c:	ldr	r3, [sp, #44]	; 0x2c
   18780:	cmp	r3, #0
   18784:	bne	18be4 <ASN1_STRING_length@plt+0x6c70>
   18788:	ldr	r3, [pc, #1972]	; 18f44 <ASN1_STRING_length@plt+0x6fd0>
   1878c:	ldr	r6, [r3]
   18790:	cmp	r5, r6
   18794:	ble	189cc <ASN1_STRING_length@plt+0x6a58>
   18798:	ldr	r7, [r4, r6, lsl #2]
   1879c:	add	r4, r4, r6, lsl #2
   187a0:	ldrb	r3, [r7]
   187a4:	cmp	r3, #47	; 0x2f
   187a8:	beq	187e0 <ASN1_STRING_length@plt+0x686c>
   187ac:	b	198a8 <ASN1_STRING_length@plt+0x7934>
   187b0:	ldr	r1, [sp, #224]	; 0xe0
   187b4:	add	r0, sp, #84	; 0x54
   187b8:	bl	15db0 <ASN1_STRING_length@plt+0x3e3c>
   187bc:	cmp	r0, #0
   187c0:	blt	198bc <ASN1_STRING_length@plt+0x7948>
   187c4:	add	r6, r6, #1
   187c8:	cmp	r5, r6
   187cc:	beq	189cc <ASN1_STRING_length@plt+0x6a58>
   187d0:	ldr	r7, [r4, #4]!
   187d4:	ldrb	r3, [r7]
   187d8:	cmp	r3, #47	; 0x2f
   187dc:	bne	198a8 <ASN1_STRING_length@plt+0x7934>
   187e0:	mov	r2, sl
   187e4:	mov	r1, r7
   187e8:	ldr	r0, [sp, #88]	; 0x58
   187ec:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   187f0:	cmp	r0, #0
   187f4:	bge	187b0 <ASN1_STRING_length@plt+0x683c>
   187f8:	rsb	r0, r0, #0
   187fc:	bl	119f8 <strerror@plt>
   18800:	mov	r2, r7
   18804:	ldr	r1, [pc, #1908]	; 18f80 <ASN1_STRING_length@plt+0x700c>
   18808:	mov	r3, r0
   1880c:	mov	r0, #2
   18810:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18814:	add	r0, sp, #84	; 0x54
   18818:	bl	15a94 <ASN1_STRING_length@plt+0x3b20>
   1881c:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   18820:	ldr	r3, [sp, #76]	; 0x4c
   18824:	ldr	r9, [sp, #32]
   18828:	cmp	r3, #0
   1882c:	beq	1896c <ASN1_STRING_length@plt+0x69f8>
   18830:	ldr	r7, [pc, #1868]	; 18f84 <ASN1_STRING_length@plt+0x7010>
   18834:	str	fp, [sp, #64]	; 0x40
   18838:	mov	r8, r5
   1883c:	mov	fp, r5
   18840:	str	r9, [sp, #60]	; 0x3c
   18844:	ldr	r2, [sp, #80]	; 0x50
   18848:	mov	r3, #0
   1884c:	ldr	r1, [pc, #1796]	; 18f58 <ASN1_STRING_length@plt+0x6fe4>
   18850:	ldr	r2, [r2, fp, lsl #2]
   18854:	str	r3, [sp, #120]	; 0x78
   18858:	add	r3, r2, #12
   1885c:	mov	r0, r3
   18860:	str	r2, [sp, #40]	; 0x28
   18864:	str	r3, [sp, #32]
   18868:	bl	11c68 <fopen64@plt>
   1886c:	subs	r9, r0, #0
   18870:	beq	197b0 <ASN1_STRING_length@plt+0x783c>
   18874:	str	fp, [sp, #44]	; 0x2c
   18878:	b	1892c <ASN1_STRING_length@plt+0x69b8>
   1887c:	ldrb	r3, [r4]
   18880:	cmp	r3, #35	; 0x23
   18884:	cmpne	r3, #0
   18888:	beq	18924 <ASN1_STRING_length@plt+0x69b0>
   1888c:	mov	r2, sl
   18890:	mov	r1, r7
   18894:	bl	11dd0 <strtok_r@plt>
   18898:	subs	r5, r0, #0
   1889c:	beq	18924 <ASN1_STRING_length@plt+0x69b0>
   188a0:	ldr	r1, [pc, #1760]	; 18f88 <ASN1_STRING_length@plt+0x7014>
   188a4:	bl	11f14 <strcmp@plt>
   188a8:	cmp	r0, #0
   188ac:	addeq	r3, sp, #720	; 0x2d0
   188b0:	addeq	r5, r3, #4096	; 0x1000
   188b4:	addeq	r5, r5, #16
   188b8:	beq	18dac <ASN1_STRING_length@plt+0x6e38>
   188bc:	ldr	r1, [pc, #1736]	; 18f8c <ASN1_STRING_length@plt+0x7018>
   188c0:	mov	r0, r5
   188c4:	bl	11f14 <strcmp@plt>
   188c8:	subs	fp, r0, #0
   188cc:	beq	18de4 <ASN1_STRING_length@plt+0x6e70>
   188d0:	ldr	r1, [pc, #1720]	; 18f90 <ASN1_STRING_length@plt+0x701c>
   188d4:	mov	r0, r5
   188d8:	bl	11f14 <strcmp@plt>
   188dc:	subs	r8, r0, #0
   188e0:	beq	190d4 <ASN1_STRING_length@plt+0x7160>
   188e4:	ldr	r1, [pc, #1704]	; 18f94 <ASN1_STRING_length@plt+0x7020>
   188e8:	mov	r0, r5
   188ec:	bl	11f14 <strcmp@plt>
   188f0:	cmp	r0, #0
   188f4:	beq	1890c <ASN1_STRING_length@plt+0x6998>
   188f8:	ldr	r1, [pc, #1688]	; 18f98 <ASN1_STRING_length@plt+0x7024>
   188fc:	mov	r0, r5
   18900:	bl	11f14 <strcmp@plt>
   18904:	cmp	r0, #0
   18908:	bne	18dc8 <ASN1_STRING_length@plt+0x6e54>
   1890c:	str	r5, [sp]
   18910:	ldr	r3, [sp, #120]	; 0x78
   18914:	ldr	r2, [sp, #32]
   18918:	ldr	r1, [pc, #1660]	; 18f9c <ASN1_STRING_length@plt+0x7028>
   1891c:	mov	r0, #6
   18920:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18924:	mov	r0, r4
   18928:	bl	11ba8 <free@plt>
   1892c:	add	r1, sp, #120	; 0x78
   18930:	mov	r0, r9
   18934:	bl	1b878 <ASN1_STRING_length@plt+0x9904>
   18938:	subs	r4, r0, #0
   1893c:	bne	1887c <ASN1_STRING_length@plt+0x6908>
   18940:	mov	r0, r9
   18944:	ldr	fp, [sp, #44]	; 0x2c
   18948:	bl	11a88 <fclose@plt>
   1894c:	ldr	r0, [sp, #40]	; 0x28
   18950:	bl	11ba8 <free@plt>
   18954:	ldr	r3, [sp, #76]	; 0x4c
   18958:	add	fp, fp, #1
   1895c:	cmp	fp, r3
   18960:	bcc	18844 <ASN1_STRING_length@plt+0x68d0>
   18964:	ldr	r9, [sp, #60]	; 0x3c
   18968:	ldr	fp, [sp, #64]	; 0x40
   1896c:	ldr	r0, [sp, #80]	; 0x50
   18970:	bl	11ba8 <free@plt>
   18974:	add	r3, sp, #4800	; 0x12c0
   18978:	add	r3, r3, #32
   1897c:	ldr	r3, [r3]
   18980:	cmp	r3, #0
   18984:	beq	19a38 <ASN1_STRING_length@plt+0x7ac4>
   18988:	ldr	r1, [sp, #84]	; 0x54
   1898c:	add	r0, sp, #84	; 0x54
   18990:	add	r1, r1, #4
   18994:	bl	17e14 <ASN1_STRING_length@plt+0x5ea0>
   18998:	cmp	r0, #0
   1899c:	blt	19a9c <ASN1_STRING_length@plt+0x7b28>
   189a0:	ldr	r3, [sp, #84]	; 0x54
   189a4:	add	r3, r3, #4096	; 0x1000
   189a8:	ldr	r4, [r3, #20]
   189ac:	cmp	r4, #0
   189b0:	beq	189cc <ASN1_STRING_length@plt+0x6a58>
   189b4:	add	r1, r4, #8
   189b8:	add	r0, sp, #84	; 0x54
   189bc:	bl	17e14 <ASN1_STRING_length@plt+0x5ea0>
   189c0:	ldr	r4, [r4]
   189c4:	cmp	r4, #0
   189c8:	bne	189b4 <ASN1_STRING_length@plt+0x6a40>
   189cc:	mov	r1, sl
   189d0:	ldr	r0, [sp, #112]	; 0x70
   189d4:	bl	1b2a8 <ASN1_STRING_length@plt+0x9334>
   189d8:	add	r5, sp, #92	; 0x5c
   189dc:	b	18a00 <ASN1_STRING_length@plt+0x6a8c>
   189e0:	ldr	r3, [sp, #120]	; 0x78
   189e4:	ldr	r2, [sp, #96]	; 0x60
   189e8:	mov	r1, r3
   189ec:	strh	r2, [r3, #56]	; 0x38
   189f0:	mov	r0, r5
   189f4:	bl	1a90c <ASN1_STRING_length@plt+0x8998>
   189f8:	cmp	r0, #0
   189fc:	blt	199d4 <ASN1_STRING_length@plt+0x7a60>
   18a00:	add	r2, sp, #120	; 0x78
   18a04:	mov	r1, #0
   18a08:	mov	r0, sl
   18a0c:	bl	1b2b8 <ASN1_STRING_length@plt+0x9344>
   18a10:	cmp	r0, #0
   18a14:	bne	189e0 <ASN1_STRING_length@plt+0x6a6c>
   18a18:	mov	r4, r0
   18a1c:	ldr	r0, [sp, #84]	; 0x54
   18a20:	ldr	r1, [pc, #1400]	; 18fa0 <ASN1_STRING_length@plt+0x702c>
   18a24:	add	r0, r0, #4
   18a28:	bl	173dc <ASN1_STRING_length@plt+0x5468>
   18a2c:	subs	r5, r0, #0
   18a30:	beq	18aa8 <ASN1_STRING_length@plt+0x6b34>
   18a34:	add	r6, sp, #4800	; 0x12c0
   18a38:	add	r6, r6, #52	; 0x34
   18a3c:	str	r6, [sp, #32]
   18a40:	mov	r2, r5
   18a44:	mov	r1, #4096	; 0x1000
   18a48:	mov	r0, r6
   18a4c:	bl	11a94 <fgets@plt>
   18a50:	cmp	r0, #0
   18a54:	beq	198e4 <ASN1_STRING_length@plt+0x7970>
   18a58:	mov	r0, r6
   18a5c:	bl	11c44 <strlen@plt>
   18a60:	add	r4, r4, #1
   18a64:	cmp	r0, #0
   18a68:	beq	18a40 <ASN1_STRING_length@plt+0x6acc>
   18a6c:	add	r3, sp, #6848	; 0x1ac0
   18a70:	add	r3, r3, #56	; 0x38
   18a74:	add	r0, r3, r0
   18a78:	ldrb	r3, [r0, #-2053]	; 0xfffff7fb
   18a7c:	cmp	r3, #10
   18a80:	beq	18a40 <ASN1_STRING_length@plt+0x6acc>
   18a84:	ldr	r2, [sp, #84]	; 0x54
   18a88:	str	r4, [sp]
   18a8c:	add	r2, r2, #4
   18a90:	ldr	r3, [pc, #1288]	; 18fa0 <ASN1_STRING_length@plt+0x702c>
   18a94:	ldr	r1, [pc, #1288]	; 18fa4 <ASN1_STRING_length@plt+0x7030>
   18a98:	mov	r0, #3
   18a9c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18aa0:	mov	r0, r5
   18aa4:	bl	11a88 <fclose@plt>
   18aa8:	ldr	r2, [sp, #96]	; 0x60
   18aac:	ldr	r1, [pc, #1268]	; 18fa8 <ASN1_STRING_length@plt+0x7034>
   18ab0:	mov	r0, #7
   18ab4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18ab8:	ldr	r3, [sp, #96]	; 0x60
   18abc:	ldr	r7, [sp, #92]	; 0x5c
   18ac0:	add	r3, r7, r3, lsl #2
   18ac4:	cmp	r7, r3
   18ac8:	strcc	r9, [sp, #32]
   18acc:	movcc	r8, r3
   18ad0:	bcc	18b30 <ASN1_STRING_length@plt+0x6bbc>
   18ad4:	b	1919c <ASN1_STRING_length@plt+0x7228>
   18ad8:	cmn	r0, #2
   18adc:	ldr	r4, [r5, #4]
   18ae0:	beq	18bb4 <ASN1_STRING_length@plt+0x6c40>
   18ae4:	rsb	r0, r0, #0
   18ae8:	bl	119f8 <strerror@plt>
   18aec:	mov	r2, r4
   18af0:	ldr	r1, [pc, #1204]	; 18fac <ASN1_STRING_length@plt+0x7038>
   18af4:	mov	r3, r0
   18af8:	mov	r0, #3
   18afc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18b00:	mov	r1, r5
   18b04:	ldr	r0, [r1], #16
   18b08:	bl	24ce4 <ASN1_STRING_length@plt+0x12d70>
   18b0c:	mov	r1, r5
   18b10:	ldr	r0, [r1], #20
   18b14:	bl	253a4 <ASN1_STRING_length@plt+0x13430>
   18b18:	ldr	r0, [r5]
   18b1c:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   18b20:	mov	r3, #0
   18b24:	cmp	r8, r7
   18b28:	str	r3, [r5]
   18b2c:	bls	19198 <ASN1_STRING_length@plt+0x7224>
   18b30:	ldr	r5, [r7], #4
   18b34:	mov	r3, #0
   18b38:	mov	r1, sl
   18b3c:	ldr	r0, [r5]
   18b40:	str	r3, [sp, #224]	; 0xe0
   18b44:	bl	251ac <ASN1_STRING_length@plt+0x13238>
   18b48:	cmp	r0, #0
   18b4c:	blt	18ad8 <ASN1_STRING_length@plt+0x6b64>
   18b50:	ldr	r4, [sp, #224]	; 0xe0
   18b54:	cmp	r4, #0
   18b58:	beq	19a18 <ASN1_STRING_length@plt+0x7aa4>
   18b5c:	add	r6, sp, #116	; 0x74
   18b60:	b	18b6c <ASN1_STRING_length@plt+0x6bf8>
   18b64:	cmp	r4, #0
   18b68:	beq	18bac <ASN1_STRING_length@plt+0x6c38>
   18b6c:	mov	r0, r4
   18b70:	bl	25168 <ASN1_STRING_length@plt+0x131f4>
   18b74:	mov	r9, r0
   18b78:	mov	r0, r4
   18b7c:	bl	25180 <ASN1_STRING_length@plt+0x1320c>
   18b80:	mov	r2, r9
   18b84:	str	r5, [sp, #8]
   18b88:	mov	r3, #0
   18b8c:	strd	r0, [sp]
   18b90:	mov	r1, r6
   18b94:	add	r0, sp, #84	; 0x54
   18b98:	bl	16b0c <ASN1_STRING_length@plt+0x4b98>
   18b9c:	ldr	r4, [r4]
   18ba0:	ldr	r0, [sp, #224]	; 0xe0
   18ba4:	cmp	r4, r0
   18ba8:	bne	18b64 <ASN1_STRING_length@plt+0x6bf0>
   18bac:	bl	251a8 <ASN1_STRING_length@plt+0x13234>
   18bb0:	b	18b00 <ASN1_STRING_length@plt+0x6b8c>
   18bb4:	mov	r2, r4
   18bb8:	ldr	r1, [pc, #1008]	; 18fb0 <ASN1_STRING_length@plt+0x703c>
   18bbc:	mov	r0, #7
   18bc0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18bc4:	b	18b00 <ASN1_STRING_length@plt+0x6b8c>
   18bc8:	str	r6, [sp]
   18bcc:	mov	r3, r7
   18bd0:	ldr	r2, [sp, #48]	; 0x30
   18bd4:	ldr	r1, [pc, #984]	; 18fb4 <ASN1_STRING_length@plt+0x7040>
   18bd8:	mov	r0, #3
   18bdc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18be0:	b	184dc <ASN1_STRING_length@plt+0x6568>
   18be4:	mov	r3, #0
   18be8:	ldr	r8, [pc, #968]	; 18fb8 <ASN1_STRING_length@plt+0x7044>
   18bec:	cmp	fp, r3
   18bf0:	movne	r8, fp
   18bf4:	str	r3, [sp, #76]	; 0x4c
   18bf8:	ldr	r5, [r8]
   18bfc:	str	r3, [sp, #80]	; 0x50
   18c00:	cmp	r5, r3
   18c04:	strne	r9, [sp, #32]
   18c08:	ldrne	r7, [pc, #940]	; 18fbc <ASN1_STRING_length@plt+0x7048>
   18c0c:	bne	18c30 <ASN1_STRING_length@plt+0x6cbc>
   18c10:	b	1896c <ASN1_STRING_length@plt+0x69f8>
   18c14:	mov	r2, r5
   18c18:	add	r1, sp, #76	; 0x4c
   18c1c:	add	r0, sp, #80	; 0x50
   18c20:	bl	15850 <ASN1_STRING_length@plt+0x38dc>
   18c24:	ldr	r5, [r8, #4]!
   18c28:	cmp	r5, #0
   18c2c:	beq	18820 <ASN1_STRING_length@plt+0x68ac>
   18c30:	add	r2, sp, #120	; 0x78
   18c34:	mov	r1, r5
   18c38:	mov	r0, #3
   18c3c:	bl	11d40 <__xstat64@plt>
   18c40:	subs	r3, r0, #0
   18c44:	bne	18d2c <ASN1_STRING_length@plt+0x6db8>
   18c48:	ldr	r2, [sp, #136]	; 0x88
   18c4c:	and	r2, r2, #61440	; 0xf000
   18c50:	cmp	r2, #16384	; 0x4000
   18c54:	bne	18c14 <ASN1_STRING_length@plt+0x6ca0>
   18c58:	mov	r0, r5
   18c5c:	bl	11a34 <opendir@plt>
   18c60:	subs	r6, r0, #0
   18c64:	bne	18cb4 <ASN1_STRING_length@plt+0x6d40>
   18c68:	b	1a02c <ASN1_STRING_length@plt+0x80b8>
   18c6c:	mov	r0, r6
   18c70:	bl	11cd4 <dirfd@plt>
   18c74:	mov	r3, sl
   18c78:	mov	r2, r4
   18c7c:	str	r9, [sp]
   18c80:	mov	r1, r0
   18c84:	mov	r0, #3
   18c88:	bl	11ee4 <__fxstatat64@plt>
   18c8c:	ldr	r3, [sp, #240]	; 0xf0
   18c90:	mov	r2, r5
   18c94:	and	r3, r3, #61440	; 0xf000
   18c98:	cmp	r3, #16384	; 0x4000
   18c9c:	mov	r3, r4
   18ca0:	beq	18d40 <ASN1_STRING_length@plt+0x6dcc>
   18ca4:	add	r1, sp, #76	; 0x4c
   18ca8:	add	r0, sp, #80	; 0x50
   18cac:	bl	15850 <ASN1_STRING_length@plt+0x38dc>
   18cb0:	mov	r0, r6
   18cb4:	bl	11e54 <readdir64@plt>
   18cb8:	cmp	r0, #0
   18cbc:	beq	18d10 <ASN1_STRING_length@plt+0x6d9c>
   18cc0:	ldrb	r3, [r0, #19]
   18cc4:	add	r4, r0, #19
   18cc8:	cmp	r3, #46	; 0x2e
   18ccc:	beq	18cb0 <ASN1_STRING_length@plt+0x6d3c>
   18cd0:	mov	r0, r4
   18cd4:	bl	11c44 <strlen@plt>
   18cd8:	cmp	r0, #5
   18cdc:	bls	18cf8 <ASN1_STRING_length@plt+0x6d84>
   18ce0:	sub	r0, r0, #5
   18ce4:	add	r0, r4, r0
   18ce8:	mov	r1, r7
   18cec:	bl	11f14 <strcmp@plt>
   18cf0:	subs	r9, r0, #0
   18cf4:	beq	18c6c <ASN1_STRING_length@plt+0x6cf8>
   18cf8:	mov	r3, r4
   18cfc:	mov	r2, r5
   18d00:	ldr	r1, [pc, #696]	; 18fc0 <ASN1_STRING_length@plt+0x704c>
   18d04:	mov	r0, #6
   18d08:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d0c:	b	18cb0 <ASN1_STRING_length@plt+0x6d3c>
   18d10:	mov	r0, r6
   18d14:	bl	11d28 <closedir@plt>
   18d18:	mov	r2, r5
   18d1c:	ldr	r1, [pc, #672]	; 18fc4 <ASN1_STRING_length@plt+0x7050>
   18d20:	mov	r0, #7
   18d24:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d28:	b	18c24 <ASN1_STRING_length@plt+0x6cb0>
   18d2c:	mov	r2, r5
   18d30:	ldr	r1, [pc, #656]	; 18fc8 <ASN1_STRING_length@plt+0x7054>
   18d34:	mov	r0, #7
   18d38:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d3c:	b	18c24 <ASN1_STRING_length@plt+0x6cb0>
   18d40:	ldr	r1, [pc, #644]	; 18fcc <ASN1_STRING_length@plt+0x7058>
   18d44:	mov	r0, #3
   18d48:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d4c:	b	18cb0 <ASN1_STRING_length@plt+0x6d3c>
   18d50:	bl	11f38 <__errno_location@plt>
   18d54:	mov	r2, r6
   18d58:	ldr	r1, [pc, #624]	; 18fd0 <ASN1_STRING_length@plt+0x705c>
   18d5c:	ldr	r6, [r0]
   18d60:	mov	r0, #3
   18d64:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d68:	mov	r0, r8
   18d6c:	rsb	r6, r6, #0
   18d70:	bl	11d28 <closedir@plt>
   18d74:	b	18404 <ASN1_STRING_length@plt+0x6490>
   18d78:	mov	r2, r7
   18d7c:	ldr	r1, [pc, #592]	; 18fd4 <ASN1_STRING_length@plt+0x7060>
   18d80:	mov	r0, #2
   18d84:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18d88:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   18d8c:	bl	11f38 <__errno_location@plt>
   18d90:	ldr	r7, [r0]
   18d94:	rsb	r7, r7, #0
   18d98:	ldr	r0, [sp, #108]	; 0x6c
   18d9c:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   18da0:	b	180c0 <ASN1_STRING_length@plt+0x614c>
   18da4:	mov	r0, r5
   18da8:	bl	16a2c <ASN1_STRING_length@plt+0x4ab8>
   18dac:	mov	r1, r7
   18db0:	mov	r2, sl
   18db4:	mov	r0, #0
   18db8:	bl	11dd0 <strtok_r@plt>
   18dbc:	subs	r1, r0, #0
   18dc0:	bne	18da4 <ASN1_STRING_length@plt+0x6e30>
   18dc4:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   18dc8:	str	r5, [sp]
   18dcc:	ldr	r3, [sp, #120]	; 0x78
   18dd0:	ldr	r2, [sp, #32]
   18dd4:	ldr	r1, [pc, #508]	; 18fd8 <ASN1_STRING_length@plt+0x7064>
   18dd8:	mov	r0, #3
   18ddc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18de0:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   18de4:	mov	r2, sl
   18de8:	mov	r1, r7
   18dec:	bl	11dd0 <strtok_r@plt>
   18df0:	mov	r2, sl
   18df4:	mov	r1, r7
   18df8:	mov	r6, r0
   18dfc:	mov	r0, fp
   18e00:	bl	11dd0 <strtok_r@plt>
   18e04:	mov	r2, sl
   18e08:	mov	r1, r7
   18e0c:	mov	r8, r0
   18e10:	mov	r0, fp
   18e14:	bl	11dd0 <strtok_r@plt>
   18e18:	cmp	r6, #0
   18e1c:	clz	r3, r8
   18e20:	lsr	r3, r3, #5
   18e24:	moveq	r3, #1
   18e28:	cmp	r0, #0
   18e2c:	movne	fp, r3
   18e30:	moveq	fp, #1
   18e34:	cmp	fp, #0
   18e38:	str	r0, [sp, #48]	; 0x30
   18e3c:	bne	18dc8 <ASN1_STRING_length@plt+0x6e54>
   18e40:	mov	r1, r8
   18e44:	add	r0, sp, #720	; 0x2d0
   18e48:	bl	16ca8 <ASN1_STRING_length@plt+0x4d34>
   18e4c:	cmp	r0, #0
   18e50:	beq	1917c <ASN1_STRING_length@plt+0x7208>
   18e54:	mov	r0, r6
   18e58:	bl	11c44 <strlen@plt>
   18e5c:	mov	r8, r0
   18e60:	str	r0, [sp, #56]	; 0x38
   18e64:	ldr	r0, [sp, #48]	; 0x30
   18e68:	bl	11c44 <strlen@plt>
   18e6c:	mov	r5, r0
   18e70:	add	r0, r8, r0
   18e74:	add	r0, r0, #10
   18e78:	bl	11d64 <malloc@plt>
   18e7c:	subs	r8, r0, #0
   18e80:	beq	1a054 <ASN1_STRING_length@plt+0x80e0>
   18e84:	add	r3, r8, #8
   18e88:	mov	r2, r5
   18e8c:	ldr	r1, [sp, #48]	; 0x30
   18e90:	mov	r0, r3
   18e94:	bl	11c5c <memcpy@plt>
   18e98:	add	r2, r8, r5
   18e9c:	mov	r1, r6
   18ea0:	ldr	r6, [sp, #56]	; 0x38
   18ea4:	mov	ip, #47	; 0x2f
   18ea8:	add	r5, r5, #1
   18eac:	strb	ip, [r2, #8]
   18eb0:	mov	r2, r6
   18eb4:	mov	r3, r0
   18eb8:	add	r0, r0, r5
   18ebc:	add	r5, r6, r5
   18ec0:	str	r3, [sp, #48]	; 0x30
   18ec4:	bl	11c5c <memcpy@plt>
   18ec8:	ldr	r3, [sp, #48]	; 0x30
   18ecc:	add	r1, r8, r5
   18ed0:	mov	r2, r3
   18ed4:	strb	fp, [r1, #8]
   18ed8:	mov	r0, #7
   18edc:	ldr	r1, [pc, #248]	; 18fdc <ASN1_STRING_length@plt+0x7068>
   18ee0:	str	r5, [r8, #4]
   18ee4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   18ee8:	add	r3, sp, #4800	; 0x12c0
   18eec:	add	r3, r3, #28
   18ef0:	add	r2, sp, #4800	; 0x12c0
   18ef4:	ldr	r3, [r3]
   18ef8:	add	r2, r2, #28
   18efc:	str	r3, [r8]
   18f00:	str	r8, [r2]
   18f04:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   18f08:	andeq	pc, r3, r8, ror #25
   18f0c:	andeq	ip, r2, r8, lsl r3
   18f10:	andeq	ip, r2, r8, asr #8
   18f14:	andeq	r0, r4, r0, asr r0
   18f18:	andeq	r1, r0, r8, lsl r0
   18f1c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   18f20:	andeq	sl, r2, r0, ror #13
   18f24:	strdeq	sl, [r2], -r0
   18f28:	andeq	r0, r4, r0, lsr #32
   18f2c:	andeq	r0, r4, r4, asr #32
   18f30:	andeq	ip, r2, r8, lsr r8
   18f34:	andeq	ip, r2, r8, asr r8
   18f38:	andeq	r0, r4, r8, lsr r0
   18f3c:	andeq	ip, r2, r8, ror r8
   18f40:	andeq	sl, r2, ip, ror sl
   18f44:	andeq	r0, r4, r0, asr #32
   18f48:	andeq	sp, r2, r4, rrx
   18f4c:	andeq	fp, r2, r0, lsr #2
   18f50:	andeq	ip, r2, r4, lsl #25
   18f54:	andeq	r5, r1, r8, ror #8
   18f58:	andeq	sp, r2, ip, lsr r0
   18f5c:	andeq	ip, r2, r8, lsl #26
   18f60:	andeq	ip, r2, ip, lsl sp
   18f64:	andeq	ip, r2, r0, lsr #26
   18f68:	andeq	ip, r2, r0, asr ip
   18f6c:	andeq	sp, r2, ip, asr r4
   18f70:	muleq	r2, r8, sp
   18f74:			; <UNDEFINED> instruction: 0x0002cdb0
   18f78:	andeq	ip, r2, r8, asr ip
   18f7c:	andeq	ip, r2, r0, asr sp
   18f80:	andeq	ip, r2, ip, lsr #14
   18f84:	andeq	ip, r2, r8, asr #29
   18f88:	andeq	ip, r2, ip, asr #29
   18f8c:	ldrdeq	ip, [r2], -r4
   18f90:	andeq	ip, r2, r0, lsl #12
   18f94:	andeq	ip, r2, r0, lsr #31
   18f98:	andeq	ip, r2, r8, lsr #31
   18f9c:			; <UNDEFINED> instruction: 0x0002cfb8
   18fa0:	andeq	sp, r2, r0, lsr r0
   18fa4:	andeq	sp, r2, r0, asr #32
   18fa8:	andeq	sp, r2, r8, rrx
   18fac:	strdeq	sp, [r2], -ip
   18fb0:	andeq	sp, r2, r0, ror #1
   18fb4:	andeq	ip, r2, r8, lsr #26
   18fb8:	andeq	r0, r4, r0, lsl r0
   18fbc:	andeq	ip, r2, ip, asr #28
   18fc0:	andeq	ip, r2, r4, asr lr
   18fc4:	andeq	ip, r2, r8, lsr #28
   18fc8:	strdeq	ip, [r2], -r8
   18fcc:	andeq	ip, r2, r8, ror lr
   18fd0:	muleq	r2, r0, ip
   18fd4:			; <UNDEFINED> instruction: 0x0002ccb8
   18fd8:	andeq	ip, r2, r0, ror #31
   18fdc:	andeq	ip, r2, ip, lsr #30
   18fe0:	andeq	ip, r2, ip, lsl #31
   18fe4:	andeq	ip, r2, r0, ror #29
   18fe8:	andeq	sp, r2, r4, lsl #1
   18fec:	strheq	sp, [r2], -r0
   18ff0:	andeq	sp, r2, r4, ror r1
   18ff4:	andeq	sp, r2, r0, lsr #4
   18ff8:	strdeq	ip, [r2], -r4
   18ffc:	andeq	ip, r2, r0, ror r2
   19000:	andeq	sp, r2, ip, asr #3
   19004:	andeq	sp, r2, r0, asr r1
   19008:	andeq	sp, r2, r0, lsr #2
   1900c:	andeq	sp, r2, r8, lsr r2
   19010:	strdeq	pc, [r0], -lr
   19014:	ldrdeq	r5, [r1], -r8
   19018:	andeq	sp, r2, ip, lsl #6
   1901c:	muleq	r4, r0, r0
   19020:	andeq	ip, r2, r0, asr #10
   19024:	andeq	sp, r2, r0, asr #6
   19028:	andeq	sp, r2, ip, ror #6
   1902c:	andeq	sp, r2, r0, ror #7
   19030:	andeq	sp, r2, ip, lsl #3
   19034:			; <UNDEFINED> instruction: 0x0002d1b0
   19038:	strdeq	sp, [r2], -r4
   1903c:			; <UNDEFINED> instruction: 0x0002ceb4
   19040:	andeq	ip, r2, r4, ror #27
   19044:	andeq	ip, r2, ip, asr #27
   19048:	andeq	ip, r2, r0, ror ip
   1904c:	andeq	ip, r2, r0, asr #30
   19050:	andeq	ip, r2, r8, lsl r8
   19054:	andeq	r0, r4, r8, asr #32
   19058:	andeq	ip, r2, r0, lsl #16
   1905c:	andeq	sp, r2, r8, lsl r0
   19060:	andeq	ip, r2, ip, asr #14
   19064:	andeq	r5, r1, r0, asr #5
   19068:	strdeq	ip, [r2], -r0
   1906c:	andeq	sp, r2, r8, lsl r4
   19070:	andeq	sp, r2, r0, asr r3
   19074:	andeq	sp, r2, r0, lsl r0
   19078:	andeq	ip, r2, ip, ror sp
   1907c:	andeq	ip, r2, r4, ror #26
   19080:	andeq	sp, r2, ip, lsr r4
   19084:	andeq	ip, r2, r8, lsl #15
   19088:	andeq	sp, r2, r0, asr #5
   1908c:	andeq	sp, r2, r8, ror #5
   19090:	andeq	sp, r2, r0, asr #7
   19094:	andeq	sp, r2, r0, lsr #7
   19098:	andeq	sp, r2, r0, ror r3
   1909c:	andeq	sp, r2, r8, lsl #7
   190a0:	andeq	sp, r2, r8, ror #8
   190a4:	andeq	r0, r0, r4, lsl #15
   190a8:	muleq	r2, r0, r2
   190ac:	andeq	sp, r2, r4, lsr #5
   190b0:	andeq	ip, r2, r0, lsr r2
   190b4:	strdeq	sp, [r2], -ip
   190b8:	andeq	ip, r2, r4, lsl lr
   190bc:	andeq	ip, r2, r0, asr r2
   190c0:	andeq	r0, r0, r7, ror #14
   190c4:	andeq	sp, r2, ip, ror #4
   190c8:			; <UNDEFINED> instruction: 0x0002d4bc
   190cc:	andeq	ip, r2, ip, lsl #30
   190d0:	andeq	ip, r2, ip, ror #30
   190d4:	mov	r2, sl
   190d8:	mov	r1, r7
   190dc:	bl	11dd0 <strtok_r@plt>
   190e0:	mov	r2, sl
   190e4:	mov	r1, r7
   190e8:	mov	r6, r0
   190ec:	mov	r0, r8
   190f0:	bl	11dd0 <strtok_r@plt>
   190f4:	cmp	r0, #0
   190f8:	cmpne	r6, #0
   190fc:	mov	r8, r0
   19100:	beq	18dc8 <ASN1_STRING_length@plt+0x6e54>
   19104:	mov	r1, r6
   19108:	add	r0, sp, #720	; 0x2d0
   1910c:	bl	16ca8 <ASN1_STRING_length@plt+0x4d34>
   19110:	cmp	r0, #0
   19114:	beq	19840 <ASN1_STRING_length@plt+0x78cc>
   19118:	mov	r0, r8
   1911c:	bl	11c44 <strlen@plt>
   19120:	mov	r6, r0
   19124:	add	r0, r0, #9
   19128:	bl	11d64 <malloc@plt>
   1912c:	subs	r5, r0, #0
   19130:	beq	1a064 <ASN1_STRING_length@plt+0x80f0>
   19134:	add	r3, r5, #8
   19138:	mov	r0, r3
   1913c:	mov	r1, r8
   19140:	add	r2, r6, #1
   19144:	bl	11c5c <memcpy@plt>
   19148:	str	r6, [r5, #4]
   1914c:	ldr	r1, [pc, #-372]	; 18fe0 <ASN1_STRING_length@plt+0x706c>
   19150:	mov	r2, r0
   19154:	mov	r0, #7
   19158:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1915c:	add	r3, sp, #4800	; 0x12c0
   19160:	add	r3, r3, #36	; 0x24
   19164:	add	r2, sp, #4800	; 0x12c0
   19168:	ldr	r3, [r3]
   1916c:	add	r2, r2, #36	; 0x24
   19170:	str	r3, [r5]
   19174:	str	r5, [r2]
   19178:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   1917c:	str	r8, [sp]
   19180:	ldr	r3, [sp, #120]	; 0x78
   19184:	ldr	r2, [sp, #32]
   19188:	ldr	r1, [pc, #-428]	; 18fe4 <ASN1_STRING_length@plt+0x7070>
   1918c:	mov	r0, #6
   19190:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19194:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   19198:	ldr	r9, [sp, #32]
   1919c:	ldr	r0, [sp, #116]	; 0x74
   191a0:	ldr	r4, [sp, #96]	; 0x60
   191a4:	bl	1b2a0 <ASN1_STRING_length@plt+0x932c>
   191a8:	mov	r2, r4
   191ac:	ldr	r1, [pc, #-460]	; 18fe8 <ASN1_STRING_length@plt+0x7074>
   191b0:	mov	r3, r0
   191b4:	mov	r0, #7
   191b8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   191bc:	ldr	r0, [sp, #116]	; 0x74
   191c0:	ldr	r4, [sp, #96]	; 0x60
   191c4:	bl	1b2a0 <ASN1_STRING_length@plt+0x932c>
   191c8:	mov	r2, r4
   191cc:	ldr	r1, [pc, #-488]	; 18fec <ASN1_STRING_length@plt+0x7078>
   191d0:	mov	r3, r0
   191d4:	mov	r0, #7
   191d8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   191dc:	ldr	r2, [sp, #96]	; 0x60
   191e0:	ldr	r3, [sp, #92]	; 0x5c
   191e4:	add	r2, r3, r2, lsl #2
   191e8:	cmp	r3, r2
   191ec:	str	r2, [sp, #44]	; 0x2c
   191f0:	strcc	r3, [sp, #40]	; 0x28
   191f4:	strcc	r9, [sp, #48]	; 0x30
   191f8:	strcc	fp, [sp, #56]	; 0x38
   191fc:	bcs	193b0 <ASN1_STRING_length@plt+0x743c>
   19200:	ldr	r3, [sp, #40]	; 0x28
   19204:	ldr	r6, [r3], #4
   19208:	str	r3, [sp, #40]	; 0x28
   1920c:	ldr	r3, [r6, #20]
   19210:	ldr	r2, [r6, #4]
   19214:	cmp	r3, #0
   19218:	beq	19390 <ASN1_STRING_length@plt+0x741c>
   1921c:	ldr	r1, [pc, #-564]	; 18ff0 <ASN1_STRING_length@plt+0x707c>
   19220:	mov	r0, #7
   19224:	ldr	r5, [sp, #84]	; 0x54
   19228:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1922c:	ldr	r4, [r6, #20]
   19230:	cmp	r4, #0
   19234:	beq	1939c <ASN1_STRING_length@plt+0x7428>
   19238:	add	fp, r5, #4096	; 0x1000
   1923c:	b	192c0 <ASN1_STRING_length@plt+0x734c>
   19240:	ldr	r3, [r5]
   19244:	ldr	r1, [pc, #-600]	; 18ff4 <ASN1_STRING_length@plt+0x7080>
   19248:	cmp	r3, #0
   1924c:	mov	r2, ip
   19250:	ldrne	r3, [r3, #4]
   19254:	ldreq	r3, [pc, #-612]	; 18ff8 <ASN1_STRING_length@plt+0x7084>
   19258:	mov	r0, #7
   1925c:	str	r3, [sp]
   19260:	mov	r3, r8
   19264:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19268:	ldr	r1, [r5]
   1926c:	cmp	r1, #0
   19270:	beq	192a8 <ASN1_STRING_length@plt+0x7334>
   19274:	add	r0, r6, #24
   19278:	bl	1a974 <ASN1_STRING_length@plt+0x8a00>
   1927c:	cmp	r0, #0
   19280:	blt	192a8 <ASN1_STRING_length@plt+0x7334>
   19284:	ldr	r0, [r5]
   19288:	ldr	r1, [r6, #4]
   1928c:	mov	r2, r8
   19290:	ldrh	ip, [r0, #58]	; 0x3a
   19294:	ldr	r3, [r0, #4]
   19298:	add	ip, ip, #1
   1929c:	strh	ip, [r0, #58]	; 0x3a
   192a0:	ldr	r0, [pc, #-684]	; 18ffc <ASN1_STRING_length@plt+0x7088>
   192a4:	bl	17358 <ASN1_STRING_length@plt+0x53e4>
   192a8:	ldr	r4, [r4]
   192ac:	ldr	r3, [r6, #20]
   192b0:	cmp	r4, r3
   192b4:	beq	1939c <ASN1_STRING_length@plt+0x7428>
   192b8:	cmp	r4, #0
   192bc:	beq	1939c <ASN1_STRING_length@plt+0x7428>
   192c0:	mov	r0, r4
   192c4:	bl	25348 <ASN1_STRING_length@plt+0x133d4>
   192c8:	mov	r7, r0
   192cc:	mov	r0, r4
   192d0:	bl	25360 <ASN1_STRING_length@plt+0x133ec>
   192d4:	strd	r0, [sp, #32]
   192d8:	mov	r0, r4
   192dc:	bl	25388 <ASN1_STRING_length@plt+0x13414>
   192e0:	ldrb	r2, [r7]
   192e4:	ldr	r3, [sp, #84]	; 0x54
   192e8:	cmp	r2, #46	; 0x2e
   192ec:	add	r3, r3, #4096	; 0x1000
   192f0:	ldrbeq	r2, [r7, #1]
   192f4:	ldrb	r3, [r3, #8]
   192f8:	addeq	r1, r7, #1
   192fc:	movne	r1, r7
   19300:	cmp	r3, r2
   19304:	addeq	r1, r1, #1
   19308:	mov	r9, r0
   1930c:	ldr	r0, [sp, #116]	; 0x74
   19310:	bl	1aef4 <ASN1_STRING_length@plt+0x8f80>
   19314:	subs	r5, r0, #0
   19318:	beq	19758 <ASN1_STRING_length@plt+0x77e4>
   1931c:	ldrb	r3, [fp, #9]
   19320:	add	r8, r5, #16
   19324:	ldr	ip, [r6, #4]
   19328:	cmp	r3, #0
   1932c:	beq	19240 <ASN1_STRING_length@plt+0x72cc>
   19330:	ldrd	r2, [sp, #32]
   19334:	ldrd	r0, [r5, #8]
   19338:	cmp	r3, r1
   1933c:	cmpeq	r2, r0
   19340:	movne	r3, #1
   19344:	moveq	r3, #0
   19348:	cmp	r9, #87	; 0x57
   1934c:	moveq	r9, #0
   19350:	andne	r9, r3, #1
   19354:	cmp	r9, #0
   19358:	beq	19240 <ASN1_STRING_length@plt+0x72cc>
   1935c:	ldrd	r2, [sp, #32]
   19360:	strd	r0, [sp]
   19364:	str	ip, [sp, #8]
   19368:	strd	r2, [sp, #16]
   1936c:	ldr	r1, [pc, #-884]	; 19000 <ASN1_STRING_length@plt+0x708c>
   19370:	mov	r2, r8
   19374:	mov	r0, #7
   19378:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1937c:	ldrb	r3, [fp, #10]
   19380:	cmp	r3, #0
   19384:	bne	19798 <ASN1_STRING_length@plt+0x7824>
   19388:	ldr	ip, [r6, #4]
   1938c:	b	19240 <ASN1_STRING_length@plt+0x72cc>
   19390:	ldr	r1, [pc, #-916]	; 19004 <ASN1_STRING_length@plt+0x7090>
   19394:	mov	r0, #7
   19398:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1939c:	ldrd	r2, [sp, #40]	; 0x28
   193a0:	cmp	r3, r2
   193a4:	bhi	19200 <ASN1_STRING_length@plt+0x728c>
   193a8:	ldr	r9, [sp, #48]	; 0x30
   193ac:	ldr	fp, [sp, #56]	; 0x38
   193b0:	ldr	r0, [sp, #116]	; 0x74
   193b4:	ldr	r4, [sp, #96]	; 0x60
   193b8:	bl	1b2a0 <ASN1_STRING_length@plt+0x932c>
   193bc:	mov	r2, r4
   193c0:	ldr	r1, [pc, #-960]	; 19008 <ASN1_STRING_length@plt+0x7094>
   193c4:	mov	r3, r0
   193c8:	mov	r0, #7
   193cc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   193d0:	ldr	r5, [sp, #96]	; 0x60
   193d4:	uxth	r3, r5
   193d8:	str	r3, [sp, #40]	; 0x28
   193dc:	lsl	r2, r3, #1
   193e0:	add	r0, r2, r3
   193e4:	str	r2, [sp, #32]
   193e8:	lsl	r0, r0, #1
   193ec:	bl	11d64 <malloc@plt>
   193f0:	subs	r8, r0, #0
   193f4:	beq	18814 <ASN1_STRING_length@plt+0x68a0>
   193f8:	ldr	r2, [sp, #40]	; 0x28
   193fc:	ldr	r1, [pc, #-1016]	; 1900c <ASN1_STRING_length@plt+0x7098>
   19400:	mov	r0, #7
   19404:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19408:	ldr	r2, [sp, #96]	; 0x60
   1940c:	ldr	r3, [pc, #-1028]	; 19010 <ASN1_STRING_length@plt+0x709c>
   19410:	ldr	r1, [sp, #32]
   19414:	cmp	r2, r3
   19418:	str	r2, [sp, #44]	; 0x2c
   1941c:	add	r4, r8, r1
   19420:	bhi	1a040 <ASN1_STRING_length@plt+0x80cc>
   19424:	uxth	r5, r5
   19428:	cmp	r5, #0
   1942c:	ldr	r7, [sp, #92]	; 0x5c
   19430:	beq	19554 <ASN1_STRING_length@plt+0x75e0>
   19434:	sub	r3, r8, #2
   19438:	mov	ip, #0
   1943c:	str	r3, [sp, #48]	; 0x30
   19440:	mov	r2, r3
   19444:	mov	r6, ip
   19448:	sub	r3, r7, #4
   1944c:	ldr	r1, [r3, #4]!
   19450:	ldrh	r1, [r1, #58]	; 0x3a
   19454:	cmp	r1, #0
   19458:	strh	r1, [r2, #2]!
   1945c:	lsleq	r1, ip, #1
   19460:	addeq	r0, ip, #1
   19464:	strheq	r6, [r4, r1]
   19468:	add	r6, r6, #1
   1946c:	uxtheq	ip, r0
   19470:	uxth	r6, r6
   19474:	cmp	r5, r6
   19478:	bne	1944c <ASN1_STRING_length@plt+0x74d8>
   1947c:	cmp	ip, #0
   19480:	beq	19af4 <ASN1_STRING_length@plt+0x7b80>
   19484:	str	r9, [sp, #56]	; 0x38
   19488:	ldr	r9, [sp, #40]	; 0x28
   1948c:	mov	r5, #0
   19490:	sub	ip, ip, #1
   19494:	add	r3, r5, r9
   19498:	uxth	ip, ip
   1949c:	lsl	r3, r3, #1
   194a0:	lsl	r2, ip, #1
   194a4:	add	r1, r5, #1
   194a8:	ldrh	r2, [r4, r2]
   194ac:	strh	r2, [r4, r3]
   194b0:	ldr	r3, [r7, r2, lsl #2]
   194b4:	ldr	lr, [r3, #28]
   194b8:	ldr	r2, [r3, #24]
   194bc:	str	r5, [r3, #52]	; 0x34
   194c0:	add	lr, r2, lr, lsl #2
   194c4:	cmp	r2, lr
   194c8:	uxth	r5, r1
   194cc:	bcs	19540 <ASN1_STRING_length@plt+0x75cc>
   194d0:	ldr	r3, [r2]
   194d4:	ldrh	r1, [r3, #56]	; 0x38
   194d8:	lsl	r3, r1, #1
   194dc:	add	r0, r8, r3
   194e0:	ldrh	r3, [r8, r3]
   194e4:	cmp	r3, #0
   194e8:	beq	19fc0 <ASN1_STRING_length@plt+0x804c>
   194ec:	add	r2, r2, #4
   194f0:	b	19514 <ASN1_STRING_length@plt+0x75a0>
   194f4:	ldr	r3, [r3]
   194f8:	add	r2, r2, #4
   194fc:	ldrh	r1, [r3, #56]	; 0x38
   19500:	lsl	r3, r1, #1
   19504:	add	r0, r8, r3
   19508:	ldrh	r3, [r8, r3]
   1950c:	cmp	r3, #0
   19510:	beq	19fc0 <ASN1_STRING_length@plt+0x804c>
   19514:	sub	r3, r3, #1
   19518:	uxth	r3, r3
   1951c:	cmp	r3, #0
   19520:	strh	r3, [r0]
   19524:	lsleq	r3, ip, #1
   19528:	addeq	r0, ip, #1
   1952c:	strheq	r1, [r4, r3]
   19530:	uxtheq	ip, r0
   19534:	cmp	lr, r2
   19538:	mov	r3, r2
   1953c:	bhi	194f4 <ASN1_STRING_length@plt+0x7580>
   19540:	cmp	ip, #0
   19544:	bne	19490 <ASN1_STRING_length@plt+0x751c>
   19548:	cmp	r6, r5
   1954c:	ldr	r9, [sp, #56]	; 0x38
   19550:	bhi	19af4 <ASN1_STRING_length@plt+0x7b80>
   19554:	ldr	r3, [sp, #44]	; 0x2c
   19558:	add	r5, r7, r3, lsl #2
   1955c:	cmp	r7, r5
   19560:	ldrcc	r6, [pc, #-1364]	; 19014 <ASN1_STRING_length@plt+0x70a0>
   19564:	bcs	1958c <ASN1_STRING_length@plt+0x7618>
   19568:	ldr	r0, [r7], #4
   1956c:	ldr	r3, [r0, #28]
   19570:	cmp	r3, #1
   19574:	bls	19584 <ASN1_STRING_length@plt+0x7610>
   19578:	add	r0, r0, #24
   1957c:	mov	r1, r6
   19580:	bl	1a9e0 <ASN1_STRING_length@plt+0x8a6c>
   19584:	cmp	r5, r7
   19588:	bhi	19568 <ASN1_STRING_length@plt+0x75f4>
   1958c:	ldr	r2, [sp, #40]	; 0x28
   19590:	ldr	r1, [pc, #-1408]	; 19018 <ASN1_STRING_length@plt+0x70a4>
   19594:	mov	r0, #7
   19598:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1959c:	mov	r0, r8
   195a0:	bl	11ba8 <free@plt>
   195a4:	ldr	r3, [sp, #84]	; 0x54
   195a8:	mov	r0, sl
   195ac:	mov	r1, #0
   195b0:	add	sl, r3, #4
   195b4:	bl	11bfc <gettimeofday@plt>
   195b8:	ldr	r3, [sp, #52]	; 0x34
   195bc:	cmp	r3, #0
   195c0:	beq	19ab8 <ASN1_STRING_length@plt+0x7b44>
   195c4:	ldr	r5, [pc, #-1456]	; 1901c <ASN1_STRING_length@plt+0x70a8>
   195c8:	ldr	r3, [pc, #-1456]	; 19020 <ASN1_STRING_length@plt+0x70ac>
   195cc:	add	r2, sp, #6848	; 0x1ac0
   195d0:	str	r3, [r5]
   195d4:	add	r3, sp, #4800	; 0x12c0
   195d8:	add	r3, r3, #56	; 0x38
   195dc:	add	r2, r2, #56	; 0x38
   195e0:	str	sl, [sp, #44]	; 0x2c
   195e4:	ldr	r4, [pc, #-1484]	; 19020 <ASN1_STRING_length@plt+0x70ac>
   195e8:	str	r2, [sp, #32]
   195ec:	ldr	r8, [sp, #52]	; 0x34
   195f0:	str	fp, [sp, #40]	; 0x28
   195f4:	mov	sl, r3
   195f8:	b	19628 <ASN1_STRING_length@plt+0x76b4>
   195fc:	ldr	r3, [r5]
   19600:	mov	r1, r8
   19604:	add	r0, sp, #84	; 0x54
   19608:	ldr	r3, [r3, #4]
   1960c:	blx	r3
   19610:	ldr	r4, [r5]
   19614:	ldr	r3, [r4, #8]
   19618:	add	r4, r4, #8
   1961c:	cmp	r3, #0
   19620:	str	r4, [r5]
   19624:	beq	19a90 <ASN1_STRING_length@plt+0x7b1c>
   19628:	ldr	ip, [sp, #32]
   1962c:	mov	r3, #0
   19630:	mov	r1, r3
   19634:	mov	r2, #251	; 0xfb
   19638:	mov	r0, sl
   1963c:	str	r3, [ip, #-2052]	; 0xfffff7fc
   19640:	bl	11b18 <memset@plt>
   19644:	cmp	r8, #0
   19648:	bne	195fc <ASN1_STRING_length@plt+0x7688>
   1964c:	ldr	r4, [r4]
   19650:	bl	11e18 <getpid@plt>
   19654:	ldr	r1, [sp, #224]	; 0xe0
   19658:	ldr	r2, [sp, #228]	; 0xe4
   1965c:	ldr	ip, [pc, #-1600]	; 19024 <ASN1_STRING_length@plt+0x70b0>
   19660:	mov	r3, #255	; 0xff
   19664:	sub	r7, sl, #4
   19668:	str	r4, [sp, #4]
   1966c:	str	ip, [sp]
   19670:	str	r1, [sp, #16]
   19674:	str	r2, [sp, #12]
   19678:	mov	r1, r3
   1967c:	mov	r2, #1
   19680:	str	r0, [sp, #8]
   19684:	mov	r0, r7
   19688:	bl	11cc8 <__snprintf_chk@plt>
   1968c:	mov	r1, r7
   19690:	mov	r3, #420	; 0x1a4
   19694:	mov	r2, #193	; 0xc1
   19698:	mov	r0, r9
   1969c:	bl	11bf0 <openat64@plt>
   196a0:	subs	r4, r0, #0
   196a4:	blt	199f0 <ASN1_STRING_length@plt+0x7a7c>
   196a8:	ldr	r1, [pc, #-1672]	; 19028 <ASN1_STRING_length@plt+0x70b4>
   196ac:	bl	11ce0 <fdopen@plt>
   196b0:	subs	r6, r0, #0
   196b4:	beq	19ee0 <ASN1_STRING_length@plt+0x7f6c>
   196b8:	ldr	r3, [r5]
   196bc:	mov	r1, r6
   196c0:	add	r0, sp, #84	; 0x54
   196c4:	ldr	r3, [r3, #4]
   196c8:	blx	r3
   196cc:	mov	r4, r0
   196d0:	mov	r0, r6
   196d4:	bl	11eb4 <ferror@plt>
   196d8:	mov	fp, r0
   196dc:	mov	r0, r6
   196e0:	bl	11a88 <fclose@plt>
   196e4:	cmp	r4, #0
   196e8:	orr	r6, fp, r0
   196ec:	blt	19e88 <ASN1_STRING_length@plt+0x7f14>
   196f0:	ldr	r4, [r5]
   196f4:	mov	r2, r9
   196f8:	mov	r1, r7
   196fc:	ldr	r3, [r4]
   19700:	mov	r0, r9
   19704:	bl	11b84 <renameat@plt>
   19708:	cmp	r0, #0
   1970c:	bne	19e54 <ASN1_STRING_length@plt+0x7ee0>
   19710:	cmp	r6, #0
   19714:	beq	19614 <ASN1_STRING_length@plt+0x76a0>
   19718:	mov	r0, #28
   1971c:	ldr	r4, [r4]
   19720:	ldr	fp, [sp, #40]	; 0x28
   19724:	bl	119f8 <strerror@plt>
   19728:	mov	r2, r4
   1972c:	ldr	r1, [pc, #-1800]	; 1902c <ASN1_STRING_length@plt+0x70b8>
   19730:	mvn	r4, #27
   19734:	mov	r3, r0
   19738:	mov	r0, #3
   1973c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19740:	lsr	r4, r4, #31
   19744:	cmn	r9, #1
   19748:	beq	185d8 <ASN1_STRING_length@plt+0x6664>
   1974c:	mov	r0, r9
   19750:	bl	11d04 <close@plt>
   19754:	b	185d8 <ASN1_STRING_length@plt+0x6664>
   19758:	ldr	r2, [r6, #4]
   1975c:	mov	r3, r9
   19760:	str	r7, [sp]
   19764:	ldr	r1, [pc, #-1852]	; 19030 <ASN1_STRING_length@plt+0x70bc>
   19768:	mov	r0, #7
   1976c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19770:	ldrb	r3, [fp, #10]
   19774:	cmp	r3, #0
   19778:	cmpne	r9, #87	; 0x57
   1977c:	beq	192a8 <ASN1_STRING_length@plt+0x7334>
   19780:	mov	r3, r7
   19784:	ldr	r2, [r6, #4]
   19788:	ldr	r1, [pc, #-1884]	; 19034 <ASN1_STRING_length@plt+0x70c0>
   1978c:	mov	r0, #4
   19790:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19794:	b	192a8 <ASN1_STRING_length@plt+0x7334>
   19798:	mov	r3, r7
   1979c:	ldr	r2, [r6, #4]
   197a0:	ldr	r1, [pc, #-1904]	; 19038 <ASN1_STRING_length@plt+0x70c4>
   197a4:	mov	r0, #4
   197a8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   197ac:	b	19388 <ASN1_STRING_length@plt+0x7414>
   197b0:	ldr	r2, [sp, #32]
   197b4:	ldr	r1, [pc, #-1920]	; 1903c <ASN1_STRING_length@plt+0x70c8>
   197b8:	mov	r0, #3
   197bc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   197c0:	b	1894c <ASN1_STRING_length@plt+0x69d8>
   197c4:	add	r3, sp, #4800	; 0x12c0
   197c8:	add	r3, r3, #26
   197cc:	ldrb	r3, [r3]
   197d0:	cmp	r3, #0
   197d4:	beq	1877c <ASN1_STRING_length@plt+0x6808>
   197d8:	ldr	r1, [pc, #-1952]	; 19040 <ASN1_STRING_length@plt+0x70cc>
   197dc:	mov	r0, #4
   197e0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   197e4:	add	r3, sp, #4800	; 0x12c0
   197e8:	add	r3, r3, #26
   197ec:	ldr	r2, [sp, #56]	; 0x38
   197f0:	strb	r2, [r3]
   197f4:	b	1877c <ASN1_STRING_length@plt+0x6808>
   197f8:	add	r0, sp, #84	; 0x54
   197fc:	ldr	r4, [sp, #48]	; 0x30
   19800:	bl	16bf4 <ASN1_STRING_length@plt+0x4c80>
   19804:	ldr	r2, [sp, #56]	; 0x38
   19808:	ldr	r1, [pc, #-1996]	; 19044 <ASN1_STRING_length@plt+0x70d0>
   1980c:	mov	r0, #7
   19810:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19814:	mov	r0, r8
   19818:	bl	11a88 <fclose@plt>
   1981c:	b	1877c <ASN1_STRING_length@plt+0x6808>
   19820:	bl	11f38 <__errno_location@plt>
   19824:	ldr	r0, [r0]
   19828:	bl	119f8 <strerror@plt>
   1982c:	ldr	r1, [pc, #-2028]	; 19048 <ASN1_STRING_length@plt+0x70d4>
   19830:	mov	r2, r0
   19834:	mov	r0, #2
   19838:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1983c:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   19840:	str	r6, [sp]
   19844:	ldr	r3, [sp, #120]	; 0x78
   19848:	ldr	r2, [sp, #32]
   1984c:	ldr	r1, [pc, #-2056]	; 1904c <ASN1_STRING_length@plt+0x70d8>
   19850:	mov	r0, #6
   19854:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19858:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   1985c:	bl	11f38 <__errno_location@plt>
   19860:	mov	r2, r6
   19864:	ldr	r1, [pc, #-2024]	; 19084 <ASN1_STRING_length@plt+0x7110>
   19868:	ldr	r6, [r0]
   1986c:	mov	r0, #3
   19870:	rsb	r6, r6, #0
   19874:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19878:	b	18404 <ASN1_STRING_length@plt+0x6490>
   1987c:	ldr	r1, [pc, #-2100]	; 19050 <ASN1_STRING_length@plt+0x70dc>
   19880:	mov	r0, #2
   19884:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19888:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   1988c:	ldr	r3, [pc, #-2112]	; 19054 <ASN1_STRING_length@plt+0x70e0>
   19890:	mov	r2, #21
   19894:	mov	r1, #1
   19898:	ldr	r3, [r3]
   1989c:	ldr	r0, [pc, #-2124]	; 19058 <ASN1_STRING_length@plt+0x70e4>
   198a0:	bl	11d10 <fwrite@plt>
   198a4:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   198a8:	mov	r2, r7
   198ac:	ldr	r1, [pc, #-2136]	; 1905c <ASN1_STRING_length@plt+0x70e8>
   198b0:	mov	r0, #2
   198b4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   198b8:	b	18814 <ASN1_STRING_length@plt+0x68a0>
   198bc:	rsb	r0, r0, #0
   198c0:	bl	119f8 <strerror@plt>
   198c4:	mov	r2, r7
   198c8:	ldr	r1, [pc, #-2160]	; 19060 <ASN1_STRING_length@plt+0x70ec>
   198cc:	mov	r3, r0
   198d0:	mov	r0, #2
   198d4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   198d8:	ldr	r0, [sp, #224]	; 0xe0
   198dc:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   198e0:	b	18814 <ASN1_STRING_length@plt+0x68a0>
   198e4:	mov	r2, r0
   198e8:	mov	r1, r0
   198ec:	mov	r0, r5
   198f0:	mov	r6, r2
   198f4:	rsb	r4, r4, #0
   198f8:	bl	11c08 <fseek@plt>
   198fc:	ldr	r8, [sp, #32]
   19900:	b	1993c <ASN1_STRING_length@plt+0x79c8>
   19904:	mov	r0, r8
   19908:	bl	11c44 <strlen@plt>
   1990c:	cmp	r0, #0
   19910:	beq	19938 <ASN1_STRING_length@plt+0x79c4>
   19914:	add	r3, sp, #6848	; 0x1ac0
   19918:	add	r3, r3, #56	; 0x38
   1991c:	add	r3, r3, r0
   19920:	mov	r1, r8
   19924:	ldr	r0, [sp, #108]	; 0x6c
   19928:	strb	r6, [r3, #-2053]	; 0xfffff7fb
   1992c:	bl	1aef4 <ASN1_STRING_length@plt+0x8f80>
   19930:	cmp	r0, #0
   19934:	strne	r4, [r0, #48]	; 0x30
   19938:	add	r4, r4, #1
   1993c:	mov	r2, r5
   19940:	mov	r1, #4096	; 0x1000
   19944:	mov	r0, r8
   19948:	bl	11a94 <fgets@plt>
   1994c:	cmp	r0, #0
   19950:	bne	19904 <ASN1_STRING_length@plt+0x7990>
   19954:	mov	r7, r0
   19958:	ldr	r1, [pc, #-2300]	; 19064 <ASN1_STRING_length@plt+0x70f0>
   1995c:	add	r0, sp, #92	; 0x5c
   19960:	bl	1a9e0 <ASN1_STRING_length@plt+0x8a6c>
   19964:	ldr	r0, [sp, #96]	; 0x60
   19968:	cmp	r0, #0
   1996c:	beq	18aa0 <ASN1_STRING_length@plt+0x6b2c>
   19970:	ldr	r2, [sp, #92]	; 0x5c
   19974:	mov	r3, r7
   19978:	sub	r2, r2, #4
   1997c:	ldr	r1, [r2, #4]!
   19980:	strh	r3, [r1, #56]	; 0x38
   19984:	add	r3, r3, #1
   19988:	cmp	r3, r0
   1998c:	bne	1997c <ASN1_STRING_length@plt+0x7a08>
   19990:	b	18aa0 <ASN1_STRING_length@plt+0x6b2c>
   19994:	bl	11f38 <__errno_location@plt>
   19998:	ldr	r2, [sp, #48]	; 0x30
   1999c:	ldr	r1, [pc, #-2364]	; 19068 <ASN1_STRING_length@plt+0x70f4>
   199a0:	ldr	r6, [r0]
   199a4:	mov	r0, #7
   199a8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   199ac:	cmp	r6, #0
   199b0:	ble	1877c <ASN1_STRING_length@plt+0x6808>
   199b4:	mov	r0, r6
   199b8:	bl	119f8 <strerror@plt>
   199bc:	ldr	r2, [sp, #48]	; 0x30
   199c0:	ldr	r1, [pc, #-2380]	; 1907c <ASN1_STRING_length@plt+0x7108>
   199c4:	mov	r3, r0
   199c8:	mov	r0, #2
   199cc:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   199d0:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   199d4:	rsb	r0, r0, #0
   199d8:	bl	119f8 <strerror@plt>
   199dc:	ldr	r1, [pc, #-2424]	; 1906c <ASN1_STRING_length@plt+0x70f8>
   199e0:	mov	r2, r0
   199e4:	mov	r0, #2
   199e8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   199ec:	b	18814 <ASN1_STRING_length@plt+0x68a0>
   199f0:	mov	r1, #420	; 0x1a4
   199f4:	mov	r2, #193	; 0xc1
   199f8:	str	r1, [sp, #4]
   199fc:	str	r2, [sp]
   19a00:	mov	r3, r7
   19a04:	ldr	r2, [sp, #44]	; 0x2c
   19a08:	ldr	r1, [pc, #-2464]	; 19070 <ASN1_STRING_length@plt+0x70fc>
   19a0c:	mov	r0, #3
   19a10:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19a14:	b	19610 <ASN1_STRING_length@plt+0x769c>
   19a18:	mov	r0, r4
   19a1c:	b	18bac <ASN1_STRING_length@plt+0x6c38>
   19a20:	bl	11f38 <__errno_location@plt>
   19a24:	ldr	r7, [r0]
   19a28:	ldr	r0, [sp, #112]	; 0x70
   19a2c:	rsb	r7, r7, #0
   19a30:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   19a34:	b	18d98 <ASN1_STRING_length@plt+0x6e24>
   19a38:	add	r3, sp, #720	; 0x2d0
   19a3c:	add	r0, r3, #4096	; 0x1000
   19a40:	ldr	r1, [pc, #-2516]	; 19074 <ASN1_STRING_length@plt+0x7100>
   19a44:	add	r0, r0, #16
   19a48:	bl	16a2c <ASN1_STRING_length@plt+0x4ab8>
   19a4c:	b	18988 <ASN1_STRING_length@plt+0x6a14>
   19a50:	bl	11f38 <__errno_location@plt>
   19a54:	ldr	r2, [sp, #56]	; 0x38
   19a58:	ldr	r1, [pc, #-2536]	; 19078 <ASN1_STRING_length@plt+0x7104>
   19a5c:	ldr	r6, [r0]
   19a60:	mov	r0, #7
   19a64:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19a68:	cmp	r6, #0
   19a6c:	ble	1877c <ASN1_STRING_length@plt+0x6808>
   19a70:	mov	r0, r6
   19a74:	bl	119f8 <strerror@plt>
   19a78:	ldr	r2, [sp, #56]	; 0x38
   19a7c:	ldr	r1, [pc, #-2568]	; 1907c <ASN1_STRING_length@plt+0x7108>
   19a80:	mov	r3, r0
   19a84:	mov	r0, #2
   19a88:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19a8c:	b	180e8 <ASN1_STRING_length@plt+0x6174>
   19a90:	ldr	fp, [sp, #40]	; 0x28
   19a94:	mov	r4, r3
   19a98:	b	19744 <ASN1_STRING_length@plt+0x77d0>
   19a9c:	rsb	r0, r0, #0
   19aa0:	bl	119f8 <strerror@plt>
   19aa4:	ldr	r1, [pc, #-2604]	; 19080 <ASN1_STRING_length@plt+0x710c>
   19aa8:	mov	r2, r0
   19aac:	mov	r0, #2
   19ab0:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19ab4:	b	18814 <ASN1_STRING_length@plt+0x68a0>
   19ab8:	ldr	r1, [sp, #52]	; 0x34
   19abc:	mov	r0, sl
   19ac0:	bl	11ca4 <open64@plt>
   19ac4:	subs	r9, r0, #0
   19ac8:	bge	195c4 <ASN1_STRING_length@plt+0x7650>
   19acc:	bl	11f38 <__errno_location@plt>
   19ad0:	mov	r2, sl
   19ad4:	ldr	r1, [pc, #-2648]	; 19084 <ASN1_STRING_length@plt+0x7110>
   19ad8:	ldr	r4, [r0]
   19adc:	mov	r0, #2
   19ae0:	cmp	r4, #0
   19ae4:	movle	r4, #0
   19ae8:	movgt	r4, #1
   19aec:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19af0:	b	185d8 <ASN1_STRING_length@plt+0x6664>
   19af4:	ldr	r3, [sp, #40]	; 0x28
   19af8:	cmp	r3, #0
   19afc:	streq	r3, [sp, #32]
   19b00:	beq	19b64 <ASN1_STRING_length@plt+0x7bf0>
   19b04:	mvn	r5, #1
   19b08:	ldr	r3, [sp, #32]
   19b0c:	mov	r7, #0
   19b10:	add	r4, r3, r5
   19b14:	mul	r5, r5, r8
   19b18:	ldr	r6, [sp, #48]	; 0x30
   19b1c:	add	r4, r4, r8
   19b20:	mov	r9, r7
   19b24:	ldrh	r3, [r6, #2]!
   19b28:	cmp	r3, #0
   19b2c:	beq	19b54 <ASN1_STRING_length@plt+0x7be0>
   19b30:	ldr	r3, [sp, #92]	; 0x5c
   19b34:	mov	r0, r9
   19b38:	add	r3, r3, r6, lsl #1
   19b3c:	ldr	r1, [r3, r5]
   19b40:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   19b44:	cmp	r0, #0
   19b48:	beq	19fd4 <ASN1_STRING_length@plt+0x8060>
   19b4c:	add	r7, r7, #1
   19b50:	mov	r9, r0
   19b54:	cmp	r4, r6
   19b58:	bne	19b24 <ASN1_STRING_length@plt+0x7bb0>
   19b5c:	str	r7, [sp, #40]	; 0x28
   19b60:	str	r9, [sp, #32]
   19b64:	ldr	r3, [sp, #40]	; 0x28
   19b68:	lsl	r0, r3, #2
   19b6c:	bl	11d64 <malloc@plt>
   19b70:	subs	r3, r0, #0
   19b74:	str	r3, [sp, #44]	; 0x2c
   19b78:	beq	19ff8 <ASN1_STRING_length@plt+0x8084>
   19b7c:	mov	r1, #0
   19b80:	mov	r0, #16
   19b84:	bl	1a9f0 <ASN1_STRING_length@plt+0x8a7c>
   19b88:	subs	r3, r0, #0
   19b8c:	str	r3, [sp, #56]	; 0x38
   19b90:	beq	19ff8 <ASN1_STRING_length@plt+0x8084>
   19b94:	ldr	r3, [sp, #32]
   19b98:	cmp	r3, #0
   19b9c:	beq	19cf0 <ASN1_STRING_length@plt+0x7d7c>
   19ba0:	str	fp, [sp, #48]	; 0x30
   19ba4:	str	r8, [sp, #52]	; 0x34
   19ba8:	ldr	r3, [sp, #32]
   19bac:	mov	r0, r3
   19bb0:	ldr	r4, [r3, #8]
   19bb4:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   19bb8:	str	r0, [sp, #32]
   19bbc:	mov	r0, #8
   19bc0:	bl	11d64 <malloc@plt>
   19bc4:	subs	r3, r0, #0
   19bc8:	str	r3, [sp, #60]	; 0x3c
   19bcc:	beq	19f1c <ASN1_STRING_length@plt+0x7fa8>
   19bd0:	ldr	r3, [sp, #60]	; 0x3c
   19bd4:	mov	r0, #0
   19bd8:	mov	r1, r3
   19bdc:	stm	r3, {r0, r4}
   19be0:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   19be4:	subs	r4, r0, #0
   19be8:	beq	19f1c <ASN1_STRING_length@plt+0x7fa8>
   19bec:	ldr	r2, [sp, #60]	; 0x3c
   19bf0:	ldr	r1, [sp, #44]	; 0x2c
   19bf4:	mov	r3, #1
   19bf8:	mov	fp, r2
   19bfc:	str	r2, [r1]
   19c00:	ldr	r1, [fp, #4]
   19c04:	sub	r5, r3, #1
   19c08:	ldrb	r2, [r1, #60]	; 0x3c
   19c0c:	cmp	r2, #0
   19c10:	beq	19c24 <ASN1_STRING_length@plt+0x7cb0>
   19c14:	ldr	r2, [sp, #60]	; 0x3c
   19c18:	ldr	r2, [r2, #4]
   19c1c:	cmp	r1, r2
   19c20:	beq	19f34 <ASN1_STRING_length@plt+0x7fc0>
   19c24:	ldr	r8, [r1, #28]
   19c28:	mov	r2, #1
   19c2c:	cmp	r8, #0
   19c30:	strb	r2, [r1, #60]	; 0x3c
   19c34:	beq	19e44 <ASN1_STRING_length@plt+0x7ed0>
   19c38:	ldr	r6, [r1, #24]
   19c3c:	add	r8, r6, r8, lsl #2
   19c40:	cmp	r6, r8
   19c44:	bcs	19e28 <ASN1_STRING_length@plt+0x7eb4>
   19c48:	sub	r3, r3, #-1073741822	; 0xc0000002
   19c4c:	ldr	r2, [sp, #44]	; 0x2c
   19c50:	add	r7, r2, r3, lsl #2
   19c54:	b	19c90 <ASN1_STRING_length@plt+0x7d1c>
   19c58:	ldr	r3, [sp, #40]	; 0x28
   19c5c:	str	fp, [r1]
   19c60:	cmp	r3, r5
   19c64:	str	r9, [r1, #4]
   19c68:	bls	1a010 <ASN1_STRING_length@plt+0x809c>
   19c6c:	str	r1, [r7, #4]!
   19c70:	mov	r0, r4
   19c74:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   19c78:	add	r5, r5, #1
   19c7c:	cmp	r0, #0
   19c80:	beq	19ca4 <ASN1_STRING_length@plt+0x7d30>
   19c84:	cmp	r8, r6
   19c88:	mov	r4, r0
   19c8c:	bls	19e28 <ASN1_STRING_length@plt+0x7eb4>
   19c90:	mov	r0, #8
   19c94:	ldr	r9, [r6], #4
   19c98:	bl	11d64 <malloc@plt>
   19c9c:	subs	r1, r0, #0
   19ca0:	bne	19c58 <ASN1_STRING_length@plt+0x7ce4>
   19ca4:	ldr	r1, [pc, #-3072]	; 190ac <ASN1_STRING_length@plt+0x7138>
   19ca8:	mov	r0, #3
   19cac:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19cb0:	mvn	r8, #11
   19cb4:	mov	r0, r4
   19cb8:	ldr	r5, [r4, #8]
   19cbc:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   19cc0:	mov	r4, r0
   19cc4:	mov	r0, r5
   19cc8:	bl	11ba8 <free@plt>
   19ccc:	cmp	r4, #0
   19cd0:	bne	19cb4 <ASN1_STRING_length@plt+0x7d40>
   19cd4:	cmp	r8, #0
   19cd8:	blt	19fec <ASN1_STRING_length@plt+0x8078>
   19cdc:	ldr	r3, [sp, #32]
   19ce0:	cmp	r3, #0
   19ce4:	bne	19ba8 <ASN1_STRING_length@plt+0x7c34>
   19ce8:	ldr	fp, [sp, #48]	; 0x30
   19cec:	ldr	r8, [sp, #52]	; 0x34
   19cf0:	ldr	r0, [sp, #56]	; 0x38
   19cf4:	bl	1b2a0 <ASN1_STRING_length@plt+0x932c>
   19cf8:	ldr	r1, [pc, #-3192]	; 19088 <ASN1_STRING_length@plt+0x7114>
   19cfc:	mov	r2, r0
   19d00:	mov	r0, #3
   19d04:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19d08:	mov	r3, #0
   19d0c:	str	r3, [sp, #32]
   19d10:	ldr	r0, [sp, #56]	; 0x38
   19d14:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   19d18:	ldr	r3, [sp, #32]
   19d1c:	cmp	r3, #0
   19d20:	ldrne	r0, [sp, #32]
   19d24:	beq	19d34 <ASN1_STRING_length@plt+0x7dc0>
   19d28:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   19d2c:	cmp	r0, #0
   19d30:	bne	19d28 <ASN1_STRING_length@plt+0x7db4>
   19d34:	ldr	r0, [sp, #44]	; 0x2c
   19d38:	bl	11ba8 <free@plt>
   19d3c:	mov	r0, r8
   19d40:	bl	11ba8 <free@plt>
   19d44:	b	18814 <ASN1_STRING_length@plt+0x68a0>
   19d48:	mov	r8, r7
   19d4c:	mov	r9, r7
   19d50:	ldr	r3, [fp, #4]
   19d54:	ldr	r0, [r3, #44]	; 0x2c
   19d58:	add	r0, r9, r0
   19d5c:	add	r0, r0, r8, lsl #2
   19d60:	bl	11d64 <malloc@plt>
   19d64:	ldr	r8, [sp, #228]	; 0xe4
   19d68:	subs	r8, r8, #1
   19d6c:	mov	r9, r0
   19d70:	bmi	1a008 <ASN1_STRING_length@plt+0x8094>
   19d74:	sub	r3, r6, #4
   19d78:	str	fp, [sp, #68]	; 0x44
   19d7c:	mov	r6, #0
   19d80:	mov	fp, r5
   19d84:	mov	r5, r4
   19d88:	str	r3, [sp, #64]	; 0x40
   19d8c:	ldr	r2, [sp, #224]	; 0xe0
   19d90:	add	r0, r9, r6
   19d94:	ldr	r4, [r2, r8, lsl #2]
   19d98:	sub	r8, r8, #1
   19d9c:	ldr	r2, [r4, #4]
   19da0:	add	r1, r2, #68	; 0x44
   19da4:	ldr	r7, [r2, #44]	; 0x2c
   19da8:	sub	r7, r7, #1
   19dac:	mov	r2, r7
   19db0:	bl	11c5c <memcpy@plt>
   19db4:	ldr	r3, [sp, #64]	; 0x40
   19db8:	add	r6, r7, r6
   19dbc:	add	r2, r9, r6
   19dc0:	ldrb	r1, [r3, #4]
   19dc4:	ldr	r0, [r3]
   19dc8:	str	r0, [r9, r6]
   19dcc:	strb	r1, [r2, #4]
   19dd0:	ldr	r0, [sp, #32]
   19dd4:	ldr	r1, [r4, #4]
   19dd8:	bl	1d9c0 <ASN1_STRING_length@plt+0xba4c>
   19ddc:	cmn	r8, #1
   19de0:	add	r6, r6, #4
   19de4:	str	r0, [sp, #32]
   19de8:	bne	19d8c <ASN1_STRING_length@plt+0x7e18>
   19dec:	mov	r4, r5
   19df0:	mov	r5, fp
   19df4:	ldr	fp, [sp, #68]	; 0x44
   19df8:	ldr	r1, [fp, #4]
   19dfc:	add	r0, r9, r6
   19e00:	add	r1, r1, #68	; 0x44
   19e04:	bl	11c98 <strcpy@plt>
   19e08:	mov	r2, r9
   19e0c:	ldr	r1, [pc, #-3464]	; 1908c <ASN1_STRING_length@plt+0x7118>
   19e10:	mov	r0, #3
   19e14:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19e18:	mov	r0, r9
   19e1c:	bl	11ba8 <free@plt>
   19e20:	mov	r0, sl
   19e24:	bl	1a9c0 <ASN1_STRING_length@plt+0x8a4c>
   19e28:	cmp	r5, #0
   19e2c:	beq	1a024 <ASN1_STRING_length@plt+0x80b0>
   19e30:	ldr	r1, [sp, #44]	; 0x2c
   19e34:	sub	r2, r5, #1
   19e38:	mov	r3, r5
   19e3c:	ldr	fp, [r1, r2, lsl #2]
   19e40:	b	19c00 <ASN1_STRING_length@plt+0x7c8c>
   19e44:	ldr	r0, [sp, #32]
   19e48:	bl	1d9c0 <ASN1_STRING_length@plt+0xba4c>
   19e4c:	str	r0, [sp, #32]
   19e50:	b	19e28 <ASN1_STRING_length@plt+0x7eb4>
   19e54:	bl	11f38 <__errno_location@plt>
   19e58:	ldr	sl, [sp, #44]	; 0x2c
   19e5c:	ldr	ip, [r4]
   19e60:	mov	r3, r7
   19e64:	mov	r2, sl
   19e68:	ldr	r1, [pc, #-3552]	; 19090 <ASN1_STRING_length@plt+0x711c>
   19e6c:	ldr	fp, [sp, #40]	; 0x28
   19e70:	ldr	r4, [r0]
   19e74:	stm	sp, {sl, ip}
   19e78:	mov	r0, #2
   19e7c:	rsb	r4, r4, #0
   19e80:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19e84:	b	19740 <ASN1_STRING_length@plt+0x77cc>
   19e88:	ldr	r2, [sp, #52]	; 0x34
   19e8c:	mov	r1, r7
   19e90:	mov	r0, r9
   19e94:	ldr	fp, [sp, #40]	; 0x28
   19e98:	ldr	sl, [sp, #44]	; 0x2c
   19e9c:	bl	11e6c <unlinkat@plt>
   19ea0:	cmp	r0, #0
   19ea4:	bne	19f04 <ASN1_STRING_length@plt+0x7f90>
   19ea8:	ldr	r3, [r5]
   19eac:	rsb	r0, r4, #0
   19eb0:	ldr	r4, [r3]
   19eb4:	bl	119f8 <strerror@plt>
   19eb8:	mov	r2, r4
   19ebc:	ldr	r1, [pc, #-3632]	; 19094 <ASN1_STRING_length@plt+0x7120>
   19ec0:	mov	r3, r0
   19ec4:	mov	r0, #3
   19ec8:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19ecc:	bl	11f38 <__errno_location@plt>
   19ed0:	ldr	r4, [r0]
   19ed4:	rsb	r4, r4, #0
   19ed8:	b	19740 <ASN1_STRING_length@plt+0x77cc>
   19edc:	bl	11d88 <__stack_chk_fail@plt>
   19ee0:	str	r7, [sp]
   19ee4:	ldr	r3, [sp, #44]	; 0x2c
   19ee8:	mov	r2, r4
   19eec:	ldr	r1, [pc, #-3676]	; 19098 <ASN1_STRING_length@plt+0x7124>
   19ef0:	mov	r0, #3
   19ef4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19ef8:	mov	r0, r4
   19efc:	bl	11d04 <close@plt>
   19f00:	b	19610 <ASN1_STRING_length@plt+0x769c>
   19f04:	mov	r3, r7
   19f08:	mov	r2, sl
   19f0c:	ldr	r1, [pc, #-3704]	; 1909c <ASN1_STRING_length@plt+0x7128>
   19f10:	mov	r0, #3
   19f14:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19f18:	b	19ea8 <ASN1_STRING_length@plt+0x7f34>
   19f1c:	ldr	r1, [pc, #-3704]	; 190ac <ASN1_STRING_length@plt+0x7138>
   19f20:	mov	r0, #3
   19f24:	ldr	fp, [sp, #48]	; 0x30
   19f28:	ldr	r8, [sp, #52]	; 0x34
   19f2c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19f30:	b	19d10 <ASN1_STRING_length@plt+0x7d9c>
   19f34:	ldr	r3, [pc, #-3740]	; 190a0 <ASN1_STRING_length@plt+0x712c>
   19f38:	add	r6, sp, #4800	; 0x12c0
   19f3c:	add	r6, r6, #56	; 0x38
   19f40:	ldm	r3, {r0, r1}
   19f44:	str	r0, [r6, #-4]
   19f48:	strb	r1, [r6]
   19f4c:	mov	r0, sl
   19f50:	mov	r1, #3
   19f54:	bl	1a8bc <ASN1_STRING_length@plt+0x8948>
   19f58:	ldr	r7, [fp]
   19f5c:	cmp	r7, #0
   19f60:	beq	19d48 <ASN1_STRING_length@plt+0x7dd4>
   19f64:	mov	r8, #0
   19f68:	mov	r9, r8
   19f6c:	b	19f80 <ASN1_STRING_length@plt+0x800c>
   19f70:	ldr	r7, [r7]
   19f74:	add	r8, r8, #1
   19f78:	cmp	r7, #0
   19f7c:	beq	19d50 <ASN1_STRING_length@plt+0x7ddc>
   19f80:	ldr	r3, [r7, #4]
   19f84:	mov	r1, r7
   19f88:	mov	r0, sl
   19f8c:	ldr	r3, [r3, #44]	; 0x2c
   19f90:	sub	r3, r3, #1
   19f94:	add	r9, r9, r3
   19f98:	bl	1a90c <ASN1_STRING_length@plt+0x8998>
   19f9c:	ldr	r1, [r7, #4]
   19fa0:	mov	r2, #0
   19fa4:	add	r1, r1, #68	; 0x44
   19fa8:	ldr	r0, [sp, #56]	; 0x38
   19fac:	bl	1aae4 <ASN1_STRING_length@plt+0x8b70>
   19fb0:	cmp	r0, #0
   19fb4:	beq	19f70 <ASN1_STRING_length@plt+0x7ffc>
   19fb8:	mov	r8, r0
   19fbc:	b	19cb4 <ASN1_STRING_length@plt+0x7d40>
   19fc0:	ldr	r3, [pc, #-3852]	; 190bc <ASN1_STRING_length@plt+0x7148>
   19fc4:	ldr	r2, [pc, #-3880]	; 190a4 <ASN1_STRING_length@plt+0x7130>
   19fc8:	ldr	r1, [pc, #-3848]	; 190c8 <ASN1_STRING_length@plt+0x7154>
   19fcc:	ldr	r0, [pc, #-3884]	; 190a8 <ASN1_STRING_length@plt+0x7134>
   19fd0:	bl	11b6c <__assert_fail@plt>
   19fd4:	str	r0, [sp, #44]	; 0x2c
   19fd8:	ldr	r1, [pc, #-3892]	; 190ac <ASN1_STRING_length@plt+0x7138>
   19fdc:	mov	r0, #3
   19fe0:	str	r9, [sp, #32]
   19fe4:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   19fe8:	b	19d18 <ASN1_STRING_length@plt+0x7da4>
   19fec:	ldr	fp, [sp, #48]	; 0x30
   19ff0:	ldr	r8, [sp, #52]	; 0x34
   19ff4:	b	19d10 <ASN1_STRING_length@plt+0x7d9c>
   19ff8:	ldr	r1, [pc, #-3924]	; 190ac <ASN1_STRING_length@plt+0x7138>
   19ffc:	mov	r0, #3
   1a000:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1a004:	b	19d18 <ASN1_STRING_length@plt+0x7da4>
   1a008:	mov	r6, #0
   1a00c:	b	19df8 <ASN1_STRING_length@plt+0x7e84>
   1a010:	ldr	r3, [pc, #-3944]	; 190b0 <ASN1_STRING_length@plt+0x713c>
   1a014:	mov	r2, #1792	; 0x700
   1a018:	ldr	r1, [pc, #-3928]	; 190c8 <ASN1_STRING_length@plt+0x7154>
   1a01c:	ldr	r0, [pc, #-3952]	; 190b4 <ASN1_STRING_length@plt+0x7140>
   1a020:	bl	11b6c <__assert_fail@plt>
   1a024:	mov	r8, r5
   1a028:	b	19cb4 <ASN1_STRING_length@plt+0x7d40>
   1a02c:	mov	r2, r5
   1a030:	ldr	r1, [pc, #-3968]	; 190b8 <ASN1_STRING_length@plt+0x7144>
   1a034:	mov	r0, #3
   1a038:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1a03c:	b	18c24 <ASN1_STRING_length@plt+0x6cb0>
   1a040:	ldr	r3, [pc, #-3980]	; 190bc <ASN1_STRING_length@plt+0x7148>
   1a044:	ldr	r2, [pc, #-3980]	; 190c0 <ASN1_STRING_length@plt+0x714c>
   1a048:	ldr	r1, [pc, #-3976]	; 190c8 <ASN1_STRING_length@plt+0x7154>
   1a04c:	ldr	r0, [pc, #-3984]	; 190c4 <ASN1_STRING_length@plt+0x7150>
   1a050:	bl	11b6c <__assert_fail@plt>
   1a054:	ldr	r1, [pc, #-3984]	; 190cc <ASN1_STRING_length@plt+0x7158>
   1a058:	mov	r0, #3
   1a05c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1a060:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   1a064:	ldr	r1, [pc, #-3996]	; 190d0 <ASN1_STRING_length@plt+0x715c>
   1a068:	mov	r0, #3
   1a06c:	bl	1a1d0 <ASN1_STRING_length@plt+0x825c>
   1a070:	b	18924 <ASN1_STRING_length@plt+0x69b0>
   1a074:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a078:	mov	r6, r1
   1a07c:	ldr	r4, [pc, #232]	; 1a16c <ASN1_STRING_length@plt+0x81f8>
   1a080:	sub	sp, sp, #64	; 0x40
   1a084:	sub	r1, r1, #2
   1a088:	ldr	r0, [r4]
   1a08c:	cmp	r1, #5
   1a090:	mov	r8, r2
   1a094:	mov	r9, r3
   1a098:	str	r0, [sp, #60]	; 0x3c
   1a09c:	ldr	sl, [sp, #96]	; 0x60
   1a0a0:	ldr	r7, [sp, #100]	; 0x64
   1a0a4:	bhi	1a144 <ASN1_STRING_length@plt+0x81d0>
   1a0a8:	ldr	r3, [pc, #192]	; 1a170 <ASN1_STRING_length@plt+0x81fc>
   1a0ac:	ldr	r5, [r3, r1, lsl #2]
   1a0b0:	mov	r2, r7
   1a0b4:	ldr	r3, [sp, #104]	; 0x68
   1a0b8:	mov	r1, #1
   1a0bc:	add	r0, sp, #24
   1a0c0:	bl	11f2c <__vasprintf_chk@plt>
   1a0c4:	cmp	r0, #0
   1a0c8:	blt	1a10c <ASN1_STRING_length@plt+0x8198>
   1a0cc:	ldr	r2, [pc, #160]	; 1a174 <ASN1_STRING_length@plt+0x8200>
   1a0d0:	ldr	r3, [sp, #24]
   1a0d4:	ldrb	r2, [r2]
   1a0d8:	cmp	r2, #0
   1a0dc:	bne	1a124 <ASN1_STRING_length@plt+0x81b0>
   1a0e0:	ldr	r1, [pc, #144]	; 1a178 <ASN1_STRING_length@plt+0x8204>
   1a0e4:	ldr	r2, [pc, #144]	; 1a17c <ASN1_STRING_length@plt+0x8208>
   1a0e8:	str	r3, [sp, #16]
   1a0ec:	stm	sp, {r5, r8, r9, sl}
   1a0f0:	ldr	r3, [r1]
   1a0f4:	ldr	r0, [r2]
   1a0f8:	mov	r1, #1
   1a0fc:	ldr	r2, [pc, #124]	; 1a180 <ASN1_STRING_length@plt+0x820c>
   1a100:	bl	11d94 <__fprintf_chk@plt>
   1a104:	ldr	r0, [sp, #24]
   1a108:	bl	11ba8 <free@plt>
   1a10c:	ldr	r2, [sp, #60]	; 0x3c
   1a110:	ldr	r3, [r4]
   1a114:	cmp	r2, r3
   1a118:	bne	1a168 <ASN1_STRING_length@plt+0x81f4>
   1a11c:	add	sp, sp, #64	; 0x40
   1a120:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a124:	str	r3, [sp, #12]
   1a128:	stm	sp, {r8, r9, sl}
   1a12c:	mov	r3, r5
   1a130:	mov	r0, r6
   1a134:	ldr	r2, [pc, #72]	; 1a184 <ASN1_STRING_length@plt+0x8210>
   1a138:	mov	r1, #1
   1a13c:	bl	11cec <__syslog_chk@plt>
   1a140:	b	1a104 <ASN1_STRING_length@plt+0x8190>
   1a144:	ldr	r2, [pc, #60]	; 1a188 <ASN1_STRING_length@plt+0x8214>
   1a148:	mov	r3, #32
   1a14c:	add	r0, sp, #28
   1a150:	stm	sp, {r2, r6}
   1a154:	mov	r1, r3
   1a158:	mov	r2, #1
   1a15c:	bl	11cc8 <__snprintf_chk@plt>
   1a160:	add	r5, sp, #28
   1a164:	b	1a0b0 <ASN1_STRING_length@plt+0x813c>
   1a168:	bl	11d88 <__stack_chk_fail@plt>
   1a16c:	andeq	pc, r3, r8, ror #25
   1a170:	andeq	sp, r2, r4, lsr #18
   1a174:	muleq	r4, r4, r0
   1a178:	andeq	r0, r4, r8, lsr r0
   1a17c:	andeq	r0, r4, r8, asr #32
   1a180:	andeq	sp, r2, r8, asr #18
   1a184:	andeq	sp, r2, ip, asr #18
   1a188:	andeq	sp, r2, ip, lsr r9
   1a18c:	ldr	r3, [pc, #28]	; 1a1b0 <ASN1_STRING_length@plt+0x823c>
   1a190:	cmp	r0, #0
   1a194:	strb	r0, [r3]
   1a198:	bxeq	lr
   1a19c:	ldr	r3, [pc, #16]	; 1a1b4 <ASN1_STRING_length@plt+0x8240>
   1a1a0:	mov	r2, #24
   1a1a4:	mov	r1, #2
   1a1a8:	ldr	r0, [r3]
   1a1ac:	b	11be4 <openlog@plt>
   1a1b0:	muleq	r4, r4, r0
   1a1b4:	andeq	r0, r4, r8, lsr r0
   1a1b8:	ldr	r3, [pc, #12]	; 1a1cc <ASN1_STRING_length@plt+0x8258>
   1a1bc:	ldrb	r3, [r3]
   1a1c0:	cmp	r3, #0
   1a1c4:	bxeq	lr
   1a1c8:	b	11e24 <closelog@plt>
   1a1cc:	muleq	r4, r4, r0
   1a1d0:	push	{r1, r2, r3}
   1a1d4:	ldr	r3, [pc, #276]	; 1a2f0 <ASN1_STRING_length@plt+0x837c>
   1a1d8:	push	{r4, r5, lr}
   1a1dc:	sub	sp, sp, #56	; 0x38
   1a1e0:	ldr	r5, [pc, #268]	; 1a2f4 <ASN1_STRING_length@plt+0x8380>
   1a1e4:	ldr	r2, [r3]
   1a1e8:	ldr	r3, [r5]
   1a1ec:	cmp	r2, r0
   1a1f0:	str	r3, [sp, #52]	; 0x34
   1a1f4:	ldr	r2, [sp, #68]	; 0x44
   1a1f8:	bge	1a21c <ASN1_STRING_length@plt+0x82a8>
   1a1fc:	ldr	r2, [sp, #52]	; 0x34
   1a200:	ldr	r3, [r5]
   1a204:	cmp	r2, r3
   1a208:	bne	1a2ec <ASN1_STRING_length@plt+0x8378>
   1a20c:	add	sp, sp, #56	; 0x38
   1a210:	pop	{r4, r5, lr}
   1a214:	add	sp, sp, #12
   1a218:	bx	lr
   1a21c:	add	ip, sp, #72	; 0x48
   1a220:	mov	r4, r0
   1a224:	mov	r3, ip
   1a228:	mov	r1, #1
   1a22c:	add	r0, sp, #12
   1a230:	str	ip, [sp, #16]
   1a234:	bl	11f2c <__vasprintf_chk@plt>
   1a238:	cmp	r0, #0
   1a23c:	blt	1a1fc <ASN1_STRING_length@plt+0x8288>
   1a240:	ldr	r2, [sp, #12]
   1a244:	cmp	r2, #0
   1a248:	beq	1a1fc <ASN1_STRING_length@plt+0x8288>
   1a24c:	sub	r3, r4, #2
   1a250:	cmp	r3, #5
   1a254:	bhi	1a2c4 <ASN1_STRING_length@plt+0x8350>
   1a258:	ldr	r1, [pc, #152]	; 1a2f8 <ASN1_STRING_length@plt+0x8384>
   1a25c:	ldr	r3, [r1, r3, lsl #2]
   1a260:	ldr	r1, [pc, #148]	; 1a2fc <ASN1_STRING_length@plt+0x8388>
   1a264:	ldrb	r1, [r1]
   1a268:	cmp	r1, #0
   1a26c:	beq	1a29c <ASN1_STRING_length@plt+0x8328>
   1a270:	str	r2, [sp]
   1a274:	mov	r1, #1
   1a278:	ldr	r2, [pc, #128]	; 1a300 <ASN1_STRING_length@plt+0x838c>
   1a27c:	mov	r0, r4
   1a280:	bl	11cec <__syslog_chk@plt>
   1a284:	ldr	r0, [sp, #12]
   1a288:	bl	11ba8 <free@plt>
   1a28c:	cmp	r4, #2
   1a290:	bgt	1a1fc <ASN1_STRING_length@plt+0x8288>
   1a294:	mov	r0, #1
   1a298:	bl	11f20 <exit@plt>
   1a29c:	ldr	r0, [pc, #96]	; 1a304 <ASN1_STRING_length@plt+0x8390>
   1a2a0:	ldr	r1, [pc, #96]	; 1a308 <ASN1_STRING_length@plt+0x8394>
   1a2a4:	str	r2, [sp, #4]
   1a2a8:	str	r3, [sp]
   1a2ac:	ldr	r2, [pc, #88]	; 1a30c <ASN1_STRING_length@plt+0x8398>
   1a2b0:	ldr	r3, [r0]
   1a2b4:	ldr	r0, [r1]
   1a2b8:	mov	r1, #1
   1a2bc:	bl	11d94 <__fprintf_chk@plt>
   1a2c0:	b	1a284 <ASN1_STRING_length@plt+0x8310>
   1a2c4:	ldr	r2, [pc, #68]	; 1a310 <ASN1_STRING_length@plt+0x839c>
   1a2c8:	mov	r3, #32
   1a2cc:	mov	r1, r3
   1a2d0:	stm	sp, {r2, r4}
   1a2d4:	add	r0, sp, #20
   1a2d8:	mov	r2, #1
   1a2dc:	bl	11cc8 <__snprintf_chk@plt>
   1a2e0:	ldr	r2, [sp, #12]
   1a2e4:	add	r3, sp, #20
   1a2e8:	b	1a260 <ASN1_STRING_length@plt+0x82ec>
   1a2ec:	bl	11d88 <__stack_chk_fail@plt>
   1a2f0:	andeq	r0, r4, r4, lsr #32
   1a2f4:	andeq	pc, r3, r8, ror #25
   1a2f8:	andeq	sp, r2, r4, lsr #18
   1a2fc:	muleq	r4, r4, r0
   1a300:	andeq	sp, r2, r4, ror #18
   1a304:	andeq	r0, r4, r8, lsr r0
   1a308:	andeq	r0, r4, r8, asr #32
   1a30c:	andeq	sp, r2, r0, ror #18
   1a310:	andeq	sp, r2, ip, lsr r9
   1a314:	ldr	r3, [pc, #32]	; 1a33c <ASN1_STRING_length@plt+0x83c8>
   1a318:	push	{r4, lr}
   1a31c:	mov	r4, r0
   1a320:	str	r1, [r3]
   1a324:	bl	1c5f4 <ASN1_STRING_length@plt+0xa680>
   1a328:	mov	r0, r4
   1a32c:	mov	r2, #0
   1a330:	ldr	r1, [pc, #8]	; 1a340 <ASN1_STRING_length@plt+0x83cc>
   1a334:	pop	{r4, lr}
   1a338:	b	1bf2c <ASN1_STRING_length@plt+0x9fb8>
   1a33c:	andeq	r0, r4, r4, lsr #32
   1a340:	andeq	sl, r1, r4, ror r0
   1a344:	ldr	r3, [pc, #84]	; 1a3a0 <ASN1_STRING_length@plt+0x842c>
   1a348:	push	{r4, r5, r6, lr}
   1a34c:	mov	r0, #1
   1a350:	ldr	r2, [r3]
   1a354:	ldr	r1, [pc, #72]	; 1a3a4 <ASN1_STRING_length@plt+0x8430>
   1a358:	ldr	r4, [pc, #72]	; 1a3a8 <ASN1_STRING_length@plt+0x8434>
   1a35c:	bl	11aac <__printf_chk@plt>
   1a360:	ldr	r6, [pc, #68]	; 1a3ac <ASN1_STRING_length@plt+0x8438>
   1a364:	ldr	r2, [pc, #68]	; 1a3b0 <ASN1_STRING_length@plt+0x843c>
   1a368:	ldr	ip, [pc, #68]	; 1a3b4 <ASN1_STRING_length@plt+0x8440>
   1a36c:	add	r5, r4, #8
   1a370:	cmp	r2, #0
   1a374:	mov	r3, r2
   1a378:	mov	r1, r6
   1a37c:	mov	r0, #1
   1a380:	beq	1a38c <ASN1_STRING_length@plt+0x8418>
   1a384:	ldr	r2, [ip]
   1a388:	bl	11aac <__printf_chk@plt>
   1a38c:	cmp	r4, r5
   1a390:	popeq	{r4, r5, r6, pc}
   1a394:	ldr	ip, [r4], #4
   1a398:	ldr	r2, [ip, #8]
   1a39c:	b	1a370 <ASN1_STRING_length@plt+0x83fc>
   1a3a0:	andeq	r0, r4, r8, lsr r0
   1a3a4:	andeq	sp, r2, r4, asr #23
   1a3a8:	andeq	sp, r2, r0, lsr #26
   1a3ac:	andeq	sp, r2, r0, ror #25
   1a3b0:	muleq	r2, r0, fp
   1a3b4:	andeq	sp, r2, r4, lsl #26
   1a3b8:	push	{r4, lr}
   1a3bc:	sub	sp, sp, #16
   1a3c0:	ldr	ip, [pc, #64]	; 1a408 <ASN1_STRING_length@plt+0x8494>
   1a3c4:	ldr	r4, [pc, #64]	; 1a40c <ASN1_STRING_length@plt+0x8498>
   1a3c8:	cmp	r3, #99	; 0x63
   1a3cc:	str	r2, [sp]
   1a3d0:	ldr	lr, [sp, #24]
   1a3d4:	ldr	r2, [sp, #28]
   1a3d8:	moveq	r3, ip
   1a3dc:	movne	r3, r4
   1a3e0:	str	r3, [sp, #4]
   1a3e4:	str	r2, [sp, #12]
   1a3e8:	mov	r3, r1
   1a3ec:	str	lr, [sp, #8]
   1a3f0:	ldr	r2, [pc, #24]	; 1a410 <ASN1_STRING_length@plt+0x849c>
   1a3f4:	mov	r1, #1
   1a3f8:	bl	11d94 <__fprintf_chk@plt>
   1a3fc:	lsr	r0, r0, #31
   1a400:	add	sp, sp, #16
   1a404:	pop	{r4, pc}
   1a408:	andeq	sp, r2, r8, ror #27
   1a40c:	strdeq	sp, [r2], -r4
   1a410:	strdeq	sp, [r2], -ip
   1a414:	push	{lr}		; (str lr, [sp, #-4]!)
   1a418:	sub	sp, sp, #20
   1a41c:	ldr	lr, [sp, #24]
   1a420:	ldr	ip, [sp, #28]
   1a424:	strd	r2, [sp]
   1a428:	str	lr, [sp, #8]
   1a42c:	mov	r3, r1
   1a430:	str	ip, [sp, #12]
   1a434:	ldr	r2, [pc, #16]	; 1a44c <ASN1_STRING_length@plt+0x84d8>
   1a438:	mov	r1, #1
   1a43c:	bl	11d94 <__fprintf_chk@plt>
   1a440:	lsr	r0, r0, #31
   1a444:	add	sp, sp, #20
   1a448:	pop	{pc}		; (ldr pc, [sp], #4)
   1a44c:			; <UNDEFINED> instruction: 0x0002d6b0
   1a450:	push	{r4, r5, r6, lr}
   1a454:	mov	r1, #47	; 0x2f
   1a458:	sub	sp, sp, #16
   1a45c:	mov	r5, r0
   1a460:	mov	r0, r2
   1a464:	mov	r4, r2
   1a468:	mov	r6, r3
   1a46c:	bl	11b3c <strrchr@plt>
   1a470:	cmp	r0, #0
   1a474:	beq	1a498 <ASN1_STRING_length@plt+0x8524>
   1a478:	sub	r3, r0, r4
   1a47c:	str	r4, [sp]
   1a480:	ldr	r2, [pc, #80]	; 1a4d8 <ASN1_STRING_length@plt+0x8564>
   1a484:	mov	r1, #1
   1a488:	mov	r0, r5
   1a48c:	bl	11d94 <__fprintf_chk@plt>
   1a490:	cmp	r0, #0
   1a494:	blt	1a4cc <ASN1_STRING_length@plt+0x8558>
   1a498:	ldr	r3, [sp, #36]	; 0x24
   1a49c:	str	r4, [sp]
   1a4a0:	str	r3, [sp, #8]
   1a4a4:	ldr	r3, [sp, #32]
   1a4a8:	mov	r0, r5
   1a4ac:	str	r3, [sp, #4]
   1a4b0:	ldr	r2, [pc, #36]	; 1a4dc <ASN1_STRING_length@plt+0x8568>
   1a4b4:	mov	r3, r6
   1a4b8:	mov	r1, #1
   1a4bc:	bl	11d94 <__fprintf_chk@plt>
   1a4c0:	lsr	r0, r0, #31
   1a4c4:	add	sp, sp, #16
   1a4c8:	pop	{r4, r5, r6, pc}
   1a4cc:	mov	r0, #1
   1a4d0:	add	sp, sp, #16
   1a4d4:	pop	{r4, r5, r6, pc}
   1a4d8:	andeq	sp, r2, r8, ror #28
   1a4dc:	andeq	sp, r2, r8, asr #28
   1a4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4e4:	sub	sp, sp, #16640	; 0x4100
   1a4e8:	ldr	r5, [pc, #872]	; 1a858 <ASN1_STRING_length@plt+0x88e4>
   1a4ec:	sub	sp, sp, #180	; 0xb4
   1a4f0:	ldr	r3, [pc, #868]	; 1a85c <ASN1_STRING_length@plt+0x88e8>
   1a4f4:	add	r2, sp, #16640	; 0x4100
   1a4f8:	ldr	r4, [pc, #864]	; 1a860 <ASN1_STRING_length@plt+0x88ec>
   1a4fc:	ldr	r9, [pc, #864]	; 1a864 <ASN1_STRING_length@plt+0x88f0>
   1a500:	ldr	r8, [pc, #864]	; 1a868 <ASN1_STRING_length@plt+0x88f4>
   1a504:	ldr	fp, [pc, #864]	; 1a86c <ASN1_STRING_length@plt+0x88f8>
   1a508:	str	r3, [sp, #16]
   1a50c:	add	r2, r2, #172	; 0xac
   1a510:	ldr	r3, [r5]
   1a514:	mov	r7, r0
   1a518:	mov	r6, r1
   1a51c:	str	r3, [r2]
   1a520:	add	r3, sp, #32
   1a524:	str	r3, [sp]
   1a528:	mov	sl, #0
   1a52c:	mov	r3, r9
   1a530:	mov	r2, r8
   1a534:	mov	r1, r6
   1a538:	mov	r0, r7
   1a53c:	str	sl, [sp, #32]
   1a540:	bl	11bcc <getopt_long@plt>
   1a544:	cmn	r0, #1
   1a548:	beq	1a658 <ASN1_STRING_length@plt+0x86e4>
   1a54c:	cmp	r0, #102	; 0x66
   1a550:	beq	1a5cc <ASN1_STRING_length@plt+0x8658>
   1a554:	ble	1a574 <ASN1_STRING_length@plt+0x8600>
   1a558:	cmp	r0, #104	; 0x68
   1a55c:	beq	1a5c4 <ASN1_STRING_length@plt+0x8650>
   1a560:	cmp	r0, #111	; 0x6f
   1a564:	bne	1a5a8 <ASN1_STRING_length@plt+0x8634>
   1a568:	ldr	r3, [fp]
   1a56c:	str	r3, [sp, #16]
   1a570:	b	1a520 <ASN1_STRING_length@plt+0x85ac>
   1a574:	cmp	r0, #63	; 0x3f
   1a578:	bne	1a5a8 <ASN1_STRING_length@plt+0x8634>
   1a57c:	mov	sl, #1
   1a580:	add	r3, sp, #16640	; 0x4100
   1a584:	add	r3, r3, #172	; 0xac
   1a588:	ldr	r2, [r3]
   1a58c:	ldr	r3, [r5]
   1a590:	mov	r0, sl
   1a594:	cmp	r2, r3
   1a598:	bne	1a854 <ASN1_STRING_length@plt+0x88e0>
   1a59c:	add	sp, sp, #16640	; 0x4100
   1a5a0:	add	sp, sp, #180	; 0xb4
   1a5a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5a8:	ldr	r1, [pc, #704]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a5ac:	ldr	r2, [pc, #704]	; 1a874 <ASN1_STRING_length@plt+0x8900>
   1a5b0:	mov	r3, r0
   1a5b4:	ldr	r0, [r1]
   1a5b8:	mov	r1, #1
   1a5bc:	bl	11d94 <__fprintf_chk@plt>
   1a5c0:	mov	sl, #1
   1a5c4:	bl	1a344 <ASN1_STRING_length@plt+0x83d0>
   1a5c8:	b	1a580 <ASN1_STRING_length@plt+0x860c>
   1a5cc:	ldr	sl, [fp]
   1a5d0:	ldr	r0, [pc, #672]	; 1a878 <ASN1_STRING_length@plt+0x8904>
   1a5d4:	mov	r1, sl
   1a5d8:	bl	11f14 <strcmp@plt>
   1a5dc:	ldr	r3, [pc, #636]	; 1a860 <ASN1_STRING_length@plt+0x88ec>
   1a5e0:	mov	r1, sl
   1a5e4:	cmp	r0, #0
   1a5e8:	moveq	r4, r3
   1a5ec:	movne	r3, #0
   1a5f0:	moveq	r3, #1
   1a5f4:	ldr	r0, [pc, #640]	; 1a87c <ASN1_STRING_length@plt+0x8908>
   1a5f8:	str	r3, [sp, #20]
   1a5fc:	bl	11f14 <strcmp@plt>
   1a600:	mov	r1, sl
   1a604:	cmp	r0, #0
   1a608:	ldr	r0, [pc, #624]	; 1a880 <ASN1_STRING_length@plt+0x890c>
   1a60c:	beq	1a638 <ASN1_STRING_length@plt+0x86c4>
   1a610:	bl	11f14 <strcmp@plt>
   1a614:	cmp	r0, #0
   1a618:	beq	1a650 <ASN1_STRING_length@plt+0x86dc>
   1a61c:	ldr	r3, [sp, #20]
   1a620:	cmp	r3, #0
   1a624:	bne	1a520 <ASN1_STRING_length@plt+0x85ac>
   1a628:	ldr	r1, [pc, #576]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a62c:	mov	r3, sl
   1a630:	ldr	r2, [pc, #588]	; 1a884 <ASN1_STRING_length@plt+0x8910>
   1a634:	b	1a5b4 <ASN1_STRING_length@plt+0x8640>
   1a638:	bl	11f14 <strcmp@plt>
   1a63c:	ldr	r3, [pc, #580]	; 1a888 <ASN1_STRING_length@plt+0x8914>
   1a640:	ldr	r4, [pc, #580]	; 1a88c <ASN1_STRING_length@plt+0x8918>
   1a644:	cmp	r0, #0
   1a648:	moveq	r4, r3
   1a64c:	b	1a520 <ASN1_STRING_length@plt+0x85ac>
   1a650:	ldr	r4, [pc, #560]	; 1a888 <ASN1_STRING_length@plt+0x8914>
   1a654:	b	1a520 <ASN1_STRING_length@plt+0x85ac>
   1a658:	add	r0, sp, #36	; 0x24
   1a65c:	bl	11b24 <uname@plt>
   1a660:	cmp	r0, #0
   1a664:	blt	1a7b8 <ASN1_STRING_length@plt+0x8844>
   1a668:	ldr	r2, [pc, #544]	; 1a890 <ASN1_STRING_length@plt+0x891c>
   1a66c:	mov	r3, #4096	; 0x1000
   1a670:	add	r7, sp, #166	; 0xa6
   1a674:	mov	r1, r3
   1a678:	str	r2, [sp]
   1a67c:	add	r0, sp, #428	; 0x1ac
   1a680:	mov	r2, #1
   1a684:	str	r7, [sp, #4]
   1a688:	bl	11cc8 <__snprintf_chk@plt>
   1a68c:	add	r0, sp, #428	; 0x1ac
   1a690:	ldr	r1, [pc, #508]	; 1a894 <ASN1_STRING_length@plt+0x8920>
   1a694:	bl	11c68 <fopen64@plt>
   1a698:	subs	r6, r0, #0
   1a69c:	beq	1a7d8 <ASN1_STRING_length@plt+0x8864>
   1a6a0:	ldr	r1, [pc, #496]	; 1a898 <ASN1_STRING_length@plt+0x8924>
   1a6a4:	ldr	r0, [sp, #16]
   1a6a8:	bl	1bc20 <ASN1_STRING_length@plt+0x9cac>
   1a6ac:	cmp	r0, #0
   1a6b0:	blt	1a80c <ASN1_STRING_length@plt+0x8898>
   1a6b4:	ldr	r1, [pc, #480]	; 1a89c <ASN1_STRING_length@plt+0x8928>
   1a6b8:	ldr	r0, [sp, #16]
   1a6bc:	bl	11c68 <fopen64@plt>
   1a6c0:	subs	r8, r0, #0
   1a6c4:	beq	1a844 <ASN1_STRING_length@plt+0x88d0>
   1a6c8:	add	r7, sp, #4480	; 0x1180
   1a6cc:	ldr	r9, [pc, #460]	; 1a8a0 <ASN1_STRING_length@plt+0x892c>
   1a6d0:	ldr	fp, [pc, #460]	; 1a8a4 <ASN1_STRING_length@plt+0x8930>
   1a6d4:	add	r7, r7, #48	; 0x30
   1a6d8:	add	r0, sp, #4480	; 0x1180
   1a6dc:	mov	r2, r6
   1a6e0:	mov	r1, #4096	; 0x1000
   1a6e4:	add	r0, r0, #44	; 0x2c
   1a6e8:	bl	11a94 <fgets@plt>
   1a6ec:	cmp	r0, #0
   1a6f0:	beq	1a7a4 <ASN1_STRING_length@plt+0x8830>
   1a6f4:	ldrb	r3, [r7, #-4]
   1a6f8:	cmp	r3, #35	; 0x23
   1a6fc:	beq	1a6d8 <ASN1_STRING_length@plt+0x8764>
   1a700:	add	r3, sp, #176	; 0xb0
   1a704:	sub	r1, r3, #149	; 0x95
   1a708:	add	r0, sp, #28
   1a70c:	add	r3, sp, #32
   1a710:	str	r3, [sp, #8]
   1a714:	str	r0, [sp, #4]
   1a718:	add	r3, sp, #12672	; 0x3180
   1a71c:	add	r2, sp, #8576	; 0x2180
   1a720:	add	r0, sp, #4480	; 0x1180
   1a724:	str	r1, [sp]
   1a728:	add	r3, r3, #44	; 0x2c
   1a72c:	add	r2, r2, #44	; 0x2c
   1a730:	mov	r1, r9
   1a734:	add	r0, r0, #44	; 0x2c
   1a738:	bl	11c50 <sscanf@plt>
   1a73c:	cmp	r0, #5
   1a740:	bne	1a780 <ASN1_STRING_length@plt+0x880c>
   1a744:	ldrb	r3, [sp, #27]
   1a748:	sub	r2, r3, #98	; 0x62
   1a74c:	cmp	r2, #1
   1a750:	bhi	1a780 <ASN1_STRING_length@plt+0x880c>
   1a754:	ldr	ip, [sp, #32]
   1a758:	ldr	r0, [sp, #28]
   1a75c:	add	r2, sp, #12672	; 0x3180
   1a760:	add	r1, sp, #8576	; 0x2180
   1a764:	stm	sp, {r0, ip}
   1a768:	add	r2, r2, #44	; 0x2c
   1a76c:	add	r1, r1, #44	; 0x2c
   1a770:	mov	r0, r8
   1a774:	ldr	ip, [r4, #4]
   1a778:	blx	ip
   1a77c:	b	1a6d8 <ASN1_STRING_length@plt+0x8764>
   1a780:	ldr	r0, [pc, #232]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a784:	add	r3, sp, #4480	; 0x1180
   1a788:	add	r3, r3, #44	; 0x2c
   1a78c:	mov	r2, fp
   1a790:	mov	r1, #1
   1a794:	ldr	r0, [r0]
   1a798:	bl	11d94 <__fprintf_chk@plt>
   1a79c:	mov	sl, #1
   1a7a0:	b	1a6d8 <ASN1_STRING_length@plt+0x8764>
   1a7a4:	mov	r0, r6
   1a7a8:	bl	11a88 <fclose@plt>
   1a7ac:	mov	r0, r8
   1a7b0:	bl	11a88 <fclose@plt>
   1a7b4:	b	1a580 <ASN1_STRING_length@plt+0x860c>
   1a7b8:	ldr	r3, [pc, #176]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a7bc:	mov	r2, #21
   1a7c0:	mov	r1, #1
   1a7c4:	ldr	r3, [r3]
   1a7c8:	ldr	r0, [pc, #216]	; 1a8a8 <ASN1_STRING_length@plt+0x8934>
   1a7cc:	bl	11d10 <fwrite@plt>
   1a7d0:	mov	sl, #1
   1a7d4:	b	1a580 <ASN1_STRING_length@plt+0x860c>
   1a7d8:	bl	11f38 <__errno_location@plt>
   1a7dc:	ldr	r3, [pc, #140]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a7e0:	ldr	r2, [r3]
   1a7e4:	ldr	r3, [r0]
   1a7e8:	mov	r0, r2
   1a7ec:	cmp	r3, #2
   1a7f0:	mov	r3, r7
   1a7f4:	beq	1a830 <ASN1_STRING_length@plt+0x88bc>
   1a7f8:	ldr	r2, [pc, #172]	; 1a8ac <ASN1_STRING_length@plt+0x8938>
   1a7fc:	mov	r1, #1
   1a800:	bl	11d94 <__fprintf_chk@plt>
   1a804:	mov	sl, #1
   1a808:	b	1a580 <ASN1_STRING_length@plt+0x860c>
   1a80c:	ldr	r1, [pc, #92]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a810:	ldr	r3, [sp, #16]
   1a814:	ldr	r2, [pc, #148]	; 1a8b0 <ASN1_STRING_length@plt+0x893c>
   1a818:	ldr	r0, [r1]
   1a81c:	mov	r1, #1
   1a820:	bl	11d94 <__fprintf_chk@plt>
   1a824:	mov	r0, r6
   1a828:	bl	11a88 <fclose@plt>
   1a82c:	b	1a57c <ASN1_STRING_length@plt+0x8608>
   1a830:	ldr	r2, [pc, #124]	; 1a8b4 <ASN1_STRING_length@plt+0x8940>
   1a834:	mov	r1, #1
   1a838:	mov	sl, r6
   1a83c:	bl	11d94 <__fprintf_chk@plt>
   1a840:	b	1a580 <ASN1_STRING_length@plt+0x860c>
   1a844:	ldr	r1, [pc, #36]	; 1a870 <ASN1_STRING_length@plt+0x88fc>
   1a848:	ldr	r3, [sp, #16]
   1a84c:	ldr	r2, [pc, #100]	; 1a8b8 <ASN1_STRING_length@plt+0x8944>
   1a850:	b	1a818 <ASN1_STRING_length@plt+0x88a4>
   1a854:	bl	11d88 <__stack_chk_fail@plt>
   1a858:	andeq	pc, r3, r8, ror #25
   1a85c:	andeq	sp, r2, r4, ror #19
   1a860:	andeq	sp, r2, r4, lsl #26
   1a864:	muleq	r2, ip, r9
   1a868:	ldrdeq	sp, [r2], -ip
   1a86c:	andeq	r0, r4, r0, asr r0
   1a870:	andeq	r0, r4, r8, asr #32
   1a874:	andeq	sp, r2, ip, lsl sl
   1a878:	strdeq	sp, [r2], -r0
   1a87c:	strdeq	sp, [r2], -r8
   1a880:	andeq	sp, r2, r4, ror sl
   1a884:	andeq	sp, r2, r4, lsl #20
   1a888:	strdeq	sp, [r2], -r8
   1a88c:	andeq	sp, r2, r0, lsl sp
   1a890:	andeq	sp, r2, ip, asr sl
   1a894:	andeq	sp, r2, ip, ror sl
   1a898:	andeq	r0, r0, sp, ror #3
   1a89c:	andeq	sp, r2, r4, lsr fp
   1a8a0:	andeq	sp, r2, ip, asr fp
   1a8a4:	andeq	sp, r2, ip, ror #22
   1a8a8:	andeq	sp, r2, r4, asr #20
   1a8ac:	andeq	sp, r2, r0, asr #21
   1a8b0:	strdeq	sp, [r2], -ip
   1a8b4:	andeq	sp, r2, r0, lsl #21
   1a8b8:	andeq	sp, r2, r8, lsr fp
   1a8bc:	cmp	r1, #0
   1a8c0:	beq	1a8dc <ASN1_STRING_length@plt+0x8968>
   1a8c4:	mov	r3, #0
   1a8c8:	str	r1, [r0, #12]
   1a8cc:	str	r3, [r0]
   1a8d0:	str	r3, [r0, #4]
   1a8d4:	str	r3, [r0, #8]
   1a8d8:	bx	lr
   1a8dc:	ldr	r3, [pc, #28]	; 1a900 <ASN1_STRING_length@plt+0x898c>
   1a8e0:	ldr	r1, [pc, #28]	; 1a904 <ASN1_STRING_length@plt+0x8990>
   1a8e4:	ldr	r0, [pc, #28]	; 1a908 <ASN1_STRING_length@plt+0x8994>
   1a8e8:	push	{r4, lr}
   1a8ec:	add	r3, pc, r3
   1a8f0:	mov	r2, #42	; 0x2a
   1a8f4:	add	r1, pc, r1
   1a8f8:	add	r0, pc, r0
   1a8fc:	bl	11b6c <__assert_fail@plt>
   1a900:	andeq	r3, r1, ip, lsl #11
   1a904:	muleq	r1, r0, r5
   1a908:	andeq	r3, r1, r0, lsr #11
   1a90c:	ldr	r3, [r0, #4]
   1a910:	push	{r4, r5, r6, lr}
   1a914:	mov	r6, r1
   1a918:	ldr	r1, [r0, #8]
   1a91c:	add	r2, r3, #1
   1a920:	cmp	r2, r1
   1a924:	mov	r4, r0
   1a928:	ldr	r0, [r0]
   1a92c:	bcs	1a940 <ASN1_STRING_length@plt+0x89cc>
   1a930:	str	r6, [r0, r3, lsl #2]
   1a934:	mov	r0, r3
   1a938:	str	r2, [r4, #4]
   1a93c:	pop	{r4, r5, r6, pc}
   1a940:	ldr	r5, [r4, #12]
   1a944:	add	r5, r1, r5
   1a948:	lsl	r1, r5, #2
   1a94c:	bl	11ec0 <realloc@plt>
   1a950:	cmp	r0, #0
   1a954:	beq	1a96c <ASN1_STRING_length@plt+0x89f8>
   1a958:	ldr	r3, [r4, #4]
   1a95c:	str	r0, [r4]
   1a960:	add	r2, r3, #1
   1a964:	str	r5, [r4, #8]
   1a968:	b	1a930 <ASN1_STRING_length@plt+0x89bc>
   1a96c:	mvn	r0, #11
   1a970:	pop	{r4, r5, r6, pc}
   1a974:	ldm	r0, {r3, ip}
   1a978:	add	ip, r3, ip, lsl #2
   1a97c:	cmp	r3, ip
   1a980:	bcs	1a9b4 <ASN1_STRING_length@plt+0x8a40>
   1a984:	ldr	r2, [r3]
   1a988:	cmp	r1, r2
   1a98c:	beq	1a9b8 <ASN1_STRING_length@plt+0x8a44>
   1a990:	add	r3, r3, #4
   1a994:	b	1a9a8 <ASN1_STRING_length@plt+0x8a34>
   1a998:	ldr	r2, [r2]
   1a99c:	add	r3, r3, #4
   1a9a0:	cmp	r2, r1
   1a9a4:	beq	1a9b8 <ASN1_STRING_length@plt+0x8a44>
   1a9a8:	cmp	ip, r3
   1a9ac:	mov	r2, r3
   1a9b0:	bhi	1a998 <ASN1_STRING_length@plt+0x8a24>
   1a9b4:	b	1a90c <ASN1_STRING_length@plt+0x8998>
   1a9b8:	mvn	r0, #16
   1a9bc:	bx	lr
   1a9c0:	push	{r4, lr}
   1a9c4:	mov	r4, r0
   1a9c8:	ldr	r0, [r0]
   1a9cc:	bl	11ba8 <free@plt>
   1a9d0:	mov	r3, #0
   1a9d4:	str	r3, [r4, #4]
   1a9d8:	str	r3, [r4, #8]
   1a9dc:	pop	{r4, pc}
   1a9e0:	mov	r3, r1
   1a9e4:	mov	r2, #4
   1a9e8:	ldrd	r0, [r0]
   1a9ec:	b	119ec <qsort@plt>
   1a9f0:	sub	r3, r0, #1
   1a9f4:	mov	r2, #12
   1a9f8:	clz	r3, r3
   1a9fc:	rsb	r3, r3, #32
   1aa00:	push	{r4, r5, r6, lr}
   1aa04:	lsl	r2, r2, r3
   1aa08:	mov	r4, #1
   1aa0c:	mov	r0, r4
   1aa10:	mov	r5, r1
   1aa14:	add	r1, r2, #16
   1aa18:	lsl	r4, r4, r3
   1aa1c:	bl	11ae8 <calloc@plt>
   1aa20:	cmp	r0, #0
   1aa24:	popeq	{r4, r5, r6, pc}
   1aa28:	cmp	r4, #31
   1aa2c:	strd	r4, [r0, #8]
   1aa30:	bhi	1aa40 <ASN1_STRING_length@plt+0x8acc>
   1aa34:	mov	r3, #4
   1aa38:	str	r3, [r0, #4]
   1aa3c:	pop	{r4, r5, r6, pc}
   1aa40:	cmp	r4, #2080	; 0x820
   1aa44:	lsrcc	r3, r4, #5
   1aa48:	movcs	r3, #64	; 0x40
   1aa4c:	str	r3, [r0, #4]
   1aa50:	pop	{r4, r5, r6, pc}
   1aa54:	push	{r4, r5, r6, r7, r8, lr}
   1aa58:	subs	r7, r0, #0
   1aa5c:	popeq	{r4, r5, r6, r7, r8, pc}
   1aa60:	ldr	r8, [r7, #8]
   1aa64:	add	r3, r7, #16
   1aa68:	add	r8, r8, r8, lsl #1
   1aa6c:	add	r8, r3, r8, lsl #2
   1aa70:	cmp	r3, r8
   1aa74:	addcc	r5, r7, #28
   1aa78:	bcc	1aa94 <ASN1_STRING_length@plt+0x8b20>
   1aa7c:	b	1aad8 <ASN1_STRING_length@plt+0x8b64>
   1aa80:	mov	r0, r4
   1aa84:	bl	11ba8 <free@plt>
   1aa88:	cmp	r8, r5
   1aa8c:	add	r5, r5, #12
   1aa90:	bls	1aad8 <ASN1_STRING_length@plt+0x8b64>
   1aa94:	ldr	r3, [r7, #12]
   1aa98:	ldr	r4, [r5, #-12]
   1aa9c:	cmp	r3, #0
   1aaa0:	beq	1aa80 <ASN1_STRING_length@plt+0x8b0c>
   1aaa4:	ldr	r6, [r5, #-8]
   1aaa8:	add	r6, r4, r6, lsl #3
   1aaac:	cmp	r4, r6
   1aab0:	bcc	1aabc <ASN1_STRING_length@plt+0x8b48>
   1aab4:	b	1aa80 <ASN1_STRING_length@plt+0x8b0c>
   1aab8:	ldr	r3, [r7, #12]
   1aabc:	ldr	r0, [r4, #4]
   1aac0:	add	r4, r4, #8
   1aac4:	blx	r3
   1aac8:	cmp	r6, r4
   1aacc:	bhi	1aab8 <ASN1_STRING_length@plt+0x8b44>
   1aad0:	ldr	r4, [r5, #-12]
   1aad4:	b	1aa80 <ASN1_STRING_length@plt+0x8b0c>
   1aad8:	mov	r0, r7
   1aadc:	pop	{r4, r5, r6, r7, r8, lr}
   1aae0:	b	11ba8 <free@plt>
   1aae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aae8:	mov	r5, r0
   1aaec:	sub	sp, sp, #12
   1aaf0:	mov	r0, r1
   1aaf4:	mov	r4, r1
   1aaf8:	mov	r6, r2
   1aafc:	bl	11c44 <strlen@plt>
   1ab00:	lsrs	ip, r0, #2
   1ab04:	and	lr, r0, #3
   1ab08:	beq	1acdc <ASN1_STRING_length@plt+0x8d68>
   1ab0c:	add	ip, r4, ip, lsl #2
   1ab10:	mov	r2, r4
   1ab14:	ldrb	r8, [r2, #1]
   1ab18:	ldrb	r3, [r2]
   1ab1c:	ldrb	r7, [r2, #3]
   1ab20:	ldrb	r1, [r2, #2]
   1ab24:	orr	r3, r3, r8, lsl #8
   1ab28:	add	r3, r3, r0
   1ab2c:	orr	r1, r1, r7, lsl #8
   1ab30:	lsl	r0, r3, #16
   1ab34:	eor	r0, r0, r1, lsl #11
   1ab38:	eor	r0, r0, r3
   1ab3c:	add	r2, r2, #4
   1ab40:	cmp	r2, ip
   1ab44:	add	r0, r0, r0, lsr #11
   1ab48:	bne	1ab14 <ASN1_STRING_length@plt+0x8ba0>
   1ab4c:	cmp	lr, #2
   1ab50:	beq	1acc0 <ASN1_STRING_length@plt+0x8d4c>
   1ab54:	cmp	lr, #3
   1ab58:	beq	1ac98 <ASN1_STRING_length@plt+0x8d24>
   1ab5c:	cmp	lr, #1
   1ab60:	beq	1ac84 <ASN1_STRING_length@plt+0x8d10>
   1ab64:	eor	r0, r0, r0, lsl #3
   1ab68:	ldr	fp, [r5, #8]
   1ab6c:	add	r3, r0, r0, lsr #5
   1ab70:	sub	fp, fp, #1
   1ab74:	eor	r3, r3, r3, lsl #4
   1ab78:	add	r9, r5, #16
   1ab7c:	add	r3, r3, r3, lsr #17
   1ab80:	eor	r3, r3, r3, lsl #25
   1ab84:	add	r3, r3, r3, lsr #6
   1ab88:	and	r3, r3, fp
   1ab8c:	add	r3, r3, r3, lsl #1
   1ab90:	lsl	fp, r3, #2
   1ab94:	add	sl, r9, fp
   1ab98:	ldr	r7, [r9, fp]
   1ab9c:	ldr	r8, [sl, #4]
   1aba0:	ldr	r3, [sl, #8]
   1aba4:	add	r2, r8, #1
   1aba8:	cmp	r2, r3
   1abac:	bcs	1ac50 <ASN1_STRING_length@plt+0x8cdc>
   1abb0:	add	r9, r7, r8, lsl #3
   1abb4:	cmp	r9, r7
   1abb8:	bhi	1abd0 <ASN1_STRING_length@plt+0x8c5c>
   1abbc:	b	1acf4 <ASN1_STRING_length@plt+0x8d80>
   1abc0:	blt	1ac0c <ASN1_STRING_length@plt+0x8c98>
   1abc4:	cmp	r9, r3
   1abc8:	mov	r7, r3
   1abcc:	bls	1ac24 <ASN1_STRING_length@plt+0x8cb0>
   1abd0:	ldr	r1, [r7]
   1abd4:	mov	r0, r4
   1abd8:	bl	11f14 <strcmp@plt>
   1abdc:	add	r3, r7, #8
   1abe0:	subs	fp, r0, #0
   1abe4:	bne	1abc0 <ASN1_STRING_length@plt+0x8c4c>
   1abe8:	ldr	r3, [r5, #12]
   1abec:	cmp	r3, #0
   1abf0:	beq	1abfc <ASN1_STRING_length@plt+0x8c88>
   1abf4:	ldr	r0, [r7, #4]
   1abf8:	blx	r3
   1abfc:	mov	r0, fp
   1ac00:	stm	r7, {r4, r6}
   1ac04:	add	sp, sp, #12
   1ac08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac0c:	mov	r0, r3
   1ac10:	sub	r2, r9, r7
   1ac14:	mov	r1, r7
   1ac18:	bl	11df4 <memmove@plt>
   1ac1c:	ldr	r8, [sl, #4]
   1ac20:	mov	r3, r7
   1ac24:	ldr	r2, [r5]
   1ac28:	mov	fp, #0
   1ac2c:	add	r8, r8, #1
   1ac30:	add	r2, r2, #1
   1ac34:	str	r4, [r3]
   1ac38:	str	r6, [r3, #4]
   1ac3c:	str	r8, [sl, #4]
   1ac40:	str	r2, [r5]
   1ac44:	mov	r0, fp
   1ac48:	add	sp, sp, #12
   1ac4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac50:	ldr	r2, [r5, #4]
   1ac54:	mov	r0, r7
   1ac58:	add	r3, r3, r2
   1ac5c:	str	r3, [sp, #4]
   1ac60:	lsl	r1, r3, #3
   1ac64:	bl	11ec0 <realloc@plt>
   1ac68:	ldr	r3, [sp, #4]
   1ac6c:	subs	r7, r0, #0
   1ac70:	beq	1ace4 <ASN1_STRING_length@plt+0x8d70>
   1ac74:	ldr	r8, [sl, #4]
   1ac78:	str	r7, [r9, fp]
   1ac7c:	str	r3, [sl, #8]
   1ac80:	b	1abb0 <ASN1_STRING_length@plt+0x8c3c>
   1ac84:	ldrb	r3, [ip]
   1ac88:	add	r0, r3, r0
   1ac8c:	eor	r0, r0, r0, lsl #10
   1ac90:	add	r0, r0, r0, lsr #1
   1ac94:	b	1ab64 <ASN1_STRING_length@plt+0x8bf0>
   1ac98:	ldrb	r1, [ip, #1]
   1ac9c:	ldrb	r3, [ip]
   1aca0:	ldrb	r2, [ip, #2]
   1aca4:	orr	r3, r3, r1, lsl #8
   1aca8:	add	r3, r3, r0
   1acac:	lsl	r0, r3, #16
   1acb0:	eor	r0, r0, r2, lsl #18
   1acb4:	eor	r0, r0, r3
   1acb8:	add	r0, r0, r0, lsr #11
   1acbc:	b	1ab64 <ASN1_STRING_length@plt+0x8bf0>
   1acc0:	ldrb	r2, [ip, #1]
   1acc4:	ldrb	r3, [ip]
   1acc8:	orr	r3, r3, r2, lsl #8
   1accc:	add	r0, r3, r0
   1acd0:	eor	r0, r0, r0, lsl #11
   1acd4:	add	r0, r0, r0, lsr #17
   1acd8:	b	1ab64 <ASN1_STRING_length@plt+0x8bf0>
   1acdc:	mov	ip, r4
   1ace0:	b	1ab4c <ASN1_STRING_length@plt+0x8bd8>
   1ace4:	bl	11f38 <__errno_location@plt>
   1ace8:	ldr	fp, [r0]
   1acec:	rsb	fp, fp, #0
   1acf0:	b	1ac44 <ASN1_STRING_length@plt+0x8cd0>
   1acf4:	mov	r3, r7
   1acf8:	b	1ac24 <ASN1_STRING_length@plt+0x8cb0>
   1acfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad00:	mov	r5, r0
   1ad04:	sub	sp, sp, #12
   1ad08:	mov	r0, r1
   1ad0c:	mov	r4, r1
   1ad10:	mov	r6, r2
   1ad14:	bl	11c44 <strlen@plt>
   1ad18:	lsrs	ip, r0, #2
   1ad1c:	and	lr, r0, #3
   1ad20:	beq	1aed4 <ASN1_STRING_length@plt+0x8f60>
   1ad24:	add	ip, r4, ip, lsl #2
   1ad28:	mov	r2, r4
   1ad2c:	ldrb	r8, [r2, #1]
   1ad30:	ldrb	r3, [r2]
   1ad34:	ldrb	r7, [r2, #3]
   1ad38:	ldrb	r1, [r2, #2]
   1ad3c:	orr	r3, r3, r8, lsl #8
   1ad40:	add	r3, r3, r0
   1ad44:	orr	r1, r1, r7, lsl #8
   1ad48:	lsl	r0, r3, #16
   1ad4c:	eor	r0, r0, r1, lsl #11
   1ad50:	eor	r0, r0, r3
   1ad54:	add	r2, r2, #4
   1ad58:	cmp	r2, ip
   1ad5c:	add	r0, r0, r0, lsr #11
   1ad60:	bne	1ad2c <ASN1_STRING_length@plt+0x8db8>
   1ad64:	cmp	lr, #2
   1ad68:	beq	1aeb8 <ASN1_STRING_length@plt+0x8f44>
   1ad6c:	cmp	lr, #3
   1ad70:	beq	1ae90 <ASN1_STRING_length@plt+0x8f1c>
   1ad74:	cmp	lr, #1
   1ad78:	beq	1ae7c <ASN1_STRING_length@plt+0x8f08>
   1ad7c:	eor	r0, r0, r0, lsl #3
   1ad80:	ldr	fp, [r5, #8]
   1ad84:	add	r3, r0, r0, lsr #5
   1ad88:	sub	fp, fp, #1
   1ad8c:	eor	r3, r3, r3, lsl #4
   1ad90:	add	r9, r5, #16
   1ad94:	add	r3, r3, r3, lsr #17
   1ad98:	eor	r3, r3, r3, lsl #25
   1ad9c:	add	r3, r3, r3, lsr #6
   1ada0:	and	r3, r3, fp
   1ada4:	add	r3, r3, r3, lsl #1
   1ada8:	lsl	fp, r3, #2
   1adac:	add	sl, r9, fp
   1adb0:	ldr	r7, [r9, fp]
   1adb4:	ldr	r8, [sl, #4]
   1adb8:	ldr	r3, [sl, #8]
   1adbc:	add	r2, r8, #1
   1adc0:	cmp	r2, r3
   1adc4:	bcs	1ae48 <ASN1_STRING_length@plt+0x8ed4>
   1adc8:	add	r9, r7, r8, lsl #3
   1adcc:	cmp	r9, r7
   1add0:	bhi	1ade8 <ASN1_STRING_length@plt+0x8e74>
   1add4:	b	1aeec <ASN1_STRING_length@plt+0x8f78>
   1add8:	blt	1ae0c <ASN1_STRING_length@plt+0x8e98>
   1addc:	cmp	r9, r3
   1ade0:	mov	r7, r3
   1ade4:	bls	1ae24 <ASN1_STRING_length@plt+0x8eb0>
   1ade8:	ldr	r1, [r7]
   1adec:	mov	r0, r4
   1adf0:	bl	11f14 <strcmp@plt>
   1adf4:	add	r3, r7, #8
   1adf8:	cmp	r0, #0
   1adfc:	bne	1add8 <ASN1_STRING_length@plt+0x8e64>
   1ae00:	mvn	r0, #16
   1ae04:	add	sp, sp, #12
   1ae08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae0c:	mov	r0, r3
   1ae10:	sub	r2, r9, r7
   1ae14:	mov	r1, r7
   1ae18:	bl	11df4 <memmove@plt>
   1ae1c:	ldr	r8, [sl, #4]
   1ae20:	mov	r3, r7
   1ae24:	ldr	r2, [r5]
   1ae28:	mov	r0, #0
   1ae2c:	add	r8, r8, #1
   1ae30:	add	r2, r2, #1
   1ae34:	stm	r3, {r4, r6}
   1ae38:	str	r8, [sl, #4]
   1ae3c:	str	r2, [r5]
   1ae40:	add	sp, sp, #12
   1ae44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae48:	ldr	r2, [r5, #4]
   1ae4c:	mov	r0, r7
   1ae50:	add	r3, r3, r2
   1ae54:	str	r3, [sp, #4]
   1ae58:	lsl	r1, r3, #3
   1ae5c:	bl	11ec0 <realloc@plt>
   1ae60:	ldr	r3, [sp, #4]
   1ae64:	subs	r7, r0, #0
   1ae68:	beq	1aedc <ASN1_STRING_length@plt+0x8f68>
   1ae6c:	ldr	r8, [sl, #4]
   1ae70:	str	r7, [r9, fp]
   1ae74:	str	r3, [sl, #8]
   1ae78:	b	1adc8 <ASN1_STRING_length@plt+0x8e54>
   1ae7c:	ldrb	r3, [ip]
   1ae80:	add	r0, r3, r0
   1ae84:	eor	r0, r0, r0, lsl #10
   1ae88:	add	r0, r0, r0, lsr #1
   1ae8c:	b	1ad7c <ASN1_STRING_length@plt+0x8e08>
   1ae90:	ldrb	r1, [ip, #1]
   1ae94:	ldrb	r3, [ip]
   1ae98:	ldrb	r2, [ip, #2]
   1ae9c:	orr	r3, r3, r1, lsl #8
   1aea0:	add	r3, r3, r0
   1aea4:	lsl	r0, r3, #16
   1aea8:	eor	r0, r0, r2, lsl #18
   1aeac:	eor	r0, r0, r3
   1aeb0:	add	r0, r0, r0, lsr #11
   1aeb4:	b	1ad7c <ASN1_STRING_length@plt+0x8e08>
   1aeb8:	ldrb	r2, [ip, #1]
   1aebc:	ldrb	r3, [ip]
   1aec0:	orr	r3, r3, r2, lsl #8
   1aec4:	add	r0, r3, r0
   1aec8:	eor	r0, r0, r0, lsl #11
   1aecc:	add	r0, r0, r0, lsr #17
   1aed0:	b	1ad7c <ASN1_STRING_length@plt+0x8e08>
   1aed4:	mov	ip, r4
   1aed8:	b	1ad64 <ASN1_STRING_length@plt+0x8df0>
   1aedc:	bl	11f38 <__errno_location@plt>
   1aee0:	ldr	r0, [r0]
   1aee4:	rsb	r0, r0, #0
   1aee8:	b	1ae40 <ASN1_STRING_length@plt+0x8ecc>
   1aeec:	mov	r3, r7
   1aef0:	b	1ae24 <ASN1_STRING_length@plt+0x8eb0>
   1aef4:	push	{r4, r5, r6, r7, r8, lr}
   1aef8:	mov	r4, r0
   1aefc:	mov	r0, r1
   1af00:	mov	r5, r1
   1af04:	bl	11c44 <strlen@plt>
   1af08:	lsrs	ip, r0, #2
   1af0c:	and	lr, r0, #3
   1af10:	beq	1b054 <ASN1_STRING_length@plt+0x90e0>
   1af14:	add	ip, r5, ip, lsl #2
   1af18:	mov	r2, r5
   1af1c:	ldrb	r7, [r2, #1]
   1af20:	ldrb	r3, [r2]
   1af24:	ldrb	r6, [r2, #3]
   1af28:	ldrb	r1, [r2, #2]
   1af2c:	orr	r3, r3, r7, lsl #8
   1af30:	add	r3, r3, r0
   1af34:	orr	r1, r1, r6, lsl #8
   1af38:	lsl	r0, r3, #16
   1af3c:	eor	r0, r0, r1, lsl #11
   1af40:	eor	r0, r0, r3
   1af44:	add	r2, r2, #4
   1af48:	cmp	r2, ip
   1af4c:	add	r0, r0, r0, lsr #11
   1af50:	bne	1af1c <ASN1_STRING_length@plt+0x8fa8>
   1af54:	cmp	lr, #2
   1af58:	beq	1affc <ASN1_STRING_length@plt+0x9088>
   1af5c:	cmp	lr, #3
   1af60:	beq	1b02c <ASN1_STRING_length@plt+0x90b8>
   1af64:	cmp	lr, #1
   1af68:	beq	1b018 <ASN1_STRING_length@plt+0x90a4>
   1af6c:	eor	r0, r0, r0, lsl #3
   1af70:	ldr	r2, [r4, #8]
   1af74:	add	r3, r0, r0, lsr #5
   1af78:	sub	r2, r2, #1
   1af7c:	eor	r3, r3, r3, lsl #4
   1af80:	add	r4, r4, #16
   1af84:	add	r3, r3, r3, lsr #17
   1af88:	mov	r6, #0
   1af8c:	eor	r3, r3, r3, lsl #25
   1af90:	add	r3, r3, r3, lsr #6
   1af94:	and	r3, r3, r2
   1af98:	add	r3, r3, r3, lsl #1
   1af9c:	lsl	r3, r3, #2
   1afa0:	add	r2, r4, r3
   1afa4:	ldr	r8, [r4, r3]
   1afa8:	ldr	r7, [r2, #4]
   1afac:	cmp	r6, r7
   1afb0:	bcs	1afe4 <ASN1_STRING_length@plt+0x9070>
   1afb4:	add	r4, r6, r7
   1afb8:	mov	r0, r5
   1afbc:	lsr	r4, r4, #1
   1afc0:	ldr	r1, [r8, r4, lsl #3]
   1afc4:	bl	11f14 <strcmp@plt>
   1afc8:	add	r3, r8, r4, lsl #3
   1afcc:	cmp	r0, #0
   1afd0:	blt	1afec <ASN1_STRING_length@plt+0x9078>
   1afd4:	beq	1aff4 <ASN1_STRING_length@plt+0x9080>
   1afd8:	add	r6, r4, #1
   1afdc:	cmp	r6, r7
   1afe0:	bcc	1afb4 <ASN1_STRING_length@plt+0x9040>
   1afe4:	mov	r0, #0
   1afe8:	pop	{r4, r5, r6, r7, r8, pc}
   1afec:	mov	r7, r4
   1aff0:	b	1afac <ASN1_STRING_length@plt+0x9038>
   1aff4:	ldr	r0, [r3, #4]
   1aff8:	pop	{r4, r5, r6, r7, r8, pc}
   1affc:	ldrb	r2, [ip, #1]
   1b000:	ldrb	r3, [ip]
   1b004:	orr	r3, r3, r2, lsl #8
   1b008:	add	r0, r3, r0
   1b00c:	eor	r0, r0, r0, lsl #11
   1b010:	add	r0, r0, r0, lsr #17
   1b014:	b	1af6c <ASN1_STRING_length@plt+0x8ff8>
   1b018:	ldrb	r3, [ip]
   1b01c:	add	r0, r3, r0
   1b020:	eor	r0, r0, r0, lsl #10
   1b024:	add	r0, r0, r0, lsr #1
   1b028:	b	1af6c <ASN1_STRING_length@plt+0x8ff8>
   1b02c:	ldrb	r1, [ip, #1]
   1b030:	ldrb	r3, [ip]
   1b034:	ldrb	r2, [ip, #2]
   1b038:	orr	r3, r3, r1, lsl #8
   1b03c:	add	r3, r3, r0
   1b040:	lsl	r0, r3, #16
   1b044:	eor	r0, r0, r2, lsl #18
   1b048:	eor	r0, r0, r3
   1b04c:	add	r0, r0, r0, lsr #11
   1b050:	b	1af6c <ASN1_STRING_length@plt+0x8ff8>
   1b054:	mov	ip, r5
   1b058:	b	1af54 <ASN1_STRING_length@plt+0x8fe0>
   1b05c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b060:	mov	sl, r0
   1b064:	sub	sp, sp, #20
   1b068:	mov	r0, r1
   1b06c:	mov	r7, r1
   1b070:	bl	11c44 <strlen@plt>
   1b074:	lsrs	ip, r0, #2
   1b078:	and	lr, r0, #3
   1b07c:	beq	1b298 <ASN1_STRING_length@plt+0x9324>
   1b080:	add	ip, r7, ip, lsl #2
   1b084:	mov	r2, r7
   1b088:	ldrb	r5, [r2, #1]
   1b08c:	ldrb	r3, [r2]
   1b090:	ldrb	r4, [r2, #3]
   1b094:	ldrb	r1, [r2, #2]
   1b098:	orr	r3, r3, r5, lsl #8
   1b09c:	add	r3, r3, r0
   1b0a0:	orr	r1, r1, r4, lsl #8
   1b0a4:	lsl	r0, r3, #16
   1b0a8:	eor	r0, r0, r1, lsl #11
   1b0ac:	eor	r0, r0, r3
   1b0b0:	add	r2, r2, #4
   1b0b4:	cmp	r2, ip
   1b0b8:	add	r0, r0, r0, lsr #11
   1b0bc:	bne	1b088 <ASN1_STRING_length@plt+0x9114>
   1b0c0:	cmp	lr, #2
   1b0c4:	beq	1b27c <ASN1_STRING_length@plt+0x9308>
   1b0c8:	cmp	lr, #3
   1b0cc:	beq	1b254 <ASN1_STRING_length@plt+0x92e0>
   1b0d0:	cmp	lr, #1
   1b0d4:	beq	1b240 <ASN1_STRING_length@plt+0x92cc>
   1b0d8:	eor	r0, r0, r0, lsl #3
   1b0dc:	ldr	r9, [sl, #8]
   1b0e0:	add	r3, r0, r0, lsr #5
   1b0e4:	sub	r9, r9, #1
   1b0e8:	eor	r3, r3, r3, lsl #4
   1b0ec:	add	r2, sl, #16
   1b0f0:	add	r3, r3, r3, lsr #17
   1b0f4:	mov	r5, #0
   1b0f8:	eor	r3, r3, r3, lsl #25
   1b0fc:	str	r2, [sp, #4]
   1b100:	add	r3, r3, r3, lsr #6
   1b104:	and	r3, r3, r9
   1b108:	add	r3, r3, r3, lsl #1
   1b10c:	lsl	r3, r3, #2
   1b110:	add	fp, r2, r3
   1b114:	str	r3, [sp, #8]
   1b118:	ldr	r9, [r2, r3]
   1b11c:	ldr	r3, [fp, #4]
   1b120:	mov	r6, r3
   1b124:	str	r3, [sp]
   1b128:	cmp	r6, r5
   1b12c:	bls	1b160 <ASN1_STRING_length@plt+0x91ec>
   1b130:	add	r4, r5, r6
   1b134:	mov	r0, r7
   1b138:	lsr	r4, r4, #1
   1b13c:	ldr	r1, [r9, r4, lsl #3]
   1b140:	bl	11f14 <strcmp@plt>
   1b144:	add	r8, r9, r4, lsl #3
   1b148:	subs	r3, r0, #0
   1b14c:	blt	1b170 <ASN1_STRING_length@plt+0x91fc>
   1b150:	beq	1b178 <ASN1_STRING_length@plt+0x9204>
   1b154:	add	r5, r4, #1
   1b158:	cmp	r6, r5
   1b15c:	bhi	1b130 <ASN1_STRING_length@plt+0x91bc>
   1b160:	mvn	r3, #1
   1b164:	mov	r0, r3
   1b168:	add	sp, sp, #20
   1b16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b170:	mov	r6, r4
   1b174:	b	1b128 <ASN1_STRING_length@plt+0x91b4>
   1b178:	ldr	r1, [sl, #12]
   1b17c:	cmp	r1, #0
   1b180:	beq	1b1a8 <ASN1_STRING_length@plt+0x9234>
   1b184:	ldr	r0, [r8, #4]
   1b188:	str	r3, [sp, #12]
   1b18c:	blx	r1
   1b190:	ldr	r3, [sp, #4]
   1b194:	ldr	r2, [sp, #8]
   1b198:	ldr	r9, [r3, r2]
   1b19c:	ldr	r3, [fp, #4]
   1b1a0:	str	r3, [sp]
   1b1a4:	ldr	r3, [sp, #12]
   1b1a8:	str	r3, [sp, #12]
   1b1ac:	ldr	r3, [sp]
   1b1b0:	add	r1, r8, #8
   1b1b4:	mov	r0, r8
   1b1b8:	add	r2, r9, r3, lsl #3
   1b1bc:	sub	r2, r2, r8
   1b1c0:	bl	11df4 <memmove@plt>
   1b1c4:	ldm	sl, {r2, r4}
   1b1c8:	ldr	r0, [fp, #4]
   1b1cc:	sub	r2, r2, #1
   1b1d0:	sub	r0, r0, #1
   1b1d4:	str	r0, [fp, #4]
   1b1d8:	mov	r1, r4
   1b1dc:	str	r2, [sl]
   1b1e0:	bl	2a198 <ASN1_STRING_length@plt+0x18224>
   1b1e4:	mov	r1, r4
   1b1e8:	add	r5, r0, #1
   1b1ec:	ldr	r0, [fp, #8]
   1b1f0:	bl	2a198 <ASN1_STRING_length@plt+0x18224>
   1b1f4:	ldr	r3, [sp, #12]
   1b1f8:	cmp	r5, r0
   1b1fc:	bcs	1b164 <ASN1_STRING_length@plt+0x91f0>
   1b200:	mul	r1, r5, r4
   1b204:	ldmib	sp, {r4, r6}
   1b208:	str	r3, [sp]
   1b20c:	lsl	r1, r1, #3
   1b210:	ldr	r0, [r4, r6]
   1b214:	bl	11ec0 <realloc@plt>
   1b218:	ldr	r3, [sp]
   1b21c:	cmp	r0, #0
   1b220:	beq	1b164 <ASN1_STRING_length@plt+0x91f0>
   1b224:	ldr	r2, [sl, #4]
   1b228:	str	r0, [r4, r6]
   1b22c:	mov	r0, r3
   1b230:	mul	r5, r5, r2
   1b234:	str	r5, [fp, #8]
   1b238:	add	sp, sp, #20
   1b23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b240:	ldrb	r3, [ip]
   1b244:	add	r0, r3, r0
   1b248:	eor	r0, r0, r0, lsl #10
   1b24c:	add	r0, r0, r0, lsr #1
   1b250:	b	1b0d8 <ASN1_STRING_length@plt+0x9164>
   1b254:	ldrb	r1, [ip, #1]
   1b258:	ldrb	r3, [ip]
   1b25c:	ldrb	r2, [ip, #2]
   1b260:	orr	r3, r3, r1, lsl #8
   1b264:	add	r3, r3, r0
   1b268:	lsl	r0, r3, #16
   1b26c:	eor	r0, r0, r2, lsl #18
   1b270:	eor	r0, r0, r3
   1b274:	add	r0, r0, r0, lsr #11
   1b278:	b	1b0d8 <ASN1_STRING_length@plt+0x9164>
   1b27c:	ldrb	r2, [ip, #1]
   1b280:	ldrb	r3, [ip]
   1b284:	orr	r3, r3, r2, lsl #8
   1b288:	add	r0, r3, r0
   1b28c:	eor	r0, r0, r0, lsl #11
   1b290:	add	r0, r0, r0, lsr #17
   1b294:	b	1b0d8 <ASN1_STRING_length@plt+0x9164>
   1b298:	mov	ip, r7
   1b29c:	b	1b0c0 <ASN1_STRING_length@plt+0x914c>
   1b2a0:	ldr	r0, [r0]
   1b2a4:	bx	lr
   1b2a8:	mov	r2, #0
   1b2ac:	mvn	r3, #0
   1b2b0:	stm	r1, {r0, r2, r3}
   1b2b4:	bx	lr
   1b2b8:	ldr	r3, [r0, #4]
   1b2bc:	push	{r4, r5, r6, r7, r8, lr}
   1b2c0:	ldr	ip, [r0]
   1b2c4:	add	r4, r3, r3, lsl #1
   1b2c8:	add	r8, ip, #16
   1b2cc:	lsl	r4, r4, #2
   1b2d0:	add	lr, r8, r4
   1b2d4:	ldr	r5, [r0, #8]
   1b2d8:	ldr	r6, [lr, #4]
   1b2dc:	add	r5, r5, #1
   1b2e0:	cmp	r5, r6
   1b2e4:	str	r5, [r0, #8]
   1b2e8:	lslcc	r5, r5, #3
   1b2ec:	bcc	1b364 <ASN1_STRING_length@plt+0x93f0>
   1b2f0:	ldr	r6, [ip, #8]
   1b2f4:	add	lr, r3, #1
   1b2f8:	mov	r7, #0
   1b2fc:	cmp	lr, r6
   1b300:	str	lr, [r0, #4]
   1b304:	str	r7, [r0, #8]
   1b308:	bcs	1b358 <ASN1_STRING_length@plt+0x93e4>
   1b30c:	add	lr, r4, #12
   1b310:	add	lr, r8, lr
   1b314:	ldr	r5, [lr, #4]
   1b318:	cmp	r5, r7
   1b31c:	bne	1b360 <ASN1_STRING_length@plt+0x93ec>
   1b320:	add	r4, r4, #40	; 0x28
   1b324:	add	ip, ip, r4
   1b328:	add	r3, r3, #2
   1b32c:	b	1b348 <ASN1_STRING_length@plt+0x93d4>
   1b330:	ldr	r4, [lr, #4]
   1b334:	add	ip, ip, #12
   1b338:	cmp	r4, #0
   1b33c:	add	r4, r3, #1
   1b340:	bne	1b390 <ASN1_STRING_length@plt+0x941c>
   1b344:	mov	r3, r4
   1b348:	cmp	r3, r6
   1b34c:	mov	lr, ip
   1b350:	bne	1b330 <ASN1_STRING_length@plt+0x93bc>
   1b354:	str	r3, [r0, #4]
   1b358:	mov	r0, #0
   1b35c:	pop	{r4, r5, r6, r7, r8, pc}
   1b360:	mov	r5, r7
   1b364:	ldr	r3, [lr]
   1b368:	cmp	r2, #0
   1b36c:	add	r5, r3, r5
   1b370:	ldrne	r3, [r5, #4]
   1b374:	strne	r3, [r2]
   1b378:	cmp	r1, #0
   1b37c:	movne	r0, #1
   1b380:	ldrne	r3, [r5]
   1b384:	moveq	r0, #1
   1b388:	strne	r3, [r1]
   1b38c:	pop	{r4, r5, r6, r7, r8, pc}
   1b390:	str	r3, [r0, #4]
   1b394:	b	1b364 <ASN1_STRING_length@plt+0x93f0>
   1b398:	push	{r4, r5, r6, r7, r8, lr}
   1b39c:	ldr	r6, [r0, #4]
   1b3a0:	cmp	r6, r1
   1b3a4:	bcs	1b408 <ASN1_STRING_length@plt+0x9494>
   1b3a8:	ldrb	r3, [r0, #8]
   1b3ac:	mov	r5, r1
   1b3b0:	mov	r4, r0
   1b3b4:	cmp	r3, #0
   1b3b8:	bne	1b3f0 <ASN1_STRING_length@plt+0x947c>
   1b3bc:	mov	r0, r1
   1b3c0:	bl	11d64 <malloc@plt>
   1b3c4:	subs	r7, r0, #0
   1b3c8:	beq	1b400 <ASN1_STRING_length@plt+0x948c>
   1b3cc:	mov	r2, r6
   1b3d0:	ldr	r1, [r4]
   1b3d4:	bl	11c5c <memcpy@plt>
   1b3d8:	mov	r3, #1
   1b3dc:	str	r5, [r4, #4]
   1b3e0:	str	r7, [r4]
   1b3e4:	strb	r3, [r4, #8]
   1b3e8:	mov	r0, #0
   1b3ec:	pop	{r4, r5, r6, r7, r8, pc}
   1b3f0:	ldr	r0, [r0]
   1b3f4:	bl	11ec0 <realloc@plt>
   1b3f8:	subs	r7, r0, #0
   1b3fc:	bne	1b3d8 <ASN1_STRING_length@plt+0x9464>
   1b400:	mvn	r0, #11
   1b404:	pop	{r4, r5, r6, r7, r8, pc}
   1b408:	mov	r0, #0
   1b40c:	pop	{r4, r5, r6, r7, r8, pc}
   1b410:	ldrb	r3, [r0, #8]
   1b414:	cmp	r3, #0
   1b418:	bxeq	lr
   1b41c:	ldr	r0, [r0]
   1b420:	b	11ba8 <free@plt>
   1b424:	push	{r4, r5, r6, lr}
   1b428:	mov	r5, r0
   1b42c:	mov	r0, r1
   1b430:	mov	r4, r1
   1b434:	bl	11d64 <malloc@plt>
   1b438:	cmp	r0, #0
   1b43c:	popeq	{r4, r5, r6, pc}
   1b440:	mov	r2, r4
   1b444:	mov	r1, r5
   1b448:	pop	{r4, r5, r6, lr}
   1b44c:	b	11c5c <memcpy@plt>
   1b450:	ldrb	r3, [r0]
   1b454:	cmp	r3, #0
   1b458:	bxeq	lr
   1b45c:	mov	ip, r0
   1b460:	cmp	r1, r3
   1b464:	strbeq	r2, [ip]
   1b468:	ldrb	r3, [ip, #1]!
   1b46c:	cmp	r3, #0
   1b470:	bne	1b460 <ASN1_STRING_length@plt+0x94ec>
   1b474:	bx	lr
   1b478:	mov	ip, #0
   1b47c:	push	{r4, r5, r6, lr}
   1b480:	mov	r6, #95	; 0x5f
   1b484:	ldrb	r3, [r0, ip]
   1b488:	ldr	r5, [pc, #164]	; 1b534 <ASN1_STRING_length@plt+0x95c0>
   1b48c:	add	r4, r0, ip
   1b490:	cmp	r3, #45	; 0x2d
   1b494:	beq	1b524 <ASN1_STRING_length@plt+0x95b0>
   1b498:	bls	1b4b4 <ASN1_STRING_length@plt+0x9540>
   1b49c:	cmp	r3, #91	; 0x5b
   1b4a0:	beq	1b4d4 <ASN1_STRING_length@plt+0x9560>
   1b4a4:	cmp	r3, #93	; 0x5d
   1b4a8:	bne	1b504 <ASN1_STRING_length@plt+0x9590>
   1b4ac:	mvn	r0, #21
   1b4b0:	pop	{r4, r5, r6, pc}
   1b4b4:	cmp	r3, #0
   1b4b8:	bne	1b504 <ASN1_STRING_length@plt+0x9590>
   1b4bc:	mov	r0, #0
   1b4c0:	cmp	r2, #0
   1b4c4:	strb	r0, [r1, ip]
   1b4c8:	beq	1b52c <ASN1_STRING_length@plt+0x95b8>
   1b4cc:	str	ip, [r2]
   1b4d0:	pop	{r4, r5, r6, pc}
   1b4d4:	sub	ip, ip, #1
   1b4d8:	add	lr, r1, ip
   1b4dc:	strb	r3, [lr, #1]
   1b4e0:	ldrb	r3, [r4, #1]!
   1b4e4:	add	ip, lr, #2
   1b4e8:	sub	ip, ip, r1
   1b4ec:	cmp	r3, #93	; 0x5d
   1b4f0:	cmpne	r3, #0
   1b4f4:	add	lr, lr, #1
   1b4f8:	bne	1b4dc <ASN1_STRING_length@plt+0x9568>
   1b4fc:	cmp	r3, #93	; 0x5d
   1b500:	bne	1b4ac <ASN1_STRING_length@plt+0x9538>
   1b504:	strb	r3, [r1, ip]
   1b508:	add	ip, ip, #1
   1b50c:	cmp	ip, r5
   1b510:	bhi	1b4bc <ASN1_STRING_length@plt+0x9548>
   1b514:	ldrb	r3, [r0, ip]
   1b518:	add	r4, r0, ip
   1b51c:	cmp	r3, #45	; 0x2d
   1b520:	bne	1b498 <ASN1_STRING_length@plt+0x9524>
   1b524:	strb	r6, [r1, ip]
   1b528:	b	1b508 <ASN1_STRING_length@plt+0x9594>
   1b52c:	mov	r0, r2
   1b530:	pop	{r4, r5, r6, pc}
   1b534:	strdeq	r0, [r0], -lr
   1b538:	push	{r4, r5, r6, r7, r8, lr}
   1b53c:	subs	r5, r0, #0
   1b540:	beq	1b5b0 <ASN1_STRING_length@plt+0x963c>
   1b544:	ldrb	r3, [r5]
   1b548:	cmp	r3, #0
   1b54c:	beq	1b590 <ASN1_STRING_length@plt+0x961c>
   1b550:	ldr	r7, [pc, #96]	; 1b5b8 <ASN1_STRING_length@plt+0x9644>
   1b554:	mov	r0, r5
   1b558:	add	r7, pc, r7
   1b55c:	mov	r4, #0
   1b560:	mov	r6, #95	; 0x5f
   1b564:	cmp	r3, #91	; 0x5b
   1b568:	beq	1b598 <ASN1_STRING_length@plt+0x9624>
   1b56c:	cmp	r3, #93	; 0x5d
   1b570:	beq	1b5b0 <ASN1_STRING_length@plt+0x963c>
   1b574:	cmp	r3, #45	; 0x2d
   1b578:	strbeq	r6, [r0]
   1b57c:	add	r4, r4, #1
   1b580:	add	r0, r5, r4
   1b584:	ldrb	r3, [r5, r4]
   1b588:	cmp	r3, #0
   1b58c:	bne	1b564 <ASN1_STRING_length@plt+0x95f0>
   1b590:	mov	r0, #0
   1b594:	pop	{r4, r5, r6, r7, r8, pc}
   1b598:	mov	r1, r7
   1b59c:	bl	11e84 <strcspn@plt>
   1b5a0:	add	r4, r4, r0
   1b5a4:	ldrb	r3, [r5, r4]
   1b5a8:	cmp	r3, #0
   1b5ac:	bne	1b57c <ASN1_STRING_length@plt+0x9608>
   1b5b0:	mvn	r0, #21
   1b5b4:	pop	{r4, r5, r6, r7, r8, pc}
   1b5b8:	andeq	r2, r1, r8, asr r9
   1b5bc:	push	{r4, r5, r6, r7, lr}
   1b5c0:	add	r4, r1, #4080	; 0xff0
   1b5c4:	sub	lr, r0, #1
   1b5c8:	add	r4, r4, #15
   1b5cc:	rsb	r0, r0, #1
   1b5d0:	mov	r3, r1
   1b5d4:	mov	r7, #95	; 0x5f
   1b5d8:	b	1b5ec <ASN1_STRING_length@plt+0x9678>
   1b5dc:	strb	ip, [r3]
   1b5e0:	add	r3, r3, #1
   1b5e4:	cmp	r3, r4
   1b5e8:	beq	1b628 <ASN1_STRING_length@plt+0x96b4>
   1b5ec:	add	r6, r0, lr
   1b5f0:	ldrb	ip, [lr, #1]!
   1b5f4:	mov	r5, r3
   1b5f8:	cmp	ip, #45	; 0x2d
   1b5fc:	strbeq	r7, [r3]
   1b600:	beq	1b5e0 <ASN1_STRING_length@plt+0x966c>
   1b604:	cmp	ip, #46	; 0x2e
   1b608:	cmpne	ip, #0
   1b60c:	bne	1b5dc <ASN1_STRING_length@plt+0x9668>
   1b610:	cmp	r2, #0
   1b614:	mov	r3, #0
   1b618:	strb	r3, [r5]
   1b61c:	mov	r0, r1
   1b620:	strne	r6, [r2]
   1b624:	pop	{r4, r5, r6, r7, pc}
   1b628:	ldr	r6, [pc, #4]	; 1b634 <ASN1_STRING_length@plt+0x96c0>
   1b62c:	mov	r5, r3
   1b630:	b	1b610 <ASN1_STRING_length@plt+0x969c>
   1b634:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1b638:	push	{r4, r5, r6, lr}
   1b63c:	mov	r4, r1
   1b640:	mov	r5, r2
   1b644:	bl	11f44 <basename@plt>
   1b648:	subs	r3, r0, #0
   1b64c:	beq	1b66c <ASN1_STRING_length@plt+0x96f8>
   1b650:	ldrb	r3, [r3]
   1b654:	cmp	r3, #0
   1b658:	beq	1b66c <ASN1_STRING_length@plt+0x96f8>
   1b65c:	mov	r2, r5
   1b660:	mov	r1, r4
   1b664:	pop	{r4, r5, r6, lr}
   1b668:	b	1b5bc <ASN1_STRING_length@plt+0x9648>
   1b66c:	mov	r0, #0
   1b670:	pop	{r4, r5, r6, pc}
   1b674:	push	{r4, r5, r6, lr}
   1b678:	mov	r2, #3
   1b67c:	ldr	r4, [pc, #84]	; 1b6d8 <ASN1_STRING_length@plt+0x9764>
   1b680:	ldr	r3, [pc, #84]	; 1b6dc <ASN1_STRING_length@plt+0x9768>
   1b684:	add	r4, pc, r4
   1b688:	add	r3, pc, r3
   1b68c:	mov	r6, r0
   1b690:	mov	r5, r1
   1b694:	b	1b69c <ASN1_STRING_length@plt+0x9728>
   1b698:	ldr	r2, [r4, #4]
   1b69c:	sub	r0, r5, r2
   1b6a0:	cmp	r5, r2
   1b6a4:	mov	r1, r3
   1b6a8:	add	r0, r6, r0
   1b6ac:	bls	1b6bc <ASN1_STRING_length@plt+0x9748>
   1b6b0:	bl	11f14 <strcmp@plt>
   1b6b4:	cmp	r0, #0
   1b6b8:	beq	1b6d0 <ASN1_STRING_length@plt+0x975c>
   1b6bc:	ldr	r3, [r4, #8]!
   1b6c0:	cmp	r3, #0
   1b6c4:	bne	1b698 <ASN1_STRING_length@plt+0x9724>
   1b6c8:	mov	r0, r3
   1b6cc:	pop	{r4, r5, r6, pc}
   1b6d0:	mov	r0, #1
   1b6d4:	pop	{r4, r5, r6, pc}
   1b6d8:	andeq	r4, r2, r4, asr #11
   1b6dc:	andeq	r2, r1, ip, lsl r8
   1b6e0:	push	{r4, r5, r6, r7, r8, lr}
   1b6e4:	mov	r8, r1
   1b6e8:	mov	r7, r0
   1b6ec:	sub	r4, r2, #1
   1b6f0:	mov	r6, r1
   1b6f4:	mov	r5, #0
   1b6f8:	mov	r2, r4
   1b6fc:	mov	r1, r6
   1b700:	mov	r0, r7
   1b704:	bl	11bb4 <read@plt>
   1b708:	cmp	r0, #0
   1b70c:	beq	1b728 <ASN1_STRING_length@plt+0x97b4>
   1b710:	ble	1b738 <ASN1_STRING_length@plt+0x97c4>
   1b714:	add	r5, r5, r0
   1b718:	sub	r4, r4, r0
   1b71c:	add	r6, r8, r5
   1b720:	cmp	r4, #0
   1b724:	bne	1b6f8 <ASN1_STRING_length@plt+0x9784>
   1b728:	mov	r3, #0
   1b72c:	mov	r0, r5
   1b730:	strb	r3, [r6]
   1b734:	pop	{r4, r5, r6, r7, r8, pc}
   1b738:	bl	11f38 <__errno_location@plt>
   1b73c:	ldr	r0, [r0]
   1b740:	cmp	r0, #4
   1b744:	cmpne	r0, #11
   1b748:	beq	1b720 <ASN1_STRING_length@plt+0x97ac>
   1b74c:	rsb	r0, r0, #0
   1b750:	pop	{r4, r5, r6, r7, r8, pc}
   1b754:	push	{r4, r5, r6, r7, r8, lr}
   1b758:	mov	r7, r0
   1b75c:	mov	r6, r1
   1b760:	mov	r4, r2
   1b764:	mov	r5, #0
   1b768:	mov	r2, r4
   1b76c:	add	r1, r6, r5
   1b770:	mov	r0, r7
   1b774:	bl	11bc0 <write@plt>
   1b778:	cmp	r0, #0
   1b77c:	beq	1b794 <ASN1_STRING_length@plt+0x9820>
   1b780:	subgt	r4, r4, r0
   1b784:	addgt	r5, r5, r0
   1b788:	ble	1b79c <ASN1_STRING_length@plt+0x9828>
   1b78c:	cmp	r4, #0
   1b790:	bne	1b768 <ASN1_STRING_length@plt+0x97f4>
   1b794:	mov	r0, r5
   1b798:	pop	{r4, r5, r6, r7, r8, pc}
   1b79c:	bl	11f38 <__errno_location@plt>
   1b7a0:	ldr	r0, [r0]
   1b7a4:	cmp	r0, #4
   1b7a8:	cmpne	r0, #11
   1b7ac:	beq	1b78c <ASN1_STRING_length@plt+0x9818>
   1b7b0:	rsb	r0, r0, #0
   1b7b4:	pop	{r4, r5, r6, r7, r8, pc}
   1b7b8:	ldr	r3, [pc, #176]	; 1b870 <ASN1_STRING_length@plt+0x98fc>
   1b7bc:	ldr	ip, [pc, #176]	; 1b874 <ASN1_STRING_length@plt+0x9900>
   1b7c0:	add	r3, pc, r3
   1b7c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b7c8:	sub	sp, sp, #44	; 0x2c
   1b7cc:	ldr	r6, [r3, ip]
   1b7d0:	mov	r5, #0
   1b7d4:	add	r4, sp, #4
   1b7d8:	ldr	ip, [r6]
   1b7dc:	mov	r7, r1
   1b7e0:	str	r5, [r1]
   1b7e4:	mov	r8, r2
   1b7e8:	mov	r1, r4
   1b7ec:	mov	r2, #32
   1b7f0:	str	ip, [sp, #36]	; 0x24
   1b7f4:	bl	1b6e0 <ASN1_STRING_length@plt+0x976c>
   1b7f8:	cmp	r0, #0
   1b7fc:	blt	1b84c <ASN1_STRING_length@plt+0x98d8>
   1b800:	bl	11f38 <__errno_location@plt>
   1b804:	mov	r2, r8
   1b808:	mov	r1, sp
   1b80c:	str	r5, [r0]
   1b810:	mov	r0, r4
   1b814:	bl	11c8c <strtol@plt>
   1b818:	ldr	r8, [sp]
   1b81c:	cmp	r8, r4
   1b820:	mov	r9, r0
   1b824:	beq	1b864 <ASN1_STRING_length@plt+0x98f0>
   1b828:	bl	11d34 <__ctype_b_loc@plt>
   1b82c:	ldrb	r3, [r8]
   1b830:	lsl	r3, r3, #1
   1b834:	ldr	r2, [r0]
   1b838:	ldrh	r3, [r2, r3]
   1b83c:	tst	r3, #8192	; 0x2000
   1b840:	beq	1b864 <ASN1_STRING_length@plt+0x98f0>
   1b844:	mov	r0, r5
   1b848:	str	r9, [r7]
   1b84c:	ldr	r2, [sp, #36]	; 0x24
   1b850:	ldr	r3, [r6]
   1b854:	cmp	r2, r3
   1b858:	bne	1b86c <ASN1_STRING_length@plt+0x98f8>
   1b85c:	add	sp, sp, #44	; 0x2c
   1b860:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b864:	mvn	r0, #21
   1b868:	b	1b84c <ASN1_STRING_length@plt+0x98d8>
   1b86c:	bl	11d88 <__stack_chk_fail@plt>
   1b870:	andeq	r4, r2, r4, lsr r6
   1b874:	strdeq	r0, [r0], -r8
   1b878:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b87c:	mov	r4, r0
   1b880:	mov	r0, #256	; 0x100
   1b884:	mov	r6, r1
   1b888:	bl	11d64 <malloc@plt>
   1b88c:	subs	r7, r0, #0
   1b890:	beq	1b9ac <ASN1_STRING_length@plt+0x9a38>
   1b894:	ldr	r3, [r4, #4]
   1b898:	ldr	r2, [r4, #8]
   1b89c:	mov	r8, #0
   1b8a0:	cmp	r3, r2
   1b8a4:	mov	r5, r8
   1b8a8:	mov	r9, #256	; 0x100
   1b8ac:	bcs	1b8f8 <ASN1_STRING_length@plt+0x9984>
   1b8b0:	add	r2, r3, #1
   1b8b4:	str	r2, [r4, #4]
   1b8b8:	ldrb	r0, [r3]
   1b8bc:	cmp	r0, #10
   1b8c0:	beq	1b908 <ASN1_STRING_length@plt+0x9994>
   1b8c4:	cmp	r0, #92	; 0x5c
   1b8c8:	beq	1b950 <ASN1_STRING_length@plt+0x99dc>
   1b8cc:	cmn	r0, #1
   1b8d0:	beq	1b93c <ASN1_STRING_length@plt+0x99c8>
   1b8d4:	add	sl, r5, #1
   1b8d8:	cmp	r9, sl
   1b8dc:	strb	r0, [r7, r5]
   1b8e0:	beq	1b98c <ASN1_STRING_length@plt+0x9a18>
   1b8e4:	ldr	r3, [r4, #4]
   1b8e8:	ldr	r2, [r4, #8]
   1b8ec:	mov	r5, sl
   1b8f0:	cmp	r3, r2
   1b8f4:	bcc	1b8b0 <ASN1_STRING_length@plt+0x993c>
   1b8f8:	mov	r0, r4
   1b8fc:	bl	11af4 <__uflow@plt>
   1b900:	cmp	r0, #10
   1b904:	bne	1b8c4 <ASN1_STRING_length@plt+0x9950>
   1b908:	mov	r2, #0
   1b90c:	cmp	r6, #0
   1b910:	strb	r2, [r7, r5]
   1b914:	beq	1b92c <ASN1_STRING_length@plt+0x99b8>
   1b918:	ldr	r3, [r6]
   1b91c:	add	r8, r8, #1
   1b920:	add	r8, r3, r8
   1b924:	str	r8, [r6]
   1b928:	mov	r6, r2
   1b92c:	mov	r0, r6
   1b930:	bl	11ba8 <free@plt>
   1b934:	mov	r0, r7
   1b938:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b93c:	cmp	r5, #0
   1b940:	bne	1b908 <ASN1_STRING_length@plt+0x9994>
   1b944:	mov	r6, r7
   1b948:	mov	r7, r5
   1b94c:	b	1b92c <ASN1_STRING_length@plt+0x99b8>
   1b950:	ldr	r3, [r4, #4]
   1b954:	ldr	r2, [r4, #8]
   1b958:	cmp	r3, r2
   1b95c:	bcs	1b9b4 <ASN1_STRING_length@plt+0x9a40>
   1b960:	add	r2, r3, #1
   1b964:	str	r2, [r4, #4]
   1b968:	ldrb	r0, [r3]
   1b96c:	cmp	r0, #10
   1b970:	addeq	r8, r8, #1
   1b974:	moveq	sl, r5
   1b978:	beq	1b8e4 <ASN1_STRING_length@plt+0x9970>
   1b97c:	add	sl, r5, #1
   1b980:	cmp	r9, sl
   1b984:	strb	r0, [r7, r5]
   1b988:	bne	1b8e4 <ASN1_STRING_length@plt+0x9970>
   1b98c:	lsl	r9, r9, #1
   1b990:	mov	r1, r9
   1b994:	mov	r0, r7
   1b998:	bl	11ec0 <realloc@plt>
   1b99c:	cmp	r0, #0
   1b9a0:	beq	1b9c0 <ASN1_STRING_length@plt+0x9a4c>
   1b9a4:	mov	r7, r0
   1b9a8:	b	1b8e4 <ASN1_STRING_length@plt+0x9970>
   1b9ac:	mov	r6, r7
   1b9b0:	b	1b92c <ASN1_STRING_length@plt+0x99b8>
   1b9b4:	mov	r0, r4
   1b9b8:	bl	11af4 <__uflow@plt>
   1b9bc:	b	1b96c <ASN1_STRING_length@plt+0x99f8>
   1b9c0:	mov	r6, r7
   1b9c4:	mov	r7, r0
   1b9c8:	b	1b92c <ASN1_STRING_length@plt+0x99b8>
   1b9cc:	push	{r4, r5, r6, r7, r8, lr}
   1b9d0:	ldrb	r3, [r0]
   1b9d4:	cmp	r3, #47	; 0x2f
   1b9d8:	beq	1ba50 <ASN1_STRING_length@plt+0x9adc>
   1b9dc:	mov	r5, r0
   1b9e0:	bl	11ad0 <get_current_dir_name@plt>
   1b9e4:	subs	r4, r0, #0
   1b9e8:	moveq	r6, r4
   1b9ec:	beq	1ba40 <ASN1_STRING_length@plt+0x9acc>
   1b9f0:	mov	r0, r5
   1b9f4:	bl	11c44 <strlen@plt>
   1b9f8:	mov	r8, r0
   1b9fc:	mov	r0, r4
   1ba00:	bl	11c44 <strlen@plt>
   1ba04:	add	r1, r8, r0
   1ba08:	mov	r7, r0
   1ba0c:	add	r1, r1, #2
   1ba10:	mov	r0, r4
   1ba14:	bl	11ec0 <realloc@plt>
   1ba18:	subs	r6, r0, #0
   1ba1c:	beq	1ba40 <ASN1_STRING_length@plt+0x9acc>
   1ba20:	mov	r3, #47	; 0x2f
   1ba24:	add	r0, r7, #1
   1ba28:	add	r2, r8, #1
   1ba2c:	mov	r1, r5
   1ba30:	strb	r3, [r6, r7]
   1ba34:	add	r0, r6, r0
   1ba38:	bl	11c5c <memcpy@plt>
   1ba3c:	mov	r4, #0
   1ba40:	mov	r0, r4
   1ba44:	bl	11ba8 <free@plt>
   1ba48:	mov	r0, r6
   1ba4c:	pop	{r4, r5, r6, r7, r8, pc}
   1ba50:	bl	11d4c <strdup@plt>
   1ba54:	mov	r4, #0
   1ba58:	mov	r6, r0
   1ba5c:	b	1ba40 <ASN1_STRING_length@plt+0x9acc>
   1ba60:	ldr	r3, [pc, #432]	; 1bc18 <ASN1_STRING_length@plt+0x9ca4>
   1ba64:	ldr	ip, [pc, #432]	; 1bc1c <ASN1_STRING_length@plt+0x9ca8>
   1ba68:	add	r3, pc, r3
   1ba6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba70:	add	fp, sp, #32
   1ba74:	sub	sp, sp, #116	; 0x74
   1ba78:	ldr	r9, [r3, ip]
   1ba7c:	mov	r4, r0
   1ba80:	mov	r6, r1
   1ba84:	ldr	r3, [r9]
   1ba88:	mov	r8, r2
   1ba8c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ba90:	bl	11dac <strnlen@plt>
   1ba94:	mov	r5, #0
   1ba98:	mov	r1, r4
   1ba9c:	sub	r7, fp, #148	; 0x94
   1baa0:	add	r3, r0, #8
   1baa4:	bic	r3, r3, #7
   1baa8:	sub	sp, sp, r3
   1baac:	mov	r3, sp
   1bab0:	mov	r2, r0
   1bab4:	lsr	r3, r3, #3
   1bab8:	strb	r5, [r0, r3, lsl #3]
   1babc:	lsl	r0, r3, #3
   1bac0:	bl	11c5c <memcpy@plt>
   1bac4:	add	r6, r0, r6
   1bac8:	mov	sl, r0
   1bacc:	mov	r4, r6
   1bad0:	mov	r2, r7
   1bad4:	mov	r1, sl
   1bad8:	mov	r0, #3
   1badc:	bl	11d40 <__xstat64@plt>
   1bae0:	cmp	r0, #0
   1bae4:	bge	1bb60 <ASN1_STRING_length@plt+0x9bec>
   1bae8:	bl	11f38 <__errno_location@plt>
   1baec:	ldr	r3, [r0]
   1baf0:	rsb	r3, r3, #0
   1baf4:	cmp	r3, #0
   1baf8:	bgt	1bb7c <ASN1_STRING_length@plt+0x9c08>
   1bafc:	beq	1bc04 <ASN1_STRING_length@plt+0x9c90>
   1bb00:	cmp	r4, sl
   1bb04:	beq	1bc0c <ASN1_STRING_length@plt+0x9c98>
   1bb08:	strb	r5, [r4]
   1bb0c:	bls	1bad0 <ASN1_STRING_length@plt+0x9b5c>
   1bb10:	sub	r3, r4, #1
   1bb14:	cmp	r3, sl
   1bb18:	mov	r4, r3
   1bb1c:	beq	1bad0 <ASN1_STRING_length@plt+0x9b5c>
   1bb20:	ldrb	r2, [r3]
   1bb24:	sub	r3, r3, #1
   1bb28:	cmp	r2, #47	; 0x2f
   1bb2c:	bne	1bb14 <ASN1_STRING_length@plt+0x9ba0>
   1bb30:	ldrb	r3, [r4, #-1]
   1bb34:	cmp	r3, #47	; 0x2f
   1bb38:	subeq	r3, r4, #1
   1bb3c:	beq	1bb50 <ASN1_STRING_length@plt+0x9bdc>
   1bb40:	b	1bad0 <ASN1_STRING_length@plt+0x9b5c>
   1bb44:	ldrb	r2, [r3, #-1]!
   1bb48:	cmp	r2, #47	; 0x2f
   1bb4c:	bne	1bad0 <ASN1_STRING_length@plt+0x9b5c>
   1bb50:	cmp	r3, sl
   1bb54:	mov	r4, r3
   1bb58:	bhi	1bb44 <ASN1_STRING_length@plt+0x9bd0>
   1bb5c:	b	1bad0 <ASN1_STRING_length@plt+0x9b5c>
   1bb60:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1bb64:	and	r3, r3, #61440	; 0xf000
   1bb68:	sub	r3, r3, #16384	; 0x4000
   1bb6c:	clz	r3, r3
   1bb70:	lsr	r3, r3, #5
   1bb74:	cmp	r3, #0
   1bb78:	ble	1bafc <ASN1_STRING_length@plt+0x9b88>
   1bb7c:	mov	r0, r4
   1bb80:	bl	11c44 <strlen@plt>
   1bb84:	add	r5, r4, r0
   1bb88:	cmp	r6, r5
   1bb8c:	beq	1bbe8 <ASN1_STRING_length@plt+0x9c74>
   1bb90:	mov	r3, #47	; 0x2f
   1bb94:	strb	r3, [r4, r0]
   1bb98:	cmp	r6, r5
   1bb9c:	bls	1bbe8 <ASN1_STRING_length@plt+0x9c74>
   1bba0:	mov	r4, #47	; 0x2f
   1bba4:	b	1bbbc <ASN1_STRING_length@plt+0x9c48>
   1bba8:	mov	r0, r5
   1bbac:	bl	11c44 <strlen@plt>
   1bbb0:	strb	r4, [r5, r0]!
   1bbb4:	cmp	r6, r5
   1bbb8:	bls	1bbe8 <ASN1_STRING_length@plt+0x9c74>
   1bbbc:	mov	r1, r8
   1bbc0:	mov	r0, sl
   1bbc4:	bl	11a10 <mkdir@plt>
   1bbc8:	cmp	r0, #0
   1bbcc:	bge	1bba8 <ASN1_STRING_length@plt+0x9c34>
   1bbd0:	bl	11f38 <__errno_location@plt>
   1bbd4:	ldr	r3, [r0]
   1bbd8:	cmp	r3, #17
   1bbdc:	beq	1bba8 <ASN1_STRING_length@plt+0x9c34>
   1bbe0:	rsb	r0, r3, #0
   1bbe4:	b	1bbec <ASN1_STRING_length@plt+0x9c78>
   1bbe8:	mov	r0, #0
   1bbec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bbf0:	ldr	r3, [r9]
   1bbf4:	cmp	r2, r3
   1bbf8:	bne	1bc14 <ASN1_STRING_length@plt+0x9ca0>
   1bbfc:	sub	sp, fp, #32
   1bc00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc04:	mvn	r0, #19
   1bc08:	b	1bbec <ASN1_STRING_length@plt+0x9c78>
   1bc0c:	mov	r5, sl
   1bc10:	b	1bb98 <ASN1_STRING_length@plt+0x9c24>
   1bc14:	bl	11d88 <__stack_chk_fail@plt>
   1bc18:	andeq	r4, r2, ip, lsl #7
   1bc1c:	strdeq	r0, [r0], -r8
   1bc20:	push	{r4, r5, r6, lr}
   1bc24:	mov	r5, r1
   1bc28:	mov	r1, #47	; 0x2f
   1bc2c:	mov	r4, r0
   1bc30:	bl	11b3c <strrchr@plt>
   1bc34:	subs	r1, r0, #0
   1bc38:	popeq	{r4, r5, r6, pc}
   1bc3c:	mov	r2, r5
   1bc40:	sub	r1, r1, r4
   1bc44:	mov	r0, r4
   1bc48:	pop	{r4, r5, r6, lr}
   1bc4c:	b	1ba60 <ASN1_STRING_length@plt+0x9aec>
   1bc50:	push	{r4, lr}
   1bc54:	mov	r4, r0
   1bc58:	ldr	r0, [r0, #84]	; 0x54
   1bc5c:	mov	r2, #1000	; 0x3e8
   1bc60:	mov	r3, #0
   1bc64:	asr	r1, r0, #31
   1bc68:	bl	2a3a4 <ASN1_STRING_length@plt+0x18430>
   1bc6c:	ldr	r2, [r4, #80]	; 0x50
   1bc70:	ldr	r3, [pc, #4]	; 1bc7c <ASN1_STRING_length@plt+0x9d08>
   1bc74:	smlal	r0, r1, r3, r2
   1bc78:	pop	{r4, pc}
   1bc7c:	andeq	r4, pc, r0, asr #4
   1bc80:	ldr	ip, [pc, #308]	; 1bdbc <ASN1_STRING_length@plt+0x9e48>
   1bc84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bc88:	add	ip, pc, ip
   1bc8c:	ldr	lr, [pc, #300]	; 1bdc0 <ASN1_STRING_length@plt+0x9e4c>
   1bc90:	sub	sp, sp, #40	; 0x28
   1bc94:	mov	r8, r3
   1bc98:	ldr	r4, [ip, lr]
   1bc9c:	mov	r5, r0
   1bca0:	mov	r7, r2
   1bca4:	ldr	r3, [r4]
   1bca8:	mov	r0, ip
   1bcac:	str	r3, [sp, #36]	; 0x24
   1bcb0:	ldr	r9, [sp, #72]	; 0x48
   1bcb4:	ldr	r6, [sp, #76]	; 0x4c
   1bcb8:	cmp	r1, #7
   1bcbc:	addls	pc, pc, r1, lsl #2
   1bcc0:	b	1bd8c <ASN1_STRING_length@plt+0x9e18>
   1bcc4:	b	1bce4 <ASN1_STRING_length@plt+0x9d70>
   1bcc8:	b	1bd34 <ASN1_STRING_length@plt+0x9dc0>
   1bccc:	b	1bd40 <ASN1_STRING_length@plt+0x9dcc>
   1bcd0:	b	1bd4c <ASN1_STRING_length@plt+0x9dd8>
   1bcd4:	b	1bd58 <ASN1_STRING_length@plt+0x9de4>
   1bcd8:	b	1bd64 <ASN1_STRING_length@plt+0x9df0>
   1bcdc:	b	1bd70 <ASN1_STRING_length@plt+0x9dfc>
   1bce0:	b	1bd7c <ASN1_STRING_length@plt+0x9e08>
   1bce4:	ldr	r3, [pc, #216]	; 1bdc4 <ASN1_STRING_length@plt+0x9e50>
   1bce8:	add	r3, pc, r3
   1bcec:	ldr	r2, [pc, #212]	; 1bdc8 <ASN1_STRING_length@plt+0x9e54>
   1bcf0:	mov	r1, #1
   1bcf4:	add	r2, pc, r2
   1bcf8:	strd	r8, [sp, #4]
   1bcfc:	str	r7, [sp]
   1bd00:	mov	r0, r5
   1bd04:	bl	11d94 <__fprintf_chk@plt>
   1bd08:	ldr	r3, [sp, #80]	; 0x50
   1bd0c:	mov	r2, r6
   1bd10:	mov	r0, r5
   1bd14:	mov	r1, #1
   1bd18:	bl	11cb0 <__vfprintf_chk@plt>
   1bd1c:	ldr	r2, [sp, #36]	; 0x24
   1bd20:	ldr	r3, [r4]
   1bd24:	cmp	r2, r3
   1bd28:	bne	1bd88 <ASN1_STRING_length@plt+0x9e14>
   1bd2c:	add	sp, sp, #40	; 0x28
   1bd30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd34:	ldr	r3, [pc, #144]	; 1bdcc <ASN1_STRING_length@plt+0x9e58>
   1bd38:	add	r3, pc, r3
   1bd3c:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd40:	ldr	r3, [pc, #136]	; 1bdd0 <ASN1_STRING_length@plt+0x9e5c>
   1bd44:	add	r3, pc, r3
   1bd48:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd4c:	ldr	r3, [pc, #128]	; 1bdd4 <ASN1_STRING_length@plt+0x9e60>
   1bd50:	add	r3, pc, r3
   1bd54:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd58:	ldr	r3, [pc, #120]	; 1bdd8 <ASN1_STRING_length@plt+0x9e64>
   1bd5c:	add	r3, pc, r3
   1bd60:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd64:	ldr	r3, [pc, #112]	; 1bddc <ASN1_STRING_length@plt+0x9e68>
   1bd68:	add	r3, pc, r3
   1bd6c:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd70:	ldr	r3, [pc, #104]	; 1bde0 <ASN1_STRING_length@plt+0x9e6c>
   1bd74:	add	r3, pc, r3
   1bd78:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd7c:	ldr	r3, [pc, #96]	; 1bde4 <ASN1_STRING_length@plt+0x9e70>
   1bd80:	add	r3, pc, r3
   1bd84:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bd88:	bl	11d88 <__stack_chk_fail@plt>
   1bd8c:	ldr	r2, [pc, #84]	; 1bde8 <ASN1_STRING_length@plt+0x9e74>
   1bd90:	mov	r3, #16
   1bd94:	add	r2, pc, r2
   1bd98:	add	sl, sp, #20
   1bd9c:	str	r1, [sp, #4]
   1bda0:	str	r2, [sp]
   1bda4:	mov	r1, r3
   1bda8:	mov	r0, sl
   1bdac:	mov	r2, #1
   1bdb0:	bl	11cc8 <__snprintf_chk@plt>
   1bdb4:	mov	r3, sl
   1bdb8:	b	1bcec <ASN1_STRING_length@plt+0x9d78>
   1bdbc:	andeq	r4, r2, ip, ror #2
   1bdc0:	strdeq	r0, [r0], -r8
   1bdc4:	andeq	r2, r1, ip, asr #11
   1bdc8:	andeq	r2, r1, r8, ror #11
   1bdcc:	muleq	r1, r4, r5
   1bdd0:	andeq	r2, r1, ip, ror r5
   1bdd4:	andeq	r1, r1, ip, lsl ip
   1bdd8:	andeq	r1, r1, r8, lsl ip
   1bddc:	andeq	r1, r1, r4, lsl ip
   1bde0:	andeq	r1, r1, r0, lsl ip
   1bde4:	andeq	r1, r1, ip, lsl #24
   1bde8:	andeq	r2, r1, r0, asr #10
   1bdec:	ldr	r3, [pc, #140]	; 1be80 <ASN1_STRING_length@plt+0x9f0c>
   1bdf0:	ldr	r2, [pc, #140]	; 1be84 <ASN1_STRING_length@plt+0x9f10>
   1bdf4:	add	r3, pc, r3
   1bdf8:	push	{r4, r5, lr}
   1bdfc:	sub	sp, sp, #412	; 0x19c
   1be00:	ldr	r4, [r3, r2]
   1be04:	cmp	r0, #0
   1be08:	ldr	r3, [r4]
   1be0c:	str	r3, [sp, #404]	; 0x194
   1be10:	beq	1be30 <ASN1_STRING_length@plt+0x9ebc>
   1be14:	bl	1b9cc <ASN1_STRING_length@plt+0x9a58>
   1be18:	ldr	r2, [sp, #404]	; 0x194
   1be1c:	ldr	r3, [r4]
   1be20:	cmp	r2, r3
   1be24:	bne	1be7c <ASN1_STRING_length@plt+0x9f08>
   1be28:	add	sp, sp, #412	; 0x19c
   1be2c:	pop	{r4, r5, pc}
   1be30:	add	r5, sp, #12
   1be34:	mov	r0, r5
   1be38:	bl	11b24 <uname@plt>
   1be3c:	cmp	r0, #0
   1be40:	blt	1be74 <ASN1_STRING_length@plt+0x9f00>
   1be44:	ldr	r3, [pc, #60]	; 1be88 <ASN1_STRING_length@plt+0x9f14>
   1be48:	ldr	r2, [pc, #60]	; 1be8c <ASN1_STRING_length@plt+0x9f18>
   1be4c:	add	r5, r5, #130	; 0x82
   1be50:	str	r5, [sp]
   1be54:	add	r3, pc, r3
   1be58:	add	r2, pc, r2
   1be5c:	mov	r1, #1
   1be60:	add	r0, sp, #8
   1be64:	bl	11c14 <__asprintf_chk@plt>
   1be68:	cmp	r0, #0
   1be6c:	ldrge	r0, [sp, #8]
   1be70:	bge	1be18 <ASN1_STRING_length@plt+0x9ea4>
   1be74:	mov	r0, #0
   1be78:	b	1be18 <ASN1_STRING_length@plt+0x9ea4>
   1be7c:	bl	11d88 <__stack_chk_fail@plt>
   1be80:	andeq	r4, r2, r0
   1be84:	strdeq	r0, [r0], -r8
   1be88:	andeq	r2, r1, ip, ror #3
   1be8c:	strdeq	r2, [r1], -r8
   1be90:	ldr	ip, [pc, #96]	; 1bef8 <ASN1_STRING_length@plt+0x9f84>
   1be94:	push	{r4, r5, r6, lr}
   1be98:	add	ip, pc, ip
   1be9c:	ldr	lr, [pc, #88]	; 1befc <ASN1_STRING_length@plt+0x9f88>
   1bea0:	ldr	r5, [r0, #8]
   1bea4:	sub	sp, sp, #24
   1bea8:	ldr	r4, [ip, lr]
   1beac:	cmp	r5, #0
   1beb0:	ldr	r6, [sp, #40]	; 0x28
   1beb4:	ldr	ip, [r4]
   1beb8:	ldr	lr, [sp, #44]	; 0x2c
   1bebc:	str	ip, [sp, #20]
   1bec0:	beq	1bedc <ASN1_STRING_length@plt+0x9f68>
   1bec4:	add	ip, sp, #48	; 0x30
   1bec8:	stm	sp, {r6, lr}
   1becc:	ldr	r0, [r0, #12]
   1bed0:	str	ip, [sp, #8]
   1bed4:	str	ip, [sp, #16]
   1bed8:	blx	r5
   1bedc:	ldr	r2, [sp, #20]
   1bee0:	ldr	r3, [r4]
   1bee4:	cmp	r2, r3
   1bee8:	bne	1bef4 <ASN1_STRING_length@plt+0x9f80>
   1beec:	add	sp, sp, #24
   1bef0:	pop	{r4, r5, r6, pc}
   1bef4:	bl	11d88 <__stack_chk_fail@plt>
   1bef8:	andeq	r3, r2, ip, asr pc
   1befc:	strdeq	r0, [r0], -r8
   1bf00:	ldr	r0, [r0, #20]
   1bf04:	bx	lr
   1bf08:	cmp	r0, #0
   1bf0c:	ldrne	r3, [r0]
   1bf10:	addne	r3, r3, #1
   1bf14:	strne	r3, [r0]
   1bf18:	bx	lr
   1bf1c:	cmp	r0, #0
   1bf20:	ldrne	r0, [r0, #4]
   1bf24:	mvneq	r0, #0
   1bf28:	bx	lr
   1bf2c:	push	{r4, r5, lr}
   1bf30:	subs	r4, r0, #0
   1bf34:	sub	sp, sp, #20
   1bf38:	beq	1bf54 <ASN1_STRING_length@plt+0x9fe0>
   1bf3c:	str	r1, [r4, #8]
   1bf40:	str	r2, [r4, #12]
   1bf44:	mov	r5, r1
   1bf48:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1bf4c:	cmp	r0, #5
   1bf50:	bgt	1bf5c <ASN1_STRING_length@plt+0x9fe8>
   1bf54:	add	sp, sp, #20
   1bf58:	pop	{r4, r5, pc}
   1bf5c:	ldr	r2, [pc, #52]	; 1bf98 <ASN1_STRING_length@plt+0xa024>
   1bf60:	ldr	r3, [pc, #52]	; 1bf9c <ASN1_STRING_length@plt+0xa028>
   1bf64:	add	r2, pc, r2
   1bf68:	str	r2, [sp, #4]
   1bf6c:	ldr	r2, [pc, #44]	; 1bfa0 <ASN1_STRING_length@plt+0xa02c>
   1bf70:	add	r3, pc, r3
   1bf74:	str	r3, [sp]
   1bf78:	str	r5, [sp, #8]
   1bf7c:	mov	r0, r4
   1bf80:	mov	r3, #364	; 0x16c
   1bf84:	add	r2, pc, r2
   1bf88:	mov	r1, #6
   1bf8c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1bf90:	add	sp, sp, #20
   1bf94:	pop	{r4, r5, pc}
   1bf98:	andeq	r2, r1, r0, lsl r3
   1bf9c:	andeq	r1, r1, r0, lsl #31
   1bfa0:	ldrdeq	r2, [r1], -r8
   1bfa4:	ldr	ip, [pc, #620]	; 1c218 <ASN1_STRING_length@plt+0xa2a4>
   1bfa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfac:	add	ip, pc, ip
   1bfb0:	ldr	lr, [pc, #612]	; 1c21c <ASN1_STRING_length@plt+0xa2a8>
   1bfb4:	add	r4, r0, r1, lsl #2
   1bfb8:	sub	sp, sp, #4096	; 0x1000
   1bfbc:	mov	r5, r1
   1bfc0:	ldr	r1, [ip, lr]
   1bfc4:	sub	sp, sp, #44	; 0x2c
   1bfc8:	mov	lr, r1
   1bfcc:	str	r1, [sp, #28]
   1bfd0:	mov	r6, r3
   1bfd4:	ldr	r1, [r4, #32]
   1bfd8:	add	r3, sp, #4096	; 0x1000
   1bfdc:	mov	r9, r2
   1bfe0:	add	r3, r3, #36	; 0x24
   1bfe4:	ldr	r2, [lr]
   1bfe8:	cmp	r1, #0
   1bfec:	mov	r8, r0
   1bff0:	str	r2, [r3]
   1bff4:	beq	1c124 <ASN1_STRING_length@plt+0xa1b0>
   1bff8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1bffc:	cmp	r0, #6
   1c000:	bgt	1c0dc <ASN1_STRING_length@plt+0xa168>
   1c004:	ldr	r0, [r4, #32]
   1c008:	mov	r1, r9
   1c00c:	bl	20ef8 <ASN1_STRING_length@plt+0xef84>
   1c010:	str	r0, [sp, #24]
   1c014:	ldr	r4, [sp, #24]
   1c018:	cmp	r4, #0
   1c01c:	beq	1c0a4 <ASN1_STRING_length@plt+0xa130>
   1c020:	mov	r5, #0
   1c024:	add	sl, sp, #40	; 0x28
   1c028:	add	fp, sp, #32
   1c02c:	b	1c050 <ASN1_STRING_length@plt+0xa0dc>
   1c030:	ldr	r1, [sl, #-8]
   1c034:	ldr	r0, [r6]
   1c038:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1c03c:	ldr	r4, [r4]
   1c040:	add	r5, r5, #1
   1c044:	cmp	r4, #0
   1c048:	str	r0, [r6]
   1c04c:	beq	1c0a8 <ASN1_STRING_length@plt+0xa134>
   1c050:	add	r7, r4, #12
   1c054:	mov	r2, r7
   1c058:	mov	r3, fp
   1c05c:	mov	r1, r9
   1c060:	mov	r0, r8
   1c064:	bl	219b8 <ASN1_STRING_length@plt+0xfa44>
   1c068:	cmp	r0, #0
   1c06c:	bge	1c030 <ASN1_STRING_length@plt+0xa0bc>
   1c070:	mov	sl, r0
   1c074:	mov	r0, r8
   1c078:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c07c:	cmp	r0, #2
   1c080:	bgt	1c19c <ASN1_STRING_length@plt+0xa228>
   1c084:	mov	r1, r5
   1c088:	ldr	r0, [r6]
   1c08c:	bl	1da64 <ASN1_STRING_length@plt+0xbaf0>
   1c090:	mov	r5, sl
   1c094:	str	r0, [r6]
   1c098:	ldr	r0, [sp, #24]
   1c09c:	bl	20484 <ASN1_STRING_length@plt+0xe510>
   1c0a0:	b	1c0b0 <ASN1_STRING_length@plt+0xa13c>
   1c0a4:	ldr	r5, [sp, #24]
   1c0a8:	ldr	r0, [sp, #24]
   1c0ac:	bl	20484 <ASN1_STRING_length@plt+0xe510>
   1c0b0:	add	r3, sp, #4096	; 0x1000
   1c0b4:	add	r3, r3, #36	; 0x24
   1c0b8:	ldr	r2, [r3]
   1c0bc:	ldr	r3, [sp, #28]
   1c0c0:	mov	r0, r5
   1c0c4:	ldr	r3, [r3]
   1c0c8:	cmp	r2, r3
   1c0cc:	bne	1c214 <ASN1_STRING_length@plt+0xa2a0>
   1c0d0:	add	sp, sp, #4096	; 0x1000
   1c0d4:	add	sp, sp, #44	; 0x2c
   1c0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0dc:	ldr	r1, [pc, #316]	; 1c220 <ASN1_STRING_length@plt+0xa2ac>
   1c0e0:	ldr	r2, [pc, #316]	; 1c224 <ASN1_STRING_length@plt+0xa2b0>
   1c0e4:	add	r1, pc, r1
   1c0e8:	add	r2, pc, r2
   1c0ec:	ldr	r3, [pc, #308]	; 1c228 <ASN1_STRING_length@plt+0xa2b4>
   1c0f0:	ldr	r1, [r1, r5, lsl #3]
   1c0f4:	str	r2, [sp, #4]
   1c0f8:	ldr	r2, [pc, #300]	; 1c22c <ASN1_STRING_length@plt+0xa2b8>
   1c0fc:	add	r3, pc, r3
   1c100:	str	r1, [sp, #8]
   1c104:	str	r3, [sp]
   1c108:	str	r9, [sp, #12]
   1c10c:	ldr	r3, [pc, #284]	; 1c230 <ASN1_STRING_length@plt+0xa2bc>
   1c110:	add	r2, pc, r2
   1c114:	mov	r1, #7
   1c118:	mov	r0, r8
   1c11c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c120:	b	1c004 <ASN1_STRING_length@plt+0xa090>
   1c124:	ldr	r3, [pc, #264]	; 1c234 <ASN1_STRING_length@plt+0xa2c0>
   1c128:	ldr	r2, [pc, #264]	; 1c238 <ASN1_STRING_length@plt+0xa2c4>
   1c12c:	add	r3, pc, r3
   1c130:	ldr	r1, [r0, #20]
   1c134:	ldr	r0, [r3, r5, lsl #3]
   1c138:	add	r2, pc, r2
   1c13c:	mov	r3, #4096	; 0x1000
   1c140:	add	r4, sp, #36	; 0x24
   1c144:	str	r0, [sp, #8]
   1c148:	str	r1, [sp, #4]
   1c14c:	str	r2, [sp]
   1c150:	mov	r1, r3
   1c154:	mov	r2, #1
   1c158:	mov	r0, r4
   1c15c:	bl	11cc8 <__snprintf_chk@plt>
   1c160:	mov	r0, r8
   1c164:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c168:	cmp	r0, #6
   1c16c:	bgt	1c1e0 <ASN1_STRING_length@plt+0xa26c>
   1c170:	mov	r0, r4
   1c174:	bl	204a4 <ASN1_STRING_length@plt+0xe530>
   1c178:	subs	r4, r0, #0
   1c17c:	mvneq	r5, #37	; 0x25
   1c180:	beq	1c0b0 <ASN1_STRING_length@plt+0xa13c>
   1c184:	mov	r1, r9
   1c188:	bl	206e8 <ASN1_STRING_length@plt+0xe774>
   1c18c:	str	r0, [sp, #24]
   1c190:	mov	r0, r4
   1c194:	bl	20540 <ASN1_STRING_length@plt+0xe5cc>
   1c198:	b	1c014 <ASN1_STRING_length@plt+0xa0a0>
   1c19c:	rsb	r0, sl, #0
   1c1a0:	bl	119f8 <strerror@plt>
   1c1a4:	ldr	r2, [pc, #144]	; 1c23c <ASN1_STRING_length@plt+0xa2c8>
   1c1a8:	ldr	r3, [pc, #144]	; 1c240 <ASN1_STRING_length@plt+0xa2cc>
   1c1ac:	add	r2, pc, r2
   1c1b0:	add	r3, pc, r3
   1c1b4:	stmib	sp, {r2, r9}
   1c1b8:	ldr	r2, [pc, #132]	; 1c244 <ASN1_STRING_length@plt+0xa2d0>
   1c1bc:	str	r3, [sp]
   1c1c0:	str	r7, [sp, #12]
   1c1c4:	ldr	r3, [pc, #124]	; 1c248 <ASN1_STRING_length@plt+0xa2d4>
   1c1c8:	add	r2, pc, r2
   1c1cc:	mov	r1, #3
   1c1d0:	str	r0, [sp, #16]
   1c1d4:	mov	r0, r8
   1c1d8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c1dc:	b	1c084 <ASN1_STRING_length@plt+0xa110>
   1c1e0:	ldr	r2, [pc, #100]	; 1c24c <ASN1_STRING_length@plt+0xa2d8>
   1c1e4:	ldr	r3, [pc, #100]	; 1c250 <ASN1_STRING_length@plt+0xa2dc>
   1c1e8:	add	r2, pc, r2
   1c1ec:	add	r3, pc, r3
   1c1f0:	stmib	sp, {r2, r4, r9}
   1c1f4:	mov	r1, #7
   1c1f8:	ldr	r2, [pc, #84]	; 1c254 <ASN1_STRING_length@plt+0xa2e0>
   1c1fc:	str	r3, [sp]
   1c200:	add	r2, pc, r2
   1c204:	ldr	r3, [pc, #76]	; 1c258 <ASN1_STRING_length@plt+0xa2e4>
   1c208:	mov	r0, r8
   1c20c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c210:	b	1c170 <ASN1_STRING_length@plt+0xa1fc>
   1c214:	bl	11d88 <__stack_chk_fail@plt>
   1c218:	andeq	r3, r2, r8, asr #28
   1c21c:	strdeq	r0, [r0], -r8
   1c220:	andeq	r3, r2, ip, ror fp
   1c224:			; <UNDEFINED> instruction: 0x00011fb0
   1c228:	andeq	r1, r1, ip, asr #28
   1c22c:	andeq	r2, r1, ip, asr #2
   1c230:			; <UNDEFINED> instruction: 0x000001b2
   1c234:	andeq	r3, r2, r4, lsr fp
   1c238:	andeq	r1, r1, r4, lsl #31
   1c23c:	andeq	r1, r1, r0, lsr pc
   1c240:	muleq	r1, r8, sp
   1c244:	muleq	r1, r4, r0
   1c248:	andeq	r0, r0, fp, asr #3
   1c24c:	andeq	r1, r1, r0, ror #29
   1c250:	andeq	r1, r1, ip, asr sp
   1c254:	andeq	r2, r1, ip, asr r0
   1c258:			; <UNDEFINED> instruction: 0x000001bb
   1c25c:	ldr	r2, [pc, #328]	; 1c3ac <ASN1_STRING_length@plt+0xa438>
   1c260:	ldr	r3, [pc, #328]	; 1c3b0 <ASN1_STRING_length@plt+0xa43c>
   1c264:	add	r2, pc, r2
   1c268:	push	{r4, r5, r6, r7, r8, lr}
   1c26c:	sub	sp, sp, #4096	; 0x1000
   1c270:	ldr	r6, [r2, r3]
   1c274:	ldr	ip, [pc, #312]	; 1c3b4 <ASN1_STRING_length@plt+0xa440>
   1c278:	sub	sp, sp, #24
   1c27c:	add	ip, pc, ip
   1c280:	ldr	r3, [r0, #20]
   1c284:	ldr	lr, [r6]
   1c288:	mov	r4, r0
   1c28c:	str	ip, [sp, #8]
   1c290:	ldr	r0, [pc, #288]	; 1c3b8 <ASN1_STRING_length@plt+0xa444>
   1c294:	add	ip, sp, #4096	; 0x1000
   1c298:	add	ip, ip, #20
   1c29c:	str	r3, [sp, #4]
   1c2a0:	add	r0, pc, r0
   1c2a4:	mov	r3, #4096	; 0x1000
   1c2a8:	add	r5, sp, #20
   1c2ac:	str	r0, [sp]
   1c2b0:	mov	r7, r1
   1c2b4:	str	lr, [ip]
   1c2b8:	mov	r1, r3
   1c2bc:	mov	r0, r5
   1c2c0:	mov	r2, #1
   1c2c4:	bl	11cc8 <__snprintf_chk@plt>
   1c2c8:	mov	r0, r4
   1c2cc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c2d0:	cmp	r0, #6
   1c2d4:	bgt	1c324 <ASN1_STRING_length@plt+0xa3b0>
   1c2d8:	mov	r0, r5
   1c2dc:	bl	204a4 <ASN1_STRING_length@plt+0xe530>
   1c2e0:	subs	r8, r0, #0
   1c2e4:	beq	1c358 <ASN1_STRING_length@plt+0xa3e4>
   1c2e8:	mov	r1, r7
   1c2ec:	bl	205e8 <ASN1_STRING_length@plt+0xe674>
   1c2f0:	mov	r4, r0
   1c2f4:	mov	r0, r8
   1c2f8:	bl	20540 <ASN1_STRING_length@plt+0xe5cc>
   1c2fc:	add	r3, sp, #4096	; 0x1000
   1c300:	add	r3, r3, #20
   1c304:	ldr	r2, [r3]
   1c308:	ldr	r3, [r6]
   1c30c:	mov	r0, r4
   1c310:	cmp	r2, r3
   1c314:	bne	1c3a8 <ASN1_STRING_length@plt+0xa434>
   1c318:	add	sp, sp, #4096	; 0x1000
   1c31c:	add	sp, sp, #24
   1c320:	pop	{r4, r5, r6, r7, r8, pc}
   1c324:	ldr	r2, [pc, #144]	; 1c3bc <ASN1_STRING_length@plt+0xa448>
   1c328:	ldr	r3, [pc, #144]	; 1c3c0 <ASN1_STRING_length@plt+0xa44c>
   1c32c:	add	r2, pc, r2
   1c330:	add	r3, pc, r3
   1c334:	stmib	sp, {r2, r5, r7}
   1c338:	mov	r1, #7
   1c33c:	ldr	r2, [pc, #128]	; 1c3c4 <ASN1_STRING_length@plt+0xa450>
   1c340:	str	r3, [sp]
   1c344:	add	r2, pc, r2
   1c348:	ldr	r3, [pc, #120]	; 1c3c8 <ASN1_STRING_length@plt+0xa454>
   1c34c:	mov	r0, r4
   1c350:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c354:	b	1c2d8 <ASN1_STRING_length@plt+0xa364>
   1c358:	mov	r0, r4
   1c35c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c360:	cmp	r0, #2
   1c364:	bgt	1c370 <ASN1_STRING_length@plt+0xa3fc>
   1c368:	mov	r4, #0
   1c36c:	b	1c2fc <ASN1_STRING_length@plt+0xa388>
   1c370:	ldr	r2, [pc, #84]	; 1c3cc <ASN1_STRING_length@plt+0xa458>
   1c374:	ldr	r3, [pc, #84]	; 1c3d0 <ASN1_STRING_length@plt+0xa45c>
   1c378:	add	r2, pc, r2
   1c37c:	str	r2, [sp, #4]
   1c380:	ldr	r2, [pc, #76]	; 1c3d4 <ASN1_STRING_length@plt+0xa460>
   1c384:	add	r3, pc, r3
   1c388:	str	r3, [sp]
   1c38c:	str	r5, [sp, #8]
   1c390:	mov	r0, r4
   1c394:	ldr	r3, [pc, #60]	; 1c3d8 <ASN1_STRING_length@plt+0xa464>
   1c398:	add	r2, pc, r2
   1c39c:	mov	r1, #3
   1c3a0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c3a4:	b	1c368 <ASN1_STRING_length@plt+0xa3f4>
   1c3a8:	bl	11d88 <__stack_chk_fail@plt>
   1c3ac:	muleq	r2, r0, fp
   1c3b0:	strdeq	r0, [r0], -r8
   1c3b4:	andeq	r1, r1, r8, lsl r3
   1c3b8:	andeq	r1, r1, ip, lsl lr
   1c3bc:	andeq	r1, r1, r8, asr #31
   1c3c0:	andeq	r1, r1, ip, lsr ip
   1c3c4:	andeq	r1, r1, r8, lsl pc
   1c3c8:	strdeq	r0, [r0], -lr
   1c3cc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1c3d0:	andeq	r1, r1, r8, ror #23
   1c3d4:	andeq	r1, r1, r4, asr #29
   1c3d8:	andeq	r0, r0, r2, lsl #4
   1c3dc:	ldr	r2, [r0, #44]	; 0x2c
   1c3e0:	cmp	r2, #0
   1c3e4:	beq	1c45c <ASN1_STRING_length@plt+0xa4e8>
   1c3e8:	push	{r4, r5, lr}
   1c3ec:	sub	sp, sp, #20
   1c3f0:	mov	r4, r0
   1c3f4:	mov	r5, r1
   1c3f8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c3fc:	cmp	r0, #6
   1c400:	bgt	1c418 <ASN1_STRING_length@plt+0xa4a4>
   1c404:	mov	r1, r5
   1c408:	ldr	r0, [r4, #44]	; 0x2c
   1c40c:	add	sp, sp, #20
   1c410:	pop	{r4, r5, lr}
   1c414:	b	20df4 <ASN1_STRING_length@plt+0xee80>
   1c418:	ldr	r2, [pc, #64]	; 1c460 <ASN1_STRING_length@plt+0xa4ec>
   1c41c:	ldr	r1, [pc, #64]	; 1c464 <ASN1_STRING_length@plt+0xa4f0>
   1c420:	add	r2, pc, r2
   1c424:	ldr	r3, [pc, #60]	; 1c468 <ASN1_STRING_length@plt+0xa4f4>
   1c428:	str	r2, [sp, #4]
   1c42c:	ldr	r2, [pc, #56]	; 1c46c <ASN1_STRING_length@plt+0xa4f8>
   1c430:	add	r1, pc, r1
   1c434:	add	r3, pc, r3
   1c438:	str	r1, [sp, #8]
   1c43c:	str	r3, [sp]
   1c440:	str	r5, [sp, #12]
   1c444:	ldr	r3, [pc, #36]	; 1c470 <ASN1_STRING_length@plt+0xa4fc>
   1c448:	add	r2, pc, r2
   1c44c:	mov	r1, #7
   1c450:	mov	r0, r4
   1c454:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c458:	b	1c404 <ASN1_STRING_length@plt+0xa490>
   1c45c:	b	1c25c <ASN1_STRING_length@plt+0xa2e8>
   1c460:	andeq	r1, r1, ip, lsl #30
   1c464:	andeq	r1, r1, r4, ror #2
   1c468:	andeq	r1, r1, r8, lsr fp
   1c46c:	andeq	r1, r1, r4, lsl lr
   1c470:	strdeq	r0, [r0], -r5
   1c474:	ldr	r2, [pc, #328]	; 1c5c4 <ASN1_STRING_length@plt+0xa650>
   1c478:	ldr	r3, [pc, #328]	; 1c5c8 <ASN1_STRING_length@plt+0xa654>
   1c47c:	add	r2, pc, r2
   1c480:	push	{r4, r5, r6, r7, r8, lr}
   1c484:	sub	sp, sp, #4096	; 0x1000
   1c488:	ldr	r6, [r2, r3]
   1c48c:	ldr	ip, [pc, #312]	; 1c5cc <ASN1_STRING_length@plt+0xa658>
   1c490:	sub	sp, sp, #24
   1c494:	add	ip, pc, ip
   1c498:	ldr	r3, [r0, #20]
   1c49c:	ldr	lr, [r6]
   1c4a0:	mov	r4, r0
   1c4a4:	str	ip, [sp, #8]
   1c4a8:	ldr	r0, [pc, #288]	; 1c5d0 <ASN1_STRING_length@plt+0xa65c>
   1c4ac:	add	ip, sp, #4096	; 0x1000
   1c4b0:	add	ip, ip, #20
   1c4b4:	str	r3, [sp, #4]
   1c4b8:	add	r0, pc, r0
   1c4bc:	mov	r3, #4096	; 0x1000
   1c4c0:	add	r5, sp, #20
   1c4c4:	str	r0, [sp]
   1c4c8:	mov	r7, r1
   1c4cc:	str	lr, [ip]
   1c4d0:	mov	r1, r3
   1c4d4:	mov	r0, r5
   1c4d8:	mov	r2, #1
   1c4dc:	bl	11cc8 <__snprintf_chk@plt>
   1c4e0:	mov	r0, r4
   1c4e4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c4e8:	cmp	r0, #6
   1c4ec:	bgt	1c53c <ASN1_STRING_length@plt+0xa5c8>
   1c4f0:	mov	r0, r5
   1c4f4:	bl	204a4 <ASN1_STRING_length@plt+0xe530>
   1c4f8:	subs	r8, r0, #0
   1c4fc:	beq	1c570 <ASN1_STRING_length@plt+0xa5fc>
   1c500:	mov	r1, r7
   1c504:	bl	205e8 <ASN1_STRING_length@plt+0xe674>
   1c508:	mov	r4, r0
   1c50c:	mov	r0, r8
   1c510:	bl	20540 <ASN1_STRING_length@plt+0xe5cc>
   1c514:	add	r3, sp, #4096	; 0x1000
   1c518:	add	r3, r3, #20
   1c51c:	ldr	r2, [r3]
   1c520:	ldr	r3, [r6]
   1c524:	mov	r0, r4
   1c528:	cmp	r2, r3
   1c52c:	bne	1c5c0 <ASN1_STRING_length@plt+0xa64c>
   1c530:	add	sp, sp, #4096	; 0x1000
   1c534:	add	sp, sp, #24
   1c538:	pop	{r4, r5, r6, r7, r8, pc}
   1c53c:	ldr	r2, [pc, #144]	; 1c5d4 <ASN1_STRING_length@plt+0xa660>
   1c540:	ldr	r3, [pc, #144]	; 1c5d8 <ASN1_STRING_length@plt+0xa664>
   1c544:	add	r2, pc, r2
   1c548:	add	r3, pc, r3
   1c54c:	stmib	sp, {r2, r5, r7}
   1c550:	mov	r1, #7
   1c554:	ldr	r2, [pc, #128]	; 1c5dc <ASN1_STRING_length@plt+0xa668>
   1c558:	str	r3, [sp]
   1c55c:	add	r2, pc, r2
   1c560:	ldr	r3, [pc, #120]	; 1c5e0 <ASN1_STRING_length@plt+0xa66c>
   1c564:	mov	r0, r4
   1c568:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c56c:	b	1c4f0 <ASN1_STRING_length@plt+0xa57c>
   1c570:	mov	r0, r4
   1c574:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c578:	cmp	r0, #2
   1c57c:	movle	r4, r8
   1c580:	ble	1c514 <ASN1_STRING_length@plt+0xa5a0>
   1c584:	ldr	r2, [pc, #88]	; 1c5e4 <ASN1_STRING_length@plt+0xa670>
   1c588:	ldr	r3, [pc, #88]	; 1c5e8 <ASN1_STRING_length@plt+0xa674>
   1c58c:	add	r2, pc, r2
   1c590:	str	r2, [sp, #4]
   1c594:	ldr	r2, [pc, #80]	; 1c5ec <ASN1_STRING_length@plt+0xa678>
   1c598:	add	r3, pc, r3
   1c59c:	mov	r0, r4
   1c5a0:	str	r3, [sp]
   1c5a4:	str	r5, [sp, #8]
   1c5a8:	ldr	r3, [pc, #64]	; 1c5f0 <ASN1_STRING_length@plt+0xa67c>
   1c5ac:	add	r2, pc, r2
   1c5b0:	mov	r1, #3
   1c5b4:	mov	r4, r8
   1c5b8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c5bc:	b	1c514 <ASN1_STRING_length@plt+0xa5a0>
   1c5c0:	bl	11d88 <__stack_chk_fail@plt>
   1c5c4:	andeq	r3, r2, r8, ror r9
   1c5c8:	strdeq	r0, [r0], -r8
   1c5cc:	andeq	r0, r1, r8, ror #15
   1c5d0:	andeq	r1, r1, r4, lsl #24
   1c5d4:			; <UNDEFINED> instruction: 0x00011db0
   1c5d8:	andeq	r1, r1, ip, asr sl
   1c5dc:	andeq	r1, r1, r0, lsl #26
   1c5e0:	andeq	r0, r0, r6, asr #4
   1c5e4:	andeq	r1, r1, ip, lsr #25
   1c5e8:	andeq	r1, r1, ip, lsl #20
   1c5ec:			; <UNDEFINED> instruction: 0x00011cb0
   1c5f0:	andeq	r0, r0, sl, asr #4
   1c5f4:	cmp	r0, #0
   1c5f8:	strne	r1, [r0, #4]
   1c5fc:	bx	lr
   1c600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c604:	sub	sp, sp, #24
   1c608:	ldr	r5, [pc, #708]	; 1c8d4 <ASN1_STRING_length@plt+0xa960>
   1c60c:	ldr	r3, [pc, #708]	; 1c8d8 <ASN1_STRING_length@plt+0xa964>
   1c610:	add	r5, pc, r5
   1c614:	mov	r8, r0
   1c618:	ldr	r7, [r5, r3]
   1c61c:	mov	r6, r1
   1c620:	mov	r0, #1
   1c624:	ldr	r3, [r7]
   1c628:	mov	r1, #80	; 0x50
   1c62c:	str	r3, [sp, #20]
   1c630:	bl	11ae8 <calloc@plt>
   1c634:	subs	r4, r0, #0
   1c638:	beq	1c784 <ASN1_STRING_length@plt+0xa810>
   1c63c:	ldr	r2, [pc, #664]	; 1c8dc <ASN1_STRING_length@plt+0xa968>
   1c640:	ldr	r3, [pc, #664]	; 1c8e0 <ASN1_STRING_length@plt+0xa96c>
   1c644:	add	r2, pc, r2
   1c648:	str	r2, [r4, #8]
   1c64c:	mov	r2, #1
   1c650:	str	r2, [r4]
   1c654:	ldr	r3, [r5, r3]
   1c658:	mov	r5, #3
   1c65c:	mov	r0, r8
   1c660:	ldr	r3, [r3]
   1c664:	str	r5, [r4, #4]
   1c668:	str	r3, [r4, #12]
   1c66c:	bl	1bdec <ASN1_STRING_length@plt+0x9e78>
   1c670:	str	r0, [r4, #20]
   1c674:	ldr	r0, [pc, #616]	; 1c8e4 <ASN1_STRING_length@plt+0xa970>
   1c678:	add	r0, pc, r0
   1c67c:	bl	11bd8 <secure_getenv@plt>
   1c680:	subs	r9, r0, #0
   1c684:	beq	1c72c <ASN1_STRING_length@plt+0xa7b8>
   1c688:	mov	r2, #10
   1c68c:	add	r1, sp, #16
   1c690:	bl	11c8c <strtol@plt>
   1c694:	ldr	r3, [sp, #16]
   1c698:	ldrb	r8, [r3]
   1c69c:	cmp	r8, #0
   1c6a0:	mov	sl, r0
   1c6a4:	beq	1c720 <ASN1_STRING_length@plt+0xa7ac>
   1c6a8:	bl	11d34 <__ctype_b_loc@plt>
   1c6ac:	lsl	r8, r8, #1
   1c6b0:	ldr	r3, [r0]
   1c6b4:	ldrh	r3, [r3, r8]
   1c6b8:	tst	r3, #8192	; 0x2000
   1c6bc:	bne	1c720 <ASN1_STRING_length@plt+0xa7ac>
   1c6c0:	ldr	r1, [pc, #544]	; 1c8e8 <ASN1_STRING_length@plt+0xa974>
   1c6c4:	mov	r2, r5
   1c6c8:	add	r1, pc, r1
   1c6cc:	mov	r0, r9
   1c6d0:	bl	11ea8 <strncmp@plt>
   1c6d4:	cmp	r0, #0
   1c6d8:	moveq	sl, r5
   1c6dc:	beq	1c720 <ASN1_STRING_length@plt+0xa7ac>
   1c6e0:	ldr	r1, [pc, #516]	; 1c8ec <ASN1_STRING_length@plt+0xa978>
   1c6e4:	mov	r2, #4
   1c6e8:	add	r1, pc, r1
   1c6ec:	mov	r0, r9
   1c6f0:	bl	11ea8 <strncmp@plt>
   1c6f4:	cmp	r0, #0
   1c6f8:	moveq	sl, #6
   1c6fc:	beq	1c720 <ASN1_STRING_length@plt+0xa7ac>
   1c700:	ldr	r1, [pc, #488]	; 1c8f0 <ASN1_STRING_length@plt+0xa97c>
   1c704:	mov	r0, r9
   1c708:	mov	r2, #5
   1c70c:	add	r1, pc, r1
   1c710:	bl	11ea8 <strncmp@plt>
   1c714:	cmp	r0, #0
   1c718:	movne	sl, #0
   1c71c:	moveq	sl, #7
   1c720:	mov	r1, sl
   1c724:	mov	r0, r4
   1c728:	bl	1c5f4 <ASN1_STRING_length@plt+0xa680>
   1c72c:	cmp	r6, #0
   1c730:	beq	1c820 <ASN1_STRING_length@plt+0xa8ac>
   1c734:	mov	r2, r6
   1c738:	add	r1, r4, #24
   1c73c:	mov	r0, r4
   1c740:	bl	1e554 <ASN1_STRING_length@plt+0xc5e0>
   1c744:	cmp	r0, #0
   1c748:	blt	1c82c <ASN1_STRING_length@plt+0xa8b8>
   1c74c:	mov	r1, #0
   1c750:	mov	r0, #256	; 0x100
   1c754:	bl	1a9f0 <ASN1_STRING_length@plt+0x8a7c>
   1c758:	cmp	r0, #0
   1c75c:	str	r0, [r4, #28]
   1c760:	mov	r0, r4
   1c764:	beq	1c85c <ASN1_STRING_length@plt+0xa8e8>
   1c768:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c76c:	cmp	r0, #5
   1c770:	bgt	1c7dc <ASN1_STRING_length@plt+0xa868>
   1c774:	mov	r0, r4
   1c778:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c77c:	cmp	r0, #6
   1c780:	bgt	1c7a0 <ASN1_STRING_length@plt+0xa82c>
   1c784:	ldr	r2, [sp, #20]
   1c788:	ldr	r3, [r7]
   1c78c:	mov	r0, r4
   1c790:	cmp	r2, r3
   1c794:	bne	1c8d0 <ASN1_STRING_length@plt+0xa95c>
   1c798:	add	sp, sp, #24
   1c79c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c7a0:	ldr	r2, [pc, #332]	; 1c8f4 <ASN1_STRING_length@plt+0xa980>
   1c7a4:	ldr	r3, [pc, #332]	; 1c8f8 <ASN1_STRING_length@plt+0xa984>
   1c7a8:	add	r2, pc, r2
   1c7ac:	ldr	r1, [r4, #4]
   1c7b0:	str	r2, [sp, #4]
   1c7b4:	ldr	r2, [pc, #320]	; 1c8fc <ASN1_STRING_length@plt+0xa988>
   1c7b8:	add	r3, pc, r3
   1c7bc:	str	r1, [sp, #8]
   1c7c0:	str	r3, [sp]
   1c7c4:	add	r2, pc, r2
   1c7c8:	ldr	r3, [pc, #304]	; 1c900 <ASN1_STRING_length@plt+0xa98c>
   1c7cc:	mov	r1, #7
   1c7d0:	mov	r0, r4
   1c7d4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c7d8:	b	1c784 <ASN1_STRING_length@plt+0xa810>
   1c7dc:	ldr	r2, [pc, #288]	; 1c904 <ASN1_STRING_length@plt+0xa990>
   1c7e0:	ldr	r3, [pc, #288]	; 1c908 <ASN1_STRING_length@plt+0xa994>
   1c7e4:	add	r2, pc, r2
   1c7e8:	add	r3, pc, r3
   1c7ec:	stmib	sp, {r2, r4}
   1c7f0:	ldr	r2, [pc, #276]	; 1c90c <ASN1_STRING_length@plt+0xa998>
   1c7f4:	str	r3, [sp]
   1c7f8:	add	r2, pc, r2
   1c7fc:	ldr	r3, [pc, #268]	; 1c910 <ASN1_STRING_length@plt+0xa99c>
   1c800:	mov	r1, #6
   1c804:	mov	r0, r4
   1c808:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c80c:	mov	r0, r4
   1c810:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c814:	cmp	r0, #6
   1c818:	ble	1c784 <ASN1_STRING_length@plt+0xa810>
   1c81c:	b	1c7a0 <ASN1_STRING_length@plt+0xa82c>
   1c820:	ldr	r6, [pc, #236]	; 1c914 <ASN1_STRING_length@plt+0xa9a0>
   1c824:	add	r6, pc, r6
   1c828:	b	1c734 <ASN1_STRING_length@plt+0xa7c0>
   1c82c:	mov	r0, r4
   1c830:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c834:	cmp	r0, #2
   1c838:	bgt	1c89c <ASN1_STRING_length@plt+0xa928>
   1c83c:	ldr	r0, [r4, #28]
   1c840:	bl	11ba8 <free@plt>
   1c844:	ldr	r0, [r4, #20]
   1c848:	bl	11ba8 <free@plt>
   1c84c:	mov	r0, r4
   1c850:	bl	11ba8 <free@plt>
   1c854:	mov	r4, #0
   1c858:	b	1c784 <ASN1_STRING_length@plt+0xa810>
   1c85c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c860:	cmp	r0, #2
   1c864:	ble	1c83c <ASN1_STRING_length@plt+0xa8c8>
   1c868:	ldr	r2, [pc, #168]	; 1c918 <ASN1_STRING_length@plt+0xa9a4>
   1c86c:	ldr	r3, [pc, #168]	; 1c91c <ASN1_STRING_length@plt+0xa9a8>
   1c870:	add	r2, pc, r2
   1c874:	str	r2, [sp, #4]
   1c878:	ldr	r2, [pc, #160]	; 1c920 <ASN1_STRING_length@plt+0xa9ac>
   1c87c:	add	r3, pc, r3
   1c880:	str	r3, [sp]
   1c884:	add	r2, pc, r2
   1c888:	ldr	r3, [pc, #148]	; 1c924 <ASN1_STRING_length@plt+0xa9b0>
   1c88c:	mov	r1, #3
   1c890:	mov	r0, r4
   1c894:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c898:	b	1c83c <ASN1_STRING_length@plt+0xa8c8>
   1c89c:	ldr	r2, [pc, #132]	; 1c928 <ASN1_STRING_length@plt+0xa9b4>
   1c8a0:	ldr	r3, [pc, #132]	; 1c92c <ASN1_STRING_length@plt+0xa9b8>
   1c8a4:	add	r2, pc, r2
   1c8a8:	str	r2, [sp, #4]
   1c8ac:	ldr	r2, [pc, #124]	; 1c930 <ASN1_STRING_length@plt+0xa9bc>
   1c8b0:	add	r3, pc, r3
   1c8b4:	str	r3, [sp]
   1c8b8:	add	r2, pc, r2
   1c8bc:	mov	r3, #276	; 0x114
   1c8c0:	mov	r1, #3
   1c8c4:	mov	r0, r4
   1c8c8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c8cc:	b	1c83c <ASN1_STRING_length@plt+0xa8c8>
   1c8d0:	bl	11d88 <__stack_chk_fail@plt>
   1c8d4:	andeq	r3, r2, r4, ror #15
   1c8d8:	strdeq	r0, [r0], -r8
   1c8dc:			; <UNDEFINED> instruction: 0xfffff634
   1c8e0:	strdeq	r0, [r0], -ip
   1c8e4:	andeq	r1, r1, r0, lsl #22
   1c8e8:			; <UNDEFINED> instruction: 0x00011abc
   1c8ec:	andeq	r2, r1, r0, ror r4
   1c8f0:	andeq	r1, r1, ip, ror sl
   1c8f4:	andeq	r1, r1, r4, lsr sl
   1c8f8:	andeq	r1, r1, r0, lsr #14
   1c8fc:	muleq	r1, r8, sl
   1c900:	andeq	r0, r0, pc, lsl r1
   1c904:	andeq	r1, r1, r8, ror #19
   1c908:	strdeq	r1, [r1], -r0
   1c90c:	andeq	r1, r1, r4, ror #20
   1c910:	andeq	r0, r0, lr, lsl r1
   1c914:	strdeq	r3, [r2], -ip
   1c918:	andeq	r1, r1, ip, lsr r9
   1c91c:	andeq	r1, r1, ip, asr r6
   1c920:	ldrdeq	r1, [r1], -r8
   1c924:	andeq	r0, r0, sl, lsl r1
   1c928:	andeq	r1, r1, ip, ror #17
   1c92c:	andeq	r1, r1, r8, lsr #12
   1c930:	andeq	r1, r1, r4, lsr #19
   1c934:	push	{r4, r5, r6, lr}
   1c938:	mov	r4, r0
   1c93c:	sub	sp, sp, #16
   1c940:	ldr	r0, [r0, #28]
   1c944:	mov	r6, r1
   1c948:	bl	1aef4 <ASN1_STRING_length@plt+0x8f80>
   1c94c:	mov	r5, r0
   1c950:	mov	r0, r4
   1c954:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c958:	cmp	r0, #6
   1c95c:	bgt	1c96c <ASN1_STRING_length@plt+0xa9f8>
   1c960:	mov	r0, r5
   1c964:	add	sp, sp, #16
   1c968:	pop	{r4, r5, r6, pc}
   1c96c:	ldr	r2, [pc, #60]	; 1c9b0 <ASN1_STRING_length@plt+0xaa3c>
   1c970:	ldr	r3, [pc, #60]	; 1c9b4 <ASN1_STRING_length@plt+0xaa40>
   1c974:	add	r2, pc, r2
   1c978:	str	r2, [sp, #4]
   1c97c:	ldr	r2, [pc, #52]	; 1c9b8 <ASN1_STRING_length@plt+0xaa44>
   1c980:	add	r3, pc, r3
   1c984:	mov	r0, r4
   1c988:	str	r3, [sp]
   1c98c:	str	r5, [sp, #12]
   1c990:	str	r6, [sp, #8]
   1c994:	ldr	r3, [pc, #32]	; 1c9bc <ASN1_STRING_length@plt+0xaa48>
   1c998:	add	r2, pc, r2
   1c99c:	mov	r1, #7
   1c9a0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1c9a4:	mov	r0, r5
   1c9a8:	add	sp, sp, #16
   1c9ac:	pop	{r4, r5, r6, pc}
   1c9b0:	andeq	r1, r1, r4, lsr #17
   1c9b4:	andeq	r1, r1, r0, lsl #11
   1c9b8:	andeq	r1, r1, r4, asr #17
   1c9bc:	muleq	r0, r2, r1
   1c9c0:	push	{r4, r5, r6, lr}
   1c9c4:	sub	sp, sp, #16
   1c9c8:	mov	r6, r1
   1c9cc:	mov	r5, r2
   1c9d0:	mov	r4, r0
   1c9d4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1c9d8:	cmp	r0, #6
   1c9dc:	bgt	1c9f8 <ASN1_STRING_length@plt+0xaa84>
   1c9e0:	mov	r2, r6
   1c9e4:	mov	r1, r5
   1c9e8:	ldr	r0, [r4, #28]
   1c9ec:	add	sp, sp, #16
   1c9f0:	pop	{r4, r5, r6, lr}
   1c9f4:	b	1aae4 <ASN1_STRING_length@plt+0x8b70>
   1c9f8:	ldr	r2, [pc, #48]	; 1ca30 <ASN1_STRING_length@plt+0xaabc>
   1c9fc:	ldr	r3, [pc, #48]	; 1ca34 <ASN1_STRING_length@plt+0xaac0>
   1ca00:	add	r2, pc, r2
   1ca04:	add	r3, pc, r3
   1ca08:	stmib	sp, {r2, r6}
   1ca0c:	ldr	r2, [pc, #36]	; 1ca38 <ASN1_STRING_length@plt+0xaac4>
   1ca10:	str	r3, [sp]
   1ca14:	str	r5, [sp, #12]
   1ca18:	ldr	r3, [pc, #28]	; 1ca3c <ASN1_STRING_length@plt+0xaac8>
   1ca1c:	add	r2, pc, r2
   1ca20:	mov	r1, #7
   1ca24:	mov	r0, r4
   1ca28:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ca2c:	b	1c9e0 <ASN1_STRING_length@plt+0xaa6c>
   1ca30:	strdeq	r1, [r1], -r0
   1ca34:	andeq	r1, r1, r4, lsl r5
   1ca38:	andeq	r1, r1, r0, asr #16
   1ca3c:	muleq	r0, sl, r1
   1ca40:	push	{r4, r5, r6, lr}
   1ca44:	sub	sp, sp, #16
   1ca48:	mov	r6, r1
   1ca4c:	mov	r5, r2
   1ca50:	mov	r4, r0
   1ca54:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1ca58:	cmp	r0, #6
   1ca5c:	bgt	1ca74 <ASN1_STRING_length@plt+0xab00>
   1ca60:	mov	r1, r5
   1ca64:	ldr	r0, [r4, #28]
   1ca68:	add	sp, sp, #16
   1ca6c:	pop	{r4, r5, r6, lr}
   1ca70:	b	1b05c <ASN1_STRING_length@plt+0x90e8>
   1ca74:	ldr	r2, [pc, #48]	; 1caac <ASN1_STRING_length@plt+0xab38>
   1ca78:	ldr	r3, [pc, #48]	; 1cab0 <ASN1_STRING_length@plt+0xab3c>
   1ca7c:	add	r2, pc, r2
   1ca80:	add	r3, pc, r3
   1ca84:	stmib	sp, {r2, r6}
   1ca88:	ldr	r2, [pc, #36]	; 1cab4 <ASN1_STRING_length@plt+0xab40>
   1ca8c:	str	r3, [sp]
   1ca90:	str	r5, [sp, #12]
   1ca94:	ldr	r3, [pc, #28]	; 1cab8 <ASN1_STRING_length@plt+0xab44>
   1ca98:	add	r2, pc, r2
   1ca9c:	mov	r1, #7
   1caa0:	mov	r0, r4
   1caa4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1caa8:	b	1ca60 <ASN1_STRING_length@plt+0xaaec>
   1caac:	andeq	r1, r1, r8, lsl #15
   1cab0:			; <UNDEFINED> instruction: 0x000114b0
   1cab4:	andeq	r1, r1, r4, asr #15
   1cab8:	andeq	r0, r0, r2, lsr #3
   1cabc:	push	{r4, r5, r6, lr}
   1cac0:	mov	r4, r1
   1cac4:	mov	r5, r0
   1cac8:	mov	r0, r1
   1cacc:	ldr	r1, [pc, #52]	; 1cb08 <ASN1_STRING_length@plt+0xab94>
   1cad0:	mov	r6, r2
   1cad4:	add	r1, pc, r1
   1cad8:	mov	r2, #7
   1cadc:	bl	11ea8 <strncmp@plt>
   1cae0:	cmp	r0, #0
   1cae4:	beq	1caf0 <ASN1_STRING_length@plt+0xab7c>
   1cae8:	mov	r0, #0
   1caec:	pop	{r4, r5, r6, pc}
   1caf0:	mov	r3, r6
   1caf4:	mov	r2, r4
   1caf8:	mov	r0, r5
   1cafc:	mov	r1, #2
   1cb00:	pop	{r4, r5, r6, lr}
   1cb04:	b	1bfa4 <ASN1_STRING_length@plt+0xa030>
   1cb08:	andeq	r0, r1, r4, asr #25
   1cb0c:	mov	r3, r2
   1cb10:	mov	r2, r1
   1cb14:	mov	r1, #1
   1cb18:	b	1bfa4 <ASN1_STRING_length@plt+0xa030>
   1cb1c:	ldr	r3, [pc, #276]	; 1cc38 <ASN1_STRING_length@plt+0xacc4>
   1cb20:	ldr	ip, [pc, #276]	; 1cc3c <ASN1_STRING_length@plt+0xacc8>
   1cb24:	add	r3, pc, r3
   1cb28:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cb2c:	mov	r6, r2
   1cb30:	ldr	r4, [r3, ip]
   1cb34:	ldr	r2, [r2]
   1cb38:	sub	sp, sp, #28
   1cb3c:	ldr	r3, [r4]
   1cb40:	cmp	r2, #0
   1cb44:	str	r3, [sp, #20]
   1cb48:	bne	1cc14 <ASN1_STRING_length@plt+0xaca0>
   1cb4c:	mov	r8, r0
   1cb50:	mov	r9, r1
   1cb54:	bl	1c3dc <ASN1_STRING_length@plt+0xa468>
   1cb58:	subs	r7, r0, #0
   1cb5c:	moveq	r5, r7
   1cb60:	beq	1cba0 <ASN1_STRING_length@plt+0xac2c>
   1cb64:	add	r2, sp, #16
   1cb68:	mov	r1, r9
   1cb6c:	mov	r0, r8
   1cb70:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   1cb74:	subs	r5, r0, #0
   1cb78:	blt	1cbc4 <ASN1_STRING_length@plt+0xac50>
   1cb7c:	mov	r1, #1
   1cb80:	ldr	r0, [sp, #16]
   1cb84:	bl	2172c <ASN1_STRING_length@plt+0xf7b8>
   1cb88:	ldr	r1, [sp, #16]
   1cb8c:	ldr	r0, [r6]
   1cb90:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1cb94:	cmp	r0, #0
   1cb98:	mvneq	r5, #11
   1cb9c:	str	r0, [r6]
   1cba0:	mov	r0, r7
   1cba4:	bl	11ba8 <free@plt>
   1cba8:	ldr	r2, [sp, #20]
   1cbac:	ldr	r3, [r4]
   1cbb0:	mov	r0, r5
   1cbb4:	cmp	r2, r3
   1cbb8:	bne	1cc34 <ASN1_STRING_length@plt+0xacc0>
   1cbbc:	add	sp, sp, #28
   1cbc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cbc4:	mov	r0, r8
   1cbc8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1cbcc:	cmp	r0, #2
   1cbd0:	ble	1cba0 <ASN1_STRING_length@plt+0xac2c>
   1cbd4:	rsb	r0, r5, #0
   1cbd8:	bl	119f8 <strerror@plt>
   1cbdc:	ldr	r2, [pc, #92]	; 1cc40 <ASN1_STRING_length@plt+0xaccc>
   1cbe0:	ldr	r3, [pc, #92]	; 1cc44 <ASN1_STRING_length@plt+0xacd0>
   1cbe4:	add	r2, pc, r2
   1cbe8:	add	r3, pc, r3
   1cbec:	stmib	sp, {r2, r9}
   1cbf0:	ldr	r2, [pc, #80]	; 1cc48 <ASN1_STRING_length@plt+0xacd4>
   1cbf4:	str	r3, [sp]
   1cbf8:	add	r2, pc, r2
   1cbfc:	mov	r3, #540	; 0x21c
   1cc00:	mov	r1, #3
   1cc04:	str	r0, [sp, #12]
   1cc08:	mov	r0, r8
   1cc0c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1cc10:	b	1cba0 <ASN1_STRING_length@plt+0xac2c>
   1cc14:	ldr	r3, [pc, #48]	; 1cc4c <ASN1_STRING_length@plt+0xacd8>
   1cc18:	ldr	r1, [pc, #48]	; 1cc50 <ASN1_STRING_length@plt+0xacdc>
   1cc1c:	ldr	r0, [pc, #48]	; 1cc54 <ASN1_STRING_length@plt+0xace0>
   1cc20:	add	r3, pc, r3
   1cc24:	ldr	r2, [pc, #44]	; 1cc58 <ASN1_STRING_length@plt+0xace4>
   1cc28:	add	r1, pc, r1
   1cc2c:	add	r0, pc, r0
   1cc30:	bl	11b6c <__assert_fail@plt>
   1cc34:	bl	11d88 <__stack_chk_fail@plt>
   1cc38:	ldrdeq	r3, [r2], -r0
   1cc3c:	strdeq	r0, [r0], -r8
   1cc40:	andeq	r1, r1, r0, lsr r5
   1cc44:	muleq	r1, r8, r3
   1cc48:	andeq	r1, r1, r4, ror #12
   1cc4c:	muleq	r1, r4, r2
   1cc50:	andeq	r1, r1, r4, lsr r6
   1cc54:	andeq	r2, r1, r4, ror r4
   1cc58:	andeq	r0, r0, r3, lsl r2
   1cc5c:	push	{r4, lr}
   1cc60:	bl	1c3dc <ASN1_STRING_length@plt+0xa468>
   1cc64:	mov	r4, r0
   1cc68:	bl	11ba8 <free@plt>
   1cc6c:	adds	r0, r4, #0
   1cc70:	movne	r0, #1
   1cc74:	pop	{r4, pc}
   1cc78:	ldr	r2, [r0, #32]
   1cc7c:	cmp	r2, #0
   1cc80:	beq	1ccb4 <ASN1_STRING_length@plt+0xad40>
   1cc84:	push	{r4, r5, lr}
   1cc88:	sub	sp, sp, #20
   1cc8c:	mov	r4, r0
   1cc90:	mov	r5, r1
   1cc94:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1cc98:	cmp	r0, #6
   1cc9c:	bgt	1ccb8 <ASN1_STRING_length@plt+0xad44>
   1cca0:	mov	r1, r5
   1cca4:	ldr	r0, [r4, #32]
   1cca8:	add	sp, sp, #20
   1ccac:	pop	{r4, r5, lr}
   1ccb0:	b	20df4 <ASN1_STRING_length@plt+0xee80>
   1ccb4:	b	1c474 <ASN1_STRING_length@plt+0xa500>
   1ccb8:	ldr	r2, [pc, #60]	; 1ccfc <ASN1_STRING_length@plt+0xad88>
   1ccbc:	ldr	r1, [pc, #60]	; 1cd00 <ASN1_STRING_length@plt+0xad8c>
   1ccc0:	add	r2, pc, r2
   1ccc4:	ldr	r3, [pc, #56]	; 1cd04 <ASN1_STRING_length@plt+0xad90>
   1ccc8:	str	r2, [sp, #4]
   1cccc:	ldr	r2, [pc, #52]	; 1cd08 <ASN1_STRING_length@plt+0xad94>
   1ccd0:	add	r1, pc, r1
   1ccd4:	add	r3, pc, r3
   1ccd8:	str	r1, [sp, #8]
   1ccdc:	str	r3, [sp]
   1cce0:	str	r5, [sp, #12]
   1cce4:	ldr	r3, [pc, #32]	; 1cd0c <ASN1_STRING_length@plt+0xad98>
   1cce8:	add	r2, pc, r2
   1ccec:	mov	r1, #7
   1ccf0:	mov	r0, r4
   1ccf4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ccf8:	b	1cca0 <ASN1_STRING_length@plt+0xad2c>
   1ccfc:	andeq	r1, r1, ip, ror #12
   1cd00:	andeq	pc, r0, ip, lsr #31
   1cd04:	ldrdeq	r1, [r1], -r0
   1cd08:	andeq	r1, r1, r4, ror r5
   1cd0c:	andeq	r0, r0, lr, lsr r2
   1cd10:	ldr	r3, [pc, #260]	; 1ce1c <ASN1_STRING_length@plt+0xaea8>
   1cd14:	ldr	ip, [pc, #260]	; 1ce20 <ASN1_STRING_length@plt+0xaeac>
   1cd18:	add	r3, pc, r3
   1cd1c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cd20:	sub	sp, sp, #28
   1cd24:	ldr	r4, [r3, ip]
   1cd28:	mov	r5, r1
   1cd2c:	mov	r7, r0
   1cd30:	ldr	r3, [r4]
   1cd34:	mov	r0, r1
   1cd38:	mov	r1, #58	; 0x3a
   1cd3c:	mov	r8, r2
   1cd40:	str	r3, [sp, #20]
   1cd44:	bl	11ac4 <strchr@plt>
   1cd48:	cmp	r0, #0
   1cd4c:	movne	r6, #0
   1cd50:	beq	1cd70 <ASN1_STRING_length@plt+0xadfc>
   1cd54:	ldr	r2, [sp, #20]
   1cd58:	ldr	r3, [r4]
   1cd5c:	mov	r0, r6
   1cd60:	cmp	r2, r3
   1cd64:	bne	1ce18 <ASN1_STRING_length@plt+0xaea4>
   1cd68:	add	sp, sp, #28
   1cd6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cd70:	mov	r1, r5
   1cd74:	mov	r0, r7
   1cd78:	bl	1cc78 <ASN1_STRING_length@plt+0xad04>
   1cd7c:	subs	r9, r0, #0
   1cd80:	moveq	r6, r9
   1cd84:	beq	1cdbc <ASN1_STRING_length@plt+0xae48>
   1cd88:	add	r2, sp, #16
   1cd8c:	mov	r1, r5
   1cd90:	mov	r0, r7
   1cd94:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   1cd98:	subs	r6, r0, #0
   1cd9c:	blt	1cdc8 <ASN1_STRING_length@plt+0xae54>
   1cda0:	ldr	r1, [sp, #16]
   1cda4:	ldr	r0, [r8]
   1cda8:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1cdac:	mov	r1, r9
   1cdb0:	str	r0, [r8]
   1cdb4:	ldr	r0, [sp, #16]
   1cdb8:	bl	21e08 <ASN1_STRING_length@plt+0xfe94>
   1cdbc:	mov	r0, r9
   1cdc0:	bl	11ba8 <free@plt>
   1cdc4:	b	1cd54 <ASN1_STRING_length@plt+0xade0>
   1cdc8:	mov	r0, r7
   1cdcc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1cdd0:	cmp	r0, #2
   1cdd4:	ble	1cdbc <ASN1_STRING_length@plt+0xae48>
   1cdd8:	rsb	r0, r6, #0
   1cddc:	bl	119f8 <strerror@plt>
   1cde0:	ldr	r2, [pc, #60]	; 1ce24 <ASN1_STRING_length@plt+0xaeb0>
   1cde4:	ldr	r3, [pc, #60]	; 1ce28 <ASN1_STRING_length@plt+0xaeb4>
   1cde8:	add	r2, pc, r2
   1cdec:	add	r3, pc, r3
   1cdf0:	stmib	sp, {r2, r5}
   1cdf4:	ldr	r2, [pc, #48]	; 1ce2c <ASN1_STRING_length@plt+0xaeb8>
   1cdf8:	str	r3, [sp]
   1cdfc:	add	r2, pc, r2
   1ce00:	mov	r3, #616	; 0x268
   1ce04:	mov	r1, #3
   1ce08:	str	r0, [sp, #12]
   1ce0c:	mov	r0, r7
   1ce10:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ce14:	b	1cdbc <ASN1_STRING_length@plt+0xae48>
   1ce18:	bl	11d88 <__stack_chk_fail@plt>
   1ce1c:	ldrdeq	r3, [r2], -ip
   1ce20:	strdeq	r0, [r0], -r8
   1ce24:	andeq	r1, r1, ip, lsr #6
   1ce28:	andeq	r1, r1, ip, asr #3
   1ce2c:	andeq	r1, r1, r0, ror #8
   1ce30:	ldr	r3, [pc, #348]	; 1cf94 <ASN1_STRING_length@plt+0xb020>
   1ce34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce38:	mov	fp, r0
   1ce3c:	ldr	r0, [pc, #340]	; 1cf98 <ASN1_STRING_length@plt+0xb024>
   1ce40:	add	r3, pc, r3
   1ce44:	ldr	r7, [fp, #24]
   1ce48:	mov	r8, r1
   1ce4c:	ldr	r1, [r3, r0]
   1ce50:	ldr	r4, [r7, #4]
   1ce54:	sub	sp, sp, #44	; 0x2c
   1ce58:	mov	sl, r2
   1ce5c:	ldr	r2, [r1]
   1ce60:	cmp	r4, #0
   1ce64:	str	r1, [sp, #28]
   1ce68:	str	r2, [sp, #36]	; 0x24
   1ce6c:	beq	1cf88 <ASN1_STRING_length@plt+0xb014>
   1ce70:	mov	r9, #0
   1ce74:	add	r3, sp, #32
   1ce78:	str	r3, [sp, #24]
   1ce7c:	mov	r0, r4
   1ce80:	bl	1da94 <ASN1_STRING_length@plt+0xbb20>
   1ce84:	mov	r5, r0
   1ce88:	mov	r0, r4
   1ce8c:	bl	1daa0 <ASN1_STRING_length@plt+0xbb2c>
   1ce90:	mov	r2, #0
   1ce94:	mov	r1, r8
   1ce98:	mov	r6, r0
   1ce9c:	mov	r0, r5
   1cea0:	bl	11e00 <fnmatch@plt>
   1cea4:	cmp	r0, #0
   1cea8:	beq	1cee4 <ASN1_STRING_length@plt+0xaf70>
   1ceac:	ldr	r4, [r4]
   1ceb0:	ldr	r3, [r7, #4]
   1ceb4:	cmp	r4, r3
   1ceb8:	beq	1cec4 <ASN1_STRING_length@plt+0xaf50>
   1cebc:	cmp	r4, #0
   1cec0:	bne	1ce7c <ASN1_STRING_length@plt+0xaf08>
   1cec4:	ldr	r3, [sp, #28]
   1cec8:	ldr	r2, [sp, #36]	; 0x24
   1cecc:	mov	r0, r9
   1ced0:	ldr	r3, [r3]
   1ced4:	cmp	r2, r3
   1ced8:	bne	1cf90 <ASN1_STRING_length@plt+0xb01c>
   1cedc:	add	sp, sp, #44	; 0x2c
   1cee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cee4:	mov	r1, r5
   1cee8:	ldr	r3, [sp, #24]
   1ceec:	mov	r2, r6
   1cef0:	mov	r0, fp
   1cef4:	bl	219b8 <ASN1_STRING_length@plt+0xfa44>
   1cef8:	cmp	r0, #0
   1cefc:	blt	1cf18 <ASN1_STRING_length@plt+0xafa4>
   1cf00:	ldr	r1, [sp, #32]
   1cf04:	ldr	r0, [sl]
   1cf08:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1cf0c:	add	r9, r9, #1
   1cf10:	str	r0, [sl]
   1cf14:	b	1ceac <ASN1_STRING_length@plt+0xaf38>
   1cf18:	mov	r5, r0
   1cf1c:	mov	r0, fp
   1cf20:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1cf24:	cmp	r0, #2
   1cf28:	bgt	1cf44 <ASN1_STRING_length@plt+0xafd0>
   1cf2c:	mov	r1, r9
   1cf30:	ldr	r0, [sl]
   1cf34:	bl	1da64 <ASN1_STRING_length@plt+0xbaf0>
   1cf38:	mov	r9, r5
   1cf3c:	str	r0, [sl]
   1cf40:	b	1cec4 <ASN1_STRING_length@plt+0xaf50>
   1cf44:	rsb	r0, r5, #0
   1cf48:	bl	119f8 <strerror@plt>
   1cf4c:	ldr	r2, [pc, #72]	; 1cf9c <ASN1_STRING_length@plt+0xb028>
   1cf50:	ldr	r3, [pc, #72]	; 1cfa0 <ASN1_STRING_length@plt+0xb02c>
   1cf54:	add	r2, pc, r2
   1cf58:	add	r3, pc, r3
   1cf5c:	stmib	sp, {r2, r8}
   1cf60:	ldr	r2, [pc, #60]	; 1cfa4 <ASN1_STRING_length@plt+0xb030>
   1cf64:	str	r3, [sp]
   1cf68:	str	r6, [sp, #12]
   1cf6c:	mov	r3, #648	; 0x288
   1cf70:	add	r2, pc, r2
   1cf74:	mov	r1, #3
   1cf78:	str	r0, [sp, #16]
   1cf7c:	mov	r0, fp
   1cf80:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1cf84:	b	1cf2c <ASN1_STRING_length@plt+0xafb8>
   1cf88:	mov	r9, r4
   1cf8c:	b	1cec4 <ASN1_STRING_length@plt+0xaf50>
   1cf90:	bl	11d88 <__stack_chk_fail@plt>
   1cf94:			; <UNDEFINED> instruction: 0x00022fb4
   1cf98:	strdeq	r0, [r0], -r8
   1cf9c:	andeq	r1, r1, ip, ror #3
   1cfa0:	andeq	r1, r1, r4, lsl #1
   1cfa4:	andeq	r1, r1, ip, ror #5
   1cfa8:	ldr	r3, [pc, #672]	; 1d250 <ASN1_STRING_length@plt+0xb2dc>
   1cfac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cfb0:	mov	r8, r0
   1cfb4:	ldr	r0, [pc, #664]	; 1d254 <ASN1_STRING_length@plt+0xb2e0>
   1cfb8:	add	r3, pc, r3
   1cfbc:	ldr	r5, [r8, #24]
   1cfc0:	ldr	r7, [r3, r0]
   1cfc4:	sub	sp, sp, #24
   1cfc8:	ldr	r4, [r5, #20]
   1cfcc:	mov	r9, r2
   1cfd0:	ldr	r2, [r7]
   1cfd4:	cmp	r4, #0
   1cfd8:	mov	r6, r1
   1cfdc:	str	r2, [sp, #20]
   1cfe0:	bne	1d000 <ASN1_STRING_length@plt+0xb08c>
   1cfe4:	b	1d06c <ASN1_STRING_length@plt+0xb0f8>
   1cfe8:	ldr	r4, [r4]
   1cfec:	ldr	r3, [r5, #20]
   1cff0:	cmp	r4, r3
   1cff4:	beq	1d06c <ASN1_STRING_length@plt+0xb0f8>
   1cff8:	cmp	r4, #0
   1cffc:	beq	1d06c <ASN1_STRING_length@plt+0xb0f8>
   1d000:	mov	r0, r4
   1d004:	bl	1dad0 <ASN1_STRING_length@plt+0xbb5c>
   1d008:	mov	r1, r6
   1d00c:	mov	sl, r0
   1d010:	bl	11f14 <strcmp@plt>
   1d014:	cmp	r0, #0
   1d018:	bne	1cfe8 <ASN1_STRING_length@plt+0xb074>
   1d01c:	mov	r0, r4
   1d020:	bl	1dac4 <ASN1_STRING_length@plt+0xbb50>
   1d024:	add	r2, sp, #16
   1d028:	mov	r1, sl
   1d02c:	mov	r5, r0
   1d030:	mov	r0, r8
   1d034:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   1d038:	subs	r4, r0, #0
   1d03c:	blt	1d180 <ASN1_STRING_length@plt+0xb20c>
   1d040:	ldr	r1, [sp, #16]
   1d044:	ldr	r0, [r9]
   1d048:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1d04c:	cmp	r0, #0
   1d050:	beq	1d118 <ASN1_STRING_length@plt+0xb1a4>
   1d054:	str	r0, [r9]
   1d058:	mov	r1, r5
   1d05c:	ldr	r0, [sp, #16]
   1d060:	bl	23330 <ASN1_STRING_length@plt+0x113bc>
   1d064:	mov	r4, #1
   1d068:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d06c:	ldr	r4, [r5, #16]
   1d070:	b	1d0a0 <ASN1_STRING_length@plt+0xb12c>
   1d074:	mov	r0, r4
   1d078:	bl	1dad0 <ASN1_STRING_length@plt+0xbb5c>
   1d07c:	mov	r1, r6
   1d080:	mov	sl, r0
   1d084:	bl	11f14 <strcmp@plt>
   1d088:	cmp	r0, #0
   1d08c:	beq	1d0c8 <ASN1_STRING_length@plt+0xb154>
   1d090:	ldr	r4, [r4]
   1d094:	ldr	r3, [r5, #16]
   1d098:	cmp	r4, r3
   1d09c:	beq	1d0a8 <ASN1_STRING_length@plt+0xb134>
   1d0a0:	cmp	r4, #0
   1d0a4:	bne	1d074 <ASN1_STRING_length@plt+0xb100>
   1d0a8:	mov	r4, #0
   1d0ac:	ldr	r2, [sp, #20]
   1d0b0:	ldr	r3, [r7]
   1d0b4:	mov	r0, r4
   1d0b8:	cmp	r2, r3
   1d0bc:	bne	1d24c <ASN1_STRING_length@plt+0xb2d8>
   1d0c0:	add	sp, sp, #24
   1d0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d0c8:	mov	r0, r4
   1d0cc:	bl	1dac4 <ASN1_STRING_length@plt+0xbb50>
   1d0d0:	add	r2, sp, #16
   1d0d4:	mov	r1, sl
   1d0d8:	mov	r5, r0
   1d0dc:	mov	r0, r8
   1d0e0:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   1d0e4:	subs	r4, r0, #0
   1d0e8:	blt	1d130 <ASN1_STRING_length@plt+0xb1bc>
   1d0ec:	ldr	r1, [sp, #16]
   1d0f0:	ldr	r0, [r9]
   1d0f4:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1d0f8:	cmp	r0, #0
   1d0fc:	beq	1d208 <ASN1_STRING_length@plt+0xb294>
   1d100:	str	r0, [r9]
   1d104:	mov	r1, r5
   1d108:	ldr	r0, [sp, #16]
   1d10c:	bl	238e0 <ASN1_STRING_length@plt+0x1196c>
   1d110:	mov	r4, #1
   1d114:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d118:	mov	r0, r8
   1d11c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d120:	cmp	r0, #2
   1d124:	bgt	1d1d0 <ASN1_STRING_length@plt+0xb25c>
   1d128:	mvn	r4, #11
   1d12c:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d130:	mov	r0, r8
   1d134:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d138:	cmp	r0, #2
   1d13c:	ble	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d140:	rsb	r0, r4, #0
   1d144:	bl	119f8 <strerror@plt>
   1d148:	ldr	r2, [pc, #264]	; 1d258 <ASN1_STRING_length@plt+0xb2e4>
   1d14c:	ldr	r3, [pc, #264]	; 1d25c <ASN1_STRING_length@plt+0xb2e8>
   1d150:	add	r2, pc, r2
   1d154:	add	r3, pc, r3
   1d158:	stmib	sp, {r2, sl}
   1d15c:	ldr	r2, [pc, #252]	; 1d260 <ASN1_STRING_length@plt+0xb2ec>
   1d160:	str	r3, [sp]
   1d164:	add	r2, pc, r2
   1d168:	ldr	r3, [pc, #244]	; 1d264 <ASN1_STRING_length@plt+0xb2f0>
   1d16c:	mov	r1, #3
   1d170:	str	r0, [sp, #12]
   1d174:	mov	r0, r8
   1d178:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d17c:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d180:	mov	r0, r8
   1d184:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d188:	cmp	r0, #2
   1d18c:	ble	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d190:	rsb	r0, r4, #0
   1d194:	bl	119f8 <strerror@plt>
   1d198:	ldr	r2, [pc, #200]	; 1d268 <ASN1_STRING_length@plt+0xb2f4>
   1d19c:	ldr	r3, [pc, #200]	; 1d26c <ASN1_STRING_length@plt+0xb2f8>
   1d1a0:	add	r2, pc, r2
   1d1a4:	add	r3, pc, r3
   1d1a8:	stmib	sp, {r2, sl}
   1d1ac:	ldr	r2, [pc, #188]	; 1d270 <ASN1_STRING_length@plt+0xb2fc>
   1d1b0:	str	r3, [sp]
   1d1b4:	add	r2, pc, r2
   1d1b8:	ldr	r3, [pc, #180]	; 1d274 <ASN1_STRING_length@plt+0xb300>
   1d1bc:	mov	r1, #3
   1d1c0:	str	r0, [sp, #12]
   1d1c4:	mov	r0, r8
   1d1c8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d1cc:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d1d0:	ldr	r2, [pc, #160]	; 1d278 <ASN1_STRING_length@plt+0xb304>
   1d1d4:	ldr	r3, [pc, #160]	; 1d27c <ASN1_STRING_length@plt+0xb308>
   1d1d8:	add	r2, pc, r2
   1d1dc:	str	r2, [sp, #4]
   1d1e0:	ldr	r2, [pc, #152]	; 1d280 <ASN1_STRING_length@plt+0xb30c>
   1d1e4:	add	r3, pc, r3
   1d1e8:	str	r3, [sp]
   1d1ec:	mov	r0, r8
   1d1f0:	ldr	r3, [pc, #140]	; 1d284 <ASN1_STRING_length@plt+0xb310>
   1d1f4:	add	r2, pc, r2
   1d1f8:	mov	r1, #3
   1d1fc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d200:	mvn	r4, #11
   1d204:	b	1d0ac <ASN1_STRING_length@plt+0xb138>
   1d208:	mov	r0, r8
   1d20c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d210:	cmp	r0, #2
   1d214:	ble	1d128 <ASN1_STRING_length@plt+0xb1b4>
   1d218:	ldr	r2, [pc, #104]	; 1d288 <ASN1_STRING_length@plt+0xb314>
   1d21c:	ldr	r3, [pc, #104]	; 1d28c <ASN1_STRING_length@plt+0xb318>
   1d220:	add	r2, pc, r2
   1d224:	str	r2, [sp, #4]
   1d228:	ldr	r2, [pc, #96]	; 1d290 <ASN1_STRING_length@plt+0xb31c>
   1d22c:	add	r3, pc, r3
   1d230:	str	r3, [sp]
   1d234:	mov	r0, r8
   1d238:	ldr	r3, [pc, #84]	; 1d294 <ASN1_STRING_length@plt+0xb320>
   1d23c:	add	r2, pc, r2
   1d240:	mov	r1, #3
   1d244:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d248:	b	1d128 <ASN1_STRING_length@plt+0xb1b4>
   1d24c:	bl	11d88 <__stack_chk_fail@plt>
   1d250:	andeq	r2, r2, ip, lsr lr
   1d254:	strdeq	r0, [r0], -r8
   1d258:	andeq	r0, r1, r4, asr #31
   1d25c:	andeq	r0, r1, r8, lsr #29
   1d260:	strdeq	r1, [r1], -r8
   1d264:	andeq	r0, r0, sp, asr #5
   1d268:	andeq	r0, r1, r4, ror pc
   1d26c:	andeq	r0, r1, r8, asr lr
   1d270:	andeq	r1, r1, r8, lsr #1
   1d274:	andeq	r0, r0, r9, lsr #5
   1d278:	andeq	pc, r0, r4, lsl #2
   1d27c:	andeq	r0, r1, r8, lsl lr
   1d280:	andeq	r1, r1, r8, rrx
   1d284:	andeq	r0, r0, pc, lsr #5
   1d288:	strheq	pc, [r0], -ip	; <UNPREDICTABLE>
   1d28c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1d290:	andeq	r1, r1, r0, lsr #32
   1d294:	ldrdeq	r0, [r0], -r3
   1d298:	ldr	r3, [pc, #116]	; 1d314 <ASN1_STRING_length@plt+0xb3a0>
   1d29c:	ldr	r2, [pc, #116]	; 1d318 <ASN1_STRING_length@plt+0xb3a4>
   1d2a0:	add	r3, pc, r3
   1d2a4:	push	{r4, r5, r6, r7, lr}
   1d2a8:	sub	sp, sp, #28
   1d2ac:	ldr	r7, [r3, r2]
   1d2b0:	add	r4, sp, #8
   1d2b4:	mov	r6, r1
   1d2b8:	ldr	r3, [r7]
   1d2bc:	ldr	r0, [r0, #28]
   1d2c0:	mov	r1, r4
   1d2c4:	str	r3, [sp, #20]
   1d2c8:	add	r5, sp, #4
   1d2cc:	bl	1b2a8 <ASN1_STRING_length@plt+0x9334>
   1d2d0:	b	1d2e0 <ASN1_STRING_length@plt+0xb36c>
   1d2d4:	mov	r1, r6
   1d2d8:	ldr	r0, [sp, #4]
   1d2dc:	bl	21714 <ASN1_STRING_length@plt+0xf7a0>
   1d2e0:	mov	r2, r5
   1d2e4:	mov	r1, #0
   1d2e8:	mov	r0, r4
   1d2ec:	bl	1b2b8 <ASN1_STRING_length@plt+0x9344>
   1d2f0:	cmp	r0, #0
   1d2f4:	bne	1d2d4 <ASN1_STRING_length@plt+0xb360>
   1d2f8:	ldr	r2, [sp, #20]
   1d2fc:	ldr	r3, [r7]
   1d300:	cmp	r2, r3
   1d304:	bne	1d310 <ASN1_STRING_length@plt+0xb39c>
   1d308:	add	sp, sp, #28
   1d30c:	pop	{r4, r5, r6, r7, pc}
   1d310:	bl	11d88 <__stack_chk_fail@plt>
   1d314:	andeq	r2, r2, r4, asr fp
   1d318:	strdeq	r0, [r0], -r8
   1d31c:	ldr	r3, [pc, #116]	; 1d398 <ASN1_STRING_length@plt+0xb424>
   1d320:	ldr	r2, [pc, #116]	; 1d39c <ASN1_STRING_length@plt+0xb428>
   1d324:	add	r3, pc, r3
   1d328:	push	{r4, r5, r6, r7, lr}
   1d32c:	sub	sp, sp, #28
   1d330:	ldr	r7, [r3, r2]
   1d334:	add	r4, sp, #8
   1d338:	mov	r6, r1
   1d33c:	ldr	r3, [r7]
   1d340:	ldr	r0, [r0, #28]
   1d344:	mov	r1, r4
   1d348:	str	r3, [sp, #20]
   1d34c:	add	r5, sp, #4
   1d350:	bl	1b2a8 <ASN1_STRING_length@plt+0x9334>
   1d354:	b	1d364 <ASN1_STRING_length@plt+0xb3f0>
   1d358:	mov	r1, r6
   1d35c:	ldr	r0, [sp, #4]
   1d360:	bl	21740 <ASN1_STRING_length@plt+0xf7cc>
   1d364:	mov	r2, r5
   1d368:	mov	r1, #0
   1d36c:	mov	r0, r4
   1d370:	bl	1b2b8 <ASN1_STRING_length@plt+0x9344>
   1d374:	cmp	r0, #0
   1d378:	bne	1d358 <ASN1_STRING_length@plt+0xb3e4>
   1d37c:	ldr	r2, [sp, #20]
   1d380:	ldr	r3, [r7]
   1d384:	cmp	r2, r3
   1d388:	bne	1d394 <ASN1_STRING_length@plt+0xb420>
   1d38c:	add	sp, sp, #28
   1d390:	pop	{r4, r5, r6, r7, pc}
   1d394:	bl	11d88 <__stack_chk_fail@plt>
   1d398:	ldrdeq	r2, [r2], -r0
   1d39c:	strdeq	r0, [r0], -r8
   1d3a0:	cmp	r0, #0
   1d3a4:	bxeq	lr
   1d3a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d3ac:	add	r4, r0, #32
   1d3b0:	add	r9, r0, #48	; 0x30
   1d3b4:	rsb	r5, r0, #0
   1d3b8:	mov	r8, #0
   1d3bc:	mov	r6, #0
   1d3c0:	mov	r7, #0
   1d3c4:	ldr	r3, [r4], #4
   1d3c8:	subs	r0, r3, #0
   1d3cc:	beq	1d3e4 <ASN1_STRING_length@plt+0xb470>
   1d3d0:	bl	20d48 <ASN1_STRING_length@plt+0xedd4>
   1d3d4:	lsl	r3, r4, #1
   1d3d8:	sub	r3, r3, #24
   1d3dc:	str	r8, [r4, #-4]
   1d3e0:	strd	r6, [r3, r5]
   1d3e4:	cmp	r4, r9
   1d3e8:	bne	1d3c4 <ASN1_STRING_length@plt+0xb450>
   1d3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d3f0:	push	{r4, lr}
   1d3f4:	subs	r4, r0, #0
   1d3f8:	sub	sp, sp, #16
   1d3fc:	beq	1d414 <ASN1_STRING_length@plt+0xb4a0>
   1d400:	ldr	r3, [r4]
   1d404:	sub	r3, r3, #1
   1d408:	cmp	r3, #0
   1d40c:	str	r3, [r4]
   1d410:	ble	1d420 <ASN1_STRING_length@plt+0xb4ac>
   1d414:	mov	r0, r4
   1d418:	add	sp, sp, #16
   1d41c:	pop	{r4, pc}
   1d420:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d424:	cmp	r0, #5
   1d428:	bgt	1d46c <ASN1_STRING_length@plt+0xb4f8>
   1d42c:	mov	r0, r4
   1d430:	bl	1d3a0 <ASN1_STRING_length@plt+0xb42c>
   1d434:	ldr	r0, [r4, #28]
   1d438:	bl	1aa54 <ASN1_STRING_length@plt+0x8ae0>
   1d43c:	ldr	r0, [r4, #20]
   1d440:	bl	11ba8 <free@plt>
   1d444:	ldr	r0, [r4, #24]
   1d448:	cmp	r0, #0
   1d44c:	beq	1d454 <ASN1_STRING_length@plt+0xb4e0>
   1d450:	bl	1e410 <ASN1_STRING_length@plt+0xc49c>
   1d454:	mov	r0, r4
   1d458:	bl	11ba8 <free@plt>
   1d45c:	mov	r4, #0
   1d460:	mov	r0, r4
   1d464:	add	sp, sp, #16
   1d468:	pop	{r4, pc}
   1d46c:	ldr	r2, [pc, #44]	; 1d4a0 <ASN1_STRING_length@plt+0xb52c>
   1d470:	ldr	r3, [pc, #44]	; 1d4a4 <ASN1_STRING_length@plt+0xb530>
   1d474:	add	r2, pc, r2
   1d478:	add	r3, pc, r3
   1d47c:	stmib	sp, {r2, r4}
   1d480:	ldr	r2, [pc, #32]	; 1d4a8 <ASN1_STRING_length@plt+0xb534>
   1d484:	str	r3, [sp]
   1d488:	add	r2, pc, r2
   1d48c:	ldr	r3, [pc, #24]	; 1d4ac <ASN1_STRING_length@plt+0xb538>
   1d490:	mov	r1, #6
   1d494:	mov	r0, r4
   1d498:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d49c:	b	1d42c <ASN1_STRING_length@plt+0xb4b8>
   1d4a0:	andeq	r0, r1, r8, lsr #28
   1d4a4:	andeq	r0, r1, ip, ror #20
   1d4a8:	ldrdeq	r0, [r1], -r4
   1d4ac:	andeq	r0, r0, fp, asr #2
   1d4b0:	ldr	r3, [pc, #312]	; 1d5f0 <ASN1_STRING_length@plt+0xb67c>
   1d4b4:	ldr	r2, [pc, #312]	; 1d5f4 <ASN1_STRING_length@plt+0xb680>
   1d4b8:	add	r3, pc, r3
   1d4bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d4c0:	sub	sp, sp, #4096	; 0x1000
   1d4c4:	ldr	r9, [r3, r2]
   1d4c8:	sub	sp, sp, #24
   1d4cc:	add	r2, sp, #4096	; 0x1000
   1d4d0:	add	r2, r2, #20
   1d4d4:	ldr	r3, [r9]
   1d4d8:	subs	r5, r0, #0
   1d4dc:	str	r3, [r2]
   1d4e0:	beq	1d5e4 <ASN1_STRING_length@plt+0xb670>
   1d4e4:	ldr	r6, [pc, #268]	; 1d5f8 <ASN1_STRING_length@plt+0xb684>
   1d4e8:	ldr	sl, [pc, #268]	; 1d5fc <ASN1_STRING_length@plt+0xb688>
   1d4ec:	add	r6, pc, r6
   1d4f0:	add	sl, pc, sl
   1d4f4:	add	r4, r5, #32
   1d4f8:	add	r7, r5, #48	; 0x30
   1d4fc:	add	r8, sp, #20
   1d500:	ldr	r3, [r4], #4
   1d504:	cmp	r3, #0
   1d508:	beq	1d550 <ASN1_STRING_length@plt+0xb5dc>
   1d50c:	mov	r0, r5
   1d510:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d514:	cmp	r0, #5
   1d518:	bgt	1d5a8 <ASN1_STRING_length@plt+0xb634>
   1d51c:	cmp	r4, r7
   1d520:	add	r6, r6, #8
   1d524:	bne	1d500 <ASN1_STRING_length@plt+0xb58c>
   1d528:	mov	r0, #0
   1d52c:	add	r3, sp, #4096	; 0x1000
   1d530:	add	r3, r3, #20
   1d534:	ldr	r2, [r3]
   1d538:	ldr	r3, [r9]
   1d53c:	cmp	r2, r3
   1d540:	bne	1d5ec <ASN1_STRING_length@plt+0xb678>
   1d544:	add	sp, sp, #4096	; 0x1000
   1d548:	add	sp, sp, #24
   1d54c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d550:	ldr	r2, [r6]
   1d554:	mov	r3, #4096	; 0x1000
   1d558:	str	r2, [sp, #8]
   1d55c:	ldr	r2, [r5, #20]
   1d560:	mov	r1, r3
   1d564:	str	r2, [sp, #4]
   1d568:	str	sl, [sp]
   1d56c:	mov	r2, #1
   1d570:	mov	r0, r8
   1d574:	bl	11cc8 <__snprintf_chk@plt>
   1d578:	rsb	r2, r5, r4, lsl #1
   1d57c:	sub	r2, r2, #24
   1d580:	mov	r1, r8
   1d584:	mov	r0, r5
   1d588:	bl	209ac <ASN1_STRING_length@plt+0xea38>
   1d58c:	cmp	r0, #0
   1d590:	str	r0, [r4, #-4]
   1d594:	bne	1d51c <ASN1_STRING_length@plt+0xb5a8>
   1d598:	mov	r0, r5
   1d59c:	bl	1d3a0 <ASN1_STRING_length@plt+0xb42c>
   1d5a0:	mvn	r0, #11
   1d5a4:	b	1d52c <ASN1_STRING_length@plt+0xb5b8>
   1d5a8:	ldr	r2, [pc, #80]	; 1d600 <ASN1_STRING_length@plt+0xb68c>
   1d5ac:	ldr	r3, [pc, #80]	; 1d604 <ASN1_STRING_length@plt+0xb690>
   1d5b0:	add	r2, pc, r2
   1d5b4:	ldr	r1, [r6]
   1d5b8:	str	r2, [sp, #4]
   1d5bc:	ldr	r2, [pc, #68]	; 1d608 <ASN1_STRING_length@plt+0xb694>
   1d5c0:	add	r3, pc, r3
   1d5c4:	str	r1, [sp, #8]
   1d5c8:	str	r3, [sp]
   1d5cc:	add	r2, pc, r2
   1d5d0:	ldr	r3, [pc, #52]	; 1d60c <ASN1_STRING_length@plt+0xb698>
   1d5d4:	mov	r1, #6
   1d5d8:	mov	r0, r5
   1d5dc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d5e0:	b	1d51c <ASN1_STRING_length@plt+0xb5a8>
   1d5e4:	mvn	r0, #1
   1d5e8:	b	1d52c <ASN1_STRING_length@plt+0xb5b8>
   1d5ec:	bl	11d88 <__stack_chk_fail@plt>
   1d5f0:	andeq	r2, r2, ip, lsr r9
   1d5f4:	strdeq	r0, [r0], -r8
   1d5f8:	andeq	r2, r2, r4, ror r7
   1d5fc:	andeq	r0, r1, ip, asr #23
   1d600:	andeq	r0, r1, ip, asr #21
   1d604:	andeq	r0, r1, ip, asr sl
   1d608:	muleq	r1, r0, ip
   1d60c:	andeq	r0, r0, lr, asr #6
   1d610:	ldr	r3, [pc, #432]	; 1d7c8 <ASN1_STRING_length@plt+0xb854>
   1d614:	ldr	ip, [pc, #432]	; 1d7cc <ASN1_STRING_length@plt+0xb858>
   1d618:	add	r3, pc, r3
   1d61c:	push	{r4, r5, r6, r7, r8, lr}
   1d620:	sub	sp, sp, #4096	; 0x1000
   1d624:	ldr	r5, [r3, ip]
   1d628:	sub	sp, sp, #24
   1d62c:	mov	r6, r2
   1d630:	add	r2, sp, #4096	; 0x1000
   1d634:	add	r2, r2, #20
   1d638:	ldr	r3, [r5]
   1d63c:	subs	r7, r0, #0
   1d640:	str	r3, [r2]
   1d644:	beq	1d7bc <ASN1_STRING_length@plt+0xb848>
   1d648:	cmp	r1, #3
   1d64c:	mov	r4, r1
   1d650:	bhi	1d7b4 <ASN1_STRING_length@plt+0xb840>
   1d654:	add	r8, r7, r1, lsl #2
   1d658:	ldr	r3, [r8, #32]
   1d65c:	cmp	r3, #0
   1d660:	beq	1d6f8 <ASN1_STRING_length@plt+0xb784>
   1d664:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d668:	cmp	r0, #6
   1d66c:	bgt	1d6b4 <ASN1_STRING_length@plt+0xb740>
   1d670:	ldr	r3, [pc, #344]	; 1d7d0 <ASN1_STRING_length@plt+0xb85c>
   1d674:	ldr	r0, [r8, #32]
   1d678:	add	r3, pc, r3
   1d67c:	add	r4, r3, r4, lsl #3
   1d680:	mov	r1, r6
   1d684:	ldr	r2, [r4, #4]
   1d688:	bl	20d68 <ASN1_STRING_length@plt+0xedf4>
   1d68c:	mov	r0, #0
   1d690:	add	r3, sp, #4096	; 0x1000
   1d694:	add	r3, r3, #20
   1d698:	ldr	r2, [r3]
   1d69c:	ldr	r3, [r5]
   1d6a0:	cmp	r2, r3
   1d6a4:	bne	1d7c4 <ASN1_STRING_length@plt+0xb850>
   1d6a8:	add	sp, sp, #4096	; 0x1000
   1d6ac:	add	sp, sp, #24
   1d6b0:	pop	{r4, r5, r6, r7, r8, pc}
   1d6b4:	ldr	r1, [pc, #280]	; 1d7d4 <ASN1_STRING_length@plt+0xb860>
   1d6b8:	ldr	r2, [pc, #280]	; 1d7d8 <ASN1_STRING_length@plt+0xb864>
   1d6bc:	add	r1, pc, r1
   1d6c0:	add	r2, pc, r2
   1d6c4:	ldr	r3, [pc, #272]	; 1d7dc <ASN1_STRING_length@plt+0xb868>
   1d6c8:	ldr	r1, [r1, r4, lsl #3]
   1d6cc:	str	r2, [sp, #4]
   1d6d0:	ldr	r2, [pc, #264]	; 1d7e0 <ASN1_STRING_length@plt+0xb86c>
   1d6d4:	add	r3, pc, r3
   1d6d8:	str	r1, [sp, #8]
   1d6dc:	str	r3, [sp]
   1d6e0:	mov	r0, r7
   1d6e4:	ldr	r3, [pc, #248]	; 1d7e4 <ASN1_STRING_length@plt+0xb870>
   1d6e8:	add	r2, pc, r2
   1d6ec:	mov	r1, #7
   1d6f0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d6f4:	b	1d670 <ASN1_STRING_length@plt+0xb6fc>
   1d6f8:	ldr	r3, [pc, #232]	; 1d7e8 <ASN1_STRING_length@plt+0xb874>
   1d6fc:	ldr	r2, [pc, #232]	; 1d7ec <ASN1_STRING_length@plt+0xb878>
   1d700:	add	r3, pc, r3
   1d704:	add	r2, pc, r2
   1d708:	ldr	r1, [r3, r1, lsl #3]
   1d70c:	add	r8, sp, #20
   1d710:	str	r1, [sp, #8]
   1d714:	ldr	r1, [r7, #20]
   1d718:	mov	r3, #4096	; 0x1000
   1d71c:	str	r1, [sp, #4]
   1d720:	str	r2, [sp]
   1d724:	mov	r1, r3
   1d728:	mov	r2, #1
   1d72c:	mov	r0, r8
   1d730:	bl	11cc8 <__snprintf_chk@plt>
   1d734:	mov	r0, r7
   1d738:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1d73c:	cmp	r0, #6
   1d740:	bgt	1d77c <ASN1_STRING_length@plt+0xb808>
   1d744:	mov	r0, r8
   1d748:	bl	204a4 <ASN1_STRING_length@plt+0xe530>
   1d74c:	subs	r7, r0, #0
   1d750:	beq	1d7bc <ASN1_STRING_length@plt+0xb848>
   1d754:	ldr	r3, [pc, #148]	; 1d7f0 <ASN1_STRING_length@plt+0xb87c>
   1d758:	mov	r1, r6
   1d75c:	add	r3, pc, r3
   1d760:	add	r4, r3, r4, lsl #3
   1d764:	ldr	r2, [r4, #4]
   1d768:	bl	2055c <ASN1_STRING_length@plt+0xe5e8>
   1d76c:	mov	r0, r7
   1d770:	bl	20540 <ASN1_STRING_length@plt+0xe5cc>
   1d774:	mov	r0, #0
   1d778:	b	1d690 <ASN1_STRING_length@plt+0xb71c>
   1d77c:	ldr	r2, [pc, #112]	; 1d7f4 <ASN1_STRING_length@plt+0xb880>
   1d780:	ldr	r3, [pc, #112]	; 1d7f8 <ASN1_STRING_length@plt+0xb884>
   1d784:	add	r2, pc, r2
   1d788:	str	r2, [sp, #4]
   1d78c:	ldr	r2, [pc, #104]	; 1d7fc <ASN1_STRING_length@plt+0xb888>
   1d790:	add	r3, pc, r3
   1d794:	str	r3, [sp]
   1d798:	str	r8, [sp, #8]
   1d79c:	mov	r0, r7
   1d7a0:	mov	r3, #932	; 0x3a4
   1d7a4:	add	r2, pc, r2
   1d7a8:	mov	r1, #7
   1d7ac:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1d7b0:	b	1d744 <ASN1_STRING_length@plt+0xb7d0>
   1d7b4:	mvn	r0, #1
   1d7b8:	b	1d690 <ASN1_STRING_length@plt+0xb71c>
   1d7bc:	mvn	r0, #37	; 0x25
   1d7c0:	b	1d690 <ASN1_STRING_length@plt+0xb71c>
   1d7c4:	bl	11d88 <__stack_chk_fail@plt>
   1d7c8:	ldrdeq	r2, [r2], -ip
   1d7cc:	strdeq	r0, [r0], -r8
   1d7d0:	andeq	r2, r2, r8, ror #11
   1d7d4:	andeq	r2, r2, r4, lsr #11
   1d7d8:	muleq	r1, r8, r9
   1d7dc:	andeq	r0, r1, ip, asr r9
   1d7e0:	andeq	r0, r1, r4, ror fp
   1d7e4:	muleq	r0, sl, r3
   1d7e8:	andeq	r2, r2, r0, ror #10
   1d7ec:			; <UNDEFINED> instruction: 0x000109b8
   1d7f0:	andeq	r2, r2, r4, lsl #10
   1d7f4:	andeq	r0, r1, ip, ror #17
   1d7f8:	andeq	r0, r1, r0, lsr #17
   1d7fc:			; <UNDEFINED> instruction: 0x00010ab8
   1d800:	ldr	r0, [r0, #24]
   1d804:	bx	lr
   1d808:	push	{r4, r5, r6, lr}
   1d80c:	mov	r4, r0
   1d810:	mov	r0, #12
   1d814:	mov	r5, r1
   1d818:	bl	11d64 <malloc@plt>
   1d81c:	cmp	r0, #0
   1d820:	popeq	{r4, r5, r6, pc}
   1d824:	cmp	r4, #0
   1d828:	str	r5, [r0, #8]
   1d82c:	ldrne	r3, [r4, #4]
   1d830:	streq	r0, [r0]
   1d834:	strne	r3, [r0, #4]
   1d838:	streq	r0, [r0, #4]
   1d83c:	strne	r0, [r3]
   1d840:	strne	r0, [r4, #4]
   1d844:	strne	r4, [r0]
   1d848:	movne	r0, r4
   1d84c:	pop	{r4, r5, r6, pc}
   1d850:	push	{r4, r5, r6, lr}
   1d854:	subs	r4, r0, #0
   1d858:	beq	1d88c <ASN1_STRING_length@plt+0xb918>
   1d85c:	mov	r0, #12
   1d860:	mov	r5, r1
   1d864:	bl	11d64 <malloc@plt>
   1d868:	cmp	r0, #0
   1d86c:	popeq	{r4, r5, r6, pc}
   1d870:	ldr	r3, [r4, #4]
   1d874:	str	r5, [r0, #8]
   1d878:	str	r4, [r0]
   1d87c:	str	r3, [r0, #4]
   1d880:	str	r0, [r3]
   1d884:	str	r0, [r4, #4]
   1d888:	pop	{r4, r5, r6, pc}
   1d88c:	pop	{r4, r5, r6, lr}
   1d890:	b	1d808 <ASN1_STRING_length@plt+0xb894>
   1d894:	subs	r3, r0, #0
   1d898:	beq	1d8c4 <ASN1_STRING_length@plt+0xb950>
   1d89c:	cmp	r1, #0
   1d8a0:	beq	1d8cc <ASN1_STRING_length@plt+0xb958>
   1d8a4:	ldr	r2, [r3, #4]
   1d8a8:	ldr	ip, [r1, #4]
   1d8ac:	mov	r0, r3
   1d8b0:	str	r1, [r2]
   1d8b4:	str	r3, [ip]
   1d8b8:	str	ip, [r3, #4]
   1d8bc:	str	r2, [r1, #4]
   1d8c0:	bx	lr
   1d8c4:	mov	r0, r1
   1d8c8:	bx	lr
   1d8cc:	mov	r0, r3
   1d8d0:	bx	lr
   1d8d4:	push	{r4, r5, r6, lr}
   1d8d8:	mov	r4, r0
   1d8dc:	mov	r0, #12
   1d8e0:	mov	r5, r1
   1d8e4:	bl	11d64 <malloc@plt>
   1d8e8:	cmp	r0, #0
   1d8ec:	popeq	{r4, r5, r6, pc}
   1d8f0:	cmp	r4, #0
   1d8f4:	str	r5, [r0, #8]
   1d8f8:	ldrne	r3, [r4, #4]
   1d8fc:	streq	r0, [r0]
   1d900:	strne	r3, [r0, #4]
   1d904:	streq	r0, [r0, #4]
   1d908:	strne	r0, [r3]
   1d90c:	strne	r0, [r4, #4]
   1d910:	strne	r4, [r0]
   1d914:	pop	{r4, r5, r6, pc}
   1d918:	subs	r3, r0, #0
   1d91c:	push	{r4, lr}
   1d920:	beq	1d964 <ASN1_STRING_length@plt+0xb9f0>
   1d924:	ldr	r2, [r3, #4]
   1d928:	cmp	r3, r2
   1d92c:	beq	1d950 <ASN1_STRING_length@plt+0xb9dc>
   1d930:	ldr	r4, [r3]
   1d934:	cmp	r3, r4
   1d938:	beq	1d950 <ASN1_STRING_length@plt+0xb9dc>
   1d93c:	str	r4, [r2]
   1d940:	str	r2, [r4, #4]
   1d944:	bl	11ba8 <free@plt>
   1d948:	mov	r0, r4
   1d94c:	pop	{r4, pc}
   1d950:	mov	r0, r3
   1d954:	mov	r4, #0
   1d958:	bl	11ba8 <free@plt>
   1d95c:	mov	r0, r4
   1d960:	pop	{r4, pc}
   1d964:	mov	r4, r3
   1d968:	b	1d948 <ASN1_STRING_length@plt+0xb9d4>
   1d96c:	sub	r3, r1, r0
   1d970:	cmp	r0, #0
   1d974:	clz	r3, r3
   1d978:	lsr	r3, r3, #5
   1d97c:	moveq	r0, #1
   1d980:	movne	r0, r3
   1d984:	cmp	r1, #0
   1d988:	moveq	r0, #1
   1d98c:	cmp	r0, #0
   1d990:	ldreq	r0, [r1, #4]
   1d994:	movne	r0, #0
   1d998:	bx	lr
   1d99c:	cmp	r1, #0
   1d9a0:	cmpne	r0, #0
   1d9a4:	moveq	r3, #0
   1d9a8:	beq	1d9b8 <ASN1_STRING_length@plt+0xba44>
   1d9ac:	ldr	r3, [r1]
   1d9b0:	cmp	r3, r0
   1d9b4:	moveq	r3, #0
   1d9b8:	mov	r0, r3
   1d9bc:	bx	lr
   1d9c0:	push	{r4, r5, r6, lr}
   1d9c4:	subs	r4, r0, #0
   1d9c8:	beq	1da00 <ASN1_STRING_length@plt+0xba8c>
   1d9cc:	ldr	r3, [r4, #8]
   1d9d0:	mov	r5, r1
   1d9d4:	cmp	r5, r3
   1d9d8:	mov	r1, r4
   1d9dc:	bne	1d9f0 <ASN1_STRING_length@plt+0xba7c>
   1d9e0:	b	1da08 <ASN1_STRING_length@plt+0xba94>
   1d9e4:	ldr	r3, [r1, #8]
   1d9e8:	cmp	r3, r5
   1d9ec:	beq	1da08 <ASN1_STRING_length@plt+0xba94>
   1d9f0:	mov	r0, r4
   1d9f4:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   1d9f8:	subs	r1, r0, #0
   1d9fc:	bne	1d9e4 <ASN1_STRING_length@plt+0xba70>
   1da00:	mov	r0, r4
   1da04:	pop	{r4, r5, r6, pc}
   1da08:	ldr	r3, [r1, #4]
   1da0c:	cmp	r1, r3
   1da10:	beq	1da38 <ASN1_STRING_length@plt+0xbac4>
   1da14:	ldr	r4, [r1]
   1da18:	cmp	r1, r4
   1da1c:	beq	1da48 <ASN1_STRING_length@plt+0xbad4>
   1da20:	str	r4, [r3]
   1da24:	mov	r0, r1
   1da28:	str	r3, [r4, #4]
   1da2c:	bl	11ba8 <free@plt>
   1da30:	mov	r0, r4
   1da34:	pop	{r4, r5, r6, pc}
   1da38:	mov	r0, r1
   1da3c:	bl	11ba8 <free@plt>
   1da40:	mov	r4, #0
   1da44:	b	1da00 <ASN1_STRING_length@plt+0xba8c>
   1da48:	mov	r0, r4
   1da4c:	bl	11ba8 <free@plt>
   1da50:	mov	r4, #0
   1da54:	b	1da00 <ASN1_STRING_length@plt+0xba8c>
   1da58:	cmp	r0, #0
   1da5c:	ldrne	r0, [r0, #4]
   1da60:	bx	lr
   1da64:	push	{r4, r5, r6, lr}
   1da68:	subs	r5, r1, #0
   1da6c:	popeq	{r4, r5, r6, pc}
   1da70:	mov	r4, #0
   1da74:	bl	1da58 <ASN1_STRING_length@plt+0xbae4>
   1da78:	add	r4, r4, #1
   1da7c:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1da80:	cmp	r5, r4
   1da84:	bne	1da74 <ASN1_STRING_length@plt+0xbb00>
   1da88:	pop	{r4, r5, r6, pc}
   1da8c:	ldr	r0, [r0, #8]
   1da90:	bx	lr
   1da94:	ldr	r3, [r0, #8]
   1da98:	ldr	r0, [r3]
   1da9c:	bx	lr
   1daa0:	ldr	r0, [r0, #8]
   1daa4:	add	r0, r0, #4
   1daa8:	bx	lr
   1daac:	ldr	r3, [r0, #8]
   1dab0:	ldr	r0, [r3]
   1dab4:	bx	lr
   1dab8:	ldr	r0, [r0, #8]
   1dabc:	add	r0, r0, #4
   1dac0:	bx	lr
   1dac4:	ldr	r3, [r0, #8]
   1dac8:	ldr	r0, [r3]
   1dacc:	bx	lr
   1dad0:	ldr	r0, [r0, #8]
   1dad4:	add	r0, r0, #4
   1dad8:	bx	lr
   1dadc:	ldr	r3, [r0, #8]
   1dae0:	ldr	r0, [r3]
   1dae4:	bx	lr
   1dae8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1daec:	ldr	r8, [r0, #8]
   1daf0:	ldr	r5, [r8, #12]
   1daf4:	cmp	r5, #0
   1daf8:	moveq	r6, #1
   1dafc:	beq	1db24 <ASN1_STRING_length@plt+0xbbb0>
   1db00:	ldr	r4, [r8, #4]
   1db04:	sub	r5, r5, #-1073741823	; 0xc0000001
   1db08:	ldr	r5, [r4, r5, lsl #2]
   1db0c:	mov	r0, r5
   1db10:	bl	11c44 <strlen@plt>
   1db14:	ldr	r3, [r4]
   1db18:	add	r5, r5, r0
   1db1c:	sub	r5, r5, r3
   1db20:	add	r6, r5, #6
   1db24:	ldr	r4, [r8, #16]
   1db28:	cmp	r4, #0
   1db2c:	beq	1db58 <ASN1_STRING_length@plt+0xbbe4>
   1db30:	ldr	r7, [r8, #8]
   1db34:	sub	r4, r4, #-1073741823	; 0xc0000001
   1db38:	add	r6, r6, #6
   1db3c:	ldr	r4, [r7, r4, lsl #2]
   1db40:	mov	r0, r4
   1db44:	bl	11c44 <strlen@plt>
   1db48:	ldr	r3, [r7]
   1db4c:	add	r4, r4, r0
   1db50:	sub	r4, r4, r3
   1db54:	add	r6, r4, r6
   1db58:	mov	r0, r6
   1db5c:	bl	11d64 <malloc@plt>
   1db60:	subs	r6, r0, #0
   1db64:	beq	1db84 <ASN1_STRING_length@plt+0xbc10>
   1db68:	cmp	r5, #0
   1db6c:	moveq	r7, r6
   1db70:	bne	1db8c <ASN1_STRING_length@plt+0xbc18>
   1db74:	cmp	r4, #0
   1db78:	bne	1dbfc <ASN1_STRING_length@plt+0xbc88>
   1db7c:	mov	r3, #0
   1db80:	strb	r3, [r7]
   1db84:	mov	r0, r6
   1db88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1db8c:	ldr	r3, [pc, #220]	; 1dc70 <ASN1_STRING_length@plt+0xbcfc>
   1db90:	mov	r9, r6
   1db94:	add	r3, pc, r3
   1db98:	add	r7, r6, #5
   1db9c:	ldm	r3, {r0, r1}
   1dba0:	add	r2, r5, #1
   1dba4:	add	r5, r7, r5
   1dba8:	str	r0, [r9], #4
   1dbac:	strb	r1, [r6, #4]
   1dbb0:	ldr	r3, [r8, #4]
   1dbb4:	mov	r0, r7
   1dbb8:	ldr	r1, [r3]
   1dbbc:	bl	11c5c <memcpy@plt>
   1dbc0:	cmp	r7, r5
   1dbc4:	bcs	1db74 <ASN1_STRING_length@plt+0xbc00>
   1dbc8:	mov	r3, r9
   1dbcc:	sub	r0, r5, #1
   1dbd0:	mov	r1, #32
   1dbd4:	ldrb	r2, [r3, #1]!
   1dbd8:	cmp	r2, #0
   1dbdc:	strbeq	r1, [r3]
   1dbe0:	cmp	r3, r0
   1dbe4:	bne	1dbd4 <ASN1_STRING_length@plt+0xbc60>
   1dbe8:	sub	r5, r5, r6
   1dbec:	sub	r5, r5, #5
   1dbf0:	cmp	r4, #0
   1dbf4:	add	r7, r7, r5
   1dbf8:	beq	1db7c <ASN1_STRING_length@plt+0xbc08>
   1dbfc:	ldr	r3, [pc, #112]	; 1dc74 <ASN1_STRING_length@plt+0xbd00>
   1dc00:	add	r5, r7, #6
   1dc04:	add	r3, pc, r3
   1dc08:	add	r2, r4, #1
   1dc0c:	ldrh	r1, [r3, #4]
   1dc10:	ldr	r0, [r3]
   1dc14:	add	r4, r5, r4
   1dc18:	str	r0, [r7]
   1dc1c:	strh	r1, [r7, #4]
   1dc20:	ldr	r3, [r8, #8]
   1dc24:	mov	r0, r5
   1dc28:	ldr	r1, [r3]
   1dc2c:	bl	11c5c <memcpy@plt>
   1dc30:	cmp	r4, r5
   1dc34:	bls	1dc68 <ASN1_STRING_length@plt+0xbcf4>
   1dc38:	add	r3, r7, #5
   1dc3c:	sub	r0, r4, #1
   1dc40:	mov	r1, #32
   1dc44:	ldrb	r2, [r3, #1]!
   1dc48:	cmp	r2, #0
   1dc4c:	strbeq	r1, [r3]
   1dc50:	cmp	r0, r3
   1dc54:	bne	1dc44 <ASN1_STRING_length@plt+0xbcd0>
   1dc58:	sub	r4, r4, r7
   1dc5c:	sub	r4, r4, #6
   1dc60:	add	r7, r5, r4
   1dc64:	b	1db7c <ASN1_STRING_length@plt+0xbc08>
   1dc68:	mov	r7, r5
   1dc6c:	b	1db7c <ASN1_STRING_length@plt+0xbc08>
   1dc70:	andeq	r0, r1, ip, ror fp
   1dc74:	andeq	r0, r1, r4, lsl fp
   1dc78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dc7c:	subs	r6, r3, #0
   1dc80:	sub	sp, sp, #24
   1dc84:	mov	r7, r0
   1dc88:	mov	r8, r1
   1dc8c:	mov	r9, r2
   1dc90:	movne	sl, #0
   1dc94:	beq	1dcfc <ASN1_STRING_length@plt+0xbd88>
   1dc98:	ldr	r5, [r8]
   1dc9c:	cmp	r5, #0
   1dca0:	beq	1dcd4 <ASN1_STRING_length@plt+0xbd60>
   1dca4:	mov	r4, r5
   1dca8:	ldr	r1, [r4, #8]
   1dcac:	mov	r0, r6
   1dcb0:	add	r1, r1, #5
   1dcb4:	bl	11f14 <strcmp@plt>
   1dcb8:	cmp	r0, #0
   1dcbc:	ble	1dd58 <ASN1_STRING_length@plt+0xbde4>
   1dcc0:	ldr	r4, [r4]
   1dcc4:	cmp	r4, r5
   1dcc8:	beq	1dcd4 <ASN1_STRING_length@plt+0xbd60>
   1dccc:	cmp	r4, #0
   1dcd0:	bne	1dca8 <ASN1_STRING_length@plt+0xbd34>
   1dcd4:	mov	r0, r6
   1dcd8:	bl	11c44 <strlen@plt>
   1dcdc:	mov	r4, r0
   1dce0:	add	r0, r0, #9
   1dce4:	bl	11d64 <malloc@plt>
   1dce8:	subs	r7, r0, #0
   1dcec:	bne	1dd10 <ASN1_STRING_length@plt+0xbd9c>
   1dcf0:	mvn	r0, #11
   1dcf4:	add	sp, sp, #24
   1dcf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dcfc:	mov	r0, r2
   1dd00:	bl	11f44 <basename@plt>
   1dd04:	mov	sl, #1
   1dd08:	mov	r6, r0
   1dd0c:	b	1dc98 <ASN1_STRING_length@plt+0xbd24>
   1dd10:	add	r2, r4, #1
   1dd14:	mov	r1, r6
   1dd18:	add	r0, r7, #5
   1dd1c:	bl	11c5c <memcpy@plt>
   1dd20:	str	r9, [r7]
   1dd24:	strb	sl, [r7, #4]
   1dd28:	mov	r0, r5
   1dd2c:	mov	r1, r7
   1dd30:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1dd34:	cmp	r0, #0
   1dd38:	beq	1dd4c <ASN1_STRING_length@plt+0xbdd8>
   1dd3c:	str	r0, [r8]
   1dd40:	mov	r0, #0
   1dd44:	add	sp, sp, #24
   1dd48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dd4c:	mov	r0, r7
   1dd50:	bl	11ba8 <free@plt>
   1dd54:	b	1dcf0 <ASN1_STRING_length@plt+0xbd7c>
   1dd58:	bne	1ddb0 <ASN1_STRING_length@plt+0xbe3c>
   1dd5c:	mov	r0, r7
   1dd60:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1dd64:	cmp	r0, #6
   1dd68:	mvnle	r0, #16
   1dd6c:	ble	1dcf4 <ASN1_STRING_length@plt+0xbd80>
   1dd70:	ldr	r2, [pc, #184]	; 1de30 <ASN1_STRING_length@plt+0xbebc>
   1dd74:	ldr	r3, [pc, #184]	; 1de34 <ASN1_STRING_length@plt+0xbec0>
   1dd78:	add	r2, pc, r2
   1dd7c:	str	r2, [sp, #4]
   1dd80:	ldr	r2, [pc, #176]	; 1de38 <ASN1_STRING_length@plt+0xbec4>
   1dd84:	add	r3, pc, r3
   1dd88:	mov	r0, r7
   1dd8c:	str	r3, [sp]
   1dd90:	str	r6, [sp, #12]
   1dd94:	str	r9, [sp, #8]
   1dd98:	ldr	r3, [pc, #156]	; 1de3c <ASN1_STRING_length@plt+0xbec8>
   1dd9c:	add	r2, pc, r2
   1dda0:	mov	r1, #7
   1dda4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1dda8:	mvn	r0, #16
   1ddac:	b	1dcf4 <ASN1_STRING_length@plt+0xbd80>
   1ddb0:	mov	r0, r6
   1ddb4:	bl	11c44 <strlen@plt>
   1ddb8:	mov	r2, r0
   1ddbc:	add	r0, r0, #9
   1ddc0:	str	r2, [sp, #20]
   1ddc4:	bl	11d64 <malloc@plt>
   1ddc8:	ldr	r2, [sp, #20]
   1ddcc:	subs	r7, r0, #0
   1ddd0:	beq	1dcf0 <ASN1_STRING_length@plt+0xbd7c>
   1ddd4:	add	r2, r2, #1
   1ddd8:	mov	r1, r6
   1dddc:	add	r0, r7, #5
   1dde0:	bl	11c5c <memcpy@plt>
   1dde4:	cmp	r4, r5
   1dde8:	str	r9, [r7]
   1ddec:	strb	sl, [r7, #4]
   1ddf0:	beq	1de20 <ASN1_STRING_length@plt+0xbeac>
   1ddf4:	mov	r1, r7
   1ddf8:	mov	r0, r4
   1ddfc:	bl	1d850 <ASN1_STRING_length@plt+0xb8dc>
   1de00:	cmp	r0, #0
   1de04:	beq	1dd4c <ASN1_STRING_length@plt+0xbdd8>
   1de08:	ldr	r3, [r8]
   1de0c:	cmp	r3, r4
   1de10:	movne	r0, #0
   1de14:	beq	1dd3c <ASN1_STRING_length@plt+0xbdc8>
   1de18:	add	sp, sp, #24
   1de1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1de20:	mov	r1, r7
   1de24:	mov	r0, r4
   1de28:	bl	1d8d4 <ASN1_STRING_length@plt+0xb960>
   1de2c:	b	1de00 <ASN1_STRING_length@plt+0xbe8c>
   1de30:	andeq	r0, r1, r8, asr #14
   1de34:	andeq	r0, r1, r4, ror #13
   1de38:	andeq	r0, r1, r8, lsl #14
   1de3c:	strdeq	r0, [r0], -r1
   1de40:	push	{r4, r5, r6, lr}
   1de44:	mov	r6, r0
   1de48:	mov	r5, r1
   1de4c:	mov	r0, #1
   1de50:	mov	r1, #28
   1de54:	bl	11ae8 <calloc@plt>
   1de58:	mov	r4, r0
   1de5c:	mov	r0, r6
   1de60:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   1de64:	cmp	r4, #0
   1de68:	beq	1deb8 <ASN1_STRING_length@plt+0xbf44>
   1de6c:	sub	r3, r5, #1
   1de70:	str	r5, [r4]
   1de74:	cmp	r3, #4
   1de78:	addls	pc, pc, r3, lsl #2
   1de7c:	b	1df50 <ASN1_STRING_length@plt+0xbfdc>
   1de80:	b	1dee4 <ASN1_STRING_length@plt+0xbf70>
   1de84:	b	1df08 <ASN1_STRING_length@plt+0xbf94>
   1de88:	b	1df2c <ASN1_STRING_length@plt+0xbfb8>
   1de8c:	b	1dec0 <ASN1_STRING_length@plt+0xbf4c>
   1de90:	b	1de94 <ASN1_STRING_length@plt+0xbf20>
   1de94:	ldr	r2, [pc, #204]	; 1df68 <ASN1_STRING_length@plt+0xbff4>
   1de98:	ldr	r3, [pc, #204]	; 1df6c <ASN1_STRING_length@plt+0xbff8>
   1de9c:	ldr	r0, [r0, #24]
   1dea0:	add	r2, pc, r2
   1dea4:	add	r3, pc, r3
   1dea8:	mov	r1, #1
   1deac:	str	r0, [r4, #8]
   1deb0:	strd	r2, [r4, #20]
   1deb4:	strb	r1, [r4, #4]
   1deb8:	mov	r0, r4
   1debc:	pop	{r4, r5, r6, pc}
   1dec0:	ldr	r2, [pc, #168]	; 1df70 <ASN1_STRING_length@plt+0xbffc>
   1dec4:	ldr	r3, [pc, #168]	; 1df74 <ASN1_STRING_length@plt+0xc000>
   1dec8:	ldr	r1, [r0, #12]
   1decc:	add	r2, pc, r2
   1ded0:	add	r3, pc, r3
   1ded4:	str	r1, [r4, #8]
   1ded8:	strd	r2, [r4, #20]
   1dedc:	mov	r0, r4
   1dee0:	pop	{r4, r5, r6, pc}
   1dee4:	ldr	r2, [pc, #140]	; 1df78 <ASN1_STRING_length@plt+0xc004>
   1dee8:	ldr	r3, [pc, #140]	; 1df7c <ASN1_STRING_length@plt+0xc008>
   1deec:	ldr	r1, [r0, #20]
   1def0:	add	r2, pc, r2
   1def4:	add	r3, pc, r3
   1def8:	str	r1, [r4, #8]
   1defc:	strd	r2, [r4, #20]
   1df00:	mov	r0, r4
   1df04:	pop	{r4, r5, r6, pc}
   1df08:	ldr	r2, [pc, #112]	; 1df80 <ASN1_STRING_length@plt+0xc00c>
   1df0c:	ldr	r3, [pc, #112]	; 1df84 <ASN1_STRING_length@plt+0xc010>
   1df10:	ldr	r1, [r0, #16]
   1df14:	add	r2, pc, r2
   1df18:	add	r3, pc, r3
   1df1c:	str	r1, [r4, #8]
   1df20:	strd	r2, [r4, #20]
   1df24:	mov	r0, r4
   1df28:	pop	{r4, r5, r6, pc}
   1df2c:	ldr	r2, [pc, #84]	; 1df88 <ASN1_STRING_length@plt+0xc014>
   1df30:	ldr	r3, [pc, #84]	; 1df8c <ASN1_STRING_length@plt+0xc018>
   1df34:	ldr	r1, [r0, #4]
   1df38:	add	r2, pc, r2
   1df3c:	add	r3, pc, r3
   1df40:	str	r1, [r4, #8]
   1df44:	strd	r2, [r4, #20]
   1df48:	mov	r0, r4
   1df4c:	pop	{r4, r5, r6, pc}
   1df50:	ldr	r3, [pc, #56]	; 1df90 <ASN1_STRING_length@plt+0xc01c>
   1df54:	ldr	r2, [r0, #8]
   1df58:	add	r3, pc, r3
   1df5c:	str	r2, [r4, #8]
   1df60:	str	r3, [r4, #20]
   1df64:	b	1deb8 <ASN1_STRING_length@plt+0xbf44>
   1df68:			; <UNDEFINED> instruction: 0xfffffc34
   1df6c:			; <UNDEFINED> instruction: 0xfffffc3c
   1df70:			; <UNDEFINED> instruction: 0xfffffbe4
   1df74:			; <UNDEFINED> instruction: 0xfffffbd4
   1df78:			; <UNDEFINED> instruction: 0xfffffbd8
   1df7c:			; <UNDEFINED> instruction: 0xfffffbc8
   1df80:			; <UNDEFINED> instruction: 0xfffffbb4
   1df84:			; <UNDEFINED> instruction: 0xfffffba4
   1df88:			; <UNDEFINED> instruction: 0xfffffb54
   1df8c:			; <UNDEFINED> instruction: 0xfffffb5c
   1df90:			; <UNDEFINED> instruction: 0xfffffb2c
   1df94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df98:	mov	sl, r0
   1df9c:	sub	sp, sp, #28
   1dfa0:	mov	r0, r1
   1dfa4:	mov	r5, r2
   1dfa8:	mov	r6, r1
   1dfac:	mov	fp, r3
   1dfb0:	bl	11c44 <strlen@plt>
   1dfb4:	mov	r4, r0
   1dfb8:	mov	r0, r5
   1dfbc:	bl	11c44 <strlen@plt>
   1dfc0:	ldr	r9, [sp, #64]	; 0x40
   1dfc4:	add	r8, r4, #1
   1dfc8:	add	r7, r0, #1
   1dfcc:	ldr	r0, [sl]
   1dfd0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1dfd4:	cmp	r0, #6
   1dfd8:	bgt	1e050 <ASN1_STRING_length@plt+0xc0dc>
   1dfdc:	add	r0, r8, r7
   1dfe0:	add	r0, r0, #4
   1dfe4:	bl	11d64 <malloc@plt>
   1dfe8:	subs	sl, r0, #0
   1dfec:	beq	1e090 <ASN1_STRING_length@plt+0xc11c>
   1dff0:	mov	r0, sl
   1dff4:	add	r4, r4, #5
   1dff8:	add	r4, sl, r4
   1dffc:	mov	r2, r8
   1e000:	mov	r1, r6
   1e004:	str	r4, [r0], #4
   1e008:	bl	11c5c <memcpy@plt>
   1e00c:	mov	r2, r7
   1e010:	mov	r1, r5
   1e014:	mov	r0, r4
   1e018:	bl	11c5c <memcpy@plt>
   1e01c:	mov	r1, sl
   1e020:	ldr	r0, [r9]
   1e024:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1e028:	cmp	r0, #0
   1e02c:	beq	1e090 <ASN1_STRING_length@plt+0xc11c>
   1e030:	mov	sl, #0
   1e034:	mov	r4, sl
   1e038:	str	r0, [r9]
   1e03c:	mov	r0, sl
   1e040:	bl	11ba8 <free@plt>
   1e044:	mov	r0, r4
   1e048:	add	sp, sp, #28
   1e04c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e050:	ldr	r2, [pc, #64]	; 1e098 <ASN1_STRING_length@plt+0xc124>
   1e054:	ldr	r3, [pc, #64]	; 1e09c <ASN1_STRING_length@plt+0xc128>
   1e058:	add	r2, pc, r2
   1e05c:	str	r5, [sp, #16]
   1e060:	str	fp, [sp, #12]
   1e064:	str	r6, [sp, #8]
   1e068:	ldr	r0, [sl]
   1e06c:	str	r2, [sp, #4]
   1e070:	ldr	r2, [pc, #40]	; 1e0a0 <ASN1_STRING_length@plt+0xc12c>
   1e074:	add	r3, pc, r3
   1e078:	str	r3, [sp]
   1e07c:	add	r2, pc, r2
   1e080:	mov	r3, #125	; 0x7d
   1e084:	mov	r1, #7
   1e088:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e08c:	b	1dfdc <ASN1_STRING_length@plt+0xc068>
   1e090:	mvn	r4, #11
   1e094:	b	1e03c <ASN1_STRING_length@plt+0xc0c8>
   1e098:	andeq	r0, r1, ip, ror #9
   1e09c:	andeq	r0, r1, r8, lsl r3
   1e0a0:	andeq	r0, r1, r8, lsr #8
   1e0a4:	push	{r4, r5, r6, lr}
   1e0a8:	mov	r6, r0
   1e0ac:	sub	sp, sp, #16
   1e0b0:	ldr	r0, [r0]
   1e0b4:	mov	r5, r1
   1e0b8:	mov	r4, r2
   1e0bc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e0c0:	cmp	r0, #6
   1e0c4:	bgt	1e10c <ASN1_STRING_length@plt+0xc198>
   1e0c8:	mov	r0, r4
   1e0cc:	bl	11d4c <strdup@plt>
   1e0d0:	subs	r4, r0, #0
   1e0d4:	beq	1e144 <ASN1_STRING_length@plt+0xc1d0>
   1e0d8:	mov	r1, r4
   1e0dc:	ldr	r0, [r5]
   1e0e0:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1e0e4:	cmp	r0, #0
   1e0e8:	beq	1e144 <ASN1_STRING_length@plt+0xc1d0>
   1e0ec:	mov	r4, #0
   1e0f0:	str	r0, [r5]
   1e0f4:	mov	r5, r4
   1e0f8:	mov	r0, r4
   1e0fc:	bl	11ba8 <free@plt>
   1e100:	mov	r0, r5
   1e104:	add	sp, sp, #16
   1e108:	pop	{r4, r5, r6, pc}
   1e10c:	ldr	r2, [pc, #56]	; 1e14c <ASN1_STRING_length@plt+0xc1d8>
   1e110:	ldr	r3, [pc, #56]	; 1e150 <ASN1_STRING_length@plt+0xc1dc>
   1e114:	add	r2, pc, r2
   1e118:	str	r4, [sp, #8]
   1e11c:	ldr	r0, [r6]
   1e120:	str	r2, [sp, #4]
   1e124:	ldr	r2, [pc, #40]	; 1e154 <ASN1_STRING_length@plt+0xc1e0>
   1e128:	add	r3, pc, r3
   1e12c:	str	r3, [sp]
   1e130:	add	r2, pc, r2
   1e134:	mov	r3, #236	; 0xec
   1e138:	mov	r1, #7
   1e13c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e140:	b	1e0c8 <ASN1_STRING_length@plt+0xc154>
   1e144:	mvn	r5, #11
   1e148:	b	1e0f8 <ASN1_STRING_length@plt+0xc184>
   1e14c:	andeq	r0, r1, r8, ror #3
   1e150:	andeq	r0, r1, ip, lsr #5
   1e154:	andeq	r0, r1, r4, ror r3
   1e158:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e15c:	mov	sl, r0
   1e160:	sub	sp, sp, #16
   1e164:	mov	r0, r2
   1e168:	mov	r5, r3
   1e16c:	mov	r6, r2
   1e170:	mov	r9, r1
   1e174:	bl	11c44 <strlen@plt>
   1e178:	mov	r4, r0
   1e17c:	mov	r0, r5
   1e180:	bl	11c44 <strlen@plt>
   1e184:	add	r8, r4, #1
   1e188:	add	r7, r0, #1
   1e18c:	ldr	r0, [sl]
   1e190:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e194:	cmp	r0, #6
   1e198:	bgt	1e220 <ASN1_STRING_length@plt+0xc2ac>
   1e19c:	add	r0, r8, r7
   1e1a0:	add	r0, r0, #4
   1e1a4:	bl	11d64 <malloc@plt>
   1e1a8:	subs	sl, r0, #0
   1e1ac:	beq	1e25c <ASN1_STRING_length@plt+0xc2e8>
   1e1b0:	mov	r0, sl
   1e1b4:	add	r4, r4, #5
   1e1b8:	add	r4, sl, r4
   1e1bc:	mov	r2, r8
   1e1c0:	mov	r1, r6
   1e1c4:	str	r4, [r0], #4
   1e1c8:	bl	11c5c <memcpy@plt>
   1e1cc:	mov	r2, r7
   1e1d0:	mov	r1, r5
   1e1d4:	mov	r0, r4
   1e1d8:	bl	11c5c <memcpy@plt>
   1e1dc:	mov	r2, #32
   1e1e0:	mov	r1, #9
   1e1e4:	ldr	r0, [sl]
   1e1e8:	bl	1b450 <ASN1_STRING_length@plt+0x94dc>
   1e1ec:	mov	r1, sl
   1e1f0:	ldr	r0, [r9]
   1e1f4:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1e1f8:	cmp	r0, #0
   1e1fc:	beq	1e25c <ASN1_STRING_length@plt+0xc2e8>
   1e200:	mov	sl, #0
   1e204:	mov	r4, sl
   1e208:	str	r0, [r9]
   1e20c:	mov	r0, sl
   1e210:	bl	11ba8 <free@plt>
   1e214:	mov	r0, r4
   1e218:	add	sp, sp, #16
   1e21c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e220:	ldr	r2, [pc, #60]	; 1e264 <ASN1_STRING_length@plt+0xc2f0>
   1e224:	ldr	r3, [pc, #60]	; 1e268 <ASN1_STRING_length@plt+0xc2f4>
   1e228:	add	r2, pc, r2
   1e22c:	str	r5, [sp, #12]
   1e230:	str	r6, [sp, #8]
   1e234:	ldr	r0, [sl]
   1e238:	str	r2, [sp, #4]
   1e23c:	ldr	r2, [pc, #40]	; 1e26c <ASN1_STRING_length@plt+0xc2f8>
   1e240:	add	r3, pc, r3
   1e244:	str	r3, [sp]
   1e248:	add	r2, pc, r2
   1e24c:	mov	r3, #162	; 0xa2
   1e250:	mov	r1, #7
   1e254:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e258:	b	1e19c <ASN1_STRING_length@plt+0xc228>
   1e25c:	mvn	r4, #11
   1e260:	b	1e20c <ASN1_STRING_length@plt+0xc298>
   1e264:	andeq	r0, r1, r8, lsr r3
   1e268:	andeq	r0, r1, r4, ror #2
   1e26c:	andeq	r0, r1, ip, asr r2
   1e270:	push	{r4, r5, r6, r7, lr}
   1e274:	sub	sp, sp, #28
   1e278:	cmp	r2, #0
   1e27c:	cmpne	r1, #0
   1e280:	str	r3, [sp, #20]
   1e284:	bne	1e290 <ASN1_STRING_length@plt+0xc31c>
   1e288:	add	sp, sp, #28
   1e28c:	pop	{r4, r5, r6, r7, pc}
   1e290:	mov	r4, r0
   1e294:	ldr	r0, [r0]
   1e298:	mov	r6, r2
   1e29c:	mov	r5, r1
   1e2a0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e2a4:	cmp	r0, #6
   1e2a8:	bgt	1e348 <ASN1_STRING_length@plt+0xc3d4>
   1e2ac:	ldr	r1, [pc, #268]	; 1e3c0 <ASN1_STRING_length@plt+0xc44c>
   1e2b0:	mov	r0, r5
   1e2b4:	add	r1, pc, r1
   1e2b8:	bl	11f14 <strcmp@plt>
   1e2bc:	cmp	r0, #0
   1e2c0:	bne	1e31c <ASN1_STRING_length@plt+0xc3a8>
   1e2c4:	ldr	r1, [pc, #248]	; 1e3c4 <ASN1_STRING_length@plt+0xc450>
   1e2c8:	mov	r2, #10
   1e2cc:	add	r1, pc, r1
   1e2d0:	mov	r0, r6
   1e2d4:	bl	11ea8 <strncmp@plt>
   1e2d8:	cmp	r0, #0
   1e2dc:	bne	1e31c <ASN1_STRING_length@plt+0xc3a8>
   1e2e0:	ldr	r7, [pc, #224]	; 1e3c8 <ASN1_STRING_length@plt+0xc454>
   1e2e4:	add	r6, sp, #20
   1e2e8:	add	r7, pc, r7
   1e2ec:	add	r5, r4, #8
   1e2f0:	b	1e2f8 <ASN1_STRING_length@plt+0xc384>
   1e2f4:	bl	1e0a4 <ASN1_STRING_length@plt+0xc130>
   1e2f8:	mov	r1, r7
   1e2fc:	mov	r0, r6
   1e300:	bl	11a70 <strsep@plt>
   1e304:	mov	r1, r5
   1e308:	subs	r2, r0, #0
   1e30c:	mov	r0, r4
   1e310:	bne	1e2f4 <ASN1_STRING_length@plt+0xc380>
   1e314:	add	sp, sp, #28
   1e318:	pop	{r4, r5, r6, r7, pc}
   1e31c:	mov	r0, r5
   1e320:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1e324:	cmp	r0, #0
   1e328:	blt	1e37c <ASN1_STRING_length@plt+0xc408>
   1e32c:	mov	r3, r6
   1e330:	mov	r2, r5
   1e334:	add	r1, r4, #12
   1e338:	mov	r0, r4
   1e33c:	bl	1e158 <ASN1_STRING_length@plt+0xc1e4>
   1e340:	add	sp, sp, #28
   1e344:	pop	{r4, r5, r6, r7, pc}
   1e348:	ldr	r2, [pc, #124]	; 1e3cc <ASN1_STRING_length@plt+0xc458>
   1e34c:	ldr	r3, [pc, #124]	; 1e3d0 <ASN1_STRING_length@plt+0xc45c>
   1e350:	add	r2, pc, r2
   1e354:	add	r3, pc, r3
   1e358:	stmib	sp, {r2, r5, r6}
   1e35c:	mov	r1, #7
   1e360:	ldr	r2, [pc, #108]	; 1e3d4 <ASN1_STRING_length@plt+0xc460>
   1e364:	str	r3, [sp]
   1e368:	add	r2, pc, r2
   1e36c:	mov	r3, #476	; 0x1dc
   1e370:	ldr	r0, [r4]
   1e374:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e378:	b	1e2ac <ASN1_STRING_length@plt+0xc338>
   1e37c:	ldr	r0, [r4]
   1e380:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e384:	cmp	r0, #2
   1e388:	ble	1e32c <ASN1_STRING_length@plt+0xc3b8>
   1e38c:	ldr	r2, [pc, #68]	; 1e3d8 <ASN1_STRING_length@plt+0xc464>
   1e390:	ldr	r3, [pc, #68]	; 1e3dc <ASN1_STRING_length@plt+0xc468>
   1e394:	add	r2, pc, r2
   1e398:	add	r3, pc, r3
   1e39c:	stmib	sp, {r2, r5}
   1e3a0:	ldr	r2, [pc, #56]	; 1e3e0 <ASN1_STRING_length@plt+0xc46c>
   1e3a4:	str	r3, [sp]
   1e3a8:	add	r2, pc, r2
   1e3ac:	ldr	r3, [pc, #48]	; 1e3e4 <ASN1_STRING_length@plt+0xc470>
   1e3b0:	mov	r1, #3
   1e3b4:	ldr	r0, [r4]
   1e3b8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e3bc:	b	1e32c <ASN1_STRING_length@plt+0xc3b8>
   1e3c0:	andeq	sp, r0, r8, lsr #28
   1e3c4:	andeq	r0, r1, ip, lsl r2
   1e3c8:	andeq	r0, r1, ip, lsl #4
   1e3cc:	andeq	pc, r0, ip, lsr r2	; <UNPREDICTABLE>
   1e3d0:	strheq	r0, [r1], -r4
   1e3d4:	andeq	r0, r1, ip, lsr r1
   1e3d8:	andeq	r0, r1, r4, ror #2
   1e3dc:	andeq	r0, r1, r0, ror r0
   1e3e0:	strdeq	r0, [r1], -ip
   1e3e4:	andeq	r0, r0, r9, ror #3
   1e3e8:	ldr	r3, [r0, #8]
   1e3ec:	ldr	r2, [r3, #12]
   1e3f0:	ldr	r0, [r3, #4]
   1e3f4:	str	r2, [r1]
   1e3f8:	bx	lr
   1e3fc:	ldr	r3, [r0, #8]
   1e400:	ldr	r2, [r3, #16]
   1e404:	ldr	r0, [r3, #8]
   1e408:	str	r2, [r1]
   1e40c:	bx	lr
   1e410:	push	{r4, r5, r6, lr}
   1e414:	mov	r4, r0
   1e418:	ldr	r5, [r0, #4]
   1e41c:	cmp	r5, #0
   1e420:	beq	1e444 <ASN1_STRING_length@plt+0xc4d0>
   1e424:	ldr	r0, [r5, #8]
   1e428:	bl	11ba8 <free@plt>
   1e42c:	mov	r0, r5
   1e430:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e434:	cmp	r0, #0
   1e438:	mov	r5, r0
   1e43c:	str	r0, [r4, #4]
   1e440:	bne	1e424 <ASN1_STRING_length@plt+0xc4b0>
   1e444:	ldr	r5, [r4, #8]
   1e448:	cmp	r5, #0
   1e44c:	beq	1e470 <ASN1_STRING_length@plt+0xc4fc>
   1e450:	ldr	r0, [r5, #8]
   1e454:	bl	11ba8 <free@plt>
   1e458:	mov	r0, r5
   1e45c:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e460:	cmp	r0, #0
   1e464:	mov	r5, r0
   1e468:	str	r0, [r4, #8]
   1e46c:	bne	1e450 <ASN1_STRING_length@plt+0xc4dc>
   1e470:	ldr	r5, [r4, #12]
   1e474:	cmp	r5, #0
   1e478:	beq	1e49c <ASN1_STRING_length@plt+0xc528>
   1e47c:	ldr	r0, [r5, #8]
   1e480:	bl	11ba8 <free@plt>
   1e484:	mov	r0, r5
   1e488:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e48c:	cmp	r0, #0
   1e490:	mov	r5, r0
   1e494:	str	r0, [r4, #12]
   1e498:	bne	1e47c <ASN1_STRING_length@plt+0xc508>
   1e49c:	ldr	r5, [r4, #20]
   1e4a0:	cmp	r5, #0
   1e4a4:	beq	1e4c8 <ASN1_STRING_length@plt+0xc554>
   1e4a8:	ldr	r0, [r5, #8]
   1e4ac:	bl	11ba8 <free@plt>
   1e4b0:	mov	r0, r5
   1e4b4:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e4b8:	cmp	r0, #0
   1e4bc:	mov	r5, r0
   1e4c0:	str	r0, [r4, #20]
   1e4c4:	bne	1e4a8 <ASN1_STRING_length@plt+0xc534>
   1e4c8:	ldr	r5, [r4, #16]
   1e4cc:	cmp	r5, #0
   1e4d0:	beq	1e4f4 <ASN1_STRING_length@plt+0xc580>
   1e4d4:	ldr	r0, [r5, #8]
   1e4d8:	bl	11ba8 <free@plt>
   1e4dc:	mov	r0, r5
   1e4e0:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e4e4:	cmp	r0, #0
   1e4e8:	mov	r5, r0
   1e4ec:	str	r0, [r4, #16]
   1e4f0:	bne	1e4d4 <ASN1_STRING_length@plt+0xc560>
   1e4f4:	ldr	r5, [r4, #24]
   1e4f8:	cmp	r5, #0
   1e4fc:	beq	1e520 <ASN1_STRING_length@plt+0xc5ac>
   1e500:	ldr	r0, [r5, #8]
   1e504:	bl	11ba8 <free@plt>
   1e508:	mov	r0, r5
   1e50c:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e510:	cmp	r0, #0
   1e514:	mov	r5, r0
   1e518:	str	r0, [r4, #24]
   1e51c:	bne	1e500 <ASN1_STRING_length@plt+0xc58c>
   1e520:	ldr	r0, [r4, #28]
   1e524:	cmp	r0, #0
   1e528:	beq	1e548 <ASN1_STRING_length@plt+0xc5d4>
   1e52c:	ldr	r0, [r0, #8]
   1e530:	bl	11ba8 <free@plt>
   1e534:	ldr	r0, [r4, #28]
   1e538:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e53c:	cmp	r0, #0
   1e540:	str	r0, [r4, #28]
   1e544:	bne	1e52c <ASN1_STRING_length@plt+0xc5b8>
   1e548:	mov	r0, r4
   1e54c:	pop	{r4, r5, r6, lr}
   1e550:	b	11ba8 <free@plt>
   1e554:	ldr	r3, [pc, #4052]	; 1f530 <ASN1_STRING_length@plt+0xd5bc>
   1e558:	ldr	ip, [pc, #4052]	; 1f534 <ASN1_STRING_length@plt+0xd5c0>
   1e55c:	add	r3, pc, r3
   1e560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e564:	sub	sp, sp, #4416	; 0x1140
   1e568:	ldr	ip, [r3, ip]
   1e56c:	sub	sp, sp, #20
   1e570:	add	r3, sp, #4416	; 0x1140
   1e574:	add	r3, r3, #12
   1e578:	mov	sl, r2
   1e57c:	add	r9, sp, #336	; 0x150
   1e580:	ldr	r2, [ip]
   1e584:	mov	r7, #0
   1e588:	str	r2, [r3]
   1e58c:	str	ip, [sp, #60]	; 0x3c
   1e590:	str	r1, [sp, #56]	; 0x38
   1e594:	mov	r8, r0
   1e598:	str	r7, [r9, #-220]	; 0xffffff24
   1e59c:	bl	1bf00 <ASN1_STRING_length@plt+0x9f8c>
   1e5a0:	add	r3, sp, #116	; 0x74
   1e5a4:	str	r3, [sp, #32]
   1e5a8:	mov	r1, r3
   1e5ac:	ldr	r3, [pc, #3972]	; 1f538 <ASN1_STRING_length@plt+0xd5c4>
   1e5b0:	add	r3, pc, r3
   1e5b4:	mov	r2, r0
   1e5b8:	mov	r0, r8
   1e5bc:	bl	1dc78 <ASN1_STRING_length@plt+0xbd04>
   1e5c0:	ldr	r5, [sl]
   1e5c4:	cmp	r5, r7
   1e5c8:	beq	1f68c <ASN1_STRING_length@plt+0xd718>
   1e5cc:	ldr	r3, [pc, #3944]	; 1f53c <ASN1_STRING_length@plt+0xd5c8>
   1e5d0:	str	r7, [sp, #36]	; 0x24
   1e5d4:	add	r3, pc, r3
   1e5d8:	str	r3, [sp, #48]	; 0x30
   1e5dc:	ldr	r3, [pc, #3932]	; 1f540 <ASN1_STRING_length@plt+0xd5cc>
   1e5e0:	str	sl, [sp, #28]
   1e5e4:	add	r3, pc, r3
   1e5e8:	str	r3, [sp, #64]	; 0x40
   1e5ec:	add	r3, sp, #120	; 0x78
   1e5f0:	mov	r7, r3
   1e5f4:	b	1e68c <ASN1_STRING_length@plt+0xc718>
   1e5f8:	mov	r0, r7
   1e5fc:	bl	1bc50 <ASN1_STRING_length@plt+0x9cdc>
   1e600:	ldr	r2, [r9, #-200]	; 0xffffff38
   1e604:	and	r2, r2, #61440	; 0xf000
   1e608:	cmp	r2, #16384	; 0x4000
   1e60c:	strd	r0, [sp, #40]	; 0x28
   1e610:	beq	1e6d4 <ASN1_STRING_length@plt+0xc760>
   1e614:	mov	r3, r4
   1e618:	mov	r2, r5
   1e61c:	ldr	r1, [sp, #32]
   1e620:	mov	r0, r8
   1e624:	bl	1dc78 <ASN1_STRING_length@plt+0xbd04>
   1e628:	mov	r0, r5
   1e62c:	bl	11c44 <strlen@plt>
   1e630:	mov	r6, r0
   1e634:	add	r0, r0, #9
   1e638:	bl	11d64 <malloc@plt>
   1e63c:	add	r6, r6, #1
   1e640:	subs	r4, r0, #0
   1e644:	beq	1e838 <ASN1_STRING_length@plt+0xc8c4>
   1e648:	ldrd	sl, [sp, #40]	; 0x28
   1e64c:	mov	r0, r4
   1e650:	mov	r2, r6
   1e654:	mov	r1, r5
   1e658:	strd	sl, [r0], #8
   1e65c:	bl	11c5c <memcpy@plt>
   1e660:	mov	r1, r4
   1e664:	ldr	r0, [sp, #36]	; 0x24
   1e668:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1e66c:	cmp	r0, #0
   1e670:	beq	1e838 <ASN1_STRING_length@plt+0xc8c4>
   1e674:	str	r0, [sp, #36]	; 0x24
   1e678:	ldr	r3, [sp, #28]
   1e67c:	ldr	r5, [r3, #4]!
   1e680:	cmp	r5, #0
   1e684:	str	r3, [sp, #28]
   1e688:	beq	1e8b0 <ASN1_STRING_length@plt+0xc93c>
   1e68c:	mov	r2, r7
   1e690:	mov	r1, r5
   1e694:	mov	r0, #3
   1e698:	bl	11d40 <__xstat64@plt>
   1e69c:	subs	r4, r0, #0
   1e6a0:	beq	1e5f8 <ASN1_STRING_length@plt+0xc684>
   1e6a4:	bl	11f38 <__errno_location@plt>
   1e6a8:	ldr	r4, [r0]
   1e6ac:	mov	r0, r8
   1e6b0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e6b4:	cmp	r0, #6
   1e6b8:	bgt	1e804 <ASN1_STRING_length@plt+0xc890>
   1e6bc:	cmp	r4, #0
   1e6c0:	bgt	1e678 <ASN1_STRING_length@plt+0xc704>
   1e6c4:	mov	r2, #0
   1e6c8:	mov	r3, #0
   1e6cc:	strd	r2, [sp, #40]	; 0x28
   1e6d0:	b	1e628 <ASN1_STRING_length@plt+0xc6b4>
   1e6d4:	mov	r0, r5
   1e6d8:	bl	11a34 <opendir@plt>
   1e6dc:	subs	r6, r0, #0
   1e6e0:	beq	1f71c <ASN1_STRING_length@plt+0xd7a8>
   1e6e4:	bl	11e54 <readdir64@plt>
   1e6e8:	cmp	r0, #0
   1e6ec:	beq	1e7b4 <ASN1_STRING_length@plt+0xc840>
   1e6f0:	ldr	sl, [sp, #28]
   1e6f4:	add	fp, sp, #224	; 0xe0
   1e6f8:	str	r7, [sp, #52]	; 0x34
   1e6fc:	ldrb	r3, [r0, #19]
   1e700:	add	r4, r0, #19
   1e704:	cmp	r3, #46	; 0x2e
   1e708:	beq	1e79c <ASN1_STRING_length@plt+0xc828>
   1e70c:	mov	r0, r4
   1e710:	bl	11c44 <strlen@plt>
   1e714:	cmp	r0, #5
   1e718:	mov	r7, r0
   1e71c:	bls	1e79c <ASN1_STRING_length@plt+0xc828>
   1e720:	sub	r0, r0, #5
   1e724:	add	r0, r4, r0
   1e728:	ldr	r1, [sp, #48]	; 0x30
   1e72c:	bl	11f14 <strcmp@plt>
   1e730:	cmp	r0, #0
   1e734:	beq	1e754 <ASN1_STRING_length@plt+0xc7e0>
   1e738:	ldr	r1, [pc, #3588]	; 1f544 <ASN1_STRING_length@plt+0xd5d0>
   1e73c:	sub	r0, r7, #6
   1e740:	add	r0, r4, r0
   1e744:	add	r1, pc, r1
   1e748:	bl	11f14 <strcmp@plt>
   1e74c:	cmp	r0, #0
   1e750:	bne	1e79c <ASN1_STRING_length@plt+0xc828>
   1e754:	mov	r0, r6
   1e758:	bl	11cd4 <dirfd@plt>
   1e75c:	mov	r3, #0
   1e760:	str	r3, [sp]
   1e764:	mov	r2, r4
   1e768:	mov	r3, fp
   1e76c:	mov	r1, r0
   1e770:	mov	r0, #3
   1e774:	bl	11ee4 <__fxstatat64@plt>
   1e778:	ldr	r3, [r9, #-96]	; 0xffffffa0
   1e77c:	and	r3, r3, #61440	; 0xf000
   1e780:	cmp	r3, #16384	; 0x4000
   1e784:	beq	1e7c0 <ASN1_STRING_length@plt+0xc84c>
   1e788:	mov	r3, r4
   1e78c:	mov	r2, r5
   1e790:	ldr	r1, [sp, #32]
   1e794:	mov	r0, r8
   1e798:	bl	1dc78 <ASN1_STRING_length@plt+0xbd04>
   1e79c:	mov	r0, r6
   1e7a0:	bl	11e54 <readdir64@plt>
   1e7a4:	cmp	r0, #0
   1e7a8:	bne	1e6fc <ASN1_STRING_length@plt+0xc788>
   1e7ac:	ldr	r7, [sp, #52]	; 0x34
   1e7b0:	str	sl, [sp, #28]
   1e7b4:	mov	r0, r6
   1e7b8:	bl	11d28 <closedir@plt>
   1e7bc:	b	1e628 <ASN1_STRING_length@plt+0xc6b4>
   1e7c0:	mov	r0, r8
   1e7c4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e7c8:	cmp	r0, #2
   1e7cc:	ble	1e79c <ASN1_STRING_length@plt+0xc828>
   1e7d0:	ldr	r2, [pc, #3440]	; 1f548 <ASN1_STRING_length@plt+0xd5d4>
   1e7d4:	ldr	r3, [pc, #3440]	; 1f54c <ASN1_STRING_length@plt+0xd5d8>
   1e7d8:	add	r2, pc, r2
   1e7dc:	add	r3, pc, r3
   1e7e0:	stmib	sp, {r2, r5}
   1e7e4:	str	r3, [sp]
   1e7e8:	str	r4, [sp, #12]
   1e7ec:	mov	r3, #716	; 0x2cc
   1e7f0:	ldr	r2, [sp, #64]	; 0x40
   1e7f4:	mov	r1, #3
   1e7f8:	mov	r0, r8
   1e7fc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e800:	b	1e79c <ASN1_STRING_length@plt+0xc828>
   1e804:	ldr	r2, [pc, #3396]	; 1f550 <ASN1_STRING_length@plt+0xd5dc>
   1e808:	ldr	r3, [pc, #3396]	; 1f554 <ASN1_STRING_length@plt+0xd5e0>
   1e80c:	add	r2, pc, r2
   1e810:	add	r3, pc, r3
   1e814:	stmib	sp, {r2, r5}
   1e818:	ldr	r2, [pc, #3384]	; 1f558 <ASN1_STRING_length@plt+0xd5e4>
   1e81c:	str	r3, [sp]
   1e820:	add	r2, pc, r2
   1e824:	ldr	r3, [pc, #3376]	; 1f55c <ASN1_STRING_length@plt+0xd5e8>
   1e828:	mov	r1, #7
   1e82c:	mov	r0, r8
   1e830:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1e834:	b	1e6bc <ASN1_STRING_length@plt+0xc748>
   1e838:	ldr	r7, [sp, #36]	; 0x24
   1e83c:	ldr	r0, [r9, #-220]	; 0xffffff24
   1e840:	cmp	r0, #0
   1e844:	beq	1e864 <ASN1_STRING_length@plt+0xc8f0>
   1e848:	ldr	r0, [r0, #8]
   1e84c:	bl	11ba8 <free@plt>
   1e850:	ldr	r0, [r9, #-220]	; 0xffffff24
   1e854:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e858:	cmp	r0, #0
   1e85c:	str	r0, [r9, #-220]	; 0xffffff24
   1e860:	bne	1e848 <ASN1_STRING_length@plt+0xc8d4>
   1e864:	cmp	r7, #0
   1e868:	beq	1e884 <ASN1_STRING_length@plt+0xc910>
   1e86c:	ldr	r0, [r7, #8]
   1e870:	bl	11ba8 <free@plt>
   1e874:	mov	r0, r7
   1e878:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e87c:	subs	r7, r0, #0
   1e880:	bne	1e86c <ASN1_STRING_length@plt+0xc8f8>
   1e884:	mvn	r0, #11
   1e888:	add	r3, sp, #4416	; 0x1140
   1e88c:	add	r3, r3, #12
   1e890:	ldr	r2, [r3]
   1e894:	ldr	r3, [sp, #60]	; 0x3c
   1e898:	ldr	r3, [r3]
   1e89c:	cmp	r2, r3
   1e8a0:	bne	1f7b4 <ASN1_STRING_length@plt+0xd840>
   1e8a4:	add	sp, sp, #4416	; 0x1140
   1e8a8:	add	sp, sp, #20
   1e8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8b0:	ldr	r7, [sp, #36]	; 0x24
   1e8b4:	mov	r1, #32
   1e8b8:	mov	r0, #1
   1e8bc:	bl	11ae8 <calloc@plt>
   1e8c0:	ldr	r2, [sp, #56]	; 0x38
   1e8c4:	cmp	r0, #0
   1e8c8:	mov	r3, r0
   1e8cc:	str	r0, [sp, #40]	; 0x28
   1e8d0:	str	r0, [r2]
   1e8d4:	ldr	r0, [r9, #-220]	; 0xffffff24
   1e8d8:	beq	1e840 <ASN1_STRING_length@plt+0xc8cc>
   1e8dc:	cmp	r0, #0
   1e8e0:	str	r7, [r3, #28]
   1e8e4:	str	r8, [r3]
   1e8e8:	beq	1edcc <ASN1_STRING_length@plt+0xce58>
   1e8ec:	ldr	r3, [pc, #3180]	; 1f560 <ASN1_STRING_length@plt+0xd5ec>
   1e8f0:	str	r8, [sp, #48]	; 0x30
   1e8f4:	add	r3, pc, r3
   1e8f8:	str	r3, [sp, #72]	; 0x48
   1e8fc:	ldr	r3, [pc, #3168]	; 1f564 <ASN1_STRING_length@plt+0xd5f0>
   1e900:	str	r9, [sp, #32]
   1e904:	add	r3, pc, r3
   1e908:	str	r3, [sp, #76]	; 0x4c
   1e90c:	b	1e930 <ASN1_STRING_length@plt+0xc9bc>
   1e910:	mov	r0, sl
   1e914:	bl	11ba8 <free@plt>
   1e918:	ldr	r4, [sp, #32]
   1e91c:	ldr	r0, [r4, #-220]	; 0xffffff24
   1e920:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   1e924:	cmp	r0, #0
   1e928:	str	r0, [r4, #-220]	; 0xffffff24
   1e92c:	beq	1edc8 <ASN1_STRING_length@plt+0xce54>
   1e930:	ldr	sl, [r0, #8]
   1e934:	ldrb	r3, [sl, #4]
   1e938:	ldr	r2, [sl]
   1e93c:	cmp	r3, #0
   1e940:	str	r2, [sp, #28]
   1e944:	beq	1ec1c <ASN1_STRING_length@plt+0xcca8>
   1e948:	mov	r1, #524288	; 0x80000
   1e94c:	ldr	r0, [sp, #28]
   1e950:	bl	11ca4 <open64@plt>
   1e954:	mov	r4, r0
   1e958:	ldr	r0, [sp, #48]	; 0x30
   1e95c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1e960:	cmp	r0, #6
   1e964:	bgt	1ecb0 <ASN1_STRING_length@plt+0xcd3c>
   1e968:	cmp	r4, #0
   1e96c:	blt	1e910 <ASN1_STRING_length@plt+0xc99c>
   1e970:	ldr	r2, [sp, #32]
   1e974:	mov	r3, #0
   1e978:	ldr	r1, [pc, #3048]	; 1f568 <ASN1_STRING_length@plt+0xd5f4>
   1e97c:	str	r3, [r2, #-216]	; 0xffffff28
   1e980:	ldr	r3, [sp, #40]	; 0x28
   1e984:	add	r1, pc, r1
   1e988:	mov	r0, r4
   1e98c:	ldr	r3, [r3]
   1e990:	str	r3, [sp, #52]	; 0x34
   1e994:	bl	11ce0 <fdopen@plt>
   1e998:	subs	r9, r0, #0
   1e99c:	beq	1f3f0 <ASN1_STRING_length@plt+0xd47c>
   1e9a0:	ldr	r3, [pc, #3012]	; 1f56c <ASN1_STRING_length@plt+0xd5f8>
   1e9a4:	ldr	r2, [pc, #3012]	; 1f570 <ASN1_STRING_length@plt+0xd5fc>
   1e9a8:	add	r3, pc, r3
   1e9ac:	str	sl, [sp, #56]	; 0x38
   1e9b0:	add	fp, sp, #120	; 0x78
   1e9b4:	mov	sl, r3
   1e9b8:	add	r2, pc, r2
   1e9bc:	str	r2, [sp, #36]	; 0x24
   1e9c0:	mov	r1, fp
   1e9c4:	mov	r0, r9
   1e9c8:	bl	1b878 <ASN1_STRING_length@plt+0x9904>
   1e9cc:	subs	r4, r0, #0
   1e9d0:	beq	1ec0c <ASN1_STRING_length@plt+0xcc98>
   1e9d4:	ldrb	r3, [r4]
   1e9d8:	cmp	r3, #35	; 0x23
   1e9dc:	cmpne	r3, #0
   1e9e0:	beq	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1e9e4:	add	r7, sp, #224	; 0xe0
   1e9e8:	mov	r2, r7
   1e9ec:	mov	r1, sl
   1e9f0:	bl	11dd0 <strtok_r@plt>
   1e9f4:	subs	r6, r0, #0
   1e9f8:	beq	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1e9fc:	ldr	r1, [sp, #36]	; 0x24
   1ea00:	bl	11f14 <strcmp@plt>
   1ea04:	subs	r8, r0, #0
   1ea08:	beq	1eb20 <ASN1_STRING_length@plt+0xcbac>
   1ea0c:	ldr	r1, [pc, #2912]	; 1f574 <ASN1_STRING_length@plt+0xd600>
   1ea10:	mov	r0, r6
   1ea14:	add	r1, pc, r1
   1ea18:	bl	11f14 <strcmp@plt>
   1ea1c:	cmp	r0, #0
   1ea20:	beq	1ecf0 <ASN1_STRING_length@plt+0xcd7c>
   1ea24:	ldr	r1, [pc, #2892]	; 1f578 <ASN1_STRING_length@plt+0xd604>
   1ea28:	mov	r0, r6
   1ea2c:	add	r1, pc, r1
   1ea30:	bl	11f14 <strcmp@plt>
   1ea34:	subs	r8, r0, #0
   1ea38:	beq	1ed6c <ASN1_STRING_length@plt+0xcdf8>
   1ea3c:	ldr	r1, [pc, #2872]	; 1f57c <ASN1_STRING_length@plt+0xd608>
   1ea40:	mov	r0, r6
   1ea44:	add	r1, pc, r1
   1ea48:	bl	11f14 <strcmp@plt>
   1ea4c:	subs	r8, r0, #0
   1ea50:	beq	1eeb8 <ASN1_STRING_length@plt+0xcf44>
   1ea54:	ldr	r1, [pc, #2852]	; 1f580 <ASN1_STRING_length@plt+0xd60c>
   1ea58:	mov	r0, r6
   1ea5c:	add	r1, pc, r1
   1ea60:	bl	11f14 <strcmp@plt>
   1ea64:	subs	r8, r0, #0
   1ea68:	beq	1ef60 <ASN1_STRING_length@plt+0xcfec>
   1ea6c:	ldr	r1, [pc, #2832]	; 1f584 <ASN1_STRING_length@plt+0xd610>
   1ea70:	mov	r0, r6
   1ea74:	add	r1, pc, r1
   1ea78:	bl	11f14 <strcmp@plt>
   1ea7c:	subs	r5, r0, #0
   1ea80:	beq	1efec <ASN1_STRING_length@plt+0xd078>
   1ea84:	ldr	r1, [pc, #2812]	; 1f588 <ASN1_STRING_length@plt+0xd614>
   1ea88:	mov	r0, r6
   1ea8c:	add	r1, pc, r1
   1ea90:	bl	11f14 <strcmp@plt>
   1ea94:	cmp	r0, #0
   1ea98:	beq	1ead0 <ASN1_STRING_length@plt+0xcb5c>
   1ea9c:	ldr	r1, [pc, #2792]	; 1f58c <ASN1_STRING_length@plt+0xd618>
   1eaa0:	mov	r0, r6
   1eaa4:	add	r1, pc, r1
   1eaa8:	bl	11f14 <strcmp@plt>
   1eaac:	cmp	r0, #0
   1eab0:	beq	1ead0 <ASN1_STRING_length@plt+0xcb5c>
   1eab4:	ldr	r0, [sp, #52]	; 0x34
   1eab8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1eabc:	cmp	r0, #2
   1eac0:	bgt	1ed24 <ASN1_STRING_length@plt+0xcdb0>
   1eac4:	mov	r0, r4
   1eac8:	bl	11ba8 <free@plt>
   1eacc:	b	1e9c0 <ASN1_STRING_length@plt+0xca4c>
   1ead0:	ldr	r0, [sp, #52]	; 0x34
   1ead4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1ead8:	cmp	r0, #2
   1eadc:	ble	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1eae0:	ldr	r2, [pc, #2728]	; 1f590 <ASN1_STRING_length@plt+0xd61c>
   1eae4:	ldr	r3, [pc, #2728]	; 1f594 <ASN1_STRING_length@plt+0xd620>
   1eae8:	add	r2, pc, r2
   1eaec:	ldr	r1, [sp, #28]
   1eaf0:	str	r2, [sp, #4]
   1eaf4:	ldr	r2, [pc, #2716]	; 1f598 <ASN1_STRING_length@plt+0xd624>
   1eaf8:	add	r3, pc, r3
   1eafc:	str	r1, [sp, #8]
   1eb00:	str	r3, [sp]
   1eb04:	str	r6, [sp, #12]
   1eb08:	mov	r3, #652	; 0x28c
   1eb0c:	add	r2, pc, r2
   1eb10:	mov	r1, #3
   1eb14:	ldr	r0, [sp, #52]	; 0x34
   1eb18:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1eb1c:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1eb20:	mov	r2, r7
   1eb24:	mov	r1, sl
   1eb28:	bl	11dd0 <strtok_r@plt>
   1eb2c:	mov	r2, r7
   1eb30:	mov	r1, sl
   1eb34:	mov	r5, r0
   1eb38:	mov	r0, r8
   1eb3c:	bl	11dd0 <strtok_r@plt>
   1eb40:	mov	r7, r0
   1eb44:	mov	r0, r5
   1eb48:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1eb4c:	cmp	r0, #0
   1eb50:	blt	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1eb54:	mov	r0, r7
   1eb58:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1eb5c:	cmp	r0, #0
   1eb60:	blt	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1eb64:	mov	r0, r5
   1eb68:	bl	11c44 <strlen@plt>
   1eb6c:	add	r3, r0, #1
   1eb70:	mov	r0, r7
   1eb74:	str	r3, [sp, #64]	; 0x40
   1eb78:	bl	11c44 <strlen@plt>
   1eb7c:	ldr	r3, [sp, #40]	; 0x28
   1eb80:	mov	r6, r0
   1eb84:	ldr	r0, [r3]
   1eb88:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1eb8c:	add	r3, r6, #1
   1eb90:	str	r3, [sp, #68]	; 0x44
   1eb94:	cmp	r0, #6
   1eb98:	bgt	1f1b4 <ASN1_STRING_length@plt+0xd240>
   1eb9c:	ldr	r3, [sp, #64]	; 0x40
   1eba0:	add	r1, r6, #1
   1eba4:	add	r0, r3, r1
   1eba8:	add	r0, r0, #4
   1ebac:	bl	11d64 <malloc@plt>
   1ebb0:	subs	r8, r0, #0
   1ebb4:	beq	1ec00 <ASN1_STRING_length@plt+0xcc8c>
   1ebb8:	mov	r0, r8
   1ebbc:	add	r6, r6, #5
   1ebc0:	add	r6, r8, r6
   1ebc4:	ldr	r2, [sp, #68]	; 0x44
   1ebc8:	mov	r1, r7
   1ebcc:	str	r6, [r0], #4
   1ebd0:	bl	11c5c <memcpy@plt>
   1ebd4:	mov	r1, r5
   1ebd8:	ldr	r2, [sp, #64]	; 0x40
   1ebdc:	mov	r0, r6
   1ebe0:	bl	11c5c <memcpy@plt>
   1ebe4:	ldr	r5, [sp, #40]	; 0x28
   1ebe8:	mov	r1, r8
   1ebec:	ldr	r0, [r5, #4]
   1ebf0:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1ebf4:	cmp	r0, #0
   1ebf8:	movne	r8, #0
   1ebfc:	strne	r0, [r5, #4]
   1ec00:	mov	r0, r8
   1ec04:	bl	11ba8 <free@plt>
   1ec08:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1ec0c:	mov	r0, r9
   1ec10:	ldr	sl, [sp, #56]	; 0x38
   1ec14:	bl	11a88 <fclose@plt>
   1ec18:	b	1e910 <ASN1_STRING_length@plt+0xc99c>
   1ec1c:	ldr	r3, [sp, #32]
   1ec20:	ldr	r2, [pc, #2420]	; 1f59c <ASN1_STRING_length@plt+0xd628>
   1ec24:	ldr	r1, [sp, #28]
   1ec28:	sub	r4, r3, #4
   1ec2c:	add	r2, pc, r2
   1ec30:	mov	r3, #4096	; 0x1000
   1ec34:	add	r5, sl, #5
   1ec38:	str	r1, [sp, #4]
   1ec3c:	str	r2, [sp]
   1ec40:	str	r5, [sp, #8]
   1ec44:	mov	r0, r4
   1ec48:	mov	r1, r3
   1ec4c:	mov	r2, #1
   1ec50:	bl	11cc8 <__snprintf_chk@plt>
   1ec54:	cmp	r0, #4096	; 0x1000
   1ec58:	strlt	r4, [sp, #28]
   1ec5c:	blt	1e948 <ASN1_STRING_length@plt+0xc9d4>
   1ec60:	ldr	r0, [sp, #48]	; 0x30
   1ec64:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1ec68:	cmp	r0, #2
   1ec6c:	ble	1e910 <ASN1_STRING_length@plt+0xc99c>
   1ec70:	ldr	r2, [pc, #2344]	; 1f5a0 <ASN1_STRING_length@plt+0xd62c>
   1ec74:	ldr	r3, [pc, #2344]	; 1f5a4 <ASN1_STRING_length@plt+0xd630>
   1ec78:	add	r2, pc, r2
   1ec7c:	str	r5, [sp, #12]
   1ec80:	ldr	r1, [sl]
   1ec84:	str	r2, [sp, #4]
   1ec88:	ldr	r2, [pc, #2328]	; 1f5a8 <ASN1_STRING_length@plt+0xd634>
   1ec8c:	add	r3, pc, r3
   1ec90:	str	r1, [sp, #8]
   1ec94:	str	r3, [sp]
   1ec98:	add	r2, pc, r2
   1ec9c:	ldr	r3, [pc, #2312]	; 1f5ac <ASN1_STRING_length@plt+0xd638>
   1eca0:	mov	r1, #3
   1eca4:	ldr	r0, [sp, #48]	; 0x30
   1eca8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ecac:	b	1e910 <ASN1_STRING_length@plt+0xc99c>
   1ecb0:	ldr	r2, [pc, #2296]	; 1f5b0 <ASN1_STRING_length@plt+0xd63c>
   1ecb4:	ldr	r3, [pc, #2296]	; 1f5b4 <ASN1_STRING_length@plt+0xd640>
   1ecb8:	add	r2, pc, r2
   1ecbc:	ldr	r1, [sp, #28]
   1ecc0:	str	r2, [sp, #4]
   1ecc4:	ldr	r2, [pc, #2284]	; 1f5b8 <ASN1_STRING_length@plt+0xd644>
   1ecc8:	add	r3, pc, r3
   1eccc:	str	r1, [sp, #8]
   1ecd0:	str	r3, [sp]
   1ecd4:	str	r4, [sp, #12]
   1ecd8:	mov	r3, #884	; 0x374
   1ecdc:	add	r2, pc, r2
   1ece0:	mov	r1, #7
   1ece4:	ldr	r0, [sp, #48]	; 0x30
   1ece8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ecec:	b	1e968 <ASN1_STRING_length@plt+0xc9f4>
   1ecf0:	mov	r2, r7
   1ecf4:	mov	r1, sl
   1ecf8:	bl	11dd0 <strtok_r@plt>
   1ecfc:	mov	r5, r0
   1ed00:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1ed04:	cmp	r0, #0
   1ed08:	blt	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1ed0c:	ldr	r3, [sp, #40]	; 0x28
   1ed10:	mov	r2, r5
   1ed14:	add	r1, r3, #8
   1ed18:	mov	r0, r3
   1ed1c:	bl	1e0a4 <ASN1_STRING_length@plt+0xc130>
   1ed20:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1ed24:	ldr	r3, [sp, #32]
   1ed28:	ldr	r2, [pc, #2188]	; 1f5bc <ASN1_STRING_length@plt+0xd648>
   1ed2c:	ldr	r0, [sp, #28]
   1ed30:	ldr	r1, [r3, #-216]	; 0xffffff28
   1ed34:	add	r2, pc, r2
   1ed38:	ldr	r3, [pc, #2176]	; 1f5c0 <ASN1_STRING_length@plt+0xd64c>
   1ed3c:	str	r2, [sp, #4]
   1ed40:	ldr	r2, [pc, #2172]	; 1f5c4 <ASN1_STRING_length@plt+0xd650>
   1ed44:	add	r3, pc, r3
   1ed48:	strd	r0, [sp, #8]
   1ed4c:	str	r3, [sp]
   1ed50:	str	r6, [sp, #16]
   1ed54:	mov	r3, #656	; 0x290
   1ed58:	add	r2, pc, r2
   1ed5c:	mov	r1, #3
   1ed60:	ldr	r0, [sp, #52]	; 0x34
   1ed64:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1ed68:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1ed6c:	mov	r2, r7
   1ed70:	mov	r1, sl
   1ed74:	bl	11dd0 <strtok_r@plt>
   1ed78:	ldr	r1, [pc, #2120]	; 1f5c8 <ASN1_STRING_length@plt+0xd654>
   1ed7c:	mov	r2, r7
   1ed80:	add	r1, pc, r1
   1ed84:	mov	r5, r0
   1ed88:	mov	r0, r8
   1ed8c:	bl	11dd0 <strtok_r@plt>
   1ed90:	mov	r7, r0
   1ed94:	mov	r0, r5
   1ed98:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1ed9c:	cmp	r7, #0
   1eda0:	moveq	r0, #1
   1eda4:	lsrne	r0, r0, #31
   1eda8:	cmp	r0, #0
   1edac:	bne	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1edb0:	ldr	r0, [sp, #40]	; 0x28
   1edb4:	mov	r3, r7
   1edb8:	mov	r2, r5
   1edbc:	add	r1, r0, #12
   1edc0:	bl	1e158 <ASN1_STRING_length@plt+0xc1e4>
   1edc4:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1edc8:	ldr	r9, [sp, #32]
   1edcc:	ldr	r0, [pc, #2040]	; 1f5cc <ASN1_STRING_length@plt+0xd658>
   1edd0:	mov	r1, #524288	; 0x80000
   1edd4:	add	r0, pc, r0
   1edd8:	bl	11ca4 <open64@plt>
   1eddc:	subs	r4, r0, #0
   1ede0:	blt	1f410 <ASN1_STRING_length@plt+0xd49c>
   1ede4:	sub	r5, r9, #4
   1ede8:	mov	r1, r5
   1edec:	mov	r2, #4096	; 0x1000
   1edf0:	bl	1b6e0 <ASN1_STRING_length@plt+0x976c>
   1edf4:	mov	r6, r0
   1edf8:	mov	r0, r4
   1edfc:	bl	11d04 <close@plt>
   1ee00:	cmp	r6, #0
   1ee04:	blt	1f4d4 <ASN1_STRING_length@plt+0xd560>
   1ee08:	ldrb	r0, [r9, #-4]
   1ee0c:	subs	r6, r0, #10
   1ee10:	movne	r6, #1
   1ee14:	cmp	r0, #0
   1ee18:	moveq	r6, #0
   1ee1c:	cmp	r6, #0
   1ee20:	beq	1efd0 <ASN1_STRING_length@plt+0xd05c>
   1ee24:	mov	r3, #0
   1ee28:	mov	r1, r5
   1ee2c:	sub	r9, r9, #3
   1ee30:	mov	r2, r3
   1ee34:	mov	r5, r3
   1ee38:	mov	lr, r6
   1ee3c:	b	1ee7c <ASN1_STRING_length@plt+0xcf08>
   1ee40:	cmp	r5, #0
   1ee44:	bne	1ee60 <ASN1_STRING_length@plt+0xceec>
   1ee48:	cmp	r0, #46	; 0x2e
   1ee4c:	beq	1ef50 <ASN1_STRING_length@plt+0xcfdc>
   1ee50:	cmp	r0, #61	; 0x3d
   1ee54:	beq	1ef40 <ASN1_STRING_length@plt+0xcfcc>
   1ee58:	cmp	r0, #32
   1ee5c:	beq	1ef20 <ASN1_STRING_length@plt+0xcfac>
   1ee60:	ldrb	r0, [r9], #1
   1ee64:	subs	ip, r0, #10
   1ee68:	movne	ip, #1
   1ee6c:	cmp	r0, #0
   1ee70:	moveq	ip, #0
   1ee74:	cmp	ip, #0
   1ee78:	beq	1efb0 <ASN1_STRING_length@plt+0xd03c>
   1ee7c:	cmp	r0, #34	; 0x22
   1ee80:	mov	r7, r9
   1ee84:	bne	1ee40 <ASN1_STRING_length@plt+0xcecc>
   1ee88:	cmp	r5, #0
   1ee8c:	moveq	lr, r5
   1ee90:	moveq	r5, r6
   1ee94:	beq	1ee60 <ASN1_STRING_length@plt+0xceec>
   1ee98:	adds	r5, r3, #0
   1ee9c:	movne	r5, #1
   1eea0:	cmp	r2, #0
   1eea4:	moveq	r5, #0
   1eea8:	cmp	r5, #0
   1eeac:	movne	lr, r5
   1eeb0:	movne	r5, #0
   1eeb4:	b	1ee60 <ASN1_STRING_length@plt+0xceec>
   1eeb8:	mov	r2, r7
   1eebc:	mov	r1, sl
   1eec0:	bl	11dd0 <strtok_r@plt>
   1eec4:	ldr	r1, [pc, #1796]	; 1f5d0 <ASN1_STRING_length@plt+0xd65c>
   1eec8:	mov	r2, r7
   1eecc:	add	r1, pc, r1
   1eed0:	mov	r5, r0
   1eed4:	mov	r0, r8
   1eed8:	bl	11dd0 <strtok_r@plt>
   1eedc:	mov	r7, r0
   1eee0:	mov	r0, r5
   1eee4:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1eee8:	cmp	r7, #0
   1eeec:	moveq	r0, #1
   1eef0:	lsrne	r0, r0, #31
   1eef4:	cmp	r0, #0
   1eef8:	bne	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1eefc:	ldr	ip, [sp, #40]	; 0x28
   1ef00:	add	r0, ip, #20
   1ef04:	str	r0, [sp]
   1ef08:	mov	r3, r6
   1ef0c:	mov	r2, r7
   1ef10:	mov	r1, r5
   1ef14:	mov	r0, ip
   1ef18:	bl	1df94 <ASN1_STRING_length@plt+0xc020>
   1ef1c:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1ef20:	cmp	lr, #0
   1ef24:	strb	r5, [r9, #-1]
   1ef28:	bne	1efc4 <ASN1_STRING_length@plt+0xd050>
   1ef2c:	mov	r3, #0
   1ef30:	mov	r2, r3
   1ef34:	mov	lr, r6
   1ef38:	mov	r1, r9
   1ef3c:	b	1ee60 <ASN1_STRING_length@plt+0xceec>
   1ef40:	cmp	r2, #0
   1ef44:	moveq	lr, #0
   1ef48:	movne	r3, r9
   1ef4c:	b	1ee60 <ASN1_STRING_length@plt+0xceec>
   1ef50:	cmp	r2, #0
   1ef54:	strbeq	r2, [r9, #-1]
   1ef58:	moveq	r2, r9
   1ef5c:	b	1ee60 <ASN1_STRING_length@plt+0xceec>
   1ef60:	mov	r2, r7
   1ef64:	mov	r1, sl
   1ef68:	bl	11dd0 <strtok_r@plt>
   1ef6c:	ldr	r1, [pc, #1632]	; 1f5d4 <ASN1_STRING_length@plt+0xd660>
   1ef70:	mov	r2, r7
   1ef74:	add	r1, pc, r1
   1ef78:	mov	r5, r0
   1ef7c:	mov	r0, r8
   1ef80:	bl	11dd0 <strtok_r@plt>
   1ef84:	mov	r7, r0
   1ef88:	mov	r0, r5
   1ef8c:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1ef90:	cmp	r7, #0
   1ef94:	moveq	r0, #1
   1ef98:	lsrne	r0, r0, #31
   1ef9c:	cmp	r0, #0
   1efa0:	bne	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1efa4:	ldr	ip, [sp, #40]	; 0x28
   1efa8:	add	r0, ip, #16
   1efac:	b	1ef04 <ASN1_STRING_length@plt+0xcf90>
   1efb0:	cmp	lr, #0
   1efb4:	strb	ip, [r7]
   1efb8:	bne	1efe0 <ASN1_STRING_length@plt+0xd06c>
   1efbc:	mov	r0, #0
   1efc0:	b	1e888 <ASN1_STRING_length@plt+0xc914>
   1efc4:	ldr	r0, [sp, #40]	; 0x28
   1efc8:	bl	1e270 <ASN1_STRING_length@plt+0xc2fc>
   1efcc:	b	1ef2c <ASN1_STRING_length@plt+0xcfb8>
   1efd0:	mov	r2, r6
   1efd4:	mov	r1, r5
   1efd8:	mov	r3, r6
   1efdc:	strb	r6, [r9, #-4]
   1efe0:	ldr	r0, [sp, #40]	; 0x28
   1efe4:	bl	1e270 <ASN1_STRING_length@plt+0xc2fc>
   1efe8:	b	1efbc <ASN1_STRING_length@plt+0xd048>
   1efec:	mov	r2, r7
   1eff0:	mov	r1, sl
   1eff4:	bl	11dd0 <strtok_r@plt>
   1eff8:	ldr	r1, [pc, #1496]	; 1f5d8 <ASN1_STRING_length@plt+0xd664>
   1effc:	mov	r2, r7
   1f000:	add	r1, pc, r1
   1f004:	mov	r8, r0
   1f008:	str	r0, [sp, #88]	; 0x58
   1f00c:	mov	r0, r5
   1f010:	bl	11dd0 <strtok_r@plt>
   1f014:	mov	r7, r0
   1f018:	str	r0, [sp, #84]	; 0x54
   1f01c:	mov	r0, r8
   1f020:	bl	1b538 <ASN1_STRING_length@plt+0x95c4>
   1f024:	cmp	r7, #0
   1f028:	moveq	r0, #1
   1f02c:	lsrne	r0, r0, #31
   1f030:	cmp	r0, #0
   1f034:	bne	1eab4 <ASN1_STRING_length@plt+0xcb40>
   1f038:	mov	r0, r8
   1f03c:	bl	11c44 <strlen@plt>
   1f040:	ldr	r3, [sp, #40]	; 0x28
   1f044:	mov	r5, r0
   1f048:	str	r0, [sp, #104]	; 0x68
   1f04c:	ldr	r0, [r3]
   1f050:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f054:	add	r3, r5, #1
   1f058:	str	r3, [sp, #108]	; 0x6c
   1f05c:	cmp	r0, #6
   1f060:	bgt	1f694 <ASN1_STRING_length@plt+0xd720>
   1f064:	ldr	r3, [sp, #84]	; 0x54
   1f068:	mov	r8, #0
   1f06c:	str	r9, [sp, #80]	; 0x50
   1f070:	str	r4, [sp, #92]	; 0x5c
   1f074:	mov	r2, r8
   1f078:	str	r8, [sp, #68]	; 0x44
   1f07c:	str	r8, [sp, #64]	; 0x40
   1f080:	mov	r6, r3
   1f084:	mov	r4, r3
   1f088:	mov	r9, r8
   1f08c:	str	r3, [sp, #96]	; 0x60
   1f090:	mov	r5, r8
   1f094:	str	sl, [sp, #100]	; 0x64
   1f098:	b	1f0ec <ASN1_STRING_length@plt+0xd178>
   1f09c:	cmp	r6, #5
   1f0a0:	beq	1f174 <ASN1_STRING_length@plt+0xd200>
   1f0a4:	cmp	sl, #0
   1f0a8:	moveq	r2, r8
   1f0ac:	movne	r2, #0
   1f0b0:	cmp	r2, #0
   1f0b4:	bne	1f1ec <ASN1_STRING_length@plt+0xd278>
   1f0b8:	cmp	r9, #1
   1f0bc:	beq	1f19c <ASN1_STRING_length@plt+0xd228>
   1f0c0:	cmp	r9, #2
   1f0c4:	bne	1f0dc <ASN1_STRING_length@plt+0xd168>
   1f0c8:	ldr	r3, [sp, #68]	; 0x44
   1f0cc:	add	r2, r5, #1
   1f0d0:	add	r5, r2, r6
   1f0d4:	add	r3, r3, #1
   1f0d8:	str	r3, [sp, #68]	; 0x44
   1f0dc:	cmp	sl, #0
   1f0e0:	mov	r4, r7
   1f0e4:	beq	1f7b8 <ASN1_STRING_length@plt+0xd844>
   1f0e8:	mov	r6, r7
   1f0ec:	mov	r7, r6
   1f0f0:	ldrb	sl, [r7], #1
   1f0f4:	cmp	sl, #0
   1f0f8:	beq	1f12c <ASN1_STRING_length@plt+0xd1b8>
   1f0fc:	bl	11d34 <__ctype_b_loc@plt>
   1f100:	lsl	r1, sl, #1
   1f104:	ldr	r0, [r0]
   1f108:	ldrh	r1, [r0, r1]
   1f10c:	ands	r1, r1, #8192	; 0x2000
   1f110:	beq	1f194 <ASN1_STRING_length@plt+0xd220>
   1f114:	cmp	r8, #0
   1f118:	movne	r4, r7
   1f11c:	bne	1f0e8 <ASN1_STRING_length@plt+0xd174>
   1f120:	cmp	r4, r6
   1f124:	mov	r8, #1
   1f128:	bcs	1f0e8 <ASN1_STRING_length@plt+0xd174>
   1f12c:	sub	r6, r6, r4
   1f130:	cmp	r6, #4
   1f134:	bne	1f09c <ASN1_STRING_length@plt+0xd128>
   1f138:	ldrb	r1, [r4]
   1f13c:	cmp	r1, #112	; 0x70
   1f140:	bne	1f0a4 <ASN1_STRING_length@plt+0xd130>
   1f144:	ldrb	r1, [r4, #1]
   1f148:	add	r2, r4, #1
   1f14c:	cmp	r1, #114	; 0x72
   1f150:	bne	1f0a4 <ASN1_STRING_length@plt+0xd130>
   1f154:	ldrb	r1, [r2, #1]!
   1f158:	cmp	r1, #101	; 0x65
   1f15c:	bne	1f0a4 <ASN1_STRING_length@plt+0xd130>
   1f160:	ldrb	r2, [r2, #1]
   1f164:	cmp	r2, #58	; 0x3a
   1f168:	moveq	r9, #1
   1f16c:	bne	1f0a4 <ASN1_STRING_length@plt+0xd130>
   1f170:	b	1f0dc <ASN1_STRING_length@plt+0xd168>
   1f174:	mov	r0, r4
   1f178:	mov	r2, r6
   1f17c:	ldr	r1, [sp, #72]	; 0x48
   1f180:	bl	11a40 <memcmp@plt>
   1f184:	cmp	r0, #0
   1f188:	bne	1f0a4 <ASN1_STRING_length@plt+0xd130>
   1f18c:	mov	r9, #2
   1f190:	b	1f0dc <ASN1_STRING_length@plt+0xd168>
   1f194:	mov	r8, r1
   1f198:	b	1f0e8 <ASN1_STRING_length@plt+0xd174>
   1f19c:	ldr	r3, [sp, #64]	; 0x40
   1f1a0:	add	r2, r5, #1
   1f1a4:	add	r3, r3, #1
   1f1a8:	add	r5, r6, r2
   1f1ac:	str	r3, [sp, #64]	; 0x40
   1f1b0:	b	1f0dc <ASN1_STRING_length@plt+0xd168>
   1f1b4:	ldr	r2, [pc, #1056]	; 1f5dc <ASN1_STRING_length@plt+0xd668>
   1f1b8:	ldr	r0, [sp, #40]	; 0x28
   1f1bc:	add	r2, pc, r2
   1f1c0:	ldr	r3, [pc, #1048]	; 1f5e0 <ASN1_STRING_length@plt+0xd66c>
   1f1c4:	stmib	sp, {r2, r5, r7}
   1f1c8:	add	r3, pc, r3
   1f1cc:	ldr	r2, [pc, #1040]	; 1f5e4 <ASN1_STRING_length@plt+0xd670>
   1f1d0:	str	r3, [sp]
   1f1d4:	add	r2, pc, r2
   1f1d8:	mov	r3, #200	; 0xc8
   1f1dc:	mov	r1, #7
   1f1e0:	ldr	r0, [r0]
   1f1e4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f1e8:	b	1eb9c <ASN1_STRING_length@plt+0xcc28>
   1f1ec:	mov	r6, r5
   1f1f0:	ldr	r9, [sp, #80]	; 0x50
   1f1f4:	ldr	r5, [sp, #96]	; 0x60
   1f1f8:	ldr	sl, [sp, #100]	; 0x64
   1f1fc:	ldr	r4, [sp, #92]	; 0x5c
   1f200:	str	r2, [sp, #92]	; 0x5c
   1f204:	ldr	r3, [sp, #40]	; 0x28
   1f208:	ldr	r0, [r3]
   1f20c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f210:	cmp	r0, #6
   1f214:	bgt	1f6d4 <ASN1_STRING_length@plt+0xd760>
   1f218:	ldr	r3, [sp, #104]	; 0x68
   1f21c:	add	r0, r3, #21
   1f220:	ldr	r3, [sp, #64]	; 0x40
   1f224:	add	r0, r0, r6
   1f228:	lsl	r6, r3, #2
   1f22c:	ldr	r3, [sp, #68]	; 0x44
   1f230:	add	r0, r0, r6
   1f234:	lsl	r7, r3, #2
   1f238:	add	r0, r0, r7
   1f23c:	bl	11d64 <malloc@plt>
   1f240:	subs	r3, r0, #0
   1f244:	str	r3, [sp, #80]	; 0x50
   1f248:	beq	1f760 <ASN1_STRING_length@plt+0xd7ec>
   1f24c:	ldr	r2, [sp, #80]	; 0x50
   1f250:	ldr	r1, [sp, #64]	; 0x40
   1f254:	add	r3, r2, #20
   1f258:	add	r6, r3, r6
   1f25c:	add	r0, r6, r7
   1f260:	str	r1, [r2, #12]
   1f264:	ldr	r7, [sp, #108]	; 0x6c
   1f268:	ldr	r1, [sp, #68]	; 0x44
   1f26c:	str	r6, [r2, #8]
   1f270:	mov	r6, r2
   1f274:	str	r1, [r2, #16]
   1f278:	str	r3, [r2, #4]
   1f27c:	ldr	r1, [sp, #88]	; 0x58
   1f280:	str	r0, [r2]
   1f284:	mov	r2, r7
   1f288:	bl	11c5c <memcpy@plt>
   1f28c:	ldr	r3, [r6]
   1f290:	mov	r2, #0
   1f294:	add	r1, r3, r7
   1f298:	str	r9, [sp, #68]	; 0x44
   1f29c:	str	r4, [sp, #88]	; 0x58
   1f2a0:	ldr	r8, [sp, #84]	; 0x54
   1f2a4:	mov	r4, r5
   1f2a8:	ldr	r9, [sp, #92]	; 0x5c
   1f2ac:	str	fp, [sp, #84]	; 0x54
   1f2b0:	str	r2, [sp, #96]	; 0x60
   1f2b4:	str	r2, [sp, #64]	; 0x40
   1f2b8:	mov	r5, r1
   1f2bc:	mov	fp, r2
   1f2c0:	str	sl, [sp, #92]	; 0x5c
   1f2c4:	b	1f304 <ASN1_STRING_length@plt+0xd390>
   1f2c8:	cmp	r4, #5
   1f2cc:	beq	1f38c <ASN1_STRING_length@plt+0xd418>
   1f2d0:	cmp	r7, #0
   1f2d4:	movne	sl, #0
   1f2d8:	andeq	sl, r9, #1
   1f2dc:	cmp	sl, #0
   1f2e0:	bne	1f3b4 <ASN1_STRING_length@plt+0xd440>
   1f2e4:	cmp	fp, #1
   1f2e8:	beq	1f45c <ASN1_STRING_length@plt+0xd4e8>
   1f2ec:	cmp	fp, #2
   1f2f0:	beq	1f498 <ASN1_STRING_length@plt+0xd524>
   1f2f4:	cmp	r7, #0
   1f2f8:	mov	r8, r6
   1f2fc:	beq	1f3b4 <ASN1_STRING_length@plt+0xd440>
   1f300:	mov	r4, r6
   1f304:	mov	r6, r4
   1f308:	ldrb	r7, [r6], #1
   1f30c:	cmp	r7, #0
   1f310:	beq	1f344 <ASN1_STRING_length@plt+0xd3d0>
   1f314:	bl	11d34 <__ctype_b_loc@plt>
   1f318:	lsl	r3, r7, #1
   1f31c:	ldr	r2, [r0]
   1f320:	ldrh	r3, [r2, r3]
   1f324:	ands	r3, r3, #8192	; 0x2000
   1f328:	beq	1f3ac <ASN1_STRING_length@plt+0xd438>
   1f32c:	cmp	r9, #0
   1f330:	movne	r8, r6
   1f334:	bne	1f300 <ASN1_STRING_length@plt+0xd38c>
   1f338:	cmp	r8, r4
   1f33c:	mov	r9, #1
   1f340:	bcs	1f300 <ASN1_STRING_length@plt+0xd38c>
   1f344:	sub	r4, r4, r8
   1f348:	cmp	r4, #4
   1f34c:	bne	1f2c8 <ASN1_STRING_length@plt+0xd354>
   1f350:	ldrb	r3, [r8]
   1f354:	cmp	r3, #112	; 0x70
   1f358:	bne	1f2d0 <ASN1_STRING_length@plt+0xd35c>
   1f35c:	ldrb	r3, [r8, #1]
   1f360:	add	r2, r8, #1
   1f364:	cmp	r3, #114	; 0x72
   1f368:	bne	1f2d0 <ASN1_STRING_length@plt+0xd35c>
   1f36c:	ldrb	r3, [r2, #1]!
   1f370:	cmp	r3, #101	; 0x65
   1f374:	bne	1f2d0 <ASN1_STRING_length@plt+0xd35c>
   1f378:	ldrb	r3, [r2, #1]
   1f37c:	cmp	r3, #58	; 0x3a
   1f380:	moveq	fp, #1
   1f384:	bne	1f2d0 <ASN1_STRING_length@plt+0xd35c>
   1f388:	b	1f2f4 <ASN1_STRING_length@plt+0xd380>
   1f38c:	mov	r2, r4
   1f390:	ldr	r1, [sp, #76]	; 0x4c
   1f394:	mov	r0, r8
   1f398:	bl	11a40 <memcmp@plt>
   1f39c:	cmp	r0, #0
   1f3a0:	bne	1f2d0 <ASN1_STRING_length@plt+0xd35c>
   1f3a4:	mov	fp, #2
   1f3a8:	b	1f2f4 <ASN1_STRING_length@plt+0xd380>
   1f3ac:	mov	r9, r3
   1f3b0:	b	1f300 <ASN1_STRING_length@plt+0xd38c>
   1f3b4:	ldr	r3, [sp, #40]	; 0x28
   1f3b8:	ldr	r1, [sp, #80]	; 0x50
   1f3bc:	ldr	r9, [sp, #68]	; 0x44
   1f3c0:	ldr	r0, [r3, #24]
   1f3c4:	ldr	r4, [sp, #88]	; 0x58
   1f3c8:	ldr	fp, [sp, #84]	; 0x54
   1f3cc:	ldr	sl, [sp, #92]	; 0x5c
   1f3d0:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   1f3d4:	cmp	r0, #0
   1f3d8:	ldrne	r3, [sp, #40]	; 0x28
   1f3dc:	strne	r0, [r3, #24]
   1f3e0:	bne	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1f3e4:	ldr	r0, [sp, #80]	; 0x50
   1f3e8:	bl	11ba8 <free@plt>
   1f3ec:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1f3f0:	ldr	r3, [sp, #40]	; 0x28
   1f3f4:	ldr	r0, [r3]
   1f3f8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f3fc:	cmp	r0, #2
   1f400:	bgt	1f654 <ASN1_STRING_length@plt+0xd6e0>
   1f404:	mov	r0, r4
   1f408:	bl	11d04 <close@plt>
   1f40c:	b	1e910 <ASN1_STRING_length@plt+0xc99c>
   1f410:	ldr	r3, [sp, #40]	; 0x28
   1f414:	ldr	r0, [r3]
   1f418:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f41c:	cmp	r0, #6
   1f420:	ble	1efbc <ASN1_STRING_length@plt+0xd048>
   1f424:	ldr	r1, [sp, #40]	; 0x28
   1f428:	ldr	r2, [pc, #440]	; 1f5e8 <ASN1_STRING_length@plt+0xd674>
   1f42c:	ldr	r3, [pc, #440]	; 1f5ec <ASN1_STRING_length@plt+0xd678>
   1f430:	add	r2, pc, r2
   1f434:	ldr	r0, [r1]
   1f438:	str	r2, [sp, #4]
   1f43c:	ldr	r2, [pc, #428]	; 1f5f0 <ASN1_STRING_length@plt+0xd67c>
   1f440:	add	r3, pc, r3
   1f444:	str	r3, [sp]
   1f448:	add	r2, pc, r2
   1f44c:	ldr	r3, [pc, #416]	; 1f5f4 <ASN1_STRING_length@plt+0xd680>
   1f450:	mov	r1, #7
   1f454:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f458:	b	1efbc <ASN1_STRING_length@plt+0xd048>
   1f45c:	ldr	r3, [sp, #80]	; 0x50
   1f460:	ldr	r7, [sp, #64]	; 0x40
   1f464:	mov	r2, r4
   1f468:	ldr	r0, [r3, #4]
   1f46c:	mov	r1, r8
   1f470:	str	r5, [r0, r7, lsl #2]
   1f474:	mov	r0, r5
   1f478:	bl	11c5c <memcpy@plt>
   1f47c:	add	r3, r7, #1
   1f480:	add	r2, r4, #1
   1f484:	str	r3, [sp, #64]	; 0x40
   1f488:	strb	sl, [r5, r4]
   1f48c:	add	r5, r5, r2
   1f490:	ldrb	r7, [r6, #-1]
   1f494:	b	1f2f4 <ASN1_STRING_length@plt+0xd380>
   1f498:	ldr	r3, [sp, #80]	; 0x50
   1f49c:	ldr	r7, [sp, #96]	; 0x60
   1f4a0:	mov	r2, r4
   1f4a4:	ldr	r0, [r3, #8]
   1f4a8:	mov	r1, r8
   1f4ac:	str	r5, [r0, r7, lsl #2]
   1f4b0:	mov	r0, r5
   1f4b4:	bl	11c5c <memcpy@plt>
   1f4b8:	add	r3, r7, #1
   1f4bc:	add	r2, r4, #1
   1f4c0:	str	r3, [sp, #96]	; 0x60
   1f4c4:	strb	sl, [r5, r4]
   1f4c8:	add	r5, r5, r2
   1f4cc:	ldrb	r7, [r6, #-1]
   1f4d0:	b	1f2f4 <ASN1_STRING_length@plt+0xd380>
   1f4d4:	ldr	r3, [sp, #40]	; 0x28
   1f4d8:	ldr	r0, [r3]
   1f4dc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f4e0:	cmp	r0, #2
   1f4e4:	ble	1efbc <ASN1_STRING_length@plt+0xd048>
   1f4e8:	ldr	r3, [sp, #40]	; 0x28
   1f4ec:	rsb	r0, r6, #0
   1f4f0:	ldr	r4, [r3]
   1f4f4:	bl	119f8 <strerror@plt>
   1f4f8:	ldr	r2, [pc, #248]	; 1f5f8 <ASN1_STRING_length@plt+0xd684>
   1f4fc:	ldr	r3, [pc, #248]	; 1f5fc <ASN1_STRING_length@plt+0xd688>
   1f500:	add	r2, pc, r2
   1f504:	str	r2, [sp, #4]
   1f508:	ldr	r2, [pc, #240]	; 1f600 <ASN1_STRING_length@plt+0xd68c>
   1f50c:	add	r3, pc, r3
   1f510:	str	r3, [sp]
   1f514:	add	r2, pc, r2
   1f518:	ldr	r3, [pc, #228]	; 1f604 <ASN1_STRING_length@plt+0xd690>
   1f51c:	mov	r1, #3
   1f520:	str	r0, [sp, #8]
   1f524:	mov	r0, r4
   1f528:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f52c:	b	1efbc <ASN1_STRING_length@plt+0xd048>
   1f530:	muleq	r2, r8, r8
   1f534:	strdeq	r0, [r0], -r8
   1f538:	andeq	pc, r0, r8, asr r2	; <UNPREDICTABLE>
   1f53c:	andeq	lr, r0, r0, ror r8
   1f540:	andeq	pc, r0, r0, asr #29
   1f544:	andeq	pc, r0, ip, asr #28
   1f548:	muleq	r0, r8, r6
   1f54c:	andeq	pc, r0, r4, ror ip	; <UNPREDICTABLE>
   1f550:	andeq	lr, r0, r4, ror #11
   1f554:	andeq	pc, r0, r4, ror ip	; <UNPREDICTABLE>
   1f558:	andeq	pc, r0, r4, lsl #25
   1f55c:	andeq	r0, r0, lr, lsl r3
   1f560:	andeq	pc, r0, ip, lsl sp	; <UNPREDICTABLE>
   1f564:	andeq	pc, r0, ip, lsl #26
   1f568:			; <UNDEFINED> instruction: 0x0000e6b0
   1f56c:	andeq	lr, r0, r8, lsl r5
   1f570:	andeq	sp, r0, r4, ror #14
   1f574:	andeq	sp, r0, r0, asr #14
   1f578:	andeq	sp, r0, r8, lsr #13
   1f57c:	andeq	sp, r0, r8, lsl #13
   1f580:	andeq	sp, r0, r8, ror #12
   1f584:	muleq	r0, ip, sp
   1f588:	andeq	lr, r0, ip, lsl #10
   1f58c:	strdeq	sp, [r0], -r4
   1f590:	andeq	pc, r0, r0, ror #22
   1f594:	andeq	pc, r0, r4, asr #18
   1f598:	muleq	r0, r8, r9
   1f59c:	andeq	pc, r0, r4, lsr #8
   1f5a0:	andeq	pc, r0, r0, lsr r9	; <UNPREDICTABLE>
   1f5a4:	andeq	pc, r0, r8, lsl #16
   1f5a8:	andeq	pc, r0, ip, lsl #16
   1f5ac:	andeq	r0, r0, lr, ror #6
   1f5b0:	andeq	pc, r0, r4, lsl r9	; <UNPREDICTABLE>
   1f5b4:	andeq	pc, r0, ip, asr #15
   1f5b8:	andeq	pc, r0, r8, asr #15
   1f5bc:	andeq	pc, r0, ip, asr #18
   1f5c0:	strdeq	pc, [r0], -r8
   1f5c4:	andeq	pc, r0, ip, asr #14
   1f5c8:	andeq	pc, r0, r8, lsl #12
   1f5cc:	andeq	pc, r0, r4, asr #15
   1f5d0:			; <UNDEFINED> instruction: 0x0000f4bc
   1f5d4:	andeq	pc, r0, r4, lsl r4	; <UNPREDICTABLE>
   1f5d8:	andeq	pc, r0, r8, lsl #7
   1f5dc:	andeq	pc, r0, r8, lsr r4	; <UNPREDICTABLE>
   1f5e0:	strdeq	pc, [r0], -r4
   1f5e4:	ldrdeq	pc, [r0], -r0
   1f5e8:	andeq	pc, r0, r4, lsl #5
   1f5ec:	andeq	lr, r0, r0, ror #31
   1f5f0:	andeq	pc, r0, ip, asr r0	; <UNPREDICTABLE>
   1f5f4:	strdeq	r0, [r0], -r9
   1f5f8:	andeq	pc, r0, r4, ror #3
   1f5fc:	andeq	lr, r0, r4, lsl pc
   1f600:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   1f604:	andeq	r0, r0, r1, lsl #4
   1f608:	andeq	lr, r0, ip, lsl #31
   1f60c:	ldrdeq	lr, [r0], -r0
   1f610:	andeq	lr, r0, r0, lsr lr
   1f614:	andeq	r0, r0, r9, asr #4
   1f618:	andeq	lr, r0, r0, ror #24
   1f61c:	andeq	lr, r0, r0, asr #26
   1f620:	andeq	lr, r0, r8, ror #27
   1f624:	andeq	lr, r0, ip, lsr pc
   1f628:	strdeq	lr, [r0], -r8
   1f62c:	andeq	lr, r0, r0, lsr #27
   1f630:	andeq	r0, r0, fp, lsr r1
   1f634:	andeq	lr, r0, r8, asr #28
   1f638:	andeq	lr, r0, ip, asr #26
   1f63c:	andeq	lr, r0, ip, asr sp
   1f640:	andeq	r0, r0, fp, lsr #6
   1f644:			; <UNDEFINED> instruction: 0x0000eeb0
   1f648:	andeq	lr, r0, r0, ror #24
   1f64c:	andeq	lr, r0, r8, lsl #26
   1f650:	andeq	r0, r0, r2, asr #2
   1f654:	ldr	r2, [pc, #-84]	; 1f608 <ASN1_STRING_length@plt+0xd694>
   1f658:	ldr	r0, [sp, #40]	; 0x28
   1f65c:	add	r2, pc, r2
   1f660:	ldr	r3, [pc, #-92]	; 1f60c <ASN1_STRING_length@plt+0xd698>
   1f664:	stmib	sp, {r2, r4}
   1f668:	ldr	r2, [pc, #-96]	; 1f610 <ASN1_STRING_length@plt+0xd69c>
   1f66c:	add	r3, pc, r3
   1f670:	str	r3, [sp]
   1f674:	add	r2, pc, r2
   1f678:	ldr	r3, [pc, #-108]	; 1f614 <ASN1_STRING_length@plt+0xd6a0>
   1f67c:	mov	r1, #3
   1f680:	ldr	r0, [r0]
   1f684:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f688:	b	1f404 <ASN1_STRING_length@plt+0xd490>
   1f68c:	mov	r7, r5
   1f690:	b	1e8b4 <ASN1_STRING_length@plt+0xc940>
   1f694:	ldr	r2, [pc, #-132]	; 1f618 <ASN1_STRING_length@plt+0xd6a4>
   1f698:	ldr	r0, [sp, #40]	; 0x28
   1f69c:	add	r2, pc, r2
   1f6a0:	ldr	r3, [pc, #-140]	; 1f61c <ASN1_STRING_length@plt+0xd6a8>
   1f6a4:	ldr	r1, [sp, #88]	; 0x58
   1f6a8:	str	r2, [sp, #4]
   1f6ac:	ldr	r2, [pc, #-148]	; 1f620 <ASN1_STRING_length@plt+0xd6ac>
   1f6b0:	add	r3, pc, r3
   1f6b4:	str	r1, [sp, #8]
   1f6b8:	str	r3, [sp]
   1f6bc:	add	r2, pc, r2
   1f6c0:	mov	r3, #272	; 0x110
   1f6c4:	mov	r1, #7
   1f6c8:	ldr	r0, [r0]
   1f6cc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f6d0:	b	1f064 <ASN1_STRING_length@plt+0xd0f0>
   1f6d4:	ldr	r2, [pc, #-184]	; 1f624 <ASN1_STRING_length@plt+0xd6b0>
   1f6d8:	ldr	r1, [sp, #68]	; 0x44
   1f6dc:	add	r2, pc, r2
   1f6e0:	ldr	r0, [sp, #40]	; 0x28
   1f6e4:	ldr	r3, [pc, #-196]	; 1f628 <ASN1_STRING_length@plt+0xd6b4>
   1f6e8:	str	r1, [sp, #12]
   1f6ec:	str	r2, [sp, #4]
   1f6f0:	ldr	r1, [sp, #64]	; 0x40
   1f6f4:	ldr	r2, [pc, #-208]	; 1f62c <ASN1_STRING_length@plt+0xd6b8>
   1f6f8:	add	r3, pc, r3
   1f6fc:	str	r1, [sp, #8]
   1f700:	str	r3, [sp]
   1f704:	add	r2, pc, r2
   1f708:	ldr	r3, [pc, #-224]	; 1f630 <ASN1_STRING_length@plt+0xd6bc>
   1f70c:	mov	r1, #7
   1f710:	ldr	r0, [r0]
   1f714:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f718:	b	1f218 <ASN1_STRING_length@plt+0xd2a4>
   1f71c:	mov	r0, r8
   1f720:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f724:	cmp	r0, #2
   1f728:	ble	1e678 <ASN1_STRING_length@plt+0xc704>
   1f72c:	ldr	r2, [pc, #-256]	; 1f634 <ASN1_STRING_length@plt+0xd6c0>
   1f730:	ldr	r3, [pc, #-256]	; 1f638 <ASN1_STRING_length@plt+0xd6c4>
   1f734:	add	r2, pc, r2
   1f738:	add	r3, pc, r3
   1f73c:	stmib	sp, {r2, r5}
   1f740:	ldr	r2, [pc, #-268]	; 1f63c <ASN1_STRING_length@plt+0xd6c8>
   1f744:	str	r3, [sp]
   1f748:	add	r2, pc, r2
   1f74c:	ldr	r3, [pc, #-276]	; 1f640 <ASN1_STRING_length@plt+0xd6cc>
   1f750:	mov	r1, #3
   1f754:	mov	r0, r8
   1f758:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f75c:	b	1e678 <ASN1_STRING_length@plt+0xc704>
   1f760:	ldr	r3, [sp, #40]	; 0x28
   1f764:	ldr	r0, [r3]
   1f768:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   1f76c:	cmp	r0, #2
   1f770:	ble	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1f774:	ldr	r2, [pc, #-312]	; 1f644 <ASN1_STRING_length@plt+0xd6d0>
   1f778:	ldr	r0, [sp, #40]	; 0x28
   1f77c:	add	r2, pc, r2
   1f780:	ldr	r3, [pc, #-320]	; 1f648 <ASN1_STRING_length@plt+0xd6d4>
   1f784:	ldr	r1, [sp, #88]	; 0x58
   1f788:	str	r2, [sp, #4]
   1f78c:	ldr	r2, [pc, #-328]	; 1f64c <ASN1_STRING_length@plt+0xd6d8>
   1f790:	add	r3, pc, r3
   1f794:	str	r1, [sp, #8]
   1f798:	str	r3, [sp]
   1f79c:	add	r2, pc, r2
   1f7a0:	ldr	r3, [pc, #-344]	; 1f650 <ASN1_STRING_length@plt+0xd6dc>
   1f7a4:	mov	r1, #3
   1f7a8:	ldr	r0, [r0]
   1f7ac:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   1f7b0:	b	1eac4 <ASN1_STRING_length@plt+0xcb50>
   1f7b4:	bl	11d88 <__stack_chk_fail@plt>
   1f7b8:	ldr	r4, [sp, #92]	; 0x5c
   1f7bc:	mov	r6, r5
   1f7c0:	ldr	r9, [sp, #80]	; 0x50
   1f7c4:	ldr	r5, [sp, #96]	; 0x60
   1f7c8:	ldr	sl, [sp, #100]	; 0x64
   1f7cc:	str	r8, [sp, #92]	; 0x5c
   1f7d0:	b	1f204 <ASN1_STRING_length@plt+0xd290>
   1f7d4:	cmp	r0, #0
   1f7d8:	bxeq	lr
   1f7dc:	mov	r1, #0
   1f7e0:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f7e4:	cmp	r0, #0
   1f7e8:	bxeq	lr
   1f7ec:	mov	r1, #1
   1f7f0:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f7f4:	cmp	r0, #0
   1f7f8:	bxeq	lr
   1f7fc:	mov	r1, #2
   1f800:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f804:	cmp	r0, #0
   1f808:	bxeq	lr
   1f80c:	mov	r1, #3
   1f810:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f814:	cmp	r0, #0
   1f818:	bxeq	lr
   1f81c:	mov	r1, #4
   1f820:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f824:	cmp	r0, #0
   1f828:	bxeq	lr
   1f82c:	mov	r1, #5
   1f830:	b	1de40 <ASN1_STRING_length@plt+0xbecc>
   1f834:	subs	r3, r0, #0
   1f838:	beq	1f850 <ASN1_STRING_length@plt+0xd8dc>
   1f83c:	ldr	r0, [r3, #12]
   1f840:	cmp	r0, #0
   1f844:	beq	1f850 <ASN1_STRING_length@plt+0xd8dc>
   1f848:	ldr	r3, [r3, #20]
   1f84c:	bx	r3
   1f850:	mov	r0, #0
   1f854:	bx	lr
   1f858:	push	{r4, lr}
   1f85c:	subs	r4, r0, #0
   1f860:	beq	1f8ac <ASN1_STRING_length@plt+0xd938>
   1f864:	ldr	r0, [r4, #12]
   1f868:	cmp	r0, #0
   1f86c:	popeq	{r4, pc}
   1f870:	ldr	r2, [r4, #24]
   1f874:	cmp	r2, #0
   1f878:	beq	1f8b4 <ASN1_STRING_length@plt+0xd940>
   1f87c:	ldrb	r1, [r4, #4]
   1f880:	cmp	r1, #0
   1f884:	bne	1f890 <ASN1_STRING_length@plt+0xd91c>
   1f888:	pop	{r4, lr}
   1f88c:	bx	r2
   1f890:	ldr	r0, [r4, #16]
   1f894:	bl	11ba8 <free@plt>
   1f898:	ldr	r3, [r4, #24]
   1f89c:	ldr	r0, [r4, #12]
   1f8a0:	blx	r3
   1f8a4:	str	r0, [r4, #16]
   1f8a8:	pop	{r4, pc}
   1f8ac:	mov	r0, r4
   1f8b0:	pop	{r4, pc}
   1f8b4:	mov	r0, r2
   1f8b8:	pop	{r4, pc}
   1f8bc:	push	{r4, lr}
   1f8c0:	subs	r4, r0, #0
   1f8c4:	beq	1f8e8 <ASN1_STRING_length@plt+0xd974>
   1f8c8:	ldrd	r0, [r4, #8]
   1f8cc:	cmp	r1, #0
   1f8d0:	beq	1f8d8 <ASN1_STRING_length@plt+0xd964>
   1f8d4:	bl	1d99c <ASN1_STRING_length@plt+0xba28>
   1f8d8:	str	r0, [r4, #12]
   1f8dc:	adds	r0, r0, #0
   1f8e0:	movne	r0, #1
   1f8e4:	pop	{r4, pc}
   1f8e8:	mov	r0, r4
   1f8ec:	pop	{r4, pc}
   1f8f0:	push	{r4, lr}
   1f8f4:	mov	r4, r0
   1f8f8:	ldr	r0, [r0, #16]
   1f8fc:	bl	11ba8 <free@plt>
   1f900:	mov	r0, r4
   1f904:	pop	{r4, lr}
   1f908:	b	11ba8 <free@plt>
   1f90c:	push	{r4, r5, r6, lr}
   1f910:	mov	r5, r0
   1f914:	ldr	r0, [r0, #4]
   1f918:	bl	11ba8 <free@plt>
   1f91c:	ldr	r0, [r5, #8]
   1f920:	cmp	r0, #0
   1f924:	beq	1f938 <ASN1_STRING_length@plt+0xd9c4>
   1f928:	ldr	r4, [r0]
   1f92c:	bl	11ba8 <free@plt>
   1f930:	subs	r0, r4, #0
   1f934:	bne	1f928 <ASN1_STRING_length@plt+0xd9b4>
   1f938:	mov	r0, r5
   1f93c:	pop	{r4, r5, r6, lr}
   1f940:	b	11ba8 <free@plt>
   1f944:	ldr	r2, [pc, #96]	; 1f9ac <ASN1_STRING_length@plt+0xda38>
   1f948:	ldr	r1, [pc, #96]	; 1f9b0 <ASN1_STRING_length@plt+0xda3c>
   1f94c:	add	r2, pc, r2
   1f950:	push	{r4, r5, lr}
   1f954:	sub	sp, sp, #12
   1f958:	ldr	r4, [r2, r1]
   1f95c:	mov	r5, r0
   1f960:	ldr	r3, [r4]
   1f964:	str	r3, [sp, #4]
   1f968:	bl	11f38 <__errno_location@plt>
   1f96c:	mov	r2, #0
   1f970:	mov	r3, r5
   1f974:	mov	r1, #4
   1f978:	str	r2, [r0]
   1f97c:	mov	r2, #1
   1f980:	mov	r0, sp
   1f984:	bl	11e9c <fread@plt>
   1f988:	ldr	r2, [sp, #4]
   1f98c:	ldr	r3, [r4]
   1f990:	ldr	r0, [sp]
   1f994:	cmp	r2, r3
   1f998:	bne	1f9a8 <ASN1_STRING_length@plt+0xda34>
   1f99c:	rev	r0, r0
   1f9a0:	add	sp, sp, #12
   1f9a4:	pop	{r4, r5, pc}
   1f9a8:	bl	11d88 <__stack_chk_fail@plt>
   1f9ac:	andeq	r0, r2, r8, lsr #9
   1f9b0:	strdeq	r0, [r0], -r8
   1f9b4:	push	{r4, lr}
   1f9b8:	mov	r4, r0
   1f9bc:	bl	11f38 <__errno_location@plt>
   1f9c0:	ldr	r3, [r4, #4]
   1f9c4:	ldr	r1, [r4, #8]
   1f9c8:	mov	r2, #0
   1f9cc:	cmp	r3, r1
   1f9d0:	str	r2, [r0]
   1f9d4:	bcs	1f9e8 <ASN1_STRING_length@plt+0xda74>
   1f9d8:	add	r2, r3, #1
   1f9dc:	str	r2, [r4, #4]
   1f9e0:	ldrb	r0, [r3]
   1f9e4:	pop	{r4, pc}
   1f9e8:	mov	r0, r4
   1f9ec:	pop	{r4, lr}
   1f9f0:	b	11af4 <__uflow@plt>
   1f9f4:	push	{r4, r5, r6, lr}
   1f9f8:	mov	r6, r0
   1f9fc:	mov	r5, r1
   1fa00:	mov	r4, #0
   1fa04:	b	1fa18 <ASN1_STRING_length@plt+0xdaa4>
   1fa08:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   1fa0c:	cmp	r0, #0
   1fa10:	beq	1fa30 <ASN1_STRING_length@plt+0xdabc>
   1fa14:	add	r4, r4, #1
   1fa18:	mov	r0, r5
   1fa1c:	bl	1f9b4 <ASN1_STRING_length@plt+0xda40>
   1fa20:	subs	r1, r0, #0
   1fa24:	mov	r0, r6
   1fa28:	uxtb	r1, r1
   1fa2c:	bne	1fa08 <ASN1_STRING_length@plt+0xda94>
   1fa30:	mov	r0, r4
   1fa34:	pop	{r4, r5, r6, pc}
   1fa38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fa3c:	mov	r5, r0
   1fa40:	ldr	r4, [r0]
   1fa44:	mov	r9, r1
   1fa48:	cmp	r4, #0
   1fa4c:	mov	r7, r2
   1fa50:	mov	r6, r3
   1fa54:	beq	1fa84 <ASN1_STRING_length@plt+0xdb10>
   1fa58:	ldr	r3, [r4, #4]
   1fa5c:	cmp	r6, r3
   1fa60:	bhi	1fa74 <ASN1_STRING_length@plt+0xdb00>
   1fa64:	b	1fa84 <ASN1_STRING_length@plt+0xdb10>
   1fa68:	ldr	r2, [r4, #4]
   1fa6c:	cmp	r2, r6
   1fa70:	bcs	1fa84 <ASN1_STRING_length@plt+0xdb10>
   1fa74:	mov	r5, r4
   1fa78:	ldr	r4, [r4]
   1fa7c:	cmp	r4, #0
   1fa80:	bne	1fa68 <ASN1_STRING_length@plt+0xdaf4>
   1fa84:	add	r0, r7, #13
   1fa88:	bl	11d64 <malloc@plt>
   1fa8c:	subs	r8, r0, #0
   1fa90:	beq	1fabc <ASN1_STRING_length@plt+0xdb48>
   1fa94:	stm	r8, {r4, r6, r7}
   1fa98:	mov	r2, r7
   1fa9c:	mov	r1, r9
   1faa0:	add	r0, r8, #12
   1faa4:	add	r7, r8, r7
   1faa8:	bl	11c5c <memcpy@plt>
   1faac:	mov	r0, #0
   1fab0:	strb	r0, [r7, #12]
   1fab4:	str	r8, [r5]
   1fab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fabc:	mvn	r0, #0
   1fac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fac4:	push	{r4, r5, r6, r7, r8, lr}
   1fac8:	mov	r7, r0
   1facc:	ldrd	r4, [r0, #8]
   1fad0:	add	r5, r5, r5, lsl #1
   1fad4:	add	r5, r4, r5, lsl #2
   1fad8:	cmp	r4, r5
   1fadc:	bcs	1fb04 <ASN1_STRING_length@plt+0xdb90>
   1fae0:	mov	r6, r1
   1fae4:	ldr	r3, [r4]
   1fae8:	ldr	r2, [r4, #4]
   1faec:	ldr	r1, [r4, #8]
   1faf0:	mov	r0, r6
   1faf4:	add	r4, r4, #12
   1faf8:	bl	1fa38 <ASN1_STRING_length@plt+0xdac4>
   1fafc:	cmp	r5, r4
   1fb00:	bhi	1fae4 <ASN1_STRING_length@plt+0xdb70>
   1fb04:	mov	r0, r7
   1fb08:	pop	{r4, r5, r6, r7, r8, lr}
   1fb0c:	b	11ba8 <free@plt>
   1fb10:	ldr	r3, [pc, #456]	; 1fce0 <ASN1_STRING_length@plt+0xdd6c>
   1fb14:	ldr	r2, [pc, #456]	; 1fce4 <ASN1_STRING_length@plt+0xdd70>
   1fb18:	add	r3, pc, r3
   1fb1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb20:	sub	sp, sp, #28
   1fb24:	ldr	r8, [r3, r2]
   1fb28:	mov	r6, r1
   1fb2c:	bics	r1, r1, #-268435456	; 0xf0000000
   1fb30:	ldr	r3, [r8]
   1fb34:	str	r3, [sp, #20]
   1fb38:	beq	1fcd4 <ASN1_STRING_length@plt+0xdd60>
   1fb3c:	mov	r2, #0
   1fb40:	mov	r4, r0
   1fb44:	bl	11c08 <fseek@plt>
   1fb48:	cmp	r0, #0
   1fb4c:	blt	1fcd4 <ASN1_STRING_length@plt+0xdd60>
   1fb50:	cmp	r6, #0
   1fb54:	blt	1fc08 <ASN1_STRING_length@plt+0xdc94>
   1fb58:	ldr	r0, [pc, #392]	; 1fce8 <ASN1_STRING_length@plt+0xdd74>
   1fb5c:	add	r0, pc, r0
   1fb60:	bl	11d4c <strdup@plt>
   1fb64:	tst	r6, #536870912	; 0x20000000
   1fb68:	mov	r9, r0
   1fb6c:	beq	1fc34 <ASN1_STRING_length@plt+0xdcc0>
   1fb70:	mov	r0, r4
   1fb74:	bl	1f9b4 <ASN1_STRING_length@plt+0xda40>
   1fb78:	mov	fp, r0
   1fb7c:	mov	r0, r4
   1fb80:	bl	1f9b4 <ASN1_STRING_length@plt+0xda40>
   1fb84:	uxtb	r5, fp
   1fb88:	uxtb	sl, r0
   1fb8c:	sub	r5, sl, r5
   1fb90:	str	r0, [sp, #4]
   1fb94:	add	r0, r5, #5
   1fb98:	lsl	r0, r0, #2
   1fb9c:	bl	11d64 <malloc@plt>
   1fba0:	ldr	r3, [sp, #4]
   1fba4:	cmp	r5, #0
   1fba8:	mov	r7, r0
   1fbac:	strb	fp, [r0, #12]
   1fbb0:	strb	r3, [r0, #13]
   1fbb4:	blt	1fbd8 <ASN1_STRING_length@plt+0xdc64>
   1fbb8:	add	sl, r0, #16
   1fbbc:	add	sl, sl, r5, lsl #2
   1fbc0:	add	r5, r0, #12
   1fbc4:	mov	r0, r4
   1fbc8:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   1fbcc:	str	r0, [r5, #4]!
   1fbd0:	cmp	r5, sl
   1fbd4:	bne	1fbc4 <ASN1_STRING_length@plt+0xdc50>
   1fbd8:	mov	r3, #0
   1fbdc:	tst	r6, #1073741824	; 0x40000000
   1fbe0:	str	r3, [r7, #8]
   1fbe4:	bne	1fc58 <ASN1_STRING_length@plt+0xdce4>
   1fbe8:	stm	r7, {r4, r9}
   1fbec:	ldr	r2, [sp, #20]
   1fbf0:	ldr	r3, [r8]
   1fbf4:	mov	r0, r7
   1fbf8:	cmp	r2, r3
   1fbfc:	bne	1fcdc <ASN1_STRING_length@plt+0xdd68>
   1fc00:	add	sp, sp, #28
   1fc04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc08:	add	r5, sp, #8
   1fc0c:	mov	r0, r5
   1fc10:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   1fc14:	mov	r1, r4
   1fc18:	mov	r0, r5
   1fc1c:	bl	1f9f4 <ASN1_STRING_length@plt+0xda80>
   1fc20:	mov	r0, r5
   1fc24:	bl	29f60 <ASN1_STRING_length@plt+0x17fec>
   1fc28:	tst	r6, #536870912	; 0x20000000
   1fc2c:	mov	r9, r0
   1fc30:	bne	1fb70 <ASN1_STRING_length@plt+0xdbfc>
   1fc34:	mov	r0, #16
   1fc38:	bl	11d64 <malloc@plt>
   1fc3c:	mov	r3, #128	; 0x80
   1fc40:	tst	r6, #1073741824	; 0x40000000
   1fc44:	mov	r7, r0
   1fc48:	strh	r3, [r0, #12]
   1fc4c:	mov	r3, #0
   1fc50:	str	r3, [r7, #8]
   1fc54:	beq	1fbe8 <ASN1_STRING_length@plt+0xdc74>
   1fc58:	mov	r0, r4
   1fc5c:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   1fc60:	add	r6, sp, #8
   1fc64:	mov	r5, r0
   1fc68:	mov	r0, r6
   1fc6c:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   1fc70:	cmp	r5, #0
   1fc74:	addne	fp, r7, #8
   1fc78:	sub	r5, r5, #1
   1fc7c:	beq	1fcc8 <ASN1_STRING_length@plt+0xdd54>
   1fc80:	mov	r0, r4
   1fc84:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   1fc88:	mov	r1, r4
   1fc8c:	sub	r5, r5, #1
   1fc90:	mov	sl, r0
   1fc94:	mov	r0, r6
   1fc98:	bl	1f9f4 <ASN1_STRING_length@plt+0xda80>
   1fc9c:	mov	r0, r6
   1fca0:	bl	29fa0 <ASN1_STRING_length@plt+0x1802c>
   1fca4:	mov	r3, sl
   1fca8:	ldr	r2, [sp, #16]
   1fcac:	mov	r1, r0
   1fcb0:	mov	r0, fp
   1fcb4:	bl	1fa38 <ASN1_STRING_length@plt+0xdac4>
   1fcb8:	mov	r0, r6
   1fcbc:	bl	2a18c <ASN1_STRING_length@plt+0x18218>
   1fcc0:	cmn	r5, #1
   1fcc4:	bne	1fc80 <ASN1_STRING_length@plt+0xdd0c>
   1fcc8:	mov	r0, r6
   1fccc:	bl	29f58 <ASN1_STRING_length@plt+0x17fe4>
   1fcd0:	b	1fbe8 <ASN1_STRING_length@plt+0xdc74>
   1fcd4:	mov	r7, #0
   1fcd8:	b	1fbec <ASN1_STRING_length@plt+0xdc78>
   1fcdc:	bl	11d88 <__stack_chk_fail@plt>
   1fce0:	ldrdeq	r0, [r2], -ip
   1fce4:	strdeq	r0, [r0], -r8
   1fce8:	andeq	sp, r0, r0, lsl #10
   1fcec:	push	{r4, r5, r6, lr}
   1fcf0:	mov	r6, r0
   1fcf4:	ldr	r4, [r0, #8]
   1fcf8:	cmp	r4, #0
   1fcfc:	beq	1fd24 <ASN1_STRING_length@plt+0xddb0>
   1fd00:	mov	r5, r1
   1fd04:	ldr	r3, [r4, #4]
   1fd08:	ldr	r2, [r4, #8]
   1fd0c:	add	r1, r4, #12
   1fd10:	mov	r0, r5
   1fd14:	bl	1fa38 <ASN1_STRING_length@plt+0xdac4>
   1fd18:	ldr	r4, [r4]
   1fd1c:	cmp	r4, #0
   1fd20:	bne	1fd04 <ASN1_STRING_length@plt+0xdd90>
   1fd24:	mov	r0, r6
   1fd28:	pop	{r4, r5, r6, lr}
   1fd2c:	b	1f90c <ASN1_STRING_length@plt+0xd998>
   1fd30:	ldr	r3, [pc, #568]	; 1ff70 <ASN1_STRING_length@plt+0xdffc>
   1fd34:	ldr	r2, [pc, #568]	; 1ff74 <ASN1_STRING_length@plt+0xe000>
   1fd38:	add	r3, pc, r3
   1fd3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fd40:	mov	r4, r1
   1fd44:	ldr	r1, [r3, r2]
   1fd48:	sub	sp, sp, #540	; 0x21c
   1fd4c:	bics	r2, r4, #-268435456	; 0xf0000000
   1fd50:	ldr	r3, [r1]
   1fd54:	str	r1, [sp, #4]
   1fd58:	ldr	r5, [r0, #4]
   1fd5c:	str	r3, [sp, #532]	; 0x214
   1fd60:	beq	1ff5c <ASN1_STRING_length@plt+0xdfe8>
   1fd64:	cmp	r4, #0
   1fd68:	mov	r9, r0
   1fd6c:	add	r5, r5, r2
   1fd70:	blt	1feec <ASN1_STRING_length@plt+0xdf78>
   1fd74:	ldr	r8, [pc, #508]	; 1ff78 <ASN1_STRING_length@plt+0xe004>
   1fd78:	ands	r7, r4, #536870912	; 0x20000000
   1fd7c:	add	r8, pc, r8
   1fd80:	beq	1ff08 <ASN1_STRING_length@plt+0xdf94>
   1fd84:	ldrb	sl, [r5]
   1fd88:	ldrb	fp, [r5, #1]
   1fd8c:	add	ip, r5, #2
   1fd90:	str	ip, [sp, #8]
   1fd94:	sub	r6, fp, sl
   1fd98:	add	r7, r6, #1
   1fd9c:	cmp	r7, #0
   1fda0:	str	r7, [sp, #12]
   1fda4:	add	r0, r6, #6
   1fda8:	ble	1ff64 <ASN1_STRING_length@plt+0xdff0>
   1fdac:	add	r6, r5, r6, lsl #2
   1fdb0:	add	r6, r6, #6
   1fdb4:	add	lr, sp, #20
   1fdb8:	ldrb	r5, [ip, #1]
   1fdbc:	ldrb	r3, [ip]
   1fdc0:	ldrb	r1, [ip, #2]
   1fdc4:	ldrb	r2, [ip, #3]
   1fdc8:	orr	r3, r3, r5, lsl #8
   1fdcc:	add	ip, ip, #4
   1fdd0:	orr	r3, r3, r1, lsl #16
   1fdd4:	orr	r3, r3, r2, lsl #24
   1fdd8:	rev	r3, r3
   1fddc:	cmp	ip, r6
   1fde0:	str	r3, [lr], #4
   1fde4:	bne	1fdb8 <ASN1_STRING_length@plt+0xde44>
   1fde8:	ldr	r2, [sp, #12]
   1fdec:	ldr	r3, [sp, #8]
   1fdf0:	add	r5, r3, r2, lsl #2
   1fdf4:	tst	r4, #1073741824	; 0x40000000
   1fdf8:	beq	1ff1c <ASN1_STRING_length@plt+0xdfa8>
   1fdfc:	mov	r4, r5
   1fe00:	ldrb	ip, [r5, #1]
   1fe04:	ldrb	r1, [r5, #2]
   1fe08:	ldrb	r3, [r4], #4
   1fe0c:	ldrb	r2, [r5, #3]
   1fe10:	orr	r3, r3, ip, lsl #8
   1fe14:	orr	r3, r3, r1, lsl #16
   1fe18:	orr	r3, r3, r2, lsl #24
   1fe1c:	rev	r6, r3
   1fe20:	add	r3, r6, r6, lsl #1
   1fe24:	add	r0, r3, r0
   1fe28:	str	r3, [sp, #8]
   1fe2c:	lsl	r0, r0, #2
   1fe30:	bl	11d64 <malloc@plt>
   1fe34:	subs	r5, r0, #0
   1fe38:	beq	1ff5c <ASN1_STRING_length@plt+0xdfe8>
   1fe3c:	cmp	r6, #0
   1fe40:	str	r9, [r5]
   1fe44:	str	r8, [r5, #4]
   1fe48:	lsl	r2, r7, #2
   1fe4c:	add	r0, r5, #20
   1fe50:	beq	1ff3c <ASN1_STRING_length@plt+0xdfc8>
   1fe54:	add	r7, r2, #20
   1fe58:	add	r7, r5, r7
   1fe5c:	str	r6, [r5, #12]
   1fe60:	strb	sl, [r5, #16]
   1fe64:	strb	fp, [r5, #17]
   1fe68:	str	r7, [r5, #8]
   1fe6c:	add	r1, sp, #20
   1fe70:	bl	11c5c <memcpy@plt>
   1fe74:	cmp	r6, #0
   1fe78:	ble	1fecc <ASN1_STRING_length@plt+0xdf58>
   1fe7c:	ldr	r3, [sp, #8]
   1fe80:	add	r6, r7, r3, lsl #2
   1fe84:	mov	r8, r4
   1fe88:	ldrb	r0, [r4, #1]
   1fe8c:	ldrb	r3, [r8], #4
   1fe90:	ldrb	r1, [r4, #2]
   1fe94:	ldrb	r2, [r4, #3]
   1fe98:	orr	r3, r3, r0, lsl #8
   1fe9c:	mov	r0, r8
   1fea0:	orr	r3, r3, r1, lsl #16
   1fea4:	orr	r3, r3, r2, lsl #24
   1fea8:	rev	r3, r3
   1feac:	str	r3, [r7]
   1feb0:	bl	11c44 <strlen@plt>
   1feb4:	stmib	r7, {r0, r8}
   1feb8:	add	r7, r7, #12
   1febc:	add	r0, r0, #1
   1fec0:	cmp	r6, r7
   1fec4:	add	r4, r8, r0
   1fec8:	bne	1fe84 <ASN1_STRING_length@plt+0xdf10>
   1fecc:	ldr	r3, [sp, #4]
   1fed0:	ldr	r2, [sp, #532]	; 0x214
   1fed4:	mov	r0, r5
   1fed8:	ldr	r3, [r3]
   1fedc:	cmp	r2, r3
   1fee0:	bne	1ff6c <ASN1_STRING_length@plt+0xdff8>
   1fee4:	add	sp, sp, #540	; 0x21c
   1fee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1feec:	mov	r0, r5
   1fef0:	bl	11c44 <strlen@plt>
   1fef4:	ands	r7, r4, #536870912	; 0x20000000
   1fef8:	mov	r8, r5
   1fefc:	add	r0, r0, #1
   1ff00:	add	r5, r5, r0
   1ff04:	bne	1fd84 <ASN1_STRING_length@plt+0xde10>
   1ff08:	tst	r4, #1073741824	; 0x40000000
   1ff0c:	mov	r0, #5
   1ff10:	mov	fp, r7
   1ff14:	mov	sl, #128	; 0x80
   1ff18:	bne	1fdfc <ASN1_STRING_length@plt+0xde88>
   1ff1c:	lsl	r0, r0, #2
   1ff20:	bl	11d64 <malloc@plt>
   1ff24:	subs	r5, r0, #0
   1ff28:	lslne	r2, r7, #2
   1ff2c:	strne	r9, [r5]
   1ff30:	strne	r8, [r5, #4]
   1ff34:	addne	r0, r5, #20
   1ff38:	beq	1ff5c <ASN1_STRING_length@plt+0xdfe8>
   1ff3c:	mov	r3, #0
   1ff40:	strb	sl, [r5, #16]
   1ff44:	strb	fp, [r5, #17]
   1ff48:	str	r3, [r5, #8]
   1ff4c:	str	r3, [r5, #12]
   1ff50:	add	r1, sp, #20
   1ff54:	bl	11c5c <memcpy@plt>
   1ff58:	b	1fecc <ASN1_STRING_length@plt+0xdf58>
   1ff5c:	mov	r5, #0
   1ff60:	b	1fecc <ASN1_STRING_length@plt+0xdf58>
   1ff64:	ldr	r5, [sp, #8]
   1ff68:	b	1fdf4 <ASN1_STRING_length@plt+0xde80>
   1ff6c:	bl	11d88 <__stack_chk_fail@plt>
   1ff70:	strheq	r0, [r2], -ip
   1ff74:	strdeq	r0, [r0], -r8
   1ff78:			; <UNDEFINED> instruction: 0x0000e9b4
   1ff7c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff80:	mov	r7, r0
   1ff84:	mov	r6, r1
   1ff88:	mov	r0, r1
   1ff8c:	ldr	r1, [r7, #4]
   1ff90:	mov	r5, r2
   1ff94:	bl	2a02c <ASN1_STRING_length@plt+0x180b8>
   1ff98:	ldr	r8, [r7, #12]
   1ff9c:	ldr	r4, [r7, #8]
   1ffa0:	add	r8, r8, r8, lsl #1
   1ffa4:	add	r8, r4, r8, lsl #2
   1ffa8:	cmp	r4, r8
   1ffac:	mov	r9, r0
   1ffb0:	bcs	20010 <ASN1_STRING_length@plt+0xe09c>
   1ffb4:	ldr	fp, [pc, #248]	; 200b4 <ASN1_STRING_length@plt+0xe140>
   1ffb8:	ldr	sl, [pc, #248]	; 200b8 <ASN1_STRING_length@plt+0xe144>
   1ffbc:	add	fp, pc, fp
   1ffc0:	add	sl, pc, sl
   1ffc4:	ldr	r2, [r6, #8]
   1ffc8:	ldr	r1, [r6]
   1ffcc:	mov	r0, r5
   1ffd0:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   1ffd4:	mov	r2, #1
   1ffd8:	mov	r1, fp
   1ffdc:	mov	r0, r5
   1ffe0:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   1ffe4:	ldr	r2, [r4, #4]
   1ffe8:	ldr	r1, [r4, #8]
   1ffec:	mov	r0, r5
   1fff0:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   1fff4:	add	r4, r4, #12
   1fff8:	mov	r2, #1
   1fffc:	mov	r1, sl
   20000:	mov	r0, r5
   20004:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   20008:	cmp	r8, r4
   2000c:	bhi	1ffc4 <ASN1_STRING_length@plt+0xe050>
   20010:	ldrb	r2, [r7, #16]
   20014:	ldrb	r1, [r7, #17]
   20018:	mov	r4, r2
   2001c:	cmp	r2, r1
   20020:	bgt	2009c <ASN1_STRING_length@plt+0xe128>
   20024:	sub	r3, r4, r2
   20028:	cmp	r4, r2
   2002c:	add	r3, r7, r3, lsl #2
   20030:	blt	20070 <ASN1_STRING_length@plt+0xe0fc>
   20034:	ldr	r1, [r3, #20]
   20038:	ldr	r0, [r7]
   2003c:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20040:	uxtb	r1, r4
   20044:	subs	r8, r0, #0
   20048:	mov	r0, r6
   2004c:	beq	2006c <ASN1_STRING_length@plt+0xe0f8>
   20050:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20054:	mov	r0, r8
   20058:	mov	r2, r5
   2005c:	mov	r1, r6
   20060:	bl	1ff7c <ASN1_STRING_length@plt+0xe008>
   20064:	mov	r0, r6
   20068:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   2006c:	ldrb	r1, [r7, #17]
   20070:	add	r4, r4, #1
   20074:	cmp	r1, r4
   20078:	blt	2009c <ASN1_STRING_length@plt+0xe128>
   2007c:	ldrb	r2, [r7, #16]
   20080:	sub	r3, r4, r2
   20084:	cmp	r4, r2
   20088:	add	r3, r7, r3, lsl #2
   2008c:	bge	20034 <ASN1_STRING_length@plt+0xe0c0>
   20090:	add	r4, r4, #1
   20094:	cmp	r1, r4
   20098:	bge	2007c <ASN1_STRING_length@plt+0xe108>
   2009c:	mov	r0, r6
   200a0:	mov	r1, r9
   200a4:	bl	2a144 <ASN1_STRING_length@plt+0x181d0>
   200a8:	mov	r0, r7
   200ac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200b0:	b	11ba8 <free@plt>
   200b4:	andeq	lr, r0, r8, asr r7
   200b8:	muleq	r0, r0, sl
   200bc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200c0:	mov	r8, r0
   200c4:	mov	r6, r1
   200c8:	mov	r0, r1
   200cc:	ldr	r1, [r8, #4]
   200d0:	mov	r4, r2
   200d4:	bl	2a02c <ASN1_STRING_length@plt+0x180b8>
   200d8:	ldr	r5, [r8, #8]
   200dc:	cmp	r5, #0
   200e0:	mov	r9, r0
   200e4:	beq	20150 <ASN1_STRING_length@plt+0xe1dc>
   200e8:	ldr	fp, [pc, #260]	; 201f4 <ASN1_STRING_length@plt+0xe280>
   200ec:	ldr	sl, [pc, #260]	; 201f8 <ASN1_STRING_length@plt+0xe284>
   200f0:	add	fp, pc, fp
   200f4:	add	sl, pc, sl
   200f8:	ldr	r2, [r6, #8]
   200fc:	ldr	r1, [r6]
   20100:	mov	r0, r4
   20104:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   20108:	add	r7, r5, #12
   2010c:	mov	r2, #1
   20110:	mov	r1, fp
   20114:	mov	r0, r4
   20118:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   2011c:	mov	r0, r7
   20120:	bl	11c44 <strlen@plt>
   20124:	mov	r1, r7
   20128:	mov	r2, r0
   2012c:	mov	r0, r4
   20130:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   20134:	mov	r2, #1
   20138:	mov	r1, sl
   2013c:	mov	r0, r4
   20140:	bl	1b754 <ASN1_STRING_length@plt+0x97e0>
   20144:	ldr	r5, [r5]
   20148:	cmp	r5, #0
   2014c:	bne	200f8 <ASN1_STRING_length@plt+0xe184>
   20150:	ldrb	r2, [r8, #12]
   20154:	ldrb	r1, [r8, #13]
   20158:	mov	r5, r2
   2015c:	cmp	r2, r1
   20160:	bgt	201dc <ASN1_STRING_length@plt+0xe268>
   20164:	sub	r3, r5, r2
   20168:	cmp	r2, r5
   2016c:	add	r3, r3, #4
   20170:	bgt	201b0 <ASN1_STRING_length@plt+0xe23c>
   20174:	ldr	r1, [r8, r3, lsl #2]
   20178:	ldr	r0, [r8]
   2017c:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   20180:	uxtb	r1, r5
   20184:	subs	r7, r0, #0
   20188:	mov	r0, r6
   2018c:	beq	201ac <ASN1_STRING_length@plt+0xe238>
   20190:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20194:	mov	r0, r7
   20198:	mov	r2, r4
   2019c:	mov	r1, r6
   201a0:	bl	200bc <ASN1_STRING_length@plt+0xe148>
   201a4:	mov	r0, r6
   201a8:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   201ac:	ldrb	r1, [r8, #13]
   201b0:	add	r5, r5, #1
   201b4:	cmp	r1, r5
   201b8:	blt	201dc <ASN1_STRING_length@plt+0xe268>
   201bc:	ldrb	r2, [r8, #12]
   201c0:	sub	r3, r5, r2
   201c4:	cmp	r2, r5
   201c8:	add	r3, r3, #4
   201cc:	ble	20174 <ASN1_STRING_length@plt+0xe200>
   201d0:	add	r5, r5, #1
   201d4:	cmp	r1, r5
   201d8:	bge	201bc <ASN1_STRING_length@plt+0xe248>
   201dc:	mov	r0, r6
   201e0:	mov	r1, r9
   201e4:	bl	2a144 <ASN1_STRING_length@plt+0x181d0>
   201e8:	mov	r0, r8
   201ec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201f0:	b	1f90c <ASN1_STRING_length@plt+0xd998>
   201f4:	andeq	lr, r0, r4, lsr #12
   201f8:	andeq	sp, r0, ip, asr r9
   201fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20200:	mov	r7, r1
   20204:	ldr	r1, [r0, #4]
   20208:	sub	sp, sp, #8
   2020c:	mov	r5, r0
   20210:	ldrb	r1, [r1, r7]
   20214:	mov	r6, r2
   20218:	mov	r8, r3
   2021c:	cmp	r1, #0
   20220:	ldr	r9, [sp, #40]	; 0x28
   20224:	beq	20338 <ASN1_STRING_length@plt+0xe3c4>
   20228:	mov	r4, #0
   2022c:	mov	r0, r6
   20230:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20234:	ldr	r3, [r5, #4]
   20238:	add	r4, r4, #1
   2023c:	add	r3, r3, r7
   20240:	mov	sl, r4
   20244:	ldrb	r1, [r3, r4]
   20248:	cmp	r1, #0
   2024c:	bne	2022c <ASN1_STRING_length@plt+0xe2b8>
   20250:	ldrb	r2, [r5, #16]
   20254:	ldrb	r1, [r5, #17]
   20258:	mov	r4, r2
   2025c:	cmp	r2, r1
   20260:	bgt	202e4 <ASN1_STRING_length@plt+0xe370>
   20264:	sub	r3, r4, r2
   20268:	cmp	r2, r4
   2026c:	add	r3, r5, r3, lsl #2
   20270:	bgt	202b8 <ASN1_STRING_length@plt+0xe344>
   20274:	ldr	r1, [r3, #20]
   20278:	ldr	r0, [r5]
   2027c:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20280:	uxtb	r1, r4
   20284:	subs	r7, r0, #0
   20288:	mov	r0, r6
   2028c:	beq	202b4 <ASN1_STRING_length@plt+0xe340>
   20290:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20294:	mov	r0, r7
   20298:	str	r9, [sp]
   2029c:	mov	r3, r8
   202a0:	mov	r2, r6
   202a4:	mov	r1, #0
   202a8:	bl	201fc <ASN1_STRING_length@plt+0xe288>
   202ac:	mov	r0, r6
   202b0:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   202b4:	ldrb	r1, [r5, #17]
   202b8:	add	r4, r4, #1
   202bc:	cmp	r1, r4
   202c0:	blt	202e4 <ASN1_STRING_length@plt+0xe370>
   202c4:	ldrb	r2, [r5, #16]
   202c8:	sub	r3, r4, r2
   202cc:	cmp	r2, r4
   202d0:	add	r3, r5, r3, lsl #2
   202d4:	ble	20274 <ASN1_STRING_length@plt+0xe300>
   202d8:	add	r4, r4, #1
   202dc:	cmp	r1, r4
   202e0:	bge	202c4 <ASN1_STRING_length@plt+0xe350>
   202e4:	ldr	r3, [r5, #12]
   202e8:	cmp	r3, #0
   202ec:	beq	2031c <ASN1_STRING_length@plt+0xe3a8>
   202f0:	mov	r0, r6
   202f4:	bl	29fa0 <ASN1_STRING_length@plt+0x1802c>
   202f8:	mov	r1, r8
   202fc:	mov	r2, #0
   20300:	bl	11e00 <fnmatch@plt>
   20304:	cmp	r0, #0
   20308:	bne	2031c <ASN1_STRING_length@plt+0xe3a8>
   2030c:	mov	r1, r9
   20310:	mov	r0, r5
   20314:	bl	1fac4 <ASN1_STRING_length@plt+0xdb50>
   20318:	b	20324 <ASN1_STRING_length@plt+0xe3b0>
   2031c:	mov	r0, r5
   20320:	bl	11ba8 <free@plt>
   20324:	mov	r1, sl
   20328:	mov	r0, r6
   2032c:	add	sp, sp, #8
   20330:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   20334:	b	2a144 <ASN1_STRING_length@plt+0x181d0>
   20338:	mov	sl, r1
   2033c:	b	20250 <ASN1_STRING_length@plt+0xe2dc>
   20340:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20344:	mov	r7, r1
   20348:	ldr	r1, [r0, #4]
   2034c:	sub	sp, sp, #8
   20350:	mov	r5, r0
   20354:	ldrb	r1, [r1, r7]
   20358:	mov	r6, r2
   2035c:	mov	r8, r3
   20360:	cmp	r1, #0
   20364:	ldr	r9, [sp, #40]	; 0x28
   20368:	beq	2047c <ASN1_STRING_length@plt+0xe508>
   2036c:	mov	r4, #0
   20370:	mov	r0, r6
   20374:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20378:	ldr	r3, [r5, #4]
   2037c:	add	r4, r4, #1
   20380:	add	r3, r3, r7
   20384:	mov	sl, r4
   20388:	ldrb	r1, [r3, r4]
   2038c:	cmp	r1, #0
   20390:	bne	20370 <ASN1_STRING_length@plt+0xe3fc>
   20394:	ldrb	r2, [r5, #12]
   20398:	ldrb	r1, [r5, #13]
   2039c:	mov	r4, r2
   203a0:	cmp	r2, r1
   203a4:	bgt	20428 <ASN1_STRING_length@plt+0xe4b4>
   203a8:	sub	r3, r4, r2
   203ac:	cmp	r2, r4
   203b0:	add	r3, r3, #4
   203b4:	bgt	203fc <ASN1_STRING_length@plt+0xe488>
   203b8:	ldr	r1, [r5, r3, lsl #2]
   203bc:	ldr	r0, [r5]
   203c0:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   203c4:	uxtb	r1, r4
   203c8:	subs	r7, r0, #0
   203cc:	mov	r0, r6
   203d0:	beq	203f8 <ASN1_STRING_length@plt+0xe484>
   203d4:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   203d8:	mov	r0, r7
   203dc:	str	r9, [sp]
   203e0:	mov	r3, r8
   203e4:	mov	r2, r6
   203e8:	mov	r1, #0
   203ec:	bl	20340 <ASN1_STRING_length@plt+0xe3cc>
   203f0:	mov	r0, r6
   203f4:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   203f8:	ldrb	r1, [r5, #13]
   203fc:	add	r4, r4, #1
   20400:	cmp	r1, r4
   20404:	blt	20428 <ASN1_STRING_length@plt+0xe4b4>
   20408:	ldrb	r2, [r5, #12]
   2040c:	sub	r3, r4, r2
   20410:	cmp	r2, r4
   20414:	add	r3, r3, #4
   20418:	ble	203b8 <ASN1_STRING_length@plt+0xe444>
   2041c:	add	r4, r4, #1
   20420:	cmp	r1, r4
   20424:	bge	20408 <ASN1_STRING_length@plt+0xe494>
   20428:	ldr	r3, [r5, #8]
   2042c:	cmp	r3, #0
   20430:	beq	20450 <ASN1_STRING_length@plt+0xe4dc>
   20434:	mov	r0, r6
   20438:	bl	29fa0 <ASN1_STRING_length@plt+0x1802c>
   2043c:	mov	r1, r8
   20440:	mov	r2, #0
   20444:	bl	11e00 <fnmatch@plt>
   20448:	cmp	r0, #0
   2044c:	beq	2046c <ASN1_STRING_length@plt+0xe4f8>
   20450:	mov	r0, r5
   20454:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   20458:	mov	r1, sl
   2045c:	mov	r0, r6
   20460:	add	sp, sp, #8
   20464:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   20468:	b	2a144 <ASN1_STRING_length@plt+0x181d0>
   2046c:	mov	r1, r9
   20470:	mov	r0, r5
   20474:	bl	1fcec <ASN1_STRING_length@plt+0xdd78>
   20478:	b	20458 <ASN1_STRING_length@plt+0xe4e4>
   2047c:	mov	sl, r1
   20480:	b	20394 <ASN1_STRING_length@plt+0xe420>
   20484:	cmp	r0, #0
   20488:	bxeq	lr
   2048c:	push	{r4, lr}
   20490:	ldr	r4, [r0]
   20494:	bl	11ba8 <free@plt>
   20498:	subs	r0, r4, #0
   2049c:	bne	20490 <ASN1_STRING_length@plt+0xe51c>
   204a0:	pop	{r4, pc}
   204a4:	ldr	r1, [pc, #140]	; 20538 <ASN1_STRING_length@plt+0xe5c4>
   204a8:	push	{r4, r5, r6, lr}
   204ac:	add	r1, pc, r1
   204b0:	bl	11c68 <fopen64@plt>
   204b4:	subs	r4, r0, #0
   204b8:	moveq	r5, r4
   204bc:	beq	2051c <ASN1_STRING_length@plt+0xe5a8>
   204c0:	bl	11f38 <__errno_location@plt>
   204c4:	mov	r3, #22
   204c8:	str	r3, [r0]
   204cc:	mov	r6, r0
   204d0:	mov	r0, r4
   204d4:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   204d8:	ldr	r3, [pc, #92]	; 2053c <ASN1_STRING_length@plt+0xe5c8>
   204dc:	cmp	r0, r3
   204e0:	mov	r0, r4
   204e4:	bne	20528 <ASN1_STRING_length@plt+0xe5b4>
   204e8:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   204ec:	lsr	r0, r0, #16
   204f0:	cmp	r0, #2
   204f4:	bne	20524 <ASN1_STRING_length@plt+0xe5b0>
   204f8:	mov	r0, #8
   204fc:	bl	11d64 <malloc@plt>
   20500:	mov	r5, r0
   20504:	mov	r0, r4
   20508:	str	r4, [r5]
   2050c:	bl	1f944 <ASN1_STRING_length@plt+0xd9d0>
   20510:	mov	r3, #0
   20514:	str	r3, [r6]
   20518:	str	r0, [r5, #4]
   2051c:	mov	r0, r5
   20520:	pop	{r4, r5, r6, pc}
   20524:	mov	r0, r4
   20528:	mov	r5, #0
   2052c:	bl	11a88 <fclose@plt>
   20530:	mov	r0, r5
   20534:	pop	{r4, r5, r6, pc}
   20538:	andeq	sp, r0, r8, asr #11
   2053c:	andlt	pc, r7, r7, asr r4	; <UNPREDICTABLE>
   20540:	push	{r4, lr}
   20544:	mov	r4, r0
   20548:	ldr	r0, [r0]
   2054c:	bl	11a88 <fclose@plt>
   20550:	mov	r0, r4
   20554:	pop	{r4, lr}
   20558:	b	11ba8 <free@plt>
   2055c:	ldr	r3, [pc, #124]	; 205e0 <ASN1_STRING_length@plt+0xe66c>
   20560:	ldr	ip, [pc, #124]	; 205e4 <ASN1_STRING_length@plt+0xe670>
   20564:	add	r3, pc, r3
   20568:	push	{r4, r5, r6, r7, r8, lr}
   2056c:	sub	sp, sp, #16
   20570:	ldr	r5, [r3, ip]
   20574:	mov	r6, r1
   20578:	ldrd	r0, [r0]
   2057c:	ldr	r3, [r5]
   20580:	mov	r8, r2
   20584:	str	r3, [sp, #12]
   20588:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   2058c:	subs	r7, r0, #0
   20590:	beq	205c4 <ASN1_STRING_length@plt+0xe650>
   20594:	mov	r4, sp
   20598:	mov	r0, r4
   2059c:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   205a0:	mov	r1, r8
   205a4:	mov	r0, r4
   205a8:	bl	2a02c <ASN1_STRING_length@plt+0x180b8>
   205ac:	mov	r0, r7
   205b0:	mov	r2, r6
   205b4:	mov	r1, r4
   205b8:	bl	200bc <ASN1_STRING_length@plt+0xe148>
   205bc:	mov	r0, r4
   205c0:	bl	29f58 <ASN1_STRING_length@plt+0x17fe4>
   205c4:	ldr	r2, [sp, #12]
   205c8:	ldr	r3, [r5]
   205cc:	cmp	r2, r3
   205d0:	bne	205dc <ASN1_STRING_length@plt+0xe668>
   205d4:	add	sp, sp, #16
   205d8:	pop	{r4, r5, r6, r7, r8, pc}
   205dc:	bl	11d88 <__stack_chk_fail@plt>
   205e0:	muleq	r1, r0, r8
   205e4:	strdeq	r0, [r0], -r8
   205e8:	mov	r3, r0
   205ec:	push	{r4, r5, r6, r7, r8, lr}
   205f0:	mov	r6, r1
   205f4:	ldr	r0, [r0]
   205f8:	ldr	r1, [r3, #4]
   205fc:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   20600:	subs	r5, r0, #0
   20604:	movne	r4, #0
   20608:	beq	206bc <ASN1_STRING_length@plt+0xe748>
   2060c:	ldr	r1, [r5, #4]
   20610:	mov	lr, r4
   20614:	add	r2, r6, r4
   20618:	ldrb	r0, [r1]
   2061c:	ldrb	r3, [r6, r4]
   20620:	cmp	r0, #0
   20624:	beq	2065c <ASN1_STRING_length@plt+0xe6e8>
   20628:	cmp	r3, r0
   2062c:	bne	2067c <ASN1_STRING_length@plt+0xe708>
   20630:	mov	r0, r1
   20634:	b	20640 <ASN1_STRING_length@plt+0xe6cc>
   20638:	cmp	ip, r3
   2063c:	bne	2067c <ASN1_STRING_length@plt+0xe708>
   20640:	add	r0, r0, #1
   20644:	mov	r4, r0
   20648:	ldrb	r3, [r2, #1]!
   2064c:	ldrb	ip, [r4], lr
   20650:	cmp	ip, #0
   20654:	sub	r4, r4, r1
   20658:	bne	20638 <ASN1_STRING_length@plt+0xe6c4>
   2065c:	cmp	r3, #0
   20660:	beq	206c4 <ASN1_STRING_length@plt+0xe750>
   20664:	ldrb	r2, [r5, #12]
   20668:	cmp	r3, r2
   2066c:	blt	2067c <ASN1_STRING_length@plt+0xe708>
   20670:	ldrb	r1, [r5, #13]
   20674:	cmp	r3, r1
   20678:	ble	20690 <ASN1_STRING_length@plt+0xe71c>
   2067c:	mov	r0, r5
   20680:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   20684:	mov	r4, #0
   20688:	mov	r0, r4
   2068c:	pop	{r4, r5, r6, r7, r8, pc}
   20690:	sub	r3, r3, r2
   20694:	add	r3, r3, #4
   20698:	ldr	r0, [r5]
   2069c:	ldr	r1, [r5, r3, lsl #2]
   206a0:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   206a4:	add	r4, r4, #1
   206a8:	mov	r7, r0
   206ac:	mov	r0, r5
   206b0:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   206b4:	subs	r5, r7, #0
   206b8:	bne	2060c <ASN1_STRING_length@plt+0xe698>
   206bc:	mov	r4, #0
   206c0:	b	20688 <ASN1_STRING_length@plt+0xe714>
   206c4:	ldr	r4, [r5, #8]
   206c8:	cmp	r4, #0
   206cc:	beq	206dc <ASN1_STRING_length@plt+0xe768>
   206d0:	add	r0, r4, #12
   206d4:	bl	11d4c <strdup@plt>
   206d8:	mov	r4, r0
   206dc:	mov	r0, r5
   206e0:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   206e4:	b	20688 <ASN1_STRING_length@plt+0xe714>
   206e8:	ldr	r3, [pc, #692]	; 209a4 <ASN1_STRING_length@plt+0xea30>
   206ec:	ldr	r2, [pc, #692]	; 209a8 <ASN1_STRING_length@plt+0xea34>
   206f0:	add	r3, pc, r3
   206f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206f8:	sub	sp, sp, #36	; 0x24
   206fc:	ldr	r8, [r3, r2]
   20700:	mov	r9, r1
   20704:	ldrd	r0, [r0]
   20708:	ldr	r2, [r8]
   2070c:	add	r7, sp, #16
   20710:	str	r2, [sp, #28]
   20714:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   20718:	mov	r4, #0
   2071c:	str	r4, [sp, #12]
   20720:	mov	r5, r0
   20724:	mov	r0, r7
   20728:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   2072c:	cmp	r5, r4
   20730:	addne	sl, sp, #12
   20734:	beq	207f0 <ASN1_STRING_length@plt+0xe87c>
   20738:	ldr	r3, [r5, #4]
   2073c:	add	r6, r9, r4
   20740:	ldrb	r2, [r3]
   20744:	cmp	r2, #0
   20748:	beq	20814 <ASN1_STRING_length@plt+0xe8a0>
   2074c:	cmp	r2, #42	; 0x2a
   20750:	cmpne	r2, #63	; 0x3f
   20754:	moveq	r1, #1
   20758:	movne	r1, #0
   2075c:	cmp	r2, #91	; 0x5b
   20760:	orreq	r1, r1, #1
   20764:	cmp	r1, #0
   20768:	bne	20988 <ASN1_STRING_length@plt+0xea14>
   2076c:	ldrb	r1, [r6]
   20770:	cmp	r1, r2
   20774:	bne	2094c <ASN1_STRING_length@plt+0xe9d8>
   20778:	add	r0, r4, #1
   2077c:	rsb	lr, r3, #1
   20780:	sub	fp, r4, r3
   20784:	add	r0, r9, r0
   20788:	b	2079c <ASN1_STRING_length@plt+0xe828>
   2078c:	ldrb	r1, [r6]
   20790:	add	r0, r0, #1
   20794:	cmp	r1, r2
   20798:	bne	2094c <ASN1_STRING_length@plt+0xe9d8>
   2079c:	add	r1, lr, r3
   207a0:	add	r3, r3, #1
   207a4:	mov	r4, r3
   207a8:	mov	r6, r0
   207ac:	ldrb	r2, [r4], fp
   207b0:	cmp	r2, #0
   207b4:	beq	20814 <ASN1_STRING_length@plt+0xe8a0>
   207b8:	cmp	r2, #63	; 0x3f
   207bc:	cmpne	r2, #42	; 0x2a
   207c0:	moveq	ip, #1
   207c4:	movne	ip, #0
   207c8:	cmp	r2, #91	; 0x5b
   207cc:	orreq	ip, ip, #1
   207d0:	cmp	ip, #0
   207d4:	beq	2078c <ASN1_STRING_length@plt+0xe818>
   207d8:	add	r2, sp, #12
   207dc:	str	r2, [sp]
   207e0:	mov	r3, r6
   207e4:	mov	r0, r5
   207e8:	mov	r2, r7
   207ec:	bl	20340 <ASN1_STRING_length@plt+0xe3cc>
   207f0:	mov	r0, r7
   207f4:	bl	29f58 <ASN1_STRING_length@plt+0x17fe4>
   207f8:	ldr	r2, [sp, #28]
   207fc:	ldr	r3, [r8]
   20800:	ldr	r0, [sp, #12]
   20804:	cmp	r2, r3
   20808:	bne	209a0 <ASN1_STRING_length@plt+0xea2c>
   2080c:	add	sp, sp, #36	; 0x24
   20810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20814:	ldrb	r3, [r5, #12]
   20818:	cmp	r3, #42	; 0x2a
   2081c:	bgt	20874 <ASN1_STRING_length@plt+0xe900>
   20820:	ldrb	r2, [r5, #13]
   20824:	cmp	r2, #41	; 0x29
   20828:	bls	20928 <ASN1_STRING_length@plt+0xe9b4>
   2082c:	rsb	r3, r3, #46	; 0x2e
   20830:	ldr	r0, [r5]
   20834:	ldr	r1, [r5, r3, lsl #2]
   20838:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   2083c:	subs	fp, r0, #0
   20840:	beq	20870 <ASN1_STRING_length@plt+0xe8fc>
   20844:	mov	r1, #42	; 0x2a
   20848:	mov	r0, r7
   2084c:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20850:	mov	r0, fp
   20854:	str	sl, [sp]
   20858:	mov	r3, r6
   2085c:	mov	r2, r7
   20860:	mov	r1, #0
   20864:	bl	20340 <ASN1_STRING_length@plt+0xe3cc>
   20868:	mov	r0, r7
   2086c:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   20870:	ldrb	r3, [r5, #12]
   20874:	cmp	r3, #63	; 0x3f
   20878:	bgt	208d0 <ASN1_STRING_length@plt+0xe95c>
   2087c:	ldrb	r2, [r5, #13]
   20880:	cmp	r2, #62	; 0x3e
   20884:	bls	20928 <ASN1_STRING_length@plt+0xe9b4>
   20888:	rsb	r3, r3, #67	; 0x43
   2088c:	ldr	r0, [r5]
   20890:	ldr	r1, [r5, r3, lsl #2]
   20894:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   20898:	subs	fp, r0, #0
   2089c:	beq	208cc <ASN1_STRING_length@plt+0xe958>
   208a0:	mov	r1, #63	; 0x3f
   208a4:	mov	r0, r7
   208a8:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   208ac:	mov	r0, fp
   208b0:	str	sl, [sp]
   208b4:	mov	r3, r6
   208b8:	mov	r2, r7
   208bc:	mov	r1, #0
   208c0:	bl	20340 <ASN1_STRING_length@plt+0xe3cc>
   208c4:	mov	r0, r7
   208c8:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   208cc:	ldrb	r3, [r5, #12]
   208d0:	cmp	r3, #91	; 0x5b
   208d4:	bgt	20928 <ASN1_STRING_length@plt+0xe9b4>
   208d8:	ldrb	r2, [r5, #13]
   208dc:	cmp	r2, #90	; 0x5a
   208e0:	bls	20928 <ASN1_STRING_length@plt+0xe9b4>
   208e4:	rsb	r3, r3, #95	; 0x5f
   208e8:	ldr	r0, [r5]
   208ec:	ldr	r1, [r5, r3, lsl #2]
   208f0:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   208f4:	subs	fp, r0, #0
   208f8:	beq	20928 <ASN1_STRING_length@plt+0xe9b4>
   208fc:	mov	r1, #91	; 0x5b
   20900:	mov	r0, r7
   20904:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   20908:	mov	r0, fp
   2090c:	str	sl, [sp]
   20910:	mov	r3, r6
   20914:	mov	r2, r7
   20918:	mov	r1, #0
   2091c:	bl	20340 <ASN1_STRING_length@plt+0xe3cc>
   20920:	mov	r0, r7
   20924:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   20928:	ldrb	r3, [r6]
   2092c:	cmp	r3, #0
   20930:	beq	20990 <ASN1_STRING_length@plt+0xea1c>
   20934:	ldrb	r2, [r5, #12]
   20938:	cmp	r3, r2
   2093c:	blt	2094c <ASN1_STRING_length@plt+0xe9d8>
   20940:	ldrb	r1, [r5, #13]
   20944:	cmp	r3, r1
   20948:	ble	20958 <ASN1_STRING_length@plt+0xe9e4>
   2094c:	mov	r0, r5
   20950:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   20954:	b	207f0 <ASN1_STRING_length@plt+0xe87c>
   20958:	sub	r3, r3, r2
   2095c:	add	r3, r3, #4
   20960:	ldr	r0, [r5]
   20964:	ldr	r1, [r5, r3, lsl #2]
   20968:	bl	1fb10 <ASN1_STRING_length@plt+0xdb9c>
   2096c:	add	r4, r4, #1
   20970:	mov	r6, r0
   20974:	mov	r0, r5
   20978:	bl	1f90c <ASN1_STRING_length@plt+0xd998>
   2097c:	subs	r5, r6, #0
   20980:	bne	20738 <ASN1_STRING_length@plt+0xe7c4>
   20984:	b	207f0 <ASN1_STRING_length@plt+0xe87c>
   20988:	mov	r1, #0
   2098c:	b	207d8 <ASN1_STRING_length@plt+0xe864>
   20990:	mov	r0, r5
   20994:	add	r1, sp, #12
   20998:	bl	1fcec <ASN1_STRING_length@plt+0xdd78>
   2099c:	b	207f0 <ASN1_STRING_length@plt+0xe87c>
   209a0:	bl	11d88 <__stack_chk_fail@plt>
   209a4:	andeq	pc, r1, r4, lsl #14
   209a8:	strdeq	r0, [r0], -r8
   209ac:	ldr	r3, [pc, #816]	; 20ce4 <ASN1_STRING_length@plt+0xed70>
   209b0:	ldr	ip, [pc, #816]	; 20ce8 <ASN1_STRING_length@plt+0xed74>
   209b4:	add	r3, pc, r3
   209b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209bc:	sub	sp, sp, #140	; 0x8c
   209c0:	ldr	r6, [r3, ip]
   209c4:	mov	r8, r1
   209c8:	mov	r9, r2
   209cc:	ldr	r3, [r6]
   209d0:	mov	r7, r0
   209d4:	str	r3, [sp, #132]	; 0x84
   209d8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   209dc:	cmp	r0, #6
   209e0:	bgt	20b48 <ASN1_STRING_length@plt+0xebd4>
   209e4:	mov	r0, #16
   209e8:	bl	11d64 <malloc@plt>
   209ec:	subs	r4, r0, #0
   209f0:	beq	20bc4 <ASN1_STRING_length@plt+0xec50>
   209f4:	mov	r1, #524288	; 0x80000
   209f8:	mov	r0, r8
   209fc:	bl	11ca4 <open64@plt>
   20a00:	subs	r5, r0, #0
   20a04:	blt	20b7c <ASN1_STRING_length@plt+0xec08>
   20a08:	add	r8, sp, #24
   20a0c:	mov	r2, r8
   20a10:	mov	r1, r5
   20a14:	mov	r0, #3
   20a18:	bl	11b78 <__fxstat64@plt>
   20a1c:	cmp	r0, #0
   20a20:	blt	20b18 <ASN1_STRING_length@plt+0xeba4>
   20a24:	ldr	r1, [sp, #72]	; 0x48
   20a28:	cmp	r1, #11
   20a2c:	bls	20b18 <ASN1_STRING_length@plt+0xeba4>
   20a30:	mov	r2, #0
   20a34:	mov	r3, #0
   20a38:	str	r5, [sp]
   20a3c:	strd	r2, [sp, #8]
   20a40:	mov	r0, #0
   20a44:	mov	r3, #2
   20a48:	mov	r2, #1
   20a4c:	bl	11d70 <mmap64@plt>
   20a50:	cmn	r0, #1
   20a54:	str	r0, [r4, #4]
   20a58:	beq	20c90 <ASN1_STRING_length@plt+0xed1c>
   20a5c:	ldrb	r3, [r0, #1]
   20a60:	ldrb	r1, [r0, #2]
   20a64:	ldrb	sl, [r0]
   20a68:	ldrb	r2, [r0, #3]
   20a6c:	ldrb	ip, [r0, #5]
   20a70:	orr	sl, sl, r3, lsl #8
   20a74:	orr	sl, sl, r1, lsl #16
   20a78:	ldrb	r3, [r0, #4]
   20a7c:	ldrb	r1, [r0, #6]
   20a80:	orr	sl, sl, r2, lsl #24
   20a84:	ldrb	r2, [r0, #7]
   20a88:	ldr	fp, [pc, #604]	; 20cec <ASN1_STRING_length@plt+0xed78>
   20a8c:	orr	r3, r3, ip, lsl #8
   20a90:	rev	sl, sl
   20a94:	orr	r3, r3, r1, lsl #16
   20a98:	orr	r3, r3, r2, lsl #24
   20a9c:	cmp	sl, fp
   20aa0:	rev	r3, r3
   20aa4:	bne	20c08 <ASN1_STRING_length@plt+0xec94>
   20aa8:	lsr	sl, r3, #16
   20aac:	cmp	sl, #2
   20ab0:	bne	20afc <ASN1_STRING_length@plt+0xeb88>
   20ab4:	ldrb	ip, [r0, #9]
   20ab8:	ldrb	r1, [r0, #10]
   20abc:	ldrb	r3, [r0, #8]
   20ac0:	ldrb	r2, [r0, #11]
   20ac4:	mov	r0, r5
   20ac8:	orr	r3, r3, ip, lsl #8
   20acc:	orr	r3, r3, r1, lsl #16
   20ad0:	orr	r3, r3, r2, lsl #24
   20ad4:	ldr	r2, [sp, #72]	; 0x48
   20ad8:	rev	r3, r3
   20adc:	str	r3, [r4, #8]
   20ae0:	str	r2, [r4, #12]
   20ae4:	str	r7, [r4]
   20ae8:	bl	11d04 <close@plt>
   20aec:	mov	r0, r8
   20af0:	bl	1bc50 <ASN1_STRING_length@plt+0x9cdc>
   20af4:	strd	r0, [r9]
   20af8:	b	20b2c <ASN1_STRING_length@plt+0xebb8>
   20afc:	mov	r0, r7
   20b00:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   20b04:	cmp	r0, #2
   20b08:	bgt	20c50 <ASN1_STRING_length@plt+0xecdc>
   20b0c:	ldr	r1, [sp, #72]	; 0x48
   20b10:	ldr	r0, [r4, #4]
   20b14:	bl	11e30 <munmap@plt>
   20b18:	mov	r0, r5
   20b1c:	bl	11d04 <close@plt>
   20b20:	mov	r0, r4
   20b24:	bl	11ba8 <free@plt>
   20b28:	mov	r4, #0
   20b2c:	ldr	r2, [sp, #132]	; 0x84
   20b30:	ldr	r3, [r6]
   20b34:	mov	r0, r4
   20b38:	cmp	r2, r3
   20b3c:	bne	20ce0 <ASN1_STRING_length@plt+0xed6c>
   20b40:	add	sp, sp, #140	; 0x8c
   20b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b48:	ldr	r2, [pc, #416]	; 20cf0 <ASN1_STRING_length@plt+0xed7c>
   20b4c:	ldr	r3, [pc, #416]	; 20cf4 <ASN1_STRING_length@plt+0xed80>
   20b50:	add	r2, pc, r2
   20b54:	add	r3, pc, r3
   20b58:	stmib	sp, {r2, r8}
   20b5c:	ldr	r2, [pc, #404]	; 20cf8 <ASN1_STRING_length@plt+0xed84>
   20b60:	str	r3, [sp]
   20b64:	add	r2, pc, r2
   20b68:	ldr	r3, [pc, #396]	; 20cfc <ASN1_STRING_length@plt+0xed88>
   20b6c:	mov	r1, #7
   20b70:	mov	r0, r7
   20b74:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20b78:	b	209e4 <ASN1_STRING_length@plt+0xea70>
   20b7c:	mov	r0, r7
   20b80:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   20b84:	cmp	r0, #6
   20b88:	ble	20b20 <ASN1_STRING_length@plt+0xebac>
   20b8c:	ldr	r2, [pc, #364]	; 20d00 <ASN1_STRING_length@plt+0xed8c>
   20b90:	ldr	r3, [pc, #364]	; 20d04 <ASN1_STRING_length@plt+0xed90>
   20b94:	add	r2, pc, r2
   20b98:	str	r2, [sp, #4]
   20b9c:	ldr	r2, [pc, #356]	; 20d08 <ASN1_STRING_length@plt+0xed94>
   20ba0:	add	r3, pc, r3
   20ba4:	str	r3, [sp]
   20ba8:	str	r8, [sp, #8]
   20bac:	mov	r0, r7
   20bb0:	mov	r3, #764	; 0x2fc
   20bb4:	add	r2, pc, r2
   20bb8:	mov	r1, #7
   20bbc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20bc0:	b	20b20 <ASN1_STRING_length@plt+0xebac>
   20bc4:	mov	r0, r7
   20bc8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   20bcc:	cmp	r0, #2
   20bd0:	ble	20b2c <ASN1_STRING_length@plt+0xebb8>
   20bd4:	ldr	r2, [pc, #304]	; 20d0c <ASN1_STRING_length@plt+0xed98>
   20bd8:	ldr	r3, [pc, #304]	; 20d10 <ASN1_STRING_length@plt+0xed9c>
   20bdc:	add	r2, pc, r2
   20be0:	str	r2, [sp, #4]
   20be4:	ldr	r2, [pc, #296]	; 20d14 <ASN1_STRING_length@plt+0xeda0>
   20be8:	add	r3, pc, r3
   20bec:	str	r3, [sp]
   20bf0:	mov	r0, r7
   20bf4:	ldr	r3, [pc, #284]	; 20d18 <ASN1_STRING_length@plt+0xeda4>
   20bf8:	add	r2, pc, r2
   20bfc:	mov	r1, #3
   20c00:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20c04:	b	20b2c <ASN1_STRING_length@plt+0xebb8>
   20c08:	mov	r0, r7
   20c0c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   20c10:	cmp	r0, #2
   20c14:	ble	20b0c <ASN1_STRING_length@plt+0xeb98>
   20c18:	ldr	r2, [pc, #252]	; 20d1c <ASN1_STRING_length@plt+0xeda8>
   20c1c:	ldr	r3, [pc, #252]	; 20d20 <ASN1_STRING_length@plt+0xedac>
   20c20:	add	r2, pc, r2
   20c24:	str	r2, [sp, #4]
   20c28:	ldr	r2, [pc, #244]	; 20d24 <ASN1_STRING_length@plt+0xedb0>
   20c2c:	add	r3, pc, r3
   20c30:	str	r3, [sp]
   20c34:	strd	sl, [sp, #8]
   20c38:	mov	r0, r7
   20c3c:	ldr	r3, [pc, #228]	; 20d28 <ASN1_STRING_length@plt+0xedb4>
   20c40:	add	r2, pc, r2
   20c44:	mov	r1, #3
   20c48:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20c4c:	b	20b0c <ASN1_STRING_length@plt+0xeb98>
   20c50:	ldr	r2, [pc, #212]	; 20d2c <ASN1_STRING_length@plt+0xedb8>
   20c54:	ldr	r3, [pc, #212]	; 20d30 <ASN1_STRING_length@plt+0xedbc>
   20c58:	add	r2, pc, r2
   20c5c:	str	r2, [sp, #4]
   20c60:	ldr	r2, [pc, #204]	; 20d34 <ASN1_STRING_length@plt+0xedc0>
   20c64:	add	r3, pc, r3
   20c68:	mov	r1, #2
   20c6c:	str	r3, [sp]
   20c70:	str	r1, [sp, #12]
   20c74:	str	sl, [sp, #8]
   20c78:	mov	r0, r7
   20c7c:	ldr	r3, [pc, #180]	; 20d38 <ASN1_STRING_length@plt+0xedc4>
   20c80:	add	r2, pc, r2
   20c84:	mov	r1, #3
   20c88:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20c8c:	b	20b0c <ASN1_STRING_length@plt+0xeb98>
   20c90:	mov	r0, r7
   20c94:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   20c98:	cmp	r0, #2
   20c9c:	ble	20b18 <ASN1_STRING_length@plt+0xeba4>
   20ca0:	ldrd	r2, [sp, #72]	; 0x48
   20ca4:	ldr	ip, [pc, #144]	; 20d3c <ASN1_STRING_length@plt+0xedc8>
   20ca8:	ldr	r1, [pc, #144]	; 20d40 <ASN1_STRING_length@plt+0xedcc>
   20cac:	strd	r2, [sp, #8]
   20cb0:	ldr	r2, [pc, #140]	; 20d44 <ASN1_STRING_length@plt+0xedd0>
   20cb4:	add	ip, pc, ip
   20cb8:	add	r1, pc, r1
   20cbc:	str	r1, [sp]
   20cc0:	str	r5, [sp, #16]
   20cc4:	mov	r0, r7
   20cc8:	str	ip, [sp, #4]
   20ccc:	mov	r3, #776	; 0x308
   20cd0:	add	r2, pc, r2
   20cd4:	mov	r1, #3
   20cd8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   20cdc:	b	20b18 <ASN1_STRING_length@plt+0xeba4>
   20ce0:	bl	11d88 <__stack_chk_fail@plt>
   20ce4:	andeq	pc, r1, r0, asr #8
   20ce8:	strdeq	r0, [r0], -r8
   20cec:	andlt	pc, r7, r7, asr r4	; <UNPREDICTABLE>
   20cf0:	andeq	sp, r0, r0, lsr #10
   20cf4:	andeq	sp, r0, ip, asr #23
   20cf8:	ldrdeq	sp, [r0], -r0
   20cfc:	strdeq	r0, [r0], -r3
   20d00:	andeq	sp, r0, r8, asr #23
   20d04:	andeq	sp, r0, r0, lsl #23
   20d08:	andeq	sp, r0, r0, lsl #23
   20d0c:	andeq	sp, r0, r4, ror fp
   20d10:	andeq	sp, r0, r8, lsr fp
   20d14:	andeq	sp, r0, ip, lsr fp
   20d18:	strdeq	r0, [r0], -r7
   20d1c:	muleq	r0, r8, fp
   20d20:	strdeq	sp, [r0], -r4
   20d24:	strdeq	sp, [r0], -r4
   20d28:	andeq	r0, r0, r3, lsl r3
   20d2c:	andeq	sp, r0, r4, lsl #23
   20d30:			; <UNDEFINED> instruction: 0x0000dabc
   20d34:			; <UNDEFINED> instruction: 0x0000dab4
   20d38:	andeq	r0, r0, r9, lsl r3
   20d3c:	andeq	sp, r0, ip, asr #21
   20d40:	andeq	sp, r0, r8, ror #20
   20d44:	andeq	sp, r0, r4, ror #20
   20d48:	push	{r4, lr}
   20d4c:	mov	r4, r0
   20d50:	ldr	r1, [r0, #12]
   20d54:	ldr	r0, [r0, #4]
   20d58:	bl	11e30 <munmap@plt>
   20d5c:	mov	r0, r4
   20d60:	pop	{r4, lr}
   20d64:	b	11ba8 <free@plt>
   20d68:	ldr	r3, [pc, #124]	; 20dec <ASN1_STRING_length@plt+0xee78>
   20d6c:	ldr	ip, [pc, #124]	; 20df0 <ASN1_STRING_length@plt+0xee7c>
   20d70:	add	r3, pc, r3
   20d74:	push	{r4, r5, r6, r7, r8, lr}
   20d78:	sub	sp, sp, #16
   20d7c:	ldr	r5, [r3, ip]
   20d80:	mov	r6, r1
   20d84:	ldr	r1, [r0, #8]
   20d88:	ldr	r3, [r5]
   20d8c:	mov	r7, r2
   20d90:	str	r3, [sp, #12]
   20d94:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20d98:	subs	r8, r0, #0
   20d9c:	beq	20dd0 <ASN1_STRING_length@plt+0xee5c>
   20da0:	mov	r4, sp
   20da4:	mov	r0, r4
   20da8:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   20dac:	mov	r1, r7
   20db0:	mov	r0, r4
   20db4:	bl	2a02c <ASN1_STRING_length@plt+0x180b8>
   20db8:	mov	r0, r8
   20dbc:	mov	r2, r6
   20dc0:	mov	r1, r4
   20dc4:	bl	1ff7c <ASN1_STRING_length@plt+0xe008>
   20dc8:	mov	r0, r4
   20dcc:	bl	29f58 <ASN1_STRING_length@plt+0x17fe4>
   20dd0:	ldr	r2, [sp, #12]
   20dd4:	ldr	r3, [r5]
   20dd8:	cmp	r2, r3
   20ddc:	bne	20de8 <ASN1_STRING_length@plt+0xee74>
   20de0:	add	sp, sp, #16
   20de4:	pop	{r4, r5, r6, r7, r8, pc}
   20de8:	bl	11d88 <__stack_chk_fail@plt>
   20dec:	andeq	pc, r1, r4, lsl #1
   20df0:	strdeq	r0, [r0], -r8
   20df4:	push	{r4, r5, r6, r7, r8, lr}
   20df8:	mov	r6, r1
   20dfc:	ldr	r1, [r0, #8]
   20e00:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20e04:	subs	r5, r0, #0
   20e08:	movne	r4, #0
   20e0c:	beq	20ec0 <ASN1_STRING_length@plt+0xef4c>
   20e10:	ldr	r2, [r5, #4]
   20e14:	mov	lr, r4
   20e18:	add	r3, r6, r4
   20e1c:	ldrb	r1, [r2]
   20e20:	ldrb	r0, [r6, r4]
   20e24:	cmp	r1, #0
   20e28:	beq	20e60 <ASN1_STRING_length@plt+0xeeec>
   20e2c:	cmp	r0, r1
   20e30:	bne	20e80 <ASN1_STRING_length@plt+0xef0c>
   20e34:	mov	r1, r2
   20e38:	b	20e44 <ASN1_STRING_length@plt+0xeed0>
   20e3c:	cmp	ip, r0
   20e40:	bne	20e80 <ASN1_STRING_length@plt+0xef0c>
   20e44:	add	r1, r1, #1
   20e48:	mov	r4, r1
   20e4c:	ldrb	r0, [r3, #1]!
   20e50:	ldrb	ip, [r4], lr
   20e54:	cmp	ip, #0
   20e58:	sub	r4, r4, r2
   20e5c:	bne	20e3c <ASN1_STRING_length@plt+0xeec8>
   20e60:	cmp	r0, #0
   20e64:	beq	20ec8 <ASN1_STRING_length@plt+0xef54>
   20e68:	ldrb	r3, [r5, #16]
   20e6c:	cmp	r0, r3
   20e70:	blt	20e80 <ASN1_STRING_length@plt+0xef0c>
   20e74:	ldrb	r2, [r5, #17]
   20e78:	cmp	r0, r2
   20e7c:	ble	20e94 <ASN1_STRING_length@plt+0xef20>
   20e80:	mov	r0, r5
   20e84:	bl	11ba8 <free@plt>
   20e88:	mov	r4, #0
   20e8c:	mov	r0, r4
   20e90:	pop	{r4, r5, r6, r7, r8, pc}
   20e94:	sub	r3, r0, r3
   20e98:	ldr	r0, [r5]
   20e9c:	add	r3, r5, r3, lsl #2
   20ea0:	add	r4, r4, #1
   20ea4:	ldr	r1, [r3, #20]
   20ea8:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20eac:	mov	r7, r0
   20eb0:	mov	r0, r5
   20eb4:	bl	11ba8 <free@plt>
   20eb8:	subs	r5, r7, #0
   20ebc:	bne	20e10 <ASN1_STRING_length@plt+0xee9c>
   20ec0:	mov	r4, #0
   20ec4:	b	20e8c <ASN1_STRING_length@plt+0xef18>
   20ec8:	ldr	r3, [r5, #12]
   20ecc:	cmp	r3, #0
   20ed0:	moveq	r4, r0
   20ed4:	bne	20ee4 <ASN1_STRING_length@plt+0xef70>
   20ed8:	mov	r0, r5
   20edc:	bl	11ba8 <free@plt>
   20ee0:	b	20e8c <ASN1_STRING_length@plt+0xef18>
   20ee4:	ldr	r3, [r5, #8]
   20ee8:	ldr	r0, [r3, #8]
   20eec:	bl	11d4c <strdup@plt>
   20ef0:	mov	r4, r0
   20ef4:	b	20ed8 <ASN1_STRING_length@plt+0xef64>
   20ef8:	ldr	r3, [pc, #704]	; 211c0 <ASN1_STRING_length@plt+0xf24c>
   20efc:	ldr	r2, [pc, #704]	; 211c4 <ASN1_STRING_length@plt+0xf250>
   20f00:	add	r3, pc, r3
   20f04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f08:	sub	sp, sp, #36	; 0x24
   20f0c:	ldr	r8, [r3, r2]
   20f10:	mov	r9, r1
   20f14:	ldr	r1, [r0, #8]
   20f18:	ldr	r3, [r8]
   20f1c:	add	r7, sp, #16
   20f20:	str	r3, [sp, #28]
   20f24:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   20f28:	mov	r4, #0
   20f2c:	str	r4, [sp, #12]
   20f30:	mov	r5, r0
   20f34:	mov	r0, r7
   20f38:	bl	29f44 <ASN1_STRING_length@plt+0x17fd0>
   20f3c:	cmp	r5, r4
   20f40:	addne	sl, sp, #12
   20f44:	beq	21000 <ASN1_STRING_length@plt+0xf08c>
   20f48:	ldr	r3, [r5, #4]
   20f4c:	add	r6, r9, r4
   20f50:	ldrb	r2, [r3]
   20f54:	cmp	r2, #0
   20f58:	beq	21024 <ASN1_STRING_length@plt+0xf0b0>
   20f5c:	cmp	r2, #42	; 0x2a
   20f60:	cmpne	r2, #63	; 0x3f
   20f64:	moveq	r1, #1
   20f68:	movne	r1, #0
   20f6c:	cmp	r2, #91	; 0x5b
   20f70:	orreq	r1, r1, #1
   20f74:	cmp	r1, #0
   20f78:	bne	211a4 <ASN1_STRING_length@plt+0xf230>
   20f7c:	ldrb	r1, [r6]
   20f80:	cmp	r1, r2
   20f84:	bne	21168 <ASN1_STRING_length@plt+0xf1f4>
   20f88:	add	r0, r4, #1
   20f8c:	rsb	lr, r3, #1
   20f90:	sub	fp, r4, r3
   20f94:	add	r0, r9, r0
   20f98:	b	20fac <ASN1_STRING_length@plt+0xf038>
   20f9c:	ldrb	r1, [r6]
   20fa0:	add	r0, r0, #1
   20fa4:	cmp	r1, r2
   20fa8:	bne	21168 <ASN1_STRING_length@plt+0xf1f4>
   20fac:	add	r1, lr, r3
   20fb0:	add	r3, r3, #1
   20fb4:	mov	r4, r3
   20fb8:	mov	r6, r0
   20fbc:	ldrb	r2, [r4], fp
   20fc0:	cmp	r2, #0
   20fc4:	beq	21024 <ASN1_STRING_length@plt+0xf0b0>
   20fc8:	cmp	r2, #63	; 0x3f
   20fcc:	cmpne	r2, #42	; 0x2a
   20fd0:	moveq	ip, #1
   20fd4:	movne	ip, #0
   20fd8:	cmp	r2, #91	; 0x5b
   20fdc:	orreq	ip, ip, #1
   20fe0:	cmp	ip, #0
   20fe4:	beq	20f9c <ASN1_STRING_length@plt+0xf028>
   20fe8:	add	r2, sp, #12
   20fec:	str	r2, [sp]
   20ff0:	mov	r3, r6
   20ff4:	mov	r0, r5
   20ff8:	mov	r2, r7
   20ffc:	bl	201fc <ASN1_STRING_length@plt+0xe288>
   21000:	mov	r0, r7
   21004:	bl	29f58 <ASN1_STRING_length@plt+0x17fe4>
   21008:	ldr	r2, [sp, #28]
   2100c:	ldr	r3, [r8]
   21010:	ldr	r0, [sp, #12]
   21014:	cmp	r2, r3
   21018:	bne	211bc <ASN1_STRING_length@plt+0xf248>
   2101c:	add	sp, sp, #36	; 0x24
   21020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21024:	ldrb	r3, [r5, #16]
   21028:	cmp	r3, #42	; 0x2a
   2102c:	bgt	21088 <ASN1_STRING_length@plt+0xf114>
   21030:	ldrb	r2, [r5, #17]
   21034:	cmp	r2, #41	; 0x29
   21038:	bls	21144 <ASN1_STRING_length@plt+0xf1d0>
   2103c:	rsb	r3, r3, #46	; 0x2e
   21040:	ldr	r0, [r5]
   21044:	add	r3, r5, r3, lsl #2
   21048:	ldr	r1, [r3, #4]
   2104c:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   21050:	subs	fp, r0, #0
   21054:	beq	21084 <ASN1_STRING_length@plt+0xf110>
   21058:	mov	r1, #42	; 0x2a
   2105c:	mov	r0, r7
   21060:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   21064:	mov	r0, fp
   21068:	str	sl, [sp]
   2106c:	mov	r3, r6
   21070:	mov	r2, r7
   21074:	mov	r1, #0
   21078:	bl	201fc <ASN1_STRING_length@plt+0xe288>
   2107c:	mov	r0, r7
   21080:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   21084:	ldrb	r3, [r5, #16]
   21088:	cmp	r3, #63	; 0x3f
   2108c:	bgt	210e8 <ASN1_STRING_length@plt+0xf174>
   21090:	ldrb	r2, [r5, #17]
   21094:	cmp	r2, #62	; 0x3e
   21098:	bls	21144 <ASN1_STRING_length@plt+0xf1d0>
   2109c:	rsb	r3, r3, #67	; 0x43
   210a0:	ldr	r0, [r5]
   210a4:	add	r3, r5, r3, lsl #2
   210a8:	ldr	r1, [r3, #4]
   210ac:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   210b0:	subs	fp, r0, #0
   210b4:	beq	210e4 <ASN1_STRING_length@plt+0xf170>
   210b8:	mov	r1, #63	; 0x3f
   210bc:	mov	r0, r7
   210c0:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   210c4:	mov	r0, fp
   210c8:	str	sl, [sp]
   210cc:	mov	r3, r6
   210d0:	mov	r2, r7
   210d4:	mov	r1, #0
   210d8:	bl	201fc <ASN1_STRING_length@plt+0xe288>
   210dc:	mov	r0, r7
   210e0:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   210e4:	ldrb	r3, [r5, #16]
   210e8:	cmp	r3, #91	; 0x5b
   210ec:	bgt	21144 <ASN1_STRING_length@plt+0xf1d0>
   210f0:	ldrb	r2, [r5, #17]
   210f4:	cmp	r2, #90	; 0x5a
   210f8:	bls	21144 <ASN1_STRING_length@plt+0xf1d0>
   210fc:	rsb	r3, r3, #95	; 0x5f
   21100:	ldr	r0, [r5]
   21104:	add	r3, r5, r3, lsl #2
   21108:	ldr	r1, [r3, #4]
   2110c:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   21110:	subs	fp, r0, #0
   21114:	beq	21144 <ASN1_STRING_length@plt+0xf1d0>
   21118:	mov	r1, #91	; 0x5b
   2111c:	mov	r0, r7
   21120:	bl	29fe0 <ASN1_STRING_length@plt+0x1806c>
   21124:	mov	r0, fp
   21128:	str	sl, [sp]
   2112c:	mov	r3, r6
   21130:	mov	r2, r7
   21134:	mov	r1, #0
   21138:	bl	201fc <ASN1_STRING_length@plt+0xe288>
   2113c:	mov	r0, r7
   21140:	bl	2a0fc <ASN1_STRING_length@plt+0x18188>
   21144:	ldrb	r3, [r6]
   21148:	cmp	r3, #0
   2114c:	beq	211ac <ASN1_STRING_length@plt+0xf238>
   21150:	ldrb	r2, [r5, #16]
   21154:	cmp	r3, r2
   21158:	blt	21168 <ASN1_STRING_length@plt+0xf1f4>
   2115c:	ldrb	r1, [r5, #17]
   21160:	cmp	r3, r1
   21164:	ble	21174 <ASN1_STRING_length@plt+0xf200>
   21168:	mov	r0, r5
   2116c:	bl	11ba8 <free@plt>
   21170:	b	21000 <ASN1_STRING_length@plt+0xf08c>
   21174:	sub	r3, r3, r2
   21178:	ldr	r0, [r5]
   2117c:	add	r3, r5, r3, lsl #2
   21180:	add	r4, r4, #1
   21184:	ldr	r1, [r3, #20]
   21188:	bl	1fd30 <ASN1_STRING_length@plt+0xddbc>
   2118c:	mov	r6, r0
   21190:	mov	r0, r5
   21194:	bl	11ba8 <free@plt>
   21198:	subs	r5, r6, #0
   2119c:	bne	20f48 <ASN1_STRING_length@plt+0xefd4>
   211a0:	b	21000 <ASN1_STRING_length@plt+0xf08c>
   211a4:	mov	r1, #0
   211a8:	b	20fe8 <ASN1_STRING_length@plt+0xf074>
   211ac:	mov	r0, r5
   211b0:	add	r1, sp, #12
   211b4:	bl	1fac4 <ASN1_STRING_length@plt+0xdb50>
   211b8:	b	21000 <ASN1_STRING_length@plt+0xf08c>
   211bc:	bl	11d88 <__stack_chk_fail@plt>
   211c0:	strdeq	lr, [r1], -r4
   211c4:	strdeq	r0, [r0], -r8
   211c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   211cc:	mov	r6, r2
   211d0:	ldr	r4, [sp, #32]
   211d4:	mov	r7, r0
   211d8:	add	r2, r4, #6
   211dc:	add	r0, r2, r6
   211e0:	mov	r9, r1
   211e4:	mov	r8, r3
   211e8:	bl	11d64 <malloc@plt>
   211ec:	subs	r5, r0, #0
   211f0:	moveq	r4, r5
   211f4:	beq	2124c <ASN1_STRING_length@plt+0xf2d8>
   211f8:	add	r0, r4, #5
   211fc:	add	r0, r5, r0
   21200:	mov	r1, r9
   21204:	mov	r2, r6
   21208:	str	r0, [r5]
   2120c:	bl	11c5c <memcpy@plt>
   21210:	mov	r0, r5
   21214:	mov	r2, r4
   21218:	ldr	r3, [r0], #4
   2121c:	mov	r9, #0
   21220:	add	r4, r5, r4
   21224:	mov	r1, r8
   21228:	strb	r9, [r3, r6]
   2122c:	bl	11c5c <memcpy@plt>
   21230:	strb	r9, [r4, #4]
   21234:	mov	r1, r5
   21238:	ldr	r0, [r7]
   2123c:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   21240:	subs	r4, r0, #0
   21244:	strne	r4, [r7]
   21248:	beq	21254 <ASN1_STRING_length@plt+0xf2e0>
   2124c:	mov	r0, r4
   21250:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21254:	mov	r0, r5
   21258:	bl	11ba8 <free@plt>
   2125c:	mov	r0, r4
   21260:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21268:	sub	sp, sp, #28
   2126c:	ldr	r6, [sp, #64]	; 0x40
   21270:	cmp	r6, #0
   21274:	beq	2138c <ASN1_STRING_length@plt+0xf418>
   21278:	str	r0, [sp, #12]
   2127c:	ldr	r9, [pc, #288]	; 213a4 <ASN1_STRING_length@plt+0xf430>
   21280:	add	r0, r6, r6, lsl #1
   21284:	mov	r7, r3
   21288:	add	r3, r0, #19
   2128c:	str	r2, [sp, #20]
   21290:	umull	r2, r3, r9, r3
   21294:	str	r1, [sp, #16]
   21298:	sub	r0, r0, #3
   2129c:	lsr	r3, r3, #4
   212a0:	add	r3, r3, r3, lsl #1
   212a4:	add	r0, r3, r0
   212a8:	bl	11d64 <malloc@plt>
   212ac:	subs	r8, r0, #0
   212b0:	beq	2139c <ASN1_STRING_length@plt+0xf428>
   212b4:	cmp	r6, #0
   212b8:	ble	21354 <ASN1_STRING_length@plt+0xf3e0>
   212bc:	ldr	r3, [pc, #228]	; 213a8 <ASN1_STRING_length@plt+0xf434>
   212c0:	ldr	fp, [pc, #228]	; 213ac <ASN1_STRING_length@plt+0xf438>
   212c4:	mov	r4, #0
   212c8:	add	r3, pc, r3
   212cc:	add	fp, pc, fp
   212d0:	str	r3, [sp, #8]
   212d4:	sub	r7, r7, #1
   212d8:	mov	r5, r4
   212dc:	sub	sl, r6, #1
   212e0:	b	212f0 <ASN1_STRING_length@plt+0xf37c>
   212e4:	cmp	r6, r4
   212e8:	mov	r5, r2
   212ec:	beq	21354 <ASN1_STRING_length@plt+0xf3e0>
   212f0:	ldrb	r1, [r7, #1]!
   212f4:	mov	r3, fp
   212f8:	mvn	r2, #0
   212fc:	str	r1, [sp]
   21300:	add	r0, r8, r5
   21304:	mov	r1, #1
   21308:	bl	11e90 <__sprintf_chk@plt>
   2130c:	cmp	r4, sl
   21310:	add	r4, r4, #1
   21314:	mov	r1, #58	; 0x3a
   21318:	add	r2, r5, #2
   2131c:	umull	r0, r3, r9, r4
   21320:	bge	212e4 <ASN1_STRING_length@plt+0xf370>
   21324:	strb	r1, [r8, r2]
   21328:	lsr	r3, r3, #4
   2132c:	add	r2, r5, #3
   21330:	add	r3, r3, r3, lsl #2
   21334:	cmp	r4, r3, lsl #2
   21338:	bne	212e4 <ASN1_STRING_length@plt+0xf370>
   2133c:	ldr	r3, [sp, #8]
   21340:	cmp	r6, r4
   21344:	add	r5, r5, #6
   21348:	ldr	r0, [r3]
   2134c:	str	r0, [r8, r2]
   21350:	bne	212f0 <ASN1_STRING_length@plt+0xf37c>
   21354:	mov	r0, r8
   21358:	bl	11c44 <strlen@plt>
   2135c:	ldr	r2, [sp, #20]
   21360:	ldr	r1, [sp, #16]
   21364:	mov	r3, r8
   21368:	str	r0, [sp]
   2136c:	ldr	r0, [sp, #12]
   21370:	bl	211c8 <ASN1_STRING_length@plt+0xf254>
   21374:	mov	r4, r0
   21378:	mov	r0, r8
   2137c:	bl	11ba8 <free@plt>
   21380:	mov	r0, r4
   21384:	add	sp, sp, #28
   21388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2138c:	mov	r3, r6
   21390:	add	sp, sp, #28
   21394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21398:	b	211c8 <ASN1_STRING_length@plt+0xf254>
   2139c:	mov	r4, r8
   213a0:	b	21380 <ASN1_STRING_length@plt+0xf40c>
   213a4:	stclgt	12, cr12, [ip], {205}	; 0xcd
   213a8:			; <UNDEFINED> instruction: 0x0000dab0
   213ac:	andeq	sp, r0, r4, lsr #21
   213b0:	push	{r4, r5, r6, lr}
   213b4:	mov	r6, r1
   213b8:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   213bc:	ldr	r5, [r0, #8]
   213c0:	cmp	r5, #0
   213c4:	beq	21404 <ASN1_STRING_length@plt+0xf490>
   213c8:	mov	r4, r5
   213cc:	b	213e4 <ASN1_STRING_length@plt+0xf470>
   213d0:	ldr	r4, [r4]
   213d4:	cmp	r4, r5
   213d8:	beq	21404 <ASN1_STRING_length@plt+0xf490>
   213dc:	cmp	r4, #0
   213e0:	beq	21404 <ASN1_STRING_length@plt+0xf490>
   213e4:	mov	r0, r4
   213e8:	bl	1da8c <ASN1_STRING_length@plt+0xbb18>
   213ec:	ldr	r1, [r6]
   213f0:	bl	11f14 <strcmp@plt>
   213f4:	cmp	r0, #0
   213f8:	bne	213d0 <ASN1_STRING_length@plt+0xf45c>
   213fc:	mov	r0, #1
   21400:	pop	{r4, r5, r6, pc}
   21404:	mov	r0, #0
   21408:	pop	{r4, r5, r6, pc}
   2140c:	ldr	r2, [pc, #684]	; 216c0 <ASN1_STRING_length@plt+0xf74c>
   21410:	ldr	r3, [pc, #684]	; 216c4 <ASN1_STRING_length@plt+0xf750>
   21414:	add	r2, pc, r2
   21418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2141c:	sub	sp, sp, #4224	; 0x1080
   21420:	ldr	r7, [r2, r3]
   21424:	sub	sp, sp, #36	; 0x24
   21428:	add	lr, sp, #4224	; 0x1080
   2142c:	ldr	r1, [pc, #660]	; 216c8 <ASN1_STRING_length@plt+0xf754>
   21430:	ldr	ip, [r7]
   21434:	add	lr, lr, #28
   21438:	mov	r5, r0
   2143c:	add	r4, sp, #160	; 0xa0
   21440:	ldr	r0, [r0, #8]
   21444:	mov	r3, #4096	; 0x1000
   21448:	add	r1, pc, r1
   2144c:	sub	r6, r4, #4
   21450:	str	r0, [sp, #4]
   21454:	str	r1, [sp]
   21458:	mov	r0, r6
   2145c:	mov	r1, r3
   21460:	str	ip, [lr]
   21464:	mov	r2, #1
   21468:	bl	11cc8 <__snprintf_chk@plt>
   2146c:	mov	r1, #524288	; 0x80000
   21470:	mov	r9, r0
   21474:	mov	r0, r6
   21478:	bl	11ca4 <open64@plt>
   2147c:	subs	sl, r0, #0
   21480:	blt	21570 <ASN1_STRING_length@plt+0xf5fc>
   21484:	sub	r4, r4, #36	; 0x24
   21488:	mov	r1, r4
   2148c:	mov	r2, #32
   21490:	bl	1b6e0 <ASN1_STRING_length@plt+0x976c>
   21494:	mov	r8, r0
   21498:	mov	r0, sl
   2149c:	bl	11d04 <close@plt>
   214a0:	cmp	r8, #0
   214a4:	blt	21668 <ASN1_STRING_length@plt+0xf6f4>
   214a8:	ldr	r1, [pc, #540]	; 216cc <ASN1_STRING_length@plt+0xf758>
   214ac:	mov	r0, r4
   214b0:	add	r1, pc, r1
   214b4:	bl	11f14 <strcmp@plt>
   214b8:	cmp	r0, #0
   214bc:	moveq	r8, #1
   214c0:	beq	21548 <ASN1_STRING_length@plt+0xf5d4>
   214c4:	ldr	r1, [pc, #516]	; 216d0 <ASN1_STRING_length@plt+0xf75c>
   214c8:	mov	r0, r4
   214cc:	add	r1, pc, r1
   214d0:	bl	11f14 <strcmp@plt>
   214d4:	cmp	r0, #0
   214d8:	beq	2161c <ASN1_STRING_length@plt+0xf6a8>
   214dc:	ldr	r1, [pc, #496]	; 216d4 <ASN1_STRING_length@plt+0xf760>
   214e0:	mov	r0, r4
   214e4:	add	r1, pc, r1
   214e8:	bl	11f14 <strcmp@plt>
   214ec:	cmp	r0, #0
   214f0:	moveq	r8, #3
   214f4:	beq	21548 <ASN1_STRING_length@plt+0xf5d4>
   214f8:	ldr	r0, [r5]
   214fc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21500:	cmp	r0, #2
   21504:	mvnle	r8, #21
   21508:	ble	21548 <ASN1_STRING_length@plt+0xf5d4>
   2150c:	ldr	r2, [pc, #452]	; 216d8 <ASN1_STRING_length@plt+0xf764>
   21510:	ldr	r3, [pc, #452]	; 216dc <ASN1_STRING_length@plt+0xf768>
   21514:	add	r2, pc, r2
   21518:	str	r4, [sp, #12]
   2151c:	str	r6, [sp, #8]
   21520:	ldr	r0, [r5]
   21524:	str	r2, [sp, #4]
   21528:	ldr	r2, [pc, #432]	; 216e0 <ASN1_STRING_length@plt+0xf76c>
   2152c:	add	r3, pc, r3
   21530:	str	r3, [sp]
   21534:	add	r2, pc, r2
   21538:	ldr	r3, [pc, #420]	; 216e4 <ASN1_STRING_length@plt+0xf770>
   2153c:	mov	r1, #3
   21540:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21544:	mvn	r8, #21
   21548:	add	r3, sp, #4224	; 0x1080
   2154c:	add	r3, r3, #28
   21550:	ldr	r2, [r3]
   21554:	ldr	r3, [r7]
   21558:	mov	r0, r8
   2155c:	cmp	r2, r3
   21560:	bne	216bc <ASN1_STRING_length@plt+0xf748>
   21564:	add	sp, sp, #4224	; 0x1080
   21568:	add	sp, sp, #36	; 0x24
   2156c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21570:	bl	11f38 <__errno_location@plt>
   21574:	ldr	sl, [r0]
   21578:	ldr	r0, [r5]
   2157c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21580:	rsb	r8, sl, #0
   21584:	cmp	r0, #6
   21588:	bgt	21624 <ASN1_STRING_length@plt+0xf6b0>
   2158c:	cmp	r9, #10
   21590:	ble	215c8 <ASN1_STRING_length@plt+0xf654>
   21594:	add	r9, r4, r9
   21598:	mov	r3, #0
   2159c:	add	r2, sp, #16
   215a0:	mov	r1, r6
   215a4:	mov	r0, #3
   215a8:	strb	r3, [r9, #-14]
   215ac:	bl	11d40 <__xstat64@plt>
   215b0:	cmp	r0, #0
   215b4:	bne	215c8 <ASN1_STRING_length@plt+0xf654>
   215b8:	ldr	r3, [r4, #-128]	; 0xffffff80
   215bc:	and	r3, r3, #61440	; 0xf000
   215c0:	cmp	r3, #16384	; 0x4000
   215c4:	beq	2161c <ASN1_STRING_length@plt+0xf6a8>
   215c8:	ldr	r0, [r5]
   215cc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   215d0:	cmp	r0, #6
   215d4:	ble	21548 <ASN1_STRING_length@plt+0xf5d4>
   215d8:	mov	r0, sl
   215dc:	ldr	r4, [r5]
   215e0:	bl	119f8 <strerror@plt>
   215e4:	ldr	r2, [pc, #252]	; 216e8 <ASN1_STRING_length@plt+0xf774>
   215e8:	ldr	r3, [pc, #252]	; 216ec <ASN1_STRING_length@plt+0xf778>
   215ec:	add	r2, pc, r2
   215f0:	add	r3, pc, r3
   215f4:	stmib	sp, {r2, r6}
   215f8:	ldr	r2, [pc, #240]	; 216f0 <ASN1_STRING_length@plt+0xf77c>
   215fc:	str	r3, [sp]
   21600:	add	r2, pc, r2
   21604:	mov	r3, #1760	; 0x6e0
   21608:	mov	r1, #7
   2160c:	str	r0, [sp, #12]
   21610:	mov	r0, r4
   21614:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21618:	b	21548 <ASN1_STRING_length@plt+0xf5d4>
   2161c:	mov	r8, #2
   21620:	b	21548 <ASN1_STRING_length@plt+0xf5d4>
   21624:	mov	r0, sl
   21628:	ldr	fp, [r5]
   2162c:	bl	119f8 <strerror@plt>
   21630:	ldr	r2, [pc, #188]	; 216f4 <ASN1_STRING_length@plt+0xf780>
   21634:	ldr	r3, [pc, #188]	; 216f8 <ASN1_STRING_length@plt+0xf784>
   21638:	add	r2, pc, r2
   2163c:	add	r3, pc, r3
   21640:	stmib	sp, {r2, r6}
   21644:	ldr	r2, [pc, #176]	; 216fc <ASN1_STRING_length@plt+0xf788>
   21648:	str	r3, [sp]
   2164c:	add	r2, pc, r2
   21650:	ldr	r3, [pc, #168]	; 21700 <ASN1_STRING_length@plt+0xf78c>
   21654:	mov	r1, #7
   21658:	str	r0, [sp, #12]
   2165c:	mov	r0, fp
   21660:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21664:	b	2158c <ASN1_STRING_length@plt+0xf618>
   21668:	ldr	r0, [r5]
   2166c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21670:	cmp	r0, #2
   21674:	ble	21548 <ASN1_STRING_length@plt+0xf5d4>
   21678:	rsb	r0, r8, #0
   2167c:	ldr	r4, [r5]
   21680:	bl	119f8 <strerror@plt>
   21684:	ldr	r2, [pc, #120]	; 21704 <ASN1_STRING_length@plt+0xf790>
   21688:	ldr	r3, [pc, #120]	; 21708 <ASN1_STRING_length@plt+0xf794>
   2168c:	add	r2, pc, r2
   21690:	add	r3, pc, r3
   21694:	stmib	sp, {r2, r6}
   21698:	ldr	r2, [pc, #108]	; 2170c <ASN1_STRING_length@plt+0xf798>
   2169c:	str	r3, [sp]
   216a0:	add	r2, pc, r2
   216a4:	ldr	r3, [pc, #100]	; 21710 <ASN1_STRING_length@plt+0xf79c>
   216a8:	mov	r1, #3
   216ac:	str	r0, [sp, #12]
   216b0:	mov	r0, r4
   216b4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   216b8:	b	21548 <ASN1_STRING_length@plt+0xf5d4>
   216bc:	bl	11d88 <__stack_chk_fail@plt>
   216c0:	andeq	lr, r1, r0, ror #19
   216c4:	strdeq	r0, [r0], -r8
   216c8:	andeq	sp, r0, ip, asr #14
   216cc:	andeq	sp, r0, r8, asr r7
   216d0:	andeq	sp, r0, r4, asr #14
   216d4:	andeq	sp, r0, r4, lsr r7
   216d8:	andeq	sp, r0, ip, lsl #14
   216dc:	andeq	sp, r0, r0, asr #10
   216e0:	andeq	sp, r0, ip, ror r6
   216e4:	strdeq	r0, [r0], -r3
   216e8:	andeq	sp, r0, r0, ror #11
   216ec:	andeq	sp, r0, ip, ror r4
   216f0:			; <UNDEFINED> instruction: 0x0000d5b0
   216f4:	muleq	r0, r4, r5
   216f8:	andeq	sp, r0, r0, lsr r4
   216fc:	andeq	sp, r0, r4, ror #10
   21700:	ldrdeq	r0, [r0], -r6
   21704:	andeq	sp, r0, ip, asr r5
   21708:	ldrdeq	sp, [r0], -ip
   2170c:	andeq	sp, r0, r0, lsl r5
   21710:	andeq	r0, r0, r8, ror #13
   21714:	ldrb	r3, [r0, #56]	; 0x38
   21718:	and	r1, r1, #1
   2171c:	bic	r3, r3, #1
   21720:	orr	r1, r1, r3
   21724:	strb	r1, [r0, #56]	; 0x38
   21728:	bx	lr
   2172c:	cmp	r1, #0
   21730:	movne	r3, #2
   21734:	moveq	r3, #1
   21738:	str	r3, [r0, #52]	; 0x34
   2173c:	bx	lr
   21740:	ldrb	r3, [r0, #56]	; 0x38
   21744:	and	r1, r1, #1
   21748:	bic	r3, r3, #4
   2174c:	orr	r3, r3, r1, lsl #2
   21750:	strb	r3, [r0, #56]	; 0x38
   21754:	bx	lr
   21758:	ldr	r3, [r0, #52]	; 0x34
   2175c:	cmp	r3, #0
   21760:	beq	21774 <ASN1_STRING_length@plt+0xf800>
   21764:	sub	r0, r3, #2
   21768:	clz	r0, r0
   2176c:	lsr	r0, r0, #5
   21770:	bx	lr
   21774:	push	{r4, lr}
   21778:	mov	r4, r0
   2177c:	ldr	r1, [r0, #8]
   21780:	ldr	r0, [r0]
   21784:	bl	1cc5c <ASN1_STRING_length@plt+0xace8>
   21788:	cmp	r0, #0
   2178c:	movne	r3, #2
   21790:	moveq	r3, #1
   21794:	str	r3, [r4, #52]	; 0x34
   21798:	pop	{r4, pc}
   2179c:	cmp	r0, #0
   217a0:	ldrne	r3, [r0, #44]	; 0x2c
   217a4:	addne	r3, r3, #1
   217a8:	strne	r3, [r0, #44]	; 0x2c
   217ac:	bx	lr
   217b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   217b4:	mov	r5, r2
   217b8:	mov	r6, r3
   217bc:	mov	r7, r0
   217c0:	mov	r8, r1
   217c4:	bl	1c934 <ASN1_STRING_length@plt+0xa9c0>
   217c8:	subs	r9, r0, #0
   217cc:	bne	21880 <ASN1_STRING_length@plt+0xf90c>
   217d0:	cmp	r6, #0
   217d4:	beq	21898 <ASN1_STRING_length@plt+0xf924>
   217d8:	ldr	r3, [sp, #32]
   217dc:	add	r6, r3, #2
   217e0:	add	r6, r6, r5
   217e4:	lsl	r0, r6, #1
   217e8:	add	r0, r0, #60	; 0x3c
   217ec:	bl	11d64 <malloc@plt>
   217f0:	subs	r4, r0, #0
   217f4:	beq	218ec <ASN1_STRING_length@plt+0xf978>
   217f8:	mov	r2, #60	; 0x3c
   217fc:	mov	r1, r9
   21800:	bl	11b18 <memset@plt>
   21804:	mov	r0, r7
   21808:	bl	1bf08 <ASN1_STRING_length@plt+0x9f94>
   2180c:	mov	r3, r4
   21810:	mov	r2, r6
   21814:	mov	r1, r8
   21818:	str	r0, [r3], #60	; 0x3c
   2181c:	str	r3, [r4, #8]
   21820:	mov	r0, r3
   21824:	bl	11c5c <memcpy@plt>
   21828:	mov	r1, r8
   2182c:	mov	r2, r6
   21830:	strb	r9, [r0, r5]
   21834:	ldr	r0, [r4, #8]
   21838:	add	r5, r5, #1
   2183c:	add	r5, r0, r5
   21840:	add	r0, r0, r6
   21844:	str	r5, [r4, #32]
   21848:	str	r0, [r4, #4]
   2184c:	bl	11c5c <memcpy@plt>
   21850:	ldr	r3, [r4, #4]
   21854:	mov	r1, #1
   21858:	mov	r2, r3
   2185c:	mov	r0, r7
   21860:	str	r1, [r4, #44]	; 0x2c
   21864:	mov	r1, r4
   21868:	bl	1c9c0 <ASN1_STRING_length@plt+0xaa4c>
   2186c:	ldr	r3, [sp, #36]	; 0x24
   21870:	str	r4, [r3]
   21874:	mov	r3, #0
   21878:	mov	r0, r3
   2187c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21880:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   21884:	ldr	r2, [sp, #36]	; 0x24
   21888:	mov	r3, #0
   2188c:	str	r0, [r2]
   21890:	mov	r0, r3
   21894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21898:	add	r0, r5, #61	; 0x3d
   2189c:	bl	11d64 <malloc@plt>
   218a0:	add	r5, r5, #1
   218a4:	subs	r4, r0, #0
   218a8:	beq	218ec <ASN1_STRING_length@plt+0xf978>
   218ac:	mov	r2, #60	; 0x3c
   218b0:	mov	r1, r6
   218b4:	bl	11b18 <memset@plt>
   218b8:	mov	r0, r7
   218bc:	bl	1bf08 <ASN1_STRING_length@plt+0x9f94>
   218c0:	mov	r3, r4
   218c4:	mov	r2, r5
   218c8:	mov	r1, r8
   218cc:	str	r0, [r3], #60	; 0x3c
   218d0:	str	r3, [r4, #8]
   218d4:	mov	r0, r3
   218d8:	bl	11c5c <memcpy@plt>
   218dc:	str	r6, [r4, #32]
   218e0:	mov	r3, r0
   218e4:	str	r0, [r4, #4]
   218e8:	b	21854 <ASN1_STRING_length@plt+0xf8e0>
   218ec:	mvn	r3, #11
   218f0:	mov	r0, r3
   218f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   218f8:	ldr	ip, [pc, #176]	; 219b0 <ASN1_STRING_length@plt+0xfa3c>
   218fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   21900:	add	ip, pc, ip
   21904:	ldr	lr, [pc, #168]	; 219b4 <ASN1_STRING_length@plt+0xfa40>
   21908:	sub	sp, sp, #4096	; 0x1000
   2190c:	cmp	r1, #0
   21910:	ldr	r6, [ip, lr]
   21914:	sub	sp, sp, #20
   21918:	clz	r3, r2
   2191c:	mov	r9, r2
   21920:	lsr	r3, r3, #5
   21924:	add	r2, sp, #4096	; 0x1000
   21928:	moveq	r3, #1
   2192c:	cmp	r0, #0
   21930:	movne	r4, r3
   21934:	moveq	r4, #1
   21938:	ldr	r3, [r6]
   2193c:	add	r2, r2, #12
   21940:	cmp	r4, #0
   21944:	str	r3, [r2]
   21948:	bne	219a4 <ASN1_STRING_length@plt+0xfa30>
   2194c:	add	r7, sp, #12
   21950:	add	r5, sp, #16
   21954:	mov	r8, r0
   21958:	add	r2, sp, #8
   2195c:	mov	r0, r1
   21960:	mov	r1, r7
   21964:	bl	1b5bc <ASN1_STRING_length@plt+0x9648>
   21968:	ldr	r2, [r5, #-8]
   2196c:	mov	r1, r7
   21970:	stm	sp, {r4, r9}
   21974:	mov	r3, r4
   21978:	mov	r0, r8
   2197c:	bl	217b0 <ASN1_STRING_length@plt+0xf83c>
   21980:	add	r3, sp, #4096	; 0x1000
   21984:	add	r3, r3, #12
   21988:	ldr	r2, [r3]
   2198c:	ldr	r3, [r6]
   21990:	cmp	r2, r3
   21994:	bne	219ac <ASN1_STRING_length@plt+0xfa38>
   21998:	add	sp, sp, #4096	; 0x1000
   2199c:	add	sp, sp, #20
   219a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   219a4:	mvn	r0, #1
   219a8:	b	21980 <ASN1_STRING_length@plt+0xfa0c>
   219ac:	bl	11d88 <__stack_chk_fail@plt>
   219b0:	strdeq	lr, [r1], -r4
   219b4:	strdeq	r0, [r0], -r8
   219b8:	ldr	ip, [pc, #236]	; 21aac <ASN1_STRING_length@plt+0xfb38>
   219bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219c0:	add	ip, pc, ip
   219c4:	ldr	lr, [pc, #228]	; 21ab0 <ASN1_STRING_length@plt+0xfb3c>
   219c8:	mov	r9, r2
   219cc:	sub	sp, sp, #4096	; 0x1000
   219d0:	ldr	r2, [ip, lr]
   219d4:	sub	sp, sp, #28
   219d8:	mov	fp, r3
   219dc:	add	r3, sp, #4096	; 0x1000
   219e0:	add	r3, r3, #20
   219e4:	mov	r6, r1
   219e8:	ldr	r1, [r2]
   219ec:	mov	sl, r0
   219f0:	mov	r0, r9
   219f4:	str	r1, [r3]
   219f8:	str	r2, [sp, #12]
   219fc:	bl	11c44 <strlen@plt>
   21a00:	mov	r4, r0
   21a04:	mov	r0, r6
   21a08:	bl	11c44 <strlen@plt>
   21a0c:	add	r3, r4, r0
   21a10:	add	r3, r3, #2
   21a14:	cmp	r3, #4096	; 0x1000
   21a18:	bhi	21aa0 <ASN1_STRING_length@plt+0xfb2c>
   21a1c:	add	r8, sp, #20
   21a20:	mov	r7, r0
   21a24:	mov	r3, #4096	; 0x1000
   21a28:	mov	r1, r9
   21a2c:	mov	r2, r4
   21a30:	mov	r0, r8
   21a34:	bl	11c20 <__memcpy_chk@plt>
   21a38:	add	r5, sp, #24
   21a3c:	add	r0, r4, #1
   21a40:	add	r2, r7, #1
   21a44:	mov	r1, r6
   21a48:	add	r0, r8, r0
   21a4c:	add	r5, r5, r4
   21a50:	bl	11c5c <memcpy@plt>
   21a54:	mov	ip, #92	; 0x5c
   21a58:	stm	sp, {r7, fp}
   21a5c:	mov	r1, r8
   21a60:	mov	r3, r6
   21a64:	mov	r2, r4
   21a68:	mov	r0, sl
   21a6c:	strb	ip, [r5, #-4]
   21a70:	bl	217b0 <ASN1_STRING_length@plt+0xf83c>
   21a74:	and	r0, r0, r0, asr #31
   21a78:	add	r3, sp, #4096	; 0x1000
   21a7c:	add	r3, r3, #20
   21a80:	ldr	r2, [r3]
   21a84:	ldr	r3, [sp, #12]
   21a88:	ldr	r3, [r3]
   21a8c:	cmp	r2, r3
   21a90:	bne	21aa8 <ASN1_STRING_length@plt+0xfb34>
   21a94:	add	sp, sp, #4096	; 0x1000
   21a98:	add	sp, sp, #28
   21a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21aa0:	mvn	r0, #35	; 0x23
   21aa4:	b	21a78 <ASN1_STRING_length@plt+0xfb04>
   21aa8:	bl	11d88 <__stack_chk_fail@plt>
   21aac:	andeq	lr, r1, r4, lsr r4
   21ab0:	strdeq	r0, [r0], -r8
   21ab4:	ldr	ip, [pc, #732]	; 21d98 <ASN1_STRING_length@plt+0xfe24>
   21ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21abc:	add	ip, pc, ip
   21ac0:	ldr	lr, [pc, #724]	; 21d9c <ASN1_STRING_length@plt+0xfe28>
   21ac4:	cmp	r1, #0
   21ac8:	sub	sp, sp, #4224	; 0x1080
   21acc:	ldr	r6, [ip, lr]
   21ad0:	clz	r3, r2
   21ad4:	sub	sp, sp, #20
   21ad8:	lsr	r3, r3, #5
   21adc:	moveq	r3, #1
   21ae0:	cmp	r0, #0
   21ae4:	moveq	r3, #1
   21ae8:	mov	sl, r2
   21aec:	add	r2, sp, #4224	; 0x1080
   21af0:	cmp	r3, #0
   21af4:	add	r2, r2, #12
   21af8:	ldr	r3, [r6]
   21afc:	str	r3, [r2]
   21b00:	bne	21c80 <ASN1_STRING_length@plt+0xfd0c>
   21b04:	mov	r9, r0
   21b08:	mov	r0, r1
   21b0c:	mov	r8, r1
   21b10:	bl	1b9cc <ASN1_STRING_length@plt+0x9a58>
   21b14:	subs	r4, r0, #0
   21b18:	beq	21ca8 <ASN1_STRING_length@plt+0xfd34>
   21b1c:	add	r5, sp, #80	; 0x50
   21b20:	sub	r2, r5, #48	; 0x30
   21b24:	mov	r1, r4
   21b28:	mov	r0, #3
   21b2c:	bl	11d40 <__xstat64@plt>
   21b30:	cmp	r0, #0
   21b34:	blt	21bd8 <ASN1_STRING_length@plt+0xfc64>
   21b38:	add	r7, sp, #144	; 0x90
   21b3c:	sub	fp, r7, #4
   21b40:	mov	r1, fp
   21b44:	sub	r2, r5, #52	; 0x34
   21b48:	mov	r0, r8
   21b4c:	bl	1b638 <ASN1_STRING_length@plt+0x96c4>
   21b50:	cmp	r0, #0
   21b54:	beq	21d3c <ASN1_STRING_length@plt+0xfdc8>
   21b58:	mov	r1, fp
   21b5c:	mov	r0, r9
   21b60:	bl	1c934 <ASN1_STRING_length@plt+0xa9c0>
   21b64:	cmp	r0, #0
   21b68:	mov	r8, r0
   21b6c:	str	r0, [r7, #-120]	; 0xffffff88
   21b70:	beq	21c44 <ASN1_STRING_length@plt+0xfcd0>
   21b74:	ldr	r0, [r0, #12]
   21b78:	cmp	r0, #0
   21b7c:	streq	r4, [r8, #12]
   21b80:	beq	21ba0 <ASN1_STRING_length@plt+0xfc2c>
   21b84:	mov	r1, r4
   21b88:	bl	11f14 <strcmp@plt>
   21b8c:	cmp	r0, #0
   21b90:	bne	21c88 <ASN1_STRING_length@plt+0xfd14>
   21b94:	mov	r0, r4
   21b98:	bl	11ba8 <free@plt>
   21b9c:	ldr	r8, [r7, #-120]	; 0xffffff88
   21ba0:	mov	r0, r8
   21ba4:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   21ba8:	mov	r5, #0
   21bac:	str	r0, [sl]
   21bb0:	add	r3, sp, #4224	; 0x1080
   21bb4:	add	r3, r3, #12
   21bb8:	ldr	r2, [r3]
   21bbc:	ldr	r3, [r6]
   21bc0:	mov	r0, r5
   21bc4:	cmp	r2, r3
   21bc8:	bne	21d94 <ASN1_STRING_length@plt+0xfe20>
   21bcc:	add	sp, sp, #4224	; 0x1080
   21bd0:	add	sp, sp, #20
   21bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bd8:	bl	11f38 <__errno_location@plt>
   21bdc:	mov	r7, r0
   21be0:	mov	r0, r9
   21be4:	ldr	r5, [r7]
   21be8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21bec:	rsb	r5, r5, #0
   21bf0:	cmp	r0, #6
   21bf4:	bgt	21c04 <ASN1_STRING_length@plt+0xfc90>
   21bf8:	mov	r0, r4
   21bfc:	bl	11ba8 <free@plt>
   21c00:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21c04:	ldr	r0, [r7]
   21c08:	bl	119f8 <strerror@plt>
   21c0c:	ldr	r2, [pc, #396]	; 21da0 <ASN1_STRING_length@plt+0xfe2c>
   21c10:	ldr	r3, [pc, #396]	; 21da4 <ASN1_STRING_length@plt+0xfe30>
   21c14:	add	r2, pc, r2
   21c18:	add	r3, pc, r3
   21c1c:	stmib	sp, {r2, r8}
   21c20:	ldr	r2, [pc, #384]	; 21da8 <ASN1_STRING_length@plt+0xfe34>
   21c24:	str	r3, [sp]
   21c28:	add	r2, pc, r2
   21c2c:	ldr	r3, [pc, #376]	; 21dac <ASN1_STRING_length@plt+0xfe38>
   21c30:	mov	r1, #7
   21c34:	str	r0, [sp, #12]
   21c38:	mov	r0, r9
   21c3c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21c40:	b	21bf8 <ASN1_STRING_length@plt+0xfc84>
   21c44:	sub	r5, r5, #56	; 0x38
   21c48:	str	r5, [sp, #4]
   21c4c:	str	r0, [sp]
   21c50:	mov	r1, fp
   21c54:	mov	r0, r9
   21c58:	mov	r3, r8
   21c5c:	ldr	r2, [r7, #-116]	; 0xffffff8c
   21c60:	bl	217b0 <ASN1_STRING_length@plt+0xf83c>
   21c64:	subs	r5, r0, #0
   21c68:	blt	21bf8 <ASN1_STRING_length@plt+0xfc84>
   21c6c:	ldr	r3, [r7, #-120]	; 0xffffff88
   21c70:	mov	r5, r8
   21c74:	str	r4, [r3, #12]
   21c78:	str	r3, [sl]
   21c7c:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21c80:	mvn	r5, #1
   21c84:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21c88:	mov	r0, r9
   21c8c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21c90:	cmp	r0, #2
   21c94:	bgt	21cf8 <ASN1_STRING_length@plt+0xfd84>
   21c98:	mov	r0, r4
   21c9c:	bl	11ba8 <free@plt>
   21ca0:	mvn	r5, #16
   21ca4:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21ca8:	mov	r0, r9
   21cac:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21cb0:	cmp	r0, #6
   21cb4:	mvnle	r5, #11
   21cb8:	ble	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21cbc:	ldr	r2, [pc, #236]	; 21db0 <ASN1_STRING_length@plt+0xfe3c>
   21cc0:	ldr	r3, [pc, #236]	; 21db4 <ASN1_STRING_length@plt+0xfe40>
   21cc4:	add	r2, pc, r2
   21cc8:	str	r2, [sp, #4]
   21ccc:	ldr	r2, [pc, #228]	; 21db8 <ASN1_STRING_length@plt+0xfe44>
   21cd0:	add	r3, pc, r3
   21cd4:	str	r3, [sp]
   21cd8:	str	r8, [sp, #8]
   21cdc:	mov	r0, r9
   21ce0:	ldr	r3, [pc, #212]	; 21dbc <ASN1_STRING_length@plt+0xfe48>
   21ce4:	add	r2, pc, r2
   21ce8:	mov	r1, #7
   21cec:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21cf0:	mvn	r5, #11
   21cf4:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21cf8:	ldr	r2, [pc, #192]	; 21dc0 <ASN1_STRING_length@plt+0xfe4c>
   21cfc:	ldr	r1, [r7, #-120]	; 0xffffff88
   21d00:	add	r2, pc, r2
   21d04:	ldr	r3, [pc, #184]	; 21dc4 <ASN1_STRING_length@plt+0xfe50>
   21d08:	ldr	r1, [r1, #12]
   21d0c:	stmib	sp, {r2, fp}
   21d10:	ldr	r2, [pc, #176]	; 21dc8 <ASN1_STRING_length@plt+0xfe54>
   21d14:	add	r3, pc, r3
   21d18:	str	r1, [sp, #16]
   21d1c:	str	r3, [sp]
   21d20:	mov	r0, r9
   21d24:	str	r4, [sp, #12]
   21d28:	ldr	r3, [pc, #156]	; 21dcc <ASN1_STRING_length@plt+0xfe58>
   21d2c:	add	r2, pc, r2
   21d30:	mov	r1, #3
   21d34:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21d38:	b	21c98 <ASN1_STRING_length@plt+0xfd24>
   21d3c:	mov	r0, r9
   21d40:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21d44:	cmp	r0, #6
   21d48:	bgt	21d5c <ASN1_STRING_length@plt+0xfde8>
   21d4c:	mov	r0, r4
   21d50:	bl	11ba8 <free@plt>
   21d54:	mvn	r5, #1
   21d58:	b	21bb0 <ASN1_STRING_length@plt+0xfc3c>
   21d5c:	ldr	r2, [pc, #108]	; 21dd0 <ASN1_STRING_length@plt+0xfe5c>
   21d60:	ldr	r3, [pc, #108]	; 21dd4 <ASN1_STRING_length@plt+0xfe60>
   21d64:	add	r2, pc, r2
   21d68:	str	r2, [sp, #4]
   21d6c:	ldr	r2, [pc, #100]	; 21dd8 <ASN1_STRING_length@plt+0xfe64>
   21d70:	add	r3, pc, r3
   21d74:	str	r3, [sp]
   21d78:	str	r8, [sp, #8]
   21d7c:	mov	r0, r9
   21d80:	mov	r3, #416	; 0x1a0
   21d84:	add	r2, pc, r2
   21d88:	mov	r1, #7
   21d8c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   21d90:	b	21d4c <ASN1_STRING_length@plt+0xfdd8>
   21d94:	bl	11d88 <__stack_chk_fail@plt>
   21d98:	andeq	lr, r1, r8, lsr r3
   21d9c:	strdeq	r0, [r0], -r8
   21da0:	muleq	r0, ip, r3
   21da4:	andeq	ip, r0, ip, ror #25
   21da8:	andeq	ip, r0, r8, lsl #31
   21dac:	muleq	r0, sl, r1
   21db0:	ldrdeq	sp, [r0], -r0
   21db4:	andeq	ip, r0, r4, lsr ip
   21db8:	andeq	ip, r0, ip, asr #29
   21dbc:	muleq	r0, r3, r1
   21dc0:	andeq	sp, r0, r0, asr #5
   21dc4:	strdeq	ip, [r0], -r0
   21dc8:	andeq	ip, r0, r4, lsl #29
   21dcc:	andeq	r0, r0, sp, lsr #3
   21dd0:	andeq	sl, r0, ip, lsr #17
   21dd4:	muleq	r0, r4, fp
   21dd8:	andeq	ip, r0, ip, lsr #28
   21ddc:	push	{r4, lr}
   21de0:	subs	r4, r0, #0
   21de4:	beq	21e00 <ASN1_STRING_length@plt+0xfe8c>
   21de8:	ldr	r0, [r4, #8]
   21dec:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   21df0:	mov	r0, r4
   21df4:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   21df8:	subs	r4, r0, #0
   21dfc:	bne	21de8 <ASN1_STRING_length@plt+0xfe74>
   21e00:	mov	r0, #0
   21e04:	pop	{r4, pc}
   21e08:	ldr	r3, [pc, #1000]	; 221f8 <ASN1_STRING_length@plt+0x10284>
   21e0c:	ldr	r2, [pc, #1000]	; 221fc <ASN1_STRING_length@plt+0x10288>
   21e10:	add	r3, pc, r3
   21e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e18:	sub	sp, sp, #4160	; 0x1040
   21e1c:	ldr	r2, [r3, r2]
   21e20:	sub	sp, sp, #12
   21e24:	mov	r9, r1
   21e28:	str	r2, [sp, #24]
   21e2c:	mov	r1, r2
   21e30:	ldrb	r2, [r0, #48]	; 0x30
   21e34:	ldr	r3, [r1]
   21e38:	add	r1, sp, #4160	; 0x1040
   21e3c:	tst	r2, #1
   21e40:	add	r1, r1, #4
   21e44:	mov	r6, r0
   21e48:	str	r3, [r1]
   21e4c:	ldrne	sl, [r0, #40]	; 0x28
   21e50:	bne	22044 <ASN1_STRING_length@plt+0x100d0>
   21e54:	ldr	r5, [r0, #16]
   21e58:	cmp	r5, #0
   21e5c:	bne	221d8 <ASN1_STRING_length@plt+0x10264>
   21e60:	orr	r2, r2, #1
   21e64:	strb	r2, [r0, #48]	; 0x30
   21e68:	mov	r1, #58	; 0x3a
   21e6c:	mov	r0, r9
   21e70:	bl	11ac4 <strchr@plt>
   21e74:	ldr	r7, [r6]
   21e78:	subs	sl, r0, #0
   21e7c:	beq	22094 <ASN1_STRING_length@plt+0x10120>
   21e80:	strb	r5, [sl]
   21e84:	ldr	r0, [r6]
   21e88:	bl	1bf00 <ASN1_STRING_length@plt+0x9f8c>
   21e8c:	ldr	fp, [pc, #876]	; 22200 <ASN1_STRING_length@plt+0x1028c>
   21e90:	str	r0, [sp, #48]	; 0x30
   21e94:	bl	11c44 <strlen@plt>
   21e98:	add	r3, r0, #2
   21e9c:	cmp	r3, fp
   21ea0:	mov	r8, r0
   21ea4:	str	r3, [sp, #28]
   21ea8:	bhi	22094 <ASN1_STRING_length@plt+0x10120>
   21eac:	add	r4, sp, #72	; 0x48
   21eb0:	sub	r3, r4, #4
   21eb4:	mov	r2, r8
   21eb8:	str	r3, [sp, #52]	; 0x34
   21ebc:	mov	r0, r3
   21ec0:	ldr	r1, [sp, #48]	; 0x30
   21ec4:	mov	r3, #4096	; 0x1000
   21ec8:	bl	11c20 <__memcpy_chk@plt>
   21ecc:	add	r3, r8, #1
   21ed0:	ldr	r1, [r6, #12]
   21ed4:	str	r3, [sp, #32]
   21ed8:	add	r8, r4, r8
   21edc:	add	r3, r4, r3
   21ee0:	mov	r2, #47	; 0x2f
   21ee4:	cmp	r1, #0
   21ee8:	strb	r2, [r8, #-4]
   21eec:	strb	r5, [r3, #-4]
   21ef0:	beq	22070 <ASN1_STRING_length@plt+0x100fc>
   21ef4:	ldr	r1, [pc, #776]	; 22204 <ASN1_STRING_length@plt+0x10290>
   21ef8:	sub	fp, r4, #12
   21efc:	add	r0, sl, #1
   21f00:	mov	r2, fp
   21f04:	add	r1, pc, r1
   21f08:	bl	11dd0 <strtok_r@plt>
   21f0c:	subs	r8, r0, #0
   21f10:	beq	221c8 <ASN1_STRING_length@plt+0x10254>
   21f14:	ldr	r3, [pc, #748]	; 22208 <ASN1_STRING_length@plt+0x10294>
   21f18:	mov	r9, #0
   21f1c:	add	r3, pc, r3
   21f20:	str	r3, [sp, #36]	; 0x24
   21f24:	ldr	r3, [pc, #736]	; 2220c <ASN1_STRING_length@plt+0x10298>
   21f28:	str	r6, [sp, #44]	; 0x2c
   21f2c:	add	r3, pc, r3
   21f30:	mov	r6, r8
   21f34:	str	r3, [sp, #40]	; 0x28
   21f38:	mov	r8, fp
   21f3c:	mov	sl, r9
   21f40:	ldr	fp, [sp, #52]	; 0x34
   21f44:	b	21f78 <ASN1_STRING_length@plt+0x10004>
   21f48:	mov	r0, r5
   21f4c:	ldr	r1, [r4, #-8]
   21f50:	bl	1d8d4 <ASN1_STRING_length@plt+0xb960>
   21f54:	ldr	r1, [pc, #692]	; 22210 <ASN1_STRING_length@plt+0x1029c>
   21f58:	mov	r2, r8
   21f5c:	add	r1, pc, r1
   21f60:	add	r9, r9, #1
   21f64:	mov	r5, r0
   21f68:	mov	r0, #0
   21f6c:	bl	11dd0 <strtok_r@plt>
   21f70:	subs	r6, r0, #0
   21f74:	beq	220f4 <ASN1_STRING_length@plt+0x10180>
   21f78:	mov	r2, #0
   21f7c:	str	r2, [r4, #-8]
   21f80:	ldrb	r2, [r6]
   21f84:	cmp	r2, #47	; 0x2f
   21f88:	beq	21fc0 <ASN1_STRING_length@plt+0x1004c>
   21f8c:	mov	r0, r6
   21f90:	bl	11c44 <strlen@plt>
   21f94:	ldr	r3, [sp, #28]
   21f98:	add	r2, r3, r0
   21f9c:	ldr	r3, [pc, #604]	; 22200 <ASN1_STRING_length@plt+0x1028c>
   21fa0:	cmp	r2, r3
   21fa4:	bhi	22018 <ASN1_STRING_length@plt+0x100a4>
   21fa8:	ldr	r3, [sp, #32]
   21fac:	add	r2, r0, #1
   21fb0:	mov	r1, r6
   21fb4:	add	r0, fp, r3
   21fb8:	bl	11c5c <memcpy@plt>
   21fbc:	mov	r6, fp
   21fc0:	sub	r2, r4, #8
   21fc4:	mov	r1, r6
   21fc8:	mov	r0, r7
   21fcc:	bl	21ab4 <ASN1_STRING_length@plt+0xfb40>
   21fd0:	subs	sl, r0, #0
   21fd4:	blt	2209c <ASN1_STRING_length@plt+0x10128>
   21fd8:	mov	r0, r7
   21fdc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   21fe0:	cmp	r0, #6
   21fe4:	ble	21f48 <ASN1_STRING_length@plt+0xffd4>
   21fe8:	ldr	r2, [pc, #548]	; 22214 <ASN1_STRING_length@plt+0x102a0>
   21fec:	ldr	r3, [sp, #40]	; 0x28
   21ff0:	add	r2, pc, r2
   21ff4:	str	r3, [sp, #4]
   21ff8:	str	r2, [sp]
   21ffc:	str	r6, [sp, #8]
   22000:	mov	r3, #196	; 0xc4
   22004:	ldr	r2, [sp, #36]	; 0x24
   22008:	mov	r1, #7
   2200c:	mov	r0, r7
   22010:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22014:	b	21f48 <ASN1_STRING_length@plt+0xffd4>
   22018:	mov	r0, r7
   2201c:	mov	r8, r6
   22020:	ldr	r6, [sp, #44]	; 0x2c
   22024:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22028:	cmp	r0, #2
   2202c:	bgt	22188 <ASN1_STRING_length@plt+0x10214>
   22030:	mov	r0, r5
   22034:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   22038:	ldrb	r3, [r6, #48]	; 0x30
   2203c:	bic	r3, r3, #1
   22040:	strb	r3, [r6, #48]	; 0x30
   22044:	add	r3, sp, #4160	; 0x1040
   22048:	add	r3, r3, #4
   2204c:	ldr	r2, [r3]
   22050:	ldr	r3, [sp, #24]
   22054:	mov	r0, sl
   22058:	ldr	r3, [r3]
   2205c:	cmp	r2, r3
   22060:	bne	221d4 <ASN1_STRING_length@plt+0x10260>
   22064:	add	sp, sp, #4160	; 0x1040
   22068:	add	sp, sp, #12
   2206c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22070:	ldrb	r3, [r9]
   22074:	cmp	r3, r2
   22078:	beq	22130 <ASN1_STRING_length@plt+0x101bc>
   2207c:	mov	r0, r9
   22080:	bl	11c44 <strlen@plt>
   22084:	ldr	r3, [sp, #28]
   22088:	add	r3, r3, r0
   2208c:	cmp	r3, fp
   22090:	bls	22118 <ASN1_STRING_length@plt+0x101a4>
   22094:	mov	sl, #0
   22098:	b	22044 <ASN1_STRING_length@plt+0x100d0>
   2209c:	mov	r0, r7
   220a0:	mov	r8, r6
   220a4:	ldr	r6, [sp, #44]	; 0x2c
   220a8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   220ac:	cmp	r0, #2
   220b0:	ble	22030 <ASN1_STRING_length@plt+0x100bc>
   220b4:	rsb	r0, sl, #0
   220b8:	bl	119f8 <strerror@plt>
   220bc:	ldr	r2, [pc, #340]	; 22218 <ASN1_STRING_length@plt+0x102a4>
   220c0:	ldr	r3, [pc, #340]	; 2221c <ASN1_STRING_length@plt+0x102a8>
   220c4:	add	r2, pc, r2
   220c8:	add	r3, pc, r3
   220cc:	stmib	sp, {r2, r7, r8}
   220d0:	mov	r1, #3
   220d4:	ldr	r2, [pc, #324]	; 22220 <ASN1_STRING_length@plt+0x102ac>
   220d8:	str	r3, [sp]
   220dc:	add	r2, pc, r2
   220e0:	mov	r3, #192	; 0xc0
   220e4:	str	r0, [sp, #16]
   220e8:	mov	r0, r7
   220ec:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   220f0:	b	22030 <ASN1_STRING_length@plt+0x100bc>
   220f4:	ldr	r6, [sp, #44]	; 0x2c
   220f8:	mov	r0, r7
   220fc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22100:	cmp	r0, #6
   22104:	bgt	22148 <ASN1_STRING_length@plt+0x101d4>
   22108:	str	r5, [r6, #16]
   2210c:	str	r9, [r6, #40]	; 0x28
   22110:	mov	sl, r9
   22114:	b	22044 <ASN1_STRING_length@plt+0x100d0>
   22118:	add	r2, r0, #1
   2211c:	mov	r1, r9
   22120:	ldr	r0, [sp, #32]
   22124:	ldr	r9, [sp, #52]	; 0x34
   22128:	add	r0, r9, r0
   2212c:	bl	11c5c <memcpy@plt>
   22130:	mov	r0, r9
   22134:	bl	11d4c <strdup@plt>
   22138:	cmp	r0, #0
   2213c:	str	r0, [r6, #12]
   22140:	bne	21ef4 <ASN1_STRING_length@plt+0xff80>
   22144:	b	22094 <ASN1_STRING_length@plt+0x10120>
   22148:	ldr	r2, [pc, #212]	; 22224 <ASN1_STRING_length@plt+0x102b0>
   2214c:	ldr	r3, [pc, #212]	; 22228 <ASN1_STRING_length@plt+0x102b4>
   22150:	add	r2, pc, r2
   22154:	ldr	r1, [r6, #8]
   22158:	str	r2, [sp, #4]
   2215c:	ldr	r2, [pc, #200]	; 2222c <ASN1_STRING_length@plt+0x102b8>
   22160:	add	r3, pc, r3
   22164:	str	r1, [sp, #12]
   22168:	str	r3, [sp]
   2216c:	str	r9, [sp, #8]
   22170:	mov	r0, r7
   22174:	mov	r3, #202	; 0xca
   22178:	add	r2, pc, r2
   2217c:	mov	r1, #7
   22180:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22184:	b	22108 <ASN1_STRING_length@plt+0x10194>
   22188:	ldr	r2, [pc, #160]	; 22230 <ASN1_STRING_length@plt+0x102bc>
   2218c:	ldr	r3, [pc, #160]	; 22234 <ASN1_STRING_length@plt+0x102c0>
   22190:	add	r2, pc, r2
   22194:	ldr	r1, [sp, #48]	; 0x30
   22198:	str	r2, [sp, #4]
   2219c:	ldr	r2, [pc, #148]	; 22238 <ASN1_STRING_length@plt+0x102c4>
   221a0:	add	r3, pc, r3
   221a4:	str	r1, [sp, #8]
   221a8:	str	r3, [sp]
   221ac:	str	r8, [sp, #12]
   221b0:	mov	r0, r7
   221b4:	mov	r3, #185	; 0xb9
   221b8:	add	r2, pc, r2
   221bc:	mov	r1, #3
   221c0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   221c4:	b	22030 <ASN1_STRING_length@plt+0x100bc>
   221c8:	mov	r5, r8
   221cc:	mov	r9, r8
   221d0:	b	220f8 <ASN1_STRING_length@plt+0x10184>
   221d4:	bl	11d88 <__stack_chk_fail@plt>
   221d8:	ldr	r3, [pc, #92]	; 2223c <ASN1_STRING_length@plt+0x102c8>
   221dc:	ldr	r1, [pc, #92]	; 22240 <ASN1_STRING_length@plt+0x102cc>
   221e0:	ldr	r0, [pc, #92]	; 22244 <ASN1_STRING_length@plt+0x102d0>
   221e4:	add	r3, pc, r3
   221e8:	mov	r2, #149	; 0x95
   221ec:	add	r1, pc, r1
   221f0:	add	r0, pc, r0
   221f4:	bl	11b6c <__assert_fail@plt>
   221f8:	andeq	sp, r1, r4, ror #31
   221fc:	strdeq	r0, [r0], -r8
   22200:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   22204:	andeq	sl, r0, r0, lsl lr
   22208:	muleq	r0, r4, ip
   2220c:	andeq	sp, r0, ip, lsr r1
   22210:			; <UNDEFINED> instruction: 0x0000adb8
   22214:	strdeq	ip, [r0], -r8
   22218:	andeq	ip, r0, r8, lsl #31
   2221c:	andeq	ip, r0, r0, lsr #16
   22220:	ldrdeq	ip, [r0], -r4
   22224:	andeq	ip, r0, r8, lsr #30
   22228:	andeq	ip, r0, r8, lsl #15
   2222c:	andeq	ip, r0, r8, lsr sl
   22230:	muleq	r0, r8, lr
   22234:	andeq	ip, r0, r8, asr #14
   22238:	strdeq	ip, [r0], -r8
   2223c:	andeq	ip, r0, r4, lsr #12
   22240:	andeq	ip, r0, r4, asr #19
   22244:	andeq	ip, r0, r4, lsr #28
   22248:	push	{r4, lr}
   2224c:	subs	r4, r0, #0
   22250:	sub	sp, sp, #16
   22254:	beq	2226c <ASN1_STRING_length@plt+0x102f8>
   22258:	ldr	r3, [r4, #44]	; 0x2c
   2225c:	sub	r3, r3, #1
   22260:	cmp	r3, #0
   22264:	str	r3, [r4, #44]	; 0x2c
   22268:	ble	22278 <ASN1_STRING_length@plt+0x10304>
   2226c:	mov	r0, r4
   22270:	add	sp, sp, #16
   22274:	pop	{r4, pc}
   22278:	ldr	r0, [r4]
   2227c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22280:	cmp	r0, #6
   22284:	bgt	222e0 <ASN1_STRING_length@plt+0x1036c>
   22288:	ldr	r2, [r4, #4]
   2228c:	mov	r1, r4
   22290:	ldr	r0, [r4]
   22294:	bl	1ca40 <ASN1_STRING_length@plt+0xaacc>
   22298:	ldr	r0, [r4, #16]
   2229c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   222a0:	ldr	r0, [r4, #36]	; 0x24
   222a4:	cmp	r0, #0
   222a8:	beq	222b0 <ASN1_STRING_length@plt+0x1033c>
   222ac:	bl	25d4c <ASN1_STRING_length@plt+0x13dd8>
   222b0:	ldr	r0, [r4]
   222b4:	bl	1d3f0 <ASN1_STRING_length@plt+0xb47c>
   222b8:	ldr	r0, [r4, #20]
   222bc:	bl	11ba8 <free@plt>
   222c0:	ldr	r0, [r4, #12]
   222c4:	bl	11ba8 <free@plt>
   222c8:	mov	r0, r4
   222cc:	bl	11ba8 <free@plt>
   222d0:	mov	r4, #0
   222d4:	mov	r0, r4
   222d8:	add	sp, sp, #16
   222dc:	pop	{r4, pc}
   222e0:	ldr	r2, [pc, #44]	; 22314 <ASN1_STRING_length@plt+0x103a0>
   222e4:	ldr	r3, [pc, #44]	; 22318 <ASN1_STRING_length@plt+0x103a4>
   222e8:	add	r2, pc, r2
   222ec:	ldr	r0, [r4]
   222f0:	stmib	sp, {r2, r4}
   222f4:	ldr	r2, [pc, #32]	; 2231c <ASN1_STRING_length@plt+0x103a8>
   222f8:	add	r3, pc, r3
   222fc:	str	r3, [sp]
   22300:	add	r2, pc, r2
   22304:	mov	r3, #468	; 0x1d4
   22308:	mov	r1, #7
   2230c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22310:	b	22288 <ASN1_STRING_length@plt+0x10314>
   22314:	andeq	ip, r0, ip, lsl #28
   22318:	andeq	ip, r0, r8, lsr #12
   2231c:			; <UNDEFINED> instruction: 0x0000c8b0
   22320:	ldr	r3, [pc, #1100]	; 22774 <ASN1_STRING_length@plt+0x10800>
   22324:	ldr	ip, [pc, #1100]	; 22778 <ASN1_STRING_length@plt+0x10804>
   22328:	add	r3, pc, r3
   2232c:	push	{r4, r5, r6, r7, r8, lr}
   22330:	sub	sp, sp, #4096	; 0x1000
   22334:	ldr	r7, [r3, ip]
   22338:	sub	sp, sp, #32
   2233c:	add	r3, sp, #4096	; 0x1000
   22340:	mov	r4, r2
   22344:	add	r3, r3, #28
   22348:	ldr	r2, [r7]
   2234c:	cmp	r1, #0
   22350:	cmpne	r0, #0
   22354:	str	r2, [r3]
   22358:	beq	22680 <ASN1_STRING_length@plt+0x1070c>
   2235c:	cmp	r4, #0
   22360:	mov	r5, r0
   22364:	beq	22600 <ASN1_STRING_length@plt+0x1068c>
   22368:	ldr	r2, [r4]
   2236c:	cmp	r2, #0
   22370:	bne	22600 <ASN1_STRING_length@plt+0x1068c>
   22374:	mov	r8, r1
   22378:	add	r6, sp, #28
   2237c:	mov	r1, r6
   22380:	mov	r0, r8
   22384:	bl	1b478 <ASN1_STRING_length@plt+0x9504>
   22388:	cmp	r0, #0
   2238c:	mov	r0, r5
   22390:	blt	22688 <ASN1_STRING_length@plt+0x10714>
   22394:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22398:	cmp	r0, #6
   2239c:	bgt	2255c <ASN1_STRING_length@plt+0x105e8>
   223a0:	mov	r2, r4
   223a4:	mov	r1, r6
   223a8:	mov	r0, r5
   223ac:	bl	1ce30 <ASN1_STRING_length@plt+0xaebc>
   223b0:	subs	r8, r0, #0
   223b4:	blt	22538 <ASN1_STRING_length@plt+0x105c4>
   223b8:	ldr	r3, [r4]
   223bc:	cmp	r3, #0
   223c0:	beq	22440 <ASN1_STRING_length@plt+0x104cc>
   223c4:	mov	r0, r5
   223c8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   223cc:	cmp	r0, #6
   223d0:	bgt	223fc <ASN1_STRING_length@plt+0x10488>
   223d4:	add	r3, sp, #4096	; 0x1000
   223d8:	add	r3, r3, #28
   223dc:	ldr	r2, [r3]
   223e0:	ldr	r3, [r7]
   223e4:	mov	r0, r8
   223e8:	cmp	r2, r3
   223ec:	bne	2273c <ASN1_STRING_length@plt+0x107c8>
   223f0:	add	sp, sp, #4096	; 0x1000
   223f4:	add	sp, sp, #32
   223f8:	pop	{r4, r5, r6, r7, r8, pc}
   223fc:	ldr	r2, [pc, #888]	; 2277c <ASN1_STRING_length@plt+0x10808>
   22400:	ldr	r3, [pc, #888]	; 22780 <ASN1_STRING_length@plt+0x1080c>
   22404:	add	r2, pc, r2
   22408:	ldr	r1, [r4]
   2240c:	str	r2, [sp, #4]
   22410:	ldr	r2, [pc, #876]	; 22784 <ASN1_STRING_length@plt+0x10810>
   22414:	add	r3, pc, r3
   22418:	str	r1, [sp, #16]
   2241c:	str	r3, [sp]
   22420:	str	r8, [sp, #12]
   22424:	str	r6, [sp, #8]
   22428:	mov	r0, r5
   2242c:	ldr	r3, [pc, #852]	; 22788 <ASN1_STRING_length@plt+0x10814>
   22430:	add	r2, pc, r2
   22434:	mov	r1, #7
   22438:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   2243c:	b	223d4 <ASN1_STRING_length@plt+0x10460>
   22440:	mov	r0, r5
   22444:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22448:	cmp	r0, #6
   2244c:	bgt	225cc <ASN1_STRING_length@plt+0x10658>
   22450:	mov	r2, r4
   22454:	mov	r1, r6
   22458:	mov	r0, r5
   2245c:	bl	1cd10 <ASN1_STRING_length@plt+0xad9c>
   22460:	subs	r8, r0, #0
   22464:	blt	22538 <ASN1_STRING_length@plt+0x105c4>
   22468:	ldr	r3, [r4]
   2246c:	cmp	r3, #0
   22470:	bne	223c4 <ASN1_STRING_length@plt+0x10450>
   22474:	mov	r0, r5
   22478:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   2247c:	cmp	r0, #6
   22480:	bgt	2264c <ASN1_STRING_length@plt+0x106d8>
   22484:	mov	r2, r4
   22488:	mov	r1, r6
   2248c:	mov	r0, r5
   22490:	bl	1cabc <ASN1_STRING_length@plt+0xab48>
   22494:	subs	r8, r0, #0
   22498:	blt	22538 <ASN1_STRING_length@plt+0x105c4>
   2249c:	ldr	r3, [r4]
   224a0:	cmp	r3, #0
   224a4:	bne	223c4 <ASN1_STRING_length@plt+0x10450>
   224a8:	mov	r0, r5
   224ac:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   224b0:	cmp	r0, #6
   224b4:	bgt	226d4 <ASN1_STRING_length@plt+0x10760>
   224b8:	mov	r2, r4
   224bc:	mov	r1, r6
   224c0:	mov	r0, r5
   224c4:	bl	1cfa8 <ASN1_STRING_length@plt+0xb034>
   224c8:	subs	r8, r0, #0
   224cc:	blt	22538 <ASN1_STRING_length@plt+0x105c4>
   224d0:	ldr	r3, [r4]
   224d4:	cmp	r3, #0
   224d8:	bne	223c4 <ASN1_STRING_length@plt+0x10450>
   224dc:	mov	r0, r5
   224e0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   224e4:	cmp	r0, #6
   224e8:	bgt	22708 <ASN1_STRING_length@plt+0x10794>
   224ec:	mov	r2, r4
   224f0:	mov	r1, r6
   224f4:	mov	r0, r5
   224f8:	bl	1cb0c <ASN1_STRING_length@plt+0xab98>
   224fc:	subs	r8, r0, #0
   22500:	blt	22538 <ASN1_STRING_length@plt+0x105c4>
   22504:	ldr	r3, [r4]
   22508:	cmp	r3, #0
   2250c:	bne	223c4 <ASN1_STRING_length@plt+0x10450>
   22510:	mov	r0, r5
   22514:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22518:	cmp	r0, #6
   2251c:	bgt	22740 <ASN1_STRING_length@plt+0x107cc>
   22520:	mov	r2, r4
   22524:	mov	r1, r6
   22528:	mov	r0, r5
   2252c:	bl	1cb1c <ASN1_STRING_length@plt+0xaba8>
   22530:	subs	r8, r0, #0
   22534:	bge	223c4 <ASN1_STRING_length@plt+0x10450>
   22538:	mov	r0, r5
   2253c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22540:	cmp	r0, #6
   22544:	bgt	22594 <ASN1_STRING_length@plt+0x10620>
   22548:	ldr	r0, [r4]
   2254c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   22550:	mov	r3, #0
   22554:	str	r3, [r4]
   22558:	b	223d4 <ASN1_STRING_length@plt+0x10460>
   2255c:	ldr	r2, [pc, #552]	; 2278c <ASN1_STRING_length@plt+0x10818>
   22560:	ldr	r3, [pc, #552]	; 22790 <ASN1_STRING_length@plt+0x1081c>
   22564:	add	r2, pc, r2
   22568:	add	r3, pc, r3
   2256c:	stmib	sp, {r2, r8}
   22570:	ldr	r2, [pc, #540]	; 22794 <ASN1_STRING_length@plt+0x10820>
   22574:	str	r3, [sp]
   22578:	str	r6, [sp, #12]
   2257c:	mov	r3, #556	; 0x22c
   22580:	add	r2, pc, r2
   22584:	mov	r1, #7
   22588:	mov	r0, r5
   2258c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22590:	b	223a0 <ASN1_STRING_length@plt+0x1042c>
   22594:	ldr	r2, [pc, #508]	; 22798 <ASN1_STRING_length@plt+0x10824>
   22598:	ldr	r3, [pc, #508]	; 2279c <ASN1_STRING_length@plt+0x10828>
   2259c:	add	r2, pc, r2
   225a0:	str	r2, [sp, #4]
   225a4:	ldr	r2, [pc, #500]	; 227a0 <ASN1_STRING_length@plt+0x1082c>
   225a8:	add	r3, pc, r3
   225ac:	str	r3, [sp]
   225b0:	str	r6, [sp, #8]
   225b4:	mov	r0, r5
   225b8:	ldr	r3, [pc, #484]	; 227a4 <ASN1_STRING_length@plt+0x10830>
   225bc:	add	r2, pc, r2
   225c0:	mov	r1, #7
   225c4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   225c8:	b	22548 <ASN1_STRING_length@plt+0x105d4>
   225cc:	ldr	r2, [pc, #468]	; 227a8 <ASN1_STRING_length@plt+0x10834>
   225d0:	ldr	r3, [pc, #468]	; 227ac <ASN1_STRING_length@plt+0x10838>
   225d4:	add	r2, pc, r2
   225d8:	add	r3, pc, r3
   225dc:	stmib	sp, {r2, r6}
   225e0:	ldr	r2, [pc, #456]	; 227b0 <ASN1_STRING_length@plt+0x1083c>
   225e4:	str	r3, [sp]
   225e8:	add	r2, pc, r2
   225ec:	ldr	r3, [pc, #448]	; 227b4 <ASN1_STRING_length@plt+0x10840>
   225f0:	mov	r1, #7
   225f4:	mov	r0, r5
   225f8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   225fc:	b	22450 <ASN1_STRING_length@plt+0x104dc>
   22600:	mov	r0, r5
   22604:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22608:	cmp	r0, #2
   2260c:	mvnle	r8, #37	; 0x25
   22610:	ble	223d4 <ASN1_STRING_length@plt+0x10460>
   22614:	ldr	r2, [pc, #412]	; 227b8 <ASN1_STRING_length@plt+0x10844>
   22618:	ldr	r3, [pc, #412]	; 227bc <ASN1_STRING_length@plt+0x10848>
   2261c:	add	r2, pc, r2
   22620:	str	r2, [sp, #4]
   22624:	ldr	r2, [pc, #404]	; 227c0 <ASN1_STRING_length@plt+0x1084c>
   22628:	add	r3, pc, r3
   2262c:	str	r3, [sp]
   22630:	mov	r0, r5
   22634:	ldr	r3, [pc, #392]	; 227c4 <ASN1_STRING_length@plt+0x10850>
   22638:	add	r2, pc, r2
   2263c:	mov	r1, #3
   22640:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22644:	mvn	r8, #37	; 0x25
   22648:	b	223d4 <ASN1_STRING_length@plt+0x10460>
   2264c:	ldr	r2, [pc, #372]	; 227c8 <ASN1_STRING_length@plt+0x10854>
   22650:	ldr	r3, [pc, #372]	; 227cc <ASN1_STRING_length@plt+0x10858>
   22654:	add	r2, pc, r2
   22658:	add	r3, pc, r3
   2265c:	stmib	sp, {r2, r6}
   22660:	ldr	r2, [pc, #360]	; 227d0 <ASN1_STRING_length@plt+0x1085c>
   22664:	str	r3, [sp]
   22668:	add	r2, pc, r2
   2266c:	ldr	r3, [pc, #352]	; 227d4 <ASN1_STRING_length@plt+0x10860>
   22670:	mov	r1, #7
   22674:	mov	r0, r5
   22678:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   2267c:	b	22484 <ASN1_STRING_length@plt+0x10510>
   22680:	mvn	r8, #1
   22684:	b	223d4 <ASN1_STRING_length@plt+0x10460>
   22688:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   2268c:	cmp	r0, #6
   22690:	mvnle	r8, #21
   22694:	ble	223d4 <ASN1_STRING_length@plt+0x10460>
   22698:	ldr	r2, [pc, #312]	; 227d8 <ASN1_STRING_length@plt+0x10864>
   2269c:	ldr	r3, [pc, #312]	; 227dc <ASN1_STRING_length@plt+0x10868>
   226a0:	add	r2, pc, r2
   226a4:	str	r2, [sp, #4]
   226a8:	ldr	r2, [pc, #304]	; 227e0 <ASN1_STRING_length@plt+0x1086c>
   226ac:	add	r3, pc, r3
   226b0:	str	r8, [sp, #8]
   226b4:	str	r3, [sp]
   226b8:	mov	r0, r5
   226bc:	mov	r3, #552	; 0x228
   226c0:	add	r2, pc, r2
   226c4:	mov	r1, #7
   226c8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   226cc:	mvn	r8, #21
   226d0:	b	223d4 <ASN1_STRING_length@plt+0x10460>
   226d4:	ldr	r2, [pc, #264]	; 227e4 <ASN1_STRING_length@plt+0x10870>
   226d8:	ldr	r3, [pc, #264]	; 227e8 <ASN1_STRING_length@plt+0x10874>
   226dc:	add	r2, pc, r2
   226e0:	add	r3, pc, r3
   226e4:	stmib	sp, {r2, r6}
   226e8:	ldr	r2, [pc, #252]	; 227ec <ASN1_STRING_length@plt+0x10878>
   226ec:	str	r3, [sp]
   226f0:	add	r2, pc, r2
   226f4:	ldr	r3, [pc, #244]	; 227f0 <ASN1_STRING_length@plt+0x1087c>
   226f8:	mov	r1, #7
   226fc:	mov	r0, r5
   22700:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22704:	b	224b8 <ASN1_STRING_length@plt+0x10544>
   22708:	ldr	r2, [pc, #228]	; 227f4 <ASN1_STRING_length@plt+0x10880>
   2270c:	ldr	r3, [pc, #228]	; 227f8 <ASN1_STRING_length@plt+0x10884>
   22710:	add	r2, pc, r2
   22714:	add	r3, pc, r3
   22718:	stmib	sp, {r2, r6}
   2271c:	ldr	r2, [pc, #216]	; 227fc <ASN1_STRING_length@plt+0x10888>
   22720:	str	r3, [sp]
   22724:	add	r2, pc, r2
   22728:	ldr	r3, [pc, #208]	; 22800 <ASN1_STRING_length@plt+0x1088c>
   2272c:	mov	r1, #7
   22730:	mov	r0, r5
   22734:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22738:	b	224ec <ASN1_STRING_length@plt+0x10578>
   2273c:	bl	11d88 <__stack_chk_fail@plt>
   22740:	ldr	r2, [pc, #188]	; 22804 <ASN1_STRING_length@plt+0x10890>
   22744:	ldr	r3, [pc, #188]	; 22808 <ASN1_STRING_length@plt+0x10894>
   22748:	add	r2, pc, r2
   2274c:	add	r3, pc, r3
   22750:	stmib	sp, {r2, r6}
   22754:	ldr	r2, [pc, #176]	; 2280c <ASN1_STRING_length@plt+0x10898>
   22758:	str	r3, [sp]
   2275c:	add	r2, pc, r2
   22760:	ldr	r3, [pc, #168]	; 22810 <ASN1_STRING_length@plt+0x1089c>
   22764:	mov	r1, #7
   22768:	mov	r0, r5
   2276c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22770:	b	22520 <ASN1_STRING_length@plt+0x105ac>
   22774:	andeq	sp, r1, ip, asr #21
   22778:	strdeq	r0, [r0], -r8
   2277c:	andeq	ip, r0, r0, ror #22
   22780:	andeq	ip, r0, r0, lsr #10
   22784:	andeq	ip, r0, r0, lsl #15
   22788:	andeq	r0, r0, r7, asr #4
   2278c:	andeq	ip, r0, ip, asr #18
   22790:	andeq	ip, r0, ip, asr #7
   22794:	andeq	ip, r0, r0, lsr r6
   22798:	andeq	ip, r0, r0, ror #19
   2279c:	andeq	ip, r0, ip, lsl #7
   227a0:	strdeq	ip, [r0], -r4
   227a4:	andeq	r0, r0, sl, asr #4
   227a8:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   227ac:	andeq	ip, r0, ip, asr r3
   227b0:	andeq	ip, r0, r8, asr #11
   227b4:	andeq	r0, r0, r2, lsr r2
   227b8:	andeq	ip, r0, r4, asr r8
   227bc:	andeq	ip, r0, ip, lsl #6
   227c0:	andeq	ip, r0, r8, ror r5
   227c4:	andeq	r0, r0, r3, lsr #4
   227c8:	muleq	r0, r4, r8
   227cc:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   227d0:	andeq	ip, r0, r8, asr #10
   227d4:	andeq	r0, r0, r6, lsr r2
   227d8:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   227dc:	andeq	ip, r0, r8, lsl #5
   227e0:	strdeq	ip, [r0], -r0
   227e4:	andeq	ip, r0, r8, lsr #16
   227e8:	andeq	ip, r0, r4, asr r2
   227ec:	andeq	ip, r0, r0, asr #9
   227f0:	andeq	r0, r0, sl, lsr r2
   227f4:	andeq	ip, r0, ip, lsl r8
   227f8:	andeq	ip, r0, r0, lsr #4
   227fc:	andeq	ip, r0, ip, lsl #9
   22800:	andeq	r0, r0, lr, lsr r2
   22804:	andeq	ip, r0, r0, lsl #16
   22808:	andeq	ip, r0, r8, ror #3
   2280c:	andeq	ip, r0, r4, asr r4
   22810:	andeq	r0, r0, r2, asr #4
   22814:	ldr	r3, [pc, #260]	; 22920 <ASN1_STRING_length@plt+0x109ac>
   22818:	ldr	ip, [pc, #260]	; 22924 <ASN1_STRING_length@plt+0x109b0>
   2281c:	add	r3, pc, r3
   22820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22824:	mov	r7, r0
   22828:	ldr	r0, [r3, ip]
   2282c:	sub	sp, sp, #36	; 0x24
   22830:	cmp	r2, #0
   22834:	ldr	r3, [r0]
   22838:	str	r0, [sp, #16]
   2283c:	str	r3, [sp, #28]
   22840:	beq	22914 <ASN1_STRING_length@plt+0x109a0>
   22844:	ldr	r3, [pc, #220]	; 22928 <ASN1_STRING_length@plt+0x109b4>
   22848:	ldr	fp, [pc, #220]	; 2292c <ASN1_STRING_length@plt+0x109b8>
   2284c:	ldr	sl, [pc, #220]	; 22930 <ASN1_STRING_length@plt+0x109bc>
   22850:	sub	r4, r1, #4
   22854:	add	r3, pc, r3
   22858:	add	fp, pc, fp
   2285c:	add	sl, pc, sl
   22860:	str	r3, [sp, #20]
   22864:	add	r9, r4, r2, lsl #2
   22868:	mov	r6, #0
   2286c:	add	r8, sp, #24
   22870:	b	22894 <ASN1_STRING_length@plt+0x10920>
   22874:	ldr	r1, [sp, #24]
   22878:	cmp	r1, #0
   2287c:	beq	2288c <ASN1_STRING_length@plt+0x10918>
   22880:	mov	r0, r6
   22884:	bl	1d894 <ASN1_STRING_length@plt+0xb920>
   22888:	mov	r6, r0
   2288c:	cmp	r4, r9
   22890:	beq	228f4 <ASN1_STRING_length@plt+0x10980>
   22894:	ldr	r5, [r4, #4]!
   22898:	mov	r3, #0
   2289c:	mov	r1, r5
   228a0:	mov	r2, r8
   228a4:	mov	r0, r7
   228a8:	str	r3, [sp, #24]
   228ac:	bl	22320 <ASN1_STRING_length@plt+0x103ac>
   228b0:	cmp	r0, #0
   228b4:	bge	22874 <ASN1_STRING_length@plt+0x10900>
   228b8:	mov	r0, r7
   228bc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   228c0:	cmp	r0, #2
   228c4:	ble	2288c <ASN1_STRING_length@plt+0x10918>
   228c8:	ldr	r3, [sp, #20]
   228cc:	str	r5, [sp, #8]
   228d0:	str	r3, [sp]
   228d4:	str	sl, [sp, #4]
   228d8:	ldr	r3, [pc, #84]	; 22934 <ASN1_STRING_length@plt+0x109c0>
   228dc:	mov	r2, fp
   228e0:	mov	r1, #3
   228e4:	mov	r0, r7
   228e8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   228ec:	cmp	r4, r9
   228f0:	bne	22894 <ASN1_STRING_length@plt+0x10920>
   228f4:	ldr	r3, [sp, #16]
   228f8:	ldr	r2, [sp, #28]
   228fc:	mov	r0, r6
   22900:	ldr	r3, [r3]
   22904:	cmp	r2, r3
   22908:	bne	2291c <ASN1_STRING_length@plt+0x109a8>
   2290c:	add	sp, sp, #36	; 0x24
   22910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22914:	mov	r6, r2
   22918:	b	228f4 <ASN1_STRING_length@plt+0x10980>
   2291c:	bl	11d88 <__stack_chk_fail@plt>
   22920:	ldrdeq	sp, [r1], -r8
   22924:	strdeq	r0, [r0], -r8
   22928:	andeq	ip, r0, ip, ror #3
   2292c:	andeq	ip, r0, r8, asr r3
   22930:			; <UNDEFINED> instruction: 0x0000c8b4
   22934:	ldrdeq	r0, [r0], -fp
   22938:	push	{r4, r5, r6, r7, lr}
   2293c:	subs	r7, r0, #0
   22940:	sub	sp, sp, #12
   22944:	beq	22a00 <ASN1_STRING_length@plt+0x10a8c>
   22948:	ldrb	r3, [r7, #48]	; 0x30
   2294c:	tst	r3, #1
   22950:	beq	229d4 <ASN1_STRING_length@plt+0x10a60>
   22954:	ldr	r4, [r7, #16]
   22958:	cmp	r4, #0
   2295c:	beq	22a00 <ASN1_STRING_length@plt+0x10a8c>
   22960:	mov	r5, #0
   22964:	ldr	r0, [r4, #8]
   22968:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   2296c:	mov	r1, r0
   22970:	mov	r0, r5
   22974:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   22978:	subs	r6, r0, #0
   2297c:	beq	229a8 <ASN1_STRING_length@plt+0x10a34>
   22980:	ldr	r4, [r4]
   22984:	ldr	r3, [r7, #16]
   22988:	mov	r5, r6
   2298c:	cmp	r4, r3
   22990:	beq	2299c <ASN1_STRING_length@plt+0x10a28>
   22994:	cmp	r4, #0
   22998:	bne	22964 <ASN1_STRING_length@plt+0x109f0>
   2299c:	mov	r0, r6
   229a0:	add	sp, sp, #12
   229a4:	pop	{r4, r5, r6, r7, pc}
   229a8:	ldr	r0, [r4, #8]
   229ac:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   229b0:	ldr	r0, [r7]
   229b4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   229b8:	cmp	r0, #2
   229bc:	bgt	22a10 <ASN1_STRING_length@plt+0x10a9c>
   229c0:	mov	r0, r5
   229c4:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   229c8:	mov	r0, r6
   229cc:	add	sp, sp, #12
   229d0:	pop	{r4, r5, r6, r7, pc}
   229d4:	ldr	r1, [r7, #8]
   229d8:	ldr	r0, [r7]
   229dc:	bl	1cc78 <ASN1_STRING_length@plt+0xad04>
   229e0:	subs	r4, r0, #0
   229e4:	beq	22954 <ASN1_STRING_length@plt+0x109e0>
   229e8:	mov	r1, r4
   229ec:	mov	r0, r7
   229f0:	bl	21e08 <ASN1_STRING_length@plt+0xfe94>
   229f4:	mov	r0, r4
   229f8:	bl	11ba8 <free@plt>
   229fc:	b	22954 <ASN1_STRING_length@plt+0x109e0>
   22a00:	mov	r6, #0
   22a04:	mov	r0, r6
   22a08:	add	sp, sp, #12
   22a0c:	pop	{r4, r5, r6, r7, pc}
   22a10:	ldr	r2, [pc, #44]	; 22a44 <ASN1_STRING_length@plt+0x10ad0>
   22a14:	ldr	r3, [pc, #44]	; 22a48 <ASN1_STRING_length@plt+0x10ad4>
   22a18:	add	r2, pc, r2
   22a1c:	str	r2, [sp, #4]
   22a20:	ldr	r2, [pc, #36]	; 22a4c <ASN1_STRING_length@plt+0x10ad8>
   22a24:	add	r3, pc, r3
   22a28:	str	r3, [sp]
   22a2c:	add	r2, pc, r2
   22a30:	ldr	r3, [pc, #24]	; 22a50 <ASN1_STRING_length@plt+0x10adc>
   22a34:	ldr	r0, [r7]
   22a38:	mov	r1, #3
   22a3c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22a40:	b	229c0 <ASN1_STRING_length@plt+0x10a4c>
   22a44:	andeq	r9, r0, r4, asr #17
   22a48:	andeq	fp, r0, ip, lsr #30
   22a4c:	andeq	ip, r0, r4, lsl #3
   22a50:	andeq	r0, r0, fp, lsr #5
   22a54:	subs	r3, r0, #0
   22a58:	bxeq	lr
   22a5c:	ldr	r0, [r3, #8]
   22a60:	b	2179c <ASN1_STRING_length@plt+0xf828>
   22a64:	cmp	r0, #0
   22a68:	ldrne	r0, [r0, #8]
   22a6c:	bx	lr
   22a70:	push	{r4, r5, lr}
   22a74:	subs	r4, r0, #0
   22a78:	sub	sp, sp, #20
   22a7c:	beq	22ae4 <ASN1_STRING_length@plt+0x10b70>
   22a80:	ldr	r0, [r4]
   22a84:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22a88:	cmp	r0, #6
   22a8c:	bgt	22af0 <ASN1_STRING_length@plt+0x10b7c>
   22a90:	ldr	r0, [r4, #12]
   22a94:	cmp	r0, #0
   22a98:	beq	22aa4 <ASN1_STRING_length@plt+0x10b30>
   22a9c:	add	sp, sp, #20
   22aa0:	pop	{r4, r5, pc}
   22aa4:	ldrb	r3, [r4, #48]	; 0x30
   22aa8:	tst	r3, #1
   22aac:	bne	22ae4 <ASN1_STRING_length@plt+0x10b70>
   22ab0:	ldr	r1, [r4, #8]
   22ab4:	ldr	r0, [r4]
   22ab8:	bl	1cc78 <ASN1_STRING_length@plt+0xad04>
   22abc:	subs	r5, r0, #0
   22ac0:	beq	22ae4 <ASN1_STRING_length@plt+0x10b70>
   22ac4:	mov	r1, r5
   22ac8:	mov	r0, r4
   22acc:	bl	21e08 <ASN1_STRING_length@plt+0xfe94>
   22ad0:	mov	r0, r5
   22ad4:	bl	11ba8 <free@plt>
   22ad8:	ldr	r0, [r4, #12]
   22adc:	add	sp, sp, #20
   22ae0:	pop	{r4, r5, pc}
   22ae4:	mov	r0, #0
   22ae8:	add	sp, sp, #20
   22aec:	pop	{r4, r5, pc}
   22af0:	ldr	r2, [pc, #60]	; 22b34 <ASN1_STRING_length@plt+0x10bc0>
   22af4:	ldr	r3, [r4, #12]
   22af8:	add	r2, pc, r2
   22afc:	ldr	r1, [pc, #52]	; 22b38 <ASN1_STRING_length@plt+0x10bc4>
   22b00:	str	r3, [sp, #12]
   22b04:	ldr	r0, [r4, #8]
   22b08:	str	r2, [sp]
   22b0c:	ldr	r2, [pc, #40]	; 22b3c <ASN1_STRING_length@plt+0x10bc8>
   22b10:	add	r1, pc, r1
   22b14:	str	r1, [sp, #4]
   22b18:	str	r0, [sp, #8]
   22b1c:	mov	r3, #744	; 0x2e8
   22b20:	add	r2, pc, r2
   22b24:	ldr	r0, [r4]
   22b28:	mov	r1, #7
   22b2c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22b30:	b	22a90 <ASN1_STRING_length@plt+0x10b1c>
   22b34:	andeq	fp, r0, r8, ror lr
   22b38:	andeq	ip, r0, ip, ror r1
   22b3c:	muleq	r0, r0, r0
   22b40:	ldr	r1, [r0, #36]	; 0x24
   22b44:	cmp	r1, #0
   22b48:	beq	22b54 <ASN1_STRING_length@plt+0x10be0>
   22b4c:	mov	r0, r1
   22b50:	b	25b64 <ASN1_STRING_length@plt+0x13bf0>
   22b54:	push	{r4, lr}
   22b58:	mov	r4, r0
   22b5c:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   22b60:	subs	r1, r0, #0
   22b64:	beq	22b84 <ASN1_STRING_length@plt+0x10c10>
   22b68:	ldr	r0, [r4]
   22b6c:	bl	25b8c <ASN1_STRING_length@plt+0x13c18>
   22b70:	cmp	r0, #0
   22b74:	str	r0, [r4, #36]	; 0x24
   22b78:	beq	22b90 <ASN1_STRING_length@plt+0x10c1c>
   22b7c:	pop	{r4, lr}
   22b80:	b	25b64 <ASN1_STRING_length@plt+0x13bf0>
   22b84:	bl	11f38 <__errno_location@plt>
   22b88:	mov	r3, #2
   22b8c:	str	r3, [r0]
   22b90:	mov	r0, #0
   22b94:	pop	{r4, pc}
   22b98:	push	{r4, r5, lr}
   22b9c:	subs	r4, r0, #0
   22ba0:	sub	sp, sp, #20
   22ba4:	beq	22c2c <ASN1_STRING_length@plt+0x10cb8>
   22ba8:	and	r1, r1, #512	; 0x200
   22bac:	orr	r1, r1, #2048	; 0x800
   22bb0:	ldr	r0, [r4, #8]
   22bb4:	bl	11e48 <delete_module@plt>
   22bb8:	subs	r5, r0, #0
   22bbc:	bne	22bcc <ASN1_STRING_length@plt+0x10c58>
   22bc0:	mov	r0, r5
   22bc4:	add	sp, sp, #20
   22bc8:	pop	{r4, r5, pc}
   22bcc:	bl	11f38 <__errno_location@plt>
   22bd0:	ldr	r5, [r0]
   22bd4:	ldr	r0, [r4]
   22bd8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22bdc:	rsb	r5, r5, #0
   22be0:	cmp	r0, #2
   22be4:	ble	22bc0 <ASN1_STRING_length@plt+0x10c4c>
   22be8:	ldr	r2, [pc, #68]	; 22c34 <ASN1_STRING_length@plt+0x10cc0>
   22bec:	ldr	r3, [pc, #68]	; 22c38 <ASN1_STRING_length@plt+0x10cc4>
   22bf0:	add	r2, pc, r2
   22bf4:	ldr	r1, [r4, #8]
   22bf8:	str	r2, [sp, #4]
   22bfc:	ldr	r2, [pc, #56]	; 22c3c <ASN1_STRING_length@plt+0x10cc8>
   22c00:	add	r3, pc, r3
   22c04:	str	r1, [sp, #8]
   22c08:	str	r3, [sp]
   22c0c:	add	r2, pc, r2
   22c10:	ldr	r0, [r4]
   22c14:	ldr	r3, [pc, #36]	; 22c40 <ASN1_STRING_length@plt+0x10ccc>
   22c18:	mov	r1, #3
   22c1c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22c20:	mov	r0, r5
   22c24:	add	sp, sp, #20
   22c28:	pop	{r4, r5, pc}
   22c2c:	mvn	r5, #1
   22c30:	b	22bc0 <ASN1_STRING_length@plt+0x10c4c>
   22c34:	andeq	ip, r0, r8, ror #9
   22c38:	andeq	fp, r0, r8, lsl #27
   22c3c:	andeq	fp, r0, r4, lsr #31
   22c40:	andeq	r0, r0, r9, lsl r3
   22c44:	push	{r4, r5, r6, r7, r8, r9, lr}
   22c48:	subs	r7, r2, #0
   22c4c:	sub	sp, sp, #20
   22c50:	mov	r4, r0
   22c54:	mov	r6, r1
   22c58:	beq	22d40 <ASN1_STRING_length@plt+0x10dcc>
   22c5c:	cmp	r4, #0
   22c60:	beq	22ee4 <ASN1_STRING_length@plt+0x10f70>
   22c64:	mov	r0, r4
   22c68:	bl	22a70 <ASN1_STRING_length@plt+0x10afc>
   22c6c:	subs	r8, r0, #0
   22c70:	beq	22e9c <ASN1_STRING_length@plt+0x10f28>
   22c74:	ldr	r0, [r4, #36]	; 0x24
   22c78:	cmp	r0, #0
   22c7c:	beq	22d4c <ASN1_STRING_length@plt+0x10dd8>
   22c80:	bl	25d3c <ASN1_STRING_length@plt+0x13dc8>
   22c84:	cmp	r0, #0
   22c88:	beq	22cd0 <ASN1_STRING_length@plt+0x10d5c>
   22c8c:	ands	r5, r6, #1
   22c90:	movne	r5, #2
   22c94:	ldr	r0, [r4, #36]	; 0x24
   22c98:	tst	r6, #2
   22c9c:	orrne	r5, r5, #1
   22ca0:	bl	25d44 <ASN1_STRING_length@plt+0x13dd0>
   22ca4:	mov	r3, r5
   22ca8:	mov	r2, r7
   22cac:	mov	r1, r0
   22cb0:	ldr	r0, [pc, #564]	; 22eec <ASN1_STRING_length@plt+0x10f78>
   22cb4:	bl	11ecc <syscall@plt>
   22cb8:	subs	r5, r0, #0
   22cbc:	beq	22d08 <ASN1_STRING_length@plt+0x10d94>
   22cc0:	bl	11f38 <__errno_location@plt>
   22cc4:	ldr	r3, [r0]
   22cc8:	cmp	r3, #38	; 0x26
   22ccc:	bne	22d00 <ASN1_STRING_length@plt+0x10d8c>
   22cd0:	tst	r6, #3
   22cd4:	ldr	r0, [r4, #36]	; 0x24
   22cd8:	bne	22d14 <ASN1_STRING_length@plt+0x10da0>
   22cdc:	bl	25d2c <ASN1_STRING_length@plt+0x13db8>
   22ce0:	mov	r5, r0
   22ce4:	ldr	r0, [r4, #36]	; 0x24
   22ce8:	bl	25d34 <ASN1_STRING_length@plt+0x13dc0>
   22cec:	mov	r2, r7
   22cf0:	mov	r1, r0
   22cf4:	mov	r0, r5
   22cf8:	bl	119e0 <init_module@plt>
   22cfc:	mov	r5, r0
   22d00:	cmp	r5, #0
   22d04:	blt	22d7c <ASN1_STRING_length@plt+0x10e08>
   22d08:	mov	r0, r5
   22d0c:	add	sp, sp, #20
   22d10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22d14:	bl	25b64 <ASN1_STRING_length@plt+0x13bf0>
   22d18:	subs	r5, r0, #0
   22d1c:	beq	22d64 <ASN1_STRING_length@plt+0x10df0>
   22d20:	tst	r6, #2
   22d24:	bne	22e34 <ASN1_STRING_length@plt+0x10ec0>
   22d28:	tst	r6, #1
   22d2c:	bne	22dd0 <ASN1_STRING_length@plt+0x10e5c>
   22d30:	mov	r0, r5
   22d34:	bl	26600 <ASN1_STRING_length@plt+0x1468c>
   22d38:	mov	r5, r0
   22d3c:	b	22ce4 <ASN1_STRING_length@plt+0x10d70>
   22d40:	ldr	r7, [pc, #424]	; 22ef0 <ASN1_STRING_length@plt+0x10f7c>
   22d44:	add	r7, pc, r7
   22d48:	b	22c5c <ASN1_STRING_length@plt+0x10ce8>
   22d4c:	mov	r1, r8
   22d50:	ldr	r0, [r4]
   22d54:	bl	25b8c <ASN1_STRING_length@plt+0x13c18>
   22d58:	cmp	r0, #0
   22d5c:	str	r0, [r4, #36]	; 0x24
   22d60:	bne	22c80 <ASN1_STRING_length@plt+0x10d0c>
   22d64:	bl	11f38 <__errno_location@plt>
   22d68:	ldr	r5, [r0]
   22d6c:	rsb	r5, r5, #0
   22d70:	mov	r0, r5
   22d74:	add	sp, sp, #20
   22d78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22d7c:	bl	11f38 <__errno_location@plt>
   22d80:	ldr	r5, [r0]
   22d84:	ldr	r0, [r4]
   22d88:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22d8c:	rsb	r5, r5, #0
   22d90:	cmp	r0, #5
   22d94:	ble	22d08 <ASN1_STRING_length@plt+0x10d94>
   22d98:	ldr	r2, [pc, #340]	; 22ef4 <ASN1_STRING_length@plt+0x10f80>
   22d9c:	ldr	r3, [pc, #340]	; 22ef8 <ASN1_STRING_length@plt+0x10f84>
   22da0:	add	r2, pc, r2
   22da4:	str	r8, [sp, #8]
   22da8:	ldr	r0, [r4]
   22dac:	str	r2, [sp, #4]
   22db0:	ldr	r2, [pc, #324]	; 22efc <ASN1_STRING_length@plt+0x10f88>
   22db4:	add	r3, pc, r3
   22db8:	str	r3, [sp]
   22dbc:	add	r2, pc, r2
   22dc0:	ldr	r3, [pc, #312]	; 22f00 <ASN1_STRING_length@plt+0x10f8c>
   22dc4:	mov	r1, #6
   22dc8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22dcc:	b	22d08 <ASN1_STRING_length@plt+0x10d94>
   22dd0:	mov	r0, r5
   22dd4:	bl	278fc <ASN1_STRING_length@plt+0x15988>
   22dd8:	subs	r6, r0, #0
   22ddc:	bge	22d30 <ASN1_STRING_length@plt+0x10dbc>
   22de0:	ldr	r0, [r4]
   22de4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22de8:	cmp	r0, #5
   22dec:	ble	22d30 <ASN1_STRING_length@plt+0x10dbc>
   22df0:	rsb	r0, r6, #0
   22df4:	ldr	r6, [r4]
   22df8:	bl	119f8 <strerror@plt>
   22dfc:	ldr	r2, [pc, #256]	; 22f04 <ASN1_STRING_length@plt+0x10f90>
   22e00:	ldr	r3, [pc, #256]	; 22f08 <ASN1_STRING_length@plt+0x10f94>
   22e04:	add	r2, pc, r2
   22e08:	str	r2, [sp, #4]
   22e0c:	ldr	r2, [pc, #248]	; 22f0c <ASN1_STRING_length@plt+0x10f98>
   22e10:	add	r3, pc, r3
   22e14:	str	r3, [sp]
   22e18:	add	r2, pc, r2
   22e1c:	ldr	r3, [pc, #236]	; 22f10 <ASN1_STRING_length@plt+0x10f9c>
   22e20:	mov	r1, #6
   22e24:	str	r0, [sp, #8]
   22e28:	mov	r0, r6
   22e2c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22e30:	b	22d30 <ASN1_STRING_length@plt+0x10dbc>
   22e34:	ldr	r1, [pc, #216]	; 22f14 <ASN1_STRING_length@plt+0x10fa0>
   22e38:	add	r1, pc, r1
   22e3c:	bl	271f8 <ASN1_STRING_length@plt+0x15284>
   22e40:	subs	r9, r0, #0
   22e44:	bge	22d28 <ASN1_STRING_length@plt+0x10db4>
   22e48:	ldr	r0, [r4]
   22e4c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22e50:	cmp	r0, #5
   22e54:	ble	22d28 <ASN1_STRING_length@plt+0x10db4>
   22e58:	rsb	r0, r9, #0
   22e5c:	ldr	r9, [r4]
   22e60:	bl	119f8 <strerror@plt>
   22e64:	ldr	r2, [pc, #172]	; 22f18 <ASN1_STRING_length@plt+0x10fa4>
   22e68:	ldr	r3, [pc, #172]	; 22f1c <ASN1_STRING_length@plt+0x10fa8>
   22e6c:	add	r2, pc, r2
   22e70:	str	r2, [sp, #4]
   22e74:	ldr	r2, [pc, #164]	; 22f20 <ASN1_STRING_length@plt+0x10fac>
   22e78:	add	r3, pc, r3
   22e7c:	str	r3, [sp]
   22e80:	add	r2, pc, r2
   22e84:	ldr	r3, [pc, #152]	; 22f24 <ASN1_STRING_length@plt+0x10fb0>
   22e88:	mov	r1, #6
   22e8c:	str	r0, [sp, #8]
   22e90:	mov	r0, r9
   22e94:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22e98:	b	22d28 <ASN1_STRING_length@plt+0x10db4>
   22e9c:	ldr	r0, [r4]
   22ea0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   22ea4:	cmp	r0, #2
   22ea8:	ble	22ee4 <ASN1_STRING_length@plt+0x10f70>
   22eac:	ldr	r2, [pc, #116]	; 22f28 <ASN1_STRING_length@plt+0x10fb4>
   22eb0:	ldr	r1, [r4, #8]
   22eb4:	add	r2, pc, r2
   22eb8:	ldr	r3, [pc, #108]	; 22f2c <ASN1_STRING_length@plt+0x10fb8>
   22ebc:	str	r1, [sp, #8]
   22ec0:	ldr	r0, [r4]
   22ec4:	str	r2, [sp, #4]
   22ec8:	ldr	r2, [pc, #96]	; 22f30 <ASN1_STRING_length@plt+0x10fbc>
   22ecc:	add	r3, pc, r3
   22ed0:	str	r3, [sp]
   22ed4:	add	r2, pc, r2
   22ed8:	mov	r3, #832	; 0x340
   22edc:	mov	r1, #3
   22ee0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   22ee4:	mvn	r5, #1
   22ee8:	b	22d08 <ASN1_STRING_length@plt+0x10d94>
   22eec:	andeq	r0, r0, fp, ror r1
   22ef0:	andeq	sl, r0, r8, lsl r3
   22ef4:	andeq	ip, r0, ip, asr #32
   22ef8:	strdeq	fp, [r0], -r0
   22efc:	strdeq	fp, [r0], -r4
   22f00:	andeq	r0, r0, r6, ror r3
   22f04:	andeq	fp, r0, r8, asr #31
   22f08:	muleq	r0, r4, fp
   22f0c:	muleq	r0, r8, sp
   22f10:	andeq	r0, r0, r9, ror #6
   22f14:	andeq	fp, r0, r8, ror #30
   22f18:	andeq	fp, r0, r0, asr #30
   22f1c:	andeq	fp, r0, ip, lsr #22
   22f20:	andeq	fp, r0, r0, lsr sp
   22f24:	andeq	r0, r0, r3, ror #6
   22f28:	andeq	fp, r0, r8, asr #29
   22f2c:	ldrdeq	fp, [r0], -r8
   22f30:	ldrdeq	fp, [r0], -ip
   22f34:	cmp	r0, #0
   22f38:	clz	ip, r3
   22f3c:	lsr	ip, ip, #5
   22f40:	movne	r0, ip
   22f44:	moveq	r0, #1
   22f48:	cmp	r0, #0
   22f4c:	bne	23014 <ASN1_STRING_length@plt+0x110a0>
   22f50:	cmp	r2, #0
   22f54:	str	r0, [r3]
   22f58:	beq	2300c <ASN1_STRING_length@plt+0x11098>
   22f5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22f60:	mov	r6, r3
   22f64:	mov	r7, r2
   22f68:	and	sl, r1, #1
   22f6c:	and	r8, r1, #2
   22f70:	mov	r4, r2
   22f74:	b	22fc0 <ASN1_STRING_length@plt+0x1104c>
   22f78:	cmp	r8, #0
   22f7c:	mov	r0, r5
   22f80:	beq	22f90 <ASN1_STRING_length@plt+0x1101c>
   22f84:	bl	21758 <ASN1_STRING_length@plt+0xf7e4>
   22f88:	cmp	r0, #0
   22f8c:	bne	22fb0 <ASN1_STRING_length@plt+0x1103c>
   22f90:	mov	r1, r5
   22f94:	ldr	r0, [r6]
   22f98:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   22f9c:	subs	r9, r0, #0
   22fa0:	mov	r0, r5
   22fa4:	beq	22ff8 <ASN1_STRING_length@plt+0x11084>
   22fa8:	str	r9, [r6]
   22fac:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   22fb0:	ldr	r4, [r4]
   22fb4:	cmp	r7, r4
   22fb8:	cmpne	r4, #0
   22fbc:	beq	22ff0 <ASN1_STRING_length@plt+0x1107c>
   22fc0:	cmp	sl, #0
   22fc4:	ldr	r5, [r4, #8]
   22fc8:	beq	22f78 <ASN1_STRING_length@plt+0x11004>
   22fcc:	mov	r1, r5
   22fd0:	ldr	r0, [r1], #8
   22fd4:	bl	213b0 <ASN1_STRING_length@plt+0xf43c>
   22fd8:	cmp	r0, #0
   22fdc:	beq	22f78 <ASN1_STRING_length@plt+0x11004>
   22fe0:	ldr	r4, [r4]
   22fe4:	cmp	r7, r4
   22fe8:	cmpne	r4, #0
   22fec:	bne	22fc0 <ASN1_STRING_length@plt+0x1104c>
   22ff0:	mov	r0, #0
   22ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22ff8:	ldr	r0, [r6]
   22ffc:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   23000:	str	r9, [r6]
   23004:	mvn	r0, #11
   23008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2300c:	mov	r0, #0
   23010:	bx	lr
   23014:	mvn	r0, #1
   23018:	bx	lr
   2301c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23020:	subs	r4, r0, #0
   23024:	sub	sp, sp, #44	; 0x2c
   23028:	beq	23220 <ASN1_STRING_length@plt+0x112ac>
   2302c:	ldrb	r6, [r4, #48]	; 0x30
   23030:	lsr	r6, r6, #1
   23034:	ands	r6, r6, #1
   23038:	beq	2304c <ASN1_STRING_length@plt+0x110d8>
   2303c:	ldr	r8, [r4, #20]
   23040:	mov	r0, r8
   23044:	add	sp, sp, #44	; 0x2c
   23048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2304c:	ldr	r0, [r4]
   23050:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   23054:	ldr	r5, [r0, #12]
   23058:	mov	r9, r0
   2305c:	cmp	r5, #0
   23060:	beq	23268 <ASN1_STRING_length@plt+0x112f4>
   23064:	ldr	r3, [pc, #516]	; 23270 <ASN1_STRING_length@plt+0x112fc>
   23068:	mov	r8, r6
   2306c:	add	r3, pc, r3
   23070:	str	r3, [sp, #28]
   23074:	ldr	r3, [pc, #504]	; 23274 <ASN1_STRING_length@plt+0x11300>
   23078:	add	r3, pc, r3
   2307c:	str	r3, [sp, #32]
   23080:	ldr	r3, [pc, #496]	; 23278 <ASN1_STRING_length@plt+0x11304>
   23084:	add	r3, pc, r3
   23088:	str	r3, [sp, #36]	; 0x24
   2308c:	mov	r0, r5
   23090:	bl	1dab8 <ASN1_STRING_length@plt+0xbb44>
   23094:	mov	r7, r0
   23098:	ldr	r0, [r4]
   2309c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   230a0:	cmp	r0, #6
   230a4:	bgt	23184 <ASN1_STRING_length@plt+0x11210>
   230a8:	ldr	r1, [r4, #8]
   230ac:	mov	r0, r7
   230b0:	bl	11f14 <strcmp@plt>
   230b4:	cmp	r0, #0
   230b8:	beq	230d8 <ASN1_STRING_length@plt+0x11164>
   230bc:	ldr	r1, [r4, #32]
   230c0:	cmp	r1, #0
   230c4:	beq	23150 <ASN1_STRING_length@plt+0x111dc>
   230c8:	mov	r0, r7
   230cc:	bl	11f14 <strcmp@plt>
   230d0:	cmp	r0, #0
   230d4:	bne	23150 <ASN1_STRING_length@plt+0x111dc>
   230d8:	ldr	r0, [r4]
   230dc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   230e0:	cmp	r0, #6
   230e4:	bgt	231c0 <ASN1_STRING_length@plt+0x1124c>
   230e8:	mov	r0, r5
   230ec:	bl	1daac <ASN1_STRING_length@plt+0xbb38>
   230f0:	mov	r7, r0
   230f4:	bl	11c44 <strlen@plt>
   230f8:	subs	fp, r0, #0
   230fc:	beq	23150 <ASN1_STRING_length@plt+0x111dc>
   23100:	add	r1, r6, #2
   23104:	add	r1, r1, fp
   23108:	mov	r0, r8
   2310c:	bl	11ec0 <realloc@plt>
   23110:	subs	sl, r0, #0
   23114:	beq	23208 <ASN1_STRING_length@plt+0x11294>
   23118:	cmp	r6, #0
   2311c:	addne	r1, r6, #1
   23120:	movne	r0, #32
   23124:	strbne	r0, [sl, r6]
   23128:	moveq	r6, fp
   2312c:	addne	r6, fp, r1
   23130:	addne	r0, sl, r1
   23134:	mov	r2, fp
   23138:	moveq	r0, sl
   2313c:	mov	r1, r7
   23140:	mov	r8, sl
   23144:	bl	11c5c <memcpy@plt>
   23148:	mov	r2, #0
   2314c:	strb	r2, [sl, r6]
   23150:	ldr	r5, [r5]
   23154:	ldr	r3, [r9, #12]
   23158:	cmp	r5, r3
   2315c:	beq	23168 <ASN1_STRING_length@plt+0x111f4>
   23160:	cmp	r5, #0
   23164:	bne	2308c <ASN1_STRING_length@plt+0x11118>
   23168:	ldrb	r3, [r4, #48]	; 0x30
   2316c:	mov	r0, r8
   23170:	str	r8, [r4, #20]
   23174:	orr	r3, r3, #2
   23178:	strb	r3, [r4, #48]	; 0x30
   2317c:	add	sp, sp, #44	; 0x2c
   23180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23184:	ldr	r2, [r4, #32]
   23188:	ldr	r3, [pc, #236]	; 2327c <ASN1_STRING_length@plt+0x11308>
   2318c:	str	r2, [sp, #16]
   23190:	ldr	r1, [r4, #8]
   23194:	ldr	r2, [sp, #28]
   23198:	str	r1, [sp, #12]
   2319c:	ldr	r1, [sp, #32]
   231a0:	str	r7, [sp, #8]
   231a4:	str	r1, [sp, #4]
   231a8:	ldr	r1, [sp, #36]	; 0x24
   231ac:	str	r1, [sp]
   231b0:	mov	r1, #7
   231b4:	ldr	r0, [r4]
   231b8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   231bc:	b	230a8 <ASN1_STRING_length@plt+0x11134>
   231c0:	ldr	r3, [r4, #32]
   231c4:	ldr	r2, [pc, #180]	; 23280 <ASN1_STRING_length@plt+0x1130c>
   231c8:	str	r3, [sp, #16]
   231cc:	add	r2, pc, r2
   231d0:	ldr	r3, [pc, #172]	; 23284 <ASN1_STRING_length@plt+0x11310>
   231d4:	ldr	r1, [r4, #8]
   231d8:	str	r2, [sp, #4]
   231dc:	ldr	r2, [pc, #164]	; 23288 <ASN1_STRING_length@plt+0x11314>
   231e0:	add	r3, pc, r3
   231e4:	str	r1, [sp, #12]
   231e8:	str	r3, [sp]
   231ec:	str	r7, [sp, #8]
   231f0:	ldr	r3, [pc, #148]	; 2328c <ASN1_STRING_length@plt+0x11318>
   231f4:	ldr	r0, [r4]
   231f8:	add	r2, pc, r2
   231fc:	mov	r1, #7
   23200:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23204:	b	230e8 <ASN1_STRING_length@plt+0x11174>
   23208:	mov	r0, r8
   2320c:	bl	11ba8 <free@plt>
   23210:	ldr	r0, [r4]
   23214:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23218:	cmp	r0, #2
   2321c:	bgt	23230 <ASN1_STRING_length@plt+0x112bc>
   23220:	mov	r8, #0
   23224:	mov	r0, r8
   23228:	add	sp, sp, #44	; 0x2c
   2322c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23230:	ldr	r2, [pc, #88]	; 23290 <ASN1_STRING_length@plt+0x1131c>
   23234:	ldr	r3, [pc, #88]	; 23294 <ASN1_STRING_length@plt+0x11320>
   23238:	add	r2, pc, r2
   2323c:	str	r2, [sp, #4]
   23240:	ldr	r2, [pc, #80]	; 23298 <ASN1_STRING_length@plt+0x11324>
   23244:	add	r3, pc, r3
   23248:	str	r3, [sp]
   2324c:	add	r2, pc, r2
   23250:	ldr	r3, [pc, #68]	; 2329c <ASN1_STRING_length@plt+0x11328>
   23254:	ldr	r0, [r4]
   23258:	mov	r1, #3
   2325c:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23260:	mov	r8, sl
   23264:	b	23040 <ASN1_STRING_length@plt+0x110cc>
   23268:	mov	r8, r5
   2326c:	b	23168 <ASN1_STRING_length@plt+0x111f4>
   23270:	andeq	fp, r0, r4, asr #22
   23274:			; <UNDEFINED> instruction: 0x0000bbbc
   23278:	andeq	fp, r0, r4, lsr #19
   2327c:	andeq	r0, r0, r1, ror r5
   23280:	muleq	r0, r0, sl
   23284:	andeq	fp, r0, r8, asr #16
   23288:			; <UNDEFINED> instruction: 0x0000b9b8
   2328c:	andeq	r0, r0, r6, ror r5
   23290:	andeq	r9, r0, r4, lsr #1
   23294:	andeq	fp, r0, r4, ror #15
   23298:	andeq	fp, r0, r4, ror #18
   2329c:	muleq	r0, r5, r5
   232a0:	push	{r4, r5, r6, lr}
   232a4:	subs	r4, r0, #0
   232a8:	beq	23328 <ASN1_STRING_length@plt+0x113b4>
   232ac:	ldrb	r3, [r4, #48]	; 0x30
   232b0:	tst	r3, #4
   232b4:	beq	232c0 <ASN1_STRING_length@plt+0x1134c>
   232b8:	ldr	r0, [r4, #24]
   232bc:	pop	{r4, r5, r6, pc}
   232c0:	ldr	r0, [r4]
   232c4:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   232c8:	ldr	r5, [r0, #20]
   232cc:	mov	r6, r0
   232d0:	cmp	r5, #0
   232d4:	beq	23304 <ASN1_STRING_length@plt+0x11390>
   232d8:	mov	r0, r5
   232dc:	bl	1dad0 <ASN1_STRING_length@plt+0xbb5c>
   232e0:	mov	r2, #0
   232e4:	ldr	r1, [r4, #8]
   232e8:	bl	11e00 <fnmatch@plt>
   232ec:	cmp	r0, #0
   232f0:	beq	2330c <ASN1_STRING_length@plt+0x11398>
   232f4:	ldr	r5, [r5]
   232f8:	ldr	r3, [r6, #20]
   232fc:	cmp	r5, r3
   23300:	bne	232d0 <ASN1_STRING_length@plt+0x1135c>
   23304:	ldr	r0, [r4, #24]
   23308:	b	23318 <ASN1_STRING_length@plt+0x113a4>
   2330c:	mov	r0, r5
   23310:	bl	1dac4 <ASN1_STRING_length@plt+0xbb50>
   23314:	str	r0, [r4, #24]
   23318:	ldrb	r3, [r4, #48]	; 0x30
   2331c:	orr	r3, r3, #4
   23320:	strb	r3, [r4, #48]	; 0x30
   23324:	pop	{r4, r5, r6, pc}
   23328:	mov	r0, r4
   2332c:	pop	{r4, r5, r6, pc}
   23330:	ldrb	r3, [r0, #48]	; 0x30
   23334:	str	r1, [r0, #24]
   23338:	orr	r3, r3, #4
   2333c:	strb	r3, [r0, #48]	; 0x30
   23340:	bx	lr
   23344:	ldr	ip, [pc, #340]	; 234a0 <ASN1_STRING_length@plt+0x1152c>
   23348:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2334c:	add	ip, pc, ip
   23350:	ldr	lr, [pc, #332]	; 234a4 <ASN1_STRING_length@plt+0x11530>
   23354:	cmp	r1, #0
   23358:	clz	r3, r2
   2335c:	ldr	r6, [ip, lr]
   23360:	lsr	r3, r3, #5
   23364:	moveq	r3, #1
   23368:	cmp	r0, #0
   2336c:	moveq	r3, #1
   23370:	sub	sp, sp, #8
   23374:	cmp	r3, #0
   23378:	ldr	r3, [r6]
   2337c:	str	r3, [sp, #4]
   23380:	bne	23454 <ASN1_STRING_length@plt+0x114e0>
   23384:	ldr	r3, [r1]
   23388:	mov	r9, r1
   2338c:	cmp	r3, #0
   23390:	bne	2347c <ASN1_STRING_length@plt+0x11508>
   23394:	ldr	r3, [r2]
   23398:	mov	r8, r2
   2339c:	cmp	r3, #0
   233a0:	bne	2345c <ASN1_STRING_length@plt+0x114e8>
   233a4:	mov	r5, r0
   233a8:	ldr	r0, [r0]
   233ac:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   233b0:	ldr	r4, [r0, #24]
   233b4:	mov	sl, r0
   233b8:	cmp	r4, #0
   233bc:	beq	233ec <ASN1_STRING_length@plt+0x11478>
   233c0:	mov	r0, r4
   233c4:	bl	1dadc <ASN1_STRING_length@plt+0xbb68>
   233c8:	mov	r2, #0
   233cc:	ldr	r1, [r5, #8]
   233d0:	bl	11e00 <fnmatch@plt>
   233d4:	subs	r7, r0, #0
   233d8:	beq	233f4 <ASN1_STRING_length@plt+0x11480>
   233dc:	ldr	r4, [r4]
   233e0:	ldr	r3, [sl, #24]
   233e4:	cmp	r4, r3
   233e8:	bne	233b8 <ASN1_STRING_length@plt+0x11444>
   233ec:	mov	r7, #0
   233f0:	b	23438 <ASN1_STRING_length@plt+0x114c4>
   233f4:	mov	sl, sp
   233f8:	mov	r1, sl
   233fc:	mov	r0, r4
   23400:	bl	1e3e8 <ASN1_STRING_length@plt+0xc474>
   23404:	ldr	r2, [sp]
   23408:	mov	r1, r0
   2340c:	ldr	r0, [r5]
   23410:	bl	22814 <ASN1_STRING_length@plt+0x108a0>
   23414:	mov	r1, sl
   23418:	str	r0, [r9]
   2341c:	mov	r0, r4
   23420:	bl	1e3fc <ASN1_STRING_length@plt+0xc488>
   23424:	ldr	r2, [sp]
   23428:	mov	r1, r0
   2342c:	ldr	r0, [r5]
   23430:	bl	22814 <ASN1_STRING_length@plt+0x108a0>
   23434:	str	r0, [r8]
   23438:	ldr	r2, [sp, #4]
   2343c:	ldr	r3, [r6]
   23440:	mov	r0, r7
   23444:	cmp	r2, r3
   23448:	bne	2349c <ASN1_STRING_length@plt+0x11528>
   2344c:	add	sp, sp, #8
   23450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23454:	mvn	r7, #1
   23458:	b	23438 <ASN1_STRING_length@plt+0x114c4>
   2345c:	ldr	r3, [pc, #68]	; 234a8 <ASN1_STRING_length@plt+0x11534>
   23460:	ldr	r1, [pc, #68]	; 234ac <ASN1_STRING_length@plt+0x11538>
   23464:	ldr	r0, [pc, #68]	; 234b0 <ASN1_STRING_length@plt+0x1153c>
   23468:	add	r3, pc, r3
   2346c:	ldr	r2, [pc, #64]	; 234b4 <ASN1_STRING_length@plt+0x11540>
   23470:	add	r1, pc, r1
   23474:	add	r0, pc, r0
   23478:	bl	11b6c <__assert_fail@plt>
   2347c:	ldr	r3, [pc, #52]	; 234b8 <ASN1_STRING_length@plt+0x11544>
   23480:	ldr	r1, [pc, #52]	; 234bc <ASN1_STRING_length@plt+0x11548>
   23484:	ldr	r0, [pc, #52]	; 234c0 <ASN1_STRING_length@plt+0x1154c>
   23488:	add	r3, pc, r3
   2348c:	ldr	r2, [pc, #48]	; 234c4 <ASN1_STRING_length@plt+0x11550>
   23490:	add	r1, pc, r1
   23494:	add	r0, pc, r0
   23498:	bl	11b6c <__assert_fail@plt>
   2349c:	bl	11d88 <__stack_chk_fail@plt>
   234a0:	andeq	ip, r1, r8, lsr #21
   234a4:	strdeq	r0, [r0], -r8
   234a8:	strdeq	fp, [r0], -r4
   234ac:	andeq	fp, r0, r0, asr #14
   234b0:	andeq	fp, r0, ip, ror #17
   234b4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   234b8:	ldrdeq	fp, [r0], -r4
   234bc:	andeq	fp, r0, r0, lsr #14
   234c0:			; <UNDEFINED> instruction: 0x0000b8bc
   234c4:	strdeq	r0, [r0], -lr
   234c8:	ldr	r3, [pc, #420]	; 23674 <ASN1_STRING_length@plt+0x11700>
   234cc:	ldr	r2, [pc, #420]	; 23678 <ASN1_STRING_length@plt+0x11704>
   234d0:	add	r3, pc, r3
   234d4:	push	{r4, r5, r6, r7, r8, lr}
   234d8:	sub	sp, sp, #32
   234dc:	ldr	r7, [r3, r2]
   234e0:	mov	ip, #0
   234e4:	mov	r6, r1
   234e8:	ldr	r3, [r7]
   234ec:	add	r2, sp, #24
   234f0:	add	r1, sp, #20
   234f4:	str	ip, [sp, #20]
   234f8:	str	r3, [sp, #28]
   234fc:	str	ip, [sp, #24]
   23500:	mov	r8, r0
   23504:	bl	23344 <ASN1_STRING_length@plt+0x113d0>
   23508:	subs	r5, r0, #0
   2350c:	ldrge	r4, [sp, #20]
   23510:	blt	235f8 <ASN1_STRING_length@plt+0x11684>
   23514:	cmp	r4, #0
   23518:	beq	23548 <ASN1_STRING_length@plt+0x115d4>
   2351c:	mov	r2, #0
   23520:	mov	r1, r2
   23524:	mov	r3, r6
   23528:	ldr	r0, [r4, #8]
   2352c:	bl	2368c <ASN1_STRING_length@plt+0x11718>
   23530:	subs	r5, r0, #0
   23534:	blt	235cc <ASN1_STRING_length@plt+0x11658>
   23538:	ldr	r4, [r4]
   2353c:	ldr	r3, [sp, #20]
   23540:	cmp	r4, r3
   23544:	bne	23514 <ASN1_STRING_length@plt+0x115a0>
   23548:	mov	r0, r8
   2354c:	ldr	r4, [r6]
   23550:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   23554:	mov	r1, r0
   23558:	mov	r0, r4
   2355c:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   23560:	subs	r3, r0, #0
   23564:	beq	23660 <ASN1_STRING_length@plt+0x116ec>
   23568:	ldr	r0, [sp, #20]
   2356c:	str	r3, [r6]
   23570:	cmp	r0, #0
   23574:	ldr	r4, [sp, #24]
   23578:	movne	r2, #1
   2357c:	beq	23650 <ASN1_STRING_length@plt+0x116dc>
   23580:	ldrb	r3, [r8, #56]	; 0x38
   23584:	cmp	r4, #0
   23588:	bic	r3, r3, #2
   2358c:	orr	r3, r3, r2, lsl #1
   23590:	strb	r3, [r8, #56]	; 0x38
   23594:	beq	235d0 <ASN1_STRING_length@plt+0x1165c>
   23598:	mov	r2, #0
   2359c:	mov	r1, r2
   235a0:	mov	r3, r6
   235a4:	ldr	r0, [r4, #8]
   235a8:	bl	2368c <ASN1_STRING_length@plt+0x11718>
   235ac:	subs	r5, r0, #0
   235b0:	blt	235cc <ASN1_STRING_length@plt+0x11658>
   235b4:	ldr	r4, [r4]
   235b8:	ldr	r3, [sp, #24]
   235bc:	cmp	r4, r3
   235c0:	beq	235cc <ASN1_STRING_length@plt+0x11658>
   235c4:	cmp	r4, #0
   235c8:	bne	23598 <ASN1_STRING_length@plt+0x11624>
   235cc:	ldr	r0, [sp, #20]
   235d0:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   235d4:	ldr	r0, [sp, #24]
   235d8:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   235dc:	ldr	r2, [sp, #28]
   235e0:	ldr	r3, [r7]
   235e4:	mov	r0, r5
   235e8:	cmp	r2, r3
   235ec:	bne	2365c <ASN1_STRING_length@plt+0x116e8>
   235f0:	add	sp, sp, #32
   235f4:	pop	{r4, r5, r6, r7, r8, pc}
   235f8:	ldr	r0, [r8]
   235fc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23600:	cmp	r0, #2
   23604:	ble	235cc <ASN1_STRING_length@plt+0x11658>
   23608:	rsb	r0, r5, #0
   2360c:	ldr	r4, [r8]
   23610:	bl	119f8 <strerror@plt>
   23614:	ldr	r2, [pc, #96]	; 2367c <ASN1_STRING_length@plt+0x11708>
   23618:	ldr	r3, [pc, #96]	; 23680 <ASN1_STRING_length@plt+0x1170c>
   2361c:	add	r2, pc, r2
   23620:	str	r2, [sp, #4]
   23624:	ldr	r2, [pc, #88]	; 23684 <ASN1_STRING_length@plt+0x11710>
   23628:	add	r3, pc, r3
   2362c:	str	r3, [sp]
   23630:	add	r2, pc, r2
   23634:	ldr	r3, [pc, #76]	; 23688 <ASN1_STRING_length@plt+0x11714>
   23638:	mov	r1, #3
   2363c:	str	r0, [sp, #8]
   23640:	mov	r0, r4
   23644:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23648:	ldr	r0, [sp, #20]
   2364c:	b	235d0 <ASN1_STRING_length@plt+0x1165c>
   23650:	adds	r2, r4, #0
   23654:	movne	r2, #1
   23658:	b	23580 <ASN1_STRING_length@plt+0x1160c>
   2365c:	bl	11d88 <__stack_chk_fail@plt>
   23660:	mov	r0, r8
   23664:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   23668:	mvn	r5, #11
   2366c:	ldr	r0, [sp, #20]
   23670:	b	235d0 <ASN1_STRING_length@plt+0x1165c>
   23674:	andeq	ip, r1, r4, lsr #18
   23678:	strdeq	r0, [r0], -r8
   2367c:			; <UNDEFINED> instruction: 0x0000b4b4
   23680:	andeq	fp, r0, r4, lsr #7
   23684:	andeq	fp, r0, r0, lsl #11
   23688:	andeq	r0, r0, fp, lsr r4
   2368c:	ldrb	ip, [r0, #56]	; 0x38
   23690:	push	{r4, r5, r6, r7, r8, r9, lr}
   23694:	mov	r7, r0
   23698:	tst	ip, #1
   2369c:	sub	sp, sp, #20
   236a0:	bne	23780 <ASN1_STRING_length@plt+0x1180c>
   236a4:	orr	ip, ip, #1
   236a8:	strb	ip, [r0, #56]	; 0x38
   236ac:	mov	r4, r1
   236b0:	mov	r8, r2
   236b4:	mov	r6, r3
   236b8:	bl	22938 <ASN1_STRING_length@plt+0x109c4>
   236bc:	cmp	r4, #0
   236c0:	mov	r5, r0
   236c4:	bne	23724 <ASN1_STRING_length@plt+0x117b0>
   236c8:	cmp	r0, #0
   236cc:	ldrne	r0, [r0, #8]
   236d0:	beq	237dc <ASN1_STRING_length@plt+0x11868>
   236d4:	mov	r1, r6
   236d8:	bl	234c8 <ASN1_STRING_length@plt+0x11554>
   236dc:	mov	r4, r5
   236e0:	subs	r9, r0, #0
   236e4:	blt	23710 <ASN1_STRING_length@plt+0x1179c>
   236e8:	ldr	r4, [r4]
   236ec:	cmp	r4, r5
   236f0:	beq	237e0 <ASN1_STRING_length@plt+0x1186c>
   236f4:	cmp	r4, #0
   236f8:	beq	237e0 <ASN1_STRING_length@plt+0x1186c>
   236fc:	ldr	r0, [r4, #8]
   23700:	mov	r1, r6
   23704:	bl	234c8 <ASN1_STRING_length@plt+0x11554>
   23708:	subs	r9, r0, #0
   2370c:	bge	236e8 <ASN1_STRING_length@plt+0x11774>
   23710:	mov	r0, r5
   23714:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   23718:	mov	r0, r9
   2371c:	add	sp, sp, #20
   23720:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23724:	ldrb	r3, [r7, #56]	; 0x38
   23728:	cmp	r0, #0
   2372c:	orr	r3, r3, #4
   23730:	strb	r3, [r7, #56]	; 0x38
   23734:	beq	237dc <ASN1_STRING_length@plt+0x11868>
   23738:	ldr	r0, [r0, #8]
   2373c:	ldr	r3, [r5]
   23740:	ldrb	r2, [r0, #56]	; 0x38
   23744:	cmp	r3, r5
   23748:	orr	r2, r2, #4
   2374c:	strb	r2, [r0, #56]	; 0x38
   23750:	bne	23774 <ASN1_STRING_length@plt+0x11800>
   23754:	b	236d4 <ASN1_STRING_length@plt+0x11760>
   23758:	ldr	r1, [r3, #8]
   2375c:	ldr	r3, [r3]
   23760:	ldrb	r2, [r1, #56]	; 0x38
   23764:	cmp	r3, r5
   23768:	orr	r2, r2, #4
   2376c:	strb	r2, [r1, #56]	; 0x38
   23770:	beq	236d4 <ASN1_STRING_length@plt+0x11760>
   23774:	cmp	r3, #0
   23778:	bne	23758 <ASN1_STRING_length@plt+0x117e4>
   2377c:	b	236d4 <ASN1_STRING_length@plt+0x11760>
   23780:	ldr	r0, [r0]
   23784:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23788:	cmp	r0, #6
   2378c:	movle	r9, #0
   23790:	ble	23718 <ASN1_STRING_length@plt+0x117a4>
   23794:	ldr	r2, [pc, #164]	; 23840 <ASN1_STRING_length@plt+0x118cc>
   23798:	ldr	r1, [r7, #8]
   2379c:	add	r2, pc, r2
   237a0:	ldr	r3, [pc, #156]	; 23844 <ASN1_STRING_length@plt+0x118d0>
   237a4:	str	r1, [sp, #8]
   237a8:	ldr	r0, [r7]
   237ac:	str	r2, [sp, #4]
   237b0:	ldr	r2, [pc, #144]	; 23848 <ASN1_STRING_length@plt+0x118d4>
   237b4:	add	r3, pc, r3
   237b8:	str	r3, [sp]
   237bc:	add	r2, pc, r2
   237c0:	ldr	r3, [pc, #132]	; 2384c <ASN1_STRING_length@plt+0x118d8>
   237c4:	mov	r1, #7
   237c8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   237cc:	mov	r9, #0
   237d0:	mov	r0, r9
   237d4:	add	sp, sp, #20
   237d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   237dc:	mov	r9, #0
   237e0:	cmp	r8, #0
   237e4:	beq	2381c <ASN1_STRING_length@plt+0x118a8>
   237e8:	mov	r0, r7
   237ec:	ldr	r4, [r6]
   237f0:	bl	2179c <ASN1_STRING_length@plt+0xf828>
   237f4:	mov	r1, r0
   237f8:	mov	r0, r4
   237fc:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   23800:	cmp	r0, #0
   23804:	beq	23830 <ASN1_STRING_length@plt+0x118bc>
   23808:	str	r0, [r6]
   2380c:	ldrb	r3, [r7, #56]	; 0x38
   23810:	orr	r3, r3, #2
   23814:	strb	r3, [r7, #56]	; 0x38
   23818:	b	23710 <ASN1_STRING_length@plt+0x1179c>
   2381c:	mov	r1, r6
   23820:	mov	r0, r7
   23824:	bl	234c8 <ASN1_STRING_length@plt+0x11554>
   23828:	mov	r9, r0
   2382c:	b	23710 <ASN1_STRING_length@plt+0x1179c>
   23830:	mov	r0, r7
   23834:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   23838:	mvn	r9, #11
   2383c:	b	23710 <ASN1_STRING_length@plt+0x1179c>
   23840:	andeq	fp, r0, r0, asr r3
   23844:	andeq	fp, r0, r4, lsr r2
   23848:	strdeq	fp, [r0], -r4
   2384c:	andeq	r0, r0, r8, ror #8
   23850:	push	{r4, r5, r6, lr}
   23854:	subs	r4, r0, #0
   23858:	beq	238d8 <ASN1_STRING_length@plt+0x11964>
   2385c:	ldrb	r3, [r4, #48]	; 0x30
   23860:	tst	r3, #8
   23864:	beq	23870 <ASN1_STRING_length@plt+0x118fc>
   23868:	ldr	r0, [r4, #28]
   2386c:	pop	{r4, r5, r6, pc}
   23870:	ldr	r0, [r4]
   23874:	bl	1d800 <ASN1_STRING_length@plt+0xb88c>
   23878:	ldr	r5, [r0, #16]
   2387c:	mov	r6, r0
   23880:	cmp	r5, #0
   23884:	beq	238b4 <ASN1_STRING_length@plt+0x11940>
   23888:	mov	r0, r5
   2388c:	bl	1dad0 <ASN1_STRING_length@plt+0xbb5c>
   23890:	mov	r2, #0
   23894:	ldr	r1, [r4, #8]
   23898:	bl	11e00 <fnmatch@plt>
   2389c:	cmp	r0, #0
   238a0:	beq	238bc <ASN1_STRING_length@plt+0x11948>
   238a4:	ldr	r5, [r5]
   238a8:	ldr	r3, [r6, #16]
   238ac:	cmp	r5, r3
   238b0:	bne	23880 <ASN1_STRING_length@plt+0x1190c>
   238b4:	ldr	r0, [r4, #28]
   238b8:	b	238c8 <ASN1_STRING_length@plt+0x11954>
   238bc:	mov	r0, r5
   238c0:	bl	1dac4 <ASN1_STRING_length@plt+0xbb50>
   238c4:	str	r0, [r4, #28]
   238c8:	ldrb	r3, [r4, #48]	; 0x30
   238cc:	orr	r3, r3, #8
   238d0:	strb	r3, [r4, #48]	; 0x30
   238d4:	pop	{r4, r5, r6, pc}
   238d8:	mov	r0, r4
   238dc:	pop	{r4, r5, r6, pc}
   238e0:	ldrb	r3, [r0, #48]	; 0x30
   238e4:	str	r1, [r0, #28]
   238e8:	orr	r3, r3, #8
   238ec:	strb	r3, [r0, #48]	; 0x30
   238f0:	bx	lr
   238f4:	ldr	r2, [pc, #648]	; 23b84 <ASN1_STRING_length@plt+0x11c10>
   238f8:	ldr	ip, [pc, #648]	; 23b88 <ASN1_STRING_length@plt+0x11c14>
   238fc:	add	r2, pc, r2
   23900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23904:	sub	sp, sp, #4096	; 0x1000
   23908:	ldr	ip, [r2, ip]
   2390c:	sub	sp, sp, #60	; 0x3c
   23910:	cmp	r0, #0
   23914:	clz	r3, r1
   23918:	lsr	r3, r3, #5
   2391c:	add	r2, sp, #4096	; 0x1000
   23920:	movne	r8, r3
   23924:	moveq	r8, #1
   23928:	ldr	r3, [ip]
   2392c:	add	r2, r2, #52	; 0x34
   23930:	cmp	r8, #0
   23934:	str	ip, [sp, #24]
   23938:	str	r3, [r2]
   2393c:	str	r1, [sp, #28]
   23940:	bne	23b78 <ASN1_STRING_length@plt+0x11c04>
   23944:	mov	sl, r0
   23948:	ldr	r1, [pc, #572]	; 23b8c <ASN1_STRING_length@plt+0x11c18>
   2394c:	ldr	r0, [pc, #572]	; 23b90 <ASN1_STRING_length@plt+0x11c1c>
   23950:	add	r1, pc, r1
   23954:	add	r0, pc, r0
   23958:	bl	11c68 <fopen64@plt>
   2395c:	subs	r6, r0, #0
   23960:	beq	23b18 <ASN1_STRING_length@plt+0x11ba4>
   23964:	ldr	r3, [pc, #552]	; 23b94 <ASN1_STRING_length@plt+0x11c20>
   23968:	ldr	fp, [pc, #552]	; 23b98 <ASN1_STRING_length@plt+0x11c24>
   2396c:	add	r3, pc, r3
   23970:	str	r3, [sp, #32]
   23974:	ldr	r3, [pc, #544]	; 23b9c <ASN1_STRING_length@plt+0x11c28>
   23978:	add	fp, pc, fp
   2397c:	add	r5, sp, #56	; 0x38
   23980:	add	r4, sp, #52	; 0x34
   23984:	add	r3, pc, r3
   23988:	str	r3, [sp, #36]	; 0x24
   2398c:	mov	r2, r6
   23990:	mov	r1, #4096	; 0x1000
   23994:	mov	r0, r4
   23998:	bl	11a94 <fgets@plt>
   2399c:	cmp	r0, #0
   239a0:	beq	23aac <ASN1_STRING_length@plt+0x11b38>
   239a4:	mov	r0, r4
   239a8:	bl	11c44 <strlen@plt>
   239ac:	sub	r2, r5, #8
   239b0:	mov	r1, fp
   239b4:	mov	r7, r0
   239b8:	mov	r0, r4
   239bc:	bl	11dd0 <strtok_r@plt>
   239c0:	sub	r2, r5, #12
   239c4:	mov	r1, r0
   239c8:	mov	r9, r0
   239cc:	mov	r0, sl
   239d0:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   239d4:	subs	r3, r0, #0
   239d8:	blt	23a38 <ASN1_STRING_length@plt+0x11ac4>
   239dc:	mov	r0, r8
   239e0:	ldr	r1, [r5, #-12]
   239e4:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   239e8:	cmp	r0, #0
   239ec:	movne	r8, r0
   239f0:	beq	23a90 <ASN1_STRING_length@plt+0x11b1c>
   239f4:	add	r7, r5, r7
   239f8:	ldrb	r3, [r7, #-5]
   239fc:	cmp	r3, #10
   23a00:	beq	2398c <ASN1_STRING_length@plt+0x11a18>
   23a04:	mov	r2, r6
   23a08:	mov	r1, #4096	; 0x1000
   23a0c:	mov	r0, r4
   23a10:	bl	11a94 <fgets@plt>
   23a14:	cmp	r0, #0
   23a18:	beq	2398c <ASN1_STRING_length@plt+0x11a18>
   23a1c:	mov	r0, r4
   23a20:	bl	11c44 <strlen@plt>
   23a24:	add	r0, r5, r0
   23a28:	ldrb	r3, [r0, #-5]
   23a2c:	cmp	r3, #10
   23a30:	bne	23a04 <ASN1_STRING_length@plt+0x11a90>
   23a34:	b	2398c <ASN1_STRING_length@plt+0x11a18>
   23a38:	mov	r0, sl
   23a3c:	str	r3, [sp, #20]
   23a40:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23a44:	ldr	r3, [sp, #20]
   23a48:	cmp	r0, #2
   23a4c:	ble	239f4 <ASN1_STRING_length@plt+0x11a80>
   23a50:	rsb	r0, r3, #0
   23a54:	bl	119f8 <strerror@plt>
   23a58:	ldr	r2, [pc, #320]	; 23ba0 <ASN1_STRING_length@plt+0x11c2c>
   23a5c:	ldr	r3, [pc, #320]	; 23ba4 <ASN1_STRING_length@plt+0x11c30>
   23a60:	add	r2, pc, r2
   23a64:	add	r3, pc, r3
   23a68:	stmib	sp, {r2, r9}
   23a6c:	ldr	r2, [pc, #308]	; 23ba8 <ASN1_STRING_length@plt+0x11c34>
   23a70:	str	r3, [sp]
   23a74:	add	r2, pc, r2
   23a78:	ldr	r3, [pc, #300]	; 23bac <ASN1_STRING_length@plt+0x11c38>
   23a7c:	mov	r1, #3
   23a80:	str	r0, [sp, #12]
   23a84:	mov	r0, sl
   23a88:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23a8c:	b	239f4 <ASN1_STRING_length@plt+0x11a80>
   23a90:	mov	r0, sl
   23a94:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23a98:	cmp	r0, #2
   23a9c:	bgt	23aec <ASN1_STRING_length@plt+0x11b78>
   23aa0:	ldr	r0, [r5, #-12]
   23aa4:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   23aa8:	b	239f4 <ASN1_STRING_length@plt+0x11a80>
   23aac:	mov	r7, r0
   23ab0:	mov	r0, r6
   23ab4:	bl	11a88 <fclose@plt>
   23ab8:	ldr	r3, [sp, #28]
   23abc:	str	r8, [r3]
   23ac0:	add	r3, sp, #4096	; 0x1000
   23ac4:	add	r3, r3, #52	; 0x34
   23ac8:	ldr	r2, [r3]
   23acc:	ldr	r3, [sp, #24]
   23ad0:	mov	r0, r7
   23ad4:	ldr	r3, [r3]
   23ad8:	cmp	r2, r3
   23adc:	bne	23b80 <ASN1_STRING_length@plt+0x11c0c>
   23ae0:	add	sp, sp, #4096	; 0x1000
   23ae4:	add	sp, sp, #60	; 0x3c
   23ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23aec:	ldr	r3, [pc, #188]	; 23bb0 <ASN1_STRING_length@plt+0x11c3c>
   23af0:	ldr	r2, [sp, #36]	; 0x24
   23af4:	add	r3, pc, r3
   23af8:	str	r2, [sp, #4]
   23afc:	str	r3, [sp]
   23b00:	ldr	r2, [sp, #32]
   23b04:	ldr	r3, [pc, #168]	; 23bb4 <ASN1_STRING_length@plt+0x11c40>
   23b08:	mov	r1, #3
   23b0c:	mov	r0, sl
   23b10:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23b14:	b	23aa0 <ASN1_STRING_length@plt+0x11b2c>
   23b18:	bl	11f38 <__errno_location@plt>
   23b1c:	mov	r4, r0
   23b20:	mov	r0, sl
   23b24:	ldr	r7, [r4]
   23b28:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23b2c:	rsb	r7, r7, #0
   23b30:	cmp	r0, #2
   23b34:	ble	23ac0 <ASN1_STRING_length@plt+0x11b4c>
   23b38:	ldr	r0, [r4]
   23b3c:	bl	119f8 <strerror@plt>
   23b40:	ldr	r2, [pc, #112]	; 23bb8 <ASN1_STRING_length@plt+0x11c44>
   23b44:	ldr	r3, [pc, #112]	; 23bbc <ASN1_STRING_length@plt+0x11c48>
   23b48:	add	r2, pc, r2
   23b4c:	str	r2, [sp, #4]
   23b50:	ldr	r2, [pc, #104]	; 23bc0 <ASN1_STRING_length@plt+0x11c4c>
   23b54:	add	r3, pc, r3
   23b58:	str	r3, [sp]
   23b5c:	add	r2, pc, r2
   23b60:	ldr	r3, [pc, #92]	; 23bc4 <ASN1_STRING_length@plt+0x11c50>
   23b64:	mov	r1, #3
   23b68:	str	r0, [sp, #8]
   23b6c:	mov	r0, sl
   23b70:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   23b74:	b	23ac0 <ASN1_STRING_length@plt+0x11b4c>
   23b78:	mvn	r7, #1
   23b7c:	b	23ac0 <ASN1_STRING_length@plt+0x11b4c>
   23b80:	bl	11d88 <__stack_chk_fail@plt>
   23b84:	strdeq	ip, [r1], -r8
   23b88:	strdeq	r0, [r0], -r8
   23b8c:	andeq	sl, r0, r4, lsr #2
   23b90:			; <UNDEFINED> instruction: 0x0000b4bc
   23b94:	andeq	fp, r0, r4, asr #4
   23b98:	muleq	r0, ip, r3
   23b9c:	andeq	r8, r0, r8, asr r9
   23ba0:	andeq	fp, r0, r4, ror #7
   23ba4:	andeq	sl, r0, ip, ror #31
   23ba8:	andeq	fp, r0, ip, lsr r1
   23bac:	andeq	r0, r0, r7, lsl #13
   23bb0:	andeq	sl, r0, ip, asr pc
   23bb4:	andeq	r0, r0, pc, lsl #13
   23bb8:	ldrdeq	fp, [r0], -r8
   23bbc:	strdeq	sl, [r0], -ip
   23bc0:	andeq	fp, r0, r4, asr r0
   23bc4:	andeq	r0, r0, r9, ror r6
   23bc8:	subs	r3, r0, #0
   23bcc:	beq	23bf8 <ASN1_STRING_length@plt+0x11c84>
   23bd0:	push	{r4, lr}
   23bd4:	mov	r4, r3
   23bd8:	bl	21758 <ASN1_STRING_length@plt+0xf7e4>
   23bdc:	cmp	r0, #0
   23be0:	beq	23bec <ASN1_STRING_length@plt+0x11c78>
   23be4:	mov	r0, #0
   23be8:	pop	{r4, pc}
   23bec:	mov	r0, r4
   23bf0:	pop	{r4, lr}
   23bf4:	b	2140c <ASN1_STRING_length@plt+0xf498>
   23bf8:	mvn	r0, #1
   23bfc:	bx	lr
   23c00:	ldr	ip, [pc, #2088]	; 24430 <ASN1_STRING_length@plt+0x124bc>
   23c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c08:	add	ip, pc, ip
   23c0c:	ldr	lr, [pc, #2080]	; 24434 <ASN1_STRING_length@plt+0x124c0>
   23c10:	sub	sp, sp, #92	; 0x5c
   23c14:	subs	r5, r0, #0
   23c18:	str	r5, [sp, #28]
   23c1c:	ldr	lr, [ip, lr]
   23c20:	str	r3, [sp, #56]	; 0x38
   23c24:	ldr	r3, [sp, #128]	; 0x80
   23c28:	str	r2, [sp, #36]	; 0x24
   23c2c:	str	r3, [sp, #60]	; 0x3c
   23c30:	ldr	r2, [lr]
   23c34:	ldr	r3, [sp, #132]	; 0x84
   23c38:	mov	r4, #0
   23c3c:	str	lr, [sp, #52]	; 0x34
   23c40:	str	r1, [sp, #24]
   23c44:	str	r2, [sp, #84]	; 0x54
   23c48:	str	r4, [sp, #76]	; 0x4c
   23c4c:	str	r3, [sp, #32]
   23c50:	beq	24380 <ASN1_STRING_length@plt+0x1240c>
   23c54:	ands	r3, r1, #8
   23c58:	str	r3, [sp, #40]	; 0x28
   23c5c:	beq	2413c <ASN1_STRING_length@plt+0x121c8>
   23c60:	ldr	r3, [sp, #28]
   23c64:	ldr	r3, [r3, #32]
   23c68:	cmp	r3, #0
   23c6c:	beq	23e48 <ASN1_STRING_length@plt+0x11ed4>
   23c70:	ldr	r3, [sp, #24]
   23c74:	ands	r8, r3, #262144	; 0x40000
   23c78:	beq	23e48 <ASN1_STRING_length@plt+0x11ed4>
   23c7c:	ldr	r1, [sp, #28]
   23c80:	ldr	r0, [r1], #8
   23c84:	bl	213b0 <ASN1_STRING_length@plt+0xf43c>
   23c88:	cmp	r0, #0
   23c8c:	bne	23e28 <ASN1_STRING_length@plt+0x11eb4>
   23c90:	ldr	r3, [sp, #24]
   23c94:	ldr	r4, [sp, #76]	; 0x4c
   23c98:	lsr	r5, r3, #2
   23c9c:	cmp	r4, #0
   23ca0:	and	r5, r5, #1
   23ca4:	bne	243d8 <ASN1_STRING_length@plt+0x12464>
   23ca8:	ldr	r6, [sp, #28]
   23cac:	mov	r1, r4
   23cb0:	ldr	r0, [r6]
   23cb4:	bl	1d298 <ASN1_STRING_length@plt+0xb324>
   23cb8:	mov	r1, r4
   23cbc:	ldr	r0, [r6]
   23cc0:	bl	1d31c <ASN1_STRING_length@plt+0xb3a8>
   23cc4:	mov	r2, r5
   23cc8:	add	r3, sp, #76	; 0x4c
   23ccc:	mov	r1, #1
   23cd0:	mov	r0, r6
   23cd4:	bl	2368c <ASN1_STRING_length@plt+0x11718>
   23cd8:	subs	r8, r0, #0
   23cdc:	blt	24188 <ASN1_STRING_length@plt+0x12214>
   23ce0:	ldr	r3, [sp, #24]
   23ce4:	ldr	fp, [sp, #76]	; 0x4c
   23ce8:	tst	r3, #65536	; 0x10000
   23cec:	bne	241e4 <ASN1_STRING_length@plt+0x12270>
   23cf0:	cmp	fp, #0
   23cf4:	beq	243cc <ASN1_STRING_length@plt+0x12458>
   23cf8:	ldr	r3, [pc, #1848]	; 24438 <ASN1_STRING_length@plt+0x124c4>
   23cfc:	str	fp, [sp, #20]
   23d00:	add	r3, pc, r3
   23d04:	str	r3, [sp, #44]	; 0x2c
   23d08:	ldr	r3, [sp, #20]
   23d0c:	ldr	sl, [r3, #8]
   23d10:	mov	r0, sl
   23d14:	bl	2301c <ASN1_STRING_length@plt+0x110a8>
   23d18:	mov	r4, r0
   23d1c:	mov	r0, sl
   23d20:	bl	232a0 <ASN1_STRING_length@plt+0x1132c>
   23d24:	ldr	r3, [sp, #40]	; 0x28
   23d28:	cmp	r3, #0
   23d2c:	mov	r6, r0
   23d30:	beq	23f30 <ASN1_STRING_length@plt+0x11fbc>
   23d34:	ldr	r3, [sp, #28]
   23d38:	cmp	r3, sl
   23d3c:	beq	23f64 <ASN1_STRING_length@plt+0x11ff0>
   23d40:	cmp	r4, #0
   23d44:	beq	23f98 <ASN1_STRING_length@plt+0x12024>
   23d48:	mov	r0, r4
   23d4c:	bl	11c44 <strlen@plt>
   23d50:	mov	r5, r0
   23d54:	cmp	r5, #0
   23d58:	beq	23f98 <ASN1_STRING_length@plt+0x12024>
   23d5c:	add	r0, r5, #2
   23d60:	bl	11d64 <malloc@plt>
   23d64:	mov	r9, #0
   23d68:	mov	r7, r9
   23d6c:	mov	fp, r0
   23d70:	mov	r1, r4
   23d74:	mov	r2, r5
   23d78:	mov	r0, fp
   23d7c:	bl	11c5c <memcpy@plt>
   23d80:	add	r4, r5, #1
   23d84:	mov	r3, #32
   23d88:	cmp	r9, #0
   23d8c:	strb	r3, [fp, r5]
   23d90:	add	r5, r4, r7
   23d94:	bne	23f1c <ASN1_STRING_length@plt+0x11fa8>
   23d98:	mov	r3, #0
   23d9c:	cmp	r6, #0
   23da0:	strb	r3, [fp, r5]
   23da4:	beq	23e60 <ASN1_STRING_length@plt+0x11eec>
   23da8:	ldrb	r3, [sl, #56]	; 0x38
   23dac:	tst	r3, #2
   23db0:	bne	23e60 <ASN1_STRING_length@plt+0x11eec>
   23db4:	ldr	r3, [sp, #32]
   23db8:	cmp	r3, #0
   23dbc:	beq	23ddc <ASN1_STRING_length@plt+0x11e68>
   23dc0:	cmp	fp, #0
   23dc4:	beq	24228 <ASN1_STRING_length@plt+0x122b4>
   23dc8:	mov	r2, fp
   23dcc:	mov	r1, #1
   23dd0:	mov	r0, sl
   23dd4:	ldr	r3, [sp, #32]
   23dd8:	blx	r3
   23ddc:	ldr	r3, [sp, #24]
   23de0:	ands	r3, r3, #16
   23de4:	mov	r7, r3
   23de8:	beq	23ff0 <ASN1_STRING_length@plt+0x1207c>
   23dec:	mov	r0, fp
   23df0:	bl	11ba8 <free@plt>
   23df4:	ldrb	r3, [sl, #56]	; 0x38
   23df8:	tst	r3, #4
   23dfc:	bne	23e04 <ASN1_STRING_length@plt+0x11e90>
   23e00:	mov	r8, #0
   23e04:	ldr	r3, [sp, #20]
   23e08:	ldr	r0, [sp, #76]	; 0x4c
   23e0c:	ldr	r3, [r3]
   23e10:	cmp	r3, r0
   23e14:	str	r3, [sp, #20]
   23e18:	beq	23e24 <ASN1_STRING_length@plt+0x11eb0>
   23e1c:	cmp	r3, #0
   23e20:	bne	23d08 <ASN1_STRING_length@plt+0x11d94>
   23e24:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   23e28:	ldr	r3, [sp, #52]	; 0x34
   23e2c:	ldr	r2, [sp, #84]	; 0x54
   23e30:	mov	r0, r8
   23e34:	ldr	r3, [r3]
   23e38:	cmp	r2, r3
   23e3c:	bne	243d4 <ASN1_STRING_length@plt+0x12460>
   23e40:	add	sp, sp, #92	; 0x5c
   23e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e48:	ldr	r3, [sp, #24]
   23e4c:	ands	r8, r3, #65536	; 0x10000
   23e50:	bne	23c7c <ASN1_STRING_length@plt+0x11d08>
   23e54:	ands	r8, r3, #131072	; 0x20000
   23e58:	bne	23c7c <ASN1_STRING_length@plt+0x11d08>
   23e5c:	b	23c90 <ASN1_STRING_length@plt+0x11d1c>
   23e60:	ldr	r3, [sp, #32]
   23e64:	cmp	r3, #0
   23e68:	beq	23e8c <ASN1_STRING_length@plt+0x11f18>
   23e6c:	ldr	r2, [pc, #1480]	; 2443c <ASN1_STRING_length@plt+0x124c8>
   23e70:	cmp	fp, #0
   23e74:	add	r2, pc, r2
   23e78:	movne	r2, fp
   23e7c:	mov	r1, #0
   23e80:	mov	r0, sl
   23e84:	ldr	r3, [sp, #32]
   23e88:	blx	r3
   23e8c:	ldr	r3, [sp, #24]
   23e90:	tst	r3, #16
   23e94:	bne	23dec <ASN1_STRING_length@plt+0x11e78>
   23e98:	mov	r1, r3
   23e9c:	mov	r2, fp
   23ea0:	mov	r0, sl
   23ea4:	bl	22c44 <ASN1_STRING_length@plt+0x10cd0>
   23ea8:	ldr	r3, [sp, #28]
   23eac:	cmp	r3, sl
   23eb0:	cmneq	r0, #17
   23eb4:	mov	r8, r0
   23eb8:	moveq	r4, #1
   23ebc:	movne	r4, #0
   23ec0:	mov	r0, fp
   23ec4:	bl	11ba8 <free@plt>
   23ec8:	cmp	r4, #0
   23ecc:	beq	2411c <ASN1_STRING_length@plt+0x121a8>
   23ed0:	ldr	r3, [sp, #24]
   23ed4:	tst	r3, #32
   23ed8:	beq	23e00 <ASN1_STRING_length@plt+0x11e8c>
   23edc:	ldr	r0, [sp, #76]	; 0x4c
   23ee0:	mvn	r8, #16
   23ee4:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   23ee8:	b	23e28 <ASN1_STRING_length@plt+0x11eb4>
   23eec:	ldr	r3, [sp, #36]	; 0x24
   23ef0:	cmp	r3, #0
   23ef4:	beq	23f98 <ASN1_STRING_length@plt+0x12024>
   23ef8:	ldr	r0, [sp, #36]	; 0x24
   23efc:	bl	11c44 <strlen@plt>
   23f00:	subs	r5, r0, #0
   23f04:	beq	23f98 <ASN1_STRING_length@plt+0x12024>
   23f08:	add	r0, r5, #2
   23f0c:	bl	11d64 <malloc@plt>
   23f10:	ldr	r9, [sp, #36]	; 0x24
   23f14:	mov	r7, r5
   23f18:	mov	fp, r0
   23f1c:	mov	r2, r7
   23f20:	mov	r1, r9
   23f24:	add	r0, fp, r4
   23f28:	bl	11c5c <memcpy@plt>
   23f2c:	b	23d98 <ASN1_STRING_length@plt+0x11e24>
   23f30:	mov	r0, sl
   23f34:	bl	23bc8 <ASN1_STRING_length@plt+0x11c54>
   23f38:	cmp	r0, #1
   23f3c:	bhi	23d34 <ASN1_STRING_length@plt+0x11dc0>
   23f40:	ldr	r3, [sp, #28]
   23f44:	ldr	r0, [r3]
   23f48:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   23f4c:	cmp	r0, #6
   23f50:	bgt	241a4 <ASN1_STRING_length@plt+0x12230>
   23f54:	ldr	r3, [sp, #28]
   23f58:	cmp	r3, sl
   23f5c:	beq	23ed0 <ASN1_STRING_length@plt+0x11f5c>
   23f60:	b	23e00 <ASN1_STRING_length@plt+0x11e8c>
   23f64:	cmp	r4, #0
   23f68:	beq	23eec <ASN1_STRING_length@plt+0x11f78>
   23f6c:	mov	r0, r4
   23f70:	bl	11c44 <strlen@plt>
   23f74:	ldr	r3, [sp, #36]	; 0x24
   23f78:	cmp	r3, #0
   23f7c:	mov	r5, r0
   23f80:	beq	23d54 <ASN1_STRING_length@plt+0x11de0>
   23f84:	ldr	r0, [sp, #36]	; 0x24
   23f88:	bl	11c44 <strlen@plt>
   23f8c:	orrs	r3, r5, r0
   23f90:	mov	r7, r0
   23f94:	bne	243f8 <ASN1_STRING_length@plt+0x12484>
   23f98:	cmp	r6, #0
   23f9c:	beq	23fd0 <ASN1_STRING_length@plt+0x1205c>
   23fa0:	ldrb	r3, [sl, #56]	; 0x38
   23fa4:	lsr	r3, r3, #1
   23fa8:	ands	r3, r3, #1
   23fac:	bne	23fd0 <ASN1_STRING_length@plt+0x1205c>
   23fb0:	ldr	r2, [sp, #32]
   23fb4:	cmp	r2, #0
   23fb8:	moveq	fp, r2
   23fbc:	beq	23ddc <ASN1_STRING_length@plt+0x11e68>
   23fc0:	ldr	r2, [pc, #1144]	; 24440 <ASN1_STRING_length@plt+0x124cc>
   23fc4:	mov	fp, r3
   23fc8:	add	r2, pc, r2
   23fcc:	b	23dcc <ASN1_STRING_length@plt+0x11e58>
   23fd0:	ldr	r3, [sp, #32]
   23fd4:	cmp	r3, #0
   23fd8:	moveq	fp, r3
   23fdc:	beq	23e8c <ASN1_STRING_length@plt+0x11f18>
   23fe0:	ldr	r2, [pc, #1116]	; 24444 <ASN1_STRING_length@plt+0x124d0>
   23fe4:	mov	fp, #0
   23fe8:	add	r2, pc, r2
   23fec:	b	23e7c <ASN1_STRING_length@plt+0x11f08>
   23ff0:	mov	r0, sl
   23ff4:	bl	232a0 <ASN1_STRING_length@plt+0x1132c>
   23ff8:	subs	r4, r0, #0
   23ffc:	beq	24410 <ASN1_STRING_length@plt+0x1249c>
   24000:	cmp	fp, #0
   24004:	beq	24194 <ASN1_STRING_length@plt+0x12220>
   24008:	mov	r0, fp
   2400c:	bl	11c44 <strlen@plt>
   24010:	str	fp, [sp, #48]	; 0x30
   24014:	mov	r7, r0
   24018:	mov	r0, r4
   2401c:	bl	11c44 <strlen@plt>
   24020:	add	r1, r0, #1
   24024:	mov	r6, r0
   24028:	mov	r0, r4
   2402c:	bl	1b424 <ASN1_STRING_length@plt+0x94b0>
   24030:	subs	r5, r0, #0
   24034:	beq	24168 <ASN1_STRING_length@plt+0x121f4>
   24038:	sub	r2, r7, #13
   2403c:	str	sl, [sp, #64]	; 0x40
   24040:	str	fp, [sp, #68]	; 0x44
   24044:	mov	sl, r7
   24048:	mov	fp, r2
   2404c:	b	240b8 <ASN1_STRING_length@plt+0x12144>
   24050:	sub	r9, r6, #13
   24054:	add	r6, r6, fp
   24058:	add	r0, r6, #1
   2405c:	bl	11d64 <malloc@plt>
   24060:	sub	r4, r7, r5
   24064:	sub	r9, r9, r4
   24068:	add	r7, r7, #13
   2406c:	subs	r8, r0, #0
   24070:	beq	2415c <ASN1_STRING_length@plt+0x121e8>
   24074:	mov	r1, r5
   24078:	mov	r2, r4
   2407c:	bl	11c5c <memcpy@plt>
   24080:	mov	r2, sl
   24084:	ldr	r1, [sp, #48]	; 0x30
   24088:	add	r0, r8, r4
   2408c:	bl	11c5c <memcpy@plt>
   24090:	add	r0, sl, r4
   24094:	mov	r2, r9
   24098:	mov	r1, r7
   2409c:	add	r0, r8, r0
   240a0:	bl	11c5c <memcpy@plt>
   240a4:	mov	r3, #0
   240a8:	mov	r0, r5
   240ac:	strb	r3, [r8, r6]
   240b0:	bl	11ba8 <free@plt>
   240b4:	mov	r5, r8
   240b8:	ldr	r1, [sp, #44]	; 0x2c
   240bc:	mov	r0, r5
   240c0:	bl	11cf8 <strstr@plt>
   240c4:	subs	r7, r0, #0
   240c8:	bne	24050 <ASN1_STRING_length@plt+0x120dc>
   240cc:	ldrd	sl, [sp, #64]	; 0x40
   240d0:	ldr	r3, [sp, #28]
   240d4:	sub	r4, r3, sl
   240d8:	ldr	r3, [sp, #56]	; 0x38
   240dc:	clz	r4, r4
   240e0:	cmp	r3, #0
   240e4:	lsr	r4, r4, #5
   240e8:	beq	24234 <ASN1_STRING_length@plt+0x122c0>
   240ec:	ldr	r2, [sp, #60]	; 0x3c
   240f0:	mov	r1, r5
   240f4:	mov	r0, sl
   240f8:	blx	r3
   240fc:	cmn	r0, #17
   24100:	movne	r3, #0
   24104:	moveq	r3, #1
   24108:	mov	r8, r0
   2410c:	and	r4, r4, r3
   24110:	mov	r0, r5
   24114:	bl	11ba8 <free@plt>
   24118:	b	23ec0 <ASN1_STRING_length@plt+0x11f4c>
   2411c:	cmn	r8, #17
   24120:	beq	23e00 <ASN1_STRING_length@plt+0x11e8c>
   24124:	ldrb	r3, [sl, #56]	; 0x38
   24128:	tst	r3, #4
   2412c:	beq	23e00 <ASN1_STRING_length@plt+0x11e8c>
   24130:	cmp	r8, #0
   24134:	bge	23e04 <ASN1_STRING_length@plt+0x11e90>
   24138:	b	24180 <ASN1_STRING_length@plt+0x1220c>
   2413c:	bl	23bc8 <ASN1_STRING_length@plt+0x11c54>
   24140:	cmp	r0, #1
   24144:	bhi	23c60 <ASN1_STRING_length@plt+0x11cec>
   24148:	ldr	r3, [sp, #24]
   2414c:	tst	r3, #32
   24150:	mvnne	r8, #16
   24154:	moveq	r8, r4
   24158:	b	23e28 <ASN1_STRING_length@plt+0x11eb4>
   2415c:	mov	r0, r5
   24160:	ldrd	sl, [sp, #64]	; 0x40
   24164:	bl	11ba8 <free@plt>
   24168:	mov	r0, fp
   2416c:	bl	11ba8 <free@plt>
   24170:	ldrb	r3, [sl, #56]	; 0x38
   24174:	tst	r3, #4
   24178:	beq	23e00 <ASN1_STRING_length@plt+0x11e8c>
   2417c:	mvn	r8, #11
   24180:	ldr	r0, [sp, #76]	; 0x4c
   24184:	b	23e24 <ASN1_STRING_length@plt+0x11eb0>
   24188:	ldr	r0, [sp, #76]	; 0x4c
   2418c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   24190:	b	23e28 <ASN1_STRING_length@plt+0x11eb4>
   24194:	ldr	r3, [pc, #684]	; 24448 <ASN1_STRING_length@plt+0x124d4>
   24198:	add	r3, pc, r3
   2419c:	str	r3, [sp, #48]	; 0x30
   241a0:	b	24018 <ASN1_STRING_length@plt+0x120a4>
   241a4:	ldr	r2, [pc, #672]	; 2444c <ASN1_STRING_length@plt+0x124d8>
   241a8:	ldr	r1, [sl, #8]
   241ac:	add	r2, pc, r2
   241b0:	str	r2, [sp, #4]
   241b4:	ldr	r3, [pc, #660]	; 24450 <ASN1_STRING_length@plt+0x124dc>
   241b8:	ldr	r2, [sp, #28]
   241bc:	add	r3, pc, r3
   241c0:	str	r1, [sp, #8]
   241c4:	str	r3, [sp]
   241c8:	ldr	r0, [r2]
   241cc:	ldr	r2, [pc, #640]	; 24454 <ASN1_STRING_length@plt+0x124e0>
   241d0:	ldr	r3, [pc, #640]	; 24458 <ASN1_STRING_length@plt+0x124e4>
   241d4:	add	r2, pc, r2
   241d8:	mov	r1, #7
   241dc:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   241e0:	b	23f54 <ASN1_STRING_length@plt+0x11fe0>
   241e4:	ldr	r0, [sp, #28]
   241e8:	mov	r2, fp
   241ec:	add	r3, sp, #80	; 0x50
   241f0:	mov	r1, #1
   241f4:	ldr	r0, [r0]
   241f8:	str	r4, [sp, #80]	; 0x50
   241fc:	bl	22f34 <ASN1_STRING_length@plt+0x10fc0>
   24200:	subs	r8, r0, #0
   24204:	blt	23e28 <ASN1_STRING_length@plt+0x11eb4>
   24208:	ldr	r0, [sp, #76]	; 0x4c
   2420c:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   24210:	ldr	fp, [sp, #80]	; 0x50
   24214:	cmp	fp, #0
   24218:	strne	fp, [sp, #76]	; 0x4c
   2421c:	moveq	r8, #65536	; 0x10000
   24220:	bne	23cf8 <ASN1_STRING_length@plt+0x11d84>
   24224:	b	23e28 <ASN1_STRING_length@plt+0x11eb4>
   24228:	ldr	r2, [pc, #556]	; 2445c <ASN1_STRING_length@plt+0x124e8>
   2422c:	add	r2, pc, r2
   24230:	b	23dcc <ASN1_STRING_length@plt+0x11e58>
   24234:	mov	r0, sl
   24238:	bl	22a64 <ASN1_STRING_length@plt+0x10af0>
   2423c:	mov	r7, r0
   24240:	ldr	r0, [sl]
   24244:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24248:	cmp	r0, #6
   2424c:	bgt	242a4 <ASN1_STRING_length@plt+0x12330>
   24250:	ldr	r6, [pc, #520]	; 24460 <ASN1_STRING_length@plt+0x124ec>
   24254:	mov	r2, #1
   24258:	add	r6, pc, r6
   2425c:	mov	r1, r7
   24260:	mov	r0, r6
   24264:	bl	11f08 <setenv@plt>
   24268:	mov	r0, r5
   2426c:	bl	11ab8 <system@plt>
   24270:	mov	r8, r0
   24274:	mov	r0, r6
   24278:	bl	11a1c <unsetenv@plt>
   2427c:	cmn	r8, #1
   24280:	beq	242e8 <ASN1_STRING_length@plt+0x12374>
   24284:	asr	r6, r8, #8
   24288:	ands	r6, r6, #255	; 0xff
   2428c:	bne	24318 <ASN1_STRING_length@plt+0x123a4>
   24290:	cmn	r8, #17
   24294:	movne	r3, #0
   24298:	moveq	r3, #1
   2429c:	and	r4, r4, r3
   242a0:	b	24110 <ASN1_STRING_length@plt+0x1219c>
   242a4:	ldr	r2, [pc, #440]	; 24464 <ASN1_STRING_length@plt+0x124f0>
   242a8:	ldr	r1, [pc, #440]	; 24468 <ASN1_STRING_length@plt+0x124f4>
   242ac:	add	r2, pc, r2
   242b0:	ldr	r3, [pc, #436]	; 2446c <ASN1_STRING_length@plt+0x124f8>
   242b4:	ldr	r0, [sl]
   242b8:	str	r2, [sp, #4]
   242bc:	ldr	r2, [pc, #428]	; 24470 <ASN1_STRING_length@plt+0x124fc>
   242c0:	add	r1, pc, r1
   242c4:	add	r3, pc, r3
   242c8:	str	r1, [sp, #8]
   242cc:	str	r3, [sp]
   242d0:	str	r5, [sp, #12]
   242d4:	ldr	r3, [pc, #408]	; 24474 <ASN1_STRING_length@plt+0x12500>
   242d8:	add	r2, pc, r2
   242dc:	mov	r1, #7
   242e0:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   242e4:	b	24250 <ASN1_STRING_length@plt+0x122dc>
   242e8:	ldr	r0, [sl]
   242ec:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   242f0:	cmp	r0, #2
   242f4:	bgt	24388 <ASN1_STRING_length@plt+0x12414>
   242f8:	mov	r0, r5
   242fc:	bl	11ba8 <free@plt>
   24300:	mov	r0, fp
   24304:	bl	11ba8 <free@plt>
   24308:	ldrb	r3, [sl, #56]	; 0x38
   2430c:	tst	r3, #4
   24310:	bne	24180 <ASN1_STRING_length@plt+0x1220c>
   24314:	b	23e00 <ASN1_STRING_length@plt+0x11e8c>
   24318:	ldr	r0, [sl]
   2431c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24320:	cmp	r0, #2
   24324:	bgt	2433c <ASN1_STRING_length@plt+0x123c8>
   24328:	cmp	r6, #17
   2432c:	movne	r4, #0
   24330:	andeq	r4, r4, #1
   24334:	rsb	r8, r6, #0
   24338:	b	24110 <ASN1_STRING_length@plt+0x1219c>
   2433c:	ldr	r2, [pc, #308]	; 24478 <ASN1_STRING_length@plt+0x12504>
   24340:	ldr	r1, [pc, #308]	; 2447c <ASN1_STRING_length@plt+0x12508>
   24344:	add	r2, pc, r2
   24348:	ldr	r3, [pc, #304]	; 24480 <ASN1_STRING_length@plt+0x1250c>
   2434c:	ldr	r0, [sl]
   24350:	str	r2, [sp, #4]
   24354:	ldr	r2, [pc, #296]	; 24484 <ASN1_STRING_length@plt+0x12510>
   24358:	add	r1, pc, r1
   2435c:	add	r3, pc, r3
   24360:	str	r1, [sp, #8]
   24364:	str	r3, [sp]
   24368:	str	r7, [sp, #12]
   2436c:	ldr	r3, [pc, #276]	; 24488 <ASN1_STRING_length@plt+0x12514>
   24370:	add	r2, pc, r2
   24374:	mov	r1, #3
   24378:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   2437c:	b	24328 <ASN1_STRING_length@plt+0x123b4>
   24380:	mvn	r8, #1
   24384:	b	23e28 <ASN1_STRING_length@plt+0x11eb4>
   24388:	ldr	r2, [pc, #252]	; 2448c <ASN1_STRING_length@plt+0x12518>
   2438c:	ldr	r1, [pc, #252]	; 24490 <ASN1_STRING_length@plt+0x1251c>
   24390:	add	r2, pc, r2
   24394:	ldr	r3, [pc, #248]	; 24494 <ASN1_STRING_length@plt+0x12520>
   24398:	ldr	r0, [sl]
   2439c:	str	r2, [sp, #4]
   243a0:	ldr	r2, [pc, #240]	; 24498 <ASN1_STRING_length@plt+0x12524>
   243a4:	add	r1, pc, r1
   243a8:	add	r3, pc, r3
   243ac:	str	r1, [sp, #8]
   243b0:	str	r3, [sp]
   243b4:	str	r7, [sp, #12]
   243b8:	ldr	r3, [pc, #200]	; 24488 <ASN1_STRING_length@plt+0x12514>
   243bc:	add	r2, pc, r2
   243c0:	mov	r1, #3
   243c4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   243c8:	b	242f8 <ASN1_STRING_length@plt+0x12384>
   243cc:	mov	r0, fp
   243d0:	b	23e24 <ASN1_STRING_length@plt+0x11eb0>
   243d4:	bl	11d88 <__stack_chk_fail@plt>
   243d8:	ldr	r3, [pc, #188]	; 2449c <ASN1_STRING_length@plt+0x12528>
   243dc:	ldr	r1, [pc, #188]	; 244a0 <ASN1_STRING_length@plt+0x1252c>
   243e0:	ldr	r0, [pc, #188]	; 244a4 <ASN1_STRING_length@plt+0x12530>
   243e4:	add	r3, pc, r3
   243e8:	ldr	r2, [pc, #184]	; 244a8 <ASN1_STRING_length@plt+0x12534>
   243ec:	add	r1, pc, r1
   243f0:	add	r0, pc, r0
   243f4:	bl	11b6c <__assert_fail@plt>
   243f8:	add	r0, r5, r7
   243fc:	add	r0, r0, #2
   24400:	bl	11d64 <malloc@plt>
   24404:	ldr	r9, [sp, #36]	; 0x24
   24408:	mov	fp, r0
   2440c:	b	23d70 <ASN1_STRING_length@plt+0x11dfc>
   24410:	ldr	r3, [pc, #148]	; 244ac <ASN1_STRING_length@plt+0x12538>
   24414:	ldr	r1, [pc, #148]	; 244b0 <ASN1_STRING_length@plt+0x1253c>
   24418:	ldr	r0, [pc, #148]	; 244b4 <ASN1_STRING_length@plt+0x12540>
   2441c:	add	r3, pc, r3
   24420:	ldr	r2, [pc, #144]	; 244b8 <ASN1_STRING_length@plt+0x12544>
   24424:	add	r1, pc, r1
   24428:	add	r0, pc, r0
   2442c:	bl	11b6c <__assert_fail@plt>
   24430:	andeq	ip, r1, ip, ror #3
   24434:	strdeq	r0, [r0], -r8
   24438:	andeq	r8, r0, r4, asr r3
   2443c:	andeq	r9, r0, r8, ror #3
   24440:	muleq	r0, r4, r0
   24444:	andeq	r9, r0, r4, ror r0
   24448:	andeq	r8, r0, r4, asr #29
   2444c:	andeq	sl, r0, r4, lsl #30
   24450:	andeq	sl, r0, ip, asr #16
   24454:	ldrdeq	sl, [r0], -ip
   24458:	andeq	r0, r0, sl, lsl r5
   2445c:	andeq	r8, r0, r0, lsr lr
   24460:	andeq	r7, r0, ip, lsl #28
   24464:	andeq	r9, r0, r0, ror #5
   24468:	andeq	r7, r0, ip, lsl #28
   2446c:	strdeq	sl, [r0], -ip
   24470:	ldrdeq	sl, [r0], -r8
   24474:	andeq	r0, r0, fp, asr #7
   24478:	andeq	r7, r0, r0, lsr sp
   2447c:	andeq	r7, r0, r4, ror sp
   24480:	andeq	sl, r0, r4, ror #12
   24484:	andeq	sl, r0, r0, asr #16
   24488:	ldrdeq	r0, [r0], -r3
   2448c:	andeq	r7, r0, r4, ror #25
   24490:	andeq	r7, r0, r8, lsr #26
   24494:	andeq	sl, r0, r8, lsl r6
   24498:	strdeq	sl, [r0], -r4
   2449c:	andeq	sl, r0, ip, asr r4
   244a0:	andeq	sl, r0, r4, asr #15
   244a4:	andeq	sl, r0, r0, lsr #25
   244a8:	muleq	r0, sl, r4
   244ac:	andeq	sl, r0, r8, lsl #8
   244b0:	andeq	sl, r0, ip, lsl #15
   244b4:	ldrdeq	r7, [r0], -r0
   244b8:	andeq	r0, r0, sl, ror #7
   244bc:	ldr	r3, [pc, #832]	; 24804 <ASN1_STRING_length@plt+0x12890>
   244c0:	ldr	r2, [pc, #832]	; 24808 <ASN1_STRING_length@plt+0x12894>
   244c4:	add	r3, pc, r3
   244c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   244cc:	sub	sp, sp, #4096	; 0x1000
   244d0:	ldr	r2, [r3, r2]
   244d4:	sub	sp, sp, #44	; 0x2c
   244d8:	add	r5, sp, #40	; 0x28
   244dc:	ldr	r3, [r2]
   244e0:	str	r2, [sp, #16]
   244e4:	add	r2, sp, #4096	; 0x1000
   244e8:	add	r2, r2, #36	; 0x24
   244ec:	mvn	r4, #1
   244f0:	subs	r9, r0, #0
   244f4:	str	r4, [r5, #-16]
   244f8:	str	r3, [r2]
   244fc:	beq	24644 <ASN1_STRING_length@plt+0x126d0>
   24500:	ldr	r2, [pc, #772]	; 2480c <ASN1_STRING_length@plt+0x12898>
   24504:	ldr	r1, [r9, #8]
   24508:	mov	r3, #4096	; 0x1000
   2450c:	add	r2, pc, r2
   24510:	sub	r4, r5, #4
   24514:	str	r1, [sp, #4]
   24518:	str	r2, [sp]
   2451c:	mov	r1, r3
   24520:	mov	r2, #1
   24524:	mov	r0, r4
   24528:	bl	11cc8 <__snprintf_chk@plt>
   2452c:	mov	r0, r4
   24530:	mov	r1, #524288	; 0x80000
   24534:	bl	11ca4 <open64@plt>
   24538:	subs	r3, r0, #0
   2453c:	str	r3, [sp, #20]
   24540:	blt	2469c <ASN1_STRING_length@plt+0x12728>
   24544:	ldr	r1, [pc, #708]	; 24810 <ASN1_STRING_length@plt+0x1289c>
   24548:	mov	r2, #524288	; 0x80000
   2454c:	add	r1, pc, r1
   24550:	bl	11bf0 <openat64@plt>
   24554:	subs	r6, r0, #0
   24558:	bge	24670 <ASN1_STRING_length@plt+0x126fc>
   2455c:	ldr	r1, [pc, #688]	; 24814 <ASN1_STRING_length@plt+0x128a0>
   24560:	ldr	r0, [pc, #688]	; 24818 <ASN1_STRING_length@plt+0x128a4>
   24564:	add	r1, pc, r1
   24568:	add	r0, pc, r0
   2456c:	bl	11c68 <fopen64@plt>
   24570:	subs	r6, r0, #0
   24574:	beq	2461c <ASN1_STRING_length@plt+0x126a8>
   24578:	ldr	fp, [pc, #668]	; 2481c <ASN1_STRING_length@plt+0x128a8>
   2457c:	mov	r8, #0
   24580:	add	fp, pc, fp
   24584:	sub	sl, r5, #12
   24588:	mov	r2, r6
   2458c:	mov	r1, #4096	; 0x1000
   24590:	mov	r0, r4
   24594:	bl	11a94 <fgets@plt>
   24598:	cmp	r0, #0
   2459c:	beq	246ec <ASN1_STRING_length@plt+0x12778>
   245a0:	mov	r0, r4
   245a4:	bl	11c44 <strlen@plt>
   245a8:	mov	r2, sl
   245ac:	mov	r1, fp
   245b0:	add	r8, r8, #1
   245b4:	mov	r7, r0
   245b8:	mov	r0, r4
   245bc:	bl	11dd0 <strtok_r@plt>
   245c0:	cmp	r0, #0
   245c4:	beq	245d8 <ASN1_STRING_length@plt+0x12664>
   245c8:	ldr	r1, [r9, #8]
   245cc:	bl	11f14 <strcmp@plt>
   245d0:	cmp	r0, #0
   245d4:	beq	2473c <ASN1_STRING_length@plt+0x127c8>
   245d8:	add	r7, r5, r7
   245dc:	ldrb	r3, [r7, #-5]
   245e0:	cmp	r3, #10
   245e4:	beq	24588 <ASN1_STRING_length@plt+0x12614>
   245e8:	mov	r2, r6
   245ec:	mov	r1, #4096	; 0x1000
   245f0:	mov	r0, r4
   245f4:	bl	11a94 <fgets@plt>
   245f8:	cmp	r0, #0
   245fc:	beq	24588 <ASN1_STRING_length@plt+0x12614>
   24600:	mov	r0, r4
   24604:	bl	11c44 <strlen@plt>
   24608:	add	r0, r5, r0
   2460c:	ldrb	r3, [r0, #-5]
   24610:	cmp	r3, #10
   24614:	bne	245e8 <ASN1_STRING_length@plt+0x12674>
   24618:	b	24588 <ASN1_STRING_length@plt+0x12614>
   2461c:	bl	11f38 <__errno_location@plt>
   24620:	mov	r5, r0
   24624:	ldr	r0, [r9]
   24628:	ldr	r4, [r5]
   2462c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24630:	rsb	r4, r4, #0
   24634:	cmp	r0, #2
   24638:	bgt	247bc <ASN1_STRING_length@plt+0x12848>
   2463c:	ldr	r0, [sp, #20]
   24640:	bl	11d04 <close@plt>
   24644:	add	r3, sp, #4096	; 0x1000
   24648:	add	r3, r3, #36	; 0x24
   2464c:	ldr	r2, [r3]
   24650:	ldr	r3, [sp, #16]
   24654:	mov	r0, r4
   24658:	ldr	r3, [r3]
   2465c:	cmp	r2, r3
   24660:	bne	24800 <ASN1_STRING_length@plt+0x1288c>
   24664:	add	sp, sp, #4096	; 0x1000
   24668:	add	sp, sp, #44	; 0x2c
   2466c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24670:	mov	r2, #10
   24674:	sub	r1, r5, #16
   24678:	bl	1b7b8 <ASN1_STRING_length@plt+0x9844>
   2467c:	cmp	r0, #0
   24680:	blt	246f8 <ASN1_STRING_length@plt+0x12784>
   24684:	mov	r0, r6
   24688:	bl	11d04 <close@plt>
   2468c:	ldr	r0, [sp, #20]
   24690:	bl	11d04 <close@plt>
   24694:	ldr	r4, [r5, #-16]
   24698:	b	24644 <ASN1_STRING_length@plt+0x126d0>
   2469c:	bl	11f38 <__errno_location@plt>
   246a0:	ldr	r4, [r0]
   246a4:	rsb	r4, r4, #0
   246a8:	b	24644 <ASN1_STRING_length@plt+0x126d0>
   246ac:	ldr	r0, [r9]
   246b0:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   246b4:	cmp	r0, #2
   246b8:	ble	246ec <ASN1_STRING_length@plt+0x12778>
   246bc:	ldr	r2, [pc, #348]	; 24820 <ASN1_STRING_length@plt+0x128ac>
   246c0:	ldr	r3, [pc, #348]	; 24824 <ASN1_STRING_length@plt+0x128b0>
   246c4:	add	r2, pc, r2
   246c8:	add	r3, pc, r3
   246cc:	stmib	sp, {r2, r8}
   246d0:	ldr	r2, [pc, #336]	; 24828 <ASN1_STRING_length@plt+0x128b4>
   246d4:	str	r3, [sp]
   246d8:	add	r2, pc, r2
   246dc:	ldr	r3, [pc, #328]	; 2482c <ASN1_STRING_length@plt+0x128b8>
   246e0:	ldr	r0, [r9]
   246e4:	mov	r1, #3
   246e8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   246ec:	mov	r0, r6
   246f0:	bl	11a88 <fclose@plt>
   246f4:	b	2468c <ASN1_STRING_length@plt+0x12718>
   246f8:	ldr	r0, [r9]
   246fc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24700:	cmp	r0, #2
   24704:	ble	24684 <ASN1_STRING_length@plt+0x12710>
   24708:	ldr	r2, [pc, #288]	; 24830 <ASN1_STRING_length@plt+0x128bc>
   2470c:	ldr	r3, [pc, #288]	; 24834 <ASN1_STRING_length@plt+0x128c0>
   24710:	add	r2, pc, r2
   24714:	add	r3, pc, r3
   24718:	stmib	sp, {r2, r4}
   2471c:	ldr	r2, [pc, #276]	; 24838 <ASN1_STRING_length@plt+0x128c4>
   24720:	str	r3, [sp]
   24724:	add	r2, pc, r2
   24728:	ldr	r3, [pc, #268]	; 2483c <ASN1_STRING_length@plt+0x128c8>
   2472c:	ldr	r0, [r9]
   24730:	mov	r1, #3
   24734:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   24738:	b	24684 <ASN1_STRING_length@plt+0x12710>
   2473c:	mov	r2, sl
   24740:	mov	r1, fp
   24744:	bl	11dd0 <strtok_r@plt>
   24748:	subs	r4, r0, #0
   2474c:	beq	246ac <ASN1_STRING_length@plt+0x12738>
   24750:	mov	r2, #10
   24754:	sub	r1, r5, #8
   24758:	bl	11c8c <strtol@plt>
   2475c:	ldr	r3, [r5, #-8]
   24760:	cmp	r3, r4
   24764:	beq	24778 <ASN1_STRING_length@plt+0x12804>
   24768:	ldrb	r3, [r3]
   2476c:	cmp	r3, #0
   24770:	streq	r0, [r5, #-16]
   24774:	beq	246ec <ASN1_STRING_length@plt+0x12778>
   24778:	ldr	r0, [r9]
   2477c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24780:	cmp	r0, #2
   24784:	ble	246ec <ASN1_STRING_length@plt+0x12778>
   24788:	ldr	r2, [pc, #176]	; 24840 <ASN1_STRING_length@plt+0x128cc>
   2478c:	ldr	r3, [pc, #176]	; 24844 <ASN1_STRING_length@plt+0x128d0>
   24790:	add	r2, pc, r2
   24794:	add	r3, pc, r3
   24798:	stmib	sp, {r2, r8}
   2479c:	ldr	r2, [pc, #164]	; 24848 <ASN1_STRING_length@plt+0x128d4>
   247a0:	str	r3, [sp]
   247a4:	add	r2, pc, r2
   247a8:	ldr	r3, [pc, #156]	; 2484c <ASN1_STRING_length@plt+0x128d8>
   247ac:	ldr	r0, [r9]
   247b0:	mov	r1, #3
   247b4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   247b8:	b	246ec <ASN1_STRING_length@plt+0x12778>
   247bc:	ldr	r0, [r5]
   247c0:	ldr	r5, [r9]
   247c4:	bl	119f8 <strerror@plt>
   247c8:	ldr	r2, [pc, #128]	; 24850 <ASN1_STRING_length@plt+0x128dc>
   247cc:	ldr	r3, [pc, #128]	; 24854 <ASN1_STRING_length@plt+0x128e0>
   247d0:	add	r2, pc, r2
   247d4:	str	r2, [sp, #4]
   247d8:	ldr	r2, [pc, #120]	; 24858 <ASN1_STRING_length@plt+0x128e4>
   247dc:	add	r3, pc, r3
   247e0:	str	r3, [sp]
   247e4:	add	r2, pc, r2
   247e8:	ldr	r3, [pc, #108]	; 2485c <ASN1_STRING_length@plt+0x128e8>
   247ec:	mov	r1, #3
   247f0:	str	r0, [sp, #8]
   247f4:	mov	r0, r5
   247f8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   247fc:	b	2463c <ASN1_STRING_length@plt+0x126c8>
   24800:	bl	11d88 <__stack_chk_fail@plt>
   24804:	andeq	fp, r1, r0, lsr r9
   24808:	strdeq	r0, [r0], -r8
   2480c:	ldrdeq	sl, [r0], -r8
   24810:	andeq	sl, r0, r8, lsr #15
   24814:	andeq	r9, r0, r0, lsl r5
   24818:	andeq	sl, r0, r8, lsr #17
   2481c:	muleq	r0, r4, r7
   24820:	andeq	sl, r0, r0, ror #12
   24824:	andeq	sl, r0, r0, asr #7
   24828:	ldrdeq	sl, [r0], -r8
   2482c:	andeq	r0, r0, r5, lsr r7
   24830:	strdeq	sl, [r0], -r0
   24834:	andeq	sl, r0, r4, ror r3
   24838:	andeq	sl, r0, ip, lsl #9
   2483c:	andeq	r0, r0, sl, lsl r7
   24840:	muleq	r0, r4, r5
   24844:	strdeq	sl, [r0], -r4
   24848:	andeq	sl, r0, ip, lsl #8
   2484c:	andeq	r0, r0, ip, lsr r7
   24850:	andeq	sl, r0, r0, asr r6
   24854:	andeq	sl, r0, ip, lsr #5
   24858:	andeq	sl, r0, ip, asr #7
   2485c:	andeq	r0, r0, r4, lsr #14
   24860:	ldr	r3, [pc, #384]	; 249e8 <ASN1_STRING_length@plt+0x12a74>
   24864:	ldr	r2, [pc, #384]	; 249ec <ASN1_STRING_length@plt+0x12a78>
   24868:	add	r3, pc, r3
   2486c:	push	{r4, r5, r6, r7, r8, r9, lr}
   24870:	sub	sp, sp, #4096	; 0x1000
   24874:	ldr	r8, [r3, r2]
   24878:	sub	sp, sp, #28
   2487c:	add	r2, sp, #4096	; 0x1000
   24880:	add	r2, r2, #20
   24884:	ldr	r3, [r8]
   24888:	subs	r5, r0, #0
   2488c:	str	r3, [r2]
   24890:	beq	249dc <ASN1_STRING_length@plt+0x12a68>
   24894:	ldr	r2, [pc, #340]	; 249f0 <ASN1_STRING_length@plt+0x12a7c>
   24898:	ldr	r1, [r5, #8]
   2489c:	add	r6, sp, #24
   248a0:	mov	r3, #4096	; 0x1000
   248a4:	add	r2, pc, r2
   248a8:	sub	r7, r6, #4
   248ac:	str	r1, [sp, #4]
   248b0:	str	r2, [sp]
   248b4:	mov	r1, r3
   248b8:	mov	r2, #1
   248bc:	mov	r0, r7
   248c0:	bl	11cc8 <__snprintf_chk@plt>
   248c4:	mov	r0, r7
   248c8:	mov	r1, #524288	; 0x80000
   248cc:	bl	11ca4 <open64@plt>
   248d0:	subs	r9, r0, #0
   248d4:	blt	24924 <ASN1_STRING_length@plt+0x129b0>
   248d8:	mov	r2, #10
   248dc:	sub	r1, r6, #8
   248e0:	bl	1b7b8 <ASN1_STRING_length@plt+0x9844>
   248e4:	mov	r4, r0
   248e8:	mov	r0, r9
   248ec:	bl	11d04 <close@plt>
   248f0:	cmp	r4, #0
   248f4:	ldrge	r4, [r6, #-8]
   248f8:	blt	24988 <ASN1_STRING_length@plt+0x12a14>
   248fc:	add	r3, sp, #4096	; 0x1000
   24900:	add	r3, r3, #20
   24904:	ldr	r2, [r3]
   24908:	ldr	r3, [r8]
   2490c:	mov	r0, r4
   24910:	cmp	r2, r3
   24914:	bne	249e4 <ASN1_STRING_length@plt+0x12a70>
   24918:	add	sp, sp, #4096	; 0x1000
   2491c:	add	sp, sp, #28
   24920:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24924:	bl	11f38 <__errno_location@plt>
   24928:	mov	r6, r0
   2492c:	ldr	r0, [r5]
   24930:	ldr	r4, [r6]
   24934:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24938:	rsb	r4, r4, #0
   2493c:	cmp	r0, #6
   24940:	ble	248fc <ASN1_STRING_length@plt+0x12988>
   24944:	ldr	r0, [r6]
   24948:	ldr	r5, [r5]
   2494c:	bl	119f8 <strerror@plt>
   24950:	ldr	r2, [pc, #156]	; 249f4 <ASN1_STRING_length@plt+0x12a80>
   24954:	ldr	r3, [pc, #156]	; 249f8 <ASN1_STRING_length@plt+0x12a84>
   24958:	add	r2, pc, r2
   2495c:	add	r3, pc, r3
   24960:	stmib	sp, {r2, r7}
   24964:	ldr	r2, [pc, #144]	; 249fc <ASN1_STRING_length@plt+0x12a88>
   24968:	str	r3, [sp]
   2496c:	add	r2, pc, r2
   24970:	ldr	r3, [pc, #136]	; 24a00 <ASN1_STRING_length@plt+0x12a8c>
   24974:	mov	r1, #7
   24978:	str	r0, [sp, #12]
   2497c:	mov	r0, r5
   24980:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   24984:	b	248fc <ASN1_STRING_length@plt+0x12988>
   24988:	ldr	r0, [r5]
   2498c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24990:	cmp	r0, #2
   24994:	ble	248fc <ASN1_STRING_length@plt+0x12988>
   24998:	rsb	r0, r4, #0
   2499c:	ldr	r5, [r5]
   249a0:	bl	119f8 <strerror@plt>
   249a4:	ldr	r2, [pc, #88]	; 24a04 <ASN1_STRING_length@plt+0x12a90>
   249a8:	ldr	r3, [pc, #88]	; 24a08 <ASN1_STRING_length@plt+0x12a94>
   249ac:	add	r2, pc, r2
   249b0:	add	r3, pc, r3
   249b4:	stmib	sp, {r2, r7}
   249b8:	ldr	r2, [pc, #76]	; 24a0c <ASN1_STRING_length@plt+0x12a98>
   249bc:	str	r3, [sp]
   249c0:	add	r2, pc, r2
   249c4:	ldr	r3, [pc, #68]	; 24a10 <ASN1_STRING_length@plt+0x12a9c>
   249c8:	mov	r1, #3
   249cc:	str	r0, [sp, #12]
   249d0:	mov	r0, r5
   249d4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   249d8:	b	248fc <ASN1_STRING_length@plt+0x12988>
   249dc:	mvn	r4, #1
   249e0:	b	248fc <ASN1_STRING_length@plt+0x12988>
   249e4:	bl	11d88 <__stack_chk_fail@plt>
   249e8:	andeq	fp, r1, ip, lsl #11
   249ec:	strdeq	r0, [r0], -r8
   249f0:	andeq	sl, r0, r0, lsl #8
   249f4:	andeq	sl, r0, r4, ror r2
   249f8:	andeq	sl, r0, r4, asr #2
   249fc:	andeq	sl, r0, r4, asr #4
   24a00:	andeq	r0, r0, r4, ror #14
   24a04:	andeq	sl, r0, r0, lsl r3
   24a08:	strdeq	sl, [r0], -r0
   24a0c:	strdeq	sl, [r0], -r0
   24a10:	andeq	r0, r0, ip, ror #14
   24a14:	ldr	r3, [pc, #576]	; 24c5c <ASN1_STRING_length@plt+0x12ce8>
   24a18:	ldr	r2, [pc, #576]	; 24c60 <ASN1_STRING_length@plt+0x12cec>
   24a1c:	add	r3, pc, r3
   24a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a24:	sub	sp, sp, #4096	; 0x1000
   24a28:	ldr	sl, [r3, r2]
   24a2c:	sub	sp, sp, #28
   24a30:	add	r2, sp, #4096	; 0x1000
   24a34:	add	r2, r2, #20
   24a38:	ldr	r3, [sl]
   24a3c:	subs	r6, r0, #0
   24a40:	str	r3, [r2]
   24a44:	beq	24b74 <ASN1_STRING_length@plt+0x12c00>
   24a48:	ldr	r3, [r6]
   24a4c:	cmp	r3, #0
   24a50:	beq	24b74 <ASN1_STRING_length@plt+0x12c00>
   24a54:	ldr	r2, [pc, #520]	; 24c64 <ASN1_STRING_length@plt+0x12cf0>
   24a58:	ldr	r1, [r6, #8]
   24a5c:	add	r8, sp, #24
   24a60:	mov	r3, #4096	; 0x1000
   24a64:	add	r2, pc, r2
   24a68:	sub	r4, r8, #4
   24a6c:	str	r1, [sp, #4]
   24a70:	str	r2, [sp]
   24a74:	mov	r1, r3
   24a78:	mov	r2, #1
   24a7c:	mov	r0, r4
   24a80:	bl	11cc8 <__snprintf_chk@plt>
   24a84:	mov	r0, r4
   24a88:	bl	11a34 <opendir@plt>
   24a8c:	subs	r7, r0, #0
   24a90:	beq	24bf4 <ASN1_STRING_length@plt+0x12c80>
   24a94:	bl	11e54 <readdir64@plt>
   24a98:	cmp	r0, #0
   24a9c:	beq	24c50 <ASN1_STRING_length@plt+0x12cdc>
   24aa0:	mov	r5, #0
   24aa4:	sub	r9, r8, #8
   24aa8:	ldrb	r3, [r0, #19]
   24aac:	cmp	r3, #46	; 0x2e
   24ab0:	bne	24acc <ASN1_STRING_length@plt+0x12b58>
   24ab4:	ldrb	r3, [r0, #20]
   24ab8:	cmp	r3, #0
   24abc:	beq	24b00 <ASN1_STRING_length@plt+0x12b8c>
   24ac0:	ldrh	r3, [r0, #20]
   24ac4:	cmp	r3, #46	; 0x2e
   24ac8:	beq	24b00 <ASN1_STRING_length@plt+0x12b8c>
   24acc:	add	r4, r0, #19
   24ad0:	mov	r1, r4
   24ad4:	mov	r2, r9
   24ad8:	ldr	r0, [r6]
   24adc:	bl	218f8 <ASN1_STRING_length@plt+0xf984>
   24ae0:	subs	fp, r0, #0
   24ae4:	blt	24ba0 <ASN1_STRING_length@plt+0x12c2c>
   24ae8:	ldr	r1, [r8, #-8]
   24aec:	mov	r0, r5
   24af0:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   24af4:	cmp	r0, #0
   24af8:	beq	24b1c <ASN1_STRING_length@plt+0x12ba8>
   24afc:	mov	r5, r0
   24b00:	mov	r0, r7
   24b04:	bl	11e54 <readdir64@plt>
   24b08:	cmp	r0, #0
   24b0c:	bne	24aa8 <ASN1_STRING_length@plt+0x12b34>
   24b10:	mov	r0, r7
   24b14:	bl	11d28 <closedir@plt>
   24b18:	b	24b78 <ASN1_STRING_length@plt+0x12c04>
   24b1c:	ldr	r0, [r6]
   24b20:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24b24:	cmp	r0, #2
   24b28:	ble	24b5c <ASN1_STRING_length@plt+0x12be8>
   24b2c:	ldr	r2, [pc, #308]	; 24c68 <ASN1_STRING_length@plt+0x12cf4>
   24b30:	ldr	r3, [pc, #308]	; 24c6c <ASN1_STRING_length@plt+0x12cf8>
   24b34:	add	r2, pc, r2
   24b38:	str	r2, [sp, #4]
   24b3c:	ldr	r2, [pc, #300]	; 24c70 <ASN1_STRING_length@plt+0x12cfc>
   24b40:	add	r3, pc, r3
   24b44:	str	r3, [sp]
   24b48:	add	r2, pc, r2
   24b4c:	ldr	r3, [pc, #288]	; 24c74 <ASN1_STRING_length@plt+0x12d00>
   24b50:	ldr	r0, [r6]
   24b54:	mov	r1, #3
   24b58:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   24b5c:	ldr	r0, [r8, #-8]
   24b60:	bl	22248 <ASN1_STRING_length@plt+0x102d4>
   24b64:	mov	r0, r7
   24b68:	bl	11d28 <closedir@plt>
   24b6c:	mov	r0, r5
   24b70:	bl	21ddc <ASN1_STRING_length@plt+0xfe68>
   24b74:	mov	r5, #0
   24b78:	add	r3, sp, #4096	; 0x1000
   24b7c:	add	r3, r3, #20
   24b80:	ldr	r2, [r3]
   24b84:	ldr	r3, [sl]
   24b88:	mov	r0, r5
   24b8c:	cmp	r2, r3
   24b90:	bne	24c58 <ASN1_STRING_length@plt+0x12ce4>
   24b94:	add	sp, sp, #4096	; 0x1000
   24b98:	add	sp, sp, #28
   24b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ba0:	ldr	r0, [r6]
   24ba4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24ba8:	cmp	r0, #2
   24bac:	ble	24b64 <ASN1_STRING_length@plt+0x12bf0>
   24bb0:	rsb	r0, fp, #0
   24bb4:	ldr	r6, [r6]
   24bb8:	bl	119f8 <strerror@plt>
   24bbc:	ldr	r2, [pc, #180]	; 24c78 <ASN1_STRING_length@plt+0x12d04>
   24bc0:	ldr	r3, [pc, #180]	; 24c7c <ASN1_STRING_length@plt+0x12d08>
   24bc4:	add	r2, pc, r2
   24bc8:	add	r3, pc, r3
   24bcc:	stmib	sp, {r2, r4}
   24bd0:	ldr	r2, [pc, #168]	; 24c80 <ASN1_STRING_length@plt+0x12d0c>
   24bd4:	str	r3, [sp]
   24bd8:	add	r2, pc, r2
   24bdc:	ldr	r3, [pc, #160]	; 24c84 <ASN1_STRING_length@plt+0x12d10>
   24be0:	mov	r1, #3
   24be4:	str	r0, [sp, #12]
   24be8:	mov	r0, r6
   24bec:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   24bf0:	b	24b64 <ASN1_STRING_length@plt+0x12bf0>
   24bf4:	ldr	r0, [r6]
   24bf8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   24bfc:	cmp	r0, #2
   24c00:	ble	24b74 <ASN1_STRING_length@plt+0x12c00>
   24c04:	bl	11f38 <__errno_location@plt>
   24c08:	ldr	r6, [r6]
   24c0c:	mov	r5, r7
   24c10:	ldr	r0, [r0]
   24c14:	bl	119f8 <strerror@plt>
   24c18:	ldr	r2, [pc, #104]	; 24c88 <ASN1_STRING_length@plt+0x12d14>
   24c1c:	ldr	r3, [pc, #104]	; 24c8c <ASN1_STRING_length@plt+0x12d18>
   24c20:	add	r2, pc, r2
   24c24:	add	r3, pc, r3
   24c28:	stmib	sp, {r2, r4}
   24c2c:	ldr	r2, [pc, #92]	; 24c90 <ASN1_STRING_length@plt+0x12d1c>
   24c30:	str	r3, [sp]
   24c34:	add	r2, pc, r2
   24c38:	ldr	r3, [pc, #84]	; 24c94 <ASN1_STRING_length@plt+0x12d20>
   24c3c:	mov	r1, #3
   24c40:	str	r0, [sp, #12]
   24c44:	mov	r0, r6
   24c48:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   24c4c:	b	24b78 <ASN1_STRING_length@plt+0x12c04>
   24c50:	mov	r5, r0
   24c54:	b	24b10 <ASN1_STRING_length@plt+0x12b9c>
   24c58:	bl	11d88 <__stack_chk_fail@plt>
   24c5c:	ldrdeq	fp, [r1], -r8
   24c60:	strdeq	r0, [r0], -r8
   24c64:	strheq	sl, [r0], -r0
   24c68:	andeq	r7, r0, r8, lsr #15
   24c6c:	andeq	r9, r0, r8, ror pc
   24c70:	andeq	sl, r0, r8, rrx
   24c74:	andeq	r0, r0, r6, lsr #15
   24c78:	andeq	r9, r0, r8, ror #30
   24c7c:	strdeq	r9, [r0], -r0
   24c80:	ldrdeq	r9, [r0], -r8
   24c84:	muleq	r0, lr, r7
   24c88:	andeq	r9, r0, ip, lsr #31
   24c8c:	muleq	r0, r4, lr
   24c90:	andeq	r9, r0, ip, ror pc
   24c94:	andeq	r0, r0, fp, lsl #15
   24c98:	push	{r4, lr}
   24c9c:	subs	r4, r0, #0
   24ca0:	popeq	{r4, pc}
   24ca4:	ldr	r0, [r4, #8]
   24ca8:	bl	11ba8 <free@plt>
   24cac:	mov	r0, r4
   24cb0:	bl	1d918 <ASN1_STRING_length@plt+0xb9a4>
   24cb4:	subs	r4, r0, #0
   24cb8:	bne	24ca4 <ASN1_STRING_length@plt+0x12d30>
   24cbc:	pop	{r4, pc}
   24cc0:	cmp	r0, #0
   24cc4:	ldrne	r3, [r0, #8]
   24cc8:	ldrne	r0, [r3]
   24ccc:	bx	lr
   24cd0:	cmp	r0, #0
   24cd4:	ldrne	r0, [r0, #8]
   24cd8:	addne	r0, r0, #4
   24cdc:	bx	lr
   24ce0:	b	24c98 <ASN1_STRING_length@plt+0x12d24>
   24ce4:	ldr	r3, [pc, #620]	; 24f58 <ASN1_STRING_length@plt+0x12fe4>
   24ce8:	ldr	r2, [pc, #620]	; 24f5c <ASN1_STRING_length@plt+0x12fe8>
   24cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24cf0:	add	r3, pc, r3
   24cf4:	sub	sp, sp, #76	; 0x4c
   24cf8:	add	ip, sp, #24
   24cfc:	str	ip, [sp, #12]
   24d00:	ldr	r2, [r3, r2]
   24d04:	mov	r9, r0
   24d08:	mov	r0, ip
   24d0c:	ldr	ip, [r2]
   24d10:	str	r2, [sp, #8]
   24d14:	mov	r7, r1
   24d18:	mov	r2, #44	; 0x2c
   24d1c:	mov	r1, #0
   24d20:	str	ip, [sp, #68]	; 0x44
   24d24:	bl	11b18 <memset@plt>
   24d28:	cmp	r7, #0
   24d2c:	cmpne	r9, #0
   24d30:	beq	24f2c <ASN1_STRING_length@plt+0x12fb8>
   24d34:	ldr	r5, [r7]
   24d38:	cmp	r5, #0
   24d3c:	bne	24f34 <ASN1_STRING_length@plt+0x12fc0>
   24d40:	mov	r0, r9
   24d44:	bl	22b40 <ASN1_STRING_length@plt+0x10bcc>
   24d48:	cmp	r0, #0
   24d4c:	beq	24e20 <ASN1_STRING_length@plt+0x12eac>
   24d50:	ldr	r1, [pc, #520]	; 24f60 <ASN1_STRING_length@plt+0x12fec>
   24d54:	add	r2, sp, #20
   24d58:	add	r1, pc, r1
   24d5c:	bl	26be4 <ASN1_STRING_length@plt+0x14c70>
   24d60:	subs	r8, r0, #0
   24d64:	blt	24de8 <ASN1_STRING_length@plt+0x12e74>
   24d68:	beq	24dc4 <ASN1_STRING_length@plt+0x12e50>
   24d6c:	ldr	r3, [sp, #20]
   24d70:	mov	r1, #61	; 0x3d
   24d74:	ldr	r6, [r3, r5, lsl #2]
   24d78:	mov	r0, r6
   24d7c:	bl	11ac4 <strchr@plt>
   24d80:	subs	r4, r0, #0
   24d84:	beq	24e08 <ASN1_STRING_length@plt+0x12e94>
   24d88:	add	fp, r4, #1
   24d8c:	mov	r0, fp
   24d90:	sub	sl, r4, r6
   24d94:	bl	11c44 <strlen@plt>
   24d98:	str	r0, [sp]
   24d9c:	mov	r3, fp
   24da0:	mov	r2, sl
   24da4:	mov	r1, r6
   24da8:	mov	r0, r7
   24dac:	bl	211c8 <ASN1_STRING_length@plt+0xf254>
   24db0:	cmp	r0, #0
   24db4:	beq	24f0c <ASN1_STRING_length@plt+0x12f98>
   24db8:	add	r5, r5, #1
   24dbc:	cmp	r8, r5
   24dc0:	bne	24d6c <ASN1_STRING_length@plt+0x12df8>
   24dc4:	ldr	r0, [r9, #36]	; 0x24
   24dc8:	ldr	r1, [sp, #12]
   24dcc:	bl	29a64 <ASN1_STRING_length@plt+0x17af0>
   24dd0:	cmp	r0, #0
   24dd4:	bne	24e30 <ASN1_STRING_length@plt+0x12ebc>
   24dd8:	ldr	r0, [sp, #12]
   24ddc:	bl	29ee4 <ASN1_STRING_length@plt+0x17f70>
   24de0:	ldr	r0, [sp, #20]
   24de4:	bl	11ba8 <free@plt>
   24de8:	ldr	r3, [sp, #8]
   24dec:	ldr	r2, [sp, #68]	; 0x44
   24df0:	mov	r0, r8
   24df4:	ldr	r3, [r3]
   24df8:	cmp	r2, r3
   24dfc:	bne	24f54 <ASN1_STRING_length@plt+0x12fe0>
   24e00:	add	sp, sp, #76	; 0x4c
   24e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e08:	mov	r0, r6
   24e0c:	bl	11c44 <strlen@plt>
   24e10:	mov	fp, r6
   24e14:	mov	sl, r0
   24e18:	mov	r0, r4
   24e1c:	b	24d98 <ASN1_STRING_length@plt+0x12e24>
   24e20:	bl	11f38 <__errno_location@plt>
   24e24:	ldr	r8, [r0]
   24e28:	rsb	r8, r8, #0
   24e2c:	b	24de8 <ASN1_STRING_length@plt+0x12e74>
   24e30:	ldr	r4, [sp, #48]	; 0x30
   24e34:	mov	r0, r4
   24e38:	bl	11c44 <strlen@plt>
   24e3c:	ldr	r1, [pc, #288]	; 24f64 <ASN1_STRING_length@plt+0x12ff0>
   24e40:	mov	r3, r4
   24e44:	mov	r2, #6
   24e48:	add	r1, pc, r1
   24e4c:	str	r0, [sp]
   24e50:	mov	r0, r7
   24e54:	bl	211c8 <ASN1_STRING_length@plt+0xf254>
   24e58:	cmp	r0, #0
   24e5c:	beq	24f0c <ASN1_STRING_length@plt+0x12f98>
   24e60:	ldr	r2, [sp, #28]
   24e64:	ldr	r1, [pc, #252]	; 24f68 <ASN1_STRING_length@plt+0x12ff4>
   24e68:	str	r2, [sp]
   24e6c:	ldr	r3, [sp, #24]
   24e70:	mov	r2, #6
   24e74:	add	r1, pc, r1
   24e78:	mov	r0, r7
   24e7c:	bl	211c8 <ASN1_STRING_length@plt+0xf254>
   24e80:	cmp	r0, #0
   24e84:	beq	24f0c <ASN1_STRING_length@plt+0x12f98>
   24e88:	ldr	r2, [sp, #36]	; 0x24
   24e8c:	ldr	r1, [pc, #216]	; 24f6c <ASN1_STRING_length@plt+0x12ff8>
   24e90:	str	r2, [sp]
   24e94:	ldr	r3, [sp, #32]
   24e98:	mov	r2, #7
   24e9c:	add	r1, pc, r1
   24ea0:	mov	r0, r7
   24ea4:	bl	21264 <ASN1_STRING_length@plt+0xf2f0>
   24ea8:	cmp	r0, #0
   24eac:	beq	24f0c <ASN1_STRING_length@plt+0x12f98>
   24eb0:	ldr	r4, [sp, #44]	; 0x2c
   24eb4:	mov	r0, r4
   24eb8:	bl	11c44 <strlen@plt>
   24ebc:	ldr	r1, [pc, #172]	; 24f70 <ASN1_STRING_length@plt+0x12ffc>
   24ec0:	mov	r3, r4
   24ec4:	mov	r2, #12
   24ec8:	add	r1, pc, r1
   24ecc:	str	r0, [sp]
   24ed0:	mov	r0, r7
   24ed4:	bl	211c8 <ASN1_STRING_length@plt+0xf254>
   24ed8:	cmp	r0, #0
   24edc:	beq	24f0c <ASN1_STRING_length@plt+0x12f98>
   24ee0:	ldr	r2, [sp, #56]	; 0x38
   24ee4:	ldr	r1, [pc, #136]	; 24f74 <ASN1_STRING_length@plt+0x13000>
   24ee8:	str	r2, [sp]
   24eec:	ldr	r3, [sp, #52]	; 0x34
   24ef0:	mov	r2, #9
   24ef4:	add	r1, pc, r1
   24ef8:	mov	r0, r7
   24efc:	bl	21264 <ASN1_STRING_length@plt+0xf2f0>
   24f00:	cmp	r0, #0
   24f04:	addne	r8, r8, #5
   24f08:	bne	24dd8 <ASN1_STRING_length@plt+0x12e64>
   24f0c:	ldr	r0, [sp, #12]
   24f10:	bl	29ee4 <ASN1_STRING_length@plt+0x17f70>
   24f14:	ldr	r0, [r7]
   24f18:	bl	24ce0 <ASN1_STRING_length@plt+0x12d6c>
   24f1c:	mov	r3, #0
   24f20:	str	r3, [r7]
   24f24:	mvn	r8, #11
   24f28:	b	24de0 <ASN1_STRING_length@plt+0x12e6c>
   24f2c:	mvn	r8, #1
   24f30:	b	24de8 <ASN1_STRING_length@plt+0x12e74>
   24f34:	ldr	r3, [pc, #60]	; 24f78 <ASN1_STRING_length@plt+0x13004>
   24f38:	ldr	r1, [pc, #60]	; 24f7c <ASN1_STRING_length@plt+0x13008>
   24f3c:	ldr	r0, [pc, #60]	; 24f80 <ASN1_STRING_length@plt+0x1300c>
   24f40:	add	r3, pc, r3
   24f44:	ldr	r2, [pc, #56]	; 24f84 <ASN1_STRING_length@plt+0x13010>
   24f48:	add	r1, pc, r1
   24f4c:	add	r0, pc, r0
   24f50:	bl	11b6c <__assert_fail@plt>
   24f54:	bl	11d88 <__stack_chk_fail@plt>
   24f58:	andeq	fp, r1, r4, lsl #2
   24f5c:	strdeq	r0, [r0], -r8
   24f60:	strdeq	r9, [r0], -ip
   24f64:	andeq	r9, r0, r8, lsl sp
   24f68:	strdeq	r9, [r0], -r4
   24f6c:	ldrdeq	r9, [r0], -r4
   24f70:			; <UNDEFINED> instruction: 0x00009cb0
   24f74:	muleq	r0, r4, ip
   24f78:	andeq	r9, r0, r8, lsr r9
   24f7c:	andeq	r9, r0, r8, ror #24
   24f80:	andeq	sl, r0, r4, asr r1
   24f84:	andeq	r0, r0, r9, ror #17
   24f88:	cmp	r0, #0
   24f8c:	bxeq	lr
   24f90:	ldr	r0, [r0, #8]
   24f94:	cmp	r0, #0
   24f98:	addne	r0, r0, #8
   24f9c:	bx	lr
   24fa0:	cmp	r0, #0
   24fa4:	beq	24fbc <ASN1_STRING_length@plt+0x13048>
   24fa8:	ldr	r3, [r0, #8]
   24fac:	cmp	r3, #0
   24fb0:	beq	24fbc <ASN1_STRING_length@plt+0x13048>
   24fb4:	ldrd	r0, [r3]
   24fb8:	bx	lr
   24fbc:	mov	r0, #0
   24fc0:	mov	r1, #0
   24fc4:	bx	lr
   24fc8:	b	24c98 <ASN1_STRING_length@plt+0x12d24>
   24fcc:	ldr	r3, [pc, #380]	; 25150 <ASN1_STRING_length@plt+0x131dc>
   24fd0:	ldr	r2, [pc, #380]	; 25154 <ASN1_STRING_length@plt+0x131e0>
   24fd4:	add	r3, pc, r3
   24fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fdc:	sub	sp, sp, #20
   24fe0:	ldr	r2, [r3, r2]
   24fe4:	cmp	r1, #0
   24fe8:	cmpne	r0, #0
   24fec:	str	r2, [sp, #4]
   24ff0:	ldr	r3, [r2]
   24ff4:	str	r3, [sp, #12]
   24ff8:	beq	25120 <ASN1_STRING_length@plt+0x131ac>
   24ffc:	ldr	r4, [r1]
   25000:	mov	sl, r1
   25004:	cmp	r4, #0
   25008:	bne	25130 <ASN1_STRING_length@plt+0x131bc>
   2500c:	bl	22b40 <ASN1_STRING_length@plt+0x10bcc>
   25010:	cmp	r0, #0
   25014:	beq	250ec <ASN1_STRING_length@plt+0x13178>
   25018:	add	r1, sp, #8
   2501c:	bl	26e48 <ASN1_STRING_length@plt+0x14ed4>
   25020:	subs	r3, r0, #0
   25024:	str	r3, [sp]
   25028:	blt	250cc <ASN1_STRING_length@plt+0x13158>
   2502c:	ldrne	r5, [sl]
   25030:	bne	25074 <ASN1_STRING_length@plt+0x13100>
   25034:	b	250c4 <ASN1_STRING_length@plt+0x13150>
   25038:	mov	r0, r6
   2503c:	mov	r2, r7
   25040:	mov	r1, fp
   25044:	strd	r8, [r0], #8
   25048:	bl	11c5c <memcpy@plt>
   2504c:	mov	r0, r5
   25050:	mov	r1, r6
   25054:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   25058:	subs	r5, r0, #0
   2505c:	beq	25100 <ASN1_STRING_length@plt+0x1318c>
   25060:	ldr	r3, [sp]
   25064:	add	r4, r4, #1
   25068:	cmp	r3, r4
   2506c:	str	r5, [sl]
   25070:	beq	250c4 <ASN1_STRING_length@plt+0x13150>
   25074:	ldr	r2, [sp, #8]
   25078:	lsl	r3, r4, #4
   2507c:	add	r1, r2, r3
   25080:	ldrd	r8, [r2, r3]
   25084:	ldr	fp, [r1, #12]
   25088:	mov	r0, fp
   2508c:	bl	11c44 <strlen@plt>
   25090:	mov	r7, r0
   25094:	add	r0, r0, #9
   25098:	bl	11d64 <malloc@plt>
   2509c:	add	r7, r7, #1
   250a0:	subs	r6, r0, #0
   250a4:	bne	25038 <ASN1_STRING_length@plt+0x130c4>
   250a8:	bl	11f38 <__errno_location@plt>
   250ac:	ldr	r7, [r0]
   250b0:	mov	r0, r5
   250b4:	rsb	r3, r7, #0
   250b8:	str	r3, [sp]
   250bc:	bl	24fc8 <ASN1_STRING_length@plt+0x13054>
   250c0:	str	r6, [sl]
   250c4:	ldr	r0, [sp, #8]
   250c8:	bl	11ba8 <free@plt>
   250cc:	ldr	r3, [sp, #4]
   250d0:	ldr	r2, [sp, #12]
   250d4:	ldr	r0, [sp]
   250d8:	ldr	r3, [r3]
   250dc:	cmp	r2, r3
   250e0:	bne	2512c <ASN1_STRING_length@plt+0x131b8>
   250e4:	add	sp, sp, #20
   250e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250ec:	bl	11f38 <__errno_location@plt>
   250f0:	ldr	r7, [r0]
   250f4:	rsb	r3, r7, #0
   250f8:	str	r3, [sp]
   250fc:	b	250cc <ASN1_STRING_length@plt+0x13158>
   25100:	mov	r0, r6
   25104:	bl	11ba8 <free@plt>
   25108:	ldr	r0, [sl]
   2510c:	bl	24fc8 <ASN1_STRING_length@plt+0x13054>
   25110:	mvn	r3, #11
   25114:	str	r3, [sp]
   25118:	str	r5, [sl]
   2511c:	b	250c4 <ASN1_STRING_length@plt+0x13150>
   25120:	mvn	r3, #1
   25124:	str	r3, [sp]
   25128:	b	250cc <ASN1_STRING_length@plt+0x13158>
   2512c:	bl	11d88 <__stack_chk_fail@plt>
   25130:	ldr	r3, [pc, #32]	; 25158 <ASN1_STRING_length@plt+0x131e4>
   25134:	ldr	r1, [pc, #32]	; 2515c <ASN1_STRING_length@plt+0x131e8>
   25138:	ldr	r0, [pc, #32]	; 25160 <ASN1_STRING_length@plt+0x131ec>
   2513c:	add	r3, pc, r3
   25140:	ldr	r2, [pc, #28]	; 25164 <ASN1_STRING_length@plt+0x131f0>
   25144:	add	r1, pc, r1
   25148:	add	r0, pc, r0
   2514c:	bl	11b6c <__assert_fail@plt>
   25150:	andeq	sl, r1, r0, lsr #28
   25154:	strdeq	r0, [r0], -r8
   25158:	andeq	r9, r0, r4, asr r7
   2515c:	andeq	r9, r0, ip, ror #20
   25160:	andeq	r9, r0, r8, asr pc
   25164:	andeq	r0, r0, r8, lsr #19
   25168:	cmp	r0, #0
   2516c:	bxeq	lr
   25170:	ldr	r0, [r0, #8]
   25174:	cmp	r0, #0
   25178:	addne	r0, r0, #8
   2517c:	bx	lr
   25180:	cmp	r0, #0
   25184:	beq	2519c <ASN1_STRING_length@plt+0x13228>
   25188:	ldr	r3, [r0, #8]
   2518c:	cmp	r3, #0
   25190:	beq	2519c <ASN1_STRING_length@plt+0x13228>
   25194:	ldrd	r0, [r3]
   25198:	bx	lr
   2519c:	mov	r0, #0
   251a0:	mov	r1, #0
   251a4:	bx	lr
   251a8:	b	24c98 <ASN1_STRING_length@plt+0x12d24>
   251ac:	ldr	r3, [pc, #380]	; 25330 <ASN1_STRING_length@plt+0x133bc>
   251b0:	ldr	r2, [pc, #380]	; 25334 <ASN1_STRING_length@plt+0x133c0>
   251b4:	add	r3, pc, r3
   251b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251bc:	sub	sp, sp, #20
   251c0:	ldr	r2, [r3, r2]
   251c4:	cmp	r1, #0
   251c8:	cmpne	r0, #0
   251cc:	str	r2, [sp, #4]
   251d0:	ldr	r3, [r2]
   251d4:	str	r3, [sp, #12]
   251d8:	beq	25300 <ASN1_STRING_length@plt+0x1338c>
   251dc:	ldr	r4, [r1]
   251e0:	mov	sl, r1
   251e4:	cmp	r4, #0
   251e8:	bne	25310 <ASN1_STRING_length@plt+0x1339c>
   251ec:	bl	22b40 <ASN1_STRING_length@plt+0x10bcc>
   251f0:	cmp	r0, #0
   251f4:	beq	252cc <ASN1_STRING_length@plt+0x13358>
   251f8:	add	r1, sp, #8
   251fc:	bl	27b3c <ASN1_STRING_length@plt+0x15bc8>
   25200:	subs	r3, r0, #0
   25204:	str	r3, [sp]
   25208:	blt	252ac <ASN1_STRING_length@plt+0x13338>
   2520c:	ldrne	r5, [sl]
   25210:	bne	25254 <ASN1_STRING_length@plt+0x132e0>
   25214:	b	252a4 <ASN1_STRING_length@plt+0x13330>
   25218:	mov	r0, r6
   2521c:	mov	r2, r7
   25220:	mov	r1, fp
   25224:	strd	r8, [r0], #8
   25228:	bl	11c5c <memcpy@plt>
   2522c:	mov	r0, r5
   25230:	mov	r1, r6
   25234:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   25238:	subs	r5, r0, #0
   2523c:	beq	252e0 <ASN1_STRING_length@plt+0x1336c>
   25240:	ldr	r3, [sp]
   25244:	add	r4, r4, #1
   25248:	cmp	r3, r4
   2524c:	str	r5, [sl]
   25250:	beq	252a4 <ASN1_STRING_length@plt+0x13330>
   25254:	ldr	r2, [sp, #8]
   25258:	lsl	r3, r4, #4
   2525c:	add	r1, r2, r3
   25260:	ldrd	r8, [r2, r3]
   25264:	ldr	fp, [r1, #12]
   25268:	mov	r0, fp
   2526c:	bl	11c44 <strlen@plt>
   25270:	mov	r7, r0
   25274:	add	r0, r0, #9
   25278:	bl	11d64 <malloc@plt>
   2527c:	add	r7, r7, #1
   25280:	subs	r6, r0, #0
   25284:	bne	25218 <ASN1_STRING_length@plt+0x132a4>
   25288:	bl	11f38 <__errno_location@plt>
   2528c:	ldr	r7, [r0]
   25290:	mov	r0, r5
   25294:	rsb	r3, r7, #0
   25298:	str	r3, [sp]
   2529c:	bl	251a8 <ASN1_STRING_length@plt+0x13234>
   252a0:	str	r6, [sl]
   252a4:	ldr	r0, [sp, #8]
   252a8:	bl	11ba8 <free@plt>
   252ac:	ldr	r3, [sp, #4]
   252b0:	ldr	r2, [sp, #12]
   252b4:	ldr	r0, [sp]
   252b8:	ldr	r3, [r3]
   252bc:	cmp	r2, r3
   252c0:	bne	2530c <ASN1_STRING_length@plt+0x13398>
   252c4:	add	sp, sp, #20
   252c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252cc:	bl	11f38 <__errno_location@plt>
   252d0:	ldr	r7, [r0]
   252d4:	rsb	r3, r7, #0
   252d8:	str	r3, [sp]
   252dc:	b	252ac <ASN1_STRING_length@plt+0x13338>
   252e0:	mov	r0, r6
   252e4:	bl	11ba8 <free@plt>
   252e8:	ldr	r0, [sl]
   252ec:	bl	251a8 <ASN1_STRING_length@plt+0x13234>
   252f0:	mvn	r3, #11
   252f4:	str	r3, [sp]
   252f8:	str	r5, [sl]
   252fc:	b	252a4 <ASN1_STRING_length@plt+0x13330>
   25300:	mvn	r3, #1
   25304:	str	r3, [sp]
   25308:	b	252ac <ASN1_STRING_length@plt+0x13338>
   2530c:	bl	11d88 <__stack_chk_fail@plt>
   25310:	ldr	r3, [pc, #32]	; 25338 <ASN1_STRING_length@plt+0x133c4>
   25314:	ldr	r1, [pc, #32]	; 2533c <ASN1_STRING_length@plt+0x133c8>
   25318:	ldr	r0, [pc, #32]	; 25340 <ASN1_STRING_length@plt+0x133cc>
   2531c:	add	r3, pc, r3
   25320:	ldr	r2, [pc, #28]	; 25344 <ASN1_STRING_length@plt+0x133d0>
   25324:	add	r1, pc, r1
   25328:	add	r0, pc, r0
   2532c:	bl	11b6c <__assert_fail@plt>
   25330:	andeq	sl, r1, r0, asr #24
   25334:	strdeq	r0, [r0], -r8
   25338:	muleq	r0, r0, r5
   2533c:	andeq	r9, r0, ip, lsl #17
   25340:	andeq	r9, r0, r8, ror sp
   25344:	andeq	r0, r0, r4, lsr sl
   25348:	cmp	r0, #0
   2534c:	bxeq	lr
   25350:	ldr	r0, [r0, #8]
   25354:	cmp	r0, #0
   25358:	addne	r0, r0, #9
   2535c:	bx	lr
   25360:	cmp	r0, #0
   25364:	beq	2537c <ASN1_STRING_length@plt+0x13408>
   25368:	ldr	r3, [r0, #8]
   2536c:	cmp	r3, #0
   25370:	beq	2537c <ASN1_STRING_length@plt+0x13408>
   25374:	ldrd	r0, [r3]
   25378:	bx	lr
   2537c:	mov	r0, #0
   25380:	mov	r1, #0
   25384:	bx	lr
   25388:	cmp	r0, #0
   2538c:	bxeq	lr
   25390:	ldr	r0, [r0, #8]
   25394:	cmp	r0, #0
   25398:	ldrbne	r0, [r0, #8]
   2539c:	bx	lr
   253a0:	b	24c98 <ASN1_STRING_length@plt+0x12d24>
   253a4:	ldr	r3, [pc, #392]	; 25534 <ASN1_STRING_length@plt+0x135c0>
   253a8:	ldr	r2, [pc, #392]	; 25538 <ASN1_STRING_length@plt+0x135c4>
   253ac:	add	r3, pc, r3
   253b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253b4:	sub	sp, sp, #28
   253b8:	ldr	r2, [r3, r2]
   253bc:	cmp	r1, #0
   253c0:	cmpne	r0, #0
   253c4:	str	r2, [sp, #12]
   253c8:	ldr	r3, [r2]
   253cc:	str	r3, [sp, #20]
   253d0:	beq	25504 <ASN1_STRING_length@plt+0x13590>
   253d4:	ldr	r4, [r1]
   253d8:	mov	sl, r1
   253dc:	cmp	r4, #0
   253e0:	bne	25514 <ASN1_STRING_length@plt+0x135a0>
   253e4:	bl	22b40 <ASN1_STRING_length@plt+0x10bcc>
   253e8:	cmp	r0, #0
   253ec:	beq	254d0 <ASN1_STRING_length@plt+0x1355c>
   253f0:	add	r1, sp, #16
   253f4:	bl	28ad4 <ASN1_STRING_length@plt+0x16b60>
   253f8:	subs	r3, r0, #0
   253fc:	str	r3, [sp, #8]
   25400:	blt	254b0 <ASN1_STRING_length@plt+0x1353c>
   25404:	ldrne	r5, [sl]
   25408:	bne	2544c <ASN1_STRING_length@plt+0x134d8>
   2540c:	b	254a8 <ASN1_STRING_length@plt+0x13534>
   25410:	mov	r1, r6
   25414:	strd	r8, [fp]
   25418:	strb	r7, [fp, #8]
   2541c:	add	r0, fp, #9
   25420:	bl	11c5c <memcpy@plt>
   25424:	mov	r0, r5
   25428:	mov	r1, fp
   2542c:	bl	1d808 <ASN1_STRING_length@plt+0xb894>
   25430:	subs	r5, r0, #0
   25434:	beq	254e4 <ASN1_STRING_length@plt+0x13570>
   25438:	ldr	r3, [sp, #8]
   2543c:	add	r4, r4, #1
   25440:	cmp	r3, r4
   25444:	str	r5, [sl]
   25448:	beq	254a8 <ASN1_STRING_length@plt+0x13534>
   2544c:	ldr	r1, [sp, #16]
   25450:	lsl	r2, r4, #4
   25454:	add	r3, r1, r2
   25458:	ldrd	r8, [r1, r2]
   2545c:	ldr	r6, [r3, #12]
   25460:	ldrb	r7, [r3, #8]
   25464:	mov	r0, r6
   25468:	bl	11c44 <strlen@plt>
   2546c:	mov	r2, r0
   25470:	add	r2, r2, #1
   25474:	add	r0, r0, #17
   25478:	str	r2, [sp, #4]
   2547c:	bl	11d64 <malloc@plt>
   25480:	ldr	r2, [sp, #4]
   25484:	subs	fp, r0, #0
   25488:	bne	25410 <ASN1_STRING_length@plt+0x1349c>
   2548c:	bl	11f38 <__errno_location@plt>
   25490:	ldr	r6, [r0]
   25494:	mov	r0, r5
   25498:	rsb	r3, r6, #0
   2549c:	str	r3, [sp, #8]
   254a0:	bl	253a0 <ASN1_STRING_length@plt+0x1342c>
   254a4:	str	fp, [sl]
   254a8:	ldr	r0, [sp, #16]
   254ac:	bl	11ba8 <free@plt>
   254b0:	ldr	r3, [sp, #12]
   254b4:	ldr	r2, [sp, #20]
   254b8:	ldr	r0, [sp, #8]
   254bc:	ldr	r3, [r3]
   254c0:	cmp	r2, r3
   254c4:	bne	25510 <ASN1_STRING_length@plt+0x1359c>
   254c8:	add	sp, sp, #28
   254cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   254d0:	bl	11f38 <__errno_location@plt>
   254d4:	ldr	r6, [r0]
   254d8:	rsb	r3, r6, #0
   254dc:	str	r3, [sp, #8]
   254e0:	b	254b0 <ASN1_STRING_length@plt+0x1353c>
   254e4:	mov	r0, fp
   254e8:	bl	11ba8 <free@plt>
   254ec:	ldr	r0, [sl]
   254f0:	bl	253a0 <ASN1_STRING_length@plt+0x1342c>
   254f4:	mvn	r3, #11
   254f8:	str	r3, [sp, #8]
   254fc:	str	r5, [sl]
   25500:	b	254a8 <ASN1_STRING_length@plt+0x13534>
   25504:	mvn	r3, #1
   25508:	str	r3, [sp, #8]
   2550c:	b	254b0 <ASN1_STRING_length@plt+0x1353c>
   25510:	bl	11d88 <__stack_chk_fail@plt>
   25514:	ldr	r3, [pc, #32]	; 2553c <ASN1_STRING_length@plt+0x135c8>
   25518:	ldr	r1, [pc, #32]	; 25540 <ASN1_STRING_length@plt+0x135cc>
   2551c:	ldr	r0, [pc, #32]	; 25544 <ASN1_STRING_length@plt+0x135d0>
   25520:	add	r3, pc, r3
   25524:	ldr	r2, [pc, #28]	; 25548 <ASN1_STRING_length@plt+0x135d4>
   25528:	add	r1, pc, r1
   2552c:	add	r0, pc, r0
   25530:	bl	11b6c <__assert_fail@plt>
   25534:	andeq	sl, r1, r8, asr #20
   25538:	strdeq	r0, [r0], -r8
   2553c:	andeq	r9, r0, r4, lsr #7
   25540:	andeq	r9, r0, r8, lsl #13
   25544:	andeq	r9, r0, r4, ror fp
   25548:	andeq	r0, r0, r3, asr #21
   2554c:	ldrb	r3, [r0]
   25550:	cmp	r3, #0
   25554:	bxeq	lr
   25558:	ldr	r0, [r0, #24]
   2555c:	b	11ba8 <free@plt>
   25560:	ldr	r1, [r0, #16]
   25564:	ldr	r0, [r0, #24]
   25568:	b	11e30 <munmap@plt>
   2556c:	ldr	r3, [pc, #172]	; 25620 <ASN1_STRING_length@plt+0x136ac>
   25570:	ldr	r1, [pc, #172]	; 25624 <ASN1_STRING_length@plt+0x136b0>
   25574:	add	r3, pc, r3
   25578:	push	{r4, r5, r6, r7, lr}
   2557c:	sub	sp, sp, #132	; 0x84
   25580:	ldr	r5, [r3, r1]
   25584:	mov	r4, r0
   25588:	ldr	r1, [r0, #4]
   2558c:	ldr	r3, [r5]
   25590:	add	r2, sp, #16
   25594:	mov	r0, #3
   25598:	str	r3, [sp, #124]	; 0x7c
   2559c:	bl	11b78 <__fxstat64@plt>
   255a0:	cmp	r0, #0
   255a4:	blt	2560c <ASN1_STRING_length@plt+0x13698>
   255a8:	ldr	r3, [r4, #4]
   255ac:	ldr	r2, [sp, #68]	; 0x44
   255b0:	ldr	r1, [sp, #64]	; 0x40
   255b4:	mov	r6, #0
   255b8:	mov	r7, #0
   255bc:	str	r2, [r4, #20]
   255c0:	str	r1, [r4, #16]
   255c4:	mov	r2, #1
   255c8:	str	r3, [sp]
   255cc:	strd	r6, [sp, #8]
   255d0:	mov	r3, #2
   255d4:	mov	r0, #0
   255d8:	bl	11d70 <mmap64@plt>
   255dc:	cmn	r0, #1
   255e0:	movne	r3, #1
   255e4:	str	r0, [r4, #24]
   255e8:	strbne	r3, [r4, #8]
   255ec:	movne	r0, #0
   255f0:	beq	2560c <ASN1_STRING_length@plt+0x13698>
   255f4:	ldr	r2, [sp, #124]	; 0x7c
   255f8:	ldr	r3, [r5]
   255fc:	cmp	r2, r3
   25600:	bne	2561c <ASN1_STRING_length@plt+0x136a8>
   25604:	add	sp, sp, #132	; 0x84
   25608:	pop	{r4, r5, r6, r7, pc}
   2560c:	bl	11f38 <__errno_location@plt>
   25610:	ldr	r0, [r0]
   25614:	rsb	r0, r0, #0
   25618:	b	255f4 <ASN1_STRING_length@plt+0x13680>
   2561c:	bl	11d88 <__stack_chk_fail@plt>
   25620:	andeq	sl, r1, r0, lsl #17
   25624:	strdeq	r0, [r0], -r8
   25628:	ldr	r2, [pc, #900]	; 259b4 <ASN1_STRING_length@plt+0x13a40>
   2562c:	ldr	r3, [pc, #900]	; 259b8 <ASN1_STRING_length@plt+0x13a44>
   25630:	add	r2, pc, r2
   25634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25638:	sub	sp, sp, #16384	; 0x4000
   2563c:	ldr	r3, [r2, r3]
   25640:	sub	sp, sp, #52	; 0x34
   25644:	mov	r4, r0
   25648:	mov	r0, r3
   2564c:	add	r2, sp, #16384	; 0x4000
   25650:	ldr	lr, [r0]
   25654:	add	r2, r2, #44	; 0x2c
   25658:	add	r9, sp, #8192	; 0x2000
   2565c:	mov	ip, #0
   25660:	mov	r0, #8192	; 0x2000
   25664:	add	r9, r9, #44	; 0x2c
   25668:	str	lr, [r2]
   2566c:	add	r2, sp, #44	; 0x2c
   25670:	str	r3, [sp, #36]	; 0x24
   25674:	str	r1, [sp, #32]
   25678:	mov	r3, ip
   2567c:	str	ip, [r4, #4]
   25680:	mov	r7, ip
   25684:	mov	sl, ip
   25688:	mov	fp, ip
   2568c:	str	r9, [r4, #16]
   25690:	str	r0, [r4, #20]
   25694:	str	r0, [sp, #28]
   25698:	str	r2, [sp, #24]
   2569c:	b	256b4 <ASN1_STRING_length@plt+0x13740>
   256a0:	cmp	r5, #0
   256a4:	bne	257b8 <ASN1_STRING_length@plt+0x13844>
   256a8:	mov	r7, r8
   256ac:	mov	sl, r6
   256b0:	ldr	r3, [r4, #4]
   256b4:	cmp	r3, #0
   256b8:	bne	256e8 <ASN1_STRING_length@plt+0x13774>
   256bc:	ldr	r3, [sp, #32]
   256c0:	mov	r2, #8192	; 0x2000
   256c4:	ldr	r1, [sp, #24]
   256c8:	ldr	r0, [r3, #4]
   256cc:	bl	11bb4 <read@plt>
   256d0:	cmp	r0, #0
   256d4:	blt	2579c <ASN1_STRING_length@plt+0x13828>
   256d8:	ldr	r3, [sp, #24]
   256dc:	moveq	fp, #3
   256e0:	str	r3, [r4]
   256e4:	str	r0, [r4, #4]
   256e8:	mov	r1, fp
   256ec:	mov	r0, r4
   256f0:	bl	11d1c <lzma_code@plt>
   256f4:	ldr	r2, [r4, #20]
   256f8:	clz	r3, r2
   256fc:	lsr	r3, r3, #5
   25700:	cmp	r0, #0
   25704:	movne	r3, #1
   25708:	cmp	r3, #0
   2570c:	mov	r5, r0
   25710:	beq	256b0 <ASN1_STRING_length@plt+0x1373c>
   25714:	rsb	r2, r2, #8192	; 0x2000
   25718:	add	r8, r7, r2
   2571c:	mov	r1, r8
   25720:	mov	r0, sl
   25724:	str	r2, [sp, #20]
   25728:	bl	11ec0 <realloc@plt>
   2572c:	ldr	r2, [sp, #20]
   25730:	subs	r6, r0, #0
   25734:	beq	2579c <ASN1_STRING_length@plt+0x13828>
   25738:	add	r0, r6, r7
   2573c:	mov	r1, r9
   25740:	bl	11c5c <memcpy@plt>
   25744:	ldr	r3, [sp, #28]
   25748:	cmp	r5, #1
   2574c:	str	r9, [r4, #16]
   25750:	str	r3, [r4, #20]
   25754:	bne	256a0 <ASN1_STRING_length@plt+0x1372c>
   25758:	ldr	r3, [sp, #32]
   2575c:	mov	r4, #0
   25760:	strb	r5, [r3]
   25764:	str	r6, [r3, #24]
   25768:	str	r8, [r3, #16]
   2576c:	str	r4, [r3, #20]
   25770:	add	r3, sp, #16384	; 0x4000
   25774:	add	r3, r3, #44	; 0x2c
   25778:	ldr	r2, [r3]
   2577c:	ldr	r3, [sp, #36]	; 0x24
   25780:	mov	r0, r4
   25784:	ldr	r3, [r3]
   25788:	cmp	r2, r3
   2578c:	bne	259b0 <ASN1_STRING_length@plt+0x13a3c>
   25790:	add	sp, sp, #16384	; 0x4000
   25794:	add	sp, sp, #52	; 0x34
   25798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2579c:	bl	11f38 <__errno_location@plt>
   257a0:	mov	r6, sl
   257a4:	ldr	r4, [r0]
   257a8:	rsb	r4, r4, #0
   257ac:	mov	r0, r6
   257b0:	bl	11ba8 <free@plt>
   257b4:	b	25770 <ASN1_STRING_length@plt+0x137fc>
   257b8:	ldr	r3, [sp, #32]
   257bc:	sub	r5, r5, #5
   257c0:	ldr	r0, [r3, #32]
   257c4:	cmp	r5, #5
   257c8:	addls	pc, pc, r5, lsl #2
   257cc:	b	2592c <ASN1_STRING_length@plt+0x139b8>
   257d0:	b	258d4 <ASN1_STRING_length@plt+0x13960>
   257d4:	b	2592c <ASN1_STRING_length@plt+0x139b8>
   257d8:	b	2588c <ASN1_STRING_length@plt+0x13918>
   257dc:	b	25844 <ASN1_STRING_length@plt+0x138d0>
   257e0:	b	257fc <ASN1_STRING_length@plt+0x13888>
   257e4:	b	257e8 <ASN1_STRING_length@plt+0x13874>
   257e8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   257ec:	cmp	r0, #2
   257f0:	bgt	25974 <ASN1_STRING_length@plt+0x13a00>
   257f4:	mvn	r4, #21
   257f8:	b	257ac <ASN1_STRING_length@plt+0x13838>
   257fc:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25800:	cmp	r0, #2
   25804:	ble	257f4 <ASN1_STRING_length@plt+0x13880>
   25808:	ldr	r1, [sp, #32]
   2580c:	ldr	r2, [pc, #424]	; 259bc <ASN1_STRING_length@plt+0x13a48>
   25810:	ldr	r3, [pc, #424]	; 259c0 <ASN1_STRING_length@plt+0x13a4c>
   25814:	add	r2, pc, r2
   25818:	ldr	r0, [r1, #32]
   2581c:	str	r2, [sp, #4]
   25820:	ldr	r2, [pc, #412]	; 259c4 <ASN1_STRING_length@plt+0x13a50>
   25824:	add	r3, pc, r3
   25828:	str	r3, [sp]
   2582c:	add	r2, pc, r2
   25830:	mov	r3, #77	; 0x4d
   25834:	mov	r1, #3
   25838:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   2583c:	mvn	r4, #21
   25840:	b	257ac <ASN1_STRING_length@plt+0x13838>
   25844:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25848:	cmp	r0, #2
   2584c:	ble	257f4 <ASN1_STRING_length@plt+0x13880>
   25850:	ldr	r1, [sp, #32]
   25854:	ldr	r2, [pc, #364]	; 259c8 <ASN1_STRING_length@plt+0x13a54>
   25858:	ldr	r3, [pc, #364]	; 259cc <ASN1_STRING_length@plt+0x13a58>
   2585c:	add	r2, pc, r2
   25860:	ldr	r0, [r1, #32]
   25864:	str	r2, [sp, #4]
   25868:	ldr	r2, [pc, #352]	; 259d0 <ASN1_STRING_length@plt+0x13a5c>
   2586c:	add	r3, pc, r3
   25870:	str	r3, [sp]
   25874:	add	r2, pc, r2
   25878:	mov	r3, #74	; 0x4a
   2587c:	mov	r1, #3
   25880:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   25884:	mvn	r4, #21
   25888:	b	257ac <ASN1_STRING_length@plt+0x13838>
   2588c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25890:	cmp	r0, #2
   25894:	ble	257f4 <ASN1_STRING_length@plt+0x13880>
   25898:	ldr	r1, [sp, #32]
   2589c:	ldr	r2, [pc, #304]	; 259d4 <ASN1_STRING_length@plt+0x13a60>
   258a0:	ldr	r3, [pc, #304]	; 259d8 <ASN1_STRING_length@plt+0x13a64>
   258a4:	add	r2, pc, r2
   258a8:	ldr	r0, [r1, #32]
   258ac:	str	r2, [sp, #4]
   258b0:	ldr	r2, [pc, #292]	; 259dc <ASN1_STRING_length@plt+0x13a68>
   258b4:	add	r3, pc, r3
   258b8:	str	r3, [sp]
   258bc:	add	r2, pc, r2
   258c0:	mov	r3, #71	; 0x47
   258c4:	mov	r1, #3
   258c8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   258cc:	mvn	r4, #21
   258d0:	b	257ac <ASN1_STRING_length@plt+0x13838>
   258d4:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   258d8:	cmp	r0, #2
   258dc:	ble	257f4 <ASN1_STRING_length@plt+0x13880>
   258e0:	ldr	r3, [sp, #32]
   258e4:	mov	r0, #12
   258e8:	mvn	r4, #21
   258ec:	ldr	r5, [r3, #32]
   258f0:	bl	119f8 <strerror@plt>
   258f4:	ldr	r2, [pc, #228]	; 259e0 <ASN1_STRING_length@plt+0x13a6c>
   258f8:	ldr	r3, [pc, #228]	; 259e4 <ASN1_STRING_length@plt+0x13a70>
   258fc:	add	r2, pc, r2
   25900:	str	r2, [sp, #4]
   25904:	ldr	r2, [pc, #220]	; 259e8 <ASN1_STRING_length@plt+0x13a74>
   25908:	add	r3, pc, r3
   2590c:	str	r3, [sp]
   25910:	add	r2, pc, r2
   25914:	mov	r3, #68	; 0x44
   25918:	mov	r1, #3
   2591c:	str	r0, [sp, #8]
   25920:	mov	r0, r5
   25924:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   25928:	b	257ac <ASN1_STRING_length@plt+0x13838>
   2592c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25930:	cmp	r0, #2
   25934:	ble	257f4 <ASN1_STRING_length@plt+0x13880>
   25938:	ldr	r1, [sp, #32]
   2593c:	ldr	r2, [pc, #168]	; 259ec <ASN1_STRING_length@plt+0x13a78>
   25940:	ldr	r3, [pc, #168]	; 259f0 <ASN1_STRING_length@plt+0x13a7c>
   25944:	add	r2, pc, r2
   25948:	ldr	r0, [r1, #32]
   2594c:	str	r2, [sp, #4]
   25950:	ldr	r2, [pc, #156]	; 259f4 <ASN1_STRING_length@plt+0x13a80>
   25954:	add	r3, pc, r3
   25958:	str	r3, [sp]
   2595c:	add	r2, pc, r2
   25960:	mov	r3, #83	; 0x53
   25964:	mov	r1, #3
   25968:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   2596c:	mvn	r4, #21
   25970:	b	257ac <ASN1_STRING_length@plt+0x13838>
   25974:	ldr	r1, [sp, #32]
   25978:	ldr	r2, [pc, #120]	; 259f8 <ASN1_STRING_length@plt+0x13a84>
   2597c:	ldr	r3, [pc, #120]	; 259fc <ASN1_STRING_length@plt+0x13a88>
   25980:	add	r2, pc, r2
   25984:	ldr	r0, [r1, #32]
   25988:	str	r2, [sp, #4]
   2598c:	ldr	r2, [pc, #108]	; 25a00 <ASN1_STRING_length@plt+0x13a8c>
   25990:	add	r3, pc, r3
   25994:	str	r3, [sp]
   25998:	add	r2, pc, r2
   2599c:	mov	r3, #80	; 0x50
   259a0:	mov	r1, #3
   259a4:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   259a8:	mvn	r4, #21
   259ac:	b	257ac <ASN1_STRING_length@plt+0x13838>
   259b0:	bl	11d88 <__stack_chk_fail@plt>
   259b4:	andeq	sl, r1, r4, asr #15
   259b8:	strdeq	r0, [r0], -r8
   259bc:	andeq	r9, r0, r8, asr #19
   259c0:	andeq	r9, r0, r0, lsr r9
   259c4:	andeq	r9, r0, r4, asr #18
   259c8:	andeq	r9, r0, r8, asr r9
   259cc:	andeq	r9, r0, r8, ror #17
   259d0:	strdeq	r9, [r0], -ip
   259d4:	strdeq	r9, [r0], -r0
   259d8:	andeq	r9, r0, r0, lsr #17
   259dc:			; <UNDEFINED> instruction: 0x000098b4
   259e0:	muleq	r0, r0, r8
   259e4:	andeq	r9, r0, ip, asr #16
   259e8:	andeq	r9, r0, r0, ror #16
   259ec:	ldrdeq	r9, [r0], -r0
   259f0:	andeq	r9, r0, r0, lsl #16
   259f4:	andeq	r9, r0, r4, lsl r8
   259f8:	andeq	r9, r0, r4, ror r8
   259fc:	andeq	r9, r0, r4, asr #15
   25a00:	ldrdeq	r9, [r0], -r8
   25a04:	ldr	r3, [pc, #312]	; 25b44 <ASN1_STRING_length@plt+0x13bd0>
   25a08:	ldr	r2, [pc, #312]	; 25b48 <ASN1_STRING_length@plt+0x13bd4>
   25a0c:	add	r3, pc, r3
   25a10:	push	{r4, r5, r6, lr}
   25a14:	sub	sp, sp, #112	; 0x70
   25a18:	ldr	r5, [r3, r2]
   25a1c:	add	r4, sp, #16
   25a20:	mov	r2, #88	; 0x58
   25a24:	ldr	ip, [r5]
   25a28:	mov	r1, #0
   25a2c:	mov	r6, r0
   25a30:	mov	r0, r4
   25a34:	str	ip, [sp, #108]	; 0x6c
   25a38:	bl	11b18 <memset@plt>
   25a3c:	mov	r3, #8
   25a40:	str	r3, [sp]
   25a44:	mov	r0, r4
   25a48:	mvn	r2, #0
   25a4c:	mvn	r3, #0
   25a50:	bl	11ed8 <lzma_stream_decoder@plt>
   25a54:	cmp	r0, #5
   25a58:	beq	25ae4 <ASN1_STRING_length@plt+0x13b70>
   25a5c:	cmp	r0, #0
   25a60:	bne	25a98 <ASN1_STRING_length@plt+0x13b24>
   25a64:	mov	r1, r6
   25a68:	mov	r0, r4
   25a6c:	bl	25628 <ASN1_STRING_length@plt+0x136b4>
   25a70:	mov	r6, r0
   25a74:	mov	r0, r4
   25a78:	bl	11de8 <lzma_end@plt>
   25a7c:	ldr	r2, [sp, #108]	; 0x6c
   25a80:	ldr	r3, [r5]
   25a84:	mov	r0, r6
   25a88:	cmp	r2, r3
   25a8c:	bne	25b40 <ASN1_STRING_length@plt+0x13bcc>
   25a90:	add	sp, sp, #112	; 0x70
   25a94:	pop	{r4, r5, r6, pc}
   25a98:	ldr	r0, [r6, #32]
   25a9c:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25aa0:	cmp	r0, #2
   25aa4:	mvnle	r6, #21
   25aa8:	ble	25a7c <ASN1_STRING_length@plt+0x13b08>
   25aac:	ldr	r2, [pc, #152]	; 25b4c <ASN1_STRING_length@plt+0x13bd8>
   25ab0:	ldr	r3, [pc, #152]	; 25b50 <ASN1_STRING_length@plt+0x13bdc>
   25ab4:	add	r2, pc, r2
   25ab8:	ldr	r0, [r6, #32]
   25abc:	str	r2, [sp, #4]
   25ac0:	ldr	r2, [pc, #140]	; 25b54 <ASN1_STRING_length@plt+0x13be0>
   25ac4:	add	r3, pc, r3
   25ac8:	str	r3, [sp]
   25acc:	add	r2, pc, r2
   25ad0:	mov	r3, #154	; 0x9a
   25ad4:	mov	r1, #3
   25ad8:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   25adc:	mvn	r6, #21
   25ae0:	b	25a7c <ASN1_STRING_length@plt+0x13b08>
   25ae4:	ldr	r0, [r6, #32]
   25ae8:	bl	1bf1c <ASN1_STRING_length@plt+0x9fa8>
   25aec:	cmp	r0, #2
   25af0:	mvnle	r6, #11
   25af4:	ble	25a7c <ASN1_STRING_length@plt+0x13b08>
   25af8:	mov	r0, #12
   25afc:	ldr	r4, [r6, #32]
   25b00:	bl	119f8 <strerror@plt>
   25b04:	ldr	r2, [pc, #76]	; 25b58 <ASN1_STRING_length@plt+0x13be4>
   25b08:	ldr	r3, [pc, #76]	; 25b5c <ASN1_STRING_length@plt+0x13be8>
   25b0c:	add	r2, pc, r2
   25b10:	str	r2, [sp, #4]
   25b14:	ldr	r2, [pc, #68]	; 25b60 <ASN1_STRING_length@plt+0x13bec>
   25b18:	add	r3, pc, r3
   25b1c:	str	r3, [sp]
   25b20:	add	r2, pc, r2
   25b24:	mov	r3, #151	; 0x97
   25b28:	mov	r1, #3
   25b2c:	mvn	r6, #11
   25b30:	str	r0, [sp, #8]
   25b34:	mov	r0, r4
   25b38:	bl	1be90 <ASN1_STRING_length@plt+0x9f1c>
   25b3c:	b	25a7c <ASN1_STRING_length@plt+0x13b08>
   25b40:	bl	11d88 <__stack_chk_fail@plt>
   25b44:	andeq	sl, r1, r8, ror #7
   25b48:	strdeq	r0, [r0], -r8
   25b4c:	andeq	r9, r0, r0, ror #14
   25b50:	andeq	r9, r0, r8, lsl #13
   25b54:	andeq	r9, r0, r4, lsr #13
   25b58:	andeq	r9, r0, r0, lsl #13
   25b5c:	andeq	r9, r0, r4, lsr r6
   25b60:	andeq	r9, r0, r0, asr r6
   25b64:	push	{r4, lr}
   25b68:	mov	r4, r0
   25b6c:	ldr	r0, [r0, #36]	; 0x24
   25b70:	cmp	r0, #0
   25b74:	popne	{r4, pc}
   25b78:	ldrd	r2, [r4, #16]
   25b7c:	ldr	r0, [r4, #24]
   25b80:	bl	25e20 <ASN1_STRING_length@plt+0x13eac>
   25b84:	str	r0, [r4, #36]	; 0x24
   25b88:	pop	{r4, pc}
   25b8c:	ldr	r3, [pc, #384]	; 25d14 <ASN1_STRING_length@plt+0x13da0>
   25b90:	ldr	r2, [pc, #384]	; 25d18 <ASN1_STRING_length@plt+0x13da4>
   25b94:	add	r3, pc, r3
   25b98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25b9c:	add	fp, sp, #28
   25ba0:	sub	sp, sp, #16
   25ba4:	ldr	r7, [r3, r2]
   25ba8:	mov	r9, r0
   25bac:	mov	r4, r1
   25bb0:	ldr	r2, [r7]
   25bb4:	mov	r1, #40	; 0x28
   25bb8:	mov	r0, #1
   25bbc:	str	r2, [fp, #-32]	; 0xffffffe0
   25bc0:	bl	11ae8 <calloc@plt>
   25bc4:	subs	r5, r0, #0
   25bc8:	beq	25c50 <ASN1_STRING_length@plt+0x13cdc>
   25bcc:	mov	r0, r4
   25bd0:	mov	r1, #524288	; 0x80000
   25bd4:	bl	11ca4 <open64@plt>
   25bd8:	cmp	r0, #0
   25bdc:	str	r0, [r5, #4]
   25be0:	blt	25c6c <ASN1_STRING_length@plt+0x13cf8>
   25be4:	sub	sp, sp, #8
   25be8:	mov	r4, #0
   25bec:	add	r8, sp, #8
   25bf0:	mov	r1, r8
   25bf4:	mov	r2, #7
   25bf8:	strb	r4, [r5, #8]
   25bfc:	bl	1b6e0 <ASN1_STRING_length@plt+0x976c>
   25c00:	mov	r2, #0
   25c04:	mov	r3, #0
   25c08:	mov	r6, r0
   25c0c:	ldr	r0, [r5, #4]
   25c10:	str	r4, [sp]
   25c14:	bl	11d58 <lseek64@plt>
   25c18:	cmp	r6, #6
   25c1c:	beq	25c80 <ASN1_STRING_length@plt+0x13d0c>
   25c20:	cmp	r6, #0
   25c24:	movge	r6, #22
   25c28:	rsblt	r6, r6, #0
   25c2c:	ldr	r0, [r5, #4]
   25c30:	cmp	r0, #0
   25c34:	blt	25c3c <ASN1_STRING_length@plt+0x13cc8>
   25c38:	bl	11d04 <close@plt>
   25c3c:	mov	r0, r5
   25c40:	bl	11ba8 <free@plt>
   25c44:	bl	11f38 <__errno_location@plt>
   25c48:	mov	r5, #0
   25c4c:	str	r6, [r0]
   25c50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25c54:	ldr	r3, [r7]
   25c58:	mov	r0, r5
   25c5c:	cmp	r2, r3
   25c60:	bne	25d10 <ASN1_STRING_length@plt+0x13d9c>
   25c64:	sub	sp, fp, #28
   25c68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25c6c:	bl	11f38 <__errno_location@plt>
   25c70:	ldr	r6, [r0]
   25c74:	cmp	r6, #0
   25c78:	ble	25c50 <ASN1_STRING_length@plt+0x13cdc>
   25c7c:	b	25c3c <ASN1_STRING_length@plt+0x13cc8>
   25c80:	ldr	r4, [pc, #148]	; 25d1c <ASN1_STRING_length@plt+0x13da8>
   25c84:	ldr	r1, [pc, #148]	; 25d20 <ASN1_STRING_length@plt+0x13dac>
   25c88:	mov	r2, r6
   25c8c:	add	r4, pc, r4
   25c90:	add	r1, pc, r1
   25c94:	b	25cac <ASN1_STRING_length@plt+0x13d38>
   25c98:	ldr	r3, [r4, #24]
   25c9c:	cmp	r3, #0
   25ca0:	beq	25ccc <ASN1_STRING_length@plt+0x13d58>
   25ca4:	ldr	r1, [r4, #20]
   25ca8:	ldr	r2, [r4, #16]!
   25cac:	mov	r0, r8
   25cb0:	bl	11a40 <memcmp@plt>
   25cb4:	cmp	r0, #0
   25cb8:	bne	25c98 <ASN1_STRING_length@plt+0x13d24>
   25cbc:	add	r3, r4, #8
   25cc0:	str	r3, [r5, #28]
   25cc4:	ldr	r3, [r4, #8]
   25cc8:	b	25cdc <ASN1_STRING_length@plt+0x13d68>
   25ccc:	ldr	r3, [r5, #28]
   25cd0:	cmp	r3, #0
   25cd4:	beq	25cf8 <ASN1_STRING_length@plt+0x13d84>
   25cd8:	ldr	r3, [r3]
   25cdc:	mov	r0, r5
   25ce0:	blx	r3
   25ce4:	str	r9, [r5, #32]
   25ce8:	cmp	r0, #0
   25cec:	bge	25c50 <ASN1_STRING_length@plt+0x13cdc>
   25cf0:	rsb	r6, r0, #0
   25cf4:	b	25c2c <ASN1_STRING_length@plt+0x13cb8>
   25cf8:	ldr	r2, [pc, #36]	; 25d24 <ASN1_STRING_length@plt+0x13db0>
   25cfc:	ldr	r3, [pc, #36]	; 25d28 <ASN1_STRING_length@plt+0x13db4>
   25d00:	add	r2, pc, r2
   25d04:	add	r3, pc, r3
   25d08:	str	r2, [r5, #28]
   25d0c:	b	25cdc <ASN1_STRING_length@plt+0x13d68>
   25d10:	bl	11d88 <__stack_chk_fail@plt>
   25d14:	andeq	sl, r1, r0, ror #4
   25d18:	strdeq	r0, [r0], -r8
   25d1c:	strdeq	r9, [r1], -r4
   25d20:	ldrdeq	r9, [r0], -r8
   25d24:	andeq	r9, r1, r0, lsr #31
   25d28:			; <UNDEFINED> instruction: 0xfffff860
   25d2c:	ldr	r0, [r0, #24]
   25d30:	bx	lr
   25d34:	ldrd	r0, [r0, #16]
   25d38:	bx	lr
   25d3c:	ldrb	r0, [r0, #8]
   25d40:	bx	lr
   25d44:	ldr	r0, [r0, #4]
   25d48:	bx	lr
   25d4c:	push	{r4, lr}
   25d50:	mov	r4, r0
   25d54:	ldr	r0, [r0, #36]	; 0x24
   25d58:	cmp	r0, #0
   25d5c:	beq	25d64 <ASN1_STRING_length@plt+0x13df0>
   25d60:	bl	265e4 <ASN1_STRING_length@plt+0x14670>
   25d64:	ldr	r3, [r4, #28]
   25d68:	mov	r0, r4
   25d6c:	ldr	r3, [r3, #4]
   25d70:	blx	r3
   25d74:	ldr	r0, [r4, #4]
   25d78:	cmp	r0, #0
   25d7c:	blt	25d84 <ASN1_STRING_length@plt+0x13e10>
   25d80:	bl	11d04 <close@plt>
   25d84:	mov	r0, r4
   25d88:	pop	{r4, lr}
   25d8c:	b	11ba8 <free@plt>
   25d90:	ldr	r3, [pc, #28]	; 25db4 <ASN1_STRING_length@plt+0x13e40>
   25d94:	ldr	r1, [pc, #28]	; 25db8 <ASN1_STRING_length@plt+0x13e44>
   25d98:	ldr	r0, [pc, #28]	; 25dbc <ASN1_STRING_length@plt+0x13e48>
   25d9c:	push	{r4, lr}
   25da0:	add	r3, pc, r3
   25da4:	mov	r2, #202	; 0xca
   25da8:	add	r1, pc, r1
   25dac:	add	r0, pc, r0
   25db0:	bl	11b6c <__assert_fail@plt>
   25db4:	andeq	r9, r0, r4, lsr #9
   25db8:	andeq	r9, r0, r8, asr #9
   25dbc:	andeq	r9, r0, r0, ror #9
   25dc0:	ldr	r3, [pc, #28]	; 25de4 <ASN1_STRING_length@plt+0x13e70>
   25dc4:	ldr	r1, [pc, #28]	; 25de8 <ASN1_STRING_length@plt+0x13e74>
   25dc8:	ldr	r0, [pc, #28]	; 25dec <ASN1_STRING_length@plt+0x13e78>
   25dcc:	push	{r4, lr}
   25dd0:	add	r3, pc, r3
   25dd4:	mov	r2, #137	; 0x89
   25dd8:	add	r1, pc, r1
   25ddc:	add	r0, pc, r0
   25de0:	bl	11b6c <__assert_fail@plt>
   25de4:	andeq	r9, r0, r4, ror #8
   25de8:	muleq	r0, r8, r4
   25dec:	andeq	r9, r0, r4, ror #9
   25df0:	ldr	r3, [pc, #28]	; 25e14 <ASN1_STRING_length@plt+0x13ea0>
   25df4:	ldr	r1, [pc, #28]	; 25e18 <ASN1_STRING_length@plt+0x13ea4>
   25df8:	ldr	r0, [pc, #28]	; 25e1c <ASN1_STRING_length@plt+0x13ea8>
   25dfc:	push	{r4, lr}
   25e00:	add	r3, pc, r3
   25e04:	mov	r2, #214	; 0xd6
   25e08:	add	r1, pc, r1
   25e0c:	add	r0, pc, r0
   25e10:	bl	11b6c <__assert_fail@plt>
   25e14:	andeq	r9, r0, r0, asr r4
   25e18:	andeq	r9, r0, r8, ror #8
   25e1c:	muleq	r0, r4, r4
   25e20:	cmp	r3, #0
   25e24:	cmpeq	r2, #16
   25e28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25e2c:	sub	sp, sp, #84	; 0x54
   25e30:	bls	25e48 <ASN1_STRING_length@plt+0x13ed4>
   25e34:	mov	r9, r3
   25e38:	ldrb	r3, [r0]
   25e3c:	mov	sl, r0
   25e40:	cmp	r3, #127	; 0x7f
   25e44:	beq	25e64 <ASN1_STRING_length@plt+0x13ef0>
   25e48:	mov	r4, #8
   25e4c:	bl	11f38 <__errno_location@plt>
   25e50:	mov	r1, #0
   25e54:	str	r4, [r0]
   25e58:	mov	r0, r1
   25e5c:	add	sp, sp, #84	; 0x54
   25e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e64:	ldrb	r3, [r0, #1]
   25e68:	mov	r8, r2
   25e6c:	add	r2, r0, #1
   25e70:	cmp	r3, #69	; 0x45
   25e74:	bne	25e48 <ASN1_STRING_length@plt+0x13ed4>
   25e78:	ldrb	r3, [r2, #1]!
   25e7c:	cmp	r3, #76	; 0x4c
   25e80:	bne	25e48 <ASN1_STRING_length@plt+0x13ed4>
   25e84:	ldrb	r3, [r2, #1]
   25e88:	cmp	r3, #70	; 0x46
   25e8c:	bne	25e48 <ASN1_STRING_length@plt+0x13ed4>
   25e90:	ldrb	r3, [r0, #4]
   25e94:	cmp	r3, #1
   25e98:	beq	26240 <ASN1_STRING_length@plt+0x142cc>
   25e9c:	cmp	r3, #2
   25ea0:	bne	26190 <ASN1_STRING_length@plt+0x1421c>
   25ea4:	cmp	r9, #0
   25ea8:	cmpeq	r8, #64	; 0x40
   25eac:	bls	26190 <ASN1_STRING_length@plt+0x1421c>
   25eb0:	ldrb	r2, [sl, #5]
   25eb4:	mov	r3, #4
   25eb8:	cmp	r2, #1
   25ebc:	beq	2625c <ASN1_STRING_length@plt+0x142e8>
   25ec0:	cmp	r2, #2
   25ec4:	bne	26190 <ASN1_STRING_length@plt+0x1421c>
   25ec8:	orr	r4, r3, #16
   25ecc:	mov	r0, #80	; 0x50
   25ed0:	bl	11d64 <malloc@plt>
   25ed4:	subs	r1, r0, #0
   25ed8:	beq	25e58 <ASN1_STRING_length@plt+0x13ee4>
   25edc:	mov	r0, #0
   25ee0:	ands	ip, r4, #2
   25ee4:	str	sl, [r1]
   25ee8:	strd	r8, [r1, #8]
   25eec:	str	r4, [r1, #16]
   25ef0:	str	r0, [r1, #4]
   25ef4:	beq	26198 <ASN1_STRING_length@plt+0x14224>
   25ef8:	cmp	r9, #0
   25efc:	cmpeq	r8, #35	; 0x23
   25f00:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   25f04:	ands	fp, r4, #16
   25f08:	beq	262d8 <ASN1_STRING_length@plt+0x14364>
   25f0c:	mov	r2, r0
   25f10:	add	lr, sl, #31
   25f14:	add	r6, sl, #35	; 0x23
   25f18:	mov	r3, fp
   25f1c:	ldrb	r4, [lr, #1]!
   25f20:	lsl	r2, r2, #8
   25f24:	orr	r2, r2, r0, lsr #24
   25f28:	cmp	r6, lr
   25f2c:	orr	r0, r4, r0, lsl #8
   25f30:	bne	25f1c <ASN1_STRING_length@plt+0x13fa8>
   25f34:	cmp	r9, #0
   25f38:	cmpeq	r8, #49	; 0x31
   25f3c:	mov	fp, r3
   25f40:	str	r0, [r1, #24]
   25f44:	str	r2, [r1, #28]
   25f48:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   25f4c:	ldrh	r2, [sl, #46]	; 0x2e
   25f50:	ldrh	r0, [sl, #48]	; 0x30
   25f54:	cmp	r9, #0
   25f58:	rev16	r2, r2
   25f5c:	rev16	r0, r0
   25f60:	uxth	r3, r2
   25f64:	cmpeq	r8, #51	; 0x33
   25f68:	strh	r2, [r1, #34]	; 0x22
   25f6c:	str	r3, [sp, #4]
   25f70:	strh	r0, [r1, #32]
   25f74:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   25f78:	ldrh	r0, [sl, #18]
   25f7c:	ldrh	lr, [sl, #50]	; 0x32
   25f80:	rev16	r0, r0
   25f84:	rev16	lr, lr
   25f88:	uxth	r0, r0
   25f8c:	strh	lr, [r1, #40]	; 0x28
   25f90:	strh	r0, [r1, #72]	; 0x48
   25f94:	mov	r0, #40	; 0x28
   25f98:	ldr	r3, [sp, #4]
   25f9c:	cmp	r3, r0
   25fa0:	bne	2616c <ASN1_STRING_length@plt+0x141f8>
   25fa4:	ldrh	lr, [r1, #32]
   25fa8:	ldr	r3, [sp, #4]
   25fac:	ldrd	r4, [r1, #24]
   25fb0:	mov	r7, #0
   25fb4:	mul	r6, r3, lr
   25fb8:	strd	r4, [sp, #8]
   25fbc:	adds	r4, r6, r4
   25fc0:	adcs	r5, r7, r5
   25fc4:	movcs	r0, #1
   25fc8:	movcc	r0, #0
   25fcc:	cmp	r9, r5
   25fd0:	cmpeq	r8, r4
   25fd4:	orrcc	r0, r0, #1
   25fd8:	cmp	r0, #0
   25fdc:	bne	2616c <ASN1_STRING_length@plt+0x141f8>
   25fe0:	ldrh	r6, [r1, #40]	; 0x28
   25fe4:	cmp	r6, #0
   25fe8:	beq	265b4 <ASN1_STRING_length@plt+0x14640>
   25fec:	cmp	lr, r6
   25ff0:	bls	265d4 <ASN1_STRING_length@plt+0x14660>
   25ff4:	ldr	r3, [sp, #4]
   25ff8:	ldrd	r4, [sp, #8]
   25ffc:	mul	r2, r3, r6
   26000:	adds	r4, r4, r2
   26004:	adc	r5, r5, r2, asr #31
   26008:	cmp	r9, r5
   2600c:	cmpeq	r8, r4
   26010:	bls	265b0 <ASN1_STRING_length@plt+0x1463c>
   26014:	cmn	sl, r4
   26018:	asr	r5, r4, #31
   2601c:	beq	2616c <ASN1_STRING_length@plt+0x141f8>
   26020:	cmp	ip, #0
   26024:	beq	2634c <ASN1_STRING_length@plt+0x143d8>
   26028:	adds	r2, r4, #20
   2602c:	str	r2, [sp, #16]
   26030:	adc	r2, r5, #0
   26034:	str	r2, [sp, #20]
   26038:	adds	r2, r4, #24
   2603c:	str	r2, [sp, #32]
   26040:	adc	r2, r5, #0
   26044:	str	r2, [sp, #36]	; 0x24
   26048:	ldrd	r6, [sp, #32]
   2604c:	cmp	r9, r7
   26050:	cmpeq	r8, r6
   26054:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   26058:	ldr	r2, [sp, #16]
   2605c:	cmp	fp, #0
   26060:	add	ip, sl, r2
   26064:	beq	264f8 <ASN1_STRING_length@plt+0x14584>
   26068:	sub	r6, ip, #1
   2606c:	mov	lr, r0
   26070:	add	ip, ip, #3
   26074:	ldrb	r2, [r6, #1]!
   26078:	lsl	lr, lr, #8
   2607c:	orr	lr, lr, r0, lsr #24
   26080:	cmp	r6, ip
   26084:	orr	r0, r2, r0, lsl #8
   26088:	bne	26074 <ASN1_STRING_length@plt+0x14100>
   2608c:	ldrd	r2, [sp, #16]
   26090:	adds	ip, r4, #16
   26094:	str	r0, [r1, #48]	; 0x30
   26098:	cmp	r9, r3
   2609c:	cmpeq	r8, r2
   260a0:	str	lr, [r1, #52]	; 0x34
   260a4:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   260a8:	add	lr, sl, #4
   260ac:	add	lr, lr, ip
   260b0:	mov	r2, #0
   260b4:	add	ip, sl, ip
   260b8:	mov	r3, #0
   260bc:	ldrb	r6, [ip], #1
   260c0:	lsl	r0, r3, #8
   260c4:	orr	r0, r0, r2, lsr #24
   260c8:	cmp	lr, ip
   260cc:	orr	r2, r6, r2, lsl #8
   260d0:	mov	r3, r0
   260d4:	bne	260bc <ASN1_STRING_length@plt+0x14148>
   260d8:	adds	r0, r4, #4
   260dc:	str	r0, [sp, #48]	; 0x30
   260e0:	adc	r0, r5, #0
   260e4:	str	r0, [sp, #52]	; 0x34
   260e8:	ldrd	r6, [sp, #48]	; 0x30
   260ec:	strd	r2, [r1, #56]	; 0x38
   260f0:	cmp	r9, r7
   260f4:	cmpeq	r8, r6
   260f8:	addcs	sl, sl, r4
   260fc:	subcs	ip, sl, #1
   26100:	movcs	r0, #0
   26104:	addcs	sl, sl, #3
   26108:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   2610c:	ldrb	r4, [ip, #1]!
   26110:	cmp	ip, sl
   26114:	orr	r0, r4, r0, lsl #8
   26118:	bne	2610c <ASN1_STRING_length@plt+0x14198>
   2611c:	ldrd	r4, [r1, #48]	; 0x30
   26120:	str	r0, [r1, #64]	; 0x40
   26124:	adds	r8, r2, r4
   26128:	adcs	r9, r3, r5
   2612c:	bcs	2616c <ASN1_STRING_length@plt+0x141f8>
   26130:	ldrd	r6, [r1, #8]
   26134:	cmp	r9, r7
   26138:	cmpeq	r8, r6
   2613c:	bhi	2616c <ASN1_STRING_length@plt+0x141f8>
   26140:	cmp	r7, r3
   26144:	cmpeq	r6, r2
   26148:	bls	265b0 <ASN1_STRING_length@plt+0x1463c>
   2614c:	orrs	r0, r4, r5
   26150:	ldr	r0, [r1]
   26154:	beq	2616c <ASN1_STRING_length@plt+0x141f8>
   26158:	add	r2, r0, r2
   2615c:	add	r4, r2, r4
   26160:	ldrb	r3, [r4, #-1]
   26164:	cmp	r3, #0
   26168:	beq	25e58 <ASN1_STRING_length@plt+0x13ee4>
   2616c:	mov	r0, r1
   26170:	bl	11ba8 <free@plt>
   26174:	bl	11f38 <__errno_location@plt>
   26178:	mov	r3, #22
   2617c:	mov	r1, #0
   26180:	str	r3, [r0]
   26184:	mov	r0, r1
   26188:	add	sp, sp, #84	; 0x54
   2618c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26190:	mov	r4, #22
   26194:	b	25e4c <ASN1_STRING_length@plt+0x13ed8>
   26198:	cmp	r9, #0
   2619c:	cmpeq	r8, #47	; 0x2f
   261a0:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   261a4:	ands	fp, r4, #16
   261a8:	beq	26264 <ASN1_STRING_length@plt+0x142f0>
   261ac:	add	lr, sl, #39	; 0x27
   261b0:	add	r6, sl, #47	; 0x2f
   261b4:	mov	r0, ip
   261b8:	mov	r2, ip
   261bc:	mov	r3, fp
   261c0:	ldrb	r4, [lr, #1]!
   261c4:	lsl	r2, r2, #8
   261c8:	orr	r2, r2, r0, lsr #24
   261cc:	cmp	r6, lr
   261d0:	orr	r0, r4, r0, lsl #8
   261d4:	bne	261c0 <ASN1_STRING_length@plt+0x1424c>
   261d8:	cmp	r9, #0
   261dc:	cmpeq	r8, #61	; 0x3d
   261e0:	mov	fp, r3
   261e4:	str	r0, [r1, #24]
   261e8:	str	r2, [r1, #28]
   261ec:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   261f0:	ldrh	r2, [sl, #58]	; 0x3a
   261f4:	ldrh	r0, [sl, #60]	; 0x3c
   261f8:	cmp	r9, #0
   261fc:	rev16	r2, r2
   26200:	rev16	r0, r0
   26204:	uxth	r3, r2
   26208:	cmpeq	r8, #63	; 0x3f
   2620c:	strh	r2, [r1, #34]	; 0x22
   26210:	str	r3, [sp, #4]
   26214:	strh	r0, [r1, #32]
   26218:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   2621c:	ldrh	lr, [sl, #18]
   26220:	ldrh	r0, [sl, #62]	; 0x3e
   26224:	rev16	lr, lr
   26228:	rev16	r0, r0
   2622c:	uxth	lr, lr
   26230:	strh	r0, [r1, #40]	; 0x28
   26234:	mov	r0, #64	; 0x40
   26238:	strh	lr, [r1, #72]	; 0x48
   2623c:	b	25f98 <ASN1_STRING_length@plt+0x14024>
   26240:	cmp	r9, #0
   26244:	cmpeq	r8, #52	; 0x34
   26248:	bls	26190 <ASN1_STRING_length@plt+0x1421c>
   2624c:	ldrb	r2, [sl, #5]
   26250:	mov	r3, #2
   26254:	cmp	r2, #1
   26258:	bne	25ec0 <ASN1_STRING_length@plt+0x13f4c>
   2625c:	orr	r4, r3, #8
   26260:	b	25ecc <ASN1_STRING_length@plt+0x13f58>
   26264:	add	lr, sl, #48	; 0x30
   26268:	add	r6, sl, #40	; 0x28
   2626c:	mov	r0, fp
   26270:	mov	r2, fp
   26274:	mov	r3, fp
   26278:	ldrb	r4, [lr, #-1]!
   2627c:	lsl	r2, r2, #8
   26280:	orr	r2, r2, r0, lsr #24
   26284:	cmp	r6, lr
   26288:	orr	r0, r4, r0, lsl #8
   2628c:	bne	26278 <ASN1_STRING_length@plt+0x14304>
   26290:	cmp	r9, #0
   26294:	cmpeq	r8, #61	; 0x3d
   26298:	mov	fp, r3
   2629c:	str	r0, [r1, #24]
   262a0:	str	r2, [r1, #28]
   262a4:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   262a8:	ldrh	r3, [sl, #58]	; 0x3a
   262ac:	ldrh	r0, [sl, #60]	; 0x3c
   262b0:	cmp	r9, #0
   262b4:	cmpeq	r8, #63	; 0x3f
   262b8:	str	r3, [sp, #4]
   262bc:	strh	r0, [r1, #32]
   262c0:	strh	r3, [r1, #34]	; 0x22
   262c4:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   262c8:	ldrh	r0, [sl, #62]	; 0x3e
   262cc:	ldrh	lr, [sl, #18]
   262d0:	strh	r0, [r1, #40]	; 0x28
   262d4:	b	26234 <ASN1_STRING_length@plt+0x142c0>
   262d8:	add	lr, sl, #36	; 0x24
   262dc:	add	r6, sl, #32
   262e0:	mov	r0, fp
   262e4:	mov	r2, fp
   262e8:	mov	r3, fp
   262ec:	ldrb	r4, [lr, #-1]!
   262f0:	lsl	r2, r2, #8
   262f4:	orr	r2, r2, r0, lsr #24
   262f8:	cmp	r6, lr
   262fc:	orr	r0, r4, r0, lsl #8
   26300:	bne	262ec <ASN1_STRING_length@plt+0x14378>
   26304:	cmp	r9, #0
   26308:	cmpeq	r8, #49	; 0x31
   2630c:	mov	fp, r3
   26310:	str	r0, [r1, #24]
   26314:	str	r2, [r1, #28]
   26318:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   2631c:	ldrh	r3, [sl, #46]	; 0x2e
   26320:	ldrh	r0, [sl, #48]	; 0x30
   26324:	cmp	r9, #0
   26328:	cmpeq	r8, #51	; 0x33
   2632c:	str	r3, [sp, #4]
   26330:	strh	r0, [r1, #32]
   26334:	strh	r3, [r1, #34]	; 0x22
   26338:	bls	265ac <ASN1_STRING_length@plt+0x14638>
   2633c:	ldrh	lr, [sl, #50]	; 0x32
   26340:	ldrh	r0, [sl, #18]
   26344:	strh	lr, [r1, #40]	; 0x28
   26348:	b	25f90 <ASN1_STRING_length@plt+0x1401c>
   2634c:	adds	r2, r4, #32
   26350:	str	r2, [sp, #24]
   26354:	adc	r2, r5, #0
   26358:	str	r2, [sp, #28]
   2635c:	adds	r2, r4, #40	; 0x28
   26360:	str	r2, [sp, #40]	; 0x28
   26364:	adc	r2, r5, #0
   26368:	str	r2, [sp, #44]	; 0x2c
   2636c:	ldrd	r6, [sp, #40]	; 0x28
   26370:	cmp	r9, r7
   26374:	cmpeq	r8, r6
   26378:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   2637c:	ldr	r2, [sp, #24]
   26380:	cmp	fp, #0
   26384:	add	lr, sl, r2
   26388:	beq	26444 <ASN1_STRING_length@plt+0x144d0>
   2638c:	sub	r6, lr, #1
   26390:	mov	r0, ip
   26394:	add	lr, lr, #7
   26398:	ldrb	r2, [r6, #1]!
   2639c:	lsl	r0, r0, #8
   263a0:	orr	r0, r0, ip, lsr #24
   263a4:	cmp	lr, r6
   263a8:	orr	ip, r2, ip, lsl #8
   263ac:	bne	26398 <ASN1_STRING_length@plt+0x14424>
   263b0:	ldrd	r6, [sp, #24]
   263b4:	adds	r3, r4, #24
   263b8:	str	ip, [r1, #48]	; 0x30
   263bc:	cmp	r9, r7
   263c0:	cmpeq	r8, r6
   263c4:	str	r0, [r1, #52]	; 0x34
   263c8:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   263cc:	add	lr, sl, #8
   263d0:	add	lr, lr, r3
   263d4:	add	ip, sl, r3
   263d8:	mov	r2, #0
   263dc:	mov	r3, #0
   263e0:	ldrb	r6, [ip], #1
   263e4:	lsl	r0, r3, #8
   263e8:	orr	r0, r0, r2, lsr #24
   263ec:	cmp	lr, ip
   263f0:	orr	r2, r6, r2, lsl #8
   263f4:	mov	r3, r0
   263f8:	bne	263e0 <ASN1_STRING_length@plt+0x1446c>
   263fc:	adds	r0, r4, #4
   26400:	str	r0, [sp, #64]	; 0x40
   26404:	adc	r0, r5, #0
   26408:	str	r0, [sp, #68]	; 0x44
   2640c:	ldrd	r6, [sp, #64]	; 0x40
   26410:	strd	r2, [r1, #56]	; 0x38
   26414:	cmp	r9, r7
   26418:	cmpeq	r8, r6
   2641c:	addcs	sl, sl, r4
   26420:	subcs	ip, sl, #1
   26424:	movcs	r0, #0
   26428:	addcs	sl, sl, #3
   2642c:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   26430:	ldrb	r4, [ip, #1]!
   26434:	cmp	sl, ip
   26438:	orr	r0, r4, r0, lsl #8
   2643c:	bne	26430 <ASN1_STRING_length@plt+0x144bc>
   26440:	b	2611c <ASN1_STRING_length@plt+0x141a8>
   26444:	mov	ip, fp
   26448:	mov	r0, fp
   2644c:	add	r6, lr, #8
   26450:	ldrb	r2, [r6, #-1]!
   26454:	lsl	r0, r0, #8
   26458:	orr	r0, r0, ip, lsr #24
   2645c:	cmp	lr, r6
   26460:	orr	ip, r2, ip, lsl #8
   26464:	bne	26450 <ASN1_STRING_length@plt+0x144dc>
   26468:	ldrd	r2, [sp, #24]
   2646c:	adds	lr, r4, #24
   26470:	str	ip, [r1, #48]	; 0x30
   26474:	cmp	r9, r3
   26478:	cmpeq	r8, r2
   2647c:	str	r0, [r1, #52]	; 0x34
   26480:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   26484:	add	ip, lr, #8
   26488:	add	ip, sl, ip
   2648c:	add	lr, sl, lr
   26490:	mov	r2, #0
   26494:	mov	r3, #0
   26498:	ldrb	r6, [ip, #-1]!
   2649c:	lsl	r0, r3, #8
   264a0:	orr	r0, r0, r2, lsr #24
   264a4:	cmp	lr, ip
   264a8:	orr	r2, r6, r2, lsl #8
   264ac:	mov	r3, r0
   264b0:	bne	26498 <ASN1_STRING_length@plt+0x14524>
   264b4:	adds	r0, r4, #4
   264b8:	str	r0, [sp, #72]	; 0x48
   264bc:	adc	r0, r5, #0
   264c0:	str	r0, [sp, #76]	; 0x4c
   264c4:	ldrd	r6, [sp, #72]	; 0x48
   264c8:	strd	r2, [r1, #56]	; 0x38
   264cc:	cmp	r9, r7
   264d0:	cmpeq	r8, r6
   264d4:	addcs	sl, sl, r4
   264d8:	addcs	ip, sl, #4
   264dc:	movcs	r0, #0
   264e0:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   264e4:	ldrb	r4, [ip, #-1]!
   264e8:	cmp	sl, ip
   264ec:	orr	r0, r4, r0, lsl #8
   264f0:	bne	264e4 <ASN1_STRING_length@plt+0x14570>
   264f4:	b	2611c <ASN1_STRING_length@plt+0x141a8>
   264f8:	mov	lr, fp
   264fc:	mov	r0, fp
   26500:	add	r6, ip, #4
   26504:	ldrb	r2, [r6, #-1]!
   26508:	lsl	r0, r0, #8
   2650c:	orr	r0, r0, lr, lsr #24
   26510:	cmp	ip, r6
   26514:	orr	lr, r2, lr, lsl #8
   26518:	bne	26504 <ASN1_STRING_length@plt+0x14590>
   2651c:	ldrd	r6, [sp, #16]
   26520:	adds	r3, r4, #16
   26524:	str	lr, [r1, #48]	; 0x30
   26528:	cmp	r9, r7
   2652c:	cmpeq	r8, r6
   26530:	str	r0, [r1, #52]	; 0x34
   26534:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   26538:	add	ip, r3, #4
   2653c:	add	lr, sl, r3
   26540:	add	ip, sl, ip
   26544:	mov	r2, #0
   26548:	mov	r3, #0
   2654c:	ldrb	r6, [ip, #-1]!
   26550:	lsl	r0, r3, #8
   26554:	orr	r0, r0, r2, lsr #24
   26558:	cmp	ip, lr
   2655c:	orr	r2, r6, r2, lsl #8
   26560:	mov	r3, r0
   26564:	bne	2654c <ASN1_STRING_length@plt+0x145d8>
   26568:	adds	r0, r4, #4
   2656c:	str	r0, [sp, #56]	; 0x38
   26570:	adc	r0, r5, #0
   26574:	str	r0, [sp, #60]	; 0x3c
   26578:	ldrd	r6, [sp, #56]	; 0x38
   2657c:	strd	r2, [r1, #56]	; 0x38
   26580:	cmp	r9, r7
   26584:	cmpeq	r8, r6
   26588:	addcs	sl, sl, r4
   2658c:	addcs	ip, sl, #4
   26590:	movcs	r0, #0
   26594:	bcc	265ac <ASN1_STRING_length@plt+0x14638>
   26598:	ldrb	r4, [ip, #-1]!
   2659c:	cmp	ip, sl
   265a0:	orr	r0, r4, r0, lsl #8
   265a4:	bne	26598 <ASN1_STRING_length@plt+0x14624>
   265a8:	b	2611c <ASN1_STRING_length@plt+0x141a8>
   265ac:	bl	25dc0 <ASN1_STRING_length@plt+0x13e4c>
   265b0:	bl	25d90 <ASN1_STRING_length@plt+0x13e1c>
   265b4:	ldr	r3, [pc, #28]	; 265d8 <ASN1_STRING_length@plt+0x14664>
   265b8:	ldr	r1, [pc, #28]	; 265dc <ASN1_STRING_length@plt+0x14668>
   265bc:	ldr	r0, [pc, #28]	; 265e0 <ASN1_STRING_length@plt+0x1466c>
   265c0:	add	r3, pc, r3
   265c4:	mov	r2, #213	; 0xd5
   265c8:	add	r1, pc, r1
   265cc:	add	r0, pc, r0
   265d0:	bl	11b6c <__assert_fail@plt>
   265d4:	bl	25df0 <ASN1_STRING_length@plt+0x13e7c>
   265d8:	muleq	r0, r0, ip
   265dc:	andeq	r8, r0, r8, lsr #25
   265e0:	andeq	r8, r0, ip, lsr sp
   265e4:	push	{r4, lr}
   265e8:	mov	r4, r0
   265ec:	ldr	r0, [r0, #4]
   265f0:	bl	11ba8 <free@plt>
   265f4:	mov	r0, r4
   265f8:	pop	{r4, lr}
   265fc:	b	11ba8 <free@plt>
   26600:	ldr	r0, [r0]
   26604:	bx	lr
   26608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2660c:	sub	sp, sp, #140	; 0x8c
   26610:	ldrd	r4, [r0, #56]	; 0x38
   26614:	mov	r9, r0
   26618:	str	r1, [sp, #92]	; 0x5c
   2661c:	ldrd	r0, [r0, #8]
   26620:	strd	r2, [sp, #60]	; 0x3c
   26624:	ldrd	r2, [r9, #48]	; 0x30
   26628:	cmp	r5, r1
   2662c:	cmpeq	r4, r0
   26630:	strd	r2, [sp, #48]	; 0x30
   26634:	bcs	26bd4 <ASN1_STRING_length@plt+0x14c60>
   26638:	ldrh	r3, [r9, #32]
   2663c:	mov	r1, #0
   26640:	mov	r2, #0
   26644:	mov	r0, r3
   26648:	cmp	r0, #1
   2664c:	ldr	r0, [r9]
   26650:	str	r3, [sp, #68]	; 0x44
   26654:	str	r0, [sp, #84]	; 0x54
   26658:	ldr	r0, [sp, #60]	; 0x3c
   2665c:	mov	r3, #0
   26660:	str	r4, [sp, #88]	; 0x58
   26664:	str	r1, [r0]
   26668:	ldr	r1, [sp, #64]	; 0x40
   2666c:	strd	r2, [r1]
   26670:	bls	26bc4 <ASN1_STRING_length@plt+0x14c50>
   26674:	ldrd	r2, [r9, #24]
   26678:	ldrh	ip, [r9, #34]	; 0x22
   2667c:	ldrd	r0, [r9, #8]
   26680:	strd	r2, [sp, #72]	; 0x48
   26684:	adds	r2, r2, ip
   26688:	adc	r3, r3, #0
   2668c:	cmp	r3, r1
   26690:	cmpeq	r2, r0
   26694:	str	ip, [sp, #80]	; 0x50
   26698:	strd	r0, [sp]
   2669c:	bcs	268c4 <ASN1_STRING_length@plt+0x14950>
   266a0:	ldr	r8, [r9]
   266a4:	mov	sl, #1
   266a8:	add	r1, r8, #8
   266ac:	str	r1, [sp, #128]	; 0x80
   266b0:	add	r1, r8, #4
   266b4:	str	r1, [sp, #132]	; 0x84
   266b8:	cmn	r8, r2
   266bc:	asr	r3, r2, #31
   266c0:	beq	2688c <ASN1_STRING_length@plt+0x14918>
   266c4:	ldr	r1, [r9, #16]
   266c8:	tst	r1, #2
   266cc:	beq	268e4 <ASN1_STRING_length@plt+0x14970>
   266d0:	adds	r0, r2, #20
   266d4:	str	r0, [sp, #16]
   266d8:	adc	r0, r3, #0
   266dc:	str	r0, [sp, #20]
   266e0:	adds	r0, r2, #24
   266e4:	str	r0, [sp, #32]
   266e8:	adc	r0, r3, #0
   266ec:	str	r0, [sp, #36]	; 0x24
   266f0:	ldrd	r4, [sp]
   266f4:	ldrd	r6, [sp, #32]
   266f8:	cmp	r5, r7
   266fc:	cmpeq	r4, r6
   26700:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26704:	tst	r1, #16
   26708:	ldr	r1, [sp, #16]
   2670c:	add	lr, r8, r1
   26710:	beq	26ae8 <ASN1_STRING_length@plt+0x14b74>
   26714:	sub	r4, lr, #1
   26718:	mov	r6, #0
   2671c:	add	lr, lr, #3
   26720:	mov	r7, #0
   26724:	mov	r0, r8
   26728:	mov	ip, r9
   2672c:	ldrb	r8, [r4, #1]!
   26730:	lsl	r1, r7, #8
   26734:	orr	r1, r1, r6, lsr #24
   26738:	cmp	lr, r4
   2673c:	orr	r6, r8, r6, lsl #8
   26740:	mov	r7, r1
   26744:	bne	2672c <ASN1_STRING_length@plt+0x147b8>
   26748:	ldrd	r4, [sp, #16]
   2674c:	mov	r8, r0
   26750:	ldrd	r0, [sp]
   26754:	adds	fp, r2, #16
   26758:	mov	r9, ip
   2675c:	cmp	r1, r5
   26760:	cmpeq	r0, r4
   26764:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26768:	ldr	r1, [sp, #132]	; 0x84
   2676c:	add	lr, r8, fp
   26770:	mov	r4, #0
   26774:	add	fp, r1, fp
   26778:	mov	r5, #0
   2677c:	mov	r0, r8
   26780:	mov	ip, r9
   26784:	ldrb	r8, [lr], #1
   26788:	lsl	r1, r5, #8
   2678c:	orr	r1, r1, r4, lsr #24
   26790:	cmp	fp, lr
   26794:	orr	r4, r8, r4, lsl #8
   26798:	mov	r5, r1
   2679c:	bne	26784 <ASN1_STRING_length@plt+0x14810>
   267a0:	adds	r1, r2, #4
   267a4:	str	r1, [sp, #96]	; 0x60
   267a8:	adc	r1, r3, #0
   267ac:	str	r1, [sp, #100]	; 0x64
   267b0:	mov	r8, r0
   267b4:	strd	r4, [sp, #8]
   267b8:	ldrd	r0, [sp]
   267bc:	ldrd	r4, [sp, #96]	; 0x60
   267c0:	mov	r9, ip
   267c4:	cmp	r1, r5
   267c8:	cmpeq	r0, r4
   267cc:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   267d0:	add	r2, r8, r2
   267d4:	ldrd	r4, [sp, #8]
   267d8:	sub	ip, r2, #1
   267dc:	mov	r3, #0
   267e0:	add	r2, r2, #3
   267e4:	ldrb	r0, [ip, #1]!
   267e8:	cmp	r2, ip
   267ec:	orr	r3, r0, r3, lsl #8
   267f0:	bne	267e4 <ASN1_STRING_length@plt+0x14870>
   267f4:	strd	r4, [sp, #8]
   267f8:	ldrd	r4, [sp, #8]
   267fc:	ldrd	r0, [sp]
   26800:	mov	ip, r3
   26804:	adds	r2, r4, r6
   26808:	adcs	r3, r5, r7
   2680c:	movcs	lr, #1
   26810:	movcc	lr, #0
   26814:	cmp	r1, r3
   26818:	cmpeq	r0, r2
   2681c:	movcs	r0, lr
   26820:	orrcc	r0, lr, #1
   26824:	cmp	r0, #0
   26828:	bne	2688c <ASN1_STRING_length@plt+0x14918>
   2682c:	ldrd	r0, [sp, #48]	; 0x30
   26830:	mov	r3, #0
   26834:	cmp	r3, r1
   26838:	cmpeq	ip, r0
   2683c:	bcs	2688c <ASN1_STRING_length@plt+0x14918>
   26840:	ldr	r3, [sp, #88]	; 0x58
   26844:	ldr	r0, [sp, #92]	; 0x5c
   26848:	add	r1, r3, ip
   2684c:	ldr	r3, [sp, #84]	; 0x54
   26850:	add	r1, r3, r1
   26854:	bl	11f14 <strcmp@plt>
   26858:	cmp	r0, #0
   2685c:	bne	2688c <ASN1_STRING_length@plt+0x14918>
   26860:	ldrd	r2, [sp]
   26864:	cmp	r3, r5
   26868:	cmpeq	r2, r4
   2686c:	bls	26bd4 <ASN1_STRING_length@plt+0x14c60>
   26870:	ldr	r3, [sp, #60]	; 0x3c
   26874:	add	r4, r8, r4
   26878:	str	r4, [r3]
   2687c:	ldr	r3, [sp, #64]	; 0x40
   26880:	strd	r6, [r3]
   26884:	add	sp, sp, #140	; 0x8c
   26888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2688c:	add	sl, sl, #1
   26890:	ldr	r3, [sp, #68]	; 0x44
   26894:	uxth	sl, sl
   26898:	cmp	sl, r3
   2689c:	bcs	26bc4 <ASN1_STRING_length@plt+0x14c50>
   268a0:	ldr	r3, [sp, #80]	; 0x50
   268a4:	mul	r1, r3, sl
   268a8:	ldrd	r2, [sp, #72]	; 0x48
   268ac:	adds	r2, r2, r1
   268b0:	adc	r3, r3, r1, asr #31
   268b4:	ldrd	r0, [sp]
   268b8:	cmp	r1, r3
   268bc:	cmpeq	r0, r2
   268c0:	bhi	266b8 <ASN1_STRING_length@plt+0x14744>
   268c4:	ldr	r3, [pc, #780]	; 26bd8 <ASN1_STRING_length@plt+0x14c64>
   268c8:	ldr	r1, [pc, #780]	; 26bdc <ASN1_STRING_length@plt+0x14c68>
   268cc:	ldr	r0, [pc, #780]	; 26be0 <ASN1_STRING_length@plt+0x14c6c>
   268d0:	add	r3, pc, r3
   268d4:	mov	r2, #202	; 0xca
   268d8:	add	r1, pc, r1
   268dc:	add	r0, pc, r0
   268e0:	bl	11b6c <__assert_fail@plt>
   268e4:	adds	r0, r2, #32
   268e8:	str	r0, [sp, #24]
   268ec:	adc	r0, r3, #0
   268f0:	str	r0, [sp, #28]
   268f4:	adds	r0, r2, #40	; 0x28
   268f8:	str	r0, [sp, #40]	; 0x28
   268fc:	adc	r0, r3, #0
   26900:	str	r0, [sp, #44]	; 0x2c
   26904:	ldrd	r4, [sp]
   26908:	ldrd	r6, [sp, #40]	; 0x28
   2690c:	cmp	r5, r7
   26910:	cmpeq	r4, r6
   26914:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26918:	tst	r1, #16
   2691c:	ldr	r1, [sp, #24]
   26920:	add	lr, r8, r1
   26924:	beq	26a0c <ASN1_STRING_length@plt+0x14a98>
   26928:	sub	r4, lr, #1
   2692c:	mov	r6, #0
   26930:	add	lr, lr, #7
   26934:	mov	r7, #0
   26938:	mov	r0, r8
   2693c:	mov	ip, r9
   26940:	ldrb	r8, [r4, #1]!
   26944:	lsl	r1, r7, #8
   26948:	orr	r1, r1, r6, lsr #24
   2694c:	cmp	r4, lr
   26950:	orr	r6, r8, r6, lsl #8
   26954:	mov	r7, r1
   26958:	bne	26940 <ASN1_STRING_length@plt+0x149cc>
   2695c:	ldrd	r4, [sp, #24]
   26960:	mov	r8, r0
   26964:	ldrd	r0, [sp]
   26968:	adds	fp, r2, #24
   2696c:	mov	r9, ip
   26970:	cmp	r1, r5
   26974:	cmpeq	r0, r4
   26978:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   2697c:	ldr	r1, [sp, #128]	; 0x80
   26980:	add	lr, r8, fp
   26984:	mov	r4, #0
   26988:	add	fp, r1, fp
   2698c:	mov	r5, #0
   26990:	mov	r0, r8
   26994:	mov	ip, r9
   26998:	ldrb	r8, [lr], #1
   2699c:	lsl	r1, r5, #8
   269a0:	orr	r1, r1, r4, lsr #24
   269a4:	cmp	fp, lr
   269a8:	orr	r4, r8, r4, lsl #8
   269ac:	mov	r5, r1
   269b0:	bne	26998 <ASN1_STRING_length@plt+0x14a24>
   269b4:	adds	r1, r2, #4
   269b8:	str	r1, [sp, #112]	; 0x70
   269bc:	adc	r1, r3, #0
   269c0:	str	r1, [sp, #116]	; 0x74
   269c4:	mov	r8, r0
   269c8:	strd	r4, [sp, #8]
   269cc:	ldrd	r0, [sp]
   269d0:	ldrd	r4, [sp, #112]	; 0x70
   269d4:	mov	r9, ip
   269d8:	cmp	r1, r5
   269dc:	cmpeq	r0, r4
   269e0:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   269e4:	add	r2, r8, r2
   269e8:	ldrd	r4, [sp, #8]
   269ec:	sub	ip, r2, #1
   269f0:	mov	r3, #0
   269f4:	add	r2, r2, #3
   269f8:	ldrb	r0, [ip, #1]!
   269fc:	cmp	r2, ip
   26a00:	orr	r3, r0, r3, lsl #8
   26a04:	bne	269f8 <ASN1_STRING_length@plt+0x14a84>
   26a08:	b	267f4 <ASN1_STRING_length@plt+0x14880>
   26a0c:	add	r4, lr, #8
   26a10:	mov	r6, #0
   26a14:	mov	r7, #0
   26a18:	mov	r0, r8
   26a1c:	mov	ip, r9
   26a20:	ldrb	r8, [r4, #-1]!
   26a24:	lsl	r1, r7, #8
   26a28:	orr	r1, r1, r6, lsr #24
   26a2c:	cmp	lr, r4
   26a30:	orr	r6, r8, r6, lsl #8
   26a34:	mov	r7, r1
   26a38:	bne	26a20 <ASN1_STRING_length@plt+0x14aac>
   26a3c:	ldrd	r4, [sp, #24]
   26a40:	mov	r8, r0
   26a44:	ldrd	r0, [sp]
   26a48:	adds	fp, r2, #24
   26a4c:	mov	r9, ip
   26a50:	cmp	r1, r5
   26a54:	cmpeq	r0, r4
   26a58:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26a5c:	add	lr, fp, #8
   26a60:	add	lr, r8, lr
   26a64:	add	fp, r8, fp
   26a68:	mov	r4, #0
   26a6c:	mov	r5, #0
   26a70:	mov	r0, r8
   26a74:	mov	ip, r9
   26a78:	ldrb	r8, [lr, #-1]!
   26a7c:	lsl	r1, r5, #8
   26a80:	orr	r1, r1, r4, lsr #24
   26a84:	cmp	fp, lr
   26a88:	orr	r4, r8, r4, lsl #8
   26a8c:	mov	r5, r1
   26a90:	bne	26a78 <ASN1_STRING_length@plt+0x14b04>
   26a94:	adds	r1, r2, #4
   26a98:	str	r1, [sp, #120]	; 0x78
   26a9c:	adc	r1, r3, #0
   26aa0:	str	r1, [sp, #124]	; 0x7c
   26aa4:	mov	r8, r0
   26aa8:	strd	r4, [sp, #8]
   26aac:	ldrd	r0, [sp, #120]	; 0x78
   26ab0:	ldrd	r4, [sp]
   26ab4:	mov	r9, ip
   26ab8:	cmp	r1, r5
   26abc:	cmpeq	r0, r4
   26ac0:	bhi	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26ac4:	add	r2, r8, r2
   26ac8:	ldrd	r4, [sp, #8]
   26acc:	add	ip, r2, #4
   26ad0:	mov	r3, #0
   26ad4:	ldrb	r0, [ip, #-1]!
   26ad8:	cmp	r2, ip
   26adc:	orr	r3, r0, r3, lsl #8
   26ae0:	bne	26ad4 <ASN1_STRING_length@plt+0x14b60>
   26ae4:	b	267f4 <ASN1_STRING_length@plt+0x14880>
   26ae8:	add	r4, lr, #4
   26aec:	mov	r6, #0
   26af0:	mov	r7, #0
   26af4:	mov	r0, r8
   26af8:	mov	ip, r9
   26afc:	ldrb	r8, [r4, #-1]!
   26b00:	lsl	r1, r7, #8
   26b04:	orr	r1, r1, r6, lsr #24
   26b08:	cmp	lr, r4
   26b0c:	orr	r6, r8, r6, lsl #8
   26b10:	mov	r7, r1
   26b14:	bne	26afc <ASN1_STRING_length@plt+0x14b88>
   26b18:	ldrd	r4, [sp, #16]
   26b1c:	mov	r8, r0
   26b20:	ldrd	r0, [sp]
   26b24:	adds	fp, r2, #16
   26b28:	mov	r9, ip
   26b2c:	cmp	r1, r5
   26b30:	cmpeq	r0, r4
   26b34:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26b38:	add	lr, fp, #4
   26b3c:	add	lr, r8, lr
   26b40:	add	fp, r8, fp
   26b44:	mov	r4, #0
   26b48:	mov	r5, #0
   26b4c:	mov	r0, r8
   26b50:	mov	ip, r9
   26b54:	ldrb	r8, [lr, #-1]!
   26b58:	lsl	r1, r5, #8
   26b5c:	orr	r1, r1, r4, lsr #24
   26b60:	cmp	fp, lr
   26b64:	orr	r4, r8, r4, lsl #8
   26b68:	mov	r5, r1
   26b6c:	bne	26b54 <ASN1_STRING_length@plt+0x14be0>
   26b70:	adds	r1, r2, #4
   26b74:	str	r1, [sp, #104]	; 0x68
   26b78:	adc	r1, r3, #0
   26b7c:	str	r1, [sp, #108]	; 0x6c
   26b80:	mov	r8, r0
   26b84:	strd	r4, [sp, #8]
   26b88:	ldrd	r0, [sp]
   26b8c:	ldrd	r4, [sp, #104]	; 0x68
   26b90:	mov	r9, ip
   26b94:	cmp	r1, r5
   26b98:	cmpeq	r0, r4
   26b9c:	bcc	26bd0 <ASN1_STRING_length@plt+0x14c5c>
   26ba0:	add	r2, r8, r2
   26ba4:	ldrd	r4, [sp, #8]
   26ba8:	add	ip, r2, #4
   26bac:	mov	r3, #0
   26bb0:	ldrb	r0, [ip, #-1]!
   26bb4:	cmp	r2, ip
   26bb8:	orr	r3, r0, r3, lsl #8
   26bbc:	bne	26bb0 <ASN1_STRING_length@plt+0x14c3c>
   26bc0:	b	267f4 <ASN1_STRING_length@plt+0x14880>
   26bc4:	mvn	r0, #1
   26bc8:	add	sp, sp, #140	; 0x8c
   26bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26bd0:	bl	25dc0 <ASN1_STRING_length@plt+0x13e4c>
   26bd4:	bl	25d90 <ASN1_STRING_length@plt+0x13e1c>
   26bd8:	andeq	r8, r0, r4, ror r9
   26bdc:	muleq	r0, r8, r9
   26be0:			; <UNDEFINED> instruction: 0x000089b0
   26be4:	ldr	r3, [pc, #596]	; 26e40 <ASN1_STRING_length@plt+0x14ecc>
   26be8:	ldr	ip, [pc, #596]	; 26e44 <ASN1_STRING_length@plt+0x14ed0>
   26bec:	add	r3, pc, r3
   26bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26bf4:	mov	r8, r2
   26bf8:	mov	r2, r3
   26bfc:	ldr	r3, [r3, ip]
   26c00:	sub	sp, sp, #36	; 0x24
   26c04:	mov	ip, r3
   26c08:	mov	lr, #0
   26c0c:	ldr	ip, [ip]
   26c10:	str	r3, [sp, #4]
   26c14:	add	r3, sp, #16
   26c18:	str	lr, [r8]
   26c1c:	add	r2, sp, #12
   26c20:	str	ip, [sp, #28]
   26c24:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   26c28:	cmp	r0, #0
   26c2c:	blt	26ce0 <ASN1_STRING_length@plt+0x14d6c>
   26c30:	ldr	r6, [sp, #12]
   26c34:	cmp	r6, #0
   26c38:	beq	26cdc <ASN1_STRING_length@plt+0x14d68>
   26c3c:	ldrd	r4, [sp, #16]
   26c40:	orrs	r3, r4, r5
   26c44:	beq	26cdc <ASN1_STRING_length@plt+0x14d68>
   26c48:	ldrb	r3, [r6]
   26c4c:	cmp	r3, #0
   26c50:	bne	26c94 <ASN1_STRING_length@plt+0x14d20>
   26c54:	cmp	r5, #0
   26c58:	cmpeq	r4, #1
   26c5c:	bls	26cdc <ASN1_STRING_length@plt+0x14d68>
   26c60:	add	r3, r6, #1
   26c64:	b	26c74 <ASN1_STRING_length@plt+0x14d00>
   26c68:	cmp	r5, #0
   26c6c:	cmpeq	r4, #1
   26c70:	beq	26cdc <ASN1_STRING_length@plt+0x14d68>
   26c74:	subs	r4, r4, #1
   26c78:	sbc	r5, r5, #0
   26c7c:	mov	r6, r3
   26c80:	strd	r4, [sp, #16]
   26c84:	ldrb	r2, [r3]
   26c88:	add	r3, r3, #1
   26c8c:	cmp	r2, #0
   26c90:	beq	26c68 <ASN1_STRING_length@plt+0x14cf4>
   26c94:	cmp	r5, #0
   26c98:	cmpeq	r4, #1
   26c9c:	bls	26cdc <ASN1_STRING_length@plt+0x14d68>
   26ca0:	mov	r7, #0
   26ca4:	mov	r2, r7
   26ca8:	rsb	lr, r6, #1
   26cac:	b	26cc8 <ASN1_STRING_length@plt+0x14d54>
   26cb0:	add	r2, r2, #1
   26cb4:	mov	r1, #0
   26cb8:	mov	r0, r2
   26cbc:	cmp	r5, r1
   26cc0:	cmpeq	r4, r0
   26cc4:	bls	26d30 <ASN1_STRING_length@plt+0x14dbc>
   26cc8:	ldrb	r1, [r6, r2]
   26ccc:	add	r3, r6, r2
   26cd0:	cmp	r1, #0
   26cd4:	bne	26cb0 <ASN1_STRING_length@plt+0x14d3c>
   26cd8:	b	26d08 <ASN1_STRING_length@plt+0x14d94>
   26cdc:	mov	r0, #0
   26ce0:	ldr	r3, [sp, #4]
   26ce4:	ldr	r2, [sp, #28]
   26ce8:	ldr	r3, [r3]
   26cec:	cmp	r2, r3
   26cf0:	bne	26e3c <ASN1_STRING_length@plt+0x14ec8>
   26cf4:	add	sp, sp, #36	; 0x24
   26cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26cfc:	cmp	r5, r1
   26d00:	cmpeq	r4, r2
   26d04:	bls	26d20 <ASN1_STRING_length@plt+0x14dac>
   26d08:	add	r2, lr, r3
   26d0c:	ldrb	ip, [r3, #1]!
   26d10:	mov	r0, r2
   26d14:	mov	r1, #0
   26d18:	cmp	ip, #0
   26d1c:	beq	26cfc <ASN1_STRING_length@plt+0x14d88>
   26d20:	cmp	r5, r1
   26d24:	cmpeq	r4, r0
   26d28:	add	r7, r7, #1
   26d2c:	bhi	26cc8 <ASN1_STRING_length@plt+0x14d54>
   26d30:	add	r2, r6, r2
   26d34:	add	sl, r7, #1
   26d38:	ldrb	r3, [r2, #-1]
   26d3c:	add	r0, r4, #1
   26d40:	cmp	r3, #0
   26d44:	addne	r3, r7, #2
   26d48:	movne	r7, sl
   26d4c:	movne	sl, r3
   26d50:	lsl	sl, sl, #2
   26d54:	add	r0, r0, sl
   26d58:	bl	11d64 <malloc@plt>
   26d5c:	cmp	r0, #0
   26d60:	mov	fp, r0
   26d64:	str	r0, [r8]
   26d68:	beq	26e2c <ASN1_STRING_length@plt+0x14eb8>
   26d6c:	add	sl, r0, sl
   26d70:	mov	r2, r4
   26d74:	mov	r0, sl
   26d78:	mov	r1, r6
   26d7c:	bl	11c5c <memcpy@plt>
   26d80:	cmp	r7, #1
   26d84:	mov	r3, #0
   26d88:	movhi	ip, #1
   26d8c:	strb	r3, [sl, r4]
   26d90:	str	r3, [fp, r7, lsl #2]
   26d94:	str	sl, [fp]
   26d98:	subhi	r2, ip, r6
   26d9c:	bhi	26e14 <ASN1_STRING_length@plt+0x14ea0>
   26da0:	mov	r0, r7
   26da4:	b	26ce0 <ASN1_STRING_length@plt+0x14d6c>
   26da8:	ldrb	r1, [r6, r3]
   26dac:	add	lr, r6, r3
   26db0:	cmp	r1, #0
   26db4:	bne	26df4 <ASN1_STRING_length@plt+0x14e80>
   26db8:	mov	r1, #0
   26dbc:	cmp	r5, r1
   26dc0:	cmpeq	r4, r3
   26dc4:	movhi	r1, lr
   26dc8:	bhi	26de0 <ASN1_STRING_length@plt+0x14e6c>
   26dcc:	b	26df4 <ASN1_STRING_length@plt+0x14e80>
   26dd0:	mov	r9, #0
   26dd4:	cmp	r9, r5
   26dd8:	cmpeq	r3, r4
   26ddc:	bcs	26df0 <ASN1_STRING_length@plt+0x14e7c>
   26de0:	add	r3, r2, r1
   26de4:	ldrb	r0, [r1, #1]!
   26de8:	cmp	r0, #0
   26dec:	beq	26dd0 <ASN1_STRING_length@plt+0x14e5c>
   26df0:	add	r8, sl, r3
   26df4:	str	r8, [fp, ip, lsl #2]
   26df8:	add	ip, ip, #1
   26dfc:	cmp	ip, r7
   26e00:	bcs	26da0 <ASN1_STRING_length@plt+0x14e2c>
   26e04:	mov	r1, #0
   26e08:	cmp	r1, r5
   26e0c:	cmpeq	r3, r4
   26e10:	bcs	26da0 <ASN1_STRING_length@plt+0x14e2c>
   26e14:	ldrb	r1, [sl, r3]
   26e18:	add	r8, sl, r3
   26e1c:	cmp	r1, #0
   26e20:	addne	r3, r3, #1
   26e24:	bne	26dfc <ASN1_STRING_length@plt+0x14e88>
   26e28:	b	26da8 <ASN1_STRING_length@plt+0x14e34>
   26e2c:	bl	11f38 <__errno_location@plt>
   26e30:	ldr	r0, [r0]
   26e34:	rsb	r0, r0, #0
   26e38:	b	26ce0 <ASN1_STRING_length@plt+0x14d6c>
   26e3c:	bl	11d88 <__stack_chk_fail@plt>
   26e40:	andeq	r9, r1, r8, lsl #4
   26e44:	strdeq	r0, [r0], -r8
   26e48:	ldr	ip, [pc, #900]	; 271d4 <ASN1_STRING_length@plt+0x15260>
   26e4c:	ldr	r3, [pc, #900]	; 271d8 <ASN1_STRING_length@plt+0x15264>
   26e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e54:	add	ip, pc, ip
   26e58:	sub	sp, sp, #84	; 0x54
   26e5c:	mov	sl, #0
   26e60:	str	r1, [sp, #20]
   26e64:	ldr	r3, [ip, r3]
   26e68:	mov	fp, r0
   26e6c:	mov	r2, r3
   26e70:	str	r3, [sp, #36]	; 0x24
   26e74:	ldr	r3, [r0, #16]
   26e78:	ldr	lr, [r2]
   26e7c:	str	sl, [r1]
   26e80:	ldr	r1, [pc, #852]	; 271dc <ASN1_STRING_length@plt+0x15268>
   26e84:	tst	r3, #2
   26e88:	movne	r5, #4
   26e8c:	moveq	r5, #8
   26e90:	add	r3, sp, #64	; 0x40
   26e94:	add	r2, sp, #60	; 0x3c
   26e98:	add	r1, pc, r1
   26e9c:	str	lr, [sp, #76]	; 0x4c
   26ea0:	str	r5, [sp, #32]
   26ea4:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   26ea8:	subs	r9, r0, #0
   26eac:	blt	27124 <ASN1_STRING_length@plt+0x151b0>
   26eb0:	ldr	ip, [sp, #60]	; 0x3c
   26eb4:	cmp	ip, sl
   26eb8:	str	ip, [sp, #40]	; 0x28
   26ebc:	beq	27174 <ASN1_STRING_length@plt+0x15200>
   26ec0:	ldrd	r2, [sp, #64]	; 0x40
   26ec4:	orrs	r1, r2, r3
   26ec8:	beq	27120 <ASN1_STRING_length@plt+0x151ac>
   26ecc:	and	r1, r2, #63	; 0x3f
   26ed0:	str	r1, [sp, #8]
   26ed4:	str	sl, [sp, #12]
   26ed8:	ldrd	r0, [sp, #8]
   26edc:	orrs	r1, r0, r1
   26ee0:	bne	271c8 <ASN1_STRING_length@plt+0x15254>
   26ee4:	lsr	r4, r2, #6
   26ee8:	ldr	r7, [fp]
   26eec:	orr	r4, r4, r3, lsl #26
   26ef0:	cmp	r4, sl
   26ef4:	sub	r3, ip, r7
   26ef8:	str	r3, [sp, #52]	; 0x34
   26efc:	ble	2717c <ASN1_STRING_length@plt+0x15208>
   26f00:	ldrd	r0, [fp, #8]
   26f04:	add	r3, r5, r3
   26f08:	mov	ip, r3
   26f0c:	str	r3, [sp, #44]	; 0x2c
   26f10:	mov	r3, #0
   26f14:	cmp	r3, r1
   26f18:	cmpeq	ip, r0
   26f1c:	strd	r0, [sp]
   26f20:	bcs	271a8 <ASN1_STRING_length@plt+0x15234>
   26f24:	ldr	r3, [sp, #44]	; 0x2c
   26f28:	rsb	r6, r7, #63	; 0x3f
   26f2c:	add	r3, r3, #1
   26f30:	add	r8, r7, r3
   26f34:	str	r7, [sp, #24]
   26f38:	str	fp, [sp, #48]	; 0x30
   26f3c:	mov	r9, r6
   26f40:	mov	r5, sl
   26f44:	mov	fp, sl
   26f48:	ldrd	r6, [sp]
   26f4c:	b	26f6c <ASN1_STRING_length@plt+0x14ff8>
   26f50:	mov	r3, #0
   26f54:	add	r2, r9, r8
   26f58:	cmp	r3, r7
   26f5c:	cmpeq	r2, r6
   26f60:	add	r8, r8, #64	; 0x40
   26f64:	bcs	271a8 <ASN1_STRING_length@plt+0x15234>
   26f68:	mov	fp, sl
   26f6c:	ldrb	r0, [r8, #-1]
   26f70:	add	sl, fp, #1
   26f74:	cmp	r0, #46	; 0x2e
   26f78:	moveq	r0, r8
   26f7c:	subne	r0, r8, #1
   26f80:	bl	11c44 <strlen@plt>
   26f84:	cmp	r4, sl
   26f88:	add	r0, r0, #1
   26f8c:	add	r5, r5, r0
   26f90:	bne	26f50 <ASN1_STRING_length@plt+0x14fdc>
   26f94:	mov	r9, sl
   26f98:	ldr	r7, [sp, #24]
   26f9c:	lsl	r6, r9, #4
   26fa0:	add	r0, r5, r6
   26fa4:	mov	sl, fp
   26fa8:	ldr	fp, [sp, #48]	; 0x30
   26fac:	bl	11d64 <malloc@plt>
   26fb0:	ldr	r3, [sp, #20]
   26fb4:	cmp	r0, #0
   26fb8:	str	r0, [r3]
   26fbc:	beq	27198 <ASN1_STRING_length@plt+0x15224>
   26fc0:	ldr	r2, [sp, #32]
   26fc4:	mov	r3, #0
   26fc8:	ldr	r1, [sp, #52]	; 0x34
   26fcc:	ldrd	r4, [sp]
   26fd0:	strd	r2, [sp, #24]
   26fd4:	adds	r2, r2, r1
   26fd8:	adc	r3, r3, #0
   26fdc:	cmp	r3, r5
   26fe0:	cmpeq	r2, r4
   26fe4:	add	r8, r0, r6
   26fe8:	bhi	27100 <ASN1_STRING_length@plt+0x1518c>
   26fec:	ldr	r3, [fp, #16]
   26ff0:	ldr	r2, [sp, #44]	; 0x2c
   26ff4:	and	r3, r3, #16
   26ff8:	str	r3, [sp, #20]
   26ffc:	ldr	r3, [sp, #32]
   27000:	add	r6, r7, r2
   27004:	sub	fp, r3, r7
   27008:	mov	r4, r0
   2700c:	rsb	r3, r7, #64	; 0x40
   27010:	mov	lr, r8
   27014:	mov	r7, #0
   27018:	ldr	r5, [sp, #40]	; 0x28
   2701c:	str	r3, [sp, #32]
   27020:	str	r9, [sp, #40]	; 0x28
   27024:	ldr	r3, [sp, #20]
   27028:	cmp	r3, #0
   2702c:	beq	27144 <ASN1_STRING_length@plt+0x151d0>
   27030:	ldrd	r0, [sp, #8]
   27034:	mov	ip, r5
   27038:	mov	r8, lr
   2703c:	mov	r3, r0
   27040:	mov	r2, r1
   27044:	ldrb	r0, [ip], #1
   27048:	lsl	r2, r2, #8
   2704c:	orr	r2, r2, r3, lsr #24
   27050:	cmp	r6, ip
   27054:	orr	r3, r0, r3, lsl #8
   27058:	bne	27044 <ASN1_STRING_length@plt+0x150d0>
   2705c:	mov	lr, r8
   27060:	ldrd	r8, [sp]
   27064:	mov	r1, #0
   27068:	add	r0, fp, r5
   2706c:	cmp	r1, r9
   27070:	cmpeq	r0, r8
   27074:	bcs	271a8 <ASN1_STRING_length@plt+0x15234>
   27078:	ldrb	r0, [r6]
   2707c:	mov	r9, r6
   27080:	str	r3, [r4]
   27084:	cmp	r0, #46	; 0x2e
   27088:	addeq	r9, r6, #1
   2708c:	mov	r3, #85	; 0x55
   27090:	str	r3, [r4, #8]
   27094:	str	lr, [r4, #12]
   27098:	mov	r0, r9
   2709c:	str	r2, [r4, #4]
   270a0:	mov	r8, lr
   270a4:	bl	11c44 <strlen@plt>
   270a8:	mov	r1, r9
   270ac:	add	r9, r0, #1
   270b0:	mov	r2, r9
   270b4:	mov	r0, r8
   270b8:	bl	11c5c <memcpy@plt>
   270bc:	add	r3, r8, r9
   270c0:	mov	lr, r3
   270c4:	ldr	r3, [sp, #32]
   270c8:	cmp	sl, r7
   270cc:	add	r3, r3, r5
   270d0:	add	r7, r7, #1
   270d4:	beq	27174 <ASN1_STRING_length@plt+0x15200>
   270d8:	ldrd	r0, [sp, #24]
   270dc:	add	r6, r6, #64	; 0x40
   270e0:	add	r4, r4, #16
   270e4:	adds	r0, r0, r3
   270e8:	ldrd	r2, [sp]
   270ec:	adc	r1, r1, #0
   270f0:	add	r5, r5, #64	; 0x40
   270f4:	cmp	r1, r3
   270f8:	cmpeq	r0, r2
   270fc:	bls	27024 <ASN1_STRING_length@plt+0x150b0>
   27100:	ldr	r3, [pc, #216]	; 271e0 <ASN1_STRING_length@plt+0x1526c>
   27104:	ldr	r1, [pc, #216]	; 271e4 <ASN1_STRING_length@plt+0x15270>
   27108:	ldr	r0, [pc, #216]	; 271e8 <ASN1_STRING_length@plt+0x15274>
   2710c:	add	r3, pc, r3
   27110:	mov	r2, #137	; 0x89
   27114:	add	r1, pc, r1
   27118:	add	r0, pc, r0
   2711c:	bl	11b6c <__assert_fail@plt>
   27120:	mov	r9, sl
   27124:	ldr	r3, [sp, #36]	; 0x24
   27128:	ldr	r2, [sp, #76]	; 0x4c
   2712c:	mov	r0, r9
   27130:	ldr	r3, [r3]
   27134:	cmp	r2, r3
   27138:	bne	271d0 <ASN1_STRING_length@plt+0x1525c>
   2713c:	add	sp, sp, #84	; 0x54
   27140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27144:	ldrd	r0, [sp, #8]
   27148:	mov	ip, r6
   2714c:	mov	r8, lr
   27150:	mov	r3, r0
   27154:	mov	r2, r1
   27158:	ldrb	r0, [ip, #-1]!
   2715c:	lsl	r2, r2, #8
   27160:	orr	r2, r2, r3, lsr #24
   27164:	cmp	r5, ip
   27168:	orr	r3, r0, r3, lsl #8
   2716c:	bne	27158 <ASN1_STRING_length@plt+0x151e4>
   27170:	b	2705c <ASN1_STRING_length@plt+0x150e8>
   27174:	ldr	r9, [sp, #40]	; 0x28
   27178:	b	27124 <ASN1_STRING_length@plt+0x151b0>
   2717c:	lsl	r0, r4, #4
   27180:	bl	11d64 <malloc@plt>
   27184:	ldr	r3, [sp, #20]
   27188:	cmp	r0, #0
   2718c:	str	r0, [r3]
   27190:	movne	r9, r4
   27194:	bne	27124 <ASN1_STRING_length@plt+0x151b0>
   27198:	bl	11f38 <__errno_location@plt>
   2719c:	ldr	r9, [r0]
   271a0:	rsb	r9, r9, #0
   271a4:	b	27124 <ASN1_STRING_length@plt+0x151b0>
   271a8:	ldr	r3, [pc, #60]	; 271ec <ASN1_STRING_length@plt+0x15278>
   271ac:	ldr	r1, [pc, #60]	; 271f0 <ASN1_STRING_length@plt+0x1527c>
   271b0:	ldr	r0, [pc, #60]	; 271f4 <ASN1_STRING_length@plt+0x15280>
   271b4:	add	r3, pc, r3
   271b8:	mov	r2, #202	; 0xca
   271bc:	add	r1, pc, r1
   271c0:	add	r0, pc, r0
   271c4:	bl	11b6c <__assert_fail@plt>
   271c8:	mvn	r9, #21
   271cc:	b	27124 <ASN1_STRING_length@plt+0x151b0>
   271d0:	bl	11d88 <__stack_chk_fail@plt>
   271d4:	andeq	r8, r1, r0, lsr #31
   271d8:	strdeq	r0, [r0], -r8
   271dc:	andeq	r7, r0, r8, lsl #30
   271e0:	andeq	r8, r0, r8, lsr #2
   271e4:	andeq	r8, r0, ip, asr r1
   271e8:	andeq	r8, r0, r8, lsr #3
   271ec:	muleq	r0, r0, r0
   271f0:	strheq	r8, [r0], -r4
   271f4:	andeq	r8, r0, ip, asr #1
   271f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   271fc:	sub	sp, sp, #148	; 0x94
   27200:	ldrd	r2, [r0, #56]	; 0x38
   27204:	mov	r7, r0
   27208:	str	r1, [sp, #84]	; 0x54
   2720c:	ldrd	r0, [r0, #8]
   27210:	ldrd	r4, [r7, #48]	; 0x30
   27214:	cmp	r3, r1
   27218:	cmpeq	r2, r0
   2721c:	strd	r0, [sp]
   27220:	strd	r4, [sp, #72]	; 0x48
   27224:	bcs	278e8 <ASN1_STRING_length@plt+0x15974>
   27228:	ldrh	r1, [r7, #32]
   2722c:	str	r2, [sp, #128]	; 0x80
   27230:	ldr	r6, [r7]
   27234:	cmp	r1, #1
   27238:	str	r1, [sp, #60]	; 0x3c
   2723c:	bls	2786c <ASN1_STRING_length@plt+0x158f8>
   27240:	ldrd	r2, [r7, #24]
   27244:	ldrh	r1, [r7, #34]	; 0x22
   27248:	strd	r2, [sp, #64]	; 0x40
   2724c:	str	r1, [sp, #80]	; 0x50
   27250:	adds	r2, r2, r1
   27254:	ldrd	r0, [sp]
   27258:	adc	r3, r3, #0
   2725c:	cmp	r1, r3
   27260:	cmpeq	r0, r2
   27264:	bls	27648 <ASN1_STRING_length@plt+0x156d4>
   27268:	mov	r1, #1
   2726c:	str	r1, [sp, #36]	; 0x24
   27270:	mov	sl, r1
   27274:	add	r1, r6, #8
   27278:	str	r1, [sp, #136]	; 0x88
   2727c:	add	r1, r6, #4
   27280:	str	r1, [sp, #140]	; 0x8c
   27284:	cmn	r6, r2
   27288:	asr	r3, r2, #31
   2728c:	beq	2760c <ASN1_STRING_length@plt+0x15698>
   27290:	ldr	r1, [r7, #16]
   27294:	ands	r0, r1, #2
   27298:	str	r0, [sp, #132]	; 0x84
   2729c:	beq	27500 <ASN1_STRING_length@plt+0x1558c>
   272a0:	adds	r0, r2, #20
   272a4:	str	r0, [sp, #16]
   272a8:	adc	r0, r3, #0
   272ac:	str	r0, [sp, #20]
   272b0:	adds	r0, r2, #24
   272b4:	str	r0, [sp, #40]	; 0x28
   272b8:	adc	r0, r3, #0
   272bc:	str	r0, [sp, #44]	; 0x2c
   272c0:	ldrd	r4, [sp]
   272c4:	ldrd	r8, [sp, #40]	; 0x28
   272c8:	cmp	r5, r9
   272cc:	cmpeq	r4, r8
   272d0:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   272d4:	ands	r1, r1, #16
   272d8:	str	r1, [sp, #56]	; 0x38
   272dc:	ldr	r1, [sp, #16]
   272e0:	add	ip, r6, r1
   272e4:	beq	27724 <ASN1_STRING_length@plt+0x157b0>
   272e8:	sub	r8, ip, #1
   272ec:	mov	r0, #0
   272f0:	add	ip, ip, #3
   272f4:	mov	r1, #0
   272f8:	ldrb	r4, [r8, #1]!
   272fc:	lsl	lr, r1, #8
   27300:	orr	lr, lr, r0, lsr #24
   27304:	cmp	ip, r8
   27308:	orr	r0, r4, r0, lsl #8
   2730c:	mov	r1, lr
   27310:	bne	272f8 <ASN1_STRING_length@plt+0x15384>
   27314:	ldrd	r4, [sp]
   27318:	ldrd	r8, [sp, #16]
   2731c:	adds	fp, r2, #16
   27320:	cmp	r5, r9
   27324:	cmpeq	r4, r8
   27328:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   2732c:	ldr	ip, [sp, #140]	; 0x8c
   27330:	add	lr, r6, fp
   27334:	mov	r4, #0
   27338:	add	fp, ip, fp
   2733c:	mov	r5, #0
   27340:	ldrb	r8, [lr], #1
   27344:	lsl	ip, r5, #8
   27348:	orr	ip, ip, r4, lsr #24
   2734c:	cmp	fp, lr
   27350:	orr	r4, r8, r4, lsl #8
   27354:	mov	r5, ip
   27358:	bne	27340 <ASN1_STRING_length@plt+0x153cc>
   2735c:	adds	ip, r2, #4
   27360:	str	ip, [sp, #88]	; 0x58
   27364:	adc	ip, r3, #0
   27368:	str	ip, [sp, #92]	; 0x5c
   2736c:	ldrd	r8, [sp]
   27370:	strd	r4, [sp, #8]
   27374:	ldrd	r4, [sp, #88]	; 0x58
   27378:	cmp	r9, r5
   2737c:	cmpeq	r8, r4
   27380:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   27384:	add	r2, r6, r2
   27388:	ldrd	r4, [sp, #8]
   2738c:	sub	ip, r2, #1
   27390:	mov	r3, #0
   27394:	add	r2, r2, #3
   27398:	ldrb	r8, [ip, #1]!
   2739c:	cmp	r2, ip
   273a0:	orr	r3, r8, r3, lsl #8
   273a4:	bne	27398 <ASN1_STRING_length@plt+0x15424>
   273a8:	strd	r4, [sp, #8]
   273ac:	ldrd	r4, [sp, #8]
   273b0:	mov	ip, r3
   273b4:	adds	r2, r4, r0
   273b8:	adcs	r3, r5, r1
   273bc:	ldrd	r4, [sp]
   273c0:	movcs	r1, #1
   273c4:	movcc	r1, #0
   273c8:	cmp	r5, r3
   273cc:	cmpeq	r4, r2
   273d0:	movcs	r3, r1
   273d4:	orrcc	r3, r1, #1
   273d8:	cmp	r3, #0
   273dc:	bne	2760c <ASN1_STRING_length@plt+0x15698>
   273e0:	ldrd	r0, [sp, #72]	; 0x48
   273e4:	mov	r3, #0
   273e8:	cmp	r1, r3
   273ec:	cmpeq	r0, ip
   273f0:	bls	2760c <ASN1_STRING_length@plt+0x15698>
   273f4:	ldr	r3, [sp, #128]	; 0x80
   273f8:	ldr	r0, [sp, #84]	; 0x54
   273fc:	add	r1, r3, ip
   27400:	add	r1, r6, r1
   27404:	bl	11f14 <strcmp@plt>
   27408:	cmp	r0, #0
   2740c:	bne	2760c <ASN1_STRING_length@plt+0x15698>
   27410:	ldrh	r3, [sp, #36]	; 0x24
   27414:	ldr	r2, [sp, #60]	; 0x3c
   27418:	mov	r5, r0
   2741c:	cmp	r3, r2
   27420:	bcs	278ec <ASN1_STRING_length@plt+0x15978>
   27424:	ldr	r3, [sp, #36]	; 0x24
   27428:	ldr	r2, [sp, #80]	; 0x50
   2742c:	mul	r1, r3, r2
   27430:	ldrd	r2, [sp, #64]	; 0x40
   27434:	adds	r2, r2, r1
   27438:	adc	r3, r3, r1, asr #31
   2743c:	ldrd	r0, [sp]
   27440:	cmp	r1, r3
   27444:	cmpeq	r0, r2
   27448:	bls	278e8 <ASN1_STRING_length@plt+0x15974>
   2744c:	adds	sl, r2, #8
   27450:	asr	r3, r2, #31
   27454:	ldr	r2, [sp, #132]	; 0x84
   27458:	adc	r3, r3, #0
   2745c:	cmp	r2, #0
   27460:	moveq	lr, #8
   27464:	moveq	r9, lr
   27468:	bne	277e0 <ASN1_STRING_length@plt+0x1586c>
   2746c:	adds	r1, r9, sl
   27470:	adc	r3, r2, r3
   27474:	str	r3, [sp, #124]	; 0x7c
   27478:	str	r1, [sp, #120]	; 0x78
   2747c:	ldrd	r2, [sp]
   27480:	ldrd	r0, [sp, #120]	; 0x78
   27484:	cmp	r3, r1
   27488:	cmpeq	r2, r0
   2748c:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   27490:	ldr	r3, [sp, #56]	; 0x38
   27494:	add	r0, r6, sl
   27498:	cmp	r3, #0
   2749c:	beq	277f0 <ASN1_STRING_length@plt+0x1587c>
   274a0:	mov	r8, #0
   274a4:	add	r1, r0, lr
   274a8:	mov	r4, r8
   274ac:	ldrb	r2, [r0], #1
   274b0:	lsl	r4, r4, #8
   274b4:	orr	r4, r4, r8, lsr #24
   274b8:	cmp	r1, r0
   274bc:	orr	r8, r2, r8, lsl #8
   274c0:	bne	274ac <ASN1_STRING_length@plt+0x15538>
   274c4:	ldr	fp, [r7, #4]
   274c8:	bic	r8, r8, #2
   274cc:	cmp	fp, #0
   274d0:	beq	2787c <ASN1_STRING_length@plt+0x15908>
   274d4:	add	sl, fp, sl
   274d8:	add	r9, sl, r9
   274dc:	strb	r8, [r9, #-1]!
   274e0:	lsr	r8, r8, #8
   274e4:	cmp	sl, r9
   274e8:	orr	r8, r8, r4, lsl #24
   274ec:	lsr	r4, r4, #8
   274f0:	bne	274dc <ASN1_STRING_length@plt+0x15568>
   274f4:	mov	r0, r5
   274f8:	add	sp, sp, #148	; 0x94
   274fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27500:	adds	r0, r2, #32
   27504:	str	r0, [sp, #24]
   27508:	adc	r0, r3, #0
   2750c:	str	r0, [sp, #28]
   27510:	adds	r0, r2, #40	; 0x28
   27514:	str	r0, [sp, #48]	; 0x30
   27518:	adc	r0, r3, #0
   2751c:	str	r0, [sp, #52]	; 0x34
   27520:	ldrd	r4, [sp]
   27524:	ldrd	r8, [sp, #48]	; 0x30
   27528:	cmp	r5, r9
   2752c:	cmpeq	r4, r8
   27530:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   27534:	ands	r1, r1, #16
   27538:	str	r1, [sp, #56]	; 0x38
   2753c:	ldr	r1, [sp, #24]
   27540:	add	ip, r6, r1
   27544:	beq	27668 <ASN1_STRING_length@plt+0x156f4>
   27548:	sub	r8, ip, #1
   2754c:	mov	r0, #0
   27550:	add	ip, ip, #7
   27554:	mov	r1, #0
   27558:	ldrb	r4, [r8, #1]!
   2755c:	lsl	lr, r1, #8
   27560:	orr	lr, lr, r0, lsr #24
   27564:	cmp	ip, r8
   27568:	orr	r0, r4, r0, lsl #8
   2756c:	mov	r1, lr
   27570:	bne	27558 <ASN1_STRING_length@plt+0x155e4>
   27574:	ldrd	r4, [sp]
   27578:	ldrd	r8, [sp, #24]
   2757c:	adds	fp, r2, #24
   27580:	cmp	r5, r9
   27584:	cmpeq	r4, r8
   27588:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   2758c:	ldr	ip, [sp, #136]	; 0x88
   27590:	add	lr, r6, fp
   27594:	mov	r4, #0
   27598:	add	fp, ip, fp
   2759c:	mov	r5, #0
   275a0:	ldrb	r8, [lr], #1
   275a4:	lsl	ip, r5, #8
   275a8:	orr	ip, ip, r4, lsr #24
   275ac:	cmp	lr, fp
   275b0:	orr	r4, r8, r4, lsl #8
   275b4:	mov	r5, ip
   275b8:	bne	275a0 <ASN1_STRING_length@plt+0x1562c>
   275bc:	adds	ip, r2, #4
   275c0:	str	ip, [sp, #104]	; 0x68
   275c4:	adc	ip, r3, #0
   275c8:	str	ip, [sp, #108]	; 0x6c
   275cc:	ldrd	r8, [sp, #104]	; 0x68
   275d0:	strd	r4, [sp, #8]
   275d4:	ldrd	r4, [sp]
   275d8:	cmp	r5, r9
   275dc:	cmpeq	r4, r8
   275e0:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   275e4:	add	r2, r6, r2
   275e8:	ldrd	r4, [sp, #8]
   275ec:	sub	ip, r2, #1
   275f0:	mov	r3, #0
   275f4:	add	r2, r2, #3
   275f8:	ldrb	r8, [ip, #1]!
   275fc:	cmp	r2, ip
   27600:	orr	r3, r8, r3, lsl #8
   27604:	bne	275f8 <ASN1_STRING_length@plt+0x15684>
   27608:	b	273a8 <ASN1_STRING_length@plt+0x15434>
   2760c:	add	sl, sl, #1
   27610:	ldr	r3, [sp, #60]	; 0x3c
   27614:	uxth	sl, sl
   27618:	cmp	sl, r3
   2761c:	bcs	2786c <ASN1_STRING_length@plt+0x158f8>
   27620:	ldr	r3, [sp, #80]	; 0x50
   27624:	str	sl, [sp, #36]	; 0x24
   27628:	mul	r1, r3, sl
   2762c:	ldrd	r2, [sp, #64]	; 0x40
   27630:	adds	r2, r2, r1
   27634:	adc	r3, r3, r1, asr #31
   27638:	ldrd	r0, [sp]
   2763c:	cmp	r1, r3
   27640:	cmpeq	r0, r2
   27644:	bhi	27284 <ASN1_STRING_length@plt+0x15310>
   27648:	ldr	r3, [pc, #672]	; 278f0 <ASN1_STRING_length@plt+0x1597c>
   2764c:	ldr	r1, [pc, #672]	; 278f4 <ASN1_STRING_length@plt+0x15980>
   27650:	ldr	r0, [pc, #672]	; 278f8 <ASN1_STRING_length@plt+0x15984>
   27654:	add	r3, pc, r3
   27658:	mov	r2, #202	; 0xca
   2765c:	add	r1, pc, r1
   27660:	add	r0, pc, r0
   27664:	bl	11b6c <__assert_fail@plt>
   27668:	add	r8, ip, #8
   2766c:	mov	r0, #0
   27670:	mov	r1, #0
   27674:	ldrb	r4, [r8, #-1]!
   27678:	lsl	lr, r1, #8
   2767c:	orr	lr, lr, r0, lsr #24
   27680:	cmp	ip, r8
   27684:	orr	r0, r4, r0, lsl #8
   27688:	mov	r1, lr
   2768c:	bne	27674 <ASN1_STRING_length@plt+0x15700>
   27690:	ldrd	r4, [sp]
   27694:	ldrd	r8, [sp, #24]
   27698:	adds	fp, r2, #24
   2769c:	cmp	r5, r9
   276a0:	cmpeq	r4, r8
   276a4:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   276a8:	add	ip, fp, #8
   276ac:	add	ip, r6, ip
   276b0:	add	fp, r6, fp
   276b4:	mov	r4, #0
   276b8:	mov	r5, #0
   276bc:	ldrb	r8, [ip, #-1]!
   276c0:	lsl	lr, r5, #8
   276c4:	orr	lr, lr, r4, lsr #24
   276c8:	cmp	fp, ip
   276cc:	orr	r4, r8, r4, lsl #8
   276d0:	mov	r5, lr
   276d4:	bne	276bc <ASN1_STRING_length@plt+0x15748>
   276d8:	adds	ip, r2, #4
   276dc:	str	ip, [sp, #112]	; 0x70
   276e0:	adc	ip, r3, #0
   276e4:	str	ip, [sp, #116]	; 0x74
   276e8:	ldrd	r8, [sp, #112]	; 0x70
   276ec:	strd	r4, [sp, #8]
   276f0:	ldrd	r4, [sp]
   276f4:	cmp	r5, r9
   276f8:	cmpeq	r4, r8
   276fc:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   27700:	add	r2, r6, r2
   27704:	ldrd	r4, [sp, #8]
   27708:	add	ip, r2, #4
   2770c:	mov	r3, #0
   27710:	ldrb	r8, [ip, #-1]!
   27714:	cmp	r2, ip
   27718:	orr	r3, r8, r3, lsl #8
   2771c:	bne	27710 <ASN1_STRING_length@plt+0x1579c>
   27720:	b	273a8 <ASN1_STRING_length@plt+0x15434>
   27724:	add	r8, ip, #4
   27728:	mov	r0, #0
   2772c:	mov	r1, #0
   27730:	ldrb	r4, [r8, #-1]!
   27734:	lsl	lr, r1, #8
   27738:	orr	lr, lr, r0, lsr #24
   2773c:	cmp	ip, r8
   27740:	orr	r0, r4, r0, lsl #8
   27744:	mov	r1, lr
   27748:	bne	27730 <ASN1_STRING_length@plt+0x157bc>
   2774c:	ldrd	r4, [sp]
   27750:	ldrd	r8, [sp, #16]
   27754:	adds	fp, r2, #16
   27758:	cmp	r5, r9
   2775c:	cmpeq	r4, r8
   27760:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   27764:	add	ip, fp, #4
   27768:	add	ip, r6, ip
   2776c:	add	fp, r6, fp
   27770:	mov	r4, #0
   27774:	mov	r5, #0
   27778:	ldrb	r8, [ip, #-1]!
   2777c:	lsl	lr, r5, #8
   27780:	orr	lr, lr, r4, lsr #24
   27784:	cmp	fp, ip
   27788:	orr	r4, r8, r4, lsl #8
   2778c:	mov	r5, lr
   27790:	bne	27778 <ASN1_STRING_length@plt+0x15804>
   27794:	adds	ip, r2, #4
   27798:	str	ip, [sp, #96]	; 0x60
   2779c:	adc	ip, r3, #0
   277a0:	str	ip, [sp, #100]	; 0x64
   277a4:	ldrd	r8, [sp, #96]	; 0x60
   277a8:	strd	r4, [sp, #8]
   277ac:	ldrd	r4, [sp]
   277b0:	cmp	r5, r9
   277b4:	cmpeq	r4, r8
   277b8:	bcc	278e4 <ASN1_STRING_length@plt+0x15970>
   277bc:	add	r2, r6, r2
   277c0:	ldrd	r4, [sp, #8]
   277c4:	add	ip, r2, #4
   277c8:	mov	r3, #0
   277cc:	ldrb	r8, [ip, #-1]!
   277d0:	cmp	r2, ip
   277d4:	orr	r3, r8, r3, lsl #8
   277d8:	bne	277cc <ASN1_STRING_length@plt+0x15858>
   277dc:	b	273a8 <ASN1_STRING_length@plt+0x15434>
   277e0:	mov	lr, #4
   277e4:	mov	r9, lr
   277e8:	mov	r2, #0
   277ec:	b	2746c <ASN1_STRING_length@plt+0x154f8>
   277f0:	ldr	r8, [sp, #56]	; 0x38
   277f4:	add	ip, r0, lr
   277f8:	mov	r4, r8
   277fc:	mov	r1, lr
   27800:	ldrb	r2, [ip, #-1]!
   27804:	mov	r3, #0
   27808:	lsl	r4, r4, #8
   2780c:	orr	r4, r4, r8, lsr #24
   27810:	strd	r2, [sp, #8]
   27814:	rsb	r3, ip, #1
   27818:	add	r3, r0, r3
   2781c:	add	r3, r3, r1
   27820:	cmp	r3, r1
   27824:	ldr	r3, [sp, #8]
   27828:	orr	r8, r3, r8, lsl #8
   2782c:	bls	27800 <ASN1_STRING_length@plt+0x1588c>
   27830:	ldr	fp, [r7, #4]
   27834:	bic	r8, r8, #2
   27838:	cmp	fp, #0
   2783c:	beq	278a8 <ASN1_STRING_length@plt+0x15934>
   27840:	add	sl, fp, sl
   27844:	add	r9, sl, r9
   27848:	strb	r8, [sl], #1
   2784c:	lsr	r8, r8, #8
   27850:	cmp	r9, sl
   27854:	orr	r8, r8, r4, lsl #24
   27858:	lsr	r4, r4, #8
   2785c:	bne	27848 <ASN1_STRING_length@plt+0x158d4>
   27860:	mov	r0, r5
   27864:	add	sp, sp, #148	; 0x94
   27868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2786c:	mvn	r5, #1
   27870:	mov	r0, r5
   27874:	add	sp, sp, #148	; 0x94
   27878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2787c:	ldr	r0, [sp]
   27880:	bl	11d64 <malloc@plt>
   27884:	cmp	r0, #0
   27888:	mov	fp, r0
   2788c:	str	r0, [r7, #4]
   27890:	beq	278d4 <ASN1_STRING_length@plt+0x15960>
   27894:	ldr	r2, [sp]
   27898:	mov	r1, r6
   2789c:	bl	11c5c <memcpy@plt>
   278a0:	str	fp, [r7]
   278a4:	b	274d4 <ASN1_STRING_length@plt+0x15560>
   278a8:	ldr	r0, [sp]
   278ac:	bl	11d64 <malloc@plt>
   278b0:	cmp	r0, #0
   278b4:	mov	fp, r0
   278b8:	str	r0, [r7, #4]
   278bc:	beq	278d4 <ASN1_STRING_length@plt+0x15960>
   278c0:	ldr	r2, [sp]
   278c4:	mov	r1, r6
   278c8:	bl	11c5c <memcpy@plt>
   278cc:	str	fp, [r7]
   278d0:	b	27840 <ASN1_STRING_length@plt+0x158cc>
   278d4:	bl	11f38 <__errno_location@plt>
   278d8:	ldr	r5, [r0]
   278dc:	rsb	r5, r5, #0
   278e0:	b	274f4 <ASN1_STRING_length@plt+0x15580>
   278e4:	bl	25dc0 <ASN1_STRING_length@plt+0x13e4c>
   278e8:	bl	25d90 <ASN1_STRING_length@plt+0x13e1c>
   278ec:	bl	25df0 <ASN1_STRING_length@plt+0x13e7c>
   278f0:	strdeq	r7, [r0], -r0
   278f4:	andeq	r7, r0, r4, lsl ip
   278f8:	andeq	r7, r0, ip, lsr #24
   278fc:	ldr	ip, [pc, #552]	; 27b2c <ASN1_STRING_length@plt+0x15bb8>
   27900:	ldr	r1, [pc, #552]	; 27b30 <ASN1_STRING_length@plt+0x15bbc>
   27904:	add	ip, pc, ip
   27908:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2790c:	sub	sp, sp, #44	; 0x2c
   27910:	ldr	sl, [ip, r1]
   27914:	ldr	r1, [pc, #536]	; 27b34 <ASN1_STRING_length@plt+0x15bc0>
   27918:	add	r3, sp, #24
   2791c:	ldr	ip, [sl]
   27920:	add	r2, sp, #20
   27924:	add	r1, pc, r1
   27928:	mov	fp, r0
   2792c:	str	ip, [sp, #36]	; 0x24
   27930:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   27934:	subs	r3, r0, #0
   27938:	blt	27a6c <ASN1_STRING_length@plt+0x15af8>
   2793c:	ldr	r6, [sp, #20]
   27940:	cmp	r6, #0
   27944:	beq	27a88 <ASN1_STRING_length@plt+0x15b14>
   27948:	ldrd	r4, [sp, #24]
   2794c:	orrs	r3, r4, r5
   27950:	beq	27a88 <ASN1_STRING_length@plt+0x15b14>
   27954:	ldrb	r3, [r6]
   27958:	cmp	r3, #0
   2795c:	bne	279a0 <ASN1_STRING_length@plt+0x15a2c>
   27960:	cmp	r5, #0
   27964:	cmpeq	r4, #1
   27968:	bls	27a88 <ASN1_STRING_length@plt+0x15b14>
   2796c:	add	r3, r6, #1
   27970:	b	27980 <ASN1_STRING_length@plt+0x15a0c>
   27974:	cmp	r5, #0
   27978:	cmpeq	r4, #1
   2797c:	beq	27a88 <ASN1_STRING_length@plt+0x15b14>
   27980:	subs	r4, r4, #1
   27984:	sbc	r5, r5, #0
   27988:	mov	r6, r3
   2798c:	strd	r4, [sp, #24]
   27990:	ldrb	r2, [r3]
   27994:	add	r3, r3, #1
   27998:	cmp	r2, #0
   2799c:	beq	27974 <ASN1_STRING_length@plt+0x15a00>
   279a0:	cmp	r5, #0
   279a4:	cmpeq	r4, #1
   279a8:	bls	27a88 <ASN1_STRING_length@plt+0x15b14>
   279ac:	ldr	r3, [pc, #388]	; 27b38 <ASN1_STRING_length@plt+0x15bc4>
   279b0:	mov	r0, #0
   279b4:	add	r3, pc, r3
   279b8:	str	r3, [sp, #12]
   279bc:	mov	r3, sl
   279c0:	mov	r1, #0
   279c4:	mov	sl, fp
   279c8:	mov	fp, r3
   279cc:	add	r7, r6, r0
   279d0:	adds	r8, r0, #1
   279d4:	ldrb	r3, [r7]
   279d8:	adc	r9, r1, #0
   279dc:	cmp	r3, #0
   279e0:	beq	27a90 <ASN1_STRING_length@plt+0x15b1c>
   279e4:	cmp	r9, r5
   279e8:	cmpeq	r8, r4
   279ec:	bcs	27aa4 <ASN1_STRING_length@plt+0x15b30>
   279f0:	adds	r3, r0, #9
   279f4:	str	r3, [sp]
   279f8:	adc	r3, r1, #0
   279fc:	str	r3, [sp, #4]
   27a00:	ldrd	r2, [sp]
   27a04:	cmp	r3, r5
   27a08:	cmpeq	r2, r4
   27a0c:	bcs	27af0 <ASN1_STRING_length@plt+0x15b7c>
   27a10:	mov	r2, #9
   27a14:	ldr	r1, [sp, #12]
   27a18:	mov	r0, r7
   27a1c:	bl	11ea8 <strncmp@plt>
   27a20:	cmp	r0, #0
   27a24:	bne	27afc <ASN1_STRING_length@plt+0x15b88>
   27a28:	mov	r2, fp
   27a2c:	mov	fp, sl
   27a30:	mov	r3, r0
   27a34:	ldr	r4, [fp, #4]
   27a38:	ldr	r5, [fp]
   27a3c:	cmp	r4, #0
   27a40:	mov	sl, r2
   27a44:	sub	r6, r7, r5
   27a48:	beq	27ab0 <ASN1_STRING_length@plt+0x15b3c>
   27a4c:	mov	r0, r7
   27a50:	str	r3, [sp]
   27a54:	bl	11c44 <strlen@plt>
   27a58:	mov	r1, #0
   27a5c:	mov	r2, r0
   27a60:	add	r0, r4, r6
   27a64:	bl	11b18 <memset@plt>
   27a68:	ldr	r3, [sp]
   27a6c:	ldr	r1, [sp, #36]	; 0x24
   27a70:	ldr	r2, [sl]
   27a74:	mov	r0, r3
   27a78:	cmp	r1, r2
   27a7c:	bne	27b28 <ASN1_STRING_length@plt+0x15bb4>
   27a80:	add	sp, sp, #44	; 0x2c
   27a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a88:	mov	r3, #0
   27a8c:	b	27a6c <ASN1_STRING_length@plt+0x15af8>
   27a90:	mov	r0, r8
   27a94:	mov	r1, r9
   27a98:	cmp	r5, r1
   27a9c:	cmpeq	r4, r0
   27aa0:	bhi	279cc <ASN1_STRING_length@plt+0x15a58>
   27aa4:	mov	sl, fp
   27aa8:	mvn	r3, #1
   27aac:	b	27a6c <ASN1_STRING_length@plt+0x15af8>
   27ab0:	ldr	r8, [fp, #8]
   27ab4:	str	r0, [sp]
   27ab8:	mov	r0, r8
   27abc:	bl	11d64 <malloc@plt>
   27ac0:	ldr	r3, [sp]
   27ac4:	cmp	r0, #0
   27ac8:	mov	r4, r0
   27acc:	str	r0, [fp, #4]
   27ad0:	beq	27b18 <ASN1_STRING_length@plt+0x15ba4>
   27ad4:	mov	r2, r8
   27ad8:	mov	r1, r5
   27adc:	str	r3, [sp]
   27ae0:	bl	11c5c <memcpy@plt>
   27ae4:	str	r4, [fp]
   27ae8:	ldr	r3, [sp]
   27aec:	b	27a4c <ASN1_STRING_length@plt+0x15ad8>
   27af0:	mov	r0, r8
   27af4:	mov	r1, r9
   27af8:	b	279cc <ASN1_STRING_length@plt+0x15a58>
   27afc:	mov	r0, r7
   27b00:	bl	11c44 <strlen@plt>
   27b04:	adds	r2, r8, r0
   27b08:	adc	r3, r9, #0
   27b0c:	mov	r0, r2
   27b10:	mov	r1, r3
   27b14:	b	27a98 <ASN1_STRING_length@plt+0x15b24>
   27b18:	bl	11f38 <__errno_location@plt>
   27b1c:	ldr	r3, [r0]
   27b20:	rsb	r3, r3, #0
   27b24:	b	27a6c <ASN1_STRING_length@plt+0x15af8>
   27b28:	bl	11d88 <__stack_chk_fail@plt>
   27b2c:	strdeq	r8, [r1], -r0
   27b30:	strdeq	r0, [r0], -r8
   27b34:	andeq	r7, r0, r0, lsr r2
   27b38:	andeq	r7, r0, r8, ror #18
   27b3c:	ldr	ip, [pc, #3936]	; 28aa4 <ASN1_STRING_length@plt+0x16b30>
   27b40:	ldr	r2, [pc, #3936]	; 28aa8 <ASN1_STRING_length@plt+0x16b34>
   27b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b48:	add	ip, pc, ip
   27b4c:	sub	sp, sp, #356	; 0x164
   27b50:	add	r3, sp, #320	; 0x140
   27b54:	str	r1, [sp, #84]	; 0x54
   27b58:	ldr	r2, [ip, r2]
   27b5c:	ldr	r1, [pc, #3912]	; 28aac <ASN1_STRING_length@plt+0x16b38>
   27b60:	mov	lr, r2
   27b64:	str	r2, [sp, #88]	; 0x58
   27b68:	ldr	lr, [lr]
   27b6c:	add	r2, sp, #308	; 0x134
   27b70:	add	r1, pc, r1
   27b74:	mov	r4, r0
   27b78:	str	r0, [sp, #80]	; 0x50
   27b7c:	str	lr, [sp, #348]	; 0x15c
   27b80:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   27b84:	cmp	r0, #0
   27b88:	blt	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   27b8c:	ldr	r1, [pc, #3868]	; 28ab0 <ASN1_STRING_length@plt+0x16b3c>
   27b90:	add	r3, sp, #328	; 0x148
   27b94:	add	r2, sp, #312	; 0x138
   27b98:	add	r1, pc, r1
   27b9c:	mov	r0, r4
   27ba0:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   27ba4:	cmp	r0, #0
   27ba8:	blt	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   27bac:	ldr	r4, [r4, #16]
   27bb0:	add	r1, sp, #328	; 0x148
   27bb4:	ands	r3, r4, #2
   27bb8:	str	r3, [sp, #28]
   27bbc:	moveq	r3, #24
   27bc0:	movne	r3, #16
   27bc4:	streq	r3, [sp, #36]	; 0x24
   27bc8:	strne	r3, [sp, #36]	; 0x24
   27bcc:	ldr	r8, [sp, #36]	; 0x24
   27bd0:	moveq	r3, #0
   27bd4:	movne	r3, #0
   27bd8:	streq	r3, [sp, #56]	; 0x38
   27bdc:	strne	r3, [sp, #56]	; 0x38
   27be0:	mov	r2, r8
   27be4:	ldr	r3, [sp, #56]	; 0x38
   27be8:	ldrd	r0, [r1]
   27bec:	moveq	r5, #24
   27bf0:	movne	r5, #16
   27bf4:	bl	2a3a4 <ASN1_STRING_length@plt+0x18430>
   27bf8:	strd	r2, [sp, #40]	; 0x28
   27bfc:	orrs	r3, r2, r3
   27c00:	str	r0, [sp, #72]	; 0x48
   27c04:	bne	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   27c08:	ldr	r3, [sp, #80]	; 0x50
   27c0c:	ldr	r2, [sp, #312]	; 0x138
   27c10:	cmp	r0, #1
   27c14:	ldr	ip, [r3]
   27c18:	ldr	r3, [sp, #308]	; 0x134
   27c1c:	sub	r2, r2, ip
   27c20:	sub	r3, r3, ip
   27c24:	mov	r0, r3
   27c28:	asr	r1, r3, #31
   27c2c:	add	lr, r2, r5
   27c30:	str	ip, [sp, #20]
   27c34:	str	lr, [sp, #92]	; 0x5c
   27c38:	strd	r0, [sp, #48]	; 0x30
   27c3c:	mov	r3, #0
   27c40:	ble	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   27c44:	adds	r2, lr, #4
   27c48:	str	r2, [sp, #8]
   27c4c:	mov	r9, r3
   27c50:	adc	r2, r3, r3
   27c54:	mov	r7, r3
   27c58:	add	r3, sp, #320	; 0x140
   27c5c:	str	r2, [sp, #12]
   27c60:	add	r2, ip, lr
   27c64:	str	r2, [sp, #96]	; 0x60
   27c68:	add	r6, r2, #3
   27c6c:	ldrd	r2, [r3]
   27c70:	and	r1, r4, #16
   27c74:	str	r8, [sp, #60]	; 0x3c
   27c78:	strd	r2, [sp, #64]	; 0x40
   27c7c:	ldr	r3, [sp, #80]	; 0x50
   27c80:	str	r1, [sp, #32]
   27c84:	ldrd	r4, [sp, #8]
   27c88:	ldrd	r2, [r3, #8]
   27c8c:	mov	r8, #1
   27c90:	str	r9, [sp, #24]
   27c94:	strd	r2, [sp]
   27c98:	ldr	r3, [pc, #3604]	; 28ab4 <ASN1_STRING_length@plt+0x16b40>
   27c9c:	add	r3, pc, r3
   27ca0:	str	r3, [sp, #76]	; 0x4c
   27ca4:	ldr	r3, [sp, #28]
   27ca8:	cmp	r3, #0
   27cac:	ldrd	r2, [sp]
   27cb0:	beq	27d8c <ASN1_STRING_length@plt+0x15e18>
   27cb4:	cmp	r5, r3
   27cb8:	cmpeq	r4, r2
   27cbc:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   27cc0:	ldr	r3, [sp, #32]
   27cc4:	cmp	r3, #0
   27cc8:	beq	28020 <ASN1_STRING_length@plt+0x160ac>
   27ccc:	ldr	r2, [sp, #40]	; 0x28
   27cd0:	sub	r3, r6, #4
   27cd4:	ldrb	r0, [r3, #1]!
   27cd8:	cmp	r3, r6
   27cdc:	orr	r2, r0, r2, lsl #8
   27ce0:	bne	27cd4 <ASN1_STRING_length@plt+0x15d60>
   27ce4:	ldrd	r0, [sp, #64]	; 0x40
   27ce8:	mov	r3, #0
   27cec:	cmp	r3, r1
   27cf0:	cmpeq	r2, r0
   27cf4:	bcs	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   27cf8:	ldrd	r0, [sp, #48]	; 0x30
   27cfc:	adds	sl, r2, r0
   27d00:	adc	fp, r3, r1
   27d04:	ldrd	r2, [sp]
   27d08:	cmp	fp, r3
   27d0c:	cmpeq	sl, r2
   27d10:	bcs	28a78 <ASN1_STRING_length@plt+0x16b04>
   27d14:	ldr	r3, [sp, #20]
   27d18:	mov	r2, #6
   27d1c:	add	r9, r3, sl
   27d20:	mov	r0, r9
   27d24:	ldr	r1, [sp, #76]	; 0x4c
   27d28:	bl	11ea8 <strncmp@plt>
   27d2c:	cmp	r0, #0
   27d30:	bne	27d50 <ASN1_STRING_length@plt+0x15ddc>
   27d34:	add	r0, r9, #6
   27d38:	bl	11c44 <strlen@plt>
   27d3c:	add	r7, r7, #1
   27d40:	ldr	r3, [sp, #24]
   27d44:	add	r3, r3, #1
   27d48:	str	r3, [sp, #24]
   27d4c:	add	r7, r0, r7
   27d50:	ldr	r3, [sp, #36]	; 0x24
   27d54:	ldr	r2, [sp, #56]	; 0x38
   27d58:	adds	r4, r4, r3
   27d5c:	adc	r5, r5, r2
   27d60:	ldr	r2, [sp, #72]	; 0x48
   27d64:	add	r3, r8, #1
   27d68:	cmp	r2, r3
   27d6c:	ldr	r2, [sp, #60]	; 0x3c
   27d70:	add	r6, r6, r2
   27d74:	beq	280c4 <ASN1_STRING_length@plt+0x16150>
   27d78:	mov	r8, r3
   27d7c:	ldr	r3, [sp, #28]
   27d80:	cmp	r3, #0
   27d84:	ldrd	r2, [sp]
   27d88:	bne	27cb4 <ASN1_STRING_length@plt+0x15d40>
   27d8c:	cmp	r5, r3
   27d90:	cmpeq	r4, r2
   27d94:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   27d98:	ldr	r3, [sp, #32]
   27d9c:	cmp	r3, #0
   27da0:	beq	28040 <ASN1_STRING_length@plt+0x160cc>
   27da4:	ldr	r2, [sp, #40]	; 0x28
   27da8:	sub	r3, r6, #4
   27dac:	ldrb	r0, [r3, #1]!
   27db0:	cmp	r3, r6
   27db4:	orr	r2, r0, r2, lsl #8
   27db8:	bne	27dac <ASN1_STRING_length@plt+0x15e38>
   27dbc:	b	27ce4 <ASN1_STRING_length@plt+0x15d70>
   27dc0:	ldr	r2, [sp, #84]	; 0x54
   27dc4:	ldr	r1, [pc, #3308]	; 28ab8 <ASN1_STRING_length@plt+0x16b44>
   27dc8:	mov	r3, #0
   27dcc:	str	r3, [r2]
   27dd0:	ldr	r0, [sp, #80]	; 0x50
   27dd4:	add	r3, sp, #336	; 0x150
   27dd8:	add	r2, sp, #316	; 0x13c
   27ddc:	add	r1, pc, r1
   27de0:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   27de4:	subs	r3, r0, #0
   27de8:	str	r3, [sp, #24]
   27dec:	blt	27ff4 <ASN1_STRING_length@plt+0x16080>
   27df0:	ldr	r6, [sp, #316]	; 0x13c
   27df4:	cmp	r6, #0
   27df8:	beq	28014 <ASN1_STRING_length@plt+0x160a0>
   27dfc:	add	r3, sp, #336	; 0x150
   27e00:	ldrd	r4, [r3]
   27e04:	orrs	r3, r4, r5
   27e08:	beq	28014 <ASN1_STRING_length@plt+0x160a0>
   27e0c:	ldrb	r3, [r6]
   27e10:	cmp	r3, #0
   27e14:	bne	27e5c <ASN1_STRING_length@plt+0x15ee8>
   27e18:	cmp	r5, #0
   27e1c:	cmpeq	r4, #1
   27e20:	bls	28014 <ASN1_STRING_length@plt+0x160a0>
   27e24:	add	r3, r6, #1
   27e28:	b	27e38 <ASN1_STRING_length@plt+0x15ec4>
   27e2c:	cmp	r5, #0
   27e30:	cmpeq	r4, #1
   27e34:	beq	28014 <ASN1_STRING_length@plt+0x160a0>
   27e38:	subs	r4, r4, #1
   27e3c:	sbc	r5, r5, #0
   27e40:	add	r2, sp, #336	; 0x150
   27e44:	mov	r6, r3
   27e48:	strd	r4, [r2]
   27e4c:	ldrb	r2, [r3]
   27e50:	add	r3, r3, #1
   27e54:	cmp	r2, #0
   27e58:	beq	27e2c <ASN1_STRING_length@plt+0x15eb8>
   27e5c:	cmp	r5, #0
   27e60:	cmpeq	r4, #1
   27e64:	bls	28014 <ASN1_STRING_length@plt+0x160a0>
   27e68:	add	r9, r6, r4
   27e6c:	mov	r0, #0
   27e70:	mov	r1, #0
   27e74:	sub	r9, r9, #1
   27e78:	mov	r2, r0
   27e7c:	mov	r3, r1
   27e80:	sub	ip, r6, #1
   27e84:	mov	sl, #0
   27e88:	str	r4, [sp, #20]
   27e8c:	ldrb	r8, [ip, #1]!
   27e90:	adds	r7, r2, #1
   27e94:	adc	lr, r3, #0
   27e98:	cmp	r8, #0
   27e9c:	bne	27eb4 <ASN1_STRING_length@plt+0x15f40>
   27ea0:	cmp	r3, r1
   27ea4:	cmpeq	r2, r0
   27ea8:	mov	r1, lr
   27eac:	mov	r0, r7
   27eb0:	addne	sl, sl, #1
   27eb4:	cmp	ip, r9
   27eb8:	mov	r2, r7
   27ebc:	mov	r3, lr
   27ec0:	bne	27e8c <ASN1_STRING_length@plt+0x15f18>
   27ec4:	ldr	r3, [sp, #20]
   27ec8:	sub	r3, r3, #1
   27ecc:	add	r2, r6, r3
   27ed0:	ldrb	r3, [r6, r3]
   27ed4:	str	r2, [sp, #56]	; 0x38
   27ed8:	cmp	r3, #0
   27edc:	addne	sl, sl, #1
   27ee0:	ldr	r3, [sp, #20]
   27ee4:	lsl	r7, sl, #4
   27ee8:	add	r0, r3, #1
   27eec:	add	r0, r0, r7
   27ef0:	bl	11d64 <malloc@plt>
   27ef4:	ldr	r3, [sp, #84]	; 0x54
   27ef8:	cmp	r0, #0
   27efc:	mov	r8, r0
   27f00:	str	r0, [r3]
   27f04:	beq	27fe4 <ASN1_STRING_length@plt+0x16070>
   27f08:	mov	sl, #0
   27f0c:	mov	fp, #0
   27f10:	mov	r2, #0
   27f14:	mov	r9, #71	; 0x47
   27f18:	add	r3, r0, r7
   27f1c:	strd	r4, [sp]
   27f20:	mov	r0, sl
   27f24:	mov	r1, fp
   27f28:	strd	sl, [sp, #28]
   27f2c:	str	r2, [sp, #24]
   27f30:	mov	r5, r6
   27f34:	str	r8, [sp, #8]
   27f38:	str	r9, [sp, #36]	; 0x24
   27f3c:	b	27fb8 <ASN1_STRING_length@plt+0x16044>
   27f40:	ldr	r4, [sp, #24]
   27f44:	ldr	lr, [sp, #8]
   27f48:	sub	r7, r0, sl
   27f4c:	lsl	r2, r4, #4
   27f50:	add	r1, r5, sl
   27f54:	ldr	sl, [sp, #28]
   27f58:	add	r0, lr, r2
   27f5c:	str	sl, [lr, r2]
   27f60:	ldr	lr, [sp, #32]
   27f64:	mov	ip, r0
   27f68:	str	lr, [r0, #4]
   27f6c:	ldr	lr, [sp, #36]	; 0x24
   27f70:	mov	r2, r7
   27f74:	mov	r0, r3
   27f78:	str	r3, [ip, #12]
   27f7c:	str	lr, [ip, #8]
   27f80:	bl	11c5c <memcpy@plt>
   27f84:	add	r2, r7, #1
   27f88:	mov	sl, r8
   27f8c:	mov	fp, r9
   27f90:	add	r1, r4, #1
   27f94:	str	r1, [sp, #24]
   27f98:	add	r3, r0, r2
   27f9c:	strb	r6, [r0, r7]
   27fa0:	ldrd	r0, [sp]
   27fa4:	cmp	r9, r1
   27fa8:	cmpeq	r8, r0
   27fac:	mov	r1, r9
   27fb0:	mov	r0, r8
   27fb4:	beq	28060 <ASN1_STRING_length@plt+0x160ec>
   27fb8:	ldrb	r6, [r5, r0]
   27fbc:	adds	r8, r0, #1
   27fc0:	adc	r9, r1, #0
   27fc4:	cmp	r6, #0
   27fc8:	bne	27fa0 <ASN1_STRING_length@plt+0x1602c>
   27fcc:	cmp	r1, fp
   27fd0:	cmpeq	r0, sl
   27fd4:	bne	27f40 <ASN1_STRING_length@plt+0x15fcc>
   27fd8:	mov	sl, r8
   27fdc:	mov	fp, r9
   27fe0:	b	27fa0 <ASN1_STRING_length@plt+0x1602c>
   27fe4:	bl	11f38 <__errno_location@plt>
   27fe8:	ldr	r3, [r0]
   27fec:	rsb	r3, r3, #0
   27ff0:	str	r3, [sp, #24]
   27ff4:	ldr	r3, [sp, #88]	; 0x58
   27ff8:	ldr	r2, [sp, #348]	; 0x15c
   27ffc:	ldr	r0, [sp, #24]
   28000:	ldr	r3, [r3]
   28004:	cmp	r2, r3
   28008:	bne	28a98 <ASN1_STRING_length@plt+0x16b24>
   2800c:	add	sp, sp, #356	; 0x164
   28010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28014:	mov	r3, #0
   28018:	str	r3, [sp, #24]
   2801c:	b	27ff4 <ASN1_STRING_length@plt+0x16080>
   28020:	ldr	r2, [sp, #40]	; 0x28
   28024:	add	ip, r6, #1
   28028:	sub	r3, r6, #3
   2802c:	ldrb	r0, [ip, #-1]!
   28030:	cmp	ip, r3
   28034:	orr	r2, r0, r2, lsl #8
   28038:	bne	2802c <ASN1_STRING_length@plt+0x160b8>
   2803c:	b	27ce4 <ASN1_STRING_length@plt+0x15d70>
   28040:	ldr	r2, [sp, #40]	; 0x28
   28044:	add	ip, r6, #1
   28048:	sub	r3, r6, #3
   2804c:	ldrb	r0, [ip, #-1]!
   28050:	cmp	r3, ip
   28054:	orr	r2, r0, r2, lsl #8
   28058:	bne	2804c <ASN1_STRING_length@plt+0x160d8>
   2805c:	b	27ce4 <ASN1_STRING_length@plt+0x15d70>
   28060:	ldr	r2, [sp, #56]	; 0x38
   28064:	ldr	r8, [sp, #8]
   28068:	ldrb	r2, [r2]
   2806c:	cmp	r2, #0
   28070:	beq	27ff4 <ASN1_STRING_length@plt+0x16080>
   28074:	ldr	r0, [sp, #24]
   28078:	ldr	r1, [sp, #20]
   2807c:	mov	r6, #0
   28080:	lsl	r2, r0, #4
   28084:	add	ip, r8, r2
   28088:	mov	r7, #0
   2808c:	sub	r4, r1, sl
   28090:	add	r0, r0, #1
   28094:	mov	lr, #71	; 0x47
   28098:	strd	r6, [r8, r2]
   2809c:	str	r0, [sp, #24]
   280a0:	mov	r2, r4
   280a4:	add	r1, r5, sl
   280a8:	mov	r0, r3
   280ac:	str	r3, [ip, #12]
   280b0:	str	lr, [ip, #8]
   280b4:	bl	11c5c <memcpy@plt>
   280b8:	mov	r2, #0
   280bc:	strb	r2, [r0, r4]
   280c0:	b	27ff4 <ASN1_STRING_length@plt+0x16080>
   280c4:	ldr	r9, [sp, #24]
   280c8:	str	r8, [sp, #100]	; 0x64
   280cc:	cmp	r9, #0
   280d0:	beq	27dc0 <ASN1_STRING_length@plt+0x15e4c>
   280d4:	lsl	r4, r9, #4
   280d8:	add	r0, r4, r7
   280dc:	bl	11d64 <malloc@plt>
   280e0:	ldr	r2, [sp, #84]	; 0x54
   280e4:	cmp	r0, #0
   280e8:	str	r0, [sp, #64]	; 0x40
   280ec:	str	r0, [r2]
   280f0:	beq	27fe4 <ASN1_STRING_length@plt+0x16070>
   280f4:	ldr	r3, [sp, #92]	; 0x5c
   280f8:	ldr	r8, [sp, #96]	; 0x60
   280fc:	add	r5, r3, #8
   28100:	ldr	r3, [sp, #20]
   28104:	add	r9, r5, r3
   28108:	ldr	r3, [sp, #64]	; 0x40
   2810c:	add	r3, r3, r4
   28110:	str	r3, [sp, #76]	; 0x4c
   28114:	mov	r3, #0
   28118:	str	r3, [sp, #24]
   2811c:	mov	r3, #1
   28120:	str	r3, [sp, #72]	; 0x48
   28124:	ldr	r3, [pc, #2448]	; 28abc <ASN1_STRING_length@plt+0x16b48>
   28128:	add	r3, pc, r3
   2812c:	str	r3, [sp, #264]	; 0x108
   28130:	ldr	r3, [pc, #2440]	; 28ac0 <ASN1_STRING_length@plt+0x16b4c>
   28134:	add	r3, pc, r3
   28138:	str	r3, [sp, #268]	; 0x10c
   2813c:	ldr	r3, [sp, #28]
   28140:	ldrd	r0, [sp]
   28144:	cmp	r3, #0
   28148:	ldrd	r2, [sp, #8]
   2814c:	beq	2855c <ASN1_STRING_length@plt+0x165e8>
   28150:	cmp	r3, r1
   28154:	cmpeq	r2, r0
   28158:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   2815c:	ldr	r3, [sp, #32]
   28160:	cmp	r3, #0
   28164:	beq	2871c <ASN1_STRING_length@plt+0x167a8>
   28168:	ldr	r0, [sp, #40]	; 0x28
   2816c:	sub	r1, r8, #1
   28170:	add	ip, r8, #3
   28174:	ldrb	r2, [r1, #1]!
   28178:	cmp	ip, r1
   2817c:	orr	r0, r2, r0, lsl #8
   28180:	bne	28174 <ASN1_STRING_length@plt+0x16200>
   28184:	ldrd	r2, [sp, #8]
   28188:	ldrd	r4, [sp]
   2818c:	adds	r1, r2, #4
   28190:	adc	r3, r3, #0
   28194:	str	r1, [sp, #160]	; 0xa0
   28198:	str	r3, [sp, #164]	; 0xa4
   2819c:	ldrd	r2, [sp, #160]	; 0xa0
   281a0:	cmp	r3, r5
   281a4:	cmpeq	r2, r4
   281a8:	mov	r3, r0
   281ac:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   281b0:	sub	ip, r9, #4
   281b4:	mov	r4, #0
   281b8:	mov	r5, #0
   281bc:	ldrb	r0, [ip], #1
   281c0:	lsl	r2, r5, #8
   281c4:	orr	r2, r2, r4, lsr #24
   281c8:	cmp	r9, ip
   281cc:	orr	r4, r0, r4, lsl #8
   281d0:	mov	r5, r2
   281d4:	bne	281bc <ASN1_STRING_length@plt+0x16248>
   281d8:	ldrd	r0, [sp, #8]
   281dc:	ldrd	r6, [sp]
   281e0:	adds	r2, r0, #9
   281e4:	str	r2, [sp, #152]	; 0x98
   281e8:	adc	r2, r1, #0
   281ec:	str	r2, [sp, #156]	; 0x9c
   281f0:	ldrd	r0, [sp, #152]	; 0x98
   281f4:	cmp	r1, r7
   281f8:	cmpeq	r0, r6
   281fc:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28200:	ldrd	r0, [sp, #8]
   28204:	ldrd	r6, [sp]
   28208:	adds	r2, r0, #12
   2820c:	str	r2, [sp, #144]	; 0x90
   28210:	adc	r2, r1, #0
   28214:	str	r2, [sp, #148]	; 0x94
   28218:	ldrd	r0, [sp, #144]	; 0x90
   2821c:	cmp	r1, r7
   28220:	cmpeq	r0, r6
   28224:	ldrb	r7, [r9, #4]
   28228:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   2822c:	ldrh	r6, [r9, #6]
   28230:	rev16	r6, r6
   28234:	uxth	r6, r6
   28238:	ldrd	sl, [sp, #48]	; 0x30
   2823c:	adds	sl, sl, r3
   28240:	ldrd	r2, [sp]
   28244:	adc	fp, fp, #0
   28248:	cmp	fp, r3
   2824c:	cmpeq	sl, r2
   28250:	bcs	28a9c <ASN1_STRING_length@plt+0x16b28>
   28254:	ldr	r3, [sp, #20]
   28258:	mov	r2, #6
   2825c:	add	sl, r3, sl
   28260:	mov	r0, sl
   28264:	ldr	r1, [sp, #264]	; 0x108
   28268:	bl	11ea8 <strncmp@plt>
   2826c:	cmp	r0, #0
   28270:	bne	28514 <ASN1_STRING_length@plt+0x165a0>
   28274:	ldr	r3, [pc, #2120]	; 28ac4 <ASN1_STRING_length@plt+0x16b50>
   28278:	cmp	r6, r3
   2827c:	cmpne	r6, #0
   28280:	ldr	r3, [sp, #24]
   28284:	lsl	ip, r3, #4
   28288:	add	r3, sl, #6
   2828c:	str	r3, [sp, #84]	; 0x54
   28290:	lsr	r3, r7, #4
   28294:	str	r3, [sp, #92]	; 0x5c
   28298:	ldr	r3, [sp, #64]	; 0x40
   2829c:	add	r3, r3, ip
   282a0:	str	r3, [sp, #96]	; 0x60
   282a4:	beq	284a8 <ASN1_STRING_length@plt+0x16534>
   282a8:	ldr	r3, [sp, #80]	; 0x50
   282ac:	ldrh	r3, [r3, #32]
   282b0:	cmp	r3, r6
   282b4:	bls	28aa0 <ASN1_STRING_length@plt+0x16b2c>
   282b8:	ldr	r2, [sp, #80]	; 0x50
   282bc:	ldrh	r3, [r2, #34]	; 0x22
   282c0:	ldrd	r0, [r2, #24]
   282c4:	mul	r6, r6, r3
   282c8:	adds	r2, r0, r6
   282cc:	adc	r3, r1, r6, asr #31
   282d0:	ldrd	r0, [sp]
   282d4:	cmp	r3, r1
   282d8:	cmpeq	r2, r0
   282dc:	bcs	28a9c <ASN1_STRING_length@plt+0x16b28>
   282e0:	ldr	lr, [sp, #20]
   282e4:	asr	r3, r2, #31
   282e8:	cmn	lr, r2
   282ec:	strd	r2, [sp, #104]	; 0x68
   282f0:	beq	288e8 <ASN1_STRING_length@plt+0x16974>
   282f4:	ldr	r6, [sp, #28]
   282f8:	cmp	r6, #0
   282fc:	beq	287e4 <ASN1_STRING_length@plt+0x16870>
   28300:	adds	r6, r2, #20
   28304:	str	r6, [sp, #224]	; 0xe0
   28308:	adc	r6, r3, #0
   2830c:	str	r6, [sp, #228]	; 0xe4
   28310:	adds	r6, r2, #24
   28314:	adc	r3, r3, #0
   28318:	str	r6, [sp, #248]	; 0xf8
   2831c:	str	r3, [sp, #252]	; 0xfc
   28320:	ldrd	r2, [sp, #248]	; 0xf8
   28324:	cmp	r3, r1
   28328:	cmpeq	r2, r0
   2832c:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28330:	ldr	r3, [sp, #32]
   28334:	cmp	r3, #0
   28338:	ldr	r3, [sp, #224]	; 0xe0
   2833c:	add	r7, lr, r3
   28340:	beq	289cc <ASN1_STRING_length@plt+0x16a58>
   28344:	sub	r6, r7, #1
   28348:	mov	r2, #0
   2834c:	add	r7, r7, #3
   28350:	mov	r3, #0
   28354:	ldrb	sl, [r6, #1]!
   28358:	lsl	r1, r3, #8
   2835c:	orr	r1, r1, r2, lsr #24
   28360:	cmp	r7, r6
   28364:	orr	r2, sl, r2, lsl #8
   28368:	mov	r3, r1
   2836c:	bne	28354 <ASN1_STRING_length@plt+0x163e0>
   28370:	ldr	r1, [sp, #104]	; 0x68
   28374:	ldrd	r6, [sp]
   28378:	adds	sl, r1, #16
   2837c:	ldrd	r0, [sp, #224]	; 0xe0
   28380:	cmp	r1, r7
   28384:	cmpeq	r0, r6
   28388:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   2838c:	ldr	r1, [sp, #20]
   28390:	mov	r0, #0
   28394:	add	fp, r1, #4
   28398:	add	fp, fp, sl
   2839c:	add	sl, r1, sl
   283a0:	mov	r1, #0
   283a4:	ldrb	r6, [sl], #1
   283a8:	lsl	lr, r1, #8
   283ac:	orr	lr, lr, r0, lsr #24
   283b0:	cmp	fp, sl
   283b4:	orr	r0, r6, r0, lsl #8
   283b8:	mov	r1, lr
   283bc:	bne	283a4 <ASN1_STRING_length@plt+0x16430>
   283c0:	strd	r0, [sp, #120]	; 0x78
   283c4:	ldrd	r0, [sp, #104]	; 0x68
   283c8:	ldrd	r6, [sp]
   283cc:	adds	lr, r0, #4
   283d0:	adc	r1, r1, #0
   283d4:	str	r1, [sp, #276]	; 0x114
   283d8:	add	r1, sp, #272	; 0x110
   283dc:	str	lr, [sp, #272]	; 0x110
   283e0:	ldrd	r0, [r1]
   283e4:	cmp	r1, r7
   283e8:	cmpeq	r0, r6
   283ec:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   283f0:	ldrd	r0, [sp, #120]	; 0x78
   283f4:	ldrd	sl, [sp]
   283f8:	adds	r6, r0, r2
   283fc:	adcs	r7, r1, r3
   28400:	movcs	lr, #1
   28404:	movcc	lr, #0
   28408:	cmp	r7, fp
   2840c:	cmpeq	r6, sl
   28410:	orrhi	lr, lr, #1
   28414:	cmp	lr, #0
   28418:	bne	288e8 <ASN1_STRING_length@plt+0x16974>
   2841c:	subs	r1, r2, #4
   28420:	sbc	r3, r3, #0
   28424:	str	r1, [sp, #112]	; 0x70
   28428:	str	r3, [sp, #116]	; 0x74
   2842c:	ldrd	r2, [sp, #112]	; 0x70
   28430:	cmp	r5, r3
   28434:	cmpeq	r4, r2
   28438:	bhi	288e8 <ASN1_STRING_length@plt+0x16974>
   2843c:	ldrd	r2, [sp, #120]	; 0x78
   28440:	adds	r0, r4, r2
   28444:	adc	r3, r5, r3
   28448:	adds	r2, r0, #4
   2844c:	adc	r3, r3, #0
   28450:	str	r2, [sp, #240]	; 0xf0
   28454:	str	r3, [sp, #244]	; 0xf4
   28458:	ldrd	r2, [sp, #240]	; 0xf0
   2845c:	cmp	fp, r3
   28460:	cmpeq	sl, r2
   28464:	bcc	288e4 <ASN1_STRING_length@plt+0x16970>
   28468:	ldr	r3, [sp, #32]
   2846c:	cmp	r3, #0
   28470:	ldr	r3, [sp, #20]
   28474:	add	r0, r3, r0
   28478:	beq	288f4 <ASN1_STRING_length@plt+0x16980>
   2847c:	sub	lr, r0, #1
   28480:	mov	r4, #0
   28484:	add	r0, r0, #3
   28488:	mov	r5, #0
   2848c:	ldrb	r6, [lr, #1]!
   28490:	lsl	r3, r5, #8
   28494:	orr	r3, r3, r4, lsr #24
   28498:	cmp	r0, lr
   2849c:	orr	r4, r6, r4, lsl #8
   284a0:	mov	r5, r3
   284a4:	bne	2848c <ASN1_STRING_length@plt+0x16518>
   284a8:	ldr	r3, [sp, #92]	; 0x5c
   284ac:	ldr	r2, [sp, #64]	; 0x40
   284b0:	cmp	r3, #2
   284b4:	ldr	r6, [sp, #84]	; 0x54
   284b8:	strd	r4, [r2, ip]
   284bc:	ldrls	r2, [sp, #268]	; 0x10c
   284c0:	ldr	r5, [sp, #76]	; 0x4c
   284c4:	movhi	r3, #0
   284c8:	ldrbls	r3, [r2, r3]
   284cc:	ldr	r2, [sp, #96]	; 0x60
   284d0:	mov	r0, r6
   284d4:	str	r3, [r2, #8]
   284d8:	str	r5, [r2, #12]
   284dc:	bl	11c44 <strlen@plt>
   284e0:	mov	r1, r6
   284e4:	mov	r4, r0
   284e8:	mov	r2, r0
   284ec:	mov	r0, r5
   284f0:	bl	11c5c <memcpy@plt>
   284f4:	ldr	r1, [sp, #24]
   284f8:	add	r3, r4, #1
   284fc:	mov	r2, #0
   28500:	add	r1, r1, #1
   28504:	add	r3, r5, r3
   28508:	str	r1, [sp, #24]
   2850c:	strb	r2, [r5, r4]
   28510:	str	r3, [sp, #76]	; 0x4c
   28514:	ldr	r3, [sp, #8]
   28518:	ldr	r2, [sp, #36]	; 0x24
   2851c:	adds	r3, r3, r2
   28520:	str	r3, [sp, #8]
   28524:	ldr	r2, [sp, #56]	; 0x38
   28528:	ldr	r3, [sp, #12]
   2852c:	adc	r3, r3, r2
   28530:	str	r3, [sp, #12]
   28534:	ldr	r2, [sp, #100]	; 0x64
   28538:	ldr	r3, [sp, #72]	; 0x48
   2853c:	cmp	r3, r2
   28540:	ldr	r2, [sp, #60]	; 0x3c
   28544:	add	r3, r3, #1
   28548:	add	r9, r9, r2
   2854c:	add	r8, r8, r2
   28550:	beq	27ff4 <ASN1_STRING_length@plt+0x16080>
   28554:	str	r3, [sp, #72]	; 0x48
   28558:	b	2813c <ASN1_STRING_length@plt+0x161c8>
   2855c:	cmp	r3, r1
   28560:	cmpeq	r2, r0
   28564:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28568:	ldr	r3, [sp, #32]
   2856c:	cmp	r3, #0
   28570:	beq	28650 <ASN1_STRING_length@plt+0x166dc>
   28574:	ldr	r3, [sp, #40]	; 0x28
   28578:	sub	r2, r8, #1
   2857c:	add	ip, r8, #3
   28580:	ldrb	r0, [r2, #1]!
   28584:	cmp	ip, r2
   28588:	orr	r3, r0, r3, lsl #8
   2858c:	bne	28580 <ASN1_STRING_length@plt+0x1660c>
   28590:	ldrd	r0, [sp, #8]
   28594:	ldrd	r4, [sp]
   28598:	adds	r2, r0, #12
   2859c:	str	r2, [sp, #208]	; 0xd0
   285a0:	adc	r2, r1, #0
   285a4:	str	r2, [sp, #212]	; 0xd4
   285a8:	ldrd	r0, [sp, #208]	; 0xd0
   285ac:	cmp	r1, r5
   285b0:	cmpeq	r0, r4
   285b4:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   285b8:	mov	ip, r9
   285bc:	mov	r4, #0
   285c0:	mov	r5, #0
   285c4:	add	lr, r9, #8
   285c8:	ldrb	r0, [ip], #1
   285cc:	lsl	r2, r5, #8
   285d0:	orr	r2, r2, r4, lsr #24
   285d4:	cmp	ip, lr
   285d8:	orr	r4, r0, r4, lsl #8
   285dc:	mov	r5, r2
   285e0:	bne	285c8 <ASN1_STRING_length@plt+0x16654>
   285e4:	ldrd	r0, [sp, #8]
   285e8:	ldrd	r6, [sp]
   285ec:	adds	r2, r0, #1
   285f0:	str	r2, [sp, #200]	; 0xc8
   285f4:	adc	r2, r1, #0
   285f8:	str	r2, [sp, #204]	; 0xcc
   285fc:	ldrd	r0, [sp, #200]	; 0xc8
   28600:	cmp	r1, r7
   28604:	cmpeq	r0, r6
   28608:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   2860c:	ldrd	r0, [sp, #8]
   28610:	ldrd	r6, [sp]
   28614:	adds	r2, r0, #4
   28618:	str	r2, [sp, #192]	; 0xc0
   2861c:	adc	r2, r1, #0
   28620:	str	r2, [sp, #196]	; 0xc4
   28624:	ldr	r2, [sp, #20]
   28628:	add	r2, r2, r0
   2862c:	ldrd	r0, [sp, #192]	; 0xc0
   28630:	cmp	r1, r7
   28634:	cmpeq	r0, r6
   28638:	ldrb	r7, [r2]
   2863c:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28640:	ldrh	r6, [r9, #-2]
   28644:	rev16	r6, r6
   28648:	uxth	r6, r6
   2864c:	b	28238 <ASN1_STRING_length@plt+0x162c4>
   28650:	ldr	r3, [sp, #40]	; 0x28
   28654:	add	r2, r8, #4
   28658:	ldrb	r0, [r2, #-1]!
   2865c:	cmp	r8, r2
   28660:	orr	r3, r0, r3, lsl #8
   28664:	bne	28658 <ASN1_STRING_length@plt+0x166e4>
   28668:	ldrd	r0, [sp, #8]
   2866c:	ldrd	r4, [sp]
   28670:	adds	r2, r0, #12
   28674:	str	r2, [sp, #216]	; 0xd8
   28678:	adc	r2, r1, #0
   2867c:	str	r2, [sp, #220]	; 0xdc
   28680:	ldrd	r0, [sp, #216]	; 0xd8
   28684:	cmp	r1, r5
   28688:	cmpeq	r0, r4
   2868c:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28690:	add	ip, r9, #8
   28694:	mov	r4, #0
   28698:	mov	r5, #0
   2869c:	ldrb	r0, [ip, #-1]!
   286a0:	lsl	r2, r5, #8
   286a4:	orr	r2, r2, r4, lsr #24
   286a8:	cmp	r9, ip
   286ac:	orr	r4, r0, r4, lsl #8
   286b0:	mov	r5, r2
   286b4:	bne	2869c <ASN1_STRING_length@plt+0x16728>
   286b8:	ldrd	r0, [sp, #8]
   286bc:	ldrd	r6, [sp]
   286c0:	adds	r2, r0, #1
   286c4:	str	r2, [sp, #184]	; 0xb8
   286c8:	adc	r2, r1, #0
   286cc:	str	r2, [sp, #188]	; 0xbc
   286d0:	ldrd	r0, [sp, #184]	; 0xb8
   286d4:	cmp	r1, r7
   286d8:	cmpeq	r0, r6
   286dc:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   286e0:	ldrd	r0, [sp, #8]
   286e4:	ldrd	r6, [sp]
   286e8:	adds	r2, r0, #4
   286ec:	str	r2, [sp, #176]	; 0xb0
   286f0:	adc	r2, r1, #0
   286f4:	str	r2, [sp, #180]	; 0xb4
   286f8:	ldr	r2, [sp, #20]
   286fc:	add	r2, r2, r0
   28700:	ldrd	r0, [sp, #176]	; 0xb0
   28704:	cmp	r1, r7
   28708:	cmpeq	r0, r6
   2870c:	ldrb	r7, [r2]
   28710:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28714:	ldrh	r6, [r9, #-2]
   28718:	b	28238 <ASN1_STRING_length@plt+0x162c4>
   2871c:	ldr	r3, [sp, #40]	; 0x28
   28720:	add	r2, r8, #4
   28724:	ldrb	r0, [r2, #-1]!
   28728:	cmp	r2, r8
   2872c:	orr	r3, r0, r3, lsl #8
   28730:	bne	28724 <ASN1_STRING_length@plt+0x167b0>
   28734:	ldrd	r0, [sp, #8]
   28738:	ldrd	r4, [sp]
   2873c:	adds	r2, r0, #4
   28740:	str	r2, [sp, #168]	; 0xa8
   28744:	adc	r2, r1, #0
   28748:	str	r2, [sp, #172]	; 0xac
   2874c:	ldrd	r0, [sp, #168]	; 0xa8
   28750:	cmp	r1, r5
   28754:	cmpeq	r0, r4
   28758:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   2875c:	mov	ip, r9
   28760:	mov	r4, #0
   28764:	mov	r5, #0
   28768:	sub	lr, r9, #4
   2876c:	ldrb	r0, [ip, #-1]!
   28770:	lsl	r2, r5, #8
   28774:	orr	r2, r2, r4, lsr #24
   28778:	cmp	lr, ip
   2877c:	orr	r4, r0, r4, lsl #8
   28780:	mov	r5, r2
   28784:	bne	2876c <ASN1_STRING_length@plt+0x167f8>
   28788:	ldrd	r0, [sp, #8]
   2878c:	ldrd	r6, [sp]
   28790:	adds	r2, r0, #9
   28794:	str	r2, [sp, #136]	; 0x88
   28798:	adc	r2, r1, #0
   2879c:	str	r2, [sp, #140]	; 0x8c
   287a0:	ldrd	r0, [sp, #136]	; 0x88
   287a4:	cmp	r1, r7
   287a8:	cmpeq	r0, r6
   287ac:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   287b0:	ldrd	r0, [sp, #8]
   287b4:	ldrd	r6, [sp]
   287b8:	adds	r2, r0, #12
   287bc:	str	r2, [sp, #128]	; 0x80
   287c0:	adc	r2, r1, #0
   287c4:	str	r2, [sp, #132]	; 0x84
   287c8:	ldrd	r0, [sp, #128]	; 0x80
   287cc:	cmp	r1, r7
   287d0:	cmpeq	r0, r6
   287d4:	ldrb	r7, [r9, #4]
   287d8:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   287dc:	ldrh	r6, [r9, #6]
   287e0:	b	28238 <ASN1_STRING_length@plt+0x162c4>
   287e4:	ldrd	r2, [sp, #104]	; 0x68
   287e8:	adds	r1, r2, #32
   287ec:	str	r1, [sp, #232]	; 0xe8
   287f0:	adc	r1, r3, #0
   287f4:	str	r1, [sp, #236]	; 0xec
   287f8:	adds	r1, r2, #40	; 0x28
   287fc:	str	r1, [sp, #256]	; 0x100
   28800:	add	r1, sp, #256	; 0x100
   28804:	adc	r3, r3, #0
   28808:	str	r3, [sp, #260]	; 0x104
   2880c:	ldrd	r2, [sp]
   28810:	ldrd	r0, [r1]
   28814:	cmp	r3, r1
   28818:	cmpeq	r2, r0
   2881c:	bcc	288e4 <ASN1_STRING_length@plt+0x16970>
   28820:	ldr	r3, [sp, #32]
   28824:	ldr	r2, [sp, #232]	; 0xe8
   28828:	cmp	r3, #0
   2882c:	ldr	r3, [sp, #20]
   28830:	add	r7, r3, r2
   28834:	beq	28920 <ASN1_STRING_length@plt+0x169ac>
   28838:	sub	r6, r7, #1
   2883c:	mov	r2, #0
   28840:	add	r7, r7, #7
   28844:	mov	r3, #0
   28848:	ldrb	sl, [r6, #1]!
   2884c:	lsl	r1, r3, #8
   28850:	orr	r1, r1, r2, lsr #24
   28854:	cmp	r7, r6
   28858:	orr	r2, sl, r2, lsl #8
   2885c:	mov	r3, r1
   28860:	bne	28848 <ASN1_STRING_length@plt+0x168d4>
   28864:	ldr	r1, [sp, #104]	; 0x68
   28868:	ldrd	r6, [sp]
   2886c:	adds	sl, r1, #24
   28870:	ldrd	r0, [sp, #232]	; 0xe8
   28874:	cmp	r1, r7
   28878:	cmpeq	r0, r6
   2887c:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28880:	ldr	r1, [sp, #20]
   28884:	mov	r0, #0
   28888:	add	fp, r1, #8
   2888c:	add	fp, fp, sl
   28890:	add	sl, r1, sl
   28894:	mov	r1, #0
   28898:	ldrb	r6, [sl], #1
   2889c:	lsl	lr, r1, #8
   288a0:	orr	lr, lr, r0, lsr #24
   288a4:	cmp	fp, sl
   288a8:	orr	r0, r6, r0, lsl #8
   288ac:	mov	r1, lr
   288b0:	bne	28898 <ASN1_STRING_length@plt+0x16924>
   288b4:	strd	r0, [sp, #120]	; 0x78
   288b8:	ldrd	r0, [sp, #104]	; 0x68
   288bc:	adds	lr, r0, #4
   288c0:	str	lr, [sp, #288]	; 0x120
   288c4:	add	lr, sp, #288	; 0x120
   288c8:	adc	r1, r1, #0
   288cc:	str	r1, [sp, #292]	; 0x124
   288d0:	ldrd	r0, [sp]
   288d4:	ldrd	r6, [lr]
   288d8:	cmp	r1, r7
   288dc:	cmpeq	r0, r6
   288e0:	bcs	283f0 <ASN1_STRING_length@plt+0x1647c>
   288e4:	bl	25dc0 <ASN1_STRING_length@plt+0x13e4c>
   288e8:	mvn	r4, #0
   288ec:	mvn	r5, #0
   288f0:	b	284a8 <ASN1_STRING_length@plt+0x16534>
   288f4:	add	lr, r0, #4
   288f8:	mov	r4, #0
   288fc:	mov	r5, #0
   28900:	ldrb	r6, [lr, #-1]!
   28904:	lsl	r3, r5, #8
   28908:	orr	r3, r3, r4, lsr #24
   2890c:	cmp	r0, lr
   28910:	orr	r4, r6, r4, lsl #8
   28914:	mov	r5, r3
   28918:	bne	28900 <ASN1_STRING_length@plt+0x1698c>
   2891c:	b	284a8 <ASN1_STRING_length@plt+0x16534>
   28920:	add	r6, r7, #8
   28924:	mov	r2, #0
   28928:	mov	r3, #0
   2892c:	ldrb	sl, [r6, #-1]!
   28930:	lsl	r1, r3, #8
   28934:	orr	r1, r1, r2, lsr #24
   28938:	cmp	r7, r6
   2893c:	orr	r2, sl, r2, lsl #8
   28940:	mov	r3, r1
   28944:	bne	2892c <ASN1_STRING_length@plt+0x169b8>
   28948:	ldr	r1, [sp, #104]	; 0x68
   2894c:	ldrd	r6, [sp]
   28950:	adds	fp, r1, #24
   28954:	ldrd	r0, [sp, #232]	; 0xe8
   28958:	cmp	r1, r7
   2895c:	cmpeq	r0, r6
   28960:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28964:	ldr	r1, [sp, #20]
   28968:	add	sl, fp, #8
   2896c:	add	sl, r1, sl
   28970:	add	fp, r1, fp
   28974:	mov	r0, #0
   28978:	mov	r1, #0
   2897c:	ldrb	r6, [sl, #-1]!
   28980:	lsl	lr, r1, #8
   28984:	orr	lr, lr, r0, lsr #24
   28988:	cmp	fp, sl
   2898c:	orr	r0, r6, r0, lsl #8
   28990:	mov	r1, lr
   28994:	bne	2897c <ASN1_STRING_length@plt+0x16a08>
   28998:	strd	r0, [sp, #120]	; 0x78
   2899c:	ldrd	r0, [sp, #104]	; 0x68
   289a0:	adds	lr, r0, #4
   289a4:	str	lr, [sp, #296]	; 0x128
   289a8:	add	lr, sp, #296	; 0x128
   289ac:	adc	r1, r1, #0
   289b0:	str	r1, [sp, #300]	; 0x12c
   289b4:	ldrd	r0, [sp]
   289b8:	ldrd	r6, [lr]
   289bc:	cmp	r1, r7
   289c0:	cmpeq	r0, r6
   289c4:	bcs	283f0 <ASN1_STRING_length@plt+0x1647c>
   289c8:	b	288e4 <ASN1_STRING_length@plt+0x16970>
   289cc:	add	r6, r7, #4
   289d0:	mov	r2, #0
   289d4:	mov	r3, #0
   289d8:	ldrb	sl, [r6, #-1]!
   289dc:	lsl	r1, r3, #8
   289e0:	orr	r1, r1, r2, lsr #24
   289e4:	cmp	r7, r6
   289e8:	orr	r2, sl, r2, lsl #8
   289ec:	mov	r3, r1
   289f0:	bne	289d8 <ASN1_STRING_length@plt+0x16a64>
   289f4:	ldr	r1, [sp, #104]	; 0x68
   289f8:	ldrd	r6, [sp]
   289fc:	adds	fp, r1, #16
   28a00:	ldrd	r0, [sp, #224]	; 0xe0
   28a04:	cmp	r1, r7
   28a08:	cmpeq	r0, r6
   28a0c:	bhi	288e4 <ASN1_STRING_length@plt+0x16970>
   28a10:	ldr	r1, [sp, #20]
   28a14:	add	sl, fp, #4
   28a18:	add	sl, r1, sl
   28a1c:	add	fp, r1, fp
   28a20:	mov	r0, #0
   28a24:	mov	r1, #0
   28a28:	ldrb	r6, [sl, #-1]!
   28a2c:	lsl	lr, r1, #8
   28a30:	orr	lr, lr, r0, lsr #24
   28a34:	cmp	fp, sl
   28a38:	orr	r0, r6, r0, lsl #8
   28a3c:	mov	r1, lr
   28a40:	bne	28a28 <ASN1_STRING_length@plt+0x16ab4>
   28a44:	strd	r0, [sp, #120]	; 0x78
   28a48:	ldrd	r0, [sp, #104]	; 0x68
   28a4c:	adds	lr, r0, #4
   28a50:	str	lr, [sp, #280]	; 0x118
   28a54:	add	lr, sp, #280	; 0x118
   28a58:	adc	r1, r1, #0
   28a5c:	str	r1, [sp, #284]	; 0x11c
   28a60:	ldrd	r0, [sp]
   28a64:	ldrd	r6, [lr]
   28a68:	cmp	r1, r7
   28a6c:	cmpeq	r0, r6
   28a70:	bcs	283f0 <ASN1_STRING_length@plt+0x1647c>
   28a74:	b	288e4 <ASN1_STRING_length@plt+0x16970>
   28a78:	ldr	r3, [pc, #72]	; 28ac8 <ASN1_STRING_length@plt+0x16b54>
   28a7c:	ldr	r1, [pc, #72]	; 28acc <ASN1_STRING_length@plt+0x16b58>
   28a80:	ldr	r0, [pc, #72]	; 28ad0 <ASN1_STRING_length@plt+0x16b5c>
   28a84:	add	r3, pc, r3
   28a88:	mov	r2, #202	; 0xca
   28a8c:	add	r1, pc, r1
   28a90:	add	r0, pc, r0
   28a94:	bl	11b6c <__assert_fail@plt>
   28a98:	bl	11d88 <__stack_chk_fail@plt>
   28a9c:	bl	25d90 <ASN1_STRING_length@plt+0x13e1c>
   28aa0:	bl	25df0 <ASN1_STRING_length@plt+0x13e7c>
   28aa4:	andeq	r8, r1, ip, lsr #5
   28aa8:	strdeq	r0, [r0], -r8
   28aac:	andeq	r7, r0, ip, ror #14
   28ab0:	andeq	r7, r0, ip, asr #14
   28ab4:	andeq	r7, r0, ip, asr #11
   28ab8:	andeq	r7, r0, r0, lsl r5
   28abc:	andeq	r7, r0, r0, asr #2
   28ac0:	strdeq	r7, [r0], -ip
   28ac4:	strdeq	pc, [r0], -r1
   28ac8:	andeq	r6, r0, r0, asr #15
   28acc:	andeq	r6, r0, r4, ror #15
   28ad0:	strdeq	r6, [r0], -ip
   28ad4:	ldr	ip, [pc, #3876]	; 29a00 <ASN1_STRING_length@plt+0x17a8c>
   28ad8:	ldr	r2, [pc, #3876]	; 29a04 <ASN1_STRING_length@plt+0x17a90>
   28adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28ae0:	add	ip, pc, ip
   28ae4:	sub	sp, sp, #412	; 0x19c
   28ae8:	add	r3, sp, #376	; 0x178
   28aec:	str	r1, [sp, #344]	; 0x158
   28af0:	ldr	r2, [ip, r2]
   28af4:	ldr	r1, [pc, #3852]	; 29a08 <ASN1_STRING_length@plt+0x17a94>
   28af8:	mov	lr, r2
   28afc:	str	r2, [sp, #340]	; 0x154
   28b00:	ldr	lr, [lr]
   28b04:	add	r2, sp, #364	; 0x16c
   28b08:	add	r1, pc, r1
   28b0c:	str	r0, [sp, #184]	; 0xb8
   28b10:	str	lr, [sp, #404]	; 0x194
   28b14:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   28b18:	cmp	r0, #0
   28b1c:	blt	298e8 <ASN1_STRING_length@plt+0x17974>
   28b20:	ldr	r0, [sp, #184]	; 0xb8
   28b24:	ldr	r1, [sp, #376]	; 0x178
   28b28:	ldr	r0, [r0, #16]
   28b2c:	and	r2, r1, #63	; 0x3f
   28b30:	mov	r1, #0
   28b34:	mov	r3, r1
   28b38:	tst	r0, #2
   28b3c:	movne	r0, #4
   28b40:	moveq	r0, #8
   28b44:	orrs	r3, r2, r3
   28b48:	movne	r3, #0
   28b4c:	movne	r2, #0
   28b50:	strne	r1, [sp, #364]	; 0x16c
   28b54:	addne	r1, sp, #376	; 0x178
   28b58:	str	r0, [sp, #244]	; 0xf4
   28b5c:	strdne	r2, [r1]
   28b60:	mov	r3, #64	; 0x40
   28b64:	str	r3, [sp, #240]	; 0xf0
   28b68:	ldr	r1, [pc, #3740]	; 29a0c <ASN1_STRING_length@plt+0x17a98>
   28b6c:	add	r3, sp, #384	; 0x180
   28b70:	add	r2, sp, #368	; 0x170
   28b74:	add	r1, pc, r1
   28b78:	ldr	r0, [sp, #184]	; 0xb8
   28b7c:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   28b80:	cmp	r0, #0
   28b84:	blt	2991c <ASN1_STRING_length@plt+0x179a8>
   28b88:	ldr	r4, [sp, #184]	; 0xb8
   28b8c:	ldr	r1, [pc, #3708]	; 29a10 <ASN1_STRING_length@plt+0x17a9c>
   28b90:	add	r3, sp, #392	; 0x188
   28b94:	add	r2, sp, #372	; 0x174
   28b98:	add	r1, pc, r1
   28b9c:	mov	r0, r4
   28ba0:	bl	26608 <ASN1_STRING_length@plt+0x14694>
   28ba4:	cmp	r0, #0
   28ba8:	blt	2991c <ASN1_STRING_length@plt+0x179a8>
   28bac:	ldr	r3, [r4, #16]
   28bb0:	add	r1, sp, #392	; 0x188
   28bb4:	str	r3, [sp, #320]	; 0x140
   28bb8:	ands	r3, r3, #2
   28bbc:	str	r3, [sp, #40]	; 0x28
   28bc0:	moveq	r3, #24
   28bc4:	movne	r3, #16
   28bc8:	streq	r3, [sp, #32]
   28bcc:	strne	r3, [sp, #32]
   28bd0:	moveq	r3, #0
   28bd4:	movne	r3, #0
   28bd8:	streq	r3, [sp, #44]	; 0x2c
   28bdc:	strne	r3, [sp, #44]	; 0x2c
   28be0:	ldr	r2, [sp, #32]
   28be4:	ldr	r3, [sp, #44]	; 0x2c
   28be8:	ldrd	r0, [r1]
   28bec:	moveq	r4, #24
   28bf0:	movne	r4, #16
   28bf4:	bl	2a3a4 <ASN1_STRING_length@plt+0x18430>
   28bf8:	strd	r2, [sp, #24]
   28bfc:	orrs	r3, r2, r3
   28c00:	str	r0, [sp, #324]	; 0x144
   28c04:	bne	2991c <ASN1_STRING_length@plt+0x179a8>
   28c08:	add	r3, sp, #376	; 0x178
   28c0c:	ldrd	r0, [r3]
   28c10:	orrs	r3, r0, r1
   28c14:	strd	r0, [sp, #208]	; 0xd0
   28c18:	beq	28f7c <ASN1_STRING_length@plt+0x17008>
   28c1c:	ldr	r2, [sp, #240]	; 0xf0
   28c20:	mov	r3, #0
   28c24:	bl	2a3a4 <ASN1_STRING_length@plt+0x18430>
   28c28:	mov	r1, #1
   28c2c:	mov	r3, r0
   28c30:	str	r3, [sp, #336]	; 0x150
   28c34:	bl	11ae8 <calloc@plt>
   28c38:	subs	r3, r0, #0
   28c3c:	str	r3, [sp, #216]	; 0xd8
   28c40:	beq	299e4 <ASN1_STRING_length@plt+0x17a70>
   28c44:	ldr	r2, [sp, #184]	; 0xb8
   28c48:	ldr	r3, [sp, #368]	; 0x170
   28c4c:	ldr	r5, [sp, #372]	; 0x174
   28c50:	ldr	r1, [r2]
   28c54:	ldrh	r2, [r2, #72]	; 0x48
   28c58:	sub	r3, r3, r1
   28c5c:	ldr	sl, [sp, #324]	; 0x144
   28c60:	mov	r8, r3
   28c64:	asr	r9, r3, #31
   28c68:	cmp	r2, #43	; 0x2b
   28c6c:	cmpne	r2, #2
   28c70:	sub	r5, r5, r1
   28c74:	moveq	r3, #1
   28c78:	movne	r3, #0
   28c7c:	str	r1, [sp, #20]
   28c80:	add	r4, r5, r4
   28c84:	mov	r1, #8
   28c88:	mov	r0, sl
   28c8c:	str	r3, [sp, #84]	; 0x54
   28c90:	strd	r8, [sp, #48]	; 0x30
   28c94:	str	r4, [sp, #328]	; 0x148
   28c98:	bl	11ae8 <calloc@plt>
   28c9c:	str	r4, [sp, #332]	; 0x14c
   28ca0:	str	sl, [sp, #56]	; 0x38
   28ca4:	subs	r3, r0, #0
   28ca8:	str	r3, [sp, #232]	; 0xe8
   28cac:	beq	299ec <ASN1_STRING_length@plt+0x17a78>
   28cb0:	cmp	sl, #1
   28cb4:	ble	29930 <ASN1_STRING_length@plt+0x179bc>
   28cb8:	ldr	r3, [sp, #40]	; 0x28
   28cbc:	ldr	r1, [sp, #20]
   28cc0:	ldr	r4, [sp, #364]	; 0x16c
   28cc4:	cmp	r3, #0
   28cc8:	movne	r9, #4
   28ccc:	sub	r3, r4, r1
   28cd0:	moveq	r9, #8
   28cd4:	adds	r2, r9, r3
   28cd8:	mov	ip, #0
   28cdc:	str	r2, [sp, #200]	; 0xc8
   28ce0:	adc	r2, ip, ip
   28ce4:	str	r2, [sp, #204]	; 0xcc
   28ce8:	ldr	r2, [sp, #332]	; 0x14c
   28cec:	str	r3, [sp, #348]	; 0x15c
   28cf0:	adds	r6, r2, #4
   28cf4:	mov	r2, r1
   28cf8:	ldr	r1, [sp, #328]	; 0x148
   28cfc:	str	r3, [sp, #248]	; 0xf8
   28d00:	add	r4, r2, r1
   28d04:	add	r5, r1, #12
   28d08:	add	r1, sp, #384	; 0x180
   28d0c:	add	r3, r3, r9
   28d10:	ldrd	r0, [r1]
   28d14:	add	r3, r2, r3
   28d18:	mov	r8, #1
   28d1c:	strd	r0, [sp, #192]	; 0xc0
   28d20:	ldr	r1, [sp, #184]	; 0xb8
   28d24:	str	r3, [sp, #220]	; 0xdc
   28d28:	ldr	r3, [sp, #320]	; 0x140
   28d2c:	ldrd	r0, [r1, #8]
   28d30:	str	r9, [sp, #252]	; 0xfc
   28d34:	ldr	sl, [sp, #32]
   28d38:	mov	fp, r8
   28d3c:	str	r9, [sp]
   28d40:	adc	r7, ip, ip
   28d44:	add	r4, r4, #3
   28d48:	add	r5, r2, r5
   28d4c:	mov	r8, r0
   28d50:	mov	r9, r1
   28d54:	and	r3, r3, #16
   28d58:	str	ip, [sp, #64]	; 0x40
   28d5c:	str	ip, [sp, #188]	; 0xbc
   28d60:	str	r3, [sp, #60]	; 0x3c
   28d64:	str	sl, [sp, #80]	; 0x50
   28d68:	ldr	r3, [sp, #40]	; 0x28
   28d6c:	cmp	r3, #0
   28d70:	beq	29538 <ASN1_STRING_length@plt+0x175c4>
   28d74:	cmp	r7, r9
   28d78:	cmpeq	r6, r8
   28d7c:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   28d80:	ldr	r3, [sp, #60]	; 0x3c
   28d84:	cmp	r3, #0
   28d88:	beq	295cc <ASN1_STRING_length@plt+0x17658>
   28d8c:	ldr	r2, [sp, #24]
   28d90:	ldr	r3, [sp]
   28d94:	sub	ip, r4, #4
   28d98:	ldrb	r0, [ip, #1]!
   28d9c:	cmp	r4, ip
   28da0:	orr	r2, r0, r2, lsl #8
   28da4:	bne	28d98 <ASN1_STRING_length@plt+0x16e24>
   28da8:	str	r3, [sp]
   28dac:	adds	r3, r6, #12
   28db0:	str	r3, [sp, #144]	; 0x90
   28db4:	adc	r3, r7, #0
   28db8:	str	r3, [sp, #148]	; 0x94
   28dbc:	ldrd	r0, [sp, #144]	; 0x90
   28dc0:	cmp	r9, r1
   28dc4:	cmpeq	r8, r0
   28dc8:	bcc	29634 <ASN1_STRING_length@plt+0x176c0>
   28dcc:	adds	r3, r6, #9
   28dd0:	str	r3, [sp, #136]	; 0x88
   28dd4:	adc	r3, r7, #0
   28dd8:	str	r3, [sp, #140]	; 0x8c
   28ddc:	ldrd	r0, [sp, #136]	; 0x88
   28de0:	ldrh	ip, [r5, #2]
   28de4:	cmp	r9, r1
   28de8:	rev16	ip, ip
   28dec:	cmpeq	r8, r0
   28df0:	uxth	ip, ip
   28df4:	bcc	29634 <ASN1_STRING_length@plt+0x176c0>
   28df8:	ldrb	r0, [r5]
   28dfc:	cmp	ip, #0
   28e00:	uxtb	r0, r0
   28e04:	bne	29054 <ASN1_STRING_length@plt+0x170e0>
   28e08:	ldr	r3, [sp, #84]	; 0x54
   28e0c:	cmp	r3, #0
   28e10:	beq	28e20 <ASN1_STRING_length@plt+0x16eac>
   28e14:	and	r0, r0, #15
   28e18:	cmp	r0, #13
   28e1c:	beq	29054 <ASN1_STRING_length@plt+0x170e0>
   28e20:	mov	r0, r2
   28e24:	ldrd	r2, [sp, #192]	; 0xc0
   28e28:	mov	r1, #0
   28e2c:	cmp	r1, r3
   28e30:	cmpeq	r0, r2
   28e34:	bcs	2990c <ASN1_STRING_length@plt+0x17998>
   28e38:	ldr	r3, [sp, #48]	; 0x30
   28e3c:	adds	r3, r0, r3
   28e40:	str	r3, [sp, #8]
   28e44:	ldr	r3, [sp, #52]	; 0x34
   28e48:	adc	r3, r1, r3
   28e4c:	str	r3, [sp, #12]
   28e50:	ldrd	r2, [sp, #8]
   28e54:	cmp	r3, r9
   28e58:	cmpeq	r2, r8
   28e5c:	bcs	28f5c <ASN1_STRING_length@plt+0x16fe8>
   28e60:	ldr	r3, [sp, #20]
   28e64:	ldr	r2, [sp, #8]
   28e68:	add	sl, r3, r2
   28e6c:	ldrb	r1, [sl]
   28e70:	cmp	r1, #0
   28e74:	beq	29054 <ASN1_STRING_length@plt+0x170e0>
   28e78:	mov	r0, sl
   28e7c:	bl	11c44 <strlen@plt>
   28e80:	ldr	r3, [sp, #188]	; 0xbc
   28e84:	add	r1, r3, #1
   28e88:	ldrd	r2, [sp, #208]	; 0xd0
   28e8c:	orrs	r3, r2, r3
   28e90:	ldr	r3, [sp, #64]	; 0x40
   28e94:	moveq	r2, #0
   28e98:	add	r3, r3, #1
   28e9c:	str	r3, [sp, #64]	; 0x40
   28ea0:	moveq	ip, r2
   28ea4:	add	r3, r0, r1
   28ea8:	str	r3, [sp, #188]	; 0xbc
   28eac:	beq	29044 <ASN1_STRING_length@plt+0x170d0>
   28eb0:	ldrd	r2, [sp, #200]	; 0xc8
   28eb4:	cmp	r9, r3
   28eb8:	cmpeq	r8, r2
   28ebc:	bls	28f5c <ASN1_STRING_length@plt+0x16fe8>
   28ec0:	ldr	r2, [sp, #248]	; 0xf8
   28ec4:	mov	r0, #0
   28ec8:	mov	r1, #0
   28ecc:	strd	r6, [sp, #224]	; 0xe0
   28ed0:	str	fp, [sp, #236]	; 0xec
   28ed4:	strd	r8, [sp, #88]	; 0x58
   28ed8:	mov	fp, r5
   28edc:	mov	r9, r4
   28ee0:	mov	r5, r1
   28ee4:	mov	r4, r0
   28ee8:	mov	r7, r2
   28eec:	mov	r3, #0
   28ef0:	str	r3, [sp, #68]	; 0x44
   28ef4:	ldr	r3, [sp, #220]	; 0xdc
   28ef8:	mov	r0, sl
   28efc:	add	r1, r3, r4
   28f00:	bl	11f14 <strcmp@plt>
   28f04:	cmp	r0, #0
   28f08:	beq	28f8c <ASN1_STRING_length@plt+0x17018>
   28f0c:	ldrd	r2, [sp, #208]	; 0xd0
   28f10:	adds	r4, r4, #64	; 0x40
   28f14:	adc	r5, r5, #0
   28f18:	cmp	r3, r5
   28f1c:	cmpeq	r2, r4
   28f20:	bls	29988 <ASN1_STRING_length@plt+0x17a14>
   28f24:	ldr	r3, [sp, #68]	; 0x44
   28f28:	adds	r7, r7, #64	; 0x40
   28f2c:	adc	r3, r3, #0
   28f30:	str	r3, [sp, #68]	; 0x44
   28f34:	ldrd	r2, [sp, #200]	; 0xc8
   28f38:	adds	r1, r4, r2
   28f3c:	adc	r3, r5, r3
   28f40:	str	r3, [sp, #116]	; 0x74
   28f44:	str	r1, [sp, #112]	; 0x70
   28f48:	ldrd	r2, [sp, #88]	; 0x58
   28f4c:	ldrd	r0, [sp, #112]	; 0x70
   28f50:	cmp	r3, r1
   28f54:	cmpeq	r2, r0
   28f58:	bhi	28ef4 <ASN1_STRING_length@plt+0x16f80>
   28f5c:	ldr	r3, [pc, #2736]	; 29a14 <ASN1_STRING_length@plt+0x17aa0>
   28f60:	ldr	r1, [pc, #2736]	; 29a18 <ASN1_STRING_length@plt+0x17aa4>
   28f64:	ldr	r0, [pc, #2736]	; 29a1c <ASN1_STRING_length@plt+0x17aa8>
   28f68:	add	r3, pc, r3
   28f6c:	mov	r2, #202	; 0xca
   28f70:	add	r1, pc, r1
   28f74:	add	r0, pc, r0
   28f78:	bl	11b6c <__assert_fail@plt>
   28f7c:	mov	r3, #0
   28f80:	str	r3, [sp, #216]	; 0xd8
   28f84:	str	r3, [sp, #336]	; 0x150
   28f88:	b	28c44 <ASN1_STRING_length@plt+0x16cd0>
   28f8c:	ldr	r3, [sp, #252]	; 0xfc
   28f90:	mov	r2, r7
   28f94:	adds	r3, r3, r2
   28f98:	str	r3, [sp, #104]	; 0x68
   28f9c:	ldr	r3, [sp, #68]	; 0x44
   28fa0:	strd	r4, [sp, #96]	; 0x60
   28fa4:	adc	r3, r3, #0
   28fa8:	str	r3, [sp, #108]	; 0x6c
   28fac:	ldrd	r0, [sp, #104]	; 0x68
   28fb0:	mov	r4, r9
   28fb4:	ldrd	r8, [sp, #88]	; 0x58
   28fb8:	mov	r5, fp
   28fbc:	ldrd	r6, [sp, #224]	; 0xe0
   28fc0:	cmp	r9, r1
   28fc4:	cmpeq	r8, r0
   28fc8:	ldr	fp, [sp, #236]	; 0xec
   28fcc:	bcc	29634 <ASN1_STRING_length@plt+0x176c0>
   28fd0:	ldr	r3, [sp, #60]	; 0x3c
   28fd4:	cmp	r3, #0
   28fd8:	ldr	r3, [sp, #20]
   28fdc:	add	sl, r3, r2
   28fe0:	beq	29764 <ASN1_STRING_length@plt+0x177f0>
   28fe4:	ldrd	r0, [sp, #24]
   28fe8:	ldr	r3, [sp]
   28fec:	sub	lr, sl, #1
   28ff0:	mov	r2, r0
   28ff4:	mov	ip, r1
   28ff8:	add	r1, lr, #2
   28ffc:	ldrb	r0, [lr, #1]
   29000:	sub	r1, r1, sl
   29004:	lsl	ip, ip, #8
   29008:	cmp	r1, r3
   2900c:	orr	ip, ip, r2, lsr #24
   29010:	add	lr, lr, #1
   29014:	orr	r2, r0, r2, lsl #8
   29018:	bcc	28ff8 <ASN1_STRING_length@plt+0x17084>
   2901c:	str	r3, [sp]
   29020:	ldr	r3, [sp, #216]	; 0xd8
   29024:	cmp	r3, #0
   29028:	ldr	r3, [sp, #96]	; 0x60
   2902c:	lsr	r1, r3, #6
   29030:	ldr	r3, [sp, #100]	; 0x64
   29034:	orr	r1, r1, r3, lsl #26
   29038:	ldrne	r3, [sp, #216]	; 0xd8
   2903c:	movne	r0, #1
   29040:	strbne	r0, [r3, r1]
   29044:	ldr	r3, [sp, #232]	; 0xe8
   29048:	add	r1, r3, fp, lsl #3
   2904c:	str	r2, [r3, fp, lsl #3]
   29050:	str	ip, [r1, #4]
   29054:	ldr	r3, [sp, #32]
   29058:	add	fp, fp, #1
   2905c:	adds	r6, r6, r3
   29060:	ldr	r3, [sp, #44]	; 0x2c
   29064:	adc	r7, r7, r3
   29068:	ldr	r3, [sp, #56]	; 0x38
   2906c:	cmp	r3, fp
   29070:	ldr	r3, [sp, #80]	; 0x50
   29074:	add	r4, r4, r3
   29078:	add	r5, r5, r3
   2907c:	bne	28d68 <ASN1_STRING_length@plt+0x16df4>
   29080:	ldr	r3, [sp, #216]	; 0xd8
   29084:	cmp	r3, #0
   29088:	beq	29140 <ASN1_STRING_length@plt+0x171cc>
   2908c:	ldr	r4, [sp, #348]	; 0x15c
   29090:	ldr	r3, [sp, #336]	; 0x150
   29094:	mov	r0, r4
   29098:	asr	r5, r4, #31
   2909c:	cmp	r3, #0
   290a0:	mov	r1, r5
   290a4:	ble	29140 <ASN1_STRING_length@plt+0x171cc>
   290a8:	ldr	r3, [sp, #244]	; 0xf4
   290ac:	ldr	fp, [sp, #216]	; 0xd8
   290b0:	adds	r4, r0, r3
   290b4:	adc	r5, r1, #0
   290b8:	sub	r6, fp, #1
   290bc:	ldr	r8, [sp, #188]	; 0xbc
   290c0:	ldr	r9, [sp, #240]	; 0xf0
   290c4:	ldr	sl, [sp, #336]	; 0x150
   290c8:	strd	r4, [sp]
   290cc:	mov	r7, #0
   290d0:	mov	r5, r6
   290d4:	ldrb	r0, [r5, #1]
   290d8:	add	r6, r5, #1
   290dc:	cmp	r0, #0
   290e0:	bne	29124 <ASN1_STRING_length@plt+0x171b0>
   290e4:	ldr	r3, [sp, #184]	; 0xb8
   290e8:	ldrd	r0, [sp]
   290ec:	ldrd	r2, [r3, #8]
   290f0:	adds	r0, r0, r7
   290f4:	adc	r1, r1, #0
   290f8:	cmp	r1, r3
   290fc:	cmpeq	r0, r2
   29100:	bcs	28f5c <ASN1_STRING_length@plt+0x16fe8>
   29104:	ldr	r3, [sp, #20]
   29108:	add	r8, r8, #1
   2910c:	add	r0, r3, r0
   29110:	bl	11c44 <strlen@plt>
   29114:	ldr	r3, [sp, #64]	; 0x40
   29118:	add	r3, r3, #1
   2911c:	str	r3, [sp, #64]	; 0x40
   29120:	add	r8, r8, r0
   29124:	add	r3, r5, #2
   29128:	sub	r3, r3, fp
   2912c:	cmp	r3, sl
   29130:	add	r7, r7, r9
   29134:	mov	r5, r6
   29138:	blt	290d4 <ASN1_STRING_length@plt+0x17160>
   2913c:	str	r8, [sp, #188]	; 0xbc
   29140:	ldr	r3, [sp, #64]	; 0x40
   29144:	cmp	r3, #0
   29148:	beq	29968 <ASN1_STRING_length@plt+0x179f4>
   2914c:	lsl	r6, r3, #4
   29150:	ldr	r3, [sp, #188]	; 0xbc
   29154:	add	r0, r6, r3
   29158:	bl	11d64 <malloc@plt>
   2915c:	ldr	r2, [sp, #344]	; 0x158
   29160:	cmp	r0, #0
   29164:	str	r0, [sp, #64]	; 0x40
   29168:	str	r0, [r2]
   2916c:	beq	299bc <ASN1_STRING_length@plt+0x17a48>
   29170:	ldr	r3, [sp, #324]	; 0x144
   29174:	cmp	r3, #1
   29178:	ldr	r3, [sp, #64]	; 0x40
   2917c:	add	r6, r3, r6
   29180:	ble	299dc <ASN1_STRING_length@plt+0x17a68>
   29184:	ldr	r3, [sp, #332]	; 0x14c
   29188:	ldr	r1, [sp, #20]
   2918c:	adds	r3, r3, #4
   29190:	str	r3, [sp, #352]	; 0x160
   29194:	ldr	r3, [sp, #328]	; 0x148
   29198:	mov	r7, #0
   2919c:	add	r4, r1, r3
   291a0:	add	r5, r3, #12
   291a4:	ldr	r3, [sp, #184]	; 0xb8
   291a8:	ldr	r9, [sp, #32]
   291ac:	add	r4, r4, #3
   291b0:	ldrd	r2, [r3, #8]
   291b4:	add	r5, r1, r5
   291b8:	mov	r8, #1
   291bc:	strd	r2, [sp]
   291c0:	adc	r3, r7, r7
   291c4:	str	r3, [sp, #356]	; 0x164
   291c8:	ldr	r3, [sp, #320]	; 0x140
   291cc:	str	r6, [sp, #8]
   291d0:	and	r3, r3, #16
   291d4:	str	r3, [sp, #68]	; 0x44
   291d8:	add	r3, sp, #352	; 0x160
   291dc:	str	r7, [sp, #60]	; 0x3c
   291e0:	ldrd	sl, [r3]
   291e4:	ldr	r3, [sp, #40]	; 0x28
   291e8:	cmp	r3, #0
   291ec:	ldrd	r2, [sp]
   291f0:	beq	296c0 <ASN1_STRING_length@plt+0x1774c>
   291f4:	cmp	fp, r3
   291f8:	cmpeq	sl, r2
   291fc:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29200:	ldr	r3, [sp, #68]	; 0x44
   29204:	cmp	r3, #0
   29208:	beq	29868 <ASN1_STRING_length@plt+0x178f4>
   2920c:	ldr	r3, [sp, #24]
   29210:	ldr	r6, [sp, #8]
   29214:	sub	r2, r4, #4
   29218:	ldrb	r0, [r2, #1]!
   2921c:	cmp	r4, r2
   29220:	orr	r3, r0, r3, lsl #8
   29224:	bne	29218 <ASN1_STRING_length@plt+0x172a4>
   29228:	adds	r2, sl, #12
   2922c:	str	r2, [sp, #280]	; 0x118
   29230:	adc	r2, fp, #0
   29234:	str	r2, [sp, #284]	; 0x11c
   29238:	add	r2, sp, #280	; 0x118
   2923c:	str	r6, [sp, #8]
   29240:	ldrd	r0, [r2]
   29244:	ldrd	r6, [sp]
   29248:	cmp	r1, r7
   2924c:	cmpeq	r0, r6
   29250:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29254:	adds	r1, sl, #9
   29258:	str	r1, [sp, #272]	; 0x110
   2925c:	adc	r1, fp, #0
   29260:	str	r1, [sp, #276]	; 0x114
   29264:	add	r1, sp, #272	; 0x110
   29268:	ldrd	r6, [sp]
   2926c:	ldrd	r0, [r1]
   29270:	ldrh	r2, [r5, #2]
   29274:	cmp	r1, r7
   29278:	rev16	r2, r2
   2927c:	cmpeq	r0, r6
   29280:	uxth	r2, r2
   29284:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29288:	ldrb	r0, [r5]
   2928c:	cmp	r2, #0
   29290:	uxtb	ip, r0
   29294:	bne	29374 <ASN1_STRING_length@plt+0x17400>
   29298:	ldr	r2, [sp, #84]	; 0x54
   2929c:	cmp	r2, #0
   292a0:	beq	292b0 <ASN1_STRING_length@plt+0x1733c>
   292a4:	and	r2, ip, #15
   292a8:	cmp	r2, #13
   292ac:	beq	29374 <ASN1_STRING_length@plt+0x17400>
   292b0:	ldrd	r0, [sp, #48]	; 0x30
   292b4:	adds	r0, r0, r3
   292b8:	ldrd	r2, [sp]
   292bc:	adc	r1, r1, #0
   292c0:	cmp	r1, r3
   292c4:	cmpeq	r0, r2
   292c8:	bcs	28f5c <ASN1_STRING_length@plt+0x16fe8>
   292cc:	ldr	r3, [sp, #20]
   292d0:	add	r1, r3, r0
   292d4:	ldrb	r3, [r1]
   292d8:	cmp	r3, #0
   292dc:	beq	29374 <ASN1_STRING_length@plt+0x17400>
   292e0:	lsr	r0, ip, #4
   292e4:	cmp	r0, #2
   292e8:	moveq	r3, #87	; 0x57
   292ec:	movne	r3, #85	; 0x55
   292f0:	mov	r0, r1
   292f4:	str	r1, [sp, #96]	; 0x60
   292f8:	str	r3, [sp, #88]	; 0x58
   292fc:	bl	11c44 <strlen@plt>
   29300:	ldr	r1, [sp, #232]	; 0xe8
   29304:	ldr	r3, [sp, #60]	; 0x3c
   29308:	ldr	lr, [sp, #64]	; 0x40
   2930c:	lsl	r2, r3, #4
   29310:	add	ip, lr, r2
   29314:	ldr	r3, [sp, #88]	; 0x58
   29318:	str	r0, [sp, #80]	; 0x50
   2931c:	lsl	r0, r8, #3
   29320:	add	r0, r1, r0
   29324:	ldrd	r0, [r0]
   29328:	mov	r6, r0
   2932c:	mov	r7, r1
   29330:	ldr	r1, [sp, #96]	; 0x60
   29334:	strd	r6, [lr, r2]
   29338:	ldr	r6, [sp, #8]
   2933c:	ldr	r7, [sp, #80]	; 0x50
   29340:	str	r3, [ip, #8]
   29344:	mov	r2, r7
   29348:	mov	r0, r6
   2934c:	str	r6, [ip, #12]
   29350:	bl	11c5c <memcpy@plt>
   29354:	ldr	r2, [sp, #60]	; 0x3c
   29358:	add	r3, r7, #1
   2935c:	add	r2, r2, #1
   29360:	str	r2, [sp, #60]	; 0x3c
   29364:	add	r3, r6, r3
   29368:	mov	r2, #0
   2936c:	strb	r2, [r6, r7]
   29370:	str	r3, [sp, #8]
   29374:	ldr	r3, [sp, #32]
   29378:	add	r8, r8, #1
   2937c:	adds	sl, sl, r3
   29380:	ldr	r3, [sp, #44]	; 0x2c
   29384:	add	r4, r4, r9
   29388:	adc	fp, fp, r3
   2938c:	ldr	r3, [sp, #56]	; 0x38
   29390:	add	r5, r5, r9
   29394:	cmp	r3, r8
   29398:	bne	291e4 <ASN1_STRING_length@plt+0x17270>
   2939c:	ldr	r6, [sp, #8]
   293a0:	ldr	r7, [sp, #60]	; 0x3c
   293a4:	ldr	r0, [sp, #232]	; 0xe8
   293a8:	bl	11ba8 <free@plt>
   293ac:	ldr	r2, [sp, #216]	; 0xd8
   293b0:	cmp	r2, #0
   293b4:	beq	29518 <ASN1_STRING_length@plt+0x175a4>
   293b8:	ldr	r3, [sp, #364]	; 0x16c
   293bc:	ldr	fp, [sp, #20]
   293c0:	ldr	ip, [sp, #336]	; 0x150
   293c4:	sub	r3, r3, fp
   293c8:	mov	r0, r3
   293cc:	asr	r1, r3, #31
   293d0:	cmp	ip, #0
   293d4:	strd	r0, [sp, #32]
   293d8:	ble	29510 <ASN1_STRING_length@plt+0x1759c>
   293dc:	add	r3, r2, ip
   293e0:	sub	r3, r3, #1
   293e4:	str	r3, [sp, #20]
   293e8:	ldr	r3, [sp, #320]	; 0x140
   293ec:	sub	r8, r2, #1
   293f0:	and	r3, r3, #16
   293f4:	str	r3, [sp, #44]	; 0x2c
   293f8:	mov	r9, #0
   293fc:	ldr	r3, [sp, #244]	; 0xf4
   29400:	str	r3, [sp, #40]	; 0x28
   29404:	ldrb	r3, [r8, #1]!
   29408:	cmp	r3, #0
   2940c:	bne	294fc <ASN1_STRING_length@plt+0x17588>
   29410:	ldrd	r4, [sp, #32]
   29414:	ldr	r1, [sp, #40]	; 0x28
   29418:	ldr	r3, [sp, #184]	; 0xb8
   2941c:	adds	r4, r4, r9
   29420:	adc	r5, r5, #0
   29424:	adds	r1, r1, r4
   29428:	str	r1, [sp, #72]	; 0x48
   2942c:	adc	r1, r5, #0
   29430:	str	r1, [sp, #76]	; 0x4c
   29434:	ldrd	r2, [r3, #8]
   29438:	ldrd	r0, [sp, #72]	; 0x48
   2943c:	strd	r2, [sp]
   29440:	cmp	r1, r3
   29444:	cmpeq	r0, r2
   29448:	bcs	28f5c <ASN1_STRING_length@plt+0x16fe8>
   2944c:	add	r1, fp, r0
   29450:	mov	r0, r1
   29454:	str	r1, [sp, #8]
   29458:	bl	11c44 <strlen@plt>
   2945c:	ldrd	r2, [sp]
   29460:	mov	sl, r0
   29464:	ldrd	r0, [sp, #72]	; 0x48
   29468:	cmp	r3, r1
   2946c:	cmpeq	r2, r0
   29470:	bcc	29634 <ASN1_STRING_length@plt+0x176c0>
   29474:	ldr	r3, [sp, #44]	; 0x2c
   29478:	add	r4, fp, r4
   2947c:	cmp	r3, #0
   29480:	ldr	r1, [sp, #8]
   29484:	ldr	r3, [sp, #244]	; 0xf4
   29488:	bne	297ac <ASN1_STRING_length@plt+0x17838>
   2948c:	cmp	r3, #0
   29490:	beq	29924 <ASN1_STRING_length@plt+0x179b0>
   29494:	ldr	r3, [sp, #244]	; 0xf4
   29498:	add	ip, r4, r3
   2949c:	ldrd	r2, [sp, #24]
   294a0:	mov	r0, r2
   294a4:	mov	r2, r4
   294a8:	ldrb	r4, [ip, #-1]!
   294ac:	lsl	r3, r3, #8
   294b0:	orr	r3, r3, r0, lsr #24
   294b4:	cmp	ip, r2
   294b8:	orr	r0, r4, r0, lsl #8
   294bc:	bne	294a8 <ASN1_STRING_length@plt+0x17534>
   294c0:	ldr	r2, [sp, #64]	; 0x40
   294c4:	add	ip, r2, r7, lsl #4
   294c8:	str	r0, [r2, r7, lsl #4]
   294cc:	str	r3, [ip, #4]
   294d0:	mov	r3, #85	; 0x55
   294d4:	mov	r2, sl
   294d8:	mov	r0, r6
   294dc:	str	r3, [ip, #8]
   294e0:	str	r6, [ip, #12]
   294e4:	bl	11c5c <memcpy@plt>
   294e8:	mov	r2, #0
   294ec:	add	r3, sl, #1
   294f0:	strb	r2, [r6, sl]
   294f4:	add	r7, r7, #1
   294f8:	add	r6, r6, r3
   294fc:	ldr	r3, [sp, #20]
   29500:	cmp	r3, r8
   29504:	ldr	r3, [sp, #240]	; 0xf0
   29508:	add	r9, r9, r3
   2950c:	bne	29404 <ASN1_STRING_length@plt+0x17490>
   29510:	ldr	r0, [sp, #216]	; 0xd8
   29514:	bl	11ba8 <free@plt>
   29518:	ldr	r3, [sp, #340]	; 0x154
   2951c:	ldr	r2, [sp, #404]	; 0x194
   29520:	mov	r0, r7
   29524:	ldr	r3, [r3]
   29528:	cmp	r2, r3
   2952c:	bne	299fc <ASN1_STRING_length@plt+0x17a88>
   29530:	add	sp, sp, #412	; 0x19c
   29534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29538:	cmp	r7, r9
   2953c:	cmpeq	r6, r8
   29540:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29544:	ldr	r3, [sp, #60]	; 0x3c
   29548:	cmp	r3, #0
   2954c:	beq	29654 <ASN1_STRING_length@plt+0x176e0>
   29550:	ldr	r2, [sp, #24]
   29554:	ldr	r3, [sp]
   29558:	sub	ip, r4, #4
   2955c:	ldrb	r0, [ip, #1]!
   29560:	cmp	ip, r4
   29564:	orr	r2, r0, r2, lsl #8
   29568:	bne	2955c <ASN1_STRING_length@plt+0x175e8>
   2956c:	str	r3, [sp]
   29570:	adds	r3, r6, #4
   29574:	str	r3, [sp, #176]	; 0xb0
   29578:	adc	r3, r7, #0
   2957c:	str	r3, [sp, #180]	; 0xb4
   29580:	ldrd	r0, [sp, #176]	; 0xb0
   29584:	cmp	r1, r9
   29588:	cmpeq	r0, r8
   2958c:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29590:	adds	r3, r6, #1
   29594:	str	r3, [sp, #168]	; 0xa8
   29598:	adc	r3, r7, #0
   2959c:	str	r3, [sp, #172]	; 0xac
   295a0:	ldrd	r0, [sp, #168]	; 0xa8
   295a4:	ldrh	ip, [r5, #-6]
   295a8:	cmp	r1, r9
   295ac:	rev16	ip, ip
   295b0:	cmpeq	r0, r8
   295b4:	uxth	ip, ip
   295b8:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   295bc:	ldr	r3, [sp, #20]
   295c0:	add	r1, r3, r6
   295c4:	ldrb	r0, [r1]
   295c8:	b	28dfc <ASN1_STRING_length@plt+0x16e88>
   295cc:	ldr	r2, [sp, #24]
   295d0:	ldr	r3, [sp]
   295d4:	add	lr, r4, #1
   295d8:	sub	ip, r4, #3
   295dc:	ldrb	r0, [lr, #-1]!
   295e0:	cmp	lr, ip
   295e4:	orr	r2, r0, r2, lsl #8
   295e8:	bne	295dc <ASN1_STRING_length@plt+0x17668>
   295ec:	str	r3, [sp]
   295f0:	adds	r3, r6, #12
   295f4:	str	r3, [sp, #128]	; 0x80
   295f8:	adc	r3, r7, #0
   295fc:	str	r3, [sp, #132]	; 0x84
   29600:	ldrd	r0, [sp, #128]	; 0x80
   29604:	cmp	r1, r9
   29608:	cmpeq	r0, r8
   2960c:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29610:	adds	r3, r6, #9
   29614:	str	r3, [sp, #120]	; 0x78
   29618:	adc	r3, r7, #0
   2961c:	str	r3, [sp, #124]	; 0x7c
   29620:	ldrd	r0, [sp, #120]	; 0x78
   29624:	ldrh	ip, [r5, #2]
   29628:	cmp	r1, r9
   2962c:	cmpeq	r0, r8
   29630:	bls	28df8 <ASN1_STRING_length@plt+0x16e84>
   29634:	ldr	r3, [pc, #996]	; 29a20 <ASN1_STRING_length@plt+0x17aac>
   29638:	ldr	r1, [pc, #996]	; 29a24 <ASN1_STRING_length@plt+0x17ab0>
   2963c:	ldr	r0, [pc, #996]	; 29a28 <ASN1_STRING_length@plt+0x17ab4>
   29640:	add	r3, pc, r3
   29644:	mov	r2, #137	; 0x89
   29648:	add	r1, pc, r1
   2964c:	add	r0, pc, r0
   29650:	bl	11b6c <__assert_fail@plt>
   29654:	ldr	r2, [sp, #24]
   29658:	ldr	r3, [sp]
   2965c:	add	lr, r4, #1
   29660:	sub	ip, r4, #3
   29664:	ldrb	r0, [lr, #-1]!
   29668:	cmp	lr, ip
   2966c:	orr	r2, r0, r2, lsl #8
   29670:	bne	29664 <ASN1_STRING_length@plt+0x176f0>
   29674:	str	r3, [sp]
   29678:	adds	r3, r6, #4
   2967c:	str	r3, [sp, #160]	; 0xa0
   29680:	adc	r3, r7, #0
   29684:	str	r3, [sp, #164]	; 0xa4
   29688:	ldrd	r0, [sp, #160]	; 0xa0
   2968c:	cmp	r9, r1
   29690:	cmpeq	r8, r0
   29694:	bcc	29634 <ASN1_STRING_length@plt+0x176c0>
   29698:	adds	r3, r6, #1
   2969c:	str	r3, [sp, #152]	; 0x98
   296a0:	adc	r3, r7, #0
   296a4:	str	r3, [sp, #156]	; 0x9c
   296a8:	ldrd	r0, [sp, #152]	; 0x98
   296ac:	ldrh	ip, [r5, #-6]
   296b0:	cmp	r9, r1
   296b4:	cmpeq	r8, r0
   296b8:	bcs	295bc <ASN1_STRING_length@plt+0x17648>
   296bc:	b	29634 <ASN1_STRING_length@plt+0x176c0>
   296c0:	cmp	fp, r3
   296c4:	cmpeq	sl, r2
   296c8:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   296cc:	ldr	r3, [sp, #68]	; 0x44
   296d0:	cmp	r3, #0
   296d4:	beq	297ec <ASN1_STRING_length@plt+0x17878>
   296d8:	ldr	r3, [sp, #24]
   296dc:	ldr	r6, [sp, #8]
   296e0:	sub	r2, r4, #4
   296e4:	ldrb	r0, [r2, #1]!
   296e8:	cmp	r4, r2
   296ec:	orr	r3, r0, r3, lsl #8
   296f0:	bne	296e4 <ASN1_STRING_length@plt+0x17770>
   296f4:	adds	r2, sl, #4
   296f8:	str	r2, [sp, #312]	; 0x138
   296fc:	adc	r2, fp, #0
   29700:	str	r2, [sp, #316]	; 0x13c
   29704:	add	r2, sp, #312	; 0x138
   29708:	str	r6, [sp, #8]
   2970c:	ldrd	r0, [r2]
   29710:	ldrd	r6, [sp]
   29714:	cmp	r1, r7
   29718:	cmpeq	r0, r6
   2971c:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29720:	adds	r1, sl, #1
   29724:	str	r1, [sp, #304]	; 0x130
   29728:	adc	r1, fp, #0
   2972c:	str	r1, [sp, #308]	; 0x134
   29730:	add	r1, sp, #304	; 0x130
   29734:	ldrd	r6, [sp]
   29738:	ldrd	r0, [r1]
   2973c:	ldrh	r2, [r5, #-6]
   29740:	cmp	r1, r7
   29744:	rev16	r2, r2
   29748:	cmpeq	r0, r6
   2974c:	uxth	r2, r2
   29750:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29754:	ldr	r1, [sp, #20]
   29758:	add	r1, r1, sl
   2975c:	ldrb	r0, [r1]
   29760:	b	2928c <ASN1_STRING_length@plt+0x17318>
   29764:	ldrd	r0, [sp, #24]
   29768:	ldr	r3, [sp]
   2976c:	mov	r2, r0
   29770:	add	lr, sl, r3
   29774:	mov	ip, r1
   29778:	ldrb	r0, [lr, #-1]!
   2977c:	mov	r1, #0
   29780:	lsl	ip, ip, #8
   29784:	orr	ip, ip, r2, lsr #24
   29788:	strd	r0, [sp]
   2978c:	rsb	r1, lr, #1
   29790:	add	r1, r1, r3
   29794:	add	r1, sl, r1
   29798:	cmp	r3, r1
   2979c:	ldr	r1, [sp]
   297a0:	orr	r2, r1, r2, lsl #8
   297a4:	bcs	29778 <ASN1_STRING_length@plt+0x17804>
   297a8:	b	2901c <ASN1_STRING_length@plt+0x170a8>
   297ac:	cmp	r3, #0
   297b0:	beq	29924 <ASN1_STRING_length@plt+0x179b0>
   297b4:	add	ip, r4, r3
   297b8:	ldrd	r2, [sp, #24]
   297bc:	mov	lr, r7
   297c0:	mov	r0, r2
   297c4:	mov	r2, r6
   297c8:	ldrb	r6, [r4], #1
   297cc:	lsl	r3, r3, #8
   297d0:	orr	r3, r3, r0, lsr #24
   297d4:	cmp	ip, r4
   297d8:	orr	r0, r6, r0, lsl #8
   297dc:	bne	297c8 <ASN1_STRING_length@plt+0x17854>
   297e0:	mov	r6, r2
   297e4:	mov	r7, lr
   297e8:	b	294c0 <ASN1_STRING_length@plt+0x1754c>
   297ec:	ldr	r3, [sp, #24]
   297f0:	ldr	r6, [sp, #8]
   297f4:	add	r2, r4, #1
   297f8:	sub	ip, r4, #3
   297fc:	ldrb	r0, [r2, #-1]!
   29800:	cmp	ip, r2
   29804:	orr	r3, r0, r3, lsl #8
   29808:	bne	297fc <ASN1_STRING_length@plt+0x17888>
   2980c:	adds	r2, sl, #4
   29810:	str	r2, [sp, #296]	; 0x128
   29814:	adc	r2, fp, #0
   29818:	str	r2, [sp, #300]	; 0x12c
   2981c:	add	r2, sp, #296	; 0x128
   29820:	str	r6, [sp, #8]
   29824:	ldrd	r0, [r2]
   29828:	ldrd	r6, [sp]
   2982c:	cmp	r1, r7
   29830:	cmpeq	r0, r6
   29834:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   29838:	adds	r2, sl, #1
   2983c:	str	r2, [sp, #288]	; 0x120
   29840:	adc	r2, fp, #0
   29844:	str	r2, [sp, #292]	; 0x124
   29848:	add	r2, sp, #288	; 0x120
   2984c:	ldrd	r6, [sp]
   29850:	ldrd	r0, [r2]
   29854:	ldrh	r2, [r5, #-6]
   29858:	cmp	r1, r7
   2985c:	cmpeq	r0, r6
   29860:	bls	29754 <ASN1_STRING_length@plt+0x177e0>
   29864:	b	29634 <ASN1_STRING_length@plt+0x176c0>
   29868:	ldr	r0, [sp, #24]
   2986c:	ldr	r6, [sp, #8]
   29870:	add	r1, r4, #1
   29874:	sub	ip, r4, #3
   29878:	ldrb	r2, [r1, #-1]!
   2987c:	cmp	ip, r1
   29880:	orr	r0, r2, r0, lsl #8
   29884:	bne	29878 <ASN1_STRING_length@plt+0x17904>
   29888:	adds	r3, sl, #12
   2988c:	str	r3, [sp, #264]	; 0x108
   29890:	adc	r3, fp, #0
   29894:	str	r3, [sp, #268]	; 0x10c
   29898:	add	r3, sp, #264	; 0x108
   2989c:	str	r6, [sp, #8]
   298a0:	ldrd	r2, [r3]
   298a4:	ldrd	r6, [sp]
   298a8:	cmp	r3, r7
   298ac:	cmpeq	r2, r6
   298b0:	mov	r3, r0
   298b4:	bhi	29634 <ASN1_STRING_length@plt+0x176c0>
   298b8:	adds	r2, sl, #9
   298bc:	str	r2, [sp, #256]	; 0x100
   298c0:	adc	r2, fp, #0
   298c4:	str	r2, [sp, #260]	; 0x104
   298c8:	add	r2, sp, #256	; 0x100
   298cc:	ldrd	r6, [sp]
   298d0:	ldrd	r0, [r2]
   298d4:	ldrh	r2, [r5, #2]
   298d8:	cmp	r1, r7
   298dc:	cmpeq	r0, r6
   298e0:	bls	29288 <ASN1_STRING_length@plt+0x17314>
   298e4:	b	29634 <ASN1_STRING_length@plt+0x176c0>
   298e8:	mov	r3, #0
   298ec:	mov	r0, #0
   298f0:	mov	r1, #0
   298f4:	str	r3, [sp, #244]	; 0xf4
   298f8:	str	r3, [sp, #364]	; 0x16c
   298fc:	str	r3, [sp, #240]	; 0xf0
   29900:	add	r3, sp, #376	; 0x178
   29904:	strd	r0, [r3]
   29908:	b	28b68 <ASN1_STRING_length@plt+0x16bf4>
   2990c:	ldr	r0, [sp, #216]	; 0xd8
   29910:	bl	11ba8 <free@plt>
   29914:	ldr	r0, [sp, #232]	; 0xe8
   29918:	bl	11ba8 <free@plt>
   2991c:	mvn	r7, #21
   29920:	b	29518 <ASN1_STRING_length@plt+0x175a4>
   29924:	ldrd	r2, [sp, #24]
   29928:	mov	r0, r2
   2992c:	b	294c0 <ASN1_STRING_length@plt+0x1754c>
   29930:	ldr	r3, [sp, #216]	; 0xd8
   29934:	cmp	r3, #0
   29938:	beq	29968 <ASN1_STRING_length@plt+0x179f4>
   2993c:	ldr	r3, [sp, #336]	; 0x150
   29940:	ldr	r4, [sp, #364]	; 0x16c
   29944:	cmp	r3, #0
   29948:	ldr	r3, [sp, #20]
   2994c:	sub	r4, r4, r3
   29950:	movgt	r3, #0
   29954:	mov	r0, r4
   29958:	asr	r1, r4, #31
   2995c:	strgt	r3, [sp, #64]	; 0x40
   29960:	strgt	r3, [sp, #188]	; 0xbc
   29964:	bgt	290a8 <ASN1_STRING_length@plt+0x17134>
   29968:	ldr	r0, [sp, #216]	; 0xd8
   2996c:	bl	11ba8 <free@plt>
   29970:	ldr	r0, [sp, #232]	; 0xe8
   29974:	bl	11ba8 <free@plt>
   29978:	ldr	r3, [sp, #344]	; 0x158
   2997c:	mov	r7, #0
   29980:	str	r7, [r3]
   29984:	b	29518 <ASN1_STRING_length@plt+0x175a4>
   29988:	ldrd	r0, [sp, #24]
   2998c:	mov	r5, fp
   29990:	ldr	fp, [sp, #236]	; 0xec
   29994:	ldr	r3, [sp, #232]	; 0xe8
   29998:	mov	ip, r1
   2999c:	add	r1, r3, fp, lsl #3
   299a0:	mov	r2, r0
   299a4:	mov	r4, r9
   299a8:	str	r2, [r3, fp, lsl #3]
   299ac:	ldrd	r6, [sp, #224]	; 0xe0
   299b0:	ldrd	r8, [sp, #88]	; 0x58
   299b4:	str	ip, [r1, #4]
   299b8:	b	29054 <ASN1_STRING_length@plt+0x170e0>
   299bc:	ldr	r0, [sp, #216]	; 0xd8
   299c0:	bl	11ba8 <free@plt>
   299c4:	ldr	r0, [sp, #232]	; 0xe8
   299c8:	bl	11ba8 <free@plt>
   299cc:	bl	11f38 <__errno_location@plt>
   299d0:	ldr	r7, [r0]
   299d4:	rsb	r7, r7, #0
   299d8:	b	29518 <ASN1_STRING_length@plt+0x175a4>
   299dc:	mov	r7, #0
   299e0:	b	293a4 <ASN1_STRING_length@plt+0x17430>
   299e4:	mvn	r7, #11
   299e8:	b	29518 <ASN1_STRING_length@plt+0x175a4>
   299ec:	ldr	r0, [sp, #216]	; 0xd8
   299f0:	bl	11ba8 <free@plt>
   299f4:	mvn	r7, #11
   299f8:	b	29518 <ASN1_STRING_length@plt+0x175a4>
   299fc:	bl	11d88 <__stack_chk_fail@plt>
   29a00:	andeq	r7, r1, r4, lsl r3
   29a04:	strdeq	r0, [r0], -r8
   29a08:	muleq	r0, r8, r2
   29a0c:	andeq	r6, r0, r8, ror #14
   29a10:	andeq	r6, r0, ip, asr #14
   29a14:	ldrdeq	r6, [r0], -ip
   29a18:	andeq	r6, r0, r0, lsl #6
   29a1c:	andeq	r6, r0, r8, lsl r3
   29a20:	strdeq	r5, [r0], -r4
   29a24:	andeq	r5, r0, r8, lsr #24
   29a28:	andeq	r5, r0, r4, ror ip
   29a2c:	push	{r4, r5, r6, lr}
   29a30:	mov	r5, r0
   29a34:	ldr	r4, [r0, #40]	; 0x28
   29a38:	ldr	r0, [r4]
   29a3c:	bl	11adc <CMS_ContentInfo_free@plt>
   29a40:	ldr	r0, [r4, #8]
   29a44:	bl	11f50 <BN_free@plt>
   29a48:	ldr	r0, [r4, #4]
   29a4c:	bl	11ba8 <free@plt>
   29a50:	mov	r0, r4
   29a54:	bl	11ba8 <free@plt>
   29a58:	mov	r3, #0
   29a5c:	str	r3, [r5, #40]	; 0x28
   29a60:	pop	{r4, r5, r6, pc}
   29a64:	ldr	r3, [pc, #1096]	; 29eb4 <ASN1_STRING_length@plt+0x17f40>
   29a68:	ldr	ip, [pc, #1096]	; 29eb8 <ASN1_STRING_length@plt+0x17f44>
   29a6c:	add	r3, pc, r3
   29a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a74:	sub	sp, sp, #60	; 0x3c
   29a78:	ldr	r2, [r3, ip]
   29a7c:	mov	sl, r0
   29a80:	str	r2, [sp, #12]
   29a84:	ldr	r3, [r2]
   29a88:	mov	fp, r1
   29a8c:	str	r3, [sp, #52]	; 0x34
   29a90:	bl	25d34 <ASN1_STRING_length@plt+0x13dc0>
   29a94:	mov	r4, r0
   29a98:	mov	r0, sl
   29a9c:	mov	r5, r1
   29aa0:	bl	25d2c <ASN1_STRING_length@plt+0x13db8>
   29aa4:	cmp	r4, #28
   29aa8:	sbcs	r3, r5, #0
   29aac:	blt	29af0 <ASN1_STRING_length@plt+0x17b7c>
   29ab0:	subs	r6, r4, #28
   29ab4:	add	r1, r0, r6
   29ab8:	mov	sl, r0
   29abc:	ldr	r0, [pc, #1016]	; 29ebc <ASN1_STRING_length@plt+0x17f48>
   29ac0:	mov	r2, #28
   29ac4:	add	r0, pc, r0
   29ac8:	sbc	r7, r5, #0
   29acc:	bl	11a40 <memcmp@plt>
   29ad0:	cmp	r6, #12
   29ad4:	sbcs	r3, r7, #0
   29ad8:	movlt	r6, #1
   29adc:	movge	r6, #0
   29ae0:	cmp	r0, #0
   29ae4:	movne	r6, #1
   29ae8:	cmp	r6, #0
   29aec:	beq	29b14 <ASN1_STRING_length@plt+0x17ba0>
   29af0:	mov	r6, #0
   29af4:	ldr	r3, [sp, #12]
   29af8:	ldr	r2, [sp, #52]	; 0x34
   29afc:	mov	r0, r6
   29b00:	ldr	r3, [r3]
   29b04:	cmp	r2, r3
   29b08:	bne	29e60 <ASN1_STRING_length@plt+0x17eec>
   29b0c:	add	sp, sp, #60	; 0x3c
   29b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29b14:	subs	r8, r4, #40	; 0x28
   29b18:	add	r4, sl, r8
   29b1c:	sbc	r9, r5, #0
   29b20:	ldrb	r2, [r4]
   29b24:	cmp	r2, #1
   29b28:	bhi	29af4 <ASN1_STRING_length@plt+0x17b80>
   29b2c:	ldrb	ip, [r4, #1]
   29b30:	cmp	ip, #7
   29b34:	bhi	29af4 <ASN1_STRING_length@plt+0x17b80>
   29b38:	ldrb	r5, [r4, #2]
   29b3c:	cmp	r5, #2
   29b40:	bhi	29af4 <ASN1_STRING_length@plt+0x17b80>
   29b44:	ldrb	r7, [r4, #9]
   29b48:	ldrb	r1, [r4, #8]
   29b4c:	ldrb	lr, [r4, #10]
   29b50:	ldrb	r0, [r4, #11]
   29b54:	orr	r1, r1, r7, lsl #8
   29b58:	orr	lr, r1, lr, lsl #16
   29b5c:	orr	lr, lr, r0, lsl #24
   29b60:	rev	lr, lr
   29b64:	cmp	lr, #0
   29b68:	beq	29af4 <ASN1_STRING_length@plt+0x17b80>
   29b6c:	ldrb	r3, [r4, #3]
   29b70:	ldrb	r7, [r4, #4]
   29b74:	mov	r1, #0
   29b78:	str	r3, [sp, #16]
   29b7c:	add	r0, r3, r7
   29b80:	add	r0, r0, lr
   29b84:	cmp	r8, r0
   29b88:	sbcs	r3, r9, r1
   29b8c:	blt	29af4 <ASN1_STRING_length@plt+0x17b80>
   29b90:	subs	r0, r8, lr
   29b94:	cmp	r5, #2
   29b98:	mov	r8, r0
   29b9c:	add	r0, sl, r0
   29ba0:	beq	29c00 <ASN1_STRING_length@plt+0x17c8c>
   29ba4:	ldr	r4, [pc, #788]	; 29ec0 <ASN1_STRING_length@plt+0x17f4c>
   29ba8:	ldr	r1, [pc, #788]	; 29ec4 <ASN1_STRING_length@plt+0x17f50>
   29bac:	add	r4, pc, r4
   29bb0:	ldr	r3, [sp, #16]
   29bb4:	ldr	r2, [r4, r2, lsl #2]
   29bb8:	ldr	r4, [pc, #776]	; 29ec8 <ASN1_STRING_length@plt+0x17f54>
   29bbc:	subs	r8, r8, r7
   29bc0:	add	r1, pc, r1
   29bc4:	add	r4, pc, r4
   29bc8:	str	r0, [fp, #28]
   29bcc:	subs	r0, r8, r3
   29bd0:	ldr	ip, [r1, ip, lsl #2]
   29bd4:	ldr	r4, [r4, r5, lsl #2]
   29bd8:	add	r0, sl, r0
   29bdc:	add	r8, sl, r8
   29be0:	str	lr, [fp, #32]
   29be4:	str	r7, [fp, #12]
   29be8:	stm	fp, {r0, r3, r8}
   29bec:	mov	r6, #1
   29bf0:	str	r2, [fp, #16]
   29bf4:	str	ip, [fp, #20]
   29bf8:	str	r4, [fp, #24]
   29bfc:	b	29af4 <ASN1_STRING_length@plt+0x17b80>
   29c00:	mov	r1, lr
   29c04:	bl	11c74 <BIO_new_mem_buf@plt>
   29c08:	mov	r1, r6
   29c0c:	mov	r7, r0
   29c10:	bl	11b00 <d2i_CMS_bio@plt>
   29c14:	subs	r5, r0, #0
   29c18:	mov	r0, r7
   29c1c:	beq	29e58 <ASN1_STRING_length@plt+0x17ee4>
   29c20:	bl	11e78 <BIO_free@plt>
   29c24:	mov	r0, r5
   29c28:	bl	11a64 <CMS_get0_SignerInfos@plt>
   29c2c:	cmp	r0, #0
   29c30:	beq	29e4c <ASN1_STRING_length@plt+0x17ed8>
   29c34:	mov	r1, #0
   29c38:	bl	119d4 <OPENSSL_sk_value@plt>
   29c3c:	subs	r7, r0, #0
   29c40:	beq	29e4c <ASN1_STRING_length@plt+0x17ed8>
   29c44:	add	r3, sp, #36	; 0x24
   29c48:	add	r2, sp, #32
   29c4c:	add	r1, sp, #28
   29c50:	bl	11efc <CMS_SignerInfo_get0_signer_id@plt>
   29c54:	cmp	r0, #0
   29c58:	beq	29e4c <ASN1_STRING_length@plt+0x17ed8>
   29c5c:	mov	r0, r7
   29c60:	bl	119c8 <CMS_SignerInfo_get0_signature@plt>
   29c64:	subs	r8, r0, #0
   29c68:	beq	29e4c <ASN1_STRING_length@plt+0x17ed8>
   29c6c:	mov	r2, #0
   29c70:	add	r3, sp, #44	; 0x2c
   29c74:	mov	r1, r2
   29c78:	mov	r0, r7
   29c7c:	str	r3, [sp]
   29c80:	add	r3, sp, #40	; 0x28
   29c84:	bl	11ef0 <CMS_SignerInfo_get0_algs@plt>
   29c88:	mov	r0, r8
   29c8c:	bl	11b90 <ASN1_STRING_get0_data@plt>
   29c90:	str	r0, [fp, #28]
   29c94:	mov	r0, r8
   29c98:	bl	11f74 <ASN1_STRING_length@plt>
   29c9c:	mov	r1, #0
   29ca0:	str	r0, [fp, #32]
   29ca4:	ldr	r0, [sp, #36]	; 0x24
   29ca8:	bl	11b30 <ASN1_INTEGER_to_BN@plt>
   29cac:	subs	r9, r0, #0
   29cb0:	str	r9, [sp, #16]
   29cb4:	beq	29e4c <ASN1_STRING_length@plt+0x17ed8>
   29cb8:	bl	11b54 <BN_num_bits@plt>
   29cbc:	adds	r3, r0, #7
   29cc0:	addmi	r3, r0, #14
   29cc4:	asr	r7, r3, #3
   29cc8:	mov	r0, r7
   29ccc:	bl	11d64 <malloc@plt>
   29cd0:	subs	r8, r0, #0
   29cd4:	beq	29e44 <ASN1_STRING_length@plt+0x17ed0>
   29cd8:	mov	r0, r9
   29cdc:	mov	r1, r8
   29ce0:	bl	11e3c <BN_bn2bin@plt>
   29ce4:	mvn	sl, #0
   29ce8:	mov	r3, r6
   29cec:	str	r7, [fp, #12]
   29cf0:	mov	r6, r5
   29cf4:	str	r8, [fp, #8]
   29cf8:	mov	r5, r4
   29cfc:	ldr	r7, [sp, #32]
   29d00:	mov	r4, sl
   29d04:	mov	r9, #0
   29d08:	mov	sl, r3
   29d0c:	b	29d38 <ASN1_STRING_length@plt+0x17dc4>
   29d10:	mov	r1, r9
   29d14:	mov	r0, r7
   29d18:	bl	11b48 <X509_NAME_get_entry@plt>
   29d1c:	str	r0, [sp, #20]
   29d20:	bl	11d7c <X509_NAME_ENTRY_get_object@plt>
   29d24:	bl	11a7c <OBJ_obj2nid@plt>
   29d28:	cmp	r0, #13
   29d2c:	mov	r4, r0
   29d30:	beq	29e9c <ASN1_STRING_length@plt+0x17f28>
   29d34:	add	r9, r9, #1
   29d38:	mov	r0, r7
   29d3c:	bl	11da0 <X509_NAME_entry_count@plt>
   29d40:	cmp	r9, r0
   29d44:	blt	29d10 <ASN1_STRING_length@plt+0x17d9c>
   29d48:	mov	r3, sl
   29d4c:	mov	sl, r4
   29d50:	cmn	sl, #1
   29d54:	mov	r4, r5
   29d58:	mov	r5, r6
   29d5c:	mov	r6, r3
   29d60:	beq	29d84 <ASN1_STRING_length@plt+0x17e10>
   29d64:	ldr	r0, [sp, #20]
   29d68:	bl	11b60 <X509_NAME_ENTRY_get_data@plt>
   29d6c:	bl	11b90 <ASN1_STRING_get0_data@plt>
   29d70:	subs	r3, r0, #0
   29d74:	beq	29d84 <ASN1_STRING_length@plt+0x17e10>
   29d78:	str	r3, [fp]
   29d7c:	bl	11c44 <strlen@plt>
   29d80:	str	r0, [fp, #4]
   29d84:	mov	r2, #0
   29d88:	ldr	r3, [sp, #40]	; 0x28
   29d8c:	mov	r1, r2
   29d90:	add	r0, sp, #48	; 0x30
   29d94:	bl	11b0c <X509_ALGOR_get0@plt>
   29d98:	ldr	r0, [sp, #48]	; 0x30
   29d9c:	bl	11a7c <OBJ_obj2nid@plt>
   29da0:	ldr	r3, [pc, #292]	; 29ecc <ASN1_STRING_length@plt+0x17f58>
   29da4:	cmp	r0, r3
   29da8:	beq	29eac <ASN1_STRING_length@plt+0x17f38>
   29dac:	ble	29e64 <ASN1_STRING_length@plt+0x17ef0>
   29db0:	ldr	r3, [pc, #280]	; 29ed0 <ASN1_STRING_length@plt+0x17f5c>
   29db4:	cmp	r0, r3
   29db8:	moveq	r3, #5
   29dbc:	beq	29de4 <ASN1_STRING_length@plt+0x17e70>
   29dc0:	ble	29e8c <ASN1_STRING_length@plt+0x17f18>
   29dc4:	ldr	r3, [pc, #264]	; 29ed4 <ASN1_STRING_length@plt+0x17f60>
   29dc8:	cmp	r0, r3
   29dcc:	moveq	r3, #6
   29dd0:	beq	29de4 <ASN1_STRING_length@plt+0x17e70>
   29dd4:	add	r3, r3, #1
   29dd8:	cmp	r0, r3
   29ddc:	moveq	r3, #7
   29de0:	mvnne	r3, #0
   29de4:	ldr	r1, [pc, #236]	; 29ed8 <ASN1_STRING_length@plt+0x17f64>
   29de8:	ldr	r2, [pc, #236]	; 29edc <ASN1_STRING_length@plt+0x17f68>
   29dec:	add	r1, pc, r1
   29df0:	add	r2, pc, r2
   29df4:	ldr	r3, [r1, r3, lsl #2]
   29df8:	mov	r0, #12
   29dfc:	str	r3, [fp, #20]
   29e00:	ldrb	r1, [r4, #2]
   29e04:	ldr	r3, [r2, r1, lsl #2]
   29e08:	str	r3, [fp, #24]
   29e0c:	bl	11d64 <malloc@plt>
   29e10:	cmp	r0, #0
   29e14:	beq	29e3c <ASN1_STRING_length@plt+0x17ec8>
   29e18:	ldr	r3, [pc, #192]	; 29ee0 <ASN1_STRING_length@plt+0x17f6c>
   29e1c:	ldr	r2, [sp, #16]
   29e20:	add	r3, pc, r3
   29e24:	stm	r0, {r5, r8}
   29e28:	str	r2, [r0, #8]
   29e2c:	str	r0, [fp, #40]	; 0x28
   29e30:	str	r3, [fp, #36]	; 0x24
   29e34:	mov	r6, #1
   29e38:	b	29af4 <ASN1_STRING_length@plt+0x17b80>
   29e3c:	mov	r0, r8
   29e40:	bl	11ba8 <free@plt>
   29e44:	ldr	r0, [sp, #16]
   29e48:	bl	11f50 <BN_free@plt>
   29e4c:	mov	r0, r5
   29e50:	bl	11adc <CMS_ContentInfo_free@plt>
   29e54:	b	29af4 <ASN1_STRING_length@plt+0x17b80>
   29e58:	bl	11e78 <BIO_free@plt>
   29e5c:	b	29af4 <ASN1_STRING_length@plt+0x17b80>
   29e60:	bl	11d88 <__stack_chk_fail@plt>
   29e64:	cmp	r0, #64	; 0x40
   29e68:	moveq	r3, #2
   29e6c:	beq	29de4 <ASN1_STRING_length@plt+0x17e70>
   29e70:	cmp	r0, #117	; 0x75
   29e74:	moveq	r3, #3
   29e78:	beq	29de4 <ASN1_STRING_length@plt+0x17e70>
   29e7c:	cmp	r0, #4
   29e80:	moveq	r3, #1
   29e84:	mvnne	r3, #0
   29e88:	b	29de4 <ASN1_STRING_length@plt+0x17e70>
   29e8c:	cmp	r0, #672	; 0x2a0
   29e90:	moveq	r3, #4
   29e94:	mvnne	r3, #0
   29e98:	b	29de4 <ASN1_STRING_length@plt+0x17e70>
   29e9c:	mov	r4, r5
   29ea0:	mov	r5, r6
   29ea4:	mov	r6, sl
   29ea8:	b	29d64 <ASN1_STRING_length@plt+0x17df0>
   29eac:	mov	r3, #0
   29eb0:	b	29de4 <ASN1_STRING_length@plt+0x17e70>
   29eb4:	andeq	r6, r1, r8, lsl #7
   29eb8:	strdeq	r0, [r0], -r8
   29ebc:	andeq	r5, r0, r4, ror #16
   29ec0:	strdeq	r6, [r1], -ip
   29ec4:	strdeq	r6, [r1], -r0
   29ec8:	andeq	r6, r1, ip, lsl #2
   29ecc:	andeq	r0, r0, r1, lsl #2
   29ed0:	andeq	r0, r0, r1, lsr #5
   29ed4:	andeq	r0, r0, r2, lsr #5
   29ed8:	andeq	r5, r1, r4, asr #29
   29edc:	andeq	r5, r1, r0, ror #29
   29ee0:			; <UNDEFINED> instruction: 0xfffffc04
   29ee4:	ldr	r3, [r0, #36]	; 0x24
   29ee8:	cmp	r3, #0
   29eec:	bxeq	lr
   29ef0:	bx	r3
   29ef4:	tst	r2, #127	; 0x7f
   29ef8:	push	{r4, r5, r6, lr}
   29efc:	mov	r4, r2
   29f00:	bicne	r4, r2, #127	; 0x7f
   29f04:	addne	r4, r4, #128	; 0x80
   29f08:	mov	r5, r0
   29f0c:	mov	r6, r1
   29f10:	ldr	r0, [r0]
   29f14:	mov	r1, r4
   29f18:	bl	11ec0 <realloc@plt>
   29f1c:	cmp	r4, #0
   29f20:	clz	r3, r0
   29f24:	lsr	r3, r3, #5
   29f28:	moveq	r3, #0
   29f2c:	cmp	r3, #0
   29f30:	streq	r0, [r5]
   29f34:	moveq	r0, #1
   29f38:	streq	r4, [r6]
   29f3c:	movne	r0, #0
   29f40:	pop	{r4, r5, r6, pc}
   29f44:	mov	r3, #0
   29f48:	str	r3, [r0]
   29f4c:	str	r3, [r0, #4]
   29f50:	str	r3, [r0, #8]
   29f54:	bx	lr
   29f58:	ldr	r0, [r0]
   29f5c:	b	11ba8 <free@plt>
   29f60:	ldr	r1, [r0, #8]
   29f64:	push	{r4, r5, r6, lr}
   29f68:	add	r1, r1, #1
   29f6c:	mov	r4, r0
   29f70:	ldr	r0, [r0]
   29f74:	bl	11ec0 <realloc@plt>
   29f78:	subs	r5, r0, #0
   29f7c:	beq	29f94 <ASN1_STRING_length@plt+0x18020>
   29f80:	ldr	r3, [r4, #8]
   29f84:	mov	r2, #0
   29f88:	strb	r2, [r5, r3]
   29f8c:	mov	r0, r5
   29f90:	pop	{r4, r5, r6, pc}
   29f94:	ldr	r0, [r4]
   29f98:	bl	11ba8 <free@plt>
   29f9c:	b	29f8c <ASN1_STRING_length@plt+0x18018>
   29fa0:	ldmib	r0, {r1, r3}
   29fa4:	push	{r4, lr}
   29fa8:	mov	r4, r0
   29fac:	add	r2, r3, #1
   29fb0:	cmp	r2, r1
   29fb4:	bls	29fcc <ASN1_STRING_length@plt+0x18058>
   29fb8:	add	r1, r0, #4
   29fbc:	bl	29ef4 <ASN1_STRING_length@plt+0x17f80>
   29fc0:	cmp	r0, #0
   29fc4:	popeq	{r4, pc}
   29fc8:	ldr	r3, [r4, #8]
   29fcc:	ldr	r2, [r4]
   29fd0:	mov	r1, #0
   29fd4:	strb	r1, [r2, r3]
   29fd8:	ldr	r0, [r4]
   29fdc:	pop	{r4, pc}
   29fe0:	push	{r4, r5, r6, lr}
   29fe4:	mov	r5, r1
   29fe8:	ldmib	r0, {r1, r3}
   29fec:	mov	r4, r0
   29ff0:	add	r2, r3, #1
   29ff4:	cmp	r2, r1
   29ff8:	bls	2a010 <ASN1_STRING_length@plt+0x1809c>
   29ffc:	add	r1, r0, #4
   2a000:	bl	29ef4 <ASN1_STRING_length@plt+0x17f80>
   2a004:	cmp	r0, #0
   2a008:	popeq	{r4, r5, r6, pc}
   2a00c:	ldr	r3, [r4, #8]
   2a010:	ldr	r2, [r4]
   2a014:	mov	r0, #1
   2a018:	strb	r5, [r2, r3]
   2a01c:	ldr	r3, [r4, #8]
   2a020:	add	r3, r3, r0
   2a024:	str	r3, [r4, #8]
   2a028:	pop	{r4, r5, r6, pc}
   2a02c:	push	{r4, r5, r6, lr}
   2a030:	subs	r6, r1, #0
   2a034:	beq	2a0c4 <ASN1_STRING_length@plt+0x18150>
   2a038:	cmp	r0, #0
   2a03c:	mov	r4, r0
   2a040:	beq	2a0a4 <ASN1_STRING_length@plt+0x18130>
   2a044:	mov	r0, r6
   2a048:	bl	11c44 <strlen@plt>
   2a04c:	ldmib	r4, {r1, r3}
   2a050:	add	r2, r3, r0
   2a054:	cmp	r2, r1
   2a058:	mov	r5, r0
   2a05c:	bls	2a07c <ASN1_STRING_length@plt+0x18108>
   2a060:	add	r1, r4, #4
   2a064:	mov	r0, r4
   2a068:	bl	29ef4 <ASN1_STRING_length@plt+0x17f80>
   2a06c:	cmp	r0, #0
   2a070:	moveq	r5, r0
   2a074:	beq	2a09c <ASN1_STRING_length@plt+0x18128>
   2a078:	ldr	r3, [r4, #8]
   2a07c:	ldr	r0, [r4]
   2a080:	mov	r1, r6
   2a084:	add	r0, r0, r3
   2a088:	mov	r2, r5
   2a08c:	bl	11c5c <memcpy@plt>
   2a090:	ldr	r3, [r4, #8]
   2a094:	add	r3, r3, r5
   2a098:	str	r3, [r4, #8]
   2a09c:	mov	r0, r5
   2a0a0:	pop	{r4, r5, r6, pc}
   2a0a4:	ldr	r3, [pc, #56]	; 2a0e4 <ASN1_STRING_length@plt+0x18170>
   2a0a8:	ldr	r1, [pc, #56]	; 2a0e8 <ASN1_STRING_length@plt+0x18174>
   2a0ac:	ldr	r0, [pc, #56]	; 2a0ec <ASN1_STRING_length@plt+0x18178>
   2a0b0:	add	r3, pc, r3
   2a0b4:	mov	r2, #99	; 0x63
   2a0b8:	add	r1, pc, r1
   2a0bc:	add	r0, pc, r0
   2a0c0:	bl	11b6c <__assert_fail@plt>
   2a0c4:	ldr	r3, [pc, #36]	; 2a0f0 <ASN1_STRING_length@plt+0x1817c>
   2a0c8:	ldr	r1, [pc, #36]	; 2a0f4 <ASN1_STRING_length@plt+0x18180>
   2a0cc:	ldr	r0, [pc, #36]	; 2a0f8 <ASN1_STRING_length@plt+0x18184>
   2a0d0:	add	r3, pc, r3
   2a0d4:	mov	r2, #98	; 0x62
   2a0d8:	add	r1, pc, r1
   2a0dc:	add	r0, pc, r0
   2a0e0:	bl	11b6c <__assert_fail@plt>
   2a0e4:	andeq	r5, r0, ip, ror #5
   2a0e8:	andeq	r5, r0, r8, lsr r3
   2a0ec:	andeq	r5, r0, r4, asr r3
   2a0f0:	andeq	r5, r0, ip, asr #5
   2a0f4:	andeq	r5, r0, r8, lsl r3
   2a0f8:	andeq	r5, r0, r8, lsr #6
   2a0fc:	ldr	r3, [r0, #8]
   2a100:	cmp	r3, #0
   2a104:	beq	2a114 <ASN1_STRING_length@plt+0x181a0>
   2a108:	sub	r3, r3, #1
   2a10c:	str	r3, [r0, #8]
   2a110:	bx	lr
   2a114:	ldr	r3, [pc, #28]	; 2a138 <ASN1_STRING_length@plt+0x181c4>
   2a118:	ldr	r1, [pc, #28]	; 2a13c <ASN1_STRING_length@plt+0x181c8>
   2a11c:	ldr	r0, [pc, #28]	; 2a140 <ASN1_STRING_length@plt+0x181cc>
   2a120:	push	{r4, lr}
   2a124:	add	r3, pc, r3
   2a128:	mov	r2, #114	; 0x72
   2a12c:	add	r1, pc, r1
   2a130:	add	r0, pc, r0
   2a134:	bl	11b6c <__assert_fail@plt>
   2a138:	andeq	r5, r0, ip, lsl #5
   2a13c:	andeq	r5, r0, r4, asr #5
   2a140:	andeq	r5, r0, r0, lsr #5
   2a144:	ldr	r3, [r0, #8]
   2a148:	cmp	r3, r1
   2a14c:	bcc	2a15c <ASN1_STRING_length@plt+0x181e8>
   2a150:	sub	r3, r3, r1
   2a154:	str	r3, [r0, #8]
   2a158:	bx	lr
   2a15c:	ldr	r3, [pc, #28]	; 2a180 <ASN1_STRING_length@plt+0x1820c>
   2a160:	ldr	r1, [pc, #28]	; 2a184 <ASN1_STRING_length@plt+0x18210>
   2a164:	ldr	r0, [pc, #28]	; 2a188 <ASN1_STRING_length@plt+0x18214>
   2a168:	push	{r4, lr}
   2a16c:	add	r3, pc, r3
   2a170:	mov	r2, #120	; 0x78
   2a174:	add	r1, pc, r1
   2a178:	add	r0, pc, r0
   2a17c:	bl	11b6c <__assert_fail@plt>
   2a180:	andeq	r5, r0, r4, asr r2
   2a184:	andeq	r5, r0, ip, ror r2
   2a188:	andeq	r5, r0, r8, ror #4
   2a18c:	mov	r3, #0
   2a190:	str	r3, [r0, #8]
   2a194:	bx	lr
   2a198:	subs	r2, r1, #1
   2a19c:	bxeq	lr
   2a1a0:	bcc	2a378 <ASN1_STRING_length@plt+0x18404>
   2a1a4:	cmp	r0, r1
   2a1a8:	bls	2a35c <ASN1_STRING_length@plt+0x183e8>
   2a1ac:	tst	r1, r2
   2a1b0:	beq	2a368 <ASN1_STRING_length@plt+0x183f4>
   2a1b4:	clz	r3, r0
   2a1b8:	clz	r2, r1
   2a1bc:	sub	r3, r2, r3
   2a1c0:	rsbs	r3, r3, #31
   2a1c4:	addne	r3, r3, r3, lsl #1
   2a1c8:	mov	r2, #0
   2a1cc:	addne	pc, pc, r3, lsl #2
   2a1d0:	nop			; (mov r0, r0)
   2a1d4:	cmp	r0, r1, lsl #31
   2a1d8:	adc	r2, r2, r2
   2a1dc:	subcs	r0, r0, r1, lsl #31
   2a1e0:	cmp	r0, r1, lsl #30
   2a1e4:	adc	r2, r2, r2
   2a1e8:	subcs	r0, r0, r1, lsl #30
   2a1ec:	cmp	r0, r1, lsl #29
   2a1f0:	adc	r2, r2, r2
   2a1f4:	subcs	r0, r0, r1, lsl #29
   2a1f8:	cmp	r0, r1, lsl #28
   2a1fc:	adc	r2, r2, r2
   2a200:	subcs	r0, r0, r1, lsl #28
   2a204:	cmp	r0, r1, lsl #27
   2a208:	adc	r2, r2, r2
   2a20c:	subcs	r0, r0, r1, lsl #27
   2a210:	cmp	r0, r1, lsl #26
   2a214:	adc	r2, r2, r2
   2a218:	subcs	r0, r0, r1, lsl #26
   2a21c:	cmp	r0, r1, lsl #25
   2a220:	adc	r2, r2, r2
   2a224:	subcs	r0, r0, r1, lsl #25
   2a228:	cmp	r0, r1, lsl #24
   2a22c:	adc	r2, r2, r2
   2a230:	subcs	r0, r0, r1, lsl #24
   2a234:	cmp	r0, r1, lsl #23
   2a238:	adc	r2, r2, r2
   2a23c:	subcs	r0, r0, r1, lsl #23
   2a240:	cmp	r0, r1, lsl #22
   2a244:	adc	r2, r2, r2
   2a248:	subcs	r0, r0, r1, lsl #22
   2a24c:	cmp	r0, r1, lsl #21
   2a250:	adc	r2, r2, r2
   2a254:	subcs	r0, r0, r1, lsl #21
   2a258:	cmp	r0, r1, lsl #20
   2a25c:	adc	r2, r2, r2
   2a260:	subcs	r0, r0, r1, lsl #20
   2a264:	cmp	r0, r1, lsl #19
   2a268:	adc	r2, r2, r2
   2a26c:	subcs	r0, r0, r1, lsl #19
   2a270:	cmp	r0, r1, lsl #18
   2a274:	adc	r2, r2, r2
   2a278:	subcs	r0, r0, r1, lsl #18
   2a27c:	cmp	r0, r1, lsl #17
   2a280:	adc	r2, r2, r2
   2a284:	subcs	r0, r0, r1, lsl #17
   2a288:	cmp	r0, r1, lsl #16
   2a28c:	adc	r2, r2, r2
   2a290:	subcs	r0, r0, r1, lsl #16
   2a294:	cmp	r0, r1, lsl #15
   2a298:	adc	r2, r2, r2
   2a29c:	subcs	r0, r0, r1, lsl #15
   2a2a0:	cmp	r0, r1, lsl #14
   2a2a4:	adc	r2, r2, r2
   2a2a8:	subcs	r0, r0, r1, lsl #14
   2a2ac:	cmp	r0, r1, lsl #13
   2a2b0:	adc	r2, r2, r2
   2a2b4:	subcs	r0, r0, r1, lsl #13
   2a2b8:	cmp	r0, r1, lsl #12
   2a2bc:	adc	r2, r2, r2
   2a2c0:	subcs	r0, r0, r1, lsl #12
   2a2c4:	cmp	r0, r1, lsl #11
   2a2c8:	adc	r2, r2, r2
   2a2cc:	subcs	r0, r0, r1, lsl #11
   2a2d0:	cmp	r0, r1, lsl #10
   2a2d4:	adc	r2, r2, r2
   2a2d8:	subcs	r0, r0, r1, lsl #10
   2a2dc:	cmp	r0, r1, lsl #9
   2a2e0:	adc	r2, r2, r2
   2a2e4:	subcs	r0, r0, r1, lsl #9
   2a2e8:	cmp	r0, r1, lsl #8
   2a2ec:	adc	r2, r2, r2
   2a2f0:	subcs	r0, r0, r1, lsl #8
   2a2f4:	cmp	r0, r1, lsl #7
   2a2f8:	adc	r2, r2, r2
   2a2fc:	subcs	r0, r0, r1, lsl #7
   2a300:	cmp	r0, r1, lsl #6
   2a304:	adc	r2, r2, r2
   2a308:	subcs	r0, r0, r1, lsl #6
   2a30c:	cmp	r0, r1, lsl #5
   2a310:	adc	r2, r2, r2
   2a314:	subcs	r0, r0, r1, lsl #5
   2a318:	cmp	r0, r1, lsl #4
   2a31c:	adc	r2, r2, r2
   2a320:	subcs	r0, r0, r1, lsl #4
   2a324:	cmp	r0, r1, lsl #3
   2a328:	adc	r2, r2, r2
   2a32c:	subcs	r0, r0, r1, lsl #3
   2a330:	cmp	r0, r1, lsl #2
   2a334:	adc	r2, r2, r2
   2a338:	subcs	r0, r0, r1, lsl #2
   2a33c:	cmp	r0, r1, lsl #1
   2a340:	adc	r2, r2, r2
   2a344:	subcs	r0, r0, r1, lsl #1
   2a348:	cmp	r0, r1
   2a34c:	adc	r2, r2, r2
   2a350:	subcs	r0, r0, r1
   2a354:	mov	r0, r2
   2a358:	bx	lr
   2a35c:	moveq	r0, #1
   2a360:	movne	r0, #0
   2a364:	bx	lr
   2a368:	clz	r2, r1
   2a36c:	rsb	r2, r2, #31
   2a370:	lsr	r0, r0, r2
   2a374:	bx	lr
   2a378:	cmp	r0, #0
   2a37c:	mvnne	r0, #0
   2a380:	b	2a3e0 <ASN1_STRING_length@plt+0x1846c>
   2a384:	cmp	r1, #0
   2a388:	beq	2a378 <ASN1_STRING_length@plt+0x18404>
   2a38c:	push	{r0, r1, lr}
   2a390:	bl	2a198 <ASN1_STRING_length@plt+0x18224>
   2a394:	pop	{r1, r2, lr}
   2a398:	mul	r3, r2, r0
   2a39c:	sub	r1, r1, r3
   2a3a0:	bx	lr
   2a3a4:	cmp	r3, #0
   2a3a8:	cmpeq	r2, #0
   2a3ac:	bne	2a3c4 <ASN1_STRING_length@plt+0x18450>
   2a3b0:	cmp	r1, #0
   2a3b4:	cmpeq	r0, #0
   2a3b8:	mvnne	r1, #0
   2a3bc:	mvnne	r0, #0
   2a3c0:	b	2a3e0 <ASN1_STRING_length@plt+0x1846c>
   2a3c4:	sub	sp, sp, #8
   2a3c8:	push	{sp, lr}
   2a3cc:	bl	2a3f0 <ASN1_STRING_length@plt+0x1847c>
   2a3d0:	ldr	lr, [sp, #4]
   2a3d4:	add	sp, sp, #8
   2a3d8:	pop	{r2, r3}
   2a3dc:	bx	lr
   2a3e0:	push	{r1, lr}
   2a3e4:	mov	r0, #8
   2a3e8:	bl	11cbc <raise@plt>
   2a3ec:	pop	{r1, pc}
   2a3f0:	cmp	r1, r3
   2a3f4:	cmpeq	r0, r2
   2a3f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a3fc:	mov	r4, r0
   2a400:	movcc	r0, #0
   2a404:	mov	r5, r1
   2a408:	ldr	lr, [sp, #36]	; 0x24
   2a40c:	movcc	r1, r0
   2a410:	bcc	2a50c <ASN1_STRING_length@plt+0x18598>
   2a414:	cmp	r3, #0
   2a418:	clzeq	ip, r2
   2a41c:	clzne	ip, r3
   2a420:	addeq	ip, ip, #32
   2a424:	cmp	r5, #0
   2a428:	clzeq	r1, r4
   2a42c:	addeq	r1, r1, #32
   2a430:	clzne	r1, r5
   2a434:	sub	ip, ip, r1
   2a438:	sub	sl, ip, #32
   2a43c:	lsl	r9, r3, ip
   2a440:	rsb	fp, ip, #32
   2a444:	orr	r9, r9, r2, lsl sl
   2a448:	orr	r9, r9, r2, lsr fp
   2a44c:	lsl	r8, r2, ip
   2a450:	cmp	r5, r9
   2a454:	cmpeq	r4, r8
   2a458:	movcc	r0, #0
   2a45c:	movcc	r1, r0
   2a460:	bcc	2a47c <ASN1_STRING_length@plt+0x18508>
   2a464:	mov	r0, #1
   2a468:	subs	r4, r4, r8
   2a46c:	lsl	r1, r0, sl
   2a470:	orr	r1, r1, r0, lsr fp
   2a474:	lsl	r0, r0, ip
   2a478:	sbc	r5, r5, r9
   2a47c:	cmp	ip, #0
   2a480:	beq	2a50c <ASN1_STRING_length@plt+0x18598>
   2a484:	lsr	r6, r8, #1
   2a488:	orr	r6, r6, r9, lsl #31
   2a48c:	lsr	r7, r9, #1
   2a490:	mov	r2, ip
   2a494:	b	2a4b8 <ASN1_STRING_length@plt+0x18544>
   2a498:	subs	r3, r4, r6
   2a49c:	sbc	r8, r5, r7
   2a4a0:	adds	r3, r3, r3
   2a4a4:	adc	r8, r8, r8
   2a4a8:	adds	r4, r3, #1
   2a4ac:	adc	r5, r8, #0
   2a4b0:	subs	r2, r2, #1
   2a4b4:	beq	2a4d4 <ASN1_STRING_length@plt+0x18560>
   2a4b8:	cmp	r5, r7
   2a4bc:	cmpeq	r4, r6
   2a4c0:	bcs	2a498 <ASN1_STRING_length@plt+0x18524>
   2a4c4:	adds	r4, r4, r4
   2a4c8:	adc	r5, r5, r5
   2a4cc:	subs	r2, r2, #1
   2a4d0:	bne	2a4b8 <ASN1_STRING_length@plt+0x18544>
   2a4d4:	lsr	r3, r4, ip
   2a4d8:	orr	r3, r3, r5, lsl fp
   2a4dc:	lsr	r2, r5, ip
   2a4e0:	orr	r3, r3, r5, lsr sl
   2a4e4:	adds	r0, r0, r4
   2a4e8:	mov	r4, r3
   2a4ec:	lsl	r3, r2, ip
   2a4f0:	orr	r3, r3, r4, lsl sl
   2a4f4:	lsl	ip, r4, ip
   2a4f8:	orr	r3, r3, r4, lsr fp
   2a4fc:	adc	r1, r1, r5
   2a500:	subs	r0, r0, ip
   2a504:	mov	r5, r2
   2a508:	sbc	r1, r1, r3
   2a50c:	cmp	lr, #0
   2a510:	strdne	r4, [lr]
   2a514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a518:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a51c:	mov	r7, r0
   2a520:	ldr	r6, [pc, #72]	; 2a570 <ASN1_STRING_length@plt+0x185fc>
   2a524:	ldr	r5, [pc, #72]	; 2a574 <ASN1_STRING_length@plt+0x18600>
   2a528:	add	r6, pc, r6
   2a52c:	add	r5, pc, r5
   2a530:	sub	r6, r6, r5
   2a534:	mov	r8, r1
   2a538:	mov	r9, r2
   2a53c:	bl	119a8 <CMS_SignerInfo_get0_signature@plt-0x20>
   2a540:	asrs	r6, r6, #2
   2a544:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a548:	mov	r4, #0
   2a54c:	add	r4, r4, #1
   2a550:	ldr	r3, [r5], #4
   2a554:	mov	r2, r9
   2a558:	mov	r1, r8
   2a55c:	mov	r0, r7
   2a560:	blx	r3
   2a564:	cmp	r6, r4
   2a568:	bne	2a54c <ASN1_STRING_length@plt+0x185d8>
   2a56c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a570:	andeq	r5, r1, ip, lsl r7
   2a574:	andeq	r5, r1, r4, lsl r7
   2a578:	bx	lr

Disassembly of section .fini:

0002a57c <.fini>:
   2a57c:	push	{r3, lr}
   2a580:	pop	{r3, pc}
