
raspbian-preinstalled/uuid:     file format elf32-littlearm


Disassembly of section .init:

000108c4 <_init@@Base>:
   108c4:	push	{r3, lr}
   108c8:	bl	11364 <abort@plt+0x93c>
   108cc:	pop	{r3, pc}

Disassembly of section .plt:

000108d0 <strcmp@plt-0x14>:
   108d0:	push	{lr}		; (str lr, [sp, #-4]!)
   108d4:	ldr	lr, [pc, #4]	; 108e0 <_init@@Base+0x1c>
   108d8:	add	lr, pc, lr
   108dc:	ldr	pc, [lr, #8]!
   108e0:	andeq	r1, r1, r0, lsr #14

000108e4 <strcmp@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1824]!	; 0x720

000108f0 <strtol@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1816]!	; 0x718

000108fc <fopen@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1808]!	; 0x710

00010908 <free@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1800]!	; 0x708

00010914 <uuid_export@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1792]!	; 0x700

00010920 <__stack_chk_fail@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1784]!	; 0x6f8

0001092c <uuid_error@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1776]!	; 0x6f0

00010938 <strcasecmp@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1768]!	; 0x6e8

00010944 <fwrite@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1760]!	; 0x6e0

00010950 <fread@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1752]!	; 0x6d8

0001095c <__libc_start_main@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1744]!	; 0x6d0

00010968 <strerror@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1736]!	; 0x6c8

00010974 <__vfprintf_chk@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1728]!	; 0x6c0

00010980 <uuid_load@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1720]!	; 0x6b8

0001098c <__gmon_start__@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1712]!	; 0x6b0

00010998 <exit@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1704]!	; 0x6a8

000109a4 <strlen@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1696]!	; 0x6a0

000109b0 <getopt@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1688]!	; 0x698

000109bc <__errno_location@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1680]!	; 0x690

000109c8 <__fprintf_chk@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1672]!	; 0x688

000109d4 <fclose@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1664]!	; 0x680

000109e0 <fputc@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1656]!	; 0x678

000109ec <uuid_import@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1648]!	; 0x670

000109f8 <uuid_destroy@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1640]!	; 0x668

00010a04 <uuid_make@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1632]!	; 0x660

00010a10 <uuid_create@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1624]!	; 0x658

00010a1c <fputs@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1616]!	; 0x650

00010a28 <abort@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1608]!	; 0x648

Disassembly of section .text:

00010a34 <.text>:
   10a34:	ldr	r3, [pc, #2148]	; 112a0 <abort@plt+0x878>
   10a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a3c:	sub	sp, sp, #132	; 0x84
   10a40:	ldr	r3, [r3]
   10a44:	mov	r6, #1
   10a48:	str	r3, [sp, #124]	; 0x7c
   10a4c:	ldr	r3, [pc, #2128]	; 112a4 <abort@plt+0x87c>
   10a50:	mov	r5, #0
   10a54:	ldr	fp, [pc, #2124]	; 112a8 <abort@plt+0x880>
   10a58:	ldr	r3, [r3]
   10a5c:	mov	r7, r0
   10a60:	mov	r8, r1
   10a64:	mov	r4, r6
   10a68:	mov	sl, r5
   10a6c:	mvn	r9, #0
   10a70:	str	r3, [sp, #4]
   10a74:	mov	r2, fp
   10a78:	mov	r1, r8
   10a7c:	mov	r0, r7
   10a80:	bl	109b0 <getopt@plt>
   10a84:	cmn	r0, #1
   10a88:	beq	10d2c <abort@plt+0x304>
   10a8c:	sub	r0, r0, #49	; 0x31
   10a90:	cmp	r0, #69	; 0x45
   10a94:	ldrls	pc, [pc, r0, lsl #2]
   10a98:	b	11168 <abort@plt+0x740>
   10a9c:			; <UNDEFINED> instruction: 0x00010cb0
   10aa0:	andeq	r1, r1, r8, ror #2
   10aa4:	andeq	r1, r1, r8, ror #2
   10aa8:	andeq	r1, r1, r8, ror #2
   10aac:	andeq	r1, r1, r8, ror #2
   10ab0:	andeq	r1, r1, r8, ror #2
   10ab4:	andeq	r1, r1, r8, ror #2
   10ab8:	andeq	r1, r1, r8, ror #2
   10abc:	andeq	r1, r1, r8, ror #2
   10ac0:	andeq	r1, r1, r8, ror #2
   10ac4:	andeq	r1, r1, r8, ror #2
   10ac8:	andeq	r1, r1, r8, ror #2
   10acc:	andeq	r1, r1, r8, ror #2
   10ad0:	andeq	r1, r1, r8, ror #2
   10ad4:	andeq	r1, r1, r8, ror #2
   10ad8:	andeq	r1, r1, r8, ror #2
   10adc:	andeq	r1, r1, r8, ror #2
   10ae0:	andeq	r1, r1, r8, ror #2
   10ae4:	andeq	r1, r1, r8, ror #2
   10ae8:	andeq	r1, r1, r8, ror #2
   10aec:	andeq	r1, r1, r8, ror #2
   10af0:	andeq	r0, r1, r4, ror #24
   10af4:	andeq	r1, r1, r8, ror #2
   10af8:	andeq	r1, r1, r8, ror #2
   10afc:	andeq	r1, r1, r8, ror #2
   10b00:	andeq	r1, r1, r8, ror #2
   10b04:	andeq	r1, r1, r8, ror #2
   10b08:	andeq	r1, r1, r8, ror #2
   10b0c:	andeq	r1, r1, r8, ror #2
   10b10:	andeq	r1, r1, r8, ror #2
   10b14:	andeq	r1, r1, r8, ror #2
   10b18:	andeq	r1, r1, r8, ror #2
   10b1c:	andeq	r1, r1, r8, ror #2
   10b20:	andeq	r1, r1, r8, ror #2
   10b24:	andeq	r1, r1, r8, ror #2
   10b28:	andeq	r1, r1, r8, ror #2
   10b2c:	andeq	r1, r1, r8, ror #2
   10b30:	andeq	r1, r1, r8, ror #2
   10b34:	andeq	r1, r1, r8, ror #2
   10b38:	andeq	r1, r1, r8, ror #2
   10b3c:	andeq	r1, r1, r8, ror #2
   10b40:	andeq	r1, r1, r8, ror #2
   10b44:	andeq	r1, r1, r8, ror #2
   10b48:	andeq	r1, r1, r8, ror #2
   10b4c:	andeq	r1, r1, r8, ror #2
   10b50:	andeq	r1, r1, r8, ror #2
   10b54:	andeq	r1, r1, r8, ror #2
   10b58:	andeq	r1, r1, r8, ror #2
   10b5c:	andeq	r1, r1, r8, ror #2
   10b60:	andeq	r1, r1, r8, ror #2
   10b64:	andeq	r1, r1, r8, ror #2
   10b68:	andeq	r0, r1, ip, asr ip
   10b6c:	andeq	r1, r1, r8, ror #2
   10b70:	andeq	r1, r1, r8, ror #2
   10b74:	andeq	r1, r1, r8, ror #2
   10b78:	andeq	r1, r1, r0, ror #2
   10b7c:	andeq	r1, r1, r8, ror #2
   10b80:	andeq	r1, r1, r8, ror #2
   10b84:	andeq	r1, r1, r8, ror #2
   10b88:	andeq	r1, r1, r8, ror #2
   10b8c:	andeq	r0, r1, r4, asr ip
   10b90:	andeq	r0, r1, r8, lsl #24
   10b94:			; <UNDEFINED> instruction: 0x00010bbc
   10b98:	andeq	r1, r1, r8, ror #2
   10b9c:	andeq	r1, r1, r8, ror #2
   10ba0:			; <UNDEFINED> instruction: 0x00010bb4
   10ba4:	andeq	r1, r1, r8, ror #2
   10ba8:	andeq	r1, r1, r8, ror #2
   10bac:	andeq	r1, r1, r8, ror #2
   10bb0:			; <UNDEFINED> instruction: 0x00010cb8
   10bb4:	mov	r4, #0
   10bb8:	b	10a74 <abort@plt+0x4c>
   10bbc:	ldr	r3, [pc, #1760]	; 112a4 <abort@plt+0x87c>
   10bc0:	ldr	r2, [sp, #4]
   10bc4:	ldr	r3, [r3]
   10bc8:	cmp	r3, r2
   10bcc:	bne	11284 <abort@plt+0x85c>
   10bd0:	ldr	r3, [pc, #1748]	; 112ac <abort@plt+0x884>
   10bd4:	ldr	r1, [pc, #1748]	; 112b0 <abort@plt+0x888>
   10bd8:	ldr	r0, [r3]
   10bdc:	bl	108fc <fopen@plt>
   10be0:	subs	r3, r0, #0
   10be4:	str	r3, [sp, #4]
   10be8:	bne	10a74 <abort@plt+0x4c>
   10bec:	bl	109bc <__errno_location@plt>
   10bf0:	ldr	r0, [r0]
   10bf4:	bl	10968 <strerror@plt>
   10bf8:	ldr	r1, [pc, #1716]	; 112b4 <abort@plt+0x88c>
   10bfc:	mov	r2, r0
   10c00:	mov	r0, #1
   10c04:	bl	114c0 <abort@plt+0xa98>
   10c08:	cmp	r9, #0
   10c0c:	bgt	11298 <abort@plt+0x870>
   10c10:	ldr	r3, [pc, #1684]	; 112ac <abort@plt+0x884>
   10c14:	mov	r2, #10
   10c18:	add	r1, sp, #16
   10c1c:	ldr	r0, [r3]
   10c20:	bl	108f0 <strtol@plt>
   10c24:	ldr	r3, [sp, #16]
   10c28:	ldrb	r2, [r3]
   10c2c:	cmp	r0, #0
   10c30:	movgt	r3, #0
   10c34:	movle	r3, #1
   10c38:	cmp	r2, #0
   10c3c:	movne	r3, #1
   10c40:	cmp	r3, #0
   10c44:	mov	r9, r0
   10c48:	beq	10a74 <abort@plt+0x4c>
   10c4c:	ldr	r0, [pc, #1636]	; 112b8 <abort@plt+0x890>
   10c50:	bl	11418 <abort@plt+0x9f0>
   10c54:	orr	r6, r6, #16
   10c58:	b	10a74 <abort@plt+0x4c>
   10c5c:	mov	r5, #1
   10c60:	b	10a74 <abort@plt+0x4c>
   10c64:	ldr	r3, [pc, #1600]	; 112ac <abort@plt+0x884>
   10c68:	ldr	r1, [pc, #1612]	; 112bc <abort@plt+0x894>
   10c6c:	ldr	r4, [r3]
   10c70:	mov	r0, r4
   10c74:	bl	10938 <strcasecmp@plt>
   10c78:	cmp	r0, #0
   10c7c:	beq	10bb4 <abort@plt+0x18c>
   10c80:	ldr	r1, [pc, #1592]	; 112c0 <abort@plt+0x898>
   10c84:	mov	r0, r4
   10c88:	bl	10938 <strcasecmp@plt>
   10c8c:	cmp	r0, #0
   10c90:	beq	10d24 <abort@plt+0x2fc>
   10c94:	ldr	r1, [pc, #1576]	; 112c4 <abort@plt+0x89c>
   10c98:	mov	r0, r4
   10c9c:	bl	10938 <strcasecmp@plt>
   10ca0:	cmp	r0, #0
   10ca4:	bne	11230 <abort@plt+0x808>
   10ca8:	mov	r4, #2
   10cac:	b	10a74 <abort@plt+0x4c>
   10cb0:	mov	sl, #1
   10cb4:	b	10a74 <abort@plt+0x4c>
   10cb8:	ldr	r3, [pc, #1516]	; 112ac <abort@plt+0x884>
   10cbc:	mov	r2, #10
   10cc0:	add	r1, sp, #16
   10cc4:	ldr	r0, [r3]
   10cc8:	bl	108f0 <strtol@plt>
   10ccc:	ldr	r3, [sp, #16]
   10cd0:	ldrb	r3, [r3]
   10cd4:	cmp	r3, #0
   10cd8:	bne	11290 <abort@plt+0x868>
   10cdc:	sub	r0, r0, #1
   10ce0:	bic	r6, r6, #15
   10ce4:	cmp	r0, #4
   10ce8:	ldrls	pc, [pc, r0, lsl #2]
   10cec:	b	11204 <abort@plt+0x7dc>
   10cf0:	andeq	r0, r1, ip, lsl sp
   10cf4:	andeq	r1, r1, r4, lsl #4
   10cf8:	andeq	r0, r1, r4, lsl sp
   10cfc:	andeq	r0, r1, ip, lsl #26
   10d00:	andeq	r0, r1, r4, lsl #26
   10d04:	orr	r6, r6, #8
   10d08:	b	10a74 <abort@plt+0x4c>
   10d0c:	orr	r6, r6, #4
   10d10:	b	10a74 <abort@plt+0x4c>
   10d14:	orr	r6, r6, #2
   10d18:	b	10a74 <abort@plt+0x4c>
   10d1c:	orr	r6, r6, #1
   10d20:	b	10a74 <abort@plt+0x4c>
   10d24:	mov	r4, #1
   10d28:	b	10a74 <abort@plt+0x4c>
   10d2c:	ldr	r3, [pc, #1428]	; 112c8 <abort@plt+0x8a0>
   10d30:	cmn	r9, #1
   10d34:	moveq	r9, #1
   10d38:	ldr	r3, [r3]
   10d3c:	cmp	r5, #0
   10d40:	str	r3, [sp]
   10d44:	sub	r7, r7, r3
   10d48:	add	fp, r8, r3, lsl #2
   10d4c:	bne	10fe0 <abort@plt+0x5b8>
   10d50:	adds	r1, r7, #0
   10d54:	movne	r1, #1
   10d58:	tst	r6, r1
   10d5c:	bne	1127c <abort@plt+0x854>
   10d60:	subs	r2, r7, #2
   10d64:	movne	r2, #1
   10d68:	ands	r3, r2, r6, lsr #1
   10d6c:	bne	1127c <abort@plt+0x854>
   10d70:	ands	r3, r1, r6, lsr #2
   10d74:	bne	1127c <abort@plt+0x854>
   10d78:	ands	r3, r2, r6, lsr #3
   10d7c:	bne	1127c <abort@plt+0x854>
   10d80:	add	r0, sp, #8
   10d84:	bl	10a10 <uuid_create@plt>
   10d88:	ldr	r3, [sp]
   10d8c:	cmp	r0, #0
   10d90:	bne	111f0 <abort@plt+0x7c8>
   10d94:	cmp	r7, #1
   10d98:	beq	10f9c <abort@plt+0x574>
   10d9c:	cmp	r9, #0
   10da0:	beq	10f28 <abort@plt+0x500>
   10da4:	and	r7, r6, #10
   10da8:	ldr	r8, [sp, #4]
   10dac:	b	10e88 <abort@plt+0x460>
   10db0:	add	r0, sp, #12
   10db4:	bl	10a10 <uuid_create@plt>
   10db8:	cmp	r0, #0
   10dbc:	bne	111f0 <abort@plt+0x7c8>
   10dc0:	ldr	r1, [fp]
   10dc4:	ldr	r0, [sp, #12]
   10dc8:	bl	10980 <uuid_load@plt>
   10dcc:	cmp	r0, #0
   10dd0:	beq	10e00 <abort@plt+0x3d8>
   10dd4:	ldr	r2, [fp]
   10dd8:	mov	r0, r2
   10ddc:	str	r2, [sp]
   10de0:	bl	109a4 <strlen@plt>
   10de4:	ldr	r2, [sp]
   10de8:	mov	r1, #1
   10dec:	mov	r3, r0
   10df0:	ldr	r0, [sp, #12]
   10df4:	bl	109ec <uuid_import@plt>
   10df8:	cmp	r0, #0
   10dfc:	bne	10fcc <abort@plt+0x5a4>
   10e00:	ldr	r3, [fp, #4]
   10e04:	ldr	r2, [sp, #12]
   10e08:	mov	r1, r6
   10e0c:	ldr	r0, [sp, #8]
   10e10:	bl	10a04 <uuid_make@plt>
   10e14:	cmp	r0, #0
   10e18:	bne	10eac <abort@plt+0x484>
   10e1c:	ldr	r0, [sp, #12]
   10e20:	bl	109f8 <uuid_destroy@plt>
   10e24:	cmp	r0, #0
   10e28:	bne	110fc <abort@plt+0x6d4>
   10e2c:	cmp	r4, #0
   10e30:	ldr	r0, [sp, #8]
   10e34:	beq	10ee8 <abort@plt+0x4c0>
   10e38:	cmp	r4, #1
   10e3c:	mov	ip, #0
   10e40:	add	r3, sp, #24
   10e44:	add	r2, sp, #20
   10e48:	beq	10f74 <abort@plt+0x54c>
   10e4c:	mov	r1, #2
   10e50:	str	ip, [sp, #20]
   10e54:	bl	10914 <uuid_export@plt>
   10e58:	cmp	r0, #0
   10e5c:	bne	111dc <abort@plt+0x7b4>
   10e60:	ldr	r3, [sp, #20]
   10e64:	ldr	r2, [pc, #1120]	; 112cc <abort@plt+0x8a4>
   10e68:	mov	r1, #1
   10e6c:	mov	r0, r8
   10e70:	bl	109c8 <__fprintf_chk@plt>
   10e74:	add	r5, r5, #1
   10e78:	ldr	r0, [sp, #20]
   10e7c:	bl	10908 <free@plt>
   10e80:	cmp	r9, r5
   10e84:	beq	10f28 <abort@plt+0x500>
   10e88:	cmp	sl, #0
   10e8c:	bne	10ec0 <abort@plt+0x498>
   10e90:	cmp	r7, #0
   10e94:	bne	10db0 <abort@plt+0x388>
   10e98:	mov	r1, r6
   10e9c:	ldr	r0, [sp, #8]
   10ea0:	bl	10a04 <uuid_make@plt>
   10ea4:	cmp	r0, #0
   10ea8:	beq	10e2c <abort@plt+0x404>
   10eac:	bl	1092c <uuid_error@plt>
   10eb0:	ldr	r1, [pc, #1048]	; 112d0 <abort@plt+0x8a8>
   10eb4:	mov	r2, r0
   10eb8:	mov	r0, #1
   10ebc:	bl	114c0 <abort@plt+0xa98>
   10ec0:	ldr	r1, [pc, #1036]	; 112d4 <abort@plt+0x8ac>
   10ec4:	ldr	r0, [sp, #8]
   10ec8:	bl	10980 <uuid_load@plt>
   10ecc:	cmp	r0, #0
   10ed0:	beq	10e90 <abort@plt+0x468>
   10ed4:	bl	1092c <uuid_error@plt>
   10ed8:	ldr	r1, [pc, #1016]	; 112d8 <abort@plt+0x8b0>
   10edc:	mov	r2, r0
   10ee0:	mov	r0, #1
   10ee4:	bl	114c0 <abort@plt+0xa98>
   10ee8:	add	r3, sp, #24
   10eec:	add	r2, sp, #20
   10ef0:	mov	r1, r4
   10ef4:	str	r4, [sp, #20]
   10ef8:	bl	10914 <uuid_export@plt>
   10efc:	cmp	r0, #0
   10f00:	bne	111dc <abort@plt+0x7b4>
   10f04:	mov	r3, r8
   10f08:	mov	r2, #1
   10f0c:	ldrd	r0, [sp, #20]
   10f10:	bl	10944 <fwrite@plt>
   10f14:	add	r5, r5, #1
   10f18:	ldr	r0, [sp, #20]
   10f1c:	bl	10908 <free@plt>
   10f20:	cmp	r9, r5
   10f24:	bne	10e88 <abort@plt+0x460>
   10f28:	ldr	r0, [sp, #8]
   10f2c:	bl	109f8 <uuid_destroy@plt>
   10f30:	cmp	r0, #0
   10f34:	bne	110fc <abort@plt+0x6d4>
   10f38:	ldr	r3, [pc, #868]	; 112a4 <abort@plt+0x87c>
   10f3c:	ldr	r2, [sp, #4]
   10f40:	ldr	r3, [r3]
   10f44:	cmp	r3, r2
   10f48:	beq	10f54 <abort@plt+0x52c>
   10f4c:	mov	r0, r2
   10f50:	bl	109d4 <fclose@plt>
   10f54:	ldr	r3, [pc, #836]	; 112a0 <abort@plt+0x878>
   10f58:	ldr	r2, [sp, #124]	; 0x7c
   10f5c:	mov	r0, #0
   10f60:	ldr	r3, [r3]
   10f64:	cmp	r2, r3
   10f68:	bne	1122c <abort@plt+0x804>
   10f6c:	add	sp, sp, #132	; 0x84
   10f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f74:	mov	r1, r4
   10f78:	str	ip, [sp, #20]
   10f7c:	bl	10914 <uuid_export@plt>
   10f80:	cmp	r0, #0
   10f84:	beq	10e60 <abort@plt+0x438>
   10f88:	bl	1092c <uuid_error@plt>
   10f8c:	ldr	r1, [pc, #840]	; 112dc <abort@plt+0x8b4>
   10f90:	mov	r2, r0
   10f94:	mov	r0, r4
   10f98:	bl	114c0 <abort@plt+0xa98>
   10f9c:	ldr	r8, [r8, r3, lsl #2]
   10fa0:	mov	r0, r8
   10fa4:	bl	109a4 <strlen@plt>
   10fa8:	cmp	r0, #36	; 0x24
   10fac:	mov	r3, r0
   10fb0:	bne	11240 <abort@plt+0x818>
   10fb4:	mov	r2, r8
   10fb8:	mov	r1, r7
   10fbc:	ldr	r0, [sp, #8]
   10fc0:	bl	109ec <uuid_import@plt>
   10fc4:	cmp	r0, #0
   10fc8:	beq	10d9c <abort@plt+0x374>
   10fcc:	bl	1092c <uuid_error@plt>
   10fd0:	ldr	r1, [pc, #776]	; 112e0 <abort@plt+0x8b8>
   10fd4:	mov	r2, r0
   10fd8:	mov	r0, #1
   10fdc:	bl	114c0 <abort@plt+0xa98>
   10fe0:	add	r0, sp, #8
   10fe4:	bl	10a10 <uuid_create@plt>
   10fe8:	ldr	r3, [sp]
   10fec:	cmp	r0, #0
   10ff0:	bne	111f0 <abort@plt+0x7c8>
   10ff4:	cmp	r7, #1
   10ff8:	bne	1127c <abort@plt+0x854>
   10ffc:	ldr	r5, [r8, r3, lsl #2]
   11000:	ldr	r1, [pc, #732]	; 112e4 <abort@plt+0x8bc>
   11004:	mov	r0, r5
   11008:	bl	108e4 <strcmp@plt>
   1100c:	subs	r6, r0, #0
   11010:	bne	1107c <abort@plt+0x654>
   11014:	cmp	r4, #0
   11018:	ldr	r3, [pc, #712]	; 112e8 <abort@plt+0x8c0>
   1101c:	beq	11110 <abort@plt+0x6e8>
   11020:	cmp	r4, #1
   11024:	beq	1119c <abort@plt+0x774>
   11028:	add	r0, sp, #84	; 0x54
   1102c:	ldr	r3, [r3]
   11030:	mov	r2, r7
   11034:	mov	r1, #39	; 0x27
   11038:	bl	10950 <fread@plt>
   1103c:	cmp	r0, #1
   11040:	mov	r4, r0
   11044:	bne	1124c <abort@plt+0x824>
   11048:	add	r2, sp, #84	; 0x54
   1104c:	mov	r3, #39	; 0x27
   11050:	mov	r1, #2
   11054:	ldr	r0, [sp, #8]
   11058:	strb	r6, [sp, #123]	; 0x7b
   1105c:	bl	109ec <uuid_import@plt>
   11060:	cmp	r0, #0
   11064:	beq	110b0 <abort@plt+0x688>
   11068:	bl	1092c <uuid_error@plt>
   1106c:	ldr	r1, [pc, #620]	; 112e0 <abort@plt+0x8b8>
   11070:	mov	r2, r0
   11074:	mov	r0, r4
   11078:	bl	114c0 <abort@plt+0xa98>
   1107c:	cmp	r4, #0
   11080:	beq	1125c <abort@plt+0x834>
   11084:	cmp	r4, #1
   11088:	mov	r0, r5
   1108c:	beq	11178 <abort@plt+0x750>
   11090:	bl	109a4 <strlen@plt>
   11094:	mov	r2, r5
   11098:	mov	r1, #2
   1109c:	mov	r3, r0
   110a0:	ldr	r0, [sp, #8]
   110a4:	bl	109ec <uuid_import@plt>
   110a8:	cmp	r0, #0
   110ac:	bne	11268 <abort@plt+0x840>
   110b0:	mov	ip, #0
   110b4:	mov	r3, ip
   110b8:	add	r2, sp, #20
   110bc:	mov	r1, #3
   110c0:	ldr	r0, [sp, #8]
   110c4:	str	ip, [sp, #20]
   110c8:	bl	10914 <uuid_export@plt>
   110cc:	cmp	r0, #0
   110d0:	bne	111dc <abort@plt+0x7b4>
   110d4:	ldr	r3, [pc, #456]	; 112a4 <abort@plt+0x87c>
   110d8:	ldr	r0, [sp, #20]
   110dc:	ldr	r1, [r3]
   110e0:	bl	10a1c <fputs@plt>
   110e4:	ldr	r0, [sp, #20]
   110e8:	bl	10908 <free@plt>
   110ec:	ldr	r0, [sp, #8]
   110f0:	bl	109f8 <uuid_destroy@plt>
   110f4:	cmp	r0, #0
   110f8:	beq	10f38 <abort@plt+0x510>
   110fc:	bl	1092c <uuid_error@plt>
   11100:	ldr	r1, [pc, #484]	; 112ec <abort@plt+0x8c4>
   11104:	mov	r2, r0
   11108:	mov	r0, #1
   1110c:	bl	114c0 <abort@plt+0xa98>
   11110:	add	r0, sp, #28
   11114:	ldr	r3, [r3]
   11118:	mov	r2, r7
   1111c:	mov	r1, #16
   11120:	bl	10950 <fread@plt>
   11124:	cmp	r0, #1
   11128:	mov	r5, r0
   1112c:	bne	1121c <abort@plt+0x7f4>
   11130:	add	r2, sp, #28
   11134:	mov	r1, r4
   11138:	mov	r3, #16
   1113c:	ldr	r0, [sp, #8]
   11140:	bl	109ec <uuid_import@plt>
   11144:	cmp	r0, #0
   11148:	beq	110b0 <abort@plt+0x688>
   1114c:	bl	1092c <uuid_error@plt>
   11150:	ldr	r1, [pc, #392]	; 112e0 <abort@plt+0x8b8>
   11154:	mov	r2, r0
   11158:	mov	r0, r5
   1115c:	bl	114c0 <abort@plt+0xa98>
   11160:	mov	r0, #0
   11164:	bl	11418 <abort@plt+0x9f0>
   11168:	ldr	r3, [pc, #384]	; 112f0 <abort@plt+0x8c8>
   1116c:	ldr	r0, [pc, #384]	; 112f4 <abort@plt+0x8cc>
   11170:	ldr	r1, [r3]
   11174:	bl	11418 <abort@plt+0x9f0>
   11178:	bl	109a4 <strlen@plt>
   1117c:	mov	r2, r5
   11180:	mov	r1, r4
   11184:	mov	r3, r0
   11188:	ldr	r0, [sp, #8]
   1118c:	bl	109ec <uuid_import@plt>
   11190:	cmp	r0, #0
   11194:	beq	110b0 <abort@plt+0x688>
   11198:	b	11068 <abort@plt+0x640>
   1119c:	add	r0, sp, #44	; 0x2c
   111a0:	ldr	r3, [r3]
   111a4:	mov	r2, r4
   111a8:	mov	r1, #36	; 0x24
   111ac:	bl	10950 <fread@plt>
   111b0:	cmp	r0, #1
   111b4:	bne	1120c <abort@plt+0x7e4>
   111b8:	add	r2, sp, #44	; 0x2c
   111bc:	mov	r3, #36	; 0x24
   111c0:	mov	r1, r4
   111c4:	ldr	r0, [sp, #8]
   111c8:	strb	r6, [sp, #80]	; 0x50
   111cc:	bl	109ec <uuid_import@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	110b0 <abort@plt+0x688>
   111d8:	b	11068 <abort@plt+0x640>
   111dc:	bl	1092c <uuid_error@plt>
   111e0:	ldr	r1, [pc, #244]	; 112dc <abort@plt+0x8b4>
   111e4:	mov	r2, r0
   111e8:	mov	r0, #1
   111ec:	bl	114c0 <abort@plt+0xa98>
   111f0:	bl	1092c <uuid_error@plt>
   111f4:	ldr	r1, [pc, #252]	; 112f8 <abort@plt+0x8d0>
   111f8:	mov	r2, r0
   111fc:	mov	r0, #1
   11200:	bl	114c0 <abort@plt+0xa98>
   11204:	ldr	r0, [pc, #240]	; 112fc <abort@plt+0x8d4>
   11208:	bl	11418 <abort@plt+0x9f0>
   1120c:	mov	r0, r4
   11210:	mov	r2, #36	; 0x24
   11214:	ldr	r1, [pc, #228]	; 11300 <abort@plt+0x8d8>
   11218:	bl	114c0 <abort@plt+0xa98>
   1121c:	mov	r0, r7
   11220:	mov	r2, #16
   11224:	ldr	r1, [pc, #216]	; 11304 <abort@plt+0x8dc>
   11228:	bl	114c0 <abort@plt+0xa98>
   1122c:	bl	10920 <__stack_chk_fail@plt>
   11230:	mov	r2, r4
   11234:	ldr	r1, [pc, #204]	; 11308 <abort@plt+0x8e0>
   11238:	mov	r0, #1
   1123c:	bl	114c0 <abort@plt+0xa98>
   11240:	mov	r0, r7
   11244:	ldr	r1, [pc, #192]	; 1130c <abort@plt+0x8e4>
   11248:	bl	114c0 <abort@plt+0xa98>
   1124c:	mov	r0, r7
   11250:	mov	r2, #39	; 0x27
   11254:	ldr	r1, [pc, #180]	; 11310 <abort@plt+0x8e8>
   11258:	bl	114c0 <abort@plt+0xa98>
   1125c:	mov	r0, r7
   11260:	ldr	r1, [pc, #172]	; 11314 <abort@plt+0x8ec>
   11264:	bl	114c0 <abort@plt+0xa98>
   11268:	bl	1092c <uuid_error@plt>
   1126c:	ldr	r1, [pc, #108]	; 112e0 <abort@plt+0x8b8>
   11270:	mov	r2, r0
   11274:	mov	r0, r7
   11278:	bl	114c0 <abort@plt+0xa98>
   1127c:	ldr	r0, [pc, #148]	; 11318 <abort@plt+0x8f0>
   11280:	bl	11418 <abort@plt+0x9f0>
   11284:	ldr	r1, [pc, #144]	; 1131c <abort@plt+0x8f4>
   11288:	mov	r0, #1
   1128c:	bl	114c0 <abort@plt+0xa98>
   11290:	ldr	r0, [pc, #136]	; 11320 <abort@plt+0x8f8>
   11294:	bl	11418 <abort@plt+0x9f0>
   11298:	ldr	r0, [pc, #132]	; 11324 <abort@plt+0x8fc>
   1129c:	bl	11418 <abort@plt+0x9f0>
   112a0:	strdeq	r1, [r2], -r8
   112a4:	andeq	r2, r2, r4, lsr #1
   112a8:	andeq	r1, r1, r4, asr r7
   112ac:	andeq	r2, r2, r8, lsr #1
   112b0:	strdeq	r1, [r1], -r0
   112b4:	strdeq	r1, [r1], -r4
   112b8:	andeq	r1, r1, r4, ror #12
   112bc:	andeq	r1, r1, r4, lsl #13
   112c0:	andeq	r1, r1, r8, lsl #13
   112c4:	andeq	r1, r1, ip, lsl #13
   112c8:	andeq	r2, r2, r8, lsl #1
   112cc:	andeq	r1, r1, r8, lsl #18
   112d0:	strdeq	r1, [r1], -r8
   112d4:	andeq	r1, r1, r4, ror #17
   112d8:	andeq	r1, r1, r8, ror #17
   112dc:	muleq	r1, r0, r8
   112e0:	ldrdeq	r1, [r1], -r0
   112e4:	muleq	r1, r0, r7
   112e8:	andeq	r2, r2, r0, lsr #1
   112ec:	andeq	r1, r1, r0, lsr #17
   112f0:	muleq	r2, r0, r0
   112f4:	andeq	r1, r1, r0, asr #14
   112f8:	andeq	r1, r1, r4, ror #14
   112fc:	andeq	r1, r1, r0, lsr #14
   11300:	andeq	r1, r1, r0, ror #15
   11304:	muleq	r1, r4, r7
   11308:	muleq	r1, r0, r6
   1130c:			; <UNDEFINED> instruction: 0x000118b4
   11310:	andeq	r1, r1, ip, lsl r8
   11314:	andeq	r1, r1, r8, asr r8
   11318:	andeq	r1, r1, r4, ror r7
   1131c:	andeq	r1, r1, r8, asr #13
   11320:	andeq	r1, r1, r0, lsl #14
   11324:	andeq	r1, r1, r0, asr #12
   11328:	mov	fp, #0
   1132c:	mov	lr, #0
   11330:	pop	{r1}		; (ldr r1, [sp], #4)
   11334:	mov	r2, sp
   11338:	push	{r2}		; (str r2, [sp, #-4]!)
   1133c:	push	{r0}		; (str r0, [sp, #-4]!)
   11340:	ldr	ip, [pc, #16]	; 11358 <abort@plt+0x930>
   11344:	push	{ip}		; (str ip, [sp, #-4]!)
   11348:	ldr	r0, [pc, #12]	; 1135c <abort@plt+0x934>
   1134c:	ldr	r3, [pc, #12]	; 11360 <abort@plt+0x938>
   11350:	bl	1095c <__libc_start_main@plt>
   11354:	bl	10a28 <abort@plt>
   11358:	muleq	r1, r0, r5
   1135c:	andeq	r0, r1, r4, lsr sl
   11360:	andeq	r1, r1, r0, lsr r5
   11364:	ldr	r3, [pc, #20]	; 11380 <abort@plt+0x958>
   11368:	ldr	r2, [pc, #20]	; 11384 <abort@plt+0x95c>
   1136c:	add	r3, pc, r3
   11370:	ldr	r2, [r3, r2]
   11374:	cmp	r2, #0
   11378:	bxeq	lr
   1137c:	b	1098c <__gmon_start__@plt>
   11380:	andeq	r0, r1, ip, lsl #25
   11384:	andeq	r0, r0, ip, ror r0
   11388:	ldr	r0, [pc, #24]	; 113a8 <abort@plt+0x980>
   1138c:	ldr	r3, [pc, #24]	; 113ac <abort@plt+0x984>
   11390:	cmp	r3, r0
   11394:	bxeq	lr
   11398:	ldr	r3, [pc, #16]	; 113b0 <abort@plt+0x988>
   1139c:	cmp	r3, #0
   113a0:	bxeq	lr
   113a4:	bx	r3
   113a8:	andeq	r2, r2, r8, lsl #1
   113ac:	andeq	r2, r2, r8, lsl #1
   113b0:	andeq	r0, r0, r0
   113b4:	ldr	r0, [pc, #36]	; 113e0 <abort@plt+0x9b8>
   113b8:	ldr	r1, [pc, #36]	; 113e4 <abort@plt+0x9bc>
   113bc:	sub	r1, r1, r0
   113c0:	asr	r1, r1, #2
   113c4:	add	r1, r1, r1, lsr #31
   113c8:	asrs	r1, r1, #1
   113cc:	bxeq	lr
   113d0:	ldr	r3, [pc, #16]	; 113e8 <abort@plt+0x9c0>
   113d4:	cmp	r3, #0
   113d8:	bxeq	lr
   113dc:	bx	r3
   113e0:	andeq	r2, r2, r8, lsl #1
   113e4:	andeq	r2, r2, r8, lsl #1
   113e8:	andeq	r0, r0, r0
   113ec:	push	{r4, lr}
   113f0:	ldr	r4, [pc, #24]	; 11410 <abort@plt+0x9e8>
   113f4:	ldrb	r3, [r4]
   113f8:	cmp	r3, #0
   113fc:	popne	{r4, pc}
   11400:	bl	11388 <abort@plt+0x960>
   11404:	mov	r3, #1
   11408:	strb	r3, [r4]
   1140c:	pop	{r4, pc}
   11410:	andeq	r2, r2, ip, lsr #1
   11414:	b	113b4 <abort@plt+0x98c>
   11418:	push	{r0, r1, r2, r3}
   1141c:	ldr	r2, [pc, #136]	; 114ac <abort@plt+0xa84>
   11420:	push	{lr}		; (str lr, [sp, #-4]!)
   11424:	sub	sp, sp, #12
   11428:	ldr	r2, [r2]
   1142c:	ldr	r5, [sp, #16]
   11430:	add	r3, sp, #20
   11434:	cmp	r5, #0
   11438:	ldr	r4, [pc, #112]	; 114b0 <abort@plt+0xa88>
   1143c:	str	r2, [sp, #4]
   11440:	str	r3, [sp]
   11444:	beq	1147c <abort@plt+0xa54>
   11448:	mov	r2, #12
   1144c:	mov	r1, #1
   11450:	ldr	r3, [r4]
   11454:	ldr	r0, [pc, #88]	; 114b4 <abort@plt+0xa8c>
   11458:	bl	10944 <fwrite@plt>
   1145c:	mov	r1, #1
   11460:	mov	r2, r5
   11464:	ldr	r0, [r4]
   11468:	ldr	r3, [sp]
   1146c:	bl	10974 <__vfprintf_chk@plt>
   11470:	ldr	r1, [r4]
   11474:	mov	r0, #10
   11478:	bl	109e0 <fputc@plt>
   1147c:	ldr	r3, [r4]
   11480:	mov	r2, #89	; 0x59
   11484:	mov	r1, #1
   11488:	ldr	r0, [pc, #40]	; 114b8 <abort@plt+0xa90>
   1148c:	bl	10944 <fwrite@plt>
   11490:	ldr	r3, [r4]
   11494:	mov	r2, #48	; 0x30
   11498:	mov	r1, #1
   1149c:	ldr	r0, [pc, #24]	; 114bc <abort@plt+0xa94>
   114a0:	bl	10944 <fwrite@plt>
   114a4:	mov	r0, #1
   114a8:	bl	10998 <exit@plt>
   114ac:	strdeq	r1, [r2], -r8
   114b0:	muleq	r2, r8, r0
   114b4:	andeq	r1, r1, r0, lsr #11
   114b8:			; <UNDEFINED> instruction: 0x000115b0
   114bc:	andeq	r1, r1, ip, lsl #12
   114c0:	push	{r1, r2, r3}
   114c4:	mov	r2, #12
   114c8:	ldr	r3, [pc, #84]	; 11524 <abort@plt+0xafc>
   114cc:	push	{lr}		; (str lr, [sp, #-4]!)
   114d0:	sub	sp, sp, #8
   114d4:	ldr	r4, [pc, #76]	; 11528 <abort@plt+0xb00>
   114d8:	ldr	r0, [r3]
   114dc:	ldr	r5, [sp, #12]
   114e0:	add	ip, sp, #16
   114e4:	ldr	r3, [r4]
   114e8:	mov	r1, #1
   114ec:	str	r0, [sp, #4]
   114f0:	ldr	r0, [pc, #52]	; 1152c <abort@plt+0xb04>
   114f4:	str	ip, [sp]
   114f8:	bl	10944 <fwrite@plt>
   114fc:	mov	r2, r5
   11500:	ldr	r3, [sp]
   11504:	mov	r1, #1
   11508:	ldr	r0, [r4]
   1150c:	bl	10974 <__vfprintf_chk@plt>
   11510:	ldr	r1, [r4]
   11514:	mov	r0, #10
   11518:	bl	109e0 <fputc@plt>
   1151c:	mov	r0, #1
   11520:	bl	10998 <exit@plt>
   11524:	strdeq	r1, [r2], -r8
   11528:	muleq	r2, r8, r0
   1152c:	andeq	r1, r1, r0, lsr #11
   11530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11534:	mov	r7, r0
   11538:	ldr	r6, [pc, #72]	; 11588 <abort@plt+0xb60>
   1153c:	ldr	r5, [pc, #72]	; 1158c <abort@plt+0xb64>
   11540:	add	r6, pc, r6
   11544:	add	r5, pc, r5
   11548:	sub	r6, r6, r5
   1154c:	mov	r8, r1
   11550:	mov	r9, r2
   11554:	bl	108c4 <_init@@Base>
   11558:	asrs	r6, r6, #2
   1155c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11560:	mov	r4, #0
   11564:	add	r4, r4, #1
   11568:	ldr	r3, [r5], #4
   1156c:	mov	r2, r9
   11570:	mov	r1, r8
   11574:	mov	r0, r7
   11578:	blx	r3
   1157c:	cmp	r6, r4
   11580:	bne	11564 <abort@plt+0xb3c>
   11584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11588:	andeq	r0, r1, ip, lsr #19
   1158c:	andeq	r0, r1, r4, lsr #19
   11590:	bx	lr

Disassembly of section .fini:

00011594 <_fini@@Base>:
   11594:	push	{r3, lr}
   11598:	pop	{r3, pc}
