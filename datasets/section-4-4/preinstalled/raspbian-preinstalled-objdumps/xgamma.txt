
raspbian-preinstalled/xgamma:     file format elf32-littlearm


Disassembly of section .init:

0001076c <.init>:
   1076c:	push	{r3, lr}
   10770:	bl	11044 <abort@plt+0x7e0>
   10774:	pop	{r3, pc}

Disassembly of section .plt:

00010778 <strcmp@plt-0x14>:
   10778:	push	{lr}		; (str lr, [sp, #-4]!)
   1077c:	ldr	lr, [pc, #4]	; 10788 <strcmp@plt-0x4>
   10780:	add	lr, pc, lr
   10784:	ldr	pc, [lr, #8]!
   10788:	andeq	r1, r1, r8, ror r8

0001078c <strcmp@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2168]!	; 0x878

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2160]!	; 0x870

000107a4 <XF86VidModeGetGamma@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2152]!	; 0x868

000107b0 <XF86VidModeSetGamma@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2144]!	; 0x860

000107bc <XF86VidModeQueryVersion@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2136]!	; 0x858

000107c8 <fwrite@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2128]!	; 0x850

000107d4 <puts@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2120]!	; 0x848

000107e0 <__libc_start_main@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2112]!	; 0x840

000107ec <XOpenDisplay@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2104]!	; 0x838

000107f8 <__gmon_start__@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2096]!	; 0x830

00010804 <exit@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2088]!	; 0x828

00010810 <strlen@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2080]!	; 0x820

0001081c <XDisplayName@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2072]!	; 0x818

00010828 <strtod@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2064]!	; 0x810

00010834 <__fprintf_chk@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2056]!	; 0x808

00010840 <XF86VidModeQueryExtension@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2048]!	; 0x800

0001084c <XCloseDisplay@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2040]!	; 0x7f8

00010858 <strncmp@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2032]!	; 0x7f0

00010864 <abort@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2024]!	; 0x7e8

Disassembly of section .text:

00010870 <.text>:
   10870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10874:	vpush	{d8-d10}
   10878:	ldr	r3, [pc, #984]	; 10c58 <abort@plt+0x3f4>
   1087c:	ldr	fp, [pc, #984]	; 10c5c <abort@plt+0x3f8>
   10880:	cmp	r0, #1
   10884:	sub	sp, sp, #60	; 0x3c
   10888:	ldr	r9, [r1]
   1088c:	ldr	r3, [r3]
   10890:	str	r9, [fp]
   10894:	str	r3, [sp, #52]	; 0x34
   10898:	ble	10c10 <abort@plt+0x3ac>
   1089c:	ldr	r4, [r1, #4]
   108a0:	mov	r5, r1
   108a4:	ldrb	r3, [r4]
   108a8:	cmp	r3, #45	; 0x2d
   108ac:	bne	10930 <abort@plt+0xcc>
   108b0:	vldr	s16, [pc, #920]	; 10c50 <abort@plt+0x3ec>
   108b4:	vldr	d10, [pc, #908]	; 10c48 <abort@plt+0x3e4>
   108b8:	ldr	r7, [pc, #928]	; 10c60 <abort@plt+0x3fc>
   108bc:	mov	r6, r0
   108c0:	vmov.f32	s19, s16
   108c4:	vmov.f32	s18, s16
   108c8:	vmov.f32	s17, s16
   108cc:	mov	sl, #1
   108d0:	mov	r8, #0
   108d4:	mvn	r3, #0
   108d8:	str	r8, [sp, #24]
   108dc:	str	r3, [sp, #28]
   108e0:	str	r9, [sp, #32]
   108e4:	mov	r2, #1
   108e8:	mov	r1, r4
   108ec:	mov	r0, r7
   108f0:	bl	11160 <abort@plt+0x8fc>
   108f4:	cmp	r0, #0
   108f8:	beq	10954 <abort@plt+0xf0>
   108fc:	add	sl, sl, #1
   10900:	cmp	r6, sl
   10904:	ble	109b4 <abort@plt+0x150>
   10908:	ldr	r3, [r5, sl, lsl #2]
   1090c:	str	r3, [sp, #24]
   10910:	add	sl, sl, #1
   10914:	cmp	r6, sl
   10918:	ble	10bbc <abort@plt+0x358>
   1091c:	ldr	r4, [r5, sl, lsl #2]
   10920:	ldrb	r2, [r4]
   10924:	cmp	r2, #45	; 0x2d
   10928:	beq	108e4 <abort@plt+0x80>
   1092c:	ldr	r9, [sp, #32]
   10930:	ldr	r2, [pc, #948]	; 10cec <abort@plt+0x488>
   10934:	str	r4, [sp]
   10938:	mov	r3, r9
   1093c:	ldr	r0, [r2]
   10940:	mov	r1, #1
   10944:	ldr	r2, [pc, #792]	; 10c64 <abort@plt+0x400>
   10948:	bl	10834 <__fprintf_chk@plt>
   1094c:	mov	r0, #0
   10950:	bl	110f8 <abort@plt+0x894>
   10954:	mov	r2, #1
   10958:	mov	r1, r4
   1095c:	ldr	r0, [pc, #772]	; 10c68 <abort@plt+0x404>
   10960:	bl	11160 <abort@plt+0x8fc>
   10964:	subs	r9, r0, #0
   10968:	bne	10a68 <abort@plt+0x204>
   1096c:	mov	r2, #1
   10970:	mov	r1, r4
   10974:	ldr	r0, [pc, #752]	; 10c6c <abort@plt+0x408>
   10978:	bl	11160 <abort@plt+0x8fc>
   1097c:	subs	r3, r0, #0
   10980:	str	r3, [sp, #36]	; 0x24
   10984:	bne	10dc8 <abort@plt+0x564>
   10988:	mov	r2, #1
   1098c:	mov	r1, r4
   10990:	ldr	r0, [pc, #728]	; 10c70 <abort@plt+0x40c>
   10994:	bl	11160 <abort@plt+0x8fc>
   10998:	subs	r9, r0, #0
   1099c:	beq	109bc <abort@plt+0x158>
   109a0:	add	sl, sl, #1
   109a4:	cmp	r6, sl
   109a8:	bgt	10adc <abort@plt+0x278>
   109ac:	ldr	r0, [pc, #704]	; 10c74 <abort@plt+0x410>
   109b0:	bl	110f8 <abort@plt+0x894>
   109b4:	ldr	r0, [pc, #700]	; 10c78 <abort@plt+0x414>
   109b8:	bl	110f8 <abort@plt+0x894>
   109bc:	mov	r2, #2
   109c0:	mov	r1, r4
   109c4:	ldr	r0, [pc, #688]	; 10c7c <abort@plt+0x418>
   109c8:	bl	11160 <abort@plt+0x8fc>
   109cc:	subs	r3, r0, #0
   109d0:	beq	10a70 <abort@plt+0x20c>
   109d4:	add	sl, sl, #1
   109d8:	cmp	r6, sl
   109dc:	ble	10e74 <abort@plt+0x610>
   109e0:	vcmpe.f32	s18, #0.0
   109e4:	vmrs	APSR_nzcv, fpscr
   109e8:	bge	10dd8 <abort@plt+0x574>
   109ec:	vcmpe.f32	s19, #0.0
   109f0:	vmrs	APSR_nzcv, fpscr
   109f4:	bge	10dd8 <abort@plt+0x574>
   109f8:	vcmpe.f32	s16, #0.0
   109fc:	vmrs	APSR_nzcv, fpscr
   10a00:	bge	10dd8 <abort@plt+0x574>
   10a04:	mov	r1, r9
   10a08:	ldr	r0, [r5, sl, lsl #2]
   10a0c:	bl	10828 <strtod@plt>
   10a10:	vcvt.f32.f64	s17, d0
   10a14:	vcvt.f64.f32	d7, s17
   10a18:	vcmpe.f64	d7, d10
   10a1c:	vmrs	APSR_nzcv, fpscr
   10a20:	bmi	10a34 <abort@plt+0x1d0>
   10a24:	vldr	s15, [pc, #552]	; 10c54 <abort@plt+0x3f0>
   10a28:	vcmpe.f32	s17, s15
   10a2c:	vmrs	APSR_nzcv, fpscr
   10a30:	ble	10910 <abort@plt+0xac>
   10a34:	ldr	r0, [pc, #580]	; 10c80 <abort@plt+0x41c>
   10a38:	ldr	r1, [pc, #580]	; 10c84 <abort@plt+0x420>
   10a3c:	ldr	r3, [pc, #680]	; 10cec <abort@plt+0x488>
   10a40:	ldr	r5, [pc, #576]	; 10c88 <abort@plt+0x424>
   10a44:	mov	r4, #0
   10a48:	strd	r0, [sp]
   10a4c:	strd	r4, [sp, #8]
   10a50:	ldr	r2, [pc, #564]	; 10c8c <abort@plt+0x428>
   10a54:	ldr	r0, [r3]
   10a58:	mov	r1, #1
   10a5c:	bl	10834 <__fprintf_chk@plt>
   10a60:	mov	r0, #1
   10a64:	bl	10804 <exit@plt>
   10a68:	mov	r8, #1
   10a6c:	b	10910 <abort@plt+0xac>
   10a70:	mov	r2, #2
   10a74:	mov	r1, r4
   10a78:	ldr	r0, [pc, #528]	; 10c90 <abort@plt+0x42c>
   10a7c:	str	r3, [sp, #36]	; 0x24
   10a80:	bl	11160 <abort@plt+0x8fc>
   10a84:	subs	r9, r0, #0
   10a88:	beq	10af4 <abort@plt+0x290>
   10a8c:	add	sl, sl, #1
   10a90:	cmp	r6, sl
   10a94:	ldr	r3, [sp, #36]	; 0x24
   10a98:	ble	10ef8 <abort@plt+0x694>
   10a9c:	vcmpe.f32	s17, #0.0
   10aa0:	vmrs	APSR_nzcv, fpscr
   10aa4:	bge	10ef0 <abort@plt+0x68c>
   10aa8:	mov	r1, r3
   10aac:	ldr	r0, [r5, sl, lsl #2]
   10ab0:	bl	10828 <strtod@plt>
   10ab4:	vcvt.f32.f64	s18, d0
   10ab8:	vcvt.f64.f32	d7, s18
   10abc:	vcmpe.f64	d7, d10
   10ac0:	vmrs	APSR_nzcv, fpscr
   10ac4:	bmi	10a34 <abort@plt+0x1d0>
   10ac8:	vldr	s15, [pc, #388]	; 10c54 <abort@plt+0x3f0>
   10acc:	vcmpe.f32	s18, s15
   10ad0:	vmrs	APSR_nzcv, fpscr
   10ad4:	bgt	10a34 <abort@plt+0x1d0>
   10ad8:	b	10910 <abort@plt+0xac>
   10adc:	ldr	r1, [sp, #36]	; 0x24
   10ae0:	mov	r2, #10
   10ae4:	ldr	r0, [r5, sl, lsl #2]
   10ae8:	bl	10798 <strtol@plt>
   10aec:	str	r0, [sp, #28]
   10af0:	b	10910 <abort@plt+0xac>
   10af4:	mov	r2, #2
   10af8:	mov	r1, r4
   10afc:	ldr	r0, [pc, #400]	; 10c94 <abort@plt+0x430>
   10b00:	bl	11160 <abort@plt+0x8fc>
   10b04:	cmp	r0, #0
   10b08:	bne	10b70 <abort@plt+0x30c>
   10b0c:	mov	r2, #2
   10b10:	mov	r1, r4
   10b14:	ldr	r0, [pc, #380]	; 10c98 <abort@plt+0x434>
   10b18:	bl	11160 <abort@plt+0x8fc>
   10b1c:	cmp	r0, #0
   10b20:	beq	10f74 <abort@plt+0x710>
   10b24:	add	sl, sl, #1
   10b28:	cmp	r6, sl
   10b2c:	ble	10f6c <abort@plt+0x708>
   10b30:	vcmpe.f32	s17, #0.0
   10b34:	vmrs	APSR_nzcv, fpscr
   10b38:	bge	10f64 <abort@plt+0x700>
   10b3c:	mov	r1, #0
   10b40:	ldr	r0, [r5, sl, lsl #2]
   10b44:	bl	10828 <strtod@plt>
   10b48:	vcvt.f32.f64	s16, d0
   10b4c:	vcvt.f64.f32	d7, s16
   10b50:	vcmpe.f64	d7, d10
   10b54:	vmrs	APSR_nzcv, fpscr
   10b58:	bmi	10a34 <abort@plt+0x1d0>
   10b5c:	vldr	s15, [pc, #240]	; 10c54 <abort@plt+0x3f0>
   10b60:	vcmpe.f32	s16, s15
   10b64:	vmrs	APSR_nzcv, fpscr
   10b68:	bgt	10a34 <abort@plt+0x1d0>
   10b6c:	b	10910 <abort@plt+0xac>
   10b70:	add	sl, sl, #1
   10b74:	cmp	r6, sl
   10b78:	ble	10f9c <abort@plt+0x738>
   10b7c:	vcmpe.f32	s17, #0.0
   10b80:	vmrs	APSR_nzcv, fpscr
   10b84:	bge	10f94 <abort@plt+0x730>
   10b88:	mov	r1, r9
   10b8c:	ldr	r0, [r5, sl, lsl #2]
   10b90:	bl	10828 <strtod@plt>
   10b94:	vcvt.f32.f64	s19, d0
   10b98:	vcvt.f64.f32	d7, s19
   10b9c:	vcmpe.f64	d7, d10
   10ba0:	vmrs	APSR_nzcv, fpscr
   10ba4:	bmi	10a34 <abort@plt+0x1d0>
   10ba8:	vldr	s15, [pc, #164]	; 10c54 <abort@plt+0x3f0>
   10bac:	vcmpe.f32	s19, s15
   10bb0:	vmrs	APSR_nzcv, fpscr
   10bb4:	bgt	10a34 <abort@plt+0x1d0>
   10bb8:	b	10910 <abort@plt+0xac>
   10bbc:	ldr	r0, [sp, #24]
   10bc0:	bl	107ec <XOpenDisplay@plt>
   10bc4:	subs	r4, r0, #0
   10bc8:	beq	10de0 <abort@plt+0x57c>
   10bcc:	ldr	r3, [sp, #28]
   10bd0:	cmn	r3, #1
   10bd4:	beq	11000 <abort@plt+0x79c>
   10bd8:	ldr	r2, [pc, #188]	; 10c9c <abort@plt+0x438>
   10bdc:	mov	r0, r4
   10be0:	add	r1, r2, #4
   10be4:	bl	107bc <XF86VidModeQueryVersion@plt>
   10be8:	cmp	r0, #0
   10bec:	bne	10cf4 <abort@plt+0x490>
   10bf0:	ldr	r3, [pc, #244]	; 10cec <abort@plt+0x488>
   10bf4:	mov	r2, #40	; 0x28
   10bf8:	mov	r1, #1
   10bfc:	ldr	r3, [r3]
   10c00:	ldr	r0, [pc, #152]	; 10ca0 <abort@plt+0x43c>
   10c04:	bl	107c8 <fwrite@plt>
   10c08:	mov	r0, #2
   10c0c:	bl	10804 <exit@plt>
   10c10:	mov	r0, #0
   10c14:	bl	107ec <XOpenDisplay@plt>
   10c18:	subs	r3, r0, #0
   10c1c:	str	r3, [sp, #24]
   10c20:	beq	10de0 <abort@plt+0x57c>
   10c24:	vldr	s17, [pc, #36]	; 10c50 <abort@plt+0x3ec>
   10c28:	mov	r8, #0
   10c2c:	vmov.f32	s18, s17
   10c30:	vmov.f32	s19, s17
   10c34:	vmov.f32	s16, s17
   10c38:	ldr	r4, [sp, #24]
   10c3c:	ldr	r3, [r4, #132]	; 0x84
   10c40:	str	r3, [sp, #28]
   10c44:	b	10bd8 <abort@plt+0x374>
   10c48:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   10c4c:	svccc	0x00b99999
   10c50:	svclt	0x00800000
   10c54:			; <UNDEFINED> instruction: 0x41200000
   10c58:	strdeq	r1, [r2], -r8
   10c5c:	andeq	r2, r2, r0, ror r0
   10c60:	andeq	r1, r1, r0, lsl #8
   10c64:	andeq	r1, r1, r8, ror #11
   10c68:	andeq	r1, r1, ip, lsr #8
   10c6c:	andeq	r1, r1, r4, lsr r4
   10c70:	andeq	r1, r1, r0, asr r4
   10c74:	andeq	r1, r1, r8, asr r4
   10c78:	andeq	r1, r1, ip, lsl #8
   10c7c:	andeq	r1, r1, r8, ror r4
   10c80:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   10c84:	svccc	0x00b99999
   10c88:	eormi	r0, r4, r0
   10c8c:	ldrdeq	r1, [r1], -r4
   10c90:	andeq	r1, r1, r4, lsl #10
   10c94:	andeq	r1, r1, r0, asr r5
   10c98:	andeq	r1, r1, ip, asr #9
   10c9c:	andeq	r2, r2, r4, ror r0
   10ca0:	andeq	r1, r1, ip, lsr #12
   10ca4:	andeq	r2, r2, ip, ror r0
   10ca8:	andeq	r1, r1, ip, lsr r7
   10cac:	andeq	r1, r1, r0, asr #8
   10cb0:	muleq	r1, ip, r4
   10cb4:	andeq	r1, r1, r8, lsl #12
   10cb8:	andeq	r1, r1, r8, asr r6
   10cbc:	andeq	r1, r1, r8, lsl #13
   10cc0:	andeq	r1, r1, ip, asr #13
   10cc4:	andeq	r1, r1, r0, lsl #9
   10cc8:	andeq	r1, r1, ip, lsr #10
   10ccc:	andeq	r1, r1, ip, lsl #10
   10cd0:	andeq	r1, r1, r4, lsl r7
   10cd4:			; <UNDEFINED> instruction: 0x000115bc
   10cd8:	muleq	r1, ip, r5
   10cdc:	andeq	r1, r1, r0, ror #11
   10ce0:	andeq	r1, r1, r8, ror r5
   10ce4:	andeq	r1, r1, r8, asr r5
   10ce8:	strdeq	r1, [r1], -r0
   10cec:	andeq	r2, r2, r8, rrx
   10cf0:	andeq	r1, r1, ip, asr r7
   10cf4:	ldr	r2, [pc, #-88]	; 10ca4 <abort@plt+0x440>
   10cf8:	mov	r0, r4
   10cfc:	add	r1, r2, #4
   10d00:	bl	10840 <XF86VidModeQueryExtension@plt>
   10d04:	cmp	r0, #0
   10d08:	beq	10e14 <abort@plt+0x5b0>
   10d0c:	ldr	r3, [fp, #8]
   10d10:	cmp	r3, #1
   10d14:	ble	10e34 <abort@plt+0x5d0>
   10d18:	cmp	r3, #2
   10d1c:	bne	10d2c <abort@plt+0x4c8>
   10d20:	ldr	r2, [fp, #4]
   10d24:	cmp	r2, #0
   10d28:	blt	10e34 <abort@plt+0x5d0>
   10d2c:	add	r2, sp, #40	; 0x28
   10d30:	ldr	r1, [sp, #28]
   10d34:	mov	r0, r4
   10d38:	bl	107a4 <XF86VidModeGetGamma@plt>
   10d3c:	cmp	r0, #0
   10d40:	beq	10e7c <abort@plt+0x618>
   10d44:	cmp	r8, #0
   10d48:	beq	10f28 <abort@plt+0x6c4>
   10d4c:	vcmpe.f32	s17, #0.0
   10d50:	vmrs	APSR_nzcv, fpscr
   10d54:	bge	10ea4 <abort@plt+0x640>
   10d58:	vcmpe.f32	s18, #0.0
   10d5c:	vmrs	APSR_nzcv, fpscr
   10d60:	vcmpe.f32	s19, #0.0
   10d64:	blt	10f00 <abort@plt+0x69c>
   10d68:	vmrs	APSR_nzcv, fpscr
   10d6c:	vstr	s18, [sp, #40]	; 0x28
   10d70:	bge	10f20 <abort@plt+0x6bc>
   10d74:	vcmpe.f32	s16, #0.0
   10d78:	vmrs	APSR_nzcv, fpscr
   10d7c:	blt	10d84 <abort@plt+0x520>
   10d80:	vstr	s16, [sp, #48]	; 0x30
   10d84:	add	r2, sp, #40	; 0x28
   10d88:	ldr	r1, [sp, #28]
   10d8c:	mov	r0, r4
   10d90:	bl	107b0 <XF86VidModeSetGamma@plt>
   10d94:	cmp	r0, #0
   10d98:	bne	10ec8 <abort@plt+0x664>
   10d9c:	ldr	r3, [pc, #-184]	; 10cec <abort@plt+0x488>
   10da0:	mov	r2, #31
   10da4:	mov	r1, #1
   10da8:	ldr	r3, [r3]
   10dac:	ldr	r0, [pc, #-268]	; 10ca8 <abort@plt+0x444>
   10db0:	bl	107c8 <fwrite@plt>
   10db4:	mov	r8, #2
   10db8:	mov	r0, r4
   10dbc:	bl	1084c <XCloseDisplay@plt>
   10dc0:	mov	r0, r8
   10dc4:	bl	10804 <exit@plt>
   10dc8:	ldr	r0, [pc, #-292]	; 10cac <abort@plt+0x448>
   10dcc:	bl	107d4 <puts@plt>
   10dd0:	mov	r0, r9
   10dd4:	bl	10804 <exit@plt>
   10dd8:	ldr	r0, [pc, #-304]	; 10cb0 <abort@plt+0x44c>
   10ddc:	bl	110f8 <abort@plt+0x894>
   10de0:	ldr	r3, [pc, #-252]	; 10cec <abort@plt+0x488>
   10de4:	ldr	r0, [sp, #24]
   10de8:	ldr	r5, [fp]
   10dec:	ldr	r4, [r3]
   10df0:	bl	1081c <XDisplayName@plt>
   10df4:	mov	r3, r5
   10df8:	ldr	r2, [pc, #-332]	; 10cb4 <abort@plt+0x450>
   10dfc:	mov	r1, #1
   10e00:	str	r0, [sp]
   10e04:	mov	r0, r4
   10e08:	bl	10834 <__fprintf_chk@plt>
   10e0c:	mov	r0, #1
   10e10:	bl	10804 <exit@plt>
   10e14:	ldr	r3, [pc, #-304]	; 10cec <abort@plt+0x488>
   10e18:	mov	r2, #44	; 0x2c
   10e1c:	mov	r1, #1
   10e20:	ldr	r3, [r3]
   10e24:	ldr	r0, [pc, #-372]	; 10cb8 <abort@plt+0x454>
   10e28:	bl	107c8 <fwrite@plt>
   10e2c:	mov	r0, #2
   10e30:	bl	10804 <exit@plt>
   10e34:	ldr	r4, [pc, #-336]	; 10cec <abort@plt+0x488>
   10e38:	ldr	r2, [fp, #4]
   10e3c:	mov	r1, #1
   10e40:	str	r2, [sp]
   10e44:	ldr	r2, [pc, #-400]	; 10cbc <abort@plt+0x458>
   10e48:	ldr	r0, [r4]
   10e4c:	bl	10834 <__fprintf_chk@plt>
   10e50:	mov	r3, #0
   10e54:	ldr	r0, [r4]
   10e58:	ldr	r2, [pc, #-416]	; 10cc0 <abort@plt+0x45c>
   10e5c:	str	r3, [sp]
   10e60:	mov	r1, #1
   10e64:	mov	r3, #2
   10e68:	bl	10834 <__fprintf_chk@plt>
   10e6c:	mov	r0, #2
   10e70:	bl	10804 <exit@plt>
   10e74:	ldr	r0, [pc, #-440]	; 10cc4 <abort@plt+0x460>
   10e78:	bl	110f8 <abort@plt+0x894>
   10e7c:	ldr	r3, [pc, #-408]	; 10cec <abort@plt+0x488>
   10e80:	mov	r2, #33	; 0x21
   10e84:	mov	r1, #1
   10e88:	ldr	r3, [r3]
   10e8c:	ldr	r0, [pc, #-428]	; 10ce8 <abort@plt+0x484>
   10e90:	bl	107c8 <fwrite@plt>
   10e94:	mov	r0, r4
   10e98:	bl	1084c <XCloseDisplay@plt>
   10e9c:	mov	r0, #2
   10ea0:	bl	10804 <exit@plt>
   10ea4:	add	r2, sp, #40	; 0x28
   10ea8:	ldr	r1, [sp, #28]
   10eac:	mov	r0, r4
   10eb0:	vstr	s17, [sp, #40]	; 0x28
   10eb4:	vstr	s17, [sp, #44]	; 0x2c
   10eb8:	vstr	s17, [sp, #48]	; 0x30
   10ebc:	bl	107b0 <XF86VidModeSetGamma@plt>
   10ec0:	cmp	r0, #0
   10ec4:	beq	10d9c <abort@plt+0x538>
   10ec8:	add	r2, sp, #40	; 0x28
   10ecc:	ldr	r1, [sp, #28]
   10ed0:	mov	r0, r4
   10ed4:	bl	107a4 <XF86VidModeGetGamma@plt>
   10ed8:	cmp	r0, #0
   10edc:	beq	10fa4 <abort@plt+0x740>
   10ee0:	cmp	r8, #0
   10ee4:	beq	10fc4 <abort@plt+0x760>
   10ee8:	mov	r8, #0
   10eec:	b	10db8 <abort@plt+0x554>
   10ef0:	ldr	r0, [pc, #-560]	; 10cc8 <abort@plt+0x464>
   10ef4:	bl	110f8 <abort@plt+0x894>
   10ef8:	ldr	r0, [pc, #-564]	; 10ccc <abort@plt+0x468>
   10efc:	bl	110f8 <abort@plt+0x894>
   10f00:	vmrs	APSR_nzcv, fpscr
   10f04:	bge	10f20 <abort@plt+0x6bc>
   10f08:	vcmpe.f32	s16, #0.0
   10f0c:	vmrs	APSR_nzcv, fpscr
   10f10:	blt	10ee8 <abort@plt+0x684>
   10f14:	vcmpe.f32	s19, #0.0
   10f18:	vmrs	APSR_nzcv, fpscr
   10f1c:	blt	10d80 <abort@plt+0x51c>
   10f20:	vstr	s19, [sp, #44]	; 0x2c
   10f24:	b	10d74 <abort@plt+0x510>
   10f28:	vldr	s10, [sp, #48]	; 0x30
   10f2c:	vldr	s12, [sp, #44]	; 0x2c
   10f30:	vldr	s14, [sp, #40]	; 0x28
   10f34:	ldr	r3, [pc, #-592]	; 10cec <abort@plt+0x488>
   10f38:	vcvt.f64.f32	d5, s10
   10f3c:	vcvt.f64.f32	d6, s12
   10f40:	vcvt.f64.f32	d7, s14
   10f44:	ldr	r0, [r3]
   10f48:	ldr	r2, [pc, #-640]	; 10cd0 <abort@plt+0x46c>
   10f4c:	mov	r1, #1
   10f50:	vstr	d5, [sp, #16]
   10f54:	vstr	d6, [sp, #8]
   10f58:	vstr	d7, [sp]
   10f5c:	bl	10834 <__fprintf_chk@plt>
   10f60:	b	10d4c <abort@plt+0x4e8>
   10f64:	ldr	r0, [pc, #-664]	; 10cd4 <abort@plt+0x470>
   10f68:	bl	110f8 <abort@plt+0x894>
   10f6c:	ldr	r0, [pc, #-668]	; 10cd8 <abort@plt+0x474>
   10f70:	bl	110f8 <abort@plt+0x894>
   10f74:	mov	r2, #1
   10f78:	mov	r1, r4
   10f7c:	ldr	r0, [pc, #-680]	; 10cdc <abort@plt+0x478>
   10f80:	bl	11160 <abort@plt+0x8fc>
   10f84:	ldr	r9, [sp, #32]
   10f88:	cmp	r0, #0
   10f8c:	bne	1094c <abort@plt+0xe8>
   10f90:	b	10930 <abort@plt+0xcc>
   10f94:	ldr	r0, [pc, #-700]	; 10ce0 <abort@plt+0x47c>
   10f98:	bl	110f8 <abort@plt+0x894>
   10f9c:	ldr	r0, [pc, #-704]	; 10ce4 <abort@plt+0x480>
   10fa0:	bl	110f8 <abort@plt+0x894>
   10fa4:	ldr	r3, [pc, #-704]	; 10cec <abort@plt+0x488>
   10fa8:	mov	r2, #33	; 0x21
   10fac:	mov	r1, #1
   10fb0:	ldr	r3, [r3]
   10fb4:	ldr	r0, [pc, #-724]	; 10ce8 <abort@plt+0x484>
   10fb8:	bl	107c8 <fwrite@plt>
   10fbc:	mov	r8, #2
   10fc0:	b	10db8 <abort@plt+0x554>
   10fc4:	vldr	s10, [sp, #48]	; 0x30
   10fc8:	vldr	s12, [sp, #44]	; 0x2c
   10fcc:	vldr	s14, [sp, #40]	; 0x28
   10fd0:	ldr	r3, [pc, #-748]	; 10cec <abort@plt+0x488>
   10fd4:	vcvt.f64.f32	d5, s10
   10fd8:	vcvt.f64.f32	d6, s12
   10fdc:	vcvt.f64.f32	d7, s14
   10fe0:	ldr	r0, [r3]
   10fe4:	ldr	r2, [pc, #-764]	; 10cf0 <abort@plt+0x48c>
   10fe8:	mov	r1, #1
   10fec:	vstr	d5, [sp, #16]
   10ff0:	vstr	d6, [sp, #8]
   10ff4:	vstr	d7, [sp]
   10ff8:	bl	10834 <__fprintf_chk@plt>
   10ffc:	b	10db8 <abort@plt+0x554>
   11000:	str	r4, [sp, #24]
   11004:	b	10c38 <abort@plt+0x3d4>
   11008:	mov	fp, #0
   1100c:	mov	lr, #0
   11010:	pop	{r1}		; (ldr r1, [sp], #4)
   11014:	mov	r2, sp
   11018:	push	{r2}		; (str r2, [sp, #-4]!)
   1101c:	push	{r0}		; (str r0, [sp, #-4]!)
   11020:	ldr	ip, [pc, #16]	; 11038 <abort@plt+0x7d4>
   11024:	push	{ip}		; (str ip, [sp, #-4]!)
   11028:	ldr	r0, [pc, #12]	; 1103c <abort@plt+0x7d8>
   1102c:	ldr	r3, [pc, #12]	; 11040 <abort@plt+0x7dc>
   11030:	bl	107e0 <__libc_start_main@plt>
   11034:	bl	10864 <abort@plt>
   11038:	andeq	r1, r1, r8, lsr r2
   1103c:	andeq	r0, r1, r0, ror r8
   11040:	ldrdeq	r1, [r1], -r8
   11044:	ldr	r3, [pc, #20]	; 11060 <abort@plt+0x7fc>
   11048:	ldr	r2, [pc, #20]	; 11064 <abort@plt+0x800>
   1104c:	add	r3, pc, r3
   11050:	ldr	r2, [r3, r2]
   11054:	cmp	r2, #0
   11058:	bxeq	lr
   1105c:	b	107f8 <__gmon_start__@plt>
   11060:	andeq	r0, r1, ip, lsr #31
   11064:	andeq	r0, r0, r8, asr r0
   11068:	ldr	r0, [pc, #24]	; 11088 <abort@plt+0x824>
   1106c:	ldr	r3, [pc, #24]	; 1108c <abort@plt+0x828>
   11070:	cmp	r3, r0
   11074:	bxeq	lr
   11078:	ldr	r3, [pc, #16]	; 11090 <abort@plt+0x82c>
   1107c:	cmp	r3, #0
   11080:	bxeq	lr
   11084:	bx	r3
   11088:	andeq	r2, r2, r4, rrx
   1108c:	andeq	r2, r2, r4, rrx
   11090:	andeq	r0, r0, r0
   11094:	ldr	r0, [pc, #36]	; 110c0 <abort@plt+0x85c>
   11098:	ldr	r1, [pc, #36]	; 110c4 <abort@plt+0x860>
   1109c:	sub	r1, r1, r0
   110a0:	asr	r1, r1, #2
   110a4:	add	r1, r1, r1, lsr #31
   110a8:	asrs	r1, r1, #1
   110ac:	bxeq	lr
   110b0:	ldr	r3, [pc, #16]	; 110c8 <abort@plt+0x864>
   110b4:	cmp	r3, #0
   110b8:	bxeq	lr
   110bc:	bx	r3
   110c0:	andeq	r2, r2, r4, rrx
   110c4:	andeq	r2, r2, r4, rrx
   110c8:	andeq	r0, r0, r0
   110cc:	push	{r4, lr}
   110d0:	ldr	r4, [pc, #24]	; 110f0 <abort@plt+0x88c>
   110d4:	ldrb	r3, [r4]
   110d8:	cmp	r3, #0
   110dc:	popne	{r4, pc}
   110e0:	bl	11068 <abort@plt+0x804>
   110e4:	mov	r3, #1
   110e8:	strb	r3, [r4]
   110ec:	pop	{r4, pc}
   110f0:	andeq	r2, r2, ip, rrx
   110f4:	b	11094 <abort@plt+0x830>
   110f8:	cmp	r0, #0
   110fc:	push	{lr}		; (str lr, [sp, #-4]!)
   11100:	sub	sp, sp, #12
   11104:	ldr	r5, [pc, #64]	; 1114c <abort@plt+0x8e8>
   11108:	ldr	r4, [pc, #64]	; 11150 <abort@plt+0x8ec>
   1110c:	beq	11128 <abort@plt+0x8c4>
   11110:	str	r0, [sp]
   11114:	ldr	r3, [r5]
   11118:	ldr	r0, [r4]
   1111c:	ldr	r2, [pc, #48]	; 11154 <abort@plt+0x8f0>
   11120:	mov	r1, #1
   11124:	bl	10834 <__fprintf_chk@plt>
   11128:	ldr	r2, [pc, #40]	; 11158 <abort@plt+0x8f4>
   1112c:	ldr	r3, [r5]
   11130:	str	r2, [sp]
   11134:	ldr	r0, [r4]
   11138:	ldr	r2, [pc, #28]	; 1115c <abort@plt+0x8f8>
   1113c:	mov	r1, #1
   11140:	bl	10834 <__fprintf_chk@plt>
   11144:	mov	r0, #1
   11148:	bl	10804 <exit@plt>
   1114c:	andeq	r2, r2, r0, ror r0
   11150:	andeq	r2, r2, r8, rrx
   11154:	andeq	r1, r1, r8, asr #4
   11158:	andeq	r1, r1, r0, ror r2
   1115c:	andeq	r1, r1, r4, asr r2
   11160:	push	{r4, r5, r6, r7, r8, lr}
   11164:	mov	r4, r2
   11168:	mov	r5, r0
   1116c:	mov	r6, r1
   11170:	bl	1078c <strcmp@plt>
   11174:	cmp	r0, #0
   11178:	beq	111d0 <abort@plt+0x96c>
   1117c:	mov	r0, r5
   11180:	bl	10810 <strlen@plt>
   11184:	mov	r7, r0
   11188:	mov	r0, r6
   1118c:	bl	10810 <strlen@plt>
   11190:	cmp	r4, r0
   11194:	movls	r4, #0
   11198:	movhi	r4, #1
   1119c:	cmp	r7, r0
   111a0:	orrls	r4, r4, #1
   111a4:	cmp	r4, #0
   111a8:	bne	111c8 <abort@plt+0x964>
   111ac:	mov	r2, r0
   111b0:	mov	r1, r6
   111b4:	mov	r0, r5
   111b8:	bl	10858 <strncmp@plt>
   111bc:	clz	r0, r0
   111c0:	lsr	r0, r0, #5
   111c4:	pop	{r4, r5, r6, r7, r8, pc}
   111c8:	mov	r0, #0
   111cc:	pop	{r4, r5, r6, r7, r8, pc}
   111d0:	mov	r0, #1
   111d4:	pop	{r4, r5, r6, r7, r8, pc}
   111d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111dc:	mov	r7, r0
   111e0:	ldr	r6, [pc, #72]	; 11230 <abort@plt+0x9cc>
   111e4:	ldr	r5, [pc, #72]	; 11234 <abort@plt+0x9d0>
   111e8:	add	r6, pc, r6
   111ec:	add	r5, pc, r5
   111f0:	sub	r6, r6, r5
   111f4:	mov	r8, r1
   111f8:	mov	r9, r2
   111fc:	bl	1076c <strcmp@plt-0x20>
   11200:	asrs	r6, r6, #2
   11204:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11208:	mov	r4, #0
   1120c:	add	r4, r4, #1
   11210:	ldr	r3, [r5], #4
   11214:	mov	r2, r9
   11218:	mov	r1, r8
   1121c:	mov	r0, r7
   11220:	blx	r3
   11224:	cmp	r6, r4
   11228:	bne	1120c <abort@plt+0x9a8>
   1122c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11230:	andeq	r0, r1, r4, lsl #26
   11234:	strdeq	r0, [r1], -ip
   11238:	bx	lr

Disassembly of section .fini:

0001123c <.fini>:
   1123c:	push	{r3, lr}
   11240:	pop	{r3, pc}
