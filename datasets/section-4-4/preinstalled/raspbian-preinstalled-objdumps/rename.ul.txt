
raspbian-preinstalled/rename.ul:     file format elf32-littlearm


Disassembly of section .init:

00010af8 <.init>:
   10af8:	push	{r3, lr}
   10afc:	bl	11278 <tcgetattr@plt+0x550>
   10b00:	pop	{r3, pc}

Disassembly of section .plt:

00010b04 <strstr@plt-0x14>:
   10b04:	push	{lr}		; (str lr, [sp, #-4]!)
   10b08:	ldr	lr, [pc, #4]	; 10b14 <strstr@plt-0x4>
   10b0c:	add	lr, pc, lr
   10b10:	ldr	pc, [lr, #8]!
   10b14:	andeq	r2, r1, r8, lsr #8

00010b18 <strstr@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1064]!	; 0x428

00010b24 <strcmp@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1056]!	; 0x420

00010b30 <fflush@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1048]!	; 0x418

00010b3c <free@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1040]!	; 0x410

00010b48 <faccessat@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1032]!	; 0x408

00010b54 <ferror@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1024]!	; 0x400

00010b60 <_exit@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1016]!	; 0x3f8

00010b6c <dcgettext@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1008]!	; 0x3f0

00010b78 <__stack_chk_fail@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1000]!	; 0x3e8

00010b84 <unlink@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #992]!	; 0x3e0

00010b90 <textdomain@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #984]!	; 0x3d8

00010b9c <err@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #976]!	; 0x3d0

00010ba8 <readlink@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #968]!	; 0x3c8

00010bb4 <__fpending@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #960]!	; 0x3c0

00010bc0 <puts@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #952]!	; 0x3b8

00010bcc <malloc@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #73728	; 0x12000
   10bd4:	ldr	pc, [ip, #944]!	; 0x3b0

00010bd8 <__libc_start_main@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #73728	; 0x12000
   10be0:	ldr	pc, [ip, #936]!	; 0x3a8

00010be4 <__gmon_start__@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #73728	; 0x12000
   10bec:	ldr	pc, [ip, #928]!	; 0x3a0

00010bf0 <rename@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #73728	; 0x12000
   10bf8:	ldr	pc, [ip, #920]!	; 0x398

00010bfc <getopt_long@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #73728	; 0x12000
   10c04:	ldr	pc, [ip, #912]!	; 0x390

00010c08 <exit@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #73728	; 0x12000
   10c10:	ldr	pc, [ip, #904]!	; 0x388

00010c14 <strlen@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #73728	; 0x12000
   10c1c:	ldr	pc, [ip, #896]!	; 0x380

00010c20 <strchr@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #73728	; 0x12000
   10c28:	ldr	pc, [ip, #888]!	; 0x378

00010c2c <warnx@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #73728	; 0x12000
   10c34:	ldr	pc, [ip, #880]!	; 0x370

00010c38 <__errno_location@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #73728	; 0x12000
   10c40:	ldr	pc, [ip, #872]!	; 0x368

00010c44 <__cxa_atexit@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #73728	; 0x12000
   10c4c:	ldr	pc, [ip, #864]!	; 0x360

00010c50 <putchar@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #73728	; 0x12000
   10c58:	ldr	pc, [ip, #856]!	; 0x358

00010c5c <fgetc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #73728	; 0x12000
   10c64:	ldr	pc, [ip, #848]!	; 0x350

00010c68 <__printf_chk@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #73728	; 0x12000
   10c70:	ldr	pc, [ip, #840]!	; 0x348

00010c74 <__fprintf_chk@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #73728	; 0x12000
   10c7c:	ldr	pc, [ip, #832]!	; 0x340

00010c80 <access@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #73728	; 0x12000
   10c88:	ldr	pc, [ip, #824]!	; 0x338

00010c8c <fclose@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #816]!	; 0x330

00010c98 <rpmatch@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #808]!	; 0x328

00010ca4 <setlocale@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #800]!	; 0x320

00010cb0 <strrchr@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #792]!	; 0x318

00010cbc <warn@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #784]!	; 0x310

00010cc8 <fputc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #776]!	; 0x308

00010cd4 <symlink@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #768]!	; 0x300

00010ce0 <bindtextdomain@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #760]!	; 0x2f8

00010cec <__fpurge@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #752]!	; 0x2f0

00010cf8 <isatty@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #744]!	; 0x2e8

00010d04 <fputs@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d10 <abort@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #728]!	; 0x2d8

00010d1c <__lxstat64@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #720]!	; 0x2d0

00010d28 <tcgetattr@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #712]!	; 0x2c8

Disassembly of section .text:

00010d34 <.text>:
   10d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d38:	sub	sp, sp, #100	; 0x64
   10d3c:	ldr	fp, [pc, #1132]	; 111b0 <tcgetattr@plt+0x488>
   10d40:	mov	r7, r0
   10d44:	mov	r6, r1
   10d48:	ldr	r3, [fp]
   10d4c:	ldr	r1, [pc, #1120]	; 111b4 <tcgetattr@plt+0x48c>
   10d50:	mov	r0, #6
   10d54:	str	r3, [sp, #92]	; 0x5c
   10d58:	bl	10ca4 <setlocale@plt>
   10d5c:	ldr	r1, [pc, #1108]	; 111b8 <tcgetattr@plt+0x490>
   10d60:	ldr	r0, [pc, #1108]	; 111bc <tcgetattr@plt+0x494>
   10d64:	bl	10ce0 <bindtextdomain@plt>
   10d68:	ldr	r0, [pc, #1100]	; 111bc <tcgetattr@plt+0x494>
   10d6c:	bl	10b90 <textdomain@plt>
   10d70:	mov	r5, #0
   10d74:	ldr	r0, [pc, #1092]	; 111c0 <tcgetattr@plt+0x498>
   10d78:	ldr	r9, [pc, #1092]	; 111c4 <tcgetattr@plt+0x49c>
   10d7c:	ldr	r8, [pc, #1092]	; 111c8 <tcgetattr@plt+0x4a0>
   10d80:	bl	11c48 <tcgetattr@plt+0xf20>
   10d84:	mov	sl, r5
   10d88:	ldr	r3, [pc, #1084]	; 111cc <tcgetattr@plt+0x4a4>
   10d8c:	str	r5, [sp, #20]
   10d90:	str	r5, [sp, #16]
   10d94:	str	r3, [sp, #24]
   10d98:	mov	r4, #0
   10d9c:	str	r4, [sp]
   10da0:	mov	r3, r9
   10da4:	mov	r2, r8
   10da8:	mov	r1, r6
   10dac:	mov	r0, r7
   10db0:	bl	10bfc <getopt_long@plt>
   10db4:	cmn	r0, #1
   10db8:	beq	10ed0 <tcgetattr@plt+0x1a8>
   10dbc:	sub	r0, r0, #86	; 0x56
   10dc0:	cmp	r0, #32
   10dc4:	ldrls	pc, [pc, r0, lsl #2]
   10dc8:	b	110f4 <tcgetattr@plt+0x3cc>
   10dcc:	andeq	r0, r1, r4, ror lr
   10dd0:	strdeq	r1, [r1], -r4
   10dd4:	strdeq	r1, [r1], -r4
   10dd8:	strdeq	r1, [r1], -r4
   10ddc:	strdeq	r1, [r1], -r4
   10de0:	strdeq	r1, [r1], -r4
   10de4:	strdeq	r1, [r1], -r4
   10de8:	strdeq	r1, [r1], -r4
   10dec:	strdeq	r1, [r1], -r4
   10df0:	strdeq	r1, [r1], -r4
   10df4:	strdeq	r1, [r1], -r4
   10df8:	strdeq	r1, [r1], -r4
   10dfc:	strdeq	r1, [r1], -r4
   10e00:	strdeq	r1, [r1], -r4
   10e04:	strdeq	r1, [r1], -r4
   10e08:	strdeq	r1, [r1], -r4
   10e0c:	strdeq	r1, [r1], -r4
   10e10:	strdeq	r1, [r1], -r4
   10e14:	andeq	r0, r1, r0, lsl #31
   10e18:	andeq	r0, r1, r8, ror #28
   10e1c:	strdeq	r1, [r1], -r4
   10e20:	strdeq	r1, [r1], -r4
   10e24:	strdeq	r1, [r1], -r4
   10e28:	strdeq	r1, [r1], -r4
   10e2c:	andeq	r0, r1, ip, asr lr
   10e30:	andeq	r0, r1, r0, asr lr
   10e34:	strdeq	r1, [r1], -r4
   10e38:	strdeq	r1, [r1], -r4
   10e3c:	strdeq	r1, [r1], -r4
   10e40:	andeq	r0, r1, r4, asr #29
   10e44:	strdeq	r1, [r1], -r4
   10e48:	strdeq	r1, [r1], -r4
   10e4c:			; <UNDEFINED> instruction: 0x00010eb8
   10e50:	mov	r5, #0
   10e54:	mov	sl, #1
   10e58:	b	10d98 <tcgetattr@plt+0x70>
   10e5c:	mov	r3, #1
   10e60:	str	r3, [sp, #20]
   10e64:	b	10d98 <tcgetattr@plt+0x70>
   10e68:	mov	r5, #1
   10e6c:	mov	sl, #0
   10e70:	b	10d98 <tcgetattr@plt+0x70>
   10e74:	mov	r2, #5
   10e78:	ldr	r1, [pc, #848]	; 111d0 <tcgetattr@plt+0x4a8>
   10e7c:	mov	r0, #0
   10e80:	bl	10b6c <dcgettext@plt>
   10e84:	ldr	r2, [pc, #840]	; 111d4 <tcgetattr@plt+0x4ac>
   10e88:	ldr	r3, [pc, #840]	; 111d8 <tcgetattr@plt+0x4b0>
   10e8c:	ldr	r2, [r2]
   10e90:	mov	r1, r0
   10e94:	mov	r0, #1
   10e98:	bl	10c68 <__printf_chk@plt>
   10e9c:	mov	r0, #0
   10ea0:	ldr	r2, [sp, #92]	; 0x5c
   10ea4:	ldr	r3, [fp]
   10ea8:	cmp	r2, r3
   10eac:	bne	11184 <tcgetattr@plt+0x45c>
   10eb0:	add	sp, sp, #100	; 0x64
   10eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10eb8:	mov	r3, #1
   10ebc:	str	r3, [sp, #16]
   10ec0:	b	10d98 <tcgetattr@plt+0x70>
   10ec4:	ldr	r3, [pc, #784]	; 111dc <tcgetattr@plt+0x4b4>
   10ec8:	str	r3, [sp, #24]
   10ecc:	b	10d98 <tcgetattr@plt+0x70>
   10ed0:	ldr	r3, [pc, #776]	; 111e0 <tcgetattr@plt+0x4b8>
   10ed4:	ldr	r3, [r3]
   10ed8:	sub	r7, r7, r3
   10edc:	add	r2, r6, r3, lsl #2
   10ee0:	cmp	r7, #2
   10ee4:	str	r2, [sp, #28]
   10ee8:	ble	11188 <tcgetattr@plt+0x460>
   10eec:	ldr	r9, [r6, r3, lsl #2]
   10ef0:	ldr	r3, [sp, #28]
   10ef4:	mov	r0, r9
   10ef8:	ldr	r8, [r3, #4]
   10efc:	mov	r1, r8
   10f00:	bl	10b24 <strcmp@plt>
   10f04:	cmp	r0, #0
   10f08:	moveq	r0, #4
   10f0c:	beq	10ea0 <tcgetattr@plt+0x178>
   10f10:	ldr	r6, [pc, #716]	; 111e4 <tcgetattr@plt+0x4bc>
   10f14:	cmp	r5, #0
   10f18:	str	r4, [r6]
   10f1c:	bne	1112c <tcgetattr@plt+0x404>
   10f20:	ldr	r2, [sp, #28]
   10f24:	mov	r6, #0
   10f28:	sub	r3, r2, #4
   10f2c:	add	r7, r3, r7, lsl #2
   10f30:	add	r4, r2, #4
   10f34:	ldr	r3, [sp, #20]
   10f38:	str	r5, [sp, #8]
   10f3c:	str	r3, [sp]
   10f40:	str	sl, [sp, #4]
   10f44:	ldr	r3, [sp, #16]
   10f48:	ldr	r2, [r4, #4]!
   10f4c:	mov	r1, r8
   10f50:	mov	r0, r9
   10f54:	ldr	ip, [sp, #24]
   10f58:	blx	ip
   10f5c:	cmp	r7, r4
   10f60:	orr	r6, r6, r0
   10f64:	bne	10f34 <tcgetattr@plt+0x20c>
   10f68:	cmp	r6, #3
   10f6c:	movhi	r0, #64	; 0x40
   10f70:	ldrls	r3, [pc, #588]	; 111c4 <tcgetattr@plt+0x49c>
   10f74:	addls	r6, r3, r6, lsl #2
   10f78:	ldrls	r0, [r6, #128]	; 0x80
   10f7c:	b	10ea0 <tcgetattr@plt+0x178>
   10f80:	ldr	r3, [pc, #608]	; 111e8 <tcgetattr@plt+0x4c0>
   10f84:	mov	r2, #5
   10f88:	ldr	r1, [pc, #604]	; 111ec <tcgetattr@plt+0x4c4>
   10f8c:	ldr	r4, [r3]
   10f90:	mov	r0, #0
   10f94:	bl	10b6c <dcgettext@plt>
   10f98:	mov	r1, r4
   10f9c:	bl	10d04 <fputs@plt>
   10fa0:	mov	r2, #5
   10fa4:	ldr	r1, [pc, #580]	; 111f0 <tcgetattr@plt+0x4c8>
   10fa8:	mov	r0, #0
   10fac:	bl	10b6c <dcgettext@plt>
   10fb0:	ldr	r3, [pc, #540]	; 111d4 <tcgetattr@plt+0x4ac>
   10fb4:	mov	r1, #1
   10fb8:	ldr	r3, [r3]
   10fbc:	mov	r2, r0
   10fc0:	mov	r0, r4
   10fc4:	bl	10c74 <__fprintf_chk@plt>
   10fc8:	mov	r1, r4
   10fcc:	mov	r0, #10
   10fd0:	bl	10cc8 <fputc@plt>
   10fd4:	mov	r2, #5
   10fd8:	ldr	r1, [pc, #532]	; 111f4 <tcgetattr@plt+0x4cc>
   10fdc:	mov	r0, #0
   10fe0:	bl	10b6c <dcgettext@plt>
   10fe4:	mov	r1, r4
   10fe8:	bl	10d04 <fputs@plt>
   10fec:	mov	r2, #5
   10ff0:	ldr	r1, [pc, #512]	; 111f8 <tcgetattr@plt+0x4d0>
   10ff4:	mov	r0, #0
   10ff8:	bl	10b6c <dcgettext@plt>
   10ffc:	mov	r1, r4
   11000:	bl	10d04 <fputs@plt>
   11004:	mov	r2, #5
   11008:	ldr	r1, [pc, #492]	; 111fc <tcgetattr@plt+0x4d4>
   1100c:	mov	r0, #0
   11010:	bl	10b6c <dcgettext@plt>
   11014:	mov	r1, r4
   11018:	bl	10d04 <fputs@plt>
   1101c:	mov	r2, #5
   11020:	ldr	r1, [pc, #472]	; 11200 <tcgetattr@plt+0x4d8>
   11024:	mov	r0, #0
   11028:	bl	10b6c <dcgettext@plt>
   1102c:	mov	r1, r4
   11030:	bl	10d04 <fputs@plt>
   11034:	mov	r2, #5
   11038:	ldr	r1, [pc, #452]	; 11204 <tcgetattr@plt+0x4dc>
   1103c:	mov	r0, #0
   11040:	bl	10b6c <dcgettext@plt>
   11044:	mov	r1, r4
   11048:	bl	10d04 <fputs@plt>
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #432]	; 11208 <tcgetattr@plt+0x4e0>
   11054:	mov	r0, #0
   11058:	bl	10b6c <dcgettext@plt>
   1105c:	mov	r1, r4
   11060:	bl	10d04 <fputs@plt>
   11064:	mov	r2, #5
   11068:	ldr	r1, [pc, #412]	; 1120c <tcgetattr@plt+0x4e4>
   1106c:	mov	r0, #0
   11070:	bl	10b6c <dcgettext@plt>
   11074:	mov	r1, r4
   11078:	bl	10d04 <fputs@plt>
   1107c:	mov	r1, r4
   11080:	mov	r0, #10
   11084:	bl	10cc8 <fputc@plt>
   11088:	mov	r2, #5
   1108c:	ldr	r1, [pc, #380]	; 11210 <tcgetattr@plt+0x4e8>
   11090:	mov	r0, #0
   11094:	bl	10b6c <dcgettext@plt>
   11098:	mov	r2, #5
   1109c:	ldr	r1, [pc, #368]	; 11214 <tcgetattr@plt+0x4ec>
   110a0:	mov	r4, r0
   110a4:	mov	r0, #0
   110a8:	bl	10b6c <dcgettext@plt>
   110ac:	ldr	r2, [pc, #356]	; 11218 <tcgetattr@plt+0x4f0>
   110b0:	mov	r3, r4
   110b4:	str	r2, [sp]
   110b8:	ldr	r1, [pc, #348]	; 1121c <tcgetattr@plt+0x4f4>
   110bc:	ldr	r2, [pc, #348]	; 11220 <tcgetattr@plt+0x4f8>
   110c0:	str	r0, [sp, #4]
   110c4:	mov	r0, #1
   110c8:	bl	10c68 <__printf_chk@plt>
   110cc:	mov	r2, #5
   110d0:	ldr	r1, [pc, #332]	; 11224 <tcgetattr@plt+0x4fc>
   110d4:	mov	r0, #0
   110d8:	bl	10b6c <dcgettext@plt>
   110dc:	ldr	r2, [pc, #324]	; 11228 <tcgetattr@plt+0x500>
   110e0:	mov	r1, r0
   110e4:	mov	r0, #1
   110e8:	bl	10c68 <__printf_chk@plt>
   110ec:	mov	r0, #0
   110f0:	bl	10c08 <exit@plt>
   110f4:	ldr	r3, [pc, #304]	; 1122c <tcgetattr@plt+0x504>
   110f8:	ldr	r1, [pc, #304]	; 11230 <tcgetattr@plt+0x508>
   110fc:	mov	r2, #5
   11100:	mov	r0, #0
   11104:	ldr	r4, [r3]
   11108:	bl	10b6c <dcgettext@plt>
   1110c:	ldr	r3, [pc, #192]	; 111d4 <tcgetattr@plt+0x4ac>
   11110:	mov	r1, #1
   11114:	ldr	r3, [r3]
   11118:	mov	r2, r0
   1111c:	mov	r0, r4
   11120:	bl	10c74 <__fprintf_chk@plt>
   11124:	mov	r0, #1
   11128:	bl	10c08 <exit@plt>
   1112c:	mov	r0, r4
   11130:	bl	10cf8 <isatty@plt>
   11134:	cmp	r0, #0
   11138:	beq	10f20 <tcgetattr@plt+0x1f8>
   1113c:	add	r1, sp, #32
   11140:	mov	r0, r4
   11144:	bl	10d28 <tcgetattr@plt>
   11148:	cmp	r0, #0
   1114c:	bne	1116c <tcgetattr@plt+0x444>
   11150:	ldr	r3, [sp, #44]	; 0x2c
   11154:	tst	r3, #2
   11158:	bne	10f20 <tcgetattr@plt+0x1f8>
   1115c:	ldrb	r3, [sp, #55]	; 0x37
   11160:	cmp	r3, #1
   11164:	streq	r3, [r6]
   11168:	b	10f20 <tcgetattr@plt+0x1f8>
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #188]	; 11234 <tcgetattr@plt+0x50c>
   11174:	mov	r0, r4
   11178:	bl	10b6c <dcgettext@plt>
   1117c:	bl	10cbc <warn@plt>
   11180:	b	10f20 <tcgetattr@plt+0x1f8>
   11184:	bl	10b78 <__stack_chk_fail@plt>
   11188:	mov	r2, #5
   1118c:	ldr	r1, [pc, #164]	; 11238 <tcgetattr@plt+0x510>
   11190:	mov	r0, r4
   11194:	bl	10b6c <dcgettext@plt>
   11198:	bl	10c2c <warnx@plt>
   1119c:	ldr	r3, [pc, #136]	; 1122c <tcgetattr@plt+0x504>
   111a0:	mov	r0, r4
   111a4:	mov	r2, #5
   111a8:	ldr	r1, [pc, #128]	; 11230 <tcgetattr@plt+0x508>
   111ac:	b	11104 <tcgetattr@plt+0x3dc>
   111b0:	andeq	r2, r2, r8, lsr lr
   111b4:	andeq	r1, r1, r0, lsl #29
   111b8:	andeq	r1, r1, r8, lsr lr
   111bc:	andeq	r1, r1, ip, asr #28
   111c0:	andeq	r1, r1, ip, lsr #21
   111c4:	andeq	r1, r1, ip, ror #24
   111c8:	andeq	r2, r1, r8, ror r0
   111cc:	andeq	r1, r1, ip, asr #16
   111d0:	andeq	r1, r1, r8, asr lr
   111d4:	andeq	r3, r2, r8
   111d8:	andeq	r1, r1, r4, ror #28
   111dc:	andeq	r1, r1, r4, lsr #10
   111e0:	andeq	r3, r2, r0, lsl r0
   111e4:	andeq	r3, r2, ip, lsr #32
   111e8:	andeq	r3, r2, r4, lsr #32
   111ec:	andeq	r1, r1, r8, ror lr
   111f0:	andeq	r1, r1, r4, lsl #29
   111f4:			; <UNDEFINED> instruction: 0x00011eb8
   111f8:	andeq	r1, r1, r8, asr #29
   111fc:	ldrdeq	r1, [r1], -r4
   11200:	andeq	r1, r1, r8, lsl #30
   11204:	andeq	r1, r1, ip, lsr pc
   11208:	andeq	r1, r1, ip, ror #30
   1120c:	andeq	r1, r1, r4, lsr #31
   11210:	ldrdeq	r1, [r1], -r4
   11214:	andeq	r1, r1, r8, ror #31
   11218:	andeq	r2, r1, r8, lsl r0
   1121c:	andeq	r2, r1, r4
   11220:	strdeq	r1, [r1], -r8
   11224:	andeq	r2, r1, r8, lsr #32
   11228:	andeq	r2, r1, r4, asr #32
   1122c:	andeq	r3, r2, r8, lsl r0
   11230:	andeq	r2, r1, r0, asr r0
   11234:	muleq	r1, r8, r0
   11238:	andeq	r2, r1, r0, lsl #1
   1123c:	mov	fp, #0
   11240:	mov	lr, #0
   11244:	pop	{r1}		; (ldr r1, [sp], #4)
   11248:	mov	r2, sp
   1124c:	push	{r2}		; (str r2, [sp, #-4]!)
   11250:	push	{r0}		; (str r0, [sp, #-4]!)
   11254:	ldr	ip, [pc, #16]	; 1126c <tcgetattr@plt+0x544>
   11258:	push	{ip}		; (str ip, [sp, #-4]!)
   1125c:	ldr	r0, [pc, #12]	; 11270 <tcgetattr@plt+0x548>
   11260:	ldr	r3, [pc, #12]	; 11274 <tcgetattr@plt+0x54c>
   11264:	bl	10bd8 <__libc_start_main@plt>
   11268:	bl	10d10 <abort@plt>
   1126c:	andeq	r1, r1, r4, asr #24
   11270:	andeq	r0, r1, r4, lsr sp
   11274:	andeq	r1, r1, r4, ror #23
   11278:	ldr	r3, [pc, #20]	; 11294 <tcgetattr@plt+0x56c>
   1127c:	ldr	r2, [pc, #20]	; 11298 <tcgetattr@plt+0x570>
   11280:	add	r3, pc, r3
   11284:	ldr	r2, [r3, r2]
   11288:	cmp	r2, #0
   1128c:	bxeq	lr
   11290:	b	10be4 <__gmon_start__@plt>
   11294:			; <UNDEFINED> instruction: 0x00011cb4
   11298:	andeq	r0, r0, r0, asr #1
   1129c:	ldr	r0, [pc, #24]	; 112bc <tcgetattr@plt+0x594>
   112a0:	ldr	r3, [pc, #24]	; 112c0 <tcgetattr@plt+0x598>
   112a4:	cmp	r3, r0
   112a8:	bxeq	lr
   112ac:	ldr	r3, [pc, #16]	; 112c4 <tcgetattr@plt+0x59c>
   112b0:	cmp	r3, #0
   112b4:	bxeq	lr
   112b8:	bx	r3
   112bc:	andeq	r3, r2, r8
   112c0:	andeq	r3, r2, r8
   112c4:	andeq	r0, r0, r0
   112c8:	ldr	r0, [pc, #36]	; 112f4 <tcgetattr@plt+0x5cc>
   112cc:	ldr	r1, [pc, #36]	; 112f8 <tcgetattr@plt+0x5d0>
   112d0:	sub	r1, r1, r0
   112d4:	asr	r1, r1, #2
   112d8:	add	r1, r1, r1, lsr #31
   112dc:	asrs	r1, r1, #1
   112e0:	bxeq	lr
   112e4:	ldr	r3, [pc, #16]	; 112fc <tcgetattr@plt+0x5d4>
   112e8:	cmp	r3, #0
   112ec:	bxeq	lr
   112f0:	bx	r3
   112f4:	andeq	r3, r2, r8
   112f8:	andeq	r3, r2, r8
   112fc:	andeq	r0, r0, r0
   11300:	push	{r4, lr}
   11304:	ldr	r4, [pc, #24]	; 11324 <tcgetattr@plt+0x5fc>
   11308:	ldrb	r3, [r4]
   1130c:	cmp	r3, #0
   11310:	popne	{r4, pc}
   11314:	bl	1129c <tcgetattr@plt+0x574>
   11318:	mov	r3, #1
   1131c:	strb	r3, [r4]
   11320:	pop	{r4, pc}
   11324:	andeq	r3, r2, r8, lsr #32
   11328:	b	112c8 <tcgetattr@plt+0x5a0>
   1132c:	push	{r4, r5, lr}
   11330:	sub	sp, sp, #12
   11334:	ldr	r5, [pc, #220]	; 11418 <tcgetattr@plt+0x6f0>
   11338:	mov	r4, r0
   1133c:	mov	r2, #5
   11340:	ldr	r3, [r5]
   11344:	ldr	r1, [pc, #208]	; 1141c <tcgetattr@plt+0x6f4>
   11348:	mov	r0, #0
   1134c:	str	r3, [sp, #4]
   11350:	bl	10b6c <dcgettext@plt>
   11354:	ldr	r2, [pc, #196]	; 11420 <tcgetattr@plt+0x6f8>
   11358:	mov	r3, r4
   1135c:	ldr	r4, [pc, #192]	; 11424 <tcgetattr@plt+0x6fc>
   11360:	ldr	r2, [r2]
   11364:	mov	r1, r0
   11368:	mov	r0, #1
   1136c:	bl	10c68 <__printf_chk@plt>
   11370:	ldr	r3, [pc, #176]	; 11428 <tcgetattr@plt+0x700>
   11374:	ldr	r0, [r3]
   11378:	bl	10b30 <fflush@plt>
   1137c:	ldr	r0, [r4]
   11380:	bl	10c5c <fgetc@plt>
   11384:	cmn	r0, #1
   11388:	beq	11400 <tcgetattr@plt+0x6d8>
   1138c:	cmp	r0, #10
   11390:	strb	r0, [sp]
   11394:	beq	113b8 <tcgetattr@plt+0x690>
   11398:	ldr	r3, [pc, #140]	; 1142c <tcgetattr@plt+0x704>
   1139c:	ldr	r0, [r4]
   113a0:	ldr	r3, [r3]
   113a4:	cmp	r3, #0
   113a8:	beq	113ec <tcgetattr@plt+0x6c4>
   113ac:	bl	10cec <__fpurge@plt>
   113b0:	mov	r0, #10
   113b4:	bl	10c50 <putchar@plt>
   113b8:	mov	r3, #0
   113bc:	mov	r0, sp
   113c0:	strb	r3, [sp, #1]
   113c4:	bl	10c98 <rpmatch@plt>
   113c8:	ldr	r2, [sp, #4]
   113cc:	ldr	r3, [r5]
   113d0:	subs	r0, r0, #1
   113d4:	movne	r0, #1
   113d8:	cmp	r2, r3
   113dc:	bne	11414 <tcgetattr@plt+0x6ec>
   113e0:	add	sp, sp, #12
   113e4:	pop	{r4, r5, pc}
   113e8:	ldr	r0, [r4]
   113ec:	bl	10c5c <fgetc@plt>
   113f0:	cmp	r0, #10
   113f4:	cmnne	r0, #1
   113f8:	bne	113e8 <tcgetattr@plt+0x6c0>
   113fc:	b	113b8 <tcgetattr@plt+0x690>
   11400:	mov	r3, #110	; 0x6e
   11404:	ldr	r0, [pc, #36]	; 11430 <tcgetattr@plt+0x708>
   11408:	strb	r3, [sp]
   1140c:	bl	10bc0 <puts@plt>
   11410:	b	113b8 <tcgetattr@plt+0x690>
   11414:	bl	10b78 <__stack_chk_fail@plt>
   11418:	andeq	r2, r2, r8, lsr lr
   1141c:	strdeq	r1, [r1], -ip
   11420:	andeq	r3, r2, r8
   11424:	andeq	r3, r2, r0, lsr #32
   11428:	andeq	r3, r2, r4, lsr #32
   1142c:	andeq	r3, r2, ip, lsr #32
   11430:	andeq	r1, r1, r4, lsl sp
   11434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11438:	mov	r6, r0
   1143c:	mov	r5, r1
   11440:	mov	r0, r2
   11444:	mov	r1, r6
   11448:	mov	r8, r3
   1144c:	bl	10b18 <strstr@plt>
   11450:	subs	r7, r0, #0
   11454:	beq	11508 <tcgetattr@plt+0x7e0>
   11458:	mov	r0, r8
   1145c:	bl	10c14 <strlen@plt>
   11460:	mov	r9, r0
   11464:	mov	r0, r5
   11468:	bl	10c14 <strlen@plt>
   1146c:	add	r9, r9, r0
   11470:	add	r9, r9, #1
   11474:	mov	r0, r9
   11478:	bl	10bcc <malloc@plt>
   1147c:	subs	r4, r0, #0
   11480:	beq	11510 <tcgetattr@plt+0x7e8>
   11484:	ldr	r3, [sp, #32]
   11488:	cmp	r7, r8
   1148c:	str	r4, [r3]
   11490:	bls	114b4 <tcgetattr@plt+0x78c>
   11494:	sub	r1, r4, #1
   11498:	mov	r2, r8
   1149c:	ldrb	r0, [r2], #1
   114a0:	cmp	r7, r2
   114a4:	strb	r0, [r1, #1]!
   114a8:	bne	1149c <tcgetattr@plt+0x774>
   114ac:	sub	r8, r7, r8
   114b0:	add	r4, r4, r8
   114b4:	ldrsb	r3, [r5]
   114b8:	cmp	r3, #0
   114bc:	beq	114d4 <tcgetattr@plt+0x7ac>
   114c0:	mov	r1, r5
   114c4:	strb	r3, [r4], #1
   114c8:	ldrsb	r3, [r1, #1]!
   114cc:	cmp	r3, #0
   114d0:	bne	114c4 <tcgetattr@plt+0x79c>
   114d4:	mov	r0, r6
   114d8:	bl	10c14 <strlen@plt>
   114dc:	ldrsb	r3, [r7, r0]
   114e0:	add	r2, r7, r0
   114e4:	cmp	r3, #0
   114e8:	beq	114fc <tcgetattr@plt+0x7d4>
   114ec:	strb	r3, [r4], #1
   114f0:	ldrsb	r3, [r2, #1]!
   114f4:	cmp	r3, #0
   114f8:	bne	114ec <tcgetattr@plt+0x7c4>
   114fc:	mov	r0, #0
   11500:	strb	r0, [r4]
   11504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11508:	mov	r0, #1
   1150c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11510:	mov	r2, r9
   11514:	ldr	r1, [pc, #4]	; 11520 <tcgetattr@plt+0x7f8>
   11518:	mov	r0, #1
   1151c:	bl	10b9c <err@plt>
   11520:	andeq	r1, r1, r8, lsl sp
   11524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11528:	mov	r5, #0
   1152c:	ldr	r6, [pc, #752]	; 11824 <tcgetattr@plt+0xafc>
   11530:	sub	sp, sp, #132	; 0x84
   11534:	mov	r4, r2
   11538:	ldr	ip, [r6]
   1153c:	mov	r7, r0
   11540:	mov	r8, r1
   11544:	mov	r9, r3
   11548:	mov	r1, r2
   1154c:	mov	r3, #256	; 0x100
   11550:	mov	r2, r5
   11554:	mvn	r0, #99	; 0x63
   11558:	str	ip, [sp, #124]	; 0x7c
   1155c:	str	r5, [sp, #12]
   11560:	bl	10b48 <faccessat@plt>
   11564:	cmp	r0, r5
   11568:	beq	1157c <tcgetattr@plt+0x854>
   1156c:	bl	10c38 <__errno_location@plt>
   11570:	ldr	r3, [r0]
   11574:	cmp	r3, #22
   11578:	bne	1173c <tcgetattr@plt+0xa14>
   1157c:	add	r2, sp, #16
   11580:	mov	r1, r4
   11584:	mov	r0, #3
   11588:	bl	10d1c <__lxstat64@plt>
   1158c:	cmn	r0, #1
   11590:	beq	1175c <tcgetattr@plt+0xa34>
   11594:	ldr	r3, [sp, #32]
   11598:	and	r3, r3, #61440	; 0xf000
   1159c:	cmp	r3, #40960	; 0xa000
   115a0:	bne	1165c <tcgetattr@plt+0x934>
   115a4:	ldr	sl, [sp, #64]	; 0x40
   115a8:	add	sl, sl, #1
   115ac:	mov	r0, sl
   115b0:	bl	10bcc <malloc@plt>
   115b4:	adds	fp, sl, #0
   115b8:	movne	fp, #1
   115bc:	mov	r2, sl
   115c0:	cmp	r0, #0
   115c4:	movne	fp, #0
   115c8:	cmp	fp, #0
   115cc:	mov	r5, r0
   115d0:	bne	11818 <tcgetattr@plt+0xaf0>
   115d4:	mov	r1, r0
   115d8:	mov	r0, r4
   115dc:	bl	10ba8 <readlink@plt>
   115e0:	cmp	r0, #0
   115e4:	blt	116c0 <tcgetattr@plt+0x998>
   115e8:	ldr	r3, [sp, #64]	; 0x40
   115ec:	add	r2, sp, #12
   115f0:	mov	r1, r8
   115f4:	strb	fp, [r5, r3]
   115f8:	mov	r0, r7
   115fc:	str	r2, [sp]
   11600:	mov	r3, r5
   11604:	mov	r2, r5
   11608:	bl	11434 <tcgetattr@plt+0x70c>
   1160c:	cmp	r0, #0
   11610:	bne	11694 <tcgetattr@plt+0x96c>
   11614:	ldr	r3, [sp, #172]	; 0xac
   11618:	ldr	r2, [sp, #176]	; 0xb0
   1161c:	orrs	r3, r3, r2
   11620:	bne	116e8 <tcgetattr@plt+0x9c0>
   11624:	ldr	r3, [sp, #168]	; 0xa8
   11628:	cmp	r3, #0
   1162c:	beq	117ac <tcgetattr@plt+0xa84>
   11630:	cmp	r9, #0
   11634:	mov	r7, #1
   11638:	beq	116ac <tcgetattr@plt+0x984>
   1163c:	ldr	r3, [sp, #12]
   11640:	mov	r2, r4
   11644:	str	r3, [sp]
   11648:	ldr	r1, [pc, #472]	; 11828 <tcgetattr@plt+0xb00>
   1164c:	mov	r3, r5
   11650:	mov	r0, #1
   11654:	bl	10c68 <__printf_chk@plt>
   11658:	b	116ac <tcgetattr@plt+0x984>
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #452]	; 1182c <tcgetattr@plt+0xb04>
   11664:	mov	r0, #0
   11668:	bl	10b6c <dcgettext@plt>
   1166c:	mov	r1, r4
   11670:	bl	10c2c <warnx@plt>
   11674:	mov	r7, #2
   11678:	ldr	r2, [sp, #124]	; 0x7c
   1167c:	ldr	r3, [r6]
   11680:	mov	r0, r7
   11684:	cmp	r2, r3
   11688:	bne	11814 <tcgetattr@plt+0xaec>
   1168c:	add	sp, sp, #132	; 0x84
   11690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11694:	cmp	r9, #0
   11698:	beq	116a8 <tcgetattr@plt+0x980>
   1169c:	ldr	r3, [sp, #168]	; 0xa8
   116a0:	cmp	r3, #0
   116a4:	bne	1177c <tcgetattr@plt+0xa54>
   116a8:	mov	r7, #0
   116ac:	ldr	r0, [sp, #12]
   116b0:	bl	10b3c <free@plt>
   116b4:	mov	r0, r5
   116b8:	bl	10b3c <free@plt>
   116bc:	b	11678 <tcgetattr@plt+0x950>
   116c0:	mov	r2, #5
   116c4:	ldr	r1, [pc, #356]	; 11830 <tcgetattr@plt+0xb08>
   116c8:	mov	r0, fp
   116cc:	bl	10b6c <dcgettext@plt>
   116d0:	mov	r1, r4
   116d4:	bl	10cbc <warn@plt>
   116d8:	mov	r0, r5
   116dc:	bl	10b3c <free@plt>
   116e0:	mov	r7, #2
   116e4:	b	11678 <tcgetattr@plt+0x950>
   116e8:	add	r2, sp, #16
   116ec:	ldr	r1, [sp, #12]
   116f0:	mov	r0, #3
   116f4:	bl	10d1c <__lxstat64@plt>
   116f8:	cmp	r0, #0
   116fc:	bne	11624 <tcgetattr@plt+0x8fc>
   11700:	ldr	r3, [sp, #172]	; 0xac
   11704:	cmp	r3, #0
   11708:	beq	11784 <tcgetattr@plt+0xa5c>
   1170c:	cmp	r9, #0
   11710:	beq	116a8 <tcgetattr@plt+0x980>
   11714:	mov	r2, #5
   11718:	ldr	r1, [pc, #276]	; 11834 <tcgetattr@plt+0xb0c>
   1171c:	mov	r0, #0
   11720:	bl	10b6c <dcgettext@plt>
   11724:	mov	r3, r5
   11728:	mov	r2, r4
   1172c:	mov	r1, r0
   11730:	mov	r0, #1
   11734:	bl	10c68 <__printf_chk@plt>
   11738:	b	1169c <tcgetattr@plt+0x974>
   1173c:	mov	r2, #5
   11740:	ldr	r1, [pc, #240]	; 11838 <tcgetattr@plt+0xb10>
   11744:	mov	r0, r5
   11748:	bl	10b6c <dcgettext@plt>
   1174c:	mov	r1, r4
   11750:	bl	10cbc <warn@plt>
   11754:	mov	r7, #2
   11758:	b	11678 <tcgetattr@plt+0x950>
   1175c:	mov	r2, #5
   11760:	ldr	r1, [pc, #212]	; 1183c <tcgetattr@plt+0xb14>
   11764:	mov	r0, #0
   11768:	bl	10b6c <dcgettext@plt>
   1176c:	mov	r1, r4
   11770:	bl	10cbc <warn@plt>
   11774:	mov	r7, #2
   11778:	b	11678 <tcgetattr@plt+0x950>
   1177c:	mov	r7, #0
   11780:	b	1163c <tcgetattr@plt+0x914>
   11784:	ldr	r3, [sp, #176]	; 0xb0
   11788:	cmp	r3, #0
   1178c:	beq	11624 <tcgetattr@plt+0x8fc>
   11790:	ldr	r3, [sp, #168]	; 0xa8
   11794:	cmp	r3, #0
   11798:	bne	1170c <tcgetattr@plt+0x9e4>
   1179c:	ldr	r0, [sp, #12]
   117a0:	bl	1132c <tcgetattr@plt+0x604>
   117a4:	cmp	r0, #0
   117a8:	bne	1170c <tcgetattr@plt+0x9e4>
   117ac:	mov	r0, r4
   117b0:	bl	10b84 <unlink@plt>
   117b4:	cmp	r0, #0
   117b8:	blt	117f4 <tcgetattr@plt+0xacc>
   117bc:	mov	r1, r4
   117c0:	ldr	r0, [sp, #12]
   117c4:	bl	10cd4 <symlink@plt>
   117c8:	cmp	r0, #0
   117cc:	beq	11630 <tcgetattr@plt+0x908>
   117d0:	mov	r2, #5
   117d4:	ldr	r1, [pc, #100]	; 11840 <tcgetattr@plt+0xb18>
   117d8:	mov	r0, #0
   117dc:	bl	10b6c <dcgettext@plt>
   117e0:	mov	r1, r4
   117e4:	ldr	r2, [sp, #12]
   117e8:	bl	10cbc <warn@plt>
   117ec:	mov	r7, #2
   117f0:	b	116ac <tcgetattr@plt+0x984>
   117f4:	mov	r2, #5
   117f8:	ldr	r1, [pc, #68]	; 11844 <tcgetattr@plt+0xb1c>
   117fc:	mov	r0, #0
   11800:	bl	10b6c <dcgettext@plt>
   11804:	mov	r1, r4
   11808:	bl	10cbc <warn@plt>
   1180c:	mov	r7, #2
   11810:	b	116ac <tcgetattr@plt+0x984>
   11814:	bl	10b78 <__stack_chk_fail@plt>
   11818:	ldr	r1, [pc, #40]	; 11848 <tcgetattr@plt+0xb20>
   1181c:	mov	r0, #1
   11820:	bl	10b9c <err@plt>
   11824:	andeq	r2, r2, r8, lsr lr
   11828:	andeq	r1, r1, r0, ror #27
   1182c:	andeq	r1, r1, ip, asr sp
   11830:	andeq	r1, r1, r4, ror sp
   11834:	andeq	r1, r1, r8, lsl #27
   11838:	andeq	r1, r1, r4, lsr sp
   1183c:	andeq	r1, r1, r8, asr #26
   11840:	andeq	r1, r1, r4, asr #27
   11844:			; <UNDEFINED> instruction: 0x00011db0
   11848:	andeq	r1, r1, r8, lsl sp
   1184c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11850:	mov	r4, r2
   11854:	ldr	r6, [pc, #572]	; 11a98 <tcgetattr@plt+0xd70>
   11858:	sub	sp, sp, #16
   1185c:	mov	r5, #0
   11860:	ldr	r2, [r6]
   11864:	mov	r7, r0
   11868:	mov	r9, r1
   1186c:	mov	r0, r4
   11870:	mov	r1, r5
   11874:	mov	sl, r3
   11878:	str	r2, [sp, #12]
   1187c:	str	r5, [sp, #8]
   11880:	bl	10c80 <access@plt>
   11884:	subs	r8, r0, #0
   11888:	bne	119f0 <tcgetattr@plt+0xcc8>
   1188c:	mov	r1, #47	; 0x2f
   11890:	mov	r0, r7
   11894:	bl	10c20 <strchr@plt>
   11898:	cmp	r0, #0
   1189c:	beq	11928 <tcgetattr@plt+0xc00>
   118a0:	mov	r2, r4
   118a4:	add	r3, sp, #8
   118a8:	mov	r1, r9
   118ac:	str	r3, [sp]
   118b0:	mov	r0, r7
   118b4:	mov	r3, r4
   118b8:	bl	11434 <tcgetattr@plt+0x70c>
   118bc:	subs	r1, r0, #0
   118c0:	bne	1190c <tcgetattr@plt+0xbe4>
   118c4:	ldr	r3, [sp, #52]	; 0x34
   118c8:	ldr	r2, [sp, #56]	; 0x38
   118cc:	ldr	r0, [sp, #8]
   118d0:	orrs	r3, r3, r2
   118d4:	bne	11958 <tcgetattr@plt+0xc30>
   118d8:	ldr	r3, [sp, #48]	; 0x30
   118dc:	cmp	r3, #0
   118e0:	beq	11a24 <tcgetattr@plt+0xcfc>
   118e4:	cmp	sl, #0
   118e8:	mov	r8, #1
   118ec:	beq	11908 <tcgetattr@plt+0xbe0>
   118f0:	mov	r3, r0
   118f4:	mov	r2, r4
   118f8:	ldr	r1, [pc, #412]	; 11a9c <tcgetattr@plt+0xd74>
   118fc:	mov	r0, #1
   11900:	bl	10c68 <__printf_chk@plt>
   11904:	ldr	r0, [sp, #8]
   11908:	bl	10b3c <free@plt>
   1190c:	ldr	r2, [sp, #12]
   11910:	ldr	r3, [r6]
   11914:	mov	r0, r8
   11918:	cmp	r2, r3
   1191c:	bne	11a94 <tcgetattr@plt+0xd6c>
   11920:	add	sp, sp, #16
   11924:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11928:	mov	r1, #47	; 0x2f
   1192c:	mov	r0, r9
   11930:	bl	10c20 <strchr@plt>
   11934:	cmp	r0, #0
   11938:	bne	118a0 <tcgetattr@plt+0xb78>
   1193c:	mov	r1, #47	; 0x2f
   11940:	mov	r0, r4
   11944:	bl	10cb0 <strrchr@plt>
   11948:	cmp	r0, #0
   1194c:	movne	r2, r0
   11950:	moveq	r2, r4
   11954:	b	118a4 <tcgetattr@plt+0xb7c>
   11958:	bl	10c80 <access@plt>
   1195c:	subs	r8, r0, #0
   11960:	beq	1196c <tcgetattr@plt+0xc44>
   11964:	ldr	r0, [sp, #8]
   11968:	b	118d8 <tcgetattr@plt+0xbb0>
   1196c:	ldr	r3, [sp, #52]	; 0x34
   11970:	cmp	r3, #0
   11974:	beq	119ac <tcgetattr@plt+0xc84>
   11978:	cmp	sl, #0
   1197c:	beq	11904 <tcgetattr@plt+0xbdc>
   11980:	mov	r2, #5
   11984:	ldr	r1, [pc, #276]	; 11aa0 <tcgetattr@plt+0xd78>
   11988:	bl	10b6c <dcgettext@plt>
   1198c:	ldr	r2, [sp, #8]
   11990:	mov	r1, r0
   11994:	mov	r0, #1
   11998:	bl	10c68 <__printf_chk@plt>
   1199c:	ldr	r3, [sp, #48]	; 0x30
   119a0:	cmp	r3, #0
   119a4:	beq	11904 <tcgetattr@plt+0xbdc>
   119a8:	b	119e8 <tcgetattr@plt+0xcc0>
   119ac:	ldr	r3, [sp, #56]	; 0x38
   119b0:	cmp	r3, #0
   119b4:	beq	11964 <tcgetattr@plt+0xc3c>
   119b8:	ldr	r3, [sp, #48]	; 0x30
   119bc:	cmp	r3, #0
   119c0:	beq	11a10 <tcgetattr@plt+0xce8>
   119c4:	cmp	sl, #0
   119c8:	beq	11904 <tcgetattr@plt+0xbdc>
   119cc:	mov	r2, #5
   119d0:	ldr	r1, [pc, #200]	; 11aa0 <tcgetattr@plt+0xd78>
   119d4:	bl	10b6c <dcgettext@plt>
   119d8:	ldr	r2, [sp, #8]
   119dc:	mov	r1, r0
   119e0:	mov	r0, #1
   119e4:	bl	10c68 <__printf_chk@plt>
   119e8:	ldr	r0, [sp, #8]
   119ec:	b	118f0 <tcgetattr@plt+0xbc8>
   119f0:	mov	r2, #5
   119f4:	ldr	r1, [pc, #168]	; 11aa4 <tcgetattr@plt+0xd7c>
   119f8:	mov	r0, r5
   119fc:	bl	10b6c <dcgettext@plt>
   11a00:	mov	r1, r4
   11a04:	bl	10cbc <warn@plt>
   11a08:	mov	r8, #2
   11a0c:	b	1190c <tcgetattr@plt+0xbe4>
   11a10:	ldr	r0, [sp, #8]
   11a14:	bl	1132c <tcgetattr@plt+0x604>
   11a18:	cmp	r0, #0
   11a1c:	bne	11a40 <tcgetattr@plt+0xd18>
   11a20:	ldr	r0, [sp, #8]
   11a24:	mov	r1, r0
   11a28:	mov	r0, r4
   11a2c:	bl	10bf0 <rename@plt>
   11a30:	cmp	r0, #0
   11a34:	bne	11a6c <tcgetattr@plt+0xd44>
   11a38:	ldr	r0, [sp, #8]
   11a3c:	b	118e4 <tcgetattr@plt+0xbbc>
   11a40:	cmp	sl, #0
   11a44:	beq	11904 <tcgetattr@plt+0xbdc>
   11a48:	mov	r2, #5
   11a4c:	ldr	r1, [pc, #76]	; 11aa0 <tcgetattr@plt+0xd78>
   11a50:	mov	r0, r8
   11a54:	bl	10b6c <dcgettext@plt>
   11a58:	ldr	r2, [sp, #8]
   11a5c:	mov	r1, r0
   11a60:	mov	r0, #1
   11a64:	bl	10c68 <__printf_chk@plt>
   11a68:	b	11904 <tcgetattr@plt+0xbdc>
   11a6c:	mov	r2, #5
   11a70:	ldr	r1, [pc, #48]	; 11aa8 <tcgetattr@plt+0xd80>
   11a74:	mov	r0, #0
   11a78:	bl	10b6c <dcgettext@plt>
   11a7c:	mov	r1, r4
   11a80:	ldr	r2, [sp, #8]
   11a84:	bl	10cbc <warn@plt>
   11a88:	mov	r8, #2
   11a8c:	ldr	r0, [sp, #8]
   11a90:	b	11908 <tcgetattr@plt+0xbe0>
   11a94:	bl	10b78 <__stack_chk_fail@plt>
   11a98:	andeq	r2, r2, r8, lsr lr
   11a9c:	andeq	r1, r1, r0, lsr #27
   11aa0:	strdeq	r1, [r1], -r4
   11aa4:	andeq	r1, r1, r4, lsr sp
   11aa8:	andeq	r1, r1, r4, lsl lr
   11aac:	ldr	r3, [pc, #292]	; 11bd8 <tcgetattr@plt+0xeb0>
   11ab0:	push	{r4, r5, r6, lr}
   11ab4:	ldr	r4, [r3]
   11ab8:	mov	r0, r4
   11abc:	bl	10bb4 <__fpending@plt>
   11ac0:	mov	r6, r0
   11ac4:	mov	r0, r4
   11ac8:	bl	10b54 <ferror@plt>
   11acc:	mov	r5, r0
   11ad0:	mov	r0, r4
   11ad4:	bl	10c8c <fclose@plt>
   11ad8:	cmp	r5, #0
   11adc:	mov	r4, r0
   11ae0:	bne	11b88 <tcgetattr@plt+0xe60>
   11ae4:	cmp	r0, #0
   11ae8:	beq	11b04 <tcgetattr@plt+0xddc>
   11aec:	bl	10c38 <__errno_location@plt>
   11af0:	cmp	r6, #0
   11af4:	ldr	r3, [r0]
   11af8:	bne	11b60 <tcgetattr@plt+0xe38>
   11afc:	cmp	r3, #9
   11b00:	bne	11b60 <tcgetattr@plt+0xe38>
   11b04:	ldr	r3, [pc, #208]	; 11bdc <tcgetattr@plt+0xeb4>
   11b08:	ldr	r4, [r3]
   11b0c:	mov	r0, r4
   11b10:	bl	10bb4 <__fpending@plt>
   11b14:	mov	r6, r0
   11b18:	mov	r0, r4
   11b1c:	bl	10b54 <ferror@plt>
   11b20:	mov	r5, r0
   11b24:	mov	r0, r4
   11b28:	bl	10c8c <fclose@plt>
   11b2c:	cmp	r5, #0
   11b30:	mov	r4, r0
   11b34:	bne	11bbc <tcgetattr@plt+0xe94>
   11b38:	cmp	r0, #0
   11b3c:	popeq	{r4, r5, r6, pc}
   11b40:	cmp	r6, #0
   11b44:	bne	11b58 <tcgetattr@plt+0xe30>
   11b48:	bl	10c38 <__errno_location@plt>
   11b4c:	ldr	r3, [r0]
   11b50:	cmp	r3, #9
   11b54:	popeq	{r4, r5, r6, pc}
   11b58:	mov	r0, #1
   11b5c:	bl	10b60 <_exit@plt>
   11b60:	cmp	r3, #32
   11b64:	beq	11b04 <tcgetattr@plt+0xddc>
   11b68:	cmp	r3, #0
   11b6c:	beq	11ba4 <tcgetattr@plt+0xe7c>
   11b70:	mov	r2, #5
   11b74:	ldr	r1, [pc, #100]	; 11be0 <tcgetattr@plt+0xeb8>
   11b78:	mov	r0, #0
   11b7c:	bl	10b6c <dcgettext@plt>
   11b80:	bl	10cbc <warn@plt>
   11b84:	b	11b58 <tcgetattr@plt+0xe30>
   11b88:	bl	10c38 <__errno_location@plt>
   11b8c:	cmp	r4, #0
   11b90:	ldr	r3, [r0]
   11b94:	bne	11b60 <tcgetattr@plt+0xe38>
   11b98:	cmp	r3, #32
   11b9c:	strne	r4, [r0]
   11ba0:	beq	11b04 <tcgetattr@plt+0xddc>
   11ba4:	mov	r2, #5
   11ba8:	ldr	r1, [pc, #48]	; 11be0 <tcgetattr@plt+0xeb8>
   11bac:	mov	r0, #0
   11bb0:	bl	10b6c <dcgettext@plt>
   11bb4:	bl	10c2c <warnx@plt>
   11bb8:	b	11b58 <tcgetattr@plt+0xe30>
   11bbc:	cmp	r0, #0
   11bc0:	bne	11b58 <tcgetattr@plt+0xe30>
   11bc4:	bl	10c38 <__errno_location@plt>
   11bc8:	ldr	r3, [r0]
   11bcc:	cmp	r3, #32
   11bd0:	strne	r4, [r0]
   11bd4:	b	11b58 <tcgetattr@plt+0xe30>
   11bd8:	andeq	r3, r2, r4, lsr #32
   11bdc:	andeq	r3, r2, r8, lsl r0
   11be0:	andeq	r1, r1, ip, lsr #28
   11be4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11be8:	mov	r7, r0
   11bec:	ldr	r6, [pc, #72]	; 11c3c <tcgetattr@plt+0xf14>
   11bf0:	ldr	r5, [pc, #72]	; 11c40 <tcgetattr@plt+0xf18>
   11bf4:	add	r6, pc, r6
   11bf8:	add	r5, pc, r5
   11bfc:	sub	r6, r6, r5
   11c00:	mov	r8, r1
   11c04:	mov	r9, r2
   11c08:	bl	10af8 <strstr@plt-0x20>
   11c0c:	asrs	r6, r6, #2
   11c10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c14:	mov	r4, #0
   11c18:	add	r4, r4, #1
   11c1c:	ldr	r3, [r5], #4
   11c20:	mov	r2, r9
   11c24:	mov	r1, r8
   11c28:	mov	r0, r7
   11c2c:	blx	r3
   11c30:	cmp	r6, r4
   11c34:	bne	11c18 <tcgetattr@plt+0xef0>
   11c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c3c:	andeq	r1, r1, r8, lsr r2
   11c40:	andeq	r1, r1, r0, lsr r2
   11c44:	bx	lr
   11c48:	ldr	r3, [pc, #12]	; 11c5c <tcgetattr@plt+0xf34>
   11c4c:	mov	r1, #0
   11c50:	add	r3, pc, r3
   11c54:	ldr	r2, [r3]
   11c58:	b	10c44 <__cxa_atexit@plt>
   11c5c:	andeq	r1, r1, ip, lsr #7

Disassembly of section .fini:

00011c60 <.fini>:
   11c60:	push	{r3, lr}
   11c64:	pop	{r3, pc}
