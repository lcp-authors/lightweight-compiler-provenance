
raspbian-preinstalled/nstat:     file format elf32-littlearm


Disassembly of section .init:

0001196c <.init>:
   1196c:	push	{r3, lr}
   11970:	bl	12e18 <mount@plt+0xebc>
   11974:	pop	{r3, pc}

Disassembly of section .plt:

00011978 <fdopen@plt-0x14>:
   11978:	push	{lr}		; (str lr, [sp, #-4]!)
   1197c:	ldr	lr, [pc, #4]	; 11988 <fdopen@plt-0x4>
   11980:	add	lr, pc, lr
   11984:	ldr	pc, [lr, #8]!
   11988:	andeq	ip, r1, r8, ror r6

0001198c <fdopen@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #28, 20	; 0x1c000
   11994:	ldr	pc, [ip, #1656]!	; 0x678

00011998 <strstr@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #28, 20	; 0x1c000
   119a0:	ldr	pc, [ip, #1648]!	; 0x670

000119a4 <__getdelim@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #28, 20	; 0x1c000
   119ac:	ldr	pc, [ip, #1640]!	; 0x668

000119b0 <__strncat_chk@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #28, 20	; 0x1c000
   119b8:	ldr	pc, [ip, #1632]!	; 0x660

000119bc <strcmp@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #28, 20	; 0x1c000
   119c4:	ldr	pc, [ip, #1624]!	; 0x658

000119c8 <strtol@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #28, 20	; 0x1c000
   119d0:	ldr	pc, [ip, #1616]!	; 0x650

000119d4 <setsockopt@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #28, 20	; 0x1c000
   119dc:	ldr	pc, [ip, #1608]!	; 0x648

000119e0 <strcspn@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #28, 20	; 0x1c000
   119e8:	ldr	pc, [ip, #1600]!	; 0x640

000119ec <fflush@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #28, 20	; 0x1c000
   119f4:	ldr	pc, [ip, #1592]!	; 0x638

000119f8 <if_indextoname@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #28, 20	; 0x1c000
   11a00:	ldr	pc, [ip, #1584]!	; 0x630

00011a04 <getuid@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #28, 20	; 0x1c000
   11a0c:	ldr	pc, [ip, #1576]!	; 0x628

00011a10 <strchrnul@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #28, 20	; 0x1c000
   11a18:	ldr	pc, [ip, #1568]!	; 0x620

00011a1c <free@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #28, 20	; 0x1c000
   11a24:	ldr	pc, [ip, #1560]!	; 0x618

00011a28 <unshare@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #28, 20	; 0x1c000
   11a30:	ldr	pc, [ip, #1552]!	; 0x610

00011a34 <fgets@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #28, 20	; 0x1c000
   11a3c:	ldr	pc, [ip, #1544]!	; 0x608

00011a40 <inet_pton@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #28, 20	; 0x1c000
   11a48:	ldr	pc, [ip, #1536]!	; 0x600

00011a4c <memcpy@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #28, 20	; 0x1c000
   11a54:	ldr	pc, [ip, #1528]!	; 0x5f8

00011a58 <signal@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #28, 20	; 0x1c000
   11a60:	ldr	pc, [ip, #1520]!	; 0x5f0

00011a64 <time@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #28, 20	; 0x1c000
   11a6c:	ldr	pc, [ip, #1512]!	; 0x5e8

00011a70 <sendmsg@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #28, 20	; 0x1c000
   11a78:	ldr	pc, [ip, #1504]!	; 0x5e0

00011a7c <ftruncate64@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #28, 20	; 0x1c000
   11a84:	ldr	pc, [ip, #1496]!	; 0x5d8

00011a88 <ftell@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #28, 20	; 0x1c000
   11a90:	ldr	pc, [ip, #1488]!	; 0x5d0

00011a94 <memcmp@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #28, 20	; 0x1c000
   11a9c:	ldr	pc, [ip, #1480]!	; 0x5c8

00011aa0 <mnl_attr_parse@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #28, 20	; 0x1c000
   11aa8:	ldr	pc, [ip, #1472]!	; 0x5c0

00011aac <gethostbyaddr@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #28, 20	; 0x1c000
   11ab4:	ldr	pc, [ip, #1464]!	; 0x5b8

00011ab8 <strdup@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #28, 20	; 0x1c000
   11ac0:	ldr	pc, [ip, #1456]!	; 0x5b0

00011ac4 <__stack_chk_fail@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #28, 20	; 0x1c000
   11acc:	ldr	pc, [ip, #1448]!	; 0x5a8

00011ad0 <rewind@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #28, 20	; 0x1c000
   11ad8:	ldr	pc, [ip, #1440]!	; 0x5a0

00011adc <sysconf@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #28, 20	; 0x1c000
   11ae4:	ldr	pc, [ip, #1432]!	; 0x598

00011ae8 <unlink@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #28, 20	; 0x1c000
   11af0:	ldr	pc, [ip, #1424]!	; 0x590

00011af4 <realloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #28, 20	; 0x1c000
   11afc:	ldr	pc, [ip, #1416]!	; 0x588

00011b00 <setns@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #28, 20	; 0x1c000
   11b08:	ldr	pc, [ip, #1408]!	; 0x580

00011b0c <strcasecmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #28, 20	; 0x1c000
   11b14:	ldr	pc, [ip, #1400]!	; 0x578

00011b18 <geteuid@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #28, 20	; 0x1c000
   11b20:	ldr	pc, [ip, #1392]!	; 0x570

00011b24 <perror@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #28, 20	; 0x1c000
   11b2c:	ldr	pc, [ip, #1384]!	; 0x568

00011b30 <poll@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #28, 20	; 0x1c000
   11b38:	ldr	pc, [ip, #1376]!	; 0x560

00011b3c <accept@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #28, 20	; 0x1c000
   11b44:	ldr	pc, [ip, #1368]!	; 0x558

00011b48 <__fxstat64@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #28, 20	; 0x1c000
   11b50:	ldr	pc, [ip, #1360]!	; 0x550

00011b54 <__memcpy_chk@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #28, 20	; 0x1c000
   11b5c:	ldr	pc, [ip, #1352]!	; 0x548

00011b60 <sethostent@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #28, 20	; 0x1c000
   11b68:	ldr	pc, [ip, #1344]!	; 0x540

00011b6c <fwrite@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #28, 20	; 0x1c000
   11b74:	ldr	pc, [ip, #1336]!	; 0x538

00011b78 <strcat@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #28, 20	; 0x1c000
   11b80:	ldr	pc, [ip, #1328]!	; 0x530

00011b84 <getsockopt@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #28, 20	; 0x1c000
   11b8c:	ldr	pc, [ip, #1320]!	; 0x528

00011b90 <asctime@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #28, 20	; 0x1c000
   11b98:	ldr	pc, [ip, #1312]!	; 0x520

00011b9c <strtoll@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #28, 20	; 0x1c000
   11ba4:	ldr	pc, [ip, #1304]!	; 0x518

00011ba8 <waitpid@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #28, 20	; 0x1c000
   11bb0:	ldr	pc, [ip, #1296]!	; 0x510

00011bb4 <strcpy@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #28, 20	; 0x1c000
   11bbc:	ldr	pc, [ip, #1288]!	; 0x508

00011bc0 <gettimeofday@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #28, 20	; 0x1c000
   11bc8:	ldr	pc, [ip, #1280]!	; 0x500

00011bcc <fread@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #28, 20	; 0x1c000
   11bd4:	ldr	pc, [ip, #1272]!	; 0x4f8

00011bd8 <daemon@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #28, 20	; 0x1c000
   11be0:	ldr	pc, [ip, #1264]!	; 0x4f0

00011be4 <cap_get_flag@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #28, 20	; 0x1c000
   11bec:	ldr	pc, [ip, #1256]!	; 0x4e8

00011bf0 <opendir@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #28, 20	; 0x1c000
   11bf8:	ldr	pc, [ip, #1248]!	; 0x4e0

00011bfc <umount2@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #28, 20	; 0x1c000
   11c04:	ldr	pc, [ip, #1240]!	; 0x4d8

00011c08 <fnmatch@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #28, 20	; 0x1c000
   11c10:	ldr	pc, [ip, #1232]!	; 0x4d0

00011c14 <open64@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #28, 20	; 0x1c000
   11c1c:	ldr	pc, [ip, #1224]!	; 0x4c8

00011c20 <getenv@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #28, 20	; 0x1c000
   11c28:	ldr	pc, [ip, #1216]!	; 0x4c0

00011c2c <cap_set_proc@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #28, 20	; 0x1c000
   11c34:	ldr	pc, [ip, #1208]!	; 0x4b8

00011c38 <malloc@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #28, 20	; 0x1c000
   11c40:	ldr	pc, [ip, #1200]!	; 0x4b0

00011c44 <__libc_start_main@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #28, 20	; 0x1c000
   11c4c:	ldr	pc, [ip, #1192]!	; 0x4a8

00011c50 <strerror@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #28, 20	; 0x1c000
   11c58:	ldr	pc, [ip, #1184]!	; 0x4a0

00011c5c <strftime@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #28, 20	; 0x1c000
   11c64:	ldr	pc, [ip, #1176]!	; 0x498

00011c68 <__vfprintf_chk@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #28, 20	; 0x1c000
   11c70:	ldr	pc, [ip, #1168]!	; 0x490

00011c74 <localtime@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #28, 20	; 0x1c000
   11c7c:	ldr	pc, [ip, #1160]!	; 0x488

00011c80 <__gmon_start__@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #28, 20	; 0x1c000
   11c88:	ldr	pc, [ip, #1152]!	; 0x480

00011c8c <getopt_long@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #28, 20	; 0x1c000
   11c94:	ldr	pc, [ip, #1144]!	; 0x478

00011c98 <__ctype_b_loc@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #28, 20	; 0x1c000
   11ca0:	ldr	pc, [ip, #1136]!	; 0x470

00011ca4 <getpid@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #28, 20	; 0x1c000
   11cac:	ldr	pc, [ip, #1128]!	; 0x468

00011cb0 <exit@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #28, 20	; 0x1c000
   11cb8:	ldr	pc, [ip, #1120]!	; 0x460

00011cbc <flock@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #28, 20	; 0x1c000
   11cc4:	ldr	pc, [ip, #1112]!	; 0x458

00011cc8 <strtoul@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #28, 20	; 0x1c000
   11cd0:	ldr	pc, [ip, #1104]!	; 0x450

00011cd4 <strlen@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #28, 20	; 0x1c000
   11cdc:	ldr	pc, [ip, #1096]!	; 0x448

00011ce0 <strchr@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #28, 20	; 0x1c000
   11ce8:	ldr	pc, [ip, #1088]!	; 0x440

00011cec <__errno_location@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #28, 20	; 0x1c000
   11cf4:	ldr	pc, [ip, #1080]!	; 0x438

00011cf8 <cap_get_proc@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #28, 20	; 0x1c000
   11d00:	ldr	pc, [ip, #1072]!	; 0x430

00011d04 <__sprintf_chk@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #28, 20	; 0x1c000
   11d0c:	ldr	pc, [ip, #1064]!	; 0x428

00011d10 <snprintf@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #28, 20	; 0x1c000
   11d18:	ldr	pc, [ip, #1056]!	; 0x420

00011d1c <bind@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #28, 20	; 0x1c000
   11d24:	ldr	pc, [ip, #1048]!	; 0x418

00011d28 <memset@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #28, 20	; 0x1c000
   11d30:	ldr	pc, [ip, #1040]!	; 0x410

00011d34 <putchar@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #28, 20	; 0x1c000
   11d3c:	ldr	pc, [ip, #1032]!	; 0x408

00011d40 <strncpy@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #28, 20	; 0x1c000
   11d48:	ldr	pc, [ip, #1024]!	; 0x400

00011d4c <fscanf@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #28, 20	; 0x1c000
   11d54:	ldr	pc, [ip, #1016]!	; 0x3f8

00011d58 <strtoull@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #28, 20	; 0x1c000
   11d60:	ldr	pc, [ip, #1008]!	; 0x3f0

00011d64 <mnl_attr_validate@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #28, 20	; 0x1c000
   11d6c:	ldr	pc, [ip, #1000]!	; 0x3e8

00011d70 <__printf_chk@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #28, 20	; 0x1c000
   11d78:	ldr	pc, [ip, #992]!	; 0x3e0

00011d7c <statvfs64@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #28, 20	; 0x1c000
   11d84:	ldr	pc, [ip, #984]!	; 0x3d8

00011d88 <strtod@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #28, 20	; 0x1c000
   11d90:	ldr	pc, [ip, #976]!	; 0x3d0

00011d94 <fileno@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #28, 20	; 0x1c000
   11d9c:	ldr	pc, [ip, #968]!	; 0x3c8

00011da0 <__fprintf_chk@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #28, 20	; 0x1c000
   11da8:	ldr	pc, [ip, #960]!	; 0x3c0

00011dac <mnl_attr_get_str@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #28, 20	; 0x1c000
   11db4:	ldr	pc, [ip, #952]!	; 0x3b8

00011db8 <mnl_attr_type_valid@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #28, 20	; 0x1c000
   11dc0:	ldr	pc, [ip, #944]!	; 0x3b0

00011dc4 <fclose@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #28, 20	; 0x1c000
   11dcc:	ldr	pc, [ip, #936]!	; 0x3a8

00011dd0 <mnl_attr_get_type@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #28, 20	; 0x1c000
   11dd8:	ldr	pc, [ip, #928]!	; 0x3a0

00011ddc <mnl_nlmsg_get_payload_len@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #28, 20	; 0x1c000
   11de4:	ldr	pc, [ip, #920]!	; 0x398

00011de8 <__fread_chk@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #28, 20	; 0x1c000
   11df0:	ldr	pc, [ip, #912]!	; 0x390

00011df4 <fork@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #28, 20	; 0x1c000
   11dfc:	ldr	pc, [ip, #904]!	; 0x388

00011e00 <strrchr@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #28, 20	; 0x1c000
   11e08:	ldr	pc, [ip, #896]!	; 0x380

00011e0c <listen@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #28, 20	; 0x1c000
   11e14:	ldr	pc, [ip, #888]!	; 0x378

00011e18 <cap_clear@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #28, 20	; 0x1c000
   11e20:	ldr	pc, [ip, #880]!	; 0x370

00011e24 <fputc@plt>:
   11e24:	add	ip, pc, #0, 12
   11e28:	add	ip, ip, #28, 20	; 0x1c000
   11e2c:	ldr	pc, [ip, #872]!	; 0x368

00011e30 <mnl_nlmsg_get_payload@plt>:
   11e30:	add	ip, pc, #0, 12
   11e34:	add	ip, ip, #28, 20	; 0x1c000
   11e38:	ldr	pc, [ip, #864]!	; 0x360

00011e3c <sscanf@plt>:
   11e3c:	add	ip, pc, #0, 12
   11e40:	add	ip, ip, #28, 20	; 0x1c000
   11e44:	ldr	pc, [ip, #856]!	; 0x358

00011e48 <readdir64@plt>:
   11e48:	add	ip, pc, #0, 12
   11e4c:	add	ip, ip, #28, 20	; 0x1c000
   11e50:	ldr	pc, [ip, #848]!	; 0x350

00011e54 <cap_free@plt>:
   11e54:	add	ip, pc, #0, 12
   11e58:	add	ip, ip, #28, 20	; 0x1c000
   11e5c:	ldr	pc, [ip, #840]!	; 0x348

00011e60 <exp@plt>:
   11e60:	add	ip, pc, #0, 12
   11e64:	add	ip, ip, #28, 20	; 0x1c000
   11e68:	ldr	pc, [ip, #832]!	; 0x340

00011e6c <mnl_attr_get_u32@plt>:
   11e6c:	add	ip, pc, #0, 12
   11e70:	add	ip, ip, #28, 20	; 0x1c000
   11e74:	ldr	pc, [ip, #824]!	; 0x338

00011e78 <putc@plt>:
   11e78:	add	ip, pc, #0, 12
   11e7c:	add	ip, ip, #28, 20	; 0x1c000
   11e80:	ldr	pc, [ip, #816]!	; 0x330

00011e84 <getsockname@plt>:
   11e84:	add	ip, pc, #0, 12
   11e88:	add	ip, ip, #28, 20	; 0x1c000
   11e8c:	ldr	pc, [ip, #808]!	; 0x328

00011e90 <recvmsg@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #28, 20	; 0x1c000
   11e98:	ldr	pc, [ip, #800]!	; 0x320

00011e9c <fopen64@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #28, 20	; 0x1c000
   11ea4:	ldr	pc, [ip, #792]!	; 0x318

00011ea8 <inet_ntop@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #28, 20	; 0x1c000
   11eb0:	ldr	pc, [ip, #784]!	; 0x310

00011eb4 <socket@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #28, 20	; 0x1c000
   11ebc:	ldr	pc, [ip, #776]!	; 0x308

00011ec0 <random@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #28, 20	; 0x1c000
   11ec8:	ldr	pc, [ip, #768]!	; 0x300

00011ecc <if_nametoindex@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #28, 20	; 0x1c000
   11ed4:	ldr	pc, [ip, #760]!	; 0x2f8

00011ed8 <isatty@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #28, 20	; 0x1c000
   11ee0:	ldr	pc, [ip, #752]!	; 0x2f0

00011ee4 <strncmp@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #28, 20	; 0x1c000
   11eec:	ldr	pc, [ip, #744]!	; 0x2e8

00011ef0 <abort@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #28, 20	; 0x1c000
   11ef8:	ldr	pc, [ip, #736]!	; 0x2e0

00011efc <recv@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #28, 20	; 0x1c000
   11f04:	ldr	pc, [ip, #728]!	; 0x2d8

00011f08 <close@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #28, 20	; 0x1c000
   11f10:	ldr	pc, [ip, #720]!	; 0x2d0

00011f14 <send@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #28, 20	; 0x1c000
   11f1c:	ldr	pc, [ip, #712]!	; 0x2c8

00011f20 <connect@plt>:
   11f20:	add	ip, pc, #0, 12
   11f24:	add	ip, ip, #28, 20	; 0x1c000
   11f28:	ldr	pc, [ip, #704]!	; 0x2c0

00011f2c <closedir@plt>:
   11f2c:	add	ip, pc, #0, 12
   11f30:	add	ip, ip, #28, 20	; 0x1c000
   11f34:	ldr	pc, [ip, #696]!	; 0x2b8

00011f38 <__snprintf_chk@plt>:
   11f38:	add	ip, pc, #0, 12
   11f3c:	add	ip, ip, #28, 20	; 0x1c000
   11f40:	ldr	pc, [ip, #688]!	; 0x2b0

00011f44 <strspn@plt>:
   11f44:	add	ip, pc, #0, 12
   11f48:	add	ip, ip, #28, 20	; 0x1c000
   11f4c:	ldr	pc, [ip, #680]!	; 0x2a8

00011f50 <__assert_fail@plt>:
   11f50:	add	ip, pc, #0, 12
   11f54:	add	ip, ip, #28, 20	; 0x1c000
   11f58:	ldr	pc, [ip, #672]!	; 0x2a0

00011f5c <mount@plt>:
   11f5c:	add	ip, pc, #0, 12
   11f60:	add	ip, ip, #28, 20	; 0x1c000
   11f64:	ldr	pc, [ip, #664]!	; 0x298

Disassembly of section .text:

00011f68 <.text>:
   11f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f6c:	vpush	{d8}
   11f70:	ldr	r3, [pc, #1472]	; 12538 <mount@plt+0x5dc>
   11f74:	ldr	r8, [pc, #1472]	; 1253c <mount@plt+0x5e0>
   11f78:	ldr	r5, [pc, #1472]	; 12540 <mount@plt+0x5e4>
   11f7c:	ldr	r9, [pc, #1472]	; 12544 <mount@plt+0x5e8>
   11f80:	sub	sp, sp, #276	; 0x114
   11f84:	ldr	r3, [r3]
   11f88:	mov	r6, r0
   11f8c:	mov	r7, r1
   11f90:	str	r3, [sp, #268]	; 0x10c
   11f94:	mov	r4, #0
   11f98:	str	r4, [sp]
   11f9c:	mov	r3, r8
   11fa0:	mov	r2, r5
   11fa4:	mov	r1, r7
   11fa8:	mov	r0, r6
   11fac:	bl	11c8c <getopt_long@plt>
   11fb0:	cmn	r0, #1
   11fb4:	beq	12174 <mount@plt+0x218>
   11fb8:	sub	r0, r0, #86	; 0x56
   11fbc:	cmp	r0, #36	; 0x24
   11fc0:	ldrls	pc, [pc, r0, lsl #2]
   11fc4:	b	12154 <mount@plt+0x1f8>
   11fc8:	andeq	r2, r1, ip, lsr r1
   11fcc:	andeq	r2, r1, r4, asr r1
   11fd0:	andeq	r2, r1, r4, asr r1
   11fd4:	andeq	r2, r1, r4, asr r1
   11fd8:	andeq	r2, r1, r4, asr r1
   11fdc:	andeq	r2, r1, r4, asr r1
   11fe0:	andeq	r2, r1, r4, asr r1
   11fe4:	andeq	r2, r1, r4, asr r1
   11fe8:	andeq	r2, r1, r4, asr r1
   11fec:	andeq	r2, r1, r4, asr r1
   11ff0:	andeq	r2, r1, r4, asr r1
   11ff4:	andeq	r2, r1, ip, lsr #2
   11ff8:	andeq	r2, r1, r4, asr r1
   11ffc:	andeq	r2, r1, r4, asr r1
   12000:	andeq	r2, r1, r4, lsl #2
   12004:	andeq	r2, r1, r4, asr r1
   12008:	andeq	r2, r1, r4, asr r1
   1200c:	andeq	r2, r1, r4, asr r1
   12010:	andeq	r2, r1, r4, asr r1
   12014:	andeq	r2, r1, r4, asr r1
   12018:	strdeq	r2, [r1], -r4
   1201c:	andeq	r2, r1, r4, asr r1
   12020:	andeq	r2, r1, r4, asr r1
   12024:	andeq	r2, r1, r4, asr r1
   12028:	andeq	r2, r1, r4, ror #1
   1202c:	andeq	r2, r1, r4, asr r1
   12030:	ldrdeq	r2, [r1], -r8
   12034:	andeq	r2, r1, r4, asr r1
   12038:	andeq	r2, r1, r8, asr #1
   1203c:	strheq	r2, [r1], -r8
   12040:	andeq	r2, r1, ip, rrx
   12044:	andeq	r2, r1, r4, asr r1
   12048:	andeq	r2, r1, ip, lsr r1
   1204c:	andeq	r2, r1, r4, asr r1
   12050:	andeq	r2, r1, r4, asr r1
   12054:	andeq	r2, r1, r4, asr r1
   12058:	andeq	r2, r1, ip, asr r0
   1205c:	ldr	r3, [pc, #1252]	; 12548 <mount@plt+0x5ec>
   12060:	mov	r2, #1
   12064:	str	r2, [r3]
   12068:	b	11f94 <mount@plt+0x38>
   1206c:	ldr	r3, [pc, #1240]	; 1254c <mount@plt+0x5f0>
   12070:	ldr	r4, [pc, #1240]	; 12550 <mount@plt+0x5f4>
   12074:	ldr	r1, [pc, #1240]	; 12554 <mount@plt+0x5f8>
   12078:	ldr	r0, [r3]
   1207c:	mov	r2, r4
   12080:	bl	11e3c <sscanf@plt>
   12084:	cmp	r0, #1
   12088:	bne	12098 <mount@plt+0x13c>
   1208c:	ldr	r3, [r4]
   12090:	cmp	r3, #0
   12094:	bgt	11f94 <mount@plt+0x38>
   12098:	ldr	r3, [pc, #1208]	; 12558 <mount@plt+0x5fc>
   1209c:	mov	r2, #37	; 0x25
   120a0:	mov	r1, #1
   120a4:	ldr	r3, [r3]
   120a8:	ldr	r0, [pc, #1196]	; 1255c <mount@plt+0x600>
   120ac:	bl	11b6c <fwrite@plt>
   120b0:	mvn	r0, #0
   120b4:	bl	11cb0 <exit@plt>
   120b8:	ldr	r3, [pc, #1184]	; 12560 <mount@plt+0x604>
   120bc:	mov	r2, #1
   120c0:	str	r2, [r3]
   120c4:	b	11f94 <mount@plt+0x38>
   120c8:	ldr	r3, [pc, #1172]	; 12564 <mount@plt+0x608>
   120cc:	mov	r2, #1
   120d0:	str	r2, [r3]
   120d4:	b	11f94 <mount@plt+0x38>
   120d8:	mov	r3, #1
   120dc:	str	r3, [r9]
   120e0:	b	11f94 <mount@plt+0x38>
   120e4:	ldr	r3, [pc, #1148]	; 12568 <mount@plt+0x60c>
   120e8:	mov	r2, #1
   120ec:	str	r2, [r3]
   120f0:	b	11f94 <mount@plt+0x38>
   120f4:	ldr	r3, [pc, #1136]	; 1256c <mount@plt+0x610>
   120f8:	mov	r2, #1
   120fc:	str	r2, [r3]
   12100:	b	11f94 <mount@plt+0x38>
   12104:	ldr	r3, [pc, #1088]	; 1254c <mount@plt+0x5f0>
   12108:	mov	r2, #10
   1210c:	mov	r1, #0
   12110:	ldr	r0, [r3]
   12114:	bl	119c8 <strtol@plt>
   12118:	mov	r3, #1000	; 0x3e8
   1211c:	ldr	r2, [pc, #1100]	; 12570 <mount@plt+0x614>
   12120:	mul	r0, r3, r0
   12124:	str	r0, [r2]
   12128:	b	11f94 <mount@plt+0x38>
   1212c:	ldr	r3, [pc, #1088]	; 12574 <mount@plt+0x618>
   12130:	mov	r2, #1
   12134:	str	r2, [r3]
   12138:	b	11f94 <mount@plt+0x38>
   1213c:	ldr	r2, [pc, #1076]	; 12578 <mount@plt+0x61c>
   12140:	ldr	r1, [pc, #1076]	; 1257c <mount@plt+0x620>
   12144:	mov	r0, #1
   12148:	bl	11d70 <__printf_chk@plt>
   1214c:	mov	r0, #0
   12150:	bl	11cb0 <exit@plt>
   12154:	ldr	r3, [pc, #1020]	; 12558 <mount@plt+0x5fc>
   12158:	mov	r2, #552	; 0x228
   1215c:	mov	r1, #1
   12160:	ldr	r3, [r3]
   12164:	ldr	r0, [pc, #1044]	; 12580 <mount@plt+0x624>
   12168:	bl	11b6c <fwrite@plt>
   1216c:	mvn	r0, #0
   12170:	bl	11cb0 <exit@plt>
   12174:	ldr	r3, [pc, #1032]	; 12584 <mount@plt+0x628>
   12178:	mov	r8, #1
   1217c:	strb	r4, [sp, #158]	; 0x9e
   12180:	strh	r8, [sp, #156]	; 0x9c
   12184:	ldr	r4, [r3]
   12188:	bl	11a04 <getuid@plt>
   1218c:	ldr	sl, [pc, #988]	; 12570 <mount@plt+0x614>
   12190:	ldr	r3, [pc, #1008]	; 12588 <mount@plt+0x62c>
   12194:	mov	r1, r8
   12198:	mov	r2, #107	; 0x6b
   1219c:	str	r0, [sp]
   121a0:	add	r0, sp, #159	; 0x9f
   121a4:	bl	11d04 <__sprintf_chk@plt>
   121a8:	ldr	r3, [sl]
   121ac:	cmp	r3, #0
   121b0:	ble	12294 <mount@plt+0x338>
   121b4:	ldr	r1, [pc, #916]	; 12550 <mount@plt+0x5f4>
   121b8:	vmov	s15, r3
   121bc:	mov	r3, #1000	; 0x3e8
   121c0:	ldr	r2, [r1]
   121c4:	vldr	d0, [pc, #860]	; 12528 <mount@plt+0x5cc>
   121c8:	cmp	r2, #0
   121cc:	moveq	r2, #60	; 0x3c
   121d0:	streq	r2, [r1]
   121d4:	ldr	r1, [pc, #884]	; 12550 <mount@plt+0x5f4>
   121d8:	vcvt.f64.s32	d7, s15
   121dc:	ldr	r2, [r1]
   121e0:	mul	r3, r3, r2
   121e4:	vmul.f64	d7, d7, d0
   121e8:	vmov	s13, r3
   121ec:	str	r3, [r1]
   121f0:	vcvt.f64.s32	d0, s13
   121f4:	vdiv.f64	d0, d7, d0
   121f8:	bl	11e60 <exp@plt>
   121fc:	vldr	d7, [pc, #812]	; 12530 <mount@plt+0x5d4>
   12200:	ldr	r3, [pc, #900]	; 1258c <mount@plt+0x630>
   12204:	mov	r1, #1
   12208:	mov	r0, r1
   1220c:	mov	r2, #0
   12210:	vdiv.f64	d0, d7, d0
   12214:	vsub.f64	d7, d7, d0
   12218:	vstr	d7, [r3]
   1221c:	bl	11eb4 <socket@plt>
   12220:	subs	r3, r0, #0
   12224:	str	r3, [sp, #28]
   12228:	blt	12284 <mount@plt+0x328>
   1222c:	add	r0, sp, #159	; 0x9f
   12230:	bl	11cd4 <strlen@plt>
   12234:	add	r1, sp, #156	; 0x9c
   12238:	add	r2, r0, #3
   1223c:	ldr	r0, [sp, #28]
   12240:	bl	11d1c <bind@plt>
   12244:	cmp	r0, #0
   12248:	blt	12470 <mount@plt+0x514>
   1224c:	mov	r1, #5
   12250:	ldr	r0, [sp, #28]
   12254:	bl	11e0c <listen@plt>
   12258:	cmp	r0, #0
   1225c:	blt	124cc <mount@plt+0x570>
   12260:	mov	r1, #0
   12264:	mov	r0, r1
   12268:	bl	11bd8 <daemon@plt>
   1226c:	subs	r4, r0, #0
   12270:	beq	125d8 <mount@plt+0x67c>
   12274:	ldr	r0, [pc, #788]	; 12590 <mount@plt+0x634>
   12278:	bl	11b24 <perror@plt>
   1227c:	mvn	r0, #0
   12280:	bl	11cb0 <exit@plt>
   12284:	ldr	r0, [pc, #776]	; 12594 <mount@plt+0x638>
   12288:	bl	11b24 <perror@plt>
   1228c:	mvn	r0, #0
   12290:	bl	11cb0 <exit@plt>
   12294:	ldr	r3, [pc, #764]	; 12598 <mount@plt+0x63c>
   12298:	ldr	r5, [pc, #764]	; 1259c <mount@plt+0x640>
   1229c:	sub	r6, r6, r4
   122a0:	add	r7, r7, r4, lsl #2
   122a4:	ldr	r0, [pc, #756]	; 125a0 <mount@plt+0x644>
   122a8:	str	r6, [r5]
   122ac:	str	r7, [r3]
   122b0:	bl	11c20 <getenv@plt>
   122b4:	subs	r6, r0, #0
   122b8:	beq	12948 <mount@plt+0x9ec>
   122bc:	ldr	r3, [pc, #672]	; 12564 <mount@plt+0x608>
   122c0:	ldr	r3, [r3]
   122c4:	cmp	r3, #0
   122c8:	bne	124dc <mount@plt+0x580>
   122cc:	ldr	r4, [pc, #672]	; 12574 <mount@plt+0x618>
   122d0:	ldr	r3, [r4]
   122d4:	cmp	r3, #0
   122d8:	beq	12480 <mount@plt+0x524>
   122dc:	ldr	r9, [pc, #636]	; 12560 <mount@plt+0x604>
   122e0:	ldr	r3, [r9]
   122e4:	cmp	r3, #0
   122e8:	beq	12480 <mount@plt+0x524>
   122ec:	mov	r8, #0
   122f0:	mov	r1, #1
   122f4:	mov	r0, r1
   122f8:	mov	r2, #0
   122fc:	bl	11eb4 <socket@plt>
   12300:	subs	r6, r0, #0
   12304:	bge	12a30 <mount@plt+0xad4>
   12308:	ldr	r7, [pc, #660]	; 125a4 <mount@plt+0x648>
   1230c:	ldr	r6, [pc, #660]	; 125a8 <mount@plt+0x64c>
   12310:	ldr	r3, [r7]
   12314:	cmp	r3, #0
   12318:	beq	1233c <mount@plt+0x3e0>
   1231c:	ldrb	r3, [r6]
   12320:	cmp	r3, #0
   12324:	beq	1233c <mount@plt+0x3e0>
   12328:	ldr	r1, [pc, #636]	; 125ac <mount@plt+0x650>
   1232c:	mov	r0, r6
   12330:	bl	119bc <strcmp@plt>
   12334:	cmp	r0, #0
   12338:	bne	12c20 <mount@plt+0xcc4>
   1233c:	bl	1350c <mount@plt+0x15b0>
   12340:	bl	13154 <mount@plt+0x11f8>
   12344:	bl	13548 <mount@plt+0x15ec>
   12348:	bl	13190 <mount@plt+0x1234>
   1234c:	ldrb	r3, [r6]
   12350:	cmp	r3, #0
   12354:	beq	12be0 <mount@plt+0xc84>
   12358:	ldr	r3, [pc, #520]	; 12568 <mount@plt+0x60c>
   1235c:	ldr	r3, [r3]
   12360:	cmp	r3, #0
   12364:	bne	12510 <mount@plt+0x5b4>
   12368:	ldr	r3, [pc, #576]	; 125b0 <mount@plt+0x654>
   1236c:	ldr	r2, [r4]
   12370:	ldr	r3, [r3]
   12374:	cmp	r2, #0
   12378:	str	r3, [sp, #24]
   1237c:	bne	12c00 <mount@plt+0xca4>
   12380:	ldr	r4, [pc, #540]	; 125a4 <mount@plt+0x648>
   12384:	ldr	sl, [r4]
   12388:	cmp	sl, #0
   1238c:	beq	12c00 <mount@plt+0xca4>
   12390:	ldr	r3, [pc, #468]	; 1256c <mount@plt+0x610>
   12394:	ldr	r3, [r3]
   12398:	cmp	r3, #0
   1239c:	streq	r3, [sp, #48]	; 0x30
   123a0:	bne	12c54 <mount@plt+0xcf8>
   123a4:	ldr	r3, [pc, #508]	; 125a8 <mount@plt+0x64c>
   123a8:	ldr	r2, [pc, #516]	; 125b4 <mount@plt+0x658>
   123ac:	mov	r1, #1
   123b0:	ldr	r0, [sp, #24]
   123b4:	bl	11da0 <__fprintf_chk@plt>
   123b8:	ldr	r3, [pc, #504]	; 125b8 <mount@plt+0x65c>
   123bc:	mov	r7, r8
   123c0:	mov	fp, r9
   123c4:	ldr	r4, [r3]
   123c8:	cmp	r4, #0
   123cc:	beq	124e8 <mount@plt+0x58c>
   123d0:	ldrd	r8, [r4, #8]
   123d4:	mov	r6, sl
   123d8:	b	123f8 <mount@plt+0x49c>
   123dc:	ldr	r1, [r4, #4]
   123e0:	ldr	r0, [r6, #4]
   123e4:	bl	119bc <strcmp@plt>
   123e8:	ldr	r3, [r6]
   123ec:	cmp	r0, #0
   123f0:	beq	1291c <mount@plt+0x9c0>
   123f4:	mov	r6, r3
   123f8:	cmp	r6, #0
   123fc:	bne	123dc <mount@plt+0x480>
   12400:	mov	r2, r6
   12404:	orrs	r3, r8, r9
   12408:	ldr	r3, [pc, #312]	; 12548 <mount@plt+0x5ec>
   1240c:	ldr	r1, [r3]
   12410:	moveq	r3, #1
   12414:	movne	r3, #0
   12418:	cmp	r1, #0
   1241c:	movne	r3, #0
   12420:	cmp	r3, #0
   12424:	bne	12b84 <mount@plt+0xc28>
   12428:	ldr	r3, [r5]
   1242c:	cmp	r3, #0
   12430:	beq	1244c <mount@plt+0x4f0>
   12434:	ldr	r0, [r4, #4]
   12438:	str	r2, [sp, #28]
   1243c:	bl	13584 <mount@plt+0x1628>
   12440:	ldr	r2, [sp, #28]
   12444:	cmp	r0, #0
   12448:	beq	12468 <mount@plt+0x50c>
   1244c:	ldr	r0, [sp, #48]	; 0x30
   12450:	ldr	r3, [r4, #4]
   12454:	cmp	r0, #0
   12458:	beq	12974 <mount@plt+0xa18>
   1245c:	mov	r2, r8
   12460:	mov	r1, r3
   12464:	bl	182f8 <mount@plt+0x639c>
   12468:	ldr	r4, [r4]
   1246c:	b	123c8 <mount@plt+0x46c>
   12470:	ldr	r0, [pc, #324]	; 125bc <mount@plt+0x660>
   12474:	bl	11b24 <perror@plt>
   12478:	mvn	r0, #0
   1247c:	bl	11cb0 <exit@plt>
   12480:	mov	r0, r6
   12484:	mov	r2, #384	; 0x180
   12488:	ldr	r1, [pc, #304]	; 125c0 <mount@plt+0x664>
   1248c:	bl	11c14 <open64@plt>
   12490:	cmp	r0, #0
   12494:	blt	1290c <mount@plt+0x9b0>
   12498:	ldr	r1, [pc, #292]	; 125c4 <mount@plt+0x668>
   1249c:	bl	1198c <fdopen@plt>
   124a0:	subs	r8, r0, #0
   124a4:	beq	12b74 <mount@plt+0xc18>
   124a8:	bl	11d94 <fileno@plt>
   124ac:	mov	r1, #2
   124b0:	bl	11cbc <flock@plt>
   124b4:	cmp	r0, #0
   124b8:	beq	12b1c <mount@plt+0xbc0>
   124bc:	ldr	r0, [pc, #260]	; 125c8 <mount@plt+0x66c>
   124c0:	bl	11b24 <perror@plt>
   124c4:	mvn	r0, #0
   124c8:	bl	11cb0 <exit@plt>
   124cc:	ldr	r0, [pc, #248]	; 125cc <mount@plt+0x670>
   124d0:	bl	11b24 <perror@plt>
   124d4:	mvn	r0, #0
   124d8:	bl	11cb0 <exit@plt>
   124dc:	mov	r0, r6
   124e0:	bl	11ae8 <unlink@plt>
   124e4:	b	122cc <mount@plt+0x370>
   124e8:	ldr	r0, [sp, #48]	; 0x30
   124ec:	mov	r8, r7
   124f0:	cmp	r0, #0
   124f4:	mov	r9, fp
   124f8:	beq	12510 <mount@plt+0x5b4>
   124fc:	bl	18090 <mount@plt+0x6134>
   12500:	ldr	r0, [sp, #48]	; 0x30
   12504:	bl	18090 <mount@plt+0x6134>
   12508:	add	r0, sp, #48	; 0x30
   1250c:	bl	17efc <mount@plt+0x5fa0>
   12510:	ldr	r3, [r9]
   12514:	cmp	r3, #0
   12518:	beq	12b98 <mount@plt+0xc3c>
   1251c:	mov	r0, #0
   12520:	bl	11cb0 <exit@plt>
   12524:	nop			; (mov r0, r0)
   12528:	bllt	fed67988 <optarg@@GLIBC_2.4+0xfed39738>
   1252c:			; <UNDEFINED> instruction: 0x40026bb1
   12530:	andeq	r0, r0, r0
   12534:	svccc	0x00f00000	; IMB
   12538:	andeq	sp, r2, r0, ror #29
   1253c:	andeq	ip, r1, ip, lsl r5
   12540:	andeq	ip, r1, r8, lsr r9
   12544:	andeq	r0, r3, r0, ror #18
   12548:	muleq	r3, r8, r8
   1254c:	andeq	lr, r2, r0, asr r2
   12550:			; <UNDEFINED> instruction: 0x000308b8
   12554:	andeq	ip, r1, r0, asr #13
   12558:	andeq	lr, r2, r8, asr #4
   1255c:	andeq	ip, r1, r4, asr #13
   12560:	muleq	r3, ip, r8
   12564:	andeq	r0, r3, ip, lsr #17
   12568:	andeq	r0, r3, r4, lsr #17
   1256c:			; <UNDEFINED> instruction: 0x000308b0
   12570:	andeq	r0, r3, r0, asr r9
   12574:	andeq	r0, r3, ip, asr #18
   12578:	andeq	ip, r1, r4, lsl r5
   1257c:	andeq	ip, r1, ip, ror #13
   12580:	andeq	ip, r1, ip, lsl #14
   12584:	andeq	lr, r2, r0, asr #4
   12588:	andeq	ip, r1, r8, asr #18
   1258c:	andeq	r0, r3, r0, asr #18
   12590:	andeq	ip, r1, ip, ror r9
   12594:	andeq	ip, r1, r0, asr r9
   12598:	andeq	r0, r3, r8, asr #18
   1259c:			; <UNDEFINED> instruction: 0x000308bc
   125a0:			; <UNDEFINED> instruction: 0x0001c9bc
   125a4:			; <UNDEFINED> instruction: 0x000308b4
   125a8:	andeq	r0, r3, r0, asr #17
   125ac:	andeq	ip, r1, ip, lsr fp
   125b0:	andeq	lr, r2, ip, asr #4
   125b4:	muleq	r1, r8, r6
   125b8:	andeq	r0, r3, r0, lsr #17
   125bc:	andeq	ip, r1, r0, ror #18
   125c0:	andeq	r8, r0, r2, asr #32
   125c4:	strdeq	ip, [r1], -r8
   125c8:	andeq	ip, r1, r8, lsl sl
   125cc:	andeq	ip, r1, ip, ror #18
   125d0:	ldrdeq	r2, [r1], -r0
   125d4:	andeq	r0, r1, r1
   125d8:	mov	r1, #1
   125dc:	mov	r0, #13
   125e0:	bl	11a58 <signal@plt>
   125e4:	ldr	r1, [pc, #-28]	; 125d0 <mount@plt+0x674>
   125e8:	mov	r0, #17
   125ec:	bl	11a58 <signal@plt>
   125f0:	ldr	r3, [pc, #-36]	; 125d4 <mount@plt+0x678>
   125f4:	ldr	r2, [sp, #28]
   125f8:	vldr	d8, [pc, #936]	; 129a8 <mount@plt+0xa4c>
   125fc:	strd	r2, [sp, #40]	; 0x28
   12600:	bl	11ca4 <getpid@plt>
   12604:	mov	r5, r0
   12608:	bl	11ec0 <random@plt>
   1260c:	ldr	r3, [pc, #924]	; 129b0 <mount@plt+0xa54>
   12610:	ldr	ip, [pc, #924]	; 129b4 <mount@plt+0xa58>
   12614:	ldr	r1, [sl]
   12618:	ldr	lr, [r3]
   1261c:	str	r5, [sp]
   12620:	smull	r6, r7, r1, ip
   12624:	smull	r8, r9, lr, ip
   12628:	str	ip, [sp, #24]
   1262c:	asr	r2, lr, #31
   12630:	asr	r1, r1, #31
   12634:	rsb	r3, r1, r7, asr #6
   12638:	rsb	r2, r2, r9, asr #6
   1263c:	mov	r1, #1
   12640:	str	r2, [sp, #12]
   12644:	str	r3, [sp, #8]
   12648:	mov	r2, #128	; 0x80
   1264c:	ldr	r3, [pc, #868]	; 129b8 <mount@plt+0xa5c>
   12650:	ldr	r7, [pc, #868]	; 129bc <mount@plt+0xa60>
   12654:	mov	r5, r4
   12658:	str	r0, [sp, #4]
   1265c:	ldr	r0, [pc, #924]	; 12a00 <mount@plt+0xaa4>
   12660:	bl	11d04 <__sprintf_chk@plt>
   12664:	bl	1350c <mount@plt+0x15b0>
   12668:	bl	13154 <mount@plt+0x11f8>
   1266c:	bl	13548 <mount@plt+0x15ec>
   12670:	bl	13190 <mount@plt+0x1234>
   12674:	mov	r1, #0
   12678:	add	r0, sp, #48	; 0x30
   1267c:	bl	11bc0 <gettimeofday@plt>
   12680:	ldr	r3, [sp, #52]	; 0x34
   12684:	ldr	r2, [sp, #24]
   12688:	sub	r3, r3, r4
   1268c:	ldr	r9, [sp, #48]	; 0x30
   12690:	smull	r0, r1, r3, r2
   12694:	ldr	r2, [sl]
   12698:	asr	r3, r3, #31
   1269c:	rsb	r3, r3, r1, asr #6
   126a0:	sub	r9, r9, r5
   126a4:	mov	r1, #1000	; 0x3e8
   126a8:	mla	r9, r1, r9, r3
   126ac:	cmp	r9, r2
   126b0:	bge	1275c <mount@plt+0x800>
   126b4:	ldr	r2, [sl]
   126b8:	mov	r1, #1
   126bc:	sub	r2, r2, r9
   126c0:	add	r0, sp, #40	; 0x28
   126c4:	bl	11b30 <poll@plt>
   126c8:	cmp	r0, #0
   126cc:	ble	12720 <mount@plt+0x7c4>
   126d0:	ldrh	r3, [sp, #46]	; 0x2e
   126d4:	tst	r3, #1
   126d8:	beq	12720 <mount@plt+0x7c4>
   126dc:	mov	r2, #0
   126e0:	mov	r1, r2
   126e4:	ldr	r0, [sp, #28]
   126e8:	bl	11b3c <accept@plt>
   126ec:	subs	r6, r0, #0
   126f0:	blt	12720 <mount@plt+0x7c4>
   126f4:	ldr	r3, [r7]
   126f8:	cmp	r3, #4
   126fc:	bgt	1271c <mount@plt+0x7c0>
   12700:	bl	11df4 <fork@plt>
   12704:	cmp	r0, #0
   12708:	beq	128e8 <mount@plt+0x98c>
   1270c:	ldrgt	r3, [r7]
   12710:	mov	r0, r6
   12714:	addgt	r3, r3, #1
   12718:	strgt	r3, [r7]
   1271c:	bl	11f08 <close@plt>
   12720:	ldr	r3, [r7]
   12724:	cmp	r3, #0
   12728:	beq	12674 <mount@plt+0x718>
   1272c:	mov	r2, #1
   12730:	add	r1, sp, #36	; 0x24
   12734:	mvn	r0, #0
   12738:	bl	11ba8 <waitpid@plt>
   1273c:	cmp	r0, #0
   12740:	ble	12674 <mount@plt+0x718>
   12744:	ldr	r3, [r7]
   12748:	sub	r3, r3, #1
   1274c:	cmp	r3, #0
   12750:	str	r3, [r7]
   12754:	bne	1272c <mount@plt+0x7d0>
   12758:	b	12674 <mount@plt+0x718>
   1275c:	ldr	r2, [pc, #672]	; 12a04 <mount@plt+0xaa8>
   12760:	mov	r3, #0
   12764:	mov	r4, r2
   12768:	ldr	r6, [r2]
   1276c:	str	r3, [r2]
   12770:	bl	1350c <mount@plt+0x15b0>
   12774:	bl	13154 <mount@plt+0x11f8>
   12778:	bl	13548 <mount@plt+0x15ec>
   1277c:	bl	13190 <mount@plt+0x1234>
   12780:	cmp	r6, #0
   12784:	ldr	r5, [r4]
   12788:	str	r6, [r4]
   1278c:	beq	12870 <mount@plt+0x914>
   12790:	cmp	r5, #0
   12794:	beq	12880 <mount@plt+0x924>
   12798:	ldr	fp, [r6, #4]
   1279c:	mov	r4, r5
   127a0:	b	127b0 <mount@plt+0x854>
   127a4:	ldr	r4, [r4]
   127a8:	cmp	r4, #0
   127ac:	beq	12864 <mount@plt+0x908>
   127b0:	ldr	r8, [r4, #4]
   127b4:	mov	r1, fp
   127b8:	mov	r0, r8
   127bc:	bl	119bc <strcmp@plt>
   127c0:	cmp	r0, #0
   127c4:	bne	127a4 <mount@plt+0x848>
   127c8:	ldr	r3, [r4, #8]
   127cc:	ldr	r0, [r6, #8]
   127d0:	ldr	r2, [r4, #12]
   127d4:	ldr	r1, [r6, #12]
   127d8:	subs	r0, r3, r0
   127dc:	str	r3, [r6, #8]
   127e0:	sbc	r1, r2, r1
   127e4:	str	r2, [r6, #12]
   127e8:	bl	1c3a8 <mount@plt+0xa44c>
   127ec:	vmov	s15, r9
   127f0:	ldr	r3, [sl]
   127f4:	cmp	r9, r3
   127f8:	vcvt.f64.s32	d5, s15
   127fc:	vmov	d7, r0, r1
   12800:	vmul.f64	d6, d7, d8
   12804:	vdiv.f64	d7, d6, d5
   12808:	blt	1289c <mount@plt+0x940>
   1280c:	vldr	d6, [r6, #16]
   12810:	ldr	r3, [pc, #424]	; 129c0 <mount@plt+0xa64>
   12814:	vsub.f64	d7, d7, d6
   12818:	vldr	d5, [r3]
   1281c:	vmla.f64	d6, d7, d5
   12820:	vstr	d6, [r6, #16]
   12824:	cmp	r4, r5
   12828:	beq	12850 <mount@plt+0x8f4>
   1282c:	ldr	r8, [r5]
   12830:	ldr	r0, [r5, #4]
   12834:	bl	11a1c <free@plt>
   12838:	mov	r0, r5
   1283c:	bl	11a1c <free@plt>
   12840:	cmp	r8, r4
   12844:	mov	r5, r8
   12848:	bne	1282c <mount@plt+0x8d0>
   1284c:	ldr	r8, [r4, #4]
   12850:	mov	r0, r8
   12854:	ldr	r5, [r4]
   12858:	bl	11a1c <free@plt>
   1285c:	mov	r0, r4
   12860:	bl	11a1c <free@plt>
   12864:	ldr	r6, [r6]
   12868:	cmp	r6, #0
   1286c:	bne	12790 <mount@plt+0x834>
   12870:	ldr	r5, [sp, #48]	; 0x30
   12874:	ldr	r4, [sp, #52]	; 0x34
   12878:	mov	r9, #0
   1287c:	b	126b4 <mount@plt+0x758>
   12880:	ldr	r3, [r6]
   12884:	cmp	r3, #0
   12888:	beq	12870 <mount@plt+0x914>
   1288c:	ldr	r6, [r3]
   12890:	cmp	r6, #0
   12894:	bne	12880 <mount@plt+0x924>
   12898:	b	12870 <mount@plt+0x914>
   1289c:	ldr	r2, [pc, #288]	; 129c4 <mount@plt+0xa68>
   128a0:	cmp	r9, r2
   128a4:	ble	12824 <mount@plt+0x8c8>
   128a8:	ldr	r2, [pc, #256]	; 129b0 <mount@plt+0xa54>
   128ac:	ldr	r2, [r2]
   128b0:	cmp	r9, r2
   128b4:	vstrge	d7, [r6, #16]
   128b8:	bge	12824 <mount@plt+0x8c8>
   128bc:	ldr	r2, [pc, #252]	; 129c0 <mount@plt+0xa64>
   128c0:	vmov	s13, r3
   128c4:	vldr	d3, [r6, #16]
   128c8:	vldr	d4, [r2]
   128cc:	vcvt.f64.s32	d6, s13
   128d0:	vsub.f64	d7, d7, d3
   128d4:	vmul.f64	d5, d5, d4
   128d8:	vdiv.f64	d4, d5, d6
   128dc:	vmla.f64	d3, d4, d7
   128e0:	vstr	d3, [r6, #16]
   128e4:	b	12824 <mount@plt+0x8c8>
   128e8:	mov	r8, r0
   128ec:	ldr	r1, [pc, #212]	; 129c8 <mount@plt+0xa6c>
   128f0:	mov	r0, r6
   128f4:	bl	1198c <fdopen@plt>
   128f8:	cmp	r0, #0
   128fc:	beq	1251c <mount@plt+0x5c0>
   12900:	mov	r1, r8
   12904:	bl	135ec <mount@plt+0x1690>
   12908:	b	1251c <mount@plt+0x5c0>
   1290c:	ldr	r0, [pc, #184]	; 129cc <mount@plt+0xa70>
   12910:	bl	11b24 <perror@plt>
   12914:	mvn	r0, #0
   12918:	bl	11cb0 <exit@plt>
   1291c:	mov	r2, r0
   12920:	ldrd	r0, [r6, #8]
   12924:	mov	sl, r3
   12928:	cmp	r9, r1
   1292c:	cmpeq	r8, r0
   12930:	movcc	r8, r0
   12934:	movcc	r9, r1
   12938:	movcc	r2, #1
   1293c:	subs	r8, r8, r0
   12940:	sbc	r9, r9, r1
   12944:	b	12404 <mount@plt+0x4a8>
   12948:	mov	r0, #128	; 0x80
   1294c:	bl	11c38 <malloc@plt>
   12950:	mov	r6, r0
   12954:	bl	11a04 <getuid@plt>
   12958:	mov	r1, r8
   1295c:	ldr	r3, [pc, #108]	; 129d0 <mount@plt+0xa74>
   12960:	mov	r2, #128	; 0x80
   12964:	str	r0, [sp]
   12968:	mov	r0, r6
   1296c:	bl	11d04 <__sprintf_chk@plt>
   12970:	b	122bc <mount@plt+0x360>
   12974:	ldrd	r0, [r4, #16]
   12978:	ldr	lr, [pc, #84]	; 129d4 <mount@plt+0xa78>
   1297c:	ldr	ip, [pc, #84]	; 129d8 <mount@plt+0xa7c>
   12980:	cmp	r2, #0
   12984:	moveq	ip, lr
   12988:	strd	r0, [sp, #8]
   1298c:	str	ip, [sp, #16]
   12990:	strd	r8, [sp]
   12994:	ldr	r2, [pc, #64]	; 129dc <mount@plt+0xa80>
   12998:	mov	r1, #1
   1299c:	ldr	r0, [sp, #24]
   129a0:	bl	11da0 <__fprintf_chk@plt>
   129a4:	b	12468 <mount@plt+0x50c>
   129a8:	andeq	r0, r0, r0
   129ac:	addmi	r4, pc, r0
   129b0:			; <UNDEFINED> instruction: 0x000308b8
   129b4:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   129b8:	andeq	ip, r1, ip, lsl #19
   129bc:	andeq	lr, r2, r8, asr r2
   129c0:	andeq	r0, r3, r0, asr #18
   129c4:	andeq	r0, r0, r7, ror #7
   129c8:			; <UNDEFINED> instruction: 0x0001c9b8
   129cc:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   129d0:	andeq	ip, r1, ip, asr #19
   129d4:	andeq	sp, r1, r0, asr #12
   129d8:			; <UNDEFINED> instruction: 0x0001c6b4
   129dc:	andeq	ip, r1, r4, asr #22
   129e0:	strdeq	ip, [r1], -r0
   129e4:	andeq	r0, r3, r8, lsr #17
   129e8:	andeq	ip, r1, r0, asr sl
   129ec:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   129f0:			; <UNDEFINED> instruction: 0x000308b0
   129f4:	andeq	ip, r1, ip, lsr fp
   129f8:	andeq	ip, r1, r4, lsr sl
   129fc:	andeq	r0, r3, r0, ror #18
   12a00:	andeq	r0, r3, r0, asr #17
   12a04:	andeq	r0, r3, r0, lsr #17
   12a08:			; <UNDEFINED> instruction: 0x000308b4
   12a0c:	muleq	r3, ip, r8
   12a10:	strdeq	ip, [r1], -r8
   12a14:	andeq	ip, r1, r4, lsl fp
   12a18:	andeq	sp, r1, r0, lsl r4
   12a1c:	andeq	ip, r1, r0, lsr #21
   12a20:			; <UNDEFINED> instruction: 0x0001cab0
   12a24:	andeq	lr, r2, r8, asr #4
   12a28:			; <UNDEFINED> instruction: 0x0001cab4
   12a2c:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   12a30:	add	r0, sp, #159	; 0x9f
   12a34:	bl	11cd4 <strlen@plt>
   12a38:	add	r1, sp, #156	; 0x9c
   12a3c:	add	r2, r0, #3
   12a40:	mov	r0, r6
   12a44:	bl	11f20 <connect@plt>
   12a48:	cmp	r0, #0
   12a4c:	beq	12a84 <mount@plt+0xb28>
   12a50:	ldr	r3, [pc, #-120]	; 129e0 <mount@plt+0xa84>
   12a54:	add	r1, sp, #156	; 0x9c
   12a58:	mov	r2, #9
   12a5c:	ldr	r0, [r3]
   12a60:	ldrh	ip, [r3, #4]
   12a64:	ldrb	r3, [r3, #6]
   12a68:	str	r0, [sp, #159]	; 0x9f
   12a6c:	mov	r0, r6
   12a70:	strh	ip, [sp, #163]	; 0xa3
   12a74:	strb	r3, [sp, #165]	; 0xa5
   12a78:	bl	11f20 <connect@plt>
   12a7c:	cmp	r0, #0
   12a80:	bne	12b68 <mount@plt+0xc0c>
   12a84:	add	r3, sp, #40	; 0x28
   12a88:	str	r3, [sp]
   12a8c:	mov	ip, #12
   12a90:	add	r3, sp, #48	; 0x30
   12a94:	mov	r2, #17
   12a98:	mov	r1, #1
   12a9c:	mov	r0, r6
   12aa0:	str	ip, [sp, #40]	; 0x28
   12aa4:	bl	11b84 <getsockopt@plt>
   12aa8:	cmp	r0, #0
   12aac:	bne	12b68 <mount@plt+0xc0c>
   12ab0:	ldr	r3, [sp, #40]	; 0x28
   12ab4:	cmp	r3, #11
   12ab8:	bls	12b68 <mount@plt+0xc0c>
   12abc:	ldr	r7, [sp, #52]	; 0x34
   12ac0:	bl	11a04 <getuid@plt>
   12ac4:	cmp	r7, r0
   12ac8:	beq	12ad8 <mount@plt+0xb7c>
   12acc:	ldr	r3, [sp, #52]	; 0x34
   12ad0:	cmp	r3, #0
   12ad4:	bne	12b68 <mount@plt+0xc0c>
   12ad8:	ldr	r1, [pc, #-200]	; 12a18 <mount@plt+0xabc>
   12adc:	mov	r0, r6
   12ae0:	bl	1198c <fdopen@plt>
   12ae4:	subs	r7, r0, #0
   12ae8:	beq	12ce4 <mount@plt+0xd88>
   12aec:	ldr	r6, [pc, #-236]	; 12a08 <mount@plt+0xaac>
   12af0:	bl	12ed4 <mount@plt+0xf78>
   12af4:	ldr	r3, [r6]
   12af8:	cmp	r3, #0
   12afc:	beq	12b10 <mount@plt+0xbb4>
   12b00:	ldr	r3, [pc, #-292]	; 129e4 <mount@plt+0xa88>
   12b04:	ldr	r3, [r3]
   12b08:	cmp	r3, #0
   12b0c:	bne	12d18 <mount@plt+0xdbc>
   12b10:	mov	r0, r7
   12b14:	bl	11dc4 <fclose@plt>
   12b18:	b	12358 <mount@plt+0x3fc>
   12b1c:	mov	r0, r8
   12b20:	bl	11d94 <fileno@plt>
   12b24:	add	r2, sp, #48	; 0x30
   12b28:	mov	r1, r0
   12b2c:	mov	r0, #3
   12b30:	bl	11b48 <__fxstat64@plt>
   12b34:	cmp	r0, #0
   12b38:	bne	12c10 <mount@plt+0xcb4>
   12b3c:	ldr	r3, [sp, #68]	; 0x44
   12b40:	cmp	r3, #1
   12b44:	beq	12ca0 <mount@plt+0xd44>
   12b48:	ldr	r3, [pc, #-300]	; 12a24 <mount@plt+0xac8>
   12b4c:	mov	r2, #78	; 0x4e
   12b50:	mov	r1, #1
   12b54:	ldr	r3, [r3]
   12b58:	ldr	r0, [pc, #-376]	; 129e8 <mount@plt+0xa8c>
   12b5c:	bl	11b6c <fwrite@plt>
   12b60:	mvn	r0, #0
   12b64:	bl	11cb0 <exit@plt>
   12b68:	mov	r0, r6
   12b6c:	bl	11f08 <close@plt>
   12b70:	b	12308 <mount@plt+0x3ac>
   12b74:	ldr	r0, [pc, #-400]	; 129ec <mount@plt+0xa90>
   12b78:	bl	11b24 <perror@plt>
   12b7c:	mvn	r0, #0
   12b80:	bl	11cb0 <exit@plt>
   12b84:	vldr	d7, [r4, #16]
   12b88:	vcmp.f64	d7, #0.0
   12b8c:	vmrs	APSR_nzcv, fpscr
   12b90:	bne	12428 <mount@plt+0x4cc>
   12b94:	b	12468 <mount@plt+0x50c>
   12b98:	mov	r0, r8
   12b9c:	bl	11d94 <fileno@plt>
   12ba0:	mov	r2, #0
   12ba4:	mov	r3, #0
   12ba8:	bl	11a7c <ftruncate64@plt>
   12bac:	cmp	r0, #0
   12bb0:	blt	12c48 <mount@plt+0xcec>
   12bb4:	mov	r0, r8
   12bb8:	bl	11ad0 <rewind@plt>
   12bbc:	ldr	r3, [pc, #-468]	; 129f0 <mount@plt+0xa94>
   12bc0:	mov	r2, #0
   12bc4:	mov	r0, r8
   12bc8:	mov	r1, #1
   12bcc:	str	r2, [r3]
   12bd0:	bl	135ec <mount@plt+0x1690>
   12bd4:	mov	r0, r8
   12bd8:	bl	11dc4 <fclose@plt>
   12bdc:	b	1251c <mount@plt+0x5c0>
   12be0:	ldr	r3, [pc, #-500]	; 129f4 <mount@plt+0xa98>
   12be4:	ldrh	r1, [r3, #4]
   12be8:	ldrb	r2, [r3, #6]
   12bec:	ldr	r0, [r3]
   12bf0:	strh	r1, [r6, #4]
   12bf4:	strb	r2, [r6, #6]
   12bf8:	str	r0, [r6]
   12bfc:	b	12358 <mount@plt+0x3fc>
   12c00:	ldr	r0, [sp, #24]
   12c04:	mov	r1, #0
   12c08:	bl	135ec <mount@plt+0x1690>
   12c0c:	b	12510 <mount@plt+0x5b4>
   12c10:	ldr	r0, [pc, #-544]	; 129f8 <mount@plt+0xa9c>
   12c14:	bl	11b24 <perror@plt>
   12c18:	mvn	r0, #0
   12c1c:	bl	11cb0 <exit@plt>
   12c20:	ldr	r3, [pc, #-516]	; 12a24 <mount@plt+0xac8>
   12c24:	mov	r2, #38	; 0x26
   12c28:	mov	r1, #1
   12c2c:	ldr	r3, [r3]
   12c30:	ldr	r0, [pc, #-548]	; 12a14 <mount@plt+0xab8>
   12c34:	bl	11b6c <fwrite@plt>
   12c38:	mov	r3, #0
   12c3c:	str	r3, [r7]
   12c40:	strb	r3, [r6]
   12c44:	b	1233c <mount@plt+0x3e0>
   12c48:	ldr	r0, [pc, #-548]	; 12a2c <mount@plt+0xad0>
   12c4c:	bl	11b24 <perror@plt>
   12c50:	b	12bb4 <mount@plt+0xc58>
   12c54:	ldr	r0, [sp, #24]
   12c58:	bl	17ed4 <mount@plt+0x5f78>
   12c5c:	ldr	sl, [r4]
   12c60:	cmp	r0, #0
   12c64:	str	r0, [sp, #48]	; 0x30
   12c68:	beq	123a4 <mount@plt+0x448>
   12c6c:	bl	18088 <mount@plt+0x612c>
   12c70:	ldr	r3, [pc, #-636]	; 129fc <mount@plt+0xaa0>
   12c74:	ldr	r0, [sp, #48]	; 0x30
   12c78:	ldr	r1, [r3]
   12c7c:	adds	r1, r1, #0
   12c80:	movne	r1, #1
   12c84:	bl	17f68 <mount@plt+0x600c>
   12c88:	ldr	r0, [sp, #48]	; 0x30
   12c8c:	ldr	r1, [pc, #-660]	; 12a00 <mount@plt+0xaa4>
   12c90:	bl	17f70 <mount@plt+0x6014>
   12c94:	ldr	r0, [sp, #48]	; 0x30
   12c98:	bl	18088 <mount@plt+0x612c>
   12c9c:	b	123b8 <mount@plt+0x45c>
   12ca0:	ldr	r6, [sp, #72]	; 0x48
   12ca4:	bl	11a04 <getuid@plt>
   12ca8:	cmp	r6, r0
   12cac:	bne	12b48 <mount@plt+0xbec>
   12cb0:	ldr	r3, [r4]
   12cb4:	cmp	r3, #0
   12cb8:	beq	12d3c <mount@plt+0xde0>
   12cbc:	mov	r0, r8
   12cc0:	bl	12ed4 <mount@plt+0xf78>
   12cc4:	ldr	r3, [pc, #-712]	; 12a04 <mount@plt+0xaa8>
   12cc8:	ldr	r2, [pc, #-712]	; 12a08 <mount@plt+0xaac>
   12ccc:	mov	r0, #0
   12cd0:	ldr	r1, [r3]
   12cd4:	ldr	r9, [pc, #-720]	; 12a0c <mount@plt+0xab0>
   12cd8:	str	r0, [r3]
   12cdc:	str	r1, [r2]
   12ce0:	b	122f0 <mount@plt+0x394>
   12ce4:	ldr	r3, [pc, #-712]	; 12a24 <mount@plt+0xac8>
   12ce8:	ldr	r7, [r3]
   12cec:	bl	11cec <__errno_location@plt>
   12cf0:	ldr	r0, [r0]
   12cf4:	bl	11c50 <strerror@plt>
   12cf8:	ldr	r2, [pc, #-752]	; 12a10 <mount@plt+0xab4>
   12cfc:	mov	r1, #1
   12d00:	mov	r3, r0
   12d04:	mov	r0, r7
   12d08:	bl	11da0 <__fprintf_chk@plt>
   12d0c:	mov	r0, r6
   12d10:	bl	11f08 <close@plt>
   12d14:	b	12358 <mount@plt+0x3fc>
   12d18:	ldr	r3, [pc, #-764]	; 12a24 <mount@plt+0xac8>
   12d1c:	mov	r2, #38	; 0x26
   12d20:	mov	r1, #1
   12d24:	ldr	r3, [r3]
   12d28:	ldr	r0, [pc, #-796]	; 12a14 <mount@plt+0xab8>
   12d2c:	bl	11b6c <fwrite@plt>
   12d30:	mov	r3, #0
   12d34:	str	r3, [r6]
   12d38:	b	12b10 <mount@plt+0xbb4>
   12d3c:	mvn	r6, #0
   12d40:	ldr	r1, [pc, #-816]	; 12a18 <mount@plt+0xabc>
   12d44:	ldr	r0, [pc, #-816]	; 12a1c <mount@plt+0xac0>
   12d48:	str	r6, [sp, #40]	; 0x28
   12d4c:	bl	11e9c <fopen64@plt>
   12d50:	subs	r7, r0, #0
   12d54:	beq	12d74 <mount@plt+0xe18>
   12d58:	add	r2, sp, #40	; 0x28
   12d5c:	ldr	r1, [pc, #-836]	; 12a20 <mount@plt+0xac4>
   12d60:	bl	11d4c <fscanf@plt>
   12d64:	cmp	r0, #1
   12d68:	mov	r0, r7
   12d6c:	strne	r6, [sp, #40]	; 0x28
   12d70:	bl	11dc4 <fclose@plt>
   12d74:	ldr	r3, [sp, #40]	; 0x28
   12d78:	cmp	r3, #0
   12d7c:	blt	12cbc <mount@plt+0xd60>
   12d80:	mov	r0, #0
   12d84:	bl	11a64 <time@plt>
   12d88:	ldr	r3, [sp, #128]	; 0x80
   12d8c:	ldr	r2, [sp, #40]	; 0x28
   12d90:	add	r3, r3, r2
   12d94:	cmp	r0, r3
   12d98:	blt	12cbc <mount@plt+0xd60>
   12d9c:	ldr	r3, [pc, #-896]	; 12a24 <mount@plt+0xac8>
   12da0:	mov	r2, #38	; 0x26
   12da4:	mov	r1, #1
   12da8:	ldr	r3, [r3]
   12dac:	ldr	r0, [pc, #-908]	; 12a28 <mount@plt+0xacc>
   12db0:	bl	11b6c <fwrite@plt>
   12db4:	mov	r0, r8
   12db8:	bl	11d94 <fileno@plt>
   12dbc:	mov	r2, #0
   12dc0:	mov	r3, #0
   12dc4:	bl	11a7c <ftruncate64@plt>
   12dc8:	cmp	r0, #0
   12dcc:	bge	12cbc <mount@plt+0xd60>
   12dd0:	ldr	r0, [pc, #-940]	; 12a2c <mount@plt+0xad0>
   12dd4:	bl	11b24 <perror@plt>
   12dd8:	b	12cbc <mount@plt+0xd60>
   12ddc:	mov	fp, #0
   12de0:	mov	lr, #0
   12de4:	pop	{r1}		; (ldr r1, [sp], #4)
   12de8:	mov	r2, sp
   12dec:	push	{r2}		; (str r2, [sp, #-4]!)
   12df0:	push	{r0}		; (str r0, [sp, #-4]!)
   12df4:	ldr	ip, [pc, #16]	; 12e0c <mount@plt+0xeb0>
   12df8:	push	{ip}		; (str ip, [sp, #-4]!)
   12dfc:	ldr	r0, [pc, #12]	; 12e10 <mount@plt+0xeb4>
   12e00:	ldr	r3, [pc, #12]	; 12e14 <mount@plt+0xeb8>
   12e04:	bl	11c44 <__libc_start_main@plt>
   12e08:	bl	11ef0 <abort@plt>
   12e0c:	andeq	ip, r1, r8, ror #9
   12e10:	andeq	r1, r1, r8, ror #30
   12e14:	andeq	ip, r1, r8, lsl #9
   12e18:	ldr	r3, [pc, #20]	; 12e34 <mount@plt+0xed8>
   12e1c:	ldr	r2, [pc, #20]	; 12e38 <mount@plt+0xedc>
   12e20:	add	r3, pc, r3
   12e24:	ldr	r2, [r3, r2]
   12e28:	cmp	r2, #0
   12e2c:	bxeq	lr
   12e30:	b	11c80 <__gmon_start__@plt>
   12e34:	ldrdeq	fp, [r1], -r8
   12e38:	andeq	r0, r0, r8, lsl r2
   12e3c:	ldr	r0, [pc, #24]	; 12e5c <mount@plt+0xf00>
   12e40:	ldr	r3, [pc, #24]	; 12e60 <mount@plt+0xf04>
   12e44:	cmp	r3, r0
   12e48:	bxeq	lr
   12e4c:	ldr	r3, [pc, #16]	; 12e64 <mount@plt+0xf08>
   12e50:	cmp	r3, #0
   12e54:	bxeq	lr
   12e58:	bx	r3
   12e5c:	andeq	lr, r2, ip, lsr r2
   12e60:	andeq	lr, r2, ip, lsr r2
   12e64:	andeq	r0, r0, r0
   12e68:	ldr	r0, [pc, #36]	; 12e94 <mount@plt+0xf38>
   12e6c:	ldr	r1, [pc, #36]	; 12e98 <mount@plt+0xf3c>
   12e70:	sub	r1, r1, r0
   12e74:	asr	r1, r1, #2
   12e78:	add	r1, r1, r1, lsr #31
   12e7c:	asrs	r1, r1, #1
   12e80:	bxeq	lr
   12e84:	ldr	r3, [pc, #16]	; 12e9c <mount@plt+0xf40>
   12e88:	cmp	r3, #0
   12e8c:	bxeq	lr
   12e90:	bx	r3
   12e94:	andeq	lr, r2, ip, lsr r2
   12e98:	andeq	lr, r2, ip, lsr r2
   12e9c:	andeq	r0, r0, r0
   12ea0:	push	{r4, lr}
   12ea4:	ldr	r4, [pc, #24]	; 12ec4 <mount@plt+0xf68>
   12ea8:	ldrb	r3, [r4]
   12eac:	cmp	r3, #0
   12eb0:	popne	{r4, pc}
   12eb4:	bl	12e3c <mount@plt+0xee0>
   12eb8:	mov	r3, #1
   12ebc:	strb	r3, [r4]
   12ec0:	pop	{r4, pc}
   12ec4:	andeq	lr, r2, r4, asr r2
   12ec8:	b	12e68 <mount@plt+0xf0c>
   12ecc:	andeq	r0, r0, r0
   12ed0:	bx	lr
   12ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ed8:	vpush	{d8}
   12edc:	ldr	r3, [pc, #444]	; 130a0 <mount@plt+0x1144>
   12ee0:	vldr	d8, [pc, #432]	; 13098 <mount@plt+0x113c>
   12ee4:	ldr	sl, [pc, #440]	; 130a4 <mount@plt+0x1148>
   12ee8:	sub	sp, sp, #8192	; 0x2000
   12eec:	sub	sp, sp, #36	; 0x24
   12ef0:	add	r2, sp, #8192	; 0x2000
   12ef4:	ldr	r9, [pc, #428]	; 130a8 <mount@plt+0x114c>
   12ef8:	ldr	r5, [pc, #428]	; 130ac <mount@plt+0x1150>
   12efc:	ldr	r3, [r3]
   12f00:	add	r2, r2, #28
   12f04:	mov	r8, r0
   12f08:	mov	r6, #0
   12f0c:	str	r3, [r2]
   12f10:	mov	r2, r8
   12f14:	mov	r1, #4096	; 0x1000
   12f18:	add	r0, sp, #28
   12f1c:	bl	11a34 <fgets@plt>
   12f20:	cmp	r0, #0
   12f24:	beq	13034 <mount@plt+0x10d8>
   12f28:	ldrb	r3, [sp, #28]
   12f2c:	cmp	r3, #35	; 0x23
   12f30:	bne	12f94 <mount@plt+0x1038>
   12f34:	add	r0, sp, #28
   12f38:	bl	11cd4 <strlen@plt>
   12f3c:	ldrb	r2, [r5]
   12f40:	mov	r3, #0
   12f44:	cmp	r2, r3
   12f48:	add	r2, sp, #32
   12f4c:	add	r0, r2, r0
   12f50:	strb	r3, [r0, #-5]
   12f54:	beq	12f74 <mount@plt+0x1018>
   12f58:	sub	r1, r2, #3
   12f5c:	mov	r0, r5
   12f60:	bl	119bc <strcmp@plt>
   12f64:	cmp	r0, #0
   12f68:	movne	r3, #1
   12f6c:	ldrne	r2, [pc, #316]	; 130b0 <mount@plt+0x1154>
   12f70:	strne	r3, [r2]
   12f74:	mov	ip, #0
   12f78:	mov	r3, #128	; 0x80
   12f7c:	mov	r2, #127	; 0x7f
   12f80:	add	r1, sp, #29
   12f84:	mov	r0, r5
   12f88:	strb	ip, [r5]
   12f8c:	bl	119b0 <__strncat_chk@plt>
   12f90:	b	12f10 <mount@plt+0xfb4>
   12f94:	add	r3, sp, #32
   12f98:	add	fp, sp, #16
   12f9c:	add	r2, sp, #4096	; 0x1000
   12fa0:	add	r2, r2, #28
   12fa4:	str	fp, [sp]
   12fa8:	sub	r3, r3, #24
   12fac:	mov	r1, sl
   12fb0:	add	r0, sp, #28
   12fb4:	bl	11e3c <sscanf@plt>
   12fb8:	cmp	r0, #1
   12fbc:	ble	13094 <mount@plt+0x1138>
   12fc0:	cmp	r0, #2
   12fc4:	ldr	r4, [pc, #232]	; 130b4 <mount@plt+0x1158>
   12fc8:	vstreq	d8, [fp]
   12fcc:	mov	r1, r9
   12fd0:	add	r7, r4, #24
   12fd4:	b	12fdc <mount@plt+0x1080>
   12fd8:	ldr	r1, [r4], #4
   12fdc:	add	r0, sp, #4096	; 0x1000
   12fe0:	add	r0, r0, #28
   12fe4:	bl	119bc <strcmp@plt>
   12fe8:	cmp	r0, #0
   12fec:	beq	12f10 <mount@plt+0xfb4>
   12ff0:	cmp	r4, r7
   12ff4:	bne	12fd8 <mount@plt+0x107c>
   12ff8:	mov	r0, #24
   12ffc:	bl	11c38 <malloc@plt>
   13000:	subs	r4, r0, #0
   13004:	beq	13094 <mount@plt+0x1138>
   13008:	add	r0, sp, #4096	; 0x1000
   1300c:	add	r0, r0, #28
   13010:	bl	11ab8 <strdup@plt>
   13014:	vldr	d7, [fp]
   13018:	ldrd	r2, [fp, #-8]
   1301c:	str	r6, [r4]
   13020:	mov	r6, r4
   13024:	vstr	d7, [r4, #16]
   13028:	strd	r2, [r4, #8]
   1302c:	str	r0, [r4, #4]
   13030:	b	12f10 <mount@plt+0xfb4>
   13034:	cmp	r6, #0
   13038:	beq	13064 <mount@plt+0x1108>
   1303c:	ldr	r1, [pc, #116]	; 130b8 <mount@plt+0x115c>
   13040:	ldr	r2, [r1]
   13044:	b	1304c <mount@plt+0x10f0>
   13048:	mov	r6, r3
   1304c:	ldr	r3, [r6]
   13050:	str	r2, [r6]
   13054:	cmp	r3, #0
   13058:	mov	r2, r6
   1305c:	bne	13048 <mount@plt+0x10ec>
   13060:	str	r6, [r1]
   13064:	add	r3, sp, #8192	; 0x2000
   13068:	add	r3, r3, #28
   1306c:	ldr	r2, [r3]
   13070:	ldr	r3, [pc, #40]	; 130a0 <mount@plt+0x1144>
   13074:	ldr	r3, [r3]
   13078:	cmp	r2, r3
   1307c:	bne	13090 <mount@plt+0x1134>
   13080:	add	sp, sp, #8192	; 0x2000
   13084:	add	sp, sp, #36	; 0x24
   13088:	vpop	{d8}
   1308c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13090:	bl	11ac4 <__stack_chk_fail@plt>
   13094:	bl	11ef0 <abort@plt>
	...
   130a0:	andeq	sp, r2, r0, ror #29
   130a4:	andeq	ip, r1, ip, ror #11
   130a8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   130ac:	andeq	r0, r3, r0, asr #17
   130b0:	andeq	r0, r3, r8, lsr #17
   130b4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   130b8:	andeq	r0, r3, r0, lsr #17
   130bc:	push	{r4, r5, lr}
   130c0:	sub	sp, sp, #156	; 0x9c
   130c4:	ldr	r4, [pc, #120]	; 13144 <mount@plt+0x11e8>
   130c8:	mov	r5, r1
   130cc:	ldr	r3, [r4]
   130d0:	str	r3, [sp, #148]	; 0x94
   130d4:	bl	11c20 <getenv@plt>
   130d8:	cmp	r0, #0
   130dc:	beq	13100 <mount@plt+0x11a4>
   130e0:	mov	r1, #0
   130e4:	bl	11c14 <open64@plt>
   130e8:	ldr	r2, [sp, #148]	; 0x94
   130ec:	ldr	r3, [r4]
   130f0:	cmp	r2, r3
   130f4:	bne	13140 <mount@plt+0x11e4>
   130f8:	add	sp, sp, #156	; 0x9c
   130fc:	pop	{r4, r5, pc}
   13100:	ldr	r0, [pc, #64]	; 13148 <mount@plt+0x11ec>
   13104:	bl	11c20 <getenv@plt>
   13108:	ldr	ip, [pc, #60]	; 1314c <mount@plt+0x11f0>
   1310c:	ldr	r3, [pc, #60]	; 13150 <mount@plt+0x11f4>
   13110:	str	r5, [sp, #8]
   13114:	str	r3, [sp]
   13118:	mov	r2, #1
   1311c:	mov	r3, #128	; 0x80
   13120:	mov	r1, #127	; 0x7f
   13124:	cmp	r0, #0
   13128:	moveq	r0, ip
   1312c:	str	r0, [sp, #4]
   13130:	add	r0, sp, #20
   13134:	bl	11f38 <__snprintf_chk@plt>
   13138:	add	r0, sp, #20
   1313c:	b	130e0 <mount@plt+0x1184>
   13140:	bl	11ac4 <__stack_chk_fail@plt>
   13144:	andeq	sp, r2, r0, ror #29
   13148:	andeq	ip, r1, r0, lsl #12
   1314c:	strdeq	ip, [r1], -r8
   13150:	andeq	ip, r1, ip, lsl #12
   13154:	push	{r4, lr}
   13158:	ldr	r1, [pc, #36]	; 13184 <mount@plt+0x1228>
   1315c:	ldr	r0, [pc, #36]	; 13188 <mount@plt+0x122c>
   13160:	bl	130bc <mount@plt+0x1160>
   13164:	ldr	r1, [pc, #32]	; 1318c <mount@plt+0x1230>
   13168:	bl	1198c <fdopen@plt>
   1316c:	subs	r4, r0, #0
   13170:	popeq	{r4, pc}
   13174:	bl	12ed4 <mount@plt+0xf78>
   13178:	mov	r0, r4
   1317c:	pop	{r4, lr}
   13180:	b	11dc4 <fclose@plt>
   13184:	andeq	ip, r1, r4, lsl r6
   13188:	andeq	ip, r1, r0, lsr #12
   1318c:	andeq	sp, r1, r0, lsl r4
   13190:	push	{r4, lr}
   13194:	ldr	r1, [pc, #36]	; 131c0 <mount@plt+0x1264>
   13198:	ldr	r0, [pc, #36]	; 131c4 <mount@plt+0x1268>
   1319c:	bl	130bc <mount@plt+0x1160>
   131a0:	ldr	r1, [pc, #32]	; 131c8 <mount@plt+0x126c>
   131a4:	bl	1198c <fdopen@plt>
   131a8:	subs	r4, r0, #0
   131ac:	popeq	{r4, pc}
   131b0:	bl	12ed4 <mount@plt+0xf78>
   131b4:	mov	r0, r4
   131b8:	pop	{r4, lr}
   131bc:	b	11dc4 <fclose@plt>
   131c0:	andeq	ip, r1, r0, lsr r6
   131c4:	andeq	ip, r1, r0, asr #12
   131c8:	andeq	sp, r1, r0, lsl r4
   131cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131d0:	vpush	{d8}
   131d4:	ldr	r3, [pc, #788]	; 134f0 <mount@plt+0x1594>
   131d8:	vldr	d8, [pc, #776]	; 134e8 <mount@plt+0x158c>
   131dc:	ldr	r8, [pc, #784]	; 134f4 <mount@plt+0x1598>
   131e0:	sub	sp, sp, #4096	; 0x1000
   131e4:	sub	sp, sp, #28
   131e8:	add	r2, sp, #4096	; 0x1000
   131ec:	ldr	r3, [r3]
   131f0:	add	r2, r2, #20
   131f4:	mov	r4, #0
   131f8:	str	r0, [sp]
   131fc:	str	r3, [r2]
   13200:	str	r4, [sp, #12]
   13204:	str	r4, [sp, #16]
   13208:	ldr	r3, [sp]
   1320c:	mov	r2, #10
   13210:	add	r1, sp, #16
   13214:	add	r0, sp, #12
   13218:	bl	119a4 <__getdelim@plt>
   1321c:	cmn	r0, #1
   13220:	beq	13440 <mount@plt+0x14e4>
   13224:	ldr	r6, [sp, #12]
   13228:	mov	r1, #58	; 0x3a
   1322c:	mov	r0, r6
   13230:	bl	11ce0 <strchr@plt>
   13234:	subs	fp, r0, #0
   13238:	beq	1335c <mount@plt+0x1400>
   1323c:	mov	r0, r6
   13240:	ldrb	r3, [r0], #1
   13244:	cmp	r3, #0
   13248:	moveq	sl, r3
   1324c:	beq	13274 <mount@plt+0x1318>
   13250:	mov	sl, #0
   13254:	cmp	r3, #10
   13258:	cmpne	r3, #32
   1325c:	ldrb	r3, [r0], #1
   13260:	moveq	r2, #1
   13264:	movne	r2, #0
   13268:	cmp	r3, #0
   1326c:	add	sl, sl, r2
   13270:	bne	13254 <mount@plt+0x12f8>
   13274:	mov	ip, #0
   13278:	strb	ip, [fp]
   1327c:	ldr	r6, [sp, #12]
   13280:	ldr	r2, [pc, #624]	; 134f8 <mount@plt+0x159c>
   13284:	mov	r1, r6
   13288:	add	r0, sp, #20
   1328c:	mov	r3, #4096	; 0x1000
   13290:	strb	ip, [sp, #20]
   13294:	bl	119b0 <__strncat_chk@plt>
   13298:	ldrb	r2, [fp, #2]
   1329c:	sub	r6, fp, r6
   132a0:	add	fp, fp, #2
   132a4:	cmp	r2, #0
   132a8:	beq	1337c <mount@plt+0x1420>
   132ac:	ldr	r9, [pc, #580]	; 134f8 <mount@plt+0x159c>
   132b0:	str	sl, [sp, #4]
   132b4:	sub	r3, r9, r6
   132b8:	mov	sl, fp
   132bc:	mov	r7, r4
   132c0:	mov	fp, r3
   132c4:	b	13300 <mount@plt+0x13a4>
   132c8:	mov	r0, #24
   132cc:	bl	11c38 <malloc@plt>
   132d0:	subs	r4, r0, #0
   132d4:	beq	1335c <mount@plt+0x1400>
   132d8:	add	r0, sp, #20
   132dc:	bl	11ab8 <strdup@plt>
   132e0:	vstr	d8, [r4, #16]
   132e4:	str	r7, [r4]
   132e8:	mov	sl, r5
   132ec:	mov	r7, r4
   132f0:	str	r0, [r4, #4]
   132f4:	ldrb	r2, [r5]
   132f8:	cmp	r2, #0
   132fc:	beq	13378 <mount@plt+0x141c>
   13300:	mov	r1, #32
   13304:	mov	r0, sl
   13308:	bl	11ce0 <strchr@plt>
   1330c:	subs	r4, r0, #0
   13310:	beq	13360 <mount@plt+0x1404>
   13314:	mov	r5, r4
   13318:	mov	r2, #0
   1331c:	strb	r2, [r5], #1
   13320:	cmp	r6, r9
   13324:	bhi	132c8 <mount@plt+0x136c>
   13328:	add	r3, sp, #24
   1332c:	add	r0, r3, r6
   13330:	mov	ip, #0
   13334:	strb	ip, [r0, #-4]
   13338:	mov	r1, sl
   1333c:	mov	r3, #4096	; 0x1000
   13340:	mov	r2, fp
   13344:	add	r0, sp, #20
   13348:	bl	119b0 <__strncat_chk@plt>
   1334c:	mov	r0, #24
   13350:	bl	11c38 <malloc@plt>
   13354:	subs	r4, r0, #0
   13358:	bne	132d8 <mount@plt+0x137c>
   1335c:	bl	11ef0 <abort@plt>
   13360:	mov	r1, #10
   13364:	mov	r0, sl
   13368:	bl	11ce0 <strchr@plt>
   1336c:	subs	r5, r0, #0
   13370:	strbne	r4, [r5], #1
   13374:	b	13320 <mount@plt+0x13c4>
   13378:	ldr	sl, [sp, #4]
   1337c:	ldr	r3, [sp]
   13380:	mov	r2, #10
   13384:	add	r1, sp, #16
   13388:	add	r0, sp, #12
   1338c:	bl	119a4 <__getdelim@plt>
   13390:	cmn	r0, #1
   13394:	beq	1335c <mount@plt+0x1400>
   13398:	ldr	r0, [sp, #12]
   1339c:	mov	r2, r0
   133a0:	ldrb	r3, [r2], #1
   133a4:	cmp	r3, #0
   133a8:	beq	13438 <mount@plt+0x14dc>
   133ac:	mov	r1, #0
   133b0:	cmp	r3, #10
   133b4:	cmpne	r3, #32
   133b8:	ldrb	r3, [r2], #1
   133bc:	moveq	ip, #1
   133c0:	movne	ip, #0
   133c4:	cmp	r3, #0
   133c8:	add	r1, r1, ip
   133cc:	bne	133b0 <mount@plt+0x1454>
   133d0:	cmp	r1, sl
   133d4:	subgt	sl, r1, sl
   133d8:	ble	13438 <mount@plt+0x14dc>
   133dc:	mov	r5, r4
   133e0:	mov	r7, #0
   133e4:	b	13424 <mount@plt+0x14c8>
   133e8:	mov	r0, r9
   133ec:	add	r2, r5, #8
   133f0:	strb	r7, [r0], #1
   133f4:	mov	r1, r8
   133f8:	bl	11e3c <sscanf@plt>
   133fc:	cmp	r0, #1
   13400:	bne	1335c <mount@plt+0x1400>
   13404:	ldr	r0, [sp, #12]
   13408:	cmp	sl, #0
   1340c:	add	r3, r6, #2
   13410:	add	r3, r0, r3
   13414:	subne	sl, sl, #1
   13418:	ldreq	r5, [r5]
   1341c:	cmp	r9, r3
   13420:	bls	13208 <mount@plt+0x12ac>
   13424:	mov	r1, #32
   13428:	bl	11e00 <strrchr@plt>
   1342c:	subs	r9, r0, #0
   13430:	bne	133e8 <mount@plt+0x148c>
   13434:	b	1335c <mount@plt+0x1400>
   13438:	mov	sl, r3
   1343c:	b	133dc <mount@plt+0x1480>
   13440:	ldr	r0, [sp, #12]
   13444:	bl	11a1c <free@plt>
   13448:	cmp	r4, #0
   1344c:	beq	134a0 <mount@plt+0x1544>
   13450:	ldr	r7, [pc, #164]	; 134fc <mount@plt+0x15a0>
   13454:	ldr	sl, [pc, #164]	; 13500 <mount@plt+0x15a4>
   13458:	ldr	r9, [pc, #164]	; 13504 <mount@plt+0x15a8>
   1345c:	ldr	r8, [r4]
   13460:	ldr	r6, [r4, #4]
   13464:	ldr	r5, [pc, #156]	; 13508 <mount@plt+0x15ac>
   13468:	mov	r1, sl
   1346c:	b	13474 <mount@plt+0x1518>
   13470:	ldr	r1, [r5], #4
   13474:	mov	r0, r6
   13478:	bl	119bc <strcmp@plt>
   1347c:	cmp	r0, #0
   13480:	beq	134cc <mount@plt+0x1570>
   13484:	cmp	r7, r5
   13488:	bne	13470 <mount@plt+0x1514>
   1348c:	ldr	r3, [r9]
   13490:	str	r3, [r4]
   13494:	str	r4, [r9]
   13498:	subs	r4, r8, #0
   1349c:	bne	1345c <mount@plt+0x1500>
   134a0:	add	r3, sp, #4096	; 0x1000
   134a4:	add	r3, r3, #20
   134a8:	ldr	r2, [r3]
   134ac:	ldr	r3, [pc, #60]	; 134f0 <mount@plt+0x1594>
   134b0:	ldr	r3, [r3]
   134b4:	cmp	r2, r3
   134b8:	bne	134e0 <mount@plt+0x1584>
   134bc:	add	sp, sp, #4096	; 0x1000
   134c0:	add	sp, sp, #28
   134c4:	vpop	{d8}
   134c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134cc:	mov	r0, r6
   134d0:	bl	11a1c <free@plt>
   134d4:	mov	r0, r4
   134d8:	bl	11a1c <free@plt>
   134dc:	b	13498 <mount@plt+0x153c>
   134e0:	bl	11ac4 <__stack_chk_fail@plt>
   134e4:	nop			; (mov r0, r0)
	...
   134f0:	andeq	sp, r2, r0, ror #29
   134f4:	andeq	ip, r1, r4, asr r6
   134f8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   134fc:	andeq	ip, r1, r4, lsl r5
   13500:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   13504:	andeq	r0, r3, r0, lsr #17
   13508:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1350c:	push	{r4, lr}
   13510:	ldr	r1, [pc, #36]	; 1353c <mount@plt+0x15e0>
   13514:	ldr	r0, [pc, #36]	; 13540 <mount@plt+0x15e4>
   13518:	bl	130bc <mount@plt+0x1160>
   1351c:	ldr	r1, [pc, #32]	; 13544 <mount@plt+0x15e8>
   13520:	bl	1198c <fdopen@plt>
   13524:	subs	r4, r0, #0
   13528:	popeq	{r4, pc}
   1352c:	bl	131cc <mount@plt+0x1270>
   13530:	mov	r0, r4
   13534:	pop	{r4, lr}
   13538:	b	11dc4 <fclose@plt>
   1353c:	andeq	ip, r1, ip, asr r6
   13540:	andeq	ip, r1, r8, ror #12
   13544:	andeq	sp, r1, r0, lsl r4
   13548:	push	{r4, lr}
   1354c:	ldr	r1, [pc, #36]	; 13578 <mount@plt+0x161c>
   13550:	ldr	r0, [pc, #36]	; 1357c <mount@plt+0x1620>
   13554:	bl	130bc <mount@plt+0x1160>
   13558:	ldr	r1, [pc, #32]	; 13580 <mount@plt+0x1624>
   1355c:	bl	1198c <fdopen@plt>
   13560:	subs	r4, r0, #0
   13564:	popeq	{r4, pc}
   13568:	bl	131cc <mount@plt+0x1270>
   1356c:	mov	r0, r4
   13570:	pop	{r4, lr}
   13574:	b	11dc4 <fclose@plt>
   13578:	andeq	ip, r1, ip, ror r6
   1357c:	andeq	ip, r1, r8, lsl #13
   13580:	andeq	sp, r1, r0, lsl r4
   13584:	push	{r4, r5, r6, r7, r8, lr}
   13588:	ldr	r6, [pc, #84]	; 135e4 <mount@plt+0x1688>
   1358c:	ldr	r3, [r6]
   13590:	cmp	r3, #0
   13594:	ble	135dc <mount@plt+0x1680>
   13598:	mov	r5, r0
   1359c:	ldr	r7, [pc, #68]	; 135e8 <mount@plt+0x168c>
   135a0:	mov	r4, #0
   135a4:	b	135b4 <mount@plt+0x1658>
   135a8:	ldr	r3, [r6]
   135ac:	cmp	r4, r3
   135b0:	bge	135dc <mount@plt+0x1680>
   135b4:	ldr	r3, [r7]
   135b8:	mov	r2, #0
   135bc:	mov	r1, r5
   135c0:	ldr	r0, [r3, r4, lsl #2]
   135c4:	bl	11c08 <fnmatch@plt>
   135c8:	add	r4, r4, #1
   135cc:	cmp	r0, #0
   135d0:	bne	135a8 <mount@plt+0x164c>
   135d4:	mov	r0, #1
   135d8:	pop	{r4, r5, r6, r7, r8, pc}
   135dc:	mov	r0, #0
   135e0:	pop	{r4, r5, r6, r7, r8, pc}
   135e4:			; <UNDEFINED> instruction: 0x000308bc
   135e8:	andeq	r0, r3, r8, asr #18
   135ec:	ldr	r3, [pc, #492]	; 137e0 <mount@plt+0x1884>
   135f0:	ldr	r2, [pc, #492]	; 137e4 <mount@plt+0x1888>
   135f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135f8:	sub	sp, sp, #36	; 0x24
   135fc:	ldr	r3, [r3]
   13600:	ldr	r2, [r2]
   13604:	cmp	r3, #0
   13608:	str	r1, [sp, #16]
   1360c:	str	r2, [sp, #28]
   13610:	str	r0, [sp, #20]
   13614:	bne	13790 <mount@plt+0x1834>
   13618:	ldr	r2, [pc, #456]	; 137e8 <mount@plt+0x188c>
   1361c:	str	r3, [sp, #24]
   13620:	ldr	r9, [r2]
   13624:	ldr	r3, [pc, #448]	; 137ec <mount@plt+0x1890>
   13628:	ldr	r2, [pc, #448]	; 137f0 <mount@plt+0x1894>
   1362c:	mov	r1, #1
   13630:	ldr	r0, [sp, #20]
   13634:	bl	11da0 <__fprintf_chk@plt>
   13638:	ldr	r3, [pc, #436]	; 137f4 <mount@plt+0x1898>
   1363c:	ldr	r4, [r3]
   13640:	cmp	r4, #0
   13644:	beq	13730 <mount@plt+0x17d4>
   13648:	ldr	r7, [pc, #424]	; 137f8 <mount@plt+0x189c>
   1364c:	ldr	r8, [pc, #424]	; 137fc <mount@plt+0x18a0>
   13650:	b	1367c <mount@plt+0x1720>
   13654:	ldr	fp, [r4, #4]
   13658:	ldr	r0, [sp, #24]
   1365c:	cmp	r0, #0
   13660:	beq	1376c <mount@plt+0x1810>
   13664:	mov	r2, r5
   13668:	mov	r1, fp
   1366c:	bl	182f8 <mount@plt+0x639c>
   13670:	ldr	r4, [r4]
   13674:	cmp	r4, #0
   13678:	beq	13730 <mount@plt+0x17d4>
   1367c:	ldr	r5, [r4, #8]
   13680:	ldr	r6, [r4, #12]
   13684:	ldr	r2, [r7]
   13688:	orrs	r3, r5, r6
   1368c:	moveq	r3, #1
   13690:	movne	r3, #0
   13694:	cmp	r2, #0
   13698:	movne	r3, #0
   1369c:	cmp	r3, #0
   136a0:	bne	13714 <mount@plt+0x17b8>
   136a4:	ldr	r2, [r8]
   136a8:	ldr	fp, [r4, #4]
   136ac:	cmp	r2, #0
   136b0:	beq	13658 <mount@plt+0x16fc>
   136b4:	mov	r0, fp
   136b8:	bl	13584 <mount@plt+0x1628>
   136bc:	cmp	r0, #0
   136c0:	bne	13654 <mount@plt+0x16f8>
   136c4:	ldr	r3, [sp, #16]
   136c8:	cmp	r3, #0
   136cc:	beq	13670 <mount@plt+0x1714>
   136d0:	cmp	r9, #0
   136d4:	ldr	fp, [r4, #4]
   136d8:	beq	13658 <mount@plt+0x16fc>
   136dc:	mov	sl, r9
   136e0:	b	136ec <mount@plt+0x1790>
   136e4:	subs	sl, r1, #0
   136e8:	beq	13658 <mount@plt+0x16fc>
   136ec:	mov	r1, fp
   136f0:	ldr	r0, [sl, #4]
   136f4:	bl	119bc <strcmp@plt>
   136f8:	ldr	r1, [sl]
   136fc:	cmp	r0, #0
   13700:	bne	136e4 <mount@plt+0x1788>
   13704:	mov	r9, r1
   13708:	ldr	r5, [sl, #8]
   1370c:	ldr	r6, [sl, #12]
   13710:	b	13658 <mount@plt+0x16fc>
   13714:	vldr	d7, [r4, #16]
   13718:	vcmp.f64	d7, #0.0
   1371c:	vmrs	APSR_nzcv, fpscr
   13720:	bne	136a4 <mount@plt+0x1748>
   13724:	ldr	r4, [r4]
   13728:	cmp	r4, #0
   1372c:	bne	1367c <mount@plt+0x1720>
   13730:	ldr	r0, [sp, #24]
   13734:	cmp	r0, #0
   13738:	beq	13750 <mount@plt+0x17f4>
   1373c:	bl	18090 <mount@plt+0x6134>
   13740:	ldr	r0, [sp, #24]
   13744:	bl	18090 <mount@plt+0x6134>
   13748:	add	r0, sp, #24
   1374c:	bl	17efc <mount@plt+0x5fa0>
   13750:	ldr	r3, [pc, #140]	; 137e4 <mount@plt+0x1888>
   13754:	ldr	r2, [sp, #28]
   13758:	ldr	r3, [r3]
   1375c:	cmp	r2, r3
   13760:	bne	137dc <mount@plt+0x1880>
   13764:	add	sp, sp, #36	; 0x24
   13768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1376c:	ldrd	r0, [r4, #16]
   13770:	mov	r3, fp
   13774:	stm	sp, {r5, r6}
   13778:	strd	r0, [sp, #8]
   1377c:	ldr	r2, [pc, #124]	; 13800 <mount@plt+0x18a4>
   13780:	mov	r1, #1
   13784:	ldr	r0, [sp, #20]
   13788:	bl	11da0 <__fprintf_chk@plt>
   1378c:	b	13670 <mount@plt+0x1714>
   13790:	bl	17ed4 <mount@plt+0x5f78>
   13794:	ldr	r2, [pc, #76]	; 137e8 <mount@plt+0x188c>
   13798:	ldr	r9, [r2]
   1379c:	cmp	r0, #0
   137a0:	str	r0, [sp, #24]
   137a4:	beq	13624 <mount@plt+0x16c8>
   137a8:	bl	18088 <mount@plt+0x612c>
   137ac:	ldr	r3, [pc, #80]	; 13804 <mount@plt+0x18a8>
   137b0:	ldr	r0, [sp, #24]
   137b4:	ldr	r1, [r3]
   137b8:	adds	r1, r1, #0
   137bc:	movne	r1, #1
   137c0:	bl	17f68 <mount@plt+0x600c>
   137c4:	ldr	r0, [sp, #24]
   137c8:	ldr	r1, [pc, #28]	; 137ec <mount@plt+0x1890>
   137cc:	bl	17f70 <mount@plt+0x6014>
   137d0:	ldr	r0, [sp, #24]
   137d4:	bl	18088 <mount@plt+0x612c>
   137d8:	b	13638 <mount@plt+0x16dc>
   137dc:	bl	11ac4 <__stack_chk_fail@plt>
   137e0:			; <UNDEFINED> instruction: 0x000308b0
   137e4:	andeq	sp, r2, r0, ror #29
   137e8:			; <UNDEFINED> instruction: 0x000308b4
   137ec:	andeq	r0, r3, r0, asr #17
   137f0:	muleq	r1, r8, r6
   137f4:	andeq	r0, r3, r0, lsr #17
   137f8:	muleq	r3, r8, r8
   137fc:			; <UNDEFINED> instruction: 0x000308bc
   13800:	andeq	ip, r1, r0, lsr #13
   13804:	andeq	r0, r3, r0, ror #18
   13808:	push	{r4, r5, r6, lr}
   1380c:	mov	r4, r1
   13810:	mov	r5, r0
   13814:	bl	176b8 <mount@plt+0x575c>
   13818:	cmp	r0, #0
   1381c:	bne	13834 <mount@plt+0x18d8>
   13820:	mov	r0, r5
   13824:	ldr	r3, [r4]
   13828:	ldr	r1, [r4, #4]
   1382c:	pop	{r4, r5, r6, lr}
   13830:	bx	r3
   13834:	mvn	r0, #0
   13838:	pop	{r4, r5, r6, pc}
   1383c:	push	{r4, r5, r6, lr}
   13840:	mov	r5, r1
   13844:	ldr	r1, [pc, #32]	; 1386c <mount@plt+0x1910>
   13848:	mov	r4, r0
   1384c:	mov	r2, r0
   13850:	add	r1, pc, r1
   13854:	mov	r0, #1
   13858:	bl	11d70 <__printf_chk@plt>
   1385c:	mov	r1, r5
   13860:	mov	r0, r4
   13864:	pop	{r4, r5, r6, lr}
   13868:	b	13808 <mount@plt+0x18ac>
   1386c:	andeq	r9, r0, r0, lsr r4
   13870:	ldrh	r3, [r0, #6]
   13874:	cmp	r3, #2
   13878:	beq	138c4 <mount@plt+0x1968>
   1387c:	cmp	r3, #10
   13880:	bxne	lr
   13884:	ldr	r2, [r0, #8]
   13888:	ldrh	r3, [r0]
   1388c:	cmp	r2, #0
   13890:	bne	138ac <mount@plt+0x1950>
   13894:	ldr	r2, [r0, #12]
   13898:	cmp	r2, #0
   1389c:	bne	138ac <mount@plt+0x1950>
   138a0:	ldr	r2, [r0, #16]
   138a4:	cmp	r2, #0
   138a8:	beq	138ec <mount@plt+0x1990>
   138ac:	ldrb	r2, [r0, #8]
   138b0:	cmp	r2, #255	; 0xff
   138b4:	beq	138e0 <mount@plt+0x1984>
   138b8:	orr	r3, r3, #2
   138bc:	strh	r3, [r0]
   138c0:	bx	lr
   138c4:	ldr	r2, [r0, #8]
   138c8:	ldrh	r3, [r0]
   138cc:	cmp	r2, #0
   138d0:	beq	138f8 <mount@plt+0x199c>
   138d4:	and	r2, r2, #240	; 0xf0
   138d8:	cmp	r2, #224	; 0xe0
   138dc:	bne	138b8 <mount@plt+0x195c>
   138e0:	orr	r3, r3, #10
   138e4:	strh	r3, [r0]
   138e8:	bx	lr
   138ec:	ldr	r2, [r0, #20]
   138f0:	cmp	r2, #0
   138f4:	bne	138ac <mount@plt+0x1950>
   138f8:	orr	r3, r3, #6
   138fc:	strh	r3, [r0]
   13900:	bx	lr
   13904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13908:	sub	sp, sp, #232	; 0xe8
   1390c:	ldr	r5, [pc, #544]	; 13b34 <mount@plt+0x1bd8>
   13910:	ldr	r3, [pc, #544]	; 13b38 <mount@plt+0x1bdc>
   13914:	add	r5, pc, r5
   13918:	ldr	ip, [pc, #540]	; 13b3c <mount@plt+0x1be0>
   1391c:	ldr	r8, [r5, r3]
   13920:	add	ip, pc, ip
   13924:	mov	r3, #128	; 0x80
   13928:	ldr	lr, [r8]
   1392c:	add	r6, sp, #100	; 0x64
   13930:	strd	r0, [sp, #4]
   13934:	mov	r7, r1
   13938:	mov	r9, r2
   1393c:	str	ip, [sp]
   13940:	mov	r0, r6
   13944:	mov	r1, r3
   13948:	mov	r2, #1
   1394c:	str	lr, [sp, #228]	; 0xe4
   13950:	bl	11f38 <__snprintf_chk@plt>
   13954:	sub	r0, r0, #1
   13958:	cmp	r0, #126	; 0x7e
   1395c:	bhi	13a74 <mount@plt+0x1b18>
   13960:	ldr	r1, [pc, #472]	; 13b40 <mount@plt+0x1be4>
   13964:	mov	r0, r6
   13968:	add	r1, pc, r1
   1396c:	bl	11e9c <fopen64@plt>
   13970:	subs	sl, r0, #0
   13974:	beq	13ac4 <mount@plt+0x1b68>
   13978:	add	r4, sp, #20
   1397c:	mov	r0, r4
   13980:	mov	r2, sl
   13984:	mov	r1, #80	; 0x50
   13988:	bl	11a34 <fgets@plt>
   1398c:	cmp	r0, #0
   13990:	beq	13b00 <mount@plt+0x1ba4>
   13994:	mov	r1, #10
   13998:	mov	r0, r4
   1399c:	bl	11ce0 <strchr@plt>
   139a0:	cmp	r0, #0
   139a4:	movne	r3, #0
   139a8:	strbne	r3, [r0]
   139ac:	mov	r0, sl
   139b0:	bl	11dc4 <fclose@plt>
   139b4:	mov	r2, #0
   139b8:	add	r1, sp, #16
   139bc:	mov	r0, r4
   139c0:	bl	119c8 <strtol@plt>
   139c4:	ldr	r2, [sp, #16]
   139c8:	sub	r3, r2, r4
   139cc:	ldrb	r2, [r2]
   139d0:	clz	r3, r3
   139d4:	lsr	r3, r3, #5
   139d8:	cmp	r2, #0
   139dc:	movne	r3, #1
   139e0:	cmp	r3, #0
   139e4:	mov	r7, r0
   139e8:	bne	13a9c <mount@plt+0x1b40>
   139ec:	sub	r3, r0, #-2147483647	; 0x80000001
   139f0:	cmn	r3, #3
   139f4:	bhi	13a18 <mount@plt+0x1abc>
   139f8:	mov	r0, #0
   139fc:	str	r7, [r9]
   13a00:	ldr	r2, [sp, #228]	; 0xe4
   13a04:	ldr	r3, [r8]
   13a08:	cmp	r2, r3
   13a0c:	bne	13b30 <mount@plt+0x1bd4>
   13a10:	add	sp, sp, #232	; 0xe8
   13a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a18:	bl	11cec <__errno_location@plt>
   13a1c:	ldr	r0, [r0]
   13a20:	cmp	r0, #34	; 0x22
   13a24:	bne	139f8 <mount@plt+0x1a9c>
   13a28:	ldr	r3, [pc, #276]	; 13b44 <mount@plt+0x1be8>
   13a2c:	ldr	r4, [r5, r3]
   13a30:	ldr	r5, [r4]
   13a34:	bl	11c50 <strerror@plt>
   13a38:	ldr	r2, [pc, #264]	; 13b48 <mount@plt+0x1bec>
   13a3c:	mov	r3, r6
   13a40:	add	r2, pc, r2
   13a44:	mov	r1, #1
   13a48:	str	r0, [sp]
   13a4c:	mov	r0, r5
   13a50:	bl	11da0 <__fprintf_chk@plt>
   13a54:	ldr	r2, [pc, #240]	; 13b4c <mount@plt+0x1bf0>
   13a58:	mov	r3, r6
   13a5c:	ldr	r0, [r4]
   13a60:	add	r2, pc, r2
   13a64:	mov	r1, #1
   13a68:	bl	11da0 <__fprintf_chk@plt>
   13a6c:	mvn	r0, #0
   13a70:	b	13a00 <mount@plt+0x1aa4>
   13a74:	ldr	r3, [pc, #200]	; 13b44 <mount@plt+0x1be8>
   13a78:	ldr	r0, [pc, #208]	; 13b50 <mount@plt+0x1bf4>
   13a7c:	mov	r2, #38	; 0x26
   13a80:	ldr	r3, [r5, r3]
   13a84:	mov	r1, #1
   13a88:	add	r0, pc, r0
   13a8c:	ldr	r3, [r3]
   13a90:	bl	11b6c <fwrite@plt>
   13a94:	mvn	r0, #0
   13a98:	b	13a00 <mount@plt+0x1aa4>
   13a9c:	ldr	r1, [pc, #160]	; 13b44 <mount@plt+0x1be8>
   13aa0:	mov	r3, r4
   13aa4:	ldr	r2, [pc, #168]	; 13b54 <mount@plt+0x1bf8>
   13aa8:	ldr	r4, [r5, r1]
   13aac:	add	r2, pc, r2
   13ab0:	mov	r1, #1
   13ab4:	ldr	r0, [r4]
   13ab8:	str	r6, [sp]
   13abc:	bl	11da0 <__fprintf_chk@plt>
   13ac0:	b	13a54 <mount@plt+0x1af8>
   13ac4:	ldr	r3, [pc, #120]	; 13b44 <mount@plt+0x1be8>
   13ac8:	ldr	r3, [r5, r3]
   13acc:	ldr	r4, [r3]
   13ad0:	bl	11cec <__errno_location@plt>
   13ad4:	ldr	r0, [r0]
   13ad8:	bl	11c50 <strerror@plt>
   13adc:	ldr	r2, [pc, #116]	; 13b58 <mount@plt+0x1bfc>
   13ae0:	mov	r3, r6
   13ae4:	add	r2, pc, r2
   13ae8:	mov	r1, #1
   13aec:	str	r0, [sp]
   13af0:	mov	r0, r4
   13af4:	bl	11da0 <__fprintf_chk@plt>
   13af8:	mvn	r0, #0
   13afc:	b	13a00 <mount@plt+0x1aa4>
   13b00:	ldr	r1, [pc, #60]	; 13b44 <mount@plt+0x1be8>
   13b04:	ldr	r2, [pc, #80]	; 13b5c <mount@plt+0x1c00>
   13b08:	mov	r3, r7
   13b0c:	ldr	r4, [r5, r1]
   13b10:	add	r2, pc, r2
   13b14:	mov	r1, #1
   13b18:	ldr	r0, [r4]
   13b1c:	str	r6, [sp]
   13b20:	bl	11da0 <__fprintf_chk@plt>
   13b24:	mov	r0, sl
   13b28:	bl	11dc4 <fclose@plt>
   13b2c:	b	13a54 <mount@plt+0x1af8>
   13b30:	bl	11ac4 <__stack_chk_fail@plt>
   13b34:	andeq	sl, r1, r4, ror #13
   13b38:	andeq	r0, r0, r0, lsl #4
   13b3c:	andeq	r9, r0, ip, ror #6
   13b40:	andeq	r9, r0, r0, lsr #21
   13b44:	andeq	r0, r0, ip, lsl #4
   13b48:	strdeq	r9, [r0], -r4
   13b4c:	andeq	r9, r0, r4, ror #5
   13b50:	andeq	r9, r0, ip, lsl r2
   13b54:	andeq	r9, r0, r0, ror #4
   13b58:	andeq	r9, r0, r8, ror #3
   13b5c:	andeq	r9, r0, ip, asr #3
   13b60:	ldr	r3, [pc, #168]	; 13c10 <mount@plt+0x1cb4>
   13b64:	ldr	r2, [pc, #168]	; 13c14 <mount@plt+0x1cb8>
   13b68:	add	r3, pc, r3
   13b6c:	push	{r4, r5, lr}
   13b70:	sub	sp, sp, #12
   13b74:	ldr	r4, [r3, r2]
   13b78:	mov	r5, r0
   13b7c:	mov	r0, r1
   13b80:	ldr	r2, [r4]
   13b84:	mov	r1, sp
   13b88:	str	r2, [sp, #4]
   13b8c:	bl	11d88 <strtod@plt>
   13b90:	vldr	d6, [pc, #104]	; 13c00 <mount@plt+0x1ca4>
   13b94:	vldr	d7, [pc, #108]	; 13c08 <mount@plt+0x1cac>
   13b98:	vdiv.f64	d0, d0, d6
   13b9c:	vcmp.f64	d0, d7
   13ba0:	vstr	d0, [r5]
   13ba4:	vmrs	APSR_nzcv, fpscr
   13ba8:	moveq	r0, #1
   13bac:	beq	13bc4 <mount@plt+0x1c68>
   13bb0:	ldr	r0, [sp]
   13bb4:	ldrb	r3, [r0]
   13bb8:	cmp	r3, #0
   13bbc:	moveq	r0, r3
   13bc0:	bne	13bdc <mount@plt+0x1c80>
   13bc4:	ldr	r2, [sp, #4]
   13bc8:	ldr	r3, [r4]
   13bcc:	cmp	r2, r3
   13bd0:	bne	13bf8 <mount@plt+0x1c9c>
   13bd4:	add	sp, sp, #12
   13bd8:	pop	{r4, r5, pc}
   13bdc:	ldr	r1, [pc, #52]	; 13c18 <mount@plt+0x1cbc>
   13be0:	add	r1, pc, r1
   13be4:	bl	119bc <strcmp@plt>
   13be8:	adds	r0, r0, #0
   13bec:	movne	r0, #1
   13bf0:	rsb	r0, r0, #0
   13bf4:	b	13bc4 <mount@plt+0x1c68>
   13bf8:	bl	11ac4 <__stack_chk_fail@plt>
   13bfc:	nop			; (mov r0, r0)
   13c00:	andeq	r0, r0, r0
   13c04:	subsmi	r0, r9, r0
   13c08:	andeq	r0, r0, r0
   13c0c:	svcvc	0x00f00000	; IMB
   13c10:	muleq	r1, r0, r4
   13c14:	andeq	r0, r0, r0, lsl #4
   13c18:	andeq	r9, r0, r8, ror r1
   13c1c:	sub	r3, r0, #65	; 0x41
   13c20:	cmp	r3, #5
   13c24:	bls	13c50 <mount@plt+0x1cf4>
   13c28:	sub	r3, r0, #97	; 0x61
   13c2c:	cmp	r3, #5
   13c30:	bls	13c48 <mount@plt+0x1cec>
   13c34:	sub	r0, r0, #48	; 0x30
   13c38:	uxtb	r3, r0
   13c3c:	cmp	r3, #9
   13c40:	mvnhi	r0, #0
   13c44:	bx	lr
   13c48:	sub	r0, r0, #87	; 0x57
   13c4c:	bx	lr
   13c50:	sub	r0, r0, #55	; 0x37
   13c54:	bx	lr
   13c58:	ldr	r3, [pc, #164]	; 13d04 <mount@plt+0x1da8>
   13c5c:	ldr	ip, [pc, #164]	; 13d08 <mount@plt+0x1dac>
   13c60:	add	r3, pc, r3
   13c64:	push	{r4, r5, r6, r7, lr}
   13c68:	sub	sp, sp, #12
   13c6c:	ldr	r5, [r3, ip]
   13c70:	subs	r4, r1, #0
   13c74:	ldr	r3, [r5]
   13c78:	str	r3, [sp, #4]
   13c7c:	beq	13cf8 <mount@plt+0x1d9c>
   13c80:	ldrb	r3, [r4]
   13c84:	cmp	r3, #0
   13c88:	beq	13cf8 <mount@plt+0x1d9c>
   13c8c:	mov	r6, r0
   13c90:	mov	r1, sp
   13c94:	mov	r0, r4
   13c98:	bl	119c8 <strtol@plt>
   13c9c:	ldr	r3, [sp]
   13ca0:	cmp	r3, #0
   13ca4:	cmpne	r3, r4
   13ca8:	mov	r7, r0
   13cac:	beq	13cf8 <mount@plt+0x1d9c>
   13cb0:	ldrb	r3, [r3]
   13cb4:	cmp	r3, #0
   13cb8:	bne	13cf8 <mount@plt+0x1d9c>
   13cbc:	sub	r3, r0, #-2147483647	; 0x80000001
   13cc0:	cmn	r3, #3
   13cc4:	bhi	13ce8 <mount@plt+0x1d8c>
   13cc8:	mov	r0, #0
   13ccc:	str	r7, [r6]
   13cd0:	ldr	r2, [sp, #4]
   13cd4:	ldr	r3, [r5]
   13cd8:	cmp	r2, r3
   13cdc:	bne	13d00 <mount@plt+0x1da4>
   13ce0:	add	sp, sp, #12
   13ce4:	pop	{r4, r5, r6, r7, pc}
   13ce8:	bl	11cec <__errno_location@plt>
   13cec:	ldr	r3, [r0]
   13cf0:	cmp	r3, #34	; 0x22
   13cf4:	bne	13cc8 <mount@plt+0x1d6c>
   13cf8:	mvn	r0, #0
   13cfc:	b	13cd0 <mount@plt+0x1d74>
   13d00:	bl	11ac4 <__stack_chk_fail@plt>
   13d04:	muleq	r1, r8, r3
   13d08:	andeq	r0, r0, r0, lsl #4
   13d0c:	rev	r3, r0
   13d10:	rsb	r0, r3, #0
   13d14:	bics	r0, r0, r3
   13d18:	bne	13d3c <mount@plt+0x1de0>
   13d1c:	cmp	r3, #0
   13d20:	beq	13d34 <mount@plt+0x1dd8>
   13d24:	lsls	r3, r3, #1
   13d28:	add	r0, r0, #1
   13d2c:	bne	13d24 <mount@plt+0x1dc8>
   13d30:	bx	lr
   13d34:	mov	r0, r3
   13d38:	bx	lr
   13d3c:	mvn	r0, #0
   13d40:	bx	lr
   13d44:	ldr	r3, [pc, #160]	; 13dec <mount@plt+0x1e90>
   13d48:	ldr	ip, [pc, #160]	; 13df0 <mount@plt+0x1e94>
   13d4c:	add	r3, pc, r3
   13d50:	push	{r4, r5, r6, r7, lr}
   13d54:	sub	sp, sp, #12
   13d58:	ldr	r5, [r3, ip]
   13d5c:	subs	r4, r1, #0
   13d60:	ldr	r3, [r5]
   13d64:	str	r3, [sp, #4]
   13d68:	beq	13de0 <mount@plt+0x1e84>
   13d6c:	ldrb	r3, [r4]
   13d70:	cmp	r3, #0
   13d74:	beq	13de0 <mount@plt+0x1e84>
   13d78:	mov	r6, r0
   13d7c:	mov	r1, sp
   13d80:	mov	r0, r4
   13d84:	bl	11cc8 <strtoul@plt>
   13d88:	ldr	r3, [sp]
   13d8c:	cmp	r3, #0
   13d90:	cmpne	r3, r4
   13d94:	mov	r7, r0
   13d98:	beq	13de0 <mount@plt+0x1e84>
   13d9c:	ldrb	r3, [r3]
   13da0:	cmp	r3, #0
   13da4:	bne	13de0 <mount@plt+0x1e84>
   13da8:	cmn	r0, #1
   13dac:	beq	13dd0 <mount@plt+0x1e74>
   13db0:	mov	r0, #0
   13db4:	str	r7, [r6]
   13db8:	ldr	r2, [sp, #4]
   13dbc:	ldr	r3, [r5]
   13dc0:	cmp	r2, r3
   13dc4:	bne	13de8 <mount@plt+0x1e8c>
   13dc8:	add	sp, sp, #12
   13dcc:	pop	{r4, r5, r6, r7, pc}
   13dd0:	bl	11cec <__errno_location@plt>
   13dd4:	ldr	r3, [r0]
   13dd8:	cmp	r3, #34	; 0x22
   13ddc:	bne	13db0 <mount@plt+0x1e54>
   13de0:	mvn	r0, #0
   13de4:	b	13db8 <mount@plt+0x1e5c>
   13de8:	bl	11ac4 <__stack_chk_fail@plt>
   13dec:	andeq	sl, r1, ip, lsr #5
   13df0:	andeq	r0, r0, r0, lsl #4
   13df4:	push	{r4, r5, r6, r7, r8, r9, lr}
   13df8:	vpush	{d8}
   13dfc:	ldr	r3, [pc, #496]	; 13ff4 <mount@plt+0x2098>
   13e00:	ldr	ip, [pc, #496]	; 13ff8 <mount@plt+0x209c>
   13e04:	add	r3, pc, r3
   13e08:	sub	sp, sp, #12
   13e0c:	ldr	r8, [r3, ip]
   13e10:	mov	r6, r1
   13e14:	mov	r7, r0
   13e18:	ldr	r3, [r8]
   13e1c:	mov	r0, r1
   13e20:	mov	r1, #46	; 0x2e
   13e24:	mov	r9, r2
   13e28:	str	r3, [sp, #4]
   13e2c:	bl	11ce0 <strchr@plt>
   13e30:	mov	r1, sp
   13e34:	subs	r2, r0, #0
   13e38:	mov	r0, r6
   13e3c:	beq	13f54 <mount@plt+0x1ff8>
   13e40:	bl	11d88 <strtod@plt>
   13e44:	vcmpe.f64	d0, #0.0
   13e48:	vmov.f64	d8, d0
   13e4c:	vmrs	APSR_nzcv, fpscr
   13e50:	bmi	13f34 <mount@plt+0x1fd8>
   13e54:	ldr	r5, [sp]
   13e58:	cmp	r5, r6
   13e5c:	cmpne	r5, #0
   13e60:	beq	13f34 <mount@plt+0x1fd8>
   13e64:	vldr	d7, [pc, #372]	; 13fe0 <mount@plt+0x2084>
   13e68:	vcmp.f64	d0, d7
   13e6c:	vmrs	APSR_nzcv, fpscr
   13e70:	bne	13f8c <mount@plt+0x2030>
   13e74:	bl	11cec <__errno_location@plt>
   13e78:	ldr	r3, [r0]
   13e7c:	cmp	r3, #34	; 0x22
   13e80:	beq	13f34 <mount@plt+0x1fd8>
   13e84:	mov	r3, #1
   13e88:	str	r3, [r9]
   13e8c:	ldrb	r3, [r5]
   13e90:	cmp	r3, #0
   13e94:	vldreq	s15, [pc, #340]	; 13ff0 <mount@plt+0x2094>
   13e98:	beq	13fbc <mount@plt+0x2060>
   13e9c:	ldr	r1, [pc, #344]	; 13ffc <mount@plt+0x20a0>
   13ea0:	mov	r3, #0
   13ea4:	str	r3, [r9]
   13ea8:	add	r1, pc, r1
   13eac:	mov	r0, r5
   13eb0:	bl	11b0c <strcasecmp@plt>
   13eb4:	cmp	r0, #0
   13eb8:	beq	13fd0 <mount@plt+0x2074>
   13ebc:	ldr	r1, [pc, #316]	; 14000 <mount@plt+0x20a4>
   13ec0:	mov	r0, r5
   13ec4:	add	r1, pc, r1
   13ec8:	bl	11b0c <strcasecmp@plt>
   13ecc:	cmp	r0, #0
   13ed0:	beq	13fd0 <mount@plt+0x2074>
   13ed4:	ldr	r1, [pc, #296]	; 14004 <mount@plt+0x20a8>
   13ed8:	mov	r0, r5
   13edc:	add	r1, pc, r1
   13ee0:	bl	11b0c <strcasecmp@plt>
   13ee4:	cmp	r0, #0
   13ee8:	beq	13fd0 <mount@plt+0x2074>
   13eec:	ldr	r1, [pc, #276]	; 14008 <mount@plt+0x20ac>
   13ef0:	mov	r0, r5
   13ef4:	add	r1, pc, r1
   13ef8:	bl	11b0c <strcasecmp@plt>
   13efc:	cmp	r0, #0
   13f00:	beq	13fa0 <mount@plt+0x2044>
   13f04:	ldr	r1, [pc, #256]	; 1400c <mount@plt+0x20b0>
   13f08:	mov	r0, r5
   13f0c:	add	r1, pc, r1
   13f10:	bl	11b0c <strcasecmp@plt>
   13f14:	cmp	r0, #0
   13f18:	beq	13fa0 <mount@plt+0x2044>
   13f1c:	ldr	r1, [pc, #236]	; 14010 <mount@plt+0x20b4>
   13f20:	mov	r0, r5
   13f24:	add	r1, pc, r1
   13f28:	bl	11b0c <strcasecmp@plt>
   13f2c:	cmp	r0, #0
   13f30:	beq	13fa0 <mount@plt+0x2044>
   13f34:	mvn	r0, #0
   13f38:	ldr	r2, [sp, #4]
   13f3c:	ldr	r3, [r8]
   13f40:	cmp	r2, r3
   13f44:	bne	13fdc <mount@plt+0x2080>
   13f48:	add	sp, sp, #12
   13f4c:	vpop	{d8}
   13f50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13f54:	bl	11cc8 <strtoul@plt>
   13f58:	ldr	r5, [sp]
   13f5c:	cmp	r5, #0
   13f60:	cmpne	r5, r6
   13f64:	mov	r4, r0
   13f68:	beq	13f34 <mount@plt+0x1fd8>
   13f6c:	cmn	r0, #1
   13f70:	bne	13f84 <mount@plt+0x2028>
   13f74:	bl	11cec <__errno_location@plt>
   13f78:	ldr	r3, [r0]
   13f7c:	cmp	r3, #34	; 0x22
   13f80:	beq	13f34 <mount@plt+0x1fd8>
   13f84:	vmov	s15, r4
   13f88:	vcvt.f64.u32	d8, s15
   13f8c:	mov	r3, #1
   13f90:	str	r3, [r9]
   13f94:	ldrb	r3, [r5]
   13f98:	cmp	r3, #0
   13f9c:	bne	13e9c <mount@plt+0x1f40>
   13fa0:	vcvt.u32.f64	s15, d8
   13fa4:	vcvt.f64.u32	d6, s15
   13fa8:	vcmpe.f64	d6, d8
   13fac:	vmrs	APSR_nzcv, fpscr
   13fb0:	vstrpl	s15, [r7]
   13fb4:	movpl	r0, #0
   13fb8:	bpl	13f38 <mount@plt+0x1fdc>
   13fbc:	vmov	r3, s15
   13fc0:	mov	r0, #0
   13fc4:	add	r3, r3, #1
   13fc8:	str	r3, [r7]
   13fcc:	b	13f38 <mount@plt+0x1fdc>
   13fd0:	vldr	d7, [pc, #16]	; 13fe8 <mount@plt+0x208c>
   13fd4:	vmul.f64	d8, d8, d7
   13fd8:	b	13fa0 <mount@plt+0x2044>
   13fdc:	bl	11ac4 <__stack_chk_fail@plt>
   13fe0:	andeq	r0, r0, r0
   13fe4:	svcvc	0x00f00000	; IMB
   13fe8:	andeq	r0, r0, r0
   13fec:	addmi	r4, pc, r0
   13ff0:			; <UNDEFINED> instruction: 0xffffffff
   13ff4:	strdeq	sl, [r1], -r4
   13ff8:	andeq	r0, r0, r0, lsl #4
   13ffc:	muleq	r0, r8, lr
   14000:	muleq	r0, r8, lr
   14004:	andeq	r8, r0, r4, lsl #29
   14008:	andeq	r9, r0, r4, asr #4
   1400c:	andeq	r8, r0, ip, asr lr
   14010:	andeq	r8, r0, ip, asr #28
   14014:	ldr	r3, [pc, #176]	; 140cc <mount@plt+0x2170>
   14018:	ldr	ip, [pc, #176]	; 140d0 <mount@plt+0x2174>
   1401c:	add	r3, pc, r3
   14020:	push	{r4, r5, r6, r8, r9, lr}
   14024:	sub	sp, sp, #8
   14028:	ldr	r5, [r3, ip]
   1402c:	subs	r4, r1, #0
   14030:	ldr	r3, [r5]
   14034:	str	r3, [sp, #4]
   14038:	beq	140c0 <mount@plt+0x2164>
   1403c:	ldrb	r3, [r4]
   14040:	cmp	r3, #0
   14044:	beq	140c0 <mount@plt+0x2164>
   14048:	mov	r6, r0
   1404c:	mov	r1, sp
   14050:	mov	r0, r4
   14054:	bl	11d58 <strtoull@plt>
   14058:	ldr	r3, [sp]
   1405c:	cmp	r3, #0
   14060:	cmpne	r3, r4
   14064:	mov	r8, r0
   14068:	mov	r9, r1
   1406c:	beq	140c0 <mount@plt+0x2164>
   14070:	ldrb	r3, [r3]
   14074:	cmp	r3, #0
   14078:	bne	140c0 <mount@plt+0x2164>
   1407c:	mvn	r3, #0
   14080:	mvn	r2, #0
   14084:	cmp	r1, r3
   14088:	cmpeq	r0, r2
   1408c:	beq	140b0 <mount@plt+0x2154>
   14090:	mov	r0, #0
   14094:	strd	r8, [r6]
   14098:	ldr	r2, [sp, #4]
   1409c:	ldr	r3, [r5]
   140a0:	cmp	r2, r3
   140a4:	bne	140c8 <mount@plt+0x216c>
   140a8:	add	sp, sp, #8
   140ac:	pop	{r4, r5, r6, r8, r9, pc}
   140b0:	bl	11cec <__errno_location@plt>
   140b4:	ldr	r3, [r0]
   140b8:	cmp	r3, #34	; 0x22
   140bc:	bne	14090 <mount@plt+0x2134>
   140c0:	mvn	r0, #0
   140c4:	b	14098 <mount@plt+0x213c>
   140c8:	bl	11ac4 <__stack_chk_fail@plt>
   140cc:	ldrdeq	r9, [r1], -ip
   140d0:	andeq	r0, r0, r0, lsl #4
   140d4:	b	13d44 <mount@plt+0x1de8>
   140d8:	ldr	r3, [pc, #152]	; 14178 <mount@plt+0x221c>
   140dc:	ldr	ip, [pc, #152]	; 1417c <mount@plt+0x2220>
   140e0:	add	r3, pc, r3
   140e4:	push	{r4, r5, r6, lr}
   140e8:	sub	sp, sp, #8
   140ec:	ldr	r6, [r3, ip]
   140f0:	subs	r5, r1, #0
   140f4:	ldr	r3, [r6]
   140f8:	str	r3, [sp, #4]
   140fc:	beq	1416c <mount@plt+0x2210>
   14100:	ldrb	r3, [r5]
   14104:	cmp	r3, #0
   14108:	beq	1416c <mount@plt+0x2210>
   1410c:	mov	r4, r0
   14110:	mov	r1, sp
   14114:	mov	r0, r5
   14118:	bl	11cc8 <strtoul@plt>
   1411c:	ldr	r2, [sp]
   14120:	cmp	r0, #65536	; 0x10000
   14124:	movcc	r3, #0
   14128:	movcs	r3, #1
   1412c:	cmp	r2, #0
   14130:	cmpne	r2, r5
   14134:	beq	1416c <mount@plt+0x2210>
   14138:	ldrb	r2, [r2]
   1413c:	cmp	r2, #0
   14140:	movne	r3, #1
   14144:	cmp	r3, #0
   14148:	bne	1416c <mount@plt+0x2210>
   1414c:	strh	r0, [r4]
   14150:	ldr	r1, [sp, #4]
   14154:	ldr	r2, [r6]
   14158:	mov	r0, r3
   1415c:	cmp	r1, r2
   14160:	bne	14174 <mount@plt+0x2218>
   14164:	add	sp, sp, #8
   14168:	pop	{r4, r5, r6, pc}
   1416c:	mvn	r3, #0
   14170:	b	14150 <mount@plt+0x21f4>
   14174:	bl	11ac4 <__stack_chk_fail@plt>
   14178:	andeq	r9, r1, r8, lsl pc
   1417c:	andeq	r0, r0, r0, lsl #4
   14180:	ldr	r3, [pc, #152]	; 14220 <mount@plt+0x22c4>
   14184:	ldr	ip, [pc, #152]	; 14224 <mount@plt+0x22c8>
   14188:	add	r3, pc, r3
   1418c:	push	{r4, r5, r6, lr}
   14190:	sub	sp, sp, #8
   14194:	ldr	r6, [r3, ip]
   14198:	subs	r5, r1, #0
   1419c:	ldr	r3, [r6]
   141a0:	str	r3, [sp, #4]
   141a4:	beq	14214 <mount@plt+0x22b8>
   141a8:	ldrb	r3, [r5]
   141ac:	cmp	r3, #0
   141b0:	beq	14214 <mount@plt+0x22b8>
   141b4:	mov	r4, r0
   141b8:	mov	r1, sp
   141bc:	mov	r0, r5
   141c0:	bl	11cc8 <strtoul@plt>
   141c4:	ldr	r2, [sp]
   141c8:	cmp	r0, #255	; 0xff
   141cc:	movls	r3, #0
   141d0:	movhi	r3, #1
   141d4:	cmp	r2, #0
   141d8:	cmpne	r2, r5
   141dc:	beq	14214 <mount@plt+0x22b8>
   141e0:	ldrb	r2, [r2]
   141e4:	cmp	r2, #0
   141e8:	movne	r3, #1
   141ec:	cmp	r3, #0
   141f0:	bne	14214 <mount@plt+0x22b8>
   141f4:	strb	r0, [r4]
   141f8:	ldr	r1, [sp, #4]
   141fc:	ldr	r2, [r6]
   14200:	mov	r0, r3
   14204:	cmp	r1, r2
   14208:	bne	1421c <mount@plt+0x22c0>
   1420c:	add	sp, sp, #8
   14210:	pop	{r4, r5, r6, pc}
   14214:	mvn	r3, #0
   14218:	b	141f8 <mount@plt+0x229c>
   1421c:	bl	11ac4 <__stack_chk_fail@plt>
   14220:	andeq	r9, r1, r0, ror lr
   14224:	andeq	r0, r0, r0, lsl #4
   14228:	ldr	r3, [pc, #160]	; 142d0 <mount@plt+0x2374>
   1422c:	ldr	ip, [pc, #160]	; 142d4 <mount@plt+0x2378>
   14230:	add	r3, pc, r3
   14234:	push	{r4, r5, r6, r7, lr}
   14238:	sub	sp, sp, #12
   1423c:	ldr	r6, [r3, ip]
   14240:	mov	r4, r1
   14244:	mov	r5, r0
   14248:	ldr	r3, [r6]
   1424c:	mov	r7, r2
   14250:	str	r3, [sp, #4]
   14254:	bl	11cec <__errno_location@plt>
   14258:	mov	r3, #0
   1425c:	cmp	r4, #0
   14260:	str	r3, [r0]
   14264:	beq	142c4 <mount@plt+0x2368>
   14268:	ldrb	r3, [r4]
   1426c:	cmp	r3, #0
   14270:	beq	142c4 <mount@plt+0x2368>
   14274:	mov	r2, r7
   14278:	mov	r1, sp
   1427c:	mov	r0, r4
   14280:	bl	11b9c <strtoll@plt>
   14284:	ldr	r3, [sp]
   14288:	cmp	r3, r4
   1428c:	cmpne	r3, #0
   14290:	beq	142c4 <mount@plt+0x2368>
   14294:	ldrb	r3, [r3]
   14298:	cmp	r3, #0
   1429c:	bne	142c4 <mount@plt+0x2368>
   142a0:	asr	r1, r0, #31
   142a4:	strd	r0, [r5]
   142a8:	ldr	r1, [sp, #4]
   142ac:	ldr	r2, [r6]
   142b0:	mov	r0, r3
   142b4:	cmp	r1, r2
   142b8:	bne	142cc <mount@plt+0x2370>
   142bc:	add	sp, sp, #12
   142c0:	pop	{r4, r5, r6, r7, pc}
   142c4:	mvn	r3, #0
   142c8:	b	142a8 <mount@plt+0x234c>
   142cc:	bl	11ac4 <__stack_chk_fail@plt>
   142d0:	andeq	r9, r1, r8, asr #27
   142d4:	andeq	r0, r0, r0, lsl #4
   142d8:	ldr	r3, [pc, #188]	; 1439c <mount@plt+0x2440>
   142dc:	ldr	ip, [pc, #188]	; 143a0 <mount@plt+0x2444>
   142e0:	add	r3, pc, r3
   142e4:	push	{r4, r5, r6, r7, r8, lr}
   142e8:	sub	sp, sp, #8
   142ec:	ldr	r5, [r3, ip]
   142f0:	mov	r4, r1
   142f4:	mov	r6, r0
   142f8:	ldr	r3, [r5]
   142fc:	mov	r8, r2
   14300:	str	r3, [sp, #4]
   14304:	bl	11cec <__errno_location@plt>
   14308:	mov	r3, #0
   1430c:	cmp	r4, #0
   14310:	str	r3, [r0]
   14314:	beq	14390 <mount@plt+0x2434>
   14318:	ldrb	r3, [r4]
   1431c:	cmp	r3, #0
   14320:	beq	14390 <mount@plt+0x2434>
   14324:	mov	r2, r8
   14328:	mov	r7, r0
   1432c:	mov	r1, sp
   14330:	mov	r0, r4
   14334:	bl	119c8 <strtol@plt>
   14338:	ldr	r3, [sp]
   1433c:	cmp	r3, #0
   14340:	cmpne	r3, r4
   14344:	mov	r2, r0
   14348:	beq	14390 <mount@plt+0x2434>
   1434c:	ldrb	r3, [r3]
   14350:	cmp	r3, #0
   14354:	bne	14390 <mount@plt+0x2434>
   14358:	sub	r3, r0, #-2147483647	; 0x80000001
   1435c:	cmn	r3, #3
   14360:	bhi	14384 <mount@plt+0x2428>
   14364:	mov	r0, #0
   14368:	str	r2, [r6]
   1436c:	ldr	r2, [sp, #4]
   14370:	ldr	r3, [r5]
   14374:	cmp	r2, r3
   14378:	bne	14398 <mount@plt+0x243c>
   1437c:	add	sp, sp, #8
   14380:	pop	{r4, r5, r6, r7, r8, pc}
   14384:	ldr	r3, [r7]
   14388:	cmp	r3, #34	; 0x22
   1438c:	bne	14364 <mount@plt+0x2408>
   14390:	mvn	r0, #0
   14394:	b	1436c <mount@plt+0x2410>
   14398:	bl	11ac4 <__stack_chk_fail@plt>
   1439c:	andeq	r9, r1, r8, lsl sp
   143a0:	andeq	r0, r0, r0, lsl #4
   143a4:	ldr	r3, [pc, #88]	; 14404 <mount@plt+0x24a8>
   143a8:	ldr	ip, [pc, #88]	; 14408 <mount@plt+0x24ac>
   143ac:	add	r3, pc, r3
   143b0:	push	{r4, r5, lr}
   143b4:	sub	sp, sp, #20
   143b8:	ldr	r4, [r3, ip]
   143bc:	mov	r5, r0
   143c0:	mov	r0, sp
   143c4:	ldr	r3, [r4]
   143c8:	str	r3, [sp, #12]
   143cc:	bl	14014 <mount@plt+0x20b8>
   143d0:	cmp	r0, #0
   143d4:	ldrdeq	r2, [sp]
   143d8:	reveq	r2, r2
   143dc:	reveq	r3, r3
   143e0:	streq	r2, [r5, #4]
   143e4:	streq	r3, [r5]
   143e8:	ldr	r2, [sp, #12]
   143ec:	ldr	r3, [r4]
   143f0:	cmp	r2, r3
   143f4:	bne	14400 <mount@plt+0x24a4>
   143f8:	add	sp, sp, #20
   143fc:	pop	{r4, r5, pc}
   14400:	bl	11ac4 <__stack_chk_fail@plt>
   14404:	andeq	r9, r1, ip, asr #24
   14408:	andeq	r0, r0, r0, lsl #4
   1440c:	ldr	r3, [pc, #80]	; 14464 <mount@plt+0x2508>
   14410:	ldr	ip, [pc, #80]	; 14468 <mount@plt+0x250c>
   14414:	add	r3, pc, r3
   14418:	push	{r4, r5, lr}
   1441c:	sub	sp, sp, #12
   14420:	ldr	r4, [r3, ip]
   14424:	mov	r5, r0
   14428:	mov	r0, sp
   1442c:	ldr	r3, [r4]
   14430:	str	r3, [sp, #4]
   14434:	bl	140d4 <mount@plt+0x2178>
   14438:	ldr	r2, [sp, #4]
   1443c:	cmp	r0, #0
   14440:	ldreq	r3, [sp]
   14444:	reveq	r3, r3
   14448:	streq	r3, [r5]
   1444c:	ldr	r3, [r4]
   14450:	cmp	r2, r3
   14454:	bne	14460 <mount@plt+0x2504>
   14458:	add	sp, sp, #12
   1445c:	pop	{r4, r5, pc}
   14460:	bl	11ac4 <__stack_chk_fail@plt>
   14464:	andeq	r9, r1, r4, ror #23
   14468:	andeq	r0, r0, r0, lsl #4
   1446c:	ldr	r3, [pc, #80]	; 144c4 <mount@plt+0x2568>
   14470:	ldr	ip, [pc, #80]	; 144c8 <mount@plt+0x256c>
   14474:	add	r3, pc, r3
   14478:	push	{r4, r5, lr}
   1447c:	sub	sp, sp, #12
   14480:	ldr	r4, [r3, ip]
   14484:	mov	r5, r0
   14488:	add	r0, sp, #2
   1448c:	ldr	r3, [r4]
   14490:	str	r3, [sp, #4]
   14494:	bl	140d8 <mount@plt+0x217c>
   14498:	cmp	r0, #0
   1449c:	ldrheq	r3, [sp, #2]
   144a0:	rev16eq	r3, r3
   144a4:	strheq	r3, [r5]
   144a8:	ldr	r2, [sp, #4]
   144ac:	ldr	r3, [r4]
   144b0:	cmp	r2, r3
   144b4:	bne	144c0 <mount@plt+0x2564>
   144b8:	add	sp, sp, #12
   144bc:	pop	{r4, r5, pc}
   144c0:	bl	11ac4 <__stack_chk_fail@plt>
   144c4:	andeq	r9, r1, r4, lsl #23
   144c8:	andeq	r0, r0, r0, lsl #4
   144cc:	ldr	r3, [pc, #188]	; 14590 <mount@plt+0x2634>
   144d0:	ldr	r2, [pc, #188]	; 14594 <mount@plt+0x2638>
   144d4:	add	r3, pc, r3
   144d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144dc:	sub	sp, sp, #24
   144e0:	ldr	r7, [r3, r2]
   144e4:	ldr	r5, [pc, #172]	; 14598 <mount@plt+0x263c>
   144e8:	mov	r8, r0
   144ec:	ldr	r3, [r7]
   144f0:	mov	sl, r1
   144f4:	add	r9, sp, #8
   144f8:	mov	r4, #0
   144fc:	add	r6, sp, #4
   14500:	str	r3, [sp, #20]
   14504:	mov	r2, #16
   14508:	mov	r1, r6
   1450c:	mov	r0, sl
   14510:	bl	11cc8 <strtoul@plt>
   14514:	cmp	r0, r5
   14518:	bhi	14560 <mount@plt+0x2604>
   1451c:	ldr	r2, [sp, #4]
   14520:	cmp	r2, sl
   14524:	beq	14560 <mount@plt+0x2604>
   14528:	ldrb	r1, [r2]
   1452c:	rev16	r0, r0
   14530:	strh	r0, [r9], #2
   14534:	cmp	r1, #0
   14538:	beq	1457c <mount@plt+0x2620>
   1453c:	sub	r3, r4, #3
   14540:	clz	r3, r3
   14544:	lsr	r3, r3, #5
   14548:	cmp	r1, #58	; 0x3a
   1454c:	orrne	r3, r3, #1
   14550:	cmp	r3, #0
   14554:	addeq	sl, r2, #1
   14558:	addeq	r4, r4, #1
   1455c:	beq	14504 <mount@plt+0x25a8>
   14560:	mvn	r0, #0
   14564:	ldr	r2, [sp, #20]
   14568:	ldr	r3, [r7]
   1456c:	cmp	r2, r3
   14570:	bne	1458c <mount@plt+0x2630>
   14574:	add	sp, sp, #24
   14578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1457c:	ldrd	r2, [sp, #8]
   14580:	mov	r0, #1
   14584:	strd	r2, [r8]
   14588:	b	14564 <mount@plt+0x2608>
   1458c:	bl	11ac4 <__stack_chk_fail@plt>
   14590:	andeq	r9, r1, r4, lsr #22
   14594:	andeq	r0, r0, r0, lsl #4
   14598:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1459c:	sub	r0, r0, #2
   145a0:	cmp	r0, #26
   145a4:	bhi	145b8 <mount@plt+0x265c>
   145a8:	ldr	r3, [pc, #16]	; 145c0 <mount@plt+0x2664>
   145ac:	add	r3, pc, r3
   145b0:	ldr	r0, [r3, r0, lsl #2]
   145b4:	bx	lr
   145b8:	mov	r0, #0
   145bc:	bx	lr
   145c0:	andeq	r8, r0, r0, ror #12
   145c4:	ldr	r3, [pc, #744]	; 148b4 <mount@plt+0x2958>
   145c8:	ldr	ip, [pc, #744]	; 148b8 <mount@plt+0x295c>
   145cc:	add	r3, pc, r3
   145d0:	push	{r4, r5, r6, r7, r8, lr}
   145d4:	sub	sp, sp, #32
   145d8:	ldr	r7, [r3, ip]
   145dc:	mov	r6, r1
   145e0:	mov	r5, r2
   145e4:	ldr	ip, [r7]
   145e8:	mov	r2, #264	; 0x108
   145ec:	mov	r1, #0
   145f0:	str	ip, [sp, #28]
   145f4:	mov	r4, r0
   145f8:	bl	11d28 <memset@plt>
   145fc:	ldr	r1, [pc, #696]	; 148bc <mount@plt+0x2960>
   14600:	mov	r0, r6
   14604:	add	r1, pc, r1
   14608:	bl	119bc <strcmp@plt>
   1460c:	cmp	r0, #0
   14610:	bne	14678 <mount@plt+0x271c>
   14614:	bic	r3, r5, #16
   14618:	cmp	r3, #12
   1461c:	beq	14724 <mount@plt+0x27c8>
   14620:	strh	r5, [r4, #6]
   14624:	uxth	r0, r5
   14628:	bl	1459c <mount@plt+0x2640>
   1462c:	ldrh	r3, [r4]
   14630:	orr	r3, r3, #1
   14634:	strh	r3, [r4]
   14638:	add	r2, r0, #7
   1463c:	cmp	r0, #0
   14640:	movlt	r0, r2
   14644:	mvn	r2, #1
   14648:	asr	r0, r0, #3
   1464c:	strh	r0, [r4, #2]
   14650:	strh	r2, [r4, #4]
   14654:	mov	r0, r4
   14658:	bl	13870 <mount@plt+0x1914>
   1465c:	mov	r0, #0
   14660:	ldr	r2, [sp, #28]
   14664:	ldr	r3, [r7]
   14668:	cmp	r2, r3
   1466c:	bne	148a8 <mount@plt+0x294c>
   14670:	add	sp, sp, #32
   14674:	pop	{r4, r5, r6, r7, r8, pc}
   14678:	ldr	r1, [pc, #576]	; 148c0 <mount@plt+0x2964>
   1467c:	mov	r0, r6
   14680:	add	r1, pc, r1
   14684:	bl	119bc <strcmp@plt>
   14688:	cmp	r0, #0
   1468c:	beq	14700 <mount@plt+0x27a4>
   14690:	ldr	r1, [pc, #556]	; 148c4 <mount@plt+0x2968>
   14694:	mov	r0, r6
   14698:	add	r1, pc, r1
   1469c:	bl	119bc <strcmp@plt>
   146a0:	cmp	r0, #0
   146a4:	beq	14700 <mount@plt+0x27a4>
   146a8:	cmp	r5, #17
   146ac:	beq	147b4 <mount@plt+0x2858>
   146b0:	mov	r1, #58	; 0x3a
   146b4:	mov	r0, r6
   146b8:	bl	11ce0 <strchr@plt>
   146bc:	cmp	r0, #0
   146c0:	beq	1472c <mount@plt+0x27d0>
   146c4:	mov	r0, #10
   146c8:	cmp	r5, #0
   146cc:	cmpne	r5, #10
   146d0:	strh	r0, [r4, #6]
   146d4:	bne	14724 <mount@plt+0x27c8>
   146d8:	mov	r1, r6
   146dc:	add	r2, r4, #8
   146e0:	bl	11a40 <inet_pton@plt>
   146e4:	cmp	r0, #0
   146e8:	ble	14724 <mount@plt+0x27c8>
   146ec:	mov	r2, #16
   146f0:	mvn	r3, #0
   146f4:	strh	r2, [r4, #2]
   146f8:	strh	r3, [r4, #4]
   146fc:	b	14654 <mount@plt+0x26f8>
   14700:	bic	r3, r5, #16
   14704:	cmp	r3, #12
   14708:	beq	14724 <mount@plt+0x27c8>
   1470c:	mov	r2, #0
   14710:	mvn	r3, #1
   14714:	strh	r5, [r4, #6]
   14718:	strh	r2, [r4, #2]
   1471c:	strh	r3, [r4, #4]
   14720:	b	14654 <mount@plt+0x26f8>
   14724:	mvn	r0, #0
   14728:	b	14660 <mount@plt+0x2704>
   1472c:	cmp	r5, #12
   14730:	beq	147f8 <mount@plt+0x289c>
   14734:	cmp	r5, #28
   14738:	beq	14830 <mount@plt+0x28d4>
   1473c:	bics	r3, r5, #2
   14740:	mov	r3, #2
   14744:	strh	r3, [r4, #6]
   14748:	bne	14724 <mount@plt+0x27c8>
   1474c:	add	r5, r4, #7
   14750:	mov	r8, sp
   14754:	mov	r2, #0
   14758:	mov	r1, r8
   1475c:	mov	r0, r6
   14760:	bl	11cc8 <strtoul@plt>
   14764:	cmp	r0, #255	; 0xff
   14768:	bhi	14724 <mount@plt+0x27c8>
   1476c:	ldr	r2, [sp]
   14770:	cmp	r2, r6
   14774:	beq	14724 <mount@plt+0x27c8>
   14778:	strb	r0, [r5, #1]
   1477c:	ldrb	r3, [r2]
   14780:	add	r1, r5, #1
   14784:	cmp	r3, #0
   14788:	beq	147e4 <mount@plt+0x2888>
   1478c:	subs	r3, r3, #46	; 0x2e
   14790:	movne	r3, #1
   14794:	sub	r5, r5, #10
   14798:	cmp	r4, r5
   1479c:	orreq	r3, r3, #1
   147a0:	cmp	r3, #0
   147a4:	bne	14724 <mount@plt+0x27c8>
   147a8:	add	r6, r2, #1
   147ac:	mov	r5, r1
   147b0:	b	14754 <mount@plt+0x27f8>
   147b4:	mov	r2, r6
   147b8:	mov	r1, #256	; 0x100
   147bc:	add	r0, r4, #8
   147c0:	bl	17500 <mount@plt+0x55a4>
   147c4:	cmp	r0, #0
   147c8:	blt	14724 <mount@plt+0x27c8>
   147cc:	uxth	r0, r0
   147d0:	strh	r0, [r4, #2]
   147d4:	lsl	r0, r0, #3
   147d8:	strh	r0, [r4, #4]
   147dc:	strh	r5, [r4, #6]
   147e0:	b	14654 <mount@plt+0x26f8>
   147e4:	mov	r2, #4
   147e8:	mvn	r3, #0
   147ec:	strh	r2, [r4, #2]
   147f0:	strh	r3, [r4, #4]
   147f4:	b	14654 <mount@plt+0x26f8>
   147f8:	strh	r5, [r4, #6]
   147fc:	mov	r1, r6
   14800:	mov	r0, r5
   14804:	add	r2, sp, #4
   14808:	bl	1945c <mount@plt+0x7500>
   1480c:	cmp	r0, #0
   14810:	ble	14724 <mount@plt+0x27c8>
   14814:	ldrh	r1, [sp, #6]
   14818:	mov	r2, #2
   1481c:	mvn	r3, #0
   14820:	strh	r1, [r4, #8]
   14824:	strh	r2, [r4, #2]
   14828:	strh	r3, [r4, #4]
   1482c:	b	14654 <mount@plt+0x26f8>
   14830:	add	r8, r4, #8
   14834:	strh	r5, [r4, #6]
   14838:	mov	r1, r6
   1483c:	mov	r0, r5
   14840:	mov	r2, r8
   14844:	mov	r3, #256	; 0x100
   14848:	bl	19754 <mount@plt+0x77f8>
   1484c:	cmp	r0, #0
   14850:	ble	14724 <mount@plt+0x27c8>
   14854:	ldr	r3, [r4, #8]
   14858:	mov	r2, #4
   1485c:	rev	r3, r3
   14860:	tst	r3, #256	; 0x100
   14864:	mov	r3, #20
   14868:	strh	r2, [r4, #2]
   1486c:	strh	r3, [r4, #4]
   14870:	bne	148ac <mount@plt+0x2950>
   14874:	mov	r1, r8
   14878:	mov	r2, #1
   1487c:	b	14888 <mount@plt+0x292c>
   14880:	cmp	r2, #64	; 0x40
   14884:	beq	14654 <mount@plt+0x26f8>
   14888:	ldr	r3, [r1, #4]!
   1488c:	add	r2, r2, #1
   14890:	rev	r3, r3
   14894:	tst	r3, #256	; 0x100
   14898:	beq	14880 <mount@plt+0x2924>
   1489c:	lsl	r2, r2, #2
   148a0:	strh	r2, [r4, #2]
   148a4:	b	14654 <mount@plt+0x26f8>
   148a8:	bl	11ac4 <__stack_chk_fail@plt>
   148ac:	mov	r2, #1
   148b0:	b	1489c <mount@plt+0x2940>
   148b4:	andeq	r9, r1, ip, lsr #20
   148b8:	andeq	r0, r0, r0, lsl #4
   148bc:	andeq	r8, r0, r4, ror r7
   148c0:	andeq	r8, r0, r0, lsl #14
   148c4:	andeq	r8, r0, ip, ror #13
   148c8:	ldr	r3, [pc, #148]	; 14964 <mount@plt+0x2a08>
   148cc:	ldr	ip, [pc, #148]	; 14968 <mount@plt+0x2a0c>
   148d0:	add	r3, pc, r3
   148d4:	push	{r4, r5, r6, r7, r8, lr}
   148d8:	sub	sp, sp, #272	; 0x110
   148dc:	ldr	r4, [r3, ip]
   148e0:	mov	r2, #0
   148e4:	mov	r7, r0
   148e8:	ldr	r3, [r4]
   148ec:	mov	r6, r1
   148f0:	str	r3, [sp, #268]	; 0x10c
   148f4:	bl	13d44 <mount@plt+0x1de8>
   148f8:	subs	r5, r0, #0
   148fc:	bne	1491c <mount@plt+0x29c0>
   14900:	ldr	r2, [sp, #268]	; 0x10c
   14904:	ldr	r3, [r4]
   14908:	mov	r0, r5
   1490c:	cmp	r2, r3
   14910:	bne	14960 <mount@plt+0x2a04>
   14914:	add	sp, sp, #272	; 0x110
   14918:	pop	{r4, r5, r6, r7, r8, pc}
   1491c:	add	r8, sp, #4
   14920:	mov	r1, r6
   14924:	mov	r0, r8
   14928:	mov	r2, #2
   1492c:	bl	145c4 <mount@plt+0x2668>
   14930:	subs	r5, r0, #0
   14934:	bne	14958 <mount@plt+0x29fc>
   14938:	ldrh	r3, [r8, #6]
   1493c:	cmp	r3, #2
   14940:	bne	14958 <mount@plt+0x29fc>
   14944:	ldr	r0, [sp, #12]
   14948:	bl	13d0c <mount@plt+0x1db0>
   1494c:	cmp	r0, #0
   14950:	strge	r0, [r7]
   14954:	bge	14900 <mount@plt+0x29a4>
   14958:	mvn	r5, #0
   1495c:	b	14900 <mount@plt+0x29a4>
   14960:	bl	11ac4 <__stack_chk_fail@plt>
   14964:	andeq	r9, r1, r8, lsr #14
   14968:	andeq	r0, r0, r0, lsl #4
   1496c:	ldr	r3, [pc, #288]	; 14a94 <mount@plt+0x2b38>
   14970:	ldr	ip, [pc, #288]	; 14a98 <mount@plt+0x2b3c>
   14974:	add	r3, pc, r3
   14978:	push	{r4, r5, r6, r7, r8, lr}
   1497c:	sub	sp, sp, #8
   14980:	ldr	r5, [r3, ip]
   14984:	mov	r6, r1
   14988:	mov	r4, r0
   1498c:	ldr	r3, [r5]
   14990:	mov	r0, r1
   14994:	mov	r1, #47	; 0x2f
   14998:	mov	r8, r2
   1499c:	str	r3, [sp, #4]
   149a0:	bl	11ce0 <strchr@plt>
   149a4:	subs	r7, r0, #0
   149a8:	beq	14a48 <mount@plt+0x2aec>
   149ac:	mov	r3, #0
   149b0:	mov	r1, r6
   149b4:	strb	r3, [r7]
   149b8:	mov	r2, r8
   149bc:	mov	r0, r4
   149c0:	bl	145c4 <mount@plt+0x2668>
   149c4:	mov	r3, #47	; 0x2f
   149c8:	strb	r3, [r7]
   149cc:	subs	r6, r0, #0
   149d0:	beq	149f0 <mount@plt+0x2a94>
   149d4:	ldr	r2, [sp, #4]
   149d8:	ldr	r3, [r5]
   149dc:	mov	r0, r6
   149e0:	cmp	r2, r3
   149e4:	bne	14a90 <mount@plt+0x2b34>
   149e8:	add	sp, sp, #8
   149ec:	pop	{r4, r5, r6, r7, r8, pc}
   149f0:	ldrh	r0, [r4, #6]
   149f4:	bl	1459c <mount@plt+0x2640>
   149f8:	ldrsh	r3, [r4, #4]
   149fc:	cmn	r3, #2
   14a00:	mov	r6, r0
   14a04:	beq	14a88 <mount@plt+0x2b2c>
   14a08:	add	r1, r7, #1
   14a0c:	mov	r0, sp
   14a10:	bl	148c8 <mount@plt+0x296c>
   14a14:	cmp	r0, #0
   14a18:	bne	14a88 <mount@plt+0x2b2c>
   14a1c:	ldr	r0, [sp]
   14a20:	cmp	r0, r6
   14a24:	bhi	14a88 <mount@plt+0x2b2c>
   14a28:	sxth	r0, r0
   14a2c:	mov	r3, #1
   14a30:	ldrh	r2, [r4]
   14a34:	strh	r0, [r4, #4]
   14a38:	mov	r6, #0
   14a3c:	orr	r3, r3, r2
   14a40:	strh	r3, [r4]
   14a44:	b	149d4 <mount@plt+0x2a78>
   14a48:	mov	r1, r6
   14a4c:	mov	r2, r8
   14a50:	mov	r0, r4
   14a54:	bl	145c4 <mount@plt+0x2668>
   14a58:	subs	r6, r0, #0
   14a5c:	bne	149d4 <mount@plt+0x2a78>
   14a60:	ldrh	r0, [r4, #6]
   14a64:	bl	1459c <mount@plt+0x2640>
   14a68:	ldrsh	r3, [r4, #4]
   14a6c:	cmn	r3, #2
   14a70:	sxthne	r0, r0
   14a74:	movne	r3, r6
   14a78:	bne	14a30 <mount@plt+0x2ad4>
   14a7c:	mov	r0, r6
   14a80:	mov	r3, r6
   14a84:	b	14a30 <mount@plt+0x2ad4>
   14a88:	mvn	r6, #0
   14a8c:	b	149d4 <mount@plt+0x2a78>
   14a90:	bl	11ac4 <__stack_chk_fail@plt>
   14a94:	andeq	r9, r1, r4, lsl #13
   14a98:	andeq	r0, r0, r0, lsl #4
   14a9c:	mov	ip, r1
   14aa0:	push	{r4, r5, r6, lr}
   14aa4:	ldrh	r3, [ip], #4
   14aa8:	sub	r3, r3, #6
   14aac:	cmp	r3, #14
   14ab0:	addls	pc, pc, r3, lsl #2
   14ab4:	b	14bb8 <mount@plt+0x2c5c>
   14ab8:	b	14b9c <mount@plt+0x2c40>
   14abc:	b	14bb8 <mount@plt+0x2c5c>
   14ac0:	b	14b80 <mount@plt+0x2c24>
   14ac4:	b	14bb8 <mount@plt+0x2c5c>
   14ac8:	b	14bb8 <mount@plt+0x2c5c>
   14acc:	b	14bb8 <mount@plt+0x2c5c>
   14ad0:	b	14bb8 <mount@plt+0x2c5c>
   14ad4:	b	14bb8 <mount@plt+0x2c5c>
   14ad8:	b	14b54 <mount@plt+0x2bf8>
   14adc:	b	14bb8 <mount@plt+0x2c5c>
   14ae0:	b	14bb8 <mount@plt+0x2c5c>
   14ae4:	b	14bb8 <mount@plt+0x2c5c>
   14ae8:	b	14bb8 <mount@plt+0x2c5c>
   14aec:	b	14bb8 <mount@plt+0x2c5c>
   14af0:	b	14af4 <mount@plt+0x2b98>
   14af4:	mov	r1, #10
   14af8:	mov	r3, #16
   14afc:	strh	r1, [r0, #6]
   14b00:	strh	r3, [r0, #2]
   14b04:	ldr	r5, [ip]
   14b08:	ldr	r4, [ip, #4]
   14b0c:	ldr	lr, [ip, #8]
   14b10:	ldr	r1, [ip, #12]
   14b14:	str	r5, [r0, #8]
   14b18:	str	r4, [r0, #12]
   14b1c:	str	lr, [r0, #16]
   14b20:	str	r1, [r0, #20]
   14b24:	cmp	r2, #0
   14b28:	beq	14b38 <mount@plt+0x2bdc>
   14b2c:	ldrh	r3, [r0, #6]
   14b30:	cmp	r3, r2
   14b34:	bne	14bc0 <mount@plt+0x2c64>
   14b38:	mov	r1, #0
   14b3c:	mvn	r3, #0
   14b40:	strh	r3, [r0, #4]
   14b44:	strh	r1, [r0]
   14b48:	bl	13870 <mount@plt+0x1914>
   14b4c:	mov	r0, r1
   14b50:	pop	{r4, r5, r6, pc}
   14b54:	mov	r1, #4
   14b58:	mov	r3, #10
   14b5c:	strh	r1, [r0, #6]
   14b60:	strh	r3, [r0, #2]
   14b64:	ldr	r1, [ip, #4]
   14b68:	ldr	lr, [ip]
   14b6c:	str	r1, [r0, #12]
   14b70:	str	lr, [r0, #8]
   14b74:	ldrh	r1, [ip, #8]
   14b78:	strh	r1, [r0, #16]
   14b7c:	b	14b24 <mount@plt+0x2bc8>
   14b80:	mov	r3, #4
   14b84:	mov	ip, #2
   14b88:	strh	ip, [r0, #6]
   14b8c:	strh	r3, [r0, #2]
   14b90:	ldr	r3, [r1, #4]
   14b94:	str	r3, [r0, #8]
   14b98:	b	14b24 <mount@plt+0x2bc8>
   14b9c:	mov	r3, #2
   14ba0:	mov	ip, #12
   14ba4:	strh	ip, [r0, #6]
   14ba8:	strh	r3, [r0, #2]
   14bac:	ldrh	r3, [r1, #4]
   14bb0:	strh	r3, [r0, #8]
   14bb4:	b	14b24 <mount@plt+0x2bc8>
   14bb8:	mvn	r0, #0
   14bbc:	pop	{r4, r5, r6, pc}
   14bc0:	mvn	r0, #1
   14bc4:	pop	{r4, r5, r6, pc}
   14bc8:	push	{r4, r5, r6, lr}
   14bcc:	sub	sp, sp, #272	; 0x110
   14bd0:	ldr	r4, [pc, #116]	; 14c4c <mount@plt+0x2cf0>
   14bd4:	ldr	r2, [pc, #116]	; 14c50 <mount@plt+0x2cf4>
   14bd8:	add	r4, pc, r4
   14bdc:	mov	r1, r0
   14be0:	ldr	r5, [r4, r2]
   14be4:	mov	r6, r0
   14be8:	mov	r2, #2
   14bec:	ldr	r3, [r5]
   14bf0:	add	r0, sp, #4
   14bf4:	str	r3, [sp, #268]	; 0x10c
   14bf8:	bl	145c4 <mount@plt+0x2668>
   14bfc:	cmp	r0, #0
   14c00:	bne	14c20 <mount@plt+0x2cc4>
   14c04:	ldr	r2, [sp, #268]	; 0x10c
   14c08:	ldr	r3, [r5]
   14c0c:	ldr	r0, [sp, #12]
   14c10:	cmp	r2, r3
   14c14:	bne	14c48 <mount@plt+0x2cec>
   14c18:	add	sp, sp, #272	; 0x110
   14c1c:	pop	{r4, r5, r6, pc}
   14c20:	ldr	r1, [pc, #44]	; 14c54 <mount@plt+0x2cf8>
   14c24:	ldr	r2, [pc, #44]	; 14c58 <mount@plt+0x2cfc>
   14c28:	mov	r3, r6
   14c2c:	ldr	r0, [r4, r1]
   14c30:	add	r2, pc, r2
   14c34:	mov	r1, #1
   14c38:	ldr	r0, [r0]
   14c3c:	bl	11da0 <__fprintf_chk@plt>
   14c40:	mov	r0, #1
   14c44:	bl	11cb0 <exit@plt>
   14c48:	bl	11ac4 <__stack_chk_fail@plt>
   14c4c:	andeq	r9, r1, r0, lsr #8
   14c50:	andeq	r0, r0, r0, lsl #4
   14c54:	andeq	r0, r0, ip, lsl #4
   14c58:	andeq	r8, r0, r8, asr r1
   14c5c:	ldr	r3, [pc, #44]	; 14c90 <mount@plt+0x2d34>
   14c60:	ldr	r0, [pc, #44]	; 14c94 <mount@plt+0x2d38>
   14c64:	add	r3, pc, r3
   14c68:	push	{r4, lr}
   14c6c:	mov	r2, #48	; 0x30
   14c70:	ldr	ip, [r3, r0]
   14c74:	ldr	r0, [pc, #28]	; 14c98 <mount@plt+0x2d3c>
   14c78:	mov	r1, #1
   14c7c:	add	r0, pc, r0
   14c80:	ldr	r3, [ip]
   14c84:	bl	11b6c <fwrite@plt>
   14c88:	mvn	r0, #0
   14c8c:	bl	11cb0 <exit@plt>
   14c90:	muleq	r1, r4, r3
   14c94:	andeq	r0, r0, ip, lsl #4
   14c98:	andeq	r8, r0, r0, asr #2
   14c9c:	ldr	r1, [pc, #48]	; 14cd4 <mount@plt+0x2d78>
   14ca0:	ldr	ip, [pc, #48]	; 14cd8 <mount@plt+0x2d7c>
   14ca4:	add	r1, pc, r1
   14ca8:	push	{r4, lr}
   14cac:	mov	r3, r0
   14cb0:	ldr	ip, [r1, ip]
   14cb4:	ldr	r2, [pc, #32]	; 14cdc <mount@plt+0x2d80>
   14cb8:	mov	r0, r1
   14cbc:	add	r2, pc, r2
   14cc0:	mov	r1, #1
   14cc4:	ldr	r0, [ip]
   14cc8:	bl	11da0 <__fprintf_chk@plt>
   14ccc:	mvn	r0, #0
   14cd0:	bl	11cb0 <exit@plt>
   14cd4:	andeq	r9, r1, r4, asr r3
   14cd8:	andeq	r0, r0, ip, lsl #4
   14cdc:	andeq	r8, r0, r4, lsr r1
   14ce0:	ldr	ip, [pc, #52]	; 14d1c <mount@plt+0x2dc0>
   14ce4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ce8:	add	ip, pc, ip
   14cec:	ldr	lr, [pc, #44]	; 14d20 <mount@plt+0x2dc4>
   14cf0:	sub	sp, sp, #12
   14cf4:	ldr	r2, [pc, #40]	; 14d24 <mount@plt+0x2dc8>
   14cf8:	ldr	lr, [ip, lr]
   14cfc:	mov	r3, r1
   14d00:	str	r0, [sp]
   14d04:	add	r2, pc, r2
   14d08:	mov	r1, #1
   14d0c:	ldr	r0, [lr]
   14d10:	bl	11da0 <__fprintf_chk@plt>
   14d14:	mvn	r0, #0
   14d18:	bl	11cb0 <exit@plt>
   14d1c:	andeq	r9, r1, r0, lsl r3
   14d20:	andeq	r0, r0, ip, lsl #4
   14d24:	andeq	r8, r0, r0, lsl r1
   14d28:	ldr	ip, [pc, #52]	; 14d64 <mount@plt+0x2e08>
   14d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d30:	add	ip, pc, ip
   14d34:	ldr	lr, [pc, #44]	; 14d68 <mount@plt+0x2e0c>
   14d38:	mov	r3, r0
   14d3c:	sub	sp, sp, #12
   14d40:	ldr	r0, [ip, lr]
   14d44:	ldr	r2, [pc, #32]	; 14d6c <mount@plt+0x2e10>
   14d48:	str	r1, [sp]
   14d4c:	add	r2, pc, r2
   14d50:	mov	r1, #1
   14d54:	ldr	r0, [r0]
   14d58:	bl	11da0 <__fprintf_chk@plt>
   14d5c:	mvn	r0, #0
   14d60:	bl	11cb0 <exit@plt>
   14d64:	andeq	r9, r1, r8, asr #5
   14d68:	andeq	r0, r0, ip, lsl #4
   14d6c:	andeq	r8, r0, ip, ror #1
   14d70:	ldr	ip, [pc, #52]	; 14dac <mount@plt+0x2e50>
   14d74:	push	{lr}		; (str lr, [sp, #-4]!)
   14d78:	add	ip, pc, ip
   14d7c:	ldr	lr, [pc, #44]	; 14db0 <mount@plt+0x2e54>
   14d80:	mov	r3, r0
   14d84:	sub	sp, sp, #12
   14d88:	ldr	r0, [ip, lr]
   14d8c:	ldr	r2, [pc, #32]	; 14db4 <mount@plt+0x2e58>
   14d90:	str	r1, [sp]
   14d94:	add	r2, pc, r2
   14d98:	mov	r1, #1
   14d9c:	ldr	r0, [r0]
   14da0:	bl	11da0 <__fprintf_chk@plt>
   14da4:	mvn	r0, #0
   14da8:	bl	11cb0 <exit@plt>
   14dac:	andeq	r9, r1, r0, lsl #5
   14db0:	andeq	r0, r0, ip, lsl #4
   14db4:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   14db8:	ldr	r1, [pc, #48]	; 14df0 <mount@plt+0x2e94>
   14dbc:	ldr	ip, [pc, #48]	; 14df4 <mount@plt+0x2e98>
   14dc0:	add	r1, pc, r1
   14dc4:	push	{r4, lr}
   14dc8:	mov	r3, r0
   14dcc:	ldr	ip, [r1, ip]
   14dd0:	ldr	r2, [pc, #32]	; 14df8 <mount@plt+0x2e9c>
   14dd4:	mov	r0, r1
   14dd8:	add	r2, pc, r2
   14ddc:	mov	r1, #1
   14de0:	ldr	r0, [ip]
   14de4:	bl	11da0 <__fprintf_chk@plt>
   14de8:	mvn	r0, #0
   14dec:	pop	{r4, pc}
   14df0:	andeq	r9, r1, r8, lsr r2
   14df4:	andeq	r0, r0, ip, lsl #4
   14df8:	andeq	r8, r0, ip, asr #1
   14dfc:	push	{r4, r5, r6, lr}
   14e00:	ldrb	r4, [r0]
   14e04:	cmp	r4, #0
   14e08:	beq	14e54 <mount@plt+0x2ef8>
   14e0c:	mov	r5, r0
   14e10:	bl	11cd4 <strlen@plt>
   14e14:	cmp	r0, #15
   14e18:	bhi	14e54 <mount@plt+0x2ef8>
   14e1c:	cmp	r4, #47	; 0x2f
   14e20:	beq	14e54 <mount@plt+0x2ef8>
   14e24:	bl	11c98 <__ctype_b_loc@plt>
   14e28:	ldr	r2, [r0]
   14e2c:	b	14e44 <mount@plt+0x2ee8>
   14e30:	ldrb	r4, [r5, #1]!
   14e34:	cmp	r4, #0
   14e38:	beq	14e5c <mount@plt+0x2f00>
   14e3c:	cmp	r4, #47	; 0x2f
   14e40:	beq	14e54 <mount@plt+0x2ef8>
   14e44:	lsl	r4, r4, #1
   14e48:	ldrh	r3, [r2, r4]
   14e4c:	tst	r3, #8192	; 0x2000
   14e50:	beq	14e30 <mount@plt+0x2ed4>
   14e54:	mvn	r0, #0
   14e58:	pop	{r4, r5, r6, pc}
   14e5c:	mov	r0, r4
   14e60:	pop	{r4, r5, r6, pc}
   14e64:	push	{r4, r5, r6, lr}
   14e68:	mov	r6, r0
   14e6c:	mov	r0, r1
   14e70:	mov	r4, r1
   14e74:	bl	14dfc <mount@plt+0x2ea0>
   14e78:	subs	r5, r0, #0
   14e7c:	beq	14e88 <mount@plt+0x2f2c>
   14e80:	mov	r0, r5
   14e84:	pop	{r4, r5, r6, pc}
   14e88:	mov	r1, r4
   14e8c:	mov	r0, r6
   14e90:	mov	r2, #16
   14e94:	bl	11d40 <strncpy@plt>
   14e98:	mov	r0, r5
   14e9c:	pop	{r4, r5, r6, pc}
   14ea0:	push	{r4, lr}
   14ea4:	mov	r4, r0
   14ea8:	ldr	r0, [pc, #84]	; 14f04 <mount@plt+0x2fa8>
   14eac:	cmp	r1, #0
   14eb0:	add	r0, pc, r0
   14eb4:	addne	r4, r1, #4
   14eb8:	beq	14ed4 <mount@plt+0x2f78>
   14ebc:	mov	r0, r4
   14ec0:	bl	14dfc <mount@plt+0x2ea0>
   14ec4:	cmp	r0, #0
   14ec8:	moveq	r0, r4
   14ecc:	movne	r0, #0
   14ed0:	pop	{r4, pc}
   14ed4:	ldr	r1, [pc, #44]	; 14f08 <mount@plt+0x2fac>
   14ed8:	ldr	r2, [pc, #44]	; 14f0c <mount@plt+0x2fb0>
   14edc:	mov	r3, r4
   14ee0:	ldr	r0, [r0, r1]
   14ee4:	add	r2, pc, r2
   14ee8:	mov	r1, #1
   14eec:	ldr	r0, [r0]
   14ef0:	bl	11da0 <__fprintf_chk@plt>
   14ef4:	mov	r0, r4
   14ef8:	bl	17080 <mount@plt+0x5124>
   14efc:	mov	r4, r0
   14f00:	b	14ebc <mount@plt+0x2f60>
   14f04:	andeq	r9, r1, r8, asr #2
   14f08:	andeq	r0, r0, ip, lsl #4
   14f0c:	ldrdeq	r7, [r0], -ip
   14f10:	push	{r4, r5, r6, lr}
   14f14:	mov	r4, r1
   14f18:	mov	r6, r0
   14f1c:	bl	11cd4 <strlen@plt>
   14f20:	mov	r5, r0
   14f24:	mov	r0, r4
   14f28:	bl	11cd4 <strlen@plt>
   14f2c:	cmp	r5, r0
   14f30:	bhi	14f48 <mount@plt+0x2fec>
   14f34:	mov	r2, r5
   14f38:	mov	r1, r6
   14f3c:	mov	r0, r4
   14f40:	pop	{r4, r5, r6, lr}
   14f44:	b	11a94 <memcmp@plt>
   14f48:	mvn	r0, #0
   14f4c:	pop	{r4, r5, r6, pc}
   14f50:	push	{r4, r5, r6, r7, r8, lr}
   14f54:	asrs	r5, r2, #5
   14f58:	add	r7, r0, #8
   14f5c:	add	r6, r1, #8
   14f60:	and	r4, r2, #31
   14f64:	beq	14f84 <mount@plt+0x3028>
   14f68:	lsl	r2, r5, #2
   14f6c:	mov	r1, r6
   14f70:	mov	r0, r7
   14f74:	bl	11a94 <memcmp@plt>
   14f78:	cmp	r0, #0
   14f7c:	mvnne	r4, #0
   14f80:	bne	14fb4 <mount@plt+0x3058>
   14f84:	cmp	r4, #0
   14f88:	beq	14fb4 <mount@plt+0x3058>
   14f8c:	rsb	r2, r4, #32
   14f90:	mvn	r4, #0
   14f94:	ldr	r3, [r7, r5, lsl #2]
   14f98:	lsl	r2, r4, r2
   14f9c:	ldr	r1, [r6, r5, lsl #2]
   14fa0:	rev	r2, r2
   14fa4:	eor	r3, r3, r1
   14fa8:	tst	r3, r2
   14fac:	movne	r4, #1
   14fb0:	moveq	r4, #0
   14fb4:	mov	r0, r4
   14fb8:	pop	{r4, r5, r6, r7, r8, pc}
   14fbc:	ldr	r3, [pc, #140]	; 15050 <mount@plt+0x30f4>
   14fc0:	ldr	ip, [pc, #140]	; 15054 <mount@plt+0x30f8>
   14fc4:	add	r3, pc, r3
   14fc8:	push	{r4, r5, r6, lr}
   14fcc:	sub	sp, sp, #272	; 0x110
   14fd0:	ldr	r4, [r3, ip]
   14fd4:	subs	r2, r1, #0
   14fd8:	ldr	r3, [r4]
   14fdc:	str	r3, [sp, #268]	; 0x10c
   14fe0:	beq	15028 <mount@plt+0x30cc>
   14fe4:	ldrh	r2, [r0, #6]
   14fe8:	mov	r5, r0
   14fec:	cmp	r2, #0
   14ff0:	beq	15028 <mount@plt+0x30cc>
   14ff4:	ldrsh	r3, [r0, #4]
   14ff8:	cmp	r3, #0
   14ffc:	ble	15028 <mount@plt+0x30cc>
   15000:	add	r6, sp, #4
   15004:	mov	r0, r6
   15008:	bl	14a9c <mount@plt+0x2b40>
   1500c:	cmp	r0, #0
   15010:	bne	15044 <mount@plt+0x30e8>
   15014:	mov	r0, r6
   15018:	ldrsh	r2, [r5, #4]
   1501c:	mov	r1, r5
   15020:	bl	14f50 <mount@plt+0x2ff4>
   15024:	b	1502c <mount@plt+0x30d0>
   15028:	mov	r0, #0
   1502c:	ldr	r2, [sp, #268]	; 0x10c
   15030:	ldr	r3, [r4]
   15034:	cmp	r2, r3
   15038:	bne	1504c <mount@plt+0x30f0>
   1503c:	add	sp, sp, #272	; 0x110
   15040:	pop	{r4, r5, r6, pc}
   15044:	mvn	r0, #0
   15048:	b	1502c <mount@plt+0x30d0>
   1504c:	bl	11ac4 <__stack_chk_fail@plt>
   15050:	andeq	r9, r1, r4, lsr r0
   15054:	andeq	r0, r0, r0, lsl #4
   15058:	ldr	r3, [pc, #412]	; 151fc <mount@plt+0x32a0>
   1505c:	ldr	r2, [pc, #412]	; 15200 <mount@plt+0x32a4>
   15060:	add	r3, pc, r3
   15064:	push	{r4, r5, r6, lr}
   15068:	sub	sp, sp, #1040	; 0x410
   1506c:	ldr	r4, [r3, r2]
   15070:	ldr	r5, [pc, #396]	; 15204 <mount@plt+0x32a8>
   15074:	sub	sp, sp, #8
   15078:	add	r5, pc, r5
   1507c:	ldr	r3, [r4]
   15080:	mov	r0, r5
   15084:	str	r3, [sp, #1044]	; 0x414
   15088:	bl	11c20 <getenv@plt>
   1508c:	cmp	r0, #0
   15090:	beq	150fc <mount@plt+0x31a0>
   15094:	mov	r0, r5
   15098:	bl	11c20 <getenv@plt>
   1509c:	mov	r2, #10
   150a0:	mov	r1, #0
   150a4:	bl	119c8 <strtol@plt>
   150a8:	subs	r5, r0, #0
   150ac:	beq	150f4 <mount@plt+0x3198>
   150b0:	ldr	r2, [sp, #1044]	; 0x414
   150b4:	ldr	r3, [r4]
   150b8:	mov	r0, r5
   150bc:	cmp	r2, r3
   150c0:	bne	151f8 <mount@plt+0x329c>
   150c4:	add	sp, sp, #1040	; 0x410
   150c8:	add	sp, sp, #8
   150cc:	pop	{r4, r5, r6, pc}
   150d0:	ldr	r3, [pc, #304]	; 15208 <mount@plt+0x32ac>
   150d4:	ldr	r2, [sp, #12]
   150d8:	cmp	r2, r3
   150dc:	bne	15170 <mount@plt+0x3214>
   150e0:	ldr	r5, [sp, #16]
   150e4:	mov	r0, r6
   150e8:	bl	11dc4 <fclose@plt>
   150ec:	cmp	r5, #0
   150f0:	bne	150b0 <mount@plt+0x3154>
   150f4:	mov	r5, #100	; 0x64
   150f8:	b	150b0 <mount@plt+0x3154>
   150fc:	ldr	r5, [pc, #264]	; 1520c <mount@plt+0x32b0>
   15100:	add	r5, pc, r5
   15104:	mov	r0, r5
   15108:	bl	11c20 <getenv@plt>
   1510c:	cmp	r0, #0
   15110:	beq	15180 <mount@plt+0x3224>
   15114:	mov	r0, r5
   15118:	bl	11c20 <getenv@plt>
   1511c:	add	r5, sp, #24
   15120:	ldr	r2, [pc, #232]	; 15210 <mount@plt+0x32b4>
   15124:	sub	r6, r5, #4
   15128:	add	r2, pc, r2
   1512c:	ldr	r1, [pc, #224]	; 15214 <mount@plt+0x32b8>
   15130:	mov	r3, r0
   15134:	mov	r0, r6
   15138:	bl	11d10 <snprintf@plt>
   1513c:	ldr	r1, [pc, #212]	; 15218 <mount@plt+0x32bc>
   15140:	mov	r0, r6
   15144:	add	r1, pc, r1
   15148:	bl	11e9c <fopen64@plt>
   1514c:	subs	r6, r0, #0
   15150:	beq	150f4 <mount@plt+0x3198>
   15154:	ldr	r1, [pc, #192]	; 1521c <mount@plt+0x32c0>
   15158:	sub	r3, r5, #8
   1515c:	sub	r2, r5, #12
   15160:	add	r1, pc, r1
   15164:	bl	11d4c <fscanf@plt>
   15168:	cmp	r0, #2
   1516c:	beq	150d0 <mount@plt+0x3174>
   15170:	mov	r0, r6
   15174:	bl	11dc4 <fclose@plt>
   15178:	mov	r5, #100	; 0x64
   1517c:	b	150b0 <mount@plt+0x3154>
   15180:	ldr	r5, [pc, #152]	; 15220 <mount@plt+0x32c4>
   15184:	add	r5, pc, r5
   15188:	mov	r0, r5
   1518c:	bl	11c20 <getenv@plt>
   15190:	cmp	r0, #0
   15194:	beq	151d0 <mount@plt+0x3274>
   15198:	mov	r0, r5
   1519c:	bl	11c20 <getenv@plt>
   151a0:	ldr	r3, [pc, #124]	; 15224 <mount@plt+0x32c8>
   151a4:	add	r5, sp, #24
   151a8:	add	r3, pc, r3
   151ac:	sub	r6, r5, #4
   151b0:	str	r3, [sp]
   151b4:	mov	r2, #1
   151b8:	mov	r3, #1024	; 0x400
   151bc:	ldr	r1, [pc, #80]	; 15214 <mount@plt+0x32b8>
   151c0:	str	r0, [sp, #4]
   151c4:	mov	r0, r6
   151c8:	bl	11f38 <__snprintf_chk@plt>
   151cc:	b	1513c <mount@plt+0x31e0>
   151d0:	ldr	lr, [pc, #80]	; 15228 <mount@plt+0x32cc>
   151d4:	add	r6, sp, #20
   151d8:	add	lr, pc, lr
   151dc:	mov	ip, r6
   151e0:	ldm	lr!, {r0, r1, r2, r3}
   151e4:	add	r5, sp, #24
   151e8:	ldr	lr, [lr]
   151ec:	stmia	ip!, {r0, r1, r2, r3}
   151f0:	strb	lr, [ip]
   151f4:	b	1513c <mount@plt+0x31e0>
   151f8:	bl	11ac4 <__stack_chk_fail@plt>
   151fc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15200:	andeq	r0, r0, r0, lsl #4
   15204:	andeq	r7, r0, r4, ror lr
   15208:	andeq	r4, pc, r0, asr #4
   1520c:	strdeq	r7, [r0], -r0
   15210:	andeq	r8, r0, ip, asr r4
   15214:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15218:	andeq	r8, r0, r4, asr #5
   1521c:	andeq	r7, r0, r4, asr #27
   15220:	andeq	r7, r0, r4, ror r4
   15224:	andeq	r7, r0, r8, asr sp
   15228:	andeq	r7, r0, r8, lsr sp
   1522c:	mov	r0, #2
   15230:	b	11adc <sysconf@plt>
   15234:	ldr	ip, [pc, #416]	; 153dc <mount@plt+0x3480>
   15238:	push	{r4, r5, lr}
   1523c:	add	ip, pc, ip
   15240:	ldr	lr, [pc, #408]	; 153e0 <mount@plt+0x3484>
   15244:	sub	sp, sp, #44	; 0x2c
   15248:	mov	r5, r2
   1524c:	ldr	r4, [ip, lr]
   15250:	sub	lr, r0, #2
   15254:	ldr	ip, [r4]
   15258:	str	ip, [sp, #36]	; 0x24
   1525c:	cmp	lr, #26
   15260:	addls	pc, pc, lr, lsl #2
   15264:	b	153ac <mount@plt+0x3450>
   15268:	b	15300 <mount@plt+0x33a4>
   1526c:	b	153ac <mount@plt+0x3450>
   15270:	b	15314 <mount@plt+0x33b8>
   15274:	b	153ac <mount@plt+0x3450>
   15278:	b	153ac <mount@plt+0x3450>
   1527c:	b	1532c <mount@plt+0x33d0>
   15280:	b	153ac <mount@plt+0x3450>
   15284:	b	153ac <mount@plt+0x3450>
   15288:	b	15300 <mount@plt+0x33a4>
   1528c:	b	153ac <mount@plt+0x3450>
   15290:	b	15354 <mount@plt+0x33f8>
   15294:	b	153ac <mount@plt+0x3450>
   15298:	b	153ac <mount@plt+0x3450>
   1529c:	b	153ac <mount@plt+0x3450>
   152a0:	b	153ac <mount@plt+0x3450>
   152a4:	b	15394 <mount@plt+0x3438>
   152a8:	b	153ac <mount@plt+0x3450>
   152ac:	b	153ac <mount@plt+0x3450>
   152b0:	b	153ac <mount@plt+0x3450>
   152b4:	b	153ac <mount@plt+0x3450>
   152b8:	b	153ac <mount@plt+0x3450>
   152bc:	b	153ac <mount@plt+0x3450>
   152c0:	b	153ac <mount@plt+0x3450>
   152c4:	b	153ac <mount@plt+0x3450>
   152c8:	b	153ac <mount@plt+0x3450>
   152cc:	b	153ac <mount@plt+0x3450>
   152d0:	b	152d4 <mount@plt+0x3378>
   152d4:	mov	r2, r3
   152d8:	mov	r1, r5
   152dc:	ldr	r3, [sp, #56]	; 0x38
   152e0:	mov	r0, #28
   152e4:	bl	1968c <mount@plt+0x7730>
   152e8:	ldr	r2, [sp, #36]	; 0x24
   152ec:	ldr	r3, [r4]
   152f0:	cmp	r2, r3
   152f4:	bne	153d8 <mount@plt+0x347c>
   152f8:	add	sp, sp, #44	; 0x2c
   152fc:	pop	{r4, r5, pc}
   15300:	mov	r2, r3
   15304:	mov	r1, r5
   15308:	ldr	r3, [sp, #56]	; 0x38
   1530c:	bl	11ea8 <inet_ntop@plt>
   15310:	b	152e8 <mount@plt+0x338c>
   15314:	mov	r2, r3
   15318:	mov	r1, r5
   1531c:	ldr	r3, [sp, #56]	; 0x38
   15320:	mov	r0, #4
   15324:	bl	19570 <mount@plt+0x7614>
   15328:	b	152e8 <mount@plt+0x338c>
   1532c:	ldrh	r0, [r2]
   15330:	cmp	r0, #2
   15334:	beq	153c4 <mount@plt+0x3468>
   15338:	cmp	r0, #10
   1533c:	bne	153b8 <mount@plt+0x345c>
   15340:	mov	r2, r3
   15344:	add	r1, r5, #8
   15348:	ldr	r3, [sp, #56]	; 0x38
   1534c:	bl	11ea8 <inet_ntop@plt>
   15350:	b	152e8 <mount@plt+0x338c>
   15354:	ldrh	r1, [r2]
   15358:	mov	r0, #0
   1535c:	mov	r2, r3
   15360:	mov	ip, #2
   15364:	strh	r1, [sp, #14]
   15368:	str	r0, [sp, #20]
   1536c:	str	r0, [sp, #16]
   15370:	str	r0, [sp, #24]
   15374:	str	r0, [sp, #28]
   15378:	strh	r0, [sp, #32]
   1537c:	ldr	r3, [sp, #56]	; 0x38
   15380:	add	r1, sp, #12
   15384:	mov	r0, #12
   15388:	strh	ip, [sp, #12]
   1538c:	bl	19268 <mount@plt+0x730c>
   15390:	b	152e8 <mount@plt+0x338c>
   15394:	ldr	r2, [sp, #56]	; 0x38
   15398:	mov	r0, r5
   1539c:	str	r2, [sp]
   153a0:	ldr	r2, [pc, #60]	; 153e4 <mount@plt+0x3488>
   153a4:	bl	173d0 <mount@plt+0x5474>
   153a8:	b	152e8 <mount@plt+0x338c>
   153ac:	ldr	r0, [pc, #52]	; 153e8 <mount@plt+0x348c>
   153b0:	add	r0, pc, r0
   153b4:	b	152e8 <mount@plt+0x338c>
   153b8:	ldr	r0, [pc, #44]	; 153ec <mount@plt+0x3490>
   153bc:	add	r0, pc, r0
   153c0:	b	152e8 <mount@plt+0x338c>
   153c4:	mov	r2, r3
   153c8:	add	r1, r5, #4
   153cc:	ldr	r3, [sp, #56]	; 0x38
   153d0:	bl	11ea8 <inet_ntop@plt>
   153d4:	b	152e8 <mount@plt+0x338c>
   153d8:	bl	11ac4 <__stack_chk_fail@plt>
   153dc:			; <UNDEFINED> instruction: 0x00018dbc
   153e0:	andeq	r0, r0, r0, lsl #4
   153e4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   153e8:	andeq	r7, r0, r8, lsl #23
   153ec:	andeq	r7, r0, ip, ror fp
   153f0:	push	{lr}		; (str lr, [sp, #-4]!)
   153f4:	sub	sp, sp, #12
   153f8:	mov	r3, #256	; 0x100
   153fc:	str	r3, [sp]
   15400:	ldr	r3, [pc, #12]	; 15414 <mount@plt+0x34b8>
   15404:	add	r3, pc, r3
   15408:	bl	15234 <mount@plt+0x32d8>
   1540c:	add	sp, sp, #12
   15410:	pop	{pc}		; (ldr pc, [sp], #4)
   15414:	andeq	r8, r1, r0, asr lr
   15418:	ldr	r1, [pc, #220]	; 154fc <mount@plt+0x35a0>
   1541c:	push	{r4, lr}
   15420:	add	r1, pc, r1
   15424:	mov	r4, r0
   15428:	bl	119bc <strcmp@plt>
   1542c:	cmp	r0, #0
   15430:	beq	154d4 <mount@plt+0x3578>
   15434:	ldr	r1, [pc, #196]	; 15500 <mount@plt+0x35a4>
   15438:	mov	r0, r4
   1543c:	add	r1, pc, r1
   15440:	bl	119bc <strcmp@plt>
   15444:	cmp	r0, #0
   15448:	beq	154cc <mount@plt+0x3570>
   1544c:	ldr	r1, [pc, #176]	; 15504 <mount@plt+0x35a8>
   15450:	mov	r0, r4
   15454:	add	r1, pc, r1
   15458:	bl	119bc <strcmp@plt>
   1545c:	cmp	r0, #0
   15460:	beq	154e4 <mount@plt+0x3588>
   15464:	ldr	r1, [pc, #156]	; 15508 <mount@plt+0x35ac>
   15468:	mov	r0, r4
   1546c:	add	r1, pc, r1
   15470:	bl	119bc <strcmp@plt>
   15474:	cmp	r0, #0
   15478:	beq	154dc <mount@plt+0x3580>
   1547c:	ldr	r1, [pc, #136]	; 1550c <mount@plt+0x35b0>
   15480:	mov	r0, r4
   15484:	add	r1, pc, r1
   15488:	bl	119bc <strcmp@plt>
   1548c:	cmp	r0, #0
   15490:	beq	154ec <mount@plt+0x3590>
   15494:	ldr	r1, [pc, #116]	; 15510 <mount@plt+0x35b4>
   15498:	mov	r0, r4
   1549c:	add	r1, pc, r1
   154a0:	bl	119bc <strcmp@plt>
   154a4:	cmp	r0, #0
   154a8:	beq	154f4 <mount@plt+0x3598>
   154ac:	ldr	r1, [pc, #96]	; 15514 <mount@plt+0x35b8>
   154b0:	mov	r0, r4
   154b4:	add	r1, pc, r1
   154b8:	bl	119bc <strcmp@plt>
   154bc:	cmp	r0, #0
   154c0:	movne	r0, #0
   154c4:	moveq	r0, #7
   154c8:	pop	{r4, pc}
   154cc:	mov	r0, #10
   154d0:	pop	{r4, pc}
   154d4:	mov	r0, #2
   154d8:	pop	{r4, pc}
   154dc:	mov	r0, #17
   154e0:	pop	{r4, pc}
   154e4:	mov	r0, #12
   154e8:	pop	{r4, pc}
   154ec:	mov	r0, #4
   154f0:	pop	{r4, pc}
   154f4:	mov	r0, #28
   154f8:	pop	{r4, pc}
   154fc:	andeq	r7, r0, ip, lsl fp
   15500:	andeq	r7, r0, r8, lsl #22
   15504:	strdeq	r7, [r0], -r8
   15508:	andeq	r8, r0, r0, lsr r1
   1550c:	ldrdeq	r7, [r0], -r0
   15510:			; <UNDEFINED> instruction: 0x00007abc
   15514:	andeq	r7, r0, ip, lsr #21
   15518:	cmp	r0, #2
   1551c:	beq	1555c <mount@plt+0x3600>
   15520:	cmp	r0, #10
   15524:	beq	15580 <mount@plt+0x3624>
   15528:	cmp	r0, #12
   1552c:	beq	15568 <mount@plt+0x360c>
   15530:	cmp	r0, #17
   15534:	beq	1558c <mount@plt+0x3630>
   15538:	cmp	r0, #4
   1553c:	beq	15598 <mount@plt+0x363c>
   15540:	cmp	r0, #28
   15544:	beq	155a4 <mount@plt+0x3648>
   15548:	cmp	r0, #7
   1554c:	beq	15574 <mount@plt+0x3618>
   15550:	ldr	r0, [pc, #88]	; 155b0 <mount@plt+0x3654>
   15554:	add	r0, pc, r0
   15558:	bx	lr
   1555c:	ldr	r0, [pc, #80]	; 155b4 <mount@plt+0x3658>
   15560:	add	r0, pc, r0
   15564:	bx	lr
   15568:	ldr	r0, [pc, #72]	; 155b8 <mount@plt+0x365c>
   1556c:	add	r0, pc, r0
   15570:	bx	lr
   15574:	ldr	r0, [pc, #64]	; 155bc <mount@plt+0x3660>
   15578:	add	r0, pc, r0
   1557c:	bx	lr
   15580:	ldr	r0, [pc, #56]	; 155c0 <mount@plt+0x3664>
   15584:	add	r0, pc, r0
   15588:	bx	lr
   1558c:	ldr	r0, [pc, #48]	; 155c4 <mount@plt+0x3668>
   15590:	add	r0, pc, r0
   15594:	bx	lr
   15598:	ldr	r0, [pc, #40]	; 155c8 <mount@plt+0x366c>
   1559c:	add	r0, pc, r0
   155a0:	bx	lr
   155a4:	ldr	r0, [pc, #32]	; 155cc <mount@plt+0x3670>
   155a8:	add	r0, pc, r0
   155ac:	bx	lr
   155b0:	andeq	r7, r0, r4, ror #19
   155b4:	ldrdeq	r7, [r0], -ip
   155b8:	andeq	r7, r0, r0, ror #19
   155bc:	andeq	r7, r0, r8, ror #19
   155c0:	andeq	r7, r0, r0, asr #19
   155c4:	andeq	r8, r0, ip
   155c8:			; <UNDEFINED> instruction: 0x000079b8
   155cc:			; <UNDEFINED> instruction: 0x000079b0
   155d0:	push	{r4, r5, r6, lr}
   155d4:	sub	sp, sp, #8
   155d8:	mov	r5, r1
   155dc:	mov	r4, r2
   155e0:	bl	145c4 <mount@plt+0x2668>
   155e4:	ldr	r3, [pc, #92]	; 15648 <mount@plt+0x36ec>
   155e8:	add	r3, pc, r3
   155ec:	cmp	r0, #0
   155f0:	bne	155fc <mount@plt+0x36a0>
   155f4:	add	sp, sp, #8
   155f8:	pop	{r4, r5, r6, pc}
   155fc:	ldr	r2, [pc, #72]	; 1564c <mount@plt+0x36f0>
   15600:	cmp	r4, #0
   15604:	ldr	r3, [r3, r2]
   15608:	ldr	r6, [r3]
   1560c:	beq	1563c <mount@plt+0x36e0>
   15610:	mov	r0, r4
   15614:	bl	15518 <mount@plt+0x35bc>
   15618:	mov	r3, r0
   1561c:	ldr	r2, [pc, #44]	; 15650 <mount@plt+0x36f4>
   15620:	str	r5, [sp]
   15624:	mov	r0, r6
   15628:	add	r2, pc, r2
   1562c:	mov	r1, #1
   15630:	bl	11da0 <__fprintf_chk@plt>
   15634:	mov	r0, #1
   15638:	bl	11cb0 <exit@plt>
   1563c:	ldr	r3, [pc, #16]	; 15654 <mount@plt+0x36f8>
   15640:	add	r3, pc, r3
   15644:	b	1561c <mount@plt+0x36c0>
   15648:	andeq	r8, r1, r0, lsl sl
   1564c:	andeq	r0, r0, ip, lsl #4
   15650:	andeq	r7, r0, ip, asr #18
   15654:	andeq	r7, r0, r8, lsr #18
   15658:	push	{r4, r5, r6, lr}
   1565c:	cmp	r2, #17
   15660:	ldr	r5, [pc, #152]	; 15700 <mount@plt+0x37a4>
   15664:	sub	sp, sp, #8
   15668:	add	r5, pc, r5
   1566c:	mov	r6, r1
   15670:	beq	1568c <mount@plt+0x3730>
   15674:	mov	r4, r2
   15678:	bl	1496c <mount@plt+0x2a10>
   1567c:	cmp	r0, #0
   15680:	bne	156b4 <mount@plt+0x3758>
   15684:	add	sp, sp, #8
   15688:	pop	{r4, r5, r6, pc}
   1568c:	ldr	r1, [pc, #112]	; 15704 <mount@plt+0x37a8>
   15690:	ldr	r2, [pc, #112]	; 15708 <mount@plt+0x37ac>
   15694:	mov	r3, r6
   15698:	ldr	r0, [r5, r1]
   1569c:	add	r2, pc, r2
   156a0:	mov	r1, #1
   156a4:	ldr	r0, [r0]
   156a8:	bl	11da0 <__fprintf_chk@plt>
   156ac:	mov	r0, #1
   156b0:	bl	11cb0 <exit@plt>
   156b4:	ldr	r3, [pc, #72]	; 15704 <mount@plt+0x37a8>
   156b8:	cmp	r4, #0
   156bc:	ldr	r3, [r5, r3]
   156c0:	ldr	r5, [r3]
   156c4:	beq	156f4 <mount@plt+0x3798>
   156c8:	mov	r0, r4
   156cc:	bl	15518 <mount@plt+0x35bc>
   156d0:	mov	r3, r0
   156d4:	ldr	r2, [pc, #48]	; 1570c <mount@plt+0x37b0>
   156d8:	str	r6, [sp]
   156dc:	mov	r0, r5
   156e0:	add	r2, pc, r2
   156e4:	mov	r1, #1
   156e8:	bl	11da0 <__fprintf_chk@plt>
   156ec:	mov	r0, #1
   156f0:	bl	11cb0 <exit@plt>
   156f4:	ldr	r3, [pc, #20]	; 15710 <mount@plt+0x37b4>
   156f8:	add	r3, pc, r3
   156fc:	b	156d4 <mount@plt+0x3778>
   15700:	muleq	r1, r0, r9
   15704:	andeq	r0, r0, ip, lsl #4
   15708:	andeq	r7, r0, ip, lsl #18
   1570c:	andeq	r7, r0, r0, lsl r9
   15710:	andeq	r7, r0, r0, ror r8
   15714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15718:	mov	r6, r2
   1571c:	ldr	r5, [pc, #520]	; 1592c <mount@plt+0x39d0>
   15720:	ldr	ip, [pc, #520]	; 15930 <mount@plt+0x39d4>
   15724:	add	r5, pc, r5
   15728:	mov	r8, r3
   1572c:	ldr	r2, [r5, ip]
   15730:	sub	sp, sp, #28
   15734:	mov	r4, r1
   15738:	ldr	r3, [r2]
   1573c:	mov	r7, r0
   15740:	cmp	r3, #0
   15744:	ldr	r9, [sp, #64]	; 0x40
   15748:	beq	1581c <mount@plt+0x38c0>
   1574c:	cmp	r1, #0
   15750:	ble	15800 <mount@plt+0x38a4>
   15754:	cmp	r7, #10
   15758:	beq	158e4 <mount@plt+0x3988>
   1575c:	sub	r3, r4, #4
   15760:	add	r3, r6, r3
   15764:	mov	fp, r7
   15768:	str	r4, [sp, #4]
   1576c:	str	r4, [sp, #8]
   15770:	str	r6, [sp]
   15774:	ldr	r1, [r3]
   15778:	ldr	r3, [pc, #436]	; 15934 <mount@plt+0x39d8>
   1577c:	ldr	r2, [pc, #436]	; 15938 <mount@plt+0x39dc>
   15780:	umull	r0, r3, r3, r1
   15784:	add	r2, pc, r2
   15788:	lsr	r3, r3, #8
   1578c:	add	r3, r3, r3, lsl #8
   15790:	sub	r3, r1, r3
   15794:	lsl	r1, r3, #2
   15798:	add	r3, r2, r1
   1579c:	str	r1, [sp, #20]
   157a0:	ldr	r3, [r3, #256]	; 0x100
   157a4:	cmp	r3, #0
   157a8:	str	r3, [sp, #16]
   157ac:	beq	15840 <mount@plt+0x38e4>
   157b0:	str	r5, [sp, #12]
   157b4:	mov	sl, r3
   157b8:	ldr	r5, [sp, #8]
   157bc:	b	157cc <mount@plt+0x3870>
   157c0:	ldr	sl, [sl]
   157c4:	cmp	sl, #0
   157c8:	beq	1583c <mount@plt+0x38e0>
   157cc:	ldrh	r2, [sl, #14]
   157d0:	cmp	r2, fp
   157d4:	bne	157c0 <mount@plt+0x3864>
   157d8:	ldrh	r2, [sl, #10]
   157dc:	cmp	r5, r2
   157e0:	bne	157c0 <mount@plt+0x3864>
   157e4:	ldm	sp, {r1, r2}
   157e8:	add	r0, sl, #16
   157ec:	bl	11a94 <memcmp@plt>
   157f0:	cmp	r0, #0
   157f4:	bne	157c0 <mount@plt+0x3864>
   157f8:	ldr	r0, [sl, #4]
   157fc:	b	158d4 <mount@plt+0x3978>
   15800:	bl	1459c <mount@plt+0x2640>
   15804:	cmp	r0, #0
   15808:	add	r4, r0, #7
   1580c:	movge	r4, r0
   15810:	cmp	r0, #7
   15814:	asr	r4, r4, #3
   15818:	bgt	15754 <mount@plt+0x37f8>
   1581c:	str	r9, [sp, #64]	; 0x40
   15820:	mov	r3, r8
   15824:	mov	r2, r6
   15828:	mov	r1, r4
   1582c:	mov	r0, r7
   15830:	add	sp, sp, #28
   15834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15838:	b	15234 <mount@plt+0x32d8>
   1583c:	ldr	r5, [sp, #12]
   15840:	mov	r0, #272	; 0x110
   15844:	bl	11c38 <malloc@plt>
   15848:	subs	sl, r0, #0
   1584c:	beq	1581c <mount@plt+0x38c0>
   15850:	ldr	r2, [sp, #8]
   15854:	mov	r3, #0
   15858:	strh	r2, [sl, #10]
   1585c:	str	r3, [sl, #4]
   15860:	ldm	sp, {r1, r2}
   15864:	mov	r3, #256	; 0x100
   15868:	strh	fp, [sl, #14]
   1586c:	add	r0, sl, #16
   15870:	bl	11b54 <__memcpy_chk@plt>
   15874:	ldr	r2, [pc, #192]	; 1593c <mount@plt+0x39e0>
   15878:	ldr	r3, [sp, #16]
   1587c:	add	r2, pc, r2
   15880:	str	r3, [sl]
   15884:	ldr	r0, [r2, #1284]	; 0x504
   15888:	ldr	r3, [sp, #20]
   1588c:	add	r0, r0, #1
   15890:	add	r3, r2, r3
   15894:	cmp	r0, #1
   15898:	str	sl, [r3, #256]	; 0x100
   1589c:	str	r0, [r2, #1284]	; 0x504
   158a0:	beq	15924 <mount@plt+0x39c8>
   158a4:	ldr	r3, [pc, #148]	; 15940 <mount@plt+0x39e4>
   158a8:	ldr	r3, [r5, r3]
   158ac:	ldr	r0, [r3]
   158b0:	bl	119ec <fflush@plt>
   158b4:	mov	r2, fp
   158b8:	ldrd	r0, [sp]
   158bc:	bl	11aac <gethostbyaddr@plt>
   158c0:	cmp	r0, #0
   158c4:	beq	157f8 <mount@plt+0x389c>
   158c8:	ldr	r0, [r0]
   158cc:	bl	11ab8 <strdup@plt>
   158d0:	str	r0, [sl, #4]
   158d4:	cmp	r0, #0
   158d8:	beq	1581c <mount@plt+0x38c0>
   158dc:	add	sp, sp, #28
   158e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e4:	ldr	r3, [r6]
   158e8:	cmp	r3, #0
   158ec:	bne	1575c <mount@plt+0x3800>
   158f0:	ldr	r3, [r6, #4]
   158f4:	cmp	r3, #0
   158f8:	bne	1575c <mount@plt+0x3800>
   158fc:	ldr	r3, [r6, #8]
   15900:	cmn	r3, #65536	; 0x10000
   15904:	bne	1575c <mount@plt+0x3800>
   15908:	mov	r2, #4
   1590c:	add	r3, r6, #12
   15910:	str	r3, [sp]
   15914:	str	r2, [sp, #4]
   15918:	str	r2, [sp, #8]
   1591c:	mov	fp, #2
   15920:	b	15774 <mount@plt+0x3818>
   15924:	bl	11b60 <sethostent@plt>
   15928:	b	158a4 <mount@plt+0x3948>
   1592c:	ldrdeq	r8, [r1], -r4
   15930:	andeq	r0, r0, r8, lsr #4
   15934:			; <UNDEFINED> instruction: 0xff00ff01
   15938:	ldrdeq	r8, [r1], -r0
   1593c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   15940:	andeq	r0, r0, r0, lsr #4
   15944:	ldr	r3, [pc, #36]	; 15970 <mount@plt+0x3a14>
   15948:	push	{lr}		; (str lr, [sp, #-4]!)
   1594c:	add	r3, pc, r3
   15950:	sub	sp, sp, #12
   15954:	mov	ip, #256	; 0x100
   15958:	add	r3, r3, #1280	; 0x500
   1595c:	add	r3, r3, #8
   15960:	str	ip, [sp]
   15964:	bl	15714 <mount@plt+0x37b8>
   15968:	add	sp, sp, #12
   1596c:	pop	{pc}		; (ldr pc, [sp], #4)
   15970:	andeq	r8, r1, r8, lsl #18
   15974:	cmp	r1, #0
   15978:	cmpgt	r3, #2
   1597c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15980:	mov	sl, r2
   15984:	sub	sp, sp, #8
   15988:	ble	159f4 <mount@plt+0x3a98>
   1598c:	ldr	r9, [pc, #108]	; 15a00 <mount@plt+0x3aa4>
   15990:	mov	r7, r0
   15994:	mov	r8, r1
   15998:	add	r9, pc, r9
   1599c:	add	r6, r2, r3
   159a0:	sub	r4, r0, #1
   159a4:	mov	r5, r2
   159a8:	ldrb	r1, [r4, #1]
   159ac:	mov	r3, r9
   159b0:	mvn	r2, #0
   159b4:	str	r1, [sp]
   159b8:	mov	r0, r5
   159bc:	mov	r1, #1
   159c0:	add	r5, r5, #2
   159c4:	bl	11d04 <__sprintf_chk@plt>
   159c8:	sub	r2, r6, r5
   159cc:	cmp	r2, #2
   159d0:	add	r3, r4, #2
   159d4:	movgt	r2, #0
   159d8:	movle	r2, #1
   159dc:	sub	r3, r3, r7
   159e0:	cmp	r3, r8
   159e4:	orrge	r2, r2, #1
   159e8:	cmp	r2, #0
   159ec:	add	r4, r4, #1
   159f0:	beq	159a8 <mount@plt+0x3a4c>
   159f4:	mov	r0, sl
   159f8:	add	sp, sp, #8
   159fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a00:	andeq	r7, r0, r8, lsl #13
   15a04:	ldr	ip, [pc, #268]	; 15b18 <mount@plt+0x3bbc>
   15a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a0c:	add	ip, pc, ip
   15a10:	ldr	lr, [pc, #260]	; 15b1c <mount@plt+0x3bc0>
   15a14:	mov	sl, r1
   15a18:	sub	sp, sp, #36	; 0x24
   15a1c:	ldr	r1, [ip, lr]
   15a20:	mov	r9, r2
   15a24:	mov	r4, r0
   15a28:	stmib	sp, {r1, r3}
   15a2c:	ldr	r3, [r1]
   15a30:	mov	r2, ip
   15a34:	str	r3, [sp, #28]
   15a38:	bl	11cd4 <strlen@plt>
   15a3c:	ands	r5, r0, #1
   15a40:	bne	15ad4 <mount@plt+0x3b78>
   15a44:	cmp	r9, #0
   15a48:	str	r9, [sp, #12]
   15a4c:	beq	15af8 <mount@plt+0x3b9c>
   15a50:	sub	r8, sl, #1
   15a54:	add	r7, sp, #24
   15a58:	mov	r6, r5
   15a5c:	b	15a8c <mount@plt+0x3b30>
   15a60:	ldr	r3, [sp, #20]
   15a64:	ldrb	r3, [r3]
   15a68:	cmp	r3, #0
   15a6c:	bne	15ad4 <mount@plt+0x3b78>
   15a70:	add	r5, r5, #1
   15a74:	cmp	r5, r9
   15a78:	strb	r0, [r8, #1]!
   15a7c:	add	r4, r4, #2
   15a80:	beq	15af8 <mount@plt+0x3b9c>
   15a84:	mov	r0, r4
   15a88:	bl	11cd4 <strlen@plt>
   15a8c:	cmp	r0, #1
   15a90:	bls	15af4 <mount@plt+0x3b98>
   15a94:	mov	r2, #2
   15a98:	mov	r1, r4
   15a9c:	mov	r0, r7
   15aa0:	bl	11d40 <strncpy@plt>
   15aa4:	strb	r6, [sp, #26]
   15aa8:	bl	11cec <__errno_location@plt>
   15aac:	mov	r2, #16
   15ab0:	add	r1, sp, #20
   15ab4:	mov	fp, r0
   15ab8:	str	r6, [r0]
   15abc:	mov	r0, r7
   15ac0:	bl	11cc8 <strtoul@plt>
   15ac4:	ldr	r3, [fp]
   15ac8:	cmp	r0, #255	; 0xff
   15acc:	cmpls	r3, #0
   15ad0:	beq	15a60 <mount@plt+0x3b04>
   15ad4:	mov	r0, #0
   15ad8:	ldr	r3, [sp, #4]
   15adc:	ldr	r2, [sp, #28]
   15ae0:	ldr	r3, [r3]
   15ae4:	cmp	r2, r3
   15ae8:	bne	15b14 <mount@plt+0x3bb8>
   15aec:	add	sp, sp, #36	; 0x24
   15af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15af4:	str	r5, [sp, #12]
   15af8:	ldr	r3, [sp, #8]
   15afc:	cmp	r3, #0
   15b00:	moveq	r0, sl
   15b04:	ldrne	r2, [sp, #12]
   15b08:	movne	r0, sl
   15b0c:	strne	r2, [r3]
   15b10:	b	15ad8 <mount@plt+0x3b7c>
   15b14:	bl	11ac4 <__stack_chk_fail@plt>
   15b18:	andeq	r8, r1, ip, ror #11
   15b1c:	andeq	r0, r0, r0, lsl #4
   15b20:	push	{r4, r5, r6, lr}
   15b24:	subs	r6, r2, #0
   15b28:	ble	15b84 <mount@plt+0x3c28>
   15b2c:	mov	r4, r0
   15b30:	add	r6, r0, r6, lsl #1
   15b34:	sub	r5, r1, #1
   15b38:	b	15b6c <mount@plt+0x3c10>
   15b3c:	lsl	r0, r0, #4
   15b40:	strb	r0, [r5, #1]
   15b44:	ldrb	r0, [r4, #1]
   15b48:	bl	13c1c <mount@plt+0x1cc0>
   15b4c:	add	r4, r4, #2
   15b50:	cmp	r0, #0
   15b54:	blt	15b7c <mount@plt+0x3c20>
   15b58:	ldrb	r3, [r5, #1]!
   15b5c:	cmp	r4, r6
   15b60:	orr	r3, r3, r0
   15b64:	strb	r3, [r5]
   15b68:	beq	15b84 <mount@plt+0x3c28>
   15b6c:	ldrb	r0, [r4]
   15b70:	bl	13c1c <mount@plt+0x1cc0>
   15b74:	cmp	r0, #0
   15b78:	bge	15b3c <mount@plt+0x3be0>
   15b7c:	mvn	r0, #0
   15b80:	pop	{r4, r5, r6, pc}
   15b84:	mov	r0, #0
   15b88:	pop	{r4, r5, r6, pc}
   15b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b90:	rev16	ip, r0
   15b94:	ldr	sl, [pc, #144]	; 15c2c <mount@plt+0x3cd0>
   15b98:	ldr	r8, [pc, #144]	; 15c30 <mount@plt+0x3cd4>
   15b9c:	sub	sp, sp, #24
   15ba0:	mov	r7, r3
   15ba4:	add	sl, pc, sl
   15ba8:	add	r8, pc, r8
   15bac:	mov	r6, r2
   15bb0:	uxth	r3, ip
   15bb4:	add	r5, sp, #16
   15bb8:	add	r9, sp, #22
   15bbc:	mov	r4, #0
   15bc0:	strd	r0, [sp, #16]
   15bc4:	stmib	sp, {r3, sl}
   15bc8:	sub	r1, r7, r4
   15bcc:	mvn	r3, #0
   15bd0:	add	r0, r6, r4
   15bd4:	str	r8, [sp]
   15bd8:	mov	r2, #1
   15bdc:	bl	11f38 <__snprintf_chk@plt>
   15be0:	ldrh	r3, [r5, #2]!
   15be4:	rev16	r3, r3
   15be8:	cmp	r9, r5
   15bec:	uxth	r3, r3
   15bf0:	add	r4, r4, r0
   15bf4:	bne	15bc4 <mount@plt+0x3c68>
   15bf8:	ldr	r2, [pc, #52]	; 15c34 <mount@plt+0x3cd8>
   15bfc:	str	r3, [sp, #4]
   15c00:	add	r2, pc, r2
   15c04:	str	r2, [sp, #8]
   15c08:	str	r8, [sp]
   15c0c:	sub	r1, r7, r4
   15c10:	add	r0, r6, r4
   15c14:	mvn	r3, #0
   15c18:	mov	r2, #1
   15c1c:	bl	11f38 <__snprintf_chk@plt>
   15c20:	add	r0, r0, r4
   15c24:	add	sp, sp, #24
   15c28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c2c:	andeq	r7, r0, r4, lsl #9
   15c30:	andeq	r7, r0, r4, lsl #9
   15c34:	andeq	r7, r0, r8, lsr sl
   15c38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c3c:	subs	r6, r1, #0
   15c40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c44:	mov	r5, r0
   15c48:	mov	r7, r2
   15c4c:	bl	11c98 <__ctype_b_loc@plt>
   15c50:	ldr	r9, [pc, #116]	; 15ccc <mount@plt+0x3d70>
   15c54:	add	r6, r5, r6
   15c58:	add	r9, pc, r9
   15c5c:	sub	r6, r6, #1
   15c60:	sub	r5, r5, #1
   15c64:	mov	r8, r0
   15c68:	b	15c84 <mount@plt+0x3d28>
   15c6c:	mov	r2, r4
   15c70:	mov	r1, r9
   15c74:	mov	r0, #1
   15c78:	bl	11d70 <__printf_chk@plt>
   15c7c:	cmp	r6, r5
   15c80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c84:	ldrb	r4, [r5, #1]!
   15c88:	ldr	ip, [r8]
   15c8c:	mov	r0, r7
   15c90:	subs	r3, r4, #92	; 0x5c
   15c94:	lsl	r2, r4, #1
   15c98:	movne	r3, #1
   15c9c:	ldrh	ip, [ip, r2]
   15ca0:	mov	r1, r4
   15ca4:	ands	r3, r3, ip, lsr #14
   15ca8:	beq	15c6c <mount@plt+0x3d10>
   15cac:	bl	11ce0 <strchr@plt>
   15cb0:	cmp	r0, #0
   15cb4:	bne	15c6c <mount@plt+0x3d10>
   15cb8:	mov	r0, r4
   15cbc:	bl	11d34 <putchar@plt>
   15cc0:	cmp	r6, r5
   15cc4:	bne	15c84 <mount@plt+0x3d28>
   15cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ccc:	ldrdeq	r7, [r0], -ip
   15cd0:	push	{r4, r5, r6, r7, lr}
   15cd4:	sub	sp, sp, #68	; 0x44
   15cd8:	ldr	r4, [pc, #212]	; 15db4 <mount@plt+0x3e58>
   15cdc:	ldr	r3, [pc, #212]	; 15db8 <mount@plt+0x3e5c>
   15ce0:	add	r4, pc, r4
   15ce4:	add	r5, sp, #12
   15ce8:	ldr	r6, [r4, r3]
   15cec:	mov	r1, #0
   15cf0:	mov	r7, r0
   15cf4:	ldr	r3, [r6]
   15cf8:	mov	r0, r5
   15cfc:	str	r3, [sp, #60]	; 0x3c
   15d00:	bl	11bc0 <gettimeofday@plt>
   15d04:	mov	r0, r5
   15d08:	bl	11c74 <localtime@plt>
   15d0c:	ldr	r2, [pc, #168]	; 15dbc <mount@plt+0x3e60>
   15d10:	ldr	r2, [r4, r2]
   15d14:	ldr	r5, [r2]
   15d18:	cmp	r5, #0
   15d1c:	beq	15d78 <mount@plt+0x3e1c>
   15d20:	ldr	r2, [pc, #152]	; 15dc0 <mount@plt+0x3e64>
   15d24:	add	r4, sp, #20
   15d28:	mov	r3, r0
   15d2c:	add	r2, pc, r2
   15d30:	mov	r1, #40	; 0x28
   15d34:	mov	r0, r4
   15d38:	bl	11c5c <strftime@plt>
   15d3c:	ldr	r2, [sp, #16]
   15d40:	mov	r3, r4
   15d44:	str	r2, [sp]
   15d48:	ldr	r2, [pc, #116]	; 15dc4 <mount@plt+0x3e68>
   15d4c:	mov	r0, r7
   15d50:	add	r2, pc, r2
   15d54:	mov	r1, #1
   15d58:	bl	11da0 <__fprintf_chk@plt>
   15d5c:	ldr	r2, [sp, #60]	; 0x3c
   15d60:	ldr	r3, [r6]
   15d64:	mov	r0, #0
   15d68:	cmp	r2, r3
   15d6c:	bne	15db0 <mount@plt+0x3e54>
   15d70:	add	sp, sp, #68	; 0x44
   15d74:	pop	{r4, r5, r6, r7, pc}
   15d78:	bl	11b90 <asctime@plt>
   15d7c:	mov	r4, r0
   15d80:	bl	11cd4 <strlen@plt>
   15d84:	mov	r3, r4
   15d88:	ldr	r2, [pc, #56]	; 15dc8 <mount@plt+0x3e6c>
   15d8c:	mov	r1, #1
   15d90:	add	r2, pc, r2
   15d94:	add	r4, r4, r0
   15d98:	mov	r0, r7
   15d9c:	strb	r5, [r4, #-1]
   15da0:	ldr	ip, [sp, #16]
   15da4:	str	ip, [sp]
   15da8:	bl	11da0 <__fprintf_chk@plt>
   15dac:	b	15d5c <mount@plt+0x3e00>
   15db0:	bl	11ac4 <__stack_chk_fail@plt>
   15db4:	andeq	r8, r1, r8, lsl r3
   15db8:	andeq	r0, r0, r0, lsl #4
   15dbc:	andeq	r0, r0, r4, lsl r2
   15dc0:	andeq	r7, r0, r0, lsl r3
   15dc4:	andeq	r7, r0, r0, lsl #6
   15dc8:	andeq	r7, r0, ip, asr #5
   15dcc:	ldr	r3, [pc, #388]	; 15f58 <mount@plt+0x3ffc>
   15dd0:	ldr	ip, [pc, #388]	; 15f5c <mount@plt+0x4000>
   15dd4:	add	r3, pc, r3
   15dd8:	push	{r4, r5, r6, r7, r8, r9, lr}
   15ddc:	mov	r7, r0
   15de0:	ldr	r5, [r3, ip]
   15de4:	ldr	r0, [r2, #20]
   15de8:	sub	sp, sp, #92	; 0x5c
   15dec:	ldr	r3, [r5]
   15df0:	cmp	r0, #0
   15df4:	mov	r6, r1
   15df8:	str	r3, [sp, #84]	; 0x54
   15dfc:	moveq	r4, r0
   15e00:	beq	15e60 <mount@plt+0x3f04>
   15e04:	ldr	r8, [r0, #4]
   15e08:	cmp	r8, #0
   15e0c:	beq	15e98 <mount@plt+0x3f3c>
   15e10:	ldr	r4, [r2, #148]	; 0x94
   15e14:	cmp	r4, #0
   15e18:	beq	15ef8 <mount@plt+0x3f9c>
   15e1c:	bl	184f8 <mount@plt+0x659c>
   15e20:	subs	r4, r0, #0
   15e24:	bne	15eb0 <mount@plt+0x3f54>
   15e28:	mov	r0, r8
   15e2c:	bl	17080 <mount@plt+0x5124>
   15e30:	mov	r9, r0
   15e34:	cmp	r9, #0
   15e38:	beq	15e60 <mount@plt+0x3f04>
   15e3c:	ldr	r2, [pc, #284]	; 15f60 <mount@plt+0x4004>
   15e40:	mov	r3, #64	; 0x40
   15e44:	add	r2, pc, r2
   15e48:	add	r0, sp, #20
   15e4c:	stm	sp, {r2, r6, r9}
   15e50:	mov	r1, r3
   15e54:	mov	r2, #1
   15e58:	mov	r6, r0
   15e5c:	bl	11f38 <__snprintf_chk@plt>
   15e60:	ldr	r2, [pc, #252]	; 15f64 <mount@plt+0x4008>
   15e64:	mov	r3, r7
   15e68:	add	r2, pc, r2
   15e6c:	mov	r0, #4
   15e70:	str	r6, [sp]
   15e74:	mov	r1, #0
   15e78:	bl	18ad8 <mount@plt+0x6b7c>
   15e7c:	ldr	r2, [sp, #84]	; 0x54
   15e80:	ldr	r3, [r5]
   15e84:	mov	r0, r4
   15e88:	cmp	r2, r3
   15e8c:	bne	15f54 <mount@plt+0x3ff8>
   15e90:	add	sp, sp, #92	; 0x5c
   15e94:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15e98:	bl	184f8 <mount@plt+0x659c>
   15e9c:	subs	r4, r0, #0
   15ea0:	bne	15ed4 <mount@plt+0x3f78>
   15ea4:	ldr	r9, [pc, #188]	; 15f68 <mount@plt+0x400c>
   15ea8:	add	r9, pc, r9
   15eac:	b	15e3c <mount@plt+0x3ee0>
   15eb0:	ldr	r2, [pc, #180]	; 15f6c <mount@plt+0x4010>
   15eb4:	str	r8, [sp]
   15eb8:	mov	r3, #0
   15ebc:	add	r2, pc, r2
   15ec0:	mov	r1, #6
   15ec4:	mov	r0, #2
   15ec8:	bl	18630 <mount@plt+0x66d4>
   15ecc:	mov	r4, #0
   15ed0:	b	15e60 <mount@plt+0x3f04>
   15ed4:	ldr	r2, [pc, #148]	; 15f70 <mount@plt+0x4014>
   15ed8:	str	r8, [sp]
   15edc:	mov	r3, r8
   15ee0:	add	r2, pc, r2
   15ee4:	mov	r1, #6
   15ee8:	mov	r0, #2
   15eec:	mov	r4, r8
   15ef0:	bl	18e30 <mount@plt+0x6ed4>
   15ef4:	b	15e60 <mount@plt+0x3f04>
   15ef8:	mov	r0, r8
   15efc:	bl	170c8 <mount@plt+0x516c>
   15f00:	mov	r9, r0
   15f04:	bl	184f8 <mount@plt+0x659c>
   15f08:	cmp	r0, #0
   15f0c:	bne	15f24 <mount@plt+0x3fc8>
   15f10:	mov	r0, r8
   15f14:	bl	171e4 <mount@plt+0x5288>
   15f18:	mvn	r0, r0
   15f1c:	and	r4, r0, #1
   15f20:	b	15e34 <mount@plt+0x3ed8>
   15f24:	ldr	r2, [pc, #72]	; 15f74 <mount@plt+0x4018>
   15f28:	mov	r3, r4
   15f2c:	add	r2, pc, r2
   15f30:	mov	r1, #6
   15f34:	mov	r0, #2
   15f38:	str	r9, [sp]
   15f3c:	bl	18ad8 <mount@plt+0x6b7c>
   15f40:	mov	r0, r8
   15f44:	bl	171e4 <mount@plt+0x5288>
   15f48:	mvn	r0, r0
   15f4c:	and	r4, r0, #1
   15f50:	b	15e60 <mount@plt+0x3f04>
   15f54:	bl	11ac4 <__stack_chk_fail@plt>
   15f58:	andeq	r8, r1, r4, lsr #4
   15f5c:	andeq	r0, r0, r0, lsl #4
   15f60:	andeq	r7, r0, r4, asr #4
   15f64:	andeq	r7, r0, r8, lsr #4
   15f68:	andeq	r7, r0, ip, asr #3
   15f6c:	andeq	r7, r0, r0, asr #3
   15f70:			; <UNDEFINED> instruction: 0x000076bc
   15f74:	andeq	r7, r0, r0, ror r6
   15f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f7c:	sub	sp, sp, #44	; 0x2c
   15f80:	ldr	r4, [pc, #468]	; 1615c <mount@plt+0x4200>
   15f84:	ldr	ip, [pc, #468]	; 16160 <mount@plt+0x4204>
   15f88:	add	r4, pc, r4
   15f8c:	str	r4, [sp, #20]
   15f90:	mov	r3, r2
   15f94:	str	r2, [sp]
   15f98:	ldr	r2, [r4, ip]
   15f9c:	mov	r7, r0
   15fa0:	mov	ip, r2
   15fa4:	str	r2, [sp, #16]
   15fa8:	ldr	ip, [ip]
   15fac:	mov	r2, #10
   15fb0:	str	r1, [sp, #4]
   15fb4:	str	ip, [sp, #36]	; 0x24
   15fb8:	bl	119a4 <__getdelim@plt>
   15fbc:	mov	r2, r4
   15fc0:	subs	r9, r0, #0
   15fc4:	blt	160d8 <mount@plt+0x417c>
   15fc8:	ldr	r3, [pc, #404]	; 16164 <mount@plt+0x4208>
   15fcc:	ldr	r4, [r7]
   15fd0:	mov	r1, #35	; 0x23
   15fd4:	ldr	r8, [r2, r3]
   15fd8:	mov	r0, r4
   15fdc:	mov	r5, #0
   15fe0:	ldr	r3, [r8]
   15fe4:	add	r3, r3, #1
   15fe8:	str	r3, [r8]
   15fec:	bl	11ce0 <strchr@plt>
   15ff0:	cmp	r0, #0
   15ff4:	movne	r3, #0
   15ff8:	strbne	r3, [r0]
   15ffc:	ldr	r3, [pc, #356]	; 16168 <mount@plt+0x420c>
   16000:	ldrne	r4, [r7]
   16004:	add	r3, pc, r3
   16008:	str	r3, [sp, #8]
   1600c:	add	r3, sp, #32
   16010:	str	r3, [sp, #12]
   16014:	mov	r0, r4
   16018:	b	160c8 <mount@plt+0x416c>
   1601c:	ldr	r3, [sp]
   16020:	mov	r2, #10
   16024:	ldr	r1, [sp, #12]
   16028:	add	r0, sp, #28
   1602c:	str	r5, [sp, #28]
   16030:	str	r5, [sp, #32]
   16034:	bl	119a4 <__getdelim@plt>
   16038:	subs	r4, r0, #0
   1603c:	blt	160f8 <mount@plt+0x419c>
   16040:	ldr	r3, [r8]
   16044:	mov	r1, #35	; 0x23
   16048:	add	r3, r3, #1
   1604c:	str	r3, [r8]
   16050:	strb	r5, [r6]
   16054:	ldr	r6, [sp, #28]
   16058:	mov	r0, r6
   1605c:	bl	11ce0 <strchr@plt>
   16060:	cmp	r0, #0
   16064:	strbne	r5, [r0]
   16068:	ldr	fp, [r7]
   1606c:	ldrne	r6, [sp, #28]
   16070:	mov	r0, fp
   16074:	bl	11cd4 <strlen@plt>
   16078:	mov	sl, r0
   1607c:	mov	r0, r6
   16080:	bl	11cd4 <strlen@plt>
   16084:	ldr	r3, [sp, #4]
   16088:	add	r1, sl, r0
   1608c:	add	r1, r1, #1
   16090:	str	r1, [r3]
   16094:	mov	r0, fp
   16098:	bl	11af4 <realloc@plt>
   1609c:	cmp	r0, #0
   160a0:	mov	r6, r0
   160a4:	str	r0, [r7]
   160a8:	beq	16124 <mount@plt+0x41c8>
   160ac:	ldr	r1, [sp, #28]
   160b0:	bl	11b78 <strcat@plt>
   160b4:	ldr	r0, [sp, #28]
   160b8:	sub	r4, r4, #2
   160bc:	bl	11a1c <free@plt>
   160c0:	ldr	r0, [r7]
   160c4:	add	r9, r9, r4
   160c8:	ldr	r1, [sp, #8]
   160cc:	bl	11998 <strstr@plt>
   160d0:	subs	r6, r0, #0
   160d4:	bne	1601c <mount@plt+0x40c0>
   160d8:	ldr	r3, [sp, #16]
   160dc:	ldr	r2, [sp, #36]	; 0x24
   160e0:	mov	r0, r9
   160e4:	ldr	r3, [r3]
   160e8:	cmp	r2, r3
   160ec:	bne	16158 <mount@plt+0x41fc>
   160f0:	add	sp, sp, #44	; 0x2c
   160f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160f8:	ldr	r0, [sp, #20]
   160fc:	ldr	r3, [pc, #104]	; 1616c <mount@plt+0x4210>
   16100:	mov	r2, #26
   16104:	mov	r1, #1
   16108:	ldr	r3, [r0, r3]
   1610c:	ldr	r0, [pc, #92]	; 16170 <mount@plt+0x4214>
   16110:	mov	r9, r4
   16114:	ldr	r3, [r3]
   16118:	add	r0, pc, r0
   1611c:	bl	11b6c <fwrite@plt>
   16120:	b	160d8 <mount@plt+0x417c>
   16124:	ldr	r0, [sp, #20]
   16128:	ldr	r3, [pc, #60]	; 1616c <mount@plt+0x4210>
   1612c:	mov	r2, #14
   16130:	mov	r1, #1
   16134:	ldr	r3, [r0, r3]
   16138:	ldr	r0, [pc, #52]	; 16174 <mount@plt+0x4218>
   1613c:	mvn	r9, #0
   16140:	ldr	r3, [r3]
   16144:	add	r0, pc, r0
   16148:	bl	11b6c <fwrite@plt>
   1614c:	ldr	r3, [sp, #4]
   16150:	str	r6, [r3]
   16154:	b	160d8 <mount@plt+0x417c>
   16158:	bl	11ac4 <__stack_chk_fail@plt>
   1615c:	andeq	r8, r1, r0, ror r0
   16160:	andeq	r0, r0, r0, lsl #4
   16164:	andeq	r0, r0, r4, lsl #4
   16168:	andeq	r7, r0, r0, asr #1
   1616c:	andeq	r0, r0, ip, lsl #4
   16170:	andeq	r6, r0, r0, lsl #31
   16174:	andeq	r6, r0, r0, ror pc
   16178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1617c:	mov	sl, r1
   16180:	ldrb	r3, [r0]
   16184:	ldr	r1, [pc, #296]	; 162b4 <mount@plt+0x4358>
   16188:	sub	sp, sp, #12
   1618c:	add	r1, pc, r1
   16190:	cmp	r3, #0
   16194:	str	r1, [sp, #4]
   16198:	beq	16254 <mount@plt+0x42f8>
   1619c:	ldr	r6, [pc, #276]	; 162b8 <mount@plt+0x435c>
   161a0:	mov	fp, #0
   161a4:	add	r6, pc, r6
   161a8:	mov	r4, r0
   161ac:	sub	r7, r2, #1
   161b0:	add	r6, r6, #108	; 0x6c
   161b4:	mov	r9, fp
   161b8:	sub	r8, sl, #4
   161bc:	b	161e8 <mount@plt+0x428c>
   161c0:	add	r0, r5, #1
   161c4:	str	r0, [r8, fp, lsl #2]
   161c8:	bl	11ce0 <strchr@plt>
   161cc:	subs	r2, r0, #0
   161d0:	beq	16288 <mount@plt+0x432c>
   161d4:	mov	r4, r2
   161d8:	strb	r9, [r4], #1
   161dc:	ldrb	r2, [r2, #1]
   161e0:	cmp	r2, #0
   161e4:	beq	1623c <mount@plt+0x42e0>
   161e8:	mov	r1, r6
   161ec:	mov	r0, r4
   161f0:	bl	11f44 <strspn@plt>
   161f4:	ldrb	r1, [r4, r0]
   161f8:	add	r5, r4, r0
   161fc:	cmp	r1, #0
   16200:	beq	1623c <mount@plt+0x42e0>
   16204:	cmp	r7, fp
   16208:	ble	1625c <mount@plt+0x4300>
   1620c:	cmp	r1, #34	; 0x22
   16210:	cmpne	r1, #39	; 0x27
   16214:	add	fp, fp, #1
   16218:	beq	161c0 <mount@plt+0x4264>
   1621c:	mov	r1, r6
   16220:	str	r5, [r8, fp, lsl #2]
   16224:	mov	r0, r5
   16228:	bl	119e0 <strcspn@plt>
   1622c:	ldrb	r1, [r5, r0]
   16230:	add	r2, r5, r0
   16234:	cmp	r1, #0
   16238:	bne	161d4 <mount@plt+0x4278>
   1623c:	add	sl, sl, fp, lsl #2
   16240:	mov	r2, #0
   16244:	mov	r0, fp
   16248:	str	r2, [sl]
   1624c:	add	sp, sp, #12
   16250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16254:	mov	fp, r3
   16258:	b	16240 <mount@plt+0x42e4>
   1625c:	ldr	r0, [sp, #4]
   16260:	ldr	r3, [pc, #84]	; 162bc <mount@plt+0x4360>
   16264:	mov	r2, #30
   16268:	mov	r1, #1
   1626c:	ldr	r3, [r0, r3]
   16270:	ldr	r0, [pc, #72]	; 162c0 <mount@plt+0x4364>
   16274:	ldr	r3, [r3]
   16278:	add	r0, pc, r0
   1627c:	bl	11b6c <fwrite@plt>
   16280:	mov	r0, #1
   16284:	bl	11cb0 <exit@plt>
   16288:	ldr	r0, [sp, #4]
   1628c:	ldr	r3, [pc, #40]	; 162bc <mount@plt+0x4360>
   16290:	mov	r2, #27
   16294:	mov	r1, #1
   16298:	ldr	r3, [r0, r3]
   1629c:	ldr	r0, [pc, #32]	; 162c4 <mount@plt+0x4368>
   162a0:	ldr	r3, [r3]
   162a4:	add	r0, pc, r0
   162a8:	bl	11b6c <fwrite@plt>
   162ac:	mov	r0, #1
   162b0:	bl	11cb0 <exit@plt>
   162b4:	andeq	r7, r1, ip, ror #28
   162b8:	andeq	r6, r0, r8, ror #20
   162bc:	andeq	r0, r0, ip, lsl #4
   162c0:	andeq	r6, r0, r0, asr lr
   162c4:	andeq	r6, r0, r4, asr #28
   162c8:	ldr	r3, [pc, #128]	; 16350 <mount@plt+0x43f4>
   162cc:	ldr	r2, [pc, #128]	; 16354 <mount@plt+0x43f8>
   162d0:	add	r3, pc, r3
   162d4:	push	{r4, r5, r6, r7, lr}
   162d8:	sub	sp, sp, #20
   162dc:	ldr	r5, [r3, r2]
   162e0:	ldr	ip, [r1, #16]
   162e4:	mov	r6, r0
   162e8:	ldr	r2, [r5]
   162ec:	add	r0, sp, #8
   162f0:	ldr	r7, [r1, #20]
   162f4:	str	ip, [sp, #8]
   162f8:	str	r2, [sp, #12]
   162fc:	bl	11c74 <localtime@plt>
   16300:	bl	11b90 <asctime@plt>
   16304:	mov	r4, r0
   16308:	bl	11cd4 <strlen@plt>
   1630c:	mov	r3, r4
   16310:	ldr	r2, [pc, #64]	; 16358 <mount@plt+0x43fc>
   16314:	mov	ip, #0
   16318:	add	r2, pc, r2
   1631c:	mov	r1, #1
   16320:	add	r4, r4, r0
   16324:	mov	r0, r6
   16328:	strb	ip, [r4, #-1]
   1632c:	str	r7, [sp]
   16330:	bl	11da0 <__fprintf_chk@plt>
   16334:	ldr	r2, [sp, #12]
   16338:	ldr	r3, [r5]
   1633c:	cmp	r2, r3
   16340:	bne	1634c <mount@plt+0x43f0>
   16344:	add	sp, sp, #20
   16348:	pop	{r4, r5, r6, r7, pc}
   1634c:	bl	11ac4 <__stack_chk_fail@plt>
   16350:	andeq	r7, r1, r8, lsr #26
   16354:	andeq	r0, r0, r0, lsl #4
   16358:	andeq	r6, r0, ip, ror #27
   1635c:	ldr	r3, [pc, #96]	; 163c4 <mount@plt+0x4468>
   16360:	ldr	ip, [pc, #96]	; 163c8 <mount@plt+0x446c>
   16364:	add	r3, pc, r3
   16368:	push	{r4, lr}
   1636c:	sub	sp, sp, #16
   16370:	ldr	r4, [r3, ip]
   16374:	cmp	r2, #0
   16378:	strd	r0, [sp, #4]
   1637c:	ldr	r3, [r4]
   16380:	add	r1, sp, #4
   16384:	str	r3, [sp, #12]
   16388:	bne	163b0 <mount@plt+0x4454>
   1638c:	ldr	r0, [pc, #56]	; 163cc <mount@plt+0x4470>
   16390:	add	r0, pc, r0
   16394:	bl	17be8 <mount@plt+0x5c8c>
   16398:	ldr	r2, [sp, #12]
   1639c:	ldr	r3, [r4]
   163a0:	cmp	r2, r3
   163a4:	bne	163c0 <mount@plt+0x4464>
   163a8:	add	sp, sp, #16
   163ac:	pop	{r4, pc}
   163b0:	ldr	r0, [pc, #24]	; 163d0 <mount@plt+0x4474>
   163b4:	add	r0, pc, r0
   163b8:	bl	17be8 <mount@plt+0x5c8c>
   163bc:	b	16398 <mount@plt+0x443c>
   163c0:	bl	11ac4 <__stack_chk_fail@plt>
   163c4:	muleq	r1, r4, ip
   163c8:	andeq	r0, r0, r0, lsl #4
   163cc:			; <UNDEFINED> instruction: 0xffffd470
   163d0:			; <UNDEFINED> instruction: 0xffffd480
   163d4:	push	{r4, lr}
   163d8:	sub	sp, sp, #8
   163dc:	ldr	r3, [pc, #36]	; 16408 <mount@plt+0x44ac>
   163e0:	mov	r4, r1
   163e4:	str	r0, [sp]
   163e8:	add	r3, pc, r3
   163ec:	mov	r0, r1
   163f0:	mvn	r2, #0
   163f4:	mov	r1, #1
   163f8:	bl	11d04 <__sprintf_chk@plt>
   163fc:	mov	r0, r4
   16400:	add	sp, sp, #8
   16404:	pop	{r4, pc}
   16408:	ldrdeq	r6, [r0], -r0
   1640c:	ldr	r3, [pc, #212]	; 164e8 <mount@plt+0x458c>
   16410:	ldr	r2, [pc, #212]	; 164ec <mount@plt+0x4590>
   16414:	add	r3, pc, r3
   16418:	push	{r4, r5, r6, r7, r8, lr}
   1641c:	sub	sp, sp, #8
   16420:	ldr	r6, [r3, r2]
   16424:	mov	r7, r0
   16428:	mov	r0, r1
   1642c:	ldr	r3, [r6]
   16430:	mov	r4, r1
   16434:	str	r3, [sp, #4]
   16438:	bl	11cd4 <strlen@plt>
   1643c:	cmp	r0, #23
   16440:	bne	164c8 <mount@plt+0x456c>
   16444:	mov	r3, r4
   16448:	add	r0, r4, #21
   1644c:	ldrb	r2, [r3, #2]
   16450:	cmp	r2, #58	; 0x3a
   16454:	bne	164c8 <mount@plt+0x456c>
   16458:	add	r3, r3, #3
   1645c:	cmp	r3, r0
   16460:	bne	1644c <mount@plt+0x44f0>
   16464:	mov	r2, #0
   16468:	mov	r3, #0
   1646c:	add	r4, r4, #2
   16470:	mov	r5, #56	; 0x38
   16474:	mov	r8, sp
   16478:	strd	r2, [r7]
   1647c:	mov	r2, #16
   16480:	mov	r1, r8
   16484:	sub	r0, r4, #2
   16488:	bl	11cc8 <strtoul@plt>
   1648c:	ldr	r3, [sp]
   16490:	cmp	r0, #255	; 0xff
   16494:	cmpls	r3, r4
   16498:	movne	r3, #1
   1649c:	moveq	r3, #0
   164a0:	bne	164c8 <mount@plt+0x456c>
   164a4:	ldr	r2, [r7]
   164a8:	add	r4, r4, #3
   164ac:	orr	r0, r2, r0, lsl r5
   164b0:	sub	r5, r5, #8
   164b4:	cmn	r5, #8
   164b8:	str	r0, [r7]
   164bc:	bne	1647c <mount@plt+0x4520>
   164c0:	mov	r0, r3
   164c4:	b	164cc <mount@plt+0x4570>
   164c8:	mvn	r0, #0
   164cc:	ldr	r2, [sp, #4]
   164d0:	ldr	r3, [r6]
   164d4:	cmp	r2, r3
   164d8:	bne	164e4 <mount@plt+0x4588>
   164dc:	add	sp, sp, #8
   164e0:	pop	{r4, r5, r6, r7, r8, pc}
   164e4:	bl	11ac4 <__stack_chk_fail@plt>
   164e8:	andeq	r7, r1, r4, ror #23
   164ec:	andeq	r0, r0, r0, lsl #4
   164f0:	cmp	r0, #5
   164f4:	bne	16508 <mount@plt+0x45ac>
   164f8:	cmp	r1, #128	; 0x80
   164fc:	beq	16510 <mount@plt+0x45b4>
   16500:	cmp	r1, #129	; 0x81
   16504:	moveq	r1, #10
   16508:	mov	r0, r1
   1650c:	bx	lr
   16510:	mov	r1, #2
   16514:	b	16508 <mount@plt+0x45ac>
   16518:	ldr	r3, [pc, #412]	; 166bc <mount@plt+0x4760>
   1651c:	ldr	r2, [pc, #412]	; 166c0 <mount@plt+0x4764>
   16520:	add	r3, pc, r3
   16524:	push	{r4, r5, r6, r7, r8, lr}
   16528:	sub	sp, sp, #1296	; 0x510
   1652c:	ldr	r6, [r3, r2]
   16530:	ldr	r3, [r1, #92]	; 0x5c
   16534:	mov	r4, r0
   16538:	ldr	r2, [r6]
   1653c:	cmp	r3, #0
   16540:	str	r2, [sp, #1292]	; 0x50c
   16544:	beq	165b0 <mount@plt+0x4654>
   16548:	ldrh	r5, [r3], #4
   1654c:	sub	r5, r5, #4
   16550:	cmp	r5, #191	; 0xbf
   16554:	bgt	16588 <mount@plt+0x462c>
   16558:	rsb	r2, r5, #192	; 0xc0
   1655c:	mov	r1, #0
   16560:	add	r0, r0, r5
   16564:	str	r3, [sp, #4]
   16568:	bl	11d28 <memset@plt>
   1656c:	ldr	r3, [sp, #4]
   16570:	mov	r2, r5
   16574:	mov	r1, r3
   16578:	mov	r0, r4
   1657c:	bl	11a4c <memcpy@plt>
   16580:	mov	r0, #192	; 0xc0
   16584:	b	16598 <mount@plt+0x463c>
   16588:	mov	r1, r3
   1658c:	mov	r2, #192	; 0xc0
   16590:	bl	11a4c <memcpy@plt>
   16594:	mov	r0, #192	; 0xc0
   16598:	ldr	r2, [sp, #1292]	; 0x50c
   1659c:	ldr	r3, [r6]
   165a0:	cmp	r2, r3
   165a4:	bne	16690 <mount@plt+0x4734>
   165a8:	add	sp, sp, #1296	; 0x510
   165ac:	pop	{r4, r5, r6, r7, r8, pc}
   165b0:	ldr	r7, [r1, #28]
   165b4:	cmp	r7, #0
   165b8:	beq	16608 <mount@plt+0x46ac>
   165bc:	ldrh	r8, [r7], #4
   165c0:	sub	r8, r8, #4
   165c4:	cmp	r8, #95	; 0x5f
   165c8:	ble	16694 <mount@plt+0x4738>
   165cc:	add	r5, sp, #8
   165d0:	mov	r1, r7
   165d4:	mov	r0, r5
   165d8:	mov	r2, #96	; 0x60
   165dc:	bl	11a4c <memcpy@plt>
   165e0:	mov	r0, r5
   165e4:	add	r1, r4, #192	; 0xc0
   165e8:	mov	r2, #0
   165ec:	ldr	r3, [r0], #4
   165f0:	str	r3, [r4], #8
   165f4:	cmp	r4, r1
   165f8:	str	r2, [r4, #-4]
   165fc:	bne	165ec <mount@plt+0x4690>
   16600:	mov	r0, #96	; 0x60
   16604:	b	16598 <mount@plt+0x463c>
   16608:	ldr	r2, [r1, #48]	; 0x30
   1660c:	cmp	r2, #0
   16610:	beq	16688 <mount@plt+0x472c>
   16614:	ldrh	r3, [r2], #4
   16618:	mov	r1, #296	; 0x128
   1661c:	add	r0, sp, #104	; 0x68
   16620:	sub	r3, r3, #4
   16624:	bl	1bf00 <mount@plt+0x9fa4>
   16628:	ldr	r5, [sp, #116]	; 0x74
   1662c:	cmp	r5, #0
   16630:	beq	16580 <mount@plt+0x4624>
   16634:	mov	r2, #192	; 0xc0
   16638:	mov	r1, r7
   1663c:	mov	r0, r4
   16640:	bl	11d28 <memset@plt>
   16644:	ldrd	r2, [r5, #12]
   16648:	strd	r2, [r4]
   1664c:	ldrd	r2, [r5, #20]
   16650:	strd	r2, [r4, #16]
   16654:	ldrd	r2, [r5, #44]	; 0x2c
   16658:	strd	r2, [r4, #8]
   1665c:	ldrd	r2, [r5, #52]	; 0x34
   16660:	strd	r2, [r4, #24]
   16664:	ldrd	r2, [r5, #108]	; 0x6c
   16668:	strd	r2, [r4, #32]
   1666c:	ldrd	r2, [r5, #116]	; 0x74
   16670:	strd	r2, [r4, #40]	; 0x28
   16674:	ldrd	r2, [r5, #188]	; 0xbc
   16678:	strd	r2, [r4, #64]	; 0x40
   1667c:	ldrd	r2, [r5, #252]	; 0xfc
   16680:	strd	r2, [r4, #104]	; 0x68
   16684:	b	16580 <mount@plt+0x4624>
   16688:	mvn	r0, #0
   1668c:	b	16598 <mount@plt+0x463c>
   16690:	bl	11ac4 <__stack_chk_fail@plt>
   16694:	add	r5, sp, #8
   16698:	mov	r1, r3
   1669c:	rsb	r2, r8, #96	; 0x60
   166a0:	add	r0, r5, r8
   166a4:	bl	11d28 <memset@plt>
   166a8:	mov	r2, r8
   166ac:	mov	r1, r7
   166b0:	mov	r0, r5
   166b4:	bl	11a4c <memcpy@plt>
   166b8:	b	165e0 <mount@plt+0x4684>
   166bc:	ldrdeq	r7, [r1], -r8
   166c0:	andeq	r0, r0, r0, lsl #4
   166c4:	push	{r4, r5, r6, r7, r8, lr}
   166c8:	mov	r7, r0
   166cc:	mov	r0, r1
   166d0:	mov	r4, r2
   166d4:	mov	r6, r1
   166d8:	bl	11cd4 <strlen@plt>
   166dc:	cmp	r4, #0
   166e0:	mov	r5, r0
   166e4:	bne	166f0 <mount@plt+0x4794>
   166e8:	mov	r0, r5
   166ec:	pop	{r4, r5, r6, r7, r8, pc}
   166f0:	sub	r4, r4, #1
   166f4:	cmp	r4, r0
   166f8:	movcs	r4, r0
   166fc:	mov	r1, r6
   16700:	mov	r2, r4
   16704:	mov	r0, r7
   16708:	bl	11a4c <memcpy@plt>
   1670c:	mov	r3, #0
   16710:	strb	r3, [r7, r4]
   16714:	mov	r0, r5
   16718:	pop	{r4, r5, r6, r7, r8, pc}
   1671c:	push	{r4, r5, r6, r7, r8, lr}
   16720:	mov	r5, r2
   16724:	mov	r6, r1
   16728:	mov	r7, r0
   1672c:	bl	11cd4 <strlen@plt>
   16730:	cmp	r0, r5
   16734:	mov	r4, r0
   16738:	bcc	1674c <mount@plt+0x47f0>
   1673c:	mov	r0, r6
   16740:	bl	11cd4 <strlen@plt>
   16744:	add	r0, r0, r4
   16748:	pop	{r4, r5, r6, r7, r8, pc}
   1674c:	sub	r2, r5, r0
   16750:	mov	r1, r6
   16754:	add	r0, r7, r0
   16758:	bl	166c4 <mount@plt+0x4768>
   1675c:	add	r0, r0, r4
   16760:	pop	{r4, r5, r6, r7, r8, pc}
   16764:	ldr	r3, [pc, #176]	; 1681c <mount@plt+0x48c0>
   16768:	ldr	r2, [pc, #176]	; 16820 <mount@plt+0x48c4>
   1676c:	add	r3, pc, r3
   16770:	push	{r4, r5, lr}
   16774:	sub	sp, sp, #12
   16778:	ldr	r4, [r3, r2]
   1677c:	ldr	r3, [r4]
   16780:	str	r3, [sp, #4]
   16784:	bl	11a04 <getuid@plt>
   16788:	cmp	r0, #0
   1678c:	bne	167a8 <mount@plt+0x484c>
   16790:	ldr	r2, [sp, #4]
   16794:	ldr	r3, [r4]
   16798:	cmp	r2, r3
   1679c:	bne	16810 <mount@plt+0x48b4>
   167a0:	add	sp, sp, #12
   167a4:	pop	{r4, r5, pc}
   167a8:	bl	11b18 <geteuid@plt>
   167ac:	cmp	r0, #0
   167b0:	beq	16790 <mount@plt+0x4834>
   167b4:	bl	11cf8 <cap_get_proc@plt>
   167b8:	subs	r5, r0, #0
   167bc:	beq	16814 <mount@plt+0x48b8>
   167c0:	mov	r3, sp
   167c4:	mov	r2, #2
   167c8:	mov	r1, #12
   167cc:	bl	11be4 <cap_get_flag@plt>
   167d0:	cmp	r0, #0
   167d4:	bne	16814 <mount@plt+0x48b8>
   167d8:	ldr	r3, [sp]
   167dc:	cmp	r3, #0
   167e0:	bne	16804 <mount@plt+0x48a8>
   167e4:	mov	r0, r5
   167e8:	bl	11e18 <cap_clear@plt>
   167ec:	cmp	r0, #0
   167f0:	bne	16814 <mount@plt+0x48b8>
   167f4:	mov	r0, r5
   167f8:	bl	11c2c <cap_set_proc@plt>
   167fc:	cmp	r0, #0
   16800:	bne	16814 <mount@plt+0x48b8>
   16804:	mov	r0, r5
   16808:	bl	11e54 <cap_free@plt>
   1680c:	b	16790 <mount@plt+0x4834>
   16810:	bl	11ac4 <__stack_chk_fail@plt>
   16814:	mov	r0, #1
   16818:	bl	11cb0 <exit@plt>
   1681c:	andeq	r7, r1, ip, lsl #17
   16820:	andeq	r0, r0, r0, lsl #4
   16824:	push	{r4, r5, r6, r7, lr}
   16828:	vpush	{d8}
   1682c:	ldr	r3, [pc, #380]	; 169b0 <mount@plt+0x4a54>
   16830:	ldr	r2, [pc, #380]	; 169b4 <mount@plt+0x4a58>
   16834:	add	r3, pc, r3
   16838:	sub	sp, sp, #12
   1683c:	ldr	r5, [r3, r2]
   16840:	mov	r7, r1
   16844:	mov	r6, r0
   16848:	ldr	r3, [r5]
   1684c:	mov	r0, r1
   16850:	mov	r1, sp
   16854:	str	r3, [sp, #4]
   16858:	bl	11d88 <strtod@plt>
   1685c:	ldr	r4, [sp]
   16860:	cmp	r4, r7
   16864:	beq	16978 <mount@plt+0x4a1c>
   16868:	ldrb	r3, [r4]
   1686c:	vmov.f64	d8, d0
   16870:	cmp	r3, #0
   16874:	bne	168a0 <mount@plt+0x4944>
   16878:	vcvt.u32.f64	s16, d8
   1687c:	mov	r0, #0
   16880:	vstr	s16, [r6]
   16884:	ldr	r2, [sp, #4]
   16888:	ldr	r3, [r5]
   1688c:	cmp	r2, r3
   16890:	bne	16998 <mount@plt+0x4a3c>
   16894:	add	sp, sp, #12
   16898:	vpop	{d8}
   1689c:	pop	{r4, r5, r6, r7, pc}
   168a0:	ldr	r1, [pc, #272]	; 169b8 <mount@plt+0x4a5c>
   168a4:	mov	r0, r4
   168a8:	add	r1, pc, r1
   168ac:	bl	11b0c <strcasecmp@plt>
   168b0:	cmp	r0, #0
   168b4:	beq	16980 <mount@plt+0x4a24>
   168b8:	ldr	r1, [pc, #252]	; 169bc <mount@plt+0x4a60>
   168bc:	mov	r0, r4
   168c0:	add	r1, pc, r1
   168c4:	bl	11b0c <strcasecmp@plt>
   168c8:	cmp	r0, #0
   168cc:	beq	16980 <mount@plt+0x4a24>
   168d0:	ldr	r1, [pc, #232]	; 169c0 <mount@plt+0x4a64>
   168d4:	mov	r0, r4
   168d8:	add	r1, pc, r1
   168dc:	bl	11b0c <strcasecmp@plt>
   168e0:	cmp	r0, #0
   168e4:	beq	16980 <mount@plt+0x4a24>
   168e8:	ldr	r1, [pc, #212]	; 169c4 <mount@plt+0x4a68>
   168ec:	mov	r0, r4
   168f0:	add	r1, pc, r1
   168f4:	bl	11b0c <strcasecmp@plt>
   168f8:	cmp	r0, #0
   168fc:	beq	1698c <mount@plt+0x4a30>
   16900:	ldr	r1, [pc, #192]	; 169c8 <mount@plt+0x4a6c>
   16904:	mov	r0, r4
   16908:	add	r1, pc, r1
   1690c:	bl	11b0c <strcasecmp@plt>
   16910:	cmp	r0, #0
   16914:	beq	1698c <mount@plt+0x4a30>
   16918:	ldr	r1, [pc, #172]	; 169cc <mount@plt+0x4a70>
   1691c:	mov	r0, r4
   16920:	add	r1, pc, r1
   16924:	bl	11b0c <strcasecmp@plt>
   16928:	cmp	r0, #0
   1692c:	beq	1698c <mount@plt+0x4a30>
   16930:	ldr	r1, [pc, #152]	; 169d0 <mount@plt+0x4a74>
   16934:	mov	r0, r4
   16938:	add	r1, pc, r1
   1693c:	bl	11b0c <strcasecmp@plt>
   16940:	cmp	r0, #0
   16944:	beq	16878 <mount@plt+0x491c>
   16948:	ldr	r1, [pc, #132]	; 169d4 <mount@plt+0x4a78>
   1694c:	mov	r0, r4
   16950:	add	r1, pc, r1
   16954:	bl	11b0c <strcasecmp@plt>
   16958:	cmp	r0, #0
   1695c:	beq	16878 <mount@plt+0x491c>
   16960:	ldr	r1, [pc, #112]	; 169d8 <mount@plt+0x4a7c>
   16964:	mov	r0, r4
   16968:	add	r1, pc, r1
   1696c:	bl	11b0c <strcasecmp@plt>
   16970:	cmp	r0, #0
   16974:	beq	16878 <mount@plt+0x491c>
   16978:	mvn	r0, #0
   1697c:	b	16884 <mount@plt+0x4928>
   16980:	vldr	d7, [pc, #24]	; 169a0 <mount@plt+0x4a44>
   16984:	vmul.f64	d8, d8, d7
   16988:	b	16878 <mount@plt+0x491c>
   1698c:	vldr	d7, [pc, #20]	; 169a8 <mount@plt+0x4a4c>
   16990:	vmul.f64	d8, d8, d7
   16994:	b	16878 <mount@plt+0x491c>
   16998:	bl	11ac4 <__stack_chk_fail@plt>
   1699c:	nop			; (mov r0, r0)
   169a0:	andeq	r0, r0, r0
   169a4:	smlawbmi	lr, r0, r4, r8
   169a8:	andeq	r0, r0, r0
   169ac:	addmi	r4, pc, r0
   169b0:	andeq	r7, r1, r4, asr #15
   169b4:	andeq	r0, r0, r0, lsl #4
   169b8:	muleq	r0, r8, r4
   169bc:	muleq	r0, ip, r4
   169c0:	andeq	r6, r0, r8, lsl #9
   169c4:	andeq	r6, r0, r8, asr #16
   169c8:	andeq	r6, r0, r0, ror #8
   169cc:	andeq	r6, r0, r0, asr r4
   169d0:	andeq	r6, r0, r0, lsr r8
   169d4:	andeq	r6, r0, ip, asr #15
   169d8:			; <UNDEFINED> instruction: 0x000067bc
   169dc:	vmov	s15, r0
   169e0:	ldr	r3, [pc, #168]	; 16a90 <mount@plt+0x4b34>
   169e4:	push	{r4, lr}
   169e8:	cmp	r0, r3
   169ec:	sub	sp, sp, #16
   169f0:	mov	r4, r1
   169f4:	vcvt.f64.u32	d7, s15
   169f8:	bhi	16a6c <mount@plt+0x4b10>
   169fc:	cmp	r0, #1000	; 0x3e8
   16a00:	bcc	16a3c <mount@plt+0x4ae0>
   16a04:	ldr	r2, [pc, #136]	; 16a94 <mount@plt+0x4b38>
   16a08:	vldr	d5, [pc, #112]	; 16a80 <mount@plt+0x4b24>
   16a0c:	add	r2, pc, r2
   16a10:	vdiv.f64	d6, d7, d5
   16a14:	str	r2, [sp]
   16a18:	mvn	r3, #0
   16a1c:	mov	r2, #1
   16a20:	mov	r1, #63	; 0x3f
   16a24:	mov	r0, r4
   16a28:	vstr	d6, [sp, #8]
   16a2c:	bl	11f38 <__snprintf_chk@plt>
   16a30:	mov	r0, r4
   16a34:	add	sp, sp, #16
   16a38:	pop	{r4, pc}
   16a3c:	ldr	r3, [pc, #84]	; 16a98 <mount@plt+0x4b3c>
   16a40:	str	r0, [sp, #4]
   16a44:	add	r3, pc, r3
   16a48:	str	r3, [sp]
   16a4c:	mov	r2, #1
   16a50:	mvn	r3, #0
   16a54:	mov	r1, #63	; 0x3f
   16a58:	mov	r0, r4
   16a5c:	bl	11f38 <__snprintf_chk@plt>
   16a60:	mov	r0, r4
   16a64:	add	sp, sp, #16
   16a68:	pop	{r4, pc}
   16a6c:	ldr	r2, [pc, #40]	; 16a9c <mount@plt+0x4b40>
   16a70:	vldr	d5, [pc, #16]	; 16a88 <mount@plt+0x4b2c>
   16a74:	add	r2, pc, r2
   16a78:	b	16a10 <mount@plt+0x4ab4>
   16a7c:	nop			; (mov r0, r0)
   16a80:	andeq	r0, r0, r0
   16a84:	addmi	r4, pc, r0
   16a88:	andeq	r0, r0, r0
   16a8c:	smlawbmi	lr, r0, r4, r8
   16a90:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   16a94:	andeq	r6, r0, r8, lsr #14
   16a98:	strdeq	r6, [r0], -r8
   16a9c:			; <UNDEFINED> instruction: 0x000066b8
   16aa0:	push	{r4, r5, r6, r7, lr}
   16aa4:	vpush	{d8}
   16aa8:	ldr	r3, [pc, #480]	; 16c90 <mount@plt+0x4d34>
   16aac:	ldr	r2, [pc, #480]	; 16c94 <mount@plt+0x4d38>
   16ab0:	add	r3, pc, r3
   16ab4:	sub	sp, sp, #12
   16ab8:	ldr	r5, [r3, r2]
   16abc:	mov	r6, r1
   16ac0:	mov	r7, r0
   16ac4:	ldr	r3, [r5]
   16ac8:	mov	r0, r1
   16acc:	mov	r1, sp
   16ad0:	str	r3, [sp, #4]
   16ad4:	bl	11d88 <strtod@plt>
   16ad8:	ldr	r4, [sp]
   16adc:	cmp	r4, r6
   16ae0:	beq	16c44 <mount@plt+0x4ce8>
   16ae4:	ldrb	r3, [r4]
   16ae8:	vmov.f64	d8, d0
   16aec:	cmp	r3, #0
   16af0:	bne	16b24 <mount@plt+0x4bc8>
   16af4:	vmov	r0, r1, d8
   16af8:	bl	1c41c <mount@plt+0xa4c0>
   16afc:	mov	ip, #0
   16b00:	strd	r0, [r7]
   16b04:	ldr	r2, [sp, #4]
   16b08:	ldr	r3, [r5]
   16b0c:	mov	r0, ip
   16b10:	cmp	r2, r3
   16b14:	bne	16c70 <mount@plt+0x4d14>
   16b18:	add	sp, sp, #12
   16b1c:	vpop	{d8}
   16b20:	pop	{r4, r5, r6, r7, pc}
   16b24:	ldr	r1, [pc, #364]	; 16c98 <mount@plt+0x4d3c>
   16b28:	mov	r0, r4
   16b2c:	add	r1, pc, r1
   16b30:	bl	11b0c <strcasecmp@plt>
   16b34:	cmp	r0, #0
   16b38:	beq	16c4c <mount@plt+0x4cf0>
   16b3c:	ldr	r1, [pc, #344]	; 16c9c <mount@plt+0x4d40>
   16b40:	mov	r0, r4
   16b44:	add	r1, pc, r1
   16b48:	bl	11b0c <strcasecmp@plt>
   16b4c:	cmp	r0, #0
   16b50:	beq	16c4c <mount@plt+0x4cf0>
   16b54:	ldr	r1, [pc, #324]	; 16ca0 <mount@plt+0x4d44>
   16b58:	mov	r0, r4
   16b5c:	add	r1, pc, r1
   16b60:	bl	11b0c <strcasecmp@plt>
   16b64:	cmp	r0, #0
   16b68:	beq	16c4c <mount@plt+0x4cf0>
   16b6c:	ldr	r1, [pc, #304]	; 16ca4 <mount@plt+0x4d48>
   16b70:	mov	r0, r4
   16b74:	add	r1, pc, r1
   16b78:	bl	11b0c <strcasecmp@plt>
   16b7c:	cmp	r0, #0
   16b80:	beq	16c58 <mount@plt+0x4cfc>
   16b84:	ldr	r1, [pc, #284]	; 16ca8 <mount@plt+0x4d4c>
   16b88:	mov	r0, r4
   16b8c:	add	r1, pc, r1
   16b90:	bl	11b0c <strcasecmp@plt>
   16b94:	cmp	r0, #0
   16b98:	beq	16c58 <mount@plt+0x4cfc>
   16b9c:	ldr	r1, [pc, #264]	; 16cac <mount@plt+0x4d50>
   16ba0:	mov	r0, r4
   16ba4:	add	r1, pc, r1
   16ba8:	bl	11b0c <strcasecmp@plt>
   16bac:	cmp	r0, #0
   16bb0:	beq	16c58 <mount@plt+0x4cfc>
   16bb4:	ldr	r1, [pc, #244]	; 16cb0 <mount@plt+0x4d54>
   16bb8:	mov	r0, r4
   16bbc:	add	r1, pc, r1
   16bc0:	bl	11b0c <strcasecmp@plt>
   16bc4:	cmp	r0, #0
   16bc8:	beq	16c64 <mount@plt+0x4d08>
   16bcc:	ldr	r1, [pc, #224]	; 16cb4 <mount@plt+0x4d58>
   16bd0:	mov	r0, r4
   16bd4:	add	r1, pc, r1
   16bd8:	bl	11b0c <strcasecmp@plt>
   16bdc:	cmp	r0, #0
   16be0:	beq	16c64 <mount@plt+0x4d08>
   16be4:	ldr	r1, [pc, #204]	; 16cb8 <mount@plt+0x4d5c>
   16be8:	mov	r0, r4
   16bec:	add	r1, pc, r1
   16bf0:	bl	11b0c <strcasecmp@plt>
   16bf4:	cmp	r0, #0
   16bf8:	beq	16c64 <mount@plt+0x4d08>
   16bfc:	ldr	r1, [pc, #184]	; 16cbc <mount@plt+0x4d60>
   16c00:	mov	r0, r4
   16c04:	add	r1, pc, r1
   16c08:	bl	11b0c <strcasecmp@plt>
   16c0c:	cmp	r0, #0
   16c10:	beq	16af4 <mount@plt+0x4b98>
   16c14:	ldr	r1, [pc, #164]	; 16cc0 <mount@plt+0x4d64>
   16c18:	mov	r0, r4
   16c1c:	add	r1, pc, r1
   16c20:	bl	11b0c <strcasecmp@plt>
   16c24:	cmp	r0, #0
   16c28:	beq	16af4 <mount@plt+0x4b98>
   16c2c:	ldr	r1, [pc, #144]	; 16cc4 <mount@plt+0x4d68>
   16c30:	mov	r0, r4
   16c34:	add	r1, pc, r1
   16c38:	bl	11b0c <strcasecmp@plt>
   16c3c:	cmp	r0, #0
   16c40:	beq	16af4 <mount@plt+0x4b98>
   16c44:	mvn	ip, #0
   16c48:	b	16b04 <mount@plt+0x4ba8>
   16c4c:	vldr	d7, [pc, #36]	; 16c78 <mount@plt+0x4d1c>
   16c50:	vmul.f64	d8, d8, d7
   16c54:	b	16af4 <mount@plt+0x4b98>
   16c58:	vldr	d7, [pc, #32]	; 16c80 <mount@plt+0x4d24>
   16c5c:	vmul.f64	d8, d8, d7
   16c60:	b	16af4 <mount@plt+0x4b98>
   16c64:	vldr	d7, [pc, #28]	; 16c88 <mount@plt+0x4d2c>
   16c68:	vmul.f64	d8, d8, d7
   16c6c:	b	16af4 <mount@plt+0x4b98>
   16c70:	bl	11ac4 <__stack_chk_fail@plt>
   16c74:	nop			; (mov r0, r0)
   16c78:	andeq	r0, r0, r0
   16c7c:	bicmi	ip, sp, r5, ror #26
   16c80:	andeq	r0, r0, r0
   16c84:	smlawbmi	lr, r0, r4, r8
   16c88:	andeq	r0, r0, r0
   16c8c:	addmi	r4, pc, r0
   16c90:	andeq	r7, r1, r8, asr #10
   16c94:	andeq	r0, r0, r0, lsl #4
   16c98:	andeq	r6, r0, r4, lsl r2
   16c9c:	andeq	r6, r0, r8, lsl r2
   16ca0:	andeq	r6, r0, r4, lsl #4
   16ca4:	andeq	r6, r0, r4, asr #11
   16ca8:	ldrdeq	r6, [r0], -ip
   16cac:	andeq	r6, r0, ip, asr #3
   16cb0:	andeq	r6, r0, ip, lsr #11
   16cb4:	andeq	r6, r0, r8, asr #10
   16cb8:	andeq	r6, r0, r8, lsr r5
   16cbc:	andeq	r6, r0, ip, ror #10
   16cc0:	andeq	r6, r0, r8, lsr #10
   16cc4:	andeq	r6, r0, r8, lsl r5
   16cc8:	push	{r4, r5, r6, lr}
   16ccc:	sub	sp, sp, #16
   16cd0:	mov	r6, r2
   16cd4:	mov	r4, r0
   16cd8:	mov	r5, r1
   16cdc:	bl	1c3bc <mount@plt+0xa460>
   16ce0:	add	r3, pc, #184	; 0xb8
   16ce4:	ldrd	r2, [r3]
   16ce8:	cmp	r2, r4
   16cec:	sbcs	r3, r3, r5
   16cf0:	vmov	d7, r0, r1
   16cf4:	blt	16d60 <mount@plt+0x4e04>
   16cf8:	add	r3, pc, #168	; 0xa8
   16cfc:	ldrd	r2, [r3]
   16d00:	cmp	r2, r4
   16d04:	sbcs	r3, r3, r5
   16d08:	blt	16d50 <mount@plt+0x4df4>
   16d0c:	cmp	r4, #1000	; 0x3e8
   16d10:	sbcs	r3, r5, #0
   16d14:	blt	16d70 <mount@plt+0x4e14>
   16d18:	ldr	r2, [pc, #168]	; 16dc8 <mount@plt+0x4e6c>
   16d1c:	vldr	d5, [pc, #140]	; 16db0 <mount@plt+0x4e54>
   16d20:	add	r2, pc, r2
   16d24:	vdiv.f64	d6, d7, d5
   16d28:	str	r2, [sp]
   16d2c:	mvn	r3, #0
   16d30:	mov	r2, #1
   16d34:	mov	r1, #63	; 0x3f
   16d38:	mov	r0, r6
   16d3c:	vstr	d6, [sp, #8]
   16d40:	bl	11f38 <__snprintf_chk@plt>
   16d44:	mov	r0, r6
   16d48:	add	sp, sp, #16
   16d4c:	pop	{r4, r5, r6, pc}
   16d50:	ldr	r2, [pc, #116]	; 16dcc <mount@plt+0x4e70>
   16d54:	vldr	d5, [pc, #92]	; 16db8 <mount@plt+0x4e5c>
   16d58:	add	r2, pc, r2
   16d5c:	b	16d24 <mount@plt+0x4dc8>
   16d60:	ldr	r2, [pc, #104]	; 16dd0 <mount@plt+0x4e74>
   16d64:	vldr	d5, [pc, #84]	; 16dc0 <mount@plt+0x4e64>
   16d68:	add	r2, pc, r2
   16d6c:	b	16d24 <mount@plt+0x4dc8>
   16d70:	ldr	r3, [pc, #92]	; 16dd4 <mount@plt+0x4e78>
   16d74:	strd	r4, [sp, #8]
   16d78:	add	r3, pc, r3
   16d7c:	str	r3, [sp]
   16d80:	mov	r2, #1
   16d84:	mvn	r3, #0
   16d88:	mov	r1, #63	; 0x3f
   16d8c:	mov	r0, r6
   16d90:	bl	11f38 <__snprintf_chk@plt>
   16d94:	mov	r0, r6
   16d98:	add	sp, sp, #16
   16d9c:	pop	{r4, r5, r6, pc}
   16da0:	blcc	fe6c95a4 <optarg@@GLIBC_2.4+0xfe69b354>
   16da4:	andeq	r0, r0, r0
   16da8:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
	...
   16db4:	addmi	r4, pc, r0
   16db8:	andeq	r0, r0, r0
   16dbc:	smlawbmi	lr, r0, r4, r8
   16dc0:	andeq	r0, r0, r0
   16dc4:	bicmi	ip, sp, r5, ror #26
   16dc8:	andeq	r6, r0, r4, asr #8
   16dcc:	andeq	r6, r0, r4, lsl #8
   16dd0:	andeq	r6, r0, ip, ror #7
   16dd4:	strdeq	r6, [r0], -r4
   16dd8:	ldrb	r3, [r0]
   16ddc:	ldr	r2, [pc, #32]	; 16e04 <mount@plt+0x4ea8>
   16de0:	cmp	r3, #0
   16de4:	beq	16dfc <mount@plt+0x4ea0>
   16de8:	add	r1, r3, r2, lsl #5
   16dec:	ldrb	r3, [r0, #1]!
   16df0:	add	r2, r2, r1
   16df4:	cmp	r3, #0
   16df8:	bne	16de8 <mount@plt+0x4e8c>
   16dfc:	mov	r0, r2
   16e00:	bx	lr
   16e04:	andeq	r1, r0, r5, lsl #10
   16e08:	ldr	r3, [pc, #588]	; 1705c <mount@plt+0x5100>
   16e0c:	ldr	r2, [pc, #588]	; 17060 <mount@plt+0x5104>
   16e10:	add	r3, pc, r3
   16e14:	push	{r4, r5, r6, r7, r8, lr}
   16e18:	mov	r5, r0
   16e1c:	ldr	r6, [r3, r2]
   16e20:	ldrh	r0, [r0, #4]
   16e24:	sub	sp, sp, #216	; 0xd8
   16e28:	ldr	r3, [r6]
   16e2c:	sub	r2, r0, #16
   16e30:	cmp	r2, #1
   16e34:	str	r3, [sp, #212]	; 0xd4
   16e38:	bhi	16ebc <mount@plt+0x4f60>
   16e3c:	ldr	r3, [r5]
   16e40:	cmp	r3, #31
   16e44:	bls	17050 <mount@plt+0x50f4>
   16e48:	ldr	r1, [r5, #20]
   16e4c:	ldr	r2, [pc, #528]	; 17064 <mount@plt+0x5108>
   16e50:	lsl	ip, r1, #22
   16e54:	add	r2, pc, r2
   16e58:	lsr	ip, ip, #22
   16e5c:	ldr	r4, [r2, ip, lsl #2]
   16e60:	cmp	r4, #0
   16e64:	bne	16e78 <mount@plt+0x4f1c>
   16e68:	b	16ed8 <mount@plt+0x4f7c>
   16e6c:	ldr	r4, [r4]
   16e70:	cmp	r4, #0
   16e74:	beq	16ed8 <mount@plt+0x4f7c>
   16e78:	ldr	r2, [r4, #20]
   16e7c:	cmp	r1, r2
   16e80:	bne	16e6c <mount@plt+0x4f10>
   16e84:	cmp	r0, #17
   16e88:	bne	16fb8 <mount@plt+0x505c>
   16e8c:	ldr	r3, [r4, #8]
   16e90:	ldr	r2, [r4, #12]
   16e94:	cmp	r3, #0
   16e98:	mov	r0, r4
   16e9c:	str	r3, [r2]
   16ea0:	strne	r2, [r3, #4]
   16ea4:	ldr	r3, [r4]
   16ea8:	ldr	r2, [r4, #4]
   16eac:	cmp	r3, #0
   16eb0:	str	r3, [r2]
   16eb4:	strne	r2, [r3, #4]
   16eb8:	bl	11a1c <free@plt>
   16ebc:	mov	r0, #0
   16ec0:	ldr	r2, [sp, #212]	; 0xd4
   16ec4:	ldr	r3, [r6]
   16ec8:	cmp	r2, r3
   16ecc:	bne	17058 <mount@plt+0x50fc>
   16ed0:	add	sp, sp, #216	; 0xd8
   16ed4:	pop	{r4, r5, r6, r7, r8, pc}
   16ed8:	cmp	r0, #17
   16edc:	beq	16ebc <mount@plt+0x4f60>
   16ee0:	sub	r3, r3, #32
   16ee4:	add	r2, r5, #32
   16ee8:	mov	r1, #51	; 0x33
   16eec:	add	r0, sp, #4
   16ef0:	bl	1bf00 <mount@plt+0x9fa4>
   16ef4:	ldr	r0, [sp, #16]
   16ef8:	adds	r4, r0, #4
   16efc:	beq	16ebc <mount@plt+0x4f60>
   16f00:	mov	r0, r4
   16f04:	bl	11cd4 <strlen@plt>
   16f08:	add	r0, r0, #29
   16f0c:	bl	11c38 <malloc@plt>
   16f10:	subs	r7, r0, #0
   16f14:	beq	16ebc <mount@plt+0x4f60>
   16f18:	ldr	r8, [r5, #20]
   16f1c:	mov	r1, r4
   16f20:	str	r8, [r7, #20]
   16f24:	add	r0, r7, #26
   16f28:	bl	11bb4 <strcpy@plt>
   16f2c:	lsl	r3, r8, #22
   16f30:	ldr	r2, [pc, #304]	; 17068 <mount@plt+0x510c>
   16f34:	lsr	r3, r3, #22
   16f38:	add	r2, pc, r2
   16f3c:	ldrh	r0, [r5, #18]
   16f40:	ldr	r2, [r2, r3, lsl #2]
   16f44:	ldr	r1, [r5, #24]
   16f48:	cmp	r2, #0
   16f4c:	str	r2, [r7]
   16f50:	strh	r0, [r7, #24]
   16f54:	str	r1, [r7, #16]
   16f58:	strne	r7, [r2, #4]
   16f5c:	ldr	r2, [pc, #264]	; 1706c <mount@plt+0x5110>
   16f60:	mov	r0, r4
   16f64:	add	r2, pc, r2
   16f68:	add	r1, r2, r3, lsl #2
   16f6c:	str	r7, [r2, r3, lsl #2]
   16f70:	str	r1, [r7, #4]
   16f74:	bl	16dd8 <mount@plt+0x4e7c>
   16f78:	ldr	r2, [pc, #240]	; 17070 <mount@plt+0x5114>
   16f7c:	add	r1, r7, #8
   16f80:	add	r2, pc, r2
   16f84:	lsl	r3, r0, #22
   16f88:	mov	r0, #0
   16f8c:	lsr	r3, r3, #22
   16f90:	ldr	r2, [r2, r3, lsl #2]
   16f94:	cmp	r2, #0
   16f98:	str	r2, [r7, #8]
   16f9c:	strne	r1, [r2, #4]
   16fa0:	ldr	r2, [pc, #204]	; 17074 <mount@plt+0x5118>
   16fa4:	add	r2, pc, r2
   16fa8:	add	ip, r2, r3, lsl #2
   16fac:	str	r1, [r2, r3, lsl #2]
   16fb0:	str	ip, [r7, #12]
   16fb4:	b	16ec0 <mount@plt+0x4f64>
   16fb8:	sub	r3, r3, #32
   16fbc:	add	r2, r5, #32
   16fc0:	mov	r1, #51	; 0x33
   16fc4:	add	r0, sp, #4
   16fc8:	bl	1bf00 <mount@plt+0x9fa4>
   16fcc:	ldr	r7, [sp, #16]
   16fd0:	adds	r7, r7, #4
   16fd4:	beq	16ebc <mount@plt+0x4f60>
   16fd8:	mov	r1, r7
   16fdc:	add	r0, r4, #26
   16fe0:	bl	119bc <strcmp@plt>
   16fe4:	cmp	r0, #0
   16fe8:	beq	17040 <mount@plt+0x50e4>
   16fec:	ldr	r3, [r4, #8]
   16ff0:	ldr	r2, [r4, #12]
   16ff4:	cmp	r3, #0
   16ff8:	mov	r0, r7
   16ffc:	str	r3, [r2]
   17000:	strne	r2, [r3, #4]
   17004:	bl	16dd8 <mount@plt+0x4e7c>
   17008:	ldr	r3, [pc, #104]	; 17078 <mount@plt+0x511c>
   1700c:	add	r2, r4, #8
   17010:	add	r3, pc, r3
   17014:	lsl	r0, r0, #22
   17018:	lsr	r0, r0, #22
   1701c:	ldr	r3, [r3, r0, lsl #2]
   17020:	cmp	r3, #0
   17024:	str	r3, [r4, #8]
   17028:	strne	r2, [r3, #4]
   1702c:	ldr	r3, [pc, #72]	; 1707c <mount@plt+0x5120>
   17030:	add	r3, pc, r3
   17034:	add	r1, r3, r0, lsl #2
   17038:	str	r2, [r3, r0, lsl #2]
   1703c:	str	r1, [r4, #12]
   17040:	ldr	r3, [r5, #24]
   17044:	mov	r0, #0
   17048:	str	r3, [r4, #16]
   1704c:	b	16ec0 <mount@plt+0x4f64>
   17050:	mvn	r0, #0
   17054:	b	16ec0 <mount@plt+0x4f64>
   17058:	bl	11ac4 <__stack_chk_fail@plt>
   1705c:	andeq	r7, r1, r8, ror #3
   17060:	andeq	r0, r0, r0, lsl #4
   17064:	andeq	r8, r1, ip, lsr #20
   17068:	andeq	r8, r1, r8, asr #18
   1706c:	andeq	r8, r1, ip, lsl r9
   17070:	andeq	r7, r1, r0, lsl #18
   17074:	ldrdeq	r7, [r1], -ip
   17078:	andeq	r7, r1, r0, ror r8
   1707c:	andeq	r7, r1, r0, asr r8
   17080:	push	{r4, lr}
   17084:	sub	sp, sp, #8
   17088:	ldr	r4, [pc, #48]	; 170c0 <mount@plt+0x5164>
   1708c:	ldr	r2, [pc, #48]	; 170c4 <mount@plt+0x5168>
   17090:	add	r4, pc, r4
   17094:	mov	r3, #16
   17098:	add	r2, pc, r2
   1709c:	str	r0, [sp, #4]
   170a0:	str	r2, [sp]
   170a4:	mov	r0, r4
   170a8:	mov	r1, r3
   170ac:	mov	r2, #1
   170b0:	bl	11f38 <__snprintf_chk@plt>
   170b4:	mov	r0, r4
   170b8:	add	sp, sp, #8
   170bc:	pop	{r4, pc}
   170c0:	andeq	r7, r1, ip, asr #15
   170c4:	ldrdeq	r6, [r0], -ip
   170c8:	push	{r4, r5, lr}
   170cc:	subs	r5, r0, #0
   170d0:	sub	sp, sp, #12
   170d4:	beq	1711c <mount@plt+0x51c0>
   170d8:	lsl	r2, r5, #22
   170dc:	ldr	r3, [pc, #156]	; 17180 <mount@plt+0x5224>
   170e0:	lsr	r2, r2, #22
   170e4:	add	r3, pc, r3
   170e8:	ldr	r3, [r3, r2, lsl #2]
   170ec:	cmp	r3, #0
   170f0:	bne	17104 <mount@plt+0x51a8>
   170f4:	b	1712c <mount@plt+0x51d0>
   170f8:	ldr	r3, [r3]
   170fc:	cmp	r3, #0
   17100:	beq	1712c <mount@plt+0x51d0>
   17104:	ldr	r2, [r3, #20]
   17108:	cmp	r5, r2
   1710c:	bne	170f8 <mount@plt+0x519c>
   17110:	add	r0, r3, #26
   17114:	add	sp, sp, #12
   17118:	pop	{r4, r5, pc}
   1711c:	ldr	r0, [pc, #96]	; 17184 <mount@plt+0x5228>
   17120:	add	r0, pc, r0
   17124:	add	sp, sp, #12
   17128:	pop	{r4, r5, pc}
   1712c:	ldr	r4, [pc, #84]	; 17188 <mount@plt+0x522c>
   17130:	mov	r0, r5
   17134:	add	r4, pc, r4
   17138:	add	r4, r4, #16
   1713c:	mov	r1, r4
   17140:	bl	119f8 <if_indextoname@plt>
   17144:	cmp	r0, #0
   17148:	beq	17158 <mount@plt+0x51fc>
   1714c:	mov	r0, r4
   17150:	add	sp, sp, #12
   17154:	pop	{r4, r5, pc}
   17158:	ldr	r2, [pc, #44]	; 1718c <mount@plt+0x5230>
   1715c:	mov	r3, #16
   17160:	add	r2, pc, r2
   17164:	mov	r1, r3
   17168:	stm	sp, {r2, r5}
   1716c:	mov	r0, r4
   17170:	mov	r2, #1
   17174:	bl	11f38 <__snprintf_chk@plt>
   17178:	mov	r0, r4
   1717c:	b	17114 <mount@plt+0x51b8>
   17180:	muleq	r1, ip, r7
   17184:	andeq	r6, r0, ip, asr r0
   17188:	andeq	r7, r1, r8, lsr #14
   1718c:	andeq	r6, r0, r4, lsl r0
   17190:	cmp	r0, #0
   17194:	beq	171d8 <mount@plt+0x527c>
   17198:	lsl	r2, r0, #22
   1719c:	ldr	r3, [pc, #60]	; 171e0 <mount@plt+0x5284>
   171a0:	lsr	r2, r2, #22
   171a4:	add	r3, pc, r3
   171a8:	ldr	r3, [r3, r2, lsl #2]
   171ac:	cmp	r3, #0
   171b0:	bne	171c4 <mount@plt+0x5268>
   171b4:	b	171d8 <mount@plt+0x527c>
   171b8:	ldr	r3, [r3]
   171bc:	cmp	r3, #0
   171c0:	beq	171d8 <mount@plt+0x527c>
   171c4:	ldr	r2, [r3, #20]
   171c8:	cmp	r0, r2
   171cc:	bne	171b8 <mount@plt+0x525c>
   171d0:	ldrh	r0, [r3, #24]
   171d4:	bx	lr
   171d8:	mvn	r0, #0
   171dc:	bx	lr
   171e0:	ldrdeq	r8, [r1], -ip
   171e4:	cmp	r0, #0
   171e8:	bxeq	lr
   171ec:	lsl	r2, r0, #22
   171f0:	ldr	r3, [pc, #60]	; 17234 <mount@plt+0x52d8>
   171f4:	lsr	r2, r2, #22
   171f8:	add	r3, pc, r3
   171fc:	ldr	r3, [r3, r2, lsl #2]
   17200:	cmp	r3, #0
   17204:	bne	17218 <mount@plt+0x52bc>
   17208:	b	1722c <mount@plt+0x52d0>
   1720c:	ldr	r3, [r3]
   17210:	cmp	r3, #0
   17214:	beq	1722c <mount@plt+0x52d0>
   17218:	ldr	r2, [r3, #20]
   1721c:	cmp	r0, r2
   17220:	bne	1720c <mount@plt+0x52b0>
   17224:	ldr	r0, [r3, #16]
   17228:	bx	lr
   1722c:	mvn	r0, #0
   17230:	bx	lr
   17234:	andeq	r8, r1, r8, lsl #13
   17238:	ldr	r3, [pc, #204]	; 1730c <mount@plt+0x53b0>
   1723c:	ldr	r2, [pc, #204]	; 17310 <mount@plt+0x53b4>
   17240:	add	r3, pc, r3
   17244:	push	{r4, r5, r6, lr}
   17248:	sub	sp, sp, #8
   1724c:	ldr	r5, [r3, r2]
   17250:	subs	r6, r0, #0
   17254:	moveq	r4, r6
   17258:	ldr	r3, [r5]
   1725c:	str	r3, [sp, #4]
   17260:	beq	172bc <mount@plt+0x5360>
   17264:	bl	16dd8 <mount@plt+0x4e7c>
   17268:	ldr	r3, [pc, #164]	; 17314 <mount@plt+0x53b8>
   1726c:	add	r3, pc, r3
   17270:	lsl	r0, r0, #22
   17274:	lsr	r0, r0, #22
   17278:	ldr	r4, [r3, r0, lsl #2]
   1727c:	cmp	r4, #0
   17280:	bne	17294 <mount@plt+0x5338>
   17284:	b	172d8 <mount@plt+0x537c>
   17288:	ldr	r4, [r4]
   1728c:	cmp	r4, #0
   17290:	beq	172d8 <mount@plt+0x537c>
   17294:	mov	r2, #16
   17298:	mov	r1, r6
   1729c:	add	r0, r4, #18
   172a0:	bl	11ee4 <strncmp@plt>
   172a4:	sub	r3, r4, #8
   172a8:	cmp	r0, #0
   172ac:	bne	17288 <mount@plt+0x532c>
   172b0:	cmp	r3, #0
   172b4:	beq	172d8 <mount@plt+0x537c>
   172b8:	ldr	r4, [r4, #12]
   172bc:	ldr	r2, [sp, #4]
   172c0:	ldr	r3, [r5]
   172c4:	mov	r0, r4
   172c8:	cmp	r2, r3
   172cc:	bne	17308 <mount@plt+0x53ac>
   172d0:	add	sp, sp, #8
   172d4:	pop	{r4, r5, r6, pc}
   172d8:	mov	r0, r6
   172dc:	bl	11ecc <if_nametoindex@plt>
   172e0:	subs	r4, r0, #0
   172e4:	bne	172bc <mount@plt+0x5360>
   172e8:	ldr	r1, [pc, #40]	; 17318 <mount@plt+0x53bc>
   172ec:	mov	r0, r6
   172f0:	mov	r2, sp
   172f4:	add	r1, pc, r1
   172f8:	bl	11e3c <sscanf@plt>
   172fc:	cmp	r0, #1
   17300:	ldreq	r4, [sp]
   17304:	b	172bc <mount@plt+0x5360>
   17308:	bl	11ac4 <__stack_chk_fail@plt>
   1730c:			; <UNDEFINED> instruction: 0x00016db8
   17310:	andeq	r0, r0, r0, lsl #4
   17314:	andeq	r7, r1, r4, lsl r6
   17318:	andeq	r5, r0, r0, lsl #29
   1731c:	push	{r4, r5, r6, r7, r8, lr}
   17320:	ldr	r6, [pc, #144]	; 173b8 <mount@plt+0x545c>
   17324:	ldr	r5, [pc, #144]	; 173bc <mount@plt+0x5460>
   17328:	add	r6, pc, r6
   1732c:	add	r5, pc, r5
   17330:	ldr	r4, [r6, #32]
   17334:	cmp	r4, #0
   17338:	popne	{r4, r5, r6, r7, r8, pc}
   1733c:	mov	r1, r4
   17340:	mov	r7, r0
   17344:	bl	1a918 <mount@plt+0x89bc>
   17348:	cmp	r0, #0
   1734c:	blt	1737c <mount@plt+0x5420>
   17350:	ldr	r2, [pc, #104]	; 173c0 <mount@plt+0x5464>
   17354:	mov	r0, r7
   17358:	mov	r3, r4
   1735c:	ldr	r1, [r5, r2]
   17360:	mov	r2, r4
   17364:	bl	1ad70 <mount@plt+0x8e14>
   17368:	cmp	r0, #0
   1736c:	blt	17390 <mount@plt+0x5434>
   17370:	mov	r3, #1
   17374:	str	r3, [r6, #32]
   17378:	pop	{r4, r5, r6, r7, r8, pc}
   1737c:	ldr	r0, [pc, #64]	; 173c4 <mount@plt+0x5468>
   17380:	add	r0, pc, r0
   17384:	bl	11b24 <perror@plt>
   17388:	mov	r0, #1
   1738c:	bl	11cb0 <exit@plt>
   17390:	ldr	r3, [pc, #48]	; 173c8 <mount@plt+0x546c>
   17394:	ldr	r0, [pc, #48]	; 173cc <mount@plt+0x5470>
   17398:	mov	r2, #16
   1739c:	ldr	r3, [r5, r3]
   173a0:	mov	r1, #1
   173a4:	add	r0, pc, r0
   173a8:	ldr	r3, [r3]
   173ac:	bl	11b6c <fwrite@plt>
   173b0:	mov	r0, #1
   173b4:	bl	11cb0 <exit@plt>
   173b8:	andeq	r7, r1, r4, lsr r5
   173bc:	andeq	r6, r1, ip, asr #25
   173c0:	andeq	r0, r0, r8, lsl #4
   173c4:	andeq	r5, r0, r0, lsl #28
   173c8:	andeq	r0, r0, ip, lsl #4
   173cc:	strdeq	r5, [r0], -r8
   173d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   173d4:	sub	sp, sp, #8
   173d8:	cmp	r1, #4
   173dc:	mov	r8, r3
   173e0:	ldr	r6, [sp, #40]	; 0x28
   173e4:	beq	174a8 <mount@plt+0x554c>
   173e8:	cmp	r1, #16
   173ec:	bne	17404 <mount@plt+0x54a8>
   173f0:	ldr	ip, [pc, #244]	; 174ec <mount@plt+0x5590>
   173f4:	ldr	r3, [pc, #244]	; 174f0 <mount@plt+0x5594>
   173f8:	cmp	r2, r3
   173fc:	cmpne	r2, ip
   17400:	beq	174d8 <mount@plt+0x557c>
   17404:	mov	r7, r1
   17408:	ldr	r2, [pc, #228]	; 174f4 <mount@plt+0x5598>
   1740c:	ldrb	r1, [r0]
   17410:	add	r2, pc, r2
   17414:	str	r2, [sp]
   17418:	str	r1, [sp, #4]
   1741c:	mov	r9, r0
   17420:	mvn	r3, #0
   17424:	mov	r2, #1
   17428:	mov	r1, r6
   1742c:	mov	r0, r8
   17430:	bl	11f38 <__snprintf_chk@plt>
   17434:	cmp	r6, #2
   17438:	cmpgt	r7, #1
   1743c:	ble	1749c <mount@plt+0x5540>
   17440:	ldr	sl, [pc, #176]	; 174f8 <mount@plt+0x559c>
   17444:	mov	r4, r9
   17448:	add	sl, pc, sl
   1744c:	mov	r5, #2
   17450:	ldrb	r2, [r4, #1]
   17454:	mvn	r3, #0
   17458:	sub	r1, r6, r5
   1745c:	str	r2, [sp, #4]
   17460:	add	r0, r8, r5
   17464:	str	sl, [sp]
   17468:	mov	r2, #1
   1746c:	bl	11f38 <__snprintf_chk@plt>
   17470:	add	ip, r4, #2
   17474:	sub	ip, ip, r9
   17478:	cmp	ip, r7
   1747c:	add	r5, r5, #3
   17480:	movge	r3, #0
   17484:	movlt	r3, #1
   17488:	cmp	r6, r5
   1748c:	movle	r3, #0
   17490:	add	r4, r4, #1
   17494:	cmp	r3, #0
   17498:	bne	17450 <mount@plt+0x54f4>
   1749c:	mov	r0, r8
   174a0:	add	sp, sp, #8
   174a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174a8:	ldr	r3, [pc, #76]	; 174fc <mount@plt+0x55a0>
   174ac:	bic	ip, r2, #8
   174b0:	cmp	r2, r3
   174b4:	cmpne	ip, #768	; 0x300
   174b8:	bne	17404 <mount@plt+0x54a8>
   174bc:	mov	r1, r0
   174c0:	mov	r3, r6
   174c4:	mov	r2, r8
   174c8:	mov	r0, #2
   174cc:	add	sp, sp, #8
   174d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   174d4:	b	11ea8 <inet_ntop@plt>
   174d8:	mov	r1, r0
   174dc:	mov	r3, r6
   174e0:	mov	r2, r8
   174e4:	mov	r0, #10
   174e8:	b	174cc <mount@plt+0x5570>
   174ec:	andeq	r0, r0, r1, lsl #6
   174f0:	andeq	r0, r0, r7, lsr r3
   174f4:	andeq	r5, r0, r0, lsl ip
   174f8:	andeq	r5, r0, r8, ror #26
   174fc:	andeq	r0, r0, sl, lsl #6
   17500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17504:	sub	sp, sp, #284	; 0x11c
   17508:	ldr	fp, [pc, #396]	; 1769c <mount@plt+0x5740>
   1750c:	ldr	r3, [pc, #396]	; 176a0 <mount@plt+0x5744>
   17510:	add	fp, pc, fp
   17514:	mov	r7, r0
   17518:	ldr	r3, [fp, r3]
   1751c:	mov	r6, r1
   17520:	str	r3, [sp, #4]
   17524:	ldr	r3, [r3]
   17528:	mov	r0, r2
   1752c:	mov	r1, #46	; 0x2e
   17530:	mov	r5, r2
   17534:	str	r3, [sp, #276]	; 0x114
   17538:	bl	11ce0 <strchr@plt>
   1753c:	subs	r8, r0, #0
   17540:	beq	17584 <mount@plt+0x5628>
   17544:	mov	r2, #2
   17548:	mov	r1, r5
   1754c:	add	r0, sp, #12
   17550:	bl	145c4 <mount@plt+0x2668>
   17554:	cmp	r0, #0
   17558:	bne	1762c <mount@plt+0x56d0>
   1755c:	cmp	r6, #3
   17560:	bgt	17654 <mount@plt+0x56f8>
   17564:	mvn	r0, #0
   17568:	ldr	r3, [sp, #4]
   1756c:	ldr	r2, [sp, #276]	; 0x114
   17570:	ldr	r3, [r3]
   17574:	cmp	r2, r3
   17578:	bne	17698 <mount@plt+0x573c>
   1757c:	add	sp, sp, #284	; 0x11c
   17580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17584:	cmp	r6, #0
   17588:	ble	17690 <mount@plt+0x5734>
   1758c:	ldr	r9, [pc, #272]	; 176a4 <mount@plt+0x5748>
   17590:	sub	r4, r7, #1
   17594:	str	r8, [sp]
   17598:	add	r6, r4, r6
   1759c:	add	sl, sp, #8
   175a0:	add	r9, pc, r9
   175a4:	b	175d8 <mount@plt+0x567c>
   175a8:	ldr	r3, [sp, #8]
   175ac:	cmp	r3, #255	; 0xff
   175b0:	bhi	17664 <mount@plt+0x5708>
   175b4:	add	r0, r4, #2
   175b8:	cmp	r8, #0
   175bc:	strb	r3, [r4, #1]
   175c0:	sub	r0, r0, r7
   175c4:	add	r4, r4, #1
   175c8:	beq	17568 <mount@plt+0x560c>
   175cc:	cmp	r4, r6
   175d0:	mov	r5, r8
   175d4:	beq	17688 <mount@plt+0x572c>
   175d8:	mov	r1, #58	; 0x3a
   175dc:	mov	r0, r5
   175e0:	bl	11ce0 <strchr@plt>
   175e4:	mov	r2, sl
   175e8:	mov	r1, r9
   175ec:	subs	r8, r0, #0
   175f0:	mov	r0, r5
   175f4:	ldrne	r3, [sp]
   175f8:	strbne	r3, [r8], #1
   175fc:	bl	11e3c <sscanf@plt>
   17600:	cmp	r0, #1
   17604:	beq	175a8 <mount@plt+0x564c>
   17608:	ldr	r1, [pc, #152]	; 176a8 <mount@plt+0x574c>
   1760c:	ldr	r2, [pc, #152]	; 176ac <mount@plt+0x5750>
   17610:	mov	r3, r5
   17614:	ldr	r0, [fp, r1]
   17618:	add	r2, pc, r2
   1761c:	mov	r1, #1
   17620:	ldr	r0, [r0]
   17624:	bl	11da0 <__fprintf_chk@plt>
   17628:	b	17564 <mount@plt+0x5608>
   1762c:	ldr	r1, [pc, #116]	; 176a8 <mount@plt+0x574c>
   17630:	ldr	r2, [pc, #120]	; 176b0 <mount@plt+0x5754>
   17634:	mov	r3, r5
   17638:	ldr	r0, [fp, r1]
   1763c:	add	r2, pc, r2
   17640:	mov	r1, #1
   17644:	ldr	r0, [r0]
   17648:	bl	11da0 <__fprintf_chk@plt>
   1764c:	mvn	r0, #0
   17650:	b	17568 <mount@plt+0x560c>
   17654:	ldr	r3, [sp, #20]
   17658:	mov	r0, #4
   1765c:	str	r3, [r7]
   17660:	b	17568 <mount@plt+0x560c>
   17664:	ldr	r2, [pc, #60]	; 176a8 <mount@plt+0x574c>
   17668:	mov	r1, r0
   1766c:	mov	r3, r5
   17670:	ldr	r0, [fp, r2]
   17674:	ldr	r2, [pc, #56]	; 176b4 <mount@plt+0x5758>
   17678:	ldr	r0, [r0]
   1767c:	add	r2, pc, r2
   17680:	bl	11da0 <__fprintf_chk@plt>
   17684:	b	17564 <mount@plt+0x5608>
   17688:	add	r0, r0, #1
   1768c:	b	17568 <mount@plt+0x560c>
   17690:	mov	r0, #1
   17694:	b	17568 <mount@plt+0x560c>
   17698:	bl	11ac4 <__stack_chk_fail@plt>
   1769c:	andeq	r6, r1, r8, ror #21
   176a0:	andeq	r0, r0, r0, lsl #4
   176a4:	andeq	r5, r0, r4, lsr ip
   176a8:	andeq	r0, r0, ip, lsl #4
   176ac:	andeq	r5, r0, r0, lsr #23
   176b0:	andeq	r5, r0, ip, ror fp
   176b4:	andeq	r5, r0, ip, lsr fp
   176b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176bc:	sub	sp, sp, #12672	; 0x3180
   176c0:	ldr	r5, [pc, #1028]	; 17acc <mount@plt+0x5b70>
   176c4:	ldr	r3, [pc, #1028]	; 17ad0 <mount@plt+0x5b74>
   176c8:	add	r5, pc, r5
   176cc:	sub	sp, sp, #20
   176d0:	ldr	r3, [r5, r3]
   176d4:	add	lr, sp, #12672	; 0x3180
   176d8:	ldr	r1, [pc, #1012]	; 17ad4 <mount@plt+0x5b78>
   176dc:	ldr	r2, [pc, #1012]	; 17ad8 <mount@plt+0x5b7c>
   176e0:	ldr	ip, [r3]
   176e4:	add	lr, lr, #12
   176e8:	add	r6, sp, #400	; 0x190
   176ec:	sub	r7, r6, #4
   176f0:	add	r1, pc, r1
   176f4:	str	r3, [sp, #20]
   176f8:	add	r2, pc, r2
   176fc:	mov	r3, #4096	; 0x1000
   17700:	str	r0, [sp, #8]
   17704:	str	r1, [sp, #4]
   17708:	str	r2, [sp]
   1770c:	mov	r1, r3
   17710:	mov	r2, #1
   17714:	str	ip, [lr]
   17718:	mov	r4, r0
   1771c:	mov	r0, r7
   17720:	bl	11f38 <__snprintf_chk@plt>
   17724:	mov	r0, r7
   17728:	mov	r1, #524288	; 0x80000
   1772c:	bl	11c14 <open64@plt>
   17730:	subs	r7, r0, #0
   17734:	blt	179d8 <mount@plt+0x5a7c>
   17738:	mov	r1, #1073741824	; 0x40000000
   1773c:	bl	11b00 <setns@plt>
   17740:	cmp	r0, #0
   17744:	blt	17a14 <mount@plt+0x5ab8>
   17748:	mov	r0, r7
   1774c:	bl	11f08 <close@plt>
   17750:	mov	r0, #131072	; 0x20000
   17754:	bl	11a28 <unshare@plt>
   17758:	cmp	r0, #0
   1775c:	blt	17a58 <mount@plt+0x5afc>
   17760:	ldr	r2, [pc, #884]	; 17adc <mount@plt+0x5b80>
   17764:	ldr	r1, [pc, #884]	; 17ae0 <mount@plt+0x5b84>
   17768:	ldr	r0, [pc, #884]	; 17ae4 <mount@plt+0x5b88>
   1776c:	mov	r3, #0
   17770:	str	r3, [sp]
   17774:	add	r2, pc, r2
   17778:	mov	r3, #540672	; 0x84000
   1777c:	add	r1, pc, r1
   17780:	add	r0, pc, r0
   17784:	bl	11f5c <mount@plt>
   17788:	subs	r9, r0, #0
   1778c:	bne	179a0 <mount@plt+0x5a44>
   17790:	ldr	r7, [pc, #848]	; 17ae8 <mount@plt+0x5b8c>
   17794:	mov	r1, #2
   17798:	add	r7, pc, r7
   1779c:	mov	r0, r7
   177a0:	bl	11bfc <umount2@plt>
   177a4:	cmp	r0, #0
   177a8:	blt	17980 <mount@plt+0x5a24>
   177ac:	mov	r3, #0
   177b0:	mov	r2, #0
   177b4:	str	r2, [sp]
   177b8:	ldr	r1, [pc, #812]	; 17aec <mount@plt+0x5b90>
   177bc:	ldr	r2, [pc, #812]	; 17af0 <mount@plt+0x5b94>
   177c0:	add	r1, pc, r1
   177c4:	add	r2, pc, r2
   177c8:	mov	r0, r4
   177cc:	bl	11f5c <mount@plt>
   177d0:	cmp	r0, #0
   177d4:	blt	17a90 <mount@plt+0x5b34>
   177d8:	mov	r0, r4
   177dc:	bl	11cd4 <strlen@plt>
   177e0:	cmp	r0, #254	; 0xfe
   177e4:	bls	17814 <mount@plt+0x58b8>
   177e8:	add	r3, sp, #12672	; 0x3180
   177ec:	add	r3, r3, #12
   177f0:	ldr	r2, [r3]
   177f4:	ldr	r3, [sp, #20]
   177f8:	mov	r0, r9
   177fc:	ldr	r3, [r3]
   17800:	cmp	r2, r3
   17804:	bne	17ac8 <mount@plt+0x5b6c>
   17808:	add	sp, sp, #12672	; 0x3180
   1780c:	add	sp, sp, #20
   17810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17814:	ldr	r1, [pc, #728]	; 17af4 <mount@plt+0x5b98>
   17818:	ldr	r2, [pc, #728]	; 17af8 <mount@plt+0x5b9c>
   1781c:	ldr	r3, [pc, #728]	; 17afc <mount@plt+0x5ba0>
   17820:	add	r1, pc, r1
   17824:	add	r2, pc, r2
   17828:	add	r8, sp, #128	; 0x80
   1782c:	stmib	sp, {r1, r4}
   17830:	str	r2, [sp]
   17834:	mov	r1, r3
   17838:	mov	r2, #1
   1783c:	mov	r0, r8
   17840:	bl	11f38 <__snprintf_chk@plt>
   17844:	mov	r0, r8
   17848:	bl	11bf0 <opendir@plt>
   1784c:	subs	sl, r0, #0
   17850:	beq	177e8 <mount@plt+0x588c>
   17854:	ldr	r3, [pc, #676]	; 17b00 <mount@plt+0x5ba4>
   17858:	ldr	fp, [pc, #676]	; 17b04 <mount@plt+0x5ba8>
   1785c:	add	r3, pc, r3
   17860:	str	r3, [sp, #24]
   17864:	ldr	r3, [pc, #668]	; 17b08 <mount@plt+0x5bac>
   17868:	add	fp, pc, fp
   1786c:	add	r3, pc, r3
   17870:	str	r3, [sp, #28]
   17874:	mov	r0, sl
   17878:	bl	11e48 <readdir64@plt>
   1787c:	cmp	r0, #0
   17880:	beq	17974 <mount@plt+0x5a18>
   17884:	add	r4, r0, #19
   17888:	mov	r0, r4
   1788c:	mov	r1, fp
   17890:	bl	119bc <strcmp@plt>
   17894:	cmp	r0, #0
   17898:	beq	17874 <mount@plt+0x5918>
   1789c:	ldr	r1, [sp, #24]
   178a0:	mov	r0, r4
   178a4:	bl	119bc <strcmp@plt>
   178a8:	cmp	r0, #0
   178ac:	beq	17874 <mount@plt+0x5918>
   178b0:	ldr	r2, [sp, #28]
   178b4:	add	r6, sp, #4480	; 0x1180
   178b8:	mov	r3, #4096	; 0x1000
   178bc:	add	r6, r6, #12
   178c0:	mov	r1, r3
   178c4:	str	r2, [sp]
   178c8:	str	r4, [sp, #8]
   178cc:	mov	r2, #1
   178d0:	str	r8, [sp, #4]
   178d4:	mov	r0, r6
   178d8:	bl	11f38 <__snprintf_chk@plt>
   178dc:	ldr	r2, [pc, #552]	; 17b0c <mount@plt+0x5bb0>
   178e0:	add	r7, sp, #8576	; 0x2180
   178e4:	add	r2, pc, r2
   178e8:	mov	r3, #4096	; 0x1000
   178ec:	add	r7, r7, #12
   178f0:	mov	r1, r3
   178f4:	stm	sp, {r2, r4}
   178f8:	mov	r0, r7
   178fc:	mov	r2, #1
   17900:	bl	11f38 <__snprintf_chk@plt>
   17904:	ldr	r2, [pc, #516]	; 17b10 <mount@plt+0x5bb4>
   17908:	mov	r3, #0
   1790c:	str	r3, [sp]
   17910:	mov	r1, r7
   17914:	mov	r0, r6
   17918:	mov	r3, #4096	; 0x1000
   1791c:	add	r2, pc, r2
   17920:	bl	11f5c <mount@plt>
   17924:	cmp	r0, #0
   17928:	bge	17874 <mount@plt+0x5918>
   1792c:	ldr	r3, [pc, #480]	; 17b14 <mount@plt+0x5bb8>
   17930:	ldr	r3, [r5, r3]
   17934:	ldr	r4, [r3]
   17938:	bl	11cec <__errno_location@plt>
   1793c:	ldr	r0, [r0]
   17940:	bl	11c50 <strerror@plt>
   17944:	ldr	r2, [pc, #460]	; 17b18 <mount@plt+0x5bbc>
   17948:	mov	r3, r6
   1794c:	add	r2, pc, r2
   17950:	mov	r1, #1
   17954:	str	r7, [sp]
   17958:	str	r0, [sp, #4]
   1795c:	mov	r0, r4
   17960:	bl	11da0 <__fprintf_chk@plt>
   17964:	mov	r0, sl
   17968:	bl	11e48 <readdir64@plt>
   1796c:	cmp	r0, #0
   17970:	bne	17884 <mount@plt+0x5928>
   17974:	mov	r0, sl
   17978:	bl	11f2c <closedir@plt>
   1797c:	b	177e8 <mount@plt+0x588c>
   17980:	mov	r0, r7
   17984:	add	r1, sp, #32
   17988:	bl	11d7c <statvfs64@plt>
   1798c:	cmp	r0, #0
   17990:	bne	177ac <mount@plt+0x5850>
   17994:	ldr	r3, [r6, #-304]	; 0xfffffed0
   17998:	and	r3, r3, #1
   1799c:	b	177b0 <mount@plt+0x5854>
   179a0:	ldr	r3, [pc, #364]	; 17b14 <mount@plt+0x5bb8>
   179a4:	mvn	r9, #0
   179a8:	ldr	r3, [r5, r3]
   179ac:	ldr	r4, [r3]
   179b0:	bl	11cec <__errno_location@plt>
   179b4:	ldr	r0, [r0]
   179b8:	bl	11c50 <strerror@plt>
   179bc:	ldr	r2, [pc, #344]	; 17b1c <mount@plt+0x5bc0>
   179c0:	mov	r1, #1
   179c4:	add	r2, pc, r2
   179c8:	mov	r3, r0
   179cc:	mov	r0, r4
   179d0:	bl	11da0 <__fprintf_chk@plt>
   179d4:	b	177e8 <mount@plt+0x588c>
   179d8:	ldr	r3, [pc, #308]	; 17b14 <mount@plt+0x5bb8>
   179dc:	mvn	r9, #0
   179e0:	ldr	r3, [r5, r3]
   179e4:	ldr	r5, [r3]
   179e8:	bl	11cec <__errno_location@plt>
   179ec:	ldr	r0, [r0]
   179f0:	bl	11c50 <strerror@plt>
   179f4:	ldr	r2, [pc, #292]	; 17b20 <mount@plt+0x5bc4>
   179f8:	mov	r3, r4
   179fc:	add	r2, pc, r2
   17a00:	mov	r1, #1
   17a04:	str	r0, [sp]
   17a08:	mov	r0, r5
   17a0c:	bl	11da0 <__fprintf_chk@plt>
   17a10:	b	177e8 <mount@plt+0x588c>
   17a14:	ldr	r3, [pc, #248]	; 17b14 <mount@plt+0x5bb8>
   17a18:	mvn	r9, #0
   17a1c:	ldr	r3, [r5, r3]
   17a20:	ldr	r5, [r3]
   17a24:	bl	11cec <__errno_location@plt>
   17a28:	ldr	r0, [r0]
   17a2c:	bl	11c50 <strerror@plt>
   17a30:	ldr	r2, [pc, #236]	; 17b24 <mount@plt+0x5bc8>
   17a34:	mov	r3, r4
   17a38:	add	r2, pc, r2
   17a3c:	mov	r1, #1
   17a40:	str	r0, [sp]
   17a44:	mov	r0, r5
   17a48:	bl	11da0 <__fprintf_chk@plt>
   17a4c:	mov	r0, r7
   17a50:	bl	11f08 <close@plt>
   17a54:	b	177e8 <mount@plt+0x588c>
   17a58:	ldr	r3, [pc, #180]	; 17b14 <mount@plt+0x5bb8>
   17a5c:	mvn	r9, #0
   17a60:	ldr	r3, [r5, r3]
   17a64:	ldr	r4, [r3]
   17a68:	bl	11cec <__errno_location@plt>
   17a6c:	ldr	r0, [r0]
   17a70:	bl	11c50 <strerror@plt>
   17a74:	ldr	r2, [pc, #172]	; 17b28 <mount@plt+0x5bcc>
   17a78:	mov	r1, #1
   17a7c:	add	r2, pc, r2
   17a80:	mov	r3, r0
   17a84:	mov	r0, r4
   17a88:	bl	11da0 <__fprintf_chk@plt>
   17a8c:	b	177e8 <mount@plt+0x588c>
   17a90:	ldr	r3, [pc, #124]	; 17b14 <mount@plt+0x5bb8>
   17a94:	mvn	r9, #0
   17a98:	ldr	r3, [r5, r3]
   17a9c:	ldr	r4, [r3]
   17aa0:	bl	11cec <__errno_location@plt>
   17aa4:	ldr	r0, [r0]
   17aa8:	bl	11c50 <strerror@plt>
   17aac:	ldr	r2, [pc, #120]	; 17b2c <mount@plt+0x5bd0>
   17ab0:	mov	r1, #1
   17ab4:	add	r2, pc, r2
   17ab8:	mov	r3, r0
   17abc:	mov	r0, r4
   17ac0:	bl	11da0 <__fprintf_chk@plt>
   17ac4:	b	177e8 <mount@plt+0x588c>
   17ac8:	bl	11ac4 <__stack_chk_fail@plt>
   17acc:	andeq	r6, r1, r0, lsr r9
   17ad0:	andeq	r0, r0, r0, lsl #4
   17ad4:	andeq	r5, r0, r8, ror #21
   17ad8:	andeq	r4, r0, ip, lsl #30
   17adc:	andeq	r5, r0, r0, ror #21
   17ae0:	andeq	r5, r0, r0, ror #21
   17ae4:			; <UNDEFINED> instruction: 0x00005eb8
   17ae8:	andeq	r5, r0, ip, ror #21
   17aec:	andeq	r5, r0, r4, asr #21
   17af0:	andeq	r5, r0, r8, asr #21
   17af4:	muleq	r0, r0, sl
   17af8:	andeq	r4, r0, r0, ror #27
   17afc:	andeq	r0, r0, sl, lsl #2
   17b00:	andeq	r5, r0, r4, ror #20
   17b04:	andeq	r5, r0, r4, asr sl
   17b08:	muleq	r0, r8, sp
   17b0c:	andeq	r5, r0, r0, ror #19
   17b10:	andeq	r5, r0, r8, lsr r9
   17b14:	andeq	r0, r0, ip, lsl #4
   17b18:	andeq	r5, r0, r0, lsl #19
   17b1c:	muleq	r0, ip, r8
   17b20:	andeq	r5, r0, ip, ror #15
   17b24:	ldrdeq	r5, [r0], -r8
   17b28:	andeq	r5, r0, r4, asr #15
   17b2c:	andeq	r5, r0, r0, ror #15
   17b30:	ldr	r3, [pc, #160]	; 17bd8 <mount@plt+0x5c7c>
   17b34:	ldr	r2, [pc, #160]	; 17bdc <mount@plt+0x5c80>
   17b38:	add	r3, pc, r3
   17b3c:	push	{r4, r5, lr}
   17b40:	sub	sp, sp, #4096	; 0x1000
   17b44:	ldr	r4, [r3, r2]
   17b48:	sub	sp, sp, #28
   17b4c:	add	r2, sp, #4096	; 0x1000
   17b50:	add	r2, r2, #20
   17b54:	ldr	r3, [r4]
   17b58:	mov	r1, #47	; 0x2f
   17b5c:	mov	r5, r0
   17b60:	str	r3, [r2]
   17b64:	bl	11ce0 <strchr@plt>
   17b68:	cmp	r0, #0
   17b6c:	beq	17ba0 <mount@plt+0x5c44>
   17b70:	mov	r0, r5
   17b74:	mov	r1, #0
   17b78:	bl	11c14 <open64@plt>
   17b7c:	add	r3, sp, #4096	; 0x1000
   17b80:	add	r3, r3, #20
   17b84:	ldr	r2, [r3]
   17b88:	ldr	r3, [r4]
   17b8c:	cmp	r2, r3
   17b90:	bne	17bd4 <mount@plt+0x5c78>
   17b94:	add	sp, sp, #4096	; 0x1000
   17b98:	add	sp, sp, #28
   17b9c:	pop	{r4, r5, pc}
   17ba0:	ldr	r1, [pc, #56]	; 17be0 <mount@plt+0x5c84>
   17ba4:	ldr	r2, [pc, #56]	; 17be4 <mount@plt+0x5c88>
   17ba8:	add	r1, pc, r1
   17bac:	add	r2, pc, r2
   17bb0:	stmib	sp, {r1, r5}
   17bb4:	mov	r3, #4096	; 0x1000
   17bb8:	add	r5, sp, #20
   17bbc:	str	r2, [sp]
   17bc0:	mov	r0, r5
   17bc4:	mov	r1, r3
   17bc8:	mov	r2, #1
   17bcc:	bl	11f38 <__snprintf_chk@plt>
   17bd0:	b	17b70 <mount@plt+0x5c14>
   17bd4:	bl	11ac4 <__stack_chk_fail@plt>
   17bd8:	andeq	r6, r1, r0, asr #9
   17bdc:	andeq	r0, r0, r0, lsl #4
   17be0:	andeq	r5, r0, r0, lsr r6
   17be4:	andeq	r4, r0, r8, asr sl
   17be8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17bec:	mov	r9, r0
   17bf0:	ldr	r0, [pc, #136]	; 17c80 <mount@plt+0x5d24>
   17bf4:	mov	r8, r1
   17bf8:	add	r0, pc, r0
   17bfc:	bl	11bf0 <opendir@plt>
   17c00:	subs	r5, r0, #0
   17c04:	beq	17c78 <mount@plt+0x5d1c>
   17c08:	ldr	r6, [pc, #116]	; 17c84 <mount@plt+0x5d28>
   17c0c:	ldr	r7, [pc, #116]	; 17c88 <mount@plt+0x5d2c>
   17c10:	add	r6, pc, r6
   17c14:	add	r7, pc, r7
   17c18:	mov	r0, r5
   17c1c:	bl	11e48 <readdir64@plt>
   17c20:	mov	r1, r6
   17c24:	cmp	r0, #0
   17c28:	add	r4, r0, #19
   17c2c:	mov	r0, r4
   17c30:	beq	17c68 <mount@plt+0x5d0c>
   17c34:	bl	119bc <strcmp@plt>
   17c38:	mov	r1, r7
   17c3c:	cmp	r0, #0
   17c40:	mov	r0, r4
   17c44:	beq	17c18 <mount@plt+0x5cbc>
   17c48:	bl	119bc <strcmp@plt>
   17c4c:	mov	r1, r8
   17c50:	cmp	r0, #0
   17c54:	mov	r0, r4
   17c58:	beq	17c18 <mount@plt+0x5cbc>
   17c5c:	blx	r9
   17c60:	cmp	r0, #0
   17c64:	beq	17c18 <mount@plt+0x5cbc>
   17c68:	mov	r0, r5
   17c6c:	bl	11f2c <closedir@plt>
   17c70:	mov	r0, #0
   17c74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c78:	mvn	r0, #0
   17c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c80:	andeq	r5, r0, r0, ror #11
   17c84:	andeq	r5, r0, ip, lsr #13
   17c88:	andeq	r5, r0, ip, lsr #13
   17c8c:	push	{r4, r5, r6, lr}
   17c90:	mov	r4, r0
   17c94:	ldrb	r0, [r0, #9]
   17c98:	mov	r5, r1
   17c9c:	ldr	r1, [r4]
   17ca0:	cmp	r0, #0
   17ca4:	bne	17cd0 <mount@plt+0x5d74>
   17ca8:	mov	r3, #44	; 0x2c
   17cac:	strb	r3, [r4, #9]
   17cb0:	mov	r0, r5
   17cb4:	bl	11e78 <putc@plt>
   17cb8:	ldr	r3, [r4, #4]
   17cbc:	mov	r2, #0
   17cc0:	add	r3, r3, #1
   17cc4:	str	r3, [r4, #4]
   17cc8:	strb	r2, [r4, #9]
   17ccc:	pop	{r4, r5, r6, pc}
   17cd0:	bl	11e78 <putc@plt>
   17cd4:	ldr	r1, [r4]
   17cd8:	b	17ca8 <mount@plt+0x5d4c>
   17cdc:	push	{r4, r5, r6, lr}
   17ce0:	mov	r5, r0
   17ce4:	mov	r0, #10
   17ce8:	ldr	r1, [r5]
   17cec:	bl	11e78 <putc@plt>
   17cf0:	ldr	r3, [r5, #4]
   17cf4:	cmp	r3, #0
   17cf8:	popeq	{r4, r5, r6, pc}
   17cfc:	ldr	r6, [pc, #44]	; 17d30 <mount@plt+0x5dd4>
   17d00:	mov	r4, #0
   17d04:	add	r6, pc, r6
   17d08:	ldr	r3, [r5]
   17d0c:	mov	r2, #4
   17d10:	mov	r1, #1
   17d14:	mov	r0, r6
   17d18:	bl	11b6c <fwrite@plt>
   17d1c:	ldr	r3, [r5, #4]
   17d20:	add	r4, r4, #1
   17d24:	cmp	r4, r3
   17d28:	bcc	17d08 <mount@plt+0x5dac>
   17d2c:	pop	{r4, r5, r6, pc}
   17d30:	andeq	r5, r0, r0, lsl #12
   17d34:	ldr	r3, [pc, #28]	; 17d58 <mount@plt+0x5dfc>
   17d38:	ldr	r1, [pc, #28]	; 17d5c <mount@plt+0x5e00>
   17d3c:	ldr	r0, [pc, #28]	; 17d60 <mount@plt+0x5e04>
   17d40:	push	{r4, lr}
   17d44:	add	r3, pc, r3
   17d48:	mov	r2, #133	; 0x85
   17d4c:	add	r1, pc, r1
   17d50:	add	r0, pc, r0
   17d54:	bl	11f50 <__assert_fail@plt>
   17d58:	andeq	r5, r0, r4, lsr #11
   17d5c:	andeq	r5, r0, r0, asr #11
   17d60:	andeq	r5, r0, ip, asr #11
   17d64:	push	{r4, r5, r6, r7, r8, lr}
   17d68:	mov	r5, r0
   17d6c:	mov	r4, r1
   17d70:	mov	r0, #34	; 0x22
   17d74:	ldr	r1, [r5]
   17d78:	bl	11e78 <putc@plt>
   17d7c:	ldrb	r0, [r4]
   17d80:	cmp	r0, #0
   17d84:	beq	17e0c <mount@plt+0x5eb0>
   17d88:	ldr	r8, [pc, #296]	; 17eb8 <mount@plt+0x5f5c>
   17d8c:	ldr	r6, [pc, #296]	; 17ebc <mount@plt+0x5f60>
   17d90:	ldr	r7, [pc, #296]	; 17ec0 <mount@plt+0x5f64>
   17d94:	add	r8, pc, r8
   17d98:	add	r6, pc, r6
   17d9c:	add	r7, pc, r7
   17da0:	b	17dc8 <mount@plt+0x5e6c>
   17da4:	cmp	r0, #92	; 0x5c
   17da8:	bne	17e54 <mount@plt+0x5ef8>
   17dac:	mov	r2, #2
   17db0:	mov	r1, #1
   17db4:	mov	r0, r6
   17db8:	bl	11b6c <fwrite@plt>
   17dbc:	ldrb	r0, [r4, #1]!
   17dc0:	cmp	r0, #0
   17dc4:	beq	17e0c <mount@plt+0x5eb0>
   17dc8:	cmp	r0, #12
   17dcc:	ldr	r3, [r5]
   17dd0:	beq	17ea4 <mount@plt+0x5f48>
   17dd4:	bls	17e3c <mount@plt+0x5ee0>
   17dd8:	cmp	r0, #34	; 0x22
   17ddc:	beq	17e90 <mount@plt+0x5f34>
   17de0:	bls	17e1c <mount@plt+0x5ec0>
   17de4:	cmp	r0, #39	; 0x27
   17de8:	bne	17da4 <mount@plt+0x5e48>
   17dec:	ldr	r0, [pc, #208]	; 17ec4 <mount@plt+0x5f68>
   17df0:	mov	r2, #2
   17df4:	mov	r1, #1
   17df8:	add	r0, pc, r0
   17dfc:	bl	11b6c <fwrite@plt>
   17e00:	ldrb	r0, [r4, #1]!
   17e04:	cmp	r0, #0
   17e08:	bne	17dc8 <mount@plt+0x5e6c>
   17e0c:	ldr	r1, [r5]
   17e10:	mov	r0, #34	; 0x22
   17e14:	pop	{r4, r5, r6, r7, r8, lr}
   17e18:	b	11e78 <putc@plt>
   17e1c:	cmp	r0, #13
   17e20:	bne	17e54 <mount@plt+0x5ef8>
   17e24:	ldr	r0, [pc, #156]	; 17ec8 <mount@plt+0x5f6c>
   17e28:	mov	r2, #2
   17e2c:	mov	r1, #1
   17e30:	add	r0, pc, r0
   17e34:	bl	11b6c <fwrite@plt>
   17e38:	b	17dbc <mount@plt+0x5e60>
   17e3c:	cmp	r0, #9
   17e40:	beq	17e78 <mount@plt+0x5f1c>
   17e44:	cmp	r0, #10
   17e48:	beq	17dac <mount@plt+0x5e50>
   17e4c:	cmp	r0, #8
   17e50:	beq	17e60 <mount@plt+0x5f04>
   17e54:	mov	r1, r3
   17e58:	bl	11e78 <putc@plt>
   17e5c:	b	17dbc <mount@plt+0x5e60>
   17e60:	ldr	r0, [pc, #100]	; 17ecc <mount@plt+0x5f70>
   17e64:	mov	r2, #2
   17e68:	mov	r1, #1
   17e6c:	add	r0, pc, r0
   17e70:	bl	11b6c <fwrite@plt>
   17e74:	b	17dbc <mount@plt+0x5e60>
   17e78:	ldr	r0, [pc, #80]	; 17ed0 <mount@plt+0x5f74>
   17e7c:	mov	r2, #2
   17e80:	mov	r1, #1
   17e84:	add	r0, pc, r0
   17e88:	bl	11b6c <fwrite@plt>
   17e8c:	b	17dbc <mount@plt+0x5e60>
   17e90:	mov	r2, #2
   17e94:	mov	r1, #1
   17e98:	mov	r0, r7
   17e9c:	bl	11b6c <fwrite@plt>
   17ea0:	b	17dbc <mount@plt+0x5e60>
   17ea4:	mov	r2, #2
   17ea8:	mov	r1, #1
   17eac:	mov	r0, r8
   17eb0:	bl	11b6c <fwrite@plt>
   17eb4:	b	17dbc <mount@plt+0x5e60>
   17eb8:	andeq	r5, r0, r0, lsr #11
   17ebc:	andeq	r5, r0, r4, lsr #11
   17ec0:	andeq	r5, r0, r4, lsr #11
   17ec4:	andeq	r5, r0, ip, asr #10
   17ec8:	andeq	r5, r0, r0, lsl #10
   17ecc:	andeq	r5, r0, ip, asr #9
   17ed0:	andeq	r5, r0, r8, lsr #9
   17ed4:	push	{r4, lr}
   17ed8:	mov	r4, r0
   17edc:	mov	r0, #12
   17ee0:	bl	11c38 <malloc@plt>
   17ee4:	cmp	r0, #0
   17ee8:	movne	r3, #0
   17eec:	strne	r4, [r0]
   17ef0:	strne	r3, [r0, #4]
   17ef4:	strhne	r3, [r0, #8]
   17ef8:	pop	{r4, pc}
   17efc:	push	{r4, r5, r6, lr}
   17f00:	ldr	r4, [r0]
   17f04:	ldr	r6, [r4, #4]
   17f08:	cmp	r6, #0
   17f0c:	bne	17f38 <mount@plt+0x5fdc>
   17f10:	ldr	r1, [r4]
   17f14:	mov	r5, r0
   17f18:	mov	r0, #10
   17f1c:	bl	11e24 <fputc@plt>
   17f20:	ldr	r0, [r4]
   17f24:	bl	119ec <fflush@plt>
   17f28:	mov	r0, r4
   17f2c:	bl	11a1c <free@plt>
   17f30:	str	r6, [r5]
   17f34:	pop	{r4, r5, r6, pc}
   17f38:	ldr	r3, [pc, #28]	; 17f5c <mount@plt+0x6000>
   17f3c:	ldr	r1, [pc, #28]	; 17f60 <mount@plt+0x6004>
   17f40:	ldr	r0, [pc, #28]	; 17f64 <mount@plt+0x6008>
   17f44:	add	r3, pc, r3
   17f48:	mov	r2, #110	; 0x6e
   17f4c:	add	r3, r3, #12
   17f50:	add	r1, pc, r1
   17f54:	add	r0, pc, r0
   17f58:	bl	11f50 <__assert_fail@plt>
   17f5c:	andeq	r5, r0, r4, lsr #7
   17f60:			; <UNDEFINED> instruction: 0x000053bc
   17f64:	strdeq	r5, [r0], -r4
   17f68:	strb	r1, [r0, #8]
   17f6c:	bx	lr
   17f70:	push	{r4, r5, r6, lr}
   17f74:	mov	r4, r0
   17f78:	ldrb	r0, [r0, #9]
   17f7c:	mov	r5, r1
   17f80:	cmp	r0, #0
   17f84:	bne	17fe0 <mount@plt+0x6084>
   17f88:	ldrb	r3, [r4, #8]
   17f8c:	mov	r2, #44	; 0x2c
   17f90:	strb	r2, [r4, #9]
   17f94:	cmp	r3, #0
   17f98:	beq	17fa4 <mount@plt+0x6048>
   17f9c:	mov	r0, r4
   17fa0:	bl	17cdc <mount@plt+0x5d80>
   17fa4:	mov	r3, #0
   17fa8:	strb	r3, [r4, #9]
   17fac:	mov	r1, r5
   17fb0:	mov	r0, r4
   17fb4:	bl	17d64 <mount@plt+0x5e08>
   17fb8:	ldr	r1, [r4]
   17fbc:	mov	r0, #58	; 0x3a
   17fc0:	bl	11e78 <putc@plt>
   17fc4:	ldrb	r3, [r4, #8]
   17fc8:	cmp	r3, #0
   17fcc:	popeq	{r4, r5, r6, pc}
   17fd0:	ldr	r1, [r4]
   17fd4:	mov	r0, #32
   17fd8:	pop	{r4, r5, r6, lr}
   17fdc:	b	11e78 <putc@plt>
   17fe0:	ldr	r1, [r4]
   17fe4:	bl	11e78 <putc@plt>
   17fe8:	b	17f88 <mount@plt+0x602c>
   17fec:	push	{r1, r2, r3}
   17ff0:	ldr	r3, [pc, #136]	; 18080 <mount@plt+0x6124>
   17ff4:	ldr	r2, [pc, #136]	; 18084 <mount@plt+0x6128>
   17ff8:	add	r3, pc, r3
   17ffc:	push	{r4, r5, r6, lr}
   18000:	sub	sp, sp, #12
   18004:	ldr	r5, [r3, r2]
   18008:	ldrb	ip, [r0, #9]
   1800c:	add	r1, sp, #32
   18010:	ldr	r3, [r5]
   18014:	cmp	ip, #0
   18018:	mov	r4, r0
   1801c:	str	r1, [sp]
   18020:	str	r3, [sp, #4]
   18024:	ldr	r0, [r0]
   18028:	ldr	r6, [sp, #28]
   1802c:	bne	18068 <mount@plt+0x610c>
   18030:	mov	r3, #44	; 0x2c
   18034:	mov	r2, r6
   18038:	strb	r3, [r4, #9]
   1803c:	mov	r1, #1
   18040:	ldr	r3, [sp]
   18044:	bl	11c68 <__vfprintf_chk@plt>
   18048:	ldr	r2, [sp, #4]
   1804c:	ldr	r3, [r5]
   18050:	cmp	r2, r3
   18054:	bne	1807c <mount@plt+0x6120>
   18058:	add	sp, sp, #12
   1805c:	pop	{r4, r5, r6, lr}
   18060:	add	sp, sp, #12
   18064:	bx	lr
   18068:	mov	r1, r0
   1806c:	mov	r0, ip
   18070:	bl	11e78 <putc@plt>
   18074:	ldr	r0, [r4]
   18078:	b	18030 <mount@plt+0x60d4>
   1807c:	bl	11ac4 <__stack_chk_fail@plt>
   18080:	andeq	r6, r1, r0
   18084:	andeq	r0, r0, r0, lsl #4
   18088:	mov	r1, #123	; 0x7b
   1808c:	b	17c8c <mount@plt+0x5d30>
   18090:	ldr	r3, [r0, #4]
   18094:	push	{r4, lr}
   18098:	cmp	r3, #0
   1809c:	beq	180e0 <mount@plt+0x6184>
   180a0:	ldrb	r2, [r0, #9]
   180a4:	sub	r3, r3, #1
   180a8:	mov	r4, r0
   180ac:	cmp	r2, #0
   180b0:	str	r3, [r0, #4]
   180b4:	beq	180c8 <mount@plt+0x616c>
   180b8:	ldrb	r3, [r0, #8]
   180bc:	cmp	r3, #0
   180c0:	beq	180c8 <mount@plt+0x616c>
   180c4:	bl	17cdc <mount@plt+0x5d80>
   180c8:	ldr	r1, [r4]
   180cc:	mov	r0, #125	; 0x7d
   180d0:	bl	11e78 <putc@plt>
   180d4:	mov	r3, #44	; 0x2c
   180d8:	strb	r3, [r4, #9]
   180dc:	pop	{r4, pc}
   180e0:	bl	17d34 <mount@plt+0x5dd8>
   180e4:	push	{r4, lr}
   180e8:	mov	r4, r0
   180ec:	mov	r1, #91	; 0x5b
   180f0:	bl	17c8c <mount@plt+0x5d30>
   180f4:	ldrb	r3, [r4, #8]
   180f8:	cmp	r3, #0
   180fc:	popeq	{r4, pc}
   18100:	ldr	r1, [r4]
   18104:	mov	r0, #32
   18108:	pop	{r4, lr}
   1810c:	b	11e78 <putc@plt>
   18110:	ldrb	r3, [r0, #8]
   18114:	push	{r4, lr}
   18118:	mov	r4, r0
   1811c:	cmp	r3, #0
   18120:	beq	18130 <mount@plt+0x61d4>
   18124:	ldrb	r3, [r0, #9]
   18128:	cmp	r3, #0
   1812c:	bne	18164 <mount@plt+0x6208>
   18130:	ldr	r3, [r4, #4]
   18134:	mov	r2, #0
   18138:	cmp	r3, r2
   1813c:	strb	r2, [r4, #9]
   18140:	beq	18174 <mount@plt+0x6218>
   18144:	sub	r3, r3, #1
   18148:	str	r3, [r4, #4]
   1814c:	ldr	r1, [r4]
   18150:	mov	r0, #93	; 0x5d
   18154:	bl	11e78 <putc@plt>
   18158:	mov	r3, #44	; 0x2c
   1815c:	strb	r3, [r4, #9]
   18160:	pop	{r4, pc}
   18164:	ldr	r1, [r0]
   18168:	mov	r0, #32
   1816c:	bl	11e78 <putc@plt>
   18170:	b	18130 <mount@plt+0x61d4>
   18174:	bl	17d34 <mount@plt+0x5dd8>
   18178:	push	{r4, r5, r6, lr}
   1817c:	mov	r4, r0
   18180:	ldrb	r0, [r0, #9]
   18184:	mov	r5, r1
   18188:	cmp	r0, #0
   1818c:	bne	181a8 <mount@plt+0x624c>
   18190:	mov	r3, #44	; 0x2c
   18194:	mov	r1, r5
   18198:	strb	r3, [r4, #9]
   1819c:	mov	r0, r4
   181a0:	pop	{r4, r5, r6, lr}
   181a4:	b	17d64 <mount@plt+0x5e08>
   181a8:	ldr	r1, [r4]
   181ac:	bl	11e78 <putc@plt>
   181b0:	b	18190 <mount@plt+0x6234>
   181b4:	cmp	r1, #0
   181b8:	bne	181d0 <mount@plt+0x6274>
   181bc:	ldr	r2, [pc, #24]	; 181dc <mount@plt+0x6280>
   181c0:	add	r2, pc, r2
   181c4:	ldr	r1, [pc, #20]	; 181e0 <mount@plt+0x6284>
   181c8:	add	r1, pc, r1
   181cc:	b	17fec <mount@plt+0x6090>
   181d0:	ldr	r2, [pc, #12]	; 181e4 <mount@plt+0x6288>
   181d4:	add	r2, pc, r2
   181d8:	b	181c4 <mount@plt+0x6268>
   181dc:	andeq	r5, r0, r4, lsr #3
   181e0:			; <UNDEFINED> instruction: 0x000053bc
   181e4:	andeq	r5, r0, r8, lsl #3
   181e8:	ldr	r1, [pc, #4]	; 181f4 <mount@plt+0x6298>
   181ec:	add	r1, pc, r1
   181f0:	b	17fec <mount@plt+0x6090>
   181f4:	andeq	r5, r0, r0, lsl #3
   181f8:	ldr	r1, [pc, #8]	; 18208 <mount@plt+0x62ac>
   181fc:	vmov	r2, r3, d0
   18200:	add	r1, pc, r1
   18204:	b	17fec <mount@plt+0x6090>
   18208:	andeq	r5, r0, r4, ror r1
   1820c:	mov	r2, r1
   18210:	ldr	r1, [pc, #4]	; 1821c <mount@plt+0x62c0>
   18214:	add	r1, pc, r1
   18218:	b	17fec <mount@plt+0x6090>
   1821c:	andeq	r5, r0, r4, ror #2
   18220:	mov	r2, r1
   18224:	ldr	r1, [pc, #4]	; 18230 <mount@plt+0x62d4>
   18228:	add	r1, pc, r1
   1822c:	b	17fec <mount@plt+0x6090>
   18230:	andeq	r5, r0, r4, asr r1
   18234:	ldr	r1, [pc, #4]	; 18240 <mount@plt+0x62e4>
   18238:	add	r1, pc, r1
   1823c:	b	17fec <mount@plt+0x6090>
   18240:	andeq	r4, r0, r4, lsl r4
   18244:	ldr	r1, [pc, #4]	; 18250 <mount@plt+0x62f4>
   18248:	add	r1, pc, r1
   1824c:	b	17fec <mount@plt+0x6090>
   18250:	andeq	r5, r0, r8, lsr r1
   18254:	mov	r2, r1
   18258:	ldr	r1, [pc, #4]	; 18264 <mount@plt+0x6308>
   1825c:	add	r1, pc, r1
   18260:	b	17fec <mount@plt+0x6090>
   18264:	andeq	r5, r0, ip, lsr #2
   18268:	b	18234 <mount@plt+0x62d8>
   1826c:	mov	r2, r1
   18270:	ldr	r1, [pc, #4]	; 1827c <mount@plt+0x6320>
   18274:	add	r1, pc, r1
   18278:	b	17fec <mount@plt+0x6090>
   1827c:	andeq	r4, r0, r4, asr #8
   18280:	ldr	r1, [pc, #4]	; 1828c <mount@plt+0x6330>
   18284:	add	r1, pc, r1
   18288:	b	17fec <mount@plt+0x6090>
   1828c:	andeq	r5, r0, r8, lsl #2
   18290:	push	{r4, r5, r6, lr}
   18294:	mov	r5, r2
   18298:	mov	r4, r0
   1829c:	bl	17f70 <mount@plt+0x6014>
   182a0:	mov	r1, r5
   182a4:	mov	r0, r4
   182a8:	pop	{r4, r5, r6, lr}
   182ac:	b	18178 <mount@plt+0x621c>
   182b0:	push	{r4, r5, r6, lr}
   182b4:	mov	r5, r2
   182b8:	mov	r4, r0
   182bc:	bl	17f70 <mount@plt+0x6014>
   182c0:	mov	r1, r5
   182c4:	mov	r0, r4
   182c8:	pop	{r4, r5, r6, lr}
   182cc:	b	181b4 <mount@plt+0x6258>
   182d0:	push	{r4, lr}
   182d4:	vpush	{d8}
   182d8:	vmov.f64	d8, d0
   182dc:	mov	r4, r0
   182e0:	bl	17f70 <mount@plt+0x6014>
   182e4:	mov	r0, r4
   182e8:	vmov.f64	d0, d8
   182ec:	vpop	{d8}
   182f0:	pop	{r4, lr}
   182f4:	b	181f8 <mount@plt+0x629c>
   182f8:	push	{r4, r5, r6, lr}
   182fc:	mov	r5, r2
   18300:	mov	r4, r0
   18304:	bl	17f70 <mount@plt+0x6014>
   18308:	mov	r1, r5
   1830c:	mov	r0, r4
   18310:	pop	{r4, r5, r6, lr}
   18314:	b	18220 <mount@plt+0x62c4>
   18318:	push	{r4, r6, r7, lr}
   1831c:	mov	r6, r2
   18320:	mov	r7, r3
   18324:	mov	r4, r0
   18328:	bl	17f70 <mount@plt+0x6014>
   1832c:	mov	r2, r6
   18330:	mov	r3, r7
   18334:	mov	r0, r4
   18338:	pop	{r4, r6, r7, lr}
   1833c:	b	18234 <mount@plt+0x62d8>
   18340:	push	{r4, r6, r7, lr}
   18344:	mov	r6, r2
   18348:	mov	r7, r3
   1834c:	mov	r4, r0
   18350:	bl	17f70 <mount@plt+0x6014>
   18354:	mov	r2, r6
   18358:	mov	r3, r7
   1835c:	mov	r0, r4
   18360:	pop	{r4, r6, r7, lr}
   18364:	b	18244 <mount@plt+0x62e8>
   18368:	push	{r4, r5, r6, lr}
   1836c:	mov	r5, r2
   18370:	mov	r4, r0
   18374:	bl	17f70 <mount@plt+0x6014>
   18378:	mov	r1, r5
   1837c:	mov	r0, r4
   18380:	pop	{r4, r5, r6, lr}
   18384:	b	1820c <mount@plt+0x62b0>
   18388:	push	{r4, r5, r6, lr}
   1838c:	mov	r5, r2
   18390:	mov	r4, r0
   18394:	bl	17f70 <mount@plt+0x6014>
   18398:	mov	r1, r5
   1839c:	mov	r0, r4
   183a0:	pop	{r4, r5, r6, lr}
   183a4:	b	18254 <mount@plt+0x62f8>
   183a8:	push	{r4, r6, r7, lr}
   183ac:	mov	r6, r2
   183b0:	mov	r7, r3
   183b4:	mov	r4, r0
   183b8:	bl	17f70 <mount@plt+0x6014>
   183bc:	mov	r2, r6
   183c0:	mov	r3, r7
   183c4:	mov	r0, r4
   183c8:	pop	{r4, r6, r7, lr}
   183cc:	b	18268 <mount@plt+0x630c>
   183d0:	push	{r4, r5, r6, lr}
   183d4:	mov	r5, r2
   183d8:	mov	r4, r0
   183dc:	bl	17f70 <mount@plt+0x6014>
   183e0:	mov	r1, r5
   183e4:	mov	r0, r4
   183e8:	pop	{r4, r5, r6, lr}
   183ec:	b	1826c <mount@plt+0x6310>
   183f0:	push	{r4, r6, r7, lr}
   183f4:	mov	r6, r2
   183f8:	mov	r7, r3
   183fc:	mov	r4, r0
   18400:	bl	17f70 <mount@plt+0x6014>
   18404:	mov	r2, r6
   18408:	mov	r3, r7
   1840c:	mov	r0, r4
   18410:	pop	{r4, r6, r7, lr}
   18414:	b	18280 <mount@plt+0x6324>
   18418:	push	{r4, lr}
   1841c:	mov	r4, r0
   18420:	bl	17f70 <mount@plt+0x6014>
   18424:	mov	r0, r4
   18428:	pop	{r4, lr}
   1842c:	b	181e8 <mount@plt+0x628c>
   18430:	push	{r4, r5, r6, lr}
   18434:	cmp	r0, #0
   18438:	ldr	r4, [pc, #120]	; 184b8 <mount@plt+0x655c>
   1843c:	add	r4, pc, r4
   18440:	popeq	{r4, r5, r6, pc}
   18444:	ldr	r3, [pc, #112]	; 184bc <mount@plt+0x6560>
   18448:	ldr	r5, [pc, #112]	; 184c0 <mount@plt+0x6564>
   1844c:	ldr	r3, [r4, r3]
   18450:	add	r5, pc, r5
   18454:	ldr	r0, [r3]
   18458:	bl	17ed4 <mount@plt+0x5f78>
   1845c:	cmp	r0, #0
   18460:	mov	r3, r0
   18464:	str	r0, [r5]
   18468:	beq	184a4 <mount@plt+0x6548>
   1846c:	ldr	r2, [pc, #80]	; 184c4 <mount@plt+0x6568>
   18470:	ldr	r2, [r4, r2]
   18474:	ldr	r2, [r2]
   18478:	cmp	r2, #0
   1847c:	bne	1848c <mount@plt+0x6530>
   18480:	mov	r0, r3
   18484:	pop	{r4, r5, r6, lr}
   18488:	b	180e4 <mount@plt+0x6188>
   1848c:	mov	r1, #1
   18490:	bl	17f68 <mount@plt+0x600c>
   18494:	ldr	r3, [r5]
   18498:	pop	{r4, r5, r6, lr}
   1849c:	mov	r0, r3
   184a0:	b	180e4 <mount@plt+0x6188>
   184a4:	ldr	r0, [pc, #28]	; 184c8 <mount@plt+0x656c>
   184a8:	add	r0, pc, r0
   184ac:	bl	11b24 <perror@plt>
   184b0:	mov	r0, #1
   184b4:	bl	11cb0 <exit@plt>
   184b8:			; <UNDEFINED> instruction: 0x00015bbc
   184bc:	andeq	r0, r0, r0, lsr #4
   184c0:	andeq	r8, r1, r0, lsr r4
   184c4:	andeq	r0, r0, r4, lsr #4
   184c8:	andeq	r4, r0, ip, ror #29
   184cc:	push	{r4, lr}
   184d0:	ldr	r4, [pc, #28]	; 184f4 <mount@plt+0x6598>
   184d4:	add	r4, pc, r4
   184d8:	ldr	r0, [r4]
   184dc:	cmp	r0, #0
   184e0:	popeq	{r4, pc}
   184e4:	bl	18110 <mount@plt+0x61b4>
   184e8:	mov	r0, r4
   184ec:	pop	{r4, lr}
   184f0:	b	17efc <mount@plt+0x5fa0>
   184f4:	andeq	r8, r1, ip, lsr #7
   184f8:	ldr	r3, [pc, #12]	; 1850c <mount@plt+0x65b0>
   184fc:	ldr	r0, [pc, r3]
   18500:	adds	r0, r0, #0
   18504:	movne	r0, #1
   18508:	bx	lr
   1850c:	andeq	r8, r1, r4, lsl #7
   18510:	ldr	r3, [pc, #4]	; 1851c <mount@plt+0x65c0>
   18514:	ldr	r0, [pc, r3]
   18518:	bx	lr
   1851c:	andeq	r8, r1, ip, ror #6
   18520:	push	{r4, lr}
   18524:	mov	r1, r0
   18528:	ldr	r4, [pc, #36]	; 18554 <mount@plt+0x65f8>
   1852c:	add	r4, pc, r4
   18530:	ldr	r0, [r4]
   18534:	cmp	r0, #0
   18538:	popeq	{r4, pc}
   1853c:	cmp	r1, #0
   18540:	beq	1854c <mount@plt+0x65f0>
   18544:	bl	17f70 <mount@plt+0x6014>
   18548:	ldr	r0, [r4]
   1854c:	pop	{r4, lr}
   18550:	b	18088 <mount@plt+0x612c>
   18554:	andeq	r8, r1, r4, asr r3
   18558:	ldr	r3, [pc, #12]	; 1856c <mount@plt+0x6610>
   1855c:	ldr	r0, [pc, r3]
   18560:	cmp	r0, #0
   18564:	bxeq	lr
   18568:	b	18090 <mount@plt+0x6134>
   1856c:	andeq	r8, r1, r4, lsr #6
   18570:	push	{r4, lr}
   18574:	tst	r0, #6
   18578:	ldr	r4, [pc, #88]	; 185d8 <mount@plt+0x667c>
   1857c:	mov	r2, r1
   18580:	add	r4, pc, r4
   18584:	ldr	r3, [r4]
   18588:	beq	185b4 <mount@plt+0x6658>
   1858c:	cmp	r3, #0
   18590:	beq	185bc <mount@plt+0x6660>
   18594:	cmp	r1, #0
   18598:	beq	185a8 <mount@plt+0x664c>
   1859c:	mov	r0, r3
   185a0:	bl	17f70 <mount@plt+0x6014>
   185a4:	ldr	r3, [r4]
   185a8:	mov	r0, r3
   185ac:	pop	{r4, lr}
   185b0:	b	180e4 <mount@plt+0x6188>
   185b4:	cmp	r3, #0
   185b8:	popne	{r4, pc}
   185bc:	tst	r0, #5
   185c0:	popeq	{r4, pc}
   185c4:	ldr	r1, [pc, #16]	; 185dc <mount@plt+0x6680>
   185c8:	mov	r0, #1
   185cc:	add	r1, pc, r1
   185d0:	pop	{r4, lr}
   185d4:	b	11d70 <__printf_chk@plt>
   185d8:	andeq	r8, r1, r0, lsl #6
   185dc:			; <UNDEFINED> instruction: 0x00004fb8
   185e0:	ldr	r3, [pc, #64]	; 18628 <mount@plt+0x66cc>
   185e4:	tst	r0, #6
   185e8:	add	r3, pc, r3
   185ec:	ldr	r3, [r3]
   185f0:	beq	18604 <mount@plt+0x66a8>
   185f4:	cmp	r3, #0
   185f8:	beq	1860c <mount@plt+0x66b0>
   185fc:	mov	r0, r3
   18600:	b	18110 <mount@plt+0x61b4>
   18604:	cmp	r3, #0
   18608:	bxne	lr
   1860c:	tst	r0, #5
   18610:	bxeq	lr
   18614:	mov	r2, r1
   18618:	ldr	r1, [pc, #12]	; 1862c <mount@plt+0x66d0>
   1861c:	mov	r0, #1
   18620:	add	r1, pc, r1
   18624:	b	11d70 <__printf_chk@plt>
   18628:	muleq	r1, r8, r2
   1862c:	andeq	r4, r0, r4, ror #30
   18630:	ldr	ip, [pc, #128]	; 186b8 <mount@plt+0x675c>
   18634:	push	{r4, r5, lr}
   18638:	add	ip, pc, ip
   1863c:	ldr	lr, [pc, #120]	; 186bc <mount@plt+0x6760>
   18640:	tst	r0, #6
   18644:	mov	r4, r2
   18648:	mov	r5, r3
   1864c:	ldr	ip, [ip]
   18650:	add	lr, pc, lr
   18654:	ldr	r2, [sp, #12]
   18658:	beq	1867c <mount@plt+0x6720>
   1865c:	cmp	ip, #0
   18660:	beq	18684 <mount@plt+0x6728>
   18664:	cmp	r4, #0
   18668:	beq	186a8 <mount@plt+0x674c>
   1866c:	mov	r1, r4
   18670:	mov	r0, ip
   18674:	pop	{r4, r5, lr}
   18678:	b	183d0 <mount@plt+0x6474>
   1867c:	cmp	ip, #0
   18680:	popne	{r4, r5, pc}
   18684:	tst	r0, #5
   18688:	popeq	{r4, r5, pc}
   1868c:	ldr	r0, [pc, #44]	; 186c0 <mount@plt+0x6764>
   18690:	mov	r3, r2
   18694:	mov	r2, r5
   18698:	ldr	r0, [lr, r0]
   1869c:	pop	{r4, r5, lr}
   186a0:	ldr	r0, [r0]
   186a4:	b	19108 <mount@plt+0x71ac>
   186a8:	mov	r1, r2
   186ac:	mov	r0, ip
   186b0:	pop	{r4, r5, lr}
   186b4:	b	1826c <mount@plt+0x6310>
   186b8:	andeq	r8, r1, r8, asr #4
   186bc:	andeq	r5, r1, r8, lsr #19
   186c0:	andeq	r0, r0, r0, lsr #4
   186c4:	ldr	ip, [pc, #128]	; 1874c <mount@plt+0x67f0>
   186c8:	push	{r4, r6, r7, lr}
   186cc:	add	ip, pc, ip
   186d0:	ldr	lr, [pc, #120]	; 18750 <mount@plt+0x67f4>
   186d4:	tst	r0, #6
   186d8:	ldr	ip, [ip]
   186dc:	add	lr, pc, lr
   186e0:	ldrd	r6, [sp, #16]
   186e4:	beq	18714 <mount@plt+0x67b8>
   186e8:	cmp	ip, #0
   186ec:	beq	1871c <mount@plt+0x67c0>
   186f0:	mov	r4, r2
   186f4:	cmp	r4, #0
   186f8:	mov	r2, r6
   186fc:	mov	r3, r7
   18700:	beq	18740 <mount@plt+0x67e4>
   18704:	mov	r1, r4
   18708:	mov	r0, ip
   1870c:	pop	{r4, r6, r7, lr}
   18710:	b	183f0 <mount@plt+0x6494>
   18714:	cmp	ip, #0
   18718:	popne	{r4, r6, r7, pc}
   1871c:	tst	r0, #5
   18720:	popeq	{r4, r6, r7, pc}
   18724:	ldr	r0, [pc, #40]	; 18754 <mount@plt+0x67f8>
   18728:	mov	r2, r3
   1872c:	ldr	r3, [lr, r0]
   18730:	strd	r6, [sp, #16]
   18734:	pop	{r4, r6, r7, lr}
   18738:	ldr	r0, [r3]
   1873c:	b	19108 <mount@plt+0x71ac>
   18740:	mov	r0, ip
   18744:	pop	{r4, r6, r7, lr}
   18748:	b	18280 <mount@plt+0x6324>
   1874c:			; <UNDEFINED> instruction: 0x000181b4
   18750:	andeq	r5, r1, ip, lsl r9
   18754:	andeq	r0, r0, r0, lsr #4
   18758:	ldr	ip, [pc, #128]	; 187e0 <mount@plt+0x6884>
   1875c:	push	{r4, r5, lr}
   18760:	add	ip, pc, ip
   18764:	ldr	lr, [pc, #120]	; 187e4 <mount@plt+0x6888>
   18768:	tst	r0, #6
   1876c:	mov	r4, r2
   18770:	mov	r5, r3
   18774:	ldr	ip, [ip]
   18778:	add	lr, pc, lr
   1877c:	ldrh	r2, [sp, #12]
   18780:	beq	187a4 <mount@plt+0x6848>
   18784:	cmp	ip, #0
   18788:	beq	187ac <mount@plt+0x6850>
   1878c:	cmp	r4, #0
   18790:	beq	187d0 <mount@plt+0x6874>
   18794:	mov	r1, r4
   18798:	mov	r0, ip
   1879c:	pop	{r4, r5, lr}
   187a0:	b	18368 <mount@plt+0x640c>
   187a4:	cmp	ip, #0
   187a8:	popne	{r4, r5, pc}
   187ac:	tst	r0, #5
   187b0:	popeq	{r4, r5, pc}
   187b4:	ldr	r0, [pc, #44]	; 187e8 <mount@plt+0x688c>
   187b8:	mov	r3, r2
   187bc:	mov	r2, r5
   187c0:	ldr	r0, [lr, r0]
   187c4:	pop	{r4, r5, lr}
   187c8:	ldr	r0, [r0]
   187cc:	b	19108 <mount@plt+0x71ac>
   187d0:	mov	r1, r2
   187d4:	mov	r0, ip
   187d8:	pop	{r4, r5, lr}
   187dc:	b	1820c <mount@plt+0x62b0>
   187e0:	andeq	r8, r1, r0, lsr #2
   187e4:	andeq	r5, r1, r0, lsl #17
   187e8:	andeq	r0, r0, r0, lsr #4
   187ec:	ldr	ip, [pc, #128]	; 18874 <mount@plt+0x6918>
   187f0:	push	{r4, r5, lr}
   187f4:	add	ip, pc, ip
   187f8:	ldr	lr, [pc, #120]	; 18878 <mount@plt+0x691c>
   187fc:	tst	r0, #6
   18800:	mov	r4, r2
   18804:	mov	r5, r3
   18808:	ldr	ip, [ip]
   1880c:	add	lr, pc, lr
   18810:	ldr	r2, [sp, #12]
   18814:	beq	18838 <mount@plt+0x68dc>
   18818:	cmp	ip, #0
   1881c:	beq	18840 <mount@plt+0x68e4>
   18820:	cmp	r4, #0
   18824:	beq	18864 <mount@plt+0x6908>
   18828:	mov	r1, r4
   1882c:	mov	r0, ip
   18830:	pop	{r4, r5, lr}
   18834:	b	182f8 <mount@plt+0x639c>
   18838:	cmp	ip, #0
   1883c:	popne	{r4, r5, pc}
   18840:	tst	r0, #5
   18844:	popeq	{r4, r5, pc}
   18848:	ldr	r0, [pc, #44]	; 1887c <mount@plt+0x6920>
   1884c:	mov	r3, r2
   18850:	mov	r2, r5
   18854:	ldr	r0, [lr, r0]
   18858:	pop	{r4, r5, lr}
   1885c:	ldr	r0, [r0]
   18860:	b	19108 <mount@plt+0x71ac>
   18864:	mov	r1, r2
   18868:	mov	r0, ip
   1886c:	pop	{r4, r5, lr}
   18870:	b	18220 <mount@plt+0x62c4>
   18874:	andeq	r8, r1, ip, lsl #1
   18878:	andeq	r5, r1, ip, ror #15
   1887c:	andeq	r0, r0, r0, lsr #4
   18880:	ldr	ip, [pc, #128]	; 18908 <mount@plt+0x69ac>
   18884:	push	{r4, r6, r7, lr}
   18888:	add	ip, pc, ip
   1888c:	ldr	lr, [pc, #120]	; 1890c <mount@plt+0x69b0>
   18890:	tst	r0, #6
   18894:	ldr	ip, [ip]
   18898:	add	lr, pc, lr
   1889c:	ldrd	r6, [sp, #16]
   188a0:	beq	188d0 <mount@plt+0x6974>
   188a4:	cmp	ip, #0
   188a8:	beq	188d8 <mount@plt+0x697c>
   188ac:	mov	r4, r2
   188b0:	cmp	r4, #0
   188b4:	mov	r2, r6
   188b8:	mov	r3, r7
   188bc:	beq	188fc <mount@plt+0x69a0>
   188c0:	mov	r1, r4
   188c4:	mov	r0, ip
   188c8:	pop	{r4, r6, r7, lr}
   188cc:	b	18318 <mount@plt+0x63bc>
   188d0:	cmp	ip, #0
   188d4:	popne	{r4, r6, r7, pc}
   188d8:	tst	r0, #5
   188dc:	popeq	{r4, r6, r7, pc}
   188e0:	ldr	r0, [pc, #40]	; 18910 <mount@plt+0x69b4>
   188e4:	mov	r2, r3
   188e8:	ldr	r3, [lr, r0]
   188ec:	strd	r6, [sp, #16]
   188f0:	pop	{r4, r6, r7, lr}
   188f4:	ldr	r0, [r3]
   188f8:	b	19108 <mount@plt+0x71ac>
   188fc:	mov	r0, ip
   18900:	pop	{r4, r6, r7, lr}
   18904:	b	18234 <mount@plt+0x62d8>
   18908:	strdeq	r7, [r1], -r8
   1890c:	andeq	r5, r1, r0, ror #14
   18910:	andeq	r0, r0, r0, lsr #4
   18914:	ldr	ip, [pc, #128]	; 1899c <mount@plt+0x6a40>
   18918:	push	{r4, r5, lr}
   1891c:	add	ip, pc, ip
   18920:	ldr	lr, [pc, #120]	; 189a0 <mount@plt+0x6a44>
   18924:	tst	r0, #6
   18928:	mov	r4, r2
   1892c:	mov	r5, r3
   18930:	ldr	ip, [ip]
   18934:	add	lr, pc, lr
   18938:	ldr	r2, [sp, #12]
   1893c:	beq	18960 <mount@plt+0x6a04>
   18940:	cmp	ip, #0
   18944:	beq	18968 <mount@plt+0x6a0c>
   18948:	cmp	r4, #0
   1894c:	beq	1898c <mount@plt+0x6a30>
   18950:	mov	r1, r4
   18954:	mov	r0, ip
   18958:	pop	{r4, r5, lr}
   1895c:	b	18388 <mount@plt+0x642c>
   18960:	cmp	ip, #0
   18964:	popne	{r4, r5, pc}
   18968:	tst	r0, #5
   1896c:	popeq	{r4, r5, pc}
   18970:	ldr	r0, [pc, #44]	; 189a4 <mount@plt+0x6a48>
   18974:	mov	r3, r2
   18978:	mov	r2, r5
   1897c:	ldr	r0, [lr, r0]
   18980:	pop	{r4, r5, lr}
   18984:	ldr	r0, [r0]
   18988:	b	19108 <mount@plt+0x71ac>
   1898c:	mov	r1, r2
   18990:	mov	r0, ip
   18994:	pop	{r4, r5, lr}
   18998:	b	18254 <mount@plt+0x62f8>
   1899c:	andeq	r7, r1, r4, ror #30
   189a0:	andeq	r5, r1, r4, asr #13
   189a4:	andeq	r0, r0, r0, lsr #4
   189a8:	ldr	ip, [pc, #128]	; 18a30 <mount@plt+0x6ad4>
   189ac:	push	{r4, r6, r7, lr}
   189b0:	add	ip, pc, ip
   189b4:	ldr	lr, [pc, #120]	; 18a34 <mount@plt+0x6ad8>
   189b8:	tst	r0, #6
   189bc:	ldr	ip, [ip]
   189c0:	add	lr, pc, lr
   189c4:	ldrd	r6, [sp, #16]
   189c8:	beq	189f8 <mount@plt+0x6a9c>
   189cc:	cmp	ip, #0
   189d0:	beq	18a00 <mount@plt+0x6aa4>
   189d4:	mov	r4, r2
   189d8:	cmp	r4, #0
   189dc:	mov	r2, r6
   189e0:	mov	r3, r7
   189e4:	beq	18a24 <mount@plt+0x6ac8>
   189e8:	mov	r1, r4
   189ec:	mov	r0, ip
   189f0:	pop	{r4, r6, r7, lr}
   189f4:	b	183a8 <mount@plt+0x644c>
   189f8:	cmp	ip, #0
   189fc:	popne	{r4, r6, r7, pc}
   18a00:	tst	r0, #5
   18a04:	popeq	{r4, r6, r7, pc}
   18a08:	ldr	r0, [pc, #40]	; 18a38 <mount@plt+0x6adc>
   18a0c:	mov	r2, r3
   18a10:	ldr	r3, [lr, r0]
   18a14:	strd	r6, [sp, #16]
   18a18:	pop	{r4, r6, r7, lr}
   18a1c:	ldr	r0, [r3]
   18a20:	b	19108 <mount@plt+0x71ac>
   18a24:	mov	r0, ip
   18a28:	pop	{r4, r6, r7, lr}
   18a2c:	b	18268 <mount@plt+0x630c>
   18a30:	ldrdeq	r7, [r1], -r0
   18a34:	andeq	r5, r1, r8, lsr r6
   18a38:	andeq	r0, r0, r0, lsr #4
   18a3c:	ldr	ip, [pc, #136]	; 18acc <mount@plt+0x6b70>
   18a40:	push	{r4, r5, lr}
   18a44:	add	ip, pc, ip
   18a48:	ldr	lr, [pc, #128]	; 18ad0 <mount@plt+0x6b74>
   18a4c:	tst	r0, #6
   18a50:	sub	sp, sp, #12
   18a54:	ldr	ip, [ip]
   18a58:	add	lr, pc, lr
   18a5c:	vmov.f64	d7, d0
   18a60:	beq	18a88 <mount@plt+0x6b2c>
   18a64:	cmp	ip, #0
   18a68:	beq	18a98 <mount@plt+0x6b3c>
   18a6c:	cmp	r2, #0
   18a70:	beq	18abc <mount@plt+0x6b60>
   18a74:	mov	r1, r2
   18a78:	mov	r0, ip
   18a7c:	add	sp, sp, #12
   18a80:	pop	{r4, r5, lr}
   18a84:	b	182d0 <mount@plt+0x6374>
   18a88:	cmp	ip, #0
   18a8c:	beq	18a98 <mount@plt+0x6b3c>
   18a90:	add	sp, sp, #12
   18a94:	pop	{r4, r5, pc}
   18a98:	tst	r0, #5
   18a9c:	beq	18a90 <mount@plt+0x6b34>
   18aa0:	mov	r2, r3
   18aa4:	ldr	r3, [pc, #40]	; 18ad4 <mount@plt+0x6b78>
   18aa8:	ldr	r3, [lr, r3]
   18aac:	vstr	d7, [sp]
   18ab0:	ldr	r0, [r3]
   18ab4:	bl	19108 <mount@plt+0x71ac>
   18ab8:	b	18a90 <mount@plt+0x6b34>
   18abc:	mov	r0, ip
   18ac0:	add	sp, sp, #12
   18ac4:	pop	{r4, r5, lr}
   18ac8:	b	181f8 <mount@plt+0x629c>
   18acc:	andeq	r7, r1, ip, lsr lr
   18ad0:	andeq	r5, r1, r0, lsr #11
   18ad4:	andeq	r0, r0, r0, lsr #4
   18ad8:	ldr	ip, [pc, #180]	; 18b94 <mount@plt+0x6c38>
   18adc:	push	{r4, lr}
   18ae0:	add	ip, pc, ip
   18ae4:	ldr	lr, [pc, #172]	; 18b98 <mount@plt+0x6c3c>
   18ae8:	tst	r0, #6
   18aec:	mov	r4, r2
   18af0:	ldr	ip, [ip]
   18af4:	mov	r2, r3
   18af8:	add	lr, pc, lr
   18afc:	ldr	r3, [sp, #8]
   18b00:	beq	18b4c <mount@plt+0x6bf0>
   18b04:	cmp	ip, #0
   18b08:	beq	18b54 <mount@plt+0x6bf8>
   18b0c:	cmp	r4, #0
   18b10:	clz	r0, r3
   18b14:	lsr	r0, r0, #5
   18b18:	moveq	r0, #0
   18b1c:	cmp	r0, #0
   18b20:	bne	18b84 <mount@plt+0x6c28>
   18b24:	adds	r2, r3, #0
   18b28:	movne	r2, #1
   18b2c:	cmp	r4, #0
   18b30:	movne	r2, #0
   18b34:	cmp	r2, #0
   18b38:	beq	18b70 <mount@plt+0x6c14>
   18b3c:	mov	r1, r3
   18b40:	mov	r0, ip
   18b44:	pop	{r4, lr}
   18b48:	b	18178 <mount@plt+0x621c>
   18b4c:	cmp	ip, #0
   18b50:	popne	{r4, pc}
   18b54:	tst	r0, #5
   18b58:	popeq	{r4, pc}
   18b5c:	ldr	r0, [pc, #56]	; 18b9c <mount@plt+0x6c40>
   18b60:	ldr	r0, [lr, r0]
   18b64:	pop	{r4, lr}
   18b68:	ldr	r0, [r0]
   18b6c:	b	19108 <mount@plt+0x71ac>
   18b70:	mov	r1, r4
   18b74:	mov	r2, r3
   18b78:	mov	r0, ip
   18b7c:	pop	{r4, lr}
   18b80:	b	18290 <mount@plt+0x6334>
   18b84:	mov	r1, r4
   18b88:	mov	r0, ip
   18b8c:	pop	{r4, lr}
   18b90:	b	17f70 <mount@plt+0x6014>
   18b94:	andeq	r7, r1, r0, lsr #27
   18b98:	andeq	r5, r1, r0, lsl #10
   18b9c:	andeq	r0, r0, r0, lsr #4
   18ba0:	ldr	ip, [pc, #152]	; 18c40 <mount@plt+0x6ce4>
   18ba4:	push	{r4, lr}
   18ba8:	add	ip, pc, ip
   18bac:	mov	r4, r3
   18bb0:	ldr	r3, [ip]
   18bb4:	ldr	ip, [pc, #136]	; 18c44 <mount@plt+0x6ce8>
   18bb8:	tst	r0, #6
   18bbc:	mov	lr, r2
   18bc0:	add	ip, pc, ip
   18bc4:	ldrb	r2, [sp, #8]
   18bc8:	beq	18bec <mount@plt+0x6c90>
   18bcc:	cmp	r3, #0
   18bd0:	beq	18bf4 <mount@plt+0x6c98>
   18bd4:	cmp	lr, #0
   18bd8:	beq	18c24 <mount@plt+0x6cc8>
   18bdc:	mov	r1, lr
   18be0:	mov	r0, r3
   18be4:	pop	{r4, lr}
   18be8:	b	182b0 <mount@plt+0x6354>
   18bec:	cmp	r3, #0
   18bf0:	popne	{r4, pc}
   18bf4:	tst	r0, #5
   18bf8:	popeq	{r4, pc}
   18bfc:	ldr	r3, [pc, #68]	; 18c48 <mount@plt+0x6cec>
   18c00:	cmp	r2, #0
   18c04:	ldr	r3, [ip, r3]
   18c08:	ldr	r0, [r3]
   18c0c:	bne	18c34 <mount@plt+0x6cd8>
   18c10:	ldr	r3, [pc, #52]	; 18c4c <mount@plt+0x6cf0>
   18c14:	add	r3, pc, r3
   18c18:	mov	r2, r4
   18c1c:	pop	{r4, lr}
   18c20:	b	19108 <mount@plt+0x71ac>
   18c24:	mov	r1, r2
   18c28:	mov	r0, r3
   18c2c:	pop	{r4, lr}
   18c30:	b	181b4 <mount@plt+0x6258>
   18c34:	ldr	r3, [pc, #20]	; 18c50 <mount@plt+0x6cf4>
   18c38:	add	r3, pc, r3
   18c3c:	b	18c18 <mount@plt+0x6cbc>
   18c40:	ldrdeq	r7, [r1], -r8
   18c44:	andeq	r5, r1, r8, lsr r4
   18c48:	andeq	r0, r0, r0, lsr #4
   18c4c:	andeq	r4, r0, r0, asr r7
   18c50:	andeq	r4, r0, r4, lsr #14
   18c54:	push	{r4, r5, r6, r7, lr}
   18c58:	sub	sp, sp, #92	; 0x5c
   18c5c:	ldr	lr, [pc, #196]	; 18d28 <mount@plt+0x6dcc>
   18c60:	ldr	ip, [pc, #196]	; 18d2c <mount@plt+0x6dd0>
   18c64:	add	lr, pc, lr
   18c68:	tst	r0, #6
   18c6c:	ldr	r4, [lr, ip]
   18c70:	ldr	ip, [pc, #184]	; 18d30 <mount@plt+0x6dd4>
   18c74:	add	ip, pc, ip
   18c78:	ldr	r5, [r4]
   18c7c:	ldr	ip, [ip]
   18c80:	str	r5, [sp, #84]	; 0x54
   18c84:	beq	18cdc <mount@plt+0x6d80>
   18c88:	cmp	ip, #0
   18c8c:	beq	18cfc <mount@plt+0x6da0>
   18c90:	ldrd	r0, [sp, #112]	; 0x70
   18c94:	mov	r6, r2
   18c98:	ldr	r2, [pc, #148]	; 18d34 <mount@plt+0x6dd8>
   18c9c:	mov	r3, #64	; 0x40
   18ca0:	add	r5, sp, #20
   18ca4:	add	r2, pc, r2
   18ca8:	strd	r0, [sp, #8]
   18cac:	str	r2, [sp]
   18cb0:	mov	r1, r3
   18cb4:	mov	r0, r5
   18cb8:	mov	r2, #1
   18cbc:	bl	11f38 <__snprintf_chk@plt>
   18cc0:	str	r5, [sp]
   18cc4:	mov	r2, r6
   18cc8:	mov	r3, #0
   18ccc:	mov	r1, #6
   18cd0:	mov	r0, #2
   18cd4:	bl	18ad8 <mount@plt+0x6b7c>
   18cd8:	b	18ce4 <mount@plt+0x6d88>
   18cdc:	cmp	ip, #0
   18ce0:	beq	18cfc <mount@plt+0x6da0>
   18ce4:	ldr	r2, [sp, #84]	; 0x54
   18ce8:	ldr	r3, [r4]
   18cec:	cmp	r2, r3
   18cf0:	bne	18d24 <mount@plt+0x6dc8>
   18cf4:	add	sp, sp, #92	; 0x5c
   18cf8:	pop	{r4, r5, r6, r7, pc}
   18cfc:	tst	r0, #5
   18d00:	beq	18ce4 <mount@plt+0x6d88>
   18d04:	ldr	r0, [pc, #44]	; 18d38 <mount@plt+0x6ddc>
   18d08:	mov	r2, r3
   18d0c:	ldrd	r6, [sp, #112]	; 0x70
   18d10:	ldr	r3, [lr, r0]
   18d14:	strd	r6, [sp]
   18d18:	ldr	r0, [r3]
   18d1c:	bl	19108 <mount@plt+0x71ac>
   18d20:	b	18ce4 <mount@plt+0x6d88>
   18d24:	bl	11ac4 <__stack_chk_fail@plt>
   18d28:	muleq	r1, r4, r3
   18d2c:	andeq	r0, r0, r0, lsl #4
   18d30:	andeq	r7, r1, ip, lsl #24
   18d34:	strdeq	r4, [r0], -ip
   18d38:	andeq	r0, r0, r0, lsr #4
   18d3c:	push	{r4, r5, r6, r7, lr}
   18d40:	sub	sp, sp, #84	; 0x54
   18d44:	ldr	lr, [pc, #208]	; 18e1c <mount@plt+0x6ec0>
   18d48:	ldr	ip, [pc, #208]	; 18e20 <mount@plt+0x6ec4>
   18d4c:	add	lr, pc, lr
   18d50:	ldr	r5, [pc, #204]	; 18e24 <mount@plt+0x6ec8>
   18d54:	ldr	r4, [lr, ip]
   18d58:	add	r5, pc, r5
   18d5c:	tst	r0, #6
   18d60:	ldr	ip, [r4]
   18d64:	str	ip, [sp, #76]	; 0x4c
   18d68:	ldr	ip, [r5]
   18d6c:	beq	18dc4 <mount@plt+0x6e68>
   18d70:	cmp	ip, #0
   18d74:	beq	18de4 <mount@plt+0x6e88>
   18d78:	mov	r6, r2
   18d7c:	ldr	r2, [pc, #164]	; 18e28 <mount@plt+0x6ecc>
   18d80:	ldr	r1, [sp, #104]	; 0x68
   18d84:	add	r2, pc, r2
   18d88:	mov	r3, #64	; 0x40
   18d8c:	add	r7, sp, #12
   18d90:	str	r1, [sp, #4]
   18d94:	str	r2, [sp]
   18d98:	mov	r0, r7
   18d9c:	mov	r1, r3
   18da0:	mov	r2, #1
   18da4:	bl	11f38 <__snprintf_chk@plt>
   18da8:	cmp	r6, #0
   18dac:	beq	18e08 <mount@plt+0x6eac>
   18db0:	mov	r2, r7
   18db4:	mov	r1, r6
   18db8:	ldr	r0, [r5]
   18dbc:	bl	18290 <mount@plt+0x6334>
   18dc0:	b	18dcc <mount@plt+0x6e70>
   18dc4:	cmp	ip, #0
   18dc8:	beq	18de4 <mount@plt+0x6e88>
   18dcc:	ldr	r2, [sp, #76]	; 0x4c
   18dd0:	ldr	r3, [r4]
   18dd4:	cmp	r2, r3
   18dd8:	bne	18e18 <mount@plt+0x6ebc>
   18ddc:	add	sp, sp, #84	; 0x54
   18de0:	pop	{r4, r5, r6, r7, pc}
   18de4:	tst	r0, #5
   18de8:	beq	18dcc <mount@plt+0x6e70>
   18dec:	ldr	r0, [pc, #56]	; 18e2c <mount@plt+0x6ed0>
   18df0:	mov	r2, r3
   18df4:	ldr	r3, [sp, #104]	; 0x68
   18df8:	ldr	r0, [lr, r0]
   18dfc:	ldr	r0, [r0]
   18e00:	bl	19108 <mount@plt+0x71ac>
   18e04:	b	18dcc <mount@plt+0x6e70>
   18e08:	mov	r1, r7
   18e0c:	ldr	r0, [r5]
   18e10:	bl	18178 <mount@plt+0x621c>
   18e14:	b	18dcc <mount@plt+0x6e70>
   18e18:	bl	11ac4 <__stack_chk_fail@plt>
   18e1c:	andeq	r5, r1, ip, lsr #5
   18e20:	andeq	r0, r0, r0, lsl #4
   18e24:	andeq	r7, r1, r8, lsr #22
   18e28:	andeq	r4, r0, r0, asr r4
   18e2c:	andeq	r0, r0, r0, lsr #4
   18e30:	ldr	ip, [pc, #116]	; 18eac <mount@plt+0x6f50>
   18e34:	push	{r4, lr}
   18e38:	add	ip, pc, ip
   18e3c:	ldr	lr, [pc, #108]	; 18eb0 <mount@plt+0x6f54>
   18e40:	tst	r0, #6
   18e44:	mov	r4, r3
   18e48:	ldr	ip, [ip]
   18e4c:	add	lr, pc, lr
   18e50:	ldr	r3, [sp, #8]
   18e54:	beq	18e78 <mount@plt+0x6f1c>
   18e58:	cmp	ip, #0
   18e5c:	beq	18e80 <mount@plt+0x6f24>
   18e60:	cmp	r2, #0
   18e64:	beq	18ea0 <mount@plt+0x6f44>
   18e68:	mov	r1, r2
   18e6c:	mov	r0, ip
   18e70:	pop	{r4, lr}
   18e74:	b	18418 <mount@plt+0x64bc>
   18e78:	cmp	ip, #0
   18e7c:	popne	{r4, pc}
   18e80:	tst	r0, #5
   18e84:	popeq	{r4, pc}
   18e88:	ldr	r0, [pc, #36]	; 18eb4 <mount@plt+0x6f58>
   18e8c:	mov	r2, r4
   18e90:	ldr	r0, [lr, r0]
   18e94:	pop	{r4, lr}
   18e98:	ldr	r0, [r0]
   18e9c:	b	19108 <mount@plt+0x71ac>
   18ea0:	mov	r0, ip
   18ea4:	pop	{r4, lr}
   18ea8:	b	181e8 <mount@plt+0x628c>
   18eac:	andeq	r7, r1, r8, asr #20
   18eb0:	andeq	r5, r1, ip, lsr #3
   18eb4:	andeq	r0, r0, r0, lsr #4
   18eb8:	ldr	r3, [pc, #48]	; 18ef0 <mount@plt+0x6f94>
   18ebc:	ldr	r2, [pc, #48]	; 18ef4 <mount@plt+0x6f98>
   18ec0:	add	r3, pc, r3
   18ec4:	add	r2, pc, r2
   18ec8:	ldr	r3, [r3]
   18ecc:	cmp	r3, #0
   18ed0:	bxne	lr
   18ed4:	ldr	r3, [pc, #28]	; 18ef8 <mount@plt+0x6f9c>
   18ed8:	ldr	r1, [pc, #28]	; 18efc <mount@plt+0x6fa0>
   18edc:	mov	r0, #1
   18ee0:	ldr	r3, [r2, r3]
   18ee4:	add	r1, pc, r1
   18ee8:	ldr	r2, [r3]
   18eec:	b	11d70 <__printf_chk@plt>
   18ef0:	andeq	r7, r1, r0, asr #19
   18ef4:	andeq	r5, r1, r4, lsr r1
   18ef8:	andeq	r0, r0, ip, lsl r2
   18efc:	andeq	r4, r0, r0, lsr #13
   18f00:	cmp	r1, #0
   18f04:	clz	r3, r0
   18f08:	lsr	r3, r3, #5
   18f0c:	moveq	r1, r3
   18f10:	movne	r1, #1
   18f14:	ldr	r3, [pc, #168]	; 18fc4 <mount@plt+0x7068>
   18f18:	cmp	r1, #0
   18f1c:	add	r3, pc, r3
   18f20:	bne	18fbc <mount@plt+0x7060>
   18f24:	cmp	r0, #2
   18f28:	push	{r4, r5, r6, lr}
   18f2c:	beq	18f54 <mount@plt+0x6ff8>
   18f30:	ldr	r2, [pc, #144]	; 18fc8 <mount@plt+0x706c>
   18f34:	ldr	r3, [r3, r2]
   18f38:	ldr	r0, [r3]
   18f3c:	bl	11d94 <fileno@plt>
   18f40:	bl	11ed8 <isatty@plt>
   18f44:	cmp	r0, #0
   18f48:	bne	18f54 <mount@plt+0x6ff8>
   18f4c:	mov	r0, #0
   18f50:	pop	{r4, r5, r6, pc}
   18f54:	ldr	r5, [pc, #112]	; 18fcc <mount@plt+0x7070>
   18f58:	ldr	r0, [pc, #112]	; 18fd0 <mount@plt+0x7074>
   18f5c:	add	r5, pc, r5
   18f60:	mov	r4, #1
   18f64:	add	r0, pc, r0
   18f68:	str	r4, [r5]
   18f6c:	bl	11c20 <getenv@plt>
   18f70:	cmp	r0, #0
   18f74:	beq	18fb4 <mount@plt+0x7058>
   18f78:	mov	r1, #59	; 0x3b
   18f7c:	bl	11e00 <strrchr@plt>
   18f80:	subs	r1, r0, #0
   18f84:	beq	18fb4 <mount@plt+0x7058>
   18f88:	ldrb	r2, [r1, #1]
   18f8c:	sub	r3, r2, #48	; 0x30
   18f90:	cmp	r2, #56	; 0x38
   18f94:	cmpne	r3, #6
   18f98:	movls	r0, #1
   18f9c:	movhi	r0, #0
   18fa0:	bhi	18fb4 <mount@plt+0x7058>
   18fa4:	ldrb	r3, [r1, #2]
   18fa8:	cmp	r3, #0
   18fac:	streq	r4, [r5, #4]
   18fb0:	pop	{r4, r5, r6, pc}
   18fb4:	mov	r0, r4
   18fb8:	pop	{r4, r5, r6, pc}
   18fbc:	mov	r0, #0
   18fc0:	bx	lr
   18fc4:	ldrdeq	r5, [r1], -ip
   18fc8:	andeq	r0, r0, r0, lsr #4
   18fcc:	andeq	r7, r1, r8, lsr #18
   18fd0:	andeq	r4, r0, ip, ror r4
   18fd4:	ldr	r3, [pc, #276]	; 190f0 <mount@plt+0x7194>
   18fd8:	ldr	r2, [pc, #276]	; 190f4 <mount@plt+0x7198>
   18fdc:	add	r3, pc, r3
   18fe0:	push	{r4, r5, r6, r7, fp, lr}
   18fe4:	add	fp, sp, #20
   18fe8:	sub	sp, sp, #8
   18fec:	ldr	r6, [r3, r2]
   18ff0:	subs	r5, r1, #0
   18ff4:	ldr	r3, [r6]
   18ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   18ffc:	beq	190c0 <mount@plt+0x7164>
   19000:	mov	r4, r0
   19004:	bl	11cd4 <strlen@plt>
   19008:	mov	r1, r4
   1900c:	add	r3, r0, #8
   19010:	bic	r3, r3, #7
   19014:	sub	sp, sp, r3
   19018:	add	r2, r0, #1
   1901c:	mov	r0, sp
   19020:	bl	11a4c <memcpy@plt>
   19024:	mov	r1, #61	; 0x3d
   19028:	mov	r7, r0
   1902c:	bl	11a10 <strchrnul@plt>
   19030:	ldr	r1, [pc, #192]	; 190f8 <mount@plt+0x719c>
   19034:	add	r1, pc, r1
   19038:	ldrb	r3, [r0]
   1903c:	mov	r4, r0
   19040:	mov	r0, r7
   19044:	cmp	r3, #0
   19048:	movne	r3, #0
   1904c:	strbne	r3, [r4], #1
   19050:	bl	14f10 <mount@plt+0x2fb4>
   19054:	cmp	r0, #0
   19058:	bne	190c0 <mount@plt+0x7164>
   1905c:	ldrb	r3, [r4]
   19060:	cmp	r3, #0
   19064:	beq	190dc <mount@plt+0x7180>
   19068:	ldr	r1, [pc, #140]	; 190fc <mount@plt+0x71a0>
   1906c:	mov	r0, r4
   19070:	add	r1, pc, r1
   19074:	bl	119bc <strcmp@plt>
   19078:	cmp	r0, #0
   1907c:	beq	190dc <mount@plt+0x7180>
   19080:	ldr	r1, [pc, #120]	; 19100 <mount@plt+0x71a4>
   19084:	mov	r0, r4
   19088:	add	r1, pc, r1
   1908c:	bl	119bc <strcmp@plt>
   19090:	cmp	r0, #0
   19094:	moveq	r0, #1
   19098:	streq	r0, [r5]
   1909c:	beq	190c4 <mount@plt+0x7168>
   190a0:	ldr	r1, [pc, #92]	; 19104 <mount@plt+0x71a8>
   190a4:	mov	r0, r4
   190a8:	add	r1, pc, r1
   190ac:	bl	119bc <strcmp@plt>
   190b0:	subs	r3, r0, #0
   190b4:	moveq	r0, #1
   190b8:	streq	r3, [r5]
   190bc:	beq	190c4 <mount@plt+0x7168>
   190c0:	mov	r0, #0
   190c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   190c8:	ldr	r3, [r6]
   190cc:	cmp	r2, r3
   190d0:	bne	190ec <mount@plt+0x7190>
   190d4:	sub	sp, fp, #20
   190d8:	pop	{r4, r5, r6, r7, fp, pc}
   190dc:	mov	r3, #2
   190e0:	str	r3, [r5]
   190e4:	mov	r0, #1
   190e8:	b	190c4 <mount@plt+0x7168>
   190ec:	bl	11ac4 <__stack_chk_fail@plt>
   190f0:	andeq	r5, r1, ip, lsl r0
   190f4:	andeq	r0, r0, r0, lsl #4
   190f8:			; <UNDEFINED> instruction: 0x000043b8
   190fc:	andeq	r4, r0, r4, lsl #7
   19100:	andeq	r4, r0, r4, ror r3
   19104:	andeq	r4, r0, ip, asr r3
   19108:	push	{r2, r3}
   1910c:	ldr	r2, [pc, #252]	; 19210 <mount@plt+0x72b4>
   19110:	ldr	r3, [pc, #252]	; 19214 <mount@plt+0x72b8>
   19114:	add	r2, pc, r2
   19118:	ldr	ip, [pc, #248]	; 19218 <mount@plt+0x72bc>
   1911c:	push	{r4, r5, r6, r7, r8, lr}
   19120:	add	ip, pc, ip
   19124:	ldr	r6, [r2, r3]
   19128:	ldr	r4, [ip]
   1912c:	sub	sp, sp, #8
   19130:	ldr	lr, [r6]
   19134:	add	r3, sp, #36	; 0x24
   19138:	cmp	r1, #6
   1913c:	cmpne	r4, #0
   19140:	str	lr, [sp, #4]
   19144:	str	r3, [sp]
   19148:	ldr	r8, [sp, #32]
   1914c:	beq	191fc <mount@plt+0x72a0>
   19150:	ldr	r3, [ip, #4]
   19154:	mov	r7, r0
   19158:	cmp	r3, #0
   1915c:	bne	191ec <mount@plt+0x7290>
   19160:	ldr	r3, [pc, #180]	; 1921c <mount@plt+0x72c0>
   19164:	add	r3, pc, r3
   19168:	add	r1, r3, r1, lsl #2
   1916c:	ldr	r2, [r1, #28]
   19170:	ldr	r3, [pc, #168]	; 19220 <mount@plt+0x72c4>
   19174:	ldr	r5, [pc, #168]	; 19224 <mount@plt+0x72c8>
   19178:	add	r3, pc, r3
   1917c:	add	r5, pc, r5
   19180:	ldr	r3, [r3, r2, lsl #2]
   19184:	mov	r1, #1
   19188:	mov	r2, r5
   1918c:	mov	r0, r7
   19190:	bl	11da0 <__fprintf_chk@plt>
   19194:	mov	r2, r8
   19198:	ldr	r3, [sp]
   1919c:	mov	r1, #1
   191a0:	mov	r4, r0
   191a4:	mov	r0, r7
   191a8:	bl	11c68 <__vfprintf_chk@plt>
   191ac:	ldr	r3, [pc, #116]	; 19228 <mount@plt+0x72cc>
   191b0:	mov	r2, r5
   191b4:	add	r3, pc, r3
   191b8:	mov	r1, #1
   191bc:	add	r4, r0, r4
   191c0:	mov	r0, r7
   191c4:	bl	11da0 <__fprintf_chk@plt>
   191c8:	add	r0, r4, r0
   191cc:	ldr	r2, [sp, #4]
   191d0:	ldr	r3, [r6]
   191d4:	cmp	r2, r3
   191d8:	bne	1920c <mount@plt+0x72b0>
   191dc:	add	sp, sp, #8
   191e0:	pop	{r4, r5, r6, r7, r8, lr}
   191e4:	add	sp, sp, #8
   191e8:	bx	lr
   191ec:	ldr	r3, [pc, #56]	; 1922c <mount@plt+0x72d0>
   191f0:	add	r3, pc, r3
   191f4:	ldr	r2, [r3, r1, lsl #2]
   191f8:	b	19170 <mount@plt+0x7214>
   191fc:	mov	r2, r8
   19200:	mov	r1, #1
   19204:	bl	11c68 <__vfprintf_chk@plt>
   19208:	b	191cc <mount@plt+0x7270>
   1920c:	bl	11ac4 <__stack_chk_fail@plt>
   19210:	andeq	r4, r1, r4, ror #29
   19214:	andeq	r0, r0, r0, lsl #4
   19218:	andeq	r7, r1, r4, ror #14
   1921c:	andeq	r4, r0, r4, asr #4
   19220:	andeq	r4, r1, r0, lsr #26
   19224:	andeq	r4, r0, r8, lsl #8
   19228:	andeq	r4, r0, r8, asr r2
   1922c:			; <UNDEFINED> instruction: 0x000041b8
   19230:	cmp	r0, #2
   19234:	bxeq	lr
   19238:	cmp	r0, #10
   1923c:	moveq	r0, #3
   19240:	movne	r0, #6
   19244:	bx	lr
   19248:	cmp	r0, #2
   1924c:	beq	19260 <mount@plt+0x7304>
   19250:	cmp	r0, #6
   19254:	moveq	r0, #4
   19258:	movne	r0, #6
   1925c:	bx	lr
   19260:	mov	r0, #5
   19264:	bx	lr
   19268:	push	{r4, r5, r6, r7, r8, lr}
   1926c:	mov	r5, r0
   19270:	mov	r6, r3
   19274:	mov	r7, r1
   19278:	mov	r4, r2
   1927c:	bl	11cec <__errno_location@plt>
   19280:	cmp	r5, #12
   19284:	movne	r3, #97	; 0x61
   19288:	strne	r3, [r0]
   1928c:	beq	19298 <mount@plt+0x733c>
   19290:	mov	r0, #0
   19294:	pop	{r4, r5, r6, r7, r8, pc}
   19298:	ldrh	r3, [r7]
   1929c:	mov	r2, #0
   192a0:	str	r2, [r0]
   192a4:	cmp	r3, #2
   192a8:	bne	19290 <mount@plt+0x7334>
   192ac:	cmp	r6, r2
   192b0:	beq	193d0 <mount@plt+0x7474>
   192b4:	ldrh	ip, [r7, #2]
   192b8:	lsr	r1, ip, #10
   192bc:	cmp	r1, #9
   192c0:	bls	193d8 <mount@plt+0x747c>
   192c4:	ldr	r2, [pc, #388]	; 19450 <mount@plt+0x74f4>
   192c8:	cmp	r6, #1
   192cc:	umull	r0, r2, r2, r1
   192d0:	lsr	r2, r2, #3
   192d4:	add	r0, r2, #48	; 0x30
   192d8:	strb	r0, [r4]
   192dc:	beq	193d0 <mount@plt+0x7474>
   192e0:	add	r2, r2, r2, lsl #2
   192e4:	mov	r0, #1
   192e8:	sub	r1, r1, r2, lsl #1
   192ec:	add	r2, r4, #1
   192f0:	uxth	r1, r1
   192f4:	add	r1, r1, #48	; 0x30
   192f8:	cmp	r6, r3
   192fc:	strb	r1, [r2]
   19300:	beq	193d0 <mount@plt+0x7474>
   19304:	add	r2, r0, #2
   19308:	mov	r1, #46	; 0x2e
   1930c:	cmp	r6, r2
   19310:	add	lr, r4, r2
   19314:	strb	r1, [r4, r3]
   19318:	beq	193d0 <mount@plt+0x7474>
   1931c:	lsl	r3, ip, #22
   19320:	lsr	r3, r3, #22
   19324:	cmp	r3, #1000	; 0x3e8
   19328:	bcs	193e8 <mount@plt+0x748c>
   1932c:	cmp	r3, #99	; 0x63
   19330:	bls	19434 <mount@plt+0x74d8>
   19334:	ldr	r1, [pc, #280]	; 19454 <mount@plt+0x74f8>
   19338:	umull	r0, r1, r1, r3
   1933c:	lsr	r1, r1, #5
   19340:	uxth	r1, r1
   19344:	add	r2, r2, #1
   19348:	add	r1, r1, #48	; 0x30
   1934c:	cmp	r6, r2
   19350:	strb	r1, [lr]
   19354:	beq	193d0 <mount@plt+0x7474>
   19358:	ldr	r1, [pc, #244]	; 19454 <mount@plt+0x74f8>
   1935c:	ldr	r0, [pc, #236]	; 19450 <mount@plt+0x74f4>
   19360:	add	lr, r4, r2
   19364:	umull	ip, r1, r1, r3
   19368:	lsr	r1, r1, #5
   1936c:	add	r1, r1, r1, lsl #2
   19370:	add	r1, r1, r1, lsl #2
   19374:	sub	r3, r3, r1, lsl #2
   19378:	uxth	r3, r3
   1937c:	umull	r0, r1, r0, r3
   19380:	lsr	r1, r1, #3
   19384:	uxth	r1, r1
   19388:	add	r2, r2, #1
   1938c:	add	r1, r1, #48	; 0x30
   19390:	cmp	r6, r2
   19394:	strb	r1, [lr]
   19398:	beq	193d0 <mount@plt+0x7474>
   1939c:	ldr	r1, [pc, #172]	; 19450 <mount@plt+0x74f4>
   193a0:	add	lr, r4, r2
   193a4:	umull	r0, r1, r1, r3
   193a8:	lsr	r1, r1, #3
   193ac:	add	r1, r1, r1, lsl #2
   193b0:	sub	r3, r3, r1, lsl #1
   193b4:	uxth	r3, r3
   193b8:	add	r2, r2, #1
   193bc:	add	r3, r3, #48	; 0x30
   193c0:	cmp	r6, r2
   193c4:	strb	r3, [lr]
   193c8:	movne	r3, #0
   193cc:	strbne	r3, [r4, r2]
   193d0:	mov	r0, r4
   193d4:	pop	{r4, r5, r6, r7, r8, pc}
   193d8:	mov	r0, r2
   193dc:	mov	r3, #1
   193e0:	mov	r2, r4
   193e4:	b	192f4 <mount@plt+0x7398>
   193e8:	add	r2, r0, #3
   193ec:	mov	r1, #49	; 0x31
   193f0:	cmp	r6, r2
   193f4:	strb	r1, [lr]
   193f8:	beq	193d0 <mount@plt+0x7474>
   193fc:	ldr	r0, [pc, #84]	; 19458 <mount@plt+0x74fc>
   19400:	ldr	r1, [pc, #76]	; 19454 <mount@plt+0x74f8>
   19404:	add	lr, r4, r2
   19408:	umull	ip, r0, r0, r3
   1940c:	lsr	r0, r0, #6
   19410:	lsl	ip, r0, #5
   19414:	sub	ip, ip, r0
   19418:	add	r0, r0, ip, lsl #2
   1941c:	sub	r3, r3, r0, lsl #3
   19420:	uxth	r3, r3
   19424:	umull	r0, r1, r1, r3
   19428:	lsr	r1, r1, #5
   1942c:	uxth	r1, r1
   19430:	b	19344 <mount@plt+0x73e8>
   19434:	cmp	r3, #9
   19438:	bls	193b8 <mount@plt+0x745c>
   1943c:	ldr	r1, [pc, #12]	; 19450 <mount@plt+0x74f4>
   19440:	umull	r0, r1, r1, r3
   19444:	lsr	r1, r1, #3
   19448:	uxth	r1, r1
   1944c:	b	19388 <mount@plt+0x742c>
   19450:	stclgt	12, cr12, [ip], {205}	; 0xcd
   19454:	mvnpl	r8, pc, lsl r5
   19458:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1945c:	push	{r4, r5, r6, lr}
   19460:	mov	r6, r0
   19464:	mov	r5, r1
   19468:	mov	r4, r2
   1946c:	bl	11cec <__errno_location@plt>
   19470:	cmp	r6, #12
   19474:	bne	19560 <mount@plt+0x7604>
   19478:	mov	ip, r5
   1947c:	mov	r2, #0
   19480:	str	r2, [r0]
   19484:	ldrb	r3, [ip], #1
   19488:	cmp	r3, r2
   1948c:	beq	194dc <mount@plt+0x7580>
   19490:	sub	r3, r3, #48	; 0x30
   19494:	cmp	r3, #9
   19498:	bhi	194d8 <mount@plt+0x757c>
   1949c:	mov	r0, r2
   194a0:	b	194b0 <mount@plt+0x7554>
   194a4:	cmp	r3, #9
   194a8:	bhi	194d0 <mount@plt+0x7574>
   194ac:	mov	r0, lr
   194b0:	ldrb	r1, [ip], #1
   194b4:	add	r2, r2, r2, lsl #2
   194b8:	add	lr, r0, #1
   194bc:	add	r2, r3, r2, lsl #1
   194c0:	cmp	r1, #0
   194c4:	sub	r3, r1, #48	; 0x30
   194c8:	uxth	r2, r2
   194cc:	bne	194a4 <mount@plt+0x7548>
   194d0:	cmp	r2, #63	; 0x3f
   194d4:	bls	194e4 <mount@plt+0x7588>
   194d8:	mov	r3, #0
   194dc:	mov	r0, r3
   194e0:	pop	{r4, r5, r6, pc}
   194e4:	ldrb	r3, [r5, lr]
   194e8:	cmp	r3, #46	; 0x2e
   194ec:	bne	194d8 <mount@plt+0x757c>
   194f0:	add	r0, r0, #2
   194f4:	add	ip, r5, r0
   194f8:	ldrb	r3, [r5, r0]
   194fc:	add	ip, ip, #1
   19500:	cmp	r3, #0
   19504:	beq	194dc <mount@plt+0x7580>
   19508:	sub	r3, r3, #48	; 0x30
   1950c:	cmp	r3, #9
   19510:	bhi	194d8 <mount@plt+0x757c>
   19514:	mov	r1, #0
   19518:	b	19524 <mount@plt+0x75c8>
   1951c:	cmp	r3, #9
   19520:	bhi	19540 <mount@plt+0x75e4>
   19524:	ldrb	r0, [ip], #1
   19528:	add	r1, r1, r1, lsl #2
   1952c:	add	r1, r3, r1, lsl #1
   19530:	cmp	r0, #0
   19534:	sub	r3, r0, #48	; 0x30
   19538:	uxth	r1, r1
   1953c:	bne	1951c <mount@plt+0x75c0>
   19540:	cmp	r1, #1024	; 0x400
   19544:	bcs	194d8 <mount@plt+0x757c>
   19548:	mov	r3, #2
   1954c:	orr	r2, r1, r2, lsl #10
   19550:	strh	r3, [r4]
   19554:	strh	r2, [r4, #2]
   19558:	mov	r3, #1
   1955c:	b	194dc <mount@plt+0x7580>
   19560:	mov	r2, #97	; 0x61
   19564:	mvn	r3, #0
   19568:	str	r2, [r0]
   1956c:	b	194dc <mount@plt+0x7580>
   19570:	push	{r4, r5, r6, r7, r8, lr}
   19574:	mov	r7, r0
   19578:	mov	r5, r1
   1957c:	mov	r4, r2
   19580:	mov	r6, r3
   19584:	bl	11cec <__errno_location@plt>
   19588:	cmp	r7, #4
   1958c:	beq	195a0 <mount@plt+0x7644>
   19590:	mov	r3, #97	; 0x61
   19594:	str	r3, [r0]
   19598:	mov	r0, #0
   1959c:	pop	{r4, r5, r6, r7, r8, pc}
   195a0:	mov	r2, #0
   195a4:	cmp	r6, #0
   195a8:	str	r2, [r0]
   195ac:	beq	19604 <mount@plt+0x76a8>
   195b0:	ldr	ip, [r5]
   195b4:	sub	r1, r4, #1
   195b8:	rev	ip, ip
   195bc:	lsr	ip, ip, #28
   195c0:	and	ip, ip, #15
   195c4:	add	r2, r2, #1
   195c8:	cmp	ip, #9
   195cc:	uxtb	ip, ip
   195d0:	add	r3, ip, #48	; 0x30
   195d4:	addhi	r3, ip, #55	; 0x37
   195d8:	rsb	ip, r2, r2, lsl #30
   195dc:	cmp	r2, #8
   195e0:	lsl	ip, ip, #2
   195e4:	strb	r3, [r1, #1]!
   195e8:	add	r3, ip, #28
   195ec:	beq	1960c <mount@plt+0x76b0>
   195f0:	ldr	ip, [r5]
   195f4:	cmp	r6, r2
   195f8:	rev	ip, ip
   195fc:	lsr	ip, ip, r3
   19600:	bne	195c0 <mount@plt+0x7664>
   19604:	mov	r0, r4
   19608:	pop	{r4, r5, r6, r7, r8, pc}
   1960c:	cmp	r6, #8
   19610:	beq	19604 <mount@plt+0x76a8>
   19614:	add	r5, r5, #4
   19618:	mov	r2, #9
   1961c:	add	r0, r4, #1
   19620:	mov	r3, #46	; 0x2e
   19624:	strb	r3, [r4, #8]
   19628:	ldrb	r3, [r5], #1
   1962c:	cmp	r6, r2
   19630:	lsr	r3, r3, #4
   19634:	beq	19604 <mount@plt+0x76a8>
   19638:	cmp	r3, #9
   1963c:	uxtb	r3, r3
   19640:	add	r1, r3, #48	; 0x30
   19644:	addhi	r1, r3, #55	; 0x37
   19648:	add	r3, r2, #1
   1964c:	cmp	r6, r3
   19650:	strb	r1, [r4, r2]
   19654:	beq	19604 <mount@plt+0x76a8>
   19658:	ldrb	r3, [r5, #-1]
   1965c:	and	r3, r3, #15
   19660:	cmp	r3, #9
   19664:	add	r1, r3, #48	; 0x30
   19668:	addhi	r1, r3, #55	; 0x37
   1966c:	strb	r1, [r0, r2]
   19670:	add	r2, r2, #2
   19674:	cmp	r2, #21
   19678:	bne	19628 <mount@plt+0x76cc>
   1967c:	cmp	r6, #21
   19680:	movne	r3, #0
   19684:	strbne	r3, [r4, #21]
   19688:	b	19604 <mount@plt+0x76a8>
   1968c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19690:	sub	sp, sp, #8
   19694:	mov	r5, r0
   19698:	mov	r7, r1
   1969c:	mov	r8, r2
   196a0:	mov	r4, r3
   196a4:	bl	11cec <__errno_location@plt>
   196a8:	cmp	r5, #28
   196ac:	mov	r9, r0
   196b0:	beq	196c8 <mount@plt+0x776c>
   196b4:	mov	r3, #97	; 0x61
   196b8:	str	r3, [r0]
   196bc:	mov	r0, #0
   196c0:	add	sp, sp, #8
   196c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   196c8:	ldr	sl, [pc, #128]	; 19750 <mount@plt+0x77f4>
   196cc:	mov	r3, #0
   196d0:	add	sl, pc, sl
   196d4:	sub	r7, r7, #4
   196d8:	mov	r5, r8
   196dc:	str	r3, [r0]
   196e0:	b	196fc <mount@plt+0x77a0>
   196e4:	tst	r6, #256	; 0x100
   196e8:	bne	19744 <mount@plt+0x77e8>
   196ec:	subs	r4, r4, r0
   196f0:	add	r5, r5, r0
   196f4:	subne	r4, r4, #1
   196f8:	strbne	r3, [r5], #1
   196fc:	ldr	r6, [r7, #4]!
   19700:	mvn	r3, #0
   19704:	rev	r6, r6
   19708:	str	sl, [sp]
   1970c:	lsr	r2, r6, #12
   19710:	str	r2, [sp, #4]
   19714:	mov	r1, r4
   19718:	mov	r2, #1
   1971c:	mov	r0, r5
   19720:	bl	11f38 <__snprintf_chk@plt>
   19724:	mov	r3, #47	; 0x2f
   19728:	cmp	r4, r0
   1972c:	bhi	196e4 <mount@plt+0x7788>
   19730:	mvn	r3, #6
   19734:	mov	r0, #0
   19738:	str	r3, [r9]
   1973c:	add	sp, sp, #8
   19740:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19744:	mov	r0, r8
   19748:	add	sp, sp, #8
   1974c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19750:	andeq	r3, r0, ip, lsr #25
   19754:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19758:	lsr	r5, r3, #2
   1975c:	ldr	r6, [pc, #268]	; 19870 <mount@plt+0x7914>
   19760:	ldr	ip, [pc, #268]	; 19874 <mount@plt+0x7918>
   19764:	add	r6, pc, r6
   19768:	sub	sp, sp, #8
   1976c:	ldr	r7, [r6, ip]
   19770:	mov	r8, r0
   19774:	mov	sl, r1
   19778:	ldr	r3, [r7]
   1977c:	mov	r4, r2
   19780:	str	r3, [sp, #4]
   19784:	bl	11cec <__errno_location@plt>
   19788:	cmp	r8, #28
   1978c:	bne	1985c <mount@plt+0x7900>
   19790:	cmp	r5, #0
   19794:	mov	r3, #0
   19798:	str	r3, [r0]
   1979c:	ldrne	r8, [pc, #212]	; 19878 <mount@plt+0x791c>
   197a0:	addne	r5, r4, r5, lsl #2
   197a4:	movne	r9, sp
   197a8:	bne	197e8 <mount@plt+0x788c>
   197ac:	b	19824 <mount@plt+0x78c8>
   197b0:	ldr	r3, [sp]
   197b4:	cmp	r3, sl
   197b8:	beq	19804 <mount@plt+0x78a8>
   197bc:	lsl	r0, r0, #12
   197c0:	rev	r0, r0
   197c4:	str	r0, [r4], #4
   197c8:	ldrb	r2, [r3]
   197cc:	cmp	r2, #0
   197d0:	beq	1984c <mount@plt+0x78f0>
   197d4:	cmp	r2, #47	; 0x2f
   197d8:	bne	19804 <mount@plt+0x78a8>
   197dc:	cmp	r4, r5
   197e0:	add	sl, r3, #1
   197e4:	beq	19824 <mount@plt+0x78c8>
   197e8:	mov	r1, r9
   197ec:	mov	r2, #0
   197f0:	mov	r0, sl
   197f4:	bl	11cc8 <strtoul@plt>
   197f8:	mov	r1, r4
   197fc:	cmp	r0, r8
   19800:	bls	197b0 <mount@plt+0x7854>
   19804:	mov	r1, #0
   19808:	ldr	r2, [sp, #4]
   1980c:	ldr	r3, [r7]
   19810:	mov	r0, r1
   19814:	cmp	r2, r3
   19818:	bne	1986c <mount@plt+0x7910>
   1981c:	add	sp, sp, #8
   19820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19824:	ldr	r3, [pc, #80]	; 1987c <mount@plt+0x7920>
   19828:	ldr	r0, [pc, #80]	; 19880 <mount@plt+0x7924>
   1982c:	mov	r1, #1
   19830:	ldr	r3, [r6, r3]
   19834:	mov	r2, #24
   19838:	add	r0, pc, r0
   1983c:	ldr	r3, [r3]
   19840:	bl	11b6c <fwrite@plt>
   19844:	mov	r1, #0
   19848:	b	19808 <mount@plt+0x78ac>
   1984c:	orr	r0, r0, #65536	; 0x10000
   19850:	str	r0, [r1]
   19854:	mov	r1, #1
   19858:	b	19808 <mount@plt+0x78ac>
   1985c:	mov	r3, #97	; 0x61
   19860:	mvn	r1, #0
   19864:	str	r3, [r0]
   19868:	b	19808 <mount@plt+0x78ac>
   1986c:	bl	11ac4 <__stack_chk_fail@plt>
   19870:	muleq	r1, r4, r8
   19874:	andeq	r0, r0, r0, lsl #4
   19878:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   1987c:	andeq	r0, r0, ip, lsl #4
   19880:	andeq	r3, r0, ip, asr #24
   19884:	push	{r4, r5, r6, r7, r8, lr}
   19888:	mov	r7, r1
   1988c:	mov	r1, #3
   19890:	mov	r4, r0
   19894:	bl	11db8 <mnl_attr_type_valid@plt>
   19898:	ldr	r5, [pc, #140]	; 1992c <mount@plt+0x79d0>
   1989c:	add	r5, pc, r5
   198a0:	cmp	r0, #0
   198a4:	blt	198dc <mount@plt+0x7980>
   198a8:	mov	r0, r4
   198ac:	bl	11dd0 <mnl_attr_get_type@plt>
   198b0:	ldr	r2, [pc, #120]	; 19930 <mount@plt+0x79d4>
   198b4:	add	r2, pc, r2
   198b8:	mov	r6, r0
   198bc:	mov	r0, r4
   198c0:	ldr	r1, [r2, r6, lsl #2]
   198c4:	bl	11d64 <mnl_attr_validate@plt>
   198c8:	cmp	r0, #0
   198cc:	blt	19904 <mount@plt+0x79a8>
   198d0:	mov	r0, #1
   198d4:	str	r4, [r7, r6, lsl #2]
   198d8:	pop	{r4, r5, r6, r7, r8, pc}
   198dc:	ldr	r3, [pc, #80]	; 19934 <mount@plt+0x79d8>
   198e0:	ldr	r0, [pc, #80]	; 19938 <mount@plt+0x79dc>
   198e4:	mov	r2, #25
   198e8:	ldr	r3, [r5, r3]
   198ec:	mov	r1, #1
   198f0:	add	r0, pc, r0
   198f4:	ldr	r3, [r3]
   198f8:	bl	11b6c <fwrite@plt>
   198fc:	mvn	r0, #0
   19900:	pop	{r4, r5, r6, r7, r8, pc}
   19904:	ldr	r1, [pc, #40]	; 19934 <mount@plt+0x79d8>
   19908:	ldr	r2, [pc, #44]	; 1993c <mount@plt+0x79e0>
   1990c:	mov	r3, r6
   19910:	ldr	r0, [r5, r1]
   19914:	add	r2, pc, r2
   19918:	mov	r1, #1
   1991c:	ldr	r0, [r0]
   19920:	bl	11da0 <__fprintf_chk@plt>
   19924:	mvn	r0, #0
   19928:	pop	{r4, r5, r6, r7, r8, pc}
   1992c:	andeq	r4, r1, ip, asr r7
   19930:	andeq	r3, r0, ip, ror #23
   19934:	andeq	r0, r0, ip, lsl #4
   19938:	andeq	r3, r0, r0, asr #23
   1993c:			; <UNDEFINED> instruction: 0x00003bb8
   19940:	push	{r4, r5, r6, r7, r8, lr}
   19944:	mov	r7, r0
   19948:	ldr	r8, [pc, #180]	; 19a04 <mount@plt+0x7aa8>
   1994c:	sub	sp, sp, #8
   19950:	mov	r6, r1
   19954:	mov	r5, r2
   19958:	add	r8, pc, r8
   1995c:	b	19978 <mount@plt+0x7a1c>
   19960:	bl	11cec <__errno_location@plt>
   19964:	mov	r4, r0
   19968:	ldr	r0, [r0]
   1996c:	cmp	r0, #11
   19970:	cmpne	r0, #4
   19974:	bne	1999c <mount@plt+0x7a40>
   19978:	mov	r2, r5
   1997c:	mov	r1, r6
   19980:	mov	r0, r7
   19984:	bl	11e90 <recvmsg@plt>
   19988:	cmp	r0, #0
   1998c:	blt	19960 <mount@plt+0x7a04>
   19990:	beq	199dc <mount@plt+0x7a80>
   19994:	add	sp, sp, #8
   19998:	pop	{r4, r5, r6, r7, r8, pc}
   1999c:	ldr	r3, [pc, #100]	; 19a08 <mount@plt+0x7aac>
   199a0:	ldr	r3, [r8, r3]
   199a4:	ldr	r5, [r3]
   199a8:	bl	11c50 <strerror@plt>
   199ac:	ldr	r3, [r4]
   199b0:	ldr	r2, [pc, #84]	; 19a0c <mount@plt+0x7ab0>
   199b4:	str	r3, [sp]
   199b8:	add	r2, pc, r2
   199bc:	mov	r1, #1
   199c0:	mov	r3, r0
   199c4:	mov	r0, r5
   199c8:	bl	11da0 <__fprintf_chk@plt>
   199cc:	ldr	r0, [r4]
   199d0:	rsb	r0, r0, #0
   199d4:	add	sp, sp, #8
   199d8:	pop	{r4, r5, r6, r7, r8, pc}
   199dc:	ldr	r3, [pc, #36]	; 19a08 <mount@plt+0x7aac>
   199e0:	ldr	r0, [pc, #40]	; 19a10 <mount@plt+0x7ab4>
   199e4:	mov	r2, #15
   199e8:	ldr	r3, [r8, r3]
   199ec:	mov	r1, #1
   199f0:	add	r0, pc, r0
   199f4:	ldr	r3, [r3]
   199f8:	bl	11b6c <fwrite@plt>
   199fc:	mvn	r0, #60	; 0x3c
   19a00:	b	19994 <mount@plt+0x7a38>
   19a04:	andeq	r4, r1, r0, lsr #13
   19a08:	andeq	r0, r0, ip, lsl #4
   19a0c:	andeq	r3, r0, ip, asr #22
   19a10:	andeq	r3, r0, r4, lsl #22
   19a14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a18:	mov	r5, #0
   19a1c:	ldr	r4, [r1, #8]
   19a20:	mov	fp, r2
   19a24:	mov	r2, #34	; 0x22
   19a28:	str	r5, [r4]
   19a2c:	str	r5, [r4, #4]
   19a30:	mov	r7, r1
   19a34:	mov	sl, r0
   19a38:	bl	19940 <mount@plt+0x79e4>
   19a3c:	ldr	r8, [pc, #116]	; 19ab8 <mount@plt+0x7b5c>
   19a40:	add	r8, pc, r8
   19a44:	subs	r6, r0, #0
   19a48:	blt	19a7c <mount@plt+0x7b20>
   19a4c:	bl	11c38 <malloc@plt>
   19a50:	subs	r9, r0, #0
   19a54:	beq	19a90 <mount@plt+0x7b34>
   19a58:	str	r6, [r4, #4]
   19a5c:	str	r9, [r4]
   19a60:	mov	r2, r5
   19a64:	mov	r1, r7
   19a68:	mov	r0, sl
   19a6c:	bl	19940 <mount@plt+0x79e4>
   19a70:	subs	r6, r0, #0
   19a74:	strge	r9, [fp]
   19a78:	blt	19a84 <mount@plt+0x7b28>
   19a7c:	mov	r0, r6
   19a80:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a84:	mov	r0, r9
   19a88:	bl	11a1c <free@plt>
   19a8c:	b	19a7c <mount@plt+0x7b20>
   19a90:	ldr	r3, [pc, #36]	; 19abc <mount@plt+0x7b60>
   19a94:	ldr	r0, [pc, #36]	; 19ac0 <mount@plt+0x7b64>
   19a98:	mov	r2, #32
   19a9c:	ldr	r3, [r8, r3]
   19aa0:	mov	r1, #1
   19aa4:	add	r0, pc, r0
   19aa8:	ldr	r3, [r3]
   19aac:	mvn	r6, #11
   19ab0:	bl	11b6c <fwrite@plt>
   19ab4:	b	19a7c <mount@plt+0x7b20>
   19ab8:			; <UNDEFINED> instruction: 0x000145b8
   19abc:	andeq	r0, r0, ip, lsl #4
   19ac0:	andeq	r3, r0, r0, lsl #21
   19ac4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ac8:	sub	sp, sp, #32
   19acc:	ldr	r5, [pc, #448]	; 19c94 <mount@plt+0x7d38>
   19ad0:	ldr	r3, [pc, #448]	; 19c98 <mount@plt+0x7d3c>
   19ad4:	add	r5, pc, r5
   19ad8:	add	r4, sp, #12
   19adc:	ldr	r6, [r5, r3]
   19ae0:	mov	r7, r0
   19ae4:	mov	r2, #0
   19ae8:	ldr	r3, [r6]
   19aec:	mov	r8, r1
   19af0:	str	r3, [sp, #28]
   19af4:	str	r2, [r4, #4]
   19af8:	str	r2, [sp, #12]
   19afc:	str	r2, [r4, #8]
   19b00:	str	r2, [r4, #12]
   19b04:	bl	11e30 <mnl_nlmsg_get_payload@plt>
   19b08:	ldrh	r3, [r7, #6]
   19b0c:	tst	r3, #512	; 0x200
   19b10:	beq	19b40 <mount@plt+0x7be4>
   19b14:	tst	r3, #256	; 0x100
   19b18:	mov	sl, r0
   19b1c:	movne	r1, #20
   19b20:	beq	19bc0 <mount@plt+0x7c64>
   19b24:	ldr	r2, [pc, #368]	; 19c9c <mount@plt+0x7d40>
   19b28:	mov	r3, r4
   19b2c:	add	r2, pc, r2
   19b30:	mov	r0, r7
   19b34:	bl	11aa0 <mnl_attr_parse@plt>
   19b38:	cmp	r0, #1
   19b3c:	beq	19b5c <mount@plt+0x7c00>
   19b40:	mov	r0, #0
   19b44:	ldr	r2, [sp, #28]
   19b48:	ldr	r3, [r6]
   19b4c:	cmp	r2, r3
   19b50:	bne	19c90 <mount@plt+0x7d34>
   19b54:	add	sp, sp, #32
   19b58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19b5c:	ldr	r9, [sp, #16]
   19b60:	cmp	r9, #0
   19b64:	beq	19b74 <mount@plt+0x7c18>
   19b68:	mov	r0, r9
   19b6c:	bl	11dac <mnl_attr_get_str@plt>
   19b70:	mov	r9, r0
   19b74:	ldr	r2, [sp, #20]
   19b78:	cmp	r2, #0
   19b7c:	moveq	r1, r2
   19b80:	beq	19bac <mount@plt+0x7c50>
   19b84:	mov	r0, r2
   19b88:	bl	11e6c <mnl_attr_get_u32@plt>
   19b8c:	ldr	r3, [r7]
   19b90:	cmp	r3, r0
   19b94:	mov	r1, r0
   19b98:	bcc	19c58 <mount@plt+0x7cfc>
   19b9c:	ldrh	r3, [r7, #6]
   19ba0:	tst	r3, #256	; 0x100
   19ba4:	addeq	r2, sl, #4
   19ba8:	movne	r2, #0
   19bac:	cmp	r8, #0
   19bb0:	beq	19bd0 <mount@plt+0x7c74>
   19bb4:	mov	r0, r9
   19bb8:	blx	r8
   19bbc:	b	19b44 <mount@plt+0x7be8>
   19bc0:	add	r0, r0, #4
   19bc4:	bl	11ddc <mnl_nlmsg_get_payload_len@plt>
   19bc8:	add	r1, r0, #20
   19bcc:	b	19b24 <mount@plt+0x7bc8>
   19bd0:	cmp	r9, #0
   19bd4:	beq	19b40 <mount@plt+0x7be4>
   19bd8:	ldrb	r3, [r9]
   19bdc:	cmp	r3, #0
   19be0:	beq	19b40 <mount@plt+0x7be4>
   19be4:	ldr	r3, [pc, #180]	; 19ca0 <mount@plt+0x7d44>
   19be8:	ldr	r2, [sl]
   19bec:	ldr	r5, [r5, r3]
   19bf0:	cmp	r2, #0
   19bf4:	movne	r4, #1
   19bf8:	moveq	r4, #0
   19bfc:	ldr	r0, [r5]
   19c00:	beq	19c84 <mount@plt+0x7d28>
   19c04:	ldr	r3, [pc, #152]	; 19ca4 <mount@plt+0x7d48>
   19c08:	add	r3, pc, r3
   19c0c:	ldr	r2, [pc, #148]	; 19ca8 <mount@plt+0x7d4c>
   19c10:	mov	r1, #1
   19c14:	add	r2, pc, r2
   19c18:	str	r9, [sp]
   19c1c:	bl	11da0 <__fprintf_chk@plt>
   19c20:	mov	r0, r9
   19c24:	bl	11cd4 <strlen@plt>
   19c28:	add	r0, r9, r0
   19c2c:	ldrb	r3, [r0, #-1]
   19c30:	cmp	r3, #46	; 0x2e
   19c34:	beq	19c44 <mount@plt+0x7ce8>
   19c38:	ldr	r1, [r5]
   19c3c:	mov	r0, #46	; 0x2e
   19c40:	bl	11e24 <fputc@plt>
   19c44:	ldr	r1, [r5]
   19c48:	mov	r0, #10
   19c4c:	bl	11e24 <fputc@plt>
   19c50:	mov	r0, r4
   19c54:	b	19b44 <mount@plt+0x7be8>
   19c58:	ldr	r3, [pc, #64]	; 19ca0 <mount@plt+0x7d44>
   19c5c:	ldr	r0, [pc, #72]	; 19cac <mount@plt+0x7d50>
   19c60:	mov	r2, #38	; 0x26
   19c64:	ldr	r3, [r5, r3]
   19c68:	mov	r1, #1
   19c6c:	add	r0, pc, r0
   19c70:	ldr	r3, [r3]
   19c74:	bl	11b6c <fwrite@plt>
   19c78:	mov	r1, #0
   19c7c:	mov	r2, r1
   19c80:	b	19bac <mount@plt+0x7c50>
   19c84:	ldr	r3, [pc, #36]	; 19cb0 <mount@plt+0x7d54>
   19c88:	add	r3, pc, r3
   19c8c:	b	19c0c <mount@plt+0x7cb0>
   19c90:	bl	11ac4 <__stack_chk_fail@plt>
   19c94:	andeq	r4, r1, r4, lsr #10
   19c98:	andeq	r0, r0, r0, lsl #4
   19c9c:			; <UNDEFINED> instruction: 0xfffffd50
   19ca0:	andeq	r0, r0, ip, lsl #4
   19ca4:	andeq	r3, r0, r8, asr #18
   19ca8:	andeq	r3, r0, ip, ror #18
   19cac:	andeq	r3, r0, ip, ror #17
   19cb0:	andeq	r3, r0, r0, asr #17
   19cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cb8:	sub	sp, sp, #100	; 0x64
   19cbc:	ldr	fp, [pc, #1012]	; 1a0b8 <mount@plt+0x815c>
   19cc0:	ldr	ip, [pc, #1012]	; 1a0bc <mount@plt+0x8160>
   19cc4:	add	fp, pc, fp
   19cc8:	str	r2, [sp, #12]
   19ccc:	ldr	lr, [fp, ip]
   19cd0:	mov	r9, r3
   19cd4:	mov	r3, #0
   19cd8:	str	r3, [sp, #58]	; 0x3a
   19cdc:	str	r3, [sp, #54]	; 0x36
   19ce0:	strh	r3, [sp, #62]	; 0x3e
   19ce4:	str	r3, [sp, #80]	; 0x50
   19ce8:	str	r3, [sp, #84]	; 0x54
   19cec:	str	r3, [sp, #88]	; 0x58
   19cf0:	add	r3, sp, #52	; 0x34
   19cf4:	subs	ip, r2, #0
   19cf8:	str	r3, [sp, #64]	; 0x40
   19cfc:	ldr	r2, [lr]
   19d00:	ldrb	r3, [sp, #136]	; 0x88
   19d04:	mov	r7, r0
   19d08:	str	r2, [sp, #92]	; 0x5c
   19d0c:	mov	r0, #16
   19d10:	mov	r2, #12
   19d14:	str	lr, [sp, #28]
   19d18:	str	r1, [sp, #72]	; 0x48
   19d1c:	str	ip, [sp, #76]	; 0x4c
   19d20:	strh	r0, [sp, #52]	; 0x34
   19d24:	str	r2, [sp, #68]	; 0x44
   19d28:	str	r3, [sp, #36]	; 0x24
   19d2c:	beq	19fb4 <mount@plt+0x8058>
   19d30:	ldr	r3, [r7, #28]
   19d34:	add	r8, ip, r3
   19d38:	rsb	r2, r3, r3, lsl #29
   19d3c:	add	r1, r1, r2, lsl #3
   19d40:	ldr	r2, [r1, r3, lsl #3]
   19d44:	cmp	r9, #0
   19d48:	add	r3, r3, #1
   19d4c:	ldrheq	r0, [r2, #6]
   19d50:	str	r3, [r2, #8]
   19d54:	orreq	r0, r0, #4
   19d58:	strheq	r0, [r2, #6]
   19d5c:	cmp	r3, r8
   19d60:	bne	19d40 <mount@plt+0x7de4>
   19d64:	str	r8, [r7, #28]
   19d68:	add	r3, sp, #64	; 0x40
   19d6c:	mov	r1, r3
   19d70:	mov	r2, #0
   19d74:	ldr	r0, [r7]
   19d78:	str	r3, [sp, #24]
   19d7c:	bl	11a70 <sendmsg@plt>
   19d80:	cmp	r0, #0
   19d84:	blt	1a04c <mount@plt+0x80f0>
   19d88:	add	r3, sp, #44	; 0x2c
   19d8c:	str	r3, [sp, #72]	; 0x48
   19d90:	mov	r3, #0
   19d94:	str	r3, [sp, #8]
   19d98:	add	r3, sp, #40	; 0x28
   19d9c:	str	r3, [sp, #20]
   19da0:	ldr	r3, [pc, #792]	; 1a0c0 <mount@plt+0x8164>
   19da4:	mov	r2, #1
   19da8:	add	r3, pc, r3
   19dac:	str	r3, [sp, #4]
   19db0:	ldr	r3, [pc, #780]	; 1a0c4 <mount@plt+0x8168>
   19db4:	str	r2, [sp, #76]	; 0x4c
   19db8:	add	r3, pc, r3
   19dbc:	str	r3, [sp, #32]
   19dc0:	ldr	r2, [sp, #20]
   19dc4:	ldr	r1, [sp, #24]
   19dc8:	ldr	r0, [r7]
   19dcc:	bl	19a14 <mount@plt+0x7ab8>
   19dd0:	ldr	r3, [sp, #8]
   19dd4:	add	r3, r3, #1
   19dd8:	str	r3, [sp, #16]
   19ddc:	subs	r6, r0, #0
   19de0:	blt	19f24 <mount@plt+0x7fc8>
   19de4:	ldr	r3, [sp, #68]	; 0x44
   19de8:	cmp	r3, #12
   19dec:	bne	1a0a4 <mount@plt+0x8148>
   19df0:	ldr	r3, [sp, #12]
   19df4:	ldr	r5, [sp, #40]	; 0x28
   19df8:	sub	sl, r8, r3
   19dfc:	b	19e8c <mount@plt+0x7f30>
   19e00:	ldr	r4, [r5]
   19e04:	cmp	r4, r6
   19e08:	sub	r3, r4, #16
   19e0c:	movle	r2, #0
   19e10:	movgt	r2, #1
   19e14:	orrs	r2, r2, r3, lsr #31
   19e18:	bne	19f44 <mount@plt+0x7fe8>
   19e1c:	ldr	r2, [sp, #56]	; 0x38
   19e20:	cmp	r2, #0
   19e24:	bne	19e7c <mount@plt+0x7f20>
   19e28:	ldr	r0, [r5, #12]
   19e2c:	ldr	r1, [r7, #8]
   19e30:	cmp	r0, r1
   19e34:	bne	19e7c <mount@plt+0x7f20>
   19e38:	ldr	r1, [r5, #8]
   19e3c:	cmp	r1, r8
   19e40:	bhi	19e7c <mount@plt+0x7f20>
   19e44:	cmp	r1, sl
   19e48:	bcc	19e7c <mount@plt+0x7f20>
   19e4c:	ldrh	r1, [r5, #4]
   19e50:	cmp	r1, #2
   19e54:	beq	19ebc <mount@plt+0x7f60>
   19e58:	cmp	r9, #0
   19e5c:	bne	19fa4 <mount@plt+0x8048>
   19e60:	ldr	r3, [pc, #608]	; 1a0c8 <mount@plt+0x816c>
   19e64:	mov	r2, #20
   19e68:	mov	r1, #1
   19e6c:	ldr	r3, [fp, r3]
   19e70:	ldr	r0, [sp, #4]
   19e74:	ldr	r3, [r3]
   19e78:	bl	11b6c <fwrite@plt>
   19e7c:	add	r4, r4, #3
   19e80:	bic	r4, r4, #3
   19e84:	sub	r6, r6, r4
   19e88:	add	r5, r5, r4
   19e8c:	cmp	r6, #15
   19e90:	bhi	19e00 <mount@plt+0x7ea4>
   19e94:	ldr	r0, [sp, #40]	; 0x28
   19e98:	bl	11a1c <free@plt>
   19e9c:	ldr	r3, [sp, #88]	; 0x58
   19ea0:	tst	r3, #32
   19ea4:	bne	19f84 <mount@plt+0x8028>
   19ea8:	cmp	r6, #0
   19eac:	bne	1a07c <mount@plt+0x8120>
   19eb0:	ldr	r3, [sp, #16]
   19eb4:	str	r3, [sp, #8]
   19eb8:	b	19dc0 <mount@plt+0x7e64>
   19ebc:	cmp	r3, #19
   19ec0:	ldr	r6, [r5, #16]
   19ec4:	bls	1a01c <mount@plt+0x80c0>
   19ec8:	cmp	r6, #0
   19ecc:	beq	19fbc <mount@plt+0x8060>
   19ed0:	bl	11cec <__errno_location@plt>
   19ed4:	rsb	r3, r6, #0
   19ed8:	ldr	r2, [sp, #36]	; 0x24
   19edc:	str	r3, [r0]
   19ee0:	ldr	r3, [r7, #36]	; 0x24
   19ee4:	cmp	r3, #4
   19ee8:	moveq	r2, #0
   19eec:	andne	r2, r2, #1
   19ef0:	cmp	r2, #0
   19ef4:	bne	19fd4 <mount@plt+0x8078>
   19ef8:	ldr	r0, [sp, #40]	; 0x28
   19efc:	cmp	r9, #0
   19f00:	strne	r0, [r9]
   19f04:	beq	19fcc <mount@plt+0x8070>
   19f08:	ldr	r3, [sp, #12]
   19f0c:	ldr	r2, [sp, #16]
   19f10:	cmp	r3, r2
   19f14:	bhi	19eb0 <mount@plt+0x7f54>
   19f18:	cmp	r6, #0
   19f1c:	ldrne	r3, [sp, #8]
   19f20:	mvnne	r6, r3
   19f24:	ldr	r3, [sp, #28]
   19f28:	ldr	r2, [sp, #92]	; 0x5c
   19f2c:	mov	r0, r6
   19f30:	ldr	r3, [r3]
   19f34:	cmp	r2, r3
   19f38:	bne	1a0b4 <mount@plt+0x8158>
   19f3c:	add	sp, sp, #100	; 0x64
   19f40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f44:	ldr	r3, [pc, #380]	; 1a0c8 <mount@plt+0x816c>
   19f48:	ldr	r2, [sp, #88]	; 0x58
   19f4c:	ldr	r3, [fp, r3]
   19f50:	tst	r2, #32
   19f54:	ldr	r0, [r3]
   19f58:	beq	1a060 <mount@plt+0x8104>
   19f5c:	mov	r3, r0
   19f60:	ldr	r0, [pc, #356]	; 1a0cc <mount@plt+0x8170>
   19f64:	mov	r2, #18
   19f68:	mov	r1, #1
   19f6c:	add	r0, pc, r0
   19f70:	bl	11b6c <fwrite@plt>
   19f74:	ldr	r0, [sp, #40]	; 0x28
   19f78:	bl	11a1c <free@plt>
   19f7c:	mvn	r6, #0
   19f80:	b	19f24 <mount@plt+0x7fc8>
   19f84:	ldr	r3, [pc, #316]	; 1a0c8 <mount@plt+0x816c>
   19f88:	mov	r2, #18
   19f8c:	mov	r1, #1
   19f90:	ldr	r3, [fp, r3]
   19f94:	ldr	r0, [sp, #32]
   19f98:	ldr	r3, [r3]
   19f9c:	bl	11b6c <fwrite@plt>
   19fa0:	b	19eb0 <mount@plt+0x7f54>
   19fa4:	ldr	r3, [sp, #40]	; 0x28
   19fa8:	mov	r6, r2
   19fac:	str	r3, [r9]
   19fb0:	b	19f24 <mount@plt+0x7fc8>
   19fb4:	ldr	r8, [sp, #12]
   19fb8:	b	19d68 <mount@plt+0x7e0c>
   19fbc:	mov	r0, r5
   19fc0:	mov	r1, r6
   19fc4:	bl	19ac4 <mount@plt+0x7b68>
   19fc8:	b	19ef8 <mount@plt+0x7f9c>
   19fcc:	bl	11a1c <free@plt>
   19fd0:	b	19f08 <mount@plt+0x7fac>
   19fd4:	mov	r1, #0
   19fd8:	mov	r0, r5
   19fdc:	bl	19ac4 <mount@plt+0x7b68>
   19fe0:	cmp	r0, #0
   19fe4:	bne	19ef8 <mount@plt+0x7f9c>
   19fe8:	ldr	r3, [pc, #216]	; 1a0c8 <mount@plt+0x816c>
   19fec:	ldr	r0, [r5, #16]
   19ff0:	ldr	r3, [fp, r3]
   19ff4:	rsb	r0, r0, #0
   19ff8:	ldr	r4, [r3]
   19ffc:	bl	11c50 <strerror@plt>
   1a000:	ldr	r2, [pc, #200]	; 1a0d0 <mount@plt+0x8174>
   1a004:	mov	r1, #1
   1a008:	add	r2, pc, r2
   1a00c:	mov	r3, r0
   1a010:	mov	r0, r4
   1a014:	bl	11da0 <__fprintf_chk@plt>
   1a018:	b	19ef8 <mount@plt+0x7f9c>
   1a01c:	ldr	r3, [pc, #164]	; 1a0c8 <mount@plt+0x816c>
   1a020:	ldr	r0, [pc, #172]	; 1a0d4 <mount@plt+0x8178>
   1a024:	mov	r2, #16
   1a028:	ldr	r3, [fp, r3]
   1a02c:	mov	r1, #1
   1a030:	add	r0, pc, r0
   1a034:	ldr	r3, [r3]
   1a038:	bl	11b6c <fwrite@plt>
   1a03c:	ldr	r0, [sp, #40]	; 0x28
   1a040:	mvn	r6, #0
   1a044:	bl	11a1c <free@plt>
   1a048:	b	19f24 <mount@plt+0x7fc8>
   1a04c:	ldr	r0, [pc, #132]	; 1a0d8 <mount@plt+0x817c>
   1a050:	mvn	r6, #0
   1a054:	add	r0, pc, r0
   1a058:	bl	11b24 <perror@plt>
   1a05c:	b	19f24 <mount@plt+0x7fc8>
   1a060:	ldr	r2, [pc, #116]	; 1a0dc <mount@plt+0x8180>
   1a064:	mov	r3, r4
   1a068:	add	r2, pc, r2
   1a06c:	mov	r1, #1
   1a070:	bl	11da0 <__fprintf_chk@plt>
   1a074:	mov	r0, #1
   1a078:	bl	11cb0 <exit@plt>
   1a07c:	ldr	r2, [pc, #92]	; 1a0e0 <mount@plt+0x8184>
   1a080:	ldr	r1, [pc, #64]	; 1a0c8 <mount@plt+0x816c>
   1a084:	mov	r3, r6
   1a088:	add	r2, pc, r2
   1a08c:	ldr	r0, [fp, r1]
   1a090:	mov	r1, #1
   1a094:	ldr	r0, [r0]
   1a098:	bl	11da0 <__fprintf_chk@plt>
   1a09c:	mov	r0, #1
   1a0a0:	bl	11cb0 <exit@plt>
   1a0a4:	ldr	r2, [pc, #56]	; 1a0e4 <mount@plt+0x8188>
   1a0a8:	ldr	r1, [pc, #24]	; 1a0c8 <mount@plt+0x816c>
   1a0ac:	add	r2, pc, r2
   1a0b0:	b	1a08c <mount@plt+0x8130>
   1a0b4:	bl	11ac4 <__stack_chk_fail@plt>
   1a0b8:	andeq	r4, r1, r4, lsr r3
   1a0bc:	andeq	r0, r0, r0, lsl #4
   1a0c0:	andeq	r3, r0, ip, ror r8
   1a0c4:	andeq	r3, r0, r4, lsl #17
   1a0c8:	andeq	r0, r0, ip, lsl #4
   1a0cc:	andeq	r3, r0, r8, asr r6
   1a0d0:	andeq	r3, r0, r4, lsl #12
   1a0d4:	andeq	r3, r0, r8, asr #11
   1a0d8:	andeq	r3, r0, r4, lsr r5
   1a0dc:	andeq	r3, r0, r0, ror r5
   1a0e0:	andeq	r3, r0, r8, asr #11
   1a0e4:	strdeq	r3, [r0], -r8
   1a0e8:	ldr	r3, [r0]
   1a0ec:	cmp	r3, #0
   1a0f0:	bxlt	lr
   1a0f4:	push	{r4, lr}
   1a0f8:	mov	r4, r0
   1a0fc:	mov	r0, r3
   1a100:	bl	11f08 <close@plt>
   1a104:	mvn	r3, #0
   1a108:	str	r3, [r4]
   1a10c:	pop	{r4, pc}
   1a110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a114:	mov	r9, r1
   1a118:	ldr	r7, [pc, #504]	; 1a318 <mount@plt+0x83bc>
   1a11c:	ldr	r3, [pc, #504]	; 1a31c <mount@plt+0x83c0>
   1a120:	add	r7, pc, r7
   1a124:	sub	sp, sp, #24
   1a128:	ldr	sl, [r7, r3]
   1a12c:	mov	r4, r0
   1a130:	mov	r5, r2
   1a134:	ldr	r1, [sl]
   1a138:	mov	r3, #32768	; 0x8000
   1a13c:	mov	r2, #48	; 0x30
   1a140:	str	r1, [sp, #20]
   1a144:	mov	r8, #1
   1a148:	mov	r1, #0
   1a14c:	str	r3, [sp, #12]
   1a150:	str	r8, [sp, #16]
   1a154:	bl	11d28 <memset@plt>
   1a158:	str	r5, [r4, #36]	; 0x24
   1a15c:	mov	r2, r5
   1a160:	ldr	r1, [pc, #440]	; 1a320 <mount@plt+0x83c4>
   1a164:	mov	r0, #16
   1a168:	bl	11eb4 <socket@plt>
   1a16c:	cmp	r0, #0
   1a170:	str	r0, [r4]
   1a174:	blt	1a2b0 <mount@plt+0x8354>
   1a178:	mov	r5, #4
   1a17c:	str	r5, [sp]
   1a180:	add	r3, sp, #12
   1a184:	mov	r2, #7
   1a188:	mov	r1, r8
   1a18c:	bl	119d4 <setsockopt@plt>
   1a190:	cmp	r0, #0
   1a194:	blt	1a2d8 <mount@plt+0x837c>
   1a198:	ldr	r3, [pc, #388]	; 1a324 <mount@plt+0x83c8>
   1a19c:	ldr	r0, [r4]
   1a1a0:	mov	r2, #8
   1a1a4:	ldr	r3, [r7, r3]
   1a1a8:	mov	r1, r8
   1a1ac:	str	r5, [sp]
   1a1b0:	bl	119d4 <setsockopt@plt>
   1a1b4:	cmp	r0, #0
   1a1b8:	blt	1a2c4 <mount@plt+0x8368>
   1a1bc:	mov	r6, r4
   1a1c0:	str	r5, [sp]
   1a1c4:	add	r3, sp, #16
   1a1c8:	ldr	r0, [r6], #4
   1a1cc:	mov	r2, #11
   1a1d0:	ldr	r1, [pc, #336]	; 1a328 <mount@plt+0x83cc>
   1a1d4:	bl	119d4 <setsockopt@plt>
   1a1d8:	mov	r5, #0
   1a1dc:	mov	ip, #16
   1a1e0:	str	r5, [r4, #6]
   1a1e4:	mov	r1, r6
   1a1e8:	strh	r5, [r4, #10]
   1a1ec:	mov	r2, #12
   1a1f0:	str	r9, [r4, #12]
   1a1f4:	ldr	r0, [r4]
   1a1f8:	strh	ip, [r4, #4]
   1a1fc:	bl	11d1c <bind@plt>
   1a200:	cmp	r0, r5
   1a204:	blt	1a2ec <mount@plt+0x8390>
   1a208:	mov	r3, #12
   1a20c:	mov	r1, r6
   1a210:	add	r2, sp, #8
   1a214:	ldr	r0, [r4]
   1a218:	str	r3, [sp, #8]
   1a21c:	bl	11e84 <getsockname@plt>
   1a220:	cmp	r0, #0
   1a224:	blt	1a300 <mount@plt+0x83a4>
   1a228:	ldr	r3, [sp, #8]
   1a22c:	cmp	r3, #12
   1a230:	bne	1a28c <mount@plt+0x8330>
   1a234:	ldrh	r3, [r4, #4]
   1a238:	cmp	r3, #16
   1a23c:	bne	1a268 <mount@plt+0x830c>
   1a240:	mov	r0, r5
   1a244:	bl	11a64 <time@plt>
   1a248:	str	r0, [r4, #28]
   1a24c:	ldr	r2, [sp, #20]
   1a250:	ldr	r3, [sl]
   1a254:	mov	r0, r5
   1a258:	cmp	r2, r3
   1a25c:	bne	1a314 <mount@plt+0x83b8>
   1a260:	add	sp, sp, #24
   1a264:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a268:	ldr	r2, [pc, #188]	; 1a32c <mount@plt+0x83d0>
   1a26c:	mov	r1, r8
   1a270:	mvn	r5, #0
   1a274:	ldr	r0, [r7, r2]
   1a278:	ldr	r2, [pc, #176]	; 1a330 <mount@plt+0x83d4>
   1a27c:	ldr	r0, [r0]
   1a280:	add	r2, pc, r2
   1a284:	bl	11da0 <__fprintf_chk@plt>
   1a288:	b	1a24c <mount@plt+0x82f0>
   1a28c:	ldr	r2, [pc, #152]	; 1a32c <mount@plt+0x83d0>
   1a290:	mov	r1, r8
   1a294:	mvn	r5, #0
   1a298:	ldr	r0, [r7, r2]
   1a29c:	ldr	r2, [pc, #144]	; 1a334 <mount@plt+0x83d8>
   1a2a0:	ldr	r0, [r0]
   1a2a4:	add	r2, pc, r2
   1a2a8:	bl	11da0 <__fprintf_chk@plt>
   1a2ac:	b	1a24c <mount@plt+0x82f0>
   1a2b0:	ldr	r0, [pc, #128]	; 1a338 <mount@plt+0x83dc>
   1a2b4:	mvn	r5, #0
   1a2b8:	add	r0, pc, r0
   1a2bc:	bl	11b24 <perror@plt>
   1a2c0:	b	1a24c <mount@plt+0x82f0>
   1a2c4:	ldr	r0, [pc, #112]	; 1a33c <mount@plt+0x83e0>
   1a2c8:	mvn	r5, #0
   1a2cc:	add	r0, pc, r0
   1a2d0:	bl	11b24 <perror@plt>
   1a2d4:	b	1a24c <mount@plt+0x82f0>
   1a2d8:	ldr	r0, [pc, #96]	; 1a340 <mount@plt+0x83e4>
   1a2dc:	mvn	r5, #0
   1a2e0:	add	r0, pc, r0
   1a2e4:	bl	11b24 <perror@plt>
   1a2e8:	b	1a24c <mount@plt+0x82f0>
   1a2ec:	ldr	r0, [pc, #80]	; 1a344 <mount@plt+0x83e8>
   1a2f0:	mvn	r5, #0
   1a2f4:	add	r0, pc, r0
   1a2f8:	bl	11b24 <perror@plt>
   1a2fc:	b	1a24c <mount@plt+0x82f0>
   1a300:	ldr	r0, [pc, #64]	; 1a348 <mount@plt+0x83ec>
   1a304:	mvn	r5, #0
   1a308:	add	r0, pc, r0
   1a30c:	bl	11b24 <perror@plt>
   1a310:	b	1a24c <mount@plt+0x82f0>
   1a314:	bl	11ac4 <__stack_chk_fail@plt>
   1a318:	ldrdeq	r3, [r1], -r8
   1a31c:	andeq	r0, r0, r0, lsl #4
   1a320:	andeq	r0, r8, r3
   1a324:	andeq	r0, r0, r0, lsl r2
   1a328:	andeq	r0, r0, lr, lsl #2
   1a32c:	andeq	r0, r0, ip, lsl #4
   1a330:	andeq	r3, r0, r8, ror #8
   1a334:	andeq	r3, r0, r8, lsr #8
   1a338:			; <UNDEFINED> instruction: 0x000033b0
   1a33c:	andeq	r3, r0, r4, asr #7
   1a340:	andeq	r3, r0, r4, lsr #7
   1a344:	andeq	r3, r0, r8, lsr #7
   1a348:			; <UNDEFINED> instruction: 0x000033b0
   1a34c:	mov	r2, #0
   1a350:	b	1a110 <mount@plt+0x81b4>
   1a354:	ldr	r3, [pc, #124]	; 1a3d8 <mount@plt+0x847c>
   1a358:	ldr	r2, [pc, #124]	; 1a3dc <mount@plt+0x8480>
   1a35c:	add	r3, pc, r3
   1a360:	push	{r4, lr}
   1a364:	sub	sp, sp, #32
   1a368:	ldr	r4, [r3, r2]
   1a36c:	ldr	r2, [r0, #28]
   1a370:	mov	r3, #0
   1a374:	ldr	lr, [r4]
   1a378:	add	r2, r2, #1
   1a37c:	str	r3, [sp, #20]
   1a380:	str	lr, [sp, #28]
   1a384:	strb	r1, [sp, #20]
   1a388:	ldr	lr, [pc, #80]	; 1a3e0 <mount@plt+0x8484>
   1a38c:	mov	r1, #24
   1a390:	str	r2, [r0, #28]
   1a394:	str	r2, [r0, #32]
   1a398:	str	r2, [sp, #12]
   1a39c:	str	r1, [sp, #4]
   1a3a0:	mov	r2, r1
   1a3a4:	ldr	r0, [r0]
   1a3a8:	add	r1, sp, #4
   1a3ac:	str	r3, [sp, #16]
   1a3b0:	str	r3, [sp, #24]
   1a3b4:	str	lr, [sp, #8]
   1a3b8:	bl	11f14 <send@plt>
   1a3bc:	ldr	r2, [sp, #28]
   1a3c0:	ldr	r3, [r4]
   1a3c4:	cmp	r2, r3
   1a3c8:	bne	1a3d4 <mount@plt+0x8478>
   1a3cc:	add	sp, sp, #32
   1a3d0:	pop	{r4, pc}
   1a3d4:	bl	11ac4 <__stack_chk_fail@plt>
   1a3d8:	muleq	r1, ip, ip
   1a3dc:	andeq	r0, r0, r0, lsl #4
   1a3e0:	movweq	r0, #4118	; 0x1016
   1a3e4:	ldr	r3, [pc, #128]	; 1a46c <mount@plt+0x8510>
   1a3e8:	ldr	r2, [pc, #128]	; 1a470 <mount@plt+0x8514>
   1a3ec:	add	r3, pc, r3
   1a3f0:	push	{r4, lr}
   1a3f4:	sub	sp, sp, #32
   1a3f8:	ldr	r4, [r3, r2]
   1a3fc:	ldr	ip, [r0, #28]
   1a400:	mov	r3, #0
   1a404:	add	ip, ip, #1
   1a408:	str	ip, [r0, #28]
   1a40c:	str	ip, [r0, #32]
   1a410:	str	r3, [sp, #16]
   1a414:	ldr	lr, [r4]
   1a418:	strb	r1, [sp, #16]
   1a41c:	str	ip, [sp, #8]
   1a420:	mov	r1, #28
   1a424:	ldr	ip, [pc, #72]	; 1a474 <mount@plt+0x8518>
   1a428:	mov	r2, r1
   1a42c:	str	r1, [sp]
   1a430:	ldr	r0, [r0]
   1a434:	mov	r1, sp
   1a438:	str	r3, [sp, #12]
   1a43c:	str	r3, [sp, #20]
   1a440:	str	r3, [sp, #24]
   1a444:	str	lr, [sp, #28]
   1a448:	str	ip, [sp, #4]
   1a44c:	bl	11f14 <send@plt>
   1a450:	ldr	r2, [sp, #28]
   1a454:	ldr	r3, [r4]
   1a458:	cmp	r2, r3
   1a45c:	bne	1a468 <mount@plt+0x850c>
   1a460:	add	sp, sp, #32
   1a464:	pop	{r4, pc}
   1a468:	bl	11ac4 <__stack_chk_fail@plt>
   1a46c:	andeq	r3, r1, ip, lsl #24
   1a470:	andeq	r0, r0, r0, lsl #4
   1a474:	movweq	r0, #4170	; 0x104a
   1a478:	ldr	r3, [pc, #128]	; 1a500 <mount@plt+0x85a4>
   1a47c:	ldr	r2, [pc, #128]	; 1a504 <mount@plt+0x85a8>
   1a480:	add	r3, pc, r3
   1a484:	push	{r4, lr}
   1a488:	sub	sp, sp, #32
   1a48c:	ldr	r4, [r3, r2]
   1a490:	ldr	ip, [r0, #28]
   1a494:	mov	r3, #0
   1a498:	add	ip, ip, #1
   1a49c:	str	ip, [r0, #28]
   1a4a0:	str	ip, [r0, #32]
   1a4a4:	str	r3, [sp, #16]
   1a4a8:	ldr	lr, [r4]
   1a4ac:	strb	r1, [sp, #16]
   1a4b0:	str	ip, [sp, #8]
   1a4b4:	mov	r1, #28
   1a4b8:	ldr	ip, [pc, #72]	; 1a508 <mount@plt+0x85ac>
   1a4bc:	mov	r2, r1
   1a4c0:	str	r1, [sp]
   1a4c4:	ldr	r0, [r0]
   1a4c8:	mov	r1, sp
   1a4cc:	str	r3, [sp, #12]
   1a4d0:	str	r3, [sp, #20]
   1a4d4:	str	r3, [sp, #24]
   1a4d8:	str	lr, [sp, #28]
   1a4dc:	str	ip, [sp, #4]
   1a4e0:	bl	11f14 <send@plt>
   1a4e4:	ldr	r2, [sp, #28]
   1a4e8:	ldr	r3, [r4]
   1a4ec:	cmp	r2, r3
   1a4f0:	bne	1a4fc <mount@plt+0x85a0>
   1a4f4:	add	sp, sp, #32
   1a4f8:	pop	{r4, pc}
   1a4fc:	bl	11ac4 <__stack_chk_fail@plt>
   1a500:	andeq	r3, r1, r8, ror fp
   1a504:	andeq	r0, r0, r0, lsl #4
   1a508:	movweq	r0, #4122	; 0x101a
   1a50c:	ldr	r3, [pc, #128]	; 1a594 <mount@plt+0x8638>
   1a510:	ldr	r2, [pc, #128]	; 1a598 <mount@plt+0x863c>
   1a514:	add	r3, pc, r3
   1a518:	push	{r4, lr}
   1a51c:	sub	sp, sp, #32
   1a520:	ldr	r4, [r3, r2]
   1a524:	ldr	ip, [r0, #28]
   1a528:	mov	r3, #0
   1a52c:	add	ip, ip, #1
   1a530:	str	ip, [r0, #28]
   1a534:	str	ip, [r0, #32]
   1a538:	str	r3, [sp, #16]
   1a53c:	ldr	lr, [r4]
   1a540:	strb	r1, [sp, #16]
   1a544:	str	ip, [sp, #8]
   1a548:	mov	r1, #28
   1a54c:	ldr	ip, [pc, #72]	; 1a59c <mount@plt+0x8640>
   1a550:	mov	r2, r1
   1a554:	str	r1, [sp]
   1a558:	ldr	r0, [r0]
   1a55c:	mov	r1, sp
   1a560:	str	r3, [sp, #12]
   1a564:	str	r3, [sp, #20]
   1a568:	str	r3, [sp, #24]
   1a56c:	str	lr, [sp, #28]
   1a570:	str	ip, [sp, #4]
   1a574:	bl	11f14 <send@plt>
   1a578:	ldr	r2, [sp, #28]
   1a57c:	ldr	r3, [r4]
   1a580:	cmp	r2, r3
   1a584:	bne	1a590 <mount@plt+0x8634>
   1a588:	add	sp, sp, #32
   1a58c:	pop	{r4, pc}
   1a590:	bl	11ac4 <__stack_chk_fail@plt>
   1a594:	andeq	r3, r1, r4, ror #21
   1a598:	andeq	r0, r0, r0, lsl #4
   1a59c:	movweq	r0, #4130	; 0x1022
   1a5a0:	ldr	r3, [pc, #128]	; 1a628 <mount@plt+0x86cc>
   1a5a4:	ldr	r2, [pc, #128]	; 1a62c <mount@plt+0x86d0>
   1a5a8:	add	r3, pc, r3
   1a5ac:	push	{r4, lr}
   1a5b0:	sub	sp, sp, #32
   1a5b4:	ldr	r4, [r3, r2]
   1a5b8:	ldr	ip, [r0, #28]
   1a5bc:	mov	r3, #0
   1a5c0:	add	ip, ip, #1
   1a5c4:	str	ip, [r0, #28]
   1a5c8:	str	ip, [r0, #32]
   1a5cc:	str	r3, [sp, #16]
   1a5d0:	ldr	lr, [r4]
   1a5d4:	strb	r1, [sp, #16]
   1a5d8:	str	ip, [sp, #8]
   1a5dc:	mov	r1, #28
   1a5e0:	ldr	ip, [pc, #72]	; 1a630 <mount@plt+0x86d4>
   1a5e4:	mov	r2, r1
   1a5e8:	str	r1, [sp]
   1a5ec:	ldr	r0, [r0]
   1a5f0:	mov	r1, sp
   1a5f4:	str	r3, [sp, #12]
   1a5f8:	str	r3, [sp, #20]
   1a5fc:	str	r3, [sp, #24]
   1a600:	str	lr, [sp, #28]
   1a604:	str	ip, [sp, #4]
   1a608:	bl	11f14 <send@plt>
   1a60c:	ldr	r2, [sp, #28]
   1a610:	ldr	r3, [r4]
   1a614:	cmp	r2, r3
   1a618:	bne	1a624 <mount@plt+0x86c8>
   1a61c:	add	sp, sp, #32
   1a620:	pop	{r4, pc}
   1a624:	bl	11ac4 <__stack_chk_fail@plt>
   1a628:	andeq	r3, r1, r0, asr sl
   1a62c:	andeq	r0, r0, r0, lsl #4
   1a630:	movweq	r0, #4126	; 0x101e
   1a634:	ldr	r2, [pc, #124]	; 1a6b8 <mount@plt+0x875c>
   1a638:	ldr	r3, [pc, #124]	; 1a6bc <mount@plt+0x8760>
   1a63c:	add	r2, pc, r2
   1a640:	push	{r4, lr}
   1a644:	sub	sp, sp, #24
   1a648:	ldr	r4, [r2, r3]
   1a64c:	ldr	r3, [r0, #28]
   1a650:	mov	r2, #0
   1a654:	add	r3, r3, #1
   1a658:	str	r2, [sp, #16]
   1a65c:	ldr	lr, [r4]
   1a660:	strb	r1, [sp, #16]
   1a664:	ldr	ip, [pc, #84]	; 1a6c0 <mount@plt+0x8764>
   1a668:	mov	r1, #20
   1a66c:	str	r3, [r0, #28]
   1a670:	str	r3, [r0, #32]
   1a674:	str	r3, [sp, #8]
   1a678:	str	r2, [sp, #12]
   1a67c:	mov	r3, r2
   1a680:	str	r1, [sp]
   1a684:	mov	r2, r1
   1a688:	ldr	r0, [r0]
   1a68c:	mov	r1, sp
   1a690:	str	lr, [sp, #20]
   1a694:	str	ip, [sp, #4]
   1a698:	bl	11f14 <send@plt>
   1a69c:	ldr	r2, [sp, #20]
   1a6a0:	ldr	r3, [r4]
   1a6a4:	cmp	r2, r3
   1a6a8:	bne	1a6b4 <mount@plt+0x8758>
   1a6ac:	add	sp, sp, #24
   1a6b0:	pop	{r4, pc}
   1a6b4:	bl	11ac4 <__stack_chk_fail@plt>
   1a6b8:			; <UNDEFINED> instruction: 0x000139bc
   1a6bc:	andeq	r0, r0, r0, lsl #4
   1a6c0:	movweq	r0, #4162	; 0x1042
   1a6c4:	ldr	r3, [pc, #124]	; 1a748 <mount@plt+0x87ec>
   1a6c8:	ldr	r2, [pc, #124]	; 1a74c <mount@plt+0x87f0>
   1a6cc:	add	r3, pc, r3
   1a6d0:	push	{r4, lr}
   1a6d4:	sub	sp, sp, #32
   1a6d8:	ldr	r4, [r3, r2]
   1a6dc:	ldr	r2, [r0, #28]
   1a6e0:	mov	r3, #0
   1a6e4:	ldr	lr, [r4]
   1a6e8:	add	r2, r2, #1
   1a6ec:	str	r3, [sp, #20]
   1a6f0:	str	lr, [sp, #28]
   1a6f4:	strb	r1, [sp, #20]
   1a6f8:	ldr	lr, [pc, #80]	; 1a750 <mount@plt+0x87f4>
   1a6fc:	mov	r1, #24
   1a700:	str	r2, [r0, #28]
   1a704:	str	r2, [r0, #32]
   1a708:	str	r2, [sp, #12]
   1a70c:	str	r1, [sp, #4]
   1a710:	mov	r2, r1
   1a714:	ldr	r0, [r0]
   1a718:	add	r1, sp, #4
   1a71c:	str	r3, [sp, #16]
   1a720:	str	r3, [sp, #24]
   1a724:	str	lr, [sp, #8]
   1a728:	bl	11f14 <send@plt>
   1a72c:	ldr	r2, [sp, #28]
   1a730:	ldr	r3, [r4]
   1a734:	cmp	r2, r3
   1a738:	bne	1a744 <mount@plt+0x87e8>
   1a73c:	add	sp, sp, #32
   1a740:	pop	{r4, pc}
   1a744:	bl	11ac4 <__stack_chk_fail@plt>
   1a748:	andeq	r3, r1, ip, lsr #18
   1a74c:	andeq	r0, r0, r0, lsl #4
   1a750:	movweq	r0, #4182	; 0x1056
   1a754:	ldr	r2, [pc, #124]	; 1a7d8 <mount@plt+0x887c>
   1a758:	ldr	r3, [pc, #124]	; 1a7dc <mount@plt+0x8880>
   1a75c:	add	r2, pc, r2
   1a760:	push	{r4, lr}
   1a764:	sub	sp, sp, #24
   1a768:	ldr	r4, [r2, r3]
   1a76c:	ldr	r3, [r0, #28]
   1a770:	mov	r2, #0
   1a774:	add	r3, r3, #1
   1a778:	str	r2, [sp, #16]
   1a77c:	ldr	lr, [r4]
   1a780:	strb	r1, [sp, #16]
   1a784:	ldr	ip, [pc, #84]	; 1a7e0 <mount@plt+0x8884>
   1a788:	mov	r1, #20
   1a78c:	str	r3, [r0, #28]
   1a790:	str	r3, [r0, #32]
   1a794:	str	r3, [sp, #8]
   1a798:	str	r2, [sp, #12]
   1a79c:	mov	r3, r2
   1a7a0:	str	r1, [sp]
   1a7a4:	mov	r2, r1
   1a7a8:	ldr	r0, [r0]
   1a7ac:	mov	r1, sp
   1a7b0:	str	lr, [sp, #20]
   1a7b4:	str	ip, [sp, #4]
   1a7b8:	bl	11f14 <send@plt>
   1a7bc:	ldr	r2, [sp, #20]
   1a7c0:	ldr	r3, [r4]
   1a7c4:	cmp	r2, r3
   1a7c8:	bne	1a7d4 <mount@plt+0x8878>
   1a7cc:	add	sp, sp, #24
   1a7d0:	pop	{r4, pc}
   1a7d4:	bl	11ac4 <__stack_chk_fail@plt>
   1a7d8:	muleq	r1, ip, r8
   1a7dc:	andeq	r0, r0, r0, lsl #4
   1a7e0:	movweq	r0, #4178	; 0x1052
   1a7e4:	ldr	r2, [pc, #124]	; 1a868 <mount@plt+0x890c>
   1a7e8:	ldr	r3, [pc, #124]	; 1a86c <mount@plt+0x8910>
   1a7ec:	add	r2, pc, r2
   1a7f0:	push	{r4, lr}
   1a7f4:	sub	sp, sp, #24
   1a7f8:	ldr	r4, [r2, r3]
   1a7fc:	ldr	r3, [r0, #28]
   1a800:	mov	r2, #0
   1a804:	add	r3, r3, #1
   1a808:	str	r2, [sp, #16]
   1a80c:	ldr	lr, [r4]
   1a810:	strb	r1, [sp, #16]
   1a814:	ldr	ip, [pc, #84]	; 1a870 <mount@plt+0x8914>
   1a818:	mov	r1, #20
   1a81c:	str	r3, [r0, #28]
   1a820:	str	r3, [r0, #32]
   1a824:	str	r3, [sp, #8]
   1a828:	str	r2, [sp, #12]
   1a82c:	mov	r3, r2
   1a830:	str	r1, [sp]
   1a834:	mov	r2, r1
   1a838:	ldr	r0, [r0]
   1a83c:	mov	r1, sp
   1a840:	str	lr, [sp, #20]
   1a844:	str	ip, [sp, #4]
   1a848:	bl	11f14 <send@plt>
   1a84c:	ldr	r2, [sp, #20]
   1a850:	ldr	r3, [r4]
   1a854:	cmp	r2, r3
   1a858:	bne	1a864 <mount@plt+0x8908>
   1a85c:	add	sp, sp, #24
   1a860:	pop	{r4, pc}
   1a864:	bl	11ac4 <__stack_chk_fail@plt>
   1a868:	andeq	r3, r1, ip, lsl #16
   1a86c:	andeq	r0, r0, r0, lsl #4
   1a870:	movweq	r0, #4186	; 0x105a
   1a874:	ldr	r3, [pc, #140]	; 1a908 <mount@plt+0x89ac>
   1a878:	ldr	ip, [pc, #140]	; 1a90c <mount@plt+0x89b0>
   1a87c:	add	r3, pc, r3
   1a880:	push	{r4, lr}
   1a884:	sub	sp, sp, #48	; 0x30
   1a888:	ldr	r4, [r3, ip]
   1a88c:	ldr	lr, [r0, #28]
   1a890:	str	r2, [sp, #40]	; 0x28
   1a894:	ldr	r3, [r4]
   1a898:	add	lr, lr, #1
   1a89c:	str	r3, [sp, #44]	; 0x2c
   1a8a0:	mov	r3, #0
   1a8a4:	str	r3, [sp, #20]
   1a8a8:	strb	r1, [sp, #20]
   1a8ac:	ldr	r1, [pc, #92]	; 1a910 <mount@plt+0x89b4>
   1a8b0:	str	lr, [r0, #28]
   1a8b4:	str	lr, [r0, #32]
   1a8b8:	str	lr, [sp, #12]
   1a8bc:	ldr	lr, [pc, #80]	; 1a914 <mount@plt+0x89b8>
   1a8c0:	mov	r2, #40	; 0x28
   1a8c4:	str	r1, [sp, #8]
   1a8c8:	ldr	r0, [r0]
   1a8cc:	add	r1, sp, #4
   1a8d0:	str	r3, [sp, #16]
   1a8d4:	str	r3, [sp, #24]
   1a8d8:	str	r3, [sp, #28]
   1a8dc:	str	r3, [sp, #32]
   1a8e0:	str	r2, [sp, #4]
   1a8e4:	str	lr, [sp, #36]	; 0x24
   1a8e8:	bl	11f14 <send@plt>
   1a8ec:	ldr	r2, [sp, #44]	; 0x2c
   1a8f0:	ldr	r3, [r4]
   1a8f4:	cmp	r2, r3
   1a8f8:	bne	1a904 <mount@plt+0x89a8>
   1a8fc:	add	sp, sp, #48	; 0x30
   1a900:	pop	{r4, pc}
   1a904:	bl	11ac4 <__stack_chk_fail@plt>
   1a908:	andeq	r3, r1, ip, ror r7
   1a90c:	andeq	r0, r0, r0, lsl #4
   1a910:	movweq	r0, #4114	; 0x1012
   1a914:	andseq	r0, sp, r8
   1a918:	mov	r2, #1
   1a91c:	b	1a874 <mount@plt+0x8918>
   1a920:	ldr	r3, [pc, #188]	; 1a9e4 <mount@plt+0x8a88>
   1a924:	ldr	ip, [pc, #188]	; 1a9e8 <mount@plt+0x8a8c>
   1a928:	add	r3, pc, r3
   1a92c:	push	{r4, r5, r6, r7, r8, lr}
   1a930:	sub	sp, sp, #1056	; 0x420
   1a934:	ldr	r6, [r3, ip]
   1a938:	sub	sp, sp, #8
   1a93c:	mov	r4, r0
   1a940:	ldr	ip, [r6]
   1a944:	add	r5, sp, #4
   1a948:	mov	r8, r1
   1a94c:	mov	r7, r2
   1a950:	mov	r1, #0
   1a954:	mov	r2, #1056	; 0x420
   1a958:	mov	r0, r5
   1a95c:	str	ip, [sp, #1060]	; 0x424
   1a960:	bl	11d28 <memset@plt>
   1a964:	ldr	r3, [r4, #28]
   1a968:	ldr	r1, [pc, #124]	; 1a9ec <mount@plt+0x8a90>
   1a96c:	add	r3, r3, #1
   1a970:	mov	r2, #32
   1a974:	cmp	r7, #0
   1a978:	strb	r8, [sp, #20]
   1a97c:	str	r3, [r4, #28]
   1a980:	str	r3, [r4, #32]
   1a984:	str	r3, [sp, #12]
   1a988:	str	r1, [sp, #8]
   1a98c:	str	r2, [sp, #4]
   1a990:	beq	1a9d8 <mount@plt+0x8a7c>
   1a994:	mov	r1, #1056	; 0x420
   1a998:	mov	r0, r5
   1a99c:	blx	r7
   1a9a0:	cmp	r0, #0
   1a9a4:	bne	1a9bc <mount@plt+0x8a60>
   1a9a8:	mov	r3, r0
   1a9ac:	mov	r1, r5
   1a9b0:	ldr	r0, [r4]
   1a9b4:	ldr	r2, [sp, #4]
   1a9b8:	bl	11f14 <send@plt>
   1a9bc:	ldr	r2, [sp, #1060]	; 0x424
   1a9c0:	ldr	r3, [r6]
   1a9c4:	cmp	r2, r3
   1a9c8:	bne	1a9e0 <mount@plt+0x8a84>
   1a9cc:	add	sp, sp, #1056	; 0x420
   1a9d0:	add	sp, sp, #8
   1a9d4:	pop	{r4, r5, r6, r7, r8, pc}
   1a9d8:	mvn	r0, #21
   1a9dc:	b	1a9bc <mount@plt+0x8a60>
   1a9e0:	bl	11ac4 <__stack_chk_fail@plt>
   1a9e4:	ldrdeq	r3, [r1], -r0
   1a9e8:	andeq	r0, r0, r0, lsl #4
   1a9ec:	movweq	r0, #4114	; 0x1012
   1a9f0:	ldr	r3, [pc, #128]	; 1aa78 <mount@plt+0x8b1c>
   1a9f4:	ldr	ip, [pc, #128]	; 1aa7c <mount@plt+0x8b20>
   1a9f8:	add	r3, pc, r3
   1a9fc:	push	{r4, lr}
   1aa00:	sub	sp, sp, #32
   1aa04:	ldr	r4, [r3, ip]
   1aa08:	ldr	r3, [r0, #28]
   1aa0c:	str	r2, [sp, #24]
   1aa10:	add	r2, r3, #1
   1aa14:	mov	r3, #0
   1aa18:	str	r3, [sp, #16]
   1aa1c:	ldr	ip, [r4]
   1aa20:	strb	r1, [sp, #16]
   1aa24:	ldr	lr, [pc, #84]	; 1aa80 <mount@plt+0x8b24>
   1aa28:	mov	r1, #28
   1aa2c:	str	r2, [r0, #28]
   1aa30:	str	r2, [r0, #32]
   1aa34:	str	r2, [sp, #8]
   1aa38:	str	r1, [sp]
   1aa3c:	mov	r2, r1
   1aa40:	ldr	r0, [r0]
   1aa44:	mov	r1, sp
   1aa48:	str	r3, [sp, #12]
   1aa4c:	str	r3, [sp, #20]
   1aa50:	str	ip, [sp, #28]
   1aa54:	str	lr, [sp, #4]
   1aa58:	bl	11f14 <send@plt>
   1aa5c:	ldr	r2, [sp, #28]
   1aa60:	ldr	r3, [r4]
   1aa64:	cmp	r2, r3
   1aa68:	bne	1aa74 <mount@plt+0x8b18>
   1aa6c:	add	sp, sp, #32
   1aa70:	pop	{r4, pc}
   1aa74:	bl	11ac4 <__stack_chk_fail@plt>
   1aa78:	andeq	r3, r1, r0, lsl #12
   1aa7c:	andeq	r0, r0, r0, lsl #4
   1aa80:	movweq	r0, #4190	; 0x105e
   1aa84:	ldr	r0, [r0]
   1aa88:	mov	r3, #0
   1aa8c:	b	11f14 <send@plt>
   1aa90:	push	{r4, r5, r6, r7, lr}
   1aa94:	sub	sp, sp, #1024	; 0x400
   1aa98:	ldr	r5, [pc, #288]	; 1abc0 <mount@plt+0x8c64>
   1aa9c:	ldr	ip, [pc, #288]	; 1abc4 <mount@plt+0x8c68>
   1aaa0:	add	r5, pc, r5
   1aaa4:	sub	sp, sp, #12
   1aaa8:	ldr	r6, [r5, ip]
   1aaac:	mov	r3, #0
   1aab0:	mov	r7, r0
   1aab4:	ldr	ip, [r6]
   1aab8:	ldr	r0, [r0]
   1aabc:	str	ip, [sp, #1028]	; 0x404
   1aac0:	bl	11f14 <send@plt>
   1aac4:	subs	r3, r0, #0
   1aac8:	blt	1ab40 <mount@plt+0x8be4>
   1aacc:	add	r4, sp, #4
   1aad0:	ldr	r0, [r7]
   1aad4:	mov	r1, r4
   1aad8:	mov	r3, #66	; 0x42
   1aadc:	mov	r2, #1024	; 0x400
   1aae0:	bl	11efc <recv@plt>
   1aae4:	cmp	r0, #0
   1aae8:	blt	1ab60 <mount@plt+0x8c04>
   1aaec:	cmp	r0, #15
   1aaf0:	ble	1ab3c <mount@plt+0x8be0>
   1aaf4:	ldr	r3, [sp, #4]
   1aaf8:	cmp	r3, #15
   1aafc:	bhi	1ab34 <mount@plt+0x8bd8>
   1ab00:	b	1ab3c <mount@plt+0x8be0>
   1ab04:	ldrh	r2, [r4, #4]
   1ab08:	cmp	r2, #2
   1ab0c:	beq	1ab74 <mount@plt+0x8c18>
   1ab10:	add	r3, r3, #3
   1ab14:	bic	r3, r3, #3
   1ab18:	sub	r0, r0, r3
   1ab1c:	cmp	r0, #15
   1ab20:	add	r4, r4, r3
   1ab24:	ble	1ab3c <mount@plt+0x8be0>
   1ab28:	ldr	r3, [r4]
   1ab2c:	cmp	r3, #15
   1ab30:	bls	1ab3c <mount@plt+0x8be0>
   1ab34:	cmp	r0, r3
   1ab38:	bcs	1ab04 <mount@plt+0x8ba8>
   1ab3c:	mov	r3, #0
   1ab40:	ldr	r1, [sp, #1028]	; 0x404
   1ab44:	ldr	r2, [r6]
   1ab48:	mov	r0, r3
   1ab4c:	cmp	r1, r2
   1ab50:	bne	1abbc <mount@plt+0x8c60>
   1ab54:	add	sp, sp, #1024	; 0x400
   1ab58:	add	sp, sp, #12
   1ab5c:	pop	{r4, r5, r6, r7, pc}
   1ab60:	bl	11cec <__errno_location@plt>
   1ab64:	ldr	r3, [r0]
   1ab68:	subs	r3, r3, #11
   1ab6c:	mvnne	r3, #0
   1ab70:	b	1ab40 <mount@plt+0x8be4>
   1ab74:	cmp	r3, #35	; 0x23
   1ab78:	bls	1ab94 <mount@plt+0x8c38>
   1ab7c:	bl	11cec <__errno_location@plt>
   1ab80:	ldr	r2, [r4, #16]
   1ab84:	mvn	r3, #0
   1ab88:	rsb	r2, r2, #0
   1ab8c:	str	r2, [r0]
   1ab90:	b	1ab40 <mount@plt+0x8be4>
   1ab94:	ldr	r3, [pc, #44]	; 1abc8 <mount@plt+0x8c6c>
   1ab98:	ldr	r0, [pc, #44]	; 1abcc <mount@plt+0x8c70>
   1ab9c:	mov	r2, #16
   1aba0:	ldr	r3, [r5, r3]
   1aba4:	mov	r1, #1
   1aba8:	add	r0, pc, r0
   1abac:	ldr	r3, [r3]
   1abb0:	bl	11b6c <fwrite@plt>
   1abb4:	mvn	r3, #0
   1abb8:	b	1ab40 <mount@plt+0x8be4>
   1abbc:	bl	11ac4 <__stack_chk_fail@plt>
   1abc0:	andeq	r3, r1, r8, asr r5
   1abc4:	andeq	r0, r0, r0, lsl #4
   1abc8:	andeq	r0, r0, ip, lsl #4
   1abcc:	andeq	r2, r0, r0, asr sl
   1abd0:	push	{r4, r5, lr}
   1abd4:	sub	sp, sp, #84	; 0x54
   1abd8:	ldr	r5, [pc, #192]	; 1aca0 <mount@plt+0x8d44>
   1abdc:	ldr	ip, [pc, #192]	; 1aca4 <mount@plt+0x8d48>
   1abe0:	add	r5, pc, r5
   1abe4:	ldr	lr, [r0, #28]
   1abe8:	ldr	r4, [r5, ip]
   1abec:	strh	r1, [sp, #20]
   1abf0:	str	r3, [sp, #72]	; 0x48
   1abf4:	ldr	r1, [r4]
   1abf8:	add	r3, r3, #16
   1abfc:	str	r1, [sp, #76]	; 0x4c
   1ac00:	mov	r1, #16
   1ac04:	str	r3, [sp, #16]
   1ac08:	add	r3, sp, r1
   1ac0c:	mov	ip, #0
   1ac10:	add	lr, lr, #1
   1ac14:	str	r3, [sp, #60]	; 0x3c
   1ac18:	add	r3, sp, #4
   1ac1c:	ldr	r5, [pc, #132]	; 1aca8 <mount@plt+0x8d4c>
   1ac20:	str	lr, [r0, #28]
   1ac24:	str	lr, [r0, #32]
   1ac28:	str	r2, [sp, #68]	; 0x44
   1ac2c:	str	lr, [sp, #24]
   1ac30:	mov	r2, ip
   1ac34:	str	ip, [sp, #28]
   1ac38:	str	ip, [sp, #6]
   1ac3c:	str	ip, [sp, #48]	; 0x30
   1ac40:	str	ip, [sp, #10]
   1ac44:	strh	ip, [sp, #14]
   1ac48:	str	ip, [sp, #52]	; 0x34
   1ac4c:	str	ip, [sp, #56]	; 0x38
   1ac50:	mov	lr, #12
   1ac54:	strh	r1, [sp, #4]
   1ac58:	str	r1, [sp, #64]	; 0x40
   1ac5c:	mov	ip, #2
   1ac60:	str	r3, [sp, #32]
   1ac64:	ldr	r0, [r0]
   1ac68:	add	r3, sp, #60	; 0x3c
   1ac6c:	add	r1, sp, #32
   1ac70:	str	r3, [sp, #40]	; 0x28
   1ac74:	strh	r5, [sp, #22]
   1ac78:	str	lr, [sp, #36]	; 0x24
   1ac7c:	str	ip, [sp, #44]	; 0x2c
   1ac80:	bl	11a70 <sendmsg@plt>
   1ac84:	ldr	r2, [sp, #76]	; 0x4c
   1ac88:	ldr	r3, [r4]
   1ac8c:	cmp	r2, r3
   1ac90:	bne	1ac9c <mount@plt+0x8d40>
   1ac94:	add	sp, sp, #84	; 0x54
   1ac98:	pop	{r4, r5, pc}
   1ac9c:	bl	11ac4 <__stack_chk_fail@plt>
   1aca0:	andeq	r3, r1, r8, lsl r4
   1aca4:	andeq	r0, r0, r0, lsl #4
   1aca8:	andeq	r0, r0, r1, lsl #6
   1acac:	ldr	r3, [pc, #176]	; 1ad64 <mount@plt+0x8e08>
   1acb0:	ldr	r2, [pc, #176]	; 1ad68 <mount@plt+0x8e0c>
   1acb4:	add	r3, pc, r3
   1acb8:	ldr	ip, [pc, #172]	; 1ad6c <mount@plt+0x8e10>
   1acbc:	push	{r4, lr}
   1acc0:	sub	sp, sp, #56	; 0x38
   1acc4:	ldr	r4, [r3, r2]
   1acc8:	ldr	r2, [r0, #28]
   1accc:	strh	ip, [r1, #6]
   1acd0:	ldr	ip, [r1]
   1acd4:	mov	r3, #0
   1acd8:	add	r2, r2, #1
   1acdc:	str	r3, [r1, #12]
   1ace0:	str	r2, [r0, #28]
   1ace4:	str	r2, [r0, #32]
   1ace8:	ldr	r0, [r0]
   1acec:	str	r2, [r1, #8]
   1acf0:	ldr	r2, [r4]
   1acf4:	stmib	sp, {r1, ip}
   1acf8:	mov	r1, #12
   1acfc:	str	r3, [sp, #14]
   1ad00:	str	r3, [sp, #40]	; 0x28
   1ad04:	str	r2, [sp, #52]	; 0x34
   1ad08:	str	r3, [sp, #18]
   1ad0c:	mov	r2, r3
   1ad10:	strh	r3, [sp, #22]
   1ad14:	mov	ip, #16
   1ad18:	str	r3, [sp, #44]	; 0x2c
   1ad1c:	str	r3, [sp, #48]	; 0x30
   1ad20:	add	r3, sp, r1
   1ad24:	strh	ip, [sp, #12]
   1ad28:	str	r3, [sp, #24]
   1ad2c:	mov	ip, #1
   1ad30:	add	r3, sp, #4
   1ad34:	str	r1, [sp, #28]
   1ad38:	add	r1, sp, #24
   1ad3c:	str	r3, [sp, #32]
   1ad40:	str	ip, [sp, #36]	; 0x24
   1ad44:	bl	11a70 <sendmsg@plt>
   1ad48:	ldr	r2, [sp, #52]	; 0x34
   1ad4c:	ldr	r3, [r4]
   1ad50:	cmp	r2, r3
   1ad54:	bne	1ad60 <mount@plt+0x8e04>
   1ad58:	add	sp, sp, #56	; 0x38
   1ad5c:	pop	{r4, pc}
   1ad60:	bl	11ac4 <__stack_chk_fail@plt>
   1ad64:	andeq	r3, r1, r4, asr #6
   1ad68:	andeq	r0, r0, r0, lsl #4
   1ad6c:	andeq	r0, r0, r1, lsl #6
   1ad70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad74:	sub	sp, sp, #116	; 0x74
   1ad78:	ldr	fp, [pc, #1076]	; 1b1b4 <mount@plt+0x9258>
   1ad7c:	ldr	r4, [pc, #1076]	; 1b1b8 <mount@plt+0x925c>
   1ad80:	ldr	lr, [pc, #1076]	; 1b1bc <mount@plt+0x9260>
   1ad84:	add	fp, pc, fp
   1ad88:	add	r4, pc, r4
   1ad8c:	str	r4, [sp, #28]
   1ad90:	ldr	lr, [fp, lr]
   1ad94:	strh	r3, [sp, #92]	; 0x5c
   1ad98:	add	r3, sp, #32
   1ad9c:	str	r3, [sp, #12]
   1ada0:	add	r3, sp, #56	; 0x38
   1ada4:	str	r3, [sp, #8]
   1ada8:	add	r3, sp, #44	; 0x2c
   1adac:	str	r3, [sp, #56]	; 0x38
   1adb0:	mov	r3, #12
   1adb4:	str	r2, [sp, #88]	; 0x58
   1adb8:	str	r3, [sp, #60]	; 0x3c
   1adbc:	ldr	r2, [lr]
   1adc0:	add	r3, sp, #36	; 0x24
   1adc4:	mov	r5, r0
   1adc8:	mov	r9, r1
   1adcc:	mov	ip, #0
   1add0:	str	r3, [sp, #64]	; 0x40
   1add4:	mov	r3, #1
   1add8:	str	lr, [sp, #16]
   1addc:	str	ip, [sp, #4]
   1ade0:	str	r1, [sp, #84]	; 0x54
   1ade4:	str	r2, [sp, #108]	; 0x6c
   1ade8:	str	ip, [sp, #96]	; 0x60
   1adec:	str	ip, [sp, #100]	; 0x64
   1adf0:	strh	ip, [sp, #104]	; 0x68
   1adf4:	str	ip, [sp, #72]	; 0x48
   1adf8:	str	ip, [sp, #76]	; 0x4c
   1adfc:	str	ip, [sp, #80]	; 0x50
   1ae00:	str	r3, [sp, #68]	; 0x44
   1ae04:	ldr	r2, [sp, #12]
   1ae08:	ldr	r1, [sp, #8]
   1ae0c:	ldr	r0, [r5]
   1ae10:	bl	19a14 <mount@plt+0x7ab8>
   1ae14:	subs	r7, r0, #0
   1ae18:	blt	1b13c <mount@plt+0x91e0>
   1ae1c:	ldr	r3, [r5, #40]	; 0x28
   1ae20:	ldr	r4, [sp, #32]
   1ae24:	cmp	r3, #0
   1ae28:	beq	1ae44 <mount@plt+0x8ee8>
   1ae2c:	add	r2, r7, #3
   1ae30:	mov	r0, r4
   1ae34:	bic	r2, r2, #3
   1ae38:	mov	r1, #1
   1ae3c:	bl	11b6c <fwrite@plt>
   1ae40:	ldr	r4, [sp, #32]
   1ae44:	cmp	r9, #0
   1ae48:	beq	1b108 <mount@plt+0x91ac>
   1ae4c:	mov	r3, #0
   1ae50:	cmp	r7, #15
   1ae54:	add	r6, sp, #84	; 0x54
   1ae58:	mov	r8, r9
   1ae5c:	str	r3, [sp, #20]
   1ae60:	str	r9, [sp, #24]
   1ae64:	ble	1af68 <mount@plt+0x900c>
   1ae68:	ldr	r0, [r4]
   1ae6c:	cmp	r0, #15
   1ae70:	bls	1af68 <mount@plt+0x900c>
   1ae74:	cmp	r0, r7
   1ae78:	mov	r9, r7
   1ae7c:	bhi	1af68 <mount@plt+0x900c>
   1ae80:	ldrsh	sl, [r6, #8]
   1ae84:	mvn	sl, sl
   1ae88:	b	1aec0 <mount@plt+0x8f64>
   1ae8c:	ldr	r3, [r4]
   1ae90:	add	r3, r3, #3
   1ae94:	bic	r3, r3, #3
   1ae98:	sub	r2, r9, r3
   1ae9c:	cmp	r2, #15
   1aea0:	add	r4, r4, r3
   1aea4:	mov	r9, r2
   1aea8:	ble	1af4c <mount@plt+0x8ff0>
   1aeac:	ldr	r0, [r4]
   1aeb0:	cmp	r0, #15
   1aeb4:	bls	1af4c <mount@plt+0x8ff0>
   1aeb8:	cmp	r2, r0
   1aebc:	bcc	1af4c <mount@plt+0x8ff0>
   1aec0:	ldrh	r3, [r4, #6]
   1aec4:	ldr	r1, [sp, #48]	; 0x30
   1aec8:	and	r3, r3, sl
   1aecc:	cmp	r1, #0
   1aed0:	strh	r3, [r4, #6]
   1aed4:	bne	1ae8c <mount@plt+0x8f30>
   1aed8:	ldr	ip, [r4, #12]
   1aedc:	ldr	r2, [r5, #8]
   1aee0:	cmp	ip, r2
   1aee4:	bne	1ae8c <mount@plt+0x8f30>
   1aee8:	ldr	ip, [r4, #8]
   1aeec:	ldr	r2, [r5, #32]
   1aef0:	cmp	ip, r2
   1aef4:	bne	1ae8c <mount@plt+0x8f30>
   1aef8:	ldrh	r2, [r4, #4]
   1aefc:	tst	r3, #16
   1af00:	ldr	r3, [sp, #4]
   1af04:	movne	r3, #1
   1af08:	cmp	r2, #3
   1af0c:	str	r3, [sp, #4]
   1af10:	beq	1afd0 <mount@plt+0x9074>
   1af14:	cmp	r2, #2
   1af18:	beq	1b018 <mount@plt+0x90bc>
   1af1c:	ldr	r3, [r5, #40]	; 0x28
   1af20:	cmp	r3, #0
   1af24:	bne	1ae8c <mount@plt+0x8f30>
   1af28:	ldr	r1, [r6, #4]
   1af2c:	mov	r0, r4
   1af30:	blx	r8
   1af34:	cmp	r0, #0
   1af38:	bge	1ae8c <mount@plt+0x8f30>
   1af3c:	mov	sl, r0
   1af40:	ldr	r0, [sp, #32]
   1af44:	bl	11a1c <free@plt>
   1af48:	b	1b054 <mount@plt+0x90f8>
   1af4c:	ldr	r8, [r6, #12]
   1af50:	ldr	r4, [sp, #32]
   1af54:	cmp	r8, #0
   1af58:	beq	1af78 <mount@plt+0x901c>
   1af5c:	cmp	r7, #15
   1af60:	add	r6, r6, #12
   1af64:	bgt	1ae68 <mount@plt+0x8f0c>
   1af68:	ldr	r8, [r6, #12]
   1af6c:	mov	r2, r7
   1af70:	cmp	r8, #0
   1af74:	bne	1af5c <mount@plt+0x9000>
   1af78:	mov	r0, r4
   1af7c:	mov	r6, r2
   1af80:	ldr	r9, [sp, #24]
   1af84:	bl	11a1c <free@plt>
   1af88:	ldr	r3, [sp, #20]
   1af8c:	cmp	r3, #0
   1af90:	bne	1b1a8 <mount@plt+0x924c>
   1af94:	ldr	r3, [sp, #80]	; 0x50
   1af98:	tst	r3, #32
   1af9c:	bne	1b11c <mount@plt+0x91c0>
   1afa0:	cmp	r6, #0
   1afa4:	mov	r3, r6
   1afa8:	beq	1ae04 <mount@plt+0x8ea8>
   1afac:	ldr	r1, [pc, #524]	; 1b1c0 <mount@plt+0x9264>
   1afb0:	ldr	r2, [pc, #524]	; 1b1c4 <mount@plt+0x9268>
   1afb4:	ldr	r0, [fp, r1]
   1afb8:	add	r2, pc, r2
   1afbc:	mov	r1, #1
   1afc0:	ldr	r0, [r0]
   1afc4:	bl	11da0 <__fprintf_chk@plt>
   1afc8:	mov	r0, #1
   1afcc:	bl	11cb0 <exit@plt>
   1afd0:	cmp	r0, #19
   1afd4:	ldr	r8, [r4, #16]
   1afd8:	bls	1b184 <mount@plt+0x9228>
   1afdc:	cmp	r8, #0
   1afe0:	bge	1b074 <mount@plt+0x9118>
   1afe4:	bl	11cec <__errno_location@plt>
   1afe8:	rsb	r8, r8, #0
   1afec:	cmp	r8, #90	; 0x5a
   1aff0:	str	r8, [r0]
   1aff4:	beq	1b0e4 <mount@plt+0x9188>
   1aff8:	cmp	r8, #95	; 0x5f
   1affc:	beq	1b048 <mount@plt+0x90ec>
   1b000:	cmp	r8, #2
   1b004:	beq	1b048 <mount@plt+0x90ec>
   1b008:	ldr	r0, [pc, #440]	; 1b1c8 <mount@plt+0x926c>
   1b00c:	add	r0, pc, r0
   1b010:	bl	11b24 <perror@plt>
   1b014:	b	1b048 <mount@plt+0x90ec>
   1b018:	cmp	r0, #35	; 0x23
   1b01c:	bls	1b098 <mount@plt+0x913c>
   1b020:	bl	11cec <__errno_location@plt>
   1b024:	ldr	r3, [r4, #16]
   1b028:	rsb	r2, r3, #0
   1b02c:	str	r2, [r0]
   1b030:	ldr	r2, [r5, #36]	; 0x24
   1b034:	cmp	r2, #4
   1b038:	beq	1b0bc <mount@plt+0x9160>
   1b03c:	ldr	r3, [r5, #44]	; 0x2c
   1b040:	tst	r3, #2
   1b044:	beq	1b0d4 <mount@plt+0x9178>
   1b048:	ldr	r0, [sp, #32]
   1b04c:	bl	11a1c <free@plt>
   1b050:	mvn	sl, #0
   1b054:	ldr	r3, [sp, #16]
   1b058:	ldr	r2, [sp, #108]	; 0x6c
   1b05c:	mov	r0, sl
   1b060:	ldr	r3, [r3]
   1b064:	cmp	r2, r3
   1b068:	bne	1b1b0 <mount@plt+0x9254>
   1b06c:	add	sp, sp, #116	; 0x74
   1b070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b074:	mov	r0, r4
   1b078:	bl	19ac4 <mount@plt+0x7b68>
   1b07c:	ldr	r8, [r6, #12]
   1b080:	cmp	r8, #0
   1b084:	beq	1b144 <mount@plt+0x91e8>
   1b088:	mov	r3, #1
   1b08c:	ldr	r4, [sp, #32]
   1b090:	str	r3, [sp, #20]
   1b094:	b	1af5c <mount@plt+0x9000>
   1b098:	ldr	r3, [pc, #288]	; 1b1c0 <mount@plt+0x9264>
   1b09c:	ldr	r0, [pc, #296]	; 1b1cc <mount@plt+0x9270>
   1b0a0:	mov	r2, #16
   1b0a4:	ldr	r3, [fp, r3]
   1b0a8:	mov	r1, #1
   1b0ac:	add	r0, pc, r0
   1b0b0:	ldr	r3, [r3]
   1b0b4:	bl	11b6c <fwrite@plt>
   1b0b8:	b	1b048 <mount@plt+0x90ec>
   1b0bc:	cmn	r3, #2
   1b0c0:	cmnne	r3, #95	; 0x5f
   1b0c4:	beq	1b048 <mount@plt+0x90ec>
   1b0c8:	ldr	r3, [r5, #44]	; 0x2c
   1b0cc:	tst	r3, #2
   1b0d0:	bne	1b048 <mount@plt+0x90ec>
   1b0d4:	ldr	r0, [pc, #244]	; 1b1d0 <mount@plt+0x9274>
   1b0d8:	add	r0, pc, r0
   1b0dc:	bl	11b24 <perror@plt>
   1b0e0:	b	1b048 <mount@plt+0x90ec>
   1b0e4:	ldr	r3, [pc, #212]	; 1b1c0 <mount@plt+0x9264>
   1b0e8:	ldr	r0, [pc, #228]	; 1b1d4 <mount@plt+0x9278>
   1b0ec:	mov	r2, #36	; 0x24
   1b0f0:	ldr	r3, [fp, r3]
   1b0f4:	mov	r1, #1
   1b0f8:	add	r0, pc, r0
   1b0fc:	ldr	r3, [r3]
   1b100:	bl	11b6c <fwrite@plt>
   1b104:	b	1b048 <mount@plt+0x90ec>
   1b108:	mov	r0, r4
   1b10c:	bl	11a1c <free@plt>
   1b110:	ldr	r3, [sp, #80]	; 0x50
   1b114:	tst	r3, #32
   1b118:	beq	1ae04 <mount@plt+0x8ea8>
   1b11c:	ldr	r3, [pc, #156]	; 1b1c0 <mount@plt+0x9264>
   1b120:	mov	r2, #18
   1b124:	mov	r1, #1
   1b128:	ldr	r3, [fp, r3]
   1b12c:	ldr	r0, [sp, #28]
   1b130:	ldr	r3, [r3]
   1b134:	bl	11b6c <fwrite@plt>
   1b138:	b	1ae04 <mount@plt+0x8ea8>
   1b13c:	mov	sl, r7
   1b140:	b	1b054 <mount@plt+0x90f8>
   1b144:	ldr	r0, [sp, #32]
   1b148:	bl	11a1c <free@plt>
   1b14c:	ldr	sl, [sp, #4]
   1b150:	ldr	r3, [sp, #4]
   1b154:	cmp	r3, #0
   1b158:	beq	1b054 <mount@plt+0x90f8>
   1b15c:	ldr	r3, [pc, #92]	; 1b1c0 <mount@plt+0x9264>
   1b160:	ldr	r0, [pc, #112]	; 1b1d8 <mount@plt+0x927c>
   1b164:	mov	r2, #46	; 0x2e
   1b168:	ldr	r3, [fp, r3]
   1b16c:	mov	r1, #1
   1b170:	add	r0, pc, r0
   1b174:	ldr	r3, [r3]
   1b178:	mov	sl, #0
   1b17c:	bl	11b6c <fwrite@plt>
   1b180:	b	1b054 <mount@plt+0x90f8>
   1b184:	ldr	r3, [pc, #52]	; 1b1c0 <mount@plt+0x9264>
   1b188:	ldr	r0, [pc, #76]	; 1b1dc <mount@plt+0x9280>
   1b18c:	mov	r2, #15
   1b190:	ldr	r3, [fp, r3]
   1b194:	mov	r1, #1
   1b198:	add	r0, pc, r0
   1b19c:	ldr	r3, [r3]
   1b1a0:	bl	11b6c <fwrite@plt>
   1b1a4:	b	1b048 <mount@plt+0x90ec>
   1b1a8:	ldr	sl, [sp, #4]
   1b1ac:	b	1b150 <mount@plt+0x91f4>
   1b1b0:	bl	11ac4 <__stack_chk_fail@plt>
   1b1b4:	andeq	r3, r1, r4, ror r2
   1b1b8:			; <UNDEFINED> instruction: 0x000028b4
   1b1bc:	andeq	r0, r0, r0, lsl #4
   1b1c0:	andeq	r0, r0, ip, lsl #4
   1b1c4:	muleq	r0, r8, r6
   1b1c8:	andeq	r2, r0, r0, lsr r7
   1b1cc:	andeq	r2, r0, ip, asr #10
   1b1d0:	andeq	r2, r0, r4, ror #12
   1b1d4:	andeq	r2, r0, ip, lsl r6
   1b1d8:	andeq	r2, r0, r0, ror #11
   1b1dc:	andeq	r2, r0, ip, ror #10
   1b1e0:	ldr	ip, [pc, #88]	; 1b240 <mount@plt+0x92e4>
   1b1e4:	push	{r4, lr}
   1b1e8:	add	ip, pc, ip
   1b1ec:	ldr	lr, [pc, #80]	; 1b244 <mount@plt+0x92e8>
   1b1f0:	sub	sp, sp, #24
   1b1f4:	mov	r3, r2
   1b1f8:	ldr	r4, [ip, lr]
   1b1fc:	mov	r2, ip
   1b200:	mov	r2, #1
   1b204:	ldr	lr, [r1]
   1b208:	str	r2, [sp]
   1b20c:	ldr	ip, [r4]
   1b210:	str	r1, [sp, #12]
   1b214:	add	r1, sp, #12
   1b218:	str	lr, [sp, #16]
   1b21c:	str	ip, [sp, #20]
   1b220:	bl	19cb4 <mount@plt+0x7d58>
   1b224:	ldr	r2, [sp, #20]
   1b228:	ldr	r3, [r4]
   1b22c:	cmp	r2, r3
   1b230:	bne	1b23c <mount@plt+0x92e0>
   1b234:	add	sp, sp, #24
   1b238:	pop	{r4, pc}
   1b23c:	bl	11ac4 <__stack_chk_fail@plt>
   1b240:	andeq	r2, r1, r0, lsl lr
   1b244:	andeq	r0, r0, r0, lsl #4
   1b248:	push	{lr}		; (str lr, [sp, #-4]!)
   1b24c:	sub	sp, sp, #12
   1b250:	mov	ip, #1
   1b254:	str	ip, [sp]
   1b258:	bl	19cb4 <mount@plt+0x7d58>
   1b25c:	add	sp, sp, #12
   1b260:	pop	{pc}		; (ldr pc, [sp], #4)
   1b264:	ldr	ip, [pc, #92]	; 1b2c8 <mount@plt+0x936c>
   1b268:	push	{r4, lr}
   1b26c:	add	ip, pc, ip
   1b270:	ldr	lr, [pc, #84]	; 1b2cc <mount@plt+0x9370>
   1b274:	sub	sp, sp, #24
   1b278:	mov	r3, r2
   1b27c:	ldr	r4, [ip, lr]
   1b280:	mov	r2, ip
   1b284:	mov	r2, #0
   1b288:	ldr	lr, [r1]
   1b28c:	str	r2, [sp]
   1b290:	ldr	ip, [r4]
   1b294:	str	r1, [sp, #12]
   1b298:	mov	r2, #1
   1b29c:	add	r1, sp, #12
   1b2a0:	str	lr, [sp, #16]
   1b2a4:	str	ip, [sp, #20]
   1b2a8:	bl	19cb4 <mount@plt+0x7d58>
   1b2ac:	ldr	r2, [sp, #20]
   1b2b0:	ldr	r3, [r4]
   1b2b4:	cmp	r2, r3
   1b2b8:	bne	1b2c4 <mount@plt+0x9368>
   1b2bc:	add	sp, sp, #24
   1b2c0:	pop	{r4, pc}
   1b2c4:	bl	11ac4 <__stack_chk_fail@plt>
   1b2c8:	andeq	r2, r1, ip, lsl #27
   1b2cc:	andeq	r0, r0, r0, lsl #4
   1b2d0:	ldr	r2, [pc, #136]	; 1b360 <mount@plt+0x9404>
   1b2d4:	ldr	r3, [pc, #136]	; 1b364 <mount@plt+0x9408>
   1b2d8:	add	r2, pc, r2
   1b2dc:	push	{r4, r5, lr}
   1b2e0:	sub	sp, sp, #20
   1b2e4:	ldr	r5, [r2, r3]
   1b2e8:	mov	r1, #4
   1b2ec:	mov	r4, r0
   1b2f0:	ldr	r0, [r0]
   1b2f4:	str	r1, [sp]
   1b2f8:	ldr	r1, [r5]
   1b2fc:	mov	ip, #1
   1b300:	str	r1, [sp, #12]
   1b304:	add	r3, sp, #8
   1b308:	ldr	r1, [pc, #88]	; 1b368 <mount@plt+0x940c>
   1b30c:	mov	r2, #8
   1b310:	str	ip, [sp, #8]
   1b314:	bl	119d4 <setsockopt@plt>
   1b318:	cmp	r0, #0
   1b31c:	blt	1b348 <mount@plt+0x93ec>
   1b320:	ldr	r3, [r4, #44]	; 0x2c
   1b324:	mov	r0, #0
   1b328:	orr	r3, r3, #1
   1b32c:	str	r3, [r4, #44]	; 0x2c
   1b330:	ldr	r2, [sp, #12]
   1b334:	ldr	r3, [r5]
   1b338:	cmp	r2, r3
   1b33c:	bne	1b35c <mount@plt+0x9400>
   1b340:	add	sp, sp, #20
   1b344:	pop	{r4, r5, pc}
   1b348:	ldr	r0, [pc, #28]	; 1b36c <mount@plt+0x9410>
   1b34c:	add	r0, pc, r0
   1b350:	bl	11b24 <perror@plt>
   1b354:	mvn	r0, #0
   1b358:	b	1b330 <mount@plt+0x93d4>
   1b35c:	bl	11ac4 <__stack_chk_fail@plt>
   1b360:	andeq	r2, r1, r0, lsr #26
   1b364:	andeq	r0, r0, r0, lsl #4
   1b368:	andeq	r0, r0, lr, lsl #2
   1b36c:	andeq	r2, r0, r4, lsr r4
   1b370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b374:	sub	sp, sp, #24576	; 0x6000
   1b378:	ldr	lr, [pc, #928]	; 1b720 <mount@plt+0x97c4>
   1b37c:	ldr	r3, [pc, #928]	; 1b724 <mount@plt+0x97c8>
   1b380:	sub	sp, sp, #92	; 0x5c
   1b384:	add	lr, pc, lr
   1b388:	str	lr, [sp, #16]
   1b38c:	ldr	r3, [lr, r3]
   1b390:	mov	r9, r2
   1b394:	add	r2, sp, #24576	; 0x6000
   1b398:	add	r2, r2, #84	; 0x54
   1b39c:	str	r3, [sp, #28]
   1b3a0:	ldr	r3, [r3]
   1b3a4:	add	r6, sp, #88	; 0x58
   1b3a8:	str	r3, [r2]
   1b3ac:	mov	r3, #16
   1b3b0:	strh	r3, [r6, #-44]	; 0xffffffd4
   1b3b4:	sub	r3, r6, #44	; 0x2c
   1b3b8:	str	r3, [r6, #-32]	; 0xffffffe0
   1b3bc:	mov	r3, #12
   1b3c0:	mov	sl, r0
   1b3c4:	str	r3, [r6, #-28]	; 0xffffffe4
   1b3c8:	ldr	r0, [r0, #44]	; 0x2c
   1b3cc:	sub	r3, r6, #52	; 0x34
   1b3d0:	str	r3, [r6, #-24]	; 0xffffffe8
   1b3d4:	mov	r3, #1
   1b3d8:	tst	r0, #1
   1b3dc:	str	r3, [r6, #-20]	; 0xffffffec
   1b3e0:	mov	r3, #0
   1b3e4:	str	r3, [r6, #-16]
   1b3e8:	str	r3, [r6, #-12]
   1b3ec:	str	r3, [r6, #-38]	; 0xffffffda
   1b3f0:	strh	r3, [r6, #-34]	; 0xffffffde
   1b3f4:	str	r3, [r6, #-42]	; 0xffffffd6
   1b3f8:	str	r3, [r6, #-8]
   1b3fc:	subne	r3, r6, #4
   1b400:	strne	r3, [r6, #-16]
   1b404:	add	r3, sp, #8256	; 0x2040
   1b408:	movne	r2, #8192	; 0x2000
   1b40c:	add	r3, r3, #24
   1b410:	mov	r8, r1
   1b414:	strne	r2, [r6, #-12]
   1b418:	str	r3, [sp, #20]
   1b41c:	add	r2, sp, #56	; 0x38
   1b420:	sub	r3, r3, #4
   1b424:	str	r2, [sp, #12]
   1b428:	str	r3, [sp, #24]
   1b42c:	str	r3, [r6, #-52]	; 0xffffffcc
   1b430:	mov	r3, #16384	; 0x4000
   1b434:	mov	r2, #0
   1b438:	ldr	r1, [sp, #12]
   1b43c:	ldr	r0, [sl]
   1b440:	str	r3, [r6, #-48]	; 0xffffffd0
   1b444:	bl	11e90 <recvmsg@plt>
   1b448:	subs	r5, r0, #0
   1b44c:	bge	1b4d4 <mount@plt+0x9578>
   1b450:	bl	11cec <__errno_location@plt>
   1b454:	mov	r4, r0
   1b458:	ldr	r0, [r0]
   1b45c:	cmp	r0, #11
   1b460:	cmpne	r0, #4
   1b464:	beq	1b430 <mount@plt+0x94d4>
   1b468:	ldr	r2, [sp, #16]
   1b46c:	ldr	r3, [pc, #692]	; 1b728 <mount@plt+0x97cc>
   1b470:	ldr	r3, [r2, r3]
   1b474:	ldr	r5, [r3]
   1b478:	bl	11c50 <strerror@plt>
   1b47c:	ldr	r3, [r4]
   1b480:	ldr	r2, [pc, #676]	; 1b72c <mount@plt+0x97d0>
   1b484:	str	r3, [sp]
   1b488:	add	r2, pc, r2
   1b48c:	mov	r1, #1
   1b490:	mov	r3, r0
   1b494:	mov	r0, r5
   1b498:	bl	11da0 <__fprintf_chk@plt>
   1b49c:	ldr	r3, [r4]
   1b4a0:	cmp	r3, #105	; 0x69
   1b4a4:	beq	1b430 <mount@plt+0x94d4>
   1b4a8:	mvn	r0, #0
   1b4ac:	add	r3, sp, #24576	; 0x6000
   1b4b0:	add	r3, r3, #84	; 0x54
   1b4b4:	ldr	r2, [r3]
   1b4b8:	ldr	r3, [sp, #28]
   1b4bc:	ldr	r3, [r3]
   1b4c0:	cmp	r2, r3
   1b4c4:	bne	1b6d8 <mount@plt+0x977c>
   1b4c8:	add	sp, sp, #24576	; 0x6000
   1b4cc:	add	sp, sp, #92	; 0x5c
   1b4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4d4:	beq	1b6b0 <mount@plt+0x9754>
   1b4d8:	ldr	r3, [r6, #-28]	; 0xffffffe4
   1b4dc:	cmp	r3, #12
   1b4e0:	bne	1b6f8 <mount@plt+0x979c>
   1b4e4:	ldr	r3, [sl, #44]	; 0x2c
   1b4e8:	tst	r3, #1
   1b4ec:	bne	1b5d8 <mount@plt+0x967c>
   1b4f0:	cmp	r5, #15
   1b4f4:	ble	1b67c <mount@plt+0x9720>
   1b4f8:	ldr	r3, [sp, #20]
   1b4fc:	ldr	r4, [r3, #-4]
   1b500:	cmp	r5, r4
   1b504:	sub	r2, r4, #16
   1b508:	movge	r3, #0
   1b50c:	movlt	r3, #1
   1b510:	orrs	r3, r3, r2, lsr #31
   1b514:	bne	1b574 <mount@plt+0x9618>
   1b518:	ldr	fp, [sp, #24]
   1b51c:	add	r7, sp, #32
   1b520:	b	1b558 <mount@plt+0x95fc>
   1b524:	add	r4, r4, #3
   1b528:	bic	r4, r4, #3
   1b52c:	sub	r5, r5, r4
   1b530:	cmp	r5, #15
   1b534:	add	fp, fp, r4
   1b538:	bls	1b5b0 <mount@plt+0x9654>
   1b53c:	ldr	r4, [fp]
   1b540:	cmp	r4, r5
   1b544:	sub	r2, r4, #16
   1b548:	movle	r3, #0
   1b54c:	movgt	r3, #1
   1b550:	orrs	r3, r3, r2, lsr #31
   1b554:	bne	1b574 <mount@plt+0x9618>
   1b558:	mov	r2, r9
   1b55c:	mov	r1, fp
   1b560:	mov	r0, r7
   1b564:	blx	r8
   1b568:	cmp	r0, #0
   1b56c:	bge	1b524 <mount@plt+0x95c8>
   1b570:	b	1b4ac <mount@plt+0x9550>
   1b574:	ldr	r3, [pc, #428]	; 1b728 <mount@plt+0x97cc>
   1b578:	ldr	r1, [sp, #16]
   1b57c:	ldr	r2, [r6, #-8]
   1b580:	ldr	r3, [r1, r3]
   1b584:	tst	r2, #32
   1b588:	ldr	r0, [r3]
   1b58c:	beq	1b6dc <mount@plt+0x9780>
   1b590:	mov	r3, r0
   1b594:	ldr	r0, [pc, #404]	; 1b730 <mount@plt+0x97d4>
   1b598:	mov	r2, #18
   1b59c:	mov	r1, #1
   1b5a0:	add	r0, pc, r0
   1b5a4:	bl	11b6c <fwrite@plt>
   1b5a8:	mvn	r0, #0
   1b5ac:	b	1b4ac <mount@plt+0x9550>
   1b5b0:	ldr	r3, [r6, #-8]
   1b5b4:	tst	r3, #32
   1b5b8:	bne	1b688 <mount@plt+0x972c>
   1b5bc:	cmp	r5, #0
   1b5c0:	beq	1b430 <mount@plt+0x94d4>
   1b5c4:	ldr	r2, [pc, #360]	; 1b734 <mount@plt+0x97d8>
   1b5c8:	ldr	r1, [pc, #344]	; 1b728 <mount@plt+0x97cc>
   1b5cc:	mov	r3, r5
   1b5d0:	add	r2, pc, r2
   1b5d4:	b	1b704 <mount@plt+0x97a8>
   1b5d8:	ldr	r0, [r6, #-12]
   1b5dc:	mvn	ip, #0
   1b5e0:	cmp	r0, #11
   1b5e4:	str	ip, [r6, #-56]	; 0xffffffc8
   1b5e8:	bls	1b4f0 <mount@plt+0x9594>
   1b5ec:	ldr	r3, [r6, #-16]
   1b5f0:	cmp	r3, #0
   1b5f4:	beq	1b4f0 <mount@plt+0x9594>
   1b5f8:	mov	r2, r3
   1b5fc:	ldr	r3, [r3]
   1b600:	add	r0, r2, r0
   1b604:	mov	lr, #0
   1b608:	ldr	r1, [r2, #4]
   1b60c:	ldr	r4, [pc, #292]	; 1b738 <mount@plt+0x97dc>
   1b610:	cmp	r1, r4
   1b614:	beq	1b65c <mount@plt+0x9700>
   1b618:	cmp	r3, #11
   1b61c:	bls	1b650 <mount@plt+0x96f4>
   1b620:	add	r3, r3, #3
   1b624:	bic	r3, r3, #3
   1b628:	add	r2, r2, r3
   1b62c:	add	r3, r2, #12
   1b630:	cmp	r0, r3
   1b634:	bcc	1b650 <mount@plt+0x96f4>
   1b638:	ldr	r3, [r2]
   1b63c:	add	r1, r3, #3
   1b640:	bic	r1, r1, #3
   1b644:	add	r1, r2, r1
   1b648:	cmp	r0, r1
   1b64c:	bcs	1b608 <mount@plt+0x96ac>
   1b650:	cmp	lr, #0
   1b654:	strne	ip, [r6, #-56]	; 0xffffffc8
   1b658:	b	1b4f0 <mount@plt+0x9594>
   1b65c:	ldr	r1, [r2, #8]
   1b660:	cmp	r1, #8
   1b664:	bne	1b618 <mount@plt+0x96bc>
   1b668:	cmp	r3, #16
   1b66c:	bne	1b618 <mount@plt+0x96bc>
   1b670:	ldr	ip, [r2, #12]
   1b674:	mov	lr, #1
   1b678:	b	1b620 <mount@plt+0x96c4>
   1b67c:	ldr	r3, [r6, #-8]
   1b680:	tst	r3, #32
   1b684:	beq	1b5c4 <mount@plt+0x9668>
   1b688:	ldr	r0, [sp, #16]
   1b68c:	ldr	r3, [pc, #148]	; 1b728 <mount@plt+0x97cc>
   1b690:	mov	r2, #18
   1b694:	mov	r1, #1
   1b698:	ldr	r3, [r0, r3]
   1b69c:	ldr	r0, [pc, #152]	; 1b73c <mount@plt+0x97e0>
   1b6a0:	ldr	r3, [r3]
   1b6a4:	add	r0, pc, r0
   1b6a8:	bl	11b6c <fwrite@plt>
   1b6ac:	b	1b430 <mount@plt+0x94d4>
   1b6b0:	ldr	r0, [sp, #16]
   1b6b4:	ldr	r3, [pc, #108]	; 1b728 <mount@plt+0x97cc>
   1b6b8:	mov	r2, #15
   1b6bc:	mov	r1, #1
   1b6c0:	ldr	r3, [r0, r3]
   1b6c4:	ldr	r0, [pc, #116]	; 1b740 <mount@plt+0x97e4>
   1b6c8:	ldr	r3, [r3]
   1b6cc:	add	r0, pc, r0
   1b6d0:	bl	11b6c <fwrite@plt>
   1b6d4:	b	1b4a8 <mount@plt+0x954c>
   1b6d8:	bl	11ac4 <__stack_chk_fail@plt>
   1b6dc:	ldr	r2, [pc, #96]	; 1b744 <mount@plt+0x97e8>
   1b6e0:	mov	r3, r4
   1b6e4:	add	r2, pc, r2
   1b6e8:	mov	r1, #1
   1b6ec:	bl	11da0 <__fprintf_chk@plt>
   1b6f0:	mov	r0, #1
   1b6f4:	bl	11cb0 <exit@plt>
   1b6f8:	ldr	r2, [pc, #72]	; 1b748 <mount@plt+0x97ec>
   1b6fc:	ldr	r1, [pc, #36]	; 1b728 <mount@plt+0x97cc>
   1b700:	add	r2, pc, r2
   1b704:	ldr	r0, [sp, #16]
   1b708:	ldr	r0, [r0, r1]
   1b70c:	mov	r1, #1
   1b710:	ldr	r0, [r0]
   1b714:	bl	11da0 <__fprintf_chk@plt>
   1b718:	mov	r0, #1
   1b71c:	bl	11cb0 <exit@plt>
   1b720:	andeq	r2, r1, r4, ror ip
   1b724:	andeq	r0, r0, r0, lsl #4
   1b728:	andeq	r0, r0, ip, lsl #4
   1b72c:	andeq	r2, r0, ip, ror r0
   1b730:	andeq	r2, r0, r4, lsr #32
   1b734:	andeq	r2, r0, r0, lsl #1
   1b738:	andeq	r0, r0, lr, lsl #2
   1b73c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1b740:	andeq	r1, r0, r8, lsr #28
   1b744:	strdeq	r1, [r0], -r4
   1b748:	muleq	r0, r8, r0
   1b74c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b750:	sub	sp, sp, #16384	; 0x4000
   1b754:	ldr	fp, [pc, #352]	; 1b8bc <mount@plt+0x9960>
   1b758:	ldr	r3, [pc, #352]	; 1b8c0 <mount@plt+0x9964>
   1b75c:	add	fp, pc, fp
   1b760:	sub	sp, sp, #28
   1b764:	ldr	r3, [fp, r3]
   1b768:	mov	r9, r2
   1b76c:	ldr	r8, [pc, #336]	; 1b8c4 <mount@plt+0x9968>
   1b770:	add	r2, sp, #16384	; 0x4000
   1b774:	str	r3, [sp, #8]
   1b778:	add	r2, r2, #20
   1b77c:	ldr	r3, [r3]
   1b780:	mov	r5, r0
   1b784:	mov	sl, r1
   1b788:	add	r7, sp, #24
   1b78c:	add	r6, sp, #20
   1b790:	str	r3, [r2]
   1b794:	mov	r3, r5
   1b798:	mov	r2, #16
   1b79c:	mov	r1, #1
   1b7a0:	mov	r0, r6
   1b7a4:	bl	11bcc <fread@plt>
   1b7a8:	cmp	r0, #0
   1b7ac:	blt	1b830 <mount@plt+0x98d4>
   1b7b0:	beq	1b808 <mount@plt+0x98ac>
   1b7b4:	ldr	r3, [r7, #-4]
   1b7b8:	sub	r4, r3, #16
   1b7bc:	cmp	r4, r8
   1b7c0:	bhi	1b854 <mount@plt+0x98f8>
   1b7c4:	sub	r3, r3, #13
   1b7c8:	bic	r3, r3, #3
   1b7cc:	str	r5, [sp]
   1b7d0:	mov	r2, #1
   1b7d4:	mov	r1, r8
   1b7d8:	add	r0, r7, #12
   1b7dc:	bl	11de8 <__fread_chk@plt>
   1b7e0:	cmp	r0, #0
   1b7e4:	blt	1b840 <mount@plt+0x98e4>
   1b7e8:	cmp	r4, r0
   1b7ec:	bgt	1b890 <mount@plt+0x9934>
   1b7f0:	mov	r2, r9
   1b7f4:	mov	r1, r6
   1b7f8:	mov	r0, #0
   1b7fc:	blx	sl
   1b800:	cmp	r0, #0
   1b804:	bge	1b794 <mount@plt+0x9838>
   1b808:	add	r3, sp, #16384	; 0x4000
   1b80c:	add	r3, r3, #20
   1b810:	ldr	r2, [r3]
   1b814:	ldr	r3, [sp, #8]
   1b818:	ldr	r3, [r3]
   1b81c:	cmp	r2, r3
   1b820:	bne	1b8b8 <mount@plt+0x995c>
   1b824:	add	sp, sp, #16384	; 0x4000
   1b828:	add	sp, sp, #28
   1b82c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b830:	bl	11cec <__errno_location@plt>
   1b834:	ldr	r3, [r0]
   1b838:	cmp	r3, #4
   1b83c:	beq	1b794 <mount@plt+0x9838>
   1b840:	ldr	r0, [pc, #128]	; 1b8c8 <mount@plt+0x996c>
   1b844:	add	r0, pc, r0
   1b848:	bl	11b24 <perror@plt>
   1b84c:	mvn	r0, #0
   1b850:	b	1b808 <mount@plt+0x98ac>
   1b854:	ldr	r2, [pc, #112]	; 1b8cc <mount@plt+0x9970>
   1b858:	str	r3, [sp, #12]
   1b85c:	mov	r0, r5
   1b860:	ldr	r2, [fp, r2]
   1b864:	ldr	r4, [r2]
   1b868:	bl	11a88 <ftell@plt>
   1b86c:	ldr	r2, [pc, #92]	; 1b8d0 <mount@plt+0x9974>
   1b870:	ldr	r3, [sp, #12]
   1b874:	add	r2, pc, r2
   1b878:	mov	r1, #1
   1b87c:	str	r0, [sp]
   1b880:	mov	r0, r4
   1b884:	bl	11da0 <__fprintf_chk@plt>
   1b888:	mvn	r0, #0
   1b88c:	b	1b808 <mount@plt+0x98ac>
   1b890:	ldr	r3, [pc, #52]	; 1b8cc <mount@plt+0x9970>
   1b894:	ldr	r0, [pc, #56]	; 1b8d4 <mount@plt+0x9978>
   1b898:	mov	r2, #34	; 0x22
   1b89c:	ldr	r3, [fp, r3]
   1b8a0:	mov	r1, #1
   1b8a4:	add	r0, pc, r0
   1b8a8:	ldr	r3, [r3]
   1b8ac:	bl	11b6c <fwrite@plt>
   1b8b0:	mvn	r0, #0
   1b8b4:	b	1b808 <mount@plt+0x98ac>
   1b8b8:	bl	11ac4 <__stack_chk_fail@plt>
   1b8bc:	muleq	r1, ip, r8
   1b8c0:	andeq	r0, r0, r0, lsl #4
   1b8c4:	strdeq	r3, [r0], -r0
   1b8c8:	andeq	r1, r0, r4, ror pc
   1b8cc:	andeq	r0, r0, ip, lsl #4
   1b8d0:	andeq	r1, r0, ip, asr pc
   1b8d4:	andeq	r1, r0, r0, asr pc
   1b8d8:	push	{r4, r5, r6, r7, r8, lr}
   1b8dc:	mov	r4, r0
   1b8e0:	ldr	ip, [r0]
   1b8e4:	ldr	r6, [sp, #24]
   1b8e8:	add	ip, ip, #3
   1b8ec:	add	r5, r6, #7
   1b8f0:	bic	ip, ip, #3
   1b8f4:	bic	r5, r5, #3
   1b8f8:	add	lr, ip, r5
   1b8fc:	ldr	r0, [pc, #120]	; 1b97c <mount@plt+0x9a20>
   1b900:	cmp	lr, r1
   1b904:	add	r0, pc, r0
   1b908:	bhi	1b954 <mount@plt+0x99f8>
   1b90c:	add	r0, r4, ip
   1b910:	add	r7, r6, #4
   1b914:	cmp	r6, #0
   1b918:	strh	r2, [r0, #2]
   1b91c:	strh	r7, [r4, ip]
   1b920:	bne	1b930 <mount@plt+0x99d4>
   1b924:	mov	r0, #0
   1b928:	str	lr, [r4]
   1b92c:	pop	{r4, r5, r6, r7, r8, pc}
   1b930:	mov	r2, r6
   1b934:	mov	r1, r3
   1b938:	add	r0, r0, #4
   1b93c:	bl	11a4c <memcpy@plt>
   1b940:	ldr	lr, [r4]
   1b944:	add	lr, lr, #3
   1b948:	bic	lr, lr, #3
   1b94c:	add	lr, lr, r5
   1b950:	b	1b924 <mount@plt+0x99c8>
   1b954:	ldr	ip, [pc, #36]	; 1b980 <mount@plt+0x9a24>
   1b958:	ldr	r2, [pc, #36]	; 1b984 <mount@plt+0x9a28>
   1b95c:	mov	r3, r1
   1b960:	ldr	r0, [r0, ip]
   1b964:	add	r2, pc, r2
   1b968:	mov	r1, #1
   1b96c:	ldr	r0, [r0]
   1b970:	bl	11da0 <__fprintf_chk@plt>
   1b974:	mvn	r0, #0
   1b978:	pop	{r4, r5, r6, r7, r8, pc}
   1b97c:	strdeq	r2, [r1], -r4
   1b980:	andeq	r0, r0, ip, lsl #4
   1b984:			; <UNDEFINED> instruction: 0x00001eb4
   1b988:	push	{lr}		; (str lr, [sp, #-4]!)
   1b98c:	sub	sp, sp, #12
   1b990:	mov	r3, #0
   1b994:	str	r3, [sp]
   1b998:	bl	1b8d8 <mount@plt+0x997c>
   1b99c:	add	sp, sp, #12
   1b9a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9a4:	push	{lr}		; (str lr, [sp, #-4]!)
   1b9a8:	sub	sp, sp, #20
   1b9ac:	mov	ip, #1
   1b9b0:	strb	r3, [sp, #15]
   1b9b4:	str	ip, [sp]
   1b9b8:	add	r3, sp, #15
   1b9bc:	bl	1b8d8 <mount@plt+0x997c>
   1b9c0:	add	sp, sp, #20
   1b9c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9c8:	push	{lr}		; (str lr, [sp, #-4]!)
   1b9cc:	sub	sp, sp, #20
   1b9d0:	mov	ip, #2
   1b9d4:	strh	r3, [sp, #14]
   1b9d8:	str	ip, [sp]
   1b9dc:	add	r3, sp, #14
   1b9e0:	bl	1b8d8 <mount@plt+0x997c>
   1b9e4:	add	sp, sp, #20
   1b9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9ec:	push	{lr}		; (str lr, [sp, #-4]!)
   1b9f0:	sub	sp, sp, #20
   1b9f4:	mov	ip, #4
   1b9f8:	str	r3, [sp, #12]
   1b9fc:	str	ip, [sp]
   1ba00:	add	r3, sp, #12
   1ba04:	bl	1b8d8 <mount@plt+0x997c>
   1ba08:	add	sp, sp, #20
   1ba0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba10:	push	{lr}		; (str lr, [sp, #-4]!)
   1ba14:	sub	sp, sp, #12
   1ba18:	mov	r3, #8
   1ba1c:	str	r3, [sp]
   1ba20:	add	r3, sp, #16
   1ba24:	bl	1b8d8 <mount@plt+0x997c>
   1ba28:	add	sp, sp, #12
   1ba2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba30:	push	{r4, r5, r6, r7, lr}
   1ba34:	mov	r5, r0
   1ba38:	sub	sp, sp, #12
   1ba3c:	mov	r0, r3
   1ba40:	mov	r4, r3
   1ba44:	mov	r6, r1
   1ba48:	mov	r7, r2
   1ba4c:	bl	11cd4 <strlen@plt>
   1ba50:	mov	r3, r4
   1ba54:	mov	r2, r7
   1ba58:	mov	r1, r6
   1ba5c:	add	r0, r0, #1
   1ba60:	str	r0, [sp]
   1ba64:	mov	r0, r5
   1ba68:	bl	1b8d8 <mount@plt+0x997c>
   1ba6c:	add	sp, sp, #12
   1ba70:	pop	{r4, r5, r6, r7, pc}
   1ba74:	push	{r4, r5, r6, lr}
   1ba78:	mov	r4, r0
   1ba7c:	ldr	r0, [r0]
   1ba80:	mov	r6, r3
   1ba84:	add	r0, r0, #3
   1ba88:	add	r3, r3, #3
   1ba8c:	bic	r0, r0, #3
   1ba90:	bic	r5, r3, #3
   1ba94:	add	r3, r0, r5
   1ba98:	ldr	ip, [pc, #124]	; 1bb1c <mount@plt+0x9bc0>
   1ba9c:	cmp	r3, r1
   1baa0:	add	ip, pc, ip
   1baa4:	bhi	1baf4 <mount@plt+0x9b98>
   1baa8:	mov	r1, r2
   1baac:	add	r0, r4, r0
   1bab0:	mov	r2, r6
   1bab4:	bl	11a4c <memcpy@plt>
   1bab8:	ldr	r0, [r4]
   1babc:	sub	r2, r5, r6
   1bac0:	add	r0, r0, #3
   1bac4:	bic	r0, r0, #3
   1bac8:	add	r0, r0, r6
   1bacc:	add	r0, r4, r0
   1bad0:	mov	r1, #0
   1bad4:	bl	11d28 <memset@plt>
   1bad8:	ldr	r3, [r4]
   1badc:	mov	r0, #0
   1bae0:	add	r3, r3, #3
   1bae4:	bic	r3, r3, #3
   1bae8:	add	r3, r3, r5
   1baec:	str	r3, [r4]
   1baf0:	pop	{r4, r5, r6, pc}
   1baf4:	ldr	r0, [pc, #36]	; 1bb20 <mount@plt+0x9bc4>
   1baf8:	ldr	r2, [pc, #36]	; 1bb24 <mount@plt+0x9bc8>
   1bafc:	mov	r3, r1
   1bb00:	ldr	r0, [ip, r0]
   1bb04:	add	r2, pc, r2
   1bb08:	mov	r1, #1
   1bb0c:	ldr	r0, [r0]
   1bb10:	bl	11da0 <__fprintf_chk@plt>
   1bb14:	mvn	r0, #0
   1bb18:	pop	{r4, r5, r6, pc}
   1bb1c:	andeq	r2, r1, r8, asr r5
   1bb20:	andeq	r0, r0, ip, lsl #4
   1bb24:	andeq	r1, r0, r4, asr #26
   1bb28:	ldr	ip, [r0]
   1bb2c:	push	{r4, lr}
   1bb30:	sub	sp, sp, #8
   1bb34:	mov	r3, #0
   1bb38:	add	ip, ip, #3
   1bb3c:	bic	ip, ip, #3
   1bb40:	str	r3, [sp]
   1bb44:	add	r4, r0, ip
   1bb48:	bl	1b8d8 <mount@plt+0x997c>
   1bb4c:	mov	r0, r4
   1bb50:	add	sp, sp, #8
   1bb54:	pop	{r4, pc}
   1bb58:	mov	r3, r0
   1bb5c:	ldr	r0, [r0]
   1bb60:	add	r2, r0, #3
   1bb64:	bic	r2, r2, #3
   1bb68:	add	r3, r3, r2
   1bb6c:	sub	r3, r3, r1
   1bb70:	strh	r3, [r1]
   1bb74:	bx	lr
   1bb78:	push	{r4, r5, r6, r7, lr}
   1bb7c:	sub	sp, sp, #12
   1bb80:	ldr	r4, [r0]
   1bb84:	ldr	ip, [sp, #32]
   1bb88:	add	r4, r4, #3
   1bb8c:	mov	r5, r0
   1bb90:	str	ip, [sp]
   1bb94:	mov	r6, r1
   1bb98:	mov	r7, r2
   1bb9c:	bic	r4, r4, #3
   1bba0:	add	r4, r0, r4
   1bba4:	bl	1b8d8 <mount@plt+0x997c>
   1bba8:	mov	r2, r7
   1bbac:	mov	r1, r6
   1bbb0:	mov	r0, r5
   1bbb4:	bl	1bb28 <mount@plt+0x9bcc>
   1bbb8:	mov	r0, r4
   1bbbc:	add	sp, sp, #12
   1bbc0:	pop	{r4, r5, r6, r7, pc}
   1bbc4:	ldr	r3, [r0]
   1bbc8:	ldrh	r2, [r1]
   1bbcc:	add	r3, r3, #3
   1bbd0:	bic	r3, r3, #3
   1bbd4:	add	r3, r0, r3
   1bbd8:	add	r2, r2, #3
   1bbdc:	push	{r4, lr}
   1bbe0:	sub	r3, r3, r1
   1bbe4:	mov	r4, r0
   1bbe8:	bic	r2, r2, #3
   1bbec:	strh	r3, [r1]
   1bbf0:	add	r1, r1, r2
   1bbf4:	bl	1bb58 <mount@plt+0x9bfc>
   1bbf8:	ldr	r0, [r4]
   1bbfc:	pop	{r4, pc}
   1bc00:	ldrh	ip, [r0]
   1bc04:	push	{r4, lr}
   1bc08:	add	ip, ip, #3
   1bc0c:	bic	ip, ip, #3
   1bc10:	add	lr, ip, #8
   1bc14:	cmp	lr, r1
   1bc18:	ldr	lr, [pc, #96]	; 1bc80 <mount@plt+0x9d24>
   1bc1c:	add	lr, pc, lr
   1bc20:	bhi	1bc58 <mount@plt+0x9cfc>
   1bc24:	add	r1, r0, ip
   1bc28:	mov	lr, #8
   1bc2c:	strh	r2, [r1, #2]
   1bc30:	strh	lr, [r0, ip]
   1bc34:	str	r3, [r1, #4]
   1bc38:	ldrh	r3, [r0]
   1bc3c:	mov	r2, #0
   1bc40:	add	r3, r3, #3
   1bc44:	bic	r3, r3, #3
   1bc48:	add	r3, r3, lr
   1bc4c:	strh	r3, [r0]
   1bc50:	mov	r0, r2
   1bc54:	pop	{r4, pc}
   1bc58:	mov	r3, r1
   1bc5c:	ldr	r1, [pc, #32]	; 1bc84 <mount@plt+0x9d28>
   1bc60:	ldr	r2, [pc, #32]	; 1bc88 <mount@plt+0x9d2c>
   1bc64:	ldr	r0, [lr, r1]
   1bc68:	add	r2, pc, r2
   1bc6c:	mov	r1, #1
   1bc70:	ldr	r0, [r0]
   1bc74:	bl	11da0 <__fprintf_chk@plt>
   1bc78:	mvn	r2, #0
   1bc7c:	b	1bc50 <mount@plt+0x9cf4>
   1bc80:	ldrdeq	r2, [r1], -ip
   1bc84:	andeq	r0, r0, ip, lsl #4
   1bc88:	andeq	r1, r0, r0, lsl ip
   1bc8c:	push	{r4, r5, r6, lr}
   1bc90:	mov	r5, r0
   1bc94:	ldrh	ip, [r0]
   1bc98:	ldr	lr, [sp, #16]
   1bc9c:	add	ip, ip, #3
   1bca0:	add	r0, lr, #7
   1bca4:	bic	r0, r0, #3
   1bca8:	bic	ip, ip, #3
   1bcac:	add	r0, r0, ip
   1bcb0:	cmp	r0, r1
   1bcb4:	ldr	r0, [pc, #128]	; 1bd3c <mount@plt+0x9de0>
   1bcb8:	add	r0, pc, r0
   1bcbc:	bhi	1bd14 <mount@plt+0x9db8>
   1bcc0:	add	r4, lr, #4
   1bcc4:	add	r0, r5, ip
   1bcc8:	uxth	r4, r4
   1bccc:	cmp	lr, #0
   1bcd0:	strh	r2, [r0, #2]
   1bcd4:	strh	r4, [r5, ip]
   1bcd8:	bne	1bd00 <mount@plt+0x9da4>
   1bcdc:	ldrh	r3, [r5]
   1bce0:	add	r4, r4, #3
   1bce4:	bic	r4, r4, #3
   1bce8:	add	r3, r3, #3
   1bcec:	bic	r3, r3, #3
   1bcf0:	add	r4, r3, r4
   1bcf4:	mov	r0, #0
   1bcf8:	strh	r4, [r5]
   1bcfc:	pop	{r4, r5, r6, pc}
   1bd00:	mov	r2, lr
   1bd04:	mov	r1, r3
   1bd08:	add	r0, r0, #4
   1bd0c:	bl	11a4c <memcpy@plt>
   1bd10:	b	1bcdc <mount@plt+0x9d80>
   1bd14:	ldr	ip, [pc, #36]	; 1bd40 <mount@plt+0x9de4>
   1bd18:	ldr	r2, [pc, #36]	; 1bd44 <mount@plt+0x9de8>
   1bd1c:	mov	r3, r1
   1bd20:	ldr	r0, [r0, ip]
   1bd24:	add	r2, pc, r2
   1bd28:	mov	r1, #1
   1bd2c:	ldr	r0, [r0]
   1bd30:	bl	11da0 <__fprintf_chk@plt>
   1bd34:	mvn	r0, #0
   1bd38:	pop	{r4, r5, r6, pc}
   1bd3c:	andeq	r2, r1, r0, asr #6
   1bd40:	andeq	r0, r0, ip, lsl #4
   1bd44:	andeq	r1, r0, ip, lsl #23
   1bd48:	push	{lr}		; (str lr, [sp, #-4]!)
   1bd4c:	sub	sp, sp, #20
   1bd50:	mov	ip, #1
   1bd54:	strb	r3, [sp, #15]
   1bd58:	str	ip, [sp]
   1bd5c:	add	r3, sp, #15
   1bd60:	bl	1bc8c <mount@plt+0x9d30>
   1bd64:	add	sp, sp, #20
   1bd68:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd6c:	push	{lr}		; (str lr, [sp, #-4]!)
   1bd70:	sub	sp, sp, #20
   1bd74:	mov	ip, #2
   1bd78:	strh	r3, [sp, #14]
   1bd7c:	str	ip, [sp]
   1bd80:	add	r3, sp, #14
   1bd84:	bl	1bc8c <mount@plt+0x9d30>
   1bd88:	add	sp, sp, #20
   1bd8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd90:	push	{lr}		; (str lr, [sp, #-4]!)
   1bd94:	sub	sp, sp, #12
   1bd98:	mov	r3, #8
   1bd9c:	str	r3, [sp]
   1bda0:	add	r3, sp, #16
   1bda4:	bl	1bc8c <mount@plt+0x9d30>
   1bda8:	add	sp, sp, #12
   1bdac:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdb0:	ldrh	ip, [r0]
   1bdb4:	push	{r4, lr}
   1bdb8:	sub	sp, sp, #8
   1bdbc:	mov	r3, #0
   1bdc0:	add	ip, ip, #3
   1bdc4:	bic	ip, ip, #3
   1bdc8:	str	r3, [sp]
   1bdcc:	add	r4, r0, ip
   1bdd0:	bl	1bc8c <mount@plt+0x9d30>
   1bdd4:	mov	r0, r4
   1bdd8:	add	sp, sp, #8
   1bddc:	pop	{r4, pc}
   1bde0:	ldrh	r3, [r0]
   1bde4:	add	r3, r3, #3
   1bde8:	bic	r3, r3, #3
   1bdec:	add	r3, r0, r3
   1bdf0:	sub	r3, r3, r1
   1bdf4:	strh	r3, [r1]
   1bdf8:	ldrh	r0, [r0]
   1bdfc:	bx	lr
   1be00:	push	{r4, r5, r6, r7, lr}
   1be04:	mov	r6, r1
   1be08:	add	r1, r1, #1
   1be0c:	sub	sp, sp, #12
   1be10:	mov	r5, r2
   1be14:	lsl	r2, r1, #2
   1be18:	mov	r1, #0
   1be1c:	mov	r4, r3
   1be20:	ldrh	r7, [sp, #32]
   1be24:	bl	11d28 <memset@plt>
   1be28:	ldr	ip, [pc, #196]	; 1bef4 <mount@plt+0x9f98>
   1be2c:	cmp	r4, #3
   1be30:	add	ip, pc, ip
   1be34:	ble	1beac <mount@plt+0x9f50>
   1be38:	ldrh	r2, [r5]
   1be3c:	cmp	r2, #3
   1be40:	mov	lr, r2
   1be44:	bls	1bec4 <mount@plt+0x9f68>
   1be48:	cmp	r4, r2
   1be4c:	blt	1bec4 <mount@plt+0x9f68>
   1be50:	mov	r3, r0
   1be54:	mvn	r0, r7
   1be58:	sxth	r0, r0
   1be5c:	b	1be78 <mount@plt+0x9f1c>
   1be60:	ldrh	r2, [r5]
   1be64:	cmp	r2, #3
   1be68:	mov	lr, r2
   1be6c:	bls	1bec4 <mount@plt+0x9f68>
   1be70:	cmp	r4, r2
   1be74:	blt	1bec4 <mount@plt+0x9f68>
   1be78:	ldrh	r1, [r5, #2]
   1be7c:	add	r2, r2, #3
   1be80:	bic	r2, r2, #3
   1be84:	and	r1, r1, r0
   1be88:	cmp	r1, r6
   1be8c:	sub	r4, r4, r2
   1be90:	bgt	1bea0 <mount@plt+0x9f44>
   1be94:	ldr	lr, [r3, r1, lsl #2]
   1be98:	cmp	lr, #0
   1be9c:	streq	r5, [r3, r1, lsl #2]
   1bea0:	cmp	r4, #3
   1bea4:	add	r5, r5, r2
   1bea8:	bgt	1be60 <mount@plt+0x9f04>
   1beac:	cmp	r4, #0
   1beb0:	bne	1bec0 <mount@plt+0x9f64>
   1beb4:	mov	r0, #0
   1beb8:	add	sp, sp, #12
   1bebc:	pop	{r4, r5, r6, r7, pc}
   1bec0:	ldrh	lr, [r5]
   1bec4:	ldr	r1, [pc, #44]	; 1bef8 <mount@plt+0x9f9c>
   1bec8:	ldr	r2, [pc, #44]	; 1befc <mount@plt+0x9fa0>
   1becc:	mov	r3, r4
   1bed0:	ldr	r0, [ip, r1]
   1bed4:	add	r2, pc, r2
   1bed8:	str	lr, [sp]
   1bedc:	mov	r1, #1
   1bee0:	ldr	r0, [r0]
   1bee4:	bl	11da0 <__fprintf_chk@plt>
   1bee8:	mov	r0, #0
   1beec:	add	sp, sp, #12
   1bef0:	pop	{r4, r5, r6, r7, pc}
   1bef4:	andeq	r2, r1, r8, asr #3
   1bef8:	andeq	r0, r0, ip, lsl #4
   1befc:	andeq	r1, r0, r4, lsl sl
   1bf00:	push	{lr}		; (str lr, [sp, #-4]!)
   1bf04:	sub	sp, sp, #12
   1bf08:	mov	ip, #0
   1bf0c:	str	ip, [sp]
   1bf10:	bl	1be00 <mount@plt+0x9ea4>
   1bf14:	add	sp, sp, #12
   1bf18:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf1c:	push	{r4, lr}
   1bf20:	cmp	r2, #3
   1bf24:	ldr	r4, [pc, #192]	; 1bfec <mount@plt+0xa090>
   1bf28:	sub	sp, sp, #8
   1bf2c:	add	r4, pc, r4
   1bf30:	ble	1bf98 <mount@plt+0xa03c>
   1bf34:	ldrh	ip, [r1]
   1bf38:	cmp	ip, #3
   1bf3c:	mov	lr, ip
   1bf40:	bls	1bfb0 <mount@plt+0xa054>
   1bf44:	cmp	r2, ip
   1bf48:	blt	1bfb0 <mount@plt+0xa054>
   1bf4c:	ldrh	r3, [r1, #2]
   1bf50:	cmp	r0, r3
   1bf54:	bne	1bf80 <mount@plt+0xa024>
   1bf58:	b	1bfe0 <mount@plt+0xa084>
   1bf5c:	ldrh	ip, [r1]
   1bf60:	cmp	ip, #3
   1bf64:	mov	lr, ip
   1bf68:	bls	1bfb0 <mount@plt+0xa054>
   1bf6c:	cmp	r2, ip
   1bf70:	blt	1bfb0 <mount@plt+0xa054>
   1bf74:	ldrh	r3, [r1, #2]
   1bf78:	cmp	r3, r0
   1bf7c:	beq	1bfe0 <mount@plt+0xa084>
   1bf80:	add	ip, ip, #3
   1bf84:	bic	ip, ip, #3
   1bf88:	sub	r2, r2, ip
   1bf8c:	cmp	r2, #3
   1bf90:	add	r1, r1, ip
   1bf94:	bgt	1bf5c <mount@plt+0xa000>
   1bf98:	cmp	r2, #0
   1bf9c:	moveq	r0, r2
   1bfa0:	bne	1bfac <mount@plt+0xa050>
   1bfa4:	add	sp, sp, #8
   1bfa8:	pop	{r4, pc}
   1bfac:	ldrh	lr, [r1]
   1bfb0:	ldr	r1, [pc, #56]	; 1bff0 <mount@plt+0xa094>
   1bfb4:	mov	r3, r2
   1bfb8:	ldr	r2, [pc, #52]	; 1bff4 <mount@plt+0xa098>
   1bfbc:	ldr	r0, [r4, r1]
   1bfc0:	add	r2, pc, r2
   1bfc4:	str	lr, [sp]
   1bfc8:	mov	r1, #1
   1bfcc:	ldr	r0, [r0]
   1bfd0:	bl	11da0 <__fprintf_chk@plt>
   1bfd4:	mov	r0, #0
   1bfd8:	add	sp, sp, #8
   1bfdc:	pop	{r4, pc}
   1bfe0:	mov	r0, r1
   1bfe4:	add	sp, sp, #8
   1bfe8:	pop	{r4, pc}
   1bfec:	andeq	r2, r1, ip, asr #1
   1bff0:	andeq	r0, r0, ip, lsl #4
   1bff4:	andeq	r1, r0, r8, lsr #18
   1bff8:	push	{r4, lr}
   1bffc:	ldrh	lr, [r2]
   1c000:	sub	lr, lr, #4
   1c004:	cmp	lr, r3
   1c008:	bcc	1c054 <mount@plt+0xa0f8>
   1c00c:	add	ip, r3, #3
   1c010:	bic	ip, ip, #3
   1c014:	add	ip, ip, #4
   1c018:	cmp	lr, ip
   1c01c:	bcs	1c03c <mount@plt+0xa0e0>
   1c020:	add	r2, r1, #1
   1c024:	mov	r4, r1
   1c028:	lsl	r2, r2, #2
   1c02c:	mov	r1, #0
   1c030:	bl	11d28 <memset@plt>
   1c034:	mov	r0, #0
   1c038:	pop	{r4, pc}
   1c03c:	ldrh	r3, [r2, ip]
   1c040:	add	r2, r2, ip
   1c044:	add	r2, r2, #4
   1c048:	sub	r3, r3, #4
   1c04c:	pop	{r4, lr}
   1c050:	b	1bf00 <mount@plt+0x9fa4>
   1c054:	mvn	r0, #0
   1c058:	pop	{r4, pc}
   1c05c:	eor	r1, r1, #-2147483648	; 0x80000000
   1c060:	b	1c068 <mount@plt+0xa10c>
   1c064:	eor	r3, r3, #-2147483648	; 0x80000000
   1c068:	push	{r4, r5, lr}
   1c06c:	lsl	r4, r1, #1
   1c070:	lsl	r5, r3, #1
   1c074:	teq	r4, r5
   1c078:	teqeq	r0, r2
   1c07c:	orrsne	ip, r4, r0
   1c080:	orrsne	ip, r5, r2
   1c084:	mvnsne	ip, r4, asr #21
   1c088:	mvnsne	ip, r5, asr #21
   1c08c:	beq	1c278 <mount@plt+0xa31c>
   1c090:	lsr	r4, r4, #21
   1c094:	rsbs	r5, r4, r5, lsr #21
   1c098:	rsblt	r5, r5, #0
   1c09c:	ble	1c0bc <mount@plt+0xa160>
   1c0a0:	add	r4, r4, r5
   1c0a4:	eor	r2, r0, r2
   1c0a8:	eor	r3, r1, r3
   1c0ac:	eor	r0, r2, r0
   1c0b0:	eor	r1, r3, r1
   1c0b4:	eor	r2, r0, r2
   1c0b8:	eor	r3, r1, r3
   1c0bc:	cmp	r5, #54	; 0x36
   1c0c0:	pophi	{r4, r5, pc}
   1c0c4:	tst	r1, #-2147483648	; 0x80000000
   1c0c8:	lsl	r1, r1, #12
   1c0cc:	mov	ip, #1048576	; 0x100000
   1c0d0:	orr	r1, ip, r1, lsr #12
   1c0d4:	beq	1c0e0 <mount@plt+0xa184>
   1c0d8:	rsbs	r0, r0, #0
   1c0dc:	rsc	r1, r1, #0
   1c0e0:	tst	r3, #-2147483648	; 0x80000000
   1c0e4:	lsl	r3, r3, #12
   1c0e8:	orr	r3, ip, r3, lsr #12
   1c0ec:	beq	1c0f8 <mount@plt+0xa19c>
   1c0f0:	rsbs	r2, r2, #0
   1c0f4:	rsc	r3, r3, #0
   1c0f8:	teq	r4, r5
   1c0fc:	beq	1c260 <mount@plt+0xa304>
   1c100:	sub	r4, r4, #1
   1c104:	rsbs	lr, r5, #32
   1c108:	blt	1c124 <mount@plt+0xa1c8>
   1c10c:	lsl	ip, r2, lr
   1c110:	adds	r0, r0, r2, lsr r5
   1c114:	adc	r1, r1, #0
   1c118:	adds	r0, r0, r3, lsl lr
   1c11c:	adcs	r1, r1, r3, asr r5
   1c120:	b	1c140 <mount@plt+0xa1e4>
   1c124:	sub	r5, r5, #32
   1c128:	add	lr, lr, #32
   1c12c:	cmp	r2, #1
   1c130:	lsl	ip, r3, lr
   1c134:	orrcs	ip, ip, #2
   1c138:	adds	r0, r0, r3, asr r5
   1c13c:	adcs	r1, r1, r3, asr #31
   1c140:	and	r5, r1, #-2147483648	; 0x80000000
   1c144:	bpl	1c154 <mount@plt+0xa1f8>
   1c148:	rsbs	ip, ip, #0
   1c14c:	rscs	r0, r0, #0
   1c150:	rsc	r1, r1, #0
   1c154:	cmp	r1, #1048576	; 0x100000
   1c158:	bcc	1c198 <mount@plt+0xa23c>
   1c15c:	cmp	r1, #2097152	; 0x200000
   1c160:	bcc	1c180 <mount@plt+0xa224>
   1c164:	lsrs	r1, r1, #1
   1c168:	rrxs	r0, r0
   1c16c:	rrx	ip, ip
   1c170:	add	r4, r4, #1
   1c174:	lsl	r2, r4, #21
   1c178:	cmn	r2, #4194304	; 0x400000
   1c17c:	bcs	1c2d8 <mount@plt+0xa37c>
   1c180:	cmp	ip, #-2147483648	; 0x80000000
   1c184:	lsrseq	ip, r0, #1
   1c188:	adcs	r0, r0, #0
   1c18c:	adc	r1, r1, r4, lsl #20
   1c190:	orr	r1, r1, r5
   1c194:	pop	{r4, r5, pc}
   1c198:	lsls	ip, ip, #1
   1c19c:	adcs	r0, r0, r0
   1c1a0:	adc	r1, r1, r1
   1c1a4:	tst	r1, #1048576	; 0x100000
   1c1a8:	sub	r4, r4, #1
   1c1ac:	bne	1c180 <mount@plt+0xa224>
   1c1b0:	teq	r1, #0
   1c1b4:	moveq	r1, r0
   1c1b8:	moveq	r0, #0
   1c1bc:	clz	r3, r1
   1c1c0:	addeq	r3, r3, #32
   1c1c4:	sub	r3, r3, #11
   1c1c8:	subs	r2, r3, #32
   1c1cc:	bge	1c1f0 <mount@plt+0xa294>
   1c1d0:	adds	r2, r2, #12
   1c1d4:	ble	1c1ec <mount@plt+0xa290>
   1c1d8:	add	ip, r2, #20
   1c1dc:	rsb	r2, r2, #12
   1c1e0:	lsl	r0, r1, ip
   1c1e4:	lsr	r1, r1, r2
   1c1e8:	b	1c200 <mount@plt+0xa2a4>
   1c1ec:	add	r2, r2, #20
   1c1f0:	rsble	ip, r2, #32
   1c1f4:	lsl	r1, r1, r2
   1c1f8:	orrle	r1, r1, r0, lsr ip
   1c1fc:	lslle	r0, r0, r2
   1c200:	subs	r4, r4, r3
   1c204:	addge	r1, r1, r4, lsl #20
   1c208:	orrge	r1, r1, r5
   1c20c:	popge	{r4, r5, pc}
   1c210:	mvn	r4, r4
   1c214:	subs	r4, r4, #31
   1c218:	bge	1c254 <mount@plt+0xa2f8>
   1c21c:	adds	r4, r4, #12
   1c220:	bgt	1c23c <mount@plt+0xa2e0>
   1c224:	add	r4, r4, #20
   1c228:	rsb	r2, r4, #32
   1c22c:	lsr	r0, r0, r4
   1c230:	orr	r0, r0, r1, lsl r2
   1c234:	orr	r1, r5, r1, lsr r4
   1c238:	pop	{r4, r5, pc}
   1c23c:	rsb	r4, r4, #12
   1c240:	rsb	r2, r4, #32
   1c244:	lsr	r0, r0, r2
   1c248:	orr	r0, r0, r1, lsl r4
   1c24c:	mov	r1, r5
   1c250:	pop	{r4, r5, pc}
   1c254:	lsr	r0, r1, r4
   1c258:	mov	r1, r5
   1c25c:	pop	{r4, r5, pc}
   1c260:	teq	r4, #0
   1c264:	eor	r3, r3, #1048576	; 0x100000
   1c268:	eoreq	r1, r1, #1048576	; 0x100000
   1c26c:	addeq	r4, r4, #1
   1c270:	subne	r5, r5, #1
   1c274:	b	1c100 <mount@plt+0xa1a4>
   1c278:	mvns	ip, r4, asr #21
   1c27c:	mvnsne	ip, r5, asr #21
   1c280:	beq	1c2e8 <mount@plt+0xa38c>
   1c284:	teq	r4, r5
   1c288:	teqeq	r0, r2
   1c28c:	beq	1c2a0 <mount@plt+0xa344>
   1c290:	orrs	ip, r4, r0
   1c294:	moveq	r1, r3
   1c298:	moveq	r0, r2
   1c29c:	pop	{r4, r5, pc}
   1c2a0:	teq	r1, r3
   1c2a4:	movne	r1, #0
   1c2a8:	movne	r0, #0
   1c2ac:	popne	{r4, r5, pc}
   1c2b0:	lsrs	ip, r4, #21
   1c2b4:	bne	1c2c8 <mount@plt+0xa36c>
   1c2b8:	lsls	r0, r0, #1
   1c2bc:	adcs	r1, r1, r1
   1c2c0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1c2c4:	pop	{r4, r5, pc}
   1c2c8:	adds	r4, r4, #4194304	; 0x400000
   1c2cc:	addcc	r1, r1, #1048576	; 0x100000
   1c2d0:	popcc	{r4, r5, pc}
   1c2d4:	and	r5, r1, #-2147483648	; 0x80000000
   1c2d8:	orr	r1, r5, #2130706432	; 0x7f000000
   1c2dc:	orr	r1, r1, #15728640	; 0xf00000
   1c2e0:	mov	r0, #0
   1c2e4:	pop	{r4, r5, pc}
   1c2e8:	mvns	ip, r4, asr #21
   1c2ec:	movne	r1, r3
   1c2f0:	movne	r0, r2
   1c2f4:	mvnseq	ip, r5, asr #21
   1c2f8:	movne	r3, r1
   1c2fc:	movne	r2, r0
   1c300:	orrs	r4, r0, r1, lsl #12
   1c304:	orrseq	r5, r2, r3, lsl #12
   1c308:	teqeq	r1, r3
   1c30c:	orrne	r1, r1, #524288	; 0x80000
   1c310:	pop	{r4, r5, pc}
   1c314:	teq	r0, #0
   1c318:	moveq	r1, #0
   1c31c:	bxeq	lr
   1c320:	push	{r4, r5, lr}
   1c324:	mov	r4, #1024	; 0x400
   1c328:	add	r4, r4, #50	; 0x32
   1c32c:	mov	r5, #0
   1c330:	mov	r1, #0
   1c334:	b	1c1b0 <mount@plt+0xa254>
   1c338:	teq	r0, #0
   1c33c:	moveq	r1, #0
   1c340:	bxeq	lr
   1c344:	push	{r4, r5, lr}
   1c348:	mov	r4, #1024	; 0x400
   1c34c:	add	r4, r4, #50	; 0x32
   1c350:	ands	r5, r0, #-2147483648	; 0x80000000
   1c354:	rsbmi	r0, r0, #0
   1c358:	mov	r1, #0
   1c35c:	b	1c1b0 <mount@plt+0xa254>
   1c360:	lsls	r2, r0, #1
   1c364:	asr	r1, r2, #3
   1c368:	rrx	r1, r1
   1c36c:	lsl	r0, r2, #28
   1c370:	andsne	r3, r2, #-16777216	; 0xff000000
   1c374:	teqne	r3, #-16777216	; 0xff000000
   1c378:	eorne	r1, r1, #939524096	; 0x38000000
   1c37c:	bxne	lr
   1c380:	bics	r2, r2, #-16777216	; 0xff000000
   1c384:	bxeq	lr
   1c388:	teq	r3, #-16777216	; 0xff000000
   1c38c:	orreq	r1, r1, #524288	; 0x80000
   1c390:	bxeq	lr
   1c394:	push	{r4, r5, lr}
   1c398:	mov	r4, #896	; 0x380
   1c39c:	and	r5, r1, #-2147483648	; 0x80000000
   1c3a0:	bic	r1, r1, #-2147483648	; 0x80000000
   1c3a4:	b	1c1b0 <mount@plt+0xa254>
   1c3a8:	orrs	r2, r0, r1
   1c3ac:	bxeq	lr
   1c3b0:	push	{r4, r5, lr}
   1c3b4:	mov	r5, #0
   1c3b8:	b	1c3d8 <mount@plt+0xa47c>
   1c3bc:	orrs	r2, r0, r1
   1c3c0:	bxeq	lr
   1c3c4:	push	{r4, r5, lr}
   1c3c8:	ands	r5, r1, #-2147483648	; 0x80000000
   1c3cc:	bpl	1c3d8 <mount@plt+0xa47c>
   1c3d0:	rsbs	r0, r0, #0
   1c3d4:	rsc	r1, r1, #0
   1c3d8:	mov	r4, #1024	; 0x400
   1c3dc:	add	r4, r4, #50	; 0x32
   1c3e0:	lsrs	ip, r1, #22
   1c3e4:	beq	1c154 <mount@plt+0xa1f8>
   1c3e8:	mov	r2, #3
   1c3ec:	lsrs	ip, ip, #3
   1c3f0:	addne	r2, r2, #3
   1c3f4:	lsrs	ip, ip, #3
   1c3f8:	addne	r2, r2, #3
   1c3fc:	add	r2, r2, ip, lsr #3
   1c400:	rsb	r3, r2, #32
   1c404:	lsl	ip, r0, r3
   1c408:	lsr	r0, r0, r2
   1c40c:	orr	r0, r0, r1, lsl r3
   1c410:	lsr	r1, r1, r2
   1c414:	add	r4, r4, r2
   1c418:	b	1c154 <mount@plt+0xa1f8>
   1c41c:	vmov	d7, r0, r1
   1c420:	vcmpe.f64	d7, #0.0
   1c424:	vmrs	APSR_nzcv, fpscr
   1c428:	bmi	1c430 <mount@plt+0xa4d4>
   1c42c:	b	1c448 <mount@plt+0xa4ec>
   1c430:	push	{r4, lr}
   1c434:	eor	r1, r1, #-2147483648	; 0x80000000
   1c438:	bl	1c448 <mount@plt+0xa4ec>
   1c43c:	rsbs	r0, r0, #0
   1c440:	rsc	r1, r1, #0
   1c444:	pop	{r4, pc}
   1c448:	vmov	d6, r0, r1
   1c44c:	vldr	d7, [pc, #36]	; 1c478 <mount@plt+0xa51c>
   1c450:	vldr	d5, [pc, #40]	; 1c480 <mount@plt+0xa524>
   1c454:	vmul.f64	d7, d6, d7
   1c458:	vcvt.u32.f64	s14, d7
   1c45c:	vcvt.f64.u32	d4, s14
   1c460:	vmov	r1, s14
   1c464:	vmls.f64	d6, d4, d5
   1c468:	vcvt.u32.f64	s15, d6
   1c46c:	vmov	r0, s15
   1c470:	bx	lr
   1c474:	nop			; (mov r0, r0)
   1c478:	andeq	r0, r0, r0
   1c47c:	ldclcc	0, cr0, [r0]
   1c480:	andeq	r0, r0, r0
   1c484:	mvnsmi	r0, r0
   1c488:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c48c:	mov	r7, r0
   1c490:	ldr	r6, [pc, #72]	; 1c4e0 <mount@plt+0xa584>
   1c494:	ldr	r5, [pc, #72]	; 1c4e4 <mount@plt+0xa588>
   1c498:	add	r6, pc, r6
   1c49c:	add	r5, pc, r5
   1c4a0:	sub	r6, r6, r5
   1c4a4:	mov	r8, r1
   1c4a8:	mov	r9, r2
   1c4ac:	bl	1196c <fdopen@plt-0x20>
   1c4b0:	asrs	r6, r6, #2
   1c4b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c4b8:	mov	r4, #0
   1c4bc:	add	r4, r4, #1
   1c4c0:	ldr	r3, [r5], #4
   1c4c4:	mov	r2, r9
   1c4c8:	mov	r1, r8
   1c4cc:	mov	r0, r7
   1c4d0:	blx	r3
   1c4d4:	cmp	r6, r4
   1c4d8:	bne	1c4bc <mount@plt+0xa560>
   1c4dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c4e0:	strdeq	r1, [r1], -ip
   1c4e4:	strdeq	r1, [r1], -r4
   1c4e8:	bx	lr

Disassembly of section .fini:

0001c4ec <.fini>:
   1c4ec:	push	{r3, lr}
   1c4f0:	pop	{r3, pc}
