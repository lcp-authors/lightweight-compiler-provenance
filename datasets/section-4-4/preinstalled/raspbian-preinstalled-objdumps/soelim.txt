
raspbian-preinstalled/soelim:     file format elf32-littlearm


Disassembly of section .init:

00010ac8 <.init>:
   10ac8:	push	{r3, lr}
   10acc:	bl	10f70 <__printf_chk@plt+0x2c0>
   10ad0:	pop	{r3, pc}

Disassembly of section .plt:

00010ad4 <__aeabi_atexit@plt-0x14>:
   10ad4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ad8:	ldr	lr, [pc, #4]	; 10ae4 <__aeabi_atexit@plt-0x4>
   10adc:	add	lr, pc, lr
   10ae0:	ldr	pc, [lr, #8]!
   10ae4:	andeq	r6, r1, r0, ror r4

00010ae8 <__aeabi_atexit@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #90112	; 0x16000
   10af0:	ldr	pc, [ip, #1136]!	; 0x470

00010af4 <free@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #90112	; 0x16000
   10afc:	ldr	pc, [ip, #1128]!	; 0x468

00010b00 <strncmp@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #90112	; 0x16000
   10b08:	ldr	pc, [ip, #1120]!	; 0x460

00010b0c <exit@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #90112	; 0x16000
   10b14:	ldr	pc, [ip, #1112]!	; 0x458

00010b18 <strerror@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #90112	; 0x16000
   10b20:	ldr	pc, [ip, #1104]!	; 0x450

00010b24 <stpcpy@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #90112	; 0x16000
   10b2c:	ldr	pc, [ip, #1096]!	; 0x448

00010b30 <_Znaj@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #90112	; 0x16000
   10b38:	ldr	pc, [ip, #1088]!	; 0x440

00010b3c <abort@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #90112	; 0x16000
   10b44:	ldr	pc, [ip, #1080]!	; 0x438

00010b48 <realloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #90112	; 0x16000
   10b50:	ldr	pc, [ip, #1072]!	; 0x430

00010b54 <strcpy@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #90112	; 0x16000
   10b5c:	ldr	pc, [ip, #1064]!	; 0x428

00010b60 <strcat@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #90112	; 0x16000
   10b68:	ldr	pc, [ip, #1056]!	; 0x420

00010b6c <__stack_chk_fail@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #90112	; 0x16000
   10b74:	ldr	pc, [ip, #1048]!	; 0x418

00010b78 <__cxa_end_cleanup@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #90112	; 0x16000
   10b80:	ldr	pc, [ip, #1040]!	; 0x410

00010b84 <putc@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #90112	; 0x16000
   10b8c:	ldr	pc, [ip, #1032]!	; 0x408

00010b90 <getc@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #90112	; 0x16000
   10b98:	ldr	pc, [ip, #1024]!	; 0x400

00010b9c <_ZdaPv@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #90112	; 0x16000
   10ba4:	ldr	pc, [ip, #1016]!	; 0x3f8

00010ba8 <__ctype_b_loc@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #90112	; 0x16000
   10bb0:	ldr	pc, [ip, #1008]!	; 0x3f0

00010bb4 <ferror@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #90112	; 0x16000
   10bbc:	ldr	pc, [ip, #1000]!	; 0x3e8

00010bc0 <fputc@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #90112	; 0x16000
   10bc8:	ldr	pc, [ip, #992]!	; 0x3e0

00010bcc <fwrite@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #90112	; 0x16000
   10bd4:	ldr	pc, [ip, #984]!	; 0x3d8

00010bd8 <memcpy@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #90112	; 0x16000
   10be0:	ldr	pc, [ip, #976]!	; 0x3d0

00010be4 <malloc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #90112	; 0x16000
   10bec:	ldr	pc, [ip, #968]!	; 0x3c8

00010bf0 <strlen@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #90112	; 0x16000
   10bf8:	ldr	pc, [ip, #960]!	; 0x3c0

00010bfc <__snprintf_chk@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #90112	; 0x16000
   10c04:	ldr	pc, [ip, #952]!	; 0x3b8

00010c08 <fclose@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #90112	; 0x16000
   10c10:	ldr	pc, [ip, #944]!	; 0x3b0

00010c14 <__gxx_personality_v0@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #90112	; 0x16000
   10c1c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c20 <strcmp@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #90112	; 0x16000
   10c28:	ldr	pc, [ip, #928]!	; 0x3a0

00010c2c <__errno_location@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #90112	; 0x16000
   10c34:	ldr	pc, [ip, #920]!	; 0x398

00010c38 <memchr@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #90112	; 0x16000
   10c40:	ldr	pc, [ip, #912]!	; 0x390

00010c44 <fflush@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #90112	; 0x16000
   10c4c:	ldr	pc, [ip, #904]!	; 0x388

00010c50 <fopen64@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #90112	; 0x16000
   10c58:	ldr	pc, [ip, #896]!	; 0x380

00010c5c <memcmp@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #90112	; 0x16000
   10c64:	ldr	pc, [ip, #888]!	; 0x378

00010c68 <__sprintf_chk@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #90112	; 0x16000
   10c70:	ldr	pc, [ip, #880]!	; 0x370

00010c74 <fputs@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #90112	; 0x16000
   10c7c:	ldr	pc, [ip, #872]!	; 0x368

00010c80 <getenv@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #90112	; 0x16000
   10c88:	ldr	pc, [ip, #864]!	; 0x360

00010c8c <__libc_start_main@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #90112	; 0x16000
   10c94:	ldr	pc, [ip, #856]!	; 0x358

00010c98 <__gmon_start__@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #90112	; 0x16000
   10ca0:	ldr	pc, [ip, #848]!	; 0x350

00010ca4 <strchr@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #90112	; 0x16000
   10cac:	ldr	pc, [ip, #840]!	; 0x348

00010cb0 <__printf_chk@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #90112	; 0x16000
   10cb8:	ldr	pc, [ip, #832]!	; 0x340

Disassembly of section .text:

00010cbc <.text>:
   10cbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cc0:	mov	r5, r1
   10cc4:	ldr	r9, [pc, #420]	; 10e70 <__printf_chk@plt+0x1c0>
   10cc8:	ldr	r8, [pc, #420]	; 10e74 <__printf_chk@plt+0x1c4>
   10ccc:	ldr	r7, [pc, #420]	; 10e78 <__printf_chk@plt+0x1c8>
   10cd0:	ldr	sl, [pc, #420]	; 10e7c <__printf_chk@plt+0x1cc>
   10cd4:	ldr	r3, [r1]
   10cd8:	sub	sp, sp, #8
   10cdc:	mov	r6, r0
   10ce0:	str	r3, [r9]
   10ce4:	mov	r4, #0
   10ce8:	str	r4, [sp]
   10cec:	mov	r3, r8
   10cf0:	mov	r2, r7
   10cf4:	mov	r1, r5
   10cf8:	mov	r0, r6
   10cfc:	bl	12bcc <__printf_chk@plt+0x1f1c>
   10d00:	cmn	r0, #1
   10d04:	beq	10de0 <__printf_chk@plt+0x130>
   10d08:	cmp	r0, #114	; 0x72
   10d0c:	beq	10dac <__printf_chk@plt+0xfc>
   10d10:	ble	10d3c <__printf_chk@plt+0x8c>
   10d14:	cmp	r0, #118	; 0x76
   10d18:	beq	10d90 <__printf_chk@plt+0xe0>
   10d1c:	cmp	r0, #256	; 0x100
   10d20:	beq	10db8 <__printf_chk@plt+0x108>
   10d24:	cmp	r0, #116	; 0x74
   10d28:	beq	10dd4 <__printf_chk@plt+0x124>
   10d2c:	ldr	r1, [pc, #332]	; 10e80 <__printf_chk@plt+0x1d0>
   10d30:	mov	r0, #86	; 0x56
   10d34:	bl	118d8 <__printf_chk@plt+0xc28>
   10d38:	b	10ce4 <__printf_chk@plt+0x34>
   10d3c:	cmp	r0, #67	; 0x43
   10d40:	beq	10d84 <__printf_chk@plt+0xd4>
   10d44:	cmp	r0, #73	; 0x49
   10d48:	bne	10d60 <__printf_chk@plt+0xb0>
   10d4c:	ldr	r3, [pc, #304]	; 10e84 <__printf_chk@plt+0x1d4>
   10d50:	ldr	r0, [pc, #304]	; 10e88 <__printf_chk@plt+0x1d8>
   10d54:	ldr	r1, [r3]
   10d58:	bl	130ec <__printf_chk@plt+0x243c>
   10d5c:	b	10ce4 <__printf_chk@plt+0x34>
   10d60:	cmp	r0, #63	; 0x3f
   10d64:	bne	10d2c <__printf_chk@plt+0x7c>
   10d68:	ldr	r3, [pc, #284]	; 10e8c <__printf_chk@plt+0x1dc>
   10d6c:	ldr	r2, [r9]
   10d70:	ldr	r1, [pc, #280]	; 10e90 <__printf_chk@plt+0x1e0>
   10d74:	ldr	r0, [r3]
   10d78:	bl	143e8 <__printf_chk@plt+0x3738>
   10d7c:	mov	r0, #1
   10d80:	bl	10b0c <exit@plt>
   10d84:	mov	r3, #1
   10d88:	str	r3, [sl, #16]
   10d8c:	b	10ce4 <__printf_chk@plt+0x34>
   10d90:	ldr	r3, [pc, #252]	; 10e94 <__printf_chk@plt+0x1e4>
   10d94:	ldr	r1, [pc, #252]	; 10e98 <__printf_chk@plt+0x1e8>
   10d98:	mov	r0, #1
   10d9c:	ldr	r2, [r3]
   10da0:	bl	10cb0 <__printf_chk@plt>
   10da4:	mov	r0, r4
   10da8:	bl	10b0c <exit@plt>
   10dac:	mov	r3, #1
   10db0:	str	r3, [sl]
   10db4:	b	10ce4 <__printf_chk@plt+0x34>
   10db8:	ldr	r3, [pc, #220]	; 10e9c <__printf_chk@plt+0x1ec>
   10dbc:	ldr	r2, [r9]
   10dc0:	ldr	r1, [pc, #200]	; 10e90 <__printf_chk@plt+0x1e0>
   10dc4:	ldr	r0, [r3]
   10dc8:	bl	143e8 <__printf_chk@plt+0x3738>
   10dcc:	mov	r0, r4
   10dd0:	bl	10b0c <exit@plt>
   10dd4:	mov	r3, #1
   10dd8:	str	r3, [sl, #4]
   10ddc:	b	10ce4 <__printf_chk@plt+0x34>
   10de0:	ldr	r3, [pc, #184]	; 10ea0 <__printf_chk@plt+0x1f0>
   10de4:	ldr	r7, [r3]
   10de8:	cmp	r7, r6
   10dec:	addlt	r7, r5, r7, lsl #2
   10df0:	addlt	r5, r5, r6, lsl #2
   10df4:	bge	10e5c <__printf_chk@plt+0x1ac>
   10df8:	ldr	r0, [r7], #4
   10dfc:	bl	110a0 <__printf_chk@plt+0x3f0>
   10e00:	cmp	r0, #0
   10e04:	addeq	r4, r4, #1
   10e08:	cmp	r7, r5
   10e0c:	bne	10df8 <__printf_chk@plt+0x148>
   10e10:	ldr	r5, [pc, #132]	; 10e9c <__printf_chk@plt+0x1ec>
   10e14:	ldr	r0, [r5]
   10e18:	bl	10bb4 <ferror@plt>
   10e1c:	cmp	r0, #0
   10e20:	beq	10e48 <__printf_chk@plt+0x198>
   10e24:	ldr	r3, [pc, #120]	; 10ea4 <__printf_chk@plt+0x1f4>
   10e28:	ldr	r0, [pc, #120]	; 10ea8 <__printf_chk@plt+0x1f8>
   10e2c:	mov	r2, r3
   10e30:	mov	r1, r3
   10e34:	bl	11da8 <__printf_chk@plt+0x10f8>
   10e38:	adds	r0, r4, #0
   10e3c:	movne	r0, #1
   10e40:	add	sp, sp, #8
   10e44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e48:	ldr	r0, [r5]
   10e4c:	bl	10c44 <fflush@plt>
   10e50:	cmp	r0, #0
   10e54:	bge	10e38 <__printf_chk@plt+0x188>
   10e58:	b	10e24 <__printf_chk@plt+0x174>
   10e5c:	ldr	r0, [pc, #72]	; 10eac <__printf_chk@plt+0x1fc>
   10e60:	bl	110a0 <__printf_chk@plt+0x3f0>
   10e64:	clz	r4, r0
   10e68:	lsr	r4, r4, #5
   10e6c:	b	10e10 <__printf_chk@plt+0x160>
   10e70:	andeq	r7, r2, r0, asr #1
   10e74:	andeq	r6, r1, r8, ror #2
   10e78:	andeq	r6, r1, r8, lsr #4
   10e7c:	andeq	r7, r2, r4, lsr r0
   10e80:	andeq	r6, r1, r0, asr r2
   10e84:	ldrdeq	r7, [r2], -r4
   10e88:	andeq	r7, r2, ip, lsr r0
   10e8c:	andeq	r7, r2, r8, lsr #32
   10e90:	muleq	r1, r8, r1
   10e94:	andeq	r7, r2, r4, lsl r0
   10e98:	andeq	r6, r1, r0, lsr r2
   10e9c:	andeq	r7, r2, ip, lsr #32
   10ea0:	andeq	r7, r2, r8
   10ea4:	andeq	r7, r2, r8, asr #32
   10ea8:	andeq	r6, r1, r8, ror r2
   10eac:	andeq	r6, r1, r4, ror r2
   10eb0:	push	{r4, lr}
   10eb4:	sub	sp, sp, #8
   10eb8:	ldr	r4, [pc, #48]	; 10ef0 <__printf_chk@plt+0x240>
   10ebc:	mov	r3, #0
   10ec0:	mov	r2, #1
   10ec4:	str	r2, [sp]
   10ec8:	mov	r1, r3
   10ecc:	mov	r2, r3
   10ed0:	mov	r0, r4
   10ed4:	bl	12f18 <__printf_chk@plt+0x2268>
   10ed8:	mov	r0, r4
   10edc:	ldr	r2, [pc, #16]	; 10ef4 <__printf_chk@plt+0x244>
   10ee0:	ldr	r1, [pc, #16]	; 10ef8 <__printf_chk@plt+0x248>
   10ee4:	add	sp, sp, #8
   10ee8:	pop	{r4, lr}
   10eec:	b	10ae8 <__aeabi_atexit@plt>
   10ef0:	andeq	r7, r2, ip, lsr r0
   10ef4:	andeq	r7, r2, r4
   10ef8:	andeq	r3, r1, ip, asr #1
   10efc:	ldr	r3, [pc, #8]	; 10f0c <__printf_chk@plt+0x25c>
   10f00:	mov	r2, #0
   10f04:	str	r2, [r3]
   10f08:	bx	lr
   10f0c:	andeq	r7, r2, r8, asr #32
   10f10:	ldr	r0, [pc]	; 10f18 <__printf_chk@plt+0x268>
   10f14:	b	143c0 <__printf_chk@plt+0x3710>
   10f18:	strheq	r7, [r2], -r8
   10f1c:	ldr	r3, [pc, #12]	; 10f30 <__printf_chk@plt+0x280>
   10f20:	ldr	r3, [r3]
   10f24:	cmp	r3, #0
   10f28:	bxne	lr
   10f2c:	b	14074 <__printf_chk@plt+0x33c4>
   10f30:	ldrdeq	r7, [r2], -r0
   10f34:	mov	fp, #0
   10f38:	mov	lr, #0
   10f3c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f40:	mov	r2, sp
   10f44:	push	{r2}		; (str r2, [sp, #-4]!)
   10f48:	push	{r0}		; (str r0, [sp, #-4]!)
   10f4c:	ldr	ip, [pc, #16]	; 10f64 <__printf_chk@plt+0x2b4>
   10f50:	push	{ip}		; (str ip, [sp, #-4]!)
   10f54:	ldr	r0, [pc, #12]	; 10f68 <__printf_chk@plt+0x2b8>
   10f58:	ldr	r3, [pc, #12]	; 10f6c <__printf_chk@plt+0x2bc>
   10f5c:	bl	10c8c <__libc_start_main@plt>
   10f60:	bl	10b3c <abort@plt>
   10f64:	andeq	r6, r1, r8, asr r1
   10f68:			; <UNDEFINED> instruction: 0x00010cbc
   10f6c:	strdeq	r6, [r1], -r8
   10f70:	ldr	r3, [pc, #20]	; 10f8c <__printf_chk@plt+0x2dc>
   10f74:	ldr	r2, [pc, #20]	; 10f90 <__printf_chk@plt+0x2e0>
   10f78:	add	r3, pc, r3
   10f7c:	ldr	r2, [r3, r2]
   10f80:	cmp	r2, #0
   10f84:	bxeq	lr
   10f88:	b	10c98 <__gmon_start__@plt>
   10f8c:	ldrdeq	r5, [r1], -r4
   10f90:	andeq	r0, r0, r8, lsr #1
   10f94:	ldr	r0, [pc, #24]	; 10fb4 <__printf_chk@plt+0x304>
   10f98:	ldr	r3, [pc, #24]	; 10fb8 <__printf_chk@plt+0x308>
   10f9c:	cmp	r3, r0
   10fa0:	bxeq	lr
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <__printf_chk@plt+0x30c>
   10fa8:	cmp	r3, #0
   10fac:	bxeq	lr
   10fb0:	bx	r3
   10fb4:	andeq	r7, r2, r0, lsr #32
   10fb8:	andeq	r7, r2, r0, lsr #32
   10fbc:	andeq	r0, r0, r0
   10fc0:	ldr	r0, [pc, #36]	; 10fec <__printf_chk@plt+0x33c>
   10fc4:	ldr	r1, [pc, #36]	; 10ff0 <__printf_chk@plt+0x340>
   10fc8:	sub	r1, r1, r0
   10fcc:	asr	r1, r1, #2
   10fd0:	add	r1, r1, r1, lsr #31
   10fd4:	asrs	r1, r1, #1
   10fd8:	bxeq	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <__printf_chk@plt+0x344>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r7, r2, r0, lsr #32
   10ff0:	andeq	r7, r2, r0, lsr #32
   10ff4:	andeq	r0, r0, r0
   10ff8:	push	{r4, lr}
   10ffc:	ldr	r4, [pc, #24]	; 1101c <__printf_chk@plt+0x36c>
   11000:	ldrb	r3, [r4]
   11004:	cmp	r3, #0
   11008:	popne	{r4, pc}
   1100c:	bl	10f94 <__printf_chk@plt+0x2e4>
   11010:	mov	r3, #1
   11014:	strb	r3, [r4]
   11018:	pop	{r4, pc}
   1101c:	andeq	r7, r2, r0, lsr r0
   11020:	b	10fc0 <__printf_chk@plt+0x310>
   11024:	ldr	r3, [pc, #8]	; 11034 <__printf_chk@plt+0x384>
   11028:	ldr	r1, [pc, #8]	; 11038 <__printf_chk@plt+0x388>
   1102c:	ldr	r2, [r3]
   11030:	b	143e8 <__printf_chk@plt+0x3738>
   11034:	andeq	r7, r2, r0, asr #1
   11038:	muleq	r1, r8, r1
   1103c:	ldr	r3, [pc, #72]	; 1108c <__printf_chk@plt+0x3dc>
   11040:	ldr	r2, [r3]
   11044:	cmp	r2, #0
   11048:	bxne	lr
   1104c:	ldr	r1, [r3, #4]
   11050:	ldr	r2, [pc, #56]	; 11090 <__printf_chk@plt+0x3e0>
   11054:	ldr	r3, [pc, #56]	; 11094 <__printf_chk@plt+0x3e4>
   11058:	cmp	r1, #0
   1105c:	ldr	r2, [r2]
   11060:	ldr	r1, [r3]
   11064:	bne	1107c <__printf_chk@plt+0x3cc>
   11068:	mov	r3, r2
   1106c:	mov	r0, #1
   11070:	mov	r2, r1
   11074:	ldr	r1, [pc, #28]	; 11098 <__printf_chk@plt+0x3e8>
   11078:	b	10cb0 <__printf_chk@plt>
   1107c:	mov	r3, r1
   11080:	mov	r0, #1
   11084:	ldr	r1, [pc, #16]	; 1109c <__printf_chk@plt+0x3ec>
   11088:	b	10cb0 <__printf_chk@plt>
   1108c:	andeq	r7, r2, r4, lsr r0
   11090:	andeq	r7, r2, ip, asr r0
   11094:	strheq	r7, [r2], -ip
   11098:	andeq	r6, r1, r4, asr #3
   1109c:	ldrdeq	r6, [r1], -r0
   110a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110a4:	mov	r4, r0
   110a8:	ldr	r9, [pc, #1476]	; 11674 <__printf_chk@plt+0x9c4>
   110ac:	sub	sp, sp, #60	; 0x3c
   110b0:	mov	ip, #0
   110b4:	ldr	r0, [r9]
   110b8:	mov	r1, r4
   110bc:	mov	r3, ip
   110c0:	mov	r2, sp
   110c4:	str	r0, [sp, #52]	; 0x34
   110c8:	ldr	r0, [pc, #1448]	; 11678 <__printf_chk@plt+0x9c8>
   110cc:	str	ip, [sp]
   110d0:	bl	1335c <__printf_chk@plt+0x26ac>
   110d4:	mov	r5, r0
   110d8:	bl	10c2c <__errno_location@plt>
   110dc:	ldr	r1, [sp]
   110e0:	cmp	r1, #0
   110e4:	moveq	r1, r4
   110e8:	ldr	r4, [r0]
   110ec:	add	r0, sp, #4
   110f0:	bl	136dc <__printf_chk@plt+0x2a2c>
   110f4:	ldr	r3, [sp, #8]
   110f8:	ldr	r2, [sp, #12]
   110fc:	cmp	r3, r2
   11100:	bge	113e8 <__printf_chk@plt+0x738>
   11104:	ldr	r2, [sp, #4]
   11108:	add	r0, r3, #1
   1110c:	mov	r1, #0
   11110:	str	r0, [sp, #8]
   11114:	strb	r1, [r2, r3]
   11118:	ldr	r0, [sp]
   1111c:	bl	10af4 <free@plt>
   11120:	cmp	r5, #0
   11124:	beq	11540 <__printf_chk@plt+0x890>
   11128:	add	r0, sp, #4
   1112c:	bl	12f14 <__printf_chk@plt+0x2264>
   11130:	ldr	fp, [pc, #1348]	; 1167c <__printf_chk@plt+0x9cc>
   11134:	ldr	r8, [pc, #1348]	; 11680 <__printf_chk@plt+0x9d0>
   11138:	ldr	r2, [sp, #4]
   1113c:	mov	r3, #1
   11140:	str	r2, [fp]
   11144:	str	r3, [r8]
   11148:	bl	1103c <__printf_chk@plt+0x38c>
   1114c:	mov	r0, r5
   11150:	bl	10b90 <getc@plt>
   11154:	cmn	r0, #1
   11158:	mov	r4, r0
   1115c:	beq	111d0 <__printf_chk@plt+0x520>
   11160:	ldr	r6, [pc, #1308]	; 11684 <__printf_chk@plt+0x9d4>
   11164:	ldr	sl, [pc, #1308]	; 11688 <__printf_chk@plt+0x9d8>
   11168:	cmp	r4, #46	; 0x2e
   1116c:	movne	r7, r6
   11170:	beq	11240 <__printf_chk@plt+0x590>
   11174:	ldr	r1, [r6]
   11178:	mov	r0, r4
   1117c:	bl	10b84 <putc@plt>
   11180:	cmp	r4, #10
   11184:	beq	11218 <__printf_chk@plt+0x568>
   11188:	mov	r0, r5
   1118c:	bl	10b90 <getc@plt>
   11190:	cmn	r0, #1
   11194:	mov	r4, r0
   11198:	beq	11530 <__printf_chk@plt+0x880>
   1119c:	ldr	r1, [r7]
   111a0:	mov	r0, r4
   111a4:	bl	10b84 <putc@plt>
   111a8:	cmp	r4, #10
   111ac:	bne	11188 <__printf_chk@plt+0x4d8>
   111b0:	ldr	r3, [r8]
   111b4:	mov	r0, r5
   111b8:	add	r3, r3, #1
   111bc:	str	r3, [r8]
   111c0:	bl	10b90 <getc@plt>
   111c4:	cmn	r0, #1
   111c8:	mov	r4, r0
   111cc:	bne	11168 <__printf_chk@plt+0x4b8>
   111d0:	ldr	r3, [pc, #1204]	; 1168c <__printf_chk@plt+0x9dc>
   111d4:	ldr	r3, [r3]
   111d8:	cmp	r3, r5
   111dc:	beq	111e8 <__printf_chk@plt+0x538>
   111e0:	mov	r0, r5
   111e4:	bl	10c08 <fclose@plt>
   111e8:	mov	r4, #1
   111ec:	mov	r3, #0
   111f0:	str	r3, [fp]
   111f4:	add	r0, sp, #4
   111f8:	bl	137c8 <__printf_chk@plt+0x2b18>
   111fc:	ldr	r2, [sp, #52]	; 0x34
   11200:	ldr	r3, [r9]
   11204:	mov	r0, r4
   11208:	cmp	r2, r3
   1120c:	bne	1164c <__printf_chk@plt+0x99c>
   11210:	add	sp, sp, #60	; 0x3c
   11214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11218:	ldr	r3, [r8]
   1121c:	mov	r0, r5
   11220:	add	r3, r3, #1
   11224:	str	r3, [r8]
   11228:	bl	10b90 <getc@plt>
   1122c:	cmn	r0, #1
   11230:	mov	r4, r0
   11234:	beq	111d0 <__printf_chk@plt+0x520>
   11238:	cmp	r4, #46	; 0x2e
   1123c:	bne	11174 <__printf_chk@plt+0x4c4>
   11240:	mov	r0, r5
   11244:	bl	10b90 <getc@plt>
   11248:	cmn	r0, #1
   1124c:	mov	r4, r0
   11250:	beq	11630 <__printf_chk@plt+0x980>
   11254:	cmp	r0, #115	; 0x73
   11258:	beq	113f8 <__printf_chk@plt+0x748>
   1125c:	cmp	r0, #108	; 0x6c
   11260:	bne	112ac <__printf_chk@plt+0x5fc>
   11264:	mov	r0, r5
   11268:	bl	10b90 <getc@plt>
   1126c:	cmn	r0, #1
   11270:	mov	r4, r0
   11274:	beq	11614 <__printf_chk@plt+0x964>
   11278:	cmp	r0, #102	; 0x66
   1127c:	beq	112c0 <__printf_chk@plt+0x610>
   11280:	ldr	r1, [r6]
   11284:	mov	r0, #46	; 0x2e
   11288:	mov	r7, r6
   1128c:	bl	10b84 <putc@plt>
   11290:	ldr	r1, [r6]
   11294:	mov	r0, #108	; 0x6c
   11298:	bl	10b84 <putc@plt>
   1129c:	ldr	r1, [r6]
   112a0:	mov	r0, r4
   112a4:	bl	10b84 <putc@plt>
   112a8:	b	111a8 <__printf_chk@plt+0x4f8>
   112ac:	ldr	r1, [r6]
   112b0:	mov	r0, #46	; 0x2e
   112b4:	mov	r7, r6
   112b8:	bl	10b84 <putc@plt>
   112bc:	b	1129c <__printf_chk@plt+0x5ec>
   112c0:	mov	r0, r5
   112c4:	bl	10b90 <getc@plt>
   112c8:	cmn	r0, #1
   112cc:	mov	r4, r0
   112d0:	beq	115f8 <__printf_chk@plt+0x948>
   112d4:	cmp	r0, #10
   112d8:	cmpne	r0, #32
   112dc:	beq	11314 <__printf_chk@plt+0x664>
   112e0:	ldr	r3, [sl, #16]
   112e4:	cmp	r3, #0
   112e8:	bne	11314 <__printf_chk@plt+0x664>
   112ec:	ldr	r3, [r6]
   112f0:	mov	r2, #3
   112f4:	mov	r1, #1
   112f8:	ldr	r0, [pc, #912]	; 11690 <__printf_chk@plt+0x9e0>
   112fc:	mov	r7, r6
   11300:	bl	10bcc <fwrite@plt>
   11304:	mov	r0, r4
   11308:	ldr	r1, [r6]
   1130c:	bl	10b84 <putc@plt>
   11310:	b	11188 <__printf_chk@plt+0x4d8>
   11314:	add	r7, sp, #32
   11318:	mov	r0, r7
   1131c:	bl	1366c <__printf_chk@plt+0x29bc>
   11320:	b	11340 <__printf_chk@plt+0x690>
   11324:	ldr	r2, [sp, #32]
   11328:	add	r1, r3, #1
   1132c:	str	r1, [sp, #36]	; 0x24
   11330:	mov	r0, r5
   11334:	strb	r4, [r2, r3]
   11338:	bl	10b90 <getc@plt>
   1133c:	mov	r4, r0
   11340:	cmn	r4, #1
   11344:	cmpne	r4, #10
   11348:	ldr	r3, [sp, #36]	; 0x24
   1134c:	ldr	r2, [sp, #40]	; 0x28
   11350:	beq	11370 <__printf_chk@plt+0x6c0>
   11354:	cmp	r3, r2
   11358:	uxtb	r4, r4
   1135c:	blt	11324 <__printf_chk@plt+0x674>
   11360:	mov	r0, r7
   11364:	bl	13930 <__printf_chk@plt+0x2c80>
   11368:	ldr	r3, [sp, #36]	; 0x24
   1136c:	b	11324 <__printf_chk@plt+0x674>
   11370:	ldr	r1, [r8]
   11374:	cmp	r3, r2
   11378:	add	r2, r1, #1
   1137c:	str	r2, [r8]
   11380:	bge	115b0 <__printf_chk@plt+0x900>
   11384:	ldr	r2, [sp, #32]
   11388:	add	r0, r3, #1
   1138c:	mov	r1, #10
   11390:	str	r0, [sp, #36]	; 0x24
   11394:	strb	r1, [r2, r3]
   11398:	ldr	r3, [sp, #36]	; 0x24
   1139c:	ldr	r2, [sp, #40]	; 0x28
   113a0:	cmp	r3, r2
   113a4:	bge	115a0 <__printf_chk@plt+0x8f0>
   113a8:	ldr	r2, [sp, #32]
   113ac:	add	r0, r3, #1
   113b0:	mov	r1, #0
   113b4:	str	r0, [sp, #36]	; 0x24
   113b8:	strb	r1, [r2, r3]
   113bc:	ldr	r0, [sp, #32]
   113c0:	bl	12d44 <__printf_chk@plt+0x2094>
   113c4:	ldr	r2, [sp, #32]
   113c8:	ldr	r1, [pc, #708]	; 11694 <__printf_chk@plt+0x9e4>
   113cc:	mov	r0, #1
   113d0:	bl	10cb0 <__printf_chk@plt>
   113d4:	mov	r0, r7
   113d8:	bl	137c8 <__printf_chk@plt+0x2b18>
   113dc:	mov	r0, r5
   113e0:	bl	10b90 <getc@plt>
   113e4:	b	111c4 <__printf_chk@plt+0x514>
   113e8:	add	r0, sp, #4
   113ec:	bl	13930 <__printf_chk@plt+0x2c80>
   113f0:	ldr	r3, [sp, #8]
   113f4:	b	11104 <__printf_chk@plt+0x454>
   113f8:	mov	r0, r5
   113fc:	bl	10b90 <getc@plt>
   11400:	cmn	r0, #1
   11404:	mov	r4, r0
   11408:	beq	115dc <__printf_chk@plt+0x92c>
   1140c:	cmp	r0, #111	; 0x6f
   11410:	beq	11434 <__printf_chk@plt+0x784>
   11414:	ldr	r1, [r6]
   11418:	mov	r0, #46	; 0x2e
   1141c:	mov	r7, r6
   11420:	bl	10b84 <putc@plt>
   11424:	ldr	r1, [r6]
   11428:	mov	r0, #115	; 0x73
   1142c:	bl	10b84 <putc@plt>
   11430:	b	1129c <__printf_chk@plt+0x5ec>
   11434:	mov	r0, r5
   11438:	bl	10b90 <getc@plt>
   1143c:	cmn	r0, #1
   11440:	mov	r4, r0
   11444:	beq	115c0 <__printf_chk@plt+0x910>
   11448:	cmp	r0, #10
   1144c:	cmpne	r0, #32
   11450:	beq	1147c <__printf_chk@plt+0x7cc>
   11454:	ldr	r3, [sl, #16]
   11458:	cmp	r3, #0
   1145c:	bne	1147c <__printf_chk@plt+0x7cc>
   11460:	ldr	r3, [r6]
   11464:	mov	r2, #3
   11468:	mov	r1, #1
   1146c:	ldr	r0, [pc, #548]	; 11698 <__printf_chk@plt+0x9e8>
   11470:	mov	r7, r6
   11474:	bl	10bcc <fwrite@plt>
   11478:	b	11304 <__printf_chk@plt+0x654>
   1147c:	add	r7, sp, #32
   11480:	mov	r0, r7
   11484:	bl	1366c <__printf_chk@plt+0x29bc>
   11488:	b	114a8 <__printf_chk@plt+0x7f8>
   1148c:	ldr	r2, [sp, #32]
   11490:	add	r1, r3, #1
   11494:	str	r1, [sp, #36]	; 0x24
   11498:	mov	r0, r5
   1149c:	strb	r4, [r2, r3]
   114a0:	bl	10b90 <getc@plt>
   114a4:	mov	r4, r0
   114a8:	cmn	r4, #1
   114ac:	cmpne	r4, #10
   114b0:	ldr	r3, [sp, #36]	; 0x24
   114b4:	ldr	r2, [sp, #40]	; 0x28
   114b8:	beq	114d8 <__printf_chk@plt+0x828>
   114bc:	cmp	r3, r2
   114c0:	uxtb	r4, r4
   114c4:	blt	1148c <__printf_chk@plt+0x7dc>
   114c8:	mov	r0, r7
   114cc:	bl	13930 <__printf_chk@plt+0x2c80>
   114d0:	ldr	r3, [sp, #36]	; 0x24
   114d4:	b	1148c <__printf_chk@plt+0x7dc>
   114d8:	ldr	r1, [r8]
   114dc:	cmp	r3, r2
   114e0:	add	r2, r1, #1
   114e4:	str	r2, [r8]
   114e8:	bge	11590 <__printf_chk@plt+0x8e0>
   114ec:	ldr	r2, [sp, #32]
   114f0:	add	r0, r3, #1
   114f4:	mov	r1, #10
   114f8:	str	r0, [sp, #36]	; 0x24
   114fc:	strb	r1, [r2, r3]
   11500:	ldr	r3, [sp, #36]	; 0x24
   11504:	ldr	r2, [sp, #40]	; 0x28
   11508:	cmp	r3, r2
   1150c:	bge	11580 <__printf_chk@plt+0x8d0>
   11510:	ldr	r2, [sp, #32]
   11514:	add	r0, r3, #1
   11518:	mov	r1, #0
   1151c:	str	r0, [sp, #36]	; 0x24
   11520:	strb	r1, [r2, r3]
   11524:	ldr	r0, [sp, #32]
   11528:	bl	116b8 <__printf_chk@plt+0xa08>
   1152c:	b	113d4 <__printf_chk@plt+0x724>
   11530:	ldr	r1, [r7]
   11534:	mov	r0, #10
   11538:	bl	10b84 <putc@plt>
   1153c:	b	111d0 <__printf_chk@plt+0x520>
   11540:	add	r0, sp, #16
   11544:	ldr	r1, [sp, #4]
   11548:	bl	11934 <__printf_chk@plt+0xc84>
   1154c:	mov	r0, r4
   11550:	bl	10b18 <strerror@plt>
   11554:	add	r7, sp, #32
   11558:	mov	r1, r0
   1155c:	mov	r0, r7
   11560:	bl	11934 <__printf_chk@plt+0xc84>
   11564:	mov	r2, r7
   11568:	add	r1, sp, #16
   1156c:	ldr	r3, [pc, #296]	; 1169c <__printf_chk@plt+0x9ec>
   11570:	ldr	r0, [pc, #296]	; 116a0 <__printf_chk@plt+0x9f0>
   11574:	bl	11d20 <__printf_chk@plt+0x1070>
   11578:	mov	r4, #0
   1157c:	b	111f4 <__printf_chk@plt+0x544>
   11580:	mov	r0, r7
   11584:	bl	13930 <__printf_chk@plt+0x2c80>
   11588:	ldr	r3, [sp, #36]	; 0x24
   1158c:	b	11510 <__printf_chk@plt+0x860>
   11590:	mov	r0, r7
   11594:	bl	13930 <__printf_chk@plt+0x2c80>
   11598:	ldr	r3, [sp, #36]	; 0x24
   1159c:	b	114ec <__printf_chk@plt+0x83c>
   115a0:	mov	r0, r7
   115a4:	bl	13930 <__printf_chk@plt+0x2c80>
   115a8:	ldr	r3, [sp, #36]	; 0x24
   115ac:	b	113a8 <__printf_chk@plt+0x6f8>
   115b0:	mov	r0, r7
   115b4:	bl	13930 <__printf_chk@plt+0x2c80>
   115b8:	ldr	r3, [sp, #36]	; 0x24
   115bc:	b	11384 <__printf_chk@plt+0x6d4>
   115c0:	ldr	r3, [pc, #188]	; 11684 <__printf_chk@plt+0x9d4>
   115c4:	mov	r2, #4
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	ldr	r0, [pc, #204]	; 116a4 <__printf_chk@plt+0x9f4>
   115d4:	bl	10bcc <fwrite@plt>
   115d8:	b	111d0 <__printf_chk@plt+0x520>
   115dc:	ldr	r3, [pc, #160]	; 11684 <__printf_chk@plt+0x9d4>
   115e0:	mov	r2, #3
   115e4:	mov	r1, #1
   115e8:	ldr	r3, [r3]
   115ec:	ldr	r0, [pc, #180]	; 116a8 <__printf_chk@plt+0x9f8>
   115f0:	bl	10bcc <fwrite@plt>
   115f4:	b	111d0 <__printf_chk@plt+0x520>
   115f8:	ldr	r3, [pc, #132]	; 11684 <__printf_chk@plt+0x9d4>
   115fc:	mov	r2, #4
   11600:	mov	r1, #1
   11604:	ldr	r3, [r3]
   11608:	ldr	r0, [pc, #156]	; 116ac <__printf_chk@plt+0x9fc>
   1160c:	bl	10bcc <fwrite@plt>
   11610:	b	111d0 <__printf_chk@plt+0x520>
   11614:	ldr	r3, [pc, #104]	; 11684 <__printf_chk@plt+0x9d4>
   11618:	mov	r2, #3
   1161c:	mov	r1, #1
   11620:	ldr	r3, [r3]
   11624:	ldr	r0, [pc, #132]	; 116b0 <__printf_chk@plt+0xa00>
   11628:	bl	10bcc <fwrite@plt>
   1162c:	b	111d0 <__printf_chk@plt+0x520>
   11630:	ldr	r3, [pc, #76]	; 11684 <__printf_chk@plt+0x9d4>
   11634:	mov	r2, #2
   11638:	mov	r1, #1
   1163c:	ldr	r3, [r3]
   11640:	ldr	r0, [pc, #108]	; 116b4 <__printf_chk@plt+0xa04>
   11644:	bl	10bcc <fwrite@plt>
   11648:	b	111d0 <__printf_chk@plt+0x520>
   1164c:	bl	10b6c <__stack_chk_fail@plt>
   11650:	mov	r0, r7
   11654:	bl	137c8 <__printf_chk@plt+0x2b18>
   11658:	add	r0, sp, #4
   1165c:	bl	137c8 <__printf_chk@plt+0x2b18>
   11660:	bl	10b78 <__cxa_end_cleanup@plt>
   11664:	mov	r0, r7
   11668:	bl	137c8 <__printf_chk@plt+0x2b18>
   1166c:	b	11658 <__printf_chk@plt+0x9a8>
   11670:	b	11658 <__printf_chk@plt+0x9a8>
   11674:	andeq	r6, r2, r8, lsr lr
   11678:	andeq	r7, r2, ip, lsr r0
   1167c:	andeq	r7, r2, ip, asr r0
   11680:	strheq	r7, [r2], -ip
   11684:	andeq	r7, r2, ip, lsr #32
   11688:	andeq	r7, r2, r4, lsr r0
   1168c:	andeq	r7, r2, r0, lsr #32
   11690:	andeq	r6, r1, r8, lsl #4
   11694:	andeq	r6, r1, r0, lsl #4
   11698:	strdeq	r6, [r1], -ip
   1169c:	andeq	r7, r2, r8, asr #32
   116a0:	andeq	r6, r1, r8, ror #3
   116a4:	andeq	r6, r1, r0, lsr #4
   116a8:	andeq	r6, r1, r4, lsl r2
   116ac:	andeq	r6, r1, r8, lsl r2
   116b0:	andeq	r6, r1, r0, lsl r2
   116b4:	andeq	r6, r1, ip, lsl #4
   116b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   116bc:	sub	sp, sp, #20
   116c0:	ldr	r7, [pc, #508]	; 118c4 <__printf_chk@plt+0xc14>
   116c4:	ldrb	r2, [r0]
   116c8:	mov	r6, r0
   116cc:	ldr	r3, [r7]
   116d0:	cmp	r2, #32
   116d4:	mov	r4, r0
   116d8:	str	r3, [sp, #12]
   116dc:	bne	116ec <__printf_chk@plt+0xa3c>
   116e0:	ldrb	r3, [r4, #1]!
   116e4:	cmp	r3, #32
   116e8:	beq	116e0 <__printf_chk@plt+0xa30>
   116ec:	mov	r0, sp
   116f0:	bl	1366c <__printf_chk@plt+0x29bc>
   116f4:	ldrb	r5, [r4]
   116f8:	and	r3, r5, #223	; 0xdf
   116fc:	cmp	r3, #0
   11700:	cmpne	r5, #10
   11704:	beq	11810 <__printf_chk@plt+0xb60>
   11708:	mov	r8, #92	; 0x5c
   1170c:	mov	r9, #32
   11710:	b	1174c <__printf_chk@plt+0xa9c>
   11714:	ldr	r3, [sp, #4]
   11718:	ldr	r2, [sp, #8]
   1171c:	cmp	r3, r2
   11720:	bge	117b8 <__printf_chk@plt+0xb08>
   11724:	ldr	r2, [sp]
   11728:	add	r1, r3, #1
   1172c:	str	r1, [sp, #4]
   11730:	strb	r5, [r2, r3]
   11734:	ldrb	r5, [r4, #1]
   11738:	add	r4, r4, #1
   1173c:	and	r3, r5, #223	; 0xdf
   11740:	cmp	r3, #0
   11744:	cmpne	r5, #10
   11748:	beq	11810 <__printf_chk@plt+0xb60>
   1174c:	cmp	r5, #92	; 0x5c
   11750:	bne	11714 <__printf_chk@plt+0xa64>
   11754:	ldrb	r3, [r4, #1]
   11758:	add	r4, r4, #1
   1175c:	cmp	r3, #92	; 0x5c
   11760:	beq	117ec <__printf_chk@plt+0xb3c>
   11764:	cmp	r3, #101	; 0x65
   11768:	beq	117ec <__printf_chk@plt+0xb3c>
   1176c:	cmp	r3, #32
   11770:	beq	117c8 <__printf_chk@plt+0xb18>
   11774:	ldr	r4, [pc, #332]	; 118c8 <__printf_chk@plt+0xc18>
   11778:	mov	r2, #3
   1177c:	mov	r1, #1
   11780:	ldr	r3, [r4]
   11784:	ldr	r0, [pc, #320]	; 118cc <__printf_chk@plt+0xc1c>
   11788:	bl	10bcc <fwrite@plt>
   1178c:	ldr	r1, [r4]
   11790:	mov	r0, r6
   11794:	bl	10c74 <fputs@plt>
   11798:	mov	r0, sp
   1179c:	bl	137c8 <__printf_chk@plt+0x2b18>
   117a0:	ldr	r2, [sp, #12]
   117a4:	ldr	r3, [r7]
   117a8:	cmp	r2, r3
   117ac:	bne	118b4 <__printf_chk@plt+0xc04>
   117b0:	add	sp, sp, #20
   117b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   117b8:	mov	r0, sp
   117bc:	bl	13930 <__printf_chk@plt+0x2c80>
   117c0:	ldr	r3, [sp, #4]
   117c4:	b	11724 <__printf_chk@plt+0xa74>
   117c8:	ldr	r3, [sp, #4]
   117cc:	ldr	r2, [sp, #8]
   117d0:	cmp	r3, r2
   117d4:	bge	11884 <__printf_chk@plt+0xbd4>
   117d8:	ldr	r2, [sp]
   117dc:	add	r1, r3, #1
   117e0:	str	r1, [sp, #4]
   117e4:	strb	r9, [r2, r3]
   117e8:	b	11734 <__printf_chk@plt+0xa84>
   117ec:	ldr	r3, [sp, #4]
   117f0:	ldr	r2, [sp, #8]
   117f4:	cmp	r2, r3
   117f8:	ble	11874 <__printf_chk@plt+0xbc4>
   117fc:	ldr	r2, [sp]
   11800:	add	r1, r3, #1
   11804:	str	r1, [sp, #4]
   11808:	strb	r8, [r2, r3]
   1180c:	b	11734 <__printf_chk@plt+0xa84>
   11810:	ldr	r3, [sp, #4]
   11814:	cmp	r3, #0
   11818:	ble	11774 <__printf_chk@plt+0xac4>
   1181c:	ldr	r2, [sp, #8]
   11820:	cmp	r3, r2
   11824:	bge	11894 <__printf_chk@plt+0xbe4>
   11828:	ldr	r4, [pc, #160]	; 118d0 <__printf_chk@plt+0xc20>
   1182c:	ldr	r2, [sp]
   11830:	add	r0, r3, #1
   11834:	mov	r1, #0
   11838:	str	r0, [sp, #4]
   1183c:	ldr	r8, [pc, #144]	; 118d4 <__printf_chk@plt+0xc24>
   11840:	strb	r1, [r2, r3]
   11844:	ldr	r5, [r4]
   11848:	ldr	r0, [sp]
   1184c:	sub	r3, r5, #1
   11850:	str	r3, [r4]
   11854:	ldr	r9, [r8]
   11858:	bl	110a0 <__printf_chk@plt+0x3f0>
   1185c:	cmp	r0, #0
   11860:	bne	118a4 <__printf_chk@plt+0xbf4>
   11864:	ldr	r3, [r4]
   11868:	add	r3, r3, #1
   1186c:	str	r3, [r4]
   11870:	b	11774 <__printf_chk@plt+0xac4>
   11874:	mov	r0, sp
   11878:	bl	13930 <__printf_chk@plt+0x2c80>
   1187c:	ldr	r3, [sp, #4]
   11880:	b	117fc <__printf_chk@plt+0xb4c>
   11884:	mov	r0, sp
   11888:	bl	13930 <__printf_chk@plt+0x2c80>
   1188c:	ldr	r3, [sp, #4]
   11890:	b	117d8 <__printf_chk@plt+0xb28>
   11894:	mov	r0, sp
   11898:	bl	13930 <__printf_chk@plt+0x2c80>
   1189c:	ldr	r3, [sp, #4]
   118a0:	b	11828 <__printf_chk@plt+0xb78>
   118a4:	str	r9, [r8]
   118a8:	str	r5, [r4]
   118ac:	bl	1103c <__printf_chk@plt+0x38c>
   118b0:	b	11798 <__printf_chk@plt+0xae8>
   118b4:	bl	10b6c <__stack_chk_fail@plt>
   118b8:	mov	r0, sp
   118bc:	bl	137c8 <__printf_chk@plt+0x2b18>
   118c0:	bl	10b78 <__cxa_end_cleanup@plt>
   118c4:	andeq	r6, r2, r8, lsr lr
   118c8:	andeq	r7, r2, ip, lsr #32
   118cc:	strdeq	r6, [r1], -ip
   118d0:	strheq	r7, [r2], -ip
   118d4:	andeq	r7, r2, ip, asr r0
   118d8:	ldr	r3, [pc, #68]	; 11924 <__printf_chk@plt+0xc74>
   118dc:	push	{r4, r5, r6, lr}
   118e0:	mov	r5, r0
   118e4:	ldr	r2, [r3]
   118e8:	mov	r6, r1
   118ec:	cmp	r2, #0
   118f0:	ldr	r4, [pc, #48]	; 11928 <__printf_chk@plt+0xc78>
   118f4:	beq	11904 <__printf_chk@plt+0xc54>
   118f8:	ldr	r1, [pc, #44]	; 1192c <__printf_chk@plt+0xc7c>
   118fc:	ldr	r0, [r4]
   11900:	bl	143e8 <__printf_chk@plt+0x3738>
   11904:	mov	r3, r6
   11908:	mov	r2, r5
   1190c:	ldr	r1, [pc, #28]	; 11930 <__printf_chk@plt+0xc80>
   11910:	ldr	r0, [r4]
   11914:	bl	143e8 <__printf_chk@plt+0x3738>
   11918:	ldr	r0, [r4]
   1191c:	bl	10c44 <fflush@plt>
   11920:	bl	10b3c <abort@plt>
   11924:	andeq	r7, r2, r0, asr #1
   11928:	andeq	r7, r2, r8, lsr #32
   1192c:	muleq	r1, r8, r2
   11930:	andeq	r6, r1, r0, lsr #5
   11934:	ldr	r3, [pc, #20]	; 11950 <__printf_chk@plt+0xca0>
   11938:	cmp	r1, #0
   1193c:	moveq	r1, r3
   11940:	mov	r3, #1
   11944:	str	r1, [r0, #8]
   11948:	str	r3, [r0]
   1194c:	bx	lr
   11950:	andeq	r6, r1, ip, asr #5
   11954:	mov	r2, #0
   11958:	str	r2, [r0]
   1195c:	bx	lr
   11960:	mov	r2, #3
   11964:	str	r1, [r0, #8]
   11968:	str	r2, [r0]
   1196c:	bx	lr
   11970:	mov	r2, #4
   11974:	str	r1, [r0, #8]
   11978:	str	r2, [r0]
   1197c:	bx	lr
   11980:	mov	r2, #2
   11984:	strb	r1, [r0, #8]
   11988:	str	r2, [r0]
   1198c:	bx	lr
   11990:	mov	r2, #5
   11994:	vstr	d0, [r0, #8]
   11998:	str	r2, [r0]
   1199c:	bx	lr
   119a0:	ldr	r0, [r0]
   119a4:	clz	r0, r0
   119a8:	lsr	r0, r0, #5
   119ac:	bx	lr
   119b0:	ldr	r3, [r0]
   119b4:	push	{r4, lr}
   119b8:	sub	r3, r3, #1
   119bc:	cmp	r3, #4
   119c0:	ldrls	pc, [pc, r3, lsl #2]
   119c4:	b	11a4c <__printf_chk@plt+0xd9c>
   119c8:	andeq	r1, r1, ip, lsl #20
   119cc:	andeq	r1, r1, r0, lsr #20
   119d0:	andeq	r1, r1, r4, lsr sl
   119d4:	ldrdeq	r1, [r1], -ip
   119d8:	strdeq	r1, [r1], -r4
   119dc:	ldr	r0, [r0, #8]
   119e0:	bl	12d08 <__printf_chk@plt+0x2058>
   119e4:	ldr	r3, [pc, #100]	; 11a50 <__printf_chk@plt+0xda0>
   119e8:	pop	{r4, lr}
   119ec:	ldr	r1, [r3]
   119f0:	b	10c74 <fputs@plt>
   119f4:	ldr	ip, [pc, #84]	; 11a50 <__printf_chk@plt+0xda0>
   119f8:	ldrd	r2, [r0, #8]
   119fc:	ldr	r1, [pc, #80]	; 11a54 <__printf_chk@plt+0xda4>
   11a00:	ldr	r0, [ip]
   11a04:	pop	{r4, lr}
   11a08:	b	143e8 <__printf_chk@plt+0x3738>
   11a0c:	ldr	r3, [pc, #60]	; 11a50 <__printf_chk@plt+0xda0>
   11a10:	ldr	r0, [r0, #8]
   11a14:	pop	{r4, lr}
   11a18:	ldr	r1, [r3]
   11a1c:	b	10c74 <fputs@plt>
   11a20:	ldr	r3, [pc, #40]	; 11a50 <__printf_chk@plt+0xda0>
   11a24:	ldrb	r0, [r0, #8]
   11a28:	pop	{r4, lr}
   11a2c:	ldr	r1, [r3]
   11a30:	b	10b84 <putc@plt>
   11a34:	ldr	r0, [r0, #8]
   11a38:	bl	12c7c <__printf_chk@plt+0x1fcc>
   11a3c:	ldr	r3, [pc, #12]	; 11a50 <__printf_chk@plt+0xda0>
   11a40:	pop	{r4, lr}
   11a44:	ldr	r1, [r3]
   11a48:	b	10c74 <fputs@plt>
   11a4c:	pop	{r4, pc}
   11a50:	andeq	r7, r2, r8, lsr #32
   11a54:	ldrdeq	r6, [r1], -r4
   11a58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a5c:	subs	r4, r0, #0
   11a60:	mov	r6, r1
   11a64:	mov	r7, r2
   11a68:	mov	r8, r3
   11a6c:	beq	11b58 <__printf_chk@plt+0xea8>
   11a70:	ldr	r5, [pc, #288]	; 11b98 <__printf_chk@plt+0xee8>
   11a74:	ldr	r9, [pc, #288]	; 11b9c <__printf_chk@plt+0xeec>
   11a78:	ldrb	r0, [r4]
   11a7c:	cmp	r0, #0
   11a80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a84:	cmp	r0, #37	; 0x25
   11a88:	bne	11b48 <__printf_chk@plt+0xe98>
   11a8c:	ldrb	r3, [r4, #1]
   11a90:	add	r4, r4, #2
   11a94:	sub	r3, r3, #37	; 0x25
   11a98:	cmp	r3, #14
   11a9c:	ldrls	pc, [pc, r3, lsl #2]
   11aa0:	b	11b38 <__printf_chk@plt+0xe88>
   11aa4:	andeq	r1, r1, r8, lsr #22
   11aa8:	andeq	r1, r1, r8, lsr fp
   11aac:	andeq	r1, r1, r8, lsr fp
   11ab0:	andeq	r1, r1, r8, lsr fp
   11ab4:	andeq	r1, r1, r8, lsr fp
   11ab8:	andeq	r1, r1, r8, lsr fp
   11abc:	andeq	r1, r1, r8, lsr fp
   11ac0:	andeq	r1, r1, r8, lsr fp
   11ac4:	andeq	r1, r1, r8, lsr fp
   11ac8:	andeq	r1, r1, r8, lsr fp
   11acc:	andeq	r1, r1, r8, lsr fp
   11ad0:	andeq	r1, r1, r8, lsr fp
   11ad4:	andeq	r1, r1, r0, lsl fp
   11ad8:	strdeq	r1, [r1], -r8
   11adc:	andeq	r1, r1, r0, ror #21
   11ae0:	ldr	r3, [r8]
   11ae4:	cmp	r3, #0
   11ae8:	beq	11b88 <__printf_chk@plt+0xed8>
   11aec:	mov	r0, r8
   11af0:	bl	119b0 <__printf_chk@plt+0xd00>
   11af4:	b	11a78 <__printf_chk@plt+0xdc8>
   11af8:	ldr	r3, [r7]
   11afc:	cmp	r3, #0
   11b00:	beq	11b78 <__printf_chk@plt+0xec8>
   11b04:	mov	r0, r7
   11b08:	bl	119b0 <__printf_chk@plt+0xd00>
   11b0c:	b	11a78 <__printf_chk@plt+0xdc8>
   11b10:	ldr	r3, [r6]
   11b14:	cmp	r3, #0
   11b18:	beq	11b68 <__printf_chk@plt+0xeb8>
   11b1c:	mov	r0, r6
   11b20:	bl	119b0 <__printf_chk@plt+0xd00>
   11b24:	b	11a78 <__printf_chk@plt+0xdc8>
   11b28:	ldr	r1, [r5]
   11b2c:	mov	r0, #37	; 0x25
   11b30:	bl	10bc0 <fputc@plt>
   11b34:	b	11a78 <__printf_chk@plt+0xdc8>
   11b38:	mov	r1, r9
   11b3c:	mov	r0, #120	; 0x78
   11b40:	bl	118d8 <__printf_chk@plt+0xc28>
   11b44:	b	11a78 <__printf_chk@plt+0xdc8>
   11b48:	ldr	r1, [r5]
   11b4c:	add	r4, r4, #1
   11b50:	bl	10b84 <putc@plt>
   11b54:	b	11a78 <__printf_chk@plt+0xdc8>
   11b58:	ldr	r1, [pc, #60]	; 11b9c <__printf_chk@plt+0xeec>
   11b5c:	mov	r0, #98	; 0x62
   11b60:	bl	118d8 <__printf_chk@plt+0xc28>
   11b64:	b	11a70 <__printf_chk@plt+0xdc0>
   11b68:	mov	r1, r9
   11b6c:	mov	r0, #108	; 0x6c
   11b70:	bl	118d8 <__printf_chk@plt+0xc28>
   11b74:	b	11b1c <__printf_chk@plt+0xe6c>
   11b78:	mov	r1, r9
   11b7c:	mov	r0, #112	; 0x70
   11b80:	bl	118d8 <__printf_chk@plt+0xc28>
   11b84:	b	11b04 <__printf_chk@plt+0xe54>
   11b88:	mov	r1, r9
   11b8c:	mov	r0, #116	; 0x74
   11b90:	bl	118d8 <__printf_chk@plt+0xc28>
   11b94:	b	11aec <__printf_chk@plt+0xe3c>
   11b98:	andeq	r7, r2, r8, lsr #32
   11b9c:	ldrdeq	r6, [r1], -r8
   11ba0:	ldr	ip, [pc, #340]	; 11cfc <__printf_chk@plt+0x104c>
   11ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ba8:	sub	sp, sp, #20
   11bac:	mvn	r5, r2
   11bb0:	mov	r8, r2
   11bb4:	ldr	r2, [ip]
   11bb8:	cmp	r0, #0
   11bbc:	mov	r6, r3
   11bc0:	add	r9, sp, #60	; 0x3c
   11bc4:	ldr	r3, [sp, #56]	; 0x38
   11bc8:	lsr	r5, r5, #31
   11bcc:	moveq	r5, #0
   11bd0:	cmp	r2, #0
   11bd4:	ldr	r4, [pc, #292]	; 11d00 <__printf_chk@plt+0x1050>
   11bd8:	str	r1, [sp, #12]
   11bdc:	mov	r7, r0
   11be0:	str	r3, [sp, #8]
   11be4:	ldm	r9, {r9, sl, fp}
   11be8:	beq	11c74 <__printf_chk@plt+0xfc4>
   11bec:	ldr	r1, [pc, #272]	; 11d04 <__printf_chk@plt+0x1054>
   11bf0:	ldr	r0, [r4]
   11bf4:	bl	143e8 <__printf_chk@plt+0x3738>
   11bf8:	cmp	r5, #0
   11bfc:	bne	11c7c <__printf_chk@plt+0xfcc>
   11c00:	ldr	r1, [r4]
   11c04:	mov	r0, #32
   11c08:	bl	10bc0 <fputc@plt>
   11c0c:	cmp	r6, #0
   11c10:	beq	11cc0 <__printf_chk@plt+0x1010>
   11c14:	cmp	r6, #2
   11c18:	bne	11c3c <__printf_chk@plt+0xf8c>
   11c1c:	ldr	r3, [r4]
   11c20:	mov	r2, #12
   11c24:	mov	r1, #1
   11c28:	ldr	r0, [pc, #216]	; 11d08 <__printf_chk@plt+0x1058>
   11c2c:	bl	10bcc <fwrite@plt>
   11c30:	ldr	r1, [r4]
   11c34:	mov	r0, #32
   11c38:	bl	10bc0 <fputc@plt>
   11c3c:	mov	r3, fp
   11c40:	mov	r2, sl
   11c44:	mov	r1, r9
   11c48:	ldr	r0, [sp, #8]
   11c4c:	bl	11a58 <__printf_chk@plt+0xda8>
   11c50:	ldr	r1, [r4]
   11c54:	mov	r0, #10
   11c58:	bl	10bc0 <fputc@plt>
   11c5c:	ldr	r0, [r4]
   11c60:	bl	10c44 <fflush@plt>
   11c64:	cmp	r6, #2
   11c68:	beq	11cd8 <__printf_chk@plt+0x1028>
   11c6c:	add	sp, sp, #20
   11c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c74:	cmp	r5, #0
   11c78:	beq	11c0c <__printf_chk@plt+0xf5c>
   11c7c:	ldr	r1, [pc, #136]	; 11d0c <__printf_chk@plt+0x105c>
   11c80:	mov	r0, r7
   11c84:	bl	10c20 <strcmp@plt>
   11c88:	ldr	r3, [pc, #128]	; 11d10 <__printf_chk@plt+0x1060>
   11c8c:	ldr	r1, [r4]
   11c90:	cmp	r0, #0
   11c94:	moveq	r7, r3
   11c98:	ldr	r3, [sp, #12]
   11c9c:	cmp	r3, #0
   11ca0:	beq	11ce4 <__printf_chk@plt+0x1034>
   11ca4:	str	r8, [sp]
   11ca8:	ldr	r3, [sp, #12]
   11cac:	mov	r2, r7
   11cb0:	mov	r0, r1
   11cb4:	ldr	r1, [pc, #88]	; 11d14 <__printf_chk@plt+0x1064>
   11cb8:	bl	143e8 <__printf_chk@plt+0x3738>
   11cbc:	b	11c00 <__printf_chk@plt+0xf50>
   11cc0:	ldr	r3, [r4]
   11cc4:	mov	r2, #8
   11cc8:	mov	r1, #1
   11ccc:	ldr	r0, [pc, #68]	; 11d18 <__printf_chk@plt+0x1068>
   11cd0:	bl	10bcc <fwrite@plt>
   11cd4:	b	11c30 <__printf_chk@plt+0xf80>
   11cd8:	add	sp, sp, #20
   11cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ce0:	b	11e8c <__printf_chk@plt+0x11dc>
   11ce4:	mov	r3, r8
   11ce8:	mov	r2, r7
   11cec:	mov	r0, r1
   11cf0:	ldr	r1, [pc, #36]	; 11d1c <__printf_chk@plt+0x106c>
   11cf4:	bl	143e8 <__printf_chk@plt+0x3738>
   11cf8:	b	11c00 <__printf_chk@plt+0xf50>
   11cfc:	andeq	r7, r2, r0, asr #1
   11d00:	andeq	r7, r2, r8, lsr #32
   11d04:	andeq	r6, r1, r0, lsl r3
   11d08:	andeq	r6, r1, r8, lsr #6
   11d0c:	andeq	r6, r1, r4, ror r2
   11d10:	strdeq	r6, [r1], -ip
   11d14:	andeq	r6, r1, r4, lsl r3
   11d18:	andeq	r6, r1, r8, lsr r3
   11d1c:	andeq	r6, r1, r0, lsr #6
   11d20:	push	{r4, lr}
   11d24:	sub	sp, sp, #16
   11d28:	ldr	lr, [pc, #40]	; 11d58 <__printf_chk@plt+0x10a8>
   11d2c:	ldr	ip, [pc, #40]	; 11d5c <__printf_chk@plt+0x10ac>
   11d30:	ldr	r4, [pc, #40]	; 11d60 <__printf_chk@plt+0x10b0>
   11d34:	strd	r2, [sp, #8]
   11d38:	strd	r0, [sp]
   11d3c:	ldr	r2, [r4]
   11d40:	ldr	r1, [lr]
   11d44:	ldr	r0, [ip]
   11d48:	mov	r3, #1
   11d4c:	bl	11ba0 <__printf_chk@plt+0xef0>
   11d50:	add	sp, sp, #16
   11d54:	pop	{r4, pc}
   11d58:	andeq	r7, r2, r8, asr r0
   11d5c:	andeq	r7, r2, ip, asr r0
   11d60:	strheq	r7, [r2], -ip
   11d64:	push	{r4, lr}
   11d68:	sub	sp, sp, #16
   11d6c:	ldr	lr, [pc, #40]	; 11d9c <__printf_chk@plt+0x10ec>
   11d70:	ldr	ip, [pc, #40]	; 11da0 <__printf_chk@plt+0x10f0>
   11d74:	ldr	r4, [pc, #40]	; 11da4 <__printf_chk@plt+0x10f4>
   11d78:	strd	r2, [sp, #8]
   11d7c:	strd	r0, [sp]
   11d80:	ldr	r2, [r4]
   11d84:	ldr	r1, [lr]
   11d88:	ldr	r0, [ip]
   11d8c:	mov	r3, #0
   11d90:	bl	11ba0 <__printf_chk@plt+0xef0>
   11d94:	add	sp, sp, #16
   11d98:	pop	{r4, pc}
   11d9c:	andeq	r7, r2, r8, asr r0
   11da0:	andeq	r7, r2, ip, asr r0
   11da4:	strheq	r7, [r2], -ip
   11da8:	push	{r4, lr}
   11dac:	sub	sp, sp, #16
   11db0:	ldr	lr, [pc, #40]	; 11de0 <__printf_chk@plt+0x1130>
   11db4:	ldr	ip, [pc, #40]	; 11de4 <__printf_chk@plt+0x1134>
   11db8:	ldr	r4, [pc, #40]	; 11de8 <__printf_chk@plt+0x1138>
   11dbc:	strd	r2, [sp, #8]
   11dc0:	strd	r0, [sp]
   11dc4:	ldr	r2, [r4]
   11dc8:	ldr	r1, [lr]
   11dcc:	ldr	r0, [ip]
   11dd0:	mov	r3, #2
   11dd4:	bl	11ba0 <__printf_chk@plt+0xef0>
   11dd8:	add	sp, sp, #16
   11ddc:	pop	{r4, pc}
   11de0:	andeq	r7, r2, r8, asr r0
   11de4:	andeq	r7, r2, ip, asr r0
   11de8:	strheq	r7, [r2], -ip
   11dec:	push	{lr}		; (str lr, [sp, #-4]!)
   11df0:	sub	sp, sp, #20
   11df4:	ldr	lr, [sp, #24]
   11df8:	ldr	ip, [sp, #28]
   11dfc:	strd	r2, [sp]
   11e00:	str	lr, [sp, #8]
   11e04:	mov	r2, r1
   11e08:	str	ip, [sp, #12]
   11e0c:	mov	r3, #1
   11e10:	mov	r1, #0
   11e14:	bl	11ba0 <__printf_chk@plt+0xef0>
   11e18:	add	sp, sp, #20
   11e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e20:	push	{lr}		; (str lr, [sp, #-4]!)
   11e24:	sub	sp, sp, #20
   11e28:	ldr	lr, [sp, #24]
   11e2c:	ldr	ip, [sp, #28]
   11e30:	str	r3, [sp, #4]
   11e34:	mov	r3, #0
   11e38:	str	r2, [sp]
   11e3c:	str	lr, [sp, #8]
   11e40:	mov	r2, r1
   11e44:	str	ip, [sp, #12]
   11e48:	mov	r1, r3
   11e4c:	bl	11ba0 <__printf_chk@plt+0xef0>
   11e50:	add	sp, sp, #20
   11e54:	pop	{pc}		; (ldr pc, [sp], #4)
   11e58:	push	{lr}		; (str lr, [sp, #-4]!)
   11e5c:	sub	sp, sp, #20
   11e60:	ldr	lr, [sp, #24]
   11e64:	ldr	ip, [sp, #28]
   11e68:	strd	r2, [sp]
   11e6c:	str	lr, [sp, #8]
   11e70:	mov	r2, r1
   11e74:	str	ip, [sp, #12]
   11e78:	mov	r3, #2
   11e7c:	mov	r1, #0
   11e80:	bl	11ba0 <__printf_chk@plt+0xef0>
   11e84:	add	sp, sp, #20
   11e88:	pop	{pc}		; (ldr pc, [sp], #4)
   11e8c:	push	{r4, lr}
   11e90:	mov	r0, #3
   11e94:	bl	10b0c <exit@plt>
   11e98:	ldr	ip, [r1, #36]	; 0x24
   11e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ea0:	ldr	r7, [r1, #32]
   11ea4:	ldr	r6, [r1]
   11ea8:	add	r5, r0, ip, lsl #2
   11eac:	mov	r4, r7
   11eb0:	mov	lr, r6
   11eb4:	cmp	lr, ip
   11eb8:	movle	r3, #0
   11ebc:	movgt	r3, #1
   11ec0:	cmp	r4, ip
   11ec4:	movge	r3, #0
   11ec8:	cmp	r3, #0
   11ecc:	beq	11f48 <__printf_chk@plt+0x1298>
   11ed0:	sub	fp, lr, ip
   11ed4:	sub	r8, ip, r4
   11ed8:	cmp	fp, r8
   11edc:	ble	11f14 <__printf_chk@plt+0x1264>
   11ee0:	sub	lr, lr, r8
   11ee4:	add	r8, r8, lr
   11ee8:	sub	r2, r4, #-1073741823	; 0xc0000001
   11eec:	add	r8, r0, r8, lsl #2
   11ef0:	add	r3, r0, lr, lsl #2
   11ef4:	add	r2, r0, r2, lsl #2
   11ef8:	ldr	r9, [r2, #4]!
   11efc:	ldr	sl, [r3]
   11f00:	str	sl, [r2]
   11f04:	str	r9, [r3], #4
   11f08:	cmp	r8, r3
   11f0c:	bne	11ef8 <__printf_chk@plt+0x1248>
   11f10:	b	11eb4 <__printf_chk@plt+0x1204>
   11f14:	sub	r2, r4, #-1073741823	; 0xc0000001
   11f18:	add	sl, fp, ip
   11f1c:	add	r2, r0, r2, lsl #2
   11f20:	add	sl, r0, sl, lsl #2
   11f24:	mov	r3, r5
   11f28:	ldr	r8, [r2, #4]!
   11f2c:	ldr	r9, [r3]
   11f30:	str	r9, [r2]
   11f34:	str	r8, [r3], #4
   11f38:	cmp	r3, sl
   11f3c:	bne	11f28 <__printf_chk@plt+0x1278>
   11f40:	add	r4, r4, fp
   11f44:	b	11eb4 <__printf_chk@plt+0x1204>
   11f48:	sub	ip, r6, ip
   11f4c:	add	r7, ip, r7
   11f50:	str	r7, [r1, #32]
   11f54:	str	r6, [r1, #36]	; 0x24
   11f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f60:	sub	sp, sp, #60	; 0x3c
   11f64:	mov	r9, r2
   11f68:	ldr	r4, [sp, #108]	; 0x6c
   11f6c:	ldrb	r2, [r2]
   11f70:	str	r1, [sp, #8]
   11f74:	ldr	r1, [r4, #4]
   11f78:	cmp	r2, #58	; 0x3a
   11f7c:	movne	r2, r1
   11f80:	moveq	r2, #0
   11f84:	subs	r7, r0, #0
   11f88:	str	r2, [sp, #16]
   11f8c:	str	r3, [sp, #12]
   11f90:	ble	121f4 <__printf_chk@plt+0x1544>
   11f94:	ldr	r3, [r4]
   11f98:	mov	r2, #0
   11f9c:	cmp	r3, r2
   11fa0:	str	r2, [r4, #12]
   11fa4:	beq	12090 <__printf_chk@plt+0x13e0>
   11fa8:	ldr	r2, [r4, #16]
   11fac:	cmp	r2, #0
   11fb0:	beq	1209c <__printf_chk@plt+0x13ec>
   11fb4:	ldr	r5, [r4, #20]
   11fb8:	cmp	r5, #0
   11fbc:	beq	120e4 <__printf_chk@plt+0x1434>
   11fc0:	ldrb	r3, [r5]
   11fc4:	cmp	r3, #0
   11fc8:	beq	120e4 <__printf_chk@plt+0x1434>
   11fcc:	ldr	r3, [sp, #12]
   11fd0:	cmp	r3, #0
   11fd4:	beq	12030 <__printf_chk@plt+0x1380>
   11fd8:	ldr	r3, [r4]
   11fdc:	ldr	r2, [sp, #8]
   11fe0:	str	r3, [sp, #20]
   11fe4:	ldr	r2, [r2, r3, lsl #2]
   11fe8:	lsl	r3, r3, #2
   11fec:	str	r3, [sp, #48]	; 0x30
   11ff0:	ldrb	r1, [r2, #1]
   11ff4:	str	r2, [sp, #32]
   11ff8:	mov	r3, r2
   11ffc:	cmp	r1, #45	; 0x2d
   12000:	str	r1, [sp, #28]
   12004:	beq	12474 <__printf_chk@plt+0x17c4>
   12008:	ldr	r2, [sp, #100]	; 0x64
   1200c:	cmp	r2, #0
   12010:	beq	12030 <__printf_chk@plt+0x1380>
   12014:	ldrb	r3, [r3, #2]
   12018:	cmp	r3, #0
   1201c:	bne	12474 <__printf_chk@plt+0x17c4>
   12020:	mov	r0, r9
   12024:	bl	10ca4 <strchr@plt>
   12028:	cmp	r0, #0
   1202c:	beq	12474 <__printf_chk@plt+0x17c4>
   12030:	add	r6, r5, #1
   12034:	str	r6, [r4, #20]
   12038:	ldrb	r8, [r5]
   1203c:	mov	r0, r9
   12040:	mov	r1, r8
   12044:	bl	10ca4 <strchr@plt>
   12048:	ldrb	r2, [r5, #1]
   1204c:	mov	r3, r8
   12050:	cmp	r2, #0
   12054:	ldreq	r2, [r4]
   12058:	addeq	r2, r2, #1
   1205c:	streq	r2, [r4]
   12060:	cmp	r8, #58	; 0x3a
   12064:	cmpne	r0, #0
   12068:	beq	125cc <__printf_chk@plt+0x191c>
   1206c:	ldrb	r1, [r0]
   12070:	ldrb	r2, [r0, #1]
   12074:	cmp	r1, #87	; 0x57
   12078:	beq	122a4 <__printf_chk@plt+0x15f4>
   1207c:	cmp	r2, #58	; 0x3a
   12080:	beq	12430 <__printf_chk@plt+0x1780>
   12084:	mov	r0, r3
   12088:	add	sp, sp, #60	; 0x3c
   1208c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12090:	mov	r2, #1
   12094:	mov	r3, r2
   12098:	str	r2, [r4]
   1209c:	ldr	r2, [sp, #104]	; 0x68
   120a0:	str	r3, [r4, #36]	; 0x24
   120a4:	cmp	r2, #0
   120a8:	mov	r2, #0
   120ac:	str	r3, [r4, #32]
   120b0:	str	r2, [r4, #20]
   120b4:	beq	121a0 <__printf_chk@plt+0x14f0>
   120b8:	mov	r3, #1
   120bc:	str	r3, [r4, #28]
   120c0:	ldrb	r1, [r9]
   120c4:	cmp	r1, #45	; 0x2d
   120c8:	beq	1258c <__printf_chk@plt+0x18dc>
   120cc:	cmp	r1, #43	; 0x2b
   120d0:	strne	r2, [r4, #24]
   120d4:	strne	r3, [r4, #16]
   120d8:	addeq	r9, r9, #1
   120dc:	streq	r2, [r4, #24]
   120e0:	streq	r3, [r4, #16]
   120e4:	ldr	r6, [r4]
   120e8:	ldr	r3, [r4, #36]	; 0x24
   120ec:	cmp	r3, r6
   120f0:	ldr	r3, [r4, #32]
   120f4:	strgt	r6, [r4, #36]	; 0x24
   120f8:	cmp	r6, r3
   120fc:	ldr	r3, [r4, #24]
   12100:	strlt	r6, [r4, #32]
   12104:	cmp	r3, #1
   12108:	beq	121fc <__printf_chk@plt+0x154c>
   1210c:	cmp	r7, r6
   12110:	beq	121e4 <__printf_chk@plt+0x1534>
   12114:	ldr	r8, [sp, #8]
   12118:	ldr	r1, [pc, #2528]	; 12b00 <__printf_chk@plt+0x1e50>
   1211c:	ldr	r5, [r8, r6, lsl #2]
   12120:	mov	r0, r5
   12124:	bl	10c20 <strcmp@plt>
   12128:	cmp	r0, #0
   1212c:	bne	1216c <__printf_chk@plt+0x14bc>
   12130:	ldr	r3, [r4, #32]
   12134:	ldr	r2, [r4, #36]	; 0x24
   12138:	add	r6, r6, #1
   1213c:	cmp	r3, r2
   12140:	str	r6, [r4]
   12144:	beq	12650 <__printf_chk@plt+0x19a0>
   12148:	cmp	r6, r2
   1214c:	beq	12160 <__printf_chk@plt+0x14b0>
   12150:	mov	r0, r8
   12154:	mov	r1, r4
   12158:	bl	11e98 <__printf_chk@plt+0x11e8>
   1215c:	ldr	r3, [r4, #32]
   12160:	str	r7, [r4, #36]	; 0x24
   12164:	str	r7, [r4]
   12168:	b	121ec <__printf_chk@plt+0x153c>
   1216c:	ldrb	r3, [r5]
   12170:	cmp	r3, #45	; 0x2d
   12174:	beq	12270 <__printf_chk@plt+0x15c0>
   12178:	ldr	r3, [r4, #24]
   1217c:	cmp	r3, #0
   12180:	beq	121f4 <__printf_chk@plt+0x1544>
   12184:	add	r6, r6, #1
   12188:	mov	r3, #1
   1218c:	mov	r0, r3
   12190:	str	r6, [r4]
   12194:	str	r5, [r4, #12]
   12198:	add	sp, sp, #60	; 0x3c
   1219c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121a0:	ldr	r0, [pc, #2396]	; 12b04 <__printf_chk@plt+0x1e54>
   121a4:	bl	10c80 <getenv@plt>
   121a8:	cmp	r0, #0
   121ac:	beq	123f8 <__printf_chk@plt+0x1748>
   121b0:	mov	r3, #1
   121b4:	str	r3, [r4, #28]
   121b8:	ldrb	r3, [r9]
   121bc:	ldr	r5, [r4, #20]
   121c0:	cmp	r3, #45	; 0x2d
   121c4:	beq	12464 <__printf_chk@plt+0x17b4>
   121c8:	cmp	r3, #43	; 0x2b
   121cc:	ldrne	r3, [sp, #104]	; 0x68
   121d0:	strne	r3, [r4, #24]
   121d4:	beq	12420 <__printf_chk@plt+0x1770>
   121d8:	mov	r3, #1
   121dc:	str	r3, [r4, #16]
   121e0:	b	11fb8 <__printf_chk@plt+0x1308>
   121e4:	ldr	r7, [r4, #36]	; 0x24
   121e8:	ldr	r3, [r4, #32]
   121ec:	cmp	r7, r3
   121f0:	strne	r3, [r4]
   121f4:	mvn	r3, #0
   121f8:	b	12084 <__printf_chk@plt+0x13d4>
   121fc:	ldrd	r2, [r4, #32]
   12200:	cmp	r2, r3
   12204:	beq	123e8 <__printf_chk@plt+0x1738>
   12208:	cmp	r6, r3
   1220c:	beq	12220 <__printf_chk@plt+0x1570>
   12210:	mov	r1, r4
   12214:	ldr	r0, [sp, #8]
   12218:	bl	11e98 <__printf_chk@plt+0x11e8>
   1221c:	ldr	r3, [r4]
   12220:	cmp	r7, r3
   12224:	ble	125a0 <__printf_chk@plt+0x18f0>
   12228:	sub	r1, r3, #-1073741823	; 0xc0000001
   1222c:	ldr	r2, [sp, #8]
   12230:	add	r1, r2, r1, lsl #2
   12234:	b	12248 <__printf_chk@plt+0x1598>
   12238:	add	r3, r3, #1
   1223c:	cmp	r3, r7
   12240:	str	r3, [r4]
   12244:	beq	125a0 <__printf_chk@plt+0x18f0>
   12248:	ldr	r2, [r1, #4]!
   1224c:	ldrb	r0, [r2]
   12250:	cmp	r0, #45	; 0x2d
   12254:	bne	12238 <__printf_chk@plt+0x1588>
   12258:	ldrb	r2, [r2, #1]
   1225c:	cmp	r2, #0
   12260:	beq	12238 <__printf_chk@plt+0x1588>
   12264:	ldr	r6, [r4]
   12268:	str	r3, [r4, #36]	; 0x24
   1226c:	b	1210c <__printf_chk@plt+0x145c>
   12270:	ldrb	r3, [r5, #1]
   12274:	cmp	r3, #0
   12278:	beq	12178 <__printf_chk@plt+0x14c8>
   1227c:	sub	r0, r3, #45	; 0x2d
   12280:	ldr	r3, [sp, #12]
   12284:	clz	r0, r0
   12288:	cmp	r3, #0
   1228c:	lsr	r0, r0, #5
   12290:	moveq	r0, #0
   12294:	add	r0, r0, #1
   12298:	add	r5, r5, r0
   1229c:	str	r5, [r4, #20]
   122a0:	b	11fcc <__printf_chk@plt+0x131c>
   122a4:	cmp	r2, #59	; 0x3b
   122a8:	bne	1207c <__printf_chk@plt+0x13cc>
   122ac:	ldrb	r2, [r5, #1]
   122b0:	ldr	r3, [r4]
   122b4:	cmp	r2, #0
   122b8:	beq	127c4 <__printf_chk@plt+0x1b14>
   122bc:	add	r3, r3, #1
   122c0:	str	r3, [r4]
   122c4:	str	r6, [r4, #12]
   122c8:	str	r6, [r4, #20]
   122cc:	ldrb	r5, [r6]
   122d0:	cmp	r5, #0
   122d4:	cmpne	r5, #61	; 0x3d
   122d8:	beq	129c0 <__printf_chk@plt+0x1d10>
   122dc:	mov	r3, r6
   122e0:	ldrb	r5, [r3, #1]!
   122e4:	cmp	r5, #0
   122e8:	cmpne	r5, #61	; 0x3d
   122ec:	bne	122e0 <__printf_chk@plt+0x1630>
   122f0:	str	r3, [sp, #20]
   122f4:	ldr	sl, [sp, #12]
   122f8:	ldr	r3, [sl]
   122fc:	cmp	r3, #0
   12300:	beq	129e8 <__printf_chk@plt+0x1d38>
   12304:	ldr	r2, [sp, #20]
   12308:	mov	r8, #0
   1230c:	str	r5, [sp, #24]
   12310:	str	r7, [sp, #28]
   12314:	str	r4, [sp, #108]	; 0x6c
   12318:	sub	fp, r2, r6
   1231c:	mov	r5, r8
   12320:	mov	r7, r8
   12324:	mov	r4, r3
   12328:	str	r8, [sp, #12]
   1232c:	mov	r2, fp
   12330:	mov	r1, r6
   12334:	mov	r0, r4
   12338:	bl	10b00 <strncmp@plt>
   1233c:	cmp	r0, #0
   12340:	mov	r0, r4
   12344:	bne	12364 <__printf_chk@plt+0x16b4>
   12348:	bl	10bf0 <strlen@plt>
   1234c:	cmp	r0, fp
   12350:	beq	1290c <__printf_chk@plt+0x1c5c>
   12354:	cmp	r5, #0
   12358:	moveq	r5, sl
   1235c:	movne	r7, #1
   12360:	streq	r8, [sp, #12]
   12364:	ldr	r4, [sl, #16]!
   12368:	add	r8, r8, #1
   1236c:	cmp	r4, #0
   12370:	bne	1232c <__printf_chk@plt+0x167c>
   12374:	mov	r3, r7
   12378:	cmp	r3, #0
   1237c:	mov	r8, r5
   12380:	ldr	r7, [sp, #28]
   12384:	ldr	r5, [sp, #24]
   12388:	ldr	r4, [sp, #108]	; 0x6c
   1238c:	bne	1295c <__printf_chk@plt+0x1cac>
   12390:	cmp	r8, #0
   12394:	beq	129e8 <__printf_chk@plt+0x1d38>
   12398:	cmp	r5, #0
   1239c:	ldr	r3, [r8, #4]
   123a0:	beq	128bc <__printf_chk@plt+0x1c0c>
   123a4:	cmp	r3, #0
   123a8:	beq	12a08 <__printf_chk@plt+0x1d58>
   123ac:	ldr	r3, [sp, #20]
   123b0:	add	r3, r3, #1
   123b4:	str	r3, [r4, #12]
   123b8:	mov	r0, r6
   123bc:	bl	10bf0 <strlen@plt>
   123c0:	ldr	r3, [sp, #96]	; 0x60
   123c4:	cmp	r3, #0
   123c8:	ldrne	r2, [sp, #12]
   123cc:	add	r0, r6, r0
   123d0:	str	r0, [r4, #20]
   123d4:	strne	r2, [r3]
   123d8:	ldrd	r2, [r8, #8]
   123dc:	cmp	r2, #0
   123e0:	bne	12644 <__printf_chk@plt+0x1994>
   123e4:	b	12084 <__printf_chk@plt+0x13d4>
   123e8:	cmp	r6, r3
   123ec:	strne	r6, [r4, #32]
   123f0:	movne	r3, r6
   123f4:	b	12220 <__printf_chk@plt+0x1570>
   123f8:	ldr	r3, [sp, #104]	; 0x68
   123fc:	ldr	r5, [r4, #20]
   12400:	str	r3, [r4, #28]
   12404:	ldrb	r3, [r9]
   12408:	cmp	r3, #45	; 0x2d
   1240c:	beq	12464 <__printf_chk@plt+0x17b4>
   12410:	cmp	r3, #43	; 0x2b
   12414:	movne	r3, #1
   12418:	strne	r3, [r4, #24]
   1241c:	bne	121d8 <__printf_chk@plt+0x1528>
   12420:	mov	r3, #0
   12424:	add	r9, r9, #1
   12428:	str	r3, [r4, #24]
   1242c:	b	121d8 <__printf_chk@plt+0x1528>
   12430:	ldrb	r1, [r0, #2]
   12434:	ldrb	r2, [r5, #1]
   12438:	cmp	r1, #58	; 0x3a
   1243c:	beq	12724 <__printf_chk@plt+0x1a74>
   12440:	cmp	r2, #0
   12444:	ldr	r2, [r4]
   12448:	beq	12778 <__printf_chk@plt+0x1ac8>
   1244c:	add	r2, r2, #1
   12450:	str	r2, [r4]
   12454:	str	r6, [r4, #12]
   12458:	mov	r2, #0
   1245c:	str	r2, [r4, #20]
   12460:	b	12084 <__printf_chk@plt+0x13d4>
   12464:	mov	r3, #2
   12468:	add	r9, r9, #1
   1246c:	str	r3, [r4, #24]
   12470:	b	121d8 <__printf_chk@plt+0x1528>
   12474:	ldrb	r3, [r5]
   12478:	mov	fp, r5
   1247c:	cmp	r3, #0
   12480:	cmpne	r3, #61	; 0x3d
   12484:	str	r3, [sp, #52]	; 0x34
   12488:	beq	1249c <__printf_chk@plt+0x17ec>
   1248c:	ldrb	r3, [fp, #1]!
   12490:	cmp	r3, #0
   12494:	cmpne	r3, #61	; 0x3d
   12498:	bne	1248c <__printf_chk@plt+0x17dc>
   1249c:	ldr	r3, [sp, #12]
   124a0:	ldr	r6, [r3]
   124a4:	cmp	r6, #0
   124a8:	beq	12670 <__printf_chk@plt+0x19c0>
   124ac:	mov	sl, r3
   124b0:	mov	r8, #0
   124b4:	sub	r2, fp, r5
   124b8:	mvn	r3, #0
   124bc:	str	r7, [sp, #40]	; 0x28
   124c0:	str	r9, [sp, #44]	; 0x2c
   124c4:	str	r4, [sp, #108]	; 0x6c
   124c8:	mov	r9, sl
   124cc:	str	r3, [sp, #24]
   124d0:	str	fp, [sp, #36]	; 0x24
   124d4:	mov	r7, r2
   124d8:	mov	sl, r8
   124dc:	mov	r4, r8
   124e0:	b	12514 <__printf_chk@plt+0x1864>
   124e4:	ldr	r3, [sp, #100]	; 0x64
   124e8:	cmp	r3, #0
   124ec:	bne	12500 <__printf_chk@plt+0x1850>
   124f0:	ldr	r1, [sl, #4]
   124f4:	ldr	r2, [r9, #4]
   124f8:	cmp	r1, r2
   124fc:	beq	125a8 <__printf_chk@plt+0x18f8>
   12500:	mov	r4, #1
   12504:	ldr	r6, [r9, #16]!
   12508:	add	r8, r8, #1
   1250c:	cmp	r6, #0
   12510:	beq	1255c <__printf_chk@plt+0x18ac>
   12514:	mov	r2, r7
   12518:	mov	r1, r5
   1251c:	mov	r0, r6
   12520:	bl	10b00 <strncmp@plt>
   12524:	cmp	r0, #0
   12528:	bne	12504 <__printf_chk@plt+0x1854>
   1252c:	mov	r0, r6
   12530:	bl	10bf0 <strlen@plt>
   12534:	cmp	r0, r7
   12538:	beq	125e4 <__printf_chk@plt+0x1934>
   1253c:	cmp	sl, #0
   12540:	bne	124e4 <__printf_chk@plt+0x1834>
   12544:	mov	sl, r9
   12548:	ldr	r6, [r9, #16]!
   1254c:	str	r8, [sp, #24]
   12550:	cmp	r6, #0
   12554:	add	r8, r8, #1
   12558:	bne	12514 <__printf_chk@plt+0x1864>
   1255c:	mov	r3, r4
   12560:	cmp	r3, #0
   12564:	ldr	fp, [sp, #36]	; 0x24
   12568:	ldr	r7, [sp, #40]	; 0x28
   1256c:	ldr	r9, [sp, #44]	; 0x2c
   12570:	ldr	r4, [sp, #108]	; 0x6c
   12574:	bne	12740 <__printf_chk@plt+0x1a90>
   12578:	cmp	sl, #0
   1257c:	beq	12670 <__printf_chk@plt+0x19c0>
   12580:	ldr	r8, [sp, #24]
   12584:	mov	r6, sl
   12588:	b	125f8 <__printf_chk@plt+0x1948>
   1258c:	mov	r2, #2
   12590:	add	r9, r9, #1
   12594:	str	r3, [r4, #16]
   12598:	str	r2, [r4, #24]
   1259c:	b	120e4 <__printf_chk@plt+0x1434>
   125a0:	mov	r6, r3
   125a4:	b	12268 <__printf_chk@plt+0x15b8>
   125a8:	ldr	r1, [sl, #8]
   125ac:	ldr	r2, [r9, #8]
   125b0:	cmp	r1, r2
   125b4:	bne	12500 <__printf_chk@plt+0x1850>
   125b8:	ldr	r1, [sl, #12]
   125bc:	ldr	r2, [r9, #12]
   125c0:	cmp	r1, r2
   125c4:	movne	r4, #1
   125c8:	b	12504 <__printf_chk@plt+0x1854>
   125cc:	ldr	r3, [sp, #16]
   125d0:	cmp	r3, #0
   125d4:	bne	126f8 <__printf_chk@plt+0x1a48>
   125d8:	str	r8, [r4, #8]
   125dc:	mov	r3, #63	; 0x3f
   125e0:	b	12084 <__printf_chk@plt+0x13d4>
   125e4:	mov	r6, r9
   125e8:	ldr	fp, [sp, #36]	; 0x24
   125ec:	ldr	r7, [sp, #40]	; 0x28
   125f0:	ldr	r9, [sp, #44]	; 0x2c
   125f4:	ldr	r4, [sp, #108]	; 0x6c
   125f8:	ldr	r3, [sp, #20]
   125fc:	ldr	r2, [r6, #4]
   12600:	add	r3, r3, #1
   12604:	str	r3, [r4]
   12608:	ldrb	r1, [fp]
   1260c:	cmp	r1, #0
   12610:	bne	1265c <__printf_chk@plt+0x19ac>
   12614:	cmp	r2, #1
   12618:	beq	12798 <__printf_chk@plt+0x1ae8>
   1261c:	mov	r0, r5
   12620:	bl	10bf0 <strlen@plt>
   12624:	ldr	r3, [sp, #96]	; 0x60
   12628:	cmp	r3, #0
   1262c:	add	r0, r5, r0
   12630:	str	r0, [r4, #20]
   12634:	strne	r8, [r3]
   12638:	ldrd	r2, [r6, #8]
   1263c:	cmp	r2, #0
   12640:	beq	12084 <__printf_chk@plt+0x13d4>
   12644:	str	r3, [r2]
   12648:	mov	r3, #0
   1264c:	b	12084 <__printf_chk@plt+0x13d4>
   12650:	mov	r3, r6
   12654:	str	r6, [r4, #32]
   12658:	b	12160 <__printf_chk@plt+0x14b0>
   1265c:	cmp	r2, #0
   12660:	beq	12810 <__printf_chk@plt+0x1b60>
   12664:	add	r3, fp, #1
   12668:	str	r3, [r4, #12]
   1266c:	b	1261c <__printf_chk@plt+0x196c>
   12670:	ldr	r3, [sp, #100]	; 0x64
   12674:	cmp	r3, #0
   12678:	beq	1287c <__printf_chk@plt+0x1bcc>
   1267c:	ldr	r3, [sp, #28]
   12680:	cmp	r3, #45	; 0x2d
   12684:	beq	1298c <__printf_chk@plt+0x1cdc>
   12688:	ldr	r1, [sp, #52]	; 0x34
   1268c:	mov	r0, r9
   12690:	bl	10ca4 <strchr@plt>
   12694:	cmp	r0, #0
   12698:	bne	12030 <__printf_chk@plt+0x1380>
   1269c:	ldr	r3, [sp, #16]
   126a0:	cmp	r3, #0
   126a4:	beq	126d4 <__printf_chk@plt+0x1a24>
   126a8:	ldr	r3, [sp, #32]
   126ac:	ldr	r1, [pc, #1108]	; 12b08 <__printf_chk@plt+0x1e58>
   126b0:	ldr	r2, [sp, #8]
   126b4:	ldrb	r3, [r3]
   126b8:	str	r5, [sp]
   126bc:	ldr	r0, [r1]
   126c0:	ldr	r2, [r2]
   126c4:	ldr	r1, [pc, #1088]	; 12b0c <__printf_chk@plt+0x1e5c>
   126c8:	bl	143e8 <__printf_chk@plt+0x3738>
   126cc:	ldr	r3, [r4]
   126d0:	str	r3, [sp, #20]
   126d4:	ldr	r3, [sp, #20]
   126d8:	ldr	r2, [pc, #1072]	; 12b10 <__printf_chk@plt+0x1e60>
   126dc:	add	r1, r3, #1
   126e0:	mov	r3, #0
   126e4:	str	r3, [r4, #8]
   126e8:	str	r1, [r4]
   126ec:	str	r2, [r4, #20]
   126f0:	mov	r3, #63	; 0x3f
   126f4:	b	12084 <__printf_chk@plt+0x13d4>
   126f8:	ldr	r1, [r4, #28]
   126fc:	ldr	r3, [pc, #1028]	; 12b08 <__printf_chk@plt+0x1e58>
   12700:	ldr	r2, [sp, #8]
   12704:	cmp	r1, #0
   12708:	ldr	r0, [r3]
   1270c:	ldr	r2, [r2]
   12710:	mov	r3, r8
   12714:	ldrne	r1, [pc, #1016]	; 12b14 <__printf_chk@plt+0x1e64>
   12718:	ldreq	r1, [pc, #1016]	; 12b18 <__printf_chk@plt+0x1e68>
   1271c:	bl	143e8 <__printf_chk@plt+0x3738>
   12720:	b	125d8 <__printf_chk@plt+0x1928>
   12724:	cmp	r2, #0
   12728:	strne	r6, [r4, #12]
   1272c:	ldrne	r2, [r4]
   12730:	streq	r2, [r4, #12]
   12734:	addne	r2, r2, #1
   12738:	strne	r2, [r4]
   1273c:	b	12458 <__printf_chk@plt+0x17a8>
   12740:	ldr	r3, [sp, #16]
   12744:	cmp	r3, #0
   12748:	bne	127e4 <__printf_chk@plt+0x1b34>
   1274c:	mov	r0, r5
   12750:	bl	10bf0 <strlen@plt>
   12754:	ldr	r3, [sp, #20]
   12758:	add	r2, r3, #1
   1275c:	mov	r3, #0
   12760:	str	r3, [r4, #8]
   12764:	str	r2, [r4]
   12768:	mov	r3, #63	; 0x3f
   1276c:	add	r0, r5, r0
   12770:	str	r0, [r4, #20]
   12774:	b	12084 <__printf_chk@plt+0x13d4>
   12778:	cmp	r7, r2
   1277c:	beq	128e8 <__printf_chk@plt+0x1c38>
   12780:	ldr	r1, [sp, #8]
   12784:	ldr	r1, [r1, r2, lsl #2]
   12788:	add	r2, r2, #1
   1278c:	str	r1, [r4, #12]
   12790:	str	r2, [r4]
   12794:	b	12458 <__printf_chk@plt+0x17a8>
   12798:	cmp	r3, r7
   1279c:	bge	12924 <__printf_chk@plt+0x1c74>
   127a0:	ldr	r2, [sp, #48]	; 0x30
   127a4:	ldr	r3, [sp, #8]
   127a8:	add	r3, r3, r2
   127ac:	ldr	r2, [sp, #20]
   127b0:	ldr	r3, [r3, #4]
   127b4:	add	r2, r2, #2
   127b8:	str	r2, [r4]
   127bc:	str	r3, [r4, #12]
   127c0:	b	1261c <__printf_chk@plt+0x196c>
   127c4:	cmp	r7, r3
   127c8:	beq	1299c <__printf_chk@plt+0x1cec>
   127cc:	ldr	r2, [sp, #8]
   127d0:	ldr	r6, [r2, r3, lsl #2]
   127d4:	add	r3, r3, #1
   127d8:	str	r6, [r4, #12]
   127dc:	str	r3, [r4]
   127e0:	b	122c8 <__printf_chk@plt+0x1618>
   127e4:	ldr	r1, [pc, #796]	; 12b08 <__printf_chk@plt+0x1e58>
   127e8:	ldr	r2, [sp, #8]
   127ec:	ldr	r3, [sp, #32]
   127f0:	ldr	r0, [r1]
   127f4:	ldr	r2, [r2]
   127f8:	ldr	r1, [pc, #796]	; 12b1c <__printf_chk@plt+0x1e6c>
   127fc:	bl	143e8 <__printf_chk@plt+0x3738>
   12800:	ldr	r3, [r4]
   12804:	ldr	r5, [r4, #20]
   12808:	str	r3, [sp, #20]
   1280c:	b	1274c <__printf_chk@plt+0x1a9c>
   12810:	ldr	r3, [sp, #16]
   12814:	cmp	r3, #0
   12818:	beq	1285c <__printf_chk@plt+0x1bac>
   1281c:	ldr	r2, [sp, #8]
   12820:	ldr	r3, [sp, #20]
   12824:	ldr	r1, [r2, r3, lsl #2]
   12828:	ldr	r3, [pc, #728]	; 12b08 <__printf_chk@plt+0x1e58>
   1282c:	ldr	r2, [r2]
   12830:	ldrb	ip, [r1, #1]
   12834:	ldr	r0, [r3]
   12838:	ldr	r3, [r6]
   1283c:	cmp	ip, #45	; 0x2d
   12840:	beq	129f8 <__printf_chk@plt+0x1d48>
   12844:	ldrb	r1, [r1]
   12848:	str	r3, [sp]
   1284c:	mov	r3, r1
   12850:	ldr	r1, [pc, #712]	; 12b20 <__printf_chk@plt+0x1e70>
   12854:	bl	143e8 <__printf_chk@plt+0x3738>
   12858:	ldr	r5, [r4, #20]
   1285c:	mov	r0, r5
   12860:	bl	10bf0 <strlen@plt>
   12864:	ldr	r2, [r6, #12]
   12868:	mov	r3, #63	; 0x3f
   1286c:	str	r2, [r4, #8]
   12870:	add	r0, r5, r0
   12874:	str	r0, [r4, #20]
   12878:	b	12084 <__printf_chk@plt+0x13d4>
   1287c:	ldr	r3, [sp, #16]
   12880:	cmp	r3, #0
   12884:	beq	126d4 <__printf_chk@plt+0x1a24>
   12888:	ldr	r3, [sp, #28]
   1288c:	cmp	r3, #45	; 0x2d
   12890:	bne	126a8 <__printf_chk@plt+0x19f8>
   12894:	ldr	r1, [pc, #620]	; 12b08 <__printf_chk@plt+0x1e58>
   12898:	ldr	r2, [sp, #8]
   1289c:	mov	r3, r5
   128a0:	ldr	r0, [r1]
   128a4:	ldr	r2, [r2]
   128a8:	ldr	r1, [pc, #628]	; 12b24 <__printf_chk@plt+0x1e74>
   128ac:	bl	143e8 <__printf_chk@plt+0x3738>
   128b0:	ldr	r3, [r4]
   128b4:	str	r3, [sp, #20]
   128b8:	b	126d4 <__printf_chk@plt+0x1a24>
   128bc:	cmp	r3, #1
   128c0:	bne	123b8 <__printf_chk@plt+0x1708>
   128c4:	ldr	r3, [r4]
   128c8:	cmp	r3, r7
   128cc:	bge	12a7c <__printf_chk@plt+0x1dcc>
   128d0:	ldr	r2, [sp, #8]
   128d4:	ldr	r2, [r2, r3, lsl #2]
   128d8:	add	r3, r3, #1
   128dc:	str	r2, [r4, #12]
   128e0:	str	r3, [r4]
   128e4:	b	123b8 <__printf_chk@plt+0x1708>
   128e8:	ldr	r3, [sp, #16]
   128ec:	cmp	r3, #0
   128f0:	bne	129c8 <__printf_chk@plt+0x1d18>
   128f4:	str	r8, [r4, #8]
   128f8:	ldrb	r3, [r9]
   128fc:	cmp	r3, #58	; 0x3a
   12900:	moveq	r3, #58	; 0x3a
   12904:	movne	r3, #63	; 0x3f
   12908:	b	12458 <__printf_chk@plt+0x17a8>
   1290c:	str	r8, [sp, #12]
   12910:	ldr	r5, [sp, #24]
   12914:	ldr	r7, [sp, #28]
   12918:	ldr	r4, [sp, #108]	; 0x6c
   1291c:	mov	r8, sl
   12920:	b	12398 <__printf_chk@plt+0x16e8>
   12924:	ldr	r3, [sp, #16]
   12928:	cmp	r3, #0
   1292c:	bne	12a2c <__printf_chk@plt+0x1d7c>
   12930:	mov	r0, r5
   12934:	bl	10bf0 <strlen@plt>
   12938:	ldr	r3, [r6, #12]
   1293c:	str	r3, [r4, #8]
   12940:	add	r0, r5, r0
   12944:	str	r0, [r4, #20]
   12948:	ldrb	r3, [r9]
   1294c:	cmp	r3, #58	; 0x3a
   12950:	moveq	r3, #58	; 0x3a
   12954:	bne	125dc <__printf_chk@plt+0x192c>
   12958:	b	12084 <__printf_chk@plt+0x13d4>
   1295c:	ldr	r3, [sp, #16]
   12960:	ldr	r5, [r4]
   12964:	cmp	r3, #0
   12968:	bne	12a54 <__printf_chk@plt+0x1da4>
   1296c:	mov	r0, r6
   12970:	bl	10bf0 <strlen@plt>
   12974:	add	r5, r5, #1
   12978:	str	r5, [r4]
   1297c:	mov	r3, #63	; 0x3f
   12980:	add	r0, r6, r0
   12984:	str	r0, [r4, #20]
   12988:	b	12084 <__printf_chk@plt+0x13d4>
   1298c:	ldr	r3, [sp, #16]
   12990:	cmp	r3, #0
   12994:	bne	12894 <__printf_chk@plt+0x1be4>
   12998:	b	126d4 <__printf_chk@plt+0x1a24>
   1299c:	ldr	r3, [sp, #16]
   129a0:	cmp	r3, #0
   129a4:	bne	12a98 <__printf_chk@plt+0x1de8>
   129a8:	str	r8, [r4, #8]
   129ac:	ldrb	r3, [r9]
   129b0:	cmp	r3, #58	; 0x3a
   129b4:	moveq	r3, #58	; 0x3a
   129b8:	movne	r3, #63	; 0x3f
   129bc:	b	12084 <__printf_chk@plt+0x13d4>
   129c0:	str	r6, [sp, #20]
   129c4:	b	122f4 <__printf_chk@plt+0x1644>
   129c8:	ldr	r3, [sp, #8]
   129cc:	ldr	r1, [pc, #308]	; 12b08 <__printf_chk@plt+0x1e58>
   129d0:	ldr	r2, [r3]
   129d4:	ldr	r0, [r1]
   129d8:	mov	r3, r8
   129dc:	ldr	r1, [pc, #324]	; 12b28 <__printf_chk@plt+0x1e78>
   129e0:	bl	143e8 <__printf_chk@plt+0x3738>
   129e4:	b	128f4 <__printf_chk@plt+0x1c44>
   129e8:	mov	r3, #0
   129ec:	str	r3, [r4, #20]
   129f0:	mov	r3, #87	; 0x57
   129f4:	b	12084 <__printf_chk@plt+0x13d4>
   129f8:	ldr	r1, [pc, #300]	; 12b2c <__printf_chk@plt+0x1e7c>
   129fc:	bl	143e8 <__printf_chk@plt+0x3738>
   12a00:	ldr	r5, [r4, #20]
   12a04:	b	1285c <__printf_chk@plt+0x1bac>
   12a08:	ldr	r3, [sp, #16]
   12a0c:	cmp	r3, #0
   12a10:	bne	12ab8 <__printf_chk@plt+0x1e08>
   12a14:	mov	r0, r6
   12a18:	bl	10bf0 <strlen@plt>
   12a1c:	mov	r3, #63	; 0x3f
   12a20:	add	r0, r6, r0
   12a24:	str	r0, [r4, #20]
   12a28:	b	12084 <__printf_chk@plt+0x13d4>
   12a2c:	ldr	r2, [sp, #8]
   12a30:	ldr	r0, [sp, #20]
   12a34:	ldr	r1, [pc, #204]	; 12b08 <__printf_chk@plt+0x1e58>
   12a38:	ldr	r3, [r2, r0, lsl #2]
   12a3c:	ldr	r0, [r1]
   12a40:	ldr	r2, [r2]
   12a44:	ldr	r1, [pc, #228]	; 12b30 <__printf_chk@plt+0x1e80>
   12a48:	bl	143e8 <__printf_chk@plt+0x3738>
   12a4c:	ldr	r5, [r4, #20]
   12a50:	b	12930 <__printf_chk@plt+0x1c80>
   12a54:	ldr	r2, [sp, #8]
   12a58:	ldr	r1, [pc, #168]	; 12b08 <__printf_chk@plt+0x1e58>
   12a5c:	ldr	r3, [r2, r5, lsl #2]
   12a60:	ldr	r0, [r1]
   12a64:	ldr	r2, [r2]
   12a68:	ldr	r1, [pc, #196]	; 12b34 <__printf_chk@plt+0x1e84>
   12a6c:	bl	143e8 <__printf_chk@plt+0x3738>
   12a70:	ldr	r6, [r4, #20]
   12a74:	ldr	r5, [r4]
   12a78:	b	1296c <__printf_chk@plt+0x1cbc>
   12a7c:	ldr	r2, [sp, #16]
   12a80:	cmp	r2, #0
   12a84:	bne	12adc <__printf_chk@plt+0x1e2c>
   12a88:	ldr	r5, [r4, #20]
   12a8c:	mov	r0, r5
   12a90:	bl	10bf0 <strlen@plt>
   12a94:	b	12940 <__printf_chk@plt+0x1c90>
   12a98:	ldr	r3, [sp, #8]
   12a9c:	ldr	r1, [pc, #100]	; 12b08 <__printf_chk@plt+0x1e58>
   12aa0:	ldr	r2, [r3]
   12aa4:	ldr	r0, [r1]
   12aa8:	mov	r3, r8
   12aac:	ldr	r1, [pc, #116]	; 12b28 <__printf_chk@plt+0x1e78>
   12ab0:	bl	143e8 <__printf_chk@plt+0x3738>
   12ab4:	b	129a8 <__printf_chk@plt+0x1cf8>
   12ab8:	ldr	r1, [pc, #72]	; 12b08 <__printf_chk@plt+0x1e58>
   12abc:	ldr	r2, [sp, #8]
   12ac0:	ldr	r3, [r8]
   12ac4:	ldr	r0, [r1]
   12ac8:	ldr	r2, [r2]
   12acc:	ldr	r1, [pc, #100]	; 12b38 <__printf_chk@plt+0x1e88>
   12ad0:	bl	143e8 <__printf_chk@plt+0x3738>
   12ad4:	ldr	r6, [r4, #20]
   12ad8:	b	12a14 <__printf_chk@plt+0x1d64>
   12adc:	ldr	r0, [sp, #8]
   12ae0:	ldr	r1, [pc, #32]	; 12b08 <__printf_chk@plt+0x1e58>
   12ae4:	sub	r3, r3, #-1073741823	; 0xc0000001
   12ae8:	ldr	r2, [r0]
   12aec:	ldr	r3, [r0, r3, lsl #2]
   12af0:	ldr	r0, [r1]
   12af4:	ldr	r1, [pc, #52]	; 12b30 <__printf_chk@plt+0x1e80>
   12af8:	bl	143e8 <__printf_chk@plt+0x3738>
   12afc:	b	12a88 <__printf_chk@plt+0x1dd8>
   12b00:	andeq	r6, r1, r4, asr r3
   12b04:	andeq	r6, r1, r4, asr #6
   12b08:	andeq	r7, r2, r8, lsr #32
   12b0c:	andeq	r6, r1, r0, lsr #8
   12b10:	andeq	r6, r1, r8, asr #5
   12b14:	andeq	r6, r1, r0, asr #8
   12b18:	andeq	r6, r1, ip, asr r4
   12b1c:	andeq	r6, r1, r8, asr r3
   12b20:	andeq	r6, r1, r8, lsr #7
   12b24:	andeq	r6, r1, r0, lsl #8
   12b28:	andeq	r6, r1, r8, ror r4
   12b2c:	andeq	r6, r1, r8, ror r3
   12b30:	ldrdeq	r6, [r1], -r8
   12b34:	andeq	r6, r1, r0, lsr #9
   12b38:	andeq	r6, r1, r4, asr #9
   12b3c:	push	{r4, r5, r6, lr}
   12b40:	sub	sp, sp, #16
   12b44:	ldr	r5, [pc, #80]	; 12b9c <__printf_chk@plt+0x1eec>
   12b48:	ldr	ip, [sp, #32]
   12b4c:	ldr	r6, [sp, #36]	; 0x24
   12b50:	str	ip, [sp]
   12b54:	ldr	ip, [sp, #40]	; 0x28
   12b58:	ldr	r4, [pc, #64]	; 12ba0 <__printf_chk@plt+0x1ef0>
   12b5c:	ldr	lr, [r5]
   12b60:	stmib	sp, {r6, ip}
   12b64:	ldr	ip, [r5, #4]
   12b68:	str	r4, [sp, #12]
   12b6c:	str	ip, [r4, #4]
   12b70:	str	lr, [r4]
   12b74:	bl	11f5c <__printf_chk@plt+0x12ac>
   12b78:	ldr	r3, [pc, #36]	; 12ba4 <__printf_chk@plt+0x1ef4>
   12b7c:	ldr	ip, [r4]
   12b80:	ldr	r1, [r4, #8]
   12b84:	ldr	r2, [r4, #12]
   12b88:	str	ip, [r5]
   12b8c:	str	r1, [r5, #8]
   12b90:	str	r2, [r3]
   12b94:	add	sp, sp, #16
   12b98:	pop	{r4, r5, r6, pc}
   12b9c:	andeq	r7, r2, r8
   12ba0:	andeq	r7, r2, r0, rrx
   12ba4:	ldrdeq	r7, [r2], -r4
   12ba8:	push	{lr}		; (str lr, [sp, #-4]!)
   12bac:	mov	r3, #0
   12bb0:	sub	sp, sp, #20
   12bb4:	mov	ip, #1
   12bb8:	str	r3, [sp]
   12bbc:	stmib	sp, {r3, ip}
   12bc0:	bl	12b3c <__printf_chk@plt+0x1e8c>
   12bc4:	add	sp, sp, #20
   12bc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bcc:	push	{lr}		; (str lr, [sp, #-4]!)
   12bd0:	sub	sp, sp, #20
   12bd4:	mov	ip, #0
   12bd8:	ldr	lr, [sp, #24]
   12bdc:	str	ip, [sp, #8]
   12be0:	str	lr, [sp]
   12be4:	str	ip, [sp, #4]
   12be8:	bl	12b3c <__printf_chk@plt+0x1e8c>
   12bec:	add	sp, sp, #20
   12bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   12bf8:	sub	sp, sp, #20
   12bfc:	ldr	ip, [sp, #24]
   12c00:	ldr	lr, [sp, #28]
   12c04:	str	ip, [sp]
   12c08:	mov	ip, #0
   12c0c:	str	lr, [sp, #12]
   12c10:	str	ip, [sp, #8]
   12c14:	str	ip, [sp, #4]
   12c18:	bl	11f5c <__printf_chk@plt+0x12ac>
   12c1c:	add	sp, sp, #20
   12c20:	pop	{pc}		; (ldr pc, [sp], #4)
   12c24:	push	{lr}		; (str lr, [sp, #-4]!)
   12c28:	sub	sp, sp, #20
   12c2c:	mov	lr, #0
   12c30:	ldr	ip, [sp, #24]
   12c34:	str	ip, [sp]
   12c38:	mov	ip, #1
   12c3c:	stmib	sp, {ip, lr}
   12c40:	bl	12b3c <__printf_chk@plt+0x1e8c>
   12c44:	add	sp, sp, #20
   12c48:	pop	{pc}		; (ldr pc, [sp], #4)
   12c4c:	push	{lr}		; (str lr, [sp, #-4]!)
   12c50:	sub	sp, sp, #20
   12c54:	ldr	lr, [sp, #24]
   12c58:	ldr	ip, [sp, #28]
   12c5c:	str	lr, [sp]
   12c60:	str	ip, [sp, #12]
   12c64:	mov	lr, #0
   12c68:	mov	ip, #1
   12c6c:	stmib	sp, {ip, lr}
   12c70:	bl	11f5c <__printf_chk@plt+0x12ac>
   12c74:	add	sp, sp, #20
   12c78:	pop	{pc}		; (ldr pc, [sp], #4)
   12c7c:	subs	r2, r0, #0
   12c80:	bge	12cd0 <__printf_chk@plt+0x2020>
   12c84:	push	{lr}		; (str lr, [sp, #-4]!)
   12c88:	ldr	r1, [pc, #108]	; 12cfc <__printf_chk@plt+0x204c>
   12c8c:	ldr	lr, [pc, #108]	; 12d00 <__printf_chk@plt+0x2050>
   12c90:	b	12c98 <__printf_chk@plt+0x1fe8>
   12c94:	mov	r1, ip
   12c98:	smull	r3, r0, lr, r2
   12c9c:	asr	r3, r2, #31
   12ca0:	rsb	r3, r3, r0, asr #2
   12ca4:	sub	ip, r1, #1
   12ca8:	add	r0, r3, r3, lsl #2
   12cac:	sub	r0, r2, r0, lsl #1
   12cb0:	rsb	r0, r0, #48	; 0x30
   12cb4:	subs	r2, r3, #0
   12cb8:	strb	r0, [r1, #-1]
   12cbc:	bne	12c94 <__printf_chk@plt+0x1fe4>
   12cc0:	mov	r3, #45	; 0x2d
   12cc4:	sub	r0, r1, #2
   12cc8:	strb	r3, [ip, #-1]
   12ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   12cd0:	ldr	r0, [pc, #36]	; 12cfc <__printf_chk@plt+0x204c>
   12cd4:	ldr	ip, [pc, #40]	; 12d04 <__printf_chk@plt+0x2054>
   12cd8:	umull	r1, r3, ip, r2
   12cdc:	lsr	r3, r3, #3
   12ce0:	add	r1, r3, r3, lsl #2
   12ce4:	sub	r1, r2, r1, lsl #1
   12ce8:	add	r1, r1, #48	; 0x30
   12cec:	subs	r2, r3, #0
   12cf0:	strb	r1, [r0, #-1]!
   12cf4:	bne	12cd8 <__printf_chk@plt+0x2028>
   12cf8:	bx	lr
   12cfc:	muleq	r2, ip, r0
   12d00:	strbtvs	r6, [r6], -r7, ror #12
   12d04:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12d08:	mov	r1, r0
   12d0c:	ldr	ip, [pc, #40]	; 12d3c <__printf_chk@plt+0x208c>
   12d10:	ldr	r0, [pc, #40]	; 12d40 <__printf_chk@plt+0x2090>
   12d14:	umull	r3, r2, ip, r1
   12d18:	cmp	r1, #9
   12d1c:	lsr	r2, r2, #3
   12d20:	add	r3, r2, r2, lsl #2
   12d24:	sub	r3, r1, r3, lsl #1
   12d28:	add	r3, r3, #48	; 0x30
   12d2c:	mov	r1, r2
   12d30:	strb	r3, [r0, #-1]!
   12d34:	bhi	12d14 <__printf_chk@plt+0x2064>
   12d38:	bx	lr
   12d3c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   12d40:	strheq	r7, [r2], -r4
   12d44:	push	{r4, r5, r6, lr}
   12d48:	sub	sp, sp, #16
   12d4c:	ldr	r5, [pc, #440]	; 12f0c <__printf_chk@plt+0x225c>
   12d50:	ldrb	r3, [r0]
   12d54:	ldr	r2, [r5]
   12d58:	cmp	r3, #32
   12d5c:	str	r2, [sp, #12]
   12d60:	bne	12d70 <__printf_chk@plt+0x20c0>
   12d64:	ldrb	r3, [r0, #1]!
   12d68:	cmp	r3, #32
   12d6c:	beq	12d64 <__printf_chk@plt+0x20b4>
   12d70:	ldr	r1, [pc, #408]	; 12f10 <__printf_chk@plt+0x2260>
   12d74:	ldrb	r2, [r1, r3]
   12d78:	cmp	r2, #0
   12d7c:	beq	12ed0 <__printf_chk@plt+0x2220>
   12d80:	ldrb	r3, [r0]
   12d84:	mov	r4, #0
   12d88:	sub	r2, r3, #48	; 0x30
   12d8c:	ldrb	r3, [r0, #1]!
   12d90:	add	r4, r4, r4, lsl #2
   12d94:	add	r4, r2, r4, lsl #1
   12d98:	ldrb	r2, [r1, r3]
   12d9c:	cmp	r2, #0
   12da0:	bne	12d88 <__printf_chk@plt+0x20d8>
   12da4:	and	r1, r3, #223	; 0xdf
   12da8:	cmp	r3, #10
   12dac:	cmpne	r1, #0
   12db0:	beq	12dbc <__printf_chk@plt+0x210c>
   12db4:	b	12ed0 <__printf_chk@plt+0x2220>
   12db8:	ldrb	r3, [r0, #1]!
   12dbc:	cmp	r3, #32
   12dc0:	beq	12db8 <__printf_chk@plt+0x2108>
   12dc4:	sub	r2, r3, #10
   12dc8:	cmp	r3, #0
   12dcc:	clz	r2, r2
   12dd0:	lsr	r2, r2, #5
   12dd4:	movne	r3, r2
   12dd8:	moveq	r3, #1
   12ddc:	cmp	r3, #0
   12de0:	bne	12ea8 <__printf_chk@plt+0x21f8>
   12de4:	ldrb	r1, [r0]
   12de8:	cmp	r1, #92	; 0x5c
   12dec:	cmpne	r1, #10
   12df0:	moveq	r2, #1
   12df4:	movne	r2, #0
   12df8:	tst	r1, #223	; 0xdf
   12dfc:	moveq	r2, #1
   12e00:	cmp	r2, #0
   12e04:	bne	12ef0 <__printf_chk@plt+0x2240>
   12e08:	mov	r6, r0
   12e0c:	ldrb	r2, [r6, #1]!
   12e10:	cmp	r2, #92	; 0x5c
   12e14:	cmpne	r2, #10
   12e18:	moveq	r3, #1
   12e1c:	movne	r3, #0
   12e20:	tst	r2, #223	; 0xdf
   12e24:	moveq	r3, #1
   12e28:	cmp	r3, #0
   12e2c:	beq	12e0c <__printf_chk@plt+0x215c>
   12e30:	sub	r2, r6, r0
   12e34:	mov	r1, r0
   12e38:	mov	r0, sp
   12e3c:	bl	13680 <__printf_chk@plt+0x29d0>
   12e40:	ldrb	r3, [r6]
   12e44:	cmp	r3, #32
   12e48:	bne	12e58 <__printf_chk@plt+0x21a8>
   12e4c:	ldrb	r3, [r6, #1]!
   12e50:	cmp	r3, #32
   12e54:	beq	12e4c <__printf_chk@plt+0x219c>
   12e58:	cmp	r3, #0
   12e5c:	cmpne	r3, #10
   12e60:	bne	12ee8 <__printf_chk@plt+0x2238>
   12e64:	ldr	r3, [sp, #4]
   12e68:	ldr	r2, [sp, #8]
   12e6c:	cmp	r3, r2
   12e70:	bge	12ed8 <__printf_chk@plt+0x2228>
   12e74:	ldr	r2, [sp]
   12e78:	add	r0, r3, #1
   12e7c:	mov	r1, #0
   12e80:	str	r0, [sp, #4]
   12e84:	strb	r1, [r2, r3]
   12e88:	ldr	r0, [sp]
   12e8c:	bl	14028 <__printf_chk@plt+0x3378>
   12e90:	mov	r0, r4
   12e94:	bl	14064 <__printf_chk@plt+0x33b4>
   12e98:	mov	r4, #1
   12e9c:	mov	r0, sp
   12ea0:	bl	137c8 <__printf_chk@plt+0x2b18>
   12ea4:	b	12eb4 <__printf_chk@plt+0x2204>
   12ea8:	mov	r0, r4
   12eac:	bl	14064 <__printf_chk@plt+0x33b4>
   12eb0:	mov	r4, #1
   12eb4:	ldr	r2, [sp, #12]
   12eb8:	ldr	r3, [r5]
   12ebc:	mov	r0, r4
   12ec0:	cmp	r2, r3
   12ec4:	bne	12efc <__printf_chk@plt+0x224c>
   12ec8:	add	sp, sp, #16
   12ecc:	pop	{r4, r5, r6, pc}
   12ed0:	mov	r4, r2
   12ed4:	b	12eb4 <__printf_chk@plt+0x2204>
   12ed8:	mov	r0, sp
   12edc:	bl	13930 <__printf_chk@plt+0x2c80>
   12ee0:	ldr	r3, [sp, #4]
   12ee4:	b	12e74 <__printf_chk@plt+0x21c4>
   12ee8:	mov	r4, #0
   12eec:	b	12e9c <__printf_chk@plt+0x21ec>
   12ef0:	mov	r2, r3
   12ef4:	mov	r6, r0
   12ef8:	b	12e34 <__printf_chk@plt+0x2184>
   12efc:	bl	10b6c <__stack_chk_fail@plt>
   12f00:	mov	r0, sp
   12f04:	bl	137c8 <__printf_chk@plt+0x2b18>
   12f08:	bl	10b78 <__cxa_end_cleanup@plt>
   12f0c:	andeq	r6, r2, r8, lsr lr
   12f10:	ldrdeq	r7, [r2], -r4
   12f14:	bx	lr
   12f18:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f1c:	subs	r4, r3, #0
   12f20:	mov	r7, r0
   12f24:	mov	r5, r1
   12f28:	mov	r6, r2
   12f2c:	ldr	r9, [sp, #40]	; 0x28
   12f30:	bne	130b4 <__printf_chk@plt+0x2404>
   12f34:	cmp	r5, #0
   12f38:	beq	12f68 <__printf_chk@plt+0x22b8>
   12f3c:	mov	r0, r5
   12f40:	bl	10c80 <getenv@plt>
   12f44:	subs	r8, r0, #0
   12f48:	beq	12f68 <__printf_chk@plt+0x22b8>
   12f4c:	ldrb	r3, [r8]
   12f50:	cmp	r3, #0
   12f54:	moveq	sl, #1
   12f58:	beq	12f70 <__printf_chk@plt+0x22c0>
   12f5c:	bl	10bf0 <strlen@plt>
   12f60:	add	sl, r0, #2
   12f64:	b	12f70 <__printf_chk@plt+0x22c0>
   12f68:	mov	sl, #1
   12f6c:	mov	r8, #0
   12f70:	cmp	r9, #0
   12f74:	movne	fp, #2
   12f78:	moveq	fp, #0
   12f7c:	cmp	r4, #0
   12f80:	moveq	r5, r4
   12f84:	beq	12f94 <__printf_chk@plt+0x22e4>
   12f88:	ldrb	r5, [r4]
   12f8c:	cmp	r5, #0
   12f90:	bne	13030 <__printf_chk@plt+0x2380>
   12f94:	cmp	r6, #0
   12f98:	add	sl, sl, fp
   12f9c:	moveq	r0, r6
   12fa0:	beq	12fb0 <__printf_chk@plt+0x2300>
   12fa4:	ldrb	r0, [r6]
   12fa8:	cmp	r0, #0
   12fac:	bne	13024 <__printf_chk@plt+0x2374>
   12fb0:	add	r5, r5, sl
   12fb4:	add	r0, r5, r0
   12fb8:	bl	10b30 <_Znaj@plt>
   12fbc:	mov	r3, #0
   12fc0:	cmp	r8, #0
   12fc4:	mov	r5, r0
   12fc8:	str	r0, [r7]
   12fcc:	strb	r3, [r0]
   12fd0:	beq	12fe0 <__printf_chk@plt+0x2330>
   12fd4:	ldrb	r3, [r8]
   12fd8:	cmp	r3, #0
   12fdc:	bne	13074 <__printf_chk@plt+0x23c4>
   12fe0:	cmp	r9, #0
   12fe4:	bne	13090 <__printf_chk@plt+0x23e0>
   12fe8:	cmp	r4, #0
   12fec:	beq	12ffc <__printf_chk@plt+0x234c>
   12ff0:	ldrb	r3, [r4]
   12ff4:	cmp	r3, #0
   12ff8:	bne	13050 <__printf_chk@plt+0x23a0>
   12ffc:	cmp	r6, #0
   13000:	beq	13010 <__printf_chk@plt+0x2360>
   13004:	ldrb	r3, [r6]
   13008:	cmp	r3, #0
   1300c:	bne	13040 <__printf_chk@plt+0x2390>
   13010:	mov	r0, r5
   13014:	bl	10bf0 <strlen@plt>
   13018:	str	r0, [r7, #4]
   1301c:	mov	r0, r7
   13020:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13024:	mov	r0, r6
   13028:	bl	10bf0 <strlen@plt>
   1302c:	b	12fb0 <__printf_chk@plt+0x2300>
   13030:	mov	r0, r4
   13034:	bl	10bf0 <strlen@plt>
   13038:	add	r5, r0, #1
   1303c:	b	12f94 <__printf_chk@plt+0x22e4>
   13040:	mov	r1, r6
   13044:	mov	r0, r5
   13048:	bl	10b60 <strcat@plt>
   1304c:	b	13010 <__printf_chk@plt+0x2360>
   13050:	mov	r0, r5
   13054:	bl	10bf0 <strlen@plt>
   13058:	mov	r1, r4
   1305c:	add	r0, r5, r0
   13060:	bl	10b24 <stpcpy@plt>
   13064:	ldr	r3, [pc, #88]	; 130c4 <__printf_chk@plt+0x2414>
   13068:	ldrh	r3, [r3]
   1306c:	strh	r3, [r0]
   13070:	b	12ffc <__printf_chk@plt+0x234c>
   13074:	mov	r1, r8
   13078:	bl	10b24 <stpcpy@plt>
   1307c:	ldr	r3, [pc, #64]	; 130c4 <__printf_chk@plt+0x2414>
   13080:	cmp	r9, #0
   13084:	ldrh	r3, [r3]
   13088:	strh	r3, [r0]
   1308c:	beq	12fe8 <__printf_chk@plt+0x2338>
   13090:	mov	r0, r5
   13094:	bl	10bf0 <strlen@plt>
   13098:	ldr	r3, [pc, #36]	; 130c4 <__printf_chk@plt+0x2414>
   1309c:	mov	r2, #46	; 0x2e
   130a0:	ldrh	r3, [r3]
   130a4:	strb	r2, [r5, r0]
   130a8:	add	r0, r0, #1
   130ac:	strh	r3, [r5, r0]
   130b0:	b	12fe8 <__printf_chk@plt+0x2338>
   130b4:	ldr	r0, [pc, #12]	; 130c8 <__printf_chk@plt+0x2418>
   130b8:	bl	10c80 <getenv@plt>
   130bc:	mov	r4, r0
   130c0:	b	12f34 <__printf_chk@plt+0x2284>
   130c4:	strdeq	r6, [r1], -ip
   130c8:	strdeq	r6, [r1], -r4
   130cc:	push	{r4, lr}
   130d0:	mov	r4, r0
   130d4:	ldr	r0, [r0]
   130d8:	cmp	r0, #0
   130dc:	beq	130e4 <__printf_chk@plt+0x2434>
   130e0:	bl	10b9c <_ZdaPv@plt>
   130e4:	mov	r0, r4
   130e8:	pop	{r4, pc}
   130ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130f0:	mov	r5, r0
   130f4:	ldr	r6, [r0]
   130f8:	mov	r9, r1
   130fc:	mov	r0, r6
   13100:	bl	10bf0 <strlen@plt>
   13104:	mov	r4, r0
   13108:	mov	r0, r9
   1310c:	bl	10bf0 <strlen@plt>
   13110:	mov	r7, r0
   13114:	add	r0, r4, r0
   13118:	add	r0, r0, #2
   1311c:	bl	10b30 <_Znaj@plt>
   13120:	ldr	r8, [r5, #4]
   13124:	mov	r1, r6
   13128:	sub	r4, r4, r8
   1312c:	mov	r2, r4
   13130:	str	r0, [r5]
   13134:	mov	sl, r0
   13138:	bl	10bd8 <memcpy@plt>
   1313c:	cmp	r8, #0
   13140:	add	r3, sl, r4
   13144:	beq	13194 <__printf_chk@plt+0x24e4>
   13148:	mov	r1, r9
   1314c:	mov	r2, r7
   13150:	mov	r0, r3
   13154:	bl	10bd8 <memcpy@plt>
   13158:	mov	ip, #58	; 0x3a
   1315c:	add	r1, r6, r4
   13160:	mov	r3, r0
   13164:	add	r2, r0, r7
   13168:	add	r5, r2, #1
   1316c:	mov	r0, r5
   13170:	mov	r2, r8
   13174:	strb	ip, [r3, r7]
   13178:	bl	10bd8 <memcpy@plt>
   1317c:	add	r2, r5, r8
   13180:	mov	r3, #0
   13184:	mov	r0, r6
   13188:	strb	r3, [r2]
   1318c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13190:	b	10b9c <_ZdaPv@plt>
   13194:	add	r3, r3, #1
   13198:	mov	ip, #58	; 0x3a
   1319c:	mov	r2, r7
   131a0:	mov	r1, r9
   131a4:	mov	r0, r3
   131a8:	strb	ip, [sl, r4]
   131ac:	bl	10bd8 <memcpy@plt>
   131b0:	add	r2, r0, r7
   131b4:	b	13180 <__printf_chk@plt+0x24d0>
   131b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131bc:	sub	sp, sp, #12
   131c0:	subs	r8, r1, #0
   131c4:	mov	r4, r0
   131c8:	str	r2, [sp, #4]
   131cc:	beq	13318 <__printf_chk@plt+0x2668>
   131d0:	ldrb	r3, [r8]
   131d4:	cmp	r3, #47	; 0x2f
   131d8:	beq	132ac <__printf_chk@plt+0x25fc>
   131dc:	ldr	r4, [r4]
   131e0:	ldrb	r3, [r4]
   131e4:	cmp	r3, #0
   131e8:	beq	132ac <__printf_chk@plt+0x25fc>
   131ec:	mov	r0, r8
   131f0:	bl	10bf0 <strlen@plt>
   131f4:	ldr	fp, [pc, #340]	; 13350 <__printf_chk@plt+0x26a0>
   131f8:	ldr	sl, [pc, #340]	; 13354 <__printf_chk@plt+0x26a4>
   131fc:	add	r9, r0, #1
   13200:	b	13288 <__printf_chk@plt+0x25d8>
   13204:	cmp	r4, r5
   13208:	mov	r0, fp
   1320c:	sub	r6, r5, r4
   13210:	bcs	13224 <__printf_chk@plt+0x2574>
   13214:	ldrb	r1, [r5, #-1]
   13218:	bl	10ca4 <strchr@plt>
   1321c:	cmp	r0, #0
   13220:	beq	132e4 <__printf_chk@plt+0x2634>
   13224:	add	r0, r9, r6
   13228:	bl	10b30 <_Znaj@plt>
   1322c:	mov	r2, r6
   13230:	mov	r1, r4
   13234:	mov	r7, r0
   13238:	bl	10bd8 <memcpy@plt>
   1323c:	mov	r1, r8
   13240:	add	r0, r7, r6
   13244:	bl	10b54 <strcpy@plt>
   13248:	mov	r0, r7
   1324c:	bl	13ff0 <__printf_chk@plt+0x3340>
   13250:	add	r4, r5, #1
   13254:	mov	r6, r0
   13258:	mov	r0, r7
   1325c:	bl	10b9c <_ZdaPv@plt>
   13260:	mov	r1, sl
   13264:	mov	r0, r6
   13268:	bl	10c50 <fopen64@plt>
   1326c:	subs	r7, r0, #0
   13270:	mov	r0, r6
   13274:	bne	13338 <__printf_chk@plt+0x2688>
   13278:	bl	10af4 <free@plt>
   1327c:	ldrb	r3, [r5]
   13280:	cmp	r3, #0
   13284:	beq	13328 <__printf_chk@plt+0x2678>
   13288:	mov	r1, #58	; 0x3a
   1328c:	mov	r0, r4
   13290:	bl	10ca4 <strchr@plt>
   13294:	subs	r5, r0, #0
   13298:	bne	13204 <__printf_chk@plt+0x2554>
   1329c:	mov	r0, r4
   132a0:	bl	10bf0 <strlen@plt>
   132a4:	add	r5, r4, r0
   132a8:	b	13204 <__printf_chk@plt+0x2554>
   132ac:	ldr	r1, [pc, #160]	; 13354 <__printf_chk@plt+0x26a4>
   132b0:	mov	r0, r8
   132b4:	bl	10c50 <fopen64@plt>
   132b8:	subs	r7, r0, #0
   132bc:	beq	13328 <__printf_chk@plt+0x2678>
   132c0:	ldr	r4, [sp, #4]
   132c4:	cmp	r4, #0
   132c8:	beq	132d8 <__printf_chk@plt+0x2628>
   132cc:	mov	r0, r8
   132d0:	bl	13ff0 <__printf_chk@plt+0x3340>
   132d4:	str	r0, [r4]
   132d8:	mov	r0, r7
   132dc:	add	sp, sp, #12
   132e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132e4:	add	r3, r6, #1
   132e8:	add	r0, r3, r9
   132ec:	str	r3, [sp]
   132f0:	bl	10b30 <_Znaj@plt>
   132f4:	mov	r2, r6
   132f8:	mov	r1, r4
   132fc:	mov	r7, r0
   13300:	bl	10bd8 <memcpy@plt>
   13304:	ldr	r3, [sp]
   13308:	mov	r2, #47	; 0x2f
   1330c:	strb	r2, [r7, r6]
   13310:	mov	r6, r3
   13314:	b	1323c <__printf_chk@plt+0x258c>
   13318:	ldr	r1, [pc, #56]	; 13358 <__printf_chk@plt+0x26a8>
   1331c:	mov	r0, #97	; 0x61
   13320:	bl	118d8 <__printf_chk@plt+0xc28>
   13324:	b	131d0 <__printf_chk@plt+0x2520>
   13328:	mov	r7, #0
   1332c:	mov	r0, r7
   13330:	add	sp, sp, #12
   13334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13338:	ldr	r3, [sp, #4]
   1333c:	cmp	r3, #0
   13340:	strne	r6, [r3]
   13344:	bne	132d8 <__printf_chk@plt+0x2628>
   13348:	bl	10af4 <free@plt>
   1334c:	b	132d8 <__printf_chk@plt+0x2628>
   13350:	andeq	r6, r1, ip, lsr #10
   13354:	andeq	r6, r1, r8, lsr #10
   13358:	andeq	r6, r1, r0, lsl #10
   1335c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13360:	cmp	r3, #0
   13364:	ldr	r8, [pc, #496]	; 1355c <__printf_chk@plt+0x28ac>
   13368:	movne	r8, r3
   1336c:	mov	r9, r1
   13370:	sub	sp, sp, #12
   13374:	mov	r5, r0
   13378:	mov	r1, #114	; 0x72
   1337c:	mov	r0, r8
   13380:	mov	sl, r2
   13384:	bl	10ca4 <strchr@plt>
   13388:	cmp	r9, #0
   1338c:	mov	r4, r0
   13390:	beq	134d0 <__printf_chk@plt+0x2820>
   13394:	ldr	r1, [pc, #452]	; 13560 <__printf_chk@plt+0x28b0>
   13398:	mov	r0, r9
   1339c:	bl	10c20 <strcmp@plt>
   133a0:	cmp	r0, #0
   133a4:	beq	134d0 <__printf_chk@plt+0x2820>
   133a8:	cmp	r4, #0
   133ac:	beq	1349c <__printf_chk@plt+0x27ec>
   133b0:	ldrb	r3, [r9]
   133b4:	cmp	r3, #47	; 0x2f
   133b8:	beq	1349c <__printf_chk@plt+0x27ec>
   133bc:	ldr	r4, [r5]
   133c0:	ldrb	r3, [r4]
   133c4:	cmp	r3, #0
   133c8:	beq	1349c <__printf_chk@plt+0x27ec>
   133cc:	mov	r0, r9
   133d0:	bl	10bf0 <strlen@plt>
   133d4:	str	sl, [sp, #4]
   133d8:	add	fp, r0, #1
   133dc:	b	13478 <__printf_chk@plt+0x27c8>
   133e0:	cmp	r4, r5
   133e4:	sub	r6, r5, r4
   133e8:	bcs	13400 <__printf_chk@plt+0x2750>
   133ec:	ldrb	r1, [r5, #-1]
   133f0:	ldr	r0, [pc, #364]	; 13564 <__printf_chk@plt+0x28b4>
   133f4:	bl	10ca4 <strchr@plt>
   133f8:	cmp	r0, #0
   133fc:	beq	1350c <__printf_chk@plt+0x285c>
   13400:	add	r0, fp, r6
   13404:	bl	10b30 <_Znaj@plt>
   13408:	mov	r2, r6
   1340c:	mov	r1, r4
   13410:	mov	r7, r0
   13414:	bl	10bd8 <memcpy@plt>
   13418:	mov	r1, r9
   1341c:	add	r0, r7, r6
   13420:	bl	10b54 <strcpy@plt>
   13424:	mov	r0, r7
   13428:	bl	13ff0 <__printf_chk@plt+0x3340>
   1342c:	mov	r4, r0
   13430:	mov	r0, r7
   13434:	bl	10b9c <_ZdaPv@plt>
   13438:	mov	r1, r8
   1343c:	mov	r0, r4
   13440:	bl	10c50 <fopen64@plt>
   13444:	subs	r6, r0, #0
   13448:	bne	13540 <__printf_chk@plt+0x2890>
   1344c:	bl	10c2c <__errno_location@plt>
   13450:	mov	r7, r0
   13454:	mov	r0, r4
   13458:	ldr	r4, [r7]
   1345c:	bl	10af4 <free@plt>
   13460:	cmp	r4, #2
   13464:	bne	13538 <__printf_chk@plt+0x2888>
   13468:	ldrb	r3, [r5]
   1346c:	cmp	r3, #0
   13470:	beq	13538 <__printf_chk@plt+0x2888>
   13474:	add	r4, r5, #1
   13478:	mov	r1, #58	; 0x3a
   1347c:	mov	r0, r4
   13480:	bl	10ca4 <strchr@plt>
   13484:	subs	r5, r0, #0
   13488:	bne	133e0 <__printf_chk@plt+0x2730>
   1348c:	mov	r0, r4
   13490:	bl	10bf0 <strlen@plt>
   13494:	add	r5, r4, r0
   13498:	b	133e0 <__printf_chk@plt+0x2730>
   1349c:	mov	r1, r8
   134a0:	mov	r0, r9
   134a4:	bl	10c50 <fopen64@plt>
   134a8:	subs	r6, r0, #0
   134ac:	beq	134c4 <__printf_chk@plt+0x2814>
   134b0:	cmp	sl, #0
   134b4:	beq	134c4 <__printf_chk@plt+0x2814>
   134b8:	mov	r0, r9
   134bc:	bl	13ff0 <__printf_chk@plt+0x3340>
   134c0:	str	r0, [sl]
   134c4:	mov	r0, r6
   134c8:	add	sp, sp, #12
   134cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134d0:	cmp	sl, #0
   134d4:	beq	134f0 <__printf_chk@plt+0x2840>
   134d8:	ldr	r3, [pc, #136]	; 13568 <__printf_chk@plt+0x28b8>
   134dc:	cmp	r4, #0
   134e0:	ldr	r0, [pc, #132]	; 1356c <__printf_chk@plt+0x28bc>
   134e4:	moveq	r0, r3
   134e8:	bl	13ff0 <__printf_chk@plt+0x3340>
   134ec:	str	r0, [sl]
   134f0:	cmp	r4, #0
   134f4:	ldrne	r3, [pc, #116]	; 13570 <__printf_chk@plt+0x28c0>
   134f8:	ldreq	r3, [pc, #116]	; 13574 <__printf_chk@plt+0x28c4>
   134fc:	ldr	r6, [r3]
   13500:	mov	r0, r6
   13504:	add	sp, sp, #12
   13508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1350c:	add	sl, r6, #1
   13510:	add	r0, sl, fp
   13514:	bl	10b30 <_Znaj@plt>
   13518:	mov	r2, r6
   1351c:	mov	r1, r4
   13520:	mov	r7, r0
   13524:	bl	10bd8 <memcpy@plt>
   13528:	mov	r3, #47	; 0x2f
   1352c:	strb	r3, [r7, r6]
   13530:	mov	r6, sl
   13534:	b	13418 <__printf_chk@plt+0x2768>
   13538:	str	r4, [r7]
   1353c:	b	134c4 <__printf_chk@plt+0x2814>
   13540:	ldr	sl, [sp, #4]
   13544:	cmp	sl, #0
   13548:	strne	r4, [sl]
   1354c:	bne	134c4 <__printf_chk@plt+0x2814>
   13550:	mov	r0, r4
   13554:	bl	10af4 <free@plt>
   13558:	b	134c4 <__printf_chk@plt+0x2814>
   1355c:	andeq	r6, r1, r8, lsr #10
   13560:	andeq	r6, r1, r4, ror r2
   13564:	andeq	r6, r1, ip, lsr #10
   13568:	andeq	r6, r1, r8, lsr r5
   1356c:	andeq	r6, r1, r0, lsr r5
   13570:	andeq	r7, r2, r0, lsr #32
   13574:	andeq	r7, r2, ip, lsr #32
   13578:	cmp	r1, r2
   1357c:	push	{r4, r5, r6, lr}
   13580:	mov	r4, r0
   13584:	bge	135b4 <__printf_chk@plt+0x2904>
   13588:	cmp	r0, #0
   1358c:	mov	r5, r3
   13590:	mov	r4, r2
   13594:	beq	1359c <__printf_chk@plt+0x28ec>
   13598:	bl	10b9c <_ZdaPv@plt>
   1359c:	cmp	r4, #0
   135a0:	beq	135bc <__printf_chk@plt+0x290c>
   135a4:	lsl	r0, r4, #1
   135a8:	str	r0, [r5]
   135ac:	pop	{r4, r5, r6, lr}
   135b0:	b	10b30 <_Znaj@plt>
   135b4:	str	r1, [r3]
   135b8:	pop	{r4, r5, r6, pc}
   135bc:	str	r4, [r5]
   135c0:	mov	r0, r4
   135c4:	pop	{r4, r5, r6, pc}
   135c8:	cmp	r1, r3
   135cc:	push	{r4, r5, r6, r7, r8, lr}
   135d0:	mov	r5, r0
   135d4:	bge	1363c <__printf_chk@plt+0x298c>
   135d8:	cmp	r3, #0
   135dc:	mov	r6, r2
   135e0:	mov	r4, r3
   135e4:	beq	13618 <__printf_chk@plt+0x2968>
   135e8:	lsl	r0, r3, #1
   135ec:	ldr	r3, [sp, #24]
   135f0:	str	r0, [r3]
   135f4:	bl	10b30 <_Znaj@plt>
   135f8:	cmp	r6, #0
   135fc:	cmpne	r4, r6
   13600:	mov	r7, r0
   13604:	bgt	13650 <__printf_chk@plt+0x29a0>
   13608:	cmp	r5, #0
   1360c:	bne	1365c <__printf_chk@plt+0x29ac>
   13610:	mov	r0, r7
   13614:	pop	{r4, r5, r6, r7, r8, pc}
   13618:	cmp	r0, #0
   1361c:	beq	13624 <__printf_chk@plt+0x2974>
   13620:	bl	10b9c <_ZdaPv@plt>
   13624:	ldr	r3, [sp, #24]
   13628:	mov	ip, #0
   1362c:	mov	r7, ip
   13630:	str	ip, [r3]
   13634:	mov	r0, r7
   13638:	pop	{r4, r5, r6, r7, r8, pc}
   1363c:	ldr	r3, [sp, #24]
   13640:	mov	r7, r0
   13644:	mov	r0, r7
   13648:	str	r1, [r3]
   1364c:	pop	{r4, r5, r6, r7, r8, pc}
   13650:	mov	r2, r6
   13654:	mov	r1, r5
   13658:	bl	10bd8 <memcpy@plt>
   1365c:	mov	r0, r5
   13660:	bl	10b9c <_ZdaPv@plt>
   13664:	mov	r0, r7
   13668:	pop	{r4, r5, r6, r7, r8, pc}
   1366c:	mov	r2, #0
   13670:	str	r2, [r0]
   13674:	str	r2, [r0, #4]
   13678:	str	r2, [r0, #8]
   1367c:	bx	lr
   13680:	push	{r4, r5, r6, lr}
   13684:	subs	r5, r2, #0
   13688:	mov	r4, r0
   1368c:	str	r2, [r0, #4]
   13690:	mov	r6, r1
   13694:	blt	136c8 <__printf_chk@plt+0x2a18>
   13698:	streq	r5, [r0, #8]
   1369c:	streq	r5, [r0]
   136a0:	beq	136c0 <__printf_chk@plt+0x2a10>
   136a4:	lsl	r0, r5, #1
   136a8:	str	r0, [r4, #8]
   136ac:	bl	10b30 <_Znaj@plt>
   136b0:	mov	r2, r5
   136b4:	mov	r1, r6
   136b8:	str	r0, [r4]
   136bc:	bl	10bd8 <memcpy@plt>
   136c0:	mov	r0, r4
   136c4:	pop	{r4, r5, r6, pc}
   136c8:	ldr	r1, [pc, #8]	; 136d8 <__printf_chk@plt+0x2a28>
   136cc:	mov	r0, #87	; 0x57
   136d0:	bl	118d8 <__printf_chk@plt+0xc28>
   136d4:	b	136a4 <__printf_chk@plt+0x29f4>
   136d8:	andeq	r6, r1, r0, asr #10
   136dc:	push	{r4, r5, r6, lr}
   136e0:	subs	r5, r1, #0
   136e4:	mov	r4, r0
   136e8:	streq	r5, [r0, #4]
   136ec:	streq	r5, [r0]
   136f0:	streq	r5, [r0, #8]
   136f4:	beq	13738 <__printf_chk@plt+0x2a88>
   136f8:	mov	r0, r5
   136fc:	bl	10bf0 <strlen@plt>
   13700:	cmp	r0, #0
   13704:	str	r0, [r4, #4]
   13708:	streq	r0, [r4, #8]
   1370c:	streq	r0, [r4]
   13710:	beq	13738 <__printf_chk@plt+0x2a88>
   13714:	lsl	r0, r0, #1
   13718:	str	r0, [r4, #8]
   1371c:	bl	10b30 <_Znaj@plt>
   13720:	ldr	r2, [r4, #4]
   13724:	cmp	r2, #0
   13728:	str	r0, [r4]
   1372c:	beq	13738 <__printf_chk@plt+0x2a88>
   13730:	mov	r1, r5
   13734:	bl	10bd8 <memcpy@plt>
   13738:	mov	r0, r4
   1373c:	pop	{r4, r5, r6, pc}
   13740:	push	{r4, r5, r6, lr}
   13744:	mov	r4, r0
   13748:	mov	r3, #1
   1374c:	mov	r0, #2
   13750:	str	r3, [r4, #4]
   13754:	str	r0, [r4, #8]
   13758:	mov	r5, r1
   1375c:	bl	10b30 <_Znaj@plt>
   13760:	str	r0, [r4]
   13764:	strb	r5, [r0]
   13768:	mov	r0, r4
   1376c:	pop	{r4, r5, r6, pc}
   13770:	push	{r4, r5, r6, lr}
   13774:	mov	r4, r0
   13778:	ldr	r0, [r1, #4]
   1377c:	cmp	r0, #0
   13780:	str	r0, [r4, #4]
   13784:	streq	r0, [r4, #8]
   13788:	streq	r0, [r4]
   1378c:	beq	137b0 <__printf_chk@plt+0x2b00>
   13790:	lsl	r0, r0, #1
   13794:	str	r0, [r4, #8]
   13798:	mov	r5, r1
   1379c:	bl	10b30 <_Znaj@plt>
   137a0:	ldr	r2, [r4, #4]
   137a4:	cmp	r2, #0
   137a8:	str	r0, [r4]
   137ac:	bne	137b8 <__printf_chk@plt+0x2b08>
   137b0:	mov	r0, r4
   137b4:	pop	{r4, r5, r6, pc}
   137b8:	ldr	r1, [r5]
   137bc:	bl	10bd8 <memcpy@plt>
   137c0:	mov	r0, r4
   137c4:	pop	{r4, r5, r6, pc}
   137c8:	push	{r4, lr}
   137cc:	mov	r4, r0
   137d0:	ldr	r0, [r0]
   137d4:	cmp	r0, #0
   137d8:	beq	137e0 <__printf_chk@plt+0x2b30>
   137dc:	bl	10b9c <_ZdaPv@plt>
   137e0:	mov	r0, r4
   137e4:	pop	{r4, pc}
   137e8:	push	{r4, r5, r6, lr}
   137ec:	add	r3, r0, #8
   137f0:	ldr	r2, [r1, #4]
   137f4:	mov	r4, r0
   137f8:	mov	r5, r1
   137fc:	ldr	r1, [r0, #8]
   13800:	ldr	r0, [r0]
   13804:	bl	13578 <__printf_chk@plt+0x28c8>
   13808:	ldr	r2, [r5, #4]
   1380c:	cmp	r2, #0
   13810:	stm	r4, {r0, r2}
   13814:	bne	13820 <__printf_chk@plt+0x2b70>
   13818:	mov	r0, r4
   1381c:	pop	{r4, r5, r6, pc}
   13820:	ldr	r1, [r5]
   13824:	bl	10bd8 <memcpy@plt>
   13828:	mov	r0, r4
   1382c:	pop	{r4, r5, r6, pc}
   13830:	push	{r4, r5, r6, r7, r8, lr}
   13834:	subs	r7, r1, #0
   13838:	mov	r4, r0
   1383c:	ldr	r6, [r0]
   13840:	beq	13878 <__printf_chk@plt+0x2bc8>
   13844:	mov	r0, r7
   13848:	bl	10bf0 <strlen@plt>
   1384c:	add	r3, r4, #8
   13850:	ldr	r1, [r4, #8]
   13854:	mov	r5, r0
   13858:	mov	r2, r0
   1385c:	mov	r0, r6
   13860:	bl	13578 <__printf_chk@plt+0x28c8>
   13864:	cmp	r5, #0
   13868:	stm	r4, {r0, r5}
   1386c:	bne	138a0 <__printf_chk@plt+0x2bf0>
   13870:	mov	r0, r4
   13874:	pop	{r4, r5, r6, r7, r8, pc}
   13878:	cmp	r6, #0
   1387c:	beq	13888 <__printf_chk@plt+0x2bd8>
   13880:	mov	r0, r6
   13884:	bl	10b9c <_ZdaPv@plt>
   13888:	mov	r3, #0
   1388c:	str	r3, [r4, #4]
   13890:	str	r3, [r4]
   13894:	str	r3, [r4, #8]
   13898:	mov	r0, r4
   1389c:	pop	{r4, r5, r6, r7, r8, pc}
   138a0:	mov	r2, r5
   138a4:	mov	r1, r7
   138a8:	bl	10bd8 <memcpy@plt>
   138ac:	mov	r0, r4
   138b0:	pop	{r4, r5, r6, r7, r8, pc}
   138b4:	push	{r4, r5, r6, lr}
   138b8:	add	r3, r0, #8
   138bc:	mov	r4, r0
   138c0:	mov	r5, r1
   138c4:	mov	r2, #1
   138c8:	ldr	r1, [r0, #8]
   138cc:	ldr	r0, [r0]
   138d0:	bl	13578 <__printf_chk@plt+0x28c8>
   138d4:	mov	r2, #1
   138d8:	str	r2, [r4, #4]
   138dc:	mov	r3, r0
   138e0:	str	r0, [r4]
   138e4:	mov	r0, r4
   138e8:	strb	r5, [r3]
   138ec:	pop	{r4, r5, r6, pc}
   138f0:	push	{r4, r5, r6, lr}
   138f4:	mov	r5, r0
   138f8:	ldr	r0, [r0]
   138fc:	mov	r4, r1
   13900:	cmp	r0, #0
   13904:	beq	1390c <__printf_chk@plt+0x2c5c>
   13908:	bl	10b9c <_ZdaPv@plt>
   1390c:	ldrd	r0, [r4]
   13910:	ldr	r2, [r4, #8]
   13914:	mov	r3, #0
   13918:	strd	r0, [r5]
   1391c:	str	r2, [r5, #8]
   13920:	str	r3, [r4]
   13924:	str	r3, [r4, #4]
   13928:	str	r3, [r4, #8]
   1392c:	pop	{r4, r5, r6, pc}
   13930:	mov	r1, r0
   13934:	push	{r4, lr}
   13938:	mov	r4, r0
   1393c:	sub	sp, sp, #8
   13940:	ldr	r2, [r0, #4]
   13944:	ldr	r0, [r1], #8
   13948:	add	r3, r2, #1
   1394c:	str	r1, [sp]
   13950:	ldr	r1, [r4, #8]
   13954:	bl	135c8 <__printf_chk@plt+0x2918>
   13958:	str	r0, [r4]
   1395c:	add	sp, sp, #8
   13960:	pop	{r4, pc}
   13964:	push	{r4, r5, r6, r7, lr}
   13968:	subs	r5, r1, #0
   1396c:	sub	sp, sp, #12
   13970:	mov	r4, r0
   13974:	beq	139b0 <__printf_chk@plt+0x2d00>
   13978:	mov	r0, r5
   1397c:	bl	10bf0 <strlen@plt>
   13980:	ldr	r3, [r4, #4]
   13984:	ldr	r1, [r4, #8]
   13988:	add	r6, r0, r3
   1398c:	cmp	r1, r6
   13990:	mov	r7, r0
   13994:	ldr	r0, [r4]
   13998:	blt	139bc <__printf_chk@plt+0x2d0c>
   1399c:	mov	r2, r7
   139a0:	mov	r1, r5
   139a4:	add	r0, r0, r3
   139a8:	bl	10bd8 <memcpy@plt>
   139ac:	str	r6, [r4, #4]
   139b0:	mov	r0, r4
   139b4:	add	sp, sp, #12
   139b8:	pop	{r4, r5, r6, r7, pc}
   139bc:	add	ip, r4, #8
   139c0:	mov	r2, r3
   139c4:	str	ip, [sp]
   139c8:	mov	r3, r6
   139cc:	bl	135c8 <__printf_chk@plt+0x2918>
   139d0:	ldr	r3, [r4, #4]
   139d4:	str	r0, [r4]
   139d8:	b	1399c <__printf_chk@plt+0x2cec>
   139dc:	ldr	r2, [r1, #4]
   139e0:	push	{r4, r5, r6, lr}
   139e4:	cmp	r2, #0
   139e8:	sub	sp, sp, #8
   139ec:	mov	r4, r0
   139f0:	beq	13a20 <__printf_chk@plt+0x2d70>
   139f4:	ldr	r3, [r0, #4]
   139f8:	mov	r5, r1
   139fc:	ldr	r1, [r0, #8]
   13a00:	add	r6, r2, r3
   13a04:	cmp	r1, r6
   13a08:	ldr	r0, [r0]
   13a0c:	blt	13a2c <__printf_chk@plt+0x2d7c>
   13a10:	ldr	r1, [r5]
   13a14:	add	r0, r0, r3
   13a18:	bl	10bd8 <memcpy@plt>
   13a1c:	str	r6, [r4, #4]
   13a20:	mov	r0, r4
   13a24:	add	sp, sp, #8
   13a28:	pop	{r4, r5, r6, pc}
   13a2c:	add	ip, r4, #8
   13a30:	mov	r2, r3
   13a34:	str	ip, [sp]
   13a38:	mov	r3, r6
   13a3c:	bl	135c8 <__printf_chk@plt+0x2918>
   13a40:	ldr	r3, [r4, #4]
   13a44:	ldr	r2, [r5, #4]
   13a48:	str	r0, [r4]
   13a4c:	add	r0, r0, r3
   13a50:	ldr	r1, [r5]
   13a54:	bl	10bd8 <memcpy@plt>
   13a58:	str	r6, [r4, #4]
   13a5c:	b	13a20 <__printf_chk@plt+0x2d70>
   13a60:	push	{r4, r5, r6, r7, lr}
   13a64:	subs	r5, r2, #0
   13a68:	sub	sp, sp, #12
   13a6c:	ble	13aa4 <__printf_chk@plt+0x2df4>
   13a70:	ldr	r3, [r0, #4]
   13a74:	mov	r7, r1
   13a78:	ldr	r1, [r0, #8]
   13a7c:	add	r6, r3, r5
   13a80:	cmp	r1, r6
   13a84:	mov	r4, r0
   13a88:	ldr	r0, [r0]
   13a8c:	blt	13aac <__printf_chk@plt+0x2dfc>
   13a90:	mov	r2, r5
   13a94:	mov	r1, r7
   13a98:	add	r0, r0, r3
   13a9c:	bl	10bd8 <memcpy@plt>
   13aa0:	str	r6, [r4, #4]
   13aa4:	add	sp, sp, #12
   13aa8:	pop	{r4, r5, r6, r7, pc}
   13aac:	add	ip, r4, #8
   13ab0:	mov	r2, r3
   13ab4:	str	ip, [sp]
   13ab8:	mov	r3, r6
   13abc:	bl	135c8 <__printf_chk@plt+0x2918>
   13ac0:	ldr	r3, [r4, #4]
   13ac4:	str	r0, [r4]
   13ac8:	b	13a90 <__printf_chk@plt+0x2de0>
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ad0:	mov	r5, r2
   13ad4:	ldr	r6, [sp, #32]
   13ad8:	mov	r4, r0
   13adc:	cmp	r2, #0
   13ae0:	cmpge	r6, #0
   13ae4:	mov	r8, r1
   13ae8:	mov	r7, r3
   13aec:	blt	13b10 <__printf_chk@plt+0x2e60>
   13af0:	add	r0, r5, r6
   13af4:	cmp	r0, #0
   13af8:	str	r0, [r4, #4]
   13afc:	bne	13b2c <__printf_chk@plt+0x2e7c>
   13b00:	str	r0, [r4, #8]
   13b04:	str	r0, [r4]
   13b08:	mov	r0, r4
   13b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b10:	mov	r0, #215	; 0xd7
   13b14:	ldr	r1, [pc, #104]	; 13b84 <__printf_chk@plt+0x2ed4>
   13b18:	bl	118d8 <__printf_chk@plt+0xc28>
   13b1c:	add	r0, r5, r6
   13b20:	cmp	r0, #0
   13b24:	str	r0, [r4, #4]
   13b28:	beq	13b00 <__printf_chk@plt+0x2e50>
   13b2c:	lsl	r0, r0, #1
   13b30:	str	r0, [r4, #8]
   13b34:	bl	10b30 <_Znaj@plt>
   13b38:	cmp	r5, #0
   13b3c:	mov	r9, r0
   13b40:	str	r0, [r4]
   13b44:	beq	13b70 <__printf_chk@plt+0x2ec0>
   13b48:	mov	r1, r8
   13b4c:	mov	r2, r5
   13b50:	bl	10bd8 <memcpy@plt>
   13b54:	cmp	r6, #0
   13b58:	beq	13b08 <__printf_chk@plt+0x2e58>
   13b5c:	mov	r2, r6
   13b60:	mov	r1, r7
   13b64:	add	r0, r9, r5
   13b68:	bl	10bd8 <memcpy@plt>
   13b6c:	b	13b08 <__printf_chk@plt+0x2e58>
   13b70:	mov	r2, r6
   13b74:	mov	r1, r7
   13b78:	bl	10bd8 <memcpy@plt>
   13b7c:	mov	r0, r4
   13b80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b84:	andeq	r6, r1, r0, asr #10
   13b88:	ldr	r2, [r0, #4]
   13b8c:	mov	r3, r0
   13b90:	ldr	r0, [r1, #4]
   13b94:	push	{r4, lr}
   13b98:	cmp	r2, r0
   13b9c:	bgt	13bcc <__printf_chk@plt+0x2f1c>
   13ba0:	cmp	r2, #0
   13ba4:	bne	13bb0 <__printf_chk@plt+0x2f00>
   13ba8:	mov	r0, #1
   13bac:	pop	{r4, pc}
   13bb0:	ldr	r1, [r1]
   13bb4:	ldr	r0, [r3]
   13bb8:	bl	10c5c <memcmp@plt>
   13bbc:	cmp	r0, #0
   13bc0:	movgt	r0, #0
   13bc4:	movle	r0, #1
   13bc8:	pop	{r4, pc}
   13bcc:	cmp	r0, #0
   13bd0:	popeq	{r4, pc}
   13bd4:	mov	r2, r0
   13bd8:	ldr	r1, [r1]
   13bdc:	ldr	r0, [r3]
   13be0:	bl	10c5c <memcmp@plt>
   13be4:	lsr	r0, r0, #31
   13be8:	pop	{r4, pc}
   13bec:	ldr	r2, [r0, #4]
   13bf0:	mov	r3, r0
   13bf4:	ldr	r0, [r1, #4]
   13bf8:	push	{r4, lr}
   13bfc:	cmp	r2, r0
   13c00:	bge	13c30 <__printf_chk@plt+0x2f80>
   13c04:	cmp	r2, #0
   13c08:	bne	13c14 <__printf_chk@plt+0x2f64>
   13c0c:	mov	r0, #1
   13c10:	pop	{r4, pc}
   13c14:	ldr	r1, [r1]
   13c18:	ldr	r0, [r3]
   13c1c:	bl	10c5c <memcmp@plt>
   13c20:	cmp	r0, #0
   13c24:	movgt	r0, #0
   13c28:	movle	r0, #1
   13c2c:	pop	{r4, pc}
   13c30:	cmp	r0, #0
   13c34:	popeq	{r4, pc}
   13c38:	mov	r2, r0
   13c3c:	ldr	r1, [r1]
   13c40:	ldr	r0, [r3]
   13c44:	bl	10c5c <memcmp@plt>
   13c48:	lsr	r0, r0, #31
   13c4c:	pop	{r4, pc}
   13c50:	mov	r3, r0
   13c54:	ldr	r2, [r1, #4]
   13c58:	ldr	r0, [r0, #4]
   13c5c:	push	{r4, lr}
   13c60:	cmp	r0, r2
   13c64:	blt	13c90 <__printf_chk@plt+0x2fe0>
   13c68:	cmp	r2, #0
   13c6c:	bne	13c78 <__printf_chk@plt+0x2fc8>
   13c70:	mov	r0, #1
   13c74:	pop	{r4, pc}
   13c78:	ldr	r1, [r1]
   13c7c:	ldr	r0, [r3]
   13c80:	bl	10c5c <memcmp@plt>
   13c84:	mvn	r0, r0
   13c88:	lsr	r0, r0, #31
   13c8c:	pop	{r4, pc}
   13c90:	cmp	r0, #0
   13c94:	popeq	{r4, pc}
   13c98:	mov	r2, r0
   13c9c:	ldr	r1, [r1]
   13ca0:	ldr	r0, [r3]
   13ca4:	bl	10c5c <memcmp@plt>
   13ca8:	cmp	r0, #0
   13cac:	movle	r0, #0
   13cb0:	movgt	r0, #1
   13cb4:	pop	{r4, pc}
   13cb8:	mov	r3, r0
   13cbc:	ldr	r2, [r1, #4]
   13cc0:	ldr	r0, [r0, #4]
   13cc4:	push	{r4, lr}
   13cc8:	cmp	r0, r2
   13ccc:	ble	13cf8 <__printf_chk@plt+0x3048>
   13cd0:	cmp	r2, #0
   13cd4:	bne	13ce0 <__printf_chk@plt+0x3030>
   13cd8:	mov	r0, #1
   13cdc:	pop	{r4, pc}
   13ce0:	ldr	r1, [r1]
   13ce4:	ldr	r0, [r3]
   13ce8:	bl	10c5c <memcmp@plt>
   13cec:	mvn	r0, r0
   13cf0:	lsr	r0, r0, #31
   13cf4:	pop	{r4, pc}
   13cf8:	cmp	r0, #0
   13cfc:	popeq	{r4, pc}
   13d00:	mov	r2, r0
   13d04:	ldr	r1, [r1]
   13d08:	ldr	r0, [r3]
   13d0c:	bl	10c5c <memcmp@plt>
   13d10:	cmp	r0, #0
   13d14:	movle	r0, #0
   13d18:	movgt	r0, #1
   13d1c:	pop	{r4, pc}
   13d20:	push	{r4, r5, lr}
   13d24:	subs	r5, r1, #0
   13d28:	sub	sp, sp, #12
   13d2c:	mov	r4, r0
   13d30:	blt	13d4c <__printf_chk@plt+0x309c>
   13d34:	ldr	r1, [r4, #8]
   13d38:	cmp	r1, r5
   13d3c:	blt	13d64 <__printf_chk@plt+0x30b4>
   13d40:	str	r5, [r4, #4]
   13d44:	add	sp, sp, #12
   13d48:	pop	{r4, r5, pc}
   13d4c:	ldr	r1, [pc, #56]	; 13d8c <__printf_chk@plt+0x30dc>
   13d50:	ldr	r0, [pc, #56]	; 13d90 <__printf_chk@plt+0x30e0>
   13d54:	bl	118d8 <__printf_chk@plt+0xc28>
   13d58:	ldr	r1, [r4, #8]
   13d5c:	cmp	r1, r5
   13d60:	bge	13d40 <__printf_chk@plt+0x3090>
   13d64:	mov	r2, r4
   13d68:	mov	r3, r5
   13d6c:	ldr	r0, [r2], #8
   13d70:	str	r2, [sp]
   13d74:	ldr	r2, [r4, #4]
   13d78:	bl	135c8 <__printf_chk@plt+0x2918>
   13d7c:	str	r5, [r4, #4]
   13d80:	str	r0, [r4]
   13d84:	add	sp, sp, #12
   13d88:	pop	{r4, r5, pc}
   13d8c:	andeq	r6, r1, r0, asr #10
   13d90:	andeq	r0, r0, r7, lsl #2
   13d94:	mov	r3, #0
   13d98:	str	r3, [r0, #4]
   13d9c:	bx	lr
   13da0:	push	{r4, lr}
   13da4:	ldr	r4, [r0]
   13da8:	cmp	r4, #0
   13dac:	beq	13dcc <__printf_chk@plt+0x311c>
   13db0:	ldr	r2, [r0, #4]
   13db4:	mov	r0, r4
   13db8:	bl	10c38 <memchr@plt>
   13dbc:	cmp	r0, #0
   13dc0:	beq	13dcc <__printf_chk@plt+0x311c>
   13dc4:	sub	r0, r0, r4
   13dc8:	pop	{r4, pc}
   13dcc:	mvn	r0, #0
   13dd0:	pop	{r4, pc}
   13dd4:	push	{r4, r5, r6, lr}
   13dd8:	ldrd	r4, [r0]
   13ddc:	cmp	r5, #0
   13de0:	add	r0, r5, #1
   13de4:	ble	13e44 <__printf_chk@plt+0x3194>
   13de8:	add	r5, r4, r5
   13dec:	sub	r4, r4, #1
   13df0:	sub	r5, r5, #1
   13df4:	mov	r3, r4
   13df8:	mov	r1, #0
   13dfc:	ldrb	r2, [r3, #1]!
   13e00:	cmp	r2, #0
   13e04:	addeq	r1, r1, #1
   13e08:	cmp	r3, r5
   13e0c:	bne	13dfc <__printf_chk@plt+0x314c>
   13e10:	sub	r0, r0, r1
   13e14:	bl	10be4 <malloc@plt>
   13e18:	mov	r1, r0
   13e1c:	ldrb	r2, [r4, #1]!
   13e20:	mov	r3, r1
   13e24:	cmp	r2, #0
   13e28:	strbne	r2, [r3], #1
   13e2c:	movne	r1, r3
   13e30:	cmp	r4, r5
   13e34:	bne	13e1c <__printf_chk@plt+0x316c>
   13e38:	mov	r3, #0
   13e3c:	strb	r3, [r1]
   13e40:	pop	{r4, r5, r6, pc}
   13e44:	bl	10be4 <malloc@plt>
   13e48:	mov	r1, r0
   13e4c:	b	13e38 <__printf_chk@plt+0x3188>
   13e50:	push	{r4, r5, r6, lr}
   13e54:	ldr	r4, [r0, #4]
   13e58:	ldr	lr, [r0]
   13e5c:	subs	r6, r4, #1
   13e60:	popmi	{r4, r5, r6, pc}
   13e64:	ldrb	r3, [lr, r6]
   13e68:	mov	r5, r0
   13e6c:	cmp	r3, #32
   13e70:	bne	13f48 <__printf_chk@plt+0x3298>
   13e74:	add	r1, lr, r6
   13e78:	mov	r2, r6
   13e7c:	b	13e90 <__printf_chk@plt+0x31e0>
   13e80:	ldrb	ip, [r1, #-1]!
   13e84:	cmp	ip, #32
   13e88:	bne	13ebc <__printf_chk@plt+0x320c>
   13e8c:	mov	r2, r3
   13e90:	subs	r3, r2, #1
   13e94:	bcs	13e80 <__printf_chk@plt+0x31d0>
   13e98:	cmp	lr, #0
   13e9c:	mov	r4, #0
   13ea0:	str	r4, [r5, #4]
   13ea4:	popeq	{r4, r5, r6, pc}
   13ea8:	mov	r0, lr
   13eac:	bl	10b9c <_ZdaPv@plt>
   13eb0:	str	r4, [r5]
   13eb4:	str	r4, [r5, #8]
   13eb8:	pop	{r4, r5, r6, pc}
   13ebc:	cmp	r3, #0
   13ec0:	beq	13f64 <__printf_chk@plt+0x32b4>
   13ec4:	ldrb	r1, [lr]
   13ec8:	cmp	r1, #32
   13ecc:	bne	13f34 <__printf_chk@plt+0x3284>
   13ed0:	add	r3, lr, r3
   13ed4:	add	r2, lr, #1
   13ed8:	mov	r4, r2
   13edc:	sub	ip, r3, r2
   13ee0:	ldrb	r1, [r2], #1
   13ee4:	cmp	r1, #32
   13ee8:	beq	13ed8 <__printf_chk@plt+0x3228>
   13eec:	cmp	r6, ip
   13ef0:	popeq	{r4, r5, r6, pc}
   13ef4:	cmp	ip, #0
   13ef8:	blt	13e98 <__printf_chk@plt+0x31e8>
   13efc:	add	r3, ip, #1
   13f00:	str	r3, [r5, #4]
   13f04:	ldr	r0, [r5, #8]
   13f08:	bl	10b30 <_Znaj@plt>
   13f0c:	mov	r1, r4
   13f10:	ldr	r2, [r5, #4]
   13f14:	mov	r6, r0
   13f18:	bl	10bd8 <memcpy@plt>
   13f1c:	ldr	r0, [r5]
   13f20:	cmp	r0, #0
   13f24:	beq	13f2c <__printf_chk@plt+0x327c>
   13f28:	bl	10b9c <_ZdaPv@plt>
   13f2c:	str	r6, [r5]
   13f30:	pop	{r4, r5, r6, pc}
   13f34:	cmp	r4, r2
   13f38:	popeq	{r4, r5, r6, pc}
   13f3c:	mov	r4, lr
   13f40:	mov	ip, r3
   13f44:	b	13efc <__printf_chk@plt+0x324c>
   13f48:	cmp	r6, #0
   13f4c:	popeq	{r4, r5, r6, pc}
   13f50:	ldrb	r3, [lr]
   13f54:	cmp	r3, #32
   13f58:	popne	{r4, r5, r6, pc}
   13f5c:	mov	r3, r6
   13f60:	b	13ed0 <__printf_chk@plt+0x3220>
   13f64:	cmp	r6, #0
   13f68:	bne	13f3c <__printf_chk@plt+0x328c>
   13f6c:	pop	{r4, r5, r6, pc}
   13f70:	push	{r4, r5, r6, lr}
   13f74:	ldrd	r4, [r0]
   13f78:	cmp	r5, #0
   13f7c:	pople	{r4, r5, r6, pc}
   13f80:	add	r5, r4, r5
   13f84:	mov	r6, r1
   13f88:	sub	r5, r5, #1
   13f8c:	sub	r4, r4, #1
   13f90:	ldrb	r0, [r4, #1]!
   13f94:	mov	r1, r6
   13f98:	bl	10b84 <putc@plt>
   13f9c:	cmp	r4, r5
   13fa0:	bne	13f90 <__printf_chk@plt+0x32e0>
   13fa4:	pop	{r4, r5, r6, pc}
   13fa8:	push	{r4, r5, lr}
   13fac:	sub	sp, sp, #12
   13fb0:	ldr	r5, [pc, #48]	; 13fe8 <__printf_chk@plt+0x3338>
   13fb4:	mov	r4, r0
   13fb8:	str	r1, [sp]
   13fbc:	ldr	r3, [pc, #40]	; 13fec <__printf_chk@plt+0x333c>
   13fc0:	mov	r2, #12
   13fc4:	mov	r0, r5
   13fc8:	mov	r1, #1
   13fcc:	bl	10c68 <__sprintf_chk@plt>
   13fd0:	mov	r1, r5
   13fd4:	mov	r0, r4
   13fd8:	bl	136dc <__printf_chk@plt+0x2a2c>
   13fdc:	mov	r0, r4
   13fe0:	add	sp, sp, #12
   13fe4:	pop	{r4, r5, pc}
   13fe8:	andeq	r7, r2, r4, asr #1
   13fec:	andeq	r6, r1, r4, ror #10
   13ff0:	subs	r1, r0, #0
   13ff4:	beq	14020 <__printf_chk@plt+0x3370>
   13ff8:	push	{r4, r5, r6, lr}
   13ffc:	mov	r4, r1
   14000:	bl	10bf0 <strlen@plt>
   14004:	add	r5, r0, #1
   14008:	mov	r0, r5
   1400c:	bl	10be4 <malloc@plt>
   14010:	mov	r2, r5
   14014:	mov	r1, r4
   14018:	bl	10bd8 <memcpy@plt>
   1401c:	pop	{r4, r5, r6, pc}
   14020:	mov	r0, r1
   14024:	bx	lr
   14028:	push	{r4, r5, r6, lr}
   1402c:	mov	r5, r0
   14030:	ldr	r4, [pc, #40]	; 14060 <__printf_chk@plt+0x33b0>
   14034:	ldr	r0, [r4]
   14038:	cmp	r0, #0
   1403c:	beq	14050 <__printf_chk@plt+0x33a0>
   14040:	mov	r1, r5
   14044:	bl	10c20 <strcmp@plt>
   14048:	cmp	r0, #0
   1404c:	popeq	{r4, r5, r6, pc}
   14050:	mov	r0, r5
   14054:	bl	13ff0 <__printf_chk@plt+0x3340>
   14058:	str	r0, [r4]
   1405c:	pop	{r4, r5, r6, pc}
   14060:	andeq	r7, r2, ip, asr r0
   14064:	ldr	r3, [pc, #4]	; 14070 <__printf_chk@plt+0x33c0>
   14068:	str	r0, [r3]
   1406c:	bx	lr
   14070:	strheq	r7, [r2], -ip
   14074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14078:	sub	sp, sp, #28
   1407c:	ldr	r6, [pc, #596]	; 142d8 <__printf_chk@plt+0x3628>
   14080:	mov	r4, #0
   14084:	add	r3, r6, #1792	; 0x700
   14088:	add	r2, r6, #2048	; 0x800
   1408c:	add	r3, r3, #4
   14090:	add	r7, r6, #1024	; 0x400
   14094:	add	r9, r6, #1280	; 0x500
   14098:	add	r8, r6, #1536	; 0x600
   1409c:	add	r0, r6, #2304	; 0x900
   140a0:	str	r3, [sp, #8]
   140a4:	add	r3, r2, #4
   140a8:	add	ip, r6, #2560	; 0xa00
   140ac:	mov	r2, r6
   140b0:	str	r3, [sp, #12]
   140b4:	add	fp, r6, #260	; 0x104
   140b8:	add	r3, r0, #4
   140bc:	add	sl, r6, #516	; 0x204
   140c0:	add	r7, r7, #4
   140c4:	add	r9, r9, #4
   140c8:	add	r8, r8, #4
   140cc:	add	r6, r6, #772	; 0x304
   140d0:	mov	r5, r4
   140d4:	mov	r1, #1
   140d8:	str	r3, [sp, #16]
   140dc:	add	r3, ip, #4
   140e0:	str	r3, [sp, #4]
   140e4:	str	r1, [r2], #3
   140e8:	bics	r1, r4, #127	; 0x7f
   140ec:	bne	14210 <__printf_chk@plt+0x3560>
   140f0:	str	r2, [sp, #20]
   140f4:	bl	10ba8 <__ctype_b_loc@plt>
   140f8:	lsl	r1, r4, #1
   140fc:	mov	r3, #1
   14100:	ldr	r2, [sp, #20]
   14104:	ldr	ip, [r0]
   14108:	ldrh	ip, [ip, r1]
   1410c:	ands	ip, ip, #1024	; 0x400
   14110:	strbne	r3, [fp]
   14114:	strbeq	ip, [fp]
   14118:	ldr	ip, [r0]
   1411c:	ldrh	ip, [ip, r1]
   14120:	ands	ip, ip, #256	; 0x100
   14124:	strbne	r3, [sl]
   14128:	strbeq	ip, [sl]
   1412c:	ldr	ip, [r0]
   14130:	ldrh	ip, [ip, r1]
   14134:	ands	ip, ip, #512	; 0x200
   14138:	strbeq	ip, [r6]
   1413c:	sub	ip, r4, #48	; 0x30
   14140:	strbne	r3, [r6]
   14144:	cmp	ip, #9
   14148:	bls	142d0 <__printf_chk@plt+0x3620>
   1414c:	strb	r5, [r7]
   14150:	ldr	ip, [r0]
   14154:	ldrh	ip, [ip, r1]
   14158:	ands	ip, ip, #4096	; 0x1000
   1415c:	bne	142a4 <__printf_chk@plt+0x35f4>
   14160:	ldr	lr, [sp, #8]
   14164:	strb	ip, [lr, r4]
   14168:	ldr	ip, [r0]
   1416c:	ldrh	ip, [ip, r1]
   14170:	ands	ip, ip, #8192	; 0x2000
   14174:	bne	142bc <__printf_chk@plt+0x360c>
   14178:	strb	ip, [r9]
   1417c:	ldr	ip, [r0]
   14180:	ldrh	ip, [ip, r1]
   14184:	ands	ip, ip, #4
   14188:	bne	14284 <__printf_chk@plt+0x35d4>
   1418c:	ldr	lr, [sp, #12]
   14190:	strb	ip, [lr, r4]
   14194:	ldr	ip, [r0]
   14198:	ldrh	ip, [ip, r1]
   1419c:	ands	ip, ip, #8
   141a0:	bne	1429c <__printf_chk@plt+0x35ec>
   141a4:	strb	ip, [r8]
   141a8:	ldr	ip, [r0]
   141ac:	ldrh	ip, [ip, r1]
   141b0:	ands	ip, ip, #16384	; 0x4000
   141b4:	bne	14260 <__printf_chk@plt+0x35b0>
   141b8:	ldr	lr, [sp, #16]
   141bc:	strb	ip, [lr, r4]
   141c0:	ldr	lr, [r0]
   141c4:	ldrsh	lr, [lr, r1]
   141c8:	cmp	lr, #0
   141cc:	blt	142c4 <__printf_chk@plt+0x3614>
   141d0:	ldr	lr, [sp, #4]
   141d4:	strb	ip, [lr, r4]
   141d8:	ldr	r0, [r0]
   141dc:	add	r4, r4, #1
   141e0:	add	fp, fp, #1
   141e4:	ldrh	r1, [r0, r1]
   141e8:	add	sl, sl, #1
   141ec:	add	r6, r6, #1
   141f0:	add	r7, r7, #1
   141f4:	lsr	r1, r1, #1
   141f8:	and	r1, r1, #1
   141fc:	strb	r1, [r2, #1]!
   14200:	bics	r1, r4, #127	; 0x7f
   14204:	add	r9, r9, #1
   14208:	add	r8, r8, #1
   1420c:	beq	140f0 <__printf_chk@plt+0x3440>
   14210:	ldr	r1, [sp, #8]
   14214:	strb	r5, [fp], #1
   14218:	strb	r5, [sl], #1
   1421c:	strb	r5, [r4, r1]
   14220:	ldr	r1, [sp, #12]
   14224:	strb	r5, [r6], #1
   14228:	strb	r5, [r7], #1
   1422c:	strb	r5, [r4, r1]
   14230:	ldr	r1, [sp, #16]
   14234:	strb	r5, [r9], #1
   14238:	strb	r5, [r8], #1
   1423c:	strb	r5, [r4, r1]
   14240:	ldr	r1, [sp, #4]
   14244:	strb	r5, [r2, #1]!
   14248:	strb	r5, [r4, r1]
   1424c:	add	r4, r4, #1
   14250:	cmp	r4, #256	; 0x100
   14254:	bne	140e8 <__printf_chk@plt+0x3438>
   14258:	add	sp, sp, #28
   1425c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14260:	ldr	ip, [sp, #16]
   14264:	strb	r3, [ip, r4]
   14268:	ldr	ip, [r0]
   1426c:	ldrsh	ip, [ip, r1]
   14270:	cmp	ip, #0
   14274:	blt	142c4 <__printf_chk@plt+0x3614>
   14278:	ldr	ip, [sp, #4]
   1427c:	strb	r5, [ip, r4]
   14280:	b	141d8 <__printf_chk@plt+0x3528>
   14284:	ldr	ip, [sp, #12]
   14288:	strb	r3, [ip, r4]
   1428c:	ldr	ip, [r0]
   14290:	ldrh	ip, [ip, r1]
   14294:	ands	ip, ip, #8
   14298:	beq	141a4 <__printf_chk@plt+0x34f4>
   1429c:	strb	r3, [r8]
   142a0:	b	141a8 <__printf_chk@plt+0x34f8>
   142a4:	ldr	ip, [sp, #8]
   142a8:	strb	r3, [ip, r4]
   142ac:	ldr	ip, [r0]
   142b0:	ldrh	ip, [ip, r1]
   142b4:	ands	ip, ip, #8192	; 0x2000
   142b8:	beq	14178 <__printf_chk@plt+0x34c8>
   142bc:	strb	r3, [r9]
   142c0:	b	1417c <__printf_chk@plt+0x34cc>
   142c4:	ldr	ip, [sp, #4]
   142c8:	strb	r3, [ip, r4]
   142cc:	b	141d8 <__printf_chk@plt+0x3528>
   142d0:	strb	r3, [r7]
   142d4:	b	14150 <__printf_chk@plt+0x34a0>
   142d8:	ldrdeq	r7, [r2], -r0
   142dc:	sub	r3, r0, #1
   142e0:	add	r2, r0, #255	; 0xff
   142e4:	mov	r1, #0
   142e8:	strb	r1, [r3, #1]!
   142ec:	cmp	r3, r2
   142f0:	bne	142e8 <__printf_chk@plt+0x3638>
   142f4:	bx	lr
   142f8:	sub	r3, r0, #1
   142fc:	add	r1, r0, #255	; 0xff
   14300:	mov	r2, #0
   14304:	strb	r2, [r3, #1]!
   14308:	cmp	r3, r1
   1430c:	bne	14304 <__printf_chk@plt+0x3654>
   14310:	bx	lr
   14314:	sub	r3, r0, #1
   14318:	add	ip, r0, #255	; 0xff
   1431c:	mov	r2, #0
   14320:	strb	r2, [r3, #1]!
   14324:	cmp	r3, ip
   14328:	bne	14320 <__printf_chk@plt+0x3670>
   1432c:	ldrb	r3, [r1]
   14330:	cmp	r3, #0
   14334:	bxeq	lr
   14338:	mov	r2, #1
   1433c:	strb	r2, [r0, r3]
   14340:	ldrb	r3, [r1, #1]!
   14344:	cmp	r3, #0
   14348:	bne	1433c <__printf_chk@plt+0x368c>
   1434c:	bx	lr
   14350:	sub	r3, r0, #1
   14354:	add	ip, r0, #255	; 0xff
   14358:	mov	r2, #0
   1435c:	strb	r2, [r3, #1]!
   14360:	cmp	r3, ip
   14364:	bne	1435c <__printf_chk@plt+0x36ac>
   14368:	ldrb	r3, [r1]
   1436c:	cmp	r3, #0
   14370:	bxeq	lr
   14374:	mov	r2, #1
   14378:	strb	r2, [r0, r3]
   1437c:	ldrb	r3, [r1, #1]!
   14380:	cmp	r3, #0
   14384:	bne	14378 <__printf_chk@plt+0x36c8>
   14388:	bx	lr
   1438c:	bx	lr
   14390:	push	{lr}		; (str lr, [sp, #-4]!)
   14394:	sub	r1, r1, #1
   14398:	mov	r3, r0
   1439c:	add	ip, r0, #256	; 0x100
   143a0:	mov	lr, #1
   143a4:	ldrb	r2, [r1, #1]!
   143a8:	add	r3, r3, #1
   143ac:	cmp	r2, #0
   143b0:	strbne	lr, [r3, #-1]
   143b4:	cmp	r3, ip
   143b8:	bne	143a4 <__printf_chk@plt+0x36f4>
   143bc:	pop	{pc}		; (ldr pc, [sp], #4)
   143c0:	ldr	r3, [pc, #28]	; 143e4 <__printf_chk@plt+0x3734>
   143c4:	push	{r4, lr}
   143c8:	mov	r4, r0
   143cc:	ldr	r3, [r3]
   143d0:	cmp	r3, #0
   143d4:	bne	143dc <__printf_chk@plt+0x372c>
   143d8:	bl	14074 <__printf_chk@plt+0x33c4>
   143dc:	mov	r0, r4
   143e0:	pop	{r4, pc}
   143e4:	ldrdeq	r7, [r2], -r0
   143e8:	push	{r1, r2, r3}
   143ec:	push	{r4, r5, r6, r7, r8, lr}
   143f0:	sub	sp, sp, #2016	; 0x7e0
   143f4:	ldr	r5, [pc, #228]	; 144e0 <__printf_chk@plt+0x3830>
   143f8:	sub	sp, sp, #4
   143fc:	add	r2, sp, #2048	; 0x800
   14400:	ldr	ip, [r5]
   14404:	add	r3, sp, #16
   14408:	add	r6, sp, #12
   1440c:	sub	r1, r3, #12
   14410:	str	ip, [sp, #2012]	; 0x7dc
   14414:	mov	r3, r2
   14418:	mov	ip, #2000	; 0x7d0
   1441c:	str	r2, [sp, #8]
   14420:	mov	r8, r0
   14424:	ldr	r2, [sp, #2044]	; 0x7fc
   14428:	mov	r0, r6
   1442c:	str	ip, [sp, #4]
   14430:	bl	144f4 <__printf_chk@plt+0x3844>
   14434:	ldr	r4, [sp, #4]
   14438:	subs	r7, r0, #0
   1443c:	beq	144cc <__printf_chk@plt+0x381c>
   14440:	mov	r3, r8
   14444:	mov	r2, r4
   14448:	mov	r1, #1
   1444c:	bl	10bcc <fwrite@plt>
   14450:	cmp	r0, r4
   14454:	bcc	14494 <__printf_chk@plt+0x37e4>
   14458:	cmp	r7, r6
   1445c:	beq	14468 <__printf_chk@plt+0x37b8>
   14460:	mov	r0, r7
   14464:	bl	10af4 <free@plt>
   14468:	subs	r0, r4, #0
   1446c:	blt	144c0 <__printf_chk@plt+0x3810>
   14470:	ldr	r2, [sp, #2012]	; 0x7dc
   14474:	ldr	r3, [r5]
   14478:	cmp	r2, r3
   1447c:	bne	144dc <__printf_chk@plt+0x382c>
   14480:	add	sp, sp, #2016	; 0x7e0
   14484:	add	sp, sp, #4
   14488:	pop	{r4, r5, r6, r7, r8, lr}
   1448c:	add	sp, sp, #12
   14490:	bx	lr
   14494:	cmp	r7, r6
   14498:	mvneq	r0, #0
   1449c:	beq	14470 <__printf_chk@plt+0x37c0>
   144a0:	bl	10c2c <__errno_location@plt>
   144a4:	mov	r4, r0
   144a8:	mov	r0, r7
   144ac:	ldr	r6, [r4]
   144b0:	bl	10af4 <free@plt>
   144b4:	str	r6, [r4]
   144b8:	mvn	r0, #0
   144bc:	b	14470 <__printf_chk@plt+0x37c0>
   144c0:	bl	10c2c <__errno_location@plt>
   144c4:	mov	r3, #75	; 0x4b
   144c8:	str	r3, [r0]
   144cc:	mov	r0, r8
   144d0:	bl	144e4 <__printf_chk@plt+0x3834>
   144d4:	mvn	r0, #0
   144d8:	b	14470 <__printf_chk@plt+0x37c0>
   144dc:	bl	10b6c <__stack_chk_fail@plt>
   144e0:	andeq	r6, r2, r8, lsr lr
   144e4:	ldr	r3, [r0]
   144e8:	orr	r3, r3, #32
   144ec:	str	r3, [r0]
   144f0:	bx	lr
   144f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144f8:	mov	r9, r2
   144fc:	ldr	r2, [pc, #3592]	; 1530c <__printf_chk@plt+0x465c>
   14500:	add	fp, sp, #32
   14504:	sub	sp, sp, #540	; 0x21c
   14508:	ldr	ip, [r2]
   1450c:	str	r0, [fp, #-504]	; 0xfffffe08
   14510:	str	r1, [fp, #-532]	; 0xfffffdec
   14514:	mov	r0, r9
   14518:	sub	r2, fp, #484	; 0x1e4
   1451c:	sub	r1, fp, #364	; 0x16c
   14520:	mov	r4, r3
   14524:	str	ip, [fp, #-40]	; 0xffffffd8
   14528:	bl	15444 <__printf_chk@plt+0x4794>
   1452c:	cmp	r0, #0
   14530:	blt	14b08 <__printf_chk@plt+0x3e58>
   14534:	sub	r1, fp, #484	; 0x1e4
   14538:	mov	r0, r4
   1453c:	bl	15310 <__printf_chk@plt+0x4660>
   14540:	cmp	r0, #0
   14544:	blt	150c4 <__printf_chk@plt+0x4414>
   14548:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   1454c:	ldr	r3, [fp, #-352]	; 0xfffffea0
   14550:	adds	r2, r2, #7
   14554:	mvncs	r2, #0
   14558:	adds	r3, r3, r2
   1455c:	bcs	14afc <__printf_chk@plt+0x3e4c>
   14560:	mov	r0, #6
   14564:	adds	r0, r3, r0
   14568:	bcs	14afc <__printf_chk@plt+0x3e4c>
   1456c:	cmp	r0, #4000	; 0xfa0
   14570:	bcc	147a0 <__printf_chk@plt+0x3af0>
   14574:	cmn	r0, #1
   14578:	beq	14afc <__printf_chk@plt+0x3e4c>
   1457c:	bl	10be4 <malloc@plt>
   14580:	subs	r3, r0, #0
   14584:	str	r3, [fp, #-516]	; 0xfffffdfc
   14588:	beq	14afc <__printf_chk@plt+0x3e4c>
   1458c:	str	r3, [fp, #-536]	; 0xfffffde8
   14590:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14594:	ldr	sl, [fp, #-360]	; 0xfffffe98
   14598:	cmp	r3, #0
   1459c:	ldr	r5, [fp, #-504]	; 0xfffffe08
   145a0:	ldrne	r3, [fp, #-532]	; 0xfffffdec
   145a4:	ldreq	r6, [fp, #-504]	; 0xfffffe08
   145a8:	mov	r4, #0
   145ac:	ldrne	r6, [r3]
   145b0:	mov	r3, r5
   145b4:	ldr	r5, [sl]
   145b8:	str	r4, [fp, #-528]	; 0xfffffdf0
   145bc:	cmp	r5, r9
   145c0:	beq	14a18 <__printf_chk@plt+0x3d68>
   145c4:	sub	r5, r5, r9
   145c8:	adds	r2, r4, r5
   145cc:	mov	r7, r2
   145d0:	bcs	14a20 <__printf_chk@plt+0x3d70>
   145d4:	cmp	r6, r2
   145d8:	bcs	1464c <__printf_chk@plt+0x399c>
   145dc:	cmp	r6, #0
   145e0:	bne	14b10 <__printf_chk@plt+0x3e60>
   145e4:	cmp	r2, #12
   145e8:	movls	r6, #12
   145ec:	bhi	14b20 <__printf_chk@plt+0x3e70>
   145f0:	ldr	r2, [fp, #-504]	; 0xfffffe08
   145f4:	cmp	r3, r2
   145f8:	cmpne	r3, #0
   145fc:	sub	r8, r3, r2
   14600:	clz	r8, r8
   14604:	lsr	r8, r8, #5
   14608:	bne	14ab4 <__printf_chk@plt+0x3e04>
   1460c:	mov	r0, r6
   14610:	str	r3, [fp, #-508]	; 0xfffffe04
   14614:	bl	10be4 <malloc@plt>
   14618:	ldr	r3, [fp, #-508]	; 0xfffffe04
   1461c:	subs	ip, r0, #0
   14620:	beq	14ed8 <__printf_chk@plt+0x4228>
   14624:	cmp	r4, #0
   14628:	moveq	r8, #0
   1462c:	cmp	r8, #0
   14630:	moveq	r3, ip
   14634:	beq	1464c <__printf_chk@plt+0x399c>
   14638:	mov	r1, r3
   1463c:	mov	r2, r4
   14640:	str	ip, [fp, #-508]	; 0xfffffe04
   14644:	bl	10bd8 <memcpy@plt>
   14648:	ldr	r3, [fp, #-508]	; 0xfffffe04
   1464c:	add	r0, r3, r4
   14650:	mov	r2, r5
   14654:	mov	r1, r9
   14658:	str	r3, [fp, #-508]	; 0xfffffe04
   1465c:	bl	10bd8 <memcpy@plt>
   14660:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14664:	ldr	r2, [fp, #-364]	; 0xfffffe94
   14668:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   1466c:	cmp	r2, r1
   14670:	beq	151ac <__printf_chk@plt+0x44fc>
   14674:	ldrb	r1, [sl, #36]	; 0x24
   14678:	ldr	r2, [sl, #40]	; 0x28
   1467c:	cmp	r1, #37	; 0x25
   14680:	beq	14960 <__printf_chk@plt+0x3cb0>
   14684:	cmn	r2, #1
   14688:	beq	15308 <__printf_chk@plt+0x4658>
   1468c:	ldr	r9, [fp, #-480]	; 0xfffffe20
   14690:	cmp	r1, #110	; 0x6e
   14694:	add	r1, r9, r2, lsl #4
   14698:	ldr	r5, [r9, r2, lsl #4]
   1469c:	beq	14ad8 <__printf_chk@plt+0x3e28>
   146a0:	ldr	r2, [sl, #8]
   146a4:	ldr	r0, [fp, #-516]	; 0xfffffdfc
   146a8:	tst	r2, #1
   146ac:	mov	r1, #37	; 0x25
   146b0:	strb	r1, [r0]
   146b4:	ldrne	r0, [fp, #-516]	; 0xfffffdfc
   146b8:	movne	r1, #39	; 0x27
   146bc:	addne	r4, r0, #2
   146c0:	strbne	r1, [r0, #1]
   146c4:	addeq	r4, r0, #1
   146c8:	tst	r2, #2
   146cc:	movne	r1, #45	; 0x2d
   146d0:	strbne	r1, [r4], #1
   146d4:	tst	r2, #4
   146d8:	movne	r1, #43	; 0x2b
   146dc:	strbne	r1, [r4], #1
   146e0:	tst	r2, #8
   146e4:	movne	r1, #32
   146e8:	strbne	r1, [r4], #1
   146ec:	tst	r2, #16
   146f0:	movne	r1, #35	; 0x23
   146f4:	strbne	r1, [r4], #1
   146f8:	tst	r2, #64	; 0x40
   146fc:	movne	r1, #73	; 0x49
   14700:	strbne	r1, [r4], #1
   14704:	tst	r2, #32
   14708:	movne	r2, #48	; 0x30
   1470c:	strbne	r2, [r4], #1
   14710:	ldr	r1, [sl, #12]
   14714:	ldr	r8, [sl, #16]
   14718:	cmp	r1, r8
   1471c:	beq	1473c <__printf_chk@plt+0x3a8c>
   14720:	sub	r8, r8, r1
   14724:	mov	r0, r4
   14728:	mov	r2, r8
   1472c:	str	r3, [fp, #-508]	; 0xfffffe04
   14730:	bl	10bd8 <memcpy@plt>
   14734:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14738:	add	r4, r4, r8
   1473c:	ldr	r1, [sl, #24]
   14740:	ldr	r8, [sl, #28]
   14744:	cmp	r1, r8
   14748:	beq	14768 <__printf_chk@plt+0x3ab8>
   1474c:	sub	r8, r8, r1
   14750:	mov	r0, r4
   14754:	mov	r2, r8
   14758:	str	r3, [fp, #-508]	; 0xfffffe04
   1475c:	bl	10bd8 <memcpy@plt>
   14760:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14764:	add	r4, r4, r8
   14768:	sub	r2, r5, #7
   1476c:	cmp	r2, #9
   14770:	ldrls	pc, [pc, r2, lsl #2]
   14774:	b	147d0 <__printf_chk@plt+0x3b20>
   14778:	andeq	r4, r1, r8, asr #15
   1477c:	andeq	r4, r1, r8, asr #15
   14780:	andeq	r4, r1, r0, asr #15
   14784:	andeq	r4, r1, r0, asr #15
   14788:	ldrdeq	r4, [r1], -r0
   1478c:	andeq	r4, r1, r0, lsr fp
   14790:	ldrdeq	r4, [r1], -r0
   14794:	andeq	r4, r1, r8, asr #15
   14798:	ldrdeq	r4, [r1], -r0
   1479c:	andeq	r4, r1, r8, asr #15
   147a0:	add	r3, r3, #13
   147a4:	bic	r3, r3, #7
   147a8:	sub	sp, sp, r3
   147ac:	add	r3, sp, #32
   147b0:	str	r3, [fp, #-516]	; 0xfffffdfc
   147b4:	mov	r3, #0
   147b8:	str	r3, [fp, #-536]	; 0xfffffde8
   147bc:	b	14590 <__printf_chk@plt+0x38e0>
   147c0:	mov	r2, #108	; 0x6c
   147c4:	strb	r2, [r4], #1
   147c8:	mov	r2, #108	; 0x6c
   147cc:	strb	r2, [r4], #1
   147d0:	ldrb	r2, [sl, #36]	; 0x24
   147d4:	mov	r1, #0
   147d8:	strb	r1, [r4, #1]
   147dc:	strb	r2, [r4]
   147e0:	ldr	r2, [sl, #20]
   147e4:	cmn	r2, #1
   147e8:	beq	14f88 <__printf_chk@plt+0x42d8>
   147ec:	ldr	r1, [r9, r2, lsl #4]
   147f0:	add	r2, r9, r2, lsl #4
   147f4:	cmp	r1, #5
   147f8:	bne	15308 <__printf_chk@plt+0x4658>
   147fc:	ldr	r2, [r2, #8]
   14800:	mov	r8, #1
   14804:	str	r2, [fp, #-492]	; 0xfffffe14
   14808:	ldr	r2, [sl, #32]
   1480c:	cmn	r2, #1
   14810:	beq	14838 <__printf_chk@plt+0x3b88>
   14814:	ldr	r1, [r9, r2, lsl #4]
   14818:	add	r9, r9, r2, lsl #4
   1481c:	cmp	r1, #5
   14820:	bne	15308 <__printf_chk@plt+0x4658>
   14824:	sub	r2, fp, #36	; 0x24
   14828:	add	r2, r2, r8, lsl #2
   1482c:	ldr	r1, [r9, #8]
   14830:	add	r8, r8, #1
   14834:	str	r1, [r2, #-456]	; 0xfffffe38
   14838:	mov	r2, #2
   1483c:	adds	r2, r7, r2
   14840:	str	r2, [fp, #-524]	; 0xfffffdf4
   14844:	bcs	14fc0 <__printf_chk@plt+0x4310>
   14848:	cmp	r6, r2
   1484c:	bcs	14fc8 <__printf_chk@plt+0x4318>
   14850:	cmp	r6, #0
   14854:	bne	14e84 <__printf_chk@plt+0x41d4>
   14858:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   1485c:	cmp	r2, #12
   14860:	movls	r6, #12
   14864:	bhi	14e98 <__printf_chk@plt+0x41e8>
   14868:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1486c:	sub	r2, r3, r1
   14870:	cmp	r3, r1
   14874:	cmpne	r3, #0
   14878:	clz	r2, r2
   1487c:	lsr	r2, r2, #5
   14880:	str	r2, [fp, #-508]	; 0xfffffe04
   14884:	bne	14f90 <__printf_chk@plt+0x42e0>
   14888:	mov	r0, r6
   1488c:	str	r3, [fp, #-512]	; 0xfffffe00
   14890:	bl	10be4 <malloc@plt>
   14894:	ldr	r3, [fp, #-512]	; 0xfffffe00
   14898:	ldr	r2, [fp, #-508]	; 0xfffffe04
   1489c:	subs	r9, r0, #0
   148a0:	beq	14ed8 <__printf_chk@plt+0x4228>
   148a4:	cmp	r7, #0
   148a8:	moveq	r2, #0
   148ac:	cmp	r2, #0
   148b0:	beq	148c0 <__printf_chk@plt+0x3c10>
   148b4:	mov	r1, r3
   148b8:	mov	r2, r7
   148bc:	bl	10bd8 <memcpy@plt>
   148c0:	mov	r3, #0
   148c4:	strb	r3, [r9, r7]
   148c8:	bl	10c2c <__errno_location@plt>
   148cc:	sub	r3, r5, #1
   148d0:	str	r3, [fp, #-520]	; 0xfffffdf8
   148d4:	ldr	r3, [r0]
   148d8:	str	r0, [fp, #-508]	; 0xfffffe04
   148dc:	str	r3, [fp, #-540]	; 0xfffffde4
   148e0:	sub	r3, r6, r7
   148e4:	str	r3, [fp, #-512]	; 0xfffffe00
   148e8:	ldr	r3, [fp, #-512]	; 0xfffffe00
   148ec:	mvn	r2, #0
   148f0:	cmp	r3, #0
   148f4:	str	r2, [fp, #-496]	; 0xfffffe10
   148f8:	ldr	r2, [fp, #-508]	; 0xfffffe04
   148fc:	movge	r5, r3
   14900:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   14904:	mov	r1, #0
   14908:	str	r1, [r2]
   1490c:	mvnlt	r5, #-2147483648	; 0x80000000
   14910:	cmp	r3, #16
   14914:	ldrls	pc, [pc, r3, lsl #2]
   14918:	b	15308 <__printf_chk@plt+0x4658>
   1491c:	andeq	r4, r1, r4, ror #28
   14920:	andeq	r4, r1, r4, asr #28
   14924:	andeq	r4, r1, r8, ror #27
   14928:	muleq	r1, ip, sp
   1492c:	andeq	r4, r1, ip, lsr fp
   14930:	andeq	r4, r1, ip, lsr fp
   14934:	andeq	r4, r1, ip, lsr fp
   14938:	andeq	r4, r1, ip, lsr fp
   1493c:	andeq	r4, r1, r0, ror #24
   14940:	andeq	r4, r1, r0, ror #24
   14944:	andeq	r4, r1, r0, asr sp
   14948:	andeq	r4, r1, r0, asr sp
   1494c:	andeq	r4, r1, ip, lsr fp
   14950:	andeq	r4, r1, ip, lsr fp
   14954:	andeq	r4, r1, ip, lsr fp
   14958:	andeq	r4, r1, ip, lsr fp
   1495c:	andeq	r4, r1, ip, lsr fp
   14960:	cmn	r2, #1
   14964:	bne	15308 <__printf_chk@plt+0x4658>
   14968:	mov	r2, #1
   1496c:	adds	r2, r7, r2
   14970:	mov	r4, r2
   14974:	bcs	14fb0 <__printf_chk@plt+0x4300>
   14978:	cmp	r6, r2
   1497c:	bcs	149f0 <__printf_chk@plt+0x3d40>
   14980:	cmp	r6, #0
   14984:	bne	14ed4 <__printf_chk@plt+0x4224>
   14988:	cmp	r2, #12
   1498c:	movls	r6, #12
   14990:	bhi	1510c <__printf_chk@plt+0x445c>
   14994:	ldr	r2, [fp, #-504]	; 0xfffffe08
   14998:	cmp	r3, r2
   1499c:	cmpne	r3, #0
   149a0:	sub	r5, r3, r2
   149a4:	clz	r5, r5
   149a8:	lsr	r5, r5, #5
   149ac:	bne	150a0 <__printf_chk@plt+0x43f0>
   149b0:	mov	r0, r6
   149b4:	str	r3, [fp, #-508]	; 0xfffffe04
   149b8:	bl	10be4 <malloc@plt>
   149bc:	ldr	r3, [fp, #-508]	; 0xfffffe04
   149c0:	subs	ip, r0, #0
   149c4:	beq	14ed8 <__printf_chk@plt+0x4228>
   149c8:	cmp	r7, #0
   149cc:	moveq	r5, #0
   149d0:	cmp	r5, #0
   149d4:	moveq	r3, ip
   149d8:	beq	149f0 <__printf_chk@plt+0x3d40>
   149dc:	mov	r1, r3
   149e0:	mov	r2, r7
   149e4:	str	ip, [fp, #-508]	; 0xfffffe04
   149e8:	bl	10bd8 <memcpy@plt>
   149ec:	ldr	r3, [fp, #-508]	; 0xfffffe04
   149f0:	mov	r2, #37	; 0x25
   149f4:	strb	r2, [r3, r7]
   149f8:	ldr	r9, [sl, #4]
   149fc:	add	sl, sl, #44	; 0x2c
   14a00:	ldr	r2, [fp, #-528]	; 0xfffffdf0
   14a04:	ldr	r5, [sl]
   14a08:	add	r2, r2, #1
   14a0c:	cmp	r5, r9
   14a10:	str	r2, [fp, #-528]	; 0xfffffdf0
   14a14:	bne	145c4 <__printf_chk@plt+0x3914>
   14a18:	mov	r7, r4
   14a1c:	b	14664 <__printf_chk@plt+0x39b4>
   14a20:	cmn	r6, #1
   14a24:	beq	15098 <__printf_chk@plt+0x43e8>
   14a28:	mov	r5, r3
   14a2c:	bl	10c2c <__errno_location@plt>
   14a30:	mov	r9, r5
   14a34:	str	r0, [fp, #-508]	; 0xfffffe04
   14a38:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14a3c:	cmp	r9, r3
   14a40:	cmpne	r9, #0
   14a44:	bne	14ef4 <__printf_chk@plt+0x4244>
   14a48:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14a4c:	cmp	r3, #0
   14a50:	beq	14a5c <__printf_chk@plt+0x3dac>
   14a54:	mov	r0, r3
   14a58:	bl	10af4 <free@plt>
   14a5c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   14a60:	sub	r3, fp, #348	; 0x15c
   14a64:	cmp	r0, r3
   14a68:	beq	14a70 <__printf_chk@plt+0x3dc0>
   14a6c:	bl	10af4 <free@plt>
   14a70:	ldr	r0, [fp, #-480]	; 0xfffffe20
   14a74:	sub	r3, fp, #476	; 0x1dc
   14a78:	cmp	r0, r3
   14a7c:	beq	14a84 <__printf_chk@plt+0x3dd4>
   14a80:	bl	10af4 <free@plt>
   14a84:	ldr	r2, [fp, #-508]	; 0xfffffe04
   14a88:	mov	r5, #0
   14a8c:	mov	r3, #12
   14a90:	str	r3, [r2]
   14a94:	ldr	r3, [pc, #2160]	; 1530c <__printf_chk@plt+0x465c>
   14a98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14a9c:	mov	r0, r5
   14aa0:	ldr	r3, [r3]
   14aa4:	cmp	r2, r3
   14aa8:	bne	152f8 <__printf_chk@plt+0x4648>
   14aac:	sub	sp, fp, #32
   14ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ab4:	mov	r0, r3
   14ab8:	mov	r1, r6
   14abc:	str	r3, [fp, #-508]	; 0xfffffe04
   14ac0:	bl	10b48 <realloc@plt>
   14ac4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14ac8:	cmp	r0, #0
   14acc:	beq	15290 <__printf_chk@plt+0x45e0>
   14ad0:	mov	r3, r0
   14ad4:	b	1464c <__printf_chk@plt+0x399c>
   14ad8:	sub	r5, r5, #18
   14adc:	cmp	r5, #4
   14ae0:	ldrls	pc, [pc, r5, lsl #2]
   14ae4:	b	15308 <__printf_chk@plt+0x4658>
   14ae8:	andeq	r4, r1, r8, lsr #30
   14aec:	andeq	r4, r1, r8, lsl pc
   14af0:	andeq	r4, r1, r4, asr #29
   14af4:	andeq	r4, r1, r4, asr #29
   14af8:	andeq	r4, r1, r0, lsl #30
   14afc:	bl	10c2c <__errno_location@plt>
   14b00:	str	r0, [fp, #-508]	; 0xfffffe04
   14b04:	b	14a5c <__printf_chk@plt+0x3dac>
   14b08:	mov	r5, #0
   14b0c:	b	14a94 <__printf_chk@plt+0x3de4>
   14b10:	blt	14ed8 <__printf_chk@plt+0x4228>
   14b14:	lsl	r6, r6, #1
   14b18:	cmp	r6, r2
   14b1c:	bcs	145f0 <__printf_chk@plt+0x3940>
   14b20:	cmn	r2, #1
   14b24:	beq	14a28 <__printf_chk@plt+0x3d78>
   14b28:	mov	r6, r2
   14b2c:	b	145f0 <__printf_chk@plt+0x3940>
   14b30:	mov	r2, #76	; 0x4c
   14b34:	strb	r2, [r4], #1
   14b38:	b	147d0 <__printf_chk@plt+0x3b20>
   14b3c:	ldr	r2, [sl, #40]	; 0x28
   14b40:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14b44:	cmp	r8, #1
   14b48:	add	r3, r3, r2, lsl #4
   14b4c:	add	r0, r9, r7
   14b50:	ldr	r3, [r3, #8]
   14b54:	beq	14db8 <__printf_chk@plt+0x4108>
   14b58:	cmp	r8, #2
   14b5c:	beq	14e0c <__printf_chk@plt+0x415c>
   14b60:	str	r3, [sp, #4]
   14b64:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14b68:	sub	r2, fp, #496	; 0x1f0
   14b6c:	str	r2, [sp, #8]
   14b70:	str	r3, [sp]
   14b74:	mov	r2, #1
   14b78:	mvn	r3, #0
   14b7c:	mov	r1, r5
   14b80:	bl	10bfc <__snprintf_chk@plt>
   14b84:	ldr	r2, [fp, #-496]	; 0xfffffe10
   14b88:	cmp	r2, #0
   14b8c:	blt	14cb4 <__printf_chk@plt+0x4004>
   14b90:	cmp	r2, r5
   14b94:	mov	r3, r2
   14b98:	bcs	14bac <__printf_chk@plt+0x3efc>
   14b9c:	add	r1, r9, r2
   14ba0:	ldrb	r1, [r1, r7]
   14ba4:	cmp	r1, #0
   14ba8:	bne	15308 <__printf_chk@plt+0x4658>
   14bac:	cmp	r2, r0
   14bb0:	bge	14bbc <__printf_chk@plt+0x3f0c>
   14bb4:	mov	r3, r0
   14bb8:	str	r0, [fp, #-496]	; 0xfffffe10
   14bbc:	add	r2, r3, #1
   14bc0:	cmp	r2, r5
   14bc4:	bcc	1511c <__printf_chk@plt+0x446c>
   14bc8:	cmn	r5, #-2147483647	; 0x80000001
   14bcc:	beq	15134 <__printf_chk@plt+0x4484>
   14bd0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14bd4:	add	r3, r3, r2
   14bd8:	cmp	r7, r3
   14bdc:	mvnhi	r3, #0
   14be0:	cmp	r6, #0
   14be4:	blt	14f38 <__printf_chk@plt+0x4288>
   14be8:	lsl	r2, r6, #1
   14bec:	cmp	r2, r3
   14bf0:	movcs	r3, r2
   14bf4:	cmp	r6, r3
   14bf8:	bcs	148e8 <__printf_chk@plt+0x3c38>
   14bfc:	cmp	r2, r3
   14c00:	bcc	14f44 <__printf_chk@plt+0x4294>
   14c04:	mov	r6, r2
   14c08:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14c0c:	cmp	r9, r3
   14c10:	cmpne	r9, #0
   14c14:	sub	r5, r9, r3
   14c18:	clz	r5, r5
   14c1c:	lsr	r5, r5, #5
   14c20:	bne	14f54 <__printf_chk@plt+0x42a4>
   14c24:	mov	r0, r6
   14c28:	bl	10be4 <malloc@plt>
   14c2c:	subs	r3, r0, #0
   14c30:	beq	14a38 <__printf_chk@plt+0x3d88>
   14c34:	cmp	r7, #0
   14c38:	moveq	r5, #0
   14c3c:	cmp	r5, #0
   14c40:	beq	14f78 <__printf_chk@plt+0x42c8>
   14c44:	mov	r1, r9
   14c48:	mov	r2, r7
   14c4c:	mov	r9, r3
   14c50:	bl	10bd8 <memcpy@plt>
   14c54:	sub	r3, r6, r7
   14c58:	str	r3, [fp, #-512]	; 0xfffffe00
   14c5c:	b	148e8 <__printf_chk@plt+0x3c38>
   14c60:	ldr	r2, [sl, #40]	; 0x28
   14c64:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14c68:	cmp	r8, #1
   14c6c:	add	r3, r3, r2, lsl #4
   14c70:	add	r0, r9, r7
   14c74:	ldrd	r2, [r3, #8]
   14c78:	beq	15004 <__printf_chk@plt+0x4354>
   14c7c:	cmp	r8, #2
   14c80:	beq	14fd0 <__printf_chk@plt+0x4320>
   14c84:	strd	r2, [sp, #8]
   14c88:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14c8c:	sub	r1, fp, #496	; 0x1f0
   14c90:	str	r1, [sp, #16]
   14c94:	str	r3, [sp]
   14c98:	mov	r2, #1
   14c9c:	mvn	r3, #0
   14ca0:	mov	r1, r5
   14ca4:	bl	10bfc <__snprintf_chk@plt>
   14ca8:	ldr	r2, [fp, #-496]	; 0xfffffe10
   14cac:	cmp	r2, #0
   14cb0:	bge	14b90 <__printf_chk@plt+0x3ee0>
   14cb4:	ldrb	r3, [r4, #1]
   14cb8:	cmp	r3, #0
   14cbc:	movne	r3, #0
   14cc0:	strbne	r3, [r4, #1]
   14cc4:	bne	148e8 <__printf_chk@plt+0x3c38>
   14cc8:	cmp	r0, #0
   14ccc:	bge	14bb4 <__printf_chk@plt+0x3f04>
   14cd0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14cd4:	ldr	r4, [r3]
   14cd8:	cmp	r4, #0
   14cdc:	bne	14cf4 <__printf_chk@plt+0x4044>
   14ce0:	ldrb	r3, [sl, #36]	; 0x24
   14ce4:	and	r3, r3, #239	; 0xef
   14ce8:	cmp	r3, #99	; 0x63
   14cec:	moveq	r4, #84	; 0x54
   14cf0:	movne	r4, #22
   14cf4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14cf8:	cmp	r9, r3
   14cfc:	cmpne	r9, #0
   14d00:	bne	15194 <__printf_chk@plt+0x44e4>
   14d04:	ldr	r3, [fp, #-536]	; 0xfffffde8
   14d08:	cmp	r3, #0
   14d0c:	beq	14d18 <__printf_chk@plt+0x4068>
   14d10:	mov	r0, r3
   14d14:	bl	10af4 <free@plt>
   14d18:	ldr	r0, [fp, #-360]	; 0xfffffe98
   14d1c:	sub	r3, fp, #348	; 0x15c
   14d20:	cmp	r0, r3
   14d24:	beq	14d2c <__printf_chk@plt+0x407c>
   14d28:	bl	10af4 <free@plt>
   14d2c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   14d30:	sub	r3, fp, #476	; 0x1dc
   14d34:	cmp	r0, r3
   14d38:	beq	14d40 <__printf_chk@plt+0x4090>
   14d3c:	bl	10af4 <free@plt>
   14d40:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14d44:	mov	r5, #0
   14d48:	str	r4, [r3]
   14d4c:	b	14a94 <__printf_chk@plt+0x3de4>
   14d50:	ldr	r2, [sl, #40]	; 0x28
   14d54:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14d58:	cmp	r8, #1
   14d5c:	add	r3, r3, r2, lsl #4
   14d60:	add	r0, r9, r7
   14d64:	ldrd	r2, [r3, #8]
   14d68:	beq	15068 <__printf_chk@plt+0x43b8>
   14d6c:	cmp	r8, #2
   14d70:	beq	15034 <__printf_chk@plt+0x4384>
   14d74:	strd	r2, [sp, #8]
   14d78:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14d7c:	sub	r1, fp, #496	; 0x1f0
   14d80:	str	r1, [sp, #16]
   14d84:	str	r3, [sp]
   14d88:	mov	r2, #1
   14d8c:	mvn	r3, #0
   14d90:	mov	r1, r5
   14d94:	bl	10bfc <__snprintf_chk@plt>
   14d98:	b	14b84 <__printf_chk@plt+0x3ed4>
   14d9c:	ldr	r2, [sl, #40]	; 0x28
   14da0:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14da4:	cmp	r8, #1
   14da8:	add	r3, r3, r2, lsl #4
   14dac:	add	r0, r9, r7
   14db0:	ldrh	r3, [r3, #8]
   14db4:	bne	14b58 <__printf_chk@plt+0x3ea8>
   14db8:	ldr	r2, [fp, #-492]	; 0xfffffe14
   14dbc:	str	r3, [sp, #8]
   14dc0:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14dc4:	sub	r1, fp, #496	; 0x1f0
   14dc8:	str	r1, [sp, #12]
   14dcc:	str	r3, [sp]
   14dd0:	str	r2, [sp, #4]
   14dd4:	mvn	r3, #0
   14dd8:	mov	r2, r8
   14ddc:	mov	r1, r5
   14de0:	bl	10bfc <__snprintf_chk@plt>
   14de4:	b	14b84 <__printf_chk@plt+0x3ed4>
   14de8:	ldr	r2, [sl, #40]	; 0x28
   14dec:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14df0:	cmp	r8, #1
   14df4:	add	r3, r3, r2, lsl #4
   14df8:	add	r0, r9, r7
   14dfc:	ldrsh	r3, [r3, #8]
   14e00:	beq	14db8 <__printf_chk@plt+0x4108>
   14e04:	cmp	r8, #2
   14e08:	bne	14b60 <__printf_chk@plt+0x3eb0>
   14e0c:	ldr	r1, [fp, #-488]	; 0xfffffe18
   14e10:	ldr	r2, [fp, #-492]	; 0xfffffe14
   14e14:	str	r3, [sp, #12]
   14e18:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14e1c:	sub	ip, fp, #496	; 0x1f0
   14e20:	str	r3, [sp]
   14e24:	str	r1, [sp, #8]
   14e28:	str	r2, [sp, #4]
   14e2c:	str	ip, [sp, #16]
   14e30:	mvn	r3, #0
   14e34:	mov	r2, #1
   14e38:	mov	r1, r5
   14e3c:	bl	10bfc <__snprintf_chk@plt>
   14e40:	b	14b84 <__printf_chk@plt+0x3ed4>
   14e44:	ldr	r2, [sl, #40]	; 0x28
   14e48:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14e4c:	cmp	r8, #1
   14e50:	add	r3, r3, r2, lsl #4
   14e54:	add	r0, r9, r7
   14e58:	ldrb	r3, [r3, #8]
   14e5c:	bne	14b58 <__printf_chk@plt+0x3ea8>
   14e60:	b	14db8 <__printf_chk@plt+0x4108>
   14e64:	ldr	r2, [sl, #40]	; 0x28
   14e68:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14e6c:	cmp	r8, #1
   14e70:	add	r3, r3, r2, lsl #4
   14e74:	add	r0, r9, r7
   14e78:	ldrsb	r3, [r3, #8]
   14e7c:	bne	14b58 <__printf_chk@plt+0x3ea8>
   14e80:	b	14db8 <__printf_chk@plt+0x4108>
   14e84:	blt	14ed8 <__printf_chk@plt+0x4228>
   14e88:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14e8c:	lsl	r6, r6, #1
   14e90:	cmp	r6, r2
   14e94:	bcs	14868 <__printf_chk@plt+0x3bb8>
   14e98:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14e9c:	mov	r1, #0
   14ea0:	cmn	r2, #1
   14ea4:	movne	r2, #0
   14ea8:	moveq	r2, #1
   14eac:	cmp	r1, r1
   14eb0:	movne	r2, #255	; 0xff
   14eb4:	cmp	r2, r1
   14eb8:	bne	14a28 <__printf_chk@plt+0x3d78>
   14ebc:	ldr	r6, [fp, #-524]	; 0xfffffdf4
   14ec0:	b	14868 <__printf_chk@plt+0x3bb8>
   14ec4:	ldr	r2, [r1, #8]
   14ec8:	mov	r4, r7
   14ecc:	str	r7, [r2]
   14ed0:	b	149f8 <__printf_chk@plt+0x3d48>
   14ed4:	bge	15100 <__printf_chk@plt+0x4450>
   14ed8:	mov	r9, r3
   14edc:	bl	10c2c <__errno_location@plt>
   14ee0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14ee4:	cmp	r9, r3
   14ee8:	cmpne	r9, #0
   14eec:	str	r0, [fp, #-508]	; 0xfffffe04
   14ef0:	beq	14a48 <__printf_chk@plt+0x3d98>
   14ef4:	mov	r0, r9
   14ef8:	bl	10af4 <free@plt>
   14efc:	b	14a48 <__printf_chk@plt+0x3d98>
   14f00:	ldr	r2, [r1, #8]
   14f04:	mov	r1, #0
   14f08:	mov	r4, r7
   14f0c:	str	r7, [r2]
   14f10:	str	r1, [r2, #4]
   14f14:	b	149f8 <__printf_chk@plt+0x3d48>
   14f18:	ldr	r2, [r1, #8]
   14f1c:	mov	r4, r7
   14f20:	strh	r7, [r2]
   14f24:	b	149f8 <__printf_chk@plt+0x3d48>
   14f28:	ldr	r2, [r1, #8]
   14f2c:	mov	r4, r7
   14f30:	strb	r7, [r2]
   14f34:	b	149f8 <__printf_chk@plt+0x3d48>
   14f38:	cmn	r6, #1
   14f3c:	beq	148e8 <__printf_chk@plt+0x3c38>
   14f40:	b	14a38 <__printf_chk@plt+0x3d88>
   14f44:	cmn	r3, #1
   14f48:	beq	14a38 <__printf_chk@plt+0x3d88>
   14f4c:	mov	r6, r3
   14f50:	b	14c08 <__printf_chk@plt+0x3f58>
   14f54:	mov	r1, r6
   14f58:	mov	r0, r9
   14f5c:	bl	10b48 <realloc@plt>
   14f60:	cmp	r0, #0
   14f64:	beq	14a38 <__printf_chk@plt+0x3d88>
   14f68:	sub	r3, r6, r7
   14f6c:	mov	r9, r0
   14f70:	str	r3, [fp, #-512]	; 0xfffffe00
   14f74:	b	148e8 <__printf_chk@plt+0x3c38>
   14f78:	mov	r9, r3
   14f7c:	sub	r3, r6, r7
   14f80:	str	r3, [fp, #-512]	; 0xfffffe00
   14f84:	b	148e8 <__printf_chk@plt+0x3c38>
   14f88:	mov	r8, #0
   14f8c:	b	14808 <__printf_chk@plt+0x3b58>
   14f90:	mov	r0, r3
   14f94:	mov	r1, r6
   14f98:	str	r3, [fp, #-508]	; 0xfffffe04
   14f9c:	bl	10b48 <realloc@plt>
   14fa0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   14fa4:	subs	r9, r0, #0
   14fa8:	bne	148c0 <__printf_chk@plt+0x3c10>
   14fac:	b	14ed8 <__printf_chk@plt+0x4228>
   14fb0:	cmn	r6, #1
   14fb4:	bne	14a28 <__printf_chk@plt+0x3d78>
   14fb8:	mov	r4, r6
   14fbc:	b	149f0 <__printf_chk@plt+0x3d40>
   14fc0:	cmn	r6, #1
   14fc4:	bne	14a28 <__printf_chk@plt+0x3d78>
   14fc8:	mov	r9, r3
   14fcc:	b	148c0 <__printf_chk@plt+0x3c10>
   14fd0:	ldr	r1, [fp, #-492]	; 0xfffffe14
   14fd4:	ldr	ip, [fp, #-488]	; 0xfffffe18
   14fd8:	strd	r2, [sp, #16]
   14fdc:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   14fe0:	sub	lr, fp, #496	; 0x1f0
   14fe4:	str	r3, [sp]
   14fe8:	stmib	sp, {r1, ip}
   14fec:	str	lr, [sp, #24]
   14ff0:	mvn	r3, #0
   14ff4:	mov	r2, #1
   14ff8:	mov	r1, r5
   14ffc:	bl	10bfc <__snprintf_chk@plt>
   15000:	b	14b84 <__printf_chk@plt+0x3ed4>
   15004:	ldr	r1, [fp, #-492]	; 0xfffffe14
   15008:	strd	r2, [sp, #8]
   1500c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15010:	sub	ip, fp, #496	; 0x1f0
   15014:	str	r3, [sp]
   15018:	str	r1, [sp, #4]
   1501c:	str	ip, [sp, #16]
   15020:	mvn	r3, #0
   15024:	mov	r2, r8
   15028:	mov	r1, r5
   1502c:	bl	10bfc <__snprintf_chk@plt>
   15030:	b	14b84 <__printf_chk@plt+0x3ed4>
   15034:	ldr	r1, [fp, #-492]	; 0xfffffe14
   15038:	ldr	ip, [fp, #-488]	; 0xfffffe18
   1503c:	strd	r2, [sp, #16]
   15040:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15044:	sub	lr, fp, #496	; 0x1f0
   15048:	str	r3, [sp]
   1504c:	stmib	sp, {r1, ip}
   15050:	str	lr, [sp, #24]
   15054:	mvn	r3, #0
   15058:	mov	r2, #1
   1505c:	mov	r1, r5
   15060:	bl	10bfc <__snprintf_chk@plt>
   15064:	b	14b84 <__printf_chk@plt+0x3ed4>
   15068:	ldr	r1, [fp, #-492]	; 0xfffffe14
   1506c:	strd	r2, [sp, #8]
   15070:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   15074:	sub	ip, fp, #496	; 0x1f0
   15078:	str	r3, [sp]
   1507c:	str	r1, [sp, #4]
   15080:	str	ip, [sp, #16]
   15084:	mvn	r3, #0
   15088:	mov	r2, r8
   1508c:	mov	r1, r5
   15090:	bl	10bfc <__snprintf_chk@plt>
   15094:	b	14b84 <__printf_chk@plt+0x3ed4>
   15098:	mov	r7, r6
   1509c:	b	1464c <__printf_chk@plt+0x399c>
   150a0:	mov	r0, r3
   150a4:	mov	r1, r6
   150a8:	str	r3, [fp, #-508]	; 0xfffffe04
   150ac:	bl	10b48 <realloc@plt>
   150b0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   150b4:	cmp	r0, #0
   150b8:	beq	15290 <__printf_chk@plt+0x45e0>
   150bc:	mov	r3, r0
   150c0:	b	149f0 <__printf_chk@plt+0x3d40>
   150c4:	ldr	r0, [fp, #-360]	; 0xfffffe98
   150c8:	sub	r3, fp, #348	; 0x15c
   150cc:	cmp	r0, r3
   150d0:	beq	150d8 <__printf_chk@plt+0x4428>
   150d4:	bl	10af4 <free@plt>
   150d8:	ldr	r0, [fp, #-480]	; 0xfffffe20
   150dc:	sub	r3, fp, #476	; 0x1dc
   150e0:	cmp	r0, r3
   150e4:	beq	150ec <__printf_chk@plt+0x443c>
   150e8:	bl	10af4 <free@plt>
   150ec:	bl	10c2c <__errno_location@plt>
   150f0:	mov	r3, #22
   150f4:	mov	r5, #0
   150f8:	str	r3, [r0]
   150fc:	b	14a94 <__printf_chk@plt+0x3de4>
   15100:	lsl	r6, r6, #1
   15104:	cmp	r6, r2
   15108:	bcs	14994 <__printf_chk@plt+0x3ce4>
   1510c:	cmn	r2, #1
   15110:	beq	14a28 <__printf_chk@plt+0x3d78>
   15114:	mov	r6, r2
   15118:	b	14994 <__printf_chk@plt+0x3ce4>
   1511c:	add	r4, r7, r3
   15120:	ldr	r3, [fp, #-508]	; 0xfffffe04
   15124:	ldr	r2, [fp, #-540]	; 0xfffffde4
   15128:	str	r2, [r3]
   1512c:	mov	r3, r9
   15130:	b	149f8 <__printf_chk@plt+0x3d48>
   15134:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15138:	cmp	r9, r3
   1513c:	cmpne	r9, #0
   15140:	bne	151a0 <__printf_chk@plt+0x44f0>
   15144:	ldr	r3, [fp, #-536]	; 0xfffffde8
   15148:	cmp	r3, #0
   1514c:	beq	15158 <__printf_chk@plt+0x44a8>
   15150:	mov	r0, r3
   15154:	bl	10af4 <free@plt>
   15158:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1515c:	sub	r3, fp, #348	; 0x15c
   15160:	cmp	r0, r3
   15164:	beq	1516c <__printf_chk@plt+0x44bc>
   15168:	bl	10af4 <free@plt>
   1516c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15170:	sub	r3, fp, #476	; 0x1dc
   15174:	cmp	r0, r3
   15178:	beq	15180 <__printf_chk@plt+0x44d0>
   1517c:	bl	10af4 <free@plt>
   15180:	ldr	r2, [fp, #-508]	; 0xfffffe04
   15184:	mov	r3, #75	; 0x4b
   15188:	mov	r5, #0
   1518c:	str	r3, [r2]
   15190:	b	14a94 <__printf_chk@plt+0x3de4>
   15194:	mov	r0, r9
   15198:	bl	10af4 <free@plt>
   1519c:	b	14d04 <__printf_chk@plt+0x4054>
   151a0:	mov	r0, r9
   151a4:	bl	10af4 <free@plt>
   151a8:	b	15144 <__printf_chk@plt+0x4494>
   151ac:	mov	r5, r3
   151b0:	mov	r3, #1
   151b4:	adds	r4, r7, r3
   151b8:	mov	r8, r7
   151bc:	bcs	152fc <__printf_chk@plt+0x464c>
   151c0:	cmp	r6, r4
   151c4:	bcs	15230 <__printf_chk@plt+0x4580>
   151c8:	cmp	r6, #0
   151cc:	bne	152d8 <__printf_chk@plt+0x4628>
   151d0:	cmp	r4, #12
   151d4:	movls	r6, #12
   151d8:	bhi	152e8 <__printf_chk@plt+0x4638>
   151dc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   151e0:	cmp	r5, r3
   151e4:	cmpne	r5, #0
   151e8:	sub	r7, r5, r3
   151ec:	clz	r7, r7
   151f0:	lsr	r7, r7, #5
   151f4:	bne	152bc <__printf_chk@plt+0x460c>
   151f8:	mov	r0, r6
   151fc:	bl	10be4 <malloc@plt>
   15200:	subs	r3, r0, #0
   15204:	beq	14a2c <__printf_chk@plt+0x3d7c>
   15208:	cmp	r8, #0
   1520c:	movne	r2, r7
   15210:	moveq	r2, #0
   15214:	cmp	r2, #0
   15218:	moveq	r5, r3
   1521c:	beq	15230 <__printf_chk@plt+0x4580>
   15220:	mov	r1, r5
   15224:	mov	r2, r8
   15228:	mov	r5, r3
   1522c:	bl	10bd8 <memcpy@plt>
   15230:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15234:	cmp	r5, r3
   15238:	cmpne	r6, r4
   1523c:	mov	r3, #0
   15240:	strb	r3, [r5, r8]
   15244:	bhi	152a4 <__printf_chk@plt+0x45f4>
   15248:	ldr	r3, [fp, #-536]	; 0xfffffde8
   1524c:	cmp	r3, #0
   15250:	beq	1525c <__printf_chk@plt+0x45ac>
   15254:	mov	r0, r3
   15258:	bl	10af4 <free@plt>
   1525c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15260:	sub	r3, fp, #348	; 0x15c
   15264:	cmp	r0, r3
   15268:	beq	15270 <__printf_chk@plt+0x45c0>
   1526c:	bl	10af4 <free@plt>
   15270:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15274:	sub	r3, fp, #476	; 0x1dc
   15278:	cmp	r0, r3
   1527c:	beq	15284 <__printf_chk@plt+0x45d4>
   15280:	bl	10af4 <free@plt>
   15284:	ldr	r3, [fp, #-532]	; 0xfffffdec
   15288:	str	r8, [r3]
   1528c:	b	14a94 <__printf_chk@plt+0x3de4>
   15290:	mov	r5, r3
   15294:	bl	10c2c <__errno_location@plt>
   15298:	mov	r9, r5
   1529c:	str	r0, [fp, #-508]	; 0xfffffe04
   152a0:	b	14ef4 <__printf_chk@plt+0x4244>
   152a4:	mov	r0, r5
   152a8:	mov	r1, r4
   152ac:	bl	10b48 <realloc@plt>
   152b0:	cmp	r0, #0
   152b4:	movne	r5, r0
   152b8:	b	15248 <__printf_chk@plt+0x4598>
   152bc:	mov	r1, r6
   152c0:	mov	r0, r5
   152c4:	bl	10b48 <realloc@plt>
   152c8:	cmp	r0, #0
   152cc:	beq	15294 <__printf_chk@plt+0x45e4>
   152d0:	mov	r5, r0
   152d4:	b	15230 <__printf_chk@plt+0x4580>
   152d8:	blt	14a2c <__printf_chk@plt+0x3d7c>
   152dc:	lsl	r6, r6, #1
   152e0:	cmp	r6, r4
   152e4:	bcs	151dc <__printf_chk@plt+0x452c>
   152e8:	cmn	r4, #1
   152ec:	movne	r6, r4
   152f0:	bne	151dc <__printf_chk@plt+0x452c>
   152f4:	b	14a2c <__printf_chk@plt+0x3d7c>
   152f8:	bl	10b6c <__stack_chk_fail@plt>
   152fc:	cmn	r6, #1
   15300:	beq	15230 <__printf_chk@plt+0x4580>
   15304:	b	14a2c <__printf_chk@plt+0x3d7c>
   15308:	bl	10b3c <abort@plt>
   1530c:	andeq	r6, r2, r8, lsr lr
   15310:	ldr	r3, [r1]
   15314:	ldr	r2, [r1, #4]
   15318:	cmp	r3, #0
   1531c:	beq	1542c <__printf_chk@plt+0x477c>
   15320:	push	{r4, r5, r6, lr}
   15324:	add	r2, r2, #8
   15328:	ldr	r6, [pc, #268]	; 1543c <__printf_chk@plt+0x478c>
   1532c:	ldr	lr, [pc, #268]	; 15440 <__printf_chk@plt+0x4790>
   15330:	mov	ip, #0
   15334:	ldr	r3, [r2, #-8]
   15338:	sub	r3, r3, #1
   1533c:	cmp	r3, #21
   15340:	ldrls	pc, [pc, r3, lsl #2]
   15344:	b	15434 <__printf_chk@plt+0x4784>
   15348:	andeq	r5, r1, r4, ror #7
   1534c:	andeq	r5, r1, r4, ror #7
   15350:	ldrdeq	r5, [r1], -r8
   15354:	ldrdeq	r5, [r1], -r8
   15358:	andeq	r5, r1, r0, lsr #7
   1535c:	andeq	r5, r1, r0, lsr #7
   15360:	andeq	r5, r1, r0, lsr #7
   15364:	andeq	r5, r1, r0, lsr #7
   15368:	andeq	r5, r1, r4, asr #7
   1536c:	andeq	r5, r1, r4, asr #7
   15370:	strdeq	r5, [r1], -r0
   15374:	strdeq	r5, [r1], -r0
   15378:	andeq	r5, r1, r0, lsr #7
   1537c:	andeq	r5, r1, r0, lsr #7
   15380:	andeq	r5, r1, r4, lsl #8
   15384:	andeq	r5, r1, r8, lsl r4
   15388:	andeq	r5, r1, r0, lsr #7
   1538c:	andeq	r5, r1, r0, lsr #7
   15390:	andeq	r5, r1, r0, lsr #7
   15394:	andeq	r5, r1, r0, lsr #7
   15398:	andeq	r5, r1, r0, lsr #7
   1539c:	andeq	r5, r1, r0, lsr #7
   153a0:	ldr	r3, [r0], #4
   153a4:	str	r3, [r2]
   153a8:	ldr	r3, [r1]
   153ac:	add	ip, ip, #1
   153b0:	cmp	r3, ip
   153b4:	add	r2, r2, #16
   153b8:	bhi	15334 <__printf_chk@plt+0x4684>
   153bc:	mov	r0, #0
   153c0:	pop	{r4, r5, r6, pc}
   153c4:	add	r0, r0, #7
   153c8:	bic	r0, r0, #7
   153cc:	ldrd	r4, [r0], #8
   153d0:	strd	r4, [r2]
   153d4:	b	153a8 <__printf_chk@plt+0x46f8>
   153d8:	ldr	r3, [r0], #4
   153dc:	strh	r3, [r2]
   153e0:	b	153a8 <__printf_chk@plt+0x46f8>
   153e4:	ldr	r3, [r0], #4
   153e8:	strb	r3, [r2]
   153ec:	b	153a8 <__printf_chk@plt+0x46f8>
   153f0:	add	r0, r0, #7
   153f4:	bic	r0, r0, #7
   153f8:	ldrd	r4, [r0], #8
   153fc:	strd	r4, [r2]
   15400:	b	153a8 <__printf_chk@plt+0x46f8>
   15404:	ldr	r3, [r0], #4
   15408:	cmp	r3, #0
   1540c:	streq	lr, [r2]
   15410:	bne	153a4 <__printf_chk@plt+0x46f4>
   15414:	b	153a8 <__printf_chk@plt+0x46f8>
   15418:	ldr	r3, [r0], #4
   1541c:	cmp	r3, #0
   15420:	streq	r6, [r2]
   15424:	bne	153a4 <__printf_chk@plt+0x46f4>
   15428:	b	153a8 <__printf_chk@plt+0x46f8>
   1542c:	mov	r0, #0
   15430:	bx	lr
   15434:	mvn	r0, #0
   15438:	pop	{r4, r5, r6, pc}
   1543c:	andeq	r6, r1, ip, ror r5
   15440:	muleq	r1, r8, r5
   15444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15448:	mov	sl, r2
   1544c:	sub	sp, sp, #44	; 0x2c
   15450:	mov	fp, r1
   15454:	mov	r3, r1
   15458:	mov	r1, sl
   1545c:	mov	r2, #0
   15460:	mov	ip, #7
   15464:	str	r2, [r3], #16
   15468:	str	fp, [sp, #4]
   1546c:	str	r3, [fp, #4]
   15470:	mov	r4, r2
   15474:	str	r2, [r1], #8
   15478:	str	ip, [sp, #8]
   1547c:	mov	r7, r0
   15480:	str	r3, [sp, #36]	; 0x24
   15484:	str	r2, [sp, #28]
   15488:	str	r1, [sp, #12]
   1548c:	str	r2, [sp, #16]
   15490:	str	r1, [sl, #4]
   15494:	str	r2, [sp, #32]
   15498:	mov	r9, r2
   1549c:	str	ip, [sp, #24]
   154a0:	mov	fp, sl
   154a4:	b	154b4 <__printf_chk@plt+0x4804>
   154a8:	cmp	r0, #37	; 0x25
   154ac:	mov	r5, r7
   154b0:	beq	154f4 <__printf_chk@plt+0x4844>
   154b4:	mov	r2, r7
   154b8:	ldrb	r0, [r7], #1
   154bc:	cmp	r0, #0
   154c0:	bne	154a8 <__printf_chk@plt+0x47f8>
   154c4:	add	ip, r4, r4, lsl #2
   154c8:	ldr	fp, [sp, #4]
   154cc:	add	r4, r4, ip, lsl #1
   154d0:	mov	r1, r0
   154d4:	str	r2, [r3, r4, lsl #2]
   154d8:	ldr	r3, [sp, #16]
   154dc:	str	r3, [fp, #8]
   154e0:	ldr	r3, [sp, #28]
   154e4:	str	r3, [fp, #12]
   154e8:	mov	r0, r1
   154ec:	add	sp, sp, #44	; 0x2c
   154f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154f4:	add	r1, r4, r4, lsl #2
   154f8:	mvn	r8, #0
   154fc:	add	r4, r4, r1, lsl #1
   15500:	add	r6, r3, r4, lsl #2
   15504:	str	r2, [r3, r4, lsl #2]
   15508:	str	r9, [r6, #8]
   1550c:	str	r9, [r6, #12]
   15510:	str	r9, [r6, #16]
   15514:	str	r9, [r6, #24]
   15518:	str	r9, [r6, #28]
   1551c:	str	r8, [r6, #20]
   15520:	str	r8, [r6, #32]
   15524:	str	r8, [r6, #40]	; 0x28
   15528:	ldrb	r4, [r7]
   1552c:	sub	r0, r4, #48	; 0x30
   15530:	uxtb	r3, r0
   15534:	cmp	r3, #9
   15538:	bhi	15584 <__printf_chk@plt+0x48d4>
   1553c:	b	159fc <__printf_chk@plt+0x4d4c>
   15540:	cmp	r4, #45	; 0x2d
   15544:	beq	155a0 <__printf_chk@plt+0x48f0>
   15548:	cmp	r4, #43	; 0x2b
   1554c:	beq	155b0 <__printf_chk@plt+0x4900>
   15550:	cmp	r4, #32
   15554:	beq	155c0 <__printf_chk@plt+0x4910>
   15558:	cmp	r4, #35	; 0x23
   1555c:	beq	155d0 <__printf_chk@plt+0x4920>
   15560:	cmp	r4, #48	; 0x30
   15564:	beq	155e0 <__printf_chk@plt+0x4930>
   15568:	cmp	r4, #73	; 0x49
   1556c:	bne	155f0 <__printf_chk@plt+0x4940>
   15570:	ldr	r3, [r6, #8]
   15574:	orr	r3, r3, #64	; 0x40
   15578:	str	r3, [r6, #8]
   1557c:	ldrb	r4, [r7]
   15580:	mov	r5, r7
   15584:	cmp	r4, #39	; 0x27
   15588:	add	r7, r5, #1
   1558c:	bne	15540 <__printf_chk@plt+0x4890>
   15590:	ldr	r3, [r6, #8]
   15594:	orr	r3, r3, #1
   15598:	str	r3, [r6, #8]
   1559c:	b	1557c <__printf_chk@plt+0x48cc>
   155a0:	ldr	r3, [r6, #8]
   155a4:	orr	r3, r3, #2
   155a8:	str	r3, [r6, #8]
   155ac:	b	1557c <__printf_chk@plt+0x48cc>
   155b0:	ldr	r3, [r6, #8]
   155b4:	orr	r3, r3, #4
   155b8:	str	r3, [r6, #8]
   155bc:	b	1557c <__printf_chk@plt+0x48cc>
   155c0:	ldr	r3, [r6, #8]
   155c4:	orr	r3, r3, #8
   155c8:	str	r3, [r6, #8]
   155cc:	b	1557c <__printf_chk@plt+0x48cc>
   155d0:	ldr	r3, [r6, #8]
   155d4:	orr	r3, r3, #16
   155d8:	str	r3, [r6, #8]
   155dc:	b	1557c <__printf_chk@plt+0x48cc>
   155e0:	ldr	r3, [r6, #8]
   155e4:	orr	r3, r3, #32
   155e8:	str	r3, [r6, #8]
   155ec:	b	1557c <__printf_chk@plt+0x48cc>
   155f0:	cmp	r4, #42	; 0x2a
   155f4:	beq	157cc <__printf_chk@plt+0x4b1c>
   155f8:	sub	r3, r4, #48	; 0x30
   155fc:	cmp	r3, #9
   15600:	bls	15dec <__printf_chk@plt+0x513c>
   15604:	cmp	r4, #46	; 0x2e
   15608:	beq	15864 <__printf_chk@plt+0x4bb4>
   1560c:	add	r5, r5, #1
   15610:	mov	r3, #0
   15614:	mov	r1, #1
   15618:	b	15620 <__printf_chk@plt+0x4970>
   1561c:	ldrb	r4, [r5], #1
   15620:	cmp	r4, #104	; 0x68
   15624:	andeq	r2, r3, #1
   15628:	mov	r7, r5
   1562c:	orreq	r3, r3, r1, lsl r2
   15630:	beq	1561c <__printf_chk@plt+0x496c>
   15634:	cmp	r4, #76	; 0x4c
   15638:	orreq	r3, r3, #4
   1563c:	beq	1561c <__printf_chk@plt+0x496c>
   15640:	cmp	r4, #108	; 0x6c
   15644:	addeq	r3, r3, #8
   15648:	beq	1561c <__printf_chk@plt+0x496c>
   1564c:	cmp	r4, #106	; 0x6a
   15650:	addeq	r3, r3, #16
   15654:	beq	1561c <__printf_chk@plt+0x496c>
   15658:	and	r2, r4, #223	; 0xdf
   1565c:	cmp	r2, #90	; 0x5a
   15660:	beq	1561c <__printf_chk@plt+0x496c>
   15664:	cmp	r4, #116	; 0x74
   15668:	beq	1561c <__printf_chk@plt+0x496c>
   1566c:	sub	r2, r4, #37	; 0x25
   15670:	cmp	r2, #83	; 0x53
   15674:	ldrls	pc, [pc, r2, lsl #2]
   15678:	b	15a6c <__printf_chk@plt+0x4dbc>
   1567c:	andeq	r5, r1, r0, ror #18
   15680:	andeq	r5, r1, ip, ror #20
   15684:	andeq	r5, r1, ip, ror #20
   15688:	andeq	r5, r1, ip, ror #20
   1568c:	andeq	r5, r1, ip, ror #20
   15690:	andeq	r5, r1, ip, ror #20
   15694:	andeq	r5, r1, ip, ror #20
   15698:	andeq	r5, r1, ip, ror #20
   1569c:	andeq	r5, r1, ip, ror #20
   156a0:	andeq	r5, r1, ip, ror #20
   156a4:	andeq	r5, r1, ip, ror #20
   156a8:	andeq	r5, r1, ip, ror #20
   156ac:	andeq	r5, r1, ip, ror #20
   156b0:	andeq	r5, r1, ip, ror #20
   156b4:	andeq	r5, r1, ip, ror #20
   156b8:	andeq	r5, r1, ip, ror #20
   156bc:	andeq	r5, r1, ip, ror #20
   156c0:	andeq	r5, r1, ip, ror #20
   156c4:	andeq	r5, r1, ip, ror #20
   156c8:	andeq	r5, r1, ip, ror #20
   156cc:	andeq	r5, r1, ip, ror #20
   156d0:	andeq	r5, r1, ip, ror #20
   156d4:	andeq	r5, r1, ip, ror #20
   156d8:	andeq	r5, r1, ip, ror #20
   156dc:	andeq	r5, r1, ip, ror #20
   156e0:	andeq	r5, r1, ip, ror #20
   156e4:	andeq	r5, r1, ip, ror #20
   156e8:	andeq	r5, r1, ip, ror #20
   156ec:			; <UNDEFINED> instruction: 0x00015bb4
   156f0:	andeq	r5, r1, ip, ror #20
   156f4:	andeq	r5, r1, r0, lsl #18
   156f8:	andeq	r5, r1, ip, ror #20
   156fc:			; <UNDEFINED> instruction: 0x00015bb4
   15700:			; <UNDEFINED> instruction: 0x00015bb4
   15704:			; <UNDEFINED> instruction: 0x00015bb4
   15708:	andeq	r5, r1, ip, ror #20
   1570c:	andeq	r5, r1, ip, ror #20
   15710:	andeq	r5, r1, ip, ror #20
   15714:	andeq	r5, r1, ip, ror #20
   15718:	andeq	r5, r1, ip, ror #20
   1571c:	andeq	r5, r1, ip, ror #20
   15720:	andeq	r5, r1, ip, ror #20
   15724:	andeq	r5, r1, ip, ror #20
   15728:	andeq	r5, r1, ip, ror #20
   1572c:	andeq	r5, r1, ip, ror #20
   15730:	andeq	r5, r1, ip, ror #20
   15734:	strdeq	r5, [r1], -r8
   15738:	andeq	r5, r1, ip, ror #20
   1573c:	andeq	r5, r1, ip, ror #20
   15740:	andeq	r5, r1, ip, ror #20
   15744:	andeq	r5, r1, ip, ror #20
   15748:			; <UNDEFINED> instruction: 0x00015cb4
   1574c:	andeq	r5, r1, ip, ror #20
   15750:	andeq	r5, r1, ip, ror #20
   15754:	andeq	r5, r1, ip, ror #20
   15758:	andeq	r5, r1, ip, ror #20
   1575c:	andeq	r5, r1, ip, ror #20
   15760:	andeq	r5, r1, ip, ror #20
   15764:	andeq	r5, r1, ip, ror #20
   15768:	andeq	r5, r1, ip, ror #20
   1576c:			; <UNDEFINED> instruction: 0x00015bb4
   15770:	andeq	r5, r1, ip, ror #20
   15774:	andeq	r5, r1, r0, lsr #25
   15778:	andeq	r5, r1, ip, asr ip
   1577c:			; <UNDEFINED> instruction: 0x00015bb4
   15780:			; <UNDEFINED> instruction: 0x00015bb4
   15784:			; <UNDEFINED> instruction: 0x00015bb4
   15788:	andeq	r5, r1, ip, ror #20
   1578c:	andeq	r5, r1, ip, asr ip
   15790:	andeq	r5, r1, ip, ror #20
   15794:	andeq	r5, r1, ip, ror #20
   15798:	andeq	r5, r1, ip, ror #20
   1579c:	andeq	r5, r1, ip, ror #20
   157a0:	andeq	r5, r1, r4, lsl sp
   157a4:			; <UNDEFINED> instruction: 0x00015cb4
   157a8:	andeq	r5, r1, r8, lsl #26
   157ac:	andeq	r5, r1, ip, ror #20
   157b0:	andeq	r5, r1, ip, ror #20
   157b4:	andeq	r5, r1, r8, asr #24
   157b8:	andeq	r5, r1, ip, ror #20
   157bc:			; <UNDEFINED> instruction: 0x00015cb4
   157c0:	andeq	r5, r1, ip, ror #20
   157c4:	andeq	r5, r1, ip, ror #20
   157c8:			; <UNDEFINED> instruction: 0x00015cb4
   157cc:	str	r5, [r6, #12]
   157d0:	str	r7, [r6, #16]
   157d4:	ldrb	r3, [r5, #1]
   157d8:	ldr	r2, [sp, #16]
   157dc:	sub	r3, r3, #48	; 0x30
   157e0:	cmp	r2, #0
   157e4:	moveq	r2, #1
   157e8:	str	r2, [sp, #16]
   157ec:	uxtb	r2, r3
   157f0:	cmp	r2, #9
   157f4:	bls	15bd8 <__printf_chk@plt+0x4f28>
   157f8:	ldr	r4, [r6, #20]
   157fc:	cmn	r4, #1
   15800:	beq	15b94 <__printf_chk@plt+0x4ee4>
   15804:	ldr	r3, [sp, #8]
   15808:	ldr	sl, [fp, #4]
   1580c:	cmp	r3, r4
   15810:	bls	15afc <__printf_chk@plt+0x4e4c>
   15814:	ldr	r2, [fp]
   15818:	cmp	r2, r4
   1581c:	bhi	15838 <__printf_chk@plt+0x4b88>
   15820:	sub	r1, sl, #16
   15824:	add	r2, r2, #1
   15828:	cmp	r2, r4
   1582c:	str	r9, [r1, r2, lsl #4]
   15830:	bls	15824 <__printf_chk@plt+0x4b74>
   15834:	str	r2, [fp]
   15838:	ldr	r3, [sl, r4, lsl #4]
   1583c:	cmp	r3, #0
   15840:	bne	15e48 <__printf_chk@plt+0x5198>
   15844:	mov	r3, r7
   15848:	mov	r2, #5
   1584c:	str	r2, [sl, r4, lsl #4]
   15850:	ldrb	r4, [r3], #1
   15854:	mov	r5, r7
   15858:	cmp	r4, #46	; 0x2e
   1585c:	mov	r7, r3
   15860:	bne	1560c <__printf_chk@plt+0x495c>
   15864:	ldrb	r3, [r5, #1]
   15868:	cmp	r3, #42	; 0x2a
   1586c:	bne	15ab4 <__printf_chk@plt+0x4e04>
   15870:	add	r7, r5, #2
   15874:	str	r5, [r6, #24]
   15878:	str	r7, [r6, #28]
   1587c:	ldrb	r1, [r5, #2]
   15880:	ldr	r3, [sp, #28]
   15884:	sub	r1, r1, #48	; 0x30
   15888:	cmp	r3, #2
   1588c:	movcc	r3, #2
   15890:	str	r3, [sp, #28]
   15894:	uxtb	r3, r1
   15898:	cmp	r3, #9
   1589c:	bls	15fc8 <__printf_chk@plt+0x5318>
   158a0:	ldr	r4, [r6, #32]
   158a4:	cmn	r4, #1
   158a8:	beq	15fa8 <__printf_chk@plt+0x52f8>
   158ac:	ldr	r3, [sp, #8]
   158b0:	ldr	sl, [fp, #4]
   158b4:	cmp	r3, r4
   158b8:	bls	15ecc <__printf_chk@plt+0x521c>
   158bc:	ldr	r2, [fp]
   158c0:	cmp	r2, r4
   158c4:	bhi	158e0 <__printf_chk@plt+0x4c30>
   158c8:	sub	r1, sl, #16
   158cc:	add	r2, r2, #1
   158d0:	cmp	r2, r4
   158d4:	str	r9, [r1, r2, lsl #4]
   158d8:	bls	158cc <__printf_chk@plt+0x4c1c>
   158dc:	str	r2, [fp]
   158e0:	ldr	r3, [sl, r4, lsl #4]
   158e4:	cmp	r3, #0
   158e8:	bne	15f2c <__printf_chk@plt+0x527c>
   158ec:	mov	r3, #5
   158f0:	str	r3, [sl, r4, lsl #4]
   158f4:	mov	r5, r7
   158f8:	ldrb	r4, [r7]
   158fc:	b	1560c <__printf_chk@plt+0x495c>
   15900:	mov	r4, #99	; 0x63
   15904:	mov	r3, #14
   15908:	str	r3, [sp, #20]
   1590c:	cmn	r8, #1
   15910:	strne	r8, [r6, #40]	; 0x28
   15914:	beq	15dcc <__printf_chk@plt+0x511c>
   15918:	ldr	r3, [sp, #8]
   1591c:	ldr	sl, [fp, #4]
   15920:	cmp	r3, r8
   15924:	bls	15d70 <__printf_chk@plt+0x50c0>
   15928:	ldr	r3, [fp]
   1592c:	cmp	r3, r8
   15930:	bhi	1594c <__printf_chk@plt+0x4c9c>
   15934:	sub	r1, sl, #16
   15938:	add	r3, r3, #1
   1593c:	cmp	r3, r8
   15940:	str	r9, [r1, r3, lsl #4]
   15944:	bls	15938 <__printf_chk@plt+0x4c88>
   15948:	str	r3, [fp]
   1594c:	ldr	r3, [sl, r8, lsl #4]
   15950:	cmp	r3, #0
   15954:	bne	15d58 <__printf_chk@plt+0x50a8>
   15958:	ldr	r3, [sp, #20]
   1595c:	str	r3, [sl, r8, lsl #4]
   15960:	ldr	r3, [sp, #4]
   15964:	strb	r4, [r6, #36]	; 0x24
   15968:	ldr	r2, [sp, #24]
   1596c:	ldr	r4, [r3]
   15970:	str	r5, [r6, #4]
   15974:	add	r4, r4, #1
   15978:	cmp	r2, r4
   1597c:	str	r4, [r3]
   15980:	ldrhi	r3, [r3, #4]
   15984:	bhi	154b4 <__printf_chk@plt+0x4804>
   15988:	ldr	r3, [sp, #24]
   1598c:	cmp	r3, #0
   15990:	blt	160b0 <__printf_chk@plt+0x5400>
   15994:	ldr	r3, [sp, #24]
   15998:	ldr	r2, [pc, #1872]	; 160f0 <__printf_chk@plt+0x5440>
   1599c:	lsl	r5, r3, #1
   159a0:	cmp	r5, r2
   159a4:	bhi	160b0 <__printf_chk@plt+0x5400>
   159a8:	ldr	r2, [sp, #4]
   159ac:	add	r1, r3, r3, lsl #2
   159b0:	ldr	r6, [r2, #4]
   159b4:	add	r1, r3, r1, lsl #1
   159b8:	ldr	r3, [sp, #36]	; 0x24
   159bc:	lsl	r1, r1, #3
   159c0:	cmp	r3, r6
   159c4:	beq	15b5c <__printf_chk@plt+0x4eac>
   159c8:	mov	r0, r6
   159cc:	bl	10b48 <realloc@plt>
   159d0:	subs	r3, r0, #0
   159d4:	beq	160b0 <__printf_chk@plt+0x5400>
   159d8:	ldr	r2, [sp, #4]
   159dc:	ldm	r2, {r4, r6}
   159e0:	ldr	r2, [sp, #36]	; 0x24
   159e4:	cmp	r2, r6
   159e8:	beq	15b6c <__printf_chk@plt+0x4ebc>
   159ec:	ldr	r2, [sp, #4]
   159f0:	str	r5, [sp, #24]
   159f4:	str	r3, [r2, #4]
   159f8:	b	154b4 <__printf_chk@plt+0x4804>
   159fc:	mov	r2, r7
   15a00:	ldrb	r3, [r2, #1]!
   15a04:	sub	r1, r3, #48	; 0x30
   15a08:	cmp	r1, #9
   15a0c:	bls	15a00 <__printf_chk@plt+0x4d50>
   15a10:	cmp	r3, #36	; 0x24
   15a14:	mvnne	r8, #0
   15a18:	bne	15584 <__printf_chk@plt+0x48d4>
   15a1c:	mov	r2, #0
   15a20:	b	15a2c <__printf_chk@plt+0x4d7c>
   15a24:	cmp	ip, #9
   15a28:	bhi	16038 <__printf_chk@plt+0x5388>
   15a2c:	ldr	r3, [pc, #1728]	; 160f4 <__printf_chk@plt+0x5444>
   15a30:	mov	r1, r5
   15a34:	cmp	r2, r3
   15a38:	addls	r2, r2, r2, lsl #2
   15a3c:	mvnhi	r3, #0
   15a40:	lslls	r3, r2, #1
   15a44:	ldrb	ip, [r5, #1]!
   15a48:	adds	r3, r0, r3
   15a4c:	mov	r2, r3
   15a50:	sub	r0, ip, #48	; 0x30
   15a54:	uxtb	ip, r0
   15a58:	bcc	15a24 <__printf_chk@plt+0x4d74>
   15a5c:	cmp	ip, #9
   15a60:	mvn	r3, #0
   15a64:	mov	r1, r5
   15a68:	bls	15a44 <__printf_chk@plt+0x4d94>
   15a6c:	mov	sl, fp
   15a70:	ldr	fp, [sp, #4]
   15a74:	ldr	r3, [sl, #4]
   15a78:	ldr	r2, [sp, #12]
   15a7c:	cmp	r2, r3
   15a80:	beq	15a8c <__printf_chk@plt+0x4ddc>
   15a84:	mov	r0, r3
   15a88:	bl	10af4 <free@plt>
   15a8c:	ldr	r0, [fp, #4]
   15a90:	ldr	r3, [sp, #36]	; 0x24
   15a94:	cmp	r3, r0
   15a98:	beq	15aa0 <__printf_chk@plt+0x4df0>
   15a9c:	bl	10af4 <free@plt>
   15aa0:	bl	10c2c <__errno_location@plt>
   15aa4:	mov	r3, #22
   15aa8:	mvn	r1, #0
   15aac:	str	r3, [r0]
   15ab0:	b	154e8 <__printf_chk@plt+0x4838>
   15ab4:	str	r5, [r6, #24]
   15ab8:	ldrb	r3, [r5, #1]
   15abc:	sub	r3, r3, #48	; 0x30
   15ac0:	cmp	r3, #9
   15ac4:	bhi	160cc <__printf_chk@plt+0x541c>
   15ac8:	ldrb	r3, [r7, #1]!
   15acc:	sub	r3, r3, #48	; 0x30
   15ad0:	cmp	r3, #9
   15ad4:	bls	15ac8 <__printf_chk@plt+0x4e18>
   15ad8:	sub	r3, r7, r5
   15adc:	mov	r5, r7
   15ae0:	ldr	r2, [sp, #28]
   15ae4:	str	r7, [r6, #28]
   15ae8:	cmp	r2, r3
   15aec:	movcs	r3, r2
   15af0:	ldrb	r4, [r7]
   15af4:	str	r3, [sp, #28]
   15af8:	b	1560c <__printf_chk@plt+0x495c>
   15afc:	ldr	r3, [sp, #8]
   15b00:	lsl	r3, r3, #1
   15b04:	cmp	r3, r4
   15b08:	str	r3, [sp, #8]
   15b0c:	addls	r3, r4, #1
   15b10:	strls	r3, [sp, #8]
   15b14:	ldr	r3, [sp, #8]
   15b18:	cmn	r3, #-268435455	; 0xf0000001
   15b1c:	bhi	160d8 <__printf_chk@plt+0x5428>
   15b20:	ldr	r2, [sp, #12]
   15b24:	lsl	r1, r3, #4
   15b28:	cmp	r2, sl
   15b2c:	beq	15e88 <__printf_chk@plt+0x51d8>
   15b30:	mov	r0, sl
   15b34:	bl	10b48 <realloc@plt>
   15b38:	ldr	r1, [fp, #4]
   15b3c:	subs	sl, r0, #0
   15b40:	beq	160dc <__printf_chk@plt+0x542c>
   15b44:	ldr	r3, [sp, #12]
   15b48:	ldr	r2, [fp]
   15b4c:	cmp	r3, r1
   15b50:	beq	15f70 <__printf_chk@plt+0x52c0>
   15b54:	str	sl, [fp, #4]
   15b58:	b	15818 <__printf_chk@plt+0x4b68>
   15b5c:	mov	r0, r1
   15b60:	bl	10be4 <malloc@plt>
   15b64:	subs	r3, r0, #0
   15b68:	beq	15f84 <__printf_chk@plt+0x52d4>
   15b6c:	add	r2, r4, r4, lsl #2
   15b70:	mov	r0, r3
   15b74:	add	r2, r4, r2, lsl #1
   15b78:	mov	r1, r6
   15b7c:	lsl	r2, r2, #2
   15b80:	bl	10bd8 <memcpy@plt>
   15b84:	ldr	r2, [sp, #4]
   15b88:	ldr	r4, [r2]
   15b8c:	mov	r3, r0
   15b90:	b	159ec <__printf_chk@plt+0x4d3c>
   15b94:	ldr	r3, [sp, #32]
   15b98:	cmn	r3, #1
   15b9c:	str	r3, [r6, #20]
   15ba0:	add	r3, r3, #1
   15ba4:	beq	15a6c <__printf_chk@plt+0x4dbc>
   15ba8:	ldr	r4, [sp, #32]
   15bac:	str	r3, [sp, #32]
   15bb0:	b	15804 <__printf_chk@plt+0x4b54>
   15bb4:	cmp	r3, #15
   15bb8:	movgt	r3, #12
   15bbc:	strgt	r3, [sp, #20]
   15bc0:	bgt	1590c <__printf_chk@plt+0x4c5c>
   15bc4:	tst	r3, #4
   15bc8:	movne	r3, #12
   15bcc:	moveq	r3, #11
   15bd0:	str	r3, [sp, #20]
   15bd4:	b	1590c <__printf_chk@plt+0x4c5c>
   15bd8:	mov	r1, r7
   15bdc:	ldrb	r2, [r1, #1]!
   15be0:	sub	r0, r2, #48	; 0x30
   15be4:	cmp	r0, #9
   15be8:	bls	15bdc <__printf_chk@plt+0x4f2c>
   15bec:	cmp	r2, #36	; 0x24
   15bf0:	bne	157f8 <__printf_chk@plt+0x4b48>
   15bf4:	mov	r1, #0
   15bf8:	b	15c04 <__printf_chk@plt+0x4f54>
   15bfc:	cmp	ip, #9
   15c00:	bhi	16080 <__printf_chk@plt+0x53d0>
   15c04:	ldr	r2, [pc, #1256]	; 160f4 <__printf_chk@plt+0x5444>
   15c08:	mov	r0, r7
   15c0c:	cmp	r1, r2
   15c10:	addls	r1, r1, r1, lsl #2
   15c14:	mvnhi	r2, #0
   15c18:	lslls	r2, r1, #1
   15c1c:	ldrb	ip, [r7, #1]!
   15c20:	adds	r2, r3, r2
   15c24:	mov	r1, r2
   15c28:	sub	r3, ip, #48	; 0x30
   15c2c:	uxtb	ip, r3
   15c30:	bcc	15bfc <__printf_chk@plt+0x4f4c>
   15c34:	cmp	ip, #9
   15c38:	mvn	r2, #0
   15c3c:	mov	r0, r7
   15c40:	bls	15c1c <__printf_chk@plt+0x4f6c>
   15c44:	b	15a6c <__printf_chk@plt+0x4dbc>
   15c48:	cmp	r3, #7
   15c4c:	movgt	r3, #16
   15c50:	movle	r3, #15
   15c54:	str	r3, [sp, #20]
   15c58:	b	1590c <__printf_chk@plt+0x4c5c>
   15c5c:	cmp	r3, #15
   15c60:	bgt	15f58 <__printf_chk@plt+0x52a8>
   15c64:	tst	r3, #4
   15c68:	bne	15f58 <__printf_chk@plt+0x52a8>
   15c6c:	cmp	r3, #7
   15c70:	movgt	r3, #7
   15c74:	strgt	r3, [sp, #20]
   15c78:	bgt	1590c <__printf_chk@plt+0x4c5c>
   15c7c:	tst	r3, #2
   15c80:	movne	r3, #1
   15c84:	strne	r3, [sp, #20]
   15c88:	bne	1590c <__printf_chk@plt+0x4c5c>
   15c8c:	tst	r3, #1
   15c90:	movne	r3, #3
   15c94:	moveq	r3, #5
   15c98:	str	r3, [sp, #20]
   15c9c:	b	1590c <__printf_chk@plt+0x4c5c>
   15ca0:	cmp	r3, #7
   15ca4:	movgt	r3, #14
   15ca8:	movle	r3, #13
   15cac:	str	r3, [sp, #20]
   15cb0:	b	1590c <__printf_chk@plt+0x4c5c>
   15cb4:	cmp	r3, #15
   15cb8:	bgt	15f4c <__printf_chk@plt+0x529c>
   15cbc:	tst	r3, #4
   15cc0:	bne	15f4c <__printf_chk@plt+0x529c>
   15cc4:	cmp	r3, #7
   15cc8:	movgt	r3, #8
   15ccc:	strgt	r3, [sp, #20]
   15cd0:	bgt	1590c <__printf_chk@plt+0x4c5c>
   15cd4:	tst	r3, #2
   15cd8:	movne	r3, #2
   15cdc:	strne	r3, [sp, #20]
   15ce0:	bne	1590c <__printf_chk@plt+0x4c5c>
   15ce4:	tst	r3, #1
   15ce8:	movne	r3, #4
   15cec:	moveq	r3, #6
   15cf0:	str	r3, [sp, #20]
   15cf4:	b	1590c <__printf_chk@plt+0x4c5c>
   15cf8:	mov	r3, #16
   15cfc:	str	r3, [sp, #20]
   15d00:	mov	r4, #115	; 0x73
   15d04:	b	1590c <__printf_chk@plt+0x4c5c>
   15d08:	mov	r3, #17
   15d0c:	str	r3, [sp, #20]
   15d10:	b	1590c <__printf_chk@plt+0x4c5c>
   15d14:	cmp	r3, #15
   15d18:	bgt	15f40 <__printf_chk@plt+0x5290>
   15d1c:	tst	r3, #4
   15d20:	bne	15f40 <__printf_chk@plt+0x5290>
   15d24:	cmp	r3, #7
   15d28:	movgt	r3, #21
   15d2c:	strgt	r3, [sp, #20]
   15d30:	bgt	1590c <__printf_chk@plt+0x4c5c>
   15d34:	tst	r3, #2
   15d38:	movne	r3, #18
   15d3c:	strne	r3, [sp, #20]
   15d40:	bne	1590c <__printf_chk@plt+0x4c5c>
   15d44:	tst	r3, #1
   15d48:	movne	r3, #19
   15d4c:	moveq	r3, #20
   15d50:	str	r3, [sp, #20]
   15d54:	b	1590c <__printf_chk@plt+0x4c5c>
   15d58:	ldr	r2, [sp, #20]
   15d5c:	cmp	r3, r2
   15d60:	beq	15960 <__printf_chk@plt+0x4cb0>
   15d64:	mov	r3, sl
   15d68:	ldr	fp, [sp, #4]
   15d6c:	b	15a78 <__printf_chk@plt+0x4dc8>
   15d70:	ldr	r3, [sp, #8]
   15d74:	lsl	r3, r3, #1
   15d78:	cmp	r3, r8
   15d7c:	str	r3, [sp, #8]
   15d80:	addls	r3, r8, #1
   15d84:	strls	r3, [sp, #8]
   15d88:	ldr	r3, [sp, #8]
   15d8c:	cmn	r3, #-268435455	; 0xf0000001
   15d90:	bhi	160d8 <__printf_chk@plt+0x5428>
   15d94:	ldr	r2, [sp, #12]
   15d98:	lsl	r1, r3, #4
   15d9c:	cmp	r2, sl
   15da0:	beq	15e5c <__printf_chk@plt+0x51ac>
   15da4:	mov	r0, sl
   15da8:	bl	10b48 <realloc@plt>
   15dac:	subs	sl, r0, #0
   15db0:	beq	160b0 <__printf_chk@plt+0x5400>
   15db4:	ldr	r3, [fp, #4]
   15db8:	ldr	r2, [sp, #12]
   15dbc:	cmp	r2, r3
   15dc0:	beq	160e4 <__printf_chk@plt+0x5434>
   15dc4:	str	sl, [fp, #4]
   15dc8:	b	15928 <__printf_chk@plt+0x4c78>
   15dcc:	ldr	r3, [sp, #32]
   15dd0:	cmn	r3, #1
   15dd4:	str	r3, [r6, #40]	; 0x28
   15dd8:	add	r3, r3, #1
   15ddc:	beq	15a6c <__printf_chk@plt+0x4dbc>
   15de0:	ldr	r8, [sp, #32]
   15de4:	str	r3, [sp, #32]
   15de8:	b	15918 <__printf_chk@plt+0x4c68>
   15dec:	str	r5, [r6, #12]
   15df0:	ldrb	r3, [r5]
   15df4:	sub	r3, r3, #48	; 0x30
   15df8:	cmp	r3, #9
   15dfc:	bhi	15e3c <__printf_chk@plt+0x518c>
   15e00:	mov	r7, r5
   15e04:	b	15e0c <__printf_chk@plt+0x515c>
   15e08:	mov	r7, r2
   15e0c:	ldrb	r3, [r7, #1]
   15e10:	add	r2, r7, #1
   15e14:	sub	r3, r3, #48	; 0x30
   15e18:	cmp	r3, #9
   15e1c:	bls	15e08 <__printf_chk@plt+0x5158>
   15e20:	ldr	r3, [sp, #16]
   15e24:	sub	r5, r2, r5
   15e28:	cmp	r3, r5
   15e2c:	movcc	r3, r5
   15e30:	add	r7, r7, #2
   15e34:	mov	r5, r2
   15e38:	str	r3, [sp, #16]
   15e3c:	str	r5, [r6, #16]
   15e40:	ldrb	r4, [r5]
   15e44:	b	15604 <__printf_chk@plt+0x4954>
   15e48:	cmp	r3, #5
   15e4c:	bne	15d64 <__printf_chk@plt+0x50b4>
   15e50:	mov	r5, r7
   15e54:	ldrb	r4, [r7], #1
   15e58:	b	15604 <__printf_chk@plt+0x4954>
   15e5c:	mov	r0, r1
   15e60:	bl	10be4 <malloc@plt>
   15e64:	subs	r3, r0, #0
   15e68:	beq	15e98 <__printf_chk@plt+0x51e8>
   15e6c:	ldr	r2, [fp]
   15e70:	mov	r1, sl
   15e74:	mov	r0, r3
   15e78:	lsl	r2, r2, #4
   15e7c:	bl	10bd8 <memcpy@plt>
   15e80:	mov	sl, r0
   15e84:	b	15dc4 <__printf_chk@plt+0x5114>
   15e88:	mov	r0, r1
   15e8c:	bl	10be4 <malloc@plt>
   15e90:	cmp	r0, #0
   15e94:	bne	15f64 <__printf_chk@plt+0x52b4>
   15e98:	ldr	fp, [sp, #4]
   15e9c:	ldr	r0, [fp, #4]
   15ea0:	ldr	r3, [sp, #36]	; 0x24
   15ea4:	cmp	r3, r0
   15ea8:	beq	15eb0 <__printf_chk@plt+0x5200>
   15eac:	bl	10af4 <free@plt>
   15eb0:	bl	10c2c <__errno_location@plt>
   15eb4:	mov	r3, #12
   15eb8:	mvn	r1, #0
   15ebc:	str	r3, [r0]
   15ec0:	mov	r0, r1
   15ec4:	add	sp, sp, #44	; 0x2c
   15ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ecc:	ldr	r3, [sp, #8]
   15ed0:	lsl	r3, r3, #1
   15ed4:	cmp	r3, r4
   15ed8:	str	r3, [sp, #8]
   15edc:	addls	r3, r4, #1
   15ee0:	strls	r3, [sp, #8]
   15ee4:	ldr	r3, [sp, #8]
   15ee8:	cmn	r3, #-268435455	; 0xf0000001
   15eec:	bhi	160d8 <__printf_chk@plt+0x5428>
   15ef0:	ldr	r2, [sp, #12]
   15ef4:	lsl	r1, r3, #4
   15ef8:	cmp	r2, sl
   15efc:	beq	16050 <__printf_chk@plt+0x53a0>
   15f00:	mov	r0, sl
   15f04:	bl	10b48 <realloc@plt>
   15f08:	ldr	r1, [fp, #4]
   15f0c:	subs	sl, r0, #0
   15f10:	beq	160dc <__printf_chk@plt+0x542c>
   15f14:	ldr	r3, [sp, #12]
   15f18:	ldr	r2, [fp]
   15f1c:	cmp	r3, r1
   15f20:	beq	1606c <__printf_chk@plt+0x53bc>
   15f24:	str	sl, [fp, #4]
   15f28:	b	158c0 <__printf_chk@plt+0x4c10>
   15f2c:	cmp	r3, #5
   15f30:	bne	15d64 <__printf_chk@plt+0x50b4>
   15f34:	ldrb	r4, [r7]
   15f38:	mov	r5, r7
   15f3c:	b	1560c <__printf_chk@plt+0x495c>
   15f40:	mov	r3, #22
   15f44:	str	r3, [sp, #20]
   15f48:	b	1590c <__printf_chk@plt+0x4c5c>
   15f4c:	mov	r3, #10
   15f50:	str	r3, [sp, #20]
   15f54:	b	1590c <__printf_chk@plt+0x4c5c>
   15f58:	mov	r3, #9
   15f5c:	str	r3, [sp, #20]
   15f60:	b	1590c <__printf_chk@plt+0x4c5c>
   15f64:	ldr	r2, [fp]
   15f68:	ldr	r1, [sp, #12]
   15f6c:	mov	sl, r0
   15f70:	lsl	r2, r2, #4
   15f74:	mov	r0, sl
   15f78:	bl	10bd8 <memcpy@plt>
   15f7c:	ldr	r2, [fp]
   15f80:	b	15b54 <__printf_chk@plt+0x4ea4>
   15f84:	mov	sl, fp
   15f88:	ldr	r3, [sp, #12]
   15f8c:	ldr	r1, [sl, #4]
   15f90:	ldr	fp, [sp, #4]
   15f94:	cmp	r3, r1
   15f98:	beq	15eb0 <__printf_chk@plt+0x5200>
   15f9c:	mov	r0, r1
   15fa0:	bl	10af4 <free@plt>
   15fa4:	b	15e9c <__printf_chk@plt+0x51ec>
   15fa8:	ldr	r3, [sp, #32]
   15fac:	cmn	r3, #1
   15fb0:	str	r3, [r6, #32]
   15fb4:	add	r3, r3, #1
   15fb8:	beq	15a6c <__printf_chk@plt+0x4dbc>
   15fbc:	ldr	r4, [sp, #32]
   15fc0:	str	r3, [sp, #32]
   15fc4:	b	158ac <__printf_chk@plt+0x4bfc>
   15fc8:	mov	r2, r7
   15fcc:	ldrb	r3, [r2, #1]!
   15fd0:	sub	r0, r3, #48	; 0x30
   15fd4:	cmp	r0, #9
   15fd8:	bls	15fcc <__printf_chk@plt+0x531c>
   15fdc:	cmp	r3, #36	; 0x24
   15fe0:	bne	158a0 <__printf_chk@plt+0x4bf0>
   15fe4:	mov	r2, #0
   15fe8:	b	15ff4 <__printf_chk@plt+0x5344>
   15fec:	cmp	ip, #9
   15ff0:	bhi	16098 <__printf_chk@plt+0x53e8>
   15ff4:	ldr	r3, [pc, #248]	; 160f4 <__printf_chk@plt+0x5444>
   15ff8:	mov	r0, r7
   15ffc:	cmp	r2, r3
   16000:	addls	r2, r2, r2, lsl #2
   16004:	mvnhi	r3, #0
   16008:	lslls	r3, r2, #1
   1600c:	ldrb	ip, [r7, #1]!
   16010:	adds	r3, r1, r3
   16014:	mov	r2, r3
   16018:	sub	r1, ip, #48	; 0x30
   1601c:	uxtb	ip, r1
   16020:	bcc	15fec <__printf_chk@plt+0x533c>
   16024:	cmp	ip, #9
   16028:	mvn	r3, #0
   1602c:	mov	r0, r7
   16030:	bls	1600c <__printf_chk@plt+0x535c>
   16034:	b	15a6c <__printf_chk@plt+0x4dbc>
   16038:	sub	r8, r3, #1
   1603c:	cmn	r8, #3
   16040:	bhi	15a6c <__printf_chk@plt+0x4dbc>
   16044:	add	r5, r1, #2
   16048:	ldrb	r4, [r1, #2]
   1604c:	b	15584 <__printf_chk@plt+0x48d4>
   16050:	mov	r0, r1
   16054:	bl	10be4 <malloc@plt>
   16058:	cmp	r0, #0
   1605c:	beq	15e98 <__printf_chk@plt+0x51e8>
   16060:	ldr	r2, [fp]
   16064:	ldr	r1, [sp, #12]
   16068:	mov	sl, r0
   1606c:	lsl	r2, r2, #4
   16070:	mov	r0, sl
   16074:	bl	10bd8 <memcpy@plt>
   16078:	ldr	r2, [fp]
   1607c:	b	15f24 <__printf_chk@plt+0x5274>
   16080:	sub	r4, r2, #1
   16084:	cmn	r4, #3
   16088:	bhi	15a6c <__printf_chk@plt+0x4dbc>
   1608c:	str	r4, [r6, #20]
   16090:	add	r7, r0, #2
   16094:	b	15804 <__printf_chk@plt+0x4b54>
   16098:	sub	r4, r3, #1
   1609c:	cmn	r4, #3
   160a0:	bhi	15a6c <__printf_chk@plt+0x4dbc>
   160a4:	str	r4, [r6, #32]
   160a8:	add	r7, r0, #2
   160ac:	b	158ac <__printf_chk@plt+0x4bfc>
   160b0:	mov	sl, fp
   160b4:	ldr	fp, [sp, #4]
   160b8:	ldr	r1, [sl, #4]
   160bc:	ldr	r3, [sp, #12]
   160c0:	cmp	r3, r1
   160c4:	bne	15f9c <__printf_chk@plt+0x52ec>
   160c8:	b	15e9c <__printf_chk@plt+0x51ec>
   160cc:	mov	r5, r7
   160d0:	mov	r3, #1
   160d4:	b	15ae0 <__printf_chk@plt+0x4e30>
   160d8:	mov	r1, sl
   160dc:	ldr	fp, [sp, #4]
   160e0:	b	160bc <__printf_chk@plt+0x540c>
   160e4:	mov	r3, sl
   160e8:	mov	sl, r2
   160ec:	b	15e6c <__printf_chk@plt+0x51bc>
   160f0:	ldrbeq	r7, [r1, #1117]	; 0x45d
   160f4:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   160f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   160fc:	mov	r7, r0
   16100:	ldr	r6, [pc, #72]	; 16150 <__printf_chk@plt+0x54a0>
   16104:	ldr	r5, [pc, #72]	; 16154 <__printf_chk@plt+0x54a4>
   16108:	add	r6, pc, r6
   1610c:	add	r5, pc, r5
   16110:	sub	r6, r6, r5
   16114:	mov	r8, r1
   16118:	mov	r9, r2
   1611c:	bl	10ac8 <__aeabi_atexit@plt-0x20>
   16120:	asrs	r6, r6, #2
   16124:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16128:	mov	r4, #0
   1612c:	add	r4, r4, #1
   16130:	ldr	r3, [r5], #4
   16134:	mov	r2, r9
   16138:	mov	r1, r8
   1613c:	mov	r0, r7
   16140:	blx	r3
   16144:	cmp	r6, r4
   16148:	bne	1612c <__printf_chk@plt+0x547c>
   1614c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16150:	andeq	r0, r1, r4, lsr #26
   16154:	andeq	r0, r1, ip, lsl #26
   16158:	bx	lr

Disassembly of section .fini:

0001615c <.fini>:
   1615c:	push	{r3, lr}
   16160:	pop	{r3, pc}
