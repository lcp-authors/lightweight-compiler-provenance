
raspbian-preinstalled/utmpdump:     file format elf32-littlearm


Disassembly of section .init:

00010ea8 <.init>:
   10ea8:	push	{r3, lr}
   10eac:	bl	11738 <ftello64@plt+0x570>
   10eb0:	pop	{r3, pc}

Disassembly of section .plt:

00010eb4 <raise@plt-0x14>:
   10eb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10eb8:	ldr	lr, [pc, #4]	; 10ec4 <raise@plt-0x4>
   10ebc:	add	lr, pc, lr
   10ec0:	ldr	pc, [lr, #8]!
   10ec4:	andeq	r3, r1, r0, lsr #32

00010ec8 <raise@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #77824	; 0x13000
   10ed0:	ldr	pc, [ip, #32]!

00010ed4 <gmtime_r@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #77824	; 0x13000
   10edc:	ldr	pc, [ip, #24]!

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #77824	; 0x13000
   10ee8:	ldr	pc, [ip, #16]!

00010eec <strtol@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #77824	; 0x13000
   10ef4:	ldr	pc, [ip, #8]!

00010ef8 <read@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #77824	; 0x13000
   10f00:	ldr	pc, [ip, #0]!

00010f04 <mktime@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #4088]!	; 0xff8

00010f10 <free@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #4080]!	; 0xff0

00010f1c <fgets@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #4072]!	; 0xfe8

00010f28 <ferror@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #4064]!	; 0xfe0

00010f34 <strndup@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #4056]!	; 0xfd8

00010f40 <inet_pton@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #4048]!	; 0xfd0

00010f4c <_exit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #73728	; 0x12000
   10f54:	ldr	pc, [ip, #4040]!	; 0xfc8

00010f58 <time@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #73728	; 0x12000
   10f60:	ldr	pc, [ip, #4032]!	; 0xfc0

00010f64 <sleep@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #73728	; 0x12000
   10f6c:	ldr	pc, [ip, #4024]!	; 0xfb8

00010f70 <dcgettext@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #73728	; 0x12000
   10f78:	ldr	pc, [ip, #4016]!	; 0xfb0

00010f7c <__stack_chk_fail@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #73728	; 0x12000
   10f84:	ldr	pc, [ip, #4008]!	; 0xfa8

00010f88 <strptime@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #73728	; 0x12000
   10f90:	ldr	pc, [ip, #4000]!	; 0xfa0

00010f94 <localtime_r@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #73728	; 0x12000
   10f9c:	ldr	pc, [ip, #3992]!	; 0xf98

00010fa0 <textdomain@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #73728	; 0x12000
   10fa8:	ldr	pc, [ip, #3984]!	; 0xf90

00010fac <err@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #73728	; 0x12000
   10fb4:	ldr	pc, [ip, #3976]!	; 0xf88

00010fb8 <__fxstat64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #73728	; 0x12000
   10fc0:	ldr	pc, [ip, #3968]!	; 0xf80

00010fc4 <fwrite@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #73728	; 0x12000
   10fcc:	ldr	pc, [ip, #3960]!	; 0xf78

00010fd0 <strtoll@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #73728	; 0x12000
   10fd8:	ldr	pc, [ip, #3952]!	; 0xf70

00010fdc <gettimeofday@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #73728	; 0x12000
   10fe4:	ldr	pc, [ip, #3944]!	; 0xf68

00010fe8 <fread@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #73728	; 0x12000
   10ff0:	ldr	pc, [ip, #3936]!	; 0xf60

00010ff4 <__fpending@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #73728	; 0x12000
   10ffc:	ldr	pc, [ip, #3928]!	; 0xf58

00011000 <malloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #73728	; 0x12000
   11008:	ldr	pc, [ip, #3920]!	; 0xf50

0001100c <__libc_start_main@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #73728	; 0x12000
   11014:	ldr	pc, [ip, #3912]!	; 0xf48

00011018 <strftime@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #73728	; 0x12000
   11020:	ldr	pc, [ip, #3904]!	; 0xf40

00011024 <__gmon_start__@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #73728	; 0x12000
   1102c:	ldr	pc, [ip, #3896]!	; 0xf38

00011030 <getopt_long@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #73728	; 0x12000
   11038:	ldr	pc, [ip, #3888]!	; 0xf30

0001103c <__ctype_b_loc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #73728	; 0x12000
   11044:	ldr	pc, [ip, #3880]!	; 0xf28

00011048 <exit@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #73728	; 0x12000
   11050:	ldr	pc, [ip, #3872]!	; 0xf20

00011054 <strlen@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #73728	; 0x12000
   1105c:	ldr	pc, [ip, #3864]!	; 0xf18

00011060 <inotify_init@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #73728	; 0x12000
   11068:	ldr	pc, [ip, #3856]!	; 0xf10

0001106c <strchr@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #73728	; 0x12000
   11074:	ldr	pc, [ip, #3848]!	; 0xf08

00011078 <warnx@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #73728	; 0x12000
   11080:	ldr	pc, [ip, #3840]!	; 0xf00

00011084 <inotify_add_watch@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #73728	; 0x12000
   1108c:	ldr	pc, [ip, #3832]!	; 0xef8

00011090 <__errno_location@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #73728	; 0x12000
   11098:	ldr	pc, [ip, #3824]!	; 0xef0

0001109c <strncasecmp@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #73728	; 0x12000
   110a4:	ldr	pc, [ip, #3816]!	; 0xee8

000110a8 <__cxa_atexit@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #73728	; 0x12000
   110b0:	ldr	pc, [ip, #3808]!	; 0xee0

000110b4 <memset@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #73728	; 0x12000
   110bc:	ldr	pc, [ip, #3800]!	; 0xed8

000110c0 <strncpy@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #73728	; 0x12000
   110c8:	ldr	pc, [ip, #3792]!	; 0xed0

000110cc <__printf_chk@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #73728	; 0x12000
   110d4:	ldr	pc, [ip, #3784]!	; 0xec8

000110d8 <fileno@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #73728	; 0x12000
   110e0:	ldr	pc, [ip, #3776]!	; 0xec0

000110e4 <__fprintf_chk@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #73728	; 0x12000
   110ec:	ldr	pc, [ip, #3768]!	; 0xeb8

000110f0 <fclose@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #73728	; 0x12000
   110f8:	ldr	pc, [ip, #3760]!	; 0xeb0

000110fc <setlocale@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #73728	; 0x12000
   11104:	ldr	pc, [ip, #3752]!	; 0xea8

00011108 <errx@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #73728	; 0x12000
   11110:	ldr	pc, [ip, #3744]!	; 0xea0

00011114 <warn@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #73728	; 0x12000
   1111c:	ldr	pc, [ip, #3736]!	; 0xe98

00011120 <fputc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #73728	; 0x12000
   11128:	ldr	pc, [ip, #3728]!	; 0xe90

0001112c <sscanf@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #73728	; 0x12000
   11134:	ldr	pc, [ip, #3720]!	; 0xe88

00011138 <timegm@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #73728	; 0x12000
   11140:	ldr	pc, [ip, #3712]!	; 0xe80

00011144 <fopen64@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #73728	; 0x12000
   1114c:	ldr	pc, [ip, #3704]!	; 0xe78

00011150 <inet_ntop@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #73728	; 0x12000
   11158:	ldr	pc, [ip, #3696]!	; 0xe70

0001115c <bindtextdomain@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #73728	; 0x12000
   11164:	ldr	pc, [ip, #3688]!	; 0xe68

00011168 <fseek@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #73728	; 0x12000
   11170:	ldr	pc, [ip, #3680]!	; 0xe60

00011174 <fputs@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #73728	; 0x12000
   1117c:	ldr	pc, [ip, #3672]!	; 0xe58

00011180 <strncmp@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #73728	; 0x12000
   11188:	ldr	pc, [ip, #3664]!	; 0xe50

0001118c <abort@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #73728	; 0x12000
   11194:	ldr	pc, [ip, #3656]!	; 0xe48

00011198 <close@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #73728	; 0x12000
   111a0:	ldr	pc, [ip, #3648]!	; 0xe40

000111a4 <__snprintf_chk@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #73728	; 0x12000
   111ac:	ldr	pc, [ip, #3640]!	; 0xe38

000111b0 <strspn@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #73728	; 0x12000
   111b8:	ldr	pc, [ip, #3632]!	; 0xe30

000111bc <__assert_fail@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #73728	; 0x12000
   111c4:	ldr	pc, [ip, #3624]!	; 0xe28

000111c8 <ftello64@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #73728	; 0x12000
   111d0:	ldr	pc, [ip, #3616]!	; 0xe20

Disassembly of section .text:

000111d4 <.text>:
   111d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111d8:	mov	r5, r0
   111dc:	sub	sp, sp, #12
   111e0:	mov	r6, r1
   111e4:	mov	r0, #6
   111e8:	ldr	r1, [pc, #1144]	; 11668 <ftello64@plt+0x4a0>
   111ec:	bl	110fc <setlocale@plt>
   111f0:	ldr	r1, [pc, #1140]	; 1166c <ftello64@plt+0x4a4>
   111f4:	ldr	r0, [pc, #1140]	; 11670 <ftello64@plt+0x4a8>
   111f8:	bl	1115c <bindtextdomain@plt>
   111fc:	ldr	r0, [pc, #1132]	; 11670 <ftello64@plt+0x4a8>
   11200:	bl	10fa0 <textdomain@plt>
   11204:	ldr	r0, [pc, #1128]	; 11674 <ftello64@plt+0x4ac>
   11208:	bl	13174 <ftello64@plt+0x1fac>
   1120c:	mov	r4, #0
   11210:	ldr	r8, [pc, #1120]	; 11678 <ftello64@plt+0x4b0>
   11214:	ldr	r7, [pc, #1120]	; 1167c <ftello64@plt+0x4b4>
   11218:	mov	fp, r4
   1121c:	mov	sl, r4
   11220:	mov	r9, r4
   11224:	str	r9, [sp]
   11228:	mov	r3, r8
   1122c:	mov	r2, r7
   11230:	mov	r1, r6
   11234:	mov	r0, r5
   11238:	bl	11030 <getopt_long@plt>
   1123c:	cmn	r0, #1
   11240:	beq	11344 <ftello64@plt+0x17c>
   11244:	sub	r0, r0, #86	; 0x56
   11248:	cmp	r0, #28
   1124c:	ldrls	pc, [pc, r0, lsl #2]
   11250:	b	115ac <ftello64@plt+0x3e4>
   11254:	andeq	r1, r1, r0, lsl r3
   11258:	andeq	r1, r1, ip, lsr #11
   1125c:	andeq	r1, r1, ip, lsr #11
   11260:	andeq	r1, r1, ip, lsr #11
   11264:	andeq	r1, r1, ip, lsr #11
   11268:	andeq	r1, r1, ip, lsr #11
   1126c:	andeq	r1, r1, ip, lsr #11
   11270:	andeq	r1, r1, ip, lsr #11
   11274:	andeq	r1, r1, ip, lsr #11
   11278:	andeq	r1, r1, ip, lsr #11
   1127c:	andeq	r1, r1, ip, lsr #11
   11280:	andeq	r1, r1, ip, lsr #11
   11284:	andeq	r1, r1, ip, lsr #11
   11288:	andeq	r1, r1, ip, lsr #11
   1128c:	andeq	r1, r1, ip, lsr #11
   11290:	andeq	r1, r1, ip, lsr #11
   11294:	andeq	r1, r1, r8, lsl #6
   11298:	andeq	r1, r1, ip, lsr #11
   1129c:	andeq	r1, r1, r4, ror r4
   112a0:	andeq	r1, r1, ip, lsr #11
   112a4:	andeq	r1, r1, ip, lsr #11
   112a8:	andeq	r1, r1, ip, lsr #11
   112ac:	andeq	r1, r1, ip, lsr #11
   112b0:	andeq	r1, r1, ip, lsr #11
   112b4:	andeq	r1, r1, ip, lsr #11
   112b8:	ldrdeq	r1, [r1], -r0
   112bc:	andeq	r1, r1, ip, lsr #11
   112c0:	andeq	r1, r1, ip, lsr #11
   112c4:	andeq	r1, r1, r8, asr #5
   112c8:	mov	fp, #1
   112cc:	b	11224 <ftello64@plt+0x5c>
   112d0:	ldr	r3, [pc, #936]	; 11680 <ftello64@plt+0x4b8>
   112d4:	ldr	r1, [pc, #936]	; 11684 <ftello64@plt+0x4bc>
   112d8:	ldr	r0, [r3]
   112dc:	bl	11144 <fopen64@plt>
   112e0:	subs	sl, r0, #0
   112e4:	bne	11224 <ftello64@plt+0x5c>
   112e8:	mov	r2, #5
   112ec:	ldr	r1, [pc, #916]	; 11688 <ftello64@plt+0x4c0>
   112f0:	bl	10f70 <dcgettext@plt>
   112f4:	ldr	r3, [pc, #900]	; 11680 <ftello64@plt+0x4b8>
   112f8:	ldr	r2, [r3]
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	bl	10fac <err@plt>
   11308:	mov	r4, #1
   1130c:	b	11224 <ftello64@plt+0x5c>
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #880]	; 1168c <ftello64@plt+0x4c4>
   11318:	mov	r0, #0
   1131c:	bl	10f70 <dcgettext@plt>
   11320:	ldr	r2, [pc, #872]	; 11690 <ftello64@plt+0x4c8>
   11324:	ldr	r3, [pc, #872]	; 11694 <ftello64@plt+0x4cc>
   11328:	ldr	r2, [r2]
   1132c:	mov	r1, r0
   11330:	mov	r0, #1
   11334:	bl	110cc <__printf_chk@plt>
   11338:	mov	r0, #0
   1133c:	add	sp, sp, #12
   11340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11344:	cmp	sl, #0
   11348:	ldreq	r3, [pc, #840]	; 11698 <ftello64@plt+0x4d0>
   1134c:	ldreq	sl, [r3]
   11350:	ldr	r3, [pc, #836]	; 1169c <ftello64@plt+0x4d4>
   11354:	ldr	r3, [r3]
   11358:	cmp	r3, r5
   1135c:	blt	115e4 <ftello64@plt+0x41c>
   11360:	cmp	r4, #0
   11364:	bne	1164c <ftello64@plt+0x484>
   11368:	ldr	r3, [pc, #816]	; 116a0 <ftello64@plt+0x4d8>
   1136c:	ldr	r6, [pc, #816]	; 116a4 <ftello64@plt+0x4dc>
   11370:	ldr	r5, [r3]
   11374:	ldr	r3, [pc, #812]	; 116a8 <ftello64@plt+0x4e0>
   11378:	cmp	fp, #0
   1137c:	ldr	r7, [r3]
   11380:	bne	11440 <ftello64@plt+0x278>
   11384:	mov	r2, #5
   11388:	ldr	r1, [pc, #796]	; 116ac <ftello64@plt+0x4e4>
   1138c:	mov	r0, fp
   11390:	bl	10f70 <dcgettext@plt>
   11394:	mov	r3, r6
   11398:	mov	r1, #1
   1139c:	mov	r2, r0
   113a0:	mov	r0, r7
   113a4:	bl	110e4 <__fprintf_chk@plt>
   113a8:	mov	r0, r5
   113ac:	mov	r3, sl
   113b0:	mov	r2, r4
   113b4:	mov	r1, r6
   113b8:	bl	11a58 <ftello64@plt+0x890>
   113bc:	mov	r5, r0
   113c0:	ldr	r3, [pc, #720]	; 11698 <ftello64@plt+0x4d0>
   113c4:	ldr	r3, [r3]
   113c8:	cmp	r3, sl
   113cc:	beq	1141c <ftello64@plt+0x254>
   113d0:	mov	r0, sl
   113d4:	bl	10ff4 <__fpending@plt>
   113d8:	mov	r7, r0
   113dc:	mov	r0, sl
   113e0:	bl	10f28 <ferror@plt>
   113e4:	mov	r6, r0
   113e8:	mov	r0, sl
   113ec:	bl	110f0 <fclose@plt>
   113f0:	cmp	r6, #0
   113f4:	mov	r4, r0
   113f8:	bne	11618 <ftello64@plt+0x450>
   113fc:	cmp	r0, #0
   11400:	beq	1141c <ftello64@plt+0x254>
   11404:	cmp	r7, #0
   11408:	bne	11630 <ftello64@plt+0x468>
   1140c:	bl	11090 <__errno_location@plt>
   11410:	ldr	r3, [r0]
   11414:	cmp	r3, #9
   11418:	bne	11630 <ftello64@plt+0x468>
   1141c:	cmp	r5, #0
   11420:	beq	11338 <ftello64@plt+0x170>
   11424:	ldr	r3, [pc, #628]	; 116a0 <ftello64@plt+0x4d8>
   11428:	ldr	r3, [r3]
   1142c:	cmp	r3, r5
   11430:	beq	11338 <ftello64@plt+0x170>
   11434:	mov	r0, r5
   11438:	bl	110f0 <fclose@plt>
   1143c:	b	11338 <ftello64@plt+0x170>
   11440:	mov	r2, #5
   11444:	ldr	r1, [pc, #612]	; 116b0 <ftello64@plt+0x4e8>
   11448:	mov	r0, #0
   1144c:	bl	10f70 <dcgettext@plt>
   11450:	mov	r3, r6
   11454:	mov	r1, #1
   11458:	mov	r2, r0
   1145c:	mov	r0, r7
   11460:	bl	110e4 <__fprintf_chk@plt>
   11464:	mov	r1, sl
   11468:	mov	r0, r5
   1146c:	bl	11d34 <ftello64@plt+0xb6c>
   11470:	b	113c0 <ftello64@plt+0x1f8>
   11474:	ldr	r3, [pc, #540]	; 11698 <ftello64@plt+0x4d0>
   11478:	mov	r2, #5
   1147c:	ldr	r1, [pc, #560]	; 116b4 <ftello64@plt+0x4ec>
   11480:	ldr	r4, [r3]
   11484:	mov	r0, #0
   11488:	bl	10f70 <dcgettext@plt>
   1148c:	mov	r1, r4
   11490:	bl	11174 <fputs@plt>
   11494:	mov	r2, #5
   11498:	ldr	r1, [pc, #536]	; 116b8 <ftello64@plt+0x4f0>
   1149c:	mov	r0, #0
   114a0:	bl	10f70 <dcgettext@plt>
   114a4:	ldr	r3, [pc, #484]	; 11690 <ftello64@plt+0x4c8>
   114a8:	mov	r1, #1
   114ac:	ldr	r3, [r3]
   114b0:	mov	r2, r0
   114b4:	mov	r0, r4
   114b8:	bl	110e4 <__fprintf_chk@plt>
   114bc:	mov	r1, r4
   114c0:	mov	r0, #10
   114c4:	bl	11120 <fputc@plt>
   114c8:	mov	r2, #5
   114cc:	ldr	r1, [pc, #488]	; 116bc <ftello64@plt+0x4f4>
   114d0:	mov	r0, #0
   114d4:	bl	10f70 <dcgettext@plt>
   114d8:	mov	r1, r4
   114dc:	bl	11174 <fputs@plt>
   114e0:	mov	r2, #5
   114e4:	ldr	r1, [pc, #468]	; 116c0 <ftello64@plt+0x4f8>
   114e8:	mov	r0, #0
   114ec:	bl	10f70 <dcgettext@plt>
   114f0:	mov	r1, r4
   114f4:	bl	11174 <fputs@plt>
   114f8:	mov	r2, #5
   114fc:	ldr	r1, [pc, #448]	; 116c4 <ftello64@plt+0x4fc>
   11500:	mov	r0, #0
   11504:	bl	10f70 <dcgettext@plt>
   11508:	mov	r1, r4
   1150c:	bl	11174 <fputs@plt>
   11510:	mov	r2, #5
   11514:	ldr	r1, [pc, #428]	; 116c8 <ftello64@plt+0x500>
   11518:	mov	r0, #0
   1151c:	bl	10f70 <dcgettext@plt>
   11520:	mov	r1, r4
   11524:	bl	11174 <fputs@plt>
   11528:	mov	r2, #5
   1152c:	ldr	r1, [pc, #408]	; 116cc <ftello64@plt+0x504>
   11530:	mov	r0, #0
   11534:	bl	10f70 <dcgettext@plt>
   11538:	mov	r1, r4
   1153c:	bl	11174 <fputs@plt>
   11540:	mov	r2, #5
   11544:	ldr	r1, [pc, #388]	; 116d0 <ftello64@plt+0x508>
   11548:	mov	r0, #0
   1154c:	bl	10f70 <dcgettext@plt>
   11550:	mov	r2, #5
   11554:	ldr	r1, [pc, #376]	; 116d4 <ftello64@plt+0x50c>
   11558:	mov	r4, r0
   1155c:	mov	r0, #0
   11560:	bl	10f70 <dcgettext@plt>
   11564:	ldr	r2, [pc, #364]	; 116d8 <ftello64@plt+0x510>
   11568:	mov	r3, r4
   1156c:	str	r2, [sp]
   11570:	ldr	r1, [pc, #356]	; 116dc <ftello64@plt+0x514>
   11574:	ldr	r2, [pc, #356]	; 116e0 <ftello64@plt+0x518>
   11578:	str	r0, [sp, #4]
   1157c:	mov	r0, #1
   11580:	bl	110cc <__printf_chk@plt>
   11584:	mov	r2, #5
   11588:	ldr	r1, [pc, #340]	; 116e4 <ftello64@plt+0x51c>
   1158c:	mov	r0, #0
   11590:	bl	10f70 <dcgettext@plt>
   11594:	ldr	r2, [pc, #332]	; 116e8 <ftello64@plt+0x520>
   11598:	mov	r1, r0
   1159c:	mov	r0, #1
   115a0:	bl	110cc <__printf_chk@plt>
   115a4:	mov	r0, #0
   115a8:	bl	11048 <exit@plt>
   115ac:	ldr	r3, [pc, #244]	; 116a8 <ftello64@plt+0x4e0>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #304]	; 116ec <ftello64@plt+0x524>
   115b8:	mov	r0, #0
   115bc:	ldr	r4, [r3]
   115c0:	bl	10f70 <dcgettext@plt>
   115c4:	ldr	r3, [pc, #196]	; 11690 <ftello64@plt+0x4c8>
   115c8:	mov	r1, #1
   115cc:	ldr	r3, [r3]
   115d0:	mov	r2, r0
   115d4:	mov	r0, r4
   115d8:	bl	110e4 <__fprintf_chk@plt>
   115dc:	mov	r0, #1
   115e0:	bl	11048 <exit@plt>
   115e4:	ldr	r6, [r6, r3, lsl #2]
   115e8:	ldr	r1, [pc, #256]	; 116f0 <ftello64@plt+0x528>
   115ec:	mov	r0, r6
   115f0:	bl	11144 <fopen64@plt>
   115f4:	subs	r5, r0, #0
   115f8:	bne	11374 <ftello64@plt+0x1ac>
   115fc:	mov	r2, #5
   11600:	ldr	r1, [pc, #128]	; 11688 <ftello64@plt+0x4c0>
   11604:	bl	10f70 <dcgettext@plt>
   11608:	mov	r2, r6
   1160c:	mov	r1, r0
   11610:	mov	r0, #1
   11614:	bl	10fac <err@plt>
   11618:	cmp	r0, #0
   1161c:	bne	11630 <ftello64@plt+0x468>
   11620:	bl	11090 <__errno_location@plt>
   11624:	ldr	r3, [r0]
   11628:	cmp	r3, #32
   1162c:	strne	r4, [r0]
   11630:	ldr	r1, [pc, #188]	; 116f4 <ftello64@plt+0x52c>
   11634:	mov	r2, #5
   11638:	mov	r0, #0
   1163c:	bl	10f70 <dcgettext@plt>
   11640:	mov	r1, r0
   11644:	mov	r0, #1
   11648:	bl	10fac <err@plt>
   1164c:	ldr	r1, [pc, #164]	; 116f8 <ftello64@plt+0x530>
   11650:	mov	r2, #5
   11654:	mov	r0, #0
   11658:	bl	10f70 <dcgettext@plt>
   1165c:	mov	r1, r0
   11660:	mov	r0, #1
   11664:	bl	11108 <errx@plt>
   11668:	andeq	r3, r1, r8, lsr #7
   1166c:	andeq	r3, r1, r4, lsr r3
   11670:	andeq	r3, r1, r8, asr #6
   11674:	andeq	r1, r1, r0, ror #30
   11678:	muleq	r1, r8, r1
   1167c:	andeq	r3, r1, ip, lsr r5
   11680:	andeq	r4, r2, r8, lsr #32
   11684:	andeq	r3, r1, r4, asr r3
   11688:	andeq	r3, r1, r4, lsr #5
   1168c:	strdeq	r3, [r1], -r4
   11690:	andeq	r4, r2, r8
   11694:	andeq	r3, r1, r0, lsl #10
   11698:	andeq	r4, r2, r4, lsr #32
   1169c:	andeq	r4, r2, r0, lsl r0
   116a0:	andeq	r4, r2, r0, lsr #32
   116a4:	andeq	r3, r1, r8, lsr #6
   116a8:	andeq	r4, r2, r8, lsl r0
   116ac:	andeq	r3, r1, r0, lsl #11
   116b0:	andeq	r3, r1, ip, ror #10
   116b4:	andeq	r3, r1, r8, asr r3
   116b8:	andeq	r3, r1, r4, ror #6
   116bc:	andeq	r3, r1, r0, lsl #7
   116c0:	andeq	r3, r1, ip, lsr #7
   116c4:			; <UNDEFINED> instruction: 0x000133b8
   116c8:	strdeq	r3, [r1], -r8
   116cc:	andeq	r3, r1, r8, lsr r4
   116d0:	andeq	r3, r1, r8, ror r4
   116d4:	andeq	r3, r1, ip, lsl #9
   116d8:			; <UNDEFINED> instruction: 0x000134bc
   116dc:	andeq	r3, r1, r8, lsr #9
   116e0:	muleq	r1, ip, r4
   116e4:	andeq	r3, r1, ip, asr #9
   116e8:	andeq	r3, r1, r8, ror #9
   116ec:	andeq	r3, r1, r4, lsl r5
   116f0:	andeq	r3, r1, r0, lsr #5
   116f4:	muleq	r1, r4, r5
   116f8:	andeq	r3, r1, r4, asr #10
   116fc:	mov	fp, #0
   11700:	mov	lr, #0
   11704:	pop	{r1}		; (ldr r1, [sp], #4)
   11708:	mov	r2, sp
   1170c:	push	{r2}		; (str r2, [sp, #-4]!)
   11710:	push	{r0}		; (str r0, [sp, #-4]!)
   11714:	ldr	ip, [pc, #16]	; 1172c <ftello64@plt+0x564>
   11718:	push	{ip}		; (str ip, [sp, #-4]!)
   1171c:	ldr	r0, [pc, #12]	; 11730 <ftello64@plt+0x568>
   11720:	ldr	r3, [pc, #12]	; 11734 <ftello64@plt+0x56c>
   11724:	bl	1100c <__libc_start_main@plt>
   11728:	bl	1118c <abort@plt>
   1172c:	andeq	r3, r1, r0, ror r1
   11730:	ldrdeq	r1, [r1], -r4
   11734:	andeq	r3, r1, r0, lsl r1
   11738:	ldr	r3, [pc, #20]	; 11754 <ftello64@plt+0x58c>
   1173c:	ldr	r2, [pc, #20]	; 11758 <ftello64@plt+0x590>
   11740:	add	r3, pc, r3
   11744:	ldr	r2, [r3, r2]
   11748:	cmp	r2, #0
   1174c:	bxeq	lr
   11750:	b	11024 <__gmon_start__@plt>
   11754:	muleq	r1, ip, r7
   11758:	andeq	r0, r0, r4, lsl r1
   1175c:	ldr	r0, [pc, #24]	; 1177c <ftello64@plt+0x5b4>
   11760:	ldr	r3, [pc, #24]	; 11780 <ftello64@plt+0x5b8>
   11764:	cmp	r3, r0
   11768:	bxeq	lr
   1176c:	ldr	r3, [pc, #16]	; 11784 <ftello64@plt+0x5bc>
   11770:	cmp	r3, #0
   11774:	bxeq	lr
   11778:	bx	r3
   1177c:	andeq	r4, r2, r8
   11780:	andeq	r4, r2, r8
   11784:	andeq	r0, r0, r0
   11788:	ldr	r0, [pc, #36]	; 117b4 <ftello64@plt+0x5ec>
   1178c:	ldr	r1, [pc, #36]	; 117b8 <ftello64@plt+0x5f0>
   11790:	sub	r1, r1, r0
   11794:	asr	r1, r1, #2
   11798:	add	r1, r1, r1, lsr #31
   1179c:	asrs	r1, r1, #1
   117a0:	bxeq	lr
   117a4:	ldr	r3, [pc, #16]	; 117bc <ftello64@plt+0x5f4>
   117a8:	cmp	r3, #0
   117ac:	bxeq	lr
   117b0:	bx	r3
   117b4:	andeq	r4, r2, r8
   117b8:	andeq	r4, r2, r8
   117bc:	andeq	r0, r0, r0
   117c0:	push	{r4, lr}
   117c4:	ldr	r4, [pc, #24]	; 117e4 <ftello64@plt+0x61c>
   117c8:	ldrb	r3, [r4]
   117cc:	cmp	r3, #0
   117d0:	popne	{r4, pc}
   117d4:	bl	1175c <ftello64@plt+0x594>
   117d8:	mov	r3, #1
   117dc:	strb	r3, [r4]
   117e0:	pop	{r4, pc}
   117e4:	andeq	r4, r2, ip, lsr #32
   117e8:	b	11788 <ftello64@plt+0x5c0>
   117ec:	push	{r4, r5, r6, r7, r8, lr}
   117f0:	mov	r7, r1
   117f4:	mov	r1, #91	; 0x5b
   117f8:	mov	r4, r0
   117fc:	mov	r8, r2
   11800:	mov	r6, r3
   11804:	bl	1106c <strchr@plt>
   11808:	subs	r5, r0, r4
   1180c:	bmi	1186c <ftello64@plt+0x6a4>
   11810:	add	r3, r5, #1
   11814:	add	r4, r4, r3
   11818:	mov	r0, r4
   1181c:	mov	r1, #93	; 0x5d
   11820:	bl	1106c <strchr@plt>
   11824:	subs	r0, r0, r4
   11828:	bmi	1186c <ftello64@plt+0x6a4>
   1182c:	cmp	r6, #0
   11830:	mov	r6, #0
   11834:	add	r5, r5, r0
   11838:	strb	r6, [r4, r0]
   1183c:	beq	11854 <ftello64@plt+0x68c>
   11840:	mov	r1, #32
   11844:	mov	r0, r4
   11848:	bl	1106c <strchr@plt>
   1184c:	cmp	r0, #0
   11850:	strbne	r6, [r0]
   11854:	mov	r2, r8
   11858:	mov	r1, r4
   1185c:	mov	r0, r7
   11860:	bl	110c0 <strncpy@plt>
   11864:	add	r0, r5, #2
   11868:	pop	{r4, r5, r6, r7, r8, pc}
   1186c:	ldr	r1, [pc, #20]	; 11888 <ftello64@plt+0x6c0>
   11870:	mov	r2, #5
   11874:	mov	r0, #0
   11878:	bl	10f70 <dcgettext@plt>
   1187c:	mov	r1, r0
   11880:	mov	r0, #1
   11884:	bl	11108 <errx@plt>
   11888:	strdeq	r3, [r1], -r8
   1188c:	push	{r4, r5, r6, lr}
   11890:	ldrsb	r4, [r0]
   11894:	cmp	r4, #0
   11898:	popeq	{r4, r5, r6, pc}
   1189c:	mov	r5, r0
   118a0:	mov	r6, r1
   118a4:	bl	1103c <__ctype_b_loc@plt>
   118a8:	add	r1, r5, r6
   118ac:	mov	ip, #63	; 0x3f
   118b0:	ldr	r2, [r0]
   118b4:	lsl	r3, r4, #1
   118b8:	sub	r4, r4, #91	; 0x5b
   118bc:	ldrh	r3, [r2, r3]
   118c0:	tst	r4, #253	; 0xfd
   118c4:	lsr	r3, r3, #14
   118c8:	eor	r3, r3, #1
   118cc:	andne	r3, r3, #1
   118d0:	moveq	r3, #1
   118d4:	cmp	r3, #0
   118d8:	strbne	ip, [r5]
   118dc:	ldrsb	r4, [r5, #1]!
   118e0:	cmp	r4, #0
   118e4:	popeq	{r4, r5, r6, pc}
   118e8:	cmp	r5, r1
   118ec:	bne	118b0 <ftello64@plt+0x6e8>
   118f0:	pop	{r4, r5, r6, pc}
   118f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f8:	sub	sp, sp, #164	; 0xa4
   118fc:	ldr	r5, [pc, #332]	; 11a50 <ftello64@plt+0x888>
   11900:	ldr	r2, [r0, #352]	; 0x160
   11904:	mov	r6, r1
   11908:	ldr	r3, [r5]
   1190c:	cmp	r2, #0
   11910:	mov	r4, r0
   11914:	str	r3, [sp, #156]	; 0x9c
   11918:	add	r1, r0, #348	; 0x15c
   1191c:	bne	1192c <ftello64@plt+0x764>
   11920:	ldr	r3, [r0, #356]	; 0x164
   11924:	cmp	r3, #0
   11928:	beq	11a28 <ftello64@plt+0x860>
   1192c:	mov	r3, #46	; 0x2e
   11930:	add	r2, sp, #108	; 0x6c
   11934:	mov	r0, #10
   11938:	bl	11150 <inet_ntop@plt>
   1193c:	mov	r7, r0
   11940:	ldr	r0, [r4, #340]	; 0x154
   11944:	ldr	ip, [r4, #344]	; 0x158
   11948:	str	r0, [sp, #60]	; 0x3c
   1194c:	add	r2, sp, #68	; 0x44
   11950:	mov	r3, #40	; 0x28
   11954:	mov	r1, #119	; 0x77
   11958:	add	r0, sp, #60	; 0x3c
   1195c:	str	ip, [sp, #64]	; 0x40
   11960:	bl	12c14 <ftello64@plt+0x1a4c>
   11964:	cmp	r0, #0
   11968:	bne	11a10 <ftello64@plt+0x848>
   1196c:	add	fp, r4, #40	; 0x28
   11970:	mov	r0, fp
   11974:	mov	r1, #4
   11978:	add	r8, r4, #44	; 0x2c
   1197c:	bl	1188c <ftello64@plt+0x6c4>
   11980:	add	r9, r4, #8
   11984:	mov	r0, r8
   11988:	mov	r1, #32
   1198c:	bl	1188c <ftello64@plt+0x6c4>
   11990:	add	sl, r4, #76	; 0x4c
   11994:	mov	r0, r9
   11998:	mov	r1, #32
   1199c:	bl	1188c <ftello64@plt+0x6c4>
   119a0:	mov	r0, sl
   119a4:	mov	r1, #256	; 0x100
   119a8:	bl	1188c <ftello64@plt+0x6c4>
   119ac:	ldr	r3, [r4, #4]
   119b0:	mov	r2, #32
   119b4:	str	sl, [sp, #40]	; 0x28
   119b8:	mov	r1, #8
   119bc:	add	r0, sp, #68	; 0x44
   119c0:	mov	lr, #256	; 0x100
   119c4:	mov	ip, #20
   119c8:	mov	sl, #12
   119cc:	str	r0, [sp, #48]	; 0x30
   119d0:	str	fp, [sp, #4]
   119d4:	str	r9, [sp, #28]
   119d8:	str	r8, [sp, #16]
   119dc:	str	r7, [sp, #44]	; 0x2c
   119e0:	str	r3, [sp]
   119e4:	mov	r0, r6
   119e8:	ldrsh	r3, [r4]
   119ec:	str	r2, [sp, #24]
   119f0:	str	r2, [sp, #12]
   119f4:	str	r1, [sp, #8]
   119f8:	str	lr, [sp, #36]	; 0x24
   119fc:	str	ip, [sp, #32]
   11a00:	str	sl, [sp, #20]
   11a04:	ldr	r2, [pc, #72]	; 11a54 <ftello64@plt+0x88c>
   11a08:	mov	r1, #1
   11a0c:	bl	110e4 <__fprintf_chk@plt>
   11a10:	ldr	r2, [sp, #156]	; 0x9c
   11a14:	ldr	r3, [r5]
   11a18:	cmp	r2, r3
   11a1c:	bne	11a4c <ftello64@plt+0x884>
   11a20:	add	sp, sp, #164	; 0xa4
   11a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a28:	ldr	r3, [r0, #360]	; 0x168
   11a2c:	cmp	r3, #0
   11a30:	bne	1192c <ftello64@plt+0x764>
   11a34:	mov	r3, #46	; 0x2e
   11a38:	add	r2, sp, #108	; 0x6c
   11a3c:	mov	r0, #2
   11a40:	bl	11150 <inet_ntop@plt>
   11a44:	mov	r7, r0
   11a48:	b	11940 <ftello64@plt+0x778>
   11a4c:	bl	10f7c <__stack_chk_fail@plt>
   11a50:	andeq	r3, r2, r0, ror #27
   11a54:	andeq	r3, r1, r0, lsr #4
   11a58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a5c:	subs	r6, r2, #0
   11a60:	ldr	r2, [pc, #684]	; 11d14 <ftello64@plt+0xb4c>
   11a64:	sub	sp, sp, #964	; 0x3c4
   11a68:	mov	r7, r1
   11a6c:	ldr	r2, [r2]
   11a70:	mov	r4, r3
   11a74:	str	r2, [sp, #956]	; 0x3bc
   11a78:	mov	r5, r0
   11a7c:	beq	11a90 <ftello64@plt+0x8c8>
   11a80:	b	11ad4 <ftello64@plt+0x90c>
   11a84:	mov	r1, r4
   11a88:	add	r0, sp, #124	; 0x7c
   11a8c:	bl	118f4 <ftello64@plt+0x72c>
   11a90:	mov	r3, r5
   11a94:	mov	r2, #1
   11a98:	mov	r1, #384	; 0x180
   11a9c:	add	r0, sp, #124	; 0x7c
   11aa0:	bl	10fe8 <fread@plt>
   11aa4:	cmp	r0, #1
   11aa8:	beq	11a84 <ftello64@plt+0x8bc>
   11aac:	cmp	r6, #0
   11ab0:	bne	11ae4 <ftello64@plt+0x91c>
   11ab4:	ldr	r3, [pc, #600]	; 11d14 <ftello64@plt+0xb4c>
   11ab8:	ldr	r2, [sp, #956]	; 0x3bc
   11abc:	mov	r0, r5
   11ac0:	ldr	r3, [r3]
   11ac4:	cmp	r2, r3
   11ac8:	bne	11d00 <ftello64@plt+0xb38>
   11acc:	add	sp, sp, #964	; 0x3c4
   11ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad4:	mov	r2, #2
   11ad8:	ldr	r1, [pc, #568]	; 11d18 <ftello64@plt+0xb50>
   11adc:	bl	11168 <fseek@plt>
   11ae0:	b	11a90 <ftello64@plt+0x8c8>
   11ae4:	bl	11060 <inotify_init@plt>
   11ae8:	cmn	r0, #1
   11aec:	mov	r8, r0
   11af0:	beq	11b98 <ftello64@plt+0x9d0>
   11af4:	mov	r0, r5
   11af8:	bl	111c8 <ftello64@plt>
   11afc:	strd	r0, [sp]
   11b00:	mov	r0, r5
   11b04:	bl	110f0 <fclose@plt>
   11b08:	ldr	r2, [pc, #524]	; 11d1c <ftello64@plt+0xb54>
   11b0c:	mov	r1, r7
   11b10:	mov	r0, r8
   11b14:	bl	11084 <inotify_add_watch@plt>
   11b18:	cmn	r0, #1
   11b1c:	mov	r9, r0
   11b20:	beq	11d04 <ftello64@plt+0xb3c>
   11b24:	cmp	r0, #0
   11b28:	blt	11cd4 <ftello64@plt+0xb0c>
   11b2c:	bl	11090 <__errno_location@plt>
   11b30:	mov	fp, r0
   11b34:	mov	r5, #0
   11b38:	str	r5, [fp]
   11b3c:	mov	r2, #64	; 0x40
   11b40:	add	r1, sp, #892	; 0x37c
   11b44:	mov	r0, r8
   11b48:	bl	10ef8 <read@plt>
   11b4c:	subs	r3, r0, #0
   11b50:	str	r3, [sp, #12]
   11b54:	bge	11bc0 <ftello64@plt+0x9f8>
   11b58:	ldr	r0, [fp]
   11b5c:	cmp	r0, #11
   11b60:	cmpne	r0, #4
   11b64:	moveq	r0, #1
   11b68:	movne	r0, #0
   11b6c:	beq	11b34 <ftello64@plt+0x96c>
   11b70:	ldr	r1, [pc, #424]	; 11d20 <ftello64@plt+0xb58>
   11b74:	mov	r2, #5
   11b78:	bl	10f70 <dcgettext@plt>
   11b7c:	mov	r2, r7
   11b80:	mov	r1, r0
   11b84:	mov	r0, #1
   11b88:	bl	10fac <err@plt>
   11b8c:	mov	r1, r4
   11b90:	add	r0, sp, #124	; 0x7c
   11b94:	bl	118f4 <ftello64@plt+0x72c>
   11b98:	mov	r3, r5
   11b9c:	mov	r2, #1
   11ba0:	mov	r1, #384	; 0x180
   11ba4:	add	r0, sp, #124	; 0x7c
   11ba8:	bl	10fe8 <fread@plt>
   11bac:	cmp	r0, #1
   11bb0:	beq	11b8c <ftello64@plt+0x9c4>
   11bb4:	mov	r0, #1
   11bb8:	bl	10f64 <sleep@plt>
   11bbc:	b	11b98 <ftello64@plt+0x9d0>
   11bc0:	beq	11b34 <ftello64@plt+0x96c>
   11bc4:	ldr	r3, [sp, #896]	; 0x380
   11bc8:	tst	r3, #2
   11bcc:	beq	11ccc <ftello64@plt+0xb04>
   11bd0:	add	sl, sp, #892	; 0x37c
   11bd4:	ldr	r1, [pc, #328]	; 11d24 <ftello64@plt+0xb5c>
   11bd8:	mov	r0, r7
   11bdc:	bl	11144 <fopen64@plt>
   11be0:	subs	r6, r0, #0
   11be4:	beq	11ce4 <ftello64@plt+0xb1c>
   11be8:	bl	110d8 <fileno@plt>
   11bec:	add	r2, sp, #16
   11bf0:	mov	r1, r0
   11bf4:	mov	r0, #3
   11bf8:	bl	10fb8 <__fxstat64@plt>
   11bfc:	cmn	r0, #1
   11c00:	beq	11cf0 <ftello64@plt+0xb28>
   11c04:	ldrd	r2, [sp, #64]	; 0x40
   11c08:	ldrd	r0, [sp]
   11c0c:	cmp	r3, r1
   11c10:	cmpeq	r2, r0
   11c14:	beq	11c98 <ftello64@plt+0xad0>
   11c18:	mov	r1, r0
   11c1c:	mov	r2, #0
   11c20:	mov	r0, r6
   11c24:	bl	11168 <fseek@plt>
   11c28:	cmn	r0, #1
   11c2c:	bne	11c40 <ftello64@plt+0xa78>
   11c30:	b	11c5c <ftello64@plt+0xa94>
   11c34:	mov	r1, r4
   11c38:	add	r0, sp, #508	; 0x1fc
   11c3c:	bl	118f4 <ftello64@plt+0x72c>
   11c40:	mov	r3, r6
   11c44:	mov	r2, #1
   11c48:	mov	r1, #384	; 0x180
   11c4c:	add	r0, sp, #508	; 0x1fc
   11c50:	bl	10fe8 <fread@plt>
   11c54:	cmp	r0, #1
   11c58:	beq	11c34 <ftello64@plt+0xa6c>
   11c5c:	mov	r0, r6
   11c60:	bl	111c8 <ftello64@plt>
   11c64:	ldrd	r2, [sp]
   11c68:	cmp	r1, r3
   11c6c:	cmpeq	r0, r2
   11c70:	and	r3, r0, r1
   11c74:	moveq	r2, #1
   11c78:	movne	r2, #0
   11c7c:	cmn	r3, #1
   11c80:	movne	r3, #0
   11c84:	moveq	r3, #1
   11c88:	orrs	r3, r2, r3
   11c8c:	strdeq	r0, [sp]
   11c90:	ldrdne	r2, [sp, #64]	; 0x40
   11c94:	strdne	r2, [sp]
   11c98:	mov	r0, r6
   11c9c:	bl	110f0 <fclose@plt>
   11ca0:	ldr	r3, [sl, #12]
   11ca4:	add	r5, r5, r3
   11ca8:	ldr	r3, [sp, #12]
   11cac:	add	r5, r5, #16
   11cb0:	cmp	r3, r5
   11cb4:	ble	11b34 <ftello64@plt+0x96c>
   11cb8:	add	r3, sp, #892	; 0x37c
   11cbc:	add	sl, r3, r5
   11cc0:	ldr	r3, [sl, #4]
   11cc4:	tst	r3, #2
   11cc8:	bne	11bd4 <ftello64@plt+0xa0c>
   11ccc:	mov	r0, r9
   11cd0:	bl	11198 <close@plt>
   11cd4:	mov	r0, r8
   11cd8:	bl	11198 <close@plt>
   11cdc:	mov	r5, #0
   11ce0:	b	11ab4 <ftello64@plt+0x8ec>
   11ce4:	mov	r2, #5
   11ce8:	ldr	r1, [pc, #56]	; 11d28 <ftello64@plt+0xb60>
   11cec:	b	11b78 <ftello64@plt+0x9b0>
   11cf0:	mov	r2, #5
   11cf4:	ldr	r1, [pc, #48]	; 11d2c <ftello64@plt+0xb64>
   11cf8:	mov	r0, #0
   11cfc:	b	11b78 <ftello64@plt+0x9b0>
   11d00:	bl	10f7c <__stack_chk_fail@plt>
   11d04:	mov	r2, #5
   11d08:	ldr	r1, [pc, #32]	; 11d30 <ftello64@plt+0xb68>
   11d0c:	mov	r0, #0
   11d10:	b	11b78 <ftello64@plt+0x9b0>
   11d14:	andeq	r3, r2, r0, ror #27
   11d18:			; <UNDEFINED> instruction: 0xfffff100
   11d1c:	andeq	r2, r0, r2, lsl #24
   11d20:	andeq	r3, r1, r0, lsl #5
   11d24:	andeq	r3, r1, r0, lsr #5
   11d28:	andeq	r3, r1, r4, lsr #5
   11d2c:			; <UNDEFINED> instruction: 0x000132b4
   11d30:	andeq	r3, r1, r0, ror #4
   11d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d38:	sub	sp, sp, #524	; 0x20c
   11d3c:	ldr	fp, [pc, #516]	; 11f48 <ftello64@plt+0xd80>
   11d40:	mov	r6, r0
   11d44:	mov	r0, #1024	; 0x400
   11d48:	ldr	r3, [fp]
   11d4c:	mov	r8, r1
   11d50:	str	r3, [sp, #516]	; 0x204
   11d54:	bl	11000 <malloc@plt>
   11d58:	subs	r5, r0, #0
   11d5c:	beq	11f34 <ftello64@plt+0xd6c>
   11d60:	mov	r3, #0
   11d64:	strb	r3, [sp, #464]	; 0x1d0
   11d68:	ldr	r7, [pc, #476]	; 11f4c <ftello64@plt+0xd84>
   11d6c:	ldr	sl, [pc, #476]	; 11f50 <ftello64@plt+0xd88>
   11d70:	ldr	r9, [pc, #476]	; 11f54 <ftello64@plt+0xd8c>
   11d74:	b	11dd4 <ftello64@plt+0xc0c>
   11d78:	mov	r1, r9
   11d7c:	add	r0, sp, #436	; 0x1b4
   11d80:	bl	10f88 <strptime@plt>
   11d84:	add	r0, sp, #8
   11d88:	bl	11138 <timegm@plt>
   11d8c:	mov	r3, r0
   11d90:	add	r0, sp, #436	; 0x1b4
   11d94:	mov	r1, #44	; 0x2c
   11d98:	str	r3, [sp, #392]	; 0x188
   11d9c:	bl	1106c <strchr@plt>
   11da0:	subs	ip, r0, #0
   11da4:	beq	11dbc <ftello64@plt+0xbf4>
   11da8:	add	r0, ip, #1
   11dac:	mov	r2, #10
   11db0:	mov	r1, #0
   11db4:	bl	10eec <strtol@plt>
   11db8:	mov	ip, r0
   11dbc:	add	r0, sp, #52	; 0x34
   11dc0:	mov	r3, r8
   11dc4:	mov	r2, #1
   11dc8:	mov	r1, #384	; 0x180
   11dcc:	str	ip, [sp, #396]	; 0x18c
   11dd0:	bl	10fc4 <fwrite@plt>
   11dd4:	mov	r2, r6
   11dd8:	ldr	r1, [pc, #376]	; 11f58 <ftello64@plt+0xd90>
   11ddc:	mov	r0, r5
   11de0:	bl	10f1c <fgets@plt>
   11de4:	cmp	r0, #0
   11de8:	beq	11f14 <ftello64@plt+0xd4c>
   11dec:	mov	r2, #384	; 0x180
   11df0:	mov	r1, #0
   11df4:	add	r0, sp, #52	; 0x34
   11df8:	bl	110b4 <memset@plt>
   11dfc:	add	r3, sp, #92	; 0x5c
   11e00:	add	r2, sp, #52	; 0x34
   11e04:	str	r3, [sp]
   11e08:	mov	r1, r7
   11e0c:	add	r3, sp, #56	; 0x38
   11e10:	add	r4, r5, #19
   11e14:	mov	r0, r5
   11e18:	bl	1112c <sscanf@plt>
   11e1c:	mov	r0, r4
   11e20:	mov	r3, #1
   11e24:	mov	r2, #32
   11e28:	add	r1, sp, #96	; 0x60
   11e2c:	bl	117ec <ftello64@plt+0x624>
   11e30:	mov	r3, #1
   11e34:	mov	r2, #32
   11e38:	add	r1, sp, #60	; 0x3c
   11e3c:	add	r4, r4, r0
   11e40:	mov	r0, r4
   11e44:	bl	117ec <ftello64@plt+0x624>
   11e48:	mov	r3, #1
   11e4c:	mov	r2, #256	; 0x100
   11e50:	add	r1, sp, #128	; 0x80
   11e54:	add	r4, r4, r0
   11e58:	mov	r0, r4
   11e5c:	bl	117ec <ftello64@plt+0x624>
   11e60:	add	r1, sp, #468	; 0x1d4
   11e64:	mov	r3, #1
   11e68:	mov	r2, #46	; 0x2e
   11e6c:	add	r4, r4, r0
   11e70:	mov	r0, r4
   11e74:	bl	117ec <ftello64@plt+0x624>
   11e78:	mov	r3, #0
   11e7c:	mov	r2, #28
   11e80:	add	r1, sp, #436	; 0x1b4
   11e84:	add	r0, r4, r0
   11e88:	bl	117ec <ftello64@plt+0x624>
   11e8c:	mov	r1, #46	; 0x2e
   11e90:	add	r0, sp, #468	; 0x1d4
   11e94:	bl	1106c <strchr@plt>
   11e98:	add	r1, sp, #468	; 0x1d4
   11e9c:	add	r2, sp, #400	; 0x190
   11ea0:	cmp	r0, #0
   11ea4:	movne	r0, #2
   11ea8:	moveq	r0, #10
   11eac:	bl	10f40 <inet_pton@plt>
   11eb0:	add	r0, sp, #8
   11eb4:	mov	r2, #44	; 0x2c
   11eb8:	mov	r1, #0
   11ebc:	bl	110b4 <memset@plt>
   11ec0:	add	r3, sp, #436	; 0x1b4
   11ec4:	ldrsb	r4, [r3]
   11ec8:	bics	r3, r4, #32
   11ecc:	beq	11d90 <ftello64@plt+0xbc8>
   11ed0:	bl	1103c <__ctype_b_loc@plt>
   11ed4:	lsl	r4, r4, #1
   11ed8:	add	r2, sp, #8
   11edc:	ldr	r3, [r0]
   11ee0:	ldrh	r3, [r3, r4]
   11ee4:	tst	r3, #2048	; 0x800
   11ee8:	bne	11d78 <ftello64@plt+0xbb0>
   11eec:	mov	r1, sl
   11ef0:	add	r0, sp, #436	; 0x1b4
   11ef4:	bl	10f88 <strptime@plt>
   11ef8:	add	r3, sp, #460	; 0x1cc
   11efc:	add	r3, r3, #2
   11f00:	ldrsb	r3, [r3]
   11f04:	cmp	r3, #68	; 0x44
   11f08:	moveq	r3, #1
   11f0c:	streq	r3, [sp, #40]	; 0x28
   11f10:	b	11d84 <ftello64@plt+0xbbc>
   11f14:	ldr	r2, [sp, #516]	; 0x204
   11f18:	ldr	r3, [fp]
   11f1c:	cmp	r2, r3
   11f20:	bne	11f44 <ftello64@plt+0xd7c>
   11f24:	mov	r0, r5
   11f28:	add	sp, sp, #524	; 0x20c
   11f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f30:	b	10f10 <free@plt>
   11f34:	mov	r2, #1024	; 0x400
   11f38:	ldr	r1, [pc, #28]	; 11f5c <ftello64@plt+0xd94>
   11f3c:	mov	r0, #1
   11f40:	bl	10fac <err@plt>
   11f44:	bl	10f7c <__stack_chk_fail@plt>
   11f48:	andeq	r3, r2, r0, ror #27
   11f4c:	andeq	r3, r1, r4, ror #5
   11f50:	andeq	r3, r1, ip, lsl #6
   11f54:	strdeq	r3, [r1], -r8
   11f58:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11f5c:	andeq	r3, r1, r8, asr #5
   11f60:	ldr	r3, [pc, #292]	; 1208c <ftello64@plt+0xec4>
   11f64:	push	{r4, r5, r6, lr}
   11f68:	ldr	r4, [r3]
   11f6c:	mov	r0, r4
   11f70:	bl	10ff4 <__fpending@plt>
   11f74:	mov	r6, r0
   11f78:	mov	r0, r4
   11f7c:	bl	10f28 <ferror@plt>
   11f80:	mov	r5, r0
   11f84:	mov	r0, r4
   11f88:	bl	110f0 <fclose@plt>
   11f8c:	cmp	r5, #0
   11f90:	mov	r4, r0
   11f94:	bne	1203c <ftello64@plt+0xe74>
   11f98:	cmp	r0, #0
   11f9c:	beq	11fb8 <ftello64@plt+0xdf0>
   11fa0:	bl	11090 <__errno_location@plt>
   11fa4:	cmp	r6, #0
   11fa8:	ldr	r3, [r0]
   11fac:	bne	12014 <ftello64@plt+0xe4c>
   11fb0:	cmp	r3, #9
   11fb4:	bne	12014 <ftello64@plt+0xe4c>
   11fb8:	ldr	r3, [pc, #208]	; 12090 <ftello64@plt+0xec8>
   11fbc:	ldr	r4, [r3]
   11fc0:	mov	r0, r4
   11fc4:	bl	10ff4 <__fpending@plt>
   11fc8:	mov	r6, r0
   11fcc:	mov	r0, r4
   11fd0:	bl	10f28 <ferror@plt>
   11fd4:	mov	r5, r0
   11fd8:	mov	r0, r4
   11fdc:	bl	110f0 <fclose@plt>
   11fe0:	cmp	r5, #0
   11fe4:	mov	r4, r0
   11fe8:	bne	12070 <ftello64@plt+0xea8>
   11fec:	cmp	r0, #0
   11ff0:	popeq	{r4, r5, r6, pc}
   11ff4:	cmp	r6, #0
   11ff8:	bne	1200c <ftello64@plt+0xe44>
   11ffc:	bl	11090 <__errno_location@plt>
   12000:	ldr	r3, [r0]
   12004:	cmp	r3, #9
   12008:	popeq	{r4, r5, r6, pc}
   1200c:	mov	r0, #1
   12010:	bl	10f4c <_exit@plt>
   12014:	cmp	r3, #32
   12018:	beq	11fb8 <ftello64@plt+0xdf0>
   1201c:	cmp	r3, #0
   12020:	beq	12058 <ftello64@plt+0xe90>
   12024:	mov	r2, #5
   12028:	ldr	r1, [pc, #100]	; 12094 <ftello64@plt+0xecc>
   1202c:	mov	r0, #0
   12030:	bl	10f70 <dcgettext@plt>
   12034:	bl	11114 <warn@plt>
   12038:	b	1200c <ftello64@plt+0xe44>
   1203c:	bl	11090 <__errno_location@plt>
   12040:	cmp	r4, #0
   12044:	ldr	r3, [r0]
   12048:	bne	12014 <ftello64@plt+0xe4c>
   1204c:	cmp	r3, #32
   12050:	strne	r4, [r0]
   12054:	beq	11fb8 <ftello64@plt+0xdf0>
   12058:	mov	r2, #5
   1205c:	ldr	r1, [pc, #48]	; 12094 <ftello64@plt+0xecc>
   12060:	mov	r0, #0
   12064:	bl	10f70 <dcgettext@plt>
   12068:	bl	11078 <warnx@plt>
   1206c:	b	1200c <ftello64@plt+0xe44>
   12070:	cmp	r0, #0
   12074:	bne	1200c <ftello64@plt+0xe44>
   12078:	bl	11090 <__errno_location@plt>
   1207c:	ldr	r3, [r0]
   12080:	cmp	r3, #32
   12084:	strne	r4, [r0]
   12088:	b	1200c <ftello64@plt+0xe44>
   1208c:	andeq	r4, r2, r4, lsr #32
   12090:	andeq	r4, r2, r8, lsl r0
   12094:	andeq	r3, r1, ip, lsl r3
   12098:	ldr	r3, [pc, #656]	; 12330 <ftello64@plt+0x1168>
   1209c:	ldr	r2, [pc, #656]	; 12334 <ftello64@plt+0x116c>
   120a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120a4:	add	r3, pc, r3
   120a8:	sub	sp, sp, #44	; 0x2c
   120ac:	subs	r4, r0, #0
   120b0:	str	r1, [sp, #28]
   120b4:	ldr	r2, [r3, r2]
   120b8:	str	r2, [sp, #24]
   120bc:	ldr	r3, [r2]
   120c0:	str	r3, [sp, #36]	; 0x24
   120c4:	beq	1230c <ftello64@plt+0x1144>
   120c8:	ldr	r6, [pc, #616]	; 12338 <ftello64@plt+0x1170>
   120cc:	mov	r5, #0
   120d0:	ldr	r3, [pc, #612]	; 1233c <ftello64@plt+0x1174>
   120d4:	add	r6, pc, r6
   120d8:	mov	r9, r5
   120dc:	add	r3, pc, r3
   120e0:	str	r3, [sp, #20]
   120e4:	str	r5, [sp, #16]
   120e8:	ldr	r1, [sp, #20]
   120ec:	mov	r0, r4
   120f0:	bl	111b0 <strspn@plt>
   120f4:	ldrsb	r3, [r4, r0]
   120f8:	add	r8, r4, r0
   120fc:	cmp	r3, #0
   12100:	beq	122ec <ftello64@plt+0x1124>
   12104:	bl	11090 <__errno_location@plt>
   12108:	mov	r5, #0
   1210c:	add	fp, sp, #32
   12110:	mov	r1, fp
   12114:	mov	r2, #10
   12118:	mov	r4, r0
   1211c:	str	r5, [r0]
   12120:	mov	r0, r8
   12124:	bl	10fd0 <strtoll@plt>
   12128:	ldr	r3, [r4]
   1212c:	cmp	r3, r5
   12130:	strd	r0, [sp]
   12134:	bgt	122dc <ftello64@plt+0x1114>
   12138:	ldrd	r2, [sp]
   1213c:	cmp	r2, #0
   12140:	sbcs	r3, r3, #0
   12144:	blt	122e4 <ftello64@plt+0x111c>
   12148:	ldr	r7, [sp, #32]
   1214c:	ldrsb	r3, [r7]
   12150:	cmp	r3, #46	; 0x2e
   12154:	beq	12290 <ftello64@plt+0x10c8>
   12158:	cmp	r8, r7
   1215c:	beq	12270 <ftello64@plt+0x10a8>
   12160:	mov	r2, #0
   12164:	mov	r3, #0
   12168:	strd	r2, [sp, #8]
   1216c:	ldr	r1, [pc, #460]	; 12340 <ftello64@plt+0x1178>
   12170:	mov	r0, r7
   12174:	add	r1, pc, r1
   12178:	bl	111b0 <strspn@plt>
   1217c:	ldr	fp, [pc, #448]	; 12344 <ftello64@plt+0x117c>
   12180:	mov	r8, #0
   12184:	add	fp, pc, fp
   12188:	ldr	sl, [sp, #16]
   1218c:	add	r7, r7, r0
   12190:	str	r7, [sp, #32]
   12194:	b	121a8 <ftello64@plt+0xfe0>
   12198:	add	r8, r8, #1
   1219c:	cmp	r8, #28
   121a0:	beq	12270 <ftello64@plt+0x10a8>
   121a4:	ldr	fp, [r6, r8, lsl #4]
   121a8:	cmp	fp, #0
   121ac:	beq	12198 <ftello64@plt+0xfd0>
   121b0:	mov	r0, fp
   121b4:	bl	11054 <strlen@plt>
   121b8:	cmp	r7, #0
   121bc:	cmpne	r0, #0
   121c0:	mov	r4, r0
   121c4:	beq	12198 <ftello64@plt+0xfd0>
   121c8:	mov	r2, r0
   121cc:	mov	r1, fp
   121d0:	mov	r0, r7
   121d4:	bl	11180 <strncmp@plt>
   121d8:	cmp	r0, #0
   121dc:	bne	12198 <ftello64@plt+0xfd0>
   121e0:	adds	r4, r7, r4
   121e4:	beq	12198 <ftello64@plt+0xfd0>
   121e8:	ldr	r3, [pc, #344]	; 12348 <ftello64@plt+0x1180>
   121ec:	str	sl, [sp, #16]
   121f0:	add	r3, pc, r3
   121f4:	add	r3, r3, r8, lsl #4
   121f8:	ldrd	sl, [sp, #8]
   121fc:	ldr	r8, [r3, #12]
   12200:	ldr	r7, [r3, #8]
   12204:	cmp	r5, #0
   12208:	mul	r3, sl, r8
   1220c:	umull	r0, r1, sl, r7
   12210:	mla	r3, r7, fp, r3
   12214:	add	r1, r3, r1
   12218:	beq	12238 <ftello64@plt+0x1070>
   1221c:	ldr	sl, [sp, #16]
   12220:	mov	r2, #10
   12224:	mov	r3, #0
   12228:	bl	12f9c <ftello64@plt+0x1dd4>
   1222c:	subs	r5, r5, #1
   12230:	bne	12220 <ftello64@plt+0x1058>
   12234:	str	sl, [sp, #16]
   12238:	ldrd	r2, [sp]
   1223c:	mov	r5, #1
   12240:	mul	r8, r2, r8
   12244:	umull	sl, fp, r2, r7
   12248:	mla	r7, r7, r3, r8
   1224c:	adds	r2, sl, r0
   12250:	add	r3, r7, fp
   12254:	mov	fp, r3
   12258:	adc	r3, fp, r1
   1225c:	adds	r9, r9, r2
   12260:	ldr	r2, [sp, #16]
   12264:	adc	r3, r2, r3
   12268:	str	r3, [sp, #16]
   1226c:	b	120e8 <ftello64@plt+0xf20>
   12270:	mvn	r0, #21
   12274:	ldr	r3, [sp, #24]
   12278:	ldr	r2, [sp, #36]	; 0x24
   1227c:	ldr	r3, [r3]
   12280:	cmp	r2, r3
   12284:	bne	1232c <ftello64@plt+0x1164>
   12288:	add	sp, sp, #44	; 0x2c
   1228c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12290:	add	r8, r7, #1
   12294:	str	r5, [r4]
   12298:	mov	r1, fp
   1229c:	mov	r0, r8
   122a0:	mov	r2, #10
   122a4:	bl	10fd0 <strtoll@plt>
   122a8:	ldr	r3, [r4]
   122ac:	cmp	r3, #0
   122b0:	strd	r0, [sp, #8]
   122b4:	bgt	122dc <ftello64@plt+0x1114>
   122b8:	ldrd	r2, [sp, #8]
   122bc:	cmp	r2, #0
   122c0:	sbcs	r3, r3, #0
   122c4:	blt	122e4 <ftello64@plt+0x111c>
   122c8:	ldr	r7, [sp, #32]
   122cc:	cmp	r8, r7
   122d0:	beq	12270 <ftello64@plt+0x10a8>
   122d4:	sub	r5, r7, r8
   122d8:	b	1216c <ftello64@plt+0xfa4>
   122dc:	rsb	r0, r3, #0
   122e0:	b	12274 <ftello64@plt+0x10ac>
   122e4:	mvn	r0, #33	; 0x21
   122e8:	b	12274 <ftello64@plt+0x10ac>
   122ec:	cmp	r5, #0
   122f0:	ldr	r1, [sp, #16]
   122f4:	beq	12270 <ftello64@plt+0x10a8>
   122f8:	mov	r0, r3
   122fc:	ldr	r3, [sp, #28]
   12300:	str	r9, [r3]
   12304:	str	r1, [r3, #4]
   12308:	b	12274 <ftello64@plt+0x10ac>
   1230c:	ldr	r3, [pc, #56]	; 1234c <ftello64@plt+0x1184>
   12310:	ldr	r1, [pc, #56]	; 12350 <ftello64@plt+0x1188>
   12314:	ldr	r0, [pc, #56]	; 12354 <ftello64@plt+0x118c>
   12318:	add	r3, pc, r3
   1231c:	mov	r2, #77	; 0x4d
   12320:	add	r1, pc, r1
   12324:	add	r0, pc, r0
   12328:	bl	111bc <__assert_fail@plt>
   1232c:	bl	10f7c <__stack_chk_fail@plt>
   12330:	andeq	r1, r1, r8, lsr lr
   12334:	andeq	r0, r0, r0, lsl r1
   12338:	ldrdeq	r1, [r1], -r4
   1233c:	andeq	r1, r0, r8, lsl r5
   12340:	andeq	r1, r0, r0, lsl #9
   12344:	andeq	r1, r0, r4, asr r4
   12348:			; <UNDEFINED> instruction: 0x000119b8
   1234c:	andeq	r1, r0, r4, lsr #5
   12350:	andeq	r1, r0, r0, asr #5
   12354:	andeq	r1, r0, ip, asr #5
   12358:	ldr	r3, [pc, #1556]	; 12974 <ftello64@plt+0x17ac>
   1235c:	ldr	r2, [pc, #1556]	; 12978 <ftello64@plt+0x17b0>
   12360:	add	r3, pc, r3
   12364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12368:	sub	sp, sp, #124	; 0x7c
   1236c:	ldr	r6, [r3, r2]
   12370:	subs	r4, r0, #0
   12374:	mov	r5, r1
   12378:	mov	r0, #0
   1237c:	mov	r1, #0
   12380:	ldr	r3, [r6]
   12384:	strd	r0, [sp, #8]
   12388:	str	r3, [sp, #116]	; 0x74
   1238c:	strd	r0, [sp, #16]
   12390:	beq	1294c <ftello64@plt+0x1784>
   12394:	cmp	r5, #0
   12398:	beq	12928 <ftello64@plt+0x1760>
   1239c:	mov	r0, #0
   123a0:	bl	10f58 <time@plt>
   123a4:	add	r7, sp, #28
   123a8:	mov	r1, r7
   123ac:	str	r0, [sp, #4]
   123b0:	add	r0, sp, #4
   123b4:	bl	10f94 <localtime_r@plt>
   123b8:	ldr	r1, [pc, #1468]	; 1297c <ftello64@plt+0x17b4>
   123bc:	mvn	r3, #0
   123c0:	add	r1, pc, r1
   123c4:	mov	r0, r4
   123c8:	str	r3, [sp, #60]	; 0x3c
   123cc:	bl	10ee0 <strcmp@plt>
   123d0:	cmp	r0, #0
   123d4:	beq	12858 <ftello64@plt+0x1690>
   123d8:	ldr	r1, [pc, #1440]	; 12980 <ftello64@plt+0x17b8>
   123dc:	mov	r0, r4
   123e0:	add	r1, pc, r1
   123e4:	bl	10ee0 <strcmp@plt>
   123e8:	subs	r3, r0, #0
   123ec:	beq	1278c <ftello64@plt+0x15c4>
   123f0:	ldr	r1, [pc, #1420]	; 12984 <ftello64@plt+0x17bc>
   123f4:	mov	r0, r4
   123f8:	add	r1, pc, r1
   123fc:	bl	10ee0 <strcmp@plt>
   12400:	subs	r3, r0, #0
   12404:	beq	128b4 <ftello64@plt+0x16ec>
   12408:	ldr	r1, [pc, #1400]	; 12988 <ftello64@plt+0x17c0>
   1240c:	mov	r0, r4
   12410:	add	r1, pc, r1
   12414:	bl	10ee0 <strcmp@plt>
   12418:	subs	r3, r0, #0
   1241c:	beq	12870 <ftello64@plt+0x16a8>
   12420:	ldrsb	r3, [r4]
   12424:	cmp	r3, #43	; 0x2b
   12428:	beq	128c4 <ftello64@plt+0x16fc>
   1242c:	cmp	r3, #45	; 0x2d
   12430:	beq	128dc <ftello64@plt+0x1714>
   12434:	mov	r0, r4
   12438:	bl	11054 <strlen@plt>
   1243c:	cmp	r0, #3
   12440:	bls	128f4 <ftello64@plt+0x172c>
   12444:	sub	r0, r0, #4
   12448:	add	r2, r4, r0
   1244c:	ldrb	r3, [r4, r0]
   12450:	cmp	r3, #32
   12454:	beq	12804 <ftello64@plt+0x163c>
   12458:	ldr	r9, [pc, #1324]	; 1298c <ftello64@plt+0x17c4>
   1245c:	mov	sl, #0
   12460:	add	r9, pc, r9
   12464:	ldr	fp, [pc, #1316]	; 12990 <ftello64@plt+0x17c8>
   12468:	add	fp, pc, fp
   1246c:	add	fp, fp, #448	; 0x1c0
   12470:	cmp	r9, #0
   12474:	beq	128a0 <ftello64@plt+0x16d8>
   12478:	mov	r0, r9
   1247c:	bl	11054 <strlen@plt>
   12480:	subs	r8, r0, #0
   12484:	beq	128a0 <ftello64@plt+0x16d8>
   12488:	mov	r1, r9
   1248c:	mov	r2, r8
   12490:	mov	r0, r4
   12494:	bl	1109c <strncasecmp@plt>
   12498:	cmp	r0, #0
   1249c:	bne	128a0 <ftello64@plt+0x16d8>
   124a0:	cmn	r4, r8
   124a4:	beq	128a0 <ftello64@plt+0x16d8>
   124a8:	ldrsb	r3, [r4, r8]
   124ac:	cmp	r3, #32
   124b0:	bne	128a0 <ftello64@plt+0x16d8>
   124b4:	ldr	r3, [pc, #1240]	; 12994 <ftello64@plt+0x17cc>
   124b8:	add	r8, r8, #1
   124bc:	add	r3, pc, r3
   124c0:	add	sl, r3, sl, lsl #3
   124c4:	add	r4, r4, r8
   124c8:	ldr	r8, [sl, #452]	; 0x1c4
   124cc:	mov	lr, r7
   124d0:	add	r9, sp, #72	; 0x48
   124d4:	ldm	lr!, {r0, r1, r2, r3}
   124d8:	mov	ip, r9
   124dc:	stmia	ip!, {r0, r1, r2, r3}
   124e0:	ldm	lr!, {r0, r1, r2, r3}
   124e4:	stmia	ip!, {r0, r1, r2, r3}
   124e8:	ldm	lr, {r0, r1, r2}
   124ec:	stm	ip, {r0, r1, r2}
   124f0:	mov	r2, r7
   124f4:	ldr	r1, [pc, #1180]	; 12998 <ftello64@plt+0x17d0>
   124f8:	mov	r0, r4
   124fc:	add	r1, pc, r1
   12500:	bl	10f88 <strptime@plt>
   12504:	cmp	r0, #0
   12508:	beq	12518 <ftello64@plt+0x1350>
   1250c:	ldrsb	r3, [r0]
   12510:	cmp	r3, #0
   12514:	beq	1275c <ftello64@plt+0x1594>
   12518:	mov	lr, r9
   1251c:	mov	ip, r7
   12520:	ldm	lr!, {r0, r1, r2, r3}
   12524:	stmia	ip!, {r0, r1, r2, r3}
   12528:	ldm	lr!, {r0, r1, r2, r3}
   1252c:	stmia	ip!, {r0, r1, r2, r3}
   12530:	ldm	lr, {r0, r1, r2}
   12534:	stm	ip, {r0, r1, r2}
   12538:	mov	r2, r7
   1253c:	ldr	r1, [pc, #1112]	; 1299c <ftello64@plt+0x17d4>
   12540:	mov	r0, r4
   12544:	add	r1, pc, r1
   12548:	bl	10f88 <strptime@plt>
   1254c:	cmp	r0, #0
   12550:	beq	12560 <ftello64@plt+0x1398>
   12554:	ldrsb	r3, [r0]
   12558:	cmp	r3, #0
   1255c:	beq	1275c <ftello64@plt+0x1594>
   12560:	mov	lr, r9
   12564:	mov	ip, r7
   12568:	ldm	lr!, {r0, r1, r2, r3}
   1256c:	stmia	ip!, {r0, r1, r2, r3}
   12570:	ldm	lr!, {r0, r1, r2, r3}
   12574:	stmia	ip!, {r0, r1, r2, r3}
   12578:	ldm	lr, {r0, r1, r2}
   1257c:	stm	ip, {r0, r1, r2}
   12580:	mov	r2, r7
   12584:	ldr	r1, [pc, #1044]	; 129a0 <ftello64@plt+0x17d8>
   12588:	mov	r0, r4
   1258c:	add	r1, pc, r1
   12590:	bl	10f88 <strptime@plt>
   12594:	cmp	r0, #0
   12598:	beq	125a8 <ftello64@plt+0x13e0>
   1259c:	ldrsb	r3, [r0]
   125a0:	cmp	r3, #0
   125a4:	beq	12754 <ftello64@plt+0x158c>
   125a8:	mov	lr, r9
   125ac:	mov	ip, r7
   125b0:	ldm	lr!, {r0, r1, r2, r3}
   125b4:	stmia	ip!, {r0, r1, r2, r3}
   125b8:	ldm	lr!, {r0, r1, r2, r3}
   125bc:	stmia	ip!, {r0, r1, r2, r3}
   125c0:	ldm	lr, {r0, r1, r2}
   125c4:	stm	ip, {r0, r1, r2}
   125c8:	mov	r2, r7
   125cc:	ldr	r1, [pc, #976]	; 129a4 <ftello64@plt+0x17dc>
   125d0:	mov	r0, r4
   125d4:	add	r1, pc, r1
   125d8:	bl	10f88 <strptime@plt>
   125dc:	cmp	r0, #0
   125e0:	beq	125f0 <ftello64@plt+0x1428>
   125e4:	ldrsb	r3, [r0]
   125e8:	cmp	r3, #0
   125ec:	beq	12754 <ftello64@plt+0x158c>
   125f0:	mov	lr, r9
   125f4:	mov	ip, r7
   125f8:	ldm	lr!, {r0, r1, r2, r3}
   125fc:	stmia	ip!, {r0, r1, r2, r3}
   12600:	ldm	lr!, {r0, r1, r2, r3}
   12604:	stmia	ip!, {r0, r1, r2, r3}
   12608:	ldm	lr, {r0, r1, r2}
   1260c:	stm	ip, {r0, r1, r2}
   12610:	mov	r2, r7
   12614:	ldr	r1, [pc, #908]	; 129a8 <ftello64@plt+0x17e0>
   12618:	mov	r0, r4
   1261c:	add	r1, pc, r1
   12620:	bl	10f88 <strptime@plt>
   12624:	cmp	r0, #0
   12628:	beq	12638 <ftello64@plt+0x1470>
   1262c:	ldrsb	r3, [r0]
   12630:	cmp	r3, #0
   12634:	beq	1290c <ftello64@plt+0x1744>
   12638:	mov	lr, r9
   1263c:	mov	ip, r7
   12640:	ldm	lr!, {r0, r1, r2, r3}
   12644:	stmia	ip!, {r0, r1, r2, r3}
   12648:	ldm	lr!, {r0, r1, r2, r3}
   1264c:	stmia	ip!, {r0, r1, r2, r3}
   12650:	ldm	lr, {r0, r1, r2}
   12654:	stm	ip, {r0, r1, r2}
   12658:	mov	r2, r7
   1265c:	ldr	r1, [pc, #840]	; 129ac <ftello64@plt+0x17e4>
   12660:	mov	r0, r4
   12664:	add	r1, pc, r1
   12668:	bl	10f88 <strptime@plt>
   1266c:	cmp	r0, #0
   12670:	beq	12680 <ftello64@plt+0x14b8>
   12674:	ldrsb	r3, [r0]
   12678:	cmp	r3, #0
   1267c:	beq	1290c <ftello64@plt+0x1744>
   12680:	mov	lr, r9
   12684:	mov	ip, r7
   12688:	ldm	lr!, {r0, r1, r2, r3}
   1268c:	stmia	ip!, {r0, r1, r2, r3}
   12690:	ldm	lr!, {r0, r1, r2, r3}
   12694:	stmia	ip!, {r0, r1, r2, r3}
   12698:	ldm	lr, {r0, r1, r2}
   1269c:	stm	ip, {r0, r1, r2}
   126a0:	mov	r2, r7
   126a4:	ldr	r1, [pc, #772]	; 129b0 <ftello64@plt+0x17e8>
   126a8:	mov	r0, r4
   126ac:	add	r1, pc, r1
   126b0:	bl	10f88 <strptime@plt>
   126b4:	cmp	r0, #0
   126b8:	beq	126c8 <ftello64@plt+0x1500>
   126bc:	ldrsb	r3, [r0]
   126c0:	cmp	r3, #0
   126c4:	beq	1275c <ftello64@plt+0x1594>
   126c8:	mov	lr, r9
   126cc:	mov	ip, r7
   126d0:	ldm	lr!, {r0, r1, r2, r3}
   126d4:	stmia	ip!, {r0, r1, r2, r3}
   126d8:	ldm	lr!, {r0, r1, r2, r3}
   126dc:	stmia	ip!, {r0, r1, r2, r3}
   126e0:	ldm	lr, {r0, r1, r2}
   126e4:	stm	ip, {r0, r1, r2}
   126e8:	mov	r2, r7
   126ec:	ldr	r1, [pc, #704]	; 129b4 <ftello64@plt+0x17ec>
   126f0:	mov	r0, r4
   126f4:	add	r1, pc, r1
   126f8:	bl	10f88 <strptime@plt>
   126fc:	cmp	r0, #0
   12700:	beq	12710 <ftello64@plt+0x1548>
   12704:	ldrsb	r3, [r0]
   12708:	cmp	r3, #0
   1270c:	beq	12754 <ftello64@plt+0x158c>
   12710:	ldm	r9!, {r0, r1, r2, r3}
   12714:	mov	ip, r7
   12718:	stmia	ip!, {r0, r1, r2, r3}
   1271c:	ldm	r9!, {r0, r1, r2, r3}
   12720:	stmia	ip!, {r0, r1, r2, r3}
   12724:	ldm	r9, {r0, r1, r2}
   12728:	stm	ip, {r0, r1, r2}
   1272c:	mov	r0, r4
   12730:	ldr	r1, [pc, #640]	; 129b8 <ftello64@plt+0x17f0>
   12734:	mov	r2, r7
   12738:	add	r1, pc, r1
   1273c:	bl	10f88 <strptime@plt>
   12740:	cmp	r0, #0
   12744:	beq	12784 <ftello64@plt+0x15bc>
   12748:	ldrsb	r3, [r0]
   1274c:	cmp	r3, #0
   12750:	bne	12784 <ftello64@plt+0x15bc>
   12754:	mov	r3, #0
   12758:	str	r3, [sp, #28]
   1275c:	mov	r0, r7
   12760:	bl	10f04 <mktime@plt>
   12764:	cmn	r0, #1
   12768:	str	r0, [sp, #4]
   1276c:	beq	12784 <ftello64@plt+0x15bc>
   12770:	cmp	r8, #0
   12774:	blt	127ac <ftello64@plt+0x15e4>
   12778:	ldr	r3, [sp, #52]	; 0x34
   1277c:	cmp	r3, r8
   12780:	beq	127ac <ftello64@plt+0x15e4>
   12784:	mvn	r4, #21
   12788:	b	127e8 <ftello64@plt+0x1620>
   1278c:	mov	r0, r7
   12790:	str	r3, [sp, #36]	; 0x24
   12794:	str	r3, [sp, #32]
   12798:	str	r3, [sp, #28]
   1279c:	bl	10f04 <mktime@plt>
   127a0:	cmn	r0, #1
   127a4:	str	r0, [sp, #4]
   127a8:	beq	12784 <ftello64@plt+0x15bc>
   127ac:	ldr	r1, [pc, #520]	; 129bc <ftello64@plt+0x17f4>
   127b0:	ldrd	r2, [sp, #8]
   127b4:	ldrd	r8, [sp, #16]
   127b8:	smlal	r2, r3, r1, r0
   127bc:	cmp	r9, r3
   127c0:	cmpeq	r8, r2
   127c4:	mov	r0, r2
   127c8:	movcs	r2, #0
   127cc:	mov	r1, r3
   127d0:	movcs	r3, r2
   127d4:	bcs	127e0 <ftello64@plt+0x1618>
   127d8:	subs	r2, r0, r8
   127dc:	sbc	r3, r1, r9
   127e0:	mov	r4, #0
   127e4:	strd	r2, [r5]
   127e8:	ldr	r2, [sp, #116]	; 0x74
   127ec:	ldr	r3, [r6]
   127f0:	mov	r0, r4
   127f4:	cmp	r2, r3
   127f8:	bne	12970 <ftello64@plt+0x17a8>
   127fc:	add	sp, sp, #124	; 0x7c
   12800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12804:	ldrb	r3, [r2, #1]!
   12808:	cmp	r3, #97	; 0x61
   1280c:	bne	12458 <ftello64@plt+0x1290>
   12810:	ldrb	r3, [r2, #1]!
   12814:	cmp	r3, #103	; 0x67
   12818:	bne	12458 <ftello64@plt+0x1290>
   1281c:	ldrb	r3, [r2, #1]
   12820:	cmp	r3, #111	; 0x6f
   12824:	bne	12458 <ftello64@plt+0x1290>
   12828:	mov	r1, r0
   1282c:	mov	r0, r4
   12830:	bl	10f34 <strndup@plt>
   12834:	subs	r8, r0, #0
   12838:	beq	12920 <ftello64@plt+0x1758>
   1283c:	add	r1, sp, #16
   12840:	bl	12098 <ftello64@plt+0xed0>
   12844:	mov	r4, r0
   12848:	mov	r0, r8
   1284c:	bl	10f10 <free@plt>
   12850:	cmp	r4, #0
   12854:	blt	127e8 <ftello64@plt+0x1620>
   12858:	mov	r0, r7
   1285c:	bl	10f04 <mktime@plt>
   12860:	cmn	r0, #1
   12864:	str	r0, [sp, #4]
   12868:	bne	127ac <ftello64@plt+0x15e4>
   1286c:	b	12784 <ftello64@plt+0x15bc>
   12870:	ldr	r2, [sp, #40]	; 0x28
   12874:	mov	r0, r7
   12878:	add	r2, r2, #1
   1287c:	str	r3, [sp, #36]	; 0x24
   12880:	str	r3, [sp, #32]
   12884:	str	r3, [sp, #28]
   12888:	str	r2, [sp, #40]	; 0x28
   1288c:	bl	10f04 <mktime@plt>
   12890:	cmn	r0, #1
   12894:	str	r0, [sp, #4]
   12898:	bne	127ac <ftello64@plt+0x15e4>
   1289c:	b	12784 <ftello64@plt+0x15bc>
   128a0:	add	sl, sl, #1
   128a4:	cmp	sl, #14
   128a8:	beq	12904 <ftello64@plt+0x173c>
   128ac:	ldr	r9, [fp, sl, lsl #3]
   128b0:	b	12470 <ftello64@plt+0x12a8>
   128b4:	ldr	r2, [sp, #40]	; 0x28
   128b8:	mov	r0, r7
   128bc:	sub	r2, r2, #1
   128c0:	b	1287c <ftello64@plt+0x16b4>
   128c4:	add	r0, r4, #1
   128c8:	add	r1, sp, #8
   128cc:	bl	12098 <ftello64@plt+0xed0>
   128d0:	subs	r4, r0, #0
   128d4:	bge	12858 <ftello64@plt+0x1690>
   128d8:	b	127e8 <ftello64@plt+0x1620>
   128dc:	add	r0, r4, #1
   128e0:	add	r1, sp, #16
   128e4:	bl	12098 <ftello64@plt+0xed0>
   128e8:	subs	r4, r0, #0
   128ec:	bge	12858 <ftello64@plt+0x1690>
   128f0:	b	127e8 <ftello64@plt+0x1620>
   128f4:	ldr	r9, [pc, #196]	; 129c0 <ftello64@plt+0x17f8>
   128f8:	mov	sl, #0
   128fc:	add	r9, pc, r9
   12900:	b	12464 <ftello64@plt+0x129c>
   12904:	mvn	r8, #0
   12908:	b	124cc <ftello64@plt+0x1304>
   1290c:	mov	r3, #0
   12910:	str	r3, [sp, #36]	; 0x24
   12914:	str	r3, [sp, #32]
   12918:	str	r3, [sp, #28]
   1291c:	b	1275c <ftello64@plt+0x1594>
   12920:	mvn	r4, #11
   12924:	b	127e8 <ftello64@plt+0x1620>
   12928:	ldr	r3, [pc, #148]	; 129c4 <ftello64@plt+0x17fc>
   1292c:	ldr	r1, [pc, #148]	; 129c8 <ftello64@plt+0x1800>
   12930:	ldr	r0, [pc, #148]	; 129cc <ftello64@plt+0x1804>
   12934:	add	r3, pc, r3
   12938:	mov	r2, #196	; 0xc4
   1293c:	add	r3, r3, #12
   12940:	add	r1, pc, r1
   12944:	add	r0, pc, r0
   12948:	bl	111bc <__assert_fail@plt>
   1294c:	ldr	r3, [pc, #124]	; 129d0 <ftello64@plt+0x1808>
   12950:	ldr	r1, [pc, #124]	; 129d4 <ftello64@plt+0x180c>
   12954:	ldr	r0, [pc, #124]	; 129d8 <ftello64@plt+0x1810>
   12958:	add	r3, pc, r3
   1295c:	mov	r2, #195	; 0xc3
   12960:	add	r3, r3, #12
   12964:	add	r1, pc, r1
   12968:	add	r0, pc, r0
   1296c:	bl	111bc <__assert_fail@plt>
   12970:	bl	10f7c <__stack_chk_fail@plt>
   12974:	andeq	r1, r1, ip, ror fp
   12978:	andeq	r0, r0, r0, lsl r1
   1297c:	andeq	r1, r0, ip, asr #4
   12980:	andeq	r1, r0, r0, lsr r2
   12984:	andeq	r1, r0, r0, lsr #4
   12988:	andeq	r1, r0, r4, lsl r2
   1298c:	muleq	r0, ip, r1
   12990:	andeq	r1, r1, r0, asr #14
   12994:	andeq	r1, r1, ip, ror #13
   12998:	andeq	r1, r0, ip, lsr r1
   1299c:	andeq	r1, r0, r8, lsl #2
   129a0:	ldrdeq	r1, [r0], -r4
   129a4:	muleq	r0, ip, r0
   129a8:	andeq	r1, r0, r4, rrx
   129ac:	andeq	r1, r0, r8, lsr #32
   129b0:	andeq	r0, r0, ip, ror #31
   129b4:			; <UNDEFINED> instruction: 0x00000fb0
   129b8:	andeq	r0, r0, r4, ror pc
   129bc:	andeq	r4, pc, r0, asr #4
   129c0:	andeq	r0, r0, r0, lsl #26
   129c4:	andeq	r0, r0, r8, lsl #25
   129c8:	andeq	r0, r0, r0, lsr #25
   129cc:	andeq	r0, r0, r0, asr #25
   129d0:	andeq	r0, r0, r4, ror #24
   129d4:	andeq	r0, r0, ip, ror ip
   129d8:	andeq	r0, r0, r8, lsl #25
   129dc:	ldr	r3, [r0, #32]
   129e0:	cmp	r3, #0
   129e4:	ldrge	r0, [r0, #36]	; 0x24
   129e8:	movlt	r0, #0
   129ec:	bx	lr
   129f0:	push	{r4, r5, r6, r7, r8, lr}
   129f4:	sub	sp, sp, #16
   129f8:	tst	r2, #1
   129fc:	mov	r5, r2
   12a00:	mov	r7, r0
   12a04:	mov	r8, r1
   12a08:	mov	r6, r3
   12a0c:	ldr	r4, [sp, #40]	; 0x28
   12a10:	bne	12b9c <ftello64@plt+0x19d4>
   12a14:	and	r3, r5, #3
   12a18:	cmp	r3, #3
   12a1c:	beq	12b20 <ftello64@plt+0x1958>
   12a20:	tst	r5, #2
   12a24:	bne	12b44 <ftello64@plt+0x197c>
   12a28:	tst	r5, #8
   12a2c:	bne	12b90 <ftello64@plt+0x19c8>
   12a30:	tst	r5, #16
   12a34:	bne	12a4c <ftello64@plt+0x1884>
   12a38:	tst	r5, #4
   12a3c:	bne	12a84 <ftello64@plt+0x18bc>
   12a40:	mov	r0, #0
   12a44:	add	sp, sp, #16
   12a48:	pop	{r4, r5, r6, r7, r8, pc}
   12a4c:	ldr	r3, [pc, #416]	; 12bf4 <ftello64@plt+0x1a2c>
   12a50:	add	r3, pc, r3
   12a54:	stm	sp, {r3, r8}
   12a58:	mov	r2, #1
   12a5c:	mvn	r3, #0
   12a60:	mov	r1, r4
   12a64:	mov	r0, r6
   12a68:	bl	111a4 <__snprintf_chk@plt>
   12a6c:	cmp	r0, r4
   12a70:	bhi	12b00 <ftello64@plt+0x1938>
   12a74:	tst	r5, #4
   12a78:	sub	r4, r4, r0
   12a7c:	add	r6, r6, r0
   12a80:	beq	12a40 <ftello64@plt+0x1878>
   12a84:	mov	r0, r7
   12a88:	bl	129dc <ftello64@plt+0x1814>
   12a8c:	ldr	r2, [pc, #356]	; 12bf8 <ftello64@plt+0x1a30>
   12a90:	mov	r5, r0
   12a94:	asr	ip, r0, #31
   12a98:	smull	r1, r3, r2, r5
   12a9c:	ldr	r1, [pc, #344]	; 12bfc <ftello64@plt+0x1a34>
   12aa0:	add	r3, r3, r5
   12aa4:	mov	r0, r6
   12aa8:	rsb	r3, ip, r3, asr #5
   12aac:	smull	r1, lr, r1, r5
   12ab0:	smull	r1, r2, r2, r3
   12ab4:	add	r1, r2, r3
   12ab8:	asr	r2, r3, #31
   12abc:	rsb	r2, r2, r1, asr #5
   12ac0:	add	r1, lr, r5
   12ac4:	rsb	r2, r2, r2, lsl #4
   12ac8:	ldr	lr, [pc, #304]	; 12c00 <ftello64@plt+0x1a38>
   12acc:	sub	r3, r3, r2, lsl #2
   12ad0:	cmp	r3, #0
   12ad4:	rsblt	r3, r3, #0
   12ad8:	rsb	r1, ip, r1, asr #11
   12adc:	add	lr, pc, lr
   12ae0:	stmib	sp, {r1, r3}
   12ae4:	str	lr, [sp]
   12ae8:	mvn	r3, #0
   12aec:	mov	r2, #1
   12af0:	mov	r1, r4
   12af4:	bl	111a4 <__snprintf_chk@plt>
   12af8:	cmp	r0, r4
   12afc:	bls	12a40 <ftello64@plt+0x1878>
   12b00:	ldr	r1, [pc, #252]	; 12c04 <ftello64@plt+0x1a3c>
   12b04:	mov	r2, #5
   12b08:	add	r1, pc, r1
   12b0c:	mov	r0, #0
   12b10:	bl	10f70 <dcgettext@plt>
   12b14:	bl	11078 <warnx@plt>
   12b18:	mvn	r0, #0
   12b1c:	b	12a44 <ftello64@plt+0x187c>
   12b20:	cmp	r4, #0
   12b24:	beq	12b00 <ftello64@plt+0x1938>
   12b28:	tst	r5, #32
   12b2c:	movne	r3, #84	; 0x54
   12b30:	moveq	r3, #32
   12b34:	tst	r5, #2
   12b38:	sub	r4, r4, #1
   12b3c:	strb	r3, [r6], #1
   12b40:	beq	12a28 <ftello64@plt+0x1860>
   12b44:	ldrd	r0, [r7]
   12b48:	ldr	r3, [pc, #184]	; 12c08 <ftello64@plt+0x1a40>
   12b4c:	ldr	r2, [r7, #8]
   12b50:	add	r3, pc, r3
   12b54:	str	r0, [sp, #12]
   12b58:	str	r1, [sp, #8]
   12b5c:	str	r2, [sp, #4]
   12b60:	str	r3, [sp]
   12b64:	mov	r2, #1
   12b68:	mvn	r3, #0
   12b6c:	mov	r1, r4
   12b70:	mov	r0, r6
   12b74:	bl	111a4 <__snprintf_chk@plt>
   12b78:	cmp	r0, r4
   12b7c:	bhi	12b00 <ftello64@plt+0x1938>
   12b80:	tst	r5, #8
   12b84:	sub	r4, r4, r0
   12b88:	add	r6, r6, r0
   12b8c:	beq	12a30 <ftello64@plt+0x1868>
   12b90:	ldr	r3, [pc, #116]	; 12c0c <ftello64@plt+0x1a44>
   12b94:	add	r3, pc, r3
   12b98:	b	12a54 <ftello64@plt+0x188c>
   12b9c:	ldr	r3, [r0, #20]
   12ba0:	ldr	r1, [r0, #16]
   12ba4:	ldr	r2, [pc, #100]	; 12c10 <ftello64@plt+0x1a48>
   12ba8:	ldr	r0, [r0, #12]
   12bac:	add	r3, r3, #1888	; 0x760
   12bb0:	add	r2, pc, r2
   12bb4:	add	r3, r3, #12
   12bb8:	add	r1, r1, #1
   12bbc:	str	r3, [sp, #4]
   12bc0:	str	r1, [sp, #8]
   12bc4:	str	r0, [sp, #12]
   12bc8:	str	r2, [sp]
   12bcc:	mov	r1, r4
   12bd0:	mov	r0, r6
   12bd4:	mvn	r3, #0
   12bd8:	mov	r2, #1
   12bdc:	bl	111a4 <__snprintf_chk@plt>
   12be0:	cmp	r0, r4
   12be4:	subls	r4, r4, r0
   12be8:	addls	r6, r6, r0
   12bec:	bls	12a14 <ftello64@plt+0x184c>
   12bf0:	b	12b00 <ftello64@plt+0x1938>
   12bf4:			; <UNDEFINED> instruction: 0x00000cb8
   12bf8:	stmhi	r8, {r0, r3, r7, fp, pc}
   12bfc:			; <UNDEFINED> instruction: 0x91a2b3c5
   12c00:	andeq	r0, r0, r4, lsr ip
   12c04:	andeq	r0, r0, r4, asr #23
   12c08:	andeq	r0, r0, r0, lsr #23
   12c0c:	andeq	r0, r0, ip, ror #22
   12c10:	andeq	r0, r0, ip, lsl #22
   12c14:	ldr	ip, [pc, #164]	; 12cc0 <ftello64@plt+0x1af8>
   12c18:	push	{r4, r5, r6, r7, r8, r9, lr}
   12c1c:	add	ip, pc, ip
   12c20:	ldr	lr, [pc, #156]	; 12cc4 <ftello64@plt+0x1afc>
   12c24:	sub	sp, sp, #60	; 0x3c
   12c28:	mov	r6, r1
   12c2c:	ldr	r4, [ip, lr]
   12c30:	tst	r1, #64	; 0x40
   12c34:	mov	r1, ip
   12c38:	ldr	ip, [r4]
   12c3c:	add	r5, sp, #8
   12c40:	mov	r8, r2
   12c44:	mov	r9, r3
   12c48:	mov	r7, r0
   12c4c:	str	ip, [sp, #52]	; 0x34
   12c50:	mov	r1, r5
   12c54:	beq	12c94 <ftello64@plt+0x1acc>
   12c58:	bl	10ed4 <gmtime_r@plt>
   12c5c:	cmp	r0, #0
   12c60:	beq	12c9c <ftello64@plt+0x1ad4>
   12c64:	str	r9, [sp]
   12c68:	mov	r3, r8
   12c6c:	mov	r2, r6
   12c70:	ldr	r1, [r7, #4]
   12c74:	mov	r0, r5
   12c78:	bl	129f0 <ftello64@plt+0x1828>
   12c7c:	ldr	r2, [sp, #52]	; 0x34
   12c80:	ldr	r3, [r4]
   12c84:	cmp	r2, r3
   12c88:	bne	12cbc <ftello64@plt+0x1af4>
   12c8c:	add	sp, sp, #60	; 0x3c
   12c90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12c94:	bl	10f94 <localtime_r@plt>
   12c98:	b	12c5c <ftello64@plt+0x1a94>
   12c9c:	ldr	r1, [pc, #36]	; 12cc8 <ftello64@plt+0x1b00>
   12ca0:	mov	r2, #5
   12ca4:	add	r1, pc, r1
   12ca8:	bl	10f70 <dcgettext@plt>
   12cac:	ldr	r1, [r7]
   12cb0:	bl	11078 <warnx@plt>
   12cb4:	mvn	r0, #0
   12cb8:	b	12c7c <ftello64@plt+0x1ab4>
   12cbc:	bl	10f7c <__stack_chk_fail@plt>
   12cc0:	andeq	r1, r1, r0, asr #5
   12cc4:	andeq	r0, r0, r0, lsl r1
   12cc8:	andeq	r0, r0, r8, ror sl
   12ccc:	push	{lr}		; (str lr, [sp, #-4]!)
   12cd0:	sub	sp, sp, #12
   12cd4:	str	r3, [sp]
   12cd8:	mov	r3, r2
   12cdc:	mov	r2, r1
   12ce0:	mov	r1, #0
   12ce4:	bl	129f0 <ftello64@plt+0x1828>
   12ce8:	add	sp, sp, #12
   12cec:	pop	{pc}		; (ldr pc, [sp], #4)
   12cf0:	ldr	ip, [pc, #164]	; 12d9c <ftello64@plt+0x1bd4>
   12cf4:	push	{r4, r5, r6, r7, r8, r9, lr}
   12cf8:	add	ip, pc, ip
   12cfc:	ldr	lr, [pc, #156]	; 12da0 <ftello64@plt+0x1bd8>
   12d00:	sub	sp, sp, #60	; 0x3c
   12d04:	mov	r6, r1
   12d08:	ldr	r4, [ip, lr]
   12d0c:	tst	r1, #64	; 0x40
   12d10:	mov	r1, ip
   12d14:	ldr	ip, [r4]
   12d18:	add	r5, sp, #8
   12d1c:	mov	r7, r2
   12d20:	mov	r8, r3
   12d24:	mov	r9, r0
   12d28:	str	ip, [sp, #52]	; 0x34
   12d2c:	mov	r1, r5
   12d30:	beq	12d70 <ftello64@plt+0x1ba8>
   12d34:	bl	10ed4 <gmtime_r@plt>
   12d38:	cmp	r0, #0
   12d3c:	beq	12d78 <ftello64@plt+0x1bb0>
   12d40:	str	r8, [sp]
   12d44:	mov	r3, r7
   12d48:	mov	r2, r6
   12d4c:	mov	r0, r5
   12d50:	mov	r1, #0
   12d54:	bl	129f0 <ftello64@plt+0x1828>
   12d58:	ldr	r2, [sp, #52]	; 0x34
   12d5c:	ldr	r3, [r4]
   12d60:	cmp	r2, r3
   12d64:	bne	12d98 <ftello64@plt+0x1bd0>
   12d68:	add	sp, sp, #60	; 0x3c
   12d6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d70:	bl	10f94 <localtime_r@plt>
   12d74:	b	12d38 <ftello64@plt+0x1b70>
   12d78:	ldr	r1, [pc, #36]	; 12da4 <ftello64@plt+0x1bdc>
   12d7c:	mov	r2, #5
   12d80:	add	r1, pc, r1
   12d84:	bl	10f70 <dcgettext@plt>
   12d88:	mov	r1, r9
   12d8c:	bl	11078 <warnx@plt>
   12d90:	mvn	r0, #0
   12d94:	b	12d58 <ftello64@plt+0x1b90>
   12d98:	bl	10f7c <__stack_chk_fail@plt>
   12d9c:	andeq	r1, r1, r4, ror #3
   12da0:	andeq	r0, r0, r0, lsl r1
   12da4:	muleq	r0, ip, r9
   12da8:	push	{r4, r5, r6, lr}
   12dac:	mov	r4, r1
   12db0:	ldr	r1, [r1]
   12db4:	mov	r5, r0
   12db8:	cmp	r1, #0
   12dbc:	beq	12df8 <ftello64@plt+0x1c30>
   12dc0:	ldr	lr, [r5]
   12dc4:	ldr	r3, [pc, #60]	; 12e08 <ftello64@plt+0x1c40>
   12dc8:	asr	r2, r1, #31
   12dcc:	asr	r0, lr, #31
   12dd0:	smull	r4, ip, r3, lr
   12dd4:	smull	r4, r3, r3, r1
   12dd8:	add	ip, ip, lr
   12ddc:	add	r3, r3, r1
   12de0:	rsb	r0, r0, ip, asr #16
   12de4:	rsb	r3, r2, r3, asr #16
   12de8:	sub	r0, r0, r3
   12dec:	clz	r0, r0
   12df0:	lsr	r0, r0, #5
   12df4:	pop	{r4, r5, r6, pc}
   12df8:	mov	r0, r4
   12dfc:	bl	10fdc <gettimeofday@plt>
   12e00:	ldr	r1, [r4]
   12e04:	b	12dc0 <ftello64@plt+0x1bf8>
   12e08:	eorgt	r4, lr, #29360128	; 0x1c00000
   12e0c:	push	{r4, r5, r6, lr}
   12e10:	mov	r4, r1
   12e14:	ldr	r1, [r1]
   12e18:	mov	r5, r0
   12e1c:	cmp	r1, #0
   12e20:	beq	12e54 <ftello64@plt+0x1c8c>
   12e24:	ldr	r3, [r5]
   12e28:	ldr	ip, [pc, #52]	; 12e64 <ftello64@plt+0x1c9c>
   12e2c:	asr	r2, r1, #31
   12e30:	asr	r0, r3, #31
   12e34:	smull	lr, r3, ip, r3
   12e38:	smull	ip, r1, ip, r1
   12e3c:	rsb	r0, r0, r3, asr #23
   12e40:	rsb	r1, r2, r1, asr #23
   12e44:	sub	r0, r0, r1
   12e48:	clz	r0, r0
   12e4c:	lsr	r0, r0, #5
   12e50:	pop	{r4, r5, r6, pc}
   12e54:	mov	r0, r4
   12e58:	bl	10fdc <gettimeofday@plt>
   12e5c:	ldr	r1, [r4]
   12e60:	b	12e24 <ftello64@plt+0x1c5c>
   12e64:	ldrmi	sl, [r8], #-1147	; 0xfffffb85
   12e68:	ldr	ip, [pc, #276]	; 12f84 <ftello64@plt+0x1dbc>
   12e6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12e70:	add	ip, pc, ip
   12e74:	ldr	lr, [pc, #268]	; 12f88 <ftello64@plt+0x1dc0>
   12e78:	sub	sp, sp, #68	; 0x44
   12e7c:	add	r7, sp, #16
   12e80:	ldr	r4, [ip, lr]
   12e84:	mov	r8, r3
   12e88:	mov	r6, r1
   12e8c:	ldr	r3, [r4]
   12e90:	mov	r1, r7
   12e94:	mov	r5, r0
   12e98:	mov	r9, r2
   12e9c:	str	r3, [sp, #60]	; 0x3c
   12ea0:	bl	10f94 <localtime_r@plt>
   12ea4:	mov	r1, r6
   12ea8:	mov	r0, r5
   12eac:	bl	12da8 <ftello64@plt+0x1be0>
   12eb0:	cmp	r0, #0
   12eb4:	beq	12f10 <ftello64@plt+0x1d48>
   12eb8:	ldr	r3, [pc, #204]	; 12f8c <ftello64@plt+0x1dc4>
   12ebc:	ldr	r1, [sp, #20]
   12ec0:	ldr	r2, [sp, #24]
   12ec4:	add	r3, pc, r3
   12ec8:	str	r1, [sp, #8]
   12ecc:	str	r2, [sp, #4]
   12ed0:	str	r3, [sp]
   12ed4:	mov	r0, r8
   12ed8:	mvn	r3, #0
   12edc:	mov	r2, #1
   12ee0:	ldr	r1, [sp, #96]	; 0x60
   12ee4:	bl	111a4 <__snprintf_chk@plt>
   12ee8:	ldr	r3, [sp, #96]	; 0x60
   12eec:	cmp	r0, r3
   12ef0:	movls	r0, #0
   12ef4:	mvnhi	r0, #0
   12ef8:	ldr	r2, [sp, #60]	; 0x3c
   12efc:	ldr	r3, [r4]
   12f00:	cmp	r2, r3
   12f04:	bne	12f80 <ftello64@plt+0x1db8>
   12f08:	add	sp, sp, #68	; 0x44
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12f10:	mov	r1, r6
   12f14:	mov	r0, r5
   12f18:	bl	12e0c <ftello64@plt+0x1c44>
   12f1c:	mov	r3, r7
   12f20:	cmp	r0, #0
   12f24:	mov	r0, r8
   12f28:	beq	12f6c <ftello64@plt+0x1da4>
   12f2c:	tst	r9, #2
   12f30:	bne	12f58 <ftello64@plt+0x1d90>
   12f34:	ldr	r2, [pc, #84]	; 12f90 <ftello64@plt+0x1dc8>
   12f38:	ldr	r1, [sp, #96]	; 0x60
   12f3c:	add	r2, pc, r2
   12f40:	bl	11018 <strftime@plt>
   12f44:	cmp	r0, #0
   12f48:	movgt	r0, #0
   12f4c:	movle	r0, #1
   12f50:	rsb	r0, r0, #0
   12f54:	b	12ef8 <ftello64@plt+0x1d30>
   12f58:	ldr	r2, [pc, #52]	; 12f94 <ftello64@plt+0x1dcc>
   12f5c:	ldr	r1, [sp, #96]	; 0x60
   12f60:	add	r2, pc, r2
   12f64:	bl	11018 <strftime@plt>
   12f68:	b	12f44 <ftello64@plt+0x1d7c>
   12f6c:	ldr	r2, [pc, #36]	; 12f98 <ftello64@plt+0x1dd0>
   12f70:	ldr	r1, [sp, #96]	; 0x60
   12f74:	add	r2, pc, r2
   12f78:	bl	11018 <strftime@plt>
   12f7c:	b	12f44 <ftello64@plt+0x1d7c>
   12f80:	bl	10f7c <__stack_chk_fail@plt>
   12f84:	andeq	r1, r1, ip, rrx
   12f88:	andeq	r0, r0, r0, lsl r1
   12f8c:	andeq	r0, r0, r4, ror r8
   12f90:	andeq	r0, r0, r4, lsl r8
   12f94:	andeq	r0, r0, r4, ror #15
   12f98:	andeq	r0, r0, r4, ror #15
   12f9c:	cmp	r3, #0
   12fa0:	cmpeq	r2, #0
   12fa4:	bne	12fbc <ftello64@plt+0x1df4>
   12fa8:	cmp	r1, #0
   12fac:	cmpeq	r0, #0
   12fb0:	mvnne	r1, #0
   12fb4:	mvnne	r0, #0
   12fb8:	b	12fd8 <ftello64@plt+0x1e10>
   12fbc:	sub	sp, sp, #8
   12fc0:	push	{sp, lr}
   12fc4:	bl	12fe8 <ftello64@plt+0x1e20>
   12fc8:	ldr	lr, [sp, #4]
   12fcc:	add	sp, sp, #8
   12fd0:	pop	{r2, r3}
   12fd4:	bx	lr
   12fd8:	push	{r1, lr}
   12fdc:	mov	r0, #8
   12fe0:	bl	10ec8 <raise@plt>
   12fe4:	pop	{r1, pc}
   12fe8:	cmp	r1, r3
   12fec:	cmpeq	r0, r2
   12ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ff4:	mov	r4, r0
   12ff8:	movcc	r0, #0
   12ffc:	mov	r5, r1
   13000:	ldr	lr, [sp, #36]	; 0x24
   13004:	movcc	r1, r0
   13008:	bcc	13104 <ftello64@plt+0x1f3c>
   1300c:	cmp	r3, #0
   13010:	clzeq	ip, r2
   13014:	clzne	ip, r3
   13018:	addeq	ip, ip, #32
   1301c:	cmp	r5, #0
   13020:	clzeq	r1, r4
   13024:	addeq	r1, r1, #32
   13028:	clzne	r1, r5
   1302c:	sub	ip, ip, r1
   13030:	sub	sl, ip, #32
   13034:	lsl	r9, r3, ip
   13038:	rsb	fp, ip, #32
   1303c:	orr	r9, r9, r2, lsl sl
   13040:	orr	r9, r9, r2, lsr fp
   13044:	lsl	r8, r2, ip
   13048:	cmp	r5, r9
   1304c:	cmpeq	r4, r8
   13050:	movcc	r0, #0
   13054:	movcc	r1, r0
   13058:	bcc	13074 <ftello64@plt+0x1eac>
   1305c:	mov	r0, #1
   13060:	subs	r4, r4, r8
   13064:	lsl	r1, r0, sl
   13068:	orr	r1, r1, r0, lsr fp
   1306c:	lsl	r0, r0, ip
   13070:	sbc	r5, r5, r9
   13074:	cmp	ip, #0
   13078:	beq	13104 <ftello64@plt+0x1f3c>
   1307c:	lsr	r6, r8, #1
   13080:	orr	r6, r6, r9, lsl #31
   13084:	lsr	r7, r9, #1
   13088:	mov	r2, ip
   1308c:	b	130b0 <ftello64@plt+0x1ee8>
   13090:	subs	r3, r4, r6
   13094:	sbc	r8, r5, r7
   13098:	adds	r3, r3, r3
   1309c:	adc	r8, r8, r8
   130a0:	adds	r4, r3, #1
   130a4:	adc	r5, r8, #0
   130a8:	subs	r2, r2, #1
   130ac:	beq	130cc <ftello64@plt+0x1f04>
   130b0:	cmp	r5, r7
   130b4:	cmpeq	r4, r6
   130b8:	bcs	13090 <ftello64@plt+0x1ec8>
   130bc:	adds	r4, r4, r4
   130c0:	adc	r5, r5, r5
   130c4:	subs	r2, r2, #1
   130c8:	bne	130b0 <ftello64@plt+0x1ee8>
   130cc:	lsr	r3, r4, ip
   130d0:	orr	r3, r3, r5, lsl fp
   130d4:	lsr	r2, r5, ip
   130d8:	orr	r3, r3, r5, lsr sl
   130dc:	adds	r0, r0, r4
   130e0:	mov	r4, r3
   130e4:	lsl	r3, r2, ip
   130e8:	orr	r3, r3, r4, lsl sl
   130ec:	lsl	ip, r4, ip
   130f0:	orr	r3, r3, r4, lsr fp
   130f4:	adc	r1, r1, r5
   130f8:	subs	r0, r0, ip
   130fc:	mov	r5, r2
   13100:	sbc	r1, r1, r3
   13104:	cmp	lr, #0
   13108:	strdne	r4, [lr]
   1310c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13114:	mov	r7, r0
   13118:	ldr	r6, [pc, #72]	; 13168 <ftello64@plt+0x1fa0>
   1311c:	ldr	r5, [pc, #72]	; 1316c <ftello64@plt+0x1fa4>
   13120:	add	r6, pc, r6
   13124:	add	r5, pc, r5
   13128:	sub	r6, r6, r5
   1312c:	mov	r8, r1
   13130:	mov	r9, r2
   13134:	bl	10ea8 <raise@plt-0x20>
   13138:	asrs	r6, r6, #2
   1313c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13140:	mov	r4, #0
   13144:	add	r4, r4, #1
   13148:	ldr	r3, [r5], #4
   1314c:	mov	r2, r9
   13150:	mov	r1, r8
   13154:	mov	r0, r7
   13158:	blx	r3
   1315c:	cmp	r6, r4
   13160:	bne	13144 <ftello64@plt+0x1f7c>
   13164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13168:	andeq	r0, r1, r4, lsl #21
   1316c:	andeq	r0, r1, ip, ror sl
   13170:	bx	lr
   13174:	ldr	r3, [pc, #12]	; 13188 <ftello64@plt+0x1fc0>
   13178:	mov	r1, #0
   1317c:	add	r3, pc, r3
   13180:	ldr	r2, [r3]
   13184:	b	110a8 <__cxa_atexit@plt>
   13188:	andeq	r0, r1, r0, lsl #29

Disassembly of section .fini:

0001318c <.fini>:
   1318c:	push	{r3, lr}
   13190:	pop	{r3, pc}
