
raspbian-preinstalled/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010c78 <.init>:
   10c78:	push	{r3, lr}
   10c7c:	bl	113d8 <strspn@plt+0x4e8>
   10c80:	pop	{r3, pc}

Disassembly of section .plt:

00010c84 <calloc@plt-0x14>:
   10c84:	push	{lr}		; (str lr, [sp, #-4]!)
   10c88:	ldr	lr, [pc, #4]	; 10c94 <calloc@plt-0x4>
   10c8c:	add	lr, pc, lr
   10c90:	ldr	pc, [lr, #8]!
   10c94:	andeq	r7, r1, ip, ror #6

00010c98 <calloc@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #876]!	; 0x36c

00010ca4 <fputs_unlocked@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #868]!	; 0x364

00010cb0 <raise@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #860]!	; 0x35c

00010cbc <strcmp@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #852]!	; 0x354

00010cc8 <fflush@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #844]!	; 0x34c

00010cd4 <memmove@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #836]!	; 0x344

00010ce0 <free@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #828]!	; 0x33c

00010cec <_exit@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #820]!	; 0x334

00010cf8 <memcpy@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #812]!	; 0x32c

00010d04 <mbsinit@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #804]!	; 0x324

00010d10 <memcmp@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #796]!	; 0x31c

00010d1c <dcgettext@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #788]!	; 0x314

00010d28 <__stack_chk_fail@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #780]!	; 0x30c

00010d34 <realloc@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #772]!	; 0x304

00010d40 <textdomain@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #764]!	; 0x2fc

00010d4c <__fxstatat64@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #756]!	; 0x2f4

00010d58 <iswprint@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #748]!	; 0x2ec

00010d64 <readlink@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #94208	; 0x17000
   10d6c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d70 <fwrite@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #94208	; 0x17000
   10d78:	ldr	pc, [ip, #732]!	; 0x2dc

00010d7c <lseek64@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #724]!	; 0x2d4

00010d88 <__ctype_get_mb_cur_max@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #716]!	; 0x2cc

00010d94 <__fpending@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #708]!	; 0x2c4

00010da0 <mbrtowc@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #94208	; 0x17000
   10da8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dac <error@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #94208	; 0x17000
   10db4:	ldr	pc, [ip, #692]!	; 0x2b4

00010db8 <malloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dc4 <__libc_start_main@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #676]!	; 0x2a4

00010dd0 <__freading@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #668]!	; 0x29c

00010ddc <__gmon_start__@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #660]!	; 0x294

00010de8 <getopt_long@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #652]!	; 0x28c

00010df4 <__ctype_b_loc@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #644]!	; 0x284

00010e00 <getcwd@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #636]!	; 0x27c

00010e0c <exit@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #628]!	; 0x274

00010e18 <strlen@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #620]!	; 0x26c

00010e24 <__errno_location@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #612]!	; 0x264

00010e30 <__cxa_atexit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #604]!	; 0x25c

00010e3c <memset@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #596]!	; 0x254

00010e48 <__printf_chk@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #588]!	; 0x24c

00010e54 <fileno@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #580]!	; 0x244

00010e60 <__fprintf_chk@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #572]!	; 0x23c

00010e6c <fclose@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #564]!	; 0x234

00010e78 <fseeko64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #556]!	; 0x22c

00010e84 <__overflow@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #548]!	; 0x224

00010e90 <setlocale@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #540]!	; 0x21c

00010e9c <strrchr@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #532]!	; 0x214

00010ea8 <nl_langinfo@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #524]!	; 0x20c

00010eb4 <bindtextdomain@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #516]!	; 0x204

00010ec0 <__xstat64@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #508]!	; 0x1fc

00010ecc <strncmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #500]!	; 0x1f4

00010ed8 <abort@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ee4 <__lxstat64@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #484]!	; 0x1e4

00010ef0 <strspn@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #476]!	; 0x1dc

Disassembly of section .text:

00010f00 <.text>:
   10f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f04:	mov	r7, r0
   10f08:	sub	sp, sp, #20
   10f0c:	ldr	r0, [r1]
   10f10:	mov	r6, r1
   10f14:	bl	135ac <strspn@plt+0x26bc>
   10f18:	ldr	r1, [pc, #1076]	; 11354 <strspn@plt+0x464>
   10f1c:	mov	r0, #6
   10f20:	bl	10e90 <setlocale@plt>
   10f24:	ldr	r1, [pc, #1068]	; 11358 <strspn@plt+0x468>
   10f28:	ldr	r0, [pc, #1068]	; 1135c <strspn@plt+0x46c>
   10f2c:	bl	10eb4 <bindtextdomain@plt>
   10f30:	ldr	r9, [pc, #1064]	; 11360 <strspn@plt+0x470>
   10f34:	ldr	r0, [pc, #1056]	; 1135c <strspn@plt+0x46c>
   10f38:	ldr	r8, [pc, #1060]	; 11364 <strspn@plt+0x474>
   10f3c:	ldr	fp, [pc, #1060]	; 11368 <strspn@plt+0x478>
   10f40:	ldr	sl, [pc, #1060]	; 1136c <strspn@plt+0x47c>
   10f44:	bl	10d40 <textdomain@plt>
   10f48:	mov	r5, #1
   10f4c:	ldr	r0, [pc, #1052]	; 11370 <strspn@plt+0x480>
   10f50:	bl	16b24 <strspn@plt+0x5c34>
   10f54:	mov	r3, #0
   10f58:	str	r3, [sp, #8]
   10f5c:	str	r3, [sp, #12]
   10f60:	mov	r4, #0
   10f64:	str	r4, [sp]
   10f68:	mov	r3, r9
   10f6c:	mov	r2, r8
   10f70:	mov	r1, r6
   10f74:	mov	r0, r7
   10f78:	bl	10de8 <getopt_long@plt>
   10f7c:	cmn	r0, #1
   10f80:	beq	11094 <strspn@plt+0x1a4>
   10f84:	cmp	r0, #109	; 0x6d
   10f88:	beq	1106c <strspn@plt+0x17c>
   10f8c:	ble	10fb0 <strspn@plt+0xc0>
   10f90:	cmp	r0, #122	; 0x7a
   10f94:	beq	11078 <strspn@plt+0x188>
   10f98:	bgt	10fe4 <strspn@plt+0xf4>
   10f9c:	cmp	r0, #113	; 0x71
   10fa0:	bne	10fd0 <strspn@plt+0xe0>
   10fa4:	ldr	r3, [pc, #968]	; 11374 <strspn@plt+0x484>
   10fa8:	strb	r4, [r3]
   10fac:	b	10f60 <strspn@plt+0x70>
   10fb0:	cmp	r0, #76	; 0x4c
   10fb4:	beq	11084 <strspn@plt+0x194>
   10fb8:	ble	1100c <strspn@plt+0x11c>
   10fbc:	cmp	r0, #80	; 0x50
   10fc0:	bne	10ffc <strspn@plt+0x10c>
   10fc4:	bic	r5, r5, #4
   10fc8:	strb	r4, [fp]
   10fcc:	b	10f60 <strspn@plt+0x70>
   10fd0:	cmp	r0, #115	; 0x73
   10fd4:	bne	11314 <strspn@plt+0x424>
   10fd8:	orr	r5, r5, #4
   10fdc:	strb	r4, [fp]
   10fe0:	b	10f60 <strspn@plt+0x70>
   10fe4:	cmp	r0, #256	; 0x100
   10fe8:	bne	11044 <strspn@plt+0x154>
   10fec:	ldr	r3, [pc, #900]	; 11378 <strspn@plt+0x488>
   10ff0:	ldr	r3, [r3]
   10ff4:	str	r3, [sp, #12]
   10ff8:	b	10f60 <strspn@plt+0x70>
   10ffc:	cmp	r0, #101	; 0x65
   11000:	bne	11314 <strspn@plt+0x424>
   11004:	bic	r5, r5, #3
   11008:	b	10f60 <strspn@plt+0x70>
   1100c:	cmn	r0, #3
   11010:	bne	1105c <strspn@plt+0x16c>
   11014:	ldr	r1, [pc, #864]	; 1137c <strspn@plt+0x48c>
   11018:	ldr	r3, [pc, #864]	; 11380 <strspn@plt+0x490>
   1101c:	ldr	r2, [pc, #864]	; 11384 <strspn@plt+0x494>
   11020:	str	r4, [sp, #4]
   11024:	ldr	r0, [r1]
   11028:	ldr	r3, [r3]
   1102c:	ldr	r1, [pc, #852]	; 11388 <strspn@plt+0x498>
   11030:	str	r2, [sp]
   11034:	ldr	r2, [pc, #848]	; 1138c <strspn@plt+0x49c>
   11038:	bl	15e08 <strspn@plt+0x4f18>
   1103c:	mov	r0, r4
   11040:	bl	10e0c <exit@plt>
   11044:	cmp	r0, sl
   11048:	bne	11314 <strspn@plt+0x424>
   1104c:	ldr	r3, [pc, #804]	; 11378 <strspn@plt+0x488>
   11050:	ldr	r3, [r3]
   11054:	str	r3, [sp, #8]
   11058:	b	10f60 <strspn@plt+0x70>
   1105c:	cmn	r0, #2
   11060:	bne	11314 <strspn@plt+0x424>
   11064:	mov	r0, r4
   11068:	bl	1163c <strspn@plt+0x74c>
   1106c:	bic	r5, r5, #3
   11070:	orr	r5, r5, #2
   11074:	b	10f60 <strspn@plt+0x70>
   11078:	mov	r3, #1
   1107c:	strb	r3, [fp, #1]
   11080:	b	10f60 <strspn@plt+0x70>
   11084:	mov	r3, #1
   11088:	orr	r5, r5, #4
   1108c:	strb	r3, [fp]
   11090:	b	10f60 <strspn@plt+0x70>
   11094:	ldr	r8, [pc, #756]	; 11390 <strspn@plt+0x4a0>
   11098:	ldr	r3, [r8]
   1109c:	cmp	r3, r7
   110a0:	bge	112f4 <strspn@plt+0x404>
   110a4:	ldr	r1, [sp, #8]
   110a8:	ldr	r2, [sp, #12]
   110ac:	cmp	r1, #0
   110b0:	clz	r3, r2
   110b4:	lsr	r3, r3, #5
   110b8:	moveq	r3, #0
   110bc:	cmp	r3, #0
   110c0:	and	r4, r5, #3
   110c4:	bne	11248 <strspn@plt+0x358>
   110c8:	cmp	r2, #0
   110cc:	bne	11250 <strspn@plt+0x360>
   110d0:	ldr	r3, [sp, #8]
   110d4:	ldr	r2, [sp, #12]
   110d8:	cmp	r3, r2
   110dc:	beq	112bc <strspn@plt+0x3cc>
   110e0:	ldr	r0, [sp, #8]
   110e4:	cmp	r0, #0
   110e8:	beq	11124 <strspn@plt+0x234>
   110ec:	mov	r1, r5
   110f0:	bl	11544 <strspn@plt+0x654>
   110f4:	subs	r9, r0, #0
   110f8:	beq	11348 <strspn@plt+0x458>
   110fc:	cmp	r4, #0
   11100:	beq	112e0 <strspn@plt+0x3f0>
   11104:	ldr	r4, [pc, #604]	; 11368 <strspn@plt+0x478>
   11108:	mov	r0, r9
   1110c:	ldr	sl, [r4, #4]
   11110:	mov	r1, sl
   11114:	bl	1148c <strspn@plt+0x59c>
   11118:	subs	fp, r0, #0
   1111c:	strne	r9, [r4, #8]
   11120:	beq	112cc <strspn@plt+0x3dc>
   11124:	ldr	r3, [r8]
   11128:	cmp	r3, r7
   1112c:	movge	r3, #1
   11130:	strge	r3, [sp, #8]
   11134:	bge	112a4 <strspn@plt+0x3b4>
   11138:	mov	r2, #1
   1113c:	ldr	r9, [pc, #548]	; 11368 <strspn@plt+0x478>
   11140:	ldr	fp, [pc, #564]	; 1137c <strspn@plt+0x48c>
   11144:	str	r2, [sp, #8]
   11148:	b	111e8 <strspn@plt+0x2f8>
   1114c:	ldr	sl, [r9, #4]
   11150:	cmp	sl, #0
   11154:	beq	11190 <strspn@plt+0x2a0>
   11158:	ldr	r0, [r9, #8]
   1115c:	cmp	r0, #0
   11160:	beq	11174 <strspn@plt+0x284>
   11164:	mov	r1, r4
   11168:	bl	1148c <strspn@plt+0x59c>
   1116c:	cmp	r0, #0
   11170:	beq	11190 <strspn@plt+0x2a0>
   11174:	mov	r3, #0
   11178:	mov	r1, sl
   1117c:	mov	r2, r3
   11180:	mov	r0, r4
   11184:	bl	119b8 <strspn@plt+0xac8>
   11188:	cmp	r0, #0
   1118c:	bne	1119c <strspn@plt+0x2ac>
   11190:	ldr	r1, [fp]
   11194:	mov	r0, r4
   11198:	bl	10ca4 <fputs_unlocked@plt>
   1119c:	ldr	r0, [fp]
   111a0:	ldrb	r1, [r9, #1]
   111a4:	ldr	r3, [r0, #20]
   111a8:	ldr	r2, [r0, #24]
   111ac:	cmp	r1, #0
   111b0:	movne	r1, #0
   111b4:	moveq	r1, #10
   111b8:	cmp	r3, r2
   111bc:	addcc	r2, r3, #1
   111c0:	strcc	r2, [r0, #20]
   111c4:	strbcc	r1, [r3]
   111c8:	bcs	112b4 <strspn@plt+0x3c4>
   111cc:	mov	r0, r4
   111d0:	bl	10ce0 <free@plt>
   111d4:	ldr	r3, [r8]
   111d8:	add	r3, r3, #1
   111dc:	cmp	r3, r7
   111e0:	str	r3, [r8]
   111e4:	bge	112a4 <strspn@plt+0x3b4>
   111e8:	ldr	sl, [r6, r3, lsl #2]
   111ec:	mov	r1, r5
   111f0:	mov	r0, sl
   111f4:	bl	11544 <strspn@plt+0x654>
   111f8:	subs	r4, r0, #0
   111fc:	bne	1114c <strspn@plt+0x25c>
   11200:	ldr	r3, [pc, #364]	; 11374 <strspn@plt+0x484>
   11204:	ldrb	r3, [r3]
   11208:	cmp	r3, #0
   1120c:	str	r3, [sp, #8]
   11210:	beq	111d4 <strspn@plt+0x2e4>
   11214:	bl	10e24 <__errno_location@plt>
   11218:	mov	r2, sl
   1121c:	mov	r1, #3
   11220:	str	r4, [sp, #8]
   11224:	ldr	sl, [r0]
   11228:	mov	r0, r4
   1122c:	bl	15644 <strspn@plt+0x4754>
   11230:	mov	r1, sl
   11234:	ldr	r2, [pc, #344]	; 11394 <strspn@plt+0x4a4>
   11238:	mov	r3, r0
   1123c:	mov	r0, r4
   11240:	bl	10dac <error@plt>
   11244:	b	111d4 <strspn@plt+0x2e4>
   11248:	ldr	r3, [sp, #8]
   1124c:	str	r3, [sp, #12]
   11250:	mov	r1, r5
   11254:	ldr	r0, [sp, #12]
   11258:	bl	11544 <strspn@plt+0x654>
   1125c:	ldr	r3, [pc, #260]	; 11368 <strspn@plt+0x478>
   11260:	cmp	r0, #0
   11264:	mov	r9, r0
   11268:	str	r0, [r3, #4]
   1126c:	beq	1131c <strspn@plt+0x42c>
   11270:	cmp	r4, #0
   11274:	bne	110d0 <strspn@plt+0x1e0>
   11278:	bl	11598 <strspn@plt+0x6a8>
   1127c:	cmp	r0, #0
   11280:	ldreq	r2, [sp, #12]
   11284:	bne	110d0 <strspn@plt+0x1e0>
   11288:	mov	r1, #3
   1128c:	bl	15644 <strspn@plt+0x4754>
   11290:	ldr	r2, [pc, #252]	; 11394 <strspn@plt+0x4a4>
   11294:	mov	r1, #20
   11298:	mov	r3, r0
   1129c:	mov	r0, #1
   112a0:	bl	10dac <error@plt>
   112a4:	ldr	r3, [sp, #8]
   112a8:	eor	r0, r3, #1
   112ac:	add	sp, sp, #20
   112b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112b4:	bl	10e84 <__overflow@plt>
   112b8:	b	111cc <strspn@plt+0x2dc>
   112bc:	ldr	r3, [pc, #164]	; 11368 <strspn@plt+0x478>
   112c0:	ldr	r2, [r3, #4]
   112c4:	str	r2, [r3, #8]
   112c8:	b	11124 <strspn@plt+0x234>
   112cc:	mov	r0, r9
   112d0:	bl	10ce0 <free@plt>
   112d4:	str	sl, [r4, #8]
   112d8:	str	fp, [r4, #4]
   112dc:	b	11124 <strspn@plt+0x234>
   112e0:	bl	11598 <strspn@plt+0x6a8>
   112e4:	cmp	r0, #0
   112e8:	bne	11104 <strspn@plt+0x214>
   112ec:	ldr	r2, [sp, #8]
   112f0:	b	11288 <strspn@plt+0x398>
   112f4:	mov	r2, #5
   112f8:	ldr	r1, [pc, #152]	; 11398 <strspn@plt+0x4a8>
   112fc:	mov	r0, r4
   11300:	bl	10d1c <dcgettext@plt>
   11304:	mov	r1, r4
   11308:	mov	r2, r0
   1130c:	mov	r0, r4
   11310:	bl	10dac <error@plt>
   11314:	mov	r0, #1
   11318:	bl	1163c <strspn@plt+0x74c>
   1131c:	bl	10e24 <__errno_location@plt>
   11320:	ldr	r2, [sp, #12]
   11324:	ldr	r4, [r0]
   11328:	mov	r1, #3
   1132c:	mov	r0, r9
   11330:	bl	15644 <strspn@plt+0x4754>
   11334:	mov	r1, r4
   11338:	ldr	r2, [pc, #84]	; 11394 <strspn@plt+0x4a4>
   1133c:	mov	r3, r0
   11340:	mov	r0, #1
   11344:	bl	10dac <error@plt>
   11348:	bl	10e24 <__errno_location@plt>
   1134c:	ldr	r2, [sp, #8]
   11350:	b	11324 <strspn@plt+0x434>
   11354:			; <UNDEFINED> instruction: 0x000172b8
   11358:	ldrdeq	r7, [r1], -r0
   1135c:	andeq	r7, r1, r4, lsr #32
   11360:	andeq	r6, r1, r0, lsl #23
   11364:	andeq	r7, r1, r4, ror #1
   11368:	andeq	r8, r2, r0, asr r1
   1136c:	andeq	r0, r0, r1, lsl #2
   11370:	andeq	r2, r1, ip, lsr #4
   11374:	andeq	r8, r2, r4, ror #1
   11378:	andeq	r8, r2, r8, asr #2
   1137c:	andeq	r8, r2, r4, asr #2
   11380:	andeq	r8, r2, r8, ror #1
   11384:	andeq	r7, r1, ip, ror #1
   11388:	andeq	r6, r1, r0, ror #24
   1138c:	andeq	r7, r1, r0, lsr #32
   11390:	andeq	r8, r2, r8, lsr r1
   11394:	andeq	r7, r1, r0, asr r2
   11398:	strdeq	r7, [r1], -ip
   1139c:	mov	fp, #0
   113a0:	mov	lr, #0
   113a4:	pop	{r1}		; (ldr r1, [sp], #4)
   113a8:	mov	r2, sp
   113ac:	push	{r2}		; (str r2, [sp, #-4]!)
   113b0:	push	{r0}		; (str r0, [sp, #-4]!)
   113b4:	ldr	ip, [pc, #16]	; 113cc <strspn@plt+0x4dc>
   113b8:	push	{ip}		; (str ip, [sp, #-4]!)
   113bc:	ldr	r0, [pc, #12]	; 113d0 <strspn@plt+0x4e0>
   113c0:	ldr	r3, [pc, #12]	; 113d4 <strspn@plt+0x4e4>
   113c4:	bl	10dc4 <__libc_start_main@plt>
   113c8:	bl	10ed8 <abort@plt>
   113cc:	andeq	r6, r1, r0, lsr #22
   113d0:	andeq	r0, r1, r0, lsl #30
   113d4:	andeq	r6, r1, r0, asr #21
   113d8:	ldr	r3, [pc, #20]	; 113f4 <strspn@plt+0x504>
   113dc:	ldr	r2, [pc, #20]	; 113f8 <strspn@plt+0x508>
   113e0:	add	r3, pc, r3
   113e4:	ldr	r2, [r3, r2]
   113e8:	cmp	r2, #0
   113ec:	bxeq	lr
   113f0:	b	10ddc <__gmon_start__@plt>
   113f4:	andeq	r6, r1, r8, lsl ip
   113f8:	ldrdeq	r0, [r0], -r8
   113fc:	ldr	r0, [pc, #24]	; 1141c <strspn@plt+0x52c>
   11400:	ldr	r3, [pc, #24]	; 11420 <strspn@plt+0x530>
   11404:	cmp	r3, r0
   11408:	bxeq	lr
   1140c:	ldr	r3, [pc, #16]	; 11424 <strspn@plt+0x534>
   11410:	cmp	r3, #0
   11414:	bxeq	lr
   11418:	bx	r3
   1141c:	andeq	r8, r2, r0, lsr r1
   11420:	andeq	r8, r2, r0, lsr r1
   11424:	andeq	r0, r0, r0
   11428:	ldr	r0, [pc, #36]	; 11454 <strspn@plt+0x564>
   1142c:	ldr	r1, [pc, #36]	; 11458 <strspn@plt+0x568>
   11430:	sub	r1, r1, r0
   11434:	asr	r1, r1, #2
   11438:	add	r1, r1, r1, lsr #31
   1143c:	asrs	r1, r1, #1
   11440:	bxeq	lr
   11444:	ldr	r3, [pc, #16]	; 1145c <strspn@plt+0x56c>
   11448:	cmp	r3, #0
   1144c:	bxeq	lr
   11450:	bx	r3
   11454:	andeq	r8, r2, r0, lsr r1
   11458:	andeq	r8, r2, r0, lsr r1
   1145c:	andeq	r0, r0, r0
   11460:	push	{r4, lr}
   11464:	ldr	r4, [pc, #24]	; 11484 <strspn@plt+0x594>
   11468:	ldrb	r3, [r4]
   1146c:	cmp	r3, #0
   11470:	popne	{r4, pc}
   11474:	bl	113fc <strspn@plt+0x50c>
   11478:	mov	r3, #1
   1147c:	strb	r3, [r4]
   11480:	pop	{r4, pc}
   11484:	andeq	r8, r2, ip, asr #2
   11488:	b	11428 <strspn@plt+0x538>
   1148c:	ldrb	r3, [r0, #1]
   11490:	mov	ip, r0
   11494:	cmp	r3, #0
   11498:	beq	1152c <strspn@plt+0x63c>
   1149c:	cmp	r3, #47	; 0x2f
   114a0:	beq	1150c <strspn@plt+0x61c>
   114a4:	ldrb	r2, [r1, #1]
   114a8:	clz	r0, r2
   114ac:	lsr	r0, r0, #5
   114b0:	cmp	r3, r2
   114b4:	orrne	r0, r0, #1
   114b8:	cmp	r0, #0
   114bc:	addeq	ip, ip, #1
   114c0:	addeq	r1, r1, #2
   114c4:	beq	114e8 <strspn@plt+0x5f8>
   114c8:	b	1153c <strspn@plt+0x64c>
   114cc:	ldrb	r2, [r1], #1
   114d0:	subs	r3, r3, r2
   114d4:	movne	r3, #1
   114d8:	cmp	r2, #0
   114dc:	moveq	r3, #1
   114e0:	cmp	r3, #0
   114e4:	bxne	lr
   114e8:	ldrb	r3, [ip, #1]!
   114ec:	cmp	r3, #0
   114f0:	bne	114cc <strspn@plt+0x5dc>
   114f4:	ldrb	r0, [r1]
   114f8:	cmp	r0, #0
   114fc:	cmpne	r0, #47	; 0x2f
   11500:	moveq	r0, #1
   11504:	movne	r0, #0
   11508:	bx	lr
   1150c:	ldrb	r2, [r0, #2]
   11510:	cmp	r2, #0
   11514:	bne	114a4 <strspn@plt+0x5b4>
   11518:	ldrb	r0, [r1, #1]
   1151c:	sub	r0, r0, #47	; 0x2f
   11520:	clz	r0, r0
   11524:	lsr	r0, r0, #5
   11528:	bx	lr
   1152c:	ldrb	r0, [r1, #1]
   11530:	subs	r0, r0, #47	; 0x2f
   11534:	movne	r0, #1
   11538:	bx	lr
   1153c:	mov	r0, #0
   11540:	bx	lr
   11544:	push	{r4, r5, r6, lr}
   11548:	mov	r5, r1
   1154c:	bl	11bf8 <strspn@plt+0xd08>
   11550:	ldr	r3, [pc, #60]	; 11594 <strspn@plt+0x6a4>
   11554:	ldrb	r3, [r3]
   11558:	cmp	r3, #0
   1155c:	mov	r4, r0
   11560:	beq	1156c <strspn@plt+0x67c>
   11564:	cmp	r0, #0
   11568:	bne	11574 <strspn@plt+0x684>
   1156c:	mov	r0, r4
   11570:	pop	{r4, r5, r6, pc}
   11574:	bic	r1, r5, #4
   11578:	bl	11bf8 <strspn@plt+0xd08>
   1157c:	mov	r5, r0
   11580:	mov	r0, r4
   11584:	mov	r4, r5
   11588:	bl	10ce0 <free@plt>
   1158c:	mov	r0, r4
   11590:	pop	{r4, r5, r6, pc}
   11594:	andeq	r8, r2, r0, asr r1
   11598:	push	{r4, r5, r6, lr}
   1159c:	sub	sp, sp, #112	; 0x70
   115a0:	ldr	r4, [pc, #140]	; 11634 <strspn@plt+0x744>
   115a4:	mov	r1, r0
   115a8:	mov	r5, r0
   115ac:	ldr	r3, [r4]
   115b0:	mov	r2, sp
   115b4:	mov	r0, #3
   115b8:	str	r3, [sp, #108]	; 0x6c
   115bc:	bl	10ec0 <__xstat64@plt>
   115c0:	cmp	r0, #0
   115c4:	bne	115f4 <strspn@plt+0x704>
   115c8:	ldr	r2, [sp, #108]	; 0x6c
   115cc:	ldr	r0, [sp, #16]
   115d0:	ldr	r3, [r4]
   115d4:	and	r0, r0, #61440	; 0xf000
   115d8:	cmp	r2, r3
   115dc:	sub	r0, r0, #16384	; 0x4000
   115e0:	clz	r0, r0
   115e4:	lsr	r0, r0, #5
   115e8:	bne	11630 <strspn@plt+0x740>
   115ec:	add	sp, sp, #112	; 0x70
   115f0:	pop	{r4, r5, r6, pc}
   115f4:	bl	10e24 <__errno_location@plt>
   115f8:	mov	r2, #5
   115fc:	ldr	r1, [pc, #52]	; 11638 <strspn@plt+0x748>
   11600:	ldr	r4, [r0]
   11604:	mov	r0, #0
   11608:	bl	10d1c <dcgettext@plt>
   1160c:	mov	r1, r5
   11610:	mov	r6, r0
   11614:	mov	r0, #4
   11618:	bl	15568 <strspn@plt+0x4678>
   1161c:	mov	r2, r6
   11620:	mov	r1, r4
   11624:	mov	r3, r0
   11628:	mov	r0, #1
   1162c:	bl	10dac <error@plt>
   11630:	bl	10d28 <__stack_chk_fail@plt>
   11634:	andeq	r7, r2, r8, lsl #30
   11638:	andeq	r6, r1, r0, asr ip
   1163c:	ldr	r3, [pc, #672]	; 118e4 <strspn@plt+0x9f4>
   11640:	push	{r7, lr}
   11644:	sub	sp, sp, #64	; 0x40
   11648:	ldr	r3, [r3]
   1164c:	subs	r5, r0, #0
   11650:	str	r3, [sp, #60]	; 0x3c
   11654:	beq	11690 <strspn@plt+0x7a0>
   11658:	ldr	r3, [pc, #648]	; 118e8 <strspn@plt+0x9f8>
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #644]	; 118ec <strspn@plt+0x9fc>
   11664:	mov	r0, #0
   11668:	ldr	r4, [r3]
   1166c:	bl	10d1c <dcgettext@plt>
   11670:	ldr	r3, [pc, #632]	; 118f0 <strspn@plt+0xa00>
   11674:	mov	r1, #1
   11678:	ldr	r3, [r3]
   1167c:	mov	r2, r0
   11680:	mov	r0, r4
   11684:	bl	10e60 <__fprintf_chk@plt>
   11688:	mov	r0, r5
   1168c:	bl	10e0c <exit@plt>
   11690:	mov	r2, #5
   11694:	ldr	r1, [pc, #600]	; 118f4 <strspn@plt+0xa04>
   11698:	bl	10d1c <dcgettext@plt>
   1169c:	ldr	r3, [pc, #588]	; 118f0 <strspn@plt+0xa00>
   116a0:	ldr	r4, [pc, #592]	; 118f8 <strspn@plt+0xa08>
   116a4:	ldr	r2, [r3]
   116a8:	mov	r1, r0
   116ac:	mov	r0, #1
   116b0:	bl	10e48 <__printf_chk@plt>
   116b4:	mov	r2, #5
   116b8:	ldr	r1, [pc, #572]	; 118fc <strspn@plt+0xa0c>
   116bc:	mov	r0, r5
   116c0:	bl	10d1c <dcgettext@plt>
   116c4:	ldr	r1, [r4]
   116c8:	bl	10ca4 <fputs_unlocked@plt>
   116cc:	mov	r2, #5
   116d0:	ldr	r1, [pc, #552]	; 11900 <strspn@plt+0xa10>
   116d4:	mov	r0, r5
   116d8:	bl	10d1c <dcgettext@plt>
   116dc:	ldr	r1, [r4]
   116e0:	bl	10ca4 <fputs_unlocked@plt>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #532]	; 11904 <strspn@plt+0xa14>
   116ec:	mov	r0, r5
   116f0:	bl	10d1c <dcgettext@plt>
   116f4:	ldr	r1, [r4]
   116f8:	bl	10ca4 <fputs_unlocked@plt>
   116fc:	mov	r2, #5
   11700:	ldr	r1, [pc, #512]	; 11908 <strspn@plt+0xa18>
   11704:	mov	r0, r5
   11708:	bl	10d1c <dcgettext@plt>
   1170c:	ldr	r1, [r4]
   11710:	bl	10ca4 <fputs_unlocked@plt>
   11714:	ldr	lr, [pc, #496]	; 1190c <strspn@plt+0xa1c>
   11718:	add	ip, sp, #4
   1171c:	ldm	lr!, {r0, r1, r2, r3}
   11720:	stmia	ip!, {r0, r1, r2, r3}
   11724:	ldm	lr!, {r0, r1, r2, r3}
   11728:	ldr	r6, [sp, #4]
   1172c:	stmia	ip!, {r0, r1, r2, r3}
   11730:	cmp	r6, #0
   11734:	ldm	lr!, {r0, r1, r2, r3}
   11738:	addeq	r4, sp, #4
   1173c:	stmia	ip!, {r0, r1, r2, r3}
   11740:	ldm	lr, {r0, r1}
   11744:	stm	ip, {r0, r1}
   11748:	beq	11778 <strspn@plt+0x888>
   1174c:	ldr	r7, [pc, #444]	; 11910 <strspn@plt+0xa20>
   11750:	add	r4, sp, #4
   11754:	b	11764 <strspn@plt+0x874>
   11758:	ldr	r6, [r4, #8]!
   1175c:	cmp	r6, #0
   11760:	beq	11778 <strspn@plt+0x888>
   11764:	mov	r1, r6
   11768:	mov	r0, r7
   1176c:	bl	10cbc <strcmp@plt>
   11770:	cmp	r0, #0
   11774:	bne	11758 <strspn@plt+0x868>
   11778:	ldr	r4, [r4, #4]
   1177c:	mov	r2, #5
   11780:	cmp	r4, #0
   11784:	ldr	r1, [pc, #392]	; 11914 <strspn@plt+0xa24>
   11788:	beq	11830 <strspn@plt+0x940>
   1178c:	mov	r0, #0
   11790:	bl	10d1c <dcgettext@plt>
   11794:	ldr	r3, [pc, #380]	; 11918 <strspn@plt+0xa28>
   11798:	ldr	r2, [pc, #380]	; 1191c <strspn@plt+0xa2c>
   1179c:	mov	r1, r0
   117a0:	mov	r0, #1
   117a4:	bl	10e48 <__printf_chk@plt>
   117a8:	mov	r1, #0
   117ac:	mov	r0, #5
   117b0:	bl	10e90 <setlocale@plt>
   117b4:	cmp	r0, #0
   117b8:	ldreq	r6, [pc, #336]	; 11910 <strspn@plt+0xa20>
   117bc:	beq	117d8 <strspn@plt+0x8e8>
   117c0:	mov	r2, #3
   117c4:	ldr	r1, [pc, #340]	; 11920 <strspn@plt+0xa30>
   117c8:	bl	10ecc <strncmp@plt>
   117cc:	ldr	r6, [pc, #316]	; 11910 <strspn@plt+0xa20>
   117d0:	cmp	r0, #0
   117d4:	bne	118c0 <strspn@plt+0x9d0>
   117d8:	mov	r2, #5
   117dc:	ldr	r1, [pc, #320]	; 11924 <strspn@plt+0xa34>
   117e0:	mov	r0, #0
   117e4:	bl	10d1c <dcgettext@plt>
   117e8:	ldr	r3, [pc, #288]	; 11910 <strspn@plt+0xa20>
   117ec:	ldr	r2, [pc, #292]	; 11918 <strspn@plt+0xa28>
   117f0:	mov	r1, r0
   117f4:	mov	r0, #1
   117f8:	bl	10e48 <__printf_chk@plt>
   117fc:	mov	r2, #5
   11800:	ldr	r1, [pc, #288]	; 11928 <strspn@plt+0xa38>
   11804:	mov	r0, #0
   11808:	bl	10d1c <dcgettext@plt>
   1180c:	ldr	r2, [pc, #280]	; 1192c <strspn@plt+0xa3c>
   11810:	cmp	r4, r6
   11814:	ldr	r3, [pc, #276]	; 11930 <strspn@plt+0xa40>
   11818:	movne	r3, r2
   1181c:	mov	r1, r0
   11820:	mov	r2, r4
   11824:	mov	r0, #1
   11828:	bl	10e48 <__printf_chk@plt>
   1182c:	b	11688 <strspn@plt+0x798>
   11830:	mov	r0, r4
   11834:	bl	10d1c <dcgettext@plt>
   11838:	ldr	r3, [pc, #216]	; 11918 <strspn@plt+0xa28>
   1183c:	ldr	r2, [pc, #216]	; 1191c <strspn@plt+0xa2c>
   11840:	mov	r1, r0
   11844:	mov	r0, #1
   11848:	bl	10e48 <__printf_chk@plt>
   1184c:	mov	r1, r4
   11850:	mov	r0, #5
   11854:	bl	10e90 <setlocale@plt>
   11858:	cmp	r0, #0
   1185c:	beq	11874 <strspn@plt+0x984>
   11860:	mov	r2, #3
   11864:	ldr	r1, [pc, #180]	; 11920 <strspn@plt+0xa30>
   11868:	bl	10ecc <strncmp@plt>
   1186c:	cmp	r0, #0
   11870:	bne	118b8 <strspn@plt+0x9c8>
   11874:	mov	r2, #5
   11878:	ldr	r1, [pc, #164]	; 11924 <strspn@plt+0xa34>
   1187c:	mov	r0, #0
   11880:	bl	10d1c <dcgettext@plt>
   11884:	ldr	r3, [pc, #132]	; 11910 <strspn@plt+0xa20>
   11888:	ldr	r2, [pc, #136]	; 11918 <strspn@plt+0xa28>
   1188c:	mov	r4, r3
   11890:	mov	r1, r0
   11894:	mov	r0, #1
   11898:	bl	10e48 <__printf_chk@plt>
   1189c:	ldr	r1, [pc, #132]	; 11928 <strspn@plt+0xa38>
   118a0:	mov	r2, #5
   118a4:	mov	r0, #0
   118a8:	bl	10d1c <dcgettext@plt>
   118ac:	ldr	r3, [pc, #124]	; 11930 <strspn@plt+0xa40>
   118b0:	mov	r1, r0
   118b4:	b	11820 <strspn@plt+0x930>
   118b8:	ldr	r6, [pc, #80]	; 11910 <strspn@plt+0xa20>
   118bc:	mov	r4, r6
   118c0:	mov	r2, #5
   118c4:	ldr	r1, [pc, #104]	; 11934 <strspn@plt+0xa44>
   118c8:	mov	r0, #0
   118cc:	bl	10d1c <dcgettext@plt>
   118d0:	ldr	r2, [pc, #56]	; 11910 <strspn@plt+0xa20>
   118d4:	mov	r1, r0
   118d8:	mov	r0, #1
   118dc:	bl	10e48 <__printf_chk@plt>
   118e0:	b	117d8 <strspn@plt+0x8e8>
   118e4:	andeq	r7, r2, r8, lsl #30
   118e8:	andeq	r8, r2, r0, asr #2
   118ec:	andeq	r6, r1, ip, ror #24
   118f0:	andeq	r8, r2, r4, ror #2
   118f4:	muleq	r1, r4, ip
   118f8:	andeq	r8, r2, r4, asr #2
   118fc:			; <UNDEFINED> instruction: 0x00016cb4
   11900:	andeq	r6, r1, r4, lsl #26
   11904:	andeq	r6, r1, r8, ror pc
   11908:	andeq	r6, r1, r8, lsr #31
   1190c:	andeq	r6, r1, r8, asr #22
   11910:	andeq	r6, r1, r0, ror #24
   11914:	andeq	r6, r1, r0, ror #31
   11918:	strdeq	r6, [r1], -r8
   1191c:	andeq	r7, r1, r0, lsr #32
   11920:	andeq	r7, r1, r0, lsr r0
   11924:	andeq	r7, r1, ip, ror r0
   11928:	muleq	r1, ip, r0
   1192c:			; <UNDEFINED> instruction: 0x000172b8
   11930:	andeq	r7, r1, r4, lsl r1
   11934:	andeq	r7, r1, r4, lsr r0
   11938:	push	{r4, r5, r6, r7, r8, lr}
   1193c:	ldr	r4, [r1]
   11940:	cmp	r4, #0
   11944:	beq	119a0 <strspn@plt+0xab0>
   11948:	mov	r7, r2
   1194c:	mov	r6, r1
   11950:	mov	r8, r0
   11954:	bl	10e18 <strlen@plt>
   11958:	ldr	r3, [r7]
   1195c:	cmp	r3, r0
   11960:	mov	r5, r0
   11964:	bhi	11970 <strspn@plt+0xa80>
   11968:	mov	r0, #1
   1196c:	pop	{r4, r5, r6, r7, r8, pc}
   11970:	add	r2, r5, #1
   11974:	mov	r1, r8
   11978:	mov	r0, r4
   1197c:	bl	10cf8 <memcpy@plt>
   11980:	ldr	r2, [r6]
   11984:	ldr	r3, [r7]
   11988:	add	r2, r2, r5
   1198c:	sub	r5, r3, r5
   11990:	str	r2, [r6]
   11994:	mov	r0, #0
   11998:	str	r5, [r7]
   1199c:	pop	{r4, r5, r6, r7, r8, pc}
   119a0:	ldr	r3, [pc, #12]	; 119b4 <strspn@plt+0xac4>
   119a4:	ldr	r1, [r3]
   119a8:	bl	10ca4 <fputs_unlocked@plt>
   119ac:	mov	r0, r4
   119b0:	pop	{r4, r5, r6, r7, r8, pc}
   119b4:	andeq	r8, r2, r4, asr #2
   119b8:	push	{r4, r5, r6, r7, r8, lr}
   119bc:	sub	sp, sp, #8
   119c0:	ldrb	ip, [r0, #1]
   119c4:	ldrb	r4, [r1, #1]
   119c8:	str	r2, [sp, #4]
   119cc:	sub	r2, ip, #47	; 0x2f
   119d0:	sub	lr, r4, #47	; 0x2f
   119d4:	clz	r2, r2
   119d8:	clz	lr, lr
   119dc:	lsr	r2, r2, #5
   119e0:	lsr	lr, lr, #5
   119e4:	cmp	lr, r2
   119e8:	str	r3, [sp]
   119ec:	bne	11af0 <strspn@plt+0xc00>
   119f0:	ldrb	r2, [r1]
   119f4:	ldrb	r3, [r0]
   119f8:	clz	r5, r3
   119fc:	cmp	r2, #0
   11a00:	lsr	r5, r5, #5
   11a04:	beq	11af0 <strspn@plt+0xc00>
   11a08:	cmp	r2, r3
   11a0c:	orrne	r5, r5, #1
   11a10:	cmp	r5, #0
   11a14:	bne	11af0 <strspn@plt+0xc00>
   11a18:	add	lr, r1, #2
   11a1c:	add	r6, r0, #1
   11a20:	mov	r7, r5
   11a24:	mvn	r8, r1
   11a28:	b	11a38 <strspn@plt+0xb48>
   11a2c:	mov	r2, r4
   11a30:	ldrb	ip, [r6, #1]!
   11a34:	ldrb	r4, [lr], #1
   11a38:	cmp	r2, #47	; 0x2f
   11a3c:	add	r3, r8, lr
   11a40:	moveq	r7, r3
   11a44:	cmp	r4, #0
   11a48:	clz	r2, ip
   11a4c:	lsr	r2, r2, #5
   11a50:	beq	11b00 <strspn@plt+0xc10>
   11a54:	cmp	r4, ip
   11a58:	moveq	ip, r2
   11a5c:	orrne	ip, r2, #1
   11a60:	cmp	ip, #0
   11a64:	beq	11a2c <strspn@plt+0xb3c>
   11a68:	cmp	r4, #47	; 0x2f
   11a6c:	movne	r2, #0
   11a70:	andeq	r2, r2, #1
   11a74:	cmp	r2, #0
   11a78:	moveq	r3, r7
   11a7c:	cmp	r3, #0
   11a80:	beq	11af4 <strspn@plt+0xc04>
   11a84:	ldrb	r2, [r1, r3]
   11a88:	add	r6, r0, r3
   11a8c:	add	r4, r1, r3
   11a90:	cmp	r2, #47	; 0x2f
   11a94:	ldrb	r3, [r6]
   11a98:	ldrbeq	r2, [r4, #1]
   11a9c:	addeq	r4, r4, #1
   11aa0:	cmp	r3, #47	; 0x2f
   11aa4:	addeq	r6, r6, #1
   11aa8:	cmp	r2, #0
   11aac:	bne	11b40 <strspn@plt+0xc50>
   11ab0:	ldrb	r0, [r6]
   11ab4:	ldr	r3, [pc, #292]	; 11be0 <strspn@plt+0xcf0>
   11ab8:	mov	r2, sp
   11abc:	cmp	r0, #0
   11ac0:	movne	r0, r6
   11ac4:	moveq	r0, r3
   11ac8:	add	r1, sp, #4
   11acc:	bl	11938 <strspn@plt+0xa48>
   11ad0:	mov	r5, r0
   11ad4:	cmp	r5, #0
   11ad8:	bne	11b18 <strspn@plt+0xc28>
   11adc:	eor	r5, r5, #1
   11ae0:	uxtb	r5, r5
   11ae4:	mov	r0, r5
   11ae8:	add	sp, sp, #8
   11aec:	pop	{r4, r5, r6, r7, r8, pc}
   11af0:	mov	r5, #0
   11af4:	mov	r0, r5
   11af8:	add	sp, sp, #8
   11afc:	pop	{r4, r5, r6, r7, r8, pc}
   11b00:	cmp	ip, #47	; 0x2f
   11b04:	movne	ip, r2
   11b08:	orreq	ip, r2, #1
   11b0c:	cmp	ip, #0
   11b10:	moveq	r3, r7
   11b14:	b	11a7c <strspn@plt+0xb8c>
   11b18:	mov	r2, #5
   11b1c:	ldr	r1, [pc, #192]	; 11be4 <strspn@plt+0xcf4>
   11b20:	mov	r0, #0
   11b24:	bl	10d1c <dcgettext@plt>
   11b28:	ldr	r2, [pc, #184]	; 11be8 <strspn@plt+0xcf8>
   11b2c:	mov	r1, #36	; 0x24
   11b30:	mov	r3, r0
   11b34:	mov	r0, #0
   11b38:	bl	10dac <error@plt>
   11b3c:	b	11adc <strspn@plt+0xbec>
   11b40:	mov	r2, sp
   11b44:	add	r1, sp, #4
   11b48:	ldr	r0, [pc, #156]	; 11bec <strspn@plt+0xcfc>
   11b4c:	bl	11938 <strspn@plt+0xa48>
   11b50:	ldrb	r2, [r4]
   11b54:	cmp	r2, #0
   11b58:	mov	r5, r0
   11b5c:	beq	11ba0 <strspn@plt+0xcb0>
   11b60:	ldr	r7, [pc, #136]	; 11bf0 <strspn@plt+0xd00>
   11b64:	b	11b74 <strspn@plt+0xc84>
   11b68:	ldrb	r2, [r4, #1]!
   11b6c:	cmp	r2, #0
   11b70:	beq	11ba0 <strspn@plt+0xcb0>
   11b74:	cmp	r2, #47	; 0x2f
   11b78:	bne	11b68 <strspn@plt+0xc78>
   11b7c:	mov	r2, sp
   11b80:	add	r1, sp, #4
   11b84:	mov	r0, r7
   11b88:	bl	11938 <strspn@plt+0xa48>
   11b8c:	ldrb	r2, [r4, #1]!
   11b90:	cmp	r2, #0
   11b94:	orr	r5, r0, r5
   11b98:	uxtb	r5, r5
   11b9c:	bne	11b74 <strspn@plt+0xc84>
   11ba0:	ldrb	r3, [r6]
   11ba4:	cmp	r3, #0
   11ba8:	beq	11ad4 <strspn@plt+0xbe4>
   11bac:	mov	r2, sp
   11bb0:	add	r1, sp, #4
   11bb4:	ldr	r0, [pc, #56]	; 11bf4 <strspn@plt+0xd04>
   11bb8:	bl	11938 <strspn@plt+0xa48>
   11bbc:	mov	r2, sp
   11bc0:	add	r1, sp, #4
   11bc4:	mov	r4, r0
   11bc8:	mov	r0, r6
   11bcc:	bl	11938 <strspn@plt+0xa48>
   11bd0:	orr	r0, r4, r0
   11bd4:	orr	r5, r5, r0
   11bd8:	uxtb	r5, r5
   11bdc:	b	11ad4 <strspn@plt+0xbe4>
   11be0:	andeq	r7, r1, ip, lsl #4
   11be4:	andeq	r7, r1, ip, lsl r2
   11be8:	andeq	r7, r1, r0, asr r2
   11bec:	andeq	r7, r1, r0, lsl r2
   11bf0:	andeq	r7, r1, r4, lsl r2
   11bf4:	andeq	r7, r1, r8, lsl r2
   11bf8:	ldr	r2, [pc, #1524]	; 121f4 <strspn@plt+0x1304>
   11bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c00:	and	r9, r1, #3
   11c04:	sub	sp, sp, #148	; 0x94
   11c08:	sub	r3, r9, #1
   11c0c:	ldr	r2, [r2]
   11c10:	ands	r3, r3, r9
   11c14:	str	r3, [sp, #28]
   11c18:	str	r2, [sp, #140]	; 0x8c
   11c1c:	bne	120d8 <strspn@plt+0x11e8>
   11c20:	cmp	r0, #0
   11c24:	beq	12124 <strspn@plt+0x1234>
   11c28:	ldrb	r5, [r0]
   11c2c:	cmp	r5, #0
   11c30:	beq	120ec <strspn@plt+0x11fc>
   11c34:	cmp	r5, #47	; 0x2f
   11c38:	mov	r4, r1
   11c3c:	str	r0, [sp, #8]
   11c40:	beq	11df0 <strspn@plt+0xf00>
   11c44:	bl	16194 <strspn@plt+0x52a4>
   11c48:	subs	r8, r0, #0
   11c4c:	beq	11e98 <strspn@plt+0xfa8>
   11c50:	bl	10e18 <strlen@plt>
   11c54:	ldr	r3, [sp, #8]
   11c58:	cmp	r0, #4096	; 0x1000
   11c5c:	mov	r6, r0
   11c60:	bcc	12100 <strspn@plt+0x1210>
   11c64:	add	r6, r8, r0
   11c68:	mov	r7, r6
   11c6c:	mov	r2, #0
   11c70:	str	r2, [sp, #16]
   11c74:	str	r2, [sp, #24]
   11c78:	mov	sl, r2
   11c7c:	ldrb	r2, [r3]
   11c80:	and	r1, r4, #4
   11c84:	str	r1, [sp, #8]
   11c88:	str	r3, [sp, #20]
   11c8c:	cmp	r2, #0
   11c90:	beq	11e3c <strspn@plt+0xf4c>
   11c94:	cmp	r2, #47	; 0x2f
   11c98:	movne	r1, r2
   11c9c:	bne	11cb4 <strspn@plt+0xdc4>
   11ca0:	ldrb	r1, [r3, #1]!
   11ca4:	cmp	r1, #47	; 0x2f
   11ca8:	beq	11ca0 <strspn@plt+0xdb0>
   11cac:	cmp	r1, #0
   11cb0:	beq	11e3c <strspn@plt+0xf4c>
   11cb4:	mov	r4, r3
   11cb8:	b	11cc0 <strspn@plt+0xdd0>
   11cbc:	mov	r4, r5
   11cc0:	ldrb	r2, [r4, #1]
   11cc4:	add	r5, r4, #1
   11cc8:	cmp	r2, #0
   11ccc:	cmpne	r2, #47	; 0x2f
   11cd0:	bne	11cbc <strspn@plt+0xdcc>
   11cd4:	cmp	r5, r3
   11cd8:	beq	11e3c <strspn@plt+0xf4c>
   11cdc:	sub	fp, r5, r3
   11ce0:	cmp	fp, #1
   11ce4:	beq	11e2c <strspn@plt+0xf3c>
   11ce8:	cmp	r1, #46	; 0x2e
   11cec:	cmpeq	fp, #2
   11cf0:	beq	11fa8 <strspn@plt+0x10b8>
   11cf4:	ldrb	r2, [r6, #-1]
   11cf8:	cmp	r2, #47	; 0x2f
   11cfc:	movne	r2, #47	; 0x2f
   11d00:	strbne	r2, [r6], #1
   11d04:	add	r2, r6, fp
   11d08:	cmp	r7, r2
   11d0c:	bhi	11d4c <strspn@plt+0xe5c>
   11d10:	ldr	r2, [pc, #1248]	; 121f8 <strspn@plt+0x1308>
   11d14:	sub	r7, r7, r8
   11d18:	cmp	fp, r2
   11d1c:	addgt	r7, r7, #1
   11d20:	addgt	r7, fp, r7
   11d24:	addle	r7, r7, #4096	; 0x1000
   11d28:	mov	r0, r8
   11d2c:	mov	r1, r7
   11d30:	str	r3, [sp, #12]
   11d34:	bl	15f68 <strspn@plt+0x5078>
   11d38:	sub	r6, r6, r8
   11d3c:	ldr	r3, [sp, #12]
   11d40:	mov	r8, r0
   11d44:	add	r7, r0, r7
   11d48:	add	r6, r0, r6
   11d4c:	mov	r1, r3
   11d50:	mov	r0, r6
   11d54:	mov	r2, fp
   11d58:	bl	10cf8 <memcpy@plt>
   11d5c:	ldr	r2, [sp, #8]
   11d60:	sub	r3, r9, #2
   11d64:	cmp	r2, #0
   11d68:	clz	r3, r3
   11d6c:	lsr	r3, r3, #5
   11d70:	moveq	r3, #0
   11d74:	cmp	r3, #0
   11d78:	strb	sl, [r0, fp]
   11d7c:	add	r6, r0, fp
   11d80:	bne	11dd0 <strspn@plt+0xee0>
   11d84:	ldr	r3, [sp, #8]
   11d88:	add	fp, sp, #32
   11d8c:	cmp	r3, #0
   11d90:	mov	r2, fp
   11d94:	mov	r1, r8
   11d98:	mov	r0, #3
   11d9c:	beq	11eb8 <strspn@plt+0xfc8>
   11da0:	bl	10ec0 <__xstat64@plt>
   11da4:	adds	r0, r0, #0
   11da8:	movne	r0, #1
   11dac:	cmp	r0, #0
   11db0:	beq	11e10 <strspn@plt+0xf20>
   11db4:	bl	10e24 <__errno_location@plt>
   11db8:	cmp	r9, #0
   11dbc:	mov	fp, r0
   11dc0:	ldr	r3, [r0]
   11dc4:	beq	12020 <strspn@plt+0x1130>
   11dc8:	cmp	r9, #1
   11dcc:	beq	11ffc <strspn@plt+0x110c>
   11dd0:	str	sl, [sp, #48]	; 0x30
   11dd4:	ldrb	r3, [r5]
   11dd8:	cmp	r3, #0
   11ddc:	cmpne	r9, #2
   11de0:	bne	121d8 <strspn@plt+0x12e8>
   11de4:	ldrb	r2, [r5]
   11de8:	mov	r3, r5
   11dec:	b	11c8c <strspn@plt+0xd9c>
   11df0:	mov	r0, #4096	; 0x1000
   11df4:	bl	15f0c <strspn@plt+0x501c>
   11df8:	ldr	r3, [sp, #8]
   11dfc:	mov	r6, r0
   11e00:	mov	r8, r0
   11e04:	add	r7, r0, #4096	; 0x1000
   11e08:	strb	r5, [r6], #1
   11e0c:	b	11c6c <strspn@plt+0xd7c>
   11e10:	ldr	r3, [sp, #48]	; 0x30
   11e14:	and	r3, r3, #61440	; 0xf000
   11e18:	cmp	r3, #40960	; 0xa000
   11e1c:	beq	11ec8 <strspn@plt+0xfd8>
   11e20:	cmp	r3, #16384	; 0x4000
   11e24:	beq	11de4 <strspn@plt+0xef4>
   11e28:	b	11dd4 <strspn@plt+0xee4>
   11e2c:	cmp	r1, #46	; 0x2e
   11e30:	bne	11cf4 <strspn@plt+0xe04>
   11e34:	mov	r3, r5
   11e38:	b	11c8c <strspn@plt+0xd9c>
   11e3c:	add	r3, r8, #1
   11e40:	cmp	r6, r3
   11e44:	bls	11e54 <strspn@plt+0xf64>
   11e48:	ldrb	r3, [r6, #-1]
   11e4c:	cmp	r3, #47	; 0x2f
   11e50:	beq	12188 <strspn@plt+0x1298>
   11e54:	add	r3, r6, #1
   11e58:	cmp	r7, r3
   11e5c:	mov	r3, #0
   11e60:	strb	r3, [r6]
   11e64:	beq	11e7c <strspn@plt+0xf8c>
   11e68:	sub	r1, r6, r8
   11e6c:	mov	r0, r8
   11e70:	add	r1, r1, #1
   11e74:	bl	15f68 <strspn@plt+0x5078>
   11e78:	mov	r8, r0
   11e7c:	ldr	r0, [sp, #24]
   11e80:	bl	10ce0 <free@plt>
   11e84:	ldr	r3, [sp, #16]
   11e88:	cmp	r3, #0
   11e8c:	beq	11e98 <strspn@plt+0xfa8>
   11e90:	mov	r0, r3
   11e94:	bl	12f00 <strspn@plt+0x2010>
   11e98:	ldr	r3, [pc, #852]	; 121f4 <strspn@plt+0x1304>
   11e9c:	ldr	r2, [sp, #140]	; 0x8c
   11ea0:	mov	r0, r8
   11ea4:	ldr	r3, [r3]
   11ea8:	cmp	r2, r3
   11eac:	bne	121f0 <strspn@plt+0x1300>
   11eb0:	add	sp, sp, #148	; 0x94
   11eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb8:	bl	10ee4 <__lxstat64@plt>
   11ebc:	adds	r0, r0, #0
   11ec0:	movne	r0, #1
   11ec4:	b	11dac <strspn@plt+0xebc>
   11ec8:	ldr	r3, [sp, #16]
   11ecc:	cmp	r3, #0
   11ed0:	beq	12088 <strspn@plt+0x1198>
   11ed4:	mov	r2, fp
   11ed8:	ldrd	r0, [sp, #16]
   11edc:	bl	1236c <strspn@plt+0x147c>
   11ee0:	cmp	r0, #0
   11ee4:	bne	11f94 <strspn@plt+0x10a4>
   11ee8:	mov	r2, fp
   11eec:	ldrd	r0, [sp, #16]
   11ef0:	bl	12304 <strspn@plt+0x1414>
   11ef4:	ldr	r1, [sp, #80]	; 0x50
   11ef8:	mov	r0, r8
   11efc:	bl	16248 <strspn@plt+0x5358>
   11f00:	subs	fp, r0, #0
   11f04:	beq	12140 <strspn@plt+0x1250>
   11f08:	bl	10e18 <strlen@plt>
   11f0c:	mov	r4, r0
   11f10:	mov	r0, r5
   11f14:	bl	10e18 <strlen@plt>
   11f18:	ldr	r3, [sp, #28]
   11f1c:	cmp	r3, #0
   11f20:	add	r3, r4, r0
   11f24:	mov	r2, r0
   11f28:	add	r3, r3, #1
   11f2c:	beq	120b4 <strspn@plt+0x11c4>
   11f30:	ldr	r1, [sp, #28]
   11f34:	cmp	r3, r1
   11f38:	bhi	12160 <strspn@plt+0x1270>
   11f3c:	mov	r1, r5
   11f40:	ldr	r5, [sp, #24]
   11f44:	add	r2, r2, #1
   11f48:	add	r0, r5, r4
   11f4c:	bl	10cd4 <memmove@plt>
   11f50:	mov	r2, r4
   11f54:	mov	r1, fp
   11f58:	mov	r0, r5
   11f5c:	bl	10cf8 <memcpy@plt>
   11f60:	ldrb	r3, [fp]
   11f64:	add	r2, r8, #1
   11f68:	cmp	r3, #47	; 0x2f
   11f6c:	strbeq	r3, [r8]
   11f70:	moveq	r6, r2
   11f74:	str	r0, [sp, #20]
   11f78:	beq	11f84 <strspn@plt+0x1094>
   11f7c:	cmp	r6, r2
   11f80:	bhi	12194 <strspn@plt+0x12a4>
   11f84:	mov	r0, fp
   11f88:	bl	10ce0 <free@plt>
   11f8c:	ldr	r5, [sp, #20]
   11f90:	b	11de4 <strspn@plt+0xef4>
   11f94:	cmp	r9, #2
   11f98:	bne	12048 <strspn@plt+0x1158>
   11f9c:	ldrb	r2, [r4, #1]
   11fa0:	mov	r3, r5
   11fa4:	b	11c8c <strspn@plt+0xd9c>
   11fa8:	ldrb	r1, [r3, #1]
   11fac:	cmp	r1, #46	; 0x2e
   11fb0:	bne	11cf4 <strspn@plt+0xe04>
   11fb4:	add	r3, r8, #1
   11fb8:	cmp	r6, r3
   11fbc:	bls	11e34 <strspn@plt+0xf44>
   11fc0:	sub	r1, r6, #1
   11fc4:	cmp	r8, r1
   11fc8:	bcs	121cc <strspn@plt+0x12dc>
   11fcc:	ldrb	r3, [r6, #-2]
   11fd0:	cmp	r3, #47	; 0x2f
   11fd4:	beq	121cc <strspn@plt+0x12dc>
   11fd8:	sub	r3, r6, #2
   11fdc:	cmp	r3, r8
   11fe0:	mov	r6, r3
   11fe4:	beq	11e34 <strspn@plt+0xf44>
   11fe8:	ldrb	r1, [r3, #-1]
   11fec:	sub	r3, r3, #1
   11ff0:	cmp	r1, #47	; 0x2f
   11ff4:	beq	11e34 <strspn@plt+0xf44>
   11ff8:	b	11fdc <strspn@plt+0x10ec>
   11ffc:	ldr	r1, [pc, #504]	; 121fc <strspn@plt+0x130c>
   12000:	mov	r0, r5
   12004:	str	r3, [sp, #12]
   12008:	bl	10ef0 <strspn@plt>
   1200c:	ldr	r3, [sp, #12]
   12010:	ldrb	r2, [r5, r0]
   12014:	cmp	r3, #2
   12018:	cmpeq	r2, #0
   1201c:	beq	11f9c <strspn@plt+0x10ac>
   12020:	ldr	r0, [sp, #24]
   12024:	str	r3, [sp, #8]
   12028:	bl	10ce0 <free@plt>
   1202c:	mov	r0, r8
   12030:	bl	10ce0 <free@plt>
   12034:	ldr	r3, [sp, #16]
   12038:	cmp	r3, #0
   1203c:	ldr	r3, [sp, #8]
   12040:	beq	1207c <strspn@plt+0x118c>
   12044:	b	1206c <strspn@plt+0x117c>
   12048:	bl	10e24 <__errno_location@plt>
   1204c:	mov	r3, #40	; 0x28
   12050:	mov	fp, r0
   12054:	ldr	r0, [sp, #24]
   12058:	str	r3, [sp, #8]
   1205c:	bl	10ce0 <free@plt>
   12060:	mov	r0, r8
   12064:	bl	10ce0 <free@plt>
   12068:	ldr	r3, [sp, #8]
   1206c:	ldr	r0, [sp, #16]
   12070:	str	r3, [sp, #8]
   12074:	bl	12f00 <strspn@plt+0x2010>
   12078:	ldr	r3, [sp, #8]
   1207c:	str	r3, [fp]
   12080:	mov	r8, #0
   12084:	b	11e98 <strspn@plt+0xfa8>
   12088:	ldr	r3, [pc, #368]	; 12200 <strspn@plt+0x1310>
   1208c:	ldr	r1, [sp, #16]
   12090:	str	r3, [sp]
   12094:	ldr	r2, [pc, #360]	; 12204 <strspn@plt+0x1314>
   12098:	ldr	r3, [pc, #360]	; 12208 <strspn@plt+0x1318>
   1209c:	mov	r0, #7
   120a0:	bl	12d00 <strspn@plt+0x1e10>
   120a4:	subs	r3, r0, #0
   120a8:	str	r3, [sp, #16]
   120ac:	bne	11ed4 <strspn@plt+0xfe4>
   120b0:	bl	16154 <strspn@plt+0x5264>
   120b4:	cmp	r3, #4096	; 0x1000
   120b8:	movcc	r3, #4096	; 0x1000
   120bc:	str	r0, [sp, #12]
   120c0:	mov	r0, r3
   120c4:	str	r3, [sp, #28]
   120c8:	bl	15f0c <strspn@plt+0x501c>
   120cc:	ldr	r2, [sp, #12]
   120d0:	str	r0, [sp, #24]
   120d4:	b	11f3c <strspn@plt+0x104c>
   120d8:	bl	10e24 <__errno_location@plt>
   120dc:	mov	r3, #22
   120e0:	mov	r8, #0
   120e4:	str	r3, [r0]
   120e8:	b	11e98 <strspn@plt+0xfa8>
   120ec:	bl	10e24 <__errno_location@plt>
   120f0:	mov	r3, #2
   120f4:	mov	r8, r5
   120f8:	str	r3, [r0]
   120fc:	b	11e98 <strspn@plt+0xfa8>
   12100:	mov	r0, r8
   12104:	mov	r1, #4096	; 0x1000
   12108:	str	r3, [sp, #8]
   1210c:	bl	15f68 <strspn@plt+0x5078>
   12110:	ldr	r3, [sp, #8]
   12114:	mov	r8, r0
   12118:	add	r6, r0, r6
   1211c:	add	r7, r0, #4096	; 0x1000
   12120:	b	11c6c <strspn@plt+0xd7c>
   12124:	str	r0, [sp, #8]
   12128:	bl	10e24 <__errno_location@plt>
   1212c:	ldr	r3, [sp, #8]
   12130:	mov	r2, #22
   12134:	mov	r8, r3
   12138:	str	r2, [r0]
   1213c:	b	11e98 <strspn@plt+0xfa8>
   12140:	bl	10e24 <__errno_location@plt>
   12144:	cmp	r9, #2
   12148:	mov	fp, r0
   1214c:	ldr	r3, [r0]
   12150:	bne	12054 <strspn@plt+0x1164>
   12154:	cmp	r3, #12
   12158:	bne	11f9c <strspn@plt+0x10ac>
   1215c:	b	12054 <strspn@plt+0x1164>
   12160:	str	r0, [sp, #20]
   12164:	mov	r1, r3
   12168:	ldr	r0, [sp, #24]
   1216c:	str	r3, [sp, #12]
   12170:	bl	15f68 <strspn@plt+0x5078>
   12174:	ldr	r3, [sp, #12]
   12178:	ldr	r2, [sp, #20]
   1217c:	str	r3, [sp, #28]
   12180:	str	r0, [sp, #24]
   12184:	b	11f3c <strspn@plt+0x104c>
   12188:	mov	r3, r6
   1218c:	sub	r6, r6, #1
   12190:	b	11e58 <strspn@plt+0xf68>
   12194:	sub	r3, r6, #1
   12198:	cmp	r8, r3
   1219c:	bcs	121e8 <strspn@plt+0x12f8>
   121a0:	ldrb	r2, [r6, #-2]
   121a4:	cmp	r2, #47	; 0x2f
   121a8:	beq	121e8 <strspn@plt+0x12f8>
   121ac:	sub	r3, r6, #2
   121b0:	cmp	r3, r8
   121b4:	mov	r6, r3
   121b8:	beq	11f84 <strspn@plt+0x1094>
   121bc:	ldrb	r2, [r3, #-1]!
   121c0:	cmp	r2, #47	; 0x2f
   121c4:	beq	11f84 <strspn@plt+0x1094>
   121c8:	b	121b0 <strspn@plt+0x12c0>
   121cc:	mov	r3, r5
   121d0:	mov	r6, r1
   121d4:	b	11c8c <strspn@plt+0xd9c>
   121d8:	bl	10e24 <__errno_location@plt>
   121dc:	mov	r3, #20
   121e0:	mov	fp, r0
   121e4:	b	12020 <strspn@plt+0x1130>
   121e8:	mov	r6, r3
   121ec:	b	11f84 <strspn@plt+0x1094>
   121f0:	bl	10d28 <__stack_chk_fail@plt>
   121f4:	andeq	r7, r2, r8, lsl #30
   121f8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   121fc:	andeq	r7, r1, r8, lsl r2
   12200:	muleq	r1, r0, r5
   12204:	andeq	r3, r1, ip, lsr #9
   12208:	andeq	r3, r1, r4, asr #10
   1220c:	ldr	r3, [pc, #4]	; 12218 <strspn@plt+0x1328>
   12210:	str	r0, [r3]
   12214:	bx	lr
   12218:	andeq	r8, r2, ip, asr r1
   1221c:	ldr	r3, [pc, #4]	; 12228 <strspn@plt+0x1338>
   12220:	strb	r0, [r3, #4]
   12224:	bx	lr
   12228:	andeq	r8, r2, ip, asr r1
   1222c:	ldr	r3, [pc, #180]	; 122e8 <strspn@plt+0x13f8>
   12230:	push	{r4, r5, r6, lr}
   12234:	sub	sp, sp, #8
   12238:	ldr	r0, [r3]
   1223c:	bl	162fc <strspn@plt+0x540c>
   12240:	cmp	r0, #0
   12244:	beq	1226c <strspn@plt+0x137c>
   12248:	bl	10e24 <__errno_location@plt>
   1224c:	ldr	r5, [pc, #152]	; 122ec <strspn@plt+0x13fc>
   12250:	ldrb	r3, [r5, #4]
   12254:	cmp	r3, #0
   12258:	mov	r4, r0
   1225c:	beq	12288 <strspn@plt+0x1398>
   12260:	ldr	r3, [r0]
   12264:	cmp	r3, #32
   12268:	bne	12288 <strspn@plt+0x1398>
   1226c:	ldr	r3, [pc, #124]	; 122f0 <strspn@plt+0x1400>
   12270:	ldr	r0, [r3]
   12274:	bl	162fc <strspn@plt+0x540c>
   12278:	cmp	r0, #0
   1227c:	bne	122c8 <strspn@plt+0x13d8>
   12280:	add	sp, sp, #8
   12284:	pop	{r4, r5, r6, pc}
   12288:	mov	r2, #5
   1228c:	ldr	r1, [pc, #96]	; 122f4 <strspn@plt+0x1404>
   12290:	mov	r0, #0
   12294:	bl	10d1c <dcgettext@plt>
   12298:	mov	r6, r0
   1229c:	ldr	r0, [r5]
   122a0:	cmp	r0, #0
   122a4:	beq	122d4 <strspn@plt+0x13e4>
   122a8:	ldr	r4, [r4]
   122ac:	bl	15630 <strspn@plt+0x4740>
   122b0:	mov	r1, r4
   122b4:	str	r6, [sp]
   122b8:	ldr	r2, [pc, #56]	; 122f8 <strspn@plt+0x1408>
   122bc:	mov	r3, r0
   122c0:	mov	r0, #0
   122c4:	bl	10dac <error@plt>
   122c8:	ldr	r3, [pc, #44]	; 122fc <strspn@plt+0x140c>
   122cc:	ldr	r0, [r3]
   122d0:	bl	10cec <_exit@plt>
   122d4:	mov	r3, r6
   122d8:	ldr	r1, [r4]
   122dc:	ldr	r2, [pc, #28]	; 12300 <strspn@plt+0x1410>
   122e0:	bl	10dac <error@plt>
   122e4:	b	122c8 <strspn@plt+0x13d8>
   122e8:	andeq	r8, r2, r4, asr #2
   122ec:	andeq	r8, r2, ip, asr r1
   122f0:	andeq	r8, r2, r0, asr #2
   122f4:	andeq	r7, r1, r0, asr #4
   122f8:	andeq	r7, r1, ip, asr #4
   122fc:	andeq	r8, r2, ip, ror #1
   12300:	andeq	r7, r1, r0, asr r2
   12304:	push	{r4, r5, r6, r7, r8, lr}
   12308:	subs	r8, r0, #0
   1230c:	popeq	{r4, r5, r6, r7, r8, pc}
   12310:	mov	r0, #24
   12314:	mov	r4, r1
   12318:	mov	r7, r2
   1231c:	bl	15f0c <strspn@plt+0x501c>
   12320:	mov	r6, r0
   12324:	mov	r0, r4
   12328:	bl	16138 <strspn@plt+0x5248>
   1232c:	ldrd	r4, [r7, #96]	; 0x60
   12330:	ldrd	r2, [r7]
   12334:	mov	r1, r6
   12338:	strd	r4, [r6, #8]
   1233c:	strd	r2, [r6, #16]
   12340:	str	r0, [r6]
   12344:	mov	r0, r8
   12348:	bl	1332c <strspn@plt+0x243c>
   1234c:	cmp	r0, #0
   12350:	beq	12368 <strspn@plt+0x1478>
   12354:	cmp	r6, r0
   12358:	popeq	{r4, r5, r6, r7, r8, pc}
   1235c:	mov	r0, r6
   12360:	pop	{r4, r5, r6, r7, r8, lr}
   12364:	b	13590 <strspn@plt+0x26a0>
   12368:	bl	16154 <strspn@plt+0x5264>
   1236c:	push	{r4, r5, r6, lr}
   12370:	sub	sp, sp, #32
   12374:	ldr	r6, [pc, #80]	; 123cc <strspn@plt+0x14dc>
   12378:	subs	r3, r0, #0
   1237c:	moveq	r0, r3
   12380:	ldr	ip, [r6]
   12384:	str	ip, [sp, #28]
   12388:	beq	123b0 <strspn@plt+0x14c0>
   1238c:	ldrd	r4, [r2, #96]	; 0x60
   12390:	ldrd	r2, [r2]
   12394:	str	r1, [sp]
   12398:	mov	r1, sp
   1239c:	strd	r4, [sp, #8]
   123a0:	strd	r2, [sp, #16]
   123a4:	bl	12a48 <strspn@plt+0x1b58>
   123a8:	adds	r0, r0, #0
   123ac:	movne	r0, #1
   123b0:	ldr	r2, [sp, #28]
   123b4:	ldr	r3, [r6]
   123b8:	cmp	r2, r3
   123bc:	bne	123c8 <strspn@plt+0x14d8>
   123c0:	add	sp, sp, #32
   123c4:	pop	{r4, r5, r6, pc}
   123c8:	bl	10d28 <__stack_chk_fail@plt>
   123cc:	andeq	r7, r2, r8, lsl #30
   123d0:	cmp	r0, #10
   123d4:	movcc	r0, #10
   123d8:	push	{r4, r5, r6, r7, r8, lr}
   123dc:	orr	r7, r0, #1
   123e0:	cmn	r7, #1
   123e4:	beq	1245c <strspn@plt+0x156c>
   123e8:	ldr	r8, [pc, #116]	; 12464 <strspn@plt+0x1574>
   123ec:	umull	r2, r3, r8, r7
   123f0:	cmp	r7, #9
   123f4:	lsr	r3, r3, #1
   123f8:	add	r3, r3, r3, lsl #1
   123fc:	sub	r3, r7, r3
   12400:	bls	12448 <strspn@plt+0x1558>
   12404:	cmp	r3, #0
   12408:	beq	12450 <strspn@plt+0x1560>
   1240c:	mov	r6, #16
   12410:	mov	r5, #9
   12414:	mov	r4, #3
   12418:	b	12428 <strspn@plt+0x1538>
   1241c:	cmp	r1, #0
   12420:	add	r6, r6, #8
   12424:	beq	12450 <strspn@plt+0x1560>
   12428:	add	r4, r4, #2
   1242c:	mov	r1, r4
   12430:	mov	r0, r7
   12434:	bl	1692c <strspn@plt+0x5a3c>
   12438:	add	r5, r5, r6
   1243c:	cmp	r5, r7
   12440:	mov	r3, r1
   12444:	bcc	1241c <strspn@plt+0x152c>
   12448:	cmp	r3, #0
   1244c:	bne	1245c <strspn@plt+0x156c>
   12450:	add	r7, r7, #2
   12454:	cmn	r7, #1
   12458:	bne	123ec <strspn@plt+0x14fc>
   1245c:	mov	r0, r7
   12460:	pop	{r4, r5, r6, r7, r8, pc}
   12464:	bge	feabcf18 <optarg@@GLIBC_2.4+0xfea94dd0>
   12468:	push	{r4, lr}
   1246c:	ror	r0, r0, #3
   12470:	bl	1692c <strspn@plt+0x5a3c>
   12474:	mov	r0, r1
   12478:	pop	{r4, pc}
   1247c:	sub	r0, r1, r0
   12480:	clz	r0, r0
   12484:	lsr	r0, r0, #5
   12488:	bx	lr
   1248c:	push	{r4, lr}
   12490:	mov	r4, r0
   12494:	mov	r0, r1
   12498:	ldr	r3, [r4, #24]
   1249c:	ldr	r1, [r4, #8]
   124a0:	blx	r3
   124a4:	ldr	r3, [r4, #8]
   124a8:	cmp	r3, r0
   124ac:	bls	124bc <strspn@plt+0x15cc>
   124b0:	ldr	r3, [r4]
   124b4:	add	r0, r3, r0, lsl #3
   124b8:	pop	{r4, pc}
   124bc:	bl	10ed8 <abort@plt>
   124c0:	push	{r4, r5, r6, r7, r8, lr}
   124c4:	mov	r8, r2
   124c8:	mov	r5, r1
   124cc:	mov	r7, r3
   124d0:	mov	r6, r0
   124d4:	bl	1248c <strspn@plt+0x159c>
   124d8:	str	r0, [r8]
   124dc:	ldr	r1, [r0]
   124e0:	cmp	r1, #0
   124e4:	beq	125cc <strspn@plt+0x16dc>
   124e8:	cmp	r1, r5
   124ec:	mov	r4, r0
   124f0:	beq	12590 <strspn@plt+0x16a0>
   124f4:	ldr	r3, [r6, #28]
   124f8:	mov	r0, r5
   124fc:	blx	r3
   12500:	cmp	r0, #0
   12504:	ldrne	r3, [r4]
   12508:	bne	12594 <strspn@plt+0x16a4>
   1250c:	ldr	r2, [r4, #4]
   12510:	cmp	r2, #0
   12514:	beq	125cc <strspn@plt+0x16dc>
   12518:	ldr	r3, [r2]
   1251c:	cmp	r5, r3
   12520:	bne	12544 <strspn@plt+0x1654>
   12524:	b	12564 <strspn@plt+0x1674>
   12528:	ldr	r4, [r4, #4]
   1252c:	ldr	r2, [r4, #4]
   12530:	cmp	r2, #0
   12534:	beq	125cc <strspn@plt+0x16dc>
   12538:	ldr	r3, [r2]
   1253c:	cmp	r3, r5
   12540:	beq	12564 <strspn@plt+0x1674>
   12544:	mov	r1, r3
   12548:	mov	r0, r5
   1254c:	ldr	r3, [r6, #28]
   12550:	blx	r3
   12554:	cmp	r0, #0
   12558:	beq	12528 <strspn@plt+0x1638>
   1255c:	ldr	r2, [r4, #4]
   12560:	ldr	r3, [r2]
   12564:	cmp	r7, #0
   12568:	beq	125c4 <strspn@plt+0x16d4>
   1256c:	ldr	r0, [r2, #4]
   12570:	mov	r1, #0
   12574:	str	r0, [r4, #4]
   12578:	str	r1, [r2]
   1257c:	ldr	r1, [r6, #36]	; 0x24
   12580:	mov	r0, r3
   12584:	str	r1, [r2, #4]
   12588:	str	r2, [r6, #36]	; 0x24
   1258c:	pop	{r4, r5, r6, r7, r8, pc}
   12590:	mov	r3, r1
   12594:	cmp	r7, #0
   12598:	beq	125c4 <strspn@plt+0x16d4>
   1259c:	ldr	r2, [r4, #4]
   125a0:	cmp	r2, #0
   125a4:	movne	ip, #0
   125a8:	ldmne	r2, {r0, r1}
   125ac:	streq	r2, [r4]
   125b0:	stmne	r4, {r0, r1}
   125b4:	strne	ip, [r2]
   125b8:	ldrne	r1, [r6, #36]	; 0x24
   125bc:	strne	r1, [r2, #4]
   125c0:	strne	r2, [r6, #36]	; 0x24
   125c4:	mov	r0, r3
   125c8:	pop	{r4, r5, r6, r7, r8, pc}
   125cc:	mov	r3, #0
   125d0:	mov	r0, r3
   125d4:	pop	{r4, r5, r6, r7, r8, pc}
   125d8:	ldr	r2, [pc, #164]	; 12684 <strspn@plt+0x1794>
   125dc:	ldr	r3, [r0]
   125e0:	cmp	r3, r2
   125e4:	beq	1266c <strspn@plt+0x177c>
   125e8:	vldr	s15, [r3, #8]
   125ec:	vldr	s14, [pc, #128]	; 12674 <strspn@plt+0x1784>
   125f0:	vcmpe.f32	s15, s14
   125f4:	vmrs	APSR_nzcv, fpscr
   125f8:	ble	12660 <strspn@plt+0x1770>
   125fc:	vldr	s13, [pc, #116]	; 12678 <strspn@plt+0x1788>
   12600:	vcmpe.f32	s15, s13
   12604:	vmrs	APSR_nzcv, fpscr
   12608:	bpl	12660 <strspn@plt+0x1770>
   1260c:	vldr	s13, [pc, #104]	; 1267c <strspn@plt+0x178c>
   12610:	vldr	s12, [r3, #12]
   12614:	vcmpe.f32	s12, s13
   12618:	vmrs	APSR_nzcv, fpscr
   1261c:	ble	12660 <strspn@plt+0x1770>
   12620:	vldr	s13, [r3]
   12624:	vcmpe.f32	s13, #0.0
   12628:	vmrs	APSR_nzcv, fpscr
   1262c:	blt	12660 <strspn@plt+0x1770>
   12630:	vadd.f32	s14, s13, s14
   12634:	vldr	s13, [r3, #4]
   12638:	vcmpe.f32	s14, s13
   1263c:	vmrs	APSR_nzcv, fpscr
   12640:	bpl	12660 <strspn@plt+0x1770>
   12644:	vldr	s12, [pc, #52]	; 12680 <strspn@plt+0x1790>
   12648:	vcmpe.f32	s13, s12
   1264c:	vmrs	APSR_nzcv, fpscr
   12650:	bhi	12660 <strspn@plt+0x1770>
   12654:	vcmpe.f32	s15, s14
   12658:	vmrs	APSR_nzcv, fpscr
   1265c:	bgt	1266c <strspn@plt+0x177c>
   12660:	str	r2, [r0]
   12664:	mov	r0, #0
   12668:	bx	lr
   1266c:	mov	r0, #1
   12670:	bx	lr
   12674:	stclcc	12, cr12, [ip, #820]	; 0x334
   12678:	svccc	0x00666666
   1267c:	svccc	0x008ccccd
   12680:	svccc	0x00800000
   12684:	andeq	r7, r1, r4, asr r2
   12688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1268c:	ldr	r3, [r1, #4]
   12690:	ldr	r6, [r1]
   12694:	cmp	r6, r3
   12698:	bcs	12760 <strspn@plt+0x1870>
   1269c:	mov	r8, r2
   126a0:	mov	r5, r0
   126a4:	mov	r7, r1
   126a8:	add	r6, r6, #8
   126ac:	mov	r9, #0
   126b0:	b	126c0 <strspn@plt+0x17d0>
   126b4:	cmp	r3, r6
   126b8:	add	r6, r6, #8
   126bc:	bls	12760 <strspn@plt+0x1870>
   126c0:	ldr	sl, [r6, #-8]
   126c4:	cmp	sl, #0
   126c8:	beq	126b4 <strspn@plt+0x17c4>
   126cc:	ldr	r4, [r6, #-4]
   126d0:	cmp	r4, #0
   126d4:	bne	126f4 <strspn@plt+0x1804>
   126d8:	b	12744 <strspn@plt+0x1854>
   126dc:	ldr	r2, [r0, #4]
   126e0:	cmp	r3, #0
   126e4:	str	r2, [r4, #4]
   126e8:	str	r4, [r0, #4]
   126ec:	mov	r4, r3
   126f0:	beq	12740 <strspn@plt+0x1850>
   126f4:	ldr	sl, [r4]
   126f8:	mov	r0, r5
   126fc:	mov	r1, sl
   12700:	bl	1248c <strspn@plt+0x159c>
   12704:	ldr	r3, [r4, #4]
   12708:	ldr	r2, [r0]
   1270c:	cmp	r2, #0
   12710:	bne	126dc <strspn@plt+0x17ec>
   12714:	ldr	r1, [r5, #12]
   12718:	str	sl, [r0]
   1271c:	add	r1, r1, #1
   12720:	str	r1, [r5, #12]
   12724:	str	r2, [r4]
   12728:	ldr	r2, [r5, #36]	; 0x24
   1272c:	cmp	r3, #0
   12730:	str	r2, [r4, #4]
   12734:	str	r4, [r5, #36]	; 0x24
   12738:	mov	r4, r3
   1273c:	bne	126f4 <strspn@plt+0x1804>
   12740:	ldr	sl, [r6, #-8]
   12744:	cmp	r8, #0
   12748:	str	r9, [r6, #-4]
   1274c:	beq	12768 <strspn@plt+0x1878>
   12750:	ldr	r3, [r7, #4]
   12754:	cmp	r3, r6
   12758:	add	r6, r6, #8
   1275c:	bhi	126c0 <strspn@plt+0x17d0>
   12760:	mov	r0, #1
   12764:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12768:	mov	r1, sl
   1276c:	mov	r0, r5
   12770:	bl	1248c <strspn@plt+0x159c>
   12774:	ldr	r3, [r0]
   12778:	mov	r4, r0
   1277c:	cmp	r3, #0
   12780:	beq	127c0 <strspn@plt+0x18d0>
   12784:	ldr	r0, [r5, #36]	; 0x24
   12788:	cmp	r0, #0
   1278c:	beq	127d4 <strspn@plt+0x18e4>
   12790:	ldr	r3, [r0, #4]
   12794:	str	r3, [r5, #36]	; 0x24
   12798:	ldr	r3, [r4, #4]
   1279c:	str	sl, [r0]
   127a0:	str	r3, [r0, #4]
   127a4:	str	r0, [r4, #4]
   127a8:	ldr	r2, [r7, #12]
   127ac:	str	r9, [r6, #-8]
   127b0:	sub	r2, r2, #1
   127b4:	ldr	r3, [r7, #4]
   127b8:	str	r2, [r7, #12]
   127bc:	b	126b4 <strspn@plt+0x17c4>
   127c0:	ldr	r3, [r5, #12]
   127c4:	str	sl, [r0]
   127c8:	add	r3, r3, #1
   127cc:	str	r3, [r5, #12]
   127d0:	b	127a8 <strspn@plt+0x18b8>
   127d4:	mov	r0, #8
   127d8:	bl	10db8 <malloc@plt>
   127dc:	cmp	r0, #0
   127e0:	bne	12798 <strspn@plt+0x18a8>
   127e4:	mov	r0, r8
   127e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127ec:	ldr	r0, [r0, #8]
   127f0:	bx	lr
   127f4:	ldr	r0, [r0, #12]
   127f8:	bx	lr
   127fc:	ldr	r0, [r0, #16]
   12800:	bx	lr
   12804:	ldm	r0, {r1, r3}
   12808:	cmp	r1, r3
   1280c:	bcs	12874 <strspn@plt+0x1984>
   12810:	sub	ip, r3, #1
   12814:	sub	ip, ip, r1
   12818:	add	r3, r1, #16
   1281c:	bic	ip, ip, #7
   12820:	add	ip, ip, r3
   12824:	add	r1, r1, #8
   12828:	mov	r0, #0
   1282c:	b	1283c <strspn@plt+0x194c>
   12830:	add	r1, r1, #8
   12834:	cmp	r1, ip
   12838:	bxeq	lr
   1283c:	ldr	r3, [r1, #-8]
   12840:	cmp	r3, #0
   12844:	beq	12830 <strspn@plt+0x1940>
   12848:	ldr	r3, [r1, #-4]
   1284c:	mov	r2, #1
   12850:	cmp	r3, #0
   12854:	beq	12868 <strspn@plt+0x1978>
   12858:	ldr	r3, [r3, #4]
   1285c:	add	r2, r2, #1
   12860:	cmp	r3, #0
   12864:	bne	12858 <strspn@plt+0x1968>
   12868:	cmp	r0, r2
   1286c:	movcc	r0, r2
   12870:	b	12830 <strspn@plt+0x1940>
   12874:	mov	r0, #0
   12878:	bx	lr
   1287c:	ldm	r0, {r1, r3}
   12880:	push	{lr}		; (str lr, [sp, #-4]!)
   12884:	cmp	r1, r3
   12888:	bcs	12918 <strspn@plt+0x1a28>
   1288c:	sub	ip, r3, #1
   12890:	sub	ip, ip, r1
   12894:	add	r3, r1, #16
   12898:	bic	ip, ip, #7
   1289c:	mov	r2, #0
   128a0:	add	ip, ip, r3
   128a4:	add	r1, r1, #8
   128a8:	mov	lr, r2
   128ac:	b	128bc <strspn@plt+0x19cc>
   128b0:	add	r1, r1, #8
   128b4:	cmp	r1, ip
   128b8:	beq	128f8 <strspn@plt+0x1a08>
   128bc:	ldr	r3, [r1, #-8]
   128c0:	cmp	r3, #0
   128c4:	beq	128b0 <strspn@plt+0x19c0>
   128c8:	ldr	r3, [r1, #-4]
   128cc:	add	lr, lr, #1
   128d0:	cmp	r3, #0
   128d4:	add	r2, r2, #1
   128d8:	beq	128b0 <strspn@plt+0x19c0>
   128dc:	ldr	r3, [r3, #4]
   128e0:	add	r2, r2, #1
   128e4:	cmp	r3, #0
   128e8:	bne	128dc <strspn@plt+0x19ec>
   128ec:	add	r1, r1, #8
   128f0:	cmp	r1, ip
   128f4:	bne	128bc <strspn@plt+0x19cc>
   128f8:	ldr	r3, [r0, #12]
   128fc:	cmp	r3, lr
   12900:	ldreq	r0, [r0, #16]
   12904:	subeq	r0, r0, r2
   12908:	clzeq	r0, r0
   1290c:	lsreq	r0, r0, #5
   12910:	movne	r0, #0
   12914:	pop	{pc}		; (ldr pc, [sp], #4)
   12918:	mov	r2, #0
   1291c:	mov	lr, r2
   12920:	b	128f8 <strspn@plt+0x1a08>
   12924:	push	{r4, r5, r6, r7, lr}
   12928:	mov	r4, r1
   1292c:	ldr	r2, [r0]
   12930:	ldr	r1, [r0, #4]
   12934:	sub	sp, sp, #12
   12938:	cmp	r2, r1
   1293c:	ldr	r3, [r0, #16]
   12940:	ldrd	r6, [r0, #8]
   12944:	bcs	12a28 <strspn@plt+0x1b38>
   12948:	sub	ip, r1, #1
   1294c:	sub	ip, ip, r2
   12950:	bic	ip, ip, #7
   12954:	add	r1, r2, #16
   12958:	add	ip, ip, r1
   1295c:	add	r0, r2, #8
   12960:	mov	r5, #0
   12964:	b	12974 <strspn@plt+0x1a84>
   12968:	add	r0, r0, #8
   1296c:	cmp	r0, ip
   12970:	beq	129b4 <strspn@plt+0x1ac4>
   12974:	ldr	r2, [r0, #-8]
   12978:	cmp	r2, #0
   1297c:	beq	12968 <strspn@plt+0x1a78>
   12980:	ldr	r2, [r0, #-4]
   12984:	mov	r1, #1
   12988:	cmp	r2, #0
   1298c:	beq	129a0 <strspn@plt+0x1ab0>
   12990:	ldr	r2, [r2, #4]
   12994:	add	r1, r1, #1
   12998:	cmp	r2, #0
   1299c:	bne	12990 <strspn@plt+0x1aa0>
   129a0:	cmp	r5, r1
   129a4:	add	r0, r0, #8
   129a8:	movcc	r5, r1
   129ac:	cmp	r0, ip
   129b0:	bne	12974 <strspn@plt+0x1a84>
   129b4:	ldr	r2, [pc, #124]	; 12a38 <strspn@plt+0x1b48>
   129b8:	mov	r1, #1
   129bc:	mov	r0, r4
   129c0:	bl	10e60 <__fprintf_chk@plt>
   129c4:	mov	r3, r6
   129c8:	ldr	r2, [pc, #108]	; 12a3c <strspn@plt+0x1b4c>
   129cc:	mov	r1, #1
   129d0:	mov	r0, r4
   129d4:	bl	10e60 <__fprintf_chk@plt>
   129d8:	vmov	s15, r7
   129dc:	vldr	d5, [pc, #76]	; 12a30 <strspn@plt+0x1b40>
   129e0:	mov	r3, r7
   129e4:	ldr	r2, [pc, #84]	; 12a40 <strspn@plt+0x1b50>
   129e8:	vcvt.f64.u32	d6, s15
   129ec:	vmov	s15, r6
   129f0:	mov	r1, #1
   129f4:	mov	r0, r4
   129f8:	vcvt.f64.u32	d7, s15
   129fc:	vmul.f64	d6, d6, d5
   12a00:	vdiv.f64	d5, d6, d7
   12a04:	vstr	d5, [sp]
   12a08:	bl	10e60 <__fprintf_chk@plt>
   12a0c:	mov	r3, r5
   12a10:	mov	r0, r4
   12a14:	ldr	r2, [pc, #40]	; 12a44 <strspn@plt+0x1b54>
   12a18:	mov	r1, #1
   12a1c:	add	sp, sp, #12
   12a20:	pop	{r4, r5, r6, r7, lr}
   12a24:	b	10e60 <__fprintf_chk@plt>
   12a28:	mov	r5, #0
   12a2c:	b	129b4 <strspn@plt+0x1ac4>
   12a30:	andeq	r0, r0, r0
   12a34:	subsmi	r0, r9, r0
   12a38:	andeq	r7, r1, r8, ror #4
   12a3c:	andeq	r7, r1, r0, lsl #5
   12a40:	muleq	r1, r8, r2
   12a44:			; <UNDEFINED> instruction: 0x000172bc
   12a48:	push	{r4, r5, r6, lr}
   12a4c:	mov	r6, r0
   12a50:	mov	r5, r1
   12a54:	bl	1248c <strspn@plt+0x159c>
   12a58:	ldr	r3, [r0]
   12a5c:	cmp	r3, #0
   12a60:	beq	12a9c <strspn@plt+0x1bac>
   12a64:	mov	r4, r0
   12a68:	b	12a70 <strspn@plt+0x1b80>
   12a6c:	ldr	r3, [r4]
   12a70:	cmp	r3, r5
   12a74:	mov	r1, r3
   12a78:	mov	r0, r5
   12a7c:	beq	12aa8 <strspn@plt+0x1bb8>
   12a80:	ldr	r3, [r6, #28]
   12a84:	blx	r3
   12a88:	cmp	r0, #0
   12a8c:	bne	12aa4 <strspn@plt+0x1bb4>
   12a90:	ldr	r4, [r4, #4]
   12a94:	cmp	r4, #0
   12a98:	bne	12a6c <strspn@plt+0x1b7c>
   12a9c:	mov	r0, #0
   12aa0:	pop	{r4, r5, r6, pc}
   12aa4:	ldr	r5, [r4]
   12aa8:	mov	r0, r5
   12aac:	pop	{r4, r5, r6, pc}
   12ab0:	ldr	r3, [r0, #16]
   12ab4:	cmp	r3, #0
   12ab8:	beq	12b08 <strspn@plt+0x1c18>
   12abc:	ldr	r3, [r0]
   12ac0:	ldr	r2, [r0, #4]
   12ac4:	cmp	r3, r2
   12ac8:	bcs	12b00 <strspn@plt+0x1c10>
   12acc:	ldr	r0, [r3]
   12ad0:	cmp	r0, #0
   12ad4:	bxne	lr
   12ad8:	sub	r2, r2, #1
   12adc:	sub	r2, r2, r3
   12ae0:	bic	r2, r2, #7
   12ae4:	add	r2, r3, r2
   12ae8:	b	12af8 <strspn@plt+0x1c08>
   12aec:	ldr	r0, [r3, #8]!
   12af0:	cmp	r0, #0
   12af4:	bxne	lr
   12af8:	cmp	r3, r2
   12afc:	bne	12aec <strspn@plt+0x1bfc>
   12b00:	push	{r4, lr}
   12b04:	bl	10ed8 <abort@plt>
   12b08:	mov	r0, r3
   12b0c:	bx	lr
   12b10:	push	{r4, r5, r6, lr}
   12b14:	mov	r5, r0
   12b18:	mov	r4, r1
   12b1c:	bl	1248c <strspn@plt+0x159c>
   12b20:	mov	r2, r0
   12b24:	mov	r3, r0
   12b28:	b	12b34 <strspn@plt+0x1c44>
   12b2c:	cmp	r3, #0
   12b30:	beq	12b48 <strspn@plt+0x1c58>
   12b34:	ldm	r3, {r1, r3}
   12b38:	cmp	r1, r4
   12b3c:	bne	12b2c <strspn@plt+0x1c3c>
   12b40:	cmp	r3, #0
   12b44:	bne	12b70 <strspn@plt+0x1c80>
   12b48:	ldr	r3, [r5, #4]
   12b4c:	b	12b5c <strspn@plt+0x1c6c>
   12b50:	ldr	r0, [r2]
   12b54:	cmp	r0, #0
   12b58:	popne	{r4, r5, r6, pc}
   12b5c:	add	r2, r2, #8
   12b60:	cmp	r3, r2
   12b64:	bhi	12b50 <strspn@plt+0x1c60>
   12b68:	mov	r0, #0
   12b6c:	pop	{r4, r5, r6, pc}
   12b70:	ldr	r0, [r3]
   12b74:	pop	{r4, r5, r6, pc}
   12b78:	push	{r4, r5, lr}
   12b7c:	ldm	r0, {r5, lr}
   12b80:	cmp	lr, r5
   12b84:	bls	12c08 <strspn@plt+0x1d18>
   12b88:	mov	ip, #0
   12b8c:	ldr	r3, [r5]
   12b90:	cmp	r3, #0
   12b94:	bne	12bb0 <strspn@plt+0x1cc0>
   12b98:	add	r5, r5, #8
   12b9c:	cmp	lr, r5
   12ba0:	bhi	12b8c <strspn@plt+0x1c9c>
   12ba4:	mov	r2, ip
   12ba8:	mov	r0, r2
   12bac:	pop	{r4, r5, pc}
   12bb0:	cmp	r2, ip
   12bb4:	bls	12ba4 <strspn@plt+0x1cb4>
   12bb8:	str	r3, [r1, ip, lsl #2]
   12bbc:	ldr	r3, [r5, #4]
   12bc0:	add	r4, ip, #1
   12bc4:	cmp	r3, #0
   12bc8:	add	lr, r1, ip, lsl #2
   12bcc:	beq	12bfc <strspn@plt+0x1d0c>
   12bd0:	mov	ip, r4
   12bd4:	cmp	r2, ip
   12bd8:	beq	12ba8 <strspn@plt+0x1cb8>
   12bdc:	ldr	r4, [r3]
   12be0:	add	ip, ip, #1
   12be4:	str	r4, [lr, #4]!
   12be8:	ldr	r3, [r3, #4]
   12bec:	cmp	r3, #0
   12bf0:	bne	12bd4 <strspn@plt+0x1ce4>
   12bf4:	ldr	lr, [r0, #4]
   12bf8:	b	12b98 <strspn@plt+0x1ca8>
   12bfc:	ldr	lr, [r0, #4]
   12c00:	mov	ip, r4
   12c04:	b	12b98 <strspn@plt+0x1ca8>
   12c08:	mov	r2, #0
   12c0c:	b	12ba8 <strspn@plt+0x1cb8>
   12c10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c14:	ldr	r3, [r0, #4]
   12c18:	ldr	r8, [r0]
   12c1c:	cmp	r3, r8
   12c20:	bls	12c88 <strspn@plt+0x1d98>
   12c24:	mov	r7, r2
   12c28:	mov	r6, r1
   12c2c:	mov	r9, r0
   12c30:	mov	r5, #0
   12c34:	ldr	r0, [r8]
   12c38:	cmp	r0, #0
   12c3c:	bne	12c54 <strspn@plt+0x1d64>
   12c40:	add	r8, r8, #8
   12c44:	cmp	r3, r8
   12c48:	bhi	12c34 <strspn@plt+0x1d44>
   12c4c:	mov	r0, r5
   12c50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c54:	mov	r4, r8
   12c58:	b	12c60 <strspn@plt+0x1d70>
   12c5c:	ldr	r0, [r4]
   12c60:	mov	r1, r7
   12c64:	blx	r6
   12c68:	cmp	r0, #0
   12c6c:	beq	12c4c <strspn@plt+0x1d5c>
   12c70:	ldr	r4, [r4, #4]
   12c74:	add	r5, r5, #1
   12c78:	cmp	r4, #0
   12c7c:	bne	12c5c <strspn@plt+0x1d6c>
   12c80:	ldr	r3, [r9, #4]
   12c84:	b	12c40 <strspn@plt+0x1d50>
   12c88:	mov	r5, #0
   12c8c:	b	12c4c <strspn@plt+0x1d5c>
   12c90:	push	{r4, r5, r6, lr}
   12c94:	mov	r4, r0
   12c98:	ldrb	r0, [r0]
   12c9c:	cmp	r0, #0
   12ca0:	beq	12cd0 <strspn@plt+0x1de0>
   12ca4:	mov	r5, r1
   12ca8:	mov	r1, #0
   12cac:	rsb	r1, r1, r1, lsl #5
   12cb0:	add	r0, r1, r0
   12cb4:	mov	r1, r5
   12cb8:	bl	1692c <strspn@plt+0x5a3c>
   12cbc:	ldrb	r0, [r4, #1]!
   12cc0:	cmp	r0, #0
   12cc4:	bne	12cac <strspn@plt+0x1dbc>
   12cc8:	mov	r0, r1
   12ccc:	pop	{r4, r5, r6, pc}
   12cd0:	mov	r1, r0
   12cd4:	mov	r0, r1
   12cd8:	pop	{r4, r5, r6, pc}
   12cdc:	push	{lr}		; (str lr, [sp, #-4]!)
   12ce0:	mov	ip, r0
   12ce4:	ldr	lr, [pc, #16]	; 12cfc <strspn@plt+0x1e0c>
   12ce8:	ldm	lr!, {r0, r1, r2, r3}
   12cec:	ldr	lr, [lr]
   12cf0:	stmia	ip!, {r0, r1, r2, r3}
   12cf4:	str	lr, [ip]
   12cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cfc:	andeq	r7, r1, r4, asr r2
   12d00:	push	{r4, r5, r6, r7, r8, lr}
   12d04:	sub	sp, sp, #8
   12d08:	cmp	r2, #0
   12d0c:	ldr	ip, [pc, #300]	; 12e40 <strspn@plt+0x1f50>
   12d10:	str	r0, [sp, #4]
   12d14:	ldr	r5, [pc, #296]	; 12e44 <strspn@plt+0x1f54>
   12d18:	mov	r0, #40	; 0x28
   12d1c:	movne	r5, r2
   12d20:	cmp	r3, #0
   12d24:	movne	r8, r3
   12d28:	moveq	r8, ip
   12d2c:	mov	r6, r1
   12d30:	bl	10db8 <malloc@plt>
   12d34:	subs	r4, r0, #0
   12d38:	beq	12e04 <strspn@plt+0x1f14>
   12d3c:	cmp	r6, #0
   12d40:	add	r0, r4, #20
   12d44:	beq	12de0 <strspn@plt+0x1ef0>
   12d48:	str	r6, [r4, #20]
   12d4c:	bl	125d8 <strspn@plt+0x16e8>
   12d50:	cmp	r0, #0
   12d54:	beq	12df8 <strspn@plt+0x1f08>
   12d58:	ldrb	r3, [r6, #16]
   12d5c:	cmp	r3, #0
   12d60:	vldreq	s13, [r6, #8]
   12d64:	beq	12e10 <strspn@plt+0x1f20>
   12d68:	ldr	r0, [sp, #4]
   12d6c:	bl	123d0 <strspn@plt+0x14e0>
   12d70:	lsrs	r3, r0, #30
   12d74:	movne	r7, #1
   12d78:	moveq	r7, #0
   12d7c:	tst	r0, #536870912	; 0x20000000
   12d80:	mov	r6, r0
   12d84:	bne	12df8 <strspn@plt+0x1f08>
   12d88:	cmp	r7, #0
   12d8c:	bne	12df8 <strspn@plt+0x1f08>
   12d90:	cmp	r0, #0
   12d94:	str	r0, [r4, #8]
   12d98:	beq	12df8 <strspn@plt+0x1f08>
   12d9c:	mov	r1, #8
   12da0:	bl	10c98 <calloc@plt>
   12da4:	cmp	r0, #0
   12da8:	str	r0, [r4]
   12dac:	beq	12df8 <strspn@plt+0x1f08>
   12db0:	ldr	r3, [sp, #32]
   12db4:	add	r0, r0, r6, lsl #3
   12db8:	str	r0, [r4, #4]
   12dbc:	str	r7, [r4, #12]
   12dc0:	mov	r0, r4
   12dc4:	str	r7, [r4, #16]
   12dc8:	str	r5, [r4, #24]
   12dcc:	str	r8, [r4, #28]
   12dd0:	str	r3, [r4, #32]
   12dd4:	str	r7, [r4, #36]	; 0x24
   12dd8:	add	sp, sp, #8
   12ddc:	pop	{r4, r5, r6, r7, r8, pc}
   12de0:	ldr	r3, [pc, #96]	; 12e48 <strspn@plt+0x1f58>
   12de4:	str	r3, [r4, #20]
   12de8:	bl	125d8 <strspn@plt+0x16e8>
   12dec:	cmp	r0, #0
   12df0:	vldrne	s13, [pc, #64]	; 12e38 <strspn@plt+0x1f48>
   12df4:	bne	12e10 <strspn@plt+0x1f20>
   12df8:	mov	r0, r4
   12dfc:	bl	10ce0 <free@plt>
   12e00:	mov	r4, #0
   12e04:	mov	r0, r4
   12e08:	add	sp, sp, #8
   12e0c:	pop	{r4, r5, r6, r7, r8, pc}
   12e10:	vldr	s15, [sp, #4]
   12e14:	vldr	s14, [pc, #32]	; 12e3c <strspn@plt+0x1f4c>
   12e18:	vcvt.f32.u32	s12, s15
   12e1c:	vdiv.f32	s15, s12, s13
   12e20:	vcmpe.f32	s15, s14
   12e24:	vmrs	APSR_nzcv, fpscr
   12e28:	bge	12df8 <strspn@plt+0x1f08>
   12e2c:	vcvt.u32.f32	s15, s15
   12e30:	vstr	s15, [sp, #4]
   12e34:	b	12d68 <strspn@plt+0x1e78>
   12e38:	svccc	0x004ccccd
   12e3c:	svcmi	0x00800000
   12e40:	andeq	r2, r1, ip, ror r4
   12e44:	andeq	r2, r1, r8, ror #8
   12e48:	andeq	r7, r1, r4, asr r2
   12e4c:	push	{r4, r5, r6, r7, r8, lr}
   12e50:	mov	r5, r0
   12e54:	ldr	r6, [r0]
   12e58:	ldr	r2, [r0, #4]
   12e5c:	cmp	r6, r2
   12e60:	addcc	r6, r6, #8
   12e64:	movcc	r7, #0
   12e68:	bcc	12e7c <strspn@plt+0x1f8c>
   12e6c:	b	12ef0 <strspn@plt+0x2000>
   12e70:	cmp	r2, r6
   12e74:	add	r6, r6, #8
   12e78:	bls	12ef0 <strspn@plt+0x2000>
   12e7c:	ldr	r3, [r6, #-8]
   12e80:	cmp	r3, #0
   12e84:	beq	12e70 <strspn@plt+0x1f80>
   12e88:	ldr	r4, [r6, #-4]
   12e8c:	ldr	r2, [r5, #32]
   12e90:	cmp	r4, #0
   12e94:	beq	12ec8 <strspn@plt+0x1fd8>
   12e98:	cmp	r2, #0
   12e9c:	beq	12eac <strspn@plt+0x1fbc>
   12ea0:	ldr	r0, [r4]
   12ea4:	blx	r2
   12ea8:	ldr	r2, [r5, #32]
   12eac:	ldr	r3, [r4, #4]
   12eb0:	ldr	r1, [r5, #36]	; 0x24
   12eb4:	str	r7, [r4]
   12eb8:	str	r1, [r4, #4]
   12ebc:	str	r4, [r5, #36]	; 0x24
   12ec0:	subs	r4, r3, #0
   12ec4:	bne	12e98 <strspn@plt+0x1fa8>
   12ec8:	cmp	r2, #0
   12ecc:	beq	12ed8 <strspn@plt+0x1fe8>
   12ed0:	ldr	r0, [r6, #-8]
   12ed4:	blx	r2
   12ed8:	str	r7, [r6, #-8]
   12edc:	str	r7, [r6, #-4]
   12ee0:	ldr	r2, [r5, #4]
   12ee4:	cmp	r2, r6
   12ee8:	add	r6, r6, #8
   12eec:	bhi	12e7c <strspn@plt+0x1f8c>
   12ef0:	mov	r3, #0
   12ef4:	str	r3, [r5, #12]
   12ef8:	str	r3, [r5, #16]
   12efc:	pop	{r4, r5, r6, r7, r8, pc}
   12f00:	ldr	r3, [r0, #32]
   12f04:	push	{r4, r5, r6, lr}
   12f08:	cmp	r3, #0
   12f0c:	mov	r6, r0
   12f10:	ldr	r5, [r0]
   12f14:	ldr	r3, [r0, #4]
   12f18:	beq	12f80 <strspn@plt+0x2090>
   12f1c:	ldr	r2, [r0, #16]
   12f20:	cmp	r2, #0
   12f24:	beq	12f80 <strspn@plt+0x2090>
   12f28:	cmp	r5, r3
   12f2c:	bcc	12f40 <strspn@plt+0x2050>
   12f30:	b	12fb4 <strspn@plt+0x20c4>
   12f34:	add	r5, r5, #8
   12f38:	cmp	r3, r5
   12f3c:	bls	12f7c <strspn@plt+0x208c>
   12f40:	ldr	r0, [r5]
   12f44:	cmp	r0, #0
   12f48:	beq	12f34 <strspn@plt+0x2044>
   12f4c:	mov	r4, r5
   12f50:	b	12f58 <strspn@plt+0x2068>
   12f54:	ldr	r0, [r4]
   12f58:	ldr	r3, [r6, #32]
   12f5c:	blx	r3
   12f60:	ldr	r4, [r4, #4]
   12f64:	cmp	r4, #0
   12f68:	bne	12f54 <strspn@plt+0x2064>
   12f6c:	ldr	r3, [r6, #4]
   12f70:	add	r5, r5, #8
   12f74:	cmp	r3, r5
   12f78:	bhi	12f40 <strspn@plt+0x2050>
   12f7c:	ldr	r5, [r6]
   12f80:	cmp	r5, r3
   12f84:	bcs	12fb4 <strspn@plt+0x20c4>
   12f88:	ldr	r0, [r5, #4]
   12f8c:	cmp	r0, #0
   12f90:	beq	12fa8 <strspn@plt+0x20b8>
   12f94:	ldr	r4, [r0, #4]
   12f98:	bl	10ce0 <free@plt>
   12f9c:	subs	r0, r4, #0
   12fa0:	bne	12f94 <strspn@plt+0x20a4>
   12fa4:	ldr	r3, [r6, #4]
   12fa8:	add	r5, r5, #8
   12fac:	cmp	r3, r5
   12fb0:	bhi	12f88 <strspn@plt+0x2098>
   12fb4:	ldr	r0, [r6, #36]	; 0x24
   12fb8:	cmp	r0, #0
   12fbc:	beq	12fd0 <strspn@plt+0x20e0>
   12fc0:	ldr	r4, [r0, #4]
   12fc4:	bl	10ce0 <free@plt>
   12fc8:	subs	r0, r4, #0
   12fcc:	bne	12fc0 <strspn@plt+0x20d0>
   12fd0:	ldr	r0, [r6]
   12fd4:	bl	10ce0 <free@plt>
   12fd8:	mov	r0, r6
   12fdc:	pop	{r4, r5, r6, lr}
   12fe0:	b	10ce0 <free@plt>
   12fe4:	push	{r4, r5, r6, r7, r8, lr}
   12fe8:	sub	sp, sp, #56	; 0x38
   12fec:	ldr	r8, [r0, #20]
   12ff0:	ldr	r7, [pc, #392]	; 13180 <strspn@plt+0x2290>
   12ff4:	mov	r6, r0
   12ff8:	ldrb	r3, [r8, #16]
   12ffc:	ldr	r2, [r7]
   13000:	str	r1, [sp, #4]
   13004:	cmp	r3, #0
   13008:	str	r2, [sp, #52]	; 0x34
   1300c:	bne	13038 <strspn@plt+0x2148>
   13010:	vmov	s15, r1
   13014:	vldr	s13, [r8, #8]
   13018:	vldr	s14, [pc, #348]	; 1317c <strspn@plt+0x228c>
   1301c:	vcvt.f32.u32	s12, s15
   13020:	vdiv.f32	s15, s12, s13
   13024:	vcmpe.f32	s15, s14
   13028:	vmrs	APSR_nzcv, fpscr
   1302c:	vcvtlt.u32.f32	s15, s15
   13030:	vstrlt	s15, [sp, #4]
   13034:	bge	13068 <strspn@plt+0x2178>
   13038:	ldr	r0, [sp, #4]
   1303c:	bl	123d0 <strspn@plt+0x14e0>
   13040:	lsrs	r3, r0, #30
   13044:	movne	r4, #1
   13048:	moveq	r4, #0
   1304c:	tst	r0, #536870912	; 0x20000000
   13050:	movne	r4, #1
   13054:	cmp	r0, #0
   13058:	moveq	r4, #1
   1305c:	cmp	r4, #0
   13060:	mov	r5, r0
   13064:	beq	13088 <strspn@plt+0x2198>
   13068:	mov	r4, #0
   1306c:	ldr	r2, [sp, #52]	; 0x34
   13070:	ldr	r3, [r7]
   13074:	mov	r0, r4
   13078:	cmp	r2, r3
   1307c:	bne	13174 <strspn@plt+0x2284>
   13080:	add	sp, sp, #56	; 0x38
   13084:	pop	{r4, r5, r6, r7, r8, pc}
   13088:	ldr	r3, [r6, #8]
   1308c:	cmp	r3, r0
   13090:	beq	1313c <strspn@plt+0x224c>
   13094:	mov	r1, #8
   13098:	bl	10c98 <calloc@plt>
   1309c:	cmp	r0, #0
   130a0:	str	r0, [sp, #12]
   130a4:	beq	13068 <strspn@plt+0x2178>
   130a8:	add	r0, r0, r5, lsl #3
   130ac:	ldr	r1, [r6, #32]
   130b0:	str	r0, [sp, #16]
   130b4:	ldr	r0, [r6, #28]
   130b8:	ldr	ip, [r6, #24]
   130bc:	ldr	r3, [r6, #36]	; 0x24
   130c0:	mov	r2, r4
   130c4:	str	r0, [sp, #40]	; 0x28
   130c8:	str	r1, [sp, #44]	; 0x2c
   130cc:	add	r0, sp, #12
   130d0:	mov	r1, r6
   130d4:	str	r4, [sp, #24]
   130d8:	str	r4, [sp, #28]
   130dc:	str	r5, [sp, #20]
   130e0:	str	r8, [sp, #32]
   130e4:	str	ip, [sp, #36]	; 0x24
   130e8:	str	r3, [sp, #48]	; 0x30
   130ec:	bl	12688 <strspn@plt+0x1798>
   130f0:	subs	r4, r0, #0
   130f4:	bne	13144 <strspn@plt+0x2254>
   130f8:	ldr	r3, [sp, #48]	; 0x30
   130fc:	mov	r2, #1
   13100:	str	r3, [r6, #36]	; 0x24
   13104:	add	r1, sp, #12
   13108:	mov	r0, r6
   1310c:	bl	12688 <strspn@plt+0x1798>
   13110:	cmp	r0, #0
   13114:	beq	13178 <strspn@plt+0x2288>
   13118:	add	r1, sp, #12
   1311c:	mov	r0, r6
   13120:	mov	r2, r4
   13124:	bl	12688 <strspn@plt+0x1798>
   13128:	cmp	r0, #0
   1312c:	beq	13178 <strspn@plt+0x2288>
   13130:	ldr	r0, [sp, #12]
   13134:	bl	10ce0 <free@plt>
   13138:	b	1306c <strspn@plt+0x217c>
   1313c:	mov	r4, #1
   13140:	b	1306c <strspn@plt+0x217c>
   13144:	ldr	r0, [r6]
   13148:	bl	10ce0 <free@plt>
   1314c:	ldrd	r2, [sp, #12]
   13150:	ldr	r1, [sp, #20]
   13154:	str	r2, [r6]
   13158:	str	r3, [r6, #4]
   1315c:	ldr	r2, [sp, #24]
   13160:	ldr	r3, [sp, #48]	; 0x30
   13164:	str	r1, [r6, #8]
   13168:	str	r2, [r6, #12]
   1316c:	str	r3, [r6, #36]	; 0x24
   13170:	b	1306c <strspn@plt+0x217c>
   13174:	bl	10d28 <__stack_chk_fail@plt>
   13178:	bl	10ed8 <abort@plt>
   1317c:	svcmi	0x00800000
   13180:	andeq	r7, r2, r8, lsl #30
   13184:	push	{r4, r5, r6, r7, lr}
   13188:	sub	sp, sp, #12
   1318c:	ldr	r6, [pc, #404]	; 13328 <strspn@plt+0x2438>
   13190:	subs	r7, r1, #0
   13194:	ldr	r3, [r6]
   13198:	str	r3, [sp, #4]
   1319c:	beq	1331c <strspn@plt+0x242c>
   131a0:	mov	r5, r2
   131a4:	mov	r3, #0
   131a8:	mov	r2, sp
   131ac:	mov	r4, r0
   131b0:	bl	124c0 <strspn@plt+0x15d0>
   131b4:	cmp	r0, #0
   131b8:	beq	131e4 <strspn@plt+0x22f4>
   131bc:	cmp	r5, #0
   131c0:	moveq	r0, r5
   131c4:	strne	r0, [r5]
   131c8:	movne	r0, #0
   131cc:	ldr	r2, [sp, #4]
   131d0:	ldr	r3, [r6]
   131d4:	cmp	r2, r3
   131d8:	bne	13320 <strspn@plt+0x2430>
   131dc:	add	sp, sp, #12
   131e0:	pop	{r4, r5, r6, r7, pc}
   131e4:	vldr	s15, [r4, #8]
   131e8:	ldr	r3, [r4, #20]
   131ec:	vldr	s14, [r4, #12]
   131f0:	vcvt.f32.u32	s15, s15
   131f4:	vldr	s13, [r3, #8]
   131f8:	vcvt.f32.u32	s14, s14
   131fc:	vmul.f32	s15, s15, s13
   13200:	vcmpe.f32	s14, s15
   13204:	vmrs	APSR_nzcv, fpscr
   13208:	bgt	13254 <strspn@plt+0x2364>
   1320c:	ldr	r5, [sp]
   13210:	ldr	r3, [r5]
   13214:	cmp	r3, #0
   13218:	beq	132b0 <strspn@plt+0x23c0>
   1321c:	ldr	r0, [r4, #36]	; 0x24
   13220:	cmp	r0, #0
   13224:	beq	132d4 <strspn@plt+0x23e4>
   13228:	ldr	r3, [r0, #4]
   1322c:	str	r3, [r4, #36]	; 0x24
   13230:	ldr	r3, [r4, #16]
   13234:	ldr	r2, [r5, #4]
   13238:	add	r3, r3, #1
   1323c:	str	r7, [r0]
   13240:	str	r2, [r0, #4]
   13244:	str	r0, [r5, #4]
   13248:	mov	r0, #1
   1324c:	str	r3, [r4, #16]
   13250:	b	131cc <strspn@plt+0x22dc>
   13254:	add	r0, r4, #20
   13258:	bl	125d8 <strspn@plt+0x16e8>
   1325c:	vldr	s15, [r4, #8]
   13260:	ldr	r3, [r4, #20]
   13264:	vldr	s14, [r4, #12]
   13268:	vcvt.f32.u32	s15, s15
   1326c:	vldr	s13, [r3, #8]
   13270:	vcvt.f32.u32	s14, s14
   13274:	vmul.f32	s12, s13, s15
   13278:	vcmpe.f32	s14, s12
   1327c:	vmrs	APSR_nzcv, fpscr
   13280:	ble	1320c <strspn@plt+0x231c>
   13284:	vldr	s14, [r3, #12]
   13288:	ldrb	r3, [r3, #16]
   1328c:	vmul.f32	s15, s15, s14
   13290:	cmp	r3, #0
   13294:	vldr	s14, [pc, #136]	; 13324 <strspn@plt+0x2434>
   13298:	vmuleq.f32	s15, s15, s13
   1329c:	vcmpe.f32	s15, s14
   132a0:	vmrs	APSR_nzcv, fpscr
   132a4:	blt	132e8 <strspn@plt+0x23f8>
   132a8:	mvn	r0, #0
   132ac:	b	131cc <strspn@plt+0x22dc>
   132b0:	ldr	r2, [r4, #16]
   132b4:	ldr	r3, [r4, #12]
   132b8:	add	r2, r2, #1
   132bc:	add	r3, r3, #1
   132c0:	str	r7, [r5]
   132c4:	mov	r0, #1
   132c8:	str	r2, [r4, #16]
   132cc:	str	r3, [r4, #12]
   132d0:	b	131cc <strspn@plt+0x22dc>
   132d4:	mov	r0, #8
   132d8:	bl	10db8 <malloc@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	132a8 <strspn@plt+0x23b8>
   132e4:	b	13230 <strspn@plt+0x2340>
   132e8:	vcvt.u32.f32	s15, s15
   132ec:	mov	r0, r4
   132f0:	vmov	r1, s15
   132f4:	bl	12fe4 <strspn@plt+0x20f4>
   132f8:	cmp	r0, #0
   132fc:	beq	132a8 <strspn@plt+0x23b8>
   13300:	mov	r2, sp
   13304:	mov	r3, #0
   13308:	mov	r1, r7
   1330c:	mov	r0, r4
   13310:	bl	124c0 <strspn@plt+0x15d0>
   13314:	cmp	r0, #0
   13318:	beq	1320c <strspn@plt+0x231c>
   1331c:	bl	10ed8 <abort@plt>
   13320:	bl	10d28 <__stack_chk_fail@plt>
   13324:	svcmi	0x00800000
   13328:	andeq	r7, r2, r8, lsl #30
   1332c:	push	{r4, r5, lr}
   13330:	sub	sp, sp, #12
   13334:	ldr	r5, [pc, #68]	; 13380 <strspn@plt+0x2490>
   13338:	mov	r2, sp
   1333c:	mov	r4, r1
   13340:	ldr	r3, [r5]
   13344:	str	r3, [sp, #4]
   13348:	bl	13184 <strspn@plt+0x2294>
   1334c:	cmn	r0, #1
   13350:	moveq	r0, #0
   13354:	beq	13364 <strspn@plt+0x2474>
   13358:	cmp	r0, #0
   1335c:	movne	r0, r4
   13360:	ldreq	r0, [sp]
   13364:	ldr	r2, [sp, #4]
   13368:	ldr	r3, [r5]
   1336c:	cmp	r2, r3
   13370:	bne	1337c <strspn@plt+0x248c>
   13374:	add	sp, sp, #12
   13378:	pop	{r4, r5, pc}
   1337c:	bl	10d28 <__stack_chk_fail@plt>
   13380:	andeq	r7, r2, r8, lsl #30
   13384:	push	{r4, r5, r6, r7, lr}
   13388:	sub	sp, sp, #12
   1338c:	ldr	r5, [pc, #276]	; 134a8 <strspn@plt+0x25b8>
   13390:	mov	r3, #1
   13394:	mov	r2, sp
   13398:	ldr	ip, [r5]
   1339c:	mov	r4, r0
   133a0:	str	ip, [sp, #4]
   133a4:	bl	124c0 <strspn@plt+0x15d0>
   133a8:	subs	r6, r0, #0
   133ac:	beq	133cc <strspn@plt+0x24dc>
   133b0:	ldr	r2, [sp]
   133b4:	ldr	r3, [r4, #16]
   133b8:	ldr	r2, [r2]
   133bc:	sub	r3, r3, #1
   133c0:	cmp	r2, #0
   133c4:	str	r3, [r4, #16]
   133c8:	beq	133e8 <strspn@plt+0x24f8>
   133cc:	ldr	r2, [sp, #4]
   133d0:	ldr	r3, [r5]
   133d4:	mov	r0, r6
   133d8:	cmp	r2, r3
   133dc:	bne	134a4 <strspn@plt+0x25b4>
   133e0:	add	sp, sp, #12
   133e4:	pop	{r4, r5, r6, r7, pc}
   133e8:	vldr	s15, [r4, #8]
   133ec:	ldr	r3, [r4, #12]
   133f0:	ldr	r2, [r4, #20]
   133f4:	sub	r3, r3, #1
   133f8:	vcvt.f32.u32	s14, s15
   133fc:	vldr	s13, [r2]
   13400:	vmov	s15, r3
   13404:	str	r3, [r4, #12]
   13408:	vcvt.f32.u32	s15, s15
   1340c:	vmul.f32	s14, s14, s13
   13410:	vcmpe.f32	s15, s14
   13414:	vmrs	APSR_nzcv, fpscr
   13418:	bpl	133cc <strspn@plt+0x24dc>
   1341c:	add	r0, r4, #20
   13420:	bl	125d8 <strspn@plt+0x16e8>
   13424:	vldr	s15, [r4, #8]
   13428:	ldr	r3, [r4, #20]
   1342c:	vldr	s13, [r4, #12]
   13430:	vcvt.f32.u32	s15, s15
   13434:	vldr	s14, [r3]
   13438:	vcvt.f32.u32	s13, s13
   1343c:	vmul.f32	s14, s15, s14
   13440:	vcmpe.f32	s13, s14
   13444:	vmrs	APSR_nzcv, fpscr
   13448:	bpl	133cc <strspn@plt+0x24dc>
   1344c:	vldr	s14, [r3, #4]
   13450:	ldrb	r2, [r3, #16]
   13454:	mov	r0, r4
   13458:	vmul.f32	s15, s15, s14
   1345c:	cmp	r2, #0
   13460:	vldreq	s14, [r3, #8]
   13464:	vmuleq.f32	s15, s15, s14
   13468:	vcvt.u32.f32	s15, s15
   1346c:	vmov	r1, s15
   13470:	bl	12fe4 <strspn@plt+0x20f4>
   13474:	cmp	r0, #0
   13478:	bne	133cc <strspn@plt+0x24dc>
   1347c:	ldr	r0, [r4, #36]	; 0x24
   13480:	cmp	r0, #0
   13484:	beq	13498 <strspn@plt+0x25a8>
   13488:	ldr	r7, [r0, #4]
   1348c:	bl	10ce0 <free@plt>
   13490:	subs	r0, r7, #0
   13494:	bne	13488 <strspn@plt+0x2598>
   13498:	mov	r3, #0
   1349c:	str	r3, [r4, #36]	; 0x24
   134a0:	b	133cc <strspn@plt+0x24dc>
   134a4:	bl	10d28 <__stack_chk_fail@plt>
   134a8:	andeq	r7, r2, r8, lsl #30
   134ac:	push	{r4, r5, r6, lr}
   134b0:	mov	r4, r0
   134b4:	ldr	r0, [r0]
   134b8:	mov	r5, r1
   134bc:	bl	16530 <strspn@plt+0x5640>
   134c0:	ldr	ip, [r4, #8]
   134c4:	mov	r2, r5
   134c8:	ldr	r1, [r4, #12]
   134cc:	mov	r3, #0
   134d0:	eor	r0, r0, ip
   134d4:	bl	1694c <strspn@plt+0x5a5c>
   134d8:	mov	r0, r2
   134dc:	pop	{r4, r5, r6, pc}
   134e0:	push	{r4, lr}
   134e4:	mov	r2, r1
   134e8:	mov	r3, #0
   134ec:	ldrd	r0, [r0, #8]
   134f0:	bl	1694c <strspn@plt+0x5a5c>
   134f4:	mov	r0, r2
   134f8:	pop	{r4, pc}
   134fc:	ldrd	r2, [r1, #8]
   13500:	push	{r4, r5}
   13504:	ldrd	r4, [r0, #8]
   13508:	cmp	r5, r3
   1350c:	cmpeq	r4, r2
   13510:	beq	13520 <strspn@plt+0x2630>
   13514:	mov	r0, #0
   13518:	pop	{r4, r5}
   1351c:	bx	lr
   13520:	ldrd	r4, [r0, #16]
   13524:	ldrd	r2, [r1, #16]
   13528:	cmp	r5, r3
   1352c:	cmpeq	r4, r2
   13530:	bne	13514 <strspn@plt+0x2624>
   13534:	ldr	r1, [r1]
   13538:	ldr	r0, [r0]
   1353c:	pop	{r4, r5}
   13540:	b	159a0 <strspn@plt+0x4ab0>
   13544:	ldrd	r2, [r1, #8]
   13548:	push	{r4, r5, r6, lr}
   1354c:	ldrd	r4, [r0, #8]
   13550:	cmp	r5, r3
   13554:	cmpeq	r4, r2
   13558:	beq	13564 <strspn@plt+0x2674>
   1355c:	mov	r0, #0
   13560:	pop	{r4, r5, r6, pc}
   13564:	ldrd	r4, [r0, #16]
   13568:	ldrd	r2, [r1, #16]
   1356c:	cmp	r5, r3
   13570:	cmpeq	r4, r2
   13574:	bne	1355c <strspn@plt+0x266c>
   13578:	ldr	r1, [r1]
   1357c:	ldr	r0, [r0]
   13580:	bl	10cbc <strcmp@plt>
   13584:	clz	r0, r0
   13588:	lsr	r0, r0, #5
   1358c:	pop	{r4, r5, r6, pc}
   13590:	push	{r4, lr}
   13594:	mov	r4, r0
   13598:	ldr	r0, [r0]
   1359c:	bl	10ce0 <free@plt>
   135a0:	mov	r0, r4
   135a4:	pop	{r4, lr}
   135a8:	b	10ce0 <free@plt>
   135ac:	push	{r4, r5, r6, lr}
   135b0:	subs	r4, r0, #0
   135b4:	beq	13628 <strspn@plt+0x2738>
   135b8:	mov	r1, #47	; 0x2f
   135bc:	bl	10e9c <strrchr@plt>
   135c0:	subs	r5, r0, #0
   135c4:	beq	13614 <strspn@plt+0x2724>
   135c8:	add	r6, r5, #1
   135cc:	sub	r3, r6, r4
   135d0:	cmp	r3, #6
   135d4:	ble	13614 <strspn@plt+0x2724>
   135d8:	mov	r2, #7
   135dc:	ldr	r1, [pc, #96]	; 13644 <strspn@plt+0x2754>
   135e0:	sub	r0, r5, #6
   135e4:	bl	10ecc <strncmp@plt>
   135e8:	cmp	r0, #0
   135ec:	bne	13614 <strspn@plt+0x2724>
   135f0:	mov	r2, #3
   135f4:	ldr	r1, [pc, #76]	; 13648 <strspn@plt+0x2758>
   135f8:	mov	r0, r6
   135fc:	bl	10ecc <strncmp@plt>
   13600:	cmp	r0, #0
   13604:	movne	r4, r6
   13608:	ldreq	r3, [pc, #60]	; 1364c <strspn@plt+0x275c>
   1360c:	addeq	r4, r5, #4
   13610:	streq	r4, [r3]
   13614:	ldr	r2, [pc, #52]	; 13650 <strspn@plt+0x2760>
   13618:	ldr	r3, [pc, #52]	; 13654 <strspn@plt+0x2764>
   1361c:	str	r4, [r2]
   13620:	str	r4, [r3]
   13624:	pop	{r4, r5, r6, pc}
   13628:	ldr	r3, [pc, #40]	; 13658 <strspn@plt+0x2768>
   1362c:	mov	r2, #55	; 0x37
   13630:	mov	r1, #1
   13634:	ldr	r3, [r3]
   13638:	ldr	r0, [pc, #28]	; 1365c <strspn@plt+0x276c>
   1363c:	bl	10d70 <fwrite@plt>
   13640:	bl	10ed8 <abort@plt>
   13644:	andeq	r7, r1, ip, lsl #6
   13648:	andeq	r7, r1, r4, lsl r3
   1364c:	andeq	r8, r2, r0, lsr r1
   13650:	andeq	r8, r2, r4, ror #2
   13654:	andeq	r8, r2, r4, lsr r1
   13658:	andeq	r8, r2, r0, asr #2
   1365c:	ldrdeq	r7, [r1], -r4
   13660:	push	{r4, lr}
   13664:	mov	r2, #48	; 0x30
   13668:	mov	r4, r1
   1366c:	mov	r1, #0
   13670:	bl	10e3c <memset@plt>
   13674:	cmp	r4, #10
   13678:	beq	13684 <strspn@plt+0x2794>
   1367c:	str	r4, [r0]
   13680:	pop	{r4, pc}
   13684:	bl	10ed8 <abort@plt>
   13688:	push	{r4, r5, r6, lr}
   1368c:	mov	r2, #5
   13690:	mov	r5, r0
   13694:	mov	r6, r1
   13698:	mov	r1, r0
   1369c:	mov	r0, #0
   136a0:	bl	10d1c <dcgettext@plt>
   136a4:	cmp	r5, r0
   136a8:	mov	r4, r0
   136ac:	beq	136b8 <strspn@plt+0x27c8>
   136b0:	mov	r0, r4
   136b4:	pop	{r4, r5, r6, pc}
   136b8:	bl	1656c <strspn@plt+0x567c>
   136bc:	ldrb	r3, [r0]
   136c0:	bic	r3, r3, #32
   136c4:	cmp	r3, #85	; 0x55
   136c8:	bne	13728 <strspn@plt+0x2838>
   136cc:	ldrb	r3, [r0, #1]
   136d0:	bic	r3, r3, #32
   136d4:	cmp	r3, #84	; 0x54
   136d8:	bne	137a0 <strspn@plt+0x28b0>
   136dc:	ldrb	r3, [r0, #2]
   136e0:	bic	r3, r3, #32
   136e4:	cmp	r3, #70	; 0x46
   136e8:	bne	137a0 <strspn@plt+0x28b0>
   136ec:	ldrb	r3, [r0, #3]
   136f0:	cmp	r3, #45	; 0x2d
   136f4:	bne	137a0 <strspn@plt+0x28b0>
   136f8:	ldrb	r3, [r0, #4]
   136fc:	cmp	r3, #56	; 0x38
   13700:	bne	137a0 <strspn@plt+0x28b0>
   13704:	ldrb	r3, [r0, #5]
   13708:	cmp	r3, #0
   1370c:	bne	137a0 <strspn@plt+0x28b0>
   13710:	ldrb	r2, [r4]
   13714:	ldr	r3, [pc, #156]	; 137b8 <strspn@plt+0x28c8>
   13718:	ldr	r4, [pc, #156]	; 137bc <strspn@plt+0x28cc>
   1371c:	cmp	r2, #96	; 0x60
   13720:	movne	r4, r3
   13724:	b	136b0 <strspn@plt+0x27c0>
   13728:	cmp	r3, #71	; 0x47
   1372c:	bne	137a0 <strspn@plt+0x28b0>
   13730:	ldrb	r3, [r0, #1]
   13734:	bic	r3, r3, #32
   13738:	cmp	r3, #66	; 0x42
   1373c:	bne	137a0 <strspn@plt+0x28b0>
   13740:	ldrb	r3, [r0, #2]
   13744:	cmp	r3, #49	; 0x31
   13748:	bne	137a0 <strspn@plt+0x28b0>
   1374c:	ldrb	r3, [r0, #3]
   13750:	cmp	r3, #56	; 0x38
   13754:	bne	137a0 <strspn@plt+0x28b0>
   13758:	ldrb	r3, [r0, #4]
   1375c:	cmp	r3, #48	; 0x30
   13760:	bne	137a0 <strspn@plt+0x28b0>
   13764:	ldrb	r3, [r0, #5]
   13768:	cmp	r3, #51	; 0x33
   1376c:	bne	137a0 <strspn@plt+0x28b0>
   13770:	ldrb	r3, [r0, #6]
   13774:	cmp	r3, #48	; 0x30
   13778:	bne	137a0 <strspn@plt+0x28b0>
   1377c:	ldrb	r3, [r0, #7]
   13780:	cmp	r3, #0
   13784:	bne	137a0 <strspn@plt+0x28b0>
   13788:	ldrb	r2, [r4]
   1378c:	ldr	r3, [pc, #44]	; 137c0 <strspn@plt+0x28d0>
   13790:	ldr	r4, [pc, #44]	; 137c4 <strspn@plt+0x28d4>
   13794:	cmp	r2, #96	; 0x60
   13798:	movne	r4, r3
   1379c:	b	136b0 <strspn@plt+0x27c0>
   137a0:	ldr	r3, [pc, #32]	; 137c8 <strspn@plt+0x28d8>
   137a4:	ldr	r4, [pc, #32]	; 137cc <strspn@plt+0x28dc>
   137a8:	cmp	r6, #9
   137ac:	movne	r4, r3
   137b0:	mov	r0, r4
   137b4:	pop	{r4, r5, r6, pc}
   137b8:	andeq	r7, r1, r0, ror r3
   137bc:	andeq	r7, r1, ip, ror r3
   137c0:	andeq	r7, r1, r4, ror r3
   137c4:	andeq	r7, r1, r8, ror r3
   137c8:	andeq	r7, r1, r0, lsl #7
   137cc:	andeq	r7, r1, ip, ror #6
   137d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137d4:	sub	sp, sp, #124	; 0x7c
   137d8:	ldr	ip, [pc, #3576]	; 145d8 <strspn@plt+0x36e8>
   137dc:	str	r3, [sp, #24]
   137e0:	ldr	r3, [sp, #168]	; 0xa8
   137e4:	ldr	ip, [ip]
   137e8:	str	r3, [sp, #56]	; 0x38
   137ec:	ldr	r3, [sp, #172]	; 0xac
   137f0:	ldr	r8, [sp, #160]	; 0xa0
   137f4:	str	r3, [sp, #80]	; 0x50
   137f8:	ldr	r3, [sp, #176]	; 0xb0
   137fc:	mov	fp, r0
   13800:	str	r3, [sp, #76]	; 0x4c
   13804:	mov	sl, r1
   13808:	str	r2, [sp, #36]	; 0x24
   1380c:	str	ip, [sp, #116]	; 0x74
   13810:	bl	10d88 <__ctype_get_mb_cur_max@plt>
   13814:	ldr	r3, [sp, #164]	; 0xa4
   13818:	ands	r4, r3, #2
   1381c:	movne	r3, #1
   13820:	moveq	r3, #0
   13824:	str	r3, [sp, #32]
   13828:	str	r0, [sp, #64]	; 0x40
   1382c:	cmp	r8, #10
   13830:	ldrls	pc, [pc, r8, lsl #2]
   13834:	b	14fe4 <strspn@plt+0x40f4>
   13838:	andeq	r3, r1, ip, lsr #24
   1383c:	andeq	r3, r1, r4, asr #25
   13840:	andeq	r4, r1, r4, asr #5
   13844:	andeq	r3, r1, r4, ror #25
   13848:	muleq	r1, r8, fp
   1384c:	andeq	r3, r1, r0, ror #23
   13850:	andeq	r3, r1, ip, asr ip
   13854:	muleq	r1, r4, ip
   13858:	andeq	r3, r1, r4, ror #16
   1385c:	andeq	r3, r1, r4, ror #16
   13860:	andeq	r3, r1, r4, ror #16
   13864:	cmp	r8, #10
   13868:	beq	1388c <strspn@plt+0x299c>
   1386c:	mov	r1, r8
   13870:	ldr	r0, [pc, #3428]	; 145dc <strspn@plt+0x36ec>
   13874:	bl	13688 <strspn@plt+0x2798>
   13878:	mov	r1, r8
   1387c:	str	r0, [sp, #80]	; 0x50
   13880:	ldr	r0, [pc, #3420]	; 145e4 <strspn@plt+0x36f4>
   13884:	bl	13688 <strspn@plt+0x2798>
   13888:	str	r0, [sp, #76]	; 0x4c
   1388c:	cmp	r4, #0
   13890:	movne	r4, #0
   13894:	beq	14ca4 <strspn@plt+0x3db4>
   13898:	ldr	r7, [sp, #76]	; 0x4c
   1389c:	mov	r5, #0
   138a0:	mov	r6, #1
   138a4:	mov	r0, r7
   138a8:	str	r6, [sp, #40]	; 0x28
   138ac:	str	r5, [sp, #68]	; 0x44
   138b0:	bl	10e18 <strlen@plt>
   138b4:	str	r6, [sp, #28]
   138b8:	str	r5, [sp, #44]	; 0x2c
   138bc:	str	r5, [sp, #72]	; 0x48
   138c0:	str	r7, [sp, #60]	; 0x3c
   138c4:	str	r0, [sp, #52]	; 0x34
   138c8:	str	r8, [sp, #160]	; 0xa0
   138cc:	mov	r8, fp
   138d0:	ldr	fp, [sp, #160]	; 0xa0
   138d4:	mov	r9, #0
   138d8:	ldr	r3, [sp, #24]
   138dc:	cmn	r3, #1
   138e0:	beq	13e48 <strspn@plt+0x2f58>
   138e4:	ldr	r3, [sp, #24]
   138e8:	subs	r6, r3, r9
   138ec:	movne	r6, #1
   138f0:	cmp	r6, #0
   138f4:	beq	13e60 <strspn@plt+0x2f70>
   138f8:	ldr	r7, [sp, #28]
   138fc:	ldr	r0, [sp, #36]	; 0x24
   13900:	cmp	fp, #2
   13904:	moveq	r7, #0
   13908:	andne	r7, r7, #1
   1390c:	add	r3, r0, r9
   13910:	cmp	r7, #0
   13914:	str	r3, [sp, #48]	; 0x30
   13918:	beq	14304 <strspn@plt+0x3414>
   1391c:	ldr	r2, [sp, #52]	; 0x34
   13920:	cmp	r2, #0
   13924:	beq	145e8 <strspn@plt+0x36f8>
   13928:	ldr	r1, [sp, #24]
   1392c:	cmp	r2, #1
   13930:	mov	r3, r2
   13934:	movls	r3, #0
   13938:	movhi	r3, #1
   1393c:	cmn	r1, #1
   13940:	movne	r3, #0
   13944:	cmp	r3, #0
   13948:	add	r5, r9, r2
   1394c:	beq	13958 <strspn@plt+0x2a68>
   13950:	bl	10e18 <strlen@plt>
   13954:	str	r0, [sp, #24]
   13958:	ldr	r3, [sp, #24]
   1395c:	cmp	r5, r3
   13960:	bhi	145e8 <strspn@plt+0x36f8>
   13964:	ldr	r2, [sp, #52]	; 0x34
   13968:	ldr	r1, [sp, #60]	; 0x3c
   1396c:	ldr	r0, [sp, #48]	; 0x30
   13970:	bl	10d10 <memcmp@plt>
   13974:	cmp	r0, #0
   13978:	bne	145e8 <strspn@plt+0x36f8>
   1397c:	ldr	r3, [sp, #32]
   13980:	cmp	r3, #0
   13984:	bne	14ea4 <strspn@plt+0x3fb4>
   13988:	ldr	r3, [sp, #48]	; 0x30
   1398c:	ldrb	r5, [r3]
   13990:	cmp	r5, #126	; 0x7e
   13994:	ldrls	pc, [pc, r5, lsl #2]
   13998:	b	14268 <strspn@plt+0x3378>
   1399c:	andeq	r4, r1, r4, asr r1
   139a0:	andeq	r4, r1, r8, ror #4
   139a4:	andeq	r4, r1, r8, ror #4
   139a8:	andeq	r4, r1, r8, ror #4
   139ac:	andeq	r4, r1, r8, ror #4
   139b0:	andeq	r4, r1, r8, ror #4
   139b4:	andeq	r4, r1, r8, ror #4
   139b8:	andeq	r4, r1, r0, lsr #4
   139bc:	andeq	r4, r1, r0, lsl r2
   139c0:	andeq	r4, r1, r0, lsl r1
   139c4:	ldrdeq	r4, [r1], -r8
   139c8:	andeq	r4, r1, r0, lsr r1
   139cc:	andeq	r4, r1, r8, lsl r1
   139d0:	andeq	r4, r1, r8, asr #32
   139d4:	andeq	r4, r1, r8, ror #4
   139d8:	andeq	r4, r1, r8, ror #4
   139dc:	andeq	r4, r1, r8, ror #4
   139e0:	andeq	r4, r1, r8, ror #4
   139e4:	andeq	r4, r1, r8, ror #4
   139e8:	andeq	r4, r1, r8, ror #4
   139ec:	andeq	r4, r1, r8, ror #4
   139f0:	andeq	r4, r1, r8, ror #4
   139f4:	andeq	r4, r1, r8, ror #4
   139f8:	andeq	r4, r1, r8, ror #4
   139fc:	andeq	r4, r1, r8, ror #4
   13a00:	andeq	r4, r1, r8, ror #4
   13a04:	andeq	r4, r1, r8, ror #4
   13a08:	andeq	r4, r1, r8, ror #4
   13a0c:	andeq	r4, r1, r8, ror #4
   13a10:	andeq	r4, r1, r8, ror #4
   13a14:	andeq	r4, r1, r8, ror #4
   13a18:	andeq	r4, r1, r8, ror #4
   13a1c:	andeq	r4, r1, r8, lsr #4
   13a20:	andeq	r4, r1, ip, lsr r1
   13a24:	andeq	r4, r1, ip, lsr r1
   13a28:	andeq	r4, r1, r0, asr #4
   13a2c:	andeq	r4, r1, ip, lsr r1
   13a30:	andeq	r4, r1, ip, asr r2
   13a34:	andeq	r4, r1, ip, lsr r1
   13a38:	andeq	r3, r1, ip, ror pc
   13a3c:	andeq	r4, r1, ip, lsr r1
   13a40:	andeq	r4, r1, ip, lsr r1
   13a44:	andeq	r4, r1, ip, lsr r1
   13a48:	andeq	r4, r1, ip, asr r2
   13a4c:	andeq	r4, r1, ip, asr r2
   13a50:	andeq	r4, r1, ip, asr r2
   13a54:	andeq	r4, r1, ip, asr r2
   13a58:	andeq	r4, r1, ip, asr r2
   13a5c:	andeq	r4, r1, ip, asr r2
   13a60:	andeq	r4, r1, ip, asr r2
   13a64:	andeq	r4, r1, ip, asr r2
   13a68:	andeq	r4, r1, ip, asr r2
   13a6c:	andeq	r4, r1, ip, asr r2
   13a70:	andeq	r4, r1, ip, asr r2
   13a74:	andeq	r4, r1, ip, asr r2
   13a78:	andeq	r4, r1, ip, asr r2
   13a7c:	andeq	r4, r1, ip, asr r2
   13a80:	andeq	r4, r1, ip, asr r2
   13a84:	andeq	r4, r1, ip, asr r2
   13a88:	andeq	r4, r1, ip, lsr r1
   13a8c:	andeq	r4, r1, ip, lsr r1
   13a90:	andeq	r4, r1, ip, lsr r1
   13a94:	andeq	r4, r1, ip, lsr r1
   13a98:	andeq	r3, r1, r0, asr pc
   13a9c:	andeq	r4, r1, r8, ror #4
   13aa0:	andeq	r4, r1, ip, asr r2
   13aa4:	andeq	r4, r1, ip, asr r2
   13aa8:	andeq	r4, r1, ip, asr r2
   13aac:	andeq	r4, r1, ip, asr r2
   13ab0:	andeq	r4, r1, ip, asr r2
   13ab4:	andeq	r4, r1, ip, asr r2
   13ab8:	andeq	r4, r1, ip, asr r2
   13abc:	andeq	r4, r1, ip, asr r2
   13ac0:	andeq	r4, r1, ip, asr r2
   13ac4:	andeq	r4, r1, ip, asr r2
   13ac8:	andeq	r4, r1, ip, asr r2
   13acc:	andeq	r4, r1, ip, asr r2
   13ad0:	andeq	r4, r1, ip, asr r2
   13ad4:	andeq	r4, r1, ip, asr r2
   13ad8:	andeq	r4, r1, ip, asr r2
   13adc:	andeq	r4, r1, ip, asr r2
   13ae0:	andeq	r4, r1, ip, asr r2
   13ae4:	andeq	r4, r1, ip, asr r2
   13ae8:	andeq	r4, r1, ip, asr r2
   13aec:	andeq	r4, r1, ip, asr r2
   13af0:	andeq	r4, r1, ip, asr r2
   13af4:	andeq	r4, r1, ip, asr r2
   13af8:	andeq	r4, r1, ip, asr r2
   13afc:	andeq	r4, r1, ip, asr r2
   13b00:	andeq	r4, r1, ip, asr r2
   13b04:	andeq	r4, r1, ip, asr r2
   13b08:	andeq	r4, r1, ip, lsr r1
   13b0c:	andeq	r3, r1, r8, lsl #30
   13b10:	andeq	r4, r1, ip, asr r2
   13b14:	andeq	r4, r1, ip, lsr r1
   13b18:	andeq	r4, r1, ip, asr r2
   13b1c:	andeq	r4, r1, ip, lsr r1
   13b20:	andeq	r4, r1, ip, asr r2
   13b24:	andeq	r4, r1, ip, asr r2
   13b28:	andeq	r4, r1, ip, asr r2
   13b2c:	andeq	r4, r1, ip, asr r2
   13b30:	andeq	r4, r1, ip, asr r2
   13b34:	andeq	r4, r1, ip, asr r2
   13b38:	andeq	r4, r1, ip, asr r2
   13b3c:	andeq	r4, r1, ip, asr r2
   13b40:	andeq	r4, r1, ip, asr r2
   13b44:	andeq	r4, r1, ip, asr r2
   13b48:	andeq	r4, r1, ip, asr r2
   13b4c:	andeq	r4, r1, ip, asr r2
   13b50:	andeq	r4, r1, ip, asr r2
   13b54:	andeq	r4, r1, ip, asr r2
   13b58:	andeq	r4, r1, ip, asr r2
   13b5c:	andeq	r4, r1, ip, asr r2
   13b60:	andeq	r4, r1, ip, asr r2
   13b64:	andeq	r4, r1, ip, asr r2
   13b68:	andeq	r4, r1, ip, asr r2
   13b6c:	andeq	r4, r1, ip, asr r2
   13b70:	andeq	r4, r1, ip, asr r2
   13b74:	andeq	r4, r1, ip, asr r2
   13b78:	andeq	r4, r1, ip, asr r2
   13b7c:	andeq	r4, r1, ip, asr r2
   13b80:	andeq	r4, r1, ip, asr r2
   13b84:	andeq	r4, r1, ip, asr r2
   13b88:	andeq	r3, r1, r0, lsr #26
   13b8c:	andeq	r4, r1, ip, lsr r1
   13b90:	andeq	r3, r1, r0, lsr #26
   13b94:	andeq	r4, r1, r0, asr #4
   13b98:	cmp	r4, #0
   13b9c:	moveq	r3, #1
   13ba0:	streq	r3, [sp, #28]
   13ba4:	beq	142d0 <strspn@plt+0x33e0>
   13ba8:	mov	r3, #0
   13bac:	mov	r4, r3
   13bb0:	mov	r2, #1
   13bb4:	str	r2, [sp, #40]	; 0x28
   13bb8:	str	r3, [sp, #68]	; 0x44
   13bbc:	str	r2, [sp, #32]
   13bc0:	str	r2, [sp, #52]	; 0x34
   13bc4:	ldr	r3, [pc, #2584]	; 145e4 <strspn@plt+0x36f4>
   13bc8:	str	r4, [sp, #44]	; 0x2c
   13bcc:	str	r4, [sp, #72]	; 0x48
   13bd0:	str	r4, [sp, #28]
   13bd4:	str	r3, [sp, #60]	; 0x3c
   13bd8:	mov	r8, #2
   13bdc:	b	138c8 <strspn@plt+0x29d8>
   13be0:	cmp	r4, #0
   13be4:	bne	14e70 <strspn@plt+0x3f80>
   13be8:	cmp	sl, #0
   13bec:	beq	14c30 <strspn@plt+0x3d40>
   13bf0:	mov	r3, #34	; 0x22
   13bf4:	strb	r3, [fp]
   13bf8:	ldr	r3, [pc, #2528]	; 145e0 <strspn@plt+0x36f0>
   13bfc:	mov	r1, r4
   13c00:	mov	r2, #1
   13c04:	str	r4, [sp, #68]	; 0x44
   13c08:	str	r2, [sp, #40]	; 0x28
   13c0c:	mov	r4, r2
   13c10:	str	r1, [sp, #44]	; 0x2c
   13c14:	str	r1, [sp, #72]	; 0x48
   13c18:	str	r1, [sp, #32]
   13c1c:	str	r2, [sp, #28]
   13c20:	str	r2, [sp, #52]	; 0x34
   13c24:	str	r3, [sp, #60]	; 0x3c
   13c28:	b	138c8 <strspn@plt+0x29d8>
   13c2c:	mov	r3, #0
   13c30:	str	r3, [sp, #68]	; 0x44
   13c34:	str	r3, [sp, #44]	; 0x2c
   13c38:	str	r3, [sp, #32]
   13c3c:	str	r3, [sp, #28]
   13c40:	str	r3, [sp, #60]	; 0x3c
   13c44:	mov	r3, #1
   13c48:	str	r8, [sp, #72]	; 0x48
   13c4c:	str	r8, [sp, #52]	; 0x34
   13c50:	mov	r4, r8
   13c54:	str	r3, [sp, #40]	; 0x28
   13c58:	b	138c8 <strspn@plt+0x29d8>
   13c5c:	mov	r3, #1
   13c60:	str	r3, [sp, #40]	; 0x28
   13c64:	str	r3, [sp, #32]
   13c68:	str	r3, [sp, #28]
   13c6c:	str	r3, [sp, #52]	; 0x34
   13c70:	ldr	r3, [pc, #2408]	; 145e0 <strspn@plt+0x36f0>
   13c74:	mov	r2, #0
   13c78:	mov	r4, r2
   13c7c:	str	r2, [sp, #68]	; 0x44
   13c80:	str	r2, [sp, #44]	; 0x2c
   13c84:	str	r2, [sp, #72]	; 0x48
   13c88:	str	r3, [sp, #60]	; 0x3c
   13c8c:	mov	r8, #5
   13c90:	b	138c8 <strspn@plt+0x29d8>
   13c94:	mov	r3, #0
   13c98:	mov	r2, #1
   13c9c:	str	r2, [sp, #40]	; 0x28
   13ca0:	mov	r4, r3
   13ca4:	str	r3, [sp, #68]	; 0x44
   13ca8:	str	r2, [sp, #28]
   13cac:	str	r3, [sp, #44]	; 0x2c
   13cb0:	str	r3, [sp, #72]	; 0x48
   13cb4:	str	r3, [sp, #32]
   13cb8:	str	r3, [sp, #52]	; 0x34
   13cbc:	str	r3, [sp, #60]	; 0x3c
   13cc0:	b	138c8 <strspn@plt+0x29d8>
   13cc4:	mov	r2, #1
   13cc8:	mov	r3, #0
   13ccc:	str	r2, [sp, #40]	; 0x28
   13cd0:	mov	r4, r3
   13cd4:	str	r3, [sp, #68]	; 0x44
   13cd8:	str	r8, [sp, #52]	; 0x34
   13cdc:	str	r2, [sp, #32]
   13ce0:	b	13bc4 <strspn@plt+0x2cd4>
   13ce4:	mov	r3, #1
   13ce8:	str	r3, [sp, #40]	; 0x28
   13cec:	str	r3, [sp, #32]
   13cf0:	str	r3, [sp, #28]
   13cf4:	str	r3, [sp, #52]	; 0x34
   13cf8:	ldr	r3, [pc, #2276]	; 145e4 <strspn@plt+0x36f4>
   13cfc:	mov	r2, #0
   13d00:	mov	r4, r2
   13d04:	str	r2, [sp, #68]	; 0x44
   13d08:	str	r2, [sp, #44]	; 0x2c
   13d0c:	str	r2, [sp, #72]	; 0x48
   13d10:	str	r3, [sp, #60]	; 0x3c
   13d14:	mov	r8, #2
   13d18:	b	138c8 <strspn@plt+0x29d8>
   13d1c:	mov	r7, #0
   13d20:	ldr	r3, [sp, #24]
   13d24:	cmn	r3, #1
   13d28:	beq	14864 <strspn@plt+0x3974>
   13d2c:	ldr	r3, [sp, #24]
   13d30:	subs	r3, r3, #1
   13d34:	movne	r3, #1
   13d38:	cmp	r3, #0
   13d3c:	sub	r2, fp, #2
   13d40:	clz	r2, r2
   13d44:	lsr	r2, r2, #5
   13d48:	bne	13f44 <strspn@plt+0x3054>
   13d4c:	cmp	r9, #0
   13d50:	bne	13f44 <strspn@plt+0x3054>
   13d54:	ldr	r3, [sp, #32]
   13d58:	tst	r3, r2
   13d5c:	bne	14064 <strspn@plt+0x3174>
   13d60:	ldr	r3, [sp, #28]
   13d64:	eor	r3, r3, #1
   13d68:	orr	r3, r2, r3
   13d6c:	ldr	r2, [sp, #32]
   13d70:	eor	r3, r3, #1
   13d74:	orrs	r3, r2, r3
   13d78:	beq	13da8 <strspn@plt+0x2eb8>
   13d7c:	mov	r3, #0
   13d80:	ldr	r1, [sp, #56]	; 0x38
   13d84:	cmp	r1, #0
   13d88:	beq	13da8 <strspn@plt+0x2eb8>
   13d8c:	lsr	r2, r5, #5
   13d90:	and	r0, r5, #31
   13d94:	uxtb	r2, r2
   13d98:	ldr	r1, [r1, r2, lsl #2]
   13d9c:	lsr	r2, r1, r0
   13da0:	tst	r2, #1
   13da4:	bne	13db0 <strspn@plt+0x2ec0>
   13da8:	cmp	r7, #0
   13dac:	beq	14000 <strspn@plt+0x3110>
   13db0:	sub	r2, fp, #2
   13db4:	clz	r2, r2
   13db8:	lsr	r2, r2, #5
   13dbc:	ldr	r3, [sp, #32]
   13dc0:	cmp	r3, #0
   13dc4:	bne	140f0 <strspn@plt+0x3200>
   13dc8:	ldr	r3, [sp, #44]	; 0x2c
   13dcc:	eor	r3, r3, #1
   13dd0:	ands	r3, r2, r3
   13dd4:	beq	13e0c <strspn@plt+0x2f1c>
   13dd8:	cmp	sl, r4
   13ddc:	movhi	r2, #39	; 0x27
   13de0:	strbhi	r2, [r8, r4]
   13de4:	add	r2, r4, #1
   13de8:	cmp	r2, sl
   13dec:	movcc	r1, #36	; 0x24
   13df0:	strbcc	r1, [r8, r2]
   13df4:	add	r2, r4, #2
   13df8:	cmp	r2, sl
   13dfc:	add	r4, r4, #3
   13e00:	movcc	r1, #39	; 0x27
   13e04:	strbcc	r1, [r8, r2]
   13e08:	str	r3, [sp, #44]	; 0x2c
   13e0c:	cmp	r4, sl
   13e10:	movcc	r3, #92	; 0x5c
   13e14:	strbcc	r3, [r8, r4]
   13e18:	add	r9, r9, #1
   13e1c:	add	r4, r4, #1
   13e20:	cmp	r4, sl
   13e24:	ldr	r3, [sp, #40]	; 0x28
   13e28:	strbcc	r5, [r8, r4]
   13e2c:	cmp	r6, #0
   13e30:	moveq	r3, #0
   13e34:	str	r3, [sp, #40]	; 0x28
   13e38:	ldr	r3, [sp, #24]
   13e3c:	add	r4, r4, #1
   13e40:	cmn	r3, #1
   13e44:	bne	138e4 <strspn@plt+0x29f4>
   13e48:	ldr	r3, [sp, #36]	; 0x24
   13e4c:	ldrb	r6, [r3, r9]
   13e50:	adds	r6, r6, #0
   13e54:	movne	r6, #1
   13e58:	cmp	r6, #0
   13e5c:	bne	138f8 <strspn@plt+0x2a08>
   13e60:	str	fp, [sp, #160]	; 0xa0
   13e64:	mov	fp, r8
   13e68:	ldr	r8, [sp, #160]	; 0xa0
   13e6c:	ldr	r1, [sp, #32]
   13e70:	cmp	r4, #0
   13e74:	sub	r2, r8, #2
   13e78:	clz	r2, r2
   13e7c:	lsr	r2, r2, #5
   13e80:	andeq	r3, r2, r1
   13e84:	movne	r3, #0
   13e88:	cmp	r3, #0
   13e8c:	bne	14f78 <strspn@plt+0x4088>
   13e90:	eor	r3, r1, #1
   13e94:	ands	r2, r2, r3
   13e98:	beq	14eb4 <strspn@plt+0x3fc4>
   13e9c:	ldr	r3, [sp, #68]	; 0x44
   13ea0:	cmp	r3, #0
   13ea4:	beq	14eb8 <strspn@plt+0x3fc8>
   13ea8:	ldr	r3, [sp, #40]	; 0x28
   13eac:	cmp	r3, #0
   13eb0:	bne	14f34 <strspn@plt+0x4044>
   13eb4:	ldr	r3, [sp, #72]	; 0x48
   13eb8:	adds	r3, r3, #0
   13ebc:	movne	r3, #1
   13ec0:	cmp	sl, #0
   13ec4:	movne	r3, #0
   13ec8:	cmp	r3, #0
   13ecc:	ldreq	r2, [sp, #68]	; 0x44
   13ed0:	beq	14eb8 <strspn@plt+0x3fc8>
   13ed4:	ldr	sl, [sp, #72]	; 0x48
   13ed8:	str	r3, [sp, #68]	; 0x44
   13edc:	ldr	r3, [pc, #1792]	; 145e4 <strspn@plt+0x36f4>
   13ee0:	mov	r2, #39	; 0x27
   13ee4:	mov	r4, #1
   13ee8:	str	r3, [sp, #60]	; 0x3c
   13eec:	mov	r3, #0
   13ef0:	strb	r2, [fp]
   13ef4:	str	r4, [sp, #52]	; 0x34
   13ef8:	mov	r8, #2
   13efc:	str	r3, [sp, #32]
   13f00:	b	138c8 <strspn@plt+0x29d8>
   13f04:	mov	r7, #0
   13f08:	cmp	fp, #2
   13f0c:	beq	14844 <strspn@plt+0x3954>
   13f10:	ldr	r3, [sp, #52]	; 0x34
   13f14:	ldr	r2, [sp, #28]
   13f18:	ldr	r1, [sp, #32]
   13f1c:	cmp	r3, #0
   13f20:	andne	r2, r2, r1
   13f24:	moveq	r2, #0
   13f28:	cmp	r2, #0
   13f2c:	moveq	r5, #92	; 0x5c
   13f30:	moveq	r3, r5
   13f34:	bne	14850 <strspn@plt+0x3960>
   13f38:	ldr	r1, [sp, #28]
   13f3c:	cmp	r1, #0
   13f40:	bne	14fc0 <strspn@plt+0x40d0>
   13f44:	mov	r6, #0
   13f48:	b	13d60 <strspn@plt+0x2e70>
   13f4c:	mov	r7, #0
   13f50:	cmp	fp, #2
   13f54:	beq	148b4 <strspn@plt+0x39c4>
   13f58:	cmp	fp, #5
   13f5c:	beq	14878 <strspn@plt+0x3988>
   13f60:	sub	r2, fp, #2
   13f64:	mov	r6, #0
   13f68:	clz	r2, r2
   13f6c:	mov	r5, #63	; 0x3f
   13f70:	lsr	r2, r2, #5
   13f74:	b	13d60 <strspn@plt+0x2e70>
   13f78:	mov	r7, #0
   13f7c:	cmp	fp, #2
   13f80:	strne	r6, [sp, #68]	; 0x44
   13f84:	movne	r2, #0
   13f88:	movne	r5, #39	; 0x27
   13f8c:	bne	13d60 <strspn@plt+0x2e70>
   13f90:	ldr	r3, [sp, #32]
   13f94:	cmp	r3, #0
   13f98:	bne	14c94 <strspn@plt+0x3da4>
   13f9c:	cmp	sl, #0
   13fa0:	ldr	r3, [sp, #72]	; 0x48
   13fa4:	clz	r3, r3
   13fa8:	lsr	r3, r3, #5
   13fac:	moveq	r3, #0
   13fb0:	cmp	r3, #0
   13fb4:	bne	14bc8 <strspn@plt+0x3cd8>
   13fb8:	cmp	sl, r4
   13fbc:	movhi	r3, #39	; 0x27
   13fc0:	strbhi	r3, [r8, r4]
   13fc4:	add	r3, r4, #1
   13fc8:	cmp	sl, r3
   13fcc:	movhi	r2, #92	; 0x5c
   13fd0:	strbhi	r2, [r8, r3]
   13fd4:	add	r3, r4, #2
   13fd8:	cmp	sl, r3
   13fdc:	movhi	r2, #39	; 0x27
   13fe0:	strbhi	r2, [r8, r3]
   13fe4:	mov	r3, #0
   13fe8:	cmp	r7, #0
   13fec:	add	r4, r4, #3
   13ff0:	str	r3, [sp, #44]	; 0x2c
   13ff4:	str	r6, [sp, #68]	; 0x44
   13ff8:	mov	r5, #39	; 0x27
   13ffc:	bne	13db0 <strspn@plt+0x2ec0>
   14000:	ldr	r2, [sp, #44]	; 0x2c
   14004:	eor	r3, r3, #1
   14008:	and	r3, r3, r2
   1400c:	add	r9, r9, #1
   14010:	uxtb	r3, r3
   14014:	cmp	r3, #0
   14018:	beq	13e20 <strspn@plt+0x2f30>
   1401c:	cmp	sl, r4
   14020:	movhi	r3, #39	; 0x27
   14024:	strbhi	r3, [r8, r4]
   14028:	add	r3, r4, #1
   1402c:	cmp	sl, r3
   14030:	movhi	r2, #39	; 0x27
   14034:	strbhi	r2, [r8, r3]
   14038:	mov	r3, #0
   1403c:	add	r4, r4, #2
   14040:	str	r3, [sp, #44]	; 0x2c
   14044:	b	13e20 <strspn@plt+0x2f30>
   14048:	mov	r3, #114	; 0x72
   1404c:	ldr	r1, [sp, #32]
   14050:	sub	r2, fp, #2
   14054:	clz	r2, r2
   14058:	lsr	r2, r2, #5
   1405c:	tst	r2, r1
   14060:	beq	13f38 <strspn@plt+0x3048>
   14064:	mov	fp, r8
   14068:	mov	r8, #2
   1406c:	ldr	r3, [sp, #28]
   14070:	cmp	r3, #0
   14074:	movne	r8, #4
   14078:	ldr	r3, [sp, #164]	; 0xa4
   1407c:	mov	ip, #0
   14080:	bic	r3, r3, #2
   14084:	str	r3, [sp, #4]
   14088:	ldr	r3, [sp, #76]	; 0x4c
   1408c:	str	r8, [sp]
   14090:	str	r3, [sp, #16]
   14094:	ldr	r3, [sp, #80]	; 0x50
   14098:	ldr	r2, [sp, #36]	; 0x24
   1409c:	str	r3, [sp, #12]
   140a0:	mov	r1, sl
   140a4:	ldr	r3, [sp, #24]
   140a8:	mov	r0, fp
   140ac:	str	ip, [sp, #8]
   140b0:	bl	137d0 <strspn@plt+0x28e0>
   140b4:	mov	r4, r0
   140b8:	ldr	r3, [pc, #1304]	; 145d8 <strspn@plt+0x36e8>
   140bc:	ldr	r2, [sp, #116]	; 0x74
   140c0:	mov	r0, r4
   140c4:	ldr	r3, [r3]
   140c8:	cmp	r2, r3
   140cc:	bne	14fbc <strspn@plt+0x40cc>
   140d0:	add	sp, sp, #124	; 0x7c
   140d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d8:	mov	r5, #110	; 0x6e
   140dc:	ldr	r3, [sp, #32]
   140e0:	mov	r2, #0
   140e4:	cmp	r3, #0
   140e8:	mov	r6, r2
   140ec:	beq	13dc8 <strspn@plt+0x2ed8>
   140f0:	str	fp, [sp, #160]	; 0xa0
   140f4:	mov	fp, r8
   140f8:	ldr	r8, [sp, #160]	; 0xa0
   140fc:	mov	r3, r2
   14100:	ldr	r2, [sp, #28]
   14104:	and	r2, r2, r3
   14108:	str	r2, [sp, #28]
   1410c:	b	1406c <strspn@plt+0x317c>
   14110:	mov	r5, #116	; 0x74
   14114:	b	140dc <strspn@plt+0x31ec>
   14118:	mov	r5, #102	; 0x66
   1411c:	ldr	r3, [sp, #32]
   14120:	cmp	r3, #0
   14124:	bne	14cd0 <strspn@plt+0x3de0>
   14128:	mov	r6, #0
   1412c:	b	13e0c <strspn@plt+0x2f1c>
   14130:	mov	r5, #118	; 0x76
   14134:	b	1411c <strspn@plt+0x322c>
   14138:	mov	r7, #0
   1413c:	mov	r6, #0
   14140:	b	13d7c <strspn@plt+0x2e8c>
   14144:	ldr	r3, [sp, #32]
   14148:	cmp	r3, #0
   1414c:	bne	14f14 <strspn@plt+0x4024>
   14150:	mov	r7, r3
   14154:	ldr	r3, [sp, #44]	; 0x2c
   14158:	sub	r2, fp, #2
   1415c:	eor	r3, r3, #1
   14160:	clz	r2, r2
   14164:	lsr	r2, r2, #5
   14168:	ands	r3, r2, r3
   1416c:	beq	14bb4 <strspn@plt+0x3cc4>
   14170:	cmp	sl, r4
   14174:	movhi	r1, #39	; 0x27
   14178:	strbhi	r1, [r8, r4]
   1417c:	add	r1, r4, #1
   14180:	cmp	sl, r1
   14184:	movhi	r0, #36	; 0x24
   14188:	strbhi	r0, [r8, r1]
   1418c:	add	r1, r4, #2
   14190:	cmp	sl, r1
   14194:	movhi	r0, #39	; 0x27
   14198:	strbhi	r0, [r8, r1]
   1419c:	add	r1, r4, #3
   141a0:	cmp	sl, r1
   141a4:	bls	14c14 <strspn@plt+0x3d24>
   141a8:	mov	r4, r1
   141ac:	mov	r1, #92	; 0x5c
   141b0:	strb	r1, [r8, r4]
   141b4:	mov	r1, r4
   141b8:	str	r3, [sp, #44]	; 0x2c
   141bc:	cmp	fp, #2
   141c0:	add	r4, r4, #1
   141c4:	beq	14c5c <strspn@plt+0x3d6c>
   141c8:	ldr	r0, [sp, #24]
   141cc:	add	r3, r9, #1
   141d0:	cmp	r3, r0
   141d4:	bcs	141ec <strspn@plt+0x32fc>
   141d8:	ldr	r0, [sp, #36]	; 0x24
   141dc:	ldrb	r3, [r0, r3]
   141e0:	sub	r3, r3, #48	; 0x30
   141e4:	cmp	r3, #9
   141e8:	bls	14c6c <strspn@plt+0x3d7c>
   141ec:	mov	r5, #48	; 0x30
   141f0:	ldr	r3, [sp, #28]
   141f4:	eor	r3, r3, #1
   141f8:	orrs	r2, r2, r3
   141fc:	mov	r3, r6
   14200:	moveq	r6, r2
   14204:	beq	13d80 <strspn@plt+0x2e90>
   14208:	mov	r6, #0
   1420c:	b	13da8 <strspn@plt+0x2eb8>
   14210:	mov	r2, #0
   14214:	mov	r6, r2
   14218:	mov	r5, #98	; 0x62
   1421c:	b	13dc8 <strspn@plt+0x2ed8>
   14220:	mov	r5, #97	; 0x61
   14224:	b	14128 <strspn@plt+0x3238>
   14228:	mov	r3, r7
   1422c:	mov	r6, r7
   14230:	mov	r2, #0
   14234:	mov	r7, r3
   14238:	mov	r5, #32
   1423c:	b	13d60 <strspn@plt+0x2e70>
   14240:	cmp	r9, #0
   14244:	mov	r3, r7
   14248:	bne	14810 <strspn@plt+0x3920>
   1424c:	mov	r6, r7
   14250:	mov	r2, r9
   14254:	mov	r7, r3
   14258:	b	13d60 <strspn@plt+0x2e70>
   1425c:	mov	r6, r7
   14260:	b	13d7c <strspn@plt+0x2e8c>
   14264:	mov	r7, #0
   14268:	ldr	r3, [sp, #64]	; 0x40
   1426c:	cmp	r3, #1
   14270:	bne	148cc <strspn@plt+0x39dc>
   14274:	bl	10df4 <__ctype_b_loc@plt>
   14278:	ldr	r2, [sp, #64]	; 0x40
   1427c:	sxth	r3, r5
   14280:	mov	ip, r2
   14284:	lsl	r3, r3, #1
   14288:	ldr	r2, [r0]
   1428c:	ldrh	r3, [r2, r3]
   14290:	and	r3, r3, #16384	; 0x4000
   14294:	cmp	r3, #0
   14298:	ldr	r3, [sp, #28]
   1429c:	movne	r6, #1
   142a0:	moveq	r6, #0
   142a4:	movne	r2, #0
   142a8:	andeq	r2, r3, #1
   142ac:	cmp	r2, #0
   142b0:	bne	14bdc <strspn@plt+0x3cec>
   142b4:	sub	r2, fp, #2
   142b8:	clz	r2, r2
   142bc:	lsr	r2, r2, #5
   142c0:	b	13d60 <strspn@plt+0x2e70>
   142c4:	cmp	r4, #0
   142c8:	bne	14f88 <strspn@plt+0x4098>
   142cc:	str	r4, [sp, #28]
   142d0:	cmp	sl, #0
   142d4:	bne	14fcc <strspn@plt+0x40dc>
   142d8:	ldr	r3, [pc, #772]	; 145e4 <strspn@plt+0x36f4>
   142dc:	mov	r4, #1
   142e0:	str	r4, [sp, #40]	; 0x28
   142e4:	str	r3, [sp, #60]	; 0x3c
   142e8:	str	r4, [sp, #52]	; 0x34
   142ec:	str	sl, [sp, #72]	; 0x48
   142f0:	str	sl, [sp, #68]	; 0x44
   142f4:	str	sl, [sp, #44]	; 0x2c
   142f8:	str	sl, [sp, #32]
   142fc:	mov	r8, #2
   14300:	b	138c8 <strspn@plt+0x29d8>
   14304:	ldr	r3, [sp, #36]	; 0x24
   14308:	ldrb	r5, [r3, r9]
   1430c:	cmp	r5, #126	; 0x7e
   14310:	ldrls	pc, [pc, r5, lsl #2]
   14314:	b	14268 <strspn@plt+0x3378>
   14318:	andeq	r4, r1, ip, asr #10
   1431c:	andeq	r4, r1, r8, ror #4
   14320:	andeq	r4, r1, r8, ror #4
   14324:	andeq	r4, r1, r8, ror #4
   14328:	andeq	r4, r1, r8, ror #4
   1432c:	andeq	r4, r1, r8, ror #4
   14330:	andeq	r4, r1, r8, ror #4
   14334:	andeq	r4, r1, r8, lsr r5
   14338:	andeq	r4, r1, r4, lsr #10
   1433c:	andeq	r4, r1, ip, lsl r5
   14340:	andeq	r4, r1, r4, lsl r5
   14344:	andeq	r4, r1, r4, asr #11
   14348:			; <UNDEFINED> instruction: 0x000145b0
   1434c:	andeq	r4, r1, r8, asr #32
   14350:	andeq	r4, r1, r8, ror #4
   14354:	andeq	r4, r1, r8, ror #4
   14358:	andeq	r4, r1, r8, ror #4
   1435c:	andeq	r4, r1, r8, ror #4
   14360:	andeq	r4, r1, r8, ror #4
   14364:	andeq	r4, r1, r8, ror #4
   14368:	andeq	r4, r1, r8, ror #4
   1436c:	andeq	r4, r1, r8, ror #4
   14370:	andeq	r4, r1, r8, ror #4
   14374:	andeq	r4, r1, r8, ror #4
   14378:	andeq	r4, r1, r8, ror #4
   1437c:	andeq	r4, r1, r8, ror #4
   14380:	andeq	r4, r1, r8, ror #4
   14384:	andeq	r4, r1, r8, ror #4
   14388:	andeq	r4, r1, r8, ror #4
   1438c:	andeq	r4, r1, r8, ror #4
   14390:	andeq	r4, r1, r8, ror #4
   14394:	andeq	r4, r1, r8, ror #4
   14398:	andeq	r4, r1, r0, lsr #11
   1439c:	andeq	r4, r1, ip, lsl #11
   143a0:	andeq	r4, r1, ip, lsl #11
   143a4:	andeq	r4, r1, ip, ror r5
   143a8:	andeq	r4, r1, ip, lsl #11
   143ac:			; <UNDEFINED> instruction: 0x000142b4
   143b0:	andeq	r4, r1, ip, lsl #11
   143b4:	andeq	r3, r1, ip, ror pc
   143b8:	andeq	r4, r1, ip, lsl #11
   143bc:	andeq	r4, r1, ip, lsl #11
   143c0:	andeq	r4, r1, ip, lsl #11
   143c4:			; <UNDEFINED> instruction: 0x000142b4
   143c8:			; <UNDEFINED> instruction: 0x000142b4
   143cc:			; <UNDEFINED> instruction: 0x000142b4
   143d0:			; <UNDEFINED> instruction: 0x000142b4
   143d4:			; <UNDEFINED> instruction: 0x000142b4
   143d8:			; <UNDEFINED> instruction: 0x000142b4
   143dc:			; <UNDEFINED> instruction: 0x000142b4
   143e0:			; <UNDEFINED> instruction: 0x000142b4
   143e4:			; <UNDEFINED> instruction: 0x000142b4
   143e8:			; <UNDEFINED> instruction: 0x000142b4
   143ec:			; <UNDEFINED> instruction: 0x000142b4
   143f0:			; <UNDEFINED> instruction: 0x000142b4
   143f4:			; <UNDEFINED> instruction: 0x000142b4
   143f8:			; <UNDEFINED> instruction: 0x000142b4
   143fc:			; <UNDEFINED> instruction: 0x000142b4
   14400:			; <UNDEFINED> instruction: 0x000142b4
   14404:	andeq	r4, r1, ip, lsl #11
   14408:	andeq	r4, r1, ip, lsl #11
   1440c:	andeq	r4, r1, ip, lsl #11
   14410:	andeq	r4, r1, ip, lsl #11
   14414:	andeq	r3, r1, r0, asr pc
   14418:	andeq	r4, r1, r8, ror #4
   1441c:			; <UNDEFINED> instruction: 0x000142b4
   14420:			; <UNDEFINED> instruction: 0x000142b4
   14424:			; <UNDEFINED> instruction: 0x000142b4
   14428:			; <UNDEFINED> instruction: 0x000142b4
   1442c:			; <UNDEFINED> instruction: 0x000142b4
   14430:			; <UNDEFINED> instruction: 0x000142b4
   14434:			; <UNDEFINED> instruction: 0x000142b4
   14438:			; <UNDEFINED> instruction: 0x000142b4
   1443c:			; <UNDEFINED> instruction: 0x000142b4
   14440:			; <UNDEFINED> instruction: 0x000142b4
   14444:			; <UNDEFINED> instruction: 0x000142b4
   14448:			; <UNDEFINED> instruction: 0x000142b4
   1444c:			; <UNDEFINED> instruction: 0x000142b4
   14450:			; <UNDEFINED> instruction: 0x000142b4
   14454:			; <UNDEFINED> instruction: 0x000142b4
   14458:			; <UNDEFINED> instruction: 0x000142b4
   1445c:			; <UNDEFINED> instruction: 0x000142b4
   14460:			; <UNDEFINED> instruction: 0x000142b4
   14464:			; <UNDEFINED> instruction: 0x000142b4
   14468:			; <UNDEFINED> instruction: 0x000142b4
   1446c:			; <UNDEFINED> instruction: 0x000142b4
   14470:			; <UNDEFINED> instruction: 0x000142b4
   14474:			; <UNDEFINED> instruction: 0x000142b4
   14478:			; <UNDEFINED> instruction: 0x000142b4
   1447c:			; <UNDEFINED> instruction: 0x000142b4
   14480:			; <UNDEFINED> instruction: 0x000142b4
   14484:	andeq	r4, r1, ip, lsl #11
   14488:	andeq	r3, r1, r8, lsl #30
   1448c:			; <UNDEFINED> instruction: 0x000142b4
   14490:	andeq	r4, r1, ip, lsl #11
   14494:			; <UNDEFINED> instruction: 0x000142b4
   14498:	andeq	r4, r1, ip, lsl #11
   1449c:			; <UNDEFINED> instruction: 0x000142b4
   144a0:			; <UNDEFINED> instruction: 0x000142b4
   144a4:			; <UNDEFINED> instruction: 0x000142b4
   144a8:			; <UNDEFINED> instruction: 0x000142b4
   144ac:			; <UNDEFINED> instruction: 0x000142b4
   144b0:			; <UNDEFINED> instruction: 0x000142b4
   144b4:			; <UNDEFINED> instruction: 0x000142b4
   144b8:			; <UNDEFINED> instruction: 0x000142b4
   144bc:			; <UNDEFINED> instruction: 0x000142b4
   144c0:			; <UNDEFINED> instruction: 0x000142b4
   144c4:			; <UNDEFINED> instruction: 0x000142b4
   144c8:			; <UNDEFINED> instruction: 0x000142b4
   144cc:			; <UNDEFINED> instruction: 0x000142b4
   144d0:			; <UNDEFINED> instruction: 0x000142b4
   144d4:			; <UNDEFINED> instruction: 0x000142b4
   144d8:			; <UNDEFINED> instruction: 0x000142b4
   144dc:			; <UNDEFINED> instruction: 0x000142b4
   144e0:			; <UNDEFINED> instruction: 0x000142b4
   144e4:			; <UNDEFINED> instruction: 0x000142b4
   144e8:			; <UNDEFINED> instruction: 0x000142b4
   144ec:			; <UNDEFINED> instruction: 0x000142b4
   144f0:			; <UNDEFINED> instruction: 0x000142b4
   144f4:			; <UNDEFINED> instruction: 0x000142b4
   144f8:			; <UNDEFINED> instruction: 0x000142b4
   144fc:			; <UNDEFINED> instruction: 0x000142b4
   14500:			; <UNDEFINED> instruction: 0x000142b4
   14504:	andeq	r3, r1, r0, lsr #26
   14508:	andeq	r4, r1, ip, lsl #11
   1450c:	andeq	r3, r1, r0, lsr #26
   14510:	andeq	r4, r1, ip, ror r5
   14514:	mov	r3, #110	; 0x6e
   14518:	b	1404c <strspn@plt+0x315c>
   1451c:	mov	r3, #116	; 0x74
   14520:	b	1404c <strspn@plt+0x315c>
   14524:	sub	r2, fp, #2
   14528:	mov	r3, #98	; 0x62
   1452c:	clz	r2, r2
   14530:	lsr	r2, r2, #5
   14534:	b	13f38 <strspn@plt+0x3048>
   14538:	sub	r2, fp, #2
   1453c:	mov	r3, #97	; 0x61
   14540:	clz	r2, r2
   14544:	lsr	r2, r2, #5
   14548:	b	13f38 <strspn@plt+0x3048>
   1454c:	ldr	r3, [sp, #28]
   14550:	cmp	r3, #0
   14554:	bne	14144 <strspn@plt+0x3254>
   14558:	ldr	r3, [sp, #164]	; 0xa4
   1455c:	tst	r3, #1
   14560:	bne	14bd4 <strspn@plt+0x3ce4>
   14564:	ldr	r6, [sp, #28]
   14568:	sub	r2, fp, #2
   1456c:	mov	r7, r6
   14570:	clz	r2, r2
   14574:	lsr	r2, r2, #5
   14578:	b	13d60 <strspn@plt+0x2e70>
   1457c:	sub	r2, fp, #2
   14580:	clz	r2, r2
   14584:	lsr	r2, r2, #5
   14588:	b	13d4c <strspn@plt+0x2e5c>
   1458c:	sub	r2, fp, #2
   14590:	mov	r6, #0
   14594:	clz	r2, r2
   14598:	lsr	r2, r2, #5
   1459c:	b	13d54 <strspn@plt+0x2e64>
   145a0:	sub	r2, fp, #2
   145a4:	clz	r2, r2
   145a8:	lsr	r2, r2, #5
   145ac:	b	13d54 <strspn@plt+0x2e64>
   145b0:	sub	r2, fp, #2
   145b4:	mov	r3, #102	; 0x66
   145b8:	clz	r2, r2
   145bc:	lsr	r2, r2, #5
   145c0:	b	13f38 <strspn@plt+0x3048>
   145c4:	sub	r2, fp, #2
   145c8:	mov	r3, #118	; 0x76
   145cc:	clz	r2, r2
   145d0:	lsr	r2, r2, #5
   145d4:	b	13f38 <strspn@plt+0x3048>
   145d8:	andeq	r7, r2, r8, lsl #30
   145dc:	andeq	r7, r1, r4, lsl #7
   145e0:	andeq	r7, r1, ip, ror #6
   145e4:	andeq	r7, r1, r0, lsl #7
   145e8:	ldr	r3, [sp, #48]	; 0x30
   145ec:	ldrb	r5, [r3]
   145f0:	cmp	r5, #126	; 0x7e
   145f4:	ldrls	pc, [pc, r5, lsl #2]
   145f8:	b	14264 <strspn@plt+0x3374>
   145fc:	andeq	r4, r1, r4, asr #2
   14600:	andeq	r4, r1, r4, ror #4
   14604:	andeq	r4, r1, r4, ror #4
   14608:	andeq	r4, r1, r4, ror #4
   1460c:	andeq	r4, r1, r4, ror #4
   14610:	andeq	r4, r1, r4, ror #4
   14614:	andeq	r4, r1, r4, ror #4
   14618:	andeq	r4, r1, ip, lsr r8
   1461c:	andeq	r4, r1, r4, lsr r8
   14620:	andeq	r4, r1, r0, lsl r1
   14624:	ldrdeq	r4, [r1], -r8
   14628:	andeq	r4, r1, r0, lsr r1
   1462c:	andeq	r4, r1, r8, lsl r1
   14630:	andeq	r4, r1, r8, lsr #16
   14634:	andeq	r4, r1, r4, ror #4
   14638:	andeq	r4, r1, r4, ror #4
   1463c:	andeq	r4, r1, r4, ror #4
   14640:	andeq	r4, r1, r4, ror #4
   14644:	andeq	r4, r1, r4, ror #4
   14648:	andeq	r4, r1, r4, ror #4
   1464c:	andeq	r4, r1, r4, ror #4
   14650:	andeq	r4, r1, r4, ror #4
   14654:	andeq	r4, r1, r4, ror #4
   14658:	andeq	r4, r1, r4, ror #4
   1465c:	andeq	r4, r1, r4, ror #4
   14660:	andeq	r4, r1, r4, ror #4
   14664:	andeq	r4, r1, r4, ror #4
   14668:	andeq	r4, r1, r4, ror #4
   1466c:	andeq	r4, r1, r4, ror #4
   14670:	andeq	r4, r1, r4, ror #4
   14674:	andeq	r4, r1, r4, ror #4
   14678:	andeq	r4, r1, r4, ror #4
   1467c:	andeq	r4, r1, r0, lsr #16
   14680:	andeq	r4, r1, r8, lsr r1
   14684:	andeq	r4, r1, r8, lsr r1
   14688:	andeq	r4, r1, r4, lsl #16
   1468c:	andeq	r4, r1, r8, lsr r1
   14690:	strdeq	r4, [r1], -r8
   14694:	andeq	r4, r1, r8, lsr r1
   14698:	andeq	r3, r1, r8, ror pc
   1469c:	andeq	r4, r1, r8, lsr r1
   146a0:	andeq	r4, r1, r8, lsr r1
   146a4:	andeq	r4, r1, r8, lsr r1
   146a8:	strdeq	r4, [r1], -r8
   146ac:	strdeq	r4, [r1], -r8
   146b0:	strdeq	r4, [r1], -r8
   146b4:	strdeq	r4, [r1], -r8
   146b8:	strdeq	r4, [r1], -r8
   146bc:	strdeq	r4, [r1], -r8
   146c0:	strdeq	r4, [r1], -r8
   146c4:	strdeq	r4, [r1], -r8
   146c8:	strdeq	r4, [r1], -r8
   146cc:	strdeq	r4, [r1], -r8
   146d0:	strdeq	r4, [r1], -r8
   146d4:	strdeq	r4, [r1], -r8
   146d8:	strdeq	r4, [r1], -r8
   146dc:	strdeq	r4, [r1], -r8
   146e0:	strdeq	r4, [r1], -r8
   146e4:	strdeq	r4, [r1], -r8
   146e8:	andeq	r4, r1, r8, lsr r1
   146ec:	andeq	r4, r1, r8, lsr r1
   146f0:	andeq	r4, r1, r8, lsr r1
   146f4:	andeq	r4, r1, r8, lsr r1
   146f8:	andeq	r3, r1, ip, asr #30
   146fc:	andeq	r4, r1, r4, ror #4
   14700:	strdeq	r4, [r1], -r8
   14704:	strdeq	r4, [r1], -r8
   14708:	strdeq	r4, [r1], -r8
   1470c:	strdeq	r4, [r1], -r8
   14710:	strdeq	r4, [r1], -r8
   14714:	strdeq	r4, [r1], -r8
   14718:	strdeq	r4, [r1], -r8
   1471c:	strdeq	r4, [r1], -r8
   14720:	strdeq	r4, [r1], -r8
   14724:	strdeq	r4, [r1], -r8
   14728:	strdeq	r4, [r1], -r8
   1472c:	strdeq	r4, [r1], -r8
   14730:	strdeq	r4, [r1], -r8
   14734:	strdeq	r4, [r1], -r8
   14738:	strdeq	r4, [r1], -r8
   1473c:	strdeq	r4, [r1], -r8
   14740:	strdeq	r4, [r1], -r8
   14744:	strdeq	r4, [r1], -r8
   14748:	strdeq	r4, [r1], -r8
   1474c:	strdeq	r4, [r1], -r8
   14750:	strdeq	r4, [r1], -r8
   14754:	strdeq	r4, [r1], -r8
   14758:	strdeq	r4, [r1], -r8
   1475c:	strdeq	r4, [r1], -r8
   14760:	strdeq	r4, [r1], -r8
   14764:	strdeq	r4, [r1], -r8
   14768:	andeq	r4, r1, r8, lsr r1
   1476c:	andeq	r3, r1, r4, lsl #30
   14770:	strdeq	r4, [r1], -r8
   14774:	andeq	r4, r1, r8, lsr r1
   14778:	strdeq	r4, [r1], -r8
   1477c:	andeq	r4, r1, r8, lsr r1
   14780:	strdeq	r4, [r1], -r8
   14784:	strdeq	r4, [r1], -r8
   14788:	strdeq	r4, [r1], -r8
   1478c:	strdeq	r4, [r1], -r8
   14790:	strdeq	r4, [r1], -r8
   14794:	strdeq	r4, [r1], -r8
   14798:	strdeq	r4, [r1], -r8
   1479c:	strdeq	r4, [r1], -r8
   147a0:	strdeq	r4, [r1], -r8
   147a4:	strdeq	r4, [r1], -r8
   147a8:	strdeq	r4, [r1], -r8
   147ac:	strdeq	r4, [r1], -r8
   147b0:	strdeq	r4, [r1], -r8
   147b4:	strdeq	r4, [r1], -r8
   147b8:	strdeq	r4, [r1], -r8
   147bc:	strdeq	r4, [r1], -r8
   147c0:	strdeq	r4, [r1], -r8
   147c4:	strdeq	r4, [r1], -r8
   147c8:	strdeq	r4, [r1], -r8
   147cc:	strdeq	r4, [r1], -r8
   147d0:	strdeq	r4, [r1], -r8
   147d4:	strdeq	r4, [r1], -r8
   147d8:	strdeq	r4, [r1], -r8
   147dc:	strdeq	r4, [r1], -r8
   147e0:	strdeq	r4, [r1], -r8
   147e4:	strdeq	r4, [r1], -r8
   147e8:	andeq	r3, r1, ip, lsl sp
   147ec:	andeq	r4, r1, r8, lsr r1
   147f0:	andeq	r3, r1, ip, lsl sp
   147f4:	andeq	r4, r1, r4, lsl #16
   147f8:	mov	r6, r7
   147fc:	mov	r7, #0
   14800:	b	13d7c <strspn@plt+0x2e8c>
   14804:	cmp	r9, #0
   14808:	mov	r3, #0
   1480c:	beq	1424c <strspn@plt+0x335c>
   14810:	mov	r6, #0
   14814:	mov	r7, r3
   14818:	mov	r3, r6
   1481c:	b	13d80 <strspn@plt+0x2e90>
   14820:	mov	r3, #0
   14824:	b	1422c <strspn@plt+0x333c>
   14828:	mov	r7, #0
   1482c:	mov	r3, #114	; 0x72
   14830:	b	1404c <strspn@plt+0x315c>
   14834:	mov	r5, #98	; 0x62
   14838:	b	140dc <strspn@plt+0x31ec>
   1483c:	mov	r5, #97	; 0x61
   14840:	b	1411c <strspn@plt+0x322c>
   14844:	ldr	r3, [sp, #32]
   14848:	cmp	r3, #0
   1484c:	bne	14c94 <strspn@plt+0x3da4>
   14850:	add	r9, r9, #1
   14854:	ldr	r3, [sp, #44]	; 0x2c
   14858:	mov	r6, #0
   1485c:	mov	r5, #92	; 0x5c
   14860:	b	14014 <strspn@plt+0x3124>
   14864:	ldr	r3, [sp, #36]	; 0x24
   14868:	ldrb	r3, [r3, #1]
   1486c:	adds	r3, r3, #0
   14870:	movne	r3, #1
   14874:	b	13d38 <strspn@plt+0x2e48>
   14878:	ldr	r3, [sp, #164]	; 0xa4
   1487c:	ands	r3, r3, #4
   14880:	beq	148a4 <strspn@plt+0x39b4>
   14884:	ldr	r2, [sp, #24]
   14888:	add	r3, r9, #2
   1488c:	cmp	r3, r2
   14890:	bcs	148a4 <strspn@plt+0x39b4>
   14894:	ldr	r2, [sp, #48]	; 0x30
   14898:	ldrb	r5, [r2, #1]
   1489c:	cmp	r5, #63	; 0x3f
   148a0:	beq	14d08 <strspn@plt+0x3e18>
   148a4:	mov	r2, #0
   148a8:	mov	r6, r2
   148ac:	mov	r5, #63	; 0x3f
   148b0:	b	13d60 <strspn@plt+0x2e70>
   148b4:	ldr	r3, [sp, #32]
   148b8:	cmp	r3, #0
   148bc:	bne	14c94 <strspn@plt+0x3da4>
   148c0:	mov	r6, r3
   148c4:	mov	r5, #63	; 0x3f
   148c8:	b	13da8 <strspn@plt+0x2eb8>
   148cc:	ldr	r3, [sp, #24]
   148d0:	cmn	r3, #1
   148d4:	mov	r3, #0
   148d8:	str	r3, [sp, #108]	; 0x6c
   148dc:	str	r3, [sp, #112]	; 0x70
   148e0:	bne	148f0 <strspn@plt+0x3a00>
   148e4:	ldr	r0, [sp, #36]	; 0x24
   148e8:	bl	10e18 <strlen@plt>
   148ec:	str	r0, [sp, #24]
   148f0:	mov	r3, #0
   148f4:	str	sl, [sp, #88]	; 0x58
   148f8:	ldr	sl, [sp, #36]	; 0x24
   148fc:	str	r5, [sp, #92]	; 0x5c
   14900:	mov	r5, r3
   14904:	str	r7, [sp, #96]	; 0x60
   14908:	str	r4, [sp, #100]	; 0x64
   1490c:	str	r8, [sp, #84]	; 0x54
   14910:	ldr	r3, [sp, #24]
   14914:	add	r4, r9, r5
   14918:	add	r7, sl, r4
   1491c:	sub	r2, r3, r4
   14920:	mov	r1, r7
   14924:	add	r3, sp, #108	; 0x6c
   14928:	add	r0, sp, #104	; 0x68
   1492c:	bl	161c8 <strspn@plt+0x52d8>
   14930:	subs	r8, r0, #0
   14934:	beq	14984 <strspn@plt+0x3a94>
   14938:	cmn	r8, #1
   1493c:	beq	14ce4 <strspn@plt+0x3df4>
   14940:	cmn	r8, #2
   14944:	beq	14e04 <strspn@plt+0x3f14>
   14948:	ldr	r3, [sp, #32]
   1494c:	cmp	fp, #2
   14950:	movne	r3, #0
   14954:	andeq	r3, r3, #1
   14958:	cmp	r3, #0
   1495c:	bne	14ae4 <strspn@plt+0x3bf4>
   14960:	ldr	r0, [sp, #104]	; 0x68
   14964:	bl	10d58 <iswprint@plt>
   14968:	add	r5, r5, r8
   1496c:	cmp	r0, #0
   14970:	add	r0, sp, #108	; 0x6c
   14974:	moveq	r6, #0
   14978:	bl	10d04 <mbsinit@plt>
   1497c:	cmp	r0, #0
   14980:	beq	14910 <strspn@plt+0x3a20>
   14984:	ldr	r3, [sp, #28]
   14988:	mov	ip, r5
   1498c:	eor	r2, r6, #1
   14990:	ldr	r5, [sp, #92]	; 0x5c
   14994:	ldr	r7, [sp, #96]	; 0x60
   14998:	ldr	r4, [sp, #100]	; 0x64
   1499c:	ldr	r8, [sp, #84]	; 0x54
   149a0:	ldr	sl, [sp, #88]	; 0x58
   149a4:	and	r2, r2, r3
   149a8:	cmp	ip, #1
   149ac:	bls	142ac <strspn@plt+0x33bc>
   149b0:	add	r1, ip, r9
   149b4:	ldr	lr, [sp, #48]	; 0x30
   149b8:	mov	r0, #0
   149bc:	str	r6, [sp, #48]	; 0x30
   149c0:	mov	ip, #39	; 0x27
   149c4:	ldr	r6, [sp, #44]	; 0x2c
   149c8:	b	14a80 <strspn@plt+0x3b90>
   149cc:	ldr	r0, [sp, #32]
   149d0:	sub	r3, fp, #2
   149d4:	cmp	r0, #0
   149d8:	clz	r3, r3
   149dc:	lsr	r3, r3, #5
   149e0:	bne	14be8 <strspn@plt+0x3cf8>
   149e4:	eor	r0, r6, #1
   149e8:	ands	r3, r3, r0
   149ec:	beq	14a1c <strspn@plt+0x3b2c>
   149f0:	add	r0, r4, #1
   149f4:	cmp	sl, r4
   149f8:	strbhi	ip, [r8, r4]
   149fc:	cmp	sl, r0
   14a00:	movhi	r6, #36	; 0x24
   14a04:	strbhi	r6, [r8, r0]
   14a08:	add	r0, r4, #2
   14a0c:	mov	r6, r3
   14a10:	add	r4, r4, #3
   14a14:	cmp	sl, r0
   14a18:	strbhi	ip, [r8, r0]
   14a1c:	cmp	sl, r4
   14a20:	movhi	r3, #92	; 0x5c
   14a24:	strbhi	r3, [r8, r4]
   14a28:	add	r3, r4, #1
   14a2c:	cmp	sl, r3
   14a30:	lsrhi	r0, r5, #6
   14a34:	addhi	r0, r0, #48	; 0x30
   14a38:	strbhi	r0, [r8, r3]
   14a3c:	add	r0, r4, #2
   14a40:	cmp	sl, r0
   14a44:	lsrhi	r3, r5, #3
   14a48:	andhi	r3, r3, #7
   14a4c:	addhi	r3, r3, #48	; 0x30
   14a50:	add	r9, r9, #1
   14a54:	strbhi	r3, [r8, r0]
   14a58:	and	r5, r5, #7
   14a5c:	cmp	r9, r1
   14a60:	add	r5, r5, #48	; 0x30
   14a64:	add	r4, r4, #3
   14a68:	bcs	14c08 <strspn@plt+0x3d18>
   14a6c:	mov	r0, r2
   14a70:	cmp	sl, r4
   14a74:	strbhi	r5, [r8, r4]
   14a78:	ldrb	r5, [lr, #1]!
   14a7c:	add	r4, r4, #1
   14a80:	cmp	r2, #0
   14a84:	bne	149cc <strspn@plt+0x3adc>
   14a88:	eor	r3, r0, #1
   14a8c:	and	r3, r3, r6
   14a90:	cmp	r7, #0
   14a94:	uxtb	r3, r3
   14a98:	beq	14aac <strspn@plt+0x3bbc>
   14a9c:	cmp	sl, r4
   14aa0:	movhi	r7, #92	; 0x5c
   14aa4:	strbhi	r7, [r8, r4]
   14aa8:	add	r4, r4, #1
   14aac:	add	r9, r9, #1
   14ab0:	cmp	r9, r1
   14ab4:	bcs	14bfc <strspn@plt+0x3d0c>
   14ab8:	cmp	r3, #0
   14abc:	beq	14c28 <strspn@plt+0x3d38>
   14ac0:	cmp	sl, r4
   14ac4:	add	r3, r4, #1
   14ac8:	strbhi	ip, [r8, r4]
   14acc:	mov	r7, #0
   14ad0:	cmp	sl, r3
   14ad4:	strbhi	ip, [r8, r3]
   14ad8:	add	r4, r4, #2
   14adc:	mov	r6, r7
   14ae0:	b	14a70 <strspn@plt+0x3b80>
   14ae4:	cmp	r8, #1
   14ae8:	beq	14960 <strspn@plt+0x3a70>
   14aec:	add	r1, r4, #1
   14af0:	add	r3, sl, r8
   14af4:	add	r1, sl, r1
   14af8:	add	r4, r3, r4
   14afc:	ldrb	r3, [r1], #1
   14b00:	sub	r3, r3, #91	; 0x5b
   14b04:	cmp	r3, #33	; 0x21
   14b08:	ldrls	pc, [pc, r3, lsl #2]
   14b0c:	b	14b98 <strspn@plt+0x3ca8>
   14b10:	andeq	r4, r1, r4, lsr #23
   14b14:	andeq	r4, r1, r4, lsr #23
   14b18:	muleq	r1, r8, fp
   14b1c:	andeq	r4, r1, r4, lsr #23
   14b20:	muleq	r1, r8, fp
   14b24:	andeq	r4, r1, r4, lsr #23
   14b28:	muleq	r1, r8, fp
   14b2c:	muleq	r1, r8, fp
   14b30:	muleq	r1, r8, fp
   14b34:	muleq	r1, r8, fp
   14b38:	muleq	r1, r8, fp
   14b3c:	muleq	r1, r8, fp
   14b40:	muleq	r1, r8, fp
   14b44:	muleq	r1, r8, fp
   14b48:	muleq	r1, r8, fp
   14b4c:	muleq	r1, r8, fp
   14b50:	muleq	r1, r8, fp
   14b54:	muleq	r1, r8, fp
   14b58:	muleq	r1, r8, fp
   14b5c:	muleq	r1, r8, fp
   14b60:	muleq	r1, r8, fp
   14b64:	muleq	r1, r8, fp
   14b68:	muleq	r1, r8, fp
   14b6c:	muleq	r1, r8, fp
   14b70:	muleq	r1, r8, fp
   14b74:	muleq	r1, r8, fp
   14b78:	muleq	r1, r8, fp
   14b7c:	muleq	r1, r8, fp
   14b80:	muleq	r1, r8, fp
   14b84:	muleq	r1, r8, fp
   14b88:	muleq	r1, r8, fp
   14b8c:	muleq	r1, r8, fp
   14b90:	muleq	r1, r8, fp
   14b94:	andeq	r4, r1, r4, lsr #23
   14b98:	cmp	r4, r1
   14b9c:	bne	14afc <strspn@plt+0x3c0c>
   14ba0:	b	14960 <strspn@plt+0x3a70>
   14ba4:	ldr	fp, [sp, #84]	; 0x54
   14ba8:	ldr	sl, [sp, #88]	; 0x58
   14bac:	mov	r8, #2
   14bb0:	b	1406c <strspn@plt+0x317c>
   14bb4:	cmp	sl, r4
   14bb8:	movls	r1, r4
   14bbc:	bls	141bc <strspn@plt+0x32cc>
   14bc0:	ldr	r3, [sp, #44]	; 0x2c
   14bc4:	b	141ac <strspn@plt+0x32bc>
   14bc8:	str	sl, [sp, #72]	; 0x48
   14bcc:	ldr	sl, [sp, #32]
   14bd0:	b	13fe4 <strspn@plt+0x30f4>
   14bd4:	add	r9, r9, #1
   14bd8:	b	138d8 <strspn@plt+0x29e8>
   14bdc:	ldr	r2, [sp, #28]
   14be0:	mov	r6, #0
   14be4:	b	149b0 <strspn@plt+0x3ac0>
   14be8:	str	fp, [sp, #160]	; 0xa0
   14bec:	str	r3, [sp, #28]
   14bf0:	mov	fp, r8
   14bf4:	ldr	r8, [sp, #160]	; 0xa0
   14bf8:	b	1406c <strspn@plt+0x317c>
   14bfc:	str	r6, [sp, #44]	; 0x2c
   14c00:	ldr	r6, [sp, #48]	; 0x30
   14c04:	b	14014 <strspn@plt+0x3124>
   14c08:	str	r6, [sp, #44]	; 0x2c
   14c0c:	ldr	r6, [sp, #48]	; 0x30
   14c10:	b	13e20 <strspn@plt+0x2f30>
   14c14:	add	r4, r4, #4
   14c18:	str	r3, [sp, #44]	; 0x2c
   14c1c:	mov	r6, #0
   14c20:	mov	r5, #48	; 0x30
   14c24:	b	13da8 <strspn@plt+0x2eb8>
   14c28:	mov	r7, r3
   14c2c:	b	14a70 <strspn@plt+0x3b80>
   14c30:	ldr	r3, [pc, #-1624]	; 145e0 <strspn@plt+0x36f0>
   14c34:	mov	r4, #1
   14c38:	str	r4, [sp, #40]	; 0x28
   14c3c:	str	r4, [sp, #28]
   14c40:	str	r4, [sp, #52]	; 0x34
   14c44:	str	sl, [sp, #72]	; 0x48
   14c48:	str	sl, [sp, #68]	; 0x44
   14c4c:	str	sl, [sp, #44]	; 0x2c
   14c50:	str	sl, [sp, #32]
   14c54:	str	r3, [sp, #60]	; 0x3c
   14c58:	b	138c8 <strspn@plt+0x29d8>
   14c5c:	mov	r3, r6
   14c60:	mov	r5, #48	; 0x30
   14c64:	mov	r6, #0
   14c68:	b	13da8 <strspn@plt+0x2eb8>
   14c6c:	cmp	sl, r4
   14c70:	movhi	r3, #48	; 0x30
   14c74:	strbhi	r3, [r8, r4]
   14c78:	add	r3, r1, #2
   14c7c:	cmp	sl, r3
   14c80:	movhi	r0, #48	; 0x30
   14c84:	strbhi	r0, [r8, r3]
   14c88:	add	r4, r1, #3
   14c8c:	mov	r5, #48	; 0x30
   14c90:	b	141f0 <strspn@plt+0x3300>
   14c94:	str	fp, [sp, #160]	; 0xa0
   14c98:	mov	fp, r8
   14c9c:	ldr	r8, [sp, #160]	; 0xa0
   14ca0:	b	1406c <strspn@plt+0x317c>
   14ca4:	ldr	r2, [sp, #80]	; 0x50
   14ca8:	ldrb	r3, [r2]
   14cac:	cmp	r3, #0
   14cb0:	beq	13898 <strspn@plt+0x29a8>
   14cb4:	cmp	sl, r4
   14cb8:	strbhi	r3, [fp, r4]
   14cbc:	ldrb	r3, [r2, #1]!
   14cc0:	add	r4, r4, #1
   14cc4:	cmp	r3, #0
   14cc8:	bne	14cb4 <strspn@plt+0x3dc4>
   14ccc:	b	13898 <strspn@plt+0x29a8>
   14cd0:	str	fp, [sp, #160]	; 0xa0
   14cd4:	mov	r3, #0
   14cd8:	mov	fp, r8
   14cdc:	ldr	r8, [sp, #160]	; 0xa0
   14ce0:	b	14100 <strspn@plt+0x3210>
   14ce4:	mov	ip, r5
   14ce8:	ldr	r7, [sp, #96]	; 0x60
   14cec:	ldr	r5, [sp, #92]	; 0x5c
   14cf0:	ldr	r4, [sp, #100]	; 0x64
   14cf4:	ldr	r8, [sp, #84]	; 0x54
   14cf8:	ldr	sl, [sp, #88]	; 0x58
   14cfc:	ldr	r2, [sp, #28]
   14d00:	mov	r6, #0
   14d04:	b	149a8 <strspn@plt+0x3ab8>
   14d08:	ldr	r2, [sp, #36]	; 0x24
   14d0c:	ldrb	r1, [r2, r3]
   14d10:	sub	r2, r1, #33	; 0x21
   14d14:	cmp	r2, #29
   14d18:	ldrls	pc, [pc, r2, lsl #2]
   14d1c:	b	14df8 <strspn@plt+0x3f08>
   14d20:	muleq	r1, r8, sp
   14d24:	strdeq	r4, [r1], -r8
   14d28:	strdeq	r4, [r1], -r8
   14d2c:	strdeq	r4, [r1], -r8
   14d30:	strdeq	r4, [r1], -r8
   14d34:	strdeq	r4, [r1], -r8
   14d38:	muleq	r1, r8, sp
   14d3c:	muleq	r1, r8, sp
   14d40:	muleq	r1, r8, sp
   14d44:	strdeq	r4, [r1], -r8
   14d48:	strdeq	r4, [r1], -r8
   14d4c:	strdeq	r4, [r1], -r8
   14d50:	muleq	r1, r8, sp
   14d54:	strdeq	r4, [r1], -r8
   14d58:	muleq	r1, r8, sp
   14d5c:	strdeq	r4, [r1], -r8
   14d60:	strdeq	r4, [r1], -r8
   14d64:	strdeq	r4, [r1], -r8
   14d68:	strdeq	r4, [r1], -r8
   14d6c:	strdeq	r4, [r1], -r8
   14d70:	strdeq	r4, [r1], -r8
   14d74:	strdeq	r4, [r1], -r8
   14d78:	strdeq	r4, [r1], -r8
   14d7c:	strdeq	r4, [r1], -r8
   14d80:	strdeq	r4, [r1], -r8
   14d84:	strdeq	r4, [r1], -r8
   14d88:	strdeq	r4, [r1], -r8
   14d8c:	muleq	r1, r8, sp
   14d90:	muleq	r1, r8, sp
   14d94:	muleq	r1, r8, sp
   14d98:	ldr	r2, [sp, #32]
   14d9c:	cmp	r2, #0
   14da0:	bne	14ea4 <strspn@plt+0x3fb4>
   14da4:	cmp	sl, r4
   14da8:	movhi	r2, #63	; 0x3f
   14dac:	strbhi	r2, [r8, r4]
   14db0:	add	r2, r4, #1
   14db4:	cmp	sl, r2
   14db8:	movhi	r0, #34	; 0x22
   14dbc:	strbhi	r0, [r8, r2]
   14dc0:	add	r2, r4, #2
   14dc4:	cmp	sl, r2
   14dc8:	movhi	r0, #34	; 0x22
   14dcc:	strbhi	r0, [r8, r2]
   14dd0:	add	r2, r4, #3
   14dd4:	cmp	sl, r2
   14dd8:	movhi	r0, #63	; 0x3f
   14ddc:	strbhi	r0, [r8, r2]
   14de0:	mov	r2, #0
   14de4:	add	r4, r4, #4
   14de8:	mov	r5, r1
   14dec:	mov	r9, r3
   14df0:	mov	r6, r2
   14df4:	b	141f0 <strspn@plt+0x3300>
   14df8:	mov	r2, #0
   14dfc:	mov	r6, r2
   14e00:	b	13d60 <strspn@plt+0x2e70>
   14e04:	ldr	r0, [sp, #24]
   14e08:	mov	r1, r4
   14e0c:	cmp	r1, r0
   14e10:	mov	r2, r7
   14e14:	mov	r3, r5
   14e18:	mov	ip, r5
   14e1c:	ldr	r7, [sp, #96]	; 0x60
   14e20:	ldr	r5, [sp, #92]	; 0x5c
   14e24:	ldr	r4, [sp, #100]	; 0x64
   14e28:	ldr	r8, [sp, #84]	; 0x54
   14e2c:	ldr	sl, [sp, #88]	; 0x58
   14e30:	bcs	14e64 <strspn@plt+0x3f74>
   14e34:	ldrb	r6, [r2]
   14e38:	cmp	r6, #0
   14e3c:	bne	14e50 <strspn@plt+0x3f60>
   14e40:	b	14f80 <strspn@plt+0x4090>
   14e44:	ldrb	r6, [r2, #1]!
   14e48:	cmp	r6, #0
   14e4c:	beq	14f08 <strspn@plt+0x4018>
   14e50:	add	r3, r3, #1
   14e54:	add	r1, r9, r3
   14e58:	cmp	r1, r0
   14e5c:	bcc	14e44 <strspn@plt+0x3f54>
   14e60:	mov	ip, r3
   14e64:	ldr	r2, [sp, #28]
   14e68:	mov	r6, #0
   14e6c:	b	149a8 <strspn@plt+0x3ab8>
   14e70:	mov	r3, #1
   14e74:	str	r3, [sp, #40]	; 0x28
   14e78:	str	r3, [sp, #32]
   14e7c:	str	r3, [sp, #28]
   14e80:	str	r3, [sp, #52]	; 0x34
   14e84:	ldr	r3, [pc, #-2220]	; 145e0 <strspn@plt+0x36f0>
   14e88:	mov	r2, #0
   14e8c:	str	r2, [sp, #68]	; 0x44
   14e90:	str	r2, [sp, #44]	; 0x2c
   14e94:	str	r2, [sp, #72]	; 0x48
   14e98:	mov	r4, r2
   14e9c:	str	r3, [sp, #60]	; 0x3c
   14ea0:	b	138c8 <strspn@plt+0x29d8>
   14ea4:	str	fp, [sp, #160]	; 0xa0
   14ea8:	mov	fp, r8
   14eac:	ldr	r8, [sp, #160]	; 0xa0
   14eb0:	b	14078 <strspn@plt+0x3188>
   14eb4:	mov	r2, r3
   14eb8:	ldr	r3, [sp, #60]	; 0x3c
   14ebc:	cmp	r3, #0
   14ec0:	moveq	r2, #0
   14ec4:	andne	r2, r2, #1
   14ec8:	cmp	r2, #0
   14ecc:	beq	14ef8 <strspn@plt+0x4008>
   14ed0:	mov	r2, r3
   14ed4:	ldrb	r3, [r3]
   14ed8:	cmp	r3, #0
   14edc:	beq	14ef8 <strspn@plt+0x4008>
   14ee0:	cmp	sl, r4
   14ee4:	strbhi	r3, [fp, r4]
   14ee8:	ldrb	r3, [r2, #1]!
   14eec:	add	r4, r4, #1
   14ef0:	cmp	r3, #0
   14ef4:	bne	14ee0 <strspn@plt+0x3ff0>
   14ef8:	cmp	sl, r4
   14efc:	movhi	r3, #0
   14f00:	strbhi	r3, [fp, r4]
   14f04:	b	140b8 <strspn@plt+0x31c8>
   14f08:	mov	ip, r3
   14f0c:	ldr	r2, [sp, #28]
   14f10:	b	149a8 <strspn@plt+0x3ab8>
   14f14:	str	fp, [sp, #160]	; 0xa0
   14f18:	mov	fp, r8
   14f1c:	ldr	r8, [sp, #160]	; 0xa0
   14f20:	sub	r3, r8, #2
   14f24:	clz	r3, r3
   14f28:	lsr	r3, r3, #5
   14f2c:	str	r3, [sp, #28]
   14f30:	b	1406c <strspn@plt+0x317c>
   14f34:	ldr	r3, [sp, #76]	; 0x4c
   14f38:	mov	ip, #5
   14f3c:	str	r3, [sp, #16]
   14f40:	ldr	r3, [sp, #80]	; 0x50
   14f44:	ldr	r2, [sp, #36]	; 0x24
   14f48:	str	r3, [sp, #12]
   14f4c:	ldr	r3, [sp, #56]	; 0x38
   14f50:	ldr	r1, [sp, #72]	; 0x48
   14f54:	str	r3, [sp, #8]
   14f58:	ldr	r3, [sp, #164]	; 0xa4
   14f5c:	mov	r0, fp
   14f60:	str	r3, [sp, #4]
   14f64:	str	ip, [sp]
   14f68:	ldr	r3, [sp, #24]
   14f6c:	bl	137d0 <strspn@plt+0x28e0>
   14f70:	mov	r4, r0
   14f74:	b	140b8 <strspn@plt+0x31c8>
   14f78:	mov	r8, #2
   14f7c:	b	1406c <strspn@plt+0x317c>
   14f80:	ldr	r2, [sp, #28]
   14f84:	b	149a8 <strspn@plt+0x3ab8>
   14f88:	mov	r3, #0
   14f8c:	str	r3, [sp, #68]	; 0x44
   14f90:	str	r3, [sp, #44]	; 0x2c
   14f94:	str	r3, [sp, #72]	; 0x48
   14f98:	str	r3, [sp, #28]
   14f9c:	mov	r4, r3
   14fa0:	ldr	r3, [pc, #-2500]	; 145e4 <strspn@plt+0x36f4>
   14fa4:	mov	r2, #1
   14fa8:	str	r2, [sp, #40]	; 0x28
   14fac:	str	r2, [sp, #32]
   14fb0:	str	r2, [sp, #52]	; 0x34
   14fb4:	str	r3, [sp, #60]	; 0x3c
   14fb8:	b	138c8 <strspn@plt+0x29d8>
   14fbc:	bl	10d28 <__stack_chk_fail@plt>
   14fc0:	mov	r5, r3
   14fc4:	mov	r6, #0
   14fc8:	b	13dbc <strspn@plt+0x2ecc>
   14fcc:	mov	r3, #0
   14fd0:	mov	r2, #1
   14fd4:	str	r3, [sp, #44]	; 0x2c
   14fd8:	str	r3, [sp, #72]	; 0x48
   14fdc:	str	r2, [sp, #40]	; 0x28
   14fe0:	b	13ed8 <strspn@plt+0x2fe8>
   14fe4:	bl	10ed8 <abort@plt>
   14fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fec:	sub	sp, sp, #44	; 0x2c
   14ff0:	mov	r6, r0
   14ff4:	mov	r4, r3
   14ff8:	mov	sl, r1
   14ffc:	mov	fp, r2
   15000:	bl	10e24 <__errno_location@plt>
   15004:	ldr	r7, [pc, #364]	; 15178 <strspn@plt+0x4288>
   15008:	cmp	r6, #0
   1500c:	ldr	r5, [r7]
   15010:	ldr	r3, [r0]
   15014:	str	r3, [sp, #24]
   15018:	blt	15174 <strspn@plt+0x4284>
   1501c:	ldr	r3, [r7, #4]
   15020:	mov	r8, r0
   15024:	cmp	r3, r6
   15028:	bgt	15074 <strspn@plt+0x4184>
   1502c:	cmn	r6, #-268435454	; 0xf0000002
   15030:	bgt	15170 <strspn@plt+0x4280>
   15034:	add	r9, r6, #1
   15038:	add	r3, r7, #8
   1503c:	cmp	r5, r3
   15040:	lsl	r1, r9, #3
   15044:	beq	15150 <strspn@plt+0x4260>
   15048:	mov	r0, r5
   1504c:	bl	15f68 <strspn@plt+0x5078>
   15050:	mov	r5, r0
   15054:	str	r0, [r7]
   15058:	ldr	r0, [r7, #4]
   1505c:	mov	r1, #0
   15060:	sub	r2, r9, r0
   15064:	add	r0, r5, r0, lsl #3
   15068:	lsl	r2, r2, #3
   1506c:	bl	10e3c <memset@plt>
   15070:	str	r9, [r7, #4]
   15074:	add	r3, r5, r6, lsl #3
   15078:	ldr	r1, [r4, #4]
   1507c:	ldr	r7, [r3, #4]
   15080:	ldr	r9, [r5, r6, lsl #3]
   15084:	ldr	r2, [r4, #40]	; 0x28
   15088:	ldr	ip, [r4, #44]	; 0x2c
   1508c:	str	r3, [sp, #28]
   15090:	ldr	r3, [r4]
   15094:	orr	r1, r1, #1
   15098:	add	lr, r4, #8
   1509c:	str	r1, [sp, #36]	; 0x24
   150a0:	str	r1, [sp, #4]
   150a4:	str	r2, [sp, #12]
   150a8:	str	r3, [sp]
   150ac:	mov	r0, r7
   150b0:	mov	r1, r9
   150b4:	str	ip, [sp, #16]
   150b8:	str	lr, [sp, #8]
   150bc:	mov	r3, fp
   150c0:	mov	r2, sl
   150c4:	str	lr, [sp, #32]
   150c8:	bl	137d0 <strspn@plt+0x28e0>
   150cc:	cmp	r9, r0
   150d0:	bhi	1513c <strspn@plt+0x424c>
   150d4:	ldr	r3, [pc, #160]	; 1517c <strspn@plt+0x428c>
   150d8:	add	r9, r0, #1
   150dc:	cmp	r7, r3
   150e0:	str	r9, [r5, r6, lsl #3]
   150e4:	beq	150f0 <strspn@plt+0x4200>
   150e8:	mov	r0, r7
   150ec:	bl	10ce0 <free@plt>
   150f0:	mov	r0, r9
   150f4:	bl	15f0c <strspn@plt+0x501c>
   150f8:	ldr	lr, [sp, #28]
   150fc:	ldr	ip, [r4, #44]	; 0x2c
   15100:	ldr	r5, [r4, #40]	; 0x28
   15104:	mov	r3, fp
   15108:	mov	r2, sl
   1510c:	mov	r1, r9
   15110:	str	r0, [lr, #4]
   15114:	ldr	lr, [r4]
   15118:	ldr	r4, [sp, #32]
   1511c:	str	ip, [sp, #16]
   15120:	str	r4, [sp, #8]
   15124:	ldr	r4, [sp, #36]	; 0x24
   15128:	str	r5, [sp, #12]
   1512c:	str	r4, [sp, #4]
   15130:	str	lr, [sp]
   15134:	mov	r7, r0
   15138:	bl	137d0 <strspn@plt+0x28e0>
   1513c:	ldr	r3, [sp, #24]
   15140:	mov	r0, r7
   15144:	str	r3, [r8]
   15148:	add	sp, sp, #44	; 0x2c
   1514c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15150:	mov	r0, #0
   15154:	bl	15f68 <strspn@plt+0x5078>
   15158:	ldr	r3, [pc, #32]	; 15180 <strspn@plt+0x4290>
   1515c:	mov	r5, r0
   15160:	ldm	r3, {r0, r1}
   15164:	str	r5, [r7]
   15168:	stm	r5, {r0, r1}
   1516c:	b	15058 <strspn@plt+0x4168>
   15170:	bl	16154 <strspn@plt+0x5264>
   15174:	bl	10ed8 <abort@plt>
   15178:	strdeq	r8, [r2], -r0
   1517c:	andeq	r8, r2, r8, ror #2
   15180:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15184:	push	{r4, r5, r6, lr}
   15188:	mov	r5, r0
   1518c:	bl	10e24 <__errno_location@plt>
   15190:	cmp	r5, #0
   15194:	mov	r1, #48	; 0x30
   15198:	mov	r4, r0
   1519c:	ldr	r0, [pc, #16]	; 151b4 <strspn@plt+0x42c4>
   151a0:	ldr	r6, [r4]
   151a4:	movne	r0, r5
   151a8:	bl	16114 <strspn@plt+0x5224>
   151ac:	str	r6, [r4]
   151b0:	pop	{r4, r5, r6, pc}
   151b4:	andeq	r8, r2, r8, ror #4
   151b8:	ldr	r3, [pc, #12]	; 151cc <strspn@plt+0x42dc>
   151bc:	cmp	r0, #0
   151c0:	moveq	r0, r3
   151c4:	ldr	r0, [r0]
   151c8:	bx	lr
   151cc:	andeq	r8, r2, r8, ror #4
   151d0:	ldr	r3, [pc, #12]	; 151e4 <strspn@plt+0x42f4>
   151d4:	cmp	r0, #0
   151d8:	moveq	r0, r3
   151dc:	str	r1, [r0]
   151e0:	bx	lr
   151e4:	andeq	r8, r2, r8, ror #4
   151e8:	ldr	r3, [pc, #52]	; 15224 <strspn@plt+0x4334>
   151ec:	cmp	r0, #0
   151f0:	moveq	r0, r3
   151f4:	add	r3, r0, #8
   151f8:	push	{lr}		; (str lr, [sp, #-4]!)
   151fc:	lsr	lr, r1, #5
   15200:	and	r1, r1, #31
   15204:	ldr	ip, [r3, lr, lsl #2]
   15208:	lsr	r0, ip, r1
   1520c:	eor	r2, r2, r0
   15210:	and	r2, r2, #1
   15214:	and	r0, r0, #1
   15218:	eor	r1, ip, r2, lsl r1
   1521c:	str	r1, [r3, lr, lsl #2]
   15220:	pop	{pc}		; (ldr pc, [sp], #4)
   15224:	andeq	r8, r2, r8, ror #4
   15228:	ldr	r3, [pc, #16]	; 15240 <strspn@plt+0x4350>
   1522c:	cmp	r0, #0
   15230:	movne	r3, r0
   15234:	ldr	r0, [r3, #4]
   15238:	str	r1, [r3, #4]
   1523c:	bx	lr
   15240:	andeq	r8, r2, r8, ror #4
   15244:	ldr	r3, [pc, #44]	; 15278 <strspn@plt+0x4388>
   15248:	cmp	r0, #0
   1524c:	moveq	r0, r3
   15250:	mov	ip, #10
   15254:	cmp	r2, #0
   15258:	cmpne	r1, #0
   1525c:	str	ip, [r0]
   15260:	beq	15270 <strspn@plt+0x4380>
   15264:	str	r1, [r0, #40]	; 0x28
   15268:	str	r2, [r0, #44]	; 0x2c
   1526c:	bx	lr
   15270:	push	{r4, lr}
   15274:	bl	10ed8 <abort@plt>
   15278:	andeq	r8, r2, r8, ror #4
   1527c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15280:	sub	sp, sp, #24
   15284:	ldr	ip, [pc, #108]	; 152f8 <strspn@plt+0x4408>
   15288:	ldr	r4, [sp, #56]	; 0x38
   1528c:	mov	r9, r2
   15290:	cmp	r4, #0
   15294:	moveq	r4, ip
   15298:	mov	sl, r3
   1529c:	mov	r7, r0
   152a0:	mov	r8, r1
   152a4:	bl	10e24 <__errno_location@plt>
   152a8:	ldr	r3, [r4, #44]	; 0x2c
   152ac:	mov	r1, r8
   152b0:	ldr	r6, [r0]
   152b4:	str	r3, [sp, #16]
   152b8:	ldr	r2, [r4, #40]	; 0x28
   152bc:	add	r3, r4, #8
   152c0:	str	r3, [sp, #8]
   152c4:	str	r2, [sp, #12]
   152c8:	ldr	r2, [r4, #4]
   152cc:	mov	r5, r0
   152d0:	str	r2, [sp, #4]
   152d4:	ldr	ip, [r4]
   152d8:	mov	r3, sl
   152dc:	mov	r2, r9
   152e0:	mov	r0, r7
   152e4:	str	ip, [sp]
   152e8:	bl	137d0 <strspn@plt+0x28e0>
   152ec:	str	r6, [r5]
   152f0:	add	sp, sp, #24
   152f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   152f8:	andeq	r8, r2, r8, ror #4
   152fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15300:	cmp	r3, #0
   15304:	sub	sp, sp, #44	; 0x2c
   15308:	ldr	r4, [pc, #192]	; 153d0 <strspn@plt+0x44e0>
   1530c:	mov	r6, r2
   15310:	movne	r4, r3
   15314:	mov	r9, r1
   15318:	mov	r8, r0
   1531c:	bl	10e24 <__errno_location@plt>
   15320:	ldr	r3, [r4, #44]	; 0x2c
   15324:	ldr	r5, [r4, #4]
   15328:	add	sl, r4, #8
   1532c:	cmp	r6, #0
   15330:	orreq	r5, r5, #1
   15334:	mov	r1, #0
   15338:	ldr	r2, [r0]
   1533c:	str	r3, [sp, #16]
   15340:	ldr	r3, [r4, #40]	; 0x28
   15344:	stmib	sp, {r5, sl}
   15348:	str	r3, [sp, #12]
   1534c:	ldr	r3, [r4]
   15350:	mov	r7, r0
   15354:	str	r2, [sp, #28]
   15358:	str	r3, [sp]
   1535c:	mov	r2, r8
   15360:	mov	r3, r9
   15364:	mov	r0, r1
   15368:	bl	137d0 <strspn@plt+0x28e0>
   1536c:	add	r1, r0, #1
   15370:	mov	fp, r0
   15374:	mov	r0, r1
   15378:	str	r1, [sp, #36]	; 0x24
   1537c:	bl	15f0c <strspn@plt+0x501c>
   15380:	ldr	r3, [r4, #44]	; 0x2c
   15384:	mov	r2, r8
   15388:	str	r3, [sp, #16]
   1538c:	ldr	r3, [r4, #40]	; 0x28
   15390:	str	r5, [sp, #4]
   15394:	str	r3, [sp, #12]
   15398:	str	sl, [sp, #8]
   1539c:	ldr	ip, [r4]
   153a0:	ldr	r1, [sp, #36]	; 0x24
   153a4:	mov	r3, r9
   153a8:	str	ip, [sp]
   153ac:	str	r0, [sp, #32]
   153b0:	bl	137d0 <strspn@plt+0x28e0>
   153b4:	ldr	r2, [sp, #28]
   153b8:	cmp	r6, #0
   153bc:	str	r2, [r7]
   153c0:	ldr	r0, [sp, #32]
   153c4:	strne	fp, [r6]
   153c8:	add	sp, sp, #44	; 0x2c
   153cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153d0:	andeq	r8, r2, r8, ror #4
   153d4:	mov	r3, r2
   153d8:	mov	r2, #0
   153dc:	b	152fc <strspn@plt+0x440c>
   153e0:	push	{r4, r5, r6, r7, r8, lr}
   153e4:	ldr	r6, [pc, #112]	; 1545c <strspn@plt+0x456c>
   153e8:	ldr	r3, [r6, #4]
   153ec:	ldr	r7, [r6]
   153f0:	cmp	r3, #1
   153f4:	ble	15418 <strspn@plt+0x4528>
   153f8:	sub	r5, r7, #8
   153fc:	add	r5, r5, r3, lsl #3
   15400:	mov	r4, r7
   15404:	ldr	r0, [r4, #12]
   15408:	add	r4, r4, #8
   1540c:	bl	10ce0 <free@plt>
   15410:	cmp	r4, r5
   15414:	bne	15404 <strspn@plt+0x4514>
   15418:	ldr	r0, [r7, #4]
   1541c:	ldr	r4, [pc, #60]	; 15460 <strspn@plt+0x4570>
   15420:	cmp	r0, r4
   15424:	beq	15438 <strspn@plt+0x4548>
   15428:	bl	10ce0 <free@plt>
   1542c:	mov	r3, #256	; 0x100
   15430:	str	r4, [r6, #12]
   15434:	str	r3, [r6, #8]
   15438:	ldr	r4, [pc, #36]	; 15464 <strspn@plt+0x4574>
   1543c:	cmp	r7, r4
   15440:	beq	15450 <strspn@plt+0x4560>
   15444:	mov	r0, r7
   15448:	bl	10ce0 <free@plt>
   1544c:	str	r4, [r6]
   15450:	mov	r3, #1
   15454:	str	r3, [r6, #4]
   15458:	pop	{r4, r5, r6, r7, r8, pc}
   1545c:	strdeq	r8, [r2], -r0
   15460:	andeq	r8, r2, r8, ror #2
   15464:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15468:	ldr	r3, [pc, #4]	; 15474 <strspn@plt+0x4584>
   1546c:	mvn	r2, #0
   15470:	b	14fe8 <strspn@plt+0x40f8>
   15474:	andeq	r8, r2, r8, ror #4
   15478:	ldr	r3, [pc]	; 15480 <strspn@plt+0x4590>
   1547c:	b	14fe8 <strspn@plt+0x40f8>
   15480:	andeq	r8, r2, r8, ror #4
   15484:	mov	r1, r0
   15488:	ldr	r3, [pc, #8]	; 15498 <strspn@plt+0x45a8>
   1548c:	mvn	r2, #0
   15490:	mov	r0, #0
   15494:	b	14fe8 <strspn@plt+0x40f8>
   15498:	andeq	r8, r2, r8, ror #4
   1549c:	mov	r2, r1
   154a0:	ldr	r3, [pc, #8]	; 154b0 <strspn@plt+0x45c0>
   154a4:	mov	r1, r0
   154a8:	mov	r0, #0
   154ac:	b	14fe8 <strspn@plt+0x40f8>
   154b0:	andeq	r8, r2, r8, ror #4
   154b4:	push	{r4, r5, r6, lr}
   154b8:	sub	sp, sp, #56	; 0x38
   154bc:	ldr	r4, [pc, #68]	; 15508 <strspn@plt+0x4618>
   154c0:	mov	r6, r2
   154c4:	mov	r5, r0
   154c8:	ldr	r3, [r4]
   154cc:	add	r0, sp, #4
   154d0:	str	r3, [sp, #52]	; 0x34
   154d4:	bl	13660 <strspn@plt+0x2770>
   154d8:	add	r3, sp, #4
   154dc:	mvn	r2, #0
   154e0:	mov	r1, r6
   154e4:	mov	r0, r5
   154e8:	bl	14fe8 <strspn@plt+0x40f8>
   154ec:	ldr	r2, [sp, #52]	; 0x34
   154f0:	ldr	r3, [r4]
   154f4:	cmp	r2, r3
   154f8:	bne	15504 <strspn@plt+0x4614>
   154fc:	add	sp, sp, #56	; 0x38
   15500:	pop	{r4, r5, r6, pc}
   15504:	bl	10d28 <__stack_chk_fail@plt>
   15508:	andeq	r7, r2, r8, lsl #30
   1550c:	push	{r4, r5, r6, r7, lr}
   15510:	sub	sp, sp, #60	; 0x3c
   15514:	ldr	r4, [pc, #72]	; 15564 <strspn@plt+0x4674>
   15518:	mov	r6, r2
   1551c:	mov	r7, r3
   15520:	ldr	ip, [r4]
   15524:	mov	r5, r0
   15528:	add	r0, sp, #4
   1552c:	str	ip, [sp, #52]	; 0x34
   15530:	bl	13660 <strspn@plt+0x2770>
   15534:	add	r3, sp, #4
   15538:	mov	r2, r7
   1553c:	mov	r1, r6
   15540:	mov	r0, r5
   15544:	bl	14fe8 <strspn@plt+0x40f8>
   15548:	ldr	r2, [sp, #52]	; 0x34
   1554c:	ldr	r3, [r4]
   15550:	cmp	r2, r3
   15554:	bne	15560 <strspn@plt+0x4670>
   15558:	add	sp, sp, #60	; 0x3c
   1555c:	pop	{r4, r5, r6, r7, pc}
   15560:	bl	10d28 <__stack_chk_fail@plt>
   15564:	andeq	r7, r2, r8, lsl #30
   15568:	mov	r2, r1
   1556c:	mov	r1, r0
   15570:	mov	r0, #0
   15574:	b	154b4 <strspn@plt+0x45c4>
   15578:	mov	r3, r2
   1557c:	mov	r2, r1
   15580:	mov	r1, r0
   15584:	mov	r0, #0
   15588:	b	1550c <strspn@plt+0x461c>
   1558c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15590:	mov	r4, r2
   15594:	ldr	lr, [pc, #128]	; 1561c <strspn@plt+0x472c>
   15598:	mov	r8, r0
   1559c:	mov	r9, r1
   155a0:	ldm	lr!, {r0, r1, r2, r3}
   155a4:	sub	sp, sp, #60	; 0x3c
   155a8:	add	ip, sp, #4
   155ac:	lsr	r6, r4, #5
   155b0:	stmia	ip!, {r0, r1, r2, r3}
   155b4:	add	r7, sp, #12
   155b8:	ldm	lr!, {r0, r1, r2, r3}
   155bc:	and	r4, r4, #31
   155c0:	ldr	r5, [pc, #88]	; 15620 <strspn@plt+0x4730>
   155c4:	stmia	ip!, {r0, r1, r2, r3}
   155c8:	ldm	lr, {r0, r1, r2, r3}
   155cc:	stm	ip, {r0, r1, r2, r3}
   155d0:	mov	r2, r9
   155d4:	ldr	r3, [r7, r6, lsl #2]
   155d8:	ldr	ip, [r5]
   155dc:	mov	r1, r8
   155e0:	mvn	r0, r3, lsr r4
   155e4:	and	r0, r0, #1
   155e8:	str	ip, [sp, #52]	; 0x34
   155ec:	eor	r4, r3, r0, lsl r4
   155f0:	add	r3, sp, #4
   155f4:	mov	r0, #0
   155f8:	str	r4, [r7, r6, lsl #2]
   155fc:	bl	14fe8 <strspn@plt+0x40f8>
   15600:	ldr	r2, [sp, #52]	; 0x34
   15604:	ldr	r3, [r5]
   15608:	cmp	r2, r3
   1560c:	bne	15618 <strspn@plt+0x4728>
   15610:	add	sp, sp, #60	; 0x3c
   15614:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15618:	bl	10d28 <__stack_chk_fail@plt>
   1561c:	andeq	r8, r2, r8, ror #4
   15620:	andeq	r7, r2, r8, lsl #30
   15624:	mov	r2, r1
   15628:	mvn	r1, #0
   1562c:	b	1558c <strspn@plt+0x469c>
   15630:	mov	r2, #58	; 0x3a
   15634:	mvn	r1, #0
   15638:	b	1558c <strspn@plt+0x469c>
   1563c:	mov	r2, #58	; 0x3a
   15640:	b	1558c <strspn@plt+0x469c>
   15644:	push	{r4, r5, r6, r7, r8, lr}
   15648:	sub	sp, sp, #104	; 0x68
   1564c:	ldr	r5, [pc, #120]	; 156cc <strspn@plt+0x47dc>
   15650:	mov	r6, r0
   15654:	mov	r0, sp
   15658:	ldr	r3, [r5]
   1565c:	mov	r7, r2
   15660:	str	r3, [sp, #100]	; 0x64
   15664:	bl	13660 <strspn@plt+0x2770>
   15668:	mov	ip, sp
   1566c:	add	lr, sp, #52	; 0x34
   15670:	ldm	ip!, {r0, r1, r2, r3}
   15674:	stmia	lr!, {r0, r1, r2, r3}
   15678:	ldm	ip!, {r0, r1, r2, r3}
   1567c:	ldr	r8, [sp, #64]	; 0x40
   15680:	stmia	lr!, {r0, r1, r2, r3}
   15684:	mvn	r4, r8
   15688:	ldm	ip, {r0, r1, r2, r3}
   1568c:	and	ip, r4, #67108864	; 0x4000000
   15690:	eor	ip, ip, r8
   15694:	str	ip, [sp, #64]	; 0x40
   15698:	stm	lr, {r0, r1, r2, r3}
   1569c:	add	r3, sp, #52	; 0x34
   156a0:	mvn	r2, #0
   156a4:	mov	r1, r7
   156a8:	mov	r0, r6
   156ac:	bl	14fe8 <strspn@plt+0x40f8>
   156b0:	ldr	r2, [sp, #100]	; 0x64
   156b4:	ldr	r3, [r5]
   156b8:	cmp	r2, r3
   156bc:	bne	156c8 <strspn@plt+0x47d8>
   156c0:	add	sp, sp, #104	; 0x68
   156c4:	pop	{r4, r5, r6, r7, r8, pc}
   156c8:	bl	10d28 <__stack_chk_fail@plt>
   156cc:	andeq	r7, r2, r8, lsl #30
   156d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   156d4:	mov	r6, r1
   156d8:	ldr	lr, [pc, #132]	; 15764 <strspn@plt+0x4874>
   156dc:	mov	r5, r2
   156e0:	mov	r8, r0
   156e4:	mov	r9, r3
   156e8:	ldm	lr!, {r0, r1, r2, r3}
   156ec:	sub	sp, sp, #60	; 0x3c
   156f0:	add	ip, sp, #4
   156f4:	ldr	r4, [pc, #108]	; 15768 <strspn@plt+0x4878>
   156f8:	stmia	ip!, {r0, r1, r2, r3}
   156fc:	mov	r7, #10
   15700:	ldm	lr!, {r0, r1, r2, r3}
   15704:	cmp	r5, #0
   15708:	cmpne	r6, #0
   1570c:	str	r7, [sp, #4]
   15710:	stmia	ip!, {r0, r1, r2, r3}
   15714:	ldm	lr, {r0, r1, r2, r3}
   15718:	ldr	lr, [r4]
   1571c:	stm	ip, {r0, r1, r2, r3}
   15720:	str	lr, [sp, #52]	; 0x34
   15724:	beq	15760 <strspn@plt+0x4870>
   15728:	add	r3, sp, #4
   1572c:	ldr	r2, [sp, #88]	; 0x58
   15730:	mov	r1, r9
   15734:	mov	r0, r8
   15738:	str	r6, [sp, #44]	; 0x2c
   1573c:	str	r5, [sp, #48]	; 0x30
   15740:	bl	14fe8 <strspn@plt+0x40f8>
   15744:	ldr	r2, [sp, #52]	; 0x34
   15748:	ldr	r3, [r4]
   1574c:	cmp	r2, r3
   15750:	bne	1575c <strspn@plt+0x486c>
   15754:	add	sp, sp, #60	; 0x3c
   15758:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1575c:	bl	10d28 <__stack_chk_fail@plt>
   15760:	bl	10ed8 <abort@plt>
   15764:	andeq	r8, r2, r8, ror #4
   15768:	andeq	r7, r2, r8, lsl #30
   1576c:	push	{lr}		; (str lr, [sp, #-4]!)
   15770:	sub	sp, sp, #12
   15774:	mvn	ip, #0
   15778:	str	ip, [sp]
   1577c:	bl	156d0 <strspn@plt+0x47e0>
   15780:	add	sp, sp, #12
   15784:	pop	{pc}		; (ldr pc, [sp], #4)
   15788:	push	{lr}		; (str lr, [sp, #-4]!)
   1578c:	sub	sp, sp, #12
   15790:	mvn	ip, #0
   15794:	mov	r3, r2
   15798:	str	ip, [sp]
   1579c:	mov	r2, r1
   157a0:	mov	r1, r0
   157a4:	mov	r0, #0
   157a8:	bl	156d0 <strspn@plt+0x47e0>
   157ac:	add	sp, sp, #12
   157b0:	pop	{pc}		; (ldr pc, [sp], #4)
   157b4:	push	{lr}		; (str lr, [sp, #-4]!)
   157b8:	sub	sp, sp, #12
   157bc:	str	r3, [sp]
   157c0:	mov	r3, r2
   157c4:	mov	r2, r1
   157c8:	mov	r1, r0
   157cc:	mov	r0, #0
   157d0:	bl	156d0 <strspn@plt+0x47e0>
   157d4:	add	sp, sp, #12
   157d8:	pop	{pc}		; (ldr pc, [sp], #4)
   157dc:	ldr	r3, [pc]	; 157e4 <strspn@plt+0x48f4>
   157e0:	b	14fe8 <strspn@plt+0x40f8>
   157e4:	andeq	r8, r2, r0, lsl #2
   157e8:	mov	r2, r1
   157ec:	ldr	r3, [pc, #8]	; 157fc <strspn@plt+0x490c>
   157f0:	mov	r1, r0
   157f4:	mov	r0, #0
   157f8:	b	14fe8 <strspn@plt+0x40f8>
   157fc:	andeq	r8, r2, r0, lsl #2
   15800:	ldr	r3, [pc, #4]	; 1580c <strspn@plt+0x491c>
   15804:	mvn	r2, #0
   15808:	b	14fe8 <strspn@plt+0x40f8>
   1580c:	andeq	r8, r2, r0, lsl #2
   15810:	mov	r1, r0
   15814:	ldr	r3, [pc, #8]	; 15824 <strspn@plt+0x4934>
   15818:	mvn	r2, #0
   1581c:	mov	r0, #0
   15820:	b	14fe8 <strspn@plt+0x40f8>
   15824:	andeq	r8, r2, r0, lsl #2
   15828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1582c:	mov	r9, r1
   15830:	ldr	r4, [pc, #352]	; 15998 <strspn@plt+0x4aa8>
   15834:	sub	sp, sp, #228	; 0xe4
   15838:	mov	fp, r0
   1583c:	ldr	r1, [r4]
   15840:	mov	r0, r9
   15844:	mov	r8, r3
   15848:	mov	sl, r2
   1584c:	str	r1, [sp, #220]	; 0xdc
   15850:	bl	16444 <strspn@plt+0x5554>
   15854:	mov	r5, r0
   15858:	mov	r0, r8
   1585c:	bl	16444 <strspn@plt+0x5554>
   15860:	mov	r6, r0
   15864:	mov	r0, r5
   15868:	bl	16494 <strspn@plt+0x55a4>
   1586c:	mov	r7, r0
   15870:	mov	r0, r6
   15874:	bl	16494 <strspn@plt+0x55a4>
   15878:	cmp	r7, r0
   1587c:	beq	158a0 <strspn@plt+0x49b0>
   15880:	mov	r6, #0
   15884:	ldr	r2, [sp, #220]	; 0xdc
   15888:	ldr	r3, [r4]
   1588c:	mov	r0, r6
   15890:	cmp	r2, r3
   15894:	bne	15994 <strspn@plt+0x4aa4>
   15898:	add	sp, sp, #228	; 0xe4
   1589c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158a0:	mov	r2, r7
   158a4:	mov	r1, r6
   158a8:	mov	r0, r5
   158ac:	bl	10d10 <memcmp@plt>
   158b0:	cmp	r0, #0
   158b4:	bne	15880 <strspn@plt+0x4990>
   158b8:	mov	r0, r9
   158bc:	bl	16370 <strspn@plt+0x5480>
   158c0:	mov	r3, #256	; 0x100
   158c4:	str	r3, [sp]
   158c8:	mov	r1, fp
   158cc:	add	r3, sp, #8
   158d0:	mov	r2, r0
   158d4:	mov	r5, r0
   158d8:	mov	r0, #3
   158dc:	bl	10d4c <__fxstatat64@plt>
   158e0:	cmp	r0, #0
   158e4:	bne	15978 <strspn@plt+0x4a88>
   158e8:	mov	r0, r5
   158ec:	bl	10ce0 <free@plt>
   158f0:	mov	r0, r8
   158f4:	bl	16370 <strspn@plt+0x5480>
   158f8:	mov	r3, #256	; 0x100
   158fc:	str	r3, [sp]
   15900:	mov	r1, sl
   15904:	add	r3, sp, #112	; 0x70
   15908:	mov	r2, r0
   1590c:	mov	r5, r0
   15910:	mov	r0, #3
   15914:	bl	10d4c <__fxstatat64@plt>
   15918:	cmp	r0, #0
   1591c:	bne	1595c <strspn@plt+0x4a6c>
   15920:	ldrd	r0, [sp, #104]	; 0x68
   15924:	ldrd	r2, [sp, #208]	; 0xd0
   15928:	cmp	r1, r3
   1592c:	cmpeq	r0, r2
   15930:	movne	r6, #0
   15934:	bne	15950 <strspn@plt+0x4a60>
   15938:	ldrd	r0, [sp, #8]
   1593c:	ldrd	r2, [sp, #112]	; 0x70
   15940:	cmp	r1, r3
   15944:	cmpeq	r0, r2
   15948:	moveq	r6, #1
   1594c:	movne	r6, #0
   15950:	mov	r0, r5
   15954:	bl	10ce0 <free@plt>
   15958:	b	15884 <strspn@plt+0x4994>
   1595c:	bl	10e24 <__errno_location@plt>
   15960:	mov	r3, r5
   15964:	ldr	r2, [pc, #48]	; 1599c <strspn@plt+0x4aac>
   15968:	ldr	r1, [r0]
   1596c:	mov	r0, #1
   15970:	bl	10dac <error@plt>
   15974:	b	15920 <strspn@plt+0x4a30>
   15978:	bl	10e24 <__errno_location@plt>
   1597c:	mov	r3, r5
   15980:	ldr	r2, [pc, #20]	; 1599c <strspn@plt+0x4aac>
   15984:	ldr	r1, [r0]
   15988:	mov	r0, #1
   1598c:	bl	10dac <error@plt>
   15990:	b	158e8 <strspn@plt+0x49f8>
   15994:	bl	10d28 <__stack_chk_fail@plt>
   15998:	andeq	r7, r2, r8, lsl #30
   1599c:	andeq	r7, r1, r0, asr r2
   159a0:	mvn	r2, #99	; 0x63
   159a4:	mov	r3, r1
   159a8:	mov	r1, r0
   159ac:	mov	r0, r2
   159b0:	b	15828 <strspn@plt+0x4938>
   159b4:	push	{r4, r5, r6, lr}
   159b8:	sub	sp, sp, #32
   159bc:	cmp	r1, #0
   159c0:	mov	r5, r0
   159c4:	ldr	r4, [sp, #48]	; 0x30
   159c8:	ldr	r6, [sp, #52]	; 0x34
   159cc:	beq	15a5c <strspn@plt+0x4b6c>
   159d0:	strd	r2, [sp]
   159d4:	mov	r3, r1
   159d8:	ldr	r2, [pc, #828]	; 15d1c <strspn@plt+0x4e2c>
   159dc:	mov	r1, #1
   159e0:	bl	10e60 <__fprintf_chk@plt>
   159e4:	mov	r2, #5
   159e8:	ldr	r1, [pc, #816]	; 15d20 <strspn@plt+0x4e30>
   159ec:	mov	r0, #0
   159f0:	bl	10d1c <dcgettext@plt>
   159f4:	ldr	r3, [pc, #808]	; 15d24 <strspn@plt+0x4e34>
   159f8:	ldr	r2, [pc, #808]	; 15d28 <strspn@plt+0x4e38>
   159fc:	str	r3, [sp]
   15a00:	mov	r1, #1
   15a04:	mov	r3, r0
   15a08:	mov	r0, r5
   15a0c:	bl	10e60 <__fprintf_chk@plt>
   15a10:	ldr	r1, [pc, #788]	; 15d2c <strspn@plt+0x4e3c>
   15a14:	mov	r2, #5
   15a18:	mov	r0, #0
   15a1c:	bl	10d1c <dcgettext@plt>
   15a20:	mov	r1, r5
   15a24:	bl	10ca4 <fputs_unlocked@plt>
   15a28:	cmp	r6, #9
   15a2c:	ldrls	pc, [pc, r6, lsl #2]
   15a30:	b	15d0c <strspn@plt+0x4e1c>
   15a34:	andeq	r5, r1, r8, lsl sp
   15a38:	andeq	r5, r1, r0, ror #21
   15a3c:	andeq	r5, r1, ip, lsl #22
   15a40:	andeq	r5, r1, r0, asr #22
   15a44:	andeq	r5, r1, ip, ror fp
   15a48:			; <UNDEFINED> instruction: 0x00015bbc
   15a4c:	andeq	r5, r1, r4, lsl #24
   15a50:	andeq	r5, r1, r4, asr ip
   15a54:	andeq	r5, r1, ip, lsr #25
   15a58:	andeq	r5, r1, r4, ror sl
   15a5c:	str	r3, [sp]
   15a60:	mov	r1, #1
   15a64:	mov	r3, r2
   15a68:	ldr	r2, [pc, #704]	; 15d30 <strspn@plt+0x4e40>
   15a6c:	bl	10e60 <__fprintf_chk@plt>
   15a70:	b	159e4 <strspn@plt+0x4af4>
   15a74:	ldr	r1, [pc, #696]	; 15d34 <strspn@plt+0x4e44>
   15a78:	mov	r2, #5
   15a7c:	mov	r0, #0
   15a80:	bl	10d1c <dcgettext@plt>
   15a84:	ldr	r2, [r4, #32]
   15a88:	ldr	r3, [r4, #28]
   15a8c:	ldr	r1, [r4, #24]
   15a90:	str	r2, [sp, #28]
   15a94:	ldr	r2, [r4, #20]
   15a98:	str	r3, [sp, #24]
   15a9c:	ldr	r3, [r4, #16]
   15aa0:	str	r1, [sp, #20]
   15aa4:	ldr	r1, [r4, #12]
   15aa8:	str	r2, [sp, #16]
   15aac:	ldr	r2, [r4, #8]
   15ab0:	str	r3, [sp, #12]
   15ab4:	ldr	r3, [r4, #4]
   15ab8:	str	r1, [sp, #8]
   15abc:	str	r2, [sp, #4]
   15ac0:	str	r3, [sp]
   15ac4:	mov	r1, #1
   15ac8:	ldr	r3, [r4]
   15acc:	mov	r2, r0
   15ad0:	mov	r0, r5
   15ad4:	bl	10e60 <__fprintf_chk@plt>
   15ad8:	add	sp, sp, #32
   15adc:	pop	{r4, r5, r6, pc}
   15ae0:	mov	r2, #5
   15ae4:	ldr	r1, [pc, #588]	; 15d38 <strspn@plt+0x4e48>
   15ae8:	mov	r0, #0
   15aec:	bl	10d1c <dcgettext@plt>
   15af0:	ldr	r3, [r4]
   15af4:	mov	r1, #1
   15af8:	mov	r2, r0
   15afc:	mov	r0, r5
   15b00:	add	sp, sp, #32
   15b04:	pop	{r4, r5, r6, lr}
   15b08:	b	10e60 <__fprintf_chk@plt>
   15b0c:	mov	r2, #5
   15b10:	ldr	r1, [pc, #548]	; 15d3c <strspn@plt+0x4e4c>
   15b14:	mov	r0, #0
   15b18:	bl	10d1c <dcgettext@plt>
   15b1c:	ldr	r2, [r4, #4]
   15b20:	ldr	r3, [r4]
   15b24:	mov	r1, #1
   15b28:	str	r2, [sp, #48]	; 0x30
   15b2c:	mov	r2, r0
   15b30:	mov	r0, r5
   15b34:	add	sp, sp, #32
   15b38:	pop	{r4, r5, r6, lr}
   15b3c:	b	10e60 <__fprintf_chk@plt>
   15b40:	mov	r2, #5
   15b44:	ldr	r1, [pc, #500]	; 15d40 <strspn@plt+0x4e50>
   15b48:	mov	r0, #0
   15b4c:	bl	10d1c <dcgettext@plt>
   15b50:	ldr	r2, [r4, #8]
   15b54:	ldr	r3, [r4, #4]
   15b58:	mov	r1, #1
   15b5c:	str	r2, [sp, #52]	; 0x34
   15b60:	str	r3, [sp, #48]	; 0x30
   15b64:	ldr	r3, [r4]
   15b68:	mov	r2, r0
   15b6c:	mov	r0, r5
   15b70:	add	sp, sp, #32
   15b74:	pop	{r4, r5, r6, lr}
   15b78:	b	10e60 <__fprintf_chk@plt>
   15b7c:	mov	r2, #5
   15b80:	ldr	r1, [pc, #444]	; 15d44 <strspn@plt+0x4e54>
   15b84:	mov	r0, #0
   15b88:	bl	10d1c <dcgettext@plt>
   15b8c:	ldr	r1, [r4, #12]
   15b90:	ldr	r2, [r4, #8]
   15b94:	ldr	r3, [r4, #4]
   15b98:	str	r1, [sp, #8]
   15b9c:	str	r2, [sp, #4]
   15ba0:	str	r3, [sp]
   15ba4:	mov	r1, #1
   15ba8:	ldr	r3, [r4]
   15bac:	mov	r2, r0
   15bb0:	mov	r0, r5
   15bb4:	bl	10e60 <__fprintf_chk@plt>
   15bb8:	b	15ad8 <strspn@plt+0x4be8>
   15bbc:	mov	r2, #5
   15bc0:	ldr	r1, [pc, #384]	; 15d48 <strspn@plt+0x4e58>
   15bc4:	mov	r0, #0
   15bc8:	bl	10d1c <dcgettext@plt>
   15bcc:	ldr	r3, [r4, #16]
   15bd0:	ldr	r1, [r4, #12]
   15bd4:	ldr	r2, [r4, #8]
   15bd8:	str	r3, [sp, #12]
   15bdc:	ldr	r3, [r4, #4]
   15be0:	str	r1, [sp, #8]
   15be4:	str	r2, [sp, #4]
   15be8:	str	r3, [sp]
   15bec:	mov	r1, #1
   15bf0:	ldr	r3, [r4]
   15bf4:	mov	r2, r0
   15bf8:	mov	r0, r5
   15bfc:	bl	10e60 <__fprintf_chk@plt>
   15c00:	b	15ad8 <strspn@plt+0x4be8>
   15c04:	mov	r2, #5
   15c08:	ldr	r1, [pc, #316]	; 15d4c <strspn@plt+0x4e5c>
   15c0c:	mov	r0, #0
   15c10:	bl	10d1c <dcgettext@plt>
   15c14:	ldr	r2, [r4, #20]
   15c18:	ldr	r3, [r4, #16]
   15c1c:	ldr	r1, [r4, #12]
   15c20:	str	r2, [sp, #16]
   15c24:	ldr	r2, [r4, #8]
   15c28:	str	r3, [sp, #12]
   15c2c:	ldr	r3, [r4, #4]
   15c30:	str	r1, [sp, #8]
   15c34:	str	r2, [sp, #4]
   15c38:	str	r3, [sp]
   15c3c:	mov	r1, #1
   15c40:	ldr	r3, [r4]
   15c44:	mov	r2, r0
   15c48:	mov	r0, r5
   15c4c:	bl	10e60 <__fprintf_chk@plt>
   15c50:	b	15ad8 <strspn@plt+0x4be8>
   15c54:	mov	r2, #5
   15c58:	ldr	r1, [pc, #240]	; 15d50 <strspn@plt+0x4e60>
   15c5c:	mov	r0, #0
   15c60:	bl	10d1c <dcgettext@plt>
   15c64:	ldr	r1, [r4, #24]
   15c68:	ldr	r2, [r4, #20]
   15c6c:	ldr	r3, [r4, #16]
   15c70:	str	r1, [sp, #20]
   15c74:	ldr	r1, [r4, #12]
   15c78:	str	r2, [sp, #16]
   15c7c:	ldr	r2, [r4, #8]
   15c80:	str	r3, [sp, #12]
   15c84:	ldr	r3, [r4, #4]
   15c88:	str	r1, [sp, #8]
   15c8c:	str	r2, [sp, #4]
   15c90:	str	r3, [sp]
   15c94:	mov	r1, #1
   15c98:	ldr	r3, [r4]
   15c9c:	mov	r2, r0
   15ca0:	mov	r0, r5
   15ca4:	bl	10e60 <__fprintf_chk@plt>
   15ca8:	b	15ad8 <strspn@plt+0x4be8>
   15cac:	mov	r2, #5
   15cb0:	ldr	r1, [pc, #156]	; 15d54 <strspn@plt+0x4e64>
   15cb4:	mov	r0, #0
   15cb8:	bl	10d1c <dcgettext@plt>
   15cbc:	ldr	r3, [r4, #28]
   15cc0:	ldr	r1, [r4, #24]
   15cc4:	ldr	r2, [r4, #20]
   15cc8:	str	r3, [sp, #24]
   15ccc:	ldr	r3, [r4, #16]
   15cd0:	str	r1, [sp, #20]
   15cd4:	ldr	r1, [r4, #12]
   15cd8:	str	r2, [sp, #16]
   15cdc:	ldr	r2, [r4, #8]
   15ce0:	str	r3, [sp, #12]
   15ce4:	ldr	r3, [r4, #4]
   15ce8:	str	r1, [sp, #8]
   15cec:	str	r2, [sp, #4]
   15cf0:	str	r3, [sp]
   15cf4:	mov	r1, #1
   15cf8:	ldr	r3, [r4]
   15cfc:	mov	r2, r0
   15d00:	mov	r0, r5
   15d04:	bl	10e60 <__fprintf_chk@plt>
   15d08:	b	15ad8 <strspn@plt+0x4be8>
   15d0c:	mov	r2, #5
   15d10:	ldr	r1, [pc, #64]	; 15d58 <strspn@plt+0x4e68>
   15d14:	b	15a7c <strspn@plt+0x4b8c>
   15d18:	bl	10ed8 <abort@plt>
   15d1c:	strdeq	r7, [r1], -r0
   15d20:	andeq	r7, r1, r4, lsl #8
   15d24:	andeq	r0, r0, r2, ror #15
   15d28:	ldrdeq	r7, [r1], -r8
   15d2c:	andeq	r7, r1, r8, lsl #8
   15d30:	strdeq	r7, [r1], -ip
   15d34:	andeq	r7, r1, r0, ror #11
   15d38:	ldrdeq	r7, [r1], -r4
   15d3c:	andeq	r7, r1, r4, ror #9
   15d40:	strdeq	r7, [r1], -ip
   15d44:	andeq	r7, r1, r8, lsl r5
   15d48:	andeq	r7, r1, r8, lsr r5
   15d4c:	andeq	r7, r1, ip, asr r5
   15d50:	andeq	r7, r1, r4, lsl #11
   15d54:			; <UNDEFINED> instruction: 0x000175b0
   15d58:	andeq	r7, r1, r4, lsl r6
   15d5c:	push	{r4, r5, lr}
   15d60:	sub	sp, sp, #12
   15d64:	ldr	r5, [sp, #24]
   15d68:	ldr	ip, [r5]
   15d6c:	cmp	ip, #0
   15d70:	beq	15d8c <strspn@plt+0x4e9c>
   15d74:	mov	lr, r5
   15d78:	mov	ip, #0
   15d7c:	ldr	r4, [lr, #4]!
   15d80:	add	ip, ip, #1
   15d84:	cmp	r4, #0
   15d88:	bne	15d7c <strspn@plt+0x4e8c>
   15d8c:	stm	sp, {r5, ip}
   15d90:	bl	159b4 <strspn@plt+0x4ac4>
   15d94:	add	sp, sp, #12
   15d98:	pop	{r4, r5, pc}
   15d9c:	push	{r4, r5, r6, lr}
   15da0:	sub	sp, sp, #56	; 0x38
   15da4:	ldr	r6, [pc, #88]	; 15e04 <strspn@plt+0x4f14>
   15da8:	ldr	r5, [sp, #72]	; 0x48
   15dac:	add	r4, sp, #8
   15db0:	ldr	ip, [r6]
   15db4:	str	ip, [sp, #52]	; 0x34
   15db8:	mov	ip, #0
   15dbc:	ldr	lr, [r5], #4
   15dc0:	cmp	lr, #0
   15dc4:	str	lr, [r4, #4]!
   15dc8:	beq	15dd8 <strspn@plt+0x4ee8>
   15dcc:	add	ip, ip, #1
   15dd0:	cmp	ip, #10
   15dd4:	bne	15dbc <strspn@plt+0x4ecc>
   15dd8:	add	lr, sp, #12
   15ddc:	str	ip, [sp, #4]
   15de0:	str	lr, [sp]
   15de4:	bl	159b4 <strspn@plt+0x4ac4>
   15de8:	ldr	r2, [sp, #52]	; 0x34
   15dec:	ldr	r3, [r6]
   15df0:	cmp	r2, r3
   15df4:	bne	15e00 <strspn@plt+0x4f10>
   15df8:	add	sp, sp, #56	; 0x38
   15dfc:	pop	{r4, r5, r6, pc}
   15e00:	bl	10d28 <__stack_chk_fail@plt>
   15e04:	andeq	r7, r2, r8, lsl #30
   15e08:	push	{r3}		; (str r3, [sp, #-4]!)
   15e0c:	mov	ip, #0
   15e10:	push	{r4, r5, r6, lr}
   15e14:	sub	sp, sp, #60	; 0x3c
   15e18:	ldr	r6, [pc, #100]	; 15e84 <strspn@plt+0x4f94>
   15e1c:	add	r5, sp, #8
   15e20:	add	r4, sp, #80	; 0x50
   15e24:	ldr	r3, [r6]
   15e28:	str	r4, [sp, #8]
   15e2c:	str	r3, [sp, #52]	; 0x34
   15e30:	ldr	r3, [sp, #76]	; 0x4c
   15e34:	ldr	lr, [r4], #4
   15e38:	cmp	lr, #0
   15e3c:	str	lr, [r5, #4]!
   15e40:	beq	15e50 <strspn@plt+0x4f60>
   15e44:	add	ip, ip, #1
   15e48:	cmp	ip, #10
   15e4c:	bne	15e34 <strspn@plt+0x4f44>
   15e50:	add	lr, sp, #12
   15e54:	str	ip, [sp, #4]
   15e58:	str	lr, [sp]
   15e5c:	bl	159b4 <strspn@plt+0x4ac4>
   15e60:	ldr	r2, [sp, #52]	; 0x34
   15e64:	ldr	r3, [r6]
   15e68:	cmp	r2, r3
   15e6c:	bne	15e80 <strspn@plt+0x4f90>
   15e70:	add	sp, sp, #60	; 0x3c
   15e74:	pop	{r4, r5, r6, lr}
   15e78:	add	sp, sp, #4
   15e7c:	bx	lr
   15e80:	bl	10d28 <__stack_chk_fail@plt>
   15e84:	andeq	r7, r2, r8, lsl #30
   15e88:	push	{r4, lr}
   15e8c:	mov	r2, #5
   15e90:	ldr	r1, [pc, #88]	; 15ef0 <strspn@plt+0x5000>
   15e94:	mov	r0, #0
   15e98:	bl	10d1c <dcgettext@plt>
   15e9c:	ldr	r2, [pc, #80]	; 15ef4 <strspn@plt+0x5004>
   15ea0:	mov	r1, r0
   15ea4:	mov	r0, #1
   15ea8:	bl	10e48 <__printf_chk@plt>
   15eac:	mov	r2, #5
   15eb0:	ldr	r1, [pc, #64]	; 15ef8 <strspn@plt+0x5008>
   15eb4:	mov	r0, #0
   15eb8:	bl	10d1c <dcgettext@plt>
   15ebc:	ldr	r3, [pc, #56]	; 15efc <strspn@plt+0x500c>
   15ec0:	ldr	r2, [pc, #56]	; 15f00 <strspn@plt+0x5010>
   15ec4:	mov	r1, r0
   15ec8:	mov	r0, #1
   15ecc:	bl	10e48 <__printf_chk@plt>
   15ed0:	ldr	r1, [pc, #44]	; 15f04 <strspn@plt+0x5014>
   15ed4:	mov	r2, #5
   15ed8:	mov	r0, #0
   15edc:	bl	10d1c <dcgettext@plt>
   15ee0:	ldr	r3, [pc, #32]	; 15f08 <strspn@plt+0x5018>
   15ee4:	pop	{r4, lr}
   15ee8:	ldr	r1, [r3]
   15eec:	b	10ca4 <fputs_unlocked@plt>
   15ef0:	andeq	r7, r1, r0, asr r6
   15ef4:	andeq	r7, r1, r8, ror #12
   15ef8:	andeq	r7, r1, r0, lsl #13
   15efc:	strdeq	r6, [r1], -r8
   15f00:	andeq	r7, r1, r0, lsr #32
   15f04:	muleq	r1, r4, r6
   15f08:	andeq	r8, r2, r4, asr #2
   15f0c:	push	{r4, lr}
   15f10:	mov	r4, r0
   15f14:	bl	10db8 <malloc@plt>
   15f18:	adds	r4, r4, #0
   15f1c:	movne	r4, #1
   15f20:	cmp	r0, #0
   15f24:	movne	r4, #0
   15f28:	cmp	r4, #0
   15f2c:	popeq	{r4, pc}
   15f30:	bl	16154 <strspn@plt+0x5264>
   15f34:	push	{r4, r5, r6, lr}
   15f38:	umull	r4, r5, r0, r1
   15f3c:	adds	r3, r5, #0
   15f40:	movne	r3, #1
   15f44:	cmp	r4, #0
   15f48:	blt	15f60 <strspn@plt+0x5070>
   15f4c:	cmp	r3, #0
   15f50:	bne	15f60 <strspn@plt+0x5070>
   15f54:	mul	r0, r1, r0
   15f58:	pop	{r4, r5, r6, lr}
   15f5c:	b	15f0c <strspn@plt+0x501c>
   15f60:	bl	16154 <strspn@plt+0x5264>
   15f64:	b	15f0c <strspn@plt+0x501c>
   15f68:	adds	r3, r0, #0
   15f6c:	movne	r3, #1
   15f70:	cmp	r1, #0
   15f74:	movne	r3, #0
   15f78:	cmp	r3, #0
   15f7c:	push	{r4, lr}
   15f80:	bne	15fa8 <strspn@plt+0x50b8>
   15f84:	mov	r4, r1
   15f88:	bl	10d34 <realloc@plt>
   15f8c:	adds	r4, r4, #0
   15f90:	movne	r4, #1
   15f94:	cmp	r0, #0
   15f98:	movne	r4, #0
   15f9c:	cmp	r4, #0
   15fa0:	popeq	{r4, pc}
   15fa4:	bl	16154 <strspn@plt+0x5264>
   15fa8:	bl	10ce0 <free@plt>
   15fac:	mov	r0, #0
   15fb0:	pop	{r4, pc}
   15fb4:	push	{r4, r5, r6, lr}
   15fb8:	umull	r4, r5, r1, r2
   15fbc:	adds	r3, r5, #0
   15fc0:	movne	r3, #1
   15fc4:	cmp	r4, #0
   15fc8:	blt	15fe0 <strspn@plt+0x50f0>
   15fcc:	cmp	r3, #0
   15fd0:	bne	15fe0 <strspn@plt+0x50f0>
   15fd4:	mul	r1, r2, r1
   15fd8:	pop	{r4, r5, r6, lr}
   15fdc:	b	15f68 <strspn@plt+0x5078>
   15fe0:	bl	16154 <strspn@plt+0x5264>
   15fe4:	push	{r4, r5, r6, r7, r8, lr}
   15fe8:	subs	r7, r0, #0
   15fec:	mov	r6, r1
   15ff0:	mov	r5, r2
   15ff4:	ldr	r4, [r1]
   15ff8:	beq	1602c <strspn@plt+0x513c>
   15ffc:	mov	r1, r2
   16000:	ldr	r0, [pc, #104]	; 16070 <strspn@plt+0x5180>
   16004:	bl	16740 <strspn@plt+0x5850>
   16008:	cmp	r0, r4
   1600c:	bls	16050 <strspn@plt+0x5160>
   16010:	add	r3, r4, #1
   16014:	add	r4, r3, r4, lsr #1
   16018:	str	r4, [r6]
   1601c:	mul	r1, r5, r4
   16020:	mov	r0, r7
   16024:	pop	{r4, r5, r6, r7, r8, lr}
   16028:	b	15f68 <strspn@plt+0x5078>
   1602c:	cmp	r4, #0
   16030:	beq	16054 <strspn@plt+0x5164>
   16034:	umull	r0, r1, r4, r5
   16038:	adds	r3, r1, #0
   1603c:	movne	r3, #1
   16040:	cmp	r0, #0
   16044:	blt	16050 <strspn@plt+0x5160>
   16048:	cmp	r3, #0
   1604c:	beq	16018 <strspn@plt+0x5128>
   16050:	bl	16154 <strspn@plt+0x5264>
   16054:	mov	r1, r2
   16058:	mov	r0, #64	; 0x40
   1605c:	bl	16740 <strspn@plt+0x5850>
   16060:	cmp	r5, #64	; 0x40
   16064:	movls	r4, r0
   16068:	addhi	r4, r0, #1
   1606c:	b	16034 <strspn@plt+0x5144>
   16070:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   16074:	cmp	r0, #0
   16078:	ldr	r3, [r1]
   1607c:	beq	160a0 <strspn@plt+0x51b0>
   16080:	ldr	r2, [pc, #60]	; 160c4 <strspn@plt+0x51d4>
   16084:	cmp	r3, r2
   16088:	bhi	160bc <strspn@plt+0x51cc>
   1608c:	add	r2, r3, #1
   16090:	add	r3, r2, r3, lsr #1
   16094:	str	r3, [r1]
   16098:	mov	r1, r3
   1609c:	b	15f68 <strspn@plt+0x5078>
   160a0:	cmp	r3, #0
   160a4:	bne	160b8 <strspn@plt+0x51c8>
   160a8:	mov	r3, #64	; 0x40
   160ac:	str	r3, [r1]
   160b0:	mov	r1, r3
   160b4:	b	15f68 <strspn@plt+0x5078>
   160b8:	bge	16094 <strspn@plt+0x51a4>
   160bc:	push	{r4, lr}
   160c0:	bl	16154 <strspn@plt+0x5264>
   160c4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   160c8:	push	{r4, lr}
   160cc:	mov	r4, r0
   160d0:	bl	15f0c <strspn@plt+0x501c>
   160d4:	mov	r2, r4
   160d8:	mov	r1, #0
   160dc:	pop	{r4, lr}
   160e0:	b	10e3c <memset@plt>
   160e4:	push	{r4, r5, r6, lr}
   160e8:	umull	r4, r5, r0, r1
   160ec:	adds	r3, r5, #0
   160f0:	movne	r3, #1
   160f4:	cmp	r4, #0
   160f8:	blt	16110 <strspn@plt+0x5220>
   160fc:	cmp	r3, #0
   16100:	bne	16110 <strspn@plt+0x5220>
   16104:	bl	10c98 <calloc@plt>
   16108:	cmp	r0, #0
   1610c:	popne	{r4, r5, r6, pc}
   16110:	bl	16154 <strspn@plt+0x5264>
   16114:	push	{r4, r5, r6, lr}
   16118:	mov	r4, r1
   1611c:	mov	r5, r0
   16120:	mov	r0, r1
   16124:	bl	15f0c <strspn@plt+0x501c>
   16128:	mov	r2, r4
   1612c:	mov	r1, r5
   16130:	pop	{r4, r5, r6, lr}
   16134:	b	10cf8 <memcpy@plt>
   16138:	push	{r4, lr}
   1613c:	mov	r4, r0
   16140:	bl	10e18 <strlen@plt>
   16144:	add	r1, r0, #1
   16148:	mov	r0, r4
   1614c:	pop	{r4, lr}
   16150:	b	16114 <strspn@plt+0x5224>
   16154:	ldr	r3, [pc, #44]	; 16188 <strspn@plt+0x5298>
   16158:	push	{r4, lr}
   1615c:	mov	r2, #5
   16160:	ldr	r1, [pc, #36]	; 1618c <strspn@plt+0x529c>
   16164:	mov	r0, #0
   16168:	ldr	r4, [r3]
   1616c:	bl	10d1c <dcgettext@plt>
   16170:	ldr	r2, [pc, #24]	; 16190 <strspn@plt+0x52a0>
   16174:	mov	r1, #0
   16178:	mov	r3, r0
   1617c:	mov	r0, r4
   16180:	bl	10dac <error@plt>
   16184:	bl	10ed8 <abort@plt>
   16188:	andeq	r8, r2, ip, ror #1
   1618c:	andeq	r7, r1, r8, lsl #14
   16190:	andeq	r7, r1, r0, asr r2
   16194:	mov	r1, #0
   16198:	push	{r4, lr}
   1619c:	mov	r0, r1
   161a0:	bl	10e00 <getcwd@plt>
   161a4:	subs	r4, r0, #0
   161a8:	beq	161b4 <strspn@plt+0x52c4>
   161ac:	mov	r0, r4
   161b0:	pop	{r4, pc}
   161b4:	bl	10e24 <__errno_location@plt>
   161b8:	ldr	r3, [r0]
   161bc:	cmp	r3, #12
   161c0:	bne	161ac <strspn@plt+0x52bc>
   161c4:	bl	16154 <strspn@plt+0x5264>
   161c8:	push	{r4, r5, r6, r7, r8, lr}
   161cc:	subs	r7, r0, #0
   161d0:	ldr	r5, [pc, #108]	; 16244 <strspn@plt+0x5354>
   161d4:	sub	sp, sp, #8
   161d8:	mov	r8, r1
   161dc:	ldr	r1, [r5]
   161e0:	moveq	r7, sp
   161e4:	str	r1, [sp, #4]
   161e8:	mov	r0, r7
   161ec:	mov	r1, r8
   161f0:	mov	r6, r2
   161f4:	bl	10da0 <mbrtowc@plt>
   161f8:	cmp	r6, #0
   161fc:	cmnne	r0, #3
   16200:	mov	r4, r0
   16204:	bhi	16224 <strspn@plt+0x5334>
   16208:	ldr	r2, [sp, #4]
   1620c:	ldr	r3, [r5]
   16210:	mov	r0, r4
   16214:	cmp	r2, r3
   16218:	bne	16240 <strspn@plt+0x5350>
   1621c:	add	sp, sp, #8
   16220:	pop	{r4, r5, r6, r7, r8, pc}
   16224:	mov	r0, #0
   16228:	bl	164e4 <strspn@plt+0x55f4>
   1622c:	cmp	r0, #0
   16230:	moveq	r4, #1
   16234:	ldrbeq	r3, [r8]
   16238:	streq	r3, [r7]
   1623c:	b	16208 <strspn@plt+0x5318>
   16240:	bl	10d28 <__stack_chk_fail@plt>
   16244:	andeq	r7, r2, r8, lsl #30
   16248:	cmp	r1, #1024	; 0x400
   1624c:	push	{r4, r5, r6, r7, r8, lr}
   16250:	mov	r7, r0
   16254:	ldrhi	r4, [pc, #156]	; 162f8 <strspn@plt+0x5408>
   16258:	addls	r4, r1, #1
   1625c:	mov	r0, r4
   16260:	bl	10db8 <malloc@plt>
   16264:	mov	r2, r4
   16268:	subs	r5, r0, #0
   1626c:	mov	r1, r5
   16270:	mov	r0, r7
   16274:	beq	162bc <strspn@plt+0x53cc>
   16278:	bl	10d64 <readlink@plt>
   1627c:	subs	r6, r0, #0
   16280:	blt	162c4 <strspn@plt+0x53d4>
   16284:	cmp	r4, r6
   16288:	mov	r0, r5
   1628c:	bhi	162e8 <strspn@plt+0x53f8>
   16290:	bl	10ce0 <free@plt>
   16294:	cmn	r4, #-1073741823	; 0xc0000001
   16298:	lslls	r4, r4, #1
   1629c:	bls	1625c <strspn@plt+0x536c>
   162a0:	cmn	r4, #-2147483646	; 0x80000002
   162a4:	mvn	r4, #-2147483648	; 0x80000000
   162a8:	bls	1625c <strspn@plt+0x536c>
   162ac:	bl	10e24 <__errno_location@plt>
   162b0:	mov	r5, #0
   162b4:	mov	r3, #12
   162b8:	str	r3, [r0]
   162bc:	mov	r0, r5
   162c0:	pop	{r4, r5, r6, r7, r8, pc}
   162c4:	bl	10e24 <__errno_location@plt>
   162c8:	ldr	r3, [r0]
   162cc:	cmp	r3, #34	; 0x22
   162d0:	beq	16284 <strspn@plt+0x5394>
   162d4:	mov	r0, r5
   162d8:	mov	r5, #0
   162dc:	bl	10ce0 <free@plt>
   162e0:	mov	r0, r5
   162e4:	pop	{r4, r5, r6, r7, r8, pc}
   162e8:	mov	r3, #0
   162ec:	strb	r3, [r5, r6]
   162f0:	mov	r0, r5
   162f4:	pop	{r4, r5, r6, r7, r8, pc}
   162f8:	andeq	r0, r0, r1, lsl #8
   162fc:	push	{r4, r5, r6, lr}
   16300:	mov	r4, r0
   16304:	bl	10d94 <__fpending@plt>
   16308:	ldr	r5, [r4]
   1630c:	and	r5, r5, #32
   16310:	mov	r6, r0
   16314:	mov	r0, r4
   16318:	bl	165a0 <strspn@plt+0x56b0>
   1631c:	cmp	r5, #0
   16320:	mov	r4, r0
   16324:	bne	16350 <strspn@plt+0x5460>
   16328:	cmp	r0, #0
   1632c:	beq	16348 <strspn@plt+0x5458>
   16330:	cmp	r6, #0
   16334:	bne	16368 <strspn@plt+0x5478>
   16338:	bl	10e24 <__errno_location@plt>
   1633c:	ldr	r4, [r0]
   16340:	subs	r4, r4, #9
   16344:	mvnne	r4, #0
   16348:	mov	r0, r4
   1634c:	pop	{r4, r5, r6, pc}
   16350:	cmp	r0, #0
   16354:	bne	16368 <strspn@plt+0x5478>
   16358:	bl	10e24 <__errno_location@plt>
   1635c:	str	r4, [r0]
   16360:	mvn	r4, #0
   16364:	b	16348 <strspn@plt+0x5458>
   16368:	mvn	r4, #0
   1636c:	b	16348 <strspn@plt+0x5458>
   16370:	push	{r4, lr}
   16374:	bl	163ec <strspn@plt+0x54fc>
   16378:	cmp	r0, #0
   1637c:	popne	{r4, pc}
   16380:	bl	16154 <strspn@plt+0x5264>
   16384:	push	{r4, r5, r6, lr}
   16388:	mov	r4, r0
   1638c:	ldrb	ip, [r0]
   16390:	sub	r5, ip, #47	; 0x2f
   16394:	bl	16444 <strspn@plt+0x5554>
   16398:	clz	r5, r5
   1639c:	lsr	r5, r5, #5
   163a0:	sub	r0, r0, r4
   163a4:	cmp	r0, r5
   163a8:	popls	{r4, r5, r6, pc}
   163ac:	add	r3, r4, r0
   163b0:	ldrb	r3, [r3, #-1]
   163b4:	cmp	r3, #47	; 0x2f
   163b8:	popne	{r4, r5, r6, pc}
   163bc:	sub	r0, r0, #2
   163c0:	sub	ip, r4, #1
   163c4:	add	r3, r4, r0
   163c8:	add	ip, ip, r5
   163cc:	rsb	r2, r4, #1
   163d0:	cmp	r3, ip
   163d4:	add	r0, r2, r3
   163d8:	popeq	{r4, r5, r6, pc}
   163dc:	ldrb	r1, [r3], #-1
   163e0:	cmp	r1, #47	; 0x2f
   163e4:	beq	163d0 <strspn@plt+0x54e0>
   163e8:	pop	{r4, r5, r6, pc}
   163ec:	push	{r4, r5, r6, lr}
   163f0:	mov	r6, r0
   163f4:	bl	16384 <strspn@plt+0x5494>
   163f8:	add	r3, r0, #1
   163fc:	mov	r4, r0
   16400:	cmp	r0, #0
   16404:	movne	r0, r3
   16408:	addeq	r0, r3, #1
   1640c:	bl	10db8 <malloc@plt>
   16410:	subs	r5, r0, #0
   16414:	beq	1643c <strspn@plt+0x554c>
   16418:	mov	r2, r4
   1641c:	mov	r1, r6
   16420:	bl	10cf8 <memcpy@plt>
   16424:	cmp	r4, #0
   16428:	moveq	r3, #46	; 0x2e
   1642c:	moveq	r4, #1
   16430:	strbeq	r3, [r5]
   16434:	mov	r3, #0
   16438:	strb	r3, [r5, r4]
   1643c:	mov	r0, r5
   16440:	pop	{r4, r5, r6, pc}
   16444:	ldrb	r3, [r0]
   16448:	cmp	r3, #47	; 0x2f
   1644c:	bne	1645c <strspn@plt+0x556c>
   16450:	ldrb	r3, [r0, #1]!
   16454:	cmp	r3, #47	; 0x2f
   16458:	beq	16450 <strspn@plt+0x5560>
   1645c:	cmp	r3, #0
   16460:	bxeq	lr
   16464:	mov	r2, r0
   16468:	mov	r1, #0
   1646c:	cmp	r3, #47	; 0x2f
   16470:	moveq	r1, #1
   16474:	beq	16484 <strspn@plt+0x5594>
   16478:	cmp	r1, #0
   1647c:	movne	r0, r2
   16480:	movne	r1, #0
   16484:	ldrb	r3, [r2, #1]!
   16488:	cmp	r3, #0
   1648c:	bne	1646c <strspn@plt+0x557c>
   16490:	bx	lr
   16494:	push	{r4, lr}
   16498:	mov	r4, r0
   1649c:	bl	10e18 <strlen@plt>
   164a0:	cmp	r0, #1
   164a4:	popls	{r4, pc}
   164a8:	add	r2, r4, r0
   164ac:	mov	r3, r0
   164b0:	ldrb	r2, [r2, #-1]
   164b4:	cmp	r2, #47	; 0x2f
   164b8:	subeq	r3, r0, #2
   164bc:	addeq	r3, r4, r3
   164c0:	rsbeq	r1, r4, #1
   164c4:	popne	{r4, pc}
   164c8:	cmp	r3, r4
   164cc:	add	r0, r1, r3
   164d0:	popeq	{r4, pc}
   164d4:	ldrb	r2, [r3], #-1
   164d8:	cmp	r2, #47	; 0x2f
   164dc:	popne	{r4, pc}
   164e0:	b	164c8 <strspn@plt+0x55d8>
   164e4:	push	{r4, lr}
   164e8:	mov	r1, #0
   164ec:	bl	10e90 <setlocale@plt>
   164f0:	subs	r4, r0, #0
   164f4:	beq	16520 <strspn@plt+0x5630>
   164f8:	ldr	r1, [pc, #40]	; 16528 <strspn@plt+0x5638>
   164fc:	bl	10cbc <strcmp@plt>
   16500:	cmp	r0, #0
   16504:	popeq	{r4, pc}
   16508:	mov	r0, r4
   1650c:	ldr	r1, [pc, #24]	; 1652c <strspn@plt+0x563c>
   16510:	bl	10cbc <strcmp@plt>
   16514:	adds	r0, r0, #0
   16518:	movne	r0, #1
   1651c:	pop	{r4, pc}
   16520:	mov	r0, #1
   16524:	pop	{r4, pc}
   16528:	andeq	r7, r1, ip, lsl r7
   1652c:	andeq	r7, r1, r0, lsr #14
   16530:	ldrb	r3, [r0]
   16534:	cmp	r3, #0
   16538:	beq	16564 <strspn@plt+0x5674>
   1653c:	mov	r2, #0
   16540:	push	{r4, lr}
   16544:	add	r2, r3, r2, ror #23
   16548:	ldrb	r3, [r0, #1]!
   1654c:	cmp	r3, #0
   16550:	bne	16544 <strspn@plt+0x5654>
   16554:	mov	r0, r2
   16558:	bl	1692c <strspn@plt+0x5a3c>
   1655c:	mov	r0, r1
   16560:	pop	{r4, pc}
   16564:	mov	r0, r3
   16568:	bx	lr
   1656c:	push	{r4, lr}
   16570:	mov	r0, #14
   16574:	bl	10ea8 <nl_langinfo@plt>
   16578:	cmp	r0, #0
   1657c:	beq	16594 <strspn@plt+0x56a4>
   16580:	ldrb	r2, [r0]
   16584:	ldr	r3, [pc, #16]	; 1659c <strspn@plt+0x56ac>
   16588:	cmp	r2, #0
   1658c:	moveq	r0, r3
   16590:	pop	{r4, pc}
   16594:	ldr	r0, [pc]	; 1659c <strspn@plt+0x56ac>
   16598:	pop	{r4, pc}
   1659c:	andeq	r7, r1, r8, lsr #14
   165a0:	push	{r4, r5, lr}
   165a4:	sub	sp, sp, #12
   165a8:	mov	r4, r0
   165ac:	bl	10e54 <fileno@plt>
   165b0:	cmp	r0, #0
   165b4:	mov	r0, r4
   165b8:	blt	16634 <strspn@plt+0x5744>
   165bc:	bl	10dd0 <__freading@plt>
   165c0:	cmp	r0, #0
   165c4:	bne	16600 <strspn@plt+0x5710>
   165c8:	mov	r0, r4
   165cc:	bl	16640 <strspn@plt+0x5750>
   165d0:	cmp	r0, #0
   165d4:	beq	16630 <strspn@plt+0x5740>
   165d8:	bl	10e24 <__errno_location@plt>
   165dc:	mov	r5, r0
   165e0:	mov	r0, r4
   165e4:	ldr	r4, [r5]
   165e8:	bl	10e6c <fclose@plt>
   165ec:	cmp	r4, #0
   165f0:	mvnne	r0, #0
   165f4:	strne	r4, [r5]
   165f8:	add	sp, sp, #12
   165fc:	pop	{r4, r5, pc}
   16600:	mov	r0, r4
   16604:	bl	10e54 <fileno@plt>
   16608:	mov	r3, #1
   1660c:	str	r3, [sp]
   16610:	mov	r2, #0
   16614:	mov	r3, #0
   16618:	bl	10d7c <lseek64@plt>
   1661c:	mvn	r3, #0
   16620:	mvn	r2, #0
   16624:	cmp	r1, r3
   16628:	cmpeq	r0, r2
   1662c:	bne	165c8 <strspn@plt+0x56d8>
   16630:	mov	r0, r4
   16634:	add	sp, sp, #12
   16638:	pop	{r4, r5, lr}
   1663c:	b	10e6c <fclose@plt>
   16640:	push	{r4, lr}
   16644:	subs	r4, r0, #0
   16648:	sub	sp, sp, #8
   1664c:	beq	16668 <strspn@plt+0x5778>
   16650:	bl	10dd0 <__freading@plt>
   16654:	cmp	r0, #0
   16658:	beq	16668 <strspn@plt+0x5778>
   1665c:	ldr	r3, [r4]
   16660:	tst	r3, #256	; 0x100
   16664:	bne	16678 <strspn@plt+0x5788>
   16668:	mov	r0, r4
   1666c:	add	sp, sp, #8
   16670:	pop	{r4, lr}
   16674:	b	10cc8 <fflush@plt>
   16678:	mov	r3, #1
   1667c:	str	r3, [sp]
   16680:	mov	r2, #0
   16684:	mov	r3, #0
   16688:	mov	r0, r4
   1668c:	bl	166a0 <strspn@plt+0x57b0>
   16690:	mov	r0, r4
   16694:	add	sp, sp, #8
   16698:	pop	{r4, lr}
   1669c:	b	10cc8 <fflush@plt>
   166a0:	push	{r4, r5, r6, r7, r8, lr}
   166a4:	sub	sp, sp, #8
   166a8:	ldmib	r0, {ip, lr}
   166ac:	mov	r4, r0
   166b0:	ldr	r5, [sp, #32]
   166b4:	cmp	lr, ip
   166b8:	beq	166d0 <strspn@plt+0x57e0>
   166bc:	str	r5, [sp, #32]
   166c0:	mov	r0, r4
   166c4:	add	sp, sp, #8
   166c8:	pop	{r4, r5, r6, r7, r8, lr}
   166cc:	b	10e78 <fseeko64@plt>
   166d0:	ldr	lr, [r0, #20]
   166d4:	ldr	ip, [r0, #16]
   166d8:	cmp	lr, ip
   166dc:	bne	166bc <strspn@plt+0x57cc>
   166e0:	ldr	r8, [r0, #36]	; 0x24
   166e4:	cmp	r8, #0
   166e8:	bne	166bc <strspn@plt+0x57cc>
   166ec:	mov	r6, r2
   166f0:	mov	r7, r3
   166f4:	bl	10e54 <fileno@plt>
   166f8:	mov	r2, r6
   166fc:	mov	r3, r7
   16700:	str	r5, [sp]
   16704:	bl	10d7c <lseek64@plt>
   16708:	mvn	r3, #0
   1670c:	mvn	r2, #0
   16710:	cmp	r1, r3
   16714:	cmpeq	r0, r2
   16718:	beq	16738 <strspn@plt+0x5848>
   1671c:	ldr	r3, [r4]
   16720:	strd	r0, [r4, #80]	; 0x50
   16724:	mov	r0, r8
   16728:	bic	r3, r3, #16
   1672c:	str	r3, [r4]
   16730:	add	sp, sp, #8
   16734:	pop	{r4, r5, r6, r7, r8, pc}
   16738:	mvn	r0, #0
   1673c:	b	16730 <strspn@plt+0x5840>
   16740:	subs	r2, r1, #1
   16744:	bxeq	lr
   16748:	bcc	16920 <strspn@plt+0x5a30>
   1674c:	cmp	r0, r1
   16750:	bls	16904 <strspn@plt+0x5a14>
   16754:	tst	r1, r2
   16758:	beq	16910 <strspn@plt+0x5a20>
   1675c:	clz	r3, r0
   16760:	clz	r2, r1
   16764:	sub	r3, r2, r3
   16768:	rsbs	r3, r3, #31
   1676c:	addne	r3, r3, r3, lsl #1
   16770:	mov	r2, #0
   16774:	addne	pc, pc, r3, lsl #2
   16778:	nop			; (mov r0, r0)
   1677c:	cmp	r0, r1, lsl #31
   16780:	adc	r2, r2, r2
   16784:	subcs	r0, r0, r1, lsl #31
   16788:	cmp	r0, r1, lsl #30
   1678c:	adc	r2, r2, r2
   16790:	subcs	r0, r0, r1, lsl #30
   16794:	cmp	r0, r1, lsl #29
   16798:	adc	r2, r2, r2
   1679c:	subcs	r0, r0, r1, lsl #29
   167a0:	cmp	r0, r1, lsl #28
   167a4:	adc	r2, r2, r2
   167a8:	subcs	r0, r0, r1, lsl #28
   167ac:	cmp	r0, r1, lsl #27
   167b0:	adc	r2, r2, r2
   167b4:	subcs	r0, r0, r1, lsl #27
   167b8:	cmp	r0, r1, lsl #26
   167bc:	adc	r2, r2, r2
   167c0:	subcs	r0, r0, r1, lsl #26
   167c4:	cmp	r0, r1, lsl #25
   167c8:	adc	r2, r2, r2
   167cc:	subcs	r0, r0, r1, lsl #25
   167d0:	cmp	r0, r1, lsl #24
   167d4:	adc	r2, r2, r2
   167d8:	subcs	r0, r0, r1, lsl #24
   167dc:	cmp	r0, r1, lsl #23
   167e0:	adc	r2, r2, r2
   167e4:	subcs	r0, r0, r1, lsl #23
   167e8:	cmp	r0, r1, lsl #22
   167ec:	adc	r2, r2, r2
   167f0:	subcs	r0, r0, r1, lsl #22
   167f4:	cmp	r0, r1, lsl #21
   167f8:	adc	r2, r2, r2
   167fc:	subcs	r0, r0, r1, lsl #21
   16800:	cmp	r0, r1, lsl #20
   16804:	adc	r2, r2, r2
   16808:	subcs	r0, r0, r1, lsl #20
   1680c:	cmp	r0, r1, lsl #19
   16810:	adc	r2, r2, r2
   16814:	subcs	r0, r0, r1, lsl #19
   16818:	cmp	r0, r1, lsl #18
   1681c:	adc	r2, r2, r2
   16820:	subcs	r0, r0, r1, lsl #18
   16824:	cmp	r0, r1, lsl #17
   16828:	adc	r2, r2, r2
   1682c:	subcs	r0, r0, r1, lsl #17
   16830:	cmp	r0, r1, lsl #16
   16834:	adc	r2, r2, r2
   16838:	subcs	r0, r0, r1, lsl #16
   1683c:	cmp	r0, r1, lsl #15
   16840:	adc	r2, r2, r2
   16844:	subcs	r0, r0, r1, lsl #15
   16848:	cmp	r0, r1, lsl #14
   1684c:	adc	r2, r2, r2
   16850:	subcs	r0, r0, r1, lsl #14
   16854:	cmp	r0, r1, lsl #13
   16858:	adc	r2, r2, r2
   1685c:	subcs	r0, r0, r1, lsl #13
   16860:	cmp	r0, r1, lsl #12
   16864:	adc	r2, r2, r2
   16868:	subcs	r0, r0, r1, lsl #12
   1686c:	cmp	r0, r1, lsl #11
   16870:	adc	r2, r2, r2
   16874:	subcs	r0, r0, r1, lsl #11
   16878:	cmp	r0, r1, lsl #10
   1687c:	adc	r2, r2, r2
   16880:	subcs	r0, r0, r1, lsl #10
   16884:	cmp	r0, r1, lsl #9
   16888:	adc	r2, r2, r2
   1688c:	subcs	r0, r0, r1, lsl #9
   16890:	cmp	r0, r1, lsl #8
   16894:	adc	r2, r2, r2
   16898:	subcs	r0, r0, r1, lsl #8
   1689c:	cmp	r0, r1, lsl #7
   168a0:	adc	r2, r2, r2
   168a4:	subcs	r0, r0, r1, lsl #7
   168a8:	cmp	r0, r1, lsl #6
   168ac:	adc	r2, r2, r2
   168b0:	subcs	r0, r0, r1, lsl #6
   168b4:	cmp	r0, r1, lsl #5
   168b8:	adc	r2, r2, r2
   168bc:	subcs	r0, r0, r1, lsl #5
   168c0:	cmp	r0, r1, lsl #4
   168c4:	adc	r2, r2, r2
   168c8:	subcs	r0, r0, r1, lsl #4
   168cc:	cmp	r0, r1, lsl #3
   168d0:	adc	r2, r2, r2
   168d4:	subcs	r0, r0, r1, lsl #3
   168d8:	cmp	r0, r1, lsl #2
   168dc:	adc	r2, r2, r2
   168e0:	subcs	r0, r0, r1, lsl #2
   168e4:	cmp	r0, r1, lsl #1
   168e8:	adc	r2, r2, r2
   168ec:	subcs	r0, r0, r1, lsl #1
   168f0:	cmp	r0, r1
   168f4:	adc	r2, r2, r2
   168f8:	subcs	r0, r0, r1
   168fc:	mov	r0, r2
   16900:	bx	lr
   16904:	moveq	r0, #1
   16908:	movne	r0, #0
   1690c:	bx	lr
   16910:	clz	r2, r1
   16914:	rsb	r2, r2, #31
   16918:	lsr	r0, r0, r2
   1691c:	bx	lr
   16920:	cmp	r0, #0
   16924:	mvnne	r0, #0
   16928:	b	16988 <strspn@plt+0x5a98>
   1692c:	cmp	r1, #0
   16930:	beq	16920 <strspn@plt+0x5a30>
   16934:	push	{r0, r1, lr}
   16938:	bl	16740 <strspn@plt+0x5850>
   1693c:	pop	{r1, r2, lr}
   16940:	mul	r3, r2, r0
   16944:	sub	r1, r1, r3
   16948:	bx	lr
   1694c:	cmp	r3, #0
   16950:	cmpeq	r2, #0
   16954:	bne	1696c <strspn@plt+0x5a7c>
   16958:	cmp	r1, #0
   1695c:	cmpeq	r0, #0
   16960:	mvnne	r1, #0
   16964:	mvnne	r0, #0
   16968:	b	16988 <strspn@plt+0x5a98>
   1696c:	sub	sp, sp, #8
   16970:	push	{sp, lr}
   16974:	bl	16998 <strspn@plt+0x5aa8>
   16978:	ldr	lr, [sp, #4]
   1697c:	add	sp, sp, #8
   16980:	pop	{r2, r3}
   16984:	bx	lr
   16988:	push	{r1, lr}
   1698c:	mov	r0, #8
   16990:	bl	10cb0 <raise@plt>
   16994:	pop	{r1, pc}
   16998:	cmp	r1, r3
   1699c:	cmpeq	r0, r2
   169a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169a4:	mov	r4, r0
   169a8:	movcc	r0, #0
   169ac:	mov	r5, r1
   169b0:	ldr	lr, [sp, #36]	; 0x24
   169b4:	movcc	r1, r0
   169b8:	bcc	16ab4 <strspn@plt+0x5bc4>
   169bc:	cmp	r3, #0
   169c0:	clzeq	ip, r2
   169c4:	clzne	ip, r3
   169c8:	addeq	ip, ip, #32
   169cc:	cmp	r5, #0
   169d0:	clzeq	r1, r4
   169d4:	addeq	r1, r1, #32
   169d8:	clzne	r1, r5
   169dc:	sub	ip, ip, r1
   169e0:	sub	sl, ip, #32
   169e4:	lsl	r9, r3, ip
   169e8:	rsb	fp, ip, #32
   169ec:	orr	r9, r9, r2, lsl sl
   169f0:	orr	r9, r9, r2, lsr fp
   169f4:	lsl	r8, r2, ip
   169f8:	cmp	r5, r9
   169fc:	cmpeq	r4, r8
   16a00:	movcc	r0, #0
   16a04:	movcc	r1, r0
   16a08:	bcc	16a24 <strspn@plt+0x5b34>
   16a0c:	mov	r0, #1
   16a10:	subs	r4, r4, r8
   16a14:	lsl	r1, r0, sl
   16a18:	orr	r1, r1, r0, lsr fp
   16a1c:	lsl	r0, r0, ip
   16a20:	sbc	r5, r5, r9
   16a24:	cmp	ip, #0
   16a28:	beq	16ab4 <strspn@plt+0x5bc4>
   16a2c:	lsr	r6, r8, #1
   16a30:	orr	r6, r6, r9, lsl #31
   16a34:	lsr	r7, r9, #1
   16a38:	mov	r2, ip
   16a3c:	b	16a60 <strspn@plt+0x5b70>
   16a40:	subs	r3, r4, r6
   16a44:	sbc	r8, r5, r7
   16a48:	adds	r3, r3, r3
   16a4c:	adc	r8, r8, r8
   16a50:	adds	r4, r3, #1
   16a54:	adc	r5, r8, #0
   16a58:	subs	r2, r2, #1
   16a5c:	beq	16a7c <strspn@plt+0x5b8c>
   16a60:	cmp	r5, r7
   16a64:	cmpeq	r4, r6
   16a68:	bcs	16a40 <strspn@plt+0x5b50>
   16a6c:	adds	r4, r4, r4
   16a70:	adc	r5, r5, r5
   16a74:	subs	r2, r2, #1
   16a78:	bne	16a60 <strspn@plt+0x5b70>
   16a7c:	lsr	r3, r4, ip
   16a80:	orr	r3, r3, r5, lsl fp
   16a84:	lsr	r2, r5, ip
   16a88:	orr	r3, r3, r5, lsr sl
   16a8c:	adds	r0, r0, r4
   16a90:	mov	r4, r3
   16a94:	lsl	r3, r2, ip
   16a98:	orr	r3, r3, r4, lsl sl
   16a9c:	lsl	ip, r4, ip
   16aa0:	orr	r3, r3, r4, lsr fp
   16aa4:	adc	r1, r1, r5
   16aa8:	subs	r0, r0, ip
   16aac:	mov	r5, r2
   16ab0:	sbc	r1, r1, r3
   16ab4:	cmp	lr, #0
   16ab8:	strdne	r4, [lr]
   16abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ac4:	mov	r7, r0
   16ac8:	ldr	r6, [pc, #72]	; 16b18 <strspn@plt+0x5c28>
   16acc:	ldr	r5, [pc, #72]	; 16b1c <strspn@plt+0x5c2c>
   16ad0:	add	r6, pc, r6
   16ad4:	add	r5, pc, r5
   16ad8:	sub	r6, r6, r5
   16adc:	mov	r8, r1
   16ae0:	mov	r9, r2
   16ae4:	bl	10c78 <calloc@plt-0x20>
   16ae8:	asrs	r6, r6, #2
   16aec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16af0:	mov	r4, #0
   16af4:	add	r4, r4, #1
   16af8:	ldr	r3, [r5], #4
   16afc:	mov	r2, r9
   16b00:	mov	r1, r8
   16b04:	mov	r0, r7
   16b08:	blx	r3
   16b0c:	cmp	r6, r4
   16b10:	bne	16af4 <strspn@plt+0x5c04>
   16b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16b18:	andeq	r1, r1, ip, lsr #8
   16b1c:	andeq	r1, r1, r4, lsr #8
   16b20:	bx	lr
   16b24:	ldr	r3, [pc, #12]	; 16b38 <strspn@plt+0x5c48>
   16b28:	mov	r1, #0
   16b2c:	add	r3, pc, r3
   16b30:	ldr	r2, [r3]
   16b34:	b	10e30 <__cxa_atexit@plt>
   16b38:	andeq	r1, r1, ip, lsr #11

Disassembly of section .fini:

00016b3c <.fini>:
   16b3c:	push	{r3, lr}
   16b40:	pop	{r3, pc}
