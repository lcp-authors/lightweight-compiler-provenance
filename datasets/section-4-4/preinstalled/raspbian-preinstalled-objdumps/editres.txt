
raspbian-preinstalled/editres:     file format elf32-littlearm


Disassembly of section .init:

00011f30 <_init@@Base>:
   11f30:	push	{r3, lr}
   11f34:	bl	126a4 <__snprintf_chk@plt+0x1d8>
   11f38:	pop	{r3, pc}

Disassembly of section .plt:

00011f3c <XmuClientWindow@plt-0x14>:
   11f3c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f40:	ldr	lr, [pc, #4]	; 11f4c <_init@@Base+0x1c>
   11f44:	add	lr, pc, lr
   11f48:	ldr	pc, [lr, #8]!
   11f4c:	strheq	ip, [r1], -r4

00011f50 <XmuClientWindow@plt>:
   11f50:	add	ip, pc, #0, 12
   11f54:	add	ip, ip, #28, 20	; 0x1c000
   11f58:	ldr	pc, [ip, #180]!	; 0xb4

00011f5c <XtDisplayOfObject@plt>:
   11f5c:	add	ip, pc, #0, 12
   11f60:	add	ip, ip, #28, 20	; 0x1c000
   11f64:	ldr	pc, [ip, #172]!	; 0xac

00011f68 <XSendEvent@plt>:
   11f68:	add	ip, pc, #0, 12
   11f6c:	add	ip, ip, #28, 20	; 0x1c000
   11f70:	ldr	pc, [ip, #164]!	; 0xa4

00011f74 <XtGetApplicationResources@plt>:
   11f74:	add	ip, pc, #0, 12
   11f78:	add	ip, ip, #28, 20	; 0x1c000
   11f7c:	ldr	pc, [ip, #156]!	; 0x9c

00011f80 <XmuPrintDefaultErrorMessage@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #28, 20	; 0x1c000
   11f88:	ldr	pc, [ip, #148]!	; 0x94

00011f8c <_XEditResGet32@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #28, 20	; 0x1c000
   11f94:	ldr	pc, [ip, #140]!	; 0x8c

00011f98 <XtTranslateCoords@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #28, 20	; 0x1c000
   11fa0:	ldr	pc, [ip, #132]!	; 0x84

00011fa4 <XBell@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #28, 20	; 0x1c000
   11fac:	ldr	pc, [ip, #124]!	; 0x7c

00011fb0 <strcmp@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #28, 20	; 0x1c000
   11fb8:	ldr	pc, [ip, #116]!	; 0x74

00011fbc <XtCreateWidget@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #28, 20	; 0x1c000
   11fc4:	ldr	pc, [ip, #108]!	; 0x6c

00011fc8 <_XEditResGetSigned16@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #28, 20	; 0x1c000
   11fd0:	ldr	pc, [ip, #100]!	; 0x64

00011fd4 <fopen@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #28, 20	; 0x1c000
   11fdc:	ldr	pc, [ip, #92]!	; 0x5c

00011fe0 <XtVaCreatePopupShell@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #28, 20	; 0x1c000
   11fe8:	ldr	pc, [ip, #84]!	; 0x54

00011fec <XtDestroyApplicationContext@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #28, 20	; 0x1c000
   11ff4:	ldr	pc, [ip, #76]!	; 0x4c

00011ff8 <XAllowEvents@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #28, 20	; 0x1c000
   12000:	ldr	pc, [ip, #68]!	; 0x44

00012004 <_XEditResGetWidgetInfo@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #28, 20	; 0x1c000
   1200c:	ldr	pc, [ip, #60]!	; 0x3c

00012010 <XCreateFontCursor@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #28, 20	; 0x1c000
   12018:	ldr	pc, [ip, #52]!	; 0x34

0001201c <XrmGetResource@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #28, 20	; 0x1c000
   12024:	ldr	pc, [ip, #44]!	; 0x2c

00012028 <memmove@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #28, 20	; 0x1c000
   12030:	ldr	pc, [ip, #36]!	; 0x24

00012034 <XtCreatePopupShell@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #28, 20	; 0x1c000
   1203c:	ldr	pc, [ip, #28]!

00012040 <XtAppInitialize@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #28, 20	; 0x1c000
   12048:	ldr	pc, [ip, #20]!

0001204c <XtCreateManagedWidget@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #28, 20	; 0x1c000
   12054:	ldr	pc, [ip, #12]!

00012058 <memcpy@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #28, 20	; 0x1c000
   12060:	ldr	pc, [ip, #4]!

00012064 <XtMalloc@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #110592	; 0x1b000
   1206c:	ldr	pc, [ip, #4092]!	; 0xffc

00012070 <_XEditResPut32@plt>:
   12070:	add	ip, pc, #0, 12
   12074:	add	ip, ip, #110592	; 0x1b000
   12078:	ldr	pc, [ip, #4084]!	; 0xff4

0001207c <XtAppAddTimeOut@plt>:
   1207c:	add	ip, pc, #0, 12
   12080:	add	ip, ip, #110592	; 0x1b000
   12084:	ldr	pc, [ip, #4076]!	; 0xfec

00012088 <XtSetValues@plt>:
   12088:	add	ip, pc, #0, 12
   1208c:	add	ip, ip, #110592	; 0x1b000
   12090:	ldr	pc, [ip, #4068]!	; 0xfe4

00012094 <XDeleteContext@plt>:
   12094:	add	ip, pc, #0, 12
   12098:	add	ip, ip, #110592	; 0x1b000
   1209c:	ldr	pc, [ip, #4060]!	; 0xfdc

000120a0 <XSaveContext@plt>:
   120a0:	add	ip, pc, #0, 12
   120a4:	add	ip, ip, #110592	; 0x1b000
   120a8:	ldr	pc, [ip, #4052]!	; 0xfd4

000120ac <XtGetValues@plt>:
   120ac:	add	ip, pc, #0, 12
   120b0:	add	ip, ip, #110592	; 0x1b000
   120b4:	ldr	pc, [ip, #4044]!	; 0xfcc

000120b8 <stpcpy@plt>:
   120b8:	add	ip, pc, #0, 12
   120bc:	add	ip, ip, #110592	; 0x1b000
   120c0:	ldr	pc, [ip, #4036]!	; 0xfc4

000120c4 <XtWindow@plt>:
   120c4:	add	ip, pc, #0, 12
   120c8:	add	ip, ip, #110592	; 0x1b000
   120cc:	ldr	pc, [ip, #4028]!	; 0xfbc

000120d0 <_XEditResPut8@plt>:
   120d0:	add	ip, pc, #0, 12
   120d4:	add	ip, ip, #110592	; 0x1b000
   120d8:	ldr	pc, [ip, #4020]!	; 0xfb4

000120dc <XtName@plt>:
   120dc:	add	ip, pc, #0, 12
   120e0:	add	ip, ip, #110592	; 0x1b000
   120e4:	ldr	pc, [ip, #4012]!	; 0xfac

000120e8 <__stack_chk_fail@plt>:
   120e8:	add	ip, pc, #0, 12
   120ec:	add	ip, ip, #110592	; 0x1b000
   120f0:	ldr	pc, [ip, #4004]!	; 0xfa4

000120f4 <XtScreen@plt>:
   120f4:	add	ip, pc, #0, 12
   120f8:	add	ip, ip, #110592	; 0x1b000
   120fc:	ldr	pc, [ip, #3996]!	; 0xf9c

00012100 <XawTreeForceLayout@plt>:
   12100:	add	ip, pc, #0, 12
   12104:	add	ip, ip, #110592	; 0x1b000
   12108:	ldr	pc, [ip, #3988]!	; 0xf94

0001210c <XFree@plt>:
   1210c:	add	ip, pc, #0, 12
   12110:	add	ip, ip, #110592	; 0x1b000
   12114:	ldr	pc, [ip, #3980]!	; 0xf8c

00012118 <XtOwnSelection@plt>:
   12118:	add	ip, pc, #0, 12
   1211c:	add	ip, ip, #110592	; 0x1b000
   12120:	ldr	pc, [ip, #3972]!	; 0xf84

00012124 <_XEditResGet16@plt>:
   12124:	add	ip, pc, #0, 12
   12128:	add	ip, ip, #110592	; 0x1b000
   1212c:	ldr	pc, [ip, #3964]!	; 0xf7c

00012130 <XtIsSensitive@plt>:
   12130:	add	ip, pc, #0, 12
   12134:	add	ip, ip, #110592	; 0x1b000
   12138:	ldr	pc, [ip, #3956]!	; 0xf74

0001213c <XtWidgetToApplicationContext@plt>:
   1213c:	add	ip, pc, #0, 12
   12140:	add	ip, ip, #110592	; 0x1b000
   12144:	ldr	pc, [ip, #3948]!	; 0xf6c

00012148 <XGrabPointer@plt>:
   12148:	add	ip, pc, #0, 12
   1214c:	add	ip, ip, #110592	; 0x1b000
   12150:	ldr	pc, [ip, #3940]!	; 0xf64

00012154 <XtIsSubclass@plt>:
   12154:	add	ip, pc, #0, 12
   12158:	add	ip, ip, #110592	; 0x1b000
   1215c:	ldr	pc, [ip, #3932]!	; 0xf5c

00012160 <XawToggleGetCurrent@plt>:
   12160:	add	ip, pc, #0, 12
   12164:	add	ip, ip, #110592	; 0x1b000
   12168:	ldr	pc, [ip, #3924]!	; 0xf54

0001216c <__stpcpy_chk@plt>:
   1216c:	add	ip, pc, #0, 12
   12170:	add	ip, ip, #110592	; 0x1b000
   12174:	ldr	pc, [ip, #3916]!	; 0xf4c

00012178 <XtAppNextEvent@plt>:
   12178:	add	ip, pc, #0, 12
   1217c:	add	ip, ip, #110592	; 0x1b000
   12180:	ldr	pc, [ip, #3908]!	; 0xf44

00012184 <strcpy@plt>:
   12184:	add	ip, pc, #0, 12
   12188:	add	ip, ip, #110592	; 0x1b000
   1218c:	ldr	pc, [ip, #3900]!	; 0xf3c

00012190 <__strcpy_chk@plt>:
   12190:	add	ip, pc, #0, 12
   12194:	add	ip, ip, #110592	; 0x1b000
   12198:	ldr	pc, [ip, #3892]!	; 0xf34

0001219c <XtRealloc@plt>:
   1219c:	add	ip, pc, #0, 12
   121a0:	add	ip, ip, #110592	; 0x1b000
   121a4:	ldr	pc, [ip, #3884]!	; 0xf2c

000121a8 <_XEditResGetString8@plt>:
   121a8:	add	ip, pc, #0, 12
   121ac:	add	ip, ip, #110592	; 0x1b000
   121b0:	ldr	pc, [ip, #3876]!	; 0xf24

000121b4 <XawDialogGetValueString@plt>:
   121b4:	add	ip, pc, #0, 12
   121b8:	add	ip, ip, #110592	; 0x1b000
   121bc:	ldr	pc, [ip, #3868]!	; 0xf1c

000121c0 <XFindContext@plt>:
   121c0:	add	ip, pc, #0, 12
   121c4:	add	ip, ip, #110592	; 0x1b000
   121c8:	ldr	pc, [ip, #3860]!	; 0xf14

000121cc <puts@plt>:
   121cc:	add	ip, pc, #0, 12
   121d0:	add	ip, ip, #110592	; 0x1b000
   121d4:	ldr	pc, [ip, #3852]!	; 0xf0c

000121d8 <XtRemoveTimeOut@plt>:
   121d8:	add	ip, pc, #0, 12
   121dc:	add	ip, ip, #110592	; 0x1b000
   121e0:	ldr	pc, [ip, #3844]!	; 0xf04

000121e4 <XtSetSensitive@plt>:
   121e4:	add	ip, pc, #0, 12
   121e8:	add	ip, ip, #110592	; 0x1b000
   121ec:	ldr	pc, [ip, #3836]!	; 0xefc

000121f0 <__libc_start_main@plt>:
   121f0:	add	ip, pc, #0, 12
   121f4:	add	ip, ip, #110592	; 0x1b000
   121f8:	ldr	pc, [ip, #3828]!	; 0xef4

000121fc <XtAsprintf@plt>:
   121fc:	add	ip, pc, #0, 12
   12200:	add	ip, ip, #110592	; 0x1b000
   12204:	ldr	pc, [ip, #3820]!	; 0xeec

00012208 <XtRealizeWidget@plt>:
   12208:	add	ip, pc, #0, 12
   1220c:	add	ip, ip, #110592	; 0x1b000
   12210:	ldr	pc, [ip, #3812]!	; 0xee4

00012214 <XtPopdown@plt>:
   12214:	add	ip, pc, #0, 12
   12218:	add	ip, ip, #110592	; 0x1b000
   1221c:	ldr	pc, [ip, #3804]!	; 0xedc

00012220 <__gmon_start__@plt>:
   12220:	add	ip, pc, #0, 12
   12224:	add	ip, ip, #110592	; 0x1b000
   12228:	ldr	pc, [ip, #3796]!	; 0xed4

0001222c <XawDialogAddButton@plt>:
   1222c:	add	ip, pc, #0, 12
   12230:	add	ip, ip, #110592	; 0x1b000
   12234:	ldr	pc, [ip, #3788]!	; 0xecc

00012238 <XtPopup@plt>:
   12238:	add	ip, pc, #0, 12
   1223c:	add	ip, ip, #110592	; 0x1b000
   12240:	ldr	pc, [ip, #3780]!	; 0xec4

00012244 <exit@plt>:
   12244:	add	ip, pc, #0, 12
   12248:	add	ip, ip, #110592	; 0x1b000
   1224c:	ldr	pc, [ip, #3772]!	; 0xebc

00012250 <XSetWMProtocols@plt>:
   12250:	add	ip, pc, #0, 12
   12254:	add	ip, ip, #110592	; 0x1b000
   12258:	ldr	pc, [ip, #3764]!	; 0xeb4

0001225c <XQueryPointer@plt>:
   1225c:	add	ip, pc, #0, 12
   12260:	add	ip, ip, #110592	; 0x1b000
   12264:	ldr	pc, [ip, #3756]!	; 0xeac

00012268 <XtOverrideTranslations@plt>:
   12268:	add	ip, pc, #0, 12
   1226c:	add	ip, ip, #110592	; 0x1b000
   12270:	ldr	pc, [ip, #3748]!	; 0xea4

00012274 <XtIsRealized@plt>:
   12274:	add	ip, pc, #0, 12
   12278:	add	ip, ip, #110592	; 0x1b000
   1227c:	ldr	pc, [ip, #3740]!	; 0xe9c

00012280 <strlen@plt>:
   12280:	add	ip, pc, #0, 12
   12284:	add	ip, ip, #110592	; 0x1b000
   12288:	ldr	pc, [ip, #3732]!	; 0xe94

0001228c <XUngrabPointer@plt>:
   1228c:	add	ip, pc, #0, 12
   12290:	add	ip, ip, #110592	; 0x1b000
   12294:	ldr	pc, [ip, #3724]!	; 0xe8c

00012298 <strchr@plt>:
   12298:	add	ip, pc, #0, 12
   1229c:	add	ip, ip, #110592	; 0x1b000
   122a0:	ldr	pc, [ip, #3716]!	; 0xe84

000122a4 <XmuCopyISOLatin1Lowered@plt>:
   122a4:	add	ip, pc, #0, 12
   122a8:	add	ip, ip, #110592	; 0x1b000
   122ac:	ldr	pc, [ip, #3708]!	; 0xe7c

000122b0 <XSetErrorHandler@plt>:
   122b0:	add	ip, pc, #0, 12
   122b4:	add	ip, ip, #110592	; 0x1b000
   122b8:	ldr	pc, [ip, #3700]!	; 0xe74

000122bc <XtDisownSelection@plt>:
   122bc:	add	ip, pc, #0, 12
   122c0:	add	ip, ip, #110592	; 0x1b000
   122c4:	ldr	pc, [ip, #3692]!	; 0xe6c

000122c8 <XtAppAddActions@plt>:
   122c8:	add	ip, pc, #0, 12
   122cc:	add	ip, ip, #110592	; 0x1b000
   122d0:	ldr	pc, [ip, #3684]!	; 0xe64

000122d4 <XMapRaised@plt>:
   122d4:	add	ip, pc, #0, 12
   122d8:	add	ip, ip, #110592	; 0x1b000
   122dc:	ldr	pc, [ip, #3676]!	; 0xe5c

000122e0 <XInternAtom@plt>:
   122e0:	add	ip, pc, #0, 12
   122e4:	add	ip, ip, #110592	; 0x1b000
   122e8:	ldr	pc, [ip, #3668]!	; 0xe54

000122ec <__strcat_chk@plt>:
   122ec:	add	ip, pc, #0, 12
   122f0:	add	ip, ip, #110592	; 0x1b000
   122f4:	ldr	pc, [ip, #3660]!	; 0xe4c

000122f8 <_XEditResPutString8@plt>:
   122f8:	add	ip, pc, #0, 12
   122fc:	add	ip, ip, #110592	; 0x1b000
   12300:	ldr	pc, [ip, #3652]!	; 0xe44

00012304 <snprintf@plt>:
   12304:	add	ip, pc, #0, 12
   12308:	add	ip, ip, #110592	; 0x1b000
   1230c:	ldr	pc, [ip, #3644]!	; 0xe3c

00012310 <memset@plt>:
   12310:	add	ip, pc, #0, 12
   12314:	add	ip, ip, #110592	; 0x1b000
   12318:	ldr	pc, [ip, #3636]!	; 0xe34

0001231c <XtAppMainLoop@plt>:
   1231c:	add	ip, pc, #0, 12
   12320:	add	ip, ip, #110592	; 0x1b000
   12324:	ldr	pc, [ip, #3628]!	; 0xe2c

00012328 <XtFree@plt>:
   12328:	add	ip, pc, #0, 12
   1232c:	add	ip, ip, #110592	; 0x1b000
   12330:	ldr	pc, [ip, #3620]!	; 0xe24

00012334 <_XtCheckSubclassFlag@plt>:
   12334:	add	ip, pc, #0, 12
   12338:	add	ip, ip, #110592	; 0x1b000
   1233c:	ldr	pc, [ip, #3612]!	; 0xe1c

00012340 <XtDisplay@plt>:
   12340:	add	ip, pc, #0, 12
   12344:	add	ip, ip, #110592	; 0x1b000
   12348:	ldr	pc, [ip, #3604]!	; 0xe14

0001234c <XSync@plt>:
   1234c:	add	ip, pc, #0, 12
   12350:	add	ip, ip, #110592	; 0x1b000
   12354:	ldr	pc, [ip, #3596]!	; 0xe0c

00012358 <__printf_chk@plt>:
   12358:	add	ip, pc, #0, 12
   1235c:	add	ip, ip, #110592	; 0x1b000
   12360:	ldr	pc, [ip, #3588]!	; 0xe04

00012364 <XtParseTranslationTable@plt>:
   12364:	add	ip, pc, #0, 12
   12368:	add	ip, ip, #110592	; 0x1b000
   1236c:	ldr	pc, [ip, #3580]!	; 0xdfc

00012370 <__fprintf_chk@plt>:
   12370:	add	ip, pc, #0, 12
   12374:	add	ip, ip, #110592	; 0x1b000
   12378:	ldr	pc, [ip, #3572]!	; 0xdf4

0001237c <XtScreenOfObject@plt>:
   1237c:	add	ip, pc, #0, 12
   12380:	add	ip, ip, #110592	; 0x1b000
   12384:	ldr	pc, [ip, #3564]!	; 0xdec

00012388 <fclose@plt>:
   12388:	add	ip, pc, #0, 12
   1238c:	add	ip, ip, #110592	; 0x1b000
   12390:	ldr	pc, [ip, #3556]!	; 0xde4

00012394 <XtSetKeyboardFocus@plt>:
   12394:	add	ip, pc, #0, 12
   12398:	add	ip, ip, #110592	; 0x1b000
   1239c:	ldr	pc, [ip, #3548]!	; 0xddc

000123a0 <XtGetSelectionValue@plt>:
   123a0:	add	ip, pc, #0, 12
   123a4:	add	ip, ip, #110592	; 0x1b000
   123a8:	ldr	pc, [ip, #3540]!	; 0xdd4

000123ac <XUnmapWindow@plt>:
   123ac:	add	ip, pc, #0, 12
   123b0:	add	ip, ip, #110592	; 0x1b000
   123b4:	ldr	pc, [ip, #3532]!	; 0xdcc

000123b8 <XtLastTimestampProcessed@plt>:
   123b8:	add	ip, pc, #0, 12
   123bc:	add	ip, ip, #110592	; 0x1b000
   123c0:	ldr	pc, [ip, #3524]!	; 0xdc4

000123c4 <XtCalloc@plt>:
   123c4:	add	ip, pc, #0, 12
   123c8:	add	ip, ip, #110592	; 0x1b000
   123cc:	ldr	pc, [ip, #3516]!	; 0xdbc

000123d0 <XFlush@plt>:
   123d0:	add	ip, pc, #0, 12
   123d4:	add	ip, ip, #110592	; 0x1b000
   123d8:	ldr	pc, [ip, #3508]!	; 0xdb4

000123dc <XGetWindowAttributes@plt>:
   123dc:	add	ip, pc, #0, 12
   123e0:	add	ip, ip, #110592	; 0x1b000
   123e4:	ldr	pc, [ip, #3500]!	; 0xdac

000123e8 <XtDestroyWidget@plt>:
   123e8:	add	ip, pc, #0, 12
   123ec:	add	ip, ip, #110592	; 0x1b000
   123f0:	ldr	pc, [ip, #3492]!	; 0xda4

000123f4 <XrmDestroyDatabase@plt>:
   123f4:	add	ip, pc, #0, 12
   123f8:	add	ip, ip, #110592	; 0x1b000
   123fc:	ldr	pc, [ip, #3484]!	; 0xd9c

00012400 <fputc@plt>:
   12400:	add	ip, pc, #0, 12
   12404:	add	ip, ip, #110592	; 0x1b000
   12408:	ldr	pc, [ip, #3476]!	; 0xd94

0001240c <XrmUniqueQuark@plt>:
   1240c:	add	ip, pc, #0, 12
   12410:	add	ip, ip, #110592	; 0x1b000
   12414:	ldr	pc, [ip, #3468]!	; 0xd8c

00012418 <_XEditResResetStream@plt>:
   12418:	add	ip, pc, #0, 12
   1241c:	add	ip, ip, #110592	; 0x1b000
   12420:	ldr	pc, [ip, #3460]!	; 0xd84

00012424 <XawListShowCurrent@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #110592	; 0x1b000
   1242c:	ldr	pc, [ip, #3452]!	; 0xd7c

00012430 <XMapWindow@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #110592	; 0x1b000
   12438:	ldr	pc, [ip, #3444]!	; 0xd74

0001243c <qsort@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #110592	; 0x1b000
   12444:	ldr	pc, [ip, #3436]!	; 0xd6c

00012448 <XtParent@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #110592	; 0x1b000
   12450:	ldr	pc, [ip, #3428]!	; 0xd64

00012454 <XawListUnhighlight@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #110592	; 0x1b000
   1245c:	ldr	pc, [ip, #3420]!	; 0xd5c

00012460 <XrmStringToQuark@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #110592	; 0x1b000
   12468:	ldr	pc, [ip, #3412]!	; 0xd54

0001246c <XrmQGetResource@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #110592	; 0x1b000
   12474:	ldr	pc, [ip, #3404]!	; 0xd4c

00012478 <XtDispatchEvent@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #110592	; 0x1b000
   12480:	ldr	pc, [ip, #3396]!	; 0xd44

00012484 <XtManageChild@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #110592	; 0x1b000
   1248c:	ldr	pc, [ip, #3388]!	; 0xd3c

00012490 <XtAddCallback@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #110592	; 0x1b000
   12498:	ldr	pc, [ip, #3380]!	; 0xd34

0001249c <_XEditResPut16@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #110592	; 0x1b000
   124a4:	ldr	pc, [ip, #3372]!	; 0xd2c

000124a8 <_XEditResGet8@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #110592	; 0x1b000
   124b0:	ldr	pc, [ip, #3364]!	; 0xd24

000124b4 <XrmPutLineResource@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #110592	; 0x1b000
   124bc:	ldr	pc, [ip, #3356]!	; 0xd1c

000124c0 <abort@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #110592	; 0x1b000
   124c8:	ldr	pc, [ip, #3348]!	; 0xd14

000124cc <__snprintf_chk@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #110592	; 0x1b000
   124d4:	ldr	pc, [ip, #3340]!	; 0xd0c

Disassembly of section .text:

000124d8 <.text>:
   124d8:	ldr	r2, [pc, #340]	; 12634 <__snprintf_chk@plt+0x168>
   124dc:	push	{r7, lr}
   124e0:	sub	sp, sp, #40	; 0x28
   124e4:	ldr	r3, [pc, #332]	; 12638 <__snprintf_chk@plt+0x16c>
   124e8:	ldr	ip, [r2]
   124ec:	mov	r4, #0
   124f0:	mov	r6, r1
   124f4:	add	r1, sp, #28
   124f8:	str	r0, [sp, #28]
   124fc:	str	r3, [sp, #8]
   12500:	str	r1, [sp]
   12504:	str	r6, [sp, #4]
   12508:	str	r4, [sp, #16]
   1250c:	str	r4, [sp, #12]
   12510:	mov	r3, r4
   12514:	mov	r2, r4
   12518:	ldr	r1, [pc, #284]	; 1263c <__snprintf_chk@plt+0x170>
   1251c:	add	r0, sp, #32
   12520:	str	ip, [sp, #36]	; 0x24
   12524:	bl	12040 <XtAppInitialize@plt>
   12528:	ldr	r5, [pc, #272]	; 12640 <__snprintf_chk@plt+0x174>
   1252c:	ldr	r7, [sp, #28]
   12530:	cmp	r7, #1
   12534:	str	r0, [r5]
   12538:	beq	12568 <__snprintf_chk@plt+0x9c>
   1253c:	ldr	r0, [sp, #32]
   12540:	ldr	r4, [r6]
   12544:	bl	11fec <XtDestroyApplicationContext@plt>
   12548:	ldr	r1, [pc, #244]	; 12644 <__snprintf_chk@plt+0x178>
   1254c:	mov	r3, r4
   12550:	ldr	r2, [pc, #240]	; 12648 <__snprintf_chk@plt+0x17c>
   12554:	ldr	r0, [r1]
   12558:	mov	r1, #1
   1255c:	bl	12370 <__fprintf_chk@plt>
   12560:	mov	r0, #1
   12564:	bl	12244 <exit@plt>
   12568:	ldr	r6, [pc, #220]	; 1264c <__snprintf_chk@plt+0x180>
   1256c:	ldr	r0, [sp, #32]
   12570:	bl	12c60 <__snprintf_chk@plt+0x794>
   12574:	ldr	r2, [pc, #212]	; 12650 <__snprintf_chk@plt+0x184>
   12578:	mov	r3, #5
   1257c:	mov	r1, r6
   12580:	ldr	r0, [r5]
   12584:	str	r4, [sp, #4]
   12588:	str	r4, [sp]
   1258c:	bl	11f74 <XtGetApplicationResources@plt>
   12590:	ldr	r0, [pc, #188]	; 12654 <__snprintf_chk@plt+0x188>
   12594:	ldr	r8, [r5]
   12598:	strb	r4, [r6, #20]
   1259c:	bl	12364 <XtParseTranslationTable@plt>
   125a0:	ldr	r6, [pc, #176]	; 12658 <__snprintf_chk@plt+0x18c>
   125a4:	mov	r1, r0
   125a8:	mov	r0, r8
   125ac:	bl	12268 <XtOverrideTranslations@plt>
   125b0:	ldr	r0, [r5]
   125b4:	bl	17870 <__snprintf_chk@plt+0x53a4>
   125b8:	ldr	r8, [pc, #156]	; 1265c <__snprintf_chk@plt+0x190>
   125bc:	ldr	r3, [pc, #156]	; 12660 <__snprintf_chk@plt+0x194>
   125c0:	ldr	r0, [r8, #12]
   125c4:	ldr	r1, [r3, #52]	; 0x34
   125c8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   125cc:	ldr	r0, [r5]
   125d0:	str	r4, [r8]
   125d4:	bl	12340 <XtDisplay@plt>
   125d8:	bl	13e28 <__snprintf_chk@plt+0x195c>
   125dc:	ldr	r0, [r5]
   125e0:	bl	12208 <XtRealizeWidget@plt>
   125e4:	ldr	r0, [r5]
   125e8:	bl	12340 <XtDisplay@plt>
   125ec:	mov	r2, r4
   125f0:	ldr	r1, [pc, #108]	; 12664 <__snprintf_chk@plt+0x198>
   125f4:	bl	122e0 <XInternAtom@plt>
   125f8:	str	r0, [r6]
   125fc:	ldr	r0, [r5]
   12600:	bl	12340 <XtDisplay@plt>
   12604:	mov	r8, r0
   12608:	ldr	r0, [r5]
   1260c:	bl	120c4 <XtWindow@plt>
   12610:	mov	r3, r7
   12614:	mov	r2, r6
   12618:	mov	r1, r0
   1261c:	mov	r0, r8
   12620:	bl	12250 <XSetWMProtocols@plt>
   12624:	ldr	r0, [sp, #32]
   12628:	bl	1231c <XtAppMainLoop@plt>
   1262c:	mov	r0, r4
   12630:	bl	12244 <exit@plt>
   12634:	andeq	ip, r2, r0, lsl #31
   12638:	andeq	lr, r2, r8, lsl #15
   1263c:	andeq	fp, r1, r8, asr #20
   12640:	andeq	lr, r2, r4, lsl #16
   12644:	andeq	lr, r2, r0, asr #14
   12648:	andeq	fp, r1, r8, lsr #22
   1264c:	andeq	lr, r2, ip, ror #15
   12650:	andeq	lr, r2, ip, lsl #5
   12654:	andeq	fp, r1, r4, lsr fp
   12658:	andeq	lr, r2, r0, lsl r8
   1265c:	andeq	lr, r2, r8, lsl r8
   12660:	andeq	lr, r2, r8, lsr #16
   12664:	andeq	fp, r1, r4, asr fp
   12668:	mov	fp, #0
   1266c:	mov	lr, #0
   12670:	pop	{r1}		; (ldr r1, [sp], #4)
   12674:	mov	r2, sp
   12678:	push	{r2}		; (str r2, [sp, #-4]!)
   1267c:	push	{r0}		; (str r0, [sp, #-4]!)
   12680:	ldr	ip, [pc, #16]	; 12698 <__snprintf_chk@plt+0x1cc>
   12684:	push	{ip}		; (str ip, [sp, #-4]!)
   12688:	ldr	r0, [pc, #12]	; 1269c <__snprintf_chk@plt+0x1d0>
   1268c:	ldr	r3, [pc, #12]	; 126a0 <__snprintf_chk@plt+0x1d4>
   12690:	bl	121f0 <__libc_start_main@plt>
   12694:	bl	124c0 <abort@plt>
   12698:	muleq	r1, r8, r8
   1269c:	ldrdeq	r2, [r1], -r8
   126a0:	andeq	r9, r1, r8, lsr r8
   126a4:	ldr	r3, [pc, #20]	; 126c0 <__snprintf_chk@plt+0x1f4>
   126a8:	ldr	r2, [pc, #20]	; 126c4 <__snprintf_chk@plt+0x1f8>
   126ac:	add	r3, pc, r3
   126b0:	ldr	r2, [r3, r2]
   126b4:	cmp	r2, #0
   126b8:	bxeq	lr
   126bc:	b	12220 <__gmon_start__@plt>
   126c0:	andeq	fp, r1, ip, asr #18
   126c4:	andeq	r0, r0, r4, ror #3
   126c8:	ldr	r0, [pc, #24]	; 126e8 <__snprintf_chk@plt+0x21c>
   126cc:	ldr	r3, [pc, #24]	; 126ec <__snprintf_chk@plt+0x220>
   126d0:	cmp	r3, r0
   126d4:	bxeq	lr
   126d8:	ldr	r3, [pc, #16]	; 126f0 <__snprintf_chk@plt+0x224>
   126dc:	cmp	r3, #0
   126e0:	bxeq	lr
   126e4:	bx	r3
   126e8:	andeq	lr, r2, r0, lsr #14
   126ec:	andeq	lr, r2, r0, lsr #14
   126f0:	andeq	r0, r0, r0
   126f4:	ldr	r0, [pc, #36]	; 12720 <__snprintf_chk@plt+0x254>
   126f8:	ldr	r1, [pc, #36]	; 12724 <__snprintf_chk@plt+0x258>
   126fc:	sub	r1, r1, r0
   12700:	asr	r1, r1, #2
   12704:	add	r1, r1, r1, lsr #31
   12708:	asrs	r1, r1, #1
   1270c:	bxeq	lr
   12710:	ldr	r3, [pc, #16]	; 12728 <__snprintf_chk@plt+0x25c>
   12714:	cmp	r3, #0
   12718:	bxeq	lr
   1271c:	bx	r3
   12720:	andeq	lr, r2, r0, lsr #14
   12724:	andeq	lr, r2, r0, lsr #14
   12728:	andeq	r0, r0, r0
   1272c:	push	{r4, lr}
   12730:	ldr	r4, [pc, #24]	; 12750 <__snprintf_chk@plt+0x284>
   12734:	ldrb	r3, [r4]
   12738:	cmp	r3, #0
   1273c:	popne	{r4, pc}
   12740:	bl	126c8 <__snprintf_chk@plt+0x1fc>
   12744:	mov	r3, #1
   12748:	strb	r3, [r4]
   1274c:	pop	{r4, pc}
   12750:	andeq	lr, r2, r0, ror r7
   12754:	b	126f4 <__snprintf_chk@plt+0x228>
   12758:	ldr	r3, [pc, #8]	; 12768 <__snprintf_chk@plt+0x29c>
   1275c:	mov	r2, #1
   12760:	strb	r2, [r3]
   12764:	bx	lr
   12768:	andeq	lr, r2, r1, ror r7
   1276c:	push	{r4, r5, r6, lr}
   12770:	sub	sp, sp, #8192	; 0x2000
   12774:	ldr	r4, [pc, #232]	; 12864 <__snprintf_chk@plt+0x398>
   12778:	sub	sp, sp, #16
   1277c:	ldr	r5, [r3]
   12780:	add	r1, sp, #8192	; 0x2000
   12784:	ldr	r3, [r4]
   12788:	add	r1, r1, #12
   1278c:	cmp	r5, #1
   12790:	str	r3, [r1]
   12794:	beq	127f0 <__snprintf_chk@plt+0x324>
   12798:	ldr	r3, [pc, #200]	; 12868 <__snprintf_chk@plt+0x39c>
   1279c:	ldr	r2, [pc, #200]	; 1286c <__snprintf_chk@plt+0x3a0>
   127a0:	add	r0, sp, #12
   127a4:	ldr	r1, [r3, #8]
   127a8:	mov	r3, #8192	; 0x2000
   127ac:	stm	sp, {r1, r2}
   127b0:	mov	r1, r3
   127b4:	mov	r2, #1
   127b8:	bl	124cc <__snprintf_chk@plt>
   127bc:	ldr	r3, [pc, #172]	; 12870 <__snprintf_chk@plt+0x3a4>
   127c0:	add	r1, sp, #12
   127c4:	ldr	r0, [r3, #12]
   127c8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   127cc:	add	r3, sp, #8192	; 0x2000
   127d0:	add	r3, r3, #12
   127d4:	ldr	r2, [r3]
   127d8:	ldr	r3, [r4]
   127dc:	cmp	r2, r3
   127e0:	bne	12860 <__snprintf_chk@plt+0x394>
   127e4:	add	sp, sp, #8192	; 0x2000
   127e8:	add	sp, sp, #16
   127ec:	pop	{r4, r5, r6, pc}
   127f0:	ldr	r1, [r2]
   127f4:	mov	r6, r0
   127f8:	add	r0, sp, #12
   127fc:	bl	122a4 <XmuCopyISOLatin1Lowered@plt>
   12800:	ldr	r1, [pc, #108]	; 12874 <__snprintf_chk@plt+0x3a8>
   12804:	add	r0, sp, #12
   12808:	bl	11fb0 <strcmp@plt>
   1280c:	subs	r1, r0, #0
   12810:	beq	1282c <__snprintf_chk@plt+0x360>
   12814:	ldr	r1, [pc, #92]	; 12878 <__snprintf_chk@plt+0x3ac>
   12818:	add	r0, sp, #12
   1281c:	bl	11fb0 <strcmp@plt>
   12820:	cmp	r0, #0
   12824:	moveq	r1, r5
   12828:	bne	1283c <__snprintf_chk@plt+0x370>
   1282c:	mov	r0, r6
   12830:	mov	r2, #0
   12834:	bl	16188 <__snprintf_chk@plt+0x3cbc>
   12838:	b	127cc <__snprintf_chk@plt+0x300>
   1283c:	ldr	r2, [pc, #36]	; 12868 <__snprintf_chk@plt+0x39c>
   12840:	ldr	r1, [pc, #36]	; 1286c <__snprintf_chk@plt+0x3a0>
   12844:	mov	r3, #8192	; 0x2000
   12848:	ldr	r0, [r2, #4]
   1284c:	mov	r2, r5
   12850:	strd	r0, [sp]
   12854:	mov	r1, r3
   12858:	add	r0, sp, #12
   1285c:	b	127b8 <__snprintf_chk@plt+0x2ec>
   12860:	bl	120e8 <__stack_chk_fail@plt>
   12864:	andeq	ip, r2, r0, lsl #31
   12868:	andeq	lr, r2, r8, lsr #16
   1286c:	andeq	r9, r1, r8, lsr #17
   12870:	andeq	lr, r2, r8, lsl r8
   12874:			; <UNDEFINED> instruction: 0x000198bc
   12878:	andeq	r9, r1, r4, asr #17
   1287c:	push	{r4, r5, lr}
   12880:	sub	sp, sp, #12
   12884:	ldr	r4, [pc, #68]	; 128d0 <__snprintf_chk@plt+0x404>
   12888:	mov	r5, r0
   1288c:	ldr	r3, [r4]
   12890:	str	r3, [sp, #4]
   12894:	bl	12340 <XtDisplay@plt>
   12898:	mov	r3, sp
   1289c:	mov	r2, #42	; 0x2a
   128a0:	mov	r1, r5
   128a4:	bl	121c0 <XFindContext@plt>
   128a8:	ldr	r2, [sp, #4]
   128ac:	ldr	r3, [r4]
   128b0:	cmp	r0, #0
   128b4:	movne	r0, #0
   128b8:	ldreq	r0, [sp]
   128bc:	cmp	r2, r3
   128c0:	bne	128cc <__snprintf_chk@plt+0x400>
   128c4:	add	sp, sp, #12
   128c8:	pop	{r4, r5, pc}
   128cc:	bl	120e8 <__stack_chk_fail@plt>
   128d0:	andeq	ip, r2, r0, lsl #31
   128d4:	ldr	r3, [pc, #76]	; 12928 <__snprintf_chk@plt+0x45c>
   128d8:	push	{r4, lr}
   128dc:	ldr	r3, [r3]
   128e0:	cmp	r3, r0
   128e4:	beq	12918 <__snprintf_chk@plt+0x44c>
   128e8:	mov	r4, r0
   128ec:	bl	120dc <XtName@plt>
   128f0:	ldr	r1, [pc, #52]	; 1292c <__snprintf_chk@plt+0x460>
   128f4:	bl	11fb0 <strcmp@plt>
   128f8:	cmp	r0, #0
   128fc:	ldreq	r3, [pc, #44]	; 12930 <__snprintf_chk@plt+0x464>
   12900:	strbeq	r0, [r3]
   12904:	mov	r0, r4
   12908:	bl	12214 <XtPopdown@plt>
   1290c:	mov	r0, r4
   12910:	pop	{r4, lr}
   12914:	b	123e8 <XtDestroyWidget@plt>
   12918:	bl	1213c <XtWidgetToApplicationContext@plt>
   1291c:	bl	11fec <XtDestroyApplicationContext@plt>
   12920:	mov	r0, #0
   12924:	bl	12244 <exit@plt>
   12928:	andeq	lr, r2, r4, lsl #16
   1292c:	andeq	r9, r1, ip, asr #17
   12930:	muleq	r2, r4, r7
   12934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12938:	sub	sp, sp, #8192	; 0x2000
   1293c:	ldr	r6, [pc, #368]	; 12ab4 <__snprintf_chk@plt+0x5e8>
   12940:	sub	sp, sp, #20
   12944:	mov	r7, r3
   12948:	add	r3, sp, #8192	; 0x2000
   1294c:	add	r3, r3, #12
   12950:	cmp	r2, #1
   12954:	ldr	r2, [r6]
   12958:	mov	r9, r0
   1295c:	str	r2, [r3]
   12960:	add	r3, sp, #8192	; 0x2000
   12964:	add	r3, r3, #56	; 0x38
   12968:	ldr	r8, [r3]
   1296c:	add	r3, sp, #8192	; 0x2000
   12970:	add	r3, r3, #60	; 0x3c
   12974:	ldr	sl, [r3]
   12978:	beq	129d4 <__snprintf_chk@plt+0x508>
   1297c:	ldr	r2, [pc, #308]	; 12ab8 <__snprintf_chk@plt+0x5ec>
   12980:	mov	r3, #8192	; 0x2000
   12984:	add	r0, sp, #12
   12988:	ldr	r2, [r2, #8]
   1298c:	mov	r1, r3
   12990:	stm	sp, {r2, r9}
   12994:	mov	r2, #1
   12998:	bl	124cc <__snprintf_chk@plt>
   1299c:	ldr	r3, [pc, #280]	; 12abc <__snprintf_chk@plt+0x5f0>
   129a0:	add	r1, sp, #12
   129a4:	ldr	r0, [r3, #12]
   129a8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   129ac:	mov	r0, #0
   129b0:	add	r3, sp, #8192	; 0x2000
   129b4:	add	r3, r3, #12
   129b8:	ldr	r2, [r3]
   129bc:	ldr	r3, [r6]
   129c0:	cmp	r2, r3
   129c4:	bne	12ab0 <__snprintf_chk@plt+0x5e4>
   129c8:	add	sp, sp, #8192	; 0x2000
   129cc:	add	sp, sp, #20
   129d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129d4:	ldr	r1, [r1]
   129d8:	add	r0, sp, #12
   129dc:	bl	122a4 <XmuCopyISOLatin1Lowered@plt>
   129e0:	mov	r4, r7
   129e4:	add	r5, r7, r8, lsl #3
   129e8:	ldr	r1, [r4]
   129ec:	add	r0, sp, #12
   129f0:	bl	11fb0 <strcmp@plt>
   129f4:	cmp	r0, #0
   129f8:	beq	12aa0 <__snprintf_chk@plt+0x5d4>
   129fc:	add	r4, r4, #8
   12a00:	cmp	r4, r5
   12a04:	bne	129e8 <__snprintf_chk@plt+0x51c>
   12a08:	ldr	r2, [pc, #168]	; 12ab8 <__snprintf_chk@plt+0x5ec>
   12a0c:	str	r9, [sp, #4]
   12a10:	mov	r3, #8192	; 0x2000
   12a14:	ldr	r2, [r2, #12]
   12a18:	mov	r1, r3
   12a1c:	str	r2, [sp]
   12a20:	add	r0, sp, #12
   12a24:	mov	r2, #1
   12a28:	mov	r5, #0
   12a2c:	bl	124cc <__snprintf_chk@plt>
   12a30:	mov	r4, r5
   12a34:	sub	sl, r8, #1
   12a38:	ldr	r9, [pc, #128]	; 12ac0 <__snprintf_chk@plt+0x5f4>
   12a3c:	ldr	fp, [pc, #128]	; 12ac4 <__snprintf_chk@plt+0x5f8>
   12a40:	b	12a60 <__snprintf_chk@plt+0x594>
   12a44:	cmp	r8, r4
   12a48:	bls	1299c <__snprintf_chk@plt+0x4d0>
   12a4c:	ldrh	r2, [r9]
   12a50:	ldrb	r3, [r9, #2]
   12a54:	strh	r2, [r0]
   12a58:	strb	r3, [r0, #2]
   12a5c:	add	r5, r5, #1
   12a60:	add	r0, sp, #12
   12a64:	bl	12280 <strlen@plt>
   12a68:	add	r3, sp, #12
   12a6c:	ldr	r1, [r7, r5, lsl #3]
   12a70:	mov	r2, #8192	; 0x2000
   12a74:	add	r4, r4, #1
   12a78:	add	r0, r3, r0
   12a7c:	bl	1216c <__stpcpy_chk@plt>
   12a80:	cmp	sl, r4
   12a84:	mov	r1, r0
   12a88:	bne	12a44 <__snprintf_chk@plt+0x578>
   12a8c:	ldrh	r3, [fp, #4]
   12a90:	ldr	r0, [fp]
   12a94:	strh	r3, [r1, #4]
   12a98:	str	r0, [r1]
   12a9c:	b	12a5c <__snprintf_chk@plt+0x590>
   12aa0:	ldr	r3, [r4, #4]
   12aa4:	mov	r0, #1
   12aa8:	str	r3, [sl]
   12aac:	b	129b0 <__snprintf_chk@plt+0x4e4>
   12ab0:	bl	120e8 <__stack_chk_fail@plt>
   12ab4:	andeq	ip, r2, r0, lsl #31
   12ab8:	andeq	lr, r2, r8, lsr #16
   12abc:	andeq	lr, r2, r8, lsl r8
   12ac0:	andeq	r9, r1, r0, ror #17
   12ac4:	ldrdeq	r9, [r1], -r8
   12ac8:	push	{r4, r5, r6, lr}
   12acc:	sub	sp, sp, #16
   12ad0:	ldr	r4, [pc, #164]	; 12b7c <__snprintf_chk@plt+0x6b0>
   12ad4:	ldr	r5, [r3]
   12ad8:	add	lr, sp, #8
   12adc:	mov	r3, #5
   12ae0:	ldr	ip, [r4]
   12ae4:	mov	r1, r2
   12ae8:	stm	sp, {r3, lr}
   12aec:	mov	r2, r5
   12af0:	ldr	r3, [pc, #136]	; 12b80 <__snprintf_chk@plt+0x6b4>
   12af4:	mov	r5, r0
   12af8:	ldr	r0, [pc, #132]	; 12b84 <__snprintf_chk@plt+0x6b8>
   12afc:	str	ip, [sp, #12]
   12b00:	bl	12934 <__snprintf_chk@plt+0x468>
   12b04:	cmp	r0, #0
   12b08:	bne	12b24 <__snprintf_chk@plt+0x658>
   12b0c:	ldr	r2, [sp, #12]
   12b10:	ldr	r3, [r4]
   12b14:	cmp	r2, r3
   12b18:	bne	12b78 <__snprintf_chk@plt+0x6ac>
   12b1c:	add	sp, sp, #16
   12b20:	pop	{r4, r5, r6, pc}
   12b24:	mov	r0, r5
   12b28:	bl	1287c <__snprintf_chk@plt+0x3b0>
   12b2c:	subs	r6, r0, #0
   12b30:	beq	12b64 <__snprintf_chk@plt+0x698>
   12b34:	ldr	r5, [pc, #76]	; 12b88 <__snprintf_chk@plt+0x6bc>
   12b38:	ldr	r3, [r5]
   12b3c:	ldr	r0, [r3]
   12b40:	bl	17a24 <__snprintf_chk@plt+0x5558>
   12b44:	mov	r0, r6
   12b48:	mov	r2, #0
   12b4c:	ldr	r1, [sp, #8]
   12b50:	bl	191f0 <__snprintf_chk@plt+0x6d24>
   12b54:	ldr	r3, [r5]
   12b58:	ldr	r0, [r3]
   12b5c:	bl	17ac4 <__snprintf_chk@plt+0x55f8>
   12b60:	b	12b0c <__snprintf_chk@plt+0x640>
   12b64:	ldr	r3, [pc, #28]	; 12b88 <__snprintf_chk@plt+0x6bc>
   12b68:	ldr	r1, [sp, #8]
   12b6c:	ldr	r0, [r3]
   12b70:	bl	193f8 <__snprintf_chk@plt+0x6f2c>
   12b74:	b	12b0c <__snprintf_chk@plt+0x640>
   12b78:	bl	120e8 <__stack_chk_fail@plt>
   12b7c:	andeq	ip, r2, r0, lsl #31
   12b80:	strdeq	lr, [r2], -r0
   12b84:	andeq	r9, r1, r4, ror #17
   12b88:	muleq	r2, r0, r7
   12b8c:	push	{r4, r5, lr}
   12b90:	sub	sp, sp, #20
   12b94:	ldr	r4, [pc, #180]	; 12c50 <__snprintf_chk@plt+0x784>
   12b98:	ldr	r5, [r3]
   12b9c:	add	lr, sp, #8
   12ba0:	mov	r3, #8
   12ba4:	ldr	ip, [r4]
   12ba8:	mov	r1, r2
   12bac:	stm	sp, {r3, lr}
   12bb0:	mov	r2, r5
   12bb4:	ldr	r3, [pc, #152]	; 12c54 <__snprintf_chk@plt+0x788>
   12bb8:	mov	r5, r0
   12bbc:	ldr	r0, [pc, #148]	; 12c58 <__snprintf_chk@plt+0x78c>
   12bc0:	str	ip, [sp, #12]
   12bc4:	bl	12934 <__snprintf_chk@plt+0x468>
   12bc8:	cmp	r0, #0
   12bcc:	beq	12bf4 <__snprintf_chk@plt+0x728>
   12bd0:	ldr	r1, [sp, #8]
   12bd4:	cmp	r1, #0
   12bd8:	beq	12c0c <__snprintf_chk@plt+0x740>
   12bdc:	blt	12c1c <__snprintf_chk@plt+0x750>
   12be0:	cmp	r1, #3
   12be4:	bgt	12c1c <__snprintf_chk@plt+0x750>
   12be8:	ldr	r3, [pc, #108]	; 12c5c <__snprintf_chk@plt+0x790>
   12bec:	ldr	r0, [r3]
   12bf0:	bl	19574 <__snprintf_chk@plt+0x70a8>
   12bf4:	ldr	r2, [sp, #12]
   12bf8:	ldr	r3, [r4]
   12bfc:	cmp	r2, r3
   12c00:	bne	12c4c <__snprintf_chk@plt+0x780>
   12c04:	add	sp, sp, #20
   12c08:	pop	{r4, r5, pc}
   12c0c:	mov	r0, r5
   12c10:	bl	12448 <XtParent@plt>
   12c14:	bl	143fc <__snprintf_chk@plt+0x1f30>
   12c18:	b	12bf4 <__snprintf_chk@plt+0x728>
   12c1c:	mov	r0, r5
   12c20:	bl	1287c <__snprintf_chk@plt+0x3b0>
   12c24:	cmp	r0, #0
   12c28:	beq	12c38 <__snprintf_chk@plt+0x76c>
   12c2c:	ldr	r1, [sp, #8]
   12c30:	bl	1944c <__snprintf_chk@plt+0x6f80>
   12c34:	b	12bf4 <__snprintf_chk@plt+0x728>
   12c38:	ldr	r3, [pc, #28]	; 12c5c <__snprintf_chk@plt+0x790>
   12c3c:	ldr	r1, [sp, #8]
   12c40:	ldr	r0, [r3]
   12c44:	bl	19574 <__snprintf_chk@plt+0x70a8>
   12c48:	b	12bf4 <__snprintf_chk@plt+0x728>
   12c4c:	bl	120e8 <__stack_chk_fail@plt>
   12c50:	andeq	ip, r2, r0, lsl #31
   12c54:	andeq	lr, r2, r8, lsl r2
   12c58:	andeq	r9, r1, ip, ror #17
   12c5c:	muleq	r2, r0, r7
   12c60:	mov	r2, #6
   12c64:	ldr	r1, [pc]	; 12c6c <__snprintf_chk@plt+0x7a0>
   12c68:	b	122c8 <XtAppAddActions@plt>
   12c6c:	andeq	lr, r2, r8, asr r2
   12c70:	bx	lr
   12c74:	ldr	r3, [pc, #160]	; 12d1c <__snprintf_chk@plt+0x850>
   12c78:	push	{r4, r5, r6, lr}
   12c7c:	sub	sp, sp, #8192	; 0x2000
   12c80:	ldr	r4, [pc, #152]	; 12d20 <__snprintf_chk@plt+0x854>
   12c84:	sub	sp, sp, #16
   12c88:	mov	r1, #0
   12c8c:	strb	r1, [r3, #4]
   12c90:	add	r1, sp, #8192	; 0x2000
   12c94:	ldr	r2, [r4]
   12c98:	add	r1, r1, #12
   12c9c:	ldr	r6, [r3, #36]	; 0x24
   12ca0:	str	r2, [r1]
   12ca4:	mov	r5, r0
   12ca8:	bl	12340 <XtDisplay@plt>
   12cac:	bl	123b8 <XtLastTimestampProcessed@plt>
   12cb0:	mov	r1, r6
   12cb4:	mov	r2, r0
   12cb8:	mov	r0, r5
   12cbc:	bl	122bc <XtDisownSelection@plt>
   12cc0:	ldr	r3, [pc, #92]	; 12d24 <__snprintf_chk@plt+0x858>
   12cc4:	ldr	r2, [pc, #92]	; 12d28 <__snprintf_chk@plt+0x85c>
   12cc8:	add	r0, sp, #12
   12ccc:	ldr	r1, [r3, #16]
   12cd0:	mov	r3, #8192	; 0x2000
   12cd4:	stm	sp, {r1, r2}
   12cd8:	mov	r1, r3
   12cdc:	mov	r2, #1
   12ce0:	bl	124cc <__snprintf_chk@plt>
   12ce4:	ldr	r3, [pc, #64]	; 12d2c <__snprintf_chk@plt+0x860>
   12ce8:	add	r1, sp, #12
   12cec:	ldr	r0, [r3, #12]
   12cf0:	bl	16304 <__snprintf_chk@plt+0x3e38>
   12cf4:	add	r3, sp, #8192	; 0x2000
   12cf8:	add	r3, r3, #12
   12cfc:	ldr	r2, [r3]
   12d00:	ldr	r3, [r4]
   12d04:	cmp	r2, r3
   12d08:	bne	12d18 <__snprintf_chk@plt+0x84c>
   12d0c:	add	sp, sp, #8192	; 0x2000
   12d10:	add	sp, sp, #16
   12d14:	pop	{r4, r5, r6, pc}
   12d18:	bl	120e8 <__stack_chk_fail@plt>
   12d1c:	andeq	lr, r2, r4, asr #15
   12d20:	andeq	ip, r2, r0, lsl #31
   12d24:	andeq	lr, r2, r8, lsr #16
   12d28:	muleq	r1, r8, r9
   12d2c:	andeq	lr, r2, r8, lsl r8
   12d30:	push	{r4, r5, r6, lr}
   12d34:	mov	r4, r0
   12d38:	ldr	r5, [pc, #92]	; 12d9c <__snprintf_chk@plt+0x8d0>
   12d3c:	sub	sp, sp, #8
   12d40:	mov	r6, r1
   12d44:	ldr	r0, [r5, #28]
   12d48:	cmp	r0, #0
   12d4c:	beq	12d5c <__snprintf_chk@plt+0x890>
   12d50:	bl	121d8 <XtRemoveTimeOut@plt>
   12d54:	mov	r3, #0
   12d58:	str	r3, [r5, #28]
   12d5c:	ldr	r3, [pc, #60]	; 12da0 <__snprintf_chk@plt+0x8d4>
   12d60:	mov	r0, r4
   12d64:	ldr	r5, [r6]
   12d68:	ldr	r6, [r3]
   12d6c:	bl	12340 <XtDisplay@plt>
   12d70:	bl	123b8 <XtLastTimestampProcessed@plt>
   12d74:	mov	r3, #0
   12d78:	str	r3, [sp]
   12d7c:	mov	r2, r6
   12d80:	mov	r1, r5
   12d84:	ldr	r3, [pc, #24]	; 12da4 <__snprintf_chk@plt+0x8d8>
   12d88:	str	r0, [sp, #4]
   12d8c:	mov	r0, r4
   12d90:	bl	123a0 <XtGetSelectionValue@plt>
   12d94:	add	sp, sp, #8
   12d98:	pop	{r4, r5, r6, pc}
   12d9c:	andeq	lr, r2, r4, asr #15
   12da0:	andeq	lr, r2, r4, ror r7
   12da4:	andeq	r3, r1, r8, ror #10
   12da8:	push	{r4, r5, r6, r7, r8, lr}
   12dac:	mov	r5, r0
   12db0:	ldr	r3, [r0]
   12db4:	cmp	r3, #4
   12db8:	ldrls	pc, [pc, r3, lsl #2]
   12dbc:	b	12dd4 <__snprintf_chk@plt+0x908>
   12dc0:	andeq	r2, r1, r4, ror #27
   12dc4:	andeq	r2, r1, ip, lsr lr
   12dc8:	andeq	r2, r1, ip, lsl #29
   12dcc:	andeq	r2, r1, r0, lsr pc
   12dd0:	ldrdeq	r2, [r1], -r8
   12dd4:	pop	{r4, r5, r6, r7, r8, pc}
   12dd8:	ldr	r0, [r0, #8]
   12ddc:	pop	{r4, r5, r6, r7, r8, lr}
   12de0:	b	12328 <XtFree@plt>
   12de4:	ldr	r4, [r0, #12]
   12de8:	cmp	r4, #0
   12dec:	popeq	{r4, r5, r6, r7, r8, pc}
   12df0:	ldrh	r3, [r0, #8]
   12df4:	cmp	r3, #0
   12df8:	beq	12e80 <__snprintf_chk@plt+0x9b4>
   12dfc:	mov	r6, #0
   12e00:	ldr	r0, [r4, #4]
   12e04:	bl	12328 <XtFree@plt>
   12e08:	ldr	r0, [r4, #12]
   12e0c:	bl	12328 <XtFree@plt>
   12e10:	ldr	r0, [r4, #16]
   12e14:	bl	12328 <XtFree@plt>
   12e18:	ldrh	r3, [r5, #8]
   12e1c:	add	r6, r6, #1
   12e20:	add	r4, r4, #24
   12e24:	cmp	r3, r6
   12e28:	bhi	12e00 <__snprintf_chk@plt+0x934>
   12e2c:	ldr	r4, [r5, #12]
   12e30:	mov	r0, r4
   12e34:	pop	{r4, r5, r6, r7, r8, lr}
   12e38:	b	12328 <XtFree@plt>
   12e3c:	ldr	r4, [r0, #8]
   12e40:	cmp	r4, #0
   12e44:	popeq	{r4, r5, r6, r7, r8, pc}
   12e48:	ldrh	r3, [r0, #4]
   12e4c:	cmp	r3, #0
   12e50:	beq	12e80 <__snprintf_chk@plt+0x9b4>
   12e54:	mov	r6, #0
   12e58:	ldr	r0, [r4, #4]
   12e5c:	bl	12328 <XtFree@plt>
   12e60:	ldr	r0, [r4, #12]
   12e64:	bl	12328 <XtFree@plt>
   12e68:	ldrh	r3, [r5, #4]
   12e6c:	add	r6, r6, #1
   12e70:	add	r4, r4, #16
   12e74:	cmp	r3, r6
   12e78:	bhi	12e58 <__snprintf_chk@plt+0x98c>
   12e7c:	ldr	r4, [r5, #8]
   12e80:	mov	r0, r4
   12e84:	pop	{r4, r5, r6, r7, r8, lr}
   12e88:	b	12328 <XtFree@plt>
   12e8c:	ldr	r7, [r0, #8]
   12e90:	cmp	r7, #0
   12e94:	popeq	{r4, r5, r6, r7, r8, pc}
   12e98:	ldrh	r3, [r0, #4]
   12e9c:	cmp	r3, #0
   12ea0:	beq	12f24 <__snprintf_chk@plt+0xa58>
   12ea4:	mov	r8, #0
   12ea8:	ldr	r0, [r7, #4]
   12eac:	bl	12328 <XtFree@plt>
   12eb0:	ldrb	r6, [r7, #12]
   12eb4:	cmp	r6, #0
   12eb8:	bne	12f84 <__snprintf_chk@plt+0xab8>
   12ebc:	ldr	r4, [r7, #24]
   12ec0:	cmp	r4, #0
   12ec4:	beq	12f0c <__snprintf_chk@plt+0xa40>
   12ec8:	ldrh	r3, [r7, #20]
   12ecc:	cmp	r3, #0
   12ed0:	beq	12f04 <__snprintf_chk@plt+0xa38>
   12ed4:	ldr	r0, [r4, #4]
   12ed8:	bl	12328 <XtFree@plt>
   12edc:	ldr	r0, [r4, #8]
   12ee0:	bl	12328 <XtFree@plt>
   12ee4:	ldr	r0, [r4, #12]
   12ee8:	bl	12328 <XtFree@plt>
   12eec:	ldrh	r3, [r7, #20]
   12ef0:	add	r6, r6, #1
   12ef4:	add	r4, r4, #16
   12ef8:	cmp	r3, r6
   12efc:	bhi	12ed4 <__snprintf_chk@plt+0xa08>
   12f00:	ldr	r4, [r7, #24]
   12f04:	mov	r0, r4
   12f08:	bl	12328 <XtFree@plt>
   12f0c:	ldrh	r3, [r5, #4]
   12f10:	add	r8, r8, #1
   12f14:	add	r7, r7, #28
   12f18:	cmp	r3, r8
   12f1c:	bhi	12ea8 <__snprintf_chk@plt+0x9dc>
   12f20:	ldr	r7, [r5, #8]
   12f24:	mov	r0, r7
   12f28:	pop	{r4, r5, r6, r7, r8, lr}
   12f2c:	b	12328 <XtFree@plt>
   12f30:	ldr	r4, [r0, #8]
   12f34:	cmp	r4, #0
   12f38:	popeq	{r4, r5, r6, r7, r8, pc}
   12f3c:	ldrh	r3, [r0, #4]
   12f40:	cmp	r3, #0
   12f44:	beq	12e80 <__snprintf_chk@plt+0x9b4>
   12f48:	mov	r6, #0
   12f4c:	b	12f60 <__snprintf_chk@plt+0xa94>
   12f50:	ldrh	r3, [r5, #4]
   12f54:	add	r4, r4, #36	; 0x24
   12f58:	cmp	r3, r6
   12f5c:	bls	12e7c <__snprintf_chk@plt+0x9b0>
   12f60:	ldr	r0, [r4, #8]
   12f64:	bl	12328 <XtFree@plt>
   12f68:	ldrb	r3, [r4, #16]
   12f6c:	add	r6, r6, #1
   12f70:	cmp	r3, #0
   12f74:	beq	12f50 <__snprintf_chk@plt+0xa84>
   12f78:	ldr	r0, [r4, #20]
   12f7c:	bl	12328 <XtFree@plt>
   12f80:	b	12f50 <__snprintf_chk@plt+0xa84>
   12f84:	ldr	r0, [r7, #16]
   12f88:	bl	12328 <XtFree@plt>
   12f8c:	b	12f0c <__snprintf_chk@plt+0xa40>
   12f90:	ldr	r0, [pc, #96]	; 12ff8 <__snprintf_chk@plt+0xb2c>
   12f94:	ldr	ip, [r1]
   12f98:	ldr	r1, [r0, #4]
   12f9c:	cmp	ip, r1
   12fa0:	beq	12fac <__snprintf_chk@plt+0xae0>
   12fa4:	mov	r0, #0
   12fa8:	bx	lr
   12fac:	ldr	r1, [r2]
   12fb0:	ldr	r2, [r0, #8]
   12fb4:	cmp	r1, r2
   12fb8:	bne	12fa4 <__snprintf_chk@plt+0xad8>
   12fbc:	ldr	r2, [pc, #56]	; 12ffc <__snprintf_chk@plt+0xb30>
   12fc0:	ldr	r0, [r0, #12]
   12fc4:	ldr	ip, [sp]
   12fc8:	str	r0, [r3]
   12fcc:	ldr	r3, [r2, #16]
   12fd0:	mov	r1, #8
   12fd4:	str	r3, [ip]
   12fd8:	ldr	r3, [r2, #8]
   12fdc:	ldr	r2, [sp, #4]
   12fe0:	add	r3, r3, #6
   12fe4:	mov	r0, #1
   12fe8:	str	r3, [r2]
   12fec:	ldr	r3, [sp, #8]
   12ff0:	str	r1, [r3]
   12ff4:	bx	lr
   12ff8:	andeq	lr, r2, r4, ror r7
   12ffc:	andeq	lr, r2, r4, asr #15
   13000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13004:	sub	sp, sp, #140	; 0x8c
   13008:	ldr	sl, [pc, #420]	; 131b4 <__snprintf_chk@plt+0xce8>
   1300c:	str	r2, [sp, #28]
   13010:	mov	r5, r0
   13014:	ldr	r3, [sl]
   13018:	str	r1, [sp, #24]
   1301c:	str	r3, [sp, #132]	; 0x84
   13020:	bl	11f5c <XtDisplayOfObject@plt>
   13024:	mov	r7, #0
   13028:	mov	r4, #1
   1302c:	mov	r6, r0
   13030:	mov	r0, r5
   13034:	bl	1237c <XtScreenOfObject@plt>
   13038:	ldr	r8, [r0, #8]
   1303c:	mov	r0, r5
   13040:	bl	1213c <XtWidgetToApplicationContext@plt>
   13044:	mov	r1, #34	; 0x22
   13048:	mov	r9, r0
   1304c:	mov	r0, r6
   13050:	bl	12010 <XCreateFontCursor@plt>
   13054:	str	r7, [sp, #16]
   13058:	str	r7, [sp]
   1305c:	mov	r2, r7
   13060:	str	r8, [sp, #8]
   13064:	mov	r1, r8
   13068:	str	r4, [sp, #4]
   1306c:	mov	r3, #12
   13070:	str	r0, [sp, #12]
   13074:	mov	r0, r6
   13078:	bl	12148 <XGrabPointer@plt>
   1307c:	subs	r5, r0, #0
   13080:	moveq	r7, r5
   13084:	moveq	fp, r5
   13088:	bne	13194 <__snprintf_chk@plt+0xcc8>
   1308c:	mov	r2, #0
   13090:	mov	r1, #1
   13094:	mov	r0, r6
   13098:	bl	11ff8 <XAllowEvents@plt>
   1309c:	add	r1, sp, #36	; 0x24
   130a0:	mov	r0, r9
   130a4:	bl	12178 <XtAppNextEvent@plt>
   130a8:	ldr	r3, [sp, #36]	; 0x24
   130ac:	cmp	r3, #4
   130b0:	beq	13140 <__snprintf_chk@plt+0xc74>
   130b4:	cmp	r3, #5
   130b8:	bne	1311c <__snprintf_chk@plt+0xc50>
   130bc:	ldr	r3, [sp, #52]	; 0x34
   130c0:	cmp	r3, r8
   130c4:	bne	1311c <__snprintf_chk@plt+0xc50>
   130c8:	cmp	fp, #0
   130cc:	moveq	r5, fp
   130d0:	beq	130e0 <__snprintf_chk@plt+0xc14>
   130d4:	subs	r5, r5, #1
   130d8:	movne	fp, #1
   130dc:	moveq	fp, #0
   130e0:	clz	r4, r7
   130e4:	lsr	r4, r4, #5
   130e8:	orrs	r1, r4, fp
   130ec:	bne	1308c <__snprintf_chk@plt+0xbc0>
   130f0:	mov	r0, r6
   130f4:	bl	1228c <XUngrabPointer@plt>
   130f8:	mov	r1, r7
   130fc:	mov	r0, r6
   13100:	bl	11f50 <XmuClientWindow@plt>
   13104:	ldr	r2, [sp, #132]	; 0x84
   13108:	ldr	r3, [sl]
   1310c:	cmp	r2, r3
   13110:	bne	131b0 <__snprintf_chk@plt+0xce4>
   13114:	add	sp, sp, #140	; 0x8c
   13118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1311c:	add	r0, sp, #36	; 0x24
   13120:	bl	12478 <XtDispatchEvent@plt>
   13124:	adds	fp, r5, #0
   13128:	movne	fp, #1
   1312c:	clz	r4, r7
   13130:	lsr	r4, r4, #5
   13134:	orrs	r1, r4, fp
   13138:	bne	1308c <__snprintf_chk@plt+0xbc0>
   1313c:	b	130f0 <__snprintf_chk@plt+0xc24>
   13140:	ldr	r3, [sp, #52]	; 0x34
   13144:	cmp	r3, r8
   13148:	bne	1311c <__snprintf_chk@plt+0xc50>
   1314c:	cmp	r4, #0
   13150:	beq	13178 <__snprintf_chk@plt+0xcac>
   13154:	ldr	r2, [sp, #24]
   13158:	ldr	r7, [sp, #60]	; 0x3c
   1315c:	cmp	r2, #0
   13160:	ldrne	r3, [sp, #76]	; 0x4c
   13164:	strne	r3, [r2]
   13168:	ldr	r2, [sp, #28]
   1316c:	cmp	r2, #0
   13170:	ldrne	r3, [sp, #80]	; 0x50
   13174:	strne	r3, [r2]
   13178:	mov	fp, #1
   1317c:	clz	r4, r7
   13180:	lsr	r4, r4, #5
   13184:	orrs	r1, r4, fp
   13188:	add	r5, r5, #1
   1318c:	bne	1308c <__snprintf_chk@plt+0xbc0>
   13190:	b	130f0 <__snprintf_chk@plt+0xc24>
   13194:	ldr	r2, [pc, #28]	; 131b8 <__snprintf_chk@plt+0xcec>
   13198:	ldr	r3, [pc, #28]	; 131bc <__snprintf_chk@plt+0xcf0>
   1319c:	ldr	r1, [r2, #20]
   131a0:	ldr	r0, [r3, #12]
   131a4:	bl	16304 <__snprintf_chk@plt+0x3e38>
   131a8:	mov	r0, r7
   131ac:	b	13104 <__snprintf_chk@plt+0xc38>
   131b0:	bl	120e8 <__stack_chk_fail@plt>
   131b4:	andeq	ip, r2, r0, lsl #31
   131b8:	andeq	lr, r2, r8, lsr #16
   131bc:	andeq	lr, r2, r8, lsl r8
   131c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131c4:	sub	sp, sp, #8256	; 0x2040
   131c8:	ldr	r8, [pc, #836]	; 13514 <__snprintf_chk@plt+0x1048>
   131cc:	sub	sp, sp, #20
   131d0:	mov	r5, r2
   131d4:	add	r2, sp, #8256	; 0x2040
   131d8:	ldr	r3, [r8]
   131dc:	add	r2, r2, #12
   131e0:	str	r1, [sp, #8]
   131e4:	str	r3, [r2]
   131e8:	mov	r7, r0
   131ec:	bl	12340 <XtDisplay@plt>
   131f0:	cmp	r5, #0
   131f4:	ldr	r9, [pc, #796]	; 13518 <__snprintf_chk@plt+0x104c>
   131f8:	ldreq	r3, [pc, #796]	; 1351c <__snprintf_chk@plt+0x1050>
   131fc:	ldr	r4, [pc, #796]	; 13520 <__snprintf_chk@plt+0x1054>
   13200:	ldreq	r5, [r3, #24]
   13204:	mov	r6, r0
   13208:	mov	r1, r5
   1320c:	ldr	r0, [r9, #12]
   13210:	bl	16304 <__snprintf_chk@plt+0x3e38>
   13214:	ldr	r2, [r4, #32]
   13218:	cmp	r2, #0
   1321c:	bne	1325c <__snprintf_chk@plt+0xd90>
   13220:	mov	r1, r2
   13224:	mov	r0, r7
   13228:	bl	13000 <__snprintf_chk@plt+0xb34>
   1322c:	cmp	r0, #0
   13230:	str	r0, [r4, #32]
   13234:	bne	1325c <__snprintf_chk@plt+0xd90>
   13238:	add	r3, sp, #8256	; 0x2040
   1323c:	add	r3, r3, #12
   13240:	ldr	r2, [r3]
   13244:	ldr	r3, [r8]
   13248:	cmp	r2, r3
   1324c:	bne	13510 <__snprintf_chk@plt+0x1044>
   13250:	add	sp, sp, #8256	; 0x2040
   13254:	add	sp, sp, #20
   13258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1325c:	ldr	r3, [pc, #704]	; 13524 <__snprintf_chk@plt+0x1058>
   13260:	ldr	sl, [pc, #704]	; 13528 <__snprintf_chk@plt+0x105c>
   13264:	str	r3, [sp, #20]
   13268:	ldrb	ip, [r3]
   1326c:	ldr	r5, [r4, #8]
   13270:	ldr	r2, [r4, #16]
   13274:	add	r0, ip, #1
   13278:	strb	r0, [r3]
   1327c:	ldr	r3, [r4, #12]
   13280:	ldr	lr, [sl, #4]
   13284:	ldr	fp, [sp, #8]
   13288:	str	r3, [sp, #16]
   1328c:	ldr	r3, [r4, #24]
   13290:	mov	r1, ip
   13294:	strb	ip, [r4, #4]
   13298:	ldr	r0, [pc, #652]	; 1352c <__snprintf_chk@plt+0x1060>
   1329c:	add	ip, r5, #12
   132a0:	str	r3, [sp, #12]
   132a4:	str	r2, [r4, #24]
   132a8:	str	fp, [r4]
   132ac:	str	lr, [r4, #36]	; 0x24
   132b0:	str	ip, [r4, #12]
   132b4:	bl	120d0 <_XEditResPut8@plt>
   132b8:	ldr	r2, [r4]
   132bc:	ldr	r3, [sp, #20]
   132c0:	cmp	r2, #6
   132c4:	ldrls	pc, [pc, r2, lsl #2]
   132c8:	b	134b0 <__snprintf_chk@plt+0xfe4>
   132cc:	andeq	r3, r1, ip, lsl #9
   132d0:	andeq	r3, r1, r8, ror #5
   132d4:	andeq	r3, r1, ip, asr r4
   132d8:	andeq	r3, r1, r8, ror #8
   132dc:			; <UNDEFINED> instruction: 0x000134b0
   132e0:	andeq	r3, r1, r4, ror r4
   132e4:	andeq	r3, r1, r0, lsl #9
   132e8:	ldr	fp, [pc, #576]	; 13530 <__snprintf_chk@plt+0x1064>
   132ec:	mov	r1, #1
   132f0:	ldr	r0, [pc, #564]	; 1352c <__snprintf_chk@plt+0x1060>
   132f4:	bl	120d0 <_XEditResPut8@plt>
   132f8:	mov	r1, r5
   132fc:	ldr	r0, [pc, #552]	; 1352c <__snprintf_chk@plt+0x1060>
   13300:	bl	12070 <_XEditResPut32@plt>
   13304:	ldr	r0, [sp, #16]
   13308:	ldr	r2, [pc, #548]	; 13534 <__snprintf_chk@plt+0x1068>
   1330c:	ldr	r3, [pc, #548]	; 13538 <__snprintf_chk@plt+0x106c>
   13310:	ldr	ip, [sp, #12]
   13314:	str	r2, [sp, #4]
   13318:	str	r3, [sp]
   1331c:	str	r0, [r4, #12]
   13320:	ldr	r1, [r4, #36]	; 0x24
   13324:	ldr	r3, [pc, #528]	; 1353c <__snprintf_chk@plt+0x1070>
   13328:	mov	r2, #0
   1332c:	mov	r0, r7
   13330:	str	ip, [r4, #24]
   13334:	str	r5, [r4, #8]
   13338:	bl	12118 <XtOwnSelection@plt>
   1333c:	cmp	r0, #0
   13340:	beq	134bc <__snprintf_chk@plt+0xff0>
   13344:	ldr	ip, [sl, #16]
   13348:	ldr	r1, [r4, #32]
   1334c:	mov	r2, #33	; 0x21
   13350:	mov	r3, #32
   13354:	mov	r0, r6
   13358:	str	ip, [sp, #48]	; 0x30
   1335c:	str	r1, [sp, #44]	; 0x2c
   13360:	str	r2, [sp, #28]
   13364:	str	r3, [sp, #52]	; 0x34
   13368:	bl	123b8 <XtLastTimestampProcessed@plt>
   1336c:	ldrb	r3, [r4, #4]
   13370:	ldr	r2, [r4, #36]	; 0x24
   13374:	ldr	sl, [pc, #452]	; 13540 <__snprintf_chk@plt+0x1074>
   13378:	ldr	r1, [fp]
   1337c:	mov	r5, #0
   13380:	strd	r2, [sp, #60]	; 0x3c
   13384:	str	r1, [sp, #68]	; 0x44
   13388:	str	r5, [sl]
   1338c:	ldr	fp, [pc, #432]	; 13544 <__snprintf_chk@plt+0x1078>
   13390:	str	r0, [sp, #56]	; 0x38
   13394:	ldr	r0, [pc, #428]	; 13548 <__snprintf_chk@plt+0x107c>
   13398:	bl	122b0 <XSetErrorHandler@plt>
   1339c:	ldr	ip, [pc, #424]	; 1354c <__snprintf_chk@plt+0x1080>
   133a0:	ldr	r2, [r6, #96]	; 0x60
   133a4:	add	r3, sp, #28
   133a8:	add	r2, r2, #1
   133ac:	str	r3, [sp]
   133b0:	ldr	r1, [r4, #32]
   133b4:	mov	r3, r5
   133b8:	str	r2, [ip]
   133bc:	mov	r2, r5
   133c0:	str	r0, [fp]
   133c4:	mov	r0, r6
   133c8:	bl	11f68 <XSendEvent@plt>
   133cc:	mov	r1, r5
   133d0:	mov	r0, r6
   133d4:	bl	1234c <XSync@plt>
   133d8:	ldr	r0, [fp]
   133dc:	bl	122b0 <XSetErrorHandler@plt>
   133e0:	ldr	r3, [sl]
   133e4:	cmp	r3, #1
   133e8:	beq	134d0 <__snprintf_chk@plt+0x1004>
   133ec:	ldr	r2, [sp, #8]
   133f0:	ldr	r5, [r9, #12]
   133f4:	cmp	r2, #5
   133f8:	ldrls	r3, [pc, #336]	; 13550 <__snprintf_chk@plt+0x1084>
   133fc:	ldrhi	r1, [pc, #336]	; 13554 <__snprintf_chk@plt+0x1088>
   13400:	ldrls	r1, [r3, r2, lsl #2]
   13404:	ldr	r2, [pc, #272]	; 1351c <__snprintf_chk@plt+0x1050>
   13408:	add	r3, sp, #76	; 0x4c
   1340c:	str	r3, [sp, #8]
   13410:	ldr	r2, [r2, #32]
   13414:	mov	r3, #8192	; 0x2000
   13418:	str	r1, [sp, #4]
   1341c:	str	r2, [sp]
   13420:	mov	r1, r3
   13424:	mov	r2, #1
   13428:	ldr	r0, [sp, #8]
   1342c:	bl	124cc <__snprintf_chk@plt>
   13430:	ldr	r1, [sp, #8]
   13434:	mov	r0, r5
   13438:	bl	16304 <__snprintf_chk@plt+0x3e38>
   1343c:	mov	r0, r7
   13440:	bl	1213c <XtWidgetToApplicationContext@plt>
   13444:	mov	r3, r7
   13448:	ldr	r2, [pc, #264]	; 13558 <__snprintf_chk@plt+0x108c>
   1344c:	ldr	r1, [pc, #264]	; 1355c <__snprintf_chk@plt+0x1090>
   13450:	bl	1207c <XtAppAddTimeOut@plt>
   13454:	str	r0, [r4, #28]
   13458:	b	13238 <__snprintf_chk@plt+0xd6c>
   1345c:	mov	r1, #4
   13460:	ldr	fp, [pc, #200]	; 13530 <__snprintf_chk@plt+0x1064>
   13464:	b	132f0 <__snprintf_chk@plt+0xe24>
   13468:	mov	r1, #3
   1346c:	ldr	fp, [pc, #188]	; 13530 <__snprintf_chk@plt+0x1064>
   13470:	b	132f0 <__snprintf_chk@plt+0xe24>
   13474:	mov	r1, #2
   13478:	ldr	fp, [pc, #176]	; 13530 <__snprintf_chk@plt+0x1064>
   1347c:	b	132f0 <__snprintf_chk@plt+0xe24>
   13480:	mov	r1, #5
   13484:	ldr	fp, [pc, #164]	; 13530 <__snprintf_chk@plt+0x1064>
   13488:	b	132f0 <__snprintf_chk@plt+0xe24>
   1348c:	ldrb	r2, [r3, #1]
   13490:	ldr	fp, [pc, #152]	; 13530 <__snprintf_chk@plt+0x1064>
   13494:	mov	r1, #0
   13498:	cmp	r2, #0
   1349c:	movne	r2, #5
   134a0:	strne	r2, [fp]
   134a4:	mov	r2, #1
   134a8:	strb	r2, [r3, #1]
   134ac:	b	132f0 <__snprintf_chk@plt+0xe24>
   134b0:	mov	r1, #0
   134b4:	ldr	fp, [pc, #116]	; 13530 <__snprintf_chk@plt+0x1064>
   134b8:	b	132f0 <__snprintf_chk@plt+0xe24>
   134bc:	ldr	r3, [pc, #88]	; 1351c <__snprintf_chk@plt+0x1050>
   134c0:	ldr	r0, [r9, #12]
   134c4:	ldr	r1, [r3, #28]
   134c8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   134cc:	b	13344 <__snprintf_chk@plt+0xe78>
   134d0:	add	r6, sp, #76	; 0x4c
   134d4:	mov	r0, r6
   134d8:	mov	r2, #102	; 0x66
   134dc:	ldr	r1, [pc, #124]	; 13560 <__snprintf_chk@plt+0x1094>
   134e0:	bl	12058 <memcpy@plt>
   134e4:	mov	r1, r5
   134e8:	add	r0, sp, #178	; 0xb2
   134ec:	ldr	r2, [pc, #112]	; 13564 <__snprintf_chk@plt+0x1098>
   134f0:	bl	12310 <memset@plt>
   134f4:	mov	r2, r6
   134f8:	mov	r0, r7
   134fc:	mov	r1, r5
   13500:	str	r5, [sl]
   13504:	str	r5, [r4, #32]
   13508:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   1350c:	b	13238 <__snprintf_chk@plt+0xd6c>
   13510:	bl	120e8 <__stack_chk_fail@plt>
   13514:	andeq	ip, r2, r0, lsl #31
   13518:	andeq	lr, r2, r8, lsl r8
   1351c:	andeq	lr, r2, r8, lsr #16
   13520:	andeq	lr, r2, r4, asr #15
   13524:	andeq	lr, r2, r8, lsl #5
   13528:	andeq	lr, r2, r4, ror r7
   1352c:	andeq	lr, r2, ip, asr #15
   13530:	andeq	lr, r2, ip, lsl r3
   13534:	andeq	r2, r1, r0, ror ip
   13538:	andeq	r2, r1, r0, lsr sp
   1353c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13540:	andeq	lr, r2, r0, asr #15
   13544:	andeq	lr, r2, r8, lsl #16
   13548:	andeq	r6, r1, r4, asr #9
   1354c:	andeq	lr, r2, ip, lsl #16
   13550:	andeq	r9, r1, r0, lsl #19
   13554:	andeq	fp, r1, ip, lsl ip
   13558:	andeq	r2, r1, r4, ror ip
   1355c:	andeq	lr, r0, r0, ror #20
   13560:	muleq	r1, r8, r9
   13564:	muleq	r0, sl, pc	; <UNPREDICTABLE>
   13568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1356c:	sub	sp, sp, #8256	; 0x2040
   13570:	sub	sp, sp, #4
   13574:	add	r3, sp, #8256	; 0x2040
   13578:	add	r3, r3, #44	; 0x2c
   1357c:	ldr	r4, [pc, #2128]	; 13dd4 <__snprintf_chk@plt+0x1908>
   13580:	ldr	r3, [r3]
   13584:	mov	r6, r2
   13588:	add	r2, sp, #8192	; 0x2000
   1358c:	ldr	r1, [r4]
   13590:	add	r2, r2, #60	; 0x3c
   13594:	ldr	r3, [r3]
   13598:	str	r1, [r2]
   1359c:	add	r2, sp, #8256	; 0x2040
   135a0:	add	r2, r2, #40	; 0x28
   135a4:	cmp	r3, #0
   135a8:	ldr	r1, [r2]
   135ac:	beq	135dc <__snprintf_chk@plt+0x1110>
   135b0:	cmp	r3, #5
   135b4:	mov	r3, #6
   135b8:	str	r1, [sp, #44]	; 0x2c
   135bc:	str	r1, [sp, #48]	; 0x30
   135c0:	str	r3, [sp, #32]
   135c4:	bhi	13600 <__snprintf_chk@plt+0x1134>
   135c8:	ldr	r2, [pc, #2056]	; 13dd8 <__snprintf_chk@plt+0x190c>
   135cc:	ldr	r3, [pc, #2056]	; 13ddc <__snprintf_chk@plt+0x1910>
   135d0:	ldr	r1, [r2, #36]	; 0x24
   135d4:	ldr	r0, [r3, #12]
   135d8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   135dc:	add	r3, sp, #8192	; 0x2000
   135e0:	add	r3, r3, #60	; 0x3c
   135e4:	ldr	r2, [r3]
   135e8:	ldr	r3, [r4]
   135ec:	cmp	r2, r3
   135f0:	bne	13dac <__snprintf_chk@plt+0x18e0>
   135f4:	add	sp, sp, #8256	; 0x2040
   135f8:	add	sp, sp, #4
   135fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13600:	ldr	r7, [pc, #2008]	; 13de0 <__snprintf_chk@plt+0x1914>
   13604:	mov	r5, r0
   13608:	add	r1, sp, #29
   1360c:	add	r0, sp, #32
   13610:	bl	124a8 <_XEditResGet8@plt>
   13614:	ldrb	r2, [r7, #4]
   13618:	ldrb	r3, [sp, #29]
   1361c:	cmp	r2, r3
   13620:	beq	13678 <__snprintf_chk@plt+0x11ac>
   13624:	ldr	r3, [pc, #1976]	; 13de4 <__snprintf_chk@plt+0x1918>
   13628:	ldrb	r3, [r3]
   1362c:	cmp	r3, #0
   13630:	bne	13708 <__snprintf_chk@plt+0x123c>
   13634:	ldr	r2, [pc, #1964]	; 13de8 <__snprintf_chk@plt+0x191c>
   13638:	ldr	r3, [pc, #1964]	; 13dec <__snprintf_chk@plt+0x1920>
   1363c:	ldr	r1, [r6]
   13640:	mov	r0, r5
   13644:	str	r2, [sp, #4]
   13648:	str	r3, [sp]
   1364c:	mov	r2, #0
   13650:	ldr	r3, [pc, #1944]	; 13df0 <__snprintf_chk@plt+0x1924>
   13654:	bl	12118 <XtOwnSelection@plt>
   13658:	cmp	r0, #0
   1365c:	bne	135dc <__snprintf_chk@plt+0x1110>
   13660:	ldr	r2, [pc, #1904]	; 13dd8 <__snprintf_chk@plt+0x190c>
   13664:	ldr	r3, [pc, #1904]	; 13ddc <__snprintf_chk@plt+0x1910>
   13668:	ldr	r1, [r2, #40]	; 0x28
   1366c:	ldr	r0, [r3, #12]
   13670:	bl	16304 <__snprintf_chk@plt+0x3e38>
   13674:	b	135dc <__snprintf_chk@plt+0x1110>
   13678:	add	r1, sp, #30
   1367c:	add	r0, sp, #32
   13680:	bl	124a8 <_XEditResGet8@plt>
   13684:	add	r1, sp, #32
   13688:	mov	r0, r1
   1368c:	bl	11f8c <_XEditResGet32@plt>
   13690:	ldrb	r2, [sp, #30]
   13694:	ldr	r3, [sp, #48]	; 0x30
   13698:	cmp	r2, #1
   1369c:	str	r3, [sp, #44]	; 0x2c
   136a0:	beq	13714 <__snprintf_chk@plt+0x1248>
   136a4:	bcc	137c8 <__snprintf_chk@plt+0x12fc>
   136a8:	cmp	r2, #2
   136ac:	bne	13794 <__snprintf_chk@plt+0x12c8>
   136b0:	add	r0, sp, #32
   136b4:	bl	171e0 <__snprintf_chk@plt+0x4d14>
   136b8:	ldr	r1, [pc, #1844]	; 13df4 <__snprintf_chk@plt+0x1928>
   136bc:	ldr	ip, [pc, #1844]	; 13df8 <__snprintf_chk@plt+0x192c>
   136c0:	mov	r2, #0
   136c4:	ldr	r3, [r1]
   136c8:	strb	r2, [ip, #1]
   136cc:	sub	r3, r3, #1
   136d0:	str	r3, [r1]
   136d4:	mov	r1, r2
   136d8:	mov	r6, r0
   136dc:	mov	r0, r5
   136e0:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   136e4:	cmp	r6, #0
   136e8:	beq	13734 <__snprintf_chk@plt+0x1268>
   136ec:	ldr	r3, [pc, #1768]	; 13ddc <__snprintf_chk@plt+0x1910>
   136f0:	mov	r1, r6
   136f4:	ldr	r0, [r3, #12]
   136f8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   136fc:	mov	r0, r6
   13700:	bl	12328 <XtFree@plt>
   13704:	b	135dc <__snprintf_chk@plt+0x1110>
   13708:	ldr	r0, [pc, #1772]	; 13dfc <__snprintf_chk@plt+0x1930>
   1370c:	bl	121cc <puts@plt>
   13710:	b	13634 <__snprintf_chk@plt+0x1168>
   13714:	add	r0, sp, #32
   13718:	bl	1716c <__snprintf_chk@plt+0x4ca0>
   1371c:	mov	r6, r0
   13720:	b	136e4 <__snprintf_chk@plt+0x1218>
   13724:	mov	r0, r5
   13728:	bl	145c0 <__snprintf_chk@plt+0x20f4>
   1372c:	mov	r0, r5
   13730:	bl	12da8 <__snprintf_chk@plt+0x8dc>
   13734:	ldr	r3, [pc, #1732]	; 13e00 <__snprintf_chk@plt+0x1934>
   13738:	ldr	r3, [r3]
   1373c:	cmp	r3, #0
   13740:	beq	135dc <__snprintf_chk@plt+0x1110>
   13744:	ldr	r3, [r3, #4]
   13748:	add	r1, sp, #60	; 0x3c
   1374c:	ldr	r2, [pc, #1668]	; 13dd8 <__snprintf_chk@plt+0x190c>
   13750:	str	r1, [sp, #20]
   13754:	ldr	r1, [r3, #4]
   13758:	ldr	r2, [r2, #48]	; 0x30
   1375c:	str	r1, [sp, #8]
   13760:	ldr	r1, [r3]
   13764:	mov	r3, #8192	; 0x2000
   13768:	str	r1, [sp, #4]
   1376c:	str	r2, [sp]
   13770:	mov	r1, r3
   13774:	ldr	r0, [sp, #20]
   13778:	mov	r2, #1
   1377c:	bl	124cc <__snprintf_chk@plt>
   13780:	ldr	r3, [pc, #1620]	; 13ddc <__snprintf_chk@plt+0x1910>
   13784:	ldr	r1, [sp, #20]
   13788:	ldr	r0, [r3, #12]
   1378c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   13790:	b	135dc <__snprintf_chk@plt+0x1110>
   13794:	ldr	r1, [pc, #1596]	; 13dd8 <__snprintf_chk@plt+0x190c>
   13798:	mov	r3, #8192	; 0x2000
   1379c:	add	r0, sp, #60	; 0x3c
   137a0:	ldr	r1, [r1, #44]	; 0x2c
   137a4:	stm	sp, {r1, r2}
   137a8:	mov	r1, r3
   137ac:	mov	r2, #1
   137b0:	bl	124cc <__snprintf_chk@plt>
   137b4:	ldr	r3, [pc, #1568]	; 13ddc <__snprintf_chk@plt+0x1910>
   137b8:	add	r1, sp, #60	; 0x3c
   137bc:	ldr	r0, [r3, #12]
   137c0:	bl	16304 <__snprintf_chk@plt+0x3e38>
   137c4:	b	13734 <__snprintf_chk@plt+0x1268>
   137c8:	mov	r1, #1
   137cc:	mov	r0, #16
   137d0:	bl	123c4 <XtCalloc@plt>
   137d4:	ldr	r3, [r7]
   137d8:	mov	r5, r0
   137dc:	cmp	r3, #6
   137e0:	ldrls	pc, [pc, r3, lsl #2]
   137e4:	b	13a74 <__snprintf_chk@plt+0x15a8>
   137e8:	andeq	r3, r1, r8, asr #22
   137ec:	andeq	r3, r1, r4, asr #21
   137f0:	andeq	r3, r1, r0, asr ip
   137f4:	andeq	r3, r1, r4, asr r9
   137f8:	andeq	r3, r1, r4, asr r9
   137fc:	andeq	r3, r1, ip, lsr #17
   13800:	andeq	r3, r1, r4, lsl #16
   13804:	mov	r1, r0
   13808:	mov	r3, #5
   1380c:	str	r3, [r1], #4
   13810:	add	r0, sp, #32
   13814:	bl	12124 <_XEditResGet16@plt>
   13818:	cmp	r0, #0
   1381c:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13820:	mov	r1, #1
   13824:	mov	r0, #16
   13828:	bl	123c4 <XtCalloc@plt>
   1382c:	mov	r6, r0
   13830:	str	r0, [r5, #8]
   13834:	add	r1, r6, #12
   13838:	add	r0, sp, #32
   1383c:	bl	121a8 <_XEditResGetString8@plt>
   13840:	cmp	r0, #0
   13844:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13848:	ldr	r3, [pc, #1456]	; 13e00 <__snprintf_chk@plt+0x1934>
   1384c:	ldr	r1, [r6, #12]
   13850:	ldr	r2, [pc, #1452]	; 13e04 <__snprintf_chk@plt+0x1938>
   13854:	ldr	r3, [r3]
   13858:	str	r1, [sp, #56]	; 0x38
   1385c:	str	r2, [sp, #52]	; 0x34
   13860:	ldr	r3, [r3, #8]
   13864:	mov	r2, #1
   13868:	add	r1, sp, #52	; 0x34
   1386c:	ldr	r3, [r3]
   13870:	ldr	r3, [r3, #40]	; 0x28
   13874:	ldr	r3, [r3, #16]
   13878:	ldr	r0, [r3]
   1387c:	bl	12088 <XtSetValues@plt>
   13880:	ldr	r2, [r7]
   13884:	cmp	r2, #6
   13888:	ldrls	pc, [pc, r2, lsl #2]
   1388c:	b	13cc4 <__snprintf_chk@plt+0x17f8>
   13890:	andeq	r3, r1, r8, lsr #25
   13894:	muleq	r1, r8, ip
   13898:	andeq	r3, r1, r4, lsr #14
   1389c:	andeq	r3, r1, r8, lsl #25
   138a0:	andeq	r3, r1, r4, asr #25
   138a4:	andeq	r3, r1, r0, ror ip
   138a8:	andeq	r3, r1, ip, lsr #14
   138ac:	mov	r1, r0
   138b0:	mov	r3, #3
   138b4:	str	r3, [r1], #4
   138b8:	add	r0, sp, #32
   138bc:	bl	12124 <_XEditResGet16@plt>
   138c0:	cmp	r0, #0
   138c4:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   138c8:	ldrh	r1, [r5, #4]
   138cc:	mov	r0, #28
   138d0:	bl	123c4 <XtCalloc@plt>
   138d4:	ldrh	r3, [r5, #4]
   138d8:	cmp	r3, #0
   138dc:	str	r0, [r5, #8]
   138e0:	beq	13880 <__snprintf_chk@plt+0x13b4>
   138e4:	mov	sl, #0
   138e8:	mov	fp, sl
   138ec:	add	r8, r0, sl
   138f0:	mov	r1, r8
   138f4:	add	r0, sp, #32
   138f8:	bl	12004 <_XEditResGetWidgetInfo@plt>
   138fc:	cmp	r0, #0
   13900:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13904:	add	r1, r8, #12
   13908:	add	r0, sp, #32
   1390c:	bl	124a8 <_XEditResGet8@plt>
   13910:	cmp	r0, #0
   13914:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13918:	ldrb	r9, [r8, #12]
   1391c:	cmp	r9, #0
   13920:	beq	13d00 <__snprintf_chk@plt+0x1834>
   13924:	add	r1, r8, #16
   13928:	add	r0, sp, #32
   1392c:	bl	121a8 <_XEditResGetString8@plt>
   13930:	cmp	r0, #0
   13934:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13938:	ldrh	r3, [r5, #4]
   1393c:	add	fp, fp, #1
   13940:	add	sl, sl, #28
   13944:	cmp	fp, r3
   13948:	bge	13880 <__snprintf_chk@plt+0x13b4>
   1394c:	ldr	r0, [r5, #8]
   13950:	b	138ec <__snprintf_chk@plt+0x1420>
   13954:	mov	r1, r0
   13958:	mov	r3, #3
   1395c:	str	r3, [r1], #4
   13960:	add	r0, sp, #32
   13964:	bl	12124 <_XEditResGet16@plt>
   13968:	cmp	r0, #0
   1396c:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13970:	ldrh	r1, [r5, #4]
   13974:	mov	r0, #36	; 0x24
   13978:	bl	123c4 <XtCalloc@plt>
   1397c:	ldrh	r3, [r5, #4]
   13980:	cmp	r3, #0
   13984:	str	r0, [r5, #8]
   13988:	beq	13880 <__snprintf_chk@plt+0x13b4>
   1398c:	mov	r8, #0
   13990:	mov	r9, r8
   13994:	b	139c4 <__snprintf_chk@plt+0x14f8>
   13998:	add	r1, r6, #20
   1399c:	add	r0, sp, #32
   139a0:	bl	121a8 <_XEditResGetString8@plt>
   139a4:	cmp	r0, #0
   139a8:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   139ac:	ldrh	r3, [r5, #4]
   139b0:	add	r9, r9, #1
   139b4:	add	r8, r8, #36	; 0x24
   139b8:	cmp	r9, r3
   139bc:	bge	13880 <__snprintf_chk@plt+0x13b4>
   139c0:	ldr	r0, [r5, #8]
   139c4:	add	r6, r0, r8
   139c8:	add	r1, r6, #4
   139cc:	add	r0, sp, #32
   139d0:	bl	12004 <_XEditResGetWidgetInfo@plt>
   139d4:	cmp	r0, #0
   139d8:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   139dc:	add	r1, r6, #16
   139e0:	add	r0, sp, #32
   139e4:	bl	124a8 <_XEditResGet8@plt>
   139e8:	cmp	r0, #0
   139ec:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   139f0:	ldrb	r3, [r6, #16]
   139f4:	cmp	r3, #0
   139f8:	bne	13998 <__snprintf_chk@plt+0x14cc>
   139fc:	add	r1, r6, #24
   13a00:	add	r0, sp, #32
   13a04:	bl	124a8 <_XEditResGet8@plt>
   13a08:	cmp	r0, #0
   13a0c:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13a10:	add	r1, r6, #26
   13a14:	add	r0, sp, #32
   13a18:	bl	11fc8 <_XEditResGetSigned16@plt>
   13a1c:	cmp	r0, #0
   13a20:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13a24:	add	r1, r6, #28
   13a28:	add	r0, sp, #32
   13a2c:	bl	11fc8 <_XEditResGetSigned16@plt>
   13a30:	cmp	r0, #0
   13a34:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13a38:	add	r1, r6, #30
   13a3c:	add	r0, sp, #32
   13a40:	bl	12124 <_XEditResGet16@plt>
   13a44:	cmp	r0, #0
   13a48:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13a4c:	add	r1, r6, #32
   13a50:	add	r0, sp, #32
   13a54:	bl	12124 <_XEditResGet16@plt>
   13a58:	cmp	r0, #0
   13a5c:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13a60:	add	r1, r6, #34	; 0x22
   13a64:	add	r0, sp, #32
   13a68:	bl	12124 <_XEditResGet16@plt>
   13a6c:	cmp	r0, #0
   13a70:	bne	139ac <__snprintf_chk@plt+0x14e0>
   13a74:	mov	r0, r5
   13a78:	bl	12da8 <__snprintf_chk@plt+0x8dc>
   13a7c:	ldr	lr, [pc, #900]	; 13e08 <__snprintf_chk@plt+0x193c>
   13a80:	add	r3, sp, #60	; 0x3c
   13a84:	str	r3, [sp, #20]
   13a88:	mov	ip, r3
   13a8c:	ldm	lr!, {r0, r1, r2, r3}
   13a90:	stmia	ip!, {r0, r1, r2, r3}
   13a94:	ldm	lr!, {r0, r1, r2, r3}
   13a98:	ldr	lr, [lr]
   13a9c:	stmia	ip!, {r0, r1, r2, r3}
   13aa0:	mov	r0, #35	; 0x23
   13aa4:	lsr	r3, lr, #16
   13aa8:	strh	lr, [ip], #2
   13aac:	strb	r3, [ip]
   13ab0:	bl	12064 <XtMalloc@plt>
   13ab4:	ldr	r1, [sp, #20]
   13ab8:	bl	12184 <strcpy@plt>
   13abc:	mov	r6, r0
   13ac0:	b	136ec <__snprintf_chk@plt+0x1220>
   13ac4:	mov	r1, r0
   13ac8:	mov	r3, #1
   13acc:	str	r3, [r1], #4
   13ad0:	add	r0, sp, #32
   13ad4:	bl	12124 <_XEditResGet16@plt>
   13ad8:	cmp	r0, #0
   13adc:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13ae0:	ldrh	r1, [r5, #4]
   13ae4:	mov	r0, #16
   13ae8:	bl	123c4 <XtCalloc@plt>
   13aec:	ldrh	r3, [r5, #4]
   13af0:	cmp	r3, #0
   13af4:	str	r0, [r5, #8]
   13af8:	beq	13880 <__snprintf_chk@plt+0x13b4>
   13afc:	mov	r8, #0
   13b00:	b	13b2c <__snprintf_chk@plt+0x1660>
   13b04:	add	r1, r6, #12
   13b08:	add	r0, sp, #32
   13b0c:	bl	121a8 <_XEditResGetString8@plt>
   13b10:	cmp	r0, #0
   13b14:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13b18:	ldrh	r3, [r5, #4]
   13b1c:	add	r8, r8, #1
   13b20:	cmp	r8, r3
   13b24:	bge	13880 <__snprintf_chk@plt+0x13b4>
   13b28:	ldr	r0, [r5, #8]
   13b2c:	add	r6, r0, r8, lsl #4
   13b30:	mov	r1, r6
   13b34:	add	r0, sp, #32
   13b38:	bl	12004 <_XEditResGetWidgetInfo@plt>
   13b3c:	cmp	r0, #0
   13b40:	bne	13b04 <__snprintf_chk@plt+0x1638>
   13b44:	b	13a74 <__snprintf_chk@plt+0x15a8>
   13b48:	mov	r1, r0
   13b4c:	mov	r8, #0
   13b50:	str	r8, [r1], #8
   13b54:	add	r0, sp, #32
   13b58:	bl	12124 <_XEditResGet16@plt>
   13b5c:	cmp	r0, r8
   13b60:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13b64:	ldrh	r1, [r5, #8]
   13b68:	mov	r0, #24
   13b6c:	bl	123c4 <XtCalloc@plt>
   13b70:	ldrh	r3, [r5, #8]
   13b74:	cmp	r3, r8
   13b78:	str	r0, [r5, #12]
   13b7c:	beq	13bf4 <__snprintf_chk@plt+0x1728>
   13b80:	mov	r9, r8
   13b84:	b	13b8c <__snprintf_chk@plt+0x16c0>
   13b88:	ldr	r0, [r5, #12]
   13b8c:	add	r6, r0, r8
   13b90:	mov	r1, r6
   13b94:	add	r0, sp, #32
   13b98:	bl	12004 <_XEditResGetWidgetInfo@plt>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13ba4:	add	r1, r6, #12
   13ba8:	add	r0, sp, #32
   13bac:	bl	121a8 <_XEditResGetString8@plt>
   13bb0:	cmp	r0, #0
   13bb4:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13bb8:	add	r1, r6, #16
   13bbc:	add	r0, sp, #32
   13bc0:	bl	121a8 <_XEditResGetString8@plt>
   13bc4:	cmp	r0, #0
   13bc8:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13bcc:	add	r1, r6, #20
   13bd0:	add	r0, sp, #32
   13bd4:	bl	11f8c <_XEditResGet32@plt>
   13bd8:	cmp	r0, #0
   13bdc:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13be0:	ldrh	r3, [r5, #8]
   13be4:	add	r9, r9, #1
   13be8:	add	r8, r8, #24
   13bec:	cmp	r9, r3
   13bf0:	blt	13b88 <__snprintf_chk@plt+0x16bc>
   13bf4:	ldr	r6, [pc, #504]	; 13df4 <__snprintf_chk@plt+0x1928>
   13bf8:	ldr	r3, [r6]
   13bfc:	cmp	r3, #5
   13c00:	beq	13dbc <__snprintf_chk@plt+0x18f0>
   13c04:	mov	r2, #1
   13c08:	mov	r1, #5
   13c0c:	ldr	r0, [pc, #504]	; 13e0c <__snprintf_chk@plt+0x1940>
   13c10:	bl	179f4 <__snprintf_chk@plt+0x5528>
   13c14:	mov	r2, #1
   13c18:	mov	r1, #16
   13c1c:	ldr	r0, [pc, #492]	; 13e10 <__snprintf_chk@plt+0x1944>
   13c20:	bl	179f4 <__snprintf_chk@plt+0x5528>
   13c24:	ldr	r3, [r6]
   13c28:	cmp	r3, #5
   13c2c:	bne	13db0 <__snprintf_chk@plt+0x18e4>
   13c30:	ldr	r1, [pc, #476]	; 13e14 <__snprintf_chk@plt+0x1948>
   13c34:	ldr	r0, [r5, #4]
   13c38:	bl	11fb0 <strcmp@plt>
   13c3c:	cmp	r0, #0
   13c40:	bne	13880 <__snprintf_chk@plt+0x13b4>
   13c44:	ldr	r0, [pc, #460]	; 13e18 <__snprintf_chk@plt+0x194c>
   13c48:	bl	177c4 <__snprintf_chk@plt+0x52f8>
   13c4c:	b	13880 <__snprintf_chk@plt+0x13b4>
   13c50:	mov	r1, r0
   13c54:	mov	r3, #4
   13c58:	add	r0, sp, #32
   13c5c:	str	r3, [r1], #4
   13c60:	bl	12004 <_XEditResGetWidgetInfo@plt>
   13c64:	cmp	r0, #0
   13c68:	bne	13880 <__snprintf_chk@plt+0x13b4>
   13c6c:	b	13a74 <__snprintf_chk@plt+0x15a8>
   13c70:	mov	r0, r5
   13c74:	bl	16ba4 <__snprintf_chk@plt+0x46d8>
   13c78:	mov	r6, r0
   13c7c:	mov	r0, r5
   13c80:	bl	12da8 <__snprintf_chk@plt+0x8dc>
   13c84:	b	136e4 <__snprintf_chk@plt+0x1218>
   13c88:	mov	r0, r5
   13c8c:	bl	146bc <__snprintf_chk@plt+0x21f0>
   13c90:	mov	r6, r0
   13c94:	b	13c7c <__snprintf_chk@plt+0x17b0>
   13c98:	mov	r0, r5
   13c9c:	bl	157b0 <__snprintf_chk@plt+0x32e4>
   13ca0:	mov	r6, r0
   13ca4:	b	13c7c <__snprintf_chk@plt+0x17b0>
   13ca8:	ldr	r3, [pc, #364]	; 13e1c <__snprintf_chk@plt+0x1950>
   13cac:	mov	r1, r5
   13cb0:	ldr	r0, [r3]
   13cb4:	bl	18eb0 <__snprintf_chk@plt+0x69e4>
   13cb8:	mov	r0, r5
   13cbc:	bl	12da8 <__snprintf_chk@plt+0x8dc>
   13cc0:	b	13734 <__snprintf_chk@plt+0x1268>
   13cc4:	ldr	r1, [pc, #340]	; 13e20 <__snprintf_chk@plt+0x1954>
   13cc8:	mov	r3, #8192	; 0x2000
   13ccc:	add	r0, sp, #60	; 0x3c
   13cd0:	stm	sp, {r1, r2}
   13cd4:	mov	r1, r3
   13cd8:	mov	r2, #1
   13cdc:	bl	124cc <__snprintf_chk@plt>
   13ce0:	add	r0, sp, #60	; 0x3c
   13ce4:	bl	12280 <strlen@plt>
   13ce8:	add	r0, r0, #1
   13cec:	bl	12064 <XtMalloc@plt>
   13cf0:	add	r1, sp, #60	; 0x3c
   13cf4:	bl	12184 <strcpy@plt>
   13cf8:	mov	r6, r0
   13cfc:	b	13c7c <__snprintf_chk@plt+0x17b0>
   13d00:	add	r1, r8, #20
   13d04:	add	r0, sp, #32
   13d08:	bl	12124 <_XEditResGet16@plt>
   13d0c:	cmp	r0, #0
   13d10:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13d14:	ldrh	r1, [r8, #20]
   13d18:	mov	r0, #16
   13d1c:	bl	123c4 <XtCalloc@plt>
   13d20:	ldrh	r3, [r8, #20]
   13d24:	cmp	r3, #0
   13d28:	mov	r6, r0
   13d2c:	str	r0, [r8, #24]
   13d30:	bne	13d90 <__snprintf_chk@plt+0x18c4>
   13d34:	b	13938 <__snprintf_chk@plt+0x146c>
   13d38:	add	r1, r6, #4
   13d3c:	add	r0, sp, #32
   13d40:	bl	121a8 <_XEditResGetString8@plt>
   13d44:	cmp	r0, #0
   13d48:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13d4c:	add	r1, r6, #8
   13d50:	add	r0, sp, #32
   13d54:	bl	121a8 <_XEditResGetString8@plt>
   13d58:	cmp	r0, #0
   13d5c:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13d60:	add	r1, r6, #12
   13d64:	add	r0, sp, #32
   13d68:	bl	121a8 <_XEditResGetString8@plt>
   13d6c:	cmp	r0, #0
   13d70:	beq	13a74 <__snprintf_chk@plt+0x15a8>
   13d74:	ldrb	r3, [sp, #31]
   13d78:	add	r9, r9, #1
   13d7c:	str	r3, [r6]
   13d80:	ldrh	r3, [r8, #20]
   13d84:	cmp	r9, r3
   13d88:	bcs	13938 <__snprintf_chk@plt+0x146c>
   13d8c:	ldr	r6, [r8, #24]
   13d90:	add	r1, sp, #31
   13d94:	add	r0, sp, #32
   13d98:	bl	124a8 <_XEditResGet8@plt>
   13d9c:	add	r6, r6, r9, lsl #4
   13da0:	cmp	r0, #0
   13da4:	bne	13d38 <__snprintf_chk@plt+0x186c>
   13da8:	b	13a74 <__snprintf_chk@plt+0x15a8>
   13dac:	bl	120e8 <__stack_chk_fail@plt>
   13db0:	ldr	r0, [pc, #108]	; 13e24 <__snprintf_chk@plt+0x1958>
   13db4:	bl	177c4 <__snprintf_chk@plt+0x52f8>
   13db8:	b	13880 <__snprintf_chk@plt+0x13b4>
   13dbc:	add	r0, sp, #32
   13dc0:	add	r1, r5, #4
   13dc4:	bl	121a8 <_XEditResGetString8@plt>
   13dc8:	cmp	r0, #0
   13dcc:	bne	13c04 <__snprintf_chk@plt+0x1738>
   13dd0:	b	13a74 <__snprintf_chk@plt+0x15a8>
   13dd4:	andeq	ip, r2, r0, lsl #31
   13dd8:	andeq	lr, r2, r8, lsr #16
   13ddc:	andeq	lr, r2, r8, lsl r8
   13de0:	andeq	lr, r2, r4, asr #15
   13de4:	andeq	lr, r2, ip, ror #15
   13de8:	andeq	r2, r1, r0, ror ip
   13dec:	andeq	r2, r1, r0, lsr sp
   13df0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13df4:	andeq	lr, r2, ip, lsl r3
   13df8:	andeq	lr, r2, r8, lsl #5
   13dfc:			; <UNDEFINED> instruction: 0x0001b9b0
   13e00:	muleq	r2, r0, r7
   13e04:	andeq	sp, r2, sp, ror #14
   13e08:	andeq	fp, r1, r4, ror #19
   13e0c:	andeq	lr, r2, r0, lsl #18
   13e10:			; <UNDEFINED> instruction: 0x0002e8bc
   13e14:	ldrdeq	fp, [r1], -r0
   13e18:	ldrdeq	fp, [r1], -ip
   13e1c:	andeq	lr, r2, r4, lsl r8
   13e20:	andeq	fp, r1, r8, lsl #20
   13e24:	andeq	fp, r1, r0, ror #19
   13e28:	push	{r4, r5, r6, lr}
   13e2c:	mov	r2, #0
   13e30:	ldr	r1, [pc, #96]	; 13e98 <__snprintf_chk@plt+0x19cc>
   13e34:	mov	r5, r0
   13e38:	bl	122e0 <XInternAtom@plt>
   13e3c:	ldr	r4, [pc, #88]	; 13e9c <__snprintf_chk@plt+0x19d0>
   13e40:	mov	r2, #0
   13e44:	ldr	r1, [pc, #84]	; 13ea0 <__snprintf_chk@plt+0x19d4>
   13e48:	str	r0, [r4, #4]
   13e4c:	mov	r0, r5
   13e50:	bl	122e0 <XInternAtom@plt>
   13e54:	mov	r2, #0
   13e58:	ldr	r1, [pc, #68]	; 13ea4 <__snprintf_chk@plt+0x19d8>
   13e5c:	str	r0, [r4, #8]
   13e60:	mov	r0, r5
   13e64:	bl	122e0 <XInternAtom@plt>
   13e68:	mov	r2, #0
   13e6c:	ldr	r1, [pc, #52]	; 13ea8 <__snprintf_chk@plt+0x19dc>
   13e70:	str	r0, [r4, #16]
   13e74:	mov	r0, r5
   13e78:	bl	122e0 <XInternAtom@plt>
   13e7c:	mov	r2, #0
   13e80:	ldr	r1, [pc, #36]	; 13eac <__snprintf_chk@plt+0x19e0>
   13e84:	str	r0, [r4]
   13e88:	mov	r0, r5
   13e8c:	bl	122e0 <XInternAtom@plt>
   13e90:	str	r0, [r4, #12]
   13e94:	pop	{r4, r5, r6, pc}
   13e98:	andeq	fp, r1, ip, lsr #20
   13e9c:	andeq	lr, r2, r4, ror r7
   13ea0:	andeq	fp, r1, r8, lsr sl
   13ea4:	andeq	fp, r1, r8, asr #20
   13ea8:	andeq	fp, r1, r0, asr sl
   13eac:	andeq	fp, r1, r4, ror #20
   13eb0:	ldr	r3, [pc, #12]	; 13ec4 <__snprintf_chk@plt+0x19f8>
   13eb4:	ldrb	r0, [r3]
   13eb8:	add	r2, r0, #1
   13ebc:	strb	r2, [r3]
   13ec0:	bx	lr
   13ec4:	andeq	lr, r2, r8, lsl #5
   13ec8:	ldr	r3, [r0, #24]
   13ecc:	cmp	r3, #0
   13ed0:	bxeq	lr
   13ed4:	push	{r4, r5, r6, lr}
   13ed8:	mov	r5, r0
   13edc:	mov	r4, #0
   13ee0:	ldr	r3, [r5, #20]
   13ee4:	ldr	r0, [r3, r4, lsl #2]
   13ee8:	bl	12340 <XtDisplay@plt>
   13eec:	ldr	r3, [r5, #20]
   13ef0:	mov	r6, r0
   13ef4:	ldr	r0, [r3, r4, lsl #2]
   13ef8:	bl	120c4 <XtWindow@plt>
   13efc:	add	r4, r4, #1
   13f00:	mov	r1, r0
   13f04:	mov	r0, r6
   13f08:	bl	123ac <XUnmapWindow@plt>
   13f0c:	ldr	r3, [r5, #24]
   13f10:	cmp	r3, r4
   13f14:	bhi	13ee0 <__snprintf_chk@plt+0x1a14>
   13f18:	pop	{r4, r5, r6, pc}
   13f1c:	push	{r4, r5, r6, lr}
   13f20:	mov	r4, r0
   13f24:	ldr	r3, [r0, #24]
   13f28:	cmp	r3, #0
   13f2c:	beq	13f6c <__snprintf_chk@plt+0x1aa0>
   13f30:	mov	r5, #0
   13f34:	ldr	r3, [r4, #20]
   13f38:	ldr	r0, [r3, r5, lsl #2]
   13f3c:	bl	12340 <XtDisplay@plt>
   13f40:	ldr	r3, [r4, #20]
   13f44:	mov	r6, r0
   13f48:	ldr	r0, [r3, r5, lsl #2]
   13f4c:	bl	120c4 <XtWindow@plt>
   13f50:	add	r5, r5, #1
   13f54:	mov	r1, r0
   13f58:	mov	r0, r6
   13f5c:	bl	123ac <XUnmapWindow@plt>
   13f60:	ldr	r3, [r4, #24]
   13f64:	cmp	r3, r5
   13f68:	bhi	13f34 <__snprintf_chk@plt+0x1a68>
   13f6c:	ldr	r0, [r4]
   13f70:	bl	12340 <XtDisplay@plt>
   13f74:	bl	123d0 <XFlush@plt>
   13f78:	ldr	r3, [r4, #24]
   13f7c:	cmp	r3, #0
   13f80:	beq	13fa4 <__snprintf_chk@plt+0x1ad8>
   13f84:	mov	r5, #0
   13f88:	ldr	r3, [r4, #20]
   13f8c:	ldr	r0, [r3, r5, lsl #2]
   13f90:	bl	123e8 <XtDestroyWidget@plt>
   13f94:	ldr	r3, [r4, #24]
   13f98:	add	r5, r5, #1
   13f9c:	cmp	r3, r5
   13fa0:	bhi	13f88 <__snprintf_chk@plt+0x1abc>
   13fa4:	ldr	r0, [r4, #20]
   13fa8:	bl	12328 <XtFree@plt>
   13fac:	mov	r3, #0
   13fb0:	str	r3, [r4, #20]
   13fb4:	str	r3, [r4, #28]
   13fb8:	str	r3, [r4, #24]
   13fbc:	pop	{r4, r5, r6, pc}
   13fc0:	ldr	r3, [r0, #24]
   13fc4:	cmp	r3, #0
   13fc8:	bxeq	lr
   13fcc:	push	{r4, r5, r6, lr}
   13fd0:	mov	r5, r0
   13fd4:	mov	r4, #0
   13fd8:	ldr	r3, [r5, #20]
   13fdc:	ldr	r0, [r3, r4, lsl #2]
   13fe0:	bl	12208 <XtRealizeWidget@plt>
   13fe4:	ldr	r3, [r5, #20]
   13fe8:	ldr	r0, [r3, r4, lsl #2]
   13fec:	bl	12340 <XtDisplay@plt>
   13ff0:	ldr	r3, [r5, #20]
   13ff4:	mov	r6, r0
   13ff8:	ldr	r0, [r3, r4, lsl #2]
   13ffc:	bl	120c4 <XtWindow@plt>
   14000:	add	r4, r4, #1
   14004:	mov	r1, r0
   14008:	mov	r0, r6
   1400c:	bl	122d4 <XMapRaised@plt>
   14010:	ldr	r3, [r5, #24]
   14014:	cmp	r3, r4
   14018:	bhi	13fd8 <__snprintf_chk@plt+0x1b0c>
   1401c:	pop	{r4, r5, r6, pc}
   14020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14024:	sub	sp, sp, #8320	; 0x2080
   14028:	ldr	r4, [pc, #912]	; 143c0 <__snprintf_chk@plt+0x1ef4>
   1402c:	sub	sp, sp, #36	; 0x24
   14030:	mov	r8, r1
   14034:	add	ip, sp, #8320	; 0x2080
   14038:	ldr	r3, [r4]
   1403c:	add	ip, ip, #28
   14040:	mov	r6, r0
   14044:	mov	r7, r2
   14048:	ldr	r1, [r1, #8]
   1404c:	ldrh	r2, [r8, #4]
   14050:	ldr	r0, [r0, #4]
   14054:	str	r3, [ip]
   14058:	bl	16490 <__snprintf_chk@plt+0x3fc4>
   1405c:	subs	r5, r0, #0
   14060:	beq	14180 <__snprintf_chk@plt+0x1cb4>
   14064:	ldrb	r3, [r8, #16]
   14068:	cmp	r3, #0
   1406c:	bne	14154 <__snprintf_chk@plt+0x1c88>
   14070:	ldrb	r3, [r8, #24]
   14074:	cmp	r3, #0
   14078:	bne	140d8 <__snprintf_chk@plt+0x1c0c>
   1407c:	ldr	r3, [r5, #8]
   14080:	ldr	r2, [pc, #828]	; 143c4 <__snprintf_chk@plt+0x1ef8>
   14084:	str	r3, [sp, #8]
   14088:	ldr	r1, [r5]
   1408c:	mov	r3, #8192	; 0x2000
   14090:	str	r1, [sp, #4]
   14094:	str	r2, [sp]
   14098:	mov	r1, r3
   1409c:	add	r0, sp, #156	; 0x9c
   140a0:	mov	r2, #1
   140a4:	bl	124cc <__snprintf_chk@plt>
   140a8:	add	r1, sp, #156	; 0x9c
   140ac:	mov	r0, r7
   140b0:	bl	16430 <__snprintf_chk@plt+0x3f64>
   140b4:	add	r3, sp, #8320	; 0x2080
   140b8:	add	r3, r3, #28
   140bc:	ldr	r2, [r3]
   140c0:	ldr	r3, [r4]
   140c4:	cmp	r2, r3
   140c8:	bne	143bc <__snprintf_chk@plt+0x1ef0>
   140cc:	add	sp, sp, #8320	; 0x2080
   140d0:	add	sp, sp, #36	; 0x24
   140d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d8:	ldrsh	r3, [r8, #26]
   140dc:	ldr	r0, [r6]
   140e0:	ldrh	r9, [r8, #30]
   140e4:	str	r3, [sp, #16]
   140e8:	ldrsh	r3, [r8, #28]
   140ec:	ldrh	fp, [r8, #34]	; 0x22
   140f0:	ldrh	sl, [r8, #32]
   140f4:	str	r3, [sp, #20]
   140f8:	bl	12340 <XtDisplay@plt>
   140fc:	ldr	r1, [r5, #12]
   14100:	cmp	r1, #2
   14104:	mov	r8, r0
   14108:	beq	14164 <__snprintf_chk@plt+0x1c98>
   1410c:	cmp	r1, #0
   14110:	bne	141b4 <__snprintf_chk@plt+0x1ce8>
   14114:	ldr	r3, [r5, #8]
   14118:	ldr	r2, [pc, #680]	; 143c8 <__snprintf_chk@plt+0x1efc>
   1411c:	str	r3, [sp, #8]
   14120:	ldr	r1, [r5]
   14124:	mov	r3, #8192	; 0x2000
   14128:	add	r5, sp, #156	; 0x9c
   1412c:	str	r1, [sp, #4]
   14130:	str	r2, [sp]
   14134:	mov	r1, r3
   14138:	mov	r0, r5
   1413c:	mov	r2, #1
   14140:	bl	124cc <__snprintf_chk@plt>
   14144:	mov	r1, r5
   14148:	mov	r0, r7
   1414c:	bl	16430 <__snprintf_chk@plt+0x3f64>
   14150:	b	140b4 <__snprintf_chk@plt+0x1be8>
   14154:	ldr	r1, [r8, #20]
   14158:	mov	r0, r7
   1415c:	bl	16430 <__snprintf_chk@plt+0x3f64>
   14160:	b	140b4 <__snprintf_chk@plt+0x1be8>
   14164:	ldr	r3, [r5, #16]
   14168:	ldr	r1, [r3, #12]
   1416c:	cmp	r1, #0
   14170:	bne	141b4 <__snprintf_chk@plt+0x1ce8>
   14174:	ldr	r3, [r5, #8]
   14178:	ldr	r2, [pc, #588]	; 143cc <__snprintf_chk@plt+0x1f00>
   1417c:	b	1411c <__snprintf_chk@plt+0x1c50>
   14180:	ldr	lr, [pc, #584]	; 143d0 <__snprintf_chk@plt+0x1f04>
   14184:	add	ip, sp, #156	; 0x9c
   14188:	ldm	lr!, {r0, r1, r2, r3}
   1418c:	stmia	ip!, {r0, r1, r2, r3}
   14190:	ldm	lr!, {r0, r1, r2, r3}
   14194:	stmia	ip!, {r0, r1, r2, r3}
   14198:	ldm	lr, {r0, r1, r2, r3}
   1419c:	stmia	ip!, {r0, r1, r2}
   141a0:	add	r1, sp, #156	; 0x9c
   141a4:	mov	r0, r7
   141a8:	strb	r3, [ip]
   141ac:	bl	16430 <__snprintf_chk@plt+0x3f64>
   141b0:	b	140b4 <__snprintf_chk@plt+0x1be8>
   141b4:	ldr	r2, [pc, #536]	; 143d4 <__snprintf_chk@plt+0x1f08>
   141b8:	mov	r3, #0
   141bc:	ldr	r0, [pc, #532]	; 143d8 <__snprintf_chk@plt+0x1f0c>
   141c0:	str	r3, [r2]
   141c4:	str	r1, [sp, #28]
   141c8:	str	r3, [sp, #24]
   141cc:	bl	122b0 <XSetErrorHandler@plt>
   141d0:	ldr	ip, [pc, #516]	; 143dc <__snprintf_chk@plt+0x1f10>
   141d4:	ldr	r3, [pc, #516]	; 143e0 <__snprintf_chk@plt+0x1f14>
   141d8:	ldr	r2, [r8, #96]	; 0x60
   141dc:	ldr	r1, [sp, #28]
   141e0:	add	r2, r2, #1
   141e4:	str	r2, [ip]
   141e8:	add	r2, sp, #40	; 0x28
   141ec:	str	r0, [r3]
   141f0:	mov	r0, r8
   141f4:	bl	123dc <XGetWindowAttributes@plt>
   141f8:	ldr	r3, [sp, #24]
   141fc:	mov	r0, r8
   14200:	mov	r1, r3
   14204:	bl	1234c <XSync@plt>
   14208:	ldr	r3, [pc, #464]	; 143e0 <__snprintf_chk@plt+0x1f14>
   1420c:	ldr	r0, [r3]
   14210:	bl	122b0 <XSetErrorHandler@plt>
   14214:	ldr	r2, [pc, #440]	; 143d4 <__snprintf_chk@plt+0x1f08>
   14218:	ldr	r2, [r2]
   1421c:	cmp	r2, #1
   14220:	beq	14364 <__snprintf_chk@plt+0x1e98>
   14224:	ldr	r8, [sp, #108]	; 0x6c
   14228:	cmp	r8, #2
   1422c:	beq	14274 <__snprintf_chk@plt+0x1da8>
   14230:	ldr	r3, [r5, #8]
   14234:	ldr	r2, [pc, #424]	; 143e4 <__snprintf_chk@plt+0x1f18>
   14238:	str	r3, [sp, #8]
   1423c:	add	r3, sp, #156	; 0x9c
   14240:	ldr	r1, [r5]
   14244:	str	r3, [sp, #16]
   14248:	mov	r3, #8192	; 0x2000
   1424c:	str	r1, [sp, #4]
   14250:	str	r2, [sp]
   14254:	mov	r1, r3
   14258:	ldr	r0, [sp, #16]
   1425c:	mov	r2, #1
   14260:	bl	124cc <__snprintf_chk@plt>
   14264:	ldr	r1, [sp, #16]
   14268:	mov	r0, r7
   1426c:	bl	16430 <__snprintf_chk@plt+0x3f64>
   14270:	b	140b4 <__snprintf_chk@plt+0x1be8>
   14274:	ldr	r0, [sp, #16]
   14278:	ldr	r3, [pc, #360]	; 143e8 <__snprintf_chk@plt+0x1f1c>
   1427c:	ldr	r5, [pc, #360]	; 143ec <__snprintf_chk@plt+0x1f20>
   14280:	ldr	r2, [pc, #360]	; 143f0 <__snprintf_chk@plt+0x1f24>
   14284:	str	r0, [sp, #136]	; 0x88
   14288:	ldr	r0, [sp, #20]
   1428c:	ldr	ip, [r3, #12]
   14290:	str	r0, [sp, #144]	; 0x90
   14294:	sub	r3, r5, #832	; 0x340
   14298:	mov	r0, #3
   1429c:	ldr	r1, [r2]
   142a0:	sub	r3, r3, #1
   142a4:	ldr	r2, [r6]
   142a8:	str	r0, [sp]
   142ac:	add	r0, r5, #2
   142b0:	str	r3, [sp, #148]	; 0x94
   142b4:	str	r0, [sp, #140]	; 0x8c
   142b8:	add	r3, sp, #132	; 0x84
   142bc:	ldr	r0, [pc, #304]	; 143f4 <__snprintf_chk@plt+0x1f28>
   142c0:	str	r5, [sp, #132]	; 0x84
   142c4:	str	ip, [sp, #152]	; 0x98
   142c8:	bl	12034 <XtCreatePopupShell@plt>
   142cc:	sub	ip, r5, #760	; 0x2f8
   142d0:	add	r3, sp, #38	; 0x26
   142d4:	sub	ip, ip, #1
   142d8:	add	r1, sp, #132	; 0x84
   142dc:	mov	r2, #1
   142e0:	str	r3, [sp, #136]	; 0x88
   142e4:	str	ip, [sp, #132]	; 0x84
   142e8:	add	r9, r9, fp
   142ec:	add	sl, sl, fp
   142f0:	mov	r7, r0
   142f4:	bl	120ac <XtGetValues@plt>
   142f8:	ldrh	r3, [sp, #38]	; 0x26
   142fc:	sub	ip, r5, #648	; 0x288
   14300:	add	r1, sp, #132	; 0x84
   14304:	mov	r2, r8
   14308:	lsl	r3, r3, #1
   1430c:	sub	ip, ip, #3
   14310:	uxth	r3, r3
   14314:	sub	r9, r9, r3
   14318:	sub	sl, sl, r3
   1431c:	sub	r5, r5, #13
   14320:	mov	r0, r7
   14324:	strh	r3, [sp, #38]	; 0x26
   14328:	str	r9, [sp, #136]	; 0x88
   1432c:	str	sl, [sp, #144]	; 0x90
   14330:	str	ip, [sp, #140]	; 0x8c
   14334:	str	r5, [sp, #132]	; 0x84
   14338:	bl	12088 <XtSetValues@plt>
   1433c:	ldrd	r2, [r6, #24]
   14340:	add	r1, r2, #1
   14344:	cmp	r1, r3
   14348:	bhi	1439c <__snprintf_chk@plt+0x1ed0>
   1434c:	ldr	r0, [r6, #20]
   14350:	str	r7, [r0, r2, lsl #2]
   14354:	ldr	r3, [r6, #24]
   14358:	add	r3, r3, #1
   1435c:	str	r3, [r6, #24]
   14360:	b	140b4 <__snprintf_chk@plt+0x1be8>
   14364:	ldr	r3, [r5, #8]
   14368:	ldr	r1, [pc, #136]	; 143f8 <__snprintf_chk@plt+0x1f2c>
   1436c:	str	r3, [sp, #8]
   14370:	ldr	r0, [r5]
   14374:	mov	r3, #8192	; 0x2000
   14378:	str	r0, [sp, #4]
   1437c:	str	r1, [sp]
   14380:	add	r0, sp, #156	; 0x9c
   14384:	mov	r1, r3
   14388:	bl	124cc <__snprintf_chk@plt>
   1438c:	add	r1, sp, #156	; 0x9c
   14390:	mov	r0, r7
   14394:	bl	16430 <__snprintf_chk@plt+0x3f64>
   14398:	b	140b4 <__snprintf_chk@plt+0x1be8>
   1439c:	add	r3, r3, #5
   143a0:	str	r3, [r6, #28]
   143a4:	lsl	r1, r3, #2
   143a8:	ldr	r0, [r6, #20]
   143ac:	bl	1219c <XtRealloc@plt>
   143b0:	ldr	r2, [r6, #24]
   143b4:	str	r0, [r6, #20]
   143b8:	b	14350 <__snprintf_chk@plt+0x1e84>
   143bc:	bl	120e8 <__stack_chk_fail@plt>
   143c0:	andeq	ip, r2, r0, lsl #31
   143c4:	andeq	fp, r1, r0, lsr #24
   143c8:	andeq	fp, r1, r8, ror ip
   143cc:	andeq	fp, r1, r8, asr #24
   143d0:	strdeq	fp, [r1], -r0
   143d4:	andeq	lr, r2, r0, asr #15
   143d8:	andeq	r6, r1, r4, asr #9
   143dc:	andeq	lr, r2, ip, lsl #16
   143e0:	andeq	lr, r2, r8, lsl #16
   143e4:	ldrdeq	fp, [r1], -r4
   143e8:	andeq	lr, r2, ip, ror #15
   143ec:	andeq	sp, r2, r5, lsl #16
   143f0:	andeq	lr, r2, r0, lsr r7
   143f4:	strdeq	fp, [r1], -ip
   143f8:	andeq	fp, r1, r0, lsr #25
   143fc:	push	{r4, r5, r6, r7, r8, lr}
   14400:	sub	sp, sp, #8192	; 0x2000
   14404:	ldr	r4, [pc, #224]	; 144ec <__snprintf_chk@plt+0x2020>
   14408:	sub	sp, sp, #16
   1440c:	add	ip, sp, #8192	; 0x2000
   14410:	ldr	r6, [pc, #216]	; 144f0 <__snprintf_chk@plt+0x2024>
   14414:	add	ip, ip, #12
   14418:	ldr	r1, [r4]
   1441c:	ldr	r5, [pc, #208]	; 144f4 <__snprintf_chk@plt+0x2028>
   14420:	str	r1, [ip]
   14424:	ldr	r3, [r6, #56]	; 0x38
   14428:	ldr	r2, [pc, #200]	; 144f8 <__snprintf_chk@plt+0x202c>
   1442c:	mov	r7, r0
   14430:	mov	r1, #8192	; 0x2000
   14434:	add	r0, sp, #12
   14438:	bl	12304 <snprintf@plt>
   1443c:	add	r1, sp, #12
   14440:	ldr	r0, [r5, #12]
   14444:	bl	16304 <__snprintf_chk@plt+0x3e38>
   14448:	add	r3, sp, #16
   1444c:	sub	r1, r3, #12
   14450:	add	r2, sp, #8
   14454:	mov	r0, r7
   14458:	bl	13000 <__snprintf_chk@plt+0xb34>
   1445c:	subs	r1, r0, #0
   14460:	beq	14478 <__snprintf_chk@plt+0x1fac>
   14464:	ldr	r3, [pc, #144]	; 144fc <__snprintf_chk@plt+0x2030>
   14468:	ldr	r0, [r3]
   1446c:	bl	164b4 <__snprintf_chk@plt+0x3fe8>
   14470:	subs	r8, r0, #0
   14474:	bne	144a8 <__snprintf_chk@plt+0x1fdc>
   14478:	ldr	r1, [r6, #60]	; 0x3c
   1447c:	ldr	r0, [r5, #12]
   14480:	bl	16304 <__snprintf_chk@plt+0x3e38>
   14484:	add	r3, sp, #8192	; 0x2000
   14488:	add	r3, r3, #12
   1448c:	ldr	r2, [r3]
   14490:	ldr	r3, [r4]
   14494:	cmp	r2, r3
   14498:	bne	144e8 <__snprintf_chk@plt+0x201c>
   1449c:	add	sp, sp, #8192	; 0x2000
   144a0:	add	sp, sp, #16
   144a4:	pop	{r4, r5, r6, r7, r8, pc}
   144a8:	ldr	r0, [pc, #80]	; 14500 <__snprintf_chk@plt+0x2034>
   144ac:	bl	12418 <_XEditResResetStream@plt>
   144b0:	mov	r1, r8
   144b4:	ldr	r0, [pc, #68]	; 14500 <__snprintf_chk@plt+0x2034>
   144b8:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   144bc:	ldrsh	r1, [sp, #4]
   144c0:	ldr	r0, [pc, #56]	; 14500 <__snprintf_chk@plt+0x2034>
   144c4:	bl	1249c <_XEditResPut16@plt>
   144c8:	ldrsh	r1, [sp, #8]
   144cc:	ldr	r0, [pc, #44]	; 14500 <__snprintf_chk@plt+0x2034>
   144d0:	bl	1249c <_XEditResPut16@plt>
   144d4:	mov	r0, r7
   144d8:	mov	r2, #0
   144dc:	mov	r1, #2
   144e0:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   144e4:	b	14484 <__snprintf_chk@plt+0x1fb8>
   144e8:	bl	120e8 <__stack_chk_fail@plt>
   144ec:	andeq	ip, r2, r0, lsl #31
   144f0:	andeq	lr, r2, r8, lsr #16
   144f4:	andeq	lr, r2, r8, lsl r8
   144f8:	andeq	fp, r1, r4, lsl #26
   144fc:	muleq	r2, r0, r7
   14500:	andeq	lr, r2, ip, asr #15
   14504:	push	{r4, r5, r6, r7, r8, lr}
   14508:	subs	r5, r0, #0
   1450c:	beq	14598 <__snprintf_chk@plt+0x20cc>
   14510:	ldr	r3, [r5, #12]
   14514:	cmp	r3, #0
   14518:	beq	14580 <__snprintf_chk@plt+0x20b4>
   1451c:	ldr	r0, [pc, #140]	; 145b0 <__snprintf_chk@plt+0x20e4>
   14520:	bl	12418 <_XEditResResetStream@plt>
   14524:	ldrh	r1, [r5, #12]
   14528:	ldr	r0, [pc, #128]	; 145b0 <__snprintf_chk@plt+0x20e4>
   1452c:	bl	1249c <_XEditResPut16@plt>
   14530:	ldr	r3, [r5, #12]
   14534:	cmp	r3, #0
   14538:	beq	1456c <__snprintf_chk@plt+0x20a0>
   1453c:	ldr	r7, [pc, #112]	; 145b4 <__snprintf_chk@plt+0x20e8>
   14540:	ldr	r6, [pc, #104]	; 145b0 <__snprintf_chk@plt+0x20e4>
   14544:	mov	r4, #0
   14548:	ldr	r3, [r7]
   1454c:	mov	r0, r6
   14550:	ldr	r3, [r3, #8]
   14554:	ldr	r1, [r3, r4, lsl #2]
   14558:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   1455c:	ldr	r3, [r5, #12]
   14560:	add	r4, r4, #1
   14564:	cmp	r3, r4
   14568:	bhi	14548 <__snprintf_chk@plt+0x207c>
   1456c:	ldr	r0, [r5]
   14570:	mov	r2, #0
   14574:	mov	r1, #3
   14578:	pop	{r4, r5, r6, r7, r8, lr}
   1457c:	b	131c0 <__snprintf_chk@plt+0xcf4>
   14580:	ldr	r2, [pc, #48]	; 145b8 <__snprintf_chk@plt+0x20ec>
   14584:	ldr	r3, [pc, #48]	; 145bc <__snprintf_chk@plt+0x20f0>
   14588:	pop	{r4, r5, r6, r7, r8, lr}
   1458c:	ldr	r1, [r2, #72]	; 0x48
   14590:	ldr	r0, [r3, #12]
   14594:	b	16304 <__snprintf_chk@plt+0x3e38>
   14598:	ldr	r2, [pc, #24]	; 145b8 <__snprintf_chk@plt+0x20ec>
   1459c:	ldr	r3, [pc, #24]	; 145bc <__snprintf_chk@plt+0x20f0>
   145a0:	pop	{r4, r5, r6, r7, r8, lr}
   145a4:	ldr	r1, [r2, #68]	; 0x44
   145a8:	ldr	r0, [r3, #12]
   145ac:	b	16304 <__snprintf_chk@plt+0x3e38>
   145b0:	andeq	lr, r2, ip, asr #15
   145b4:	muleq	r2, r0, r7
   145b8:	andeq	lr, r2, r8, lsr #16
   145bc:	andeq	lr, r2, r8, lsl r8
   145c0:	push	{r4, r5, r6, lr}
   145c4:	mov	r3, r0
   145c8:	ldr	r5, [pc, #216]	; 146a8 <__snprintf_chk@plt+0x21dc>
   145cc:	sub	sp, sp, #8192	; 0x2000
   145d0:	ldr	r4, [pc, #212]	; 146ac <__snprintf_chk@plt+0x21e0>
   145d4:	ldr	r1, [r5]
   145d8:	sub	sp, sp, #24
   145dc:	ldrh	r2, [r0, #4]
   145e0:	ldr	r0, [r1, #4]
   145e4:	ldr	r1, [r3, #8]
   145e8:	add	r3, sp, #8192	; 0x2000
   145ec:	ldr	ip, [r4]
   145f0:	add	r3, r3, #20
   145f4:	str	ip, [r3]
   145f8:	bl	16490 <__snprintf_chk@plt+0x3fc4>
   145fc:	subs	r6, r0, #0
   14600:	beq	14678 <__snprintf_chk@plt+0x21ac>
   14604:	bl	19654 <__snprintf_chk@plt+0x7188>
   14608:	ldr	r2, [r6, #24]
   1460c:	ldr	r3, [pc, #156]	; 146b0 <__snprintf_chk@plt+0x21e4>
   14610:	add	r0, sp, #20
   14614:	ldr	r2, [r2, #4]
   14618:	ldr	r1, [r3, #48]	; 0x30
   1461c:	mov	r3, #8192	; 0x2000
   14620:	ldr	ip, [r2, #4]
   14624:	str	ip, [sp, #8]
   14628:	ldr	r2, [r2]
   1462c:	stm	sp, {r1, r2}
   14630:	mov	r1, r3
   14634:	mov	r2, #1
   14638:	bl	124cc <__snprintf_chk@plt>
   1463c:	ldr	r3, [pc, #112]	; 146b4 <__snprintf_chk@plt+0x21e8>
   14640:	add	r1, sp, #20
   14644:	ldr	r0, [r3, #12]
   14648:	bl	16304 <__snprintf_chk@plt+0x3e38>
   1464c:	ldr	r0, [r5]
   14650:	bl	14504 <__snprintf_chk@plt+0x2038>
   14654:	add	r3, sp, #8192	; 0x2000
   14658:	add	r3, r3, #20
   1465c:	ldr	r2, [r3]
   14660:	ldr	r3, [r4]
   14664:	cmp	r2, r3
   14668:	bne	146a4 <__snprintf_chk@plt+0x21d8>
   1466c:	add	sp, sp, #8192	; 0x2000
   14670:	add	sp, sp, #24
   14674:	pop	{r4, r5, r6, pc}
   14678:	ldr	r3, [pc, #48]	; 146b0 <__snprintf_chk@plt+0x21e4>
   1467c:	add	r0, sp, #20
   14680:	ldr	r2, [pc, #48]	; 146b8 <__snprintf_chk@plt+0x21ec>
   14684:	ldr	r3, [r3, #52]	; 0x34
   14688:	mov	r1, #8192	; 0x2000
   1468c:	bl	12304 <snprintf@plt>
   14690:	ldr	r3, [pc, #28]	; 146b4 <__snprintf_chk@plt+0x21e8>
   14694:	add	r1, sp, #20
   14698:	ldr	r0, [r3, #12]
   1469c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   146a0:	b	14654 <__snprintf_chk@plt+0x2188>
   146a4:	bl	120e8 <__stack_chk_fail@plt>
   146a8:	muleq	r2, r0, r7
   146ac:	andeq	ip, r2, r0, lsl #31
   146b0:	andeq	lr, r2, r8, lsr #16
   146b4:	andeq	lr, r2, r8, lsl r8
   146b8:	andeq	fp, r1, r4, lsl #26
   146bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146c0:	mov	r4, #0
   146c4:	ldrh	r2, [r0, #4]
   146c8:	ldr	r3, [pc, #276]	; 147e4 <__snprintf_chk@plt+0x2318>
   146cc:	sub	sp, sp, #12
   146d0:	cmp	r2, r4
   146d4:	ldr	r3, [r3]
   146d8:	str	r4, [sp]
   146dc:	str	r3, [sp, #4]
   146e0:	ldreq	r7, [pc, #256]	; 147e8 <__snprintf_chk@plt+0x231c>
   146e4:	beq	1471c <__snprintf_chk@plt+0x2250>
   146e8:	ldr	r7, [pc, #248]	; 147e8 <__snprintf_chk@plt+0x231c>
   146ec:	mov	r6, r0
   146f0:	mov	r5, r4
   146f4:	ldr	r1, [r6, #8]
   146f8:	mov	r2, sp
   146fc:	add	r1, r1, r4
   14700:	ldr	r0, [r7]
   14704:	bl	14020 <__snprintf_chk@plt+0x1b54>
   14708:	ldrh	r3, [r6, #4]
   1470c:	add	r5, r5, #1
   14710:	add	r4, r4, #36	; 0x24
   14714:	cmp	r3, r5
   14718:	bgt	146f4 <__snprintf_chk@plt+0x2228>
   1471c:	ldr	r7, [r7]
   14720:	ldr	r0, [r7]
   14724:	bl	1213c <XtWidgetToApplicationContext@plt>
   14728:	ldr	r3, [r7, #20]
   1472c:	cmp	r3, #0
   14730:	mov	r8, r0
   14734:	beq	147c0 <__snprintf_chk@plt+0x22f4>
   14738:	ldr	r9, [pc, #172]	; 147ec <__snprintf_chk@plt+0x2320>
   1473c:	ldmib	r9, {r3, r5}
   14740:	add	r5, r5, r5, lsr #31
   14744:	cmp	r3, #1
   14748:	asr	r5, r5, #1
   1474c:	movle	r1, r5
   14750:	ble	147a0 <__snprintf_chk@plt+0x22d4>
   14754:	ldr	fp, [pc, #148]	; 147f0 <__snprintf_chk@plt+0x2324>
   14758:	ldr	sl, [pc, #148]	; 147f4 <__snprintf_chk@plt+0x2328>
   1475c:	mov	r1, r5
   14760:	mov	r6, #1
   14764:	add	r4, r5, r1
   14768:	mov	r3, r7
   1476c:	mov	r2, fp
   14770:	mov	r0, r8
   14774:	bl	1207c <XtAppAddTimeOut@plt>
   14778:	mov	r1, r4
   1477c:	mov	r3, r7
   14780:	mov	r2, sl
   14784:	mov	r0, r8
   14788:	bl	1207c <XtAppAddTimeOut@plt>
   1478c:	ldr	r3, [r9, #4]
   14790:	add	r6, r6, #1
   14794:	cmp	r6, r3
   14798:	add	r1, r5, r4
   1479c:	blt	14764 <__snprintf_chk@plt+0x2298>
   147a0:	add	r1, r5, r1
   147a4:	mov	r0, r8
   147a8:	mov	r3, r7
   147ac:	ldr	r2, [pc, #68]	; 147f8 <__snprintf_chk@plt+0x232c>
   147b0:	bl	1207c <XtAppAddTimeOut@plt>
   147b4:	mov	r0, r7
   147b8:	mov	r1, #0
   147bc:	bl	13fc0 <__snprintf_chk@plt+0x1af4>
   147c0:	ldr	r3, [pc, #28]	; 147e4 <__snprintf_chk@plt+0x2318>
   147c4:	ldr	r2, [sp, #4]
   147c8:	ldr	r0, [sp]
   147cc:	ldr	r3, [r3]
   147d0:	cmp	r2, r3
   147d4:	bne	147e0 <__snprintf_chk@plt+0x2314>
   147d8:	add	sp, sp, #12
   147dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147e0:	bl	120e8 <__stack_chk_fail@plt>
   147e4:	andeq	ip, r2, r0, lsl #31
   147e8:	muleq	r2, r0, r7
   147ec:	andeq	lr, r2, ip, ror #15
   147f0:	andeq	r3, r1, r8, asr #29
   147f4:	andeq	r3, r1, r0, asr #31
   147f8:	andeq	r3, r1, ip, lsl pc
   147fc:	push	{r4, r5, r6, lr}
   14800:	mov	r4, r2
   14804:	ldr	r5, [pc, #72]	; 14854 <__snprintf_chk@plt+0x2388>
   14808:	ldrb	r3, [r5, #20]
   1480c:	cmp	r3, #0
   14810:	moveq	r3, #1
   14814:	strbeq	r3, [r5, #20]
   14818:	bne	14848 <__snprintf_chk@plt+0x237c>
   1481c:	cmp	r4, #0
   14820:	beq	14840 <__snprintf_chk@plt+0x2374>
   14824:	mov	r0, r4
   14828:	bl	12280 <strlen@plt>
   1482c:	add	r0, r0, #1
   14830:	bl	12064 <XtMalloc@plt>
   14834:	mov	r1, r4
   14838:	bl	12184 <strcpy@plt>
   1483c:	mov	r4, r0
   14840:	str	r4, [r5, #16]
   14844:	pop	{r4, r5, r6, pc}
   14848:	ldr	r0, [r5, #16]
   1484c:	bl	12328 <XtFree@plt>
   14850:	b	1481c <__snprintf_chk@plt+0x2350>
   14854:	andeq	lr, r2, ip, ror #15
   14858:	push	{r4, r5, r6, r7, r8, lr}
   1485c:	mov	r4, r1
   14860:	ldr	r5, [pc, #164]	; 1490c <__snprintf_chk@plt+0x2440>
   14864:	sub	sp, sp, #16
   14868:	add	r2, sp, #8
   1486c:	ldr	r3, [r5]
   14870:	add	r1, sp, #4
   14874:	str	r3, [sp, #12]
   14878:	mov	r8, r0
   1487c:	bl	169b0 <__snprintf_chk@plt+0x44e4>
   14880:	ldr	r1, [r4]
   14884:	ldr	r0, [sp, #4]
   14888:	bl	16f9c <__snprintf_chk@plt+0x4ad0>
   1488c:	ldr	r1, [r4, #4]
   14890:	mov	r7, r0
   14894:	ldr	r0, [sp, #8]
   14898:	bl	16f9c <__snprintf_chk@plt+0x4ad0>
   1489c:	mov	r1, r7
   148a0:	mov	r2, r0
   148a4:	mov	r6, r0
   148a8:	ldr	r0, [r4, #16]
   148ac:	bl	16f54 <__snprintf_chk@plt+0x4a88>
   148b0:	cmp	r0, #0
   148b4:	beq	148d0 <__snprintf_chk@plt+0x2404>
   148b8:	mov	r1, r8
   148bc:	ldr	r0, [r4, #12]
   148c0:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   148c4:	ldrh	r3, [r4, #8]
   148c8:	add	r3, r3, #1
   148cc:	strh	r3, [r4, #8]
   148d0:	ldr	r0, [sp, #4]
   148d4:	bl	12328 <XtFree@plt>
   148d8:	ldr	r0, [sp, #8]
   148dc:	bl	12328 <XtFree@plt>
   148e0:	mov	r0, r7
   148e4:	bl	12328 <XtFree@plt>
   148e8:	mov	r0, r6
   148ec:	bl	12328 <XtFree@plt>
   148f0:	ldr	r2, [sp, #12]
   148f4:	ldr	r3, [r5]
   148f8:	cmp	r2, r3
   148fc:	bne	14908 <__snprintf_chk@plt+0x243c>
   14900:	add	sp, sp, #16
   14904:	pop	{r4, r5, r6, r7, r8, pc}
   14908:	bl	120e8 <__stack_chk_fail@plt>
   1490c:	andeq	ip, r2, r0, lsl #31
   14910:	push	{r4, r5, r6, r7, r8, lr}
   14914:	mov	r4, r1
   14918:	ldr	r5, [pc, #180]	; 149d4 <__snprintf_chk@plt+0x2508>
   1491c:	sub	sp, sp, #24
   14920:	add	r2, sp, #8
   14924:	ldr	r3, [r5]
   14928:	add	r1, sp, #4
   1492c:	str	r3, [sp, #20]
   14930:	mov	r8, r0
   14934:	bl	169b0 <__snprintf_chk@plt+0x44e4>
   14938:	ldr	r1, [r4]
   1493c:	ldr	r0, [sp, #4]
   14940:	bl	16f9c <__snprintf_chk@plt+0x4ad0>
   14944:	ldr	r1, [r4, #4]
   14948:	mov	r7, r0
   1494c:	ldr	r0, [sp, #8]
   14950:	bl	16f9c <__snprintf_chk@plt+0x4ad0>
   14954:	mov	r1, r7
   14958:	mov	r2, r0
   1495c:	mov	r6, r0
   14960:	ldr	r0, [r4, #16]
   14964:	bl	16f54 <__snprintf_chk@plt+0x4a88>
   14968:	ldr	r3, [pc, #104]	; 149d8 <__snprintf_chk@plt+0x250c>
   1496c:	mov	r2, #1
   14970:	add	r1, sp, #12
   14974:	str	r3, [sp, #12]
   14978:	mov	r4, r0
   1497c:	ldr	r0, [r8, #36]	; 0x24
   14980:	str	r4, [sp, #16]
   14984:	bl	12088 <XtSetValues@plt>
   14988:	mov	r2, r4
   1498c:	mov	r1, r8
   14990:	ldr	r0, [r8, #36]	; 0x24
   14994:	bl	18b14 <__snprintf_chk@plt+0x6648>
   14998:	ldr	r0, [sp, #4]
   1499c:	bl	12328 <XtFree@plt>
   149a0:	ldr	r0, [sp, #8]
   149a4:	bl	12328 <XtFree@plt>
   149a8:	mov	r0, r7
   149ac:	bl	12328 <XtFree@plt>
   149b0:	mov	r0, r6
   149b4:	bl	12328 <XtFree@plt>
   149b8:	ldr	r2, [sp, #20]
   149bc:	ldr	r3, [r5]
   149c0:	cmp	r2, r3
   149c4:	bne	149d0 <__snprintf_chk@plt+0x2504>
   149c8:	add	sp, sp, #24
   149cc:	pop	{r4, r5, r6, r7, r8, pc}
   149d0:	bl	120e8 <__stack_chk_fail@plt>
   149d4:	andeq	ip, r2, r0, lsl #31
   149d8:	andeq	fp, r1, r8, lsl #26
   149dc:	push	{r4, lr}
   149e0:	mov	r4, r1
   149e4:	bl	12424 <XawListShowCurrent@plt>
   149e8:	ldr	r3, [r0, #4]
   149ec:	cmn	r3, #1
   149f0:	beq	149fc <__snprintf_chk@plt+0x2530>
   149f4:	ldr	r0, [r0]
   149f8:	pop	{r4, pc}
   149fc:	ldr	r0, [r4]
   14a00:	cmp	r0, #0
   14a04:	beq	14a18 <__snprintf_chk@plt+0x254c>
   14a08:	bl	12424 <XawListShowCurrent@plt>
   14a0c:	ldr	r3, [r0, #4]
   14a10:	cmn	r3, #1
   14a14:	bne	149f4 <__snprintf_chk@plt+0x2528>
   14a18:	ldr	r0, [pc]	; 14a20 <__snprintf_chk@plt+0x2554>
   14a1c:	pop	{r4, pc}
   14a20:	andeq	fp, r1, r0, lsl sp
   14a24:	push	{r4, r5, r6, r7, lr}
   14a28:	sub	sp, sp, #8192	; 0x2000
   14a2c:	ldr	r5, [pc, #300]	; 14b60 <__snprintf_chk@plt+0x2694>
   14a30:	sub	sp, sp, #36	; 0x24
   14a34:	subs	r7, r2, #0
   14a38:	ldr	r4, [pc, #292]	; 14b64 <__snprintf_chk@plt+0x2698>
   14a3c:	add	r2, sp, #8192	; 0x2000
   14a40:	ldr	r3, [r5]
   14a44:	add	r2, r2, #28
   14a48:	mov	r6, r1
   14a4c:	str	r3, [r2]
   14a50:	ldreq	r0, [r4, #16]
   14a54:	beq	14a88 <__snprintf_chk@plt+0x25bc>
   14a58:	ldrb	r3, [r4, #20]
   14a5c:	cmp	r3, #0
   14a60:	moveq	r3, #1
   14a64:	strbeq	r3, [r4, #20]
   14a68:	bne	14b20 <__snprintf_chk@plt+0x2654>
   14a6c:	mov	r0, r7
   14a70:	bl	12280 <strlen@plt>
   14a74:	add	r0, r0, #1
   14a78:	bl	12064 <XtMalloc@plt>
   14a7c:	mov	r1, r7
   14a80:	bl	12184 <strcpy@plt>
   14a84:	str	r0, [r4, #16]
   14a88:	ldr	r1, [pc, #216]	; 14b68 <__snprintf_chk@plt+0x269c>
   14a8c:	bl	11fd4 <fopen@plt>
   14a90:	subs	r7, r0, #0
   14a94:	beq	14b2c <__snprintf_chk@plt+0x2660>
   14a98:	ldr	r4, [pc, #204]	; 14b6c <__snprintf_chk@plt+0x26a0>
   14a9c:	add	r3, sp, #12
   14aa0:	add	r1, sp, #20
   14aa4:	mov	r2, #1
   14aa8:	ldr	r0, [r6, #4]
   14aac:	str	r3, [sp, #24]
   14ab0:	str	r4, [sp, #20]
   14ab4:	bl	120ac <XtGetValues@plt>
   14ab8:	add	r4, r4, #304	; 0x130
   14abc:	add	r3, sp, #16
   14ac0:	add	r1, sp, #20
   14ac4:	ldr	r0, [r6]
   14ac8:	mov	r2, #1
   14acc:	str	r3, [sp, #24]
   14ad0:	str	r4, [sp, #20]
   14ad4:	bl	120ac <XtGetValues@plt>
   14ad8:	ldr	r2, [sp, #16]
   14adc:	ldr	r3, [sp, #12]
   14ae0:	str	r2, [sp]
   14ae4:	mov	r1, #1
   14ae8:	ldr	r2, [pc, #128]	; 14b70 <__snprintf_chk@plt+0x26a4>
   14aec:	mov	r0, r7
   14af0:	bl	12370 <__fprintf_chk@plt>
   14af4:	mov	r0, r7
   14af8:	bl	12388 <fclose@plt>
   14afc:	add	r3, sp, #8192	; 0x2000
   14b00:	add	r3, r3, #28
   14b04:	ldr	r2, [r3]
   14b08:	ldr	r3, [r5]
   14b0c:	cmp	r2, r3
   14b10:	bne	14b5c <__snprintf_chk@plt+0x2690>
   14b14:	add	sp, sp, #8192	; 0x2000
   14b18:	add	sp, sp, #36	; 0x24
   14b1c:	pop	{r4, r5, r6, r7, pc}
   14b20:	ldr	r0, [r4, #16]
   14b24:	bl	12328 <XtFree@plt>
   14b28:	b	14a6c <__snprintf_chk@plt+0x25a0>
   14b2c:	add	r0, sp, #28
   14b30:	mov	r2, #67	; 0x43
   14b34:	ldr	r1, [pc, #56]	; 14b74 <__snprintf_chk@plt+0x26a8>
   14b38:	bl	12058 <memcpy@plt>
   14b3c:	ldr	r3, [pc, #52]	; 14b78 <__snprintf_chk@plt+0x26ac>
   14b40:	ldr	r2, [r4, #16]
   14b44:	add	r1, sp, #28
   14b48:	ldr	r0, [r3]
   14b4c:	str	r6, [sp]
   14b50:	ldr	r3, [pc, #36]	; 14b7c <__snprintf_chk@plt+0x26b0>
   14b54:	bl	16828 <__snprintf_chk@plt+0x435c>
   14b58:	b	14afc <__snprintf_chk@plt+0x2630>
   14b5c:	bl	120e8 <__stack_chk_fail@plt>
   14b60:	andeq	ip, r2, r0, lsl #31
   14b64:	andeq	lr, r2, ip, ror #15
   14b68:	andeq	fp, r1, r8, lsl sp
   14b6c:	andeq	sp, r2, sp, lsr r6
   14b70:	andeq	fp, r1, r0, ror #26
   14b74:	andeq	fp, r1, ip, lsl sp
   14b78:	andeq	lr, r2, r4, lsl #16
   14b7c:	andeq	r4, r1, r4, lsr #20
   14b80:	push	{r4, lr}
   14b84:	bl	1213c <XtWidgetToApplicationContext@plt>
   14b88:	bl	11fec <XtDestroyApplicationContext@plt>
   14b8c:	mov	r0, #0
   14b90:	bl	12244 <exit@plt>
   14b94:	tst	r1, #255	; 0xff
   14b98:	push	{r4, lr}
   14b9c:	movne	r2, #0
   14ba0:	ldrne	r3, [pc, #60]	; 14be4 <__snprintf_chk@plt+0x2718>
   14ba4:	mov	r1, #4
   14ba8:	mov	r4, r0
   14bac:	strne	r2, [r3, #32]
   14bb0:	bl	12334 <_XtCheckSubclassFlag@plt>
   14bb4:	cmp	r0, #0
   14bb8:	bne	14bc8 <__snprintf_chk@plt+0x26fc>
   14bbc:	mov	r0, r4
   14bc0:	bl	12448 <XtParent@plt>
   14bc4:	mov	r4, r0
   14bc8:	ldr	r0, [pc, #24]	; 14be8 <__snprintf_chk@plt+0x271c>
   14bcc:	bl	12418 <_XEditResResetStream@plt>
   14bd0:	mov	r2, #0
   14bd4:	mov	r0, r4
   14bd8:	mov	r1, r2
   14bdc:	pop	{r4, lr}
   14be0:	b	131c0 <__snprintf_chk@plt+0xcf4>
   14be4:	andeq	lr, r2, r4, asr #15
   14be8:	andeq	lr, r2, ip, asr #15
   14bec:	push	{r4, lr}
   14bf0:	bl	12448 <XtParent@plt>
   14bf4:	pop	{r4, lr}
   14bf8:	b	143fc <__snprintf_chk@plt+0x1f30>
   14bfc:	push	{r4, lr}
   14c00:	mov	r1, #4
   14c04:	mov	r4, r0
   14c08:	bl	12334 <_XtCheckSubclassFlag@plt>
   14c0c:	cmp	r0, #0
   14c10:	bne	14c20 <__snprintf_chk@plt+0x2754>
   14c14:	mov	r0, r4
   14c18:	bl	12448 <XtParent@plt>
   14c1c:	mov	r4, r0
   14c20:	mov	r0, r4
   14c24:	mov	r1, #0
   14c28:	pop	{r4, lr}
   14c2c:	b	15c70 <__snprintf_chk@plt+0x37a4>
   14c30:	ldr	r3, [pc, #4]	; 14c3c <__snprintf_chk@plt+0x2770>
   14c34:	ldr	r0, [r3]
   14c38:	b	19574 <__snprintf_chk@plt+0x70a8>
   14c3c:	muleq	r2, r0, r7
   14c40:	ldr	r3, [pc, #4]	; 14c4c <__snprintf_chk@plt+0x2780>
   14c44:	ldr	r0, [r3]
   14c48:	b	193f8 <__snprintf_chk@plt+0x6f2c>
   14c4c:	muleq	r2, r0, r7
   14c50:	ldr	r3, [pc, #112]	; 14cc8 <__snprintf_chk@plt+0x27fc>
   14c54:	push	{r4, lr}
   14c58:	sub	sp, sp, #24
   14c5c:	ldr	r4, [pc, #104]	; 14ccc <__snprintf_chk@plt+0x2800>
   14c60:	ldr	r3, [r3]
   14c64:	ldr	r1, [r4]
   14c68:	cmp	r3, #0
   14c6c:	str	r1, [sp, #20]
   14c70:	beq	14cac <__snprintf_chk@plt+0x27e0>
   14c74:	ldrsh	r1, [r2, #4]
   14c78:	ldrsh	r2, [r2, #6]
   14c7c:	ldr	r0, [pc, #76]	; 14cd0 <__snprintf_chk@plt+0x2804>
   14c80:	rsb	r1, r1, #0
   14c84:	rsb	r2, r2, #0
   14c88:	add	ip, r0, #2
   14c8c:	str	r1, [sp, #8]
   14c90:	str	r2, [sp, #16]
   14c94:	str	r0, [sp, #4]
   14c98:	str	ip, [sp, #12]
   14c9c:	mov	r2, #2
   14ca0:	ldr	r0, [r3]
   14ca4:	add	r1, sp, #4
   14ca8:	bl	12088 <XtSetValues@plt>
   14cac:	ldr	r2, [sp, #20]
   14cb0:	ldr	r3, [r4]
   14cb4:	cmp	r2, r3
   14cb8:	bne	14cc4 <__snprintf_chk@plt+0x27f8>
   14cbc:	add	sp, sp, #24
   14cc0:	pop	{r4, pc}
   14cc4:	bl	120e8 <__stack_chk_fail@plt>
   14cc8:	muleq	r2, r0, r7
   14ccc:	andeq	ip, r2, r0, lsl #31
   14cd0:	andeq	sp, r2, r5, lsl #16
   14cd4:	push	{r4, lr}
   14cd8:	sub	sp, sp, #88	; 0x58
   14cdc:	ldrsh	r0, [r2, #4]
   14ce0:	ldrsh	r3, [r2, #6]
   14ce4:	ldr	r4, [pc, #152]	; 14d84 <__snprintf_chk@plt+0x28b8>
   14ce8:	ldr	ip, [r2]
   14cec:	str	r0, [sp, #8]
   14cf0:	cmp	ip, #3
   14cf4:	ldr	r0, [pc, #140]	; 14d88 <__snprintf_chk@plt+0x28bc>
   14cf8:	ldr	ip, [r4]
   14cfc:	str	r3, [sp, #16]
   14d00:	ldr	r3, [pc, #132]	; 14d8c <__snprintf_chk@plt+0x28c0>
   14d04:	str	ip, [sp, #84]	; 0x54
   14d08:	str	r0, [sp, #4]
   14d0c:	str	r3, [sp, #12]
   14d10:	moveq	r2, #2
   14d14:	beq	14d5c <__snprintf_chk@plt+0x2890>
   14d18:	ldrh	ip, [r2, #8]
   14d1c:	ldrh	r0, [r2, #10]
   14d20:	ldrh	r3, [r2, #14]
   14d24:	ldrh	lr, [r2, #12]
   14d28:	ldr	r2, [pc, #96]	; 14d90 <__snprintf_chk@plt+0x28c4>
   14d2c:	str	ip, [sp, #24]
   14d30:	str	r0, [sp, #32]
   14d34:	ldr	ip, [pc, #88]	; 14d94 <__snprintf_chk@plt+0x28c8>
   14d38:	ldr	r0, [pc, #88]	; 14d98 <__snprintf_chk@plt+0x28cc>
   14d3c:	str	r3, [sp, #48]	; 0x30
   14d40:	str	r2, [sp, #36]	; 0x24
   14d44:	ldr	r3, [pc, #80]	; 14d9c <__snprintf_chk@plt+0x28d0>
   14d48:	mov	r2, #6
   14d4c:	str	lr, [sp, #40]	; 0x28
   14d50:	str	ip, [sp, #20]
   14d54:	str	r0, [sp, #28]
   14d58:	str	r3, [sp, #44]	; 0x2c
   14d5c:	mov	r0, r1
   14d60:	add	r1, sp, #4
   14d64:	bl	12088 <XtSetValues@plt>
   14d68:	ldr	r2, [sp, #84]	; 0x54
   14d6c:	ldr	r3, [r4]
   14d70:	cmp	r2, r3
   14d74:	bne	14d80 <__snprintf_chk@plt+0x28b4>
   14d78:	add	sp, sp, #88	; 0x58
   14d7c:	pop	{r4, pc}
   14d80:	bl	120e8 <__stack_chk_fail@plt>
   14d84:	andeq	ip, r2, r0, lsl #31
   14d88:	andeq	fp, r1, r8, ror #26
   14d8c:	andeq	fp, r1, r0, ror sp
   14d90:	muleq	r1, r4, sp
   14d94:	andeq	fp, r1, r8, ror sp
   14d98:	andeq	fp, r1, r4, lsl #27
   14d9c:	andeq	fp, r1, r0, lsr #27
   14da0:	ldr	r3, [pc, #4]	; 14dac <__snprintf_chk@plt+0x28e0>
   14da4:	ldr	r0, [r3]
   14da8:	b	14504 <__snprintf_chk@plt+0x2038>
   14dac:	muleq	r2, r0, r7
   14db0:	push	{r4, r5, r6, r7, r8, lr}
   14db4:	sub	sp, sp, #8
   14db8:	ldr	r5, [pc, #236]	; 14eac <__snprintf_chk@plt+0x29e0>
   14dbc:	ldr	r4, [pc, #236]	; 14eb0 <__snprintf_chk@plt+0x29e4>
   14dc0:	ldr	r3, [r5]
   14dc4:	ldr	r2, [r4]
   14dc8:	cmp	r3, #0
   14dcc:	str	r2, [sp, #4]
   14dd0:	beq	14e58 <__snprintf_chk@plt+0x298c>
   14dd4:	ldr	r6, [r3, #12]
   14dd8:	cmp	r6, #1
   14ddc:	bne	14e2c <__snprintf_chk@plt+0x2960>
   14de0:	ldr	r3, [r3, #8]
   14de4:	ldr	r7, [r3]
   14de8:	ldr	r8, [r7, #40]	; 0x28
   14dec:	cmp	r8, #0
   14df0:	beq	14e70 <__snprintf_chk@plt+0x29a4>
   14df4:	add	r1, sp, #8
   14df8:	mov	r3, #0
   14dfc:	str	r3, [r1, #-8]!
   14e00:	mov	r0, r7
   14e04:	bl	16a60 <__snprintf_chk@plt+0x4594>
   14e08:	ldr	r1, [sp]
   14e0c:	cmp	r1, #0
   14e10:	beq	14e40 <__snprintf_chk@plt+0x2974>
   14e14:	ldr	r3, [pc, #152]	; 14eb4 <__snprintf_chk@plt+0x29e8>
   14e18:	ldr	r0, [r3, #12]
   14e1c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   14e20:	ldr	r0, [sp]
   14e24:	bl	12328 <XtFree@plt>
   14e28:	b	14e40 <__snprintf_chk@plt+0x2974>
   14e2c:	ldr	r2, [pc, #132]	; 14eb8 <__snprintf_chk@plt+0x29ec>
   14e30:	ldr	r3, [pc, #124]	; 14eb4 <__snprintf_chk@plt+0x29e8>
   14e34:	ldr	r1, [r2, #76]	; 0x4c
   14e38:	ldr	r0, [r3, #12]
   14e3c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   14e40:	ldr	r2, [sp, #4]
   14e44:	ldr	r3, [r4]
   14e48:	cmp	r2, r3
   14e4c:	bne	14ea8 <__snprintf_chk@plt+0x29dc>
   14e50:	add	sp, sp, #8
   14e54:	pop	{r4, r5, r6, r7, r8, pc}
   14e58:	ldr	r2, [pc, #88]	; 14eb8 <__snprintf_chk@plt+0x29ec>
   14e5c:	ldr	r3, [pc, #80]	; 14eb4 <__snprintf_chk@plt+0x29e8>
   14e60:	ldr	r1, [r2, #68]	; 0x44
   14e64:	ldr	r0, [r3, #12]
   14e68:	bl	16304 <__snprintf_chk@plt+0x3e38>
   14e6c:	b	14e40 <__snprintf_chk@plt+0x2974>
   14e70:	ldr	r0, [pc, #68]	; 14ebc <__snprintf_chk@plt+0x29f0>
   14e74:	bl	12418 <_XEditResResetStream@plt>
   14e78:	mov	r1, r6
   14e7c:	ldr	r0, [pc, #56]	; 14ebc <__snprintf_chk@plt+0x29f0>
   14e80:	bl	1249c <_XEditResPut16@plt>
   14e84:	mov	r1, r7
   14e88:	ldr	r0, [pc, #44]	; 14ebc <__snprintf_chk@plt+0x29f0>
   14e8c:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   14e90:	ldr	r3, [r5]
   14e94:	mov	r2, r8
   14e98:	mov	r1, #5
   14e9c:	ldr	r0, [r3]
   14ea0:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   14ea4:	b	14e40 <__snprintf_chk@plt+0x2974>
   14ea8:	bl	120e8 <__stack_chk_fail@plt>
   14eac:	muleq	r2, r0, r7
   14eb0:	andeq	ip, r2, r0, lsl #31
   14eb4:	andeq	lr, r2, r8, lsl r8
   14eb8:	andeq	lr, r2, r8, lsr #16
   14ebc:	andeq	lr, r2, ip, asr #15
   14ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ec4:	sub	sp, sp, #12
   14ec8:	bl	12448 <XtParent@plt>
   14ecc:	ldr	r1, [pc, #28]	; 14ef0 <__snprintf_chk@plt+0x2a24>
   14ed0:	ldr	r3, [pc, #28]	; 14ef4 <__snprintf_chk@plt+0x2a28>
   14ed4:	ldr	r2, [pc, #28]	; 14ef8 <__snprintf_chk@plt+0x2a2c>
   14ed8:	ldr	ip, [r1]
   14edc:	ldr	r1, [pc, #24]	; 14efc <__snprintf_chk@plt+0x2a30>
   14ee0:	str	ip, [sp]
   14ee4:	bl	16828 <__snprintf_chk@plt+0x435c>
   14ee8:	add	sp, sp, #12
   14eec:	pop	{pc}		; (ldr pc, [sp], #4)
   14ef0:	muleq	r2, r0, r7
   14ef4:	andeq	r6, r1, r8, lsr r5
   14ef8:	andeq	fp, r1, ip, lsl ip
   14efc:			; <UNDEFINED> instruction: 0x0001bdb0
   14f00:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14f04:	sub	sp, sp, #81920	; 0x14000
   14f08:	ldr	r3, [r1, #40]	; 0x28
   14f0c:	ldr	r9, [pc, #428]	; 150c0 <__snprintf_chk@plt+0x2bf4>
   14f10:	sub	sp, sp, #16
   14f14:	ldr	r7, [r3, #16]
   14f18:	mov	r5, r2
   14f1c:	add	r2, sp, #81920	; 0x14000
   14f20:	ldr	r3, [r9]
   14f24:	add	r2, r2, #12
   14f28:	cmp	r0, #0
   14f2c:	ldr	r4, [r7, #20]
   14f30:	str	r3, [r2]
   14f34:	beq	14f54 <__snprintf_chk@plt+0x2a88>
   14f38:	ldr	r3, [pc, #388]	; 150c4 <__snprintf_chk@plt+0x2bf8>
   14f3c:	ldr	r1, [r3]
   14f40:	bl	12154 <XtIsSubclass@plt>
   14f44:	cmp	r0, #0
   14f48:	beq	14f54 <__snprintf_chk@plt+0x2a88>
   14f4c:	tst	r5, #255	; 0xff
   14f50:	beq	15080 <__snprintf_chk@plt+0x2bb4>
   14f54:	mov	r3, #0
   14f58:	strb	r3, [sp, #12]
   14f5c:	ldr	r0, [r4, #4]
   14f60:	bl	12160 <XawToggleGetCurrent@plt>
   14f64:	subs	r1, r0, #0
   14f68:	addeq	r5, sp, #12
   14f6c:	beq	14f80 <__snprintf_chk@plt+0x2ab4>
   14f70:	add	r5, sp, #12
   14f74:	mov	r0, r5
   14f78:	mov	r2, #81920	; 0x14000
   14f7c:	bl	122ec <__strcat_chk@plt>
   14f80:	ldr	r3, [r4]
   14f84:	cmp	r3, #0
   14f88:	beq	15008 <__snprintf_chk@plt+0x2b3c>
   14f8c:	ldr	r8, [pc, #308]	; 150c8 <__snprintf_chk@plt+0x2bfc>
   14f90:	ldr	sl, [pc, #308]	; 150cc <__snprintf_chk@plt+0x2c00>
   14f94:	b	14fa8 <__snprintf_chk@plt+0x2adc>
   14f98:	ldr	r4, [r4]
   14f9c:	ldr	r3, [r4]
   14fa0:	cmp	r3, #0
   14fa4:	beq	15008 <__snprintf_chk@plt+0x2b3c>
   14fa8:	ldr	r0, [r4, #8]
   14fac:	bl	12160 <XawToggleGetCurrent@plt>
   14fb0:	subs	r6, r0, #0
   14fb4:	beq	14f98 <__snprintf_chk@plt+0x2acc>
   14fb8:	mov	r1, r8
   14fbc:	bl	11fb0 <strcmp@plt>
   14fc0:	cmp	r0, #0
   14fc4:	beq	14f98 <__snprintf_chk@plt+0x2acc>
   14fc8:	mov	r1, r6
   14fcc:	mov	r2, #81920	; 0x14000
   14fd0:	mov	r0, r5
   14fd4:	bl	122ec <__strcat_chk@plt>
   14fd8:	ldr	r3, [r4]
   14fdc:	ldr	r0, [r3, #4]
   14fe0:	bl	12160 <XawToggleGetCurrent@plt>
   14fe4:	mov	r2, #81920	; 0x14000
   14fe8:	subs	r1, r0, #0
   14fec:	moveq	r1, sl
   14ff0:	mov	r0, r5
   14ff4:	bl	122ec <__strcat_chk@plt>
   14ff8:	ldr	r4, [r4]
   14ffc:	ldr	r3, [r4]
   15000:	cmp	r3, #0
   15004:	bne	14fa8 <__snprintf_chk@plt+0x2adc>
   15008:	add	r1, r7, #16
   1500c:	ldr	r0, [r7, #12]
   15010:	bl	149dc <__snprintf_chk@plt+0x2510>
   15014:	ldr	r6, [pc, #180]	; 150d0 <__snprintf_chk@plt+0x2c04>
   15018:	mov	r4, r0
   1501c:	mov	r0, r5
   15020:	bl	12280 <strlen@plt>
   15024:	mov	r1, r4
   15028:	mov	r2, #81920	; 0x14000
   1502c:	add	r0, r5, r0
   15030:	bl	1216c <__stpcpy_chk@plt>
   15034:	ldr	r3, [r6]
   15038:	sub	r0, r0, r5
   1503c:	add	r4, r0, #2
   15040:	cmp	r3, r4
   15044:	bcc	150a4 <__snprintf_chk@plt+0x2bd8>
   15048:	ldr	r8, [r6, #4]
   1504c:	mov	r1, r5
   15050:	mov	r0, r8
   15054:	bl	120b8 <stpcpy@plt>
   15058:	ldr	r2, [pc, #116]	; 150d4 <__snprintf_chk@plt+0x2c08>
   1505c:	ldr	r3, [pc, #116]	; 150d8 <__snprintf_chk@plt+0x2c0c>
   15060:	add	r1, sp, #4
   15064:	ldrh	ip, [r2]
   15068:	mov	r2, #1
   1506c:	strh	ip, [r0]
   15070:	str	r8, [sp, #8]
   15074:	ldr	r0, [r7, #4]
   15078:	str	r3, [sp, #4]
   1507c:	bl	12088 <XtSetValues@plt>
   15080:	add	r3, sp, #81920	; 0x14000
   15084:	add	r3, r3, #12
   15088:	ldr	r2, [r3]
   1508c:	ldr	r3, [r9]
   15090:	cmp	r2, r3
   15094:	bne	150bc <__snprintf_chk@plt+0x2bf0>
   15098:	add	sp, sp, #81920	; 0x14000
   1509c:	add	sp, sp, #16
   150a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   150a4:	mov	r1, r4
   150a8:	ldr	r0, [r6, #4]
   150ac:	bl	1219c <XtRealloc@plt>
   150b0:	mov	r8, r0
   150b4:	stm	r6, {r4, r8}
   150b8:	b	1504c <__snprintf_chk@plt+0x2b80>
   150bc:	bl	120e8 <__stack_chk_fail@plt>
   150c0:	andeq	ip, r2, r0, lsl #31
   150c4:	andeq	lr, r2, r4, asr r7
   150c8:	andeq	fp, r1, r4, asr #27
   150cc:	ldrdeq	fp, [r1], -r4
   150d0:	muleq	r2, r8, r7
   150d4:	ldrdeq	fp, [r1], -r8
   150d8:	andeq	sp, r2, sp, lsr r6
   150dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   150e0:	mov	r6, r0
   150e4:	ldr	r3, [r1, #40]	; 0x28
   150e8:	ldr	r5, [pc, #300]	; 1521c <__snprintf_chk@plt+0x2d50>
   150ec:	sub	sp, sp, #44	; 0x2c
   150f0:	ldr	r3, [r3, #16]
   150f4:	mov	r4, r1
   150f8:	ldr	r1, [r5]
   150fc:	ldr	r0, [r3, #12]
   15100:	mov	r7, r2
   15104:	cmp	r0, r6
   15108:	str	r1, [sp, #36]	; 0x24
   1510c:	ldreq	r0, [r3, #16]
   15110:	cmp	r0, #0
   15114:	beq	1511c <__snprintf_chk@plt+0x2c50>
   15118:	bl	12454 <XawListUnhighlight@plt>
   1511c:	mov	r2, r7
   15120:	mov	r0, r6
   15124:	mov	r1, r4
   15128:	bl	14f00 <__snprintf_chk@plt+0x2a34>
   1512c:	ldr	r3, [pc, #236]	; 15220 <__snprintf_chk@plt+0x2d54>
   15130:	ldr	r3, [r3]
   15134:	cmp	r3, #4
   15138:	ble	1514c <__snprintf_chk@plt+0x2c80>
   1513c:	ldr	r6, [pc, #224]	; 15224 <__snprintf_chk@plt+0x2d58>
   15140:	ldrb	r3, [r6]
   15144:	cmp	r3, #0
   15148:	bne	15164 <__snprintf_chk@plt+0x2c98>
   1514c:	ldr	r2, [sp, #36]	; 0x24
   15150:	ldr	r3, [r5]
   15154:	cmp	r2, r3
   15158:	bne	15218 <__snprintf_chk@plt+0x2d4c>
   1515c:	add	sp, sp, #44	; 0x2c
   15160:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15164:	ldr	r3, [r4, #40]	; 0x28
   15168:	ldr	r7, [pc, #184]	; 15228 <__snprintf_chk@plt+0x2d5c>
   1516c:	mov	r9, #1
   15170:	ldr	r3, [r3, #16]
   15174:	mov	r8, #0
   15178:	add	r1, r3, #16
   1517c:	ldr	r0, [r3, #12]
   15180:	bl	149dc <__snprintf_chk@plt+0x2510>
   15184:	ldr	r3, [r4, #40]	; 0x28
   15188:	ldr	r2, [pc, #156]	; 1522c <__snprintf_chk@plt+0x2d60>
   1518c:	ldr	r1, [pc, #156]	; 15230 <__snprintf_chk@plt+0x2d64>
   15190:	ldr	r3, [r3, #16]
   15194:	str	r2, [sp, #12]
   15198:	add	r2, sp, #4
   1519c:	str	r2, [sp, #32]
   151a0:	str	r7, [sp, #20]
   151a4:	mov	r2, r9
   151a8:	strh	r9, [sp, #16]
   151ac:	str	r1, [sp, #28]
   151b0:	add	r1, sp, #28
   151b4:	str	r0, [sp, #8]
   151b8:	ldr	r0, [r3, #4]
   151bc:	bl	120ac <XtGetValues@plt>
   151c0:	ldr	r1, [sp, #4]
   151c4:	add	r0, sp, #24
   151c8:	str	r8, [sp, #24]
   151cc:	bl	124b4 <XrmPutLineResource@plt>
   151d0:	mov	r0, r7
   151d4:	bl	12418 <_XEditResResetStream@plt>
   151d8:	mov	r0, r7
   151dc:	ldr	r1, [sp, #8]
   151e0:	bl	122f8 <_XEditResPutString8@plt>
   151e4:	mov	r1, r9
   151e8:	mov	r0, r7
   151ec:	bl	1249c <_XEditResPut16@plt>
   151f0:	mov	r1, r4
   151f4:	mov	r0, r7
   151f8:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   151fc:	ldr	r3, [r4, #24]
   15200:	mov	r2, r8
   15204:	mov	r1, #6
   15208:	ldr	r0, [r3]
   1520c:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   15210:	strb	r8, [r6]
   15214:	b	1514c <__snprintf_chk@plt+0x2c80>
   15218:	bl	120e8 <__stack_chk_fail@plt>
   1521c:	andeq	ip, r2, r0, lsl #31
   15220:	andeq	lr, r2, ip, lsl r3
   15224:	andeq	lr, r2, r1, ror r7
   15228:	andeq	lr, r2, ip, asr #15
   1522c:	ldrdeq	fp, [r1], -ip
   15230:	andeq	sp, r2, sp, lsr r6
   15234:	push	{r4, lr}
   15238:	mov	r0, r1
   1523c:	mov	r4, r1
   15240:	bl	12214 <XtPopdown@plt>
   15244:	mov	r0, r4
   15248:	pop	{r4, lr}
   1524c:	b	123e8 <XtDestroyWidget@plt>
   15250:	push	{r4, r5, lr}
   15254:	sub	sp, sp, #12
   15258:	ldr	r4, [pc, #64]	; 152a0 <__snprintf_chk@plt+0x2dd4>
   1525c:	ldr	r2, [r4, #16]
   15260:	ldrb	r2, [r2]
   15264:	cmp	r2, #0
   15268:	beq	1527c <__snprintf_chk@plt+0x2db0>
   1526c:	mov	r2, #0
   15270:	add	sp, sp, #12
   15274:	pop	{r4, r5, lr}
   15278:	b	14a24 <__snprintf_chk@plt+0x2558>
   1527c:	mov	r5, r1
   15280:	bl	12448 <XtParent@plt>
   15284:	ldr	r2, [r4, #16]
   15288:	str	r5, [sp]
   1528c:	ldr	r3, [pc, #16]	; 152a4 <__snprintf_chk@plt+0x2dd8>
   15290:	ldr	r1, [pc, #16]	; 152a8 <__snprintf_chk@plt+0x2ddc>
   15294:	bl	16828 <__snprintf_chk@plt+0x435c>
   15298:	add	sp, sp, #12
   1529c:	pop	{r4, r5, pc}
   152a0:	andeq	lr, r2, ip, ror #15
   152a4:	andeq	r4, r1, r4, lsr #20
   152a8:	andeq	fp, r1, r8, ror #27
   152ac:	push	{lr}		; (str lr, [sp, #-4]!)
   152b0:	sub	sp, sp, #12
   152b4:	bl	12448 <XtParent@plt>
   152b8:	ldr	r3, [pc, #28]	; 152dc <__snprintf_chk@plt+0x2e10>
   152bc:	mov	r2, #0
   152c0:	str	r2, [sp]
   152c4:	ldr	r1, [pc, #20]	; 152e0 <__snprintf_chk@plt+0x2e14>
   152c8:	ldr	r2, [r3, #16]
   152cc:	ldr	r3, [pc, #16]	; 152e4 <__snprintf_chk@plt+0x2e18>
   152d0:	bl	16828 <__snprintf_chk@plt+0x435c>
   152d4:	add	sp, sp, #12
   152d8:	pop	{pc}		; (ldr pc, [sp], #4)
   152dc:	andeq	lr, r2, ip, ror #15
   152e0:	andeq	fp, r1, r8, ror #27
   152e4:	strdeq	r4, [r1], -ip
   152e8:	push	{r4, r5, r6, r7, r8, lr}
   152ec:	sub	sp, sp, #40	; 0x28
   152f0:	ldr	r3, [r1, #40]	; 0x28
   152f4:	ldr	r7, [pc, #396]	; 15488 <__snprintf_chk@plt+0x2fbc>
   152f8:	mov	r6, r1
   152fc:	ldr	r3, [r3, #16]
   15300:	ldr	r2, [r7]
   15304:	add	r1, r3, #16
   15308:	ldr	r0, [r3, #12]
   1530c:	str	r2, [sp, #36]	; 0x24
   15310:	bl	149dc <__snprintf_chk@plt+0x2510>
   15314:	ldr	r3, [r6, #40]	; 0x28
   15318:	ldr	r5, [pc, #364]	; 1548c <__snprintf_chk@plt+0x2fc0>
   1531c:	ldr	r1, [pc, #364]	; 15490 <__snprintf_chk@plt+0x2fc4>
   15320:	ldr	r3, [r3, #16]
   15324:	mov	r4, #0
   15328:	add	r2, sp, #4
   1532c:	ldr	r8, [pc, #352]	; 15494 <__snprintf_chk@plt+0x2fc8>
   15330:	str	r1, [sp, #12]
   15334:	str	r2, [sp, #32]
   15338:	str	r5, [sp, #20]
   1533c:	mov	r2, #1
   15340:	strh	r4, [sp, #16]
   15344:	add	r1, sp, #28
   15348:	str	r8, [sp, #28]
   1534c:	str	r0, [sp, #8]
   15350:	ldr	r0, [r3, #4]
   15354:	bl	120ac <XtGetValues@plt>
   15358:	ldr	r1, [sp, #4]
   1535c:	add	r0, sp, #24
   15360:	str	r4, [sp, #24]
   15364:	bl	124b4 <XrmPutLineResource@plt>
   15368:	mov	r0, r5
   1536c:	bl	12418 <_XEditResResetStream@plt>
   15370:	mov	r0, r5
   15374:	ldr	r1, [sp, #8]
   15378:	bl	122f8 <_XEditResPutString8@plt>
   1537c:	add	r1, r8, #1360	; 0x550
   15380:	add	r1, r1, #8
   15384:	mov	r0, r5
   15388:	bl	122f8 <_XEditResPutString8@plt>
   1538c:	add	r1, sp, #2
   15390:	mov	r0, r6
   15394:	bl	15934 <__snprintf_chk@plt+0x3468>
   15398:	ldrh	r1, [sp, #2]
   1539c:	str	r0, [sp, #4]
   153a0:	mov	r0, r5
   153a4:	bl	1249c <_XEditResPut16@plt>
   153a8:	ldrh	r3, [sp, #2]
   153ac:	cmp	r3, r4
   153b0:	beq	153d8 <__snprintf_chk@plt+0x2f0c>
   153b4:	ldr	r3, [sp, #4]
   153b8:	mov	r0, r5
   153bc:	ldrb	r1, [r3, r4]
   153c0:	bl	120d0 <_XEditResPut8@plt>
   153c4:	add	r4, r4, #1
   153c8:	ldrh	r3, [sp, #2]
   153cc:	uxth	r4, r4
   153d0:	cmp	r3, r4
   153d4:	bhi	153b4 <__snprintf_chk@plt+0x2ee8>
   153d8:	ldr	r4, [pc, #184]	; 15498 <__snprintf_chk@plt+0x2fcc>
   153dc:	ldr	r0, [sp, #4]
   153e0:	bl	12328 <XtFree@plt>
   153e4:	add	r0, r4, #8
   153e8:	mov	r1, #0
   153ec:	ldr	r5, [r4, #24]
   153f0:	ldr	r8, [r4, #20]
   153f4:	bl	1249c <_XEditResPut16@plt>
   153f8:	ldr	r3, [r6, #24]
   153fc:	add	r2, sp, #8
   15400:	ldr	r1, [pc, #148]	; 1549c <__snprintf_chk@plt+0x2fd0>
   15404:	ldr	r0, [r3, #4]
   15408:	bl	17070 <__snprintf_chk@plt+0x4ba4>
   1540c:	ldrh	r3, [sp, #16]
   15410:	cmp	r3, #0
   15414:	bne	1544c <__snprintf_chk@plt+0x2f80>
   15418:	ldr	r2, [pc, #128]	; 154a0 <__snprintf_chk@plt+0x2fd4>
   1541c:	ldr	r3, [pc, #128]	; 154a4 <__snprintf_chk@plt+0x2fd8>
   15420:	ldr	r1, [r2, #80]	; 0x50
   15424:	ldr	r0, [r3, #12]
   15428:	bl	16304 <__snprintf_chk@plt+0x3e38>
   1542c:	ldr	r0, [sp, #24]
   15430:	bl	123f4 <XrmDestroyDatabase@plt>
   15434:	ldr	r2, [sp, #36]	; 0x24
   15438:	ldr	r3, [r7]
   1543c:	cmp	r2, r3
   15440:	bne	15484 <__snprintf_chk@plt+0x2fb8>
   15444:	add	sp, sp, #40	; 0x28
   15448:	pop	{r4, r5, r6, r7, r8, pc}
   1544c:	ldr	r2, [r4, #20]
   15450:	sub	r5, r5, r8
   15454:	lsr	r3, r3, #8
   15458:	strb	r3, [r2, r5]
   1545c:	ldr	r3, [r4, #20]
   15460:	ldrh	r1, [sp, #16]
   15464:	add	r5, r3, r5
   15468:	mov	r2, #0
   1546c:	strb	r1, [r5, #1]
   15470:	ldr	r3, [r6, #24]
   15474:	mov	r1, #1
   15478:	ldr	r0, [r3]
   1547c:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   15480:	b	1542c <__snprintf_chk@plt+0x2f60>
   15484:	bl	120e8 <__stack_chk_fail@plt>
   15488:	andeq	ip, r2, r0, lsl #31
   1548c:	andeq	lr, r2, ip, asr #15
   15490:	ldrdeq	fp, [r1], -ip
   15494:	andeq	sp, r2, sp, lsr r6
   15498:	andeq	lr, r2, r4, asr #15
   1549c:	andeq	r4, r1, r8, asr r8
   154a0:	andeq	lr, r2, r8, lsr #16
   154a4:	andeq	lr, r2, r8, lsl r8
   154a8:	push	{r4, r5, r6, lr}
   154ac:	sub	sp, sp, #40	; 0x28
   154b0:	ldr	r3, [r1, #40]	; 0x28
   154b4:	ldr	r6, [pc, #160]	; 1555c <__snprintf_chk@plt+0x3090>
   154b8:	mov	r4, r1
   154bc:	ldr	r3, [r3, #16]
   154c0:	ldr	r2, [r6]
   154c4:	add	r1, r3, #16
   154c8:	ldr	r0, [r3, #12]
   154cc:	str	r2, [sp, #36]	; 0x24
   154d0:	bl	149dc <__snprintf_chk@plt+0x2510>
   154d4:	ldr	r3, [r4, #40]	; 0x28
   154d8:	ldr	r1, [pc, #128]	; 15560 <__snprintf_chk@plt+0x3094>
   154dc:	mov	r5, #0
   154e0:	ldr	r3, [r3, #16]
   154e4:	str	r1, [sp, #12]
   154e8:	ldr	r1, [pc, #116]	; 15564 <__snprintf_chk@plt+0x3098>
   154ec:	add	r2, sp, #4
   154f0:	str	r2, [sp, #32]
   154f4:	strh	r5, [sp, #16]
   154f8:	mov	r2, #1
   154fc:	str	r5, [sp, #20]
   15500:	str	r1, [sp, #28]
   15504:	add	r1, sp, #28
   15508:	str	r0, [sp, #8]
   1550c:	ldr	r0, [r3, #4]
   15510:	bl	120ac <XtGetValues@plt>
   15514:	ldr	r1, [sp, #4]
   15518:	add	r0, sp, #24
   1551c:	str	r5, [sp, #24]
   15520:	bl	124b4 <XrmPutLineResource@plt>
   15524:	ldr	r3, [r4, #24]
   15528:	add	r2, sp, #8
   1552c:	ldr	r1, [pc, #52]	; 15568 <__snprintf_chk@plt+0x309c>
   15530:	ldr	r0, [r3, #4]
   15534:	bl	17070 <__snprintf_chk@plt+0x4ba4>
   15538:	ldr	r0, [sp, #24]
   1553c:	bl	123f4 <XrmDestroyDatabase@plt>
   15540:	ldr	r2, [sp, #36]	; 0x24
   15544:	ldr	r3, [r6]
   15548:	cmp	r2, r3
   1554c:	bne	15558 <__snprintf_chk@plt+0x308c>
   15550:	add	sp, sp, #40	; 0x28
   15554:	pop	{r4, r5, r6, pc}
   15558:	bl	120e8 <__stack_chk_fail@plt>
   1555c:	andeq	ip, r2, r0, lsl #31
   15560:	ldrdeq	fp, [r1], -ip
   15564:	andeq	sp, r2, sp, lsr r6
   15568:	andeq	r4, r1, r0, lsl r9
   1556c:	push	{r4, r5, r6, lr}
   15570:	sub	sp, sp, #16
   15574:	ldr	r6, [pc, #516]	; 15780 <__snprintf_chk@plt+0x32b4>
   15578:	tst	r2, #255	; 0xff
   1557c:	mov	r4, r1
   15580:	ldr	r3, [r6]
   15584:	ldr	r5, [r1, #20]
   15588:	str	r3, [sp, #12]
   1558c:	beq	15600 <__snprintf_chk@plt+0x3134>
   15590:	cmp	r5, #0
   15594:	beq	156dc <__snprintf_chk@plt+0x3210>
   15598:	ldr	r3, [r4, #24]
   1559c:	cmp	r3, #0
   155a0:	beq	1568c <__snprintf_chk@plt+0x31c0>
   155a4:	ldr	r2, [r3]
   155a8:	cmp	r2, #0
   155ac:	beq	1568c <__snprintf_chk@plt+0x31c0>
   155b0:	ldr	r2, [r4, #20]
   155b4:	add	r2, r2, #1
   155b8:	str	r2, [r4, #20]
   155bc:	ldr	r2, [r3]
   155c0:	add	r2, r2, #1
   155c4:	str	r2, [r3]
   155c8:	mov	r2, #0
   155cc:	mov	r0, r2
   155d0:	ldr	r1, [r4]
   155d4:	bl	14f00 <__snprintf_chk@plt+0x2a34>
   155d8:	mov	r2, #0
   155dc:	mov	r0, r2
   155e0:	ldr	r1, [r4]
   155e4:	bl	154a8 <__snprintf_chk@plt+0x2fdc>
   155e8:	ldr	r2, [sp, #12]
   155ec:	ldr	r3, [r6]
   155f0:	cmp	r2, r3
   155f4:	bne	1577c <__snprintf_chk@plt+0x32b0>
   155f8:	add	sp, sp, #16
   155fc:	pop	{r4, r5, r6, pc}
   15600:	cmp	r5, #0
   15604:	ldr	r2, [r1, #24]
   15608:	subgt	r5, r5, #1
   1560c:	strgt	r5, [r1, #20]
   15610:	cmp	r2, #0
   15614:	beq	15724 <__snprintf_chk@plt+0x3258>
   15618:	ldr	r3, [r2]
   1561c:	cmp	r3, #0
   15620:	ble	1576c <__snprintf_chk@plt+0x32a0>
   15624:	sub	r3, r3, #1
   15628:	str	r3, [r2]
   1562c:	ldr	r3, [r1, #20]
   15630:	cmp	r3, #0
   15634:	beq	15730 <__snprintf_chk@plt+0x3264>
   15638:	ldr	r3, [r4, #24]
   1563c:	cmp	r3, #0
   15640:	ldrne	r3, [r3]
   15644:	beq	15650 <__snprintf_chk@plt+0x3184>
   15648:	cmp	r3, #0
   1564c:	bne	155c8 <__snprintf_chk@plt+0x30fc>
   15650:	ldr	r0, [r4, #12]
   15654:	mov	r1, #1
   15658:	bl	121e4 <XtSetSensitive@plt>
   1565c:	ldr	r0, [r4, #16]
   15660:	mov	r1, #1
   15664:	bl	121e4 <XtSetSensitive@plt>
   15668:	ldr	r0, [pc, #276]	; 15784 <__snprintf_chk@plt+0x32b8>
   1566c:	mov	r3, #1
   15670:	str	r0, [sp, #4]
   15674:	mov	r2, r3
   15678:	add	r1, sp, #4
   1567c:	ldr	r0, [r4, #12]
   15680:	str	r3, [sp, #8]
   15684:	bl	12088 <XtSetValues@plt>
   15688:	b	155c8 <__snprintf_chk@plt+0x30fc>
   1568c:	mov	r1, #0
   15690:	ldr	r0, [r4, #12]
   15694:	bl	121e4 <XtSetSensitive@plt>
   15698:	mov	r1, #0
   1569c:	ldr	r0, [r4, #16]
   156a0:	bl	121e4 <XtSetSensitive@plt>
   156a4:	ldr	r0, [pc, #216]	; 15784 <__snprintf_chk@plt+0x32b8>
   156a8:	mov	r3, #1
   156ac:	mov	r2, r3
   156b0:	str	r0, [sp, #4]
   156b4:	add	r1, sp, #4
   156b8:	ldr	r0, [r4, #16]
   156bc:	str	r3, [sp, #8]
   156c0:	bl	12088 <XtSetValues@plt>
   156c4:	ldrd	r2, [r4, #20]
   156c8:	add	r2, r2, #1
   156cc:	cmp	r3, #0
   156d0:	str	r2, [r4, #20]
   156d4:	beq	155c8 <__snprintf_chk@plt+0x30fc>
   156d8:	b	155bc <__snprintf_chk@plt+0x30f0>
   156dc:	mov	r1, r5
   156e0:	ldr	r0, [r4, #4]
   156e4:	bl	121e4 <XtSetSensitive@plt>
   156e8:	mov	r1, r5
   156ec:	ldr	r0, [r4, #8]
   156f0:	bl	121e4 <XtSetSensitive@plt>
   156f4:	ldr	r0, [pc, #136]	; 15784 <__snprintf_chk@plt+0x32b8>
   156f8:	mov	r3, #1
   156fc:	mov	r2, r3
   15700:	str	r0, [sp, #4]
   15704:	add	r1, sp, #4
   15708:	ldr	r0, [r4, #8]
   1570c:	str	r3, [sp, #8]
   15710:	bl	12088 <XtSetValues@plt>
   15714:	ldr	r3, [r4, #24]
   15718:	cmp	r3, #0
   1571c:	bne	155a4 <__snprintf_chk@plt+0x30d8>
   15720:	b	1568c <__snprintf_chk@plt+0x31c0>
   15724:	ldr	r3, [r1, #20]
   15728:	cmp	r3, #0
   1572c:	bne	15650 <__snprintf_chk@plt+0x3184>
   15730:	ldr	r0, [r4, #4]
   15734:	mov	r1, #1
   15738:	bl	121e4 <XtSetSensitive@plt>
   1573c:	ldr	r0, [r4, #8]
   15740:	mov	r1, #1
   15744:	bl	121e4 <XtSetSensitive@plt>
   15748:	ldr	r0, [pc, #52]	; 15784 <__snprintf_chk@plt+0x32b8>
   1574c:	mov	r3, #1
   15750:	str	r0, [sp, #4]
   15754:	mov	r2, r3
   15758:	add	r1, sp, #4
   1575c:	ldr	r0, [r4, #4]
   15760:	str	r3, [sp, #8]
   15764:	bl	12088 <XtSetValues@plt>
   15768:	b	15638 <__snprintf_chk@plt+0x316c>
   1576c:	ldr	r2, [r1, #20]
   15770:	cmp	r2, #0
   15774:	bne	15648 <__snprintf_chk@plt+0x317c>
   15778:	b	15730 <__snprintf_chk@plt+0x3264>
   1577c:	bl	120e8 <__stack_chk_fail@plt>
   15780:	andeq	ip, r2, r0, lsl #31
   15784:	andeq	fp, r1, r8, lsl #26
   15788:	push	{r4, r5, r6, lr}
   1578c:	mov	r4, r0
   15790:	mov	r5, r1
   15794:	mov	r6, r2
   15798:	bl	14f00 <__snprintf_chk@plt+0x2a34>
   1579c:	mov	r2, r6
   157a0:	mov	r1, r5
   157a4:	mov	r0, r4
   157a8:	pop	{r4, r5, r6, lr}
   157ac:	b	154a8 <__snprintf_chk@plt+0x2fdc>
   157b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   157b4:	sub	sp, sp, #8192	; 0x2000
   157b8:	ldrh	r2, [r0, #4]
   157bc:	ldr	r9, [pc, #348]	; 15920 <__snprintf_chk@plt+0x3454>
   157c0:	sub	sp, sp, #28
   157c4:	cmp	r2, #0
   157c8:	add	r2, sp, #8192	; 0x2000
   157cc:	ldr	r3, [r9]
   157d0:	add	r2, r2, #20
   157d4:	mov	r4, #0
   157d8:	str	r3, [r2]
   157dc:	str	r4, [sp, #16]
   157e0:	beq	158dc <__snprintf_chk@plt+0x3410>
   157e4:	mov	r6, r0
   157e8:	ldr	r7, [pc, #308]	; 15924 <__snprintf_chk@plt+0x3458>
   157ec:	ldr	r8, [pc, #308]	; 15928 <__snprintf_chk@plt+0x345c>
   157f0:	b	15848 <__snprintf_chk@plt+0x337c>
   157f4:	ldr	r2, [r6, #8]
   157f8:	mov	r3, #8192	; 0x2000
   157fc:	add	r5, r2, r5
   15800:	mov	r1, r3
   15804:	ldr	ip, [r5, #12]
   15808:	mov	r2, #1
   1580c:	str	ip, [sp, #12]
   15810:	ldr	ip, [r0, #8]
   15814:	add	r4, r4, #1
   15818:	str	ip, [sp, #8]
   1581c:	ldr	r0, [r0]
   15820:	str	r8, [sp]
   15824:	str	r0, [sp, #4]
   15828:	add	r0, sp, #20
   1582c:	bl	124cc <__snprintf_chk@plt>
   15830:	add	r1, sp, #20
   15834:	add	r0, sp, #16
   15838:	bl	16430 <__snprintf_chk@plt+0x3f64>
   1583c:	ldrh	r3, [r6, #4]
   15840:	cmp	r3, r4
   15844:	ble	158b0 <__snprintf_chk@plt+0x33e4>
   15848:	ldr	r3, [r6, #8]
   1584c:	lsl	r5, r4, #4
   15850:	ldr	r0, [r7]
   15854:	add	r1, r3, r5
   15858:	ldrh	r2, [r3, r5]
   1585c:	ldr	r1, [r1, #4]
   15860:	ldr	r0, [r0, #4]
   15864:	bl	16490 <__snprintf_chk@plt+0x3fc4>
   15868:	cmp	r0, #0
   1586c:	bne	157f4 <__snprintf_chk@plt+0x3328>
   15870:	ldr	lr, [pc, #180]	; 1592c <__snprintf_chk@plt+0x3460>
   15874:	add	ip, sp, #20
   15878:	add	r4, r4, #1
   1587c:	ldm	lr!, {r0, r1, r2, r3}
   15880:	stmia	ip!, {r0, r1, r2, r3}
   15884:	ldm	lr!, {r0, r1, r2, r3}
   15888:	stmia	ip!, {r0, r1, r2, r3}
   1588c:	ldm	lr, {r0, r1, r2, r3}
   15890:	stmia	ip!, {r0, r1, r2}
   15894:	add	r1, sp, #20
   15898:	strb	r3, [ip]
   1589c:	add	r0, sp, #16
   158a0:	bl	16430 <__snprintf_chk@plt+0x3f64>
   158a4:	ldrh	r3, [r6, #4]
   158a8:	cmp	r3, r4
   158ac:	bgt	15848 <__snprintf_chk@plt+0x337c>
   158b0:	ldr	r4, [sp, #16]
   158b4:	add	r3, sp, #8192	; 0x2000
   158b8:	add	r3, r3, #20
   158bc:	ldr	r2, [r3]
   158c0:	ldr	r3, [r9]
   158c4:	mov	r0, r4
   158c8:	cmp	r2, r3
   158cc:	bne	1591c <__snprintf_chk@plt+0x3450>
   158d0:	add	sp, sp, #8192	; 0x2000
   158d4:	add	sp, sp, #28
   158d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   158dc:	mov	r0, #26
   158e0:	bl	12064 <XtMalloc@plt>
   158e4:	ldr	ip, [pc, #68]	; 15930 <__snprintf_chk@plt+0x3464>
   158e8:	mov	lr, r0
   158ec:	mov	r4, r0
   158f0:	ldm	ip!, {r0, r1, r2, r3}
   158f4:	str	r0, [lr]
   158f8:	str	r1, [lr, #4]
   158fc:	ldm	ip!, {r0, r1}
   15900:	str	r3, [lr, #12]
   15904:	str	r2, [lr, #8]
   15908:	ldrh	r3, [ip]
   1590c:	str	r0, [lr, #16]
   15910:	str	r1, [lr, #20]
   15914:	strh	r3, [lr, #24]
   15918:	b	158b4 <__snprintf_chk@plt+0x33e8>
   1591c:	bl	120e8 <__stack_chk_fail@plt>
   15920:	andeq	ip, r2, r0, lsl #31
   15924:	muleq	r2, r0, r7
   15928:	andeq	fp, r1, r8, lsr #28
   1592c:	strdeq	fp, [r1], -r0
   15930:	andeq	fp, r1, ip, lsl #28
   15934:	push	{r4, r5, lr}
   15938:	sub	sp, sp, #44	; 0x2c
   1593c:	ldr	r3, [r0, #40]	; 0x28
   15940:	ldr	r4, [pc, #192]	; 15a08 <__snprintf_chk@plt+0x353c>
   15944:	ldr	lr, [pc, #192]	; 15a0c <__snprintf_chk@plt+0x3540>
   15948:	ldr	r0, [r3, #16]
   1594c:	mov	ip, #0
   15950:	ldr	r3, [r4]
   15954:	add	r2, sp, #8
   15958:	str	lr, [sp, #28]
   1595c:	str	ip, [sp, #16]
   15960:	str	r2, [sp, #32]
   15964:	mov	r5, r1
   15968:	mov	r2, #1
   1596c:	ldr	r0, [r0]
   15970:	add	r1, sp, #28
   15974:	str	r3, [sp, #36]	; 0x24
   15978:	bl	120ac <XtGetValues@plt>
   1597c:	ldr	r3, [sp, #8]
   15980:	ldr	r2, [pc, #136]	; 15a10 <__snprintf_chk@plt+0x3544>
   15984:	ldr	r1, [pc, #136]	; 15a14 <__snprintf_chk@plt+0x3548>
   15988:	add	r0, sp, #12
   1598c:	bl	121fc <XtAsprintf@plt>
   15990:	ldr	r1, [sp, #12]
   15994:	add	r0, sp, #16
   15998:	bl	124b4 <XrmPutLineResource@plt>
   1599c:	ldr	r0, [sp, #12]
   159a0:	bl	12328 <XtFree@plt>
   159a4:	add	r2, sp, #20
   159a8:	add	r3, sp, #12
   159ac:	ldr	r1, [pc, #92]	; 15a10 <__snprintf_chk@plt+0x3544>
   159b0:	str	r2, [sp]
   159b4:	ldr	r0, [sp, #16]
   159b8:	ldr	r2, [pc, #88]	; 15a18 <__snprintf_chk@plt+0x354c>
   159bc:	bl	1201c <XrmGetResource@plt>
   159c0:	ldr	r0, [sp, #20]
   159c4:	bl	12064 <XtMalloc@plt>
   159c8:	ldr	r2, [sp, #20]
   159cc:	ldr	r1, [sp, #24]
   159d0:	str	r0, [sp, #8]
   159d4:	bl	12028 <memmove@plt>
   159d8:	ldr	r0, [sp, #16]
   159dc:	bl	123f4 <XrmDestroyDatabase@plt>
   159e0:	ldr	r3, [sp, #20]
   159e4:	ldr	r2, [sp, #36]	; 0x24
   159e8:	strh	r3, [r5]
   159ec:	ldr	r3, [r4]
   159f0:	ldr	r0, [sp, #8]
   159f4:	cmp	r2, r3
   159f8:	bne	15a04 <__snprintf_chk@plt+0x3538>
   159fc:	add	sp, sp, #44	; 0x2c
   15a00:	pop	{r4, r5, pc}
   15a04:	bl	120e8 <__stack_chk_fail@plt>
   15a08:	andeq	ip, r2, r0, lsl #31
   15a0c:	andeq	sp, r2, sp, ror #14
   15a10:	andeq	r9, r1, ip, lsl r9
   15a14:	andeq	fp, r1, r8, lsr lr
   15a18:	andeq	fp, r1, r0, asr #28
   15a1c:	push	{r4, lr}
   15a20:	bl	12448 <XtParent@plt>
   15a24:	bl	12448 <XtParent@plt>
   15a28:	pop	{r4, lr}
   15a2c:	b	12214 <XtPopdown@plt>
   15a30:	push	{r4, r5, r6, r7, lr}
   15a34:	sub	sp, sp, #36	; 0x24
   15a38:	ldr	r4, [pc, #228]	; 15b24 <__snprintf_chk@plt+0x3658>
   15a3c:	mov	r7, r1
   15a40:	mov	r5, r0
   15a44:	ldr	r3, [r4]
   15a48:	str	r3, [sp, #28]
   15a4c:	bl	12130 <XtIsSensitive@plt>
   15a50:	subs	r6, r0, #0
   15a54:	bne	15a80 <__snprintf_chk@plt+0x35b4>
   15a58:	mov	r0, r7
   15a5c:	bl	12340 <XtDisplay@plt>
   15a60:	mov	r1, r6
   15a64:	bl	11fa4 <XBell@plt>
   15a68:	ldr	r2, [sp, #28]
   15a6c:	ldr	r3, [r4]
   15a70:	cmp	r2, r3
   15a74:	bne	15b20 <__snprintf_chk@plt+0x3654>
   15a78:	add	sp, sp, #36	; 0x24
   15a7c:	pop	{r4, r5, r6, r7, pc}
   15a80:	ldr	r6, [pc, #160]	; 15b28 <__snprintf_chk@plt+0x365c>
   15a84:	mov	r0, r5
   15a88:	bl	12448 <XtParent@plt>
   15a8c:	mov	r1, r5
   15a90:	bl	12394 <XtSetKeyboardFocus@plt>
   15a94:	sub	r2, r6, #35	; 0x23
   15a98:	add	r0, sp, #4
   15a9c:	add	r3, sp, #8
   15aa0:	add	r1, sp, #12
   15aa4:	str	r2, [sp, #20]
   15aa8:	str	r0, [sp, #16]
   15aac:	mov	r2, #2
   15ab0:	mov	r0, r5
   15ab4:	str	r3, [sp, #24]
   15ab8:	str	r6, [sp, #12]
   15abc:	bl	120ac <XtGetValues@plt>
   15ac0:	mov	r2, #1
   15ac4:	add	r1, sp, #12
   15ac8:	mov	r0, r7
   15acc:	str	r6, [sp, #12]
   15ad0:	str	sp, [sp, #16]
   15ad4:	bl	120ac <XtGetValues@plt>
   15ad8:	ldr	r3, [sp, #4]
   15adc:	ldr	r2, [sp, #8]
   15ae0:	cmp	r3, r2
   15ae4:	bne	15a68 <__snprintf_chk@plt+0x359c>
   15ae8:	mov	r0, r7
   15aec:	add	r1, sp, #12
   15af0:	mov	r2, #1
   15af4:	str	r3, [sp, #16]
   15af8:	str	r6, [sp, #12]
   15afc:	bl	12088 <XtSetValues@plt>
   15b00:	ldr	r3, [sp]
   15b04:	add	r1, sp, #12
   15b08:	mov	r0, r5
   15b0c:	mov	r2, #1
   15b10:	str	r6, [sp, #12]
   15b14:	str	r3, [sp, #16]
   15b18:	bl	12088 <XtSetValues@plt>
   15b1c:	b	15a68 <__snprintf_chk@plt+0x359c>
   15b20:	bl	120e8 <__stack_chk_fail@plt>
   15b24:	andeq	ip, r2, r0, lsl #31
   15b28:	andeq	sp, r2, r7, ror #9
   15b2c:	push	{r4, r5, r6, r7, r8, lr}
   15b30:	sub	sp, sp, #24
   15b34:	ldr	r5, [pc, #284]	; 15c58 <__snprintf_chk@plt+0x378c>
   15b38:	ldr	r7, [pc, #284]	; 15c5c <__snprintf_chk@plt+0x3790>
   15b3c:	ldr	r3, [r5]
   15b40:	ldr	r2, [r7]
   15b44:	ldr	r3, [r3, #12]
   15b48:	str	r2, [sp, #20]
   15b4c:	cmp	r3, #0
   15b50:	beq	15c3c <__snprintf_chk@plt+0x3770>
   15b54:	ldr	r6, [pc, #260]	; 15c60 <__snprintf_chk@plt+0x3794>
   15b58:	ldr	r4, [pc, #260]	; 15c64 <__snprintf_chk@plt+0x3798>
   15b5c:	add	r3, sp, #4
   15b60:	add	r1, sp, #12
   15b64:	mov	r2, #1
   15b68:	mov	r8, r0
   15b6c:	ldr	r0, [r6, #4]
   15b70:	str	r3, [sp, #16]
   15b74:	str	r4, [sp, #12]
   15b78:	bl	120ac <XtGetValues@plt>
   15b7c:	add	r3, sp, #8
   15b80:	mov	r2, #1
   15b84:	add	r1, sp, #12
   15b88:	ldr	r0, [r6, #8]
   15b8c:	str	r3, [sp, #16]
   15b90:	str	r4, [sp, #12]
   15b94:	bl	120ac <XtGetValues@plt>
   15b98:	ldr	r0, [pc, #200]	; 15c68 <__snprintf_chk@plt+0x379c>
   15b9c:	bl	12418 <_XEditResResetStream@plt>
   15ba0:	ldr	r1, [sp, #4]
   15ba4:	ldr	r0, [pc, #188]	; 15c68 <__snprintf_chk@plt+0x379c>
   15ba8:	bl	122f8 <_XEditResPutString8@plt>
   15bac:	add	r1, r4, #1056	; 0x420
   15bb0:	add	r1, r1, #8
   15bb4:	ldr	r0, [pc, #172]	; 15c68 <__snprintf_chk@plt+0x379c>
   15bb8:	bl	122f8 <_XEditResPutString8@plt>
   15bbc:	ldr	r1, [sp, #8]
   15bc0:	ldr	r0, [pc, #160]	; 15c68 <__snprintf_chk@plt+0x379c>
   15bc4:	bl	122f8 <_XEditResPutString8@plt>
   15bc8:	ldr	r3, [r5]
   15bcc:	ldr	r0, [pc, #148]	; 15c68 <__snprintf_chk@plt+0x379c>
   15bd0:	ldr	r1, [r3, #12]
   15bd4:	bl	1249c <_XEditResPut16@plt>
   15bd8:	ldr	r3, [r5]
   15bdc:	ldr	r2, [r3, #12]
   15be0:	cmp	r2, #0
   15be4:	beq	15c14 <__snprintf_chk@plt+0x3748>
   15be8:	ldr	r6, [pc, #120]	; 15c68 <__snprintf_chk@plt+0x379c>
   15bec:	mov	r4, #0
   15bf0:	ldr	r3, [r3, #8]
   15bf4:	mov	r0, r6
   15bf8:	ldr	r1, [r3, r4, lsl #2]
   15bfc:	bl	170c0 <__snprintf_chk@plt+0x4bf4>
   15c00:	ldr	r3, [r5]
   15c04:	add	r4, r4, #1
   15c08:	ldr	r2, [r3, #12]
   15c0c:	cmp	r4, r2
   15c10:	bcc	15bf0 <__snprintf_chk@plt+0x3724>
   15c14:	mov	r0, r8
   15c18:	mov	r2, #0
   15c1c:	mov	r1, #1
   15c20:	bl	131c0 <__snprintf_chk@plt+0xcf4>
   15c24:	ldr	r2, [sp, #20]
   15c28:	ldr	r3, [r7]
   15c2c:	cmp	r2, r3
   15c30:	bne	15c54 <__snprintf_chk@plt+0x3788>
   15c34:	add	sp, sp, #24
   15c38:	pop	{r4, r5, r6, r7, r8, pc}
   15c3c:	ldr	r2, [pc, #40]	; 15c6c <__snprintf_chk@plt+0x37a0>
   15c40:	ldr	r3, [pc, #24]	; 15c60 <__snprintf_chk@plt+0x3794>
   15c44:	ldr	r1, [r2, #92]	; 0x5c
   15c48:	ldr	r0, [r3, #12]
   15c4c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   15c50:	b	15c24 <__snprintf_chk@plt+0x3758>
   15c54:	bl	120e8 <__stack_chk_fail@plt>
   15c58:	muleq	r2, r0, r7
   15c5c:	andeq	ip, r2, r0, lsl #31
   15c60:	andeq	lr, r2, r8, lsl r8
   15c64:	andeq	sp, r2, sp, ror #14
   15c68:	andeq	lr, r2, ip, asr #15
   15c6c:	andeq	lr, r2, r8, lsr #16
   15c70:	ldr	r3, [pc, #724]	; 15f4c <__snprintf_chk@plt+0x3a80>
   15c74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c78:	sub	sp, sp, #108	; 0x6c
   15c7c:	ldr	r6, [pc, #716]	; 15f50 <__snprintf_chk@plt+0x3a84>
   15c80:	ldr	ip, [r3]
   15c84:	ldr	r3, [r6]
   15c88:	cmp	ip, #0
   15c8c:	str	r3, [sp, #100]	; 0x64
   15c90:	beq	15d0c <__snprintf_chk@plt+0x3840>
   15c94:	ldr	r4, [pc, #696]	; 15f54 <__snprintf_chk@plt+0x3a88>
   15c98:	mov	r8, r1
   15c9c:	ldr	r7, [r4]
   15ca0:	cmp	r7, #0
   15ca4:	addne	r5, sp, #20
   15ca8:	beq	15d24 <__snprintf_chk@plt+0x3858>
   15cac:	ldr	r0, [pc, #676]	; 15f58 <__snprintf_chk@plt+0x3a8c>
   15cb0:	ldr	r3, [pc, #676]	; 15f5c <__snprintf_chk@plt+0x3a90>
   15cb4:	mov	r2, #1
   15cb8:	mov	r1, r5
   15cbc:	str	r0, [sp, #20]
   15cc0:	ldr	r0, [r4, #4]
   15cc4:	str	r3, [sp, #24]
   15cc8:	bl	12088 <XtSetValues@plt>
   15ccc:	mov	r2, #1
   15cd0:	mov	r1, r5
   15cd4:	ldr	r0, [r4, #8]
   15cd8:	bl	12088 <XtSetValues@plt>
   15cdc:	ldrd	r0, [r4, #4]
   15ce0:	bl	15a30 <__snprintf_chk@plt+0x3564>
   15ce4:	ldr	r1, [r4]
   15ce8:	mov	r0, r8
   15cec:	mov	r2, #0
   15cf0:	bl	16640 <__snprintf_chk@plt+0x4174>
   15cf4:	ldr	r2, [sp, #100]	; 0x64
   15cf8:	ldr	r3, [r6]
   15cfc:	cmp	r2, r3
   15d00:	bne	15f48 <__snprintf_chk@plt+0x3a7c>
   15d04:	add	sp, sp, #108	; 0x6c
   15d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d0c:	ldr	r2, [pc, #588]	; 15f60 <__snprintf_chk@plt+0x3a94>
   15d10:	ldr	r3, [pc, #572]	; 15f54 <__snprintf_chk@plt+0x3a88>
   15d14:	ldr	r1, [r2, #68]	; 0x44
   15d18:	ldr	r0, [r3, #12]
   15d1c:	bl	16304 <__snprintf_chk@plt+0x3e38>
   15d20:	b	15cf4 <__snprintf_chk@plt+0x3828>
   15d24:	ldr	r3, [pc, #568]	; 15f64 <__snprintf_chk@plt+0x3a98>
   15d28:	str	r7, [sp]
   15d2c:	mov	r2, r0
   15d30:	ldr	r1, [r3]
   15d34:	ldr	r0, [pc, #556]	; 15f68 <__snprintf_chk@plt+0x3a9c>
   15d38:	mov	r3, r7
   15d3c:	bl	12034 <XtCreatePopupShell@plt>
   15d40:	ldr	r3, [pc, #548]	; 15f6c <__snprintf_chk@plt+0x3aa0>
   15d44:	ldr	sl, [pc, #548]	; 15f70 <__snprintf_chk@plt+0x3aa4>
   15d48:	add	r5, sp, #20
   15d4c:	ldr	r1, [r3]
   15d50:	str	r7, [sp]
   15d54:	mov	r3, r7
   15d58:	mov	ip, r0
   15d5c:	mov	r2, r0
   15d60:	ldr	r0, [pc, #524]	; 15f74 <__snprintf_chk@plt+0x3aa8>
   15d64:	str	ip, [r4]
   15d68:	bl	1204c <XtCreateManagedWidget@plt>
   15d6c:	ldr	r1, [sl]
   15d70:	mov	r3, r5
   15d74:	str	r7, [sp]
   15d78:	mov	r9, r0
   15d7c:	mov	r2, r0
   15d80:	ldr	r0, [pc, #496]	; 15f78 <__snprintf_chk@plt+0x3aac>
   15d84:	bl	1204c <XtCreateManagedWidget@plt>
   15d88:	ldr	ip, [pc, #492]	; 15f7c <__snprintf_chk@plt+0x3ab0>
   15d8c:	ldr	r1, [sl]
   15d90:	mov	r3, r5
   15d94:	mov	r2, r9
   15d98:	str	ip, [sp, #20]
   15d9c:	mov	fp, r0
   15da0:	mov	r0, #1
   15da4:	str	r0, [sp]
   15da8:	ldr	r0, [pc, #464]	; 15f80 <__snprintf_chk@plt+0x3ab4>
   15dac:	str	fp, [sp, #24]
   15db0:	bl	1204c <XtCreateManagedWidget@plt>
   15db4:	ldr	r3, [pc, #456]	; 15f84 <__snprintf_chk@plt+0x3ab8>
   15db8:	mov	lr, #2
   15dbc:	str	fp, [sp, #24]
   15dc0:	ldr	fp, [pc, #436]	; 15f7c <__snprintf_chk@plt+0x3ab0>
   15dc4:	ldr	r1, [r3]
   15dc8:	mov	r2, r9
   15dcc:	str	lr, [sp]
   15dd0:	mov	r3, r5
   15dd4:	str	fp, [sp, #20]
   15dd8:	mov	ip, r0
   15ddc:	str	ip, [sp, #12]
   15de0:	str	ip, [sp, #32]
   15de4:	ldr	ip, [pc, #412]	; 15f88 <__snprintf_chk@plt+0x3abc>
   15de8:	ldr	r0, [pc, #412]	; 15f8c <__snprintf_chk@plt+0x3ac0>
   15dec:	str	ip, [sp, #28]
   15df0:	bl	1204c <XtCreateManagedWidget@plt>
   15df4:	ldr	r1, [sl]
   15df8:	mov	r3, r5
   15dfc:	mov	r2, r9
   15e00:	str	fp, [sp, #20]
   15e04:	mov	sl, fp
   15e08:	ldr	fp, [pc, #384]	; 15f90 <__snprintf_chk@plt+0x3ac4>
   15e0c:	mov	ip, r0
   15e10:	mov	r0, #1
   15e14:	str	r0, [sp]
   15e18:	ldr	r0, [pc, #372]	; 15f94 <__snprintf_chk@plt+0x3ac8>
   15e1c:	str	ip, [r4, #4]
   15e20:	str	ip, [sp, #24]
   15e24:	bl	1204c <XtCreateManagedWidget@plt>
   15e28:	ldr	r3, [pc, #340]	; 15f84 <__snprintf_chk@plt+0x3ab8>
   15e2c:	mov	lr, #2
   15e30:	ldr	ip, [r4, #4]
   15e34:	ldr	r1, [r3]
   15e38:	str	lr, [sp]
   15e3c:	ldr	lr, [sp, #12]
   15e40:	mov	r3, r5
   15e44:	str	lr, [sp, #24]
   15e48:	ldr	lr, [pc, #312]	; 15f88 <__snprintf_chk@plt+0x3abc>
   15e4c:	mov	r2, r9
   15e50:	ldr	r0, [pc, #320]	; 15f98 <__snprintf_chk@plt+0x3acc>
   15e54:	str	lr, [sp, #20]
   15e58:	str	sl, [sp, #28]
   15e5c:	str	ip, [sp, #32]
   15e60:	bl	1204c <XtCreateManagedWidget@plt>
   15e64:	ldr	r1, [fp]
   15e68:	mov	r3, r5
   15e6c:	mov	r2, r9
   15e70:	str	sl, [sp, #20]
   15e74:	mov	ip, r0
   15e78:	mov	r0, #1
   15e7c:	str	r0, [sp]
   15e80:	ldr	r0, [pc, #276]	; 15f9c <__snprintf_chk@plt+0x3ad0>
   15e84:	str	ip, [r4, #8]
   15e88:	str	ip, [sp, #24]
   15e8c:	bl	1204c <XtCreateManagedWidget@plt>
   15e90:	ldr	lr, [pc, #228]	; 15f7c <__snprintf_chk@plt+0x3ab0>
   15e94:	ldr	ip, [r4, #8]
   15e98:	str	lr, [sp, #20]
   15e9c:	mov	r3, #2
   15ea0:	ldr	lr, [pc, #224]	; 15f88 <__snprintf_chk@plt+0x3abc>
   15ea4:	ldr	r1, [fp]
   15ea8:	mov	r2, r9
   15eac:	str	r3, [sp]
   15eb0:	mov	r3, r5
   15eb4:	str	lr, [sp, #28]
   15eb8:	str	ip, [sp, #24]
   15ebc:	mov	sl, r0
   15ec0:	ldr	r0, [pc, #216]	; 15fa0 <__snprintf_chk@plt+0x3ad4>
   15ec4:	str	sl, [sp, #32]
   15ec8:	bl	1204c <XtCreateManagedWidget@plt>
   15ecc:	mov	r3, r7
   15ed0:	ldr	r2, [pc, #204]	; 15fa4 <__snprintf_chk@plt+0x3ad8>
   15ed4:	ldr	r1, [pc, #204]	; 15fa8 <__snprintf_chk@plt+0x3adc>
   15ed8:	mov	fp, r0
   15edc:	mov	r0, sl
   15ee0:	bl	12490 <XtAddCallback@plt>
   15ee4:	ldr	r1, [pc, #188]	; 15fa8 <__snprintf_chk@plt+0x3adc>
   15ee8:	mov	r3, r7
   15eec:	mov	r0, fp
   15ef0:	ldr	r2, [pc, #180]	; 15fac <__snprintf_chk@plt+0x3ae0>
   15ef4:	sub	r7, r1, #84	; 0x54
   15ef8:	bl	12490 <XtAddCallback@plt>
   15efc:	add	r3, sp, #16
   15f00:	mov	r1, r5
   15f04:	ldr	r0, [r4, #8]
   15f08:	mov	r2, #1
   15f0c:	str	r7, [sp, #20]
   15f10:	str	r3, [sp, #24]
   15f14:	bl	120ac <XtGetValues@plt>
   15f18:	ldr	r3, [sp, #16]
   15f1c:	mov	r1, r5
   15f20:	ldr	r0, [r4, #8]
   15f24:	add	r7, r7, #35	; 0x23
   15f28:	mov	r2, #1
   15f2c:	str	r7, [sp, #20]
   15f30:	str	r3, [sp, #24]
   15f34:	bl	12088 <XtSetValues@plt>
   15f38:	mov	r0, r9
   15f3c:	ldr	r1, [r4, #4]
   15f40:	bl	12394 <XtSetKeyboardFocus@plt>
   15f44:	b	15cac <__snprintf_chk@plt+0x37e0>
   15f48:	bl	120e8 <__stack_chk_fail@plt>
   15f4c:	muleq	r2, r0, r7
   15f50:	andeq	ip, r2, r0, lsl #31
   15f54:	andeq	lr, r2, r8, lsl r8
   15f58:	andeq	sp, r2, sp, ror #14
   15f5c:	andeq	fp, r1, ip, lsl ip
   15f60:	andeq	lr, r2, r8, lsr #16
   15f64:	andeq	lr, r2, r4, asr #14
   15f68:	andeq	fp, r1, r8, asr #28
   15f6c:	andeq	lr, r2, r4, ror #14
   15f70:	andeq	lr, r2, r8, ror #14
   15f74:	andeq	fp, r1, r8, asr lr
   15f78:	andeq	fp, r1, r0, ror #28
   15f7c:	andeq	fp, r1, r8, ror #28
   15f80:	andeq	fp, r1, r4, ror lr
   15f84:	andeq	lr, r2, r8, lsr r7
   15f88:	andeq	fp, r1, r4, lsl #29
   15f8c:	muleq	r1, r0, lr
   15f90:	andeq	lr, r2, r8, asr r7
   15f94:	andeq	fp, r1, r0, lsr #29
   15f98:	andeq	fp, r1, ip, lsr #29
   15f9c:			; <UNDEFINED> instruction: 0x0001beb8
   15fa0:			; <UNDEFINED> instruction: 0x000198bc
   15fa4:	andeq	r5, r1, ip, lsr #22
   15fa8:	andeq	sp, r2, r8, lsl r5
   15fac:	andeq	r5, r1, ip, lsl sl
   15fb0:	push	{r4, lr}
   15fb4:	sub	sp, sp, #8192	; 0x2000
   15fb8:	ldr	r1, [r3]
   15fbc:	ldr	r4, [pc, #348]	; 16120 <__snprintf_chk@plt+0x3c54>
   15fc0:	sub	sp, sp, #8
   15fc4:	cmp	r1, #1
   15fc8:	add	r1, sp, #8192	; 0x2000
   15fcc:	ldr	r3, [r4]
   15fd0:	add	r1, r1, #4
   15fd4:	str	r3, [r1]
   15fd8:	bne	16088 <__snprintf_chk@plt+0x3bbc>
   15fdc:	ldr	r3, [r2]
   15fe0:	ldrb	r3, [r3]
   15fe4:	sub	r3, r3, #82	; 0x52
   15fe8:	cmp	r3, #36	; 0x24
   15fec:	ldrls	pc, [pc, r3, lsl #2]
   15ff0:	b	160f0 <__snprintf_chk@plt+0x3c24>
   15ff4:	andeq	r6, r1, r4, ror #1
   15ff8:	strdeq	r6, [r1], -r0
   15ffc:	strdeq	r6, [r1], -r0
   16000:	strdeq	r6, [r1], -r0
   16004:	ldrdeq	r6, [r1], -r0
   16008:	strdeq	r6, [r1], -r0
   1600c:	strdeq	r6, [r1], -r0
   16010:	strdeq	r6, [r1], -r0
   16014:	strdeq	r6, [r1], -r0
   16018:	strdeq	r6, [r1], -r0
   1601c:	strdeq	r6, [r1], -r0
   16020:	strdeq	r6, [r1], -r0
   16024:	strdeq	r6, [r1], -r0
   16028:	strdeq	r6, [r1], -r0
   1602c:	strdeq	r6, [r1], -r0
   16030:	strdeq	r6, [r1], -r0
   16034:	strdeq	r6, [r1], -r0
   16038:	strdeq	r6, [r1], -r0
   1603c:	strdeq	r6, [r1], -r0
   16040:	strdeq	r6, [r1], -r0
   16044:	strdeq	r6, [r1], -r0
   16048:	strdeq	r6, [r1], -r0
   1604c:	strdeq	r6, [r1], -r0
   16050:	strdeq	r6, [r1], -r0
   16054:	strdeq	r6, [r1], -r0
   16058:	strdeq	r6, [r1], -r0
   1605c:	strdeq	r6, [r1], -r0
   16060:	strdeq	r6, [r1], -r0
   16064:	strdeq	r6, [r1], -r0
   16068:	strdeq	r6, [r1], -r0
   1606c:	strdeq	r6, [r1], -r0
   16070:	strdeq	r6, [r1], -r0
   16074:	andeq	r6, r1, r4, ror #1
   16078:	strdeq	r6, [r1], -r0
   1607c:	strdeq	r6, [r1], -r0
   16080:	strdeq	r6, [r1], -r0
   16084:	ldrdeq	r6, [r1], -r0
   16088:	ldr	r3, [pc, #148]	; 16124 <__snprintf_chk@plt+0x3c58>
   1608c:	add	r0, sp, #4
   16090:	mov	r2, #8192	; 0x2000
   16094:	ldr	r1, [r3, #84]	; 0x54
   16098:	bl	12190 <__strcpy_chk@plt>
   1609c:	ldr	r3, [pc, #132]	; 16128 <__snprintf_chk@plt+0x3c5c>
   160a0:	add	r1, sp, #4
   160a4:	ldr	r0, [r3, #12]
   160a8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   160ac:	add	r3, sp, #8192	; 0x2000
   160b0:	add	r3, r3, #4
   160b4:	ldr	r2, [r3]
   160b8:	ldr	r3, [r4]
   160bc:	cmp	r2, r3
   160c0:	bne	1611c <__snprintf_chk@plt+0x3c50>
   160c4:	add	sp, sp, #8192	; 0x2000
   160c8:	add	sp, sp, #8
   160cc:	pop	{r4, pc}
   160d0:	ldr	r3, [pc, #80]	; 16128 <__snprintf_chk@plt+0x3c5c>
   160d4:	ldr	r0, [r3, #8]
   160d8:	ldr	r1, [r3, #4]
   160dc:	bl	15a30 <__snprintf_chk@plt+0x3564>
   160e0:	b	160ac <__snprintf_chk@plt+0x3be0>
   160e4:	ldr	r3, [pc, #60]	; 16128 <__snprintf_chk@plt+0x3c5c>
   160e8:	ldrd	r0, [r3, #4]
   160ec:	b	160dc <__snprintf_chk@plt+0x3c10>
   160f0:	ldr	r3, [pc, #44]	; 16124 <__snprintf_chk@plt+0x3c58>
   160f4:	add	r0, sp, #4
   160f8:	ldr	r2, [pc, #44]	; 1612c <__snprintf_chk@plt+0x3c60>
   160fc:	ldr	r3, [r3, #88]	; 0x58
   16100:	mov	r1, #8192	; 0x2000
   16104:	bl	12304 <snprintf@plt>
   16108:	ldr	r3, [pc, #24]	; 16128 <__snprintf_chk@plt+0x3c5c>
   1610c:	add	r1, sp, #4
   16110:	ldr	r0, [r3, #12]
   16114:	bl	16304 <__snprintf_chk@plt+0x3e38>
   16118:	b	160ac <__snprintf_chk@plt+0x3be0>
   1611c:	bl	120e8 <__stack_chk_fail@plt>
   16120:	andeq	ip, r2, r0, lsl #31
   16124:	andeq	lr, r2, r8, lsr #16
   16128:	andeq	lr, r2, r8, lsl r8
   1612c:	andeq	fp, r1, r4, lsl #26
   16130:	ldr	r3, [r0, #12]
   16134:	cmp	r3, r1
   16138:	bxeq	lr
   1613c:	push	{r4, r5, r6, r7, r8, lr}
   16140:	ldr	r7, [r0, #28]
   16144:	cmp	r7, #0
   16148:	beq	16180 <__snprintf_chk@plt+0x3cb4>
   1614c:	ldr	r5, [r0, #20]
   16150:	mov	r6, r1
   16154:	mov	r4, #0
   16158:	sub	r5, r5, #4
   1615c:	mov	r1, r6
   16160:	ldr	r0, [r5, #4]!
   16164:	bl	16130 <__snprintf_chk@plt+0x3c64>
   16168:	add	r4, r4, #1
   1616c:	cmp	r0, #0
   16170:	popne	{r4, r5, r6, r7, r8, pc}
   16174:	cmp	r4, r7
   16178:	bne	1615c <__snprintf_chk@plt+0x3c90>
   1617c:	pop	{r4, r5, r6, r7, r8, pc}
   16180:	mov	r0, r7
   16184:	pop	{r4, r5, r6, r7, r8, pc}
   16188:	push	{r4, r5, r6, r7, r8, lr}
   1618c:	sub	sp, sp, #16
   16190:	ldr	r6, [pc, #220]	; 16274 <__snprintf_chk@plt+0x3da8>
   16194:	mov	r5, r1
   16198:	mov	r8, r0
   1619c:	ldr	r3, [r6]
   161a0:	ldr	r7, [pc, #208]	; 16278 <__snprintf_chk@plt+0x3dac>
   161a4:	str	r3, [sp, #12]
   161a8:	bl	12448 <XtParent@plt>
   161ac:	mov	r4, r0
   161b0:	bl	12340 <XtDisplay@plt>
   161b4:	mov	r1, r4
   161b8:	ldr	r2, [r7]
   161bc:	mov	r3, sp
   161c0:	bl	121c0 <XFindContext@plt>
   161c4:	cmp	r0, #2
   161c8:	beq	16248 <__snprintf_chk@plt+0x3d7c>
   161cc:	mov	r0, r4
   161d0:	bl	12340 <XtDisplay@plt>
   161d4:	uxtb	r5, r5
   161d8:	ldr	r2, [r7]
   161dc:	mov	r1, r4
   161e0:	bl	12094 <XDeleteContext@plt>
   161e4:	cmp	r5, #1
   161e8:	ldr	r5, [sp]
   161ec:	beq	16228 <__snprintf_chk@plt+0x3d5c>
   161f0:	mov	r0, r5
   161f4:	bl	12328 <XtFree@plt>
   161f8:	mov	r0, r4
   161fc:	bl	12448 <XtParent@plt>
   16200:	bl	12214 <XtPopdown@plt>
   16204:	mov	r0, r4
   16208:	bl	12448 <XtParent@plt>
   1620c:	bl	123e8 <XtDestroyWidget@plt>
   16210:	ldr	r2, [sp, #12]
   16214:	ldr	r3, [r6]
   16218:	cmp	r2, r3
   1621c:	bne	16270 <__snprintf_chk@plt+0x3da4>
   16220:	add	sp, sp, #16
   16224:	pop	{r4, r5, r6, r7, r8, pc}
   16228:	mov	r0, r4
   1622c:	bl	121b4 <XawDialogGetValueString@plt>
   16230:	ldr	r3, [r5]
   16234:	ldr	r1, [r5, #4]
   16238:	mov	r2, r0
   1623c:	mov	r0, r8
   16240:	blx	r3
   16244:	b	161f0 <__snprintf_chk@plt+0x3d24>
   16248:	ldr	r2, [pc, #44]	; 1627c <__snprintf_chk@plt+0x3db0>
   1624c:	ldr	r1, [pc, #44]	; 16280 <__snprintf_chk@plt+0x3db4>
   16250:	ldr	r3, [pc, #44]	; 16284 <__snprintf_chk@plt+0x3db8>
   16254:	ldr	r0, [r2, #12]
   16258:	str	r1, [sp, #4]
   1625c:	mov	r2, #1
   16260:	add	r1, sp, #4
   16264:	str	r3, [sp, #8]
   16268:	bl	12088 <XtSetValues@plt>
   1626c:	b	161cc <__snprintf_chk@plt+0x3d00>
   16270:	bl	120e8 <__stack_chk_fail@plt>
   16274:	andeq	ip, r2, r0, lsl #31
   16278:	andeq	lr, r2, r0, lsr #15
   1627c:	andeq	lr, r2, r8, lsl r8
   16280:	andeq	sp, r2, sp, lsr r6
   16284:	andeq	fp, r1, r4, asr #29
   16288:	ldr	r1, [r1]
   1628c:	ldr	r0, [r0]
   16290:	b	11fb0 <strcmp@plt>
   16294:	cmp	r2, #1
   16298:	bxls	lr
   1629c:	push	{r4, r5, r6, lr}
   162a0:	mov	r6, #1
   162a4:	ldr	r4, [r0, #28]
   162a8:	cmp	r4, #0
   162ac:	beq	162ec <__snprintf_chk@plt+0x3e20>
   162b0:	ldr	ip, [r0, #20]
   162b4:	ldr	r5, [r1, #4]!
   162b8:	ldr	r0, [ip]
   162bc:	ldr	r3, [r0, #8]
   162c0:	cmp	r3, r5
   162c4:	beq	162f4 <__snprintf_chk@plt+0x3e28>
   162c8:	mov	r3, #0
   162cc:	b	162e0 <__snprintf_chk@plt+0x3e14>
   162d0:	ldr	r0, [ip, #4]!
   162d4:	ldr	lr, [r0, #8]
   162d8:	cmp	lr, r5
   162dc:	beq	162f4 <__snprintf_chk@plt+0x3e28>
   162e0:	add	r3, r3, #1
   162e4:	cmp	r3, r4
   162e8:	bne	162d0 <__snprintf_chk@plt+0x3e04>
   162ec:	mov	r0, #0
   162f0:	pop	{r4, r5, r6, pc}
   162f4:	add	r6, r6, #1
   162f8:	cmp	r6, r2
   162fc:	bne	162a4 <__snprintf_chk@plt+0x3dd8>
   16300:	pop	{r4, r5, r6, pc}
   16304:	push	{r4, lr}
   16308:	sub	sp, sp, #16
   1630c:	ldr	r4, [pc, #56]	; 1634c <__snprintf_chk@plt+0x3e80>
   16310:	ldr	r3, [pc, #56]	; 16350 <__snprintf_chk@plt+0x3e84>
   16314:	str	r1, [sp, #8]
   16318:	ldr	ip, [r4]
   1631c:	mov	r2, #1
   16320:	add	r1, sp, #4
   16324:	str	r3, [sp, #4]
   16328:	str	ip, [sp, #12]
   1632c:	bl	12088 <XtSetValues@plt>
   16330:	ldr	r2, [sp, #12]
   16334:	ldr	r3, [r4]
   16338:	cmp	r2, r3
   1633c:	bne	16348 <__snprintf_chk@plt+0x3e7c>
   16340:	add	sp, sp, #16
   16344:	pop	{r4, pc}
   16348:	bl	120e8 <__stack_chk_fail@plt>
   1634c:	andeq	ip, r2, r0, lsl #31
   16350:	andeq	sp, r2, sp, lsr r6
   16354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16358:	mov	r6, r1
   1635c:	ldrb	r1, [r0]
   16360:	mov	r9, r0
   16364:	mov	sl, #1
   16368:	cmp	r1, r6
   1636c:	addeq	r9, r0, #1
   16370:	mov	r8, r2
   16374:	mov	r7, r3
   16378:	str	sl, [r3]
   1637c:	mov	r0, r9
   16380:	b	1638c <__snprintf_chk@plt+0x3ec0>
   16384:	mov	sl, r3
   16388:	str	r3, [r7]
   1638c:	mov	r1, r6
   16390:	bl	12298 <strchr@plt>
   16394:	add	r3, sl, #1
   16398:	subs	r5, r0, #0
   1639c:	add	r0, r5, #1
   163a0:	bne	16384 <__snprintf_chk@plt+0x3eb8>
   163a4:	mov	r0, r9
   163a8:	bl	12280 <strlen@plt>
   163ac:	mov	r4, #1
   163b0:	add	r0, r0, r4
   163b4:	add	r0, r0, sl, lsl #2
   163b8:	bl	12064 <XtMalloc@plt>
   163bc:	mov	r1, r9
   163c0:	str	r0, [r8]
   163c4:	ldr	r3, [r7]
   163c8:	add	r3, r0, r3, lsl #2
   163cc:	mov	r0, r3
   163d0:	bl	12184 <strcpy@plt>
   163d4:	ldr	r2, [r8]
   163d8:	mov	r3, r0
   163dc:	str	r0, [r2]
   163e0:	b	163f4 <__snprintf_chk@plt+0x3f28>
   163e4:	strb	r5, [r0]
   163e8:	ldr	r2, [r8]
   163ec:	str	r3, [r2, r4, lsl #2]
   163f0:	add	r4, r4, #1
   163f4:	mov	r0, r3
   163f8:	mov	r1, r6
   163fc:	bl	12298 <strchr@plt>
   16400:	cmp	r0, #0
   16404:	add	r3, r0, #1
   16408:	bne	163e4 <__snprintf_chk@plt+0x3f18>
   1640c:	ldr	r3, [r8]
   16410:	sub	r4, r4, #-1073741823	; 0xc0000001
   16414:	ldr	r3, [r3, r4, lsl #2]
   16418:	ldrb	r3, [r3]
   1641c:	cmp	r3, #0
   16420:	ldreq	r3, [r7]
   16424:	subeq	r3, r3, #1
   16428:	streq	r3, [r7]
   1642c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16430:	push	{r4, r5, r6, r7, r8, lr}
   16434:	mov	r7, r0
   16438:	ldr	r4, [r0]
   1643c:	mov	r6, r1
   16440:	cmp	r4, #0
   16444:	beq	16484 <__snprintf_chk@plt+0x3fb8>
   16448:	mov	r0, r4
   1644c:	bl	12280 <strlen@plt>
   16450:	mov	r8, r0
   16454:	mov	r5, r0
   16458:	mov	r0, r6
   1645c:	bl	12280 <strlen@plt>
   16460:	add	r1, r0, r5
   16464:	add	r1, r1, #1
   16468:	mov	r0, r4
   1646c:	bl	1219c <XtRealloc@plt>
   16470:	mov	r1, r6
   16474:	str	r0, [r7]
   16478:	add	r0, r0, r8
   1647c:	pop	{r4, r5, r6, r7, r8, lr}
   16480:	b	12184 <strcpy@plt>
   16484:	mov	r8, r4
   16488:	mov	r5, r4
   1648c:	b	16458 <__snprintf_chk@plt+0x3f8c>
   16490:	subs	r3, r0, #0
   16494:	beq	164ac <__snprintf_chk@plt+0x3fe0>
   16498:	ldr	ip, [r1]
   1649c:	ldr	r3, [r3, #8]
   164a0:	cmp	ip, r3
   164a4:	bne	164ac <__snprintf_chk@plt+0x3fe0>
   164a8:	b	16294 <__snprintf_chk@plt+0x3dc8>
   164ac:	mov	r0, #0
   164b0:	bx	lr
   164b4:	subs	r3, r0, #0
   164b8:	bxeq	lr
   164bc:	ldr	r0, [r3, #4]
   164c0:	b	16130 <__snprintf_chk@plt+0x3c64>
   164c4:	ldr	r2, [pc, #92]	; 16528 <__snprintf_chk@plt+0x405c>
   164c8:	push	{r4, lr}
   164cc:	ldr	ip, [r1, #12]
   164d0:	ldr	r2, [r2]
   164d4:	cmp	ip, r2
   164d8:	beq	164f0 <__snprintf_chk@plt+0x4024>
   164dc:	ldr	r3, [pc, #72]	; 1652c <__snprintf_chk@plt+0x4060>
   164e0:	ldr	r3, [r3]
   164e4:	blx	r3
   164e8:	mov	r0, #0
   164ec:	pop	{r4, pc}
   164f0:	ldrb	r3, [r1, #16]
   164f4:	cmp	r3, #3
   164f8:	beq	16518 <__snprintf_chk@plt+0x404c>
   164fc:	ldr	r3, [pc, #44]	; 16530 <__snprintf_chk@plt+0x4064>
   16500:	ldr	r2, [r3]
   16504:	bl	11f80 <XmuPrintDefaultErrorMessage@plt>
   16508:	cmp	r0, #0
   1650c:	beq	164e8 <__snprintf_chk@plt+0x401c>
   16510:	mov	r0, #1
   16514:	bl	12244 <exit@plt>
   16518:	ldr	r3, [pc, #20]	; 16534 <__snprintf_chk@plt+0x4068>
   1651c:	mov	r2, #1
   16520:	str	r2, [r3]
   16524:	b	164e8 <__snprintf_chk@plt+0x401c>
   16528:	andeq	lr, r2, ip, lsl #16
   1652c:	andeq	lr, r2, r8, lsl #16
   16530:	andeq	lr, r2, r0, asr #14
   16534:	andeq	lr, r2, r0, asr #15
   16538:	push	{r4, r5, r6, r7, lr}
   1653c:	sub	sp, sp, #8192	; 0x2000
   16540:	ldr	r4, [pc, #228]	; 1662c <__snprintf_chk@plt+0x4160>
   16544:	sub	sp, sp, #28
   16548:	mov	r5, r2
   1654c:	add	r2, sp, #8192	; 0x2000
   16550:	ldr	r3, [r4]
   16554:	add	r2, r2, #20
   16558:	subs	r7, r1, #0
   1655c:	str	r3, [r2]
   16560:	beq	165b4 <__snprintf_chk@plt+0x40e8>
   16564:	ldr	r1, [pc, #196]	; 16630 <__snprintf_chk@plt+0x4164>
   16568:	mov	r0, r5
   1656c:	bl	11fd4 <fopen@plt>
   16570:	subs	r6, r0, #0
   16574:	beq	165e0 <__snprintf_chk@plt+0x4114>
   16578:	ldr	r0, [r7, #4]
   1657c:	mov	r2, r6
   16580:	mov	r1, #0
   16584:	bl	197a8 <__snprintf_chk@plt+0x72dc>
   16588:	mov	r0, r6
   1658c:	bl	12388 <fclose@plt>
   16590:	add	r3, sp, #8192	; 0x2000
   16594:	add	r3, r3, #20
   16598:	ldr	r2, [r3]
   1659c:	ldr	r3, [r4]
   165a0:	cmp	r2, r3
   165a4:	bne	16628 <__snprintf_chk@plt+0x415c>
   165a8:	add	sp, sp, #8192	; 0x2000
   165ac:	add	sp, sp, #28
   165b0:	pop	{r4, r5, r6, r7, pc}
   165b4:	ldr	r2, [pc, #120]	; 16634 <__snprintf_chk@plt+0x4168>
   165b8:	ldr	r3, [pc, #120]	; 16638 <__snprintf_chk@plt+0x416c>
   165bc:	add	r1, sp, #12
   165c0:	ldr	r0, [r2, #12]
   165c4:	ldr	r2, [r3, #68]	; 0x44
   165c8:	ldr	r3, [pc, #108]	; 1663c <__snprintf_chk@plt+0x4170>
   165cc:	str	r2, [sp, #16]
   165d0:	mov	r2, #1
   165d4:	str	r3, [sp, #12]
   165d8:	bl	12088 <XtSetValues@plt>
   165dc:	b	16590 <__snprintf_chk@plt+0x40c4>
   165e0:	ldr	r3, [pc, #80]	; 16638 <__snprintf_chk@plt+0x416c>
   165e4:	add	r6, sp, #20
   165e8:	mov	r0, r6
   165ec:	ldr	r2, [r3, #96]	; 0x60
   165f0:	mov	r3, #8192	; 0x2000
   165f4:	mov	r1, r3
   165f8:	stm	sp, {r2, r5}
   165fc:	mov	r2, #1
   16600:	bl	124cc <__snprintf_chk@plt>
   16604:	ldr	r2, [pc, #40]	; 16634 <__snprintf_chk@plt+0x4168>
   16608:	ldr	r3, [pc, #44]	; 1663c <__snprintf_chk@plt+0x4170>
   1660c:	add	r1, sp, #12
   16610:	ldr	r0, [r2, #12]
   16614:	mov	r2, #1
   16618:	str	r6, [sp, #16]
   1661c:	str	r3, [sp, #12]
   16620:	bl	12088 <XtSetValues@plt>
   16624:	b	16590 <__snprintf_chk@plt+0x40c4>
   16628:	bl	120e8 <__stack_chk_fail@plt>
   1662c:	andeq	ip, r2, r0, lsl #31
   16630:	strdeq	fp, [r1], -r4
   16634:	andeq	lr, r2, r8, lsl r8
   16638:	andeq	lr, r2, r8, lsr #16
   1663c:	andeq	sp, r2, sp, lsr r6
   16640:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16644:	sub	sp, sp, #80	; 0x50
   16648:	ldr	r5, [pc, #460]	; 1681c <__snprintf_chk@plt+0x4350>
   1664c:	mov	r7, r0
   16650:	mov	r0, r1
   16654:	ldr	r3, [r5]
   16658:	mov	r4, r1
   1665c:	mov	r6, r2
   16660:	str	r3, [sp, #76]	; 0x4c
   16664:	bl	12208 <XtRealizeWidget@plt>
   16668:	cmp	r7, #0
   1666c:	beq	167c8 <__snprintf_chk@plt+0x42fc>
   16670:	ldr	r3, [r7]
   16674:	sub	r3, r3, #2
   16678:	cmp	r3, #3
   1667c:	ldrls	pc, [pc, r3, lsl #2]
   16680:	b	167c8 <__snprintf_chk@plt+0x42fc>
   16684:	muleq	r1, r4, r6
   16688:	muleq	r1, r4, r6
   1668c:	muleq	r1, r4, r6
   16690:	muleq	r1, r4, r6
   16694:	ldrd	r2, [r7, #40]	; 0x28
   16698:	add	r8, sp, #44	; 0x2c
   1669c:	add	r7, sp, #48	; 0x30
   166a0:	add	r9, sp, #40	; 0x28
   166a4:	strd	r2, [sp, #24]
   166a8:	ldr	r2, [pc, #368]	; 16820 <__snprintf_chk@plt+0x4354>
   166ac:	add	r1, sp, #52	; 0x34
   166b0:	sub	r3, r2, #636	; 0x27c
   166b4:	sub	ip, r2, #748	; 0x2ec
   166b8:	sub	r3, r3, #2
   166bc:	str	r2, [sp, #52]	; 0x34
   166c0:	mov	r0, r4
   166c4:	mov	r2, #3
   166c8:	str	ip, [sp, #68]	; 0x44
   166cc:	str	r3, [sp, #60]	; 0x3c
   166d0:	str	r9, [sp, #56]	; 0x38
   166d4:	str	r8, [sp, #64]	; 0x40
   166d8:	str	r7, [sp, #72]	; 0x48
   166dc:	bl	120ac <XtGetValues@plt>
   166e0:	ldrh	r3, [sp, #48]	; 0x30
   166e4:	ldrh	r2, [sp, #40]	; 0x28
   166e8:	ldrh	r0, [sp, #44]	; 0x2c
   166ec:	ldr	r1, [sp, #24]
   166f0:	lsl	r3, r3, #1
   166f4:	uxth	r3, r3
   166f8:	add	r2, r3, r2
   166fc:	add	r3, r3, r0
   16700:	uxth	r2, r2
   16704:	strh	r2, [sp, #40]	; 0x28
   16708:	subs	r2, r1, r2, lsr #1
   1670c:	strh	r3, [sp, #44]	; 0x2c
   16710:	mov	r0, r4
   16714:	movmi	r3, #0
   16718:	strpl	r2, [sp, #24]
   1671c:	strmi	r3, [sp, #24]
   16720:	bl	120f4 <XtScreen@plt>
   16724:	ldrh	r1, [sp, #40]	; 0x28
   16728:	ldr	r2, [sp, #24]
   1672c:	ldr	r3, [r0, #12]
   16730:	mov	r0, r4
   16734:	sub	r3, r3, r1
   16738:	cmp	r2, r3
   1673c:	strgt	r3, [sp, #24]
   16740:	ldrsh	r3, [sp, #44]	; 0x2c
   16744:	ldr	r2, [sp, #28]
   16748:	add	r3, r3, r3, lsr #31
   1674c:	subs	r3, r2, r3, asr #1
   16750:	movmi	r3, #0
   16754:	str	r3, [sp, #28]
   16758:	bl	120f4 <XtScreen@plt>
   1675c:	ldrh	r1, [sp, #44]	; 0x2c
   16760:	ldr	r2, [sp, #28]
   16764:	ldr	ip, [sp, #24]
   16768:	str	ip, [sp, #56]	; 0x38
   1676c:	ldr	r3, [r0, #16]
   16770:	sub	r3, r3, r1
   16774:	cmp	r2, r3
   16778:	movgt	r2, r3
   1677c:	strgt	r3, [sp, #28]
   16780:	ldr	r3, [pc, #156]	; 16824 <__snprintf_chk@plt+0x4358>
   16784:	add	r1, sp, #52	; 0x34
   16788:	add	r0, r3, #2
   1678c:	str	r2, [sp, #64]	; 0x40
   16790:	str	r0, [sp, #60]	; 0x3c
   16794:	mov	r2, #2
   16798:	mov	r0, r4
   1679c:	str	r3, [sp, #52]	; 0x34
   167a0:	bl	12088 <XtSetValues@plt>
   167a4:	mov	r1, r6
   167a8:	mov	r0, r4
   167ac:	bl	12238 <XtPopup@plt>
   167b0:	ldr	r2, [sp, #76]	; 0x4c
   167b4:	ldr	r3, [r5]
   167b8:	cmp	r2, r3
   167bc:	bne	16818 <__snprintf_chk@plt+0x434c>
   167c0:	add	sp, sp, #80	; 0x50
   167c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   167c8:	mov	r0, r4
   167cc:	bl	12340 <XtDisplay@plt>
   167d0:	add	r9, sp, #40	; 0x28
   167d4:	add	r7, sp, #48	; 0x30
   167d8:	add	r8, sp, #44	; 0x2c
   167dc:	mov	sl, r0
   167e0:	mov	r0, r4
   167e4:	bl	120c4 <XtWindow@plt>
   167e8:	add	r2, sp, #28
   167ec:	add	r3, sp, #24
   167f0:	stmib	sp, {r2, r9}
   167f4:	str	r3, [sp]
   167f8:	str	r7, [sp, #16]
   167fc:	str	r8, [sp, #12]
   16800:	add	r3, sp, #36	; 0x24
   16804:	add	r2, sp, #32
   16808:	mov	r1, r0
   1680c:	mov	r0, sl
   16810:	bl	1225c <XQueryPointer@plt>
   16814:	b	166a8 <__snprintf_chk@plt+0x41dc>
   16818:	bl	120e8 <__stack_chk_fail@plt>
   1681c:	andeq	ip, r2, r0, lsl #31
   16820:	strdeq	sp, [r2], -r8
   16824:	andeq	sp, r2, r5, lsl #16
   16828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1682c:	mov	r6, r0
   16830:	ldr	r7, [pc, #328]	; 16980 <__snprintf_chk@plt+0x44b4>
   16834:	ldr	r8, [pc, #328]	; 16984 <__snprintf_chk@plt+0x44b8>
   16838:	sub	sp, sp, #44	; 0x2c
   1683c:	ldr	ip, [r7]
   16840:	ldr	r0, [r8]
   16844:	cmp	ip, #0
   16848:	mov	r5, r1
   1684c:	mov	r4, r2
   16850:	mov	fp, r3
   16854:	str	r0, [sp, #36]	; 0x24
   16858:	ldr	sl, [sp, #80]	; 0x50
   1685c:	beq	16970 <__snprintf_chk@plt+0x44a4>
   16860:	ldr	r1, [pc, #288]	; 16988 <__snprintf_chk@plt+0x44bc>
   16864:	mov	r3, #0
   16868:	mov	r2, r6
   1686c:	ldr	r1, [r1]
   16870:	ldr	r0, [pc, #276]	; 1698c <__snprintf_chk@plt+0x44c0>
   16874:	str	r3, [sp]
   16878:	bl	12034 <XtCreatePopupShell@plt>
   1687c:	ldr	r6, [pc, #268]	; 16990 <__snprintf_chk@plt+0x44c4>
   16880:	ldr	r2, [pc, #268]	; 16994 <__snprintf_chk@plt+0x44c8>
   16884:	mov	r3, #2
   16888:	add	ip, r6, #428	; 0x1ac
   1688c:	ldr	r1, [r2]
   16890:	add	ip, ip, r3
   16894:	str	r3, [sp]
   16898:	add	r3, sp, #20
   1689c:	str	ip, [sp, #28]
   168a0:	str	r5, [sp, #24]
   168a4:	str	r4, [sp, #32]
   168a8:	str	r6, [sp, #20]
   168ac:	mov	r2, r0
   168b0:	mov	r9, r0
   168b4:	ldr	r0, [pc, #220]	; 16998 <__snprintf_chk@plt+0x44cc>
   168b8:	bl	1204c <XtCreateManagedWidget@plt>
   168bc:	mov	r4, r0
   168c0:	mov	r0, #8
   168c4:	bl	12064 <XtMalloc@plt>
   168c8:	mov	r5, r0
   168cc:	mov	r0, r4
   168d0:	str	fp, [r5]
   168d4:	str	sl, [r5, #4]
   168d8:	bl	12340 <XtDisplay@plt>
   168dc:	mov	r3, r5
   168e0:	ldr	r2, [r7]
   168e4:	mov	r1, r4
   168e8:	bl	120a0 <XSaveContext@plt>
   168ec:	subs	r5, r0, #0
   168f0:	bne	16944 <__snprintf_chk@plt+0x4478>
   168f4:	mov	r3, #1
   168f8:	ldr	r2, [pc, #156]	; 1699c <__snprintf_chk@plt+0x44d0>
   168fc:	ldr	r1, [pc, #156]	; 169a0 <__snprintf_chk@plt+0x44d4>
   16900:	mov	r0, r4
   16904:	bl	1222c <XawDialogAddButton@plt>
   16908:	mov	r0, r4
   1690c:	ldr	r2, [pc, #136]	; 1699c <__snprintf_chk@plt+0x44d0>
   16910:	ldr	r1, [pc, #140]	; 169a4 <__snprintf_chk@plt+0x44d8>
   16914:	mov	r3, r5
   16918:	bl	1222c <XawDialogAddButton@plt>
   1691c:	mov	r2, r5
   16920:	mov	r1, r9
   16924:	mov	r0, r5
   16928:	bl	16640 <__snprintf_chk@plt+0x4174>
   1692c:	ldr	r2, [sp, #36]	; 0x24
   16930:	ldr	r3, [r8]
   16934:	cmp	r2, r3
   16938:	bne	1697c <__snprintf_chk@plt+0x44b0>
   1693c:	add	sp, sp, #44	; 0x2c
   16940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16944:	ldr	r2, [pc, #92]	; 169a8 <__snprintf_chk@plt+0x44dc>
   16948:	ldr	r3, [pc, #92]	; 169ac <__snprintf_chk@plt+0x44e0>
   1694c:	add	r1, sp, #12
   16950:	ldr	r0, [r2, #12]
   16954:	mov	r2, #1
   16958:	str	r6, [sp, #12]
   1695c:	str	r3, [sp, #16]
   16960:	bl	12088 <XtSetValues@plt>
   16964:	mov	r0, r9
   16968:	bl	123e8 <XtDestroyWidget@plt>
   1696c:	b	1692c <__snprintf_chk@plt+0x4460>
   16970:	bl	1240c <XrmUniqueQuark@plt>
   16974:	str	r0, [r7]
   16978:	b	16860 <__snprintf_chk@plt+0x4394>
   1697c:	bl	120e8 <__stack_chk_fail@plt>
   16980:	andeq	lr, r2, r0, lsr #15
   16984:	andeq	ip, r2, r0, lsl #31
   16988:	andeq	lr, r2, r4, asr #14
   1698c:	strdeq	fp, [r1], -r8
   16990:	andeq	sp, r2, sp, lsr r6
   16994:	andeq	lr, r2, r4, lsr r7
   16998:	andeq	fp, r1, r4, lsl #30
   1699c:	andeq	r6, r1, r8, lsl #3
   169a0:	andeq	r9, r1, r4, asr #17
   169a4:			; <UNDEFINED> instruction: 0x000198bc
   169a8:	andeq	lr, r2, r8, lsl r8
   169ac:	andeq	fp, r1, ip, lsl #30
   169b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   169b4:	mov	r5, r0
   169b8:	ldr	r3, [r0, #16]
   169bc:	mov	r6, r1
   169c0:	cmp	r3, #0
   169c4:	mov	r7, r2
   169c8:	movne	r4, #1
   169cc:	bne	169d8 <__snprintf_chk@plt+0x450c>
   169d0:	b	16a50 <__snprintf_chk@plt+0x4584>
   169d4:	mov	r4, r0
   169d8:	ldr	r3, [r3, #16]
   169dc:	add	r0, r4, #1
   169e0:	cmp	r3, #0
   169e4:	bne	169d4 <__snprintf_chk@plt+0x4508>
   169e8:	add	r8, r4, #2
   169ec:	lsl	r8, r8, #2
   169f0:	sub	r9, r8, #4
   169f4:	mov	r0, r8
   169f8:	bl	12064 <XtMalloc@plt>
   169fc:	str	r0, [r6]
   16a00:	mov	r0, r8
   16a04:	bl	12064 <XtMalloc@plt>
   16a08:	mov	r2, #0
   16a0c:	lsl	r3, r4, #2
   16a10:	str	r0, [r7]
   16a14:	str	r2, [r0, r9]
   16a18:	ldr	r1, [r6]
   16a1c:	str	r2, [r1, r9]
   16a20:	ldr	r0, [r6]
   16a24:	ldr	ip, [r5]
   16a28:	sub	r4, r4, #1
   16a2c:	str	ip, [r0, r3]
   16a30:	ldr	r0, [r7]
   16a34:	ldr	ip, [r5, #4]
   16a38:	cmn	r4, #1
   16a3c:	str	ip, [r0, r3]
   16a40:	sub	r3, r3, #4
   16a44:	ldr	r5, [r5, #16]
   16a48:	bne	16a20 <__snprintf_chk@plt+0x4554>
   16a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a50:	mov	r4, r3
   16a54:	mov	r9, #4
   16a58:	mov	r8, #8
   16a5c:	b	169f4 <__snprintf_chk@plt+0x4528>
   16a60:	ldr	r3, [pc, #308]	; 16b9c <__snprintf_chk@plt+0x46d0>
   16a64:	push	{r4, r5, r6, r7, r8, lr}
   16a68:	ldrb	r5, [r3]
   16a6c:	cmp	r5, #0
   16a70:	bne	16b88 <__snprintf_chk@plt+0x46bc>
   16a74:	ldr	r4, [r0, #40]	; 0x28
   16a78:	mov	r2, #1
   16a7c:	mov	r6, r0
   16a80:	strb	r2, [r3]
   16a84:	ldr	r0, [r4]
   16a88:	cmp	r0, #0
   16a8c:	movle	r7, r5
   16a90:	bgt	16b1c <__snprintf_chk@plt+0x4650>
   16a94:	ldr	r0, [r4, #4]
   16a98:	cmp	r0, #0
   16a9c:	movle	r2, #0
   16aa0:	bgt	16ab4 <__snprintf_chk@plt+0x45e8>
   16aa4:	mov	r1, r7
   16aa8:	mov	r0, r6
   16aac:	pop	{r4, r5, r6, r7, r8, lr}
   16ab0:	b	17b4c <__snprintf_chk@plt+0x5680>
   16ab4:	add	r0, r0, #1
   16ab8:	lsl	r0, r0, #2
   16abc:	bl	12064 <XtMalloc@plt>
   16ac0:	ldr	r3, [r4, #4]
   16ac4:	cmp	r3, #0
   16ac8:	mov	r2, r0
   16acc:	movle	r3, r0
   16ad0:	ble	16b04 <__snprintf_chk@plt+0x4638>
   16ad4:	mov	ip, #0
   16ad8:	mov	r3, ip
   16adc:	sub	r1, r0, #4
   16ae0:	ldr	lr, [r4, #12]
   16ae4:	add	r3, r3, #1
   16ae8:	ldr	lr, [lr, ip]
   16aec:	add	ip, ip, #12
   16af0:	str	lr, [r1, #4]!
   16af4:	ldr	lr, [r4, #4]
   16af8:	cmp	lr, r3
   16afc:	bgt	16ae0 <__snprintf_chk@plt+0x4614>
   16b00:	add	r3, r2, r3, lsl #2
   16b04:	mov	r1, #0
   16b08:	str	r1, [r3]
   16b0c:	mov	r0, r6
   16b10:	mov	r1, r7
   16b14:	pop	{r4, r5, r6, r7, r8, lr}
   16b18:	b	17b4c <__snprintf_chk@plt+0x5680>
   16b1c:	add	r0, r0, r2
   16b20:	lsl	r0, r0, #2
   16b24:	bl	12064 <XtMalloc@plt>
   16b28:	ldr	r3, [r4]
   16b2c:	cmp	r3, #0
   16b30:	mov	r7, r0
   16b34:	movle	r2, r0
   16b38:	ble	16b6c <__snprintf_chk@plt+0x46a0>
   16b3c:	mov	r3, r5
   16b40:	mov	r2, r5
   16b44:	sub	r1, r0, #4
   16b48:	ldr	r0, [r4, #8]
   16b4c:	add	r2, r2, #1
   16b50:	ldr	r0, [r0, r3]
   16b54:	add	r3, r3, #12
   16b58:	str	r0, [r1, #4]!
   16b5c:	ldr	r0, [r4]
   16b60:	cmp	r0, r2
   16b64:	bgt	16b48 <__snprintf_chk@plt+0x467c>
   16b68:	add	r2, r7, r2, lsl #2
   16b6c:	mov	r3, #0
   16b70:	str	r3, [r2]
   16b74:	ldr	r0, [r4, #4]
   16b78:	cmp	r0, #0
   16b7c:	movle	r2, #0
   16b80:	ble	16aa4 <__snprintf_chk@plt+0x45d8>
   16b84:	b	16ab4 <__snprintf_chk@plt+0x45e8>
   16b88:	ldr	r3, [pc, #16]	; 16ba0 <__snprintf_chk@plt+0x46d4>
   16b8c:	mov	r0, r1
   16b90:	pop	{r4, r5, r6, r7, r8, lr}
   16b94:	ldr	r1, [r3, #136]	; 0x88
   16b98:	b	16430 <__snprintf_chk@plt+0x3f64>
   16b9c:	muleq	r2, r4, r7
   16ba0:	andeq	lr, r2, r8, lsr #16
   16ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ba8:	sub	sp, sp, #16384	; 0x4000
   16bac:	ldr	r3, [pc, #900]	; 16f38 <__snprintf_chk@plt+0x4a6c>
   16bb0:	sub	sp, sp, #28
   16bb4:	mov	r9, r0
   16bb8:	ldrh	r0, [r0, #4]
   16bbc:	add	r2, sp, #16384	; 0x4000
   16bc0:	ldr	r3, [r3]
   16bc4:	add	r2, r2, #20
   16bc8:	mov	r6, #0
   16bcc:	cmp	r0, #0
   16bd0:	str	r3, [r2]
   16bd4:	str	r6, [sp, #16]
   16bd8:	beq	16ed4 <__snprintf_chk@plt+0x4a08>
   16bdc:	ldr	fp, [pc, #856]	; 16f3c <__snprintf_chk@plt+0x4a70>
   16be0:	mov	r7, r6
   16be4:	b	16c20 <__snprintf_chk@plt+0x4754>
   16be8:	ldr	r3, [pc, #848]	; 16f40 <__snprintf_chk@plt+0x4a74>
   16bec:	mov	r1, #8192	; 0x2000
   16bf0:	add	r0, sp, #20
   16bf4:	ldr	r3, [r3, #64]	; 0x40
   16bf8:	ldr	r2, [pc, #836]	; 16f44 <__snprintf_chk@plt+0x4a78>
   16bfc:	bl	12304 <snprintf@plt>
   16c00:	add	r1, sp, #20
   16c04:	add	r0, sp, #16
   16c08:	bl	16430 <__snprintf_chk@plt+0x3f64>
   16c0c:	ldrh	r3, [r9, #4]
   16c10:	add	r7, r7, #1
   16c14:	add	r6, r6, #28
   16c18:	cmp	r3, r7
   16c1c:	ble	16ed0 <__snprintf_chk@plt+0x4a04>
   16c20:	ldr	r3, [fp]
   16c24:	ldr	r4, [r9, #8]
   16c28:	ldr	r0, [r3, #4]
   16c2c:	add	r4, r4, r6
   16c30:	cmp	r0, #0
   16c34:	ldr	r1, [r4, #4]
   16c38:	beq	16be8 <__snprintf_chk@plt+0x471c>
   16c3c:	ldr	r2, [r1]
   16c40:	ldr	r3, [r0, #8]
   16c44:	cmp	r2, r3
   16c48:	bne	16be8 <__snprintf_chk@plt+0x471c>
   16c4c:	ldrh	r2, [r4]
   16c50:	bl	16294 <__snprintf_chk@plt+0x3dc8>
   16c54:	subs	r3, r0, #0
   16c58:	str	r3, [sp, #12]
   16c5c:	beq	16be8 <__snprintf_chk@plt+0x471c>
   16c60:	ldr	r3, [sp, #12]
   16c64:	ldr	r5, [r3, #40]	; 0x28
   16c68:	cmp	r5, #0
   16c6c:	beq	16d38 <__snprintf_chk@plt+0x486c>
   16c70:	ldr	r3, [r5]
   16c74:	cmp	r3, #0
   16c78:	ble	16ccc <__snprintf_chk@plt+0x4800>
   16c7c:	mov	r4, #0
   16c80:	mov	r8, r4
   16c84:	ldr	r3, [r5, #8]
   16c88:	add	r8, r8, #1
   16c8c:	ldr	r0, [r3, r4]
   16c90:	bl	12328 <XtFree@plt>
   16c94:	ldr	r3, [r5, #8]
   16c98:	add	r3, r3, r4
   16c9c:	ldr	r0, [r3, #4]
   16ca0:	bl	12328 <XtFree@plt>
   16ca4:	ldr	r3, [r5, #8]
   16ca8:	add	r3, r3, r4
   16cac:	add	r4, r4, #12
   16cb0:	ldr	r0, [r3, #8]
   16cb4:	bl	12328 <XtFree@plt>
   16cb8:	ldr	r3, [r5]
   16cbc:	cmp	r8, r3
   16cc0:	blt	16c84 <__snprintf_chk@plt+0x47b8>
   16cc4:	ldr	r0, [r5, #8]
   16cc8:	bl	1210c <XFree@plt>
   16ccc:	ldr	r3, [r5, #4]
   16cd0:	cmp	r3, #0
   16cd4:	ble	16d28 <__snprintf_chk@plt+0x485c>
   16cd8:	mov	r4, #0
   16cdc:	mov	r8, r4
   16ce0:	ldr	r3, [r5, #12]
   16ce4:	add	r8, r8, #1
   16ce8:	ldr	r0, [r3, r4]
   16cec:	bl	12328 <XtFree@plt>
   16cf0:	ldr	r3, [r5, #12]
   16cf4:	add	r3, r3, r4
   16cf8:	ldr	r0, [r3, #4]
   16cfc:	bl	12328 <XtFree@plt>
   16d00:	ldr	r3, [r5, #12]
   16d04:	add	r3, r3, r4
   16d08:	add	r4, r4, #12
   16d0c:	ldr	r0, [r3, #8]
   16d10:	bl	12328 <XtFree@plt>
   16d14:	ldr	r3, [r5, #4]
   16d18:	cmp	r8, r3
   16d1c:	blt	16ce0 <__snprintf_chk@plt+0x4814>
   16d20:	ldr	r0, [r5, #12]
   16d24:	bl	1210c <XFree@plt>
   16d28:	mov	r0, r5
   16d2c:	bl	1210c <XFree@plt>
   16d30:	ldr	r4, [r9, #8]
   16d34:	add	r4, r4, r6
   16d38:	ldrb	r5, [r4, #12]
   16d3c:	cmp	r5, #0
   16d40:	bne	16efc <__snprintf_chk@plt+0x4a30>
   16d44:	mov	r0, #20
   16d48:	bl	12064 <XtMalloc@plt>
   16d4c:	mov	r8, r0
   16d50:	ldrh	r0, [r4, #20]
   16d54:	add	r0, r0, r0, lsl #1
   16d58:	lsl	r0, r0, #2
   16d5c:	bl	12064 <XtMalloc@plt>
   16d60:	str	r0, [r8, #8]
   16d64:	ldrh	r3, [r4, #20]
   16d68:	str	r5, [r8]
   16d6c:	str	r5, [r8, #4]
   16d70:	mov	sl, r0
   16d74:	add	r3, r3, r3, lsl #1
   16d78:	add	r3, r0, r3, lsl #2
   16d7c:	sub	r3, r3, #12
   16d80:	str	r3, [r8, #12]
   16d84:	ldrh	r1, [r4, #20]
   16d88:	cmp	r1, #0
   16d8c:	bne	16dec <__snprintf_chk@plt+0x4920>
   16d90:	b	16e54 <__snprintf_chk@plt+0x4988>
   16d94:	ldr	r3, [r8, #4]
   16d98:	ldr	r2, [r8, #12]
   16d9c:	add	r3, r3, #1
   16da0:	str	r3, [r8, #4]
   16da4:	ldr	r3, [r4, #24]
   16da8:	sub	r0, r2, #12
   16dac:	add	r3, r3, r1
   16db0:	str	r0, [r8, #12]
   16db4:	ldr	r0, [r3, #4]
   16db8:	mov	r1, #0
   16dbc:	str	r0, [r2]
   16dc0:	ldr	r0, [r3, #8]
   16dc4:	str	r1, [r3, #4]
   16dc8:	str	r0, [r2, #4]
   16dcc:	ldr	r0, [r3, #12]
   16dd0:	str	r1, [r3, #8]
   16dd4:	str	r0, [r2, #8]
   16dd8:	str	r1, [r3, #12]
   16ddc:	ldrh	r3, [r4, #20]
   16de0:	add	r5, r5, #1
   16de4:	cmp	r5, r3
   16de8:	bge	16e4c <__snprintf_chk@plt+0x4980>
   16dec:	ldr	r2, [r4, #24]
   16df0:	lsl	r1, r5, #4
   16df4:	ldr	r2, [r2, r5, lsl #4]
   16df8:	cmp	r2, #0
   16dfc:	beq	16e90 <__snprintf_chk@plt+0x49c4>
   16e00:	cmp	r2, #1
   16e04:	beq	16d94 <__snprintf_chk@plt+0x48c8>
   16e08:	str	r2, [sp, #4]
   16e0c:	ldr	r2, [pc, #308]	; 16f48 <__snprintf_chk@plt+0x4a7c>
   16e10:	mov	r3, #8192	; 0x2000
   16e14:	add	r0, sp, #8192	; 0x2000
   16e18:	mov	r1, r3
   16e1c:	str	r2, [sp]
   16e20:	add	r0, r0, #20
   16e24:	mov	r2, #1
   16e28:	bl	124cc <__snprintf_chk@plt>
   16e2c:	add	r1, sp, #8192	; 0x2000
   16e30:	add	r1, r1, #20
   16e34:	add	r0, sp, #16
   16e38:	bl	16430 <__snprintf_chk@plt+0x3f64>
   16e3c:	ldrh	r3, [r4, #20]
   16e40:	add	r5, r5, #1
   16e44:	cmp	r5, r3
   16e48:	blt	16dec <__snprintf_chk@plt+0x4920>
   16e4c:	ldr	sl, [r8, #8]
   16e50:	ldr	r1, [r8]
   16e54:	ldr	r3, [pc, #240]	; 16f4c <__snprintf_chk@plt+0x4a80>
   16e58:	mov	r0, sl
   16e5c:	mov	r2, #12
   16e60:	bl	1243c <qsort@plt>
   16e64:	ldr	r1, [r8, #4]
   16e68:	cmp	r1, #0
   16e6c:	movle	r3, #0
   16e70:	strle	r3, [r8, #12]
   16e74:	bgt	16f18 <__snprintf_chk@plt+0x4a4c>
   16e78:	ldr	r3, [sp, #12]
   16e7c:	add	r1, sp, #16
   16e80:	mov	r0, r3
   16e84:	str	r8, [r3, #40]	; 0x28
   16e88:	bl	16a60 <__snprintf_chk@plt+0x4594>
   16e8c:	b	16c0c <__snprintf_chk@plt+0x4740>
   16e90:	ldr	r3, [r8]
   16e94:	add	sl, sl, #12
   16e98:	add	r3, r3, #1
   16e9c:	str	r3, [r8]
   16ea0:	ldr	r3, [r4, #24]
   16ea4:	add	r3, r3, r1
   16ea8:	ldr	r1, [r3, #4]
   16eac:	str	r1, [sl, #-12]
   16eb0:	ldr	r1, [r3, #8]
   16eb4:	str	r2, [r3, #4]
   16eb8:	str	r1, [sl, #-8]
   16ebc:	ldr	r1, [r3, #12]
   16ec0:	str	r2, [r3, #8]
   16ec4:	str	r1, [sl, #-4]
   16ec8:	str	r2, [r3, #12]
   16ecc:	b	16ddc <__snprintf_chk@plt+0x4910>
   16ed0:	ldr	r0, [sp, #16]
   16ed4:	add	r3, sp, #16384	; 0x4000
   16ed8:	add	r3, r3, #20
   16edc:	ldr	r2, [r3]
   16ee0:	ldr	r3, [pc, #80]	; 16f38 <__snprintf_chk@plt+0x4a6c>
   16ee4:	ldr	r3, [r3]
   16ee8:	cmp	r2, r3
   16eec:	bne	16f34 <__snprintf_chk@plt+0x4a68>
   16ef0:	add	sp, sp, #16384	; 0x4000
   16ef4:	add	sp, sp, #28
   16ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16efc:	ldr	r1, [r4, #16]
   16f00:	add	r0, sp, #16
   16f04:	bl	16430 <__snprintf_chk@plt+0x3f64>
   16f08:	ldr	r1, [pc, #64]	; 16f50 <__snprintf_chk@plt+0x4a84>
   16f0c:	add	r0, sp, #16
   16f10:	bl	16430 <__snprintf_chk@plt+0x3f64>
   16f14:	b	16c0c <__snprintf_chk@plt+0x4740>
   16f18:	ldr	r0, [r8, #12]
   16f1c:	ldr	r3, [pc, #40]	; 16f4c <__snprintf_chk@plt+0x4a80>
   16f20:	add	r0, r0, #12
   16f24:	str	r0, [r8, #12]
   16f28:	mov	r2, #12
   16f2c:	bl	1243c <qsort@plt>
   16f30:	b	16e78 <__snprintf_chk@plt+0x49ac>
   16f34:	bl	120e8 <__stack_chk_fail@plt>
   16f38:	andeq	ip, r2, r0, lsl #31
   16f3c:	muleq	r2, r0, r7
   16f40:	andeq	lr, r2, r8, lsr #16
   16f44:	andeq	fp, r1, r4, lsl #26
   16f48:	andeq	fp, r1, ip, asr #30
   16f4c:	andeq	r6, r1, r8, lsl #5
   16f50:	andeq	fp, r1, r4, ror #30
   16f54:	push	{r4, lr}
   16f58:	sub	sp, sp, #24
   16f5c:	ldr	r4, [pc, #52]	; 16f98 <__snprintf_chk@plt+0x4acc>
   16f60:	add	r3, sp, #12
   16f64:	str	r3, [sp]
   16f68:	ldr	ip, [r4]
   16f6c:	add	r3, sp, #8
   16f70:	str	ip, [sp, #20]
   16f74:	bl	1246c <XrmQGetResource@plt>
   16f78:	ldr	r2, [sp, #20]
   16f7c:	ldr	r3, [r4]
   16f80:	cmp	r2, r3
   16f84:	bne	16f94 <__snprintf_chk@plt+0x4ac8>
   16f88:	uxtb	r0, r0
   16f8c:	add	sp, sp, #24
   16f90:	pop	{r4, pc}
   16f94:	bl	120e8 <__stack_chk_fail@plt>
   16f98:	andeq	ip, r2, r0, lsl #31
   16f9c:	push	{r4, r5, r6, r7, r8, lr}
   16fa0:	mov	r5, r0
   16fa4:	ldr	r3, [r0]
   16fa8:	mov	r6, r1
   16fac:	cmp	r3, #0
   16fb0:	moveq	r0, #1
   16fb4:	beq	16fdc <__snprintf_chk@plt+0x4b10>
   16fb8:	mov	r3, r5
   16fbc:	mov	r0, #0
   16fc0:	b	16fc8 <__snprintf_chk@plt+0x4afc>
   16fc4:	mov	r0, r1
   16fc8:	ldr	r2, [r3, #4]!
   16fcc:	add	r1, r0, #1
   16fd0:	cmp	r2, #0
   16fd4:	bne	16fc4 <__snprintf_chk@plt+0x4af8>
   16fd8:	add	r0, r0, #2
   16fdc:	cmp	r6, #0
   16fe0:	beq	17040 <__snprintf_chk@plt+0x4b74>
   16fe4:	add	r0, r0, #1
   16fe8:	lsl	r0, r0, #2
   16fec:	bl	12064 <XtMalloc@plt>
   16ff0:	mov	r7, r0
   16ff4:	ldr	r0, [r5]
   16ff8:	cmp	r0, #0
   16ffc:	beq	17068 <__snprintf_chk@plt+0x4b9c>
   17000:	mov	r4, r7
   17004:	bl	12460 <XrmStringToQuark@plt>
   17008:	str	r0, [r4], #4
   1700c:	ldr	r0, [r5, #4]!
   17010:	cmp	r0, #0
   17014:	bne	17004 <__snprintf_chk@plt+0x4b38>
   17018:	cmp	r6, #0
   1701c:	beq	17060 <__snprintf_chk@plt+0x4b94>
   17020:	mov	r0, r6
   17024:	bl	12460 <XrmStringToQuark@plt>
   17028:	add	r3, r4, #4
   1702c:	str	r0, [r4]
   17030:	mov	r2, #0
   17034:	str	r2, [r3]
   17038:	mov	r0, r7
   1703c:	pop	{r4, r5, r6, r7, r8, pc}
   17040:	lsl	r0, r0, #2
   17044:	bl	12064 <XtMalloc@plt>
   17048:	mov	r3, r0
   1704c:	ldr	r0, [r5]
   17050:	mov	r7, r3
   17054:	cmp	r0, #0
   17058:	bne	17000 <__snprintf_chk@plt+0x4b34>
   1705c:	b	17030 <__snprintf_chk@plt+0x4b64>
   17060:	mov	r3, r4
   17064:	b	17030 <__snprintf_chk@plt+0x4b64>
   17068:	mov	r4, r7
   1706c:	b	17020 <__snprintf_chk@plt+0x4b54>
   17070:	push	{r4, r5, r6, r7, r8, lr}
   17074:	mov	r5, r0
   17078:	mov	r6, r1
   1707c:	mov	r1, r2
   17080:	mov	r7, r2
   17084:	blx	r6
   17088:	ldr	r3, [r5, #28]
   1708c:	cmp	r3, #0
   17090:	popeq	{r4, r5, r6, r7, r8, pc}
   17094:	mov	r4, #0
   17098:	ldr	r3, [r5, #20]
   1709c:	mov	r2, r7
   170a0:	mov	r1, r6
   170a4:	ldr	r0, [r3, r4, lsl #2]
   170a8:	bl	17070 <__snprintf_chk@plt+0x4ba4>
   170ac:	ldr	r3, [r5, #28]
   170b0:	add	r4, r4, #1
   170b4:	cmp	r3, r4
   170b8:	bhi	17098 <__snprintf_chk@plt+0x4bcc>
   170bc:	pop	{r4, r5, r6, r7, r8, pc}
   170c0:	push	{r4, r5, r6, r7, r8, lr}
   170c4:	subs	r4, r1, #0
   170c8:	mov	r6, r0
   170cc:	beq	17148 <__snprintf_chk@plt+0x4c7c>
   170d0:	mov	r3, r4
   170d4:	mov	r2, #0
   170d8:	ldr	r3, [r3, #16]
   170dc:	add	r5, r2, #1
   170e0:	cmp	r3, #0
   170e4:	mov	r2, r5
   170e8:	bne	170d8 <__snprintf_chk@plt+0x4c0c>
   170ec:	lsl	r8, r5, #2
   170f0:	mov	r0, r8
   170f4:	bl	12064 <XtMalloc@plt>
   170f8:	mov	r7, r0
   170fc:	add	r3, r0, r8
   17100:	ldr	r2, [r4, #8]
   17104:	str	r2, [r3, #-4]!
   17108:	ldr	r4, [r4, #16]
   1710c:	cmp	r4, #0
   17110:	bne	17100 <__snprintf_chk@plt+0x4c34>
   17114:	mov	r1, r5
   17118:	mov	r0, r6
   1711c:	bl	1249c <_XEditResPut16@plt>
   17120:	sub	r4, r7, #4
   17124:	add	r8, r4, r8
   17128:	ldr	r1, [r4, #4]!
   1712c:	mov	r0, r6
   17130:	bl	12070 <_XEditResPut32@plt>
   17134:	cmp	r4, r8
   17138:	bne	17128 <__snprintf_chk@plt+0x4c5c>
   1713c:	mov	r0, r7
   17140:	pop	{r4, r5, r6, r7, r8, lr}
   17144:	b	12328 <XtFree@plt>
   17148:	mov	r0, r4
   1714c:	bl	12064 <XtMalloc@plt>
   17150:	mov	r1, r4
   17154:	mov	r7, r0
   17158:	mov	r0, r6
   1715c:	bl	1249c <_XEditResPut16@plt>
   17160:	mov	r0, r7
   17164:	pop	{r4, r5, r6, r7, r8, lr}
   17168:	b	12328 <XtFree@plt>
   1716c:	push	{r4, r5, lr}
   17170:	sub	sp, sp, #12
   17174:	ldr	r4, [pc, #92]	; 171d8 <__snprintf_chk@plt+0x4d0c>
   17178:	mov	r1, sp
   1717c:	ldr	r3, [r4]
   17180:	str	r3, [sp, #4]
   17184:	bl	121a8 <_XEditResGetString8@plt>
   17188:	cmp	r0, #0
   1718c:	bne	171cc <__snprintf_chk@plt+0x4d00>
   17190:	ldr	r5, [pc, #68]	; 171dc <__snprintf_chk@plt+0x4d10>
   17194:	ldr	r0, [r5, #140]	; 0x8c
   17198:	cmp	r0, #0
   1719c:	beq	171b4 <__snprintf_chk@plt+0x4ce8>
   171a0:	bl	12280 <strlen@plt>
   171a4:	add	r0, r0, #1
   171a8:	bl	12064 <XtMalloc@plt>
   171ac:	ldr	r1, [r5, #140]	; 0x8c
   171b0:	bl	12184 <strcpy@plt>
   171b4:	ldr	r2, [sp, #4]
   171b8:	ldr	r3, [r4]
   171bc:	cmp	r2, r3
   171c0:	bne	171d4 <__snprintf_chk@plt+0x4d08>
   171c4:	add	sp, sp, #12
   171c8:	pop	{r4, r5, pc}
   171cc:	ldr	r0, [sp]
   171d0:	b	171b4 <__snprintf_chk@plt+0x4ce8>
   171d4:	bl	120e8 <__stack_chk_fail@plt>
   171d8:	andeq	ip, r2, r0, lsl #31
   171dc:	andeq	lr, r2, r8, lsr #16
   171e0:	push	{r4, r5, lr}
   171e4:	sub	sp, sp, #8192	; 0x2000
   171e8:	ldr	r4, [pc, #192]	; 172b0 <__snprintf_chk@plt+0x4de4>
   171ec:	sub	sp, sp, #36	; 0x24
   171f0:	add	r2, sp, #8192	; 0x2000
   171f4:	ldr	r3, [r4]
   171f8:	add	r2, r2, #28
   171fc:	add	r1, sp, #27
   17200:	str	r3, [r2]
   17204:	bl	124a8 <_XEditResGet8@plt>
   17208:	cmp	r0, #0
   1720c:	bne	17258 <__snprintf_chk@plt+0x4d8c>
   17210:	ldr	r5, [pc, #156]	; 172b4 <__snprintf_chk@plt+0x4de8>
   17214:	ldr	r0, [r5, #140]	; 0x8c
   17218:	cmp	r0, #0
   1721c:	beq	17234 <__snprintf_chk@plt+0x4d68>
   17220:	bl	12280 <strlen@plt>
   17224:	add	r0, r0, #1
   17228:	bl	12064 <XtMalloc@plt>
   1722c:	ldr	r1, [r5, #140]	; 0x8c
   17230:	bl	12184 <strcpy@plt>
   17234:	add	r3, sp, #8192	; 0x2000
   17238:	add	r3, r3, #28
   1723c:	ldr	r2, [r3]
   17240:	ldr	r3, [r4]
   17244:	cmp	r2, r3
   17248:	bne	172ac <__snprintf_chk@plt+0x4de0>
   1724c:	add	sp, sp, #8192	; 0x2000
   17250:	add	sp, sp, #36	; 0x24
   17254:	pop	{r4, r5, pc}
   17258:	ldr	r3, [pc, #84]	; 172b4 <__snprintf_chk@plt+0x4de8>
   1725c:	ldr	r1, [pc, #84]	; 172b8 <__snprintf_chk@plt+0x4dec>
   17260:	ldr	r2, [pc, #84]	; 172bc <__snprintf_chk@plt+0x4df0>
   17264:	ldr	r0, [r3, #144]	; 0x90
   17268:	add	r3, sp, #28
   1726c:	str	r3, [sp, #20]
   17270:	mov	r3, #8192	; 0x2000
   17274:	str	r0, [sp]
   17278:	str	r1, [sp, #8]
   1727c:	str	r2, [sp, #4]
   17280:	mov	r1, r3
   17284:	mov	r2, #1
   17288:	ldr	r0, [sp, #20]
   1728c:	bl	124cc <__snprintf_chk@plt>
   17290:	ldr	r0, [sp, #20]
   17294:	bl	12280 <strlen@plt>
   17298:	add	r0, r0, #1
   1729c:	bl	12064 <XtMalloc@plt>
   172a0:	ldr	r1, [sp, #20]
   172a4:	bl	12184 <strcpy@plt>
   172a8:	b	17234 <__snprintf_chk@plt+0x4d68>
   172ac:	bl	120e8 <__stack_chk_fail@plt>
   172b0:	andeq	ip, r2, r0, lsl #31
   172b4:	andeq	lr, r2, r8, lsr #16
   172b8:	andeq	fp, r1, r8, ror #30
   172bc:	andeq	fp, r1, ip, ror #30
   172c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172c4:	sub	sp, sp, #24
   172c8:	ldr	r6, [pc, #548]	; 174f4 <__snprintf_chk@plt+0x5028>
   172cc:	ldr	r8, [pc, #548]	; 174f8 <__snprintf_chk@plt+0x502c>
   172d0:	mov	r5, r1
   172d4:	ldr	r3, [r6]
   172d8:	ldr	ip, [r8]
   172dc:	cmp	r3, #0
   172e0:	str	ip, [sp, #20]
   172e4:	beq	174cc <__snprintf_chk@plt+0x5000>
   172e8:	mov	r0, r3
   172ec:	bl	123e8 <XtDestroyWidget@plt>
   172f0:	ldr	sl, [pc, #516]	; 174fc <__snprintf_chk@plt+0x5030>
   172f4:	ldr	r0, [r6, #4]
   172f8:	mov	r3, #0
   172fc:	strb	r3, [sl]
   17300:	ldr	r3, [pc, #504]	; 17500 <__snprintf_chk@plt+0x5034>
   17304:	mov	r2, #1
   17308:	add	r1, sp, #12
   1730c:	str	r5, [sp, #16]
   17310:	str	r3, [sp, #12]
   17314:	bl	12088 <XtSetValues@plt>
   17318:	ldr	r3, [pc, #484]	; 17504 <__snprintf_chk@plt+0x5038>
   1731c:	mov	r4, #0
   17320:	ldr	r2, [r6, #4]
   17324:	ldr	r1, [r3]
   17328:	mov	r0, r5
   1732c:	mov	r3, r4
   17330:	str	r4, [sp]
   17334:	bl	12034 <XtCreatePopupShell@plt>
   17338:	ldr	r7, [pc, #456]	; 17508 <__snprintf_chk@plt+0x503c>
   1733c:	mov	r3, r4
   17340:	str	r4, [sp]
   17344:	ldr	r1, [r7]
   17348:	ldr	r5, [pc, #444]	; 1750c <__snprintf_chk@plt+0x5040>
   1734c:	ldr	r9, [pc, #444]	; 17510 <__snprintf_chk@plt+0x5044>
   17350:	mov	ip, r0
   17354:	mov	r2, r0
   17358:	ldr	r0, [pc, #436]	; 17514 <__snprintf_chk@plt+0x5048>
   1735c:	str	ip, [r6]
   17360:	bl	1204c <XtCreateManagedWidget@plt>
   17364:	mov	r3, #1
   17368:	ldr	r2, [pc, #424]	; 17518 <__snprintf_chk@plt+0x504c>
   1736c:	ldr	r1, [pc, #424]	; 1751c <__snprintf_chk@plt+0x5050>
   17370:	str	r0, [r5]
   17374:	bl	12490 <XtAddCallback@plt>
   17378:	ldr	r1, [r7]
   1737c:	ldr	r2, [r6]
   17380:	mov	r3, r4
   17384:	str	r4, [sp]
   17388:	ldr	r0, [pc, #400]	; 17520 <__snprintf_chk@plt+0x5054>
   1738c:	bl	1204c <XtCreateManagedWidget@plt>
   17390:	mov	r3, r4
   17394:	ldr	r2, [pc, #380]	; 17518 <__snprintf_chk@plt+0x504c>
   17398:	ldr	r1, [pc, #380]	; 1751c <__snprintf_chk@plt+0x5050>
   1739c:	str	r0, [r5, #4]
   173a0:	bl	12490 <XtAddCallback@plt>
   173a4:	ldr	r1, [r7]
   173a8:	ldr	r2, [r6]
   173ac:	mov	r3, r4
   173b0:	str	r4, [sp]
   173b4:	ldr	r0, [pc, #360]	; 17524 <__snprintf_chk@plt+0x5058>
   173b8:	bl	1204c <XtCreateManagedWidget@plt>
   173bc:	mov	r3, r4
   173c0:	ldr	r2, [pc, #352]	; 17528 <__snprintf_chk@plt+0x505c>
   173c4:	ldr	r1, [pc, #336]	; 1751c <__snprintf_chk@plt+0x5050>
   173c8:	str	r0, [r5, #8]
   173cc:	bl	12490 <XtAddCallback@plt>
   173d0:	ldr	r1, [r9]
   173d4:	ldr	r2, [r6]
   173d8:	mov	r3, r4
   173dc:	str	r4, [sp]
   173e0:	ldr	r0, [pc, #324]	; 1752c <__snprintf_chk@plt+0x5060>
   173e4:	bl	1204c <XtCreateManagedWidget@plt>
   173e8:	ldr	r1, [r7]
   173ec:	ldr	r2, [r6]
   173f0:	str	r4, [sp]
   173f4:	mov	r3, r4
   173f8:	str	r0, [r5, #12]
   173fc:	ldr	r0, [pc, #300]	; 17530 <__snprintf_chk@plt+0x5064>
   17400:	bl	1204c <XtCreateManagedWidget@plt>
   17404:	mov	r3, r4
   17408:	ldr	r2, [pc, #292]	; 17534 <__snprintf_chk@plt+0x5068>
   1740c:	ldr	r1, [pc, #264]	; 1751c <__snprintf_chk@plt+0x5050>
   17410:	str	r0, [r5, #16]
   17414:	bl	12490 <XtAddCallback@plt>
   17418:	ldr	r1, [r7]
   1741c:	ldr	r2, [r6]
   17420:	mov	r3, r4
   17424:	str	r4, [sp]
   17428:	ldr	r0, [pc, #264]	; 17538 <__snprintf_chk@plt+0x506c>
   1742c:	bl	1204c <XtCreateManagedWidget@plt>
   17430:	mov	r3, r4
   17434:	ldr	r2, [pc, #256]	; 1753c <__snprintf_chk@plt+0x5070>
   17438:	ldr	r1, [pc, #220]	; 1751c <__snprintf_chk@plt+0x5050>
   1743c:	str	r0, [r5, #20]
   17440:	bl	12490 <XtAddCallback@plt>
   17444:	ldr	r1, [r9]
   17448:	ldr	r2, [r6]
   1744c:	mov	r3, r4
   17450:	str	r4, [sp]
   17454:	ldr	r0, [pc, #208]	; 1752c <__snprintf_chk@plt+0x5060>
   17458:	bl	1204c <XtCreateManagedWidget@plt>
   1745c:	ldr	r1, [r7]
   17460:	ldr	r2, [r6]
   17464:	str	r4, [sp]
   17468:	mov	r3, r4
   1746c:	str	r0, [r5, #24]
   17470:	ldr	r0, [pc, #200]	; 17540 <__snprintf_chk@plt+0x5074>
   17474:	bl	1204c <XtCreateManagedWidget@plt>
   17478:	mov	r3, r4
   1747c:	ldr	r2, [pc, #192]	; 17544 <__snprintf_chk@plt+0x5078>
   17480:	ldr	r1, [pc, #148]	; 1751c <__snprintf_chk@plt+0x5050>
   17484:	str	r0, [r5, #28]
   17488:	bl	12490 <XtAddCallback@plt>
   1748c:	ldrb	r3, [sl]
   17490:	cmp	r3, r4
   17494:	beq	174b4 <__snprintf_chk@plt+0x4fe8>
   17498:	add	r4, r5, #4
   1749c:	add	r5, r5, #24
   174a0:	ldr	r0, [r4], #4
   174a4:	mov	r1, #0
   174a8:	bl	121e4 <XtSetSensitive@plt>
   174ac:	cmp	r5, r4
   174b0:	bne	174a0 <__snprintf_chk@plt+0x4fd4>
   174b4:	ldr	r2, [sp, #20]
   174b8:	ldr	r3, [r8]
   174bc:	cmp	r2, r3
   174c0:	bne	174f0 <__snprintf_chk@plt+0x5024>
   174c4:	add	sp, sp, #24
   174c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174cc:	ldr	r2, [pc, #116]	; 17548 <__snprintf_chk@plt+0x507c>
   174d0:	str	r3, [sp]
   174d4:	ldr	sl, [pc, #32]	; 174fc <__snprintf_chk@plt+0x5030>
   174d8:	ldr	r1, [r2]
   174dc:	mov	r2, r0
   174e0:	ldr	r0, [pc, #100]	; 1754c <__snprintf_chk@plt+0x5080>
   174e4:	bl	1204c <XtCreateManagedWidget@plt>
   174e8:	str	r0, [r6, #4]
   174ec:	b	17300 <__snprintf_chk@plt+0x4e34>
   174f0:	bl	120e8 <__stack_chk_fail@plt>
   174f4:	andeq	lr, r2, r4, lsr #15
   174f8:	andeq	ip, r2, r0, lsl #31
   174fc:	andeq	lr, r2, r0, lsr #6
   17500:	andeq	ip, r1, ip, lsr r0
   17504:	andeq	lr, r2, r8, asr #14
   17508:	andeq	lr, r2, r8, lsr #14
   1750c:	strdeq	lr, [r2], -ip
   17510:	andeq	lr, r2, ip, asr #14
   17514:	andeq	ip, r1, r8, asr #32
   17518:	muleq	r1, r4, fp
   1751c:	andeq	sp, r2, r8, lsl r5
   17520:	andeq	ip, r1, r4, asr r0
   17524:	andeq	ip, r1, r0, rrx
   17528:	andeq	r4, r1, r0, asr #29
   1752c:	andeq	ip, r1, r0, ror r0
   17530:	andeq	ip, r1, r8, ror r0
   17534:			; <UNDEFINED> instruction: 0x00014db0
   17538:			; <UNDEFINED> instruction: 0x0001beb8
   1753c:	strdeq	r4, [r1], -ip
   17540:	andeq	r9, r1, r4, lsl r9
   17544:	andeq	r4, r1, r0, lsl #23
   17548:	andeq	lr, r2, ip, ror #14
   1754c:	andeq	ip, r1, r0, lsr r0
   17550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17554:	sub	sp, sp, #36	; 0x24
   17558:	ldr	r7, [pc, #452]	; 17724 <__snprintf_chk@plt+0x5258>
   1755c:	ldr	r2, [pc, #452]	; 17728 <__snprintf_chk@plt+0x525c>
   17560:	mov	r4, r1
   17564:	ldr	r3, [r7, #8]
   17568:	ldr	ip, [r2]
   1756c:	cmp	r3, #0
   17570:	str	ip, [sp, #28]
   17574:	beq	176f8 <__snprintf_chk@plt+0x522c>
   17578:	ldr	r5, [pc, #428]	; 1772c <__snprintf_chk@plt+0x5260>
   1757c:	mov	r0, r3
   17580:	str	r5, [sp, #12]
   17584:	bl	123e8 <XtDestroyWidget@plt>
   17588:	ldr	r0, [r7, #12]
   1758c:	mov	r3, #0
   17590:	strb	r3, [r5, #1]
   17594:	ldr	r3, [pc, #404]	; 17730 <__snprintf_chk@plt+0x5264>
   17598:	mov	r2, #1
   1759c:	add	r1, sp, #20
   175a0:	str	r4, [sp, #24]
   175a4:	str	r3, [sp, #20]
   175a8:	bl	12088 <XtSetValues@plt>
   175ac:	ldr	r1, [pc, #384]	; 17734 <__snprintf_chk@plt+0x5268>
   175b0:	mov	r3, #0
   175b4:	mov	r0, r4
   175b8:	ldr	r1, [r1]
   175bc:	ldr	r2, [r7, #12]
   175c0:	str	r3, [sp]
   175c4:	bl	12034 <XtCreatePopupShell@plt>
   175c8:	ldr	r4, [pc, #360]	; 17738 <__snprintf_chk@plt+0x526c>
   175cc:	ldr	r6, [pc, #360]	; 1773c <__snprintf_chk@plt+0x5270>
   175d0:	ldr	sl, [pc, #360]	; 17740 <__snprintf_chk@plt+0x5274>
   175d4:	ldr	fp, [pc, #360]	; 17744 <__snprintf_chk@plt+0x5278>
   175d8:	add	r9, r4, #192	; 0xc0
   175dc:	mov	r5, r6
   175e0:	mov	r3, #4
   175e4:	str	r0, [r7, #8]
   175e8:	ldr	r1, [sl]
   175ec:	cmp	r3, #5
   175f0:	ldrls	pc, [pc, r3, lsl #2]
   175f4:	b	1763c <__snprintf_chk@plt+0x5170>
   175f8:	ldrdeq	r7, [r1], -r8
   175fc:	andeq	r7, r1, ip, lsr r6
   17600:	andeq	r7, r1, r8, asr #13
   17604:	andeq	r7, r1, r4, asr r6
   17608:	andeq	r7, r1, r0, lsl r6
   1760c:	ldrdeq	r7, [r1], -r0
   17610:	ldr	r8, [pc, #304]	; 17748 <__snprintf_chk@plt+0x527c>
   17614:	mov	r3, #0
   17618:	ldr	r0, [r4]
   1761c:	ldr	r2, [r7, #8]
   17620:	str	r3, [sp]
   17624:	bl	1204c <XtCreateManagedWidget@plt>
   17628:	str	r0, [r5]
   1762c:	mov	r2, r8
   17630:	ldr	r3, [r4, #8]
   17634:	mov	r1, fp
   17638:	bl	12490 <XtAddCallback@plt>
   1763c:	add	r4, r4, #12
   17640:	cmp	r4, r9
   17644:	add	r5, r5, #4
   17648:	beq	17684 <__snprintf_chk@plt+0x51b8>
   1764c:	ldr	r3, [r4, #4]
   17650:	b	175e8 <__snprintf_chk@plt+0x511c>
   17654:	ldr	r3, [pc, #240]	; 1774c <__snprintf_chk@plt+0x5280>
   17658:	ldr	r0, [r4]
   1765c:	ldr	r2, [r7, #8]
   17660:	ldr	r1, [r3]
   17664:	mov	r3, #0
   17668:	str	r3, [sp]
   1766c:	bl	1204c <XtCreateManagedWidget@plt>
   17670:	add	r4, r4, #12
   17674:	cmp	r4, r9
   17678:	add	r5, r5, #4
   1767c:	str	r0, [r5, #-4]
   17680:	bne	1764c <__snprintf_chk@plt+0x5180>
   17684:	ldr	r3, [sp, #12]
   17688:	ldrb	r3, [r3, #1]
   1768c:	cmp	r3, #0
   17690:	beq	176ac <__snprintf_chk@plt+0x51e0>
   17694:	ldr	r4, [pc, #180]	; 17750 <__snprintf_chk@plt+0x5284>
   17698:	ldr	r0, [r6], #4
   1769c:	mov	r1, #0
   176a0:	bl	121e4 <XtSetSensitive@plt>
   176a4:	cmp	r4, r6
   176a8:	bne	17698 <__snprintf_chk@plt+0x51cc>
   176ac:	ldr	r3, [pc, #116]	; 17728 <__snprintf_chk@plt+0x525c>
   176b0:	ldr	r2, [sp, #28]
   176b4:	ldr	r3, [r3]
   176b8:	cmp	r2, r3
   176bc:	bne	17720 <__snprintf_chk@plt+0x5254>
   176c0:	add	sp, sp, #36	; 0x24
   176c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176c8:	ldr	r8, [pc, #132]	; 17754 <__snprintf_chk@plt+0x5288>
   176cc:	b	17614 <__snprintf_chk@plt+0x5148>
   176d0:	ldr	r8, [pc, #128]	; 17758 <__snprintf_chk@plt+0x528c>
   176d4:	b	17614 <__snprintf_chk@plt+0x5148>
   176d8:	mov	r3, #0
   176dc:	ldr	r0, [r4]
   176e0:	ldr	r2, [r7, #8]
   176e4:	str	r3, [sp]
   176e8:	bl	1204c <XtCreateManagedWidget@plt>
   176ec:	ldr	r8, [pc, #104]	; 1775c <__snprintf_chk@plt+0x5290>
   176f0:	str	r0, [r5]
   176f4:	b	1762c <__snprintf_chk@plt+0x5160>
   176f8:	ldr	r2, [pc, #96]	; 17760 <__snprintf_chk@plt+0x5294>
   176fc:	ldr	r1, [pc, #40]	; 1772c <__snprintf_chk@plt+0x5260>
   17700:	str	r3, [sp]
   17704:	str	r1, [sp, #12]
   17708:	ldr	r1, [r2]
   1770c:	mov	r2, r0
   17710:	ldr	r0, [pc, #76]	; 17764 <__snprintf_chk@plt+0x5298>
   17714:	bl	1204c <XtCreateManagedWidget@plt>
   17718:	str	r0, [r7, #12]
   1771c:	b	17594 <__snprintf_chk@plt+0x50c8>
   17720:	bl	120e8 <__stack_chk_fail@plt>
   17724:	andeq	lr, r2, r4, lsr #15
   17728:	andeq	ip, r2, r0, lsl #31
   1772c:	andeq	lr, r2, r0, lsr #6
   17730:	andeq	ip, r1, ip, lsr r0
   17734:	andeq	lr, r2, r8, asr #14
   17738:	andeq	fp, r1, r0, ror pc
   1773c:			; <UNDEFINED> instruction: 0x0002e8bc
   17740:	andeq	lr, r2, r8, lsr #14
   17744:	andeq	sp, r2, r8, lsl r5
   17748:	andeq	r4, r1, ip, ror #23
   1774c:	andeq	lr, r2, ip, asr #14
   17750:	strdeq	lr, [r2], -ip
   17754:	andeq	r4, r1, r0, asr #24
   17758:	andeq	r4, r1, r0, lsr #27
   1775c:	andeq	r4, r1, r0, lsr ip
   17760:	andeq	lr, r2, ip, ror #14
   17764:	andeq	ip, r1, r8, lsl #1
   17768:	ldr	r3, [r1, #40]	; 0x28
   1776c:	push	{r4, r5, r6, lr}
   17770:	mov	r6, r1
   17774:	ldr	r3, [r3, #16]
   17778:	ldr	r2, [pc, #56]	; 177b8 <__snprintf_chk@plt+0x52ec>
   1777c:	mov	r5, #0
   17780:	ldr	r4, [r3, #20]
   17784:	mov	r0, r3
   17788:	strb	r5, [r2]
   1778c:	bl	12328 <XtFree@plt>
   17790:	ldr	r3, [r6, #40]	; 0x28
   17794:	cmp	r4, r5
   17798:	str	r5, [r3, #16]
   1779c:	popeq	{r4, r5, r6, pc}
   177a0:	ldr	r5, [r4]
   177a4:	mov	r0, r4
   177a8:	bl	12328 <XtFree@plt>
   177ac:	subs	r4, r5, #0
   177b0:	bne	177a0 <__snprintf_chk@plt+0x52d4>
   177b4:	pop	{r4, r5, r6, pc}
   177b8:	muleq	r2, r4, r7
   177bc:	mov	r0, r1
   177c0:	b	12328 <XtFree@plt>
   177c4:	push	{r4, r5, r6, r7, lr}
   177c8:	mov	r1, r0
   177cc:	ldr	r5, [pc, #132]	; 17858 <__snprintf_chk@plt+0x538c>
   177d0:	sub	sp, sp, #12
   177d4:	mov	r4, r0
   177d8:	ldr	r0, [r5]
   177dc:	bl	11fb0 <strcmp@plt>
   177e0:	cmp	r0, #0
   177e4:	beq	17850 <__snprintf_chk@plt+0x5384>
   177e8:	ldr	r6, [pc, #108]	; 1785c <__snprintf_chk@plt+0x5390>
   177ec:	ldr	r7, [pc, #108]	; 17860 <__snprintf_chk@plt+0x5394>
   177f0:	mov	r1, r4
   177f4:	ldr	r0, [r6, #16]
   177f8:	bl	172c0 <__snprintf_chk@plt+0x4df4>
   177fc:	mov	r1, r4
   17800:	ldr	r0, [r6, #16]
   17804:	bl	17550 <__snprintf_chk@plt+0x5084>
   17808:	ldr	r0, [r7, #12]
   1780c:	bl	123e8 <XtDestroyWidget@plt>
   17810:	ldr	r3, [pc, #76]	; 17864 <__snprintf_chk@plt+0x5398>
   17814:	ldr	r2, [r6, #20]
   17818:	mov	r6, #0
   1781c:	ldr	r1, [r3]
   17820:	mov	r0, r4
   17824:	mov	r3, r6
   17828:	str	r6, [sp]
   1782c:	bl	1204c <XtCreateManagedWidget@plt>
   17830:	str	r6, [sp, #4]
   17834:	str	r6, [sp]
   17838:	mov	r3, #36	; 0x24
   1783c:	ldr	r2, [pc, #36]	; 17868 <__snprintf_chk@plt+0x539c>
   17840:	ldr	r1, [pc, #36]	; 1786c <__snprintf_chk@plt+0x53a0>
   17844:	str	r0, [r7, #12]
   17848:	bl	11f74 <XtGetApplicationResources@plt>
   1784c:	str	r4, [r5]
   17850:	add	sp, sp, #12
   17854:	pop	{r4, r5, r6, r7, pc}
   17858:	andeq	lr, r2, r8, lsl r3
   1785c:	andeq	lr, r2, r4, lsr #15
   17860:	andeq	lr, r2, r8, lsl r8
   17864:	andeq	lr, r2, r8, ror #14
   17868:	andeq	lr, r2, r4, lsr #6
   1786c:	andeq	lr, r2, r8, lsr #16
   17870:	push	{r4, r5, r6, r7, r8, r9, lr}
   17874:	sub	sp, sp, #12
   17878:	ldr	r8, [pc, #296]	; 179a8 <__snprintf_chk@plt+0x54dc>
   1787c:	mov	r4, #0
   17880:	mov	r2, r0
   17884:	ldr	r1, [r8]
   17888:	mov	r3, r4
   1788c:	str	r4, [sp]
   17890:	ldr	r0, [pc, #276]	; 179ac <__snprintf_chk@plt+0x54e0>
   17894:	bl	1204c <XtCreateManagedWidget@plt>
   17898:	ldr	r2, [pc, #272]	; 179b0 <__snprintf_chk@plt+0x54e4>
   1789c:	mov	r3, r4
   178a0:	str	r4, [sp]
   178a4:	ldr	r1, [r2]
   178a8:	ldr	r5, [pc, #260]	; 179b4 <__snprintf_chk@plt+0x54e8>
   178ac:	ldr	r7, [pc, #260]	; 179b8 <__snprintf_chk@plt+0x54ec>
   178b0:	ldr	r9, [pc, #260]	; 179bc <__snprintf_chk@plt+0x54f0>
   178b4:	mov	r2, r0
   178b8:	mov	r6, r0
   178bc:	ldr	r0, [pc, #252]	; 179c0 <__snprintf_chk@plt+0x54f4>
   178c0:	bl	1204c <XtCreateManagedWidget@plt>
   178c4:	mov	r1, r7
   178c8:	str	r0, [r5, #16]
   178cc:	bl	172c0 <__snprintf_chk@plt+0x4df4>
   178d0:	mov	r1, r7
   178d4:	ldr	r0, [r5, #16]
   178d8:	bl	17550 <__snprintf_chk@plt+0x5084>
   178dc:	ldr	r1, [r8]
   178e0:	mov	r3, r4
   178e4:	str	r4, [sp]
   178e8:	mov	r2, r6
   178ec:	ldr	r0, [pc, #208]	; 179c4 <__snprintf_chk@plt+0x54f8>
   178f0:	bl	1204c <XtCreateManagedWidget@plt>
   178f4:	ldr	r3, [pc, #204]	; 179c8 <__snprintf_chk@plt+0x54fc>
   178f8:	str	r4, [sp]
   178fc:	ldr	r1, [r3]
   17900:	mov	r3, r4
   17904:	mov	r2, r0
   17908:	str	r0, [r5, #20]
   1790c:	ldr	r0, [pc, #184]	; 179cc <__snprintf_chk@plt+0x5500>
   17910:	bl	1204c <XtCreateManagedWidget@plt>
   17914:	ldr	r3, [pc, #180]	; 179d0 <__snprintf_chk@plt+0x5504>
   17918:	str	r4, [sp]
   1791c:	ldr	r2, [r5, #20]
   17920:	ldr	r1, [r3]
   17924:	mov	r3, r4
   17928:	mov	r8, r0
   1792c:	mov	r0, r7
   17930:	bl	1204c <XtCreateManagedWidget@plt>
   17934:	ldr	ip, [pc, #152]	; 179d4 <__snprintf_chk@plt+0x5508>
   17938:	str	r4, [sp, #4]
   1793c:	str	r4, [sp]
   17940:	mov	r3, #36	; 0x24
   17944:	ldr	r2, [pc, #140]	; 179d8 <__snprintf_chk@plt+0x550c>
   17948:	ldr	r1, [pc, #140]	; 179dc <__snprintf_chk@plt+0x5510>
   1794c:	str	r0, [ip, #12]
   17950:	bl	11f74 <XtGetApplicationResources@plt>
   17954:	ldr	r2, [pc, #132]	; 179e0 <__snprintf_chk@plt+0x5514>
   17958:	str	r4, [sp]
   1795c:	mov	r3, r4
   17960:	ldr	r1, [r2]
   17964:	ldr	r0, [pc, #120]	; 179e4 <__snprintf_chk@plt+0x5518>
   17968:	mov	r2, r6
   1796c:	bl	1204c <XtCreateManagedWidget@plt>
   17970:	mov	r3, r8
   17974:	mov	r1, r9
   17978:	ldr	r2, [pc, #104]	; 179e8 <__snprintf_chk@plt+0x551c>
   1797c:	mov	r4, r0
   17980:	bl	12490 <XtAddCallback@plt>
   17984:	mov	r3, r4
   17988:	mov	r1, r9
   1798c:	mov	r0, r8
   17990:	ldr	r2, [pc, #84]	; 179ec <__snprintf_chk@plt+0x5520>
   17994:	bl	12490 <XtAddCallback@plt>
   17998:	ldr	r3, [pc, #80]	; 179f0 <__snprintf_chk@plt+0x5524>
   1799c:	str	r4, [r3]
   179a0:	add	sp, sp, #12
   179a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   179a8:	andeq	lr, r2, r4, lsr #14
   179ac:	muleq	r1, r8, r0
   179b0:	andeq	lr, r2, ip, asr r7
   179b4:	andeq	lr, r2, r4, lsr #15
   179b8:	andeq	fp, r1, r0, ror #19
   179bc:	andeq	ip, r1, r0, asr #1
   179c0:	andeq	ip, r1, r0, lsr #1
   179c4:	andeq	ip, r1, r4, lsr #1
   179c8:	andeq	lr, r2, r0, lsr #14
   179cc:	andeq	ip, r1, ip, lsr #1
   179d0:	andeq	lr, r2, r8, ror #14
   179d4:	andeq	lr, r2, r8, lsl r8
   179d8:	andeq	lr, r2, r4, lsr #6
   179dc:	andeq	lr, r2, r8, lsr #16
   179e0:	andeq	lr, r2, ip, lsr r7
   179e4:	strheq	ip, [r1], -r4
   179e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   179ec:	andeq	r4, r1, r0, asr ip
   179f0:	andeq	lr, r2, r4, lsl r8
   179f4:	push	{r4, r5, r6, lr}
   179f8:	subs	r5, r1, #0
   179fc:	pople	{r4, r5, r6, pc}
   17a00:	sub	r4, r0, #4
   17a04:	mov	r6, r2
   17a08:	add	r5, r4, r5, lsl #2
   17a0c:	ldr	r0, [r4, #4]!
   17a10:	mov	r1, r6
   17a14:	bl	121e4 <XtSetSensitive@plt>
   17a18:	cmp	r4, r5
   17a1c:	bne	17a0c <__snprintf_chk@plt+0x5540>
   17a20:	pop	{r4, r5, r6, pc}
   17a24:	push	{r4, r5, r6, lr}
   17a28:	sub	sp, sp, #16
   17a2c:	ldr	r5, [pc, #132]	; 17ab8 <__snprintf_chk@plt+0x55ec>
   17a30:	ldr	r3, [pc, #132]	; 17abc <__snprintf_chk@plt+0x55f0>
   17a34:	ldr	r6, [pc, #132]	; 17ac0 <__snprintf_chk@plt+0x55f4>
   17a38:	ldr	r2, [r5]
   17a3c:	mov	r4, r0
   17a40:	str	r3, [sp, #8]
   17a44:	str	r2, [sp, #12]
   17a48:	str	r6, [sp, #4]
   17a4c:	bl	12448 <XtParent@plt>
   17a50:	add	r1, sp, #4
   17a54:	mov	r2, #1
   17a58:	bl	120ac <XtGetValues@plt>
   17a5c:	mov	r3, #0
   17a60:	mov	r0, r4
   17a64:	str	r3, [sp, #8]
   17a68:	str	r6, [sp, #4]
   17a6c:	bl	12448 <XtParent@plt>
   17a70:	mov	r2, #1
   17a74:	add	r1, sp, #4
   17a78:	bl	12088 <XtSetValues@plt>
   17a7c:	mov	r0, r4
   17a80:	bl	12340 <XtDisplay@plt>
   17a84:	mov	r6, r0
   17a88:	mov	r0, r4
   17a8c:	bl	120c4 <XtWindow@plt>
   17a90:	mov	r1, r0
   17a94:	mov	r0, r6
   17a98:	bl	123ac <XUnmapWindow@plt>
   17a9c:	ldr	r2, [sp, #12]
   17aa0:	ldr	r3, [r5]
   17aa4:	cmp	r2, r3
   17aa8:	bne	17ab4 <__snprintf_chk@plt+0x55e8>
   17aac:	add	sp, sp, #16
   17ab0:	pop	{r4, r5, r6, pc}
   17ab4:	bl	120e8 <__stack_chk_fail@plt>
   17ab8:	andeq	ip, r2, r0, lsl #31
   17abc:			; <UNDEFINED> instruction: 0x0002e7bc
   17ac0:	andeq	sp, r2, pc, asr #9
   17ac4:	push	{r4, r5, r6, lr}
   17ac8:	sub	sp, sp, #16
   17acc:	ldr	r5, [pc, #108]	; 17b40 <__snprintf_chk@plt+0x5674>
   17ad0:	mov	r4, r0
   17ad4:	ldr	r3, [r5]
   17ad8:	str	r3, [sp, #12]
   17adc:	bl	12100 <XawTreeForceLayout@plt>
   17ae0:	mov	r0, r4
   17ae4:	bl	12340 <XtDisplay@plt>
   17ae8:	mov	r6, r0
   17aec:	mov	r0, r4
   17af0:	bl	120c4 <XtWindow@plt>
   17af4:	mov	r1, r0
   17af8:	mov	r0, r6
   17afc:	bl	12430 <XMapWindow@plt>
   17b00:	ldr	r3, [pc, #60]	; 17b44 <__snprintf_chk@plt+0x5678>
   17b04:	ldr	r2, [pc, #60]	; 17b48 <__snprintf_chk@plt+0x567c>
   17b08:	mov	r0, r4
   17b0c:	ldr	r3, [r3, #24]
   17b10:	strd	r2, [sp, #4]
   17b14:	bl	12448 <XtParent@plt>
   17b18:	mov	r2, #1
   17b1c:	add	r1, sp, #4
   17b20:	bl	12088 <XtSetValues@plt>
   17b24:	ldr	r2, [sp, #12]
   17b28:	ldr	r3, [r5]
   17b2c:	cmp	r2, r3
   17b30:	bne	17b3c <__snprintf_chk@plt+0x5670>
   17b34:	add	sp, sp, #16
   17b38:	pop	{r4, r5, r6, pc}
   17b3c:	bl	120e8 <__stack_chk_fail@plt>
   17b40:	andeq	ip, r2, r0, lsl #31
   17b44:	andeq	lr, r2, r4, lsr #15
   17b48:	andeq	sp, r2, pc, asr #9
   17b4c:	ldr	r3, [pc, #3424]	; 188b4 <__snprintf_chk@plt+0x63e8>
   17b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b54:	sub	sp, sp, #276	; 0x114
   17b58:	ldr	r3, [r3]
   17b5c:	mov	fp, r0
   17b60:	ldr	r0, [r0, #36]	; 0x24
   17b64:	str	r1, [sp, #60]	; 0x3c
   17b68:	str	r2, [sp, #76]	; 0x4c
   17b6c:	str	r3, [sp, #268]	; 0x10c
   17b70:	bl	120f4 <XtScreen@plt>
   17b74:	ldr	r9, [pc, #3388]	; 188b8 <__snprintf_chk@plt+0x63ec>
   17b78:	mov	r4, #0
   17b7c:	sub	r3, r9, #440	; 0x1b8
   17b80:	sub	r3, r3, #3
   17b84:	str	r3, [sp, #48]	; 0x30
   17b88:	sub	r3, r9, #736	; 0x2e0
   17b8c:	str	r3, [sp, #44]	; 0x2c
   17b90:	str	r4, [sp, #36]	; 0x24
   17b94:	str	r4, [sp, #32]
   17b98:	str	r4, [sp, #28]
   17b9c:	str	r4, [sp, #40]	; 0x28
   17ba0:	ldr	r5, [pc, #3348]	; 188bc <__snprintf_chk@plt+0x63f0>
   17ba4:	ldr	r7, [pc, #3348]	; 188c0 <__snprintf_chk@plt+0x63f4>
   17ba8:	mov	sl, r4
   17bac:	ldr	r3, [r0, #12]
   17bb0:	ldr	r0, [fp, #36]	; 0x24
   17bb4:	sub	r3, r3, #20
   17bb8:	uxth	r3, r3
   17bbc:	str	r3, [sp, #16]
   17bc0:	bl	120f4 <XtScreen@plt>
   17bc4:	ldr	r6, [r0, #16]
   17bc8:	mov	r0, #24
   17bcc:	bl	12064 <XtMalloc@plt>
   17bd0:	ldr	r1, [fp, #40]	; 0x28
   17bd4:	ldr	r3, [pc, #3304]	; 188c4 <__snprintf_chk@plt+0x63f8>
   17bd8:	ldr	r2, [pc, #3304]	; 188c8 <__snprintf_chk@plt+0x63fc>
   17bdc:	sub	r6, r6, #40	; 0x28
   17be0:	uxth	r6, r6
   17be4:	str	r0, [r1, #16]
   17be8:	str	r0, [sp, #56]	; 0x38
   17bec:	ldr	r0, [r3]
   17bf0:	ldr	r3, [sp, #16]
   17bf4:	ldr	r1, [r2]
   17bf8:	ldr	r2, [fp, #36]	; 0x24
   17bfc:	str	r3, [sp]
   17c00:	ldr	r3, [pc, #3268]	; 188cc <__snprintf_chk@plt+0x6400>
   17c04:	str	r4, [sp, #12]
   17c08:	stmib	sp, {r3, r6}
   17c0c:	sub	r3, r3, #18
   17c10:	bl	11fe0 <XtVaCreatePopupShell@plt>
   17c14:	ldr	r6, [sp, #56]	; 0x38
   17c18:	sub	r1, r9, #700	; 0x2bc
   17c1c:	mov	r3, fp
   17c20:	ldr	r2, [pc, #3240]	; 188d0 <__snprintf_chk@plt+0x6404>
   17c24:	sub	r1, r1, #3
   17c28:	str	r0, [r6, #8]
   17c2c:	bl	12490 <XtAddCallback@plt>
   17c30:	ldr	r1, [r5]
   17c34:	ldr	r2, [r6, #8]
   17c38:	mov	r3, r4
   17c3c:	str	r4, [sp]
   17c40:	ldr	r0, [pc, #3212]	; 188d4 <__snprintf_chk@plt+0x6408>
   17c44:	bl	1204c <XtCreateManagedWidget@plt>
   17c48:	ldr	r3, [pc, #3208]	; 188d8 <__snprintf_chk@plt+0x640c>
   17c4c:	ldr	r1, [r3]
   17c50:	mov	r3, r4
   17c54:	str	r4, [sp]
   17c58:	mov	r2, r0
   17c5c:	str	r0, [sp, #68]	; 0x44
   17c60:	ldr	r0, [pc, #3188]	; 188dc <__snprintf_chk@plt+0x6410>
   17c64:	bl	1204c <XtCreateManagedWidget@plt>
   17c68:	ldr	r1, [r5]
   17c6c:	mov	r3, r4
   17c70:	str	r4, [sp]
   17c74:	mov	r2, r0
   17c78:	ldr	r0, [pc, #3156]	; 188d4 <__snprintf_chk@plt+0x6408>
   17c7c:	bl	1204c <XtCreateManagedWidget@plt>
   17c80:	ldr	r3, [pc, #3160]	; 188e0 <__snprintf_chk@plt+0x6414>
   17c84:	ldr	r1, [r3]
   17c88:	mov	r3, r4
   17c8c:	str	r4, [sp]
   17c90:	mov	r2, r0
   17c94:	mov	r5, r0
   17c98:	str	r0, [sp, #72]	; 0x48
   17c9c:	ldr	r0, [pc, #3136]	; 188e4 <__snprintf_chk@plt+0x6418>
   17ca0:	bl	1204c <XtCreateManagedWidget@plt>
   17ca4:	add	r2, sp, #92	; 0x5c
   17ca8:	add	r1, sp, #88	; 0x58
   17cac:	str	r0, [r6, #4]
   17cb0:	ldr	r3, [fp, #40]	; 0x28
   17cb4:	mov	r0, fp
   17cb8:	ldr	r3, [r3, #16]
   17cbc:	str	r3, [sp, #64]	; 0x40
   17cc0:	bl	169b0 <__snprintf_chk@plt+0x44e4>
   17cc4:	ldr	r3, [pc, #3100]	; 188e8 <__snprintf_chk@plt+0x641c>
   17cc8:	mov	r2, r5
   17ccc:	ldr	r0, [pc, #3096]	; 188ec <__snprintf_chk@plt+0x6420>
   17cd0:	ldr	r1, [r3]
   17cd4:	str	r4, [sp]
   17cd8:	mov	r3, r4
   17cdc:	bl	1204c <XtCreateManagedWidget@plt>
   17ce0:	str	fp, [sp, #24]
   17ce4:	ldr	r8, [sp, #36]	; 0x24
   17ce8:	mov	fp, r4
   17cec:	str	r0, [sp, #20]
   17cf0:	b	18174 <__snprintf_chk@plt+0x5ca8>
   17cf4:	mov	r0, #28
   17cf8:	bl	12064 <XtMalloc@plt>
   17cfc:	ldr	r3, [sp, #24]
   17d00:	ldr	r2, [sp, #40]	; 0x28
   17d04:	cmp	r2, r8
   17d08:	stm	r0, {r3, r5}
   17d0c:	ldr	r3, [sp, #16]
   17d10:	mov	r6, r0
   17d14:	str	r3, [r0, #8]
   17d18:	str	r8, [r0, #20]
   17d1c:	streq	r0, [sp, #40]	; 0x28
   17d20:	beq	17d68 <__snprintf_chk@plt+0x589c>
   17d24:	add	r3, r0, #20
   17d28:	str	r3, [r2, #24]
   17d2c:	ldr	r8, [sp, #40]	; 0x28
   17d30:	ldr	r2, [sp, #16]
   17d34:	mov	r3, r8
   17d38:	str	r2, [r8, #16]
   17d3c:	ldr	r1, [pc, #2988]	; 188f0 <__snprintf_chk@plt+0x6424>
   17d40:	ldr	r2, [pc, #2988]	; 188f4 <__snprintf_chk@plt+0x6428>
   17d44:	mov	r0, fp
   17d48:	str	r5, [r8, #12]
   17d4c:	bl	12490 <XtAddCallback@plt>
   17d50:	mov	r3, r8
   17d54:	ldr	r2, [pc, #2972]	; 188f8 <__snprintf_chk@plt+0x642c>
   17d58:	ldr	r1, [pc, #2972]	; 188fc <__snprintf_chk@plt+0x6430>
   17d5c:	mov	r0, fp
   17d60:	str	r6, [sp, #40]	; 0x28
   17d64:	bl	12490 <XtAddCallback@plt>
   17d68:	ldr	r3, [sp, #88]	; 0x58
   17d6c:	ldr	r2, [r3, r4]
   17d70:	cmp	r2, #0
   17d74:	beq	182bc <__snprintf_chk@plt+0x5df0>
   17d78:	ldr	r6, [pc, #2944]	; 18900 <__snprintf_chk@plt+0x6434>
   17d7c:	ldr	r2, [sp, #48]	; 0x30
   17d80:	str	r6, [sp, #108]	; 0x6c
   17d84:	str	r5, [sp, #112]	; 0x70
   17d88:	str	r2, [sp, #116]	; 0x74
   17d8c:	ldr	r8, [pc, #2928]	; 18904 <__snprintf_chk@plt+0x6438>
   17d90:	ldr	r2, [r3, r4]
   17d94:	str	r8, [sp, #124]	; 0x7c
   17d98:	str	r2, [sp, #120]	; 0x78
   17d9c:	mov	r2, #3
   17da0:	ldr	ip, [r3, r4]
   17da4:	ldr	r1, [r7]
   17da8:	add	r3, sp, #108	; 0x6c
   17dac:	str	r2, [sp]
   17db0:	ldr	r0, [pc, #2896]	; 18908 <__snprintf_chk@plt+0x643c>
   17db4:	ldr	r2, [sp, #20]
   17db8:	str	ip, [sp, #128]	; 0x80
   17dbc:	bl	1204c <XtCreateManagedWidget@plt>
   17dc0:	ldr	r3, [sp, #24]
   17dc4:	ldr	r2, [pc, #2880]	; 1890c <__snprintf_chk@plt+0x6440>
   17dc8:	ldr	r1, [sp, #44]	; 0x2c
   17dcc:	mov	sl, r0
   17dd0:	bl	12490 <XtAddCallback@plt>
   17dd4:	ldr	r3, [sp, #92]	; 0x5c
   17dd8:	ldr	r0, [sp, #16]
   17ddc:	ldr	r1, [sp, #48]	; 0x30
   17de0:	ldr	r2, [pc, #2856]	; 18910 <__snprintf_chk@plt+0x6444>
   17de4:	str	r6, [sp, #108]	; 0x6c
   17de8:	str	r0, [sp, #112]	; 0x70
   17dec:	str	r1, [sp, #124]	; 0x7c
   17df0:	str	sl, [sp, #120]	; 0x78
   17df4:	str	r2, [sp, #116]	; 0x74
   17df8:	ldr	r0, [pc, #2836]	; 18914 <__snprintf_chk@plt+0x6448>
   17dfc:	ldr	r2, [r3, r4]
   17e00:	str	r0, [sp, #132]	; 0x84
   17e04:	str	r2, [sp, #128]	; 0x80
   17e08:	str	r8, [sp, #140]	; 0x8c
   17e0c:	str	sl, [sp, #136]	; 0x88
   17e10:	mov	r2, #5
   17e14:	ldr	ip, [r3, r4]
   17e18:	ldr	r1, [r7]
   17e1c:	add	r3, sp, #108	; 0x6c
   17e20:	str	r2, [sp]
   17e24:	ldr	r0, [pc, #2796]	; 18918 <__snprintf_chk@plt+0x644c>
   17e28:	ldr	r2, [sp, #20]
   17e2c:	str	ip, [sp, #144]	; 0x90
   17e30:	bl	1204c <XtCreateManagedWidget@plt>
   17e34:	ldr	r3, [sp, #24]
   17e38:	ldr	r2, [pc, #2764]	; 1890c <__snprintf_chk@plt+0x6440>
   17e3c:	ldr	r1, [sp, #44]	; 0x2c
   17e40:	mov	r6, #4
   17e44:	mov	r8, r0
   17e48:	bl	12490 <XtAddCallback@plt>
   17e4c:	ldr	lr, [pc, #2732]	; 18900 <__snprintf_chk@plt+0x6434>
   17e50:	ldr	ip, [pc, #2756]	; 1891c <__snprintf_chk@plt+0x6450>
   17e54:	str	lr, [sp, #108]	; 0x6c
   17e58:	ldr	lr, [sp, #16]
   17e5c:	ldr	r1, [r7]
   17e60:	str	lr, [sp, #112]	; 0x70
   17e64:	ldr	lr, [pc, #2724]	; 18910 <__snprintf_chk@plt+0x6444>
   17e68:	str	r6, [sp]
   17e6c:	str	lr, [sp, #116]	; 0x74
   17e70:	ldr	lr, [pc, #2700]	; 18904 <__snprintf_chk@plt+0x6438>
   17e74:	add	r3, sp, #108	; 0x6c
   17e78:	str	lr, [sp, #124]	; 0x7c
   17e7c:	ldr	lr, [pc, #2704]	; 18914 <__snprintf_chk@plt+0x6448>
   17e80:	ldr	r2, [sp, #20]
   17e84:	ldr	r0, [pc, #2708]	; 18920 <__snprintf_chk@plt+0x6454>
   17e88:	str	lr, [sp, #132]	; 0x84
   17e8c:	str	ip, [sp, #128]	; 0x80
   17e90:	str	r8, [sp, #120]	; 0x78
   17e94:	str	sl, [sp, #136]	; 0x88
   17e98:	bl	1204c <XtCreateManagedWidget@plt>
   17e9c:	ldr	r3, [sp, #24]
   17ea0:	ldr	r2, [pc, #2660]	; 1890c <__snprintf_chk@plt+0x6440>
   17ea4:	ldr	r1, [sp, #44]	; 0x2c
   17ea8:	str	r0, [sp, #36]	; 0x24
   17eac:	bl	12490 <XtAddCallback@plt>
   17eb0:	ldr	r1, [r7]
   17eb4:	str	r6, [sp]
   17eb8:	ldr	r6, [sp, #36]	; 0x24
   17ebc:	ldr	lr, [pc, #2620]	; 18900 <__snprintf_chk@plt+0x6434>
   17ec0:	str	r6, [sp, #120]	; 0x78
   17ec4:	ldr	r6, [pc, #2628]	; 18910 <__snprintf_chk@plt+0x6444>
   17ec8:	ldr	ip, [pc, #2644]	; 18924 <__snprintf_chk@plt+0x6458>
   17ecc:	str	lr, [sp, #108]	; 0x6c
   17ed0:	str	r6, [sp, #116]	; 0x74
   17ed4:	ldr	lr, [pc, #2600]	; 18904 <__snprintf_chk@plt+0x6438>
   17ed8:	ldr	r6, [pc, #2612]	; 18914 <__snprintf_chk@plt+0x6448>
   17edc:	add	r3, sp, #108	; 0x6c
   17ee0:	ldr	r2, [sp, #20]
   17ee4:	ldr	r0, [pc, #2620]	; 18928 <__snprintf_chk@plt+0x645c>
   17ee8:	str	lr, [sp, #132]	; 0x84
   17eec:	str	ip, [sp, #136]	; 0x88
   17ef0:	str	fp, [sp, #112]	; 0x70
   17ef4:	str	r6, [sp, #124]	; 0x7c
   17ef8:	str	sl, [sp, #128]	; 0x80
   17efc:	bl	1204c <XtCreateManagedWidget@plt>
   17f00:	ldr	r3, [sp, #32]
   17f04:	mov	r2, #2
   17f08:	cmp	r3, #0
   17f0c:	ldr	r3, [sp, #28]
   17f10:	add	r1, sp, #188	; 0xbc
   17f14:	str	sl, [r3, #8]
   17f18:	ldrne	r3, [sp, #88]	; 0x58
   17f1c:	mvneq	r3, #0
   17f20:	addne	r4, r3, r4
   17f24:	ldrne	r3, [r4, #4]
   17f28:	clzne	r3, r3
   17f2c:	ldr	r4, [pc, #2552]	; 1892c <__snprintf_chk@plt+0x6460>
   17f30:	lsrne	r3, r3, #5
   17f34:	str	r3, [sp, #52]	; 0x34
   17f38:	add	r3, sp, #84	; 0x54
   17f3c:	str	r3, [sp, #200]	; 0xc8
   17f40:	add	r3, sp, #96	; 0x60
   17f44:	str	r3, [sp, #192]	; 0xc0
   17f48:	str	r9, [sp, #196]	; 0xc4
   17f4c:	str	r4, [sp, #188]	; 0xbc
   17f50:	mov	fp, r0
   17f54:	mov	r0, r5
   17f58:	bl	120ac <XtGetValues@plt>
   17f5c:	add	r3, sp, #86	; 0x56
   17f60:	mov	r2, #2
   17f64:	add	r1, sp, #188	; 0xbc
   17f68:	ldr	r0, [sp, #16]
   17f6c:	str	r3, [sp, #200]	; 0xc8
   17f70:	add	r3, sp, #100	; 0x64
   17f74:	str	r3, [sp, #192]	; 0xc0
   17f78:	str	r4, [sp, #188]	; 0xbc
   17f7c:	str	r9, [sp, #196]	; 0xc4
   17f80:	bl	120ac <XtGetValues@plt>
   17f84:	add	ip, sp, #82	; 0x52
   17f88:	add	r3, sp, #104	; 0x68
   17f8c:	mov	r2, #2
   17f90:	add	r1, sp, #188	; 0xbc
   17f94:	mov	r0, fp
   17f98:	str	ip, [sp, #200]	; 0xc8
   17f9c:	str	r3, [sp, #192]	; 0xc0
   17fa0:	str	r4, [sp, #188]	; 0xbc
   17fa4:	str	r9, [sp, #196]	; 0xc4
   17fa8:	bl	120ac <XtGetValues@plt>
   17fac:	ldrh	r6, [sp, #86]	; 0x56
   17fb0:	ldrh	r2, [sp, #84]	; 0x54
   17fb4:	ldr	r3, [sp, #96]	; 0x60
   17fb8:	ldr	r1, [sp, #100]	; 0x64
   17fbc:	cmp	r6, r2
   17fc0:	movcc	r6, r2
   17fc4:	cmp	r1, r3
   17fc8:	ldr	r2, [sp, #104]	; 0x68
   17fcc:	movgt	r3, r1
   17fd0:	strgt	r1, [sp, #96]	; 0x60
   17fd4:	cmp	r2, r3
   17fd8:	movgt	r3, r2
   17fdc:	strgt	r2, [sp, #96]	; 0x60
   17fe0:	add	r1, sp, #188	; 0xbc
   17fe4:	mov	r2, #1
   17fe8:	mov	r0, fp
   17fec:	str	r3, [sp, #192]	; 0xc0
   17ff0:	str	r4, [sp, #188]	; 0xbc
   17ff4:	bl	12088 <XtSetValues@plt>
   17ff8:	ldr	r0, [sp, #16]
   17ffc:	mov	r2, #2
   18000:	add	r1, sp, #188	; 0xbc
   18004:	str	r9, [sp, #196]	; 0xc4
   18008:	str	r6, [sp, #200]	; 0xc8
   1800c:	bl	12088 <XtSetValues@plt>
   18010:	mov	r0, r5
   18014:	mov	r2, #2
   18018:	add	r1, sp, #188	; 0xbc
   1801c:	bl	12088 <XtSetValues@plt>
   18020:	add	r3, sp, #84	; 0x54
   18024:	mov	r2, #2
   18028:	add	r1, sp, #188	; 0xbc
   1802c:	mov	r0, sl
   18030:	str	r3, [sp, #192]	; 0xc0
   18034:	add	r3, sp, #96	; 0x60
   18038:	str	r3, [sp, #200]	; 0xc8
   1803c:	str	r9, [sp, #188]	; 0xbc
   18040:	str	r4, [sp, #196]	; 0xc4
   18044:	bl	120ac <XtGetValues@plt>
   18048:	add	r3, sp, #86	; 0x56
   1804c:	mov	r2, #2
   18050:	add	r1, sp, #188	; 0xbc
   18054:	mov	r0, r8
   18058:	str	r3, [sp, #192]	; 0xc0
   1805c:	add	r3, sp, #100	; 0x64
   18060:	str	r3, [sp, #200]	; 0xc8
   18064:	str	r9, [sp, #188]	; 0xbc
   18068:	str	r4, [sp, #196]	; 0xc4
   1806c:	bl	120ac <XtGetValues@plt>
   18070:	ldrh	r3, [sp, #86]	; 0x56
   18074:	ldrh	r2, [sp, #84]	; 0x54
   18078:	add	r1, sp, #188	; 0xbc
   1807c:	ldr	r0, [sp, #36]	; 0x24
   18080:	cmp	r2, r3
   18084:	strhcc	r3, [sp, #84]	; 0x54
   18088:	ldrd	r2, [sp, #96]	; 0x60
   1808c:	str	r9, [sp, #188]	; 0xbc
   18090:	str	r4, [sp, #196]	; 0xc4
   18094:	cmp	r3, r2
   18098:	strgt	r3, [sp, #96]	; 0x60
   1809c:	add	r3, sp, #86	; 0x56
   180a0:	mov	r2, #2
   180a4:	str	r3, [sp, #192]	; 0xc0
   180a8:	add	r3, sp, #100	; 0x64
   180ac:	str	r3, [sp, #200]	; 0xc8
   180b0:	bl	120ac <XtGetValues@plt>
   180b4:	ldrh	r2, [sp, #84]	; 0x54
   180b8:	ldrh	r5, [sp, #86]	; 0x56
   180bc:	ldr	r3, [sp, #100]	; 0x64
   180c0:	ldr	r1, [sp, #96]	; 0x60
   180c4:	cmp	r5, r2
   180c8:	movcs	r2, r5
   180cc:	ldrh	r5, [sp, #82]	; 0x52
   180d0:	cmp	r3, r1
   180d4:	movgt	r1, r3
   180d8:	strgt	r3, [sp, #96]	; 0x60
   180dc:	cmp	r5, r2
   180e0:	movcc	r5, r2
   180e4:	add	r3, r6, r5
   180e8:	ldr	r2, [sp, #52]	; 0x34
   180ec:	add	r3, r3, r1
   180f0:	cmn	r2, #1
   180f4:	uxth	r3, r3
   180f8:	beq	18278 <__snprintf_chk@plt+0x5dac>
   180fc:	mov	r2, #1
   18100:	mov	r0, #0
   18104:	strh	r3, [sp, #82]	; 0x52
   18108:	add	r1, sp, #272	; 0x110
   1810c:	add	r0, r1, r0, lsl #3
   18110:	add	r1, sp, #188	; 0xbc
   18114:	str	r3, [r0, #-80]	; 0xffffffb0
   18118:	str	r9, [r0, #-84]	; 0xffffffac
   1811c:	mov	r0, fp
   18120:	bl	12088 <XtSetValues@plt>
   18124:	ldr	r3, [sp, #96]	; 0x60
   18128:	mov	r2, #2
   1812c:	add	r1, sp, #188	; 0xbc
   18130:	mov	r0, sl
   18134:	str	r3, [sp, #200]	; 0xc8
   18138:	str	r9, [sp, #188]	; 0xbc
   1813c:	str	r5, [sp, #192]	; 0xc0
   18140:	str	r4, [sp, #196]	; 0xc4
   18144:	bl	12088 <XtSetValues@plt>
   18148:	mov	r2, #2
   1814c:	add	r1, sp, #188	; 0xbc
   18150:	mov	r0, r8
   18154:	bl	12088 <XtSetValues@plt>
   18158:	ldr	r3, [sp, #32]
   1815c:	ldr	r0, [sp, #36]	; 0x24
   18160:	add	r3, r3, #1
   18164:	mov	r2, #2
   18168:	add	r1, sp, #188	; 0xbc
   1816c:	str	r3, [sp, #32]
   18170:	bl	12088 <XtSetValues@plt>
   18174:	ldr	ip, [pc, #1972]	; 18930 <__snprintf_chk@plt+0x6464>
   18178:	ldr	r4, [pc, #1920]	; 18900 <__snprintf_chk@plt+0x6434>
   1817c:	mov	r3, #2
   18180:	ldr	r6, [pc, #1916]	; 18904 <__snprintf_chk@plt+0x6438>
   18184:	ldr	r1, [r7]
   18188:	ldr	r2, [sp, #20]
   1818c:	str	r3, [sp]
   18190:	ldr	r0, [pc, #1948]	; 18934 <__snprintf_chk@plt+0x6468>
   18194:	add	r3, sp, #108	; 0x6c
   18198:	str	ip, [sp, #120]	; 0x78
   1819c:	str	r4, [sp, #108]	; 0x6c
   181a0:	str	sl, [sp, #112]	; 0x70
   181a4:	str	r6, [sp, #116]	; 0x74
   181a8:	bl	1204c <XtCreateManagedWidget@plt>
   181ac:	ldr	sl, [sp, #24]
   181b0:	ldr	r2, [pc, #1876]	; 1890c <__snprintf_chk@plt+0x6440>
   181b4:	mov	r3, sl
   181b8:	ldr	r1, [pc, #1840]	; 188f0 <__snprintf_chk@plt+0x6424>
   181bc:	mov	r5, r0
   181c0:	bl	12490 <XtAddCallback@plt>
   181c4:	ldr	ip, [pc, #1860]	; 18910 <__snprintf_chk@plt+0x6444>
   181c8:	mov	r3, #4
   181cc:	str	ip, [sp, #116]	; 0x74
   181d0:	ldr	ip, [pc, #1852]	; 18914 <__snprintf_chk@plt+0x6448>
   181d4:	ldr	r1, [r7]
   181d8:	str	ip, [sp, #124]	; 0x7c
   181dc:	ldr	ip, [pc, #1876]	; 18938 <__snprintf_chk@plt+0x646c>
   181e0:	str	r3, [sp]
   181e4:	ldr	r2, [sp, #20]
   181e8:	add	r3, sp, #108	; 0x6c
   181ec:	ldr	r0, [pc, #1864]	; 1893c <__snprintf_chk@plt+0x6470>
   181f0:	str	r4, [sp, #108]	; 0x6c
   181f4:	str	ip, [sp, #136]	; 0x88
   181f8:	str	r5, [sp, #120]	; 0x78
   181fc:	str	r5, [sp, #128]	; 0x80
   18200:	str	r8, [sp, #112]	; 0x70
   18204:	str	r6, [sp, #132]	; 0x84
   18208:	bl	1204c <XtCreateManagedWidget@plt>
   1820c:	mov	r3, sl
   18210:	ldr	r2, [pc, #1780]	; 1890c <__snprintf_chk@plt+0x6440>
   18214:	ldr	r1, [pc, #1748]	; 188f0 <__snprintf_chk@plt+0x6424>
   18218:	str	r0, [sp, #16]
   1821c:	bl	12490 <XtAddCallback@plt>
   18220:	ldr	r4, [sp, #28]
   18224:	mov	r0, #12
   18228:	cmp	r4, #0
   1822c:	beq	182a8 <__snprintf_chk@plt+0x5ddc>
   18230:	bl	12064 <XtMalloc@plt>
   18234:	str	r0, [r4]
   18238:	str	r0, [sp, #28]
   1823c:	ldr	r3, [sp, #28]
   18240:	mov	r8, #0
   18244:	ldr	r2, [sp, #32]
   18248:	stmib	r3, {r5, r8}
   1824c:	ldr	r3, [sp, #88]	; 0x58
   18250:	lsl	r4, r2, #2
   18254:	ldr	r3, [r3, r2, lsl #2]
   18258:	cmp	r3, r8
   1825c:	bne	17cf4 <__snprintf_chk@plt+0x5828>
   18260:	ldr	r2, [sp, #40]	; 0x28
   18264:	cmp	r2, #0
   18268:	beq	182bc <__snprintf_chk@plt+0x5df0>
   1826c:	str	r3, [r2, #24]
   18270:	mov	r6, r2
   18274:	b	17d2c <__snprintf_chk@plt+0x5860>
   18278:	and	r1, r6, #1
   1827c:	ldr	r2, [sp, #104]	; 0x68
   18280:	sub	r3, r3, r1
   18284:	add	r6, r2, r6, lsr #1
   18288:	uxth	r3, r3
   1828c:	add	r6, r6, r1
   18290:	mov	r2, #2
   18294:	mov	r0, #1
   18298:	str	r4, [sp, #188]	; 0xbc
   1829c:	strh	r3, [sp, #82]	; 0x52
   182a0:	str	r6, [sp, #192]	; 0xc0
   182a4:	b	18108 <__snprintf_chk@plt+0x5c3c>
   182a8:	bl	12064 <XtMalloc@plt>
   182ac:	ldr	r2, [sp, #64]	; 0x40
   182b0:	str	r0, [sp, #28]
   182b4:	str	r0, [r2, #20]
   182b8:	b	1823c <__snprintf_chk@plt+0x5d70>
   182bc:	ldr	r3, [sp, #28]
   182c0:	mov	r4, #0
   182c4:	ldr	fp, [sp, #24]
   182c8:	str	r4, [r3]
   182cc:	ldr	r0, [sp, #88]	; 0x58
   182d0:	bl	12328 <XtFree@plt>
   182d4:	ldr	r0, [sp, #92]	; 0x5c
   182d8:	bl	12328 <XtFree@plt>
   182dc:	ldr	r2, [fp, #40]	; 0x28
   182e0:	ldr	r3, [pc, #1528]	; 188e0 <__snprintf_chk@plt+0x6414>
   182e4:	ldr	r0, [pc, #1620]	; 18940 <__snprintf_chk@plt+0x6474>
   182e8:	ldr	r5, [r2, #16]
   182ec:	ldr	r1, [r3]
   182f0:	ldr	r2, [sp, #72]	; 0x48
   182f4:	mov	r3, r4
   182f8:	str	r4, [sp]
   182fc:	bl	1204c <XtCreateManagedWidget@plt>
   18300:	ldr	r3, [sp, #60]	; 0x3c
   18304:	ldr	r7, [pc, #1592]	; 18944 <__snprintf_chk@plt+0x6478>
   18308:	cmp	r3, r4
   1830c:	beq	1887c <__snprintf_chk@plt+0x63b0>
   18310:	ldr	r3, [sp, #60]	; 0x3c
   18314:	mov	r8, #1
   18318:	str	r3, [sp, #192]	; 0xc0
   1831c:	str	r7, [sp, #188]	; 0xbc
   18320:	ldr	r3, [pc, #1456]	; 188d8 <__snprintf_chk@plt+0x640c>
   18324:	ldr	sl, [sp, #72]	; 0x48
   18328:	mov	r4, #0
   1832c:	ldr	r1, [r3]
   18330:	mov	r2, sl
   18334:	mov	r3, r4
   18338:	str	r4, [sp]
   1833c:	ldr	r0, [pc, #1540]	; 18948 <__snprintf_chk@plt+0x647c>
   18340:	bl	1204c <XtCreateManagedWidget@plt>
   18344:	ldr	r6, [pc, #1536]	; 1894c <__snprintf_chk@plt+0x6480>
   18348:	add	r2, sp, #188	; 0xbc
   1834c:	str	r8, [sp]
   18350:	mov	r3, r2
   18354:	ldr	r1, [r6]
   18358:	mov	r2, r0
   1835c:	ldr	r0, [pc, #1516]	; 18950 <__snprintf_chk@plt+0x6484>
   18360:	bl	1204c <XtCreateManagedWidget@plt>
   18364:	mov	r3, fp
   18368:	ldr	r2, [pc, #1508]	; 18954 <__snprintf_chk@plt+0x6488>
   1836c:	ldr	r1, [pc, #1404]	; 188f0 <__snprintf_chk@plt+0x6424>
   18370:	str	r0, [r5, #12]
   18374:	bl	12490 <XtAddCallback@plt>
   18378:	ldr	r3, [sp, #60]	; 0x3c
   1837c:	ldr	r2, [pc, #1396]	; 188f8 <__snprintf_chk@plt+0x642c>
   18380:	ldr	r1, [pc, #1396]	; 188fc <__snprintf_chk@plt+0x6430>
   18384:	ldr	r0, [r5, #12]
   18388:	bl	12490 <XtAddCallback@plt>
   1838c:	ldr	r8, [sp, #76]	; 0x4c
   18390:	cmp	r8, r4
   18394:	bne	187f4 <__snprintf_chk@plt+0x6328>
   18398:	ldr	r3, [sp, #76]	; 0x4c
   1839c:	str	r3, [r5, #16]
   183a0:	ldr	r3, [fp, #40]	; 0x28
   183a4:	ldr	r2, [pc, #1340]	; 188e8 <__snprintf_chk@plt+0x641c>
   183a8:	mov	r4, #0
   183ac:	ldr	r3, [r3, #16]
   183b0:	ldr	r1, [r2]
   183b4:	str	r3, [sp, #16]
   183b8:	ldr	r2, [sp, #68]	; 0x44
   183bc:	mov	r3, r4
   183c0:	str	r4, [sp]
   183c4:	ldr	r0, [pc, #1420]	; 18958 <__snprintf_chk@plt+0x648c>
   183c8:	bl	1204c <XtCreateManagedWidget@plt>
   183cc:	ldr	r2, [pc, #1292]	; 188e0 <__snprintf_chk@plt+0x6414>
   183d0:	mov	r3, #4
   183d4:	add	ip, sp, #188	; 0xbc
   183d8:	ldr	r5, [pc, #1404]	; 1895c <__snprintf_chk@plt+0x6490>
   183dc:	ldr	r1, [r2]
   183e0:	ldr	sl, [pc, #1400]	; 18960 <__snprintf_chk@plt+0x6494>
   183e4:	ldr	r8, [pc, #1400]	; 18964 <__snprintf_chk@plt+0x6498>
   183e8:	str	r3, [sp]
   183ec:	mov	r3, ip
   183f0:	ldr	ip, [pc, #1392]	; 18968 <__snprintf_chk@plt+0x649c>
   183f4:	mov	r6, #2
   183f8:	mov	r7, #1
   183fc:	str	ip, [sp, #188]	; 0xbc
   18400:	str	sl, [sp, #196]	; 0xc4
   18404:	str	r5, [sp, #204]	; 0xcc
   18408:	str	r8, [sp, #212]	; 0xd4
   1840c:	str	r6, [sp, #192]	; 0xc0
   18410:	str	r6, [sp, #200]	; 0xc8
   18414:	str	r7, [sp, #216]	; 0xd8
   18418:	str	r4, [sp, #208]	; 0xd0
   1841c:	mov	r2, r0
   18420:	str	r0, [sp, #20]
   18424:	ldr	r0, [pc, #1344]	; 1896c <__snprintf_chk@plt+0x64a0>
   18428:	bl	1204c <XtCreateManagedWidget@plt>
   1842c:	ldr	lr, [pc, #1332]	; 18968 <__snprintf_chk@plt+0x649c>
   18430:	ldr	r1, [pc, #1336]	; 18970 <__snprintf_chk@plt+0x64a4>
   18434:	mov	r3, #5
   18438:	str	lr, [sp, #196]	; 0xc4
   1843c:	ldr	lr, [pc, #1212]	; 18900 <__snprintf_chk@plt+0x6434>
   18440:	mov	ip, #3
   18444:	ldr	r2, [sp, #20]
   18448:	ldr	r1, [r1]
   1844c:	str	r3, [sp]
   18450:	add	r3, sp, #188	; 0xbc
   18454:	str	lr, [sp, #188]	; 0xbc
   18458:	str	ip, [sp, #208]	; 0xd0
   1845c:	str	r6, [sp, #200]	; 0xc8
   18460:	str	sl, [sp, #204]	; 0xcc
   18464:	str	r5, [sp, #212]	; 0xd4
   18468:	str	r8, [sp, #220]	; 0xdc
   1846c:	str	r7, [sp, #224]	; 0xe0
   18470:	str	r4, [sp, #216]	; 0xd8
   18474:	ldr	r7, [pc, #1272]	; 18974 <__snprintf_chk@plt+0x64a8>
   18478:	str	r0, [sp, #192]	; 0xc0
   1847c:	ldr	r0, [pc, #1268]	; 18978 <__snprintf_chk@plt+0x64ac>
   18480:	bl	1204c <XtCreateManagedWidget@plt>
   18484:	ldr	sl, [sp, #56]	; 0x38
   18488:	ldr	r3, [sp, #16]
   1848c:	ldr	r6, [sp, #68]	; 0x44
   18490:	str	r0, [r3]
   18494:	mov	r0, r6
   18498:	ldr	r1, [sl]
   1849c:	bl	12394 <XtSetKeyboardFocus@plt>
   184a0:	ldr	r3, [pc, #1236]	; 1897c <__snprintf_chk@plt+0x64b0>
   184a4:	mov	r2, r6
   184a8:	str	r4, [sp]
   184ac:	ldr	r0, [pc, #1228]	; 18980 <__snprintf_chk@plt+0x64b4>
   184b0:	ldr	r1, [r3]
   184b4:	mov	r3, r4
   184b8:	bl	1204c <XtCreateManagedWidget@plt>
   184bc:	ldr	r1, [r7]
   184c0:	mov	r3, r4
   184c4:	str	r4, [sp]
   184c8:	mov	r6, r0
   184cc:	mov	r2, r0
   184d0:	ldr	r0, [pc, #1196]	; 18984 <__snprintf_chk@plt+0x64b8>
   184d4:	bl	1204c <XtCreateManagedWidget@plt>
   184d8:	sub	r1, r5, #660	; 0x294
   184dc:	mov	r3, r4
   184e0:	sub	r1, r1, #2
   184e4:	ldr	r2, [pc, #1180]	; 18988 <__snprintf_chk@plt+0x64bc>
   184e8:	bl	12490 <XtAddCallback@plt>
   184ec:	ldr	r1, [r7]
   184f0:	mov	r3, r4
   184f4:	mov	r2, r6
   184f8:	str	r4, [sp]
   184fc:	ldr	r0, [pc, #1160]	; 1898c <__snprintf_chk@plt+0x64c0>
   18500:	bl	1204c <XtCreateManagedWidget@plt>
   18504:	sub	r1, r5, #660	; 0x294
   18508:	mov	r3, sl
   1850c:	sub	r1, r1, #2
   18510:	ldr	r2, [pc, #1144]	; 18990 <__snprintf_chk@plt+0x64c4>
   18514:	bl	12490 <XtAddCallback@plt>
   18518:	ldr	r1, [r7]
   1851c:	mov	r3, r4
   18520:	mov	r2, r6
   18524:	str	r4, [sp]
   18528:	ldr	r0, [pc, #1124]	; 18994 <__snprintf_chk@plt+0x64c8>
   1852c:	bl	1204c <XtCreateManagedWidget@plt>
   18530:	sub	r1, r5, #660	; 0x294
   18534:	mov	r3, fp
   18538:	sub	r1, r1, #2
   1853c:	ldr	r2, [pc, #1108]	; 18998 <__snprintf_chk@plt+0x64cc>
   18540:	bl	12490 <XtAddCallback@plt>
   18544:	ldr	r1, [r7]
   18548:	mov	r3, r4
   1854c:	mov	r2, r6
   18550:	str	r4, [sp]
   18554:	ldr	r0, [pc, #1088]	; 1899c <__snprintf_chk@plt+0x64d0>
   18558:	bl	1204c <XtCreateManagedWidget@plt>
   1855c:	sub	r1, r5, #660	; 0x294
   18560:	mov	r3, sl
   18564:	sub	r1, r1, #2
   18568:	ldr	r2, [pc, #1056]	; 18990 <__snprintf_chk@plt+0x64c4>
   1856c:	mov	r8, r0
   18570:	bl	12490 <XtAddCallback@plt>
   18574:	sub	r1, r5, #660	; 0x294
   18578:	mov	r3, fp
   1857c:	mov	r0, r8
   18580:	sub	r1, r1, #2
   18584:	ldr	r2, [pc, #1036]	; 18998 <__snprintf_chk@plt+0x64cc>
   18588:	bl	12490 <XtAddCallback@plt>
   1858c:	ldr	r1, [r7]
   18590:	mov	r3, r4
   18594:	mov	r2, r6
   18598:	str	r4, [sp]
   1859c:	ldr	r0, [pc, #1020]	; 189a0 <__snprintf_chk@plt+0x64d4>
   185a0:	bl	1204c <XtCreateManagedWidget@plt>
   185a4:	sub	r1, r5, #660	; 0x294
   185a8:	ldr	r3, [sl, #8]
   185ac:	sub	r1, r1, #2
   185b0:	ldr	r2, [pc, #1004]	; 189a4 <__snprintf_chk@plt+0x64d8>
   185b4:	bl	12490 <XtAddCallback@plt>
   185b8:	ldr	r3, [fp, #40]	; 0x28
   185bc:	ldr	r3, [r3, #16]
   185c0:	ldr	r5, [r3, #20]
   185c4:	cmp	r5, r4
   185c8:	beq	18604 <__snprintf_chk@plt+0x6138>
   185cc:	ldr	r4, [pc, #980]	; 189a8 <__snprintf_chk@plt+0x64dc>
   185d0:	ldr	r0, [r5, #4]
   185d4:	mov	r2, #1
   185d8:	mov	r1, r4
   185dc:	bl	12088 <XtSetValues@plt>
   185e0:	ldr	r0, [r5, #8]
   185e4:	cmp	r0, #0
   185e8:	beq	185f8 <__snprintf_chk@plt+0x612c>
   185ec:	mov	r2, #1
   185f0:	mov	r1, r4
   185f4:	bl	12088 <XtSetValues@plt>
   185f8:	ldr	r5, [r5]
   185fc:	cmp	r5, #0
   18600:	bne	185d0 <__snprintf_chk@plt+0x6104>
   18604:	mov	r2, #0
   18608:	mov	r0, r2
   1860c:	mov	r1, fp
   18610:	bl	14f00 <__snprintf_chk@plt+0x2a34>
   18614:	ldr	r0, [sp, #56]	; 0x38
   18618:	ldr	r3, [pc, #908]	; 189ac <__snprintf_chk@plt+0x64e0>
   1861c:	add	lr, sp, #86	; 0x56
   18620:	ldr	r4, [r0, #8]
   18624:	str	lr, [sp, #192]	; 0xc0
   18628:	add	lr, sp, #88	; 0x58
   1862c:	sub	ip, r3, #110	; 0x6e
   18630:	mov	r2, #3
   18634:	add	r1, sp, #188	; 0xbc
   18638:	ldr	r0, [fp, #36]	; 0x24
   1863c:	str	lr, [sp, #200]	; 0xc8
   18640:	add	lr, sp, #92	; 0x5c
   18644:	str	lr, [sp, #208]	; 0xd0
   18648:	str	r3, [sp, #196]	; 0xc4
   1864c:	str	ip, [sp, #204]	; 0xcc
   18650:	str	r9, [sp, #188]	; 0xbc
   18654:	bl	120ac <XtGetValues@plt>
   18658:	ldrh	r3, [sp, #86]	; 0x56
   1865c:	ldrh	r2, [sp, #88]	; 0x58
   18660:	ldrh	r1, [sp, #92]	; 0x5c
   18664:	add	ip, sp, #84	; 0x54
   18668:	ldr	r0, [fp, #36]	; 0x24
   1866c:	add	r2, r1, r2, lsr #1
   18670:	add	r1, r1, r3, lsr #1
   18674:	str	ip, [sp]
   18678:	add	r3, sp, #82	; 0x52
   1867c:	sxth	r2, r2
   18680:	sxth	r1, r1
   18684:	bl	11f98 <XtTranslateCoords@plt>
   18688:	ldr	r0, [pc, #800]	; 189b0 <__snprintf_chk@plt+0x64e4>
   1868c:	bl	12364 <XtParseTranslationTable@plt>
   18690:	ldr	r5, [pc, #796]	; 189b4 <__snprintf_chk@plt+0x64e8>
   18694:	mov	r1, r0
   18698:	mov	r0, r4
   1869c:	bl	12268 <XtOverrideTranslations@plt>
   186a0:	mov	r0, r4
   186a4:	bl	12208 <XtRealizeWidget@plt>
   186a8:	mov	r0, r4
   186ac:	bl	12340 <XtDisplay@plt>
   186b0:	mov	r2, #0
   186b4:	ldr	r1, [pc, #764]	; 189b8 <__snprintf_chk@plt+0x64ec>
   186b8:	bl	122e0 <XInternAtom@plt>
   186bc:	str	r0, [r5]
   186c0:	mov	r0, r4
   186c4:	bl	12340 <XtDisplay@plt>
   186c8:	mov	r6, r0
   186cc:	mov	r0, r4
   186d0:	bl	120c4 <XtWindow@plt>
   186d4:	mov	r3, #1
   186d8:	mov	r2, r5
   186dc:	mov	r1, r0
   186e0:	mov	r0, r6
   186e4:	bl	12250 <XSetWMProtocols@plt>
   186e8:	mov	r0, r4
   186ec:	mov	r2, #3
   186f0:	add	r1, sp, #188	; 0xbc
   186f4:	bl	120ac <XtGetValues@plt>
   186f8:	ldrh	r1, [sp, #92]	; 0x5c
   186fc:	ldrh	ip, [sp, #86]	; 0x56
   18700:	ldrh	r2, [sp, #82]	; 0x52
   18704:	ldrh	r3, [sp, #84]	; 0x54
   18708:	ldrh	r0, [sp, #88]	; 0x58
   1870c:	sub	r2, r2, r1
   18710:	sub	r3, r3, r1
   18714:	sub	r2, r2, ip, lsr #1
   18718:	sub	r3, r3, r0, lsr #1
   1871c:	mov	r0, r4
   18720:	strh	r2, [sp, #82]	; 0x52
   18724:	strh	r3, [sp, #84]	; 0x54
   18728:	bl	120f4 <XtScreen@plt>
   1872c:	ldrh	r2, [sp, #92]	; 0x5c
   18730:	ldrh	r3, [sp, #86]	; 0x56
   18734:	ldrsh	r1, [sp, #82]	; 0x52
   18738:	add	r2, r3, r2, lsl #1
   1873c:	ldr	r3, [r0, #12]
   18740:	mov	r0, r4
   18744:	sub	r3, r3, r2
   18748:	sxth	r3, r3
   1874c:	cmp	r3, r1
   18750:	movlt	r1, r3
   18754:	strhlt	r3, [sp, #82]	; 0x52
   18758:	cmp	r1, #0
   1875c:	movlt	r3, #0
   18760:	strhlt	r3, [sp, #82]	; 0x52
   18764:	bl	120f4 <XtScreen@plt>
   18768:	ldrh	r1, [sp, #92]	; 0x5c
   1876c:	ldrh	r3, [sp, #88]	; 0x58
   18770:	ldrsh	r2, [sp, #84]	; 0x54
   18774:	ldrsh	ip, [sp, #82]	; 0x52
   18778:	add	r1, r3, r1, lsl #1
   1877c:	ldr	r3, [r0, #16]
   18780:	str	ip, [sp, #192]	; 0xc0
   18784:	sub	r3, r3, r1
   18788:	add	r1, sp, #188	; 0xbc
   1878c:	sxth	r3, r3
   18790:	cmp	r3, r2
   18794:	movlt	r2, r3
   18798:	strhlt	r3, [sp, #84]	; 0x54
   1879c:	cmp	r2, #0
   187a0:	movlt	r3, #0
   187a4:	movlt	r2, r3
   187a8:	strhlt	r3, [sp, #84]	; 0x54
   187ac:	ldr	r3, [pc, #520]	; 189bc <__snprintf_chk@plt+0x64f0>
   187b0:	str	r2, [sp, #200]	; 0xc8
   187b4:	add	r0, r3, #2
   187b8:	mov	r2, #2
   187bc:	str	r0, [sp, #196]	; 0xc4
   187c0:	mov	r0, r4
   187c4:	str	r3, [sp, #188]	; 0xbc
   187c8:	bl	12088 <XtSetValues@plt>
   187cc:	mov	r0, r4
   187d0:	mov	r1, #0
   187d4:	bl	12238 <XtPopup@plt>
   187d8:	ldr	r3, [pc, #212]	; 188b4 <__snprintf_chk@plt+0x63e8>
   187dc:	ldr	r2, [sp, #268]	; 0x10c
   187e0:	ldr	r3, [r3]
   187e4:	cmp	r2, r3
   187e8:	bne	188b0 <__snprintf_chk@plt+0x63e4>
   187ec:	add	sp, sp, #276	; 0x114
   187f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187f4:	ldr	r2, [pc, #228]	; 188e0 <__snprintf_chk@plt+0x6414>
   187f8:	mov	r3, r4
   187fc:	ldr	r0, [pc, #444]	; 189c0 <__snprintf_chk@plt+0x64f4>
   18800:	ldr	r1, [r2]
   18804:	mov	r2, sl
   18808:	str	r4, [sp]
   1880c:	bl	1204c <XtCreateManagedWidget@plt>
   18810:	ldr	r3, [pc, #192]	; 188d8 <__snprintf_chk@plt+0x640c>
   18814:	mov	r2, sl
   18818:	ldr	r0, [pc, #420]	; 189c4 <__snprintf_chk@plt+0x64f8>
   1881c:	ldr	r1, [r3]
   18820:	mov	r3, r4
   18824:	str	r4, [sp]
   18828:	str	r7, [sp, #188]	; 0xbc
   1882c:	str	r8, [sp, #192]	; 0xc0
   18830:	bl	1204c <XtCreateManagedWidget@plt>
   18834:	mov	r3, #1
   18838:	ldr	r1, [r6]
   1883c:	str	r3, [sp]
   18840:	add	r3, sp, #188	; 0xbc
   18844:	mov	r2, r0
   18848:	ldr	r0, [pc, #376]	; 189c8 <__snprintf_chk@plt+0x64fc>
   1884c:	bl	1204c <XtCreateManagedWidget@plt>
   18850:	mov	r3, fp
   18854:	ldr	r2, [pc, #248]	; 18954 <__snprintf_chk@plt+0x6488>
   18858:	ldr	r1, [pc, #144]	; 188f0 <__snprintf_chk@plt+0x6424>
   1885c:	str	r0, [r5, #16]
   18860:	bl	12490 <XtAddCallback@plt>
   18864:	mov	r3, r8
   18868:	ldr	r0, [r5, #16]
   1886c:	ldr	r2, [pc, #132]	; 188f8 <__snprintf_chk@plt+0x642c>
   18870:	ldr	r1, [pc, #132]	; 188fc <__snprintf_chk@plt+0x6430>
   18874:	bl	12490 <XtAddCallback@plt>
   18878:	b	183a0 <__snprintf_chk@plt+0x5ed4>
   1887c:	ldr	r2, [pc, #328]	; 189cc <__snprintf_chk@plt+0x6500>
   18880:	ldr	r3, [pc, #328]	; 189d0 <__snprintf_chk@plt+0x6504>
   18884:	ldr	r1, [sp, #60]	; 0x3c
   18888:	str	r2, [sp, #192]	; 0xc0
   1888c:	ldr	r2, [pc, #320]	; 189d4 <__snprintf_chk@plt+0x6508>
   18890:	str	r3, [sp, #196]	; 0xc4
   18894:	mov	r3, #1
   18898:	str	r1, [sp, #208]	; 0xd0
   1889c:	str	r7, [sp, #188]	; 0xbc
   188a0:	str	r2, [sp, #204]	; 0xcc
   188a4:	str	r3, [sp, #200]	; 0xc8
   188a8:	mov	r8, #3
   188ac:	b	18320 <__snprintf_chk@plt+0x5e54>
   188b0:	bl	120e8 <__stack_chk_fail@plt>
   188b4:	andeq	ip, r2, r0, lsl #31
   188b8:	strdeq	sp, [r2], -r8
   188bc:	andeq	lr, r2, r4, lsr #14
   188c0:	andeq	lr, r2, r4, asr r7
   188c4:	andeq	lr, r2, r8, lsl r3
   188c8:	andeq	lr, r2, r4, asr #14
   188cc:	andeq	sp, r2, r3, ror #3
   188d0:	andeq	r7, r1, r8, ror #14
   188d4:	ldrdeq	ip, [r1], -r0
   188d8:	andeq	lr, r2, r0, asr r7
   188dc:	ldrdeq	ip, [r1], -r8
   188e0:	andeq	lr, r2, r8, ror #14
   188e4:	andeq	fp, r1, r4, ror lr
   188e8:	andeq	lr, r2, r4, ror #14
   188ec:	andeq	ip, r1, r8, ror #1
   188f0:	andeq	sp, r2, r8, lsl r5
   188f4:	andeq	r5, r1, ip, ror #10
   188f8:			; <UNDEFINED> instruction: 0x000177bc
   188fc:	andeq	sp, r2, r9, lsr r5
   18900:	andeq	fp, r1, r4, lsl #29
   18904:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   18908:	andeq	r9, r1, ip, lsl r9
   1890c:	andeq	r5, r1, r8, lsl #15
   18910:	andeq	fp, r1, r8, ror #28
   18914:	andeq	ip, r1, ip, lsl #2
   18918:	andeq	r9, r1, r4, lsr #18
   1891c:	andeq	ip, r1, r0, lsr #2
   18920:	andeq	ip, r1, r4, lsr #2
   18924:	andeq	fp, r1, r4, asr #27
   18928:	andeq	ip, r1, ip, lsr #2
   1892c:	andeq	ip, r1, r0, lsr r1
   18930:	andeq	fp, r1, ip, lsr #19
   18934:	andeq	ip, r1, r8, lsl #2
   18938:	strdeq	ip, [r1], -r8
   1893c:	andeq	ip, r1, r8, lsl r1
   18940:	andeq	ip, r1, r0, asr #2
   18944:	andeq	ip, r1, ip, asr #2
   18948:	andeq	ip, r1, r4, ror #2
   1894c:	andeq	lr, r2, r0, ror #14
   18950:	andeq	ip, r1, r4, ror r1
   18954:	ldrdeq	r5, [r1], -ip
   18958:			; <UNDEFINED> instruction: 0x0001c1b4
   1895c:	andeq	sp, r2, lr, lsr #15
   18960:	andeq	ip, r1, r8, asr #3
   18964:	ldrdeq	ip, [r1], -r0
   18968:	andeq	ip, r1, r0, asr #3
   1896c:	andeq	fp, r1, r0, lsr #29
   18970:	andeq	lr, r2, r8, lsr r7
   18974:	andeq	lr, r2, r8, asr r7
   18978:	andeq	fp, r1, ip, lsr #29
   1897c:	andeq	lr, r2, ip, asr r7
   18980:	ldrdeq	ip, [r1], -r8
   18984:	andeq	ip, r1, r4, ror #3
   18988:	andeq	r5, r1, ip, lsr #5
   1898c:	andeq	ip, r1, ip, ror #3
   18990:	andeq	r5, r1, r0, asr r2
   18994:	strdeq	ip, [r1], -r4
   18998:	andeq	r5, r1, r8, ror #5
   1899c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   189a0:			; <UNDEFINED> instruction: 0x000198bc
   189a4:	andeq	r5, r1, r4, lsr r2
   189a8:	andeq	lr, r2, r8, lsl r7
   189ac:	andeq	sp, r2, sl, ror r5
   189b0:	andeq	fp, r1, r4, lsr fp
   189b4:	andeq	lr, r2, r0, lsl r8
   189b8:	andeq	fp, r1, r4, asr fp
   189bc:	andeq	sp, r2, r5, lsl #16
   189c0:	andeq	ip, r1, r0, lsl #3
   189c4:	muleq	r1, r0, r1
   189c8:	andeq	ip, r1, r4, lsr #3
   189cc:	andeq	lr, r2, r4, lsl r7
   189d0:	andeq	ip, r1, r4, asr r1
   189d4:	andeq	sp, r2, r7, asr r7
   189d8:	push	{r4, r5, lr}
   189dc:	ldr	r4, [r0, #24]
   189e0:	ldr	r2, [r4, #12]
   189e4:	cmp	r2, #0
   189e8:	popeq	{r4, r5, pc}
   189ec:	ldr	r1, [r4, #8]
   189f0:	ldr	r5, [r1]
   189f4:	cmp	r0, r5
   189f8:	movne	ip, r1
   189fc:	movne	r3, #0
   18a00:	beq	18a1c <__snprintf_chk@plt+0x6550>
   18a04:	add	r3, r3, #1
   18a08:	cmp	r3, r2
   18a0c:	popeq	{r4, r5, pc}
   18a10:	ldr	lr, [ip, #4]!
   18a14:	cmp	r0, lr
   18a18:	bne	18a04 <__snprintf_chk@plt+0x6538>
   18a1c:	mov	ip, #0
   18a20:	cmp	r0, r5
   18a24:	mov	r3, r1
   18a28:	add	ip, ip, #1
   18a2c:	beq	18a48 <__snprintf_chk@plt+0x657c>
   18a30:	cmp	r2, ip
   18a34:	beq	18a7c <__snprintf_chk@plt+0x65b0>
   18a38:	ldr	r5, [r3, #4]!
   18a3c:	add	ip, ip, #1
   18a40:	cmp	r0, r5
   18a44:	bne	18a30 <__snprintf_chk@plt+0x6564>
   18a48:	cmp	r2, ip
   18a4c:	lslhi	r0, ip, #2
   18a50:	bhi	18a5c <__snprintf_chk@plt+0x6590>
   18a54:	b	18a7c <__snprintf_chk@plt+0x65b0>
   18a58:	ldr	r1, [r4, #8]
   18a5c:	mov	r3, r1
   18a60:	add	ip, ip, #1
   18a64:	ldr	r2, [r3, r0]!
   18a68:	add	r0, r0, #4
   18a6c:	str	r2, [r3, #-4]
   18a70:	ldr	r2, [r4, #12]
   18a74:	cmp	r2, ip
   18a78:	bhi	18a58 <__snprintf_chk@plt+0x658c>
   18a7c:	sub	r2, r2, #1
   18a80:	str	r2, [r4, #12]
   18a84:	pop	{r4, r5, pc}
   18a88:	push	{r4, r5, r6, lr}
   18a8c:	ldr	r5, [r0, #24]
   18a90:	ldr	ip, [r5, #12]
   18a94:	ldr	lr, [r5, #8]
   18a98:	cmp	ip, #0
   18a9c:	beq	18ad0 <__snprintf_chk@plt+0x6604>
   18aa0:	ldr	r3, [lr]
   18aa4:	cmp	r0, r3
   18aa8:	popeq	{r4, r5, r6, pc}
   18aac:	mov	r2, lr
   18ab0:	mov	r3, #0
   18ab4:	b	18ac4 <__snprintf_chk@plt+0x65f8>
   18ab8:	ldr	r1, [r2, #4]!
   18abc:	cmp	r0, r1
   18ac0:	popeq	{r4, r5, r6, pc}
   18ac4:	add	r3, r3, #1
   18ac8:	cmp	r3, ip
   18acc:	bne	18ab8 <__snprintf_chk@plt+0x65ec>
   18ad0:	ldr	r1, [r5, #16]
   18ad4:	mov	r4, r0
   18ad8:	cmp	r1, ip
   18adc:	bls	18af0 <__snprintf_chk@plt+0x6624>
   18ae0:	add	r3, ip, #1
   18ae4:	str	r3, [r5, #12]
   18ae8:	str	r4, [lr, ip, lsl #2]
   18aec:	pop	{r4, r5, r6, pc}
   18af0:	add	r1, r1, #10
   18af4:	str	r1, [r5, #16]
   18af8:	mov	r0, lr
   18afc:	lsl	r1, r1, #2
   18b00:	bl	1219c <XtRealloc@plt>
   18b04:	ldr	ip, [r5, #12]
   18b08:	mov	lr, r0
   18b0c:	str	r0, [r5, #8]
   18b10:	b	18ae0 <__snprintf_chk@plt+0x6614>
   18b14:	tst	r2, #255	; 0xff
   18b18:	mov	r0, r1
   18b1c:	bne	18b24 <__snprintf_chk@plt+0x6658>
   18b20:	b	189d8 <__snprintf_chk@plt+0x650c>
   18b24:	b	18a88 <__snprintf_chk@plt+0x65bc>
   18b28:	push	{r4, r5, r6, r7, lr}
   18b2c:	sub	sp, sp, #8192	; 0x2000
   18b30:	ldr	r7, [pc, #392]	; 18cc0 <__snprintf_chk@plt+0x67f4>
   18b34:	sub	sp, sp, #44	; 0x2c
   18b38:	mov	r4, r1
   18b3c:	ldr	r3, [r1, #16]
   18b40:	add	r1, sp, #8192	; 0x2000
   18b44:	ldr	r2, [r7]
   18b48:	add	r1, r1, #36	; 0x24
   18b4c:	cmp	r3, #0
   18b50:	mov	r6, r0
   18b54:	str	r2, [r1]
   18b58:	ldr	r0, [r4]
   18b5c:	addeq	r5, sp, #40	; 0x28
   18b60:	beq	18b84 <__snprintf_chk@plt+0x66b8>
   18b64:	ldr	r2, [r3, #36]	; 0x24
   18b68:	cmp	r2, #0
   18b6c:	addne	r5, sp, #40	; 0x28
   18b70:	beq	18c68 <__snprintf_chk@plt+0x679c>
   18b74:	ldr	r3, [pc, #328]	; 18cc4 <__snprintf_chk@plt+0x67f8>
   18b78:	str	r2, [r5, #-8]
   18b7c:	str	r3, [r5, #-12]
   18b80:	mov	r3, #1
   18b84:	ldr	r2, [pc, #316]	; 18cc8 <__snprintf_chk@plt+0x67fc>
   18b88:	str	r3, [sp]
   18b8c:	sub	r3, r5, #12
   18b90:	ldr	r1, [r2]
   18b94:	mov	r2, r6
   18b98:	bl	1204c <XtCreateManagedWidget@plt>
   18b9c:	str	r0, [r4, #36]	; 0x24
   18ba0:	bl	12340 <XtDisplay@plt>
   18ba4:	mov	r3, r4
   18ba8:	mov	r2, #42	; 0x2a
   18bac:	ldr	r1, [r4, #36]	; 0x24
   18bb0:	bl	120a0 <XSaveContext@plt>
   18bb4:	cmp	r0, #0
   18bb8:	bne	18c24 <__snprintf_chk@plt+0x6758>
   18bbc:	mov	r3, r4
   18bc0:	ldr	r2, [pc, #260]	; 18ccc <__snprintf_chk@plt+0x6800>
   18bc4:	ldr	r1, [pc, #260]	; 18cd0 <__snprintf_chk@plt+0x6804>
   18bc8:	ldr	r0, [r4, #36]	; 0x24
   18bcc:	bl	12490 <XtAddCallback@plt>
   18bd0:	ldr	r3, [r4, #28]
   18bd4:	cmp	r3, #0
   18bd8:	beq	18c00 <__snprintf_chk@plt+0x6734>
   18bdc:	mov	r5, #0
   18be0:	ldr	r3, [r4, #20]
   18be4:	mov	r0, r6
   18be8:	ldr	r1, [r3, r5, lsl #2]
   18bec:	bl	18b28 <__snprintf_chk@plt+0x665c>
   18bf0:	ldr	r3, [r4, #28]
   18bf4:	add	r5, r5, #1
   18bf8:	cmp	r3, r5
   18bfc:	bhi	18be0 <__snprintf_chk@plt+0x6714>
   18c00:	add	r3, sp, #8192	; 0x2000
   18c04:	add	r3, r3, #36	; 0x24
   18c08:	ldr	r2, [r3]
   18c0c:	ldr	r3, [r7]
   18c10:	cmp	r2, r3
   18c14:	bne	18cbc <__snprintf_chk@plt+0x67f0>
   18c18:	add	sp, sp, #8192	; 0x2000
   18c1c:	add	sp, sp, #44	; 0x2c
   18c20:	pop	{r4, r5, r6, r7, pc}
   18c24:	ldr	r3, [pc, #168]	; 18cd4 <__snprintf_chk@plt+0x6808>
   18c28:	sub	r1, r5, #4
   18c2c:	ldr	r2, [r4]
   18c30:	str	r1, [sp, #20]
   18c34:	ldr	r1, [r3, #116]	; 0x74
   18c38:	mov	r3, #8192	; 0x2000
   18c3c:	str	r1, [sp]
   18c40:	str	r2, [sp, #4]
   18c44:	mov	r1, r3
   18c48:	ldr	r0, [sp, #20]
   18c4c:	mov	r2, #1
   18c50:	bl	124cc <__snprintf_chk@plt>
   18c54:	ldr	r3, [pc, #124]	; 18cd8 <__snprintf_chk@plt+0x680c>
   18c58:	ldr	r1, [sp, #20]
   18c5c:	ldr	r0, [r3, #12]
   18c60:	bl	16304 <__snprintf_chk@plt+0x3e38>
   18c64:	b	18bbc <__snprintf_chk@plt+0x66f0>
   18c68:	ldr	r1, [pc, #108]	; 18cdc <__snprintf_chk@plt+0x6810>
   18c6c:	ldr	r2, [pc, #96]	; 18cd4 <__snprintf_chk@plt+0x6808>
   18c70:	str	r1, [sp, #12]
   18c74:	ldr	r1, [r3]
   18c78:	ldr	r2, [r2, #112]	; 0x70
   18c7c:	mov	r3, #8192	; 0x2000
   18c80:	strd	r0, [sp, #4]
   18c84:	str	r2, [sp]
   18c88:	mov	r1, r3
   18c8c:	mov	r2, #1
   18c90:	add	r0, sp, #36	; 0x24
   18c94:	bl	124cc <__snprintf_chk@plt>
   18c98:	ldr	r3, [pc, #56]	; 18cd8 <__snprintf_chk@plt+0x680c>
   18c9c:	add	r1, sp, #36	; 0x24
   18ca0:	add	r5, sp, #40	; 0x28
   18ca4:	ldr	r0, [r3, #12]
   18ca8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   18cac:	ldr	r3, [r4, #16]
   18cb0:	ldr	r0, [r4]
   18cb4:	ldr	r2, [r3, #36]	; 0x24
   18cb8:	b	18b74 <__snprintf_chk@plt+0x66a8>
   18cbc:	bl	120e8 <__stack_chk_fail@plt>
   18cc0:	andeq	ip, r2, r0, lsl #31
   18cc4:	andeq	ip, r1, r0, asr #10
   18cc8:	andeq	lr, r2, r4, asr r7
   18ccc:	andeq	r8, r1, r4, lsl fp
   18cd0:	andeq	sp, r2, r8, lsl r5
   18cd4:	andeq	lr, r2, r8, lsr #16
   18cd8:	andeq	lr, r2, r8, lsl r8
   18cdc:	andeq	ip, r1, r8, lsr #10
   18ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ce4:	mov	sl, r0
   18ce8:	sub	sp, sp, #12
   18cec:	mov	r0, #32
   18cf0:	bl	12064 <XtMalloc@plt>
   18cf4:	mov	r6, r0
   18cf8:	mov	r0, #0
   18cfc:	str	r0, [r6]
   18d00:	str	r0, [r6, #4]
   18d04:	str	r0, [r6, #8]
   18d08:	str	r0, [r6, #16]
   18d0c:	str	r0, [r6, #12]
   18d10:	str	r0, [r6, #20]
   18d14:	str	r0, [r6, #28]
   18d18:	str	r0, [r6, #24]
   18d1c:	ldrh	r3, [sl, #8]
   18d20:	cmp	r3, r0
   18d24:	beq	18e9c <__snprintf_chk@plt+0x69d0>
   18d28:	mov	r4, r0
   18d2c:	b	18d70 <__snprintf_chk@plt+0x68a4>
   18d30:	ldr	r2, [fp, #16]
   18d34:	mov	r3, #0
   18d38:	str	r2, [r9, #4]
   18d3c:	ldr	r2, [fp, #12]
   18d40:	str	r3, [fp, #16]
   18d44:	str	r2, [r9]
   18d48:	ldr	r2, [fp, #20]
   18d4c:	str	r3, [fp, #12]
   18d50:	str	r2, [r9, #12]
   18d54:	str	r6, [r9, #24]
   18d58:	add	r4, r4, #1
   18d5c:	ldrh	r3, [sl, #8]
   18d60:	uxth	r4, r4
   18d64:	cmp	r3, r4
   18d68:	bls	18e9c <__snprintf_chk@plt+0x69d0>
   18d6c:	ldr	r0, [r6, #4]
   18d70:	add	r2, r4, r4, lsl #1
   18d74:	ldr	r1, [sl, #12]
   18d78:	lsl	r2, r2, #3
   18d7c:	add	fp, r1, r2
   18d80:	ldrh	r5, [r1, r2]
   18d84:	ldr	r1, [fp, #4]
   18d88:	mov	r2, r5
   18d8c:	bl	16490 <__snprintf_chk@plt+0x3fc4>
   18d90:	subs	r9, r0, #0
   18d94:	bne	18d30 <__snprintf_chk@plt+0x6864>
   18d98:	mov	r1, #1
   18d9c:	mov	r0, #44	; 0x2c
   18da0:	bl	123c4 <XtCalloc@plt>
   18da4:	ldr	r1, [fp, #4]
   18da8:	sub	r2, r5, #-1073741823	; 0xc0000001
   18dac:	subs	r7, r5, #1
   18db0:	ldr	r2, [r1, r2, lsl #2]
   18db4:	str	r2, [r0, #8]
   18db8:	ldr	r2, [fp, #16]
   18dbc:	mov	r8, r0
   18dc0:	str	r2, [r0, #4]
   18dc4:	ldr	r2, [fp, #12]
   18dc8:	str	r9, [fp, #16]
   18dcc:	str	r2, [r0]
   18dd0:	ldr	r2, [fp, #20]
   18dd4:	str	r9, [fp, #12]
   18dd8:	str	r2, [r0, #12]
   18ddc:	str	r6, [r0, #24]
   18de0:	beq	18ea8 <__snprintf_chk@plt+0x69dc>
   18de4:	sub	r5, r5, #-1073741822	; 0xc0000002
   18de8:	lsl	r5, r5, #2
   18dec:	mov	r2, r7
   18df0:	ldr	r1, [fp, #4]
   18df4:	ldr	r0, [r6, #4]
   18df8:	bl	16490 <__snprintf_chk@plt+0x3fc4>
   18dfc:	mov	r9, #0
   18e00:	mov	r1, #1
   18e04:	subs	r2, r0, #0
   18e08:	movne	r9, #1
   18e0c:	mov	r0, #44	; 0x2c
   18e10:	bne	18e28 <__snprintf_chk@plt+0x695c>
   18e14:	bl	123c4 <XtCalloc@plt>
   18e18:	ldr	r1, [fp, #4]
   18e1c:	ldr	r1, [r1, r5]
   18e20:	mov	r2, r0
   18e24:	str	r1, [r0, #8]
   18e28:	ldr	ip, [r2, #28]
   18e2c:	ldr	r1, [r2, #32]
   18e30:	ldr	r0, [r2, #20]
   18e34:	cmp	ip, r1
   18e38:	bcc	18e5c <__snprintf_chk@plt+0x6990>
   18e3c:	add	r1, r1, #10
   18e40:	str	r1, [r2, #32]
   18e44:	lsl	r1, r1, #2
   18e48:	str	r2, [sp, #4]
   18e4c:	bl	1219c <XtRealloc@plt>
   18e50:	ldr	r2, [sp, #4]
   18e54:	ldr	ip, [r2, #28]
   18e58:	str	r0, [r2, #20]
   18e5c:	str	r8, [r0, ip, lsl #2]
   18e60:	ldr	r1, [r2, #28]
   18e64:	cmp	r9, #0
   18e68:	add	r1, r1, #1
   18e6c:	str	r1, [r2, #28]
   18e70:	str	r2, [r8, #16]
   18e74:	bne	18d58 <__snprintf_chk@plt+0x688c>
   18e78:	subs	r7, r7, #1
   18e7c:	mov	r8, r2
   18e80:	sub	r5, r5, #4
   18e84:	bne	18dec <__snprintf_chk@plt+0x6920>
   18e88:	ldr	r3, [r2, #16]
   18e8c:	cmp	r3, #0
   18e90:	moveq	r3, r2
   18e94:	str	r3, [r6, #4]
   18e98:	b	18d58 <__snprintf_chk@plt+0x688c>
   18e9c:	mov	r0, r6
   18ea0:	add	sp, sp, #12
   18ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ea8:	mov	r2, r0
   18eac:	b	18e88 <__snprintf_chk@plt+0x69bc>
   18eb0:	push	{r4, r5, r6, r7, r8, lr}
   18eb4:	sub	sp, sp, #8192	; 0x2000
   18eb8:	ldr	r4, [pc, #316]	; 18ffc <__snprintf_chk@plt+0x6b30>
   18ebc:	ldr	r7, [pc, #316]	; 19000 <__snprintf_chk@plt+0x6b34>
   18ec0:	sub	sp, sp, #24
   18ec4:	ldr	r3, [r4]
   18ec8:	mov	r5, r1
   18ecc:	add	r1, sp, #8192	; 0x2000
   18ed0:	ldr	r2, [r7]
   18ed4:	add	r1, r1, #20
   18ed8:	cmp	r3, #0
   18edc:	mov	r8, r0
   18ee0:	str	r2, [r1]
   18ee4:	beq	18f04 <__snprintf_chk@plt+0x6a38>
   18ee8:	ldr	r0, [r3]
   18eec:	bl	123e8 <XtDestroyWidget@plt>
   18ef0:	ldr	r3, [r4]
   18ef4:	ldr	r0, [r3, #8]
   18ef8:	bl	12328 <XtFree@plt>
   18efc:	ldr	r0, [r4]
   18f00:	bl	12328 <XtFree@plt>
   18f04:	mov	r0, r5
   18f08:	bl	18ce0 <__snprintf_chk@plt+0x6814>
   18f0c:	ldr	r2, [pc, #240]	; 19004 <__snprintf_chk@plt+0x6b38>
   18f10:	mov	r3, #0
   18f14:	ldr	r1, [r2]
   18f18:	mov	r2, r8
   18f1c:	ldr	r5, [r0, #4]
   18f20:	mov	r6, r0
   18f24:	str	r3, [sp]
   18f28:	ldr	r0, [pc, #216]	; 19008 <__snprintf_chk@plt+0x6b3c>
   18f2c:	str	r6, [r4]
   18f30:	bl	11fbc <XtCreateWidget@plt>
   18f34:	cmp	r5, #0
   18f38:	str	r0, [r6]
   18f3c:	beq	18fe0 <__snprintf_chk@plt+0x6b14>
   18f40:	ldr	r3, [r4]
   18f44:	mov	r1, r5
   18f48:	ldr	r0, [r3]
   18f4c:	bl	18b28 <__snprintf_chk@plt+0x665c>
   18f50:	mov	r0, r8
   18f54:	bl	12274 <XtIsRealized@plt>
   18f58:	cmp	r0, #0
   18f5c:	bne	18fd0 <__snprintf_chk@plt+0x6b04>
   18f60:	ldr	r3, [r4]
   18f64:	ldr	r0, [r3]
   18f68:	bl	12484 <XtManageChild@plt>
   18f6c:	ldr	r2, [pc, #152]	; 1900c <__snprintf_chk@plt+0x6b40>
   18f70:	ldr	r1, [r5, #4]
   18f74:	mov	r3, #8192	; 0x2000
   18f78:	str	r1, [sp, #8]
   18f7c:	ldr	r2, [r2, #44]	; 0x2c
   18f80:	ldr	r1, [r5]
   18f84:	add	r0, sp, #20
   18f88:	str	r1, [sp, #4]
   18f8c:	str	r2, [sp]
   18f90:	mov	r1, r3
   18f94:	mov	r2, #1
   18f98:	bl	124cc <__snprintf_chk@plt>
   18f9c:	ldr	r3, [pc, #108]	; 19010 <__snprintf_chk@plt+0x6b44>
   18fa0:	add	r1, sp, #20
   18fa4:	ldr	r0, [r3, #12]
   18fa8:	bl	16304 <__snprintf_chk@plt+0x3e38>
   18fac:	add	r3, sp, #8192	; 0x2000
   18fb0:	add	r3, r3, #20
   18fb4:	ldr	r2, [r3]
   18fb8:	ldr	r3, [r7]
   18fbc:	cmp	r2, r3
   18fc0:	bne	18ff8 <__snprintf_chk@plt+0x6b2c>
   18fc4:	add	sp, sp, #8192	; 0x2000
   18fc8:	add	sp, sp, #24
   18fcc:	pop	{r4, r5, r6, r7, r8, pc}
   18fd0:	ldr	r3, [r4]
   18fd4:	ldr	r0, [r3]
   18fd8:	bl	12208 <XtRealizeWidget@plt>
   18fdc:	b	18f60 <__snprintf_chk@plt+0x6a94>
   18fe0:	ldr	r2, [pc, #36]	; 1900c <__snprintf_chk@plt+0x6b40>
   18fe4:	ldr	r3, [pc, #36]	; 19010 <__snprintf_chk@plt+0x6b44>
   18fe8:	ldr	r1, [r2, #108]	; 0x6c
   18fec:	ldr	r0, [r3, #12]
   18ff0:	bl	16304 <__snprintf_chk@plt+0x3e38>
   18ff4:	b	18fac <__snprintf_chk@plt+0x6ae0>
   18ff8:	bl	120e8 <__stack_chk_fail@plt>
   18ffc:	muleq	r2, r0, r7
   19000:	andeq	ip, r2, r0, lsl #31
   19004:	andeq	lr, r2, ip, lsr #14
   19008:	andeq	ip, r1, ip, asr #10
   1900c:	andeq	lr, r2, r8, lsr #16
   19010:	andeq	lr, r2, r8, lsl r8
   19014:	push	{r4, r5, lr}
   19018:	mov	r4, r0
   1901c:	ldr	r3, [r0, #16]
   19020:	ldr	ip, [r0]
   19024:	cmp	r3, #0
   19028:	sub	sp, sp, #12
   1902c:	ldrd	r0, [r0, #4]
   19030:	beq	19084 <__snprintf_chk@plt+0x6bb8>
   19034:	ldr	r2, [r3]
   19038:	str	r0, [sp, #4]
   1903c:	str	r1, [sp]
   19040:	mov	r3, ip
   19044:	ldr	r1, [pc, #84]	; 190a0 <__snprintf_chk@plt+0x6bd4>
   19048:	mov	r0, #1
   1904c:	bl	12358 <__printf_chk@plt>
   19050:	ldr	r3, [r4, #28]
   19054:	cmp	r3, #0
   19058:	movne	r5, #0
   1905c:	beq	1907c <__snprintf_chk@plt+0x6bb0>
   19060:	ldr	r3, [r4, #20]
   19064:	ldr	r0, [r3, r5, lsl #2]
   19068:	bl	19014 <__snprintf_chk@plt+0x6b48>
   1906c:	ldr	r3, [r4, #28]
   19070:	add	r5, r5, #1
   19074:	cmp	r3, r5
   19078:	bhi	19060 <__snprintf_chk@plt+0x6b94>
   1907c:	add	sp, sp, #12
   19080:	pop	{r4, r5, pc}
   19084:	str	r0, [sp]
   19088:	mov	r3, r1
   1908c:	mov	r2, ip
   19090:	ldr	r1, [pc, #12]	; 190a4 <__snprintf_chk@plt+0x6bd8>
   19094:	mov	r0, #1
   19098:	bl	12358 <__printf_chk@plt>
   1909c:	b	19050 <__snprintf_chk@plt+0x6b84>
   190a0:	andeq	ip, r1, r8, lsl #11
   190a4:	andeq	ip, r1, r4, asr r5
   190a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   190ac:	sub	sp, sp, #20
   190b0:	ldr	r7, [pc, #296]	; 191e0 <__snprintf_chk@plt+0x6d14>
   190b4:	cmp	r1, #2
   190b8:	mov	r5, r1
   190bc:	ldr	r3, [r7]
   190c0:	mov	r4, r0
   190c4:	mov	r8, r2
   190c8:	str	r3, [sp, #12]
   190cc:	beq	191c8 <__snprintf_chk@plt+0x6cfc>
   190d0:	cmp	r1, #3
   190d4:	beq	19190 <__snprintf_chk@plt+0x6cc4>
   190d8:	cmp	r1, #1
   190dc:	beq	1910c <__snprintf_chk@plt+0x6c40>
   190e0:	ldr	r2, [pc, #252]	; 191e4 <__snprintf_chk@plt+0x6d18>
   190e4:	ldr	r3, [pc, #252]	; 191e8 <__snprintf_chk@plt+0x6d1c>
   190e8:	ldr	r1, [r2, #64]	; 0x40
   190ec:	ldr	r0, [r3, #12]
   190f0:	bl	16304 <__snprintf_chk@plt+0x3e38>
   190f4:	ldr	r2, [sp, #12]
   190f8:	ldr	r3, [r7]
   190fc:	cmp	r2, r3
   19100:	bne	191dc <__snprintf_chk@plt+0x6d10>
   19104:	add	sp, sp, #20
   19108:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1910c:	ldr	r6, [pc, #216]	; 191ec <__snprintf_chk@plt+0x6d20>
   19110:	mov	r3, r1
   19114:	add	r9, sp, #4
   19118:	strb	r1, [sp, #3]
   1911c:	ldr	r0, [r4, #36]	; 0x24
   19120:	mov	r1, r9
   19124:	mov	r2, #1
   19128:	str	r3, [sp, #8]
   1912c:	str	r6, [sp, #4]
   19130:	bl	12088 <XtSetValues@plt>
   19134:	ldrb	r3, [sp, #3]
   19138:	mov	r0, r4
   1913c:	cmp	r3, #0
   19140:	beq	19188 <__snprintf_chk@plt+0x6cbc>
   19144:	bl	18a88 <__snprintf_chk@plt+0x65bc>
   19148:	cmp	r8, #0
   1914c:	beq	190f4 <__snprintf_chk@plt+0x6c28>
   19150:	ldr	r3, [r4, #28]
   19154:	cmp	r3, #0
   19158:	beq	190f4 <__snprintf_chk@plt+0x6c28>
   1915c:	mov	r6, #0
   19160:	ldr	r3, [r4, #20]
   19164:	mov	r2, r8
   19168:	mov	r1, r5
   1916c:	ldr	r0, [r3, r6, lsl #2]
   19170:	bl	190a8 <__snprintf_chk@plt+0x6bdc>
   19174:	ldr	r3, [r4, #28]
   19178:	add	r6, r6, #1
   1917c:	cmp	r3, r6
   19180:	bhi	19160 <__snprintf_chk@plt+0x6c94>
   19184:	b	190f4 <__snprintf_chk@plt+0x6c28>
   19188:	bl	189d8 <__snprintf_chk@plt+0x650c>
   1918c:	b	19148 <__snprintf_chk@plt+0x6c7c>
   19190:	ldr	r6, [pc, #84]	; 191ec <__snprintf_chk@plt+0x6d20>
   19194:	add	r9, sp, #4
   19198:	add	r3, sp, #3
   1919c:	mov	r1, r9
   191a0:	mov	r2, #1
   191a4:	ldr	r0, [r0, #36]	; 0x24
   191a8:	str	r3, [sp, #8]
   191ac:	str	r6, [sp, #4]
   191b0:	bl	120ac <XtGetValues@plt>
   191b4:	ldrb	r3, [sp, #3]
   191b8:	clz	r3, r3
   191bc:	lsr	r3, r3, #5
   191c0:	strb	r3, [sp, #3]
   191c4:	b	1911c <__snprintf_chk@plt+0x6c50>
   191c8:	mov	r3, #0
   191cc:	strb	r3, [sp, #3]
   191d0:	ldr	r6, [pc, #20]	; 191ec <__snprintf_chk@plt+0x6d20>
   191d4:	add	r9, sp, #4
   191d8:	b	1911c <__snprintf_chk@plt+0x6c50>
   191dc:	bl	120e8 <__stack_chk_fail@plt>
   191e0:	andeq	ip, r2, r0, lsl #31
   191e4:	andeq	lr, r2, r8, lsr #16
   191e8:	andeq	lr, r2, r8, lsl r8
   191ec:	andeq	fp, r1, r8, lsl #26
   191f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   191f4:	sub	sp, sp, #56	; 0x38
   191f8:	ldr	r7, [pc, #472]	; 193d8 <__snprintf_chk@plt+0x6f0c>
   191fc:	mov	r6, r1
   19200:	mov	r4, r0
   19204:	ldr	r3, [r7]
   19208:	mov	r8, r2
   1920c:	str	r3, [sp, #52]	; 0x34
   19210:	cmp	r1, #4
   19214:	ldrls	pc, [pc, r1, lsl #2]
   19218:	b	19370 <__snprintf_chk@plt+0x6ea4>
   1921c:	andeq	r9, r1, r4, ror #5
   19220:	strdeq	r9, [r1], -r8
   19224:	andeq	r9, r1, ip, lsl #6
   19228:	andeq	r9, r1, r8, asr #6
   1922c:	andeq	r9, r1, r0, lsr r2
   19230:	ldr	r9, [pc, #420]	; 193dc <__snprintf_chk@plt+0x6f10>
   19234:	add	r5, sp, #12
   19238:	add	r3, sp, #8
   1923c:	ldr	r0, [r0, #36]	; 0x24
   19240:	mov	r1, r5
   19244:	mov	r2, #1
   19248:	str	r9, [sp, #12]
   1924c:	str	r3, [sp, #16]
   19250:	bl	120ac <XtGetValues@plt>
   19254:	ldr	r0, [sp, #8]
   19258:	ldr	sl, [r4]
   1925c:	cmp	r0, #0
   19260:	beq	19388 <__snprintf_chk@plt+0x6ebc>
   19264:	mov	r1, sl
   19268:	bl	11fb0 <strcmp@plt>
   1926c:	cmp	r0, #0
   19270:	bne	19388 <__snprintf_chk@plt+0x6ebc>
   19274:	ldr	r3, [r4, #4]
   19278:	str	r9, [sp, #12]
   1927c:	str	r3, [sp, #16]
   19280:	mov	r1, r5
   19284:	mov	r2, #1
   19288:	ldr	r0, [r4, #36]	; 0x24
   1928c:	bl	12088 <XtSetValues@plt>
   19290:	cmp	r8, #0
   19294:	beq	192cc <__snprintf_chk@plt+0x6e00>
   19298:	ldr	r3, [r4, #28]
   1929c:	cmp	r3, #0
   192a0:	beq	192cc <__snprintf_chk@plt+0x6e00>
   192a4:	mov	r5, #0
   192a8:	ldr	r3, [r4, #20]
   192ac:	mov	r2, r8
   192b0:	mov	r1, r6
   192b4:	ldr	r0, [r3, r5, lsl #2]
   192b8:	bl	191f0 <__snprintf_chk@plt+0x6d24>
   192bc:	ldr	r3, [r4, #28]
   192c0:	add	r5, r5, #1
   192c4:	cmp	r3, r5
   192c8:	bhi	192a8 <__snprintf_chk@plt+0x6ddc>
   192cc:	ldr	r2, [sp, #52]	; 0x34
   192d0:	ldr	r3, [r7]
   192d4:	cmp	r2, r3
   192d8:	bne	193d4 <__snprintf_chk@plt+0x6f08>
   192dc:	add	sp, sp, #56	; 0x38
   192e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   192e4:	ldr	r2, [pc, #240]	; 193dc <__snprintf_chk@plt+0x6f10>
   192e8:	ldr	r3, [r0, #4]
   192ec:	add	r5, sp, #12
   192f0:	strd	r2, [sp, #12]
   192f4:	b	19280 <__snprintf_chk@plt+0x6db4>
   192f8:	ldr	r2, [pc, #220]	; 193dc <__snprintf_chk@plt+0x6f10>
   192fc:	ldr	r3, [r0]
   19300:	add	r5, sp, #12
   19304:	strd	r2, [sp, #12]
   19308:	b	19280 <__snprintf_chk@plt+0x6db4>
   1930c:	ldr	r1, [r0, #8]
   19310:	ldr	r2, [pc, #200]	; 193e0 <__snprintf_chk@plt+0x6f14>
   19314:	add	r5, sp, #20
   19318:	mov	r3, #30
   1931c:	str	r1, [sp, #4]
   19320:	str	r2, [sp]
   19324:	mov	r0, r5
   19328:	mov	r1, r3
   1932c:	mov	r2, #1
   19330:	bl	124cc <__snprintf_chk@plt>
   19334:	ldr	r3, [pc, #160]	; 193dc <__snprintf_chk@plt+0x6f10>
   19338:	str	r5, [sp, #16]
   1933c:	str	r3, [sp, #12]
   19340:	add	r5, sp, #12
   19344:	b	19280 <__snprintf_chk@plt+0x6db4>
   19348:	ldr	r2, [r0, #12]
   1934c:	cmp	r2, #0
   19350:	beq	19394 <__snprintf_chk@plt+0x6ec8>
   19354:	cmp	r2, #2
   19358:	beq	193b4 <__snprintf_chk@plt+0x6ee8>
   1935c:	ldr	r1, [pc, #128]	; 193e4 <__snprintf_chk@plt+0x6f18>
   19360:	add	r5, sp, #20
   19364:	mov	r3, #30
   19368:	stm	sp, {r1, r2}
   1936c:	b	19324 <__snprintf_chk@plt+0x6e58>
   19370:	ldr	r2, [pc, #112]	; 193e8 <__snprintf_chk@plt+0x6f1c>
   19374:	ldr	r3, [pc, #112]	; 193ec <__snprintf_chk@plt+0x6f20>
   19378:	ldr	r1, [r2, #128]	; 0x80
   1937c:	ldr	r0, [r3, #12]
   19380:	bl	16304 <__snprintf_chk@plt+0x3e38>
   19384:	b	192cc <__snprintf_chk@plt+0x6e00>
   19388:	str	r9, [sp, #12]
   1938c:	str	sl, [sp, #16]
   19390:	b	19280 <__snprintf_chk@plt+0x6db4>
   19394:	ldr	lr, [pc, #84]	; 193f0 <__snprintf_chk@plt+0x6f24>
   19398:	add	r5, sp, #20
   1939c:	mov	ip, r5
   193a0:	ldm	lr!, {r0, r1, r2, r3}
   193a4:	ldr	lr, [lr]
   193a8:	stmia	ip!, {r0, r1, r2, r3}
   193ac:	strh	lr, [ip]
   193b0:	b	19334 <__snprintf_chk@plt+0x6e68>
   193b4:	ldr	lr, [pc, #56]	; 193f4 <__snprintf_chk@plt+0x6f28>
   193b8:	add	r5, sp, #20
   193bc:	mov	ip, r5
   193c0:	ldm	lr!, {r0, r1, r2, r3}
   193c4:	ldr	lr, [lr]
   193c8:	stmia	ip!, {r0, r1, r2, r3}
   193cc:	str	lr, [ip]
   193d0:	b	19334 <__snprintf_chk@plt+0x6e68>
   193d4:	bl	120e8 <__stack_chk_fail@plt>
   193d8:	andeq	ip, r2, r0, lsl #31
   193dc:	andeq	sp, r2, sp, lsr r6
   193e0:			; <UNDEFINED> instruction: 0x0001c5bc
   193e4:	strdeq	ip, [r1], -r0
   193e8:	andeq	lr, r2, r8, lsr #16
   193ec:	andeq	lr, r2, r8, lsl r8
   193f0:	andeq	ip, r1, r8, asr #11
   193f4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   193f8:	push	{r4, r5, r6, lr}
   193fc:	subs	r4, r0, #0
   19400:	beq	1942c <__snprintf_chk@plt+0x6f60>
   19404:	ldm	r4, {r0, r6}
   19408:	mov	r5, r1
   1940c:	bl	17a24 <__snprintf_chk@plt+0x5558>
   19410:	mov	r0, r6
   19414:	mov	r1, r5
   19418:	mov	r2, #1
   1941c:	bl	191f0 <__snprintf_chk@plt+0x6d24>
   19420:	ldr	r0, [r4]
   19424:	pop	{r4, r5, r6, lr}
   19428:	b	17ac4 <__snprintf_chk@plt+0x55f8>
   1942c:	ldr	r2, [pc, #16]	; 19444 <__snprintf_chk@plt+0x6f78>
   19430:	ldr	r3, [pc, #16]	; 19448 <__snprintf_chk@plt+0x6f7c>
   19434:	pop	{r4, r5, r6, lr}
   19438:	ldr	r1, [r2, #68]	; 0x44
   1943c:	ldr	r0, [r3, #12]
   19440:	b	16304 <__snprintf_chk@plt+0x3e38>
   19444:	andeq	lr, r2, r8, lsr #16
   19448:	andeq	lr, r2, r8, lsl r8
   1944c:	push	{r4, r5, r6, r7, lr}
   19450:	sub	sp, sp, #20
   19454:	ldr	r7, [pc, #264]	; 19564 <__snprintf_chk@plt+0x7098>
   19458:	ldr	r3, [pc, #264]	; 19568 <__snprintf_chk@plt+0x709c>
   1945c:	cmp	r1, #7
   19460:	cmpne	r1, #4
   19464:	ldr	r2, [r7]
   19468:	mov	r4, r1
   1946c:	str	r2, [sp, #12]
   19470:	mov	r2, #1
   19474:	moveq	r5, #1
   19478:	movne	r5, #0
   1947c:	mov	r6, r0
   19480:	str	r3, [sp, #4]
   19484:	str	r2, [sp, #8]
   19488:	bne	194cc <__snprintf_chk@plt+0x7000>
   1948c:	ldr	r5, [r0, #16]
   19490:	cmp	r5, #0
   19494:	beq	194b4 <__snprintf_chk@plt+0x6fe8>
   19498:	add	r1, sp, #4
   1949c:	ldr	r0, [r5, #36]	; 0x24
   194a0:	bl	12088 <XtSetValues@plt>
   194a4:	mov	r0, r5
   194a8:	bl	18a88 <__snprintf_chk@plt+0x65bc>
   194ac:	cmp	r4, #7
   194b0:	beq	19550 <__snprintf_chk@plt+0x7084>
   194b4:	ldr	r2, [sp, #12]
   194b8:	ldr	r3, [r7]
   194bc:	cmp	r2, r3
   194c0:	bne	19560 <__snprintf_chk@plt+0x7094>
   194c4:	add	sp, sp, #20
   194c8:	pop	{r4, r5, r6, r7, pc}
   194cc:	sub	r3, r1, #5
   194d0:	cmp	r3, #1
   194d4:	bhi	19524 <__snprintf_chk@plt+0x7058>
   194d8:	ldr	r3, [r0, #28]
   194dc:	cmp	r3, #0
   194e0:	beq	194b4 <__snprintf_chk@plt+0x6fe8>
   194e4:	ldr	r3, [r6, #20]
   194e8:	ldr	r0, [r3, r5, lsl #2]
   194ec:	bl	18a88 <__snprintf_chk@plt+0x65bc>
   194f0:	ldr	r3, [r6, #20]
   194f4:	mov	r2, #1
   194f8:	add	r1, sp, #4
   194fc:	ldr	r3, [r3, r5, lsl #2]
   19500:	ldr	r0, [r3, #36]	; 0x24
   19504:	bl	12088 <XtSetValues@plt>
   19508:	cmp	r4, #6
   1950c:	beq	1953c <__snprintf_chk@plt+0x7070>
   19510:	ldr	r3, [r6, #28]
   19514:	add	r5, r5, #1
   19518:	cmp	r3, r5
   1951c:	bhi	194e4 <__snprintf_chk@plt+0x7018>
   19520:	b	194b4 <__snprintf_chk@plt+0x6fe8>
   19524:	ldr	r2, [pc, #64]	; 1956c <__snprintf_chk@plt+0x70a0>
   19528:	ldr	r3, [pc, #64]	; 19570 <__snprintf_chk@plt+0x70a4>
   1952c:	ldr	r1, [r2, #132]	; 0x84
   19530:	ldr	r0, [r3, #12]
   19534:	bl	16304 <__snprintf_chk@plt+0x3e38>
   19538:	b	194b4 <__snprintf_chk@plt+0x6fe8>
   1953c:	ldr	r3, [r6, #20]
   19540:	mov	r1, r4
   19544:	ldr	r0, [r3, r5, lsl #2]
   19548:	bl	1944c <__snprintf_chk@plt+0x6f80>
   1954c:	b	19510 <__snprintf_chk@plt+0x7044>
   19550:	mov	r1, r4
   19554:	mov	r0, r5
   19558:	bl	1944c <__snprintf_chk@plt+0x6f80>
   1955c:	b	194b4 <__snprintf_chk@plt+0x6fe8>
   19560:	bl	120e8 <__stack_chk_fail@plt>
   19564:	andeq	ip, r2, r0, lsl #31
   19568:	andeq	fp, r1, r8, lsl #26
   1956c:	andeq	lr, r2, r8, lsr #16
   19570:	andeq	lr, r2, r8, lsl r8
   19574:	push	{r4, r5, r6, r7, r8, lr}
   19578:	subs	r5, r0, #0
   1957c:	beq	19634 <__snprintf_chk@plt+0x7168>
   19580:	sub	r3, r1, #1
   19584:	cmp	r3, #2
   19588:	mov	r6, r1
   1958c:	bls	19624 <__snprintf_chk@plt+0x7158>
   19590:	ldr	r0, [r5, #12]
   19594:	cmp	r0, #0
   19598:	beq	1960c <__snprintf_chk@plt+0x7140>
   1959c:	lsl	r0, r0, #2
   195a0:	bl	12064 <XtMalloc@plt>
   195a4:	ldr	r3, [r5, #12]
   195a8:	cmp	r3, #0
   195ac:	mov	r7, r0
   195b0:	beq	19600 <__snprintf_chk@plt+0x7134>
   195b4:	sub	r0, r0, #4
   195b8:	mov	r4, r0
   195bc:	mov	r1, r0
   195c0:	mov	r3, #0
   195c4:	ldr	r2, [r5, #8]
   195c8:	ldr	r2, [r2, r3, lsl #2]
   195cc:	add	r3, r3, #1
   195d0:	str	r2, [r1, #4]!
   195d4:	ldr	r2, [r5, #12]
   195d8:	cmp	r3, r2
   195dc:	bcc	195c4 <__snprintf_chk@plt+0x70f8>
   195e0:	cmp	r2, #0
   195e4:	beq	19600 <__snprintf_chk@plt+0x7134>
   195e8:	add	r5, r0, r2, lsl #2
   195ec:	ldr	r0, [r4, #4]!
   195f0:	mov	r1, r6
   195f4:	bl	1944c <__snprintf_chk@plt+0x6f80>
   195f8:	cmp	r4, r5
   195fc:	bne	195ec <__snprintf_chk@plt+0x7120>
   19600:	mov	r0, r7
   19604:	pop	{r4, r5, r6, r7, r8, lr}
   19608:	b	12328 <XtFree@plt>
   1960c:	ldr	r2, [pc, #56]	; 1964c <__snprintf_chk@plt+0x7180>
   19610:	ldr	r3, [pc, #56]	; 19650 <__snprintf_chk@plt+0x7184>
   19614:	pop	{r4, r5, r6, r7, r8, lr}
   19618:	ldr	r1, [r2, #72]	; 0x48
   1961c:	ldr	r0, [r3, #12]
   19620:	b	16304 <__snprintf_chk@plt+0x3e38>
   19624:	ldr	r0, [r5, #4]
   19628:	mov	r2, #1
   1962c:	pop	{r4, r5, r6, r7, r8, lr}
   19630:	b	190a8 <__snprintf_chk@plt+0x6bdc>
   19634:	ldr	r2, [pc, #16]	; 1964c <__snprintf_chk@plt+0x7180>
   19638:	ldr	r3, [pc, #16]	; 19650 <__snprintf_chk@plt+0x7184>
   1963c:	pop	{r4, r5, r6, r7, r8, lr}
   19640:	ldr	r1, [r2, #68]	; 0x44
   19644:	ldr	r0, [r3, #12]
   19648:	b	16304 <__snprintf_chk@plt+0x3e38>
   1964c:	andeq	lr, r2, r8, lsr #16
   19650:	andeq	lr, r2, r8, lsl r8
   19654:	push	{r4, r5, r6, r7, r8, r9, lr}
   19658:	sub	sp, sp, #68	; 0x44
   1965c:	ldr	r4, [pc, #316]	; 197a0 <__snprintf_chk@plt+0x72d4>
   19660:	mov	r7, r0
   19664:	mov	r1, #2
   19668:	ldr	r3, [r4]
   1966c:	ldr	r0, [r0, #24]
   19670:	ldr	r8, [pc, #300]	; 197a4 <__snprintf_chk@plt+0x72d8>
   19674:	str	r3, [sp, #60]	; 0x3c
   19678:	bl	19574 <__snprintf_chk@plt+0x70a8>
   1967c:	mov	r0, r7
   19680:	mov	r2, #0
   19684:	mov	r1, #1
   19688:	bl	190a8 <__snprintf_chk@plt+0x6bdc>
   1968c:	ldr	r3, [r7, #24]
   19690:	sub	r9, r8, #636	; 0x27c
   19694:	add	r1, sp, #10
   19698:	add	r2, sp, #12
   1969c:	sub	r9, r9, #2
   196a0:	str	r1, [sp, #24]
   196a4:	str	r2, [sp, #32]
   196a8:	str	r8, [sp, #20]
   196ac:	str	r9, [sp, #28]
   196b0:	ldr	r0, [r3]
   196b4:	bl	12448 <XtParent@plt>
   196b8:	add	r1, sp, #20
   196bc:	mov	r2, #2
   196c0:	bl	120ac <XtGetValues@plt>
   196c4:	sub	r2, r8, #748	; 0x2ec
   196c8:	add	r3, sp, #14
   196cc:	str	r2, [sp, #36]	; 0x24
   196d0:	add	r2, sp, #16
   196d4:	str	r3, [sp, #24]
   196d8:	str	r2, [sp, #32]
   196dc:	add	r3, sp, #18
   196e0:	add	r2, sp, #6
   196e4:	add	r6, r8, #13
   196e8:	add	r5, r8, #15
   196ec:	add	r1, sp, #20
   196f0:	ldr	r0, [r7, #36]	; 0x24
   196f4:	str	r3, [sp, #40]	; 0x28
   196f8:	str	r2, [sp, #48]	; 0x30
   196fc:	add	r3, sp, #8
   19700:	mov	r2, #5
   19704:	str	r3, [sp, #56]	; 0x38
   19708:	str	r9, [sp, #28]
   1970c:	str	r8, [sp, #20]
   19710:	str	r6, [sp, #44]	; 0x2c
   19714:	str	r5, [sp, #52]	; 0x34
   19718:	bl	120ac <XtGetValues@plt>
   1971c:	ldrh	ip, [sp, #12]
   19720:	ldrh	r2, [sp, #10]
   19724:	ldrh	r3, [sp, #18]
   19728:	ldrh	r1, [sp, #16]
   1972c:	ldrh	r0, [sp, #14]
   19730:	rsb	r2, r3, r2, lsr #1
   19734:	rsb	r3, r3, ip, lsr #1
   19738:	sub	r3, r3, r1, lsr #1
   1973c:	ldrh	ip, [sp, #6]
   19740:	ldrh	r1, [sp, #8]
   19744:	sub	r2, r2, r0, lsr #1
   19748:	sub	r2, r2, ip
   1974c:	ldr	r0, [r7, #24]
   19750:	sub	r3, r3, r1
   19754:	sxth	r2, r2
   19758:	sxth	r3, r3
   1975c:	strh	r2, [sp, #6]
   19760:	str	r2, [sp, #24]
   19764:	strh	r3, [sp, #8]
   19768:	str	r3, [sp, #32]
   1976c:	str	r6, [sp, #20]
   19770:	str	r5, [sp, #28]
   19774:	mov	r2, #2
   19778:	add	r1, sp, #20
   1977c:	ldr	r0, [r0]
   19780:	bl	12088 <XtSetValues@plt>
   19784:	ldr	r2, [sp, #60]	; 0x3c
   19788:	ldr	r3, [r4]
   1978c:	cmp	r2, r3
   19790:	bne	1979c <__snprintf_chk@plt+0x72d0>
   19794:	add	sp, sp, #68	; 0x44
   19798:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1979c:	bl	120e8 <__stack_chk_fail@plt>
   197a0:	andeq	ip, r2, r0, lsl #31
   197a4:	strdeq	sp, [r2], -r8
   197a8:	push	{r4, r5, r6, r7, lr}
   197ac:	subs	r5, r1, #0
   197b0:	sub	sp, sp, #12
   197b4:	mov	r7, r0
   197b8:	mov	r6, r2
   197bc:	beq	197dc <__snprintf_chk@plt+0x7310>
   197c0:	mov	r4, #0
   197c4:	add	r4, r4, #1
   197c8:	mov	r1, r6
   197cc:	mov	r0, #9
   197d0:	bl	12400 <fputc@plt>
   197d4:	cmp	r5, r4
   197d8:	bne	197c4 <__snprintf_chk@plt+0x72f8>
   197dc:	ldrd	r2, [r7]
   197e0:	mov	r1, #1
   197e4:	mov	r0, r6
   197e8:	str	r2, [sp]
   197ec:	ldr	r2, [pc, #64]	; 19834 <__snprintf_chk@plt+0x7368>
   197f0:	bl	12370 <__fprintf_chk@plt>
   197f4:	ldr	r3, [r7, #28]
   197f8:	cmp	r3, #0
   197fc:	beq	1982c <__snprintf_chk@plt+0x7360>
   19800:	add	r5, r5, #1
   19804:	mov	r4, #0
   19808:	ldr	r3, [r7, #20]
   1980c:	mov	r2, r6
   19810:	mov	r1, r5
   19814:	ldr	r0, [r3, r4, lsl #2]
   19818:	bl	197a8 <__snprintf_chk@plt+0x72dc>
   1981c:	ldr	r3, [r7, #28]
   19820:	add	r4, r4, #1
   19824:	cmp	r3, r4
   19828:	bhi	19808 <__snprintf_chk@plt+0x733c>
   1982c:	add	sp, sp, #12
   19830:	pop	{r4, r5, r6, r7, pc}
   19834:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   19838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1983c:	mov	r7, r0
   19840:	ldr	r6, [pc, #72]	; 19890 <__snprintf_chk@plt+0x73c4>
   19844:	ldr	r5, [pc, #72]	; 19894 <__snprintf_chk@plt+0x73c8>
   19848:	add	r6, pc, r6
   1984c:	add	r5, pc, r5
   19850:	sub	r6, r6, r5
   19854:	mov	r8, r1
   19858:	mov	r9, r2
   1985c:	bl	11f30 <_init@@Base>
   19860:	asrs	r6, r6, #2
   19864:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19868:	mov	r4, #0
   1986c:	add	r4, r4, #1
   19870:	ldr	r3, [r5], #4
   19874:	mov	r2, r9
   19878:	mov	r1, r8
   1987c:	mov	r0, r7
   19880:	blx	r3
   19884:	cmp	r6, r4
   19888:	bne	1986c <__snprintf_chk@plt+0x73a0>
   1988c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19890:	andeq	r3, r1, ip, lsr #14
   19894:	andeq	r3, r1, r4, lsr #14
   19898:	bx	lr

Disassembly of section .fini:

0001989c <_fini@@Base>:
   1989c:	push	{r3, lr}
   198a0:	pop	{r3, pc}
