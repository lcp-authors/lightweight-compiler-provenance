
raspbian-preinstalled/xcompmgr:     file format elf32-littlearm


Disassembly of section .init:

00011324 <.init>:
   11324:	push	{r3, lr}
   11328:	bl	12f28 <__snprintf_chk@plt+0x1860>
   1132c:	pop	{r3, pc}

Disassembly of section .plt:

00011330 <XCompositeRedirectSubwindows@plt-0x14>:
   11330:	push	{lr}		; (str lr, [sp, #-4]!)
   11334:	ldr	lr, [pc, #4]	; 11340 <XCompositeRedirectSubwindows@plt-0x4>
   11338:	add	lr, pc, lr
   1133c:	ldr	pc, [lr, #8]!
   11340:	andeq	r4, r1, r0, asr #25

00011344 <XCompositeRedirectSubwindows@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #20, 20	; 0x14000
   1134c:	ldr	pc, [ip, #3264]!	; 0xcc0

00011350 <raise@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #20, 20	; 0x14000
   11358:	ldr	pc, [ip, #3256]!	; 0xcb8

0001135c <strtol@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #20, 20	; 0x14000
   11364:	ldr	pc, [ip, #3248]!	; 0xcb0

00011368 <XRenderComposite@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #20, 20	; 0x14000
   11370:	ldr	pc, [ip, #3240]!	; 0xca8

00011374 <XRenderCreatePicture@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #20, 20	; 0x14000
   1137c:	ldr	pc, [ip, #3232]!	; 0xca0

00011380 <free@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #20, 20	; 0x14000
   11388:	ldr	pc, [ip, #3224]!	; 0xc98

0001138c <XFixesQueryExtension@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #20, 20	; 0x14000
   11394:	ldr	pc, [ip, #3216]!	; 0xc90

00011398 <XFixesCreateRegionFromWindow@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #20, 20	; 0x14000
   113a0:	ldr	pc, [ip, #3208]!	; 0xc88

000113a4 <XQueryTree@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #20, 20	; 0x14000
   113ac:	ldr	pc, [ip, #3200]!	; 0xc80

000113b0 <__stack_chk_fail@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #20, 20	; 0x14000
   113b8:	ldr	pc, [ip, #3192]!	; 0xc78

000113bc <XFixesCopyRegion@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #20, 20	; 0x14000
   113c4:	ldr	pc, [ip, #3184]!	; 0xc70

000113c8 <XRenderQueryExtension@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #20, 20	; 0x14000
   113d0:	ldr	pc, [ip, #3176]!	; 0xc68

000113d4 <XFree@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #20, 20	; 0x14000
   113dc:	ldr	pc, [ip, #3168]!	; 0xc60

000113e0 <realloc@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #20, 20	; 0x14000
   113e8:	ldr	pc, [ip, #3160]!	; 0xc58

000113ec <XFreePixmap@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #20, 20	; 0x14000
   113f4:	ldr	pc, [ip, #3152]!	; 0xc50

000113f8 <XDamageCreate@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #20, 20	; 0x14000
   11400:	ldr	pc, [ip, #3144]!	; 0xc48

00011404 <poll@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #20, 20	; 0x14000
   1140c:	ldr	pc, [ip, #3136]!	; 0xc40

00011410 <fwrite@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #20, 20	; 0x14000
   11418:	ldr	pc, [ip, #3128]!	; 0xc38

0001141c <XDamageDestroy@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #20, 20	; 0x14000
   11424:	ldr	pc, [ip, #3120]!	; 0xc30

00011428 <gettimeofday@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #20, 20	; 0x14000
   11430:	ldr	pc, [ip, #3112]!	; 0xc28

00011434 <XmbTextPropertyToTextList@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #20, 20	; 0x14000
   1143c:	ldr	pc, [ip, #3104]!	; 0xc20

00011440 <XFreeStringList@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #20, 20	; 0x14000
   11448:	ldr	pc, [ip, #3096]!	; 0xc18

0001144c <XGetTextProperty@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #20, 20	; 0x14000
   11454:	ldr	pc, [ip, #3088]!	; 0xc10

00011458 <XFixesUnionRegion@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #20, 20	; 0x14000
   11460:	ldr	pc, [ip, #3080]!	; 0xc08

00011464 <malloc@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #20, 20	; 0x14000
   1146c:	ldr	pc, [ip, #3072]!	; 0xc00

00011470 <Xutf8SetWMProperties@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #20, 20	; 0x14000
   11478:	ldr	pc, [ip, #3064]!	; 0xbf8

0001147c <__libc_start_main@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #20, 20	; 0x14000
   11484:	ldr	pc, [ip, #3056]!	; 0xbf0

00011488 <XOpenDisplay@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #20, 20	; 0x14000
   11490:	ldr	pc, [ip, #3048]!	; 0xbe8

00011494 <XRenderFreePicture@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #20, 20	; 0x14000
   1149c:	ldr	pc, [ip, #3040]!	; 0xbe0

000114a0 <__gmon_start__@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #20, 20	; 0x14000
   114a8:	ldr	pc, [ip, #3032]!	; 0xbd8

000114ac <exit@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #20, 20	; 0x14000
   114b4:	ldr	pc, [ip, #3024]!	; 0xbd0

000114b8 <XCompositeNameWindowPixmap@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #20, 20	; 0x14000
   114c0:	ldr	pc, [ip, #3016]!	; 0xbc8

000114c4 <XFixesSubtractRegion@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #20, 20	; 0x14000
   114cc:	ldr	pc, [ip, #3008]!	; 0xbc0

000114d0 <XFixesIntersectRegion@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #20, 20	; 0x14000
   114d8:	ldr	pc, [ip, #3000]!	; 0xbb8

000114dc <XUngrabServer@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #20, 20	; 0x14000
   114e4:	ldr	pc, [ip, #2992]!	; 0xbb0

000114e8 <XGetSelectionOwner@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #20, 20	; 0x14000
   114f0:	ldr	pc, [ip, #2984]!	; 0xba8

000114f4 <getopt@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #20, 20	; 0x14000
   114fc:	ldr	pc, [ip, #2976]!	; 0xba0

00011500 <XSetErrorHandler@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #20, 20	; 0x14000
   11508:	ldr	pc, [ip, #2968]!	; 0xb98

0001150c <XQueryExtension@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #20, 20	; 0x14000
   11514:	ldr	pc, [ip, #2960]!	; 0xb90

00011518 <XNextEvent@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #20, 20	; 0x14000
   11520:	ldr	pc, [ip, #2952]!	; 0xb88

00011524 <XFixesDestroyRegion@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #20, 20	; 0x14000
   1152c:	ldr	pc, [ip, #2944]!	; 0xb80

00011530 <sqrt@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #20, 20	; 0x14000
   11538:	ldr	pc, [ip, #2936]!	; 0xb78

0001153c <XInternAtom@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #20, 20	; 0x14000
   11544:	ldr	pc, [ip, #2928]!	; 0xb70

00011548 <XRenderFindStandardFormat@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #20, 20	; 0x14000
   11550:	ldr	pc, [ip, #2920]!	; 0xb68

00011554 <XGetErrorText@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #20, 20	; 0x14000
   1155c:	ldr	pc, [ip, #2912]!	; 0xb60

00011560 <memset@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #20, 20	; 0x14000
   11568:	ldr	pc, [ip, #2904]!	; 0xb58

0001156c <XSync@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #20, 20	; 0x14000
   11574:	ldr	pc, [ip, #2896]!	; 0xb50

00011578 <XSelectInput@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #20, 20	; 0x14000
   11580:	ldr	pc, [ip, #2888]!	; 0xb48

00011584 <strtod@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #20, 20	; 0x14000
   1158c:	ldr	pc, [ip, #2880]!	; 0xb40

00011590 <XGrabServer@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #20, 20	; 0x14000
   11598:	ldr	pc, [ip, #2872]!	; 0xb38

0001159c <XRenderFindVisualFormat@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #20, 20	; 0x14000
   115a4:	ldr	pc, [ip, #2864]!	; 0xb30

000115a8 <XSetSelectionOwner@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #20, 20	; 0x14000
   115b0:	ldr	pc, [ip, #2856]!	; 0xb28

000115b4 <XFixesCreateRegion@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #20, 20	; 0x14000
   115bc:	ldr	pc, [ip, #2848]!	; 0xb20

000115c0 <__fprintf_chk@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #20, 20	; 0x14000
   115c8:	ldr	pc, [ip, #2840]!	; 0xb18

000115cc <XDamageSubtract@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #20, 20	; 0x14000
   115d4:	ldr	pc, [ip, #2832]!	; 0xb10

000115d8 <XRenderFillRectangle@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #20, 20	; 0x14000
   115e0:	ldr	pc, [ip, #2824]!	; 0xb08

000115e4 <XCreateGC@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #20, 20	; 0x14000
   115ec:	ldr	pc, [ip, #2816]!	; 0xb00

000115f0 <XShapeQueryExtension@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #20, 20	; 0x14000
   115f8:	ldr	pc, [ip, #2808]!	; 0xaf8

000115fc <XCreateSimpleWindow@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #20, 20	; 0x14000
   11604:	ldr	pc, [ip, #2800]!	; 0xaf0

00011608 <XFixesSetPictureClipRegion@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #20, 20	; 0x14000
   11610:	ldr	pc, [ip, #2792]!	; 0xae8

00011614 <XSynchronize@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #20, 20	; 0x14000
   1161c:	ldr	pc, [ip, #2784]!	; 0xae0

00011620 <XFixesTranslateRegion@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #20, 20	; 0x14000
   11628:	ldr	pc, [ip, #2776]!	; 0xad8

0001162c <XClearArea@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #20, 20	; 0x14000
   11634:	ldr	pc, [ip, #2768]!	; 0xad0

00011638 <XFlush@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #20, 20	; 0x14000
   11640:	ldr	pc, [ip, #2760]!	; 0xac8

00011644 <XGetWindowAttributes@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #20, 20	; 0x14000
   1164c:	ldr	pc, [ip, #2752]!	; 0xac0

00011650 <XPutImage@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #20, 20	; 0x14000
   11658:	ldr	pc, [ip, #2744]!	; 0xab8

0001165c <exp@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #20, 20	; 0x14000
   11664:	ldr	pc, [ip, #2736]!	; 0xab0

00011668 <XCompositeQueryVersion@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #20, 20	; 0x14000
   11670:	ldr	pc, [ip, #2728]!	; 0xaa8

00011674 <XFreeGC@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #20, 20	; 0x14000
   1167c:	ldr	pc, [ip, #2720]!	; 0xaa0

00011680 <XGetWindowProperty@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #20, 20	; 0x14000
   11688:	ldr	pc, [ip, #2712]!	; 0xa98

0001168c <XShapeSelectInput@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #20, 20	; 0x14000
   11694:	ldr	pc, [ip, #2704]!	; 0xa90

00011698 <XDamageQueryExtension@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #20, 20	; 0x14000
   116a0:	ldr	pc, [ip, #2696]!	; 0xa88

000116a4 <XCreateImage@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #20, 20	; 0x14000
   116ac:	ldr	pc, [ip, #2688]!	; 0xa80

000116b0 <XCreatePixmap@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #20, 20	; 0x14000
   116b8:	ldr	pc, [ip, #2680]!	; 0xa78

000116bc <abort@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #20, 20	; 0x14000
   116c4:	ldr	pc, [ip, #2672]!	; 0xa70

000116c8 <__snprintf_chk@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #20, 20	; 0x14000
   116d0:	ldr	pc, [ip, #2664]!	; 0xa68

Disassembly of section .text:

000116d8 <.text>:
   116d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116dc:	vpush	{d8-d15}
   116e0:	ldr	r3, [pc, #2616]	; 12120 <__snprintf_chk@plt+0xa58>
   116e4:	ldr	r5, [pc, #2616]	; 12124 <__snprintf_chk@plt+0xa5c>
   116e8:	ldr	r8, [pc, #2616]	; 12128 <__snprintf_chk@plt+0xa60>
   116ec:	ldr	sl, [pc, #2616]	; 1212c <__snprintf_chk@plt+0xa64>
   116f0:	ldr	fp, [pc, #2616]	; 12130 <__snprintf_chk@plt+0xa68>
   116f4:	sub	sp, sp, #284	; 0x11c
   116f8:	ldr	r3, [r3]
   116fc:	mov	r6, r0
   11700:	mov	r4, r1
   11704:	mov	r9, #0
   11708:	str	r3, [sp, #276]	; 0x114
   1170c:	mov	r2, r5
   11710:	mov	r1, r4
   11714:	mov	r0, r6
   11718:	bl	114f4 <getopt@plt>
   1171c:	cmn	r0, #1
   11720:	beq	117fc <__snprintf_chk@plt+0x134>
   11724:	sub	r0, r0, #67	; 0x43
   11728:	cmp	r0, #49	; 0x31
   1172c:	ldrls	pc, [pc, r0, lsl #2]
   11730:	b	11a0c <__snprintf_chk@plt+0x344>
   11734:	andeq	r1, r1, r0, lsl #20
   11738:	ldrdeq	r1, [r1], -r4
   1173c:	andeq	r1, r1, ip, lsl #20
   11740:	andeq	r1, r1, r8, asr #19
   11744:	andeq	r1, r1, ip, lsl #20
   11748:	andeq	r1, r1, ip, lsl #20
   1174c:	andeq	r1, r1, r0, lsr #19
   11750:	andeq	r1, r1, ip, lsl #20
   11754:	andeq	r1, r1, ip, lsl #20
   11758:	andeq	r1, r1, ip, lsl #20
   1175c:	andeq	r1, r1, ip, lsl #20
   11760:	andeq	r1, r1, ip, lsl #20
   11764:	andeq	r1, r1, r8, ror r9
   11768:	andeq	r1, r1, ip, lsl #20
   1176c:	andeq	r1, r1, ip, lsl #20
   11770:	andeq	r1, r1, ip, ror #18
   11774:	andeq	r1, r1, r0, ror #18
   11778:	andeq	r1, r1, ip, lsl #20
   1177c:	andeq	r1, r1, ip, lsl #20
   11780:	andeq	r1, r1, ip, lsl #20
   11784:	andeq	r1, r1, ip, lsl #20
   11788:	andeq	r1, r1, ip, lsl #20
   1178c:	andeq	r1, r1, ip, lsl #20
   11790:	andeq	r1, r1, ip, lsl #20
   11794:	andeq	r1, r1, ip, lsl #20
   11798:	andeq	r1, r1, ip, lsl #20
   1179c:	andeq	r1, r1, ip, lsl #20
   117a0:	andeq	r1, r1, ip, lsl #20
   117a4:	andeq	r1, r1, ip, lsl #20
   117a8:	andeq	r1, r1, ip, lsl #20
   117ac:	andeq	r1, r1, r4, asr r9
   117b0:	andeq	r1, r1, ip, lsl #20
   117b4:	andeq	r1, r1, r8, asr #18
   117b8:	andeq	r1, r1, ip, lsr r9
   117bc:	andeq	r1, r1, ip, lsl #20
   117c0:	andeq	r1, r1, r0, lsr r9
   117c4:	andeq	r1, r1, ip, lsl #20
   117c8:	andeq	r1, r1, ip, lsl #20
   117cc:	andeq	r1, r1, ip, lsl #20
   117d0:	andeq	r1, r1, ip, lsl #20
   117d4:	andeq	r1, r1, ip, lsl #20
   117d8:	andeq	r1, r1, r0, lsl r9
   117dc:	andeq	r1, r1, ip, lsl #20
   117e0:	andeq	r1, r1, r4, lsl #18
   117e4:	andeq	r1, r1, r8, ror #17
   117e8:	andeq	r1, r1, ip, lsl #20
   117ec:	andeq	r1, r1, ip, lsl #20
   117f0:	andeq	r1, r1, r8, asr #17
   117f4:			; <UNDEFINED> instruction: 0x000118bc
   117f8:	muleq	r1, ip, r8
   117fc:	mov	r0, r9
   11800:	bl	11488 <XOpenDisplay@plt>
   11804:	subs	r4, r0, #0
   11808:	beq	11a74 <__snprintf_chk@plt+0x3ac>
   1180c:	ldr	r5, [pc, #2324]	; 12128 <__snprintf_chk@plt+0xa60>
   11810:	ldr	r0, [pc, #2332]	; 12134 <__snprintf_chk@plt+0xa6c>
   11814:	bl	11500 <XSetErrorHandler@plt>
   11818:	ldr	r3, [r5, #388]	; 0x184
   1181c:	cmp	r3, #0
   11820:	bne	11a94 <__snprintf_chk@plt+0x3cc>
   11824:	ldr	r3, [r4, #132]	; 0x84
   11828:	ldr	r2, [r4, #140]	; 0x8c
   1182c:	mov	r1, #80	; 0x50
   11830:	str	r3, [r5, #340]	; 0x154
   11834:	mla	r3, r1, r3, r2
   11838:	ldr	r2, [pc, #2296]	; 12138 <__snprintf_chk@plt+0xa70>
   1183c:	mov	r0, r4
   11840:	ldr	r3, [r3, #8]
   11844:	add	r1, r2, #104	; 0x68
   11848:	str	r3, [r5, #324]	; 0x144
   1184c:	bl	113c8 <XRenderQueryExtension@plt>
   11850:	cmp	r0, #0
   11854:	beq	11a54 <__snprintf_chk@plt+0x38c>
   11858:	ldr	r2, [pc, #2268]	; 1213c <__snprintf_chk@plt+0xa74>
   1185c:	ldr	r1, [pc, #2268]	; 12140 <__snprintf_chk@plt+0xa78>
   11860:	str	r2, [sp]
   11864:	sub	r3, r2, #4
   11868:	mov	r0, r4
   1186c:	sub	r2, r2, #120	; 0x78
   11870:	bl	1150c <XQueryExtension@plt>
   11874:	cmp	r0, #0
   11878:	bne	11aa4 <__snprintf_chk@plt+0x3dc>
   1187c:	ldr	r3, [pc, #2380]	; 121d0 <__snprintf_chk@plt+0xb08>
   11880:	mov	r2, #23
   11884:	mov	r1, #1
   11888:	ldr	r3, [r3]
   1188c:	ldr	r0, [pc, #2224]	; 12144 <__snprintf_chk@plt+0xa7c>
   11890:	bl	11410 <fwrite@plt>
   11894:	mov	r0, #1
   11898:	bl	114ac <exit@plt>
   1189c:	ldr	r3, [pc, #2212]	; 12148 <__snprintf_chk@plt+0xa80>
   118a0:	mov	r2, #10
   118a4:	mov	r1, #0
   118a8:	ldr	r0, [r3]
   118ac:	bl	1135c <strtol@plt>
   118b0:	ldr	r7, [pc, #2196]	; 1214c <__snprintf_chk@plt+0xa84>
   118b4:	str	r0, [r7, #8]
   118b8:	b	1170c <__snprintf_chk@plt+0x44>
   118bc:	mov	r3, #1
   118c0:	str	r3, [r8, #300]	; 0x12c
   118c4:	b	1170c <__snprintf_chk@plt+0x44>
   118c8:	ldr	r3, [pc, #2168]	; 12148 <__snprintf_chk@plt+0xa80>
   118cc:	mov	r2, #10
   118d0:	mov	r1, #0
   118d4:	ldr	r0, [r3]
   118d8:	bl	1135c <strtol@plt>
   118dc:	ldr	r7, [pc, #2152]	; 1214c <__snprintf_chk@plt+0xa84>
   118e0:	str	r0, [r7, #48]	; 0x30
   118e4:	b	1170c <__snprintf_chk@plt+0x44>
   118e8:	ldr	r3, [pc, #2136]	; 12148 <__snprintf_chk@plt+0xa80>
   118ec:	mov	r1, #0
   118f0:	ldr	r7, [pc, #2132]	; 1214c <__snprintf_chk@plt+0xa84>
   118f4:	ldr	r0, [r3]
   118f8:	bl	11584 <strtod@plt>
   118fc:	vstr	d0, [r7, #16]
   11900:	b	1170c <__snprintf_chk@plt+0x44>
   11904:	mov	r3, #0
   11908:	str	r3, [r8, #300]	; 0x12c
   1190c:	b	1170c <__snprintf_chk@plt+0x44>
   11910:	ldr	r3, [pc, #2096]	; 12148 <__snprintf_chk@plt+0xa80>
   11914:	mov	r2, #10
   11918:	mov	r1, #0
   1191c:	ldr	r0, [r3]
   11920:	bl	1135c <strtol@plt>
   11924:	ldr	r7, [pc, #2080]	; 1214c <__snprintf_chk@plt+0xa84>
   11928:	str	r0, [r7, #4]
   1192c:	b	1170c <__snprintf_chk@plt+0x44>
   11930:	mov	r3, #1
   11934:	str	r3, [r8, #372]	; 0x174
   11938:	b	1170c <__snprintf_chk@plt+0x44>
   1193c:	ldr	r3, [pc, #2052]	; 12148 <__snprintf_chk@plt+0xa80>
   11940:	ldr	r9, [r3]
   11944:	b	1170c <__snprintf_chk@plt+0x44>
   11948:	mov	r3, #2
   1194c:	str	r3, [r8, #300]	; 0x12c
   11950:	b	1170c <__snprintf_chk@plt+0x44>
   11954:	mov	r3, #1
   11958:	str	r3, [r8, #384]	; 0x180
   1195c:	b	1170c <__snprintf_chk@plt+0x44>
   11960:	mov	r3, #1
   11964:	str	r3, [r8, #388]	; 0x184
   11968:	b	1170c <__snprintf_chk@plt+0x44>
   1196c:	mov	r3, #1
   11970:	str	r3, [r8, #392]	; 0x188
   11974:	b	1170c <__snprintf_chk@plt+0x44>
   11978:	ldr	r3, [pc, #1992]	; 12148 <__snprintf_chk@plt+0xa80>
   1197c:	mov	r1, #0
   11980:	ldr	r7, [pc, #1988]	; 1214c <__snprintf_chk@plt+0xa84>
   11984:	ldr	r0, [r3]
   11988:	bl	11584 <strtod@plt>
   1198c:	vcmpe.f64	d0, #0.0
   11990:	vmrs	APSR_nzcv, fpscr
   11994:	vstrhi	d0, [r7, #32]
   11998:	strdls	sl, [r7, #32]
   1199c:	b	1170c <__snprintf_chk@plt+0x44>
   119a0:	ldr	r3, [pc, #1952]	; 12148 <__snprintf_chk@plt+0xa80>
   119a4:	mov	r1, #0
   119a8:	ldr	r7, [pc, #1948]	; 1214c <__snprintf_chk@plt+0xa84>
   119ac:	ldr	r0, [r3]
   119b0:	bl	11584 <strtod@plt>
   119b4:	vcmpe.f64	d0, #0.0
   119b8:	vmrs	APSR_nzcv, fpscr
   119bc:	vstrhi	d0, [r7, #40]	; 0x28
   119c0:	strdls	sl, [r7, #40]	; 0x28
   119c4:	b	1170c <__snprintf_chk@plt+0x44>
   119c8:	mov	r3, #1
   119cc:	str	r3, [r8, #380]	; 0x17c
   119d0:	b	1170c <__snprintf_chk@plt+0x44>
   119d4:	ldr	r3, [pc, #1900]	; 12148 <__snprintf_chk@plt+0xa80>
   119d8:	mov	r2, #10
   119dc:	mov	r1, #0
   119e0:	ldr	r0, [r3]
   119e4:	bl	1135c <strtol@plt>
   119e8:	ldr	r7, [pc, #1884]	; 1214c <__snprintf_chk@plt+0xa84>
   119ec:	cmp	r0, #0
   119f0:	movle	r3, #10
   119f4:	strle	r3, [r7, #28]
   119f8:	strgt	r0, [r7, #28]
   119fc:	b	1170c <__snprintf_chk@plt+0x44>
   11a00:	mov	r3, #1
   11a04:	str	r3, [r8, #308]	; 0x134
   11a08:	b	1170c <__snprintf_chk@plt+0x44>
   11a0c:	ldr	r5, [pc, #1980]	; 121d0 <__snprintf_chk@plt+0xb08>
   11a10:	ldr	r4, [r4]
   11a14:	ldr	r2, [pc, #1844]	; 12150 <__snprintf_chk@plt+0xa88>
   11a18:	mov	r3, r4
   11a1c:	ldr	r0, [r5]
   11a20:	mov	r1, #1
   11a24:	str	r2, [sp]
   11a28:	ldr	r2, [pc, #1828]	; 12154 <__snprintf_chk@plt+0xa8c>
   11a2c:	bl	115c0 <__fprintf_chk@plt>
   11a30:	ldr	r2, [pc, #1824]	; 12158 <__snprintf_chk@plt+0xa90>
   11a34:	ldr	r0, [r5]
   11a38:	mov	r3, r4
   11a3c:	str	r2, [sp]
   11a40:	mov	r1, #1
   11a44:	ldr	r2, [pc, #1808]	; 1215c <__snprintf_chk@plt+0xa94>
   11a48:	bl	115c0 <__fprintf_chk@plt>
   11a4c:	mov	r0, #1
   11a50:	bl	114ac <exit@plt>
   11a54:	ldr	r3, [pc, #1908]	; 121d0 <__snprintf_chk@plt+0xb08>
   11a58:	mov	r2, #20
   11a5c:	mov	r1, #1
   11a60:	ldr	r3, [r3]
   11a64:	ldr	r0, [pc, #1780]	; 12160 <__snprintf_chk@plt+0xa98>
   11a68:	bl	11410 <fwrite@plt>
   11a6c:	mov	r0, #1
   11a70:	bl	114ac <exit@plt>
   11a74:	ldr	r3, [pc, #1876]	; 121d0 <__snprintf_chk@plt+0xb08>
   11a78:	mov	r2, #19
   11a7c:	mov	r1, #1
   11a80:	ldr	r3, [r3]
   11a84:	ldr	r0, [pc, #1752]	; 12164 <__snprintf_chk@plt+0xa9c>
   11a88:	bl	11410 <fwrite@plt>
   11a8c:	mov	r0, #1
   11a90:	bl	114ac <exit@plt>
   11a94:	mov	r1, #1
   11a98:	mov	r0, r4
   11a9c:	bl	11614 <XSynchronize@plt>
   11aa0:	b	11824 <__snprintf_chk@plt+0x15c>
   11aa4:	add	r2, sp, #108	; 0x6c
   11aa8:	add	r1, sp, #104	; 0x68
   11aac:	mov	r0, r4
   11ab0:	bl	11668 <XCompositeQueryVersion@plt>
   11ab4:	ldr	r3, [sp, #104]	; 0x68
   11ab8:	cmp	r3, #0
   11abc:	ble	11b38 <__snprintf_chk@plt+0x470>
   11ac0:	mov	r3, #1
   11ac4:	str	r3, [r5, #348]	; 0x15c
   11ac8:	ldr	r2, [pc, #1688]	; 12168 <__snprintf_chk@plt+0xaa0>
   11acc:	mov	r0, r4
   11ad0:	add	r1, r2, #120	; 0x78
   11ad4:	bl	11698 <XDamageQueryExtension@plt>
   11ad8:	cmp	r0, #0
   11adc:	beq	11b18 <__snprintf_chk@plt+0x450>
   11ae0:	ldr	r2, [pc, #1668]	; 1216c <__snprintf_chk@plt+0xaa4>
   11ae4:	mov	r0, r4
   11ae8:	add	r1, r2, #116	; 0x74
   11aec:	bl	1138c <XFixesQueryExtension@plt>
   11af0:	cmp	r0, #0
   11af4:	bne	11b48 <__snprintf_chk@plt+0x480>
   11af8:	ldr	r3, [pc, #1744]	; 121d0 <__snprintf_chk@plt+0xb08>
   11afc:	mov	r2, #20
   11b00:	mov	r1, #1
   11b04:	ldr	r3, [r3]
   11b08:	ldr	r0, [pc, #1632]	; 12170 <__snprintf_chk@plt+0xaa8>
   11b0c:	bl	11410 <fwrite@plt>
   11b10:	mov	r0, #1
   11b14:	bl	114ac <exit@plt>
   11b18:	ldr	r3, [pc, #1712]	; 121d0 <__snprintf_chk@plt+0xb08>
   11b1c:	mov	r2, #20
   11b20:	mov	r1, #1
   11b24:	ldr	r3, [r3]
   11b28:	ldr	r0, [pc, #1604]	; 12174 <__snprintf_chk@plt+0xaac>
   11b2c:	bl	11410 <fwrite@plt>
   11b30:	mov	r0, #1
   11b34:	bl	114ac <exit@plt>
   11b38:	ldr	r3, [sp, #108]	; 0x6c
   11b3c:	cmp	r3, #1
   11b40:	bgt	11ac0 <__snprintf_chk@plt+0x3f8>
   11b44:	b	11ac8 <__snprintf_chk@plt+0x400>
   11b48:	ldr	r2, [pc, #1576]	; 12178 <__snprintf_chk@plt+0xab0>
   11b4c:	mov	r0, r4
   11b50:	add	r1, r2, #4
   11b54:	bl	115f0 <XShapeQueryExtension@plt>
   11b58:	cmp	r0, #0
   11b5c:	beq	12a64 <__snprintf_chk@plt+0x139c>
   11b60:	ldr	r7, [r5, #392]	; 0x188
   11b64:	cmp	r7, #0
   11b68:	bne	11ca4 <__snprintf_chk@plt+0x5dc>
   11b6c:	ldr	r1, [r5, #340]	; 0x154
   11b70:	ldr	r2, [pc, #1540]	; 1217c <__snprintf_chk@plt+0xab4>
   11b74:	mov	r3, #15
   11b78:	str	r1, [sp, #4]
   11b7c:	str	r2, [sp]
   11b80:	mov	r1, r3
   11b84:	mov	r2, #1
   11b88:	ldr	r0, [pc, #1520]	; 12180 <__snprintf_chk@plt+0xab8>
   11b8c:	bl	116c8 <__snprintf_chk@plt>
   11b90:	mov	r2, r7
   11b94:	ldr	r1, [pc, #1508]	; 12180 <__snprintf_chk@plt+0xab8>
   11b98:	mov	r0, r4
   11b9c:	bl	1153c <XInternAtom@plt>
   11ba0:	mov	r1, r0
   11ba4:	mov	r8, r0
   11ba8:	mov	r0, r4
   11bac:	bl	114e8 <XGetSelectionOwner@plt>
   11bb0:	subs	r6, r0, #0
   11bb4:	beq	11c2c <__snprintf_chk@plt+0x564>
   11bb8:	mov	r2, r7
   11bbc:	ldr	r1, [pc, #1472]	; 12184 <__snprintf_chk@plt+0xabc>
   11bc0:	mov	r0, r4
   11bc4:	bl	1153c <XInternAtom@plt>
   11bc8:	add	r2, sp, #128	; 0x80
   11bcc:	mov	r1, r6
   11bd0:	mov	r3, r0
   11bd4:	mov	r0, r4
   11bd8:	bl	1144c <XGetTextProperty@plt>
   11bdc:	cmp	r0, #0
   11be0:	bne	11c00 <__snprintf_chk@plt+0x538>
   11be4:	mov	r3, #39	; 0x27
   11be8:	add	r2, sp, #128	; 0x80
   11bec:	mov	r1, r6
   11bf0:	mov	r0, r4
   11bf4:	bl	1144c <XGetTextProperty@plt>
   11bf8:	cmp	r0, #0
   11bfc:	beq	12a84 <__snprintf_chk@plt+0x13bc>
   11c00:	add	r1, sp, #128	; 0x80
   11c04:	mov	r0, r4
   11c08:	add	r3, sp, #120	; 0x78
   11c0c:	add	r2, sp, #112	; 0x70
   11c10:	bl	11434 <XmbTextPropertyToTextList@plt>
   11c14:	cmp	r0, #0
   11c18:	beq	12aa0 <__snprintf_chk@plt+0x13d8>
   11c1c:	ldr	r0, [sp, #128]	; 0x80
   11c20:	bl	113d4 <XFree@plt>
   11c24:	mov	r0, #1
   11c28:	bl	114ac <exit@plt>
   11c2c:	ldr	r2, [r5, #340]	; 0x154
   11c30:	ldr	r1, [r4, #140]	; 0x8c
   11c34:	mov	r0, #80	; 0x50
   11c38:	mov	r3, #1
   11c3c:	mla	r2, r0, r2, r1
   11c40:	stmib	sp, {r3, r6}
   11c44:	str	r3, [sp]
   11c48:	str	r6, [sp, #16]
   11c4c:	str	r6, [sp, #12]
   11c50:	mov	r3, r6
   11c54:	ldr	r1, [r2, #8]
   11c58:	mov	r0, r4
   11c5c:	mov	r2, r6
   11c60:	bl	115fc <XCreateSimpleWindow@plt>
   11c64:	ldr	r3, [pc, #1308]	; 12188 <__snprintf_chk@plt+0xac0>
   11c68:	str	r6, [sp, #16]
   11c6c:	mov	r2, r3
   11c70:	str	r6, [sp, #12]
   11c74:	str	r6, [sp, #8]
   11c78:	str	r6, [sp, #4]
   11c7c:	str	r6, [sp]
   11c80:	mov	r1, r0
   11c84:	mov	r7, r0
   11c88:	mov	r0, r4
   11c8c:	bl	11470 <Xutf8SetWMProperties@plt>
   11c90:	mov	r3, r6
   11c94:	mov	r2, r7
   11c98:	mov	r1, r8
   11c9c:	mov	r0, r4
   11ca0:	bl	115a8 <XSetSelectionOwner@plt>
   11ca4:	mov	r2, #0
   11ca8:	ldr	r1, [pc, #1244]	; 1218c <__snprintf_chk@plt+0xac4>
   11cac:	mov	r0, r4
   11cb0:	bl	1153c <XInternAtom@plt>
   11cb4:	mov	r2, #0
   11cb8:	ldr	r1, [pc, #1232]	; 12190 <__snprintf_chk@plt+0xac8>
   11cbc:	ldr	sl, [pc, #1160]	; 1214c <__snprintf_chk@plt+0xa84>
   11cc0:	str	r0, [r5, #376]	; 0x178
   11cc4:	mov	r0, r4
   11cc8:	bl	1153c <XInternAtom@plt>
   11ccc:	mov	r2, #0
   11cd0:	ldr	r1, [pc, #1212]	; 12194 <__snprintf_chk@plt+0xacc>
   11cd4:	str	r0, [r5, #8]
   11cd8:	mov	r0, r4
   11cdc:	bl	1153c <XInternAtom@plt>
   11ce0:	mov	r2, #0
   11ce4:	ldr	r1, [pc, #1196]	; 12198 <__snprintf_chk@plt+0xad0>
   11ce8:	str	r0, [r5, #356]	; 0x164
   11cec:	mov	r0, r4
   11cf0:	bl	1153c <XInternAtom@plt>
   11cf4:	mov	r2, #0
   11cf8:	ldr	r1, [pc, #1180]	; 1219c <__snprintf_chk@plt+0xad4>
   11cfc:	str	r0, [r5, #304]	; 0x130
   11d00:	mov	r0, r4
   11d04:	bl	1153c <XInternAtom@plt>
   11d08:	mov	r2, #0
   11d0c:	ldr	r1, [pc, #1164]	; 121a0 <__snprintf_chk@plt+0xad8>
   11d10:	mov	r0, r4
   11d14:	bl	1153c <XInternAtom@plt>
   11d18:	mov	r2, #0
   11d1c:	ldr	r1, [pc, #1152]	; 121a4 <__snprintf_chk@plt+0xadc>
   11d20:	mov	r0, r4
   11d24:	bl	1153c <XInternAtom@plt>
   11d28:	mov	r2, #0
   11d2c:	ldr	r1, [pc, #1140]	; 121a8 <__snprintf_chk@plt+0xae0>
   11d30:	mov	r0, r4
   11d34:	bl	1153c <XInternAtom@plt>
   11d38:	mov	r2, #0
   11d3c:	ldr	r1, [pc, #1128]	; 121ac <__snprintf_chk@plt+0xae4>
   11d40:	mov	r0, r4
   11d44:	bl	1153c <XInternAtom@plt>
   11d48:	mov	r2, #0
   11d4c:	ldr	r1, [pc, #1116]	; 121b0 <__snprintf_chk@plt+0xae8>
   11d50:	mov	r0, r4
   11d54:	bl	1153c <XInternAtom@plt>
   11d58:	ldr	r2, [r5, #300]	; 0x12c
   11d5c:	mov	r3, #1
   11d60:	cmp	r2, #2
   11d64:	str	r3, [sp, #160]	; 0xa0
   11d68:	str	r0, [r5, #12]
   11d6c:	beq	12b0c <__snprintf_chk@plt+0x1444>
   11d70:	ldr	r3, [r5, #340]	; 0x154
   11d74:	ldr	r2, [r4, #140]	; 0x8c
   11d78:	mov	r1, #80	; 0x50
   11d7c:	mov	r0, r4
   11d80:	mla	r3, r1, r3, r2
   11d84:	ldr	r6, [r5, #324]	; 0x144
   11d88:	ldr	ip, [r3, #12]
   11d8c:	ldr	r2, [r3, #16]
   11d90:	ldr	r1, [r3, #40]	; 0x28
   11d94:	str	ip, [r5, #328]	; 0x148
   11d98:	str	r2, [r5, #332]	; 0x14c
   11d9c:	bl	1159c <XRenderFindVisualFormat@plt>
   11da0:	add	r3, sp, #128	; 0x80
   11da4:	mov	r1, r6
   11da8:	str	r3, [sp]
   11dac:	mov	r3, #256	; 0x100
   11db0:	mov	r2, r0
   11db4:	mov	r0, r4
   11db8:	bl	11374 <XRenderCreatePicture@plt>
   11dbc:	mov	r1, #1
   11dc0:	vldr	d0, [pc, #832]	; 12108 <__snprintf_chk@plt+0xa40>
   11dc4:	str	r0, [r5, #344]	; 0x158
   11dc8:	mov	r0, r4
   11dcc:	bl	14134 <__snprintf_chk@plt+0x2a6c>
   11dd0:	ldr	r1, [r5, #300]	; 0x12c
   11dd4:	cmp	r1, #1
   11dd8:	str	r0, [r5, #364]	; 0x16c
   11ddc:	beq	12af8 <__snprintf_chk@plt+0x1430>
   11de0:	mov	r8, #0
   11de4:	mov	r7, #1
   11de8:	mov	r0, r4
   11dec:	str	r8, [r5, #4]
   11df0:	str	r7, [r5, #20]
   11df4:	bl	11590 <XGrabServer@plt>
   11df8:	ldr	r6, [r5, #384]	; 0x180
   11dfc:	cmp	r6, r8
   11e00:	beq	129d0 <__snprintf_chk@plt+0x1308>
   11e04:	mov	r2, r8
   11e08:	ldr	r1, [r5, #324]	; 0x144
   11e0c:	mov	r0, r4
   11e10:	bl	11344 <XCompositeRedirectSubwindows@plt>
   11e14:	mov	r0, r4
   11e18:	bl	114dc <XUngrabServer@plt>
   11e1c:	ldr	r1, [r5, #384]	; 0x180
   11e20:	ldr	r2, [r4, #8]
   11e24:	mov	r3, #1
   11e28:	cmp	r1, #0
   11e2c:	str	r2, [sp, #112]	; 0x70
   11e30:	strh	r3, [sp, #116]	; 0x74
   11e34:	beq	12aec <__snprintf_chk@plt+0x1424>
   11e38:	vldr	d10, [pc, #720]	; 12110 <__snprintf_chk@plt+0xa48>
   11e3c:	vldr	d11, [pc, #724]	; 12118 <__snprintf_chk@plt+0xa50>
   11e40:	vldr	d8, [pc, #704]	; 12108 <__snprintf_chk@plt+0xa40>
   11e44:	ldr	r8, [r5, #384]	; 0x180
   11e48:	ldr	r7, [pc, #868]	; 121b4 <__snprintf_chk@plt+0xaec>
   11e4c:	mov	r3, #0
   11e50:	str	r3, [sp, #24]
   11e54:	str	r3, [sp, #32]
   11e58:	str	r3, [sp, #28]
   11e5c:	cmp	r8, #0
   11e60:	bne	12028 <__snprintf_chk@plt+0x960>
   11e64:	ldr	r1, [r4, #88]	; 0x58
   11e68:	cmp	r1, #0
   11e6c:	bne	11ec4 <__snprintf_chk@plt+0x7fc>
   11e70:	ldr	r3, [r5]
   11e74:	cmp	r3, #0
   11e78:	beq	12868 <__snprintf_chk@plt+0x11a0>
   11e7c:	add	r0, sp, #120	; 0x78
   11e80:	bl	11428 <gettimeofday@plt>
   11e84:	ldr	r3, [sp, #124]	; 0x7c
   11e88:	ldr	r0, [sp, #120]	; 0x78
   11e8c:	ldr	r1, [r5, #368]	; 0x170
   11e90:	smull	ip, r2, r7, r3
   11e94:	rsb	ip, r0, r0, lsl #5
   11e98:	asr	r3, r3, #31
   11e9c:	add	r0, r0, ip, lsl #2
   11ea0:	rsb	r2, r3, r2, asr #6
   11ea4:	add	r2, r2, r0, lsl #3
   11ea8:	sub	r2, r1, r2
   11eac:	bic	r2, r2, r2, asr #31
   11eb0:	mov	r1, #1
   11eb4:	add	r0, sp, #112	; 0x70
   11eb8:	bl	11404 <poll@plt>
   11ebc:	subs	r1, r0, #0
   11ec0:	beq	124ac <__snprintf_chk@plt+0xde4>
   11ec4:	add	r1, sp, #180	; 0xb4
   11ec8:	mov	r0, r4
   11ecc:	bl	11518 <XNextEvent@plt>
   11ed0:	ldr	r3, [sp, #180]	; 0xb4
   11ed4:	and	r3, r3, #127	; 0x7f
   11ed8:	cmp	r3, #11
   11edc:	beq	11ee8 <__snprintf_chk@plt+0x820>
   11ee0:	ldr	r0, [sp, #184]	; 0xb8
   11ee4:	bl	1371c <__snprintf_chk@plt+0x2054>
   11ee8:	ldr	r8, [r5, #384]	; 0x180
   11eec:	cmp	r8, #0
   11ef0:	bne	11fd4 <__snprintf_chk@plt+0x90c>
   11ef4:	ldr	r2, [sp, #180]	; 0xb4
   11ef8:	sub	r3, r2, #12
   11efc:	cmp	r3, #16
   11f00:	ldrls	pc, [pc, r3, lsl #2]
   11f04:	b	123c4 <__snprintf_chk@plt+0xcfc>
   11f08:	andeq	r2, r1, r4, rrx
   11f0c:	andeq	r2, r1, r4, asr #7
   11f10:	andeq	r2, r1, r4, asr #7
   11f14:	andeq	r2, r1, r4, asr #7
   11f18:	andeq	r2, r1, ip, asr #32
   11f1c:	andeq	r2, r1, r4, lsr r0
   11f20:	andeq	r2, r1, r8, ror #6
   11f24:	andeq	r2, r1, ip, lsr #6
   11f28:	andeq	r2, r1, r4, asr #7
   11f2c:	andeq	r2, r1, r0, asr #6
   11f30:	strdeq	r2, [r1], -r0
   11f34:	andeq	r2, r1, r4, asr #7
   11f38:	andeq	r2, r1, r4, asr #7
   11f3c:	andeq	r2, r1, r4, asr #7
   11f40:	ldrdeq	r2, [r1], -ip
   11f44:	andeq	r2, r1, r4, asr #7
   11f48:	andeq	r1, r1, ip, asr #30
   11f4c:	ldr	r6, [pc, #612]	; 121b8 <__snprintf_chk@plt+0xaf0>
   11f50:	ldr	r1, [pc, #612]	; 121bc <__snprintf_chk@plt+0xaf4>
   11f54:	b	11f64 <__snprintf_chk@plt+0x89c>
   11f58:	ldr	r1, [r6], #4
   11f5c:	cmp	r1, #0
   11f60:	beq	11fc0 <__snprintf_chk@plt+0x8f8>
   11f64:	mov	r2, #0
   11f68:	mov	r0, r4
   11f6c:	ldr	r8, [sp, #200]	; 0xc8
   11f70:	bl	1153c <XInternAtom@plt>
   11f74:	cmp	r8, r0
   11f78:	bne	11f58 <__snprintf_chk@plt+0x890>
   11f7c:	ldr	r3, [r5, #352]	; 0x160
   11f80:	cmp	r3, #0
   11f84:	beq	11f58 <__snprintf_chk@plt+0x890>
   11f88:	mov	r6, #0
   11f8c:	mov	r3, #1
   11f90:	str	r3, [sp, #8]
   11f94:	str	r6, [sp, #4]
   11f98:	str	r6, [sp]
   11f9c:	mov	r3, r6
   11fa0:	mov	r2, r6
   11fa4:	ldr	r1, [r5, #324]	; 0x144
   11fa8:	mov	r0, r4
   11fac:	bl	1162c <XClearArea@plt>
   11fb0:	ldr	r1, [r5, #352]	; 0x160
   11fb4:	mov	r0, r4
   11fb8:	bl	11494 <XRenderFreePicture@plt>
   11fbc:	str	r6, [r5, #352]	; 0x160
   11fc0:	ldr	r2, [sp, #200]	; 0xc8
   11fc4:	ldr	r3, [r5, #376]	; 0x178
   11fc8:	cmp	r2, r3
   11fcc:	beq	127b8 <__snprintf_chk@plt+0x10f0>
   11fd0:	ldr	r8, [r5, #384]	; 0x180
   11fd4:	ldr	r3, [r4, #88]	; 0x58
   11fd8:	cmp	r3, #0
   11fdc:	bne	11e5c <__snprintf_chk@plt+0x794>
   11fe0:	ldr	r1, [r5, #4]
   11fe4:	cmp	r1, #0
   11fe8:	beq	11e5c <__snprintf_chk@plt+0x794>
   11fec:	cmp	r8, #0
   11ff0:	bne	11e5c <__snprintf_chk@plt+0x794>
   11ff4:	mov	r0, r4
   11ff8:	bl	14270 <__snprintf_chk@plt+0x2ba8>
   11ffc:	ldr	r3, [r5, #424]	; 0x1a8
   12000:	mov	r1, r8
   12004:	add	r3, r3, #1
   12008:	mov	r0, r4
   1200c:	str	r3, [r5, #424]	; 0x1a8
   12010:	bl	1156c <XSync@plt>
   12014:	str	r8, [r5, #4]
   12018:	str	r8, [r5, #20]
   1201c:	ldr	r8, [r5, #384]	; 0x180
   12020:	cmp	r8, #0
   12024:	beq	11e64 <__snprintf_chk@plt+0x79c>
   12028:	mov	r0, r4
   1202c:	bl	11638 <XFlush@plt>
   12030:	b	11e64 <__snprintf_chk@plt+0x79c>
   12034:	mov	r2, #1
   12038:	ldr	r1, [sp, #200]	; 0xc8
   1203c:	mov	r0, r4
   12040:	bl	14e78 <__snprintf_chk@plt+0x37b0>
   12044:	ldr	r8, [r5, #384]	; 0x180
   12048:	b	11fd4 <__snprintf_chk@plt+0x90c>
   1204c:	mov	r2, #0
   12050:	ldr	r1, [sp, #200]	; 0xc8
   12054:	mov	r0, r4
   12058:	bl	150e0 <__snprintf_chk@plt+0x3a18>
   1205c:	ldr	r8, [r5, #384]	; 0x180
   12060:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12064:	ldr	r2, [sp, #196]	; 0xc4
   12068:	ldr	r3, [r5, #324]	; 0x144
   1206c:	cmp	r2, r3
   12070:	bne	11fd4 <__snprintf_chk@plt+0x90c>
   12074:	ldr	r3, [sp, #32]
   12078:	ldr	r2, [sp, #24]
   1207c:	ldr	r6, [sp, #216]	; 0xd8
   12080:	cmp	r3, r2
   12084:	beq	12840 <__snprintf_chk@plt+0x1178>
   12088:	ldr	r0, [sp, #24]
   1208c:	ldr	ip, [sp, #28]
   12090:	ldr	r1, [sp, #200]	; 0xc8
   12094:	lsl	r2, r0, #3
   12098:	add	r3, ip, r2
   1209c:	strh	r1, [ip, r2]
   120a0:	ldr	r2, [sp, #204]	; 0xcc
   120a4:	ldr	r1, [sp, #208]	; 0xd0
   120a8:	strh	r2, [r3, #2]
   120ac:	ldr	r2, [sp, #212]	; 0xd4
   120b0:	add	r0, r0, #1
   120b4:	cmp	r6, #0
   120b8:	str	r0, [sp, #24]
   120bc:	strh	r1, [r3, #4]
   120c0:	strh	r2, [r3, #6]
   120c4:	bne	11fd4 <__snprintf_chk@plt+0x90c>
   120c8:	mov	r2, r0
   120cc:	mov	r1, ip
   120d0:	mov	r0, r4
   120d4:	bl	115b4 <XFixesCreateRegion@plt>
   120d8:	str	r6, [sp, #24]
   120dc:	mov	r1, r0
   120e0:	mov	r0, r4
   120e4:	bl	13054 <__snprintf_chk@plt+0x198c>
   120e8:	ldr	r8, [r5, #384]	; 0x180
   120ec:	b	11fd4 <__snprintf_chk@plt+0x90c>
   120f0:	ldr	r6, [r5, #16]
   120f4:	ldr	r2, [sp, #200]	; 0xc8
   120f8:	cmp	r6, #0
   120fc:	bne	121e4 <__snprintf_chk@plt+0xb1c>
   12100:	b	12624 <__snprintf_chk@plt+0xf5c>
   12104:	nop			; (mov r0, r0)
   12108:	andeq	r0, r0, r0
   1210c:	svccc	0x00f00000	; IMB
   12110:			; <UNDEFINED> instruction: 0xffe00000
   12114:	strdmi	pc, [pc, #255]	; 1221b <__snprintf_chk@plt+0xb53>
	...
   12120:	ldrdeq	r5, [r2], -r0
   12124:	andeq	r5, r1, r8, lsl fp
   12128:	andeq	r6, r2, r0, lsr #3
   1212c:			; <UNDEFINED> instruction: 0x47ae147b
   12130:	svccc	0x00847ae1
   12134:	andeq	r3, r1, r4, ror r7
   12138:	andeq	r6, r2, r4, asr #5
   1213c:	andeq	r6, r2, r4, lsr r3
   12140:	andeq	r5, r1, r0, ror #22
   12144:	andeq	r5, r1, ip, ror #22
   12148:	muleq	r2, r8, r1
   1214c:	andeq	r6, r2, r8, asr #2
   12150:	strdeq	r5, [r1], -r8
   12154:	strdeq	r5, [r1], -r0
   12158:	andeq	r5, r1, r8, lsl r6
   1215c:	andeq	r5, r1, r0, lsl #12
   12160:	andeq	r5, r1, r8, asr #22
   12164:	andeq	r5, r1, r4, lsr fp
   12168:	andeq	r6, r2, r0, asr #5
   1216c:	andeq	r6, r2, r8, asr #5
   12170:	muleq	r1, ip, fp
   12174:	andeq	r5, r1, r4, lsl #23
   12178:	andeq	r6, r2, r0, asr #6
   1217c:	andeq	r5, r1, ip, asr #23
   12180:	andeq	r6, r2, ip, ror r1
   12184:	ldrdeq	r5, [r1], -ip
   12188:	andeq	r5, r1, r8, asr ip
   1218c:	andeq	r5, r1, r4, ror #24
   12190:	andeq	r5, r1, ip, ror ip
   12194:	muleq	r1, r0, ip
   12198:	andeq	r5, r1, ip, lsr #25
   1219c:	andeq	r5, r1, r8, asr #25
   121a0:	andeq	r5, r1, r4, ror #25
   121a4:	andeq	r5, r1, r0, lsl #26
   121a8:	andeq	r5, r1, ip, lsl sp
   121ac:	andeq	r5, r1, r8, lsr sp
   121b0:	andeq	r5, r1, r4, asr sp
   121b4:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   121b8:	andeq	r5, r1, r0, asr r5
   121bc:	ldrdeq	r5, [r1], -r8
   121c0:	andeq	r3, r1, r0, lsr #11
   121c4:	subeq	r8, sl, r0
   121c8:			; <UNDEFINED> instruction: 0x00015bb4
   121cc:	andeq	r5, r1, ip, ror #23
   121d0:	muleq	r2, r0, r1
   121d4:	andeq	r5, r1, r4, lsr #24
   121d8:	ldr	r6, [r6]
   121dc:	cmp	r6, #0
   121e0:	beq	12624 <__snprintf_chk@plt+0xf5c>
   121e4:	ldr	r3, [r6, #4]
   121e8:	cmp	r2, r3
   121ec:	bne	121d8 <__snprintf_chk@plt+0xb10>
   121f0:	mov	r2, #0
   121f4:	mov	r1, r2
   121f8:	mov	r0, r4
   121fc:	bl	115b4 <XFixesCreateRegion@plt>
   12200:	ldr	r2, [r6, #132]	; 0x84
   12204:	cmp	r2, #0
   12208:	mov	r8, r0
   1220c:	bne	126d8 <__snprintf_chk@plt+0x1010>
   12210:	ldr	r3, [sp, #204]	; 0xcc
   12214:	ldr	r1, [r6, #12]
   12218:	str	r3, [r6, #12]
   1221c:	ldr	r3, [sp, #208]	; 0xd0
   12220:	ldr	r0, [r6, #16]
   12224:	ldrh	r2, [r6, #172]	; 0xac
   12228:	str	r3, [r6, #16]
   1222c:	ldrh	r3, [r6, #174]	; 0xae
   12230:	sub	r2, r2, r1
   12234:	ldr	r1, [sp, #212]	; 0xd4
   12238:	sub	r3, r3, r0
   1223c:	ldr	r0, [r6, #20]
   12240:	strh	r2, [r6, #172]	; 0xac
   12244:	cmp	r0, r1
   12248:	strh	r3, [r6, #174]	; 0xae
   1224c:	beq	12650 <__snprintf_chk@plt+0xf88>
   12250:	ldr	r1, [r6, #8]
   12254:	cmp	r1, #0
   12258:	bne	1266c <__snprintf_chk@plt+0xfa4>
   1225c:	ldr	r1, [r6, #136]	; 0x88
   12260:	cmp	r1, #0
   12264:	bne	1276c <__snprintf_chk@plt+0x10a4>
   12268:	ldr	r1, [sp, #212]	; 0xd4
   1226c:	str	r1, [r6, #20]
   12270:	ldr	r3, [sp, #216]	; 0xd8
   12274:	mov	r0, r6
   12278:	str	r3, [r6, #24]
   1227c:	ldr	r3, [sp, #220]	; 0xdc
   12280:	str	r3, [r6, #28]
   12284:	ldr	r3, [sp, #228]	; 0xe4
   12288:	ldr	r1, [sp, #224]	; 0xe0
   1228c:	str	r3, [r6, #96]	; 0x60
   12290:	bl	13398 <__snprintf_chk@plt+0x1cd0>
   12294:	cmp	r8, #0
   12298:	bne	12698 <__snprintf_chk@plt+0xfd0>
   1229c:	ldrd	r0, [r6, #12]
   122a0:	ldrh	r3, [r6, #174]	; 0xae
   122a4:	ldrh	r2, [r6, #172]	; 0xac
   122a8:	ldr	r8, [r5, #384]	; 0x180
   122ac:	add	r3, r3, r1
   122b0:	ldr	r1, [r6, #168]	; 0xa8
   122b4:	add	r2, r2, r0
   122b8:	cmp	r1, #0
   122bc:	strh	r3, [r6, #174]	; 0xae
   122c0:	strh	r2, [r6, #172]	; 0xac
   122c4:	ldrdeq	r2, [r6, #20]
   122c8:	strheq	r3, [r6, #178]	; 0xb2
   122cc:	mov	r3, #1
   122d0:	strheq	r2, [r6, #176]	; 0xb0
   122d4:	str	r3, [r5, #20]
   122d8:	b	11fd4 <__snprintf_chk@plt+0x90c>
   122dc:	ldr	r0, [r5, #16]
   122e0:	ldr	r2, [sp, #200]	; 0xc8
   122e4:	cmp	r0, #0
   122e8:	beq	11fd4 <__snprintf_chk@plt+0x90c>
   122ec:	ldr	r1, [r0, #4]
   122f0:	cmp	r2, r1
   122f4:	beq	12310 <__snprintf_chk@plt+0xc48>
   122f8:	ldr	r0, [r0]
   122fc:	cmp	r0, #0
   12300:	beq	11fd4 <__snprintf_chk@plt+0x90c>
   12304:	ldr	r3, [r0, #4]
   12308:	cmp	r2, r3
   1230c:	bne	122f8 <__snprintf_chk@plt+0xc30>
   12310:	ldr	r3, [sp, #204]	; 0xcc
   12314:	cmp	r3, #0
   12318:	movne	r1, #0
   1231c:	bl	13398 <__snprintf_chk@plt+0x1cd0>
   12320:	mov	r3, #1
   12324:	str	r3, [r5, #20]
   12328:	b	11fd4 <__snprintf_chk@plt+0x90c>
   1232c:	ldr	r1, [sp, #200]	; 0xc8
   12330:	mov	r0, r4
   12334:	bl	14fec <__snprintf_chk@plt+0x3924>
   12338:	ldr	r8, [r5, #384]	; 0x180
   1233c:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12340:	ldr	r2, [sp, #204]	; 0xcc
   12344:	ldr	r3, [r5, #324]	; 0x144
   12348:	ldr	r1, [sp, #200]	; 0xc8
   1234c:	cmp	r2, r3
   12350:	mov	r0, r4
   12354:	mov	r2, #0
   12358:	beq	12618 <__snprintf_chk@plt+0xf50>
   1235c:	bl	14e78 <__snprintf_chk@plt+0x37b0>
   12360:	ldr	r8, [r5, #384]	; 0x180
   12364:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12368:	ldr	r1, [r5, #16]
   1236c:	ldr	r2, [sp, #200]	; 0xc8
   12370:	cmp	r1, #0
   12374:	bne	12388 <__snprintf_chk@plt+0xcc0>
   12378:	b	11fd4 <__snprintf_chk@plt+0x90c>
   1237c:	ldr	r1, [r1]
   12380:	cmp	r1, #0
   12384:	beq	11fd4 <__snprintf_chk@plt+0x90c>
   12388:	ldr	r3, [r1, #4]
   1238c:	cmp	r2, r3
   12390:	bne	1237c <__snprintf_chk@plt+0xcb4>
   12394:	ldr	r2, [r1, #8]
   12398:	mov	r3, #0
   1239c:	cmp	r2, r3
   123a0:	str	r3, [r1, #80]	; 0x50
   123a4:	beq	123b4 <__snprintf_chk@plt+0xcec>
   123a8:	ldr	r2, [r5, #372]	; 0x174
   123ac:	cmp	r2, #0
   123b0:	bne	12784 <__snprintf_chk@plt+0x10bc>
   123b4:	mov	r0, r4
   123b8:	bl	1347c <__snprintf_chk@plt+0x1db4>
   123bc:	ldr	r8, [r5, #384]	; 0x180
   123c0:	b	11fd4 <__snprintf_chk@plt+0x90c>
   123c4:	ldr	r3, [r5, #408]	; 0x198
   123c8:	cmp	r2, r3
   123cc:	beq	126e8 <__snprintf_chk@plt+0x1020>
   123d0:	ldr	r3, [r5, #420]	; 0x1a4
   123d4:	cmp	r2, r3
   123d8:	bne	11fd4 <__snprintf_chk@plt+0x90c>
   123dc:	ldr	r6, [r5, #16]
   123e0:	ldr	r2, [sp, #196]	; 0xc4
   123e4:	cmp	r6, #0
   123e8:	bne	123fc <__snprintf_chk@plt+0xd34>
   123ec:	b	11fd4 <__snprintf_chk@plt+0x90c>
   123f0:	ldr	r6, [r6]
   123f4:	cmp	r6, #0
   123f8:	beq	11fd4 <__snprintf_chk@plt+0x90c>
   123fc:	ldr	r3, [r6, #4]
   12400:	cmp	r2, r3
   12404:	bne	123f0 <__snprintf_chk@plt+0xd28>
   12408:	ldr	r3, [sp, #200]	; 0xc8
   1240c:	cmp	r3, #1
   12410:	bhi	11fd4 <__snprintf_chk@plt+0x90c>
   12414:	mov	r3, #1
   12418:	add	r9, r6, #172	; 0xac
   1241c:	mov	r1, r9
   12420:	mov	r2, r3
   12424:	mov	r0, r4
   12428:	str	r3, [r5, #20]
   1242c:	bl	115b4 <XFixesCreateRegion@plt>
   12430:	ldr	r1, [sp, #224]	; 0xe0
   12434:	cmp	r1, #1
   12438:	mov	r8, r0
   1243c:	beq	12998 <__snprintf_chk@plt+0x12d0>
   12440:	ldr	r3, [r6, #12]
   12444:	ldr	r2, [r6, #16]
   12448:	strh	r3, [r6, #172]	; 0xac
   1244c:	ldr	r3, [r6, #20]
   12450:	strh	r2, [r6, #174]	; 0xae
   12454:	ldr	r2, [r6, #24]
   12458:	strh	r3, [r6, #176]	; 0xb0
   1245c:	mov	r3, #0
   12460:	strh	r2, [r6, #178]	; 0xb2
   12464:	str	r3, [r6, #168]	; 0xa8
   12468:	mov	r1, r9
   1246c:	mov	r2, #1
   12470:	mov	r0, r4
   12474:	bl	115b4 <XFixesCreateRegion@plt>
   12478:	mov	r2, r8
   1247c:	mov	r1, r8
   12480:	mov	r3, r0
   12484:	mov	r6, r0
   12488:	mov	r0, r4
   1248c:	bl	11458 <XFixesUnionRegion@plt>
   12490:	mov	r1, r6
   12494:	mov	r0, r4
   12498:	bl	11524 <XFixesDestroyRegion@plt>
   1249c:	mov	r1, r8
   124a0:	mov	r0, r4
   124a4:	bl	14270 <__snprintf_chk@plt+0x2ba8>
   124a8:	b	11fd0 <__snprintf_chk@plt+0x908>
   124ac:	add	r0, sp, #120	; 0x78
   124b0:	bl	11428 <gettimeofday@plt>
   124b4:	ldrd	r2, [sp, #120]	; 0x78
   124b8:	ldr	r0, [r5, #368]	; 0x170
   124bc:	smull	r1, fp, r7, r3
   124c0:	rsb	r1, r2, r2, lsl #5
   124c4:	asr	r3, r3, #31
   124c8:	add	r2, r2, r1, lsl #2
   124cc:	rsb	fp, r3, fp, asr #6
   124d0:	add	fp, fp, r2, lsl #3
   124d4:	sub	r3, r0, fp
   124d8:	cmp	r3, #0
   124dc:	bgt	12610 <__snprintf_chk@plt+0xf48>
   124e0:	ldr	r8, [sl, #28]
   124e4:	sub	r0, fp, r0
   124e8:	mov	r1, r8
   124ec:	bl	15278 <__snprintf_chk@plt+0x3bb0>
   124f0:	ldr	r6, [r5]
   124f4:	cmp	r6, #0
   124f8:	add	r0, r0, #1
   124fc:	beq	12608 <__snprintf_chk@plt+0xf40>
   12500:	vmov	s15, r0
   12504:	vcvt.f64.s32	d9, s15
   12508:	b	12550 <__snprintf_chk@plt+0xe88>
   1250c:	vmrs	APSR_nzcv, fpscr
   12510:	blt	125c0 <__snprintf_chk@plt+0xef8>
   12514:	vmul.f64	d7, d7, d10
   12518:	mov	r1, r8
   1251c:	mov	r0, r4
   12520:	vcvt.u32.f64	s14, d7
   12524:	vstr	s14, [r8, #156]	; 0x9c
   12528:	bl	13098 <__snprintf_chk@plt+0x19d0>
   1252c:	ldr	r1, [r8, #136]	; 0x88
   12530:	cmp	r1, #0
   12534:	bne	12ac8 <__snprintf_chk@plt+0x1400>
   12538:	mov	r1, r6
   1253c:	mov	r0, r4
   12540:	bl	12fe0 <__snprintf_chk@plt+0x1918>
   12544:	cmp	r9, #0
   12548:	mov	r6, r9
   1254c:	beq	12604 <__snprintf_chk@plt+0xf3c>
   12550:	vldr	d7, [r6, #8]
   12554:	vldr	d6, [r6, #24]
   12558:	ldr	r8, [r6, #4]
   1255c:	ldr	r9, [r6]
   12560:	vmla.f64	d7, d9, d6
   12564:	vcmpe.f64	d7, d8
   12568:	vmrs	APSR_nzcv, fpscr
   1256c:	vstrge	d8, [r6, #8]
   12570:	mvnge	r3, #0
   12574:	bge	12598 <__snprintf_chk@plt+0xed0>
   12578:	vcmpe.f64	d7, #0.0
   1257c:	vmrs	APSR_nzcv, fpscr
   12580:	vmulpl.f64	d6, d7, d10
   12584:	vstrpl	d7, [r6, #8]
   12588:	vstrmi	d11, [r6, #8]
   1258c:	movmi	r3, #0
   12590:	vcvtpl.u32.f64	s15, d6
   12594:	vmovpl	r3, s15
   12598:	str	r3, [r8, #156]	; 0x9c
   1259c:	vldr	d7, [r6, #24]
   125a0:	vldr	d6, [r6, #8]
   125a4:	vcmpe.f64	d7, #0.0
   125a8:	vldr	d7, [r6, #16]
   125ac:	vmrs	APSR_nzcv, fpscr
   125b0:	vcmpe.f64	d6, d7
   125b4:	bgt	1250c <__snprintf_chk@plt+0xe44>
   125b8:	vmrs	APSR_nzcv, fpscr
   125bc:	bls	12514 <__snprintf_chk@plt+0xe4c>
   125c0:	mov	r1, r8
   125c4:	mov	r0, r4
   125c8:	bl	13098 <__snprintf_chk@plt+0x19d0>
   125cc:	ldr	r1, [r8, #136]	; 0x88
   125d0:	cmp	r1, #0
   125d4:	beq	12544 <__snprintf_chk@plt+0xe7c>
   125d8:	mov	r0, r4
   125dc:	bl	11494 <XRenderFreePicture@plt>
   125e0:	mov	r3, #0
   125e4:	str	r3, [r8, #136]	; 0x88
   125e8:	mov	r1, r8
   125ec:	mov	r0, r4
   125f0:	bl	138e4 <__snprintf_chk@plt+0x221c>
   125f4:	cmp	r9, #0
   125f8:	mov	r6, r9
   125fc:	str	r0, [r8, #132]	; 0x84
   12600:	bne	12550 <__snprintf_chk@plt+0xe88>
   12604:	ldr	r8, [sl, #28]
   12608:	add	fp, fp, r8
   1260c:	str	fp, [r5, #368]	; 0x170
   12610:	ldr	r8, [r5, #384]	; 0x180
   12614:	b	11fe0 <__snprintf_chk@plt+0x918>
   12618:	bl	150e0 <__snprintf_chk@plt+0x3a18>
   1261c:	ldr	r8, [r5, #384]	; 0x180
   12620:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12624:	ldr	r3, [r5, #324]	; 0x144
   12628:	cmp	r2, r3
   1262c:	bne	11fd4 <__snprintf_chk@plt+0x90c>
   12630:	ldr	r1, [r5, #336]	; 0x150
   12634:	cmp	r1, #0
   12638:	bne	12970 <__snprintf_chk@plt+0x12a8>
   1263c:	ldrd	r2, [sp, #212]	; 0xd4
   12640:	ldr	r8, [r5, #384]	; 0x180
   12644:	str	r2, [r5, #328]	; 0x148
   12648:	str	r3, [r5, #332]	; 0x14c
   1264c:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12650:	ldr	r2, [r6, #24]
   12654:	ldr	r3, [sp, #216]	; 0xd8
   12658:	cmp	r2, r3
   1265c:	beq	1226c <__snprintf_chk@plt+0xba4>
   12660:	ldr	r1, [r6, #8]
   12664:	cmp	r1, #0
   12668:	beq	1225c <__snprintf_chk@plt+0xb94>
   1266c:	mov	r0, r4
   12670:	bl	113ec <XFreePixmap@plt>
   12674:	ldr	r1, [r6, #116]	; 0x74
   12678:	mov	r9, #0
   1267c:	cmp	r1, r9
   12680:	str	r9, [r6, #8]
   12684:	beq	1225c <__snprintf_chk@plt+0xb94>
   12688:	mov	r0, r4
   1268c:	bl	11494 <XRenderFreePicture@plt>
   12690:	str	r9, [r6, #116]	; 0x74
   12694:	b	1225c <__snprintf_chk@plt+0xb94>
   12698:	mov	r1, r6
   1269c:	mov	r0, r4
   126a0:	bl	138e4 <__snprintf_chk@plt+0x221c>
   126a4:	mov	r2, r8
   126a8:	mov	r1, r8
   126ac:	mov	r3, r0
   126b0:	mov	r9, r0
   126b4:	mov	r0, r4
   126b8:	bl	11458 <XFixesUnionRegion@plt>
   126bc:	mov	r1, r9
   126c0:	mov	r0, r4
   126c4:	bl	11524 <XFixesDestroyRegion@plt>
   126c8:	mov	r1, r8
   126cc:	mov	r0, r4
   126d0:	bl	13054 <__snprintf_chk@plt+0x198c>
   126d4:	b	1229c <__snprintf_chk@plt+0xbd4>
   126d8:	mov	r1, r8
   126dc:	mov	r0, r4
   126e0:	bl	113bc <XFixesCopyRegion@plt>
   126e4:	b	12210 <__snprintf_chk@plt+0xb48>
   126e8:	ldr	r6, [r5, #16]
   126ec:	ldr	r2, [sp, #196]	; 0xc4
   126f0:	cmp	r6, #0
   126f4:	bne	12708 <__snprintf_chk@plt+0x1040>
   126f8:	b	11fd4 <__snprintf_chk@plt+0x90c>
   126fc:	ldr	r6, [r6]
   12700:	cmp	r6, #0
   12704:	beq	11fd4 <__snprintf_chk@plt+0x90c>
   12708:	ldr	r3, [r6, #4]
   1270c:	cmp	r2, r3
   12710:	bne	126fc <__snprintf_chk@plt+0x1034>
   12714:	ldr	r9, [r6, #108]	; 0x6c
   12718:	cmp	r9, #0
   1271c:	bne	12870 <__snprintf_chk@plt+0x11a8>
   12720:	mov	r1, r6
   12724:	mov	r0, r4
   12728:	bl	138e4 <__snprintf_chk@plt+0x221c>
   1272c:	mov	r8, r0
   12730:	ldr	r0, [r4, #96]	; 0x60
   12734:	add	r0, r0, #1
   12738:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1273c:	mov	r3, r9
   12740:	mov	r2, r9
   12744:	ldr	r1, [r6, #112]	; 0x70
   12748:	mov	r0, r4
   1274c:	bl	115cc <XDamageSubtract@plt>
   12750:	mov	r1, r8
   12754:	mov	r0, r4
   12758:	bl	13054 <__snprintf_chk@plt+0x198c>
   1275c:	mov	r3, #1
   12760:	str	r3, [r6, #108]	; 0x6c
   12764:	ldr	r8, [r5, #384]	; 0x180
   12768:	b	11fd4 <__snprintf_chk@plt+0x90c>
   1276c:	mov	r0, r4
   12770:	bl	11494 <XRenderFreePicture@plt>
   12774:	mov	r3, #0
   12778:	ldr	r1, [sp, #212]	; 0xd4
   1277c:	str	r3, [r6, #136]	; 0x88
   12780:	b	1226c <__snprintf_chk@plt+0xba4>
   12784:	vldr	s0, [r1, #156]	; 0x9c
   12788:	mov	r2, #1
   1278c:	str	r2, [sp, #4]
   12790:	str	r3, [sp]
   12794:	vcvt.f64.u32	d0, s0
   12798:	ldr	r2, [pc, #-1504]	; 121c0 <__snprintf_chk@plt+0xaf8>
   1279c:	vldr	d2, [sl, #32]
   127a0:	vmov.f64	d1, d11
   127a4:	mov	r0, r4
   127a8:	vdiv.f64	d0, d0, d10
   127ac:	bl	14c54 <__snprintf_chk@plt+0x358c>
   127b0:	ldr	r8, [r5, #384]	; 0x180
   127b4:	b	11fd4 <__snprintf_chk@plt+0x90c>
   127b8:	ldr	r6, [r5, #16]
   127bc:	ldr	r2, [sp, #196]	; 0xc4
   127c0:	cmp	r6, #0
   127c4:	bne	127d8 <__snprintf_chk@plt+0x1110>
   127c8:	b	11fd0 <__snprintf_chk@plt+0x908>
   127cc:	ldr	r6, [r6]
   127d0:	cmp	r6, #0
   127d4:	beq	11fd0 <__snprintf_chk@plt+0x908>
   127d8:	ldr	r3, [r6, #4]
   127dc:	cmp	r2, r3
   127e0:	bne	127cc <__snprintf_chk@plt+0x1104>
   127e4:	ldr	r8, [r5, #380]	; 0x17c
   127e8:	ldr	r1, [r6, #4]
   127ec:	cmp	r8, #0
   127f0:	beq	12928 <__snprintf_chk@plt+0x1260>
   127f4:	vldr	s15, [r6, #156]	; 0x9c
   127f8:	mov	r0, r4
   127fc:	vcvt.f64.u32	d7, s15
   12800:	vdiv.f64	d9, d7, d10
   12804:	bl	14f3c <__snprintf_chk@plt+0x3874>
   12808:	mov	r3, #0
   1280c:	mov	r2, #1
   12810:	mov	r1, r6
   12814:	strd	r2, [sp]
   12818:	mov	r2, r3
   1281c:	vldr	d2, [sl, #32]
   12820:	vmov	s15, r0
   12824:	vmov.f64	d0, d9
   12828:	mov	r0, r4
   1282c:	vcvt.f64.u32	d1, s15
   12830:	vdiv.f64	d1, d1, d10
   12834:	bl	14c54 <__snprintf_chk@plt+0x358c>
   12838:	ldr	r8, [r5, #384]	; 0x180
   1283c:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12840:	ldr	r0, [sp, #28]
   12844:	add	r9, r6, #1
   12848:	cmp	r0, #0
   1284c:	beq	12984 <__snprintf_chk@plt+0x12bc>
   12850:	add	r3, r3, r9
   12854:	str	r3, [sp, #32]
   12858:	lsl	r1, r3, #3
   1285c:	bl	113e0 <realloc@plt>
   12860:	str	r0, [sp, #28]
   12864:	b	12088 <__snprintf_chk@plt+0x9c0>
   12868:	mvn	r2, #0
   1286c:	b	11eb0 <__snprintf_chk@plt+0x7e8>
   12870:	mov	r2, #0
   12874:	mov	r1, r2
   12878:	mov	r0, r4
   1287c:	bl	115b4 <XFixesCreateRegion@plt>
   12880:	mov	r8, r0
   12884:	ldr	r0, [r4, #96]	; 0x60
   12888:	add	r0, r0, #1
   1288c:	bl	13440 <__snprintf_chk@plt+0x1d78>
   12890:	mov	r3, r8
   12894:	mov	r2, #0
   12898:	ldr	r1, [r6, #112]	; 0x70
   1289c:	mov	r0, r4
   128a0:	bl	115cc <XDamageSubtract@plt>
   128a4:	ldr	r2, [r6, #28]
   128a8:	ldr	r0, [r6, #12]
   128ac:	ldr	r3, [r6, #16]
   128b0:	mov	r1, r8
   128b4:	add	r3, r2, r3
   128b8:	add	r2, r2, r0
   128bc:	mov	r0, r4
   128c0:	bl	11620 <XFixesTranslateRegion@plt>
   128c4:	ldr	r3, [r5, #300]	; 0x12c
   128c8:	cmp	r3, #1
   128cc:	bne	12750 <__snprintf_chk@plt+0x1088>
   128d0:	mov	r2, #0
   128d4:	mov	r1, r2
   128d8:	mov	r0, r4
   128dc:	bl	115b4 <XFixesCreateRegion@plt>
   128e0:	mov	r2, r8
   128e4:	mov	r9, r0
   128e8:	mov	r1, r0
   128ec:	mov	r0, r4
   128f0:	bl	113bc <XFixesCopyRegion@plt>
   128f4:	ldrd	r2, [r6, #140]	; 0x8c
   128f8:	mov	r1, r9
   128fc:	mov	r0, r4
   12900:	bl	11620 <XFixesTranslateRegion@plt>
   12904:	mov	r1, r8
   12908:	mov	r0, r4
   1290c:	mov	r3, r9
   12910:	mov	r2, r8
   12914:	bl	11458 <XFixesUnionRegion@plt>
   12918:	mov	r1, r9
   1291c:	mov	r0, r4
   12920:	bl	11524 <XFixesDestroyRegion@plt>
   12924:	b	12750 <__snprintf_chk@plt+0x1088>
   12928:	mov	r0, r4
   1292c:	bl	14f3c <__snprintf_chk@plt+0x3874>
   12930:	mov	r1, r6
   12934:	str	r0, [r6, #156]	; 0x9c
   12938:	mov	r0, r4
   1293c:	bl	13098 <__snprintf_chk@plt+0x19d0>
   12940:	ldr	r1, [r6, #136]	; 0x88
   12944:	cmp	r1, #0
   12948:	beq	11fd0 <__snprintf_chk@plt+0x908>
   1294c:	mov	r0, r4
   12950:	bl	11494 <XRenderFreePicture@plt>
   12954:	str	r8, [r6, #136]	; 0x88
   12958:	mov	r1, r6
   1295c:	mov	r0, r4
   12960:	bl	138e4 <__snprintf_chk@plt+0x221c>
   12964:	ldr	r8, [r5, #384]	; 0x180
   12968:	str	r0, [r6, #132]	; 0x84
   1296c:	b	11fd4 <__snprintf_chk@plt+0x90c>
   12970:	mov	r0, r4
   12974:	bl	11494 <XRenderFreePicture@plt>
   12978:	mov	r3, #0
   1297c:	str	r3, [r5, #336]	; 0x150
   12980:	b	1263c <__snprintf_chk@plt+0xf74>
   12984:	lsl	r0, r9, #3
   12988:	bl	11464 <malloc@plt>
   1298c:	str	r9, [sp, #32]
   12990:	str	r0, [sp, #28]
   12994:	b	12088 <__snprintf_chk@plt+0x9c0>
   12998:	ldr	r0, [sp, #204]	; 0xcc
   1299c:	ldr	r2, [r6, #12]
   129a0:	ldr	r3, [r6, #16]
   129a4:	add	r2, r2, r0
   129a8:	ldr	r0, [sp, #208]	; 0xd0
   129ac:	str	r1, [r6, #168]	; 0xa8
   129b0:	strh	r2, [r6, #172]	; 0xac
   129b4:	ldr	r1, [sp, #212]	; 0xd4
   129b8:	ldr	r2, [sp, #216]	; 0xd8
   129bc:	add	r3, r3, r0
   129c0:	strh	r3, [r6, #174]	; 0xae
   129c4:	strh	r1, [r6, #176]	; 0xb0
   129c8:	strh	r2, [r6, #178]	; 0xb2
   129cc:	b	12468 <__snprintf_chk@plt+0xda0>
   129d0:	mov	r2, r7
   129d4:	ldr	r1, [r5, #324]	; 0x144
   129d8:	mov	r0, r4
   129dc:	bl	11344 <XCompositeRedirectSubwindows@plt>
   129e0:	ldr	r1, [r5, #324]	; 0x144
   129e4:	ldr	r2, [pc, #-2088]	; 121c4 <__snprintf_chk@plt+0xafc>
   129e8:	mov	r0, r4
   129ec:	bl	11578 <XSelectInput@plt>
   129f0:	mov	r2, r7
   129f4:	ldr	r1, [r5, #324]	; 0x144
   129f8:	mov	r0, r4
   129fc:	bl	1168c <XShapeSelectInput@plt>
   12a00:	add	r2, sp, #100	; 0x64
   12a04:	add	r3, sp, #96	; 0x60
   12a08:	str	r2, [sp, #4]
   12a0c:	str	r3, [sp]
   12a10:	add	r2, sp, #88	; 0x58
   12a14:	add	r3, sp, #92	; 0x5c
   12a18:	ldr	r1, [r5, #324]	; 0x144
   12a1c:	mov	r0, r4
   12a20:	bl	113a4 <XQueryTree@plt>
   12a24:	b	12a4c <__snprintf_chk@plt+0x1384>
   12a28:	cmp	r6, #0
   12a2c:	lsl	r3, r6, #2
   12a30:	ldr	r1, [r0, r6, lsl #2]
   12a34:	addne	r0, r0, r3
   12a38:	moveq	r2, r6
   12a3c:	ldrne	r2, [r0, #-4]
   12a40:	mov	r0, r4
   12a44:	bl	150e0 <__snprintf_chk@plt+0x3a18>
   12a48:	add	r6, r6, #1
   12a4c:	ldr	r3, [sp, #100]	; 0x64
   12a50:	ldr	r0, [sp, #96]	; 0x60
   12a54:	cmp	r3, r6
   12a58:	bhi	12a28 <__snprintf_chk@plt+0x1360>
   12a5c:	bl	113d4 <XFree@plt>
   12a60:	b	11e14 <__snprintf_chk@plt+0x74c>
   12a64:	ldr	r3, [pc, #-2204]	; 121d0 <__snprintf_chk@plt+0xb08>
   12a68:	mov	r2, #20
   12a6c:	mov	r1, #1
   12a70:	ldr	r3, [r3]
   12a74:	ldr	r0, [pc, #-2228]	; 121c8 <__snprintf_chk@plt+0xb00>
   12a78:	bl	11410 <fwrite@plt>
   12a7c:	mov	r0, #1
   12a80:	bl	114ac <exit@plt>
   12a84:	ldr	r1, [pc, #-2236]	; 121d0 <__snprintf_chk@plt+0xb08>
   12a88:	mov	r3, r6
   12a8c:	ldr	r2, [pc, #-2248]	; 121cc <__snprintf_chk@plt+0xb04>
   12a90:	ldr	r0, [r1]
   12a94:	mov	r1, #1
   12a98:	bl	115c0 <__fprintf_chk@plt>
   12a9c:	b	11c24 <__snprintf_chk@plt+0x55c>
   12aa0:	ldr	r3, [sp, #112]	; 0x70
   12aa4:	ldr	r1, [pc, #-2268]	; 121d0 <__snprintf_chk@plt+0xb08>
   12aa8:	ldr	r2, [pc, #-2268]	; 121d4 <__snprintf_chk@plt+0xb0c>
   12aac:	ldr	r3, [r3]
   12ab0:	ldr	r0, [r1]
   12ab4:	mov	r1, #1
   12ab8:	bl	115c0 <__fprintf_chk@plt>
   12abc:	ldr	r0, [sp, #112]	; 0x70
   12ac0:	bl	11440 <XFreeStringList@plt>
   12ac4:	b	11c1c <__snprintf_chk@plt+0x554>
   12ac8:	mov	r0, r4
   12acc:	bl	11494 <XRenderFreePicture@plt>
   12ad0:	mov	r3, #0
   12ad4:	str	r3, [r8, #136]	; 0x88
   12ad8:	mov	r1, r8
   12adc:	mov	r0, r4
   12ae0:	bl	138e4 <__snprintf_chk@plt+0x221c>
   12ae4:	str	r0, [r8, #132]	; 0x84
   12ae8:	b	12538 <__snprintf_chk@plt+0xe70>
   12aec:	mov	r0, r4
   12af0:	bl	14270 <__snprintf_chk@plt+0x2ba8>
   12af4:	b	11e38 <__snprintf_chk@plt+0x770>
   12af8:	vldr	d0, [pc, #960]	; 12ec0 <__snprintf_chk@plt+0x17f8>
   12afc:	mov	r0, r4
   12b00:	bl	14134 <__snprintf_chk@plt+0x2a6c>
   12b04:	str	r0, [r5, #360]	; 0x168
   12b08:	b	11de0 <__snprintf_chk@plt+0x718>
   12b0c:	vldr	s13, [sl, #48]	; 0x30
   12b10:	vldr	d7, [pc, #944]	; 12ec8 <__snprintf_chk@plt+0x1800>
   12b14:	vldr	d13, [pc, #948]	; 12ed0 <__snprintf_chk@plt+0x1808>
   12b18:	vldr	d10, [pc, #952]	; 12ed8 <__snprintf_chk@plt+0x1810>
   12b1c:	vcvt.f64.s32	d8, s13
   12b20:	vldr	d9, [pc, #952]	; 12ee0 <__snprintf_chk@plt+0x1818>
   12b24:	mov	fp, #0
   12b28:	vmul.f64	d7, d8, d7
   12b2c:	vcvt.s32.f64	s15, d7
   12b30:	vmov	r6, s15
   12b34:	add	r6, r6, #1
   12b38:	bic	r7, r6, #1
   12b3c:	asr	r6, r6, #1
   12b40:	mul	r0, r7, r7
   12b44:	rsb	r8, r6, #0
   12b48:	add	r0, r0, #1
   12b4c:	str	r8, [sp, #28]
   12b50:	lsl	r0, r0, #3
   12b54:	bl	11464 <malloc@plt>
   12b58:	vadd.f64	d12, d8, d8
   12b5c:	lsl	r2, r7, #3
   12b60:	sub	r1, r7, r6
   12b64:	mov	r3, r0
   12b68:	str	r0, [sp, #24]
   12b6c:	str	r7, [r3], #8
   12b70:	str	r3, [r0, #4]
   12b74:	mov	r0, sl
   12b78:	mov	r3, r4
   12b7c:	mov	sl, r2
   12b80:	mov	r2, r0
   12b84:	add	r0, r6, r8
   12b88:	cmp	r7, r0
   12b8c:	ble	12c48 <__snprintf_chk@plt+0x1580>
   12b90:	vmov	s15, r8
   12b94:	vmul.f64	d14, d8, d10
   12b98:	ldr	r9, [sp, #28]
   12b9c:	mov	r4, fp
   12ba0:	vcvt.f64.s32	d11, s15
   12ba4:	str	sl, [sp, #32]
   12ba8:	str	fp, [sp, #36]	; 0x24
   12bac:	mov	sl, r6
   12bb0:	mov	fp, r8
   12bb4:	mov	r6, r1
   12bb8:	mov	r8, r7
   12bbc:	mov	r7, r3
   12bc0:	vmov.f64	d0, d14
   12bc4:	str	r2, [sp, #40]	; 0x28
   12bc8:	bl	11530 <sqrt@plt>
   12bcc:	vmov	s13, r9
   12bd0:	vmul.f64	d7, d11, d11
   12bd4:	add	r9, r9, #1
   12bd8:	vcvt.f64.s32	d5, s13
   12bdc:	vmul.f64	d6, d12, d8
   12be0:	vmla.f64	d7, d5, d5
   12be4:	vneg.f64	d7, d7
   12be8:	vmov.f64	d15, d0
   12bec:	vdiv.f64	d0, d7, d6
   12bf0:	bl	1165c <exp@plt>
   12bf4:	ldr	r3, [sp, #24]
   12bf8:	cmp	r6, r9
   12bfc:	ldr	r2, [sp, #40]	; 0x28
   12c00:	ldr	r0, [r3, #4]
   12c04:	add	r0, r0, r4
   12c08:	add	r4, r4, #8
   12c0c:	vdiv.f64	d7, d9, d15
   12c10:	vmul.f64	d0, d7, d0
   12c14:	vadd.f64	d13, d13, d0
   12c18:	vstr	d0, [r0]
   12c1c:	bne	12bc0 <__snprintf_chk@plt+0x14f8>
   12c20:	mov	r3, r7
   12c24:	mov	r1, r6
   12c28:	mov	r7, r8
   12c2c:	mov	r6, sl
   12c30:	mov	r8, fp
   12c34:	ldr	sl, [sp, #32]
   12c38:	ldr	fp, [sp, #36]	; 0x24
   12c3c:	add	r8, r8, #1
   12c40:	add	fp, fp, sl
   12c44:	b	12b84 <__snprintf_chk@plt+0x14bc>
   12c48:	mov	r4, r3
   12c4c:	mov	r3, r2
   12c50:	ldr	r6, [sp, #24]
   12c54:	mov	r2, sl
   12c58:	mov	sl, r3
   12c5c:	mov	r3, #0
   12c60:	mov	r0, r3
   12c64:	cmp	r7, r0
   12c68:	ble	12ca4 <__snprintf_chk@plt+0x15dc>
   12c6c:	mov	lr, r3
   12c70:	mov	ip, #0
   12c74:	ldr	r1, [r6, #4]
   12c78:	add	ip, ip, #1
   12c7c:	add	r1, r1, lr
   12c80:	cmp	r7, ip
   12c84:	vldr	d6, [r1]
   12c88:	add	lr, lr, #8
   12c8c:	vdiv.f64	d7, d6, d13
   12c90:	vstr	d7, [r1]
   12c94:	bne	12c74 <__snprintf_chk@plt+0x15ac>
   12c98:	add	r0, r0, #1
   12c9c:	add	r3, r3, r2
   12ca0:	b	12c64 <__snprintf_chk@plt+0x159c>
   12ca4:	ldr	r3, [sp, #24]
   12ca8:	ldr	r0, [r5, #320]	; 0x140
   12cac:	str	r3, [r5, #312]	; 0x138
   12cb0:	ldr	r2, [r3]
   12cb4:	cmp	r0, #0
   12cb8:	str	r2, [sp, #32]
   12cbc:	add	r3, r2, r2, lsr #31
   12cc0:	str	r2, [sl, #24]
   12cc4:	asr	r3, r3, #1
   12cc8:	str	r3, [sp, #44]	; 0x2c
   12ccc:	beq	12cd4 <__snprintf_chk@plt+0x160c>
   12cd0:	bl	11380 <free@plt>
   12cd4:	ldr	r0, [r5, #316]	; 0x13c
   12cd8:	cmp	r0, #0
   12cdc:	beq	12ce4 <__snprintf_chk@plt+0x161c>
   12ce0:	bl	11380 <free@plt>
   12ce4:	ldr	r3, [sp, #32]
   12ce8:	mov	r8, #26
   12cec:	add	fp, r3, #1
   12cf0:	mov	r2, #0
   12cf4:	mul	r7, fp, fp
   12cf8:	vldr	d8, [pc, #480]	; 12ee0 <__snprintf_chk@plt+0x1818>
   12cfc:	str	r2, [sp, #40]	; 0x28
   12d00:	str	r2, [sp, #52]	; 0x34
   12d04:	mul	r0, r8, r7
   12d08:	bl	11464 <malloc@plt>
   12d0c:	mov	r6, r0
   12d10:	mul	r0, r8, fp
   12d14:	str	r6, [r5, #320]	; 0x140
   12d18:	bl	11464 <malloc@plt>
   12d1c:	mov	r3, #25
   12d20:	str	sl, [sp, #84]	; 0x54
   12d24:	mul	r1, r3, r7
   12d28:	ldr	r8, [pc, #440]	; 12ee8 <__snprintf_chk@plt+0x1820>
   12d2c:	ldr	sl, [sp, #52]	; 0x34
   12d30:	add	r9, r6, r1
   12d34:	str	r1, [sp, #68]	; 0x44
   12d38:	str	r6, [sp, #28]
   12d3c:	str	r4, [sp, #80]	; 0x50
   12d40:	str	r0, [sp, #56]	; 0x38
   12d44:	str	r0, [r5, #316]	; 0x13c
   12d48:	mla	r0, r3, fp, r0
   12d4c:	ldr	r3, [sp, #32]
   12d50:	str	r0, [sp, #36]	; 0x24
   12d54:	lsl	r3, r3, #1
   12d58:	str	r3, [sp, #48]	; 0x30
   12d5c:	ldr	r3, [sp, #32]
   12d60:	cmp	r3, sl
   12d64:	blt	12eb0 <__snprintf_chk@plt+0x17e8>
   12d68:	ldr	r3, [sp, #24]
   12d6c:	ldr	ip, [sp, #48]	; 0x30
   12d70:	vmov.f64	d0, d8
   12d74:	ldr	r0, [r3]
   12d78:	ldr	r1, [r3, #4]
   12d7c:	ldr	r3, [sp, #44]	; 0x2c
   12d80:	str	ip, [sp, #4]
   12d84:	sub	r2, sl, r3
   12d88:	str	ip, [sp]
   12d8c:	str	r1, [sp, #64]	; 0x40
   12d90:	str	r0, [sp, #60]	; 0x3c
   12d94:	str	r2, [sp, #72]	; 0x48
   12d98:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   12d9c:	ldr	r3, [sp, #56]	; 0x38
   12da0:	mov	r1, #0
   12da4:	add	ip, r3, sl
   12da8:	ldr	r3, [sp, #36]	; 0x24
   12dac:	strb	r0, [r3]
   12db0:	mov	r0, r3
   12db4:	ldrb	r2, [r0]
   12db8:	mul	r2, r1, r2
   12dbc:	add	r1, r1, #1
   12dc0:	cmp	r1, #25
   12dc4:	umull	r2, r3, r2, r8
   12dc8:	lsr	r3, r3, #3
   12dcc:	strb	r3, [ip], fp
   12dd0:	bne	12db4 <__snprintf_chk@plt+0x16ec>
   12dd4:	ldr	r3, [sp, #68]	; 0x44
   12dd8:	ldr	r2, [sp, #28]
   12ddc:	mov	r4, #0
   12de0:	add	r3, r3, r2
   12de4:	str	r3, [sp, #52]	; 0x34
   12de8:	ldr	r3, [sp, #40]	; 0x28
   12dec:	mov	r6, r4
   12df0:	sub	r3, sl, r3
   12df4:	str	r3, [sp, #76]	; 0x4c
   12df8:	ldr	r3, [sp, #48]	; 0x30
   12dfc:	ldr	r2, [sp, #72]	; 0x48
   12e00:	str	r3, [sp, #4]
   12e04:	str	r3, [sp]
   12e08:	ldr	r3, [sp, #44]	; 0x2c
   12e0c:	vmov.f64	d0, d8
   12e10:	sub	r3, r6, r3
   12e14:	ldrd	r0, [sp, #60]	; 0x3c
   12e18:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   12e1c:	ldr	r3, [sp, #28]
   12e20:	mov	r2, #0
   12e24:	add	ip, r3, r6
   12e28:	ldr	r3, [sp, #76]	; 0x4c
   12e2c:	sub	lr, r3, r6
   12e30:	ldr	r3, [sp, #52]	; 0x34
   12e34:	strb	r0, [r9, r4]
   12e38:	strb	r0, [r3], #1
   12e3c:	str	r3, [sp, #52]	; 0x34
   12e40:	ldrb	r3, [r9, r4]
   12e44:	mov	r1, ip
   12e48:	add	ip, ip, r7
   12e4c:	mul	r3, r2, r3
   12e50:	add	r2, r2, #1
   12e54:	cmp	r2, #25
   12e58:	umull	r0, r3, r8, r3
   12e5c:	lsr	r3, r3, #3
   12e60:	uxtb	r3, r3
   12e64:	strb	r3, [r1], lr
   12e68:	strb	r3, [r1, r4]
   12e6c:	bne	12e40 <__snprintf_chk@plt+0x1778>
   12e70:	add	r6, r6, #1
   12e74:	cmp	sl, r6
   12e78:	add	r4, r4, fp
   12e7c:	bge	12df8 <__snprintf_chk@plt+0x1730>
   12e80:	ldr	r3, [sp, #40]	; 0x28
   12e84:	add	sl, sl, #1
   12e88:	add	r3, r3, fp
   12e8c:	str	r3, [sp, #40]	; 0x28
   12e90:	ldr	r3, [sp, #28]
   12e94:	add	r9, r9, #1
   12e98:	add	r3, r3, fp
   12e9c:	str	r3, [sp, #28]
   12ea0:	ldr	r3, [sp, #36]	; 0x24
   12ea4:	add	r3, r3, #1
   12ea8:	str	r3, [sp, #36]	; 0x24
   12eac:	b	12d5c <__snprintf_chk@plt+0x1694>
   12eb0:	ldr	r4, [sp, #80]	; 0x50
   12eb4:	ldr	sl, [sp, #84]	; 0x54
   12eb8:	b	11d70 <__snprintf_chk@plt+0x6a8>
   12ebc:	nop			; (mov r0, r0)
   12ec0:	teqcc	r3, #-872415232	; 0xcc000000
   12ec4:	svccc	0x00d33333
   12ec8:	andeq	r0, r0, r0
   12ecc:	andmi	r0, r8, r0
	...
   12ed8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   12edc:			; <UNDEFINED> instruction: 0x401921fb
   12ee0:	andeq	r0, r0, r0
   12ee4:	svccc	0x00f00000	; IMB
   12ee8:	mvnpl	r8, pc, lsl r5
   12eec:	mov	fp, #0
   12ef0:	mov	lr, #0
   12ef4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ef8:	mov	r2, sp
   12efc:	push	{r2}		; (str r2, [sp, #-4]!)
   12f00:	push	{r0}		; (str r0, [sp, #-4]!)
   12f04:	ldr	ip, [pc, #16]	; 12f1c <__snprintf_chk@plt+0x1854>
   12f08:	push	{ip}		; (str ip, [sp, #-4]!)
   12f0c:	ldr	r0, [pc, #12]	; 12f20 <__snprintf_chk@plt+0x1858>
   12f10:	ldr	r3, [pc, #12]	; 12f24 <__snprintf_chk@plt+0x185c>
   12f14:	bl	1147c <__libc_start_main@plt>
   12f18:	bl	116bc <abort@plt>
   12f1c:	andeq	r5, r1, r8, lsr #10
   12f20:	ldrdeq	r1, [r1], -r8
   12f24:	andeq	r5, r1, r8, asr #9
   12f28:	ldr	r3, [pc, #20]	; 12f44 <__snprintf_chk@plt+0x187c>
   12f2c:	ldr	r2, [pc, #20]	; 12f48 <__snprintf_chk@plt+0x1880>
   12f30:	add	r3, pc, r3
   12f34:	ldr	r2, [r3, r2]
   12f38:	cmp	r2, #0
   12f3c:	bxeq	lr
   12f40:	b	114a0 <__gmon_start__@plt>
   12f44:	andeq	r3, r1, r8, asr #1
   12f48:	andeq	r0, r0, ip, lsr r1
   12f4c:	ldr	r0, [pc, #24]	; 12f6c <__snprintf_chk@plt+0x18a4>
   12f50:	ldr	r3, [pc, #24]	; 12f70 <__snprintf_chk@plt+0x18a8>
   12f54:	cmp	r3, r0
   12f58:	bxeq	lr
   12f5c:	ldr	r3, [pc, #16]	; 12f74 <__snprintf_chk@plt+0x18ac>
   12f60:	cmp	r3, #0
   12f64:	bxeq	lr
   12f68:	bx	r3
   12f6c:	andeq	r6, r2, ip, lsl #3
   12f70:	andeq	r6, r2, ip, lsl #3
   12f74:	andeq	r0, r0, r0
   12f78:	ldr	r0, [pc, #36]	; 12fa4 <__snprintf_chk@plt+0x18dc>
   12f7c:	ldr	r1, [pc, #36]	; 12fa8 <__snprintf_chk@plt+0x18e0>
   12f80:	sub	r1, r1, r0
   12f84:	asr	r1, r1, #2
   12f88:	add	r1, r1, r1, lsr #31
   12f8c:	asrs	r1, r1, #1
   12f90:	bxeq	lr
   12f94:	ldr	r3, [pc, #16]	; 12fac <__snprintf_chk@plt+0x18e4>
   12f98:	cmp	r3, #0
   12f9c:	bxeq	lr
   12fa0:	bx	r3
   12fa4:	andeq	r6, r2, ip, lsl #3
   12fa8:	andeq	r6, r2, ip, lsl #3
   12fac:	andeq	r0, r0, r0
   12fb0:	push	{r4, lr}
   12fb4:	ldr	r4, [pc, #24]	; 12fd4 <__snprintf_chk@plt+0x190c>
   12fb8:	ldrb	r3, [r4]
   12fbc:	cmp	r3, #0
   12fc0:	popne	{r4, pc}
   12fc4:	bl	12f4c <__snprintf_chk@plt+0x1884>
   12fc8:	mov	r3, #1
   12fcc:	strb	r3, [r4]
   12fd0:	pop	{r4, pc}
   12fd4:	muleq	r2, ip, r1
   12fd8:	b	12f78 <__snprintf_chk@plt+0x18b0>
   12fdc:	andeq	r0, r0, r0
   12fe0:	ldr	r3, [pc, #104]	; 13050 <__snprintf_chk@plt+0x1988>
   12fe4:	ldr	r2, [r3]
   12fe8:	cmp	r2, #0
   12fec:	bxeq	lr
   12ff0:	cmp	r1, r2
   12ff4:	bne	13000 <__snprintf_chk@plt+0x1938>
   12ff8:	b	13048 <__snprintf_chk@plt+0x1980>
   12ffc:	mov	r2, r3
   13000:	ldr	r3, [r2]
   13004:	cmp	r3, #0
   13008:	bxeq	lr
   1300c:	cmp	r1, r3
   13010:	bne	12ffc <__snprintf_chk@plt+0x1934>
   13014:	push	{r4, lr}
   13018:	mov	r4, r1
   1301c:	ldr	r3, [r1]
   13020:	str	r3, [r2]
   13024:	ldr	r3, [r1, #32]
   13028:	cmp	r3, #0
   1302c:	beq	1303c <__snprintf_chk@plt+0x1974>
   13030:	ldr	r2, [r1, #40]	; 0x28
   13034:	ldr	r1, [r1, #4]
   13038:	blx	r3
   1303c:	mov	r0, r4
   13040:	pop	{r4, lr}
   13044:	b	11380 <free@plt>
   13048:	mov	r2, r3
   1304c:	b	13014 <__snprintf_chk@plt+0x194c>
   13050:	andeq	r6, r2, r0, lsr #3
   13054:	ldr	r3, [pc, #56]	; 13094 <__snprintf_chk@plt+0x19cc>
   13058:	ldr	r2, [r3, #4]
   1305c:	cmp	r2, #0
   13060:	bne	1306c <__snprintf_chk@plt+0x19a4>
   13064:	str	r1, [r3, #4]
   13068:	bx	lr
   1306c:	push	{r4, r5, r6, lr}
   13070:	mov	r3, r1
   13074:	mov	r5, r0
   13078:	mov	r4, r1
   1307c:	mov	r1, r2
   13080:	bl	11458 <XFixesUnionRegion@plt>
   13084:	mov	r1, r4
   13088:	mov	r0, r5
   1308c:	pop	{r4, r5, r6, lr}
   13090:	b	11524 <XFixesDestroyRegion@plt>
   13094:	andeq	r6, r2, r0, lsr #3
   13098:	push	{r4, r5, r6, lr}
   1309c:	mov	r4, r1
   130a0:	ldr	r1, [r1, #120]	; 0x78
   130a4:	mov	r5, r0
   130a8:	cmp	r1, #0
   130ac:	bne	13160 <__snprintf_chk@plt+0x1a98>
   130b0:	ldr	r1, [r4, #124]	; 0x7c
   130b4:	cmp	r1, #0
   130b8:	bne	1314c <__snprintf_chk@plt+0x1a84>
   130bc:	ldr	r3, [r4, #44]	; 0x2c
   130c0:	cmp	r3, #2
   130c4:	bne	13118 <__snprintf_chk@plt+0x1a50>
   130c8:	ldr	r3, [r4, #156]	; 0x9c
   130cc:	adds	r3, r3, #1
   130d0:	movne	r3, #1
   130d4:	ldr	r2, [r4, #132]	; 0x84
   130d8:	str	r3, [r4, #104]	; 0x68
   130dc:	cmp	r2, #0
   130e0:	popeq	{r4, r5, r6, pc}
   130e4:	mov	r2, #0
   130e8:	mov	r1, r2
   130ec:	mov	r0, r5
   130f0:	bl	115b4 <XFixesCreateRegion@plt>
   130f4:	ldr	r2, [r4, #132]	; 0x84
   130f8:	mov	r6, r0
   130fc:	mov	r1, r0
   13100:	mov	r0, r5
   13104:	bl	113bc <XFixesCopyRegion@plt>
   13108:	mov	r1, r6
   1310c:	mov	r0, r5
   13110:	pop	{r4, r5, r6, lr}
   13114:	b	13054 <__snprintf_chk@plt+0x198c>
   13118:	ldr	r1, [r4, #36]	; 0x24
   1311c:	mov	r0, r5
   13120:	bl	1159c <XRenderFindVisualFormat@plt>
   13124:	cmp	r0, #0
   13128:	beq	130c8 <__snprintf_chk@plt+0x1a00>
   1312c:	ldr	r3, [r0, #4]
   13130:	cmp	r3, #1
   13134:	bne	130c8 <__snprintf_chk@plt+0x1a00>
   13138:	ldrsh	r3, [r0, #26]
   1313c:	cmp	r3, #0
   13140:	beq	130c8 <__snprintf_chk@plt+0x1a00>
   13144:	mov	r3, #2
   13148:	b	130d4 <__snprintf_chk@plt+0x1a0c>
   1314c:	mov	r0, r5
   13150:	bl	11494 <XRenderFreePicture@plt>
   13154:	mov	r3, #0
   13158:	str	r3, [r4, #124]	; 0x7c
   1315c:	b	130bc <__snprintf_chk@plt+0x19f4>
   13160:	bl	11494 <XRenderFreePicture@plt>
   13164:	mov	r3, #0
   13168:	str	r3, [r4, #120]	; 0x78
   1316c:	b	130b0 <__snprintf_chk@plt+0x19e8>
   13170:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13174:	sub	sp, sp, #64	; 0x40
   13178:	ldr	r7, [pc, #300]	; 132ac <__snprintf_chk@plt+0x1be4>
   1317c:	ldr	r5, [pc, #300]	; 132b0 <__snprintf_chk@plt+0x1be8>
   13180:	add	r3, sp, #44	; 0x2c
   13184:	add	r9, sp, #56	; 0x38
   13188:	add	r8, sp, #52	; 0x34
   1318c:	mov	ip, #0
   13190:	ldr	lr, [r7]
   13194:	mov	r2, #4
   13198:	str	r3, [sp, #16]
   1319c:	add	r6, sp, #48	; 0x30
   131a0:	mov	r3, #1
   131a4:	add	r4, sp, #40	; 0x28
   131a8:	strd	r8, [sp, #24]
   131ac:	str	r2, [sp, #8]
   131b0:	str	r3, [sp]
   131b4:	str	ip, [sp, #4]
   131b8:	str	r6, [sp, #20]
   131bc:	str	r4, [sp, #12]
   131c0:	ldr	r2, [r5, #8]
   131c4:	mov	r3, ip
   131c8:	str	lr, [sp, #60]	; 0x3c
   131cc:	str	ip, [sp, #36]	; 0x24
   131d0:	mov	r9, r0
   131d4:	mov	sl, r1
   131d8:	bl	11680 <XGetWindowProperty@plt>
   131dc:	cmp	r0, #0
   131e0:	beq	13268 <__snprintf_chk@plt+0x1ba0>
   131e4:	add	r0, sp, #36	; 0x24
   131e8:	add	r3, sp, #56	; 0x38
   131ec:	str	r3, [sp, #4]
   131f0:	str	r0, [sp]
   131f4:	mov	r3, r8
   131f8:	mov	r2, r6
   131fc:	mov	r1, sl
   13200:	mov	r0, r9
   13204:	bl	113a4 <XQueryTree@plt>
   13208:	cmp	r0, #0
   1320c:	beq	13250 <__snprintf_chk@plt+0x1b88>
   13210:	ldr	r3, [sp, #56]	; 0x38
   13214:	cmp	r3, #0
   13218:	movne	r6, #0
   1321c:	beq	13250 <__snprintf_chk@plt+0x1b88>
   13220:	ldr	r3, [sp, #36]	; 0x24
   13224:	mov	r0, r9
   13228:	ldr	r1, [r3, r6, lsl #2]
   1322c:	bl	13170 <__snprintf_chk@plt+0x1aa8>
   13230:	ldr	r3, [r5, #12]
   13234:	cmp	r3, r0
   13238:	mov	r4, r0
   1323c:	bne	1328c <__snprintf_chk@plt+0x1bc4>
   13240:	ldr	r3, [sp, #56]	; 0x38
   13244:	add	r6, r6, #1
   13248:	cmp	r3, r6
   1324c:	bhi	13220 <__snprintf_chk@plt+0x1b58>
   13250:	ldr	r0, [sp, #36]	; 0x24
   13254:	cmp	r0, #0
   13258:	beq	13260 <__snprintf_chk@plt+0x1b98>
   1325c:	bl	113d4 <XFree@plt>
   13260:	ldr	r4, [r5, #12]
   13264:	b	1328c <__snprintf_chk@plt+0x1bc4>
   13268:	ldr	r3, [sp, #56]	; 0x38
   1326c:	cmp	r3, #0
   13270:	beq	131e4 <__snprintf_chk@plt+0x1b1c>
   13274:	mov	r0, r3
   13278:	ldr	r4, [r3]
   1327c:	bl	113d4 <XFree@plt>
   13280:	ldr	r3, [r5, #12]
   13284:	cmp	r4, r3
   13288:	beq	131e4 <__snprintf_chk@plt+0x1b1c>
   1328c:	ldr	r2, [sp, #60]	; 0x3c
   13290:	ldr	r3, [r7]
   13294:	mov	r0, r4
   13298:	cmp	r2, r3
   1329c:	bne	132a8 <__snprintf_chk@plt+0x1be0>
   132a0:	add	sp, sp, #64	; 0x40
   132a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   132a8:	bl	113b0 <__stack_chk_fail@plt>
   132ac:	ldrdeq	r5, [r2], -r0
   132b0:	andeq	r6, r2, r0, lsr #3
   132b4:	push	{r4, r5, lr}
   132b8:	add	r4, r0, r0, lsr #31
   132bc:	sub	sp, sp, #12
   132c0:	asr	r4, r4, #1
   132c4:	ldr	ip, [sp, #24]
   132c8:	sub	lr, r4, r3
   132cc:	sub	r5, r4, r2
   132d0:	add	ip, r4, ip
   132d4:	sub	r2, ip, r2
   132d8:	bic	lr, lr, lr, asr #31
   132dc:	vldr	d7, [pc, #156]	; 13380 <__snprintf_chk@plt+0x1cb8>
   132e0:	ldr	ip, [sp, #28]
   132e4:	bic	r5, r5, r5, asr #31
   132e8:	add	ip, r4, ip
   132ec:	sub	ip, ip, r3
   132f0:	cmp	r2, r0
   132f4:	mla	r3, r0, lr, r5
   132f8:	movge	r2, r0
   132fc:	cmp	ip, r0
   13300:	movge	ip, r0
   13304:	cmp	lr, ip
   13308:	add	r1, r1, r3, lsl #3
   1330c:	lsllt	r0, r0, #3
   13310:	bge	13374 <__snprintf_chk@plt+0x1cac>
   13314:	cmp	r2, r5
   13318:	add	r4, r1, r0
   1331c:	ble	13338 <__snprintf_chk@plt+0x1c70>
   13320:	mov	r3, r5
   13324:	vldmia	r1!, {d6}
   13328:	add	r3, r3, #1
   1332c:	cmp	r3, r2
   13330:	vadd.f64	d7, d7, d6
   13334:	bne	13324 <__snprintf_chk@plt+0x1c5c>
   13338:	add	lr, lr, #1
   1333c:	cmp	lr, ip
   13340:	mov	r1, r4
   13344:	bne	13314 <__snprintf_chk@plt+0x1c4c>
   13348:	vldr	d6, [pc, #56]	; 13388 <__snprintf_chk@plt+0x1cc0>
   1334c:	vcmpe.f64	d7, d6
   13350:	vmrs	APSR_nzcv, fpscr
   13354:	ble	13374 <__snprintf_chk@plt+0x1cac>
   13358:	vldr	d7, [pc, #48]	; 13390 <__snprintf_chk@plt+0x1cc8>
   1335c:	vmul.f64	d0, d0, d7
   13360:	vcvt.u32.f64	s15, d0
   13364:	vstr	s15, [sp, #4]
   13368:	ldrb	r0, [sp, #4]
   1336c:	add	sp, sp, #12
   13370:	pop	{r4, r5, pc}
   13374:	vmul.f64	d0, d0, d7
   13378:	b	13358 <__snprintf_chk@plt+0x1c90>
   1337c:	nop			; (mov r0, r0)
	...
   1338c:	svccc	0x00f00000	; IMB
   13390:	andeq	r0, r0, r0
   13394:	rsbmi	lr, pc, r0
   13398:	ldr	ip, [r0]
   1339c:	cmp	ip, #0
   133a0:	moveq	r3, ip
   133a4:	ldrne	r3, [ip, #4]
   133a8:	cmp	r3, r1
   133ac:	bxeq	lr
   133b0:	push	{lr}		; (str lr, [sp, #-4]!)
   133b4:	ldr	lr, [pc, #124]	; 13438 <__snprintf_chk@plt+0x1d70>
   133b8:	ldr	r2, [lr, #16]
   133bc:	cmp	r2, #0
   133c0:	cmpne	r0, r2
   133c4:	bne	133d0 <__snprintf_chk@plt+0x1d08>
   133c8:	b	13428 <__snprintf_chk@plt+0x1d60>
   133cc:	mov	r2, r3
   133d0:	ldr	r3, [r2]
   133d4:	cmp	r3, #0
   133d8:	cmpne	r0, r3
   133dc:	bne	133cc <__snprintf_chk@plt+0x1d04>
   133e0:	str	ip, [r2]
   133e4:	ldr	r3, [lr, #16]
   133e8:	cmp	r3, #0
   133ec:	beq	13430 <__snprintf_chk@plt+0x1d68>
   133f0:	ldr	r2, [r3, #4]
   133f4:	cmp	r1, r2
   133f8:	bne	1340c <__snprintf_chk@plt+0x1d44>
   133fc:	b	13430 <__snprintf_chk@plt+0x1d68>
   13400:	ldr	r2, [r3, #4]
   13404:	cmp	r1, r2
   13408:	beq	1341c <__snprintf_chk@plt+0x1d54>
   1340c:	mov	ip, r3
   13410:	ldr	r3, [r3]
   13414:	cmp	r3, #0
   13418:	bne	13400 <__snprintf_chk@plt+0x1d38>
   1341c:	str	r3, [r0]
   13420:	str	r0, [ip]
   13424:	pop	{pc}		; (ldr pc, [sp], #4)
   13428:	add	r2, lr, #16
   1342c:	b	133e0 <__snprintf_chk@plt+0x1d18>
   13430:	ldr	ip, [pc, #4]	; 1343c <__snprintf_chk@plt+0x1d74>
   13434:	b	1341c <__snprintf_chk@plt+0x1d54>
   13438:	andeq	r6, r2, r0, lsr #3
   1343c:			; <UNDEFINED> instruction: 0x000261b0
   13440:	push	{r4, lr}
   13444:	mov	r4, r0
   13448:	mov	r0, #8
   1344c:	bl	11464 <malloc@plt>
   13450:	cmp	r0, #0
   13454:	popeq	{r4, pc}
   13458:	ldr	r3, [pc, #24]	; 13478 <__snprintf_chk@plt+0x1db0>
   1345c:	mov	r1, #0
   13460:	str	r4, [r0, #4]
   13464:	ldr	r2, [r3]
   13468:	str	r1, [r0]
   1346c:	str	r0, [r3]
   13470:	str	r0, [r2]
   13474:	pop	{r4, pc}
   13478:	andeq	r6, r2, r8, asr #2
   1347c:	push	{r4, r5, r6, lr}
   13480:	mov	r4, r1
   13484:	ldr	r1, [r1, #132]	; 0x84
   13488:	mov	r6, #0
   1348c:	cmp	r1, r6
   13490:	str	r6, [r4, #108]	; 0x6c
   13494:	mov	r5, r0
   13498:	bne	13504 <__snprintf_chk@plt+0x1e3c>
   1349c:	ldr	r1, [r4, #8]
   134a0:	cmp	r1, #0
   134a4:	bne	13518 <__snprintf_chk@plt+0x1e50>
   134a8:	ldr	r3, [r4, #116]	; 0x74
   134ac:	ldr	r0, [r5, #96]	; 0x60
   134b0:	cmp	r3, #0
   134b4:	add	r0, r0, #1
   134b8:	bne	13578 <__snprintf_chk@plt+0x1eb0>
   134bc:	bl	13440 <__snprintf_chk@plt+0x1d78>
   134c0:	mov	r2, #0
   134c4:	ldr	r1, [r4, #4]
   134c8:	mov	r0, r5
   134cc:	bl	11578 <XSelectInput@plt>
   134d0:	ldr	r3, [r4, #128]	; 0x80
   134d4:	cmp	r3, #0
   134d8:	bne	13554 <__snprintf_chk@plt+0x1e8c>
   134dc:	ldr	r1, [r4, #136]	; 0x88
   134e0:	cmp	r1, #0
   134e4:	bne	13540 <__snprintf_chk@plt+0x1e78>
   134e8:	ldr	r1, [r4, #180]	; 0xb4
   134ec:	cmp	r1, #0
   134f0:	bne	1352c <__snprintf_chk@plt+0x1e64>
   134f4:	ldr	r3, [pc, #160]	; 1359c <__snprintf_chk@plt+0x1ed4>
   134f8:	mov	r2, #1
   134fc:	str	r2, [r3, #20]
   13500:	pop	{r4, r5, r6, pc}
   13504:	bl	13054 <__snprintf_chk@plt+0x198c>
   13508:	ldr	r1, [r4, #8]
   1350c:	str	r6, [r4, #132]	; 0x84
   13510:	cmp	r1, #0
   13514:	beq	134a8 <__snprintf_chk@plt+0x1de0>
   13518:	mov	r0, r5
   1351c:	bl	113ec <XFreePixmap@plt>
   13520:	mov	r3, #0
   13524:	str	r3, [r4, #8]
   13528:	b	134a8 <__snprintf_chk@plt+0x1de0>
   1352c:	mov	r0, r5
   13530:	bl	11524 <XFixesDestroyRegion@plt>
   13534:	mov	r3, #0
   13538:	str	r3, [r4, #180]	; 0xb4
   1353c:	b	134f4 <__snprintf_chk@plt+0x1e2c>
   13540:	mov	r0, r5
   13544:	bl	11494 <XRenderFreePicture@plt>
   13548:	mov	r3, #0
   1354c:	str	r3, [r4, #136]	; 0x88
   13550:	b	134e8 <__snprintf_chk@plt+0x1e20>
   13554:	ldr	r0, [r5, #96]	; 0x60
   13558:	add	r0, r0, #1
   1355c:	bl	13440 <__snprintf_chk@plt+0x1d78>
   13560:	ldr	r1, [r4, #128]	; 0x80
   13564:	mov	r0, r5
   13568:	bl	11524 <XFixesDestroyRegion@plt>
   1356c:	mov	r3, #0
   13570:	str	r3, [r4, #128]	; 0x80
   13574:	b	134dc <__snprintf_chk@plt+0x1e14>
   13578:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1357c:	mov	r0, r5
   13580:	ldr	r1, [r4, #116]	; 0x74
   13584:	bl	11494 <XRenderFreePicture@plt>
   13588:	mov	r3, #0
   1358c:	str	r3, [r4, #116]	; 0x74
   13590:	ldr	r0, [r5, #96]	; 0x60
   13594:	add	r0, r0, #1
   13598:	b	134bc <__snprintf_chk@plt+0x1df4>
   1359c:	andeq	r6, r2, r0, lsr #3
   135a0:	b	1347c <__snprintf_chk@plt+0x1db4>
   135a4:	push	{r4, r5, r6, r7, r8, lr}
   135a8:	ldr	r7, [pc, #352]	; 13710 <__snprintf_chk@plt+0x2048>
   135ac:	ldr	r3, [r7, #16]
   135b0:	cmp	r3, #0
   135b4:	popeq	{r4, r5, r6, r7, r8, pc}
   135b8:	ldr	ip, [r3, #4]
   135bc:	cmp	r1, ip
   135c0:	bne	135cc <__snprintf_chk@plt+0x1f04>
   135c4:	b	13704 <__snprintf_chk@plt+0x203c>
   135c8:	mov	r3, r4
   135cc:	ldr	r4, [r3]
   135d0:	cmp	r4, #0
   135d4:	popeq	{r4, r5, r6, r7, r8, pc}
   135d8:	ldr	ip, [r4, #4]
   135dc:	cmp	ip, r1
   135e0:	bne	135c8 <__snprintf_chk@plt+0x1f00>
   135e4:	mov	r5, r3
   135e8:	cmp	r2, #0
   135ec:	mov	r6, r0
   135f0:	bne	13674 <__snprintf_chk@plt+0x1fac>
   135f4:	ldr	r3, [r4]
   135f8:	str	r3, [r5]
   135fc:	ldr	r3, [r4, #116]	; 0x74
   13600:	cmp	r3, #0
   13604:	bne	136e0 <__snprintf_chk@plt+0x2018>
   13608:	ldr	r1, [r4, #120]	; 0x78
   1360c:	cmp	r1, #0
   13610:	bne	136cc <__snprintf_chk@plt+0x2004>
   13614:	ldr	r1, [r4, #124]	; 0x7c
   13618:	cmp	r1, #0
   1361c:	bne	136b8 <__snprintf_chk@plt+0x1ff0>
   13620:	ldr	r1, [r4, #136]	; 0x88
   13624:	cmp	r1, #0
   13628:	bne	136a4 <__snprintf_chk@plt+0x1fdc>
   1362c:	ldr	r3, [r4, #112]	; 0x70
   13630:	cmp	r3, #0
   13634:	bne	13680 <__snprintf_chk@plt+0x1fb8>
   13638:	ldr	r1, [r7]
   1363c:	cmp	r1, #0
   13640:	bne	13654 <__snprintf_chk@plt+0x1f8c>
   13644:	b	13668 <__snprintf_chk@plt+0x1fa0>
   13648:	ldr	r1, [r1]
   1364c:	cmp	r1, #0
   13650:	beq	13668 <__snprintf_chk@plt+0x1fa0>
   13654:	ldr	r3, [r1, #4]
   13658:	cmp	r3, r4
   1365c:	bne	13648 <__snprintf_chk@plt+0x1f80>
   13660:	mov	r0, r6
   13664:	bl	12fe0 <__snprintf_chk@plt+0x1918>
   13668:	mov	r0, r4
   1366c:	pop	{r4, r5, r6, r7, r8, lr}
   13670:	b	11380 <free@plt>
   13674:	mov	r1, r4
   13678:	bl	1347c <__snprintf_chk@plt+0x1db4>
   1367c:	b	135f4 <__snprintf_chk@plt+0x1f2c>
   13680:	ldr	r0, [r6, #96]	; 0x60
   13684:	add	r0, r0, #1
   13688:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1368c:	ldr	r1, [r4, #112]	; 0x70
   13690:	mov	r0, r6
   13694:	bl	1141c <XDamageDestroy@plt>
   13698:	mov	r3, #0
   1369c:	str	r3, [r4, #112]	; 0x70
   136a0:	b	13638 <__snprintf_chk@plt+0x1f70>
   136a4:	mov	r0, r6
   136a8:	bl	11494 <XRenderFreePicture@plt>
   136ac:	mov	r3, #0
   136b0:	str	r3, [r4, #136]	; 0x88
   136b4:	b	1362c <__snprintf_chk@plt+0x1f64>
   136b8:	mov	r0, r6
   136bc:	bl	11494 <XRenderFreePicture@plt>
   136c0:	mov	r3, #0
   136c4:	str	r3, [r4, #124]	; 0x7c
   136c8:	b	13620 <__snprintf_chk@plt+0x1f58>
   136cc:	mov	r0, r6
   136d0:	bl	11494 <XRenderFreePicture@plt>
   136d4:	mov	r3, #0
   136d8:	str	r3, [r4, #120]	; 0x78
   136dc:	b	13614 <__snprintf_chk@plt+0x1f4c>
   136e0:	ldr	r0, [r6, #96]	; 0x60
   136e4:	add	r0, r0, #1
   136e8:	bl	13440 <__snprintf_chk@plt+0x1d78>
   136ec:	ldr	r1, [r4, #116]	; 0x74
   136f0:	mov	r0, r6
   136f4:	bl	11494 <XRenderFreePicture@plt>
   136f8:	mov	r3, #0
   136fc:	str	r3, [r4, #116]	; 0x74
   13700:	b	13608 <__snprintf_chk@plt+0x1f40>
   13704:	mov	r4, r3
   13708:	add	r5, r7, #16
   1370c:	b	135e8 <__snprintf_chk@plt+0x1f20>
   13710:	andeq	r6, r2, r0, lsr #3
   13714:	ldr	r1, [r1, #4]
   13718:	b	135a4 <__snprintf_chk@plt+0x1edc>
   1371c:	push	{r4, r5, r6, r7, r8, lr}
   13720:	ldr	r5, [pc, #68]	; 1376c <__snprintf_chk@plt+0x20a4>
   13724:	mov	r7, r5
   13728:	ldr	r3, [r7, #24]!
   1372c:	cmp	r3, #0
   13730:	popeq	{r4, r5, r6, r7, r8, pc}
   13734:	ldr	r8, [pc, #52]	; 13770 <__snprintf_chk@plt+0x20a8>
   13738:	mov	r6, r0
   1373c:	ldr	r2, [r3, #4]
   13740:	mov	r0, r3
   13744:	sub	r2, r6, r2
   13748:	cmp	r2, #0
   1374c:	pople	{r4, r5, r6, r7, r8, pc}
   13750:	ldr	r4, [r3]
   13754:	bl	11380 <free@plt>
   13758:	subs	r3, r4, #0
   1375c:	str	r4, [r5, #24]
   13760:	bne	1373c <__snprintf_chk@plt+0x2074>
   13764:	str	r7, [r8]
   13768:	pop	{r4, r5, r6, r7, r8, pc}
   1376c:	andeq	r6, r2, r0, lsr #3
   13770:	andeq	r6, r2, r8, asr #2
   13774:	push	{r4, r5, r6, lr}
   13778:	mov	r5, r0
   1377c:	ldr	r6, [r1, #12]
   13780:	sub	sp, sp, #16
   13784:	mov	r0, r6
   13788:	mov	r4, r1
   1378c:	bl	1371c <__snprintf_chk@plt+0x2054>
   13790:	ldr	r2, [pc, #296]	; 138c0 <__snprintf_chk@plt+0x21f8>
   13794:	ldr	r3, [r2, #24]
   13798:	cmp	r3, #0
   1379c:	beq	137ac <__snprintf_chk@plt+0x20e4>
   137a0:	ldr	r3, [r3, #4]
   137a4:	cmp	r6, r3
   137a8:	beq	13830 <__snprintf_chk@plt+0x2168>
   137ac:	ldrb	lr, [r4, #17]
   137b0:	ldr	r3, [r2, #284]	; 0x11c
   137b4:	cmp	lr, r3
   137b8:	beq	1383c <__snprintf_chk@plt+0x2174>
   137bc:	ldrb	r3, [r4, #16]
   137c0:	ldr	r0, [r2, #296]	; 0x128
   137c4:	ldr	r1, [r2, #292]	; 0x124
   137c8:	cmp	r3, r0
   137cc:	sub	r1, r3, r1
   137d0:	ldr	r0, [r2, #288]	; 0x120
   137d4:	beq	13868 <__snprintf_chk@plt+0x21a0>
   137d8:	cmp	r3, r0
   137dc:	beq	1388c <__snprintf_chk@plt+0x21c4>
   137e0:	cmp	r1, #4
   137e4:	bhi	13894 <__snprintf_chk@plt+0x21cc>
   137e8:	ldr	r0, [pc, #212]	; 138c4 <__snprintf_chk@plt+0x21fc>
   137ec:	ldr	ip, [r0, r1, lsl #2]
   137f0:	cmp	ip, #0
   137f4:	beq	13894 <__snprintf_chk@plt+0x21cc>
   137f8:	ldrb	r1, [ip]
   137fc:	ldr	r0, [pc, #196]	; 138c8 <__snprintf_chk@plt+0x2200>
   13800:	ldr	r2, [pc, #196]	; 138cc <__snprintf_chk@plt+0x2204>
   13804:	cmp	r1, #0
   13808:	ldr	r0, [r0]
   1380c:	moveq	ip, r2
   13810:	ldrb	r1, [r4, #18]
   13814:	ldr	r2, [r4, #12]
   13818:	stm	sp, {ip, lr}
   1381c:	str	r1, [sp, #8]
   13820:	str	r2, [sp, #12]
   13824:	mov	r1, #1
   13828:	ldr	r2, [pc, #160]	; 138d0 <__snprintf_chk@plt+0x2208>
   1382c:	bl	115c0 <__fprintf_chk@plt>
   13830:	mov	r0, #0
   13834:	add	sp, sp, #16
   13838:	pop	{r4, r5, r6, pc}
   1383c:	ldrb	r3, [r4, #18]
   13840:	cmp	r3, #2
   13844:	bne	137bc <__snprintf_chk@plt+0x20f4>
   13848:	ldr	r3, [pc, #120]	; 138c8 <__snprintf_chk@plt+0x2200>
   1384c:	mov	r2, #45	; 0x2d
   13850:	mov	r1, #1
   13854:	ldr	r3, [r3]
   13858:	ldr	r0, [pc, #116]	; 138d4 <__snprintf_chk@plt+0x220c>
   1385c:	bl	11410 <fwrite@plt>
   13860:	mov	r0, #1
   13864:	bl	114ac <exit@plt>
   13868:	ldr	r6, [pc, #104]	; 138d8 <__snprintf_chk@plt+0x2210>
   1386c:	cmp	r3, r0
   13870:	ldr	ip, [pc, #100]	; 138dc <__snprintf_chk@plt+0x2214>
   13874:	moveq	ip, r6
   13878:	cmp	r1, #4
   1387c:	bls	137e8 <__snprintf_chk@plt+0x2120>
   13880:	ldr	r2, [pc, #64]	; 138c8 <__snprintf_chk@plt+0x2200>
   13884:	ldr	r0, [r2]
   13888:	b	13810 <__snprintf_chk@plt+0x2148>
   1388c:	ldr	ip, [pc, #68]	; 138d8 <__snprintf_chk@plt+0x2210>
   13890:	b	13878 <__snprintf_chk@plt+0x21b0>
   13894:	mov	ip, #0
   13898:	strb	ip, [r2, #28]
   1389c:	mov	r1, r3
   138a0:	mov	r0, r5
   138a4:	mov	r3, #256	; 0x100
   138a8:	ldr	r2, [pc, #48]	; 138e0 <__snprintf_chk@plt+0x2218>
   138ac:	bl	11554 <XGetErrorText@plt>
   138b0:	ldrb	r3, [r4, #16]
   138b4:	ldrb	lr, [r4, #17]
   138b8:	ldr	ip, [pc, #32]	; 138e0 <__snprintf_chk@plt+0x2218>
   138bc:	b	137f8 <__snprintf_chk@plt+0x2130>
   138c0:	andeq	r6, r2, r0, lsr #3
   138c4:	andeq	r5, r1, r8, lsr r5
   138c8:	muleq	r2, r0, r1
   138cc:	andeq	r5, r1, r8, asr r5
   138d0:	andeq	r5, r1, r8, lsr #11
   138d4:	andeq	r5, r1, r8, ror r5
   138d8:	andeq	r5, r1, r0, ror #10
   138dc:	andeq	r5, r1, ip, ror #10
   138e0:			; <UNDEFINED> instruction: 0x000261bc
   138e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138e8:	vpush	{d8}
   138ec:	mov	sl, r1
   138f0:	ldr	r6, [pc, #1208]	; 13db0 <__snprintf_chk@plt+0x26e8>
   138f4:	ldr	r3, [r1, #28]
   138f8:	ldr	r1, [r1, #20]
   138fc:	sub	sp, sp, #132	; 0x84
   13900:	lsl	r3, r3, #1
   13904:	uxth	ip, r1
   13908:	uxth	r4, r3
   1390c:	ldr	r2, [sl, #24]
   13910:	add	r5, ip, r4
   13914:	str	ip, [sp, #32]
   13918:	ldr	ip, [pc, #1176]	; 13db8 <__snprintf_chk@plt+0x26f0>
   1391c:	uxth	lr, r2
   13920:	ldr	r9, [sl, #12]
   13924:	ldr	r8, [sl, #16]
   13928:	add	r4, r4, lr
   1392c:	ldr	ip, [ip, #300]	; 0x12c
   13930:	ldr	fp, [r6]
   13934:	uxth	r5, r5
   13938:	uxth	r4, r4
   1393c:	sxth	r7, r9
   13940:	sxth	r6, r8
   13944:	cmp	ip, #0
   13948:	str	r0, [sp, #28]
   1394c:	strh	r5, [sp, #120]	; 0x78
   13950:	strh	r4, [sp, #122]	; 0x7a
   13954:	strh	r7, [sp, #116]	; 0x74
   13958:	strh	r6, [sp, #118]	; 0x76
   1395c:	str	fp, [sp, #124]	; 0x7c
   13960:	beq	13cdc <__snprintf_chk@plt+0x2614>
   13964:	ldr	r0, [pc, #1100]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13968:	ldr	fp, [sl, #160]	; 0xa0
   1396c:	ldr	r0, [r0, #304]	; 0x130
   13970:	cmp	fp, r0
   13974:	beq	13d0c <__snprintf_chk@plt+0x2644>
   13978:	cmp	ip, #1
   1397c:	beq	13f98 <__snprintf_chk@plt+0x28d0>
   13980:	ldr	r0, [sl, #104]	; 0x68
   13984:	cmp	r0, #2
   13988:	beq	13cdc <__snprintf_chk@plt+0x2614>
   1398c:	ldr	lr, [pc, #1056]	; 13db4 <__snprintf_chk@plt+0x26ec>
   13990:	ldr	fp, [sl, #136]	; 0x88
   13994:	ldr	ip, [lr, #4]
   13998:	ldr	lr, [lr, #8]
   1399c:	cmp	fp, #0
   139a0:	str	fp, [sp, #92]	; 0x5c
   139a4:	str	ip, [sp, #32]
   139a8:	str	lr, [sp, #40]	; 0x28
   139ac:	str	ip, [sl, #140]	; 0x8c
   139b0:	str	lr, [sl, #144]	; 0x90
   139b4:	bne	13c34 <__snprintf_chk@plt+0x256c>
   139b8:	cmp	r0, #1
   139bc:	ldr	r0, [pc, #1008]	; 13db4 <__snprintf_chk@plt+0x26ec>
   139c0:	vldreq	s15, [sl, #156]	; 0x9c
   139c4:	vldreq	d6, [pc, #980]	; 13da0 <__snprintf_chk@plt+0x26d8>
   139c8:	vldr	d8, [r0, #16]
   139cc:	ldr	r0, [pc, #996]	; 13db8 <__snprintf_chk@plt+0x26f0>
   139d0:	vcvteq.f64.u32	d7, s15
   139d4:	add	r1, r1, r3
   139d8:	ldr	r0, [r0, #312]	; 0x138
   139dc:	add	r2, r2, r3
   139e0:	str	r2, [sp, #52]	; 0x34
   139e4:	ldr	r3, [r0]
   139e8:	str	r1, [sp, #36]	; 0x24
   139ec:	add	r2, r2, r3
   139f0:	vmuleq.f64	d7, d7, d8
   139f4:	add	fp, r1, r3
   139f8:	str	r3, [sp, #84]	; 0x54
   139fc:	mul	r0, r2, fp
   13a00:	add	r3, r3, r3, lsr #31
   13a04:	str	r2, [sp, #48]	; 0x30
   13a08:	asr	r1, r3, #1
   13a0c:	str	r1, [sp, #80]	; 0x50
   13a10:	vdiveq.f64	d8, d7, d6
   13a14:	vldr	d7, [pc, #908]	; 13da8 <__snprintf_chk@plt+0x26e0>
   13a18:	str	r0, [sp, #104]	; 0x68
   13a1c:	vmul.f64	d7, d8, d7
   13a20:	vcvt.s32.f64	s15, d7
   13a24:	vstr	s15, [sp, #96]	; 0x60
   13a28:	bl	11464 <malloc@plt>
   13a2c:	subs	r1, r0, #0
   13a30:	str	r1, [sp, #88]	; 0x58
   13a34:	beq	13f64 <__snprintf_chk@plt+0x289c>
   13a38:	ldr	lr, [sp, #28]
   13a3c:	mov	r0, #8
   13a40:	mov	ip, #0
   13a44:	ldr	r3, [lr, #132]	; 0x84
   13a48:	ldr	r2, [lr, #140]	; 0x8c
   13a4c:	add	r3, r3, r3, lsl #2
   13a50:	add	r3, r2, r3, lsl #4
   13a54:	mov	r2, r0
   13a58:	ldr	r1, [r3, #40]	; 0x28
   13a5c:	ldr	r3, [sp, #48]	; 0x30
   13a60:	str	r0, [sp, #16]
   13a64:	str	r3, [sp, #12]
   13a68:	ldr	r3, [sp, #88]	; 0x58
   13a6c:	str	fp, [sp, #20]
   13a70:	str	r3, [sp, #4]
   13a74:	str	fp, [sp, #8]
   13a78:	mov	r3, #2
   13a7c:	str	ip, [sp]
   13a80:	mov	r0, lr
   13a84:	bl	116a4 <XCreateImage@plt>
   13a88:	subs	r3, r0, #0
   13a8c:	str	r3, [sp, #100]	; 0x64
   13a90:	beq	14124 <__snprintf_chk@plt+0x2a5c>
   13a94:	ldr	r3, [pc, #792]	; 13db4 <__snprintf_chk@plt+0x26ec>
   13a98:	ldr	r1, [r3, #24]
   13a9c:	cmp	r1, #0
   13aa0:	str	r1, [sp, #40]	; 0x28
   13aa4:	ble	14008 <__snprintf_chk@plt+0x2940>
   13aa8:	ldr	r2, [pc, #776]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13aac:	ldr	r0, [sp, #96]	; 0x60
   13ab0:	add	r3, r1, #1
   13ab4:	ldr	r2, [r2, #316]	; 0x13c
   13ab8:	mla	r3, r0, r3, r2
   13abc:	ldrb	r1, [r3, r1]
   13ac0:	ldr	r2, [sp, #104]	; 0x68
   13ac4:	ldr	r0, [sp, #88]	; 0x58
   13ac8:	bl	11560 <memset@plt>
   13acc:	ldr	r2, [sp, #48]	; 0x30
   13ad0:	ldr	r1, [sp, #84]	; 0x54
   13ad4:	add	r3, r2, r2, lsr #31
   13ad8:	cmp	r1, r3, asr #1
   13adc:	addgt	r3, r2, #1
   13ae0:	ldrle	r3, [sp, #84]	; 0x54
   13ae4:	addgt	r3, r3, r3, lsr #31
   13ae8:	ldr	r2, [sp, #84]	; 0x54
   13aec:	asrgt	r3, r3, #1
   13af0:	str	r3, [sp, #60]	; 0x3c
   13af4:	add	r3, fp, fp, lsr #31
   13af8:	cmp	r2, r3, asr #1
   13afc:	addgt	r3, fp, #1
   13b00:	ldrle	r3, [sp, #84]	; 0x54
   13b04:	addgt	r3, r3, r3, lsr #31
   13b08:	asrgt	r3, r3, #1
   13b0c:	str	r3, [sp, #44]	; 0x2c
   13b10:	ldr	r3, [sp, #60]	; 0x3c
   13b14:	cmp	r3, #0
   13b18:	ble	13e4c <__snprintf_chk@plt+0x2784>
   13b1c:	ldr	r3, [sp, #40]	; 0x28
   13b20:	ldr	lr, [sp, #96]	; 0x60
   13b24:	add	r3, r3, #1
   13b28:	str	r3, [sp, #72]	; 0x48
   13b2c:	mul	r3, r3, r3
   13b30:	ldr	r1, [sp, #80]	; 0x50
   13b34:	ldr	r0, [pc, #636]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13b38:	ldr	r2, [sp, #48]	; 0x30
   13b3c:	mla	r3, lr, r3, r1
   13b40:	sub	r6, r2, #1
   13b44:	ldr	r2, [r0, #320]	; 0x140
   13b48:	mul	r6, fp, r6
   13b4c:	add	r3, r2, r3
   13b50:	ldr	r2, [sp, #88]	; 0x58
   13b54:	rsb	ip, r1, #0
   13b58:	sub	r4, r2, #1
   13b5c:	ldr	r2, [sp, #60]	; 0x3c
   13b60:	ldr	r9, [r0, #312]	; 0x138
   13b64:	sub	r2, r2, r1
   13b68:	str	r2, [sp, #68]	; 0x44
   13b6c:	ldr	r2, [sp, #44]	; 0x2c
   13b70:	str	sl, [sp, #108]	; 0x6c
   13b74:	mov	r8, #0
   13b78:	mov	sl, ip
   13b7c:	sub	r2, r2, r1
   13b80:	str	ip, [sp, #76]	; 0x4c
   13b84:	str	r3, [sp, #32]
   13b88:	str	r2, [sp, #64]	; 0x40
   13b8c:	ldr	r3, [sp, #44]	; 0x2c
   13b90:	cmp	r3, #0
   13b94:	addle	r3, fp, r4
   13b98:	strle	r3, [sp, #56]	; 0x38
   13b9c:	ble	13d20 <__snprintf_chk@plt+0x2658>
   13ba0:	ldr	r3, [sp, #40]	; 0x28
   13ba4:	ldr	r2, [sp, #60]	; 0x3c
   13ba8:	ldr	r1, [sp, #44]	; 0x2c
   13bac:	add	r7, fp, r4
   13bb0:	cmp	r3, r2
   13bb4:	cmpeq	r3, r1
   13bb8:	moveq	r3, #1
   13bbc:	movne	r3, #0
   13bc0:	str	r7, [sp, #56]	; 0x38
   13bc4:	str	r3, [sp, #48]	; 0x30
   13bc8:	ldr	r5, [sp, #76]	; 0x4c
   13bcc:	b	13c1c <__snprintf_chk@plt+0x2554>
   13bd0:	ldr	r3, [sp, #52]	; 0x34
   13bd4:	ldrd	r0, [r9]
   13bd8:	str	r3, [sp, #4]
   13bdc:	ldr	r3, [sp, #36]	; 0x24
   13be0:	mov	r2, r5
   13be4:	str	r3, [sp]
   13be8:	vmov.f64	d0, d8
   13bec:	mov	r3, sl
   13bf0:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   13bf4:	ldr	r1, [sp, #64]	; 0x40
   13bf8:	strb	r0, [r4, #1]!
   13bfc:	sub	r3, r7, r8
   13c00:	add	r5, r5, #1
   13c04:	sub	r2, r4, r8
   13c08:	cmp	r1, r5
   13c0c:	strb	r0, [r2, r6]
   13c10:	strb	r0, [r3, r6]
   13c14:	strb	r0, [r7], #-1
   13c18:	beq	13d20 <__snprintf_chk@plt+0x2658>
   13c1c:	ldr	r3, [sp, #48]	; 0x30
   13c20:	cmp	r3, #0
   13c24:	beq	13bd0 <__snprintf_chk@plt+0x2508>
   13c28:	ldr	r3, [sp, #32]
   13c2c:	ldrb	r0, [r3, r5]
   13c30:	b	13bf4 <__snprintf_chk@plt+0x252c>
   13c34:	ldr	r2, [sl, #152]	; 0x98
   13c38:	ldr	r1, [sl, #148]	; 0x94
   13c3c:	uxth	fp, lr
   13c40:	uxth	r3, ip
   13c44:	uxth	lr, r2
   13c48:	uxth	r0, r1
   13c4c:	str	r0, [sp, #32]
   13c50:	add	r9, r3, r9
   13c54:	add	fp, fp, r8
   13c58:	uxth	r9, r9
   13c5c:	uxth	fp, fp
   13c60:	sxth	r3, r9
   13c64:	cmp	r3, r7
   13c68:	sxth	r0, fp
   13c6c:	bge	13c88 <__snprintf_chk@plt+0x25c0>
   13c70:	add	r5, r5, r7
   13c74:	sub	r5, r5, r9
   13c78:	mov	r7, r3
   13c7c:	uxth	r5, r5
   13c80:	strh	r5, [sp, #120]	; 0x78
   13c84:	strh	r3, [sp, #116]	; 0x74
   13c88:	cmp	r0, r6
   13c8c:	bge	13ca8 <__snprintf_chk@plt+0x25e0>
   13c90:	add	r4, r4, r6
   13c94:	sub	r4, r4, fp
   13c98:	mov	r6, r0
   13c9c:	uxth	r4, r4
   13ca0:	strh	r4, [sp, #122]	; 0x7a
   13ca4:	strh	r0, [sp, #118]	; 0x76
   13ca8:	uxtah	r1, r3, r1
   13cac:	add	r5, r7, r5
   13cb0:	cmp	r1, r5
   13cb4:	uxtah	r2, r0, r2
   13cb8:	ldrgt	r3, [sp, #32]
   13cbc:	add	r4, r6, r4
   13cc0:	addgt	r9, r9, r3
   13cc4:	subgt	r7, r9, r7
   13cc8:	strhgt	r7, [sp, #120]	; 0x78
   13ccc:	cmp	r2, r4
   13cd0:	addgt	fp, fp, lr
   13cd4:	subgt	r6, fp, r6
   13cd8:	strhgt	r6, [sp, #122]	; 0x7a
   13cdc:	mov	r2, #1
   13ce0:	ldr	r0, [sp, #28]
   13ce4:	add	r1, sp, #116	; 0x74
   13ce8:	bl	115b4 <XFixesCreateRegion@plt>
   13cec:	ldr	r3, [pc, #188]	; 13db0 <__snprintf_chk@plt+0x26e8>
   13cf0:	ldr	r2, [sp, #124]	; 0x7c
   13cf4:	ldr	r3, [r3]
   13cf8:	cmp	r2, r3
   13cfc:	bne	14130 <__snprintf_chk@plt+0x2a68>
   13d00:	add	sp, sp, #132	; 0x84
   13d04:	vpop	{d8}
   13d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d0c:	ldr	r0, [pc, #164]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13d10:	ldr	r0, [r0, #308]	; 0x134
   13d14:	cmp	r0, #0
   13d18:	bne	13cdc <__snprintf_chk@plt+0x2614>
   13d1c:	b	13978 <__snprintf_chk@plt+0x22b0>
   13d20:	ldr	r3, [sp, #68]	; 0x44
   13d24:	add	sl, sl, #1
   13d28:	cmp	r3, sl
   13d2c:	ldr	r2, [sp, #72]	; 0x48
   13d30:	ldr	r3, [sp, #32]
   13d34:	add	r8, r8, fp
   13d38:	add	r3, r3, r2
   13d3c:	sub	r6, r6, fp
   13d40:	str	r3, [sp, #32]
   13d44:	ldr	r4, [sp, #56]	; 0x38
   13d48:	bne	13b8c <__snprintf_chk@plt+0x24c4>
   13d4c:	ldr	r3, [sp, #84]	; 0x54
   13d50:	ldr	sl, [sp, #108]	; 0x6c
   13d54:	sub	r6, fp, r3, lsl #1
   13d58:	cmp	r6, #0
   13d5c:	ble	13e4c <__snprintf_chk@plt+0x2784>
   13d60:	ldr	r3, [sp, #60]	; 0x3c
   13d64:	ldr	r2, [sp, #88]	; 0x58
   13d68:	add	r7, r3, #1
   13d6c:	ldr	r3, [sp, #104]	; 0x68
   13d70:	str	sl, [sp, #48]	; 0x30
   13d74:	sub	r4, r3, fp
   13d78:	ldr	r3, [sp, #96]	; 0x60
   13d7c:	ldr	sl, [sp, #68]	; 0x44
   13d80:	mul	r7, r3, r7
   13d84:	ldr	r3, [sp, #84]	; 0x54
   13d88:	str	r7, [sp, #32]
   13d8c:	add	r4, r4, r3
   13d90:	add	r4, r2, r4
   13d94:	add	r5, r2, r3
   13d98:	ldr	r7, [sp, #76]	; 0x4c
   13d9c:	b	13e18 <__snprintf_chk@plt+0x2750>
   13da0:			; <UNDEFINED> instruction: 0xffe00000
   13da4:	strdmi	pc, [pc, #255]	; 13eab <__snprintf_chk@plt+0x27e3>
   13da8:	andeq	r0, r0, r0
   13dac:	eorsmi	r0, r9, r0
   13db0:	ldrdeq	r5, [r2], -r0
   13db4:	andeq	r6, r2, r8, asr #2
   13db8:	andeq	r6, r2, r0, lsr #3
   13dbc:	ldr	r3, [sp, #52]	; 0x34
   13dc0:	ldrd	r0, [r9]
   13dc4:	str	r3, [sp, #4]
   13dc8:	ldr	r3, [sp, #36]	; 0x24
   13dcc:	ldr	r2, [sp, #80]	; 0x50
   13dd0:	str	r3, [sp]
   13dd4:	vmov.f64	d0, d8
   13dd8:	mov	r3, r7
   13ddc:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   13de0:	mov	r8, r0
   13de4:	mov	r2, r6
   13de8:	mov	r1, r8
   13dec:	mov	r0, r5
   13df0:	bl	11560 <memset@plt>
   13df4:	add	r7, r7, #1
   13df8:	mov	r0, r4
   13dfc:	mov	r2, r6
   13e00:	mov	r1, r8
   13e04:	bl	11560 <memset@plt>
   13e08:	cmp	sl, r7
   13e0c:	add	r5, r5, fp
   13e10:	sub	r4, r4, fp
   13e14:	beq	13e48 <__snprintf_chk@plt+0x2780>
   13e18:	ldr	r3, [sp, #40]	; 0x28
   13e1c:	ldr	r2, [sp, #60]	; 0x3c
   13e20:	cmp	r3, r2
   13e24:	bne	13dbc <__snprintf_chk@plt+0x26f4>
   13e28:	ldr	r3, [pc, #-120]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13e2c:	ldr	r2, [sp, #32]
   13e30:	ldr	r3, [r3, #316]	; 0x13c
   13e34:	add	r3, r3, r2
   13e38:	ldr	r2, [sp, #80]	; 0x50
   13e3c:	add	r3, r3, r2
   13e40:	ldrb	r8, [r3, r7]
   13e44:	b	13de4 <__snprintf_chk@plt+0x271c>
   13e48:	ldr	sl, [sp, #48]	; 0x30
   13e4c:	ldr	r3, [sp, #44]	; 0x2c
   13e50:	cmp	r3, #0
   13e54:	ble	13f04 <__snprintf_chk@plt+0x283c>
   13e58:	ldr	r2, [pc, #-168]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13e5c:	ldr	r8, [sp, #44]	; 0x2c
   13e60:	ldr	r1, [sp, #96]	; 0x60
   13e64:	ldr	r3, [r2, #316]	; 0x13c
   13e68:	add	r7, r8, #1
   13e6c:	ldr	r9, [sp, #84]	; 0x54
   13e70:	mla	r7, r1, r7, r3
   13e74:	add	r5, r9, #1
   13e78:	ldr	r3, [sp, #88]	; 0x58
   13e7c:	str	sl, [sp, #44]	; 0x2c
   13e80:	mla	r5, fp, r5, r3
   13e84:	str	r7, [sp, #32]
   13e88:	ldr	r6, [r2, #312]	; 0x138
   13e8c:	ldr	sl, [sp, #80]	; 0x50
   13e90:	ldr	r7, [sp, #52]	; 0x34
   13e94:	mov	r4, #0
   13e98:	ldr	r3, [sp, #40]	; 0x28
   13e9c:	cmp	r3, r8
   13ea0:	beq	13f8c <__snprintf_chk@plt+0x28c4>
   13ea4:	ldr	r3, [sp, #36]	; 0x24
   13ea8:	ldrd	r0, [r6]
   13eac:	sub	r2, r4, sl
   13eb0:	str	r3, [sp]
   13eb4:	str	r7, [sp, #4]
   13eb8:	mov	r3, sl
   13ebc:	vmov.f64	d0, d8
   13ec0:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   13ec4:	cmp	r7, r9
   13ec8:	subgt	r3, r5, r4
   13ecc:	movgt	r2, r9
   13ed0:	subgt	ip, r4, fp
   13ed4:	ble	13ef4 <__snprintf_chk@plt+0x282c>
   13ed8:	add	r1, ip, r3
   13edc:	add	r2, r2, #1
   13ee0:	cmp	r7, r2
   13ee4:	strb	r0, [r1, r4]
   13ee8:	strb	r0, [r3, #-1]
   13eec:	add	r3, r3, fp
   13ef0:	bne	13ed8 <__snprintf_chk@plt+0x2810>
   13ef4:	add	r4, r4, #1
   13ef8:	cmp	r8, r4
   13efc:	bne	13e98 <__snprintf_chk@plt+0x27d0>
   13f00:	ldr	sl, [sp, #44]	; 0x2c
   13f04:	ldr	r2, [sp, #100]	; 0x64
   13f08:	ldr	r1, [pc, #-344]	; 13db8 <__snprintf_chk@plt+0x26f0>
   13f0c:	mov	r0, #8
   13f10:	ldrd	r2, [r2]
   13f14:	ldr	r1, [r1, #324]	; 0x144
   13f18:	str	r0, [sp]
   13f1c:	ldr	r0, [sp, #28]
   13f20:	bl	116b0 <XCreatePixmap@plt>
   13f24:	subs	r4, r0, #0
   13f28:	bne	13fb4 <__snprintf_chk@plt+0x28ec>
   13f2c:	ldr	r0, [sp, #100]	; 0x64
   13f30:	str	r4, [sp, #92]	; 0x5c
   13f34:	ldr	r3, [r0, #68]	; 0x44
   13f38:	blx	r3
   13f3c:	ldr	r3, [sl, #140]	; 0x8c
   13f40:	ldrsh	r7, [sp, #116]	; 0x74
   13f44:	ldrh	r5, [sp, #120]	; 0x78
   13f48:	ldrsh	r6, [sp, #118]	; 0x76
   13f4c:	ldrh	r4, [sp, #122]	; 0x7a
   13f50:	ldr	r9, [sl, #12]
   13f54:	ldr	r8, [sl, #16]
   13f58:	str	r3, [sp, #32]
   13f5c:	ldr	r3, [sl, #144]	; 0x90
   13f60:	str	r3, [sp, #40]	; 0x28
   13f64:	ldr	r1, [sl, #148]	; 0x94
   13f68:	ldr	r2, [sl, #152]	; 0x98
   13f6c:	ldrh	r3, [sp, #32]
   13f70:	uxth	r0, r1
   13f74:	str	r0, [sp, #32]
   13f78:	ldr	r0, [sp, #92]	; 0x5c
   13f7c:	ldrh	fp, [sp, #40]	; 0x28
   13f80:	str	r0, [sl, #136]	; 0x88
   13f84:	uxth	lr, r2
   13f88:	b	13c50 <__snprintf_chk@plt+0x2588>
   13f8c:	ldr	r3, [sp, #32]
   13f90:	ldrb	r0, [r3, r4]
   13f94:	b	13ec4 <__snprintf_chk@plt+0x27fc>
   13f98:	mov	r3, #2
   13f9c:	mov	fp, #7
   13fa0:	str	r1, [sl, #148]	; 0x94
   13fa4:	str	r2, [sl, #152]	; 0x98
   13fa8:	str	r3, [sl, #140]	; 0x8c
   13fac:	str	fp, [sl, #144]	; 0x90
   13fb0:	b	13c50 <__snprintf_chk@plt+0x2588>
   13fb4:	ldr	r6, [sp, #28]
   13fb8:	mov	r1, #2
   13fbc:	mov	r0, r6
   13fc0:	bl	11548 <XRenderFindStandardFormat@plt>
   13fc4:	mov	r5, #0
   13fc8:	str	r5, [sp]
   13fcc:	mov	r3, r5
   13fd0:	mov	r1, r4
   13fd4:	mov	r2, r0
   13fd8:	mov	r0, r6
   13fdc:	bl	11374 <XRenderCreatePicture@plt>
   13fe0:	subs	fp, r0, #0
   13fe4:	bne	1403c <__snprintf_chk@plt+0x2974>
   13fe8:	ldr	r0, [sp, #100]	; 0x64
   13fec:	ldr	r3, [r0, #68]	; 0x44
   13ff0:	blx	r3
   13ff4:	mov	r1, r4
   13ff8:	mov	r0, r6
   13ffc:	str	fp, [sp, #92]	; 0x5c
   14000:	bl	113ec <XFreePixmap@plt>
   14004:	b	13f3c <__snprintf_chk@plt+0x2874>
   14008:	ldr	r3, [pc, #-600]	; 13db8 <__snprintf_chk@plt+0x26f0>
   1400c:	ldr	ip, [sp, #52]	; 0x34
   14010:	ldr	r2, [sp, #80]	; 0x50
   14014:	ldr	r0, [r3, #312]	; 0x138
   14018:	vmov.f64	d0, d8
   1401c:	mov	r3, r2
   14020:	ldrd	r0, [r0]
   14024:	str	ip, [sp, #4]
   14028:	ldr	ip, [sp, #36]	; 0x24
   1402c:	str	ip, [sp]
   14030:	bl	132b4 <__snprintf_chk@plt+0x1bec>
   14034:	mov	r1, r0
   14038:	b	13ac0 <__snprintf_chk@plt+0x23f8>
   1403c:	mov	r3, r5
   14040:	mov	r2, r5
   14044:	mov	r1, r4
   14048:	ldr	r0, [sp, #28]
   1404c:	bl	115e4 <XCreateGC@plt>
   14050:	subs	r6, r0, #0
   14054:	beq	140f8 <__snprintf_chk@plt+0x2a30>
   14058:	ldr	r7, [sp, #100]	; 0x64
   1405c:	ldr	r8, [sp, #28]
   14060:	mov	r3, r7
   14064:	ldr	r2, [r7, #4]
   14068:	mov	r0, r8
   1406c:	str	r2, [sp, #20]
   14070:	ldr	r1, [r7]
   14074:	mov	r2, r6
   14078:	str	r1, [sp, #16]
   1407c:	str	r5, [sp, #12]
   14080:	mov	r1, r4
   14084:	str	r5, [sp, #8]
   14088:	str	r5, [sp, #4]
   1408c:	str	r5, [sp]
   14090:	bl	11650 <XPutImage@plt>
   14094:	ldr	r3, [r7]
   14098:	mov	r1, r6
   1409c:	str	r3, [sl, #148]	; 0x94
   140a0:	ldr	r3, [r7, #4]
   140a4:	mov	r0, r8
   140a8:	str	r3, [sl, #152]	; 0x98
   140ac:	bl	11674 <XFreeGC@plt>
   140b0:	ldr	r3, [r7, #68]	; 0x44
   140b4:	mov	r0, r7
   140b8:	blx	r3
   140bc:	mov	r1, r4
   140c0:	mov	r0, r8
   140c4:	bl	113ec <XFreePixmap@plt>
   140c8:	ldr	r3, [sl, #140]	; 0x8c
   140cc:	ldrsh	r7, [sp, #116]	; 0x74
   140d0:	str	r3, [sp, #32]
   140d4:	ldr	r3, [sl, #144]	; 0x90
   140d8:	ldrh	r5, [sp, #120]	; 0x78
   140dc:	ldrsh	r6, [sp, #118]	; 0x76
   140e0:	ldrh	r4, [sp, #122]	; 0x7a
   140e4:	ldr	r9, [sl, #12]
   140e8:	ldr	r8, [sl, #16]
   140ec:	str	r3, [sp, #40]	; 0x28
   140f0:	str	fp, [sp, #92]	; 0x5c
   140f4:	b	13f64 <__snprintf_chk@plt+0x289c>
   140f8:	ldr	r0, [sp, #100]	; 0x64
   140fc:	ldr	r3, [r0, #68]	; 0x44
   14100:	blx	r3
   14104:	mov	r1, r4
   14108:	ldr	r4, [sp, #28]
   1410c:	mov	r0, r4
   14110:	bl	113ec <XFreePixmap@plt>
   14114:	mov	r1, fp
   14118:	mov	r0, r4
   1411c:	bl	11494 <XRenderFreePicture@plt>
   14120:	b	13f3c <__snprintf_chk@plt+0x2874>
   14124:	ldr	r0, [sp, #88]	; 0x58
   14128:	bl	11380 <free@plt>
   1412c:	b	13f3c <__snprintf_chk@plt+0x2874>
   14130:	bl	113b0 <__stack_chk_fail@plt>
   14134:	push	{r4, r5, r6, r7, lr}
   14138:	vpush	{d8}
   1413c:	ldr	r5, [pc, #292]	; 14268 <__snprintf_chk@plt+0x2ba0>
   14140:	ldr	r3, [pc, #292]	; 1426c <__snprintf_chk@plt+0x2ba4>
   14144:	cmp	r1, #0
   14148:	sub	sp, sp, #84	; 0x54
   1414c:	ldr	r2, [r5]
   14150:	vmov.f64	d8, d0
   14154:	str	r2, [sp, #76]	; 0x4c
   14158:	ldr	r1, [r3, #324]	; 0x144
   1415c:	mov	r4, r0
   14160:	beq	14228 <__snprintf_chk@plt+0x2b60>
   14164:	mov	r3, #1
   14168:	mov	r2, #32
   1416c:	str	r2, [sp]
   14170:	mov	r2, r3
   14174:	bl	116b0 <XCreatePixmap@plt>
   14178:	subs	r7, r0, #0
   1417c:	movne	r3, #1
   14180:	strne	r3, [sp, #24]
   14184:	movne	r1, #0
   14188:	beq	14250 <__snprintf_chk@plt+0x2b88>
   1418c:	mov	r0, r4
   14190:	bl	11548 <XRenderFindStandardFormat@plt>
   14194:	add	r3, sp, #24
   14198:	str	r3, [sp]
   1419c:	mov	r1, r7
   141a0:	mov	r3, #1
   141a4:	mov	r2, r0
   141a8:	mov	r0, r4
   141ac:	bl	11374 <XRenderCreatePicture@plt>
   141b0:	subs	r6, r0, #0
   141b4:	beq	141fc <__snprintf_chk@plt+0x2b34>
   141b8:	vldr	d7, [pc, #160]	; 14260 <__snprintf_chk@plt+0x2b98>
   141bc:	mov	r2, #0
   141c0:	mov	r1, #1
   141c4:	str	r2, [sp, #4]
   141c8:	vmul.f64	d8, d8, d7
   141cc:	str	r2, [sp]
   141d0:	str	r2, [sp, #16]
   141d4:	strh	r2, [sp, #20]
   141d8:	str	r1, [sp, #12]
   141dc:	str	r1, [sp, #8]
   141e0:	add	r3, sp, #16
   141e4:	mov	r2, r6
   141e8:	mov	r0, r4
   141ec:	vcvt.u32.f64	s16, d8
   141f0:	vmov	ip, s16
   141f4:	strh	ip, [sp, #22]
   141f8:	bl	115d8 <XRenderFillRectangle@plt>
   141fc:	mov	r1, r7
   14200:	mov	r0, r4
   14204:	bl	113ec <XFreePixmap@plt>
   14208:	ldr	r2, [sp, #76]	; 0x4c
   1420c:	ldr	r3, [r5]
   14210:	mov	r0, r6
   14214:	cmp	r2, r3
   14218:	bne	14258 <__snprintf_chk@plt+0x2b90>
   1421c:	add	sp, sp, #84	; 0x54
   14220:	vpop	{d8}
   14224:	pop	{r4, r5, r6, r7, pc}
   14228:	mov	r3, #1
   1422c:	mov	r2, #8
   14230:	str	r2, [sp]
   14234:	mov	r2, r3
   14238:	bl	116b0 <XCreatePixmap@plt>
   1423c:	subs	r7, r0, #0
   14240:	movne	r3, #1
   14244:	strne	r3, [sp, #24]
   14248:	movne	r1, #2
   1424c:	bne	1418c <__snprintf_chk@plt+0x2ac4>
   14250:	mov	r6, #0
   14254:	b	14208 <__snprintf_chk@plt+0x2b40>
   14258:	bl	113b0 <__stack_chk_fail@plt>
   1425c:	nop			; (mov r0, r0)
   14260:	andeq	r0, r0, r0
   14264:	rscmi	pc, pc, r0, ror #31
   14268:	ldrdeq	r5, [r2], -r0
   1426c:	andeq	r6, r2, r0, lsr #3
   14270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14274:	vpush	{d8-d9}
   14278:	subs	r3, r1, #0
   1427c:	ldr	r6, [pc, #1396]	; 147f8 <__snprintf_chk@plt+0x3130>
   14280:	mov	fp, r0
   14284:	sub	sp, sp, #148	; 0x94
   14288:	str	r3, [sp, #44]	; 0x2c
   1428c:	ldr	r3, [pc, #1384]	; 147fc <__snprintf_chk@plt+0x3134>
   14290:	ldr	r3, [r3]
   14294:	str	r3, [sp, #140]	; 0x8c
   14298:	beq	14a54 <__snprintf_chk@plt+0x338c>
   1429c:	ldr	r4, [r6, #336]	; 0x150
   142a0:	cmp	r4, #0
   142a4:	beq	149dc <__snprintf_chk@plt+0x3314>
   142a8:	ldr	r2, [sp, #44]	; 0x2c
   142ac:	mov	r3, #0
   142b0:	str	r2, [sp]
   142b4:	ldr	r1, [r6, #344]	; 0x158
   142b8:	mov	r2, r3
   142bc:	mov	r0, fp
   142c0:	bl	11608 <XFixesSetPictureClipRegion@plt>
   142c4:	ldr	r5, [r6, #16]
   142c8:	cmp	r5, #0
   142cc:	beq	14698 <__snprintf_chk@plt+0x2fd0>
   142d0:	mov	r4, #0
   142d4:	mov	sl, #1
   142d8:	ldr	r3, [r5, #108]	; 0x6c
   142dc:	cmp	r3, #0
   142e0:	beq	143e4 <__snprintf_chk@plt+0x2d1c>
   142e4:	ldr	r2, [r5, #12]
   142e8:	ldr	r3, [r5, #20]
   142ec:	add	r3, r2, r3
   142f0:	cmp	r3, #0
   142f4:	ble	143e4 <__snprintf_chk@plt+0x2d1c>
   142f8:	ldr	r1, [r5, #16]
   142fc:	ldr	r3, [r5, #24]
   14300:	add	r3, r1, r3
   14304:	cmp	r3, #0
   14308:	ble	143e4 <__snprintf_chk@plt+0x2d1c>
   1430c:	ldr	r3, [r6, #328]	; 0x148
   14310:	cmp	r2, r3
   14314:	bge	143e4 <__snprintf_chk@plt+0x2d1c>
   14318:	ldr	r3, [r6, #332]	; 0x14c
   1431c:	cmp	r1, r3
   14320:	bge	143e4 <__snprintf_chk@plt+0x2d1c>
   14324:	ldr	r3, [r5, #116]	; 0x74
   14328:	cmp	r3, #0
   1432c:	bne	1437c <__snprintf_chk@plt+0x2cb4>
   14330:	ldr	r3, [r6, #348]	; 0x15c
   14334:	ldr	r7, [r5, #4]
   14338:	cmp	r3, #0
   1433c:	ldr	r0, [r5, #8]
   14340:	bne	147c8 <__snprintf_chk@plt+0x3100>
   14344:	cmp	r0, #0
   14348:	movne	r7, r0
   1434c:	ldr	r1, [r5, #36]	; 0x24
   14350:	mov	r0, fp
   14354:	bl	1159c <XRenderFindVisualFormat@plt>
   14358:	add	r3, sp, #88	; 0x58
   1435c:	str	r3, [sp]
   14360:	mov	r1, r7
   14364:	mov	r3, #256	; 0x100
   14368:	str	sl, [sp, #120]	; 0x78
   1436c:	mov	r2, r0
   14370:	mov	r0, fp
   14374:	bl	11374 <XRenderCreatePicture@plt>
   14378:	str	r0, [r5, #116]	; 0x74
   1437c:	ldr	r3, [r6, #20]
   14380:	ldr	r7, [r5, #128]	; 0x80
   14384:	cmp	r3, #0
   14388:	beq	143b0 <__snprintf_chk@plt+0x2ce8>
   1438c:	cmp	r7, #0
   14390:	bne	149ac <__snprintf_chk@plt+0x32e4>
   14394:	ldr	r1, [r5, #132]	; 0x84
   14398:	cmp	r1, #0
   1439c:	bne	1498c <__snprintf_chk@plt+0x32c4>
   143a0:	ldr	r1, [r5, #180]	; 0xb4
   143a4:	cmp	r1, #0
   143a8:	bne	14814 <__snprintf_chk@plt+0x314c>
   143ac:	ldr	r7, [r5, #128]	; 0x80
   143b0:	cmp	r7, #0
   143b4:	beq	14830 <__snprintf_chk@plt+0x3168>
   143b8:	ldr	r3, [r5, #132]	; 0x84
   143bc:	cmp	r3, #0
   143c0:	beq	1488c <__snprintf_chk@plt+0x31c4>
   143c4:	ldr	r7, [r5, #104]	; 0x68
   143c8:	cmp	r7, #0
   143cc:	beq	148a8 <__snprintf_chk@plt+0x31e0>
   143d0:	ldr	r2, [r5, #180]	; 0xb4
   143d4:	cmp	r2, #0
   143d8:	beq	14968 <__snprintf_chk@plt+0x32a0>
   143dc:	str	r4, [r5, #184]	; 0xb8
   143e0:	mov	r4, r5
   143e4:	ldr	r5, [r5]
   143e8:	cmp	r5, #0
   143ec:	bne	142d8 <__snprintf_chk@plt+0x2c10>
   143f0:	ldr	r3, [sp, #44]	; 0x2c
   143f4:	mov	r2, r5
   143f8:	str	r3, [sp]
   143fc:	ldr	r1, [r6, #336]	; 0x150
   14400:	mov	r3, r5
   14404:	mov	r0, fp
   14408:	bl	11608 <XFixesSetPictureClipRegion@plt>
   1440c:	ldr	r7, [r6, #352]	; 0x160
   14410:	cmp	r7, #0
   14414:	beq	14a84 <__snprintf_chk@plt+0x33bc>
   14418:	ldr	r0, [r6, #332]	; 0x14c
   1441c:	ldr	r1, [r6, #328]	; 0x148
   14420:	ldr	r3, [r6, #336]	; 0x150
   14424:	mov	r5, #0
   14428:	str	r0, [sp, #32]
   1442c:	str	r1, [sp, #28]
   14430:	str	r3, [sp]
   14434:	mov	r2, r7
   14438:	str	r5, [sp, #24]
   1443c:	str	r5, [sp, #20]
   14440:	str	r5, [sp, #16]
   14444:	str	r5, [sp, #12]
   14448:	str	r5, [sp, #8]
   1444c:	str	r5, [sp, #4]
   14450:	mov	r3, r5
   14454:	mov	r1, #1
   14458:	mov	r0, fp
   1445c:	bl	11368 <XRenderComposite@plt>
   14460:	cmp	r4, r5
   14464:	beq	14700 <__snprintf_chk@plt+0x3038>
   14468:	vldr	d8, [pc, #888]	; 147e8 <__snprintf_chk@plt+0x3120>
   1446c:	vldr	d9, [pc, #892]	; 147f0 <__snprintf_chk@plt+0x3128>
   14470:	b	14534 <__snprintf_chk@plt+0x2e6c>
   14474:	cmp	r7, #2
   14478:	bne	144ec <__snprintf_chk@plt+0x2e24>
   1447c:	ldr	r3, [r4, #136]	; 0x88
   14480:	cmp	r3, #0
   14484:	beq	144ec <__snprintf_chk@plt+0x2e24>
   14488:	ldr	r1, [r4, #160]	; 0xa0
   1448c:	ldr	r2, [r6, #356]	; 0x164
   14490:	cmp	r1, r2
   14494:	beq	144ec <__snprintf_chk@plt+0x2e24>
   14498:	ldr	r2, [r4, #152]	; 0x98
   1449c:	ldr	r0, [r6, #336]	; 0x150
   144a0:	str	r2, [sp, #32]
   144a4:	ldr	r2, [r4, #148]	; 0x94
   144a8:	str	r2, [sp, #28]
   144ac:	ldr	ip, [r4, #144]	; 0x90
   144b0:	ldr	r1, [r4, #16]
   144b4:	ldr	r2, [r6, #364]	; 0x16c
   144b8:	add	r1, r1, ip
   144bc:	str	r1, [sp, #24]
   144c0:	ldr	r1, [r4, #12]
   144c4:	ldr	ip, [r4, #140]	; 0x8c
   144c8:	str	r5, [sp, #16]
   144cc:	add	r1, r1, ip
   144d0:	str	r1, [sp, #20]
   144d4:	stm	sp, {r0, r5}
   144d8:	str	r5, [sp, #12]
   144dc:	str	r5, [sp, #8]
   144e0:	mov	r1, #3
   144e4:	mov	r0, fp
   144e8:	bl	11368 <XRenderComposite@plt>
   144ec:	ldr	r3, [r4, #156]	; 0x9c
   144f0:	cmn	r3, #1
   144f4:	beq	14504 <__snprintf_chk@plt+0x2e3c>
   144f8:	ldr	r1, [r4, #120]	; 0x78
   144fc:	cmp	r1, #0
   14500:	beq	145d0 <__snprintf_chk@plt+0x2f08>
   14504:	ldr	r3, [r4, #104]	; 0x68
   14508:	ldr	r1, [r4, #180]	; 0xb4
   1450c:	cmp	r3, #1
   14510:	beq	145f8 <__snprintf_chk@plt+0x2f30>
   14514:	cmp	r3, #2
   14518:	beq	1468c <__snprintf_chk@plt+0x2fc4>
   1451c:	mov	r0, fp
   14520:	bl	11524 <XFixesDestroyRegion@plt>
   14524:	str	r5, [r4, #180]	; 0xb4
   14528:	ldr	r4, [r4, #184]	; 0xb8
   1452c:	cmp	r4, #0
   14530:	beq	14700 <__snprintf_chk@plt+0x3038>
   14534:	ldr	r2, [r4, #180]	; 0xb4
   14538:	mov	r3, #0
   1453c:	str	r2, [sp]
   14540:	ldr	r1, [r6, #336]	; 0x150
   14544:	mov	r2, r3
   14548:	mov	r0, fp
   1454c:	bl	11608 <XFixesSetPictureClipRegion@plt>
   14550:	ldr	r7, [r6, #300]	; 0x12c
   14554:	cmp	r7, #1
   14558:	bne	14474 <__snprintf_chk@plt+0x2dac>
   1455c:	ldr	r2, [r4, #160]	; 0xa0
   14560:	ldr	r3, [r6, #356]	; 0x164
   14564:	cmp	r2, r3
   14568:	beq	144ec <__snprintf_chk@plt+0x2e24>
   1456c:	ldr	r0, [fp, #96]	; 0x60
   14570:	add	r0, r0, #1
   14574:	bl	13440 <__snprintf_chk@plt+0x1d78>
   14578:	ldr	r3, [r4, #156]	; 0x9c
   1457c:	ldr	r2, [r4, #124]	; 0x7c
   14580:	cmn	r3, #1
   14584:	beq	147bc <__snprintf_chk@plt+0x30f4>
   14588:	cmp	r2, #0
   1458c:	beq	14798 <__snprintf_chk@plt+0x30d0>
   14590:	ldr	r1, [r4, #152]	; 0x98
   14594:	ldr	r3, [r4, #116]	; 0x74
   14598:	str	r1, [sp, #32]
   1459c:	ldr	r1, [r4, #148]	; 0x94
   145a0:	str	r1, [sp, #28]
   145a4:	ldr	r0, [r4, #144]	; 0x90
   145a8:	ldr	r1, [r4, #16]
   145ac:	add	r1, r1, r0
   145b0:	str	r1, [sp, #24]
   145b4:	ldr	r1, [r4, #12]
   145b8:	ldr	ip, [r4, #140]	; 0x8c
   145bc:	ldr	r0, [r6, #336]	; 0x150
   145c0:	add	r1, r1, ip
   145c4:	str	r1, [sp, #20]
   145c8:	str	r5, [sp, #16]
   145cc:	b	144d4 <__snprintf_chk@plt+0x2e0c>
   145d0:	vmov	s15, r3
   145d4:	mov	r0, fp
   145d8:	vcvt.f64.u32	d0, s15
   145dc:	vdiv.f64	d0, d0, d8
   145e0:	bl	14134 <__snprintf_chk@plt+0x2a6c>
   145e4:	ldr	r3, [r4, #104]	; 0x68
   145e8:	ldr	r1, [r4, #180]	; 0xb4
   145ec:	cmp	r3, #1
   145f0:	str	r0, [r4, #120]	; 0x78
   145f4:	bne	14514 <__snprintf_chk@plt+0x2e4c>
   145f8:	ldr	r3, [r4, #128]	; 0x80
   145fc:	mov	r2, r1
   14600:	mov	r0, fp
   14604:	bl	114d0 <XFixesIntersectRegion@plt>
   14608:	ldr	r2, [r4, #180]	; 0xb4
   1460c:	mov	r3, #0
   14610:	ldr	r1, [r6, #336]	; 0x150
   14614:	str	r2, [sp]
   14618:	mov	r0, fp
   1461c:	mov	r2, r3
   14620:	bl	11608 <XFixesSetPictureClipRegion@plt>
   14624:	ldr	r3, [r4, #28]
   14628:	ldr	r0, [fp, #96]	; 0x60
   1462c:	ldr	r8, [r4, #20]
   14630:	ldr	r7, [r4, #24]
   14634:	lsl	r3, r3, #1
   14638:	add	r0, r0, #1
   1463c:	add	r8, r3, r8
   14640:	add	r7, r3, r7
   14644:	ldr	r9, [r4, #12]
   14648:	ldr	sl, [r4, #16]
   1464c:	bl	13440 <__snprintf_chk@plt+0x1d78>
   14650:	ldr	r1, [r6, #336]	; 0x150
   14654:	ldrd	r2, [r4, #116]	; 0x74
   14658:	mov	r0, fp
   1465c:	stm	sp, {r1, r5}
   14660:	str	r7, [sp, #32]
   14664:	mov	r1, #3
   14668:	str	r8, [sp, #28]
   1466c:	str	sl, [sp, #24]
   14670:	str	r9, [sp, #20]
   14674:	str	r5, [sp, #16]
   14678:	str	r5, [sp, #12]
   1467c:	str	r5, [sp, #8]
   14680:	bl	11368 <XRenderComposite@plt>
   14684:	ldr	r1, [r4, #180]	; 0xb4
   14688:	b	1451c <__snprintf_chk@plt+0x2e54>
   1468c:	ldr	r3, [r4, #128]	; 0x80
   14690:	mov	r2, r1
   14694:	b	14600 <__snprintf_chk@plt+0x2f38>
   14698:	ldr	r3, [sp, #44]	; 0x2c
   1469c:	mov	r2, r5
   146a0:	str	r3, [sp]
   146a4:	ldr	r1, [r6, #336]	; 0x150
   146a8:	mov	r3, r5
   146ac:	mov	r0, fp
   146b0:	bl	11608 <XFixesSetPictureClipRegion@plt>
   146b4:	ldr	r2, [r6, #352]	; 0x160
   146b8:	cmp	r2, #0
   146bc:	beq	14a80 <__snprintf_chk@plt+0x33b8>
   146c0:	ldr	r0, [r6, #328]	; 0x148
   146c4:	ldr	r1, [r6, #336]	; 0x150
   146c8:	ldr	ip, [r6, #332]	; 0x14c
   146cc:	str	r0, [sp, #28]
   146d0:	str	r1, [sp]
   146d4:	str	r5, [sp, #24]
   146d8:	str	r5, [sp, #20]
   146dc:	str	r5, [sp, #16]
   146e0:	str	r5, [sp, #12]
   146e4:	str	r5, [sp, #8]
   146e8:	str	r5, [sp, #4]
   146ec:	mov	r3, r5
   146f0:	str	ip, [sp, #32]
   146f4:	mov	r1, #1
   146f8:	mov	r0, fp
   146fc:	bl	11368 <XRenderComposite@plt>
   14700:	ldr	r1, [sp, #44]	; 0x2c
   14704:	mov	r0, fp
   14708:	bl	11524 <XFixesDestroyRegion@plt>
   1470c:	ldr	r1, [r6, #336]	; 0x150
   14710:	ldr	r3, [r6, #344]	; 0x158
   14714:	cmp	r1, r3
   14718:	beq	14778 <__snprintf_chk@plt+0x30b0>
   1471c:	mov	r4, #0
   14720:	mov	r3, r4
   14724:	mov	r2, r4
   14728:	mov	r0, fp
   1472c:	str	r4, [sp]
   14730:	bl	11608 <XFixesSetPictureClipRegion@plt>
   14734:	ldr	r1, [r6, #328]	; 0x148
   14738:	ldr	r2, [r6, #344]	; 0x158
   1473c:	ldr	ip, [r6, #332]	; 0x14c
   14740:	str	r1, [sp, #28]
   14744:	str	r2, [sp]
   14748:	str	r4, [sp, #24]
   1474c:	str	r4, [sp, #20]
   14750:	str	r4, [sp, #16]
   14754:	str	r4, [sp, #12]
   14758:	str	r4, [sp, #8]
   1475c:	str	r4, [sp, #4]
   14760:	mov	r3, r4
   14764:	mov	r0, fp
   14768:	str	ip, [sp, #32]
   1476c:	ldr	r2, [r6, #336]	; 0x150
   14770:	mov	r1, #1
   14774:	bl	11368 <XRenderComposite@plt>
   14778:	ldr	r3, [pc, #124]	; 147fc <__snprintf_chk@plt+0x3134>
   1477c:	ldr	r2, [sp, #140]	; 0x8c
   14780:	ldr	r3, [r3]
   14784:	cmp	r2, r3
   14788:	bne	14c50 <__snprintf_chk@plt+0x3588>
   1478c:	add	sp, sp, #148	; 0x94
   14790:	vpop	{d8-d9}
   14794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14798:	vmov	s15, r3
   1479c:	mov	r1, r7
   147a0:	mov	r0, fp
   147a4:	vcvt.f64.u32	d7, s15
   147a8:	vdiv.f64	d0, d7, d8
   147ac:	vmul.f64	d0, d0, d9
   147b0:	bl	14134 <__snprintf_chk@plt+0x2a6c>
   147b4:	mov	r2, r0
   147b8:	str	r0, [r4, #124]	; 0x7c
   147bc:	cmp	r2, #0
   147c0:	ldreq	r2, [r6, #360]	; 0x168
   147c4:	b	14590 <__snprintf_chk@plt+0x2ec8>
   147c8:	cmp	r0, #0
   147cc:	movne	r7, r0
   147d0:	bne	1434c <__snprintf_chk@plt+0x2c84>
   147d4:	mov	r1, r7
   147d8:	mov	r0, fp
   147dc:	bl	114b8 <XCompositeNameWindowPixmap@plt>
   147e0:	str	r0, [r5, #8]
   147e4:	b	14344 <__snprintf_chk@plt+0x2c7c>
   147e8:			; <UNDEFINED> instruction: 0xffe00000
   147ec:	strdmi	pc, [pc, #255]	; 148f3 <__snprintf_chk@plt+0x322b>
   147f0:	teqcc	r3, #-872415232	; 0xcc000000
   147f4:	svccc	0x00d33333
   147f8:	andeq	r6, r2, r0, lsr #3
   147fc:	ldrdeq	r5, [r2], -r0
   14800:	andeq	r5, r1, r0, asr r5
   14804:	ldrdeq	r5, [r1], -r8
   14808:	andeq	r5, r1, r8, ror #11
   1480c:			; <UNDEFINED> instruction: 0xffff8080
   14810:	addhi	r8, r0, r0, lsl #1
   14814:	mov	r0, fp
   14818:	bl	11524 <XFixesDestroyRegion@plt>
   1481c:	ldr	r7, [r5, #128]	; 0x80
   14820:	mov	r3, #0
   14824:	cmp	r7, #0
   14828:	str	r3, [r5, #180]	; 0xb4
   1482c:	bne	143b8 <__snprintf_chk@plt+0x2cf0>
   14830:	ldr	r0, [fp, #96]	; 0x60
   14834:	add	r0, r0, #1
   14838:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1483c:	mov	r2, r7
   14840:	ldr	r1, [r5, #4]
   14844:	mov	r0, fp
   14848:	bl	11398 <XFixesCreateRegionFromWindow@plt>
   1484c:	mov	r7, r0
   14850:	ldr	r0, [fp, #96]	; 0x60
   14854:	add	r0, r0, #1
   14858:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1485c:	ldr	r2, [r5, #28]
   14860:	ldr	r0, [r5, #12]
   14864:	ldr	r3, [r5, #16]
   14868:	mov	r1, r7
   1486c:	add	r3, r2, r3
   14870:	add	r2, r2, r0
   14874:	mov	r0, fp
   14878:	bl	11620 <XFixesTranslateRegion@plt>
   1487c:	ldr	r3, [r5, #132]	; 0x84
   14880:	str	r7, [r5, #128]	; 0x80
   14884:	cmp	r3, #0
   14888:	bne	143c4 <__snprintf_chk@plt+0x2cfc>
   1488c:	mov	r1, r5
   14890:	mov	r0, fp
   14894:	bl	138e4 <__snprintf_chk@plt+0x221c>
   14898:	ldr	r7, [r5, #104]	; 0x68
   1489c:	cmp	r7, #0
   148a0:	str	r0, [r5, #132]	; 0x84
   148a4:	bne	143d0 <__snprintf_chk@plt+0x2d08>
   148a8:	ldr	r2, [r5, #16]
   148ac:	ldr	r8, [r5, #28]
   148b0:	ldr	r3, [r5, #12]
   148b4:	str	r2, [sp, #52]	; 0x34
   148b8:	ldr	r2, [sp, #44]	; 0x2c
   148bc:	ldr	ip, [r5, #24]
   148c0:	ldr	r9, [r5, #20]
   148c4:	ldr	r1, [r6, #336]	; 0x150
   148c8:	lsl	r8, r8, #1
   148cc:	str	r3, [sp, #48]	; 0x30
   148d0:	str	r2, [sp]
   148d4:	mov	r3, r7
   148d8:	mov	r2, r7
   148dc:	mov	r0, fp
   148e0:	add	r9, r8, r9
   148e4:	add	r8, r8, ip
   148e8:	bl	11608 <XFixesSetPictureClipRegion@plt>
   148ec:	ldr	r0, [fp, #96]	; 0x60
   148f0:	add	r0, r0, #1
   148f4:	bl	13440 <__snprintf_chk@plt+0x1d78>
   148f8:	ldr	r1, [sp, #44]	; 0x2c
   148fc:	ldr	r3, [r5, #128]	; 0x80
   14900:	mov	r2, r1
   14904:	mov	r0, fp
   14908:	bl	114c4 <XFixesSubtractRegion@plt>
   1490c:	ldr	r0, [fp, #96]	; 0x60
   14910:	add	r0, r0, #1
   14914:	bl	13440 <__snprintf_chk@plt+0x1d78>
   14918:	ldr	r1, [r6, #336]	; 0x150
   1491c:	ldr	r0, [sp, #52]	; 0x34
   14920:	ldr	r3, [sp, #48]	; 0x30
   14924:	ldr	r2, [r5, #116]	; 0x74
   14928:	str	r0, [sp, #24]
   1492c:	str	r3, [sp, #20]
   14930:	str	r1, [sp]
   14934:	str	r8, [sp, #32]
   14938:	str	r9, [sp, #28]
   1493c:	str	r7, [sp, #16]
   14940:	str	r7, [sp, #12]
   14944:	str	r7, [sp, #8]
   14948:	str	r7, [sp, #4]
   1494c:	mov	r3, r7
   14950:	mov	r1, #1
   14954:	mov	r0, fp
   14958:	bl	11368 <XRenderComposite@plt>
   1495c:	ldr	r2, [r5, #180]	; 0xb4
   14960:	cmp	r2, #0
   14964:	bne	143dc <__snprintf_chk@plt+0x2d14>
   14968:	mov	r1, r2
   1496c:	mov	r0, fp
   14970:	bl	115b4 <XFixesCreateRegion@plt>
   14974:	ldr	r2, [sp, #44]	; 0x2c
   14978:	mov	r1, r0
   1497c:	str	r0, [r5, #180]	; 0xb4
   14980:	mov	r0, fp
   14984:	bl	113bc <XFixesCopyRegion@plt>
   14988:	b	143dc <__snprintf_chk@plt+0x2d14>
   1498c:	mov	r0, fp
   14990:	bl	11524 <XFixesDestroyRegion@plt>
   14994:	ldr	r1, [r5, #180]	; 0xb4
   14998:	mov	r3, #0
   1499c:	cmp	r1, #0
   149a0:	str	r3, [r5, #132]	; 0x84
   149a4:	beq	143ac <__snprintf_chk@plt+0x2ce4>
   149a8:	b	14814 <__snprintf_chk@plt+0x314c>
   149ac:	ldr	r0, [fp, #96]	; 0x60
   149b0:	add	r0, r0, #1
   149b4:	bl	13440 <__snprintf_chk@plt+0x1d78>
   149b8:	ldr	r1, [r5, #128]	; 0x80
   149bc:	mov	r0, fp
   149c0:	bl	11524 <XFixesDestroyRegion@plt>
   149c4:	ldr	r1, [r5, #132]	; 0x84
   149c8:	mov	r3, #0
   149cc:	cmp	r1, #0
   149d0:	str	r3, [r5, #128]	; 0x80
   149d4:	beq	143a0 <__snprintf_chk@plt+0x2cd8>
   149d8:	b	1498c <__snprintf_chk@plt+0x32c4>
   149dc:	ldr	r2, [r6, #340]	; 0x154
   149e0:	ldr	r0, [fp, #140]	; 0x8c
   149e4:	ldr	r3, [r6, #332]	; 0x14c
   149e8:	add	r1, r2, r2, lsl #2
   149ec:	ldr	r2, [r6, #328]	; 0x148
   149f0:	add	r0, r0, r1, lsl #4
   149f4:	ldr	r1, [r6, #324]	; 0x144
   149f8:	ldr	ip, [r0, #36]	; 0x24
   149fc:	mov	r0, fp
   14a00:	str	ip, [sp]
   14a04:	bl	116b0 <XCreatePixmap@plt>
   14a08:	ldr	r3, [r6, #340]	; 0x154
   14a0c:	ldr	r2, [fp, #140]	; 0x8c
   14a10:	add	r3, r3, r3, lsl #2
   14a14:	add	r3, r2, r3, lsl #4
   14a18:	ldr	r1, [r3, #40]	; 0x28
   14a1c:	mov	r5, r0
   14a20:	mov	r0, fp
   14a24:	bl	1159c <XRenderFindVisualFormat@plt>
   14a28:	mov	r1, r5
   14a2c:	str	r4, [sp]
   14a30:	mov	r3, r4
   14a34:	mov	r2, r0
   14a38:	mov	r0, fp
   14a3c:	bl	11374 <XRenderCreatePicture@plt>
   14a40:	mov	r1, r5
   14a44:	str	r0, [r6, #336]	; 0x150
   14a48:	mov	r0, fp
   14a4c:	bl	113ec <XFreePixmap@plt>
   14a50:	b	142a8 <__snprintf_chk@plt+0x2be0>
   14a54:	ldr	r3, [sp, #44]	; 0x2c
   14a58:	ldr	ip, [r6, #328]	; 0x148
   14a5c:	str	r3, [sp, #88]	; 0x58
   14a60:	ldr	r3, [r6, #332]	; 0x14c
   14a64:	mov	r2, #1
   14a68:	add	r1, sp, #88	; 0x58
   14a6c:	strh	ip, [sp, #92]	; 0x5c
   14a70:	strh	r3, [sp, #94]	; 0x5e
   14a74:	bl	115b4 <XFixesCreateRegion@plt>
   14a78:	str	r0, [sp, #44]	; 0x2c
   14a7c:	b	1429c <__snprintf_chk@plt+0x2bd4>
   14a80:	mov	r4, r2
   14a84:	ldr	r7, [pc, #-652]	; 14800 <__snprintf_chk@plt+0x3138>
   14a88:	ldr	r1, [pc, #-652]	; 14804 <__snprintf_chk@plt+0x313c>
   14a8c:	add	sl, sp, #76	; 0x4c
   14a90:	add	r9, sp, #72	; 0x48
   14a94:	mov	r5, #0
   14a98:	b	14aa8 <__snprintf_chk@plt+0x33e0>
   14a9c:	ldr	r1, [r7], #4
   14aa0:	cmp	r1, #0
   14aa4:	beq	14ba0 <__snprintf_chk@plt+0x34d8>
   14aa8:	mov	r2, #0
   14aac:	mov	r0, fp
   14ab0:	ldr	r8, [r6, #324]	; 0x144
   14ab4:	bl	1153c <XInternAtom@plt>
   14ab8:	add	r3, sp, #68	; 0x44
   14abc:	str	r3, [sp, #20]
   14ac0:	add	r3, sp, #64	; 0x40
   14ac4:	str	r3, [sp, #16]
   14ac8:	add	r3, sp, #60	; 0x3c
   14acc:	str	r3, [sp, #12]
   14ad0:	mov	r3, #4
   14ad4:	str	r3, [sp]
   14ad8:	mov	r1, r8
   14adc:	str	sl, [sp, #28]
   14ae0:	str	r9, [sp, #24]
   14ae4:	str	r5, [sp, #8]
   14ae8:	str	r5, [sp, #4]
   14aec:	mov	r3, #0
   14af0:	mov	r2, r0
   14af4:	mov	r0, fp
   14af8:	bl	11680 <XGetWindowProperty@plt>
   14afc:	subs	r2, r0, #0
   14b00:	bne	14a9c <__snprintf_chk@plt+0x33d4>
   14b04:	ldr	r1, [pc, #-772]	; 14808 <__snprintf_chk@plt+0x3140>
   14b08:	mov	r0, fp
   14b0c:	bl	1153c <XInternAtom@plt>
   14b10:	ldr	r3, [sp, #60]	; 0x3c
   14b14:	cmp	r0, r3
   14b18:	bne	14a9c <__snprintf_chk@plt+0x33d4>
   14b1c:	ldr	r3, [sp, #64]	; 0x40
   14b20:	cmp	r3, #32
   14b24:	bne	14a9c <__snprintf_chk@plt+0x33d4>
   14b28:	ldr	r3, [sp, #68]	; 0x44
   14b2c:	cmp	r3, #1
   14b30:	bne	14a9c <__snprintf_chk@plt+0x33d4>
   14b34:	ldr	r2, [sp, #76]	; 0x4c
   14b38:	str	r3, [sp, #48]	; 0x30
   14b3c:	mov	r0, r2
   14b40:	ldr	r5, [r2]
   14b44:	bl	113d4 <XFree@plt>
   14b48:	cmp	r5, #0
   14b4c:	ldr	r3, [sp, #48]	; 0x30
   14b50:	beq	14ba0 <__snprintf_chk@plt+0x34d8>
   14b54:	ldr	r2, [r6, #340]	; 0x154
   14b58:	ldr	r1, [fp, #140]	; 0x8c
   14b5c:	str	r3, [sp, #88]	; 0x58
   14b60:	add	r2, r2, r2, lsl #2
   14b64:	mov	r0, fp
   14b68:	add	r2, r1, r2, lsl #4
   14b6c:	str	r3, [sp, #48]	; 0x30
   14b70:	ldr	r1, [r2, #40]	; 0x28
   14b74:	bl	1159c <XRenderFindVisualFormat@plt>
   14b78:	add	r2, sp, #88	; 0x58
   14b7c:	str	r2, [sp]
   14b80:	ldr	r3, [sp, #48]	; 0x30
   14b84:	mov	r1, r5
   14b88:	mov	r2, r0
   14b8c:	mov	r0, fp
   14b90:	bl	11374 <XRenderCreatePicture@plt>
   14b94:	mov	r7, r0
   14b98:	str	r7, [r6, #352]	; 0x160
   14b9c:	b	14418 <__snprintf_chk@plt+0x2d50>
   14ba0:	ldr	r2, [r6, #340]	; 0x154
   14ba4:	ldr	r0, [fp, #140]	; 0x8c
   14ba8:	mov	r3, #1
   14bac:	add	r1, r2, r2, lsl #2
   14bb0:	mov	r2, r3
   14bb4:	add	r0, r0, r1, lsl #4
   14bb8:	ldr	r1, [r6, #324]	; 0x144
   14bbc:	ldr	ip, [r0, #36]	; 0x24
   14bc0:	mov	r0, fp
   14bc4:	str	ip, [sp]
   14bc8:	bl	116b0 <XCreatePixmap@plt>
   14bcc:	ldr	r3, [r6, #340]	; 0x154
   14bd0:	ldr	r2, [fp, #140]	; 0x8c
   14bd4:	mov	r5, #1
   14bd8:	add	r3, r3, r3, lsl #2
   14bdc:	str	r5, [sp, #88]	; 0x58
   14be0:	add	r3, r2, r3, lsl #4
   14be4:	ldr	r1, [r3, #40]	; 0x28
   14be8:	mov	r7, r0
   14bec:	mov	r0, fp
   14bf0:	bl	1159c <XRenderFindVisualFormat@plt>
   14bf4:	add	r2, sp, #88	; 0x58
   14bf8:	mov	r1, r7
   14bfc:	mov	r3, r5
   14c00:	str	r2, [sp]
   14c04:	mov	r2, r0
   14c08:	mov	r0, fp
   14c0c:	bl	11374 <XRenderCreatePicture@plt>
   14c10:	mov	r3, #0
   14c14:	ldr	ip, [pc, #-1040]	; 1480c <__snprintf_chk@plt+0x3144>
   14c18:	str	r3, [sp, #4]
   14c1c:	str	r3, [sp]
   14c20:	str	r5, [sp, #12]
   14c24:	str	r5, [sp, #8]
   14c28:	mov	r1, r5
   14c2c:	add	r3, sp, #80	; 0x50
   14c30:	str	ip, [sp, #84]	; 0x54
   14c34:	mov	r7, r0
   14c38:	ldr	r0, [pc, #-1072]	; 14810 <__snprintf_chk@plt+0x3148>
   14c3c:	mov	r2, r7
   14c40:	str	r0, [sp, #80]	; 0x50
   14c44:	mov	r0, fp
   14c48:	bl	115d8 <XRenderFillRectangle@plt>
   14c4c:	b	14b98 <__snprintf_chk@plt+0x34d0>
   14c50:	bl	113b0 <__stack_chk_fail@plt>
   14c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c58:	vpush	{d8-d9}
   14c5c:	ldr	r9, [pc, #516]	; 14e68 <__snprintf_chk@plt+0x37a0>
   14c60:	ldr	r7, [pc, #516]	; 14e6c <__snprintf_chk@plt+0x37a4>
   14c64:	mov	r8, r0
   14c68:	ldr	r6, [r9]
   14c6c:	sub	sp, sp, #28
   14c70:	ldr	r0, [r7]
   14c74:	cmp	r6, #0
   14c78:	mov	r5, r1
   14c7c:	vmov.f64	d8, d1
   14c80:	vmov.f64	d9, d2
   14c84:	mov	sl, r2
   14c88:	mov	fp, r3
   14c8c:	str	r0, [sp, #20]
   14c90:	beq	14de0 <__snprintf_chk@plt+0x3718>
   14c94:	ldr	r3, [r6, #4]
   14c98:	mov	r4, r6
   14c9c:	cmp	r3, r1
   14ca0:	bne	14cb4 <__snprintf_chk@plt+0x35ec>
   14ca4:	b	14d8c <__snprintf_chk@plt+0x36c4>
   14ca8:	ldr	r2, [r4, #4]
   14cac:	cmp	r5, r2
   14cb0:	beq	14d8c <__snprintf_chk@plt+0x36c4>
   14cb4:	ldr	r4, [r4]
   14cb8:	cmp	r4, #0
   14cbc:	bne	14ca8 <__snprintf_chk@plt+0x35e0>
   14cc0:	mov	r0, #48	; 0x30
   14cc4:	vstr	d0, [sp]
   14cc8:	bl	11464 <malloc@plt>
   14ccc:	vldr	d0, [sp]
   14cd0:	mov	r3, #0
   14cd4:	vstr	d0, [r0, #8]
   14cd8:	mov	r4, r0
   14cdc:	str	r5, [r0, #4]
   14ce0:	str	r3, [r0]
   14ce4:	str	r6, [r4]
   14ce8:	str	r4, [r9]
   14cec:	vcmpe.f64	d8, #0.0
   14cf0:	vmrs	APSR_nzcv, fpscr
   14cf4:	bmi	14dcc <__snprintf_chk@plt+0x3704>
   14cf8:	vldr	d7, [pc, #336]	; 14e50 <__snprintf_chk@plt+0x3788>
   14cfc:	vcmp.f64	d8, d7
   14d00:	vmrs	APSR_nzcv, fpscr
   14d04:	vmovgt.f64	d8, d7
   14d08:	vldr	d7, [r4, #8]
   14d0c:	vstr	d8, [r4, #16]
   14d10:	vcmpe.f64	d7, d8
   14d14:	vmrs	APSR_nzcv, fpscr
   14d18:	bmi	14dd8 <__snprintf_chk@plt+0x3710>
   14d1c:	bgt	14dd4 <__snprintf_chk@plt+0x370c>
   14d20:	vldr	d6, [pc, #304]	; 14e58 <__snprintf_chk@plt+0x3790>
   14d24:	str	sl, [r4, #32]
   14d28:	str	fp, [r4, #40]	; 0x28
   14d2c:	mov	r1, r5
   14d30:	vmul.f64	d7, d7, d6
   14d34:	mov	r0, r8
   14d38:	vcvt.u32.f64	s14, d7
   14d3c:	vstr	s14, [r5, #156]	; 0x9c
   14d40:	bl	13098 <__snprintf_chk@plt+0x19d0>
   14d44:	ldr	r1, [r5, #136]	; 0x88
   14d48:	cmp	r1, #0
   14d4c:	beq	14d70 <__snprintf_chk@plt+0x36a8>
   14d50:	mov	r0, r8
   14d54:	bl	11494 <XRenderFreePicture@plt>
   14d58:	mov	r3, #0
   14d5c:	mov	r0, r8
   14d60:	str	r3, [r5, #136]	; 0x88
   14d64:	mov	r1, r5
   14d68:	bl	138e4 <__snprintf_chk@plt+0x221c>
   14d6c:	str	r0, [r5, #132]	; 0x84
   14d70:	ldr	r2, [sp, #20]
   14d74:	ldr	r3, [r7]
   14d78:	cmp	r2, r3
   14d7c:	bne	14e48 <__snprintf_chk@plt+0x3780>
   14d80:	add	sp, sp, #28
   14d84:	vpop	{d8-d9}
   14d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d8c:	ldr	r3, [sp, #84]	; 0x54
   14d90:	cmp	r3, #0
   14d94:	beq	14d70 <__snprintf_chk@plt+0x36a8>
   14d98:	ldr	r3, [sp, #80]	; 0x50
   14d9c:	cmp	r3, #0
   14da0:	beq	14cec <__snprintf_chk@plt+0x3624>
   14da4:	ldr	r3, [r4, #32]
   14da8:	cmp	r3, #0
   14dac:	beq	14cec <__snprintf_chk@plt+0x3624>
   14db0:	ldr	r2, [r4, #40]	; 0x28
   14db4:	ldr	r1, [r4, #4]
   14db8:	mov	r0, r8
   14dbc:	blx	r3
   14dc0:	vcmpe.f64	d8, #0.0
   14dc4:	vmrs	APSR_nzcv, fpscr
   14dc8:	bpl	14cf8 <__snprintf_chk@plt+0x3630>
   14dcc:	vldr	d8, [pc, #140]	; 14e60 <__snprintf_chk@plt+0x3798>
   14dd0:	b	14d08 <__snprintf_chk@plt+0x3640>
   14dd4:	vneg.f64	d9, d9
   14dd8:	vstr	d9, [r4, #24]
   14ddc:	b	14d20 <__snprintf_chk@plt+0x3658>
   14de0:	mov	r0, #48	; 0x30
   14de4:	vstr	d0, [sp]
   14de8:	bl	11464 <malloc@plt>
   14dec:	vldr	d0, [sp]
   14df0:	mov	r1, r6
   14df4:	str	r6, [r0]
   14df8:	str	r5, [r0, #4]
   14dfc:	vstr	d0, [r0, #8]
   14e00:	mov	r4, r0
   14e04:	add	r0, sp, #12
   14e08:	bl	11428 <gettimeofday@plt>
   14e0c:	ldr	r3, [sp, #16]
   14e10:	ldr	r0, [pc, #88]	; 14e70 <__snprintf_chk@plt+0x37a8>
   14e14:	ldr	r2, [sp, #12]
   14e18:	ldr	r1, [pc, #84]	; 14e74 <__snprintf_chk@plt+0x37ac>
   14e1c:	smull	ip, r0, r0, r3
   14e20:	ldr	r1, [r1, #28]
   14e24:	rsb	ip, r2, r2, lsl #5
   14e28:	asr	r3, r3, #31
   14e2c:	add	r2, r2, ip, lsl #2
   14e30:	rsb	r3, r3, r0, asr #6
   14e34:	add	r3, r3, r2, lsl #3
   14e38:	add	r3, r1, r3
   14e3c:	str	r3, [r9, #368]	; 0x170
   14e40:	ldr	r6, [r9]
   14e44:	b	14ce4 <__snprintf_chk@plt+0x361c>
   14e48:	bl	113b0 <__stack_chk_fail@plt>
   14e4c:	nop			; (mov r0, r0)
   14e50:	andeq	r0, r0, r0
   14e54:	svccc	0x00f00000	; IMB
   14e58:			; <UNDEFINED> instruction: 0xffe00000
   14e5c:	strdmi	pc, [pc, #255]	; 14f63 <__snprintf_chk@plt+0x389b>
	...
   14e68:	andeq	r6, r2, r0, lsr #3
   14e6c:	ldrdeq	r5, [r2], -r0
   14e70:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14e74:	andeq	r6, r2, r8, asr #2
   14e78:	push	{r4, lr}
   14e7c:	sub	sp, sp, #8
   14e80:	ldr	r4, [pc, #168]	; 14f30 <__snprintf_chk@plt+0x3868>
   14e84:	ldr	ip, [r4, #16]
   14e88:	cmp	ip, #0
   14e8c:	beq	14eb8 <__snprintf_chk@plt+0x37f0>
   14e90:	ldr	r3, [ip, #4]
   14e94:	cmp	r1, r3
   14e98:	bne	14eac <__snprintf_chk@plt+0x37e4>
   14e9c:	b	14ec4 <__snprintf_chk@plt+0x37fc>
   14ea0:	ldr	lr, [ip, #4]
   14ea4:	cmp	lr, r1
   14ea8:	beq	14ec4 <__snprintf_chk@plt+0x37fc>
   14eac:	ldr	ip, [ip]
   14eb0:	cmp	ip, #0
   14eb4:	bne	14ea0 <__snprintf_chk@plt+0x37d8>
   14eb8:	add	sp, sp, #8
   14ebc:	pop	{r4, lr}
   14ec0:	b	135a4 <__snprintf_chk@plt+0x1edc>
   14ec4:	ldr	r3, [ip, #8]
   14ec8:	cmp	r3, #0
   14ecc:	beq	14eb8 <__snprintf_chk@plt+0x37f0>
   14ed0:	ldr	r3, [r4, #372]	; 0x174
   14ed4:	cmp	r3, #0
   14ed8:	beq	14eb8 <__snprintf_chk@plt+0x37f0>
   14edc:	vldr	s15, [ip, #156]	; 0x9c
   14ee0:	vldr	d0, [pc, #56]	; 14f20 <__snprintf_chk@plt+0x3858>
   14ee4:	ldr	r4, [pc, #72]	; 14f34 <__snprintf_chk@plt+0x386c>
   14ee8:	mov	r3, r2
   14eec:	vcvt.f64.u32	d7, s15
   14ef0:	mov	lr, #1
   14ef4:	mov	r2, #0
   14ef8:	vldr	d2, [r4, #32]
   14efc:	mov	r1, ip
   14f00:	str	r2, [sp]
   14f04:	str	lr, [sp, #4]
   14f08:	ldr	r2, [pc, #40]	; 14f38 <__snprintf_chk@plt+0x3870>
   14f0c:	vdiv.f64	d0, d7, d0
   14f10:	vldr	d1, [pc, #16]	; 14f28 <__snprintf_chk@plt+0x3860>
   14f14:	bl	14c54 <__snprintf_chk@plt+0x358c>
   14f18:	add	sp, sp, #8
   14f1c:	pop	{r4, pc}
   14f20:			; <UNDEFINED> instruction: 0xffe00000
   14f24:	strdmi	pc, [pc, #255]	; 1502b <__snprintf_chk@plt+0x3963>
	...
   14f30:	andeq	r6, r2, r0, lsr #3
   14f34:	andeq	r6, r2, r8, asr #2
   14f38:	andeq	r3, r1, r4, lsl r7
   14f3c:	ldr	r2, [pc, #160]	; 14fe4 <__snprintf_chk@plt+0x391c>
   14f40:	push	{r4, r5, lr}
   14f44:	sub	sp, sp, #60	; 0x3c
   14f48:	add	r3, sp, #48	; 0x30
   14f4c:	add	lr, sp, #44	; 0x2c
   14f50:	ldr	r4, [pc, #144]	; 14fe8 <__snprintf_chk@plt+0x3920>
   14f54:	ldr	r2, [r2, #376]	; 0x178
   14f58:	str	r3, [sp, #28]
   14f5c:	str	lr, [sp, #24]
   14f60:	add	r3, sp, #40	; 0x28
   14f64:	add	lr, sp, #36	; 0x24
   14f68:	str	r3, [sp, #20]
   14f6c:	str	lr, [sp, #16]
   14f70:	add	r3, sp, #32
   14f74:	mov	lr, #6
   14f78:	ldr	ip, [r4]
   14f7c:	str	r3, [sp, #12]
   14f80:	str	lr, [sp, #8]
   14f84:	mov	r3, #0
   14f88:	mov	lr, #1
   14f8c:	str	r3, [sp, #4]
   14f90:	str	lr, [sp]
   14f94:	str	ip, [sp, #52]	; 0x34
   14f98:	bl	11680 <XGetWindowProperty@plt>
   14f9c:	cmp	r0, #0
   14fa0:	bne	14fb0 <__snprintf_chk@plt+0x38e8>
   14fa4:	ldr	r3, [sp, #48]	; 0x30
   14fa8:	cmp	r3, #0
   14fac:	bne	14fd0 <__snprintf_chk@plt+0x3908>
   14fb0:	mvn	r5, #0
   14fb4:	ldr	r2, [sp, #52]	; 0x34
   14fb8:	ldr	r3, [r4]
   14fbc:	mov	r0, r5
   14fc0:	cmp	r2, r3
   14fc4:	bne	14fe0 <__snprintf_chk@plt+0x3918>
   14fc8:	add	sp, sp, #60	; 0x3c
   14fcc:	pop	{r4, r5, pc}
   14fd0:	mov	r0, r3
   14fd4:	ldr	r5, [r3]
   14fd8:	bl	113d4 <XFree@plt>
   14fdc:	b	14fb4 <__snprintf_chk@plt+0x38ec>
   14fe0:	bl	113b0 <__stack_chk_fail@plt>
   14fe4:	andeq	r6, r2, r0, lsr #3
   14fe8:	ldrdeq	r5, [r2], -r0
   14fec:	push	{r4, r5, r6, r7, lr}
   14ff0:	sub	sp, sp, #12
   14ff4:	ldr	r6, [pc, #220]	; 150d8 <__snprintf_chk@plt+0x3a10>
   14ff8:	ldr	r4, [r6, #16]
   14ffc:	cmp	r4, #0
   15000:	beq	1502c <__snprintf_chk@plt+0x3964>
   15004:	ldr	r3, [r4, #4]
   15008:	cmp	r1, r3
   1500c:	bne	15020 <__snprintf_chk@plt+0x3958>
   15010:	b	15034 <__snprintf_chk@plt+0x396c>
   15014:	ldr	r3, [r4, #4]
   15018:	cmp	r3, r1
   1501c:	beq	15034 <__snprintf_chk@plt+0x396c>
   15020:	ldr	r4, [r4]
   15024:	cmp	r4, #0
   15028:	bne	15014 <__snprintf_chk@plt+0x394c>
   1502c:	add	sp, sp, #12
   15030:	pop	{r4, r5, r6, r7, pc}
   15034:	mov	r3, #2
   15038:	str	r3, [r4, #80]	; 0x50
   1503c:	mov	r5, r0
   15040:	mov	r2, #4194304	; 0x400000
   15044:	bl	11578 <XSelectInput@plt>
   15048:	ldr	r1, [r4, #4]
   1504c:	mov	r0, r5
   15050:	bl	14f3c <__snprintf_chk@plt+0x3874>
   15054:	mov	r1, r4
   15058:	mov	r7, #0
   1505c:	str	r0, [r4, #156]	; 0x9c
   15060:	mov	r0, r5
   15064:	bl	13098 <__snprintf_chk@plt+0x19d0>
   15068:	ldr	r3, [r6, #372]	; 0x174
   1506c:	str	r7, [r4, #108]	; 0x6c
   15070:	cmp	r3, r7
   15074:	beq	1502c <__snprintf_chk@plt+0x3964>
   15078:	ldr	r1, [r4, #4]
   1507c:	mov	r0, r5
   15080:	bl	14f3c <__snprintf_chk@plt+0x3874>
   15084:	vldr	d7, [pc, #60]	; 150c8 <__snprintf_chk@plt+0x3a00>
   15088:	ldr	r2, [pc, #76]	; 150dc <__snprintf_chk@plt+0x3a14>
   1508c:	mov	r3, #1
   15090:	mov	r1, r4
   15094:	vldr	d2, [r2, #40]	; 0x28
   15098:	vldr	d0, [pc, #48]	; 150d0 <__snprintf_chk@plt+0x3a08>
   1509c:	str	r3, [sp, #4]
   150a0:	str	r3, [sp]
   150a4:	mov	r2, r7
   150a8:	mov	r3, r7
   150ac:	vmov	s13, r0
   150b0:	mov	r0, r5
   150b4:	vcvt.f64.u32	d1, s13
   150b8:	vdiv.f64	d1, d1, d7
   150bc:	bl	14c54 <__snprintf_chk@plt+0x358c>
   150c0:	add	sp, sp, #12
   150c4:	pop	{r4, r5, r6, r7, pc}
   150c8:			; <UNDEFINED> instruction: 0xffe00000
   150cc:	strdmi	pc, [pc, #255]	; 151d3 <__snprintf_chk@plt+0x3b0b>
	...
   150d8:	andeq	r6, r2, r0, lsr #3
   150dc:	andeq	r6, r2, r8, asr #2
   150e0:	push	{r4, r5, r6, r7, r8, lr}
   150e4:	mov	r7, r0
   150e8:	mov	r0, #188	; 0xbc
   150ec:	mov	r8, r1
   150f0:	mov	r6, r2
   150f4:	bl	11464 <malloc@plt>
   150f8:	subs	r4, r0, #0
   150fc:	popeq	{r4, r5, r6, r7, r8, pc}
   15100:	cmp	r6, #0
   15104:	bne	1521c <__snprintf_chk@plt+0x3b54>
   15108:	ldr	r5, [pc, #352]	; 15270 <__snprintf_chk@plt+0x3ba8>
   1510c:	ldr	r0, [r7, #96]	; 0x60
   15110:	str	r8, [r4, #4]
   15114:	add	r0, r0, #1
   15118:	bl	13440 <__snprintf_chk@plt+0x1d78>
   1511c:	add	r2, r4, #12
   15120:	mov	r1, r8
   15124:	mov	r0, r7
   15128:	bl	11644 <XGetWindowAttributes@plt>
   1512c:	cmp	r0, #0
   15130:	beq	1525c <__snprintf_chk@plt+0x3b94>
   15134:	ldr	r2, [r4, #44]	; 0x2c
   15138:	ldr	r3, [r4, #12]
   1513c:	cmp	r2, #2
   15140:	ldr	r2, [r4, #16]
   15144:	strh	r3, [r4, #172]	; 0xac
   15148:	ldr	r3, [r4, #20]
   1514c:	strh	r2, [r4, #174]	; 0xae
   15150:	ldr	r2, [r4, #24]
   15154:	strh	r3, [r4, #176]	; 0xb0
   15158:	mov	r3, #0
   1515c:	strh	r2, [r4, #178]	; 0xb2
   15160:	str	r3, [r4, #168]	; 0xa8
   15164:	str	r3, [r4, #108]	; 0x6c
   15168:	str	r3, [r4, #8]
   1516c:	str	r3, [r4, #116]	; 0x74
   15170:	streq	r3, [r4, #164]	; 0xa4
   15174:	streq	r3, [r4, #112]	; 0x70
   15178:	beq	151ac <__snprintf_chk@plt+0x3ae4>
   1517c:	ldr	r3, [r7, #96]	; 0x60
   15180:	mov	r2, #3
   15184:	add	r3, r3, #1
   15188:	mov	r1, r8
   1518c:	str	r3, [r4, #164]	; 0xa4
   15190:	mov	r0, r7
   15194:	bl	113f8 <XDamageCreate@plt>
   15198:	mov	r2, #1
   1519c:	mov	r1, r8
   151a0:	str	r0, [r4, #112]	; 0x70
   151a4:	mov	r0, r7
   151a8:	bl	1168c <XShapeSelectInput@plt>
   151ac:	mov	r3, #0
   151b0:	mvn	r2, #0
   151b4:	str	r3, [r4, #120]	; 0x78
   151b8:	str	r3, [r4, #124]	; 0x7c
   151bc:	str	r3, [r4, #128]	; 0x80
   151c0:	str	r3, [r4, #132]	; 0x84
   151c4:	str	r3, [r4, #136]	; 0x88
   151c8:	str	r3, [r4, #140]	; 0x8c
   151cc:	str	r3, [r4, #144]	; 0x90
   151d0:	str	r3, [r4, #148]	; 0x94
   151d4:	str	r3, [r4, #152]	; 0x98
   151d8:	str	r3, [r4, #180]	; 0xb4
   151dc:	str	r3, [r4, #184]	; 0xb8
   151e0:	str	r2, [r4, #156]	; 0x9c
   151e4:	ldr	r1, [r4, #4]
   151e8:	mov	r0, r7
   151ec:	bl	13170 <__snprintf_chk@plt+0x1aa8>
   151f0:	str	r0, [r4, #160]	; 0xa0
   151f4:	ldr	r3, [r5]
   151f8:	str	r3, [r4]
   151fc:	str	r4, [r5]
   15200:	ldr	r3, [r4, #80]	; 0x50
   15204:	cmp	r3, #2
   15208:	popne	{r4, r5, r6, r7, r8, pc}
   1520c:	mov	r1, r8
   15210:	mov	r0, r7
   15214:	pop	{r4, r5, r6, r7, r8, lr}
   15218:	b	14fec <__snprintf_chk@plt+0x3924>
   1521c:	ldr	r5, [pc, #80]	; 15274 <__snprintf_chk@plt+0x3bac>
   15220:	ldr	r3, [r5, #16]
   15224:	cmp	r3, #0
   15228:	beq	15268 <__snprintf_chk@plt+0x3ba0>
   1522c:	ldr	r2, [r3, #4]
   15230:	cmp	r6, r2
   15234:	bne	15248 <__snprintf_chk@plt+0x3b80>
   15238:	b	15268 <__snprintf_chk@plt+0x3ba0>
   1523c:	ldr	r1, [r3, #4]
   15240:	cmp	r1, r6
   15244:	beq	1510c <__snprintf_chk@plt+0x3a44>
   15248:	mov	r5, r3
   1524c:	ldr	r3, [r3]
   15250:	cmp	r3, #0
   15254:	bne	1523c <__snprintf_chk@plt+0x3b74>
   15258:	b	1510c <__snprintf_chk@plt+0x3a44>
   1525c:	mov	r0, r4
   15260:	pop	{r4, r5, r6, r7, r8, lr}
   15264:	b	11380 <free@plt>
   15268:	add	r5, r5, #16
   1526c:	b	1510c <__snprintf_chk@plt+0x3a44>
   15270:			; <UNDEFINED> instruction: 0x000261b0
   15274:	andeq	r6, r2, r0, lsr #3
   15278:	cmp	r1, #0
   1527c:	beq	15488 <__snprintf_chk@plt+0x3dc0>
   15280:	eor	ip, r0, r1
   15284:	rsbmi	r1, r1, #0
   15288:	subs	r2, r1, #1
   1528c:	beq	15454 <__snprintf_chk@plt+0x3d8c>
   15290:	movs	r3, r0
   15294:	rsbmi	r3, r0, #0
   15298:	cmp	r3, r1
   1529c:	bls	15460 <__snprintf_chk@plt+0x3d98>
   152a0:	tst	r1, r2
   152a4:	beq	15470 <__snprintf_chk@plt+0x3da8>
   152a8:	clz	r2, r3
   152ac:	clz	r0, r1
   152b0:	sub	r2, r0, r2
   152b4:	rsbs	r2, r2, #31
   152b8:	addne	r2, r2, r2, lsl #1
   152bc:	mov	r0, #0
   152c0:	addne	pc, pc, r2, lsl #2
   152c4:	nop			; (mov r0, r0)
   152c8:	cmp	r3, r1, lsl #31
   152cc:	adc	r0, r0, r0
   152d0:	subcs	r3, r3, r1, lsl #31
   152d4:	cmp	r3, r1, lsl #30
   152d8:	adc	r0, r0, r0
   152dc:	subcs	r3, r3, r1, lsl #30
   152e0:	cmp	r3, r1, lsl #29
   152e4:	adc	r0, r0, r0
   152e8:	subcs	r3, r3, r1, lsl #29
   152ec:	cmp	r3, r1, lsl #28
   152f0:	adc	r0, r0, r0
   152f4:	subcs	r3, r3, r1, lsl #28
   152f8:	cmp	r3, r1, lsl #27
   152fc:	adc	r0, r0, r0
   15300:	subcs	r3, r3, r1, lsl #27
   15304:	cmp	r3, r1, lsl #26
   15308:	adc	r0, r0, r0
   1530c:	subcs	r3, r3, r1, lsl #26
   15310:	cmp	r3, r1, lsl #25
   15314:	adc	r0, r0, r0
   15318:	subcs	r3, r3, r1, lsl #25
   1531c:	cmp	r3, r1, lsl #24
   15320:	adc	r0, r0, r0
   15324:	subcs	r3, r3, r1, lsl #24
   15328:	cmp	r3, r1, lsl #23
   1532c:	adc	r0, r0, r0
   15330:	subcs	r3, r3, r1, lsl #23
   15334:	cmp	r3, r1, lsl #22
   15338:	adc	r0, r0, r0
   1533c:	subcs	r3, r3, r1, lsl #22
   15340:	cmp	r3, r1, lsl #21
   15344:	adc	r0, r0, r0
   15348:	subcs	r3, r3, r1, lsl #21
   1534c:	cmp	r3, r1, lsl #20
   15350:	adc	r0, r0, r0
   15354:	subcs	r3, r3, r1, lsl #20
   15358:	cmp	r3, r1, lsl #19
   1535c:	adc	r0, r0, r0
   15360:	subcs	r3, r3, r1, lsl #19
   15364:	cmp	r3, r1, lsl #18
   15368:	adc	r0, r0, r0
   1536c:	subcs	r3, r3, r1, lsl #18
   15370:	cmp	r3, r1, lsl #17
   15374:	adc	r0, r0, r0
   15378:	subcs	r3, r3, r1, lsl #17
   1537c:	cmp	r3, r1, lsl #16
   15380:	adc	r0, r0, r0
   15384:	subcs	r3, r3, r1, lsl #16
   15388:	cmp	r3, r1, lsl #15
   1538c:	adc	r0, r0, r0
   15390:	subcs	r3, r3, r1, lsl #15
   15394:	cmp	r3, r1, lsl #14
   15398:	adc	r0, r0, r0
   1539c:	subcs	r3, r3, r1, lsl #14
   153a0:	cmp	r3, r1, lsl #13
   153a4:	adc	r0, r0, r0
   153a8:	subcs	r3, r3, r1, lsl #13
   153ac:	cmp	r3, r1, lsl #12
   153b0:	adc	r0, r0, r0
   153b4:	subcs	r3, r3, r1, lsl #12
   153b8:	cmp	r3, r1, lsl #11
   153bc:	adc	r0, r0, r0
   153c0:	subcs	r3, r3, r1, lsl #11
   153c4:	cmp	r3, r1, lsl #10
   153c8:	adc	r0, r0, r0
   153cc:	subcs	r3, r3, r1, lsl #10
   153d0:	cmp	r3, r1, lsl #9
   153d4:	adc	r0, r0, r0
   153d8:	subcs	r3, r3, r1, lsl #9
   153dc:	cmp	r3, r1, lsl #8
   153e0:	adc	r0, r0, r0
   153e4:	subcs	r3, r3, r1, lsl #8
   153e8:	cmp	r3, r1, lsl #7
   153ec:	adc	r0, r0, r0
   153f0:	subcs	r3, r3, r1, lsl #7
   153f4:	cmp	r3, r1, lsl #6
   153f8:	adc	r0, r0, r0
   153fc:	subcs	r3, r3, r1, lsl #6
   15400:	cmp	r3, r1, lsl #5
   15404:	adc	r0, r0, r0
   15408:	subcs	r3, r3, r1, lsl #5
   1540c:	cmp	r3, r1, lsl #4
   15410:	adc	r0, r0, r0
   15414:	subcs	r3, r3, r1, lsl #4
   15418:	cmp	r3, r1, lsl #3
   1541c:	adc	r0, r0, r0
   15420:	subcs	r3, r3, r1, lsl #3
   15424:	cmp	r3, r1, lsl #2
   15428:	adc	r0, r0, r0
   1542c:	subcs	r3, r3, r1, lsl #2
   15430:	cmp	r3, r1, lsl #1
   15434:	adc	r0, r0, r0
   15438:	subcs	r3, r3, r1, lsl #1
   1543c:	cmp	r3, r1
   15440:	adc	r0, r0, r0
   15444:	subcs	r3, r3, r1
   15448:	cmp	ip, #0
   1544c:	rsbmi	r0, r0, #0
   15450:	bx	lr
   15454:	teq	ip, r0
   15458:	rsbmi	r0, r0, #0
   1545c:	bx	lr
   15460:	movcc	r0, #0
   15464:	asreq	r0, ip, #31
   15468:	orreq	r0, r0, #1
   1546c:	bx	lr
   15470:	clz	r2, r1
   15474:	rsb	r2, r2, #31
   15478:	cmp	ip, #0
   1547c:	lsr	r0, r3, r2
   15480:	rsbmi	r0, r0, #0
   15484:	bx	lr
   15488:	cmp	r0, #0
   1548c:	mvngt	r0, #-2147483648	; 0x80000000
   15490:	movlt	r0, #-2147483648	; 0x80000000
   15494:	b	154b8 <__snprintf_chk@plt+0x3df0>
   15498:	cmp	r1, #0
   1549c:	beq	15488 <__snprintf_chk@plt+0x3dc0>
   154a0:	push	{r0, r1, lr}
   154a4:	bl	15280 <__snprintf_chk@plt+0x3bb8>
   154a8:	pop	{r1, r2, lr}
   154ac:	mul	r3, r2, r0
   154b0:	sub	r1, r1, r3
   154b4:	bx	lr
   154b8:	push	{r1, lr}
   154bc:	mov	r0, #8
   154c0:	bl	11350 <raise@plt>
   154c4:	pop	{r1, pc}
   154c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154cc:	mov	r7, r0
   154d0:	ldr	r6, [pc, #72]	; 15520 <__snprintf_chk@plt+0x3e58>
   154d4:	ldr	r5, [pc, #72]	; 15524 <__snprintf_chk@plt+0x3e5c>
   154d8:	add	r6, pc, r6
   154dc:	add	r5, pc, r5
   154e0:	sub	r6, r6, r5
   154e4:	mov	r8, r1
   154e8:	mov	r9, r2
   154ec:	bl	11324 <XCompositeRedirectSubwindows@plt-0x20>
   154f0:	asrs	r6, r6, #2
   154f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   154f8:	mov	r4, #0
   154fc:	add	r4, r4, #1
   15500:	ldr	r3, [r5], #4
   15504:	mov	r2, r9
   15508:	mov	r1, r8
   1550c:	mov	r0, r7
   15510:	blx	r3
   15514:	cmp	r6, r4
   15518:	bne	154fc <__snprintf_chk@plt+0x3e34>
   1551c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15520:	andeq	r0, r1, ip, ror #19
   15524:	andeq	r0, r1, r4, ror #19
   15528:	bx	lr

Disassembly of section .fini:

0001552c <.fini>:
   1552c:	push	{r3, lr}
   15530:	pop	{r3, pc}
