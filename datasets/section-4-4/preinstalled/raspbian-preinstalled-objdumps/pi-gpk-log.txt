
raspbian-preinstalled/pi-gpk-log:     file format elf32-littlearm


Disassembly of section .init:

00012fdc <.init>:
   12fdc:	push	{r3, lr}
   12fe0:	bl	13bb0 <g_strcmp0@plt+0x2b4>
   12fe4:	pop	{r3, pc}

Disassembly of section .plt:

00012fe8 <g_string_set_size@plt-0x14>:
   12fe8:	push	{lr}		; (str lr, [sp, #-4]!)
   12fec:	ldr	lr, [pc, #4]	; 12ff8 <g_string_set_size@plt-0x4>
   12ff0:	add	lr, pc, lr
   12ff4:	ldr	pc, [lr, #8]!
   12ff8:	andeq	fp, r1, r8

00012ffc <g_string_set_size@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #110592	; 0x1b000
   13004:	ldr	pc, [ip, #8]!

00013008 <g_object_new@plt>:
   13008:	add	ip, pc, #0, 12
   1300c:	add	ip, ip, #110592	; 0x1b000
   13010:	ldr	pc, [ip, #0]!

00013014 <g_date_strftime@plt>:
   13014:	add	ip, pc, #0, 12
   13018:	add	ip, ip, #106496	; 0x1a000
   1301c:	ldr	pc, [ip, #4088]!	; 0xff8

00013020 <gtk_application_new@plt>:
   13020:	add	ip, pc, #0, 12
   13024:	add	ip, ip, #106496	; 0x1a000
   13028:	ldr	pc, [ip, #4080]!	; 0xff0

0001302c <g_malloc_n@plt>:
   1302c:	add	ip, pc, #0, 12
   13030:	add	ip, ip, #106496	; 0x1a000
   13034:	ldr	pc, [ip, #4072]!	; 0xfe8

00013038 <gtk_tree_view_append_column@plt>:
   13038:	add	ip, pc, #0, 12
   1303c:	add	ip, ip, #106496	; 0x1a000
   13040:	ldr	pc, [ip, #4064]!	; 0xfe0

00013044 <g_settings_get_boolean@plt>:
   13044:	add	ip, pc, #0, 12
   13048:	add	ip, ip, #106496	; 0x1a000
   1304c:	ldr	pc, [ip, #4056]!	; 0xfd8

00013050 <gtk_widget_grab_default@plt>:
   13050:	add	ip, pc, #0, 12
   13054:	add	ip, ip, #106496	; 0x1a000
   13058:	ldr	pc, [ip, #4048]!	; 0xfd0

0001305c <g_option_context_parse@plt>:
   1305c:	add	ip, pc, #0, 12
   13060:	add	ip, ip, #106496	; 0x1a000
   13064:	ldr	pc, [ip, #4040]!	; 0xfc8

00013068 <g_option_context_add_group@plt>:
   13068:	add	ip, pc, #0, 12
   1306c:	add	ip, ip, #106496	; 0x1a000
   13070:	ldr	pc, [ip, #4032]!	; 0xfc0

00013074 <g_settings_new@plt>:
   13074:	add	ip, pc, #0, 12
   13078:	add	ip, ip, #106496	; 0x1a000
   1307c:	ldr	pc, [ip, #4024]!	; 0xfb8

00013080 <gtk_message_dialog_format_secondary_text@plt>:
   13080:	add	ip, pc, #0, 12
   13084:	add	ip, ip, #106496	; 0x1a000
   13088:	ldr	pc, [ip, #4016]!	; 0xfb0

0001308c <g_return_if_fail_warning@plt>:
   1308c:	add	ip, pc, #0, 12
   13090:	add	ip, ip, #106496	; 0x1a000
   13094:	ldr	pc, [ip, #4008]!	; 0xfa8

00013098 <g_type_register_static_simple@plt>:
   13098:	add	ip, pc, #0, 12
   1309c:	add	ip, ip, #106496	; 0x1a000
   130a0:	ldr	pc, [ip, #4000]!	; 0xfa0

000130a4 <gtk_list_store_set@plt>:
   130a4:	add	ip, pc, #0, 12
   130a8:	add	ip, ip, #106496	; 0x1a000
   130ac:	ldr	pc, [ip, #3992]!	; 0xf98

000130b0 <pk_package_get_id@plt>:
   130b0:	add	ip, pc, #0, 12
   130b4:	add	ip, ip, #106496	; 0x1a000
   130b8:	ldr	pc, [ip, #3984]!	; 0xf90

000130bc <gtk_dialog_add_button@plt>:
   130bc:	add	ip, pc, #0, 12
   130c0:	add	ip, ip, #106496	; 0x1a000
   130c4:	ldr	pc, [ip, #3976]!	; 0xf88

000130c8 <g_type_class_adjust_private_offset@plt>:
   130c8:	add	ip, pc, #0, 12
   130cc:	add	ip, ip, #106496	; 0x1a000
   130d0:	ldr	pc, [ip, #3968]!	; 0xf80

000130d4 <g_timeout_add@plt>:
   130d4:	add	ip, pc, #0, 12
   130d8:	add	ip, ip, #106496	; 0x1a000
   130dc:	ldr	pc, [ip, #3960]!	; 0xf78

000130e0 <gtk_tree_model_foreach@plt>:
   130e0:	add	ip, pc, #0, 12
   130e4:	add	ip, ip, #106496	; 0x1a000
   130e8:	ldr	pc, [ip, #3952]!	; 0xf70

000130ec <gtk_tree_view_column_pack_start@plt>:
   130ec:	add	ip, pc, #0, 12
   130f0:	add	ip, ip, #106496	; 0x1a000
   130f4:	ldr	pc, [ip, #3944]!	; 0xf68

000130f8 <g_application_get_type@plt>:
   130f8:	add	ip, pc, #0, 12
   130fc:	add	ip, ip, #106496	; 0x1a000
   13100:	ldr	pc, [ip, #3936]!	; 0xf60

00013104 <g_error_free@plt>:
   13104:	add	ip, pc, #0, 12
   13108:	add	ip, ip, #106496	; 0x1a000
   1310c:	ldr	pc, [ip, #3928]!	; 0xf58

00013110 <bind_textdomain_codeset@plt>:
   13110:	add	ip, pc, #0, 12
   13114:	add	ip, ip, #106496	; 0x1a000
   13118:	ldr	pc, [ip, #3920]!	; 0xf50

0001311c <gtk_get_option_group@plt>:
   1311c:	add	ip, pc, #0, 12
   13120:	add	ip, ip, #106496	; 0x1a000
   13124:	ldr	pc, [ip, #3912]!	; 0xf48

00013128 <g_log_set_handler@plt>:
   13128:	add	ip, pc, #0, 12
   1312c:	add	ip, ip, #106496	; 0x1a000
   13130:	ldr	pc, [ip, #3904]!	; 0xf40

00013134 <gtk_widget_get_type@plt>:
   13134:	add	ip, pc, #0, 12
   13138:	add	ip, ip, #106496	; 0x1a000
   1313c:	ldr	pc, [ip, #3896]!	; 0xf38

00013140 <g_string_new@plt>:
   13140:	add	ip, pc, #0, 12
   13144:	add	ip, ip, #106496	; 0x1a000
   13148:	ldr	pc, [ip, #3888]!	; 0xf30

0001314c <gtk_tree_view_set_model@plt>:
   1314c:	add	ip, pc, #0, 12
   13150:	add	ip, ip, #106496	; 0x1a000
   13154:	ldr	pc, [ip, #3880]!	; 0xf28

00013158 <pk_package_id_split@plt>:
   13158:	add	ip, pc, #0, 12
   1315c:	add	ip, ip, #106496	; 0x1a000
   13160:	ldr	pc, [ip, #3872]!	; 0xf20

00013164 <gtk_text_buffer_delete_mark@plt>:
   13164:	add	ip, pc, #0, 12
   13168:	add	ip, ip, #106496	; 0x1a000
   1316c:	ldr	pc, [ip, #3864]!	; 0xf18

00013170 <g_type_check_instance_cast@plt>:
   13170:	add	ip, pc, #0, 12
   13174:	add	ip, ip, #106496	; 0x1a000
   13178:	ldr	pc, [ip, #3856]!	; 0xf10

0001317c <gtk_tree_view_column_new_with_attributes@plt>:
   1317c:	add	ip, pc, #0, 12
   13180:	add	ip, ip, #106496	; 0x1a000
   13184:	ldr	pc, [ip, #3848]!	; 0xf08

00013188 <gtk_tree_view_columns_autosize@plt>:
   13188:	add	ip, pc, #0, 12
   1318c:	add	ip, ip, #106496	; 0x1a000
   13190:	ldr	pc, [ip, #3840]!	; 0xf00

00013194 <g_option_context_new@plt>:
   13194:	add	ip, pc, #0, 12
   13198:	add	ip, ip, #106496	; 0x1a000
   1319c:	ldr	pc, [ip, #3832]!	; 0xef8

000131a0 <gtk_widget_get_window@plt>:
   131a0:	add	ip, pc, #0, 12
   131a4:	add	ip, ip, #106496	; 0x1a000
   131a8:	ldr	pc, [ip, #3824]!	; 0xef0

000131ac <gtk_widget_hide@plt>:
   131ac:	add	ip, pc, #0, 12
   131b0:	add	ip, ip, #106496	; 0x1a000
   131b4:	ldr	pc, [ip, #3816]!	; 0xee8

000131b8 <g_option_group_new@plt>:
   131b8:	add	ip, pc, #0, 12
   131bc:	add	ip, ip, #106496	; 0x1a000
   131c0:	ldr	pc, [ip, #3808]!	; 0xee0

000131c4 <pk_role_enum_to_string@plt>:
   131c4:	add	ip, pc, #0, 12
   131c8:	add	ip, ip, #106496	; 0x1a000
   131cc:	ldr	pc, [ip, #3800]!	; 0xed8

000131d0 <g_log@plt>:
   131d0:	add	ip, pc, #0, 12
   131d4:	add	ip, ip, #106496	; 0x1a000
   131d8:	ldr	pc, [ip, #3792]!	; 0xed0

000131dc <g_option_context_set_summary@plt>:
   131dc:	add	ip, pc, #0, 12
   131e0:	add	ip, ip, #106496	; 0x1a000
   131e4:	ldr	pc, [ip, #3784]!	; 0xec8

000131e8 <g_date_free@plt>:
   131e8:	add	ip, pc, #0, 12
   131ec:	add	ip, ip, #106496	; 0x1a000
   131f0:	ldr	pc, [ip, #3776]!	; 0xec0

000131f4 <gtk_entry_get_text@plt>:
   131f4:	add	ip, pc, #0, 12
   131f8:	add	ip, ip, #106496	; 0x1a000
   131fc:	ldr	pc, [ip, #3768]!	; 0xeb8

00013200 <pk_status_enum_to_string@plt>:
   13200:	add	ip, pc, #0, 12
   13204:	add	ip, ip, #106496	; 0x1a000
   13208:	ldr	pc, [ip, #3760]!	; 0xeb0

0001320c <pk_results_get_error_code@plt>:
   1320c:	add	ip, pc, #0, 12
   13210:	add	ip, ip, #106496	; 0x1a000
   13214:	ldr	pc, [ip, #3752]!	; 0xea8

00013218 <gtk_text_buffer_insert@plt>:
   13218:	add	ip, pc, #0, 12
   1321c:	add	ip, ip, #106496	; 0x1a000
   13220:	ldr	pc, [ip, #3744]!	; 0xea0

00013224 <gtk_window_set_icon_name@plt>:
   13224:	add	ip, pc, #0, 12
   13228:	add	ip, ip, #106496	; 0x1a000
   1322c:	ldr	pc, [ip, #3736]!	; 0xe98

00013230 <pk_error_get_details@plt>:
   13230:	add	ip, pc, #0, 12
   13234:	add	ip, ip, #106496	; 0x1a000
   13238:	ldr	pc, [ip, #3728]!	; 0xe90

0001323c <pk_error_get_code@plt>:
   1323c:	add	ip, pc, #0, 12
   13240:	add	ip, ip, #106496	; 0x1a000
   13244:	ldr	pc, [ip, #3720]!	; 0xe88

00013248 <getpwuid@plt>:
   13248:	add	ip, pc, #0, 12
   1324c:	add	ip, ip, #106496	; 0x1a000
   13250:	ldr	pc, [ip, #3712]!	; 0xe80

00013254 <gtk_tree_view_get_model@plt>:
   13254:	add	ip, pc, #0, 12
   13258:	add	ip, ip, #106496	; 0x1a000
   1325c:	ldr	pc, [ip, #3704]!	; 0xe78

00013260 <gtk_list_store_remove@plt>:
   13260:	add	ip, pc, #0, 12
   13264:	add	ip, ip, #106496	; 0x1a000
   13268:	ldr	pc, [ip, #3696]!	; 0xe70

0001326c <textdomain@plt>:
   1326c:	add	ip, pc, #0, 12
   13270:	add	ip, ip, #106496	; 0x1a000
   13274:	ldr	pc, [ip, #3688]!	; 0xe68

00013278 <gdk_pixbuf_new_subpixbuf@plt>:
   13278:	add	ip, pc, #0, 12
   1327c:	add	ip, ip, #106496	; 0x1a000
   13280:	ldr	pc, [ip, #3680]!	; 0xe60

00013284 <gtk_text_buffer_get_type@plt>:
   13284:	add	ip, pc, #0, 12
   13288:	add	ip, ip, #106496	; 0x1a000
   1328c:	ldr	pc, [ip, #3672]!	; 0xe58

00013290 <gtk_tree_view_column_set_sort_column_id@plt>:
   13290:	add	ip, pc, #0, 12
   13294:	add	ip, ip, #106496	; 0x1a000
   13298:	ldr	pc, [ip, #3664]!	; 0xe50

0001329c <g_option_group_set_parse_hooks@plt>:
   1329c:	add	ip, pc, #0, 12
   132a0:	add	ip, ip, #106496	; 0x1a000
   132a4:	ldr	pc, [ip, #3656]!	; 0xe48

000132a8 <pango_attr_list_unref@plt>:
   132a8:	add	ip, pc, #0, 12
   132ac:	add	ip, ip, #106496	; 0x1a000
   132b0:	ldr	pc, [ip, #3648]!	; 0xe40

000132b4 <g_application_release@plt>:
   132b4:	add	ip, pc, #0, 12
   132b8:	add	ip, ip, #106496	; 0x1a000
   132bc:	ldr	pc, [ip, #3640]!	; 0xe38

000132c0 <g_strdup@plt>:
   132c0:	add	ip, pc, #0, 12
   132c4:	add	ip, ip, #106496	; 0x1a000
   132c8:	ldr	pc, [ip, #3632]!	; 0xe30

000132cc <strftime@plt>:
   132cc:	add	ip, pc, #0, 12
   132d0:	add	ip, ip, #106496	; 0x1a000
   132d4:	ldr	pc, [ip, #3624]!	; 0xe28

000132d8 <memset@plt>:
   132d8:	add	ip, pc, #0, 12
   132dc:	add	ip, ip, #106496	; 0x1a000
   132e0:	ldr	pc, [ip, #3616]!	; 0xe20

000132e4 <gtk_tree_sortable_get_type@plt>:
   132e4:	add	ip, pc, #0, 12
   132e8:	add	ip, ip, #106496	; 0x1a000
   132ec:	ldr	pc, [ip, #3608]!	; 0xe18

000132f0 <gtk_builder_get_object@plt>:
   132f0:	add	ip, pc, #0, 12
   132f4:	add	ip, ip, #106496	; 0x1a000
   132f8:	ldr	pc, [ip, #3600]!	; 0xe10

000132fc <gtk_text_buffer_get_iter_at_mark@plt>:
   132fc:	add	ip, pc, #0, 12
   13300:	add	ip, ip, #106496	; 0x1a000
   13304:	ldr	pc, [ip, #3592]!	; 0xe08

00013308 <pk_client_generic_finish@plt>:
   13308:	add	ip, pc, #0, 12
   1330c:	add	ip, ip, #106496	; 0x1a000
   13310:	ldr	pc, [ip, #3584]!	; 0xe00

00013314 <gtk_image_set_from_pixbuf@plt>:
   13314:	add	ip, pc, #0, 12
   13318:	add	ip, ip, #106496	; 0x1a000
   1331c:	ldr	pc, [ip, #3576]!	; 0xdf8

00013320 <g_strdup_printf@plt>:
   13320:	add	ip, pc, #0, 12
   13324:	add	ip, ip, #106496	; 0x1a000
   13328:	ldr	pc, [ip, #3568]!	; 0xdf0

0001332c <pk_client_get_old_transactions_async@plt>:
   1332c:	add	ip, pc, #0, 12
   13330:	add	ip, ip, #106496	; 0x1a000
   13334:	ldr	pc, [ip, #3560]!	; 0xde8

00013338 <dcngettext@plt>:
   13338:	add	ip, pc, #0, 12
   1333c:	add	ip, ip, #106496	; 0x1a000
   13340:	ldr	pc, [ip, #3552]!	; 0xde0

00013344 <gtk_icon_theme_append_search_path@plt>:
   13344:	add	ip, pc, #0, 12
   13348:	add	ip, ip, #106496	; 0x1a000
   1334c:	ldr	pc, [ip, #3544]!	; 0xdd8

00013350 <pk_error_enum_to_string@plt>:
   13350:	add	ip, pc, #0, 12
   13354:	add	ip, ip, #106496	; 0x1a000
   13358:	ldr	pc, [ip, #3536]!	; 0xdd0

0001335c <gtk_icon_theme_load_icon@plt>:
   1335c:	add	ip, pc, #0, 12
   13360:	add	ip, ip, #106496	; 0x1a000
   13364:	ldr	pc, [ip, #3528]!	; 0xdc8

00013368 <g_application_run@plt>:
   13368:	add	ip, pc, #0, 12
   1336c:	add	ip, ip, #106496	; 0x1a000
   13370:	ldr	pc, [ip, #3520]!	; 0xdc0

00013374 <gtk_tree_path_free@plt>:
   13374:	add	ip, pc, #0, 12
   13378:	add	ip, ip, #106496	; 0x1a000
   1337c:	ldr	pc, [ip, #3512]!	; 0xdb8

00013380 <gtk_tree_view_get_column@plt>:
   13380:	add	ip, pc, #0, 12
   13384:	add	ip, ip, #106496	; 0x1a000
   13388:	ldr	pc, [ip, #3504]!	; 0xdb0

0001338c <abort@plt>:
   1338c:	add	ip, pc, #0, 12
   13390:	add	ip, ip, #106496	; 0x1a000
   13394:	ldr	pc, [ip, #3496]!	; 0xda8

00013398 <gdk_pixbuf_get_height@plt>:
   13398:	add	ip, pc, #0, 12
   1339c:	add	ip, ip, #106496	; 0x1a000
   133a0:	ldr	pc, [ip, #3488]!	; 0xda0

000133a4 <gtk_events_pending@plt>:
   133a4:	add	ip, pc, #0, 12
   133a8:	add	ip, ip, #106496	; 0x1a000
   133ac:	ldr	pc, [ip, #3480]!	; 0xd98

000133b0 <gtk_entry_set_completion@plt>:
   133b0:	add	ip, pc, #0, 12
   133b4:	add	ip, ip, #106496	; 0x1a000
   133b8:	ldr	pc, [ip, #3472]!	; 0xd90

000133bc <g_strsplit@plt>:
   133bc:	add	ip, pc, #0, 12
   133c0:	add	ip, ip, #106496	; 0x1a000
   133c4:	ldr	pc, [ip, #3464]!	; 0xd88

000133c8 <gtk_cell_renderer_text_new@plt>:
   133c8:	add	ip, pc, #0, 12
   133cc:	add	ip, ip, #106496	; 0x1a000
   133d0:	ldr	pc, [ip, #3456]!	; 0xd80

000133d4 <gtk_tree_view_column_get_type@plt>:
   133d4:	add	ip, pc, #0, 12
   133d8:	add	ip, ip, #106496	; 0x1a000
   133dc:	ldr	pc, [ip, #3448]!	; 0xd78

000133e0 <gdk_pixbuf_get_width@plt>:
   133e0:	add	ip, pc, #0, 12
   133e4:	add	ip, ip, #106496	; 0x1a000
   133e8:	ldr	pc, [ip, #3440]!	; 0xd70

000133ec <gdk_display_get_default@plt>:
   133ec:	add	ip, pc, #0, 12
   133f0:	add	ip, ip, #106496	; 0x1a000
   133f4:	ldr	pc, [ip, #3432]!	; 0xd68

000133f8 <g_date_new@plt>:
   133f8:	add	ip, pc, #0, 12
   133fc:	add	ip, ip, #106496	; 0x1a000
   13400:	ldr	pc, [ip, #3424]!	; 0xd60

00013404 <gtk_window_set_default_size@plt>:
   13404:	add	ip, pc, #0, 12
   13408:	add	ip, ip, #106496	; 0x1a000
   1340c:	ldr	pc, [ip, #3416]!	; 0xd58

00013410 <g_strjoin@plt>:
   13410:	add	ip, pc, #0, 12
   13414:	add	ip, ip, #106496	; 0x1a000
   13418:	ldr	pc, [ip, #3408]!	; 0xd50

0001341c <gtk_tree_view_column_new@plt>:
   1341c:	add	ip, pc, #0, 12
   13420:	add	ip, ip, #106496	; 0x1a000
   13424:	ldr	pc, [ip, #3400]!	; 0xd48

00013428 <g_str_has_prefix@plt>:
   13428:	add	ip, pc, #0, 12
   1342c:	add	ip, ip, #106496	; 0x1a000
   13430:	ldr	pc, [ip, #3392]!	; 0xd40

00013434 <localtime@plt>:
   13434:	add	ip, pc, #0, 12
   13438:	add	ip, ip, #106496	; 0x1a000
   1343c:	ldr	pc, [ip, #3384]!	; 0xd38

00013440 <gtk_tree_view_column_set_title@plt>:
   13440:	add	ip, pc, #0, 12
   13444:	add	ip, ip, #106496	; 0x1a000
   13448:	ldr	pc, [ip, #3376]!	; 0xd30

0001344c <g_signal_connect_data@plt>:
   1344c:	add	ip, pc, #0, 12
   13450:	add	ip, ip, #106496	; 0x1a000
   13454:	ldr	pc, [ip, #3368]!	; 0xd28

00013458 <g_once_init_enter@plt>:
   13458:	add	ip, pc, #0, 12
   1345c:	add	ip, ip, #106496	; 0x1a000
   13460:	ldr	pc, [ip, #3360]!	; 0xd20

00013464 <gtk_text_tag_table_lookup@plt>:
   13464:	add	ip, pc, #0, 12
   13468:	add	ip, ip, #106496	; 0x1a000
   1346c:	ldr	pc, [ip, #3352]!	; 0xd18

00013470 <gtk_widget_destroy@plt>:
   13470:	add	ip, pc, #0, 12
   13474:	add	ip, ip, #106496	; 0x1a000
   13478:	ldr	pc, [ip, #3344]!	; 0xd10

0001347c <gdk_window_set_transient_for@plt>:
   1347c:	add	ip, pc, #0, 12
   13480:	add	ip, ip, #106496	; 0x1a000
   13484:	ldr	pc, [ip, #3336]!	; 0xd08

00013488 <gtk_text_tag_table_add@plt>:
   13488:	add	ip, pc, #0, 12
   1348c:	add	ip, ip, #106496	; 0x1a000
   13490:	ldr	pc, [ip, #3328]!	; 0xd00

00013494 <gtk_text_tag_new@plt>:
   13494:	add	ip, pc, #0, 12
   13498:	add	ip, ip, #106496	; 0x1a000
   1349c:	ldr	pc, [ip, #3320]!	; 0xcf8

000134a0 <g_intern_static_string@plt>:
   134a0:	add	ip, pc, #0, 12
   134a4:	add	ip, ip, #106496	; 0x1a000
   134a8:	ldr	pc, [ip, #3312]!	; 0xcf0

000134ac <g_date_set_time_val@plt>:
   134ac:	add	ip, pc, #0, 12
   134b0:	add	ip, ip, #106496	; 0x1a000
   134b4:	ldr	pc, [ip, #3304]!	; 0xce8

000134b8 <g_strrstr@plt>:
   134b8:	add	ip, pc, #0, 12
   134bc:	add	ip, ip, #106496	; 0x1a000
   134c0:	ldr	pc, [ip, #3296]!	; 0xce0

000134c4 <gtk_image_get_type@plt>:
   134c4:	add	ip, pc, #0, 12
   134c8:	add	ip, ip, #106496	; 0x1a000
   134cc:	ldr	pc, [ip, #3288]!	; 0xcd8

000134d0 <g_strfreev@plt>:
   134d0:	add	ip, pc, #0, 12
   134d4:	add	ip, ip, #106496	; 0x1a000
   134d8:	ldr	pc, [ip, #3280]!	; 0xcd0

000134dc <g_strv_length@plt>:
   134dc:	add	ip, pc, #0, 12
   134e0:	add	ip, ip, #106496	; 0x1a000
   134e4:	ldr	pc, [ip, #3272]!	; 0xcc8

000134e8 <pango_attr_iterator_range@plt>:
   134e8:	add	ip, pc, #0, 12
   134ec:	add	ip, ip, #106496	; 0x1a000
   134f0:	ldr	pc, [ip, #3264]!	; 0xcc0

000134f4 <g_option_context_free@plt>:
   134f4:	add	ip, pc, #0, 12
   134f8:	add	ip, ip, #106496	; 0x1a000
   134fc:	ldr	pc, [ip, #3256]!	; 0xcb8

00013500 <fileno@plt>:
   13500:	add	ip, pc, #0, 12
   13504:	add	ip, ip, #106496	; 0x1a000
   13508:	ldr	pc, [ip, #3248]!	; 0xcb0

0001350c <__stack_chk_fail@plt>:
   1350c:	add	ip, pc, #0, 12
   13510:	add	ip, ip, #106496	; 0x1a000
   13514:	ldr	pc, [ip, #3240]!	; 0xca8

00013518 <gdk_x11_window_foreign_new_for_display@plt>:
   13518:	add	ip, pc, #0, 12
   1351c:	add	ip, ip, #106496	; 0x1a000
   13520:	ldr	pc, [ip, #3232]!	; 0xca0

00013524 <gtk_tree_view_get_type@plt>:
   13524:	add	ip, pc, #0, 12
   13528:	add	ip, ip, #106496	; 0x1a000
   1352c:	ldr	pc, [ip, #3224]!	; 0xc98

00013530 <gtk_list_store_new@plt>:
   13530:	add	ip, pc, #0, 12
   13534:	add	ip, ip, #106496	; 0x1a000
   13538:	ldr	pc, [ip, #3216]!	; 0xc90

0001353c <isatty@plt>:
   1353c:	add	ip, pc, #0, 12
   13540:	add	ip, ip, #106496	; 0x1a000
   13544:	ldr	pc, [ip, #3208]!	; 0xc88

00013548 <g_free@plt>:
   13548:	add	ip, pc, #0, 12
   1354c:	add	ip, ip, #106496	; 0x1a000
   13550:	ldr	pc, [ip, #3200]!	; 0xc80

00013554 <dcgettext@plt>:
   13554:	add	ip, pc, #0, 12
   13558:	add	ip, ip, #106496	; 0x1a000
   1355c:	ldr	pc, [ip, #3192]!	; 0xc78

00013560 <gtk_tree_view_column_set_expand@plt>:
   13560:	add	ip, pc, #0, 12
   13564:	add	ip, ip, #106496	; 0x1a000
   13568:	ldr	pc, [ip, #3184]!	; 0xc70

0001356c <strstr@plt>:
   1356c:	add	ip, pc, #0, 12
   13570:	add	ip, ip, #106496	; 0x1a000
   13574:	ldr	pc, [ip, #3176]!	; 0xc68

00013578 <g_object_set@plt>:
   13578:	add	ip, pc, #0, 12
   1357c:	add	ip, ip, #106496	; 0x1a000
   13580:	ldr	pc, [ip, #3168]!	; 0xc60

00013584 <gtk_message_dialog_get_type@plt>:
   13584:	add	ip, pc, #0, 12
   13588:	add	ip, ip, #106496	; 0x1a000
   1358c:	ldr	pc, [ip, #3160]!	; 0xc58

00013590 <g_ptr_array_new@plt>:
   13590:	add	ip, pc, #0, 12
   13594:	add	ip, ip, #106496	; 0x1a000
   13598:	ldr	pc, [ip, #3152]!	; 0xc50

0001359c <pk_results_get_transaction_array@plt>:
   1359c:	add	ip, pc, #0, 12
   135a0:	add	ip, ip, #106496	; 0x1a000
   135a4:	ldr	pc, [ip, #3144]!	; 0xc48

000135a8 <gtk_cell_renderer_pixbuf_new@plt>:
   135a8:	add	ip, pc, #0, 12
   135ac:	add	ip, ip, #106496	; 0x1a000
   135b0:	ldr	pc, [ip, #3136]!	; 0xc40

000135b4 <g_object_get@plt>:
   135b4:	add	ip, pc, #0, 12
   135b8:	add	ip, ip, #106496	; 0x1a000
   135bc:	ldr	pc, [ip, #3128]!	; 0xc38

000135c0 <gtk_tree_selection_get_selected@plt>:
   135c0:	add	ip, pc, #0, 12
   135c4:	add	ip, ip, #106496	; 0x1a000
   135c8:	ldr	pc, [ip, #3120]!	; 0xc30

000135cc <gtk_dialog_get_type@plt>:
   135cc:	add	ip, pc, #0, 12
   135d0:	add	ip, ip, #106496	; 0x1a000
   135d4:	ldr	pc, [ip, #3112]!	; 0xc28

000135d8 <gtk_tree_view_get_selection@plt>:
   135d8:	add	ip, pc, #0, 12
   135dc:	add	ip, ip, #106496	; 0x1a000
   135e0:	ldr	pc, [ip, #3104]!	; 0xc20

000135e4 <gtk_tree_model_get_type@plt>:
   135e4:	add	ip, pc, #0, 12
   135e8:	add	ip, ip, #106496	; 0x1a000
   135ec:	ldr	pc, [ip, #3096]!	; 0xc18

000135f0 <gtk_list_store_append@plt>:
   135f0:	add	ip, pc, #0, 12
   135f4:	add	ip, ip, #106496	; 0x1a000
   135f8:	ldr	pc, [ip, #3088]!	; 0xc10

000135fc <gtk_text_buffer_create_mark@plt>:
   135fc:	add	ip, pc, #0, 12
   13600:	add	ip, ip, #106496	; 0x1a000
   13604:	ldr	pc, [ip, #3080]!	; 0xc08

00013608 <gtk_entry_set_text@plt>:
   13608:	add	ip, pc, #0, 12
   1360c:	add	ip, ip, #106496	; 0x1a000
   13610:	ldr	pc, [ip, #3072]!	; 0xc00

00013614 <raise@plt>:
   13614:	add	ip, pc, #0, 12
   13618:	add	ip, ip, #106496	; 0x1a000
   1361c:	ldr	pc, [ip, #3064]!	; 0xbf8

00013620 <g_type_check_instance_is_a@plt>:
   13620:	add	ip, pc, #0, 12
   13624:	add	ip, ip, #106496	; 0x1a000
   13628:	ldr	pc, [ip, #3056]!	; 0xbf0

0001362c <g_print@plt>:
   1362c:	add	ip, pc, #0, 12
   13630:	add	ip, ip, #106496	; 0x1a000
   13634:	ldr	pc, [ip, #3048]!	; 0xbe8

00013638 <getuid@plt>:
   13638:	add	ip, pc, #0, 12
   1363c:	add	ip, ip, #106496	; 0x1a000
   13640:	ldr	pc, [ip, #3040]!	; 0xbe0

00013644 <pk_info_enum_from_string@plt>:
   13644:	add	ip, pc, #0, 12
   13648:	add	ip, ip, #106496	; 0x1a000
   1364c:	ldr	pc, [ip, #3032]!	; 0xbd8

00013650 <bindtextdomain@plt>:
   13650:	add	ip, pc, #0, 12
   13654:	add	ip, ip, #106496	; 0x1a000
   13658:	ldr	pc, [ip, #3024]!	; 0xbd0

0001365c <gtk_style_context_get_color@plt>:
   1365c:	add	ip, pc, #0, 12
   13660:	add	ip, ip, #106496	; 0x1a000
   13664:	ldr	pc, [ip, #3016]!	; 0xbc8

00013668 <setlocale@plt>:
   13668:	add	ip, pc, #0, 12
   1366c:	add	ip, ip, #106496	; 0x1a000
   13670:	ldr	pc, [ip, #3008]!	; 0xbc0

00013674 <g_option_context_add_main_entries@plt>:
   13674:	add	ip, pc, #0, 12
   13678:	add	ip, ip, #106496	; 0x1a000
   1367c:	ldr	pc, [ip, #3000]!	; 0xbb8

00013680 <gtk_tree_path_copy@plt>:
   13680:	add	ip, pc, #0, 12
   13684:	add	ip, ip, #106496	; 0x1a000
   13688:	ldr	pc, [ip, #2992]!	; 0xbb0

0001368c <gtk_main_iteration@plt>:
   1368c:	add	ip, pc, #0, 12
   13690:	add	ip, ip, #106496	; 0x1a000
   13694:	ldr	pc, [ip, #2984]!	; 0xba8

00013698 <gtk_text_buffer_insert_with_tags@plt>:
   13698:	add	ip, pc, #0, 12
   1369c:	add	ip, ip, #106496	; 0x1a000
   136a0:	ldr	pc, [ip, #2976]!	; 0xba0

000136a4 <gtk_builder_new@plt>:
   136a4:	add	ip, pc, #0, 12
   136a8:	add	ip, ip, #106496	; 0x1a000
   136ac:	ldr	pc, [ip, #2968]!	; 0xb98

000136b0 <g_string_free@plt>:
   136b0:	add	ip, pc, #0, 12
   136b4:	add	ip, ip, #106496	; 0x1a000
   136b8:	ldr	pc, [ip, #2960]!	; 0xb90

000136bc <gtk_dialog_run@plt>:
   136bc:	add	ip, pc, #0, 12
   136c0:	add	ip, ip, #106496	; 0x1a000
   136c4:	ldr	pc, [ip, #2952]!	; 0xb88

000136c8 <gtk_window_present@plt>:
   136c8:	add	ip, pc, #0, 12
   136cc:	add	ip, ip, #106496	; 0x1a000
   136d0:	ldr	pc, [ip, #2944]!	; 0xb80

000136d4 <pango_attr_iterator_get@plt>:
   136d4:	add	ip, pc, #0, 12
   136d8:	add	ip, ip, #106496	; 0x1a000
   136dc:	ldr	pc, [ip, #2936]!	; 0xb78

000136e0 <pango_attr_iterator_next@plt>:
   136e0:	add	ip, pc, #0, 12
   136e4:	add	ip, ip, #106496	; 0x1a000
   136e8:	ldr	pc, [ip, #2928]!	; 0xb70

000136ec <pk_info_enum_to_string@plt>:
   136ec:	add	ip, pc, #0, 12
   136f0:	add	ip, ip, #106496	; 0x1a000
   136f4:	ldr	pc, [ip, #2920]!	; 0xb68

000136f8 <gtk_widget_show@plt>:
   136f8:	add	ip, pc, #0, 12
   136fc:	add	ip, ip, #106496	; 0x1a000
   13700:	ldr	pc, [ip, #2912]!	; 0xb60

00013704 <g_object_unref@plt>:
   13704:	add	ip, pc, #0, 12
   13708:	add	ip, ip, #106496	; 0x1a000
   1370c:	ldr	pc, [ip, #2904]!	; 0xb58

00013710 <strlen@plt>:
   13710:	add	ip, pc, #0, 12
   13714:	add	ip, ip, #106496	; 0x1a000
   13718:	ldr	pc, [ip, #2896]!	; 0xb50

0001371c <gtk_window_set_application@plt>:
   1371c:	add	ip, pc, #0, 12
   13720:	add	ip, ip, #106496	; 0x1a000
   13724:	ldr	pc, [ip, #2888]!	; 0xb48

00013728 <gtk_text_buffer_get_tag_table@plt>:
   13728:	add	ip, pc, #0, 12
   1372c:	add	ip, ip, #106496	; 0x1a000
   13730:	ldr	pc, [ip, #2880]!	; 0xb40

00013734 <gtk_tree_view_column_get_width@plt>:
   13734:	add	ip, pc, #0, 12
   13738:	add	ip, ip, #106496	; 0x1a000
   1373c:	ldr	pc, [ip, #2872]!	; 0xb38

00013740 <pango_attr_iterator_destroy@plt>:
   13740:	add	ip, pc, #0, 12
   13744:	add	ip, ip, #106496	; 0x1a000
   13748:	ldr	pc, [ip, #2864]!	; 0xb30

0001374c <g_once_init_leave@plt>:
   1374c:	add	ip, pc, #0, 12
   13750:	add	ip, ip, #106496	; 0x1a000
   13754:	ldr	pc, [ip, #2856]!	; 0xb28

00013758 <gtk_icon_size_lookup@plt>:
   13758:	add	ip, pc, #0, 12
   1375c:	add	ip, ip, #106496	; 0x1a000
   13760:	ldr	pc, [ip, #2848]!	; 0xb20

00013764 <g_log_set_fatal_mask@plt>:
   13764:	add	ip, pc, #0, 12
   13768:	add	ip, ip, #106496	; 0x1a000
   1376c:	ldr	pc, [ip, #2840]!	; 0xb18

00013770 <g_source_set_name_by_id@plt>:
   13770:	add	ip, pc, #0, 12
   13774:	add	ip, ip, #106496	; 0x1a000
   13778:	ldr	pc, [ip, #2832]!	; 0xb10

0001377c <g_malloc0_n@plt>:
   1377c:	add	ip, pc, #0, 12
   13780:	add	ip, ip, #106496	; 0x1a000
   13784:	ldr	pc, [ip, #2824]!	; 0xb08

00013788 <gtk_entry_get_type@plt>:
   13788:	add	ip, pc, #0, 12
   1378c:	add	ip, ip, #106496	; 0x1a000
   13790:	ldr	pc, [ip, #2816]!	; 0xb00

00013794 <gtk_tree_sortable_set_sort_column_id@plt>:
   13794:	add	ip, pc, #0, 12
   13798:	add	ip, ip, #106496	; 0x1a000
   1379c:	ldr	pc, [ip, #2808]!	; 0xaf8

000137a0 <g_type_class_peek_parent@plt>:
   137a0:	add	ip, pc, #0, 12
   137a4:	add	ip, ip, #106496	; 0x1a000
   137a8:	ldr	pc, [ip, #2800]!	; 0xaf0

000137ac <gtk_tree_view_column_add_attribute@plt>:
   137ac:	add	ip, pc, #0, 12
   137b0:	add	ip, ip, #106496	; 0x1a000
   137b4:	ldr	pc, [ip, #2792]!	; 0xae8

000137b8 <g_ptr_array_unref@plt>:
   137b8:	add	ip, pc, #0, 12
   137bc:	add	ip, ip, #106496	; 0x1a000
   137c0:	ldr	pc, [ip, #2784]!	; 0xae0

000137c4 <gtk_window_set_modal@plt>:
   137c4:	add	ip, pc, #0, 12
   137c8:	add	ip, ip, #106496	; 0x1a000
   137cc:	ldr	pc, [ip, #2776]!	; 0xad8

000137d0 <strcmp@plt>:
   137d0:	add	ip, pc, #0, 12
   137d4:	add	ip, ip, #106496	; 0x1a000
   137d8:	ldr	pc, [ip, #2768]!	; 0xad0

000137dc <g_ptr_array_add@plt>:
   137dc:	add	ip, pc, #0, 12
   137e0:	add	ip, ip, #106496	; 0x1a000
   137e4:	ldr	pc, [ip, #2760]!	; 0xac8

000137e8 <g_markup_escape_text@plt>:
   137e8:	add	ip, pc, #0, 12
   137ec:	add	ip, ip, #106496	; 0x1a000
   137f0:	ldr	pc, [ip, #2752]!	; 0xac0

000137f4 <g_str_has_suffix@plt>:
   137f4:	add	ip, pc, #0, 12
   137f8:	add	ip, ip, #106496	; 0x1a000
   137fc:	ldr	pc, [ip, #2744]!	; 0xab8

00013800 <gtk_init@plt>:
   13800:	add	ip, pc, #0, 12
   13804:	add	ip, ip, #106496	; 0x1a000
   13808:	ldr	pc, [ip, #2736]!	; 0xab0

0001380c <gtk_image_set_from_icon_name@plt>:
   1380c:	add	ip, pc, #0, 12
   13810:	add	ip, ip, #106496	; 0x1a000
   13814:	ldr	pc, [ip, #2728]!	; 0xaa8

00013818 <time@plt>:
   13818:	add	ip, pc, #0, 12
   1381c:	add	ip, ip, #106496	; 0x1a000
   13820:	ldr	pc, [ip, #2720]!	; 0xaa0

00013824 <pango_parse_markup@plt>:
   13824:	add	ip, pc, #0, 12
   13828:	add	ip, ip, #106496	; 0x1a000
   1382c:	ldr	pc, [ip, #2712]!	; 0xa98

00013830 <pk_client_new@plt>:
   13830:	add	ip, pc, #0, 12
   13834:	add	ip, ip, #106496	; 0x1a000
   13838:	ldr	pc, [ip, #2704]!	; 0xa90

0001383c <gtk_message_dialog_new@plt>:
   1383c:	add	ip, pc, #0, 12
   13840:	add	ip, ip, #106496	; 0x1a000
   13844:	ldr	pc, [ip, #2696]!	; 0xa88

00013848 <gtk_icon_theme_get_default@plt>:
   13848:	add	ip, pc, #0, 12
   1384c:	add	ip, ip, #106496	; 0x1a000
   13850:	ldr	pc, [ip, #2688]!	; 0xa80

00013854 <g_string_append@plt>:
   13854:	add	ip, pc, #0, 12
   13858:	add	ip, ip, #106496	; 0x1a000
   1385c:	ldr	pc, [ip, #2680]!	; 0xa78

00013860 <pk_enum_find_string@plt>:
   13860:	add	ip, pc, #0, 12
   13864:	add	ip, ip, #106496	; 0x1a000
   13868:	ldr	pc, [ip, #2672]!	; 0xa70

0001386c <gtk_list_store_get_type@plt>:
   1386c:	add	ip, pc, #0, 12
   13870:	add	ip, ip, #106496	; 0x1a000
   13874:	ldr	pc, [ip, #2664]!	; 0xa68

00013878 <gtk_tree_model_get_iter@plt>:
   13878:	add	ip, pc, #0, 12
   1387c:	add	ip, ip, #106496	; 0x1a000
   13880:	ldr	pc, [ip, #2656]!	; 0xa60

00013884 <gtk_tree_model_get@plt>:
   13884:	add	ip, pc, #0, 12
   13888:	add	ip, ip, #106496	; 0x1a000
   1388c:	ldr	pc, [ip, #2648]!	; 0xa58

00013890 <g_string_append_printf@plt>:
   13890:	add	ip, pc, #0, 12
   13894:	add	ip, ip, #106496	; 0x1a000
   13898:	ldr	pc, [ip, #2640]!	; 0xa50

0001389c <g_type_check_class_cast@plt>:
   1389c:	add	ip, pc, #0, 12
   138a0:	add	ip, ip, #106496	; 0x1a000
   138a4:	ldr	pc, [ip, #2632]!	; 0xa48

000138a8 <__libc_start_main@plt>:
   138a8:	add	ip, pc, #0, 12
   138ac:	add	ip, ip, #106496	; 0x1a000
   138b0:	ldr	pc, [ip, #2624]!	; 0xa40

000138b4 <__gmon_start__@plt>:
   138b4:	add	ip, pc, #0, 12
   138b8:	add	ip, ip, #106496	; 0x1a000
   138bc:	ldr	pc, [ip, #2616]!	; 0xa38

000138c0 <gtk_builder_add_from_file@plt>:
   138c0:	add	ip, pc, #0, 12
   138c4:	add	ip, ip, #106496	; 0x1a000
   138c8:	ldr	pc, [ip, #2608]!	; 0xa30

000138cc <pango_attr_list_get_iterator@plt>:
   138cc:	add	ip, pc, #0, 12
   138d0:	add	ip, ip, #106496	; 0x1a000
   138d4:	ldr	pc, [ip, #2600]!	; 0xa28

000138d8 <g_time_val_from_iso8601@plt>:
   138d8:	add	ip, pc, #0, 12
   138dc:	add	ip, ip, #106496	; 0x1a000
   138e0:	ldr	pc, [ip, #2592]!	; 0xa20

000138e4 <gtk_window_get_type@plt>:
   138e4:	add	ip, pc, #0, 12
   138e8:	add	ip, ip, #106496	; 0x1a000
   138ec:	ldr	pc, [ip, #2584]!	; 0xa18

000138f0 <g_source_remove@plt>:
   138f0:	add	ip, pc, #0, 12
   138f4:	add	ip, ip, #106496	; 0x1a000
   138f8:	ldr	pc, [ip, #2576]!	; 0xa10

000138fc <g_strcmp0@plt>:
   138fc:	add	ip, pc, #0, 12
   13900:	add	ip, ip, #106496	; 0x1a000
   13904:	ldr	pc, [ip, #2568]!	; 0xa08

Disassembly of section .text:

00013908 <.text>:
   13908:	push	{r4, r5, r6, r7, r8, lr}
   1390c:	sub	sp, sp, #104	; 0x68
   13910:	ldr	r7, [pc, #532]	; 13b2c <g_strcmp0@plt+0x230>
   13914:	str	r0, [sp, #12]
   13918:	str	r1, [sp, #8]
   1391c:	ldr	r3, [r7]
   13920:	mov	r2, #80	; 0x50
   13924:	mov	r1, #0
   13928:	ldr	r6, [pc, #512]	; 13b30 <g_strcmp0@plt+0x234>
   1392c:	add	r0, sp, #20
   13930:	str	r3, [sp, #100]	; 0x64
   13934:	bl	132d8 <memset@plt>
   13938:	ldr	r1, [pc, #500]	; 13b34 <g_strcmp0@plt+0x238>
   1393c:	ldr	r0, [pc, #500]	; 13b38 <g_strcmp0@plt+0x23c>
   13940:	ldr	r4, [pc, #500]	; 13b3c <g_strcmp0@plt+0x240>
   13944:	add	r3, r6, #8
   13948:	add	r2, r6, #16
   1394c:	mov	lr, #102	; 0x66
   13950:	mov	ip, #112	; 0x70
   13954:	mov	r5, #1
   13958:	str	r3, [sp, #32]
   1395c:	str	r2, [sp, #60]	; 0x3c
   13960:	mov	r3, #2
   13964:	mov	r2, #5
   13968:	str	r1, [sp, #16]
   1396c:	str	r0, [sp, #36]	; 0x24
   13970:	ldr	r1, [pc, #456]	; 13b40 <g_strcmp0@plt+0x244>
   13974:	mov	r0, #0
   13978:	strb	lr, [sp, #20]
   1397c:	strb	ip, [sp, #48]	; 0x30
   13980:	str	r3, [sp, #56]	; 0x38
   13984:	str	r4, [sp, #44]	; 0x2c
   13988:	str	r5, [sp, #28]
   1398c:	bl	13554 <dcgettext@plt>
   13990:	ldr	r1, [pc, #428]	; 13b44 <g_strcmp0@plt+0x248>
   13994:	str	r0, [sp, #64]	; 0x40
   13998:	mov	r0, #6
   1399c:	bl	13668 <setlocale@plt>
   139a0:	ldr	r1, [pc, #416]	; 13b48 <g_strcmp0@plt+0x24c>
   139a4:	ldr	r0, [pc, #416]	; 13b4c <g_strcmp0@plt+0x250>
   139a8:	bl	13650 <bindtextdomain@plt>
   139ac:	ldr	r1, [pc, #412]	; 13b50 <g_strcmp0@plt+0x254>
   139b0:	ldr	r0, [pc, #404]	; 13b4c <g_strcmp0@plt+0x250>
   139b4:	bl	13110 <bind_textdomain_codeset@plt>
   139b8:	ldr	r0, [pc, #396]	; 13b4c <g_strcmp0@plt+0x250>
   139bc:	bl	1326c <textdomain@plt>
   139c0:	add	r1, sp, #8
   139c4:	add	r0, sp, #12
   139c8:	bl	13800 <gtk_init@plt>
   139cc:	mov	r0, #0
   139d0:	bl	13194 <g_option_context_new@plt>
   139d4:	mov	r2, #5
   139d8:	ldr	r1, [pc, #372]	; 13b54 <g_strcmp0@plt+0x258>
   139dc:	mov	r4, r0
   139e0:	mov	r0, #0
   139e4:	bl	13554 <dcgettext@plt>
   139e8:	mov	r1, r0
   139ec:	mov	r0, r4
   139f0:	bl	131dc <g_option_context_set_summary@plt>
   139f4:	mov	r2, #0
   139f8:	add	r1, sp, #16
   139fc:	mov	r0, r4
   13a00:	bl	13674 <g_option_context_add_main_entries@plt>
   13a04:	bl	1541c <g_strcmp0@plt+0x1b20>
   13a08:	mov	r1, r0
   13a0c:	mov	r0, r4
   13a10:	bl	13068 <g_option_context_add_group@plt>
   13a14:	mov	r0, r5
   13a18:	bl	1311c <gtk_get_option_group@plt>
   13a1c:	mov	r1, r0
   13a20:	mov	r0, r4
   13a24:	bl	13068 <g_option_context_add_group@plt>
   13a28:	mov	r3, #0
   13a2c:	add	r2, sp, #8
   13a30:	add	r1, sp, #12
   13a34:	mov	r0, r4
   13a38:	bl	1305c <g_option_context_parse@plt>
   13a3c:	mov	r0, r4
   13a40:	bl	134f4 <g_option_context_free@plt>
   13a44:	mov	r2, #5
   13a48:	ldr	r1, [pc, #264]	; 13b58 <g_strcmp0@plt+0x25c>
   13a4c:	mov	r0, #0
   13a50:	bl	13554 <dcgettext@plt>
   13a54:	mov	r1, r5
   13a58:	bl	181cc <g_strcmp0@plt+0x48d0>
   13a5c:	cmp	r0, #0
   13a60:	bne	13a90 <g_strcmp0@plt+0x194>
   13a64:	ldr	r0, [r6]
   13a68:	cmp	r0, #0
   13a6c:	beq	13a74 <g_strcmp0@plt+0x178>
   13a70:	bl	13704 <g_object_unref@plt>
   13a74:	ldr	r2, [sp, #100]	; 0x64
   13a78:	ldr	r3, [r7]
   13a7c:	mov	r0, r5
   13a80:	cmp	r2, r3
   13a84:	bne	13b28 <g_strcmp0@plt+0x22c>
   13a88:	add	sp, sp, #104	; 0x68
   13a8c:	pop	{r4, r5, r6, r7, r8, pc}
   13a90:	mov	r4, #0
   13a94:	bl	13848 <gtk_icon_theme_get_default@plt>
   13a98:	ldr	r1, [pc, #188]	; 13b5c <g_strcmp0@plt+0x260>
   13a9c:	bl	13344 <gtk_icon_theme_append_search_path@plt>
   13aa0:	mov	r1, r4
   13aa4:	ldr	r0, [pc, #180]	; 13b60 <g_strcmp0@plt+0x264>
   13aa8:	bl	13020 <gtk_application_new@plt>
   13aac:	mov	r3, r4
   13ab0:	ldr	r2, [pc, #172]	; 13b64 <g_strcmp0@plt+0x268>
   13ab4:	ldr	r1, [pc, #172]	; 13b68 <g_strcmp0@plt+0x26c>
   13ab8:	str	r4, [sp, #4]
   13abc:	str	r4, [sp]
   13ac0:	mov	r8, r0
   13ac4:	bl	1344c <g_signal_connect_data@plt>
   13ac8:	mov	r3, r4
   13acc:	ldr	r2, [pc, #152]	; 13b6c <g_strcmp0@plt+0x270>
   13ad0:	ldr	r1, [pc, #152]	; 13b70 <g_strcmp0@plt+0x274>
   13ad4:	str	r4, [sp, #4]
   13ad8:	str	r4, [sp]
   13adc:	mov	r0, r8
   13ae0:	bl	1344c <g_signal_connect_data@plt>
   13ae4:	bl	130f8 <g_application_get_type@plt>
   13ae8:	mov	r1, r0
   13aec:	mov	r0, r8
   13af0:	bl	13170 <g_type_check_instance_cast@plt>
   13af4:	ldr	r2, [sp, #8]
   13af8:	ldr	r1, [sp, #12]
   13afc:	bl	13368 <g_application_run@plt>
   13b00:	mov	r5, r0
   13b04:	ldr	r0, [r6]
   13b08:	cmp	r0, r4
   13b0c:	beq	13b14 <g_strcmp0@plt+0x218>
   13b10:	bl	13704 <g_object_unref@plt>
   13b14:	cmp	r8, #0
   13b18:	beq	13a74 <g_strcmp0@plt+0x178>
   13b1c:	mov	r0, r8
   13b20:	bl	13704 <g_object_unref@plt>
   13b24:	b	13a74 <g_strcmp0@plt+0x178>
   13b28:	bl	1350c <__stack_chk_fail@plt>
   13b2c:	andeq	sp, r2, r0, asr lr
   13b30:	andeq	lr, r2, r4, lsr #6
   13b34:	andeq	r9, r1, r4, asr #21
   13b38:	andeq	r9, r1, ip, asr #21
   13b3c:	andeq	r9, r1, ip, ror #21
   13b40:	strdeq	r9, [r1], -ip
   13b44:	andeq	r9, r1, ip, lsr #14
   13b48:	andeq	r9, r1, r8, lsr #22
   13b4c:	andeq	r9, r1, ip, lsr fp
   13b50:	andeq	r9, r1, r8, asr #22
   13b54:	andeq	r9, r1, r0, asr fp
   13b58:	andeq	r9, r1, r4, ror #22
   13b5c:	andeq	r9, r1, r0, ror fp
   13b60:	andeq	r9, r1, ip, lsl #23
   13b64:			; <UNDEFINED> instruction: 0x00013eb4
   13b68:			; <UNDEFINED> instruction: 0x00019bb4
   13b6c:	andeq	r3, r1, r4, ror #24
   13b70:	strdeq	r9, [r1], -r4
   13b74:	mov	fp, #0
   13b78:	mov	lr, #0
   13b7c:	pop	{r1}		; (ldr r1, [sp], #4)
   13b80:	mov	r2, sp
   13b84:	push	{r2}		; (str r2, [sp, #-4]!)
   13b88:	push	{r0}		; (str r0, [sp, #-4]!)
   13b8c:	ldr	ip, [pc, #16]	; 13ba4 <g_strcmp0@plt+0x2a8>
   13b90:	push	{ip}		; (str ip, [sp, #-4]!)
   13b94:	ldr	r0, [pc, #12]	; 13ba8 <g_strcmp0@plt+0x2ac>
   13b98:	ldr	r3, [pc, #12]	; 13bac <g_strcmp0@plt+0x2b0>
   13b9c:	bl	138a8 <__libc_start_main@plt>
   13ba0:	bl	1338c <abort@plt>
   13ba4:	andeq	r9, r1, r8, lsl #14
   13ba8:	andeq	r3, r1, r8, lsl #18
   13bac:	andeq	r9, r1, r8, lsr #13
   13bb0:	ldr	r3, [pc, #20]	; 13bcc <g_strcmp0@plt+0x2d0>
   13bb4:	ldr	r2, [pc, #20]	; 13bd0 <g_strcmp0@plt+0x2d4>
   13bb8:	add	r3, pc, r3
   13bbc:	ldr	r2, [r3, r2]
   13bc0:	cmp	r2, #0
   13bc4:	bxeq	lr
   13bc8:	b	138b4 <__gmon_start__@plt>
   13bcc:	andeq	sl, r1, r0, asr #8
   13bd0:	andeq	r0, r0, r0, lsl r3
   13bd4:	ldr	r0, [pc, #24]	; 13bf4 <g_strcmp0@plt+0x2f8>
   13bd8:	ldr	r3, [pc, #24]	; 13bf8 <g_strcmp0@plt+0x2fc>
   13bdc:	cmp	r3, r0
   13be0:	bxeq	lr
   13be4:	ldr	r3, [pc, #16]	; 13bfc <g_strcmp0@plt+0x300>
   13be8:	cmp	r3, #0
   13bec:	bxeq	lr
   13bf0:	bx	r3
   13bf4:	andeq	lr, r2, ip, lsl r3
   13bf8:	andeq	lr, r2, ip, lsl r3
   13bfc:	andeq	r0, r0, r0
   13c00:	ldr	r0, [pc, #36]	; 13c2c <g_strcmp0@plt+0x330>
   13c04:	ldr	r1, [pc, #36]	; 13c30 <g_strcmp0@plt+0x334>
   13c08:	sub	r1, r1, r0
   13c0c:	asr	r1, r1, #2
   13c10:	add	r1, r1, r1, lsr #31
   13c14:	asrs	r1, r1, #1
   13c18:	bxeq	lr
   13c1c:	ldr	r3, [pc, #16]	; 13c34 <g_strcmp0@plt+0x338>
   13c20:	cmp	r3, #0
   13c24:	bxeq	lr
   13c28:	bx	r3
   13c2c:	andeq	lr, r2, ip, lsl r3
   13c30:	andeq	lr, r2, ip, lsl r3
   13c34:	andeq	r0, r0, r0
   13c38:	push	{r4, lr}
   13c3c:	ldr	r4, [pc, #24]	; 13c5c <g_strcmp0@plt+0x360>
   13c40:	ldrb	r3, [r4]
   13c44:	cmp	r3, #0
   13c48:	popne	{r4, pc}
   13c4c:	bl	13bd4 <g_strcmp0@plt+0x2d8>
   13c50:	mov	r3, #1
   13c54:	strb	r3, [r4]
   13c58:	pop	{r4, pc}
   13c5c:	andeq	lr, r2, r0, lsr #6
   13c60:	b	13c00 <g_strcmp0@plt+0x304>
   13c64:	ldr	r3, [pc, #40]	; 13c94 <g_strcmp0@plt+0x398>
   13c68:	push	{r4, lr}
   13c6c:	ldr	r1, [pc, #36]	; 13c98 <g_strcmp0@plt+0x39c>
   13c70:	ldr	r0, [r3]
   13c74:	bl	132f0 <gtk_builder_get_object@plt>
   13c78:	mov	r4, r0
   13c7c:	bl	138e4 <gtk_window_get_type@plt>
   13c80:	mov	r1, r0
   13c84:	mov	r0, r4
   13c88:	bl	13170 <g_type_check_instance_cast@plt>
   13c8c:	pop	{r4, lr}
   13c90:	b	136c8 <gtk_window_present@plt>
   13c94:	andeq	lr, r2, r4, lsr #6
   13c98:	andeq	r9, r1, r8, lsl r7
   13c9c:	push	{r4, r5, lr}
   13ca0:	sub	sp, sp, #12
   13ca4:	mov	r4, r2
   13ca8:	mov	r5, r0
   13cac:	bl	1386c <gtk_list_store_get_type@plt>
   13cb0:	mov	r1, r0
   13cb4:	mov	r0, r5
   13cb8:	bl	13170 <g_type_check_instance_cast@plt>
   13cbc:	mvn	r3, #0
   13cc0:	str	r3, [sp]
   13cc4:	mov	r1, r4
   13cc8:	mov	r3, #0
   13ccc:	mov	r2, #9
   13cd0:	bl	130a4 <gtk_list_store_set@plt>
   13cd4:	mov	r0, #0
   13cd8:	add	sp, sp, #12
   13cdc:	pop	{r4, r5, pc}
   13ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce4:	mov	r4, r0
   13ce8:	sub	sp, sp, #12
   13cec:	ldr	r0, [pc, #272]	; 13e04 <g_strcmp0@plt+0x508>
   13cf0:	mov	r7, r1
   13cf4:	bl	13140 <g_string_new@plt>
   13cf8:	mov	r9, r0
   13cfc:	mov	r0, r4
   13d00:	bl	134dc <g_strv_length@plt>
   13d04:	mov	r6, r0
   13d08:	mov	r0, r7
   13d0c:	bl	16bbc <g_strcmp0@plt+0x32c0>
   13d10:	cmp	r6, #0
   13d14:	str	r0, [sp, #4]
   13d18:	beq	13d9c <g_strcmp0@plt+0x4a0>
   13d1c:	sub	r4, r4, #4
   13d20:	ldr	r8, [pc, #224]	; 13e08 <g_strcmp0@plt+0x50c>
   13d24:	ldr	fp, [pc, #224]	; 13e0c <g_strcmp0@plt+0x510>
   13d28:	add	r6, r4, r6, lsl #2
   13d2c:	b	13d40 <g_strcmp0@plt+0x444>
   13d30:	mov	r0, r5
   13d34:	bl	134d0 <g_strfreev@plt>
   13d38:	cmp	r4, r6
   13d3c:	beq	13d9c <g_strcmp0@plt+0x4a0>
   13d40:	mov	r2, #0
   13d44:	mov	r1, r8
   13d48:	ldr	r0, [r4, #4]!
   13d4c:	bl	133bc <g_strsplit@plt>
   13d50:	mov	r5, r0
   13d54:	ldr	r0, [r0]
   13d58:	bl	13644 <pk_info_enum_from_string@plt>
   13d5c:	cmp	r7, r0
   13d60:	bne	13d30 <g_strcmp0@plt+0x434>
   13d64:	mov	r1, #0
   13d68:	ldr	r0, [r5, #4]
   13d6c:	bl	1812c <g_strcmp0@plt+0x4830>
   13d70:	mov	r1, fp
   13d74:	mov	r2, r0
   13d78:	mov	sl, r0
   13d7c:	mov	r0, r9
   13d80:	bl	13890 <g_string_append_printf@plt>
   13d84:	mov	r0, sl
   13d88:	bl	13548 <g_free@plt>
   13d8c:	mov	r0, r5
   13d90:	bl	134d0 <g_strfreev@plt>
   13d94:	cmp	r4, r6
   13d98:	bne	13d40 <g_strcmp0@plt+0x444>
   13d9c:	ldr	r4, [r9, #4]
   13da0:	cmp	r4, #0
   13da4:	beq	13dec <g_strcmp0@plt+0x4f0>
   13da8:	sub	r1, r4, #2
   13dac:	mov	r0, r9
   13db0:	bl	12ffc <g_string_set_size@plt>
   13db4:	mov	r0, r9
   13db8:	mov	r1, #0
   13dbc:	bl	136b0 <g_string_free@plt>
   13dc0:	ldr	r1, [sp, #4]
   13dc4:	mov	r2, r0
   13dc8:	mov	r5, r0
   13dcc:	ldr	r0, [pc, #60]	; 13e10 <g_strcmp0@plt+0x514>
   13dd0:	bl	13320 <g_strdup_printf@plt>
   13dd4:	mov	r4, r0
   13dd8:	mov	r0, r5
   13ddc:	bl	13548 <g_free@plt>
   13de0:	mov	r0, r4
   13de4:	add	sp, sp, #12
   13de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dec:	mov	r0, r9
   13df0:	mov	r1, #1
   13df4:	bl	136b0 <g_string_free@plt>
   13df8:	mov	r0, r4
   13dfc:	add	sp, sp, #12
   13e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e04:	andeq	r9, r1, ip, lsr #14
   13e08:	strdeq	r9, [r1], -r0
   13e0c:	andeq	r9, r1, r8, lsr #14
   13e10:	andeq	r9, r1, r0, lsr r7
   13e14:	push	{r4, lr}
   13e18:	mov	r4, r1
   13e1c:	bl	130f8 <g_application_get_type@plt>
   13e20:	mov	r1, r0
   13e24:	mov	r0, r4
   13e28:	bl	13170 <g_type_check_instance_cast@plt>
   13e2c:	pop	{r4, lr}
   13e30:	b	132b4 <g_application_release@plt>
   13e34:	push	{r4, r5, r6, lr}
   13e38:	mov	r4, r2
   13e3c:	mov	r5, r0
   13e40:	bl	13524 <gtk_tree_view_get_type@plt>
   13e44:	mov	r1, r0
   13e48:	mov	r0, r5
   13e4c:	bl	13170 <g_type_check_instance_cast@plt>
   13e50:	mov	r1, #2
   13e54:	bl	13380 <gtk_tree_view_get_column@plt>
   13e58:	bl	13734 <gtk_tree_view_column_get_width@plt>
   13e5c:	mov	r3, #0
   13e60:	ldr	r1, [pc, #12]	; 13e74 <g_strcmp0@plt+0x578>
   13e64:	sub	r2, r0, #10
   13e68:	mov	r0, r4
   13e6c:	pop	{r4, r5, r6, lr}
   13e70:	b	13578 <g_object_set@plt>
   13e74:	andeq	r9, r1, r0, asr #14
   13e78:	ldr	r1, [pc, #44]	; 13eac <g_strcmp0@plt+0x5b0>
   13e7c:	ldr	r2, [pc, #44]	; 13eb0 <g_strcmp0@plt+0x5b4>
   13e80:	push	{lr}		; (str lr, [sp, #-4]!)
   13e84:	mov	r3, #0
   13e88:	sub	sp, sp, #20
   13e8c:	ldr	r0, [r1, #4]
   13e90:	strd	r2, [sp, #4]
   13e94:	str	r3, [sp]
   13e98:	mov	r2, r3
   13e9c:	mov	r1, r3
   13ea0:	bl	1332c <pk_client_get_old_transactions_async@plt>
   13ea4:	add	sp, sp, #20
   13ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   13eac:	andeq	lr, r2, r4, lsr #6
   13eb0:	andeq	r4, r1, ip, lsr pc
   13eb4:	ldr	r3, [pc, #1656]	; 14534 <g_strcmp0@plt+0xc38>
   13eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ebc:	sub	sp, sp, #52	; 0x34
   13ec0:	ldr	r3, [r3]
   13ec4:	mov	r4, #0
   13ec8:	str	r3, [sp, #44]	; 0x2c
   13ecc:	mov	r6, r0
   13ed0:	str	r4, [sp, #40]	; 0x28
   13ed4:	bl	13830 <pk_client_new@plt>
   13ed8:	ldr	r5, [pc, #1624]	; 14538 <g_strcmp0@plt+0xc3c>
   13edc:	mov	r3, r4
   13ee0:	mov	r2, r4
   13ee4:	ldr	r1, [pc, #1616]	; 1453c <g_strcmp0@plt+0xc40>
   13ee8:	str	r0, [r5, #4]
   13eec:	bl	13578 <g_object_set@plt>
   13ef0:	bl	136a4 <gtk_builder_new@plt>
   13ef4:	add	r2, sp, #40	; 0x28
   13ef8:	ldr	r1, [pc, #1600]	; 14540 <g_strcmp0@plt+0xc44>
   13efc:	str	r0, [r5]
   13f00:	bl	138c0 <gtk_builder_add_from_file@plt>
   13f04:	cmp	r0, r4
   13f08:	beq	144e4 <g_strcmp0@plt+0xbe8>
   13f0c:	ldr	r1, [pc, #1584]	; 14544 <g_strcmp0@plt+0xc48>
   13f10:	ldr	r0, [r5]
   13f14:	bl	132f0 <gtk_builder_get_object@plt>
   13f18:	mov	r4, r0
   13f1c:	bl	138e4 <gtk_window_get_type@plt>
   13f20:	mov	r1, r0
   13f24:	str	r0, [sp, #36]	; 0x24
   13f28:	mov	r0, r4
   13f2c:	bl	13170 <g_type_check_instance_cast@plt>
   13f30:	ldr	r1, [pc, #1552]	; 14548 <g_strcmp0@plt+0xc4c>
   13f34:	mov	r4, r0
   13f38:	bl	13224 <gtk_window_set_icon_name@plt>
   13f3c:	mov	r0, r4
   13f40:	mov	r1, r6
   13f44:	bl	1371c <gtk_window_set_application@plt>
   13f48:	mov	r2, #1200	; 0x4b0
   13f4c:	mov	r0, r4
   13f50:	mov	r1, r2
   13f54:	bl	17dd4 <g_strcmp0@plt+0x44d8>
   13f58:	bl	13134 <gtk_widget_get_type@plt>
   13f5c:	ldr	r4, [r5, #8]
   13f60:	cmp	r4, #0
   13f64:	mov	r7, r0
   13f68:	beq	13f9c <g_strcmp0@plt+0x6a0>
   13f6c:	ldr	r1, [pc, #1496]	; 1454c <g_strcmp0@plt+0xc50>
   13f70:	ldr	r0, [r5]
   13f74:	bl	132f0 <gtk_builder_get_object@plt>
   13f78:	mov	r1, r7
   13f7c:	bl	13170 <g_type_check_instance_cast@plt>
   13f80:	mov	r4, r0
   13f84:	bl	13788 <gtk_entry_get_type@plt>
   13f88:	mov	r1, r0
   13f8c:	mov	r0, r4
   13f90:	bl	13170 <g_type_check_instance_cast@plt>
   13f94:	ldr	r1, [r5, #8]
   13f98:	bl	13608 <gtk_entry_set_text@plt>
   13f9c:	ldr	r1, [pc, #1452]	; 14550 <g_strcmp0@plt+0xc54>
   13fa0:	ldr	r0, [r5]
   13fa4:	bl	132f0 <gtk_builder_get_object@plt>
   13fa8:	mov	r1, r7
   13fac:	bl	13170 <g_type_check_instance_cast@plt>
   13fb0:	mov	r4, #0
   13fb4:	mov	r3, r6
   13fb8:	ldr	r2, [pc, #1428]	; 14554 <g_strcmp0@plt+0xc58>
   13fbc:	ldr	r1, [pc, #1428]	; 14558 <g_strcmp0@plt+0xc5c>
   13fc0:	str	r4, [sp, #4]
   13fc4:	str	r4, [sp]
   13fc8:	mov	r8, r0
   13fcc:	bl	1344c <g_signal_connect_data@plt>
   13fd0:	mov	r0, r8
   13fd4:	bl	13050 <gtk_widget_grab_default@plt>
   13fd8:	ldr	r1, [pc, #1404]	; 1455c <g_strcmp0@plt+0xc60>
   13fdc:	ldr	r0, [r5]
   13fe0:	bl	132f0 <gtk_builder_get_object@plt>
   13fe4:	mov	r1, r7
   13fe8:	bl	13170 <g_type_check_instance_cast@plt>
   13fec:	mov	r3, r4
   13ff0:	ldr	r2, [pc, #1384]	; 14560 <g_strcmp0@plt+0xc64>
   13ff4:	ldr	r1, [pc, #1372]	; 14558 <g_strcmp0@plt+0xc5c>
   13ff8:	str	r4, [sp, #4]
   13ffc:	str	r4, [sp]
   14000:	mov	r6, r0
   14004:	bl	1344c <g_signal_connect_data@plt>
   14008:	mov	r0, r6
   1400c:	bl	131ac <gtk_widget_hide@plt>
   14010:	ldr	r1, [pc, #1356]	; 14564 <g_strcmp0@plt+0xc68>
   14014:	ldr	r0, [r5]
   14018:	bl	132f0 <gtk_builder_get_object@plt>
   1401c:	mov	r1, r7
   14020:	bl	13170 <g_type_check_instance_cast@plt>
   14024:	mov	r3, r4
   14028:	ldr	r2, [pc, #1336]	; 14568 <g_strcmp0@plt+0xc6c>
   1402c:	str	r4, [sp, #4]
   14030:	str	r4, [sp]
   14034:	ldr	r1, [pc, #1308]	; 14558 <g_strcmp0@plt+0xc5c>
   14038:	bl	1344c <g_signal_connect_data@plt>
   1403c:	ldr	r1, [pc, #1288]	; 1454c <g_strcmp0@plt+0xc50>
   14040:	ldr	r0, [r5]
   14044:	bl	132f0 <gtk_builder_get_object@plt>
   14048:	mov	r1, r7
   1404c:	bl	13170 <g_type_check_instance_cast@plt>
   14050:	mov	r3, r4
   14054:	ldr	r2, [pc, #1292]	; 14568 <g_strcmp0@plt+0xc6c>
   14058:	ldr	r1, [pc, #1292]	; 1456c <g_strcmp0@plt+0xc70>
   1405c:	str	r4, [sp, #4]
   14060:	str	r4, [sp]
   14064:	mov	r6, r0
   14068:	bl	1344c <g_signal_connect_data@plt>
   1406c:	ldr	r0, [pc, #1276]	; 14570 <g_strcmp0@plt+0xc74>
   14070:	bl	13074 <g_settings_new@plt>
   14074:	ldr	r1, [pc, #1272]	; 14574 <g_strcmp0@plt+0xc78>
   14078:	mov	r4, r0
   1407c:	bl	13044 <g_settings_get_boolean@plt>
   14080:	subs	r3, r0, #0
   14084:	bne	144a0 <g_strcmp0@plt+0xba4>
   14088:	str	r3, [sp, #4]
   1408c:	str	r3, [sp]
   14090:	mov	r0, r6
   14094:	ldr	r2, [pc, #1244]	; 14578 <g_strcmp0@plt+0xc7c>
   14098:	ldr	r1, [pc, #1244]	; 1457c <g_strcmp0@plt+0xc80>
   1409c:	bl	1344c <g_signal_connect_data@plt>
   140a0:	mov	r0, r4
   140a4:	bl	13704 <g_object_unref@plt>
   140a8:	mov	r3, #64	; 0x40
   140ac:	mov	r2, #20
   140b0:	mov	r1, r3
   140b4:	str	r3, [sp, #20]
   140b8:	str	r3, [sp, #16]
   140bc:	str	r3, [sp, #12]
   140c0:	str	r3, [sp, #8]
   140c4:	str	r3, [sp, #4]
   140c8:	str	r3, [sp]
   140cc:	str	r2, [sp, #24]
   140d0:	mov	r0, #10
   140d4:	mov	r2, r3
   140d8:	bl	13530 <gtk_list_store_new@plt>
   140dc:	ldr	r1, [pc, #1180]	; 14580 <g_strcmp0@plt+0xc84>
   140e0:	mov	r4, #0
   140e4:	str	r0, [r5, #12]
   140e8:	ldr	r0, [r5]
   140ec:	bl	132f0 <gtk_builder_get_object@plt>
   140f0:	mov	r1, r7
   140f4:	bl	13170 <g_type_check_instance_cast@plt>
   140f8:	mov	r9, r0
   140fc:	bl	13524 <gtk_tree_view_get_type@plt>
   14100:	mov	sl, r0
   14104:	mov	r1, r0
   14108:	mov	r0, r9
   1410c:	bl	13170 <g_type_check_instance_cast@plt>
   14110:	ldr	r8, [r5, #12]
   14114:	mov	r6, r0
   14118:	bl	135e4 <gtk_tree_model_get_type@plt>
   1411c:	mov	r1, r0
   14120:	mov	r0, r8
   14124:	bl	13170 <g_type_check_instance_cast@plt>
   14128:	mov	r1, r0
   1412c:	mov	r0, r6
   14130:	bl	1314c <gtk_tree_view_set_model@plt>
   14134:	mov	r1, sl
   14138:	mov	r0, r9
   1413c:	bl	13170 <g_type_check_instance_cast@plt>
   14140:	bl	135d8 <gtk_tree_view_get_selection@plt>
   14144:	mov	r3, r4
   14148:	ldr	r2, [pc, #1076]	; 14584 <g_strcmp0@plt+0xc88>
   1414c:	str	r4, [sp, #4]
   14150:	str	r4, [sp]
   14154:	ldr	r1, [pc, #1068]	; 14588 <g_strcmp0@plt+0xc8c>
   14158:	bl	1344c <g_signal_connect_data@plt>
   1415c:	mov	r1, sl
   14160:	mov	r0, r9
   14164:	bl	13170 <g_type_check_instance_cast@plt>
   14168:	mov	r8, r0
   1416c:	bl	133c8 <gtk_cell_renderer_text_new@plt>
   14170:	mov	r3, #0
   14174:	str	r4, [sp]
   14178:	mov	r2, #0
   1417c:	ldr	r1, [pc, #1032]	; 1458c <g_strcmp0@plt+0xc90>
   14180:	mov	r6, r0
   14184:	bl	13578 <g_object_set@plt>
   14188:	mov	r0, r4
   1418c:	mov	r2, #5
   14190:	ldr	r1, [pc, #1016]	; 14590 <g_strcmp0@plt+0xc94>
   14194:	bl	13554 <dcgettext@plt>
   14198:	mov	r3, #3
   1419c:	ldr	r2, [pc, #1008]	; 14594 <g_strcmp0@plt+0xc98>
   141a0:	mov	r1, r6
   141a4:	str	r4, [sp]
   141a8:	bl	1317c <gtk_tree_view_column_new_with_attributes@plt>
   141ac:	mov	r6, r0
   141b0:	mov	r1, r0
   141b4:	mov	r0, r8
   141b8:	bl	13038 <gtk_tree_view_append_column@plt>
   141bc:	mov	r1, r4
   141c0:	mov	r0, r6
   141c4:	bl	13560 <gtk_tree_view_column_set_expand@plt>
   141c8:	mov	r0, r6
   141cc:	mov	r1, #2
   141d0:	bl	13290 <gtk_tree_view_column_set_sort_column_id@plt>
   141d4:	bl	1341c <gtk_tree_view_column_new@plt>
   141d8:	mov	r2, #5
   141dc:	ldr	r1, [pc, #948]	; 14598 <g_strcmp0@plt+0xc9c>
   141e0:	mov	r6, r0
   141e4:	mov	r0, r4
   141e8:	bl	13554 <dcgettext@plt>
   141ec:	mov	r1, r0
   141f0:	mov	r0, r6
   141f4:	bl	13440 <gtk_tree_view_column_set_title@plt>
   141f8:	bl	135a8 <gtk_cell_renderer_pixbuf_new@plt>
   141fc:	mov	r3, r4
   14200:	mov	r2, #4
   14204:	ldr	r1, [pc, #912]	; 1459c <g_strcmp0@plt+0xca0>
   14208:	mov	fp, r0
   1420c:	bl	13578 <g_object_set@plt>
   14210:	mov	r0, fp
   14214:	mov	r3, #0
   14218:	str	r4, [sp]
   1421c:	mov	r2, #0
   14220:	ldr	r1, [pc, #868]	; 1458c <g_strcmp0@plt+0xc90>
   14224:	bl	13578 <g_object_set@plt>
   14228:	mov	r2, r4
   1422c:	mov	r1, fp
   14230:	mov	r0, r6
   14234:	bl	130ec <gtk_tree_view_column_pack_start@plt>
   14238:	mov	r3, r4
   1423c:	mov	r1, fp
   14240:	mov	r0, r6
   14244:	ldr	r2, [pc, #852]	; 145a0 <g_strcmp0@plt+0xca4>
   14248:	bl	137ac <gtk_tree_view_column_add_attribute@plt>
   1424c:	bl	133c8 <gtk_cell_renderer_text_new@plt>
   14250:	mov	r3, #0
   14254:	str	r4, [sp]
   14258:	mov	r2, #0
   1425c:	ldr	r1, [pc, #808]	; 1458c <g_strcmp0@plt+0xc90>
   14260:	mov	fp, r0
   14264:	bl	13578 <g_object_set@plt>
   14268:	mov	r1, fp
   1426c:	mov	r0, r6
   14270:	mov	r2, #1
   14274:	bl	130ec <gtk_tree_view_column_pack_start@plt>
   14278:	mov	r3, #4
   1427c:	ldr	r2, [pc, #784]	; 14594 <g_strcmp0@plt+0xc98>
   14280:	mov	r1, fp
   14284:	mov	r0, r6
   14288:	bl	137ac <gtk_tree_view_column_add_attribute@plt>
   1428c:	mov	r1, r4
   14290:	mov	r0, r6
   14294:	bl	13560 <gtk_tree_view_column_set_expand@plt>
   14298:	mov	r0, r6
   1429c:	mov	r1, #4
   142a0:	bl	13290 <gtk_tree_view_column_set_sort_column_id@plt>
   142a4:	bl	133d4 <gtk_tree_view_column_get_type@plt>
   142a8:	mov	r1, r0
   142ac:	mov	r0, r6
   142b0:	bl	13170 <g_type_check_instance_cast@plt>
   142b4:	mov	r1, r0
   142b8:	mov	r0, r8
   142bc:	bl	13038 <gtk_tree_view_append_column@plt>
   142c0:	bl	133c8 <gtk_cell_renderer_text_new@plt>
   142c4:	str	r4, [sp]
   142c8:	mov	r2, #0
   142cc:	mov	r3, #0
   142d0:	ldr	r1, [pc, #692]	; 1458c <g_strcmp0@plt+0xc90>
   142d4:	mov	r6, r0
   142d8:	bl	13578 <g_object_set@plt>
   142dc:	mov	r3, r4
   142e0:	mov	r2, r4
   142e4:	mov	r0, r6
   142e8:	ldr	r1, [pc, #692]	; 145a4 <g_strcmp0@plt+0xca8>
   142ec:	bl	13578 <g_object_set@plt>
   142f0:	mov	r3, r4
   142f4:	mov	r0, r6
   142f8:	mov	r2, #400	; 0x190
   142fc:	ldr	r1, [pc, #676]	; 145a8 <g_strcmp0@plt+0xcac>
   14300:	bl	13578 <g_object_set@plt>
   14304:	mov	r3, r6
   14308:	str	r4, [sp, #4]
   1430c:	str	r4, [sp]
   14310:	ldr	r2, [pc, #660]	; 145ac <g_strcmp0@plt+0xcb0>
   14314:	ldr	r1, [pc, #660]	; 145b0 <g_strcmp0@plt+0xcb4>
   14318:	mov	r0, r8
   1431c:	bl	1344c <g_signal_connect_data@plt>
   14320:	mov	r0, r4
   14324:	mov	r2, #5
   14328:	ldr	r1, [pc, #644]	; 145b4 <g_strcmp0@plt+0xcb8>
   1432c:	bl	13554 <dcgettext@plt>
   14330:	mov	r3, #5
   14334:	ldr	r2, [pc, #600]	; 14594 <g_strcmp0@plt+0xc98>
   14338:	mov	r1, r6
   1433c:	str	r4, [sp]
   14340:	bl	1317c <gtk_tree_view_column_new_with_attributes@plt>
   14344:	mov	fp, r0
   14348:	mov	r1, r0
   1434c:	mov	r0, r8
   14350:	bl	13038 <gtk_tree_view_append_column@plt>
   14354:	mov	r0, fp
   14358:	mov	r1, #1
   1435c:	bl	13560 <gtk_tree_view_column_set_expand@plt>
   14360:	mov	r0, r4
   14364:	mov	r2, #5
   14368:	ldr	r1, [pc, #584]	; 145b8 <g_strcmp0@plt+0xcbc>
   1436c:	bl	13554 <dcgettext@plt>
   14370:	mov	r3, #7
   14374:	ldr	r2, [pc, #536]	; 14594 <g_strcmp0@plt+0xc98>
   14378:	mov	r1, r6
   1437c:	str	r4, [sp]
   14380:	bl	1317c <gtk_tree_view_column_new_with_attributes@plt>
   14384:	mov	fp, r0
   14388:	mov	r1, r0
   1438c:	mov	r0, r8
   14390:	bl	13038 <gtk_tree_view_append_column@plt>
   14394:	mov	r1, r4
   14398:	mov	r0, fp
   1439c:	bl	13560 <gtk_tree_view_column_set_expand@plt>
   143a0:	mov	r0, fp
   143a4:	mov	r1, #7
   143a8:	bl	13290 <gtk_tree_view_column_set_sort_column_id@plt>
   143ac:	mov	r0, r4
   143b0:	mov	r2, #5
   143b4:	ldr	r1, [pc, #512]	; 145bc <g_strcmp0@plt+0xcc0>
   143b8:	bl	13554 <dcgettext@plt>
   143bc:	mov	r3, #8
   143c0:	ldr	r2, [pc, #460]	; 14594 <g_strcmp0@plt+0xc98>
   143c4:	mov	r1, r6
   143c8:	str	r4, [sp]
   143cc:	bl	1317c <gtk_tree_view_column_new_with_attributes@plt>
   143d0:	mov	r6, r0
   143d4:	mov	r1, r0
   143d8:	mov	r0, r8
   143dc:	bl	13038 <gtk_tree_view_append_column@plt>
   143e0:	mov	r1, r4
   143e4:	mov	r0, r6
   143e8:	bl	13560 <gtk_tree_view_column_set_expand@plt>
   143ec:	mov	r0, r6
   143f0:	mov	r1, #8
   143f4:	bl	13290 <gtk_tree_view_column_set_sort_column_id@plt>
   143f8:	mov	r1, sl
   143fc:	mov	r0, r9
   14400:	bl	13170 <g_type_check_instance_cast@plt>
   14404:	bl	13188 <gtk_tree_view_columns_autosize@plt>
   14408:	bl	132e4 <gtk_tree_sortable_get_type@plt>
   1440c:	ldr	r4, [r5, #12]
   14410:	mov	r1, r0
   14414:	mov	r0, r4
   14418:	bl	13170 <g_type_check_instance_cast@plt>
   1441c:	mov	r2, #1
   14420:	mov	r1, r2
   14424:	bl	13794 <gtk_tree_sortable_set_sort_column_id@plt>
   14428:	ldr	r1, [pc, #276]	; 14544 <g_strcmp0@plt+0xc48>
   1442c:	ldr	r0, [r5]
   14430:	bl	132f0 <gtk_builder_get_object@plt>
   14434:	mov	r1, r7
   14438:	bl	13170 <g_type_check_instance_cast@plt>
   1443c:	mov	r4, r0
   14440:	bl	136f8 <gtk_widget_show@plt>
   14444:	ldr	r3, [r5, #16]
   14448:	cmp	r3, #0
   1444c:	bne	14508 <g_strcmp0@plt+0xc0c>
   14450:	bl	13e78 <g_strcmp0@plt+0x57c>
   14454:	ldr	r0, [r5, #12]
   14458:	bl	13704 <g_object_unref@plt>
   1445c:	ldr	r0, [r5, #4]
   14460:	bl	13704 <g_object_unref@plt>
   14464:	mov	r0, #0
   14468:	bl	13548 <g_free@plt>
   1446c:	ldr	r0, [r5, #8]
   14470:	bl	13548 <g_free@plt>
   14474:	ldr	r0, [r5, #20]
   14478:	cmp	r0, #0
   1447c:	beq	14484 <g_strcmp0@plt+0xb88>
   14480:	bl	137b8 <g_ptr_array_unref@plt>
   14484:	ldr	r3, [pc, #168]	; 14534 <g_strcmp0@plt+0xc38>
   14488:	ldr	r2, [sp, #44]	; 0x2c
   1448c:	ldr	r3, [r3]
   14490:	cmp	r2, r3
   14494:	bne	14530 <g_strcmp0@plt+0xc34>
   14498:	add	sp, sp, #52	; 0x34
   1449c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144a0:	bl	1885c <g_strcmp0@plt+0x4f60>
   144a4:	ldr	r1, [pc, #160]	; 1454c <g_strcmp0@plt+0xc50>
   144a8:	mov	r6, r0
   144ac:	ldr	r0, [r5]
   144b0:	bl	132f0 <gtk_builder_get_object@plt>
   144b4:	mov	r1, r7
   144b8:	bl	13170 <g_type_check_instance_cast@plt>
   144bc:	mov	r8, r0
   144c0:	bl	13788 <gtk_entry_get_type@plt>
   144c4:	mov	r1, r0
   144c8:	mov	r0, r8
   144cc:	bl	13170 <g_type_check_instance_cast@plt>
   144d0:	mov	r1, r6
   144d4:	bl	133b0 <gtk_entry_set_completion@plt>
   144d8:	mov	r0, r6
   144dc:	bl	13704 <g_object_unref@plt>
   144e0:	b	140a0 <g_strcmp0@plt+0x7a4>
   144e4:	ldr	r3, [sp, #40]	; 0x28
   144e8:	ldr	r2, [pc, #208]	; 145c0 <g_strcmp0@plt+0xcc4>
   144ec:	mov	r1, #16
   144f0:	ldr	r3, [r3, #8]
   144f4:	ldr	r0, [pc, #200]	; 145c4 <g_strcmp0@plt+0xcc8>
   144f8:	bl	131d0 <g_log@plt>
   144fc:	ldr	r0, [sp, #40]	; 0x28
   14500:	bl	13104 <g_error_free@plt>
   14504:	b	14454 <g_strcmp0@plt+0xb58>
   14508:	ldr	r2, [pc, #184]	; 145c8 <g_strcmp0@plt+0xccc>
   1450c:	mov	r1, #128	; 0x80
   14510:	ldr	r0, [pc, #172]	; 145c4 <g_strcmp0@plt+0xcc8>
   14514:	bl	131d0 <g_log@plt>
   14518:	ldr	r1, [sp, #36]	; 0x24
   1451c:	mov	r0, r4
   14520:	bl	13170 <g_type_check_instance_cast@plt>
   14524:	ldr	r1, [r5, #16]
   14528:	bl	17e64 <g_strcmp0@plt+0x4568>
   1452c:	b	14450 <g_strcmp0@plt+0xb54>
   14530:	bl	1350c <__stack_chk_fail@plt>
   14534:	andeq	sp, r2, r0, asr lr
   14538:	andeq	lr, r2, r4, lsr #6
   1453c:	andeq	r9, r1, ip, asr #14
   14540:	andeq	r9, r1, r8, asr r7
   14544:	andeq	r9, r1, r8, lsl r7
   14548:	andeq	r9, r1, r4, lsr #15
   1454c:	andeq	r9, r1, ip, lsr #15
   14550:			; <UNDEFINED> instruction: 0x000197bc
   14554:	andeq	r3, r1, r4, lsl lr
   14558:	andeq	r9, r1, ip, asr #15
   1455c:	ldrdeq	r9, [r1], -r4
   14560:	andeq	r4, r1, ip, asr #11
   14564:	andeq	r9, r1, r4, ror #15
   14568:	andeq	r4, r1, r8, lsr pc
   1456c:	strdeq	r9, [r1], -r4
   14570:	andeq	r9, r1, r0, lsl #16
   14574:	andeq	r9, r1, r4, lsl r8
   14578:	andeq	r4, r1, r8, lsr #30
   1457c:	andeq	r9, r1, r4, lsr #16
   14580:	andeq	r9, r1, r8, lsr r8
   14584:	ldrdeq	r4, [r1], -r0
   14588:	andeq	r9, r1, r8, asr #16
   1458c:	andeq	r9, r1, r0, asr r8
   14590:	andeq	r9, r1, r8, asr r8
   14594:	andeq	r9, r1, r0, ror #16
   14598:	andeq	r9, r1, r8, ror #16
   1459c:	andeq	r9, r1, r0, ror r8
   145a0:	andeq	r9, r1, ip, ror r8
   145a4:	andeq	r9, r1, r8, lsl #17
   145a8:	andeq	r9, r1, r0, asr #14
   145ac:	andeq	r3, r1, r4, lsr lr
   145b0:	muleq	r1, r4, r8
   145b4:	andeq	r9, r1, r4, lsr #17
   145b8:	andeq	r9, r1, ip, lsr #17
   145bc:			; <UNDEFINED> instruction: 0x000198b8
   145c0:	andeq	r9, r1, ip, ror r7
   145c4:	muleq	r1, r4, r7
   145c8:	andeq	r9, r1, r4, asr #17
   145cc:	b	13e78 <g_strcmp0@plt+0x57c>
   145d0:	push	{r4, lr}
   145d4:	sub	sp, sp, #40	; 0x28
   145d8:	ldr	r4, [pc, #136]	; 14668 <g_strcmp0@plt+0xd6c>
   145dc:	add	r2, sp, #20
   145e0:	add	r1, sp, #12
   145e4:	ldr	r3, [r4]
   145e8:	str	r3, [sp, #36]	; 0x24
   145ec:	bl	135c0 <gtk_tree_selection_get_selected@plt>
   145f0:	cmp	r0, #0
   145f4:	beq	14650 <g_strcmp0@plt+0xd54>
   145f8:	mov	r0, #0
   145fc:	bl	13548 <g_free@plt>
   14600:	mvn	r3, #0
   14604:	add	r1, sp, #20
   14608:	str	r3, [sp]
   1460c:	mov	r2, #6
   14610:	add	r3, sp, #16
   14614:	ldr	r0, [sp, #12]
   14618:	bl	13884 <gtk_tree_model_get@plt>
   1461c:	ldr	r0, [pc, #72]	; 1466c <g_strcmp0@plt+0xd70>
   14620:	ldr	r3, [sp, #16]
   14624:	ldr	r2, [pc, #68]	; 14670 <g_strcmp0@plt+0xd74>
   14628:	mov	r1, #128	; 0x80
   1462c:	bl	131d0 <g_log@plt>
   14630:	ldr	r0, [sp, #16]
   14634:	bl	13548 <g_free@plt>
   14638:	ldr	r2, [sp, #36]	; 0x24
   1463c:	ldr	r3, [r4]
   14640:	cmp	r2, r3
   14644:	bne	14664 <g_strcmp0@plt+0xd68>
   14648:	add	sp, sp, #40	; 0x28
   1464c:	pop	{r4, pc}
   14650:	ldr	r2, [pc, #28]	; 14674 <g_strcmp0@plt+0xd78>
   14654:	mov	r1, #128	; 0x80
   14658:	ldr	r0, [pc, #12]	; 1466c <g_strcmp0@plt+0xd70>
   1465c:	bl	131d0 <g_log@plt>
   14660:	b	14638 <g_strcmp0@plt+0xd3c>
   14664:	bl	1350c <__stack_chk_fail@plt>
   14668:	andeq	sp, r2, r0, asr lr
   1466c:	muleq	r1, r4, r7
   14670:	ldrdeq	r9, [r1], -r4
   14674:	andeq	r9, r1, r8, ror #17
   14678:	ldr	r3, [pc, #2068]	; 14e94 <g_strcmp0@plt+0x1598>
   1467c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14680:	sub	sp, sp, #260	; 0x104
   14684:	ldr	r9, [pc, #2060]	; 14e98 <g_strcmp0@plt+0x159c>
   14688:	ldr	r3, [r3]
   1468c:	ldr	r0, [r9, #8]
   14690:	str	r3, [sp, #252]	; 0xfc
   14694:	bl	13548 <g_free@plt>
   14698:	ldr	r1, [pc, #2044]	; 14e9c <g_strcmp0@plt+0x15a0>
   1469c:	ldr	r0, [r9]
   146a0:	bl	132f0 <gtk_builder_get_object@plt>
   146a4:	mov	r4, r0
   146a8:	bl	13134 <gtk_widget_get_type@plt>
   146ac:	mov	r1, r0
   146b0:	mov	r0, r4
   146b4:	bl	13170 <g_type_check_instance_cast@plt>
   146b8:	mov	r4, r0
   146bc:	bl	13788 <gtk_entry_get_type@plt>
   146c0:	mov	r1, r0
   146c4:	mov	r0, r4
   146c8:	bl	13170 <g_type_check_instance_cast@plt>
   146cc:	bl	131f4 <gtk_entry_get_text@plt>
   146d0:	subs	r3, r0, #0
   146d4:	beq	146e4 <g_strcmp0@plt+0xde8>
   146d8:	ldrb	r3, [r3]
   146dc:	cmp	r3, #0
   146e0:	bne	14de8 <g_strcmp0@plt+0x14ec>
   146e4:	mov	r3, #0
   146e8:	str	r3, [r9, #8]
   146ec:	ldr	r3, [r9, #20]
   146f0:	ldr	r2, [pc, #1960]	; 14ea0 <g_strcmp0@plt+0x15a4>
   146f4:	mov	r1, #128	; 0x80
   146f8:	ldr	r3, [r3, #4]
   146fc:	ldr	r0, [pc, #1952]	; 14ea4 <g_strcmp0@plt+0x15a8>
   14700:	bl	131d0 <g_log@plt>
   14704:	ldr	r1, [pc, #1948]	; 14ea8 <g_strcmp0@plt+0x15ac>
   14708:	ldr	r0, [r9]
   1470c:	bl	132f0 <gtk_builder_get_object@plt>
   14710:	mov	r4, r0
   14714:	bl	13524 <gtk_tree_view_get_type@plt>
   14718:	mov	r1, r0
   1471c:	str	r0, [sp, #96]	; 0x60
   14720:	mov	r0, r4
   14724:	bl	13170 <g_type_check_instance_cast@plt>
   14728:	bl	13254 <gtk_tree_view_get_model@plt>
   1472c:	mov	r2, #0
   14730:	ldr	r1, [pc, #1908]	; 14eac <g_strcmp0@plt+0x15b0>
   14734:	str	r0, [sp, #100]	; 0x64
   14738:	bl	130e0 <gtk_tree_model_foreach@plt>
   1473c:	ldr	r3, [r9, #20]
   14740:	ldr	r2, [r3, #4]
   14744:	cmp	r2, #0
   14748:	addeq	fp, sp, #136	; 0x88
   1474c:	beq	14d0c <g_strcmp0@plt+0x1410>
   14750:	mov	sl, #0
   14754:	add	fp, sp, #136	; 0x88
   14758:	mov	r8, sl
   1475c:	str	fp, [sp, #84]	; 0x54
   14760:	b	14b00 <g_strcmp0@plt+0x1204>
   14764:	mov	r0, r2
   14768:	ldr	r1, [r9, #8]
   1476c:	bl	134b8 <g_strrstr@plt>
   14770:	cmp	r0, #0
   14774:	beq	14c04 <g_strcmp0@plt+0x1308>
   14778:	ldr	r0, [sl, #8]
   1477c:	cmp	r0, #0
   14780:	bne	14c84 <g_strcmp0@plt+0x1388>
   14784:	mov	r0, sl
   14788:	bl	134d0 <g_strfreev@plt>
   1478c:	mov	r0, r5
   14790:	bl	134d0 <g_strfreev@plt>
   14794:	ldr	r0, [sp, #124]	; 0x7c
   14798:	bl	13548 <g_free@plt>
   1479c:	ldr	r0, [sp, #132]	; 0x84
   147a0:	bl	13548 <g_free@plt>
   147a4:	ldr	r0, [sp, #136]	; 0x88
   147a8:	bl	13548 <g_free@plt>
   147ac:	ldr	r0, [sp, #92]	; 0x5c
   147b0:	bl	134d0 <g_strfreev@plt>
   147b4:	ldr	r1, [pc, #1772]	; 14ea8 <g_strcmp0@plt+0x15ac>
   147b8:	ldr	r0, [r9]
   147bc:	bl	132f0 <gtk_builder_get_object@plt>
   147c0:	ldr	r1, [sp, #96]	; 0x60
   147c4:	bl	13170 <g_type_check_instance_cast@plt>
   147c8:	bl	13254 <gtk_tree_view_get_model@plt>
   147cc:	ldr	r2, [pc, #1756]	; 14eb0 <g_strcmp0@plt+0x15b4>
   147d0:	add	r3, sp, #120	; 0x78
   147d4:	add	ip, sp, #116	; 0x74
   147d8:	mov	r5, #0
   147dc:	add	r1, sp, #112	; 0x70
   147e0:	str	r2, [sp, #4]
   147e4:	str	r3, [sp, #32]
   147e8:	add	r2, sp, #108	; 0x6c
   147ec:	add	r3, sp, #104	; 0x68
   147f0:	str	ip, [sp, #24]
   147f4:	str	r5, [sp, #52]	; 0x34
   147f8:	str	r1, [sp, #16]
   147fc:	str	r2, [sp, #8]
   14800:	ldr	r1, [pc, #1708]	; 14eb4 <g_strcmp0@plt+0x15b8>
   14804:	add	r2, sp, #132	; 0x84
   14808:	str	r3, [sp]
   1480c:	ldr	r3, [pc, #1700]	; 14eb8 <g_strcmp0@plt+0x15bc>
   14810:	mov	sl, r0
   14814:	add	r0, sp, #128	; 0x80
   14818:	str	r0, [sp, #48]	; 0x30
   1481c:	ldr	r0, [pc, #1688]	; 14ebc <g_strcmp0@plt+0x15c0>
   14820:	str	r0, [sp, #44]	; 0x2c
   14824:	add	r0, sp, #124	; 0x7c
   14828:	str	r0, [sp, #40]	; 0x28
   1482c:	ldr	r0, [pc, #1676]	; 14ec0 <g_strcmp0@plt+0x15c4>
   14830:	str	r0, [sp, #36]	; 0x24
   14834:	ldr	r0, [pc, #1672]	; 14ec4 <g_strcmp0@plt+0x15c8>
   14838:	str	r0, [sp, #28]
   1483c:	ldr	r0, [pc, #1668]	; 14ec8 <g_strcmp0@plt+0x15cc>
   14840:	str	r0, [sp, #20]
   14844:	ldr	r0, [pc, #1664]	; 14ecc <g_strcmp0@plt+0x15d0>
   14848:	str	r0, [sp, #12]
   1484c:	mov	r0, fp
   14850:	bl	135b4 <g_object_get@plt>
   14854:	ldr	r0, [pc, #1652]	; 14ed0 <g_strcmp0@plt+0x15d4>
   14858:	ldr	r6, [sp, #128]	; 0x80
   1485c:	bl	13140 <g_string_new@plt>
   14860:	mov	r2, r5
   14864:	ldr	r1, [pc, #1640]	; 14ed4 <g_strcmp0@plt+0x15d8>
   14868:	mov	r4, r0
   1486c:	mov	r0, r6
   14870:	bl	133bc <g_strsplit@plt>
   14874:	mov	r1, #12
   14878:	mov	r5, r0
   1487c:	bl	13ce0 <g_strcmp0@plt+0x3e4>
   14880:	subs	r6, r0, #0
   14884:	beq	14894 <g_strcmp0@plt+0xf98>
   14888:	mov	r1, r6
   1488c:	mov	r0, r4
   14890:	bl	13854 <g_string_append@plt>
   14894:	mov	r0, r6
   14898:	bl	13548 <g_free@plt>
   1489c:	mov	r1, #13
   148a0:	mov	r0, r5
   148a4:	bl	13ce0 <g_strcmp0@plt+0x3e4>
   148a8:	subs	r6, r0, #0
   148ac:	beq	148bc <g_strcmp0@plt+0xfc0>
   148b0:	mov	r1, r6
   148b4:	mov	r0, r4
   148b8:	bl	13854 <g_string_append@plt>
   148bc:	mov	r0, r6
   148c0:	bl	13548 <g_free@plt>
   148c4:	mov	r1, #11
   148c8:	mov	r0, r5
   148cc:	bl	13ce0 <g_strcmp0@plt+0x3e4>
   148d0:	subs	r6, r0, #0
   148d4:	beq	148e4 <g_strcmp0@plt+0xfe8>
   148d8:	mov	r1, r6
   148dc:	mov	r0, r4
   148e0:	bl	13854 <g_string_append@plt>
   148e4:	mov	r0, r6
   148e8:	bl	13548 <g_free@plt>
   148ec:	mov	r0, r5
   148f0:	bl	134d0 <g_strfreev@plt>
   148f4:	ldr	r1, [r4, #4]
   148f8:	cmp	r1, #0
   148fc:	bne	14d54 <g_strcmp0@plt+0x1458>
   14900:	mov	r0, r4
   14904:	mov	r1, #0
   14908:	bl	136b0 <g_string_free@plt>
   1490c:	ldr	r5, [sp, #84]	; 0x54
   14910:	mov	r1, r5
   14914:	mov	fp, r0
   14918:	ldr	r0, [sp, #108]	; 0x6c
   1491c:	bl	138d8 <g_time_val_from_iso8601@plt>
   14920:	bl	133f8 <g_date_new@plt>
   14924:	mov	r1, r5
   14928:	mov	r4, r0
   1492c:	bl	134ac <g_date_set_time_val@plt>
   14930:	mov	r2, #5
   14934:	ldr	r1, [pc, #1436]	; 14ed8 <g_strcmp0@plt+0x15dc>
   14938:	mov	r0, #0
   1493c:	bl	13554 <dcgettext@plt>
   14940:	mov	r3, r4
   14944:	mov	r1, #100	; 0x64
   14948:	mov	r2, r0
   1494c:	add	r0, sp, #152	; 0x98
   14950:	bl	13014 <g_date_strftime@plt>
   14954:	mov	r0, r4
   14958:	bl	131e8 <g_date_free@plt>
   1495c:	add	r0, sp, #152	; 0x98
   14960:	bl	132c0 <g_strdup@plt>
   14964:	mov	r5, r0
   14968:	ldr	r0, [sp, #132]	; 0x84
   1496c:	bl	176dc <g_strcmp0@plt+0x3de0>
   14970:	mov	r7, r0
   14974:	ldr	r0, [sp, #132]	; 0x84
   14978:	bl	17008 <g_strcmp0@plt+0x370c>
   1497c:	str	r0, [sp, #88]	; 0x58
   14980:	ldr	r0, [sp, #124]	; 0x7c
   14984:	bl	13248 <getpwuid@plt>
   14988:	cmp	r0, #0
   1498c:	moveq	r6, r0
   14990:	beq	149a0 <g_strcmp0@plt+0x10a4>
   14994:	ldr	r6, [r0, #16]
   14998:	cmp	r6, #0
   1499c:	ldreq	r6, [r0]
   149a0:	ldr	r4, [sp, #120]	; 0x78
   149a4:	ldr	r1, [pc, #1328]	; 14edc <g_strcmp0@plt+0x15e0>
   149a8:	mov	r0, r4
   149ac:	bl	1356c <strstr@plt>
   149b0:	subs	r3, r0, #0
   149b4:	beq	14cd4 <g_strcmp0@plt+0x13d8>
   149b8:	mov	r2, #5
   149bc:	ldr	r1, [pc, #1308]	; 14ee0 <g_strcmp0@plt+0x15e4>
   149c0:	mov	r0, #0
   149c4:	bl	13554 <dcgettext@plt>
   149c8:	mov	r4, r0
   149cc:	mov	r3, #0
   149d0:	ldr	r2, [sp, #104]	; 0x68
   149d4:	ldr	r1, [pc, #1288]	; 14ee4 <g_strcmp0@plt+0x15e8>
   149d8:	mov	r0, sl
   149dc:	str	r3, [r9, #24]
   149e0:	bl	130e0 <gtk_tree_model_foreach@plt>
   149e4:	ldr	r2, [r9, #24]
   149e8:	cmp	r2, #0
   149ec:	beq	14d64 <g_strcmp0@plt+0x1468>
   149f0:	mov	r0, sl
   149f4:	ldr	r1, [sp, #84]	; 0x54
   149f8:	bl	13878 <gtk_tree_model_get_iter@plt>
   149fc:	ldr	r0, [r9, #24]
   14a00:	bl	13374 <gtk_tree_path_free@plt>
   14a04:	ldr	r1, [sp, #108]	; 0x6c
   14a08:	ldr	r0, [sp, #104]	; 0x68
   14a0c:	str	r1, [sp, #20]
   14a10:	str	r1, [sp, #4]
   14a14:	mov	r1, #5
   14a18:	str	r1, [sp, #32]
   14a1c:	mov	r1, #4
   14a20:	str	r1, [sp, #24]
   14a24:	mov	r1, #2
   14a28:	ldr	r3, [sp, #88]	; 0x58
   14a2c:	str	r1, [sp, #16]
   14a30:	mov	r1, #3
   14a34:	mov	r2, #1
   14a38:	str	r1, [sp, #8]
   14a3c:	mvn	ip, #0
   14a40:	mov	r1, #8
   14a44:	str	r0, [sp, #44]	; 0x2c
   14a48:	mov	r0, #7
   14a4c:	str	r3, [sp, #28]
   14a50:	str	r2, [sp]
   14a54:	mov	r3, r7
   14a58:	mov	lr, #9
   14a5c:	str	r2, [sp, #68]	; 0x44
   14a60:	str	ip, [sp, #72]	; 0x48
   14a64:	mov	r2, #0
   14a68:	mov	ip, #6
   14a6c:	str	r1, [sp, #56]	; 0x38
   14a70:	str	r0, [sp, #48]	; 0x30
   14a74:	ldr	r1, [sp, #84]	; 0x54
   14a78:	ldr	r0, [r9, #12]
   14a7c:	str	r5, [sp, #12]
   14a80:	str	fp, [sp, #36]	; 0x24
   14a84:	str	r4, [sp, #60]	; 0x3c
   14a88:	str	r6, [sp, #52]	; 0x34
   14a8c:	str	lr, [sp, #64]	; 0x40
   14a90:	str	ip, [sp, #40]	; 0x28
   14a94:	bl	130a4 <gtk_list_store_set@plt>
   14a98:	ldr	r2, [r9, #28]
   14a9c:	ldr	r3, [pc, #1092]	; 14ee8 <g_strcmp0@plt+0x15ec>
   14aa0:	add	r1, r2, #1
   14aa4:	str	r1, [r9, #28]
   14aa8:	umull	r0, r3, r3, r2
   14aac:	lsr	r3, r3, #3
   14ab0:	add	r3, r3, r3, lsl #2
   14ab4:	cmp	r2, r3, lsl #1
   14ab8:	beq	14c60 <g_strcmp0@plt+0x1364>
   14abc:	ldr	r0, [sp, #104]	; 0x68
   14ac0:	bl	13548 <g_free@plt>
   14ac4:	ldr	r0, [sp, #108]	; 0x6c
   14ac8:	bl	13548 <g_free@plt>
   14acc:	ldr	r0, [sp, #120]	; 0x78
   14ad0:	bl	13548 <g_free@plt>
   14ad4:	ldr	r0, [sp, #128]	; 0x80
   14ad8:	bl	13548 <g_free@plt>
   14adc:	mov	r0, fp
   14ae0:	bl	13548 <g_free@plt>
   14ae4:	mov	r0, r5
   14ae8:	bl	13548 <g_free@plt>
   14aec:	ldr	r3, [r9, #20]
   14af0:	add	r8, r8, #1
   14af4:	ldr	r2, [r3, #4]
   14af8:	cmp	r2, r8
   14afc:	bls	14d08 <g_strcmp0@plt+0x140c>
   14b00:	ldr	r2, [r3]
   14b04:	ldr	r0, [sp, #84]	; 0x54
   14b08:	mov	r1, #0
   14b0c:	ldr	fp, [r2, r8, lsl #2]
   14b10:	str	r0, [sp, #16]
   14b14:	ldr	r0, [pc, #928]	; 14ebc <g_strcmp0@plt+0x15c0>
   14b18:	ldr	r3, [pc, #940]	; 14ecc <g_strcmp0@plt+0x15d0>
   14b1c:	str	r0, [sp, #12]
   14b20:	add	r0, sp, #132	; 0x84
   14b24:	str	r0, [sp, #8]
   14b28:	ldr	r0, [pc, #916]	; 14ec4 <g_strcmp0@plt+0x15c8>
   14b2c:	str	r1, [sp, #20]
   14b30:	str	r0, [sp, #4]
   14b34:	add	r0, sp, #128	; 0x80
   14b38:	str	r0, [sp]
   14b3c:	add	r2, sp, #124	; 0x7c
   14b40:	mov	r0, fp
   14b44:	ldr	r1, [pc, #876]	; 14eb8 <g_strcmp0@plt+0x15bc>
   14b48:	bl	135b4 <g_object_get@plt>
   14b4c:	ldr	r3, [sp, #128]	; 0x80
   14b50:	cmp	r3, #0
   14b54:	beq	14c90 <g_strcmp0@plt+0x1394>
   14b58:	ldr	r1, [r9, #8]
   14b5c:	cmp	r1, #0
   14b60:	beq	147b4 <g_strcmp0@plt+0xeb8>
   14b64:	ldr	r0, [sp, #132]	; 0x84
   14b68:	cmp	r0, #0
   14b6c:	moveq	r4, r0
   14b70:	beq	14b80 <g_strcmp0@plt+0x1284>
   14b74:	bl	134b8 <g_strrstr@plt>
   14b78:	adds	r4, r0, #0
   14b7c:	movne	r4, #1
   14b80:	mov	r2, #0
   14b84:	ldr	r1, [pc, #840]	; 14ed4 <g_strcmp0@plt+0x15d8>
   14b88:	ldr	r0, [sp, #136]	; 0x88
   14b8c:	bl	133bc <g_strsplit@plt>
   14b90:	mov	r5, r0
   14b94:	str	r0, [sp, #92]	; 0x5c
   14b98:	bl	134dc <g_strv_length@plt>
   14b9c:	subs	r3, r0, #0
   14ba0:	str	r3, [sp, #88]	; 0x58
   14ba4:	beq	14ca8 <g_strcmp0@plt+0x13ac>
   14ba8:	sub	r7, r5, #4
   14bac:	mov	r6, #0
   14bb0:	mov	r2, #0
   14bb4:	ldr	r1, [pc, #816]	; 14eec <g_strcmp0@plt+0x15f0>
   14bb8:	ldr	r0, [r7, #4]!
   14bbc:	bl	133bc <g_strsplit@plt>
   14bc0:	ldr	r1, [r9, #8]
   14bc4:	mov	r5, r0
   14bc8:	ldr	r0, [r0]
   14bcc:	bl	134b8 <g_strrstr@plt>
   14bd0:	cmp	r0, #0
   14bd4:	ldr	r0, [r5, #4]
   14bd8:	movne	r4, #1
   14bdc:	bl	13158 <pk_package_id_split@plt>
   14be0:	ldr	r1, [r9, #8]
   14be4:	mov	sl, r0
   14be8:	ldr	r0, [r0]
   14bec:	bl	134b8 <g_strrstr@plt>
   14bf0:	ldr	r2, [sl, #4]
   14bf4:	cmp	r0, #0
   14bf8:	movne	r4, #1
   14bfc:	cmp	r2, #0
   14c00:	bne	14764 <g_strcmp0@plt+0xe68>
   14c04:	ldr	r0, [sl, #8]
   14c08:	cmp	r0, #0
   14c0c:	bne	14c70 <g_strcmp0@plt+0x1374>
   14c10:	mov	r0, sl
   14c14:	bl	134d0 <g_strfreev@plt>
   14c18:	mov	r0, r5
   14c1c:	bl	134d0 <g_strfreev@plt>
   14c20:	cmp	r4, #0
   14c24:	bne	14794 <g_strcmp0@plt+0xe98>
   14c28:	ldr	r3, [sp, #88]	; 0x58
   14c2c:	add	r6, r6, #1
   14c30:	cmp	r3, r6
   14c34:	bne	14bb0 <g_strcmp0@plt+0x12b4>
   14c38:	ldr	r0, [sp, #124]	; 0x7c
   14c3c:	bl	13548 <g_free@plt>
   14c40:	ldr	r0, [sp, #132]	; 0x84
   14c44:	bl	13548 <g_free@plt>
   14c48:	ldr	r0, [sp, #136]	; 0x88
   14c4c:	bl	13548 <g_free@plt>
   14c50:	ldr	r0, [sp, #92]	; 0x5c
   14c54:	bl	134d0 <g_strfreev@plt>
   14c58:	b	14aec <g_strcmp0@plt+0x11f0>
   14c5c:	bl	1368c <gtk_main_iteration@plt>
   14c60:	bl	133a4 <gtk_events_pending@plt>
   14c64:	cmp	r0, #0
   14c68:	bne	14c5c <g_strcmp0@plt+0x1360>
   14c6c:	b	14abc <g_strcmp0@plt+0x11c0>
   14c70:	ldr	r1, [r9, #8]
   14c74:	bl	134b8 <g_strrstr@plt>
   14c78:	cmp	r0, #0
   14c7c:	bne	14784 <g_strcmp0@plt+0xe88>
   14c80:	b	14c10 <g_strcmp0@plt+0x1314>
   14c84:	ldr	r1, [r9, #8]
   14c88:	bl	134b8 <g_strrstr@plt>
   14c8c:	b	14784 <g_strcmp0@plt+0xe88>
   14c90:	ldr	r3, [sp, #124]	; 0x7c
   14c94:	ldr	r2, [pc, #596]	; 14ef0 <g_strcmp0@plt+0x15f4>
   14c98:	mov	r1, #128	; 0x80
   14c9c:	ldr	r0, [pc, #512]	; 14ea4 <g_strcmp0@plt+0x15a8>
   14ca0:	bl	131d0 <g_log@plt>
   14ca4:	b	14aec <g_strcmp0@plt+0x11f0>
   14ca8:	ldr	r0, [sp, #124]	; 0x7c
   14cac:	bl	13548 <g_free@plt>
   14cb0:	ldr	r0, [sp, #132]	; 0x84
   14cb4:	bl	13548 <g_free@plt>
   14cb8:	ldr	r0, [sp, #136]	; 0x88
   14cbc:	bl	13548 <g_free@plt>
   14cc0:	ldr	r0, [sp, #92]	; 0x5c
   14cc4:	bl	134d0 <g_strfreev@plt>
   14cc8:	cmp	r4, #0
   14ccc:	beq	14aec <g_strcmp0@plt+0x11f0>
   14cd0:	b	147b4 <g_strcmp0@plt+0xeb8>
   14cd4:	ldr	r1, [pc, #536]	; 14ef4 <g_strcmp0@plt+0x15f8>
   14cd8:	mov	r0, r4
   14cdc:	str	r3, [sp, #92]	; 0x5c
   14ce0:	bl	1356c <strstr@plt>
   14ce4:	subs	r2, r0, #0
   14ce8:	beq	14d80 <g_strcmp0@plt+0x1484>
   14cec:	ldr	r3, [sp, #92]	; 0x5c
   14cf0:	mov	r2, #5
   14cf4:	mov	r0, r3
   14cf8:	ldr	r1, [pc, #504]	; 14ef8 <g_strcmp0@plt+0x15fc>
   14cfc:	bl	13554 <dcgettext@plt>
   14d00:	mov	r4, r0
   14d04:	b	149cc <g_strcmp0@plt+0x10d0>
   14d08:	ldr	fp, [sp, #84]	; 0x54
   14d0c:	ldr	r5, [pc, #488]	; 14efc <g_strcmp0@plt+0x1600>
   14d10:	ldr	r6, [sp, #100]	; 0x64
   14d14:	mov	r4, #0
   14d18:	mov	r2, fp
   14d1c:	mov	r1, r5
   14d20:	mov	r0, r6
   14d24:	str	r4, [sp, #136]	; 0x88
   14d28:	bl	130e0 <gtk_tree_model_foreach@plt>
   14d2c:	ldr	r3, [sp, #136]	; 0x88
   14d30:	cmp	r3, #0
   14d34:	bne	14d18 <g_strcmp0@plt+0x141c>
   14d38:	ldr	r3, [pc, #340]	; 14e94 <g_strcmp0@plt+0x1598>
   14d3c:	ldr	r2, [sp, #252]	; 0xfc
   14d40:	ldr	r3, [r3]
   14d44:	cmp	r2, r3
   14d48:	bne	14e90 <g_strcmp0@plt+0x1594>
   14d4c:	add	sp, sp, #260	; 0x104
   14d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d54:	sub	r1, r1, #1
   14d58:	mov	r0, r4
   14d5c:	bl	12ffc <g_string_set_size@plt>
   14d60:	b	14900 <g_strcmp0@plt+0x1004>
   14d64:	bl	1386c <gtk_list_store_get_type@plt>
   14d68:	mov	r1, r0
   14d6c:	mov	r0, sl
   14d70:	bl	13170 <g_type_check_instance_cast@plt>
   14d74:	ldr	r1, [sp, #84]	; 0x54
   14d78:	bl	135f0 <gtk_list_store_append@plt>
   14d7c:	b	14a04 <g_strcmp0@plt+0x1108>
   14d80:	ldr	r1, [pc, #376]	; 14f00 <g_strcmp0@plt+0x1604>
   14d84:	mov	r0, r4
   14d88:	str	r2, [sp, #92]	; 0x5c
   14d8c:	bl	1356c <strstr@plt>
   14d90:	subs	r3, r0, #0
   14d94:	beq	14db4 <g_strcmp0@plt+0x14b8>
   14d98:	ldr	r2, [sp, #92]	; 0x5c
   14d9c:	ldr	r1, [pc, #352]	; 14f04 <g_strcmp0@plt+0x1608>
   14da0:	mov	r0, r2
   14da4:	mov	r2, #5
   14da8:	bl	13554 <dcgettext@plt>
   14dac:	mov	r4, r0
   14db0:	b	149cc <g_strcmp0@plt+0x10d0>
   14db4:	ldr	r1, [pc, #332]	; 14f08 <g_strcmp0@plt+0x160c>
   14db8:	mov	r0, r4
   14dbc:	str	r3, [sp, #92]	; 0x5c
   14dc0:	bl	1356c <strstr@plt>
   14dc4:	subs	r2, r0, #0
   14dc8:	beq	14df4 <g_strcmp0@plt+0x14f8>
   14dcc:	ldr	r3, [sp, #92]	; 0x5c
   14dd0:	mov	r2, #5
   14dd4:	mov	r0, r3
   14dd8:	ldr	r1, [pc, #300]	; 14f0c <g_strcmp0@plt+0x1610>
   14ddc:	bl	13554 <dcgettext@plt>
   14de0:	mov	r4, r0
   14de4:	b	149cc <g_strcmp0@plt+0x10d0>
   14de8:	bl	132c0 <g_strdup@plt>
   14dec:	str	r0, [r9, #8]
   14df0:	b	146ec <g_strcmp0@plt+0xdf0>
   14df4:	ldr	r1, [pc, #276]	; 14f10 <g_strcmp0@plt+0x1614>
   14df8:	mov	r0, r4
   14dfc:	str	r2, [sp, #92]	; 0x5c
   14e00:	bl	1356c <strstr@plt>
   14e04:	subs	r3, r0, #0
   14e08:	beq	14e28 <g_strcmp0@plt+0x152c>
   14e0c:	ldr	r2, [sp, #92]	; 0x5c
   14e10:	ldr	r1, [pc, #252]	; 14f14 <g_strcmp0@plt+0x1618>
   14e14:	mov	r0, r2
   14e18:	mov	r2, #5
   14e1c:	bl	13554 <dcgettext@plt>
   14e20:	mov	r4, r0
   14e24:	b	149cc <g_strcmp0@plt+0x10d0>
   14e28:	ldr	r1, [pc, #232]	; 14f18 <g_strcmp0@plt+0x161c>
   14e2c:	mov	r0, r4
   14e30:	str	r3, [sp, #92]	; 0x5c
   14e34:	bl	1356c <strstr@plt>
   14e38:	subs	r2, r0, #0
   14e3c:	beq	14e5c <g_strcmp0@plt+0x1560>
   14e40:	ldr	r3, [sp, #92]	; 0x5c
   14e44:	mov	r2, #5
   14e48:	mov	r0, r3
   14e4c:	ldr	r1, [pc, #200]	; 14f1c <g_strcmp0@plt+0x1620>
   14e50:	bl	13554 <dcgettext@plt>
   14e54:	mov	r4, r0
   14e58:	b	149cc <g_strcmp0@plt+0x10d0>
   14e5c:	ldr	r1, [pc, #188]	; 14f20 <g_strcmp0@plt+0x1624>
   14e60:	mov	r0, r4
   14e64:	str	r2, [sp, #92]	; 0x5c
   14e68:	bl	1356c <strstr@plt>
   14e6c:	cmp	r0, #0
   14e70:	beq	149cc <g_strcmp0@plt+0x10d0>
   14e74:	ldr	r2, [sp, #92]	; 0x5c
   14e78:	ldr	r1, [pc, #164]	; 14f24 <g_strcmp0@plt+0x1628>
   14e7c:	mov	r0, r2
   14e80:	mov	r2, #5
   14e84:	bl	13554 <dcgettext@plt>
   14e88:	mov	r4, r0
   14e8c:	b	149cc <g_strcmp0@plt+0x10d0>
   14e90:	bl	1350c <__stack_chk_fail@plt>
   14e94:	andeq	sp, r2, r0, asr lr
   14e98:	andeq	lr, r2, r4, lsr #6
   14e9c:	andeq	r9, r1, ip, lsr #15
   14ea0:	strdeq	r9, [r1], -r8
   14ea4:	muleq	r1, r4, r7
   14ea8:	andeq	r9, r1, r8, lsr r8
   14eac:	muleq	r1, ip, ip
   14eb0:	andeq	r9, r1, r0, ror #18
   14eb4:	andeq	r9, r1, r8, asr #18
   14eb8:	andeq	r9, r1, ip, lsl #18
   14ebc:	andeq	r9, r1, r0, lsl r9
   14ec0:	andeq	r9, r1, r0, asr r9
   14ec4:	andeq	r9, r1, r8, lsl r9
   14ec8:	andeq	r9, r1, r4, asr r9
   14ecc:	andeq	r9, r1, r0, lsl #18
   14ed0:	andeq	r9, r1, ip, lsr #14
   14ed4:	andeq	r9, r1, r4, ror #23
   14ed8:	andeq	r9, r1, ip, ror #18
   14edc:	andeq	r9, r1, r8, ror r9
   14ee0:	andeq	r9, r1, r0, lsl #19
   14ee4:	andeq	r5, r1, r0, lsr r0
   14ee8:	stclgt	12, cr12, [ip], {205}	; 0xcd
   14eec:	strdeq	r9, [r1], -r0
   14ef0:	andeq	r9, r1, r0, lsr #18
   14ef4:	muleq	r1, r4, r9
   14ef8:	andeq	r9, r1, r4, lsr #19
   14efc:	andeq	r5, r1, r0, asr #1
   14f00:			; <UNDEFINED> instruction: 0x000199b4
   14f04:	andeq	r9, r1, r8, asr #19
   14f08:	andeq	r9, r1, r0, ror #19
   14f0c:	strdeq	r9, [r1], -r0
   14f10:	strdeq	r9, [r1], -ip
   14f14:	andeq	r9, r1, r4, lsl sl
   14f18:	andeq	r9, r1, r0, lsr sl
   14f1c:	andeq	r9, r1, r8, asr #20
   14f20:	andeq	r9, r1, r8, asr sl
   14f24:	andeq	r9, r1, r8, ror #20
   14f28:	push	{r4, lr}
   14f2c:	bl	14678 <g_strcmp0@plt+0xd7c>
   14f30:	mov	r0, #0
   14f34:	pop	{r4, pc}
   14f38:	b	14678 <g_strcmp0@plt+0xd7c>
   14f3c:	push	{r4, r5, r6, r7, lr}
   14f40:	sub	sp, sp, #20
   14f44:	ldr	r5, [pc, #208]	; 1501c <g_strcmp0@plt+0x1720>
   14f48:	ldr	r4, [pc, #208]	; 15020 <g_strcmp0@plt+0x1724>
   14f4c:	mov	r3, #0
   14f50:	ldr	r2, [r5]
   14f54:	ldr	r0, [r4, #4]
   14f58:	str	r2, [sp, #12]
   14f5c:	add	r2, sp, #8
   14f60:	str	r3, [sp, #8]
   14f64:	bl	13308 <pk_client_generic_finish@plt>
   14f68:	subs	r6, r0, #0
   14f6c:	beq	14ff4 <g_strcmp0@plt+0x16f8>
   14f70:	bl	1320c <pk_results_get_error_code@plt>
   14f74:	subs	r7, r0, #0
   14f78:	bne	14fbc <g_strcmp0@plt+0x16c0>
   14f7c:	ldr	r0, [r4, #20]
   14f80:	cmp	r0, #0
   14f84:	beq	14f8c <g_strcmp0@plt+0x1690>
   14f88:	bl	137b8 <g_ptr_array_unref@plt>
   14f8c:	mov	r0, r6
   14f90:	bl	1359c <pk_results_get_transaction_array@plt>
   14f94:	str	r0, [r4, #20]
   14f98:	bl	14678 <g_strcmp0@plt+0xd7c>
   14f9c:	mov	r0, r6
   14fa0:	bl	13704 <g_object_unref@plt>
   14fa4:	ldr	r2, [sp, #12]
   14fa8:	ldr	r3, [r5]
   14fac:	cmp	r2, r3
   14fb0:	bne	15018 <g_strcmp0@plt+0x171c>
   14fb4:	add	sp, sp, #20
   14fb8:	pop	{r4, r5, r6, r7, pc}
   14fbc:	bl	1323c <pk_error_get_code@plt>
   14fc0:	bl	13350 <pk_error_enum_to_string@plt>
   14fc4:	mov	r4, r0
   14fc8:	mov	r0, r7
   14fcc:	bl	13230 <pk_error_get_details@plt>
   14fd0:	mov	r3, r4
   14fd4:	ldr	r2, [pc, #72]	; 15024 <g_strcmp0@plt+0x1728>
   14fd8:	mov	r1, #16
   14fdc:	str	r0, [sp]
   14fe0:	ldr	r0, [pc, #64]	; 15028 <g_strcmp0@plt+0x172c>
   14fe4:	bl	131d0 <g_log@plt>
   14fe8:	mov	r0, r7
   14fec:	bl	13704 <g_object_unref@plt>
   14ff0:	b	14f9c <g_strcmp0@plt+0x16a0>
   14ff4:	ldr	r3, [sp, #8]
   14ff8:	ldr	r2, [pc, #44]	; 1502c <g_strcmp0@plt+0x1730>
   14ffc:	mov	r1, #16
   15000:	ldr	r3, [r3, #8]
   15004:	ldr	r0, [pc, #28]	; 15028 <g_strcmp0@plt+0x172c>
   15008:	bl	131d0 <g_log@plt>
   1500c:	ldr	r0, [sp, #8]
   15010:	bl	13104 <g_error_free@plt>
   15014:	b	14fa4 <g_strcmp0@plt+0x16a8>
   15018:	bl	1350c <__stack_chk_fail@plt>
   1501c:	andeq	sp, r2, r0, asr lr
   15020:	andeq	lr, r2, r4, lsr #6
   15024:	muleq	r1, ip, sl
   15028:	muleq	r1, r4, r7
   1502c:	andeq	r9, r1, r8, ror sl
   15030:	push	{r4, r5, r6, r7, lr}
   15034:	sub	sp, sp, #20
   15038:	ldr	r5, [pc, #120]	; 150b8 <g_strcmp0@plt+0x17bc>
   1503c:	mvn	lr, #0
   15040:	mov	r6, r3
   15044:	ldr	ip, [r5]
   15048:	str	lr, [sp]
   1504c:	mov	r4, #0
   15050:	add	r3, sp, #8
   15054:	mov	r7, r1
   15058:	mov	r1, r2
   1505c:	mov	r2, #6
   15060:	str	ip, [sp, #12]
   15064:	str	r4, [sp, #8]
   15068:	bl	13884 <gtk_tree_model_get@plt>
   1506c:	mov	r1, r6
   15070:	ldr	r0, [sp, #8]
   15074:	bl	137d0 <strcmp@plt>
   15078:	cmp	r0, r4
   1507c:	beq	1509c <g_strcmp0@plt+0x17a0>
   15080:	ldr	r2, [sp, #12]
   15084:	ldr	r3, [r5]
   15088:	mov	r0, r4
   1508c:	cmp	r2, r3
   15090:	bne	150b4 <g_strcmp0@plt+0x17b8>
   15094:	add	sp, sp, #20
   15098:	pop	{r4, r5, r6, r7, pc}
   1509c:	mov	r0, r7
   150a0:	bl	13680 <gtk_tree_path_copy@plt>
   150a4:	ldr	r3, [pc, #16]	; 150bc <g_strcmp0@plt+0x17c0>
   150a8:	mov	r4, #1
   150ac:	str	r0, [r3, #24]
   150b0:	b	15080 <g_strcmp0@plt+0x1784>
   150b4:	bl	1350c <__stack_chk_fail@plt>
   150b8:	andeq	sp, r2, r0, asr lr
   150bc:	andeq	lr, r2, r4, lsr #6
   150c0:	push	{r4, r5, r6, r7, r8, lr}
   150c4:	sub	sp, sp, #16
   150c8:	ldr	r4, [pc, #124]	; 1514c <g_strcmp0@plt+0x1850>
   150cc:	mov	r6, r2
   150d0:	mvn	r2, #0
   150d4:	ldr	ip, [r4]
   150d8:	str	r2, [sp]
   150dc:	mov	r8, r3
   150e0:	mov	r1, r6
   150e4:	add	r3, sp, #8
   150e8:	mov	r2, #9
   150ec:	mov	r7, r0
   150f0:	str	ip, [sp, #12]
   150f4:	bl	13884 <gtk_tree_model_get@plt>
   150f8:	ldr	r3, [sp, #8]
   150fc:	cmp	r3, #0
   15100:	movne	r0, #0
   15104:	beq	15120 <g_strcmp0@plt+0x1824>
   15108:	ldr	r2, [sp, #12]
   1510c:	ldr	r3, [r4]
   15110:	cmp	r2, r3
   15114:	bne	15148 <g_strcmp0@plt+0x184c>
   15118:	add	sp, sp, #16
   1511c:	pop	{r4, r5, r6, r7, r8, pc}
   15120:	mov	r5, #1
   15124:	str	r5, [r8]
   15128:	bl	1386c <gtk_list_store_get_type@plt>
   1512c:	mov	r1, r0
   15130:	mov	r0, r7
   15134:	bl	13170 <g_type_check_instance_cast@plt>
   15138:	mov	r1, r6
   1513c:	bl	13260 <gtk_list_store_remove@plt>
   15140:	mov	r0, r5
   15144:	b	15108 <g_strcmp0@plt+0x180c>
   15148:	bl	1350c <__stack_chk_fail@plt>
   1514c:	andeq	sp, r2, r0, asr lr
   15150:	bx	lr
   15154:	push	{r4, r5, r6, r7, r8, lr}
   15158:	sub	sp, sp, #272	; 0x110
   1515c:	ldr	r7, [pc, #312]	; 1529c <g_strcmp0@plt+0x19a0>
   15160:	mov	r4, r0
   15164:	add	r0, sp, #8
   15168:	ldr	r3, [r7]
   1516c:	mov	r6, r1
   15170:	mov	r8, r2
   15174:	str	r3, [sp, #268]	; 0x10c
   15178:	bl	13818 <time@plt>
   1517c:	add	r0, sp, #8
   15180:	bl	13434 <localtime@plt>
   15184:	ldr	r2, [pc, #276]	; 152a0 <g_strcmp0@plt+0x19a4>
   15188:	mov	r1, #254	; 0xfe
   1518c:	mov	r3, r0
   15190:	add	r0, sp, #12
   15194:	bl	132cc <strftime@plt>
   15198:	ldr	r3, [pc, #260]	; 152a4 <g_strcmp0@plt+0x19a8>
   1519c:	ldr	r3, [r3]
   151a0:	cmp	r3, #0
   151a4:	bne	151dc <g_strcmp0@plt+0x18e0>
   151a8:	cmp	r6, #128	; 0x80
   151ac:	mov	r3, r8
   151b0:	mov	r2, r4
   151b4:	add	r1, sp, #12
   151b8:	ldreq	r0, [pc, #232]	; 152a8 <g_strcmp0@plt+0x19ac>
   151bc:	ldrne	r0, [pc, #232]	; 152ac <g_strcmp0@plt+0x19b0>
   151c0:	bl	1362c <g_print@plt>
   151c4:	ldr	r2, [sp, #268]	; 0x10c
   151c8:	ldr	r3, [r7]
   151cc:	cmp	r2, r3
   151d0:	bne	15298 <g_strcmp0@plt+0x199c>
   151d4:	add	sp, sp, #272	; 0x110
   151d8:	pop	{r4, r5, r6, r7, r8, pc}
   151dc:	add	r3, sp, #12
   151e0:	mov	r2, #32
   151e4:	mov	r1, #27
   151e8:	ldr	r0, [pc, #192]	; 152b0 <g_strcmp0@plt+0x19b4>
   151ec:	bl	1362c <g_print@plt>
   151f0:	ldr	r1, [pc, #188]	; 152b4 <g_strcmp0@plt+0x19b8>
   151f4:	mov	r0, r4
   151f8:	bl	138fc <g_strcmp0@plt>
   151fc:	cmp	r0, #0
   15200:	movne	r3, #0
   15204:	movne	r1, #27
   15208:	moveq	r1, #27
   1520c:	streq	r0, [sp, #4]
   15210:	moveq	r3, r4
   15214:	stmne	sp, {r1, r3}
   15218:	streq	r1, [sp]
   1521c:	movne	r3, r4
   15220:	moveq	r2, #34	; 0x22
   15224:	movne	r2, #36	; 0x24
   15228:	ldr	r0, [pc, #136]	; 152b8 <g_strcmp0@plt+0x19bc>
   1522c:	bl	1362c <g_print@plt>
   15230:	mov	r0, r4
   15234:	bl	13710 <strlen@plt>
   15238:	cmp	r0, #19
   1523c:	mov	r4, r0
   15240:	bhi	1525c <g_strcmp0@plt+0x1960>
   15244:	ldr	r5, [pc, #112]	; 152bc <g_strcmp0@plt+0x19c0>
   15248:	add	r4, r4, #1
   1524c:	mov	r0, r5
   15250:	bl	1362c <g_print@plt>
   15254:	cmp	r4, #20
   15258:	bne	15248 <g_strcmp0@plt+0x194c>
   1525c:	sub	r6, r6, #4
   15260:	bics	r6, r6, #4
   15264:	movne	r2, #0
   15268:	movne	r1, #27
   1526c:	moveq	r1, #27
   15270:	stmne	sp, {r1, r2}
   15274:	streq	r6, [sp, #4]
   15278:	moveq	r3, r8
   1527c:	streq	r1, [sp]
   15280:	moveq	r2, #31
   15284:	movne	r3, r8
   15288:	movne	r2, #34	; 0x22
   1528c:	ldr	r0, [pc, #44]	; 152c0 <g_strcmp0@plt+0x19c4>
   15290:	bl	1362c <g_print@plt>
   15294:	b	151c4 <g_strcmp0@plt+0x18c8>
   15298:	bl	1350c <__stack_chk_fail@plt>
   1529c:	andeq	sp, r2, r0, asr lr
   152a0:			; <UNDEFINED> instruction: 0x00019bbc
   152a4:	andeq	lr, r2, r4, asr #6
   152a8:	andeq	r9, r1, r8, asr #23
   152ac:	ldrdeq	r9, [r1], -r4
   152b0:	andeq	r9, r1, r8, ror #23
   152b4:	muleq	r1, r4, r7
   152b8:	strdeq	r9, [r1], -r4
   152bc:	andeq	r9, r1, r4, lsl #24
   152c0:	andeq	r9, r1, r8, lsl #24
   152c4:	push	{r4, r5, lr}
   152c8:	sub	sp, sp, #68	; 0x44
   152cc:	ldr	r4, [pc, #104]	; 1533c <g_strcmp0@plt+0x1a40>
   152d0:	mov	r5, r0
   152d4:	mov	r2, #52	; 0x34
   152d8:	ldr	r3, [r4]
   152dc:	mov	r1, #0
   152e0:	add	r0, sp, #8
   152e4:	str	r3, [sp, #60]	; 0x3c
   152e8:	bl	132d8 <memset@plt>
   152ec:	ldr	r2, [pc, #76]	; 15340 <g_strcmp0@plt+0x1a44>
   152f0:	ldr	r1, [pc, #76]	; 15344 <g_strcmp0@plt+0x1a48>
   152f4:	ldr	ip, [pc, #76]	; 15348 <g_strcmp0@plt+0x1a4c>
   152f8:	mov	r3, #118	; 0x76
   152fc:	str	r2, [sp, #4]
   15300:	str	r1, [sp, #20]
   15304:	mov	r2, #0
   15308:	mov	r0, r5
   1530c:	add	r1, sp, #4
   15310:	strb	r3, [sp, #8]
   15314:	str	ip, [sp, #24]
   15318:	bl	13674 <g_option_context_add_main_entries@plt>
   1531c:	ldr	r2, [sp, #60]	; 0x3c
   15320:	ldr	r3, [r4]
   15324:	cmp	r2, r3
   15328:	bne	15338 <g_strcmp0@plt+0x1a3c>
   1532c:	mov	r0, #1
   15330:	add	sp, sp, #68	; 0x44
   15334:	pop	{r4, r5, pc}
   15338:	bl	1350c <__stack_chk_fail@plt>
   1533c:	andeq	sp, r2, r0, asr lr
   15340:	andeq	r9, r1, r8, lsl ip
   15344:	andeq	lr, r2, r8, asr #6
   15348:	andeq	r9, r1, r0, lsr #24
   1534c:	ldr	r3, [pc, #60]	; 15390 <g_strcmp0@plt+0x1a94>
   15350:	ldr	r3, [r3, #4]
   15354:	cmp	r3, #0
   15358:	beq	15384 <g_strcmp0@plt+0x1a88>
   1535c:	push	{r4, lr}
   15360:	mov	r1, #12
   15364:	mov	r4, r0
   15368:	bl	13764 <g_log_set_fatal_mask@plt>
   1536c:	mov	r0, r4
   15370:	mov	r3, #0
   15374:	ldr	r2, [pc, #24]	; 15394 <g_strcmp0@plt+0x1a98>
   15378:	mov	r1, #156	; 0x9c
   1537c:	pop	{r4, lr}
   15380:	b	13128 <g_log_set_handler@plt>
   15384:	ldr	r2, [pc, #12]	; 15398 <g_strcmp0@plt+0x1a9c>
   15388:	mov	r1, #144	; 0x90
   1538c:	b	13128 <g_log_set_handler@plt>
   15390:	andeq	lr, r2, r4, asr #6
   15394:	andeq	r5, r1, r4, asr r1
   15398:	andeq	r5, r1, r0, asr r1
   1539c:	push	{lr}		; (str lr, [sp, #-4]!)
   153a0:	sub	sp, sp, #12
   153a4:	ldr	r0, [pc, #88]	; 15404 <g_strcmp0@plt+0x1b08>
   153a8:	bl	1534c <g_strcmp0@plt+0x1a50>
   153ac:	ldr	r3, [pc, #84]	; 15408 <g_strcmp0@plt+0x1b0c>
   153b0:	ldr	r0, [r3]
   153b4:	bl	13500 <fileno@plt>
   153b8:	bl	1353c <isatty@plt>
   153bc:	ldr	ip, [pc, #72]	; 1540c <g_strcmp0@plt+0x1b10>
   153c0:	ldr	r1, [pc, #72]	; 15410 <g_strcmp0@plt+0x1b14>
   153c4:	ldr	r3, [pc, #72]	; 15414 <g_strcmp0@plt+0x1b18>
   153c8:	ldr	lr, [ip, #4]
   153cc:	ldr	r2, [pc, #68]	; 15418 <g_strcmp0@plt+0x1b1c>
   153d0:	cmp	lr, #0
   153d4:	moveq	r3, r1
   153d8:	mov	r1, #128	; 0x80
   153dc:	sub	lr, r0, #1
   153e0:	clz	lr, lr
   153e4:	lsr	lr, lr, #5
   153e8:	str	lr, [sp]
   153ec:	ldr	r0, [pc, #16]	; 15404 <g_strcmp0@plt+0x1b08>
   153f0:	str	lr, [ip]
   153f4:	bl	131d0 <g_log@plt>
   153f8:	mov	r0, #1
   153fc:	add	sp, sp, #12
   15400:	pop	{pc}		; (ldr pc, [sp], #4)
   15404:	muleq	r1, r4, r7
   15408:	andeq	lr, r2, ip, lsl r3
   1540c:	andeq	lr, r2, r4, asr #6
   15410:	andeq	r9, r1, r4, asr ip
   15414:	andeq	r9, r1, ip, asr #24
   15418:	andeq	r9, r1, r0, ror #24
   1541c:	push	{r4, lr}
   15420:	mov	r2, #5
   15424:	sub	sp, sp, #8
   15428:	ldr	r1, [pc, #76]	; 1547c <g_strcmp0@plt+0x1b80>
   1542c:	mov	r0, #0
   15430:	bl	13554 <dcgettext@plt>
   15434:	mov	r2, #5
   15438:	ldr	r1, [pc, #64]	; 15480 <g_strcmp0@plt+0x1b84>
   1543c:	mov	r4, r0
   15440:	mov	r0, #0
   15444:	bl	13554 <dcgettext@plt>
   15448:	mov	r3, #0
   1544c:	mov	r1, r4
   15450:	str	r3, [sp]
   15454:	mov	r2, r0
   15458:	ldr	r0, [pc, #36]	; 15484 <g_strcmp0@plt+0x1b88>
   1545c:	bl	131b8 <g_option_group_new@plt>
   15460:	ldr	r2, [pc, #32]	; 15488 <g_strcmp0@plt+0x1b8c>
   15464:	ldr	r1, [pc, #32]	; 1548c <g_strcmp0@plt+0x1b90>
   15468:	mov	r4, r0
   1546c:	bl	1329c <g_option_group_set_parse_hooks@plt>
   15470:	mov	r0, r4
   15474:	add	sp, sp, #8
   15478:	pop	{r4, pc}
   1547c:	andeq	r9, r1, r8, lsl #25
   15480:	muleq	r1, ip, ip
   15484:			; <UNDEFINED> instruction: 0x00019cb4
   15488:	muleq	r1, ip, r3
   1548c:	andeq	r5, r1, r4, asr #5
   15490:	cmp	r0, #3
   15494:	ldrls	pc, [pc, r0, lsl #2]
   15498:	b	154ec <g_strcmp0@plt+0x1bf0>
   1549c:	ldrdeq	r5, [r1], -ip
   154a0:	andeq	r5, r1, ip, asr #9
   154a4:			; <UNDEFINED> instruction: 0x000154bc
   154a8:	andeq	r5, r1, ip, lsr #9
   154ac:	mov	r2, #5
   154b0:	ldr	r1, [pc, #80]	; 15508 <g_strcmp0@plt+0x1c0c>
   154b4:	mov	r0, #0
   154b8:	b	13554 <dcgettext@plt>
   154bc:	mov	r2, #5
   154c0:	ldr	r1, [pc, #68]	; 1550c <g_strcmp0@plt+0x1c10>
   154c4:	mov	r0, #0
   154c8:	b	13554 <dcgettext@plt>
   154cc:	mov	r2, #5
   154d0:	ldr	r1, [pc, #56]	; 15510 <g_strcmp0@plt+0x1c14>
   154d4:	mov	r0, #0
   154d8:	b	13554 <dcgettext@plt>
   154dc:	mov	r2, #5
   154e0:	ldr	r1, [pc, #44]	; 15514 <g_strcmp0@plt+0x1c18>
   154e4:	mov	r0, #0
   154e8:	b	13554 <dcgettext@plt>
   154ec:	push	{r4, lr}
   154f0:	mov	r1, #16
   154f4:	ldr	r2, [pc, #28]	; 15518 <g_strcmp0@plt+0x1c1c>
   154f8:	ldr	r0, [pc, #28]	; 1551c <g_strcmp0@plt+0x1c20>
   154fc:	bl	131d0 <g_log@plt>
   15500:	mov	r0, #0
   15504:	pop	{r4, pc}
   15508:	muleq	r1, r4, r2
   1550c:	muleq	r1, r0, r2
   15510:	andeq	sl, r1, ip, lsl #5
   15514:	muleq	r1, ip, r2
   15518:	andeq	sl, r1, r4, lsr #5
   1551c:	muleq	r1, r4, r7
   15520:	cmp	r0, #67	; 0x43
   15524:	ldrls	pc, [pc, r0, lsl #2]
   15528:	b	15a7c <g_strcmp0@plt+0x2180>
   1552c:	andeq	r5, r1, ip, ror #20
   15530:	andeq	r5, r1, ip, asr sl
   15534:	andeq	r5, r1, ip, asr #20
   15538:	andeq	r5, r1, ip, lsr sl
   1553c:	andeq	r5, r1, ip, lsr #20
   15540:	andeq	r5, r1, ip, lsl sl
   15544:	andeq	r5, r1, ip, lsl #20
   15548:	strdeq	r5, [r1], -ip
   1554c:	andeq	r5, r1, ip, ror #19
   15550:	ldrdeq	r5, [r1], -ip
   15554:	andeq	r5, r1, ip, asr #19
   15558:			; <UNDEFINED> instruction: 0x000159bc
   1555c:	andeq	r5, r1, ip, lsr #19
   15560:	muleq	r1, ip, r9
   15564:	andeq	r5, r1, ip, lsl #19
   15568:	andeq	r5, r1, ip, ror r9
   1556c:	andeq	r5, r1, ip, ror #18
   15570:	andeq	r5, r1, ip, asr r9
   15574:	andeq	r5, r1, ip, asr #18
   15578:	andeq	r5, r1, ip, lsr r9
   1557c:	andeq	r5, r1, ip, lsr #18
   15580:	andeq	r5, r1, ip, lsl r9
   15584:	andeq	r5, r1, ip, lsl #18
   15588:	strdeq	r5, [r1], -ip
   1558c:	andeq	r5, r1, ip, ror #17
   15590:	ldrdeq	r5, [r1], -ip
   15594:	andeq	r5, r1, ip, asr #17
   15598:			; <UNDEFINED> instruction: 0x000158bc
   1559c:	andeq	r5, r1, ip, lsr #17
   155a0:	muleq	r1, ip, r8
   155a4:	andeq	r5, r1, ip, lsl #17
   155a8:	andeq	r5, r1, ip, ror r8
   155ac:	andeq	r5, r1, ip, ror #16
   155b0:	andeq	r5, r1, ip, asr r8
   155b4:	andeq	r5, r1, ip, asr #16
   155b8:	andeq	r5, r1, ip, lsr r8
   155bc:	andeq	r5, r1, ip, lsr #16
   155c0:	andeq	r5, r1, ip, lsl r8
   155c4:	andeq	r5, r1, ip, lsl #16
   155c8:	strdeq	r5, [r1], -ip
   155cc:	andeq	r5, r1, ip, ror #15
   155d0:	ldrdeq	r5, [r1], -ip
   155d4:	andeq	r5, r1, ip, asr #15
   155d8:			; <UNDEFINED> instruction: 0x000157bc
   155dc:	andeq	r5, r1, ip, lsr #15
   155e0:	muleq	r1, ip, r7
   155e4:	andeq	r5, r1, ip, lsl #15
   155e8:	andeq	r5, r1, ip, ror r7
   155ec:	andeq	r5, r1, ip, ror #14
   155f0:	andeq	r5, r1, ip, asr r7
   155f4:	andeq	r5, r1, ip, asr #14
   155f8:	andeq	r5, r1, ip, lsr r7
   155fc:	andeq	r5, r1, ip, lsr #14
   15600:	andeq	r5, r1, ip, lsl r7
   15604:	andeq	r5, r1, ip, lsl #14
   15608:	strdeq	r5, [r1], -ip
   1560c:	andeq	r5, r1, ip, ror #13
   15610:	ldrdeq	r5, [r1], -ip
   15614:	andeq	r5, r1, ip, asr #13
   15618:			; <UNDEFINED> instruction: 0x000156bc
   1561c:	andeq	r5, r1, ip, lsr #13
   15620:	muleq	r1, ip, r6
   15624:	andeq	r5, r1, ip, lsl #13
   15628:	andeq	r5, r1, ip, ror r6
   1562c:	andeq	r5, r1, ip, ror #12
   15630:	andeq	r5, r1, ip, asr r6
   15634:	andeq	r5, r1, ip, asr #12
   15638:	andeq	r5, r1, ip, lsr r6
   1563c:	mov	r2, #5
   15640:	ldr	r1, [pc, #1104]	; 15a98 <g_strcmp0@plt+0x219c>
   15644:	mov	r0, #0
   15648:	b	13554 <dcgettext@plt>
   1564c:	mov	r2, #5
   15650:	ldr	r1, [pc, #1092]	; 15a9c <g_strcmp0@plt+0x21a0>
   15654:	mov	r0, #0
   15658:	b	13554 <dcgettext@plt>
   1565c:	mov	r2, #5
   15660:	ldr	r1, [pc, #1080]	; 15aa0 <g_strcmp0@plt+0x21a4>
   15664:	mov	r0, #0
   15668:	b	13554 <dcgettext@plt>
   1566c:	mov	r2, #5
   15670:	ldr	r1, [pc, #1068]	; 15aa4 <g_strcmp0@plt+0x21a8>
   15674:	mov	r0, #0
   15678:	b	13554 <dcgettext@plt>
   1567c:	mov	r2, #5
   15680:	ldr	r1, [pc, #1056]	; 15aa8 <g_strcmp0@plt+0x21ac>
   15684:	mov	r0, #0
   15688:	b	13554 <dcgettext@plt>
   1568c:	mov	r2, #5
   15690:	ldr	r1, [pc, #1044]	; 15aac <g_strcmp0@plt+0x21b0>
   15694:	mov	r0, #0
   15698:	b	13554 <dcgettext@plt>
   1569c:	mov	r2, #5
   156a0:	ldr	r1, [pc, #1032]	; 15ab0 <g_strcmp0@plt+0x21b4>
   156a4:	mov	r0, #0
   156a8:	b	13554 <dcgettext@plt>
   156ac:	mov	r2, #5
   156b0:	ldr	r1, [pc, #1020]	; 15ab4 <g_strcmp0@plt+0x21b8>
   156b4:	mov	r0, #0
   156b8:	b	13554 <dcgettext@plt>
   156bc:	mov	r2, #5
   156c0:	ldr	r1, [pc, #1008]	; 15ab8 <g_strcmp0@plt+0x21bc>
   156c4:	mov	r0, #0
   156c8:	b	13554 <dcgettext@plt>
   156cc:	mov	r2, #5
   156d0:	ldr	r1, [pc, #996]	; 15abc <g_strcmp0@plt+0x21c0>
   156d4:	mov	r0, #0
   156d8:	b	13554 <dcgettext@plt>
   156dc:	mov	r2, #5
   156e0:	ldr	r1, [pc, #984]	; 15ac0 <g_strcmp0@plt+0x21c4>
   156e4:	mov	r0, #0
   156e8:	b	13554 <dcgettext@plt>
   156ec:	mov	r2, #5
   156f0:	ldr	r1, [pc, #972]	; 15ac4 <g_strcmp0@plt+0x21c8>
   156f4:	mov	r0, #0
   156f8:	b	13554 <dcgettext@plt>
   156fc:	mov	r2, #5
   15700:	ldr	r1, [pc, #960]	; 15ac8 <g_strcmp0@plt+0x21cc>
   15704:	mov	r0, #0
   15708:	b	13554 <dcgettext@plt>
   1570c:	mov	r2, #5
   15710:	ldr	r1, [pc, #948]	; 15acc <g_strcmp0@plt+0x21d0>
   15714:	mov	r0, #0
   15718:	b	13554 <dcgettext@plt>
   1571c:	mov	r2, #5
   15720:	ldr	r1, [pc, #936]	; 15ad0 <g_strcmp0@plt+0x21d4>
   15724:	mov	r0, #0
   15728:	b	13554 <dcgettext@plt>
   1572c:	mov	r2, #5
   15730:	ldr	r1, [pc, #924]	; 15ad4 <g_strcmp0@plt+0x21d8>
   15734:	mov	r0, #0
   15738:	b	13554 <dcgettext@plt>
   1573c:	mov	r2, #5
   15740:	ldr	r1, [pc, #912]	; 15ad8 <g_strcmp0@plt+0x21dc>
   15744:	mov	r0, #0
   15748:	b	13554 <dcgettext@plt>
   1574c:	mov	r2, #5
   15750:	ldr	r1, [pc, #900]	; 15adc <g_strcmp0@plt+0x21e0>
   15754:	mov	r0, #0
   15758:	b	13554 <dcgettext@plt>
   1575c:	mov	r2, #5
   15760:	ldr	r1, [pc, #888]	; 15ae0 <g_strcmp0@plt+0x21e4>
   15764:	mov	r0, #0
   15768:	b	13554 <dcgettext@plt>
   1576c:	mov	r2, #5
   15770:	ldr	r1, [pc, #876]	; 15ae4 <g_strcmp0@plt+0x21e8>
   15774:	mov	r0, #0
   15778:	b	13554 <dcgettext@plt>
   1577c:	mov	r2, #5
   15780:	ldr	r1, [pc, #864]	; 15ae8 <g_strcmp0@plt+0x21ec>
   15784:	mov	r0, #0
   15788:	b	13554 <dcgettext@plt>
   1578c:	mov	r2, #5
   15790:	ldr	r1, [pc, #852]	; 15aec <g_strcmp0@plt+0x21f0>
   15794:	mov	r0, #0
   15798:	b	13554 <dcgettext@plt>
   1579c:	mov	r2, #5
   157a0:	ldr	r1, [pc, #840]	; 15af0 <g_strcmp0@plt+0x21f4>
   157a4:	mov	r0, #0
   157a8:	b	13554 <dcgettext@plt>
   157ac:	mov	r2, #5
   157b0:	ldr	r1, [pc, #828]	; 15af4 <g_strcmp0@plt+0x21f8>
   157b4:	mov	r0, #0
   157b8:	b	13554 <dcgettext@plt>
   157bc:	mov	r2, #5
   157c0:	ldr	r1, [pc, #816]	; 15af8 <g_strcmp0@plt+0x21fc>
   157c4:	mov	r0, #0
   157c8:	b	13554 <dcgettext@plt>
   157cc:	mov	r2, #5
   157d0:	ldr	r1, [pc, #804]	; 15afc <g_strcmp0@plt+0x2200>
   157d4:	mov	r0, #0
   157d8:	b	13554 <dcgettext@plt>
   157dc:	mov	r2, #5
   157e0:	ldr	r1, [pc, #792]	; 15b00 <g_strcmp0@plt+0x2204>
   157e4:	mov	r0, #0
   157e8:	b	13554 <dcgettext@plt>
   157ec:	mov	r2, #5
   157f0:	ldr	r1, [pc, #780]	; 15b04 <g_strcmp0@plt+0x2208>
   157f4:	mov	r0, #0
   157f8:	b	13554 <dcgettext@plt>
   157fc:	mov	r2, #5
   15800:	ldr	r1, [pc, #768]	; 15b08 <g_strcmp0@plt+0x220c>
   15804:	mov	r0, #0
   15808:	b	13554 <dcgettext@plt>
   1580c:	mov	r2, #5
   15810:	ldr	r1, [pc, #756]	; 15b0c <g_strcmp0@plt+0x2210>
   15814:	mov	r0, #0
   15818:	b	13554 <dcgettext@plt>
   1581c:	mov	r2, #5
   15820:	ldr	r1, [pc, #744]	; 15b10 <g_strcmp0@plt+0x2214>
   15824:	mov	r0, #0
   15828:	b	13554 <dcgettext@plt>
   1582c:	mov	r2, #5
   15830:	ldr	r1, [pc, #732]	; 15b14 <g_strcmp0@plt+0x2218>
   15834:	mov	r0, #0
   15838:	b	13554 <dcgettext@plt>
   1583c:	mov	r2, #5
   15840:	ldr	r1, [pc, #720]	; 15b18 <g_strcmp0@plt+0x221c>
   15844:	mov	r0, #0
   15848:	b	13554 <dcgettext@plt>
   1584c:	mov	r2, #5
   15850:	ldr	r1, [pc, #708]	; 15b1c <g_strcmp0@plt+0x2220>
   15854:	mov	r0, #0
   15858:	b	13554 <dcgettext@plt>
   1585c:	mov	r2, #5
   15860:	ldr	r1, [pc, #696]	; 15b20 <g_strcmp0@plt+0x2224>
   15864:	mov	r0, #0
   15868:	b	13554 <dcgettext@plt>
   1586c:	mov	r2, #5
   15870:	ldr	r1, [pc, #684]	; 15b24 <g_strcmp0@plt+0x2228>
   15874:	mov	r0, #0
   15878:	b	13554 <dcgettext@plt>
   1587c:	mov	r2, #5
   15880:	ldr	r1, [pc, #672]	; 15b28 <g_strcmp0@plt+0x222c>
   15884:	mov	r0, #0
   15888:	b	13554 <dcgettext@plt>
   1588c:	mov	r2, #5
   15890:	ldr	r1, [pc, #660]	; 15b2c <g_strcmp0@plt+0x2230>
   15894:	mov	r0, #0
   15898:	b	13554 <dcgettext@plt>
   1589c:	mov	r2, #5
   158a0:	ldr	r1, [pc, #648]	; 15b30 <g_strcmp0@plt+0x2234>
   158a4:	mov	r0, #0
   158a8:	b	13554 <dcgettext@plt>
   158ac:	mov	r2, #5
   158b0:	ldr	r1, [pc, #636]	; 15b34 <g_strcmp0@plt+0x2238>
   158b4:	mov	r0, #0
   158b8:	b	13554 <dcgettext@plt>
   158bc:	mov	r2, #5
   158c0:	ldr	r1, [pc, #624]	; 15b38 <g_strcmp0@plt+0x223c>
   158c4:	mov	r0, #0
   158c8:	b	13554 <dcgettext@plt>
   158cc:	mov	r2, #5
   158d0:	ldr	r1, [pc, #612]	; 15b3c <g_strcmp0@plt+0x2240>
   158d4:	mov	r0, #0
   158d8:	b	13554 <dcgettext@plt>
   158dc:	mov	r2, #5
   158e0:	ldr	r1, [pc, #600]	; 15b40 <g_strcmp0@plt+0x2244>
   158e4:	mov	r0, #0
   158e8:	b	13554 <dcgettext@plt>
   158ec:	mov	r2, #5
   158f0:	ldr	r1, [pc, #588]	; 15b44 <g_strcmp0@plt+0x2248>
   158f4:	mov	r0, #0
   158f8:	b	13554 <dcgettext@plt>
   158fc:	mov	r2, #5
   15900:	ldr	r1, [pc, #576]	; 15b48 <g_strcmp0@plt+0x224c>
   15904:	mov	r0, #0
   15908:	b	13554 <dcgettext@plt>
   1590c:	mov	r2, #5
   15910:	ldr	r1, [pc, #564]	; 15b4c <g_strcmp0@plt+0x2250>
   15914:	mov	r0, #0
   15918:	b	13554 <dcgettext@plt>
   1591c:	mov	r2, #5
   15920:	ldr	r1, [pc, #552]	; 15b50 <g_strcmp0@plt+0x2254>
   15924:	mov	r0, #0
   15928:	b	13554 <dcgettext@plt>
   1592c:	mov	r2, #5
   15930:	ldr	r1, [pc, #540]	; 15b54 <g_strcmp0@plt+0x2258>
   15934:	mov	r0, #0
   15938:	b	13554 <dcgettext@plt>
   1593c:	mov	r2, #5
   15940:	ldr	r1, [pc, #528]	; 15b58 <g_strcmp0@plt+0x225c>
   15944:	mov	r0, #0
   15948:	b	13554 <dcgettext@plt>
   1594c:	mov	r2, #5
   15950:	ldr	r1, [pc, #516]	; 15b5c <g_strcmp0@plt+0x2260>
   15954:	mov	r0, #0
   15958:	b	13554 <dcgettext@plt>
   1595c:	mov	r2, #5
   15960:	ldr	r1, [pc, #504]	; 15b60 <g_strcmp0@plt+0x2264>
   15964:	mov	r0, #0
   15968:	b	13554 <dcgettext@plt>
   1596c:	mov	r2, #5
   15970:	ldr	r1, [pc, #492]	; 15b64 <g_strcmp0@plt+0x2268>
   15974:	mov	r0, #0
   15978:	b	13554 <dcgettext@plt>
   1597c:	mov	r2, #5
   15980:	ldr	r1, [pc, #480]	; 15b68 <g_strcmp0@plt+0x226c>
   15984:	mov	r0, #0
   15988:	b	13554 <dcgettext@plt>
   1598c:	mov	r2, #5
   15990:	ldr	r1, [pc, #468]	; 15b6c <g_strcmp0@plt+0x2270>
   15994:	mov	r0, #0
   15998:	b	13554 <dcgettext@plt>
   1599c:	mov	r2, #5
   159a0:	ldr	r1, [pc, #456]	; 15b70 <g_strcmp0@plt+0x2274>
   159a4:	mov	r0, #0
   159a8:	b	13554 <dcgettext@plt>
   159ac:	mov	r2, #5
   159b0:	ldr	r1, [pc, #444]	; 15b74 <g_strcmp0@plt+0x2278>
   159b4:	mov	r0, #0
   159b8:	b	13554 <dcgettext@plt>
   159bc:	mov	r2, #5
   159c0:	ldr	r1, [pc, #432]	; 15b78 <g_strcmp0@plt+0x227c>
   159c4:	mov	r0, #0
   159c8:	b	13554 <dcgettext@plt>
   159cc:	mov	r2, #5
   159d0:	ldr	r1, [pc, #420]	; 15b7c <g_strcmp0@plt+0x2280>
   159d4:	mov	r0, #0
   159d8:	b	13554 <dcgettext@plt>
   159dc:	mov	r2, #5
   159e0:	ldr	r1, [pc, #408]	; 15b80 <g_strcmp0@plt+0x2284>
   159e4:	mov	r0, #0
   159e8:	b	13554 <dcgettext@plt>
   159ec:	mov	r2, #5
   159f0:	ldr	r1, [pc, #396]	; 15b84 <g_strcmp0@plt+0x2288>
   159f4:	mov	r0, #0
   159f8:	b	13554 <dcgettext@plt>
   159fc:	mov	r2, #5
   15a00:	ldr	r1, [pc, #384]	; 15b88 <g_strcmp0@plt+0x228c>
   15a04:	mov	r0, #0
   15a08:	b	13554 <dcgettext@plt>
   15a0c:	mov	r2, #5
   15a10:	ldr	r1, [pc, #372]	; 15b8c <g_strcmp0@plt+0x2290>
   15a14:	mov	r0, #0
   15a18:	b	13554 <dcgettext@plt>
   15a1c:	mov	r2, #5
   15a20:	ldr	r1, [pc, #360]	; 15b90 <g_strcmp0@plt+0x2294>
   15a24:	mov	r0, #0
   15a28:	b	13554 <dcgettext@plt>
   15a2c:	mov	r2, #5
   15a30:	ldr	r1, [pc, #348]	; 15b94 <g_strcmp0@plt+0x2298>
   15a34:	mov	r0, #0
   15a38:	b	13554 <dcgettext@plt>
   15a3c:	mov	r2, #5
   15a40:	ldr	r1, [pc, #336]	; 15b98 <g_strcmp0@plt+0x229c>
   15a44:	mov	r0, #0
   15a48:	b	13554 <dcgettext@plt>
   15a4c:	mov	r2, #5
   15a50:	ldr	r1, [pc, #324]	; 15b9c <g_strcmp0@plt+0x22a0>
   15a54:	mov	r0, #0
   15a58:	b	13554 <dcgettext@plt>
   15a5c:	mov	r2, #5
   15a60:	ldr	r1, [pc, #312]	; 15ba0 <g_strcmp0@plt+0x22a4>
   15a64:	mov	r0, #0
   15a68:	b	13554 <dcgettext@plt>
   15a6c:	mov	r2, #5
   15a70:	ldr	r1, [pc, #300]	; 15ba4 <g_strcmp0@plt+0x22a8>
   15a74:	mov	r0, #0
   15a78:	b	13554 <dcgettext@plt>
   15a7c:	push	{r4, lr}
   15a80:	mov	r1, #16
   15a84:	ldr	r2, [pc, #284]	; 15ba8 <g_strcmp0@plt+0x22ac>
   15a88:	ldr	r0, [pc, #284]	; 15bac <g_strcmp0@plt+0x22b0>
   15a8c:	bl	131d0 <g_log@plt>
   15a90:	mov	r0, #0
   15a94:	pop	{r4, pc}
   15a98:			; <UNDEFINED> instruction: 0x0001aab8
   15a9c:	andeq	sl, r1, r0, lsr #21
   15aa0:	andeq	sl, r1, r4, lsl #21
   15aa4:	andeq	sl, r1, r4, ror #20
   15aa8:	andeq	sl, r1, ip, asr #20
   15aac:	andeq	sl, r1, r4, lsr #20
   15ab0:	andeq	sl, r1, r0, lsl #20
   15ab4:	ldrdeq	sl, [r1], -r8
   15ab8:			; <UNDEFINED> instruction: 0x0001a9b8
   15abc:	muleq	r1, ip, r9
   15ac0:	andeq	sl, r1, r4, lsl #19
   15ac4:	andeq	sl, r1, r8, ror #18
   15ac8:	andeq	sl, r1, r4, asr r9
   15acc:	andeq	sl, r1, ip, lsr r9
   15ad0:	andeq	sl, r1, r0, lsr #18
   15ad4:	andeq	sl, r1, r4, lsl #18
   15ad8:	andeq	sl, r1, r0, ror #17
   15adc:			; <UNDEFINED> instruction: 0x0001a8b8
   15ae0:	andeq	sl, r1, r4, lsr #17
   15ae4:	andeq	sl, r1, ip, lsl #17
   15ae8:	andeq	sl, r1, r0, ror r8
   15aec:	andeq	sl, r1, r0, asr r8
   15af0:	andeq	sl, r1, r4, lsr #16
   15af4:	strdeq	sl, [r1], -r8
   15af8:	ldrdeq	sl, [r1], -r8
   15afc:			; <UNDEFINED> instruction: 0x0001a7b0
   15b00:	andeq	sl, r1, ip, lsl #15
   15b04:	andeq	sl, r1, r8, ror r7
   15b08:	andeq	sl, r1, r0, ror #14
   15b0c:	andeq	sl, r1, r8, asr #14
   15b10:	andeq	sl, r1, r4, lsr r6
   15b14:	andeq	sl, r1, r8, lsl r6
   15b18:	strdeq	sl, [r1], -r0
   15b1c:	ldrdeq	sl, [r1], -r0
   15b20:	andeq	sl, r1, r4, lsr #14
   15b24:	andeq	sl, r1, ip, lsr #11
   15b28:	andeq	sl, r1, r8, lsl #14
   15b2c:	strdeq	sl, [r1], -r0
   15b30:	ldrdeq	sl, [r1], -r8
   15b34:			; <UNDEFINED> instruction: 0x0001a6b0
   15b38:	muleq	r1, r8, r6
   15b3c:	andeq	sl, r1, r8, lsl #13
   15b40:	andeq	sl, r1, ip, lsl #11
   15b44:	andeq	sl, r1, r4, ror #10
   15b48:	andeq	sl, r1, r4, ror r6
   15b4c:	andeq	sl, r1, ip, asr r6
   15b50:	andeq	sl, r1, r0, asr #10
   15b54:	strdeq	sl, [r1], -ip
   15b58:	ldrdeq	sl, [r1], -ip
   15b5c:	strdeq	sl, [r1], -r8
   15b60:	andeq	sl, r1, r8, lsr #10
   15b64:	andeq	sl, r1, r8, asr #9
   15b68:	andeq	sl, r1, r8, lsr #6
   15b6c:	andeq	sl, r1, r0, lsl #9
   15b70:	andeq	sl, r1, r0, ror #8
   15b74:	andeq	sl, r1, r4, asr #8
   15b78:	andeq	sl, r1, ip, lsr #8
   15b7c:	andeq	sl, r1, r0, lsl r4
   15b80:	andeq	sl, r1, ip, ror #7
   15b84:	ldrdeq	sl, [r1], -r0
   15b88:			; <UNDEFINED> instruction: 0x0001a3b0
   15b8c:	muleq	r1, ip, r4
   15b90:	andeq	sl, r1, ip, lsl #7
   15b94:	andeq	sl, r1, r4, ror #6
   15b98:	andeq	sl, r1, r4, asr #6
   15b9c:	ldrdeq	sl, [r1], -r8
   15ba0:	andeq	sl, r1, r8, lsl r3
   15ba4:			; <UNDEFINED> instruction: 0x0001a2b8
   15ba8:	andeq	sl, r1, r8, asr #21
   15bac:	muleq	r1, r4, r7
   15bb0:	cmp	r0, #67	; 0x43
   15bb4:	ldrls	pc, [pc, r0, lsl #2]
   15bb8:	b	1610c <g_strcmp0@plt+0x2810>
   15bbc:	strdeq	r6, [r1], -ip
   15bc0:	andeq	r6, r1, ip, ror #1
   15bc4:	ldrdeq	r6, [r1], -ip
   15bc8:	andeq	r6, r1, ip, asr #1
   15bcc:	strheq	r6, [r1], -ip
   15bd0:	andeq	r6, r1, ip, lsr #1
   15bd4:	muleq	r1, ip, r0
   15bd8:	andeq	r6, r1, ip, lsl #1
   15bdc:	andeq	r6, r1, ip, ror r0
   15be0:	andeq	r6, r1, ip, rrx
   15be4:	andeq	r6, r1, ip, asr r0
   15be8:	andeq	r6, r1, ip, asr #32
   15bec:	andeq	r6, r1, ip, lsr r0
   15bf0:	andeq	r6, r1, ip, lsr #32
   15bf4:	andeq	r6, r1, ip, lsl r0
   15bf8:	andeq	r6, r1, ip
   15bfc:	strdeq	r5, [r1], -ip
   15c00:	andeq	r5, r1, ip, ror #31
   15c04:	ldrdeq	r5, [r1], -ip
   15c08:	andeq	r5, r1, ip, asr #31
   15c0c:			; <UNDEFINED> instruction: 0x00015fbc
   15c10:	andeq	r5, r1, ip, lsr #31
   15c14:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15c18:	andeq	r5, r1, ip, lsl #31
   15c1c:	andeq	r5, r1, ip, ror pc
   15c20:	andeq	r5, r1, ip, ror #30
   15c24:	andeq	r5, r1, ip, asr pc
   15c28:	andeq	r5, r1, ip, asr #30
   15c2c:	andeq	r5, r1, ip, lsr pc
   15c30:	andeq	r5, r1, ip, lsr #30
   15c34:	andeq	r5, r1, ip, lsl pc
   15c38:	andeq	r5, r1, ip, lsl #30
   15c3c:	strdeq	r5, [r1], -ip
   15c40:	andeq	r5, r1, ip, ror #29
   15c44:	ldrdeq	r5, [r1], -ip
   15c48:	andeq	r5, r1, ip, asr #29
   15c4c:			; <UNDEFINED> instruction: 0x00015ebc
   15c50:	andeq	r5, r1, ip, lsr #29
   15c54:	muleq	r1, ip, lr
   15c58:	andeq	r5, r1, ip, lsl #29
   15c5c:	andeq	r5, r1, ip, ror lr
   15c60:	andeq	r5, r1, ip, ror #28
   15c64:	andeq	r5, r1, ip, asr lr
   15c68:	andeq	r5, r1, ip, asr #28
   15c6c:	andeq	r5, r1, ip, lsr lr
   15c70:	andeq	r5, r1, ip, lsr #28
   15c74:	andeq	r5, r1, ip, lsl lr
   15c78:	andeq	r5, r1, ip, lsl #28
   15c7c:	strdeq	r5, [r1], -ip
   15c80:	andeq	r5, r1, ip, ror #27
   15c84:	ldrdeq	r5, [r1], -ip
   15c88:	andeq	r5, r1, ip, asr #27
   15c8c:			; <UNDEFINED> instruction: 0x00015dbc
   15c90:	andeq	r5, r1, ip, lsr #27
   15c94:	muleq	r1, ip, sp
   15c98:	andeq	r5, r1, ip, lsl #27
   15c9c:	andeq	r5, r1, ip, ror sp
   15ca0:	andeq	r5, r1, ip, ror #26
   15ca4:	andeq	r5, r1, ip, asr sp
   15ca8:	andeq	r5, r1, ip, asr #26
   15cac:	andeq	r5, r1, ip, lsr sp
   15cb0:	andeq	r5, r1, ip, lsr #26
   15cb4:	andeq	r5, r1, ip, lsl sp
   15cb8:	andeq	r5, r1, ip, lsl #26
   15cbc:	strdeq	r5, [r1], -ip
   15cc0:	andeq	r5, r1, ip, ror #25
   15cc4:	ldrdeq	r5, [r1], -ip
   15cc8:	andeq	r5, r1, ip, asr #25
   15ccc:	mov	r2, #5
   15cd0:	ldr	r1, [pc, #1084]	; 16114 <g_strcmp0@plt+0x2818>
   15cd4:	mov	r0, #0
   15cd8:	b	13554 <dcgettext@plt>
   15cdc:	mov	r2, #5
   15ce0:	ldr	r1, [pc, #1072]	; 16118 <g_strcmp0@plt+0x281c>
   15ce4:	mov	r0, #0
   15ce8:	b	13554 <dcgettext@plt>
   15cec:	mov	r2, #5
   15cf0:	ldr	r1, [pc, #1060]	; 1611c <g_strcmp0@plt+0x2820>
   15cf4:	mov	r0, #0
   15cf8:	b	13554 <dcgettext@plt>
   15cfc:	mov	r2, #5
   15d00:	ldr	r1, [pc, #1048]	; 16120 <g_strcmp0@plt+0x2824>
   15d04:	mov	r0, #0
   15d08:	b	13554 <dcgettext@plt>
   15d0c:	mov	r2, #5
   15d10:	ldr	r1, [pc, #1036]	; 16124 <g_strcmp0@plt+0x2828>
   15d14:	mov	r0, #0
   15d18:	b	13554 <dcgettext@plt>
   15d1c:	mov	r2, #5
   15d20:	ldr	r1, [pc, #1024]	; 16128 <g_strcmp0@plt+0x282c>
   15d24:	mov	r0, #0
   15d28:	b	13554 <dcgettext@plt>
   15d2c:	mov	r2, #5
   15d30:	ldr	r1, [pc, #1012]	; 1612c <g_strcmp0@plt+0x2830>
   15d34:	mov	r0, #0
   15d38:	b	13554 <dcgettext@plt>
   15d3c:	mov	r2, #5
   15d40:	ldr	r1, [pc, #1000]	; 16130 <g_strcmp0@plt+0x2834>
   15d44:	mov	r0, #0
   15d48:	b	13554 <dcgettext@plt>
   15d4c:	mov	r2, #5
   15d50:	ldr	r1, [pc, #988]	; 16134 <g_strcmp0@plt+0x2838>
   15d54:	mov	r0, #0
   15d58:	b	13554 <dcgettext@plt>
   15d5c:	mov	r2, #5
   15d60:	ldr	r1, [pc, #976]	; 16138 <g_strcmp0@plt+0x283c>
   15d64:	mov	r0, #0
   15d68:	b	13554 <dcgettext@plt>
   15d6c:	mov	r2, #5
   15d70:	ldr	r1, [pc, #964]	; 1613c <g_strcmp0@plt+0x2840>
   15d74:	mov	r0, #0
   15d78:	b	13554 <dcgettext@plt>
   15d7c:	mov	r2, #5
   15d80:	ldr	r1, [pc, #952]	; 16140 <g_strcmp0@plt+0x2844>
   15d84:	mov	r0, #0
   15d88:	b	13554 <dcgettext@plt>
   15d8c:	mov	r2, #5
   15d90:	ldr	r1, [pc, #940]	; 16144 <g_strcmp0@plt+0x2848>
   15d94:	mov	r0, #0
   15d98:	b	13554 <dcgettext@plt>
   15d9c:	mov	r2, #5
   15da0:	ldr	r1, [pc, #928]	; 16148 <g_strcmp0@plt+0x284c>
   15da4:	mov	r0, #0
   15da8:	b	13554 <dcgettext@plt>
   15dac:	mov	r2, #5
   15db0:	ldr	r1, [pc, #916]	; 1614c <g_strcmp0@plt+0x2850>
   15db4:	mov	r0, #0
   15db8:	b	13554 <dcgettext@plt>
   15dbc:	mov	r2, #5
   15dc0:	ldr	r1, [pc, #904]	; 16150 <g_strcmp0@plt+0x2854>
   15dc4:	mov	r0, #0
   15dc8:	b	13554 <dcgettext@plt>
   15dcc:	mov	r2, #5
   15dd0:	ldr	r1, [pc, #892]	; 16154 <g_strcmp0@plt+0x2858>
   15dd4:	mov	r0, #0
   15dd8:	b	13554 <dcgettext@plt>
   15ddc:	mov	r2, #5
   15de0:	ldr	r1, [pc, #880]	; 16158 <g_strcmp0@plt+0x285c>
   15de4:	mov	r0, #0
   15de8:	b	13554 <dcgettext@plt>
   15dec:	mov	r2, #5
   15df0:	ldr	r1, [pc, #868]	; 1615c <g_strcmp0@plt+0x2860>
   15df4:	mov	r0, #0
   15df8:	b	13554 <dcgettext@plt>
   15dfc:	mov	r2, #5
   15e00:	ldr	r1, [pc, #856]	; 16160 <g_strcmp0@plt+0x2864>
   15e04:	mov	r0, #0
   15e08:	b	13554 <dcgettext@plt>
   15e0c:	mov	r2, #5
   15e10:	ldr	r1, [pc, #844]	; 16164 <g_strcmp0@plt+0x2868>
   15e14:	mov	r0, #0
   15e18:	b	13554 <dcgettext@plt>
   15e1c:	mov	r2, #5
   15e20:	ldr	r1, [pc, #832]	; 16168 <g_strcmp0@plt+0x286c>
   15e24:	mov	r0, #0
   15e28:	b	13554 <dcgettext@plt>
   15e2c:	mov	r2, #5
   15e30:	ldr	r1, [pc, #820]	; 1616c <g_strcmp0@plt+0x2870>
   15e34:	mov	r0, #0
   15e38:	b	13554 <dcgettext@plt>
   15e3c:	mov	r2, #5
   15e40:	ldr	r1, [pc, #808]	; 16170 <g_strcmp0@plt+0x2874>
   15e44:	mov	r0, #0
   15e48:	b	13554 <dcgettext@plt>
   15e4c:	mov	r2, #5
   15e50:	ldr	r1, [pc, #796]	; 16174 <g_strcmp0@plt+0x2878>
   15e54:	mov	r0, #0
   15e58:	b	13554 <dcgettext@plt>
   15e5c:	mov	r2, #5
   15e60:	ldr	r1, [pc, #784]	; 16178 <g_strcmp0@plt+0x287c>
   15e64:	mov	r0, #0
   15e68:	b	13554 <dcgettext@plt>
   15e6c:	mov	r2, #5
   15e70:	ldr	r1, [pc, #772]	; 1617c <g_strcmp0@plt+0x2880>
   15e74:	mov	r0, #0
   15e78:	b	13554 <dcgettext@plt>
   15e7c:	mov	r2, #5
   15e80:	ldr	r1, [pc, #760]	; 16180 <g_strcmp0@plt+0x2884>
   15e84:	mov	r0, #0
   15e88:	b	13554 <dcgettext@plt>
   15e8c:	mov	r2, #5
   15e90:	ldr	r1, [pc, #748]	; 16184 <g_strcmp0@plt+0x2888>
   15e94:	mov	r0, #0
   15e98:	b	13554 <dcgettext@plt>
   15e9c:	mov	r2, #5
   15ea0:	ldr	r1, [pc, #736]	; 16188 <g_strcmp0@plt+0x288c>
   15ea4:	mov	r0, #0
   15ea8:	b	13554 <dcgettext@plt>
   15eac:	mov	r2, #5
   15eb0:	ldr	r1, [pc, #724]	; 1618c <g_strcmp0@plt+0x2890>
   15eb4:	mov	r0, #0
   15eb8:	b	13554 <dcgettext@plt>
   15ebc:	mov	r2, #5
   15ec0:	ldr	r1, [pc, #712]	; 16190 <g_strcmp0@plt+0x2894>
   15ec4:	mov	r0, #0
   15ec8:	b	13554 <dcgettext@plt>
   15ecc:	mov	r2, #5
   15ed0:	ldr	r1, [pc, #700]	; 16194 <g_strcmp0@plt+0x2898>
   15ed4:	mov	r0, #0
   15ed8:	b	13554 <dcgettext@plt>
   15edc:	mov	r2, #5
   15ee0:	ldr	r1, [pc, #688]	; 16198 <g_strcmp0@plt+0x289c>
   15ee4:	mov	r0, #0
   15ee8:	b	13554 <dcgettext@plt>
   15eec:	mov	r2, #5
   15ef0:	ldr	r1, [pc, #676]	; 1619c <g_strcmp0@plt+0x28a0>
   15ef4:	mov	r0, #0
   15ef8:	b	13554 <dcgettext@plt>
   15efc:	mov	r2, #5
   15f00:	ldr	r1, [pc, #664]	; 161a0 <g_strcmp0@plt+0x28a4>
   15f04:	mov	r0, #0
   15f08:	b	13554 <dcgettext@plt>
   15f0c:	mov	r2, #5
   15f10:	ldr	r1, [pc, #652]	; 161a4 <g_strcmp0@plt+0x28a8>
   15f14:	mov	r0, #0
   15f18:	b	13554 <dcgettext@plt>
   15f1c:	mov	r2, #5
   15f20:	ldr	r1, [pc, #640]	; 161a8 <g_strcmp0@plt+0x28ac>
   15f24:	mov	r0, #0
   15f28:	b	13554 <dcgettext@plt>
   15f2c:	mov	r2, #5
   15f30:	ldr	r1, [pc, #628]	; 161ac <g_strcmp0@plt+0x28b0>
   15f34:	mov	r0, #0
   15f38:	b	13554 <dcgettext@plt>
   15f3c:	mov	r2, #5
   15f40:	ldr	r1, [pc, #616]	; 161b0 <g_strcmp0@plt+0x28b4>
   15f44:	mov	r0, #0
   15f48:	b	13554 <dcgettext@plt>
   15f4c:	mov	r2, #5
   15f50:	ldr	r1, [pc, #604]	; 161b4 <g_strcmp0@plt+0x28b8>
   15f54:	mov	r0, #0
   15f58:	b	13554 <dcgettext@plt>
   15f5c:	mov	r2, #5
   15f60:	ldr	r1, [pc, #592]	; 161b8 <g_strcmp0@plt+0x28bc>
   15f64:	mov	r0, #0
   15f68:	b	13554 <dcgettext@plt>
   15f6c:	mov	r2, #5
   15f70:	ldr	r1, [pc, #580]	; 161bc <g_strcmp0@plt+0x28c0>
   15f74:	mov	r0, #0
   15f78:	b	13554 <dcgettext@plt>
   15f7c:	mov	r2, #5
   15f80:	ldr	r1, [pc, #568]	; 161c0 <g_strcmp0@plt+0x28c4>
   15f84:	mov	r0, #0
   15f88:	b	13554 <dcgettext@plt>
   15f8c:	mov	r2, #5
   15f90:	ldr	r1, [pc, #556]	; 161c4 <g_strcmp0@plt+0x28c8>
   15f94:	mov	r0, #0
   15f98:	b	13554 <dcgettext@plt>
   15f9c:	mov	r2, #5
   15fa0:	ldr	r1, [pc, #544]	; 161c8 <g_strcmp0@plt+0x28cc>
   15fa4:	mov	r0, #0
   15fa8:	b	13554 <dcgettext@plt>
   15fac:	mov	r2, #5
   15fb0:	ldr	r1, [pc, #532]	; 161cc <g_strcmp0@plt+0x28d0>
   15fb4:	mov	r0, #0
   15fb8:	b	13554 <dcgettext@plt>
   15fbc:	mov	r2, #5
   15fc0:	ldr	r1, [pc, #520]	; 161d0 <g_strcmp0@plt+0x28d4>
   15fc4:	mov	r0, #0
   15fc8:	b	13554 <dcgettext@plt>
   15fcc:	mov	r2, #5
   15fd0:	ldr	r1, [pc, #508]	; 161d4 <g_strcmp0@plt+0x28d8>
   15fd4:	mov	r0, #0
   15fd8:	b	13554 <dcgettext@plt>
   15fdc:	mov	r2, #5
   15fe0:	ldr	r1, [pc, #496]	; 161d8 <g_strcmp0@plt+0x28dc>
   15fe4:	mov	r0, #0
   15fe8:	b	13554 <dcgettext@plt>
   15fec:	mov	r2, #5
   15ff0:	ldr	r1, [pc, #484]	; 161dc <g_strcmp0@plt+0x28e0>
   15ff4:	mov	r0, #0
   15ff8:	b	13554 <dcgettext@plt>
   15ffc:	mov	r2, #5
   16000:	ldr	r1, [pc, #472]	; 161e0 <g_strcmp0@plt+0x28e4>
   16004:	mov	r0, #0
   16008:	b	13554 <dcgettext@plt>
   1600c:	mov	r2, #5
   16010:	ldr	r1, [pc, #460]	; 161e4 <g_strcmp0@plt+0x28e8>
   16014:	mov	r0, #0
   16018:	b	13554 <dcgettext@plt>
   1601c:	mov	r2, #5
   16020:	ldr	r1, [pc, #448]	; 161e8 <g_strcmp0@plt+0x28ec>
   16024:	mov	r0, #0
   16028:	b	13554 <dcgettext@plt>
   1602c:	mov	r2, #5
   16030:	ldr	r1, [pc, #436]	; 161ec <g_strcmp0@plt+0x28f0>
   16034:	mov	r0, #0
   16038:	b	13554 <dcgettext@plt>
   1603c:	mov	r2, #5
   16040:	ldr	r1, [pc, #424]	; 161f0 <g_strcmp0@plt+0x28f4>
   16044:	mov	r0, #0
   16048:	b	13554 <dcgettext@plt>
   1604c:	mov	r2, #5
   16050:	ldr	r1, [pc, #412]	; 161f4 <g_strcmp0@plt+0x28f8>
   16054:	mov	r0, #0
   16058:	b	13554 <dcgettext@plt>
   1605c:	mov	r2, #5
   16060:	ldr	r1, [pc, #400]	; 161f8 <g_strcmp0@plt+0x28fc>
   16064:	mov	r0, #0
   16068:	b	13554 <dcgettext@plt>
   1606c:	mov	r2, #5
   16070:	ldr	r1, [pc, #388]	; 161fc <g_strcmp0@plt+0x2900>
   16074:	mov	r0, #0
   16078:	b	13554 <dcgettext@plt>
   1607c:	mov	r2, #5
   16080:	ldr	r1, [pc, #376]	; 16200 <g_strcmp0@plt+0x2904>
   16084:	mov	r0, #0
   16088:	b	13554 <dcgettext@plt>
   1608c:	mov	r2, #5
   16090:	ldr	r1, [pc, #364]	; 16204 <g_strcmp0@plt+0x2908>
   16094:	mov	r0, #0
   16098:	b	13554 <dcgettext@plt>
   1609c:	mov	r2, #5
   160a0:	ldr	r1, [pc, #352]	; 16208 <g_strcmp0@plt+0x290c>
   160a4:	mov	r0, #0
   160a8:	b	13554 <dcgettext@plt>
   160ac:	mov	r2, #5
   160b0:	ldr	r1, [pc, #340]	; 1620c <g_strcmp0@plt+0x2910>
   160b4:	mov	r0, #0
   160b8:	b	13554 <dcgettext@plt>
   160bc:	mov	r2, #5
   160c0:	ldr	r1, [pc, #328]	; 16210 <g_strcmp0@plt+0x2914>
   160c4:	mov	r0, #0
   160c8:	b	13554 <dcgettext@plt>
   160cc:	mov	r2, #5
   160d0:	ldr	r1, [pc, #316]	; 16214 <g_strcmp0@plt+0x2918>
   160d4:	mov	r0, #0
   160d8:	b	13554 <dcgettext@plt>
   160dc:	mov	r2, #5
   160e0:	ldr	r1, [pc, #304]	; 16218 <g_strcmp0@plt+0x291c>
   160e4:	mov	r0, #0
   160e8:	b	13554 <dcgettext@plt>
   160ec:	mov	r2, #5
   160f0:	ldr	r1, [pc, #292]	; 1621c <g_strcmp0@plt+0x2920>
   160f4:	mov	r0, #0
   160f8:	b	13554 <dcgettext@plt>
   160fc:	mov	r2, #5
   16100:	ldr	r1, [pc, #280]	; 16220 <g_strcmp0@plt+0x2924>
   16104:	mov	r0, #0
   16108:	b	13554 <dcgettext@plt>
   1610c:	mov	r0, #0
   16110:	bx	lr
   16114:	andeq	ip, r1, r4, ror r2
   16118:	andeq	ip, r1, r8, ror #3
   1611c:	andeq	ip, r1, r4, lsr #4
   16120:			; <UNDEFINED> instruction: 0x0001c1b0
   16124:	andeq	ip, r1, r0, ror r1
   16128:	andeq	ip, r1, r4, lsr r1
   1612c:	strdeq	ip, [r1], -r4
   16130:	andeq	ip, r1, r4, ror r0
   16134:	andeq	ip, r1, r0
   16138:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1613c:	andeq	fp, r1, r0, lsr #30
   16140:	andeq	fp, r1, ip, lsr #29
   16144:	andeq	fp, r1, ip, lsr #28
   16148:	strdeq	fp, [r1], -r8
   1614c:			; <UNDEFINED> instruction: 0x0001bdb0
   16150:	andeq	fp, r1, ip, ror sp
   16154:	andeq	fp, r1, r4, asr #26
   16158:	andeq	fp, r1, r8, lsl #26
   1615c:	andeq	fp, r1, ip, lsl #25
   16160:	andeq	fp, r1, r8, lsr #24
   16164:	andeq	fp, r1, ip, ror #23
   16168:	andeq	fp, r1, r0, lsl #23
   1616c:	andeq	fp, r1, r0, lsr fp
   16170:	andeq	fp, r1, r4, lsr #21
   16174:	andeq	fp, r1, r0, lsr #20
   16178:			; <UNDEFINED> instruction: 0x0001b9b4
   1617c:	andeq	fp, r1, r4, ror #18
   16180:	andeq	fp, r1, r4, lsl r9
   16184:	andeq	fp, r1, r0, asr #17
   16188:	andeq	fp, r1, ip, asr #16
   1618c:	strdeq	fp, [r1], -r0
   16190:	andeq	fp, r1, r0, ror r4
   16194:	andeq	fp, r1, ip, lsl #8
   16198:	andeq	fp, r1, ip, lsr #7
   1619c:	andeq	fp, r1, r0, lsl r8
   161a0:	andeq	fp, r1, ip, lsr r3
   161a4:	muleq	r1, ip, r7
   161a8:	andeq	fp, r1, r4, ror #14
   161ac:	andeq	fp, r1, ip, lsl #14
   161b0:	ldrdeq	fp, [r1], -r8
   161b4:	andeq	fp, r1, r8, lsr #13
   161b8:	andeq	fp, r1, r0, lsr r6
   161bc:	andeq	fp, r1, r0, lsl r3
   161c0:	andeq	fp, r1, ip, lsr #5
   161c4:	andeq	fp, r1, r0, ror #11
   161c8:	andeq	fp, r1, r0, ror r5
   161cc:	andeq	fp, r1, r4, asr #4
   161d0:	andeq	fp, r1, ip, asr #3
   161d4:	andeq	fp, r1, r8, ror #2
   161d8:	andeq	sl, r1, r8, asr fp
   161dc:	andeq	fp, r1, r0, lsl #4
   161e0:	andeq	fp, r1, r0, lsl #2
   161e4:	andeq	sl, r1, r4, lsr #24
   161e8:	andeq	fp, r1, ip, asr #32
   161ec:	ldrdeq	sl, [r1], -r4
   161f0:	andeq	sl, r1, ip, asr pc
   161f4:	andeq	sl, r1, r0, lsl pc
   161f8:	andeq	sl, r1, r8, asr #29
   161fc:	andeq	sl, r1, r4, lsl #29
   16200:	andeq	sl, r1, r8, lsr #28
   16204:	ldrdeq	sl, [r1], -r8
   16208:	andeq	fp, r1, r8, ror r0
   1620c:	andeq	sl, r1, ip, ror #26
   16210:	andeq	sl, r1, r4, ror #25
   16214:	andeq	sl, r1, r0, ror #24
   16218:	strdeq	sl, [r1], -r8
   1621c:			; <UNDEFINED> instruction: 0x0001abb8
   16220:	ldrdeq	sl, [r1], -r8
   16224:	sub	r3, r0, #1
   16228:	cmp	r3, #5
   1622c:	ldrls	pc, [pc, r3, lsl #2]
   16230:	b	162ac <g_strcmp0@plt+0x29b0>
   16234:	andeq	r6, r1, ip, asr r2
   16238:	andeq	r6, r1, ip, ror #4
   1623c:	andeq	r6, r1, ip, ror r2
   16240:	andeq	r6, r1, ip, lsl #5
   16244:	muleq	r1, ip, r2
   16248:	andeq	r6, r1, ip, asr #4
   1624c:	mov	r2, #5
   16250:	ldr	r1, [pc, #116]	; 162cc <g_strcmp0@plt+0x29d0>
   16254:	mov	r0, #0
   16258:	b	13554 <dcgettext@plt>
   1625c:	mov	r2, #5
   16260:	ldr	r1, [pc, #104]	; 162d0 <g_strcmp0@plt+0x29d4>
   16264:	mov	r0, #0
   16268:	b	13554 <dcgettext@plt>
   1626c:	mov	r2, #5
   16270:	ldr	r1, [pc, #92]	; 162d4 <g_strcmp0@plt+0x29d8>
   16274:	mov	r0, #0
   16278:	b	13554 <dcgettext@plt>
   1627c:	mov	r2, #5
   16280:	ldr	r1, [pc, #80]	; 162d8 <g_strcmp0@plt+0x29dc>
   16284:	mov	r0, #0
   16288:	b	13554 <dcgettext@plt>
   1628c:	mov	r2, #5
   16290:	ldr	r1, [pc, #68]	; 162dc <g_strcmp0@plt+0x29e0>
   16294:	mov	r0, #0
   16298:	b	13554 <dcgettext@plt>
   1629c:	mov	r2, #5
   162a0:	ldr	r1, [pc, #56]	; 162e0 <g_strcmp0@plt+0x29e4>
   162a4:	mov	r0, #0
   162a8:	b	13554 <dcgettext@plt>
   162ac:	mov	r3, r0
   162b0:	push	{r4, lr}
   162b4:	mov	r1, #16
   162b8:	ldr	r2, [pc, #36]	; 162e4 <g_strcmp0@plt+0x29e8>
   162bc:	ldr	r0, [pc, #36]	; 162e8 <g_strcmp0@plt+0x29ec>
   162c0:	bl	131d0 <g_log@plt>
   162c4:	mov	r0, #0
   162c8:	pop	{r4, pc}
   162cc:	andeq	ip, r1, ip, ror r3
   162d0:	muleq	r1, r8, r2
   162d4:			; <UNDEFINED> instruction: 0x0001c2b4
   162d8:	andeq	ip, r1, r8, ror #5
   162dc:	andeq	ip, r1, r8, lsl r3
   162e0:	andeq	ip, r1, r4, lsr r3
   162e4:			; <UNDEFINED> instruction: 0x0001c3b4
   162e8:	muleq	r1, r4, r7
   162ec:	sub	r3, r0, #1
   162f0:	cmp	r3, #5
   162f4:	ldrls	pc, [pc, r3, lsl #2]
   162f8:	b	16374 <g_strcmp0@plt+0x2a78>
   162fc:	andeq	r6, r1, r4, lsr #6
   16300:	andeq	r6, r1, r4, lsr r3
   16304:	andeq	r6, r1, r4, asr #6
   16308:	andeq	r6, r1, r4, asr r3
   1630c:	andeq	r6, r1, r4, ror #6
   16310:	andeq	r6, r1, r4, lsl r3
   16314:	mov	r2, #5
   16318:	ldr	r1, [pc, #116]	; 16394 <g_strcmp0@plt+0x2a98>
   1631c:	mov	r0, #0
   16320:	b	13554 <dcgettext@plt>
   16324:	mov	r2, #5
   16328:	ldr	r1, [pc, #104]	; 16398 <g_strcmp0@plt+0x2a9c>
   1632c:	mov	r0, #0
   16330:	b	13554 <dcgettext@plt>
   16334:	mov	r2, #5
   16338:	ldr	r1, [pc, #92]	; 1639c <g_strcmp0@plt+0x2aa0>
   1633c:	mov	r0, #0
   16340:	b	13554 <dcgettext@plt>
   16344:	mov	r2, #5
   16348:	ldr	r1, [pc, #80]	; 163a0 <g_strcmp0@plt+0x2aa4>
   1634c:	mov	r0, #0
   16350:	b	13554 <dcgettext@plt>
   16354:	mov	r2, #5
   16358:	ldr	r1, [pc, #68]	; 163a4 <g_strcmp0@plt+0x2aa8>
   1635c:	mov	r0, #0
   16360:	b	13554 <dcgettext@plt>
   16364:	mov	r2, #5
   16368:	ldr	r1, [pc, #56]	; 163a8 <g_strcmp0@plt+0x2aac>
   1636c:	mov	r0, #0
   16370:	b	13554 <dcgettext@plt>
   16374:	mov	r3, r0
   16378:	push	{r4, lr}
   1637c:	mov	r1, #16
   16380:	ldr	r2, [pc, #36]	; 163ac <g_strcmp0@plt+0x2ab0>
   16384:	ldr	r0, [pc, #36]	; 163b0 <g_strcmp0@plt+0x2ab4>
   16388:	bl	131d0 <g_log@plt>
   1638c:	mov	r0, #0
   16390:	pop	{r4, pc}
   16394:	andeq	ip, r1, r8, lsl #9
   16398:	ldrdeq	ip, [r1], -r0
   1639c:	andeq	ip, r1, r8, lsr #8
   163a0:	andeq	ip, r1, r0, lsl #8
   163a4:	andeq	ip, r1, r8, ror #7
   163a8:	andeq	ip, r1, r0, asr r4
   163ac:			; <UNDEFINED> instruction: 0x0001c3b4
   163b0:	muleq	r1, r4, r7
   163b4:	cmp	r0, #2
   163b8:	beq	163ec <g_strcmp0@plt+0x2af0>
   163bc:	cmp	r0, #3
   163c0:	beq	1640c <g_strcmp0@plt+0x2b10>
   163c4:	cmp	r0, #1
   163c8:	beq	163fc <g_strcmp0@plt+0x2b00>
   163cc:	mov	r3, r0
   163d0:	push	{r4, lr}
   163d4:	mov	r1, #16
   163d8:	ldr	r2, [pc, #60]	; 1641c <g_strcmp0@plt+0x2b20>
   163dc:	ldr	r0, [pc, #60]	; 16420 <g_strcmp0@plt+0x2b24>
   163e0:	bl	131d0 <g_log@plt>
   163e4:	mov	r0, #0
   163e8:	pop	{r4, pc}
   163ec:	mov	r2, #5
   163f0:	ldr	r1, [pc, #44]	; 16424 <g_strcmp0@plt+0x2b28>
   163f4:	mov	r0, #0
   163f8:	b	13554 <dcgettext@plt>
   163fc:	mov	r2, #5
   16400:	ldr	r1, [pc, #32]	; 16428 <g_strcmp0@plt+0x2b2c>
   16404:	mov	r0, #0
   16408:	b	13554 <dcgettext@plt>
   1640c:	mov	r2, #5
   16410:	ldr	r1, [pc, #20]	; 1642c <g_strcmp0@plt+0x2b30>
   16414:	mov	r0, #0
   16418:	b	13554 <dcgettext@plt>
   1641c:	andeq	ip, r1, ip, asr #9
   16420:	muleq	r1, r4, r7
   16424:			; <UNDEFINED> instruction: 0x0001c4b8
   16428:			; <UNDEFINED> instruction: 0x0001c4b0
   1642c:	andeq	ip, r1, r4, asr #9
   16430:	cmp	r0, #35	; 0x23
   16434:	ldrls	pc, [pc, r0, lsl #2]
   16438:	b	1670c <g_strcmp0@plt+0x2e10>
   1643c:	strdeq	r6, [r1], -ip
   16440:	andeq	r6, r1, ip, ror #13
   16444:	ldrdeq	r6, [r1], -ip
   16448:	andeq	r6, r1, ip, asr #13
   1644c:			; <UNDEFINED> instruction: 0x000166bc
   16450:	andeq	r6, r1, ip, lsr #13
   16454:	muleq	r1, ip, r6
   16458:	andeq	r6, r1, ip, lsl #13
   1645c:	andeq	r6, r1, ip, ror r6
   16460:	andeq	r6, r1, ip, ror #12
   16464:	andeq	r6, r1, ip, asr r6
   16468:	andeq	r6, r1, ip, asr #12
   1646c:	andeq	r6, r1, ip, lsr r6
   16470:	andeq	r6, r1, ip, lsr #12
   16474:	andeq	r6, r1, ip, lsl r6
   16478:	andeq	r6, r1, ip, lsl #12
   1647c:	strdeq	r6, [r1], -ip
   16480:	andeq	r6, r1, ip, ror #11
   16484:	ldrdeq	r6, [r1], -ip
   16488:	andeq	r6, r1, ip, asr #11
   1648c:			; <UNDEFINED> instruction: 0x000165bc
   16490:	andeq	r6, r1, ip, lsr #11
   16494:	muleq	r1, ip, r5
   16498:	andeq	r6, r1, ip, lsl #11
   1649c:	andeq	r6, r1, ip, ror r5
   164a0:	andeq	r6, r1, ip, ror #10
   164a4:	andeq	r6, r1, ip, asr r5
   164a8:	andeq	r6, r1, ip, asr #10
   164ac:	andeq	r6, r1, ip, lsr r5
   164b0:	andeq	r6, r1, ip, lsr #10
   164b4:	andeq	r6, r1, ip, lsl r5
   164b8:	andeq	r6, r1, ip, lsl #10
   164bc:	strdeq	r6, [r1], -ip
   164c0:	andeq	r6, r1, ip, ror #9
   164c4:	ldrdeq	r6, [r1], -ip
   164c8:	andeq	r6, r1, ip, asr #9
   164cc:	mov	r2, #5
   164d0:	ldr	r1, [pc, #600]	; 16730 <g_strcmp0@plt+0x2e34>
   164d4:	mov	r0, #0
   164d8:	b	13554 <dcgettext@plt>
   164dc:	mov	r2, #5
   164e0:	ldr	r1, [pc, #588]	; 16734 <g_strcmp0@plt+0x2e38>
   164e4:	mov	r0, #0
   164e8:	b	13554 <dcgettext@plt>
   164ec:	mov	r2, #5
   164f0:	ldr	r1, [pc, #576]	; 16738 <g_strcmp0@plt+0x2e3c>
   164f4:	mov	r0, #0
   164f8:	b	13554 <dcgettext@plt>
   164fc:	mov	r2, #5
   16500:	ldr	r1, [pc, #564]	; 1673c <g_strcmp0@plt+0x2e40>
   16504:	mov	r0, #0
   16508:	b	13554 <dcgettext@plt>
   1650c:	mov	r2, #5
   16510:	ldr	r1, [pc, #552]	; 16740 <g_strcmp0@plt+0x2e44>
   16514:	mov	r0, #0
   16518:	b	13554 <dcgettext@plt>
   1651c:	mov	r2, #5
   16520:	ldr	r1, [pc, #540]	; 16744 <g_strcmp0@plt+0x2e48>
   16524:	mov	r0, #0
   16528:	b	13554 <dcgettext@plt>
   1652c:	mov	r2, #5
   16530:	ldr	r1, [pc, #528]	; 16748 <g_strcmp0@plt+0x2e4c>
   16534:	mov	r0, #0
   16538:	b	13554 <dcgettext@plt>
   1653c:	mov	r2, #5
   16540:	ldr	r1, [pc, #516]	; 1674c <g_strcmp0@plt+0x2e50>
   16544:	mov	r0, #0
   16548:	b	13554 <dcgettext@plt>
   1654c:	mov	r2, #5
   16550:	ldr	r1, [pc, #504]	; 16750 <g_strcmp0@plt+0x2e54>
   16554:	mov	r0, #0
   16558:	b	13554 <dcgettext@plt>
   1655c:	mov	r2, #5
   16560:	ldr	r1, [pc, #492]	; 16754 <g_strcmp0@plt+0x2e58>
   16564:	mov	r0, #0
   16568:	b	13554 <dcgettext@plt>
   1656c:	mov	r2, #5
   16570:	ldr	r1, [pc, #480]	; 16758 <g_strcmp0@plt+0x2e5c>
   16574:	mov	r0, #0
   16578:	b	13554 <dcgettext@plt>
   1657c:	mov	r2, #5
   16580:	ldr	r1, [pc, #468]	; 1675c <g_strcmp0@plt+0x2e60>
   16584:	mov	r0, #0
   16588:	b	13554 <dcgettext@plt>
   1658c:	mov	r2, #5
   16590:	ldr	r1, [pc, #456]	; 16760 <g_strcmp0@plt+0x2e64>
   16594:	mov	r0, #0
   16598:	b	13554 <dcgettext@plt>
   1659c:	mov	r2, #5
   165a0:	ldr	r1, [pc, #444]	; 16764 <g_strcmp0@plt+0x2e68>
   165a4:	mov	r0, #0
   165a8:	b	13554 <dcgettext@plt>
   165ac:	mov	r2, #5
   165b0:	ldr	r1, [pc, #432]	; 16768 <g_strcmp0@plt+0x2e6c>
   165b4:	mov	r0, #0
   165b8:	b	13554 <dcgettext@plt>
   165bc:	mov	r2, #5
   165c0:	ldr	r1, [pc, #420]	; 1676c <g_strcmp0@plt+0x2e70>
   165c4:	mov	r0, #0
   165c8:	b	13554 <dcgettext@plt>
   165cc:	mov	r2, #5
   165d0:	ldr	r1, [pc, #408]	; 16770 <g_strcmp0@plt+0x2e74>
   165d4:	mov	r0, #0
   165d8:	b	13554 <dcgettext@plt>
   165dc:	mov	r2, #5
   165e0:	ldr	r1, [pc, #396]	; 16774 <g_strcmp0@plt+0x2e78>
   165e4:	mov	r0, #0
   165e8:	b	13554 <dcgettext@plt>
   165ec:	mov	r2, #5
   165f0:	ldr	r1, [pc, #384]	; 16778 <g_strcmp0@plt+0x2e7c>
   165f4:	mov	r0, #0
   165f8:	b	13554 <dcgettext@plt>
   165fc:	mov	r2, #5
   16600:	ldr	r1, [pc, #372]	; 1677c <g_strcmp0@plt+0x2e80>
   16604:	mov	r0, #0
   16608:	b	13554 <dcgettext@plt>
   1660c:	mov	r2, #5
   16610:	ldr	r1, [pc, #360]	; 16780 <g_strcmp0@plt+0x2e84>
   16614:	mov	r0, #0
   16618:	b	13554 <dcgettext@plt>
   1661c:	mov	r2, #5
   16620:	ldr	r1, [pc, #348]	; 16784 <g_strcmp0@plt+0x2e88>
   16624:	mov	r0, #0
   16628:	b	13554 <dcgettext@plt>
   1662c:	mov	r2, #5
   16630:	ldr	r1, [pc, #336]	; 16788 <g_strcmp0@plt+0x2e8c>
   16634:	mov	r0, #0
   16638:	b	13554 <dcgettext@plt>
   1663c:	mov	r2, #5
   16640:	ldr	r1, [pc, #324]	; 1678c <g_strcmp0@plt+0x2e90>
   16644:	mov	r0, #0
   16648:	b	13554 <dcgettext@plt>
   1664c:	mov	r2, #5
   16650:	ldr	r1, [pc, #312]	; 16790 <g_strcmp0@plt+0x2e94>
   16654:	mov	r0, #0
   16658:	b	13554 <dcgettext@plt>
   1665c:	mov	r2, #5
   16660:	ldr	r1, [pc, #300]	; 16794 <g_strcmp0@plt+0x2e98>
   16664:	mov	r0, #0
   16668:	b	13554 <dcgettext@plt>
   1666c:	mov	r2, #5
   16670:	ldr	r1, [pc, #288]	; 16798 <g_strcmp0@plt+0x2e9c>
   16674:	mov	r0, #0
   16678:	b	13554 <dcgettext@plt>
   1667c:	mov	r2, #5
   16680:	ldr	r1, [pc, #276]	; 1679c <g_strcmp0@plt+0x2ea0>
   16684:	mov	r0, #0
   16688:	b	13554 <dcgettext@plt>
   1668c:	mov	r2, #5
   16690:	ldr	r1, [pc, #264]	; 167a0 <g_strcmp0@plt+0x2ea4>
   16694:	mov	r0, #0
   16698:	b	13554 <dcgettext@plt>
   1669c:	mov	r2, #5
   166a0:	ldr	r1, [pc, #252]	; 167a4 <g_strcmp0@plt+0x2ea8>
   166a4:	mov	r0, #0
   166a8:	b	13554 <dcgettext@plt>
   166ac:	mov	r2, #5
   166b0:	ldr	r1, [pc, #240]	; 167a8 <g_strcmp0@plt+0x2eac>
   166b4:	mov	r0, #0
   166b8:	b	13554 <dcgettext@plt>
   166bc:	mov	r2, #5
   166c0:	ldr	r1, [pc, #228]	; 167ac <g_strcmp0@plt+0x2eb0>
   166c4:	mov	r0, #0
   166c8:	b	13554 <dcgettext@plt>
   166cc:	mov	r2, #5
   166d0:	ldr	r1, [pc, #216]	; 167b0 <g_strcmp0@plt+0x2eb4>
   166d4:	mov	r0, #0
   166d8:	b	13554 <dcgettext@plt>
   166dc:	mov	r2, #5
   166e0:	ldr	r1, [pc, #204]	; 167b4 <g_strcmp0@plt+0x2eb8>
   166e4:	mov	r0, #0
   166e8:	b	13554 <dcgettext@plt>
   166ec:	mov	r2, #5
   166f0:	ldr	r1, [pc, #192]	; 167b8 <g_strcmp0@plt+0x2ebc>
   166f4:	mov	r0, #0
   166f8:	b	13554 <dcgettext@plt>
   166fc:	mov	r2, #5
   16700:	ldr	r1, [pc, #180]	; 167bc <g_strcmp0@plt+0x2ec0>
   16704:	mov	r0, #0
   16708:	b	13554 <dcgettext@plt>
   1670c:	push	{r4, lr}
   16710:	bl	13200 <pk_status_enum_to_string@plt>
   16714:	ldr	r2, [pc, #164]	; 167c0 <g_strcmp0@plt+0x2ec4>
   16718:	mov	r1, #16
   1671c:	mov	r3, r0
   16720:	ldr	r0, [pc, #156]	; 167c4 <g_strcmp0@plt+0x2ec8>
   16724:	bl	131d0 <g_log@plt>
   16728:	mov	r0, #0
   1672c:	pop	{r4, pc}
   16730:	andeq	ip, r1, r0, lsr #16
   16734:	strdeq	ip, [r1], -r8
   16738:	andeq	ip, r1, ip, asr #15
   1673c:	andeq	ip, r1, r0, lsr #15
   16740:	andeq	ip, r1, r4, lsl #15
   16744:	andeq	ip, r1, r0, ror #14
   16748:	andeq	ip, r1, r4, asr #14
   1674c:	andeq	ip, r1, r4, lsr #14
   16750:	andeq	ip, r1, r4, lsl r7
   16754:	andeq	ip, r1, r0, lsl #14
   16758:	andeq	ip, r1, r0, ror #13
   1675c:	andeq	ip, r1, ip, asr #13
   16760:	andeq	ip, r1, ip, lsr #13
   16764:	muleq	r1, r4, r6
   16768:	andeq	ip, r1, r4, ror r6
   1676c:	andeq	ip, r1, r0, asr r6
   16770:	andeq	ip, r1, r4, asr #12
   16774:	andeq	ip, r1, r8, lsr r6
   16778:	andeq	ip, r1, r8, lsr #12
   1677c:	andeq	ip, r1, r4, lsl r6
   16780:	andeq	ip, r1, r4, lsl #12
   16784:	strdeq	ip, [r1], -r0
   16788:	ldrdeq	ip, [r1], -r8
   1678c:	andeq	ip, r1, r4, asr #11
   16790:	andeq	ip, r1, ip, lsr #11
   16794:	muleq	r1, r8, r5
   16798:	andeq	ip, r1, r8, ror #10
   1679c:	andeq	ip, r1, r0, asr r5
   167a0:	andeq	ip, r1, ip, ror r5
   167a4:	andeq	ip, r1, ip, lsr r5
   167a8:	andeq	ip, r1, r8, lsr #10
   167ac:	andeq	ip, r1, ip, lsl r5
   167b0:	andeq	ip, r1, r4, lsl r5
   167b4:	strdeq	ip, [r1], -r4
   167b8:	andeq	ip, r1, r0, lsl #10
   167bc:	andeq	ip, r1, r4, ror #9
   167c0:	andeq	ip, r1, r0, lsr r8
   167c4:	muleq	r1, r4, r7
   167c8:	sub	r3, r0, #3
   167cc:	push	{r4, lr}
   167d0:	mov	r4, r1
   167d4:	sub	sp, sp, #8
   167d8:	cmp	r3, #6
   167dc:	ldrls	pc, [pc, r3, lsl #2]
   167e0:	b	168bc <g_strcmp0@plt+0x2fc0>
   167e4:	andeq	r6, r1, ip, lsr #16
   167e8:	andeq	r6, r1, r4, asr #16
   167ec:	andeq	r6, r1, ip, asr r8
   167f0:	andeq	r6, r1, r4, ror r8
   167f4:	andeq	r6, r1, ip, lsl #17
   167f8:	andeq	r6, r1, r4, lsr #17
   167fc:	andeq	r6, r1, r0, lsl #16
   16800:	mov	r3, #5
   16804:	str	r3, [sp]
   16808:	ldr	r2, [pc, #208]	; 168e0 <g_strcmp0@plt+0x2fe4>
   1680c:	mov	r3, r1
   16810:	ldr	r1, [pc, #204]	; 168e4 <g_strcmp0@plt+0x2fe8>
   16814:	mov	r0, #0
   16818:	bl	13338 <dcngettext@plt>
   1681c:	mov	r1, r4
   16820:	add	sp, sp, #8
   16824:	pop	{r4, lr}
   16828:	b	13320 <g_strdup_printf@plt>
   1682c:	mov	r3, #5
   16830:	str	r3, [sp]
   16834:	ldr	r2, [pc, #172]	; 168e8 <g_strcmp0@plt+0x2fec>
   16838:	mov	r3, r1
   1683c:	ldr	r1, [pc, #168]	; 168ec <g_strcmp0@plt+0x2ff0>
   16840:	b	16814 <g_strcmp0@plt+0x2f18>
   16844:	mov	r3, #5
   16848:	str	r3, [sp]
   1684c:	ldr	r2, [pc, #156]	; 168f0 <g_strcmp0@plt+0x2ff4>
   16850:	mov	r3, r1
   16854:	ldr	r1, [pc, #152]	; 168f4 <g_strcmp0@plt+0x2ff8>
   16858:	b	16814 <g_strcmp0@plt+0x2f18>
   1685c:	mov	r3, #5
   16860:	str	r3, [sp]
   16864:	ldr	r2, [pc, #140]	; 168f8 <g_strcmp0@plt+0x2ffc>
   16868:	mov	r3, r1
   1686c:	ldr	r1, [pc, #136]	; 168fc <g_strcmp0@plt+0x3000>
   16870:	b	16814 <g_strcmp0@plt+0x2f18>
   16874:	mov	r3, #5
   16878:	str	r3, [sp]
   1687c:	ldr	r2, [pc, #124]	; 16900 <g_strcmp0@plt+0x3004>
   16880:	mov	r3, r1
   16884:	ldr	r1, [pc, #120]	; 16904 <g_strcmp0@plt+0x3008>
   16888:	b	16814 <g_strcmp0@plt+0x2f18>
   1688c:	mov	r3, #5
   16890:	str	r3, [sp]
   16894:	ldr	r2, [pc, #108]	; 16908 <g_strcmp0@plt+0x300c>
   16898:	mov	r3, r1
   1689c:	ldr	r1, [pc, #104]	; 1690c <g_strcmp0@plt+0x3010>
   168a0:	b	16814 <g_strcmp0@plt+0x2f18>
   168a4:	mov	r3, #5
   168a8:	str	r3, [sp]
   168ac:	ldr	r2, [pc, #92]	; 16910 <g_strcmp0@plt+0x3014>
   168b0:	mov	r3, r1
   168b4:	ldr	r1, [pc, #88]	; 16914 <g_strcmp0@plt+0x3018>
   168b8:	b	16814 <g_strcmp0@plt+0x2f18>
   168bc:	bl	136ec <pk_info_enum_to_string@plt>
   168c0:	ldr	r2, [pc, #80]	; 16918 <g_strcmp0@plt+0x301c>
   168c4:	mov	r1, #16
   168c8:	mov	r3, r0
   168cc:	ldr	r0, [pc, #72]	; 1691c <g_strcmp0@plt+0x3020>
   168d0:	bl	131d0 <g_log@plt>
   168d4:	mov	r0, #0
   168d8:	add	sp, sp, #8
   168dc:	pop	{r4, pc}
   168e0:	andeq	ip, r1, r4, lsr r9
   168e4:	andeq	ip, r1, r8, asr #18
   168e8:	andeq	ip, r1, r8, asr #16
   168ec:	andeq	ip, r1, ip, asr r8
   168f0:	andeq	ip, r1, r4, lsl #18
   168f4:	andeq	ip, r1, ip, lsl r9
   168f8:	andeq	ip, r1, r0, ror r8
   168fc:	andeq	ip, r1, ip, ror r8
   16900:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   16904:	strdeq	ip, [r1], -r0
   16908:	andeq	ip, r1, r8, lsl #17
   1690c:	andeq	ip, r1, r0, lsr #17
   16910:			; <UNDEFINED> instruction: 0x0001c8b4
   16914:	andeq	ip, r1, r8, asr #17
   16918:	andeq	ip, r1, ip, asr r9
   1691c:	muleq	r1, r4, r7
   16920:	sub	r3, r0, #1
   16924:	cmp	r3, #23
   16928:	ldrls	pc, [pc, r3, lsl #2]
   1692c:	b	16a40 <g_strcmp0@plt+0x3144>
   16930:	andeq	r6, r1, r0, lsr #19
   16934:			; <UNDEFINED> instruction: 0x000169b0
   16938:	andeq	r6, r1, r0, asr #19
   1693c:	ldrdeq	r6, [r1], -r0
   16940:	andeq	r6, r1, r0, ror #19
   16944:	strdeq	r6, [r1], -r0
   16948:	andeq	r6, r1, r0, lsl #20
   1694c:	andeq	r6, r1, r0, lsl sl
   16950:	andeq	r6, r1, r0, lsr #20
   16954:	andeq	r6, r1, r0, asr #20
   16958:	andeq	r6, r1, r0, asr #20
   1695c:	andeq	r6, r1, r0, asr #20
   16960:	andeq	r6, r1, r0, asr #20
   16964:	andeq	r6, r1, r0, asr #20
   16968:	andeq	r6, r1, r0, asr #20
   1696c:	andeq	r6, r1, r0, lsr #19
   16970:			; <UNDEFINED> instruction: 0x000169b0
   16974:	andeq	r6, r1, r0, asr #20
   16978:	andeq	r6, r1, r0, asr #20
   1697c:	andeq	r6, r1, r0, asr #20
   16980:	andeq	r6, r1, r0, asr #20
   16984:	andeq	r6, r1, r0, asr #20
   16988:	andeq	r6, r1, r0, lsr sl
   1698c:	muleq	r1, r0, r9
   16990:	mov	r2, #5
   16994:	ldr	r1, [pc, #200]	; 16a64 <g_strcmp0@plt+0x3168>
   16998:	mov	r0, #0
   1699c:	b	13554 <dcgettext@plt>
   169a0:	mov	r2, #5
   169a4:	ldr	r1, [pc, #188]	; 16a68 <g_strcmp0@plt+0x316c>
   169a8:	mov	r0, #0
   169ac:	b	13554 <dcgettext@plt>
   169b0:	mov	r2, #5
   169b4:	ldr	r1, [pc, #176]	; 16a6c <g_strcmp0@plt+0x3170>
   169b8:	mov	r0, #0
   169bc:	b	13554 <dcgettext@plt>
   169c0:	mov	r2, #5
   169c4:	ldr	r1, [pc, #164]	; 16a70 <g_strcmp0@plt+0x3174>
   169c8:	mov	r0, #0
   169cc:	b	13554 <dcgettext@plt>
   169d0:	mov	r2, #5
   169d4:	ldr	r1, [pc, #152]	; 16a74 <g_strcmp0@plt+0x3178>
   169d8:	mov	r0, #0
   169dc:	b	13554 <dcgettext@plt>
   169e0:	mov	r2, #5
   169e4:	ldr	r1, [pc, #140]	; 16a78 <g_strcmp0@plt+0x317c>
   169e8:	mov	r0, #0
   169ec:	b	13554 <dcgettext@plt>
   169f0:	mov	r2, #5
   169f4:	ldr	r1, [pc, #128]	; 16a7c <g_strcmp0@plt+0x3180>
   169f8:	mov	r0, #0
   169fc:	b	13554 <dcgettext@plt>
   16a00:	mov	r2, #5
   16a04:	ldr	r1, [pc, #116]	; 16a80 <g_strcmp0@plt+0x3184>
   16a08:	mov	r0, #0
   16a0c:	b	13554 <dcgettext@plt>
   16a10:	mov	r2, #5
   16a14:	ldr	r1, [pc, #104]	; 16a84 <g_strcmp0@plt+0x3188>
   16a18:	mov	r0, #0
   16a1c:	b	13554 <dcgettext@plt>
   16a20:	mov	r2, #5
   16a24:	ldr	r1, [pc, #92]	; 16a88 <g_strcmp0@plt+0x318c>
   16a28:	mov	r0, #0
   16a2c:	b	13554 <dcgettext@plt>
   16a30:	mov	r2, #5
   16a34:	ldr	r1, [pc, #80]	; 16a8c <g_strcmp0@plt+0x3190>
   16a38:	mov	r0, #0
   16a3c:	b	13554 <dcgettext@plt>
   16a40:	push	{r4, lr}
   16a44:	bl	136ec <pk_info_enum_to_string@plt>
   16a48:	ldr	r2, [pc, #64]	; 16a90 <g_strcmp0@plt+0x3194>
   16a4c:	mov	r1, #16
   16a50:	mov	r3, r0
   16a54:	ldr	r0, [pc, #56]	; 16a94 <g_strcmp0@plt+0x3198>
   16a58:	bl	131d0 <g_log@plt>
   16a5c:	mov	r0, #0
   16a60:	pop	{r4, pc}
   16a64:	andeq	ip, r1, ip, lsl #20
   16a68:	strdeq	ip, [r1], -r4
   16a6c:	andeq	ip, r1, r0, lsl #20
   16a70:	andeq	ip, r1, ip, ror r9
   16a74:	ldrdeq	ip, [r1], -r0
   16a78:	andeq	ip, r1, ip, lsl #19
   16a7c:	andeq	ip, r1, r0, asr #19
   16a80:	muleq	r1, ip, r9
   16a84:			; <UNDEFINED> instruction: 0x0001c9b0
   16a88:	andeq	ip, r1, r4, ror #19
   16a8c:	andeq	ip, r1, r4, lsl sl
   16a90:	andeq	ip, r1, r0, lsr #20
   16a94:	muleq	r1, r4, r7
   16a98:	sub	r3, r0, #10
   16a9c:	cmp	r3, #12
   16aa0:	ldrls	pc, [pc, r3, lsl #2]
   16aa4:	b	16b6c <g_strcmp0@plt+0x3270>
   16aa8:	andeq	r6, r1, ip, ror #21
   16aac:	strdeq	r6, [r1], -ip
   16ab0:	andeq	r6, r1, ip, lsl #22
   16ab4:	andeq	r6, r1, ip, lsl fp
   16ab8:	andeq	r6, r1, ip, lsr #22
   16abc:	andeq	r6, r1, ip, lsr fp
   16ac0:	andeq	r6, r1, ip, ror #22
   16ac4:	andeq	r6, r1, ip, ror #22
   16ac8:	andeq	r6, r1, ip, ror #22
   16acc:	andeq	r6, r1, ip, asr #22
   16ad0:	andeq	r6, r1, ip, ror #22
   16ad4:	andeq	r6, r1, ip, asr fp
   16ad8:	ldrdeq	r6, [r1], -ip
   16adc:	mov	r2, #5
   16ae0:	ldr	r1, [pc, #168]	; 16b90 <g_strcmp0@plt+0x3294>
   16ae4:	mov	r0, #0
   16ae8:	b	13554 <dcgettext@plt>
   16aec:	mov	r2, #5
   16af0:	ldr	r1, [pc, #156]	; 16b94 <g_strcmp0@plt+0x3298>
   16af4:	mov	r0, #0
   16af8:	b	13554 <dcgettext@plt>
   16afc:	mov	r2, #5
   16b00:	ldr	r1, [pc, #144]	; 16b98 <g_strcmp0@plt+0x329c>
   16b04:	mov	r0, #0
   16b08:	b	13554 <dcgettext@plt>
   16b0c:	mov	r2, #5
   16b10:	ldr	r1, [pc, #132]	; 16b9c <g_strcmp0@plt+0x32a0>
   16b14:	mov	r0, #0
   16b18:	b	13554 <dcgettext@plt>
   16b1c:	mov	r2, #5
   16b20:	ldr	r1, [pc, #120]	; 16ba0 <g_strcmp0@plt+0x32a4>
   16b24:	mov	r0, #0
   16b28:	b	13554 <dcgettext@plt>
   16b2c:	mov	r2, #5
   16b30:	ldr	r1, [pc, #108]	; 16ba4 <g_strcmp0@plt+0x32a8>
   16b34:	mov	r0, #0
   16b38:	b	13554 <dcgettext@plt>
   16b3c:	mov	r2, #5
   16b40:	ldr	r1, [pc, #96]	; 16ba8 <g_strcmp0@plt+0x32ac>
   16b44:	mov	r0, #0
   16b48:	b	13554 <dcgettext@plt>
   16b4c:	mov	r2, #5
   16b50:	ldr	r1, [pc, #84]	; 16bac <g_strcmp0@plt+0x32b0>
   16b54:	mov	r0, #0
   16b58:	b	13554 <dcgettext@plt>
   16b5c:	mov	r2, #5
   16b60:	ldr	r1, [pc, #72]	; 16bb0 <g_strcmp0@plt+0x32b4>
   16b64:	mov	r0, #0
   16b68:	b	13554 <dcgettext@plt>
   16b6c:	push	{r4, lr}
   16b70:	bl	136ec <pk_info_enum_to_string@plt>
   16b74:	ldr	r2, [pc, #56]	; 16bb4 <g_strcmp0@plt+0x32b8>
   16b78:	mov	r1, #16
   16b7c:	mov	r3, r0
   16b80:	ldr	r0, [pc, #48]	; 16bb8 <g_strcmp0@plt+0x32bc>
   16b84:	bl	131d0 <g_log@plt>
   16b88:	mov	r0, #0
   16b8c:	pop	{r4, pc}
   16b90:	muleq	r1, ip, sl
   16b94:	andeq	ip, r1, r8, lsr sl
   16b98:	andeq	ip, r1, r4, asr #20
   16b9c:	andeq	ip, r1, r0, asr sl
   16ba0:	andeq	ip, r1, ip, asr sl
   16ba4:	andeq	ip, r1, r8, ror #20
   16ba8:	andeq	ip, r1, r4, ror sl
   16bac:	andeq	ip, r1, r0, lsl #21
   16bb0:	muleq	r1, r0, sl
   16bb4:	andeq	ip, r1, r0, lsr #20
   16bb8:	muleq	r1, r4, r7
   16bbc:	sub	r3, r0, #10
   16bc0:	cmp	r3, #12
   16bc4:	ldrls	pc, [pc, r3, lsl #2]
   16bc8:	b	16c90 <g_strcmp0@plt+0x3394>
   16bcc:	andeq	r6, r1, r0, lsl ip
   16bd0:	andeq	r6, r1, r0, lsr #24
   16bd4:	andeq	r6, r1, r0, lsr ip
   16bd8:	andeq	r6, r1, r0, asr #24
   16bdc:	andeq	r6, r1, r0, asr ip
   16be0:	andeq	r6, r1, r0, ror #24
   16be4:	muleq	r1, r0, ip
   16be8:	muleq	r1, r0, ip
   16bec:	muleq	r1, r0, ip
   16bf0:	andeq	r6, r1, r0, ror ip
   16bf4:	muleq	r1, r0, ip
   16bf8:	andeq	r6, r1, r0, lsl #25
   16bfc:	andeq	r6, r1, r0, lsl #24
   16c00:	mov	r2, #5
   16c04:	ldr	r1, [pc, #168]	; 16cb4 <g_strcmp0@plt+0x33b8>
   16c08:	mov	r0, #0
   16c0c:	b	13554 <dcgettext@plt>
   16c10:	mov	r2, #5
   16c14:	ldr	r1, [pc, #156]	; 16cb8 <g_strcmp0@plt+0x33bc>
   16c18:	mov	r0, #0
   16c1c:	b	13554 <dcgettext@plt>
   16c20:	mov	r2, #5
   16c24:	ldr	r1, [pc, #144]	; 16cbc <g_strcmp0@plt+0x33c0>
   16c28:	mov	r0, #0
   16c2c:	b	13554 <dcgettext@plt>
   16c30:	mov	r2, #5
   16c34:	ldr	r1, [pc, #132]	; 16cc0 <g_strcmp0@plt+0x33c4>
   16c38:	mov	r0, #0
   16c3c:	b	13554 <dcgettext@plt>
   16c40:	mov	r2, #5
   16c44:	ldr	r1, [pc, #120]	; 16cc4 <g_strcmp0@plt+0x33c8>
   16c48:	mov	r0, #0
   16c4c:	b	13554 <dcgettext@plt>
   16c50:	mov	r2, #5
   16c54:	ldr	r1, [pc, #108]	; 16cc8 <g_strcmp0@plt+0x33cc>
   16c58:	mov	r0, #0
   16c5c:	b	13554 <dcgettext@plt>
   16c60:	mov	r2, #5
   16c64:	ldr	r1, [pc, #96]	; 16ccc <g_strcmp0@plt+0x33d0>
   16c68:	mov	r0, #0
   16c6c:	b	13554 <dcgettext@plt>
   16c70:	mov	r2, #5
   16c74:	ldr	r1, [pc, #84]	; 16cd0 <g_strcmp0@plt+0x33d4>
   16c78:	mov	r0, #0
   16c7c:	b	13554 <dcgettext@plt>
   16c80:	mov	r2, #5
   16c84:	ldr	r1, [pc, #72]	; 16cd4 <g_strcmp0@plt+0x33d8>
   16c88:	mov	r0, #0
   16c8c:	b	13554 <dcgettext@plt>
   16c90:	push	{r4, lr}
   16c94:	bl	136ec <pk_info_enum_to_string@plt>
   16c98:	ldr	r2, [pc, #56]	; 16cd8 <g_strcmp0@plt+0x33dc>
   16c9c:	mov	r1, #16
   16ca0:	mov	r3, r0
   16ca4:	ldr	r0, [pc, #48]	; 16cdc <g_strcmp0@plt+0x33e0>
   16ca8:	bl	131d0 <g_log@plt>
   16cac:	mov	r0, #0
   16cb0:	pop	{r4, pc}
   16cb4:	strdeq	ip, [r1], -r8
   16cb8:	andeq	ip, r1, ip, lsr #21
   16cbc:			; <UNDEFINED> instruction: 0x0001cab8
   16cc0:	strdeq	ip, [r1], -r4
   16cc4:	andeq	ip, r1, r0, asr #21
   16cc8:	andeq	ip, r1, r8, asr #21
   16ccc:	ldrdeq	ip, [r1], -r4
   16cd0:	andeq	ip, r1, r0, ror #21
   16cd4:	andeq	ip, r1, ip, ror #21
   16cd8:	andeq	ip, r1, r0, lsr #20
   16cdc:	muleq	r1, r4, r7
   16ce0:	cmp	r0, #32
   16ce4:	ldrls	pc, [pc, r0, lsl #2]
   16ce8:	b	16f60 <g_strcmp0@plt+0x3664>
   16cec:	andeq	r6, r1, r0, asr pc
   16cf0:	andeq	r6, r1, r0, asr #30
   16cf4:	andeq	r6, r1, r0, lsr pc
   16cf8:	andeq	r6, r1, r0, lsr #30
   16cfc:	andeq	r6, r1, r0, lsl pc
   16d00:	andeq	r6, r1, r0, lsl #30
   16d04:	strdeq	r6, [r1], -r0
   16d08:	andeq	r6, r1, r0, ror #29
   16d0c:	ldrdeq	r6, [r1], -r0
   16d10:	andeq	r6, r1, r0, asr #29
   16d14:			; <UNDEFINED> instruction: 0x00016eb0
   16d18:	andeq	r6, r1, r0, lsr #29
   16d1c:	muleq	r1, r0, lr
   16d20:	andeq	r6, r1, r0, lsl #29
   16d24:	andeq	r6, r1, r0, ror lr
   16d28:	andeq	r6, r1, r0, ror #28
   16d2c:	andeq	r6, r1, r0, asr lr
   16d30:	andeq	r6, r1, r0, asr #28
   16d34:	andeq	r6, r1, r0, lsr lr
   16d38:	andeq	r6, r1, r0, lsr #28
   16d3c:	andeq	r6, r1, r0, lsl lr
   16d40:	andeq	r6, r1, r0, lsl #28
   16d44:	strdeq	r6, [r1], -r0
   16d48:	andeq	r6, r1, r0, ror #27
   16d4c:	ldrdeq	r6, [r1], -r0
   16d50:	andeq	r6, r1, r0, asr #27
   16d54:			; <UNDEFINED> instruction: 0x00016db0
   16d58:	andeq	r6, r1, r0, lsr #27
   16d5c:	muleq	r1, r0, sp
   16d60:	andeq	r6, r1, r0, lsl #27
   16d64:	andeq	r6, r1, r0, lsr #30
   16d68:	andeq	r6, r1, r0, lsl pc
   16d6c:	andeq	r6, r1, r0, ror sp
   16d70:	mov	r2, #5
   16d74:	ldr	r1, [pc, #520]	; 16f84 <g_strcmp0@plt+0x3688>
   16d78:	mov	r0, #0
   16d7c:	b	13554 <dcgettext@plt>
   16d80:	mov	r2, #5
   16d84:	ldr	r1, [pc, #508]	; 16f88 <g_strcmp0@plt+0x368c>
   16d88:	mov	r0, #0
   16d8c:	b	13554 <dcgettext@plt>
   16d90:	mov	r2, #5
   16d94:	ldr	r1, [pc, #496]	; 16f8c <g_strcmp0@plt+0x3690>
   16d98:	mov	r0, #0
   16d9c:	b	13554 <dcgettext@plt>
   16da0:	mov	r2, #5
   16da4:	ldr	r1, [pc, #484]	; 16f90 <g_strcmp0@plt+0x3694>
   16da8:	mov	r0, #0
   16dac:	b	13554 <dcgettext@plt>
   16db0:	mov	r2, #5
   16db4:	ldr	r1, [pc, #472]	; 16f94 <g_strcmp0@plt+0x3698>
   16db8:	mov	r0, #0
   16dbc:	b	13554 <dcgettext@plt>
   16dc0:	mov	r2, #5
   16dc4:	ldr	r1, [pc, #460]	; 16f98 <g_strcmp0@plt+0x369c>
   16dc8:	mov	r0, #0
   16dcc:	b	13554 <dcgettext@plt>
   16dd0:	mov	r2, #5
   16dd4:	ldr	r1, [pc, #448]	; 16f9c <g_strcmp0@plt+0x36a0>
   16dd8:	mov	r0, #0
   16ddc:	b	13554 <dcgettext@plt>
   16de0:	mov	r2, #5
   16de4:	ldr	r1, [pc, #436]	; 16fa0 <g_strcmp0@plt+0x36a4>
   16de8:	mov	r0, #0
   16dec:	b	13554 <dcgettext@plt>
   16df0:	mov	r2, #5
   16df4:	ldr	r1, [pc, #424]	; 16fa4 <g_strcmp0@plt+0x36a8>
   16df8:	mov	r0, #0
   16dfc:	b	13554 <dcgettext@plt>
   16e00:	mov	r2, #5
   16e04:	ldr	r1, [pc, #412]	; 16fa8 <g_strcmp0@plt+0x36ac>
   16e08:	mov	r0, #0
   16e0c:	b	13554 <dcgettext@plt>
   16e10:	mov	r2, #5
   16e14:	ldr	r1, [pc, #400]	; 16fac <g_strcmp0@plt+0x36b0>
   16e18:	mov	r0, #0
   16e1c:	b	13554 <dcgettext@plt>
   16e20:	mov	r2, #5
   16e24:	ldr	r1, [pc, #388]	; 16fb0 <g_strcmp0@plt+0x36b4>
   16e28:	mov	r0, #0
   16e2c:	b	13554 <dcgettext@plt>
   16e30:	mov	r2, #5
   16e34:	ldr	r1, [pc, #376]	; 16fb4 <g_strcmp0@plt+0x36b8>
   16e38:	mov	r0, #0
   16e3c:	b	13554 <dcgettext@plt>
   16e40:	mov	r2, #5
   16e44:	ldr	r1, [pc, #364]	; 16fb8 <g_strcmp0@plt+0x36bc>
   16e48:	mov	r0, #0
   16e4c:	b	13554 <dcgettext@plt>
   16e50:	mov	r2, #5
   16e54:	ldr	r1, [pc, #352]	; 16fbc <g_strcmp0@plt+0x36c0>
   16e58:	mov	r0, #0
   16e5c:	b	13554 <dcgettext@plt>
   16e60:	mov	r2, #5
   16e64:	ldr	r1, [pc, #340]	; 16fc0 <g_strcmp0@plt+0x36c4>
   16e68:	mov	r0, #0
   16e6c:	b	13554 <dcgettext@plt>
   16e70:	mov	r2, #5
   16e74:	ldr	r1, [pc, #328]	; 16fc4 <g_strcmp0@plt+0x36c8>
   16e78:	mov	r0, #0
   16e7c:	b	13554 <dcgettext@plt>
   16e80:	mov	r2, #5
   16e84:	ldr	r1, [pc, #316]	; 16fc8 <g_strcmp0@plt+0x36cc>
   16e88:	mov	r0, #0
   16e8c:	b	13554 <dcgettext@plt>
   16e90:	mov	r2, #5
   16e94:	ldr	r1, [pc, #304]	; 16fcc <g_strcmp0@plt+0x36d0>
   16e98:	mov	r0, #0
   16e9c:	b	13554 <dcgettext@plt>
   16ea0:	mov	r2, #5
   16ea4:	ldr	r1, [pc, #292]	; 16fd0 <g_strcmp0@plt+0x36d4>
   16ea8:	mov	r0, #0
   16eac:	b	13554 <dcgettext@plt>
   16eb0:	mov	r2, #5
   16eb4:	ldr	r1, [pc, #280]	; 16fd4 <g_strcmp0@plt+0x36d8>
   16eb8:	mov	r0, #0
   16ebc:	b	13554 <dcgettext@plt>
   16ec0:	mov	r2, #5
   16ec4:	ldr	r1, [pc, #268]	; 16fd8 <g_strcmp0@plt+0x36dc>
   16ec8:	mov	r0, #0
   16ecc:	b	13554 <dcgettext@plt>
   16ed0:	mov	r2, #5
   16ed4:	ldr	r1, [pc, #256]	; 16fdc <g_strcmp0@plt+0x36e0>
   16ed8:	mov	r0, #0
   16edc:	b	13554 <dcgettext@plt>
   16ee0:	mov	r2, #5
   16ee4:	ldr	r1, [pc, #244]	; 16fe0 <g_strcmp0@plt+0x36e4>
   16ee8:	mov	r0, #0
   16eec:	b	13554 <dcgettext@plt>
   16ef0:	mov	r2, #5
   16ef4:	ldr	r1, [pc, #232]	; 16fe4 <g_strcmp0@plt+0x36e8>
   16ef8:	mov	r0, #0
   16efc:	b	13554 <dcgettext@plt>
   16f00:	mov	r2, #5
   16f04:	ldr	r1, [pc, #220]	; 16fe8 <g_strcmp0@plt+0x36ec>
   16f08:	mov	r0, #0
   16f0c:	b	13554 <dcgettext@plt>
   16f10:	mov	r2, #5
   16f14:	ldr	r1, [pc, #208]	; 16fec <g_strcmp0@plt+0x36f0>
   16f18:	mov	r0, #0
   16f1c:	b	13554 <dcgettext@plt>
   16f20:	mov	r2, #5
   16f24:	ldr	r1, [pc, #196]	; 16ff0 <g_strcmp0@plt+0x36f4>
   16f28:	mov	r0, #0
   16f2c:	b	13554 <dcgettext@plt>
   16f30:	mov	r2, #5
   16f34:	ldr	r1, [pc, #184]	; 16ff4 <g_strcmp0@plt+0x36f8>
   16f38:	mov	r0, #0
   16f3c:	b	13554 <dcgettext@plt>
   16f40:	mov	r2, #5
   16f44:	ldr	r1, [pc, #172]	; 16ff8 <g_strcmp0@plt+0x36fc>
   16f48:	mov	r0, #0
   16f4c:	b	13554 <dcgettext@plt>
   16f50:	mov	r2, #5
   16f54:	ldr	r1, [pc, #160]	; 16ffc <g_strcmp0@plt+0x3700>
   16f58:	mov	r0, #0
   16f5c:	b	13554 <dcgettext@plt>
   16f60:	push	{r4, lr}
   16f64:	bl	131c4 <pk_role_enum_to_string@plt>
   16f68:	ldr	r2, [pc, #144]	; 17000 <g_strcmp0@plt+0x3704>
   16f6c:	mov	r1, #16
   16f70:	mov	r3, r0
   16f74:	ldr	r0, [pc, #136]	; 17004 <g_strcmp0@plt+0x3708>
   16f78:	bl	131d0 <g_log@plt>
   16f7c:	mov	r0, #0
   16f80:	pop	{r4, pc}
   16f84:	andeq	ip, r1, ip, asr #24
   16f88:	andeq	ip, r1, ip, asr #26
   16f8c:	andeq	ip, r1, r0, lsr sp
   16f90:	andeq	ip, r1, ip, lsl sp
   16f94:	strdeq	ip, [r1], -r0
   16f98:	andeq	ip, r1, r0, asr r5
   16f9c:	andeq	ip, r1, r0, ror #25
   16fa0:	muleq	r1, r8, ip
   16fa4:	andeq	ip, r1, r4, lsl #24
   16fa8:			; <UNDEFINED> instruction: 0x0001cbbc
   16fac:	andeq	ip, r1, r8, lsr #23
   16fb0:	muleq	r1, r4, fp
   16fb4:	andeq	ip, r1, r0, lsl #23
   16fb8:	andeq	ip, r1, r8, ror ip
   16fbc:	andeq	ip, r1, r0, ror #24
   16fc0:	andeq	ip, r1, r8, lsr ip
   16fc4:	andeq	ip, r1, ip, asr sl
   16fc8:	andeq	ip, r1, r8, ror #23
   16fcc:			; <UNDEFINED> instruction: 0x0001ccb0
   16fd0:	andeq	ip, r1, r0, asr sl
   16fd4:	ldrdeq	ip, [r1], -r8
   16fd8:	andeq	ip, r1, r0, ror fp
   16fdc:	andeq	ip, r1, r4, lsr fp
   16fe0:	andeq	ip, r1, ip, asr fp
   16fe4:	andeq	ip, r1, r8, lsl ip
   16fe8:	andeq	ip, r1, r8, asr #25
   16fec:	andeq	ip, r1, r4, lsl #25
   16ff0:	andeq	ip, r1, ip, asr #22
   16ff4:	andeq	ip, r1, ip, lsl fp
   16ff8:	andeq	ip, r1, r4, asr #12
   16ffc:	andeq	ip, r1, r8, lsl #22
   17000:	andeq	ip, r1, r4, ror #26
   17004:	muleq	r1, r4, r7
   17008:	cmp	r0, #32
   1700c:	ldrls	pc, [pc, r0, lsl #2]
   17010:	b	17288 <g_strcmp0@plt+0x398c>
   17014:	andeq	r7, r1, r8, ror r2
   17018:	andeq	r7, r1, r8, ror #4
   1701c:	andeq	r7, r1, r8, asr r2
   17020:	andeq	r7, r1, r8, asr #4
   17024:	andeq	r7, r1, r8, lsr r2
   17028:	andeq	r7, r1, r8, lsr #4
   1702c:	andeq	r7, r1, r8, lsl r2
   17030:	andeq	r7, r1, r8, lsl #4
   17034:	strdeq	r7, [r1], -r8
   17038:	andeq	r7, r1, r8, ror #3
   1703c:	ldrdeq	r7, [r1], -r8
   17040:	andeq	r7, r1, r8, asr #3
   17044:			; <UNDEFINED> instruction: 0x000171b8
   17048:	andeq	r7, r1, r8, lsr #3
   1704c:	muleq	r1, r8, r1
   17050:	andeq	r7, r1, r8, lsl #3
   17054:	andeq	r7, r1, r8, ror r1
   17058:	andeq	r7, r1, r8, ror #2
   1705c:	andeq	r7, r1, r8, asr r1
   17060:	andeq	r7, r1, r8, asr #2
   17064:	andeq	r7, r1, r8, lsr r1
   17068:	andeq	r7, r1, r8, lsr #2
   1706c:	andeq	r7, r1, r8, lsl r1
   17070:	andeq	r7, r1, r8, lsl #2
   17074:	strdeq	r7, [r1], -r8
   17078:	andeq	r7, r1, r8, ror #1
   1707c:	ldrdeq	r7, [r1], -r8
   17080:	andeq	r7, r1, r8, asr #1
   17084:	strheq	r7, [r1], -r8
   17088:	andeq	r7, r1, r8, lsr #1
   1708c:	andeq	r7, r1, r8, asr #4
   17090:	andeq	r7, r1, r8, lsr r2
   17094:	muleq	r1, r8, r0
   17098:	mov	r2, #5
   1709c:	ldr	r1, [pc, #520]	; 172ac <g_strcmp0@plt+0x39b0>
   170a0:	mov	r0, #0
   170a4:	b	13554 <dcgettext@plt>
   170a8:	mov	r2, #5
   170ac:	ldr	r1, [pc, #508]	; 172b0 <g_strcmp0@plt+0x39b4>
   170b0:	mov	r0, #0
   170b4:	b	13554 <dcgettext@plt>
   170b8:	mov	r2, #5
   170bc:	ldr	r1, [pc, #496]	; 172b4 <g_strcmp0@plt+0x39b8>
   170c0:	mov	r0, #0
   170c4:	b	13554 <dcgettext@plt>
   170c8:	mov	r2, #5
   170cc:	ldr	r1, [pc, #484]	; 172b8 <g_strcmp0@plt+0x39bc>
   170d0:	mov	r0, #0
   170d4:	b	13554 <dcgettext@plt>
   170d8:	mov	r2, #5
   170dc:	ldr	r1, [pc, #472]	; 172bc <g_strcmp0@plt+0x39c0>
   170e0:	mov	r0, #0
   170e4:	b	13554 <dcgettext@plt>
   170e8:	mov	r2, #5
   170ec:	ldr	r1, [pc, #460]	; 172c0 <g_strcmp0@plt+0x39c4>
   170f0:	mov	r0, #0
   170f4:	b	13554 <dcgettext@plt>
   170f8:	mov	r2, #5
   170fc:	ldr	r1, [pc, #448]	; 172c4 <g_strcmp0@plt+0x39c8>
   17100:	mov	r0, #0
   17104:	b	13554 <dcgettext@plt>
   17108:	mov	r2, #5
   1710c:	ldr	r1, [pc, #436]	; 172c8 <g_strcmp0@plt+0x39cc>
   17110:	mov	r0, #0
   17114:	b	13554 <dcgettext@plt>
   17118:	mov	r2, #5
   1711c:	ldr	r1, [pc, #424]	; 172cc <g_strcmp0@plt+0x39d0>
   17120:	mov	r0, #0
   17124:	b	13554 <dcgettext@plt>
   17128:	mov	r2, #5
   1712c:	ldr	r1, [pc, #412]	; 172d0 <g_strcmp0@plt+0x39d4>
   17130:	mov	r0, #0
   17134:	b	13554 <dcgettext@plt>
   17138:	mov	r2, #5
   1713c:	ldr	r1, [pc, #400]	; 172d4 <g_strcmp0@plt+0x39d8>
   17140:	mov	r0, #0
   17144:	b	13554 <dcgettext@plt>
   17148:	mov	r2, #5
   1714c:	ldr	r1, [pc, #388]	; 172d8 <g_strcmp0@plt+0x39dc>
   17150:	mov	r0, #0
   17154:	b	13554 <dcgettext@plt>
   17158:	mov	r2, #5
   1715c:	ldr	r1, [pc, #376]	; 172dc <g_strcmp0@plt+0x39e0>
   17160:	mov	r0, #0
   17164:	b	13554 <dcgettext@plt>
   17168:	mov	r2, #5
   1716c:	ldr	r1, [pc, #364]	; 172e0 <g_strcmp0@plt+0x39e4>
   17170:	mov	r0, #0
   17174:	b	13554 <dcgettext@plt>
   17178:	mov	r2, #5
   1717c:	ldr	r1, [pc, #352]	; 172e4 <g_strcmp0@plt+0x39e8>
   17180:	mov	r0, #0
   17184:	b	13554 <dcgettext@plt>
   17188:	mov	r2, #5
   1718c:	ldr	r1, [pc, #340]	; 172e8 <g_strcmp0@plt+0x39ec>
   17190:	mov	r0, #0
   17194:	b	13554 <dcgettext@plt>
   17198:	mov	r2, #5
   1719c:	ldr	r1, [pc, #328]	; 172ec <g_strcmp0@plt+0x39f0>
   171a0:	mov	r0, #0
   171a4:	b	13554 <dcgettext@plt>
   171a8:	mov	r2, #5
   171ac:	ldr	r1, [pc, #316]	; 172f0 <g_strcmp0@plt+0x39f4>
   171b0:	mov	r0, #0
   171b4:	b	13554 <dcgettext@plt>
   171b8:	mov	r2, #5
   171bc:	ldr	r1, [pc, #304]	; 172f4 <g_strcmp0@plt+0x39f8>
   171c0:	mov	r0, #0
   171c4:	b	13554 <dcgettext@plt>
   171c8:	mov	r2, #5
   171cc:	ldr	r1, [pc, #292]	; 172f8 <g_strcmp0@plt+0x39fc>
   171d0:	mov	r0, #0
   171d4:	b	13554 <dcgettext@plt>
   171d8:	mov	r2, #5
   171dc:	ldr	r1, [pc, #280]	; 172fc <g_strcmp0@plt+0x3a00>
   171e0:	mov	r0, #0
   171e4:	b	13554 <dcgettext@plt>
   171e8:	mov	r2, #5
   171ec:	ldr	r1, [pc, #268]	; 17300 <g_strcmp0@plt+0x3a04>
   171f0:	mov	r0, #0
   171f4:	b	13554 <dcgettext@plt>
   171f8:	mov	r2, #5
   171fc:	ldr	r1, [pc, #256]	; 17304 <g_strcmp0@plt+0x3a08>
   17200:	mov	r0, #0
   17204:	b	13554 <dcgettext@plt>
   17208:	mov	r2, #5
   1720c:	ldr	r1, [pc, #244]	; 17308 <g_strcmp0@plt+0x3a0c>
   17210:	mov	r0, #0
   17214:	b	13554 <dcgettext@plt>
   17218:	mov	r2, #5
   1721c:	ldr	r1, [pc, #232]	; 1730c <g_strcmp0@plt+0x3a10>
   17220:	mov	r0, #0
   17224:	b	13554 <dcgettext@plt>
   17228:	mov	r2, #5
   1722c:	ldr	r1, [pc, #220]	; 17310 <g_strcmp0@plt+0x3a14>
   17230:	mov	r0, #0
   17234:	b	13554 <dcgettext@plt>
   17238:	mov	r2, #5
   1723c:	ldr	r1, [pc, #208]	; 17314 <g_strcmp0@plt+0x3a18>
   17240:	mov	r0, #0
   17244:	b	13554 <dcgettext@plt>
   17248:	mov	r2, #5
   1724c:	ldr	r1, [pc, #196]	; 17318 <g_strcmp0@plt+0x3a1c>
   17250:	mov	r0, #0
   17254:	b	13554 <dcgettext@plt>
   17258:	mov	r2, #5
   1725c:	ldr	r1, [pc, #184]	; 1731c <g_strcmp0@plt+0x3a20>
   17260:	mov	r0, #0
   17264:	b	13554 <dcgettext@plt>
   17268:	mov	r2, #5
   1726c:	ldr	r1, [pc, #172]	; 17320 <g_strcmp0@plt+0x3a24>
   17270:	mov	r0, #0
   17274:	b	13554 <dcgettext@plt>
   17278:	mov	r2, #5
   1727c:	ldr	r1, [pc, #160]	; 17324 <g_strcmp0@plt+0x3a28>
   17280:	mov	r0, #0
   17284:	b	13554 <dcgettext@plt>
   17288:	push	{r4, lr}
   1728c:	bl	131c4 <pk_role_enum_to_string@plt>
   17290:	ldr	r2, [pc, #144]	; 17328 <g_strcmp0@plt+0x3a2c>
   17294:	mov	r1, #16
   17298:	mov	r3, r0
   1729c:	ldr	r0, [pc, #136]	; 1732c <g_strcmp0@plt+0x3a30>
   172a0:	bl	131d0 <g_log@plt>
   172a4:	mov	r0, #0
   172a8:	pop	{r4, pc}
   172ac:	ldrdeq	ip, [r1], -r4
   172b0:			; <UNDEFINED> instruction: 0x0001cfbc
   172b4:	andeq	ip, r1, r4, lsr #31
   172b8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   172bc:	andeq	ip, r1, r8, ror pc
   172c0:	andeq	ip, r1, r4, ror #30
   172c4:	andeq	ip, r1, r4, asr pc
   172c8:	andeq	ip, r1, r8, lsl pc
   172cc:	andeq	ip, r1, r4, lsl #29
   172d0:	andeq	ip, r1, r0, lsl lr
   172d4:	andeq	ip, r1, r0, lsl #28
   172d8:	andeq	ip, r1, ip, ror #27
   172dc:	andeq	ip, r1, ip, asr #27
   172e0:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   172e4:	andeq	ip, r1, r8, ror #29
   172e8:	andeq	ip, r1, r0, asr #29
   172ec:	andeq	ip, r1, ip, lsr #28
   172f0:	andeq	ip, r1, ip, ror #28
   172f4:	andeq	ip, r1, ip, lsr #30
   172f8:	andeq	ip, r1, r0, asr #28
   172fc:	andeq	ip, r1, r4, asr lr
   17300:	andeq	ip, r1, r0, asr #27
   17304:	muleq	r1, r0, sp
   17308:			; <UNDEFINED> instruction: 0x0001cdb0
   1730c:	andeq	ip, r1, r4, lsr #29
   17310:	andeq	ip, r1, r0, asr #30
   17314:	andeq	ip, r1, r8, lsl #30
   17318:	andeq	ip, r1, r4, lsr #27
   1731c:	andeq	ip, r1, ip, ror sp
   17320:	muleq	r1, r8, lr
   17324:	andeq	ip, r1, r8, lsl #22
   17328:	andeq	ip, r1, r4, ror #26
   1732c:	muleq	r1, r4, r7
   17330:	cmp	r0, #34	; 0x22
   17334:	ldrls	pc, [pc, r0, lsl #2]
   17338:	b	175f8 <g_strcmp0@plt+0x3cfc>
   1733c:	andeq	r7, r1, r8, ror #11
   17340:	ldrdeq	r7, [r1], -r8
   17344:	andeq	r7, r1, r8, asr #11
   17348:			; <UNDEFINED> instruction: 0x000175b8
   1734c:	andeq	r7, r1, r8, lsr #11
   17350:	muleq	r1, r8, r5
   17354:	andeq	r7, r1, r8, lsl #11
   17358:	andeq	r7, r1, r8, ror r5
   1735c:	andeq	r7, r1, r8, ror #10
   17360:	andeq	r7, r1, r8, asr r5
   17364:	andeq	r7, r1, r8, asr #10
   17368:	andeq	r7, r1, r8, lsr r5
   1736c:	andeq	r7, r1, r8, lsr #10
   17370:	andeq	r7, r1, r8, lsl r5
   17374:	andeq	r7, r1, r8, lsl #10
   17378:	strdeq	r7, [r1], -r8
   1737c:	andeq	r7, r1, r8, ror #9
   17380:	ldrdeq	r7, [r1], -r8
   17384:	andeq	r7, r1, r8, asr #9
   17388:			; <UNDEFINED> instruction: 0x000174b8
   1738c:	andeq	r7, r1, r8, lsr #9
   17390:	muleq	r1, r8, r4
   17394:	andeq	r7, r1, r8, lsl #9
   17398:	andeq	r7, r1, r8, ror r4
   1739c:	andeq	r7, r1, r8, ror #8
   173a0:	andeq	r7, r1, r8, asr r4
   173a4:	andeq	r7, r1, r8, asr #8
   173a8:	andeq	r7, r1, r8, lsr r4
   173ac:	andeq	r7, r1, r8, lsr #8
   173b0:	andeq	r7, r1, r8, lsl r4
   173b4:	andeq	r7, r1, r8, lsl #8
   173b8:	strdeq	r7, [r1], -r8
   173bc:	andeq	r7, r1, r8, ror #7
   173c0:	ldrdeq	r7, [r1], -r8
   173c4:	andeq	r7, r1, r8, asr #7
   173c8:	mov	r2, #5
   173cc:	ldr	r1, [pc, #580]	; 17618 <g_strcmp0@plt+0x3d1c>
   173d0:	mov	r0, #0
   173d4:	b	13554 <dcgettext@plt>
   173d8:	mov	r2, #5
   173dc:	ldr	r1, [pc, #568]	; 1761c <g_strcmp0@plt+0x3d20>
   173e0:	mov	r0, #0
   173e4:	b	13554 <dcgettext@plt>
   173e8:	mov	r2, #5
   173ec:	ldr	r1, [pc, #556]	; 17620 <g_strcmp0@plt+0x3d24>
   173f0:	mov	r0, #0
   173f4:	b	13554 <dcgettext@plt>
   173f8:	mov	r2, #5
   173fc:	ldr	r1, [pc, #544]	; 17624 <g_strcmp0@plt+0x3d28>
   17400:	mov	r0, #0
   17404:	b	13554 <dcgettext@plt>
   17408:	mov	r2, #5
   1740c:	ldr	r1, [pc, #532]	; 17628 <g_strcmp0@plt+0x3d2c>
   17410:	mov	r0, #0
   17414:	b	13554 <dcgettext@plt>
   17418:	mov	r2, #5
   1741c:	ldr	r1, [pc, #520]	; 1762c <g_strcmp0@plt+0x3d30>
   17420:	mov	r0, #0
   17424:	b	13554 <dcgettext@plt>
   17428:	mov	r2, #5
   1742c:	ldr	r1, [pc, #508]	; 17630 <g_strcmp0@plt+0x3d34>
   17430:	mov	r0, #0
   17434:	b	13554 <dcgettext@plt>
   17438:	mov	r2, #5
   1743c:	ldr	r1, [pc, #496]	; 17634 <g_strcmp0@plt+0x3d38>
   17440:	mov	r0, #0
   17444:	b	13554 <dcgettext@plt>
   17448:	mov	r2, #5
   1744c:	ldr	r1, [pc, #484]	; 17638 <g_strcmp0@plt+0x3d3c>
   17450:	mov	r0, #0
   17454:	b	13554 <dcgettext@plt>
   17458:	mov	r2, #5
   1745c:	ldr	r1, [pc, #472]	; 1763c <g_strcmp0@plt+0x3d40>
   17460:	mov	r0, #0
   17464:	b	13554 <dcgettext@plt>
   17468:	mov	r2, #5
   1746c:	ldr	r1, [pc, #460]	; 17640 <g_strcmp0@plt+0x3d44>
   17470:	mov	r0, #0
   17474:	b	13554 <dcgettext@plt>
   17478:	mov	r2, #5
   1747c:	ldr	r1, [pc, #448]	; 17644 <g_strcmp0@plt+0x3d48>
   17480:	mov	r0, #0
   17484:	b	13554 <dcgettext@plt>
   17488:	mov	r2, #5
   1748c:	ldr	r1, [pc, #436]	; 17648 <g_strcmp0@plt+0x3d4c>
   17490:	mov	r0, #0
   17494:	b	13554 <dcgettext@plt>
   17498:	mov	r2, #5
   1749c:	ldr	r1, [pc, #424]	; 1764c <g_strcmp0@plt+0x3d50>
   174a0:	mov	r0, #0
   174a4:	b	13554 <dcgettext@plt>
   174a8:	mov	r2, #5
   174ac:	ldr	r1, [pc, #412]	; 17650 <g_strcmp0@plt+0x3d54>
   174b0:	mov	r0, #0
   174b4:	b	13554 <dcgettext@plt>
   174b8:	mov	r2, #5
   174bc:	ldr	r1, [pc, #400]	; 17654 <g_strcmp0@plt+0x3d58>
   174c0:	mov	r0, #0
   174c4:	b	13554 <dcgettext@plt>
   174c8:	mov	r2, #5
   174cc:	ldr	r1, [pc, #388]	; 17658 <g_strcmp0@plt+0x3d5c>
   174d0:	mov	r0, #0
   174d4:	b	13554 <dcgettext@plt>
   174d8:	mov	r2, #5
   174dc:	ldr	r1, [pc, #376]	; 1765c <g_strcmp0@plt+0x3d60>
   174e0:	mov	r0, #0
   174e4:	b	13554 <dcgettext@plt>
   174e8:	mov	r2, #5
   174ec:	ldr	r1, [pc, #364]	; 17660 <g_strcmp0@plt+0x3d64>
   174f0:	mov	r0, #0
   174f4:	b	13554 <dcgettext@plt>
   174f8:	mov	r2, #5
   174fc:	ldr	r1, [pc, #352]	; 17664 <g_strcmp0@plt+0x3d68>
   17500:	mov	r0, #0
   17504:	b	13554 <dcgettext@plt>
   17508:	mov	r2, #5
   1750c:	ldr	r1, [pc, #340]	; 17668 <g_strcmp0@plt+0x3d6c>
   17510:	mov	r0, #0
   17514:	b	13554 <dcgettext@plt>
   17518:	mov	r2, #5
   1751c:	ldr	r1, [pc, #328]	; 1766c <g_strcmp0@plt+0x3d70>
   17520:	mov	r0, #0
   17524:	b	13554 <dcgettext@plt>
   17528:	mov	r2, #5
   1752c:	ldr	r1, [pc, #316]	; 17670 <g_strcmp0@plt+0x3d74>
   17530:	mov	r0, #0
   17534:	b	13554 <dcgettext@plt>
   17538:	mov	r2, #5
   1753c:	ldr	r1, [pc, #304]	; 17674 <g_strcmp0@plt+0x3d78>
   17540:	mov	r0, #0
   17544:	b	13554 <dcgettext@plt>
   17548:	mov	r2, #5
   1754c:	ldr	r1, [pc, #292]	; 17678 <g_strcmp0@plt+0x3d7c>
   17550:	mov	r0, #0
   17554:	b	13554 <dcgettext@plt>
   17558:	mov	r2, #5
   1755c:	ldr	r1, [pc, #280]	; 1767c <g_strcmp0@plt+0x3d80>
   17560:	mov	r0, #0
   17564:	b	13554 <dcgettext@plt>
   17568:	mov	r2, #5
   1756c:	ldr	r1, [pc, #268]	; 17680 <g_strcmp0@plt+0x3d84>
   17570:	mov	r0, #0
   17574:	b	13554 <dcgettext@plt>
   17578:	mov	r2, #5
   1757c:	ldr	r1, [pc, #256]	; 17684 <g_strcmp0@plt+0x3d88>
   17580:	mov	r0, #0
   17584:	b	13554 <dcgettext@plt>
   17588:	mov	r2, #5
   1758c:	ldr	r1, [pc, #244]	; 17688 <g_strcmp0@plt+0x3d8c>
   17590:	mov	r0, #0
   17594:	b	13554 <dcgettext@plt>
   17598:	mov	r2, #5
   1759c:	ldr	r1, [pc, #232]	; 1768c <g_strcmp0@plt+0x3d90>
   175a0:	mov	r0, #0
   175a4:	b	13554 <dcgettext@plt>
   175a8:	mov	r2, #5
   175ac:	ldr	r1, [pc, #220]	; 17690 <g_strcmp0@plt+0x3d94>
   175b0:	mov	r0, #0
   175b4:	b	13554 <dcgettext@plt>
   175b8:	mov	r2, #5
   175bc:	ldr	r1, [pc, #208]	; 17694 <g_strcmp0@plt+0x3d98>
   175c0:	mov	r0, #0
   175c4:	b	13554 <dcgettext@plt>
   175c8:	mov	r2, #5
   175cc:	ldr	r1, [pc, #196]	; 17698 <g_strcmp0@plt+0x3d9c>
   175d0:	mov	r0, #0
   175d4:	b	13554 <dcgettext@plt>
   175d8:	mov	r2, #5
   175dc:	ldr	r1, [pc, #184]	; 1769c <g_strcmp0@plt+0x3da0>
   175e0:	mov	r0, #0
   175e4:	b	13554 <dcgettext@plt>
   175e8:	mov	r2, #5
   175ec:	ldr	r1, [pc, #172]	; 176a0 <g_strcmp0@plt+0x3da4>
   175f0:	mov	r0, #0
   175f4:	b	13554 <dcgettext@plt>
   175f8:	mov	r3, r0
   175fc:	push	{r4, lr}
   17600:	mov	r1, #16
   17604:	ldr	r2, [pc, #152]	; 176a4 <g_strcmp0@plt+0x3da8>
   17608:	ldr	r0, [pc, #152]	; 176a8 <g_strcmp0@plt+0x3dac>
   1760c:	bl	131d0 <g_log@plt>
   17610:	mov	r0, #0
   17614:	pop	{r4, pc}
   17618:	andeq	sp, r1, r4, ror #2
   1761c:	andeq	sp, r1, ip, asr r1
   17620:	andeq	sp, r1, r8, asr #2
   17624:	andeq	sp, r1, ip, lsr r1
   17628:	andeq	sp, r1, ip, lsr #2
   1762c:	andeq	sp, r1, r4, lsr #2
   17630:	andeq	sp, r1, r4, asr #1
   17634:	andeq	sp, r1, r0, asr #32
   17638:	muleq	r1, r0, r0
   1763c:	ldrdeq	sp, [r1], -r4
   17640:	andeq	sp, r1, r4, lsl r1
   17644:	andeq	sp, r1, r4, lsl #1
   17648:	andeq	sp, r1, r8, lsr #32
   1764c:	andeq	sp, r1, r0, ror #1
   17650:	andeq	sp, r1, r0, lsr #32
   17654:	andeq	sp, r1, r8, lsl r0
   17658:	andeq	sp, r1, r4, lsl #2
   1765c:	andeq	sp, r1, r4, lsr r0
   17660:	andeq	sp, r1, ip, lsl #2
   17664:	strheq	sp, [r1], -r4
   17668:	andeq	sp, r1, ip, lsr #1
   1766c:	andeq	sp, r1, ip
   17670:	andeq	sp, r1, r0
   17674:	strdeq	ip, [r1], -r8
   17678:	muleq	r1, r8, r0
   1767c:	andeq	ip, r1, ip, ror #31
   17680:	andeq	sp, r1, r4, rrx
   17684:	andeq	sp, r1, r4, ror r0
   17688:	andeq	sp, r1, r8, asr r0
   1768c:	andeq	sp, r1, r8, asr #32
   17690:	strdeq	sp, [r1], -r4
   17694:	andeq	sp, r1, r0, lsr #1
   17698:	andeq	ip, r1, r0, ror #31
   1769c:	ldrdeq	ip, [r1], -r0
   176a0:	andeq	sp, r1, r4, ror r1
   176a4:	andeq	sp, r1, r4, lsl #3
   176a8:	muleq	r1, r4, r7
   176ac:	mov	r1, r0
   176b0:	ldr	r0, [pc]	; 176b8 <g_strcmp0@plt+0x3dbc>
   176b4:	b	13860 <pk_enum_find_string@plt>
   176b8:			; <UNDEFINED> instruction: 0x00019cbc
   176bc:	mov	r1, r0
   176c0:	ldr	r0, [pc]	; 176c8 <g_strcmp0@plt+0x3dcc>
   176c4:	b	13860 <pk_enum_find_string@plt>
   176c8:	andeq	r9, r1, ip, lsl #27
   176cc:	mov	r1, r0
   176d0:	ldr	r0, [pc]	; 176d8 <g_strcmp0@plt+0x3ddc>
   176d4:	b	13860 <pk_enum_find_string@plt>
   176d8:			; <UNDEFINED> instruction: 0x00019eb4
   176dc:	mov	r1, r0
   176e0:	ldr	r0, [pc]	; 176e8 <g_strcmp0@plt+0x3dec>
   176e4:	b	13860 <pk_enum_find_string@plt>
   176e8:	ldrdeq	r9, [r1], -ip
   176ec:	mov	r1, r0
   176f0:	ldr	r0, [pc]	; 176f8 <g_strcmp0@plt+0x3dfc>
   176f4:	b	13860 <pk_enum_find_string@plt>
   176f8:	andeq	sl, r1, ip, ror #1
   176fc:	mov	r1, r0
   17700:	push	{r4, lr}
   17704:	ldr	r0, [pc, #16]	; 1771c <g_strcmp0@plt+0x3e20>
   17708:	bl	13860 <pk_enum_find_string@plt>
   1770c:	ldrb	r3, [r0]
   17710:	cmp	r3, #0
   17714:	moveq	r0, #0
   17718:	pop	{r4, pc}
   1771c:	andeq	sl, r1, ip, lsl #4
   17720:	mov	r1, r0
   17724:	ldr	r0, [pc]	; 1772c <g_strcmp0@plt+0x3e30>
   17728:	b	13860 <pk_enum_find_string@plt>
   1772c:	andeq	sl, r1, ip, asr #4
   17730:	cmp	r0, #25
   17734:	bhi	1773c <g_strcmp0@plt+0x3e40>
   17738:	b	16a98 <g_strcmp0@plt+0x319c>
   1773c:	sub	r0, r0, #26
   17740:	b	16bbc <g_strcmp0@plt+0x32c0>
   17744:	cmp	r0, #10
   17748:	beq	1776c <g_strcmp0@plt+0x3e70>
   1774c:	sub	r3, r0, #11
   17750:	cmp	r3, #1
   17754:	bls	17774 <g_strcmp0@plt+0x3e78>
   17758:	cmp	r0, #25
   1775c:	bhi	1777c <g_strcmp0@plt+0x3e80>
   17760:	mov	r1, r0
   17764:	ldr	r0, [pc, #28]	; 17788 <g_strcmp0@plt+0x3e8c>
   17768:	b	13860 <pk_enum_find_string@plt>
   1776c:	ldr	r0, [pc, #24]	; 1778c <g_strcmp0@plt+0x3e90>
   17770:	bx	lr
   17774:	ldr	r0, [pc, #20]	; 17790 <g_strcmp0@plt+0x3e94>
   17778:	bx	lr
   1777c:	sub	r1, r0, #26
   17780:	ldr	r0, [pc]	; 17788 <g_strcmp0@plt+0x3e8c>
   17784:	b	13860 <pk_enum_find_string@plt>
   17788:			; <UNDEFINED> instruction: 0x00019cbc
   1778c:	muleq	r1, ip, r1
   17790:			; <UNDEFINED> instruction: 0x0001d1b4
   17794:	andeq	r0, r0, r0
   17798:	ldrb	r2, [r0]
   1779c:	cmp	r2, #0
   177a0:	beq	17800 <g_strcmp0@plt+0x3f04>
   177a4:	push	{r4, r5, r6, lr}
   177a8:	mov	r4, r0
   177ac:	ldr	r1, [pc, #84]	; 17808 <g_strcmp0@plt+0x3f0c>
   177b0:	bl	13428 <g_str_has_prefix@plt>
   177b4:	subs	r5, r0, #0
   177b8:	bne	177d8 <g_strcmp0@plt+0x3edc>
   177bc:	mov	r0, r4
   177c0:	ldr	r1, [pc, #68]	; 1780c <g_strcmp0@plt+0x3f10>
   177c4:	bl	137f4 <g_str_has_suffix@plt>
   177c8:	cmp	r0, #0
   177cc:	bne	177ec <g_strcmp0@plt+0x3ef0>
   177d0:	mov	r0, #0
   177d4:	pop	{r4, r5, r6, pc}
   177d8:	mov	r2, #5
   177dc:	ldr	r1, [pc, #44]	; 17810 <g_strcmp0@plt+0x3f14>
   177e0:	mov	r0, #0
   177e4:	pop	{r4, r5, r6, lr}
   177e8:	b	13554 <dcgettext@plt>
   177ec:	mov	r0, r5
   177f0:	mov	r2, #5
   177f4:	ldr	r1, [pc, #24]	; 17814 <g_strcmp0@plt+0x3f18>
   177f8:	pop	{r4, r5, r6, lr}
   177fc:	b	13554 <dcgettext@plt>
   17800:	mov	r0, #0
   17804:	bx	lr
   17808:	strdeq	sp, [r1], -r4
   1780c:	andeq	sp, r1, r0, lsl #16
   17810:	strdeq	sp, [r1], -r8
   17814:	andeq	sp, r1, r4, lsl #16
   17818:	push	{r4, r5, r6, r7, r8, lr}
   1781c:	mov	r5, r0
   17820:	ldr	r0, [r0, #4]
   17824:	mov	r1, #4
   17828:	add	r0, r0, #1
   1782c:	bl	1377c <g_malloc0_n@plt>
   17830:	ldr	r3, [r5, #4]
   17834:	cmp	r3, #0
   17838:	mov	r7, r0
   1783c:	beq	1786c <g_strcmp0@plt+0x3f70>
   17840:	sub	r6, r0, #4
   17844:	mov	r4, #0
   17848:	ldr	r3, [r5]
   1784c:	ldr	r0, [r3, r4, lsl #2]
   17850:	bl	130b0 <pk_package_get_id@plt>
   17854:	bl	132c0 <g_strdup@plt>
   17858:	ldr	r3, [r5, #4]
   1785c:	add	r4, r4, #1
   17860:	cmp	r3, r4
   17864:	str	r0, [r6, #4]!
   17868:	bhi	17848 <g_strcmp0@plt+0x3f4c>
   1786c:	mov	r0, r7
   17870:	pop	{r4, r5, r6, r7, r8, pc}
   17874:	push	{r4, r5, r6, lr}
   17878:	subs	r4, r0, #0
   1787c:	beq	178c4 <g_strcmp0@plt+0x3fc8>
   17880:	bl	13590 <g_ptr_array_new@plt>
   17884:	mov	r6, r0
   17888:	mov	r0, r4
   1788c:	bl	134dc <g_strv_length@plt>
   17890:	cmp	r0, #0
   17894:	subne	r4, r4, #4
   17898:	addne	r5, r4, r0, lsl #2
   1789c:	beq	178bc <g_strcmp0@plt+0x3fc0>
   178a0:	ldr	r0, [r4, #4]!
   178a4:	bl	132c0 <g_strdup@plt>
   178a8:	mov	r1, r0
   178ac:	mov	r0, r6
   178b0:	bl	137dc <g_ptr_array_add@plt>
   178b4:	cmp	r4, r5
   178b8:	bne	178a0 <g_strcmp0@plt+0x3fa4>
   178bc:	mov	r0, r6
   178c0:	pop	{r4, r5, r6, pc}
   178c4:	ldr	r2, [pc, #20]	; 178e0 <g_strcmp0@plt+0x3fe4>
   178c8:	ldr	r1, [pc, #20]	; 178e4 <g_strcmp0@plt+0x3fe8>
   178cc:	ldr	r0, [pc, #20]	; 178e8 <g_strcmp0@plt+0x3fec>
   178d0:	mov	r6, r4
   178d4:	bl	1308c <g_return_if_fail_warning@plt>
   178d8:	mov	r0, r6
   178dc:	pop	{r4, r5, r6, pc}
   178e0:	andeq	sp, r1, ip, lsl #16
   178e4:	andeq	sp, r1, r0, ror #14
   178e8:	muleq	r1, r4, r7
   178ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178f0:	mov	r7, r1
   178f4:	ldr	r8, [pc, #1156]	; 17d80 <g_strcmp0@plt+0x4484>
   178f8:	sub	sp, sp, #60	; 0x3c
   178fc:	mov	r3, #0
   17900:	ldr	r1, [r8]
   17904:	subs	r6, r0, #0
   17908:	str	r1, [sp, #52]	; 0x34
   1790c:	str	r3, [sp, #24]
   17910:	beq	17974 <g_strcmp0@plt+0x4078>
   17914:	mov	r4, r2
   17918:	bl	13284 <gtk_text_buffer_get_type@plt>
   1791c:	ldr	r3, [r6]
   17920:	cmp	r3, #0
   17924:	beq	17934 <g_strcmp0@plt+0x4038>
   17928:	ldr	r3, [r3]
   1792c:	cmp	r3, r0
   17930:	beq	17948 <g_strcmp0@plt+0x404c>
   17934:	mov	r1, r0
   17938:	mov	r0, r6
   1793c:	bl	13620 <g_type_check_instance_is_a@plt>
   17940:	cmp	r0, #0
   17944:	beq	17974 <g_strcmp0@plt+0x4078>
   17948:	cmp	r4, #0
   1794c:	beq	17d24 <g_strcmp0@plt+0x4428>
   17950:	ldrb	r3, [r4]
   17954:	cmp	r3, #0
   17958:	bne	17988 <g_strcmp0@plt+0x408c>
   1795c:	ldr	r2, [sp, #52]	; 0x34
   17960:	ldr	r3, [r8]
   17964:	cmp	r2, r3
   17968:	bne	17d7c <g_strcmp0@plt+0x4480>
   1796c:	add	sp, sp, #60	; 0x3c
   17970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17974:	ldr	r2, [pc, #1032]	; 17d84 <g_strcmp0@plt+0x4488>
   17978:	ldr	r1, [pc, #1032]	; 17d88 <g_strcmp0@plt+0x448c>
   1797c:	ldr	r0, [pc, #1032]	; 17d8c <g_strcmp0@plt+0x4490>
   17980:	bl	1308c <g_return_if_fail_warning@plt>
   17984:	b	1795c <g_strcmp0@plt+0x4060>
   17988:	mov	r5, #0
   1798c:	add	r2, sp, #24
   17990:	add	r3, sp, #28
   17994:	str	r2, [sp, #8]
   17998:	str	r3, [sp]
   1799c:	mov	r0, r4
   179a0:	str	r5, [sp, #4]
   179a4:	mov	r2, r5
   179a8:	add	r3, sp, #20
   179ac:	mvn	r1, #0
   179b0:	bl	13824 <pango_parse_markup@plt>
   179b4:	cmp	r0, r5
   179b8:	beq	17d38 <g_strcmp0@plt+0x443c>
   179bc:	ldr	r3, [sp, #20]
   179c0:	cmp	r3, #0
   179c4:	beq	17d5c <g_strcmp0@plt+0x4460>
   179c8:	mov	r3, r5
   179cc:	mov	r1, r5
   179d0:	mov	r2, r7
   179d4:	mov	r0, r6
   179d8:	bl	135fc <gtk_text_buffer_create_mark@plt>
   179dc:	ldr	fp, [pc, #940]	; 17d90 <g_strcmp0@plt+0x4494>
   179e0:	ldr	sl, [pc, #940]	; 17d94 <g_strcmp0@plt+0x4498>
   179e4:	mov	r9, r0
   179e8:	ldr	r0, [sp, #20]
   179ec:	bl	138cc <pango_attr_list_get_iterator@plt>
   179f0:	mov	r4, r0
   179f4:	add	r2, sp, #36	; 0x24
   179f8:	add	r1, sp, #32
   179fc:	mov	r0, r4
   17a00:	bl	134e8 <pango_attr_iterator_range@plt>
   17a04:	ldr	r3, [sp, #36]	; 0x24
   17a08:	mov	r0, #0
   17a0c:	cmn	r3, #-2147483647	; 0x80000001
   17a10:	ldreq	r3, [sp, #32]
   17a14:	subeq	r3, r3, #1
   17a18:	streq	r3, [sp, #36]	; 0x24
   17a1c:	bl	13494 <gtk_text_tag_new@plt>
   17a20:	mov	r1, #1
   17a24:	mov	r5, r0
   17a28:	mov	r0, r4
   17a2c:	bl	136d4 <pango_attr_iterator_get@plt>
   17a30:	cmp	r0, #0
   17a34:	beq	17a4c <g_strcmp0@plt+0x4150>
   17a38:	ldr	r2, [r0, #12]
   17a3c:	mov	r3, #0
   17a40:	mov	r1, fp
   17a44:	mov	r0, r5
   17a48:	bl	13578 <g_object_set@plt>
   17a4c:	mov	r1, #2
   17a50:	mov	r0, r4
   17a54:	bl	136d4 <pango_attr_iterator_get@plt>
   17a58:	cmp	r0, #0
   17a5c:	beq	17a74 <g_strcmp0@plt+0x4178>
   17a60:	ldr	r2, [r0, #12]
   17a64:	mov	r3, #0
   17a68:	mov	r1, sl
   17a6c:	mov	r0, r5
   17a70:	bl	13578 <g_object_set@plt>
   17a74:	mov	r1, #3
   17a78:	mov	r0, r4
   17a7c:	bl	136d4 <pango_attr_iterator_get@plt>
   17a80:	cmp	r0, #0
   17a84:	beq	17a9c <g_strcmp0@plt+0x41a0>
   17a88:	ldr	r2, [r0, #12]
   17a8c:	mov	r3, #0
   17a90:	ldr	r1, [pc, #768]	; 17d98 <g_strcmp0@plt+0x449c>
   17a94:	mov	r0, r5
   17a98:	bl	13578 <g_object_set@plt>
   17a9c:	mov	r1, #4
   17aa0:	mov	r0, r4
   17aa4:	bl	136d4 <pango_attr_iterator_get@plt>
   17aa8:	cmp	r0, #0
   17aac:	beq	17ac4 <g_strcmp0@plt+0x41c8>
   17ab0:	ldr	r2, [r0, #12]
   17ab4:	mov	r3, #0
   17ab8:	ldr	r1, [pc, #732]	; 17d9c <g_strcmp0@plt+0x44a0>
   17abc:	mov	r0, r5
   17ac0:	bl	13578 <g_object_set@plt>
   17ac4:	mov	r1, #5
   17ac8:	mov	r0, r4
   17acc:	bl	136d4 <pango_attr_iterator_get@plt>
   17ad0:	cmp	r0, #0
   17ad4:	beq	17aec <g_strcmp0@plt+0x41f0>
   17ad8:	ldr	r2, [r0, #12]
   17adc:	mov	r3, #0
   17ae0:	ldr	r1, [pc, #696]	; 17da0 <g_strcmp0@plt+0x44a4>
   17ae4:	mov	r0, r5
   17ae8:	bl	13578 <g_object_set@plt>
   17aec:	mov	r1, #6
   17af0:	mov	r0, r4
   17af4:	bl	136d4 <pango_attr_iterator_get@plt>
   17af8:	cmp	r0, #0
   17afc:	beq	17b14 <g_strcmp0@plt+0x4218>
   17b00:	ldr	r2, [r0, #12]
   17b04:	mov	r3, #0
   17b08:	ldr	r1, [pc, #660]	; 17da4 <g_strcmp0@plt+0x44a8>
   17b0c:	mov	r0, r5
   17b10:	bl	13578 <g_object_set@plt>
   17b14:	mov	r1, #7
   17b18:	mov	r0, r4
   17b1c:	bl	136d4 <pango_attr_iterator_get@plt>
   17b20:	cmp	r0, #0
   17b24:	beq	17b3c <g_strcmp0@plt+0x4240>
   17b28:	ldr	r2, [r0, #12]
   17b2c:	mov	r3, #0
   17b30:	ldr	r1, [pc, #624]	; 17da8 <g_strcmp0@plt+0x44ac>
   17b34:	mov	r0, r5
   17b38:	bl	13578 <g_object_set@plt>
   17b3c:	mov	r1, #8
   17b40:	mov	r0, r4
   17b44:	bl	136d4 <pango_attr_iterator_get@plt>
   17b48:	cmp	r0, #0
   17b4c:	beq	17b64 <g_strcmp0@plt+0x4268>
   17b50:	ldr	r2, [r0, #12]
   17b54:	mov	r3, #0
   17b58:	ldr	r1, [pc, #588]	; 17dac <g_strcmp0@plt+0x44b0>
   17b5c:	mov	r0, r5
   17b60:	bl	13578 <g_object_set@plt>
   17b64:	mov	r1, #9
   17b68:	mov	r0, r4
   17b6c:	bl	136d4 <pango_attr_iterator_get@plt>
   17b70:	cmp	r0, #0
   17b74:	beq	17ba4 <g_strcmp0@plt+0x42a8>
   17b78:	ldr	r1, [r0, #12]
   17b7c:	ldrh	lr, [r0, #16]
   17b80:	mov	ip, #0
   17b84:	str	r1, [sp, #44]	; 0x2c
   17b88:	mov	r3, ip
   17b8c:	add	r2, sp, #40	; 0x28
   17b90:	ldr	r1, [pc, #536]	; 17db0 <g_strcmp0@plt+0x44b4>
   17b94:	mov	r0, r5
   17b98:	strh	lr, [sp, #48]	; 0x30
   17b9c:	str	ip, [sp, #40]	; 0x28
   17ba0:	bl	13578 <g_object_set@plt>
   17ba4:	mov	r1, #10
   17ba8:	mov	r0, r4
   17bac:	bl	136d4 <pango_attr_iterator_get@plt>
   17bb0:	cmp	r0, #0
   17bb4:	beq	17be4 <g_strcmp0@plt+0x42e8>
   17bb8:	ldr	r1, [r0, #12]
   17bbc:	ldrh	lr, [r0, #16]
   17bc0:	mov	ip, #0
   17bc4:	str	r1, [sp, #44]	; 0x2c
   17bc8:	mov	r3, ip
   17bcc:	add	r2, sp, #40	; 0x28
   17bd0:	ldr	r1, [pc, #476]	; 17db4 <g_strcmp0@plt+0x44b8>
   17bd4:	mov	r0, r5
   17bd8:	strh	lr, [sp, #48]	; 0x30
   17bdc:	str	ip, [sp, #40]	; 0x28
   17be0:	bl	13578 <g_object_set@plt>
   17be4:	mov	r1, #11
   17be8:	mov	r0, r4
   17bec:	bl	136d4 <pango_attr_iterator_get@plt>
   17bf0:	cmp	r0, #0
   17bf4:	beq	17c0c <g_strcmp0@plt+0x4310>
   17bf8:	ldr	r2, [r0, #12]
   17bfc:	mov	r3, #0
   17c00:	ldr	r1, [pc, #432]	; 17db8 <g_strcmp0@plt+0x44bc>
   17c04:	mov	r0, r5
   17c08:	bl	13578 <g_object_set@plt>
   17c0c:	mov	r1, #12
   17c10:	mov	r0, r4
   17c14:	bl	136d4 <pango_attr_iterator_get@plt>
   17c18:	cmp	r0, #0
   17c1c:	beq	17c3c <g_strcmp0@plt+0x4340>
   17c20:	ldr	r2, [r0, #12]
   17c24:	mov	r3, #0
   17c28:	subs	r2, r2, r3
   17c2c:	movne	r2, #1
   17c30:	ldr	r1, [pc, #388]	; 17dbc <g_strcmp0@plt+0x44c0>
   17c34:	mov	r0, r5
   17c38:	bl	13578 <g_object_set@plt>
   17c3c:	mov	r1, #13
   17c40:	mov	r0, r4
   17c44:	bl	136d4 <pango_attr_iterator_get@plt>
   17c48:	cmp	r0, #0
   17c4c:	beq	17c64 <g_strcmp0@plt+0x4368>
   17c50:	ldr	r2, [r0, #12]
   17c54:	mov	r3, #0
   17c58:	ldr	r1, [pc, #352]	; 17dc0 <g_strcmp0@plt+0x44c4>
   17c5c:	mov	r0, r5
   17c60:	bl	13578 <g_object_set@plt>
   17c64:	mov	r1, #15
   17c68:	mov	r0, r4
   17c6c:	bl	136d4 <pango_attr_iterator_get@plt>
   17c70:	cmp	r0, #0
   17c74:	beq	17c90 <g_strcmp0@plt+0x4394>
   17c78:	mov	r1, #0
   17c7c:	ldrd	r2, [r0, #16]
   17c80:	str	r1, [sp]
   17c84:	mov	r0, r5
   17c88:	ldr	r1, [pc, #308]	; 17dc4 <g_strcmp0@plt+0x44c8>
   17c8c:	bl	13578 <g_object_set@plt>
   17c90:	mov	r0, r6
   17c94:	bl	13728 <gtk_text_buffer_get_tag_table@plt>
   17c98:	mov	r1, r5
   17c9c:	bl	13488 <gtk_text_tag_table_add@plt>
   17ca0:	mov	r0, r6
   17ca4:	bl	13728 <gtk_text_buffer_get_tag_table@plt>
   17ca8:	ldr	r1, [pc, #280]	; 17dc8 <g_strcmp0@plt+0x44cc>
   17cac:	bl	13464 <gtk_text_tag_table_lookup@plt>
   17cb0:	ldrd	r2, [sp, #32]
   17cb4:	ldr	ip, [sp, #28]
   17cb8:	mov	r1, #0
   17cbc:	sub	r3, r3, r2
   17cc0:	str	r1, [sp, #8]
   17cc4:	add	r2, ip, r2
   17cc8:	mov	r1, r7
   17ccc:	str	r5, [sp]
   17cd0:	str	r0, [sp, #4]
   17cd4:	mov	r0, r6
   17cd8:	bl	13698 <gtk_text_buffer_insert_with_tags@plt>
   17cdc:	mov	r2, r9
   17ce0:	mov	r1, r7
   17ce4:	mov	r0, r6
   17ce8:	bl	132fc <gtk_text_buffer_get_iter_at_mark@plt>
   17cec:	mov	r0, r4
   17cf0:	bl	136e0 <pango_attr_iterator_next@plt>
   17cf4:	cmp	r0, #0
   17cf8:	bne	179f4 <g_strcmp0@plt+0x40f8>
   17cfc:	mov	r1, r9
   17d00:	mov	r0, r6
   17d04:	bl	13164 <gtk_text_buffer_delete_mark@plt>
   17d08:	mov	r0, r4
   17d0c:	bl	13740 <pango_attr_iterator_destroy@plt>
   17d10:	ldr	r0, [sp, #20]
   17d14:	bl	132a8 <pango_attr_list_unref@plt>
   17d18:	ldr	r0, [sp, #28]
   17d1c:	bl	13548 <g_free@plt>
   17d20:	b	1795c <g_strcmp0@plt+0x4060>
   17d24:	ldr	r2, [pc, #160]	; 17dcc <g_strcmp0@plt+0x44d0>
   17d28:	ldr	r1, [pc, #88]	; 17d88 <g_strcmp0@plt+0x448c>
   17d2c:	ldr	r0, [pc, #88]	; 17d8c <g_strcmp0@plt+0x4490>
   17d30:	bl	1308c <g_return_if_fail_warning@plt>
   17d34:	b	1795c <g_strcmp0@plt+0x4060>
   17d38:	ldr	r3, [sp, #24]
   17d3c:	ldr	r2, [pc, #140]	; 17dd0 <g_strcmp0@plt+0x44d4>
   17d40:	mov	r1, #16
   17d44:	ldr	r3, [r3, #8]
   17d48:	ldr	r0, [pc, #60]	; 17d8c <g_strcmp0@plt+0x4490>
   17d4c:	bl	131d0 <g_log@plt>
   17d50:	ldr	r0, [sp, #24]
   17d54:	bl	13104 <g_error_free@plt>
   17d58:	b	1795c <g_strcmp0@plt+0x4060>
   17d5c:	mov	r0, r6
   17d60:	mov	r1, r7
   17d64:	mvn	r3, #0
   17d68:	ldr	r2, [sp, #28]
   17d6c:	bl	13218 <gtk_text_buffer_insert@plt>
   17d70:	ldr	r0, [sp, #28]
   17d74:	bl	13548 <g_free@plt>
   17d78:	b	1795c <g_strcmp0@plt+0x4060>
   17d7c:	bl	1350c <__stack_chk_fail@plt>
   17d80:	andeq	sp, r2, r0, asr lr
   17d84:	andeq	sp, r1, ip, lsl r8
   17d88:	andeq	sp, r1, r8, ror r7
   17d8c:	muleq	r1, r4, r7
   17d90:	andeq	sp, r1, r4, ror #16
   17d94:	andeq	sp, r1, r0, ror r8
   17d98:	andeq	sp, r1, r8, ror r8
   17d9c:	andeq	sp, r1, r0, lsl #17
   17da0:	andeq	sp, r1, r8, lsl #17
   17da4:	muleq	r1, r0, r8
   17da8:	muleq	r1, r8, r8
   17dac:	andeq	sp, r1, r0, lsr #17
   17db0:	andeq	sp, r1, ip, lsr #17
   17db4:			; <UNDEFINED> instruction: 0x0001d8bc
   17db8:	andeq	sp, r1, ip, asr #17
   17dbc:	ldrdeq	sp, [r1], -r8
   17dc0:	andeq	sp, r1, r8, ror #17
   17dc4:	strdeq	sp, [r1], -r0
   17dc8:	strdeq	sp, [r1], -r8
   17dcc:	andeq	sp, r1, r8, lsr r8
   17dd0:	andeq	sp, r1, r8, asr #16
   17dd4:	cmp	r1, #0
   17dd8:	clz	r3, r2
   17ddc:	lsr	r3, r3, #5
   17de0:	push	{r4, r5, r6, r7, lr}
   17de4:	movne	r4, r3
   17de8:	moveq	r4, #1
   17dec:	cmp	r4, #0
   17df0:	sub	sp, sp, #12
   17df4:	beq	17e10 <g_strcmp0@plt+0x4514>
   17df8:	ldr	r3, [pc, #88]	; 17e58 <g_strcmp0@plt+0x455c>
   17dfc:	ldr	r0, [r3]
   17e00:	clz	r0, r0
   17e04:	lsr	r0, r0, #5
   17e08:	add	sp, sp, #12
   17e0c:	pop	{r4, r5, r6, r7, pc}
   17e10:	mov	r3, r1
   17e14:	mov	r6, r2
   17e18:	mov	r5, r1
   17e1c:	mov	r7, r0
   17e20:	str	r2, [sp]
   17e24:	mov	r1, #128	; 0x80
   17e28:	ldr	r2, [pc, #44]	; 17e5c <g_strcmp0@plt+0x4560>
   17e2c:	ldr	r0, [pc, #44]	; 17e60 <g_strcmp0@plt+0x4564>
   17e30:	bl	131d0 <g_log@plt>
   17e34:	mov	r0, r7
   17e38:	mov	r2, r6
   17e3c:	mov	r1, r5
   17e40:	bl	13404 <gtk_window_set_default_size@plt>
   17e44:	ldr	r3, [pc, #12]	; 17e58 <g_strcmp0@plt+0x455c>
   17e48:	mov	r0, #1
   17e4c:	str	r4, [r3]
   17e50:	add	sp, sp, #12
   17e54:	pop	{r4, r5, r6, r7, pc}
   17e58:	andeq	lr, r2, ip, asr #6
   17e5c:	andeq	sp, r1, r0, lsl #18
   17e60:	muleq	r1, r4, r7
   17e64:	push	{r4, r5, r6, lr}
   17e68:	subs	r4, r1, #0
   17e6c:	bne	17e88 <g_strcmp0@plt+0x458c>
   17e70:	ldr	r2, [pc, #92]	; 17ed4 <g_strcmp0@plt+0x45d8>
   17e74:	ldr	r1, [pc, #92]	; 17ed8 <g_strcmp0@plt+0x45dc>
   17e78:	ldr	r0, [pc, #92]	; 17edc <g_strcmp0@plt+0x45e0>
   17e7c:	bl	1308c <g_return_if_fail_warning@plt>
   17e80:	mov	r0, r4
   17e84:	pop	{r4, r5, r6, pc}
   17e88:	mov	r5, r0
   17e8c:	bl	133ec <gdk_display_get_default@plt>
   17e90:	mov	r1, r4
   17e94:	bl	13518 <gdk_x11_window_foreign_new_for_display@plt>
   17e98:	mov	r6, r0
   17e9c:	bl	13134 <gtk_widget_get_type@plt>
   17ea0:	mov	r1, r0
   17ea4:	mov	r0, r5
   17ea8:	bl	13170 <g_type_check_instance_cast@plt>
   17eac:	bl	131a0 <gtk_widget_get_window@plt>
   17eb0:	mov	r1, #1
   17eb4:	mov	r4, r0
   17eb8:	mov	r0, r5
   17ebc:	bl	137c4 <gtk_window_set_modal@plt>
   17ec0:	mov	r0, r4
   17ec4:	mov	r1, r6
   17ec8:	bl	1347c <gdk_window_set_transient_for@plt>
   17ecc:	mov	r0, #1
   17ed0:	pop	{r4, r5, r6, pc}
   17ed4:	andeq	sp, r1, ip, lsl r9
   17ed8:	muleq	r1, r8, r7
   17edc:	muleq	r1, r4, r7
   17ee0:	push	{r4, r5, r6, r7, r8, lr}
   17ee4:	sub	sp, sp, #40	; 0x28
   17ee8:	ldr	r6, [pc, #520]	; 180f8 <g_strcmp0@plt+0x47fc>
   17eec:	subs	r4, r1, #0
   17ef0:	ldr	r3, [r6]
   17ef4:	str	r3, [sp, #36]	; 0x24
   17ef8:	beq	1808c <g_strcmp0@plt+0x4790>
   17efc:	cmp	r0, #0
   17f00:	mov	r7, r2
   17f04:	beq	180a0 <g_strcmp0@plt+0x47a4>
   17f08:	mov	r2, sp
   17f0c:	mov	r1, #8
   17f10:	bl	1365c <gtk_style_context_get_color@plt>
   17f14:	vldr	d4, [pc, #468]	; 180f0 <g_strcmp0@plt+0x47f4>
   17f18:	vldr	d5, [sp, #16]
   17f1c:	vldr	d6, [sp, #8]
   17f20:	vldr	d7, [sp]
   17f24:	ldr	r0, [pc, #464]	; 180fc <g_strcmp0@plt+0x4800>
   17f28:	vmul.f64	d5, d5, d4
   17f2c:	vmul.f64	d6, d6, d4
   17f30:	vmul.f64	d7, d7, d4
   17f34:	vcvt.u32.f64	s11, d5
   17f38:	vcvt.u32.f64	s13, d6
   17f3c:	vcvt.u32.f64	s15, d7
   17f40:	vmov	r3, s11
   17f44:	vmov	r2, s13
   17f48:	vmov	r1, s15
   17f4c:	bl	13320 <g_strdup_printf@plt>
   17f50:	mov	r8, r0
   17f54:	mov	r0, r4
   17f58:	bl	13158 <pk_package_id_split@plt>
   17f5c:	subs	r5, r0, #0
   17f60:	beq	180cc <g_strcmp0@plt+0x47d0>
   17f64:	cmp	r7, #0
   17f68:	beq	17f78 <g_strcmp0@plt+0x467c>
   17f6c:	ldrb	r3, [r7]
   17f70:	cmp	r3, #0
   17f74:	bne	17ff8 <g_strcmp0@plt+0x46fc>
   17f78:	ldr	r0, [r5]
   17f7c:	bl	13140 <g_string_new@plt>
   17f80:	ldr	r2, [r5, #4]
   17f84:	ldrb	r3, [r2]
   17f88:	cmp	r3, #0
   17f8c:	mov	r4, r0
   17f90:	bne	180b0 <g_strcmp0@plt+0x47b4>
   17f94:	ldr	r0, [r5, #8]
   17f98:	bl	17798 <g_strcmp0@plt+0x3e9c>
   17f9c:	subs	r2, r0, #0
   17fa0:	beq	17fb0 <g_strcmp0@plt+0x46b4>
   17fa4:	ldr	r1, [pc, #340]	; 18100 <g_strcmp0@plt+0x4804>
   17fa8:	mov	r0, r4
   17fac:	bl	13890 <g_string_append_printf@plt>
   17fb0:	mov	r0, r4
   17fb4:	mov	r1, #0
   17fb8:	bl	136b0 <g_string_free@plt>
   17fbc:	mov	r7, #0
   17fc0:	mov	r4, r0
   17fc4:	mov	r0, r7
   17fc8:	bl	13548 <g_free@plt>
   17fcc:	mov	r0, r8
   17fd0:	bl	13548 <g_free@plt>
   17fd4:	mov	r0, r5
   17fd8:	bl	134d0 <g_strfreev@plt>
   17fdc:	ldr	r2, [sp, #36]	; 0x24
   17fe0:	ldr	r3, [r6]
   17fe4:	mov	r0, r4
   17fe8:	cmp	r2, r3
   17fec:	bne	180ec <g_strcmp0@plt+0x47f0>
   17ff0:	add	sp, sp, #40	; 0x28
   17ff4:	pop	{r4, r5, r6, r7, r8, pc}
   17ff8:	ldr	r0, [pc, #260]	; 18104 <g_strcmp0@plt+0x4808>
   17ffc:	bl	13140 <g_string_new@plt>
   18000:	mvn	r1, #0
   18004:	mov	r4, r0
   18008:	mov	r0, r7
   1800c:	bl	137e8 <g_markup_escape_text@plt>
   18010:	ldr	r1, [pc, #240]	; 18108 <g_strcmp0@plt+0x480c>
   18014:	mov	r2, r0
   18018:	mov	r7, r0
   1801c:	mov	r0, r4
   18020:	bl	13890 <g_string_append_printf@plt>
   18024:	mov	r2, r8
   18028:	mov	r0, r4
   1802c:	ldr	r1, [pc, #216]	; 1810c <g_strcmp0@plt+0x4810>
   18030:	bl	13890 <g_string_append_printf@plt>
   18034:	mov	r0, r4
   18038:	ldr	r1, [r5]
   1803c:	bl	13854 <g_string_append@plt>
   18040:	ldr	r2, [r5, #4]
   18044:	ldrb	r3, [r2]
   18048:	cmp	r3, #0
   1804c:	bne	180bc <g_strcmp0@plt+0x47c0>
   18050:	ldr	r0, [r5, #8]
   18054:	bl	17798 <g_strcmp0@plt+0x3e9c>
   18058:	subs	r2, r0, #0
   1805c:	beq	1806c <g_strcmp0@plt+0x4770>
   18060:	ldr	r1, [pc, #152]	; 18100 <g_strcmp0@plt+0x4804>
   18064:	mov	r0, r4
   18068:	bl	13890 <g_string_append_printf@plt>
   1806c:	ldr	r1, [pc, #156]	; 18110 <g_strcmp0@plt+0x4814>
   18070:	mov	r0, r4
   18074:	bl	13854 <g_string_append@plt>
   18078:	mov	r0, r4
   1807c:	mov	r1, #0
   18080:	bl	136b0 <g_string_free@plt>
   18084:	mov	r4, r0
   18088:	b	17fc4 <g_strcmp0@plt+0x46c8>
   1808c:	ldr	r2, [pc, #128]	; 18114 <g_strcmp0@plt+0x4818>
   18090:	ldr	r1, [pc, #128]	; 18118 <g_strcmp0@plt+0x481c>
   18094:	ldr	r0, [pc, #128]	; 1811c <g_strcmp0@plt+0x4820>
   18098:	bl	1308c <g_return_if_fail_warning@plt>
   1809c:	b	17fdc <g_strcmp0@plt+0x46e0>
   180a0:	ldr	r0, [pc, #120]	; 18120 <g_strcmp0@plt+0x4824>
   180a4:	bl	132c0 <g_strdup@plt>
   180a8:	mov	r8, r0
   180ac:	b	17f54 <g_strcmp0@plt+0x4658>
   180b0:	ldr	r1, [pc, #108]	; 18124 <g_strcmp0@plt+0x4828>
   180b4:	bl	13890 <g_string_append_printf@plt>
   180b8:	b	17f94 <g_strcmp0@plt+0x4698>
   180bc:	ldr	r1, [pc, #96]	; 18124 <g_strcmp0@plt+0x4828>
   180c0:	mov	r0, r4
   180c4:	bl	13890 <g_string_append_printf@plt>
   180c8:	b	18050 <g_strcmp0@plt+0x4754>
   180cc:	mov	r3, r4
   180d0:	ldr	r2, [pc, #80]	; 18128 <g_strcmp0@plt+0x482c>
   180d4:	mov	r1, #16
   180d8:	ldr	r0, [pc, #60]	; 1811c <g_strcmp0@plt+0x4820>
   180dc:	bl	131d0 <g_log@plt>
   180e0:	mov	r4, r5
   180e4:	mov	r7, r5
   180e8:	b	17fc4 <g_strcmp0@plt+0x46c8>
   180ec:	bl	1350c <__stack_chk_fail@plt>
   180f0:	andeq	r0, r0, r0
   180f4:	rsbmi	lr, pc, r0
   180f8:	andeq	sp, r2, r0, asr lr
   180fc:	andeq	sp, r1, ip, lsr r9
   18100:	andeq	sp, r1, ip, ror #18
   18104:	andeq	r9, r1, ip, lsr #14
   18108:	andeq	sp, r1, r4, ror r9
   1810c:	andeq	sp, r1, r8, ror r9
   18110:	andeq	sp, r1, ip, lsl #19
   18114:	andeq	sp, r1, r8, lsr #18
   18118:			; <UNDEFINED> instruction: 0x0001d7b4
   1811c:	muleq	r1, r4, r7
   18120:	andeq	sp, r1, ip, asr #18
   18124:	andeq	sp, r1, r8, ror #18
   18128:	andeq	sp, r1, r4, asr r9
   1812c:	push	{r4, r5, r6, lr}
   18130:	subs	r4, r0, #0
   18134:	beq	181a4 <g_strcmp0@plt+0x48a8>
   18138:	mov	r5, r1
   1813c:	bl	13158 <pk_package_id_split@plt>
   18140:	cmp	r5, #0
   18144:	mov	r6, r0
   18148:	beq	18158 <g_strcmp0@plt+0x485c>
   1814c:	ldrb	r3, [r5]
   18150:	cmp	r3, #0
   18154:	bne	18174 <g_strcmp0@plt+0x4878>
   18158:	ldr	r0, [r6]
   1815c:	bl	132c0 <g_strdup@plt>
   18160:	mov	r4, r0
   18164:	mov	r0, r6
   18168:	bl	134d0 <g_strfreev@plt>
   1816c:	mov	r0, r4
   18170:	pop	{r4, r5, r6, pc}
   18174:	mov	r0, r5
   18178:	mvn	r1, #0
   1817c:	bl	137e8 <g_markup_escape_text@plt>
   18180:	ldr	r2, [r6]
   18184:	mov	r5, r0
   18188:	mov	r1, r0
   1818c:	ldr	r0, [pc, #40]	; 181bc <g_strcmp0@plt+0x48c0>
   18190:	bl	13320 <g_strdup_printf@plt>
   18194:	mov	r4, r0
   18198:	mov	r0, r5
   1819c:	bl	13548 <g_free@plt>
   181a0:	b	18164 <g_strcmp0@plt+0x4868>
   181a4:	ldr	r2, [pc, #20]	; 181c0 <g_strcmp0@plt+0x48c4>
   181a8:	ldr	r1, [pc, #20]	; 181c4 <g_strcmp0@plt+0x48c8>
   181ac:	ldr	r0, [pc, #20]	; 181c8 <g_strcmp0@plt+0x48cc>
   181b0:	bl	1308c <g_return_if_fail_warning@plt>
   181b4:	mov	r0, r4
   181b8:	pop	{r4, r5, r6, pc}
   181bc:	muleq	r1, r4, r9
   181c0:	andeq	sp, r1, r8, lsr #18
   181c4:	ldrdeq	sp, [r1], -r4
   181c8:	muleq	r1, r4, r7
   181cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   181d0:	sub	sp, sp, #12
   181d4:	mov	r4, r1
   181d8:	mov	r5, r0
   181dc:	bl	13638 <getuid@plt>
   181e0:	adds	r0, r0, #0
   181e4:	movne	r0, #1
   181e8:	cmp	r4, #0
   181ec:	moveq	r0, #1
   181f0:	cmp	r0, #0
   181f4:	movne	r4, #0
   181f8:	movne	r5, r4
   181fc:	movne	r6, #1
   18200:	beq	18220 <g_strcmp0@plt+0x4924>
   18204:	mov	r0, r4
   18208:	bl	13548 <g_free@plt>
   1820c:	mov	r0, r5
   18210:	bl	13548 <g_free@plt>
   18214:	mov	r0, r6
   18218:	add	sp, sp, #12
   1821c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18220:	cmp	r5, #0
   18224:	beq	18350 <g_strcmp0@plt+0x4a54>
   18228:	mov	r2, #5
   1822c:	ldr	r1, [pc, #312]	; 1836c <g_strcmp0@plt+0x4a70>
   18230:	bl	13554 <dcgettext@plt>
   18234:	mov	r1, r5
   18238:	bl	13320 <g_strdup_printf@plt>
   1823c:	mov	r4, r0
   18240:	mov	r2, #5
   18244:	ldr	r1, [pc, #292]	; 18370 <g_strcmp0@plt+0x4a74>
   18248:	mov	r0, #0
   1824c:	bl	13554 <dcgettext@plt>
   18250:	mov	r2, #5
   18254:	ldr	r1, [pc, #280]	; 18374 <g_strcmp0@plt+0x4a78>
   18258:	ldr	r8, [pc, #280]	; 18378 <g_strcmp0@plt+0x4a7c>
   1825c:	mov	r5, r0
   18260:	mov	r0, #0
   18264:	bl	13554 <dcgettext@plt>
   18268:	mov	r1, r5
   1826c:	mov	r3, #0
   18270:	mov	r2, r0
   18274:	ldr	r0, [pc, #256]	; 1837c <g_strcmp0@plt+0x4a80>
   18278:	bl	13410 <g_strjoin@plt>
   1827c:	mov	r2, #1
   18280:	mov	r3, #3
   18284:	mov	r1, r2
   18288:	str	r4, [sp, #4]
   1828c:	str	r8, [sp]
   18290:	mov	r5, r0
   18294:	mov	r0, #0
   18298:	bl	1383c <gtk_message_dialog_new@plt>
   1829c:	mov	r6, r0
   182a0:	bl	135cc <gtk_dialog_get_type@plt>
   182a4:	mov	r7, r0
   182a8:	mov	r1, r0
   182ac:	mov	r0, r6
   182b0:	bl	13170 <g_type_check_instance_cast@plt>
   182b4:	mov	r2, #5
   182b8:	ldr	r1, [pc, #192]	; 18380 <g_strcmp0@plt+0x4a84>
   182bc:	mov	r9, r0
   182c0:	mov	r0, #0
   182c4:	bl	13554 <dcgettext@plt>
   182c8:	mvn	r2, #4
   182cc:	mov	r1, r0
   182d0:	mov	r0, r9
   182d4:	bl	130bc <gtk_dialog_add_button@plt>
   182d8:	bl	13584 <gtk_message_dialog_get_type@plt>
   182dc:	mov	r1, r0
   182e0:	mov	r0, r6
   182e4:	bl	13170 <g_type_check_instance_cast@plt>
   182e8:	mov	r2, r5
   182ec:	mov	r1, r8
   182f0:	bl	13080 <gtk_message_dialog_format_secondary_text@plt>
   182f4:	bl	138e4 <gtk_window_get_type@plt>
   182f8:	mov	r1, r0
   182fc:	mov	r0, r6
   18300:	bl	13170 <g_type_check_instance_cast@plt>
   18304:	ldr	r1, [pc, #120]	; 18384 <g_strcmp0@plt+0x4a88>
   18308:	bl	13224 <gtk_window_set_icon_name@plt>
   1830c:	mov	r1, r7
   18310:	mov	r0, r6
   18314:	bl	13170 <g_type_check_instance_cast@plt>
   18318:	bl	136bc <gtk_dialog_run@plt>
   1831c:	mov	r7, r0
   18320:	mov	r0, r6
   18324:	bl	13470 <gtk_widget_destroy@plt>
   18328:	cmn	r7, #5
   1832c:	moveq	r6, #1
   18330:	beq	18204 <g_strcmp0@plt+0x4908>
   18334:	mov	r3, #0
   18338:	ldr	r2, [pc, #72]	; 18388 <g_strcmp0@plt+0x4a8c>
   1833c:	mov	r1, #16
   18340:	ldr	r0, [pc, #68]	; 1838c <g_strcmp0@plt+0x4a90>
   18344:	bl	131d0 <g_log@plt>
   18348:	mov	r6, #0
   1834c:	b	18204 <g_strcmp0@plt+0x4908>
   18350:	mov	r2, #5
   18354:	ldr	r1, [pc, #52]	; 18390 <g_strcmp0@plt+0x4a94>
   18358:	mov	r0, r5
   1835c:	bl	13554 <dcgettext@plt>
   18360:	bl	132c0 <g_strdup@plt>
   18364:	mov	r4, r0
   18368:	b	18240 <g_strcmp0@plt+0x4944>
   1836c:	ldrdeq	sp, [r1], -r8
   18370:	strdeq	sp, [r1], -ip
   18374:	andeq	sp, r1, r4, lsr sl
   18378:	andeq	r9, r1, r0, asr #21
   1837c:	andeq	r9, r1, r4, ror #23
   18380:	muleq	r1, r0, sl
   18384:	andeq	sp, r1, r4, lsr #21
   18388:			; <UNDEFINED> instruction: 0x0001dabc
   1838c:	muleq	r1, r4, r7
   18390:	andeq	sp, r1, r4, lsr #19
   18394:	push	{r4, r5, r6, r7, r8, lr}
   18398:	mov	r4, r0
   1839c:	mov	r0, r1
   183a0:	mov	r5, r1
   183a4:	mov	r7, r2
   183a8:	bl	176cc <g_strcmp0@plt+0x3dd0>
   183ac:	ldr	r1, [pc, #124]	; 18430 <g_strcmp0@plt+0x4b34>
   183b0:	mov	r6, r0
   183b4:	bl	13428 <g_str_has_prefix@plt>
   183b8:	cmp	r0, #0
   183bc:	bne	18400 <g_strcmp0@plt+0x4b04>
   183c0:	ldr	r1, [pc, #108]	; 18434 <g_strcmp0@plt+0x4b38>
   183c4:	mov	r0, r6
   183c8:	bl	13428 <g_str_has_prefix@plt>
   183cc:	cmp	r0, #0
   183d0:	movne	r1, #50	; 0x32
   183d4:	beq	1841c <g_strcmp0@plt+0x4b20>
   183d8:	mov	r0, r4
   183dc:	bl	18c28 <g_strcmp0@plt+0x532c>
   183e0:	mov	r2, r6
   183e4:	mov	r1, r7
   183e8:	mov	r0, r4
   183ec:	bl	18f40 <g_strcmp0@plt+0x5644>
   183f0:	cmp	r5, #18
   183f4:	beq	18408 <g_strcmp0@plt+0x4b0c>
   183f8:	mov	r0, #1
   183fc:	pop	{r4, r5, r6, r7, r8, pc}
   18400:	mov	r1, #150	; 0x96
   18404:	b	183d8 <g_strcmp0@plt+0x4adc>
   18408:	mov	r0, r4
   1840c:	mov	r1, #0
   18410:	bl	18cf0 <g_strcmp0@plt+0x53f4>
   18414:	mov	r0, #1
   18418:	pop	{r4, r5, r6, r7, r8, pc}
   1841c:	mov	r2, r6
   18420:	mov	r1, r7
   18424:	mov	r0, r4
   18428:	bl	18e80 <g_strcmp0@plt+0x5584>
   1842c:	b	183f0 <g_strcmp0@plt+0x4af4>
   18430:	ldrdeq	sp, [r1], -r0
   18434:	andeq	sp, r1, r8, asr #12
   18438:	push	{r4, lr}
   1843c:	subs	r4, r0, #0
   18440:	sub	sp, sp, #8
   18444:	beq	184c8 <g_strcmp0@plt+0x4bcc>
   18448:	cmp	r4, #59	; 0x3b
   1844c:	bls	184e0 <g_strcmp0@plt+0x4be4>
   18450:	vmov	s15, r4
   18454:	vldr	d4, [pc, #156]	; 184f8 <g_strcmp0@plt+0x4bfc>
   18458:	vldr	d5, [pc, #160]	; 18500 <g_strcmp0@plt+0x4c04>
   1845c:	vcvt.f64.u32	d6, s15
   18460:	vdiv.f64	d7, d6, d4
   18464:	vadd.f64	d7, d7, d5
   18468:	vcvt.u32.f64	s15, d7
   1846c:	vmov	r4, s15
   18470:	cmp	r4, #59	; 0x3b
   18474:	bls	184b0 <g_strcmp0@plt+0x4bb4>
   18478:	ldr	r3, [pc, #136]	; 18508 <g_strcmp0@plt+0x4c0c>
   1847c:	mov	r2, #5
   18480:	str	r2, [sp]
   18484:	umull	r3, r4, r3, r4
   18488:	ldr	r2, [pc, #124]	; 1850c <g_strcmp0@plt+0x4c10>
   1848c:	ldr	r1, [pc, #124]	; 18510 <g_strcmp0@plt+0x4c14>
   18490:	lsr	r4, r4, #5
   18494:	mov	r3, r4
   18498:	mov	r0, #0
   1849c:	bl	13338 <dcngettext@plt>
   184a0:	mov	r1, r4
   184a4:	add	sp, sp, #8
   184a8:	pop	{r4, lr}
   184ac:	b	13320 <g_strdup_printf@plt>
   184b0:	mov	r3, #5
   184b4:	str	r3, [sp]
   184b8:	ldr	r2, [pc, #84]	; 18514 <g_strcmp0@plt+0x4c18>
   184bc:	vmov	r3, s15
   184c0:	ldr	r1, [pc, #80]	; 18518 <g_strcmp0@plt+0x4c1c>
   184c4:	b	18498 <g_strcmp0@plt+0x4b9c>
   184c8:	mov	r2, #5
   184cc:	ldr	r1, [pc, #72]	; 1851c <g_strcmp0@plt+0x4c20>
   184d0:	bl	13554 <dcgettext@plt>
   184d4:	add	sp, sp, #8
   184d8:	pop	{r4, lr}
   184dc:	b	13320 <g_strdup_printf@plt>
   184e0:	mov	r3, #5
   184e4:	str	r3, [sp]
   184e8:	ldr	r2, [pc, #48]	; 18520 <g_strcmp0@plt+0x4c24>
   184ec:	mov	r3, r4
   184f0:	ldr	r1, [pc, #44]	; 18524 <g_strcmp0@plt+0x4c28>
   184f4:	b	18498 <g_strcmp0@plt+0x4b9c>
   184f8:	andeq	r0, r0, r0
   184fc:	submi	r0, lr, r0
   18500:	andeq	r0, r0, r0
   18504:	svccc	0x00e00000
   18508:	stmhi	r8, {r0, r3, r7, fp, pc}
   1850c:	andeq	sp, r1, r0, lsl fp
   18510:	andeq	sp, r1, ip, lsl fp
   18514:	strdeq	sp, [r1], -r8
   18518:	andeq	sp, r1, r4, lsl #22
   1851c:	ldrdeq	sp, [r1], -ip
   18520:	andeq	sp, r1, r0, ror #21
   18524:	andeq	sp, r1, ip, ror #21
   18528:	push	{r4, r5, r6, r7, r8, lr}
   1852c:	subs	r5, r0, #0
   18530:	sub	sp, sp, #8
   18534:	beq	1865c <g_strcmp0@plt+0x4d60>
   18538:	cmp	r5, #59	; 0x3b
   1853c:	bls	186e0 <g_strcmp0@plt+0x4de4>
   18540:	vmov	s15, r5
   18544:	vldr	d5, [pc, #436]	; 18700 <g_strcmp0@plt+0x4e04>
   18548:	vldr	d6, [pc, #440]	; 18708 <g_strcmp0@plt+0x4e0c>
   1854c:	vcvt.f64.u32	d4, s15
   18550:	vdiv.f64	d7, d4, d5
   18554:	vadd.f64	d7, d7, d6
   18558:	vcvt.u32.f64	s15, d7
   1855c:	vmov	r4, s15
   18560:	cmp	r4, #59	; 0x3b
   18564:	bls	185ac <g_strcmp0@plt+0x4cb0>
   18568:	ldr	r5, [pc, #416]	; 18710 <g_strcmp0@plt+0x4e14>
   1856c:	umull	r3, r5, r5, r4
   18570:	lsr	r5, r5, #5
   18574:	rsb	r3, r5, r5, lsl #4
   18578:	subs	r4, r4, r3, lsl #2
   1857c:	bne	185f0 <g_strcmp0@plt+0x4cf4>
   18580:	mov	r3, #5
   18584:	ldr	r2, [pc, #392]	; 18714 <g_strcmp0@plt+0x4e18>
   18588:	ldr	r1, [pc, #392]	; 18718 <g_strcmp0@plt+0x4e1c>
   1858c:	str	r3, [sp]
   18590:	mov	r0, r4
   18594:	mov	r3, r5
   18598:	bl	13338 <dcngettext@plt>
   1859c:	mov	r1, r5
   185a0:	add	sp, sp, #8
   185a4:	pop	{r4, r5, r6, r7, r8, lr}
   185a8:	b	13320 <g_strdup_printf@plt>
   185ac:	ldr	r6, [pc, #348]	; 18710 <g_strcmp0@plt+0x4e14>
   185b0:	umull	r3, r6, r6, r5
   185b4:	lsr	r6, r6, #5
   185b8:	rsb	r6, r6, r6, lsl #4
   185bc:	subs	r6, r5, r6, lsl #2
   185c0:	bne	18674 <g_strcmp0@plt+0x4d78>
   185c4:	mov	r3, #5
   185c8:	str	r3, [sp]
   185cc:	mov	r0, r6
   185d0:	vmov	r3, s15
   185d4:	ldr	r2, [pc, #320]	; 1871c <g_strcmp0@plt+0x4e20>
   185d8:	ldr	r1, [pc, #320]	; 18720 <g_strcmp0@plt+0x4e24>
   185dc:	bl	13338 <dcngettext@plt>
   185e0:	mov	r1, r4
   185e4:	add	sp, sp, #8
   185e8:	pop	{r4, r5, r6, r7, r8, lr}
   185ec:	b	13320 <g_strdup_printf@plt>
   185f0:	mov	r2, #5
   185f4:	ldr	r1, [pc, #296]	; 18724 <g_strcmp0@plt+0x4e28>
   185f8:	mov	r0, #0
   185fc:	mov	r6, r2
   18600:	bl	13554 <dcgettext@plt>
   18604:	mov	r3, r5
   18608:	str	r6, [sp]
   1860c:	ldr	r2, [pc, #276]	; 18728 <g_strcmp0@plt+0x4e2c>
   18610:	ldr	r1, [pc, #276]	; 1872c <g_strcmp0@plt+0x4e30>
   18614:	mov	r7, r0
   18618:	mov	r0, #0
   1861c:	bl	13338 <dcngettext@plt>
   18620:	mov	r3, r4
   18624:	str	r6, [sp]
   18628:	ldr	r2, [pc, #256]	; 18730 <g_strcmp0@plt+0x4e34>
   1862c:	ldr	r1, [pc, #256]	; 18734 <g_strcmp0@plt+0x4e38>
   18630:	mov	r8, r0
   18634:	mov	r0, #0
   18638:	bl	13338 <dcngettext@plt>
   1863c:	mov	r2, r8
   18640:	mov	r3, r4
   18644:	mov	r1, r5
   18648:	str	r0, [sp]
   1864c:	mov	r0, r7
   18650:	bl	13320 <g_strdup_printf@plt>
   18654:	add	sp, sp, #8
   18658:	pop	{r4, r5, r6, r7, r8, pc}
   1865c:	mov	r2, #5
   18660:	ldr	r1, [pc, #208]	; 18738 <g_strcmp0@plt+0x4e3c>
   18664:	bl	13554 <dcgettext@plt>
   18668:	add	sp, sp, #8
   1866c:	pop	{r4, r5, r6, r7, r8, lr}
   18670:	b	13320 <g_strdup_printf@plt>
   18674:	mov	r2, #5
   18678:	ldr	r1, [pc, #164]	; 18724 <g_strcmp0@plt+0x4e28>
   1867c:	mov	r0, #0
   18680:	mov	r5, r2
   18684:	bl	13554 <dcgettext@plt>
   18688:	mov	r3, r4
   1868c:	str	r5, [sp]
   18690:	ldr	r2, [pc, #152]	; 18730 <g_strcmp0@plt+0x4e34>
   18694:	ldr	r1, [pc, #152]	; 18734 <g_strcmp0@plt+0x4e38>
   18698:	mov	r7, r0
   1869c:	mov	r0, #0
   186a0:	bl	13338 <dcngettext@plt>
   186a4:	mov	r3, r6
   186a8:	str	r5, [sp]
   186ac:	ldr	r2, [pc, #136]	; 1873c <g_strcmp0@plt+0x4e40>
   186b0:	ldr	r1, [pc, #136]	; 18740 <g_strcmp0@plt+0x4e44>
   186b4:	mov	r8, r0
   186b8:	mov	r0, #0
   186bc:	bl	13338 <dcngettext@plt>
   186c0:	mov	r2, r8
   186c4:	mov	r3, r6
   186c8:	mov	r1, r4
   186cc:	str	r0, [sp]
   186d0:	mov	r0, r7
   186d4:	bl	13320 <g_strdup_printf@plt>
   186d8:	add	sp, sp, #8
   186dc:	pop	{r4, r5, r6, r7, r8, pc}
   186e0:	mov	r3, #5
   186e4:	str	r3, [sp]
   186e8:	ldr	r2, [pc, #84]	; 18744 <g_strcmp0@plt+0x4e48>
   186ec:	mov	r3, r5
   186f0:	ldr	r1, [pc, #80]	; 18748 <g_strcmp0@plt+0x4e4c>
   186f4:	mov	r0, #0
   186f8:	b	18598 <g_strcmp0@plt+0x4c9c>
   186fc:	nop			; (mov r0, r0)
   18700:	andeq	r0, r0, r0
   18704:	submi	r0, lr, r0
   18708:	andeq	r0, r0, r0
   1870c:	svccc	0x00e00000
   18710:	stmhi	r8, {r0, r3, r7, fp, pc}
   18714:	andeq	sp, r1, r0, lsl fp
   18718:	andeq	sp, r1, ip, lsl fp
   1871c:	strdeq	sp, [r1], -r8
   18720:	andeq	sp, r1, r4, lsl #22
   18724:	andeq	sp, r1, r4, lsr #22
   18728:	andeq	sp, r1, r0, asr fp
   1872c:	andeq	sp, r1, r8, asr fp
   18730:	andeq	sp, r1, r0, lsr fp
   18734:	andeq	sp, r1, r8, lsr fp
   18738:	ldrdeq	sp, [r1], -ip
   1873c:	andeq	sp, r1, r0, asr #22
   18740:	andeq	sp, r1, r8, asr #22
   18744:	andeq	sp, r1, r0, ror #21
   18748:	andeq	sp, r1, ip, ror #21
   1874c:	push	{r4, lr}
   18750:	sub	sp, sp, #8
   18754:	mov	r4, r0
   18758:	bl	134dc <g_strv_length@plt>
   1875c:	subs	r2, r0, #0
   18760:	ldreq	r0, [pc, #224]	; 18848 <g_strcmp0@plt+0x4f4c>
   18764:	beq	187a0 <g_strcmp0@plt+0x4ea4>
   18768:	cmp	r2, #1
   1876c:	beq	1879c <g_strcmp0@plt+0x4ea0>
   18770:	cmp	r2, #2
   18774:	beq	18804 <g_strcmp0@plt+0x4f08>
   18778:	cmp	r2, #3
   1877c:	beq	18824 <g_strcmp0@plt+0x4f28>
   18780:	cmp	r2, #4
   18784:	beq	187ac <g_strcmp0@plt+0x4eb0>
   18788:	cmp	r2, #5
   1878c:	movne	r0, #0
   18790:	beq	187d4 <g_strcmp0@plt+0x4ed8>
   18794:	add	sp, sp, #8
   18798:	pop	{r4, pc}
   1879c:	ldr	r0, [r4]
   187a0:	add	sp, sp, #8
   187a4:	pop	{r4, lr}
   187a8:	b	132c0 <g_strdup@plt>
   187ac:	mov	r2, #5
   187b0:	ldr	r1, [pc, #148]	; 1884c <g_strcmp0@plt+0x4f50>
   187b4:	mov	r0, #0
   187b8:	bl	13554 <dcgettext@plt>
   187bc:	ldr	r2, [r4, #12]
   187c0:	ldr	r3, [r4, #8]
   187c4:	str	r2, [sp]
   187c8:	ldm	r4, {r1, r2}
   187cc:	bl	13320 <g_strdup_printf@plt>
   187d0:	b	18794 <g_strcmp0@plt+0x4e98>
   187d4:	ldr	r1, [pc, #116]	; 18850 <g_strcmp0@plt+0x4f54>
   187d8:	mov	r0, #0
   187dc:	bl	13554 <dcgettext@plt>
   187e0:	ldr	r2, [r4, #16]
   187e4:	ldr	r3, [r4, #12]
   187e8:	str	r2, [sp, #4]
   187ec:	str	r3, [sp]
   187f0:	ldrd	r2, [r4, #4]
   187f4:	ldr	r1, [r4]
   187f8:	bl	13320 <g_strdup_printf@plt>
   187fc:	add	sp, sp, #8
   18800:	pop	{r4, pc}
   18804:	mov	r2, #5
   18808:	ldr	r1, [pc, #68]	; 18854 <g_strcmp0@plt+0x4f58>
   1880c:	mov	r0, #0
   18810:	bl	13554 <dcgettext@plt>
   18814:	ldm	r4, {r1, r2}
   18818:	add	sp, sp, #8
   1881c:	pop	{r4, lr}
   18820:	b	13320 <g_strdup_printf@plt>
   18824:	mov	r2, #5
   18828:	ldr	r1, [pc, #40]	; 18858 <g_strcmp0@plt+0x4f5c>
   1882c:	mov	r0, #0
   18830:	bl	13554 <dcgettext@plt>
   18834:	ldrd	r2, [r4, #4]
   18838:	ldr	r1, [r4]
   1883c:	add	sp, sp, #8
   18840:	pop	{r4, lr}
   18844:	b	13320 <g_strdup_printf@plt>
   18848:	andeq	sp, r1, r0, ror #22
   1884c:	andeq	sp, r1, ip, ror #22
   18850:	andeq	sp, r1, r8, ror #22
   18854:	andeq	sp, r1, r4, ror fp
   18858:	andeq	sp, r1, r0, ror fp
   1885c:	mov	r0, #0
   18860:	bx	lr
   18864:	push	{r4, lr}
   18868:	sub	sp, sp, #16
   1886c:	bl	134c4 <gtk_image_get_type@plt>
   18870:	mov	r4, r0
   18874:	ldr	r0, [pc, #48]	; 188ac <g_strcmp0@plt+0x4fb0>
   18878:	bl	134a0 <g_intern_static_string@plt>
   1887c:	ldr	r1, [pc, #44]	; 188b0 <g_strcmp0@plt+0x4fb4>
   18880:	mov	r2, #0
   18884:	mov	r3, #48	; 0x30
   18888:	stmib	sp, {r1, r2}
   1888c:	str	r3, [sp]
   18890:	mov	r2, #444	; 0x1bc
   18894:	ldr	r3, [pc, #24]	; 188b4 <g_strcmp0@plt+0x4fb8>
   18898:	mov	r1, r0
   1889c:	mov	r0, r4
   188a0:	bl	13098 <g_type_register_static_simple@plt>
   188a4:	add	sp, sp, #16
   188a8:	pop	{r4, pc}
   188ac:	andeq	sp, r1, r4, asr #24
   188b0:	andeq	r8, r1, r4, lsr #20
   188b4:			; <UNDEFINED> instruction: 0x000188b8
   188b8:	push	{r4, r5, r6, lr}
   188bc:	mov	r5, r0
   188c0:	ldr	r4, [pc, #68]	; 1890c <g_strcmp0@plt+0x5010>
   188c4:	bl	137a0 <g_type_class_peek_parent@plt>
   188c8:	ldr	r3, [r4]
   188cc:	cmp	r3, #0
   188d0:	bne	188fc <g_strcmp0@plt+0x5000>
   188d4:	bl	13134 <gtk_widget_get_type@plt>
   188d8:	mov	r1, r0
   188dc:	mov	r0, r5
   188e0:	bl	1389c <g_type_check_class_cast@plt>
   188e4:	ldr	r3, [pc, #36]	; 18910 <g_strcmp0@plt+0x5014>
   188e8:	str	r3, [r0, #76]	; 0x4c
   188ec:	mov	r0, r5
   188f0:	bl	137a0 <g_type_class_peek_parent@plt>
   188f4:	str	r0, [r4, #4]
   188f8:	pop	{r4, r5, r6, pc}
   188fc:	mov	r1, r4
   18900:	mov	r0, r5
   18904:	bl	130c8 <g_type_class_adjust_private_offset@plt>
   18908:	b	188d4 <g_strcmp0@plt+0x4fd8>
   1890c:	andeq	lr, r2, r0, asr r3
   18910:			; <UNDEFINED> instruction: 0x00018bb4
   18914:	ldr	r1, [pc, #164]	; 189c0 <g_strcmp0@plt+0x50c4>
   18918:	ldr	r3, [pc, #164]	; 189c4 <g_strcmp0@plt+0x50c8>
   1891c:	push	{r4, r5, r6, lr}
   18920:	mov	r4, r0
   18924:	ldr	r2, [r1, #8]
   18928:	add	r0, r2, #1
   1892c:	umull	ip, r3, r3, r2
   18930:	str	r0, [r1, #8]
   18934:	lsr	r3, r3, #4
   18938:	add	r3, r3, r3, lsl #2
   1893c:	cmp	r2, r3, lsl #2
   18940:	beq	18988 <g_strcmp0@plt+0x508c>
   18944:	ldr	r5, [r4, #44]	; 0x2c
   18948:	cmp	r5, #0
   1894c:	beq	189a4 <g_strcmp0@plt+0x50a8>
   18950:	bl	134c4 <gtk_image_get_type@plt>
   18954:	mov	r1, r0
   18958:	mov	r0, r4
   1895c:	bl	13170 <g_type_check_instance_cast@plt>
   18960:	ldr	r2, [r4, #32]
   18964:	ldr	r3, [r4, #44]	; 0x2c
   18968:	ldr	r1, [r3, r2, lsl #2]
   1896c:	bl	13314 <gtk_image_set_from_pixbuf@plt>
   18970:	ldrd	r0, [r4, #32]
   18974:	add	r0, r0, #1
   18978:	bl	19438 <g_strcmp0@plt+0x5b3c>
   1897c:	mov	r0, #1
   18980:	str	r1, [r4, #32]
   18984:	pop	{r4, r5, r6, pc}
   18988:	ldr	r2, [pc, #56]	; 189c8 <g_strcmp0@plt+0x50cc>
   1898c:	mov	r1, #128	; 0x80
   18990:	ldr	r0, [pc, #52]	; 189cc <g_strcmp0@plt+0x50d0>
   18994:	bl	131d0 <g_log@plt>
   18998:	ldr	r5, [r4, #44]	; 0x2c
   1899c:	cmp	r5, #0
   189a0:	bne	18950 <g_strcmp0@plt+0x5054>
   189a4:	ldr	r2, [pc, #36]	; 189d0 <g_strcmp0@plt+0x50d4>
   189a8:	mov	r1, #16
   189ac:	ldr	r0, [pc, #24]	; 189cc <g_strcmp0@plt+0x50d0>
   189b0:	bl	131d0 <g_log@plt>
   189b4:	str	r5, [r4, #28]
   189b8:	mov	r0, r5
   189bc:	pop	{r4, r5, r6, pc}
   189c0:	andeq	lr, r2, r0, asr r3
   189c4:	stclgt	12, cr12, [ip], {205}	; 0xcd
   189c8:	andeq	sp, r1, r4, asr ip
   189cc:	muleq	r1, r4, r7
   189d0:	andeq	sp, r1, r4, ror #24
   189d4:	push	{r4, lr}
   189d8:	mcr	15, 0, r0, cr7, cr10, {5}
   189dc:	ldr	r4, [pc, #60]	; 18a20 <g_strcmp0@plt+0x5124>
   189e0:	ldr	r3, [r4, #12]
   189e4:	mcr	15, 0, r0, cr7, cr10, {5}
   189e8:	cmp	r3, #0
   189ec:	beq	189f8 <g_strcmp0@plt+0x50fc>
   189f0:	ldr	r0, [r4, #12]
   189f4:	pop	{r4, pc}
   189f8:	add	r0, r4, #12
   189fc:	bl	13458 <g_once_init_enter@plt>
   18a00:	cmp	r0, #0
   18a04:	beq	189f0 <g_strcmp0@plt+0x50f4>
   18a08:	bl	18864 <g_strcmp0@plt+0x4f68>
   18a0c:	mov	r1, r0
   18a10:	add	r0, r4, #12
   18a14:	bl	1374c <g_once_init_leave@plt>
   18a18:	ldr	r0, [r4, #12]
   18a1c:	pop	{r4, pc}
   18a20:	andeq	lr, r2, r0, asr r3
   18a24:	push	{r4, r5, lr}
   18a28:	mov	r4, r0
   18a2c:	sub	sp, sp, #12
   18a30:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18a34:	cmp	r4, #0
   18a38:	beq	18ab8 <g_strcmp0@plt+0x51bc>
   18a3c:	ldr	r3, [r4]
   18a40:	cmp	r3, #0
   18a44:	beq	18a54 <g_strcmp0@plt+0x5158>
   18a48:	ldr	r3, [r3]
   18a4c:	cmp	r3, r0
   18a50:	beq	18a68 <g_strcmp0@plt+0x516c>
   18a54:	mov	r1, r0
   18a58:	mov	r0, r4
   18a5c:	bl	13620 <g_type_check_instance_is_a@plt>
   18a60:	cmp	r0, #0
   18a64:	beq	18ab8 <g_strcmp0@plt+0x51bc>
   18a68:	mov	r5, #0
   18a6c:	mov	r3, #200	; 0xc8
   18a70:	str	r3, [r4, #40]	; 0x28
   18a74:	str	r5, [r4, #44]	; 0x2c
   18a78:	str	r5, [r4, #24]
   18a7c:	str	r5, [r4, #28]
   18a80:	str	r5, [r4, #32]
   18a84:	str	r5, [r4, #36]	; 0x24
   18a88:	bl	13134 <gtk_widget_get_type@plt>
   18a8c:	mov	r1, r0
   18a90:	mov	r0, r4
   18a94:	bl	13170 <g_type_check_instance_cast@plt>
   18a98:	str	r5, [sp, #4]
   18a9c:	str	r5, [sp]
   18aa0:	mov	r3, r4
   18aa4:	ldr	r2, [pc, #36]	; 18ad0 <g_strcmp0@plt+0x51d4>
   18aa8:	ldr	r1, [pc, #36]	; 18ad4 <g_strcmp0@plt+0x51d8>
   18aac:	bl	1344c <g_signal_connect_data@plt>
   18ab0:	add	sp, sp, #12
   18ab4:	pop	{r4, r5, pc}
   18ab8:	ldr	r2, [pc, #24]	; 18ad8 <g_strcmp0@plt+0x51dc>
   18abc:	ldr	r1, [pc, #24]	; 18adc <g_strcmp0@plt+0x51e0>
   18ac0:	ldr	r0, [pc, #24]	; 18ae0 <g_strcmp0@plt+0x51e4>
   18ac4:	add	sp, sp, #12
   18ac8:	pop	{r4, r5, lr}
   18acc:	b	1308c <g_return_if_fail_warning@plt>
   18ad0:	strdeq	r8, [r1], -r4
   18ad4:	muleq	r1, r8, ip
   18ad8:	andeq	sp, r1, ip, ror ip
   18adc:	andeq	sp, r1, r0, lsl #23
   18ae0:	muleq	r1, r4, r7
   18ae4:	push	{r4, r5, r6, lr}
   18ae8:	mov	r5, r0
   18aec:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18af0:	cmp	r5, #0
   18af4:	beq	18b74 <g_strcmp0@plt+0x5278>
   18af8:	ldr	r3, [r5]
   18afc:	cmp	r3, #0
   18b00:	beq	18b10 <g_strcmp0@plt+0x5214>
   18b04:	ldr	r3, [r3]
   18b08:	cmp	r3, r0
   18b0c:	beq	18b24 <g_strcmp0@plt+0x5228>
   18b10:	mov	r1, r0
   18b14:	mov	r0, r5
   18b18:	bl	13620 <g_type_check_instance_is_a@plt>
   18b1c:	cmp	r0, #0
   18b20:	beq	18b74 <g_strcmp0@plt+0x5278>
   18b24:	ldr	r6, [r5, #44]	; 0x2c
   18b28:	cmp	r6, #0
   18b2c:	beq	18b8c <g_strcmp0@plt+0x5290>
   18b30:	ldr	r3, [r5, #36]	; 0x24
   18b34:	cmp	r3, #0
   18b38:	movne	r4, #0
   18b3c:	beq	18b5c <g_strcmp0@plt+0x5260>
   18b40:	ldr	r0, [r6, r4, lsl #2]
   18b44:	bl	13704 <g_object_unref@plt>
   18b48:	ldr	r3, [r5, #36]	; 0x24
   18b4c:	add	r4, r4, #1
   18b50:	cmp	r4, r3
   18b54:	ldr	r6, [r5, #44]	; 0x2c
   18b58:	bcc	18b40 <g_strcmp0@plt+0x5244>
   18b5c:	mov	r0, r6
   18b60:	bl	13548 <g_free@plt>
   18b64:	mov	r3, #0
   18b68:	mov	r0, #1
   18b6c:	str	r3, [r5, #44]	; 0x2c
   18b70:	pop	{r4, r5, r6, pc}
   18b74:	ldr	r2, [pc, #40]	; 18ba4 <g_strcmp0@plt+0x52a8>
   18b78:	ldr	r1, [pc, #40]	; 18ba8 <g_strcmp0@plt+0x52ac>
   18b7c:	ldr	r0, [pc, #40]	; 18bac <g_strcmp0@plt+0x52b0>
   18b80:	bl	1308c <g_return_if_fail_warning@plt>
   18b84:	mov	r0, #0
   18b88:	pop	{r4, r5, r6, pc}
   18b8c:	ldr	r2, [pc, #28]	; 18bb0 <g_strcmp0@plt+0x52b4>
   18b90:	mov	r1, #128	; 0x80
   18b94:	ldr	r0, [pc, #16]	; 18bac <g_strcmp0@plt+0x52b0>
   18b98:	bl	131d0 <g_log@plt>
   18b9c:	mov	r0, r6
   18ba0:	pop	{r4, r5, r6, pc}
   18ba4:	andeq	sp, r1, ip, ror ip
   18ba8:	muleq	r1, r8, fp
   18bac:	muleq	r1, r4, r7
   18bb0:	andeq	sp, r1, r8, lsr #25
   18bb4:	push	{r4, r5, r6, lr}
   18bb8:	mov	r5, r0
   18bbc:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18bc0:	mov	r1, r0
   18bc4:	mov	r0, r5
   18bc8:	bl	13170 <g_type_check_instance_cast@plt>
   18bcc:	mov	r4, r0
   18bd0:	ldr	r0, [r0, #28]
   18bd4:	cmp	r0, #0
   18bd8:	bne	18c1c <g_strcmp0@plt+0x5320>
   18bdc:	ldr	r0, [r4, #24]
   18be0:	bl	13548 <g_free@plt>
   18be4:	mov	r3, #0
   18be8:	str	r3, [r4, #24]
   18bec:	mov	r0, r4
   18bf0:	bl	18ae4 <g_strcmp0@plt+0x51e8>
   18bf4:	ldr	r3, [pc, #40]	; 18c24 <g_strcmp0@plt+0x5328>
   18bf8:	ldr	r4, [r3, #4]
   18bfc:	bl	13134 <gtk_widget_get_type@plt>
   18c00:	mov	r1, r0
   18c04:	mov	r0, r4
   18c08:	bl	1389c <g_type_check_class_cast@plt>
   18c0c:	ldr	r3, [r0, #76]	; 0x4c
   18c10:	mov	r0, r5
   18c14:	pop	{r4, r5, r6, lr}
   18c18:	bx	r3
   18c1c:	bl	138f0 <g_source_remove@plt>
   18c20:	b	18bdc <g_strcmp0@plt+0x52e0>
   18c24:	andeq	lr, r2, r0, asr r3
   18c28:	push	{r4, r5, r6, lr}
   18c2c:	mov	r4, r0
   18c30:	mov	r5, r1
   18c34:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18c38:	cmp	r4, #0
   18c3c:	beq	18c98 <g_strcmp0@plt+0x539c>
   18c40:	ldr	r3, [r4]
   18c44:	cmp	r3, #0
   18c48:	beq	18c58 <g_strcmp0@plt+0x535c>
   18c4c:	ldr	r3, [r3]
   18c50:	cmp	r3, r0
   18c54:	beq	18c6c <g_strcmp0@plt+0x5370>
   18c58:	mov	r1, r0
   18c5c:	mov	r0, r4
   18c60:	bl	13620 <g_type_check_instance_is_a@plt>
   18c64:	cmp	r0, #0
   18c68:	beq	18c98 <g_strcmp0@plt+0x539c>
   18c6c:	ldr	r0, [pc, #100]	; 18cd8 <g_strcmp0@plt+0x53dc>
   18c70:	mov	r3, r5
   18c74:	ldr	r2, [pc, #96]	; 18cdc <g_strcmp0@plt+0x53e0>
   18c78:	mov	r1, #128	; 0x80
   18c7c:	bl	131d0 <g_log@plt>
   18c80:	ldr	r0, [r4, #28]
   18c84:	str	r5, [r4, #40]	; 0x28
   18c88:	cmp	r0, #0
   18c8c:	bne	18cb0 <g_strcmp0@plt+0x53b4>
   18c90:	mov	r0, #1
   18c94:	pop	{r4, r5, r6, pc}
   18c98:	ldr	r2, [pc, #64]	; 18ce0 <g_strcmp0@plt+0x53e4>
   18c9c:	ldr	r1, [pc, #64]	; 18ce4 <g_strcmp0@plt+0x53e8>
   18ca0:	ldr	r0, [pc, #48]	; 18cd8 <g_strcmp0@plt+0x53dc>
   18ca4:	bl	1308c <g_return_if_fail_warning@plt>
   18ca8:	mov	r0, #0
   18cac:	pop	{r4, r5, r6, pc}
   18cb0:	bl	138f0 <g_source_remove@plt>
   18cb4:	mov	r2, r4
   18cb8:	ldr	r1, [pc, #40]	; 18ce8 <g_strcmp0@plt+0x53ec>
   18cbc:	ldr	r0, [r4, #40]	; 0x28
   18cc0:	bl	130d4 <g_timeout_add@plt>
   18cc4:	ldr	r1, [pc, #32]	; 18cec <g_strcmp0@plt+0x53f0>
   18cc8:	str	r0, [r4, #28]
   18ccc:	bl	13770 <g_source_set_name_by_id@plt>
   18cd0:	mov	r0, #1
   18cd4:	pop	{r4, r5, r6, pc}
   18cd8:	muleq	r1, r4, r7
   18cdc:			; <UNDEFINED> instruction: 0x0001dcb8
   18ce0:	andeq	sp, r1, ip, ror ip
   18ce4:			; <UNDEFINED> instruction: 0x0001dbb8
   18ce8:	andeq	r8, r1, r4, lsl r9
   18cec:	ldrdeq	sp, [r1], -r0
   18cf0:	push	{r4, r5, r6, lr}
   18cf4:	mov	r4, r0
   18cf8:	mov	r5, r1
   18cfc:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18d00:	cmp	r4, #0
   18d04:	beq	18d60 <g_strcmp0@plt+0x5464>
   18d08:	ldr	r3, [r4]
   18d0c:	cmp	r3, #0
   18d10:	beq	18d20 <g_strcmp0@plt+0x5424>
   18d14:	ldr	r3, [r3]
   18d18:	cmp	r3, r0
   18d1c:	beq	18d34 <g_strcmp0@plt+0x5438>
   18d20:	mov	r1, r0
   18d24:	mov	r0, r4
   18d28:	bl	13620 <g_type_check_instance_is_a@plt>
   18d2c:	cmp	r0, #0
   18d30:	beq	18d60 <g_strcmp0@plt+0x5464>
   18d34:	cmp	r5, #0
   18d38:	ldr	r0, [r4, #28]
   18d3c:	bne	18d78 <g_strcmp0@plt+0x547c>
   18d40:	cmp	r0, #0
   18d44:	bne	18db0 <g_strcmp0@plt+0x54b4>
   18d48:	ldr	r2, [pc, #136]	; 18dd8 <g_strcmp0@plt+0x54dc>
   18d4c:	mov	r1, #128	; 0x80
   18d50:	ldr	r0, [pc, #132]	; 18ddc <g_strcmp0@plt+0x54e0>
   18d54:	bl	131d0 <g_log@plt>
   18d58:	mov	r0, r5
   18d5c:	pop	{r4, r5, r6, pc}
   18d60:	ldr	r2, [pc, #120]	; 18de0 <g_strcmp0@plt+0x54e4>
   18d64:	ldr	r1, [pc, #120]	; 18de4 <g_strcmp0@plt+0x54e8>
   18d68:	ldr	r0, [pc, #108]	; 18ddc <g_strcmp0@plt+0x54e0>
   18d6c:	bl	1308c <g_return_if_fail_warning@plt>
   18d70:	mov	r0, #0
   18d74:	pop	{r4, r5, r6, pc}
   18d78:	cmp	r0, #0
   18d7c:	bne	18dc0 <g_strcmp0@plt+0x54c4>
   18d80:	mov	r2, r4
   18d84:	str	r0, [r4, #32]
   18d88:	ldr	r1, [pc, #88]	; 18de8 <g_strcmp0@plt+0x54ec>
   18d8c:	ldr	r0, [r4, #40]	; 0x28
   18d90:	bl	130d4 <g_timeout_add@plt>
   18d94:	ldr	r1, [pc, #80]	; 18dec <g_strcmp0@plt+0x54f0>
   18d98:	str	r0, [r4, #28]
   18d9c:	bl	13770 <g_source_set_name_by_id@plt>
   18da0:	mov	r0, r4
   18da4:	bl	18914 <g_strcmp0@plt+0x5018>
   18da8:	mov	r0, #1
   18dac:	pop	{r4, r5, r6, pc}
   18db0:	bl	138f0 <g_source_remove@plt>
   18db4:	str	r5, [r4, #28]
   18db8:	mov	r0, #1
   18dbc:	pop	{r4, r5, r6, pc}
   18dc0:	ldr	r2, [pc, #40]	; 18df0 <g_strcmp0@plt+0x54f4>
   18dc4:	mov	r1, #128	; 0x80
   18dc8:	ldr	r0, [pc, #12]	; 18ddc <g_strcmp0@plt+0x54e0>
   18dcc:	bl	131d0 <g_log@plt>
   18dd0:	mov	r0, #0
   18dd4:	pop	{r4, r5, r6, pc}
   18dd8:	strdeq	sp, [r1], -ip
   18ddc:	muleq	r1, r4, r7
   18de0:	andeq	sp, r1, ip, ror ip
   18de4:	ldrdeq	sp, [r1], -ip
   18de8:	andeq	r8, r1, r4, lsl r9
   18dec:	andeq	sp, r1, ip, lsr sp
   18df0:	andeq	sp, r1, ip, lsl sp
   18df4:	push	{r4, r5, r6, lr}
   18df8:	sub	sp, sp, #8
   18dfc:	ldr	r4, [pc, #108]	; 18e70 <g_strcmp0@plt+0x5574>
   18e00:	mov	r6, r2
   18e04:	mov	r3, #0
   18e08:	ldr	ip, [r4]
   18e0c:	mov	r2, sp
   18e10:	ldr	r1, [pc, #92]	; 18e74 <g_strcmp0@plt+0x5578>
   18e14:	str	ip, [sp, #4]
   18e18:	bl	135b4 <g_object_get@plt>
   18e1c:	ldr	r5, [sp]
   18e20:	cmp	r5, #0
   18e24:	bne	18e34 <g_strcmp0@plt+0x5538>
   18e28:	ldr	r3, [r6, #28]
   18e2c:	cmp	r3, #0
   18e30:	bne	18e4c <g_strcmp0@plt+0x5550>
   18e34:	ldr	r2, [sp, #4]
   18e38:	ldr	r3, [r4]
   18e3c:	cmp	r2, r3
   18e40:	bne	18e6c <g_strcmp0@plt+0x5570>
   18e44:	add	sp, sp, #8
   18e48:	pop	{r4, r5, r6, pc}
   18e4c:	ldr	r2, [pc, #36]	; 18e78 <g_strcmp0@plt+0x557c>
   18e50:	mov	r1, #128	; 0x80
   18e54:	ldr	r0, [pc, #32]	; 18e7c <g_strcmp0@plt+0x5580>
   18e58:	bl	131d0 <g_log@plt>
   18e5c:	mov	r1, r5
   18e60:	mov	r0, r6
   18e64:	bl	18cf0 <g_strcmp0@plt+0x53f4>
   18e68:	b	18e34 <g_strcmp0@plt+0x5538>
   18e6c:	bl	1350c <__stack_chk_fail@plt>
   18e70:	andeq	sp, r2, r0, asr lr
   18e74:	andeq	sp, r1, r0, lsr #25
   18e78:	andeq	sp, r1, ip, asr sp
   18e7c:	muleq	r1, r4, r7
   18e80:	push	{r4, r5, r6, lr}
   18e84:	mov	r5, r0
   18e88:	mov	r6, r1
   18e8c:	mov	r4, r2
   18e90:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18e94:	cmp	r5, #0
   18e98:	beq	18f00 <g_strcmp0@plt+0x5604>
   18e9c:	ldr	r3, [r5]
   18ea0:	cmp	r3, #0
   18ea4:	beq	18eb4 <g_strcmp0@plt+0x55b8>
   18ea8:	ldr	r3, [r3]
   18eac:	cmp	r3, r0
   18eb0:	beq	18ec8 <g_strcmp0@plt+0x55cc>
   18eb4:	mov	r1, r0
   18eb8:	mov	r0, r5
   18ebc:	bl	13620 <g_type_check_instance_is_a@plt>
   18ec0:	cmp	r0, #0
   18ec4:	beq	18f00 <g_strcmp0@plt+0x5604>
   18ec8:	cmp	r4, #0
   18ecc:	beq	18f18 <g_strcmp0@plt+0x561c>
   18ed0:	mov	r1, #0
   18ed4:	mov	r0, r5
   18ed8:	bl	18cf0 <g_strcmp0@plt+0x53f4>
   18edc:	bl	134c4 <gtk_image_get_type@plt>
   18ee0:	mov	r1, r0
   18ee4:	mov	r0, r5
   18ee8:	bl	13170 <g_type_check_instance_cast@plt>
   18eec:	mov	r2, r6
   18ef0:	mov	r1, r4
   18ef4:	bl	1380c <gtk_image_set_from_icon_name@plt>
   18ef8:	mov	r0, #1
   18efc:	pop	{r4, r5, r6, pc}
   18f00:	ldr	r2, [pc, #40]	; 18f30 <g_strcmp0@plt+0x5634>
   18f04:	ldr	r1, [pc, #40]	; 18f34 <g_strcmp0@plt+0x5638>
   18f08:	ldr	r0, [pc, #40]	; 18f38 <g_strcmp0@plt+0x563c>
   18f0c:	bl	1308c <g_return_if_fail_warning@plt>
   18f10:	mov	r0, #0
   18f14:	pop	{r4, r5, r6, pc}
   18f18:	ldr	r2, [pc, #28]	; 18f3c <g_strcmp0@plt+0x5640>
   18f1c:	ldr	r1, [pc, #16]	; 18f34 <g_strcmp0@plt+0x5638>
   18f20:	ldr	r0, [pc, #16]	; 18f38 <g_strcmp0@plt+0x563c>
   18f24:	bl	1308c <g_return_if_fail_warning@plt>
   18f28:	mov	r0, r4
   18f2c:	pop	{r4, r5, r6, pc}
   18f30:	andeq	sp, r1, ip, ror ip
   18f34:	andeq	sp, r1, r0, lsl #24
   18f38:	muleq	r1, r4, r7
   18f3c:	andeq	sp, r1, ip, ror sp
   18f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f44:	sub	sp, sp, #36	; 0x24
   18f48:	ldr	fp, [pc, #704]	; 19210 <g_strcmp0@plt+0x5914>
   18f4c:	mov	r7, r0
   18f50:	mov	r5, r1
   18f54:	ldr	r3, [fp]
   18f58:	mov	r4, r2
   18f5c:	str	r3, [sp, #28]
   18f60:	bl	189d4 <g_strcmp0@plt+0x50d8>
   18f64:	cmp	r7, #0
   18f68:	beq	19070 <g_strcmp0@plt+0x5774>
   18f6c:	ldr	r3, [r7]
   18f70:	cmp	r3, #0
   18f74:	beq	18f84 <g_strcmp0@plt+0x5688>
   18f78:	ldr	r3, [r3]
   18f7c:	cmp	r3, r0
   18f80:	beq	18f98 <g_strcmp0@plt+0x569c>
   18f84:	mov	r1, r0
   18f88:	mov	r0, r7
   18f8c:	bl	13620 <g_type_check_instance_is_a@plt>
   18f90:	cmp	r0, #0
   18f94:	beq	19070 <g_strcmp0@plt+0x5774>
   18f98:	cmp	r4, #0
   18f9c:	beq	190b8 <g_strcmp0@plt+0x57bc>
   18fa0:	mov	r1, r4
   18fa4:	ldr	r0, [r7, #24]
   18fa8:	bl	138fc <g_strcmp0@plt>
   18fac:	subs	r8, r0, #0
   18fb0:	beq	190a0 <g_strcmp0@plt+0x57a4>
   18fb4:	mov	r1, #0
   18fb8:	mov	r0, r7
   18fbc:	bl	18cf0 <g_strcmp0@plt+0x53f4>
   18fc0:	ldr	r0, [r7, #24]
   18fc4:	bl	13548 <g_free@plt>
   18fc8:	mov	r0, r4
   18fcc:	bl	132c0 <g_strdup@plt>
   18fd0:	ldr	r3, [r7, #44]	; 0x2c
   18fd4:	cmp	r3, #0
   18fd8:	str	r0, [r7, #24]
   18fdc:	beq	18fe8 <g_strcmp0@plt+0x56ec>
   18fe0:	mov	r0, r7
   18fe4:	bl	18ae4 <g_strcmp0@plt+0x51e8>
   18fe8:	mov	r3, r4
   18fec:	ldr	r2, [pc, #544]	; 19214 <g_strcmp0@plt+0x5918>
   18ff0:	mov	r1, #128	; 0x80
   18ff4:	ldr	r0, [pc, #540]	; 19218 <g_strcmp0@plt+0x591c>
   18ff8:	bl	131d0 <g_log@plt>
   18ffc:	mov	r0, r5
   19000:	add	r2, sp, #24
   19004:	add	r1, sp, #20
   19008:	bl	13758 <gtk_icon_size_lookup@plt>
   1900c:	subs	r8, r0, #0
   19010:	beq	190d0 <g_strcmp0@plt+0x57d4>
   19014:	bl	13848 <gtk_icon_theme_get_default@plt>
   19018:	mov	r3, #0
   1901c:	str	r3, [sp]
   19020:	ldr	r2, [sp, #20]
   19024:	mov	r1, r4
   19028:	bl	1335c <gtk_icon_theme_load_icon@plt>
   1902c:	subs	r8, r0, #0
   19030:	beq	191f4 <g_strcmp0@plt+0x58f8>
   19034:	mov	r0, r4
   19038:	ldr	r1, [pc, #476]	; 1921c <g_strcmp0@plt+0x5920>
   1903c:	bl	138fc <g_strcmp0@plt>
   19040:	cmp	r0, #0
   19044:	beq	191b8 <g_strcmp0@plt+0x58bc>
   19048:	ldr	r3, [sp, #20]
   1904c:	mov	r0, r8
   19050:	cmp	r3, #0
   19054:	beq	19064 <g_strcmp0@plt+0x5768>
   19058:	ldr	r3, [sp, #24]
   1905c:	cmp	r3, #0
   19060:	bne	190e4 <g_strcmp0@plt+0x57e8>
   19064:	bl	13704 <g_object_unref@plt>
   19068:	mov	r8, #0
   1906c:	b	19084 <g_strcmp0@plt+0x5788>
   19070:	ldr	r2, [pc, #424]	; 19220 <g_strcmp0@plt+0x5924>
   19074:	ldr	r1, [pc, #424]	; 19224 <g_strcmp0@plt+0x5928>
   19078:	ldr	r0, [pc, #408]	; 19218 <g_strcmp0@plt+0x591c>
   1907c:	bl	1308c <g_return_if_fail_warning@plt>
   19080:	mov	r8, #0
   19084:	ldr	r2, [sp, #28]
   19088:	ldr	r3, [fp]
   1908c:	mov	r0, r8
   19090:	cmp	r2, r3
   19094:	bne	1920c <g_strcmp0@plt+0x5910>
   19098:	add	sp, sp, #36	; 0x24
   1909c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190a0:	mov	r3, r4
   190a4:	ldr	r2, [pc, #380]	; 19228 <g_strcmp0@plt+0x592c>
   190a8:	mov	r1, #128	; 0x80
   190ac:	ldr	r0, [pc, #356]	; 19218 <g_strcmp0@plt+0x591c>
   190b0:	bl	131d0 <g_log@plt>
   190b4:	b	19084 <g_strcmp0@plt+0x5788>
   190b8:	ldr	r2, [pc, #364]	; 1922c <g_strcmp0@plt+0x5930>
   190bc:	ldr	r1, [pc, #352]	; 19224 <g_strcmp0@plt+0x5928>
   190c0:	ldr	r0, [pc, #336]	; 19218 <g_strcmp0@plt+0x591c>
   190c4:	mov	r8, r4
   190c8:	bl	1308c <g_return_if_fail_warning@plt>
   190cc:	b	19084 <g_strcmp0@plt+0x5788>
   190d0:	ldr	r2, [pc, #344]	; 19230 <g_strcmp0@plt+0x5934>
   190d4:	mov	r1, #16
   190d8:	ldr	r0, [pc, #312]	; 19218 <g_strcmp0@plt+0x591c>
   190dc:	bl	131d0 <g_log@plt>
   190e0:	b	19084 <g_strcmp0@plt+0x5788>
   190e4:	bl	133e0 <gdk_pixbuf_get_width@plt>
   190e8:	ldr	r1, [sp, #20]
   190ec:	bl	19458 <g_strcmp0@plt+0x5b5c>
   190f0:	mov	r4, #0
   190f4:	mov	sl, r0
   190f8:	mov	r0, r8
   190fc:	bl	13398 <gdk_pixbuf_get_height@plt>
   19100:	ldr	r1, [sp, #24]
   19104:	bl	19458 <g_strcmp0@plt+0x5b5c>
   19108:	str	r4, [r7, #32]
   1910c:	mov	r1, #4
   19110:	mov	r5, r0
   19114:	str	r0, [sp, #12]
   19118:	mul	r0, r0, sl
   1911c:	str	r0, [r7, #36]	; 0x24
   19120:	bl	1302c <g_malloc_n@plt>
   19124:	cmp	r5, r4
   19128:	strgt	r4, [sp, #8]
   1912c:	movgt	r9, r4
   19130:	str	r0, [r7, #44]	; 0x2c
   19134:	ble	1919c <g_strcmp0@plt+0x58a0>
   19138:	cmp	sl, #0
   1913c:	ble	1918c <g_strcmp0@plt+0x5890>
   19140:	ldr	r3, [sp, #8]
   19144:	mov	r4, #0
   19148:	lsl	r5, r3, #2
   1914c:	ldr	r2, [sp, #24]
   19150:	ldr	r3, [sp, #20]
   19154:	str	r2, [sp]
   19158:	mov	r0, r8
   1915c:	mul	r1, r4, r3
   19160:	mul	r2, r9, r2
   19164:	ldr	r6, [r7, #44]	; 0x2c
   19168:	bl	13278 <gdk_pixbuf_new_subpixbuf@plt>
   1916c:	add	r4, r4, #1
   19170:	cmp	sl, r4
   19174:	str	r0, [r6, r5]
   19178:	add	r5, r5, #4
   1917c:	bne	1914c <g_strcmp0@plt+0x5850>
   19180:	ldr	r3, [sp, #8]
   19184:	add	r3, sl, r3
   19188:	str	r3, [sp, #8]
   1918c:	ldr	r3, [sp, #12]
   19190:	add	r9, r9, #1
   19194:	cmp	r3, r9
   19198:	bne	19138 <g_strcmp0@plt+0x583c>
   1919c:	mov	r0, r8
   191a0:	bl	13704 <g_object_unref@plt>
   191a4:	mov	r0, r7
   191a8:	mov	r1, #1
   191ac:	bl	18cf0 <g_strcmp0@plt+0x53f4>
   191b0:	mov	r8, #1
   191b4:	b	19084 <g_strcmp0@plt+0x5788>
   191b8:	mov	r0, r8
   191bc:	bl	133e0 <gdk_pixbuf_get_width@plt>
   191c0:	cmp	r0, #0
   191c4:	add	r3, r0, #7
   191c8:	movge	r3, r0
   191cc:	mov	r0, r8
   191d0:	asr	r3, r3, #3
   191d4:	str	r3, [sp, #20]
   191d8:	bl	13398 <gdk_pixbuf_get_height@plt>
   191dc:	add	r3, r0, #3
   191e0:	cmp	r0, #0
   191e4:	movlt	r0, r3
   191e8:	asr	r3, r0, #2
   191ec:	str	r3, [sp, #24]
   191f0:	b	19048 <g_strcmp0@plt+0x574c>
   191f4:	mov	r3, r4
   191f8:	ldr	r2, [pc, #52]	; 19234 <g_strcmp0@plt+0x5938>
   191fc:	mov	r1, #128	; 0x80
   19200:	ldr	r0, [pc, #16]	; 19218 <g_strcmp0@plt+0x591c>
   19204:	bl	131d0 <g_log@plt>
   19208:	b	19084 <g_strcmp0@plt+0x5788>
   1920c:	bl	1350c <__stack_chk_fail@plt>
   19210:	andeq	sp, r2, r0, asr lr
   19214:			; <UNDEFINED> instruction: 0x0001ddb8
   19218:	muleq	r1, r4, r7
   1921c:	andeq	sp, r1, r8, asr #12
   19220:	andeq	sp, r1, ip, ror ip
   19224:	andeq	sp, r1, r0, lsr #24
   19228:	andeq	sp, r1, ip, lsl #27
   1922c:	andeq	sp, r1, ip, ror sp
   19230:	andeq	sp, r1, r8, asr #27
   19234:	andeq	sp, r1, r4, ror #27
   19238:	push	{r4, lr}
   1923c:	bl	189d4 <g_strcmp0@plt+0x50d8>
   19240:	mov	r1, #0
   19244:	pop	{r4, lr}
   19248:	b	13008 <g_object_new@plt>
   1924c:	subs	r2, r1, #1
   19250:	bxeq	lr
   19254:	bcc	1942c <g_strcmp0@plt+0x5b30>
   19258:	cmp	r0, r1
   1925c:	bls	19410 <g_strcmp0@plt+0x5b14>
   19260:	tst	r1, r2
   19264:	beq	1941c <g_strcmp0@plt+0x5b20>
   19268:	clz	r3, r0
   1926c:	clz	r2, r1
   19270:	sub	r3, r2, r3
   19274:	rsbs	r3, r3, #31
   19278:	addne	r3, r3, r3, lsl #1
   1927c:	mov	r2, #0
   19280:	addne	pc, pc, r3, lsl #2
   19284:	nop			; (mov r0, r0)
   19288:	cmp	r0, r1, lsl #31
   1928c:	adc	r2, r2, r2
   19290:	subcs	r0, r0, r1, lsl #31
   19294:	cmp	r0, r1, lsl #30
   19298:	adc	r2, r2, r2
   1929c:	subcs	r0, r0, r1, lsl #30
   192a0:	cmp	r0, r1, lsl #29
   192a4:	adc	r2, r2, r2
   192a8:	subcs	r0, r0, r1, lsl #29
   192ac:	cmp	r0, r1, lsl #28
   192b0:	adc	r2, r2, r2
   192b4:	subcs	r0, r0, r1, lsl #28
   192b8:	cmp	r0, r1, lsl #27
   192bc:	adc	r2, r2, r2
   192c0:	subcs	r0, r0, r1, lsl #27
   192c4:	cmp	r0, r1, lsl #26
   192c8:	adc	r2, r2, r2
   192cc:	subcs	r0, r0, r1, lsl #26
   192d0:	cmp	r0, r1, lsl #25
   192d4:	adc	r2, r2, r2
   192d8:	subcs	r0, r0, r1, lsl #25
   192dc:	cmp	r0, r1, lsl #24
   192e0:	adc	r2, r2, r2
   192e4:	subcs	r0, r0, r1, lsl #24
   192e8:	cmp	r0, r1, lsl #23
   192ec:	adc	r2, r2, r2
   192f0:	subcs	r0, r0, r1, lsl #23
   192f4:	cmp	r0, r1, lsl #22
   192f8:	adc	r2, r2, r2
   192fc:	subcs	r0, r0, r1, lsl #22
   19300:	cmp	r0, r1, lsl #21
   19304:	adc	r2, r2, r2
   19308:	subcs	r0, r0, r1, lsl #21
   1930c:	cmp	r0, r1, lsl #20
   19310:	adc	r2, r2, r2
   19314:	subcs	r0, r0, r1, lsl #20
   19318:	cmp	r0, r1, lsl #19
   1931c:	adc	r2, r2, r2
   19320:	subcs	r0, r0, r1, lsl #19
   19324:	cmp	r0, r1, lsl #18
   19328:	adc	r2, r2, r2
   1932c:	subcs	r0, r0, r1, lsl #18
   19330:	cmp	r0, r1, lsl #17
   19334:	adc	r2, r2, r2
   19338:	subcs	r0, r0, r1, lsl #17
   1933c:	cmp	r0, r1, lsl #16
   19340:	adc	r2, r2, r2
   19344:	subcs	r0, r0, r1, lsl #16
   19348:	cmp	r0, r1, lsl #15
   1934c:	adc	r2, r2, r2
   19350:	subcs	r0, r0, r1, lsl #15
   19354:	cmp	r0, r1, lsl #14
   19358:	adc	r2, r2, r2
   1935c:	subcs	r0, r0, r1, lsl #14
   19360:	cmp	r0, r1, lsl #13
   19364:	adc	r2, r2, r2
   19368:	subcs	r0, r0, r1, lsl #13
   1936c:	cmp	r0, r1, lsl #12
   19370:	adc	r2, r2, r2
   19374:	subcs	r0, r0, r1, lsl #12
   19378:	cmp	r0, r1, lsl #11
   1937c:	adc	r2, r2, r2
   19380:	subcs	r0, r0, r1, lsl #11
   19384:	cmp	r0, r1, lsl #10
   19388:	adc	r2, r2, r2
   1938c:	subcs	r0, r0, r1, lsl #10
   19390:	cmp	r0, r1, lsl #9
   19394:	adc	r2, r2, r2
   19398:	subcs	r0, r0, r1, lsl #9
   1939c:	cmp	r0, r1, lsl #8
   193a0:	adc	r2, r2, r2
   193a4:	subcs	r0, r0, r1, lsl #8
   193a8:	cmp	r0, r1, lsl #7
   193ac:	adc	r2, r2, r2
   193b0:	subcs	r0, r0, r1, lsl #7
   193b4:	cmp	r0, r1, lsl #6
   193b8:	adc	r2, r2, r2
   193bc:	subcs	r0, r0, r1, lsl #6
   193c0:	cmp	r0, r1, lsl #5
   193c4:	adc	r2, r2, r2
   193c8:	subcs	r0, r0, r1, lsl #5
   193cc:	cmp	r0, r1, lsl #4
   193d0:	adc	r2, r2, r2
   193d4:	subcs	r0, r0, r1, lsl #4
   193d8:	cmp	r0, r1, lsl #3
   193dc:	adc	r2, r2, r2
   193e0:	subcs	r0, r0, r1, lsl #3
   193e4:	cmp	r0, r1, lsl #2
   193e8:	adc	r2, r2, r2
   193ec:	subcs	r0, r0, r1, lsl #2
   193f0:	cmp	r0, r1, lsl #1
   193f4:	adc	r2, r2, r2
   193f8:	subcs	r0, r0, r1, lsl #1
   193fc:	cmp	r0, r1
   19400:	adc	r2, r2, r2
   19404:	subcs	r0, r0, r1
   19408:	mov	r0, r2
   1940c:	bx	lr
   19410:	moveq	r0, #1
   19414:	movne	r0, #0
   19418:	bx	lr
   1941c:	clz	r2, r1
   19420:	rsb	r2, r2, #31
   19424:	lsr	r0, r0, r2
   19428:	bx	lr
   1942c:	cmp	r0, #0
   19430:	mvnne	r0, #0
   19434:	b	19698 <g_strcmp0@plt+0x5d9c>
   19438:	cmp	r1, #0
   1943c:	beq	1942c <g_strcmp0@plt+0x5b30>
   19440:	push	{r0, r1, lr}
   19444:	bl	1924c <g_strcmp0@plt+0x5950>
   19448:	pop	{r1, r2, lr}
   1944c:	mul	r3, r2, r0
   19450:	sub	r1, r1, r3
   19454:	bx	lr
   19458:	cmp	r1, #0
   1945c:	beq	19668 <g_strcmp0@plt+0x5d6c>
   19460:	eor	ip, r0, r1
   19464:	rsbmi	r1, r1, #0
   19468:	subs	r2, r1, #1
   1946c:	beq	19634 <g_strcmp0@plt+0x5d38>
   19470:	movs	r3, r0
   19474:	rsbmi	r3, r0, #0
   19478:	cmp	r3, r1
   1947c:	bls	19640 <g_strcmp0@plt+0x5d44>
   19480:	tst	r1, r2
   19484:	beq	19650 <g_strcmp0@plt+0x5d54>
   19488:	clz	r2, r3
   1948c:	clz	r0, r1
   19490:	sub	r2, r0, r2
   19494:	rsbs	r2, r2, #31
   19498:	addne	r2, r2, r2, lsl #1
   1949c:	mov	r0, #0
   194a0:	addne	pc, pc, r2, lsl #2
   194a4:	nop			; (mov r0, r0)
   194a8:	cmp	r3, r1, lsl #31
   194ac:	adc	r0, r0, r0
   194b0:	subcs	r3, r3, r1, lsl #31
   194b4:	cmp	r3, r1, lsl #30
   194b8:	adc	r0, r0, r0
   194bc:	subcs	r3, r3, r1, lsl #30
   194c0:	cmp	r3, r1, lsl #29
   194c4:	adc	r0, r0, r0
   194c8:	subcs	r3, r3, r1, lsl #29
   194cc:	cmp	r3, r1, lsl #28
   194d0:	adc	r0, r0, r0
   194d4:	subcs	r3, r3, r1, lsl #28
   194d8:	cmp	r3, r1, lsl #27
   194dc:	adc	r0, r0, r0
   194e0:	subcs	r3, r3, r1, lsl #27
   194e4:	cmp	r3, r1, lsl #26
   194e8:	adc	r0, r0, r0
   194ec:	subcs	r3, r3, r1, lsl #26
   194f0:	cmp	r3, r1, lsl #25
   194f4:	adc	r0, r0, r0
   194f8:	subcs	r3, r3, r1, lsl #25
   194fc:	cmp	r3, r1, lsl #24
   19500:	adc	r0, r0, r0
   19504:	subcs	r3, r3, r1, lsl #24
   19508:	cmp	r3, r1, lsl #23
   1950c:	adc	r0, r0, r0
   19510:	subcs	r3, r3, r1, lsl #23
   19514:	cmp	r3, r1, lsl #22
   19518:	adc	r0, r0, r0
   1951c:	subcs	r3, r3, r1, lsl #22
   19520:	cmp	r3, r1, lsl #21
   19524:	adc	r0, r0, r0
   19528:	subcs	r3, r3, r1, lsl #21
   1952c:	cmp	r3, r1, lsl #20
   19530:	adc	r0, r0, r0
   19534:	subcs	r3, r3, r1, lsl #20
   19538:	cmp	r3, r1, lsl #19
   1953c:	adc	r0, r0, r0
   19540:	subcs	r3, r3, r1, lsl #19
   19544:	cmp	r3, r1, lsl #18
   19548:	adc	r0, r0, r0
   1954c:	subcs	r3, r3, r1, lsl #18
   19550:	cmp	r3, r1, lsl #17
   19554:	adc	r0, r0, r0
   19558:	subcs	r3, r3, r1, lsl #17
   1955c:	cmp	r3, r1, lsl #16
   19560:	adc	r0, r0, r0
   19564:	subcs	r3, r3, r1, lsl #16
   19568:	cmp	r3, r1, lsl #15
   1956c:	adc	r0, r0, r0
   19570:	subcs	r3, r3, r1, lsl #15
   19574:	cmp	r3, r1, lsl #14
   19578:	adc	r0, r0, r0
   1957c:	subcs	r3, r3, r1, lsl #14
   19580:	cmp	r3, r1, lsl #13
   19584:	adc	r0, r0, r0
   19588:	subcs	r3, r3, r1, lsl #13
   1958c:	cmp	r3, r1, lsl #12
   19590:	adc	r0, r0, r0
   19594:	subcs	r3, r3, r1, lsl #12
   19598:	cmp	r3, r1, lsl #11
   1959c:	adc	r0, r0, r0
   195a0:	subcs	r3, r3, r1, lsl #11
   195a4:	cmp	r3, r1, lsl #10
   195a8:	adc	r0, r0, r0
   195ac:	subcs	r3, r3, r1, lsl #10
   195b0:	cmp	r3, r1, lsl #9
   195b4:	adc	r0, r0, r0
   195b8:	subcs	r3, r3, r1, lsl #9
   195bc:	cmp	r3, r1, lsl #8
   195c0:	adc	r0, r0, r0
   195c4:	subcs	r3, r3, r1, lsl #8
   195c8:	cmp	r3, r1, lsl #7
   195cc:	adc	r0, r0, r0
   195d0:	subcs	r3, r3, r1, lsl #7
   195d4:	cmp	r3, r1, lsl #6
   195d8:	adc	r0, r0, r0
   195dc:	subcs	r3, r3, r1, lsl #6
   195e0:	cmp	r3, r1, lsl #5
   195e4:	adc	r0, r0, r0
   195e8:	subcs	r3, r3, r1, lsl #5
   195ec:	cmp	r3, r1, lsl #4
   195f0:	adc	r0, r0, r0
   195f4:	subcs	r3, r3, r1, lsl #4
   195f8:	cmp	r3, r1, lsl #3
   195fc:	adc	r0, r0, r0
   19600:	subcs	r3, r3, r1, lsl #3
   19604:	cmp	r3, r1, lsl #2
   19608:	adc	r0, r0, r0
   1960c:	subcs	r3, r3, r1, lsl #2
   19610:	cmp	r3, r1, lsl #1
   19614:	adc	r0, r0, r0
   19618:	subcs	r3, r3, r1, lsl #1
   1961c:	cmp	r3, r1
   19620:	adc	r0, r0, r0
   19624:	subcs	r3, r3, r1
   19628:	cmp	ip, #0
   1962c:	rsbmi	r0, r0, #0
   19630:	bx	lr
   19634:	teq	ip, r0
   19638:	rsbmi	r0, r0, #0
   1963c:	bx	lr
   19640:	movcc	r0, #0
   19644:	asreq	r0, ip, #31
   19648:	orreq	r0, r0, #1
   1964c:	bx	lr
   19650:	clz	r2, r1
   19654:	rsb	r2, r2, #31
   19658:	cmp	ip, #0
   1965c:	lsr	r0, r3, r2
   19660:	rsbmi	r0, r0, #0
   19664:	bx	lr
   19668:	cmp	r0, #0
   1966c:	mvngt	r0, #-2147483648	; 0x80000000
   19670:	movlt	r0, #-2147483648	; 0x80000000
   19674:	b	19698 <g_strcmp0@plt+0x5d9c>
   19678:	cmp	r1, #0
   1967c:	beq	19668 <g_strcmp0@plt+0x5d6c>
   19680:	push	{r0, r1, lr}
   19684:	bl	19460 <g_strcmp0@plt+0x5b64>
   19688:	pop	{r1, r2, lr}
   1968c:	mul	r3, r2, r0
   19690:	sub	r1, r1, r3
   19694:	bx	lr
   19698:	push	{r1, lr}
   1969c:	mov	r0, #8
   196a0:	bl	13614 <raise@plt>
   196a4:	pop	{r1, pc}
   196a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   196ac:	mov	r7, r0
   196b0:	ldr	r6, [pc, #72]	; 19700 <g_strcmp0@plt+0x5e04>
   196b4:	ldr	r5, [pc, #72]	; 19704 <g_strcmp0@plt+0x5e08>
   196b8:	add	r6, pc, r6
   196bc:	add	r5, pc, r5
   196c0:	sub	r6, r6, r5
   196c4:	mov	r8, r1
   196c8:	mov	r9, r2
   196cc:	bl	12fdc <g_string_set_size@plt-0x20>
   196d0:	asrs	r6, r6, #2
   196d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   196d8:	mov	r4, #0
   196dc:	add	r4, r4, #1
   196e0:	ldr	r3, [r5], #4
   196e4:	mov	r2, r9
   196e8:	mov	r1, r8
   196ec:	mov	r0, r7
   196f0:	blx	r3
   196f4:	cmp	r6, r4
   196f8:	bne	196dc <g_strcmp0@plt+0x5de0>
   196fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19700:	andeq	r4, r1, ip, lsl #15
   19704:	andeq	r4, r1, r4, lsl #15
   19708:	bx	lr

Disassembly of section .fini:

0001970c <.fini>:
   1970c:	push	{r3, lr}
   19710:	pop	{r3, pc}
