
raspbian-preinstalled/ionice:     file format elf32-littlearm


Disassembly of section .init:

00010bf0 <.init>:
   10bf0:	push	{r3, lr}
   10bf4:	bl	116b8 <strspn@plt+0x85c>
   10bf8:	pop	{r3, pc}

Disassembly of section .plt:

00010bfc <raise@plt-0x14>:
   10bfc:	push	{lr}		; (str lr, [sp, #-4]!)
   10c00:	ldr	lr, [pc, #4]	; 10c0c <raise@plt-0x4>
   10c04:	add	lr, pc, lr
   10c08:	ldr	pc, [lr, #8]!
   10c0c:	andeq	r4, r1, r8, lsl r3

00010c10 <raise@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #792]!	; 0x318

00010c1c <strcmp@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #784]!	; 0x310

00010c28 <strtol@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #776]!	; 0x308

00010c34 <strcspn@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #768]!	; 0x300

00010c40 <free@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #760]!	; 0x2f8

00010c4c <ferror@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #752]!	; 0x2f0

00010c58 <strndup@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #744]!	; 0x2e8

00010c64 <_exit@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #736]!	; 0x2e0

00010c70 <memcpy@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #728]!	; 0x2d8

00010c7c <execvp@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #720]!	; 0x2d0

00010c88 <__strtoull_internal@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #712]!	; 0x2c8

00010c94 <dcgettext@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #704]!	; 0x2c0

00010ca0 <strdup@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #696]!	; 0x2b8

00010cac <__stack_chk_fail@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #688]!	; 0x2b0

00010cb8 <textdomain@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #680]!	; 0x2a8

00010cc4 <strcasecmp@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #672]!	; 0x2a0

00010cd0 <err@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #664]!	; 0x298

00010cdc <__fpending@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #656]!	; 0x290

00010ce8 <puts@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #648]!	; 0x288

00010cf4 <malloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #640]!	; 0x280

00010d00 <__libc_start_main@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #632]!	; 0x278

00010d0c <__gmon_start__@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #624]!	; 0x270

00010d18 <getopt_long@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #616]!	; 0x268

00010d24 <__ctype_b_loc@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #608]!	; 0x260

00010d30 <exit@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #600]!	; 0x258

00010d3c <syscall@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #592]!	; 0x250

00010d48 <strtoul@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #584]!	; 0x248

00010d54 <strlen@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #576]!	; 0x240

00010d60 <strchr@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #568]!	; 0x238

00010d6c <warnx@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #560]!	; 0x230

00010d78 <__errno_location@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #552]!	; 0x228

00010d84 <__cxa_atexit@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #544]!	; 0x220

00010d90 <__vasprintf_chk@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #536]!	; 0x218

00010d9c <fgetc@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #528]!	; 0x210

00010da8 <__printf_chk@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #520]!	; 0x208

00010db4 <strtod@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #512]!	; 0x200

00010dc0 <__fprintf_chk@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #504]!	; 0x1f8

00010dcc <fclose@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #496]!	; 0x1f0

00010dd8 <setlocale@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #488]!	; 0x1e8

00010de4 <errx@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #480]!	; 0x1e0

00010df0 <warn@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #472]!	; 0x1d8

00010dfc <fputc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #464]!	; 0x1d0

00010e08 <localeconv@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #456]!	; 0x1c8

00010e14 <__strtoll_internal@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e20 <bindtextdomain@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #440]!	; 0x1b8

00010e2c <fputs@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #432]!	; 0x1b0

00010e38 <strncmp@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #424]!	; 0x1a8

00010e44 <abort@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #416]!	; 0x1a0

00010e50 <__snprintf_chk@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #408]!	; 0x198

00010e5c <strspn@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #400]!	; 0x190

Disassembly of section .text:

00010e68 <.text>:
   10e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e6c:	mov	r8, r0
   10e70:	sub	sp, sp, #36	; 0x24
   10e74:	mov	r6, r1
   10e78:	mov	r0, #6
   10e7c:	ldr	r1, [pc, #1860]	; 115c8 <strspn@plt+0x76c>
   10e80:	bl	10dd8 <setlocale@plt>
   10e84:	ldr	r1, [pc, #1856]	; 115cc <strspn@plt+0x770>
   10e88:	ldr	r0, [pc, #1856]	; 115d0 <strspn@plt+0x774>
   10e8c:	bl	10e20 <bindtextdomain@plt>
   10e90:	mov	r4, #0
   10e94:	ldr	r0, [pc, #1844]	; 115d0 <strspn@plt+0x774>
   10e98:	ldr	sl, [pc, #1844]	; 115d4 <strspn@plt+0x778>
   10e9c:	ldr	r9, [pc, #1844]	; 115d8 <strspn@plt+0x77c>
   10ea0:	ldr	fp, [pc, #1844]	; 115dc <strspn@plt+0x780>
   10ea4:	bl	10cb8 <textdomain@plt>
   10ea8:	mov	r5, r4
   10eac:	ldr	r0, [pc, #1836]	; 115e0 <strspn@plt+0x784>
   10eb0:	mov	r7, #2
   10eb4:	bl	13b28 <strspn@plt+0x2ccc>
   10eb8:	mov	r3, #4
   10ebc:	str	r4, [sp, #16]
   10ec0:	str	r4, [sp, #12]
   10ec4:	str	r3, [sp, #20]
   10ec8:	mov	r3, #0
   10ecc:	str	r3, [sp]
   10ed0:	mov	r2, r9
   10ed4:	mov	r3, sl
   10ed8:	mov	r1, r6
   10edc:	mov	r0, r8
   10ee0:	bl	10d18 <getopt_long@plt>
   10ee4:	cmn	r0, #1
   10ee8:	beq	11164 <strspn@plt+0x308>
   10eec:	sub	r0, r0, #80	; 0x50
   10ef0:	cmp	r0, #37	; 0x25
   10ef4:	ldrls	pc, [pc, r0, lsl #2]
   10ef8:	b	114a4 <strspn@plt+0x648>
   10efc:	ldrdeq	r1, [r1], -r4
   10f00:	andeq	r1, r1, r4, lsr #9
   10f04:	andeq	r1, r1, r4, lsr #9
   10f08:	andeq	r1, r1, r4, lsr #9
   10f0c:	andeq	r1, r1, r4, lsr #9
   10f10:	andeq	r1, r1, r4, lsr #9
   10f14:	andeq	r1, r1, r0, lsr #1
   10f18:	andeq	r1, r1, r4, lsr #9
   10f1c:	andeq	r1, r1, r4, lsr #9
   10f20:	andeq	r1, r1, r4, lsr #9
   10f24:	andeq	r1, r1, r4, lsr #9
   10f28:	andeq	r1, r1, r4, lsr #9
   10f2c:	andeq	r1, r1, r4, lsr #9
   10f30:	andeq	r1, r1, r4, lsr #9
   10f34:	andeq	r1, r1, r4, lsr #9
   10f38:	andeq	r1, r1, r4, lsr #9
   10f3c:	andeq	r1, r1, r4, lsr #9
   10f40:	andeq	r1, r1, r4, lsr #9
   10f44:	andeq	r1, r1, r4, lsr #9
   10f48:	andeq	r1, r1, r8, asr #32
   10f4c:	andeq	r1, r1, r4, lsr #9
   10f50:	andeq	r1, r1, r4, lsr #9
   10f54:	andeq	r1, r1, r4, lsr #9
   10f58:	andeq	r1, r1, r4, lsr #9
   10f5c:	andeq	r1, r1, r8, lsl r3
   10f60:	andeq	r1, r1, r4, lsr #9
   10f64:	andeq	r1, r1, r4, lsr #9
   10f68:	andeq	r1, r1, r4, lsr #9
   10f6c:	andeq	r1, r1, r4, lsr #9
   10f70:	andeq	r1, r1, r4, lsr #9
   10f74:	andeq	r1, r1, ip
   10f78:	andeq	r1, r1, r4, lsr #9
   10f7c:	ldrdeq	r0, [r1], -r8
   10f80:	andeq	r1, r1, r4, lsr #9
   10f84:	andeq	r1, r1, r4, lsr #9
   10f88:	andeq	r1, r1, r4, lsr #9
   10f8c:	andeq	r0, r1, r8, asr #31
   10f90:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   10f94:	cmp	r5, #0
   10f98:	bne	11584 <strspn@plt+0x728>
   10f9c:	mov	r0, r5
   10fa0:	mov	r2, #5
   10fa4:	ldr	r1, [pc, #1592]	; 115e4 <strspn@plt+0x788>
   10fa8:	bl	10c94 <dcgettext@plt>
   10fac:	mov	r5, #3
   10fb0:	mov	r1, r0
   10fb4:	mov	r4, r0
   10fb8:	ldr	r0, [fp]
   10fbc:	bl	126e8 <strspn@plt+0x188c>
   10fc0:	str	r0, [sp, #16]
   10fc4:	b	10ec8 <strspn@plt+0x6c>
   10fc8:	ldr	r2, [pc, #1560]	; 115e8 <strspn@plt+0x78c>
   10fcc:	mov	r3, #1
   10fd0:	str	r3, [r2]
   10fd4:	b	10ec8 <strspn@plt+0x6c>
   10fd8:	cmp	r5, #0
   10fdc:	bne	11584 <strspn@plt+0x728>
   10fe0:	mov	r0, r5
   10fe4:	mov	r2, #5
   10fe8:	ldr	r1, [pc, #1532]	; 115ec <strspn@plt+0x790>
   10fec:	bl	10c94 <dcgettext@plt>
   10ff0:	mov	r5, #1
   10ff4:	mov	r1, r0
   10ff8:	mov	r4, r0
   10ffc:	ldr	r0, [fp]
   11000:	bl	126e8 <strspn@plt+0x188c>
   11004:	str	r0, [sp, #16]
   11008:	b	10ec8 <strspn@plt+0x6c>
   1100c:	ldr	r3, [fp]
   11010:	mov	r2, #5
   11014:	ldr	r1, [pc, #1492]	; 115f0 <strspn@plt+0x794>
   11018:	mov	r0, #0
   1101c:	str	r3, [sp, #20]
   11020:	bl	10c94 <dcgettext@plt>
   11024:	ldr	r3, [sp, #20]
   11028:	mov	r1, r0
   1102c:	mov	r0, r3
   11030:	ldr	r3, [sp, #12]
   11034:	orr	r3, r3, #1
   11038:	str	r3, [sp, #12]
   1103c:	bl	126e8 <strspn@plt+0x188c>
   11040:	str	r0, [sp, #20]
   11044:	b	10ec8 <strspn@plt+0x6c>
   11048:	bl	10d24 <__ctype_b_loc@plt>
   1104c:	ldr	r3, [fp]
   11050:	ldrsb	r2, [r3]
   11054:	lsl	r2, r2, #1
   11058:	ldr	r1, [r0]
   1105c:	ldrh	r7, [r1, r2]
   11060:	ands	r7, r7, #2048	; 0x800
   11064:	beq	11108 <strspn@plt+0x2ac>
   11068:	mov	r2, #5
   1106c:	ldr	r1, [pc, #1408]	; 115f4 <strspn@plt+0x798>
   11070:	mov	r0, #0
   11074:	str	r3, [sp, #24]
   11078:	bl	10c94 <dcgettext@plt>
   1107c:	ldr	r3, [sp, #24]
   11080:	mov	r1, r0
   11084:	mov	r0, r3
   11088:	bl	126e8 <strspn@plt+0x188c>
   1108c:	mov	r7, r0
   11090:	ldr	r3, [sp, #12]
   11094:	orr	r3, r3, #2
   11098:	str	r3, [sp, #12]
   1109c:	b	10ec8 <strspn@plt+0x6c>
   110a0:	mov	r2, #5
   110a4:	ldr	r1, [pc, #1356]	; 115f8 <strspn@plt+0x79c>
   110a8:	mov	r0, #0
   110ac:	bl	10c94 <dcgettext@plt>
   110b0:	ldr	r2, [pc, #1348]	; 115fc <strspn@plt+0x7a0>
   110b4:	ldr	r3, [pc, #1348]	; 11600 <strspn@plt+0x7a4>
   110b8:	ldr	r2, [r2]
   110bc:	mov	r1, r0
   110c0:	mov	r0, #1
   110c4:	bl	10da8 <__printf_chk@plt>
   110c8:	mov	r0, #0
   110cc:	add	sp, sp, #36	; 0x24
   110d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110d4:	cmp	r5, #0
   110d8:	bne	11584 <strspn@plt+0x728>
   110dc:	mov	r0, r5
   110e0:	mov	r2, #5
   110e4:	ldr	r1, [pc, #1304]	; 11604 <strspn@plt+0x7a8>
   110e8:	bl	10c94 <dcgettext@plt>
   110ec:	mov	r5, #2
   110f0:	mov	r1, r0
   110f4:	mov	r4, r0
   110f8:	ldr	r0, [fp]
   110fc:	bl	126e8 <strspn@plt+0x188c>
   11100:	str	r0, [sp, #16]
   11104:	b	10ec8 <strspn@plt+0x6c>
   11108:	ldr	r2, [pc, #1272]	; 11608 <strspn@plt+0x7ac>
   1110c:	str	r4, [sp, #24]
   11110:	str	r5, [sp, #28]
   11114:	mov	r4, r3
   11118:	mov	r5, r7
   1111c:	mov	r7, r6
   11120:	mov	r6, r2
   11124:	ldr	r1, [r6], #4
   11128:	mov	r0, r4
   1112c:	bl	10cc4 <strcasecmp@plt>
   11130:	cmp	r0, #0
   11134:	beq	1121c <strspn@plt+0x3c0>
   11138:	add	r5, r5, #1
   1113c:	cmp	r5, #4
   11140:	bne	11124 <strspn@plt+0x2c8>
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #1212]	; 1160c <strspn@plt+0x7b0>
   1114c:	mov	r0, #0
   11150:	bl	10c94 <dcgettext@plt>
   11154:	ldr	r2, [fp]
   11158:	mov	r1, r0
   1115c:	mov	r0, #1
   11160:	bl	10de4 <errx@plt>
   11164:	cmp	r7, #3
   11168:	ldrls	pc, [pc, r7, lsl #2]
   1116c:	b	115a0 <strspn@plt+0x744>
   11170:	andeq	r1, r1, ip, asr #5
   11174:	andeq	r1, r1, r8, lsl #3
   11178:	andeq	r1, r1, r8, lsl #3
   1117c:	andeq	r1, r1, r0, lsr r2
   11180:	mov	r3, #7
   11184:	str	r3, [sp, #20]
   11188:	ldr	r3, [sp, #12]
   1118c:	ldr	r2, [sp, #16]
   11190:	orrs	r0, r3, r2
   11194:	bne	114dc <strspn@plt+0x680>
   11198:	ldr	r9, [pc, #1136]	; 11610 <strspn@plt+0x7b4>
   1119c:	ldr	r3, [r9]
   111a0:	cmp	r3, r8
   111a4:	beq	1130c <strspn@plt+0x4b0>
   111a8:	cmp	r5, #0
   111ac:	bne	11500 <strspn@plt+0x6a4>
   111b0:	ldr	r3, [r9]
   111b4:	ldr	r4, [r6, r3, lsl #2]
   111b8:	cmp	r4, #0
   111bc:	beq	11540 <strspn@plt+0x6e4>
   111c0:	ldr	r2, [sp, #20]
   111c4:	mov	r1, r7
   111c8:	mov	r3, #1
   111cc:	mov	r0, #0
   111d0:	bl	1181c <strspn@plt+0x9c0>
   111d4:	ldr	r3, [r9]
   111d8:	add	r1, r6, r3, lsl #2
   111dc:	ldr	r0, [r6, r3, lsl #2]
   111e0:	bl	10c7c <execvp@plt>
   111e4:	bl	10d78 <__errno_location@plt>
   111e8:	mov	r2, #5
   111ec:	ldr	r1, [pc, #1056]	; 11614 <strspn@plt+0x7b8>
   111f0:	ldr	r3, [r0]
   111f4:	mov	r0, #0
   111f8:	cmp	r3, #2
   111fc:	moveq	r4, #127	; 0x7f
   11200:	movne	r4, #126	; 0x7e
   11204:	bl	10c94 <dcgettext@plt>
   11208:	ldr	r3, [r9]
   1120c:	ldr	r2, [r6, r3, lsl #2]
   11210:	mov	r1, r0
   11214:	mov	r0, r4
   11218:	bl	10cd0 <err@plt>
   1121c:	mov	r6, r7
   11220:	ldr	r4, [sp, #24]
   11224:	mov	r7, r5
   11228:	ldr	r5, [sp, #28]
   1122c:	b	11090 <strspn@plt+0x234>
   11230:	ldr	r3, [sp, #12]
   11234:	tst	r3, #1
   11238:	beq	11180 <strspn@plt+0x324>
   1123c:	ldr	r3, [pc, #932]	; 115e8 <strspn@plt+0x78c>
   11240:	ldr	r0, [r3]
   11244:	cmp	r0, #0
   11248:	movne	r3, #7
   1124c:	strne	r3, [sp, #20]
   11250:	beq	11568 <strspn@plt+0x70c>
   11254:	adds	r3, r5, #0
   11258:	movne	r3, #1
   1125c:	ldr	r2, [sp, #12]
   11260:	cmp	r2, #0
   11264:	moveq	r3, #0
   11268:	cmp	r3, #0
   1126c:	ldreq	r9, [pc, #924]	; 11610 <strspn@plt+0x7b4>
   11270:	beq	111b0 <strspn@plt+0x354>
   11274:	ldr	r8, [sp, #20]
   11278:	ldr	r0, [sp, #16]
   1127c:	mov	r3, r5
   11280:	mov	r2, r8
   11284:	mov	r1, r7
   11288:	bl	1181c <strspn@plt+0x9c0>
   1128c:	ldr	r9, [pc, #892]	; 11610 <strspn@plt+0x7b4>
   11290:	b	112b8 <strspn@plt+0x45c>
   11294:	mov	r1, r4
   11298:	bl	126e8 <strspn@plt+0x188c>
   1129c:	mov	r3, r5
   112a0:	mov	r2, r8
   112a4:	mov	r1, r7
   112a8:	bl	1181c <strspn@plt+0x9c0>
   112ac:	ldr	r3, [r9]
   112b0:	add	r3, r3, #1
   112b4:	str	r3, [r9]
   112b8:	ldr	r3, [r9]
   112bc:	ldr	r0, [r6, r3, lsl #2]
   112c0:	cmp	r0, #0
   112c4:	bne	11294 <strspn@plt+0x438>
   112c8:	b	110c8 <strspn@plt+0x26c>
   112cc:	ldr	r3, [sp, #12]
   112d0:	ands	r3, r3, #1
   112d4:	str	r3, [sp, #20]
   112d8:	beq	11188 <strspn@plt+0x32c>
   112dc:	ldr	r3, [pc, #772]	; 115e8 <strspn@plt+0x78c>
   112e0:	ldr	r3, [r3]
   112e4:	cmp	r3, #0
   112e8:	str	r3, [sp, #20]
   112ec:	strne	r7, [sp, #20]
   112f0:	bne	11254 <strspn@plt+0x3f8>
   112f4:	mov	r2, #5
   112f8:	ldr	r1, [pc, #792]	; 11618 <strspn@plt+0x7bc>
   112fc:	mov	r0, r3
   11300:	bl	10c94 <dcgettext@plt>
   11304:	bl	10d6c <warnx@plt>
   11308:	b	11254 <strspn@plt+0x3f8>
   1130c:	mov	r1, #1
   11310:	bl	1176c <strspn@plt+0x910>
   11314:	b	110c8 <strspn@plt+0x26c>
   11318:	ldr	r3, [pc, #764]	; 1161c <strspn@plt+0x7c0>
   1131c:	mov	r2, #5
   11320:	ldr	r1, [pc, #760]	; 11620 <strspn@plt+0x7c4>
   11324:	ldr	r4, [r3]
   11328:	mov	r0, #0
   1132c:	bl	10c94 <dcgettext@plt>
   11330:	mov	r1, r4
   11334:	bl	10e2c <fputs@plt>
   11338:	mov	r2, #5
   1133c:	ldr	r1, [pc, #736]	; 11624 <strspn@plt+0x7c8>
   11340:	mov	r0, #0
   11344:	bl	10c94 <dcgettext@plt>
   11348:	ldr	r3, [pc, #684]	; 115fc <strspn@plt+0x7a0>
   1134c:	mov	r1, #1
   11350:	ldr	r3, [r3]
   11354:	mov	r2, r0
   11358:	mov	r0, r4
   1135c:	bl	10dc0 <__fprintf_chk@plt>
   11360:	mov	r1, r4
   11364:	mov	r0, #10
   11368:	bl	10dfc <fputc@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #688]	; 11628 <strspn@plt+0x7cc>
   11374:	mov	r0, #0
   11378:	bl	10c94 <dcgettext@plt>
   1137c:	mov	r1, r4
   11380:	bl	10e2c <fputs@plt>
   11384:	mov	r2, #5
   11388:	ldr	r1, [pc, #668]	; 1162c <strspn@plt+0x7d0>
   1138c:	mov	r0, #0
   11390:	bl	10c94 <dcgettext@plt>
   11394:	mov	r1, r4
   11398:	bl	10e2c <fputs@plt>
   1139c:	mov	r2, #5
   113a0:	ldr	r1, [pc, #648]	; 11630 <strspn@plt+0x7d4>
   113a4:	mov	r0, #0
   113a8:	bl	10c94 <dcgettext@plt>
   113ac:	mov	r1, r4
   113b0:	bl	10e2c <fputs@plt>
   113b4:	mov	r2, #5
   113b8:	ldr	r1, [pc, #628]	; 11634 <strspn@plt+0x7d8>
   113bc:	mov	r0, #0
   113c0:	bl	10c94 <dcgettext@plt>
   113c4:	mov	r1, r4
   113c8:	bl	10e2c <fputs@plt>
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #608]	; 11638 <strspn@plt+0x7dc>
   113d4:	mov	r0, #0
   113d8:	bl	10c94 <dcgettext@plt>
   113dc:	mov	r1, r4
   113e0:	bl	10e2c <fputs@plt>
   113e4:	mov	r2, #5
   113e8:	ldr	r1, [pc, #588]	; 1163c <strspn@plt+0x7e0>
   113ec:	mov	r0, #0
   113f0:	bl	10c94 <dcgettext@plt>
   113f4:	mov	r1, r4
   113f8:	bl	10e2c <fputs@plt>
   113fc:	mov	r2, #5
   11400:	ldr	r1, [pc, #568]	; 11640 <strspn@plt+0x7e4>
   11404:	mov	r0, #0
   11408:	bl	10c94 <dcgettext@plt>
   1140c:	mov	r1, r4
   11410:	bl	10e2c <fputs@plt>
   11414:	mov	r2, #5
   11418:	ldr	r1, [pc, #548]	; 11644 <strspn@plt+0x7e8>
   1141c:	mov	r0, #0
   11420:	bl	10c94 <dcgettext@plt>
   11424:	mov	r1, r4
   11428:	bl	10e2c <fputs@plt>
   1142c:	mov	r1, r4
   11430:	mov	r0, #10
   11434:	bl	10dfc <fputc@plt>
   11438:	mov	r2, #5
   1143c:	ldr	r1, [pc, #516]	; 11648 <strspn@plt+0x7ec>
   11440:	mov	r0, #0
   11444:	bl	10c94 <dcgettext@plt>
   11448:	mov	r2, #5
   1144c:	ldr	r1, [pc, #504]	; 1164c <strspn@plt+0x7f0>
   11450:	mov	r4, r0
   11454:	mov	r0, #0
   11458:	bl	10c94 <dcgettext@plt>
   1145c:	ldr	r2, [pc, #492]	; 11650 <strspn@plt+0x7f4>
   11460:	mov	r3, r4
   11464:	str	r2, [sp]
   11468:	ldr	r1, [pc, #484]	; 11654 <strspn@plt+0x7f8>
   1146c:	ldr	r2, [pc, #484]	; 11658 <strspn@plt+0x7fc>
   11470:	str	r0, [sp, #4]
   11474:	mov	r0, #1
   11478:	bl	10da8 <__printf_chk@plt>
   1147c:	mov	r2, #5
   11480:	ldr	r1, [pc, #468]	; 1165c <strspn@plt+0x800>
   11484:	mov	r0, #0
   11488:	bl	10c94 <dcgettext@plt>
   1148c:	ldr	r2, [pc, #460]	; 11660 <strspn@plt+0x804>
   11490:	mov	r1, r0
   11494:	mov	r0, #1
   11498:	bl	10da8 <__printf_chk@plt>
   1149c:	mov	r0, #0
   114a0:	bl	10d30 <exit@plt>
   114a4:	ldr	r3, [pc, #440]	; 11664 <strspn@plt+0x808>
   114a8:	ldr	r1, [pc, #440]	; 11668 <strspn@plt+0x80c>
   114ac:	mov	r2, #5
   114b0:	mov	r0, #0
   114b4:	ldr	r4, [r3]
   114b8:	bl	10c94 <dcgettext@plt>
   114bc:	ldr	r3, [pc, #312]	; 115fc <strspn@plt+0x7a0>
   114c0:	mov	r1, #1
   114c4:	ldr	r3, [r3]
   114c8:	mov	r2, r0
   114cc:	mov	r0, r4
   114d0:	bl	10dc0 <__fprintf_chk@plt>
   114d4:	mov	r0, #1
   114d8:	bl	10d30 <exit@plt>
   114dc:	ldr	r2, [sp, #12]
   114e0:	adds	r3, r5, #0
   114e4:	movne	r3, #1
   114e8:	cmp	r2, #0
   114ec:	moveq	r2, r3
   114f0:	movne	r2, #0
   114f4:	cmp	r2, #0
   114f8:	beq	1125c <strspn@plt+0x400>
   114fc:	ldr	r9, [pc, #268]	; 11610 <strspn@plt+0x7b4>
   11500:	ldr	r0, [sp, #16]
   11504:	mov	r1, r5
   11508:	bl	1176c <strspn@plt+0x910>
   1150c:	b	1152c <strspn@plt+0x6d0>
   11510:	mov	r1, r4
   11514:	bl	126e8 <strspn@plt+0x188c>
   11518:	mov	r1, r5
   1151c:	bl	1176c <strspn@plt+0x910>
   11520:	ldr	r3, [r9]
   11524:	add	r3, r3, #1
   11528:	str	r3, [r9]
   1152c:	ldr	r3, [r9]
   11530:	ldr	r0, [r6, r3, lsl #2]
   11534:	cmp	r0, #0
   11538:	bne	11510 <strspn@plt+0x6b4>
   1153c:	b	110c8 <strspn@plt+0x26c>
   11540:	mov	r2, #5
   11544:	ldr	r1, [pc, #288]	; 1166c <strspn@plt+0x810>
   11548:	mov	r0, r4
   1154c:	bl	10c94 <dcgettext@plt>
   11550:	bl	10d6c <warnx@plt>
   11554:	ldr	r3, [pc, #264]	; 11664 <strspn@plt+0x808>
   11558:	mov	r0, r4
   1155c:	mov	r2, #5
   11560:	ldr	r1, [pc, #256]	; 11668 <strspn@plt+0x80c>
   11564:	b	114b4 <strspn@plt+0x658>
   11568:	mov	r2, #5
   1156c:	ldr	r1, [pc, #252]	; 11670 <strspn@plt+0x814>
   11570:	bl	10c94 <dcgettext@plt>
   11574:	bl	10d6c <warnx@plt>
   11578:	mov	r3, #7
   1157c:	str	r3, [sp, #20]
   11580:	b	11254 <strspn@plt+0x3f8>
   11584:	ldr	r1, [pc, #232]	; 11674 <strspn@plt+0x818>
   11588:	mov	r2, #5
   1158c:	mov	r0, #0
   11590:	bl	10c94 <dcgettext@plt>
   11594:	mov	r1, r0
   11598:	mov	r0, #1
   1159c:	bl	10de4 <errx@plt>
   115a0:	ldr	r3, [pc, #64]	; 115e8 <strspn@plt+0x78c>
   115a4:	ldr	r0, [r3]
   115a8:	cmp	r0, #0
   115ac:	bne	11188 <strspn@plt+0x32c>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #188]	; 11678 <strspn@plt+0x81c>
   115b8:	bl	10c94 <dcgettext@plt>
   115bc:	mov	r1, r7
   115c0:	bl	10d6c <warnx@plt>
   115c4:	b	11188 <strspn@plt+0x32c>
   115c8:	andeq	r3, r1, ip, lsr #26
   115cc:	andeq	r3, r1, r8, lsr ip
   115d0:	andeq	r3, r1, ip, asr #24
   115d4:	andeq	r3, r1, ip, asr fp
   115d8:	strheq	r4, [r1], -r8
   115dc:	andeq	r5, r2, r8, lsr #32
   115e0:	andeq	r1, r1, r4, ror r8
   115e4:	andeq	r3, r1, ip, ror #25
   115e8:	andeq	r5, r2, r0, lsr r0
   115ec:			; <UNDEFINED> instruction: 0x00013cbc
   115f0:	andeq	r3, r1, r8, asr ip
   115f4:	andeq	r3, r1, r4, ror ip
   115f8:	andeq	r3, r1, r4, lsl #26
   115fc:	andeq	r5, r2, r0, lsl r0
   11600:	andeq	r3, r1, r0, lsl sp
   11604:	ldrdeq	r3, [r1], -r4
   11608:	andeq	r3, r1, ip, asr #22
   1160c:	andeq	r4, r1, ip, asr r1
   11610:	andeq	r5, r2, r8, lsl r0
   11614:	andeq	r4, r1, r8, lsr r1
   11618:	andeq	r4, r1, r8, asr #1
   1161c:	andeq	r5, r2, r4, lsr #32
   11620:	andeq	r3, r1, r4, lsr #26
   11624:	andeq	r3, r1, r0, lsr sp
   11628:	andeq	r3, r1, r0, lsr #27
   1162c:	andeq	r3, r1, r4, ror #27
   11630:	strdeq	r3, [r1], -r0
   11634:	andeq	r3, r1, r8, ror lr
   11638:	andeq	r3, r1, ip, lsl #30
   1163c:	andeq	r3, r1, ip, asr #30
   11640:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11644:	andeq	r3, r1, r4, asr #31
   11648:	andeq	r4, r1, r4, lsl r0
   1164c:	andeq	r4, r1, r8, lsr #32
   11650:	andeq	r4, r1, r8, asr r0
   11654:	andeq	r4, r1, r4, asr #32
   11658:	andeq	r4, r1, r8, lsr r0
   1165c:	andeq	r4, r1, r8, rrx
   11660:	andeq	r4, r1, r4, lsl #1
   11664:	andeq	r5, r2, r0, lsr #32
   11668:	muleq	r1, r0, r0
   1166c:	andeq	r4, r1, r0, asr r1
   11670:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11674:	andeq	r3, r1, ip, lsl #25
   11678:	andeq	r4, r1, r0, lsr #2
   1167c:	mov	fp, #0
   11680:	mov	lr, #0
   11684:	pop	{r1}		; (ldr r1, [sp], #4)
   11688:	mov	r2, sp
   1168c:	push	{r2}		; (str r2, [sp, #-4]!)
   11690:	push	{r0}		; (str r0, [sp, #-4]!)
   11694:	ldr	ip, [pc, #16]	; 116ac <strspn@plt+0x850>
   11698:	push	{ip}		; (str ip, [sp, #-4]!)
   1169c:	ldr	r0, [pc, #12]	; 116b0 <strspn@plt+0x854>
   116a0:	ldr	r3, [pc, #12]	; 116b4 <strspn@plt+0x858>
   116a4:	bl	10d00 <__libc_start_main@plt>
   116a8:	bl	10e44 <abort@plt>
   116ac:	andeq	r3, r1, r4, lsr #22
   116b0:	andeq	r0, r1, r8, ror #28
   116b4:	andeq	r3, r1, r4, asr #21
   116b8:	ldr	r3, [pc, #20]	; 116d4 <strspn@plt+0x878>
   116bc:	ldr	r2, [pc, #20]	; 116d8 <strspn@plt+0x87c>
   116c0:	add	r3, pc, r3
   116c4:	ldr	r2, [r3, r2]
   116c8:	cmp	r2, #0
   116cc:	bxeq	lr
   116d0:	b	10d0c <__gmon_start__@plt>
   116d4:	andeq	r3, r1, ip, asr r8
   116d8:	ldrdeq	r0, [r0], -r8
   116dc:	ldr	r0, [pc, #24]	; 116fc <strspn@plt+0x8a0>
   116e0:	ldr	r3, [pc, #24]	; 11700 <strspn@plt+0x8a4>
   116e4:	cmp	r3, r0
   116e8:	bxeq	lr
   116ec:	ldr	r3, [pc, #16]	; 11704 <strspn@plt+0x8a8>
   116f0:	cmp	r3, #0
   116f4:	bxeq	lr
   116f8:	bx	r3
   116fc:	andeq	r5, r2, ip
   11700:	andeq	r5, r2, ip
   11704:	andeq	r0, r0, r0
   11708:	ldr	r0, [pc, #36]	; 11734 <strspn@plt+0x8d8>
   1170c:	ldr	r1, [pc, #36]	; 11738 <strspn@plt+0x8dc>
   11710:	sub	r1, r1, r0
   11714:	asr	r1, r1, #2
   11718:	add	r1, r1, r1, lsr #31
   1171c:	asrs	r1, r1, #1
   11720:	bxeq	lr
   11724:	ldr	r3, [pc, #16]	; 1173c <strspn@plt+0x8e0>
   11728:	cmp	r3, #0
   1172c:	bxeq	lr
   11730:	bx	r3
   11734:	andeq	r5, r2, ip
   11738:	andeq	r5, r2, ip
   1173c:	andeq	r0, r0, r0
   11740:	push	{r4, lr}
   11744:	ldr	r4, [pc, #24]	; 11764 <strspn@plt+0x908>
   11748:	ldrb	r3, [r4]
   1174c:	cmp	r3, #0
   11750:	popne	{r4, pc}
   11754:	bl	116dc <strspn@plt+0x880>
   11758:	mov	r3, #1
   1175c:	strb	r3, [r4]
   11760:	pop	{r4, pc}
   11764:	andeq	r5, r2, ip, lsr #32
   11768:	b	11708 <strspn@plt+0x8ac>
   1176c:	mov	r2, r0
   11770:	push	{r4, r5, r6, lr}
   11774:	ldr	r0, [pc, #140]	; 11808 <strspn@plt+0x9ac>
   11778:	bl	10d3c <syscall@plt>
   1177c:	cmn	r0, #1
   11780:	beq	117ec <strspn@plt+0x990>
   11784:	mov	r4, r0
   11788:	mov	r2, #5
   1178c:	ldr	r1, [pc, #120]	; 1180c <strspn@plt+0x9b0>
   11790:	mov	r0, #0
   11794:	bl	10c94 <dcgettext@plt>
   11798:	asr	r5, r4, #13
   1179c:	cmp	r5, #3
   117a0:	mov	r6, r0
   117a4:	bhi	117c0 <strspn@plt+0x964>
   117a8:	ldr	r3, [pc, #96]	; 11810 <strspn@plt+0x9b4>
   117ac:	ldr	r6, [r3, r5, lsl #2]
   117b0:	bne	117c0 <strspn@plt+0x964>
   117b4:	mov	r0, r6
   117b8:	pop	{r4, r5, r6, lr}
   117bc:	b	10ce8 <puts@plt>
   117c0:	mov	r2, #5
   117c4:	ldr	r1, [pc, #72]	; 11814 <strspn@plt+0x9b8>
   117c8:	mov	r0, #0
   117cc:	bl	10c94 <dcgettext@plt>
   117d0:	lsl	r3, r4, #19
   117d4:	mov	r2, r6
   117d8:	lsr	r3, r3, #19
   117dc:	pop	{r4, r5, r6, lr}
   117e0:	mov	r1, r0
   117e4:	mov	r0, #1
   117e8:	b	10da8 <__printf_chk@plt>
   117ec:	ldr	r1, [pc, #36]	; 11818 <strspn@plt+0x9bc>
   117f0:	mov	r2, #5
   117f4:	mov	r0, #0
   117f8:	bl	10c94 <dcgettext@plt>
   117fc:	mov	r1, r0
   11800:	mov	r0, #1
   11804:	bl	10cd0 <err@plt>
   11808:	andeq	r0, r0, fp, lsr r1
   1180c:	andeq	r3, r1, r0, lsl #24
   11810:	andeq	r3, r1, ip, asr #22
   11814:	andeq	r3, r1, r8, lsl #24
   11818:	andeq	r3, r1, ip, ror #23
   1181c:	mov	ip, r3
   11820:	push	{r4, lr}
   11824:	orr	r3, r2, r1, lsl #13
   11828:	mov	r2, r0
   1182c:	mov	r1, ip
   11830:	ldr	r0, [pc, #48]	; 11868 <strspn@plt+0xa0c>
   11834:	bl	10d3c <syscall@plt>
   11838:	cmn	r0, #1
   1183c:	popne	{r4, pc}
   11840:	ldr	r3, [pc, #36]	; 1186c <strspn@plt+0xa10>
   11844:	ldr	r0, [r3]
   11848:	cmp	r0, #0
   1184c:	popne	{r4, pc}
   11850:	ldr	r1, [pc, #24]	; 11870 <strspn@plt+0xa14>
   11854:	mov	r2, #5
   11858:	bl	10c94 <dcgettext@plt>
   1185c:	mov	r1, r0
   11860:	mov	r0, #1
   11864:	bl	10cd0 <err@plt>
   11868:	andeq	r0, r0, sl, lsr r1
   1186c:	andeq	r5, r2, r0, lsr r0
   11870:	andeq	r3, r1, r8, lsl ip
   11874:	ldr	r3, [pc, #292]	; 119a0 <strspn@plt+0xb44>
   11878:	push	{r4, r5, r6, lr}
   1187c:	ldr	r4, [r3]
   11880:	mov	r0, r4
   11884:	bl	10cdc <__fpending@plt>
   11888:	mov	r6, r0
   1188c:	mov	r0, r4
   11890:	bl	10c4c <ferror@plt>
   11894:	mov	r5, r0
   11898:	mov	r0, r4
   1189c:	bl	10dcc <fclose@plt>
   118a0:	cmp	r5, #0
   118a4:	mov	r4, r0
   118a8:	bne	11950 <strspn@plt+0xaf4>
   118ac:	cmp	r0, #0
   118b0:	beq	118cc <strspn@plt+0xa70>
   118b4:	bl	10d78 <__errno_location@plt>
   118b8:	cmp	r6, #0
   118bc:	ldr	r3, [r0]
   118c0:	bne	11928 <strspn@plt+0xacc>
   118c4:	cmp	r3, #9
   118c8:	bne	11928 <strspn@plt+0xacc>
   118cc:	ldr	r3, [pc, #208]	; 119a4 <strspn@plt+0xb48>
   118d0:	ldr	r4, [r3]
   118d4:	mov	r0, r4
   118d8:	bl	10cdc <__fpending@plt>
   118dc:	mov	r6, r0
   118e0:	mov	r0, r4
   118e4:	bl	10c4c <ferror@plt>
   118e8:	mov	r5, r0
   118ec:	mov	r0, r4
   118f0:	bl	10dcc <fclose@plt>
   118f4:	cmp	r5, #0
   118f8:	mov	r4, r0
   118fc:	bne	11984 <strspn@plt+0xb28>
   11900:	cmp	r0, #0
   11904:	popeq	{r4, r5, r6, pc}
   11908:	cmp	r6, #0
   1190c:	bne	11920 <strspn@plt+0xac4>
   11910:	bl	10d78 <__errno_location@plt>
   11914:	ldr	r3, [r0]
   11918:	cmp	r3, #9
   1191c:	popeq	{r4, r5, r6, pc}
   11920:	mov	r0, #1
   11924:	bl	10c64 <_exit@plt>
   11928:	cmp	r3, #32
   1192c:	beq	118cc <strspn@plt+0xa70>
   11930:	cmp	r3, #0
   11934:	beq	1196c <strspn@plt+0xb10>
   11938:	mov	r2, #5
   1193c:	ldr	r1, [pc, #100]	; 119a8 <strspn@plt+0xb4c>
   11940:	mov	r0, #0
   11944:	bl	10c94 <dcgettext@plt>
   11948:	bl	10df0 <warn@plt>
   1194c:	b	11920 <strspn@plt+0xac4>
   11950:	bl	10d78 <__errno_location@plt>
   11954:	cmp	r4, #0
   11958:	ldr	r3, [r0]
   1195c:	bne	11928 <strspn@plt+0xacc>
   11960:	cmp	r3, #32
   11964:	strne	r4, [r0]
   11968:	beq	118cc <strspn@plt+0xa70>
   1196c:	mov	r2, #5
   11970:	ldr	r1, [pc, #48]	; 119a8 <strspn@plt+0xb4c>
   11974:	mov	r0, #0
   11978:	bl	10c94 <dcgettext@plt>
   1197c:	bl	10d6c <warnx@plt>
   11980:	b	11920 <strspn@plt+0xac4>
   11984:	cmp	r0, #0
   11988:	bne	11920 <strspn@plt+0xac4>
   1198c:	bl	10d78 <__errno_location@plt>
   11990:	ldr	r3, [r0]
   11994:	cmp	r3, #32
   11998:	strne	r4, [r0]
   1199c:	b	11920 <strspn@plt+0xac4>
   119a0:	andeq	r5, r2, r4, lsr #32
   119a4:	andeq	r5, r2, r0, lsr #32
   119a8:	andeq	r3, r1, ip, lsr #24
   119ac:	andeq	r0, r0, r0
   119b0:	cmp	r0, #0
   119b4:	mov	r3, #0
   119b8:	str	r3, [r1]
   119bc:	bxeq	lr
   119c0:	ldrsb	r2, [r0]
   119c4:	cmp	r2, #47	; 0x2f
   119c8:	bne	11a04 <strspn@plt+0xba8>
   119cc:	ldrsb	r3, [r0, #1]
   119d0:	cmp	r3, #47	; 0x2f
   119d4:	bne	11a0c <strspn@plt+0xbb0>
   119d8:	add	r3, r0, #1
   119dc:	b	119ec <strspn@plt+0xb90>
   119e0:	ldrsb	r2, [r3]
   119e4:	cmp	r2, #47	; 0x2f
   119e8:	bne	11a0c <strspn@plt+0xbb0>
   119ec:	cmp	r3, #0
   119f0:	mov	r0, r3
   119f4:	bxeq	lr
   119f8:	ldrsb	r2, [r3], #1
   119fc:	cmp	r2, #47	; 0x2f
   11a00:	beq	119e0 <strspn@plt+0xb84>
   11a04:	cmp	r2, #0
   11a08:	beq	11a48 <strspn@plt+0xbec>
   11a0c:	mov	r3, #1
   11a10:	str	r3, [r1]
   11a14:	ldrsb	r3, [r0, #1]
   11a18:	add	r2, r0, #1
   11a1c:	cmp	r3, #47	; 0x2f
   11a20:	cmpne	r3, #0
   11a24:	bxeq	lr
   11a28:	rsb	r3, r0, #1
   11a2c:	add	ip, r2, r3
   11a30:	str	ip, [r1]
   11a34:	ldrsb	ip, [r2, #1]!
   11a38:	cmp	ip, #0
   11a3c:	cmpne	ip, #47	; 0x2f
   11a40:	bne	11a2c <strspn@plt+0xbd0>
   11a44:	bx	lr
   11a48:	mov	r0, r2
   11a4c:	bx	lr
   11a50:	push	{r4, r5, r6, r7, r8, lr}
   11a54:	mov	r7, r1
   11a58:	ldrsb	r1, [r0]
   11a5c:	cmp	r1, #0
   11a60:	movne	r5, r0
   11a64:	movne	r4, #0
   11a68:	beq	11ad4 <strspn@plt+0xc78>
   11a6c:	cmp	r1, #92	; 0x5c
   11a70:	addne	r6, r5, r4
   11a74:	beq	11aa4 <strspn@plt+0xc48>
   11a78:	mov	r0, r7
   11a7c:	bl	10d60 <strchr@plt>
   11a80:	cmp	r0, #0
   11a84:	bne	11acc <strspn@plt+0xc70>
   11a88:	ldrsb	r1, [r6, #1]!
   11a8c:	add	r4, r4, #1
   11a90:	mov	r0, r4
   11a94:	cmp	r1, #0
   11a98:	popeq	{r4, r5, r6, r7, r8, pc}
   11a9c:	cmp	r1, #92	; 0x5c
   11aa0:	bne	11a78 <strspn@plt+0xc1c>
   11aa4:	add	r3, r5, r4
   11aa8:	ldrsb	r3, [r3, #1]
   11aac:	cmp	r3, #0
   11ab0:	beq	11acc <strspn@plt+0xc70>
   11ab4:	add	r4, r4, #2
   11ab8:	mov	r0, r4
   11abc:	ldrsb	r1, [r5, r4]
   11ac0:	cmp	r1, #0
   11ac4:	bne	11a6c <strspn@plt+0xc10>
   11ac8:	pop	{r4, r5, r6, r7, r8, pc}
   11acc:	mov	r0, r4
   11ad0:	pop	{r4, r5, r6, r7, r8, pc}
   11ad4:	mov	r0, r1
   11ad8:	pop	{r4, r5, r6, r7, r8, pc}
   11adc:	ldr	ip, [pc, #244]	; 11bd8 <strspn@plt+0xd7c>
   11ae0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ae4:	add	ip, pc, ip
   11ae8:	ldr	lr, [pc, #236]	; 11bdc <strspn@plt+0xd80>
   11aec:	sub	sp, sp, #12
   11af0:	mov	r5, #0
   11af4:	ldr	r7, [ip, lr]
   11af8:	mov	r4, r0
   11afc:	mov	r8, r1
   11b00:	ldr	r3, [r7]
   11b04:	mov	r0, ip
   11b08:	mov	r9, r2
   11b0c:	str	r5, [sp]
   11b10:	str	r3, [sp, #4]
   11b14:	bl	10d78 <__errno_location@plt>
   11b18:	cmp	r4, r5
   11b1c:	str	r5, [r0]
   11b20:	beq	11b30 <strspn@plt+0xcd4>
   11b24:	ldrsb	r3, [r4]
   11b28:	cmp	r3, r5
   11b2c:	bne	11b50 <strspn@plt+0xcf4>
   11b30:	ldr	r1, [pc, #168]	; 11be0 <strspn@plt+0xd84>
   11b34:	mov	r3, r4
   11b38:	add	r1, pc, r1
   11b3c:	mov	r2, r8
   11b40:	ldr	r0, [r1]
   11b44:	ldr	r1, [pc, #152]	; 11be4 <strspn@plt+0xd88>
   11b48:	add	r1, pc, r1
   11b4c:	bl	10de4 <errx@plt>
   11b50:	mov	r6, r0
   11b54:	mov	r2, r9
   11b58:	mov	r3, r5
   11b5c:	mov	r1, sp
   11b60:	mov	r0, r4
   11b64:	bl	10c88 <__strtoull_internal@plt>
   11b68:	ldr	r2, [r6]
   11b6c:	cmp	r2, r5
   11b70:	bne	11bac <strspn@plt+0xd50>
   11b74:	ldr	r3, [sp]
   11b78:	cmp	r3, r4
   11b7c:	beq	11b30 <strspn@plt+0xcd4>
   11b80:	cmp	r3, r5
   11b84:	beq	11b94 <strspn@plt+0xd38>
   11b88:	ldrsb	r3, [r3]
   11b8c:	cmp	r3, r5
   11b90:	bne	11b30 <strspn@plt+0xcd4>
   11b94:	ldr	r2, [sp, #4]
   11b98:	ldr	r3, [r7]
   11b9c:	cmp	r2, r3
   11ba0:	bne	11bd4 <strspn@plt+0xd78>
   11ba4:	add	sp, sp, #12
   11ba8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11bac:	ldr	r3, [pc, #52]	; 11be8 <strspn@plt+0xd8c>
   11bb0:	cmp	r2, #34	; 0x22
   11bb4:	add	r3, pc, r3
   11bb8:	ldr	r0, [r3]
   11bbc:	bne	11b30 <strspn@plt+0xcd4>
   11bc0:	ldr	r1, [pc, #36]	; 11bec <strspn@plt+0xd90>
   11bc4:	mov	r3, r4
   11bc8:	mov	r2, r8
   11bcc:	add	r1, pc, r1
   11bd0:	bl	10cd0 <err@plt>
   11bd4:	bl	10cac <__stack_chk_fail@plt>
   11bd8:	andeq	r3, r1, r8, lsr r4
   11bdc:	ldrdeq	r0, [r0], -r4
   11be0:	andeq	r3, r1, r8, asr #9
   11be4:	andeq	r2, r0, r8, lsl #13
   11be8:	andeq	r3, r1, ip, asr #8
   11bec:	andeq	r2, r0, r4, lsl #12
   11bf0:	push	{r4, lr}
   11bf4:	mov	r5, r0
   11bf8:	mov	r4, r1
   11bfc:	bl	10d78 <__errno_location@plt>
   11c00:	ldr	ip, [pc, #32]	; 11c28 <strspn@plt+0xdcc>
   11c04:	ldr	r1, [pc, #32]	; 11c2c <strspn@plt+0xdd0>
   11c08:	add	ip, pc, ip
   11c0c:	mov	lr, #34	; 0x22
   11c10:	mov	r3, r5
   11c14:	mov	r2, r4
   11c18:	add	r1, pc, r1
   11c1c:	str	lr, [r0]
   11c20:	ldr	r0, [ip]
   11c24:	bl	10cd0 <err@plt>
   11c28:	strdeq	r3, [r1], -r8
   11c2c:			; <UNDEFINED> instruction: 0x000025b8
   11c30:	push	{r4, r5, r6, lr}
   11c34:	mov	r4, r0
   11c38:	mov	r5, r1
   11c3c:	bl	11adc <strspn@plt+0xc80>
   11c40:	mov	r3, #0
   11c44:	mvn	r2, #0
   11c48:	cmp	r1, r3
   11c4c:	cmpeq	r0, r2
   11c50:	popls	{r4, r5, r6, pc}
   11c54:	mov	r1, r5
   11c58:	mov	r0, r4
   11c5c:	bl	11bf0 <strspn@plt+0xd94>
   11c60:	ldr	r3, [pc, #8]	; 11c70 <strspn@plt+0xe14>
   11c64:	add	r3, pc, r3
   11c68:	str	r0, [r3]
   11c6c:	bx	lr
   11c70:	muleq	r1, ip, r3
   11c74:	ldr	r3, [pc, #1648]	; 122ec <strspn@plt+0x1490>
   11c78:	ldr	ip, [pc, #1648]	; 122f0 <strspn@plt+0x1494>
   11c7c:	add	r3, pc, r3
   11c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c84:	mov	r5, r1
   11c88:	ldr	r1, [r3, ip]
   11c8c:	sub	sp, sp, #52	; 0x34
   11c90:	mov	ip, r1
   11c94:	mov	r8, r0
   11c98:	str	r1, [sp, #24]
   11c9c:	mov	r0, #0
   11ca0:	mov	r1, #0
   11ca4:	ldr	r3, [ip]
   11ca8:	strd	r0, [r5]
   11cac:	mov	r9, r2
   11cb0:	str	r3, [sp, #44]	; 0x2c
   11cb4:	bl	10d78 <__errno_location@plt>
   11cb8:	cmp	r8, #0
   11cbc:	mov	r4, r0
   11cc0:	beq	11ea0 <strspn@plt+0x1044>
   11cc4:	ldrsb	fp, [r8]
   11cc8:	cmp	fp, #0
   11ccc:	beq	11ea0 <strspn@plt+0x1044>
   11cd0:	bl	10d24 <__ctype_b_loc@plt>
   11cd4:	mov	r2, r8
   11cd8:	ldr	r1, [r0]
   11cdc:	b	11ce4 <strspn@plt+0xe88>
   11ce0:	ldrsb	fp, [r2, #1]!
   11ce4:	uxtb	r3, fp
   11ce8:	lsl	r3, r3, #1
   11cec:	ldrh	ip, [r1, r3]
   11cf0:	ands	ip, ip, #8192	; 0x2000
   11cf4:	bne	11ce0 <strspn@plt+0xe84>
   11cf8:	cmp	fp, #45	; 0x2d
   11cfc:	beq	11ea0 <strspn@plt+0x1044>
   11d00:	add	fp, sp, #40	; 0x28
   11d04:	mov	r3, ip
   11d08:	mov	r2, ip
   11d0c:	str	ip, [r4]
   11d10:	mov	r1, fp
   11d14:	mov	r0, r8
   11d18:	str	ip, [sp, #40]	; 0x28
   11d1c:	bl	10c88 <__strtoull_internal@plt>
   11d20:	ldr	sl, [sp, #40]	; 0x28
   11d24:	cmp	sl, r8
   11d28:	mov	r2, r0
   11d2c:	mov	r3, r1
   11d30:	ldr	r0, [r4]
   11d34:	strd	r2, [sp, #16]
   11d38:	beq	12020 <strspn@plt+0x11c4>
   11d3c:	cmp	r0, #0
   11d40:	bne	11ec8 <strspn@plt+0x106c>
   11d44:	cmp	sl, #0
   11d48:	beq	12054 <strspn@plt+0x11f8>
   11d4c:	ldrsb	r0, [sl]
   11d50:	cmp	r0, #0
   11d54:	beq	12048 <strspn@plt+0x11ec>
   11d58:	mov	r8, #0
   11d5c:	mov	r2, #0
   11d60:	mov	r3, #0
   11d64:	str	r9, [sp, #32]
   11d68:	mov	r6, fp
   11d6c:	mov	r9, sl
   11d70:	mov	r7, r8
   11d74:	mov	sl, r2
   11d78:	mov	fp, r3
   11d7c:	str	r5, [sp, #28]
   11d80:	ldrsb	r2, [r9, #1]
   11d84:	cmp	r2, #105	; 0x69
   11d88:	beq	11f0c <strspn@plt+0x10b0>
   11d8c:	bic	r1, r2, #32
   11d90:	cmp	r1, #66	; 0x42
   11d94:	bne	1202c <strspn@plt+0x11d0>
   11d98:	ldrsb	r2, [r9, #2]
   11d9c:	cmp	r2, #0
   11da0:	beq	12210 <strspn@plt+0x13b4>
   11da4:	bl	10e08 <localeconv@plt>
   11da8:	cmp	r0, #0
   11dac:	beq	11ea0 <strspn@plt+0x1044>
   11db0:	ldr	r2, [r0]
   11db4:	cmp	r2, #0
   11db8:	beq	11ea0 <strspn@plt+0x1044>
   11dbc:	mov	r0, r2
   11dc0:	str	r2, [sp]
   11dc4:	bl	10d54 <strlen@plt>
   11dc8:	orrs	r3, sl, fp
   11dcc:	mov	r5, r0
   11dd0:	bne	11ea0 <strspn@plt+0x1044>
   11dd4:	ldrsb	r1, [r9]
   11dd8:	cmp	r1, #0
   11ddc:	beq	11ea0 <strspn@plt+0x1044>
   11de0:	ldr	r2, [sp]
   11de4:	mov	r1, r9
   11de8:	mov	r0, r2
   11dec:	mov	r2, r5
   11df0:	bl	10e38 <strncmp@plt>
   11df4:	cmp	r0, #0
   11df8:	bne	11ea0 <strspn@plt+0x1044>
   11dfc:	ldrsb	r2, [r9, r5]
   11e00:	add	r5, r9, r5
   11e04:	cmp	r2, #48	; 0x30
   11e08:	bne	11e28 <strspn@plt+0xfcc>
   11e0c:	add	r8, r8, #1
   11e10:	sub	r1, r8, r5
   11e14:	mov	r3, r5
   11e18:	add	r8, r3, r1
   11e1c:	ldrsb	r2, [r3, #1]!
   11e20:	cmp	r2, #48	; 0x30
   11e24:	beq	11e18 <strspn@plt+0xfbc>
   11e28:	mov	r3, #0
   11e2c:	str	r7, [r4]
   11e30:	mov	r2, r3
   11e34:	mov	r1, r6
   11e38:	mov	r0, r5
   11e3c:	str	r7, [sp, #40]	; 0x28
   11e40:	bl	10c88 <__strtoull_internal@plt>
   11e44:	ldr	r9, [sp, #40]	; 0x28
   11e48:	cmp	r9, r5
   11e4c:	mov	sl, r0
   11e50:	mov	fp, r1
   11e54:	beq	1201c <strspn@plt+0x11c0>
   11e58:	ldr	ip, [r4]
   11e5c:	cmp	ip, #0
   11e60:	beq	11ef8 <strspn@plt+0x109c>
   11e64:	subs	r3, r0, #1
   11e68:	str	r3, [sp, #8]
   11e6c:	sbc	r3, r1, #0
   11e70:	str	r3, [sp, #12]
   11e74:	ldrd	r2, [sp, #8]
   11e78:	mvn	r1, #0
   11e7c:	mvn	r0, #2
   11e80:	cmp	r3, r1
   11e84:	cmpeq	r2, r0
   11e88:	bhi	1224c <strspn@plt+0x13f0>
   11e8c:	cmp	r9, #0
   11e90:	beq	11ea0 <strspn@plt+0x1044>
   11e94:	ldrsb	r2, [r9]
   11e98:	cmp	r2, #0
   11e9c:	bne	11d80 <strspn@plt+0xf24>
   11ea0:	mov	r3, #22
   11ea4:	mvn	r0, #21
   11ea8:	str	r3, [r4]
   11eac:	ldr	r3, [sp, #24]
   11eb0:	ldr	r2, [sp, #44]	; 0x2c
   11eb4:	ldr	r3, [r3]
   11eb8:	cmp	r2, r3
   11ebc:	bne	122e8 <strspn@plt+0x148c>
   11ec0:	add	sp, sp, #52	; 0x34
   11ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ec8:	subs	r6, r2, #1
   11ecc:	sbc	r7, r3, #0
   11ed0:	mvn	r3, #0
   11ed4:	mvn	r2, #2
   11ed8:	cmp	r7, r3
   11edc:	cmpeq	r6, r2
   11ee0:	bls	11d44 <strspn@plt+0xee8>
   11ee4:	rsb	r0, r0, #0
   11ee8:	cmp	r0, #0
   11eec:	bge	11eac <strspn@plt+0x1050>
   11ef0:	rsb	r3, r0, #0
   11ef4:	b	11ea8 <strspn@plt+0x104c>
   11ef8:	orrs	r3, sl, fp
   11efc:	bne	11e8c <strspn@plt+0x1030>
   11f00:	ldrsb	r2, [r9, #1]
   11f04:	cmp	r2, #105	; 0x69
   11f08:	bne	11d8c <strspn@plt+0xf30>
   11f0c:	ldrsb	r2, [r9, #2]
   11f10:	bic	r2, r2, #32
   11f14:	cmp	r2, #66	; 0x42
   11f18:	bne	11da4 <strspn@plt+0xf48>
   11f1c:	ldrsb	r2, [r9, #3]
   11f20:	cmp	r2, #0
   11f24:	bne	11da4 <strspn@plt+0xf48>
   11f28:	strd	sl, [sp]
   11f2c:	mov	sl, r9
   11f30:	ldr	r9, [sp, #32]
   11f34:	mov	r3, #1024	; 0x400
   11f38:	ldr	r5, [sp, #28]
   11f3c:	str	r3, [sp, #28]
   11f40:	ldrsb	r7, [sl]
   11f44:	ldr	r6, [pc, #936]	; 122f4 <strspn@plt+0x1498>
   11f48:	add	r6, pc, r6
   11f4c:	mov	r1, r7
   11f50:	mov	r0, r6
   11f54:	bl	10d60 <strchr@plt>
   11f58:	cmp	r0, #0
   11f5c:	beq	1222c <strspn@plt+0x13d0>
   11f60:	sub	ip, r0, r6
   11f64:	add	fp, ip, #1
   11f68:	cmp	fp, #0
   11f6c:	beq	12038 <strspn@plt+0x11dc>
   11f70:	ldr	r3, [sp, #20]
   11f74:	ldr	r6, [sp, #28]
   11f78:	cmp	r3, #0
   11f7c:	mov	r0, #0
   11f80:	asr	r7, r6, #31
   11f84:	mov	r1, #0
   11f88:	bne	12288 <strspn@plt+0x142c>
   11f8c:	orrs	r3, r0, r1
   11f90:	bne	1207c <strspn@plt+0x1220>
   11f94:	str	fp, [sp, #32]
   11f98:	sub	ip, ip, #1
   11f9c:	str	r8, [sp, #36]	; 0x24
   11fa0:	mov	fp, r4
   11fa4:	ldrd	r0, [sp, #16]
   11fa8:	mov	lr, r5
   11fac:	mov	sl, r9
   11fb0:	b	11fc0 <strspn@plt+0x1164>
   11fb4:	orrs	r3, r4, r5
   11fb8:	sub	ip, ip, #1
   11fbc:	bne	12064 <strspn@plt+0x1208>
   11fc0:	mul	r2, r0, r7
   11fc4:	cmn	ip, #1
   11fc8:	mla	r2, r6, r1, r2
   11fcc:	umull	r0, r1, r0, r6
   11fd0:	add	r2, r2, r1
   11fd4:	mov	r1, r2
   11fd8:	beq	121f0 <strspn@plt+0x1394>
   11fdc:	cmp	r2, #0
   11fe0:	mov	r4, #0
   11fe4:	mov	r5, #0
   11fe8:	beq	11fb4 <strspn@plt+0x1158>
   11fec:	umull	r2, r3, r6, r2
   11ff0:	umull	r8, r9, r0, r6
   11ff4:	strd	r2, [sp, #8]
   11ff8:	mov	r8, r9
   11ffc:	ldr	r3, [sp, #12]
   12000:	adds	r8, r2, r8
   12004:	mov	r2, #0
   12008:	adc	r3, r3, r2
   1200c:	cmp	r3, r2
   12010:	movne	r4, #1
   12014:	movne	r5, #0
   12018:	b	11fb4 <strspn@plt+0x1158>
   1201c:	ldr	r0, [r4]
   12020:	cmp	r0, #0
   12024:	beq	11ea0 <strspn@plt+0x1044>
   12028:	b	11ee4 <strspn@plt+0x1088>
   1202c:	cmp	r2, #0
   12030:	bne	11da4 <strspn@plt+0xf48>
   12034:	b	11f28 <strspn@plt+0x10cc>
   12038:	cmp	r9, #0
   1203c:	movne	r0, fp
   12040:	bne	12088 <strspn@plt+0x122c>
   12044:	mov	r0, r9
   12048:	ldrd	r2, [sp, #16]
   1204c:	strd	r2, [r5]
   12050:	b	11eac <strspn@plt+0x1050>
   12054:	ldrd	r2, [sp, #16]
   12058:	mov	r0, sl
   1205c:	strd	r2, [r5]
   12060:	b	11eac <strspn@plt+0x1050>
   12064:	mov	r4, fp
   12068:	ldr	r8, [sp, #36]	; 0x24
   1206c:	ldr	fp, [sp, #32]
   12070:	mov	r5, lr
   12074:	mov	r9, sl
   12078:	strd	r0, [sp, #16]
   1207c:	mvn	r0, #33	; 0x21
   12080:	cmp	r9, #0
   12084:	beq	1208c <strspn@plt+0x1230>
   12088:	str	fp, [r9]
   1208c:	ldrd	r2, [sp]
   12090:	mov	r1, r2
   12094:	orrs	r3, r1, r3
   12098:	movne	r3, #1
   1209c:	moveq	r3, #0
   120a0:	cmp	fp, #0
   120a4:	moveq	r3, #0
   120a8:	cmp	r3, #0
   120ac:	beq	121e4 <strspn@plt+0x1388>
   120b0:	ldr	r3, [pc, #576]	; 122f8 <strspn@plt+0x149c>
   120b4:	ldr	r1, [pc, #576]	; 122fc <strspn@plt+0x14a0>
   120b8:	umull	ip, r3, r3, r8
   120bc:	smull	ip, r1, r1, r8
   120c0:	lsr	r3, r3, #1
   120c4:	rsb	r1, r1, r8, asr #31
   120c8:	add	r3, r3, r3, lsl #1
   120cc:	add	r1, r1, fp
   120d0:	subs	r3, r8, r3
   120d4:	sub	r6, r1, #1
   120d8:	bne	12254 <strspn@plt+0x13f8>
   120dc:	ldrd	r8, [sp]
   120e0:	adds	r3, r8, r8
   120e4:	adc	r2, r9, r9
   120e8:	adds	r3, r3, r8
   120ec:	adc	r2, r2, r9
   120f0:	lsl	ip, r3, #5
   120f4:	lsl	lr, r2, #5
   120f8:	orr	lr, lr, r3, lsr #27
   120fc:	adds	r3, r3, ip
   12100:	adc	r2, r2, lr
   12104:	adds	r3, r8, r3
   12108:	str	r3, [sp]
   1210c:	ldr	r3, [sp, #4]
   12110:	adc	r3, r3, r2
   12114:	str	r3, [sp, #4]
   12118:	cmp	r6, #0
   1211c:	blt	11ea0 <strspn@plt+0x1044>
   12120:	beq	121c8 <strspn@plt+0x136c>
   12124:	ldr	r3, [sp, #4]
   12128:	ldr	r8, [sp, #28]
   1212c:	cmp	r3, #0
   12130:	mov	r6, #0
   12134:	asr	r9, r8, #31
   12138:	mov	r7, #0
   1213c:	bne	122bc <strspn@plt+0x1460>
   12140:	orrs	r3, r6, r7
   12144:	bne	121c8 <strspn@plt+0x136c>
   12148:	sub	r1, r1, #3
   1214c:	ldrd	r2, [sp]
   12150:	mov	lr, r4
   12154:	str	r5, [sp, #8]
   12158:	b	12168 <strspn@plt+0x130c>
   1215c:	orrs	ip, r6, r7
   12160:	sub	r1, r1, #1
   12164:	bne	121bc <strspn@plt+0x1360>
   12168:	mul	ip, r2, r9
   1216c:	cmn	r1, #1
   12170:	mla	ip, r8, r3, ip
   12174:	umull	r2, r3, r2, r8
   12178:	add	ip, ip, r3
   1217c:	mov	r3, ip
   12180:	beq	121bc <strspn@plt+0x1360>
   12184:	cmp	ip, #0
   12188:	mov	r6, #0
   1218c:	mov	r7, #0
   12190:	beq	1215c <strspn@plt+0x1300>
   12194:	umull	sl, fp, r2, r8
   12198:	umull	r4, r5, r8, ip
   1219c:	mov	ip, fp
   121a0:	adds	ip, r4, ip
   121a4:	mov	ip, #0
   121a8:	adc	ip, r5, ip
   121ac:	cmp	ip, #0
   121b0:	movne	r6, #1
   121b4:	movne	r7, #0
   121b8:	b	1215c <strspn@plt+0x1300>
   121bc:	ldr	r5, [sp, #8]
   121c0:	mov	r4, lr
   121c4:	strd	r2, [sp]
   121c8:	ldrd	r2, [sp]
   121cc:	ldr	r1, [sp, #16]
   121d0:	adds	r1, r1, r2
   121d4:	str	r1, [sp, #16]
   121d8:	ldr	r1, [sp, #20]
   121dc:	adc	r3, r1, r3
   121e0:	str	r3, [sp, #20]
   121e4:	ldrd	r2, [sp, #16]
   121e8:	strd	r2, [r5]
   121ec:	b	11ee8 <strspn@plt+0x108c>
   121f0:	mov	r4, fp
   121f4:	strd	r0, [sp, #16]
   121f8:	ldr	r8, [sp, #36]	; 0x24
   121fc:	ldr	fp, [sp, #32]
   12200:	mov	r5, lr
   12204:	mov	r9, sl
   12208:	mov	r0, #0
   1220c:	b	12080 <strspn@plt+0x1224>
   12210:	mov	r3, #1000	; 0x3e8
   12214:	strd	sl, [sp]
   12218:	ldr	r5, [sp, #28]
   1221c:	mov	sl, r9
   12220:	str	r3, [sp, #28]
   12224:	ldr	r9, [sp, #32]
   12228:	b	11f40 <strspn@plt+0x10e4>
   1222c:	ldr	r6, [pc, #204]	; 12300 <strspn@plt+0x14a4>
   12230:	mov	r1, r7
   12234:	add	r6, pc, r6
   12238:	mov	r0, r6
   1223c:	bl	10d60 <strchr@plt>
   12240:	cmp	r0, #0
   12244:	bne	11f60 <strspn@plt+0x1104>
   12248:	b	11ea0 <strspn@plt+0x1044>
   1224c:	mov	r0, ip
   12250:	b	11ee4 <strspn@plt+0x1088>
   12254:	cmp	r3, #1
   12258:	bne	12118 <strspn@plt+0x12bc>
   1225c:	ldrd	r8, [sp]
   12260:	lsl	r2, r9, #2
   12264:	lsl	r3, r8, #2
   12268:	adds	r3, r3, r8
   1226c:	orr	r2, r2, r8, lsr #30
   12270:	adc	r2, r2, r9
   12274:	adds	r3, r3, r3
   12278:	str	r3, [sp]
   1227c:	adc	r3, r2, r2
   12280:	str	r3, [sp, #4]
   12284:	b	12118 <strspn@plt+0x12bc>
   12288:	ldr	lr, [sp, #28]
   1228c:	ldr	r3, [sp, #16]
   12290:	ldr	sl, [sp, #20]
   12294:	umull	r2, r3, r3, lr
   12298:	str	r3, [sp, #8]
   1229c:	mov	r3, #0
   122a0:	str	r3, [sp, #12]
   122a4:	ldrd	r2, [sp, #8]
   122a8:	umlal	r2, r3, sl, lr
   122ac:	cmp	r3, #0
   122b0:	movne	r0, #1
   122b4:	movne	r1, #0
   122b8:	b	11f8c <strspn@plt+0x1130>
   122bc:	ldr	r3, [sp]
   122c0:	ldr	ip, [sp, #28]
   122c4:	ldr	lr, [sp, #4]
   122c8:	umull	sl, fp, r3, ip
   122cc:	mov	r3, #0
   122d0:	mov	r2, fp
   122d4:	umlal	r2, r3, lr, ip
   122d8:	cmp	r3, #0
   122dc:	movne	r6, #1
   122e0:	movne	r7, #0
   122e4:	b	12140 <strspn@plt+0x12e4>
   122e8:	bl	10cac <__stack_chk_fail@plt>
   122ec:	andeq	r3, r1, r0, lsr #5
   122f0:	ldrdeq	r0, [r0], -r4
   122f4:	muleq	r0, r4, r2
   122f8:	bge	feabcdac <optarg@@GLIBC_2.4+0xfea97d84>
   122fc:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12300:			; <UNDEFINED> instruction: 0x00001fb4
   12304:	mov	r2, #0
   12308:	b	11c74 <strspn@plt+0xe18>
   1230c:	push	{r4, r5, r6, lr}
   12310:	subs	r5, r0, #0
   12314:	mov	r6, r1
   12318:	beq	12384 <strspn@plt+0x1528>
   1231c:	ldrsb	r4, [r5]
   12320:	cmp	r4, #0
   12324:	beq	12398 <strspn@plt+0x153c>
   12328:	bl	10d24 <__ctype_b_loc@plt>
   1232c:	mov	r3, r5
   12330:	ldr	r0, [r0]
   12334:	b	1234c <strspn@plt+0x14f0>
   12338:	adds	r3, r3, #1
   1233c:	beq	12384 <strspn@plt+0x1528>
   12340:	ldrsb	r4, [r3]
   12344:	cmp	r4, #0
   12348:	beq	12360 <strspn@plt+0x1504>
   1234c:	uxtb	r4, r4
   12350:	lsl	r4, r4, #1
   12354:	ldrh	r2, [r0, r4]
   12358:	tst	r2, #2048	; 0x800
   1235c:	bne	12338 <strspn@plt+0x14dc>
   12360:	cmp	r6, #0
   12364:	strne	r3, [r6]
   12368:	cmp	r5, r3
   1236c:	bcs	12390 <strspn@plt+0x1534>
   12370:	ldrsb	r3, [r3]
   12374:	cmp	r3, #0
   12378:	bne	12390 <strspn@plt+0x1534>
   1237c:	mov	r0, #1
   12380:	pop	{r4, r5, r6, pc}
   12384:	cmp	r6, #0
   12388:	movne	r3, #0
   1238c:	strne	r3, [r6]
   12390:	mov	r0, #0
   12394:	pop	{r4, r5, r6, pc}
   12398:	cmp	r1, #0
   1239c:	strne	r5, [r1]
   123a0:	b	12390 <strspn@plt+0x1534>
   123a4:	push	{r4, r5, r6, lr}
   123a8:	subs	r5, r0, #0
   123ac:	mov	r6, r1
   123b0:	beq	1241c <strspn@plt+0x15c0>
   123b4:	ldrsb	r4, [r5]
   123b8:	cmp	r4, #0
   123bc:	beq	12430 <strspn@plt+0x15d4>
   123c0:	bl	10d24 <__ctype_b_loc@plt>
   123c4:	mov	r3, r5
   123c8:	ldr	r0, [r0]
   123cc:	b	123e4 <strspn@plt+0x1588>
   123d0:	adds	r3, r3, #1
   123d4:	beq	1241c <strspn@plt+0x15c0>
   123d8:	ldrsb	r4, [r3]
   123dc:	cmp	r4, #0
   123e0:	beq	123f8 <strspn@plt+0x159c>
   123e4:	uxtb	r4, r4
   123e8:	lsl	r4, r4, #1
   123ec:	ldrh	r2, [r0, r4]
   123f0:	tst	r2, #4096	; 0x1000
   123f4:	bne	123d0 <strspn@plt+0x1574>
   123f8:	cmp	r6, #0
   123fc:	strne	r3, [r6]
   12400:	cmp	r5, r3
   12404:	bcs	12428 <strspn@plt+0x15cc>
   12408:	ldrsb	r3, [r3]
   1240c:	cmp	r3, #0
   12410:	bne	12428 <strspn@plt+0x15cc>
   12414:	mov	r0, #1
   12418:	pop	{r4, r5, r6, pc}
   1241c:	cmp	r6, #0
   12420:	movne	r3, #0
   12424:	strne	r3, [r6]
   12428:	mov	r0, #0
   1242c:	pop	{r4, r5, r6, pc}
   12430:	cmp	r1, #0
   12434:	strne	r5, [r1]
   12438:	b	12428 <strspn@plt+0x15cc>
   1243c:	push	{r1, r2, r3}
   12440:	ldr	r3, [pc, #188]	; 12504 <strspn@plt+0x16a8>
   12444:	ldr	r2, [pc, #188]	; 12508 <strspn@plt+0x16ac>
   12448:	add	r3, pc, r3
   1244c:	push	{r4, r5, r6, r7, r8, lr}
   12450:	sub	sp, sp, #12
   12454:	ldr	r7, [r3, r2]
   12458:	ldr	r8, [sp, #36]	; 0x24
   1245c:	mov	r6, r0
   12460:	ldr	r3, [r7]
   12464:	add	r4, sp, #48	; 0x30
   12468:	str	r3, [sp, #4]
   1246c:	b	12488 <strspn@plt+0x162c>
   12470:	mov	r1, r5
   12474:	mov	r0, r6
   12478:	bl	10c1c <strcmp@plt>
   1247c:	add	r4, r4, #8
   12480:	cmp	r0, #0
   12484:	beq	124c0 <strspn@plt+0x1664>
   12488:	ldr	r1, [r4, #-8]
   1248c:	sub	r3, r4, #4
   12490:	cmp	r1, #0
   12494:	str	r3, [sp]
   12498:	beq	124e0 <strspn@plt+0x1684>
   1249c:	ldr	r5, [r4, #-4]
   124a0:	str	r4, [sp]
   124a4:	cmp	r5, #0
   124a8:	beq	124e0 <strspn@plt+0x1684>
   124ac:	mov	r0, r6
   124b0:	bl	10c1c <strcmp@plt>
   124b4:	cmp	r0, #0
   124b8:	bne	12470 <strspn@plt+0x1614>
   124bc:	mov	r0, #1
   124c0:	ldr	r2, [sp, #4]
   124c4:	ldr	r3, [r7]
   124c8:	cmp	r2, r3
   124cc:	bne	12500 <strspn@plt+0x16a4>
   124d0:	add	sp, sp, #12
   124d4:	pop	{r4, r5, r6, r7, r8, lr}
   124d8:	add	sp, sp, #12
   124dc:	bx	lr
   124e0:	ldr	r1, [pc, #36]	; 1250c <strspn@plt+0x16b0>
   124e4:	mov	r3, r6
   124e8:	add	r1, pc, r1
   124ec:	mov	r2, r8
   124f0:	ldr	r0, [r1]
   124f4:	ldr	r1, [pc, #20]	; 12510 <strspn@plt+0x16b4>
   124f8:	add	r1, pc, r1
   124fc:	bl	10de4 <errx@plt>
   12500:	bl	10cac <__stack_chk_fail@plt>
   12504:	ldrdeq	r2, [r1], -r4
   12508:	ldrdeq	r0, [r0], -r4
   1250c:	andeq	r2, r1, r8, lsl fp
   12510:	ldrdeq	r1, [r0], -r8
   12514:	cmp	r1, #0
   12518:	beq	12564 <strspn@plt+0x1708>
   1251c:	ldrsb	r3, [r0]
   12520:	cmp	r3, #0
   12524:	beq	12564 <strspn@plt+0x1708>
   12528:	sxtb	r2, r2
   1252c:	cmp	r3, r2
   12530:	bxeq	lr
   12534:	add	r1, r0, r1
   12538:	add	r3, r0, #1
   1253c:	b	12558 <strspn@plt+0x16fc>
   12540:	ldrsb	ip, [r3]
   12544:	add	r3, r3, #1
   12548:	cmp	ip, #0
   1254c:	beq	12564 <strspn@plt+0x1708>
   12550:	cmp	ip, r2
   12554:	bxeq	lr
   12558:	cmp	r3, r1
   1255c:	mov	r0, r3
   12560:	bne	12540 <strspn@plt+0x16e4>
   12564:	mov	r0, #0
   12568:	bx	lr
   1256c:	push	{r4, r5, r6, lr}
   12570:	mov	r2, #10
   12574:	mov	r4, r0
   12578:	mov	r5, r1
   1257c:	bl	11c30 <strspn@plt+0xdd4>
   12580:	cmp	r0, #65536	; 0x10000
   12584:	bcs	12590 <strspn@plt+0x1734>
   12588:	uxth	r0, r0
   1258c:	pop	{r4, r5, r6, pc}
   12590:	mov	r1, r5
   12594:	mov	r0, r4
   12598:	bl	11bf0 <strspn@plt+0xd94>
   1259c:	push	{r4, r5, r6, lr}
   125a0:	mov	r2, #16
   125a4:	mov	r4, r0
   125a8:	mov	r5, r1
   125ac:	bl	11c30 <strspn@plt+0xdd4>
   125b0:	cmp	r0, #65536	; 0x10000
   125b4:	bcs	125c0 <strspn@plt+0x1764>
   125b8:	uxth	r0, r0
   125bc:	pop	{r4, r5, r6, pc}
   125c0:	mov	r1, r5
   125c4:	mov	r0, r4
   125c8:	bl	11bf0 <strspn@plt+0xd94>
   125cc:	mov	r2, #10
   125d0:	b	11c30 <strspn@plt+0xdd4>
   125d4:	mov	r2, #16
   125d8:	b	11c30 <strspn@plt+0xdd4>
   125dc:	ldr	r2, [pc, #236]	; 126d0 <strspn@plt+0x1874>
   125e0:	ldr	ip, [pc, #236]	; 126d4 <strspn@plt+0x1878>
   125e4:	add	r2, pc, r2
   125e8:	push	{r4, r5, r6, r7, r8, lr}
   125ec:	sub	sp, sp, #8
   125f0:	ldr	r7, [r2, ip]
   125f4:	mov	r5, #0
   125f8:	mov	r4, r0
   125fc:	ldr	r3, [r7]
   12600:	mov	r8, r1
   12604:	str	r5, [sp]
   12608:	str	r3, [sp, #4]
   1260c:	bl	10d78 <__errno_location@plt>
   12610:	cmp	r4, r5
   12614:	str	r5, [r0]
   12618:	beq	12628 <strspn@plt+0x17cc>
   1261c:	ldrsb	r3, [r4]
   12620:	cmp	r3, r5
   12624:	bne	12648 <strspn@plt+0x17ec>
   12628:	ldr	r1, [pc, #168]	; 126d8 <strspn@plt+0x187c>
   1262c:	mov	r3, r4
   12630:	add	r1, pc, r1
   12634:	mov	r2, r8
   12638:	ldr	r0, [r1]
   1263c:	ldr	r1, [pc, #152]	; 126dc <strspn@plt+0x1880>
   12640:	add	r1, pc, r1
   12644:	bl	10de4 <errx@plt>
   12648:	mov	r6, r0
   1264c:	mov	r2, #10
   12650:	mov	r3, r5
   12654:	mov	r1, sp
   12658:	mov	r0, r4
   1265c:	bl	10e14 <__strtoll_internal@plt>
   12660:	ldr	r2, [r6]
   12664:	cmp	r2, r5
   12668:	bne	126a4 <strspn@plt+0x1848>
   1266c:	ldr	r3, [sp]
   12670:	cmp	r3, r4
   12674:	beq	12628 <strspn@plt+0x17cc>
   12678:	cmp	r3, r5
   1267c:	beq	1268c <strspn@plt+0x1830>
   12680:	ldrsb	r3, [r3]
   12684:	cmp	r3, r5
   12688:	bne	12628 <strspn@plt+0x17cc>
   1268c:	ldr	r2, [sp, #4]
   12690:	ldr	r3, [r7]
   12694:	cmp	r2, r3
   12698:	bne	126cc <strspn@plt+0x1870>
   1269c:	add	sp, sp, #8
   126a0:	pop	{r4, r5, r6, r7, r8, pc}
   126a4:	ldr	r3, [pc, #52]	; 126e0 <strspn@plt+0x1884>
   126a8:	cmp	r2, #34	; 0x22
   126ac:	add	r3, pc, r3
   126b0:	ldr	r0, [r3]
   126b4:	bne	12628 <strspn@plt+0x17cc>
   126b8:	ldr	r1, [pc, #36]	; 126e4 <strspn@plt+0x1888>
   126bc:	mov	r3, r4
   126c0:	mov	r2, r8
   126c4:	add	r1, pc, r1
   126c8:	bl	10cd0 <err@plt>
   126cc:	bl	10cac <__stack_chk_fail@plt>
   126d0:	andeq	r2, r1, r8, lsr r9
   126d4:	ldrdeq	r0, [r0], -r4
   126d8:	ldrdeq	r2, [r1], -r0
   126dc:	muleq	r0, r0, fp
   126e0:	andeq	r2, r1, r4, asr r9
   126e4:	andeq	r1, r0, ip, lsl #22
   126e8:	push	{r4, r5, r6, r7, r8, lr}
   126ec:	mov	r7, r0
   126f0:	mov	r6, r1
   126f4:	bl	125dc <strspn@plt+0x1780>
   126f8:	mov	r3, #0
   126fc:	mvn	r2, #0
   12700:	adds	r4, r0, #-2147483648	; 0x80000000
   12704:	adc	r5, r1, #0
   12708:	cmp	r5, r3
   1270c:	cmpeq	r4, r2
   12710:	popls	{r4, r5, r6, r7, r8, pc}
   12714:	bl	10d78 <__errno_location@plt>
   12718:	ldr	ip, [pc, #32]	; 12740 <strspn@plt+0x18e4>
   1271c:	ldr	r1, [pc, #32]	; 12744 <strspn@plt+0x18e8>
   12720:	add	ip, pc, ip
   12724:	mov	lr, #34	; 0x22
   12728:	mov	r3, r7
   1272c:	mov	r2, r6
   12730:	add	r1, pc, r1
   12734:	str	lr, [r0]
   12738:	ldr	r0, [ip]
   1273c:	bl	10cd0 <err@plt>
   12740:	andeq	r2, r1, r0, ror #17
   12744:	andeq	r1, r0, r0, lsr #21
   12748:	push	{r4, r5, r6, lr}
   1274c:	mov	r5, r0
   12750:	mov	r4, r1
   12754:	bl	126e8 <strspn@plt+0x188c>
   12758:	add	r3, r0, #32768	; 0x8000
   1275c:	cmp	r3, #65536	; 0x10000
   12760:	bcs	1276c <strspn@plt+0x1910>
   12764:	sxth	r0, r0
   12768:	pop	{r4, r5, r6, pc}
   1276c:	bl	10d78 <__errno_location@plt>
   12770:	ldr	ip, [pc, #32]	; 12798 <strspn@plt+0x193c>
   12774:	ldr	r1, [pc, #32]	; 1279c <strspn@plt+0x1940>
   12778:	add	ip, pc, ip
   1277c:	mov	lr, #34	; 0x22
   12780:	mov	r3, r5
   12784:	mov	r2, r4
   12788:	add	r1, pc, r1
   1278c:	str	lr, [r0]
   12790:	ldr	r0, [ip]
   12794:	bl	10cd0 <err@plt>
   12798:	andeq	r2, r1, r8, lsl #17
   1279c:	andeq	r1, r0, r8, asr #20
   127a0:	mov	r2, #10
   127a4:	b	11adc <strspn@plt+0xc80>
   127a8:	mov	r2, #16
   127ac:	b	11adc <strspn@plt+0xc80>
   127b0:	ldr	r2, [pc, #228]	; 1289c <strspn@plt+0x1a40>
   127b4:	ldr	r3, [pc, #228]	; 128a0 <strspn@plt+0x1a44>
   127b8:	add	r2, pc, r2
   127bc:	push	{r4, r5, r6, r7, r8, lr}
   127c0:	sub	sp, sp, #8
   127c4:	ldr	r7, [r2, r3]
   127c8:	mov	r5, #0
   127cc:	mov	r4, r0
   127d0:	ldr	r3, [r7]
   127d4:	mov	r8, r1
   127d8:	str	r5, [sp]
   127dc:	str	r3, [sp, #4]
   127e0:	bl	10d78 <__errno_location@plt>
   127e4:	cmp	r4, r5
   127e8:	str	r5, [r0]
   127ec:	beq	127fc <strspn@plt+0x19a0>
   127f0:	ldrsb	r3, [r4]
   127f4:	cmp	r3, r5
   127f8:	bne	1281c <strspn@plt+0x19c0>
   127fc:	ldr	r1, [pc, #160]	; 128a4 <strspn@plt+0x1a48>
   12800:	mov	r3, r4
   12804:	add	r1, pc, r1
   12808:	mov	r2, r8
   1280c:	ldr	r0, [r1]
   12810:	ldr	r1, [pc, #144]	; 128a8 <strspn@plt+0x1a4c>
   12814:	add	r1, pc, r1
   12818:	bl	10de4 <errx@plt>
   1281c:	mov	r6, r0
   12820:	mov	r1, sp
   12824:	mov	r0, r4
   12828:	bl	10db4 <strtod@plt>
   1282c:	ldr	r2, [r6]
   12830:	cmp	r2, r5
   12834:	bne	12870 <strspn@plt+0x1a14>
   12838:	ldr	r3, [sp]
   1283c:	cmp	r3, r4
   12840:	beq	127fc <strspn@plt+0x19a0>
   12844:	cmp	r3, r5
   12848:	beq	12858 <strspn@plt+0x19fc>
   1284c:	ldrsb	r3, [r3]
   12850:	cmp	r3, r5
   12854:	bne	127fc <strspn@plt+0x19a0>
   12858:	ldr	r2, [sp, #4]
   1285c:	ldr	r3, [r7]
   12860:	cmp	r2, r3
   12864:	bne	12898 <strspn@plt+0x1a3c>
   12868:	add	sp, sp, #8
   1286c:	pop	{r4, r5, r6, r7, r8, pc}
   12870:	ldr	r3, [pc, #52]	; 128ac <strspn@plt+0x1a50>
   12874:	cmp	r2, #34	; 0x22
   12878:	add	r3, pc, r3
   1287c:	ldr	r0, [r3]
   12880:	bne	127fc <strspn@plt+0x19a0>
   12884:	ldr	r1, [pc, #36]	; 128b0 <strspn@plt+0x1a54>
   12888:	mov	r3, r4
   1288c:	mov	r2, r8
   12890:	add	r1, pc, r1
   12894:	bl	10cd0 <err@plt>
   12898:	bl	10cac <__stack_chk_fail@plt>
   1289c:	andeq	r2, r1, r4, ror #14
   128a0:	ldrdeq	r0, [r0], -r4
   128a4:	strdeq	r2, [r1], -ip
   128a8:			; <UNDEFINED> instruction: 0x000019bc
   128ac:	andeq	r2, r1, r8, lsl #15
   128b0:	andeq	r1, r0, r0, asr #18
   128b4:	ldr	r2, [pc, #232]	; 129a4 <strspn@plt+0x1b48>
   128b8:	ldr	r3, [pc, #232]	; 129a8 <strspn@plt+0x1b4c>
   128bc:	add	r2, pc, r2
   128c0:	push	{r4, r5, r6, r7, r8, lr}
   128c4:	sub	sp, sp, #8
   128c8:	ldr	r7, [r2, r3]
   128cc:	mov	r5, #0
   128d0:	mov	r4, r0
   128d4:	ldr	r3, [r7]
   128d8:	mov	r8, r1
   128dc:	str	r5, [sp]
   128e0:	str	r3, [sp, #4]
   128e4:	bl	10d78 <__errno_location@plt>
   128e8:	cmp	r4, r5
   128ec:	str	r5, [r0]
   128f0:	beq	12900 <strspn@plt+0x1aa4>
   128f4:	ldrsb	r3, [r4]
   128f8:	cmp	r3, r5
   128fc:	bne	12920 <strspn@plt+0x1ac4>
   12900:	ldr	r1, [pc, #164]	; 129ac <strspn@plt+0x1b50>
   12904:	mov	r3, r4
   12908:	add	r1, pc, r1
   1290c:	mov	r2, r8
   12910:	ldr	r0, [r1]
   12914:	ldr	r1, [pc, #148]	; 129b0 <strspn@plt+0x1b54>
   12918:	add	r1, pc, r1
   1291c:	bl	10de4 <errx@plt>
   12920:	mov	r6, r0
   12924:	mov	r2, #10
   12928:	mov	r1, sp
   1292c:	mov	r0, r4
   12930:	bl	10c28 <strtol@plt>
   12934:	ldr	r2, [r6]
   12938:	cmp	r2, r5
   1293c:	bne	12978 <strspn@plt+0x1b1c>
   12940:	ldr	r3, [sp]
   12944:	cmp	r3, r4
   12948:	beq	12900 <strspn@plt+0x1aa4>
   1294c:	cmp	r3, r5
   12950:	beq	12960 <strspn@plt+0x1b04>
   12954:	ldrsb	r3, [r3]
   12958:	cmp	r3, r5
   1295c:	bne	12900 <strspn@plt+0x1aa4>
   12960:	ldr	r2, [sp, #4]
   12964:	ldr	r3, [r7]
   12968:	cmp	r2, r3
   1296c:	bne	129a0 <strspn@plt+0x1b44>
   12970:	add	sp, sp, #8
   12974:	pop	{r4, r5, r6, r7, r8, pc}
   12978:	ldr	r3, [pc, #52]	; 129b4 <strspn@plt+0x1b58>
   1297c:	cmp	r2, #34	; 0x22
   12980:	add	r3, pc, r3
   12984:	ldr	r0, [r3]
   12988:	bne	12900 <strspn@plt+0x1aa4>
   1298c:	ldr	r1, [pc, #36]	; 129b8 <strspn@plt+0x1b5c>
   12990:	mov	r3, r4
   12994:	mov	r2, r8
   12998:	add	r1, pc, r1
   1299c:	bl	10cd0 <err@plt>
   129a0:	bl	10cac <__stack_chk_fail@plt>
   129a4:	andeq	r2, r1, r0, ror #12
   129a8:	ldrdeq	r0, [r0], -r4
   129ac:	strdeq	r2, [r1], -r8
   129b0:			; <UNDEFINED> instruction: 0x000018b8
   129b4:	andeq	r2, r1, r0, lsl #13
   129b8:	andeq	r1, r0, r8, lsr r8
   129bc:	ldr	r2, [pc, #232]	; 12aac <strspn@plt+0x1c50>
   129c0:	ldr	r3, [pc, #232]	; 12ab0 <strspn@plt+0x1c54>
   129c4:	add	r2, pc, r2
   129c8:	push	{r4, r5, r6, r7, r8, lr}
   129cc:	sub	sp, sp, #8
   129d0:	ldr	r7, [r2, r3]
   129d4:	mov	r5, #0
   129d8:	mov	r4, r0
   129dc:	ldr	r3, [r7]
   129e0:	mov	r8, r1
   129e4:	str	r5, [sp]
   129e8:	str	r3, [sp, #4]
   129ec:	bl	10d78 <__errno_location@plt>
   129f0:	cmp	r4, r5
   129f4:	str	r5, [r0]
   129f8:	beq	12a08 <strspn@plt+0x1bac>
   129fc:	ldrsb	r3, [r4]
   12a00:	cmp	r3, r5
   12a04:	bne	12a28 <strspn@plt+0x1bcc>
   12a08:	ldr	r1, [pc, #164]	; 12ab4 <strspn@plt+0x1c58>
   12a0c:	mov	r3, r4
   12a10:	add	r1, pc, r1
   12a14:	mov	r2, r8
   12a18:	ldr	r0, [r1]
   12a1c:	ldr	r1, [pc, #148]	; 12ab8 <strspn@plt+0x1c5c>
   12a20:	add	r1, pc, r1
   12a24:	bl	10de4 <errx@plt>
   12a28:	mov	r6, r0
   12a2c:	mov	r2, #10
   12a30:	mov	r1, sp
   12a34:	mov	r0, r4
   12a38:	bl	10d48 <strtoul@plt>
   12a3c:	ldr	r2, [r6]
   12a40:	cmp	r2, r5
   12a44:	bne	12a80 <strspn@plt+0x1c24>
   12a48:	ldr	r3, [sp]
   12a4c:	cmp	r3, r4
   12a50:	beq	12a08 <strspn@plt+0x1bac>
   12a54:	cmp	r3, r5
   12a58:	beq	12a68 <strspn@plt+0x1c0c>
   12a5c:	ldrsb	r3, [r3]
   12a60:	cmp	r3, r5
   12a64:	bne	12a08 <strspn@plt+0x1bac>
   12a68:	ldr	r2, [sp, #4]
   12a6c:	ldr	r3, [r7]
   12a70:	cmp	r2, r3
   12a74:	bne	12aa8 <strspn@plt+0x1c4c>
   12a78:	add	sp, sp, #8
   12a7c:	pop	{r4, r5, r6, r7, r8, pc}
   12a80:	ldr	r3, [pc, #52]	; 12abc <strspn@plt+0x1c60>
   12a84:	cmp	r2, #34	; 0x22
   12a88:	add	r3, pc, r3
   12a8c:	ldr	r0, [r3]
   12a90:	bne	12a08 <strspn@plt+0x1bac>
   12a94:	ldr	r1, [pc, #36]	; 12ac0 <strspn@plt+0x1c64>
   12a98:	mov	r3, r4
   12a9c:	mov	r2, r8
   12aa0:	add	r1, pc, r1
   12aa4:	bl	10cd0 <err@plt>
   12aa8:	bl	10cac <__stack_chk_fail@plt>
   12aac:	andeq	r2, r1, r8, asr r5
   12ab0:	ldrdeq	r0, [r0], -r4
   12ab4:	strdeq	r2, [r1], -r0
   12ab8:			; <UNDEFINED> instruction: 0x000017b0
   12abc:	andeq	r2, r1, r8, ror r5
   12ac0:	andeq	r1, r0, r0, lsr r7
   12ac4:	ldr	r3, [pc, #140]	; 12b58 <strspn@plt+0x1cfc>
   12ac8:	ldr	r2, [pc, #140]	; 12b5c <strspn@plt+0x1d00>
   12acc:	add	r3, pc, r3
   12ad0:	push	{r4, r5, r6, lr}
   12ad4:	sub	sp, sp, #16
   12ad8:	ldr	r4, [r3, r2]
   12adc:	mov	r5, r1
   12ae0:	mov	r1, sp
   12ae4:	ldr	r3, [r4]
   12ae8:	mov	r6, r0
   12aec:	str	r3, [sp, #12]
   12af0:	bl	12304 <strspn@plt+0x14a8>
   12af4:	cmp	r0, #0
   12af8:	beq	12b38 <strspn@plt+0x1cdc>
   12afc:	bl	10d78 <__errno_location@plt>
   12b00:	ldr	r3, [pc, #88]	; 12b60 <strspn@plt+0x1d04>
   12b04:	mov	r2, r5
   12b08:	ldr	r1, [pc, r3]
   12b0c:	ldr	r3, [r0]
   12b10:	mov	r0, r1
   12b14:	cmp	r3, #0
   12b18:	mov	r3, r6
   12b1c:	beq	12b2c <strspn@plt+0x1cd0>
   12b20:	ldr	r1, [pc, #60]	; 12b64 <strspn@plt+0x1d08>
   12b24:	add	r1, pc, r1
   12b28:	bl	10cd0 <err@plt>
   12b2c:	ldr	r1, [pc, #52]	; 12b68 <strspn@plt+0x1d0c>
   12b30:	add	r1, pc, r1
   12b34:	bl	10de4 <errx@plt>
   12b38:	ldr	r2, [sp, #12]
   12b3c:	ldr	r3, [r4]
   12b40:	ldrd	r0, [sp]
   12b44:	cmp	r2, r3
   12b48:	bne	12b54 <strspn@plt+0x1cf8>
   12b4c:	add	sp, sp, #16
   12b50:	pop	{r4, r5, r6, pc}
   12b54:	bl	10cac <__stack_chk_fail@plt>
   12b58:	andeq	r2, r1, r0, asr r4
   12b5c:	ldrdeq	r0, [r0], -r4
   12b60:	strdeq	r2, [r1], -r8
   12b64:	andeq	r1, r0, ip, lsr #13
   12b68:	andeq	r1, r0, r0, lsr #13
   12b6c:	push	{r4, lr}
   12b70:	mov	r4, r1
   12b74:	mov	r1, r2
   12b78:	bl	127b0 <strspn@plt+0x1954>
   12b7c:	vldr	d6, [pc, #28]	; 12ba0 <strspn@plt+0x1d44>
   12b80:	vcvt.s32.f64	s15, d0
   12b84:	vcvt.f64.s32	d5, s15
   12b88:	vstr	s15, [r4]
   12b8c:	vsub.f64	d0, d0, d5
   12b90:	vmul.f64	d0, d0, d6
   12b94:	vcvt.s32.f64	s0, d0
   12b98:	vstr	s0, [r4, #4]
   12b9c:	pop	{r4, pc}
   12ba0:	andeq	r0, r0, r0
   12ba4:	smlawbmi	lr, r0, r4, r8
   12ba8:	and	r2, r0, #61440	; 0xf000
   12bac:	cmp	r2, #16384	; 0x4000
   12bb0:	moveq	r2, r1
   12bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb8:	moveq	sl, #100	; 0x64
   12bbc:	mov	r3, r0
   12bc0:	add	r9, r1, #1
   12bc4:	add	r8, r1, #2
   12bc8:	add	r7, r1, #3
   12bcc:	add	r6, r1, #4
   12bd0:	add	r5, r1, #5
   12bd4:	add	r4, r1, #6
   12bd8:	add	lr, r1, #7
   12bdc:	add	ip, r1, #8
   12be0:	add	r0, r1, #9
   12be4:	strbeq	sl, [r2], #10
   12be8:	beq	12c8c <strspn@plt+0x1e30>
   12bec:	cmp	r2, #40960	; 0xa000
   12bf0:	moveq	r2, r1
   12bf4:	moveq	sl, #108	; 0x6c
   12bf8:	strbeq	sl, [r2], #10
   12bfc:	beq	12c8c <strspn@plt+0x1e30>
   12c00:	cmp	r2, #8192	; 0x2000
   12c04:	moveq	r2, r1
   12c08:	moveq	sl, #99	; 0x63
   12c0c:	strbeq	sl, [r2], #10
   12c10:	beq	12c8c <strspn@plt+0x1e30>
   12c14:	cmp	r2, #24576	; 0x6000
   12c18:	moveq	r2, r1
   12c1c:	moveq	sl, #98	; 0x62
   12c20:	strbeq	sl, [r2], #10
   12c24:	beq	12c8c <strspn@plt+0x1e30>
   12c28:	cmp	r2, #49152	; 0xc000
   12c2c:	moveq	r2, r1
   12c30:	moveq	sl, #115	; 0x73
   12c34:	strbeq	sl, [r2], #10
   12c38:	beq	12c8c <strspn@plt+0x1e30>
   12c3c:	cmp	r2, #4096	; 0x1000
   12c40:	moveq	r2, r1
   12c44:	moveq	sl, #112	; 0x70
   12c48:	strbeq	sl, [r2], #10
   12c4c:	beq	12c8c <strspn@plt+0x1e30>
   12c50:	cmp	r2, #32768	; 0x8000
   12c54:	moveq	r2, r1
   12c58:	moveq	sl, #45	; 0x2d
   12c5c:	strbeq	sl, [r2], #10
   12c60:	beq	12c8c <strspn@plt+0x1e30>
   12c64:	mov	r2, r0
   12c68:	mov	r0, ip
   12c6c:	mov	ip, lr
   12c70:	mov	lr, r4
   12c74:	mov	r4, r5
   12c78:	mov	r5, r6
   12c7c:	mov	r6, r7
   12c80:	mov	r7, r8
   12c84:	mov	r8, r9
   12c88:	mov	r9, r1
   12c8c:	tst	r3, #256	; 0x100
   12c90:	movne	fp, #114	; 0x72
   12c94:	moveq	fp, #45	; 0x2d
   12c98:	tst	r3, #128	; 0x80
   12c9c:	movne	sl, #119	; 0x77
   12ca0:	moveq	sl, #45	; 0x2d
   12ca4:	tst	r3, #2048	; 0x800
   12ca8:	strb	fp, [r9]
   12cac:	and	r9, r3, #64	; 0x40
   12cb0:	strb	sl, [r8]
   12cb4:	beq	12d50 <strspn@plt+0x1ef4>
   12cb8:	cmp	r9, #0
   12cbc:	movne	r9, #115	; 0x73
   12cc0:	moveq	r9, #83	; 0x53
   12cc4:	tst	r3, #32
   12cc8:	movne	r8, #114	; 0x72
   12ccc:	moveq	r8, #45	; 0x2d
   12cd0:	tst	r3, #16
   12cd4:	strb	r9, [r7]
   12cd8:	movne	r7, #119	; 0x77
   12cdc:	moveq	r7, #45	; 0x2d
   12ce0:	tst	r3, #1024	; 0x400
   12ce4:	strb	r8, [r6]
   12ce8:	and	r6, r3, #8
   12cec:	strb	r7, [r5]
   12cf0:	beq	12d60 <strspn@plt+0x1f04>
   12cf4:	cmp	r6, #0
   12cf8:	movne	r6, #115	; 0x73
   12cfc:	moveq	r6, #83	; 0x53
   12d00:	tst	r3, #4
   12d04:	movne	r5, #114	; 0x72
   12d08:	moveq	r5, #45	; 0x2d
   12d0c:	tst	r3, #2
   12d10:	strb	r6, [r4]
   12d14:	movne	r4, #119	; 0x77
   12d18:	moveq	r4, #45	; 0x2d
   12d1c:	tst	r3, #512	; 0x200
   12d20:	strb	r5, [lr]
   12d24:	and	r3, r3, #1
   12d28:	strb	r4, [ip]
   12d2c:	beq	12d70 <strspn@plt+0x1f14>
   12d30:	cmp	r3, #0
   12d34:	movne	ip, #116	; 0x74
   12d38:	moveq	ip, #84	; 0x54
   12d3c:	mov	r3, #0
   12d40:	strb	ip, [r0]
   12d44:	mov	r0, r1
   12d48:	strb	r3, [r2]
   12d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d50:	cmp	r9, #0
   12d54:	movne	r9, #120	; 0x78
   12d58:	moveq	r9, #45	; 0x2d
   12d5c:	b	12cc4 <strspn@plt+0x1e68>
   12d60:	cmp	r6, #0
   12d64:	movne	r6, #120	; 0x78
   12d68:	moveq	r6, #45	; 0x2d
   12d6c:	b	12d00 <strspn@plt+0x1ea4>
   12d70:	cmp	r3, #0
   12d74:	movne	ip, #120	; 0x78
   12d78:	moveq	ip, #45	; 0x2d
   12d7c:	b	12d3c <strspn@plt+0x1ee0>
   12d80:	ldr	r1, [pc, #680]	; 13030 <strspn@plt+0x21d4>
   12d84:	ldr	ip, [pc, #680]	; 13034 <strspn@plt+0x21d8>
   12d88:	add	r1, pc, r1
   12d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d90:	sub	sp, sp, #108	; 0x6c
   12d94:	ldr	r8, [r1, ip]
   12d98:	tst	r0, #2
   12d9c:	strd	r2, [sp, #32]
   12da0:	ldr	r1, [r8]
   12da4:	addeq	r9, sp, #60	; 0x3c
   12da8:	str	r1, [sp, #100]	; 0x64
   12dac:	ldrd	r2, [sp, #32]
   12db0:	movne	r1, #32
   12db4:	strbne	r1, [sp, #60]	; 0x3c
   12db8:	addne	ip, sp, #61	; 0x3d
   12dbc:	addne	r9, sp, #60	; 0x3c
   12dc0:	moveq	ip, r9
   12dc4:	mov	r1, #10
   12dc8:	mov	sl, #1
   12dcc:	sub	lr, r1, #32
   12dd0:	lsl	r4, sl, r1
   12dd4:	lsl	r5, sl, lr
   12dd8:	rsb	lr, r1, #32
   12ddc:	orr	r5, r5, sl, lsr lr
   12de0:	cmp	r3, r5
   12de4:	cmpeq	r2, r4
   12de8:	bcc	12fa4 <strspn@plt+0x2148>
   12dec:	add	r1, r1, #10
   12df0:	cmp	r1, #70	; 0x46
   12df4:	bne	12dcc <strspn@plt+0x1f70>
   12df8:	mov	lr, ip
   12dfc:	strd	r2, [sp, #32]
   12e00:	mov	r4, r2
   12e04:	tst	r0, #1
   12e08:	mov	r2, #69	; 0x45
   12e0c:	bic	r5, r3, #-268435456	; 0xf0000000
   12e10:	lsr	sl, r3, #28
   12e14:	strb	r2, [lr], #1
   12e18:	bne	12f8c <strspn@plt+0x2130>
   12e1c:	orrs	r3, r4, r5
   12e20:	mov	r3, #0
   12e24:	strb	r3, [lr]
   12e28:	beq	12fcc <strspn@plt+0x2170>
   12e2c:	sub	r2, r1, #20
   12e30:	rsb	r0, r2, #32
   12e34:	lsr	r3, r4, r2
   12e38:	sub	r1, r1, #52	; 0x34
   12e3c:	orr	r3, r3, r5, lsl r0
   12e40:	orr	r3, r3, r5, lsr r1
   12e44:	lsr	r2, r5, r2
   12e48:	adds	r6, r3, #50	; 0x32
   12e4c:	adc	r7, r2, #0
   12e50:	mov	r3, #0
   12e54:	mov	r2, #100	; 0x64
   12e58:	mov	r0, r6
   12e5c:	mov	r1, r7
   12e60:	bl	13950 <strspn@plt+0x2af4>
   12e64:	cmp	r1, #0
   12e68:	cmpeq	r0, #10
   12e6c:	mov	r2, r0
   12e70:	mov	r3, r1
   12e74:	addeq	sl, sl, #1
   12e78:	beq	12fcc <strspn@plt+0x2170>
   12e7c:	cmp	r7, #0
   12e80:	cmpeq	r6, #99	; 0x63
   12e84:	strd	r2, [sp, #32]
   12e88:	bls	12fcc <strspn@plt+0x2170>
   12e8c:	bl	10e08 <localeconv@plt>
   12e90:	ldrd	r2, [sp, #32]
   12e94:	cmp	r0, #0
   12e98:	beq	13014 <strspn@plt+0x21b8>
   12e9c:	ldr	r0, [r0]
   12ea0:	cmp	r0, #0
   12ea4:	beq	13020 <strspn@plt+0x21c4>
   12ea8:	ldrsb	r1, [r0]
   12eac:	cmp	r1, #0
   12eb0:	ldreq	r0, [pc, #384]	; 13038 <strspn@plt+0x21dc>
   12eb4:	addeq	r0, pc, r0
   12eb8:	ldr	r1, [pc, #380]	; 1303c <strspn@plt+0x21e0>
   12ebc:	strd	r2, [sp, #16]
   12ec0:	add	r1, pc, r1
   12ec4:	add	r4, sp, #68	; 0x44
   12ec8:	mov	r3, #32
   12ecc:	str	r0, [sp, #8]
   12ed0:	str	r1, [sp]
   12ed4:	str	r9, [sp, #24]
   12ed8:	str	sl, [sp, #4]
   12edc:	mov	r0, r4
   12ee0:	mov	r1, r3
   12ee4:	mov	r2, #1
   12ee8:	bl	10e50 <__snprintf_chk@plt>
   12eec:	b	12ff4 <strspn@plt+0x2198>
   12ef0:	ldr	r4, [pc, #328]	; 13040 <strspn@plt+0x21e4>
   12ef4:	mvn	sl, #0
   12ef8:	ldr	fp, [pc, #324]	; 13044 <strspn@plt+0x21e8>
   12efc:	umull	r2, r3, lr, r4
   12f00:	sub	r4, r1, #42	; 0x2a
   12f04:	strd	r2, [sp, #40]	; 0x28
   12f08:	ldr	r3, [sp, #44]	; 0x2c
   12f0c:	lsl	r2, sl, lr
   12f10:	lsr	r3, r3, #3
   12f14:	str	r3, [sp, #52]	; 0x34
   12f18:	ldr	r3, [sp, #32]
   12f1c:	str	r4, [sp, #48]	; 0x30
   12f20:	orr	r4, r2, sl, lsl r4
   12f24:	lsr	r2, r3, lr
   12f28:	mov	r3, r2
   12f2c:	ldr	r2, [sp, #52]	; 0x34
   12f30:	add	fp, pc, fp
   12f34:	str	r4, [sp, #40]	; 0x28
   12f38:	ldrsb	fp, [fp, r2]
   12f3c:	mov	r2, r3
   12f40:	ldr	r3, [sp, #36]	; 0x24
   12f44:	rsb	r5, lr, #32
   12f48:	ldr	r4, [sp, #40]	; 0x28
   12f4c:	orr	r2, r2, r3, lsl r5
   12f50:	orr	r4, r4, sl, lsr r5
   12f54:	ldr	r3, [sp, #32]
   12f58:	str	r4, [sp, #40]	; 0x28
   12f5c:	cmp	r0, #0
   12f60:	bic	r4, r3, sl, lsl lr
   12f64:	ldr	r0, [sp, #36]	; 0x24
   12f68:	ldr	r3, [sp, #48]	; 0x30
   12f6c:	mov	lr, ip
   12f70:	orr	sl, r2, r0, lsr r3
   12f74:	ldr	r3, [sp, #40]	; 0x28
   12f78:	strb	fp, [lr], #1
   12f7c:	bic	r5, r0, r3
   12f80:	beq	12e1c <strspn@plt+0x1fc0>
   12f84:	cmp	fp, #66	; 0x42
   12f88:	beq	12e1c <strspn@plt+0x1fc0>
   12f8c:	mov	r3, #105	; 0x69
   12f90:	strb	r3, [ip, #1]
   12f94:	mov	r3, #66	; 0x42
   12f98:	add	lr, ip, #3
   12f9c:	strb	r3, [ip, #2]
   12fa0:	b	12e1c <strspn@plt+0x1fc0>
   12fa4:	subs	lr, r1, #10
   12fa8:	strd	r2, [sp, #32]
   12fac:	and	r0, r0, #1
   12fb0:	bne	12ef0 <strspn@plt+0x2094>
   12fb4:	ldr	sl, [sp, #32]
   12fb8:	cmp	r0, #0
   12fbc:	movne	r0, lr
   12fc0:	mov	r3, #66	; 0x42
   12fc4:	strb	r0, [ip, #1]
   12fc8:	strb	r3, [ip]
   12fcc:	ldr	r2, [pc, #116]	; 13048 <strspn@plt+0x21ec>
   12fd0:	add	r4, sp, #68	; 0x44
   12fd4:	add	r2, pc, r2
   12fd8:	mov	r3, #32
   12fdc:	stm	sp, {r2, sl}
   12fe0:	str	r9, [sp, #8]
   12fe4:	mov	r0, r4
   12fe8:	mov	r1, r3
   12fec:	mov	r2, #1
   12ff0:	bl	10e50 <__snprintf_chk@plt>
   12ff4:	mov	r0, r4
   12ff8:	bl	10ca0 <strdup@plt>
   12ffc:	ldr	r2, [sp, #100]	; 0x64
   13000:	ldr	r3, [r8]
   13004:	cmp	r2, r3
   13008:	bne	1302c <strspn@plt+0x21d0>
   1300c:	add	sp, sp, #108	; 0x6c
   13010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13014:	ldr	r0, [pc, #48]	; 1304c <strspn@plt+0x21f0>
   13018:	add	r0, pc, r0
   1301c:	b	12eb8 <strspn@plt+0x205c>
   13020:	ldr	r0, [pc, #40]	; 13050 <strspn@plt+0x21f4>
   13024:	add	r0, pc, r0
   13028:	b	12eb8 <strspn@plt+0x205c>
   1302c:	bl	10cac <__stack_chk_fail@plt>
   13030:	muleq	r1, r4, r1
   13034:	ldrdeq	r0, [r0], -r4
   13038:	andeq	r1, r0, r0, asr #6
   1303c:	andeq	r1, r0, r0, asr #6
   13040:	stclgt	12, cr12, [ip], {205}	; 0xcd
   13044:	andeq	r1, r0, r8, asr #5
   13048:	andeq	r1, r0, r8, lsr r2
   1304c:	ldrdeq	r1, [r0], -ip
   13050:	ldrdeq	r1, [r0], -r0
   13054:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13058:	subs	r4, r0, #0
   1305c:	beq	1312c <strspn@plt+0x22d0>
   13060:	ldrsb	lr, [r4]
   13064:	cmp	lr, #0
   13068:	beq	1312c <strspn@plt+0x22d0>
   1306c:	cmp	r1, #0
   13070:	clz	ip, r2
   13074:	lsr	ip, ip, #5
   13078:	moveq	r0, #1
   1307c:	movne	r0, ip
   13080:	cmp	r3, #0
   13084:	moveq	r0, #1
   13088:	cmp	r0, #0
   1308c:	bne	1312c <strspn@plt+0x22d0>
   13090:	mov	r8, r3
   13094:	mov	r7, r2
   13098:	mov	r9, r1
   1309c:	mov	r5, r0
   130a0:	b	130fc <strspn@plt+0x22a0>
   130a4:	cmp	r3, #0
   130a8:	bne	130e8 <strspn@plt+0x228c>
   130ac:	cmn	r4, #1
   130b0:	add	r6, r4, #1
   130b4:	beq	13134 <strspn@plt+0x22d8>
   130b8:	cmp	r0, r6
   130bc:	bcs	1312c <strspn@plt+0x22d0>
   130c0:	sub	r1, r6, r0
   130c4:	blx	r8
   130c8:	cmn	r0, #1
   130cc:	beq	1312c <strspn@plt+0x22d0>
   130d0:	str	r0, [r9, r5, lsl #2]
   130d4:	ldrsb	r3, [r6]
   130d8:	add	r5, r5, #1
   130dc:	cmp	r3, #0
   130e0:	beq	13134 <strspn@plt+0x22d8>
   130e4:	mov	r0, #0
   130e8:	cmn	r4, #1
   130ec:	beq	13134 <strspn@plt+0x22d8>
   130f0:	ldrsb	lr, [r4, #1]!
   130f4:	cmp	lr, #0
   130f8:	beq	13134 <strspn@plt+0x22d8>
   130fc:	cmp	r7, r5
   13100:	mov	r6, r4
   13104:	bls	1313c <strspn@plt+0x22e0>
   13108:	cmp	r0, #0
   1310c:	moveq	r0, r4
   13110:	cmp	lr, #44	; 0x2c
   13114:	ldrsb	r3, [r4, #1]
   13118:	bne	130a4 <strspn@plt+0x2248>
   1311c:	cmp	r3, #0
   13120:	beq	130ac <strspn@plt+0x2250>
   13124:	cmp	r0, r6
   13128:	bcc	130c0 <strspn@plt+0x2264>
   1312c:	mvn	r0, #0
   13130:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13134:	mov	r0, r5
   13138:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1313c:	mvn	r0, #1
   13140:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13144:	cmp	r0, #0
   13148:	beq	131b4 <strspn@plt+0x2358>
   1314c:	push	{r4, lr}
   13150:	mov	r4, r3
   13154:	cmp	r4, #0
   13158:	ldrsb	ip, [r0]
   1315c:	clz	r3, ip
   13160:	lsr	r3, r3, #5
   13164:	moveq	r3, #1
   13168:	cmp	r3, #0
   1316c:	bne	131ac <strspn@plt+0x2350>
   13170:	ldr	lr, [r4]
   13174:	cmp	lr, r2
   13178:	bhi	131ac <strspn@plt+0x2350>
   1317c:	cmp	ip, #43	; 0x2b
   13180:	strne	r3, [r4]
   13184:	addeq	r0, r0, #1
   13188:	ldr	r3, [sp, #8]
   1318c:	addeq	r1, r1, lr, lsl #2
   13190:	subeq	r2, r2, lr
   13194:	bl	13054 <strspn@plt+0x21f8>
   13198:	cmp	r0, #0
   1319c:	ldrgt	r3, [r4]
   131a0:	addgt	r3, r3, r0
   131a4:	strgt	r3, [r4]
   131a8:	pop	{r4, pc}
   131ac:	mvn	r0, #0
   131b0:	pop	{r4, pc}
   131b4:	mvn	r0, #0
   131b8:	bx	lr
   131bc:	cmp	r2, #0
   131c0:	clz	r3, r1
   131c4:	lsr	r3, r3, #5
   131c8:	moveq	r3, #1
   131cc:	cmp	r0, #0
   131d0:	moveq	r3, #1
   131d4:	cmp	r3, #0
   131d8:	bne	132a4 <strspn@plt+0x2448>
   131dc:	push	{r4, r5, r6, r7, r8, lr}
   131e0:	mov	r6, r2
   131e4:	mov	r2, r3
   131e8:	ldrsb	r3, [r0]
   131ec:	mov	r8, r1
   131f0:	mov	r4, r0
   131f4:	mov	r7, #1
   131f8:	cmp	r3, #0
   131fc:	beq	1326c <strspn@plt+0x2410>
   13200:	cmp	r2, #0
   13204:	moveq	r2, r4
   13208:	cmp	r3, #44	; 0x2c
   1320c:	mov	r5, r4
   13210:	ldrsb	r3, [r4, #1]!
   13214:	beq	13274 <strspn@plt+0x2418>
   13218:	cmp	r3, #0
   1321c:	bne	13294 <strspn@plt+0x2438>
   13220:	mov	r5, r4
   13224:	cmp	r2, r5
   13228:	sub	r1, r5, r2
   1322c:	mov	r0, r2
   13230:	bcs	1328c <strspn@plt+0x2430>
   13234:	blx	r6
   13238:	mov	r2, r4
   1323c:	cmp	r0, #0
   13240:	and	r1, r0, #7
   13244:	poplt	{r4, r5, r6, r7, r8, pc}
   13248:	ldrb	r3, [r8, r0, asr #3]
   1324c:	orr	r3, r3, r7, lsl r1
   13250:	strb	r3, [r8, r0, asr #3]
   13254:	ldrsb	r3, [r5]
   13258:	cmp	r3, #0
   1325c:	beq	1326c <strspn@plt+0x2410>
   13260:	ldrsb	r3, [r4]
   13264:	cmp	r3, #0
   13268:	bne	13208 <strspn@plt+0x23ac>
   1326c:	mov	r0, #0
   13270:	pop	{r4, r5, r6, r7, r8, pc}
   13274:	cmp	r3, #0
   13278:	moveq	r5, r4
   1327c:	cmp	r2, r5
   13280:	sub	r1, r5, r2
   13284:	mov	r0, r2
   13288:	bcc	13234 <strspn@plt+0x23d8>
   1328c:	mvn	r0, #0
   13290:	pop	{r4, r5, r6, r7, r8, pc}
   13294:	adds	r4, r5, #1
   13298:	bne	131f8 <strspn@plt+0x239c>
   1329c:	mov	r0, #0
   132a0:	pop	{r4, r5, r6, r7, r8, pc}
   132a4:	mvn	r0, #21
   132a8:	bx	lr
   132ac:	cmp	r2, #0
   132b0:	clz	r3, r1
   132b4:	lsr	r3, r3, #5
   132b8:	moveq	r3, #1
   132bc:	cmp	r0, #0
   132c0:	moveq	r3, #1
   132c4:	cmp	r3, #0
   132c8:	bne	1338c <strspn@plt+0x2530>
   132cc:	push	{r4, r5, r6, r7, r8, lr}
   132d0:	mov	r6, r2
   132d4:	mov	r2, r3
   132d8:	ldrsb	r3, [r0]
   132dc:	mov	r7, r1
   132e0:	mov	r4, r0
   132e4:	cmp	r3, #0
   132e8:	beq	13354 <strspn@plt+0x24f8>
   132ec:	cmp	r2, #0
   132f0:	moveq	r2, r4
   132f4:	cmp	r3, #44	; 0x2c
   132f8:	mov	r5, r4
   132fc:	ldrsb	r3, [r4, #1]!
   13300:	beq	1335c <strspn@plt+0x2500>
   13304:	cmp	r3, #0
   13308:	bne	1337c <strspn@plt+0x2520>
   1330c:	mov	r5, r4
   13310:	cmp	r2, r5
   13314:	sub	r1, r5, r2
   13318:	mov	r0, r2
   1331c:	bcs	13374 <strspn@plt+0x2518>
   13320:	blx	r6
   13324:	mov	r2, r4
   13328:	cmp	r0, #0
   1332c:	poplt	{r4, r5, r6, r7, r8, pc}
   13330:	ldr	r3, [r7]
   13334:	orr	r3, r3, r0
   13338:	str	r3, [r7]
   1333c:	ldrsb	r3, [r5]
   13340:	cmp	r3, #0
   13344:	beq	13354 <strspn@plt+0x24f8>
   13348:	ldrsb	r3, [r4]
   1334c:	cmp	r3, #0
   13350:	bne	132f4 <strspn@plt+0x2498>
   13354:	mov	r0, #0
   13358:	pop	{r4, r5, r6, r7, r8, pc}
   1335c:	cmp	r3, #0
   13360:	moveq	r5, r4
   13364:	cmp	r2, r5
   13368:	sub	r1, r5, r2
   1336c:	mov	r0, r2
   13370:	bcc	13320 <strspn@plt+0x24c4>
   13374:	mvn	r0, #0
   13378:	pop	{r4, r5, r6, r7, r8, pc}
   1337c:	adds	r4, r5, #1
   13380:	bne	132e4 <strspn@plt+0x2488>
   13384:	mov	r0, #0
   13388:	pop	{r4, r5, r6, r7, r8, pc}
   1338c:	mvn	r0, #21
   13390:	bx	lr
   13394:	ldr	ip, [pc, #396]	; 13528 <strspn@plt+0x26cc>
   13398:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1339c:	add	ip, pc, ip
   133a0:	ldr	lr, [pc, #388]	; 1352c <strspn@plt+0x26d0>
   133a4:	sub	sp, sp, #8
   133a8:	mov	r9, r3
   133ac:	ldr	r5, [ip, lr]
   133b0:	mov	sl, #0
   133b4:	subs	r4, r0, #0
   133b8:	ldr	r3, [r5]
   133bc:	mov	r7, r1
   133c0:	str	sl, [sp]
   133c4:	mov	r1, ip
   133c8:	str	r3, [sp, #4]
   133cc:	beq	13440 <strspn@plt+0x25e4>
   133d0:	str	r9, [r7]
   133d4:	str	r9, [r2]
   133d8:	mov	r6, r2
   133dc:	bl	10d78 <__errno_location@plt>
   133e0:	str	sl, [r0]
   133e4:	ldrsb	r3, [r4]
   133e8:	mov	r8, r0
   133ec:	cmp	r3, #58	; 0x3a
   133f0:	beq	1345c <strspn@plt+0x2600>
   133f4:	mov	sl, sp
   133f8:	mov	r1, sl
   133fc:	mov	r2, #10
   13400:	mov	r0, r4
   13404:	bl	10c28 <strtol@plt>
   13408:	str	r0, [r7]
   1340c:	str	r0, [r6]
   13410:	ldr	r0, [r8]
   13414:	cmp	r0, #0
   13418:	bne	134ac <strspn@plt+0x2650>
   1341c:	ldr	r2, [sp]
   13420:	cmp	r2, #0
   13424:	cmpne	r2, r4
   13428:	beq	134ac <strspn@plt+0x2650>
   1342c:	ldrsb	r3, [r2]
   13430:	cmp	r3, #58	; 0x3a
   13434:	beq	134b4 <strspn@plt+0x2658>
   13438:	cmp	r3, #45	; 0x2d
   1343c:	beq	134c4 <strspn@plt+0x2668>
   13440:	mov	r0, #0
   13444:	ldr	r2, [sp, #4]
   13448:	ldr	r3, [r5]
   1344c:	cmp	r2, r3
   13450:	bne	13524 <strspn@plt+0x26c8>
   13454:	add	sp, sp, #8
   13458:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1345c:	add	r4, r4, #1
   13460:	mov	r0, r4
   13464:	mov	r2, #10
   13468:	mov	r1, sp
   1346c:	bl	10c28 <strtol@plt>
   13470:	str	r0, [r6]
   13474:	ldr	r3, [r8]
   13478:	cmp	r3, #0
   1347c:	bne	134ac <strspn@plt+0x2650>
   13480:	ldr	r3, [sp]
   13484:	cmp	r3, #0
   13488:	beq	134ac <strspn@plt+0x2650>
   1348c:	ldrsb	r2, [r3]
   13490:	sub	r3, r3, r4
   13494:	clz	r3, r3
   13498:	cmp	r2, #0
   1349c:	lsr	r3, r3, #5
   134a0:	movne	r3, #1
   134a4:	cmp	r3, #0
   134a8:	beq	13440 <strspn@plt+0x25e4>
   134ac:	mvn	r0, #0
   134b0:	b	13444 <strspn@plt+0x25e8>
   134b4:	ldrsb	r3, [r2, #1]
   134b8:	cmp	r3, #0
   134bc:	streq	r9, [r6]
   134c0:	beq	13444 <strspn@plt+0x25e8>
   134c4:	mov	r3, #0
   134c8:	add	r4, r2, #1
   134cc:	str	r3, [r8]
   134d0:	mov	r1, sl
   134d4:	mov	r0, r4
   134d8:	mov	r2, #10
   134dc:	str	r3, [sp]
   134e0:	bl	10c28 <strtol@plt>
   134e4:	str	r0, [r6]
   134e8:	ldr	r3, [r8]
   134ec:	cmp	r3, #0
   134f0:	bne	134ac <strspn@plt+0x2650>
   134f4:	ldr	r2, [sp]
   134f8:	cmp	r2, #0
   134fc:	beq	134ac <strspn@plt+0x2650>
   13500:	ldrsb	r3, [r2]
   13504:	sub	r2, r2, r4
   13508:	clz	r2, r2
   1350c:	cmp	r3, #0
   13510:	lsr	r2, r2, #5
   13514:	movne	r2, #1
   13518:	cmp	r2, #0
   1351c:	beq	13440 <strspn@plt+0x25e4>
   13520:	b	134ac <strspn@plt+0x2650>
   13524:	bl	10cac <__stack_chk_fail@plt>
   13528:	andeq	r1, r1, r0, lsl #23
   1352c:	ldrdeq	r0, [r0], -r4
   13530:	ldr	r3, [pc, #244]	; 1362c <strspn@plt+0x27d0>
   13534:	ldr	r2, [pc, #244]	; 13630 <strspn@plt+0x27d4>
   13538:	add	r3, pc, r3
   1353c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13540:	sub	sp, sp, #20
   13544:	ldr	r9, [r3, r2]
   13548:	cmp	r0, #0
   1354c:	cmpne	r1, #0
   13550:	ldr	r3, [r9]
   13554:	str	r3, [sp, #12]
   13558:	beq	13620 <strspn@plt+0x27c4>
   1355c:	mov	r4, r1
   13560:	add	r8, sp, #4
   13564:	add	r7, sp, #8
   13568:	b	135a8 <strspn@plt+0x274c>
   1356c:	cmp	r4, r3
   13570:	bne	13620 <strspn@plt+0x27c4>
   13574:	mov	r2, r4
   13578:	mov	r1, r6
   1357c:	mov	r0, r5
   13580:	bl	10e38 <strncmp@plt>
   13584:	cmp	r0, #0
   13588:	bne	13620 <strspn@plt+0x27c4>
   1358c:	adds	r0, r5, r4
   13590:	moveq	r3, #0
   13594:	movne	r3, #1
   13598:	adds	r4, r6, r4
   1359c:	moveq	r3, #0
   135a0:	cmp	r3, #0
   135a4:	beq	13620 <strspn@plt+0x27c4>
   135a8:	mov	r1, r8
   135ac:	bl	119b0 <strspn@plt+0xb54>
   135b0:	mov	r1, r7
   135b4:	mov	r5, r0
   135b8:	mov	r0, r4
   135bc:	bl	119b0 <strspn@plt+0xb54>
   135c0:	ldr	r4, [sp, #4]
   135c4:	ldr	r3, [sp, #8]
   135c8:	mov	r6, r0
   135cc:	adds	r0, r4, r3
   135d0:	beq	13604 <strspn@plt+0x27a8>
   135d4:	cmp	r0, #1
   135d8:	bne	1356c <strspn@plt+0x2710>
   135dc:	cmp	r5, #0
   135e0:	beq	135f0 <strspn@plt+0x2794>
   135e4:	ldrsb	r2, [r5]
   135e8:	cmp	r2, #47	; 0x2f
   135ec:	beq	13608 <strspn@plt+0x27ac>
   135f0:	cmp	r6, #0
   135f4:	beq	1356c <strspn@plt+0x2710>
   135f8:	ldrsb	r2, [r6]
   135fc:	cmp	r2, #47	; 0x2f
   13600:	bne	1356c <strspn@plt+0x2710>
   13604:	mov	r0, #1
   13608:	ldr	r2, [sp, #12]
   1360c:	ldr	r3, [r9]
   13610:	cmp	r2, r3
   13614:	bne	13628 <strspn@plt+0x27cc>
   13618:	add	sp, sp, #20
   1361c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13620:	mov	r0, #0
   13624:	b	13608 <strspn@plt+0x27ac>
   13628:	bl	10cac <__stack_chk_fail@plt>
   1362c:	andeq	r1, r1, r4, ror #19
   13630:	ldrdeq	r0, [r0], -r4
   13634:	orrs	r3, r0, r1
   13638:	beq	136b4 <strspn@plt+0x2858>
   1363c:	cmp	r0, #0
   13640:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13644:	mov	r4, r1
   13648:	mov	r5, r0
   1364c:	beq	136c0 <strspn@plt+0x2864>
   13650:	cmp	r1, #0
   13654:	beq	136d0 <strspn@plt+0x2874>
   13658:	mov	r6, r2
   1365c:	bl	10d54 <strlen@plt>
   13660:	mvn	r3, r0
   13664:	cmp	r6, r3
   13668:	mov	r7, r0
   1366c:	movhi	r8, #0
   13670:	bhi	136ac <strspn@plt+0x2850>
   13674:	add	r9, r6, r0
   13678:	add	r0, r9, #1
   1367c:	bl	10cf4 <malloc@plt>
   13680:	subs	r8, r0, #0
   13684:	beq	136ac <strspn@plt+0x2850>
   13688:	mov	r1, r5
   1368c:	mov	r2, r7
   13690:	bl	10c70 <memcpy@plt>
   13694:	mov	r2, r6
   13698:	mov	r1, r4
   1369c:	add	r0, r8, r7
   136a0:	bl	10c70 <memcpy@plt>
   136a4:	mov	r3, #0
   136a8:	strb	r3, [r8, r9]
   136ac:	mov	r0, r8
   136b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136b4:	ldr	r0, [pc, #28]	; 136d8 <strspn@plt+0x287c>
   136b8:	add	r0, pc, r0
   136bc:	b	10ca0 <strdup@plt>
   136c0:	mov	r0, r4
   136c4:	mov	r1, r2
   136c8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   136cc:	b	10c58 <strndup@plt>
   136d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   136d4:	b	10ca0 <strdup@plt>
   136d8:	andeq	r0, r0, ip, ror #12
   136dc:	push	{r4, r5, r6, lr}
   136e0:	subs	r4, r1, #0
   136e4:	mov	r5, r0
   136e8:	moveq	r2, r4
   136ec:	beq	136fc <strspn@plt+0x28a0>
   136f0:	mov	r0, r4
   136f4:	bl	10d54 <strlen@plt>
   136f8:	mov	r2, r0
   136fc:	mov	r1, r4
   13700:	mov	r0, r5
   13704:	pop	{r4, r5, r6, lr}
   13708:	b	13634 <strspn@plt+0x27d8>
   1370c:	push	{r1, r2, r3}
   13710:	ldr	r1, [pc, #132]	; 1379c <strspn@plt+0x2940>
   13714:	ldr	r3, [pc, #132]	; 137a0 <strspn@plt+0x2944>
   13718:	add	r1, pc, r1
   1371c:	push	{r4, r5, lr}
   13720:	mov	r5, r0
   13724:	ldr	r4, [r1, r3]
   13728:	sub	sp, sp, #16
   1372c:	add	ip, sp, #32
   13730:	ldr	r0, [r4]
   13734:	ldr	r2, [sp, #28]
   13738:	str	r0, [sp, #12]
   1373c:	mov	r3, ip
   13740:	add	r0, sp, #8
   13744:	mov	r1, #1
   13748:	str	ip, [sp, #4]
   1374c:	bl	10d90 <__vasprintf_chk@plt>
   13750:	subs	r2, r0, #0
   13754:	movlt	r5, #0
   13758:	blt	13774 <strspn@plt+0x2918>
   1375c:	mov	r0, r5
   13760:	ldr	r1, [sp, #8]
   13764:	bl	13634 <strspn@plt+0x27d8>
   13768:	mov	r5, r0
   1376c:	ldr	r0, [sp, #8]
   13770:	bl	10c40 <free@plt>
   13774:	ldr	r2, [sp, #12]
   13778:	ldr	r3, [r4]
   1377c:	mov	r0, r5
   13780:	cmp	r2, r3
   13784:	bne	13798 <strspn@plt+0x293c>
   13788:	add	sp, sp, #16
   1378c:	pop	{r4, r5, lr}
   13790:	add	sp, sp, #12
   13794:	bx	lr
   13798:	bl	10cac <__stack_chk_fail@plt>
   1379c:	andeq	r1, r1, r4, lsl #16
   137a0:	ldrdeq	r0, [r0], -r4
   137a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137a8:	mov	r6, r0
   137ac:	ldr	r0, [pc, #348]	; 13910 <strspn@plt+0x2ab4>
   137b0:	ldr	ip, [pc, #348]	; 13914 <strspn@plt+0x2ab8>
   137b4:	add	r0, pc, r0
   137b8:	ldr	r5, [r6]
   137bc:	ldr	r8, [r0, ip]
   137c0:	sub	sp, sp, #8
   137c4:	ldrsb	r4, [r5]
   137c8:	mov	r9, r2
   137cc:	ldr	r2, [r8]
   137d0:	cmp	r4, #0
   137d4:	mov	r7, r1
   137d8:	str	r2, [sp, #4]
   137dc:	mov	r1, r0
   137e0:	beq	13890 <strspn@plt+0x2a34>
   137e4:	mov	r0, r5
   137e8:	mov	r1, r9
   137ec:	mov	sl, r3
   137f0:	bl	10e5c <strspn@plt>
   137f4:	add	r4, r5, r0
   137f8:	ldrsb	r5, [r5, r0]
   137fc:	cmp	r5, #0
   13800:	beq	138f8 <strspn@plt+0x2a9c>
   13804:	cmp	sl, #0
   13808:	beq	138ac <strspn@plt+0x2a50>
   1380c:	ldr	r0, [pc, #260]	; 13918 <strspn@plt+0x2abc>
   13810:	mov	r1, r5
   13814:	add	r0, pc, r0
   13818:	bl	10d60 <strchr@plt>
   1381c:	cmp	r0, #0
   13820:	beq	138c8 <strspn@plt+0x2a6c>
   13824:	add	sl, r4, #1
   13828:	mov	r3, #0
   1382c:	mov	r0, sl
   13830:	mov	r1, sp
   13834:	strb	r5, [sp]
   13838:	strb	r3, [sp, #1]
   1383c:	bl	11a50 <strspn@plt+0xbf4>
   13840:	add	r3, r4, r0
   13844:	str	r0, [r7]
   13848:	ldrsb	r3, [r3, #1]
   1384c:	subs	r5, r5, r3
   13850:	movne	r5, #1
   13854:	cmp	r3, #0
   13858:	moveq	r5, #1
   1385c:	cmp	r5, #0
   13860:	bne	138f8 <strspn@plt+0x2a9c>
   13864:	add	r0, r0, #2
   13868:	add	r5, r4, r0
   1386c:	ldrsb	r1, [r4, r0]
   13870:	cmp	r1, #0
   13874:	beq	13888 <strspn@plt+0x2a2c>
   13878:	mov	r0, r9
   1387c:	bl	10d60 <strchr@plt>
   13880:	cmp	r0, #0
   13884:	beq	138f8 <strspn@plt+0x2a9c>
   13888:	mov	r4, sl
   1388c:	str	r5, [r6]
   13890:	ldr	r2, [sp, #4]
   13894:	ldr	r3, [r8]
   13898:	mov	r0, r4
   1389c:	cmp	r2, r3
   138a0:	bne	1390c <strspn@plt+0x2ab0>
   138a4:	add	sp, sp, #8
   138a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138ac:	mov	r1, r9
   138b0:	mov	r0, r4
   138b4:	bl	10c34 <strcspn@plt>
   138b8:	add	r3, r4, r0
   138bc:	str	r0, [r7]
   138c0:	str	r3, [r6]
   138c4:	b	13890 <strspn@plt+0x2a34>
   138c8:	mov	r1, r9
   138cc:	mov	r0, r4
   138d0:	bl	11a50 <strspn@plt+0xbf4>
   138d4:	str	r0, [r7]
   138d8:	ldrsb	r1, [r4, r0]
   138dc:	add	r5, r4, r0
   138e0:	cmp	r1, #0
   138e4:	beq	13904 <strspn@plt+0x2aa8>
   138e8:	mov	r0, r9
   138ec:	bl	10d60 <strchr@plt>
   138f0:	cmp	r0, #0
   138f4:	bne	13904 <strspn@plt+0x2aa8>
   138f8:	str	r4, [r6]
   138fc:	mov	r4, #0
   13900:	b	13890 <strspn@plt+0x2a34>
   13904:	str	r5, [r6]
   13908:	b	13890 <strspn@plt+0x2a34>
   1390c:	bl	10cac <__stack_chk_fail@plt>
   13910:	andeq	r1, r1, r8, ror #14
   13914:	ldrdeq	r0, [r0], -r4
   13918:	andeq	r0, r0, r0, lsl #20
   1391c:	push	{r4, lr}
   13920:	mov	r4, r0
   13924:	b	13930 <strspn@plt+0x2ad4>
   13928:	cmp	r0, #10
   1392c:	beq	13948 <strspn@plt+0x2aec>
   13930:	mov	r0, r4
   13934:	bl	10d9c <fgetc@plt>
   13938:	cmn	r0, #1
   1393c:	bne	13928 <strspn@plt+0x2acc>
   13940:	mov	r0, #1
   13944:	pop	{r4, pc}
   13948:	mov	r0, #0
   1394c:	pop	{r4, pc}
   13950:	cmp	r3, #0
   13954:	cmpeq	r2, #0
   13958:	bne	13970 <strspn@plt+0x2b14>
   1395c:	cmp	r1, #0
   13960:	cmpeq	r0, #0
   13964:	mvnne	r1, #0
   13968:	mvnne	r0, #0
   1396c:	b	1398c <strspn@plt+0x2b30>
   13970:	sub	sp, sp, #8
   13974:	push	{sp, lr}
   13978:	bl	1399c <strspn@plt+0x2b40>
   1397c:	ldr	lr, [sp, #4]
   13980:	add	sp, sp, #8
   13984:	pop	{r2, r3}
   13988:	bx	lr
   1398c:	push	{r1, lr}
   13990:	mov	r0, #8
   13994:	bl	10c10 <raise@plt>
   13998:	pop	{r1, pc}
   1399c:	cmp	r1, r3
   139a0:	cmpeq	r0, r2
   139a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139a8:	mov	r4, r0
   139ac:	movcc	r0, #0
   139b0:	mov	r5, r1
   139b4:	ldr	lr, [sp, #36]	; 0x24
   139b8:	movcc	r1, r0
   139bc:	bcc	13ab8 <strspn@plt+0x2c5c>
   139c0:	cmp	r3, #0
   139c4:	clzeq	ip, r2
   139c8:	clzne	ip, r3
   139cc:	addeq	ip, ip, #32
   139d0:	cmp	r5, #0
   139d4:	clzeq	r1, r4
   139d8:	addeq	r1, r1, #32
   139dc:	clzne	r1, r5
   139e0:	sub	ip, ip, r1
   139e4:	sub	sl, ip, #32
   139e8:	lsl	r9, r3, ip
   139ec:	rsb	fp, ip, #32
   139f0:	orr	r9, r9, r2, lsl sl
   139f4:	orr	r9, r9, r2, lsr fp
   139f8:	lsl	r8, r2, ip
   139fc:	cmp	r5, r9
   13a00:	cmpeq	r4, r8
   13a04:	movcc	r0, #0
   13a08:	movcc	r1, r0
   13a0c:	bcc	13a28 <strspn@plt+0x2bcc>
   13a10:	mov	r0, #1
   13a14:	subs	r4, r4, r8
   13a18:	lsl	r1, r0, sl
   13a1c:	orr	r1, r1, r0, lsr fp
   13a20:	lsl	r0, r0, ip
   13a24:	sbc	r5, r5, r9
   13a28:	cmp	ip, #0
   13a2c:	beq	13ab8 <strspn@plt+0x2c5c>
   13a30:	lsr	r6, r8, #1
   13a34:	orr	r6, r6, r9, lsl #31
   13a38:	lsr	r7, r9, #1
   13a3c:	mov	r2, ip
   13a40:	b	13a64 <strspn@plt+0x2c08>
   13a44:	subs	r3, r4, r6
   13a48:	sbc	r8, r5, r7
   13a4c:	adds	r3, r3, r3
   13a50:	adc	r8, r8, r8
   13a54:	adds	r4, r3, #1
   13a58:	adc	r5, r8, #0
   13a5c:	subs	r2, r2, #1
   13a60:	beq	13a80 <strspn@plt+0x2c24>
   13a64:	cmp	r5, r7
   13a68:	cmpeq	r4, r6
   13a6c:	bcs	13a44 <strspn@plt+0x2be8>
   13a70:	adds	r4, r4, r4
   13a74:	adc	r5, r5, r5
   13a78:	subs	r2, r2, #1
   13a7c:	bne	13a64 <strspn@plt+0x2c08>
   13a80:	lsr	r3, r4, ip
   13a84:	orr	r3, r3, r5, lsl fp
   13a88:	lsr	r2, r5, ip
   13a8c:	orr	r3, r3, r5, lsr sl
   13a90:	adds	r0, r0, r4
   13a94:	mov	r4, r3
   13a98:	lsl	r3, r2, ip
   13a9c:	orr	r3, r3, r4, lsl sl
   13aa0:	lsl	ip, r4, ip
   13aa4:	orr	r3, r3, r4, lsr fp
   13aa8:	adc	r1, r1, r5
   13aac:	subs	r0, r0, ip
   13ab0:	mov	r5, r2
   13ab4:	sbc	r1, r1, r3
   13ab8:	cmp	lr, #0
   13abc:	strdne	r4, [lr]
   13ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ac8:	mov	r7, r0
   13acc:	ldr	r6, [pc, #72]	; 13b1c <strspn@plt+0x2cc0>
   13ad0:	ldr	r5, [pc, #72]	; 13b20 <strspn@plt+0x2cc4>
   13ad4:	add	r6, pc, r6
   13ad8:	add	r5, pc, r5
   13adc:	sub	r6, r6, r5
   13ae0:	mov	r8, r1
   13ae4:	mov	r9, r2
   13ae8:	bl	10bf0 <raise@plt-0x20>
   13aec:	asrs	r6, r6, #2
   13af0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13af4:	mov	r4, #0
   13af8:	add	r4, r4, #1
   13afc:	ldr	r3, [r5], #4
   13b00:	mov	r2, r9
   13b04:	mov	r1, r8
   13b08:	mov	r0, r7
   13b0c:	blx	r3
   13b10:	cmp	r6, r4
   13b14:	bne	13af8 <strspn@plt+0x2c9c>
   13b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b1c:	andeq	r1, r1, r4, asr #6
   13b20:	andeq	r1, r1, ip, lsr r3
   13b24:	bx	lr
   13b28:	ldr	r3, [pc, #12]	; 13b3c <strspn@plt+0x2ce0>
   13b2c:	mov	r1, #0
   13b30:	add	r3, pc, r3
   13b34:	ldr	r2, [r3]
   13b38:	b	10d84 <__cxa_atexit@plt>
   13b3c:	andeq	r1, r1, ip, asr #9

Disassembly of section .fini:

00013b40 <.fini>:
   13b40:	push	{r3, lr}
   13b44:	pop	{r3, pc}
