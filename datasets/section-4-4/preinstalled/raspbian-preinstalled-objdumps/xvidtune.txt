
raspbian-preinstalled/xvidtune:     file format elf32-littlearm


Disassembly of section .init:

000113e8 <.init>:
   113e8:	push	{r3, lr}
   113ec:	bl	12b0c <__snprintf_chk@plt+0x13d4>
   113f0:	pop	{r3, pc}

Disassembly of section .plt:

000113f4 <XtGetApplicationResources@plt-0x14>:
   113f4:	push	{lr}		; (str lr, [sp, #-4]!)
   113f8:	ldr	lr, [pc, #4]	; 11404 <XtGetApplicationResources@plt-0x4>
   113fc:	add	lr, pc, lr
   11400:	ldr	pc, [lr, #8]!
   11404:	strdeq	r5, [r1], -ip

00011408 <XtGetApplicationResources@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3068]!	; 0xbfc

00011414 <raise@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3060]!	; 0xbf4

00011420 <XBell@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3052]!	; 0xbec

0001142c <strcmp@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3044]!	; 0xbe4

00011438 <XtCreateWidget@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #86016	; 0x15000
   11440:	ldr	pc, [ip, #3036]!	; 0xbdc

00011444 <strtol@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #86016	; 0x15000
   1144c:	ldr	pc, [ip, #3028]!	; 0xbd4

00011450 <XtAppSetExitFlag@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #86016	; 0x15000
   11458:	ldr	pc, [ip, #3020]!	; 0xbcc

0001145c <XawScrollbarSetThumb@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #86016	; 0x15000
   11464:	ldr	pc, [ip, #3012]!	; 0xbc4

00011468 <XtVaCreatePopupShell@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #86016	; 0x15000
   11470:	ldr	pc, [ip, #3004]!	; 0xbbc

00011474 <XtAppAddTimeOut@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #86016	; 0x15000
   1147c:	ldr	pc, [ip, #2996]!	; 0xbb4

00011480 <signal@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #86016	; 0x15000
   11488:	ldr	pc, [ip, #2988]!	; 0xbac

0001148c <XtVaSetValues@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #86016	; 0x15000
   11494:	ldr	pc, [ip, #2980]!	; 0xba4

00011498 <XawTextSetInsertionPoint@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #86016	; 0x15000
   114a0:	ldr	pc, [ip, #2972]!	; 0xb9c

000114a4 <XmuConvertStandardSelection@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #86016	; 0x15000
   114ac:	ldr	pc, [ip, #2964]!	; 0xb94

000114b0 <XtWindow@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #86016	; 0x15000
   114b8:	ldr	pc, [ip, #2956]!	; 0xb8c

000114bc <__stack_chk_fail@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #86016	; 0x15000
   114c4:	ldr	pc, [ip, #2948]!	; 0xb84

000114c8 <XF86VidModeGetMonitor@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #86016	; 0x15000
   114d0:	ldr	pc, [ip, #2940]!	; 0xb7c

000114d4 <XF86VidModeQueryVersion@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #86016	; 0x15000
   114dc:	ldr	pc, [ip, #2932]!	; 0xb74

000114e0 <XtOwnSelection@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #86016	; 0x15000
   114e8:	ldr	pc, [ip, #2924]!	; 0xb6c

000114ec <XtVaCreateManagedWidget@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #86016	; 0x15000
   114f4:	ldr	pc, [ip, #2916]!	; 0xb64

000114f8 <XtWidgetToApplicationContext@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #86016	; 0x15000
   11500:	ldr	pc, [ip, #2908]!	; 0xb5c

00011504 <fwrite@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #86016	; 0x15000
   1150c:	ldr	pc, [ip, #2900]!	; 0xb54

00011510 <XtVaCreateWidget@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #86016	; 0x15000
   11518:	ldr	pc, [ip, #2892]!	; 0xb4c

0001151c <XF86VidModeGetModeLine@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #86016	; 0x15000
   11524:	ldr	pc, [ip, #2884]!	; 0xb44

00011528 <puts@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #86016	; 0x15000
   11530:	ldr	pc, [ip, #2876]!	; 0xb3c

00011534 <XtRemoveTimeOut@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #86016	; 0x15000
   1153c:	ldr	pc, [ip, #2868]!	; 0xb34

00011540 <__libc_start_main@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #86016	; 0x15000
   11548:	ldr	pc, [ip, #2860]!	; 0xb2c

0001154c <XtRealizeWidget@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #86016	; 0x15000
   11554:	ldr	pc, [ip, #2852]!	; 0xb24

00011558 <XtPopdown@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #86016	; 0x15000
   11560:	ldr	pc, [ip, #2844]!	; 0xb1c

00011564 <__gmon_start__@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #86016	; 0x15000
   1156c:	ldr	pc, [ip, #2836]!	; 0xb14

00011570 <XtPopup@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #86016	; 0x15000
   11578:	ldr	pc, [ip, #2828]!	; 0xb0c

0001157c <__ctype_b_loc@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #86016	; 0x15000
   11584:	ldr	pc, [ip, #2820]!	; 0xb04

00011588 <exit@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #86016	; 0x15000
   11590:	ldr	pc, [ip, #2812]!	; 0xafc

00011594 <XSetWMProtocols@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #86016	; 0x15000
   1159c:	ldr	pc, [ip, #2804]!	; 0xaf4

000115a0 <XtOverrideTranslations@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #86016	; 0x15000
   115a8:	ldr	pc, [ip, #2796]!	; 0xaec

000115ac <strlen@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #86016	; 0x15000
   115b4:	ldr	pc, [ip, #2788]!	; 0xae4

000115b8 <XawTextReplace@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #86016	; 0x15000
   115c0:	ldr	pc, [ip, #2780]!	; 0xadc

000115c4 <XSetErrorHandler@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #86016	; 0x15000
   115cc:	ldr	pc, [ip, #2772]!	; 0xad4

000115d0 <XtNoticeSignal@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #86016	; 0x15000
   115d8:	ldr	pc, [ip, #2764]!	; 0xacc

000115dc <XtAppAddActions@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #86016	; 0x15000
   115e4:	ldr	pc, [ip, #2756]!	; 0xac4

000115e8 <XInternAtom@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #86016	; 0x15000
   115f0:	ldr	pc, [ip, #2748]!	; 0xabc

000115f4 <__strcat_chk@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #86016	; 0x15000
   115fc:	ldr	pc, [ip, #2740]!	; 0xab4

00011600 <__isoc99_sscanf@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #86016	; 0x15000
   11608:	ldr	pc, [ip, #2732]!	; 0xaac

0001160c <putchar@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #86016	; 0x15000
   11614:	ldr	pc, [ip, #2724]!	; 0xaa4

00011618 <strncpy@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #86016	; 0x15000
   11620:	ldr	pc, [ip, #2716]!	; 0xa9c

00011624 <XtVaGetValues@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #86016	; 0x15000
   1162c:	ldr	pc, [ip, #2708]!	; 0xa94

00011630 <XtAppMainLoop@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #86016	; 0x15000
   11638:	ldr	pc, [ip, #2700]!	; 0xa8c

0001163c <XtDisplay@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #86016	; 0x15000
   11644:	ldr	pc, [ip, #2692]!	; 0xa84

00011648 <XSync@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #86016	; 0x15000
   11650:	ldr	pc, [ip, #2684]!	; 0xa7c

00011654 <__printf_chk@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #86016	; 0x15000
   1165c:	ldr	pc, [ip, #2676]!	; 0xa74

00011660 <XtParseTranslationTable@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #86016	; 0x15000
   11668:	ldr	pc, [ip, #2668]!	; 0xa6c

0001166c <__fprintf_chk@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #86016	; 0x15000
   11674:	ldr	pc, [ip, #2660]!	; 0xa64

00011678 <XF86VidModeModModeLine@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #86016	; 0x15000
   11680:	ldr	pc, [ip, #2652]!	; 0xa5c

00011684 <XtLastTimestampProcessed@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #86016	; 0x15000
   1168c:	ldr	pc, [ip, #2644]!	; 0xa54

00011690 <XF86VidModeSwitchMode@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #86016	; 0x15000
   11698:	ldr	pc, [ip, #2636]!	; 0xa4c

0001169c <XFlush@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #86016	; 0x15000
   116a4:	ldr	pc, [ip, #2628]!	; 0xa44

000116a8 <XtDestroyWidget@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #86016	; 0x15000
   116b0:	ldr	pc, [ip, #2620]!	; 0xa3c

000116b4 <XMapWindow@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #86016	; 0x15000
   116bc:	ldr	pc, [ip, #2612]!	; 0xa34

000116c0 <XtParent@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #86016	; 0x15000
   116c8:	ldr	pc, [ip, #2604]!	; 0xa2c

000116cc <XF86VidModeQueryExtension@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #86016	; 0x15000
   116d4:	ldr	pc, [ip, #2596]!	; 0xa24

000116d8 <XtManageChildren@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #86016	; 0x15000
   116e0:	ldr	pc, [ip, #2588]!	; 0xa1c

000116e4 <XtManageChild@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #86016	; 0x15000
   116ec:	ldr	pc, [ip, #2580]!	; 0xa14

000116f0 <XtAddCallback@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #86016	; 0x15000
   116f8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116fc <XF86VidModeLockModeSwitch@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #86016	; 0x15000
   11704:	ldr	pc, [ip, #2564]!	; 0xa04

00011708 <abort@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #86016	; 0x15000
   11710:	ldr	pc, [ip, #2556]!	; 0x9fc

00011714 <XawTextGetInsertionPoint@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #86016	; 0x15000
   1171c:	ldr	pc, [ip, #2548]!	; 0x9f4

00011720 <XtAppAddSignal@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #86016	; 0x15000
   11728:	ldr	pc, [ip, #2540]!	; 0x9ec

0001172c <XtVaOpenApplication@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #86016	; 0x15000
   11734:	ldr	pc, [ip, #2532]!	; 0x9e4

00011738 <__snprintf_chk@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #86016	; 0x15000
   11740:	ldr	pc, [ip, #2524]!	; 0x9dc

Disassembly of section .text:

00011748 <.text>:
   11748:	ldr	r2, [pc, #3764]	; 12604 <__snprintf_chk@plt+0xecc>
   1174c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11750:	sub	sp, sp, #196	; 0xc4
   11754:	ldr	r7, [pc, #3756]	; 12608 <__snprintf_chk@plt+0xed0>
   11758:	ldr	r2, [r2]
   1175c:	ldr	r3, [pc, #3752]	; 1260c <__snprintf_chk@plt+0xed4>
   11760:	mov	r8, #0
   11764:	ldr	ip, [r7]
   11768:	mov	r9, r1
   1176c:	add	r1, sp, #44	; 0x2c
   11770:	strd	r2, [sp, #12]
   11774:	str	r0, [sp, #44]	; 0x2c
   11778:	mov	r3, r8
   1177c:	mov	r2, r8
   11780:	str	r1, [sp]
   11784:	str	r9, [sp, #4]
   11788:	ldr	r1, [pc, #3712]	; 12610 <__snprintf_chk@plt+0xed8>
   1178c:	str	r8, [sp, #24]
   11790:	str	r8, [sp, #20]
   11794:	str	r8, [sp, #8]
   11798:	add	r0, sp, #52	; 0x34
   1179c:	str	ip, [sp, #188]	; 0xbc
   117a0:	bl	1172c <XtVaOpenApplication@plt>
   117a4:	ldr	r4, [pc, #3688]	; 12614 <__snprintf_chk@plt+0xedc>
   117a8:	ldr	r6, [pc, #3688]	; 12618 <__snprintf_chk@plt+0xee0>
   117ac:	str	r8, [sp, #4]
   117b0:	str	r8, [sp]
   117b4:	mov	r3, #7
   117b8:	add	r2, r6, #584	; 0x248
   117bc:	mov	r1, r6
   117c0:	str	r0, [r4, #4]
   117c4:	mov	r5, r0
   117c8:	bl	11408 <XtGetApplicationResources@plt>
   117cc:	ldr	r3, [r6, #448]	; 0x1c0
   117d0:	cmp	r3, r8
   117d4:	beq	118bc <__snprintf_chk@plt+0x184>
   117d8:	mov	r0, r5
   117dc:	bl	1163c <XtDisplay@plt>
   117e0:	add	r2, r4, #212	; 0xd4
   117e4:	add	r1, r4, #216	; 0xd8
   117e8:	bl	114d4 <XF86VidModeQueryVersion@plt>
   117ec:	cmp	r0, #0
   117f0:	beq	119b4 <__snprintf_chk@plt+0x27c>
   117f4:	mov	r0, r5
   117f8:	bl	1163c <XtDisplay@plt>
   117fc:	add	r2, r4, #200	; 0xc8
   11800:	add	r1, r4, #220	; 0xdc
   11804:	bl	116cc <XF86VidModeQueryExtension@plt>
   11808:	cmp	r0, #0
   1180c:	beq	11a14 <__snprintf_chk@plt+0x2dc>
   11810:	ldr	r3, [r4, #216]	; 0xd8
   11814:	cmp	r3, #0
   11818:	blt	12550 <__snprintf_chk@plt+0xe18>
   1181c:	bne	1182c <__snprintf_chk@plt+0xf4>
   11820:	ldr	r2, [r4, #212]	; 0xd4
   11824:	cmp	r2, #4
   11828:	ble	12550 <__snprintf_chk@plt+0xe18>
   1182c:	ldr	r8, [sp, #44]	; 0x2c
   11830:	cmp	r8, #3
   11834:	beq	118f4 <__snprintf_chk@plt+0x1bc>
   11838:	cmp	r8, #1
   1183c:	ble	11928 <__snprintf_chk@plt+0x1f0>
   11840:	cmp	r8, #2
   11844:	bne	12acc <__snprintf_chk@plt+0x1394>
   11848:	ldr	r4, [r9, #4]
   1184c:	ldr	r1, [pc, #3528]	; 1261c <__snprintf_chk@plt+0xee4>
   11850:	mov	r0, r4
   11854:	bl	1142c <strcmp@plt>
   11858:	subs	r6, r0, #0
   1185c:	beq	119d4 <__snprintf_chk@plt+0x29c>
   11860:	ldr	r1, [pc, #3512]	; 12620 <__snprintf_chk@plt+0xee8>
   11864:	mov	r0, r4
   11868:	bl	1142c <strcmp@plt>
   1186c:	cmp	r0, #0
   11870:	beq	12430 <__snprintf_chk@plt+0xcf8>
   11874:	ldr	r1, [pc, #3496]	; 12624 <__snprintf_chk@plt+0xeec>
   11878:	mov	r0, r4
   1187c:	bl	1142c <strcmp@plt>
   11880:	cmp	r0, #0
   11884:	beq	11974 <__snprintf_chk@plt+0x23c>
   11888:	mov	r0, r4
   1188c:	ldr	r1, [pc, #3476]	; 12628 <__snprintf_chk@plt+0xef0>
   11890:	bl	1142c <strcmp@plt>
   11894:	subs	r8, r0, #0
   11898:	bne	12acc <__snprintf_chk@plt+0x1394>
   1189c:	mov	r0, r5
   118a0:	bl	1163c <XtDisplay@plt>
   118a4:	bl	12c8c <__snprintf_chk@plt+0x1554>
   118a8:	mov	r0, r5
   118ac:	bl	1163c <XtDisplay@plt>
   118b0:	mov	r1, #1
   118b4:	bl	11648 <XSync@plt>
   118b8:	b	118d8 <__snprintf_chk@plt+0x1a0>
   118bc:	ldr	r3, [pc, #3432]	; 1262c <__snprintf_chk@plt+0xef4>
   118c0:	mov	r2, #40	; 0x28
   118c4:	mov	r1, #1
   118c8:	ldr	r3, [r3]
   118cc:	ldr	r0, [pc, #3420]	; 12630 <__snprintf_chk@plt+0xef8>
   118d0:	bl	11504 <fwrite@plt>
   118d4:	mov	r8, #3
   118d8:	ldr	r2, [sp, #188]	; 0xbc
   118dc:	ldr	r3, [r7]
   118e0:	mov	r0, r8
   118e4:	cmp	r2, r3
   118e8:	bne	12ac8 <__snprintf_chk@plt+0x1390>
   118ec:	add	sp, sp, #196	; 0xc4
   118f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118f4:	ldr	r1, [pc, #3384]	; 12634 <__snprintf_chk@plt+0xefc>
   118f8:	ldr	r0, [r9, #4]
   118fc:	bl	1142c <strcmp@plt>
   11900:	subs	r1, r0, #0
   11904:	bne	12acc <__snprintf_chk@plt+0x1394>
   11908:	mov	r2, #10
   1190c:	ldr	r0, [r9, #8]
   11910:	bl	11444 <strtol@plt>
   11914:	mov	r3, #1000	; 0x3e8
   11918:	ldr	r8, [sp, #44]	; 0x2c
   1191c:	mul	r0, r3, r0
   11920:	str	r0, [r6, #580]	; 0x244
   11924:	b	11838 <__snprintf_chk@plt+0x100>
   11928:	mov	r0, r5
   1192c:	bl	1163c <XtDisplay@plt>
   11930:	mov	r8, r0
   11934:	mov	r0, r5
   11938:	bl	1163c <XtDisplay@plt>
   1193c:	add	r2, sp, #56	; 0x38
   11940:	ldr	r1, [r0, #132]	; 0x84
   11944:	mov	r0, r8
   11948:	bl	114c8 <XF86VidModeGetMonitor@plt>
   1194c:	cmp	r0, #0
   11950:	bne	11a34 <__snprintf_chk@plt+0x2fc>
   11954:	ldr	r3, [pc, #3280]	; 1262c <__snprintf_chk@plt+0xef4>
   11958:	mov	r2, #29
   1195c:	mov	r1, #1
   11960:	ldr	r3, [r3]
   11964:	ldr	r0, [pc, #3276]	; 12638 <__snprintf_chk@plt+0xf00>
   11968:	bl	11504 <fwrite@plt>
   1196c:	mov	r8, #2
   11970:	b	118d8 <__snprintf_chk@plt+0x1a0>
   11974:	mvn	r6, #0
   11978:	mov	r0, r5
   1197c:	bl	1163c <XtDisplay@plt>
   11980:	mov	r8, #0
   11984:	mov	r4, r0
   11988:	mov	r0, r5
   1198c:	bl	1163c <XtDisplay@plt>
   11990:	mov	r2, r6
   11994:	ldr	r1, [r0, #132]	; 0x84
   11998:	mov	r0, r4
   1199c:	bl	11690 <XF86VidModeSwitchMode@plt>
   119a0:	mov	r0, r5
   119a4:	bl	1163c <XtDisplay@plt>
   119a8:	mov	r1, #1
   119ac:	bl	11648 <XSync@plt>
   119b0:	b	118d8 <__snprintf_chk@plt+0x1a0>
   119b4:	ldr	r3, [pc, #3184]	; 1262c <__snprintf_chk@plt+0xef4>
   119b8:	mov	r2, #40	; 0x28
   119bc:	mov	r1, #1
   119c0:	ldr	r3, [r3]
   119c4:	ldr	r0, [pc, #3184]	; 1263c <__snprintf_chk@plt+0xf04>
   119c8:	bl	11504 <fwrite@plt>
   119cc:	mov	r8, #2
   119d0:	b	118d8 <__snprintf_chk@plt+0x1a0>
   119d4:	mov	r0, r5
   119d8:	bl	1163c <XtDisplay@plt>
   119dc:	mov	r4, r0
   119e0:	mov	r0, r5
   119e4:	bl	1163c <XtDisplay@plt>
   119e8:	ldr	r1, [r0, #132]	; 0x84
   119ec:	mov	r0, r4
   119f0:	bl	13f38 <__snprintf_chk@plt+0x2800>
   119f4:	cmp	r0, #0
   119f8:	beq	12590 <__snprintf_chk@plt+0xe58>
   119fc:	mov	r0, r5
   11a00:	mov	r2, r6
   11a04:	mov	r1, r6
   11a08:	bl	12ccc <__snprintf_chk@plt+0x1594>
   11a0c:	mov	r8, r6
   11a10:	b	118d8 <__snprintf_chk@plt+0x1a0>
   11a14:	ldr	r3, [pc, #3088]	; 1262c <__snprintf_chk@plt+0xef4>
   11a18:	mov	r2, #44	; 0x2c
   11a1c:	mov	r1, #1
   11a20:	ldr	r3, [r3]
   11a24:	ldr	r0, [pc, #3092]	; 12640 <__snprintf_chk@plt+0xf08>
   11a28:	bl	11504 <fwrite@plt>
   11a2c:	mov	r8, #2
   11a30:	b	118d8 <__snprintf_chk@plt+0x1a0>
   11a34:	ldrd	r2, [sp, #56]	; 0x38
   11a38:	ldr	r1, [pc, #3076]	; 12644 <__snprintf_chk@plt+0xf0c>
   11a3c:	mov	r0, #1
   11a40:	bl	11654 <__printf_chk@plt>
   11a44:	ldrb	r3, [sp, #76]	; 0x4c
   11a48:	ldrb	r2, [sp, #68]	; 0x44
   11a4c:	ldr	r1, [pc, #3060]	; 12648 <__snprintf_chk@plt+0xf10>
   11a50:	mov	r0, #1
   11a54:	bl	11654 <__printf_chk@plt>
   11a58:	mov	r8, #0
   11a5c:	ldr	r9, [pc, #3048]	; 1264c <__snprintf_chk@plt+0xf14>
   11a60:	b	11a98 <__snprintf_chk@plt+0x360>
   11a64:	ldr	r3, [sp, #72]	; 0x48
   11a68:	mov	r2, r8
   11a6c:	add	r3, r3, r8, lsl #3
   11a70:	mov	r1, r9
   11a74:	vldr	s14, [r3]
   11a78:	mov	r0, #1
   11a7c:	add	r8, r8, #1
   11a80:	vcvt.f64.f32	d7, s14
   11a84:	vstr	d7, [sp, #8]
   11a88:	vldr	s14, [r3, #4]
   11a8c:	vcvt.f64.f32	d7, s14
   11a90:	vstr	d7, [sp]
   11a94:	bl	11654 <__printf_chk@plt>
   11a98:	ldrb	r3, [sp, #68]	; 0x44
   11a9c:	cmp	r8, r3
   11aa0:	blt	11a64 <__snprintf_chk@plt+0x32c>
   11aa4:	mov	r8, #0
   11aa8:	ldr	r9, [pc, #2976]	; 12650 <__snprintf_chk@plt+0xf18>
   11aac:	b	11ae4 <__snprintf_chk@plt+0x3ac>
   11ab0:	ldr	r3, [sp, #80]	; 0x50
   11ab4:	mov	r2, r8
   11ab8:	add	r3, r3, r8, lsl #3
   11abc:	mov	r1, r9
   11ac0:	vldr	s14, [r3]
   11ac4:	mov	r0, #1
   11ac8:	add	r8, r8, #1
   11acc:	vcvt.f64.f32	d7, s14
   11ad0:	vstr	d7, [sp, #8]
   11ad4:	vldr	s14, [r3, #4]
   11ad8:	vcvt.f64.f32	d7, s14
   11adc:	vstr	d7, [sp]
   11ae0:	bl	11654 <__printf_chk@plt>
   11ae4:	ldrb	r3, [sp, #76]	; 0x4c
   11ae8:	cmp	r8, r3
   11aec:	blt	11ab0 <__snprintf_chk@plt+0x378>
   11af0:	mov	r0, r5
   11af4:	bl	1163c <XtDisplay@plt>
   11af8:	mov	r8, r0
   11afc:	mov	r0, r5
   11b00:	bl	1163c <XtDisplay@plt>
   11b04:	mov	r2, #1
   11b08:	ldr	r1, [r0, #132]	; 0x84
   11b0c:	mov	r0, r8
   11b10:	bl	116fc <XF86VidModeLockModeSwitch@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	125b8 <__snprintf_chk@plt+0xe80>
   11b1c:	ldr	r1, [pc, #2864]	; 12654 <__snprintf_chk@plt+0xf1c>
   11b20:	mov	r0, #2
   11b24:	bl	11480 <signal@plt>
   11b28:	ldr	r1, [pc, #2852]	; 12654 <__snprintf_chk@plt+0xf1c>
   11b2c:	mov	r0, #3
   11b30:	bl	11480 <signal@plt>
   11b34:	ldr	r1, [pc, #2840]	; 12654 <__snprintf_chk@plt+0xf1c>
   11b38:	mov	r0, #15
   11b3c:	bl	11480 <signal@plt>
   11b40:	ldr	r1, [pc, #2828]	; 12654 <__snprintf_chk@plt+0xf1c>
   11b44:	mov	r0, #1
   11b48:	bl	11480 <signal@plt>
   11b4c:	mov	r2, #0
   11b50:	ldr	r1, [pc, #2816]	; 12658 <__snprintf_chk@plt+0xf20>
   11b54:	ldr	r0, [sp, #52]	; 0x34
   11b58:	bl	11720 <XtAppAddSignal@plt>
   11b5c:	str	r0, [r4]
   11b60:	mov	r0, r5
   11b64:	bl	1163c <XtDisplay@plt>
   11b68:	mov	r8, r0
   11b6c:	mov	r0, r5
   11b70:	bl	1163c <XtDisplay@plt>
   11b74:	ldr	r1, [r0, #132]	; 0x84
   11b78:	mov	r0, r8
   11b7c:	bl	13f38 <__snprintf_chk@plt+0x2800>
   11b80:	cmp	r0, #0
   11b84:	beq	125d8 <__snprintf_chk@plt+0xea0>
   11b88:	ldr	r0, [pc, #2764]	; 1265c <__snprintf_chk@plt+0xf24>
   11b8c:	bl	115c4 <XSetErrorHandler@plt>
   11b90:	str	r0, [r4, #204]	; 0xcc
   11b94:	ldr	r0, [pc, #2756]	; 12660 <__snprintf_chk@plt+0xf28>
   11b98:	bl	11660 <XtParseTranslationTable@plt>
   11b9c:	ldr	r3, [r6, #92]	; 0x5c
   11ba0:	cmp	r3, #0
   11ba4:	str	r0, [r4, #224]	; 0xe0
   11ba8:	beq	12438 <__snprintf_chk@plt+0xd00>
   11bac:	ldr	r3, [r6, #204]	; 0xcc
   11bb0:	cmp	r3, #0
   11bb4:	beq	12438 <__snprintf_chk@plt+0xd00>
   11bb8:	ldr	r2, [pc, #3124]	; 127f4 <__snprintf_chk@plt+0x10bc>
   11bbc:	mov	r3, #0
   11bc0:	str	r3, [sp]
   11bc4:	ldr	r0, [pc, #2712]	; 12664 <__snprintf_chk@plt+0xf2c>
   11bc8:	ldr	r1, [r2]
   11bcc:	mov	r2, r5
   11bd0:	mov	r8, r3
   11bd4:	bl	11438 <XtCreateWidget@plt>
   11bd8:	ldr	fp, [pc, #2696]	; 12668 <__snprintf_chk@plt+0xf30>
   11bdc:	str	r5, [sp, #40]	; 0x28
   11be0:	mov	r9, r8
   11be4:	add	sl, sp, #124	; 0x7c
   11be8:	mov	r5, r0
   11bec:	str	r0, [sp, #36]	; 0x24
   11bf0:	ldr	r1, [pc, #3068]	; 127f4 <__snprintf_chk@plt+0x10bc>
   11bf4:	str	r9, [sp]
   11bf8:	mov	r3, #0
   11bfc:	mov	r2, r5
   11c00:	ldr	r1, [r1]
   11c04:	ldr	r0, [fp], #4
   11c08:	bl	11438 <XtCreateWidget@plt>
   11c0c:	add	r8, r8, #1
   11c10:	cmp	r8, #14
   11c14:	str	r0, [sl], #4
   11c18:	bne	11bf0 <__snprintf_chk@plt+0x4b8>
   11c1c:	ldr	r3, [pc, #2632]	; 1266c <__snprintf_chk@plt+0xf34>
   11c20:	ldr	r2, [pc, #2632]	; 12670 <__snprintf_chk@plt+0xf38>
   11c24:	mov	r1, #0
   11c28:	ldr	r0, [sp, #124]	; 0x7c
   11c2c:	str	r9, [sp]
   11c30:	ldr	r5, [sp, #40]	; 0x28
   11c34:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11c38:	ldr	r2, [pc, #2612]	; 12674 <__snprintf_chk@plt+0xf3c>
   11c3c:	ldr	r3, [pc, #2612]	; 12678 <__snprintf_chk@plt+0xf40>
   11c40:	str	r2, [sp]
   11c44:	mov	r1, #1
   11c48:	ldr	r2, [pc, #2604]	; 1267c <__snprintf_chk@plt+0xf44>
   11c4c:	ldr	r0, [sp, #128]	; 0x80
   11c50:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11c54:	ldr	r2, [pc, #2596]	; 12680 <__snprintf_chk@plt+0xf48>
   11c58:	ldr	r3, [pc, #2596]	; 12684 <__snprintf_chk@plt+0xf4c>
   11c5c:	str	r2, [sp]
   11c60:	mov	r1, #2
   11c64:	ldr	r2, [pc, #2588]	; 12688 <__snprintf_chk@plt+0xf50>
   11c68:	ldr	r0, [sp, #132]	; 0x84
   11c6c:	ldr	sl, [pc, #2584]	; 1268c <__snprintf_chk@plt+0xf54>
   11c70:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11c74:	ldr	r2, [pc, #2580]	; 12690 <__snprintf_chk@plt+0xf58>
   11c78:	ldr	r3, [pc, #2580]	; 12694 <__snprintf_chk@plt+0xf5c>
   11c7c:	str	r2, [sp]
   11c80:	mov	r1, #3
   11c84:	ldr	r2, [pc, #2572]	; 12698 <__snprintf_chk@plt+0xf60>
   11c88:	ldr	r0, [sp, #136]	; 0x88
   11c8c:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11c90:	ldr	r1, [sl]
   11c94:	mov	r3, #0
   11c98:	ldr	r2, [sp, #136]	; 0x88
   11c9c:	ldr	r0, [pc, #2552]	; 1269c <__snprintf_chk@plt+0xf64>
   11ca0:	bl	114ec <XtVaCreateManagedWidget@plt>
   11ca4:	mov	r3, #1
   11ca8:	ldr	r2, [pc, #2544]	; 126a0 <__snprintf_chk@plt+0xf68>
   11cac:	ldr	r1, [pc, #2544]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11cb0:	bl	116f0 <XtAddCallback@plt>
   11cb4:	ldr	r1, [sl]
   11cb8:	mov	r3, #0
   11cbc:	ldr	r2, [sp, #136]	; 0x88
   11cc0:	ldr	r0, [pc, #2528]	; 126a8 <__snprintf_chk@plt+0xf70>
   11cc4:	bl	114ec <XtVaCreateManagedWidget@plt>
   11cc8:	mvn	r3, #0
   11ccc:	ldr	r2, [pc, #2508]	; 126a0 <__snprintf_chk@plt+0xf68>
   11cd0:	ldr	r1, [pc, #2508]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11cd4:	bl	116f0 <XtAddCallback@plt>
   11cd8:	ldr	r1, [sl]
   11cdc:	mov	r3, #0
   11ce0:	ldr	r2, [sp, #136]	; 0x88
   11ce4:	ldr	r0, [pc, #2496]	; 126ac <__snprintf_chk@plt+0xf74>
   11ce8:	bl	114ec <XtVaCreateManagedWidget@plt>
   11cec:	mvn	r3, #2
   11cf0:	ldr	r2, [pc, #2472]	; 126a0 <__snprintf_chk@plt+0xf68>
   11cf4:	ldr	r1, [pc, #2472]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11cf8:	bl	116f0 <XtAddCallback@plt>
   11cfc:	ldr	r1, [sl]
   11d00:	mov	r3, #0
   11d04:	ldr	r2, [sp, #136]	; 0x88
   11d08:	ldr	r0, [pc, #2464]	; 126b0 <__snprintf_chk@plt+0xf78>
   11d0c:	bl	114ec <XtVaCreateManagedWidget@plt>
   11d10:	mov	r3, #3
   11d14:	ldr	r2, [pc, #2436]	; 126a0 <__snprintf_chk@plt+0xf68>
   11d18:	ldr	r1, [pc, #2436]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11d1c:	bl	116f0 <XtAddCallback@plt>
   11d20:	ldr	r3, [pc, #2444]	; 126b4 <__snprintf_chk@plt+0xf7c>
   11d24:	ldr	r2, [pc, #2444]	; 126b8 <__snprintf_chk@plt+0xf80>
   11d28:	mov	r1, #4
   11d2c:	ldr	r0, [sp, #140]	; 0x8c
   11d30:	str	r9, [sp]
   11d34:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11d38:	ldr	r2, [pc, #2428]	; 126bc <__snprintf_chk@plt+0xf84>
   11d3c:	ldr	r3, [pc, #2428]	; 126c0 <__snprintf_chk@plt+0xf88>
   11d40:	str	r2, [sp]
   11d44:	mov	r1, #5
   11d48:	ldr	r2, [pc, #2420]	; 126c4 <__snprintf_chk@plt+0xf8c>
   11d4c:	ldr	r0, [sp, #144]	; 0x90
   11d50:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11d54:	ldr	r2, [pc, #2412]	; 126c8 <__snprintf_chk@plt+0xf90>
   11d58:	ldr	r3, [pc, #2412]	; 126cc <__snprintf_chk@plt+0xf94>
   11d5c:	str	r2, [sp]
   11d60:	mov	r1, #6
   11d64:	ldr	r2, [pc, #2404]	; 126d0 <__snprintf_chk@plt+0xf98>
   11d68:	ldr	r0, [sp, #148]	; 0x94
   11d6c:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11d70:	ldr	r2, [pc, #2396]	; 126d4 <__snprintf_chk@plt+0xf9c>
   11d74:	ldr	r3, [pc, #2396]	; 126d8 <__snprintf_chk@plt+0xfa0>
   11d78:	str	r2, [sp]
   11d7c:	mov	r1, #7
   11d80:	ldr	r2, [pc, #2388]	; 126dc <__snprintf_chk@plt+0xfa4>
   11d84:	ldr	r0, [sp, #152]	; 0x98
   11d88:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11d8c:	ldr	r1, [sl]
   11d90:	mov	r3, #0
   11d94:	ldr	r2, [sp, #152]	; 0x98
   11d98:	ldr	r0, [pc, #2368]	; 126e0 <__snprintf_chk@plt+0xfa8>
   11d9c:	bl	114ec <XtVaCreateManagedWidget@plt>
   11da0:	mov	r3, #5
   11da4:	ldr	r2, [pc, #2292]	; 126a0 <__snprintf_chk@plt+0xf68>
   11da8:	ldr	r1, [pc, #2292]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11dac:	bl	116f0 <XtAddCallback@plt>
   11db0:	ldr	r1, [sl]
   11db4:	mov	r3, #0
   11db8:	ldr	r2, [sp, #152]	; 0x98
   11dbc:	ldr	r0, [pc, #2336]	; 126e4 <__snprintf_chk@plt+0xfac>
   11dc0:	bl	114ec <XtVaCreateManagedWidget@plt>
   11dc4:	mvn	r3, #4
   11dc8:	ldr	r2, [pc, #2256]	; 126a0 <__snprintf_chk@plt+0xf68>
   11dcc:	ldr	r1, [pc, #2256]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11dd0:	bl	116f0 <XtAddCallback@plt>
   11dd4:	ldr	r1, [sl]
   11dd8:	mov	r3, #0
   11ddc:	ldr	r2, [sp, #152]	; 0x98
   11de0:	ldr	r0, [pc, #2304]	; 126e8 <__snprintf_chk@plt+0xfb0>
   11de4:	bl	114ec <XtVaCreateManagedWidget@plt>
   11de8:	mov	r3, #7
   11dec:	ldr	r2, [pc, #2220]	; 126a0 <__snprintf_chk@plt+0xf68>
   11df0:	ldr	r1, [pc, #2220]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11df4:	bl	116f0 <XtAddCallback@plt>
   11df8:	ldr	r1, [sl]
   11dfc:	mov	r3, #0
   11e00:	ldr	r2, [sp, #152]	; 0x98
   11e04:	ldr	r0, [pc, #2272]	; 126ec <__snprintf_chk@plt+0xfb4>
   11e08:	bl	114ec <XtVaCreateManagedWidget@plt>
   11e0c:	mvn	r3, #6
   11e10:	ldr	r2, [pc, #2184]	; 126a0 <__snprintf_chk@plt+0xf68>
   11e14:	ldr	r1, [pc, #2184]	; 126a4 <__snprintf_chk@plt+0xf6c>
   11e18:	bl	116f0 <XtAddCallback@plt>
   11e1c:	ldr	r1, [r6, #232]	; 0xe8
   11e20:	ldr	r2, [pc, #2248]	; 126f0 <__snprintf_chk@plt+0xfb8>
   11e24:	mov	r3, #5
   11e28:	str	r1, [sp, #4]
   11e2c:	str	r2, [sp]
   11e30:	mov	r1, r3
   11e34:	mov	r2, #1
   11e38:	add	r0, sp, #180	; 0xb4
   11e3c:	bl	11738 <__snprintf_chk@plt>
   11e40:	ldr	r3, [pc, #2520]	; 12820 <__snprintf_chk@plt+0x10e8>
   11e44:	str	r9, [sp]
   11e48:	ldr	r2, [sp, #156]	; 0x9c
   11e4c:	ldr	r1, [r3]
   11e50:	ldr	r0, [pc, #2204]	; 126f4 <__snprintf_chk@plt+0xfbc>
   11e54:	mov	r3, #0
   11e58:	bl	11438 <XtCreateWidget@plt>
   11e5c:	add	r2, sp, #180	; 0xb4
   11e60:	ldr	r3, [r4, #224]	; 0xe0
   11e64:	str	r2, [sp]
   11e68:	ldr	r2, [pc, #2496]	; 12830 <__snprintf_chk@plt+0x10f8>
   11e6c:	ldr	fp, [pc, #2180]	; 126f8 <__snprintf_chk@plt+0xfc0>
   11e70:	str	r9, [sp, #12]
   11e74:	ldr	r1, [r2]
   11e78:	str	r3, [sp, #8]
   11e7c:	ldr	r2, [sp, #156]	; 0x9c
   11e80:	sub	r3, fp, #69	; 0x45
   11e84:	str	fp, [sp, #4]
   11e88:	str	r0, [sp, #84]	; 0x54
   11e8c:	ldr	r0, [pc, #2152]	; 126fc <__snprintf_chk@plt+0xfc4>
   11e90:	bl	11510 <XtVaCreateWidget@plt>
   11e94:	mov	r2, #8
   11e98:	ldr	r1, [pc, #2144]	; 12700 <__snprintf_chk@plt+0xfc8>
   11e9c:	str	r0, [sp, #88]	; 0x58
   11ea0:	bl	148c0 <__snprintf_chk@plt+0x3188>
   11ea4:	add	r0, sp, #84	; 0x54
   11ea8:	mov	r1, #2
   11eac:	bl	116d8 <XtManageChildren@plt>
   11eb0:	ldr	ip, [sp, #88]	; 0x58
   11eb4:	str	r9, [sp]
   11eb8:	mov	r3, #0
   11ebc:	str	ip, [r6, #244]	; 0xf4
   11ec0:	ldr	r1, [sl]
   11ec4:	ldr	r2, [sp, #160]	; 0xa0
   11ec8:	ldr	r0, [pc, #2100]	; 12704 <__snprintf_chk@plt+0xfcc>
   11ecc:	bl	11438 <XtCreateWidget@plt>
   11ed0:	sub	r1, fp, #664	; 0x298
   11ed4:	mov	r3, #0
   11ed8:	ldr	r2, [pc, #2088]	; 12708 <__snprintf_chk@plt+0xfd0>
   11edc:	sub	r1, r1, #2
   11ee0:	str	r0, [sp, #84]	; 0x54
   11ee4:	bl	116f0 <XtAddCallback@plt>
   11ee8:	str	r9, [sp]
   11eec:	mov	r3, #0
   11ef0:	ldr	r1, [sl]
   11ef4:	ldr	r2, [sp, #160]	; 0xa0
   11ef8:	ldr	r0, [pc, #2060]	; 1270c <__snprintf_chk@plt+0xfd4>
   11efc:	bl	11438 <XtCreateWidget@plt>
   11f00:	sub	r1, fp, #664	; 0x298
   11f04:	mov	r3, #0
   11f08:	ldr	r2, [pc, #2048]	; 12710 <__snprintf_chk@plt+0xfd8>
   11f0c:	sub	r1, r1, #2
   11f10:	str	r0, [sp, #88]	; 0x58
   11f14:	bl	116f0 <XtAddCallback@plt>
   11f18:	ldr	r3, [pc, #2272]	; 12800 <__snprintf_chk@plt+0x10c8>
   11f1c:	str	r9, [sp]
   11f20:	ldr	r2, [sp, #160]	; 0xa0
   11f24:	ldr	r1, [r3]
   11f28:	ldr	r0, [pc, #2020]	; 12714 <__snprintf_chk@plt+0xfdc>
   11f2c:	mov	r3, #0
   11f30:	bl	11438 <XtCreateWidget@plt>
   11f34:	str	r9, [sp]
   11f38:	mov	r3, #0
   11f3c:	ldr	r1, [sl]
   11f40:	ldr	r2, [sp, #160]	; 0xa0
   11f44:	mov	ip, r0
   11f48:	str	ip, [r4, #188]	; 0xbc
   11f4c:	ldr	r0, [pc, #1988]	; 12718 <__snprintf_chk@plt+0xfe0>
   11f50:	str	ip, [sp, #92]	; 0x5c
   11f54:	bl	11438 <XtCreateWidget@plt>
   11f58:	sub	r1, fp, #664	; 0x298
   11f5c:	mov	r3, #0
   11f60:	ldr	r2, [pc, #1972]	; 1271c <__snprintf_chk@plt+0xfe4>
   11f64:	sub	r1, r1, #2
   11f68:	str	r0, [sp, #96]	; 0x60
   11f6c:	bl	116f0 <XtAddCallback@plt>
   11f70:	str	r9, [sp]
   11f74:	mov	r3, #0
   11f78:	ldr	r1, [sl]
   11f7c:	ldr	r2, [sp, #160]	; 0xa0
   11f80:	ldr	r0, [pc, #1944]	; 12720 <__snprintf_chk@plt+0xfe8>
   11f84:	bl	11438 <XtCreateWidget@plt>
   11f88:	sub	r1, fp, #664	; 0x298
   11f8c:	mov	r3, #0
   11f90:	ldr	r2, [pc, #1932]	; 12724 <__snprintf_chk@plt+0xfec>
   11f94:	sub	r1, r1, #2
   11f98:	str	r0, [sp, #100]	; 0x64
   11f9c:	bl	116f0 <XtAddCallback@plt>
   11fa0:	add	r0, sp, #84	; 0x54
   11fa4:	mov	r1, #5
   11fa8:	bl	116d8 <XtManageChildren@plt>
   11fac:	ldr	r3, [pc, #1908]	; 12728 <__snprintf_chk@plt+0xff0>
   11fb0:	ldr	r2, [pc, #1908]	; 1272c <__snprintf_chk@plt+0xff4>
   11fb4:	mov	r1, #13
   11fb8:	ldr	r0, [sp, #164]	; 0xa4
   11fbc:	str	r9, [sp]
   11fc0:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11fc4:	ldr	r3, [pc, #1892]	; 12730 <__snprintf_chk@plt+0xff8>
   11fc8:	ldr	r2, [pc, #1892]	; 12734 <__snprintf_chk@plt+0xffc>
   11fcc:	mov	r1, r8
   11fd0:	ldr	r0, [sp, #168]	; 0xa8
   11fd4:	str	r9, [sp]
   11fd8:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11fdc:	ldr	r3, [pc, #1876]	; 12738 <__snprintf_chk@plt+0x1000>
   11fe0:	ldr	r2, [pc, #1876]	; 1273c <__snprintf_chk@plt+0x1004>
   11fe4:	mov	r1, #15
   11fe8:	ldr	r0, [sp, #172]	; 0xac
   11fec:	str	r9, [sp]
   11ff0:	bl	130e8 <__snprintf_chk@plt+0x19b0>
   11ff4:	str	r9, [sp]
   11ff8:	mov	r3, #0
   11ffc:	ldr	r1, [sl]
   12000:	ldr	r2, [sp, #176]	; 0xb0
   12004:	ldr	r0, [pc, #1844]	; 12740 <__snprintf_chk@plt+0x1008>
   12008:	bl	11438 <XtCreateWidget@plt>
   1200c:	sub	r1, fp, #664	; 0x298
   12010:	mov	r3, #0
   12014:	ldr	r2, [pc, #1832]	; 12744 <__snprintf_chk@plt+0x100c>
   12018:	sub	r1, r1, #2
   1201c:	str	r0, [sp, #84]	; 0x54
   12020:	bl	116f0 <XtAddCallback@plt>
   12024:	str	r9, [sp]
   12028:	mov	r3, #0
   1202c:	ldr	r1, [sl]
   12030:	ldr	r2, [sp, #176]	; 0xb0
   12034:	ldr	r0, [pc, #1804]	; 12748 <__snprintf_chk@plt+0x1010>
   12038:	bl	11438 <XtCreateWidget@plt>
   1203c:	sub	r1, fp, #664	; 0x298
   12040:	mov	r3, #0
   12044:	ldr	r2, [pc, #1792]	; 1274c <__snprintf_chk@plt+0x1014>
   12048:	sub	r1, r1, #2
   1204c:	str	r0, [sp, #88]	; 0x58
   12050:	bl	116f0 <XtAddCallback@plt>
   12054:	str	r9, [sp]
   12058:	mov	r3, #0
   1205c:	ldr	r1, [sl]
   12060:	ldr	r2, [sp, #176]	; 0xb0
   12064:	ldr	r0, [pc, #1764]	; 12750 <__snprintf_chk@plt+0x1018>
   12068:	bl	11438 <XtCreateWidget@plt>
   1206c:	sub	r1, fp, #664	; 0x298
   12070:	mov	r3, #1
   12074:	ldr	r2, [pc, #1752]	; 12754 <__snprintf_chk@plt+0x101c>
   12078:	sub	r1, r1, #2
   1207c:	str	r0, [sp, #92]	; 0x5c
   12080:	bl	116f0 <XtAddCallback@plt>
   12084:	str	r9, [sp]
   12088:	mov	r3, #0
   1208c:	ldr	r1, [sl]
   12090:	ldr	r2, [sp, #176]	; 0xb0
   12094:	ldr	r0, [pc, #1724]	; 12758 <__snprintf_chk@plt+0x1020>
   12098:	bl	11438 <XtCreateWidget@plt>
   1209c:	sub	r1, fp, #664	; 0x298
   120a0:	mvn	r3, #0
   120a4:	ldr	r2, [pc, #1704]	; 12754 <__snprintf_chk@plt+0x101c>
   120a8:	sub	r1, r1, #2
   120ac:	str	r0, [sp, #96]	; 0x60
   120b0:	bl	116f0 <XtAddCallback@plt>
   120b4:	add	r0, sp, #84	; 0x54
   120b8:	mov	r1, #4
   120bc:	bl	116d8 <XtManageChildren@plt>
   120c0:	mov	r1, r8
   120c4:	add	r0, sp, #124	; 0x7c
   120c8:	bl	116d8 <XtManageChildren@plt>
   120cc:	ldr	r3, [r4, #176]	; 0xb0
   120d0:	cmp	r3, #0
   120d4:	bne	12844 <__snprintf_chk@plt+0x110c>
   120d8:	ldr	r0, [sp, #36]	; 0x24
   120dc:	bl	116e4 <XtManageChild@plt>
   120e0:	bl	1399c <__snprintf_chk@plt+0x2264>
   120e4:	mov	r0, r5
   120e8:	bl	1163c <XtDisplay@plt>
   120ec:	mov	fp, #80	; 0x50
   120f0:	mov	r6, #0
   120f4:	ldr	r8, [r0, #140]	; 0x8c
   120f8:	mov	r0, r5
   120fc:	bl	1163c <XtDisplay@plt>
   12100:	ldr	r3, [r0, #132]	; 0x84
   12104:	mov	r0, r5
   12108:	mla	r3, fp, r3, r8
   1210c:	ldr	r3, [r3, #12]
   12110:	add	r3, r3, r3, lsr #31
   12114:	asr	r8, r3, #1
   12118:	bl	1163c <XtDisplay@plt>
   1211c:	sub	r8, r8, #20
   12120:	ldr	r9, [r0, #140]	; 0x8c
   12124:	mov	r0, r5
   12128:	bl	1163c <XtDisplay@plt>
   1212c:	ldr	lr, [pc, #1576]	; 1275c <__snprintf_chk@plt+0x1024>
   12130:	ldr	r3, [pc, #1576]	; 12760 <__snprintf_chk@plt+0x1028>
   12134:	ldr	ip, [pc, #1576]	; 12764 <__snprintf_chk@plt+0x102c>
   12138:	mov	r2, r5
   1213c:	ldr	r1, [r3]
   12140:	ldr	r3, [pc, #1568]	; 12768 <__snprintf_chk@plt+0x1030>
   12144:	ldr	r0, [r0, #132]	; 0x84
   12148:	mla	r9, fp, r0, r9
   1214c:	ldr	r0, [r9, #16]
   12150:	sub	r9, lr, #2
   12154:	str	r9, [sp, #4]
   12158:	add	r0, r0, r0, lsr #31
   1215c:	str	ip, [sp]
   12160:	asr	r9, r0, #1
   12164:	sub	r9, r9, #40	; 0x28
   12168:	str	r8, [sp, #8]
   1216c:	str	lr, [sp, #12]
   12170:	str	r9, [sp, #16]
   12174:	str	r6, [sp, #20]
   12178:	ldr	r0, [pc, #1516]	; 1276c <__snprintf_chk@plt+0x1034>
   1217c:	bl	11468 <XtVaCreatePopupShell@plt>
   12180:	str	r9, [sp, #16]
   12184:	ldr	r2, [pc, #1508]	; 12770 <__snprintf_chk@plt+0x1038>
   12188:	ldr	r9, [pc, #1488]	; 12760 <__snprintf_chk@plt+0x1028>
   1218c:	ldr	r3, [pc, #1504]	; 12774 <__snprintf_chk@plt+0x103c>
   12190:	add	lr, r2, #2
   12194:	str	lr, [sp, #12]
   12198:	str	r8, [sp, #8]
   1219c:	str	r2, [sp, #4]
   121a0:	str	r6, [sp, #20]
   121a4:	mov	r2, r5
   121a8:	ldr	r1, [r9]
   121ac:	str	r3, [sp]
   121b0:	ldr	r3, [pc, #1456]	; 12768 <__snprintf_chk@plt+0x1030>
   121b4:	str	r0, [r4, #184]	; 0xb8
   121b8:	ldr	r0, [pc, #1464]	; 12778 <__snprintf_chk@plt+0x1040>
   121bc:	bl	11468 <XtVaCreatePopupShell@plt>
   121c0:	ldr	r1, [pc, #1460]	; 1277c <__snprintf_chk@plt+0x1044>
   121c4:	mov	r3, r6
   121c8:	ldr	r1, [r1]
   121cc:	mov	ip, r0
   121d0:	mov	r2, r0
   121d4:	ldr	r0, [pc, #1444]	; 12780 <__snprintf_chk@plt+0x1048>
   121d8:	str	ip, [r4, #192]	; 0xc0
   121dc:	bl	114ec <XtVaCreateManagedWidget@plt>
   121e0:	mov	r3, r6
   121e4:	mov	r8, r0
   121e8:	mov	r2, r0
   121ec:	ldr	r0, [pc, #1580]	; 12820 <__snprintf_chk@plt+0x10e8>
   121f0:	ldr	r1, [r0]
   121f4:	ldr	r0, [pc, #1416]	; 12784 <__snprintf_chk@plt+0x104c>
   121f8:	bl	114ec <XtVaCreateManagedWidget@plt>
   121fc:	mov	r2, r8
   12200:	mov	r3, r6
   12204:	ldr	r1, [sl]
   12208:	ldr	r0, [pc, #1400]	; 12788 <__snprintf_chk@plt+0x1050>
   1220c:	bl	114ec <XtVaCreateManagedWidget@plt>
   12210:	mov	r3, r6
   12214:	ldr	r2, [pc, #1392]	; 1278c <__snprintf_chk@plt+0x1054>
   12218:	ldr	r1, [pc, #1156]	; 126a4 <__snprintf_chk@plt+0xf6c>
   1221c:	bl	116f0 <XtAddCallback@plt>
   12220:	ldr	r1, [pc, #1364]	; 1277c <__snprintf_chk@plt+0x1044>
   12224:	ldr	r2, [r4, #184]	; 0xb8
   12228:	mov	r3, r6
   1222c:	ldr	r1, [r1]
   12230:	ldr	r0, [pc, #1368]	; 12790 <__snprintf_chk@plt+0x1058>
   12234:	bl	114ec <XtVaCreateManagedWidget@plt>
   12238:	mov	r3, r6
   1223c:	mov	r8, r0
   12240:	mov	r2, r0
   12244:	ldr	r0, [pc, #1492]	; 12820 <__snprintf_chk@plt+0x10e8>
   12248:	ldr	r1, [r0]
   1224c:	ldr	r0, [pc, #1344]	; 12794 <__snprintf_chk@plt+0x105c>
   12250:	bl	114ec <XtVaCreateManagedWidget@plt>
   12254:	mov	r2, r8
   12258:	mov	r3, r6
   1225c:	ldr	r1, [sl]
   12260:	ldr	r0, [pc, #1328]	; 12798 <__snprintf_chk@plt+0x1060>
   12264:	bl	114ec <XtVaCreateManagedWidget@plt>
   12268:	ldr	r3, [r4, #184]	; 0xb8
   1226c:	ldr	r2, [pc, #1320]	; 1279c <__snprintf_chk@plt+0x1064>
   12270:	ldr	r1, [pc, #1068]	; 126a4 <__snprintf_chk@plt+0xf6c>
   12274:	bl	116f0 <XtAddCallback@plt>
   12278:	mov	r2, #13
   1227c:	ldr	r1, [pc, #1308]	; 127a0 <__snprintf_chk@plt+0x1068>
   12280:	ldr	r0, [sp, #52]	; 0x34
   12284:	bl	115dc <XtAppAddActions@plt>
   12288:	ldr	r0, [pc, #1300]	; 127a4 <__snprintf_chk@plt+0x106c>
   1228c:	bl	11660 <XtParseTranslationTable@plt>
   12290:	mov	r1, r0
   12294:	mov	r0, r5
   12298:	bl	115a0 <XtOverrideTranslations@plt>
   1229c:	mov	r0, r5
   122a0:	bl	1154c <XtRealizeWidget@plt>
   122a4:	mov	r0, r5
   122a8:	bl	1163c <XtDisplay@plt>
   122ac:	mov	r2, r6
   122b0:	ldr	r1, [pc, #1264]	; 127a8 <__snprintf_chk@plt+0x1070>
   122b4:	mov	r8, r0
   122b8:	bl	115e8 <XInternAtom@plt>
   122bc:	str	r0, [r4, #208]	; 0xd0
   122c0:	mov	r0, r5
   122c4:	bl	114b0 <XtWindow@plt>
   122c8:	mov	r3, #1
   122cc:	ldr	r2, [pc, #1240]	; 127ac <__snprintf_chk@plt+0x1074>
   122d0:	mov	r1, r0
   122d4:	mov	r0, r8
   122d8:	bl	11594 <XSetWMProtocols@plt>
   122dc:	mov	r0, r5
   122e0:	bl	1163c <XtDisplay@plt>
   122e4:	mov	r4, r0
   122e8:	mov	r0, r5
   122ec:	bl	114b0 <XtWindow@plt>
   122f0:	mov	r1, r0
   122f4:	mov	r0, r4
   122f8:	bl	116b4 <XMapWindow@plt>
   122fc:	mov	r0, r5
   12300:	bl	1163c <XtDisplay@plt>
   12304:	ldr	r4, [r0, #140]	; 0x8c
   12308:	mov	r0, r5
   1230c:	bl	1163c <XtDisplay@plt>
   12310:	ldr	r3, [r0, #132]	; 0x84
   12314:	mov	r0, r5
   12318:	mla	r3, fp, r3, r4
   1231c:	ldr	r4, [r3, #12]
   12320:	ldr	r3, [pc, #1160]	; 127b0 <__snprintf_chk@plt+0x1078>
   12324:	smull	r2, r3, r4, r3
   12328:	sub	r4, r3, r4, asr #31
   1232c:	bl	1163c <XtDisplay@plt>
   12330:	ldr	r8, [r0, #140]	; 0x8c
   12334:	mov	r0, r5
   12338:	bl	1163c <XtDisplay@plt>
   1233c:	str	r6, [sp, #20]
   12340:	ldr	r1, [r9]
   12344:	mov	r2, r5
   12348:	ldr	r9, [pc, #1056]	; 12770 <__snprintf_chk@plt+0x1038>
   1234c:	ldr	ip, [pc, #1120]	; 127b4 <__snprintf_chk@plt+0x107c>
   12350:	ldr	r3, [pc, #1040]	; 12768 <__snprintf_chk@plt+0x1030>
   12354:	ldr	lr, [r0, #132]	; 0x84
   12358:	ldr	r0, [pc, #1112]	; 127b8 <__snprintf_chk@plt+0x1080>
   1235c:	mla	fp, fp, lr, r8
   12360:	add	r8, r9, #2
   12364:	ldr	lr, [fp, #16]
   12368:	str	r4, [sp, #8]
   1236c:	ldr	r4, [pc, #1084]	; 127b0 <__snprintf_chk@plt+0x1078>
   12370:	str	ip, [sp]
   12374:	str	r9, [sp, #4]
   12378:	smull	r4, r5, lr, r4
   1237c:	str	r8, [sp, #12]
   12380:	sub	lr, r5, lr, asr #31
   12384:	str	lr, [sp, #16]
   12388:	bl	11468 <XtVaCreatePopupShell@plt>
   1238c:	ldr	r1, [pc, #1000]	; 1277c <__snprintf_chk@plt+0x1044>
   12390:	mov	r3, r6
   12394:	ldr	r1, [r1]
   12398:	mov	r4, r0
   1239c:	mov	r2, r0
   123a0:	ldr	r0, [pc, #1044]	; 127bc <__snprintf_chk@plt+0x1084>
   123a4:	bl	114ec <XtVaCreateManagedWidget@plt>
   123a8:	mov	r3, r6
   123ac:	mov	r5, r0
   123b0:	mov	r2, r0
   123b4:	ldr	r0, [pc, #1124]	; 12820 <__snprintf_chk@plt+0x10e8>
   123b8:	ldr	r1, [r0]
   123bc:	ldr	r0, [pc, #1020]	; 127c0 <__snprintf_chk@plt+0x1088>
   123c0:	bl	114ec <XtVaCreateManagedWidget@plt>
   123c4:	mov	r3, r6
   123c8:	mov	r2, r5
   123cc:	ldr	r1, [sl]
   123d0:	ldr	r0, [pc, #1004]	; 127c4 <__snprintf_chk@plt+0x108c>
   123d4:	bl	114ec <XtVaCreateManagedWidget@plt>
   123d8:	sub	r1, r9, #748	; 0x2ec
   123dc:	mov	r3, r4
   123e0:	ldr	r2, [pc, #992]	; 127c8 <__snprintf_chk@plt+0x1090>
   123e4:	sub	r1, r1, #1
   123e8:	bl	116f0 <XtAddCallback@plt>
   123ec:	mov	r3, r6
   123f0:	mov	r2, r5
   123f4:	ldr	r1, [sl]
   123f8:	ldr	r0, [pc, #972]	; 127cc <__snprintf_chk@plt+0x1094>
   123fc:	bl	114ec <XtVaCreateManagedWidget@plt>
   12400:	sub	r1, r9, #748	; 0x2ec
   12404:	sub	r1, r1, #1
   12408:	mov	r3, r6
   1240c:	ldr	r2, [pc, #756]	; 12708 <__snprintf_chk@plt+0xfd0>
   12410:	bl	116f0 <XtAddCallback@plt>
   12414:	mov	r0, r4
   12418:	mov	r1, #2
   1241c:	bl	11570 <XtPopup@plt>
   12420:	ldr	r0, [sp, #52]	; 0x34
   12424:	bl	11630 <XtAppMainLoop@plt>
   12428:	mov	r8, #0
   1242c:	b	118d8 <__snprintf_chk@plt+0x1a0>
   12430:	mov	r6, #1
   12434:	b	11978 <__snprintf_chk@plt+0x240>
   12438:	ldr	r0, [pc, #912]	; 127d0 <__snprintf_chk@plt+0x1098>
   1243c:	bl	11528 <puts@plt>
   12440:	ldr	r3, [pc, #940]	; 127f4 <__snprintf_chk@plt+0x10bc>
   12444:	mov	r6, #0
   12448:	str	r6, [sp]
   1244c:	mov	r2, r5
   12450:	ldr	r1, [r3]
   12454:	ldr	r0, [pc, #888]	; 127d4 <__snprintf_chk@plt+0x109c>
   12458:	mov	r3, r6
   1245c:	bl	11438 <XtCreateWidget@plt>
   12460:	ldr	r1, [pc, #788]	; 1277c <__snprintf_chk@plt+0x1044>
   12464:	mov	r3, r6
   12468:	ldr	r1, [r1]
   1246c:	mov	r8, r0
   12470:	mov	r2, r0
   12474:	ldr	r0, [pc, #832]	; 127bc <__snprintf_chk@plt+0x1084>
   12478:	bl	114ec <XtVaCreateManagedWidget@plt>
   1247c:	ldr	r1, [pc, #924]	; 12820 <__snprintf_chk@plt+0x10e8>
   12480:	mov	r3, r6
   12484:	ldr	r1, [r1]
   12488:	mov	r9, r0
   1248c:	mov	r2, r0
   12490:	ldr	r0, [pc, #832]	; 127d8 <__snprintf_chk@plt+0x10a0>
   12494:	bl	114ec <XtVaCreateManagedWidget@plt>
   12498:	ldr	r1, [pc, #492]	; 1268c <__snprintf_chk@plt+0xf54>
   1249c:	mov	r2, r9
   124a0:	mov	r3, r6
   124a4:	ldr	r1, [r1]
   124a8:	ldr	r0, [pc, #812]	; 127dc <__snprintf_chk@plt+0x10a4>
   124ac:	bl	114ec <XtVaCreateManagedWidget@plt>
   124b0:	mov	r3, r8
   124b4:	ldr	r2, [pc, #804]	; 127e0 <__snprintf_chk@plt+0x10a8>
   124b8:	ldr	r1, [pc, #484]	; 126a4 <__snprintf_chk@plt+0xf6c>
   124bc:	bl	116f0 <XtAddCallback@plt>
   124c0:	mov	r0, r8
   124c4:	bl	116e4 <XtManageChild@plt>
   124c8:	mov	r2, #13
   124cc:	ldr	r1, [pc, #716]	; 127a0 <__snprintf_chk@plt+0x1068>
   124d0:	ldr	r0, [sp, #52]	; 0x34
   124d4:	bl	115dc <XtAppAddActions@plt>
   124d8:	ldr	r0, [pc, #708]	; 127a4 <__snprintf_chk@plt+0x106c>
   124dc:	bl	11660 <XtParseTranslationTable@plt>
   124e0:	mov	r1, r0
   124e4:	mov	r0, r5
   124e8:	bl	115a0 <XtOverrideTranslations@plt>
   124ec:	mov	r0, r5
   124f0:	bl	1154c <XtRealizeWidget@plt>
   124f4:	mov	r0, r5
   124f8:	bl	1163c <XtDisplay@plt>
   124fc:	mov	r2, r6
   12500:	ldr	r1, [pc, #672]	; 127a8 <__snprintf_chk@plt+0x1070>
   12504:	mov	r8, r0
   12508:	bl	115e8 <XInternAtom@plt>
   1250c:	str	r0, [r4, #208]	; 0xd0
   12510:	mov	r0, r5
   12514:	bl	114b0 <XtWindow@plt>
   12518:	mov	r3, #1
   1251c:	ldr	r2, [pc, #648]	; 127ac <__snprintf_chk@plt+0x1074>
   12520:	mov	r1, r0
   12524:	mov	r0, r8
   12528:	bl	11594 <XSetWMProtocols@plt>
   1252c:	mov	r0, r5
   12530:	bl	1163c <XtDisplay@plt>
   12534:	mov	r4, r0
   12538:	mov	r0, r5
   1253c:	bl	114b0 <XtWindow@plt>
   12540:	mov	r1, r0
   12544:	mov	r0, r4
   12548:	bl	116b4 <XMapWindow@plt>
   1254c:	b	12420 <__snprintf_chk@plt+0xce8>
   12550:	ldr	r5, [pc, #212]	; 1262c <__snprintf_chk@plt+0xef4>
   12554:	ldr	r2, [r4, #212]	; 0xd4
   12558:	mov	r1, #1
   1255c:	str	r2, [sp]
   12560:	ldr	r2, [pc, #636]	; 127e4 <__snprintf_chk@plt+0x10ac>
   12564:	ldr	r0, [r5]
   12568:	bl	1166c <__fprintf_chk@plt>
   1256c:	mov	r3, #5
   12570:	ldr	r0, [r5]
   12574:	ldr	r2, [pc, #620]	; 127e8 <__snprintf_chk@plt+0x10b0>
   12578:	str	r3, [sp]
   1257c:	mov	r1, #1
   12580:	mov	r3, #0
   12584:	bl	1166c <__fprintf_chk@plt>
   12588:	mov	r0, #2
   1258c:	bl	11588 <exit@plt>
   12590:	ldr	r3, [pc, #148]	; 1262c <__snprintf_chk@plt+0xef4>
   12594:	mov	r2, #24
   12598:	mov	r1, #1
   1259c:	ldr	r3, [r3]
   125a0:	ldr	r0, [pc, #580]	; 127ec <__snprintf_chk@plt+0x10b4>
   125a4:	bl	11504 <fwrite@plt>
   125a8:	mov	r0, r5
   125ac:	bl	1163c <XtDisplay@plt>
   125b0:	bl	12c8c <__snprintf_chk@plt+0x1554>
   125b4:	b	118d8 <__snprintf_chk@plt+0x1a0>
   125b8:	ldr	r3, [pc, #108]	; 1262c <__snprintf_chk@plt+0xef4>
   125bc:	mov	r2, #39	; 0x27
   125c0:	mov	r1, #1
   125c4:	ldr	r3, [r3]
   125c8:	ldr	r0, [pc, #544]	; 127f0 <__snprintf_chk@plt+0x10b8>
   125cc:	bl	11504 <fwrite@plt>
   125d0:	mov	r8, #2
   125d4:	b	118d8 <__snprintf_chk@plt+0x1a0>
   125d8:	ldr	r3, [pc, #76]	; 1262c <__snprintf_chk@plt+0xef4>
   125dc:	mov	r2, #24
   125e0:	mov	r1, #1
   125e4:	ldr	r3, [r3]
   125e8:	ldr	r0, [pc, #508]	; 127ec <__snprintf_chk@plt+0x10b4>
   125ec:	bl	11504 <fwrite@plt>
   125f0:	mov	r0, r5
   125f4:	bl	1163c <XtDisplay@plt>
   125f8:	bl	12c8c <__snprintf_chk@plt+0x1554>
   125fc:	mov	r8, #2
   12600:	b	118d8 <__snprintf_chk@plt+0x1a0>
   12604:			; <UNDEFINED> instruction: 0x000274b4
   12608:	andeq	r5, r2, r8, ror pc
   1260c:	andeq	r6, r2, sp, asr #12
   12610:	ldrdeq	r4, [r1], -r0
   12614:	ldrdeq	r7, [r2], -r0
   12618:	andeq	r7, r2, ip, lsr #2
   1261c:	andeq	r5, r1, ip, lsl sl
   12620:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12624:	strdeq	r4, [r1], -ip
   12628:	andeq	r5, r1, r4
   1262c:	andeq	r7, r2, r8, lsr #9
   12630:	ldrdeq	r4, [r1], -ip
   12634:	andeq	r4, r1, ip, asr #31
   12638:	andeq	r5, r1, ip
   1263c:	andeq	r4, r1, r8, lsl #30
   12640:	andeq	r4, r1, r4, lsr pc
   12644:	andeq	r5, r1, ip, lsr #32
   12648:	andeq	r5, r1, r4, asr #32
   1264c:	andeq	r5, r1, r4, rrx
   12650:	andeq	r5, r1, r4, lsl #1
   12654:	andeq	r2, r1, r0, asr #23
   12658:	andeq	r2, r1, ip, lsr #25
   1265c:	andeq	r4, r1, ip, ror #12
   12660:	andeq	r5, r1, ip, asr #1
   12664:	andeq	r5, r1, r8, lsr #19
   12668:	andeq	r4, r1, r8, ror #23
   1266c:	andeq	r5, r1, ip, lsr #8
   12670:	andeq	r5, r1, ip, lsr r4
   12674:	andeq	r5, r1, r0, ror r4
   12678:	andeq	r5, r1, ip, asr #8
   1267c:	andeq	r5, r1, ip, asr r4
   12680:	andeq	r5, r1, r8, lsr #9
   12684:	andeq	r5, r1, r8, lsl #9
   12688:	muleq	r1, r8, r4
   1268c:			; <UNDEFINED> instruction: 0x000274bc
   12690:	ldrdeq	r5, [r1], -r8
   12694:			; <UNDEFINED> instruction: 0x000154bc
   12698:	andeq	r5, r1, r8, asr #9
   1269c:	andeq	r5, r1, ip, ror #9
   126a0:	andeq	r4, r1, r0, ror #6
   126a4:	andeq	r6, r2, r0, lsl r5
   126a8:	strdeq	r5, [r1], -r8
   126ac:	andeq	r5, r1, r8, lsl #10
   126b0:	andeq	r5, r1, r8, lsl r5
   126b4:	andeq	r5, r1, r8, lsr #10
   126b8:	andeq	r5, r1, r8, lsr r5
   126bc:	andeq	r5, r1, ip, ror #10
   126c0:	andeq	r5, r1, r8, asr #10
   126c4:	andeq	r5, r1, r8, asr r5
   126c8:	andeq	r5, r1, r4, lsr #11
   126cc:	andeq	r5, r1, r4, lsl #11
   126d0:	muleq	r1, r4, r5
   126d4:	ldrdeq	r5, [r1], -r4
   126d8:			; <UNDEFINED> instruction: 0x000155b8
   126dc:	andeq	r5, r1, r4, asr #11
   126e0:	andeq	r5, r1, r8, ror #11
   126e4:	strdeq	r5, [r1], -r4
   126e8:	andeq	r5, r1, r0, lsl #12
   126ec:	andeq	r5, r1, r0, lsl r6
   126f0:	andeq	r4, r1, r4, asr #29
   126f4:	andeq	r5, r1, r0, lsr #12
   126f8:	andeq	r6, r2, sl, lsr #15
   126fc:	andeq	r5, r1, ip, lsr #12
   12700:	andeq	r4, r1, ip, lsl r7
   12704:	andeq	r5, r1, r8, lsr r6
   12708:	andeq	r3, r1, r4, asr #1
   1270c:	andeq	r5, r1, r4, asr #12
   12710:	andeq	r3, r1, ip, lsl #5
   12714:	andeq	r5, r1, r4, asr r6
   12718:	andeq	r5, r1, r8, ror #12
   1271c:	andeq	r3, r1, ip, lsl #18
   12720:	andeq	r5, r1, r4, ror r6
   12724:	andeq	r3, r1, r0, asr #27
   12728:	andeq	r5, r1, r4, lsl #13
   1272c:	muleq	r1, r4, r6
   12730:	andeq	r5, r1, r8, lsr #13
   12734:			; <UNDEFINED> instruction: 0x000156b8
   12738:	andeq	r5, r1, r8, asr #13
   1273c:	ldrdeq	r5, [r1], -r8
   12740:	andeq	r5, r1, r8, ror #13
   12744:	andeq	r4, r1, r8, rrx
   12748:	strdeq	r5, [r1], -r8
   1274c:	andeq	r2, r1, ip, asr #25
   12750:	andeq	r5, r1, r4, lsl #14
   12754:	andeq	r4, r1, r4, asr #1
   12758:	andeq	r5, r1, r0, lsl r7
   1275c:	strdeq	r6, [r2], -pc	; <UNPREDICTABLE>
   12760:			; <UNDEFINED> instruction: 0x000274b0
   12764:	ldrdeq	r5, [r1], -ip
   12768:	andeq	r6, r2, r0, ror #1
   1276c:	ldrdeq	r5, [r1], -r0
   12770:	strdeq	r6, [r2], -sp
   12774:	strdeq	r5, [r1], -ip
   12778:	strdeq	r5, [r1], -r4
   1277c:	andeq	r7, r2, r0, asr #9
   12780:	andeq	r5, r1, ip, lsl #16
   12784:	andeq	r5, r1, r8, lsl r8
   12788:	andeq	r5, r1, r8, lsr #16
   1278c:	andeq	r3, r1, ip, ror sl
   12790:	andeq	r5, r1, r0, lsr r8
   12794:	andeq	r5, r1, ip, lsr r8
   12798:	andeq	r5, r1, ip, asr #16
   1279c:	andeq	r3, r1, r4, lsl #5
   127a0:	andeq	r7, r2, r8, lsr r4
   127a4:	andeq	r5, r1, r8, asr r8
   127a8:	andeq	r5, r1, r0, lsl #17
   127ac:	andeq	r7, r2, r0, lsr #11
   127b0:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   127b4:	muleq	r1, ip, r8
   127b8:	muleq	r1, r4, r8
   127bc:	andeq	r5, r1, r4, lsr #17
   127c0:			; <UNDEFINED> instruction: 0x000158b0
   127c4:			; <UNDEFINED> instruction: 0x000158bc
   127c8:	andeq	r3, r1, r4, lsr #21
   127cc:	andeq	r5, r1, r4, asr #17
   127d0:	ldrdeq	r5, [r1], -r0
   127d4:	strdeq	r5, [r1], -ip
   127d8:	andeq	r5, r1, r4, lsl #18
   127dc:	andeq	r5, r1, r0, lsl r9
   127e0:	andeq	r3, r1, r4, ror #1
   127e4:	andeq	r4, r1, r4, ror #30
   127e8:	andeq	r4, r1, r8, lsr #31
   127ec:	ldrdeq	r4, [r1], -r8
   127f0:	andeq	r5, r1, r4, lsr #1
   127f4:	andeq	r7, r2, r4, asr #9
   127f8:	andeq	r5, r1, ip, lsl r7
   127fc:	andeq	r5, r1, r4, lsr #14
   12800:			; <UNDEFINED> instruction: 0x000274b8
   12804:	andeq	r5, r1, r8, lsr r7
   12808:	andeq	r4, r1, r0, ror #28
   1280c:	andeq	r3, r1, ip, lsl #17
   12810:	andeq	r5, r1, r8, asr #14
   12814:	andeq	r5, r1, r8, asr r7
   12818:	andeq	r5, r1, ip, ror #14
   1281c:	andeq	r5, r1, r8, ror r7
   12820:	andeq	r7, r2, r8, asr #9
   12824:	andeq	r5, r1, ip, lsl #15
   12828:	muleq	r1, ip, r7
   1282c:	andeq	r4, r1, ip, asr #29
   12830:	andeq	r7, r2, r4, lsr #9
   12834:			; <UNDEFINED> instruction: 0x000157b0
   12838:	andeq	r3, r1, r4, lsl #9
   1283c:			; <UNDEFINED> instruction: 0x000157bc
   12840:	andeq	r3, r1, ip, lsr #14
   12844:	ldr	r3, [pc, #-88]	; 127f4 <__snprintf_chk@plt+0x10bc>
   12848:	str	r9, [sp]
   1284c:	ldr	r2, [sp, #36]	; 0x24
   12850:	ldr	r1, [r3]
   12854:	ldr	r0, [pc, #-100]	; 127f8 <__snprintf_chk@plt+0x10c0>
   12858:	mov	r3, #0
   1285c:	bl	11438 <XtCreateWidget@plt>
   12860:	ldr	r1, [pc, #-104]	; 12800 <__snprintf_chk@plt+0x10c8>
   12864:	ldr	r3, [r6, #260]	; 0x104
   12868:	str	r9, [sp, #4]
   1286c:	str	r3, [sp]
   12870:	ldr	r3, [pc, #-112]	; 12808 <__snprintf_chk@plt+0x10d0>
   12874:	ldr	r1, [r1]
   12878:	mov	r8, r0
   1287c:	mov	r2, r0
   12880:	ldr	r0, [pc, #-140]	; 127fc <__snprintf_chk@plt+0x10c4>
   12884:	bl	11510 <XtVaCreateWidget@plt>
   12888:	sub	r1, fp, #664	; 0x298
   1288c:	mov	r3, #0
   12890:	ldr	r2, [pc, #-140]	; 1280c <__snprintf_chk@plt+0x10d4>
   12894:	sub	r1, r1, #2
   12898:	str	r0, [sp, #84]	; 0x54
   1289c:	bl	116f0 <XtAddCallback@plt>
   128a0:	ldr	r1, [pc, #-168]	; 12800 <__snprintf_chk@plt+0x10c8>
   128a4:	ldr	r3, [r6, #344]	; 0x158
   128a8:	ldr	ip, [sp, #84]	; 0x54
   128ac:	str	r9, [sp, #4]
   128b0:	mov	r2, r8
   128b4:	ldr	r1, [r1]
   128b8:	ldr	r0, [pc, #-188]	; 12804 <__snprintf_chk@plt+0x10cc>
   128bc:	str	r3, [sp]
   128c0:	str	ip, [r6, #272]	; 0x110
   128c4:	ldr	r3, [pc, #-196]	; 12808 <__snprintf_chk@plt+0x10d0>
   128c8:	bl	11510 <XtVaCreateWidget@plt>
   128cc:	sub	r1, fp, #664	; 0x298
   128d0:	mov	r3, #0
   128d4:	ldr	r2, [pc, #-208]	; 1280c <__snprintf_chk@plt+0x10d4>
   128d8:	sub	r1, r1, #2
   128dc:	str	r0, [sp, #88]	; 0x58
   128e0:	bl	116f0 <XtAddCallback@plt>
   128e4:	ldr	r1, [pc, #-204]	; 12820 <__snprintf_chk@plt+0x10e8>
   128e8:	ldr	ip, [sp, #88]	; 0x58
   128ec:	str	r9, [sp]
   128f0:	mov	r2, r8
   128f4:	str	ip, [r6, #356]	; 0x164
   128f8:	mov	r3, #0
   128fc:	ldr	r1, [r1]
   12900:	ldr	r0, [pc, #-248]	; 12810 <__snprintf_chk@plt+0x10d8>
   12904:	bl	11438 <XtCreateWidget@plt>
   12908:	mov	r2, r8
   1290c:	ldr	r1, [sl]
   12910:	mov	r3, #0
   12914:	str	r0, [sp, #92]	; 0x5c
   12918:	ldr	r0, [pc, #-268]	; 12814 <__snprintf_chk@plt+0x10dc>
   1291c:	bl	11510 <XtVaCreateWidget@plt>
   12920:	sub	r1, fp, #664	; 0x298
   12924:	mvn	r3, #9
   12928:	ldr	r2, [pc, #-240]	; 12840 <__snprintf_chk@plt+0x1108>
   1292c:	sub	r1, r1, #2
   12930:	str	r0, [sp, #96]	; 0x60
   12934:	bl	116f0 <XtAddCallback@plt>
   12938:	ldr	r2, [r6, #288]	; 0x120
   1293c:	mov	r3, #5
   12940:	str	r2, [sp, #4]
   12944:	ldr	r2, [pc, #-288]	; 1282c <__snprintf_chk@plt+0x10f4>
   12948:	mov	r1, r3
   1294c:	str	r2, [sp]
   12950:	add	r0, sp, #180	; 0xb4
   12954:	mov	r2, #1
   12958:	bl	11738 <__snprintf_chk@plt>
   1295c:	add	r0, sp, #180	; 0xb4
   12960:	ldr	r3, [r4, #224]	; 0xe0
   12964:	str	r0, [sp]
   12968:	ldr	r0, [pc, #-320]	; 12830 <__snprintf_chk@plt+0x10f8>
   1296c:	str	r3, [sp, #8]
   12970:	str	r9, [sp, #12]
   12974:	sub	r3, fp, #69	; 0x45
   12978:	str	fp, [sp, #4]
   1297c:	mov	r2, r8
   12980:	ldr	r1, [r0]
   12984:	ldr	r0, [pc, #-372]	; 12818 <__snprintf_chk@plt+0x10e0>
   12988:	bl	11510 <XtVaCreateWidget@plt>
   1298c:	mov	r2, #10
   12990:	ldr	r1, [pc, #-352]	; 12838 <__snprintf_chk@plt+0x1100>
   12994:	str	r0, [sp, #100]	; 0x64
   12998:	bl	148c0 <__snprintf_chk@plt+0x3188>
   1299c:	ldr	ip, [sp, #100]	; 0x64
   129a0:	mov	r2, r8
   129a4:	str	ip, [r6, #300]	; 0x12c
   129a8:	ldr	r1, [sl]
   129ac:	mov	r3, #0
   129b0:	ldr	r0, [pc, #-412]	; 1281c <__snprintf_chk@plt+0x10e4>
   129b4:	bl	11510 <XtVaCreateWidget@plt>
   129b8:	sub	r1, fp, #664	; 0x298
   129bc:	mov	r3, #10
   129c0:	ldr	r2, [pc, #-392]	; 12840 <__snprintf_chk@plt+0x1108>
   129c4:	sub	r1, r1, #2
   129c8:	str	r0, [sp, #104]	; 0x68
   129cc:	bl	116f0 <XtAddCallback@plt>
   129d0:	ldr	r1, [pc, #-440]	; 12820 <__snprintf_chk@plt+0x10e8>
   129d4:	str	r9, [sp]
   129d8:	mov	r2, r8
   129dc:	mov	r3, #0
   129e0:	ldr	r1, [r1]
   129e4:	ldr	r0, [pc, #-456]	; 12824 <__snprintf_chk@plt+0x10ec>
   129e8:	bl	11438 <XtCreateWidget@plt>
   129ec:	mov	r2, r8
   129f0:	ldr	r1, [sl]
   129f4:	mov	r3, #0
   129f8:	str	r0, [sp, #108]	; 0x6c
   129fc:	ldr	r0, [pc, #-476]	; 12828 <__snprintf_chk@plt+0x10f0>
   12a00:	bl	11510 <XtVaCreateWidget@plt>
   12a04:	sub	r1, fp, #664	; 0x298
   12a08:	mvn	r3, #10
   12a0c:	ldr	r2, [pc, #-468]	; 12840 <__snprintf_chk@plt+0x1108>
   12a10:	sub	r1, r1, #2
   12a14:	str	r0, [sp, #112]	; 0x70
   12a18:	bl	116f0 <XtAddCallback@plt>
   12a1c:	ldr	r2, [r6, #316]	; 0x13c
   12a20:	ldr	r1, [pc, #-508]	; 1282c <__snprintf_chk@plt+0x10f4>
   12a24:	mov	r3, #5
   12a28:	add	r0, sp, #180	; 0xb4
   12a2c:	stm	sp, {r1, r2}
   12a30:	mov	r1, r3
   12a34:	mov	r2, #1
   12a38:	bl	11738 <__snprintf_chk@plt>
   12a3c:	ldr	r2, [pc, #-532]	; 12830 <__snprintf_chk@plt+0x10f8>
   12a40:	ldr	r0, [r4, #224]	; 0xe0
   12a44:	add	r3, sp, #180	; 0xb4
   12a48:	str	r3, [sp]
   12a4c:	str	r9, [sp, #12]
   12a50:	sub	r3, fp, #69	; 0x45
   12a54:	str	fp, [sp, #4]
   12a58:	ldr	r1, [r2]
   12a5c:	mov	r2, r8
   12a60:	str	r0, [sp, #8]
   12a64:	ldr	r0, [pc, #-568]	; 12834 <__snprintf_chk@plt+0x10fc>
   12a68:	bl	11510 <XtVaCreateWidget@plt>
   12a6c:	mov	r2, #11
   12a70:	ldr	r1, [pc, #-576]	; 12838 <__snprintf_chk@plt+0x1100>
   12a74:	str	r0, [sp, #116]	; 0x74
   12a78:	bl	148c0 <__snprintf_chk@plt+0x3188>
   12a7c:	ldr	ip, [sp, #116]	; 0x74
   12a80:	mov	r2, r8
   12a84:	str	ip, [r6, #328]	; 0x148
   12a88:	ldr	r1, [sl]
   12a8c:	mov	r3, #0
   12a90:	ldr	r0, [pc, #-604]	; 1283c <__snprintf_chk@plt+0x1104>
   12a94:	bl	11510 <XtVaCreateWidget@plt>
   12a98:	sub	r1, fp, #664	; 0x298
   12a9c:	mov	r3, #11
   12aa0:	ldr	r2, [pc, #-616]	; 12840 <__snprintf_chk@plt+0x1108>
   12aa4:	sub	r1, r1, #2
   12aa8:	str	r0, [sp, #120]	; 0x78
   12aac:	bl	116f0 <XtAddCallback@plt>
   12ab0:	add	r0, sp, #84	; 0x54
   12ab4:	mov	r1, #10
   12ab8:	bl	116d8 <XtManageChildren@plt>
   12abc:	mov	r0, r8
   12ac0:	bl	116e4 <XtManageChild@plt>
   12ac4:	b	120d8 <__snprintf_chk@plt+0x9a0>
   12ac8:	bl	114bc <__stack_chk_fail@plt>
   12acc:	bl	12bd0 <__snprintf_chk@plt+0x1498>
   12ad0:	mov	fp, #0
   12ad4:	mov	lr, #0
   12ad8:	pop	{r1}		; (ldr r1, [sp], #4)
   12adc:	mov	r2, sp
   12ae0:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae4:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae8:	ldr	ip, [pc, #16]	; 12b00 <__snprintf_chk@plt+0x13c8>
   12aec:	push	{ip}		; (str ip, [sp, #-4]!)
   12af0:	ldr	r0, [pc, #12]	; 12b04 <__snprintf_chk@plt+0x13cc>
   12af4:	ldr	r3, [pc, #12]	; 12b08 <__snprintf_chk@plt+0x13d0>
   12af8:	bl	11540 <__libc_start_main@plt>
   12afc:	bl	11708 <abort@plt>
   12b00:	ldrdeq	r4, [r1], -r8
   12b04:	andeq	r1, r1, r8, asr #14
   12b08:	andeq	r4, r1, r8, ror fp
   12b0c:	ldr	r3, [pc, #20]	; 12b28 <__snprintf_chk@plt+0x13f0>
   12b10:	ldr	r2, [pc, #20]	; 12b2c <__snprintf_chk@plt+0x13f4>
   12b14:	add	r3, pc, r3
   12b18:	ldr	r2, [r3, r2]
   12b1c:	cmp	r2, #0
   12b20:	bxeq	lr
   12b24:	b	11564 <__gmon_start__@plt>
   12b28:	andeq	r4, r1, r4, ror #9
   12b2c:	andeq	r0, r0, r0, lsr #2
   12b30:	ldr	r0, [pc, #24]	; 12b50 <__snprintf_chk@plt+0x1418>
   12b34:	ldr	r3, [pc, #24]	; 12b54 <__snprintf_chk@plt+0x141c>
   12b38:	cmp	r3, r0
   12b3c:	bxeq	lr
   12b40:	ldr	r3, [pc, #16]	; 12b58 <__snprintf_chk@plt+0x1420>
   12b44:	cmp	r3, #0
   12b48:	bxeq	lr
   12b4c:	bx	r3
   12b50:	andeq	r7, r2, r0, lsr #9
   12b54:	andeq	r7, r2, r0, lsr #9
   12b58:	andeq	r0, r0, r0
   12b5c:	ldr	r0, [pc, #36]	; 12b88 <__snprintf_chk@plt+0x1450>
   12b60:	ldr	r1, [pc, #36]	; 12b8c <__snprintf_chk@plt+0x1454>
   12b64:	sub	r1, r1, r0
   12b68:	asr	r1, r1, #2
   12b6c:	add	r1, r1, r1, lsr #31
   12b70:	asrs	r1, r1, #1
   12b74:	bxeq	lr
   12b78:	ldr	r3, [pc, #16]	; 12b90 <__snprintf_chk@plt+0x1458>
   12b7c:	cmp	r3, #0
   12b80:	bxeq	lr
   12b84:	bx	r3
   12b88:	andeq	r7, r2, r0, lsr #9
   12b8c:	andeq	r7, r2, r0, lsr #9
   12b90:	andeq	r0, r0, r0
   12b94:	push	{r4, lr}
   12b98:	ldr	r4, [pc, #24]	; 12bb8 <__snprintf_chk@plt+0x1480>
   12b9c:	ldrb	r3, [r4]
   12ba0:	cmp	r3, #0
   12ba4:	popne	{r4, pc}
   12ba8:	bl	12b30 <__snprintf_chk@plt+0x13f8>
   12bac:	mov	r3, #1
   12bb0:	strb	r3, [r4]
   12bb4:	pop	{r4, pc}
   12bb8:	andeq	r7, r2, ip, asr #9
   12bbc:	b	12b5c <__snprintf_chk@plt+0x1424>
   12bc0:	ldr	r3, [pc, #4]	; 12bcc <__snprintf_chk@plt+0x1494>
   12bc4:	ldr	r0, [r3]
   12bc8:	b	115d0 <XtNoticeSignal@plt>
   12bcc:	ldrdeq	r7, [r2], -r0
   12bd0:	push	{r4, lr}
   12bd4:	mov	r2, #25
   12bd8:	ldr	r4, [pc, #140]	; 12c6c <__snprintf_chk@plt+0x1534>
   12bdc:	mov	r1, #1
   12be0:	ldr	r0, [pc, #136]	; 12c70 <__snprintf_chk@plt+0x1538>
   12be4:	ldr	r3, [r4]
   12be8:	bl	11504 <fwrite@plt>
   12bec:	ldr	r3, [r4]
   12bf0:	mov	r2, #28
   12bf4:	mov	r1, #1
   12bf8:	ldr	r0, [pc, #116]	; 12c74 <__snprintf_chk@plt+0x153c>
   12bfc:	bl	11504 <fwrite@plt>
   12c00:	ldr	r3, [r4]
   12c04:	mov	r2, #75	; 0x4b
   12c08:	mov	r1, #1
   12c0c:	ldr	r0, [pc, #100]	; 12c78 <__snprintf_chk@plt+0x1540>
   12c10:	bl	11504 <fwrite@plt>
   12c14:	ldr	r3, [r4]
   12c18:	mov	r2, #68	; 0x44
   12c1c:	mov	r1, #1
   12c20:	ldr	r0, [pc, #84]	; 12c7c <__snprintf_chk@plt+0x1544>
   12c24:	bl	11504 <fwrite@plt>
   12c28:	ldr	r3, [r4]
   12c2c:	mov	r2, #72	; 0x48
   12c30:	mov	r1, #1
   12c34:	ldr	r0, [pc, #68]	; 12c80 <__snprintf_chk@plt+0x1548>
   12c38:	bl	11504 <fwrite@plt>
   12c3c:	ldr	r3, [r4]
   12c40:	mov	r2, #70	; 0x46
   12c44:	mov	r1, #1
   12c48:	ldr	r0, [pc, #52]	; 12c84 <__snprintf_chk@plt+0x154c>
   12c4c:	bl	11504 <fwrite@plt>
   12c50:	ldr	r3, [r4]
   12c54:	mov	r2, #75	; 0x4b
   12c58:	mov	r1, #1
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <__snprintf_chk@plt+0x1550>
   12c60:	bl	11504 <fwrite@plt>
   12c64:	mov	r0, #1
   12c68:	bl	11588 <exit@plt>
   12c6c:	andeq	r7, r2, r8, lsr #9
   12c70:	andeq	r4, r1, r0, lsr #24
   12c74:	andeq	r4, r1, ip, lsr ip
   12c78:	andeq	r4, r1, ip, asr ip
   12c7c:	andeq	r4, r1, r8, lsr #25
   12c80:	strdeq	r4, [r1], -r0
   12c84:	andeq	r4, r1, ip, lsr sp
   12c88:	andeq	r4, r1, r4, lsl #27
   12c8c:	push	{r4, lr}
   12c90:	mov	r2, #0
   12c94:	mov	r4, r0
   12c98:	ldr	r1, [r0, #132]	; 0x84
   12c9c:	bl	116fc <XF86VidModeLockModeSwitch@plt>
   12ca0:	mov	r0, r4
   12ca4:	pop	{r4, lr}
   12ca8:	b	1169c <XFlush@plt>
   12cac:	ldr	r3, [pc, #20]	; 12cc8 <__snprintf_chk@plt+0x1590>
   12cb0:	push	{r4, lr}
   12cb4:	ldr	r0, [r3, #4]
   12cb8:	bl	1163c <XtDisplay@plt>
   12cbc:	bl	12c8c <__snprintf_chk@plt+0x1554>
   12cc0:	mov	r0, #3
   12cc4:	bl	11588 <exit@plt>
   12cc8:	ldrdeq	r7, [r2], -r0
   12ccc:	push	{r4, r5, r6, r7, r8, lr}
   12cd0:	sub	sp, sp, #80	; 0x50
   12cd4:	ldr	r4, [pc, #900]	; 13060 <__snprintf_chk@plt+0x1928>
   12cd8:	ldr	r7, [pc, #900]	; 13064 <__snprintf_chk@plt+0x192c>
   12cdc:	ldr	r1, [pc, #900]	; 13068 <__snprintf_chk@plt+0x1930>
   12ce0:	ldr	r3, [r4, #120]	; 0x78
   12ce4:	ldr	ip, [r4, #8]
   12ce8:	ldr	r6, [pc, #892]	; 1306c <__snprintf_chk@plt+0x1934>
   12cec:	ldr	r2, [r7]
   12cf0:	add	r5, sp, #60	; 0x3c
   12cf4:	str	r3, [sp, #8]
   12cf8:	mov	r3, #16
   12cfc:	stm	sp, {r1, ip}
   12d00:	str	r2, [sp, #76]	; 0x4c
   12d04:	mov	r1, r3
   12d08:	mov	r2, #1
   12d0c:	mov	r8, r0
   12d10:	mov	r0, r5
   12d14:	bl	11738 <__snprintf_chk@plt>
   12d18:	vldr	s15, [r6, #168]	; 0xa8
   12d1c:	vldr	d5, [pc, #820]	; 13058 <__snprintf_chk@plt+0x1920>
   12d20:	ldr	r3, [r4, #204]	; 0xcc
   12d24:	ldr	r0, [r4, #176]	; 0xb0
   12d28:	vcvt.f32.s32	s14, s15
   12d2c:	ldr	r1, [r4, #148]	; 0x94
   12d30:	ldr	r2, [r4, #120]	; 0x78
   12d34:	str	r3, [sp, #44]	; 0x2c
   12d38:	ldr	r3, [r4, #92]	; 0x5c
   12d3c:	str	r0, [sp, #40]	; 0x28
   12d40:	ldr	ip, [r4, #64]	; 0x40
   12d44:	ldr	r0, [r4, #36]	; 0x24
   12d48:	vcvt.f64.f32	d7, s14
   12d4c:	str	r1, [sp, #36]	; 0x24
   12d50:	str	r2, [sp, #32]
   12d54:	ldr	r1, [r4, #8]
   12d58:	ldr	r2, [pc, #784]	; 13070 <__snprintf_chk@plt+0x1938>
   12d5c:	str	r3, [sp, #28]
   12d60:	mov	r3, #160	; 0xa0
   12d64:	str	r5, [sp, #4]
   12d68:	vdiv.f64	d6, d7, d5
   12d6c:	str	r0, [sp, #20]
   12d70:	str	r1, [sp, #16]
   12d74:	str	r2, [sp]
   12d78:	str	ip, [sp, #24]
   12d7c:	add	r0, r6, #8
   12d80:	mov	r1, r3
   12d84:	mov	r2, #1
   12d88:	vstr	d6, [sp, #8]
   12d8c:	bl	11738 <__snprintf_chk@plt>
   12d90:	ldr	r5, [r6, #172]	; 0xac
   12d94:	tst	r5, #1
   12d98:	bne	12e3c <__snprintf_chk@plt+0x1704>
   12d9c:	tst	r5, #2
   12da0:	bne	12e54 <__snprintf_chk@plt+0x171c>
   12da4:	tst	r5, #4
   12da8:	bne	12e6c <__snprintf_chk@plt+0x1734>
   12dac:	tst	r5, #8
   12db0:	bne	12e84 <__snprintf_chk@plt+0x174c>
   12db4:	tst	r5, #16
   12db8:	bne	12e9c <__snprintf_chk@plt+0x1764>
   12dbc:	tst	r5, #64	; 0x40
   12dc0:	bne	12eb4 <__snprintf_chk@plt+0x177c>
   12dc4:	tst	r5, #128	; 0x80
   12dc8:	bne	12ecc <__snprintf_chk@plt+0x1794>
   12dcc:	tst	r5, #256	; 0x100
   12dd0:	bne	12ee4 <__snprintf_chk@plt+0x17ac>
   12dd4:	tst	r5, #32
   12dd8:	bne	12efc <__snprintf_chk@plt+0x17c4>
   12ddc:	ldr	r0, [pc, #656]	; 13074 <__snprintf_chk@plt+0x193c>
   12de0:	bl	11528 <puts@plt>
   12de4:	mov	r0, r8
   12de8:	bl	1163c <XtDisplay@plt>
   12dec:	bl	11684 <XtLastTimestampProcessed@plt>
   12df0:	mov	r5, #0
   12df4:	ldr	r3, [pc, #636]	; 13078 <__snprintf_chk@plt+0x1940>
   12df8:	str	r5, [sp, #4]
   12dfc:	str	r5, [sp]
   12e00:	mov	r1, #1
   12e04:	mov	r2, r0
   12e08:	mov	r0, r8
   12e0c:	bl	114e0 <XtOwnSelection@plt>
   12e10:	ldr	r3, [r6, #176]	; 0xb0
   12e14:	cmp	r3, r5
   12e18:	bne	12f10 <__snprintf_chk@plt+0x17d8>
   12e1c:	mov	r0, #10
   12e20:	bl	1160c <putchar@plt>
   12e24:	ldr	r2, [sp, #76]	; 0x4c
   12e28:	ldr	r3, [r7]
   12e2c:	cmp	r2, r3
   12e30:	bne	13054 <__snprintf_chk@plt+0x191c>
   12e34:	add	sp, sp, #80	; 0x50
   12e38:	pop	{r4, r5, r6, r7, r8, pc}
   12e3c:	mov	r2, #160	; 0xa0
   12e40:	ldr	r1, [pc, #564]	; 1307c <__snprintf_chk@plt+0x1944>
   12e44:	add	r0, r6, #8
   12e48:	bl	115f4 <__strcat_chk@plt>
   12e4c:	tst	r5, #2
   12e50:	beq	12da4 <__snprintf_chk@plt+0x166c>
   12e54:	mov	r2, #160	; 0xa0
   12e58:	ldr	r1, [pc, #544]	; 13080 <__snprintf_chk@plt+0x1948>
   12e5c:	ldr	r0, [pc, #528]	; 13074 <__snprintf_chk@plt+0x193c>
   12e60:	bl	115f4 <__strcat_chk@plt>
   12e64:	tst	r5, #4
   12e68:	beq	12dac <__snprintf_chk@plt+0x1674>
   12e6c:	mov	r2, #160	; 0xa0
   12e70:	ldr	r1, [pc, #524]	; 13084 <__snprintf_chk@plt+0x194c>
   12e74:	ldr	r0, [pc, #504]	; 13074 <__snprintf_chk@plt+0x193c>
   12e78:	bl	115f4 <__strcat_chk@plt>
   12e7c:	tst	r5, #8
   12e80:	beq	12db4 <__snprintf_chk@plt+0x167c>
   12e84:	mov	r2, #160	; 0xa0
   12e88:	ldr	r1, [pc, #504]	; 13088 <__snprintf_chk@plt+0x1950>
   12e8c:	ldr	r0, [pc, #480]	; 13074 <__snprintf_chk@plt+0x193c>
   12e90:	bl	115f4 <__strcat_chk@plt>
   12e94:	tst	r5, #16
   12e98:	beq	12dbc <__snprintf_chk@plt+0x1684>
   12e9c:	mov	r2, #160	; 0xa0
   12ea0:	ldr	r1, [pc, #484]	; 1308c <__snprintf_chk@plt+0x1954>
   12ea4:	ldr	r0, [pc, #456]	; 13074 <__snprintf_chk@plt+0x193c>
   12ea8:	bl	115f4 <__strcat_chk@plt>
   12eac:	tst	r5, #64	; 0x40
   12eb0:	beq	12dc4 <__snprintf_chk@plt+0x168c>
   12eb4:	mov	r2, #160	; 0xa0
   12eb8:	ldr	r1, [pc, #464]	; 13090 <__snprintf_chk@plt+0x1958>
   12ebc:	ldr	r0, [pc, #432]	; 13074 <__snprintf_chk@plt+0x193c>
   12ec0:	bl	115f4 <__strcat_chk@plt>
   12ec4:	tst	r5, #128	; 0x80
   12ec8:	beq	12dcc <__snprintf_chk@plt+0x1694>
   12ecc:	mov	r2, #160	; 0xa0
   12ed0:	ldr	r1, [pc, #444]	; 13094 <__snprintf_chk@plt+0x195c>
   12ed4:	ldr	r0, [pc, #408]	; 13074 <__snprintf_chk@plt+0x193c>
   12ed8:	bl	115f4 <__strcat_chk@plt>
   12edc:	tst	r5, #256	; 0x100
   12ee0:	beq	12dd4 <__snprintf_chk@plt+0x169c>
   12ee4:	mov	r2, #160	; 0xa0
   12ee8:	ldr	r1, [pc, #424]	; 13098 <__snprintf_chk@plt+0x1960>
   12eec:	ldr	r0, [pc, #384]	; 13074 <__snprintf_chk@plt+0x193c>
   12ef0:	bl	115f4 <__strcat_chk@plt>
   12ef4:	tst	r5, #32
   12ef8:	beq	12ddc <__snprintf_chk@plt+0x16a4>
   12efc:	mov	r2, #160	; 0xa0
   12f00:	ldr	r1, [pc, #404]	; 1309c <__snprintf_chk@plt+0x1964>
   12f04:	ldr	r0, [pc, #360]	; 13074 <__snprintf_chk@plt+0x193c>
   12f08:	bl	115f4 <__strcat_chk@plt>
   12f0c:	b	12ddc <__snprintf_chk@plt+0x16a4>
   12f10:	add	r2, sp, #51	; 0x33
   12f14:	mov	r3, r5
   12f18:	ldr	r1, [pc, #384]	; 130a0 <__snprintf_chk@plt+0x1968>
   12f1c:	ldr	r0, [r4, #272]	; 0x110
   12f20:	bl	11624 <XtVaGetValues@plt>
   12f24:	ldrb	ip, [sp, #51]	; 0x33
   12f28:	mov	r3, r5
   12f2c:	add	r2, sp, #56	; 0x38
   12f30:	subs	ip, ip, r5
   12f34:	movne	ip, #1
   12f38:	ldr	r1, [pc, #356]	; 130a4 <__snprintf_chk@plt+0x196c>
   12f3c:	ldr	r0, [r4, #300]	; 0x12c
   12f40:	str	ip, [r4, #260]	; 0x104
   12f44:	bl	11624 <XtVaGetValues@plt>
   12f48:	add	r2, sp, #52	; 0x34
   12f4c:	ldr	r1, [pc, #340]	; 130a8 <__snprintf_chk@plt+0x1970>
   12f50:	ldr	r0, [sp, #56]	; 0x38
   12f54:	bl	11600 <__isoc99_sscanf@plt>
   12f58:	ldr	ip, [sp, #52]	; 0x34
   12f5c:	mov	r3, r5
   12f60:	add	r2, sp, #56	; 0x38
   12f64:	ldr	r1, [pc, #312]	; 130a4 <__snprintf_chk@plt+0x196c>
   12f68:	ldr	r0, [r4, #328]	; 0x148
   12f6c:	str	ip, [r4, #288]	; 0x120
   12f70:	bl	11624 <XtVaGetValues@plt>
   12f74:	add	r2, sp, #52	; 0x34
   12f78:	ldr	r1, [pc, #296]	; 130a8 <__snprintf_chk@plt+0x1970>
   12f7c:	ldr	r0, [sp, #56]	; 0x38
   12f80:	bl	11600 <__isoc99_sscanf@plt>
   12f84:	ldr	ip, [sp, #52]	; 0x34
   12f88:	add	r2, sp, #51	; 0x33
   12f8c:	mov	r3, r5
   12f90:	ldr	r1, [pc, #264]	; 130a0 <__snprintf_chk@plt+0x1968>
   12f94:	ldr	r0, [r4, #356]	; 0x164
   12f98:	str	ip, [r4, #316]	; 0x13c
   12f9c:	bl	11624 <XtVaGetValues@plt>
   12fa0:	ldrb	r3, [sp, #51]	; 0x33
   12fa4:	ldr	r2, [r4, #260]	; 0x104
   12fa8:	ldr	r1, [r4, #488]	; 0x1e8
   12fac:	subs	r3, r3, r5
   12fb0:	movne	r3, #1
   12fb4:	cmp	r2, r1
   12fb8:	str	r3, [r4, #344]	; 0x158
   12fbc:	bne	13028 <__snprintf_chk@plt+0x18f0>
   12fc0:	ldr	r2, [r4, #500]	; 0x1f4
   12fc4:	cmp	r2, r3
   12fc8:	bne	1300c <__snprintf_chk@plt+0x18d4>
   12fcc:	ldr	r3, [r4, #288]	; 0x120
   12fd0:	ldr	r1, [r4, #492]	; 0x1ec
   12fd4:	ldr	r2, [r4, #316]	; 0x13c
   12fd8:	cmp	r3, r1
   12fdc:	bne	12fec <__snprintf_chk@plt+0x18b4>
   12fe0:	ldr	r1, [r4, #496]	; 0x1f0
   12fe4:	cmp	r1, r2
   12fe8:	beq	12e1c <__snprintf_chk@plt+0x16e4>
   12fec:	str	r2, [sp, #4]
   12ff0:	str	r3, [sp]
   12ff4:	ldr	r2, [r4, #8]
   12ff8:	ldr	r3, [r4, #120]	; 0x78
   12ffc:	ldr	r1, [pc, #168]	; 130ac <__snprintf_chk@plt+0x1974>
   13000:	mov	r0, #1
   13004:	bl	11654 <__printf_chk@plt>
   13008:	b	12e1c <__snprintf_chk@plt+0x16e4>
   1300c:	str	r3, [sp]
   13010:	ldr	r2, [r4, #8]
   13014:	ldr	r3, [r4, #120]	; 0x78
   13018:	ldr	r1, [pc, #144]	; 130b0 <__snprintf_chk@plt+0x1978>
   1301c:	mov	r0, #1
   13020:	bl	11654 <__printf_chk@plt>
   13024:	b	12fcc <__snprintf_chk@plt+0x1894>
   13028:	str	r2, [sp]
   1302c:	ldr	r3, [r4, #120]	; 0x78
   13030:	ldr	r2, [r4, #8]
   13034:	ldr	r1, [pc, #120]	; 130b4 <__snprintf_chk@plt+0x197c>
   13038:	mov	r0, #1
   1303c:	bl	11654 <__printf_chk@plt>
   13040:	ldr	r3, [r4, #344]	; 0x158
   13044:	ldr	r2, [r4, #500]	; 0x1f4
   13048:	cmp	r2, r3
   1304c:	beq	12fcc <__snprintf_chk@plt+0x1894>
   13050:	b	1300c <__snprintf_chk@plt+0x18d4>
   13054:	bl	114bc <__stack_chk_fail@plt>
   13058:	andeq	r0, r0, r0
   1305c:	addmi	r4, pc, r0
   13060:	andeq	r7, r2, ip, lsr #2
   13064:	andeq	r5, r2, r8, ror pc
   13068:	ldrdeq	r4, [r1], -r0
   1306c:	ldrdeq	r7, [r2], -r0
   13070:	ldrdeq	r4, [r1], -r8
   13074:	ldrdeq	r7, [r2], -r8
   13078:	andeq	r3, r1, r0, asr #21
   1307c:	andeq	r4, r1, ip, lsl #28
   13080:	andeq	r4, r1, r4, lsl lr
   13084:	andeq	r4, r1, ip, lsl lr
   13088:	andeq	r4, r1, r4, lsr #28
   1308c:	andeq	r4, r1, ip, lsr #28
   13090:	andeq	r4, r1, r8, lsr lr
   13094:	andeq	r4, r1, r4, asr #28
   13098:	andeq	r4, r1, ip, asr #28
   1309c:	andeq	r4, r1, r4, asr lr
   130a0:	andeq	r4, r1, r0, ror #28
   130a4:	andeq	r6, r2, r5, ror #14
   130a8:	andeq	r4, r1, r8, ror #28
   130ac:	muleq	r1, ip, lr
   130b0:	andeq	r4, r1, r4, lsl #29
   130b4:	andeq	r4, r1, ip, ror #28
   130b8:	mov	r2, #0
   130bc:	mov	r1, r2
   130c0:	b	12ccc <__snprintf_chk@plt+0x1594>
   130c4:	push	{r4, lr}
   130c8:	mov	r4, r0
   130cc:	bl	1163c <XtDisplay@plt>
   130d0:	bl	12c8c <__snprintf_chk@plt+0x1554>
   130d4:	mov	r0, r4
   130d8:	bl	114f8 <XtWidgetToApplicationContext@plt>
   130dc:	pop	{r4, lr}
   130e0:	b	11450 <XtAppSetExitFlag@plt>
   130e4:	b	130c4 <__snprintf_chk@plt+0x198c>
   130e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130ec:	sub	sp, sp, #60	; 0x3c
   130f0:	ldr	r8, [pc, #360]	; 13260 <__snprintf_chk@plt+0x1b28>
   130f4:	ldr	sl, [pc, #360]	; 13264 <__snprintf_chk@plt+0x1b2c>
   130f8:	mov	ip, #0
   130fc:	mov	r6, r0
   13100:	ldr	lr, [r8]
   13104:	mov	r0, r2
   13108:	mov	r4, r1
   1310c:	str	r3, [sp, #20]
   13110:	mov	r2, r6
   13114:	mov	r3, ip
   13118:	ldr	r1, [sl]
   1311c:	str	ip, [sp]
   13120:	str	lr, [sp, #52]	; 0x34
   13124:	ldr	r9, [sp, #96]	; 0x60
   13128:	bl	11438 <XtCreateWidget@plt>
   1312c:	sub	r3, r4, #13
   13130:	cmp	r3, #2
   13134:	ldr	r5, [pc, #300]	; 13268 <__snprintf_chk@plt+0x1b30>
   13138:	str	r0, [sp, #28]
   1313c:	bhi	13210 <__snprintf_chk@plt+0x1ad8>
   13140:	mov	r3, #28
   13144:	vldr	d5, [pc, #268]	; 13258 <__snprintf_chk@plt+0x1b20>
   13148:	mla	r3, r3, r4, r5
   1314c:	ldr	r2, [pc, #280]	; 1326c <__snprintf_chk@plt+0x1b34>
   13150:	add	fp, sp, #40	; 0x28
   13154:	vldr	s14, [r3, #8]
   13158:	mov	r3, #10
   1315c:	str	r2, [sp]
   13160:	mov	r0, fp
   13164:	vcvt.f32.s32	s14, s14
   13168:	mov	r1, r3
   1316c:	mov	r2, #1
   13170:	vcvt.f64.f32	d7, s14
   13174:	vdiv.f64	d6, d7, d5
   13178:	vstr	d6, [sp, #8]
   1317c:	bl	11738 <__snprintf_chk@plt>
   13180:	mov	r7, #0
   13184:	str	fp, [sp]
   13188:	ldr	r1, [sl]
   1318c:	ldr	r0, [sp, #20]
   13190:	str	r7, [sp, #4]
   13194:	ldr	r3, [pc, #212]	; 13270 <__snprintf_chk@plt+0x1b38>
   13198:	mov	r2, r6
   1319c:	bl	11510 <XtVaCreateWidget@plt>
   131a0:	cmp	r9, r7
   131a4:	str	r0, [sp, #32]
   131a8:	beq	13240 <__snprintf_chk@plt+0x1b08>
   131ac:	ldr	r1, [pc, #192]	; 13274 <__snprintf_chk@plt+0x1b3c>
   131b0:	str	r7, [sp]
   131b4:	mov	r3, r7
   131b8:	mov	r2, r6
   131bc:	ldr	r1, [r1]
   131c0:	mov	r0, r9
   131c4:	bl	11438 <XtCreateWidget@plt>
   131c8:	ldr	r1, [pc, #168]	; 13278 <__snprintf_chk@plt+0x1b40>
   131cc:	mov	r3, r4
   131d0:	ldr	r2, [pc, #164]	; 1327c <__snprintf_chk@plt+0x1b44>
   131d4:	str	r0, [sp, #36]	; 0x24
   131d8:	bl	116f0 <XtAddCallback@plt>
   131dc:	mov	r1, #3
   131e0:	add	r0, sp, #28
   131e4:	bl	116d8 <XtManageChildren@plt>
   131e8:	rsb	r4, r4, r4, lsl #3
   131ec:	ldr	r0, [sp, #52]	; 0x34
   131f0:	ldrd	r2, [sp, #32]
   131f4:	ldr	r1, [r8]
   131f8:	add	r4, r5, r4, lsl #2
   131fc:	cmp	r0, r1
   13200:	strd	r2, [r4, #20]
   13204:	bne	13254 <__snprintf_chk@plt+0x1b1c>
   13208:	add	sp, sp, #60	; 0x3c
   1320c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13210:	mov	r2, #28
   13214:	ldr	r1, [pc, #100]	; 13280 <__snprintf_chk@plt+0x1b48>
   13218:	mla	r2, r2, r4, r5
   1321c:	add	fp, sp, #40	; 0x28
   13220:	mov	r3, #10
   13224:	ldr	r2, [r2, #8]
   13228:	mov	r0, fp
   1322c:	stm	sp, {r1, r2}
   13230:	mov	r1, r3
   13234:	mov	r2, #1
   13238:	bl	11738 <__snprintf_chk@plt>
   1323c:	b	13180 <__snprintf_chk@plt+0x1a48>
   13240:	mov	r1, #2
   13244:	add	r0, sp, #28
   13248:	str	r9, [sp, #36]	; 0x24
   1324c:	bl	116d8 <XtManageChildren@plt>
   13250:	b	131e8 <__snprintf_chk@plt+0x1ab0>
   13254:	bl	114bc <__stack_chk_fail@plt>
   13258:	andeq	r0, r0, r0
   1325c:	addmi	r4, pc, r0
   13260:	andeq	r5, r2, r8, ror pc
   13264:	andeq	r7, r2, r8, asr #9
   13268:	andeq	r7, r2, ip, lsr #2
   1326c:			; <UNDEFINED> instruction: 0x00014eb8
   13270:	andeq	r6, r2, r5, lsr r6
   13274:	andeq	r7, r2, r0, lsr #9
   13278:	strdeq	r6, [r2], -sl
   1327c:	andeq	r4, r1, r4, ror #2
   13280:	andeq	r4, r1, r0, asr #29
   13284:	mov	r0, r1
   13288:	b	11558 <XtPopdown@plt>
   1328c:	push	{r4, r5, r6, r7, r8, lr}
   13290:	sub	sp, sp, #64	; 0x40
   13294:	ldr	r5, [pc, #464]	; 1346c <__snprintf_chk@plt+0x1d34>
   13298:	ldr	r7, [pc, #464]	; 13470 <__snprintf_chk@plt+0x1d38>
   1329c:	ldr	r4, [pc, #464]	; 13474 <__snprintf_chk@plt+0x1d3c>
   132a0:	ldr	r1, [r5, #172]	; 0xac
   132a4:	ldr	r2, [r7]
   132a8:	str	r1, [sp, #32]
   132ac:	str	r2, [sp, #60]	; 0x3c
   132b0:	ldr	r1, [r4, #8]
   132b4:	ldr	r2, [r4, #36]	; 0x24
   132b8:	strh	r1, [sp, #12]
   132bc:	strh	r2, [sp, #14]
   132c0:	ldr	r1, [r4, #64]	; 0x40
   132c4:	ldr	r2, [r4, #92]	; 0x5c
   132c8:	strh	r1, [sp, #16]
   132cc:	strh	r2, [sp, #18]
   132d0:	ldr	r1, [r4, #120]	; 0x78
   132d4:	ldr	r2, [r4, #148]	; 0x94
   132d8:	ldr	r3, [r5, #176]	; 0xb0
   132dc:	strh	r1, [sp, #22]
   132e0:	strh	r2, [sp, #24]
   132e4:	ldr	r1, [r4, #176]	; 0xb0
   132e8:	ldr	r2, [r4, #204]	; 0xcc
   132ec:	cmp	r3, #0
   132f0:	mov	r6, r0
   132f4:	strh	r1, [sp, #26]
   132f8:	strh	r2, [sp, #28]
   132fc:	streq	r3, [sp, #36]	; 0x24
   13300:	bne	13364 <__snprintf_chk@plt+0x1c2c>
   13304:	mov	r4, #0
   13308:	mov	r0, r6
   1330c:	str	r4, [r5, #180]	; 0xb4
   13310:	bl	1163c <XtDisplay@plt>
   13314:	mov	r8, r0
   13318:	mov	r0, r6
   1331c:	bl	1163c <XtDisplay@plt>
   13320:	add	r2, sp, #12
   13324:	ldr	r1, [r0, #132]	; 0x84
   13328:	mov	r0, r8
   1332c:	bl	11678 <XF86VidModeModModeLine@plt>
   13330:	mov	r0, r6
   13334:	bl	1163c <XtDisplay@plt>
   13338:	mov	r1, r4
   1333c:	bl	11648 <XSync@plt>
   13340:	ldr	r3, [r5, #180]	; 0xb4
   13344:	cmp	r3, r4
   13348:	bne	13448 <__snprintf_chk@plt+0x1d10>
   1334c:	ldr	r2, [sp, #60]	; 0x3c
   13350:	ldr	r3, [r7]
   13354:	cmp	r2, r3
   13358:	bne	13468 <__snprintf_chk@plt+0x1d30>
   1335c:	add	sp, sp, #64	; 0x40
   13360:	pop	{r4, r5, r6, r7, r8, pc}
   13364:	mov	r0, #4
   13368:	add	lr, sp, #44	; 0x2c
   1336c:	mov	ip, #14
   13370:	add	r2, sp, #3
   13374:	mov	r3, #0
   13378:	ldr	r1, [pc, #248]	; 13478 <__snprintf_chk@plt+0x1d40>
   1337c:	str	r0, [sp, #36]	; 0x24
   13380:	ldr	r0, [r4, #272]	; 0x110
   13384:	str	lr, [sp, #40]	; 0x28
   13388:	str	ip, [sp, #44]	; 0x2c
   1338c:	bl	11624 <XtVaGetValues@plt>
   13390:	ldrb	r3, [sp, #3]
   13394:	ldr	r1, [sp, #40]	; 0x28
   13398:	add	r2, sp, #8
   1339c:	adds	r3, r3, #0
   133a0:	movne	r3, #1
   133a4:	str	r3, [r4, #260]	; 0x104
   133a8:	str	r3, [r1, #4]
   133ac:	mov	r3, #0
   133b0:	ldr	r0, [r4, #300]	; 0x12c
   133b4:	ldr	r1, [pc, #192]	; 1347c <__snprintf_chk@plt+0x1d44>
   133b8:	bl	11624 <XtVaGetValues@plt>
   133bc:	add	r2, sp, #4
   133c0:	ldr	r1, [pc, #184]	; 13480 <__snprintf_chk@plt+0x1d48>
   133c4:	ldr	r0, [sp, #8]
   133c8:	bl	11600 <__isoc99_sscanf@plt>
   133cc:	ldr	r0, [sp, #40]	; 0x28
   133d0:	ldr	r1, [sp, #4]
   133d4:	mov	r3, #0
   133d8:	str	r1, [r4, #288]	; 0x120
   133dc:	add	r2, sp, #8
   133e0:	str	r1, [r0, #8]
   133e4:	ldr	r1, [pc, #144]	; 1347c <__snprintf_chk@plt+0x1d44>
   133e8:	ldr	r0, [r4, #328]	; 0x148
   133ec:	bl	11624 <XtVaGetValues@plt>
   133f0:	add	r2, sp, #4
   133f4:	ldr	r1, [pc, #132]	; 13480 <__snprintf_chk@plt+0x1d48>
   133f8:	ldr	r0, [sp, #8]
   133fc:	bl	11600 <__isoc99_sscanf@plt>
   13400:	ldr	r0, [sp, #40]	; 0x28
   13404:	ldr	ip, [sp, #4]
   13408:	add	r2, sp, #3
   1340c:	str	ip, [r4, #316]	; 0x13c
   13410:	ldr	r1, [r0, #8]
   13414:	mov	r3, #0
   13418:	orr	r1, r1, ip, lsl #4
   1341c:	str	r1, [r0, #8]
   13420:	ldr	r1, [pc, #80]	; 13478 <__snprintf_chk@plt+0x1d40>
   13424:	ldr	r0, [r4, #356]	; 0x164
   13428:	bl	11624 <XtVaGetValues@plt>
   1342c:	ldrb	r3, [sp, #3]
   13430:	ldr	r2, [sp, #40]	; 0x28
   13434:	adds	r3, r3, #0
   13438:	movne	r3, #1
   1343c:	str	r3, [r4, #344]	; 0x158
   13440:	str	r3, [r2, #12]
   13444:	b	13304 <__snprintf_chk@plt+0x1bcc>
   13448:	mov	r0, r6
   1344c:	bl	1163c <XtDisplay@plt>
   13450:	mov	r1, #80	; 0x50
   13454:	bl	11420 <XBell@plt>
   13458:	ldr	r0, [r5, #184]	; 0xb8
   1345c:	mov	r1, #2
   13460:	bl	11570 <XtPopup@plt>
   13464:	b	1334c <__snprintf_chk@plt+0x1c14>
   13468:	bl	114bc <__stack_chk_fail@plt>
   1346c:	ldrdeq	r7, [r2], -r0
   13470:	andeq	r5, r2, r8, ror pc
   13474:	andeq	r7, r2, ip, lsr #2
   13478:	andeq	r4, r1, r0, ror #28
   1347c:	andeq	r6, r2, r5, ror #14
   13480:	andeq	r4, r1, r8, ror #28
   13484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13488:	sub	sp, sp, #28
   1348c:	ldr	r6, [pc, #644]	; 13718 <__snprintf_chk@plt+0x1fe0>
   13490:	mov	r3, #0
   13494:	mov	r5, r1
   13498:	ldr	ip, [r6]
   1349c:	ldr	r1, [pc, #632]	; 1371c <__snprintf_chk@plt+0x1fe4>
   134a0:	mov	sl, r2
   134a4:	add	r2, sp, #12
   134a8:	str	ip, [sp, #20]
   134ac:	mov	r9, r0
   134b0:	bl	11624 <XtVaGetValues@plt>
   134b4:	ldr	r0, [sp, #12]
   134b8:	bl	115ac <strlen@plt>
   134bc:	subs	r4, r0, #0
   134c0:	beq	1363c <__snprintf_chk@plt+0x1f04>
   134c4:	cmp	r4, #1
   134c8:	bne	13508 <__snprintf_chk@plt+0x1dd0>
   134cc:	ldr	r1, [pc, #588]	; 13720 <__snprintf_chk@plt+0x1fe8>
   134d0:	mov	r3, #0
   134d4:	add	r2, sp, #11
   134d8:	ldr	r0, [r1, #188]	; 0xbc
   134dc:	ldr	r1, [pc, #576]	; 13724 <__snprintf_chk@plt+0x1fec>
   134e0:	bl	11624 <XtVaGetValues@plt>
   134e4:	ldrb	r3, [sp, #11]
   134e8:	cmp	r3, #0
   134ec:	bne	13688 <__snprintf_chk@plt+0x1f50>
   134f0:	ldr	r2, [sp, #20]
   134f4:	ldr	r3, [r6]
   134f8:	cmp	r2, r3
   134fc:	bne	13714 <__snprintf_chk@plt+0x1fdc>
   13500:	add	sp, sp, #28
   13504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13508:	lsl	r7, r5, #3
   1350c:	sub	r3, r7, r5
   13510:	ldr	r8, [pc, #528]	; 13728 <__snprintf_chk@plt+0x1ff0>
   13514:	add	r3, r8, r3, lsl #2
   13518:	ldr	r0, [r3, #20]
   1351c:	bl	11714 <XawTextGetInsertionPoint@plt>
   13520:	ldr	r3, [sp, #12]
   13524:	cmp	r0, #0
   13528:	ldrble	r2, [r3]
   1352c:	ldrbgt	r2, [r3, #1]
   13530:	strble	r2, [sp, #16]
   13534:	strbgt	r2, [sp, #16]
   13538:	ldrble	fp, [r3, #1]
   1353c:	ldrbgt	fp, [r3]
   13540:	cmp	r2, #43	; 0x2b
   13544:	beq	136ac <__snprintf_chk@plt+0x1f74>
   13548:	cmp	fp, #48	; 0x30
   1354c:	sub	r3, r2, #45	; 0x2d
   13550:	clz	r3, r3
   13554:	lsr	r3, r3, #5
   13558:	movls	r3, #0
   1355c:	cmp	r3, #0
   13560:	subne	r4, fp, #1
   13564:	uxtbne	r2, r4
   13568:	strbne	r2, [sp, #16]
   1356c:	str	r2, [sp, #4]
   13570:	bl	1157c <__ctype_b_loc@plt>
   13574:	ldr	r2, [sp, #4]
   13578:	lsl	r1, r2, #1
   1357c:	mov	r3, r0
   13580:	ldr	r0, [r0]
   13584:	str	r3, [sp, #4]
   13588:	ldrh	r4, [r0, r1]
   1358c:	lsr	r4, r4, #11
   13590:	eor	r4, r4, #1
   13594:	and	r4, r4, #1
   13598:	cmp	r2, #55	; 0x37
   1359c:	orrhi	r4, r4, #1
   135a0:	cmp	r4, #0
   135a4:	beq	136c0 <__snprintf_chk@plt+0x1f88>
   135a8:	mov	r0, r9
   135ac:	bl	116c0 <XtParent@plt>
   135b0:	bl	1163c <XtDisplay@plt>
   135b4:	mov	r1, #100	; 0x64
   135b8:	bl	11420 <XBell@plt>
   135bc:	ldr	r3, [sp, #4]
   135c0:	strb	fp, [sp, #16]
   135c4:	ldr	r2, [r3]
   135c8:	lsl	r3, fp, #1
   135cc:	ldrh	r3, [r2, r3]
   135d0:	lsr	r3, r3, #11
   135d4:	eor	r3, r3, #1
   135d8:	cmp	fp, #55	; 0x37
   135dc:	movls	fp, r3
   135e0:	orrhi	fp, r3, #1
   135e4:	tst	fp, #1
   135e8:	movne	r3, #48	; 0x30
   135ec:	strbne	r3, [sp, #16]
   135f0:	sub	r5, r7, r5
   135f4:	mov	r4, #0
   135f8:	add	r8, r8, r5, lsl #2
   135fc:	mov	r3, r4
   13600:	add	r2, sp, #16
   13604:	ldr	r0, [r8, #20]
   13608:	ldr	r1, [pc, #268]	; 1371c <__snprintf_chk@plt+0x1fe4>
   1360c:	strb	r4, [sp, #17]
   13610:	bl	1148c <XtVaSetValues@plt>
   13614:	ldr	r0, [r8, #20]
   13618:	mov	r1, #1
   1361c:	bl	11498 <XawTextSetInsertionPoint@plt>
   13620:	ldr	r1, [pc, #248]	; 13720 <__snprintf_chk@plt+0x1fe8>
   13624:	mov	r3, r4
   13628:	add	r2, sp, #11
   1362c:	ldr	r0, [r1, #188]	; 0xbc
   13630:	ldr	r1, [pc, #236]	; 13724 <__snprintf_chk@plt+0x1fec>
   13634:	bl	11624 <XtVaGetValues@plt>
   13638:	b	134f0 <__snprintf_chk@plt+0x1db8>
   1363c:	mov	r0, r9
   13640:	bl	116c0 <XtParent@plt>
   13644:	bl	1163c <XtDisplay@plt>
   13648:	mov	r1, #100	; 0x64
   1364c:	bl	11420 <XBell@plt>
   13650:	rsb	r5, r5, r5, lsl #3
   13654:	ldr	r2, [pc, #204]	; 13728 <__snprintf_chk@plt+0x1ff0>
   13658:	mov	ip, #48	; 0x30
   1365c:	add	r5, r2, r5, lsl #2
   13660:	mov	r3, r4
   13664:	ldr	r0, [r5, #20]
   13668:	add	r2, sp, #16
   1366c:	ldr	r1, [pc, #168]	; 1371c <__snprintf_chk@plt+0x1fe4>
   13670:	strh	ip, [sp, #16]
   13674:	bl	1148c <XtVaSetValues@plt>
   13678:	ldr	r0, [r5, #20]
   1367c:	mov	r1, #1
   13680:	bl	11498 <XawTextSetInsertionPoint@plt>
   13684:	b	134f0 <__snprintf_chk@plt+0x1db8>
   13688:	ldr	r8, [pc, #152]	; 13728 <__snprintf_chk@plt+0x1ff0>
   1368c:	lsl	r7, r5, #3
   13690:	sub	r7, r7, r5
   13694:	mov	r2, sl
   13698:	add	r8, r8, r7, lsl #2
   1369c:	mov	r1, r5
   136a0:	ldr	r0, [r8, #20]
   136a4:	bl	1328c <__snprintf_chk@plt+0x1b54>
   136a8:	b	134f0 <__snprintf_chk@plt+0x1db8>
   136ac:	cmp	fp, #54	; 0x36
   136b0:	addls	r4, fp, #1
   136b4:	uxtbls	r2, r4
   136b8:	strbls	r2, [sp, #16]
   136bc:	b	1356c <__snprintf_chk@plt+0x1e34>
   136c0:	sub	r9, r7, r5
   136c4:	mov	r3, r4
   136c8:	add	r9, r8, r9, lsl #2
   136cc:	add	r2, sp, #16
   136d0:	ldr	r0, [r9, #20]
   136d4:	ldr	r1, [pc, #64]	; 1371c <__snprintf_chk@plt+0x1fe4>
   136d8:	strb	r4, [sp, #17]
   136dc:	bl	1148c <XtVaSetValues@plt>
   136e0:	ldr	r0, [r9, #20]
   136e4:	mov	r1, #1
   136e8:	bl	11498 <XawTextSetInsertionPoint@plt>
   136ec:	ldr	r1, [pc, #44]	; 13720 <__snprintf_chk@plt+0x1fe8>
   136f0:	mov	r3, r4
   136f4:	add	r2, sp, #11
   136f8:	ldr	r0, [r1, #188]	; 0xbc
   136fc:	ldr	r1, [pc, #32]	; 13724 <__snprintf_chk@plt+0x1fec>
   13700:	bl	11624 <XtVaGetValues@plt>
   13704:	ldrb	r3, [sp, #11]
   13708:	cmp	r3, #0
   1370c:	beq	134f0 <__snprintf_chk@plt+0x1db8>
   13710:	b	13690 <__snprintf_chk@plt+0x1f58>
   13714:	bl	114bc <__stack_chk_fail@plt>
   13718:	andeq	r5, r2, r8, ror pc
   1371c:	andeq	r6, r2, r5, ror #14
   13720:	ldrdeq	r7, [r2], -r0
   13724:	andeq	r4, r1, r0, ror #28
   13728:	andeq	r7, r2, ip, lsr #2
   1372c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13730:	sub	sp, sp, #20
   13734:	ldr	r7, [pc, #316]	; 13878 <__snprintf_chk@plt+0x2140>
   13738:	subs	r6, r1, #0
   1373c:	mov	r9, r0
   13740:	ldr	r3, [r7]
   13744:	mov	r8, r2
   13748:	str	r3, [sp, #12]
   1374c:	blt	13824 <__snprintf_chk@plt+0x20ec>
   13750:	ldr	r4, [pc, #292]	; 1387c <__snprintf_chk@plt+0x2144>
   13754:	rsb	r1, r6, r6, lsl #3
   13758:	mov	r3, #0
   1375c:	add	r1, r4, r1, lsl #2
   13760:	add	r2, sp, #4
   13764:	ldr	r0, [r1, #20]
   13768:	ldr	r1, [pc, #272]	; 13880 <__snprintf_chk@plt+0x2148>
   1376c:	bl	11624 <XtVaGetValues@plt>
   13770:	cmp	r6, #0
   13774:	mov	r5, r6
   13778:	beq	13848 <__snprintf_chk@plt+0x2110>
   1377c:	ldr	r2, [sp, #4]
   13780:	ldrb	r3, [r2]
   13784:	add	r3, r3, #1
   13788:	strb	r3, [r2]
   1378c:	ldr	r3, [sp, #4]
   13790:	ldrb	ip, [r3]
   13794:	sub	r3, ip, #48	; 0x30
   13798:	cmp	r3, #7
   1379c:	bhi	1385c <__snprintf_chk@plt+0x2124>
   137a0:	rsb	r5, r5, r5, lsl #3
   137a4:	mov	r9, #0
   137a8:	add	r4, r4, r5, lsl #2
   137ac:	mov	r3, r9
   137b0:	add	r2, sp, #8
   137b4:	ldr	r0, [r4, #20]
   137b8:	ldr	r1, [pc, #192]	; 13880 <__snprintf_chk@plt+0x2148>
   137bc:	strb	ip, [sp, #8]
   137c0:	strb	r9, [sp, #9]
   137c4:	bl	1148c <XtVaSetValues@plt>
   137c8:	ldr	r0, [r4, #20]
   137cc:	mov	r1, #1
   137d0:	bl	11498 <XawTextSetInsertionPoint@plt>
   137d4:	ldr	r1, [pc, #168]	; 13884 <__snprintf_chk@plt+0x214c>
   137d8:	mov	r3, r9
   137dc:	add	r2, sp, #3
   137e0:	ldr	r0, [r1, #188]	; 0xbc
   137e4:	ldr	r1, [pc, #156]	; 13888 <__snprintf_chk@plt+0x2150>
   137e8:	bl	11624 <XtVaGetValues@plt>
   137ec:	ldrb	r3, [sp, #3]
   137f0:	cmp	r3, r9
   137f4:	bne	13810 <__snprintf_chk@plt+0x20d8>
   137f8:	ldr	r2, [sp, #12]
   137fc:	ldr	r3, [r7]
   13800:	cmp	r2, r3
   13804:	bne	13874 <__snprintf_chk@plt+0x213c>
   13808:	add	sp, sp, #20
   1380c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13810:	mov	r2, r8
   13814:	mov	r1, r6
   13818:	ldr	r0, [r4, #20]
   1381c:	bl	1328c <__snprintf_chk@plt+0x1b54>
   13820:	b	137f8 <__snprintf_chk@plt+0x20c0>
   13824:	rsb	r5, r6, #0
   13828:	ldr	r4, [pc, #76]	; 1387c <__snprintf_chk@plt+0x2144>
   1382c:	rsb	r1, r5, r5, lsl #3
   13830:	mov	r3, #0
   13834:	add	r1, r4, r1, lsl #2
   13838:	add	r2, sp, #4
   1383c:	ldr	r0, [r1, #20]
   13840:	ldr	r1, [pc, #56]	; 13880 <__snprintf_chk@plt+0x2148>
   13844:	bl	11624 <XtVaGetValues@plt>
   13848:	ldr	r2, [sp, #4]
   1384c:	ldrb	r3, [r2]
   13850:	sub	r3, r3, #1
   13854:	strb	r3, [r2]
   13858:	b	1378c <__snprintf_chk@plt+0x2054>
   1385c:	mov	r0, r9
   13860:	bl	116c0 <XtParent@plt>
   13864:	bl	1163c <XtDisplay@plt>
   13868:	mov	r1, #100	; 0x64
   1386c:	bl	11420 <XBell@plt>
   13870:	b	137f8 <__snprintf_chk@plt+0x20c0>
   13874:	bl	114bc <__stack_chk_fail@plt>
   13878:	andeq	r5, r2, r8, ror pc
   1387c:	andeq	r7, r2, ip, lsr #2
   13880:	andeq	r6, r2, r5, ror #14
   13884:	ldrdeq	r7, [r2], -r0
   13888:	andeq	r4, r1, r0, ror #28
   1388c:	push	{r4, r5, r6, r7, lr}
   13890:	sub	sp, sp, #12
   13894:	ldr	r4, [pc, #100]	; 13900 <__snprintf_chk@plt+0x21c8>
   13898:	ldr	r3, [pc, #100]	; 13904 <__snprintf_chk@plt+0x21cc>
   1389c:	mov	r5, r0
   138a0:	ldr	ip, [r4]
   138a4:	ldr	r0, [r3, #188]	; 0xbc
   138a8:	mov	r6, r1
   138ac:	mov	r3, #0
   138b0:	mov	r7, r2
   138b4:	ldr	r1, [pc, #76]	; 13908 <__snprintf_chk@plt+0x21d0>
   138b8:	add	r2, sp, #3
   138bc:	str	ip, [sp, #4]
   138c0:	bl	11624 <XtVaGetValues@plt>
   138c4:	ldrb	r3, [sp, #3]
   138c8:	cmp	r3, #0
   138cc:	bne	138e8 <__snprintf_chk@plt+0x21b0>
   138d0:	ldr	r2, [sp, #4]
   138d4:	ldr	r3, [r4]
   138d8:	cmp	r2, r3
   138dc:	bne	138fc <__snprintf_chk@plt+0x21c4>
   138e0:	add	sp, sp, #12
   138e4:	pop	{r4, r5, r6, r7, pc}
   138e8:	mov	r2, r7
   138ec:	mov	r1, r6
   138f0:	mov	r0, r5
   138f4:	bl	1328c <__snprintf_chk@plt+0x1b54>
   138f8:	b	138d0 <__snprintf_chk@plt+0x2198>
   138fc:	bl	114bc <__stack_chk_fail@plt>
   13900:	andeq	r5, r2, r8, ror pc
   13904:	ldrdeq	r7, [r2], -r0
   13908:	andeq	r4, r1, r0, ror #28
   1390c:	push	{r4, r5, r6, r7, r8, lr}
   13910:	mov	r4, r0
   13914:	ldr	r5, [pc, #116]	; 13990 <__snprintf_chk@plt+0x2258>
   13918:	mov	r7, r2
   1391c:	mov	r6, r1
   13920:	mov	r3, r5
   13924:	add	r2, r5, #512	; 0x200
   13928:	add	r0, r5, #448	; 0x1c0
   1392c:	ldr	r1, [r3, #8]
   13930:	add	r3, r3, #28
   13934:	cmp	r3, r0
   13938:	str	r1, [r2, #4]!
   1393c:	bne	1392c <__snprintf_chk@plt+0x21f4>
   13940:	ldr	r8, [pc, #76]	; 13994 <__snprintf_chk@plt+0x225c>
   13944:	mov	r1, #2
   13948:	ldr	r0, [r8, #192]	; 0xc0
   1394c:	bl	11570 <XtPopup@plt>
   13950:	mov	r0, r4
   13954:	bl	1163c <XtDisplay@plt>
   13958:	mov	r1, #0
   1395c:	bl	11648 <XSync@plt>
   13960:	mov	r0, r4
   13964:	bl	114f8 <XtWidgetToApplicationContext@plt>
   13968:	ldr	r1, [r5, #580]	; 0x244
   1396c:	mov	r3, r4
   13970:	ldr	r2, [pc, #32]	; 13998 <__snprintf_chk@plt+0x2260>
   13974:	bl	11474 <XtAppAddTimeOut@plt>
   13978:	mov	r2, r7
   1397c:	mov	r1, r6
   13980:	str	r0, [r8, #196]	; 0xc4
   13984:	mov	r0, r4
   13988:	pop	{r4, r5, r6, r7, r8, lr}
   1398c:	b	1328c <__snprintf_chk@plt+0x1b54>
   13990:	andeq	r7, r2, ip, lsr #2
   13994:	ldrdeq	r7, [r2], -r0
   13998:	andeq	r3, r1, r0, lsl sl
   1399c:	push	{r4, r5, r6, lr}
   139a0:	vpush	{d8}
   139a4:	ldr	r5, [pc, #96]	; 13a0c <__snprintf_chk@plt+0x22d4>
   139a8:	vldr	s16, [pc, #88]	; 13a08 <__snprintf_chk@plt+0x22d0>
   139ac:	mov	r4, r5
   139b0:	add	r6, r5, #252	; 0xfc
   139b4:	ldr	r3, [r4, #24]
   139b8:	vmov.f32	s1, s16
   139bc:	subs	r0, r3, #0
   139c0:	beq	139f4 <__snprintf_chk@plt+0x22bc>
   139c4:	ldr	r3, [r4, #4]
   139c8:	vldr	s15, [r4, #16]
   139cc:	ldr	r2, [r4, #8]
   139d0:	rsb	r3, r3, r3, lsl #3
   139d4:	add	r3, r5, r3, lsl #2
   139d8:	vcvt.f32.s32	s0, s15
   139dc:	ldr	r3, [r3, #8]
   139e0:	sub	r2, r2, r3
   139e4:	vmov	s15, r2
   139e8:	vcvt.f32.s32	s15, s15
   139ec:	vdiv.f32	s0, s15, s0
   139f0:	bl	1145c <XawScrollbarSetThumb@plt>
   139f4:	add	r4, r4, #28
   139f8:	cmp	r4, r6
   139fc:	bne	139b4 <__snprintf_chk@plt+0x227c>
   13a00:	vpop	{d8}
   13a04:	pop	{r4, r5, r6, pc}
   13a08:	andeq	r0, r0, r0
   13a0c:	andeq	r7, r2, ip, lsr #2
   13a10:	ldr	r2, [pc, #88]	; 13a70 <__snprintf_chk@plt+0x2338>
   13a14:	push	{r4, r5, r6, lr}
   13a18:	sub	r4, r2, #448	; 0x1c0
   13a1c:	mov	r3, r4
   13a20:	mov	r5, r2
   13a24:	ldr	r1, [r2, #4]!
   13a28:	add	r3, r3, #28
   13a2c:	str	r1, [r3, #-20]	; 0xffffffec
   13a30:	cmp	r3, r5
   13a34:	bne	13a24 <__snprintf_chk@plt+0x22ec>
   13a38:	mov	r2, #0
   13a3c:	mov	r1, r2
   13a40:	bl	1328c <__snprintf_chk@plt+0x1b54>
   13a44:	ldr	r3, [pc, #40]	; 13a74 <__snprintf_chk@plt+0x233c>
   13a48:	ldr	r2, [r3, #4]!
   13a4c:	add	r4, r4, #28
   13a50:	str	r2, [r4, #-20]	; 0xffffffec
   13a54:	cmp	r4, r5
   13a58:	bne	13a48 <__snprintf_chk@plt+0x2310>
   13a5c:	bl	1399c <__snprintf_chk@plt+0x2264>
   13a60:	ldr	r3, [pc, #16]	; 13a78 <__snprintf_chk@plt+0x2340>
   13a64:	pop	{r4, r5, r6, lr}
   13a68:	ldr	r0, [r3, #192]	; 0xc0
   13a6c:	b	11558 <XtPopdown@plt>
   13a70:	andeq	r7, r2, ip, ror #5
   13a74:	andeq	r7, r2, ip, lsr #6
   13a78:	ldrdeq	r7, [r2], -r0
   13a7c:	ldr	r3, [pc, #28]	; 13aa0 <__snprintf_chk@plt+0x2368>
   13a80:	push	{r4, lr}
   13a84:	mov	r4, r0
   13a88:	ldr	r0, [r3, #196]	; 0xc4
   13a8c:	bl	11534 <XtRemoveTimeOut@plt>
   13a90:	mov	r0, r4
   13a94:	mov	r1, #0
   13a98:	pop	{r4, lr}
   13a9c:	b	13a10 <__snprintf_chk@plt+0x22d8>
   13aa0:	ldrdeq	r7, [r2], -r0
   13aa4:	push	{r4, lr}
   13aa8:	mov	r0, r1
   13aac:	mov	r4, r1
   13ab0:	bl	11558 <XtPopdown@plt>
   13ab4:	mov	r0, r4
   13ab8:	pop	{r4, lr}
   13abc:	b	116a8 <XtDestroyWidget@plt>
   13ac0:	push	{r4, r5, r6, r7, r8, lr}
   13ac4:	sub	sp, sp, #16
   13ac8:	mov	r4, r2
   13acc:	ldr	r7, [sp, #40]	; 0x28
   13ad0:	ldr	r6, [sp, #44]	; 0x2c
   13ad4:	ldr	r5, [sp, #48]	; 0x30
   13ad8:	str	r3, [sp]
   13adc:	mov	r2, r1
   13ae0:	mov	r8, r3
   13ae4:	str	r7, [sp, #4]
   13ae8:	mov	r3, r4
   13aec:	str	r6, [sp, #8]
   13af0:	str	r5, [sp, #12]
   13af4:	mov	r1, #0
   13af8:	bl	114a4 <XmuConvertStandardSelection@plt>
   13afc:	subs	r3, r0, #0
   13b00:	movne	r3, #1
   13b04:	bne	13b14 <__snprintf_chk@plt+0x23dc>
   13b08:	ldr	r2, [r4]
   13b0c:	cmp	r2, #31
   13b10:	beq	13b20 <__snprintf_chk@plt+0x23e8>
   13b14:	mov	r0, r3
   13b18:	add	sp, sp, #16
   13b1c:	pop	{r4, r5, r6, r7, r8, pc}
   13b20:	ldr	r3, [pc, #40]	; 13b50 <__snprintf_chk@plt+0x2418>
   13b24:	str	r2, [r8]
   13b28:	mov	r0, r3
   13b2c:	str	r3, [r7]
   13b30:	bl	115ac <strlen@plt>
   13b34:	mov	r2, #8
   13b38:	mov	r3, #1
   13b3c:	str	r0, [r6]
   13b40:	mov	r0, r3
   13b44:	str	r2, [r5]
   13b48:	add	sp, sp, #16
   13b4c:	pop	{r4, r5, r6, r7, r8, pc}
   13b50:	ldrdeq	r7, [r2], -r8
   13b54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b58:	sub	sp, sp, #56	; 0x38
   13b5c:	ldr	r6, [pc, #564]	; 13d98 <__snprintf_chk@plt+0x2660>
   13b60:	ldr	r7, [pc, #564]	; 13d9c <__snprintf_chk@plt+0x2664>
   13b64:	mov	r3, #0
   13b68:	ldr	ip, [r6]
   13b6c:	mov	r4, r0
   13b70:	add	r2, sp, #23
   13b74:	ldr	r0, [r7, #188]	; 0xbc
   13b78:	ldr	r1, [pc, #544]	; 13da0 <__snprintf_chk@plt+0x2668>
   13b7c:	str	ip, [sp, #52]	; 0x34
   13b80:	bl	11624 <XtVaGetValues@plt>
   13b84:	ldrb	r3, [sp, #23]
   13b88:	cmp	r3, #0
   13b8c:	bne	13ca4 <__snprintf_chk@plt+0x256c>
   13b90:	cmp	r4, #8
   13b94:	beq	13cc0 <__snprintf_chk@plt+0x2588>
   13b98:	lsl	r9, r4, #3
   13b9c:	sub	r5, r9, r4
   13ba0:	ldr	r8, [pc, #508]	; 13da4 <__snprintf_chk@plt+0x266c>
   13ba4:	sub	r3, r4, #13
   13ba8:	add	r5, r8, r5, lsl #2
   13bac:	cmp	r3, #2
   13bb0:	ldr	r2, [r5, #8]
   13bb4:	bls	13d2c <__snprintf_chk@plt+0x25f4>
   13bb8:	sub	r3, r4, #10
   13bbc:	cmp	r3, #1
   13bc0:	bls	13c30 <__snprintf_chk@plt+0x24f8>
   13bc4:	ldr	r1, [pc, #476]	; 13da8 <__snprintf_chk@plt+0x2670>
   13bc8:	mov	r3, #10
   13bcc:	add	sl, sp, #40	; 0x28
   13bd0:	stm	sp, {r1, r2}
   13bd4:	mov	r0, sl
   13bd8:	mov	r1, r3
   13bdc:	mov	r2, #1
   13be0:	bl	11738 <__snprintf_chk@plt>
   13be4:	mvn	r3, #0
   13be8:	cmp	r4, #12
   13bec:	cmpne	r4, #9
   13bf0:	str	r3, [r5, #12]
   13bf4:	bne	13d6c <__snprintf_chk@plt+0x2634>
   13bf8:	mov	r3, #0
   13bfc:	ldr	r2, [r5, #8]
   13c00:	ldr	r0, [r5, #20]
   13c04:	ldr	r1, [pc, #404]	; 13da0 <__snprintf_chk@plt+0x2668>
   13c08:	bl	1148c <XtVaSetValues@plt>
   13c0c:	ldrb	r3, [sp, #23]
   13c10:	cmp	r3, #0
   13c14:	bne	13c8c <__snprintf_chk@plt+0x2554>
   13c18:	ldr	r2, [sp, #52]	; 0x34
   13c1c:	ldr	r3, [r6]
   13c20:	cmp	r2, r3
   13c24:	bne	13d8c <__snprintf_chk@plt+0x2654>
   13c28:	add	sp, sp, #56	; 0x38
   13c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c30:	ldr	r1, [pc, #372]	; 13dac <__snprintf_chk@plt+0x2674>
   13c34:	mov	r3, #10
   13c38:	add	r4, sp, #40	; 0x28
   13c3c:	stm	sp, {r1, r2}
   13c40:	mov	r0, r4
   13c44:	mov	r1, r3
   13c48:	mov	r2, #1
   13c4c:	bl	11738 <__snprintf_chk@plt>
   13c50:	mov	r3, #0
   13c54:	mov	ip, #1
   13c58:	mvn	lr, #0
   13c5c:	mov	r1, r3
   13c60:	str	r3, [sp, #24]
   13c64:	mov	r2, ip
   13c68:	add	r3, sp, #24
   13c6c:	ldr	r0, [r5, #20]
   13c70:	str	lr, [r5, #12]
   13c74:	str	r4, [sp, #32]
   13c78:	str	ip, [sp, #28]
   13c7c:	bl	115b8 <XawTextReplace@plt>
   13c80:	ldrb	r3, [sp, #23]
   13c84:	cmp	r3, #0
   13c88:	beq	13c18 <__snprintf_chk@plt+0x24e0>
   13c8c:	ldr	r0, [r7, #188]	; 0xbc
   13c90:	mov	r3, #0
   13c94:	mov	r2, #1
   13c98:	ldr	r1, [pc, #256]	; 13da0 <__snprintf_chk@plt+0x2668>
   13c9c:	bl	1148c <XtVaSetValues@plt>
   13ca0:	b	13c18 <__snprintf_chk@plt+0x24e0>
   13ca4:	mov	r3, #0
   13ca8:	mov	r2, r3
   13cac:	ldr	r1, [pc, #236]	; 13da0 <__snprintf_chk@plt+0x2668>
   13cb0:	ldr	r0, [r7, #188]	; 0xbc
   13cb4:	bl	1148c <XtVaSetValues@plt>
   13cb8:	cmp	r4, #8
   13cbc:	bne	13b98 <__snprintf_chk@plt+0x2460>
   13cc0:	ldr	r4, [pc, #220]	; 13da4 <__snprintf_chk@plt+0x266c>
   13cc4:	ldr	r2, [pc, #228]	; 13db0 <__snprintf_chk@plt+0x2678>
   13cc8:	add	r5, sp, #40	; 0x28
   13ccc:	ldr	r1, [r4, #232]	; 0xe8
   13cd0:	mov	r3, #10
   13cd4:	str	r1, [sp, #4]
   13cd8:	str	r2, [sp]
   13cdc:	mov	r1, r3
   13ce0:	mov	r0, r5
   13ce4:	mov	r2, #1
   13ce8:	bl	11738 <__snprintf_chk@plt>
   13cec:	ldr	r3, [pc, #192]	; 13db4 <__snprintf_chk@plt+0x267c>
   13cf0:	mov	lr, #0
   13cf4:	mov	ip, #4
   13cf8:	ldr	r8, [r3]
   13cfc:	mvn	r3, #0
   13d00:	str	r3, [r4, #236]	; 0xec
   13d04:	ldr	r0, [r4, #244]	; 0xf4
   13d08:	mov	r1, lr
   13d0c:	mov	r2, ip
   13d10:	add	r3, sp, #24
   13d14:	str	r5, [sp, #32]
   13d18:	str	r8, [sp, #36]	; 0x24
   13d1c:	str	lr, [sp, #24]
   13d20:	str	ip, [sp, #28]
   13d24:	bl	115b8 <XawTextReplace@plt>
   13d28:	b	13c0c <__snprintf_chk@plt+0x24d4>
   13d2c:	vmov	s15, r2
   13d30:	vldr	d5, [pc, #88]	; 13d90 <__snprintf_chk@plt+0x2658>
   13d34:	ldr	r2, [pc, #124]	; 13db8 <__snprintf_chk@plt+0x2680>
   13d38:	mov	r3, #10
   13d3c:	vcvt.f32.s32	s14, s15
   13d40:	add	sl, sp, #40	; 0x28
   13d44:	str	r2, [sp]
   13d48:	mov	r1, r3
   13d4c:	mov	r0, sl
   13d50:	mov	r2, #1
   13d54:	vcvt.f64.f32	d7, s14
   13d58:	vdiv.f64	d6, d7, d5
   13d5c:	vstr	d6, [sp, #8]
   13d60:	bl	11738 <__snprintf_chk@plt>
   13d64:	mvn	r3, #0
   13d68:	str	r3, [r5, #12]
   13d6c:	sub	r4, r9, r4
   13d70:	mov	r2, sl
   13d74:	add	r8, r8, r4, lsl #2
   13d78:	mov	r3, #0
   13d7c:	ldr	r0, [r8, #20]
   13d80:	ldr	r1, [pc, #52]	; 13dbc <__snprintf_chk@plt+0x2684>
   13d84:	bl	1148c <XtVaSetValues@plt>
   13d88:	b	13c0c <__snprintf_chk@plt+0x24d4>
   13d8c:	bl	114bc <__stack_chk_fail@plt>
   13d90:	andeq	r0, r0, r0
   13d94:	addmi	r4, pc, r0
   13d98:	andeq	r5, r2, r8, ror pc
   13d9c:	ldrdeq	r7, [r2], -r0
   13da0:	andeq	r4, r1, r0, ror #28
   13da4:	andeq	r7, r2, ip, lsr #2
   13da8:	andeq	r4, r1, r0, asr #29
   13dac:	andeq	r4, r1, ip, asr #29
   13db0:	andeq	r4, r1, r4, asr #29
   13db4:	andeq	r7, r2, ip, lsr #9
   13db8:			; <UNDEFINED> instruction: 0x00014eb8
   13dbc:	andeq	r6, r2, r5, lsr r6
   13dc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13dc4:	mov	r8, r0
   13dc8:	ldr	r7, [pc, #160]	; 13e70 <__snprintf_chk@plt+0x2738>
   13dcc:	ldr	r6, [pc, #160]	; 13e74 <__snprintf_chk@plt+0x273c>
   13dd0:	sub	sp, sp, #8
   13dd4:	ldr	r3, [r7]
   13dd8:	mov	r9, r1
   13ddc:	mov	sl, r2
   13de0:	sub	r4, r6, #448	; 0x1c0
   13de4:	mov	r5, #0
   13de8:	str	r3, [sp, #4]
   13dec:	ldr	r2, [r4, #20]
   13df0:	ldr	r3, [r6, #4]!
   13df4:	cmp	r2, #0
   13df8:	str	r3, [r4, #8]
   13dfc:	beq	13e08 <__snprintf_chk@plt+0x26d0>
   13e00:	mov	r0, r5
   13e04:	bl	13b54 <__snprintf_chk@plt+0x241c>
   13e08:	add	r5, r5, #1
   13e0c:	cmp	r5, #16
   13e10:	add	r4, r4, #28
   13e14:	bne	13dec <__snprintf_chk@plt+0x26b4>
   13e18:	bl	1399c <__snprintf_chk@plt+0x2264>
   13e1c:	ldr	r1, [pc, #84]	; 13e78 <__snprintf_chk@plt+0x2740>
   13e20:	mov	r3, #0
   13e24:	add	r2, sp, #3
   13e28:	ldr	r0, [r1, #188]	; 0xbc
   13e2c:	ldr	r1, [pc, #72]	; 13e7c <__snprintf_chk@plt+0x2744>
   13e30:	bl	11624 <XtVaGetValues@plt>
   13e34:	ldrb	r3, [sp, #3]
   13e38:	cmp	r3, #0
   13e3c:	bne	13e58 <__snprintf_chk@plt+0x2720>
   13e40:	ldr	r2, [sp, #4]
   13e44:	ldr	r3, [r7]
   13e48:	cmp	r2, r3
   13e4c:	bne	13e6c <__snprintf_chk@plt+0x2734>
   13e50:	add	sp, sp, #8
   13e54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e58:	mov	r2, sl
   13e5c:	mov	r1, r9
   13e60:	mov	r0, r8
   13e64:	bl	1328c <__snprintf_chk@plt+0x1b54>
   13e68:	b	13e40 <__snprintf_chk@plt+0x2708>
   13e6c:	bl	114bc <__stack_chk_fail@plt>
   13e70:	andeq	r5, r2, r8, ror pc
   13e74:	andeq	r7, r2, ip, ror #5
   13e78:	ldrdeq	r7, [r2], -r0
   13e7c:	andeq	r4, r1, r0, ror #28
   13e80:	push	{r4, r5, r6, lr}
   13e84:	ldr	r4, [pc, #164]	; 13f30 <__snprintf_chk@plt+0x27f8>
   13e88:	ldr	r1, [r4, #92]	; 0x5c
   13e8c:	cmp	r1, #0
   13e90:	popeq	{r4, r5, r6, pc}
   13e94:	ldr	r6, [r4, #204]	; 0xcc
   13e98:	cmp	r6, #0
   13e9c:	popeq	{r4, r5, r6, pc}
   13ea0:	ldr	r3, [r4, #372]	; 0x174
   13ea4:	mov	r5, r0
   13ea8:	rsb	r0, r3, r3, lsl #5
   13eac:	add	r0, r3, r0, lsl #2
   13eb0:	lsl	r0, r0, #3
   13eb4:	bl	14928 <__snprintf_chk@plt+0x31f0>
   13eb8:	mov	r1, r6
   13ebc:	rsb	r3, r0, r0, lsl #5
   13ec0:	str	r0, [r4, #400]	; 0x190
   13ec4:	add	r0, r0, r3, lsl #2
   13ec8:	lsl	r0, r0, #3
   13ecc:	bl	14928 <__snprintf_chk@plt+0x31f0>
   13ed0:	ldr	r3, [pc, #92]	; 13f34 <__snprintf_chk@plt+0x27fc>
   13ed4:	ldr	r3, [r3, #172]	; 0xac
   13ed8:	tst	r3, #16
   13edc:	str	r0, [r4, #428]	; 0x1ac
   13ee0:	lslne	r0, r0, #1
   13ee4:	strne	r0, [r4, #428]	; 0x1ac
   13ee8:	bne	13efc <__snprintf_chk@plt+0x27c4>
   13eec:	tst	r3, #32
   13ef0:	addne	r0, r0, r0, lsr #31
   13ef4:	asrne	r0, r0, #1
   13ef8:	strne	r0, [r4, #428]	; 0x1ac
   13efc:	cmp	r5, #0
   13f00:	popeq	{r4, r5, r6, pc}
   13f04:	ldr	r3, [r4, #412]	; 0x19c
   13f08:	cmp	r3, #0
   13f0c:	beq	13f18 <__snprintf_chk@plt+0x27e0>
   13f10:	mov	r0, #14
   13f14:	bl	13b54 <__snprintf_chk@plt+0x241c>
   13f18:	ldr	r3, [r4, #440]	; 0x1b8
   13f1c:	cmp	r3, #0
   13f20:	popeq	{r4, r5, r6, pc}
   13f24:	mov	r0, #15
   13f28:	pop	{r4, r5, r6, lr}
   13f2c:	b	13b54 <__snprintf_chk@plt+0x241c>
   13f30:	andeq	r7, r2, ip, lsr #2
   13f34:	ldrdeq	r7, [r2], -r0
   13f38:	push	{r4, r5, r6, lr}
   13f3c:	sub	sp, sp, #40	; 0x28
   13f40:	ldr	r6, [pc, #276]	; 1405c <__snprintf_chk@plt+0x2924>
   13f44:	ldr	r5, [pc, #276]	; 14060 <__snprintf_chk@plt+0x2928>
   13f48:	add	r3, sp, #4
   13f4c:	ldr	ip, [r6]
   13f50:	add	r2, r5, #168	; 0xa8
   13f54:	str	ip, [sp, #36]	; 0x24
   13f58:	bl	1151c <XF86VidModeGetModeLine@plt>
   13f5c:	cmp	r0, #0
   13f60:	bne	13f7c <__snprintf_chk@plt+0x2844>
   13f64:	ldr	r2, [sp, #36]	; 0x24
   13f68:	ldr	r3, [r6]
   13f6c:	cmp	r2, r3
   13f70:	bne	14058 <__snprintf_chk@plt+0x2920>
   13f74:	add	sp, sp, #40	; 0x28
   13f78:	pop	{r4, r5, r6, pc}
   13f7c:	ldr	r2, [sp, #24]
   13f80:	ldr	r4, [pc, #220]	; 14064 <__snprintf_chk@plt+0x292c>
   13f84:	ldrh	r0, [sp, #4]
   13f88:	lsl	r3, r2, #23
   13f8c:	ldrh	r1, [sp, #8]
   13f90:	lsr	r3, r3, #23
   13f94:	str	r2, [r5, #172]	; 0xac
   13f98:	ldrh	r2, [sp, #10]
   13f9c:	str	r3, [r4, #232]	; 0xe8
   13fa0:	ldrh	r3, [sp, #16]
   13fa4:	str	r0, [r4, #8]
   13fa8:	ldrh	r0, [sp, #14]
   13fac:	ldrh	ip, [sp, #6]
   13fb0:	str	r1, [r4, #64]	; 0x40
   13fb4:	str	r2, [r4, #92]	; 0x5c
   13fb8:	ldrh	r1, [sp, #18]
   13fbc:	ldrh	r2, [sp, #20]
   13fc0:	str	r3, [r4, #148]	; 0x94
   13fc4:	ldr	r3, [r5, #168]	; 0xa8
   13fc8:	str	r0, [r4, #120]	; 0x78
   13fcc:	mov	r0, #0
   13fd0:	str	r3, [r4, #372]	; 0x174
   13fd4:	str	ip, [r4, #36]	; 0x24
   13fd8:	str	r1, [r4, #176]	; 0xb0
   13fdc:	str	r2, [r4, #204]	; 0xcc
   13fe0:	bl	13e80 <__snprintf_chk@plt+0x2748>
   13fe4:	ldr	r3, [sp, #28]
   13fe8:	cmp	r3, #0
   13fec:	beq	14030 <__snprintf_chk@plt+0x28f8>
   13ff0:	ldr	r3, [sp, #32]
   13ff4:	cmp	r3, #0
   13ff8:	beq	14030 <__snprintf_chk@plt+0x28f8>
   13ffc:	ldr	r2, [r3, #4]
   14000:	mov	r1, #1
   14004:	str	r2, [r4, #260]	; 0x104
   14008:	ldr	r2, [r3, #8]
   1400c:	str	r1, [r5, #176]	; 0xb0
   14010:	and	r2, r2, #7
   14014:	str	r2, [r4, #288]	; 0x120
   14018:	ldr	r2, [r3, #8]
   1401c:	asr	r2, r2, #4
   14020:	and	r2, r2, #7
   14024:	str	r2, [r4, #316]	; 0x13c
   14028:	ldr	r3, [r3, #12]
   1402c:	str	r3, [r4, #344]	; 0x158
   14030:	ldr	r3, [pc, #44]	; 14064 <__snprintf_chk@plt+0x292c>
   14034:	add	r2, r3, #448	; 0x1c0
   14038:	mov	r0, r2
   1403c:	ldr	r1, [r3, #8]
   14040:	add	r3, r3, #28
   14044:	cmp	r3, r0
   14048:	str	r1, [r2, #4]!
   1404c:	bne	1403c <__snprintf_chk@plt+0x2904>
   14050:	mov	r0, #1
   14054:	b	13f64 <__snprintf_chk@plt+0x282c>
   14058:	bl	114bc <__stack_chk_fail@plt>
   1405c:	andeq	r5, r2, r8, ror pc
   14060:	ldrdeq	r7, [r2], -r0
   14064:	andeq	r7, r2, ip, lsr #2
   14068:	push	{r4, r5, r6, lr}
   1406c:	mov	r4, r0
   14070:	bl	1163c <XtDisplay@plt>
   14074:	ldr	r5, [pc, #68]	; 140c0 <__snprintf_chk@plt+0x2988>
   14078:	mov	r6, r0
   1407c:	mov	r0, r4
   14080:	bl	1163c <XtDisplay@plt>
   14084:	mov	r4, #0
   14088:	ldr	r1, [r0, #132]	; 0x84
   1408c:	mov	r0, r6
   14090:	bl	13f38 <__snprintf_chk@plt+0x2800>
   14094:	bl	1399c <__snprintf_chk@plt+0x2264>
   14098:	ldr	r3, [r5, #20]
   1409c:	mov	r0, r4
   140a0:	cmp	r3, #0
   140a4:	add	r4, r4, #1
   140a8:	beq	140b0 <__snprintf_chk@plt+0x2978>
   140ac:	bl	13b54 <__snprintf_chk@plt+0x241c>
   140b0:	cmp	r4, #16
   140b4:	add	r5, r5, #28
   140b8:	bne	14098 <__snprintf_chk@plt+0x2960>
   140bc:	pop	{r4, r5, r6, pc}
   140c0:	andeq	r7, r2, ip, lsr #2
   140c4:	push	{r4, r5, r6, lr}
   140c8:	mov	r4, r0
   140cc:	mov	r6, r1
   140d0:	bl	1163c <XtDisplay@plt>
   140d4:	mov	r5, r0
   140d8:	mov	r0, r4
   140dc:	bl	1163c <XtDisplay@plt>
   140e0:	mov	r2, #0
   140e4:	ldr	r1, [r0, #132]	; 0x84
   140e8:	mov	r0, r5
   140ec:	bl	116fc <XF86VidModeLockModeSwitch@plt>
   140f0:	mov	r0, r4
   140f4:	bl	1163c <XtDisplay@plt>
   140f8:	mov	r5, r0
   140fc:	mov	r0, r4
   14100:	bl	1163c <XtDisplay@plt>
   14104:	mov	r2, r6
   14108:	ldr	r1, [r0, #132]	; 0x84
   1410c:	mov	r0, r5
   14110:	bl	11690 <XF86VidModeSwitchMode@plt>
   14114:	mov	r0, r4
   14118:	bl	1163c <XtDisplay@plt>
   1411c:	mov	r5, r0
   14120:	mov	r0, r4
   14124:	bl	1163c <XtDisplay@plt>
   14128:	mov	r2, #1
   1412c:	ldr	r1, [r0, #132]	; 0x84
   14130:	mov	r0, r5
   14134:	bl	116fc <XF86VidModeLockModeSwitch@plt>
   14138:	mov	r2, #0
   1413c:	mov	r0, r4
   14140:	mov	r1, r2
   14144:	pop	{r4, r5, r6, lr}
   14148:	b	14068 <__snprintf_chk@plt+0x2930>
   1414c:	mov	r2, #0
   14150:	mvn	r1, #0
   14154:	b	140c4 <__snprintf_chk@plt+0x298c>
   14158:	mov	r2, #0
   1415c:	mov	r1, #1
   14160:	b	140c4 <__snprintf_chk@plt+0x298c>
   14164:	push	{r4, r5, r6, r7, r8, lr}
   14168:	vldr	s15, [pc, #472]	; 14348 <__snprintf_chk@plt+0x2c10>
   1416c:	vldr	s14, [r2]
   14170:	lsl	r4, r1, #3
   14174:	sub	r3, r4, r1
   14178:	ldr	r7, [pc, #464]	; 14350 <__snprintf_chk@plt+0x2c18>
   1417c:	vmul.f32	s15, s14, s15
   14180:	ldr	r6, [pc, #460]	; 14354 <__snprintf_chk@plt+0x2c1c>
   14184:	add	r3, r7, r3, lsl #2
   14188:	sub	sp, sp, #24
   1418c:	ldr	r2, [r3, #12]
   14190:	mov	r5, r1
   14194:	ldr	r1, [r6]
   14198:	vcvt.s32.f32	s15, s15
   1419c:	str	r1, [sp, #20]
   141a0:	vmov	ip, s15
   141a4:	cmp	r2, ip
   141a8:	bne	141c4 <__snprintf_chk@plt+0x2a8c>
   141ac:	ldr	r2, [sp, #20]
   141b0:	ldr	r3, [r6]
   141b4:	cmp	r2, r3
   141b8:	bne	14344 <__snprintf_chk@plt+0x2c0c>
   141bc:	add	sp, sp, #24
   141c0:	pop	{r4, r5, r6, r7, r8, pc}
   141c4:	vldr	s15, [r3, #16]
   141c8:	ldr	r3, [r3, #4]
   141cc:	sub	r2, r5, #1
   141d0:	vcvt.f32.s32	s15, s15
   141d4:	rsb	r3, r3, r3, lsl #3
   141d8:	add	r3, r7, r3, lsl #2
   141dc:	ldr	r8, [r3, #8]
   141e0:	vmul.f32	s15, s15, s14
   141e4:	vcvt.s32.f32	s15, s15
   141e8:	vmov	r3, s15
   141ec:	add	r8, r3, r8
   141f0:	cmp	r2, #6
   141f4:	ldrls	pc, [pc, r2, lsl #2]
   141f8:	b	1433c <__snprintf_chk@plt+0x2c04>
   141fc:	andeq	r4, r1, ip, lsr #6
   14200:	andeq	r4, r1, r8, lsl #6
   14204:	strdeq	r4, [r1], -r8
   14208:	andeq	r4, r1, ip, lsr r3
   1420c:	andeq	r4, r1, r0, ror #5
   14210:			; <UNDEFINED> instruction: 0x000142bc
   14214:	andeq	r4, r1, r8, lsl r2
   14218:	ldr	r2, [r7, #176]	; 0xb0
   1421c:	cmp	r8, r2
   14220:	movge	r2, r8
   14224:	sub	r4, r4, r5
   14228:	ldr	r1, [pc, #296]	; 14358 <__snprintf_chk@plt+0x2c20>
   1422c:	add	r4, r7, r4, lsl #2
   14230:	mov	r3, #6
   14234:	stm	sp, {r1, r2}
   14238:	add	r0, sp, #12
   1423c:	mov	r1, r3
   14240:	str	r2, [r4, #8]
   14244:	str	ip, [r4, #12]
   14248:	mov	r2, #1
   1424c:	bl	11738 <__snprintf_chk@plt>
   14250:	add	r2, sp, #12
   14254:	ldr	r0, [r4, #20]
   14258:	mov	r3, #0
   1425c:	ldr	r1, [pc, #248]	; 1435c <__snprintf_chk@plt+0x2c24>
   14260:	bl	1148c <XtVaSetValues@plt>
   14264:	ldr	r2, [r4, #8]
   14268:	cmp	r2, r8
   1426c:	beq	142a4 <__snprintf_chk@plt+0x2b6c>
   14270:	ldr	r3, [r4, #4]
   14274:	vldr	s0, [r4, #16]
   14278:	vldr	s1, [pc, #204]	; 1434c <__snprintf_chk@plt+0x2c14>
   1427c:	rsb	r3, r3, r3, lsl #3
   14280:	ldr	r0, [r4, #24]
   14284:	add	r3, r7, r3, lsl #2
   14288:	vcvt.f32.s32	s0, s0
   1428c:	ldr	r3, [r3, #8]
   14290:	sub	r2, r2, r3
   14294:	vmov	s15, r2
   14298:	vcvt.f32.s32	s15, s15
   1429c:	vdiv.f32	s0, s15, s0
   142a0:	bl	1145c <XawScrollbarSetThumb@plt>
   142a4:	cmp	r5, #7
   142a8:	cmpne	r5, #3
   142ac:	bne	141ac <__snprintf_chk@plt+0x2a74>
   142b0:	mov	r0, #1
   142b4:	bl	13e80 <__snprintf_chk@plt+0x2748>
   142b8:	b	141ac <__snprintf_chk@plt+0x2a74>
   142bc:	ldr	r2, [r7, #148]	; 0x94
   142c0:	sub	r3, r8, #7
   142c4:	cmp	r3, r2
   142c8:	ldr	r3, [r7, #204]	; 0xcc
   142cc:	addle	r2, r2, #8
   142d0:	movgt	r2, r8
   142d4:	cmp	r2, r3
   142d8:	movge	r2, r3
   142dc:	b	14224 <__snprintf_chk@plt+0x2aec>
   142e0:	ldr	r2, [r7, #176]	; 0xb0
   142e4:	add	r3, r8, #7
   142e8:	cmp	r3, r2
   142ec:	blt	1433c <__snprintf_chk@plt+0x2c04>
   142f0:	sub	r2, r2, #8
   142f4:	b	14224 <__snprintf_chk@plt+0x2aec>
   142f8:	ldr	r2, [r7, #64]	; 0x40
   142fc:	cmp	r8, r2
   14300:	movge	r2, r8
   14304:	b	14224 <__snprintf_chk@plt+0x2aec>
   14308:	ldr	r2, [r7, #36]	; 0x24
   1430c:	sub	r3, r8, #7
   14310:	cmp	r3, r2
   14314:	ldr	r3, [r7, #92]	; 0x5c
   14318:	addle	r2, r2, #8
   1431c:	movgt	r2, r8
   14320:	cmp	r2, r3
   14324:	movge	r2, r3
   14328:	b	14224 <__snprintf_chk@plt+0x2aec>
   1432c:	ldr	r2, [r7, #64]	; 0x40
   14330:	add	r3, r8, #7
   14334:	cmp	r3, r2
   14338:	bge	142f0 <__snprintf_chk@plt+0x2bb8>
   1433c:	mov	r2, r8
   14340:	b	14224 <__snprintf_chk@plt+0x2aec>
   14344:	bl	114bc <__stack_chk_fail@plt>
   14348:	sbcmi	r0, r8, #0
   1434c:	andeq	r0, r0, r0
   14350:	andeq	r7, r2, ip, lsr #2
   14354:	andeq	r5, r2, r8, ror pc
   14358:	andeq	r4, r1, r0, asr #29
   1435c:	andeq	r6, r2, r5, lsr r6
   14360:	push	{r4, r5, r6, r7, r8, lr}
   14364:	mov	r6, r1
   14368:	ldr	r4, [pc, #652]	; 145fc <__snprintf_chk@plt+0x2ec4>
   1436c:	sub	sp, sp, #8
   14370:	add	r3, r6, #7
   14374:	ldr	r1, [r4]
   14378:	mov	r7, r0
   1437c:	mov	r8, r2
   14380:	str	r1, [sp, #4]
   14384:	cmp	r3, #14
   14388:	ldrls	pc, [pc, r3, lsl #2]
   1438c:	b	143f8 <__snprintf_chk@plt+0x2cc0>
   14390:	andeq	r4, r1, ip, asr #8
   14394:	strdeq	r4, [r1], -r8
   14398:	andeq	r4, r1, r8, ror r4
   1439c:	strdeq	r4, [r1], -r8
   143a0:	andeq	r4, r1, ip, asr #9
   143a4:	strdeq	r4, [r1], -r8
   143a8:	strdeq	r4, [r1], -r8
   143ac:	strdeq	r4, [r1], -r8
   143b0:	andeq	r4, r1, ip, lsr #11
   143b4:	strdeq	r4, [r1], -r8
   143b8:	andeq	r4, r1, ip, asr #10
   143bc:	strdeq	r4, [r1], -r8
   143c0:	andeq	r4, r1, r4, ror r5
   143c4:	strdeq	r4, [r1], -r8
   143c8:	andeq	r4, r1, ip, asr #7
   143cc:	ldr	r3, [pc, #556]	; 14600 <__snprintf_chk@plt+0x2ec8>
   143d0:	ldr	r2, [r3, #204]	; 0xcc
   143d4:	ldr	r1, [r3, #216]	; 0xd8
   143d8:	add	r2, r2, #4
   143dc:	cmp	r1, #0
   143e0:	str	r2, [r3, #204]	; 0xcc
   143e4:	beq	143f0 <__snprintf_chk@plt+0x2cb8>
   143e8:	mov	r0, #7
   143ec:	bl	13b54 <__snprintf_chk@plt+0x241c>
   143f0:	mov	r0, #1
   143f4:	bl	13e80 <__snprintf_chk@plt+0x2748>
   143f8:	bl	1399c <__snprintf_chk@plt+0x2264>
   143fc:	ldr	r1, [pc, #512]	; 14604 <__snprintf_chk@plt+0x2ecc>
   14400:	mov	r3, #0
   14404:	add	r2, sp, #3
   14408:	ldr	r0, [r1, #188]	; 0xbc
   1440c:	ldr	r1, [pc, #500]	; 14608 <__snprintf_chk@plt+0x2ed0>
   14410:	bl	11624 <XtVaGetValues@plt>
   14414:	ldrb	r3, [sp, #3]
   14418:	cmp	r3, #0
   1441c:	bne	14438 <__snprintf_chk@plt+0x2d00>
   14420:	ldr	r2, [sp, #4]
   14424:	ldr	r3, [r4]
   14428:	cmp	r2, r3
   1442c:	bne	145f8 <__snprintf_chk@plt+0x2ec0>
   14430:	add	sp, sp, #8
   14434:	pop	{r4, r5, r6, r7, r8, pc}
   14438:	mov	r2, r8
   1443c:	mov	r1, r6
   14440:	mov	r0, r7
   14444:	bl	1328c <__snprintf_chk@plt+0x1b54>
   14448:	b	14420 <__snprintf_chk@plt+0x2ce8>
   1444c:	ldr	r2, [pc, #428]	; 14600 <__snprintf_chk@plt+0x2ec8>
   14450:	ldr	r3, [r2, #204]	; 0xcc
   14454:	ldr	r1, [r2, #176]	; 0xb0
   14458:	sub	r3, r3, #4
   1445c:	cmp	r3, r1
   14460:	ble	145e4 <__snprintf_chk@plt+0x2eac>
   14464:	ldr	r1, [r2, #216]	; 0xd8
   14468:	str	r3, [r2, #204]	; 0xcc
   1446c:	cmp	r1, #0
   14470:	bne	143e8 <__snprintf_chk@plt+0x2cb0>
   14474:	b	143f0 <__snprintf_chk@plt+0x2cb8>
   14478:	ldr	r5, [pc, #384]	; 14600 <__snprintf_chk@plt+0x2ec8>
   1447c:	ldr	r3, [r5, #148]	; 0x94
   14480:	ldr	r2, [r5, #120]	; 0x78
   14484:	sub	r3, r3, #4
   14488:	cmp	r3, r2
   1448c:	ble	145e4 <__snprintf_chk@plt+0x2eac>
   14490:	ldr	r2, [r5, #176]	; 0xb0
   14494:	ldr	r1, [r5, #160]	; 0xa0
   14498:	sub	r2, r2, #4
   1449c:	cmp	r1, #0
   144a0:	str	r3, [r5, #148]	; 0x94
   144a4:	str	r2, [r5, #176]	; 0xb0
   144a8:	beq	144b4 <__snprintf_chk@plt+0x2d7c>
   144ac:	mov	r0, #5
   144b0:	bl	13b54 <__snprintf_chk@plt+0x241c>
   144b4:	ldr	r3, [r5, #188]	; 0xbc
   144b8:	cmp	r3, #0
   144bc:	beq	143f8 <__snprintf_chk@plt+0x2cc0>
   144c0:	mov	r0, #6
   144c4:	bl	13b54 <__snprintf_chk@plt+0x241c>
   144c8:	b	143f8 <__snprintf_chk@plt+0x2cc0>
   144cc:	ldr	r2, [pc, #300]	; 14600 <__snprintf_chk@plt+0x2ec8>
   144d0:	ldr	r3, [r2, #92]	; 0x5c
   144d4:	ldr	r1, [r2, #64]	; 0x40
   144d8:	sub	r3, r3, #4
   144dc:	cmp	r3, r1
   144e0:	ble	145e4 <__snprintf_chk@plt+0x2eac>
   144e4:	ldr	r1, [r2, #104]	; 0x68
   144e8:	str	r3, [r2, #92]	; 0x5c
   144ec:	cmp	r1, #0
   144f0:	bne	14568 <__snprintf_chk@plt+0x2e30>
   144f4:	b	143f0 <__snprintf_chk@plt+0x2cb8>
   144f8:	ldr	r5, [pc, #256]	; 14600 <__snprintf_chk@plt+0x2ec8>
   144fc:	ldr	r3, [r5, #36]	; 0x24
   14500:	ldr	r2, [r5, #8]
   14504:	sub	r3, r3, #4
   14508:	cmp	r3, r2
   1450c:	ble	145e4 <__snprintf_chk@plt+0x2eac>
   14510:	ldr	r2, [r5, #64]	; 0x40
   14514:	ldr	r1, [r5, #48]	; 0x30
   14518:	sub	r2, r2, #4
   1451c:	cmp	r1, #0
   14520:	str	r3, [r5, #36]	; 0x24
   14524:	str	r2, [r5, #64]	; 0x40
   14528:	beq	14534 <__snprintf_chk@plt+0x2dfc>
   1452c:	mov	r0, #1
   14530:	bl	13b54 <__snprintf_chk@plt+0x241c>
   14534:	ldr	r3, [r5, #76]	; 0x4c
   14538:	cmp	r3, #0
   1453c:	beq	143f8 <__snprintf_chk@plt+0x2cc0>
   14540:	mov	r0, #2
   14544:	bl	13b54 <__snprintf_chk@plt+0x241c>
   14548:	b	143f8 <__snprintf_chk@plt+0x2cc0>
   1454c:	ldr	r3, [pc, #172]	; 14600 <__snprintf_chk@plt+0x2ec8>
   14550:	ldr	r2, [r3, #92]	; 0x5c
   14554:	ldr	r1, [r3, #104]	; 0x68
   14558:	add	r2, r2, #4
   1455c:	cmp	r1, #0
   14560:	str	r2, [r3, #92]	; 0x5c
   14564:	beq	143f0 <__snprintf_chk@plt+0x2cb8>
   14568:	mov	r0, #3
   1456c:	bl	13b54 <__snprintf_chk@plt+0x241c>
   14570:	b	143f0 <__snprintf_chk@plt+0x2cb8>
   14574:	ldr	r5, [pc, #132]	; 14600 <__snprintf_chk@plt+0x2ec8>
   14578:	ldr	r3, [r5, #176]	; 0xb0
   1457c:	ldr	r2, [r5, #204]	; 0xcc
   14580:	add	r3, r3, #4
   14584:	cmp	r3, r2
   14588:	bge	145e4 <__snprintf_chk@plt+0x2eac>
   1458c:	ldr	r2, [r5, #148]	; 0x94
   14590:	ldr	r1, [r5, #160]	; 0xa0
   14594:	add	r2, r2, #4
   14598:	cmp	r1, #0
   1459c:	str	r3, [r5, #176]	; 0xb0
   145a0:	str	r2, [r5, #148]	; 0x94
   145a4:	bne	144ac <__snprintf_chk@plt+0x2d74>
   145a8:	b	144b4 <__snprintf_chk@plt+0x2d7c>
   145ac:	ldr	r5, [pc, #76]	; 14600 <__snprintf_chk@plt+0x2ec8>
   145b0:	ldr	r3, [r5, #64]	; 0x40
   145b4:	ldr	r2, [r5, #92]	; 0x5c
   145b8:	add	r3, r3, #4
   145bc:	cmp	r3, r2
   145c0:	bge	145e4 <__snprintf_chk@plt+0x2eac>
   145c4:	ldr	r2, [r5, #36]	; 0x24
   145c8:	ldr	r1, [r5, #48]	; 0x30
   145cc:	add	r2, r2, #4
   145d0:	cmp	r1, #0
   145d4:	str	r3, [r5, #64]	; 0x40
   145d8:	str	r2, [r5, #36]	; 0x24
   145dc:	bne	1452c <__snprintf_chk@plt+0x2df4>
   145e0:	b	14534 <__snprintf_chk@plt+0x2dfc>
   145e4:	mov	r0, r7
   145e8:	bl	1163c <XtDisplay@plt>
   145ec:	mov	r1, #80	; 0x50
   145f0:	bl	11420 <XBell@plt>
   145f4:	b	143f8 <__snprintf_chk@plt+0x2cc0>
   145f8:	bl	114bc <__stack_chk_fail@plt>
   145fc:	andeq	r5, r2, r8, ror pc
   14600:	andeq	r7, r2, ip, lsr #2
   14604:	ldrdeq	r7, [r2], -r0
   14608:	andeq	r4, r1, r0, ror #28
   1460c:	mov	r2, #0
   14610:	mov	r1, #7
   14614:	b	14360 <__snprintf_chk@plt+0x2c28>
   14618:	mov	r2, #0
   1461c:	mvn	r1, #6
   14620:	b	14360 <__snprintf_chk@plt+0x2c28>
   14624:	mov	r2, #0
   14628:	mvn	r1, #4
   1462c:	b	14360 <__snprintf_chk@plt+0x2c28>
   14630:	mov	r2, #0
   14634:	mov	r1, #5
   14638:	b	14360 <__snprintf_chk@plt+0x2c28>
   1463c:	mov	r2, #0
   14640:	mov	r1, #3
   14644:	b	14360 <__snprintf_chk@plt+0x2c28>
   14648:	mov	r2, #0
   1464c:	mvn	r1, #2
   14650:	b	14360 <__snprintf_chk@plt+0x2c28>
   14654:	mov	r2, #0
   14658:	mvn	r1, #0
   1465c:	b	14360 <__snprintf_chk@plt+0x2c28>
   14660:	mov	r2, #0
   14664:	mov	r1, #1
   14668:	b	14360 <__snprintf_chk@plt+0x2c28>
   1466c:	push	{r4, r5, r6, lr}
   14670:	ldr	r4, [pc, #92]	; 146d4 <__snprintf_chk@plt+0x2f9c>
   14674:	ldrb	r2, [r1, #16]
   14678:	ldr	r3, [r4, #200]	; 0xc8
   1467c:	cmp	r2, r3
   14680:	blt	146a0 <__snprintf_chk@plt+0x2f68>
   14684:	add	r3, r3, #6
   14688:	cmp	r2, r3
   1468c:	bgt	146a0 <__snprintf_chk@plt+0x2f68>
   14690:	mov	r3, #1
   14694:	str	r3, [r4, #180]	; 0xb4
   14698:	mov	r0, #0
   1469c:	pop	{r4, r5, r6, pc}
   146a0:	cmp	r2, #2
   146a4:	beq	14690 <__snprintf_chk@plt+0x2f58>
   146a8:	mov	r6, r0
   146ac:	mov	r5, r1
   146b0:	bl	12c8c <__snprintf_chk@plt+0x1554>
   146b4:	ldr	r3, [r4, #204]	; 0xcc
   146b8:	cmp	r3, #0
   146bc:	beq	14698 <__snprintf_chk@plt+0x2f60>
   146c0:	mov	r1, r5
   146c4:	mov	r0, r6
   146c8:	blx	r3
   146cc:	mov	r0, #0
   146d0:	pop	{r4, r5, r6, pc}
   146d4:	ldrdeq	r7, [r2], -r0
   146d8:	ldr	r3, [r1]
   146dc:	cmp	r3, #33	; 0x21
   146e0:	beq	146f8 <__snprintf_chk@plt+0x2fc0>
   146e4:	cmp	r3, #2
   146e8:	bxne	lr
   146ec:	mov	r2, #0
   146f0:	mov	r1, r2
   146f4:	b	130c4 <__snprintf_chk@plt+0x198c>
   146f8:	ldr	r3, [pc, #24]	; 14718 <__snprintf_chk@plt+0x2fe0>
   146fc:	ldr	r2, [r1, #28]
   14700:	ldr	r3, [r3, #208]	; 0xd0
   14704:	cmp	r2, r3
   14708:	bxne	lr
   1470c:	mov	r2, #0
   14710:	mov	r1, r2
   14714:	b	130c4 <__snprintf_chk@plt+0x198c>
   14718:	ldrdeq	r7, [r2], -r0
   1471c:	push	{r4, r5, r6, r7, r8, lr}
   14720:	sub	sp, sp, #16
   14724:	ldr	r7, [pc, #264]	; 14834 <__snprintf_chk@plt+0x30fc>
   14728:	mov	r3, #0
   1472c:	mov	r2, sp
   14730:	ldr	ip, [r7]
   14734:	mov	r4, r1
   14738:	ldr	r1, [pc, #248]	; 14838 <__snprintf_chk@plt+0x3100>
   1473c:	str	ip, [sp, #12]
   14740:	mov	r6, r0
   14744:	bl	11624 <XtVaGetValues@plt>
   14748:	ldr	r0, [sp]
   1474c:	bl	115ac <strlen@plt>
   14750:	cmp	r0, #4
   14754:	mov	r5, r0
   14758:	bhi	147d4 <__snprintf_chk@plt+0x309c>
   1475c:	cmp	r5, #0
   14760:	beq	147bc <__snprintf_chk@plt+0x3084>
   14764:	bl	1157c <__ctype_b_loc@plt>
   14768:	mov	r4, #0
   1476c:	mov	r8, r0
   14770:	b	14780 <__snprintf_chk@plt+0x3048>
   14774:	add	r4, r4, #1
   14778:	cmp	r5, r4
   1477c:	beq	147bc <__snprintf_chk@plt+0x3084>
   14780:	ldr	r3, [sp]
   14784:	ldr	r2, [r8]
   14788:	ldrb	r3, [r3, r4]
   1478c:	lsl	r3, r3, #1
   14790:	ldrh	r3, [r2, r3]
   14794:	tst	r3, #4096	; 0x1000
   14798:	bne	14774 <__snprintf_chk@plt+0x303c>
   1479c:	mov	r0, r6
   147a0:	bl	116c0 <XtParent@plt>
   147a4:	bl	1163c <XtDisplay@plt>
   147a8:	add	r4, r4, #1
   147ac:	mov	r1, #100	; 0x64
   147b0:	bl	11420 <XBell@plt>
   147b4:	cmp	r5, r4
   147b8:	bne	14780 <__snprintf_chk@plt+0x3048>
   147bc:	ldr	r2, [sp, #12]
   147c0:	ldr	r3, [r7]
   147c4:	cmp	r2, r3
   147c8:	bne	14830 <__snprintf_chk@plt+0x30f8>
   147cc:	add	sp, sp, #16
   147d0:	pop	{r4, r5, r6, r7, r8, pc}
   147d4:	mov	r0, r6
   147d8:	bl	116c0 <XtParent@plt>
   147dc:	bl	1163c <XtDisplay@plt>
   147e0:	mov	r1, #100	; 0x64
   147e4:	bl	11420 <XBell@plt>
   147e8:	ldr	r1, [sp]
   147ec:	add	r0, sp, #4
   147f0:	mov	r2, #4
   147f4:	bl	11618 <strncpy@plt>
   147f8:	rsb	r4, r4, r4, lsl #3
   147fc:	ldr	r3, [pc, #56]	; 1483c <__snprintf_chk@plt+0x3104>
   14800:	mov	ip, #0
   14804:	add	r4, r3, r4, lsl #2
   14808:	add	r2, sp, #4
   1480c:	ldr	r0, [r4, #20]
   14810:	mov	r3, ip
   14814:	ldr	r1, [pc, #28]	; 14838 <__snprintf_chk@plt+0x3100>
   14818:	strb	ip, [sp, #8]
   1481c:	bl	1148c <XtVaSetValues@plt>
   14820:	ldr	r0, [r4, #20]
   14824:	mov	r1, #4
   14828:	bl	11498 <XawTextSetInsertionPoint@plt>
   1482c:	b	1475c <__snprintf_chk@plt+0x3024>
   14830:	bl	114bc <__stack_chk_fail@plt>
   14834:	andeq	r5, r2, r8, ror pc
   14838:	andeq	r6, r2, r5, ror #14
   1483c:	andeq	r7, r2, ip, lsr #2
   14840:	push	{r4, r5, lr}
   14844:	mov	r2, #0
   14848:	ldr	r4, [pc, #100]	; 148b4 <__snprintf_chk@plt+0x317c>
   1484c:	sub	sp, sp, #12
   14850:	mov	r1, r2
   14854:	ldr	r3, [r4]
   14858:	mov	r5, r0
   1485c:	str	r3, [sp, #4]
   14860:	bl	13dc0 <__snprintf_chk@plt+0x2688>
   14864:	ldr	r1, [pc, #76]	; 148b8 <__snprintf_chk@plt+0x3180>
   14868:	add	r2, sp, #3
   1486c:	mov	r3, #0
   14870:	ldr	r0, [r1, #188]	; 0xbc
   14874:	ldr	r1, [pc, #64]	; 148bc <__snprintf_chk@plt+0x3184>
   14878:	bl	11624 <XtVaGetValues@plt>
   1487c:	ldrb	r2, [sp, #3]
   14880:	cmp	r2, #0
   14884:	beq	148a0 <__snprintf_chk@plt+0x3168>
   14888:	ldr	r2, [sp, #4]
   1488c:	ldr	r3, [r4]
   14890:	cmp	r2, r3
   14894:	bne	148b0 <__snprintf_chk@plt+0x3178>
   14898:	add	sp, sp, #12
   1489c:	pop	{r4, r5, pc}
   148a0:	mov	r0, r5
   148a4:	mov	r1, r2
   148a8:	bl	1328c <__snprintf_chk@plt+0x1b54>
   148ac:	b	14888 <__snprintf_chk@plt+0x3150>
   148b0:	bl	114bc <__stack_chk_fail@plt>
   148b4:	andeq	r5, r2, r8, ror pc
   148b8:	ldrdeq	r7, [r2], -r0
   148bc:	andeq	r4, r1, r0, ror #28
   148c0:	push	{r4, r5, r6, lr}
   148c4:	sub	sp, sp, #8
   148c8:	ldr	r4, [pc, #76]	; 1491c <__snprintf_chk@plt+0x31e4>
   148cc:	mov	r5, r1
   148d0:	mov	r6, r2
   148d4:	ldr	ip, [r4]
   148d8:	mov	r3, #0
   148dc:	mov	r2, sp
   148e0:	ldr	r1, [pc, #56]	; 14920 <__snprintf_chk@plt+0x31e8>
   148e4:	str	ip, [sp, #4]
   148e8:	bl	11624 <XtVaGetValues@plt>
   148ec:	mov	r3, r6
   148f0:	mov	r2, r5
   148f4:	ldr	r1, [pc, #40]	; 14924 <__snprintf_chk@plt+0x31ec>
   148f8:	ldr	r0, [sp]
   148fc:	bl	116f0 <XtAddCallback@plt>
   14900:	ldr	r2, [sp, #4]
   14904:	ldr	r3, [r4]
   14908:	cmp	r2, r3
   1490c:	bne	14918 <__snprintf_chk@plt+0x31e0>
   14910:	add	sp, sp, #8
   14914:	pop	{r4, r5, r6, pc}
   14918:	bl	114bc <__stack_chk_fail@plt>
   1491c:	andeq	r5, r2, r8, ror pc
   14920:	andeq	r6, r2, r1, lsl #15
   14924:	andeq	r6, r2, r0, lsl r5
   14928:	cmp	r1, #0
   1492c:	beq	14b38 <__snprintf_chk@plt+0x3400>
   14930:	eor	ip, r0, r1
   14934:	rsbmi	r1, r1, #0
   14938:	subs	r2, r1, #1
   1493c:	beq	14b04 <__snprintf_chk@plt+0x33cc>
   14940:	movs	r3, r0
   14944:	rsbmi	r3, r0, #0
   14948:	cmp	r3, r1
   1494c:	bls	14b10 <__snprintf_chk@plt+0x33d8>
   14950:	tst	r1, r2
   14954:	beq	14b20 <__snprintf_chk@plt+0x33e8>
   14958:	clz	r2, r3
   1495c:	clz	r0, r1
   14960:	sub	r2, r0, r2
   14964:	rsbs	r2, r2, #31
   14968:	addne	r2, r2, r2, lsl #1
   1496c:	mov	r0, #0
   14970:	addne	pc, pc, r2, lsl #2
   14974:	nop			; (mov r0, r0)
   14978:	cmp	r3, r1, lsl #31
   1497c:	adc	r0, r0, r0
   14980:	subcs	r3, r3, r1, lsl #31
   14984:	cmp	r3, r1, lsl #30
   14988:	adc	r0, r0, r0
   1498c:	subcs	r3, r3, r1, lsl #30
   14990:	cmp	r3, r1, lsl #29
   14994:	adc	r0, r0, r0
   14998:	subcs	r3, r3, r1, lsl #29
   1499c:	cmp	r3, r1, lsl #28
   149a0:	adc	r0, r0, r0
   149a4:	subcs	r3, r3, r1, lsl #28
   149a8:	cmp	r3, r1, lsl #27
   149ac:	adc	r0, r0, r0
   149b0:	subcs	r3, r3, r1, lsl #27
   149b4:	cmp	r3, r1, lsl #26
   149b8:	adc	r0, r0, r0
   149bc:	subcs	r3, r3, r1, lsl #26
   149c0:	cmp	r3, r1, lsl #25
   149c4:	adc	r0, r0, r0
   149c8:	subcs	r3, r3, r1, lsl #25
   149cc:	cmp	r3, r1, lsl #24
   149d0:	adc	r0, r0, r0
   149d4:	subcs	r3, r3, r1, lsl #24
   149d8:	cmp	r3, r1, lsl #23
   149dc:	adc	r0, r0, r0
   149e0:	subcs	r3, r3, r1, lsl #23
   149e4:	cmp	r3, r1, lsl #22
   149e8:	adc	r0, r0, r0
   149ec:	subcs	r3, r3, r1, lsl #22
   149f0:	cmp	r3, r1, lsl #21
   149f4:	adc	r0, r0, r0
   149f8:	subcs	r3, r3, r1, lsl #21
   149fc:	cmp	r3, r1, lsl #20
   14a00:	adc	r0, r0, r0
   14a04:	subcs	r3, r3, r1, lsl #20
   14a08:	cmp	r3, r1, lsl #19
   14a0c:	adc	r0, r0, r0
   14a10:	subcs	r3, r3, r1, lsl #19
   14a14:	cmp	r3, r1, lsl #18
   14a18:	adc	r0, r0, r0
   14a1c:	subcs	r3, r3, r1, lsl #18
   14a20:	cmp	r3, r1, lsl #17
   14a24:	adc	r0, r0, r0
   14a28:	subcs	r3, r3, r1, lsl #17
   14a2c:	cmp	r3, r1, lsl #16
   14a30:	adc	r0, r0, r0
   14a34:	subcs	r3, r3, r1, lsl #16
   14a38:	cmp	r3, r1, lsl #15
   14a3c:	adc	r0, r0, r0
   14a40:	subcs	r3, r3, r1, lsl #15
   14a44:	cmp	r3, r1, lsl #14
   14a48:	adc	r0, r0, r0
   14a4c:	subcs	r3, r3, r1, lsl #14
   14a50:	cmp	r3, r1, lsl #13
   14a54:	adc	r0, r0, r0
   14a58:	subcs	r3, r3, r1, lsl #13
   14a5c:	cmp	r3, r1, lsl #12
   14a60:	adc	r0, r0, r0
   14a64:	subcs	r3, r3, r1, lsl #12
   14a68:	cmp	r3, r1, lsl #11
   14a6c:	adc	r0, r0, r0
   14a70:	subcs	r3, r3, r1, lsl #11
   14a74:	cmp	r3, r1, lsl #10
   14a78:	adc	r0, r0, r0
   14a7c:	subcs	r3, r3, r1, lsl #10
   14a80:	cmp	r3, r1, lsl #9
   14a84:	adc	r0, r0, r0
   14a88:	subcs	r3, r3, r1, lsl #9
   14a8c:	cmp	r3, r1, lsl #8
   14a90:	adc	r0, r0, r0
   14a94:	subcs	r3, r3, r1, lsl #8
   14a98:	cmp	r3, r1, lsl #7
   14a9c:	adc	r0, r0, r0
   14aa0:	subcs	r3, r3, r1, lsl #7
   14aa4:	cmp	r3, r1, lsl #6
   14aa8:	adc	r0, r0, r0
   14aac:	subcs	r3, r3, r1, lsl #6
   14ab0:	cmp	r3, r1, lsl #5
   14ab4:	adc	r0, r0, r0
   14ab8:	subcs	r3, r3, r1, lsl #5
   14abc:	cmp	r3, r1, lsl #4
   14ac0:	adc	r0, r0, r0
   14ac4:	subcs	r3, r3, r1, lsl #4
   14ac8:	cmp	r3, r1, lsl #3
   14acc:	adc	r0, r0, r0
   14ad0:	subcs	r3, r3, r1, lsl #3
   14ad4:	cmp	r3, r1, lsl #2
   14ad8:	adc	r0, r0, r0
   14adc:	subcs	r3, r3, r1, lsl #2
   14ae0:	cmp	r3, r1, lsl #1
   14ae4:	adc	r0, r0, r0
   14ae8:	subcs	r3, r3, r1, lsl #1
   14aec:	cmp	r3, r1
   14af0:	adc	r0, r0, r0
   14af4:	subcs	r3, r3, r1
   14af8:	cmp	ip, #0
   14afc:	rsbmi	r0, r0, #0
   14b00:	bx	lr
   14b04:	teq	ip, r0
   14b08:	rsbmi	r0, r0, #0
   14b0c:	bx	lr
   14b10:	movcc	r0, #0
   14b14:	asreq	r0, ip, #31
   14b18:	orreq	r0, r0, #1
   14b1c:	bx	lr
   14b20:	clz	r2, r1
   14b24:	rsb	r2, r2, #31
   14b28:	cmp	ip, #0
   14b2c:	lsr	r0, r3, r2
   14b30:	rsbmi	r0, r0, #0
   14b34:	bx	lr
   14b38:	cmp	r0, #0
   14b3c:	mvngt	r0, #-2147483648	; 0x80000000
   14b40:	movlt	r0, #-2147483648	; 0x80000000
   14b44:	b	14b68 <__snprintf_chk@plt+0x3430>
   14b48:	cmp	r1, #0
   14b4c:	beq	14b38 <__snprintf_chk@plt+0x3400>
   14b50:	push	{r0, r1, lr}
   14b54:	bl	14930 <__snprintf_chk@plt+0x31f8>
   14b58:	pop	{r1, r2, lr}
   14b5c:	mul	r3, r2, r0
   14b60:	sub	r1, r1, r3
   14b64:	bx	lr
   14b68:	push	{r1, lr}
   14b6c:	mov	r0, #8
   14b70:	bl	11414 <raise@plt>
   14b74:	pop	{r1, pc}
   14b78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b7c:	mov	r7, r0
   14b80:	ldr	r6, [pc, #72]	; 14bd0 <__snprintf_chk@plt+0x3498>
   14b84:	ldr	r5, [pc, #72]	; 14bd4 <__snprintf_chk@plt+0x349c>
   14b88:	add	r6, pc, r6
   14b8c:	add	r5, pc, r5
   14b90:	sub	r6, r6, r5
   14b94:	mov	r8, r1
   14b98:	mov	r9, r2
   14b9c:	bl	113e8 <XtGetApplicationResources@plt-0x20>
   14ba0:	asrs	r6, r6, #2
   14ba4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ba8:	mov	r4, #0
   14bac:	add	r4, r4, #1
   14bb0:	ldr	r3, [r5], #4
   14bb4:	mov	r2, r9
   14bb8:	mov	r1, r8
   14bbc:	mov	r0, r7
   14bc0:	blx	r3
   14bc4:	cmp	r6, r4
   14bc8:	bne	14bac <__snprintf_chk@plt+0x3474>
   14bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bd0:	andeq	r1, r1, r4, ror #7
   14bd4:	ldrdeq	r1, [r1], -ip
   14bd8:	bx	lr

Disassembly of section .fini:

00014bdc <.fini>:
   14bdc:	push	{r3, lr}
   14be0:	pop	{r3, pc}
