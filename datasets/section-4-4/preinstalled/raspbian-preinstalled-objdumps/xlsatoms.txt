
raspbian-preinstalled/xlsatoms:     file format elf32-littlearm


Disassembly of section .init:

000108cc <_init@@Base>:
   108cc:	push	{r3, lr}
   108d0:	bl	10ea8 <__snprintf_chk@plt+0x49c>
   108d4:	pop	{r3, pc}

Disassembly of section .plt:

000108d8 <xcb_get_atom_name@plt-0x14>:
   108d8:	push	{lr}		; (str lr, [sp, #-4]!)
   108dc:	ldr	lr, [pc, #4]	; 108e8 <_init@@Base+0x1c>
   108e0:	add	lr, pc, lr
   108e4:	ldr	pc, [lr, #8]!
   108e8:	andeq	r1, r1, r8, lsl r7

000108ec <xcb_get_atom_name@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1816]!	; 0x718

000108f8 <strcmp@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1808]!	; 0x710

00010904 <strtol@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1800]!	; 0x708

00010910 <free@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1792]!	; 0x700

0001091c <xcb_connect@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1784]!	; 0x6f8

00010928 <__stack_chk_fail@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1776]!	; 0x6f0

00010934 <xcb_get_atom_name_reply@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010940 <_IO_putc@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1760]!	; 0x6e0

0001094c <getenv@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1752]!	; 0x6d8

00010958 <puts@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1744]!	; 0x6d0

00010964 <malloc@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010970 <__libc_start_main@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1728]!	; 0x6c0

0001097c <xcb_get_atom_name_name@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1720]!	; 0x6b8

00010988 <__gmon_start__@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1712]!	; 0x6b0

00010994 <exit@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1704]!	; 0x6a8

000109a0 <strlen@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109ac <strchr@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1688]!	; 0x698

000109b8 <__printf_chk@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1680]!	; 0x690

000109c4 <__fprintf_chk@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1672]!	; 0x688

000109d0 <xcb_intern_atom_unchecked@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1664]!	; 0x680

000109dc <xcb_intern_atom_reply@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1656]!	; 0x678

000109e8 <xcb_disconnect@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1648]!	; 0x670

000109f4 <xcb_connection_has_error@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1640]!	; 0x668

00010a00 <abort@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1632]!	; 0x660

00010a0c <__snprintf_chk@plt>:
   10a0c:	stmia	r6!, {}
   10a0e:	b.n	10f30 <__snprintf_chk@plt+0x524>
   10a10:	ldmia	r2!, {r0, r4}
   10a12:	b.n	10f2e <__snprintf_chk@plt+0x522>
   10a14:	blx	ffa69590 <__bss_end__@@Base+0xffa474fc>

Disassembly of section .text:

00010a18 <.text>:
   10a18:	sub	r3, r0, #2
   10a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a20:	bic	r3, r3, #1
   10a24:	sub	sp, sp, #36	; 0x24
   10a28:	mov	r4, #0
   10a2c:	add	r3, r3, #3
   10a30:	ldr	r8, [pc, #1016]	; 10e30 <__snprintf_chk@plt+0x424>
   10a34:	ldr	r2, [r1]
   10a38:	str	r3, [sp, #12]
   10a3c:	mov	r6, r1
   10a40:	ldr	r3, [pc, #1004]	; 10e34 <__snprintf_chk@plt+0x428>
   10a44:	mov	r5, r0
   10a48:	mov	r9, r4
   10a4c:	mov	sl, r4
   10a50:	str	r2, [r8]
   10a54:	str	r4, [sp, #20]
   10a58:	str	r3, [sp, #16]
   10a5c:	cmp	r5, #1
   10a60:	ble	10d44 <__snprintf_chk@plt+0x338>
   10a64:	ldr	fp, [r6, #4]
   10a68:	ldrb	r3, [fp]
   10a6c:	cmp	r3, #45	; 0x2d
   10a70:	bne	10b08 <__snprintf_chk@plt+0xfc>
   10a74:	mov	r7, #1
   10a78:	ldrb	r3, [fp, #1]
   10a7c:	sub	r3, r3, #100	; 0x64
   10a80:	cmp	r3, #18
   10a84:	ldrls	pc, [pc, r3, lsl #2]
   10a88:	b	10b08 <__snprintf_chk@plt+0xfc>
   10a8c:	andeq	r0, r1, r0, asr fp
   10a90:	andeq	r0, r1, r8, lsl #22
   10a94:	andeq	r0, r1, r4, ror #22
   10a98:	andeq	r0, r1, r8, lsl #22
   10a9c:	andeq	r0, r1, r8, lsl #22
   10aa0:	andeq	r0, r1, r8, lsl #22
   10aa4:	andeq	r0, r1, r8, lsl #22
   10aa8:	andeq	r0, r1, r8, lsl #22
   10aac:	andeq	r0, r1, r8, lsl #22
   10ab0:	andeq	r0, r1, r8, lsl #22
   10ab4:	andeq	r0, r1, r8, ror fp
   10ab8:	andeq	r0, r1, r8, lsl #22
   10abc:	andeq	r0, r1, r8, lsl #22
   10ac0:	andeq	r0, r1, r8, lsl #22
   10ac4:	andeq	r0, r1, ip, lsl #23
   10ac8:	andeq	r0, r1, r8, lsl #22
   10acc:	andeq	r0, r1, r8, lsl #22
   10ad0:	andeq	r0, r1, r8, lsl #22
   10ad4:	andeq	r0, r1, ip, lsr #22
   10ad8:	cmp	r4, #0
   10adc:	addeq	r3, r6, r7, lsl #2
   10ae0:	ldreq	r3, [r3, #4]
   10ae4:	streq	r3, [sp, #20]
   10ae8:	ldr	r3, [sp, #12]
   10aec:	add	r7, r7, #2
   10af0:	cmp	r3, r7
   10af4:	beq	10d44 <__snprintf_chk@plt+0x338>
   10af8:	ldr	fp, [r6, r7, lsl #2]
   10afc:	ldrb	r3, [fp]
   10b00:	cmp	r3, #45	; 0x2d
   10b04:	beq	10a78 <__snprintf_chk@plt+0x6c>
   10b08:	ldr	r2, [pc, #808]	; 10e38 <__snprintf_chk@plt+0x42c>
   10b0c:	str	fp, [sp]
   10b10:	ldr	r3, [r8]
   10b14:	ldr	r0, [r2]
   10b18:	mov	r1, #1
   10b1c:	ldr	r2, [pc, #792]	; 10e3c <__snprintf_chk@plt+0x430>
   10b20:	bl	109c4 <__fprintf_chk@plt>
   10b24:	mov	r0, #0
   10b28:	bl	10f5c <__snprintf_chk@plt+0x550>
   10b2c:	ldr	r1, [pc, #780]	; 10e40 <__snprintf_chk@plt+0x434>
   10b30:	mov	r0, fp
   10b34:	bl	108f8 <strcmp@plt>
   10b38:	subs	r4, r0, #0
   10b3c:	bne	10b08 <__snprintf_chk@plt+0xfc>
   10b40:	ldr	r0, [pc, #764]	; 10e44 <__snprintf_chk@plt+0x438>
   10b44:	bl	10958 <puts@plt>
   10b48:	mov	r0, r4
   10b4c:	bl	10994 <exit@plt>
   10b50:	add	r3, r7, #1
   10b54:	cmp	r5, r3
   10b58:	bgt	10ad8 <__snprintf_chk@plt+0xcc>
   10b5c:	ldr	r0, [pc, #740]	; 10e48 <__snprintf_chk@plt+0x43c>
   10b60:	bl	10f5c <__snprintf_chk@plt+0x550>
   10b64:	add	r3, r7, #1
   10b68:	cmp	r5, r3
   10b6c:	bgt	10ba0 <__snprintf_chk@plt+0x194>
   10b70:	ldr	r0, [pc, #724]	; 10e4c <__snprintf_chk@plt+0x440>
   10b74:	bl	10f5c <__snprintf_chk@plt+0x550>
   10b78:	add	r3, r7, #1
   10b7c:	cmp	r3, r5
   10b80:	blt	10bb4 <__snprintf_chk@plt+0x1a8>
   10b84:	ldr	r0, [pc, #708]	; 10e50 <__snprintf_chk@plt+0x444>
   10b88:	bl	10f5c <__snprintf_chk@plt+0x550>
   10b8c:	add	r3, r7, #1
   10b90:	cmp	r5, r3
   10b94:	bgt	10c38 <__snprintf_chk@plt+0x22c>
   10b98:	ldr	r0, [pc, #692]	; 10e54 <__snprintf_chk@plt+0x448>
   10b9c:	bl	10f5c <__snprintf_chk@plt+0x550>
   10ba0:	cmp	r4, #0
   10ba4:	addne	r3, r6, r7, lsl #2
   10ba8:	ldrne	r3, [r3, #4]
   10bac:	strne	r3, [sp, #16]
   10bb0:	b	10ae8 <__snprintf_chk@plt+0xdc>
   10bb4:	cmp	r4, #0
   10bb8:	beq	10ae8 <__snprintf_chk@plt+0xdc>
   10bbc:	add	r3, r6, r7, lsl #2
   10bc0:	ldr	sl, [r3, #4]
   10bc4:	mov	r0, sl
   10bc8:	bl	109a0 <strlen@plt>
   10bcc:	mov	r3, sl
   10bd0:	mov	r1, #1
   10bd4:	uxth	r2, r0
   10bd8:	mov	r0, r9
   10bdc:	bl	109d0 <xcb_intern_atom_unchecked@plt>
   10be0:	mov	r2, #0
   10be4:	mov	r1, r0
   10be8:	mov	r0, r9
   10bec:	bl	109dc <xcb_intern_atom_reply@plt>
   10bf0:	subs	fp, r0, #0
   10bf4:	beq	10d6c <__snprintf_chk@plt+0x360>
   10bf8:	ldr	r2, [fp, #8]
   10bfc:	cmp	r2, #0
   10c00:	bne	10cbc <__snprintf_chk@plt+0x2b0>
   10c04:	ldr	r0, [pc, #556]	; 10e38 <__snprintf_chk@plt+0x42c>
   10c08:	ldr	r3, [r8, #4]
   10c0c:	str	sl, [sp]
   10c10:	str	r3, [sp, #4]
   10c14:	ldr	r2, [pc, #572]	; 10e58 <__snprintf_chk@plt+0x44c>
   10c18:	ldr	r3, [r8]
   10c1c:	mov	r1, #1
   10c20:	ldr	r0, [r0]
   10c24:	bl	109c4 <__fprintf_chk@plt>
   10c28:	mov	r0, fp
   10c2c:	bl	10910 <free@plt>
   10c30:	mov	sl, #1
   10c34:	b	10ae8 <__snprintf_chk@plt+0xdc>
   10c38:	cmp	r4, #0
   10c3c:	beq	10ae8 <__snprintf_chk@plt+0xdc>
   10c40:	add	r3, r6, r7, lsl #2
   10c44:	ldr	sl, [r3, #4]
   10c48:	cmp	sl, #0
   10c4c:	beq	10d38 <__snprintf_chk@plt+0x32c>
   10c50:	mov	r1, #45	; 0x2d
   10c54:	mov	r0, sl
   10c58:	bl	109ac <strchr@plt>
   10c5c:	subs	fp, r0, #0
   10c60:	beq	10ce0 <__snprintf_chk@plt+0x2d4>
   10c64:	cmp	sl, fp
   10c68:	moveq	r3, #1
   10c6c:	beq	10c90 <__snprintf_chk@plt+0x284>
   10c70:	mov	r1, #0
   10c74:	mov	r2, #10
   10c78:	mov	r0, sl
   10c7c:	strb	r1, [fp]
   10c80:	bl	10904 <strtol@plt>
   10c84:	mov	r2, #45	; 0x2d
   10c88:	strb	r2, [fp]
   10c8c:	mov	r3, r0
   10c90:	ldrb	r2, [fp, #1]
   10c94:	cmp	r2, #0
   10c98:	moveq	r2, #1
   10c9c:	bne	10d14 <__snprintf_chk@plt+0x308>
   10ca0:	ldr	r1, [sp, #24]
   10ca4:	mov	r0, r9
   10ca8:	str	r1, [sp]
   10cac:	ldr	r1, [sp, #16]
   10cb0:	bl	110f0 <__snprintf_chk@plt+0x6e4>
   10cb4:	mov	sl, #1
   10cb8:	b	10ae8 <__snprintf_chk@plt+0xdc>
   10cbc:	mov	r3, sl
   10cc0:	ldr	r1, [sp, #16]
   10cc4:	mov	r0, #1
   10cc8:	bl	109b8 <__printf_chk@plt>
   10ccc:	ldr	r3, [pc, #392]	; 10e5c <__snprintf_chk@plt+0x450>
   10cd0:	mov	r0, #10
   10cd4:	ldr	r1, [r3]
   10cd8:	bl	10940 <_IO_putc@plt>
   10cdc:	b	10c28 <__snprintf_chk@plt+0x21c>
   10ce0:	mov	r1, #58	; 0x3a
   10ce4:	mov	r0, sl
   10ce8:	bl	109ac <strchr@plt>
   10cec:	subs	fp, r0, #0
   10cf0:	bne	10c64 <__snprintf_chk@plt+0x258>
   10cf4:	mov	r2, #10
   10cf8:	mov	r1, fp
   10cfc:	mov	r0, sl
   10d00:	bl	10904 <strtol@plt>
   10d04:	mov	r2, #3
   10d08:	mov	r3, r0
   10d0c:	str	r0, [sp, #24]
   10d10:	b	10ca0 <__snprintf_chk@plt+0x294>
   10d14:	mov	r2, #10
   10d18:	add	r0, fp, #1
   10d1c:	mov	r1, #0
   10d20:	str	r3, [sp, #28]
   10d24:	bl	10904 <strtol@plt>
   10d28:	mov	r2, #3
   10d2c:	ldr	r3, [sp, #28]
   10d30:	str	r0, [sp, #24]
   10d34:	b	10ca0 <__snprintf_chk@plt+0x294>
   10d38:	mov	r3, #1
   10d3c:	mov	r2, r3
   10d40:	b	10ca0 <__snprintf_chk@plt+0x294>
   10d44:	cmp	r4, #0
   10d48:	beq	10dbc <__snprintf_chk@plt+0x3b0>
   10d4c:	cmp	sl, #0
   10d50:	beq	10d98 <__snprintf_chk@plt+0x38c>
   10d54:	cmp	r4, #1
   10d58:	bne	10db4 <__snprintf_chk@plt+0x3a8>
   10d5c:	mov	r0, r9
   10d60:	bl	109e8 <xcb_disconnect@plt>
   10d64:	mov	r0, #0
   10d68:	bl	10994 <exit@plt>
   10d6c:	ldr	r0, [pc, #196]	; 10e38 <__snprintf_chk@plt+0x42c>
   10d70:	ldr	r3, [r8, #4]
   10d74:	str	sl, [sp]
   10d78:	str	r3, [sp, #4]
   10d7c:	ldr	r2, [pc, #212]	; 10e58 <__snprintf_chk@plt+0x44c>
   10d80:	ldr	r3, [r8]
   10d84:	mov	r1, #1
   10d88:	ldr	r0, [r0]
   10d8c:	bl	109c4 <__fprintf_chk@plt>
   10d90:	mov	sl, #1
   10d94:	b	10ae8 <__snprintf_chk@plt+0xdc>
   10d98:	str	sl, [sp]
   10d9c:	mov	r3, sl
   10da0:	mov	r2, sl
   10da4:	ldr	r1, [sp, #16]
   10da8:	mov	r0, r9
   10dac:	bl	110f0 <__snprintf_chk@plt+0x6e4>
   10db0:	b	10d54 <__snprintf_chk@plt+0x348>
   10db4:	add	r4, r4, #1
   10db8:	b	10a5c <__snprintf_chk@plt+0x50>
   10dbc:	ldr	r3, [sp, #20]
   10dc0:	cmp	r3, #0
   10dc4:	str	r3, [r8, #4]
   10dc8:	beq	10e14 <__snprintf_chk@plt+0x408>
   10dcc:	mov	r1, #0
   10dd0:	ldr	r0, [sp, #20]
   10dd4:	bl	1091c <xcb_connect@plt>
   10dd8:	subs	r9, r0, #0
   10ddc:	beq	10dec <__snprintf_chk@plt+0x3e0>
   10de0:	bl	109f4 <xcb_connection_has_error@plt>
   10de4:	cmp	r0, #0
   10de8:	beq	10db4 <__snprintf_chk@plt+0x3a8>
   10dec:	ldr	r1, [pc, #68]	; 10e38 <__snprintf_chk@plt+0x42c>
   10df0:	ldr	r2, [r8, #4]
   10df4:	ldr	r3, [r8]
   10df8:	ldr	r0, [r1]
   10dfc:	str	r2, [sp]
   10e00:	mov	r1, #1
   10e04:	ldr	r2, [pc, #84]	; 10e60 <__snprintf_chk@plt+0x454>
   10e08:	bl	109c4 <__fprintf_chk@plt>
   10e0c:	mov	r0, #1
   10e10:	bl	10994 <exit@plt>
   10e14:	ldr	r0, [pc, #72]	; 10e64 <__snprintf_chk@plt+0x458>
   10e18:	bl	1094c <getenv@plt>
   10e1c:	cmp	r0, #0
   10e20:	strne	r0, [r8, #4]
   10e24:	ldreq	r3, [pc, #60]	; 10e68 <__snprintf_chk@plt+0x45c>
   10e28:	streq	r3, [r8, #4]
   10e2c:	b	10dcc <__snprintf_chk@plt+0x3c0>
   10e30:	andeq	r2, r2, ip, lsl #1
   10e34:	andeq	r1, r1, r0, ror #7
   10e38:	andeq	r2, r2, r0, lsl #1
   10e3c:	andeq	r1, r1, ip, ror r4
   10e40:	andeq	r1, r1, r0, ror #8
   10e44:	andeq	r1, r1, ip, ror #8
   10e48:	andeq	r1, r1, r8, ror #7
   10e4c:	andeq	r1, r1, r8, lsl #8
   10e50:	andeq	r1, r1, r4, asr #8
   10e54:	andeq	r1, r1, r8, lsr #8
   10e58:	andeq	r1, r1, r8, asr #9
   10e5c:	andeq	r2, r2, r4, lsl #1
   10e60:	andeq	r1, r1, r4, lsr #9
   10e64:	muleq	r1, ip, r4
   10e68:	andeq	r1, r1, r8, asr r2
   10e6c:	mov	fp, #0
   10e70:	mov	lr, #0
   10e74:	pop	{r1}		; (ldr r1, [sp], #4)
   10e78:	mov	r2, sp
   10e7c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e80:	push	{r0}		; (str r0, [sp, #-4]!)
   10e84:	ldr	ip, [pc, #16]	; 10e9c <__snprintf_chk@plt+0x490>
   10e88:	push	{ip}		; (str ip, [sp, #-4]!)
   10e8c:	ldr	r0, [pc, #12]	; 10ea0 <__snprintf_chk@plt+0x494>
   10e90:	ldr	r3, [pc, #12]	; 10ea4 <__snprintf_chk@plt+0x498>
   10e94:	bl	10970 <__libc_start_main@plt>
   10e98:	bl	10a00 <abort@plt>
   10e9c:	andeq	r1, r1, r0, asr #4
   10ea0:	andeq	r0, r1, r8, lsl sl
   10ea4:	andeq	r1, r1, r0, ror #3
   10ea8:	ldr	r3, [pc, #20]	; 10ec4 <__snprintf_chk@plt+0x4b8>
   10eac:	ldr	r2, [pc, #20]	; 10ec8 <__snprintf_chk@plt+0x4bc>
   10eb0:	add	r3, pc, r3
   10eb4:	ldr	r2, [r3, r2]
   10eb8:	cmp	r2, #0
   10ebc:	bxeq	lr
   10ec0:	b	10988 <__gmon_start__@plt>
   10ec4:	andeq	r1, r1, r8, asr #2
   10ec8:	andeq	r0, r0, r0, ror r0
   10ecc:	ldr	r0, [pc, #24]	; 10eec <__snprintf_chk@plt+0x4e0>
   10ed0:	ldr	r3, [pc, #24]	; 10ef0 <__snprintf_chk@plt+0x4e4>
   10ed4:	cmp	r3, r0
   10ed8:	bxeq	lr
   10edc:	ldr	r3, [pc, #16]	; 10ef4 <__snprintf_chk@plt+0x4e8>
   10ee0:	cmp	r3, #0
   10ee4:	bxeq	lr
   10ee8:	bx	r3
   10eec:	andeq	r2, r2, ip, ror r0
   10ef0:	andeq	r2, r2, ip, ror r0
   10ef4:	andeq	r0, r0, r0
   10ef8:	ldr	r0, [pc, #36]	; 10f24 <__snprintf_chk@plt+0x518>
   10efc:	ldr	r1, [pc, #36]	; 10f28 <__snprintf_chk@plt+0x51c>
   10f00:	sub	r1, r1, r0
   10f04:	asr	r1, r1, #2
   10f08:	add	r1, r1, r1, lsr #31
   10f0c:	asrs	r1, r1, #1
   10f10:	bxeq	lr
   10f14:	ldr	r3, [pc, #16]	; 10f2c <__snprintf_chk@plt+0x520>
   10f18:	cmp	r3, #0
   10f1c:	bxeq	lr
   10f20:	bx	r3
   10f24:	andeq	r2, r2, ip, ror r0
   10f28:	andeq	r2, r2, ip, ror r0
   10f2c:	andeq	r0, r0, r0
   10f30:	push	{r4, lr}
   10f34:	ldr	r4, [pc, #24]	; 10f54 <__snprintf_chk@plt+0x548>
   10f38:	ldrb	r3, [r4]
   10f3c:	cmp	r3, #0
   10f40:	popne	{r4, pc}
   10f44:	bl	10ecc <__snprintf_chk@plt+0x4c0>
   10f48:	mov	r3, #1
   10f4c:	strb	r3, [r4]
   10f50:	pop	{r4, pc}
   10f54:	andeq	r2, r2, r8, lsl #1
   10f58:	b	10ef8 <__snprintf_chk@plt+0x4ec>
   10f5c:	cmp	r0, #0
   10f60:	push	{lr}		; (str lr, [sp, #-4]!)
   10f64:	sub	sp, sp, #12
   10f68:	ldr	r5, [pc, #64]	; 10fb0 <__snprintf_chk@plt+0x5a4>
   10f6c:	ldr	r4, [pc, #64]	; 10fb4 <__snprintf_chk@plt+0x5a8>
   10f70:	beq	10f8c <__snprintf_chk@plt+0x580>
   10f74:	str	r0, [sp]
   10f78:	ldr	r3, [r5]
   10f7c:	ldr	r0, [r4]
   10f80:	ldr	r2, [pc, #48]	; 10fb8 <__snprintf_chk@plt+0x5ac>
   10f84:	mov	r1, #1
   10f88:	bl	109c4 <__fprintf_chk@plt>
   10f8c:	ldr	r2, [pc, #40]	; 10fbc <__snprintf_chk@plt+0x5b0>
   10f90:	ldr	r3, [r5]
   10f94:	str	r2, [sp]
   10f98:	ldr	r0, [r4]
   10f9c:	ldr	r2, [pc, #28]	; 10fc0 <__snprintf_chk@plt+0x5b4>
   10fa0:	mov	r1, #1
   10fa4:	bl	109c4 <__fprintf_chk@plt>
   10fa8:	mov	r0, #1
   10fac:	bl	10994 <exit@plt>
   10fb0:	andeq	r2, r2, ip, lsl #1
   10fb4:	andeq	r2, r2, r0, lsl #1
   10fb8:	andeq	r1, r1, r0, asr r2
   10fbc:	andeq	r1, r1, ip, ror r2
   10fc0:	andeq	r1, r1, ip, asr r2
   10fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fc8:	sub	sp, sp, #1040	; 0x410
   10fcc:	sub	sp, sp, #12
   10fd0:	mov	r7, r0
   10fd4:	ldr	r0, [pc, #264]	; 110e4 <__snprintf_chk@plt+0x6d8>
   10fd8:	ldr	r9, [sp, #1088]	; 0x440
   10fdc:	ldr	r0, [r0]
   10fe0:	cmp	r9, #0
   10fe4:	str	r0, [sp, #1044]	; 0x414
   10fe8:	movle	r9, #0
   10fec:	ble	110bc <__snprintf_chk@plt+0x6b0>
   10ff0:	mov	sl, r1
   10ff4:	mov	r4, r2
   10ff8:	mov	r6, r3
   10ffc:	add	r9, r2, r9, lsl #2
   11000:	mov	r8, r3
   11004:	mov	r5, r2
   11008:	mov	r1, r8
   1100c:	mov	r0, r7
   11010:	bl	108ec <xcb_get_atom_name@plt>
   11014:	add	r8, r8, #1
   11018:	str	r0, [r5], #4
   1101c:	cmp	r5, r9
   11020:	bne	11008 <__snprintf_chk@plt+0x5fc>
   11024:	mov	r9, #0
   11028:	add	r2, sp, #16
   1102c:	ldr	r1, [r4]
   11030:	mov	r0, r7
   11034:	bl	10934 <xcb_get_atom_name_reply@plt>
   11038:	subs	r8, r0, #0
   1103c:	beq	11098 <__snprintf_chk@plt+0x68c>
   11040:	ldrh	fp, [r8, #8]
   11044:	bl	1097c <xcb_get_atom_name_name@plt>
   11048:	ldr	r2, [pc, #152]	; 110e8 <__snprintf_chk@plt+0x6dc>
   1104c:	mov	r3, #1024	; 0x400
   11050:	mov	r1, r3
   11054:	str	r2, [sp]
   11058:	str	fp, [sp, #4]
   1105c:	mov	r2, #1
   11060:	str	r0, [sp, #8]
   11064:	add	r0, sp, #20
   11068:	bl	10a0c <__snprintf_chk@plt>
   1106c:	add	r3, sp, #20
   11070:	mov	r2, r6
   11074:	mov	r1, sl
   11078:	mov	r0, #1
   1107c:	bl	109b8 <__printf_chk@plt>
   11080:	ldr	r3, [pc, #100]	; 110ec <__snprintf_chk@plt+0x6e0>
   11084:	mov	r0, #10
   11088:	ldr	r1, [r3]
   1108c:	bl	10940 <_IO_putc@plt>
   11090:	mov	r0, r8
   11094:	bl	10910 <free@plt>
   11098:	ldr	r0, [sp, #16]
   1109c:	cmp	r0, #0
   110a0:	beq	110ac <__snprintf_chk@plt+0x6a0>
   110a4:	bl	10910 <free@plt>
   110a8:	mov	r9, #1
   110ac:	add	r4, r4, #4
   110b0:	cmp	r5, r4
   110b4:	add	r6, r6, #1
   110b8:	bne	11028 <__snprintf_chk@plt+0x61c>
   110bc:	ldr	r3, [pc, #32]	; 110e4 <__snprintf_chk@plt+0x6d8>
   110c0:	ldr	r2, [sp, #1044]	; 0x414
   110c4:	mov	r0, r9
   110c8:	ldr	r3, [r3]
   110cc:	cmp	r2, r3
   110d0:	bne	110e0 <__snprintf_chk@plt+0x6d4>
   110d4:	add	sp, sp, #1040	; 0x410
   110d8:	add	sp, sp, #12
   110dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110e0:	bl	10928 <__stack_chk_fail@plt>
   110e4:	andeq	r1, r2, r0, lsl #30
   110e8:	andeq	r1, r1, r0, lsr #7
   110ec:	andeq	r2, r2, r4, lsl #1
   110f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   110f4:	sub	sp, sp, #12
   110f8:	cmp	r2, #2
   110fc:	mov	r4, r3
   11100:	mov	r5, r0
   11104:	mov	r6, r1
   11108:	ldr	r3, [sp, #40]	; 0x28
   1110c:	beq	11168 <__snprintf_chk@plt+0x75c>
   11110:	cmp	r2, #3
   11114:	beq	1116c <__snprintf_chk@plt+0x760>
   11118:	cmp	r2, #1
   1111c:	mov	r0, #400	; 0x190
   11120:	movne	r4, #1
   11124:	bl	10964 <malloc@plt>
   11128:	subs	r7, r0, #0
   1112c:	movne	r8, #100	; 0x64
   11130:	beq	111cc <__snprintf_chk@plt+0x7c0>
   11134:	mov	r3, r4
   11138:	str	r8, [sp]
   1113c:	mov	r2, r7
   11140:	mov	r1, r6
   11144:	mov	r0, r5
   11148:	bl	10fc4 <__snprintf_chk@plt+0x5b8>
   1114c:	add	r4, r4, #100	; 0x64
   11150:	cmp	r0, #0
   11154:	beq	11134 <__snprintf_chk@plt+0x728>
   11158:	mov	r0, r7
   1115c:	add	sp, sp, #12
   11160:	pop	{r4, r5, r6, r7, r8, r9, lr}
   11164:	b	10910 <free@plt>
   11168:	mov	r4, #1
   1116c:	sub	r7, r3, r4
   11170:	add	r8, r7, #1
   11174:	lsl	r0, r8, #2
   11178:	bl	10964 <malloc@plt>
   1117c:	subs	r9, r0, #0
   11180:	beq	111ac <__snprintf_chk@plt+0x7a0>
   11184:	str	r8, [sp]
   11188:	mov	r3, r4
   1118c:	mov	r1, r6
   11190:	mov	r0, r5
   11194:	mov	r2, r9
   11198:	bl	10fc4 <__snprintf_chk@plt+0x5b8>
   1119c:	mov	r0, r9
   111a0:	add	sp, sp, #12
   111a4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   111a8:	b	10910 <free@plt>
   111ac:	ldr	r1, [pc, #36]	; 111d8 <__snprintf_chk@plt+0x7cc>
   111b0:	mov	r3, r7
   111b4:	ldr	r0, [r1]
   111b8:	ldr	r2, [pc, #28]	; 111dc <__snprintf_chk@plt+0x7d0>
   111bc:	mov	r1, #1
   111c0:	add	sp, sp, #12
   111c4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   111c8:	b	109c4 <__fprintf_chk@plt>
   111cc:	ldr	r1, [pc, #4]	; 111d8 <__snprintf_chk@plt+0x7cc>
   111d0:	mov	r3, #100	; 0x64
   111d4:	b	111b4 <__snprintf_chk@plt+0x7a8>
   111d8:	andeq	r2, r2, r0, lsl #1
   111dc:	andeq	r1, r1, r8, lsr #7
   111e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111e4:	mov	r7, r0
   111e8:	ldr	r6, [pc, #72]	; 11238 <__snprintf_chk@plt+0x82c>
   111ec:	ldr	r5, [pc, #72]	; 1123c <__snprintf_chk@plt+0x830>
   111f0:	add	r6, pc, r6
   111f4:	add	r5, pc, r5
   111f8:	sub	r6, r6, r5
   111fc:	mov	r8, r1
   11200:	mov	r9, r2
   11204:	bl	108cc <_init@@Base>
   11208:	asrs	r6, r6, #2
   1120c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11210:	mov	r4, #0
   11214:	add	r4, r4, #1
   11218:	ldr	r3, [r5], #4
   1121c:	mov	r2, r9
   11220:	mov	r1, r8
   11224:	mov	r0, r7
   11228:	blx	r3
   1122c:	cmp	r6, r4
   11230:	bne	11214 <__snprintf_chk@plt+0x808>
   11234:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11238:	andeq	r0, r1, r4, lsl #26
   1123c:	strdeq	r0, [r1], -ip
   11240:	bx	lr

Disassembly of section .fini:

00011244 <_fini@@Base>:
   11244:	push	{r3, lr}
   11248:	pop	{r3, pc}
