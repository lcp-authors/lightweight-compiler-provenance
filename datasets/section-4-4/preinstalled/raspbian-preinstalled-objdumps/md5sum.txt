
raspbian-preinstalled/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d64 <.init>:
   10d64:	push	{r3, lr}
   10d68:	bl	121d0 <dcngettext@plt+0x11b8>
   10d6c:	pop	{r3, pc}

Disassembly of section .plt:

00010d70 <fdopen@plt-0x14>:
   10d70:	push	{lr}		; (str lr, [sp, #-4]!)
   10d74:	ldr	lr, [pc, #4]	; 10d80 <fdopen@plt-0x4>
   10d78:	add	lr, pc, lr
   10d7c:	ldr	pc, [lr, #8]!
   10d80:	andeq	r7, r1, r0, lsl #5

00010d84 <fdopen@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #94208	; 0x17000
   10d8c:	ldr	pc, [ip, #640]!	; 0x280

00010d90 <calloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #632]!	; 0x278

00010d9c <fputs_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #624]!	; 0x270

00010da8 <raise@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #616]!	; 0x268

00010db4 <__getdelim@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #608]!	; 0x260

00010dc0 <strcmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #600]!	; 0x258

00010dcc <posix_fadvise64@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #592]!	; 0x250

00010dd8 <fflush@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #584]!	; 0x248

00010de4 <free@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #576]!	; 0x240

00010df0 <_exit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #568]!	; 0x238

00010dfc <memcpy@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #560]!	; 0x230

00010e08 <mbsinit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #552]!	; 0x228

00010e14 <fwrite_unlocked@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #544]!	; 0x220

00010e20 <memcmp@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #536]!	; 0x218

00010e2c <dcgettext@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #528]!	; 0x210

00010e38 <__stack_chk_fail@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #520]!	; 0x208

00010e44 <realloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #512]!	; 0x200

00010e50 <textdomain@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #504]!	; 0x1f8

00010e5c <iswprint@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #496]!	; 0x1f0

00010e68 <fwrite@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #488]!	; 0x1e8

00010e74 <lseek64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e80 <__ctype_get_mb_cur_max@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #472]!	; 0x1d8

00010e8c <__fpending@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #464]!	; 0x1d0

00010e98 <mbrtowc@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea4 <error@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #440]!	; 0x1b8

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed4 <__ctype_tolower_loc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee0 <__gmon_start__@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #408]!	; 0x198

00010eec <getopt_long@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #400]!	; 0x190

00010ef8 <__ctype_b_loc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #392]!	; 0x188

00010f04 <exit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #384]!	; 0x180

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #376]!	; 0x178

00010f1c <strchr@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #368]!	; 0x170

00010f28 <__errno_location@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #360]!	; 0x168

00010f34 <__cxa_atexit@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #352]!	; 0x160

00010f40 <setvbuf@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #344]!	; 0x158

00010f4c <memset@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #336]!	; 0x150

00010f58 <__printf_chk@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #328]!	; 0x148

00010f64 <fileno@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #320]!	; 0x140

00010f70 <__fprintf_chk@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #312]!	; 0x138

00010f7c <fclose@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #304]!	; 0x130

00010f88 <fseeko64@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #296]!	; 0x128

00010f94 <fcntl64@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #288]!	; 0x120

00010fa0 <__overflow@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #280]!	; 0x118

00010fac <setlocale@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #272]!	; 0x110

00010fb8 <strrchr@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #264]!	; 0x108

00010fc4 <nl_langinfo@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #256]!	; 0x100

00010fd0 <fopen64@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #248]!	; 0xf8

00010fdc <bindtextdomain@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #240]!	; 0xf0

00010fe8 <fread_unlocked@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #232]!	; 0xe8

00010ff4 <strncmp@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #224]!	; 0xe0

00011000 <abort@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #216]!	; 0xd8

0001100c <close@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #208]!	; 0xd0

00011018 <dcngettext@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #200]!	; 0xc8

Disassembly of section .text:

00011024 <.text>:
   11024:	ldr	r3, [pc, #4072]	; 12014 <dcngettext@plt+0xffc>
   11028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1102c:	sub	sp, sp, #164	; 0xa4
   11030:	ldr	r3, [r3]
   11034:	mov	r7, r0
   11038:	ldr	r0, [r1]
   1103c:	str	r3, [sp, #156]	; 0x9c
   11040:	mov	r6, r1
   11044:	bl	13a34 <dcngettext@plt+0x2a1c>
   11048:	ldr	r1, [pc, #4040]	; 12018 <dcngettext@plt+0x1000>
   1104c:	mov	r0, #6
   11050:	bl	10fac <setlocale@plt>
   11054:	ldr	r1, [pc, #4032]	; 1201c <dcngettext@plt+0x1004>
   11058:	ldr	r0, [pc, #4032]	; 12020 <dcngettext@plt+0x1008>
   1105c:	bl	10fdc <bindtextdomain@plt>
   11060:	ldr	r0, [pc, #4024]	; 12020 <dcngettext@plt+0x1008>
   11064:	bl	10e50 <textdomain@plt>
   11068:	ldr	r0, [pc, #4020]	; 12024 <dcngettext@plt+0x100c>
   1106c:	bl	16ce0 <dcngettext@plt+0x5cc8>
   11070:	ldr	r2, [pc, #4016]	; 12028 <dcngettext@plt+0x1010>
   11074:	ldr	r9, [pc, #4016]	; 1202c <dcngettext@plt+0x1014>
   11078:	ldr	r8, [pc, #4016]	; 12030 <dcngettext@plt+0x1018>
   1107c:	ldr	fp, [pc, #4016]	; 12034 <dcngettext@plt+0x101c>
   11080:	ldr	sl, [pc, #4016]	; 12038 <dcngettext@plt+0x1020>
   11084:	mov	r3, #0
   11088:	mvn	r5, #0
   1108c:	ldr	r0, [r2]
   11090:	mov	r4, r3
   11094:	mov	r1, r3
   11098:	mov	r2, #1
   1109c:	str	r3, [sp, #36]	; 0x24
   110a0:	bl	10f40 <setvbuf@plt>
   110a4:	str	r4, [sp, #32]
   110a8:	mov	r4, #0
   110ac:	str	r4, [sp]
   110b0:	mov	r3, r9
   110b4:	mov	r2, r8
   110b8:	mov	r1, r6
   110bc:	mov	r0, r7
   110c0:	bl	10eec <getopt_long@plt>
   110c4:	cmn	r0, #1
   110c8:	beq	11218 <dcngettext@plt+0x200>
   110cc:	cmp	r0, #119	; 0x77
   110d0:	beq	111e8 <dcngettext@plt+0x1d0>
   110d4:	ble	11108 <dcngettext@plt+0xf0>
   110d8:	cmp	r0, fp
   110dc:	beq	11200 <dcngettext@plt+0x1e8>
   110e0:	ble	11140 <dcngettext@plt+0x128>
   110e4:	cmp	r0, sl
   110e8:	beq	111d8 <dcngettext@plt+0x1c0>
   110ec:	bge	11128 <dcngettext@plt+0x110>
   110f0:	ldr	r2, [pc, #3908]	; 1203c <dcngettext@plt+0x1024>
   110f4:	mov	r3, #1
   110f8:	strb	r4, [r2, #6]
   110fc:	strb	r4, [r2, #7]
   11100:	strb	r3, [r2, #8]
   11104:	b	110a8 <dcngettext@plt+0x90>
   11108:	cmp	r0, #98	; 0x62
   1110c:	beq	111d0 <dcngettext@plt+0x1b8>
   11110:	ble	11164 <dcngettext@plt+0x14c>
   11114:	cmp	r0, #99	; 0x63
   11118:	bne	11154 <dcngettext@plt+0x13c>
   1111c:	mov	r3, #1
   11120:	str	r3, [sp, #32]
   11124:	b	110a8 <dcngettext@plt+0x90>
   11128:	cmp	r0, #260	; 0x104
   1112c:	bne	112bc <dcngettext@plt+0x2a4>
   11130:	mov	r3, #1
   11134:	str	r3, [sp, #36]	; 0x24
   11138:	mov	r5, r3
   1113c:	b	110a8 <dcngettext@plt+0x90>
   11140:	cmp	r0, #122	; 0x7a
   11144:	bne	111a8 <dcngettext@plt+0x190>
   11148:	ldr	r3, [pc, #3824]	; 12040 <dcngettext@plt+0x1028>
   1114c:	strb	r4, [r3]
   11150:	b	110a8 <dcngettext@plt+0x90>
   11154:	cmp	r0, #116	; 0x74
   11158:	bne	112bc <dcngettext@plt+0x2a4>
   1115c:	mov	r5, r4
   11160:	b	110a8 <dcngettext@plt+0x90>
   11164:	cmn	r0, #3
   11168:	bne	111c0 <dcngettext@plt+0x1a8>
   1116c:	ldr	ip, [pc, #3792]	; 12044 <dcngettext@plt+0x102c>
   11170:	ldr	r1, [pc, #3792]	; 12048 <dcngettext@plt+0x1030>
   11174:	ldr	r3, [pc, #3792]	; 1204c <dcngettext@plt+0x1034>
   11178:	ldr	r0, [pc, #3752]	; 12028 <dcngettext@plt+0x1010>
   1117c:	ldr	r2, [pc, #3788]	; 12050 <dcngettext@plt+0x1038>
   11180:	str	r4, [sp, #12]
   11184:	ldr	r0, [r0]
   11188:	ldr	r3, [r3]
   1118c:	stmib	sp, {r1, ip}
   11190:	str	r2, [sp]
   11194:	ldr	r1, [pc, #3768]	; 12054 <dcngettext@plt+0x103c>
   11198:	ldr	r2, [pc, #3768]	; 12058 <dcngettext@plt+0x1040>
   1119c:	bl	16110 <dcngettext@plt+0x50f8>
   111a0:	mov	r0, r4
   111a4:	bl	10f04 <exit@plt>
   111a8:	cmp	r0, #256	; 0x100
   111ac:	bne	112bc <dcngettext@plt+0x2a4>
   111b0:	ldr	r2, [pc, #3716]	; 1203c <dcngettext@plt+0x1024>
   111b4:	mov	r3, #1
   111b8:	strb	r3, [r2, #5]
   111bc:	b	110a8 <dcngettext@plt+0x90>
   111c0:	cmn	r0, #2
   111c4:	bne	112bc <dcngettext@plt+0x2a4>
   111c8:	mov	r0, r4
   111cc:	bl	125c8 <dcngettext@plt+0x15b0>
   111d0:	mov	r5, #1
   111d4:	b	110a8 <dcngettext@plt+0x90>
   111d8:	ldr	r2, [pc, #3676]	; 1203c <dcngettext@plt+0x1024>
   111dc:	mov	r3, #1
   111e0:	strb	r3, [r2, #9]
   111e4:	b	110a8 <dcngettext@plt+0x90>
   111e8:	ldr	r2, [pc, #3660]	; 1203c <dcngettext@plt+0x1024>
   111ec:	mov	r3, #1
   111f0:	strb	r4, [r2, #6]
   111f4:	strb	r4, [r2, #8]
   111f8:	strb	r3, [r2, #7]
   111fc:	b	110a8 <dcngettext@plt+0x90>
   11200:	ldr	r2, [pc, #3636]	; 1203c <dcngettext@plt+0x1024>
   11204:	mov	r3, #1
   11208:	strb	r4, [r2, #7]
   1120c:	strb	r4, [r2, #8]
   11210:	strb	r3, [r2, #6]
   11214:	b	110a8 <dcngettext@plt+0x90>
   11218:	ldr	sl, [pc, #3612]	; 1203c <dcngettext@plt+0x1024>
   1121c:	ldr	r8, [sp, #36]	; 0x24
   11220:	cmp	r5, r4
   11224:	mov	r3, #34	; 0x22
   11228:	movne	r8, r4
   1122c:	str	r3, [sl, #12]
   11230:	cmp	r8, r4
   11234:	mov	r3, #32
   11238:	str	r3, [sl]
   1123c:	bne	12188 <dcngettext@plt+0x1170>
   11240:	ldr	r3, [pc, #3576]	; 12040 <dcngettext@plt+0x1028>
   11244:	ldrb	r3, [r3]
   11248:	cmp	r3, #10
   1124c:	ldr	r3, [sp, #32]
   11250:	beq	112c4 <dcngettext@plt+0x2ac>
   11254:	cmp	r3, #0
   11258:	movne	r2, #5
   1125c:	ldrne	r1, [pc, #3576]	; 1205c <dcngettext@plt+0x1044>
   11260:	bne	12140 <dcngettext@plt+0x1128>
   11264:	ldrb	r3, [sl, #5]
   11268:	cmp	r3, #0
   1126c:	bne	12138 <dcngettext@plt+0x1120>
   11270:	ldrb	r3, [sl, #6]
   11274:	cmp	r3, #0
   11278:	bne	1217c <dcngettext@plt+0x1164>
   1127c:	ldrb	r3, [sl, #7]
   11280:	cmp	r3, #0
   11284:	bne	11fa4 <dcngettext@plt+0xf8c>
   11288:	ldrb	r3, [sl, #8]
   1128c:	ldr	r2, [sp, #32]
   11290:	eor	r3, r3, #1
   11294:	orrs	r4, r2, r3
   11298:	moveq	r2, #5
   1129c:	ldreq	r1, [pc, #3516]	; 12060 <dcngettext@plt+0x1048>
   112a0:	bne	1131c <dcngettext@plt+0x304>
   112a4:	mov	r0, r4
   112a8:	bl	10e2c <dcgettext@plt>
   112ac:	mov	r1, r4
   112b0:	mov	r2, r0
   112b4:	mov	r0, r4
   112b8:	bl	10ea4 <error@plt>
   112bc:	mov	r0, #1
   112c0:	bl	125c8 <dcngettext@plt+0x15b0>
   112c4:	ldr	r2, [sp, #36]	; 0x24
   112c8:	ands	r4, r3, r2
   112cc:	movne	r2, #5
   112d0:	ldrne	r1, [pc, #3468]	; 12064 <dcngettext@plt+0x104c>
   112d4:	bne	12140 <dcngettext@plt+0x1128>
   112d8:	ldr	r3, [sp, #32]
   112dc:	cmp	r5, #0
   112e0:	movlt	r3, #0
   112e4:	andge	r3, r3, #1
   112e8:	cmp	r3, #0
   112ec:	movne	r2, #5
   112f0:	ldrne	r1, [pc, #3440]	; 12068 <dcngettext@plt+0x1050>
   112f4:	bne	112a4 <dcngettext@plt+0x28c>
   112f8:	ldrb	r3, [sl, #5]
   112fc:	cmp	r3, #0
   11300:	beq	12164 <dcngettext@plt+0x114c>
   11304:	ldr	r3, [sp, #32]
   11308:	cmp	r3, #0
   1130c:	beq	12138 <dcngettext@plt+0x1120>
   11310:	ldrb	r3, [sl, #7]
   11314:	cmp	r3, #0
   11318:	bne	11338 <dcngettext@plt+0x320>
   1131c:	ldrb	r2, [sl, #9]
   11320:	ldr	r3, [sp, #32]
   11324:	eor	r3, r3, #1
   11328:	tst	r2, r3
   1132c:	movne	r2, #5
   11330:	ldrne	r1, [pc, #3380]	; 1206c <dcngettext@plt+0x1054>
   11334:	bne	12140 <dcngettext@plt+0x1128>
   11338:	ldr	r3, [pc, #3376]	; 12070 <dcngettext@plt+0x1058>
   1133c:	cmn	r5, #1
   11340:	add	r2, r6, r7, lsl #2
   11344:	ldr	r3, [r3]
   11348:	moveq	r5, #0
   1134c:	cmp	r3, r7
   11350:	str	r2, [sp, #80]	; 0x50
   11354:	addeq	r2, r2, #4
   11358:	streq	r2, [sp, #80]	; 0x50
   1135c:	ldreq	r2, [pc, #3344]	; 12074 <dcngettext@plt+0x105c>
   11360:	streq	r2, [r6, r7, lsl #2]
   11364:	add	r6, r6, r3, lsl #2
   11368:	ldr	r3, [sp, #80]	; 0x50
   1136c:	cmp	r3, r6
   11370:	bls	120ec <dcngettext@plt+0x10d4>
   11374:	cmp	r5, #0
   11378:	movne	r3, #42	; 0x2a
   1137c:	moveq	r3, #32
   11380:	str	r3, [sp, #100]	; 0x64
   11384:	uxtb	r3, r3
   11388:	str	r3, [sp, #96]	; 0x60
   1138c:	mov	r3, #1
   11390:	str	r6, [sp, #52]	; 0x34
   11394:	str	r3, [sp, #72]	; 0x48
   11398:	ldr	r3, [sp, #32]
   1139c:	cmp	r3, #0
   113a0:	ldr	r3, [sp, #52]	; 0x34
   113a4:	ldr	r0, [r3], #4
   113a8:	str	r0, [sp, #48]	; 0x30
   113ac:	str	r3, [sp, #52]	; 0x34
   113b0:	beq	11a04 <dcngettext@plt+0x9ec>
   113b4:	ldr	r1, [pc, #3256]	; 12074 <dcngettext@plt+0x105c>
   113b8:	bl	10dc0 <strcmp@plt>
   113bc:	subs	r3, r0, #0
   113c0:	str	r3, [sp, #56]	; 0x38
   113c4:	bne	11ad8 <dcngettext@plt+0xac0>
   113c8:	mov	r3, #1
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #3232]	; 12078 <dcngettext@plt+0x1060>
   113d4:	strb	r3, [sl, #4]
   113d8:	bl	10e2c <dcgettext@plt>
   113dc:	ldr	r3, [pc, #3224]	; 1207c <dcngettext@plt+0x1064>
   113e0:	ldr	r9, [r3]
   113e4:	str	r0, [sp, #48]	; 0x30
   113e8:	mov	r3, #0
   113ec:	mov	r0, #0
   113f0:	mov	r1, #0
   113f4:	mov	r2, r0
   113f8:	mov	fp, r3
   113fc:	str	r3, [sp, #84]	; 0x54
   11400:	str	r3, [sp, #108]	; 0x6c
   11404:	str	r3, [sp, #112]	; 0x70
   11408:	mov	r3, r1
   1140c:	strd	r0, [sp, #64]	; 0x40
   11410:	strd	r2, [sp, #40]	; 0x28
   11414:	strd	r2, [sp, #24]
   11418:	mov	r2, #1
   1141c:	mov	r3, #0
   11420:	strd	r2, [sp, #16]
   11424:	mov	r3, r9
   11428:	mov	r2, #10
   1142c:	add	r1, sp, #112	; 0x70
   11430:	add	r0, sp, #108	; 0x6c
   11434:	bl	10db4 <__getdelim@plt>
   11438:	subs	r7, r0, #0
   1143c:	ble	1171c <dcngettext@plt+0x704>
   11440:	ldr	r4, [sp, #108]	; 0x6c
   11444:	ldrb	r3, [r4]
   11448:	cmp	r3, #35	; 0x23
   1144c:	beq	1150c <dcngettext@plt+0x4f4>
   11450:	add	r2, r4, r7
   11454:	ldrb	r2, [r2, #-1]
   11458:	cmp	r2, #10
   1145c:	subeq	r7, r7, #1
   11460:	moveq	r3, #0
   11464:	strbeq	r3, [r4, r7]
   11468:	ldreq	r4, [sp, #108]	; 0x6c
   1146c:	ldrbeq	r3, [r4]
   11470:	cmp	r3, #32
   11474:	cmpne	r3, #9
   11478:	moveq	r8, #1
   1147c:	movne	r8, #0
   11480:	bne	114a0 <dcngettext@plt+0x488>
   11484:	mov	r2, r4
   11488:	rsb	r1, r4, #1
   1148c:	add	r8, r1, r2
   11490:	ldrb	r3, [r2, #1]!
   11494:	cmp	r3, #9
   11498:	cmpne	r3, #32
   1149c:	beq	1148c <dcngettext@plt+0x474>
   114a0:	cmp	r3, #92	; 0x5c
   114a4:	addeq	r8, r8, #1
   114a8:	add	r6, r4, r8
   114ac:	mov	r0, r6
   114b0:	mov	r2, #3
   114b4:	ldr	r1, [pc, #3012]	; 12080 <dcngettext@plt+0x1068>
   114b8:	ldreq	r5, [sp, #32]
   114bc:	movne	r5, #0
   114c0:	bl	10ff4 <strncmp@plt>
   114c4:	cmp	r0, #0
   114c8:	bne	11578 <dcngettext@plt+0x560>
   114cc:	add	r3, r8, #3
   114d0:	ldrb	r2, [r4, r3]
   114d4:	cmp	r2, #32
   114d8:	addeq	r3, r8, #4
   114dc:	ldrbeq	r2, [r4, r3]
   114e0:	cmp	r2, #40	; 0x28
   114e4:	beq	11a68 <dcngettext@plt+0xa50>
   114e8:	ldr	r2, [sp, #24]
   114ec:	ldrb	r3, [sl, #7]
   114f0:	adds	r2, r2, #1
   114f4:	str	r2, [sp, #24]
   114f8:	ldr	r2, [sp, #28]
   114fc:	adc	r2, r2, #0
   11500:	cmp	r3, #0
   11504:	str	r2, [sp, #28]
   11508:	bne	118b8 <dcngettext@plt+0x8a0>
   1150c:	ldr	r3, [r9]
   11510:	ands	r3, r3, #48	; 0x30
   11514:	bne	1171c <dcngettext@plt+0x704>
   11518:	ldr	r2, [sp, #16]
   1151c:	adds	r2, r2, #1
   11520:	str	r2, [sp, #16]
   11524:	ldr	r2, [sp, #20]
   11528:	adc	r2, r2, #0
   1152c:	str	r2, [sp, #20]
   11530:	ldrd	r0, [sp, #16]
   11534:	orrs	r2, r0, r1
   11538:	bne	11424 <dcngettext@plt+0x40c>
   1153c:	mov	r0, r3
   11540:	mov	r2, #5
   11544:	ldr	r1, [pc, #2872]	; 12084 <dcngettext@plt+0x106c>
   11548:	mov	r4, r3
   1154c:	bl	10e2c <dcgettext@plt>
   11550:	ldr	r2, [sp, #48]	; 0x30
   11554:	mov	r1, #3
   11558:	mov	r5, r0
   1155c:	mov	r0, r4
   11560:	bl	15acc <dcngettext@plt+0x4ab4>
   11564:	mov	r2, r5
   11568:	mov	r1, r4
   1156c:	mov	r3, r0
   11570:	mov	r0, #1
   11574:	bl	10ea4 <error@plt>
   11578:	ldrb	r1, [r4, r8]
   1157c:	ldr	r3, [sl, #12]
   11580:	sub	r2, r7, r8
   11584:	cmp	r1, #92	; 0x5c
   11588:	addeq	r3, r3, #1
   1158c:	cmp	r2, r3
   11590:	bcc	114e8 <dcngettext@plt+0x4d0>
   11594:	ldr	r3, [sl]
   11598:	add	r8, r8, r3
   1159c:	ldrb	r3, [r4, r8]
   115a0:	cmp	r3, #32
   115a4:	cmpne	r3, #9
   115a8:	movne	r3, #1
   115ac:	moveq	r3, #0
   115b0:	bne	114e8 <dcngettext@plt+0x4d0>
   115b4:	strb	r3, [r4, r8]
   115b8:	mov	r0, r6
   115bc:	bl	12284 <dcngettext@plt+0x126c>
   115c0:	cmp	r0, #0
   115c4:	beq	114e8 <dcngettext@plt+0x4d0>
   115c8:	add	r1, r8, #1
   115cc:	sub	r3, r7, r1
   115d0:	cmp	r3, #1
   115d4:	ldr	r3, [pc, #2660]	; 12040 <dcngettext@plt+0x1028>
   115d8:	ldr	r2, [r3, #4]
   115dc:	beq	11ac0 <dcngettext@plt+0xaa8>
   115e0:	ldrb	r3, [r4, r1]
   115e4:	cmp	r3, #32
   115e8:	cmpne	r3, #42	; 0x2a
   115ec:	movne	r3, #1
   115f0:	moveq	r3, #0
   115f4:	bne	11ac0 <dcngettext@plt+0xaa8>
   115f8:	cmp	r2, #1
   115fc:	addne	r1, r8, #2
   11600:	ldrne	r2, [pc, #2616]	; 12040 <dcngettext@plt+0x1028>
   11604:	strne	r3, [r2, #4]
   11608:	cmp	r5, #0
   1160c:	add	r4, r4, r1
   11610:	bne	11d40 <dcngettext@plt+0xd28>
   11614:	ldr	r3, [sp, #56]	; 0x38
   11618:	cmp	r3, #0
   1161c:	bne	11634 <dcngettext@plt+0x61c>
   11620:	ldr	r1, [pc, #2636]	; 12074 <dcngettext@plt+0x105c>
   11624:	mov	r0, r4
   11628:	bl	10dc0 <strcmp@plt>
   1162c:	cmp	r0, #0
   11630:	beq	114e8 <dcngettext@plt+0x4d0>
   11634:	ldrb	r7, [sl, #6]
   11638:	cmp	r7, #0
   1163c:	movne	r7, #0
   11640:	strne	r7, [sp, #60]	; 0x3c
   11644:	bne	1166c <dcngettext@plt+0x654>
   11648:	mov	r1, #10
   1164c:	mov	r0, r4
   11650:	bl	10f1c <strchr@plt>
   11654:	ldr	r3, [sp, #32]
   11658:	cmp	r0, #0
   1165c:	movne	r7, r3
   11660:	moveq	r3, #0
   11664:	movne	r3, #1
   11668:	str	r3, [sp, #60]	; 0x3c
   1166c:	add	r2, sp, #107	; 0x6b
   11670:	add	r1, sp, #136	; 0x88
   11674:	mov	r0, r4
   11678:	bl	12434 <dcngettext@plt+0x141c>
   1167c:	subs	r3, r0, #0
   11680:	str	r3, [sp, #76]	; 0x4c
   11684:	bne	11904 <dcngettext@plt+0x8ec>
   11688:	ldr	r2, [sp, #40]	; 0x28
   1168c:	ldrb	r3, [sl, #6]
   11690:	adds	r2, r2, #1
   11694:	str	r2, [sp, #40]	; 0x28
   11698:	ldr	r2, [sp, #44]	; 0x2c
   1169c:	adc	r2, r2, #0
   116a0:	cmp	r3, #0
   116a4:	str	r2, [sp, #44]	; 0x2c
   116a8:	bne	1170c <dcngettext@plt+0x6f4>
   116ac:	ldr	r3, [sp, #60]	; 0x3c
   116b0:	cmp	r3, #0
   116b4:	beq	116e0 <dcngettext@plt+0x6c8>
   116b8:	ldr	r3, [pc, #2408]	; 12028 <dcngettext@plt+0x1010>
   116bc:	ldr	r0, [r3]
   116c0:	ldr	r3, [r0, #20]
   116c4:	ldr	r2, [r0, #24]
   116c8:	cmp	r3, r2
   116cc:	addcc	r1, r3, #1
   116d0:	movcc	r2, #92	; 0x5c
   116d4:	strcc	r1, [r0, #20]
   116d8:	strbcc	r2, [r3]
   116dc:	bcs	12008 <dcngettext@plt+0xff0>
   116e0:	mov	r1, r7
   116e4:	mov	r0, r4
   116e8:	bl	12374 <dcngettext@plt+0x135c>
   116ec:	ldr	r1, [pc, #2452]	; 12088 <dcngettext@plt+0x1070>
   116f0:	mov	r2, #5
   116f4:	mov	r0, #0
   116f8:	bl	10e2c <dcgettext@plt>
   116fc:	ldr	r1, [pc, #2440]	; 1208c <dcngettext@plt+0x1074>
   11700:	mov	r2, r0
   11704:	mov	r0, #1
   11708:	bl	10f58 <__printf_chk@plt>
   1170c:	ldr	r3, [r9]
   11710:	ldr	fp, [sp, #32]
   11714:	ands	r3, r3, #48	; 0x30
   11718:	beq	11518 <dcngettext@plt+0x500>
   1171c:	ldr	r0, [sp, #108]	; 0x6c
   11720:	bl	10de4 <free@plt>
   11724:	ldr	r4, [r9]
   11728:	ands	r4, r4, #32
   1172c:	bne	11d58 <dcngettext@plt+0xd40>
   11730:	ldr	r3, [sp, #56]	; 0x38
   11734:	cmp	r3, #0
   11738:	bne	11cbc <dcngettext@plt+0xca4>
   1173c:	cmp	fp, #0
   11740:	beq	11cfc <dcngettext@plt+0xce4>
   11744:	ldrb	r3, [sl, #6]
   11748:	cmp	r3, #0
   1174c:	bne	11b20 <dcngettext@plt+0xb08>
   11750:	ldrd	r0, [sp, #24]
   11754:	orrs	r3, r0, r1
   11758:	beq	117a4 <dcngettext@plt+0x78c>
   1175c:	mov	r3, #0
   11760:	cmp	r1, r3
   11764:	mvn	r2, #0
   11768:	cmpeq	r0, r2
   1176c:	ldrls	r3, [sp, #24]
   11770:	bhi	11f8c <dcngettext@plt+0xf74>
   11774:	mov	r2, #5
   11778:	str	r2, [sp]
   1177c:	ldr	r1, [pc, #2316]	; 12090 <dcngettext@plt+0x1078>
   11780:	ldr	r2, [pc, #2316]	; 12094 <dcngettext@plt+0x107c>
   11784:	mov	r0, #0
   11788:	bl	11018 <dcngettext@plt>
   1178c:	ldrd	r2, [sp, #24]
   11790:	mov	r1, #0
   11794:	strd	r2, [sp]
   11798:	mov	r2, r0
   1179c:	mov	r0, r1
   117a0:	bl	10ea4 <error@plt>
   117a4:	ldrd	r0, [sp, #40]	; 0x28
   117a8:	orrs	r3, r0, r1
   117ac:	beq	117f8 <dcngettext@plt+0x7e0>
   117b0:	mov	r3, #0
   117b4:	cmp	r1, r3
   117b8:	mvn	r2, #0
   117bc:	cmpeq	r0, r2
   117c0:	ldrls	r3, [sp, #40]	; 0x28
   117c4:	bhi	11f74 <dcngettext@plt+0xf5c>
   117c8:	mov	r2, #5
   117cc:	str	r2, [sp]
   117d0:	ldr	r1, [pc, #2240]	; 12098 <dcngettext@plt+0x1080>
   117d4:	ldr	r2, [pc, #2240]	; 1209c <dcngettext@plt+0x1084>
   117d8:	mov	r0, #0
   117dc:	bl	11018 <dcngettext@plt>
   117e0:	ldrd	r2, [sp, #40]	; 0x28
   117e4:	mov	r1, #0
   117e8:	strd	r2, [sp]
   117ec:	mov	r2, r0
   117f0:	mov	r0, r1
   117f4:	bl	10ea4 <error@plt>
   117f8:	ldrd	r0, [sp, #64]	; 0x40
   117fc:	orrs	r3, r0, r1
   11800:	beq	1184c <dcngettext@plt+0x834>
   11804:	mov	r3, #0
   11808:	cmp	r1, r3
   1180c:	mvn	r2, #0
   11810:	cmpeq	r0, r2
   11814:	ldrls	r3, [sp, #64]	; 0x40
   11818:	bhi	11f5c <dcngettext@plt+0xf44>
   1181c:	mov	r2, #5
   11820:	str	r2, [sp]
   11824:	ldr	r1, [pc, #2164]	; 120a0 <dcngettext@plt+0x1088>
   11828:	ldr	r2, [pc, #2164]	; 120a4 <dcngettext@plt+0x108c>
   1182c:	mov	r0, #0
   11830:	bl	11018 <dcngettext@plt>
   11834:	ldrd	r2, [sp, #64]	; 0x40
   11838:	mov	r1, #0
   1183c:	strd	r2, [sp]
   11840:	mov	r2, r0
   11844:	mov	r0, r1
   11848:	bl	10ea4 <error@plt>
   1184c:	ldrb	r3, [sl, #5]
   11850:	cmp	r3, #0
   11854:	beq	11b20 <dcngettext@plt+0xb08>
   11858:	ldr	r3, [sp, #84]	; 0x54
   1185c:	cmp	r3, #0
   11860:	beq	11fc0 <dcngettext@plt+0xfa8>
   11864:	ldrd	r2, [sp, #64]	; 0x40
   11868:	ldrd	r0, [sp, #40]	; 0x28
   1186c:	mov	lr, r2
   11870:	orr	ip, r0, r2
   11874:	orr	r3, r1, r3
   11878:	str	ip, [sp, #88]	; 0x58
   1187c:	str	r3, [sp, #92]	; 0x5c
   11880:	ldrd	r2, [sp, #88]	; 0x58
   11884:	orrs	r3, r2, r3
   11888:	bne	118a4 <dcngettext@plt+0x88c>
   1188c:	ldrd	r2, [sp, #24]
   11890:	ldrb	r4, [sl, #9]
   11894:	mov	r1, r2
   11898:	orrs	r3, r1, r3
   1189c:	eor	r4, r4, #1
   118a0:	orreq	r4, r4, #1
   118a4:	and	r4, r4, #1
   118a8:	ldr	r3, [sp, #72]	; 0x48
   118ac:	and	r3, r3, r4
   118b0:	str	r3, [sp, #72]	; 0x48
   118b4:	b	11a24 <dcngettext@plt+0xa0c>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #2020]	; 120a8 <dcngettext@plt+0x1090>
   118c0:	mov	r0, #0
   118c4:	bl	10e2c <dcgettext@plt>
   118c8:	ldr	r2, [sp, #48]	; 0x30
   118cc:	mov	r1, #3
   118d0:	mov	r4, r0
   118d4:	mov	r0, #0
   118d8:	bl	15acc <dcngettext@plt+0x4ab4>
   118dc:	mov	r2, r4
   118e0:	ldrd	r4, [sp, #16]
   118e4:	ldr	r3, [pc, #1940]	; 12080 <dcngettext@plt+0x1068>
   118e8:	mov	r1, #0
   118ec:	str	r3, [sp, #8]
   118f0:	strd	r4, [sp]
   118f4:	mov	r3, r0
   118f8:	mov	r0, r1
   118fc:	bl	10ea4 <error@plt>
   11900:	b	1150c <dcngettext@plt+0x4f4>
   11904:	ldrb	r3, [sl, #5]
   11908:	cmp	r3, #0
   1190c:	beq	1191c <dcngettext@plt+0x904>
   11910:	ldrb	r3, [sp, #107]	; 0x6b
   11914:	cmp	r3, #0
   11918:	bne	1170c <dcngettext@plt+0x6f4>
   1191c:	ldr	r8, [sl]
   11920:	lsrs	r8, r8, #1
   11924:	beq	11c80 <dcngettext@plt+0xc68>
   11928:	bl	10ed4 <__ctype_tolower_loc@plt>
   1192c:	mov	r5, #0
   11930:	ldr	ip, [pc, #1908]	; 120ac <dcngettext@plt+0x1094>
   11934:	add	r2, sp, #135	; 0x87
   11938:	add	lr, r6, #1
   1193c:	ldr	r1, [r0]
   11940:	b	1196c <dcngettext@plt+0x954>
   11944:	and	r3, r3, #15
   11948:	ldrb	r0, [lr, r5, lsl #1]
   1194c:	add	r3, ip, r3
   11950:	ldrb	r3, [r3, #264]	; 0x108
   11954:	ldr	r0, [r1, r0, lsl #2]
   11958:	cmp	r0, r3
   1195c:	bne	11988 <dcngettext@plt+0x970>
   11960:	add	r5, r5, #1
   11964:	cmp	r8, r5
   11968:	beq	11c80 <dcngettext@plt+0xc68>
   1196c:	ldrb	r3, [r2, #1]!
   11970:	ldrb	fp, [r6, r5, lsl #1]
   11974:	add	r0, ip, r3, lsr #4
   11978:	ldr	fp, [r1, fp, lsl #2]
   1197c:	ldrb	r0, [r0, #264]	; 0x108
   11980:	cmp	fp, r0
   11984:	beq	11944 <dcngettext@plt+0x92c>
   11988:	ldr	r2, [sp, #64]	; 0x40
   1198c:	ldrb	r3, [sl, #6]
   11990:	adds	r2, r2, #1
   11994:	str	r2, [sp, #64]	; 0x40
   11998:	ldr	r2, [sp, #68]	; 0x44
   1199c:	adc	r2, r2, #0
   119a0:	cmp	r3, #0
   119a4:	str	r2, [sp, #68]	; 0x44
   119a8:	bne	1170c <dcngettext@plt+0x6f4>
   119ac:	ldr	r3, [sp, #60]	; 0x3c
   119b0:	cmp	r3, #0
   119b4:	beq	119e0 <dcngettext@plt+0x9c8>
   119b8:	ldr	r3, [pc, #1640]	; 12028 <dcngettext@plt+0x1010>
   119bc:	ldr	r0, [r3]
   119c0:	ldr	r3, [r0, #20]
   119c4:	ldr	r2, [r0, #24]
   119c8:	cmp	r3, r2
   119cc:	addcc	r1, r3, #1
   119d0:	movcc	r2, #92	; 0x5c
   119d4:	strcc	r1, [r0, #20]
   119d8:	strbcc	r2, [r3]
   119dc:	bcs	120f8 <dcngettext@plt+0x10e0>
   119e0:	mov	r1, r7
   119e4:	mov	r0, r4
   119e8:	bl	12374 <dcngettext@plt+0x135c>
   119ec:	cmp	r8, r5
   119f0:	beq	11e4c <dcngettext@plt+0xe34>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #1712]	; 120b0 <dcngettext@plt+0x1098>
   119fc:	mov	r0, #0
   11a00:	b	116f8 <dcngettext@plt+0x6e0>
   11a04:	add	r4, sp, #116	; 0x74
   11a08:	mov	r1, r4
   11a0c:	add	r2, sp, #112	; 0x70
   11a10:	ldr	r0, [sp, #48]	; 0x30
   11a14:	bl	12434 <dcngettext@plt+0x141c>
   11a18:	subs	r5, r0, #0
   11a1c:	bne	11b30 <dcngettext@plt+0xb18>
   11a20:	str	r5, [sp, #72]	; 0x48
   11a24:	ldr	r3, [sp, #80]	; 0x50
   11a28:	ldr	r2, [sp, #52]	; 0x34
   11a2c:	cmp	r3, r2
   11a30:	bhi	11398 <dcngettext@plt+0x380>
   11a34:	ldrb	r3, [sl, #4]
   11a38:	cmp	r3, #0
   11a3c:	bne	11e94 <dcngettext@plt+0xe7c>
   11a40:	ldr	r3, [pc, #1484]	; 12014 <dcngettext@plt+0xffc>
   11a44:	ldr	r1, [sp, #72]	; 0x48
   11a48:	ldr	r2, [sp, #156]	; 0x9c
   11a4c:	ldr	r3, [r3]
   11a50:	eor	r0, r1, #1
   11a54:	cmp	r2, r3
   11a58:	uxtb	r0, r0
   11a5c:	bne	12160 <dcngettext@plt+0x1148>
   11a60:	add	sp, sp, #164	; 0xa4
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a68:	add	r3, r3, #1
   11a6c:	subs	r7, r7, r3
   11a70:	beq	114e8 <dcngettext@plt+0x4d0>
   11a74:	subs	r7, r7, #1
   11a78:	add	r4, r4, r3
   11a7c:	beq	11aa8 <dcngettext@plt+0xa90>
   11a80:	ldrb	r2, [r4, r7]
   11a84:	add	r3, r4, r7
   11a88:	cmp	r2, #41	; 0x29
   11a8c:	bne	11aa0 <dcngettext@plt+0xa88>
   11a90:	b	11bec <dcngettext@plt+0xbd4>
   11a94:	ldrb	r2, [r3, #-1]!
   11a98:	cmp	r2, #41	; 0x29
   11a9c:	beq	11be8 <dcngettext@plt+0xbd0>
   11aa0:	subs	r7, r7, #1
   11aa4:	bne	11a94 <dcngettext@plt+0xa7c>
   11aa8:	ldrb	r3, [r4]
   11aac:	cmp	r3, #41	; 0x29
   11ab0:	bne	114e8 <dcngettext@plt+0x4d0>
   11ab4:	mov	r6, r4
   11ab8:	mov	r7, #0
   11abc:	b	11bf0 <dcngettext@plt+0xbd8>
   11ac0:	cmp	r2, #0
   11ac4:	beq	114e8 <dcngettext@plt+0x4d0>
   11ac8:	ldr	r2, [pc, #1392]	; 12040 <dcngettext@plt+0x1028>
   11acc:	mov	r3, #1
   11ad0:	str	r3, [r2, #4]
   11ad4:	b	11608 <dcngettext@plt+0x5f0>
   11ad8:	ldr	r1, [pc, #1492]	; 120b4 <dcngettext@plt+0x109c>
   11adc:	ldr	r0, [sp, #48]	; 0x30
   11ae0:	bl	1399c <dcngettext@plt+0x2984>
   11ae4:	subs	r9, r0, #0
   11ae8:	bne	113e8 <dcngettext@plt+0x3d0>
   11aec:	bl	10f28 <__errno_location@plt>
   11af0:	ldr	r2, [sp, #48]	; 0x30
   11af4:	mov	r1, #3
   11af8:	ldr	r4, [r0]
   11afc:	mov	r0, r9
   11b00:	bl	15acc <dcngettext@plt+0x4ab4>
   11b04:	mov	r1, r4
   11b08:	ldr	r2, [pc, #1448]	; 120b8 <dcngettext@plt+0x10a0>
   11b0c:	mov	r4, r9
   11b10:	mov	r3, r0
   11b14:	mov	r0, r9
   11b18:	bl	10ea4 <error@plt>
   11b1c:	b	118a8 <dcngettext@plt+0x890>
   11b20:	ldr	r3, [sp, #84]	; 0x54
   11b24:	cmp	r3, #0
   11b28:	bne	11864 <dcngettext@plt+0x84c>
   11b2c:	b	118a4 <dcngettext@plt+0x88c>
   11b30:	mov	r1, #92	; 0x5c
   11b34:	ldr	r0, [sp, #48]	; 0x30
   11b38:	bl	10f1c <strchr@plt>
   11b3c:	cmp	r0, #0
   11b40:	beq	11e7c <dcngettext@plt+0xe64>
   11b44:	ldr	r3, [pc, #1268]	; 12040 <dcngettext@plt+0x1028>
   11b48:	ldrb	r3, [r3]
   11b4c:	cmp	r3, #10
   11b50:	beq	11d98 <dcngettext@plt+0xd80>
   11b54:	ldr	r3, [sp, #36]	; 0x24
   11b58:	cmp	r3, #0
   11b5c:	bne	12000 <dcngettext@plt+0xfe8>
   11b60:	ldr	r3, [sl]
   11b64:	ldr	r5, [sp, #36]	; 0x24
   11b68:	lsrs	r3, r3, #1
   11b6c:	beq	11dd8 <dcngettext@plt+0xdc0>
   11b70:	ldr	r6, [pc, #1348]	; 120bc <dcngettext@plt+0x10a4>
   11b74:	add	r7, sp, #115	; 0x73
   11b78:	ldrb	r2, [r7, #1]
   11b7c:	mov	r1, r6
   11b80:	mov	r0, #1
   11b84:	bl	10f58 <__printf_chk@plt>
   11b88:	ldr	r2, [sl]
   11b8c:	add	r3, r7, #2
   11b90:	sub	r3, r3, r4
   11b94:	cmp	r3, r2, lsr #1
   11b98:	add	r7, r7, #1
   11b9c:	bcc	11b78 <dcngettext@plt+0xb60>
   11ba0:	ldr	r3, [sp, #36]	; 0x24
   11ba4:	cmp	r3, #0
   11ba8:	beq	11dd8 <dcngettext@plt+0xdc0>
   11bac:	ldr	r3, [pc, #1140]	; 12028 <dcngettext@plt+0x1010>
   11bb0:	ldr	r0, [r3]
   11bb4:	ldr	r3, [pc, #1156]	; 12040 <dcngettext@plt+0x1028>
   11bb8:	ldr	r2, [r0, #24]
   11bbc:	ldrb	r1, [r3]
   11bc0:	ldr	r3, [r0, #20]
   11bc4:	cmp	r3, r2
   11bc8:	addcc	r2, r3, #1
   11bcc:	strcc	r2, [r0, #20]
   11bd0:	ldrcc	r5, [sp, #72]	; 0x48
   11bd4:	strbcc	r1, [r3]
   11bd8:	bcc	11a20 <dcngettext@plt+0xa08>
   11bdc:	bl	10fa0 <__overflow@plt>
   11be0:	ldr	r5, [sp, #72]	; 0x48
   11be4:	b	11a20 <dcngettext@plt+0xa08>
   11be8:	add	r3, r4, r7
   11bec:	mov	r6, r3
   11bf0:	cmp	r5, #0
   11bf4:	bne	11e64 <dcngettext@plt+0xe4c>
   11bf8:	add	r7, r7, #1
   11bfc:	mov	r3, #0
   11c00:	strb	r3, [r6]
   11c04:	ldrb	r3, [r4, r7]
   11c08:	add	r2, r4, r7
   11c0c:	cmp	r3, #32
   11c10:	cmpne	r3, #9
   11c14:	rsbeq	r1, r4, #1
   11c18:	bne	11c30 <dcngettext@plt+0xc18>
   11c1c:	add	r7, r1, r2
   11c20:	ldrb	r3, [r2, #1]!
   11c24:	cmp	r3, #9
   11c28:	cmpne	r3, #32
   11c2c:	beq	11c1c <dcngettext@plt+0xc04>
   11c30:	cmp	r3, #61	; 0x3d
   11c34:	bne	114e8 <dcngettext@plt+0x4d0>
   11c38:	add	r3, r7, #1
   11c3c:	add	r6, r4, r3
   11c40:	ldrb	r3, [r4, r3]
   11c44:	cmp	r3, #9
   11c48:	cmpne	r3, #32
   11c4c:	bne	11c6c <dcngettext@plt+0xc54>
   11c50:	add	r7, r7, #2
   11c54:	add	r3, r4, r7
   11c58:	mov	r6, r3
   11c5c:	ldrb	r2, [r3], #1
   11c60:	cmp	r2, #9
   11c64:	cmpne	r2, #32
   11c68:	beq	11c58 <dcngettext@plt+0xc40>
   11c6c:	mov	r0, r6
   11c70:	bl	12284 <dcngettext@plt+0x126c>
   11c74:	cmp	r0, #0
   11c78:	bne	11614 <dcngettext@plt+0x5fc>
   11c7c:	b	114e8 <dcngettext@plt+0x4d0>
   11c80:	ldrb	r3, [sl, #6]
   11c84:	mov	r5, r8
   11c88:	cmp	r3, #0
   11c8c:	str	r3, [sp, #84]	; 0x54
   11c90:	bne	1170c <dcngettext@plt+0x6f4>
   11c94:	ldrb	r3, [sl, #8]
   11c98:	cmp	r3, #0
   11c9c:	str	r3, [sp, #84]	; 0x54
   11ca0:	bne	1170c <dcngettext@plt+0x6f4>
   11ca4:	ldr	r3, [sp, #60]	; 0x3c
   11ca8:	cmp	r3, #0
   11cac:	beq	11e38 <dcngettext@plt+0xe20>
   11cb0:	ldr	r3, [sp, #76]	; 0x4c
   11cb4:	str	r3, [sp, #84]	; 0x54
   11cb8:	b	119b8 <dcngettext@plt+0x9a0>
   11cbc:	mov	r0, r9
   11cc0:	bl	1649c <dcngettext@plt+0x5484>
   11cc4:	cmp	r0, #0
   11cc8:	beq	1173c <dcngettext@plt+0x724>
   11ccc:	bl	10f28 <__errno_location@plt>
   11cd0:	ldr	r2, [sp, #48]	; 0x30
   11cd4:	mov	r1, #3
   11cd8:	ldr	r5, [r0]
   11cdc:	mov	r0, r4
   11ce0:	bl	15acc <dcngettext@plt+0x4ab4>
   11ce4:	mov	r1, r5
   11ce8:	ldr	r2, [pc, #968]	; 120b8 <dcngettext@plt+0x10a0>
   11cec:	mov	r3, r0
   11cf0:	mov	r0, r4
   11cf4:	bl	10ea4 <error@plt>
   11cf8:	b	118a8 <dcngettext@plt+0x890>
   11cfc:	mov	r2, #5
   11d00:	ldr	r1, [pc, #952]	; 120c0 <dcngettext@plt+0x10a8>
   11d04:	mov	r0, fp
   11d08:	bl	10e2c <dcgettext@plt>
   11d0c:	ldr	r2, [sp, #48]	; 0x30
   11d10:	mov	r1, #3
   11d14:	mov	r5, r0
   11d18:	mov	r0, fp
   11d1c:	bl	15acc <dcngettext@plt+0x4ab4>
   11d20:	ldr	r3, [pc, #856]	; 12080 <dcngettext@plt+0x1068>
   11d24:	mov	r2, r5
   11d28:	str	r3, [sp]
   11d2c:	mov	r1, fp
   11d30:	mov	r3, r0
   11d34:	mov	r0, fp
   11d38:	bl	10ea4 <error@plt>
   11d3c:	b	118a4 <dcngettext@plt+0x88c>
   11d40:	sub	r1, r7, r1
   11d44:	mov	r0, r4
   11d48:	bl	122e0 <dcngettext@plt+0x12c8>
   11d4c:	adds	r0, r0, #0
   11d50:	movne	r0, #1
   11d54:	b	11c74 <dcngettext@plt+0xc5c>
   11d58:	mov	r2, #5
   11d5c:	ldr	r1, [pc, #864]	; 120c4 <dcngettext@plt+0x10ac>
   11d60:	mov	r0, #0
   11d64:	bl	10e2c <dcgettext@plt>
   11d68:	ldr	r2, [sp, #48]	; 0x30
   11d6c:	mov	r1, #3
   11d70:	mov	r4, r0
   11d74:	mov	r0, #0
   11d78:	bl	15acc <dcngettext@plt+0x4ab4>
   11d7c:	mov	r1, #0
   11d80:	mov	r2, r4
   11d84:	mov	r4, #0
   11d88:	mov	r3, r0
   11d8c:	mov	r0, r1
   11d90:	bl	10ea4 <error@plt>
   11d94:	b	118a8 <dcngettext@plt+0x890>
   11d98:	ldr	r3, [sp, #36]	; 0x24
   11d9c:	cmp	r3, #0
   11da0:	bne	11ed0 <dcngettext@plt+0xeb8>
   11da4:	ldr	r3, [pc, #636]	; 12028 <dcngettext@plt+0x1010>
   11da8:	ldr	r0, [r3]
   11dac:	ldr	r3, [r0, #20]
   11db0:	ldr	r2, [r0, #24]
   11db4:	cmp	r3, r2
   11db8:	addcc	r1, r3, #1
   11dbc:	movcc	r2, #92	; 0x5c
   11dc0:	strcc	r1, [r0, #20]
   11dc4:	strbcc	r2, [r3]
   11dc8:	bcs	1211c <dcngettext@plt+0x1104>
   11dcc:	ldr	r3, [sl]
   11dd0:	lsrs	r3, r3, #1
   11dd4:	bne	11b70 <dcngettext@plt+0xb58>
   11dd8:	ldr	r3, [pc, #584]	; 12028 <dcngettext@plt+0x1010>
   11ddc:	ldr	r0, [r3]
   11de0:	ldr	r3, [r0, #20]
   11de4:	ldr	r2, [r0, #24]
   11de8:	cmp	r3, r2
   11dec:	addcc	r1, r3, #1
   11df0:	movcc	r2, #32
   11df4:	strcc	r1, [r0, #20]
   11df8:	strbcc	r2, [r3]
   11dfc:	bcs	12104 <dcngettext@plt+0x10ec>
   11e00:	ldr	r3, [pc, #544]	; 12028 <dcngettext@plt+0x1010>
   11e04:	ldr	r0, [r3]
   11e08:	ldr	r2, [r0, #24]
   11e0c:	ldr	r3, [r0, #20]
   11e10:	cmp	r3, r2
   11e14:	addcc	r2, r3, #1
   11e18:	strcc	r2, [r0, #20]
   11e1c:	ldrcc	r2, [sp, #96]	; 0x60
   11e20:	strbcc	r2, [r3]
   11e24:	bcs	12110 <dcngettext@plt+0x10f8>
   11e28:	mov	r1, r5
   11e2c:	ldr	r0, [sp, #48]	; 0x30
   11e30:	bl	12374 <dcngettext@plt+0x135c>
   11e34:	b	11bac <dcngettext@plt+0xb94>
   11e38:	mov	r1, r7
   11e3c:	mov	r0, r4
   11e40:	bl	12374 <dcngettext@plt+0x135c>
   11e44:	ldr	r3, [sp, #76]	; 0x4c
   11e48:	str	r3, [sp, #84]	; 0x54
   11e4c:	ldrb	r0, [sl, #8]
   11e50:	cmp	r0, #0
   11e54:	bne	1170c <dcngettext@plt+0x6f4>
   11e58:	mov	r2, #5
   11e5c:	ldr	r1, [pc, #612]	; 120c8 <dcngettext@plt+0x10b0>
   11e60:	b	116f8 <dcngettext@plt+0x6e0>
   11e64:	mov	r1, r7
   11e68:	mov	r0, r4
   11e6c:	bl	122e0 <dcngettext@plt+0x12c8>
   11e70:	cmp	r0, #0
   11e74:	bne	11bf8 <dcngettext@plt+0xbe0>
   11e78:	b	114e8 <dcngettext@plt+0x4d0>
   11e7c:	mov	r1, #10
   11e80:	ldr	r0, [sp, #48]	; 0x30
   11e84:	bl	10f1c <strchr@plt>
   11e88:	cmp	r0, #0
   11e8c:	bne	11b44 <dcngettext@plt+0xb2c>
   11e90:	b	11b54 <dcngettext@plt+0xb3c>
   11e94:	ldr	r3, [pc, #480]	; 1207c <dcngettext@plt+0x1064>
   11e98:	ldr	r0, [r3]
   11e9c:	bl	1649c <dcngettext@plt+0x5484>
   11ea0:	cmn	r0, #1
   11ea4:	bne	11a40 <dcngettext@plt+0xa28>
   11ea8:	bl	10f28 <__errno_location@plt>
   11eac:	mov	r2, #5
   11eb0:	ldr	r1, [pc, #448]	; 12078 <dcngettext@plt+0x1060>
   11eb4:	ldr	r4, [r0]
   11eb8:	mov	r0, #0
   11ebc:	bl	10e2c <dcgettext@plt>
   11ec0:	mov	r1, r4
   11ec4:	mov	r2, r0
   11ec8:	mov	r0, #1
   11ecc:	bl	10ea4 <error@plt>
   11ed0:	ldr	r3, [pc, #336]	; 12028 <dcngettext@plt+0x1010>
   11ed4:	ldr	r0, [r3]
   11ed8:	ldr	r3, [r0, #20]
   11edc:	ldr	r2, [r0, #24]
   11ee0:	cmp	r3, r2
   11ee4:	bcs	12128 <dcngettext@plt+0x1110>
   11ee8:	ldr	r5, [sp, #36]	; 0x24
   11eec:	add	r1, r3, #1
   11ef0:	mov	r2, #92	; 0x5c
   11ef4:	str	r1, [r0, #20]
   11ef8:	strb	r2, [r3]
   11efc:	ldr	r3, [pc, #292]	; 12028 <dcngettext@plt+0x1010>
   11f00:	mov	r2, #3
   11f04:	mov	r6, r3
   11f08:	mov	r1, #1
   11f0c:	ldr	r3, [r3]
   11f10:	ldr	r0, [pc, #360]	; 12080 <dcngettext@plt+0x1068>
   11f14:	bl	10e14 <fwrite_unlocked@plt>
   11f18:	ldr	r3, [r6]
   11f1c:	mov	r2, #2
   11f20:	mov	r1, #1
   11f24:	ldr	r0, [pc, #416]	; 120cc <dcngettext@plt+0x10b4>
   11f28:	bl	10e14 <fwrite_unlocked@plt>
   11f2c:	mov	r1, r5
   11f30:	ldr	r0, [sp, #48]	; 0x30
   11f34:	bl	12374 <dcngettext@plt+0x135c>
   11f38:	ldr	r3, [r6]
   11f3c:	mov	r2, #4
   11f40:	mov	r1, #1
   11f44:	ldr	r0, [pc, #388]	; 120d0 <dcngettext@plt+0x10b8>
   11f48:	bl	10e14 <fwrite_unlocked@plt>
   11f4c:	ldr	r3, [sl]
   11f50:	lsrs	r3, r3, #1
   11f54:	bne	11b70 <dcngettext@plt+0xb58>
   11f58:	b	11ba0 <dcngettext@plt+0xb88>
   11f5c:	ldr	r2, [pc, #368]	; 120d4 <dcngettext@plt+0x10bc>
   11f60:	mov	r3, #0
   11f64:	bl	16b08 <dcngettext@plt+0x5af0>
   11f68:	add	r3, r2, #999424	; 0xf4000
   11f6c:	add	r3, r3, #576	; 0x240
   11f70:	b	1181c <dcngettext@plt+0x804>
   11f74:	ldr	r2, [pc, #344]	; 120d4 <dcngettext@plt+0x10bc>
   11f78:	mov	r3, #0
   11f7c:	bl	16b08 <dcngettext@plt+0x5af0>
   11f80:	add	r3, r2, #999424	; 0xf4000
   11f84:	add	r3, r3, #576	; 0x240
   11f88:	b	117c8 <dcngettext@plt+0x7b0>
   11f8c:	ldr	r2, [pc, #320]	; 120d4 <dcngettext@plt+0x10bc>
   11f90:	mov	r3, #0
   11f94:	bl	16b08 <dcngettext@plt+0x5af0>
   11f98:	add	r3, r2, #999424	; 0xf4000
   11f9c:	add	r3, r3, #576	; 0x240
   11fa0:	b	11774 <dcngettext@plt+0x75c>
   11fa4:	ldr	r3, [sp, #32]
   11fa8:	cmp	r3, #0
   11fac:	moveq	r2, #5
   11fb0:	ldreq	r1, [pc, #288]	; 120d8 <dcngettext@plt+0x10c0>
   11fb4:	moveq	r4, r3
   11fb8:	bne	11338 <dcngettext@plt+0x320>
   11fbc:	b	112a4 <dcngettext@plt+0x28c>
   11fc0:	ldr	r6, [sp, #84]	; 0x54
   11fc4:	mov	r2, #5
   11fc8:	ldr	r1, [pc, #268]	; 120dc <dcngettext@plt+0x10c4>
   11fcc:	mov	r0, r6
   11fd0:	bl	10e2c <dcgettext@plt>
   11fd4:	ldr	r2, [sp, #48]	; 0x30
   11fd8:	mov	r1, #3
   11fdc:	mov	r5, r0
   11fe0:	mov	r0, r6
   11fe4:	bl	15acc <dcngettext@plt+0x4ab4>
   11fe8:	mov	r2, r5
   11fec:	mov	r1, r6
   11ff0:	mov	r3, r0
   11ff4:	mov	r0, r6
   11ff8:	bl	10ea4 <error@plt>
   11ffc:	b	118a4 <dcngettext@plt+0x88c>
   12000:	mov	r5, #0
   12004:	b	11efc <dcngettext@plt+0xee4>
   12008:	mov	r1, #92	; 0x5c
   1200c:	bl	10fa0 <__overflow@plt>
   12010:	b	116e0 <dcngettext@plt+0x6c8>
   12014:	andeq	r7, r2, r8, lsl #30
   12018:	andeq	r7, r1, ip, ror r3
   1201c:	andeq	r7, r1, ip, ror r4
   12020:	ldrdeq	r7, [r1], -r0
   12024:			; <UNDEFINED> instruction: 0x000129b0
   12028:	andeq	r8, r2, r4, ror #2
   1202c:	andeq	r6, r1, ip, lsr sp
   12030:	andeq	r7, r1, r0, asr #9
   12034:	andeq	r0, r0, r1, lsl #2
   12038:	andeq	r0, r0, r3, lsl #2
   1203c:	andeq	r8, r2, ip, ror #2
   12040:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   12044:	muleq	r1, r0, r4
   12048:	andeq	r7, r1, r0, lsr #9
   1204c:	andeq	r8, r2, r0, lsl #2
   12050:			; <UNDEFINED> instruction: 0x000174b0
   12054:	andeq	r6, r1, ip, lsr #28
   12058:	andeq	r7, r1, ip, asr #7
   1205c:	andeq	r7, r1, ip, ror #9
   12060:	andeq	r7, r1, r8, ror r6
   12064:	andeq	r7, r1, r8, lsr #10
   12068:	andeq	r7, r1, r4, ror #10
   1206c:			; <UNDEFINED> instruction: 0x000176b8
   12070:	andeq	r8, r2, r0, asr r1
   12074:	andeq	r6, r1, r4, lsr #28
   12078:	strdeq	r7, [r1], -r8
   1207c:	andeq	r8, r2, r0, ror #2
   12080:	andeq	r6, r1, r4, lsr #29
   12084:	andeq	r7, r1, r8, lsl #14
   12088:	andeq	r7, r1, r4, asr r7
   1208c:	andeq	r7, r1, r8, ror #14
   12090:	strdeq	r7, [r1], -r0
   12094:	andeq	r7, r1, r0, asr #15
   12098:	andeq	r7, r1, ip, asr #16
   1209c:	andeq	r7, r1, ip, lsl r8
   120a0:	andeq	r7, r1, r8, lsr #17
   120a4:	andeq	r7, r1, r8, ror r8
   120a8:	andeq	r7, r1, r4, lsr #14
   120ac:	andeq	r6, r1, r4, lsl #26
   120b0:	andeq	r7, r1, r0, ror r7
   120b4:	andeq	r6, r1, r8, lsr #28
   120b8:	strdeq	r7, [r1], -r0
   120bc:	strdeq	r7, [r1], -r4
   120c0:	andeq	r7, r1, ip, lsl #15
   120c4:	andeq	r7, r1, ip, ror r7
   120c8:	andeq	r7, r1, r8, ror r7
   120cc:	strdeq	r7, [r1], -ip
   120d0:	andeq	r7, r1, r0, lsl #18
   120d4:	andeq	r4, pc, r0, asr #4
   120d8:	andeq	r7, r1, r8, lsr r6
   120dc:	ldrdeq	r7, [r1], -r8
   120e0:			; <UNDEFINED> instruction: 0x000175b0
   120e4:	strdeq	r7, [r1], -r8
   120e8:	andeq	r7, r1, r8, asr #9
   120ec:	mov	r3, #1
   120f0:	str	r3, [sp, #72]	; 0x48
   120f4:	b	11a34 <dcngettext@plt+0xa1c>
   120f8:	mov	r1, #92	; 0x5c
   120fc:	bl	10fa0 <__overflow@plt>
   12100:	b	119e0 <dcngettext@plt+0x9c8>
   12104:	mov	r1, #32
   12108:	bl	10fa0 <__overflow@plt>
   1210c:	b	11e00 <dcngettext@plt+0xde8>
   12110:	ldr	r1, [sp, #100]	; 0x64
   12114:	bl	10fa0 <__overflow@plt>
   12118:	b	11e28 <dcngettext@plt+0xe10>
   1211c:	mov	r1, #92	; 0x5c
   12120:	bl	10fa0 <__overflow@plt>
   12124:	b	11dcc <dcngettext@plt+0xdb4>
   12128:	mov	r1, #92	; 0x5c
   1212c:	bl	10fa0 <__overflow@plt>
   12130:	ldr	r5, [sp, #36]	; 0x24
   12134:	b	11efc <dcngettext@plt+0xee4>
   12138:	ldr	r1, [pc, #-96]	; 120e0 <dcngettext@plt+0x10c8>
   1213c:	mov	r2, #5
   12140:	mov	r0, #0
   12144:	bl	10e2c <dcgettext@plt>
   12148:	mov	r1, #0
   1214c:	mov	r2, r0
   12150:	mov	r0, r1
   12154:	bl	10ea4 <error@plt>
   12158:	mov	r0, #1
   1215c:	bl	125c8 <dcngettext@plt+0x15b0>
   12160:	bl	10e38 <__stack_chk_fail@plt>
   12164:	ldrb	r3, [sl, #6]
   12168:	cmp	r3, #0
   1216c:	beq	1127c <dcngettext@plt+0x264>
   12170:	ldr	r3, [sp, #32]
   12174:	cmp	r3, #0
   12178:	bne	11310 <dcngettext@plt+0x2f8>
   1217c:	mov	r2, #5
   12180:	ldr	r1, [pc, #-164]	; 120e4 <dcngettext@plt+0x10cc>
   12184:	b	12140 <dcngettext@plt+0x1128>
   12188:	mov	r2, #5
   1218c:	ldr	r1, [pc, #-172]	; 120e8 <dcngettext@plt+0x10d0>
   12190:	b	112a4 <dcngettext@plt+0x28c>
   12194:	mov	fp, #0
   12198:	mov	lr, #0
   1219c:	pop	{r1}		; (ldr r1, [sp], #4)
   121a0:	mov	r2, sp
   121a4:	push	{r2}		; (str r2, [sp, #-4]!)
   121a8:	push	{r0}		; (str r0, [sp, #-4]!)
   121ac:	ldr	ip, [pc, #16]	; 121c4 <dcngettext@plt+0x11ac>
   121b0:	push	{ip}		; (str ip, [sp, #-4]!)
   121b4:	ldr	r0, [pc, #12]	; 121c8 <dcngettext@plt+0x11b0>
   121b8:	ldr	r3, [pc, #12]	; 121cc <dcngettext@plt+0x11b4>
   121bc:	bl	10ebc <__libc_start_main@plt>
   121c0:	bl	11000 <abort@plt>
   121c4:	ldrdeq	r6, [r1], -ip
   121c8:	andeq	r1, r1, r4, lsr #32
   121cc:	andeq	r6, r1, ip, ror ip
   121d0:	ldr	r3, [pc, #20]	; 121ec <dcngettext@plt+0x11d4>
   121d4:	ldr	r2, [pc, #20]	; 121f0 <dcngettext@plt+0x11d8>
   121d8:	add	r3, pc, r3
   121dc:	ldr	r2, [r3, r2]
   121e0:	cmp	r2, #0
   121e4:	bxeq	lr
   121e8:	b	10ee0 <__gmon_start__@plt>
   121ec:	andeq	r5, r1, r0, lsr #28
   121f0:	andeq	r0, r0, ip, ror #1
   121f4:	ldr	r0, [pc, #24]	; 12214 <dcngettext@plt+0x11fc>
   121f8:	ldr	r3, [pc, #24]	; 12218 <dcngettext@plt+0x1200>
   121fc:	cmp	r3, r0
   12200:	bxeq	lr
   12204:	ldr	r3, [pc, #16]	; 1221c <dcngettext@plt+0x1204>
   12208:	cmp	r3, #0
   1220c:	bxeq	lr
   12210:	bx	r3
   12214:	andeq	r8, r2, r8, asr #2
   12218:	andeq	r8, r2, r8, asr #2
   1221c:	andeq	r0, r0, r0
   12220:	ldr	r0, [pc, #36]	; 1224c <dcngettext@plt+0x1234>
   12224:	ldr	r1, [pc, #36]	; 12250 <dcngettext@plt+0x1238>
   12228:	sub	r1, r1, r0
   1222c:	asr	r1, r1, #2
   12230:	add	r1, r1, r1, lsr #31
   12234:	asrs	r1, r1, #1
   12238:	bxeq	lr
   1223c:	ldr	r3, [pc, #16]	; 12254 <dcngettext@plt+0x123c>
   12240:	cmp	r3, #0
   12244:	bxeq	lr
   12248:	bx	r3
   1224c:	andeq	r8, r2, r8, asr #2
   12250:	andeq	r8, r2, r8, asr #2
   12254:	andeq	r0, r0, r0
   12258:	push	{r4, lr}
   1225c:	ldr	r4, [pc, #24]	; 1227c <dcngettext@plt+0x1264>
   12260:	ldrb	r3, [r4]
   12264:	cmp	r3, #0
   12268:	popne	{r4, pc}
   1226c:	bl	121f4 <dcngettext@plt+0x11dc>
   12270:	mov	r3, #1
   12274:	strb	r3, [r4]
   12278:	pop	{r4, pc}
   1227c:	andeq	r8, r2, r8, ror #2
   12280:	b	12220 <dcngettext@plt+0x1208>
   12284:	ldr	r3, [pc, #80]	; 122dc <dcngettext@plt+0x12c4>
   12288:	push	{r4, r5, r6, lr}
   1228c:	mov	r5, r0
   12290:	ldr	r4, [r3]
   12294:	cmp	r4, #0
   12298:	beq	122cc <dcngettext@plt+0x12b4>
   1229c:	bl	10ef8 <__ctype_b_loc@plt>
   122a0:	mov	r3, r5
   122a4:	add	r1, r5, r4
   122a8:	ldr	ip, [r0]
   122ac:	ldrb	r2, [r3], #1
   122b0:	mov	r5, r3
   122b4:	lsl	r2, r2, #1
   122b8:	ldrh	r0, [ip, r2]
   122bc:	ands	r0, r0, #4096	; 0x1000
   122c0:	popeq	{r4, r5, r6, pc}
   122c4:	cmp	r1, r3
   122c8:	bne	122ac <dcngettext@plt+0x1294>
   122cc:	ldrb	r0, [r5]
   122d0:	clz	r0, r0
   122d4:	lsr	r0, r0, #5
   122d8:	pop	{r4, r5, r6, pc}
   122dc:	andeq	r8, r2, ip, ror #2
   122e0:	cmp	r1, #0
   122e4:	bxeq	lr
   122e8:	push	{r4, r5, lr}
   122ec:	add	ip, r0, #1
   122f0:	mov	r2, #0
   122f4:	sub	r4, r1, #1
   122f8:	mov	r5, #10
   122fc:	ldrb	r3, [r0, r2]
   12300:	cmp	r3, #0
   12304:	beq	12334 <dcngettext@plt+0x131c>
   12308:	cmp	r3, #92	; 0x5c
   1230c:	mov	lr, ip
   12310:	bne	1233c <dcngettext@plt+0x1324>
   12314:	cmp	r4, r2
   12318:	add	r2, r2, #1
   1231c:	beq	12334 <dcngettext@plt+0x131c>
   12320:	ldrb	r3, [r0, r2]
   12324:	cmp	r3, #92	; 0x5c
   12328:	beq	1236c <dcngettext@plt+0x1354>
   1232c:	cmp	r3, #110	; 0x6e
   12330:	beq	12364 <dcngettext@plt+0x134c>
   12334:	mov	r0, #0
   12338:	pop	{r4, r5, pc}
   1233c:	strb	r3, [ip, #-1]
   12340:	add	r2, r2, #1
   12344:	cmp	r1, r2
   12348:	add	ip, ip, #1
   1234c:	bhi	122fc <dcngettext@plt+0x12e4>
   12350:	add	r1, r0, r1
   12354:	cmp	lr, r1
   12358:	movcc	r3, #0
   1235c:	strbcc	r3, [lr]
   12360:	pop	{r4, r5, pc}
   12364:	strb	r5, [ip, #-1]
   12368:	b	12340 <dcngettext@plt+0x1328>
   1236c:	strb	r3, [ip, #-1]
   12370:	b	12340 <dcngettext@plt+0x1328>
   12374:	cmp	r1, #0
   12378:	beq	1241c <dcngettext@plt+0x1404>
   1237c:	push	{r4, r5, r6, r7, r8, lr}
   12380:	mov	r4, r0
   12384:	ldrb	ip, [r0]
   12388:	cmp	ip, #0
   1238c:	popeq	{r4, r5, r6, r7, r8, pc}
   12390:	ldr	r6, [pc, #144]	; 12428 <dcngettext@plt+0x1410>
   12394:	ldr	r7, [pc, #144]	; 1242c <dcngettext@plt+0x1414>
   12398:	ldr	r5, [pc, #144]	; 12430 <dcngettext@plt+0x1418>
   1239c:	b	123c8 <dcngettext@plt+0x13b0>
   123a0:	ldr	r3, [lr, #20]
   123a4:	ldr	r2, [lr, #24]
   123a8:	add	r1, r3, #1
   123ac:	cmp	r3, r2
   123b0:	strcc	r1, [lr, #20]
   123b4:	strbcc	ip, [r3]
   123b8:	bcs	1240c <dcngettext@plt+0x13f4>
   123bc:	ldrb	ip, [r4, #1]!
   123c0:	cmp	ip, #0
   123c4:	popeq	{r4, r5, r6, r7, r8, pc}
   123c8:	cmp	ip, #10
   123cc:	ldr	lr, [r6]
   123d0:	beq	123f4 <dcngettext@plt+0x13dc>
   123d4:	cmp	ip, #92	; 0x5c
   123d8:	mov	r3, lr
   123dc:	mov	r2, #2
   123e0:	mov	r1, #1
   123e4:	mov	r0, r5
   123e8:	bne	123a0 <dcngettext@plt+0x1388>
   123ec:	bl	10e14 <fwrite_unlocked@plt>
   123f0:	b	123bc <dcngettext@plt+0x13a4>
   123f4:	mov	r3, lr
   123f8:	mov	r2, #2
   123fc:	mov	r1, #1
   12400:	mov	r0, r7
   12404:	bl	10e14 <fwrite_unlocked@plt>
   12408:	b	123bc <dcngettext@plt+0x13a4>
   1240c:	mov	r1, ip
   12410:	mov	r0, lr
   12414:	bl	10fa0 <__overflow@plt>
   12418:	b	123bc <dcngettext@plt+0x13a4>
   1241c:	ldr	r3, [pc, #4]	; 12428 <dcngettext@plt+0x1410>
   12420:	ldr	r1, [r3]
   12424:	b	10d9c <fputs_unlocked@plt>
   12428:	andeq	r8, r2, r4, ror #2
   1242c:	andeq	r6, r1, ip, lsl lr
   12430:	andeq	r6, r1, r0, lsr #28
   12434:	push	{r4, r5, r6, r7, r8, lr}
   12438:	mov	r6, r1
   1243c:	ldr	r1, [pc, #368]	; 125b4 <dcngettext@plt+0x159c>
   12440:	mov	r5, r2
   12444:	mov	r7, r0
   12448:	bl	10dc0 <strcmp@plt>
   1244c:	mov	r3, #0
   12450:	strb	r3, [r5]
   12454:	cmp	r0, r3
   12458:	bne	1249c <dcngettext@plt+0x1484>
   1245c:	ldr	r5, [pc, #340]	; 125b8 <dcngettext@plt+0x15a0>
   12460:	ldr	r3, [pc, #340]	; 125bc <dcngettext@plt+0x15a4>
   12464:	mov	r2, #1
   12468:	ldr	r4, [r5]
   1246c:	mov	r1, #2
   12470:	mov	r0, r4
   12474:	strb	r2, [r3, #4]
   12478:	bl	13968 <dcngettext@plt+0x2950>
   1247c:	mov	r1, r6
   12480:	mov	r0, r4
   12484:	bl	13830 <dcngettext@plt+0x2818>
   12488:	cmp	r0, #0
   1248c:	bne	12514 <dcngettext@plt+0x14fc>
   12490:	mov	r4, #1
   12494:	mov	r0, r4
   12498:	pop	{r4, r5, r6, r7, r8, pc}
   1249c:	ldr	r1, [pc, #284]	; 125c0 <dcngettext@plt+0x15a8>
   124a0:	mov	r0, r7
   124a4:	bl	1399c <dcngettext@plt+0x2984>
   124a8:	subs	r4, r0, #0
   124ac:	beq	12560 <dcngettext@plt+0x1548>
   124b0:	mov	r1, #2
   124b4:	bl	13968 <dcngettext@plt+0x2950>
   124b8:	mov	r1, r6
   124bc:	mov	r0, r4
   124c0:	bl	13830 <dcngettext@plt+0x2818>
   124c4:	subs	r5, r0, #0
   124c8:	ldrne	r5, [pc, #232]	; 125b8 <dcngettext@plt+0x15a0>
   124cc:	bne	12514 <dcngettext@plt+0x14fc>
   124d0:	mov	r0, r4
   124d4:	bl	1649c <dcngettext@plt+0x5484>
   124d8:	cmp	r0, #0
   124dc:	beq	12490 <dcngettext@plt+0x1478>
   124e0:	bl	10f28 <__errno_location@plt>
   124e4:	mov	r2, r7
   124e8:	mov	r1, #3
   124ec:	mov	r4, r5
   124f0:	ldr	r6, [r0]
   124f4:	mov	r0, r5
   124f8:	bl	15acc <dcngettext@plt+0x4ab4>
   124fc:	mov	r1, r6
   12500:	ldr	r2, [pc, #188]	; 125c4 <dcngettext@plt+0x15ac>
   12504:	mov	r3, r0
   12508:	mov	r0, r5
   1250c:	bl	10ea4 <error@plt>
   12510:	b	12494 <dcngettext@plt+0x147c>
   12514:	bl	10f28 <__errno_location@plt>
   12518:	mov	r2, r7
   1251c:	mov	r1, #3
   12520:	ldr	r6, [r0]
   12524:	mov	r0, #0
   12528:	bl	15acc <dcngettext@plt+0x4ab4>
   1252c:	mov	r1, r6
   12530:	ldr	r2, [pc, #140]	; 125c4 <dcngettext@plt+0x15ac>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	bl	10ea4 <error@plt>
   12540:	ldr	r3, [r5]
   12544:	cmp	r3, r4
   12548:	moveq	r4, #0
   1254c:	beq	12494 <dcngettext@plt+0x147c>
   12550:	mov	r0, r4
   12554:	bl	1649c <dcngettext@plt+0x5484>
   12558:	mov	r4, #0
   1255c:	b	12494 <dcngettext@plt+0x147c>
   12560:	ldr	r3, [pc, #84]	; 125bc <dcngettext@plt+0x15a4>
   12564:	ldrb	r4, [r3, #5]
   12568:	bl	10f28 <__errno_location@plt>
   1256c:	cmp	r4, #0
   12570:	ldr	r6, [r0]
   12574:	beq	12588 <dcngettext@plt+0x1570>
   12578:	cmp	r6, #2
   1257c:	moveq	r3, #1
   12580:	strbeq	r3, [r5]
   12584:	beq	12494 <dcngettext@plt+0x147c>
   12588:	mov	r2, r7
   1258c:	mov	r1, #3
   12590:	mov	r0, #0
   12594:	bl	15acc <dcngettext@plt+0x4ab4>
   12598:	mov	r1, r6
   1259c:	ldr	r2, [pc, #32]	; 125c4 <dcngettext@plt+0x15ac>
   125a0:	mov	r4, #0
   125a4:	mov	r3, r0
   125a8:	mov	r0, #0
   125ac:	bl	10ea4 <error@plt>
   125b0:	b	12494 <dcngettext@plt+0x147c>
   125b4:	andeq	r6, r1, r4, lsr #28
   125b8:	andeq	r8, r2, r0, ror #2
   125bc:	andeq	r8, r2, ip, ror #2
   125c0:	andeq	r6, r1, r8, lsr #28
   125c4:	strdeq	r7, [r1], -r0
   125c8:	ldr	r3, [pc, #844]	; 1291c <dcngettext@plt+0x1904>
   125cc:	push	{r7, lr}
   125d0:	sub	sp, sp, #72	; 0x48
   125d4:	ldr	r3, [r3]
   125d8:	subs	r4, r0, #0
   125dc:	str	r3, [sp, #68]	; 0x44
   125e0:	beq	1261c <dcngettext@plt+0x1604>
   125e4:	ldr	r3, [pc, #820]	; 12920 <dcngettext@plt+0x1908>
   125e8:	mov	r2, #5
   125ec:	ldr	r1, [pc, #816]	; 12924 <dcngettext@plt+0x190c>
   125f0:	mov	r0, #0
   125f4:	ldr	r5, [r3]
   125f8:	bl	10e2c <dcgettext@plt>
   125fc:	ldr	r3, [pc, #804]	; 12928 <dcngettext@plt+0x1910>
   12600:	mov	r1, #1
   12604:	ldr	r3, [r3]
   12608:	mov	r2, r0
   1260c:	mov	r0, r5
   12610:	bl	10f70 <__fprintf_chk@plt>
   12614:	mov	r0, r4
   12618:	bl	10f04 <exit@plt>
   1261c:	mov	r2, #5
   12620:	ldr	r1, [pc, #772]	; 1292c <dcngettext@plt+0x1914>
   12624:	bl	10e2c <dcgettext@plt>
   12628:	ldr	r2, [pc, #760]	; 12928 <dcngettext@plt+0x1910>
   1262c:	ldr	r5, [pc, #764]	; 12930 <dcngettext@plt+0x1918>
   12630:	mov	r3, #128	; 0x80
   12634:	ldr	r2, [r2]
   12638:	str	r3, [sp]
   1263c:	ldr	r3, [pc, #752]	; 12934 <dcngettext@plt+0x191c>
   12640:	mov	r1, r0
   12644:	mov	r0, #1
   12648:	bl	10f58 <__printf_chk@plt>
   1264c:	mov	r2, #5
   12650:	ldr	r1, [pc, #736]	; 12938 <dcngettext@plt+0x1920>
   12654:	mov	r0, r4
   12658:	bl	10e2c <dcgettext@plt>
   1265c:	ldr	r1, [r5]
   12660:	bl	10d9c <fputs_unlocked@plt>
   12664:	mov	r2, #5
   12668:	ldr	r1, [pc, #716]	; 1293c <dcngettext@plt+0x1924>
   1266c:	mov	r0, r4
   12670:	bl	10e2c <dcgettext@plt>
   12674:	ldr	r1, [r5]
   12678:	bl	10d9c <fputs_unlocked@plt>
   1267c:	mov	r2, #5
   12680:	ldr	r1, [pc, #696]	; 12940 <dcngettext@plt+0x1928>
   12684:	mov	r0, r4
   12688:	bl	10e2c <dcgettext@plt>
   1268c:	ldr	r2, [pc, #672]	; 12934 <dcngettext@plt+0x191c>
   12690:	mov	r1, r0
   12694:	mov	r0, #1
   12698:	bl	10f58 <__printf_chk@plt>
   1269c:	mov	r2, #5
   126a0:	ldr	r1, [pc, #668]	; 12944 <dcngettext@plt+0x192c>
   126a4:	mov	r0, r4
   126a8:	bl	10e2c <dcgettext@plt>
   126ac:	ldr	r1, [r5]
   126b0:	bl	10d9c <fputs_unlocked@plt>
   126b4:	mov	r2, #5
   126b8:	ldr	r1, [pc, #648]	; 12948 <dcngettext@plt+0x1930>
   126bc:	mov	r0, r4
   126c0:	bl	10e2c <dcgettext@plt>
   126c4:	ldr	r1, [r5]
   126c8:	bl	10d9c <fputs_unlocked@plt>
   126cc:	mov	r2, #5
   126d0:	ldr	r1, [pc, #628]	; 1294c <dcngettext@plt+0x1934>
   126d4:	mov	r0, r4
   126d8:	bl	10e2c <dcgettext@plt>
   126dc:	ldr	r1, [r5]
   126e0:	bl	10d9c <fputs_unlocked@plt>
   126e4:	mov	r2, #5
   126e8:	ldr	r1, [pc, #608]	; 12950 <dcngettext@plt+0x1938>
   126ec:	mov	r0, r4
   126f0:	bl	10e2c <dcgettext@plt>
   126f4:	ldr	r1, [r5]
   126f8:	bl	10d9c <fputs_unlocked@plt>
   126fc:	mov	r2, #5
   12700:	ldr	r1, [pc, #588]	; 12954 <dcngettext@plt+0x193c>
   12704:	mov	r0, r4
   12708:	bl	10e2c <dcgettext@plt>
   1270c:	ldr	r1, [r5]
   12710:	bl	10d9c <fputs_unlocked@plt>
   12714:	mov	r2, #5
   12718:	ldr	r1, [pc, #568]	; 12958 <dcngettext@plt+0x1940>
   1271c:	mov	r0, r4
   12720:	bl	10e2c <dcgettext@plt>
   12724:	ldr	r1, [r5]
   12728:	bl	10d9c <fputs_unlocked@plt>
   1272c:	mov	r2, #5
   12730:	ldr	r1, [pc, #548]	; 1295c <dcngettext@plt+0x1944>
   12734:	mov	r0, r4
   12738:	bl	10e2c <dcgettext@plt>
   1273c:	ldr	r2, [pc, #540]	; 12960 <dcngettext@plt+0x1948>
   12740:	mov	r1, r0
   12744:	mov	r0, #1
   12748:	bl	10f58 <__printf_chk@plt>
   1274c:	ldr	lr, [pc, #528]	; 12964 <dcngettext@plt+0x194c>
   12750:	add	ip, sp, #12
   12754:	ldm	lr!, {r0, r1, r2, r3}
   12758:	stmia	ip!, {r0, r1, r2, r3}
   1275c:	ldm	lr!, {r0, r1, r2, r3}
   12760:	ldr	r6, [sp, #12]
   12764:	stmia	ip!, {r0, r1, r2, r3}
   12768:	cmp	r6, #0
   1276c:	ldm	lr!, {r0, r1, r2, r3}
   12770:	addeq	r5, sp, #12
   12774:	stmia	ip!, {r0, r1, r2, r3}
   12778:	ldm	lr, {r0, r1}
   1277c:	stm	ip, {r0, r1}
   12780:	beq	127b0 <dcngettext@plt+0x1798>
   12784:	ldr	r7, [pc, #476]	; 12968 <dcngettext@plt+0x1950>
   12788:	add	r5, sp, #12
   1278c:	b	1279c <dcngettext@plt+0x1784>
   12790:	ldr	r6, [r5, #8]!
   12794:	cmp	r6, #0
   12798:	beq	127b0 <dcngettext@plt+0x1798>
   1279c:	mov	r1, r6
   127a0:	mov	r0, r7
   127a4:	bl	10dc0 <strcmp@plt>
   127a8:	cmp	r0, #0
   127ac:	bne	12790 <dcngettext@plt+0x1778>
   127b0:	ldr	r5, [r5, #4]
   127b4:	mov	r2, #5
   127b8:	cmp	r5, #0
   127bc:	ldr	r1, [pc, #424]	; 1296c <dcngettext@plt+0x1954>
   127c0:	beq	12868 <dcngettext@plt+0x1850>
   127c4:	mov	r0, #0
   127c8:	bl	10e2c <dcgettext@plt>
   127cc:	ldr	r3, [pc, #412]	; 12970 <dcngettext@plt+0x1958>
   127d0:	ldr	r2, [pc, #412]	; 12974 <dcngettext@plt+0x195c>
   127d4:	mov	r1, r0
   127d8:	mov	r0, #1
   127dc:	bl	10f58 <__printf_chk@plt>
   127e0:	mov	r1, #0
   127e4:	mov	r0, #5
   127e8:	bl	10fac <setlocale@plt>
   127ec:	cmp	r0, #0
   127f0:	ldreq	r6, [pc, #368]	; 12968 <dcngettext@plt+0x1950>
   127f4:	beq	12810 <dcngettext@plt+0x17f8>
   127f8:	mov	r2, #3
   127fc:	ldr	r1, [pc, #372]	; 12978 <dcngettext@plt+0x1960>
   12800:	bl	10ff4 <strncmp@plt>
   12804:	ldr	r6, [pc, #348]	; 12968 <dcngettext@plt+0x1950>
   12808:	cmp	r0, #0
   1280c:	bne	128f8 <dcngettext@plt+0x18e0>
   12810:	mov	r2, #5
   12814:	ldr	r1, [pc, #352]	; 1297c <dcngettext@plt+0x1964>
   12818:	mov	r0, #0
   1281c:	bl	10e2c <dcgettext@plt>
   12820:	ldr	r3, [pc, #320]	; 12968 <dcngettext@plt+0x1950>
   12824:	ldr	r2, [pc, #324]	; 12970 <dcngettext@plt+0x1958>
   12828:	mov	r1, r0
   1282c:	mov	r0, #1
   12830:	bl	10f58 <__printf_chk@plt>
   12834:	mov	r2, #5
   12838:	ldr	r1, [pc, #320]	; 12980 <dcngettext@plt+0x1968>
   1283c:	mov	r0, #0
   12840:	bl	10e2c <dcgettext@plt>
   12844:	ldr	r2, [pc, #312]	; 12984 <dcngettext@plt+0x196c>
   12848:	cmp	r5, r6
   1284c:	ldr	r3, [pc, #308]	; 12988 <dcngettext@plt+0x1970>
   12850:	movne	r3, r2
   12854:	mov	r1, r0
   12858:	mov	r2, r5
   1285c:	mov	r0, #1
   12860:	bl	10f58 <__printf_chk@plt>
   12864:	b	12614 <dcngettext@plt+0x15fc>
   12868:	mov	r0, r5
   1286c:	bl	10e2c <dcgettext@plt>
   12870:	ldr	r3, [pc, #248]	; 12970 <dcngettext@plt+0x1958>
   12874:	ldr	r2, [pc, #248]	; 12974 <dcngettext@plt+0x195c>
   12878:	mov	r1, r0
   1287c:	mov	r0, #1
   12880:	bl	10f58 <__printf_chk@plt>
   12884:	mov	r1, r5
   12888:	mov	r0, #5
   1288c:	bl	10fac <setlocale@plt>
   12890:	cmp	r0, #0
   12894:	beq	128ac <dcngettext@plt+0x1894>
   12898:	mov	r2, #3
   1289c:	ldr	r1, [pc, #212]	; 12978 <dcngettext@plt+0x1960>
   128a0:	bl	10ff4 <strncmp@plt>
   128a4:	cmp	r0, #0
   128a8:	bne	128f0 <dcngettext@plt+0x18d8>
   128ac:	mov	r2, #5
   128b0:	ldr	r1, [pc, #196]	; 1297c <dcngettext@plt+0x1964>
   128b4:	mov	r0, #0
   128b8:	bl	10e2c <dcgettext@plt>
   128bc:	ldr	r3, [pc, #164]	; 12968 <dcngettext@plt+0x1950>
   128c0:	ldr	r2, [pc, #168]	; 12970 <dcngettext@plt+0x1958>
   128c4:	mov	r5, r3
   128c8:	mov	r1, r0
   128cc:	mov	r0, #1
   128d0:	bl	10f58 <__printf_chk@plt>
   128d4:	ldr	r1, [pc, #164]	; 12980 <dcngettext@plt+0x1968>
   128d8:	mov	r2, #5
   128dc:	mov	r0, #0
   128e0:	bl	10e2c <dcgettext@plt>
   128e4:	ldr	r3, [pc, #156]	; 12988 <dcngettext@plt+0x1970>
   128e8:	mov	r1, r0
   128ec:	b	12858 <dcngettext@plt+0x1840>
   128f0:	ldr	r6, [pc, #112]	; 12968 <dcngettext@plt+0x1950>
   128f4:	mov	r5, r6
   128f8:	mov	r2, #5
   128fc:	ldr	r1, [pc, #136]	; 1298c <dcngettext@plt+0x1974>
   12900:	mov	r0, #0
   12904:	bl	10e2c <dcgettext@plt>
   12908:	ldr	r2, [pc, #88]	; 12968 <dcngettext@plt+0x1950>
   1290c:	mov	r1, r0
   12910:	mov	r0, #1
   12914:	bl	10f58 <__printf_chk@plt>
   12918:	b	12810 <dcngettext@plt+0x17f8>
   1291c:	andeq	r7, r2, r8, lsl #30
   12920:	andeq	r8, r2, r8, asr r1
   12924:	andeq	r6, r1, r4, lsr lr
   12928:	andeq	r8, r2, r4, lsl #3
   1292c:	andeq	r6, r1, ip, asr lr
   12930:	andeq	r8, r2, r4, ror #2
   12934:	andeq	r6, r1, r4, lsr #29
   12938:	andeq	r6, r1, r8, lsr #29
   1293c:	andeq	r6, r1, r0, ror #29
   12940:	andeq	r6, r1, r0, lsl pc
   12944:	andeq	r6, r1, r4, asr pc
   12948:	andeq	r6, r1, r8, lsl #31
   1294c:			; <UNDEFINED> instruction: 0x00016fbc
   12950:	andeq	r7, r1, r8, lsr r0
   12954:	andeq	r7, r1, ip, ror #3
   12958:	andeq	r7, r1, ip, lsl r2
   1295c:	andeq	r7, r1, r4, asr r2
   12960:	andeq	r7, r1, r0, lsl #7
   12964:	andeq	r6, r1, r4, lsl #26
   12968:	andeq	r6, r1, ip, lsr #28
   1296c:	andeq	r7, r1, ip, lsl #7
   12970:	andeq	r7, r1, r4, lsr #7
   12974:	andeq	r7, r1, ip, asr #7
   12978:	ldrdeq	r7, [r1], -ip
   1297c:	andeq	r7, r1, r8, lsr #8
   12980:	andeq	r7, r1, r8, asr #8
   12984:	andeq	r7, r1, ip, ror r3
   12988:	andeq	r7, r1, r0, lsl r9
   1298c:	andeq	r7, r1, r0, ror #7
   12990:	ldr	r3, [pc, #4]	; 1299c <dcngettext@plt+0x1984>
   12994:	str	r0, [r3]
   12998:	bx	lr
   1299c:	andeq	r8, r2, ip, ror r1
   129a0:	ldr	r3, [pc, #4]	; 129ac <dcngettext@plt+0x1994>
   129a4:	strb	r0, [r3, #4]
   129a8:	bx	lr
   129ac:	andeq	r8, r2, ip, ror r1
   129b0:	ldr	r3, [pc, #180]	; 12a6c <dcngettext@plt+0x1a54>
   129b4:	push	{r4, r5, r6, lr}
   129b8:	sub	sp, sp, #8
   129bc:	ldr	r0, [r3]
   129c0:	bl	16808 <dcngettext@plt+0x57f0>
   129c4:	cmp	r0, #0
   129c8:	beq	129f0 <dcngettext@plt+0x19d8>
   129cc:	bl	10f28 <__errno_location@plt>
   129d0:	ldr	r5, [pc, #152]	; 12a70 <dcngettext@plt+0x1a58>
   129d4:	ldrb	r3, [r5, #4]
   129d8:	cmp	r3, #0
   129dc:	mov	r4, r0
   129e0:	beq	12a0c <dcngettext@plt+0x19f4>
   129e4:	ldr	r3, [r0]
   129e8:	cmp	r3, #32
   129ec:	bne	12a0c <dcngettext@plt+0x19f4>
   129f0:	ldr	r3, [pc, #124]	; 12a74 <dcngettext@plt+0x1a5c>
   129f4:	ldr	r0, [r3]
   129f8:	bl	16808 <dcngettext@plt+0x57f0>
   129fc:	cmp	r0, #0
   12a00:	bne	12a4c <dcngettext@plt+0x1a34>
   12a04:	add	sp, sp, #8
   12a08:	pop	{r4, r5, r6, pc}
   12a0c:	mov	r2, #5
   12a10:	ldr	r1, [pc, #96]	; 12a78 <dcngettext@plt+0x1a60>
   12a14:	mov	r0, #0
   12a18:	bl	10e2c <dcgettext@plt>
   12a1c:	mov	r6, r0
   12a20:	ldr	r0, [r5]
   12a24:	cmp	r0, #0
   12a28:	beq	12a58 <dcngettext@plt+0x1a40>
   12a2c:	ldr	r4, [r4]
   12a30:	bl	15ab8 <dcngettext@plt+0x4aa0>
   12a34:	mov	r1, r4
   12a38:	str	r6, [sp]
   12a3c:	ldr	r2, [pc, #56]	; 12a7c <dcngettext@plt+0x1a64>
   12a40:	mov	r3, r0
   12a44:	mov	r0, #0
   12a48:	bl	10ea4 <error@plt>
   12a4c:	ldr	r3, [pc, #44]	; 12a80 <dcngettext@plt+0x1a68>
   12a50:	ldr	r0, [r3]
   12a54:	bl	10df0 <_exit@plt>
   12a58:	mov	r3, r6
   12a5c:	ldr	r1, [r4]
   12a60:	ldr	r2, [pc, #28]	; 12a84 <dcngettext@plt+0x1a6c>
   12a64:	bl	10ea4 <error@plt>
   12a68:	b	12a4c <dcngettext@plt+0x1a34>
   12a6c:	andeq	r8, r2, r4, ror #2
   12a70:	andeq	r8, r2, ip, ror r1
   12a74:	andeq	r8, r2, r8, asr r1
   12a78:	andeq	r7, r1, r0, ror #19
   12a7c:	andeq	r7, r1, ip, ror #19
   12a80:	andeq	r8, r2, r4, lsl #2
   12a84:	strdeq	r7, [r1], -r0
   12a88:	push	{lr}		; (str lr, [sp, #-4]!)
   12a8c:	mov	r3, #0
   12a90:	ldr	lr, [pc, #40]	; 12ac0 <dcngettext@plt+0x1aa8>
   12a94:	ldr	ip, [pc, #40]	; 12ac4 <dcngettext@plt+0x1aac>
   12a98:	ldr	r1, [pc, #40]	; 12ac8 <dcngettext@plt+0x1ab0>
   12a9c:	ldr	r2, [pc, #40]	; 12acc <dcngettext@plt+0x1ab4>
   12aa0:	str	lr, [r0]
   12aa4:	str	ip, [r0, #4]
   12aa8:	str	r1, [r0, #8]
   12aac:	str	r2, [r0, #12]
   12ab0:	str	r3, [r0, #20]
   12ab4:	str	r3, [r0, #16]
   12ab8:	str	r3, [r0, #24]
   12abc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ac0:	strbvs	r2, [r5, -r1, lsl #6]
   12ac4:	svc	0x00cdab89
   12ac8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   12acc:	eorsne	r5, r2, r6, ror r4
   12ad0:	ldr	r2, [r0]
   12ad4:	mov	r3, r0
   12ad8:	str	r2, [r1]
   12adc:	ldr	r2, [r3, #4]
   12ae0:	mov	r0, r1
   12ae4:	str	r2, [r1, #4]
   12ae8:	ldr	r2, [r3, #8]
   12aec:	str	r2, [r1, #8]
   12af0:	ldr	r3, [r3, #12]
   12af4:	str	r3, [r1, #12]
   12af8:	bx	lr
   12afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b00:	sub	sp, sp, #20
   12b04:	ldr	r3, [r2, #16]
   12b08:	mov	r4, r2
   12b0c:	adds	r3, r3, r1
   12b10:	str	r2, [sp, #12]
   12b14:	ldr	r2, [r2, #20]
   12b18:	movcs	ip, #1
   12b1c:	movcc	ip, #0
   12b20:	add	r2, r2, ip
   12b24:	str	r3, [r4, #16]
   12b28:	str	r2, [r4, #20]
   12b2c:	ldr	r3, [r4]
   12b30:	mov	r2, r4
   12b34:	bic	r1, r1, #3
   12b38:	add	lr, r0, r1
   12b3c:	str	r3, [sp, #4]
   12b40:	ldr	r3, [r2, #12]
   12b44:	cmp	r0, lr
   12b48:	str	r3, [sp]
   12b4c:	ldr	lr, [r4, #4]
   12b50:	ldr	r4, [r4, #8]
   12b54:	bcs	13454 <dcngettext@plt+0x243c>
   12b58:	sub	r1, r1, #1
   12b5c:	bic	r3, r1, #63	; 0x3f
   12b60:	add	r2, r0, #128	; 0x80
   12b64:	add	r9, r0, #64	; 0x40
   12b68:	add	r3, r3, r2
   12b6c:	str	r3, [sp, #8]
   12b70:	ldr	r3, [sp, #4]
   12b74:	ldr	r2, [sp]
   12b78:	add	r3, r3, #-687865856	; 0xd7000000
   12b7c:	add	r3, r3, #6946816	; 0x6a0000
   12b80:	ldr	r1, [r9, #-64]	; 0xffffffc0
   12b84:	eor	r7, r4, r2
   12b88:	add	r3, r3, #41984	; 0xa400
   12b8c:	and	r7, r7, lr
   12b90:	add	r3, r3, #120	; 0x78
   12b94:	add	r3, r3, r1
   12b98:	eor	r7, r7, r2
   12b9c:	add	r7, r7, r3
   12ba0:	ldr	r5, [pc, #2256]	; 13478 <dcngettext@plt+0x2460>
   12ba4:	add	r7, lr, r7, ror #25
   12ba8:	ldr	r1, [r9, #-60]	; 0xffffffc4
   12bac:	eor	r6, lr, r4
   12bb0:	and	r6, r6, r7
   12bb4:	add	r5, r2, r5
   12bb8:	add	r5, r5, r1
   12bbc:	eor	r6, r6, r4
   12bc0:	add	r6, r6, r5
   12bc4:	ldr	r0, [pc, #2224]	; 1347c <dcngettext@plt+0x2464>
   12bc8:	add	r6, r7, r6, ror #20
   12bcc:	ldr	r1, [r9, #-56]	; 0xffffffc8
   12bd0:	eor	ip, r7, lr
   12bd4:	and	ip, ip, r6
   12bd8:	add	r0, r4, r0
   12bdc:	add	r0, r0, r1
   12be0:	eor	ip, ip, lr
   12be4:	add	ip, ip, r0
   12be8:	ldr	r2, [pc, #2192]	; 13480 <dcngettext@plt+0x2468>
   12bec:	add	ip, r6, ip, ror #15
   12bf0:	ldr	r0, [r9, #-52]	; 0xffffffcc
   12bf4:	eor	r1, r7, r6
   12bf8:	and	r1, r1, ip
   12bfc:	add	r2, lr, r2
   12c00:	add	r2, r2, r0
   12c04:	eor	r1, r1, r7
   12c08:	ldr	r0, [r9, #-48]	; 0xffffffd0
   12c0c:	add	r1, r1, r2
   12c10:	ldr	r3, [pc, #2156]	; 13484 <dcngettext@plt+0x246c>
   12c14:	add	r1, ip, r1, ror #10
   12c18:	eor	r2, r6, ip
   12c1c:	add	r3, r0, r3
   12c20:	ldr	r0, [r9, #-44]	; 0xffffffd4
   12c24:	and	r2, r2, r1
   12c28:	add	r7, r3, r7
   12c2c:	add	r0, r0, #1191182336	; 0x47000000
   12c30:	eor	r3, r2, r6
   12c34:	add	r3, r3, r7
   12c38:	add	r0, r0, #8847360	; 0x870000
   12c3c:	add	r0, r0, #50688	; 0xc600
   12c40:	add	r3, r1, r3, ror #25
   12c44:	eor	r2, ip, r1
   12c48:	add	r0, r0, #42	; 0x2a
   12c4c:	and	r2, r2, r3
   12c50:	add	r6, r0, r6
   12c54:	ldr	r0, [r9, #-40]	; 0xffffffd8
   12c58:	eor	r5, r2, ip
   12c5c:	add	r5, r5, r6
   12c60:	add	r0, r0, #-1476395008	; 0xa8000000
   12c64:	add	r0, r0, #3162112	; 0x304000
   12c68:	add	r5, r3, r5, ror #20
   12c6c:	eor	r2, r1, r3
   12c70:	add	r0, r0, #1552	; 0x610
   12c74:	and	r2, r2, r5
   12c78:	add	r0, r0, #3
   12c7c:	add	ip, r0, ip
   12c80:	eor	r0, r2, r1
   12c84:	add	r0, r0, ip
   12c88:	ldr	sl, [r9, #-36]	; 0xffffffdc
   12c8c:	ldr	r2, [pc, #2036]	; 13488 <dcngettext@plt+0x2470>
   12c90:	add	r0, r5, r0, ror #15
   12c94:	eor	ip, r3, r5
   12c98:	add	r2, sl, r2
   12c9c:	and	ip, ip, r0
   12ca0:	add	r1, r2, r1
   12ca4:	eor	r2, ip, r3
   12ca8:	ldr	ip, [r9, #-32]	; 0xffffffe0
   12cac:	add	r2, r2, r1
   12cb0:	add	ip, ip, #1761607680	; 0x69000000
   12cb4:	add	ip, ip, #8388608	; 0x800000
   12cb8:	add	r2, r0, r2, ror #10
   12cbc:	eor	r1, r5, r0
   12cc0:	add	ip, ip, #38912	; 0x9800
   12cc4:	and	r1, r1, r2
   12cc8:	add	ip, ip, #216	; 0xd8
   12ccc:	add	r3, ip, r3
   12cd0:	eor	r8, r1, r5
   12cd4:	add	r8, r8, r3
   12cd8:	ldr	ip, [r9, #-28]	; 0xffffffe4
   12cdc:	ldr	r1, [pc, #1960]	; 1348c <dcngettext@plt+0x2474>
   12ce0:	add	r8, r2, r8, ror #25
   12ce4:	eor	r3, r0, r2
   12ce8:	add	r1, ip, r1
   12cec:	and	r3, r3, r8
   12cf0:	add	r5, r1, r5
   12cf4:	eor	r6, r3, r0
   12cf8:	ldr	r1, [r9, #-24]	; 0xffffffe8
   12cfc:	add	r6, r6, r5
   12d00:	eor	r3, r2, r8
   12d04:	add	r6, r8, r6, ror #20
   12d08:	sub	r1, r1, #41984	; 0xa400
   12d0c:	sub	r1, r1, #79	; 0x4f
   12d10:	and	r3, r3, r6
   12d14:	eor	r3, r3, r2
   12d18:	add	r0, r1, r0
   12d1c:	add	r0, r3, r0
   12d20:	ldr	r1, [r9, #-20]	; 0xffffffec
   12d24:	add	ip, r6, r0, ror #15
   12d28:	ldr	r0, [pc, #1888]	; 13490 <dcngettext@plt+0x2478>
   12d2c:	eor	r3, r8, r6
   12d30:	add	r0, r1, r0
   12d34:	and	r3, r3, ip
   12d38:	add	r2, r0, r2
   12d3c:	eor	r1, r3, r8
   12d40:	add	r1, r1, r2
   12d44:	ldr	r7, [r9, #-16]
   12d48:	ldr	r0, [pc, #1860]	; 13494 <dcngettext@plt+0x247c>
   12d4c:	add	r1, ip, r1, ror #10
   12d50:	eor	r2, r6, ip
   12d54:	add	r0, r7, r0
   12d58:	and	r2, r2, r1
   12d5c:	add	r8, r0, r8
   12d60:	eor	r3, r2, r6
   12d64:	add	r3, r3, r8
   12d68:	ldr	r5, [r9, #-12]
   12d6c:	ldr	r0, [pc, #1828]	; 13498 <dcngettext@plt+0x2480>
   12d70:	add	r3, r1, r3, ror #25
   12d74:	eor	r2, ip, r1
   12d78:	add	r0, r5, r0
   12d7c:	and	r2, r2, r3
   12d80:	add	r6, r0, r6
   12d84:	eor	r5, r2, ip
   12d88:	add	r5, r5, r6
   12d8c:	ldr	r8, [r9, #-8]
   12d90:	ldr	r6, [pc, #1796]	; 1349c <dcngettext@plt+0x2484>
   12d94:	add	r5, r3, r5, ror #20
   12d98:	eor	r2, r1, r3
   12d9c:	add	r6, r8, r6
   12da0:	and	r2, r2, r5
   12da4:	add	ip, r6, ip
   12da8:	eor	r0, r2, r1
   12dac:	add	r0, r0, ip
   12db0:	ldr	r6, [r9, #-4]
   12db4:	ldr	r2, [pc, #1764]	; 134a0 <dcngettext@plt+0x2488>
   12db8:	add	r0, r5, r0, ror #15
   12dbc:	eor	ip, r3, r5
   12dc0:	add	r2, r6, r2
   12dc4:	and	ip, ip, r0
   12dc8:	add	r1, r2, r1
   12dcc:	eor	r2, ip, r3
   12dd0:	add	r2, r2, r1
   12dd4:	ldr	fp, [r9, #-60]	; 0xffffffc4
   12dd8:	add	r2, r0, r2, ror #10
   12ddc:	ldr	ip, [pc, #1728]	; 134a4 <dcngettext@plt+0x248c>
   12de0:	eor	r1, r0, r2
   12de4:	add	ip, fp, ip
   12de8:	and	r1, r1, r5
   12dec:	add	r3, ip, r3
   12df0:	eor	fp, r1, r0
   12df4:	add	fp, fp, r3
   12df8:	ldr	ip, [r9, #-40]	; 0xffffffd8
   12dfc:	add	fp, r2, fp, ror #27
   12e00:	ldr	r1, [pc, #1696]	; 134a8 <dcngettext@plt+0x2490>
   12e04:	eor	r3, r2, fp
   12e08:	add	r1, ip, r1
   12e0c:	and	r3, r3, r0
   12e10:	eor	r3, r3, r2
   12e14:	add	r5, r1, r5
   12e18:	add	r5, r3, r5
   12e1c:	ldr	r1, [r9, #-20]	; 0xffffffec
   12e20:	add	r5, fp, r5, ror #23
   12e24:	ldr	ip, [pc, #1664]	; 134ac <dcngettext@plt+0x2494>
   12e28:	eor	r3, fp, r5
   12e2c:	add	ip, r1, ip
   12e30:	and	r3, r3, r2
   12e34:	add	r0, ip, r0
   12e38:	eor	ip, r3, fp
   12e3c:	add	ip, ip, r0
   12e40:	ldr	r1, [pc, #1640]	; 134b0 <dcngettext@plt+0x2498>
   12e44:	add	ip, r5, ip, ror #18
   12e48:	ldr	r0, [r9, #-64]	; 0xffffffc0
   12e4c:	eor	r3, r5, ip
   12e50:	add	r1, r0, r1
   12e54:	and	r3, r3, fp
   12e58:	eor	r3, r3, r5
   12e5c:	add	r2, r1, r2
   12e60:	add	r2, r3, r2
   12e64:	ldr	r0, [r9, #-44]	; 0xffffffd4
   12e68:	add	r2, ip, r2, ror #12
   12e6c:	ldr	r3, [pc, #1600]	; 134b4 <dcngettext@plt+0x249c>
   12e70:	eor	r1, ip, r2
   12e74:	add	r3, r0, r3
   12e78:	and	r1, r1, r5
   12e7c:	add	fp, r3, fp
   12e80:	eor	r3, r1, ip
   12e84:	add	r3, r3, fp
   12e88:	ldr	r1, [pc, #1576]	; 134b8 <dcngettext@plt+0x24a0>
   12e8c:	add	r3, r2, r3, ror #27
   12e90:	ldr	fp, [r9, #-24]	; 0xffffffe8
   12e94:	eor	r0, r2, r3
   12e98:	add	r1, fp, r1
   12e9c:	and	r0, r0, ip
   12ea0:	add	r5, r1, r5
   12ea4:	eor	r1, r0, r2
   12ea8:	add	r1, r1, r5
   12eac:	ldr	r0, [pc, #1544]	; 134bc <dcngettext@plt+0x24a4>
   12eb0:	add	r1, r3, r1, ror #23
   12eb4:	eor	r5, r3, r1
   12eb8:	add	r0, r6, r0
   12ebc:	and	r5, r5, r2
   12ec0:	add	ip, r0, ip
   12ec4:	eor	r0, r5, r3
   12ec8:	add	r0, r0, ip
   12ecc:	ldr	fp, [r9, #-48]	; 0xffffffd0
   12ed0:	add	r0, r1, r0, ror #18
   12ed4:	ldr	r5, [pc, #1508]	; 134c0 <dcngettext@plt+0x24a8>
   12ed8:	eor	ip, r1, r0
   12edc:	add	r5, fp, r5
   12ee0:	and	ip, ip, r3
   12ee4:	eor	ip, ip, r1
   12ee8:	add	r2, r5, r2
   12eec:	add	r2, ip, r2
   12ef0:	ldr	fp, [r9, #-28]	; 0xffffffe4
   12ef4:	add	r2, r0, r2, ror #12
   12ef8:	ldr	r5, [pc, #1476]	; 134c4 <dcngettext@plt+0x24ac>
   12efc:	eor	ip, r0, r2
   12f00:	add	r5, fp, r5
   12f04:	and	ip, ip, r1
   12f08:	add	r3, r5, r3
   12f0c:	eor	fp, ip, r0
   12f10:	add	fp, fp, r3
   12f14:	ldr	ip, [pc, #1452]	; 134c8 <dcngettext@plt+0x24b0>
   12f18:	add	fp, r2, fp, ror #27
   12f1c:	eor	r3, r2, fp
   12f20:	add	ip, r8, ip
   12f24:	and	r3, r3, r0
   12f28:	add	r1, ip, r1
   12f2c:	eor	r5, r3, r2
   12f30:	add	r5, r5, r1
   12f34:	ldr	ip, [pc, #1424]	; 134cc <dcngettext@plt+0x24b4>
   12f38:	add	r5, fp, r5, ror #23
   12f3c:	ldr	r1, [r9, #-52]	; 0xffffffcc
   12f40:	eor	r3, fp, r5
   12f44:	add	ip, r1, ip
   12f48:	and	r3, r3, r2
   12f4c:	add	r0, ip, r0
   12f50:	eor	ip, r3, fp
   12f54:	add	ip, ip, r0
   12f58:	ldr	r1, [pc, #1392]	; 134d0 <dcngettext@plt+0x24b8>
   12f5c:	add	ip, r5, ip, ror #18
   12f60:	ldr	r0, [r9, #-32]	; 0xffffffe0
   12f64:	eor	r3, r5, ip
   12f68:	add	r1, r0, r1
   12f6c:	and	r3, r3, fp
   12f70:	eor	r3, r3, r5
   12f74:	add	r2, r1, r2
   12f78:	add	r2, r3, r2
   12f7c:	ldr	r0, [r9, #-12]
   12f80:	add	r2, ip, r2, ror #12
   12f84:	ldr	r3, [pc, #1352]	; 134d4 <dcngettext@plt+0x24bc>
   12f88:	eor	r1, ip, r2
   12f8c:	add	r3, r0, r3
   12f90:	and	r1, r1, r5
   12f94:	add	fp, r3, fp
   12f98:	eor	r3, r1, ip
   12f9c:	add	r3, r3, fp
   12fa0:	ldr	r1, [pc, #1328]	; 134d8 <dcngettext@plt+0x24c0>
   12fa4:	add	r3, r2, r3, ror #27
   12fa8:	ldr	fp, [r9, #-56]	; 0xffffffc8
   12fac:	eor	r0, r2, r3
   12fb0:	add	r1, fp, r1
   12fb4:	and	r0, r0, ip
   12fb8:	add	r5, r1, r5
   12fbc:	eor	r1, r0, r2
   12fc0:	add	r1, r1, r5
   12fc4:	ldr	r0, [pc, #1296]	; 134dc <dcngettext@plt+0x24c4>
   12fc8:	add	r1, r3, r1, ror #23
   12fcc:	eor	r5, r3, r1
   12fd0:	add	r0, sl, r0
   12fd4:	and	r5, r5, r2
   12fd8:	add	ip, r0, ip
   12fdc:	eor	r0, r5, r3
   12fe0:	add	r0, r0, ip
   12fe4:	ldr	r5, [pc, #1268]	; 134e0 <dcngettext@plt+0x24c8>
   12fe8:	add	r0, r1, r0, ror #18
   12fec:	eor	fp, r1, r0
   12ff0:	add	r5, r7, r5
   12ff4:	and	ip, fp, r3
   12ff8:	eor	ip, ip, r1
   12ffc:	add	r2, r5, r2
   13000:	add	r2, ip, r2
   13004:	ldr	r5, [pc, #1240]	; 134e4 <dcngettext@plt+0x24cc>
   13008:	ldr	ip, [r9, #-44]	; 0xffffffd4
   1300c:	add	r2, r0, r2, ror #12
   13010:	add	r5, ip, r5
   13014:	eor	fp, fp, r2
   13018:	add	r3, r5, r3
   1301c:	ldr	ip, [r9, #-32]	; 0xffffffe0
   13020:	add	r3, fp, r3
   13024:	ldr	fp, [pc, #1212]	; 134e8 <dcngettext@plt+0x24d0>
   13028:	add	r3, r2, r3, ror #28
   1302c:	add	fp, ip, fp
   13030:	eor	ip, r0, r2
   13034:	eor	ip, ip, r3
   13038:	add	r1, fp, r1
   1303c:	add	r1, ip, r1
   13040:	ldr	r5, [pc, #1188]	; 134ec <dcngettext@plt+0x24d4>
   13044:	ldr	ip, [r9, #-20]	; 0xffffffec
   13048:	add	r1, r3, r1, ror #21
   1304c:	add	r5, ip, r5
   13050:	eor	ip, r2, r3
   13054:	eor	ip, ip, r1
   13058:	add	r0, r5, r0
   1305c:	add	r0, ip, r0
   13060:	ldr	r5, [pc, #1160]	; 134f0 <dcngettext@plt+0x24d8>
   13064:	add	r0, r1, r0, ror #16
   13068:	add	r5, r8, r5
   1306c:	eor	fp, r3, r1
   13070:	eor	fp, fp, r0
   13074:	add	r2, r5, r2
   13078:	ldr	ip, [r9, #-60]	; 0xffffffc4
   1307c:	add	r2, fp, r2
   13080:	ldr	fp, [pc, #1132]	; 134f4 <dcngettext@plt+0x24dc>
   13084:	add	r2, r0, r2, ror #9
   13088:	add	fp, ip, fp
   1308c:	eor	ip, r1, r0
   13090:	add	r3, fp, r3
   13094:	eor	fp, ip, r2
   13098:	ldr	r5, [r9, #-48]	; 0xffffffd0
   1309c:	add	fp, fp, r3
   130a0:	ldr	ip, [pc, #1104]	; 134f8 <dcngettext@plt+0x24e0>
   130a4:	add	fp, r2, fp, ror #28
   130a8:	add	ip, r5, ip
   130ac:	eor	r3, r0, r2
   130b0:	eor	r3, r3, fp
   130b4:	add	r1, ip, r1
   130b8:	add	r1, r3, r1
   130bc:	ldr	ip, [pc, #1080]	; 134fc <dcngettext@plt+0x24e4>
   130c0:	add	r1, fp, r1, ror #21
   130c4:	add	ip, sl, ip
   130c8:	eor	r3, r2, fp
   130cc:	eor	r3, r3, r1
   130d0:	add	r0, ip, r0
   130d4:	add	r0, r3, r0
   130d8:	ldr	ip, [r9, #-24]	; 0xffffffe8
   130dc:	ldr	r5, [pc, #1052]	; 13500 <dcngettext@plt+0x24e8>
   130e0:	add	r0, r1, r0, ror #16
   130e4:	eor	r3, fp, r1
   130e8:	add	r5, ip, r5
   130ec:	add	r2, r5, r2
   130f0:	eor	r5, r3, r0
   130f4:	ldr	ip, [r9, #-12]
   130f8:	add	r5, r5, r2
   130fc:	ldr	r2, [pc, #1024]	; 13504 <dcngettext@plt+0x24ec>
   13100:	add	r5, r0, r5, ror #9
   13104:	add	r2, ip, r2
   13108:	eor	ip, r1, r0
   1310c:	add	fp, r2, fp
   13110:	eor	r2, ip, r5
   13114:	add	r2, r2, fp
   13118:	ldr	ip, [pc, #1000]	; 13508 <dcngettext@plt+0x24f0>
   1311c:	ldr	fp, [r9, #-64]	; 0xffffffc0
   13120:	add	r2, r5, r2, ror #28
   13124:	eor	r3, r0, r5
   13128:	add	ip, fp, ip
   1312c:	add	r1, ip, r1
   13130:	eor	fp, r3, r2
   13134:	add	fp, fp, r1
   13138:	ldr	ip, [pc, #972]	; 1350c <dcngettext@plt+0x24f4>
   1313c:	ldr	r1, [r9, #-52]	; 0xffffffcc
   13140:	add	fp, r2, fp, ror #21
   13144:	eor	r3, r5, r2
   13148:	add	ip, r1, ip
   1314c:	add	r0, ip, r0
   13150:	eor	ip, r3, fp
   13154:	ldr	r1, [r9, #-40]	; 0xffffffd8
   13158:	add	ip, ip, r0
   1315c:	ldr	r3, [pc, #940]	; 13510 <dcngettext@plt+0x24f8>
   13160:	add	ip, fp, ip, ror #16
   13164:	add	r3, r1, r3
   13168:	eor	r1, r2, fp
   1316c:	add	r5, r3, r5
   13170:	eor	r3, r1, ip
   13174:	add	r3, r3, r5
   13178:	ldr	r1, [r9, #-28]	; 0xffffffe4
   1317c:	ldr	r0, [pc, #912]	; 13514 <dcngettext@plt+0x24fc>
   13180:	add	r3, ip, r3, ror #9
   13184:	add	r0, r1, r0
   13188:	eor	r1, fp, ip
   1318c:	add	r2, r0, r2
   13190:	eor	r5, r1, r3
   13194:	add	r5, r5, r2
   13198:	ldr	r0, [pc, #888]	; 13518 <dcngettext@plt+0x2500>
   1319c:	add	r5, r3, r5, ror #28
   131a0:	eor	r2, ip, r3
   131a4:	add	r0, r7, r0
   131a8:	add	fp, r0, fp
   131ac:	eor	r0, r2, r5
   131b0:	add	r0, r0, fp
   131b4:	ldr	r1, [pc, #864]	; 1351c <dcngettext@plt+0x2504>
   131b8:	add	r0, r5, r0, ror #21
   131bc:	eor	r2, r3, r5
   131c0:	add	r1, r6, r1
   131c4:	add	ip, r1, ip
   131c8:	eor	r1, r2, r0
   131cc:	ldr	fp, [r9, #-56]	; 0xffffffc8
   131d0:	add	r1, r1, ip
   131d4:	ldr	ip, [pc, #836]	; 13520 <dcngettext@plt+0x2508>
   131d8:	add	r1, r0, r1, ror #16
   131dc:	eor	r2, r5, r0
   131e0:	add	ip, fp, ip
   131e4:	add	r3, ip, r3
   131e8:	eor	ip, r2, r1
   131ec:	add	ip, ip, r3
   131f0:	ldr	fp, [r9, #-64]	; 0xffffffc0
   131f4:	ldr	r2, [pc, #808]	; 13524 <dcngettext@plt+0x250c>
   131f8:	add	ip, r1, ip, ror #9
   131fc:	mvn	r3, r0
   13200:	add	r2, fp, r2
   13204:	orr	r3, r3, ip
   13208:	add	r5, r2, r5
   1320c:	eor	r2, r3, r1
   13210:	add	r2, r2, r5
   13214:	ldr	fp, [pc, #780]	; 13528 <dcngettext@plt+0x2510>
   13218:	add	r2, ip, r2, ror #26
   1321c:	mvn	r3, r1
   13220:	add	fp, sl, fp
   13224:	orr	r3, r3, r2
   13228:	eor	r3, r3, ip
   1322c:	add	r0, fp, r0
   13230:	add	r0, r3, r0
   13234:	ldr	sl, [pc, #752]	; 1352c <dcngettext@plt+0x2514>
   13238:	add	r0, r2, r0, ror #22
   1323c:	mvn	r5, ip
   13240:	add	sl, r8, sl
   13244:	orr	r5, r5, r0
   13248:	eor	r5, r5, r2
   1324c:	add	r1, sl, r1
   13250:	add	r1, r5, r1
   13254:	ldr	r3, [pc, #724]	; 13530 <dcngettext@plt+0x2518>
   13258:	ldr	r5, [r9, #-44]	; 0xffffffd4
   1325c:	add	r1, r0, r1, ror #17
   13260:	mvn	r8, r2
   13264:	add	r3, r5, r3
   13268:	orr	r8, r8, r1
   1326c:	add	ip, r3, ip
   13270:	eor	r8, r8, r0
   13274:	add	ip, r8, ip
   13278:	ldr	sl, [pc, #692]	; 13534 <dcngettext@plt+0x251c>
   1327c:	add	ip, r1, ip, ror #11
   13280:	mvn	r5, r0
   13284:	add	sl, r7, sl
   13288:	orr	r5, r5, ip
   1328c:	eor	r5, r5, r1
   13290:	add	r2, sl, r2
   13294:	add	r2, r5, r2
   13298:	ldr	fp, [pc, #664]	; 13538 <dcngettext@plt+0x2520>
   1329c:	ldr	r5, [r9, #-52]	; 0xffffffcc
   132a0:	add	r2, ip, r2, ror #26
   132a4:	mvn	r3, r1
   132a8:	add	fp, r5, fp
   132ac:	orr	r3, r3, r2
   132b0:	eor	r3, r3, ip
   132b4:	add	r0, fp, r0
   132b8:	add	r0, r3, r0
   132bc:	ldr	r7, [r9, #-24]	; 0xffffffe8
   132c0:	ldr	sl, [pc, #628]	; 1353c <dcngettext@plt+0x2524>
   132c4:	add	r0, r2, r0, ror #22
   132c8:	mvn	r5, ip
   132cc:	add	sl, r7, sl
   132d0:	orr	r5, r5, r0
   132d4:	eor	r5, r5, r2
   132d8:	add	r1, sl, r1
   132dc:	add	r1, r5, r1
   132e0:	ldr	r7, [r9, #-60]	; 0xffffffc4
   132e4:	ldr	r3, [pc, #596]	; 13540 <dcngettext@plt+0x2528>
   132e8:	add	r1, r0, r1, ror #17
   132ec:	mvn	r5, r2
   132f0:	add	r3, r7, r3
   132f4:	orr	r5, r5, r1
   132f8:	eor	r5, r5, r0
   132fc:	add	ip, r3, ip
   13300:	add	ip, r5, ip
   13304:	ldr	sl, [pc, #568]	; 13544 <dcngettext@plt+0x252c>
   13308:	ldr	r5, [r9, #-32]	; 0xffffffe0
   1330c:	add	ip, r1, ip, ror #11
   13310:	mvn	r3, r0
   13314:	add	sl, r5, sl
   13318:	orr	r3, r3, ip
   1331c:	eor	r3, r3, r1
   13320:	add	r2, sl, r2
   13324:	add	r2, r3, r2
   13328:	ldr	fp, [pc, #536]	; 13548 <dcngettext@plt+0x2530>
   1332c:	add	r2, ip, r2, ror #26
   13330:	mvn	r5, r1
   13334:	add	fp, r6, fp
   13338:	orr	r5, r5, r2
   1333c:	eor	r5, r5, ip
   13340:	add	r0, fp, r0
   13344:	add	r0, r5, r0
   13348:	ldr	sl, [pc, #508]	; 1354c <dcngettext@plt+0x2534>
   1334c:	ldr	r5, [r9, #-40]	; 0xffffffd8
   13350:	add	r0, r2, r0, ror #22
   13354:	mvn	r3, ip
   13358:	add	sl, r5, sl
   1335c:	orr	r3, r3, r0
   13360:	eor	r3, r3, r2
   13364:	add	r1, sl, r1
   13368:	add	r1, r3, r1
   1336c:	ldr	r7, [r9, #-12]
   13370:	ldr	r6, [pc, #472]	; 13550 <dcngettext@plt+0x2538>
   13374:	add	r1, r0, r1, ror #17
   13378:	mvn	r5, r2
   1337c:	add	r6, r7, r6
   13380:	orr	r5, r5, r1
   13384:	eor	r5, r5, r0
   13388:	add	ip, r6, ip
   1338c:	add	ip, r5, ip
   13390:	ldr	sl, [pc, #444]	; 13554 <dcngettext@plt+0x253c>
   13394:	ldr	r5, [r9, #-48]	; 0xffffffd0
   13398:	add	ip, r1, ip, ror #11
   1339c:	mvn	r3, r0
   133a0:	add	sl, r5, sl
   133a4:	orr	r3, r3, ip
   133a8:	eor	r3, r3, r1
   133ac:	add	r2, sl, r2
   133b0:	add	r2, r3, r2
   133b4:	ldr	r5, [r9, #-20]	; 0xffffffec
   133b8:	ldr	fp, [pc, #408]	; 13558 <dcngettext@plt+0x2540>
   133bc:	add	r2, ip, r2, ror #26
   133c0:	mvn	r3, r1
   133c4:	orr	r3, r3, r2
   133c8:	add	fp, r5, fp
   133cc:	add	fp, fp, r0
   133d0:	eor	r0, r3, ip
   133d4:	add	r0, r0, fp
   133d8:	ldr	r5, [r9, #-56]	; 0xffffffc8
   133dc:	ldr	sl, [pc, #376]	; 1355c <dcngettext@plt+0x2544>
   133e0:	add	r0, r2, r0, ror #22
   133e4:	mvn	r3, ip
   133e8:	add	sl, r5, sl
   133ec:	orr	r3, r3, r0
   133f0:	add	sl, sl, r1
   133f4:	eor	r1, r3, r2
   133f8:	add	r1, r1, sl
   133fc:	ldr	r5, [r9, #-28]	; 0xffffffe4
   13400:	ldr	r6, [pc, #344]	; 13560 <dcngettext@plt+0x2548>
   13404:	add	r1, r0, r1, ror #17
   13408:	mvn	r3, r2
   1340c:	add	r6, r5, r6
   13410:	orr	r3, r3, r1
   13414:	eor	r3, r3, r0
   13418:	add	ip, r6, ip
   1341c:	add	ip, r3, ip
   13420:	ldr	r3, [sp, #4]
   13424:	ldr	r5, [sp, #8]
   13428:	add	r3, r3, r2
   1342c:	ldr	r2, [sp]
   13430:	add	r9, r9, #64	; 0x40
   13434:	add	ip, r1, ip, ror #11
   13438:	str	r3, [sp, #4]
   1343c:	cmp	r5, r9
   13440:	add	r3, r2, r0
   13444:	str	r3, [sp]
   13448:	add	r4, r4, r1
   1344c:	add	lr, lr, ip
   13450:	bne	12b70 <dcngettext@plt+0x1b58>
   13454:	ldr	r3, [sp, #12]
   13458:	ldr	r2, [sp, #4]
   1345c:	str	r2, [r3]
   13460:	ldr	r2, [sp]
   13464:	str	lr, [r3, #4]
   13468:	str	r4, [r3, #8]
   1346c:	str	r2, [r3, #12]
   13470:	add	sp, sp, #20
   13474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13478:	stmia	r7, {r1, r2, r4, r6, r8, r9, sl, ip, sp, pc}^
   1347c:	strtcs	r7, [r0], #-219	; 0xffffff25
   13480:			; <UNDEFINED> instruction: 0xc1bdceee
   13484:			; <UNDEFINED> instruction: 0xf57c0faf
   13488:	stc2l	5, cr9, [r6, #-4]
   1348c:	blhi	1151350 <stdout@@GLIBC_2.4+0x11291ec>
   13490:	ldmdbhi	ip, {r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, lr, pc}^
   13494:	blvs	fe417924 <stdout@@GLIBC_2.4+0xfe3ef7c0>
   13498:	ldc2	1, cr7, [r8, #588]	; 0x24c
   1349c:	ldrbtge	r4, [r9], -lr, lsl #7
   134a0:	ldmibmi	r4!, {r0, r5, fp}
   134a4:			; <UNDEFINED> instruction: 0xf61e2562
   134a8:	subgt	fp, r0, r0, asr #6
   134ac:			; <UNDEFINED> instruction: 0x265e5a51
   134b0:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   134b4:			; <UNDEFINED> instruction: 0xd62f105d
   134b8:	subeq	r1, r4, #1392508928	; 0x53000000
   134bc:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   134c0:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   134c4:	mvncs	ip, r6, ror #27
   134c8:	teqgt	r7, #56098816	; 0x3580000
   134cc:			; <UNDEFINED> instruction: 0xf4d50d87
   134d0:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   134d4:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   134d8:	stc2l	3, cr10, [pc], #992	; 138c0 <dcngettext@plt+0x28a8>
   134dc:			; <UNDEFINED> instruction: 0x676f02d9
   134e0:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   134e4:			; <UNDEFINED> instruction: 0xfffa3942
   134e8:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   134ec:	ldfvss	f6, [sp, #136]	; 0x88
   134f0:	vcmla.f16	d19, d5, d12, #270
   134f4:	ldrtge	lr, [lr], #2628	; 0xa44
   134f8:	blmi	ff7c73a4 <stdout@@GLIBC_2.4+0xff79f240>
   134fc:			; <UNDEFINED> instruction: 0xf6bb4b60
   13500:	mrclt	12, 5, fp, cr15, cr0, {3}
   13504:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   13508:	b	fe85d4f8 <stdout@@GLIBC_2.4+0xfe835394>
   1350c:	strbtle	r3, [pc], #133	; 13514 <dcngettext@plt+0x24fc>
   13510:	streq	r1, [r8], #3333	; 0xd05
   13514:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   13518:	ldrb	r9, [fp], r5, ror #19
   1351c:	svcne	0x00a27cf8
   13520:	strtgt	r5, [ip], #1637	; 0x665
   13524:	vld1.16	{d2-d5}, [r9], r4
   13528:	msrmi	CPSR_fx, #604	; 0x25c
   1352c:	blge	fe51c3d0 <stdout@@GLIBC_2.4+0xfe4f426c>
   13530:	ldc2	0, cr10, [r3], {57}	; 0x39
   13534:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   13538:	svchi	0x000ccc92
   1353c:			; <UNDEFINED> instruction: 0xffeff47d
   13540:	strhi	r5, [r4, #3537]	; 0xdd1
   13544:	svcvs	0x00a87e4f
   13548:	cdp2	6, 2, cr14, cr12, cr0, {7}
   1354c:	movwge	r4, #4884	; 0x1314
   13550:	adfmi<illegal precision>p	f1, f0, f1
   13554:			; <UNDEFINED> instruction: 0xf7537e82
   13558:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   1355c:	bcs	ff608050 <stdout@@GLIBC_2.4+0xff5dfeec>
   13560:	bl	fe1c83ac <stdout@@GLIBC_2.4+0xfe1a0248>
   13564:	push	{r4, r5, r6, r7, r8, lr}
   13568:	mov	r4, r0
   1356c:	ldr	r0, [r0, #24]
   13570:	ldr	r3, [r4, #16]
   13574:	cmp	r0, #56	; 0x38
   13578:	ldr	r7, [r4, #20]
   1357c:	mov	r5, r1
   13580:	movcc	r6, #64	; 0x40
   13584:	movcs	r6, #128	; 0x80
   13588:	movcc	r2, #56	; 0x38
   1358c:	movcs	r2, #120	; 0x78
   13590:	movcc	r1, #15
   13594:	movcs	r1, #31
   13598:	movcc	lr, #14
   1359c:	movcs	lr, #30
   135a0:	adds	r3, r3, r0
   135a4:	addcs	r7, r7, #1
   135a8:	add	lr, r4, lr, lsl #2
   135ac:	add	r1, r4, r1, lsl #2
   135b0:	lsr	ip, r3, #29
   135b4:	strcs	r7, [r4, #20]
   135b8:	str	r3, [r4, #16]
   135bc:	orr	ip, ip, r7, lsl #3
   135c0:	lsl	r3, r3, #3
   135c4:	add	r7, r4, #28
   135c8:	str	r3, [lr, #28]
   135cc:	sub	r2, r2, r0
   135d0:	str	ip, [r1, #28]
   135d4:	add	r0, r7, r0
   135d8:	ldr	r1, [pc, #32]	; 13600 <dcngettext@plt+0x25e8>
   135dc:	bl	10dfc <memcpy@plt>
   135e0:	mov	r1, r6
   135e4:	mov	r0, r7
   135e8:	mov	r2, r4
   135ec:	bl	12afc <dcngettext@plt+0x1ae4>
   135f0:	mov	r1, r5
   135f4:	mov	r0, r4
   135f8:	pop	{r4, r5, r6, r7, r8, lr}
   135fc:	b	12ad0 <dcngettext@plt+0x1ab8>
   13600:	strdeq	r7, [r1], -r4
   13604:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13608:	mov	r5, r2
   1360c:	ldr	r7, [r2, #24]
   13610:	mov	r4, r0
   13614:	cmp	r7, #0
   13618:	mov	r6, r1
   1361c:	bne	13700 <dcngettext@plt+0x26e8>
   13620:	cmp	r6, #63	; 0x3f
   13624:	bls	136ec <dcngettext@plt+0x26d4>
   13628:	tst	r4, #3
   1362c:	beq	136d0 <dcngettext@plt+0x26b8>
   13630:	cmp	r6, #64	; 0x40
   13634:	add	r7, r5, #28
   13638:	beq	137a0 <dcngettext@plt+0x2788>
   1363c:	sub	r9, r6, #65	; 0x41
   13640:	lsr	r9, r9, #6
   13644:	add	r8, r9, #1
   13648:	add	r8, r4, r8, lsl #6
   1364c:	add	lr, r4, #64	; 0x40
   13650:	mov	r3, r7
   13654:	ldr	ip, [r4]
   13658:	ldr	r0, [r4, #4]
   1365c:	ldr	r1, [r4, #8]
   13660:	ldr	r2, [r4, #12]
   13664:	add	r4, r4, #16
   13668:	cmp	r4, lr
   1366c:	str	ip, [r3]
   13670:	str	r0, [r3, #4]
   13674:	str	r1, [r3, #8]
   13678:	str	r2, [r3, #12]
   1367c:	add	r3, r3, #16
   13680:	bne	13654 <dcngettext@plt+0x263c>
   13684:	mov	r2, r5
   13688:	mov	r1, #64	; 0x40
   1368c:	mov	r0, r7
   13690:	bl	12afc <dcngettext@plt+0x1ae4>
   13694:	cmp	r4, r8
   13698:	bne	1364c <dcngettext@plt+0x2634>
   1369c:	rsb	r9, r9, r9, lsl #26
   136a0:	sub	r6, r6, #64	; 0x40
   136a4:	add	r6, r6, r9, lsl #6
   136a8:	ldr	r4, [r5, #24]
   136ac:	mov	r1, r8
   136b0:	add	r0, r7, r4
   136b4:	mov	r2, r6
   136b8:	add	r4, r4, r6
   136bc:	bl	10dfc <memcpy@plt>
   136c0:	cmp	r4, #63	; 0x3f
   136c4:	bhi	13740 <dcngettext@plt+0x2728>
   136c8:	str	r4, [r5, #24]
   136cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136d0:	bic	r7, r6, #63	; 0x3f
   136d4:	mov	r0, r4
   136d8:	mov	r1, r7
   136dc:	mov	r2, r5
   136e0:	bl	12afc <dcngettext@plt+0x1ae4>
   136e4:	and	r6, r6, #63	; 0x3f
   136e8:	add	r4, r4, r7
   136ec:	cmp	r6, #0
   136f0:	movne	r8, r4
   136f4:	addne	r7, r5, #28
   136f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   136fc:	b	136a8 <dcngettext@plt+0x2690>
   13700:	rsb	r8, r7, #128	; 0x80
   13704:	cmp	r8, r1
   13708:	movcs	r8, r1
   1370c:	add	r9, r2, #28
   13710:	mov	r1, r4
   13714:	mov	r2, r8
   13718:	add	r0, r9, r7
   1371c:	bl	10dfc <memcpy@plt>
   13720:	ldr	r1, [r5, #24]
   13724:	add	r1, r8, r1
   13728:	cmp	r1, #64	; 0x40
   1372c:	str	r1, [r5, #24]
   13730:	bhi	1376c <dcngettext@plt+0x2754>
   13734:	add	r4, r4, r8
   13738:	sub	r6, r6, r8
   1373c:	b	13620 <dcngettext@plt+0x2608>
   13740:	sub	r4, r4, #64	; 0x40
   13744:	mov	r2, r5
   13748:	mov	r1, #64	; 0x40
   1374c:	mov	r0, r7
   13750:	bl	12afc <dcngettext@plt+0x1ae4>
   13754:	mov	r0, r7
   13758:	mov	r2, r4
   1375c:	add	r1, r5, #92	; 0x5c
   13760:	bl	10dfc <memcpy@plt>
   13764:	str	r4, [r5, #24]
   13768:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1376c:	mov	r2, r5
   13770:	mov	r0, r9
   13774:	bic	r1, r1, #63	; 0x3f
   13778:	bl	12afc <dcngettext@plt+0x1ae4>
   1377c:	ldr	r2, [r5, #24]
   13780:	add	r1, r7, r8
   13784:	and	r2, r2, #63	; 0x3f
   13788:	bic	r1, r1, #63	; 0x3f
   1378c:	add	r1, r9, r1
   13790:	mov	r0, r9
   13794:	str	r2, [r5, #24]
   13798:	bl	10dfc <memcpy@plt>
   1379c:	b	13734 <dcngettext@plt+0x271c>
   137a0:	mov	r8, r4
   137a4:	b	136a8 <dcngettext@plt+0x2690>
   137a8:	push	{r4, r5, r6, lr}
   137ac:	sub	sp, sp, #160	; 0xa0
   137b0:	ldr	r4, [pc, #100]	; 1381c <dcngettext@plt+0x2804>
   137b4:	ldr	lr, [pc, #100]	; 13820 <dcngettext@plt+0x2808>
   137b8:	ldr	r3, [pc, #100]	; 13824 <dcngettext@plt+0x280c>
   137bc:	ldr	ip, [r4]
   137c0:	ldr	r6, [pc, #96]	; 13828 <dcngettext@plt+0x2810>
   137c4:	str	ip, [sp, #156]	; 0x9c
   137c8:	ldr	ip, [pc, #92]	; 1382c <dcngettext@plt+0x2814>
   137cc:	mov	r5, r2
   137d0:	str	r3, [sp, #8]
   137d4:	mov	r2, sp
   137d8:	mov	r3, #0
   137dc:	str	r3, [sp, #20]
   137e0:	str	r3, [sp, #16]
   137e4:	str	r3, [sp, #24]
   137e8:	stm	sp, {r6, lr}
   137ec:	str	ip, [sp, #12]
   137f0:	bl	13604 <dcngettext@plt+0x25ec>
   137f4:	mov	r1, r5
   137f8:	mov	r0, sp
   137fc:	bl	13564 <dcngettext@plt+0x254c>
   13800:	ldr	r2, [sp, #156]	; 0x9c
   13804:	ldr	r3, [r4]
   13808:	cmp	r2, r3
   1380c:	bne	13818 <dcngettext@plt+0x2800>
   13810:	add	sp, sp, #160	; 0xa0
   13814:	pop	{r4, r5, r6, pc}
   13818:	bl	10e38 <__stack_chk_fail@plt>
   1381c:	andeq	r7, r2, r8, lsl #30
   13820:	svc	0x00cdab89
   13824:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   13828:	strbvs	r2, [r5, -r1, lsl #6]
   1382c:	eorsne	r5, r2, r6, ror r4
   13830:	push	{r4, r5, r6, r7, r8, lr}
   13834:	sub	sp, sp, #160	; 0xa0
   13838:	ldr	r7, [pc, #268]	; 1394c <dcngettext@plt+0x2934>
   1383c:	mov	r5, r0
   13840:	ldr	r0, [pc, #264]	; 13950 <dcngettext@plt+0x2938>
   13844:	ldr	r3, [r7]
   13848:	mov	r8, r1
   1384c:	str	r3, [sp, #156]	; 0x9c
   13850:	bl	10eb0 <malloc@plt>
   13854:	subs	r6, r0, #0
   13858:	moveq	r0, #1
   1385c:	beq	138ec <dcngettext@plt+0x28d4>
   13860:	ldr	r2, [pc, #236]	; 13954 <dcngettext@plt+0x293c>
   13864:	ldr	r3, [pc, #236]	; 13958 <dcngettext@plt+0x2940>
   13868:	str	r2, [sp]
   1386c:	str	r3, [sp, #4]
   13870:	ldr	r2, [pc, #228]	; 1395c <dcngettext@plt+0x2944>
   13874:	ldr	r3, [pc, #228]	; 13960 <dcngettext@plt+0x2948>
   13878:	strd	r2, [sp, #8]
   1387c:	mov	r3, #0
   13880:	str	r3, [sp, #20]
   13884:	str	r3, [sp, #16]
   13888:	str	r3, [sp, #24]
   1388c:	mov	r4, #0
   13890:	b	138bc <dcngettext@plt+0x28a4>
   13894:	rsb	r2, r4, #32768	; 0x8000
   13898:	add	r0, r6, r4
   1389c:	mov	r3, r5
   138a0:	mov	r1, #1
   138a4:	bl	10fe8 <fread_unlocked@plt>
   138a8:	add	r4, r4, r0
   138ac:	cmp	r4, #32768	; 0x8000
   138b0:	beq	13918 <dcngettext@plt+0x2900>
   138b4:	cmp	r0, #0
   138b8:	beq	1392c <dcngettext@plt+0x2914>
   138bc:	ldr	r3, [r5]
   138c0:	tst	r3, #16
   138c4:	beq	13894 <dcngettext@plt+0x287c>
   138c8:	cmp	r4, #0
   138cc:	mov	r5, sp
   138d0:	bne	13904 <dcngettext@plt+0x28ec>
   138d4:	mov	r1, r8
   138d8:	mov	r0, r5
   138dc:	bl	13564 <dcngettext@plt+0x254c>
   138e0:	mov	r0, r6
   138e4:	bl	10de4 <free@plt>
   138e8:	mov	r0, #0
   138ec:	ldr	r2, [sp, #156]	; 0x9c
   138f0:	ldr	r3, [r7]
   138f4:	cmp	r2, r3
   138f8:	bne	13948 <dcngettext@plt+0x2930>
   138fc:	add	sp, sp, #160	; 0xa0
   13900:	pop	{r4, r5, r6, r7, r8, pc}
   13904:	mov	r1, r4
   13908:	mov	r2, r5
   1390c:	mov	r0, r6
   13910:	bl	13604 <dcngettext@plt+0x25ec>
   13914:	b	138d4 <dcngettext@plt+0x28bc>
   13918:	mov	r1, r4
   1391c:	mov	r2, sp
   13920:	mov	r0, r6
   13924:	bl	12afc <dcngettext@plt+0x1ae4>
   13928:	b	1388c <dcngettext@plt+0x2874>
   1392c:	ldr	r3, [r5]
   13930:	tst	r3, #32
   13934:	beq	138c8 <dcngettext@plt+0x28b0>
   13938:	mov	r0, r6
   1393c:	bl	10de4 <free@plt>
   13940:	mov	r0, #1
   13944:	b	138ec <dcngettext@plt+0x28d4>
   13948:	bl	10e38 <__stack_chk_fail@plt>
   1394c:	andeq	r7, r2, r8, lsl #30
   13950:	andeq	r8, r0, r8, asr #32
   13954:	strbvs	r2, [r5, -r1, lsl #6]
   13958:	svc	0x00cdab89
   1395c:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   13960:	eorsne	r5, r2, r6, ror r4
   13964:	b	10dcc <posix_fadvise64@plt>
   13968:	cmp	r0, #0
   1396c:	bxeq	lr
   13970:	push	{r4, lr}
   13974:	sub	sp, sp, #16
   13978:	mov	r4, r1
   1397c:	bl	10f64 <fileno@plt>
   13980:	mov	r2, #0
   13984:	mov	r3, #0
   13988:	str	r4, [sp, #8]
   1398c:	strd	r2, [sp]
   13990:	bl	10dcc <posix_fadvise64@plt>
   13994:	add	sp, sp, #16
   13998:	pop	{r4, pc}
   1399c:	push	{r4, r5, r6, lr}
   139a0:	mov	r5, r1
   139a4:	bl	10fd0 <fopen64@plt>
   139a8:	subs	r4, r0, #0
   139ac:	beq	139bc <dcngettext@plt+0x29a4>
   139b0:	bl	10f64 <fileno@plt>
   139b4:	cmp	r0, #2
   139b8:	bls	139c4 <dcngettext@plt+0x29ac>
   139bc:	mov	r0, r4
   139c0:	pop	{r4, r5, r6, pc}
   139c4:	bl	15cb0 <dcngettext@plt+0x4c98>
   139c8:	subs	r6, r0, #0
   139cc:	blt	13a14 <dcngettext@plt+0x29fc>
   139d0:	mov	r0, r4
   139d4:	bl	1649c <dcngettext@plt+0x5484>
   139d8:	cmp	r0, #0
   139dc:	bne	139f4 <dcngettext@plt+0x29dc>
   139e0:	mov	r1, r5
   139e4:	mov	r0, r6
   139e8:	bl	10d84 <fdopen@plt>
   139ec:	subs	r4, r0, #0
   139f0:	bne	139bc <dcngettext@plt+0x29a4>
   139f4:	bl	10f28 <__errno_location@plt>
   139f8:	mov	r4, #0
   139fc:	mov	r5, r0
   13a00:	mov	r0, r6
   13a04:	ldr	r6, [r5]
   13a08:	bl	1100c <close@plt>
   13a0c:	str	r6, [r5]
   13a10:	b	139bc <dcngettext@plt+0x29a4>
   13a14:	bl	10f28 <__errno_location@plt>
   13a18:	mov	r5, r0
   13a1c:	mov	r0, r4
   13a20:	ldr	r6, [r5]
   13a24:	mov	r4, #0
   13a28:	bl	1649c <dcngettext@plt+0x5484>
   13a2c:	str	r6, [r5]
   13a30:	b	139bc <dcngettext@plt+0x29a4>
   13a34:	push	{r4, r5, r6, lr}
   13a38:	subs	r4, r0, #0
   13a3c:	beq	13ab0 <dcngettext@plt+0x2a98>
   13a40:	mov	r1, #47	; 0x2f
   13a44:	bl	10fb8 <strrchr@plt>
   13a48:	subs	r5, r0, #0
   13a4c:	beq	13a9c <dcngettext@plt+0x2a84>
   13a50:	add	r6, r5, #1
   13a54:	sub	r3, r6, r4
   13a58:	cmp	r3, #6
   13a5c:	ble	13a9c <dcngettext@plt+0x2a84>
   13a60:	mov	r2, #7
   13a64:	ldr	r1, [pc, #96]	; 13acc <dcngettext@plt+0x2ab4>
   13a68:	sub	r0, r5, #6
   13a6c:	bl	10ff4 <strncmp@plt>
   13a70:	cmp	r0, #0
   13a74:	bne	13a9c <dcngettext@plt+0x2a84>
   13a78:	mov	r2, #3
   13a7c:	ldr	r1, [pc, #76]	; 13ad0 <dcngettext@plt+0x2ab8>
   13a80:	mov	r0, r6
   13a84:	bl	10ff4 <strncmp@plt>
   13a88:	cmp	r0, #0
   13a8c:	movne	r4, r6
   13a90:	ldreq	r3, [pc, #60]	; 13ad4 <dcngettext@plt+0x2abc>
   13a94:	addeq	r4, r5, #4
   13a98:	streq	r4, [r3]
   13a9c:	ldr	r2, [pc, #52]	; 13ad8 <dcngettext@plt+0x2ac0>
   13aa0:	ldr	r3, [pc, #52]	; 13adc <dcngettext@plt+0x2ac4>
   13aa4:	str	r4, [r2]
   13aa8:	str	r4, [r3]
   13aac:	pop	{r4, r5, r6, pc}
   13ab0:	ldr	r3, [pc, #40]	; 13ae0 <dcngettext@plt+0x2ac8>
   13ab4:	mov	r2, #55	; 0x37
   13ab8:	mov	r1, #1
   13abc:	ldr	r3, [r3]
   13ac0:	ldr	r0, [pc, #28]	; 13ae4 <dcngettext@plt+0x2acc>
   13ac4:	bl	10e68 <fwrite@plt>
   13ac8:	bl	11000 <abort@plt>
   13acc:	andeq	r7, r1, ip, ror #20
   13ad0:	andeq	r7, r1, r4, ror sl
   13ad4:	andeq	r8, r2, r8, asr #2
   13ad8:	andeq	r8, r2, r4, lsl #3
   13adc:	andeq	r8, r2, ip, asr #2
   13ae0:	andeq	r8, r2, r8, asr r1
   13ae4:	andeq	r7, r1, r4, lsr sl
   13ae8:	push	{r4, lr}
   13aec:	mov	r2, #48	; 0x30
   13af0:	mov	r4, r1
   13af4:	mov	r1, #0
   13af8:	bl	10f4c <memset@plt>
   13afc:	cmp	r4, #10
   13b00:	beq	13b0c <dcngettext@plt+0x2af4>
   13b04:	str	r4, [r0]
   13b08:	pop	{r4, pc}
   13b0c:	bl	11000 <abort@plt>
   13b10:	push	{r4, r5, r6, lr}
   13b14:	mov	r2, #5
   13b18:	mov	r5, r0
   13b1c:	mov	r6, r1
   13b20:	mov	r1, r0
   13b24:	mov	r0, #0
   13b28:	bl	10e2c <dcgettext@plt>
   13b2c:	cmp	r5, r0
   13b30:	mov	r4, r0
   13b34:	beq	13b40 <dcngettext@plt+0x2b28>
   13b38:	mov	r0, r4
   13b3c:	pop	{r4, r5, r6, pc}
   13b40:	bl	168c8 <dcngettext@plt+0x58b0>
   13b44:	ldrb	r3, [r0]
   13b48:	bic	r3, r3, #32
   13b4c:	cmp	r3, #85	; 0x55
   13b50:	bne	13bb0 <dcngettext@plt+0x2b98>
   13b54:	ldrb	r3, [r0, #1]
   13b58:	bic	r3, r3, #32
   13b5c:	cmp	r3, #84	; 0x54
   13b60:	bne	13c28 <dcngettext@plt+0x2c10>
   13b64:	ldrb	r3, [r0, #2]
   13b68:	bic	r3, r3, #32
   13b6c:	cmp	r3, #70	; 0x46
   13b70:	bne	13c28 <dcngettext@plt+0x2c10>
   13b74:	ldrb	r3, [r0, #3]
   13b78:	cmp	r3, #45	; 0x2d
   13b7c:	bne	13c28 <dcngettext@plt+0x2c10>
   13b80:	ldrb	r3, [r0, #4]
   13b84:	cmp	r3, #56	; 0x38
   13b88:	bne	13c28 <dcngettext@plt+0x2c10>
   13b8c:	ldrb	r3, [r0, #5]
   13b90:	cmp	r3, #0
   13b94:	bne	13c28 <dcngettext@plt+0x2c10>
   13b98:	ldrb	r2, [r4]
   13b9c:	ldr	r3, [pc, #156]	; 13c40 <dcngettext@plt+0x2c28>
   13ba0:	ldr	r4, [pc, #156]	; 13c44 <dcngettext@plt+0x2c2c>
   13ba4:	cmp	r2, #96	; 0x60
   13ba8:	movne	r4, r3
   13bac:	b	13b38 <dcngettext@plt+0x2b20>
   13bb0:	cmp	r3, #71	; 0x47
   13bb4:	bne	13c28 <dcngettext@plt+0x2c10>
   13bb8:	ldrb	r3, [r0, #1]
   13bbc:	bic	r3, r3, #32
   13bc0:	cmp	r3, #66	; 0x42
   13bc4:	bne	13c28 <dcngettext@plt+0x2c10>
   13bc8:	ldrb	r3, [r0, #2]
   13bcc:	cmp	r3, #49	; 0x31
   13bd0:	bne	13c28 <dcngettext@plt+0x2c10>
   13bd4:	ldrb	r3, [r0, #3]
   13bd8:	cmp	r3, #56	; 0x38
   13bdc:	bne	13c28 <dcngettext@plt+0x2c10>
   13be0:	ldrb	r3, [r0, #4]
   13be4:	cmp	r3, #48	; 0x30
   13be8:	bne	13c28 <dcngettext@plt+0x2c10>
   13bec:	ldrb	r3, [r0, #5]
   13bf0:	cmp	r3, #51	; 0x33
   13bf4:	bne	13c28 <dcngettext@plt+0x2c10>
   13bf8:	ldrb	r3, [r0, #6]
   13bfc:	cmp	r3, #48	; 0x30
   13c00:	bne	13c28 <dcngettext@plt+0x2c10>
   13c04:	ldrb	r3, [r0, #7]
   13c08:	cmp	r3, #0
   13c0c:	bne	13c28 <dcngettext@plt+0x2c10>
   13c10:	ldrb	r2, [r4]
   13c14:	ldr	r3, [pc, #44]	; 13c48 <dcngettext@plt+0x2c30>
   13c18:	ldr	r4, [pc, #44]	; 13c4c <dcngettext@plt+0x2c34>
   13c1c:	cmp	r2, #96	; 0x60
   13c20:	movne	r4, r3
   13c24:	b	13b38 <dcngettext@plt+0x2b20>
   13c28:	ldr	r3, [pc, #32]	; 13c50 <dcngettext@plt+0x2c38>
   13c2c:	ldr	r4, [pc, #32]	; 13c54 <dcngettext@plt+0x2c3c>
   13c30:	cmp	r6, #9
   13c34:	movne	r4, r3
   13c38:	mov	r0, r4
   13c3c:	pop	{r4, r5, r6, pc}
   13c40:	ldrdeq	r7, [r1], -r0
   13c44:	ldrdeq	r7, [r1], -ip
   13c48:	ldrdeq	r7, [r1], -r4
   13c4c:	ldrdeq	r7, [r1], -r8
   13c50:	andeq	r7, r1, r0, ror #21
   13c54:	andeq	r7, r1, ip, asr #21
   13c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c5c:	sub	sp, sp, #124	; 0x7c
   13c60:	ldr	ip, [pc, #3576]	; 14a60 <dcngettext@plt+0x3a48>
   13c64:	str	r3, [sp, #24]
   13c68:	ldr	r3, [sp, #168]	; 0xa8
   13c6c:	ldr	ip, [ip]
   13c70:	str	r3, [sp, #56]	; 0x38
   13c74:	ldr	r3, [sp, #172]	; 0xac
   13c78:	ldr	r8, [sp, #160]	; 0xa0
   13c7c:	str	r3, [sp, #80]	; 0x50
   13c80:	ldr	r3, [sp, #176]	; 0xb0
   13c84:	mov	fp, r0
   13c88:	str	r3, [sp, #76]	; 0x4c
   13c8c:	mov	sl, r1
   13c90:	str	r2, [sp, #36]	; 0x24
   13c94:	str	ip, [sp, #116]	; 0x74
   13c98:	bl	10e80 <__ctype_get_mb_cur_max@plt>
   13c9c:	ldr	r3, [sp, #164]	; 0xa4
   13ca0:	ands	r4, r3, #2
   13ca4:	movne	r3, #1
   13ca8:	moveq	r3, #0
   13cac:	str	r3, [sp, #32]
   13cb0:	str	r0, [sp, #64]	; 0x40
   13cb4:	cmp	r8, #10
   13cb8:	ldrls	pc, [pc, r8, lsl #2]
   13cbc:	b	1546c <dcngettext@plt+0x4454>
   13cc0:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13cc4:	andeq	r4, r1, ip, asr #2
   13cc8:	andeq	r4, r1, ip, asr #14
   13ccc:	andeq	r4, r1, ip, ror #2
   13cd0:	andeq	r4, r1, r0, lsr #32
   13cd4:	andeq	r4, r1, r8, rrx
   13cd8:	andeq	r4, r1, r4, ror #1
   13cdc:	andeq	r4, r1, ip, lsl r1
   13ce0:	andeq	r3, r1, ip, ror #25
   13ce4:	andeq	r3, r1, ip, ror #25
   13ce8:	andeq	r3, r1, ip, ror #25
   13cec:	cmp	r8, #10
   13cf0:	beq	13d14 <dcngettext@plt+0x2cfc>
   13cf4:	mov	r1, r8
   13cf8:	ldr	r0, [pc, #3428]	; 14a64 <dcngettext@plt+0x3a4c>
   13cfc:	bl	13b10 <dcngettext@plt+0x2af8>
   13d00:	mov	r1, r8
   13d04:	str	r0, [sp, #80]	; 0x50
   13d08:	ldr	r0, [pc, #3420]	; 14a6c <dcngettext@plt+0x3a54>
   13d0c:	bl	13b10 <dcngettext@plt+0x2af8>
   13d10:	str	r0, [sp, #76]	; 0x4c
   13d14:	cmp	r4, #0
   13d18:	movne	r4, #0
   13d1c:	beq	1512c <dcngettext@plt+0x4114>
   13d20:	ldr	r7, [sp, #76]	; 0x4c
   13d24:	mov	r5, #0
   13d28:	mov	r6, #1
   13d2c:	mov	r0, r7
   13d30:	str	r6, [sp, #40]	; 0x28
   13d34:	str	r5, [sp, #68]	; 0x44
   13d38:	bl	10f10 <strlen@plt>
   13d3c:	str	r6, [sp, #28]
   13d40:	str	r5, [sp, #44]	; 0x2c
   13d44:	str	r5, [sp, #72]	; 0x48
   13d48:	str	r7, [sp, #60]	; 0x3c
   13d4c:	str	r0, [sp, #52]	; 0x34
   13d50:	str	r8, [sp, #160]	; 0xa0
   13d54:	mov	r8, fp
   13d58:	ldr	fp, [sp, #160]	; 0xa0
   13d5c:	mov	r9, #0
   13d60:	ldr	r3, [sp, #24]
   13d64:	cmn	r3, #1
   13d68:	beq	142d0 <dcngettext@plt+0x32b8>
   13d6c:	ldr	r3, [sp, #24]
   13d70:	subs	r6, r3, r9
   13d74:	movne	r6, #1
   13d78:	cmp	r6, #0
   13d7c:	beq	142e8 <dcngettext@plt+0x32d0>
   13d80:	ldr	r7, [sp, #28]
   13d84:	ldr	r0, [sp, #36]	; 0x24
   13d88:	cmp	fp, #2
   13d8c:	moveq	r7, #0
   13d90:	andne	r7, r7, #1
   13d94:	add	r3, r0, r9
   13d98:	cmp	r7, #0
   13d9c:	str	r3, [sp, #48]	; 0x30
   13da0:	beq	1478c <dcngettext@plt+0x3774>
   13da4:	ldr	r2, [sp, #52]	; 0x34
   13da8:	cmp	r2, #0
   13dac:	beq	14a70 <dcngettext@plt+0x3a58>
   13db0:	ldr	r1, [sp, #24]
   13db4:	cmp	r2, #1
   13db8:	mov	r3, r2
   13dbc:	movls	r3, #0
   13dc0:	movhi	r3, #1
   13dc4:	cmn	r1, #1
   13dc8:	movne	r3, #0
   13dcc:	cmp	r3, #0
   13dd0:	add	r5, r9, r2
   13dd4:	beq	13de0 <dcngettext@plt+0x2dc8>
   13dd8:	bl	10f10 <strlen@plt>
   13ddc:	str	r0, [sp, #24]
   13de0:	ldr	r3, [sp, #24]
   13de4:	cmp	r5, r3
   13de8:	bhi	14a70 <dcngettext@plt+0x3a58>
   13dec:	ldr	r2, [sp, #52]	; 0x34
   13df0:	ldr	r1, [sp, #60]	; 0x3c
   13df4:	ldr	r0, [sp, #48]	; 0x30
   13df8:	bl	10e20 <memcmp@plt>
   13dfc:	cmp	r0, #0
   13e00:	bne	14a70 <dcngettext@plt+0x3a58>
   13e04:	ldr	r3, [sp, #32]
   13e08:	cmp	r3, #0
   13e0c:	bne	1532c <dcngettext@plt+0x4314>
   13e10:	ldr	r3, [sp, #48]	; 0x30
   13e14:	ldrb	r5, [r3]
   13e18:	cmp	r5, #126	; 0x7e
   13e1c:	ldrls	pc, [pc, r5, lsl #2]
   13e20:	b	146f0 <dcngettext@plt+0x36d8>
   13e24:	ldrdeq	r4, [r1], -ip
   13e28:	strdeq	r4, [r1], -r0
   13e2c:	strdeq	r4, [r1], -r0
   13e30:	strdeq	r4, [r1], -r0
   13e34:	strdeq	r4, [r1], -r0
   13e38:	strdeq	r4, [r1], -r0
   13e3c:	strdeq	r4, [r1], -r0
   13e40:	andeq	r4, r1, r8, lsr #13
   13e44:	muleq	r1, r8, r6
   13e48:	muleq	r1, r8, r5
   13e4c:	andeq	r4, r1, r0, ror #10
   13e50:			; <UNDEFINED> instruction: 0x000145b8
   13e54:	andeq	r4, r1, r0, lsr #11
   13e58:	ldrdeq	r4, [r1], -r0
   13e5c:	strdeq	r4, [r1], -r0
   13e60:	strdeq	r4, [r1], -r0
   13e64:	strdeq	r4, [r1], -r0
   13e68:	strdeq	r4, [r1], -r0
   13e6c:	strdeq	r4, [r1], -r0
   13e70:	strdeq	r4, [r1], -r0
   13e74:	strdeq	r4, [r1], -r0
   13e78:	strdeq	r4, [r1], -r0
   13e7c:	strdeq	r4, [r1], -r0
   13e80:	strdeq	r4, [r1], -r0
   13e84:	strdeq	r4, [r1], -r0
   13e88:	strdeq	r4, [r1], -r0
   13e8c:	strdeq	r4, [r1], -r0
   13e90:	strdeq	r4, [r1], -r0
   13e94:	strdeq	r4, [r1], -r0
   13e98:	strdeq	r4, [r1], -r0
   13e9c:	strdeq	r4, [r1], -r0
   13ea0:	strdeq	r4, [r1], -r0
   13ea4:			; <UNDEFINED> instruction: 0x000146b0
   13ea8:	andeq	r4, r1, r4, asr #11
   13eac:	andeq	r4, r1, r4, asr #11
   13eb0:	andeq	r4, r1, r8, asr #13
   13eb4:	andeq	r4, r1, r4, asr #11
   13eb8:	andeq	r4, r1, r4, ror #13
   13ebc:	andeq	r4, r1, r4, asr #11
   13ec0:	andeq	r4, r1, r4, lsl #8
   13ec4:	andeq	r4, r1, r4, asr #11
   13ec8:	andeq	r4, r1, r4, asr #11
   13ecc:	andeq	r4, r1, r4, asr #11
   13ed0:	andeq	r4, r1, r4, ror #13
   13ed4:	andeq	r4, r1, r4, ror #13
   13ed8:	andeq	r4, r1, r4, ror #13
   13edc:	andeq	r4, r1, r4, ror #13
   13ee0:	andeq	r4, r1, r4, ror #13
   13ee4:	andeq	r4, r1, r4, ror #13
   13ee8:	andeq	r4, r1, r4, ror #13
   13eec:	andeq	r4, r1, r4, ror #13
   13ef0:	andeq	r4, r1, r4, ror #13
   13ef4:	andeq	r4, r1, r4, ror #13
   13ef8:	andeq	r4, r1, r4, ror #13
   13efc:	andeq	r4, r1, r4, ror #13
   13f00:	andeq	r4, r1, r4, ror #13
   13f04:	andeq	r4, r1, r4, ror #13
   13f08:	andeq	r4, r1, r4, ror #13
   13f0c:	andeq	r4, r1, r4, ror #13
   13f10:	andeq	r4, r1, r4, asr #11
   13f14:	andeq	r4, r1, r4, asr #11
   13f18:	andeq	r4, r1, r4, asr #11
   13f1c:	andeq	r4, r1, r4, asr #11
   13f20:	ldrdeq	r4, [r1], -r8
   13f24:	strdeq	r4, [r1], -r0
   13f28:	andeq	r4, r1, r4, ror #13
   13f2c:	andeq	r4, r1, r4, ror #13
   13f30:	andeq	r4, r1, r4, ror #13
   13f34:	andeq	r4, r1, r4, ror #13
   13f38:	andeq	r4, r1, r4, ror #13
   13f3c:	andeq	r4, r1, r4, ror #13
   13f40:	andeq	r4, r1, r4, ror #13
   13f44:	andeq	r4, r1, r4, ror #13
   13f48:	andeq	r4, r1, r4, ror #13
   13f4c:	andeq	r4, r1, r4, ror #13
   13f50:	andeq	r4, r1, r4, ror #13
   13f54:	andeq	r4, r1, r4, ror #13
   13f58:	andeq	r4, r1, r4, ror #13
   13f5c:	andeq	r4, r1, r4, ror #13
   13f60:	andeq	r4, r1, r4, ror #13
   13f64:	andeq	r4, r1, r4, ror #13
   13f68:	andeq	r4, r1, r4, ror #13
   13f6c:	andeq	r4, r1, r4, ror #13
   13f70:	andeq	r4, r1, r4, ror #13
   13f74:	andeq	r4, r1, r4, ror #13
   13f78:	andeq	r4, r1, r4, ror #13
   13f7c:	andeq	r4, r1, r4, ror #13
   13f80:	andeq	r4, r1, r4, ror #13
   13f84:	andeq	r4, r1, r4, ror #13
   13f88:	andeq	r4, r1, r4, ror #13
   13f8c:	andeq	r4, r1, r4, ror #13
   13f90:	andeq	r4, r1, r4, asr #11
   13f94:	muleq	r1, r0, r3
   13f98:	andeq	r4, r1, r4, ror #13
   13f9c:	andeq	r4, r1, r4, asr #11
   13fa0:	andeq	r4, r1, r4, ror #13
   13fa4:	andeq	r4, r1, r4, asr #11
   13fa8:	andeq	r4, r1, r4, ror #13
   13fac:	andeq	r4, r1, r4, ror #13
   13fb0:	andeq	r4, r1, r4, ror #13
   13fb4:	andeq	r4, r1, r4, ror #13
   13fb8:	andeq	r4, r1, r4, ror #13
   13fbc:	andeq	r4, r1, r4, ror #13
   13fc0:	andeq	r4, r1, r4, ror #13
   13fc4:	andeq	r4, r1, r4, ror #13
   13fc8:	andeq	r4, r1, r4, ror #13
   13fcc:	andeq	r4, r1, r4, ror #13
   13fd0:	andeq	r4, r1, r4, ror #13
   13fd4:	andeq	r4, r1, r4, ror #13
   13fd8:	andeq	r4, r1, r4, ror #13
   13fdc:	andeq	r4, r1, r4, ror #13
   13fe0:	andeq	r4, r1, r4, ror #13
   13fe4:	andeq	r4, r1, r4, ror #13
   13fe8:	andeq	r4, r1, r4, ror #13
   13fec:	andeq	r4, r1, r4, ror #13
   13ff0:	andeq	r4, r1, r4, ror #13
   13ff4:	andeq	r4, r1, r4, ror #13
   13ff8:	andeq	r4, r1, r4, ror #13
   13ffc:	andeq	r4, r1, r4, ror #13
   14000:	andeq	r4, r1, r4, ror #13
   14004:	andeq	r4, r1, r4, ror #13
   14008:	andeq	r4, r1, r4, ror #13
   1400c:	andeq	r4, r1, r4, ror #13
   14010:	andeq	r4, r1, r8, lsr #3
   14014:	andeq	r4, r1, r4, asr #11
   14018:	andeq	r4, r1, r8, lsr #3
   1401c:	andeq	r4, r1, r8, asr #13
   14020:	cmp	r4, #0
   14024:	moveq	r3, #1
   14028:	streq	r3, [sp, #28]
   1402c:	beq	14758 <dcngettext@plt+0x3740>
   14030:	mov	r3, #0
   14034:	mov	r4, r3
   14038:	mov	r2, #1
   1403c:	str	r2, [sp, #40]	; 0x28
   14040:	str	r3, [sp, #68]	; 0x44
   14044:	str	r2, [sp, #32]
   14048:	str	r2, [sp, #52]	; 0x34
   1404c:	ldr	r3, [pc, #2584]	; 14a6c <dcngettext@plt+0x3a54>
   14050:	str	r4, [sp, #44]	; 0x2c
   14054:	str	r4, [sp, #72]	; 0x48
   14058:	str	r4, [sp, #28]
   1405c:	str	r3, [sp, #60]	; 0x3c
   14060:	mov	r8, #2
   14064:	b	13d50 <dcngettext@plt+0x2d38>
   14068:	cmp	r4, #0
   1406c:	bne	152f8 <dcngettext@plt+0x42e0>
   14070:	cmp	sl, #0
   14074:	beq	150b8 <dcngettext@plt+0x40a0>
   14078:	mov	r3, #34	; 0x22
   1407c:	strb	r3, [fp]
   14080:	ldr	r3, [pc, #2528]	; 14a68 <dcngettext@plt+0x3a50>
   14084:	mov	r1, r4
   14088:	mov	r2, #1
   1408c:	str	r4, [sp, #68]	; 0x44
   14090:	str	r2, [sp, #40]	; 0x28
   14094:	mov	r4, r2
   14098:	str	r1, [sp, #44]	; 0x2c
   1409c:	str	r1, [sp, #72]	; 0x48
   140a0:	str	r1, [sp, #32]
   140a4:	str	r2, [sp, #28]
   140a8:	str	r2, [sp, #52]	; 0x34
   140ac:	str	r3, [sp, #60]	; 0x3c
   140b0:	b	13d50 <dcngettext@plt+0x2d38>
   140b4:	mov	r3, #0
   140b8:	str	r3, [sp, #68]	; 0x44
   140bc:	str	r3, [sp, #44]	; 0x2c
   140c0:	str	r3, [sp, #32]
   140c4:	str	r3, [sp, #28]
   140c8:	str	r3, [sp, #60]	; 0x3c
   140cc:	mov	r3, #1
   140d0:	str	r8, [sp, #72]	; 0x48
   140d4:	str	r8, [sp, #52]	; 0x34
   140d8:	mov	r4, r8
   140dc:	str	r3, [sp, #40]	; 0x28
   140e0:	b	13d50 <dcngettext@plt+0x2d38>
   140e4:	mov	r3, #1
   140e8:	str	r3, [sp, #40]	; 0x28
   140ec:	str	r3, [sp, #32]
   140f0:	str	r3, [sp, #28]
   140f4:	str	r3, [sp, #52]	; 0x34
   140f8:	ldr	r3, [pc, #2408]	; 14a68 <dcngettext@plt+0x3a50>
   140fc:	mov	r2, #0
   14100:	mov	r4, r2
   14104:	str	r2, [sp, #68]	; 0x44
   14108:	str	r2, [sp, #44]	; 0x2c
   1410c:	str	r2, [sp, #72]	; 0x48
   14110:	str	r3, [sp, #60]	; 0x3c
   14114:	mov	r8, #5
   14118:	b	13d50 <dcngettext@plt+0x2d38>
   1411c:	mov	r3, #0
   14120:	mov	r2, #1
   14124:	str	r2, [sp, #40]	; 0x28
   14128:	mov	r4, r3
   1412c:	str	r3, [sp, #68]	; 0x44
   14130:	str	r2, [sp, #28]
   14134:	str	r3, [sp, #44]	; 0x2c
   14138:	str	r3, [sp, #72]	; 0x48
   1413c:	str	r3, [sp, #32]
   14140:	str	r3, [sp, #52]	; 0x34
   14144:	str	r3, [sp, #60]	; 0x3c
   14148:	b	13d50 <dcngettext@plt+0x2d38>
   1414c:	mov	r2, #1
   14150:	mov	r3, #0
   14154:	str	r2, [sp, #40]	; 0x28
   14158:	mov	r4, r3
   1415c:	str	r3, [sp, #68]	; 0x44
   14160:	str	r8, [sp, #52]	; 0x34
   14164:	str	r2, [sp, #32]
   14168:	b	1404c <dcngettext@plt+0x3034>
   1416c:	mov	r3, #1
   14170:	str	r3, [sp, #40]	; 0x28
   14174:	str	r3, [sp, #32]
   14178:	str	r3, [sp, #28]
   1417c:	str	r3, [sp, #52]	; 0x34
   14180:	ldr	r3, [pc, #2276]	; 14a6c <dcngettext@plt+0x3a54>
   14184:	mov	r2, #0
   14188:	mov	r4, r2
   1418c:	str	r2, [sp, #68]	; 0x44
   14190:	str	r2, [sp, #44]	; 0x2c
   14194:	str	r2, [sp, #72]	; 0x48
   14198:	str	r3, [sp, #60]	; 0x3c
   1419c:	mov	r8, #2
   141a0:	b	13d50 <dcngettext@plt+0x2d38>
   141a4:	mov	r7, #0
   141a8:	ldr	r3, [sp, #24]
   141ac:	cmn	r3, #1
   141b0:	beq	14cec <dcngettext@plt+0x3cd4>
   141b4:	ldr	r3, [sp, #24]
   141b8:	subs	r3, r3, #1
   141bc:	movne	r3, #1
   141c0:	cmp	r3, #0
   141c4:	sub	r2, fp, #2
   141c8:	clz	r2, r2
   141cc:	lsr	r2, r2, #5
   141d0:	bne	143cc <dcngettext@plt+0x33b4>
   141d4:	cmp	r9, #0
   141d8:	bne	143cc <dcngettext@plt+0x33b4>
   141dc:	ldr	r3, [sp, #32]
   141e0:	tst	r3, r2
   141e4:	bne	144ec <dcngettext@plt+0x34d4>
   141e8:	ldr	r3, [sp, #28]
   141ec:	eor	r3, r3, #1
   141f0:	orr	r3, r2, r3
   141f4:	ldr	r2, [sp, #32]
   141f8:	eor	r3, r3, #1
   141fc:	orrs	r3, r2, r3
   14200:	beq	14230 <dcngettext@plt+0x3218>
   14204:	mov	r3, #0
   14208:	ldr	r1, [sp, #56]	; 0x38
   1420c:	cmp	r1, #0
   14210:	beq	14230 <dcngettext@plt+0x3218>
   14214:	lsr	r2, r5, #5
   14218:	and	r0, r5, #31
   1421c:	uxtb	r2, r2
   14220:	ldr	r1, [r1, r2, lsl #2]
   14224:	lsr	r2, r1, r0
   14228:	tst	r2, #1
   1422c:	bne	14238 <dcngettext@plt+0x3220>
   14230:	cmp	r7, #0
   14234:	beq	14488 <dcngettext@plt+0x3470>
   14238:	sub	r2, fp, #2
   1423c:	clz	r2, r2
   14240:	lsr	r2, r2, #5
   14244:	ldr	r3, [sp, #32]
   14248:	cmp	r3, #0
   1424c:	bne	14578 <dcngettext@plt+0x3560>
   14250:	ldr	r3, [sp, #44]	; 0x2c
   14254:	eor	r3, r3, #1
   14258:	ands	r3, r2, r3
   1425c:	beq	14294 <dcngettext@plt+0x327c>
   14260:	cmp	sl, r4
   14264:	movhi	r2, #39	; 0x27
   14268:	strbhi	r2, [r8, r4]
   1426c:	add	r2, r4, #1
   14270:	cmp	r2, sl
   14274:	movcc	r1, #36	; 0x24
   14278:	strbcc	r1, [r8, r2]
   1427c:	add	r2, r4, #2
   14280:	cmp	r2, sl
   14284:	add	r4, r4, #3
   14288:	movcc	r1, #39	; 0x27
   1428c:	strbcc	r1, [r8, r2]
   14290:	str	r3, [sp, #44]	; 0x2c
   14294:	cmp	r4, sl
   14298:	movcc	r3, #92	; 0x5c
   1429c:	strbcc	r3, [r8, r4]
   142a0:	add	r9, r9, #1
   142a4:	add	r4, r4, #1
   142a8:	cmp	r4, sl
   142ac:	ldr	r3, [sp, #40]	; 0x28
   142b0:	strbcc	r5, [r8, r4]
   142b4:	cmp	r6, #0
   142b8:	moveq	r3, #0
   142bc:	str	r3, [sp, #40]	; 0x28
   142c0:	ldr	r3, [sp, #24]
   142c4:	add	r4, r4, #1
   142c8:	cmn	r3, #1
   142cc:	bne	13d6c <dcngettext@plt+0x2d54>
   142d0:	ldr	r3, [sp, #36]	; 0x24
   142d4:	ldrb	r6, [r3, r9]
   142d8:	adds	r6, r6, #0
   142dc:	movne	r6, #1
   142e0:	cmp	r6, #0
   142e4:	bne	13d80 <dcngettext@plt+0x2d68>
   142e8:	str	fp, [sp, #160]	; 0xa0
   142ec:	mov	fp, r8
   142f0:	ldr	r8, [sp, #160]	; 0xa0
   142f4:	ldr	r1, [sp, #32]
   142f8:	cmp	r4, #0
   142fc:	sub	r2, r8, #2
   14300:	clz	r2, r2
   14304:	lsr	r2, r2, #5
   14308:	andeq	r3, r2, r1
   1430c:	movne	r3, #0
   14310:	cmp	r3, #0
   14314:	bne	15400 <dcngettext@plt+0x43e8>
   14318:	eor	r3, r1, #1
   1431c:	ands	r2, r2, r3
   14320:	beq	1533c <dcngettext@plt+0x4324>
   14324:	ldr	r3, [sp, #68]	; 0x44
   14328:	cmp	r3, #0
   1432c:	beq	15340 <dcngettext@plt+0x4328>
   14330:	ldr	r3, [sp, #40]	; 0x28
   14334:	cmp	r3, #0
   14338:	bne	153bc <dcngettext@plt+0x43a4>
   1433c:	ldr	r3, [sp, #72]	; 0x48
   14340:	adds	r3, r3, #0
   14344:	movne	r3, #1
   14348:	cmp	sl, #0
   1434c:	movne	r3, #0
   14350:	cmp	r3, #0
   14354:	ldreq	r2, [sp, #68]	; 0x44
   14358:	beq	15340 <dcngettext@plt+0x4328>
   1435c:	ldr	sl, [sp, #72]	; 0x48
   14360:	str	r3, [sp, #68]	; 0x44
   14364:	ldr	r3, [pc, #1792]	; 14a6c <dcngettext@plt+0x3a54>
   14368:	mov	r2, #39	; 0x27
   1436c:	mov	r4, #1
   14370:	str	r3, [sp, #60]	; 0x3c
   14374:	mov	r3, #0
   14378:	strb	r2, [fp]
   1437c:	str	r4, [sp, #52]	; 0x34
   14380:	mov	r8, #2
   14384:	str	r3, [sp, #32]
   14388:	b	13d50 <dcngettext@plt+0x2d38>
   1438c:	mov	r7, #0
   14390:	cmp	fp, #2
   14394:	beq	14ccc <dcngettext@plt+0x3cb4>
   14398:	ldr	r3, [sp, #52]	; 0x34
   1439c:	ldr	r2, [sp, #28]
   143a0:	ldr	r1, [sp, #32]
   143a4:	cmp	r3, #0
   143a8:	andne	r2, r2, r1
   143ac:	moveq	r2, #0
   143b0:	cmp	r2, #0
   143b4:	moveq	r5, #92	; 0x5c
   143b8:	moveq	r3, r5
   143bc:	bne	14cd8 <dcngettext@plt+0x3cc0>
   143c0:	ldr	r1, [sp, #28]
   143c4:	cmp	r1, #0
   143c8:	bne	15448 <dcngettext@plt+0x4430>
   143cc:	mov	r6, #0
   143d0:	b	141e8 <dcngettext@plt+0x31d0>
   143d4:	mov	r7, #0
   143d8:	cmp	fp, #2
   143dc:	beq	14d3c <dcngettext@plt+0x3d24>
   143e0:	cmp	fp, #5
   143e4:	beq	14d00 <dcngettext@plt+0x3ce8>
   143e8:	sub	r2, fp, #2
   143ec:	mov	r6, #0
   143f0:	clz	r2, r2
   143f4:	mov	r5, #63	; 0x3f
   143f8:	lsr	r2, r2, #5
   143fc:	b	141e8 <dcngettext@plt+0x31d0>
   14400:	mov	r7, #0
   14404:	cmp	fp, #2
   14408:	strne	r6, [sp, #68]	; 0x44
   1440c:	movne	r2, #0
   14410:	movne	r5, #39	; 0x27
   14414:	bne	141e8 <dcngettext@plt+0x31d0>
   14418:	ldr	r3, [sp, #32]
   1441c:	cmp	r3, #0
   14420:	bne	1511c <dcngettext@plt+0x4104>
   14424:	cmp	sl, #0
   14428:	ldr	r3, [sp, #72]	; 0x48
   1442c:	clz	r3, r3
   14430:	lsr	r3, r3, #5
   14434:	moveq	r3, #0
   14438:	cmp	r3, #0
   1443c:	bne	15050 <dcngettext@plt+0x4038>
   14440:	cmp	sl, r4
   14444:	movhi	r3, #39	; 0x27
   14448:	strbhi	r3, [r8, r4]
   1444c:	add	r3, r4, #1
   14450:	cmp	sl, r3
   14454:	movhi	r2, #92	; 0x5c
   14458:	strbhi	r2, [r8, r3]
   1445c:	add	r3, r4, #2
   14460:	cmp	sl, r3
   14464:	movhi	r2, #39	; 0x27
   14468:	strbhi	r2, [r8, r3]
   1446c:	mov	r3, #0
   14470:	cmp	r7, #0
   14474:	add	r4, r4, #3
   14478:	str	r3, [sp, #44]	; 0x2c
   1447c:	str	r6, [sp, #68]	; 0x44
   14480:	mov	r5, #39	; 0x27
   14484:	bne	14238 <dcngettext@plt+0x3220>
   14488:	ldr	r2, [sp, #44]	; 0x2c
   1448c:	eor	r3, r3, #1
   14490:	and	r3, r3, r2
   14494:	add	r9, r9, #1
   14498:	uxtb	r3, r3
   1449c:	cmp	r3, #0
   144a0:	beq	142a8 <dcngettext@plt+0x3290>
   144a4:	cmp	sl, r4
   144a8:	movhi	r3, #39	; 0x27
   144ac:	strbhi	r3, [r8, r4]
   144b0:	add	r3, r4, #1
   144b4:	cmp	sl, r3
   144b8:	movhi	r2, #39	; 0x27
   144bc:	strbhi	r2, [r8, r3]
   144c0:	mov	r3, #0
   144c4:	add	r4, r4, #2
   144c8:	str	r3, [sp, #44]	; 0x2c
   144cc:	b	142a8 <dcngettext@plt+0x3290>
   144d0:	mov	r3, #114	; 0x72
   144d4:	ldr	r1, [sp, #32]
   144d8:	sub	r2, fp, #2
   144dc:	clz	r2, r2
   144e0:	lsr	r2, r2, #5
   144e4:	tst	r2, r1
   144e8:	beq	143c0 <dcngettext@plt+0x33a8>
   144ec:	mov	fp, r8
   144f0:	mov	r8, #2
   144f4:	ldr	r3, [sp, #28]
   144f8:	cmp	r3, #0
   144fc:	movne	r8, #4
   14500:	ldr	r3, [sp, #164]	; 0xa4
   14504:	mov	ip, #0
   14508:	bic	r3, r3, #2
   1450c:	str	r3, [sp, #4]
   14510:	ldr	r3, [sp, #76]	; 0x4c
   14514:	str	r8, [sp]
   14518:	str	r3, [sp, #16]
   1451c:	ldr	r3, [sp, #80]	; 0x50
   14520:	ldr	r2, [sp, #36]	; 0x24
   14524:	str	r3, [sp, #12]
   14528:	mov	r1, sl
   1452c:	ldr	r3, [sp, #24]
   14530:	mov	r0, fp
   14534:	str	ip, [sp, #8]
   14538:	bl	13c58 <dcngettext@plt+0x2c40>
   1453c:	mov	r4, r0
   14540:	ldr	r3, [pc, #1304]	; 14a60 <dcngettext@plt+0x3a48>
   14544:	ldr	r2, [sp, #116]	; 0x74
   14548:	mov	r0, r4
   1454c:	ldr	r3, [r3]
   14550:	cmp	r2, r3
   14554:	bne	15444 <dcngettext@plt+0x442c>
   14558:	add	sp, sp, #124	; 0x7c
   1455c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14560:	mov	r5, #110	; 0x6e
   14564:	ldr	r3, [sp, #32]
   14568:	mov	r2, #0
   1456c:	cmp	r3, #0
   14570:	mov	r6, r2
   14574:	beq	14250 <dcngettext@plt+0x3238>
   14578:	str	fp, [sp, #160]	; 0xa0
   1457c:	mov	fp, r8
   14580:	ldr	r8, [sp, #160]	; 0xa0
   14584:	mov	r3, r2
   14588:	ldr	r2, [sp, #28]
   1458c:	and	r2, r2, r3
   14590:	str	r2, [sp, #28]
   14594:	b	144f4 <dcngettext@plt+0x34dc>
   14598:	mov	r5, #116	; 0x74
   1459c:	b	14564 <dcngettext@plt+0x354c>
   145a0:	mov	r5, #102	; 0x66
   145a4:	ldr	r3, [sp, #32]
   145a8:	cmp	r3, #0
   145ac:	bne	15158 <dcngettext@plt+0x4140>
   145b0:	mov	r6, #0
   145b4:	b	14294 <dcngettext@plt+0x327c>
   145b8:	mov	r5, #118	; 0x76
   145bc:	b	145a4 <dcngettext@plt+0x358c>
   145c0:	mov	r7, #0
   145c4:	mov	r6, #0
   145c8:	b	14204 <dcngettext@plt+0x31ec>
   145cc:	ldr	r3, [sp, #32]
   145d0:	cmp	r3, #0
   145d4:	bne	1539c <dcngettext@plt+0x4384>
   145d8:	mov	r7, r3
   145dc:	ldr	r3, [sp, #44]	; 0x2c
   145e0:	sub	r2, fp, #2
   145e4:	eor	r3, r3, #1
   145e8:	clz	r2, r2
   145ec:	lsr	r2, r2, #5
   145f0:	ands	r3, r2, r3
   145f4:	beq	1503c <dcngettext@plt+0x4024>
   145f8:	cmp	sl, r4
   145fc:	movhi	r1, #39	; 0x27
   14600:	strbhi	r1, [r8, r4]
   14604:	add	r1, r4, #1
   14608:	cmp	sl, r1
   1460c:	movhi	r0, #36	; 0x24
   14610:	strbhi	r0, [r8, r1]
   14614:	add	r1, r4, #2
   14618:	cmp	sl, r1
   1461c:	movhi	r0, #39	; 0x27
   14620:	strbhi	r0, [r8, r1]
   14624:	add	r1, r4, #3
   14628:	cmp	sl, r1
   1462c:	bls	1509c <dcngettext@plt+0x4084>
   14630:	mov	r4, r1
   14634:	mov	r1, #92	; 0x5c
   14638:	strb	r1, [r8, r4]
   1463c:	mov	r1, r4
   14640:	str	r3, [sp, #44]	; 0x2c
   14644:	cmp	fp, #2
   14648:	add	r4, r4, #1
   1464c:	beq	150e4 <dcngettext@plt+0x40cc>
   14650:	ldr	r0, [sp, #24]
   14654:	add	r3, r9, #1
   14658:	cmp	r3, r0
   1465c:	bcs	14674 <dcngettext@plt+0x365c>
   14660:	ldr	r0, [sp, #36]	; 0x24
   14664:	ldrb	r3, [r0, r3]
   14668:	sub	r3, r3, #48	; 0x30
   1466c:	cmp	r3, #9
   14670:	bls	150f4 <dcngettext@plt+0x40dc>
   14674:	mov	r5, #48	; 0x30
   14678:	ldr	r3, [sp, #28]
   1467c:	eor	r3, r3, #1
   14680:	orrs	r2, r2, r3
   14684:	mov	r3, r6
   14688:	moveq	r6, r2
   1468c:	beq	14208 <dcngettext@plt+0x31f0>
   14690:	mov	r6, #0
   14694:	b	14230 <dcngettext@plt+0x3218>
   14698:	mov	r2, #0
   1469c:	mov	r6, r2
   146a0:	mov	r5, #98	; 0x62
   146a4:	b	14250 <dcngettext@plt+0x3238>
   146a8:	mov	r5, #97	; 0x61
   146ac:	b	145b0 <dcngettext@plt+0x3598>
   146b0:	mov	r3, r7
   146b4:	mov	r6, r7
   146b8:	mov	r2, #0
   146bc:	mov	r7, r3
   146c0:	mov	r5, #32
   146c4:	b	141e8 <dcngettext@plt+0x31d0>
   146c8:	cmp	r9, #0
   146cc:	mov	r3, r7
   146d0:	bne	14c98 <dcngettext@plt+0x3c80>
   146d4:	mov	r6, r7
   146d8:	mov	r2, r9
   146dc:	mov	r7, r3
   146e0:	b	141e8 <dcngettext@plt+0x31d0>
   146e4:	mov	r6, r7
   146e8:	b	14204 <dcngettext@plt+0x31ec>
   146ec:	mov	r7, #0
   146f0:	ldr	r3, [sp, #64]	; 0x40
   146f4:	cmp	r3, #1
   146f8:	bne	14d54 <dcngettext@plt+0x3d3c>
   146fc:	bl	10ef8 <__ctype_b_loc@plt>
   14700:	ldr	r2, [sp, #64]	; 0x40
   14704:	sxth	r3, r5
   14708:	mov	ip, r2
   1470c:	lsl	r3, r3, #1
   14710:	ldr	r2, [r0]
   14714:	ldrh	r3, [r2, r3]
   14718:	and	r3, r3, #16384	; 0x4000
   1471c:	cmp	r3, #0
   14720:	ldr	r3, [sp, #28]
   14724:	movne	r6, #1
   14728:	moveq	r6, #0
   1472c:	movne	r2, #0
   14730:	andeq	r2, r3, #1
   14734:	cmp	r2, #0
   14738:	bne	15064 <dcngettext@plt+0x404c>
   1473c:	sub	r2, fp, #2
   14740:	clz	r2, r2
   14744:	lsr	r2, r2, #5
   14748:	b	141e8 <dcngettext@plt+0x31d0>
   1474c:	cmp	r4, #0
   14750:	bne	15410 <dcngettext@plt+0x43f8>
   14754:	str	r4, [sp, #28]
   14758:	cmp	sl, #0
   1475c:	bne	15454 <dcngettext@plt+0x443c>
   14760:	ldr	r3, [pc, #772]	; 14a6c <dcngettext@plt+0x3a54>
   14764:	mov	r4, #1
   14768:	str	r4, [sp, #40]	; 0x28
   1476c:	str	r3, [sp, #60]	; 0x3c
   14770:	str	r4, [sp, #52]	; 0x34
   14774:	str	sl, [sp, #72]	; 0x48
   14778:	str	sl, [sp, #68]	; 0x44
   1477c:	str	sl, [sp, #44]	; 0x2c
   14780:	str	sl, [sp, #32]
   14784:	mov	r8, #2
   14788:	b	13d50 <dcngettext@plt+0x2d38>
   1478c:	ldr	r3, [sp, #36]	; 0x24
   14790:	ldrb	r5, [r3, r9]
   14794:	cmp	r5, #126	; 0x7e
   14798:	ldrls	pc, [pc, r5, lsl #2]
   1479c:	b	146f0 <dcngettext@plt+0x36d8>
   147a0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   147a4:	strdeq	r4, [r1], -r0
   147a8:	strdeq	r4, [r1], -r0
   147ac:	strdeq	r4, [r1], -r0
   147b0:	strdeq	r4, [r1], -r0
   147b4:	strdeq	r4, [r1], -r0
   147b8:	strdeq	r4, [r1], -r0
   147bc:	andeq	r4, r1, r0, asr #19
   147c0:	andeq	r4, r1, ip, lsr #19
   147c4:	andeq	r4, r1, r4, lsr #19
   147c8:	muleq	r1, ip, r9
   147cc:	andeq	r4, r1, ip, asr #20
   147d0:	andeq	r4, r1, r8, lsr sl
   147d4:	ldrdeq	r4, [r1], -r0
   147d8:	strdeq	r4, [r1], -r0
   147dc:	strdeq	r4, [r1], -r0
   147e0:	strdeq	r4, [r1], -r0
   147e4:	strdeq	r4, [r1], -r0
   147e8:	strdeq	r4, [r1], -r0
   147ec:	strdeq	r4, [r1], -r0
   147f0:	strdeq	r4, [r1], -r0
   147f4:	strdeq	r4, [r1], -r0
   147f8:	strdeq	r4, [r1], -r0
   147fc:	strdeq	r4, [r1], -r0
   14800:	strdeq	r4, [r1], -r0
   14804:	strdeq	r4, [r1], -r0
   14808:	strdeq	r4, [r1], -r0
   1480c:	strdeq	r4, [r1], -r0
   14810:	strdeq	r4, [r1], -r0
   14814:	strdeq	r4, [r1], -r0
   14818:	strdeq	r4, [r1], -r0
   1481c:	strdeq	r4, [r1], -r0
   14820:	andeq	r4, r1, r8, lsr #20
   14824:	andeq	r4, r1, r4, lsl sl
   14828:	andeq	r4, r1, r4, lsl sl
   1482c:	andeq	r4, r1, r4, lsl #20
   14830:	andeq	r4, r1, r4, lsl sl
   14834:	andeq	r4, r1, ip, lsr r7
   14838:	andeq	r4, r1, r4, lsl sl
   1483c:	andeq	r4, r1, r4, lsl #8
   14840:	andeq	r4, r1, r4, lsl sl
   14844:	andeq	r4, r1, r4, lsl sl
   14848:	andeq	r4, r1, r4, lsl sl
   1484c:	andeq	r4, r1, ip, lsr r7
   14850:	andeq	r4, r1, ip, lsr r7
   14854:	andeq	r4, r1, ip, lsr r7
   14858:	andeq	r4, r1, ip, lsr r7
   1485c:	andeq	r4, r1, ip, lsr r7
   14860:	andeq	r4, r1, ip, lsr r7
   14864:	andeq	r4, r1, ip, lsr r7
   14868:	andeq	r4, r1, ip, lsr r7
   1486c:	andeq	r4, r1, ip, lsr r7
   14870:	andeq	r4, r1, ip, lsr r7
   14874:	andeq	r4, r1, ip, lsr r7
   14878:	andeq	r4, r1, ip, lsr r7
   1487c:	andeq	r4, r1, ip, lsr r7
   14880:	andeq	r4, r1, ip, lsr r7
   14884:	andeq	r4, r1, ip, lsr r7
   14888:	andeq	r4, r1, ip, lsr r7
   1488c:	andeq	r4, r1, r4, lsl sl
   14890:	andeq	r4, r1, r4, lsl sl
   14894:	andeq	r4, r1, r4, lsl sl
   14898:	andeq	r4, r1, r4, lsl sl
   1489c:	ldrdeq	r4, [r1], -r8
   148a0:	strdeq	r4, [r1], -r0
   148a4:	andeq	r4, r1, ip, lsr r7
   148a8:	andeq	r4, r1, ip, lsr r7
   148ac:	andeq	r4, r1, ip, lsr r7
   148b0:	andeq	r4, r1, ip, lsr r7
   148b4:	andeq	r4, r1, ip, lsr r7
   148b8:	andeq	r4, r1, ip, lsr r7
   148bc:	andeq	r4, r1, ip, lsr r7
   148c0:	andeq	r4, r1, ip, lsr r7
   148c4:	andeq	r4, r1, ip, lsr r7
   148c8:	andeq	r4, r1, ip, lsr r7
   148cc:	andeq	r4, r1, ip, lsr r7
   148d0:	andeq	r4, r1, ip, lsr r7
   148d4:	andeq	r4, r1, ip, lsr r7
   148d8:	andeq	r4, r1, ip, lsr r7
   148dc:	andeq	r4, r1, ip, lsr r7
   148e0:	andeq	r4, r1, ip, lsr r7
   148e4:	andeq	r4, r1, ip, lsr r7
   148e8:	andeq	r4, r1, ip, lsr r7
   148ec:	andeq	r4, r1, ip, lsr r7
   148f0:	andeq	r4, r1, ip, lsr r7
   148f4:	andeq	r4, r1, ip, lsr r7
   148f8:	andeq	r4, r1, ip, lsr r7
   148fc:	andeq	r4, r1, ip, lsr r7
   14900:	andeq	r4, r1, ip, lsr r7
   14904:	andeq	r4, r1, ip, lsr r7
   14908:	andeq	r4, r1, ip, lsr r7
   1490c:	andeq	r4, r1, r4, lsl sl
   14910:	muleq	r1, r0, r3
   14914:	andeq	r4, r1, ip, lsr r7
   14918:	andeq	r4, r1, r4, lsl sl
   1491c:	andeq	r4, r1, ip, lsr r7
   14920:	andeq	r4, r1, r4, lsl sl
   14924:	andeq	r4, r1, ip, lsr r7
   14928:	andeq	r4, r1, ip, lsr r7
   1492c:	andeq	r4, r1, ip, lsr r7
   14930:	andeq	r4, r1, ip, lsr r7
   14934:	andeq	r4, r1, ip, lsr r7
   14938:	andeq	r4, r1, ip, lsr r7
   1493c:	andeq	r4, r1, ip, lsr r7
   14940:	andeq	r4, r1, ip, lsr r7
   14944:	andeq	r4, r1, ip, lsr r7
   14948:	andeq	r4, r1, ip, lsr r7
   1494c:	andeq	r4, r1, ip, lsr r7
   14950:	andeq	r4, r1, ip, lsr r7
   14954:	andeq	r4, r1, ip, lsr r7
   14958:	andeq	r4, r1, ip, lsr r7
   1495c:	andeq	r4, r1, ip, lsr r7
   14960:	andeq	r4, r1, ip, lsr r7
   14964:	andeq	r4, r1, ip, lsr r7
   14968:	andeq	r4, r1, ip, lsr r7
   1496c:	andeq	r4, r1, ip, lsr r7
   14970:	andeq	r4, r1, ip, lsr r7
   14974:	andeq	r4, r1, ip, lsr r7
   14978:	andeq	r4, r1, ip, lsr r7
   1497c:	andeq	r4, r1, ip, lsr r7
   14980:	andeq	r4, r1, ip, lsr r7
   14984:	andeq	r4, r1, ip, lsr r7
   14988:	andeq	r4, r1, ip, lsr r7
   1498c:	andeq	r4, r1, r8, lsr #3
   14990:	andeq	r4, r1, r4, lsl sl
   14994:	andeq	r4, r1, r8, lsr #3
   14998:	andeq	r4, r1, r4, lsl #20
   1499c:	mov	r3, #110	; 0x6e
   149a0:	b	144d4 <dcngettext@plt+0x34bc>
   149a4:	mov	r3, #116	; 0x74
   149a8:	b	144d4 <dcngettext@plt+0x34bc>
   149ac:	sub	r2, fp, #2
   149b0:	mov	r3, #98	; 0x62
   149b4:	clz	r2, r2
   149b8:	lsr	r2, r2, #5
   149bc:	b	143c0 <dcngettext@plt+0x33a8>
   149c0:	sub	r2, fp, #2
   149c4:	mov	r3, #97	; 0x61
   149c8:	clz	r2, r2
   149cc:	lsr	r2, r2, #5
   149d0:	b	143c0 <dcngettext@plt+0x33a8>
   149d4:	ldr	r3, [sp, #28]
   149d8:	cmp	r3, #0
   149dc:	bne	145cc <dcngettext@plt+0x35b4>
   149e0:	ldr	r3, [sp, #164]	; 0xa4
   149e4:	tst	r3, #1
   149e8:	bne	1505c <dcngettext@plt+0x4044>
   149ec:	ldr	r6, [sp, #28]
   149f0:	sub	r2, fp, #2
   149f4:	mov	r7, r6
   149f8:	clz	r2, r2
   149fc:	lsr	r2, r2, #5
   14a00:	b	141e8 <dcngettext@plt+0x31d0>
   14a04:	sub	r2, fp, #2
   14a08:	clz	r2, r2
   14a0c:	lsr	r2, r2, #5
   14a10:	b	141d4 <dcngettext@plt+0x31bc>
   14a14:	sub	r2, fp, #2
   14a18:	mov	r6, #0
   14a1c:	clz	r2, r2
   14a20:	lsr	r2, r2, #5
   14a24:	b	141dc <dcngettext@plt+0x31c4>
   14a28:	sub	r2, fp, #2
   14a2c:	clz	r2, r2
   14a30:	lsr	r2, r2, #5
   14a34:	b	141dc <dcngettext@plt+0x31c4>
   14a38:	sub	r2, fp, #2
   14a3c:	mov	r3, #102	; 0x66
   14a40:	clz	r2, r2
   14a44:	lsr	r2, r2, #5
   14a48:	b	143c0 <dcngettext@plt+0x33a8>
   14a4c:	sub	r2, fp, #2
   14a50:	mov	r3, #118	; 0x76
   14a54:	clz	r2, r2
   14a58:	lsr	r2, r2, #5
   14a5c:	b	143c0 <dcngettext@plt+0x33a8>
   14a60:	andeq	r7, r2, r8, lsl #30
   14a64:	andeq	r7, r1, r4, ror #21
   14a68:	andeq	r7, r1, ip, asr #21
   14a6c:	andeq	r7, r1, r0, ror #21
   14a70:	ldr	r3, [sp, #48]	; 0x30
   14a74:	ldrb	r5, [r3]
   14a78:	cmp	r5, #126	; 0x7e
   14a7c:	ldrls	pc, [pc, r5, lsl #2]
   14a80:	b	146ec <dcngettext@plt+0x36d4>
   14a84:	andeq	r4, r1, ip, asr #11
   14a88:	andeq	r4, r1, ip, ror #13
   14a8c:	andeq	r4, r1, ip, ror #13
   14a90:	andeq	r4, r1, ip, ror #13
   14a94:	andeq	r4, r1, ip, ror #13
   14a98:	andeq	r4, r1, ip, ror #13
   14a9c:	andeq	r4, r1, ip, ror #13
   14aa0:	andeq	r4, r1, r4, asr #25
   14aa4:			; <UNDEFINED> instruction: 0x00014cbc
   14aa8:	muleq	r1, r8, r5
   14aac:	andeq	r4, r1, r0, ror #10
   14ab0:			; <UNDEFINED> instruction: 0x000145b8
   14ab4:	andeq	r4, r1, r0, lsr #11
   14ab8:			; <UNDEFINED> instruction: 0x00014cb0
   14abc:	andeq	r4, r1, ip, ror #13
   14ac0:	andeq	r4, r1, ip, ror #13
   14ac4:	andeq	r4, r1, ip, ror #13
   14ac8:	andeq	r4, r1, ip, ror #13
   14acc:	andeq	r4, r1, ip, ror #13
   14ad0:	andeq	r4, r1, ip, ror #13
   14ad4:	andeq	r4, r1, ip, ror #13
   14ad8:	andeq	r4, r1, ip, ror #13
   14adc:	andeq	r4, r1, ip, ror #13
   14ae0:	andeq	r4, r1, ip, ror #13
   14ae4:	andeq	r4, r1, ip, ror #13
   14ae8:	andeq	r4, r1, ip, ror #13
   14aec:	andeq	r4, r1, ip, ror #13
   14af0:	andeq	r4, r1, ip, ror #13
   14af4:	andeq	r4, r1, ip, ror #13
   14af8:	andeq	r4, r1, ip, ror #13
   14afc:	andeq	r4, r1, ip, ror #13
   14b00:	andeq	r4, r1, ip, ror #13
   14b04:	andeq	r4, r1, r8, lsr #25
   14b08:	andeq	r4, r1, r0, asr #11
   14b0c:	andeq	r4, r1, r0, asr #11
   14b10:	andeq	r4, r1, ip, lsl #25
   14b14:	andeq	r4, r1, r0, asr #11
   14b18:	andeq	r4, r1, r0, lsl #25
   14b1c:	andeq	r4, r1, r0, asr #11
   14b20:	andeq	r4, r1, r0, lsl #8
   14b24:	andeq	r4, r1, r0, asr #11
   14b28:	andeq	r4, r1, r0, asr #11
   14b2c:	andeq	r4, r1, r0, asr #11
   14b30:	andeq	r4, r1, r0, lsl #25
   14b34:	andeq	r4, r1, r0, lsl #25
   14b38:	andeq	r4, r1, r0, lsl #25
   14b3c:	andeq	r4, r1, r0, lsl #25
   14b40:	andeq	r4, r1, r0, lsl #25
   14b44:	andeq	r4, r1, r0, lsl #25
   14b48:	andeq	r4, r1, r0, lsl #25
   14b4c:	andeq	r4, r1, r0, lsl #25
   14b50:	andeq	r4, r1, r0, lsl #25
   14b54:	andeq	r4, r1, r0, lsl #25
   14b58:	andeq	r4, r1, r0, lsl #25
   14b5c:	andeq	r4, r1, r0, lsl #25
   14b60:	andeq	r4, r1, r0, lsl #25
   14b64:	andeq	r4, r1, r0, lsl #25
   14b68:	andeq	r4, r1, r0, lsl #25
   14b6c:	andeq	r4, r1, r0, lsl #25
   14b70:	andeq	r4, r1, r0, asr #11
   14b74:	andeq	r4, r1, r0, asr #11
   14b78:	andeq	r4, r1, r0, asr #11
   14b7c:	andeq	r4, r1, r0, asr #11
   14b80:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b84:	andeq	r4, r1, ip, ror #13
   14b88:	andeq	r4, r1, r0, lsl #25
   14b8c:	andeq	r4, r1, r0, lsl #25
   14b90:	andeq	r4, r1, r0, lsl #25
   14b94:	andeq	r4, r1, r0, lsl #25
   14b98:	andeq	r4, r1, r0, lsl #25
   14b9c:	andeq	r4, r1, r0, lsl #25
   14ba0:	andeq	r4, r1, r0, lsl #25
   14ba4:	andeq	r4, r1, r0, lsl #25
   14ba8:	andeq	r4, r1, r0, lsl #25
   14bac:	andeq	r4, r1, r0, lsl #25
   14bb0:	andeq	r4, r1, r0, lsl #25
   14bb4:	andeq	r4, r1, r0, lsl #25
   14bb8:	andeq	r4, r1, r0, lsl #25
   14bbc:	andeq	r4, r1, r0, lsl #25
   14bc0:	andeq	r4, r1, r0, lsl #25
   14bc4:	andeq	r4, r1, r0, lsl #25
   14bc8:	andeq	r4, r1, r0, lsl #25
   14bcc:	andeq	r4, r1, r0, lsl #25
   14bd0:	andeq	r4, r1, r0, lsl #25
   14bd4:	andeq	r4, r1, r0, lsl #25
   14bd8:	andeq	r4, r1, r0, lsl #25
   14bdc:	andeq	r4, r1, r0, lsl #25
   14be0:	andeq	r4, r1, r0, lsl #25
   14be4:	andeq	r4, r1, r0, lsl #25
   14be8:	andeq	r4, r1, r0, lsl #25
   14bec:	andeq	r4, r1, r0, lsl #25
   14bf0:	andeq	r4, r1, r0, asr #11
   14bf4:	andeq	r4, r1, ip, lsl #7
   14bf8:	andeq	r4, r1, r0, lsl #25
   14bfc:	andeq	r4, r1, r0, asr #11
   14c00:	andeq	r4, r1, r0, lsl #25
   14c04:	andeq	r4, r1, r0, asr #11
   14c08:	andeq	r4, r1, r0, lsl #25
   14c0c:	andeq	r4, r1, r0, lsl #25
   14c10:	andeq	r4, r1, r0, lsl #25
   14c14:	andeq	r4, r1, r0, lsl #25
   14c18:	andeq	r4, r1, r0, lsl #25
   14c1c:	andeq	r4, r1, r0, lsl #25
   14c20:	andeq	r4, r1, r0, lsl #25
   14c24:	andeq	r4, r1, r0, lsl #25
   14c28:	andeq	r4, r1, r0, lsl #25
   14c2c:	andeq	r4, r1, r0, lsl #25
   14c30:	andeq	r4, r1, r0, lsl #25
   14c34:	andeq	r4, r1, r0, lsl #25
   14c38:	andeq	r4, r1, r0, lsl #25
   14c3c:	andeq	r4, r1, r0, lsl #25
   14c40:	andeq	r4, r1, r0, lsl #25
   14c44:	andeq	r4, r1, r0, lsl #25
   14c48:	andeq	r4, r1, r0, lsl #25
   14c4c:	andeq	r4, r1, r0, lsl #25
   14c50:	andeq	r4, r1, r0, lsl #25
   14c54:	andeq	r4, r1, r0, lsl #25
   14c58:	andeq	r4, r1, r0, lsl #25
   14c5c:	andeq	r4, r1, r0, lsl #25
   14c60:	andeq	r4, r1, r0, lsl #25
   14c64:	andeq	r4, r1, r0, lsl #25
   14c68:	andeq	r4, r1, r0, lsl #25
   14c6c:	andeq	r4, r1, r0, lsl #25
   14c70:	andeq	r4, r1, r4, lsr #3
   14c74:	andeq	r4, r1, r0, asr #11
   14c78:	andeq	r4, r1, r4, lsr #3
   14c7c:	andeq	r4, r1, ip, lsl #25
   14c80:	mov	r6, r7
   14c84:	mov	r7, #0
   14c88:	b	14204 <dcngettext@plt+0x31ec>
   14c8c:	cmp	r9, #0
   14c90:	mov	r3, #0
   14c94:	beq	146d4 <dcngettext@plt+0x36bc>
   14c98:	mov	r6, #0
   14c9c:	mov	r7, r3
   14ca0:	mov	r3, r6
   14ca4:	b	14208 <dcngettext@plt+0x31f0>
   14ca8:	mov	r3, #0
   14cac:	b	146b4 <dcngettext@plt+0x369c>
   14cb0:	mov	r7, #0
   14cb4:	mov	r3, #114	; 0x72
   14cb8:	b	144d4 <dcngettext@plt+0x34bc>
   14cbc:	mov	r5, #98	; 0x62
   14cc0:	b	14564 <dcngettext@plt+0x354c>
   14cc4:	mov	r5, #97	; 0x61
   14cc8:	b	145a4 <dcngettext@plt+0x358c>
   14ccc:	ldr	r3, [sp, #32]
   14cd0:	cmp	r3, #0
   14cd4:	bne	1511c <dcngettext@plt+0x4104>
   14cd8:	add	r9, r9, #1
   14cdc:	ldr	r3, [sp, #44]	; 0x2c
   14ce0:	mov	r6, #0
   14ce4:	mov	r5, #92	; 0x5c
   14ce8:	b	1449c <dcngettext@plt+0x3484>
   14cec:	ldr	r3, [sp, #36]	; 0x24
   14cf0:	ldrb	r3, [r3, #1]
   14cf4:	adds	r3, r3, #0
   14cf8:	movne	r3, #1
   14cfc:	b	141c0 <dcngettext@plt+0x31a8>
   14d00:	ldr	r3, [sp, #164]	; 0xa4
   14d04:	ands	r3, r3, #4
   14d08:	beq	14d2c <dcngettext@plt+0x3d14>
   14d0c:	ldr	r2, [sp, #24]
   14d10:	add	r3, r9, #2
   14d14:	cmp	r3, r2
   14d18:	bcs	14d2c <dcngettext@plt+0x3d14>
   14d1c:	ldr	r2, [sp, #48]	; 0x30
   14d20:	ldrb	r5, [r2, #1]
   14d24:	cmp	r5, #63	; 0x3f
   14d28:	beq	15190 <dcngettext@plt+0x4178>
   14d2c:	mov	r2, #0
   14d30:	mov	r6, r2
   14d34:	mov	r5, #63	; 0x3f
   14d38:	b	141e8 <dcngettext@plt+0x31d0>
   14d3c:	ldr	r3, [sp, #32]
   14d40:	cmp	r3, #0
   14d44:	bne	1511c <dcngettext@plt+0x4104>
   14d48:	mov	r6, r3
   14d4c:	mov	r5, #63	; 0x3f
   14d50:	b	14230 <dcngettext@plt+0x3218>
   14d54:	ldr	r3, [sp, #24]
   14d58:	cmn	r3, #1
   14d5c:	mov	r3, #0
   14d60:	str	r3, [sp, #108]	; 0x6c
   14d64:	str	r3, [sp, #112]	; 0x70
   14d68:	bne	14d78 <dcngettext@plt+0x3d60>
   14d6c:	ldr	r0, [sp, #36]	; 0x24
   14d70:	bl	10f10 <strlen@plt>
   14d74:	str	r0, [sp, #24]
   14d78:	mov	r3, #0
   14d7c:	str	sl, [sp, #88]	; 0x58
   14d80:	ldr	sl, [sp, #36]	; 0x24
   14d84:	str	r5, [sp, #92]	; 0x5c
   14d88:	mov	r5, r3
   14d8c:	str	r7, [sp, #96]	; 0x60
   14d90:	str	r4, [sp, #100]	; 0x64
   14d94:	str	r8, [sp, #84]	; 0x54
   14d98:	ldr	r3, [sp, #24]
   14d9c:	add	r4, r9, r5
   14da0:	add	r7, sl, r4
   14da4:	sub	r2, r3, r4
   14da8:	mov	r1, r7
   14dac:	add	r3, sp, #108	; 0x6c
   14db0:	add	r0, sp, #104	; 0x68
   14db4:	bl	16788 <dcngettext@plt+0x5770>
   14db8:	subs	r8, r0, #0
   14dbc:	beq	14e0c <dcngettext@plt+0x3df4>
   14dc0:	cmn	r8, #1
   14dc4:	beq	1516c <dcngettext@plt+0x4154>
   14dc8:	cmn	r8, #2
   14dcc:	beq	1528c <dcngettext@plt+0x4274>
   14dd0:	ldr	r3, [sp, #32]
   14dd4:	cmp	fp, #2
   14dd8:	movne	r3, #0
   14ddc:	andeq	r3, r3, #1
   14de0:	cmp	r3, #0
   14de4:	bne	14f6c <dcngettext@plt+0x3f54>
   14de8:	ldr	r0, [sp, #104]	; 0x68
   14dec:	bl	10e5c <iswprint@plt>
   14df0:	add	r5, r5, r8
   14df4:	cmp	r0, #0
   14df8:	add	r0, sp, #108	; 0x6c
   14dfc:	moveq	r6, #0
   14e00:	bl	10e08 <mbsinit@plt>
   14e04:	cmp	r0, #0
   14e08:	beq	14d98 <dcngettext@plt+0x3d80>
   14e0c:	ldr	r3, [sp, #28]
   14e10:	mov	ip, r5
   14e14:	eor	r2, r6, #1
   14e18:	ldr	r5, [sp, #92]	; 0x5c
   14e1c:	ldr	r7, [sp, #96]	; 0x60
   14e20:	ldr	r4, [sp, #100]	; 0x64
   14e24:	ldr	r8, [sp, #84]	; 0x54
   14e28:	ldr	sl, [sp, #88]	; 0x58
   14e2c:	and	r2, r2, r3
   14e30:	cmp	ip, #1
   14e34:	bls	14734 <dcngettext@plt+0x371c>
   14e38:	add	r1, ip, r9
   14e3c:	ldr	lr, [sp, #48]	; 0x30
   14e40:	mov	r0, #0
   14e44:	str	r6, [sp, #48]	; 0x30
   14e48:	mov	ip, #39	; 0x27
   14e4c:	ldr	r6, [sp, #44]	; 0x2c
   14e50:	b	14f08 <dcngettext@plt+0x3ef0>
   14e54:	ldr	r0, [sp, #32]
   14e58:	sub	r3, fp, #2
   14e5c:	cmp	r0, #0
   14e60:	clz	r3, r3
   14e64:	lsr	r3, r3, #5
   14e68:	bne	15070 <dcngettext@plt+0x4058>
   14e6c:	eor	r0, r6, #1
   14e70:	ands	r3, r3, r0
   14e74:	beq	14ea4 <dcngettext@plt+0x3e8c>
   14e78:	add	r0, r4, #1
   14e7c:	cmp	sl, r4
   14e80:	strbhi	ip, [r8, r4]
   14e84:	cmp	sl, r0
   14e88:	movhi	r6, #36	; 0x24
   14e8c:	strbhi	r6, [r8, r0]
   14e90:	add	r0, r4, #2
   14e94:	mov	r6, r3
   14e98:	add	r4, r4, #3
   14e9c:	cmp	sl, r0
   14ea0:	strbhi	ip, [r8, r0]
   14ea4:	cmp	sl, r4
   14ea8:	movhi	r3, #92	; 0x5c
   14eac:	strbhi	r3, [r8, r4]
   14eb0:	add	r3, r4, #1
   14eb4:	cmp	sl, r3
   14eb8:	lsrhi	r0, r5, #6
   14ebc:	addhi	r0, r0, #48	; 0x30
   14ec0:	strbhi	r0, [r8, r3]
   14ec4:	add	r0, r4, #2
   14ec8:	cmp	sl, r0
   14ecc:	lsrhi	r3, r5, #3
   14ed0:	andhi	r3, r3, #7
   14ed4:	addhi	r3, r3, #48	; 0x30
   14ed8:	add	r9, r9, #1
   14edc:	strbhi	r3, [r8, r0]
   14ee0:	and	r5, r5, #7
   14ee4:	cmp	r9, r1
   14ee8:	add	r5, r5, #48	; 0x30
   14eec:	add	r4, r4, #3
   14ef0:	bcs	15090 <dcngettext@plt+0x4078>
   14ef4:	mov	r0, r2
   14ef8:	cmp	sl, r4
   14efc:	strbhi	r5, [r8, r4]
   14f00:	ldrb	r5, [lr, #1]!
   14f04:	add	r4, r4, #1
   14f08:	cmp	r2, #0
   14f0c:	bne	14e54 <dcngettext@plt+0x3e3c>
   14f10:	eor	r3, r0, #1
   14f14:	and	r3, r3, r6
   14f18:	cmp	r7, #0
   14f1c:	uxtb	r3, r3
   14f20:	beq	14f34 <dcngettext@plt+0x3f1c>
   14f24:	cmp	sl, r4
   14f28:	movhi	r7, #92	; 0x5c
   14f2c:	strbhi	r7, [r8, r4]
   14f30:	add	r4, r4, #1
   14f34:	add	r9, r9, #1
   14f38:	cmp	r9, r1
   14f3c:	bcs	15084 <dcngettext@plt+0x406c>
   14f40:	cmp	r3, #0
   14f44:	beq	150b0 <dcngettext@plt+0x4098>
   14f48:	cmp	sl, r4
   14f4c:	add	r3, r4, #1
   14f50:	strbhi	ip, [r8, r4]
   14f54:	mov	r7, #0
   14f58:	cmp	sl, r3
   14f5c:	strbhi	ip, [r8, r3]
   14f60:	add	r4, r4, #2
   14f64:	mov	r6, r7
   14f68:	b	14ef8 <dcngettext@plt+0x3ee0>
   14f6c:	cmp	r8, #1
   14f70:	beq	14de8 <dcngettext@plt+0x3dd0>
   14f74:	add	r1, r4, #1
   14f78:	add	r3, sl, r8
   14f7c:	add	r1, sl, r1
   14f80:	add	r4, r3, r4
   14f84:	ldrb	r3, [r1], #1
   14f88:	sub	r3, r3, #91	; 0x5b
   14f8c:	cmp	r3, #33	; 0x21
   14f90:	ldrls	pc, [pc, r3, lsl #2]
   14f94:	b	15020 <dcngettext@plt+0x4008>
   14f98:	andeq	r5, r1, ip, lsr #32
   14f9c:	andeq	r5, r1, ip, lsr #32
   14fa0:	andeq	r5, r1, r0, lsr #32
   14fa4:	andeq	r5, r1, ip, lsr #32
   14fa8:	andeq	r5, r1, r0, lsr #32
   14fac:	andeq	r5, r1, ip, lsr #32
   14fb0:	andeq	r5, r1, r0, lsr #32
   14fb4:	andeq	r5, r1, r0, lsr #32
   14fb8:	andeq	r5, r1, r0, lsr #32
   14fbc:	andeq	r5, r1, r0, lsr #32
   14fc0:	andeq	r5, r1, r0, lsr #32
   14fc4:	andeq	r5, r1, r0, lsr #32
   14fc8:	andeq	r5, r1, r0, lsr #32
   14fcc:	andeq	r5, r1, r0, lsr #32
   14fd0:	andeq	r5, r1, r0, lsr #32
   14fd4:	andeq	r5, r1, r0, lsr #32
   14fd8:	andeq	r5, r1, r0, lsr #32
   14fdc:	andeq	r5, r1, r0, lsr #32
   14fe0:	andeq	r5, r1, r0, lsr #32
   14fe4:	andeq	r5, r1, r0, lsr #32
   14fe8:	andeq	r5, r1, r0, lsr #32
   14fec:	andeq	r5, r1, r0, lsr #32
   14ff0:	andeq	r5, r1, r0, lsr #32
   14ff4:	andeq	r5, r1, r0, lsr #32
   14ff8:	andeq	r5, r1, r0, lsr #32
   14ffc:	andeq	r5, r1, r0, lsr #32
   15000:	andeq	r5, r1, r0, lsr #32
   15004:	andeq	r5, r1, r0, lsr #32
   15008:	andeq	r5, r1, r0, lsr #32
   1500c:	andeq	r5, r1, r0, lsr #32
   15010:	andeq	r5, r1, r0, lsr #32
   15014:	andeq	r5, r1, r0, lsr #32
   15018:	andeq	r5, r1, r0, lsr #32
   1501c:	andeq	r5, r1, ip, lsr #32
   15020:	cmp	r4, r1
   15024:	bne	14f84 <dcngettext@plt+0x3f6c>
   15028:	b	14de8 <dcngettext@plt+0x3dd0>
   1502c:	ldr	fp, [sp, #84]	; 0x54
   15030:	ldr	sl, [sp, #88]	; 0x58
   15034:	mov	r8, #2
   15038:	b	144f4 <dcngettext@plt+0x34dc>
   1503c:	cmp	sl, r4
   15040:	movls	r1, r4
   15044:	bls	14644 <dcngettext@plt+0x362c>
   15048:	ldr	r3, [sp, #44]	; 0x2c
   1504c:	b	14634 <dcngettext@plt+0x361c>
   15050:	str	sl, [sp, #72]	; 0x48
   15054:	ldr	sl, [sp, #32]
   15058:	b	1446c <dcngettext@plt+0x3454>
   1505c:	add	r9, r9, #1
   15060:	b	13d60 <dcngettext@plt+0x2d48>
   15064:	ldr	r2, [sp, #28]
   15068:	mov	r6, #0
   1506c:	b	14e38 <dcngettext@plt+0x3e20>
   15070:	str	fp, [sp, #160]	; 0xa0
   15074:	str	r3, [sp, #28]
   15078:	mov	fp, r8
   1507c:	ldr	r8, [sp, #160]	; 0xa0
   15080:	b	144f4 <dcngettext@plt+0x34dc>
   15084:	str	r6, [sp, #44]	; 0x2c
   15088:	ldr	r6, [sp, #48]	; 0x30
   1508c:	b	1449c <dcngettext@plt+0x3484>
   15090:	str	r6, [sp, #44]	; 0x2c
   15094:	ldr	r6, [sp, #48]	; 0x30
   15098:	b	142a8 <dcngettext@plt+0x3290>
   1509c:	add	r4, r4, #4
   150a0:	str	r3, [sp, #44]	; 0x2c
   150a4:	mov	r6, #0
   150a8:	mov	r5, #48	; 0x30
   150ac:	b	14230 <dcngettext@plt+0x3218>
   150b0:	mov	r7, r3
   150b4:	b	14ef8 <dcngettext@plt+0x3ee0>
   150b8:	ldr	r3, [pc, #-1624]	; 14a68 <dcngettext@plt+0x3a50>
   150bc:	mov	r4, #1
   150c0:	str	r4, [sp, #40]	; 0x28
   150c4:	str	r4, [sp, #28]
   150c8:	str	r4, [sp, #52]	; 0x34
   150cc:	str	sl, [sp, #72]	; 0x48
   150d0:	str	sl, [sp, #68]	; 0x44
   150d4:	str	sl, [sp, #44]	; 0x2c
   150d8:	str	sl, [sp, #32]
   150dc:	str	r3, [sp, #60]	; 0x3c
   150e0:	b	13d50 <dcngettext@plt+0x2d38>
   150e4:	mov	r3, r6
   150e8:	mov	r5, #48	; 0x30
   150ec:	mov	r6, #0
   150f0:	b	14230 <dcngettext@plt+0x3218>
   150f4:	cmp	sl, r4
   150f8:	movhi	r3, #48	; 0x30
   150fc:	strbhi	r3, [r8, r4]
   15100:	add	r3, r1, #2
   15104:	cmp	sl, r3
   15108:	movhi	r0, #48	; 0x30
   1510c:	strbhi	r0, [r8, r3]
   15110:	add	r4, r1, #3
   15114:	mov	r5, #48	; 0x30
   15118:	b	14678 <dcngettext@plt+0x3660>
   1511c:	str	fp, [sp, #160]	; 0xa0
   15120:	mov	fp, r8
   15124:	ldr	r8, [sp, #160]	; 0xa0
   15128:	b	144f4 <dcngettext@plt+0x34dc>
   1512c:	ldr	r2, [sp, #80]	; 0x50
   15130:	ldrb	r3, [r2]
   15134:	cmp	r3, #0
   15138:	beq	13d20 <dcngettext@plt+0x2d08>
   1513c:	cmp	sl, r4
   15140:	strbhi	r3, [fp, r4]
   15144:	ldrb	r3, [r2, #1]!
   15148:	add	r4, r4, #1
   1514c:	cmp	r3, #0
   15150:	bne	1513c <dcngettext@plt+0x4124>
   15154:	b	13d20 <dcngettext@plt+0x2d08>
   15158:	str	fp, [sp, #160]	; 0xa0
   1515c:	mov	r3, #0
   15160:	mov	fp, r8
   15164:	ldr	r8, [sp, #160]	; 0xa0
   15168:	b	14588 <dcngettext@plt+0x3570>
   1516c:	mov	ip, r5
   15170:	ldr	r7, [sp, #96]	; 0x60
   15174:	ldr	r5, [sp, #92]	; 0x5c
   15178:	ldr	r4, [sp, #100]	; 0x64
   1517c:	ldr	r8, [sp, #84]	; 0x54
   15180:	ldr	sl, [sp, #88]	; 0x58
   15184:	ldr	r2, [sp, #28]
   15188:	mov	r6, #0
   1518c:	b	14e30 <dcngettext@plt+0x3e18>
   15190:	ldr	r2, [sp, #36]	; 0x24
   15194:	ldrb	r1, [r2, r3]
   15198:	sub	r2, r1, #33	; 0x21
   1519c:	cmp	r2, #29
   151a0:	ldrls	pc, [pc, r2, lsl #2]
   151a4:	b	15280 <dcngettext@plt+0x4268>
   151a8:	andeq	r5, r1, r0, lsr #4
   151ac:	andeq	r5, r1, r0, lsl #5
   151b0:	andeq	r5, r1, r0, lsl #5
   151b4:	andeq	r5, r1, r0, lsl #5
   151b8:	andeq	r5, r1, r0, lsl #5
   151bc:	andeq	r5, r1, r0, lsl #5
   151c0:	andeq	r5, r1, r0, lsr #4
   151c4:	andeq	r5, r1, r0, lsr #4
   151c8:	andeq	r5, r1, r0, lsr #4
   151cc:	andeq	r5, r1, r0, lsl #5
   151d0:	andeq	r5, r1, r0, lsl #5
   151d4:	andeq	r5, r1, r0, lsl #5
   151d8:	andeq	r5, r1, r0, lsr #4
   151dc:	andeq	r5, r1, r0, lsl #5
   151e0:	andeq	r5, r1, r0, lsr #4
   151e4:	andeq	r5, r1, r0, lsl #5
   151e8:	andeq	r5, r1, r0, lsl #5
   151ec:	andeq	r5, r1, r0, lsl #5
   151f0:	andeq	r5, r1, r0, lsl #5
   151f4:	andeq	r5, r1, r0, lsl #5
   151f8:	andeq	r5, r1, r0, lsl #5
   151fc:	andeq	r5, r1, r0, lsl #5
   15200:	andeq	r5, r1, r0, lsl #5
   15204:	andeq	r5, r1, r0, lsl #5
   15208:	andeq	r5, r1, r0, lsl #5
   1520c:	andeq	r5, r1, r0, lsl #5
   15210:	andeq	r5, r1, r0, lsl #5
   15214:	andeq	r5, r1, r0, lsr #4
   15218:	andeq	r5, r1, r0, lsr #4
   1521c:	andeq	r5, r1, r0, lsr #4
   15220:	ldr	r2, [sp, #32]
   15224:	cmp	r2, #0
   15228:	bne	1532c <dcngettext@plt+0x4314>
   1522c:	cmp	sl, r4
   15230:	movhi	r2, #63	; 0x3f
   15234:	strbhi	r2, [r8, r4]
   15238:	add	r2, r4, #1
   1523c:	cmp	sl, r2
   15240:	movhi	r0, #34	; 0x22
   15244:	strbhi	r0, [r8, r2]
   15248:	add	r2, r4, #2
   1524c:	cmp	sl, r2
   15250:	movhi	r0, #34	; 0x22
   15254:	strbhi	r0, [r8, r2]
   15258:	add	r2, r4, #3
   1525c:	cmp	sl, r2
   15260:	movhi	r0, #63	; 0x3f
   15264:	strbhi	r0, [r8, r2]
   15268:	mov	r2, #0
   1526c:	add	r4, r4, #4
   15270:	mov	r5, r1
   15274:	mov	r9, r3
   15278:	mov	r6, r2
   1527c:	b	14678 <dcngettext@plt+0x3660>
   15280:	mov	r2, #0
   15284:	mov	r6, r2
   15288:	b	141e8 <dcngettext@plt+0x31d0>
   1528c:	ldr	r0, [sp, #24]
   15290:	mov	r1, r4
   15294:	cmp	r1, r0
   15298:	mov	r2, r7
   1529c:	mov	r3, r5
   152a0:	mov	ip, r5
   152a4:	ldr	r7, [sp, #96]	; 0x60
   152a8:	ldr	r5, [sp, #92]	; 0x5c
   152ac:	ldr	r4, [sp, #100]	; 0x64
   152b0:	ldr	r8, [sp, #84]	; 0x54
   152b4:	ldr	sl, [sp, #88]	; 0x58
   152b8:	bcs	152ec <dcngettext@plt+0x42d4>
   152bc:	ldrb	r6, [r2]
   152c0:	cmp	r6, #0
   152c4:	bne	152d8 <dcngettext@plt+0x42c0>
   152c8:	b	15408 <dcngettext@plt+0x43f0>
   152cc:	ldrb	r6, [r2, #1]!
   152d0:	cmp	r6, #0
   152d4:	beq	15390 <dcngettext@plt+0x4378>
   152d8:	add	r3, r3, #1
   152dc:	add	r1, r9, r3
   152e0:	cmp	r1, r0
   152e4:	bcc	152cc <dcngettext@plt+0x42b4>
   152e8:	mov	ip, r3
   152ec:	ldr	r2, [sp, #28]
   152f0:	mov	r6, #0
   152f4:	b	14e30 <dcngettext@plt+0x3e18>
   152f8:	mov	r3, #1
   152fc:	str	r3, [sp, #40]	; 0x28
   15300:	str	r3, [sp, #32]
   15304:	str	r3, [sp, #28]
   15308:	str	r3, [sp, #52]	; 0x34
   1530c:	ldr	r3, [pc, #-2220]	; 14a68 <dcngettext@plt+0x3a50>
   15310:	mov	r2, #0
   15314:	str	r2, [sp, #68]	; 0x44
   15318:	str	r2, [sp, #44]	; 0x2c
   1531c:	str	r2, [sp, #72]	; 0x48
   15320:	mov	r4, r2
   15324:	str	r3, [sp, #60]	; 0x3c
   15328:	b	13d50 <dcngettext@plt+0x2d38>
   1532c:	str	fp, [sp, #160]	; 0xa0
   15330:	mov	fp, r8
   15334:	ldr	r8, [sp, #160]	; 0xa0
   15338:	b	14500 <dcngettext@plt+0x34e8>
   1533c:	mov	r2, r3
   15340:	ldr	r3, [sp, #60]	; 0x3c
   15344:	cmp	r3, #0
   15348:	moveq	r2, #0
   1534c:	andne	r2, r2, #1
   15350:	cmp	r2, #0
   15354:	beq	15380 <dcngettext@plt+0x4368>
   15358:	mov	r2, r3
   1535c:	ldrb	r3, [r3]
   15360:	cmp	r3, #0
   15364:	beq	15380 <dcngettext@plt+0x4368>
   15368:	cmp	sl, r4
   1536c:	strbhi	r3, [fp, r4]
   15370:	ldrb	r3, [r2, #1]!
   15374:	add	r4, r4, #1
   15378:	cmp	r3, #0
   1537c:	bne	15368 <dcngettext@plt+0x4350>
   15380:	cmp	sl, r4
   15384:	movhi	r3, #0
   15388:	strbhi	r3, [fp, r4]
   1538c:	b	14540 <dcngettext@plt+0x3528>
   15390:	mov	ip, r3
   15394:	ldr	r2, [sp, #28]
   15398:	b	14e30 <dcngettext@plt+0x3e18>
   1539c:	str	fp, [sp, #160]	; 0xa0
   153a0:	mov	fp, r8
   153a4:	ldr	r8, [sp, #160]	; 0xa0
   153a8:	sub	r3, r8, #2
   153ac:	clz	r3, r3
   153b0:	lsr	r3, r3, #5
   153b4:	str	r3, [sp, #28]
   153b8:	b	144f4 <dcngettext@plt+0x34dc>
   153bc:	ldr	r3, [sp, #76]	; 0x4c
   153c0:	mov	ip, #5
   153c4:	str	r3, [sp, #16]
   153c8:	ldr	r3, [sp, #80]	; 0x50
   153cc:	ldr	r2, [sp, #36]	; 0x24
   153d0:	str	r3, [sp, #12]
   153d4:	ldr	r3, [sp, #56]	; 0x38
   153d8:	ldr	r1, [sp, #72]	; 0x48
   153dc:	str	r3, [sp, #8]
   153e0:	ldr	r3, [sp, #164]	; 0xa4
   153e4:	mov	r0, fp
   153e8:	str	r3, [sp, #4]
   153ec:	str	ip, [sp]
   153f0:	ldr	r3, [sp, #24]
   153f4:	bl	13c58 <dcngettext@plt+0x2c40>
   153f8:	mov	r4, r0
   153fc:	b	14540 <dcngettext@plt+0x3528>
   15400:	mov	r8, #2
   15404:	b	144f4 <dcngettext@plt+0x34dc>
   15408:	ldr	r2, [sp, #28]
   1540c:	b	14e30 <dcngettext@plt+0x3e18>
   15410:	mov	r3, #0
   15414:	str	r3, [sp, #68]	; 0x44
   15418:	str	r3, [sp, #44]	; 0x2c
   1541c:	str	r3, [sp, #72]	; 0x48
   15420:	str	r3, [sp, #28]
   15424:	mov	r4, r3
   15428:	ldr	r3, [pc, #-2500]	; 14a6c <dcngettext@plt+0x3a54>
   1542c:	mov	r2, #1
   15430:	str	r2, [sp, #40]	; 0x28
   15434:	str	r2, [sp, #32]
   15438:	str	r2, [sp, #52]	; 0x34
   1543c:	str	r3, [sp, #60]	; 0x3c
   15440:	b	13d50 <dcngettext@plt+0x2d38>
   15444:	bl	10e38 <__stack_chk_fail@plt>
   15448:	mov	r5, r3
   1544c:	mov	r6, #0
   15450:	b	14244 <dcngettext@plt+0x322c>
   15454:	mov	r3, #0
   15458:	mov	r2, #1
   1545c:	str	r3, [sp, #44]	; 0x2c
   15460:	str	r3, [sp, #72]	; 0x48
   15464:	str	r2, [sp, #40]	; 0x28
   15468:	b	14360 <dcngettext@plt+0x3348>
   1546c:	bl	11000 <abort@plt>
   15470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15474:	sub	sp, sp, #44	; 0x2c
   15478:	mov	r6, r0
   1547c:	mov	r4, r3
   15480:	mov	sl, r1
   15484:	mov	fp, r2
   15488:	bl	10f28 <__errno_location@plt>
   1548c:	ldr	r7, [pc, #364]	; 15600 <dcngettext@plt+0x45e8>
   15490:	cmp	r6, #0
   15494:	ldr	r5, [r7]
   15498:	ldr	r3, [r0]
   1549c:	str	r3, [sp, #24]
   154a0:	blt	155fc <dcngettext@plt+0x45e4>
   154a4:	ldr	r3, [r7, #4]
   154a8:	mov	r8, r0
   154ac:	cmp	r3, r6
   154b0:	bgt	154fc <dcngettext@plt+0x44e4>
   154b4:	cmn	r6, #-268435454	; 0xf0000002
   154b8:	bgt	155f8 <dcngettext@plt+0x45e0>
   154bc:	add	r9, r6, #1
   154c0:	add	r3, r7, #8
   154c4:	cmp	r5, r3
   154c8:	lsl	r1, r9, #3
   154cc:	beq	155d8 <dcngettext@plt+0x45c0>
   154d0:	mov	r0, r5
   154d4:	bl	16270 <dcngettext@plt+0x5258>
   154d8:	mov	r5, r0
   154dc:	str	r0, [r7]
   154e0:	ldr	r0, [r7, #4]
   154e4:	mov	r1, #0
   154e8:	sub	r2, r9, r0
   154ec:	add	r0, r5, r0, lsl #3
   154f0:	lsl	r2, r2, #3
   154f4:	bl	10f4c <memset@plt>
   154f8:	str	r9, [r7, #4]
   154fc:	add	r3, r5, r6, lsl #3
   15500:	ldr	r1, [r4, #4]
   15504:	ldr	r7, [r3, #4]
   15508:	ldr	r9, [r5, r6, lsl #3]
   1550c:	ldr	r2, [r4, #40]	; 0x28
   15510:	ldr	ip, [r4, #44]	; 0x2c
   15514:	str	r3, [sp, #28]
   15518:	ldr	r3, [r4]
   1551c:	orr	r1, r1, #1
   15520:	add	lr, r4, #8
   15524:	str	r1, [sp, #36]	; 0x24
   15528:	str	r1, [sp, #4]
   1552c:	str	r2, [sp, #12]
   15530:	str	r3, [sp]
   15534:	mov	r0, r7
   15538:	mov	r1, r9
   1553c:	str	ip, [sp, #16]
   15540:	str	lr, [sp, #8]
   15544:	mov	r3, fp
   15548:	mov	r2, sl
   1554c:	str	lr, [sp, #32]
   15550:	bl	13c58 <dcngettext@plt+0x2c40>
   15554:	cmp	r9, r0
   15558:	bhi	155c4 <dcngettext@plt+0x45ac>
   1555c:	ldr	r3, [pc, #160]	; 15604 <dcngettext@plt+0x45ec>
   15560:	add	r9, r0, #1
   15564:	cmp	r7, r3
   15568:	str	r9, [r5, r6, lsl #3]
   1556c:	beq	15578 <dcngettext@plt+0x4560>
   15570:	mov	r0, r7
   15574:	bl	10de4 <free@plt>
   15578:	mov	r0, r9
   1557c:	bl	16214 <dcngettext@plt+0x51fc>
   15580:	ldr	lr, [sp, #28]
   15584:	ldr	ip, [r4, #44]	; 0x2c
   15588:	ldr	r5, [r4, #40]	; 0x28
   1558c:	mov	r3, fp
   15590:	mov	r2, sl
   15594:	mov	r1, r9
   15598:	str	r0, [lr, #4]
   1559c:	ldr	lr, [r4]
   155a0:	ldr	r4, [sp, #32]
   155a4:	str	ip, [sp, #16]
   155a8:	str	r4, [sp, #8]
   155ac:	ldr	r4, [sp, #36]	; 0x24
   155b0:	str	r5, [sp, #12]
   155b4:	str	r4, [sp, #4]
   155b8:	str	lr, [sp]
   155bc:	mov	r7, r0
   155c0:	bl	13c58 <dcngettext@plt+0x2c40>
   155c4:	ldr	r3, [sp, #24]
   155c8:	mov	r0, r7
   155cc:	str	r3, [r8]
   155d0:	add	sp, sp, #44	; 0x2c
   155d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155d8:	mov	r0, #0
   155dc:	bl	16270 <dcngettext@plt+0x5258>
   155e0:	ldr	r3, [pc, #32]	; 15608 <dcngettext@plt+0x45f0>
   155e4:	mov	r5, r0
   155e8:	ldm	r3, {r0, r1}
   155ec:	str	r5, [r7]
   155f0:	stm	r5, {r0, r1}
   155f4:	b	154e0 <dcngettext@plt+0x44c8>
   155f8:	bl	1645c <dcngettext@plt+0x5444>
   155fc:	bl	11000 <abort@plt>
   15600:	andeq	r8, r2, r8, lsl #2
   15604:	andeq	r8, r2, r8, lsl #3
   15608:	andeq	r8, r2, r0, lsl r1
   1560c:	push	{r4, r5, r6, lr}
   15610:	mov	r5, r0
   15614:	bl	10f28 <__errno_location@plt>
   15618:	cmp	r5, #0
   1561c:	mov	r1, #48	; 0x30
   15620:	mov	r4, r0
   15624:	ldr	r0, [pc, #16]	; 1563c <dcngettext@plt+0x4624>
   15628:	ldr	r6, [r4]
   1562c:	movne	r0, r5
   15630:	bl	1641c <dcngettext@plt+0x5404>
   15634:	str	r6, [r4]
   15638:	pop	{r4, r5, r6, pc}
   1563c:	andeq	r8, r2, r8, lsl #5
   15640:	ldr	r3, [pc, #12]	; 15654 <dcngettext@plt+0x463c>
   15644:	cmp	r0, #0
   15648:	moveq	r0, r3
   1564c:	ldr	r0, [r0]
   15650:	bx	lr
   15654:	andeq	r8, r2, r8, lsl #5
   15658:	ldr	r3, [pc, #12]	; 1566c <dcngettext@plt+0x4654>
   1565c:	cmp	r0, #0
   15660:	moveq	r0, r3
   15664:	str	r1, [r0]
   15668:	bx	lr
   1566c:	andeq	r8, r2, r8, lsl #5
   15670:	ldr	r3, [pc, #52]	; 156ac <dcngettext@plt+0x4694>
   15674:	cmp	r0, #0
   15678:	moveq	r0, r3
   1567c:	add	r3, r0, #8
   15680:	push	{lr}		; (str lr, [sp, #-4]!)
   15684:	lsr	lr, r1, #5
   15688:	and	r1, r1, #31
   1568c:	ldr	ip, [r3, lr, lsl #2]
   15690:	lsr	r0, ip, r1
   15694:	eor	r2, r2, r0
   15698:	and	r2, r2, #1
   1569c:	and	r0, r0, #1
   156a0:	eor	r1, ip, r2, lsl r1
   156a4:	str	r1, [r3, lr, lsl #2]
   156a8:	pop	{pc}		; (ldr pc, [sp], #4)
   156ac:	andeq	r8, r2, r8, lsl #5
   156b0:	ldr	r3, [pc, #16]	; 156c8 <dcngettext@plt+0x46b0>
   156b4:	cmp	r0, #0
   156b8:	movne	r3, r0
   156bc:	ldr	r0, [r3, #4]
   156c0:	str	r1, [r3, #4]
   156c4:	bx	lr
   156c8:	andeq	r8, r2, r8, lsl #5
   156cc:	ldr	r3, [pc, #44]	; 15700 <dcngettext@plt+0x46e8>
   156d0:	cmp	r0, #0
   156d4:	moveq	r0, r3
   156d8:	mov	ip, #10
   156dc:	cmp	r2, #0
   156e0:	cmpne	r1, #0
   156e4:	str	ip, [r0]
   156e8:	beq	156f8 <dcngettext@plt+0x46e0>
   156ec:	str	r1, [r0, #40]	; 0x28
   156f0:	str	r2, [r0, #44]	; 0x2c
   156f4:	bx	lr
   156f8:	push	{r4, lr}
   156fc:	bl	11000 <abort@plt>
   15700:	andeq	r8, r2, r8, lsl #5
   15704:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15708:	sub	sp, sp, #24
   1570c:	ldr	ip, [pc, #108]	; 15780 <dcngettext@plt+0x4768>
   15710:	ldr	r4, [sp, #56]	; 0x38
   15714:	mov	r9, r2
   15718:	cmp	r4, #0
   1571c:	moveq	r4, ip
   15720:	mov	sl, r3
   15724:	mov	r7, r0
   15728:	mov	r8, r1
   1572c:	bl	10f28 <__errno_location@plt>
   15730:	ldr	r3, [r4, #44]	; 0x2c
   15734:	mov	r1, r8
   15738:	ldr	r6, [r0]
   1573c:	str	r3, [sp, #16]
   15740:	ldr	r2, [r4, #40]	; 0x28
   15744:	add	r3, r4, #8
   15748:	str	r3, [sp, #8]
   1574c:	str	r2, [sp, #12]
   15750:	ldr	r2, [r4, #4]
   15754:	mov	r5, r0
   15758:	str	r2, [sp, #4]
   1575c:	ldr	ip, [r4]
   15760:	mov	r3, sl
   15764:	mov	r2, r9
   15768:	mov	r0, r7
   1576c:	str	ip, [sp]
   15770:	bl	13c58 <dcngettext@plt+0x2c40>
   15774:	str	r6, [r5]
   15778:	add	sp, sp, #24
   1577c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15780:	andeq	r8, r2, r8, lsl #5
   15784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15788:	cmp	r3, #0
   1578c:	sub	sp, sp, #44	; 0x2c
   15790:	ldr	r4, [pc, #192]	; 15858 <dcngettext@plt+0x4840>
   15794:	mov	r6, r2
   15798:	movne	r4, r3
   1579c:	mov	r9, r1
   157a0:	mov	r8, r0
   157a4:	bl	10f28 <__errno_location@plt>
   157a8:	ldr	r3, [r4, #44]	; 0x2c
   157ac:	ldr	r5, [r4, #4]
   157b0:	add	sl, r4, #8
   157b4:	cmp	r6, #0
   157b8:	orreq	r5, r5, #1
   157bc:	mov	r1, #0
   157c0:	ldr	r2, [r0]
   157c4:	str	r3, [sp, #16]
   157c8:	ldr	r3, [r4, #40]	; 0x28
   157cc:	stmib	sp, {r5, sl}
   157d0:	str	r3, [sp, #12]
   157d4:	ldr	r3, [r4]
   157d8:	mov	r7, r0
   157dc:	str	r2, [sp, #28]
   157e0:	str	r3, [sp]
   157e4:	mov	r2, r8
   157e8:	mov	r3, r9
   157ec:	mov	r0, r1
   157f0:	bl	13c58 <dcngettext@plt+0x2c40>
   157f4:	add	r1, r0, #1
   157f8:	mov	fp, r0
   157fc:	mov	r0, r1
   15800:	str	r1, [sp, #36]	; 0x24
   15804:	bl	16214 <dcngettext@plt+0x51fc>
   15808:	ldr	r3, [r4, #44]	; 0x2c
   1580c:	mov	r2, r8
   15810:	str	r3, [sp, #16]
   15814:	ldr	r3, [r4, #40]	; 0x28
   15818:	str	r5, [sp, #4]
   1581c:	str	r3, [sp, #12]
   15820:	str	sl, [sp, #8]
   15824:	ldr	ip, [r4]
   15828:	ldr	r1, [sp, #36]	; 0x24
   1582c:	mov	r3, r9
   15830:	str	ip, [sp]
   15834:	str	r0, [sp, #32]
   15838:	bl	13c58 <dcngettext@plt+0x2c40>
   1583c:	ldr	r2, [sp, #28]
   15840:	cmp	r6, #0
   15844:	str	r2, [r7]
   15848:	ldr	r0, [sp, #32]
   1584c:	strne	fp, [r6]
   15850:	add	sp, sp, #44	; 0x2c
   15854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15858:	andeq	r8, r2, r8, lsl #5
   1585c:	mov	r3, r2
   15860:	mov	r2, #0
   15864:	b	15784 <dcngettext@plt+0x476c>
   15868:	push	{r4, r5, r6, r7, r8, lr}
   1586c:	ldr	r6, [pc, #112]	; 158e4 <dcngettext@plt+0x48cc>
   15870:	ldr	r3, [r6, #4]
   15874:	ldr	r7, [r6]
   15878:	cmp	r3, #1
   1587c:	ble	158a0 <dcngettext@plt+0x4888>
   15880:	sub	r5, r7, #8
   15884:	add	r5, r5, r3, lsl #3
   15888:	mov	r4, r7
   1588c:	ldr	r0, [r4, #12]
   15890:	add	r4, r4, #8
   15894:	bl	10de4 <free@plt>
   15898:	cmp	r4, r5
   1589c:	bne	1588c <dcngettext@plt+0x4874>
   158a0:	ldr	r0, [r7, #4]
   158a4:	ldr	r4, [pc, #60]	; 158e8 <dcngettext@plt+0x48d0>
   158a8:	cmp	r0, r4
   158ac:	beq	158c0 <dcngettext@plt+0x48a8>
   158b0:	bl	10de4 <free@plt>
   158b4:	mov	r3, #256	; 0x100
   158b8:	str	r4, [r6, #12]
   158bc:	str	r3, [r6, #8]
   158c0:	ldr	r4, [pc, #36]	; 158ec <dcngettext@plt+0x48d4>
   158c4:	cmp	r7, r4
   158c8:	beq	158d8 <dcngettext@plt+0x48c0>
   158cc:	mov	r0, r7
   158d0:	bl	10de4 <free@plt>
   158d4:	str	r4, [r6]
   158d8:	mov	r3, #1
   158dc:	str	r3, [r6, #4]
   158e0:	pop	{r4, r5, r6, r7, r8, pc}
   158e4:	andeq	r8, r2, r8, lsl #2
   158e8:	andeq	r8, r2, r8, lsl #3
   158ec:	andeq	r8, r2, r0, lsl r1
   158f0:	ldr	r3, [pc, #4]	; 158fc <dcngettext@plt+0x48e4>
   158f4:	mvn	r2, #0
   158f8:	b	15470 <dcngettext@plt+0x4458>
   158fc:	andeq	r8, r2, r8, lsl #5
   15900:	ldr	r3, [pc]	; 15908 <dcngettext@plt+0x48f0>
   15904:	b	15470 <dcngettext@plt+0x4458>
   15908:	andeq	r8, r2, r8, lsl #5
   1590c:	mov	r1, r0
   15910:	ldr	r3, [pc, #8]	; 15920 <dcngettext@plt+0x4908>
   15914:	mvn	r2, #0
   15918:	mov	r0, #0
   1591c:	b	15470 <dcngettext@plt+0x4458>
   15920:	andeq	r8, r2, r8, lsl #5
   15924:	mov	r2, r1
   15928:	ldr	r3, [pc, #8]	; 15938 <dcngettext@plt+0x4920>
   1592c:	mov	r1, r0
   15930:	mov	r0, #0
   15934:	b	15470 <dcngettext@plt+0x4458>
   15938:	andeq	r8, r2, r8, lsl #5
   1593c:	push	{r4, r5, r6, lr}
   15940:	sub	sp, sp, #56	; 0x38
   15944:	ldr	r4, [pc, #68]	; 15990 <dcngettext@plt+0x4978>
   15948:	mov	r6, r2
   1594c:	mov	r5, r0
   15950:	ldr	r3, [r4]
   15954:	add	r0, sp, #4
   15958:	str	r3, [sp, #52]	; 0x34
   1595c:	bl	13ae8 <dcngettext@plt+0x2ad0>
   15960:	add	r3, sp, #4
   15964:	mvn	r2, #0
   15968:	mov	r1, r6
   1596c:	mov	r0, r5
   15970:	bl	15470 <dcngettext@plt+0x4458>
   15974:	ldr	r2, [sp, #52]	; 0x34
   15978:	ldr	r3, [r4]
   1597c:	cmp	r2, r3
   15980:	bne	1598c <dcngettext@plt+0x4974>
   15984:	add	sp, sp, #56	; 0x38
   15988:	pop	{r4, r5, r6, pc}
   1598c:	bl	10e38 <__stack_chk_fail@plt>
   15990:	andeq	r7, r2, r8, lsl #30
   15994:	push	{r4, r5, r6, r7, lr}
   15998:	sub	sp, sp, #60	; 0x3c
   1599c:	ldr	r4, [pc, #72]	; 159ec <dcngettext@plt+0x49d4>
   159a0:	mov	r6, r2
   159a4:	mov	r7, r3
   159a8:	ldr	ip, [r4]
   159ac:	mov	r5, r0
   159b0:	add	r0, sp, #4
   159b4:	str	ip, [sp, #52]	; 0x34
   159b8:	bl	13ae8 <dcngettext@plt+0x2ad0>
   159bc:	add	r3, sp, #4
   159c0:	mov	r2, r7
   159c4:	mov	r1, r6
   159c8:	mov	r0, r5
   159cc:	bl	15470 <dcngettext@plt+0x4458>
   159d0:	ldr	r2, [sp, #52]	; 0x34
   159d4:	ldr	r3, [r4]
   159d8:	cmp	r2, r3
   159dc:	bne	159e8 <dcngettext@plt+0x49d0>
   159e0:	add	sp, sp, #60	; 0x3c
   159e4:	pop	{r4, r5, r6, r7, pc}
   159e8:	bl	10e38 <__stack_chk_fail@plt>
   159ec:	andeq	r7, r2, r8, lsl #30
   159f0:	mov	r2, r1
   159f4:	mov	r1, r0
   159f8:	mov	r0, #0
   159fc:	b	1593c <dcngettext@plt+0x4924>
   15a00:	mov	r3, r2
   15a04:	mov	r2, r1
   15a08:	mov	r1, r0
   15a0c:	mov	r0, #0
   15a10:	b	15994 <dcngettext@plt+0x497c>
   15a14:	push	{r4, r5, r6, r7, r8, r9, lr}
   15a18:	mov	r4, r2
   15a1c:	ldr	lr, [pc, #128]	; 15aa4 <dcngettext@plt+0x4a8c>
   15a20:	mov	r8, r0
   15a24:	mov	r9, r1
   15a28:	ldm	lr!, {r0, r1, r2, r3}
   15a2c:	sub	sp, sp, #60	; 0x3c
   15a30:	add	ip, sp, #4
   15a34:	lsr	r6, r4, #5
   15a38:	stmia	ip!, {r0, r1, r2, r3}
   15a3c:	add	r7, sp, #12
   15a40:	ldm	lr!, {r0, r1, r2, r3}
   15a44:	and	r4, r4, #31
   15a48:	ldr	r5, [pc, #88]	; 15aa8 <dcngettext@plt+0x4a90>
   15a4c:	stmia	ip!, {r0, r1, r2, r3}
   15a50:	ldm	lr, {r0, r1, r2, r3}
   15a54:	stm	ip, {r0, r1, r2, r3}
   15a58:	mov	r2, r9
   15a5c:	ldr	r3, [r7, r6, lsl #2]
   15a60:	ldr	ip, [r5]
   15a64:	mov	r1, r8
   15a68:	mvn	r0, r3, lsr r4
   15a6c:	and	r0, r0, #1
   15a70:	str	ip, [sp, #52]	; 0x34
   15a74:	eor	r4, r3, r0, lsl r4
   15a78:	add	r3, sp, #4
   15a7c:	mov	r0, #0
   15a80:	str	r4, [r7, r6, lsl #2]
   15a84:	bl	15470 <dcngettext@plt+0x4458>
   15a88:	ldr	r2, [sp, #52]	; 0x34
   15a8c:	ldr	r3, [r5]
   15a90:	cmp	r2, r3
   15a94:	bne	15aa0 <dcngettext@plt+0x4a88>
   15a98:	add	sp, sp, #60	; 0x3c
   15a9c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15aa0:	bl	10e38 <__stack_chk_fail@plt>
   15aa4:	andeq	r8, r2, r8, lsl #5
   15aa8:	andeq	r7, r2, r8, lsl #30
   15aac:	mov	r2, r1
   15ab0:	mvn	r1, #0
   15ab4:	b	15a14 <dcngettext@plt+0x49fc>
   15ab8:	mov	r2, #58	; 0x3a
   15abc:	mvn	r1, #0
   15ac0:	b	15a14 <dcngettext@plt+0x49fc>
   15ac4:	mov	r2, #58	; 0x3a
   15ac8:	b	15a14 <dcngettext@plt+0x49fc>
   15acc:	push	{r4, r5, r6, r7, r8, lr}
   15ad0:	sub	sp, sp, #104	; 0x68
   15ad4:	ldr	r5, [pc, #120]	; 15b54 <dcngettext@plt+0x4b3c>
   15ad8:	mov	r6, r0
   15adc:	mov	r0, sp
   15ae0:	ldr	r3, [r5]
   15ae4:	mov	r7, r2
   15ae8:	str	r3, [sp, #100]	; 0x64
   15aec:	bl	13ae8 <dcngettext@plt+0x2ad0>
   15af0:	mov	ip, sp
   15af4:	add	lr, sp, #52	; 0x34
   15af8:	ldm	ip!, {r0, r1, r2, r3}
   15afc:	stmia	lr!, {r0, r1, r2, r3}
   15b00:	ldm	ip!, {r0, r1, r2, r3}
   15b04:	ldr	r8, [sp, #64]	; 0x40
   15b08:	stmia	lr!, {r0, r1, r2, r3}
   15b0c:	mvn	r4, r8
   15b10:	ldm	ip, {r0, r1, r2, r3}
   15b14:	and	ip, r4, #67108864	; 0x4000000
   15b18:	eor	ip, ip, r8
   15b1c:	str	ip, [sp, #64]	; 0x40
   15b20:	stm	lr, {r0, r1, r2, r3}
   15b24:	add	r3, sp, #52	; 0x34
   15b28:	mvn	r2, #0
   15b2c:	mov	r1, r7
   15b30:	mov	r0, r6
   15b34:	bl	15470 <dcngettext@plt+0x4458>
   15b38:	ldr	r2, [sp, #100]	; 0x64
   15b3c:	ldr	r3, [r5]
   15b40:	cmp	r2, r3
   15b44:	bne	15b50 <dcngettext@plt+0x4b38>
   15b48:	add	sp, sp, #104	; 0x68
   15b4c:	pop	{r4, r5, r6, r7, r8, pc}
   15b50:	bl	10e38 <__stack_chk_fail@plt>
   15b54:	andeq	r7, r2, r8, lsl #30
   15b58:	push	{r4, r5, r6, r7, r8, r9, lr}
   15b5c:	mov	r6, r1
   15b60:	ldr	lr, [pc, #132]	; 15bec <dcngettext@plt+0x4bd4>
   15b64:	mov	r5, r2
   15b68:	mov	r8, r0
   15b6c:	mov	r9, r3
   15b70:	ldm	lr!, {r0, r1, r2, r3}
   15b74:	sub	sp, sp, #60	; 0x3c
   15b78:	add	ip, sp, #4
   15b7c:	ldr	r4, [pc, #108]	; 15bf0 <dcngettext@plt+0x4bd8>
   15b80:	stmia	ip!, {r0, r1, r2, r3}
   15b84:	mov	r7, #10
   15b88:	ldm	lr!, {r0, r1, r2, r3}
   15b8c:	cmp	r5, #0
   15b90:	cmpne	r6, #0
   15b94:	str	r7, [sp, #4]
   15b98:	stmia	ip!, {r0, r1, r2, r3}
   15b9c:	ldm	lr, {r0, r1, r2, r3}
   15ba0:	ldr	lr, [r4]
   15ba4:	stm	ip, {r0, r1, r2, r3}
   15ba8:	str	lr, [sp, #52]	; 0x34
   15bac:	beq	15be8 <dcngettext@plt+0x4bd0>
   15bb0:	add	r3, sp, #4
   15bb4:	ldr	r2, [sp, #88]	; 0x58
   15bb8:	mov	r1, r9
   15bbc:	mov	r0, r8
   15bc0:	str	r6, [sp, #44]	; 0x2c
   15bc4:	str	r5, [sp, #48]	; 0x30
   15bc8:	bl	15470 <dcngettext@plt+0x4458>
   15bcc:	ldr	r2, [sp, #52]	; 0x34
   15bd0:	ldr	r3, [r4]
   15bd4:	cmp	r2, r3
   15bd8:	bne	15be4 <dcngettext@plt+0x4bcc>
   15bdc:	add	sp, sp, #60	; 0x3c
   15be0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15be4:	bl	10e38 <__stack_chk_fail@plt>
   15be8:	bl	11000 <abort@plt>
   15bec:	andeq	r8, r2, r8, lsl #5
   15bf0:	andeq	r7, r2, r8, lsl #30
   15bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   15bf8:	sub	sp, sp, #12
   15bfc:	mvn	ip, #0
   15c00:	str	ip, [sp]
   15c04:	bl	15b58 <dcngettext@plt+0x4b40>
   15c08:	add	sp, sp, #12
   15c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c10:	push	{lr}		; (str lr, [sp, #-4]!)
   15c14:	sub	sp, sp, #12
   15c18:	mvn	ip, #0
   15c1c:	mov	r3, r2
   15c20:	str	ip, [sp]
   15c24:	mov	r2, r1
   15c28:	mov	r1, r0
   15c2c:	mov	r0, #0
   15c30:	bl	15b58 <dcngettext@plt+0x4b40>
   15c34:	add	sp, sp, #12
   15c38:	pop	{pc}		; (ldr pc, [sp], #4)
   15c3c:	push	{lr}		; (str lr, [sp, #-4]!)
   15c40:	sub	sp, sp, #12
   15c44:	str	r3, [sp]
   15c48:	mov	r3, r2
   15c4c:	mov	r2, r1
   15c50:	mov	r1, r0
   15c54:	mov	r0, #0
   15c58:	bl	15b58 <dcngettext@plt+0x4b40>
   15c5c:	add	sp, sp, #12
   15c60:	pop	{pc}		; (ldr pc, [sp], #4)
   15c64:	ldr	r3, [pc]	; 15c6c <dcngettext@plt+0x4c54>
   15c68:	b	15470 <dcngettext@plt+0x4458>
   15c6c:	andeq	r8, r2, r8, lsl r1
   15c70:	mov	r2, r1
   15c74:	ldr	r3, [pc, #8]	; 15c84 <dcngettext@plt+0x4c6c>
   15c78:	mov	r1, r0
   15c7c:	mov	r0, #0
   15c80:	b	15470 <dcngettext@plt+0x4458>
   15c84:	andeq	r8, r2, r8, lsl r1
   15c88:	ldr	r3, [pc, #4]	; 15c94 <dcngettext@plt+0x4c7c>
   15c8c:	mvn	r2, #0
   15c90:	b	15470 <dcngettext@plt+0x4458>
   15c94:	andeq	r8, r2, r8, lsl r1
   15c98:	mov	r1, r0
   15c9c:	ldr	r3, [pc, #8]	; 15cac <dcngettext@plt+0x4c94>
   15ca0:	mvn	r2, #0
   15ca4:	mov	r0, #0
   15ca8:	b	15470 <dcngettext@plt+0x4458>
   15cac:	andeq	r8, r2, r8, lsl r1
   15cb0:	mov	r2, #3
   15cb4:	mov	r1, #0
   15cb8:	b	1653c <dcngettext@plt+0x5524>
   15cbc:	push	{r4, r5, r6, lr}
   15cc0:	sub	sp, sp, #32
   15cc4:	cmp	r1, #0
   15cc8:	mov	r5, r0
   15ccc:	ldr	r4, [sp, #48]	; 0x30
   15cd0:	ldr	r6, [sp, #52]	; 0x34
   15cd4:	beq	15d64 <dcngettext@plt+0x4d4c>
   15cd8:	strd	r2, [sp]
   15cdc:	mov	r3, r1
   15ce0:	ldr	r2, [pc, #828]	; 16024 <dcngettext@plt+0x500c>
   15ce4:	mov	r1, #1
   15ce8:	bl	10f70 <__fprintf_chk@plt>
   15cec:	mov	r2, #5
   15cf0:	ldr	r1, [pc, #816]	; 16028 <dcngettext@plt+0x5010>
   15cf4:	mov	r0, #0
   15cf8:	bl	10e2c <dcgettext@plt>
   15cfc:	ldr	r3, [pc, #808]	; 1602c <dcngettext@plt+0x5014>
   15d00:	ldr	r2, [pc, #808]	; 16030 <dcngettext@plt+0x5018>
   15d04:	str	r3, [sp]
   15d08:	mov	r1, #1
   15d0c:	mov	r3, r0
   15d10:	mov	r0, r5
   15d14:	bl	10f70 <__fprintf_chk@plt>
   15d18:	ldr	r1, [pc, #788]	; 16034 <dcngettext@plt+0x501c>
   15d1c:	mov	r2, #5
   15d20:	mov	r0, #0
   15d24:	bl	10e2c <dcgettext@plt>
   15d28:	mov	r1, r5
   15d2c:	bl	10d9c <fputs_unlocked@plt>
   15d30:	cmp	r6, #9
   15d34:	ldrls	pc, [pc, r6, lsl #2]
   15d38:	b	16014 <dcngettext@plt+0x4ffc>
   15d3c:	andeq	r6, r1, r0, lsr #32
   15d40:	andeq	r5, r1, r8, ror #27
   15d44:	andeq	r5, r1, r4, lsl lr
   15d48:	andeq	r5, r1, r8, asr #28
   15d4c:	andeq	r5, r1, r4, lsl #29
   15d50:	andeq	r5, r1, r4, asr #29
   15d54:	andeq	r5, r1, ip, lsl #30
   15d58:	andeq	r5, r1, ip, asr pc
   15d5c:			; <UNDEFINED> instruction: 0x00015fb4
   15d60:	andeq	r5, r1, ip, ror sp
   15d64:	str	r3, [sp]
   15d68:	mov	r1, #1
   15d6c:	mov	r3, r2
   15d70:	ldr	r2, [pc, #704]	; 16038 <dcngettext@plt+0x5020>
   15d74:	bl	10f70 <__fprintf_chk@plt>
   15d78:	b	15cec <dcngettext@plt+0x4cd4>
   15d7c:	ldr	r1, [pc, #696]	; 1603c <dcngettext@plt+0x5024>
   15d80:	mov	r2, #5
   15d84:	mov	r0, #0
   15d88:	bl	10e2c <dcgettext@plt>
   15d8c:	ldr	r2, [r4, #32]
   15d90:	ldr	r3, [r4, #28]
   15d94:	ldr	r1, [r4, #24]
   15d98:	str	r2, [sp, #28]
   15d9c:	ldr	r2, [r4, #20]
   15da0:	str	r3, [sp, #24]
   15da4:	ldr	r3, [r4, #16]
   15da8:	str	r1, [sp, #20]
   15dac:	ldr	r1, [r4, #12]
   15db0:	str	r2, [sp, #16]
   15db4:	ldr	r2, [r4, #8]
   15db8:	str	r3, [sp, #12]
   15dbc:	ldr	r3, [r4, #4]
   15dc0:	str	r1, [sp, #8]
   15dc4:	str	r2, [sp, #4]
   15dc8:	str	r3, [sp]
   15dcc:	mov	r1, #1
   15dd0:	ldr	r3, [r4]
   15dd4:	mov	r2, r0
   15dd8:	mov	r0, r5
   15ddc:	bl	10f70 <__fprintf_chk@plt>
   15de0:	add	sp, sp, #32
   15de4:	pop	{r4, r5, r6, pc}
   15de8:	mov	r2, #5
   15dec:	ldr	r1, [pc, #588]	; 16040 <dcngettext@plt+0x5028>
   15df0:	mov	r0, #0
   15df4:	bl	10e2c <dcgettext@plt>
   15df8:	ldr	r3, [r4]
   15dfc:	mov	r1, #1
   15e00:	mov	r2, r0
   15e04:	mov	r0, r5
   15e08:	add	sp, sp, #32
   15e0c:	pop	{r4, r5, r6, lr}
   15e10:	b	10f70 <__fprintf_chk@plt>
   15e14:	mov	r2, #5
   15e18:	ldr	r1, [pc, #548]	; 16044 <dcngettext@plt+0x502c>
   15e1c:	mov	r0, #0
   15e20:	bl	10e2c <dcgettext@plt>
   15e24:	ldr	r2, [r4, #4]
   15e28:	ldr	r3, [r4]
   15e2c:	mov	r1, #1
   15e30:	str	r2, [sp, #48]	; 0x30
   15e34:	mov	r2, r0
   15e38:	mov	r0, r5
   15e3c:	add	sp, sp, #32
   15e40:	pop	{r4, r5, r6, lr}
   15e44:	b	10f70 <__fprintf_chk@plt>
   15e48:	mov	r2, #5
   15e4c:	ldr	r1, [pc, #500]	; 16048 <dcngettext@plt+0x5030>
   15e50:	mov	r0, #0
   15e54:	bl	10e2c <dcgettext@plt>
   15e58:	ldr	r2, [r4, #8]
   15e5c:	ldr	r3, [r4, #4]
   15e60:	mov	r1, #1
   15e64:	str	r2, [sp, #52]	; 0x34
   15e68:	str	r3, [sp, #48]	; 0x30
   15e6c:	ldr	r3, [r4]
   15e70:	mov	r2, r0
   15e74:	mov	r0, r5
   15e78:	add	sp, sp, #32
   15e7c:	pop	{r4, r5, r6, lr}
   15e80:	b	10f70 <__fprintf_chk@plt>
   15e84:	mov	r2, #5
   15e88:	ldr	r1, [pc, #444]	; 1604c <dcngettext@plt+0x5034>
   15e8c:	mov	r0, #0
   15e90:	bl	10e2c <dcgettext@plt>
   15e94:	ldr	r1, [r4, #12]
   15e98:	ldr	r2, [r4, #8]
   15e9c:	ldr	r3, [r4, #4]
   15ea0:	str	r1, [sp, #8]
   15ea4:	str	r2, [sp, #4]
   15ea8:	str	r3, [sp]
   15eac:	mov	r1, #1
   15eb0:	ldr	r3, [r4]
   15eb4:	mov	r2, r0
   15eb8:	mov	r0, r5
   15ebc:	bl	10f70 <__fprintf_chk@plt>
   15ec0:	b	15de0 <dcngettext@plt+0x4dc8>
   15ec4:	mov	r2, #5
   15ec8:	ldr	r1, [pc, #384]	; 16050 <dcngettext@plt+0x5038>
   15ecc:	mov	r0, #0
   15ed0:	bl	10e2c <dcgettext@plt>
   15ed4:	ldr	r3, [r4, #16]
   15ed8:	ldr	r1, [r4, #12]
   15edc:	ldr	r2, [r4, #8]
   15ee0:	str	r3, [sp, #12]
   15ee4:	ldr	r3, [r4, #4]
   15ee8:	str	r1, [sp, #8]
   15eec:	str	r2, [sp, #4]
   15ef0:	str	r3, [sp]
   15ef4:	mov	r1, #1
   15ef8:	ldr	r3, [r4]
   15efc:	mov	r2, r0
   15f00:	mov	r0, r5
   15f04:	bl	10f70 <__fprintf_chk@plt>
   15f08:	b	15de0 <dcngettext@plt+0x4dc8>
   15f0c:	mov	r2, #5
   15f10:	ldr	r1, [pc, #316]	; 16054 <dcngettext@plt+0x503c>
   15f14:	mov	r0, #0
   15f18:	bl	10e2c <dcgettext@plt>
   15f1c:	ldr	r2, [r4, #20]
   15f20:	ldr	r3, [r4, #16]
   15f24:	ldr	r1, [r4, #12]
   15f28:	str	r2, [sp, #16]
   15f2c:	ldr	r2, [r4, #8]
   15f30:	str	r3, [sp, #12]
   15f34:	ldr	r3, [r4, #4]
   15f38:	str	r1, [sp, #8]
   15f3c:	str	r2, [sp, #4]
   15f40:	str	r3, [sp]
   15f44:	mov	r1, #1
   15f48:	ldr	r3, [r4]
   15f4c:	mov	r2, r0
   15f50:	mov	r0, r5
   15f54:	bl	10f70 <__fprintf_chk@plt>
   15f58:	b	15de0 <dcngettext@plt+0x4dc8>
   15f5c:	mov	r2, #5
   15f60:	ldr	r1, [pc, #240]	; 16058 <dcngettext@plt+0x5040>
   15f64:	mov	r0, #0
   15f68:	bl	10e2c <dcgettext@plt>
   15f6c:	ldr	r1, [r4, #24]
   15f70:	ldr	r2, [r4, #20]
   15f74:	ldr	r3, [r4, #16]
   15f78:	str	r1, [sp, #20]
   15f7c:	ldr	r1, [r4, #12]
   15f80:	str	r2, [sp, #16]
   15f84:	ldr	r2, [r4, #8]
   15f88:	str	r3, [sp, #12]
   15f8c:	ldr	r3, [r4, #4]
   15f90:	str	r1, [sp, #8]
   15f94:	str	r2, [sp, #4]
   15f98:	str	r3, [sp]
   15f9c:	mov	r1, #1
   15fa0:	ldr	r3, [r4]
   15fa4:	mov	r2, r0
   15fa8:	mov	r0, r5
   15fac:	bl	10f70 <__fprintf_chk@plt>
   15fb0:	b	15de0 <dcngettext@plt+0x4dc8>
   15fb4:	mov	r2, #5
   15fb8:	ldr	r1, [pc, #156]	; 1605c <dcngettext@plt+0x5044>
   15fbc:	mov	r0, #0
   15fc0:	bl	10e2c <dcgettext@plt>
   15fc4:	ldr	r3, [r4, #28]
   15fc8:	ldr	r1, [r4, #24]
   15fcc:	ldr	r2, [r4, #20]
   15fd0:	str	r3, [sp, #24]
   15fd4:	ldr	r3, [r4, #16]
   15fd8:	str	r1, [sp, #20]
   15fdc:	ldr	r1, [r4, #12]
   15fe0:	str	r2, [sp, #16]
   15fe4:	ldr	r2, [r4, #8]
   15fe8:	str	r3, [sp, #12]
   15fec:	ldr	r3, [r4, #4]
   15ff0:	str	r1, [sp, #8]
   15ff4:	str	r2, [sp, #4]
   15ff8:	str	r3, [sp]
   15ffc:	mov	r1, #1
   16000:	ldr	r3, [r4]
   16004:	mov	r2, r0
   16008:	mov	r0, r5
   1600c:	bl	10f70 <__fprintf_chk@plt>
   16010:	b	15de0 <dcngettext@plt+0x4dc8>
   16014:	mov	r2, #5
   16018:	ldr	r1, [pc, #64]	; 16060 <dcngettext@plt+0x5048>
   1601c:	b	15d84 <dcngettext@plt+0x4d6c>
   16020:	bl	11000 <abort@plt>
   16024:	andeq	r7, r1, r0, asr fp
   16028:	andeq	r7, r1, r4, ror #22
   1602c:	andeq	r0, r0, r2, ror #15
   16030:	andeq	r7, r1, r8, lsr lr
   16034:	andeq	r7, r1, r8, ror #22
   16038:	andeq	r7, r1, ip, asr fp
   1603c:	andeq	r7, r1, r0, asr #26
   16040:	andeq	r7, r1, r4, lsr ip
   16044:	andeq	r7, r1, r4, asr #24
   16048:	andeq	r7, r1, ip, asr ip
   1604c:	andeq	r7, r1, r8, ror ip
   16050:	muleq	r1, r8, ip
   16054:			; <UNDEFINED> instruction: 0x00017cbc
   16058:	andeq	r7, r1, r4, ror #25
   1605c:	andeq	r7, r1, r0, lsl sp
   16060:	andeq	r7, r1, r4, ror sp
   16064:	push	{r4, r5, lr}
   16068:	sub	sp, sp, #12
   1606c:	ldr	r5, [sp, #24]
   16070:	ldr	ip, [r5]
   16074:	cmp	ip, #0
   16078:	beq	16094 <dcngettext@plt+0x507c>
   1607c:	mov	lr, r5
   16080:	mov	ip, #0
   16084:	ldr	r4, [lr, #4]!
   16088:	add	ip, ip, #1
   1608c:	cmp	r4, #0
   16090:	bne	16084 <dcngettext@plt+0x506c>
   16094:	stm	sp, {r5, ip}
   16098:	bl	15cbc <dcngettext@plt+0x4ca4>
   1609c:	add	sp, sp, #12
   160a0:	pop	{r4, r5, pc}
   160a4:	push	{r4, r5, r6, lr}
   160a8:	sub	sp, sp, #56	; 0x38
   160ac:	ldr	r6, [pc, #88]	; 1610c <dcngettext@plt+0x50f4>
   160b0:	ldr	r5, [sp, #72]	; 0x48
   160b4:	add	r4, sp, #8
   160b8:	ldr	ip, [r6]
   160bc:	str	ip, [sp, #52]	; 0x34
   160c0:	mov	ip, #0
   160c4:	ldr	lr, [r5], #4
   160c8:	cmp	lr, #0
   160cc:	str	lr, [r4, #4]!
   160d0:	beq	160e0 <dcngettext@plt+0x50c8>
   160d4:	add	ip, ip, #1
   160d8:	cmp	ip, #10
   160dc:	bne	160c4 <dcngettext@plt+0x50ac>
   160e0:	add	lr, sp, #12
   160e4:	str	ip, [sp, #4]
   160e8:	str	lr, [sp]
   160ec:	bl	15cbc <dcngettext@plt+0x4ca4>
   160f0:	ldr	r2, [sp, #52]	; 0x34
   160f4:	ldr	r3, [r6]
   160f8:	cmp	r2, r3
   160fc:	bne	16108 <dcngettext@plt+0x50f0>
   16100:	add	sp, sp, #56	; 0x38
   16104:	pop	{r4, r5, r6, pc}
   16108:	bl	10e38 <__stack_chk_fail@plt>
   1610c:	andeq	r7, r2, r8, lsl #30
   16110:	push	{r3}		; (str r3, [sp, #-4]!)
   16114:	mov	ip, #0
   16118:	push	{r4, r5, r6, lr}
   1611c:	sub	sp, sp, #60	; 0x3c
   16120:	ldr	r6, [pc, #100]	; 1618c <dcngettext@plt+0x5174>
   16124:	add	r5, sp, #8
   16128:	add	r4, sp, #80	; 0x50
   1612c:	ldr	r3, [r6]
   16130:	str	r4, [sp, #8]
   16134:	str	r3, [sp, #52]	; 0x34
   16138:	ldr	r3, [sp, #76]	; 0x4c
   1613c:	ldr	lr, [r4], #4
   16140:	cmp	lr, #0
   16144:	str	lr, [r5, #4]!
   16148:	beq	16158 <dcngettext@plt+0x5140>
   1614c:	add	ip, ip, #1
   16150:	cmp	ip, #10
   16154:	bne	1613c <dcngettext@plt+0x5124>
   16158:	add	lr, sp, #12
   1615c:	str	ip, [sp, #4]
   16160:	str	lr, [sp]
   16164:	bl	15cbc <dcngettext@plt+0x4ca4>
   16168:	ldr	r2, [sp, #52]	; 0x34
   1616c:	ldr	r3, [r6]
   16170:	cmp	r2, r3
   16174:	bne	16188 <dcngettext@plt+0x5170>
   16178:	add	sp, sp, #60	; 0x3c
   1617c:	pop	{r4, r5, r6, lr}
   16180:	add	sp, sp, #4
   16184:	bx	lr
   16188:	bl	10e38 <__stack_chk_fail@plt>
   1618c:	andeq	r7, r2, r8, lsl #30
   16190:	push	{r4, lr}
   16194:	mov	r2, #5
   16198:	ldr	r1, [pc, #88]	; 161f8 <dcngettext@plt+0x51e0>
   1619c:	mov	r0, #0
   161a0:	bl	10e2c <dcgettext@plt>
   161a4:	ldr	r2, [pc, #80]	; 161fc <dcngettext@plt+0x51e4>
   161a8:	mov	r1, r0
   161ac:	mov	r0, #1
   161b0:	bl	10f58 <__printf_chk@plt>
   161b4:	mov	r2, #5
   161b8:	ldr	r1, [pc, #64]	; 16200 <dcngettext@plt+0x51e8>
   161bc:	mov	r0, #0
   161c0:	bl	10e2c <dcgettext@plt>
   161c4:	ldr	r3, [pc, #56]	; 16204 <dcngettext@plt+0x51ec>
   161c8:	ldr	r2, [pc, #56]	; 16208 <dcngettext@plt+0x51f0>
   161cc:	mov	r1, r0
   161d0:	mov	r0, #1
   161d4:	bl	10f58 <__printf_chk@plt>
   161d8:	ldr	r1, [pc, #44]	; 1620c <dcngettext@plt+0x51f4>
   161dc:	mov	r2, #5
   161e0:	mov	r0, #0
   161e4:	bl	10e2c <dcgettext@plt>
   161e8:	ldr	r3, [pc, #32]	; 16210 <dcngettext@plt+0x51f8>
   161ec:	pop	{r4, lr}
   161f0:	ldr	r1, [r3]
   161f4:	b	10d9c <fputs_unlocked@plt>
   161f8:			; <UNDEFINED> instruction: 0x00017db0
   161fc:	andeq	r7, r1, r8, asr #27
   16200:	andeq	r7, r1, r0, ror #27
   16204:	andeq	r7, r1, r4, lsr #7
   16208:	andeq	r7, r1, ip, asr #7
   1620c:	strdeq	r7, [r1], -r4
   16210:	andeq	r8, r2, r4, ror #2
   16214:	push	{r4, lr}
   16218:	mov	r4, r0
   1621c:	bl	10eb0 <malloc@plt>
   16220:	adds	r4, r4, #0
   16224:	movne	r4, #1
   16228:	cmp	r0, #0
   1622c:	movne	r4, #0
   16230:	cmp	r4, #0
   16234:	popeq	{r4, pc}
   16238:	bl	1645c <dcngettext@plt+0x5444>
   1623c:	push	{r4, r5, r6, lr}
   16240:	umull	r4, r5, r0, r1
   16244:	adds	r3, r5, #0
   16248:	movne	r3, #1
   1624c:	cmp	r4, #0
   16250:	blt	16268 <dcngettext@plt+0x5250>
   16254:	cmp	r3, #0
   16258:	bne	16268 <dcngettext@plt+0x5250>
   1625c:	mul	r0, r1, r0
   16260:	pop	{r4, r5, r6, lr}
   16264:	b	16214 <dcngettext@plt+0x51fc>
   16268:	bl	1645c <dcngettext@plt+0x5444>
   1626c:	b	16214 <dcngettext@plt+0x51fc>
   16270:	adds	r3, r0, #0
   16274:	movne	r3, #1
   16278:	cmp	r1, #0
   1627c:	movne	r3, #0
   16280:	cmp	r3, #0
   16284:	push	{r4, lr}
   16288:	bne	162b0 <dcngettext@plt+0x5298>
   1628c:	mov	r4, r1
   16290:	bl	10e44 <realloc@plt>
   16294:	adds	r4, r4, #0
   16298:	movne	r4, #1
   1629c:	cmp	r0, #0
   162a0:	movne	r4, #0
   162a4:	cmp	r4, #0
   162a8:	popeq	{r4, pc}
   162ac:	bl	1645c <dcngettext@plt+0x5444>
   162b0:	bl	10de4 <free@plt>
   162b4:	mov	r0, #0
   162b8:	pop	{r4, pc}
   162bc:	push	{r4, r5, r6, lr}
   162c0:	umull	r4, r5, r1, r2
   162c4:	adds	r3, r5, #0
   162c8:	movne	r3, #1
   162cc:	cmp	r4, #0
   162d0:	blt	162e8 <dcngettext@plt+0x52d0>
   162d4:	cmp	r3, #0
   162d8:	bne	162e8 <dcngettext@plt+0x52d0>
   162dc:	mul	r1, r2, r1
   162e0:	pop	{r4, r5, r6, lr}
   162e4:	b	16270 <dcngettext@plt+0x5258>
   162e8:	bl	1645c <dcngettext@plt+0x5444>
   162ec:	push	{r4, r5, r6, r7, r8, lr}
   162f0:	subs	r7, r0, #0
   162f4:	mov	r6, r1
   162f8:	mov	r5, r2
   162fc:	ldr	r4, [r1]
   16300:	beq	16334 <dcngettext@plt+0x531c>
   16304:	mov	r1, r2
   16308:	ldr	r0, [pc, #104]	; 16378 <dcngettext@plt+0x5360>
   1630c:	bl	168fc <dcngettext@plt+0x58e4>
   16310:	cmp	r0, r4
   16314:	bls	16358 <dcngettext@plt+0x5340>
   16318:	add	r3, r4, #1
   1631c:	add	r4, r3, r4, lsr #1
   16320:	str	r4, [r6]
   16324:	mul	r1, r5, r4
   16328:	mov	r0, r7
   1632c:	pop	{r4, r5, r6, r7, r8, lr}
   16330:	b	16270 <dcngettext@plt+0x5258>
   16334:	cmp	r4, #0
   16338:	beq	1635c <dcngettext@plt+0x5344>
   1633c:	umull	r0, r1, r4, r5
   16340:	adds	r3, r1, #0
   16344:	movne	r3, #1
   16348:	cmp	r0, #0
   1634c:	blt	16358 <dcngettext@plt+0x5340>
   16350:	cmp	r3, #0
   16354:	beq	16320 <dcngettext@plt+0x5308>
   16358:	bl	1645c <dcngettext@plt+0x5444>
   1635c:	mov	r1, r2
   16360:	mov	r0, #64	; 0x40
   16364:	bl	168fc <dcngettext@plt+0x58e4>
   16368:	cmp	r5, #64	; 0x40
   1636c:	movls	r4, r0
   16370:	addhi	r4, r0, #1
   16374:	b	1633c <dcngettext@plt+0x5324>
   16378:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   1637c:	cmp	r0, #0
   16380:	ldr	r3, [r1]
   16384:	beq	163a8 <dcngettext@plt+0x5390>
   16388:	ldr	r2, [pc, #60]	; 163cc <dcngettext@plt+0x53b4>
   1638c:	cmp	r3, r2
   16390:	bhi	163c4 <dcngettext@plt+0x53ac>
   16394:	add	r2, r3, #1
   16398:	add	r3, r2, r3, lsr #1
   1639c:	str	r3, [r1]
   163a0:	mov	r1, r3
   163a4:	b	16270 <dcngettext@plt+0x5258>
   163a8:	cmp	r3, #0
   163ac:	bne	163c0 <dcngettext@plt+0x53a8>
   163b0:	mov	r3, #64	; 0x40
   163b4:	str	r3, [r1]
   163b8:	mov	r1, r3
   163bc:	b	16270 <dcngettext@plt+0x5258>
   163c0:	bge	1639c <dcngettext@plt+0x5384>
   163c4:	push	{r4, lr}
   163c8:	bl	1645c <dcngettext@plt+0x5444>
   163cc:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   163d0:	push	{r4, lr}
   163d4:	mov	r4, r0
   163d8:	bl	16214 <dcngettext@plt+0x51fc>
   163dc:	mov	r2, r4
   163e0:	mov	r1, #0
   163e4:	pop	{r4, lr}
   163e8:	b	10f4c <memset@plt>
   163ec:	push	{r4, r5, r6, lr}
   163f0:	umull	r4, r5, r0, r1
   163f4:	adds	r3, r5, #0
   163f8:	movne	r3, #1
   163fc:	cmp	r4, #0
   16400:	blt	16418 <dcngettext@plt+0x5400>
   16404:	cmp	r3, #0
   16408:	bne	16418 <dcngettext@plt+0x5400>
   1640c:	bl	10d90 <calloc@plt>
   16410:	cmp	r0, #0
   16414:	popne	{r4, r5, r6, pc}
   16418:	bl	1645c <dcngettext@plt+0x5444>
   1641c:	push	{r4, r5, r6, lr}
   16420:	mov	r4, r1
   16424:	mov	r5, r0
   16428:	mov	r0, r1
   1642c:	bl	16214 <dcngettext@plt+0x51fc>
   16430:	mov	r2, r4
   16434:	mov	r1, r5
   16438:	pop	{r4, r5, r6, lr}
   1643c:	b	10dfc <memcpy@plt>
   16440:	push	{r4, lr}
   16444:	mov	r4, r0
   16448:	bl	10f10 <strlen@plt>
   1644c:	add	r1, r0, #1
   16450:	mov	r0, r4
   16454:	pop	{r4, lr}
   16458:	b	1641c <dcngettext@plt+0x5404>
   1645c:	ldr	r3, [pc, #44]	; 16490 <dcngettext@plt+0x5478>
   16460:	push	{r4, lr}
   16464:	mov	r2, #5
   16468:	ldr	r1, [pc, #36]	; 16494 <dcngettext@plt+0x547c>
   1646c:	mov	r0, #0
   16470:	ldr	r4, [r3]
   16474:	bl	10e2c <dcgettext@plt>
   16478:	ldr	r2, [pc, #24]	; 16498 <dcngettext@plt+0x5480>
   1647c:	mov	r1, #0
   16480:	mov	r3, r0
   16484:	mov	r0, r4
   16488:	bl	10ea4 <error@plt>
   1648c:	bl	11000 <abort@plt>
   16490:	andeq	r8, r2, r4, lsl #2
   16494:	andeq	r7, r1, r8, ror #28
   16498:	strdeq	r7, [r1], -r0
   1649c:	push	{r4, r5, lr}
   164a0:	sub	sp, sp, #12
   164a4:	mov	r4, r0
   164a8:	bl	10f64 <fileno@plt>
   164ac:	cmp	r0, #0
   164b0:	mov	r0, r4
   164b4:	blt	16530 <dcngettext@plt+0x5518>
   164b8:	bl	10ec8 <__freading@plt>
   164bc:	cmp	r0, #0
   164c0:	bne	164fc <dcngettext@plt+0x54e4>
   164c4:	mov	r0, r4
   164c8:	bl	16688 <dcngettext@plt+0x5670>
   164cc:	cmp	r0, #0
   164d0:	beq	1652c <dcngettext@plt+0x5514>
   164d4:	bl	10f28 <__errno_location@plt>
   164d8:	mov	r5, r0
   164dc:	mov	r0, r4
   164e0:	ldr	r4, [r5]
   164e4:	bl	10f7c <fclose@plt>
   164e8:	cmp	r4, #0
   164ec:	mvnne	r0, #0
   164f0:	strne	r4, [r5]
   164f4:	add	sp, sp, #12
   164f8:	pop	{r4, r5, pc}
   164fc:	mov	r0, r4
   16500:	bl	10f64 <fileno@plt>
   16504:	mov	r3, #1
   16508:	str	r3, [sp]
   1650c:	mov	r2, #0
   16510:	mov	r3, #0
   16514:	bl	10e74 <lseek64@plt>
   16518:	mvn	r3, #0
   1651c:	mvn	r2, #0
   16520:	cmp	r1, r3
   16524:	cmpeq	r0, r2
   16528:	bne	164c4 <dcngettext@plt+0x54ac>
   1652c:	mov	r0, r4
   16530:	add	sp, sp, #12
   16534:	pop	{r4, r5, lr}
   16538:	b	10f7c <fclose@plt>
   1653c:	push	{r1, r2, r3}
   16540:	push	{r4, r5, r6, r7, r8, lr}
   16544:	sub	sp, sp, #12
   16548:	ldr	r4, [pc, #300]	; 1667c <dcngettext@plt+0x5664>
   1654c:	ldr	r3, [pc, #300]	; 16680 <dcngettext@plt+0x5668>
   16550:	ldr	r1, [sp, #36]	; 0x24
   16554:	ldr	r2, [r4]
   16558:	cmp	r1, r3
   1655c:	add	r3, sp, #40	; 0x28
   16560:	str	r2, [sp, #4]
   16564:	str	r3, [sp]
   16568:	bne	16634 <dcngettext@plt+0x561c>
   1656c:	ldr	r6, [pc, #272]	; 16684 <dcngettext@plt+0x566c>
   16570:	add	r3, sp, #44	; 0x2c
   16574:	str	r3, [sp]
   16578:	ldr	r3, [r6]
   1657c:	ldr	r7, [sp, #40]	; 0x28
   16580:	cmp	r3, #0
   16584:	blt	165c8 <dcngettext@plt+0x55b0>
   16588:	mov	r2, r7
   1658c:	mov	r8, r0
   16590:	bl	10f94 <fcntl64@plt>
   16594:	subs	r5, r0, #0
   16598:	blt	16644 <dcngettext@plt+0x562c>
   1659c:	mov	r3, #1
   165a0:	str	r3, [r6]
   165a4:	ldr	r2, [sp, #4]
   165a8:	ldr	r3, [r4]
   165ac:	mov	r0, r5
   165b0:	cmp	r2, r3
   165b4:	bne	16678 <dcngettext@plt+0x5660>
   165b8:	add	sp, sp, #12
   165bc:	pop	{r4, r5, r6, r7, r8, lr}
   165c0:	add	sp, sp, #12
   165c4:	bx	lr
   165c8:	mov	r2, r7
   165cc:	mov	r1, #0
   165d0:	bl	1653c <dcngettext@plt+0x5524>
   165d4:	subs	r5, r0, #0
   165d8:	blt	165a4 <dcngettext@plt+0x558c>
   165dc:	ldr	r3, [r6]
   165e0:	cmn	r3, #1
   165e4:	bne	165a4 <dcngettext@plt+0x558c>
   165e8:	mov	r1, #1
   165ec:	mov	r0, r5
   165f0:	bl	10f94 <fcntl64@plt>
   165f4:	subs	r2, r0, #0
   165f8:	blt	16614 <dcngettext@plt+0x55fc>
   165fc:	orr	r2, r2, #1
   16600:	mov	r1, #2
   16604:	mov	r0, r5
   16608:	bl	10f94 <fcntl64@plt>
   1660c:	cmn	r0, #1
   16610:	bne	165a4 <dcngettext@plt+0x558c>
   16614:	bl	10f28 <__errno_location@plt>
   16618:	mov	r6, r0
   1661c:	mov	r0, r5
   16620:	ldr	r7, [r6]
   16624:	mvn	r5, #0
   16628:	bl	1100c <close@plt>
   1662c:	str	r7, [r6]
   16630:	b	165a4 <dcngettext@plt+0x558c>
   16634:	ldr	r2, [sp, #40]	; 0x28
   16638:	bl	10f94 <fcntl64@plt>
   1663c:	mov	r5, r0
   16640:	b	165a4 <dcngettext@plt+0x558c>
   16644:	bl	10f28 <__errno_location@plt>
   16648:	ldr	r3, [r0]
   1664c:	cmp	r3, #22
   16650:	bne	1659c <dcngettext@plt+0x5584>
   16654:	mov	r2, r7
   16658:	mov	r0, r8
   1665c:	mov	r1, #0
   16660:	bl	1653c <dcngettext@plt+0x5524>
   16664:	subs	r5, r0, #0
   16668:	mvnge	r3, #0
   1666c:	strge	r3, [r6]
   16670:	bge	165e8 <dcngettext@plt+0x55d0>
   16674:	b	165a4 <dcngettext@plt+0x558c>
   16678:	bl	10e38 <__stack_chk_fail@plt>
   1667c:	andeq	r7, r2, r8, lsl #30
   16680:	andeq	r0, r0, r6, lsl #8
   16684:			; <UNDEFINED> instruction: 0x000282b8
   16688:	push	{r4, lr}
   1668c:	subs	r4, r0, #0
   16690:	sub	sp, sp, #8
   16694:	beq	166b0 <dcngettext@plt+0x5698>
   16698:	bl	10ec8 <__freading@plt>
   1669c:	cmp	r0, #0
   166a0:	beq	166b0 <dcngettext@plt+0x5698>
   166a4:	ldr	r3, [r4]
   166a8:	tst	r3, #256	; 0x100
   166ac:	bne	166c0 <dcngettext@plt+0x56a8>
   166b0:	mov	r0, r4
   166b4:	add	sp, sp, #8
   166b8:	pop	{r4, lr}
   166bc:	b	10dd8 <fflush@plt>
   166c0:	mov	r3, #1
   166c4:	str	r3, [sp]
   166c8:	mov	r2, #0
   166cc:	mov	r3, #0
   166d0:	mov	r0, r4
   166d4:	bl	166e8 <dcngettext@plt+0x56d0>
   166d8:	mov	r0, r4
   166dc:	add	sp, sp, #8
   166e0:	pop	{r4, lr}
   166e4:	b	10dd8 <fflush@plt>
   166e8:	push	{r4, r5, r6, r7, r8, lr}
   166ec:	sub	sp, sp, #8
   166f0:	ldmib	r0, {ip, lr}
   166f4:	mov	r4, r0
   166f8:	ldr	r5, [sp, #32]
   166fc:	cmp	lr, ip
   16700:	beq	16718 <dcngettext@plt+0x5700>
   16704:	str	r5, [sp, #32]
   16708:	mov	r0, r4
   1670c:	add	sp, sp, #8
   16710:	pop	{r4, r5, r6, r7, r8, lr}
   16714:	b	10f88 <fseeko64@plt>
   16718:	ldr	lr, [r0, #20]
   1671c:	ldr	ip, [r0, #16]
   16720:	cmp	lr, ip
   16724:	bne	16704 <dcngettext@plt+0x56ec>
   16728:	ldr	r8, [r0, #36]	; 0x24
   1672c:	cmp	r8, #0
   16730:	bne	16704 <dcngettext@plt+0x56ec>
   16734:	mov	r6, r2
   16738:	mov	r7, r3
   1673c:	bl	10f64 <fileno@plt>
   16740:	mov	r2, r6
   16744:	mov	r3, r7
   16748:	str	r5, [sp]
   1674c:	bl	10e74 <lseek64@plt>
   16750:	mvn	r3, #0
   16754:	mvn	r2, #0
   16758:	cmp	r1, r3
   1675c:	cmpeq	r0, r2
   16760:	beq	16780 <dcngettext@plt+0x5768>
   16764:	ldr	r3, [r4]
   16768:	strd	r0, [r4, #80]	; 0x50
   1676c:	mov	r0, r8
   16770:	bic	r3, r3, #16
   16774:	str	r3, [r4]
   16778:	add	sp, sp, #8
   1677c:	pop	{r4, r5, r6, r7, r8, pc}
   16780:	mvn	r0, #0
   16784:	b	16778 <dcngettext@plt+0x5760>
   16788:	push	{r4, r5, r6, r7, r8, lr}
   1678c:	subs	r7, r0, #0
   16790:	ldr	r5, [pc, #108]	; 16804 <dcngettext@plt+0x57ec>
   16794:	sub	sp, sp, #8
   16798:	mov	r8, r1
   1679c:	ldr	r1, [r5]
   167a0:	moveq	r7, sp
   167a4:	str	r1, [sp, #4]
   167a8:	mov	r0, r7
   167ac:	mov	r1, r8
   167b0:	mov	r6, r2
   167b4:	bl	10e98 <mbrtowc@plt>
   167b8:	cmp	r6, #0
   167bc:	cmnne	r0, #3
   167c0:	mov	r4, r0
   167c4:	bhi	167e4 <dcngettext@plt+0x57cc>
   167c8:	ldr	r2, [sp, #4]
   167cc:	ldr	r3, [r5]
   167d0:	mov	r0, r4
   167d4:	cmp	r2, r3
   167d8:	bne	16800 <dcngettext@plt+0x57e8>
   167dc:	add	sp, sp, #8
   167e0:	pop	{r4, r5, r6, r7, r8, pc}
   167e4:	mov	r0, #0
   167e8:	bl	1687c <dcngettext@plt+0x5864>
   167ec:	cmp	r0, #0
   167f0:	moveq	r4, #1
   167f4:	ldrbeq	r3, [r8]
   167f8:	streq	r3, [r7]
   167fc:	b	167c8 <dcngettext@plt+0x57b0>
   16800:	bl	10e38 <__stack_chk_fail@plt>
   16804:	andeq	r7, r2, r8, lsl #30
   16808:	push	{r4, r5, r6, lr}
   1680c:	mov	r4, r0
   16810:	bl	10e8c <__fpending@plt>
   16814:	ldr	r5, [r4]
   16818:	and	r5, r5, #32
   1681c:	mov	r6, r0
   16820:	mov	r0, r4
   16824:	bl	1649c <dcngettext@plt+0x5484>
   16828:	cmp	r5, #0
   1682c:	mov	r4, r0
   16830:	bne	1685c <dcngettext@plt+0x5844>
   16834:	cmp	r0, #0
   16838:	beq	16854 <dcngettext@plt+0x583c>
   1683c:	cmp	r6, #0
   16840:	bne	16874 <dcngettext@plt+0x585c>
   16844:	bl	10f28 <__errno_location@plt>
   16848:	ldr	r4, [r0]
   1684c:	subs	r4, r4, #9
   16850:	mvnne	r4, #0
   16854:	mov	r0, r4
   16858:	pop	{r4, r5, r6, pc}
   1685c:	cmp	r0, #0
   16860:	bne	16874 <dcngettext@plt+0x585c>
   16864:	bl	10f28 <__errno_location@plt>
   16868:	str	r4, [r0]
   1686c:	mvn	r4, #0
   16870:	b	16854 <dcngettext@plt+0x583c>
   16874:	mvn	r4, #0
   16878:	b	16854 <dcngettext@plt+0x583c>
   1687c:	push	{r4, lr}
   16880:	mov	r1, #0
   16884:	bl	10fac <setlocale@plt>
   16888:	subs	r4, r0, #0
   1688c:	beq	168b8 <dcngettext@plt+0x58a0>
   16890:	ldr	r1, [pc, #40]	; 168c0 <dcngettext@plt+0x58a8>
   16894:	bl	10dc0 <strcmp@plt>
   16898:	cmp	r0, #0
   1689c:	popeq	{r4, pc}
   168a0:	mov	r0, r4
   168a4:	ldr	r1, [pc, #24]	; 168c4 <dcngettext@plt+0x58ac>
   168a8:	bl	10dc0 <strcmp@plt>
   168ac:	adds	r0, r0, #0
   168b0:	movne	r0, #1
   168b4:	pop	{r4, pc}
   168b8:	mov	r0, #1
   168bc:	pop	{r4, pc}
   168c0:	andeq	r7, r1, ip, ror lr
   168c4:	andeq	r7, r1, r0, lsl #29
   168c8:	push	{r4, lr}
   168cc:	mov	r0, #14
   168d0:	bl	10fc4 <nl_langinfo@plt>
   168d4:	cmp	r0, #0
   168d8:	beq	168f0 <dcngettext@plt+0x58d8>
   168dc:	ldrb	r2, [r0]
   168e0:	ldr	r3, [pc, #16]	; 168f8 <dcngettext@plt+0x58e0>
   168e4:	cmp	r2, #0
   168e8:	moveq	r0, r3
   168ec:	pop	{r4, pc}
   168f0:	ldr	r0, [pc]	; 168f8 <dcngettext@plt+0x58e0>
   168f4:	pop	{r4, pc}
   168f8:	andeq	r7, r1, r8, lsl #29
   168fc:	subs	r2, r1, #1
   16900:	bxeq	lr
   16904:	bcc	16adc <dcngettext@plt+0x5ac4>
   16908:	cmp	r0, r1
   1690c:	bls	16ac0 <dcngettext@plt+0x5aa8>
   16910:	tst	r1, r2
   16914:	beq	16acc <dcngettext@plt+0x5ab4>
   16918:	clz	r3, r0
   1691c:	clz	r2, r1
   16920:	sub	r3, r2, r3
   16924:	rsbs	r3, r3, #31
   16928:	addne	r3, r3, r3, lsl #1
   1692c:	mov	r2, #0
   16930:	addne	pc, pc, r3, lsl #2
   16934:	nop			; (mov r0, r0)
   16938:	cmp	r0, r1, lsl #31
   1693c:	adc	r2, r2, r2
   16940:	subcs	r0, r0, r1, lsl #31
   16944:	cmp	r0, r1, lsl #30
   16948:	adc	r2, r2, r2
   1694c:	subcs	r0, r0, r1, lsl #30
   16950:	cmp	r0, r1, lsl #29
   16954:	adc	r2, r2, r2
   16958:	subcs	r0, r0, r1, lsl #29
   1695c:	cmp	r0, r1, lsl #28
   16960:	adc	r2, r2, r2
   16964:	subcs	r0, r0, r1, lsl #28
   16968:	cmp	r0, r1, lsl #27
   1696c:	adc	r2, r2, r2
   16970:	subcs	r0, r0, r1, lsl #27
   16974:	cmp	r0, r1, lsl #26
   16978:	adc	r2, r2, r2
   1697c:	subcs	r0, r0, r1, lsl #26
   16980:	cmp	r0, r1, lsl #25
   16984:	adc	r2, r2, r2
   16988:	subcs	r0, r0, r1, lsl #25
   1698c:	cmp	r0, r1, lsl #24
   16990:	adc	r2, r2, r2
   16994:	subcs	r0, r0, r1, lsl #24
   16998:	cmp	r0, r1, lsl #23
   1699c:	adc	r2, r2, r2
   169a0:	subcs	r0, r0, r1, lsl #23
   169a4:	cmp	r0, r1, lsl #22
   169a8:	adc	r2, r2, r2
   169ac:	subcs	r0, r0, r1, lsl #22
   169b0:	cmp	r0, r1, lsl #21
   169b4:	adc	r2, r2, r2
   169b8:	subcs	r0, r0, r1, lsl #21
   169bc:	cmp	r0, r1, lsl #20
   169c0:	adc	r2, r2, r2
   169c4:	subcs	r0, r0, r1, lsl #20
   169c8:	cmp	r0, r1, lsl #19
   169cc:	adc	r2, r2, r2
   169d0:	subcs	r0, r0, r1, lsl #19
   169d4:	cmp	r0, r1, lsl #18
   169d8:	adc	r2, r2, r2
   169dc:	subcs	r0, r0, r1, lsl #18
   169e0:	cmp	r0, r1, lsl #17
   169e4:	adc	r2, r2, r2
   169e8:	subcs	r0, r0, r1, lsl #17
   169ec:	cmp	r0, r1, lsl #16
   169f0:	adc	r2, r2, r2
   169f4:	subcs	r0, r0, r1, lsl #16
   169f8:	cmp	r0, r1, lsl #15
   169fc:	adc	r2, r2, r2
   16a00:	subcs	r0, r0, r1, lsl #15
   16a04:	cmp	r0, r1, lsl #14
   16a08:	adc	r2, r2, r2
   16a0c:	subcs	r0, r0, r1, lsl #14
   16a10:	cmp	r0, r1, lsl #13
   16a14:	adc	r2, r2, r2
   16a18:	subcs	r0, r0, r1, lsl #13
   16a1c:	cmp	r0, r1, lsl #12
   16a20:	adc	r2, r2, r2
   16a24:	subcs	r0, r0, r1, lsl #12
   16a28:	cmp	r0, r1, lsl #11
   16a2c:	adc	r2, r2, r2
   16a30:	subcs	r0, r0, r1, lsl #11
   16a34:	cmp	r0, r1, lsl #10
   16a38:	adc	r2, r2, r2
   16a3c:	subcs	r0, r0, r1, lsl #10
   16a40:	cmp	r0, r1, lsl #9
   16a44:	adc	r2, r2, r2
   16a48:	subcs	r0, r0, r1, lsl #9
   16a4c:	cmp	r0, r1, lsl #8
   16a50:	adc	r2, r2, r2
   16a54:	subcs	r0, r0, r1, lsl #8
   16a58:	cmp	r0, r1, lsl #7
   16a5c:	adc	r2, r2, r2
   16a60:	subcs	r0, r0, r1, lsl #7
   16a64:	cmp	r0, r1, lsl #6
   16a68:	adc	r2, r2, r2
   16a6c:	subcs	r0, r0, r1, lsl #6
   16a70:	cmp	r0, r1, lsl #5
   16a74:	adc	r2, r2, r2
   16a78:	subcs	r0, r0, r1, lsl #5
   16a7c:	cmp	r0, r1, lsl #4
   16a80:	adc	r2, r2, r2
   16a84:	subcs	r0, r0, r1, lsl #4
   16a88:	cmp	r0, r1, lsl #3
   16a8c:	adc	r2, r2, r2
   16a90:	subcs	r0, r0, r1, lsl #3
   16a94:	cmp	r0, r1, lsl #2
   16a98:	adc	r2, r2, r2
   16a9c:	subcs	r0, r0, r1, lsl #2
   16aa0:	cmp	r0, r1, lsl #1
   16aa4:	adc	r2, r2, r2
   16aa8:	subcs	r0, r0, r1, lsl #1
   16aac:	cmp	r0, r1
   16ab0:	adc	r2, r2, r2
   16ab4:	subcs	r0, r0, r1
   16ab8:	mov	r0, r2
   16abc:	bx	lr
   16ac0:	moveq	r0, #1
   16ac4:	movne	r0, #0
   16ac8:	bx	lr
   16acc:	clz	r2, r1
   16ad0:	rsb	r2, r2, #31
   16ad4:	lsr	r0, r0, r2
   16ad8:	bx	lr
   16adc:	cmp	r0, #0
   16ae0:	mvnne	r0, #0
   16ae4:	b	16b44 <dcngettext@plt+0x5b2c>
   16ae8:	cmp	r1, #0
   16aec:	beq	16adc <dcngettext@plt+0x5ac4>
   16af0:	push	{r0, r1, lr}
   16af4:	bl	168fc <dcngettext@plt+0x58e4>
   16af8:	pop	{r1, r2, lr}
   16afc:	mul	r3, r2, r0
   16b00:	sub	r1, r1, r3
   16b04:	bx	lr
   16b08:	cmp	r3, #0
   16b0c:	cmpeq	r2, #0
   16b10:	bne	16b28 <dcngettext@plt+0x5b10>
   16b14:	cmp	r1, #0
   16b18:	cmpeq	r0, #0
   16b1c:	mvnne	r1, #0
   16b20:	mvnne	r0, #0
   16b24:	b	16b44 <dcngettext@plt+0x5b2c>
   16b28:	sub	sp, sp, #8
   16b2c:	push	{sp, lr}
   16b30:	bl	16b54 <dcngettext@plt+0x5b3c>
   16b34:	ldr	lr, [sp, #4]
   16b38:	add	sp, sp, #8
   16b3c:	pop	{r2, r3}
   16b40:	bx	lr
   16b44:	push	{r1, lr}
   16b48:	mov	r0, #8
   16b4c:	bl	10da8 <raise@plt>
   16b50:	pop	{r1, pc}
   16b54:	cmp	r1, r3
   16b58:	cmpeq	r0, r2
   16b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b60:	mov	r4, r0
   16b64:	movcc	r0, #0
   16b68:	mov	r5, r1
   16b6c:	ldr	lr, [sp, #36]	; 0x24
   16b70:	movcc	r1, r0
   16b74:	bcc	16c70 <dcngettext@plt+0x5c58>
   16b78:	cmp	r3, #0
   16b7c:	clzeq	ip, r2
   16b80:	clzne	ip, r3
   16b84:	addeq	ip, ip, #32
   16b88:	cmp	r5, #0
   16b8c:	clzeq	r1, r4
   16b90:	addeq	r1, r1, #32
   16b94:	clzne	r1, r5
   16b98:	sub	ip, ip, r1
   16b9c:	sub	sl, ip, #32
   16ba0:	lsl	r9, r3, ip
   16ba4:	rsb	fp, ip, #32
   16ba8:	orr	r9, r9, r2, lsl sl
   16bac:	orr	r9, r9, r2, lsr fp
   16bb0:	lsl	r8, r2, ip
   16bb4:	cmp	r5, r9
   16bb8:	cmpeq	r4, r8
   16bbc:	movcc	r0, #0
   16bc0:	movcc	r1, r0
   16bc4:	bcc	16be0 <dcngettext@plt+0x5bc8>
   16bc8:	mov	r0, #1
   16bcc:	subs	r4, r4, r8
   16bd0:	lsl	r1, r0, sl
   16bd4:	orr	r1, r1, r0, lsr fp
   16bd8:	lsl	r0, r0, ip
   16bdc:	sbc	r5, r5, r9
   16be0:	cmp	ip, #0
   16be4:	beq	16c70 <dcngettext@plt+0x5c58>
   16be8:	lsr	r6, r8, #1
   16bec:	orr	r6, r6, r9, lsl #31
   16bf0:	lsr	r7, r9, #1
   16bf4:	mov	r2, ip
   16bf8:	b	16c1c <dcngettext@plt+0x5c04>
   16bfc:	subs	r3, r4, r6
   16c00:	sbc	r8, r5, r7
   16c04:	adds	r3, r3, r3
   16c08:	adc	r8, r8, r8
   16c0c:	adds	r4, r3, #1
   16c10:	adc	r5, r8, #0
   16c14:	subs	r2, r2, #1
   16c18:	beq	16c38 <dcngettext@plt+0x5c20>
   16c1c:	cmp	r5, r7
   16c20:	cmpeq	r4, r6
   16c24:	bcs	16bfc <dcngettext@plt+0x5be4>
   16c28:	adds	r4, r4, r4
   16c2c:	adc	r5, r5, r5
   16c30:	subs	r2, r2, #1
   16c34:	bne	16c1c <dcngettext@plt+0x5c04>
   16c38:	lsr	r3, r4, ip
   16c3c:	orr	r3, r3, r5, lsl fp
   16c40:	lsr	r2, r5, ip
   16c44:	orr	r3, r3, r5, lsr sl
   16c48:	adds	r0, r0, r4
   16c4c:	mov	r4, r3
   16c50:	lsl	r3, r2, ip
   16c54:	orr	r3, r3, r4, lsl sl
   16c58:	lsl	ip, r4, ip
   16c5c:	orr	r3, r3, r4, lsr fp
   16c60:	adc	r1, r1, r5
   16c64:	subs	r0, r0, ip
   16c68:	mov	r5, r2
   16c6c:	sbc	r1, r1, r3
   16c70:	cmp	lr, #0
   16c74:	strdne	r4, [lr]
   16c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c80:	mov	r7, r0
   16c84:	ldr	r6, [pc, #72]	; 16cd4 <dcngettext@plt+0x5cbc>
   16c88:	ldr	r5, [pc, #72]	; 16cd8 <dcngettext@plt+0x5cc0>
   16c8c:	add	r6, pc, r6
   16c90:	add	r5, pc, r5
   16c94:	sub	r6, r6, r5
   16c98:	mov	r8, r1
   16c9c:	mov	r9, r2
   16ca0:	bl	10d64 <fdopen@plt-0x20>
   16ca4:	asrs	r6, r6, #2
   16ca8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16cac:	mov	r4, #0
   16cb0:	add	r4, r4, #1
   16cb4:	ldr	r3, [r5], #4
   16cb8:	mov	r2, r9
   16cbc:	mov	r1, r8
   16cc0:	mov	r0, r7
   16cc4:	blx	r3
   16cc8:	cmp	r6, r4
   16ccc:	bne	16cb0 <dcngettext@plt+0x5c98>
   16cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16cd4:	andeq	r1, r1, r0, ror r2
   16cd8:	andeq	r1, r1, r8, ror #4
   16cdc:	bx	lr
   16ce0:	ldr	r3, [pc, #12]	; 16cf4 <dcngettext@plt+0x5cdc>
   16ce4:	mov	r1, #0
   16ce8:	add	r3, pc, r3
   16cec:	ldr	r2, [r3]
   16cf0:	b	10f34 <__cxa_atexit@plt>
   16cf4:	andeq	r1, r1, r4, lsl #8

Disassembly of section .fini:

00016cf8 <.fini>:
   16cf8:	push	{r3, lr}
   16cfc:	pop	{r3, pc}
