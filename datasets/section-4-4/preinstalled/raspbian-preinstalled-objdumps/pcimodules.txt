
raspbian-preinstalled/pcimodules:     file format elf32-littlearm


Disassembly of section .init:

00010a68 <.init>:
   10a68:	push	{r3, lr}
   10a6c:	bl	10ed4 <abort@plt+0x290>
   10a70:	pop	{r3, pc}

Disassembly of section .plt:

00010a74 <pci_set_param@plt-0x14>:
   10a74:	push	{lr}		; (str lr, [sp, #-4]!)
   10a78:	ldr	lr, [pc, #4]	; 10a84 <pci_set_param@plt-0x4>
   10a7c:	add	lr, pc, lr
   10a80:	ldr	pc, [lr, #8]!
   10a84:	andeq	r1, r1, ip, ror r5

00010a88 <pci_set_param@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1404]!	; 0x57c

00010a94 <strcmp@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1396]!	; 0x574

00010aa0 <strtol@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1388]!	; 0x56c

00010aac <pci_read_word@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1380]!	; 0x564

00010ab8 <fopen@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1372]!	; 0x55c

00010ac4 <free@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1364]!	; 0x554

00010ad0 <fgets@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1356]!	; 0x54c

00010adc <memcpy@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1348]!	; 0x544

00010ae8 <uname@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1340]!	; 0x53c

00010af4 <__stack_chk_fail@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1332]!	; 0x534

00010b00 <realloc@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1324]!	; 0x52c

00010b0c <perror@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1316]!	; 0x524

00010b18 <strcpy@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1308]!	; 0x51c

00010b24 <pci_lookup_method@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1300]!	; 0x514

00010b30 <puts@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1292]!	; 0x50c

00010b3c <malloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1284]!	; 0x504

00010b48 <pci_get_method_name@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b54 <__libc_start_main@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b60 <__vfprintf_chk@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b6c <__gmon_start__@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b78 <pci_scan_bus@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b84 <getopt_long@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b90 <exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b9c <strlen@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1220]!	; 0x4c4

00010ba8 <strchr@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1212]!	; 0x4bc

00010bb4 <pci_read_byte@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1204]!	; 0x4b4

00010bc0 <__sprintf_chk@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1196]!	; 0x4ac

00010bcc <__isoc99_sscanf@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bd8 <__printf_chk@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1180]!	; 0x49c

00010be4 <__fprintf_chk@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1172]!	; 0x494

00010bf0 <pci_alloc@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bfc <fclose@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1156]!	; 0x484

00010c08 <pci_fill_info@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1148]!	; 0x47c

00010c14 <pci_walk_params@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1140]!	; 0x474

00010c20 <fputc@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1132]!	; 0x46c

00010c2c <pci_cleanup@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1124]!	; 0x464

00010c38 <pci_init@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1116]!	; 0x45c

00010c44 <abort@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1108]!	; 0x454

Disassembly of section .text:

00010c50 <.text>:
   10c50:	ldr	r3, [pc, #548]	; 10e7c <abort@plt+0x238>
   10c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c58:	sub	sp, sp, #36	; 0x24
   10c5c:	ldr	r6, [pc, #540]	; 10e80 <abort@plt+0x23c>
   10c60:	ldr	r5, [pc, #540]	; 10e84 <abort@plt+0x240>
   10c64:	ldr	fp, [pc, #540]	; 10e88 <abort@plt+0x244>
   10c68:	ldr	sl, [pc, #540]	; 10e8c <abort@plt+0x248>
   10c6c:	add	r4, sp, #32
   10c70:	ldr	r3, [r3]
   10c74:	mov	r8, r0
   10c78:	mov	r7, r1
   10c7c:	mov	r9, #0
   10c80:	str	r3, [sp, #28]
   10c84:	str	r9, [r4, #-8]!
   10c88:	str	r4, [sp]
   10c8c:	mov	r3, r6
   10c90:	mov	r2, r5
   10c94:	mov	r1, r7
   10c98:	mov	r0, r8
   10c9c:	bl	10b84 <getopt_long@plt>
   10ca0:	cmn	r0, #1
   10ca4:	beq	10cfc <abort@plt+0xb8>
   10ca8:	cmp	r0, #104	; 0x68
   10cac:	beq	10cf0 <abort@plt+0xac>
   10cb0:	cmp	r0, #109	; 0x6d
   10cb4:	beq	10cd8 <abort@plt+0x94>
   10cb8:	cmp	r0, #99	; 0x63
   10cbc:	bne	10c88 <abort@plt+0x44>
   10cc0:	mov	r2, r9
   10cc4:	mov	r1, #0
   10cc8:	ldr	r0, [fp]
   10ccc:	bl	10aa0 <strtol@plt>
   10cd0:	str	r0, [sl, #4]
   10cd4:	b	10c88 <abort@plt+0x44>
   10cd8:	mov	r2, r9
   10cdc:	mov	r1, #0
   10ce0:	ldr	r0, [fp]
   10ce4:	bl	10aa0 <strtol@plt>
   10ce8:	str	r0, [sl, #8]
   10cec:	b	10c88 <abort@plt+0x44>
   10cf0:	ldr	r0, [pc, #408]	; 10e90 <abort@plt+0x24c>
   10cf4:	bl	10b30 <puts@plt>
   10cf8:	b	10c88 <abort@plt+0x44>
   10cfc:	bl	10fc0 <abort@plt+0x37c>
   10d00:	bl	10bf0 <pci_alloc@plt>
   10d04:	mov	r4, r0
   10d08:	str	r0, [sp, #16]
   10d0c:	bl	10c38 <pci_init@plt>
   10d10:	mov	r0, r4
   10d14:	bl	10b78 <pci_scan_bus@plt>
   10d18:	ldr	r8, [r4, #44]	; 0x2c
   10d1c:	cmp	r8, #0
   10d20:	beq	10df0 <abort@plt+0x1ac>
   10d24:	ldr	r7, [pc, #352]	; 10e8c <abort@plt+0x248>
   10d28:	ldr	r3, [pc, #356]	; 10e94 <abort@plt+0x250>
   10d2c:	mov	fp, #5
   10d30:	mov	sl, #10
   10d34:	mov	r9, #9
   10d38:	mov	r6, r8
   10d3c:	str	r3, [sp, #12]
   10d40:	mov	r1, fp
   10d44:	mov	r0, r6
   10d48:	bl	10c08 <pci_fill_info@plt>
   10d4c:	mov	r1, sl
   10d50:	mov	r0, r6
   10d54:	bl	10aac <pci_read_word@plt>
   10d58:	mov	r1, r9
   10d5c:	mov	r8, r0
   10d60:	mov	r0, r6
   10d64:	bl	10bb4 <pci_read_byte@plt>
   10d68:	mov	r1, #46	; 0x2e
   10d6c:	orr	r8, r0, r8, lsl #8
   10d70:	mov	r0, r6
   10d74:	bl	10aac <pci_read_word@plt>
   10d78:	mov	r1, #44	; 0x2c
   10d7c:	mov	r5, r0
   10d80:	mov	r0, r6
   10d84:	bl	10aac <pci_read_word@plt>
   10d88:	ldr	r4, [r7]
   10d8c:	cmp	r4, #0
   10d90:	mov	r1, r0
   10d94:	beq	10de4 <abort@plt+0x1a0>
   10d98:	ldr	r3, [r4, #16]
   10d9c:	ldr	r2, [r4, #20]
   10da0:	eor	r3, r3, r8
   10da4:	tst	r3, r2
   10da8:	bne	10dd8 <abort@plt+0x194>
   10dac:	ldr	r3, [r7, #4]
   10db0:	ldr	r2, [r7, #8]
   10db4:	eor	r3, r3, r8
   10db8:	tst	r3, r2
   10dbc:	bne	10dd8 <abort@plt+0x194>
   10dc0:	ldr	r3, [r4, #8]
   10dc4:	cmn	r3, #1
   10dc8:	beq	10e18 <abort@plt+0x1d4>
   10dcc:	ldrh	r2, [r6, #18]
   10dd0:	cmp	r3, r2
   10dd4:	beq	10e18 <abort@plt+0x1d4>
   10dd8:	ldr	r4, [r4, #28]
   10ddc:	cmp	r4, #0
   10de0:	bne	10d98 <abort@plt+0x154>
   10de4:	ldr	r6, [r6]
   10de8:	cmp	r6, #0
   10dec:	bne	10d40 <abort@plt+0xfc>
   10df0:	ldr	r0, [sp, #16]
   10df4:	bl	10c2c <pci_cleanup@plt>
   10df8:	ldr	r3, [pc, #124]	; 10e7c <abort@plt+0x238>
   10dfc:	ldr	r2, [sp, #28]
   10e00:	mov	r0, #0
   10e04:	ldr	r3, [r3]
   10e08:	cmp	r2, r3
   10e0c:	bne	10e78 <abort@plt+0x234>
   10e10:	add	sp, sp, #36	; 0x24
   10e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e18:	ldr	r3, [r4]
   10e1c:	cmn	r3, #1
   10e20:	beq	10e30 <abort@plt+0x1ec>
   10e24:	ldrh	r2, [r6, #16]
   10e28:	cmp	r3, r2
   10e2c:	bne	10dd8 <abort@plt+0x194>
   10e30:	ldr	r3, [r4, #12]
   10e34:	cmn	r3, #1
   10e38:	cmpne	r5, r3
   10e3c:	bne	10dd8 <abort@plt+0x194>
   10e40:	ldr	r3, [r4, #4]
   10e44:	cmn	r3, #1
   10e48:	cmpne	r1, r3
   10e4c:	bne	10dd8 <abort@plt+0x194>
   10e50:	ldr	r0, [r4, #24]
   10e54:	ldr	r3, [sp, #12]
   10e58:	cmp	r0, r3
   10e5c:	beq	10dd8 <abort@plt+0x194>
   10e60:	str	r1, [sp, #20]
   10e64:	bl	10b30 <puts@plt>
   10e68:	ldr	r3, [r4, #24]
   10e6c:	ldr	r1, [sp, #20]
   10e70:	str	r3, [sp, #12]
   10e74:	b	10dd8 <abort@plt+0x194>
   10e78:	bl	10af4 <__stack_chk_fail@plt>
   10e7c:	strdeq	r2, [r2], -r0
   10e80:	strheq	r2, [r2], -r0
   10e84:	andeq	r1, r1, r4, lsl r6
   10e88:	andeq	r2, r2, r0, lsl #2
   10e8c:	andeq	r2, r2, r8, lsl #2
   10e90:	muleq	r1, ip, r5
   10e94:	muleq	r1, r8, r5
   10e98:	mov	fp, #0
   10e9c:	mov	lr, #0
   10ea0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea4:	mov	r2, sp
   10ea8:	push	{r2}		; (str r2, [sp, #-4]!)
   10eac:	push	{r0}		; (str r0, [sp, #-4]!)
   10eb0:	ldr	ip, [pc, #16]	; 10ec8 <abort@plt+0x284>
   10eb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb8:	ldr	r0, [pc, #12]	; 10ecc <abort@plt+0x288>
   10ebc:	ldr	r3, [pc, #12]	; 10ed0 <abort@plt+0x28c>
   10ec0:	bl	10b54 <__libc_start_main@plt>
   10ec4:	bl	10c44 <abort@plt>
   10ec8:	strdeq	r1, [r1], -r8
   10ecc:	andeq	r0, r1, r0, asr ip
   10ed0:	muleq	r1, r8, r4
   10ed4:	ldr	r3, [pc, #20]	; 10ef0 <abort@plt+0x2ac>
   10ed8:	ldr	r2, [pc, #20]	; 10ef4 <abort@plt+0x2b0>
   10edc:	add	r3, pc, r3
   10ee0:	ldr	r2, [r3, r2]
   10ee4:	cmp	r2, #0
   10ee8:	bxeq	lr
   10eec:	b	10b6c <__gmon_start__@plt>
   10ef0:	andeq	r1, r1, ip, lsl r1
   10ef4:	andeq	r0, r0, r4, lsr #1
   10ef8:	ldr	r3, [pc, #28]	; 10f1c <abort@plt+0x2d8>
   10efc:	ldr	r0, [pc, #28]	; 10f20 <abort@plt+0x2dc>
   10f00:	sub	r3, r3, r0
   10f04:	cmp	r3, #6
   10f08:	bxls	lr
   10f0c:	ldr	r3, [pc, #16]	; 10f24 <abort@plt+0x2e0>
   10f10:	cmp	r3, #0
   10f14:	bxeq	lr
   10f18:	bx	r3
   10f1c:	strdeq	r2, [r2], -r3
   10f20:	strdeq	r2, [r2], -r0
   10f24:	andeq	r0, r0, r0
   10f28:	ldr	r1, [pc, #36]	; 10f54 <abort@plt+0x310>
   10f2c:	ldr	r0, [pc, #36]	; 10f58 <abort@plt+0x314>
   10f30:	sub	r1, r1, r0
   10f34:	asr	r1, r1, #2
   10f38:	add	r1, r1, r1, lsr #31
   10f3c:	asrs	r1, r1, #1
   10f40:	bxeq	lr
   10f44:	ldr	r3, [pc, #16]	; 10f5c <abort@plt+0x318>
   10f48:	cmp	r3, #0
   10f4c:	bxeq	lr
   10f50:	bx	r3
   10f54:	strdeq	r2, [r2], -r0
   10f58:	strdeq	r2, [r2], -r0
   10f5c:	andeq	r0, r0, r0
   10f60:	push	{r4, lr}
   10f64:	ldr	r4, [pc, #24]	; 10f84 <abort@plt+0x340>
   10f68:	ldrb	r3, [r4]
   10f6c:	cmp	r3, #0
   10f70:	popne	{r4, pc}
   10f74:	bl	10ef8 <abort@plt+0x2b4>
   10f78:	mov	r3, #1
   10f7c:	strb	r3, [r4]
   10f80:	pop	{r4, pc}
   10f84:	andeq	r2, r2, r4, lsl #2
   10f88:	ldr	r0, [pc, #40]	; 10fb8 <abort@plt+0x374>
   10f8c:	ldr	r3, [r0]
   10f90:	cmp	r3, #0
   10f94:	bne	10f9c <abort@plt+0x358>
   10f98:	b	10f28 <abort@plt+0x2e4>
   10f9c:	ldr	r3, [pc, #24]	; 10fbc <abort@plt+0x378>
   10fa0:	cmp	r3, #0
   10fa4:	beq	10f98 <abort@plt+0x354>
   10fa8:	push	{r4, lr}
   10fac:	blx	r3
   10fb0:	pop	{r4, lr}
   10fb4:	b	10f28 <abort@plt+0x2e4>
   10fb8:	andeq	r1, r2, r4, lsl #30
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fc4:	sub	sp, sp, #20480	; 0x5000
   10fc8:	ldr	r3, [pc, #476]	; 111ac <abort@plt+0x568>
   10fcc:	sub	sp, sp, #52	; 0x34
   10fd0:	add	r2, sp, #20480	; 0x5000
   10fd4:	ldr	r3, [r3]
   10fd8:	add	r2, r2, #44	; 0x2c
   10fdc:	add	r0, sp, #36	; 0x24
   10fe0:	str	r3, [r2]
   10fe4:	bl	10ae8 <uname@plt>
   10fe8:	cmp	r0, #0
   10fec:	blt	11188 <abort@plt+0x544>
   10ff0:	ldr	r2, [pc, #440]	; 111b0 <abort@plt+0x56c>
   10ff4:	add	r3, sp, #428	; 0x1ac
   10ff8:	str	r3, [sp, #28]
   10ffc:	ldr	r1, [pc, #432]	; 111b4 <abort@plt+0x570>
   11000:	add	r3, sp, #166	; 0xa6
   11004:	str	r1, [sp, #8]
   11008:	stm	sp, {r2, r3}
   1100c:	mov	r1, #1
   11010:	ldr	r3, [pc, #416]	; 111b8 <abort@plt+0x574>
   11014:	mov	r2, #4096	; 0x1000
   11018:	ldr	r0, [sp, #28]
   1101c:	bl	10bc0 <__sprintf_chk@plt>
   11020:	ldr	r0, [sp, #28]
   11024:	ldr	r1, [pc, #400]	; 111bc <abort@plt+0x578>
   11028:	bl	10ab8 <fopen@plt>
   1102c:	subs	r6, r0, #0
   11030:	beq	1119c <abort@plt+0x558>
   11034:	add	r3, sp, #12480	; 0x30c0
   11038:	add	r3, r3, #48	; 0x30
   1103c:	ldr	r8, [pc, #380]	; 111c0 <abort@plt+0x57c>
   11040:	ldr	r9, [pc, #380]	; 111c4 <abort@plt+0x580>
   11044:	ldr	sl, [pc, #380]	; 111c8 <abort@plt+0x584>
   11048:	ldr	fp, [pc, #380]	; 111cc <abort@plt+0x588>
   1104c:	sub	r7, r3, #4
   11050:	add	r5, sp, #8192	; 0x2000
   11054:	mov	r4, #8000	; 0x1f40
   11058:	add	r5, r5, #48	; 0x30
   1105c:	add	r0, sp, #4480	; 0x1180
   11060:	mov	r2, r6
   11064:	mov	r1, r4
   11068:	add	r0, r0, #44	; 0x2c
   1106c:	bl	10ad0 <fgets@plt>
   11070:	cmp	r0, #0
   11074:	beq	11138 <abort@plt+0x4f4>
   11078:	ldrb	r3, [r5, #-3716]	; 0xfffff17c
   1107c:	cmp	r3, #35	; 0x23
   11080:	beq	1105c <abort@plt+0x418>
   11084:	mov	r0, #32
   11088:	bl	1124c <abort@plt+0x608>
   1108c:	mov	r4, r0
   11090:	add	r2, r0, #20
   11094:	add	ip, r0, #16
   11098:	add	r0, r0, #12
   1109c:	add	r1, r4, #4
   110a0:	add	r3, r4, #8
   110a4:	str	r2, [sp, #16]
   110a8:	str	r0, [sp, #8]
   110ac:	add	r2, sp, #32
   110b0:	add	r0, sp, #4480	; 0x1180
   110b4:	str	r1, [sp, #4]
   110b8:	str	r3, [sp]
   110bc:	str	r2, [sp, #20]
   110c0:	str	ip, [sp, #12]
   110c4:	mov	r3, r4
   110c8:	mov	r2, r7
   110cc:	mov	r1, r9
   110d0:	add	r0, r0, #44	; 0x2c
   110d4:	bl	10bcc <__isoc99_sscanf@plt>
   110d8:	cmp	r0, #8
   110dc:	beq	11110 <abort@plt+0x4cc>
   110e0:	add	r3, sp, #4480	; 0x1180
   110e4:	add	r3, r3, #44	; 0x2c
   110e8:	ldr	r2, [pc, #224]	; 111d0 <abort@plt+0x58c>
   110ec:	mov	r1, #1
   110f0:	ldr	r0, [fp]
   110f4:	bl	10be4 <__fprintf_chk@plt>
   110f8:	add	r5, sp, #8192	; 0x2000
   110fc:	mov	r0, r4
   11100:	bl	10ac4 <free@plt>
   11104:	mov	r4, #8000	; 0x1f40
   11108:	add	r5, r5, #48	; 0x30
   1110c:	b	1105c <abort@plt+0x418>
   11110:	mov	r1, r8
   11114:	mov	r0, r7
   11118:	bl	10a94 <strcmp@plt>
   1111c:	cmp	r0, #0
   11120:	bne	11168 <abort@plt+0x524>
   11124:	ldr	r3, [sl]
   11128:	str	r8, [r4, #24]
   1112c:	str	r3, [r4, #28]
   11130:	str	r4, [sl]
   11134:	b	11050 <abort@plt+0x40c>
   11138:	mov	r0, r6
   1113c:	bl	10bfc <fclose@plt>
   11140:	add	r3, sp, #20480	; 0x5000
   11144:	add	r3, r3, #44	; 0x2c
   11148:	ldr	r2, [r3]
   1114c:	ldr	r3, [pc, #88]	; 111ac <abort@plt+0x568>
   11150:	ldr	r3, [r3]
   11154:	cmp	r2, r3
   11158:	bne	11198 <abort@plt+0x554>
   1115c:	add	sp, sp, #20480	; 0x5000
   11160:	add	sp, sp, #52	; 0x34
   11164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11168:	mov	r0, r7
   1116c:	bl	10b9c <strlen@plt>
   11170:	add	r0, r0, #1
   11174:	bl	1124c <abort@plt+0x608>
   11178:	mov	r1, r7
   1117c:	mov	r8, r0
   11180:	bl	10b18 <strcpy@plt>
   11184:	b	11124 <abort@plt+0x4e0>
   11188:	ldr	r0, [pc, #68]	; 111d4 <abort@plt+0x590>
   1118c:	bl	10b0c <perror@plt>
   11190:	mov	r0, #1
   11194:	bl	10b90 <exit@plt>
   11198:	bl	10af4 <__stack_chk_fail@plt>
   1119c:	ldr	r0, [sp, #28]
   111a0:	bl	10b0c <perror@plt>
   111a4:	mov	r0, #1
   111a8:	bl	10b90 <exit@plt>
   111ac:	strdeq	r2, [r2], -r0
   111b0:	andeq	r1, r1, r8, lsr r5
   111b4:	andeq	r1, r1, r8, lsr #10
   111b8:	andeq	r1, r1, ip, lsl r5
   111bc:	andeq	r1, r1, r8, asr #10
   111c0:	muleq	r1, r8, r5
   111c4:	andeq	r1, r1, ip, asr #10
   111c8:	andeq	r2, r2, r8, lsl #2
   111cc:	strdeq	r2, [r2], -r8
   111d0:	andeq	r1, r1, r4, ror r5
   111d4:	andeq	r1, r1, r4, lsl r5
   111d8:	push	{r0, r1, r2, r3}
   111dc:	mov	r1, #1
   111e0:	ldr	r3, [pc, #84]	; 1123c <abort@plt+0x5f8>
   111e4:	push	{lr}		; (str lr, [sp, #-4]!)
   111e8:	sub	sp, sp, #12
   111ec:	ldr	r4, [pc, #76]	; 11240 <abort@plt+0x5fc>
   111f0:	ldr	lr, [r3]
   111f4:	ldr	r5, [sp, #16]
   111f8:	add	ip, sp, #20
   111fc:	ldr	r3, [pc, #64]	; 11244 <abort@plt+0x600>
   11200:	ldr	r2, [pc, #64]	; 11248 <abort@plt+0x604>
   11204:	ldr	r0, [r4]
   11208:	str	lr, [sp, #4]
   1120c:	str	ip, [sp]
   11210:	bl	10be4 <__fprintf_chk@plt>
   11214:	mov	r2, r5
   11218:	ldr	r3, [sp]
   1121c:	mov	r1, #1
   11220:	ldr	r0, [r4]
   11224:	bl	10b60 <__vfprintf_chk@plt>
   11228:	ldr	r1, [r4]
   1122c:	mov	r0, #10
   11230:	bl	10c20 <fputc@plt>
   11234:	mov	r0, #1
   11238:	bl	10b90 <exit@plt>
   1123c:	strdeq	r2, [r2], -r0
   11240:	strdeq	r2, [r2], -r8
   11244:	andeq	r1, r1, r8, lsl #10
   11248:	andeq	r1, r1, r4, lsr r6
   1124c:	push	{r4, lr}
   11250:	mov	r4, r0
   11254:	bl	10b3c <malloc@plt>
   11258:	cmp	r0, #0
   1125c:	popne	{r4, pc}
   11260:	mov	r1, r4
   11264:	ldr	r0, [pc]	; 1126c <abort@plt+0x628>
   11268:	bl	111d8 <abort@plt+0x594>
   1126c:	andeq	r1, r1, ip, lsr r6
   11270:	push	{r4, lr}
   11274:	mov	r4, r1
   11278:	bl	10b00 <realloc@plt>
   1127c:	cmp	r0, #0
   11280:	popne	{r4, pc}
   11284:	mov	r1, r4
   11288:	ldr	r0, [pc]	; 11290 <abort@plt+0x64c>
   1128c:	bl	111d8 <abort@plt+0x594>
   11290:	andeq	r1, r1, ip, lsr r6
   11294:	push	{r4, r5, r6, lr}
   11298:	mov	r5, r0
   1129c:	bl	10b9c <strlen@plt>
   112a0:	add	r4, r0, #1
   112a4:	mov	r0, r4
   112a8:	bl	1124c <abort@plt+0x608>
   112ac:	mov	r2, r4
   112b0:	mov	r1, r5
   112b4:	bl	10adc <memcpy@plt>
   112b8:	pop	{r4, r5, r6, pc}
   112bc:	sub	r0, r0, #65	; 0x41
   112c0:	push	{r4, r5, r6, r7, lr}
   112c4:	mov	r5, r1
   112c8:	sub	sp, sp, #12
   112cc:	mov	r4, r2
   112d0:	cmp	r0, #14
   112d4:	ldrls	pc, [pc, r0, lsl #2]
   112d8:	b	113dc <abort@plt+0x798>
   112dc:	andeq	r1, r1, r4, lsr #7
   112e0:	ldrdeq	r1, [r1], -ip
   112e4:	ldrdeq	r1, [r1], -ip
   112e8:	ldrdeq	r1, [r1], -ip
   112ec:	ldrdeq	r1, [r1], -ip
   112f0:	andeq	r1, r1, r4, lsl #7
   112f4:	andeq	r1, r1, ip, ror #6
   112f8:	ldrdeq	r1, [r1], -ip
   112fc:	ldrdeq	r1, [r1], -ip
   11300:	ldrdeq	r1, [r1], -ip
   11304:	ldrdeq	r1, [r1], -ip
   11308:	ldrdeq	r1, [r1], -ip
   1130c:	ldrdeq	r1, [r1], -ip
   11310:	ldrdeq	r1, [r1], -ip
   11314:	andeq	r1, r1, r8, lsl r3
   11318:	ldr	r1, [pc, #344]	; 11478 <abort@plt+0x834>
   1131c:	mov	r0, r2
   11320:	bl	10a94 <strcmp@plt>
   11324:	subs	r3, r0, #0
   11328:	beq	113e8 <abort@plt+0x7a4>
   1132c:	mov	r1, #61	; 0x3d
   11330:	mov	r0, r4
   11334:	bl	10ba8 <strchr@plt>
   11338:	subs	r2, r0, #0
   1133c:	beq	1146c <abort@plt+0x828>
   11340:	mov	r3, #0
   11344:	mov	r0, r5
   11348:	strb	r3, [r2], #1
   1134c:	mov	r1, r4
   11350:	bl	10a88 <pci_set_param@plt>
   11354:	cmp	r0, #0
   11358:	movge	r0, #1
   1135c:	bge	1137c <abort@plt+0x738>
   11360:	mov	r1, r4
   11364:	ldr	r0, [pc, #272]	; 1147c <abort@plt+0x838>
   11368:	bl	111d8 <abort@plt+0x594>
   1136c:	ldr	r3, [r1, #28]
   11370:	mov	r0, #1
   11374:	add	r3, r3, r0
   11378:	str	r3, [r1, #28]
   1137c:	add	sp, sp, #12
   11380:	pop	{r4, r5, r6, r7, pc}
   11384:	ldr	r1, [pc, #244]	; 11480 <abort@plt+0x83c>
   11388:	mov	r0, r5
   1138c:	bl	10a88 <pci_set_param@plt>
   11390:	mov	r3, #9
   11394:	mov	r0, #1
   11398:	str	r3, [r5]
   1139c:	add	sp, sp, #12
   113a0:	pop	{r4, r5, r6, r7, pc}
   113a4:	ldr	r1, [pc, #204]	; 11478 <abort@plt+0x834>
   113a8:	mov	r0, r2
   113ac:	bl	10a94 <strcmp@plt>
   113b0:	subs	r6, r0, #0
   113b4:	beq	11438 <abort@plt+0x7f4>
   113b8:	mov	r0, r4
   113bc:	bl	10b24 <pci_lookup_method@plt>
   113c0:	cmp	r0, #0
   113c4:	strge	r0, [r5]
   113c8:	movge	r0, #1
   113cc:	bge	1137c <abort@plt+0x738>
   113d0:	mov	r1, r4
   113d4:	ldr	r0, [pc, #168]	; 11484 <abort@plt+0x840>
   113d8:	bl	111d8 <abort@plt+0x594>
   113dc:	mov	r0, #0
   113e0:	add	sp, sp, #12
   113e4:	pop	{r4, r5, r6, r7, pc}
   113e8:	ldr	r0, [pc, #152]	; 11488 <abort@plt+0x844>
   113ec:	mov	r4, r3
   113f0:	ldr	r7, [pc, #148]	; 1148c <abort@plt+0x848>
   113f4:	bl	10b30 <puts@plt>
   113f8:	mov	r6, #1
   113fc:	b	1141c <abort@plt+0x7d8>
   11400:	ldr	r3, [r4, #8]
   11404:	mov	r1, r7
   11408:	str	r3, [sp]
   1140c:	mov	r0, r6
   11410:	ldr	r3, [r4, #16]
   11414:	ldr	r2, [r4, #4]
   11418:	bl	10bd8 <__printf_chk@plt>
   1141c:	mov	r1, r4
   11420:	mov	r0, r5
   11424:	bl	10c14 <pci_walk_params@plt>
   11428:	subs	r4, r0, #0
   1142c:	bne	11400 <abort@plt+0x7bc>
   11430:	mov	r0, #0
   11434:	bl	10b90 <exit@plt>
   11438:	ldr	r0, [pc, #80]	; 11490 <abort@plt+0x84c>
   1143c:	bl	10b30 <puts@plt>
   11440:	b	11448 <abort@plt+0x804>
   11444:	add	r6, r6, #1
   11448:	mov	r0, r6
   1144c:	bl	10b48 <pci_get_method_name@plt>
   11450:	subs	r3, r0, #0
   11454:	beq	11430 <abort@plt+0x7ec>
   11458:	ldrb	r3, [r3]
   1145c:	cmp	r3, #0
   11460:	beq	11444 <abort@plt+0x800>
   11464:	bl	10b30 <puts@plt>
   11468:	b	11444 <abort@plt+0x800>
   1146c:	mov	r1, r4
   11470:	ldr	r0, [pc, #28]	; 11494 <abort@plt+0x850>
   11474:	bl	111d8 <abort@plt+0x594>
   11478:	andeq	r1, r1, ip, lsr #12
   1147c:	andeq	r1, r1, r0, lsr #14
   11480:	andeq	r1, r1, r4, ror #12
   11484:	andeq	r1, r1, ip, lsl #13
   11488:	andeq	r1, r1, r8, asr #13
   1148c:	andeq	r1, r1, r8, ror #13
   11490:	andeq	r1, r1, r0, ror r6
   11494:	strdeq	r1, [r1], -r8
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1149c:	mov	r7, r0
   114a0:	ldr	r6, [pc, #72]	; 114f0 <abort@plt+0x8ac>
   114a4:	ldr	r5, [pc, #72]	; 114f4 <abort@plt+0x8b0>
   114a8:	add	r6, pc, r6
   114ac:	add	r5, pc, r5
   114b0:	sub	r6, r6, r5
   114b4:	mov	r8, r1
   114b8:	mov	r9, r2
   114bc:	bl	10a68 <pci_set_param@plt-0x20>
   114c0:	asrs	r6, r6, #2
   114c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114c8:	mov	r4, #0
   114cc:	add	r4, r4, #1
   114d0:	ldr	r3, [r5], #4
   114d4:	mov	r2, r9
   114d8:	mov	r1, r8
   114dc:	mov	r0, r7
   114e0:	blx	r3
   114e4:	cmp	r6, r4
   114e8:	bne	114cc <abort@plt+0x888>
   114ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   114f0:	andeq	r0, r1, r0, asr sl
   114f4:	andeq	r0, r1, r8, asr #20
   114f8:	bx	lr

Disassembly of section .fini:

000114fc <.fini>:
   114fc:	push	{r3, lr}
   11500:	pop	{r3, pc}
