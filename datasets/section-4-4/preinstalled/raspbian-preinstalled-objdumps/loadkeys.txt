
raspbian-preinstalled/loadkeys:     file format elf32-littlearm


Disassembly of section .init:

00010df8 <.init>:
   10df8:	push	{r3, lr}
   10dfc:	bl	11830 <pclose@plt+0x73c>
   10e00:	pop	{r3, pc}

Disassembly of section .plt:

00010e04 <calloc@plt-0x14>:
   10e04:	push	{lr}		; (str lr, [sp, #-4]!)
   10e08:	ldr	lr, [pc, #4]	; 10e14 <calloc@plt-0x4>
   10e0c:	add	lr, pc, lr
   10e10:	ldr	pc, [lr, #8]!
   10e14:	andeq	sl, r2, ip, ror #3

00010e18 <calloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #172032	; 0x2a000
   10e20:	ldr	pc, [ip, #492]!	; 0x1ec

00010e24 <strcmp@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #172032	; 0x2a000
   10e2c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e30 <strtol@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #172032	; 0x2a000
   10e38:	ldr	pc, [ip, #476]!	; 0x1dc

00010e3c <fopen@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #172032	; 0x2a000
   10e44:	ldr	pc, [ip, #468]!	; 0x1d4

00010e48 <free@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #172032	; 0x2a000
   10e50:	ldr	pc, [ip, #460]!	; 0x1cc

00010e54 <ferror@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #172032	; 0x2a000
   10e5c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e60 <strndup@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #172032	; 0x2a000
   10e68:	ldr	pc, [ip, #444]!	; 0x1bc

00010e6c <memcpy@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #172032	; 0x2a000
   10e74:	ldr	pc, [ip, #436]!	; 0x1b4

00010e78 <_IO_getc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #172032	; 0x2a000
   10e80:	ldr	pc, [ip, #428]!	; 0x1ac

00010e84 <dcgettext@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #172032	; 0x2a000
   10e8c:	ldr	pc, [ip, #420]!	; 0x1a4

00010e90 <strdup@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #172032	; 0x2a000
   10e98:	ldr	pc, [ip, #412]!	; 0x19c

00010e9c <__stack_chk_fail@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #172032	; 0x2a000
   10ea4:	ldr	pc, [ip, #404]!	; 0x194

00010ea8 <realloc@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #172032	; 0x2a000
   10eb0:	ldr	pc, [ip, #396]!	; 0x18c

00010eb4 <textdomain@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #172032	; 0x2a000
   10ebc:	ldr	pc, [ip, #388]!	; 0x184

00010ec0 <strcasecmp@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #172032	; 0x2a000
   10ec8:	ldr	pc, [ip, #380]!	; 0x17c

00010ecc <perror@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #172032	; 0x2a000
   10ed4:	ldr	pc, [ip, #372]!	; 0x174

00010ed8 <__xstat@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #172032	; 0x2a000
   10ee0:	ldr	pc, [ip, #364]!	; 0x16c

00010ee4 <readlink@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #172032	; 0x2a000
   10eec:	ldr	pc, [ip, #356]!	; 0x164

00010ef0 <__memcpy_chk@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #172032	; 0x2a000
   10ef8:	ldr	pc, [ip, #348]!	; 0x15c

00010efc <fwrite@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #172032	; 0x2a000
   10f04:	ldr	pc, [ip, #340]!	; 0x154

00010f08 <ioctl@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #172032	; 0x2a000
   10f10:	ldr	pc, [ip, #332]!	; 0x14c

00010f14 <strcpy@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #172032	; 0x2a000
   10f1c:	ldr	pc, [ip, #324]!	; 0x144

00010f20 <__strcpy_chk@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #172032	; 0x2a000
   10f28:	ldr	pc, [ip, #316]!	; 0x13c

00010f2c <fread@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #172032	; 0x2a000
   10f34:	ldr	pc, [ip, #308]!	; 0x134

00010f38 <opendir@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #172032	; 0x2a000
   10f40:	ldr	pc, [ip, #300]!	; 0x12c

00010f44 <getenv@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #172032	; 0x2a000
   10f4c:	ldr	pc, [ip, #292]!	; 0x124

00010f50 <malloc@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #172032	; 0x2a000
   10f58:	ldr	pc, [ip, #284]!	; 0x11c

00010f5c <__libc_start_main@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #172032	; 0x2a000
   10f64:	ldr	pc, [ip, #276]!	; 0x114

00010f68 <strerror@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #172032	; 0x2a000
   10f70:	ldr	pc, [ip, #268]!	; 0x10c

00010f74 <__vfprintf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #172032	; 0x2a000
   10f7c:	ldr	pc, [ip, #260]!	; 0x104

00010f80 <seekdir@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #172032	; 0x2a000
   10f88:	ldr	pc, [ip, #252]!	; 0xfc

00010f8c <__gmon_start__@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #172032	; 0x2a000
   10f94:	ldr	pc, [ip, #244]!	; 0xf4

00010f98 <open@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #172032	; 0x2a000
   10fa0:	ldr	pc, [ip, #236]!	; 0xec

00010fa4 <getopt_long@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #172032	; 0x2a000
   10fac:	ldr	pc, [ip, #228]!	; 0xe4

00010fb0 <__ctype_b_loc@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #172032	; 0x2a000
   10fb8:	ldr	pc, [ip, #220]!	; 0xdc

00010fbc <exit@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #172032	; 0x2a000
   10fc4:	ldr	pc, [ip, #212]!	; 0xd4

00010fc8 <strlen@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #172032	; 0x2a000
   10fd0:	ldr	pc, [ip, #204]!	; 0xcc

00010fd4 <strchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #172032	; 0x2a000
   10fdc:	ldr	pc, [ip, #196]!	; 0xc4

00010fe0 <__errno_location@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #172032	; 0x2a000
   10fe8:	ldr	pc, [ip, #188]!	; 0xbc

00010fec <__strcat_chk@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #172032	; 0x2a000
   10ff4:	ldr	pc, [ip, #180]!	; 0xb4

00010ff8 <__sprintf_chk@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #172032	; 0x2a000
   11000:	ldr	pc, [ip, #172]!	; 0xac

00011004 <memset@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #172032	; 0x2a000
   1100c:	ldr	pc, [ip, #164]!	; 0xa4

00011010 <strncpy@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #172032	; 0x2a000
   11018:	ldr	pc, [ip, #156]!	; 0x9c

0001101c <__printf_chk@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #172032	; 0x2a000
   11024:	ldr	pc, [ip, #148]!	; 0x94

00011028 <__fprintf_chk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #172032	; 0x2a000
   11030:	ldr	pc, [ip, #140]!	; 0x8c

00011034 <access@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #172032	; 0x2a000
   1103c:	ldr	pc, [ip, #132]!	; 0x84

00011040 <fclose@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #172032	; 0x2a000
   11048:	ldr	pc, [ip, #124]!	; 0x7c

0001104c <setlocale@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #172032	; 0x2a000
   11054:	ldr	pc, [ip, #116]!	; 0x74

00011058 <popen@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #172032	; 0x2a000
   11060:	ldr	pc, [ip, #108]!	; 0x6c

00011064 <readdir@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #172032	; 0x2a000
   1106c:	ldr	pc, [ip, #100]!	; 0x64

00011070 <strrchr@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #172032	; 0x2a000
   11078:	ldr	pc, [ip, #92]!	; 0x5c

0001107c <fputc@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #172032	; 0x2a000
   11084:	ldr	pc, [ip, #84]!	; 0x54

00011088 <clearerr@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #172032	; 0x2a000
   11090:	ldr	pc, [ip, #76]!	; 0x4c

00011094 <bindtextdomain@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #172032	; 0x2a000
   1109c:	ldr	pc, [ip, #68]!	; 0x44

000110a0 <isatty@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #172032	; 0x2a000
   110a8:	ldr	pc, [ip, #60]!	; 0x3c

000110ac <fputs@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #172032	; 0x2a000
   110b4:	ldr	pc, [ip, #52]!	; 0x34

000110b8 <strncmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #172032	; 0x2a000
   110c0:	ldr	pc, [ip, #44]!	; 0x2c

000110c4 <abort@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #172032	; 0x2a000
   110cc:	ldr	pc, [ip, #36]!	; 0x24

000110d0 <close@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #172032	; 0x2a000
   110d8:	ldr	pc, [ip, #28]!

000110dc <dcngettext@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #172032	; 0x2a000
   110e4:	ldr	pc, [ip, #20]!

000110e8 <closedir@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #172032	; 0x2a000
   110f0:	ldr	pc, [ip, #12]!

000110f4 <pclose@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #172032	; 0x2a000
   110fc:	ldr	pc, [ip, #4]!

Disassembly of section .text:

00011100 <.text>:
   11100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11104:	sub	sp, sp, #4352	; 0x1100
   11108:	ldr	r3, [pc, #1640]	; 11778 <pclose@plt+0x684>
   1110c:	sub	sp, sp, #28
   11110:	add	ip, sp, #4352	; 0x1100
   11114:	add	ip, ip, #20
   11118:	add	sl, sp, #280	; 0x118
   1111c:	ldr	r3, [r3]
   11120:	mov	r2, #224	; 0xe0
   11124:	mov	r4, r1
   11128:	mov	r5, r0
   1112c:	ldr	r1, [pc, #1608]	; 1177c <pclose@plt+0x688>
   11130:	sub	r0, sl, #236	; 0xec
   11134:	str	r3, [ip]
   11138:	bl	10e6c <memcpy@plt>
   1113c:	mov	r3, #0
   11140:	ldr	r1, [pc, #1592]	; 11780 <pclose@plt+0x68c>
   11144:	mov	r0, #6
   11148:	str	r3, [sl, #-244]	; 0xffffff0c
   1114c:	str	r3, [sl, #-240]	; 0xffffff10
   11150:	bl	1104c <setlocale@plt>
   11154:	ldr	r1, [pc, #1576]	; 11784 <pclose@plt+0x690>
   11158:	ldr	r0, [pc, #1576]	; 11788 <pclose@plt+0x694>
   1115c:	bl	11094 <bindtextdomain@plt>
   11160:	ldr	r0, [pc, #1568]	; 11788 <pclose@plt+0x694>
   11164:	bl	10eb4 <textdomain@plt>
   11168:	ldr	r6, [r4]
   1116c:	mov	r1, #47	; 0x2f
   11170:	mov	r0, r6
   11174:	bl	11070 <strrchr@plt>
   11178:	cmp	r0, #0
   1117c:	beq	11188 <pclose@plt+0x94>
   11180:	cmn	r0, #1
   11184:	addne	r6, r0, #1
   11188:	ldr	fp, [pc, #1532]	; 1178c <pclose@plt+0x698>
   1118c:	str	r6, [fp]
   11190:	bl	12cdc <pclose@plt+0x1be8>
   11194:	subs	r3, r0, #0
   11198:	str	r3, [sp, #12]
   1119c:	beq	11330 <pclose@plt+0x23c>
   111a0:	mov	r9, #0
   111a4:	ldr	r7, [pc, #1508]	; 11790 <pclose@plt+0x69c>
   111a8:	mov	r8, r9
   111ac:	mov	r6, r9
   111b0:	str	r9, [sp, #8]
   111b4:	str	r6, [sp]
   111b8:	add	r3, sp, #44	; 0x2c
   111bc:	mov	r2, r7
   111c0:	mov	r1, r4
   111c4:	mov	r0, r5
   111c8:	bl	10fa4 <getopt_long@plt>
   111cc:	cmn	r0, #1
   111d0:	beq	112c4 <pclose@plt+0x1d0>
   111d4:	sub	r0, r0, #63	; 0x3f
   111d8:	cmp	r0, #55	; 0x37
   111dc:	ldrls	pc, [pc, r0, lsl #2]
   111e0:	b	111b4 <pclose@plt+0xc0>
   111e4:	strdeq	r1, [r1], -ip
   111e8:			; <UNDEFINED> instruction: 0x000111b4
   111ec:			; <UNDEFINED> instruction: 0x000111b4
   111f0:			; <UNDEFINED> instruction: 0x000111b4
   111f4:	strdeq	r1, [r1], -r0
   111f8:			; <UNDEFINED> instruction: 0x000111b4
   111fc:			; <UNDEFINED> instruction: 0x000111b4
   11200:			; <UNDEFINED> instruction: 0x000111b4
   11204:			; <UNDEFINED> instruction: 0x000111b4
   11208:			; <UNDEFINED> instruction: 0x000111b4
   1120c:			; <UNDEFINED> instruction: 0x000111b4
   11210:			; <UNDEFINED> instruction: 0x000111b4
   11214:			; <UNDEFINED> instruction: 0x000111b4
   11218:			; <UNDEFINED> instruction: 0x000111b4
   1121c:			; <UNDEFINED> instruction: 0x000111b4
   11220:			; <UNDEFINED> instruction: 0x000111b4
   11224:			; <UNDEFINED> instruction: 0x000111b4
   11228:			; <UNDEFINED> instruction: 0x000111b4
   1122c:			; <UNDEFINED> instruction: 0x000111b4
   11230:			; <UNDEFINED> instruction: 0x000111b4
   11234:			; <UNDEFINED> instruction: 0x000111b4
   11238:			; <UNDEFINED> instruction: 0x000111b4
   1123c:			; <UNDEFINED> instruction: 0x000111b4
   11240:			; <UNDEFINED> instruction: 0x000113b4
   11244:			; <UNDEFINED> instruction: 0x000111b4
   11248:			; <UNDEFINED> instruction: 0x000111b4
   1124c:			; <UNDEFINED> instruction: 0x000111b4
   11250:			; <UNDEFINED> instruction: 0x000111b4
   11254:			; <UNDEFINED> instruction: 0x000111b4
   11258:			; <UNDEFINED> instruction: 0x000111b4
   1125c:			; <UNDEFINED> instruction: 0x000111b4
   11260:			; <UNDEFINED> instruction: 0x000111b4
   11264:			; <UNDEFINED> instruction: 0x000111b4
   11268:			; <UNDEFINED> instruction: 0x000111b4
   1126c:	andeq	r1, r1, ip, lsr #7
   11270:	andeq	r1, r1, r4, lsr #7
   11274:	muleq	r1, r4, r3
   11278:	andeq	r1, r1, ip, lsl #7
   1127c:			; <UNDEFINED> instruction: 0x000111b4
   11280:			; <UNDEFINED> instruction: 0x000111b4
   11284:			; <UNDEFINED> instruction: 0x000111b4
   11288:	strdeq	r1, [r1], -ip
   1128c:			; <UNDEFINED> instruction: 0x000111b4
   11290:			; <UNDEFINED> instruction: 0x000111b4
   11294:			; <UNDEFINED> instruction: 0x000111b4
   11298:			; <UNDEFINED> instruction: 0x000111b4
   1129c:	andeq	r1, r1, r4, lsl #7
   112a0:			; <UNDEFINED> instruction: 0x000111b4
   112a4:			; <UNDEFINED> instruction: 0x000111b4
   112a8:	andeq	r1, r1, ip, ror r3
   112ac:	andeq	r1, r1, ip, ror #6
   112b0:			; <UNDEFINED> instruction: 0x000111b4
   112b4:	andeq	r1, r1, ip, asr r3
   112b8:			; <UNDEFINED> instruction: 0x000111b4
   112bc:	andeq	r1, r1, r8, asr #6
   112c0:	andeq	r1, r1, r8, lsr r3
   112c4:	and	r3, r8, #34	; 0x22
   112c8:	cmp	r3, #34	; 0x22
   112cc:	beq	11574 <pclose@plt+0x480>
   112d0:	ands	r6, r8, #20
   112d4:	bne	11438 <pclose@plt+0x344>
   112d8:	mov	r0, r9
   112dc:	bl	119a8 <pclose@plt+0x8b4>
   112e0:	subs	r3, r0, #0
   112e4:	str	r3, [sp, #16]
   112e8:	blt	116bc <pclose@plt+0x5c8>
   112ec:	add	r2, sp, #28
   112f0:	ldr	r1, [pc, #1180]	; 11794 <pclose@plt+0x6a0>
   112f4:	ldr	r0, [sp, #16]
   112f8:	bl	10f08 <ioctl@plt>
   112fc:	cmp	r0, #0
   11300:	beq	11584 <pclose@plt+0x490>
   11304:	ldr	r3, [pc, #1164]	; 11798 <pclose@plt+0x6a4>
   11308:	ldr	r1, [pc, #1164]	; 1179c <pclose@plt+0x6a8>
   1130c:	mov	r2, #5
   11310:	mov	r0, #0
   11314:	ldr	r4, [r3]
   11318:	bl	10e84 <dcgettext@plt>
   1131c:	ldr	r3, [fp]
   11320:	mov	r2, r0
   11324:	mov	r1, #1
   11328:	mov	r0, r4
   1132c:	bl	11028 <__fprintf_chk@plt>
   11330:	mov	r0, #1
   11334:	bl	10fbc <exit@plt>
   11338:	mov	r1, #6
   1133c:	ldr	r0, [sp, #12]
   11340:	bl	12b3c <pclose@plt+0x1a48>
   11344:	b	111b4 <pclose@plt+0xc0>
   11348:	ldr	r3, [sp, #8]
   1134c:	orr	r8, r8, #32
   11350:	orr	r3, r3, #18
   11354:	str	r3, [sp, #8]
   11358:	b	111b4 <pclose@plt+0xc0>
   1135c:	ldr	r3, [sp, #8]
   11360:	orr	r3, r3, #8
   11364:	str	r3, [sp, #8]
   11368:	b	111b4 <pclose@plt+0xc0>
   1136c:	mov	r1, #3
   11370:	ldr	r0, [sp, #12]
   11374:	bl	12b3c <pclose@plt+0x1a48>
   11378:	b	111b4 <pclose@plt+0xc0>
   1137c:	orr	r8, r8, #64	; 0x40
   11380:	b	111b4 <pclose@plt+0xc0>
   11384:	orr	r8, r8, #16
   11388:	b	111b4 <pclose@plt+0xc0>
   1138c:	orr	r8, r8, #8
   11390:	b	111b4 <pclose@plt+0xc0>
   11394:	ldr	r3, [sp, #8]
   11398:	orr	r3, r3, #4
   1139c:	str	r3, [sp, #8]
   113a0:	b	111b4 <pclose@plt+0xc0>
   113a4:	orr	r8, r8, #4
   113a8:	b	111b4 <pclose@plt+0xc0>
   113ac:	orr	r8, r8, #2
   113b0:	b	111b4 <pclose@plt+0xc0>
   113b4:	ldr	r3, [pc, #996]	; 117a0 <pclose@plt+0x6ac>
   113b8:	mov	r2, #5
   113bc:	ldr	r1, [pc, #992]	; 117a4 <pclose@plt+0x6b0>
   113c0:	mov	r0, #0
   113c4:	ldr	r4, [r3]
   113c8:	bl	10e84 <dcgettext@plt>
   113cc:	ldr	r2, [pc, #980]	; 117a8 <pclose@plt+0x6b4>
   113d0:	ldr	r3, [fp]
   113d4:	mov	r1, #1
   113d8:	str	r2, [sp]
   113dc:	mov	r2, r0
   113e0:	mov	r0, r4
   113e4:	bl	11028 <__fprintf_chk@plt>
   113e8:	mov	r0, #0
   113ec:	bl	10fbc <exit@plt>
   113f0:	ldr	r3, [pc, #948]	; 117ac <pclose@plt+0x6b8>
   113f4:	ldr	r9, [r3]
   113f8:	b	111b4 <pclose@plt+0xc0>
   113fc:	ldr	r3, [pc, #916]	; 11798 <pclose@plt+0x6a4>
   11400:	mov	r2, #5
   11404:	ldr	r1, [pc, #932]	; 117b0 <pclose@plt+0x6bc>
   11408:	mov	r0, #0
   1140c:	ldr	r4, [r3]
   11410:	bl	10e84 <dcgettext@plt>
   11414:	ldr	r2, [fp]
   11418:	ldr	r3, [pc, #916]	; 117b4 <pclose@plt+0x6c0>
   1141c:	mov	r1, #1
   11420:	strd	r2, [sp]
   11424:	ldr	r3, [pc, #908]	; 117b8 <pclose@plt+0x6c4>
   11428:	mov	r2, r0
   1142c:	mov	r0, r4
   11430:	bl	11028 <__fprintf_chk@plt>
   11434:	b	11330 <pclose@plt+0x23c>
   11438:	str	r0, [sp, #16]
   1143c:	ldr	r1, [sp, #8]
   11440:	ldr	r0, [sp, #12]
   11444:	bl	12b60 <pclose@plt+0x1a6c>
   11448:	ldr	r0, [pc, #876]	; 117bc <pclose@plt+0x6c8>
   1144c:	bl	10f44 <getenv@plt>
   11450:	cmp	r0, #0
   11454:	addne	r3, sp, #36	; 0x24
   11458:	ldreq	r3, [pc, #864]	; 117c0 <pclose@plt+0x6cc>
   1145c:	strne	r0, [sl, #-244]	; 0xffffff0c
   11460:	tst	r8, #8
   11464:	str	r3, [sp, #8]
   11468:	bne	11648 <pclose@plt+0x554>
   1146c:	ldr	r6, [pc, #848]	; 117c4 <pclose@plt+0x6d0>
   11470:	ldr	r3, [r6]
   11474:	cmp	r3, r5
   11478:	mvnne	r5, #0
   1147c:	addne	r7, sp, #268	; 0x10c
   11480:	beq	115e8 <pclose@plt+0x4f4>
   11484:	ldr	r2, [r6]
   11488:	ldr	r9, [r4, r2, lsl #2]
   1148c:	add	r4, r4, r2, lsl #2
   11490:	cmp	r9, #0
   11494:	beq	1168c <pclose@plt+0x598>
   11498:	str	r8, [sp, #20]
   1149c:	ldr	fp, [pc, #804]	; 117c8 <pclose@plt+0x6d4>
   114a0:	mov	r8, r9
   114a4:	mov	r6, r4
   114a8:	ldr	r9, [sp, #12]
   114ac:	b	114ec <pclose@plt+0x3f8>
   114b0:	ldr	r3, [pc, #788]	; 117cc <pclose@plt+0x6d8>
   114b4:	ldr	r2, [fp]
   114b8:	ldm	r3, {r0, r1}
   114bc:	str	r2, [sl, #-12]
   114c0:	stmda	sl, {r0, r1}
   114c4:	mov	r1, r7
   114c8:	mov	r0, r9
   114cc:	bl	17c60 <pclose@plt+0x6b6c>
   114d0:	cmn	r0, #1
   114d4:	mov	r5, r0
   114d8:	beq	1161c <pclose@plt+0x528>
   114dc:	ldr	r8, [r4, #4]!
   114e0:	add	r6, r6, #4
   114e4:	cmp	r8, #0
   114e8:	beq	11688 <pclose@plt+0x594>
   114ec:	ldr	r1, [pc, #732]	; 117d0 <pclose@plt+0x6dc>
   114f0:	mov	r0, r8
   114f4:	bl	10e24 <strcmp@plt>
   114f8:	cmp	r0, #0
   114fc:	beq	114b0 <pclose@plt+0x3bc>
   11500:	mov	r0, r8
   11504:	mov	r3, r7
   11508:	ldr	r2, [pc, #708]	; 117d4 <pclose@plt+0x6e0>
   1150c:	ldr	r1, [sp, #8]
   11510:	bl	125cc <pclose@plt+0x14d8>
   11514:	cmp	r0, #0
   11518:	beq	114c4 <pclose@plt+0x3d0>
   1151c:	ldr	r3, [pc, #628]	; 11798 <pclose@plt+0x6a4>
   11520:	mov	r2, #5
   11524:	ldr	r1, [pc, #684]	; 117d8 <pclose@plt+0x6e4>
   11528:	mov	r0, #0
   1152c:	ldr	r4, [r3]
   11530:	bl	10e84 <dcgettext@plt>
   11534:	ldr	r3, [r6]
   11538:	mov	r1, #1
   1153c:	mov	r2, r0
   11540:	mov	r0, r4
   11544:	bl	11028 <__fprintf_chk@plt>
   11548:	ldr	r0, [sp, #12]
   1154c:	bl	12b74 <pclose@plt+0x1a80>
   11550:	mov	r0, r7
   11554:	bl	12590 <pclose@plt+0x149c>
   11558:	ldr	r3, [sp, #16]
   1155c:	cmp	r3, #0
   11560:	bge	1163c <pclose@plt+0x548>
   11564:	cmp	r5, #0
   11568:	blt	11330 <pclose@plt+0x23c>
   1156c:	mov	r0, #0
   11570:	bl	10fbc <exit@plt>
   11574:	ldr	r3, [pc, #540]	; 11798 <pclose@plt+0x6a4>
   11578:	mov	r2, #5
   1157c:	ldr	r1, [pc, #600]	; 117dc <pclose@plt+0x6e8>
   11580:	b	11310 <pclose@plt+0x21c>
   11584:	add	r2, sp, #32
   11588:	ldr	r1, [pc, #592]	; 117e0 <pclose@plt+0x6ec>
   1158c:	ldr	r0, [sp, #16]
   11590:	bl	10f08 <ioctl@plt>
   11594:	cmp	r0, #0
   11598:	bne	11304 <pclose@plt+0x210>
   1159c:	ldr	r3, [sl, #-252]	; 0xffffff04
   115a0:	cmp	r3, #3
   115a4:	beq	11700 <pclose@plt+0x60c>
   115a8:	tst	r8, #32
   115ac:	beq	1143c <pclose@plt+0x348>
   115b0:	ldr	r3, [sl, #-248]	; 0xffffff08
   115b4:	cmp	r3, #1
   115b8:	beq	1143c <pclose@plt+0x348>
   115bc:	ldr	r3, [pc, #468]	; 11798 <pclose@plt+0x6a4>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #536]	; 117e4 <pclose@plt+0x6f0>
   115c8:	ldr	r6, [r3]
   115cc:	bl	10e84 <dcgettext@plt>
   115d0:	ldr	r3, [fp]
   115d4:	mov	r1, #1
   115d8:	mov	r2, r0
   115dc:	mov	r0, r6
   115e0:	bl	11028 <__fprintf_chk@plt>
   115e4:	b	1143c <pclose@plt+0x348>
   115e8:	ldr	r3, [pc, #476]	; 117cc <pclose@plt+0x6d8>
   115ec:	ldr	r2, [pc, #468]	; 117c8 <pclose@plt+0x6d4>
   115f0:	mov	r7, sl
   115f4:	ldm	r3, {r0, r1}
   115f8:	ldr	r3, [r2]
   115fc:	stmda	sl, {r0, r1}
   11600:	str	r3, [r7, #-12]!
   11604:	ldr	r0, [sp, #12]
   11608:	mov	r1, r7
   1160c:	bl	17c60 <pclose@plt+0x6b6c>
   11610:	cmn	r0, #1
   11614:	mov	r5, r0
   11618:	bne	11484 <pclose@plt+0x390>
   1161c:	ldr	r0, [sp, #12]
   11620:	bl	12b74 <pclose@plt+0x1a80>
   11624:	mov	r0, r7
   11628:	bl	12590 <pclose@plt+0x149c>
   1162c:	ldr	r3, [sp, #16]
   11630:	cmp	r3, #0
   11634:	blt	11330 <pclose@plt+0x23c>
   11638:	mvn	r5, #0
   1163c:	ldr	r0, [sp, #16]
   11640:	bl	110d0 <close@plt>
   11644:	b	11564 <pclose@plt+0x470>
   11648:	sub	r7, sl, #12
   1164c:	mov	r3, r7
   11650:	ldr	r2, [pc, #380]	; 117d4 <pclose@plt+0x6e0>
   11654:	ldr	r1, [sp, #8]
   11658:	ldr	r0, [pc, #340]	; 117b4 <pclose@plt+0x6c0>
   1165c:	bl	125cc <pclose@plt+0x14d8>
   11660:	cmp	r0, #0
   11664:	beq	116e0 <pclose@plt+0x5ec>
   11668:	ldr	r3, [pc, #296]	; 11798 <pclose@plt+0x6a4>
   1166c:	mov	r2, #5
   11670:	ldr	r1, [pc, #368]	; 117e8 <pclose@plt+0x6f4>
   11674:	mov	r0, #0
   11678:	ldr	r4, [r3]
   1167c:	bl	10e84 <dcgettext@plt>
   11680:	ldr	r3, [pc, #300]	; 117b4 <pclose@plt+0x6c0>
   11684:	b	11320 <pclose@plt+0x22c>
   11688:	ldr	r8, [sp, #20]
   1168c:	tst	r8, #64	; 0x40
   11690:	bne	11548 <pclose@plt+0x454>
   11694:	tst	r8, #4
   11698:	bne	11760 <pclose@plt+0x66c>
   1169c:	tst	r8, #16
   116a0:	beq	1174c <pclose@plt+0x658>
   116a4:	ldr	r3, [pc, #244]	; 117a0 <pclose@plt+0x6ac>
   116a8:	ldr	r0, [sp, #12]
   116ac:	ldr	r1, [r3]
   116b0:	bl	134f4 <pclose@plt+0x2400>
   116b4:	mov	r5, r0
   116b8:	b	11548 <pclose@plt+0x454>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #292]	; 117ec <pclose@plt+0x6f8>
   116c4:	mov	r0, r6
   116c8:	bl	10e84 <dcgettext@plt>
   116cc:	mov	r1, r6
   116d0:	mov	r2, r0
   116d4:	mov	r0, #1
   116d8:	bl	11b6c <pclose@plt+0xa78>
   116dc:	b	112ec <pclose@plt+0x1f8>
   116e0:	mov	r1, r7
   116e4:	ldr	r0, [sp, #12]
   116e8:	bl	17c60 <pclose@plt+0x6b6c>
   116ec:	cmn	r0, #1
   116f0:	mov	r5, r0
   116f4:	beq	1161c <pclose@plt+0x528>
   116f8:	ldr	r6, [pc, #196]	; 117c4 <pclose@plt+0x6d0>
   116fc:	b	11484 <pclose@plt+0x390>
   11700:	tst	r8, #2
   11704:	ldreq	r3, [sp, #8]
   11708:	orreq	r3, r3, #16
   1170c:	streq	r3, [sp, #8]
   11710:	beq	1173c <pclose@plt+0x648>
   11714:	ldr	r3, [pc, #124]	; 11798 <pclose@plt+0x6a4>
   11718:	mov	r2, #5
   1171c:	ldr	r1, [pc, #204]	; 117f0 <pclose@plt+0x6fc>
   11720:	ldr	r6, [r3]
   11724:	bl	10e84 <dcgettext@plt>
   11728:	ldr	r3, [fp]
   1172c:	mov	r1, #1
   11730:	mov	r2, r0
   11734:	mov	r0, r6
   11738:	bl	11028 <__fprintf_chk@plt>
   1173c:	ldr	r3, [sp, #8]
   11740:	eor	r3, r3, #2
   11744:	str	r3, [sp, #8]
   11748:	b	1143c <pclose@plt+0x348>
   1174c:	ldr	r2, [sl, #-252]	; 0xffffff04
   11750:	ldrd	r0, [sp, #12]
   11754:	bl	157f4 <pclose@plt+0x4700>
   11758:	mov	r5, r0
   1175c:	b	11548 <pclose@plt+0x454>
   11760:	ldr	r3, [pc, #56]	; 117a0 <pclose@plt+0x6ac>
   11764:	ldr	r0, [sp, #12]
   11768:	ldr	r1, [r3]
   1176c:	bl	1335c <pclose@plt+0x2268>
   11770:	mov	r5, r0
   11774:	b	11548 <pclose@plt+0x454>
   11778:	andeq	sl, r3, r8, lsl #30
   1177c:	andeq	fp, r1, r0, asr sl
   11780:	strdeq	ip, [r1], -r4
   11784:	andeq	fp, r1, r0, asr #22
   11788:	andeq	fp, r1, r4, asr fp
   1178c:	andeq	fp, r3, r8, ror #3
   11790:	andeq	fp, r1, ip, asr #28
   11794:	andeq	r4, r0, r4, asr #22
   11798:	ldrdeq	fp, [r3], -r0
   1179c:	ldrdeq	fp, [r1], -r0
   117a0:	ldrdeq	fp, [r3], -ip
   117a4:	andeq	fp, r1, r8, asr fp
   117a8:	andeq	fp, r1, r4, ror #22
   117ac:	andeq	fp, r3, r0, ror #3
   117b0:	andeq	fp, r1, r0, ror fp
   117b4:	andeq	fp, r1, ip, lsr lr
   117b8:	andeq	fp, r1, r8, ror #22
   117bc:	andeq	fp, r1, r8, asr #31
   117c0:	andeq	fp, r1, r0, asr #20
   117c4:	andeq	fp, r3, r8, asr #3
   117c8:	ldrdeq	fp, [r3], -r8
   117cc:	strdeq	fp, [r1], -r0
   117d0:	andeq	pc, r1, r4, ror r4	; <UNPREDICTABLE>
   117d4:	andeq	fp, r1, r0, lsr fp
   117d8:	strdeq	fp, [r1], -r8
   117dc:	andeq	fp, r1, ip, asr lr
   117e0:	andeq	r4, r0, fp, lsr fp
   117e4:	andeq	fp, r1, r0, ror #30
   117e8:	andeq	fp, r1, r0, ror #31
   117ec:	muleq	r1, r8, lr
   117f0:	strdeq	fp, [r1], -r8
   117f4:	mov	fp, #0
   117f8:	mov	lr, #0
   117fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11800:	mov	r2, sp
   11804:	push	{r2}		; (str r2, [sp, #-4]!)
   11808:	push	{r0}		; (str r0, [sp, #-4]!)
   1180c:	ldr	ip, [pc, #16]	; 11824 <pclose@plt+0x730>
   11810:	push	{ip}		; (str ip, [sp, #-4]!)
   11814:	ldr	r0, [pc, #12]	; 11828 <pclose@plt+0x734>
   11818:	ldr	r3, [pc, #12]	; 1182c <pclose@plt+0x738>
   1181c:	bl	10f5c <__libc_start_main@plt>
   11820:	bl	110c4 <abort@plt>
   11824:	andeq	fp, r1, r0, lsr sl
   11828:	andeq	r1, r1, r0, lsl #2
   1182c:	ldrdeq	fp, [r1], -r0
   11830:	ldr	r3, [pc, #20]	; 1184c <pclose@plt+0x758>
   11834:	ldr	r2, [pc, #20]	; 11850 <pclose@plt+0x75c>
   11838:	add	r3, pc, r3
   1183c:	ldr	r2, [r3, r2]
   11840:	cmp	r2, #0
   11844:	bxeq	lr
   11848:	b	10f8c <__gmon_start__@plt>
   1184c:	andeq	r9, r2, r0, asr #15
   11850:	andeq	r0, r0, r8, lsl r1
   11854:	ldr	r0, [pc, #24]	; 11874 <pclose@plt+0x780>
   11858:	ldr	r3, [pc, #24]	; 11878 <pclose@plt+0x784>
   1185c:	cmp	r3, r0
   11860:	bxeq	lr
   11864:	ldr	r3, [pc, #16]	; 1187c <pclose@plt+0x788>
   11868:	cmp	r3, #0
   1186c:	bxeq	lr
   11870:	bx	r3
   11874:	andeq	fp, r3, r8, asr #3
   11878:	andeq	fp, r3, r8, asr #3
   1187c:	andeq	r0, r0, r0
   11880:	ldr	r0, [pc, #36]	; 118ac <pclose@plt+0x7b8>
   11884:	ldr	r1, [pc, #36]	; 118b0 <pclose@plt+0x7bc>
   11888:	sub	r1, r1, r0
   1188c:	asr	r1, r1, #2
   11890:	add	r1, r1, r1, lsr #31
   11894:	asrs	r1, r1, #1
   11898:	bxeq	lr
   1189c:	ldr	r3, [pc, #16]	; 118b4 <pclose@plt+0x7c0>
   118a0:	cmp	r3, #0
   118a4:	bxeq	lr
   118a8:	bx	r3
   118ac:	andeq	fp, r3, r8, asr #3
   118b0:	andeq	fp, r3, r8, asr #3
   118b4:	andeq	r0, r0, r0
   118b8:	push	{r4, lr}
   118bc:	ldr	r4, [pc, #24]	; 118dc <pclose@plt+0x7e8>
   118c0:	ldrb	r3, [r4]
   118c4:	cmp	r3, #0
   118c8:	popne	{r4, pc}
   118cc:	bl	11854 <pclose@plt+0x760>
   118d0:	mov	r3, #1
   118d4:	strb	r3, [r4]
   118d8:	pop	{r4, pc}
   118dc:	andeq	fp, r3, r4, ror #3
   118e0:	b	11880 <pclose@plt+0x78c>
   118e4:	push	{r4, lr}
   118e8:	mov	r1, #2
   118ec:	mov	r4, r0
   118f0:	bl	10f98 <open@plt>
   118f4:	cmp	r0, #0
   118f8:	popge	{r4, pc}
   118fc:	mov	r1, #1
   11900:	mov	r0, r4
   11904:	bl	10f98 <open@plt>
   11908:	cmp	r0, #0
   1190c:	popge	{r4, pc}
   11910:	mov	r0, r4
   11914:	mov	r1, #0
   11918:	bl	10f98 <open@plt>
   1191c:	orr	r0, r0, r0, asr #31
   11920:	pop	{r4, pc}
   11924:	push	{r4, r5, lr}
   11928:	sub	sp, sp, #12
   1192c:	ldr	r4, [pc, #108]	; 119a0 <pclose@plt+0x8ac>
   11930:	mov	r3, #0
   11934:	strb	r3, [sp, #3]
   11938:	ldr	r3, [r4]
   1193c:	mov	r5, r0
   11940:	str	r3, [sp, #4]
   11944:	bl	110a0 <isatty@plt>
   11948:	cmp	r0, #0
   1194c:	bne	1196c <pclose@plt+0x878>
   11950:	mov	r0, #0
   11954:	ldr	r2, [sp, #4]
   11958:	ldr	r3, [r4]
   1195c:	cmp	r2, r3
   11960:	bne	1199c <pclose@plt+0x8a8>
   11964:	add	sp, sp, #12
   11968:	pop	{r4, r5, pc}
   1196c:	mov	r0, r5
   11970:	add	r2, sp, #3
   11974:	ldr	r1, [pc, #40]	; 119a4 <pclose@plt+0x8b0>
   11978:	bl	10f08 <ioctl@plt>
   1197c:	cmp	r0, #0
   11980:	bne	11950 <pclose@plt+0x85c>
   11984:	ldrb	r0, [sp, #3]
   11988:	sub	r0, r0, #1
   1198c:	cmp	r0, #1
   11990:	movhi	r0, #0
   11994:	movls	r0, #1
   11998:	b	11954 <pclose@plt+0x860>
   1199c:	bl	10e9c <__stack_chk_fail@plt>
   119a0:	andeq	sl, r3, r8, lsl #30
   119a4:	andeq	r4, r0, r3, lsr fp
   119a8:	push	{r4, r5, r6, lr}
   119ac:	subs	r5, r0, #0
   119b0:	beq	119d4 <pclose@plt+0x8e0>
   119b4:	bl	118e4 <pclose@plt+0x7f0>
   119b8:	subs	r4, r0, #0
   119bc:	blt	11a6c <pclose@plt+0x978>
   119c0:	bl	11924 <pclose@plt+0x830>
   119c4:	cmp	r0, #0
   119c8:	beq	11a64 <pclose@plt+0x970>
   119cc:	mov	r0, r4
   119d0:	pop	{r4, r5, r6, pc}
   119d4:	ldr	r5, [pc, #196]	; 11aa0 <pclose@plt+0x9ac>
   119d8:	ldr	r0, [pc, #196]	; 11aa4 <pclose@plt+0x9b0>
   119dc:	b	119ec <pclose@plt+0x8f8>
   119e0:	ldr	r0, [r5], #4
   119e4:	cmp	r0, #0
   119e8:	beq	11a18 <pclose@plt+0x924>
   119ec:	bl	118e4 <pclose@plt+0x7f0>
   119f0:	subs	r4, r0, #0
   119f4:	blt	119e0 <pclose@plt+0x8ec>
   119f8:	bl	11924 <pclose@plt+0x830>
   119fc:	cmp	r0, #0
   11a00:	bne	119cc <pclose@plt+0x8d8>
   11a04:	mov	r0, r4
   11a08:	bl	110d0 <close@plt>
   11a0c:	ldr	r0, [r5], #4
   11a10:	cmp	r0, #0
   11a14:	bne	119ec <pclose@plt+0x8f8>
   11a18:	mov	r4, r0
   11a1c:	mov	r0, r4
   11a20:	bl	11924 <pclose@plt+0x830>
   11a24:	cmp	r0, #0
   11a28:	bne	119cc <pclose@plt+0x8d8>
   11a2c:	add	r4, r4, #1
   11a30:	cmp	r4, #3
   11a34:	bne	11a1c <pclose@plt+0x928>
   11a38:	ldr	r3, [pc, #104]	; 11aa8 <pclose@plt+0x9b4>
   11a3c:	mov	r2, #5
   11a40:	ldr	r1, [pc, #100]	; 11aac <pclose@plt+0x9b8>
   11a44:	ldr	r4, [r3]
   11a48:	bl	10e84 <dcgettext@plt>
   11a4c:	mov	r1, #1
   11a50:	mov	r2, r0
   11a54:	mov	r0, r4
   11a58:	bl	11028 <__fprintf_chk@plt>
   11a5c:	mov	r0, #1
   11a60:	bl	10fbc <exit@plt>
   11a64:	mov	r0, r4
   11a68:	bl	110d0 <close@plt>
   11a6c:	ldr	r3, [pc, #52]	; 11aa8 <pclose@plt+0x9b4>
   11a70:	mov	r2, #5
   11a74:	ldr	r1, [pc, #52]	; 11ab0 <pclose@plt+0x9bc>
   11a78:	mov	r0, #0
   11a7c:	ldr	r4, [r3]
   11a80:	bl	10e84 <dcgettext@plt>
   11a84:	mov	r3, r5
   11a88:	mov	r1, #1
   11a8c:	mov	r2, r0
   11a90:	mov	r0, r4
   11a94:	bl	11028 <__fprintf_chk@plt>
   11a98:	mov	r0, #1
   11a9c:	bl	10fbc <exit@plt>
   11aa0:	andeq	ip, r1, ip, asr #1
   11aa4:	andeq	ip, r1, r4, ror #1
   11aa8:	ldrdeq	fp, [r3], -r0
   11aac:	andeq	ip, r1, r8, lsl #2
   11ab0:	strdeq	ip, [r1], -r4
   11ab4:	push	{r1, r2, r3}
   11ab8:	push	{r4, r5, r6, r7, lr}
   11abc:	sub	sp, sp, #8
   11ac0:	ldr	r5, [pc, #144]	; 11b58 <pclose@plt+0xa64>
   11ac4:	ldr	r4, [pc, #144]	; 11b5c <pclose@plt+0xa68>
   11ac8:	ldr	r3, [pc, #144]	; 11b60 <pclose@plt+0xa6c>
   11acc:	ldr	r1, [r5]
   11ad0:	ldr	r7, [sp, #28]
   11ad4:	add	ip, sp, #32
   11ad8:	mov	r6, r0
   11adc:	ldr	r3, [r3]
   11ae0:	ldr	r2, [pc, #124]	; 11b64 <pclose@plt+0xa70>
   11ae4:	str	r1, [sp, #4]
   11ae8:	ldr	r0, [r4]
   11aec:	mov	r1, #1
   11af0:	str	ip, [sp]
   11af4:	bl	11028 <__fprintf_chk@plt>
   11af8:	mov	r2, r7
   11afc:	ldr	r0, [r4]
   11b00:	ldr	r3, [sp]
   11b04:	mov	r1, #1
   11b08:	bl	10f74 <__vfprintf_chk@plt>
   11b0c:	cmp	r6, #0
   11b10:	ble	11b34 <pclose@plt+0xa40>
   11b14:	mov	r0, r6
   11b18:	ldr	r4, [r4]
   11b1c:	bl	10f68 <strerror@plt>
   11b20:	ldr	r2, [pc, #64]	; 11b68 <pclose@plt+0xa74>
   11b24:	mov	r1, #1
   11b28:	mov	r3, r0
   11b2c:	mov	r0, r4
   11b30:	bl	11028 <__fprintf_chk@plt>
   11b34:	ldr	r2, [sp, #4]
   11b38:	ldr	r3, [r5]
   11b3c:	cmp	r2, r3
   11b40:	bne	11b54 <pclose@plt+0xa60>
   11b44:	add	sp, sp, #8
   11b48:	pop	{r4, r5, r6, r7, lr}
   11b4c:	add	sp, sp, #12
   11b50:	bx	lr
   11b54:	bl	10e9c <__stack_chk_fail@plt>
   11b58:	andeq	sl, r3, r8, lsl #30
   11b5c:	ldrdeq	fp, [r3], -r0
   11b60:	andeq	fp, r3, r8, lsr #4
   11b64:	andeq	ip, r1, r4, lsl #3
   11b68:	andeq	ip, r1, ip, lsl #3
   11b6c:	push	{r2, r3}
   11b70:	mov	r5, r1
   11b74:	ldr	r2, [pc, #124]	; 11bf8 <pclose@plt+0xb04>
   11b78:	push	{r7, lr}
   11b7c:	sub	sp, sp, #8
   11b80:	ldr	r4, [pc, #116]	; 11bfc <pclose@plt+0xb08>
   11b84:	ldr	r3, [pc, #116]	; 11c00 <pclose@plt+0xb0c>
   11b88:	ldr	lr, [r2]
   11b8c:	ldr	r7, [sp, #16]
   11b90:	add	ip, sp, #20
   11b94:	ldr	r3, [r3]
   11b98:	ldr	r2, [pc, #100]	; 11c04 <pclose@plt+0xb10>
   11b9c:	mov	r1, #1
   11ba0:	mov	r6, r0
   11ba4:	ldr	r0, [r4]
   11ba8:	str	lr, [sp, #4]
   11bac:	str	ip, [sp]
   11bb0:	bl	11028 <__fprintf_chk@plt>
   11bb4:	mov	r2, r7
   11bb8:	ldr	r0, [r4]
   11bbc:	ldr	r3, [sp]
   11bc0:	mov	r1, #1
   11bc4:	bl	10f74 <__vfprintf_chk@plt>
   11bc8:	cmp	r5, #0
   11bcc:	ble	11bf0 <pclose@plt+0xafc>
   11bd0:	mov	r0, r5
   11bd4:	ldr	r4, [r4]
   11bd8:	bl	10f68 <strerror@plt>
   11bdc:	ldr	r2, [pc, #36]	; 11c08 <pclose@plt+0xb14>
   11be0:	mov	r1, #1
   11be4:	mov	r3, r0
   11be8:	mov	r0, r4
   11bec:	bl	11028 <__fprintf_chk@plt>
   11bf0:	mov	r0, r6
   11bf4:	bl	10fbc <exit@plt>
   11bf8:	andeq	sl, r3, r8, lsl #30
   11bfc:	ldrdeq	fp, [r3], -r0
   11c00:	andeq	fp, r3, r8, lsr #4
   11c04:	andeq	ip, r1, r4, lsl #3
   11c08:	andeq	ip, r1, ip, lsl #3
   11c0c:	push	{r4, lr}
   11c10:	mov	r2, r1
   11c14:	ldr	r1, [pc, #24]	; 11c34 <pclose@plt+0xb40>
   11c18:	bl	10f08 <ioctl@plt>
   11c1c:	cmp	r0, #0
   11c20:	popeq	{r4, pc}
   11c24:	ldr	r0, [pc, #12]	; 11c38 <pclose@plt+0xb44>
   11c28:	bl	10ecc <perror@plt>
   11c2c:	mvn	r0, #0
   11c30:	pop	{r4, pc}
   11c34:	andeq	r4, r0, r0, asr #22
   11c38:	muleq	r1, r4, r1
   11c3c:	push	{r4, lr}
   11c40:	mov	r2, r1
   11c44:	ldr	r1, [pc, #24]	; 11c64 <pclose@plt+0xb70>
   11c48:	bl	10f08 <ioctl@plt>
   11c4c:	cmp	r0, #0
   11c50:	popeq	{r4, pc}
   11c54:	ldr	r0, [pc, #12]	; 11c68 <pclose@plt+0xb74>
   11c58:	bl	10ecc <perror@plt>
   11c5c:	mvn	r0, #0
   11c60:	pop	{r4, pc}
   11c64:	andeq	r4, r0, r1, asr #22
   11c68:	andeq	ip, r1, r0, lsr #3
   11c6c:	push	{r4, lr}
   11c70:	mov	r2, r1
   11c74:	ldr	r1, [pc, #24]	; 11c94 <pclose@plt+0xba0>
   11c78:	bl	10f08 <ioctl@plt>
   11c7c:	cmp	r0, #0
   11c80:	popeq	{r4, pc}
   11c84:	ldr	r0, [pc, #12]	; 11c98 <pclose@plt+0xba4>
   11c88:	bl	10ecc <perror@plt>
   11c8c:	mvn	r0, #0
   11c90:	pop	{r4, pc}
   11c94:	andeq	r4, r0, r9, ror #22
   11c98:	andeq	ip, r1, ip, lsr #3
   11c9c:	push	{r4, lr}
   11ca0:	mov	r2, r1
   11ca4:	ldr	r1, [pc, #24]	; 11cc4 <pclose@plt+0xbd0>
   11ca8:	bl	10f08 <ioctl@plt>
   11cac:	cmp	r0, #0
   11cb0:	popeq	{r4, pc}
   11cb4:	ldr	r0, [pc, #12]	; 11cc8 <pclose@plt+0xbd4>
   11cb8:	bl	10ecc <perror@plt>
   11cbc:	mvn	r0, #0
   11cc0:	pop	{r4, pc}
   11cc4:	andeq	r4, r0, sl, ror #22
   11cc8:			; <UNDEFINED> instruction: 0x0001c1bc
   11ccc:	push	{r4, r5, r6, r7, r8, lr}
   11cd0:	sub	sp, sp, #24
   11cd4:	ldr	r5, [pc, #308]	; 11e10 <pclose@plt+0xd1c>
   11cd8:	add	r4, sp, #12
   11cdc:	mov	r3, #0
   11ce0:	ldr	ip, [r5]
   11ce4:	mov	r6, r1
   11ce8:	mov	r2, r4
   11cec:	ldr	r1, [pc, #288]	; 11e14 <pclose@plt+0xd20>
   11cf0:	str	ip, [sp, #20]
   11cf4:	strh	r3, [sp, #12]
   11cf8:	str	r3, [sp, #16]
   11cfc:	mov	r8, r0
   11d00:	bl	10f08 <ioctl@plt>
   11d04:	cmp	r0, #0
   11d08:	beq	11d90 <pclose@plt+0xc9c>
   11d0c:	bl	10fe0 <__errno_location@plt>
   11d10:	ldr	r3, [r0]
   11d14:	cmp	r3, #12
   11d18:	bne	11db8 <pclose@plt+0xcc4>
   11d1c:	ldrh	r7, [sp, #12]
   11d20:	cmp	r7, #0
   11d24:	beq	11db8 <pclose@plt+0xcc4>
   11d28:	lsl	r0, r7, #2
   11d2c:	bl	10f50 <malloc@plt>
   11d30:	cmp	r0, #0
   11d34:	str	r0, [sp, #16]
   11d38:	beq	11dd8 <pclose@plt+0xce4>
   11d3c:	mov	r0, r8
   11d40:	mov	r2, r4
   11d44:	ldr	r1, [pc, #200]	; 11e14 <pclose@plt+0xd20>
   11d48:	bl	10f08 <ioctl@plt>
   11d4c:	cmp	r0, #0
   11d50:	bne	11dc8 <pclose@plt+0xcd4>
   11d54:	ldrh	r3, [sp, #12]
   11d58:	cmp	r3, r7
   11d5c:	beq	11d90 <pclose@plt+0xc9c>
   11d60:	ldr	r3, [pc, #176]	; 11e18 <pclose@plt+0xd24>
   11d64:	mov	r2, #5
   11d68:	ldr	r1, [pc, #172]	; 11e1c <pclose@plt+0xd28>
   11d6c:	ldr	r8, [r3]
   11d70:	bl	10e84 <dcgettext@plt>
   11d74:	ldrh	r2, [sp, #12]
   11d78:	mov	r3, r7
   11d7c:	mov	r1, #1
   11d80:	str	r2, [sp]
   11d84:	mov	r2, r0
   11d88:	mov	r0, r8
   11d8c:	bl	11028 <__fprintf_chk@plt>
   11d90:	ldm	r4, {r0, r1}
   11d94:	mov	ip, #0
   11d98:	stm	r6, {r0, r1}
   11d9c:	ldr	r2, [sp, #20]
   11da0:	ldr	r3, [r5]
   11da4:	mov	r0, ip
   11da8:	cmp	r2, r3
   11dac:	bne	11e0c <pclose@plt+0xd18>
   11db0:	add	sp, sp, #24
   11db4:	pop	{r4, r5, r6, r7, r8, pc}
   11db8:	ldr	r0, [pc, #96]	; 11e20 <pclose@plt+0xd2c>
   11dbc:	bl	10ecc <perror@plt>
   11dc0:	mvn	ip, #0
   11dc4:	b	11d9c <pclose@plt+0xca8>
   11dc8:	ldr	r0, [pc, #84]	; 11e24 <pclose@plt+0xd30>
   11dcc:	bl	10ecc <perror@plt>
   11dd0:	mvn	ip, #0
   11dd4:	b	11d9c <pclose@plt+0xca8>
   11dd8:	ldr	r3, [pc, #56]	; 11e18 <pclose@plt+0xd24>
   11ddc:	mov	r2, #5
   11de0:	ldr	r1, [pc, #64]	; 11e28 <pclose@plt+0xd34>
   11de4:	ldr	r4, [r3]
   11de8:	bl	10e84 <dcgettext@plt>
   11dec:	ldr	r3, [pc, #56]	; 11e2c <pclose@plt+0xd38>
   11df0:	mov	r1, #1
   11df4:	ldr	r3, [r3]
   11df8:	mov	r2, r0
   11dfc:	mov	r0, r4
   11e00:	bl	11028 <__fprintf_chk@plt>
   11e04:	mvn	ip, #0
   11e08:	b	11d9c <pclose@plt+0xca8>
   11e0c:	bl	10e9c <__stack_chk_fail@plt>
   11e10:	andeq	sl, r3, r8, lsl #30
   11e14:	andeq	r4, r0, r6, ror #22
   11e18:	ldrdeq	fp, [r3], -r0
   11e1c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   11e20:	andeq	ip, r1, ip, asr #3
   11e24:	strdeq	ip, [r1], -r0
   11e28:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   11e2c:	andeq	fp, r3, r8, lsr #4
   11e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e34:	sub	sp, sp, #16
   11e38:	ldr	r9, [pc, #220]	; 11f1c <pclose@plt+0xe28>
   11e3c:	cmp	r1, #0
   11e40:	mov	r4, r0
   11e44:	ldr	r3, [r9]
   11e48:	mov	r5, r2
   11e4c:	str	r3, [sp, #12]
   11e50:	beq	11f08 <pclose@plt+0xe14>
   11e54:	ldrh	r3, [r1, #4]
   11e58:	ldr	r0, [r1]
   11e5c:	add	r6, sp, #4
   11e60:	str	r0, [sp, #4]
   11e64:	strh	r3, [r6, #4]
   11e68:	ldr	r7, [pc, #176]	; 11f20 <pclose@plt+0xe2c>
   11e6c:	ldr	r8, [pc, #176]	; 11f24 <pclose@plt+0xe30>
   11e70:	b	11eb8 <pclose@plt+0xdc4>
   11e74:	cmp	r5, #0
   11e78:	beq	11edc <pclose@plt+0xde8>
   11e7c:	mov	r2, r5
   11e80:	mov	r1, r8
   11e84:	mov	r0, r4
   11e88:	bl	10f08 <ioctl@plt>
   11e8c:	cmp	r0, #0
   11e90:	beq	11edc <pclose@plt+0xde8>
   11e94:	bl	10fe0 <__errno_location@plt>
   11e98:	ldr	r3, [r0]
   11e9c:	cmp	r3, #12
   11ea0:	bne	11ef8 <pclose@plt+0xe04>
   11ea4:	ldrh	r3, [sp, #8]
   11ea8:	cmp	r3, #99	; 0x63
   11eac:	bhi	11ef8 <pclose@plt+0xe04>
   11eb0:	add	r3, r3, #1
   11eb4:	strh	r3, [sp, #8]
   11eb8:	mov	r2, r6
   11ebc:	mov	r1, r7
   11ec0:	mov	r0, r4
   11ec4:	bl	10f08 <ioctl@plt>
   11ec8:	subs	sl, r0, #0
   11ecc:	beq	11e74 <pclose@plt+0xd80>
   11ed0:	ldr	r0, [pc, #80]	; 11f28 <pclose@plt+0xe34>
   11ed4:	bl	10ecc <perror@plt>
   11ed8:	mvn	sl, #0
   11edc:	ldr	r2, [sp, #12]
   11ee0:	ldr	r3, [r9]
   11ee4:	mov	r0, sl
   11ee8:	cmp	r2, r3
   11eec:	bne	11f18 <pclose@plt+0xe24>
   11ef0:	add	sp, sp, #16
   11ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ef8:	ldr	r0, [pc, #44]	; 11f2c <pclose@plt+0xe38>
   11efc:	bl	10ecc <perror@plt>
   11f00:	mvn	sl, #0
   11f04:	b	11edc <pclose@plt+0xde8>
   11f08:	str	r1, [sp, #4]
   11f0c:	strh	r1, [sp, #8]
   11f10:	add	r6, sp, #4
   11f14:	b	11e68 <pclose@plt+0xd74>
   11f18:	bl	10e9c <__stack_chk_fail@plt>
   11f1c:	andeq	sl, r3, r8, lsl #30
   11f20:	andeq	r4, r0, r8, ror #22
   11f24:	andeq	r4, r0, r7, ror #22
   11f28:	andeq	ip, r1, r4, lsr #4
   11f2c:	andeq	ip, r1, r4, lsr r2
   11f30:	push	{r4, r5, r6, r7, r8, lr}
   11f34:	sub	sp, sp, #8
   11f38:	add	r6, r1, #8
   11f3c:	mov	r5, r1
   11f40:	mov	r8, r0
   11f44:	bl	10fc8 <strlen@plt>
   11f48:	mov	r4, r0
   11f4c:	mov	r0, r6
   11f50:	bl	10fc8 <strlen@plt>
   11f54:	add	r0, r4, r0
   11f58:	add	r0, r0, #2
   11f5c:	bl	10f50 <malloc@plt>
   11f60:	subs	r7, r0, #0
   11f64:	beq	11fc0 <pclose@plt+0xecc>
   11f68:	ldr	r3, [pc, #88]	; 11fc8 <pclose@plt+0xed4>
   11f6c:	mvn	r2, #0
   11f70:	add	r3, pc, r3
   11f74:	mov	r1, #1
   11f78:	str	r6, [sp, #4]
   11f7c:	str	r8, [sp]
   11f80:	bl	10ff8 <__sprintf_chk@plt>
   11f84:	ldr	r1, [pc, #64]	; 11fcc <pclose@plt+0xed8>
   11f88:	mov	r0, r7
   11f8c:	add	r1, pc, r1
   11f90:	bl	11058 <popen@plt>
   11f94:	mov	r3, #1
   11f98:	str	r3, [r5, #4]
   11f9c:	mov	r4, r0
   11fa0:	str	r0, [r5]
   11fa4:	mov	r0, r7
   11fa8:	bl	10e48 <free@plt>
   11fac:	clz	r0, r4
   11fb0:	lsr	r0, r0, #5
   11fb4:	rsb	r0, r0, #0
   11fb8:	add	sp, sp, #8
   11fbc:	pop	{r4, r5, r6, r7, r8, pc}
   11fc0:	mvn	r0, #0
   11fc4:	b	11fb8 <pclose@plt+0xec4>
   11fc8:	andeq	sl, r0, r8, asr #5
   11fcc:	andeq	sp, r0, ip, asr #17
   11fd0:	ldr	r3, [pc, #268]	; 120e4 <pclose@plt+0xff0>
   11fd4:	ldr	r2, [pc, #268]	; 120e8 <pclose@plt+0xff4>
   11fd8:	add	r3, pc, r3
   11fdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11fe0:	add	r7, r0, #8
   11fe4:	ldr	r9, [r3, r2]
   11fe8:	sub	sp, sp, #100	; 0x64
   11fec:	mov	r8, r0
   11ff0:	ldr	ip, [r9]
   11ff4:	mov	r1, r7
   11ff8:	mov	r2, sp
   11ffc:	mov	r0, #3
   12000:	str	ip, [sp, #92]	; 0x5c
   12004:	bl	10ed8 <__xstat@plt>
   12008:	cmn	r0, #1
   1200c:	beq	120d8 <pclose@plt+0xfe4>
   12010:	ldr	r3, [sp, #16]
   12014:	and	r3, r3, #61440	; 0xf000
   12018:	cmp	r3, #32768	; 0x8000
   1201c:	bne	120d8 <pclose@plt+0xfe4>
   12020:	mov	r1, #4
   12024:	mov	r0, r7
   12028:	bl	11034 <access@plt>
   1202c:	cmn	r0, #1
   12030:	beq	120d8 <pclose@plt+0xfe4>
   12034:	mov	r1, #46	; 0x2e
   12038:	mov	r0, r7
   1203c:	bl	11070 <strrchr@plt>
   12040:	subs	r6, r0, #0
   12044:	beq	12098 <pclose@plt+0xfa4>
   12048:	ldr	r4, [pc, #156]	; 120ec <pclose@plt+0xff8>
   1204c:	add	r4, pc, r4
   12050:	ldr	r5, [r4, #4]
   12054:	cmp	r5, #0
   12058:	beq	12098 <pclose@plt+0xfa4>
   1205c:	add	r4, r4, #8
   12060:	b	12074 <pclose@plt+0xf80>
   12064:	add	r4, r4, #8
   12068:	ldr	r5, [r4, #-4]
   1206c:	cmp	r5, #0
   12070:	beq	12098 <pclose@plt+0xfa4>
   12074:	ldr	r1, [r4, #-8]
   12078:	mov	r0, r6
   1207c:	bl	10e24 <strcmp@plt>
   12080:	cmp	r0, #0
   12084:	bne	12064 <pclose@plt+0xf70>
   12088:	mov	r1, r8
   1208c:	mov	r0, r5
   12090:	bl	11f30 <pclose@plt+0xe3c>
   12094:	b	120c0 <pclose@plt+0xfcc>
   12098:	ldr	r1, [pc, #80]	; 120f0 <pclose@plt+0xffc>
   1209c:	mov	r0, r7
   120a0:	add	r1, pc, r1
   120a4:	bl	10e3c <fopen@plt>
   120a8:	clz	r3, r0
   120ac:	lsr	r3, r3, #5
   120b0:	mov	r2, r0
   120b4:	rsb	r0, r3, #0
   120b8:	mov	r3, #0
   120bc:	strd	r2, [r8]
   120c0:	ldr	r2, [sp, #92]	; 0x5c
   120c4:	ldr	r3, [r9]
   120c8:	cmp	r2, r3
   120cc:	bne	120e0 <pclose@plt+0xfec>
   120d0:	add	sp, sp, #100	; 0x64
   120d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   120d8:	mvn	r0, #0
   120dc:	b	120c0 <pclose@plt+0xfcc>
   120e0:	bl	10e9c <__stack_chk_fail@plt>
   120e4:	andeq	r9, r2, r0, lsr #32
   120e8:	andeq	r0, r0, r8, lsl #2
   120ec:	andeq	r9, r2, r4, ror #1
   120f0:			; <UNDEFINED> instruction: 0x0000d7b8
   120f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120f8:	sub	sp, sp, #156	; 0x9c
   120fc:	ldr	ip, [pc, #1132]	; 12570 <pclose@plt+0x147c>
   12100:	ldr	lr, [pc, #1132]	; 12574 <pclose@plt+0x1480>
   12104:	ldr	r5, [sp, #192]	; 0xc0
   12108:	add	ip, pc, ip
   1210c:	str	r1, [sp, #20]
   12110:	str	r5, [sp, #36]	; 0x24
   12114:	mov	r6, r1
   12118:	mov	r1, ip
   1211c:	ldr	ip, [ip, lr]
   12120:	mov	r4, r0
   12124:	mov	lr, ip
   12128:	str	ip, [sp, #40]	; 0x28
   1212c:	ldr	lr, [lr]
   12130:	mov	ip, #0
   12134:	str	r0, [sp, #28]
   12138:	str	ip, [r5, #4]
   1213c:	str	ip, [r5]
   12140:	mov	r0, r6
   12144:	mov	fp, r2
   12148:	str	r3, [sp, #48]	; 0x30
   1214c:	str	lr, [sp, #148]	; 0x94
   12150:	bl	10f38 <opendir@plt>
   12154:	subs	r7, r0, #0
   12158:	beq	1254c <pclose@plt+0x1458>
   1215c:	mov	r0, r6
   12160:	bl	10fc8 <strlen@plt>
   12164:	mov	r1, #47	; 0x2f
   12168:	str	r0, [sp, #12]
   1216c:	mov	r0, r4
   12170:	bl	10fd4 <strchr@plt>
   12174:	subs	r9, r0, #0
   12178:	beq	124ac <pclose@plt+0x13b8>
   1217c:	sub	r1, r9, r4
   12180:	mov	r0, r4
   12184:	bl	10e60 <strndup@plt>
   12188:	subs	r3, r0, #0
   1218c:	str	r3, [sp, #16]
   12190:	beq	12558 <pclose@plt+0x1464>
   12194:	ldr	r3, [pc, #988]	; 12578 <pclose@plt+0x1484>
   12198:	mov	r5, #0
   1219c:	add	r3, pc, r3
   121a0:	str	r3, [sp, #44]	; 0x2c
   121a4:	ldr	r3, [pc, #976]	; 1257c <pclose@plt+0x1488>
   121a8:	add	r3, pc, r3
   121ac:	str	r3, [sp, #52]	; 0x34
   121b0:	mvn	r3, #0
   121b4:	str	r3, [sp, #32]
   121b8:	mov	r0, r7
   121bc:	bl	11064 <readdir@plt>
   121c0:	subs	r6, r0, #0
   121c4:	beq	123c4 <pclose@plt+0x12d0>
   121c8:	add	r4, r6, #11
   121cc:	mov	r0, r4
   121d0:	bl	10fc8 <strlen@plt>
   121d4:	cmp	r0, #2
   121d8:	mov	r8, r0
   121dc:	bhi	12210 <pclose@plt+0x111c>
   121e0:	ldr	r1, [pc, #920]	; 12580 <pclose@plt+0x148c>
   121e4:	mov	r0, r4
   121e8:	add	r1, pc, r1
   121ec:	bl	10e24 <strcmp@plt>
   121f0:	cmp	r0, #0
   121f4:	beq	121b8 <pclose@plt+0x10c4>
   121f8:	ldr	r1, [pc, #900]	; 12584 <pclose@plt+0x1490>
   121fc:	mov	r0, r4
   12200:	add	r1, pc, r1
   12204:	bl	10e24 <strcmp@plt>
   12208:	cmp	r0, #0
   1220c:	beq	121b8 <pclose@plt+0x10c4>
   12210:	ldr	r3, [sp, #12]
   12214:	add	sl, r3, #2
   12218:	add	sl, sl, r8
   1221c:	cmp	sl, #4096	; 0x1000
   12220:	bhi	121b8 <pclose@plt+0x10c4>
   12224:	adds	r8, fp, #0
   12228:	movne	r8, #1
   1222c:	cmp	r9, #0
   12230:	beq	1244c <pclose@plt+0x1358>
   12234:	ldr	r1, [sp, #16]
   12238:	mov	r0, r4
   1223c:	bl	10e24 <strcmp@plt>
   12240:	cmp	r0, #0
   12244:	bne	123f0 <pclose@plt+0x12fc>
   12248:	mov	r3, #1
   1224c:	str	r3, [sp, #24]
   12250:	mov	r0, sl
   12254:	bl	10f50 <malloc@plt>
   12258:	subs	sl, r0, #0
   1225c:	beq	12410 <pclose@plt+0x131c>
   12260:	ldr	r3, [sp, #20]
   12264:	mvn	r2, #0
   12268:	str	r3, [sp]
   1226c:	ldr	r3, [pc, #788]	; 12588 <pclose@plt+0x1494>
   12270:	mov	r1, #1
   12274:	add	r3, pc, r3
   12278:	str	r4, [sp, #4]
   1227c:	bl	10ff8 <__sprintf_chk@plt>
   12280:	add	r2, sp, #56	; 0x38
   12284:	mov	r1, sl
   12288:	mov	r0, #3
   1228c:	bl	10ed8 <__xstat@plt>
   12290:	cmp	r0, #0
   12294:	bne	122a8 <pclose@plt+0x11b4>
   12298:	ldr	r3, [sp, #72]	; 0x48
   1229c:	and	r3, r3, #61440	; 0xf000
   122a0:	cmp	r3, #16384	; 0x4000
   122a4:	beq	12460 <pclose@plt+0x136c>
   122a8:	mov	r0, sl
   122ac:	bl	10e48 <free@plt>
   122b0:	and	r3, r5, #1
   122b4:	cmp	r9, #0
   122b8:	movne	r3, #1
   122bc:	cmp	r3, #0
   122c0:	bne	121b8 <pclose@plt+0x10c4>
   122c4:	ldrb	r3, [r6, #11]
   122c8:	ldr	r1, [sp, #28]
   122cc:	mov	r6, r4
   122d0:	cmp	r3, #0
   122d4:	ldrb	r2, [r1]
   122d8:	bne	122f0 <pclose@plt+0x11fc>
   122dc:	b	122f8 <pclose@plt+0x1204>
   122e0:	ldrb	r3, [r6, #1]!
   122e4:	ldrb	r2, [r1, #1]!
   122e8:	cmp	r3, #0
   122ec:	beq	122f8 <pclose@plt+0x1204>
   122f0:	cmp	r3, r2
   122f4:	beq	122e0 <pclose@plt+0x11ec>
   122f8:	cmp	r2, #0
   122fc:	bne	121b8 <pclose@plt+0x10c4>
   12300:	ldr	r3, [sp, #36]	; 0x24
   12304:	ldr	r2, [sp, #20]
   12308:	add	r3, r3, #8
   1230c:	str	r4, [sp, #4]
   12310:	str	r2, [sp]
   12314:	mov	r4, r3
   12318:	mov	r0, r3
   1231c:	mvn	r2, #0
   12320:	ldr	r3, [sp, #44]	; 0x2c
   12324:	mov	r1, #1
   12328:	bl	10ff8 <__sprintf_chk@plt>
   1232c:	mov	r1, r4
   12330:	add	r2, sp, #56	; 0x38
   12334:	mov	r0, #3
   12338:	bl	10ed8 <__xstat@plt>
   1233c:	cmp	r0, #0
   12340:	bne	121b8 <pclose@plt+0x10c4>
   12344:	ldr	r3, [sp, #72]	; 0x48
   12348:	and	r3, r3, #61440	; 0xf000
   1234c:	cmp	r3, #32768	; 0x8000
   12350:	bne	121b8 <pclose@plt+0x10c4>
   12354:	ldr	r5, [sp, #48]	; 0x30
   12358:	ldr	r4, [r5]
   1235c:	cmp	r4, #0
   12360:	beq	123bc <pclose@plt+0x12c8>
   12364:	ldr	r3, [pc, #544]	; 1258c <pclose@plt+0x1498>
   12368:	str	r9, [sp, #24]
   1236c:	add	r3, pc, r3
   12370:	ldr	r8, [r3, #4]
   12374:	mov	r1, r4
   12378:	mov	r0, r6
   1237c:	bl	10e24 <strcmp@plt>
   12380:	cmp	r0, #0
   12384:	beq	1253c <pclose@plt+0x1448>
   12388:	mov	r0, r4
   1238c:	bl	10fc8 <strlen@plt>
   12390:	mov	r1, r4
   12394:	mov	r2, r0
   12398:	mov	r9, r0
   1239c:	mov	r0, r6
   123a0:	bl	110b8 <strncmp@plt>
   123a4:	cmp	r0, #0
   123a8:	beq	124b4 <pclose@plt+0x13c0>
   123ac:	ldr	r4, [r5, #4]!
   123b0:	cmp	r4, #0
   123b4:	bne	12374 <pclose@plt+0x1280>
   123b8:	ldr	r9, [sp, #24]
   123bc:	mov	r5, #0
   123c0:	b	121b8 <pclose@plt+0x10c4>
   123c4:	eor	r5, r5, #1
   123c8:	cmp	fp, #0
   123cc:	movle	r5, #0
   123d0:	andgt	r5, r5, #1
   123d4:	cmp	r5, #0
   123d8:	beq	12410 <pclose@plt+0x131c>
   123dc:	mov	r1, r6
   123e0:	mov	r0, r7
   123e4:	bl	10f80 <seekdir@plt>
   123e8:	mov	r5, #1
   123ec:	b	121b8 <pclose@plt+0x10c4>
   123f0:	ands	r8, r8, r5
   123f4:	beq	121b8 <pclose@plt+0x10c4>
   123f8:	mov	r3, #0
   123fc:	mov	r0, sl
   12400:	str	r3, [sp, #24]
   12404:	bl	10f50 <malloc@plt>
   12408:	subs	sl, r0, #0
   1240c:	bne	12260 <pclose@plt+0x116c>
   12410:	ldr	r3, [sp, #16]
   12414:	cmp	r3, #0
   12418:	beq	12424 <pclose@plt+0x1330>
   1241c:	mov	r0, r3
   12420:	bl	10e48 <free@plt>
   12424:	mov	r0, r7
   12428:	bl	110e8 <closedir@plt>
   1242c:	ldr	r3, [sp, #40]	; 0x28
   12430:	ldr	r2, [sp, #148]	; 0x94
   12434:	ldr	r0, [sp, #32]
   12438:	ldr	r3, [r3]
   1243c:	cmp	r2, r3
   12440:	bne	1256c <pclose@plt+0x1478>
   12444:	add	sp, sp, #156	; 0x9c
   12448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1244c:	and	r3, r5, #1
   12450:	ands	r8, r8, r3
   12454:	strne	r9, [sp, #24]
   12458:	beq	122b4 <pclose@plt+0x11c0>
   1245c:	b	12250 <pclose@plt+0x115c>
   12460:	ldr	r3, [sp, #24]
   12464:	cmp	r3, #0
   12468:	bne	12508 <pclose@plt+0x1414>
   1246c:	cmp	r8, #0
   12470:	beq	122a8 <pclose@plt+0x11b4>
   12474:	ldr	r3, [sp, #36]	; 0x24
   12478:	sub	r2, fp, #1
   1247c:	str	r3, [sp]
   12480:	mov	r1, sl
   12484:	ldr	r3, [sp, #48]	; 0x30
   12488:	ldr	r0, [sp, #28]
   1248c:	bl	120f4 <pclose@plt+0x1000>
   12490:	str	r0, [sp, #32]
   12494:	ldr	r3, [sp, #32]
   12498:	cmp	r3, #0
   1249c:	bne	122a8 <pclose@plt+0x11b4>
   124a0:	mov	r0, sl
   124a4:	bl	10e48 <free@plt>
   124a8:	b	12410 <pclose@plt+0x131c>
   124ac:	str	r9, [sp, #16]
   124b0:	b	12194 <pclose@plt+0x10a0>
   124b4:	cmp	r8, #0
   124b8:	beq	123ac <pclose@plt+0x12b8>
   124bc:	ldr	r3, [sp, #52]	; 0x34
   124c0:	add	r4, r6, r9
   124c4:	mov	sl, r8
   124c8:	add	r9, r3, #8
   124cc:	b	124e0 <pclose@plt+0x13ec>
   124d0:	add	r9, r9, #8
   124d4:	ldr	sl, [r9, #-4]
   124d8:	cmp	sl, #0
   124dc:	beq	123ac <pclose@plt+0x12b8>
   124e0:	ldr	r1, [r9, #-8]
   124e4:	mov	r0, r4
   124e8:	bl	10e24 <strcmp@plt>
   124ec:	cmp	r0, #0
   124f0:	bne	124d0 <pclose@plt+0x13dc>
   124f4:	ldr	r1, [sp, #36]	; 0x24
   124f8:	mov	r0, sl
   124fc:	bl	11f30 <pclose@plt+0xe3c>
   12500:	str	r0, [sp, #32]
   12504:	b	12410 <pclose@plt+0x131c>
   12508:	ldr	r3, [sp, #36]	; 0x24
   1250c:	mov	r2, r0
   12510:	str	r3, [sp]
   12514:	mov	r1, sl
   12518:	ldr	r3, [sp, #48]	; 0x30
   1251c:	add	r0, r9, #1
   12520:	bl	120f4 <pclose@plt+0x1000>
   12524:	cmp	r0, #0
   12528:	moveq	r8, #0
   1252c:	cmp	r8, #0
   12530:	str	r0, [sp, #32]
   12534:	beq	12494 <pclose@plt+0x13a0>
   12538:	b	12474 <pclose@plt+0x1380>
   1253c:	ldr	r0, [sp, #36]	; 0x24
   12540:	bl	11fd0 <pclose@plt+0xedc>
   12544:	str	r0, [sp, #32]
   12548:	b	12410 <pclose@plt+0x131c>
   1254c:	mvn	r3, #0
   12550:	str	r3, [sp, #32]
   12554:	b	1242c <pclose@plt+0x1338>
   12558:	mov	r0, r7
   1255c:	bl	110e8 <closedir@plt>
   12560:	mvn	r3, #0
   12564:	str	r3, [sp, #32]
   12568:	b	1242c <pclose@plt+0x1338>
   1256c:	bl	10e9c <__stack_chk_fail@plt>
   12570:	strdeq	r8, [r2], -r0
   12574:	andeq	r0, r0, r8, lsl #2
   12578:	andeq	sl, r0, ip, lsr #1
   1257c:	andeq	r8, r2, r8, lsl #31
   12580:	andeq	sl, r0, r8, asr r0
   12584:	andeq	sl, r0, r4, asr #32
   12588:	ldrdeq	r9, [r0], -r4
   1258c:	andeq	r8, r2, r4, asr #27
   12590:	push	{r4, lr}
   12594:	subs	r4, r0, #0
   12598:	popeq	{r4, pc}
   1259c:	ldr	r0, [r4]
   125a0:	cmp	r0, #0
   125a4:	popeq	{r4, pc}
   125a8:	ldr	r3, [r4, #4]
   125ac:	cmp	r3, #0
   125b0:	bne	125c4 <pclose@plt+0x14d0>
   125b4:	bl	11040 <fclose@plt>
   125b8:	mov	r3, #0
   125bc:	str	r3, [r4]
   125c0:	pop	{r4, pc}
   125c4:	bl	110f4 <pclose@plt>
   125c8:	b	125b8 <pclose@plt+0x14c4>
   125cc:	ldr	ip, [pc, #812]	; 12900 <pclose@plt+0x180c>
   125d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125d4:	add	ip, pc, ip
   125d8:	ldr	lr, [pc, #804]	; 12904 <pclose@plt+0x1810>
   125dc:	mov	r7, r0
   125e0:	sub	sp, sp, #140	; 0x8c
   125e4:	ldr	r0, [ip, lr]
   125e8:	mov	r8, r3
   125ec:	mov	r4, #0
   125f0:	mov	r3, ip
   125f4:	add	r5, r8, #8
   125f8:	ldr	ip, [r0]
   125fc:	str	r0, [sp, #16]
   12600:	str	r1, [sp, #20]
   12604:	str	r4, [r8]
   12608:	mov	r1, r7
   1260c:	str	r4, [r8, #4]
   12610:	mov	r0, r5
   12614:	str	r2, [sp, #24]
   12618:	str	ip, [sp, #132]	; 0x84
   1261c:	bl	10f14 <strcpy@plt>
   12620:	mov	r0, r8
   12624:	bl	11fd0 <pclose@plt+0xedc>
   12628:	cmp	r0, r4
   1262c:	beq	12728 <pclose@plt+0x1634>
   12630:	ldrb	r3, [r7]
   12634:	cmp	r3, #47	; 0x2f
   12638:	beq	127a0 <pclose@plt+0x16ac>
   1263c:	ldr	r3, [sp, #20]
   12640:	ldr	r6, [r3]
   12644:	cmp	r6, #0
   12648:	beq	126f4 <pclose@plt+0x1600>
   1264c:	ldr	r4, [pc, #692]	; 12908 <pclose@plt+0x1814>
   12650:	ldr	r5, [sp, #20]
   12654:	ldr	sl, [sp, #24]
   12658:	add	r4, pc, r4
   1265c:	mov	r0, r6
   12660:	bl	10fc8 <strlen@plt>
   12664:	cmp	r0, #0
   12668:	mov	r1, r0
   1266c:	beq	12798 <pclose@plt+0x16a4>
   12670:	sub	r2, r0, #1
   12674:	add	r3, r6, r2
   12678:	ldrb	r2, [r6, r2]
   1267c:	cmp	r2, #42	; 0x2a
   12680:	bne	1274c <pclose@plt+0x1658>
   12684:	mov	r9, #0
   12688:	b	1269c <pclose@plt+0x15a8>
   1268c:	ldrb	r2, [r3, #-1]!
   12690:	mov	r1, r0
   12694:	cmp	r2, #42	; 0x2a
   12698:	bne	12758 <pclose@plt+0x1664>
   1269c:	subs	r0, r0, #1
   126a0:	add	r9, r9, #1
   126a4:	bne	1268c <pclose@plt+0x1598>
   126a8:	mov	r0, r4
   126ac:	bl	10e90 <strdup@plt>
   126b0:	mov	r6, r0
   126b4:	cmp	r6, #0
   126b8:	beq	126f4 <pclose@plt+0x1600>
   126bc:	mov	r2, r9
   126c0:	mov	r3, sl
   126c4:	mov	r1, r6
   126c8:	str	r8, [sp]
   126cc:	mov	r0, r7
   126d0:	bl	120f4 <pclose@plt+0x1000>
   126d4:	mov	r9, r0
   126d8:	mov	r0, r6
   126dc:	bl	10e48 <free@plt>
   126e0:	cmp	r9, #0
   126e4:	beq	12728 <pclose@plt+0x1634>
   126e8:	ldr	r6, [r5, #4]!
   126ec:	cmp	r6, #0
   126f0:	bne	1265c <pclose@plt+0x1568>
   126f4:	mov	r4, #1
   126f8:	b	1272c <pclose@plt+0x1638>
   126fc:	mov	r1, #4
   12700:	mov	r0, r5
   12704:	bl	11034 <access@plt>
   12708:	cmp	r0, #0
   1270c:	bne	128b4 <pclose@plt+0x17c0>
   12710:	ldr	r8, [sp, #36]	; 0x24
   12714:	ldr	r0, [r4, #4]
   12718:	mov	r1, r8
   1271c:	bl	11f30 <pclose@plt+0xe3c>
   12720:	cmp	r0, #0
   12724:	bne	1263c <pclose@plt+0x1548>
   12728:	mov	r4, #0
   1272c:	ldr	r3, [sp, #16]
   12730:	ldr	r2, [sp, #132]	; 0x84
   12734:	mov	r0, r4
   12738:	ldr	r3, [r3]
   1273c:	cmp	r2, r3
   12740:	bne	128fc <pclose@plt+0x1808>
   12744:	add	sp, sp, #140	; 0x8c
   12748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1274c:	add	r3, r6, r0
   12750:	mov	r9, #0
   12754:	ldrb	r2, [r3, #-1]
   12758:	cmp	r2, #47	; 0x2f
   1275c:	subeq	r0, r0, #1
   12760:	addeq	r3, r6, r0
   12764:	beq	12770 <pclose@plt+0x167c>
   12768:	b	12788 <pclose@plt+0x1694>
   1276c:	sub	r0, r0, #1
   12770:	cmp	r0, #0
   12774:	beq	126a8 <pclose@plt+0x15b4>
   12778:	ldrb	r2, [r3, #-1]!
   1277c:	mov	r1, r0
   12780:	cmp	r2, #47	; 0x2f
   12784:	beq	1276c <pclose@plt+0x1678>
   12788:	mov	r0, r6
   1278c:	bl	10e60 <strndup@plt>
   12790:	mov	r6, r0
   12794:	b	126b4 <pclose@plt+0x15c0>
   12798:	mov	r9, r0
   1279c:	b	126a8 <pclose@plt+0x15b4>
   127a0:	str	r4, [r8, #4]
   127a4:	mov	r0, r7
   127a8:	bl	10fc8 <strlen@plt>
   127ac:	ldr	r9, [sp, #24]
   127b0:	ldr	r4, [r9]
   127b4:	cmp	r4, #0
   127b8:	beq	1263c <pclose@plt+0x1548>
   127bc:	ldr	r3, [pc, #328]	; 1290c <pclose@plt+0x1818>
   127c0:	ldr	sl, [pc, #328]	; 12910 <pclose@plt+0x181c>
   127c4:	add	r3, pc, r3
   127c8:	add	sl, pc, sl
   127cc:	str	r3, [sp, #32]
   127d0:	add	r3, r0, #1
   127d4:	str	r3, [sp, #28]
   127d8:	str	r8, [sp, #36]	; 0x24
   127dc:	mov	r0, r4
   127e0:	bl	10fc8 <strlen@plt>
   127e4:	ldr	r3, [sp, #28]
   127e8:	add	r6, r3, r0
   127ec:	cmp	r6, #4096	; 0x1000
   127f0:	bhi	128c4 <pclose@plt+0x17d0>
   127f4:	str	r4, [sp, #4]
   127f8:	ldr	r3, [sp, #32]
   127fc:	mvn	r2, #0
   12800:	mov	r1, #1
   12804:	str	r7, [sp]
   12808:	mov	r0, r5
   1280c:	add	r8, sp, #40	; 0x28
   12810:	bl	10ff8 <__sprintf_chk@plt>
   12814:	mov	r2, r8
   12818:	mov	r1, r5
   1281c:	mov	r0, #3
   12820:	bl	10ed8 <__xstat@plt>
   12824:	subs	r4, r0, #0
   12828:	bne	1283c <pclose@plt+0x1748>
   1282c:	ldr	r3, [sp, #56]	; 0x38
   12830:	and	r3, r3, #61440	; 0xf000
   12834:	cmp	r3, #32768	; 0x8000
   12838:	beq	128d8 <pclose@plt+0x17e4>
   1283c:	ldr	r4, [pc, #208]	; 12914 <pclose@plt+0x1820>
   12840:	add	r4, pc, r4
   12844:	ldr	r3, [r4, #4]
   12848:	cmp	r3, #0
   1284c:	beq	128c4 <pclose@plt+0x17d0>
   12850:	ldr	fp, [r4]
   12854:	mov	r0, fp
   12858:	bl	10fc8 <strlen@plt>
   1285c:	add	r0, r6, r0
   12860:	cmp	r0, #4096	; 0x1000
   12864:	bhi	128b4 <pclose@plt+0x17c0>
   12868:	ldr	r3, [r9]
   1286c:	mvn	r2, #0
   12870:	str	r3, [sp, #4]
   12874:	mov	r1, #1
   12878:	mov	r3, sl
   1287c:	str	fp, [sp, #8]
   12880:	str	r7, [sp]
   12884:	mov	r0, r5
   12888:	bl	10ff8 <__sprintf_chk@plt>
   1288c:	mov	r2, r8
   12890:	mov	r1, r5
   12894:	mov	r0, #3
   12898:	bl	10ed8 <__xstat@plt>
   1289c:	cmp	r0, #0
   128a0:	bne	128b4 <pclose@plt+0x17c0>
   128a4:	ldr	r3, [sp, #56]	; 0x38
   128a8:	and	r3, r3, #61440	; 0xf000
   128ac:	cmp	r3, #32768	; 0x8000
   128b0:	beq	126fc <pclose@plt+0x1608>
   128b4:	add	r4, r4, #8
   128b8:	ldr	r3, [r4, #4]
   128bc:	cmp	r3, #0
   128c0:	bne	12850 <pclose@plt+0x175c>
   128c4:	ldr	r4, [r9, #4]!
   128c8:	cmp	r4, #0
   128cc:	bne	127dc <pclose@plt+0x16e8>
   128d0:	ldr	r8, [sp, #36]	; 0x24
   128d4:	b	1263c <pclose@plt+0x1548>
   128d8:	ldr	r1, [pc, #56]	; 12918 <pclose@plt+0x1824>
   128dc:	mov	r0, r5
   128e0:	add	r1, pc, r1
   128e4:	bl	10e3c <fopen@plt>
   128e8:	ldr	r3, [sp, #36]	; 0x24
   128ec:	cmp	r0, #0
   128f0:	str	r0, [r3]
   128f4:	beq	1283c <pclose@plt+0x1748>
   128f8:	b	1272c <pclose@plt+0x1638>
   128fc:	bl	10e9c <__stack_chk_fail@plt>
   12900:	andeq	r8, r2, r4, lsr #20
   12904:	andeq	r0, r0, r8, lsl #2
   12908:	andeq	r9, r0, r8, ror #23
   1290c:	andeq	r9, r0, ip, lsl #21
   12910:	muleq	r0, r0, sl
   12914:	strdeq	r8, [r2], -r0
   12918:	andeq	ip, r0, r8, ror pc
   1291c:	push	{r4, r5, r6, lr}
   12920:	mov	r5, r0
   12924:	ldr	r0, [pc, #64]	; 1296c <pclose@plt+0x1878>
   12928:	bl	10f50 <malloc@plt>
   1292c:	subs	r4, r0, #0
   12930:	beq	12954 <pclose@plt+0x1860>
   12934:	mov	r1, r5
   12938:	mov	r2, #4096	; 0x1000
   1293c:	add	r0, r4, #8
   12940:	bl	10f20 <__strcpy_chk@plt>
   12944:	mov	r0, r4
   12948:	bl	11fd0 <pclose@plt+0xedc>
   1294c:	cmp	r0, #0
   12950:	blt	1295c <pclose@plt+0x1868>
   12954:	mov	r0, r4
   12958:	pop	{r4, r5, r6, pc}
   1295c:	mov	r0, r4
   12960:	bl	10e48 <free@plt>
   12964:	mov	r4, #0
   12968:	b	12954 <pclose@plt+0x1860>
   1296c:	andeq	r1, r0, r8
   12970:	push	{r4, lr}
   12974:	mov	r1, #1
   12978:	mov	r4, r0
   1297c:	ldrd	r2, [sp, #12]
   12980:	bl	10f74 <__vfprintf_chk@plt>
   12984:	mov	r1, r4
   12988:	mov	r0, #10
   1298c:	pop	{r4, lr}
   12990:	b	1107c <fputc@plt>
   12994:	ldr	ip, [pc, #96]	; 129fc <pclose@plt+0x1908>
   12998:	push	{r4, r5, r6, lr}
   1299c:	add	ip, pc, ip
   129a0:	ldr	lr, [pc, #88]	; 12a00 <pclose@plt+0x190c>
   129a4:	ldr	r5, [r0, #20]
   129a8:	sub	sp, sp, #24
   129ac:	ldr	r4, [ip, lr]
   129b0:	cmp	r5, #0
   129b4:	ldr	r6, [sp, #40]	; 0x28
   129b8:	ldr	ip, [r4]
   129bc:	ldr	lr, [sp, #44]	; 0x2c
   129c0:	str	ip, [sp, #20]
   129c4:	beq	129e0 <pclose@plt+0x18ec>
   129c8:	add	ip, sp, #48	; 0x30
   129cc:	ldr	r0, [r0, #24]
   129d0:	stm	sp, {r6, lr}
   129d4:	str	ip, [sp, #8]
   129d8:	str	ip, [sp, #16]
   129dc:	blx	r5
   129e0:	ldr	r2, [sp, #20]
   129e4:	ldr	r3, [r4]
   129e8:	cmp	r2, r3
   129ec:	bne	129f8 <pclose@plt+0x1904>
   129f0:	add	sp, sp, #24
   129f4:	pop	{r4, r5, r6, pc}
   129f8:	bl	10e9c <__stack_chk_fail@plt>
   129fc:	andeq	r8, r2, ip, asr r6
   12a00:	andeq	r0, r0, r8, lsl #2
   12a04:	push	{r4, r5, r6, r7, lr}
   12a08:	mov	r4, r0
   12a0c:	sub	sp, sp, #20
   12a10:	mov	r0, #16
   12a14:	mov	r6, r1
   12a18:	mov	r5, r2
   12a1c:	bl	10f50 <malloc@plt>
   12a20:	subs	r7, r0, #0
   12a24:	beq	12a4c <pclose@plt+0x1958>
   12a28:	mov	r1, r5
   12a2c:	mov	r2, #0
   12a30:	bl	1b15c <pclose@plt+0xa068>
   12a34:	subs	r5, r0, #0
   12a38:	movge	r0, #0
   12a3c:	strge	r7, [r6]
   12a40:	blt	12a64 <pclose@plt+0x1970>
   12a44:	add	sp, sp, #20
   12a48:	pop	{r4, r5, r6, r7, pc}
   12a4c:	ldr	r3, [r4, #28]
   12a50:	cmp	r3, #2
   12a54:	bgt	12ac0 <pclose@plt+0x19cc>
   12a58:	mvn	r0, #0
   12a5c:	add	sp, sp, #20
   12a60:	pop	{r4, r5, r6, r7, pc}
   12a64:	ldr	r3, [r4, #28]
   12a68:	cmp	r3, #2
   12a6c:	ble	12a58 <pclose@plt+0x1964>
   12a70:	ldr	r1, [pc, #132]	; 12afc <pclose@plt+0x1a08>
   12a74:	mov	r2, #5
   12a78:	add	r1, pc, r1
   12a7c:	mov	r0, #0
   12a80:	bl	10e84 <dcgettext@plt>
   12a84:	mov	r6, r0
   12a88:	mov	r0, r5
   12a8c:	bl	10f68 <strerror@plt>
   12a90:	ldr	r3, [pc, #104]	; 12b00 <pclose@plt+0x1a0c>
   12a94:	ldr	r2, [pc, #104]	; 12b04 <pclose@plt+0x1a10>
   12a98:	add	r3, pc, r3
   12a9c:	add	r2, pc, r2
   12aa0:	stm	sp, {r3, r6}
   12aa4:	mov	r1, #3
   12aa8:	mov	r3, #146	; 0x92
   12aac:	str	r0, [sp, #8]
   12ab0:	mov	r0, r4
   12ab4:	bl	12994 <pclose@plt+0x18a0>
   12ab8:	mvn	r0, #0
   12abc:	b	12a44 <pclose@plt+0x1950>
   12ac0:	ldr	r1, [pc, #64]	; 12b08 <pclose@plt+0x1a14>
   12ac4:	mov	r2, #5
   12ac8:	add	r1, pc, r1
   12acc:	bl	10e84 <dcgettext@plt>
   12ad0:	ldr	r2, [pc, #52]	; 12b0c <pclose@plt+0x1a18>
   12ad4:	mov	r3, #140	; 0x8c
   12ad8:	add	r2, pc, r2
   12adc:	str	r2, [sp]
   12ae0:	ldr	r2, [pc, #40]	; 12b10 <pclose@plt+0x1a1c>
   12ae4:	mov	r1, #3
   12ae8:	add	r2, pc, r2
   12aec:	str	r0, [sp, #4]
   12af0:	mov	r0, r4
   12af4:	bl	12994 <pclose@plt+0x18a0>
   12af8:	b	12a58 <pclose@plt+0x1964>
   12afc:	andeq	r9, r0, r4, lsr r8
   12b00:	andeq	r9, r0, ip, ror #15
   12b04:	andeq	r9, r0, r4, lsl #16
   12b08:	andeq	r9, r0, r8, asr #15
   12b0c:	andeq	r9, r0, ip, lsr #15
   12b10:			; <UNDEFINED> instruction: 0x000097b8
   12b14:	cmp	r0, #0
   12b18:	strne	r1, [r0, #20]
   12b1c:	strne	r2, [r0, #24]
   12b20:	movne	r0, #0
   12b24:	mvneq	r0, #0
   12b28:	bx	lr
   12b2c:	cmp	r0, #0
   12b30:	ldrne	r0, [r0, #28]
   12b34:	mvneq	r0, #0
   12b38:	bx	lr
   12b3c:	cmp	r0, #0
   12b40:	strne	r1, [r0, #28]
   12b44:	movne	r0, #0
   12b48:	mvneq	r0, #0
   12b4c:	bx	lr
   12b50:	cmp	r0, #0
   12b54:	ldrne	r0, [r0]
   12b58:	mvneq	r0, #0
   12b5c:	bx	lr
   12b60:	cmp	r0, #0
   12b64:	strne	r1, [r0]
   12b68:	movne	r0, #0
   12b6c:	mvneq	r0, #0
   12b70:	bx	lr
   12b74:	push	{r4, r5, r6, lr}
   12b78:	subs	r4, r0, #0
   12b7c:	beq	12cd4 <pclose@plt+0x1be0>
   12b80:	ldr	r0, [r4, #8]
   12b84:	cmp	r0, #0
   12b88:	beq	12be0 <pclose@plt+0x1aec>
   12b8c:	ldr	r3, [r0, #12]
   12b90:	cmp	r3, #0
   12b94:	beq	12bcc <pclose@plt+0x1ad8>
   12b98:	mov	r5, #0
   12b9c:	mov	r1, r5
   12ba0:	bl	1b2a8 <pclose@plt+0xa1b4>
   12ba4:	add	r5, r5, #1
   12ba8:	subs	r6, r0, #0
   12bac:	beq	12bbc <pclose@plt+0x1ac8>
   12bb0:	bl	1b1b0 <pclose@plt+0xa0bc>
   12bb4:	mov	r0, r6
   12bb8:	bl	10e48 <free@plt>
   12bbc:	ldr	r0, [r4, #8]
   12bc0:	ldr	r3, [r0, #12]
   12bc4:	cmp	r3, r5
   12bc8:	bhi	12b9c <pclose@plt+0x1aa8>
   12bcc:	bl	1b1b0 <pclose@plt+0xa0bc>
   12bd0:	ldr	r0, [r4, #8]
   12bd4:	bl	10e48 <free@plt>
   12bd8:	mov	r3, #0
   12bdc:	str	r3, [r4, #8]
   12be0:	ldr	r0, [r4, #12]
   12be4:	cmp	r0, #0
   12be8:	beq	12c38 <pclose@plt+0x1b44>
   12bec:	ldr	r3, [r0, #12]
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c24 <pclose@plt+0x1b30>
   12bf8:	mov	r5, #0
   12bfc:	mov	r1, r5
   12c00:	bl	1b2a8 <pclose@plt+0xa1b4>
   12c04:	add	r5, r5, #1
   12c08:	cmp	r0, #0
   12c0c:	beq	12c14 <pclose@plt+0x1b20>
   12c10:	bl	10e48 <free@plt>
   12c14:	ldr	r0, [r4, #12]
   12c18:	ldr	r3, [r0, #12]
   12c1c:	cmp	r3, r5
   12c20:	bhi	12bfc <pclose@plt+0x1b08>
   12c24:	bl	1b1b0 <pclose@plt+0xa0bc>
   12c28:	ldr	r0, [r4, #12]
   12c2c:	bl	10e48 <free@plt>
   12c30:	mov	r3, #0
   12c34:	str	r3, [r4, #12]
   12c38:	ldr	r0, [r4, #16]
   12c3c:	cmp	r0, #0
   12c40:	beq	12c90 <pclose@plt+0x1b9c>
   12c44:	ldr	r3, [r0, #12]
   12c48:	cmp	r3, #0
   12c4c:	beq	12c7c <pclose@plt+0x1b88>
   12c50:	mov	r5, #0
   12c54:	mov	r1, r5
   12c58:	bl	1b2a8 <pclose@plt+0xa1b4>
   12c5c:	add	r5, r5, #1
   12c60:	cmp	r0, #0
   12c64:	beq	12c6c <pclose@plt+0x1b78>
   12c68:	bl	10e48 <free@plt>
   12c6c:	ldr	r0, [r4, #16]
   12c70:	ldr	r3, [r0, #12]
   12c74:	cmp	r3, r5
   12c78:	bhi	12c54 <pclose@plt+0x1b60>
   12c7c:	bl	1b1b0 <pclose@plt+0xa0bc>
   12c80:	ldr	r0, [r4, #16]
   12c84:	bl	10e48 <free@plt>
   12c88:	mov	r3, #0
   12c8c:	str	r3, [r4, #16]
   12c90:	ldr	r0, [r4, #36]	; 0x24
   12c94:	cmp	r0, #0
   12c98:	beq	12cb0 <pclose@plt+0x1bbc>
   12c9c:	bl	1b1b0 <pclose@plt+0xa0bc>
   12ca0:	ldr	r0, [r4, #36]	; 0x24
   12ca4:	bl	10e48 <free@plt>
   12ca8:	mov	r3, #0
   12cac:	str	r3, [r4, #36]	; 0x24
   12cb0:	ldr	r0, [r4, #40]	; 0x28
   12cb4:	cmp	r0, #0
   12cb8:	popeq	{r4, r5, r6, pc}
   12cbc:	bl	1b1b0 <pclose@plt+0xa0bc>
   12cc0:	ldr	r0, [r4, #40]	; 0x28
   12cc4:	bl	10e48 <free@plt>
   12cc8:	mov	r0, #0
   12ccc:	str	r0, [r4, #40]	; 0x28
   12cd0:	pop	{r4, r5, r6, pc}
   12cd4:	mvn	r0, #0
   12cd8:	pop	{r4, r5, r6, pc}
   12cdc:	push	{r4, lr}
   12ce0:	mov	r1, #1
   12ce4:	mov	r0, #128	; 0x80
   12ce8:	bl	10e18 <calloc@plt>
   12cec:	ldr	r2, [pc, #192]	; 12db4 <pclose@plt+0x1cc0>
   12cf0:	add	r2, pc, r2
   12cf4:	subs	r4, r0, #0
   12cf8:	beq	12d98 <pclose@plt+0x1ca4>
   12cfc:	ldr	r3, [pc, #180]	; 12db8 <pclose@plt+0x1cc4>
   12d00:	ldr	r1, [pc, #180]	; 12dbc <pclose@plt+0x1cc8>
   12d04:	ldr	r3, [r2, r3]
   12d08:	add	r1, pc, r1
   12d0c:	ldr	r2, [r3]
   12d10:	bl	12b14 <pclose@plt+0x1a20>
   12d14:	mov	r1, #3
   12d18:	mov	r0, r4
   12d1c:	bl	12b3c <pclose@plt+0x1a48>
   12d20:	mov	r2, #4
   12d24:	add	r1, r4, #8
   12d28:	mov	r0, r4
   12d2c:	bl	12a04 <pclose@plt+0x1910>
   12d30:	cmp	r0, #0
   12d34:	blt	12da0 <pclose@plt+0x1cac>
   12d38:	mov	r2, #4
   12d3c:	add	r1, r4, #12
   12d40:	mov	r0, r4
   12d44:	bl	12a04 <pclose@plt+0x1910>
   12d48:	cmp	r0, #0
   12d4c:	blt	12da0 <pclose@plt+0x1cac>
   12d50:	mov	r2, #4
   12d54:	add	r1, r4, #16
   12d58:	mov	r0, r4
   12d5c:	bl	12a04 <pclose@plt+0x1910>
   12d60:	cmp	r0, #0
   12d64:	blt	12da0 <pclose@plt+0x1cac>
   12d68:	mov	r2, #1
   12d6c:	add	r1, r4, #36	; 0x24
   12d70:	mov	r0, r4
   12d74:	bl	12a04 <pclose@plt+0x1910>
   12d78:	cmp	r0, #0
   12d7c:	blt	12da0 <pclose@plt+0x1cac>
   12d80:	mov	r2, #4
   12d84:	add	r1, r4, #40	; 0x28
   12d88:	mov	r0, r4
   12d8c:	bl	12a04 <pclose@plt+0x1910>
   12d90:	cmp	r0, #0
   12d94:	blt	12da0 <pclose@plt+0x1cac>
   12d98:	mov	r0, r4
   12d9c:	pop	{r4, pc}
   12da0:	mov	r0, r4
   12da4:	mov	r4, #0
   12da8:	bl	12b74 <pclose@plt+0x1a80>
   12dac:	mov	r0, r4
   12db0:	pop	{r4, pc}
   12db4:	andeq	r8, r2, r8, lsl #6
   12db8:	andeq	r0, r0, ip, lsl #2
   12dbc:			; <UNDEFINED> instruction: 0xfffffc60
   12dc0:	push	{r4, r5, r6, lr}
   12dc4:	mov	r5, r0
   12dc8:	mov	r4, r1
   12dcc:	mov	r0, #39	; 0x27
   12dd0:	mov	r1, r5
   12dd4:	mov	r6, r2
   12dd8:	bl	1107c <fputc@plt>
   12ddc:	cmp	r4, #39	; 0x27
   12de0:	cmpne	r4, #92	; 0x5c
   12de4:	beq	12e0c <pclose@plt+0x1d18>
   12de8:	bl	10fb0 <__ctype_b_loc@plt>
   12dec:	lsl	r3, r4, #1
   12df0:	ldr	r2, [r0]
   12df4:	ldrsh	r3, [r2, r3]
   12df8:	cmp	r3, #0
   12dfc:	blt	12e5c <pclose@plt+0x1d68>
   12e00:	ldr	r2, [pc, #96]	; 12e68 <pclose@plt+0x1d74>
   12e04:	add	r2, pc, r2
   12e08:	b	12e14 <pclose@plt+0x1d20>
   12e0c:	ldr	r2, [pc, #88]	; 12e6c <pclose@plt+0x1d78>
   12e10:	add	r2, pc, r2
   12e14:	mov	r3, r4
   12e18:	mov	r1, #1
   12e1c:	mov	r0, r5
   12e20:	bl	11028 <__fprintf_chk@plt>
   12e24:	cmp	r6, #0
   12e28:	bne	12e44 <pclose@plt+0x1d50>
   12e2c:	ldr	r2, [pc, #60]	; 12e70 <pclose@plt+0x1d7c>
   12e30:	mov	r0, r5
   12e34:	add	r2, pc, r2
   12e38:	mov	r1, #1
   12e3c:	pop	{r4, r5, r6, lr}
   12e40:	b	11028 <__fprintf_chk@plt>
   12e44:	ldr	r2, [pc, #40]	; 12e74 <pclose@plt+0x1d80>
   12e48:	mov	r0, r5
   12e4c:	add	r2, pc, r2
   12e50:	mov	r1, #1
   12e54:	pop	{r4, r5, r6, lr}
   12e58:	b	11028 <__fprintf_chk@plt>
   12e5c:	ldr	r2, [pc, #20]	; 12e78 <pclose@plt+0x1d84>
   12e60:	add	r2, pc, r2
   12e64:	b	12e14 <pclose@plt+0x1d20>
   12e68:	ldrdeq	r9, [r0], -r8
   12e6c:	ldrdeq	r9, [r0], -r4
   12e70:			; <UNDEFINED> instruction: 0x000094bc
   12e74:	andeq	r9, r0, r0, lsr #9
   12e78:	andeq	r9, r0, r8, lsl #9
   12e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e80:	mov	r7, r0
   12e84:	sub	sp, sp, #20
   12e88:	mov	r0, #32
   12e8c:	mov	r4, r2
   12e90:	mov	r8, r3
   12e94:	mov	r6, r1
   12e98:	bl	1107c <fputc@plt>
   12e9c:	ldr	r2, [pc, #592]	; 130f4 <pclose@plt+0x2000>
   12ea0:	ldr	r1, [pc, #592]	; 130f8 <pclose@plt+0x2004>
   12ea4:	add	r2, pc, r2
   12ea8:	asr	r5, r4, #8
   12eac:	ldr	r3, [r2, r1]
   12eb0:	ldr	r3, [r3]
   12eb4:	cmp	r3, r5
   12eb8:	str	r3, [sp, #12]
   12ebc:	bhi	12ef8 <pclose@plt+0x1e04>
   12ec0:	cmp	r8, #0
   12ec4:	bne	12f5c <pclose@plt+0x1e68>
   12ec8:	mov	r0, r7
   12ecc:	mov	r1, r4
   12ed0:	bl	1a75c <pclose@plt+0x9668>
   12ed4:	subs	r3, r0, #0
   12ed8:	beq	12f5c <pclose@plt+0x1e68>
   12edc:	ldr	r2, [pc, #536]	; 130fc <pclose@plt+0x2008>
   12ee0:	mov	r0, r6
   12ee4:	add	r2, pc, r2
   12ee8:	mov	r1, #1
   12eec:	add	sp, sp, #20
   12ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ef4:	b	11028 <__fprintf_chk@plt>
   12ef8:	cmp	r5, #11
   12efc:	beq	12ff4 <pclose@plt+0x1f00>
   12f00:	clz	r3, r5
   12f04:	mov	fp, #0
   12f08:	lsr	r3, r3, #5
   12f0c:	clz	sl, r8
   12f10:	lsr	sl, sl, #5
   12f14:	tst	sl, r3
   12f18:	uxtb	r9, r4
   12f1c:	bne	13060 <pclose@plt+0x1f6c>
   12f20:	cmp	r8, #0
   12f24:	beq	12f7c <pclose@plt+0x1e88>
   12f28:	cmp	fp, #0
   12f2c:	bne	12fe8 <pclose@plt+0x1ef4>
   12f30:	ldr	r3, [pc, #456]	; 13100 <pclose@plt+0x200c>
   12f34:	add	r3, pc, r3
   12f38:	ldr	r2, [pc, #452]	; 13104 <pclose@plt+0x2010>
   12f3c:	str	r3, [sp]
   12f40:	mov	r0, r6
   12f44:	mov	r3, r4
   12f48:	add	r2, pc, r2
   12f4c:	mov	r1, #1
   12f50:	bl	11028 <__fprintf_chk@plt>
   12f54:	add	sp, sp, #20
   12f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f5c:	ldr	r2, [pc, #420]	; 13108 <pclose@plt+0x2014>
   12f60:	eor	r3, r4, #61440	; 0xf000
   12f64:	mov	r0, r6
   12f68:	add	r2, pc, r2
   12f6c:	mov	r1, #1
   12f70:	add	sp, sp, #20
   12f74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f78:	b	11028 <__fprintf_chk@plt>
   12f7c:	ldr	r3, [sp, #12]
   12f80:	cmp	r3, r5
   12f84:	bhi	13010 <pclose@plt+0x1f1c>
   12f88:	cmp	r5, #8
   12f8c:	movne	r8, #0
   12f90:	andeq	r8, sl, #1
   12f94:	cmp	r8, #0
   12f98:	beq	13094 <pclose@plt+0x1fa0>
   12f9c:	cmp	r9, #127	; 0x7f
   12fa0:	bhi	12f28 <pclose@plt+0x1e34>
   12fa4:	mov	r1, #0
   12fa8:	mov	r0, r7
   12fac:	bl	1a5cc <pclose@plt+0x94d8>
   12fb0:	cmp	r0, r9
   12fb4:	bls	12f28 <pclose@plt+0x1e34>
   12fb8:	mov	r2, r9
   12fbc:	mov	r0, r7
   12fc0:	mov	r1, #0
   12fc4:	bl	1a674 <pclose@plt+0x9580>
   12fc8:	ldrb	r3, [r0]
   12fcc:	cmp	r3, #0
   12fd0:	beq	12f28 <pclose@plt+0x1e34>
   12fd4:	ldr	r2, [pc, #304]	; 1310c <pclose@plt+0x2018>
   12fd8:	mov	r3, r0
   12fdc:	add	r2, pc, r2
   12fe0:	mov	r0, r6
   12fe4:	b	12f6c <pclose@plt+0x1e78>
   12fe8:	ldr	r3, [pc, #288]	; 13110 <pclose@plt+0x201c>
   12fec:	add	r3, pc, r3
   12ff0:	b	12f38 <pclose@plt+0x1e44>
   12ff4:	mov	r1, r6
   12ff8:	mov	r0, #43	; 0x2b
   12ffc:	bl	1107c <fputc@plt>
   13000:	mov	r3, #1
   13004:	mov	fp, r3
   13008:	mov	r5, #0
   1300c:	b	12f0c <pclose@plt+0x1e18>
   13010:	mov	r1, r5
   13014:	mov	r0, r7
   13018:	bl	1a5cc <pclose@plt+0x94d8>
   1301c:	cmp	r0, r9
   13020:	bls	12f88 <pclose@plt+0x1e94>
   13024:	mov	r2, r9
   13028:	mov	r1, r5
   1302c:	mov	r0, r7
   13030:	bl	1a674 <pclose@plt+0x9580>
   13034:	ldrb	r2, [r0]
   13038:	cmp	r2, #0
   1303c:	beq	12f88 <pclose@plt+0x1e94>
   13040:	ldr	r2, [pc, #204]	; 13114 <pclose@plt+0x2020>
   13044:	str	r0, [sp]
   13048:	rsb	r3, fp, #16
   1304c:	mov	r0, r6
   13050:	add	r2, pc, r2
   13054:	mov	r1, #1
   13058:	bl	11028 <__fprintf_chk@plt>
   1305c:	b	12f54 <pclose@plt+0x1e60>
   13060:	mov	r1, r4
   13064:	mov	r0, r7
   13068:	bl	1a75c <pclose@plt+0x9668>
   1306c:	cmp	r0, #0
   13070:	beq	12f7c <pclose@plt+0x1e88>
   13074:	ldr	r2, [pc, #156]	; 13118 <pclose@plt+0x2024>
   13078:	str	r0, [sp]
   1307c:	rsb	r3, fp, #16
   13080:	mov	r0, r6
   13084:	add	r2, pc, r2
   13088:	mov	r1, #1
   1308c:	bl	11028 <__fprintf_chk@plt>
   13090:	b	12f54 <pclose@plt+0x1e60>
   13094:	cmp	r5, #13
   13098:	movne	r5, #0
   1309c:	andeq	r5, sl, #1
   130a0:	cmp	r5, #0
   130a4:	beq	12f28 <pclose@plt+0x1e34>
   130a8:	mov	r1, r8
   130ac:	mov	r0, r7
   130b0:	bl	1a5cc <pclose@plt+0x94d8>
   130b4:	cmp	r0, r9
   130b8:	bls	12f28 <pclose@plt+0x1e34>
   130bc:	mov	r2, r9
   130c0:	mov	r1, r8
   130c4:	mov	r0, r7
   130c8:	bl	1a674 <pclose@plt+0x9580>
   130cc:	ldrb	r3, [r0]
   130d0:	cmp	r3, #0
   130d4:	beq	12f28 <pclose@plt+0x1e34>
   130d8:	ldr	r1, [pc, #60]	; 1311c <pclose@plt+0x2028>
   130dc:	mov	r2, r0
   130e0:	add	r1, pc, r1
   130e4:	mov	r0, #1
   130e8:	add	sp, sp, #20
   130ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130f0:	b	1101c <__printf_chk@plt>
   130f4:	andeq	r8, r2, r4, asr r1
   130f8:	andeq	r0, r0, r8, lsr #2
   130fc:	andeq	r9, r0, r0, lsl r4
   13100:	andeq	sl, r0, r4, asr #6
   13104:	andeq	r9, r0, r8, ror #7
   13108:	muleq	r0, r4, r3
   1310c:	andeq	r9, r0, ip, lsr r3
   13110:	andeq	r9, r0, r0, lsl #12
   13114:	andeq	r9, r0, r0, asr #5
   13118:	andeq	r9, r0, ip, lsl #5
   1311c:	andeq	r9, r0, r4, asr #4
   13120:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13124:	mov	r7, r0
   13128:	ldr	r6, [sp, #40]	; 0x28
   1312c:	ldr	r4, [pc, #196]	; 131f8 <pclose@plt+0x2104>
   13130:	cmp	r6, #0
   13134:	add	r4, pc, r4
   13138:	mov	r8, r2
   1313c:	mov	r9, r3
   13140:	mov	r5, r1
   13144:	ldrb	sl, [sp, #44]	; 0x2c
   13148:	bne	131a0 <pclose@plt+0x20ac>
   1314c:	ldr	r0, [pc, #168]	; 131fc <pclose@plt+0x2108>
   13150:	mov	r3, r1
   13154:	mov	r2, #6
   13158:	mov	r1, #1
   1315c:	add	r0, pc, r0
   13160:	bl	10efc <fwrite@plt>
   13164:	ldr	r2, [pc, #148]	; 13200 <pclose@plt+0x210c>
   13168:	mov	r3, r9
   1316c:	add	r2, pc, r2
   13170:	mov	r1, #1
   13174:	mov	r0, r5
   13178:	bl	11028 <__fprintf_chk@plt>
   1317c:	mov	r1, r5
   13180:	mov	r0, r7
   13184:	mov	r3, sl
   13188:	mov	r2, r8
   1318c:	bl	12e7c <pclose@plt+0x1d88>
   13190:	mov	r1, r5
   13194:	mov	r0, #10
   13198:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1319c:	b	1107c <fputc@plt>
   131a0:	mov	r0, #9
   131a4:	bl	1107c <fputc@plt>
   131a8:	ldr	r3, [pc, #84]	; 13204 <pclose@plt+0x2110>
   131ac:	ldr	r4, [r4, r3]
   131b0:	ldr	r3, [r4]
   131b4:	cmp	r3, #0
   131b8:	beq	13164 <pclose@plt+0x2070>
   131bc:	ldr	fp, [pc, #68]	; 13208 <pclose@plt+0x2114>
   131c0:	add	fp, pc, fp
   131c4:	b	131d4 <pclose@plt+0x20e0>
   131c8:	ldr	r3, [r4, #8]!
   131cc:	cmp	r3, #0
   131d0:	beq	13164 <pclose@plt+0x2070>
   131d4:	ldr	r2, [r4, #4]
   131d8:	asr	r2, r6, r2
   131dc:	tst	r2, #1
   131e0:	beq	131c8 <pclose@plt+0x20d4>
   131e4:	mov	r2, fp
   131e8:	mov	r1, #1
   131ec:	mov	r0, r5
   131f0:	bl	11028 <__fprintf_chk@plt>
   131f4:	b	131c8 <pclose@plt+0x20d4>
   131f8:	andeq	r7, r2, r4, asr #29
   131fc:	strdeq	r9, [r0], -ip
   13200:	ldrdeq	r9, [r0], -ip
   13204:	andeq	r0, r0, r0, lsl r1
   13208:	andeq	r9, r0, r4, lsl #3
   1320c:	ldr	r3, [pc, #132]	; 13298 <pclose@plt+0x21a4>
   13210:	push	{r4, r5, r6, r7, r8, lr}
   13214:	add	r3, pc, r3
   13218:	ldr	r6, [pc, #124]	; 1329c <pclose@plt+0x21a8>
   1321c:	ldr	r8, [pc, #124]	; 132a0 <pclose@plt+0x21ac>
   13220:	ldr	r7, [pc, #124]	; 132a4 <pclose@plt+0x21b0>
   13224:	mov	r4, #0
   13228:	add	r6, pc, r6
   1322c:	add	r8, pc, r8
   13230:	add	r7, pc, r7
   13234:	mov	r5, r0
   13238:	strb	r4, [r3]
   1323c:	b	1325c <pclose@plt+0x2168>
   13240:	mov	r2, #60	; 0x3c
   13244:	ldr	r1, [r8, r4, lsl #2]
   13248:	mov	r0, r7
   1324c:	bl	10fec <__strcat_chk@plt>
   13250:	add	r4, r4, #1
   13254:	cmp	r4, #8
   13258:	beq	1328c <pclose@plt+0x2198>
   1325c:	asr	r3, r5, r4
   13260:	tst	r3, #1
   13264:	beq	13250 <pclose@plt+0x215c>
   13268:	ldrb	r3, [r6]
   1326c:	cmp	r3, #0
   13270:	beq	13240 <pclose@plt+0x214c>
   13274:	ldr	r1, [pc, #44]	; 132a8 <pclose@plt+0x21b4>
   13278:	mov	r2, #60	; 0x3c
   1327c:	add	r1, pc, r1
   13280:	mov	r0, r6
   13284:	bl	10fec <__strcat_chk@plt>
   13288:	b	13240 <pclose@plt+0x214c>
   1328c:	ldr	r0, [pc, #24]	; 132ac <pclose@plt+0x21b8>
   13290:	add	r0, pc, r0
   13294:	pop	{r4, r5, r6, r7, r8, pc}
   13298:	ldrdeq	r7, [r2], -r0
   1329c:			; <UNDEFINED> instruction: 0x00027fbc
   132a0:	andeq	r2, r2, r4, asr #28
   132a4:			; <UNDEFINED> instruction: 0x00027fb4
   132a8:	andeq	ip, r0, r0, lsl #5
   132ac:	andeq	r7, r2, r4, asr pc
   132b0:	push	{r4, r5, r6, lr}
   132b4:	mov	r5, r0
   132b8:	mov	r4, r1
   132bc:	mov	r0, #39	; 0x27
   132c0:	mov	r1, r5
   132c4:	bl	1107c <fputc@plt>
   132c8:	cmp	r4, #39	; 0x27
   132cc:	cmpne	r4, #92	; 0x5c
   132d0:	beq	1330c <pclose@plt+0x2218>
   132d4:	bl	10fb0 <__ctype_b_loc@plt>
   132d8:	lsl	r3, r4, #1
   132dc:	ldr	r2, [r0]
   132e0:	ldrsh	r3, [r2, r3]
   132e4:	cmp	r3, #0
   132e8:	blt	13334 <pclose@plt+0x2240>
   132ec:	sub	r3, r4, #32
   132f0:	clz	r3, r3
   132f4:	lsr	r3, r3, #5
   132f8:	orrs	r3, r3, r4, lsr #7
   132fc:	beq	13340 <pclose@plt+0x224c>
   13300:	ldr	r2, [pc, #68]	; 1334c <pclose@plt+0x2258>
   13304:	add	r2, pc, r2
   13308:	b	13314 <pclose@plt+0x2220>
   1330c:	ldr	r2, [pc, #60]	; 13350 <pclose@plt+0x225c>
   13310:	add	r2, pc, r2
   13314:	mov	r3, r4
   13318:	mov	r1, #1
   1331c:	mov	r0, r5
   13320:	bl	11028 <__fprintf_chk@plt>
   13324:	mov	r1, r5
   13328:	mov	r0, #39	; 0x27
   1332c:	pop	{r4, r5, r6, lr}
   13330:	b	1107c <fputc@plt>
   13334:	ldr	r2, [pc, #24]	; 13354 <pclose@plt+0x2260>
   13338:	add	r2, pc, r2
   1333c:	b	13314 <pclose@plt+0x2220>
   13340:	ldr	r2, [pc, #16]	; 13358 <pclose@plt+0x2264>
   13344:	add	r2, pc, r2
   13348:	b	13314 <pclose@plt+0x2220>
   1334c:	andeq	r8, r0, r4, ror #31
   13350:	ldrdeq	r8, [r0], -r4
   13354:			; <UNDEFINED> instruction: 0x00008fb0
   13358:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1335c:	ldr	r3, [pc, #376]	; 134dc <pclose@plt+0x23e8>
   13360:	ldr	ip, [pc, #376]	; 134e0 <pclose@plt+0x23ec>
   13364:	ldr	r2, [pc, #376]	; 134e4 <pclose@plt+0x23f0>
   13368:	add	r3, pc, r3
   1336c:	add	r2, pc, r2
   13370:	push	{r4, r5, r6, r7, r8, r9, lr}
   13374:	mov	r5, r0
   13378:	ldr	r8, [r3, ip]
   1337c:	sub	sp, sp, #28
   13380:	mov	r6, r1
   13384:	ldm	r2, {r0, r1}
   13388:	add	r4, sp, #12
   1338c:	ldr	r3, [r8]
   13390:	stm	r4, {r0, r1}
   13394:	mov	r0, r5
   13398:	str	r3, [sp, #20]
   1339c:	bl	14f50 <pclose@plt+0x3e5c>
   133a0:	cmp	r0, #0
   133a4:	blt	133d0 <pclose@plt+0x22dc>
   133a8:	mov	r0, r4
   133ac:	mov	r3, r6
   133b0:	mov	r2, #1
   133b4:	mov	r1, #7
   133b8:	bl	10efc <fwrite@plt>
   133bc:	cmp	r0, #1
   133c0:	beq	133ec <pclose@plt+0x22f8>
   133c4:	ldr	r3, [r5, #28]
   133c8:	cmp	r3, #2
   133cc:	bgt	13498 <pclose@plt+0x23a4>
   133d0:	mvn	r0, #0
   133d4:	ldr	r2, [sp, #20]
   133d8:	ldr	r3, [r8]
   133dc:	cmp	r2, r3
   133e0:	bne	134d8 <pclose@plt+0x23e4>
   133e4:	add	sp, sp, #28
   133e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   133ec:	mov	r4, #0
   133f0:	add	r7, sp, #10
   133f4:	mov	r1, r4
   133f8:	mov	r0, r5
   133fc:	bl	14900 <pclose@plt+0x380c>
   13400:	mov	r2, #1
   13404:	mov	r1, r2
   13408:	mov	r3, r6
   1340c:	strb	r0, [sp, #10]
   13410:	mov	r0, r7
   13414:	bl	10efc <fwrite@plt>
   13418:	cmp	r0, #1
   1341c:	bne	133c4 <pclose@plt+0x22d0>
   13420:	add	r4, r4, #1
   13424:	cmp	r4, #256	; 0x100
   13428:	bne	133f4 <pclose@plt+0x2300>
   1342c:	mov	r9, #0
   13430:	mov	r1, r9
   13434:	mov	r0, r5
   13438:	bl	14900 <pclose@plt+0x380c>
   1343c:	cmp	r0, #0
   13440:	beq	13484 <pclose@plt+0x2390>
   13444:	mov	r4, #0
   13448:	mov	r2, r4
   1344c:	mov	r1, r9
   13450:	mov	r0, r5
   13454:	bl	14ab8 <pclose@plt+0x39c4>
   13458:	mov	r3, r6
   1345c:	mov	r2, #1
   13460:	mov	r1, #2
   13464:	strh	r0, [sp, #10]
   13468:	mov	r0, r7
   1346c:	bl	10efc <fwrite@plt>
   13470:	cmp	r0, #1
   13474:	bne	133c4 <pclose@plt+0x22d0>
   13478:	add	r4, r4, #1
   1347c:	cmp	r4, #128	; 0x80
   13480:	bne	13448 <pclose@plt+0x2354>
   13484:	add	r9, r9, #1
   13488:	cmp	r9, #256	; 0x100
   1348c:	bne	13430 <pclose@plt+0x233c>
   13490:	mov	r0, #0
   13494:	b	133d4 <pclose@plt+0x22e0>
   13498:	ldr	r1, [pc, #72]	; 134e8 <pclose@plt+0x23f4>
   1349c:	mov	r2, #5
   134a0:	add	r1, pc, r1
   134a4:	mov	r0, #0
   134a8:	bl	10e84 <dcgettext@plt>
   134ac:	ldr	r2, [pc, #56]	; 134ec <pclose@plt+0x23f8>
   134b0:	mov	r3, #86	; 0x56
   134b4:	add	r2, pc, r2
   134b8:	str	r2, [sp]
   134bc:	ldr	r2, [pc, #44]	; 134f0 <pclose@plt+0x23fc>
   134c0:	mov	r1, #3
   134c4:	add	r2, pc, r2
   134c8:	str	r0, [sp, #4]
   134cc:	mov	r0, r5
   134d0:	bl	12994 <pclose@plt+0x18a0>
   134d4:	b	133d0 <pclose@plt+0x22dc>
   134d8:	bl	10e9c <__stack_chk_fail@plt>
   134dc:	muleq	r2, r0, ip
   134e0:	andeq	r0, r0, r8, lsl #2
   134e4:	andeq	r8, r0, r4, lsr #25
   134e8:	andeq	r8, r0, r0, asr #29
   134ec:	andeq	r8, r0, r8, lsl lr
   134f0:			; <UNDEFINED> instruction: 0x00008eb8
   134f4:	ldr	r3, [pc, #1912]	; 13c74 <pclose@plt+0x2b80>
   134f8:	ldr	r2, [pc, #1912]	; 13c78 <pclose@plt+0x2b84>
   134fc:	add	r3, pc, r3
   13500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13504:	sub	sp, sp, #1040	; 0x410
   13508:	ldr	r3, [r3, r2]
   1350c:	sub	sp, sp, #4
   13510:	mov	r4, r1
   13514:	str	r3, [sp, #4]
   13518:	ldr	r3, [r3]
   1351c:	mov	r6, r0
   13520:	str	r3, [sp, #1036]	; 0x40c
   13524:	bl	14f50 <pclose@plt+0x3e5c>
   13528:	cmp	r0, #0
   1352c:	blt	13c60 <pclose@plt+0x2b6c>
   13530:	ldr	r0, [pc, #1860]	; 13c7c <pclose@plt+0x2b88>
   13534:	mov	r3, r4
   13538:	mov	r2, #65	; 0x41
   1353c:	mov	r1, #1
   13540:	add	r0, pc, r0
   13544:	bl	10efc <fwrite@plt>
   13548:	ldr	r0, [pc, #1840]	; 13c80 <pclose@plt+0x2b8c>
   1354c:	mov	r3, r4
   13550:	mov	r2, #66	; 0x42
   13554:	mov	r1, #1
   13558:	add	r0, pc, r0
   1355c:	bl	10efc <fwrite@plt>
   13560:	ldr	r0, [pc, #1820]	; 13c84 <pclose@plt+0x2b90>
   13564:	mov	r3, r4
   13568:	mov	r2, #28
   1356c:	mov	r1, #1
   13570:	add	r0, pc, r0
   13574:	bl	10efc <fwrite@plt>
   13578:	ldr	r0, [pc, #1800]	; 13c88 <pclose@plt+0x2b94>
   1357c:	ldr	sl, [pc, #1800]	; 13c8c <pclose@plt+0x2b98>
   13580:	ldr	r8, [pc, #1800]	; 13c90 <pclose@plt+0x2b9c>
   13584:	ldr	r9, [pc, #1800]	; 13c94 <pclose@plt+0x2ba0>
   13588:	mov	r3, r4
   1358c:	mov	r2, #23
   13590:	mov	r1, #1
   13594:	add	r0, pc, r0
   13598:	bl	10efc <fwrite@plt>
   1359c:	add	sl, pc, sl
   135a0:	add	r8, pc, r8
   135a4:	add	r9, pc, r9
   135a8:	mov	r5, #0
   135ac:	b	135bc <pclose@plt+0x24c8>
   135b0:	add	r5, r5, #1
   135b4:	cmp	r5, #256	; 0x100
   135b8:	beq	1367c <pclose@plt+0x2588>
   135bc:	mov	r1, r5
   135c0:	mov	r0, r6
   135c4:	bl	14900 <pclose@plt+0x380c>
   135c8:	cmp	r0, #0
   135cc:	beq	135b0 <pclose@plt+0x24bc>
   135d0:	cmp	r5, #0
   135d4:	beq	13740 <pclose@plt+0x264c>
   135d8:	ldr	r0, [pc, #1720]	; 13c98 <pclose@plt+0x2ba4>
   135dc:	mov	r3, r4
   135e0:	mov	r2, #7
   135e4:	mov	r1, #1
   135e8:	add	r0, pc, r0
   135ec:	bl	10efc <fwrite@plt>
   135f0:	uxtb	r0, r5
   135f4:	bl	1320c <pclose@plt+0x2118>
   135f8:	mov	r3, r0
   135fc:	mov	r2, sl
   13600:	mov	r1, #1
   13604:	mov	r0, r4
   13608:	bl	11028 <__fprintf_chk@plt>
   1360c:	mov	r7, #0
   13610:	b	13644 <pclose@plt+0x2550>
   13614:	mov	r2, r7
   13618:	mov	r1, r5
   1361c:	mov	r0, r6
   13620:	bl	14ab8 <pclose@plt+0x39c4>
   13624:	add	r7, r7, #1
   13628:	mov	r2, r8
   1362c:	mov	r1, #1
   13630:	eor	r3, r0, #61440	; 0xf000
   13634:	mov	r0, r4
   13638:	bl	11028 <__fprintf_chk@plt>
   1363c:	cmp	r7, #256	; 0x100
   13640:	beq	1365c <pclose@plt+0x2568>
   13644:	tst	r7, #7
   13648:	bne	13614 <pclose@plt+0x2520>
   1364c:	mov	r1, r4
   13650:	mov	r0, #10
   13654:	bl	1107c <fputc@plt>
   13658:	b	13614 <pclose@plt+0x2520>
   1365c:	mov	r3, r4
   13660:	mov	r2, #5
   13664:	mov	r1, #1
   13668:	mov	r0, r9
   1366c:	add	r5, r5, #1
   13670:	bl	10efc <fwrite@plt>
   13674:	cmp	r5, #256	; 0x100
   13678:	bne	135bc <pclose@plt+0x24c8>
   1367c:	mov	r7, #255	; 0xff
   13680:	b	1368c <pclose@plt+0x2598>
   13684:	subs	r7, r7, #1
   13688:	beq	136a0 <pclose@plt+0x25ac>
   1368c:	mov	r1, r7
   13690:	mov	r0, r6
   13694:	bl	14900 <pclose@plt+0x380c>
   13698:	cmp	r0, #0
   1369c:	beq	13684 <pclose@plt+0x2590>
   136a0:	ldr	r0, [pc, #1524]	; 13c9c <pclose@plt+0x2ba8>
   136a4:	mov	r2, #36	; 0x24
   136a8:	mov	r3, r4
   136ac:	mov	r1, #1
   136b0:	add	r0, pc, r0
   136b4:	bl	10efc <fwrite@plt>
   136b8:	ldr	fp, [pc, #1504]	; 13ca0 <pclose@plt+0x2bac>
   136bc:	ldr	r2, [pc, #1504]	; 13ca4 <pclose@plt+0x2bb0>
   136c0:	ldr	sl, [pc, #1504]	; 13ca8 <pclose@plt+0x2bb4>
   136c4:	ldr	r9, [pc, #1504]	; 13cac <pclose@plt+0x2bb8>
   136c8:	mov	r8, #0
   136cc:	add	r2, pc, r2
   136d0:	add	fp, pc, fp
   136d4:	add	sl, pc, sl
   136d8:	add	r9, pc, r9
   136dc:	mov	r1, #1
   136e0:	mov	r0, r4
   136e4:	bl	11028 <__fprintf_chk@plt>
   136e8:	mov	r1, r8
   136ec:	mov	r0, r6
   136f0:	bl	14900 <pclose@plt+0x380c>
   136f4:	cmp	r0, #0
   136f8:	beq	1374c <pclose@plt+0x2658>
   136fc:	cmp	r8, #0
   13700:	uxtb	r0, r8
   13704:	beq	13c6c <pclose@plt+0x2b78>
   13708:	bl	1320c <pclose@plt+0x2118>
   1370c:	mov	r3, r0
   13710:	mov	r2, sl
   13714:	mov	r1, #1
   13718:	mov	r0, r4
   1371c:	add	r8, r8, #1
   13720:	bl	11028 <__fprintf_chk@plt>
   13724:	cmp	r7, r8
   13728:	bcc	1376c <pclose@plt+0x2678>
   1372c:	tst	r8, #3
   13730:	beq	13a8c <pclose@plt+0x2998>
   13734:	ldr	r2, [pc, #1396]	; 13cb0 <pclose@plt+0x2bbc>
   13738:	add	r2, pc, r2
   1373c:	b	136dc <pclose@plt+0x25e8>
   13740:	ldr	r3, [pc, #1388]	; 13cb4 <pclose@plt+0x2bc0>
   13744:	add	r3, pc, r3
   13748:	b	135fc <pclose@plt+0x2508>
   1374c:	mov	r3, r4
   13750:	mov	r2, #2
   13754:	mov	r1, #1
   13758:	mov	r0, fp
   1375c:	add	r8, r8, #1
   13760:	bl	10efc <fwrite@plt>
   13764:	cmp	r7, r8
   13768:	bcs	1372c <pclose@plt+0x2638>
   1376c:	cmp	r7, #255	; 0xff
   13770:	beq	1378c <pclose@plt+0x2698>
   13774:	ldr	r0, [pc, #1340]	; 13cb8 <pclose@plt+0x2bc4>
   13778:	mov	r3, r4
   1377c:	mov	r2, #2
   13780:	mov	r1, #1
   13784:	add	r0, pc, r0
   13788:	bl	10efc <fwrite@plt>
   1378c:	ldr	r3, [r6, #8]
   13790:	ldr	r2, [pc, #1316]	; 13cbc <pclose@plt+0x2bc8>
   13794:	mov	r1, #1
   13798:	add	r2, pc, r2
   1379c:	ldr	r3, [r3, #8]
   137a0:	mov	r0, r4
   137a4:	bl	11028 <__fprintf_chk@plt>
   137a8:	ldr	r0, [pc, #1296]	; 13cc0 <pclose@plt+0x2bcc>
   137ac:	mov	r3, r4
   137b0:	mov	r2, #213	; 0xd5
   137b4:	mov	r1, #1
   137b8:	add	r0, pc, r0
   137bc:	bl	10efc <fwrite@plt>
   137c0:	b	137cc <pclose@plt+0x26d8>
   137c4:	subs	r5, r7, #0
   137c8:	beq	13bcc <pclose@plt+0x2ad8>
   137cc:	sub	r7, r5, #1
   137d0:	mov	r1, r7
   137d4:	ldr	r0, [r6, #12]
   137d8:	bl	1b2a8 <pclose@plt+0xa1b4>
   137dc:	cmp	r0, #0
   137e0:	beq	137c4 <pclose@plt+0x26d0>
   137e4:	ldr	r0, [pc, #1240]	; 13cc4 <pclose@plt+0x2bd0>
   137e8:	mov	r3, r4
   137ec:	mov	r2, #20
   137f0:	mov	r1, #1
   137f4:	add	r0, pc, r0
   137f8:	bl	10efc <fwrite@plt>
   137fc:	ldr	fp, [pc, #1220]	; 13cc8 <pclose@plt+0x2bd4>
   13800:	mov	r8, #0
   13804:	add	fp, pc, fp
   13808:	mov	r9, r8
   1380c:	add	sl, sp, #12
   13810:	mov	r1, r9
   13814:	ldr	r0, [r6, #12]
   13818:	bl	1b2a8 <pclose@plt+0xa1b4>
   1381c:	subs	r7, r0, #0
   13820:	beq	13884 <pclose@plt+0x2790>
   13824:	mov	r1, r4
   13828:	mov	r0, #9
   1382c:	str	r8, [sl, r9, lsl #2]
   13830:	bl	1107c <fputc@plt>
   13834:	ldrb	r1, [r7]
   13838:	str	r7, [sp]
   1383c:	cmp	r1, #0
   13840:	moveq	r7, r1
   13844:	beq	13868 <pclose@plt+0x2774>
   13848:	mov	r2, #1
   1384c:	mov	r0, r4
   13850:	bl	12dc0 <pclose@plt+0x1ccc>
   13854:	ldrb	r1, [r7, #1]!
   13858:	cmp	r1, #0
   1385c:	bne	13848 <pclose@plt+0x2754>
   13860:	ldr	r3, [sp]
   13864:	sub	r7, r7, r3
   13868:	mov	r3, r4
   1386c:	mov	r2, #4
   13870:	mov	r1, #1
   13874:	mov	r0, fp
   13878:	bl	10efc <fwrite@plt>
   1387c:	add	r8, r8, #1
   13880:	add	r8, r8, r7
   13884:	add	r9, r9, #1
   13888:	cmp	r9, r5
   1388c:	bne	13810 <pclose@plt+0x271c>
   13890:	ldr	r0, [pc, #1076]	; 13ccc <pclose@plt+0x2bd8>
   13894:	mov	r3, r4
   13898:	mov	r2, #4
   1389c:	mov	r1, #1
   138a0:	add	r0, pc, r0
   138a4:	bl	10efc <fwrite@plt>
   138a8:	ldr	r0, [pc, #1056]	; 13cd0 <pclose@plt+0x2bdc>
   138ac:	mov	r3, r4
   138b0:	mov	r2, #113	; 0x71
   138b4:	mov	r1, #1
   138b8:	add	r0, pc, r0
   138bc:	bl	10efc <fwrite@plt>
   138c0:	ldr	r0, [pc, #1036]	; 13cd4 <pclose@plt+0x2be0>
   138c4:	ldr	r9, [pc, #1036]	; 13cd8 <pclose@plt+0x2be4>
   138c8:	mov	r3, r4
   138cc:	mov	r2, #34	; 0x22
   138d0:	mov	r1, #1
   138d4:	add	r0, pc, r0
   138d8:	bl	10efc <fwrite@plt>
   138dc:	add	r9, pc, r9
   138e0:	mov	r7, #0
   138e4:	add	r8, sp, #12
   138e8:	b	13910 <pclose@plt+0x281c>
   138ec:	ldr	r2, [pc, #1000]	; 13cdc <pclose@plt+0x2be8>
   138f0:	ldr	r3, [r8, r7, lsl #2]
   138f4:	add	r2, pc, r2
   138f8:	mov	r1, #1
   138fc:	mov	r0, r4
   13900:	add	r7, r7, #1
   13904:	bl	11028 <__fprintf_chk@plt>
   13908:	cmp	r7, r5
   1390c:	beq	13944 <pclose@plt+0x2850>
   13910:	mov	r1, r7
   13914:	ldr	r0, [r6, #12]
   13918:	bl	1b2a8 <pclose@plt+0xa1b4>
   1391c:	cmp	r0, #0
   13920:	bne	138ec <pclose@plt+0x27f8>
   13924:	mov	r3, r4
   13928:	mov	r2, #4
   1392c:	mov	r1, #1
   13930:	mov	r0, r9
   13934:	add	r7, r7, #1
   13938:	bl	10efc <fwrite@plt>
   1393c:	cmp	r7, r5
   13940:	bne	13910 <pclose@plt+0x281c>
   13944:	cmp	r7, #256	; 0x100
   13948:	bne	13c44 <pclose@plt+0x2b50>
   1394c:	ldr	r0, [pc, #908]	; 13ce0 <pclose@plt+0x2bec>
   13950:	mov	r3, r4
   13954:	mov	r2, #3
   13958:	mov	r1, #1
   1395c:	add	r0, pc, r0
   13960:	bl	10efc <fwrite@plt>
   13964:	ldr	r5, [r6]
   13968:	mov	r3, r4
   1396c:	ands	r5, r5, #16
   13970:	beq	13b04 <pclose@plt+0x2a10>
   13974:	ldr	r0, [pc, #872]	; 13ce4 <pclose@plt+0x2bf0>
   13978:	mov	r2, #46	; 0x2e
   1397c:	mov	r1, #1
   13980:	add	r0, pc, r0
   13984:	bl	10efc <fwrite@plt>
   13988:	ldr	r0, [r6, #16]
   1398c:	ldr	r3, [r0, #8]
   13990:	cmp	r3, #0
   13994:	beq	13aac <pclose@plt+0x29b8>
   13998:	mov	r1, #0
   1399c:	bl	1b2a8 <pclose@plt+0xa1b4>
   139a0:	mov	r3, r4
   139a4:	mov	r2, #2
   139a8:	mov	r1, #1
   139ac:	ldr	sl, [pc, #820]	; 13ce8 <pclose@plt+0x2bf4>
   139b0:	ldr	r9, [pc, #820]	; 13cec <pclose@plt+0x2bf8>
   139b4:	mov	r7, #0
   139b8:	add	sl, pc, sl
   139bc:	add	r9, pc, r9
   139c0:	mov	r5, r0
   139c4:	ldr	r0, [pc, #804]	; 13cf0 <pclose@plt+0x2bfc>
   139c8:	add	r0, pc, r0
   139cc:	bl	10efc <fwrite@plt>
   139d0:	ldrb	r1, [r5]
   139d4:	mov	r2, #1
   139d8:	mov	r0, r4
   139dc:	bl	12dc0 <pclose@plt+0x1ccc>
   139e0:	ldrb	r1, [r5, #4]
   139e4:	mov	r2, #1
   139e8:	mov	r0, r4
   139ec:	bl	12dc0 <pclose@plt+0x1ccc>
   139f0:	ldr	r2, [pc, #764]	; 13cf4 <pclose@plt+0x2c00>
   139f4:	ldr	r3, [r5, #8]
   139f8:	add	r2, pc, r2
   139fc:	mov	r1, #1
   13a00:	mov	r0, r4
   13a04:	bl	11028 <__fprintf_chk@plt>
   13a08:	ldr	r0, [r6, #16]
   13a0c:	add	r7, r7, #1
   13a10:	and	r8, r7, #1
   13a14:	ldr	r3, [r0, #8]
   13a18:	cmp	r3, r7
   13a1c:	bls	13a98 <pclose@plt+0x29a4>
   13a20:	mov	r1, r7
   13a24:	bl	1b2a8 <pclose@plt+0xa1b4>
   13a28:	mov	r3, r4
   13a2c:	mov	r2, #2
   13a30:	mov	r1, #1
   13a34:	mov	r5, r0
   13a38:	mov	r0, sl
   13a3c:	bl	10efc <fwrite@plt>
   13a40:	ldrb	r1, [r5]
   13a44:	mov	r2, #1
   13a48:	mov	r0, r4
   13a4c:	bl	12dc0 <pclose@plt+0x1ccc>
   13a50:	ldrb	r1, [r5, #4]
   13a54:	mov	r2, #1
   13a58:	mov	r0, r4
   13a5c:	bl	12dc0 <pclose@plt+0x1ccc>
   13a60:	ldr	r3, [r5, #8]
   13a64:	mov	r2, r9
   13a68:	mov	r1, #1
   13a6c:	mov	r0, r4
   13a70:	bl	11028 <__fprintf_chk@plt>
   13a74:	cmp	r8, #0
   13a78:	beq	13a08 <pclose@plt+0x2914>
   13a7c:	mov	r1, r4
   13a80:	mov	r0, #10
   13a84:	bl	1107c <fputc@plt>
   13a88:	b	13a08 <pclose@plt+0x2914>
   13a8c:	ldr	r2, [pc, #612]	; 13cf8 <pclose@plt+0x2c04>
   13a90:	add	r2, pc, r2
   13a94:	b	136dc <pclose@plt+0x25e8>
   13a98:	cmp	r8, #0
   13a9c:	beq	13aac <pclose@plt+0x29b8>
   13aa0:	mov	r1, r4
   13aa4:	mov	r0, #10
   13aa8:	bl	1107c <fputc@plt>
   13aac:	ldr	r0, [pc, #584]	; 13cfc <pclose@plt+0x2c08>
   13ab0:	mov	r3, r4
   13ab4:	mov	r2, #4
   13ab8:	mov	r1, #1
   13abc:	add	r0, pc, r0
   13ac0:	bl	10efc <fwrite@plt>
   13ac4:	ldr	r3, [r6, #16]
   13ac8:	ldr	r2, [pc, #560]	; 13d00 <pclose@plt+0x2c0c>
   13acc:	mov	r0, r4
   13ad0:	add	r2, pc, r2
   13ad4:	ldr	r3, [r3, #8]
   13ad8:	mov	r1, #1
   13adc:	bl	11028 <__fprintf_chk@plt>
   13ae0:	mov	r0, #0
   13ae4:	ldr	r3, [sp, #4]
   13ae8:	ldr	r2, [sp, #1036]	; 0x40c
   13aec:	ldr	r3, [r3]
   13af0:	cmp	r2, r3
   13af4:	bne	13c68 <pclose@plt+0x2b74>
   13af8:	add	sp, sp, #1040	; 0x410
   13afc:	add	sp, sp, #4
   13b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b04:	ldr	r0, [pc, #504]	; 13d04 <pclose@plt+0x2c10>
   13b08:	mov	r2, #44	; 0x2c
   13b0c:	mov	r1, #1
   13b10:	add	r0, pc, r0
   13b14:	bl	10efc <fwrite@plt>
   13b18:	ldr	r0, [r6, #16]
   13b1c:	ldr	r3, [r0, #8]
   13b20:	cmp	r3, #0
   13b24:	beq	13aac <pclose@plt+0x29b8>
   13b28:	ldr	r8, [pc, #472]	; 13d08 <pclose@plt+0x2c14>
   13b2c:	add	r8, pc, r8
   13b30:	mov	r1, r5
   13b34:	bl	1b2a8 <pclose@plt+0xa1b4>
   13b38:	mov	r3, r4
   13b3c:	mov	r2, #2
   13b40:	mov	r1, #1
   13b44:	mov	r7, r0
   13b48:	mov	r0, r8
   13b4c:	bl	10efc <fwrite@plt>
   13b50:	ldrb	r1, [r7]
   13b54:	mov	r2, #1
   13b58:	mov	r0, r4
   13b5c:	bl	12dc0 <pclose@plt+0x1ccc>
   13b60:	ldrb	r1, [r7, #4]
   13b64:	mov	r2, #1
   13b68:	mov	r0, r4
   13b6c:	bl	12dc0 <pclose@plt+0x1ccc>
   13b70:	ldrb	r1, [r7, #8]
   13b74:	mov	r2, #0
   13b78:	mov	r0, r4
   13b7c:	bl	12dc0 <pclose@plt+0x1ccc>
   13b80:	ldr	r0, [pc, #388]	; 13d0c <pclose@plt+0x2c18>
   13b84:	mov	r3, r4
   13b88:	mov	r2, #2
   13b8c:	mov	r1, #1
   13b90:	add	r0, pc, r0
   13b94:	bl	10efc <fwrite@plt>
   13b98:	tst	r5, #1
   13b9c:	beq	13bac <pclose@plt+0x2ab8>
   13ba0:	mov	r1, r4
   13ba4:	mov	r0, #10
   13ba8:	bl	1107c <fputc@plt>
   13bac:	ldr	r0, [r6, #16]
   13bb0:	add	r5, r5, #1
   13bb4:	ldr	r3, [r0, #8]
   13bb8:	cmp	r3, r5
   13bbc:	bhi	13b30 <pclose@plt+0x2a3c>
   13bc0:	tst	r5, #1
   13bc4:	beq	13aac <pclose@plt+0x29b8>
   13bc8:	b	13aa0 <pclose@plt+0x29ac>
   13bcc:	ldr	r0, [pc, #316]	; 13d10 <pclose@plt+0x2c1c>
   13bd0:	mov	r3, r4
   13bd4:	mov	r2, #20
   13bd8:	mov	r1, #1
   13bdc:	add	r0, pc, r0
   13be0:	bl	10efc <fwrite@plt>
   13be4:	ldr	r0, [pc, #296]	; 13d14 <pclose@plt+0x2c20>
   13be8:	mov	r3, r4
   13bec:	mov	r2, #3
   13bf0:	mov	r1, #1
   13bf4:	add	r0, pc, r0
   13bf8:	bl	10efc <fwrite@plt>
   13bfc:	ldr	r0, [pc, #276]	; 13d18 <pclose@plt+0x2c24>
   13c00:	mov	r3, r4
   13c04:	mov	r2, #4
   13c08:	mov	r1, #1
   13c0c:	add	r0, pc, r0
   13c10:	bl	10efc <fwrite@plt>
   13c14:	ldr	r0, [pc, #256]	; 13d1c <pclose@plt+0x2c28>
   13c18:	mov	r3, r4
   13c1c:	mov	r2, #113	; 0x71
   13c20:	mov	r1, #1
   13c24:	add	r0, pc, r0
   13c28:	bl	10efc <fwrite@plt>
   13c2c:	ldr	r0, [pc, #236]	; 13d20 <pclose@plt+0x2c2c>
   13c30:	mov	r3, r4
   13c34:	mov	r2, #34	; 0x22
   13c38:	mov	r1, #1
   13c3c:	add	r0, pc, r0
   13c40:	bl	10efc <fwrite@plt>
   13c44:	ldr	r0, [pc, #216]	; 13d24 <pclose@plt+0x2c30>
   13c48:	mov	r3, r4
   13c4c:	mov	r2, #4
   13c50:	mov	r1, #1
   13c54:	add	r0, pc, r0
   13c58:	bl	10efc <fwrite@plt>
   13c5c:	b	1394c <pclose@plt+0x2858>
   13c60:	mvn	r0, #0
   13c64:	b	13ae4 <pclose@plt+0x29f0>
   13c68:	bl	10e9c <__stack_chk_fail@plt>
   13c6c:	mov	r3, r9
   13c70:	b	13710 <pclose@plt+0x261c>
   13c74:	strdeq	r7, [r2], -ip
   13c78:	andeq	r0, r0, r8, lsl #2
   13c7c:	andeq	r8, r0, r0, asr lr
   13c80:	andeq	r8, r0, ip, ror lr
   13c84:	andeq	r8, r0, r8, lsr #29
   13c88:	andeq	r8, r0, r4, lsr #29
   13c8c:			; <UNDEFINED> instruction: 0x00008ebc
   13c90:	ldrdeq	r8, [r0], -ip
   13c94:	andeq	r8, r0, r4, ror #29
   13c98:	andeq	r8, r0, r8, ror #28
   13c9c:	andeq	r8, r0, r0, ror #27
   13ca0:	strdeq	r8, [r0], -r0
   13ca4:	andeq	r8, r0, r0, asr #25
   13ca8:	andeq	r8, r0, r4, ror #27
   13cac:	andeq	r8, r0, ip, lsr #25
   13cb0:	andeq	r9, r0, r0, asr #22
   13cb4:	andeq	r8, r0, r0, asr #24
   13cb8:	andeq	r8, r0, r0, asr #26
   13cbc:	andeq	r8, r0, r0, lsr sp
   13cc0:	andeq	r8, r0, r8, lsr sp
   13cc4:	ldrdeq	r8, [r0], -r4
   13cc8:	ldrdeq	r8, [r0], -ip
   13ccc:	andeq	r8, r0, r8, asr #26
   13cd0:	andeq	r8, r0, r8, lsr sp
   13cd4:	muleq	r0, r0, sp
   13cd8:	andeq	r8, r0, r0, asr #27
   13cdc:	muleq	r0, r4, sp
   13ce0:	andeq	r8, r0, r8, asr #26
   13ce4:	andeq	r8, r0, r8, lsr #26
   13ce8:	andeq	r8, r0, r0, lsr #26
   13cec:	andeq	r8, r0, r0, lsr #26
   13cf0:	andeq	r8, r0, r0, lsl sp
   13cf4:	andeq	r8, r0, r4, ror #25
   13cf8:	strdeq	r8, [r0], -ip
   13cfc:	andeq	r8, r0, ip, lsr #22
   13d00:	andeq	r8, r0, r8, lsl ip
   13d04:	andeq	r8, r0, r0, lsl #24
   13d08:	andeq	r8, r0, ip, lsr #23
   13d0c:			; <UNDEFINED> instruction: 0x00008bb0
   13d10:	andeq	r8, r0, ip, ror #19
   13d14:	andeq	r8, r0, r0, asr fp
   13d18:	ldrdeq	r8, [r0], -ip
   13d1c:	andeq	r8, r0, ip, asr #19
   13d20:	andeq	r8, r0, r8, lsr #20
   13d24:	andeq	r8, r0, r8, asr #20
   13d28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d2c:	mov	r8, r0
   13d30:	ldr	r0, [r0, #12]
   13d34:	ldr	r3, [r0, #12]
   13d38:	cmp	r3, #0
   13d3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d40:	ldr	sl, [pc, #264]	; 13e50 <pclose@plt+0x2d5c>
   13d44:	ldr	r9, [pc, #264]	; 13e54 <pclose@plt+0x2d60>
   13d48:	mov	r6, r1
   13d4c:	add	sl, pc, sl
   13d50:	add	r9, pc, r9
   13d54:	mov	r7, #0
   13d58:	mov	r1, r7
   13d5c:	bl	1b2a8 <pclose@plt+0xa1b4>
   13d60:	subs	r5, r0, #0
   13d64:	beq	13e20 <pclose@plt+0x2d2c>
   13d68:	mov	r2, r7
   13d6c:	mov	r1, #1
   13d70:	mov	r0, r8
   13d74:	bl	1a674 <pclose@plt+0x9580>
   13d78:	mov	r2, sl
   13d7c:	mov	r1, #1
   13d80:	mov	r3, r0
   13d84:	mov	r0, r6
   13d88:	bl	11028 <__fprintf_chk@plt>
   13d8c:	ldrb	r4, [r5]
   13d90:	cmp	r4, #0
   13d94:	bne	13dd8 <pclose@plt+0x2ce4>
   13d98:	b	13e08 <pclose@plt+0x2d14>
   13d9c:	bl	10fb0 <__ctype_b_loc@plt>
   13da0:	lsl	r3, r4, #1
   13da4:	sub	r2, r4, #32
   13da8:	clz	r2, r2
   13dac:	lsr	r2, r2, #5
   13db0:	mov	r1, r6
   13db4:	ldr	ip, [r0]
   13db8:	mov	r0, r4
   13dbc:	ldrh	r3, [ip, r3]
   13dc0:	orrs	r3, r2, r3, lsr #15
   13dc4:	beq	13e38 <pclose@plt+0x2d44>
   13dc8:	bl	1107c <fputc@plt>
   13dcc:	ldrb	r4, [r5, #1]!
   13dd0:	cmp	r4, #0
   13dd4:	beq	13e08 <pclose@plt+0x2d14>
   13dd8:	cmp	r4, #92	; 0x5c
   13ddc:	cmpne	r4, #34	; 0x22
   13de0:	bne	13d9c <pclose@plt+0x2ca8>
   13de4:	mov	r1, r6
   13de8:	mov	r0, #92	; 0x5c
   13dec:	bl	1107c <fputc@plt>
   13df0:	ldrb	r0, [r5]
   13df4:	mov	r1, r6
   13df8:	bl	1107c <fputc@plt>
   13dfc:	ldrb	r4, [r5, #1]!
   13e00:	cmp	r4, #0
   13e04:	bne	13dd8 <pclose@plt+0x2ce4>
   13e08:	mov	r1, r6
   13e0c:	mov	r0, #34	; 0x22
   13e10:	bl	1107c <fputc@plt>
   13e14:	mov	r1, r6
   13e18:	mov	r0, #10
   13e1c:	bl	1107c <fputc@plt>
   13e20:	ldr	r0, [r8, #12]
   13e24:	add	r7, r7, #1
   13e28:	ldr	r3, [r0, #12]
   13e2c:	cmp	r3, r7
   13e30:	bhi	13d58 <pclose@plt+0x2c64>
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e38:	mov	r3, r4
   13e3c:	mov	r2, r9
   13e40:	mov	r1, #1
   13e44:	mov	r0, r6
   13e48:	bl	11028 <__fprintf_chk@plt>
   13e4c:	b	13dcc <pclose@plt+0x2cd8>
   13e50:	strdeq	r8, [r0], -ip
   13e54:	andeq	r8, r0, r8, lsl #20
   13e58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e5c:	mov	r7, r0
   13e60:	ldr	r0, [r0, #16]
   13e64:	ldr	r3, [r0, #8]
   13e68:	cmp	r3, #0
   13e6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e70:	ldr	r8, [pc, #328]	; 13fc0 <pclose@plt+0x2ecc>
   13e74:	ldr	sl, [pc, #328]	; 13fc4 <pclose@plt+0x2ed0>
   13e78:	ldr	r9, [pc, #328]	; 13fc8 <pclose@plt+0x2ed4>
   13e7c:	mov	r5, r1
   13e80:	add	r8, pc, r8
   13e84:	add	sl, pc, sl
   13e88:	add	r9, pc, r9
   13e8c:	mov	r4, #0
   13e90:	b	13ebc <pclose@plt+0x2dc8>
   13e94:	ldr	r2, [pc, #304]	; 13fcc <pclose@plt+0x2ed8>
   13e98:	mov	r1, #1
   13e9c:	add	r2, pc, r2
   13ea0:	mov	r0, r5
   13ea4:	bl	11028 <__fprintf_chk@plt>
   13ea8:	ldr	r0, [r7, #16]
   13eac:	add	r4, r4, #1
   13eb0:	ldr	r3, [r0, #8]
   13eb4:	cmp	r3, r4
   13eb8:	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ebc:	mov	r1, r4
   13ec0:	bl	1b2a8 <pclose@plt+0xa1b4>
   13ec4:	subs	r6, r0, #0
   13ec8:	beq	13ea8 <pclose@plt+0x2db4>
   13ecc:	mov	r3, r5
   13ed0:	mov	r2, #8
   13ed4:	mov	r1, #1
   13ed8:	mov	r0, r8
   13edc:	bl	10efc <fwrite@plt>
   13ee0:	ldrb	r1, [r6]
   13ee4:	mov	r0, r5
   13ee8:	bl	132b0 <pclose@plt+0x21bc>
   13eec:	mov	r1, r5
   13ef0:	mov	r0, #32
   13ef4:	bl	1107c <fputc@plt>
   13ef8:	ldrb	r1, [r6, #4]
   13efc:	mov	r0, r5
   13f00:	bl	132b0 <pclose@plt+0x21bc>
   13f04:	ldr	r3, [r7]
   13f08:	tst	r3, #16
   13f0c:	bne	13f44 <pclose@plt+0x2e50>
   13f10:	ldr	r3, [r6, #8]
   13f14:	cmp	r3, #255	; 0xff
   13f18:	bhi	13e94 <pclose@plt+0x2da0>
   13f1c:	mov	r1, r3
   13f20:	mov	r0, r7
   13f24:	bl	1a75c <pclose@plt+0x9668>
   13f28:	subs	r3, r0, #0
   13f2c:	beq	13f74 <pclose@plt+0x2e80>
   13f30:	mov	r2, r9
   13f34:	mov	r1, #1
   13f38:	mov	r0, r5
   13f3c:	bl	11028 <__fprintf_chk@plt>
   13f40:	b	13ea8 <pclose@plt+0x2db4>
   13f44:	ldr	r1, [r6, #8]
   13f48:	mov	r0, r7
   13f4c:	eor	r1, r1, #61440	; 0xf000
   13f50:	bl	1a75c <pclose@plt+0x9668>
   13f54:	subs	r3, r0, #0
   13f58:	beq	13fa4 <pclose@plt+0x2eb0>
   13f5c:	ldr	r2, [pc, #108]	; 13fd0 <pclose@plt+0x2edc>
   13f60:	mov	r1, #1
   13f64:	add	r2, pc, r2
   13f68:	mov	r0, r5
   13f6c:	bl	11028 <__fprintf_chk@plt>
   13f70:	b	13ea8 <pclose@plt+0x2db4>
   13f74:	mov	r3, r5
   13f78:	mov	r2, #4
   13f7c:	mov	r1, #1
   13f80:	mov	r0, sl
   13f84:	bl	10efc <fwrite@plt>
   13f88:	ldrb	r1, [r6, #8]
   13f8c:	mov	r0, r5
   13f90:	bl	132b0 <pclose@plt+0x21bc>
   13f94:	mov	r1, r5
   13f98:	mov	r0, #10
   13f9c:	bl	1107c <fputc@plt>
   13fa0:	b	13ea8 <pclose@plt+0x2db4>
   13fa4:	ldr	r2, [pc, #40]	; 13fd4 <pclose@plt+0x2ee0>
   13fa8:	ldr	r3, [r6, #8]
   13fac:	add	r2, pc, r2
   13fb0:	mov	r1, #1
   13fb4:	mov	r0, r5
   13fb8:	bl	11028 <__fprintf_chk@plt>
   13fbc:	b	13ea8 <pclose@plt+0x2db4>
   13fc0:	andeq	r8, r0, r0, ror #17
   13fc4:	andeq	r8, r0, r8, lsl #18
   13fc8:	andeq	r8, r0, r4, ror #17
   13fcc:	andeq	r8, r0, r4, ror #17
   13fd0:	andeq	r8, r0, r8, lsl #16
   13fd4:	andeq	r8, r0, r8, asr #15
   13fd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fdc:	mov	r5, r0
   13fe0:	ldr	r0, [pc, #416]	; 14188 <pclose@plt+0x3094>
   13fe4:	mov	r3, r1
   13fe8:	mov	r2, #7
   13fec:	sub	sp, sp, #8
   13ff0:	mov	r9, r1
   13ff4:	add	r0, pc, r0
   13ff8:	mov	r1, #1
   13ffc:	bl	10efc <fwrite@plt>
   14000:	ldr	r3, [r5, #8]
   14004:	ldr	r2, [r3, #12]
   14008:	cmp	r2, #0
   1400c:	beq	14114 <pclose@plt+0x3020>
   14010:	ldr	sl, [pc, #372]	; 1418c <pclose@plt+0x3098>
   14014:	mov	r8, #0
   14018:	add	sl, pc, sl
   1401c:	mov	r4, r8
   14020:	mov	r7, r8
   14024:	mov	r1, r8
   14028:	b	14088 <pclose@plt+0x2f94>
   1402c:	cmp	r4, #0
   14030:	beq	14074 <pclose@plt+0x2f80>
   14034:	sub	r7, r7, #1
   14038:	sub	r4, r4, #1
   1403c:	cmp	r7, r4
   14040:	beq	14128 <pclose@plt+0x3034>
   14044:	cmp	r8, #0
   14048:	str	r4, [sp, #4]
   1404c:	str	r7, [sp]
   14050:	mov	r4, r0
   14054:	moveq	r3, #32
   14058:	movne	r3, #44	; 0x2c
   1405c:	mov	r2, sl
   14060:	mov	r1, #1
   14064:	mov	r0, r9
   14068:	bl	11028 <__fprintf_chk@plt>
   1406c:	mov	r7, r4
   14070:	mov	r8, #1
   14074:	ldr	r3, [r5, #8]
   14078:	ldr	r2, [r3, #12]
   1407c:	mov	r1, r6
   14080:	cmp	r2, r6
   14084:	bls	140d4 <pclose@plt+0x2fe0>
   14088:	ldr	r2, [r5, #4]
   1408c:	add	r6, r1, #1
   14090:	tst	r2, #4
   14094:	beq	140a4 <pclose@plt+0x2fb0>
   14098:	orr	r2, r1, #8
   1409c:	cmp	r2, r1
   140a0:	beq	14078 <pclose@plt+0x2f84>
   140a4:	mov	r0, r5
   140a8:	bl	14900 <pclose@plt+0x380c>
   140ac:	cmp	r0, #0
   140b0:	beq	1402c <pclose@plt+0x2f38>
   140b4:	ldr	r3, [r5, #8]
   140b8:	cmp	r7, #0
   140bc:	moveq	r7, r6
   140c0:	ldr	r2, [r3, #12]
   140c4:	mov	r4, r6
   140c8:	cmp	r2, r6
   140cc:	mov	r1, r6
   140d0:	bhi	14088 <pclose@plt+0x2f94>
   140d4:	cmp	r4, #0
   140d8:	beq	14114 <pclose@plt+0x3020>
   140dc:	sub	r7, r7, #1
   140e0:	sub	r4, r4, #1
   140e4:	cmp	r7, r4
   140e8:	beq	14160 <pclose@plt+0x306c>
   140ec:	ldr	r2, [pc, #156]	; 14190 <pclose@plt+0x309c>
   140f0:	cmp	r8, #0
   140f4:	str	r4, [sp, #4]
   140f8:	str	r7, [sp]
   140fc:	moveq	r3, #32
   14100:	movne	r3, #44	; 0x2c
   14104:	add	r2, pc, r2
   14108:	mov	r1, #1
   1410c:	mov	r0, r9
   14110:	bl	11028 <__fprintf_chk@plt>
   14114:	mov	r1, r9
   14118:	mov	r0, #10
   1411c:	add	sp, sp, #8
   14120:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14124:	b	1107c <fputc@plt>
   14128:	ldr	r2, [pc, #100]	; 14194 <pclose@plt+0x30a0>
   1412c:	cmp	r8, #0
   14130:	str	r7, [sp]
   14134:	mov	r4, r0
   14138:	moveq	r3, #32
   1413c:	movne	r3, #44	; 0x2c
   14140:	add	r2, pc, r2
   14144:	mov	r1, #1
   14148:	mov	r0, r9
   1414c:	bl	11028 <__fprintf_chk@plt>
   14150:	mov	r7, r4
   14154:	mov	r8, #1
   14158:	ldr	r3, [r5, #8]
   1415c:	b	14078 <pclose@plt+0x2f84>
   14160:	ldr	r2, [pc, #48]	; 14198 <pclose@plt+0x30a4>
   14164:	cmp	r8, #0
   14168:	str	r7, [sp]
   1416c:	moveq	r3, #32
   14170:	movne	r3, #44	; 0x2c
   14174:	add	r2, pc, r2
   14178:	mov	r1, #1
   1417c:	mov	r0, r9
   14180:	bl	11028 <__fprintf_chk@plt>
   14184:	b	14114 <pclose@plt+0x3020>
   14188:	andeq	r8, r0, r0, lsr #15
   1418c:	andeq	r8, r0, ip, lsl #15
   14190:	andeq	r8, r0, r0, lsr #13
   14194:	andeq	r8, r0, ip, asr r6
   14198:	andeq	r8, r0, r8, lsr #12
   1419c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141a0:	sub	sp, sp, #2160	; 0x870
   141a4:	ldr	lr, [pc, #1788]	; 148a8 <pclose@plt+0x37b4>
   141a8:	ldr	ip, [pc, #1788]	; 148ac <pclose@plt+0x37b8>
   141ac:	sub	sp, sp, #4
   141b0:	add	lr, pc, lr
   141b4:	mov	r9, r0
   141b8:	ldr	r0, [r0, #8]
   141bc:	str	lr, [sp, #60]	; 0x3c
   141c0:	str	r1, [sp, #12]
   141c4:	ldr	ip, [lr, ip]
   141c8:	ldr	r8, [r0, #12]
   141cc:	mov	r1, lr
   141d0:	str	r2, [sp, #24]
   141d4:	mov	lr, r2
   141d8:	ldr	r2, [ip]
   141dc:	cmp	r8, #0
   141e0:	str	ip, [sp, #64]	; 0x40
   141e4:	str	r3, [sp, #28]
   141e8:	str	r2, [sp, #2156]	; 0x86c
   141ec:	beq	14444 <pclose@plt+0x3350>
   141f0:	sub	r3, lr, #4
   141f4:	bics	r3, r3, #4
   141f8:	str	r3, [sp, #40]	; 0x28
   141fc:	bne	147a8 <pclose@plt+0x36b4>
   14200:	mov	r3, #0
   14204:	str	r3, [sp, #44]	; 0x2c
   14208:	add	r3, sp, #1120	; 0x460
   1420c:	add	r3, r3, #12
   14210:	str	r3, [sp, #36]	; 0x24
   14214:	add	r3, r3, r8, lsl #2
   14218:	str	r3, [sp, #48]	; 0x30
   1421c:	ldr	r3, [sp, #24]
   14220:	mov	sl, #1
   14224:	subs	r3, r3, #4
   14228:	movne	r3, #1
   1422c:	str	r3, [sp, #20]
   14230:	ldr	r3, [pc, #1656]	; 148b0 <pclose@plt+0x37bc>
   14234:	add	fp, sp, #108	; 0x6c
   14238:	add	r3, pc, r3
   1423c:	str	r3, [sp, #52]	; 0x34
   14240:	ldr	r3, [pc, #1644]	; 148b4 <pclose@plt+0x37c0>
   14244:	add	r3, pc, r3
   14248:	str	r3, [sp, #68]	; 0x44
   1424c:	mov	r6, #1
   14250:	mov	r4, #0
   14254:	mov	r7, #512	; 0x200
   14258:	b	1426c <pclose@plt+0x3178>
   1425c:	add	r5, r4, #1
   14260:	cmp	r8, r5
   14264:	beq	142ac <pclose@plt+0x31b8>
   14268:	mov	r4, r5
   1426c:	mov	r1, r4
   14270:	mov	r0, r9
   14274:	str	r7, [fp, r4, lsl #2]
   14278:	bl	14900 <pclose@plt+0x380c>
   1427c:	cmp	r0, #0
   14280:	beq	1425c <pclose@plt+0x3168>
   14284:	mov	r2, sl
   14288:	mov	r1, r4
   1428c:	mov	r0, r9
   14290:	bl	14ab8 <pclose@plt+0x39c4>
   14294:	add	r5, r4, #1
   14298:	cmp	r0, #512	; 0x200
   1429c:	movne	r6, #0
   142a0:	cmp	r8, r5
   142a4:	str	r0, [fp, r4, lsl #2]
   142a8:	bne	14268 <pclose@plt+0x3174>
   142ac:	ldr	r3, [sp, #20]
   142b0:	ands	r6, r6, r3
   142b4:	bne	14438 <pclose@plt+0x3344>
   142b8:	ldr	r3, [sp, #24]
   142bc:	cmp	r3, #4
   142c0:	beq	14754 <pclose@plt+0x3660>
   142c4:	ldr	r3, [sp, #40]	; 0x28
   142c8:	ldr	r2, [sp, #108]	; 0x6c
   142cc:	cmp	r3, #0
   142d0:	beq	14638 <pclose@plt+0x3544>
   142d4:	asrs	r1, r2, #8
   142d8:	moveq	r3, #1
   142dc:	movne	r3, #0
   142e0:	cmp	r1, #11
   142e4:	orreq	r3, r3, #1
   142e8:	cmp	r3, #0
   142ec:	uxtb	r1, r2
   142f0:	str	r1, [sp, #32]
   142f4:	streq	r3, [sp, #16]
   142f8:	beq	14310 <pclose@plt+0x321c>
   142fc:	bic	r3, r1, #32
   14300:	sub	r3, r3, #65	; 0x41
   14304:	cmp	r3, #25
   14308:	strhi	r6, [sp, #16]
   1430c:	bls	14688 <pclose@plt+0x3594>
   14310:	ldr	r3, [sp, #36]	; 0x24
   14314:	ldr	r1, [sp, #48]	; 0x30
   14318:	mov	r2, #0
   1431c:	str	r2, [r3], #4
   14320:	cmp	r1, r3
   14324:	bne	1431c <pclose@plt+0x3228>
   14328:	ldr	r3, [sp, #44]	; 0x2c
   1432c:	cmp	r3, #0
   14330:	bne	1456c <pclose@plt+0x3478>
   14334:	mov	r3, sl
   14338:	ldr	r2, [sp, #52]	; 0x34
   1433c:	mov	r1, #1
   14340:	ldr	r0, [sp, #12]
   14344:	bl	11028 <__fprintf_chk@plt>
   14348:	ldr	r3, [sp, #16]
   1434c:	cmp	r3, #0
   14350:	bne	14464 <pclose@plt+0x3370>
   14354:	cmp	r5, #1
   14358:	ldr	r6, [sp, #108]	; 0x6c
   1435c:	moveq	r0, r3
   14360:	beq	143a8 <pclose@plt+0x32b4>
   14364:	ldr	r2, [sp, #16]
   14368:	ldr	ip, [sp, #36]	; 0x24
   1436c:	mov	r0, r2
   14370:	mov	r3, #1
   14374:	ldr	r1, [ip, r3, lsl #2]
   14378:	cmp	r1, #0
   1437c:	bne	14394 <pclose@plt+0x32a0>
   14380:	ldr	r1, [fp, r3, lsl #2]
   14384:	cmp	r1, r6
   14388:	addne	r0, r0, #1
   1438c:	cmp	r1, #512	; 0x200
   14390:	addne	r2, r2, #1
   14394:	add	r3, r3, #1
   14398:	cmp	r3, r5
   1439c:	bne	14374 <pclose@plt+0x3280>
   143a0:	cmp	r0, r2
   143a4:	bhi	14498 <pclose@plt+0x33a4>
   143a8:	cmp	r4, r0
   143ac:	bls	14498 <pclose@plt+0x33a4>
   143b0:	cmp	r6, #512	; 0x200
   143b4:	beq	143cc <pclose@plt+0x32d8>
   143b8:	ldr	r3, [sp, #28]
   143bc:	mov	r2, r6
   143c0:	ldr	r1, [sp, #12]
   143c4:	mov	r0, r9
   143c8:	bl	12e7c <pclose@plt+0x1d88>
   143cc:	ldr	r1, [sp, #12]
   143d0:	mov	r0, #10
   143d4:	bl	1107c <fputc@plt>
   143d8:	cmp	r5, #1
   143dc:	beq	14438 <pclose@plt+0x3344>
   143e0:	mov	r4, #1
   143e4:	ldr	r7, [sp, #36]	; 0x24
   143e8:	b	143f8 <pclose@plt+0x3304>
   143ec:	add	r4, r4, #1
   143f0:	cmp	r4, r5
   143f4:	beq	14438 <pclose@plt+0x3344>
   143f8:	ldr	r2, [fp, r4, lsl #2]
   143fc:	cmp	r2, r6
   14400:	beq	143ec <pclose@plt+0x32f8>
   14404:	ldr	r3, [r7, r4, lsl #2]
   14408:	cmp	r3, #0
   1440c:	bne	143ec <pclose@plt+0x32f8>
   14410:	ldr	r3, [sp, #28]
   14414:	str	r4, [sp]
   14418:	str	r3, [sp, #4]
   1441c:	ldr	r1, [sp, #12]
   14420:	mov	r3, sl
   14424:	mov	r0, r9
   14428:	add	r4, r4, #1
   1442c:	bl	13120 <pclose@plt+0x202c>
   14430:	cmp	r4, r5
   14434:	bne	143f8 <pclose@plt+0x3304>
   14438:	add	sl, sl, #1
   1443c:	cmp	sl, #256	; 0x100
   14440:	bne	1424c <pclose@plt+0x3158>
   14444:	ldr	r3, [sp, #64]	; 0x40
   14448:	ldr	r2, [sp, #2156]	; 0x86c
   1444c:	ldr	r3, [r3]
   14450:	cmp	r2, r3
   14454:	bne	148a4 <pclose@plt+0x37b0>
   14458:	add	sp, sp, #2160	; 0x870
   1445c:	add	sp, sp, #4
   14460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14464:	ldr	r4, [sp, #12]
   14468:	ldr	r2, [sp, #32]
   1446c:	ldr	r3, [sp, #28]
   14470:	mov	r1, r4
   14474:	mov	r0, r9
   14478:	bl	12e7c <pclose@plt+0x1d88>
   1447c:	add	sl, sl, #1
   14480:	mov	r1, r4
   14484:	mov	r0, #10
   14488:	bl	1107c <fputc@plt>
   1448c:	cmp	sl, #256	; 0x100
   14490:	bne	1424c <pclose@plt+0x3158>
   14494:	b	14444 <pclose@plt+0x3350>
   14498:	str	r8, [sp, #16]
   1449c:	str	sl, [sp, #32]
   144a0:	mov	r4, #0
   144a4:	mov	sl, r6
   144a8:	ldr	r8, [sp, #12]
   144ac:	ldr	r7, [sp, #24]
   144b0:	ldr	r6, [sp, #28]
   144b4:	b	144dc <pclose@plt+0x33e8>
   144b8:	mov	r2, sl
   144bc:	add	r4, r4, #1
   144c0:	mov	r3, r6
   144c4:	mov	r1, r8
   144c8:	mov	r0, r9
   144cc:	bl	12e7c <pclose@plt+0x1d88>
   144d0:	cmp	r4, r5
   144d4:	beq	14720 <pclose@plt+0x362c>
   144d8:	ldr	sl, [fp, r4, lsl #2]
   144dc:	cmp	sl, #512	; 0x200
   144e0:	beq	14500 <pclose@plt+0x340c>
   144e4:	cmp	r7, #16
   144e8:	bne	144b8 <pclose@plt+0x33c4>
   144ec:	mov	r1, r4
   144f0:	mov	r0, r9
   144f4:	bl	14900 <pclose@plt+0x380c>
   144f8:	cmp	r0, #0
   144fc:	bne	144b8 <pclose@plt+0x33c4>
   14500:	ldr	r1, [sp, #12]
   14504:	mov	r0, #10
   14508:	mov	r6, sl
   1450c:	ldr	r8, [sp, #16]
   14510:	ldr	sl, [sp, #32]
   14514:	bl	1107c <fputc@plt>
   14518:	cmp	r5, r4
   1451c:	bls	14438 <pclose@plt+0x3344>
   14520:	mov	r2, r6
   14524:	ldr	r7, [sp, #12]
   14528:	ldr	r6, [sp, #28]
   1452c:	b	14534 <pclose@plt+0x3440>
   14530:	ldr	r2, [fp, r4, lsl #2]
   14534:	cmp	r2, #512	; 0x200
   14538:	beq	14550 <pclose@plt+0x345c>
   1453c:	stm	sp, {r4, r6}
   14540:	mov	r3, sl
   14544:	mov	r1, r7
   14548:	mov	r0, r9
   1454c:	bl	13120 <pclose@plt+0x202c>
   14550:	add	r4, r4, #1
   14554:	cmp	r4, r5
   14558:	bne	14530 <pclose@plt+0x343c>
   1455c:	add	sl, sl, #1
   14560:	cmp	sl, #256	; 0x100
   14564:	bne	1424c <pclose@plt+0x3158>
   14568:	b	14444 <pclose@plt+0x3350>
   1456c:	mov	r6, #0
   14570:	orr	r7, r6, #8
   14574:	cmp	r7, r6
   14578:	beq	14628 <pclose@plt+0x3534>
   1457c:	mov	r1, r7
   14580:	mov	r0, r9
   14584:	bl	14900 <pclose@plt+0x380c>
   14588:	cmp	r0, #0
   1458c:	beq	14628 <pclose@plt+0x3534>
   14590:	ldr	r3, [fp, r6, lsl #2]
   14594:	asrs	r1, r3, #8
   14598:	moveq	r2, #1
   1459c:	movne	r2, #0
   145a0:	cmp	r1, #11
   145a4:	orreq	r2, r2, #1
   145a8:	cmp	r2, #0
   145ac:	beq	14628 <pclose@plt+0x3534>
   145b0:	uxtb	r3, r3
   145b4:	cmp	r3, #127	; 0x7f
   145b8:	bgt	14628 <pclose@plt+0x3534>
   145bc:	lsl	r7, r7, #2
   145c0:	add	r2, sp, #2160	; 0x870
   145c4:	add	r2, r2, r7
   145c8:	orr	r3, r3, #2048	; 0x800
   145cc:	ldr	r2, [r2, #-2052]	; 0xfffff7fc
   145d0:	cmp	r2, r3
   145d4:	beq	14610 <pclose@plt+0x351c>
   145d8:	ldr	r0, [sp, #60]	; 0x3c
   145dc:	ldr	r3, [pc, #724]	; 148b8 <pclose@plt+0x37c4>
   145e0:	mov	r2, #5
   145e4:	ldr	r1, [sp, #68]	; 0x44
   145e8:	ldr	r3, [r0, r3]
   145ec:	mov	r0, #0
   145f0:	ldr	r3, [r3]
   145f4:	str	r3, [sp, #56]	; 0x38
   145f8:	bl	10e84 <dcgettext@plt>
   145fc:	ldr	r3, [sp, #56]	; 0x38
   14600:	mov	r1, #1
   14604:	mov	r2, r0
   14608:	mov	r0, r3
   1460c:	bl	11028 <__fprintf_chk@plt>
   14610:	add	r3, sp, #2160	; 0x870
   14614:	add	r7, r3, r7
   14618:	mov	r3, #512	; 0x200
   1461c:	str	r3, [r7, #-2052]	; 0xfffff7fc
   14620:	mov	r3, #1
   14624:	str	r3, [r7, #-1028]	; 0xfffffbfc
   14628:	add	r6, r6, #1
   1462c:	cmp	r6, r5
   14630:	bne	14570 <pclose@plt+0x347c>
   14634:	b	14334 <pclose@plt+0x3240>
   14638:	mov	r4, r3
   1463c:	ldr	r6, [sp, #12]
   14640:	ldr	r7, [sp, #28]
   14644:	b	1464c <pclose@plt+0x3558>
   14648:	ldr	r2, [fp, r4, lsl #2]
   1464c:	stm	sp, {r4, r7}
   14650:	mov	r3, sl
   14654:	add	r4, r4, #1
   14658:	mov	r1, r6
   1465c:	mov	r0, r9
   14660:	bl	13120 <pclose@plt+0x202c>
   14664:	cmp	r4, r5
   14668:	bne	14648 <pclose@plt+0x3554>
   1466c:	ldr	r1, [sp, #12]
   14670:	mov	r0, #10
   14674:	bl	1107c <fputc@plt>
   14678:	add	sl, sl, #1
   1467c:	cmp	sl, #256	; 0x100
   14680:	bne	1424c <pclose@plt+0x3158>
   14684:	b	14444 <pclose@plt+0x3350>
   14688:	add	lr, sp, #80	; 0x50
   1468c:	sxth	r3, r1
   14690:	eor	r6, r3, #2848	; 0xb20
   14694:	mov	r7, r1
   14698:	sub	ip, lr, #4
   1469c:	orr	r3, r3, #2816	; 0xb00
   146a0:	strh	r6, [lr, #-2]
   146a4:	strh	r6, [lr, #2]
   146a8:	and	r6, r7, #159	; 0x9f
   146ac:	add	r1, lr, #12
   146b0:	add	r0, lr, #28
   146b4:	strh	r3, [lr, #-4]
   146b8:	strh	r3, [ip, #4]
   146bc:	strh	r6, [lr, #4]
   146c0:	strh	r6, [lr, #6]
   146c4:	strh	r6, [lr, #8]
   146c8:	strh	r6, [lr, #10]
   146cc:	b	146d4 <pclose@plt+0x35e0>
   146d0:	ldrh	r3, [r1, #-16]
   146d4:	uxtb	r3, r3
   146d8:	orr	r3, r3, #2048	; 0x800
   146dc:	strh	r3, [r1], #2
   146e0:	cmp	r1, r0
   146e4:	bne	146d0 <pclose@plt+0x35dc>
   146e8:	sub	lr, lr, #4
   146ec:	mov	r3, #0
   146f0:	b	146f8 <pclose@plt+0x3604>
   146f4:	ldr	r2, [fp, r3, lsl #2]
   146f8:	cmp	r3, #15
   146fc:	bls	14738 <pclose@plt+0x3644>
   14700:	cmp	r2, #512	; 0x200
   14704:	bne	14748 <pclose@plt+0x3654>
   14708:	add	r3, r3, #1
   1470c:	cmp	r3, r5
   14710:	bne	146f4 <pclose@plt+0x3600>
   14714:	mov	r3, #1
   14718:	str	r3, [sp, #16]
   1471c:	b	14310 <pclose@plt+0x321c>
   14720:	ldr	r1, [sp, #12]
   14724:	mov	r0, #10
   14728:	ldr	r8, [sp, #16]
   1472c:	ldr	sl, [sp, #32]
   14730:	bl	1107c <fputc@plt>
   14734:	b	14678 <pclose@plt+0x3584>
   14738:	lsl	r1, r3, #1
   1473c:	ldrh	r1, [r1, lr]
   14740:	cmp	r1, r2
   14744:	beq	14708 <pclose@plt+0x3614>
   14748:	mov	r3, #0
   1474c:	str	r3, [sp, #16]
   14750:	b	14310 <pclose@plt+0x321c>
   14754:	ldr	r2, [pc, #352]	; 148bc <pclose@plt+0x37c8>
   14758:	mov	r3, sl
   1475c:	add	r2, pc, r2
   14760:	mov	r1, #1
   14764:	ldr	r0, [sp, #12]
   14768:	bl	11028 <__fprintf_chk@plt>
   1476c:	b	1477c <pclose@plt+0x3688>
   14770:	add	r6, r6, #1
   14774:	cmp	r6, r5
   14778:	beq	1466c <pclose@plt+0x3578>
   1477c:	mov	r1, r6
   14780:	mov	r0, r9
   14784:	bl	14900 <pclose@plt+0x380c>
   14788:	cmp	r0, #0
   1478c:	beq	14770 <pclose@plt+0x367c>
   14790:	ldr	r3, [sp, #28]
   14794:	ldr	r2, [fp, r6, lsl #2]
   14798:	ldr	r1, [sp, #12]
   1479c:	mov	r0, r9
   147a0:	bl	12e7c <pclose@plt+0x1d88>
   147a4:	b	14770 <pclose@plt+0x367c>
   147a8:	mov	r7, #0
   147ac:	b	147c4 <pclose@plt+0x36d0>
   147b0:	ldr	r0, [r9, #8]
   147b4:	ldr	r3, [r0, #12]
   147b8:	add	r7, r7, #1
   147bc:	cmp	r3, r7
   147c0:	bls	14880 <pclose@plt+0x378c>
   147c4:	orr	r5, r7, #8
   147c8:	cmp	r5, r7
   147cc:	beq	147b4 <pclose@plt+0x36c0>
   147d0:	mov	r1, r7
   147d4:	mov	r0, r9
   147d8:	bl	14900 <pclose@plt+0x380c>
   147dc:	cmp	r0, #0
   147e0:	beq	147b0 <pclose@plt+0x36bc>
   147e4:	mov	r1, r5
   147e8:	mov	r0, r9
   147ec:	bl	14900 <pclose@plt+0x380c>
   147f0:	cmp	r0, #0
   147f4:	movne	r4, #1
   147f8:	bne	1483c <pclose@plt+0x3748>
   147fc:	b	147b0 <pclose@plt+0x36bc>
   14800:	mov	r1, r5
   14804:	mov	r0, r9
   14808:	bl	14900 <pclose@plt+0x380c>
   1480c:	cmp	r0, #0
   14810:	beq	14200 <pclose@plt+0x310c>
   14814:	mov	r2, r4
   14818:	mov	r1, r5
   1481c:	mov	r0, r9
   14820:	bl	14ab8 <pclose@plt+0x39c4>
   14824:	orr	r6, r6, #2048	; 0x800
   14828:	cmp	r6, r0
   1482c:	bne	14200 <pclose@plt+0x310c>
   14830:	add	r4, r4, #1
   14834:	cmp	r4, #256	; 0x100
   14838:	beq	147b0 <pclose@plt+0x36bc>
   1483c:	mov	r2, r4
   14840:	mov	r1, r7
   14844:	mov	r0, r9
   14848:	bl	14ab8 <pclose@plt+0x39c4>
   1484c:	cmn	r0, #1
   14850:	beq	147b0 <pclose@plt+0x36bc>
   14854:	asrs	r2, r0, #8
   14858:	moveq	r3, #1
   1485c:	movne	r3, #0
   14860:	cmp	r2, #11
   14864:	orreq	r3, r3, #1
   14868:	cmp	r3, #0
   1486c:	beq	14830 <pclose@plt+0x373c>
   14870:	uxtb	r6, r0
   14874:	cmp	r6, #127	; 0x7f
   14878:	bgt	14830 <pclose@plt+0x373c>
   1487c:	b	14800 <pclose@plt+0x370c>
   14880:	ldr	r0, [pc, #56]	; 148c0 <pclose@plt+0x37cc>
   14884:	ldr	r3, [sp, #12]
   14888:	mov	r2, #12
   1488c:	mov	r1, #1
   14890:	add	r0, pc, r0
   14894:	bl	10efc <fwrite@plt>
   14898:	mov	r3, #1
   1489c:	str	r3, [sp, #44]	; 0x2c
   148a0:	b	14208 <pclose@plt+0x3114>
   148a4:	bl	10e9c <__stack_chk_fail@plt>
   148a8:	andeq	r6, r2, r8, asr #28
   148ac:	andeq	r0, r0, r8, lsl #2
   148b0:	andeq	r8, r0, r0, lsl r1
   148b4:	andeq	r8, r0, r8, ror r5
   148b8:	andeq	r0, r0, ip, lsl #2
   148bc:	andeq	r7, r0, ip, ror #23
   148c0:	andeq	r7, r0, ip, lsl pc
   148c4:	push	{r4, r5, r6, r7, r8, lr}
   148c8:	mov	r4, r0
   148cc:	mov	r5, r1
   148d0:	mov	r6, r2
   148d4:	mov	r7, r3
   148d8:	bl	13fd8 <pclose@plt+0x2ee4>
   148dc:	mov	r1, r5
   148e0:	mov	r0, r4
   148e4:	mov	r3, r7
   148e8:	mov	r2, r6
   148ec:	bl	1419c <pclose@plt+0x30a8>
   148f0:	mov	r1, r5
   148f4:	mov	r0, r4
   148f8:	pop	{r4, r5, r6, r7, r8, lr}
   148fc:	b	13d28 <pclose@plt+0x2c34>
   14900:	push	{r4, lr}
   14904:	ldr	r0, [r0, #8]
   14908:	bl	1b2a8 <pclose@plt+0xa1b4>
   1490c:	adds	r0, r0, #0
   14910:	movne	r0, #1
   14914:	pop	{r4, pc}
   14918:	push	{r4, lr}
   1491c:	ldr	r0, [r0, #8]
   14920:	bl	1b2a8 <pclose@plt+0xa1b4>
   14924:	cmp	r0, #0
   14928:	ldrne	r0, [r0, #12]
   1492c:	pop	{r4, pc}
   14930:	push	{r4, lr}
   14934:	mov	r4, r2
   14938:	ldr	r0, [r0, #8]
   1493c:	bl	1b2a8 <pclose@plt+0xa1b4>
   14940:	cmp	r0, #0
   14944:	beq	14968 <pclose@plt+0x3874>
   14948:	mov	r1, r4
   1494c:	bl	1b288 <pclose@plt+0xa194>
   14950:	cmp	r0, #0
   14954:	beq	14968 <pclose@plt+0x3874>
   14958:	ldr	r0, [r0]
   1495c:	adds	r0, r0, #0
   14960:	movne	r0, #1
   14964:	pop	{r4, pc}
   14968:	mov	r0, #0
   1496c:	pop	{r4, pc}
   14970:	ldr	r3, [pc, #288]	; 14a98 <pclose@plt+0x39a4>
   14974:	ldr	r2, [pc, #288]	; 14a9c <pclose@plt+0x39a8>
   14978:	add	r3, pc, r3
   1497c:	push	{r4, r5, r6, r7, lr}
   14980:	sub	sp, sp, #20
   14984:	ldr	r5, [r3, r2]
   14988:	mov	r6, r0
   1498c:	mov	r7, r1
   14990:	ldr	r3, [r5]
   14994:	str	r3, [sp, #12]
   14998:	bl	14900 <pclose@plt+0x380c>
   1499c:	subs	r4, r0, #0
   149a0:	movne	r4, #0
   149a4:	beq	149c4 <pclose@plt+0x38d0>
   149a8:	ldr	r2, [sp, #12]
   149ac:	ldr	r3, [r5]
   149b0:	mov	r0, r4
   149b4:	cmp	r2, r3
   149b8:	bne	14a94 <pclose@plt+0x39a0>
   149bc:	add	sp, sp, #20
   149c0:	pop	{r4, r5, r6, r7, pc}
   149c4:	mov	r0, #16
   149c8:	bl	10f50 <malloc@plt>
   149cc:	cmp	r0, #0
   149d0:	str	r0, [sp, #8]
   149d4:	beq	14a40 <pclose@plt+0x394c>
   149d8:	mov	r2, r4
   149dc:	mov	r1, #4
   149e0:	bl	1b15c <pclose@plt+0xa068>
   149e4:	mov	r1, r7
   149e8:	add	r2, sp, #8
   149ec:	ldr	r0, [r6, #8]
   149f0:	bl	1b2c8 <pclose@plt+0xa1d4>
   149f4:	cmp	r0, #0
   149f8:	bge	149a8 <pclose@plt+0x38b4>
   149fc:	ldr	r0, [sp, #8]
   14a00:	bl	10e48 <free@plt>
   14a04:	ldr	r3, [r6, #28]
   14a08:	cmp	r3, #2
   14a0c:	ble	14a4c <pclose@plt+0x3958>
   14a10:	ldr	r1, [pc, #136]	; 14aa0 <pclose@plt+0x39ac>
   14a14:	mov	r2, #5
   14a18:	mov	r0, r4
   14a1c:	add	r1, pc, r1
   14a20:	bl	10e84 <dcgettext@plt>
   14a24:	ldr	r2, [pc, #120]	; 14aa4 <pclose@plt+0x39b0>
   14a28:	mov	r3, #66	; 0x42
   14a2c:	add	r2, pc, r2
   14a30:	str	r2, [sp]
   14a34:	ldr	r2, [pc, #108]	; 14aa8 <pclose@plt+0x39b4>
   14a38:	add	r2, pc, r2
   14a3c:	b	14a7c <pclose@plt+0x3988>
   14a40:	ldr	r3, [r6, #28]
   14a44:	cmp	r3, #2
   14a48:	bgt	14a54 <pclose@plt+0x3960>
   14a4c:	mvn	r4, #0
   14a50:	b	149a8 <pclose@plt+0x38b4>
   14a54:	ldr	r1, [pc, #80]	; 14aac <pclose@plt+0x39b8>
   14a58:	mov	r2, #5
   14a5c:	add	r1, pc, r1
   14a60:	bl	10e84 <dcgettext@plt>
   14a64:	ldr	r2, [pc, #68]	; 14ab0 <pclose@plt+0x39bc>
   14a68:	mov	r3, #58	; 0x3a
   14a6c:	add	r2, pc, r2
   14a70:	str	r2, [sp]
   14a74:	ldr	r2, [pc, #56]	; 14ab4 <pclose@plt+0x39c0>
   14a78:	add	r2, pc, r2
   14a7c:	str	r0, [sp, #4]
   14a80:	mov	r1, #3
   14a84:	mov	r0, r6
   14a88:	mvn	r4, #0
   14a8c:	bl	12994 <pclose@plt+0x18a0>
   14a90:	b	149a8 <pclose@plt+0x38b4>
   14a94:	bl	10e9c <__stack_chk_fail@plt>
   14a98:	andeq	r6, r2, r0, lsl #13
   14a9c:	andeq	r0, r0, r8, lsl #2
   14aa0:	andeq	r7, r0, r4, ror r8
   14aa4:	andeq	r7, r0, ip, asr #27
   14aa8:	andeq	r7, r0, r4, lsl #28
   14aac:	andeq	r7, r0, r4, lsr r8
   14ab0:	andeq	r7, r0, ip, lsl #27
   14ab4:	andeq	r7, r0, r4, asr #27
   14ab8:	push	{r4, r5, r6, lr}
   14abc:	mov	r4, r0
   14ac0:	sub	sp, sp, #16
   14ac4:	ldr	r0, [r0, #8]
   14ac8:	mov	r5, r2
   14acc:	mov	r6, r1
   14ad0:	bl	1b2a8 <pclose@plt+0xa1b4>
   14ad4:	cmp	r0, #0
   14ad8:	beq	14b10 <pclose@plt+0x3a1c>
   14adc:	mov	r1, r5
   14ae0:	bl	1b288 <pclose@plt+0xa194>
   14ae4:	cmp	r0, #0
   14ae8:	beq	14b04 <pclose@plt+0x3a10>
   14aec:	ldr	r0, [r0]
   14af0:	cmp	r0, #0
   14af4:	subne	r0, r0, #1
   14af8:	beq	14b04 <pclose@plt+0x3a10>
   14afc:	add	sp, sp, #16
   14b00:	pop	{r4, r5, r6, pc}
   14b04:	mov	r0, #512	; 0x200
   14b08:	add	sp, sp, #16
   14b0c:	pop	{r4, r5, r6, pc}
   14b10:	ldr	r3, [r4, #28]
   14b14:	cmp	r3, #2
   14b18:	mvnle	r0, #0
   14b1c:	ble	14afc <pclose@plt+0x3a08>
   14b20:	ldr	r1, [pc, #68]	; 14b6c <pclose@plt+0x3a78>
   14b24:	mov	r2, #5
   14b28:	add	r1, pc, r1
   14b2c:	bl	10e84 <dcgettext@plt>
   14b30:	ldr	r3, [pc, #56]	; 14b70 <pclose@plt+0x3a7c>
   14b34:	ldr	r2, [pc, #56]	; 14b74 <pclose@plt+0x3a80>
   14b38:	add	r3, pc, r3
   14b3c:	add	r3, r3, #12
   14b40:	str	r3, [sp]
   14b44:	str	r6, [sp, #8]
   14b48:	mov	r3, #80	; 0x50
   14b4c:	add	r2, pc, r2
   14b50:	mov	r1, #3
   14b54:	str	r0, [sp, #4]
   14b58:	mov	r0, r4
   14b5c:	bl	12994 <pclose@plt+0x18a0>
   14b60:	mvn	r0, #0
   14b64:	add	sp, sp, #16
   14b68:	pop	{r4, r5, r6, pc}
   14b6c:	andeq	r7, r0, ip, lsl sp
   14b70:	andeq	r7, r0, r0, asr #25
   14b74:	strdeq	r7, [r0], -r0
   14b78:	push	{r4, r5, r6, r7, lr}
   14b7c:	mov	r4, r0
   14b80:	sub	sp, sp, #20
   14b84:	ldr	r0, [r0, #8]
   14b88:	mov	r5, r2
   14b8c:	mov	r7, r1
   14b90:	bl	1b2a8 <pclose@plt+0xa1b4>
   14b94:	subs	r6, r0, #0
   14b98:	beq	14bb8 <pclose@plt+0x3ac4>
   14b9c:	mov	r1, r5
   14ba0:	bl	1b21c <pclose@plt+0xa128>
   14ba4:	cmp	r0, #0
   14ba8:	bne	14bd0 <pclose@plt+0x3adc>
   14bac:	mov	r0, #0
   14bb0:	add	sp, sp, #20
   14bb4:	pop	{r4, r5, r6, r7, pc}
   14bb8:	ldr	r3, [r4, #28]
   14bbc:	cmp	r3, #2
   14bc0:	bgt	14c3c <pclose@plt+0x3b48>
   14bc4:	mvn	r0, #0
   14bc8:	add	sp, sp, #20
   14bcc:	pop	{r4, r5, r6, r7, pc}
   14bd0:	mov	r0, r6
   14bd4:	mov	r1, r5
   14bd8:	bl	1b320 <pclose@plt+0xa22c>
   14bdc:	cmp	r0, #0
   14be0:	bge	14bac <pclose@plt+0x3ab8>
   14be4:	ldr	r3, [r4, #28]
   14be8:	cmp	r3, #2
   14bec:	ble	14bc4 <pclose@plt+0x3ad0>
   14bf0:	ldr	r1, [pc, #144]	; 14c88 <pclose@plt+0x3b94>
   14bf4:	mov	r2, #5
   14bf8:	add	r1, pc, r1
   14bfc:	mov	r0, #0
   14c00:	bl	10e84 <dcgettext@plt>
   14c04:	ldr	r3, [pc, #128]	; 14c8c <pclose@plt+0x3b98>
   14c08:	ldr	r2, [pc, #128]	; 14c90 <pclose@plt+0x3b9c>
   14c0c:	add	r3, pc, r3
   14c10:	add	r3, r3, #24
   14c14:	str	r3, [sp]
   14c18:	str	r7, [sp, #12]
   14c1c:	str	r5, [sp, #8]
   14c20:	mov	r3, #107	; 0x6b
   14c24:	add	r2, pc, r2
   14c28:	mov	r1, #3
   14c2c:	str	r0, [sp, #4]
   14c30:	mov	r0, r4
   14c34:	bl	12994 <pclose@plt+0x18a0>
   14c38:	b	14bc4 <pclose@plt+0x3ad0>
   14c3c:	ldr	r1, [pc, #80]	; 14c94 <pclose@plt+0x3ba0>
   14c40:	mov	r2, #5
   14c44:	add	r1, pc, r1
   14c48:	bl	10e84 <dcgettext@plt>
   14c4c:	ldr	r3, [pc, #68]	; 14c98 <pclose@plt+0x3ba4>
   14c50:	ldr	r2, [pc, #68]	; 14c9c <pclose@plt+0x3ba8>
   14c54:	add	r3, pc, r3
   14c58:	add	r3, r3, #24
   14c5c:	str	r3, [sp]
   14c60:	str	r7, [sp, #8]
   14c64:	mov	r3, #98	; 0x62
   14c68:	add	r2, pc, r2
   14c6c:	mov	r1, #3
   14c70:	str	r0, [sp, #4]
   14c74:	mov	r0, r4
   14c78:	bl	12994 <pclose@plt+0x18a0>
   14c7c:	mvn	r0, #0
   14c80:	add	sp, sp, #20
   14c84:	pop	{r4, r5, r6, r7, pc}
   14c88:	andeq	r7, r0, r4, ror #24
   14c8c:	andeq	r7, r0, ip, ror #23
   14c90:	andeq	r7, r0, r8, lsl ip
   14c94:	andeq	r7, r0, r0, lsl #24
   14c98:	andeq	r7, r0, r4, lsr #23
   14c9c:	ldrdeq	r7, [r0], -r4
   14ca0:	ldr	ip, [pc, #636]	; 14f24 <pclose@plt+0x3e30>
   14ca4:	push	{r4, r5, r6, r7, r8, r9, lr}
   14ca8:	add	ip, pc, ip
   14cac:	ldr	lr, [pc, #628]	; 14f28 <pclose@plt+0x3e34>
   14cb0:	sub	sp, sp, #28
   14cb4:	mov	r4, r3
   14cb8:	ldr	r6, [ip, lr]
   14cbc:	cmn	r3, #1
   14cc0:	mov	r3, ip
   14cc4:	ldr	r3, [r6]
   14cc8:	add	ip, r4, #1
   14ccc:	mov	r5, r0
   14cd0:	str	ip, [sp, #16]
   14cd4:	str	r3, [sp, #20]
   14cd8:	bne	14d04 <pclose@plt+0x3c10>
   14cdc:	ldr	r3, [r0, #28]
   14ce0:	cmp	r3, #2
   14ce4:	bgt	14d88 <pclose@plt+0x3c94>
   14ce8:	mvn	r0, #0
   14cec:	ldr	r2, [sp, #20]
   14cf0:	ldr	r3, [r6]
   14cf4:	cmp	r2, r3
   14cf8:	bne	14f20 <pclose@plt+0x3e2c>
   14cfc:	add	sp, sp, #28
   14d00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14d04:	ldr	r0, [r0, #8]
   14d08:	mov	r7, r2
   14d0c:	mov	r8, r1
   14d10:	bl	1b2a8 <pclose@plt+0xa1b4>
   14d14:	cmp	r0, #0
   14d18:	beq	14dd4 <pclose@plt+0x3ce0>
   14d1c:	ldr	r2, [r5, #4]
   14d20:	sub	r3, r4, #512	; 0x200
   14d24:	clz	r3, r3
   14d28:	lsr	r3, r3, #5
   14d2c:	ands	r3, r3, r2, lsr #2
   14d30:	bne	14e8c <pclose@plt+0x3d98>
   14d34:	mov	r1, r8
   14d38:	ldr	r0, [r5, #8]
   14d3c:	bl	1b2a8 <pclose@plt+0xa1b4>
   14d40:	add	r2, sp, #16
   14d44:	mov	r1, r7
   14d48:	bl	1b2c8 <pclose@plt+0xa1d4>
   14d4c:	cmp	r0, #0
   14d50:	blt	14e30 <pclose@plt+0x3d3c>
   14d54:	ldr	r3, [r5, #4]
   14d58:	tst	r3, #4
   14d5c:	beq	14d80 <pclose@plt+0x3c8c>
   14d60:	orr	r9, r8, #8
   14d64:	cmp	r8, r9
   14d68:	beq	14d80 <pclose@plt+0x3c8c>
   14d6c:	mov	r1, r9
   14d70:	mov	r0, r5
   14d74:	bl	14900 <pclose@plt+0x380c>
   14d78:	cmp	r0, #0
   14d7c:	bne	14ea8 <pclose@plt+0x3db4>
   14d80:	mov	r0, #0
   14d84:	b	14cec <pclose@plt+0x3bf8>
   14d88:	ldr	r1, [pc, #412]	; 14f2c <pclose@plt+0x3e38>
   14d8c:	mov	r2, #5
   14d90:	add	r1, pc, r1
   14d94:	mov	r0, #0
   14d98:	bl	10e84 <dcgettext@plt>
   14d9c:	ldr	r3, [pc, #396]	; 14f30 <pclose@plt+0x3e3c>
   14da0:	ldr	r2, [pc, #396]	; 14f34 <pclose@plt+0x3e40>
   14da4:	add	r3, pc, r3
   14da8:	add	r3, r3, #36	; 0x24
   14dac:	str	r3, [sp]
   14db0:	str	r4, [sp, #8]
   14db4:	mov	r3, #122	; 0x7a
   14db8:	add	r2, pc, r2
   14dbc:	mov	r1, #3
   14dc0:	str	r0, [sp, #4]
   14dc4:	mov	r0, r5
   14dc8:	bl	12994 <pclose@plt+0x18a0>
   14dcc:	mov	r0, r4
   14dd0:	b	14cec <pclose@plt+0x3bf8>
   14dd4:	ldr	r3, [r5, #4]
   14dd8:	tst	r3, #2
   14ddc:	beq	14f08 <pclose@plt+0x3e14>
   14de0:	ldr	r3, [r5, #28]
   14de4:	cmp	r3, #2
   14de8:	ble	14ce8 <pclose@plt+0x3bf4>
   14dec:	ldr	r1, [pc, #324]	; 14f38 <pclose@plt+0x3e44>
   14df0:	mov	r2, #5
   14df4:	add	r1, pc, r1
   14df8:	bl	10e84 <dcgettext@plt>
   14dfc:	ldr	r3, [pc, #312]	; 14f3c <pclose@plt+0x3e48>
   14e00:	ldr	r2, [pc, #312]	; 14f40 <pclose@plt+0x3e4c>
   14e04:	add	r3, pc, r3
   14e08:	add	r3, r3, #36	; 0x24
   14e0c:	str	r3, [sp]
   14e10:	str	r8, [sp, #8]
   14e14:	mov	r3, #130	; 0x82
   14e18:	add	r2, pc, r2
   14e1c:	mov	r1, #3
   14e20:	str	r0, [sp, #4]
   14e24:	mov	r0, r5
   14e28:	bl	12994 <pclose@plt+0x18a0>
   14e2c:	b	14ce8 <pclose@plt+0x3bf4>
   14e30:	ldr	r3, [r5, #28]
   14e34:	cmp	r3, #2
   14e38:	ble	14ce8 <pclose@plt+0x3bf4>
   14e3c:	ldr	r1, [pc, #256]	; 14f44 <pclose@plt+0x3e50>
   14e40:	mov	r2, #5
   14e44:	add	r1, pc, r1
   14e48:	mov	r0, #0
   14e4c:	bl	10e84 <dcgettext@plt>
   14e50:	ldr	r3, [pc, #240]	; 14f48 <pclose@plt+0x3e54>
   14e54:	ldr	r2, [pc, #240]	; 14f4c <pclose@plt+0x3e58>
   14e58:	add	r3, pc, r3
   14e5c:	add	r3, r3, #36	; 0x24
   14e60:	str	r3, [sp]
   14e64:	str	r8, [sp, #12]
   14e68:	str	r7, [sp, #8]
   14e6c:	mov	r3, #146	; 0x92
   14e70:	add	r2, pc, r2
   14e74:	mov	r1, #3
   14e78:	str	r0, [sp, #4]
   14e7c:	mov	r0, r5
   14e80:	bl	12994 <pclose@plt+0x18a0>
   14e84:	mvn	r0, #0
   14e88:	b	14cec <pclose@plt+0x3bf8>
   14e8c:	mov	r2, r7
   14e90:	mov	r1, r8
   14e94:	mov	r0, r5
   14e98:	bl	14930 <pclose@plt+0x383c>
   14e9c:	cmp	r0, #0
   14ea0:	beq	14d34 <pclose@plt+0x3c40>
   14ea4:	b	14d80 <pclose@plt+0x3c8c>
   14ea8:	mov	r2, r7
   14eac:	mov	r1, r9
   14eb0:	mov	r0, r5
   14eb4:	bl	14930 <pclose@plt+0x383c>
   14eb8:	cmp	r0, #0
   14ebc:	bne	14d80 <pclose@plt+0x3c8c>
   14ec0:	asrs	r1, r4, #8
   14ec4:	moveq	r2, #1
   14ec8:	movne	r2, #0
   14ecc:	cmp	r1, #11
   14ed0:	orreq	r2, r2, #1
   14ed4:	uxtb	r3, r4
   14ed8:	cmp	r3, #127	; 0x7f
   14edc:	movgt	r2, #0
   14ee0:	andle	r2, r2, #1
   14ee4:	cmp	r2, #0
   14ee8:	beq	14d80 <pclose@plt+0x3c8c>
   14eec:	orr	r3, r3, #2048	; 0x800
   14ef0:	mov	r2, r7
   14ef4:	mov	r1, r9
   14ef8:	mov	r0, r5
   14efc:	bl	14ca0 <pclose@plt+0x3bac>
   14f00:	asr	r0, r0, #31
   14f04:	b	14cec <pclose@plt+0x3bf8>
   14f08:	mov	r1, r8
   14f0c:	mov	r0, r5
   14f10:	bl	14970 <pclose@plt+0x387c>
   14f14:	cmp	r0, #0
   14f18:	bge	14d1c <pclose@plt+0x3c28>
   14f1c:	b	14ce8 <pclose@plt+0x3bf4>
   14f20:	bl	10e9c <__stack_chk_fail@plt>
   14f24:	andeq	r6, r2, r0, asr r3
   14f28:	andeq	r0, r0, r8, lsl #2
   14f2c:	strdeq	r7, [r0], -r0
   14f30:	andeq	r7, r0, r4, asr sl
   14f34:	andeq	r7, r0, r4, lsl #21
   14f38:			; <UNDEFINED> instruction: 0x00007ab4
   14f3c:	strdeq	r7, [r0], -r4
   14f40:	andeq	r7, r0, r4, lsr #20
   14f44:	muleq	r0, r4, sl
   14f48:	andeq	r7, r0, r0, lsr #19
   14f4c:	andeq	r7, r0, ip, asr #19
   14f50:	ldr	r3, [pc, #704]	; 15218 <pclose@plt+0x4124>
   14f54:	ldr	r2, [pc, #704]	; 1521c <pclose@plt+0x4128>
   14f58:	add	r3, pc, r3
   14f5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14f60:	sub	sp, sp, #48	; 0x30
   14f64:	ldr	sl, [r3, r2]
   14f68:	ldr	r7, [r0, #4]
   14f6c:	mov	r5, r0
   14f70:	ldr	r3, [sl]
   14f74:	ands	r7, r7, #2
   14f78:	str	r3, [sp, #44]	; 0x2c
   14f7c:	beq	14f94 <pclose@plt+0x3ea0>
   14f80:	ldr	r3, [r0, #8]
   14f84:	ldr	r7, [r3, #12]
   14f88:	cmp	r7, #0
   14f8c:	movne	r7, #0
   14f90:	bne	15134 <pclose@plt+0x4040>
   14f94:	ldr	r0, [r5, #36]	; 0x24
   14f98:	ldr	r3, [r0, #12]
   14f9c:	cmp	r3, #0
   14fa0:	beq	15104 <pclose@plt+0x4010>
   14fa4:	mov	r6, #0
   14fa8:	add	r9, sp, #44	; 0x2c
   14fac:	mov	r1, r6
   14fb0:	bl	1b288 <pclose@plt+0xa194>
   14fb4:	cmp	r0, #0
   14fb8:	beq	150f0 <pclose@plt+0x3ffc>
   14fbc:	ldrb	r3, [r0]
   14fc0:	cmp	r3, #0
   14fc4:	beq	150f0 <pclose@plt+0x3ffc>
   14fc8:	mov	r1, r7
   14fcc:	mov	r0, r5
   14fd0:	bl	14900 <pclose@plt+0x380c>
   14fd4:	cmp	r0, #0
   14fd8:	beq	151c4 <pclose@plt+0x40d0>
   14fdc:	mov	r2, r6
   14fe0:	mov	r1, r7
   14fe4:	mov	r0, r5
   14fe8:	bl	14ab8 <pclose@plt+0x39c4>
   14fec:	uxth	r3, r0
   14ff0:	lsrs	r1, r3, #8
   14ff4:	moveq	r2, #1
   14ff8:	movne	r2, #0
   14ffc:	cmp	r1, #11
   15000:	orreq	r2, r2, #1
   15004:	cmp	r2, #0
   15008:	beq	1514c <pclose@plt+0x4058>
   1500c:	and	r2, r3, #223	; 0xdf
   15010:	sub	r2, r2, #65	; 0x41
   15014:	cmp	r2, #25
   15018:	bhi	1514c <pclose@plt+0x4058>
   1501c:	uxtb	r1, r3
   15020:	and	r3, r3, #159	; 0x9f
   15024:	strh	r3, [sp, #20]
   15028:	strh	r3, [sp, #22]
   1502c:	strh	r3, [sp, #24]
   15030:	strh	r3, [sp, #26]
   15034:	orr	r3, r1, #2816	; 0xb00
   15038:	eor	r1, r1, #2848	; 0xb20
   1503c:	add	r2, sp, #28
   15040:	strh	r3, [sp, #12]
   15044:	strh	r3, [sp, #16]
   15048:	strh	r1, [sp, #14]
   1504c:	strh	r1, [sp, #18]
   15050:	b	15058 <pclose@plt+0x3f64>
   15054:	ldrh	r3, [r2, #-16]
   15058:	uxtb	r3, r3
   1505c:	orr	r3, r3, #2048	; 0x800
   15060:	strh	r3, [r2], #2
   15064:	cmp	r2, r9
   15068:	bne	15054 <pclose@plt+0x3f60>
   1506c:	ldr	r3, [r5, #8]
   15070:	ldr	r3, [r3, #12]
   15074:	cmp	r3, #0
   15078:	beq	150f0 <pclose@plt+0x3ffc>
   1507c:	mov	r4, #0
   15080:	mov	r1, r4
   15084:	mov	r0, r5
   15088:	bl	14900 <pclose@plt+0x380c>
   1508c:	cmp	r0, #0
   15090:	beq	150dc <pclose@plt+0x3fe8>
   15094:	cmp	r4, #0
   15098:	beq	150b4 <pclose@plt+0x3fc0>
   1509c:	mov	r2, r6
   150a0:	mov	r1, r4
   150a4:	mov	r0, r5
   150a8:	bl	14930 <pclose@plt+0x383c>
   150ac:	cmp	r0, #0
   150b0:	bne	150dc <pclose@plt+0x3fe8>
   150b4:	and	r3, r4, #15
   150b8:	add	r1, sp, #48	; 0x30
   150bc:	add	r3, r1, r3, lsl #1
   150c0:	mov	r2, r6
   150c4:	mov	r1, r4
   150c8:	ldrh	r3, [r3, #-36]	; 0xffffffdc
   150cc:	mov	r0, r5
   150d0:	bl	14ca0 <pclose@plt+0x3bac>
   150d4:	cmp	r0, #0
   150d8:	blt	1520c <pclose@plt+0x4118>
   150dc:	ldr	r3, [r5, #8]
   150e0:	add	r4, r4, #1
   150e4:	ldr	r3, [r3, #12]
   150e8:	cmp	r4, r3
   150ec:	bcc	15080 <pclose@plt+0x3f8c>
   150f0:	ldr	r0, [r5, #36]	; 0x24
   150f4:	add	r6, r6, #1
   150f8:	ldr	r3, [r0, #12]
   150fc:	cmp	r3, r6
   15100:	bhi	14fac <pclose@plt+0x3eb8>
   15104:	mov	r0, #0
   15108:	ldr	r2, [sp, #44]	; 0x2c
   1510c:	ldr	r3, [sl]
   15110:	cmp	r2, r3
   15114:	bne	15214 <pclose@plt+0x4120>
   15118:	add	sp, sp, #48	; 0x30
   1511c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15120:	ldr	r3, [r5, #8]
   15124:	add	r7, r7, #1
   15128:	ldr	r3, [r3, #12]
   1512c:	cmp	r3, r7
   15130:	bls	14f94 <pclose@plt+0x3ea0>
   15134:	mov	r1, r7
   15138:	mov	r0, r5
   1513c:	bl	14900 <pclose@plt+0x380c>
   15140:	cmp	r0, #0
   15144:	beq	15120 <pclose@plt+0x402c>
   15148:	b	14f94 <pclose@plt+0x3ea0>
   1514c:	ldr	r3, [r5, #8]
   15150:	ldr	r3, [r3, #12]
   15154:	cmp	r3, #1
   15158:	uxthhi	r8, r0
   1515c:	movhi	r4, #1
   15160:	bls	150f0 <pclose@plt+0x3ffc>
   15164:	mov	r1, r4
   15168:	mov	r0, r5
   1516c:	bl	14900 <pclose@plt+0x380c>
   15170:	cmp	r0, #0
   15174:	beq	151ac <pclose@plt+0x40b8>
   15178:	mov	r2, r6
   1517c:	mov	r1, r4
   15180:	mov	r0, r5
   15184:	bl	14930 <pclose@plt+0x383c>
   15188:	cmp	r0, #0
   1518c:	bne	151ac <pclose@plt+0x40b8>
   15190:	mov	r3, r8
   15194:	mov	r2, r6
   15198:	mov	r1, r4
   1519c:	mov	r0, r5
   151a0:	bl	14ca0 <pclose@plt+0x3bac>
   151a4:	cmp	r0, #0
   151a8:	blt	1520c <pclose@plt+0x4118>
   151ac:	ldr	r3, [r5, #8]
   151b0:	add	r4, r4, #1
   151b4:	ldr	r3, [r3, #12]
   151b8:	cmp	r4, r3
   151bc:	bcc	15164 <pclose@plt+0x4070>
   151c0:	b	150f0 <pclose@plt+0x3ffc>
   151c4:	ldr	r3, [r5, #28]
   151c8:	cmp	r3, #2
   151cc:	ble	1520c <pclose@plt+0x4118>
   151d0:	ldr	r1, [pc, #72]	; 15220 <pclose@plt+0x412c>
   151d4:	mov	r2, #5
   151d8:	add	r1, pc, r1
   151dc:	bl	10e84 <dcgettext@plt>
   151e0:	ldr	r2, [pc, #60]	; 15224 <pclose@plt+0x4130>
   151e4:	mov	r3, #236	; 0xec
   151e8:	add	r2, pc, r2
   151ec:	add	r2, r2, #48	; 0x30
   151f0:	str	r2, [sp]
   151f4:	ldr	r2, [pc, #44]	; 15228 <pclose@plt+0x4134>
   151f8:	mov	r1, #3
   151fc:	add	r2, pc, r2
   15200:	str	r0, [sp, #4]
   15204:	mov	r0, r5
   15208:	bl	12994 <pclose@plt+0x18a0>
   1520c:	mvn	r0, #0
   15210:	b	15108 <pclose@plt+0x4014>
   15214:	bl	10e9c <__stack_chk_fail@plt>
   15218:	andeq	r6, r2, r0, lsr #1
   1521c:	andeq	r0, r0, r8, lsl #2
   15220:	andeq	r7, r0, r4, lsr #14
   15224:	andeq	r7, r0, r0, lsl r6
   15228:	andeq	r7, r0, r0, asr #12
   1522c:	ldr	r3, [pc, #660]	; 154c8 <pclose@plt+0x43d4>
   15230:	ldr	r2, [pc, #660]	; 154cc <pclose@plt+0x43d8>
   15234:	add	r3, pc, r3
   15238:	push	{r4, r5, r6, r7, r8, r9, lr}
   1523c:	mov	r6, r0
   15240:	ldr	r0, [r0, #16]
   15244:	ldr	r7, [r3, r2]
   15248:	sub	sp, sp, #3088	; 0xc10
   1524c:	ldr	r5, [r0, #8]
   15250:	sub	sp, sp, #12
   15254:	ldr	r3, [r7]
   15258:	cmp	r5, #256	; 0x100
   1525c:	mov	r8, r1
   15260:	str	r3, [sp, #3092]	; 0xc14
   15264:	bhi	15410 <pclose@plt+0x431c>
   15268:	adds	r3, r5, #0
   1526c:	movne	r3, #1
   15270:	ldr	r2, [r0, #12]
   15274:	ldr	r4, [r6]
   15278:	cmp	r2, #0
   1527c:	moveq	r3, #0
   15280:	ands	r4, r4, #16
   15284:	beq	15334 <pclose@plt+0x4240>
   15288:	cmp	r3, #0
   1528c:	str	r5, [sp, #16]
   15290:	beq	152fc <pclose@plt+0x4208>
   15294:	mov	r4, #0
   15298:	mov	r9, r4
   1529c:	mov	r1, r9
   152a0:	bl	1b2a8 <pclose@plt+0xa1b4>
   152a4:	cmp	r0, #0
   152a8:	beq	152d4 <pclose@plt+0x41e0>
   152ac:	add	r3, r4, r4, lsl #1
   152b0:	add	r2, sp, #3088	; 0xc10
   152b4:	add	r2, r2, #8
   152b8:	add	r3, r2, r3, lsl #2
   152bc:	ldmib	r0, {r1, r2}
   152c0:	ldr	ip, [r0]
   152c4:	add	r4, r4, #1
   152c8:	str	ip, [r3, #-3076]	; 0xfffff3fc
   152cc:	str	r1, [r3, #-3072]	; 0xfffff400
   152d0:	str	r2, [r3, #-3068]	; 0xfffff404
   152d4:	ldr	r0, [r6, #16]
   152d8:	add	r9, r9, #1
   152dc:	ldr	r2, [r0, #12]
   152e0:	cmp	r2, r9
   152e4:	movls	r3, #0
   152e8:	movhi	r3, #1
   152ec:	cmp	r4, r5
   152f0:	movcs	r3, #0
   152f4:	cmp	r3, #0
   152f8:	bne	1529c <pclose@plt+0x41a8>
   152fc:	mov	r0, r8
   15300:	add	r2, sp, #16
   15304:	ldr	r1, [pc, #452]	; 154d0 <pclose@plt+0x43dc>
   15308:	bl	10f08 <ioctl@plt>
   1530c:	cmp	r0, #0
   15310:	bne	15470 <pclose@plt+0x437c>
   15314:	mov	r0, r5
   15318:	ldr	r2, [sp, #3092]	; 0xc14
   1531c:	ldr	r3, [r7]
   15320:	cmp	r2, r3
   15324:	bne	154c4 <pclose@plt+0x43d0>
   15328:	add	sp, sp, #3088	; 0xc10
   1532c:	add	sp, sp, #12
   15330:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15334:	cmp	r3, #0
   15338:	str	r5, [sp, #16]
   1533c:	beq	153a8 <pclose@plt+0x42b4>
   15340:	mov	r9, r4
   15344:	mov	r1, r9
   15348:	bl	1b2a8 <pclose@plt+0xa1b4>
   1534c:	cmp	r0, #0
   15350:	beq	15380 <pclose@plt+0x428c>
   15354:	add	r2, sp, #3088	; 0xc10
   15358:	add	r3, r4, r4, lsl #1
   1535c:	add	r2, r2, #8
   15360:	add	r3, r2, r3
   15364:	ldr	r2, [r0]
   15368:	add	r4, r4, #1
   1536c:	strb	r2, [r3, #-3076]	; 0xfffff3fc
   15370:	ldr	r2, [r0, #4]
   15374:	strb	r2, [r3, #-3075]	; 0xfffff3fd
   15378:	ldr	r2, [r0, #8]
   1537c:	strb	r2, [r3, #-3074]	; 0xfffff3fe
   15380:	ldr	r0, [r6, #16]
   15384:	add	r9, r9, #1
   15388:	ldr	r2, [r0, #12]
   1538c:	cmp	r2, r9
   15390:	movls	r3, #0
   15394:	movhi	r3, #1
   15398:	cmp	r4, r5
   1539c:	movcs	r3, #0
   153a0:	cmp	r3, #0
   153a4:	bne	15344 <pclose@plt+0x4250>
   153a8:	mov	r0, r8
   153ac:	add	r2, sp, #16
   153b0:	ldr	r1, [pc, #284]	; 154d4 <pclose@plt+0x43e0>
   153b4:	bl	10f08 <ioctl@plt>
   153b8:	cmp	r0, #0
   153bc:	beq	15314 <pclose@plt+0x4220>
   153c0:	ldr	r3, [r6, #28]
   153c4:	cmp	r3, #2
   153c8:	ble	154bc <pclose@plt+0x43c8>
   153cc:	bl	10fe0 <__errno_location@plt>
   153d0:	ldr	r0, [r0]
   153d4:	bl	10f68 <strerror@plt>
   153d8:	ldr	r2, [pc, #248]	; 154d8 <pclose@plt+0x43e4>
   153dc:	ldr	r3, [pc, #248]	; 154dc <pclose@plt+0x43e8>
   153e0:	add	r2, pc, r2
   153e4:	str	r2, [sp, #4]
   153e8:	ldr	r2, [pc, #240]	; 154e0 <pclose@plt+0x43ec>
   153ec:	add	r3, pc, r3
   153f0:	str	r3, [sp]
   153f4:	add	r2, pc, r2
   153f8:	mov	r3, #234	; 0xea
   153fc:	mov	r1, #3
   15400:	str	r0, [sp, #8]
   15404:	mov	r0, r6
   15408:	bl	12994 <pclose@plt+0x18a0>
   1540c:	b	154bc <pclose@plt+0x43c8>
   15410:	ldr	r3, [r6, #28]
   15414:	cmp	r3, #2
   15418:	movle	r3, #1
   1541c:	movle	r5, #256	; 0x100
   15420:	ble	15270 <pclose@plt+0x417c>
   15424:	ldr	r1, [pc, #184]	; 154e4 <pclose@plt+0x43f0>
   15428:	mov	r2, #5
   1542c:	add	r1, pc, r1
   15430:	mov	r0, #0
   15434:	bl	10e84 <dcgettext@plt>
   15438:	ldr	r2, [pc, #168]	; 154e8 <pclose@plt+0x43f4>
   1543c:	mov	r3, #192	; 0xc0
   15440:	add	r2, pc, r2
   15444:	str	r2, [sp]
   15448:	ldr	r2, [pc, #156]	; 154ec <pclose@plt+0x43f8>
   1544c:	mov	r1, #3
   15450:	add	r2, pc, r2
   15454:	mov	r5, #256	; 0x100
   15458:	str	r0, [sp, #4]
   1545c:	mov	r0, r6
   15460:	bl	12994 <pclose@plt+0x18a0>
   15464:	ldr	r0, [r6, #16]
   15468:	mov	r3, #1
   1546c:	b	15270 <pclose@plt+0x417c>
   15470:	ldr	r3, [r6, #28]
   15474:	cmp	r3, #2
   15478:	ble	154bc <pclose@plt+0x43c8>
   1547c:	bl	10fe0 <__errno_location@plt>
   15480:	ldr	r0, [r0]
   15484:	bl	10f68 <strerror@plt>
   15488:	ldr	r2, [pc, #96]	; 154f0 <pclose@plt+0x43fc>
   1548c:	ldr	r3, [pc, #96]	; 154f4 <pclose@plt+0x4400>
   15490:	add	r2, pc, r2
   15494:	str	r2, [sp, #4]
   15498:	ldr	r2, [pc, #88]	; 154f8 <pclose@plt+0x4404>
   1549c:	add	r3, pc, r3
   154a0:	str	r3, [sp]
   154a4:	add	r2, pc, r2
   154a8:	mov	r3, #212	; 0xd4
   154ac:	mov	r1, #3
   154b0:	str	r0, [sp, #8]
   154b4:	mov	r0, r6
   154b8:	bl	12994 <pclose@plt+0x18a0>
   154bc:	mvn	r0, #0
   154c0:	b	15318 <pclose@plt+0x4224>
   154c4:	bl	10e9c <__stack_chk_fail@plt>
   154c8:	andeq	r5, r2, r4, asr #27
   154cc:	andeq	r0, r0, r8, lsl #2
   154d0:	strdeq	r4, [r0], -fp
   154d4:	andeq	r4, r0, fp, asr #22
   154d8:			; <UNDEFINED> instruction: 0x000075bc
   154dc:	andeq	r7, r0, r8, lsr r5
   154e0:	andeq	r7, r0, r8, lsl #11
   154e4:	andeq	r7, r0, r0, lsr r5
   154e8:	andeq	r7, r0, r4, ror #9
   154ec:	andeq	r7, r0, ip, lsr #10
   154f0:	strdeq	r7, [r0], -r8
   154f4:	andeq	r7, r0, r8, lsl #9
   154f8:	ldrdeq	r7, [r0], -r8
   154fc:	ldr	r3, [pc, #704]	; 157c4 <pclose@plt+0x46d0>
   15500:	ldr	ip, [pc, #704]	; 157c8 <pclose@plt+0x46d4>
   15504:	add	r3, pc, r3
   15508:	ldr	r2, [pc, #700]	; 157cc <pclose@plt+0x46d8>
   1550c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15510:	add	r2, pc, r2
   15514:	ldr	sl, [pc, #692]	; 157d0 <pclose@plt+0x46dc>
   15518:	ldr	ip, [r3, ip]
   1551c:	sub	sp, sp, #556	; 0x22c
   15520:	add	r2, r2, #20
   15524:	add	sl, pc, sl
   15528:	ldr	lr, [pc, #676]	; 157d4 <pclose@plt+0x46e0>
   1552c:	str	r2, [sp, #24]
   15530:	add	r2, sl, #20
   15534:	str	r2, [sp, #16]
   15538:	ldr	r2, [ip]
   1553c:	mov	r6, #0
   15540:	add	lr, pc, lr
   15544:	str	ip, [sp, #28]
   15548:	ldr	r8, [pc, #648]	; 157d8 <pclose@plt+0x46e4>
   1554c:	str	lr, [sp, #20]
   15550:	mov	r5, r0
   15554:	mov	r7, r1
   15558:	mov	r4, r6
   1555c:	str	r2, [sp, #548]	; 0x224
   15560:	b	155a4 <pclose@plt+0x44b0>
   15564:	add	fp, sp, #33	; 0x21
   15568:	mov	r1, r9
   1556c:	mov	r2, #512	; 0x200
   15570:	add	sl, sp, #32
   15574:	mov	r0, fp
   15578:	bl	10f20 <__strcpy_chk@plt>
   1557c:	mov	r2, sl
   15580:	mov	r1, r8
   15584:	mov	r0, r7
   15588:	bl	10f08 <ioctl@plt>
   1558c:	cmp	r0, #0
   15590:	bne	15640 <pclose@plt+0x454c>
   15594:	add	r6, r6, #1
   15598:	add	r4, r4, #1
   1559c:	cmp	r4, #256	; 0x100
   155a0:	beq	1575c <pclose@plt+0x4668>
   155a4:	mov	r1, r4
   155a8:	ldr	r0, [r5, #12]
   155ac:	strb	r4, [sp, #32]
   155b0:	bl	1b2a8 <pclose@plt+0xa1b4>
   155b4:	subs	r9, r0, #0
   155b8:	bne	15564 <pclose@plt+0x4470>
   155bc:	ldr	r3, [r5]
   155c0:	tst	r3, #8
   155c4:	beq	15598 <pclose@plt+0x44a4>
   155c8:	add	r2, sp, #32
   155cc:	mov	r1, r8
   155d0:	mov	r0, r7
   155d4:	strb	r9, [sp, #33]	; 0x21
   155d8:	bl	10f08 <ioctl@plt>
   155dc:	cmp	r0, #0
   155e0:	beq	15594 <pclose@plt+0x44a0>
   155e4:	ldr	r3, [r5, #28]
   155e8:	cmp	r3, #2
   155ec:	ble	15598 <pclose@plt+0x44a4>
   155f0:	ldr	r1, [sp, #20]
   155f4:	mov	r0, r9
   155f8:	mov	r2, #5
   155fc:	bl	10e84 <dcgettext@plt>
   15600:	ldrb	r2, [sp, #32]
   15604:	mov	r1, #1
   15608:	mov	r9, r0
   1560c:	mov	r0, r5
   15610:	bl	1a674 <pclose@plt+0x9580>
   15614:	ldr	r3, [sp, #24]
   15618:	ldr	r2, [pc, #444]	; 157dc <pclose@plt+0x46e8>
   1561c:	str	r3, [sp]
   15620:	str	r9, [sp, #4]
   15624:	mov	r3, #174	; 0xae
   15628:	add	r2, pc, r2
   1562c:	mov	r1, #3
   15630:	str	r0, [sp, #8]
   15634:	mov	r0, r5
   15638:	bl	12994 <pclose@plt+0x18a0>
   1563c:	b	15598 <pclose@plt+0x44a4>
   15640:	mov	r0, fp
   15644:	bl	10fc8 <strlen@plt>
   15648:	lsl	r0, r0, #2
   1564c:	add	r0, r0, #1
   15650:	bl	10f50 <malloc@plt>
   15654:	subs	r9, r0, #0
   15658:	beq	1574c <pclose@plt+0x4658>
   1565c:	ldrb	r2, [sp, #33]	; 0x21
   15660:	mov	r3, r9
   15664:	cmp	r2, #0
   15668:	beq	156c4 <pclose@plt+0x45d0>
   1566c:	mov	r0, #92	; 0x5c
   15670:	mov	lr, #110	; 0x6e
   15674:	mov	ip, #48	; 0x30
   15678:	mov	r1, #51	; 0x33
   1567c:	b	156a0 <pclose@plt+0x45ac>
   15680:	strb	r0, [r3]
   15684:	strb	ip, [r3, #1]
   15688:	strb	r1, [r3, #2]
   1568c:	strb	r1, [r3, #3]
   15690:	add	r3, r3, #4
   15694:	ldrb	r2, [fp, #1]!
   15698:	cmp	r2, #0
   1569c:	beq	156c4 <pclose@plt+0x45d0>
   156a0:	cmp	r2, #10
   156a4:	beq	156e4 <pclose@plt+0x45f0>
   156a8:	cmp	r2, #27
   156ac:	beq	15680 <pclose@plt+0x458c>
   156b0:	strb	r2, [r3]
   156b4:	ldrb	r2, [fp, #1]!
   156b8:	add	r3, r3, #1
   156bc:	cmp	r2, #0
   156c0:	bne	156a0 <pclose@plt+0x45ac>
   156c4:	ldr	r2, [r5, #28]
   156c8:	mov	r0, #0
   156cc:	cmp	r2, #2
   156d0:	strb	r0, [r3]
   156d4:	bgt	156f8 <pclose@plt+0x4604>
   156d8:	mov	r0, r9
   156dc:	bl	10e48 <free@plt>
   156e0:	b	15598 <pclose@plt+0x44a4>
   156e4:	mov	r2, r3
   156e8:	strb	r0, [r2], #2
   156ec:	strb	lr, [r3, #1]
   156f0:	mov	r3, r2
   156f4:	b	15694 <pclose@plt+0x45a0>
   156f8:	ldr	r1, [pc, #224]	; 157e0 <pclose@plt+0x46ec>
   156fc:	mov	r2, #5
   15700:	add	r1, pc, r1
   15704:	bl	10e84 <dcgettext@plt>
   15708:	ldrb	r2, [sp, #32]
   1570c:	mov	r1, #1
   15710:	mov	fp, r0
   15714:	mov	r0, r5
   15718:	bl	1a674 <pclose@plt+0x9580>
   1571c:	ldr	r3, [sp, #16]
   15720:	ldr	r2, [pc, #188]	; 157e4 <pclose@plt+0x46f0>
   15724:	str	r3, [sp]
   15728:	str	fp, [sp, #4]
   1572c:	str	r9, [sp, #8]
   15730:	mov	r3, #164	; 0xa4
   15734:	add	r2, pc, r2
   15738:	mov	r1, #3
   1573c:	str	r0, [sp, #12]
   15740:	mov	r0, r5
   15744:	bl	12994 <pclose@plt+0x18a0>
   15748:	b	156d8 <pclose@plt+0x45e4>
   1574c:	ldr	r3, [r5, #28]
   15750:	cmp	r3, #2
   15754:	mvnle	r6, #0
   15758:	bgt	1577c <pclose@plt+0x4688>
   1575c:	ldr	r3, [sp, #28]
   15760:	ldr	r2, [sp, #548]	; 0x224
   15764:	mov	r0, r6
   15768:	ldr	r3, [r3]
   1576c:	cmp	r2, r3
   15770:	bne	157c0 <pclose@plt+0x46cc>
   15774:	add	sp, sp, #556	; 0x22c
   15778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1577c:	ldr	r1, [pc, #100]	; 157e8 <pclose@plt+0x46f4>
   15780:	mov	r2, #5
   15784:	add	r1, pc, r1
   15788:	bl	10e84 <dcgettext@plt>
   1578c:	ldr	r2, [pc, #88]	; 157ec <pclose@plt+0x46f8>
   15790:	mov	r3, #120	; 0x78
   15794:	add	r2, pc, r2
   15798:	add	r2, r2, #12
   1579c:	str	r2, [sp]
   157a0:	ldr	r2, [pc, #72]	; 157f0 <pclose@plt+0x46fc>
   157a4:	mov	r1, #3
   157a8:	add	r2, pc, r2
   157ac:	mvn	r6, #0
   157b0:	str	r0, [sp, #4]
   157b4:	mov	r0, r5
   157b8:	bl	12994 <pclose@plt+0x18a0>
   157bc:	b	1575c <pclose@plt+0x4668>
   157c0:	bl	10e9c <__stack_chk_fail@plt>
   157c4:	strdeq	r5, [r2], -r4
   157c8:	andeq	r0, r0, r8, lsl #2
   157cc:	andeq	r7, r0, r4, lsl r4
   157d0:	andeq	r7, r0, r0, lsl #8
   157d4:	muleq	r0, r8, r4
   157d8:	andeq	r4, r0, r9, asr #22
   157dc:	andeq	r7, r0, r4, asr r3
   157e0:	andeq	r7, r0, ip, lsr #5
   157e4:	andeq	r7, r0, r8, asr #4
   157e8:	andeq	r6, r0, ip, lsl #22
   157ec:	muleq	r0, r0, r1
   157f0:	ldrdeq	r7, [r0], -r4
   157f4:	ldr	r3, [pc, #1944]	; 15f94 <pclose@plt+0x4ea0>
   157f8:	ldr	ip, [pc, #1944]	; 15f98 <pclose@plt+0x4ea4>
   157fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15800:	add	r3, pc, r3
   15804:	sub	sp, sp, #68	; 0x44
   15808:	mov	fp, r1
   1580c:	str	r2, [sp, #52]	; 0x34
   15810:	ldr	r2, [r3, ip]
   15814:	mov	r6, r0
   15818:	str	r2, [sp, #48]	; 0x30
   1581c:	ldr	r3, [r2]
   15820:	str	r3, [sp, #60]	; 0x3c
   15824:	bl	14f50 <pclose@plt+0x3e5c>
   15828:	cmp	r0, #0
   1582c:	blt	15b74 <pclose@plt+0x4a80>
   15830:	ldr	r3, [r6]
   15834:	tst	r3, #2
   15838:	bne	15d04 <pclose@plt+0x4c10>
   1583c:	ldr	r2, [pc, #1880]	; 15f9c <pclose@plt+0x4ea8>
   15840:	ldr	r3, [pc, #1880]	; 15fa0 <pclose@plt+0x4eac>
   15844:	add	r2, pc, r2
   15848:	add	r3, pc, r3
   1584c:	mov	r5, #0
   15850:	add	r2, r2, #32
   15854:	add	r3, r3, #32
   15858:	str	r5, [sp, #28]
   1585c:	str	r2, [sp, #40]	; 0x28
   15860:	str	r3, [sp, #44]	; 0x2c
   15864:	b	158bc <pclose@plt+0x47c8>
   15868:	ldr	r3, [r6, #4]
   1586c:	tst	r3, #2
   15870:	beq	158b0 <pclose@plt+0x47bc>
   15874:	ldr	r2, [r6, #28]
   15878:	ldr	r3, [pc, #1828]	; 15fa4 <pclose@plt+0x4eb0>
   1587c:	uxtb	r7, r5
   15880:	cmp	r2, #6
   15884:	strb	r4, [sp, #57]	; 0x39
   15888:	strh	r3, [sp, #58]	; 0x3a
   1588c:	strb	r7, [sp, #56]	; 0x38
   15890:	bgt	15b94 <pclose@plt+0x4aa0>
   15894:	add	r8, sp, #56	; 0x38
   15898:	mov	r2, r8
   1589c:	ldr	r1, [pc, #1796]	; 15fa8 <pclose@plt+0x4eb4>
   158a0:	mov	r0, fp
   158a4:	bl	10f08 <ioctl@plt>
   158a8:	cmp	r0, #0
   158ac:	bne	15af0 <pclose@plt+0x49fc>
   158b0:	add	r5, r5, #1
   158b4:	cmp	r5, #256	; 0x100
   158b8:	beq	15c30 <pclose@plt+0x4b3c>
   158bc:	mov	r1, r5
   158c0:	mov	r0, r6
   158c4:	bl	14900 <pclose@plt+0x380c>
   158c8:	subs	r4, r0, #0
   158cc:	beq	15868 <pclose@plt+0x4774>
   158d0:	ldr	sl, [pc, #1748]	; 15fac <pclose@plt+0x4eb8>
   158d4:	ldr	r7, [pc, #1740]	; 15fa8 <pclose@plt+0x4eb4>
   158d8:	add	sl, pc, sl
   158dc:	mov	r4, #0
   158e0:	b	15914 <pclose@plt+0x4820>
   158e4:	bl	10fe0 <__errno_location@plt>
   158e8:	ldr	r3, [r6, #28]
   158ec:	ldr	r0, [r0]
   158f0:	cmp	r0, #1
   158f4:	beq	15bd8 <pclose@plt+0x4ae4>
   158f8:	cmp	r3, #2
   158fc:	bgt	15a2c <pclose@plt+0x4938>
   15900:	cmp	r3, #3
   15904:	bgt	159d4 <pclose@plt+0x48e0>
   15908:	add	r4, r4, #1
   1590c:	cmp	r4, #256	; 0x100
   15910:	beq	158b0 <pclose@plt+0x47bc>
   15914:	mov	r2, r4
   15918:	mov	r1, r5
   1591c:	mov	r0, r6
   15920:	bl	14930 <pclose@plt+0x383c>
   15924:	cmp	r0, #0
   15928:	beq	15908 <pclose@plt+0x4814>
   1592c:	mov	r2, r4
   15930:	mov	r1, r5
   15934:	mov	r0, r6
   15938:	strb	r4, [sp, #57]	; 0x39
   1593c:	strb	r5, [sp, #56]	; 0x38
   15940:	bl	14ab8 <pclose@plt+0x39c4>
   15944:	add	r2, sp, #56	; 0x38
   15948:	mov	r1, r7
   1594c:	strh	r0, [sp, #58]	; 0x3a
   15950:	mov	r0, fp
   15954:	bl	10f08 <ioctl@plt>
   15958:	cmp	r0, #0
   1595c:	bne	158e4 <pclose@plt+0x47f0>
   15960:	ldr	r2, [sp, #28]
   15964:	ldr	r3, [r6, #28]
   15968:	add	r2, r2, #1
   1596c:	cmp	r3, #5
   15970:	str	r2, [sp, #28]
   15974:	ble	15908 <pclose@plt+0x4814>
   15978:	mov	r1, sl
   1597c:	mov	r2, #5
   15980:	bl	10e84 <dcgettext@plt>
   15984:	mov	r2, r4
   15988:	mov	r1, r5
   1598c:	mov	r8, r0
   15990:	mov	r0, r6
   15994:	bl	14ab8 <pclose@plt+0x39c4>
   15998:	ldr	r2, [sp, #40]	; 0x28
   1599c:	ldr	r3, [pc, #1548]	; 15fb0 <pclose@plt+0x4ebc>
   159a0:	str	r2, [sp]
   159a4:	ldr	r2, [pc, #1544]	; 15fb4 <pclose@plt+0x4ec0>
   159a8:	add	r3, pc, r3
   159ac:	str	r3, [sp, #20]
   159b0:	str	r8, [sp, #4]
   159b4:	strd	r4, [sp, #8]
   159b8:	mov	r3, #59	; 0x3b
   159bc:	add	r2, pc, r2
   159c0:	mov	r1, #6
   159c4:	str	r0, [sp, #16]
   159c8:	mov	r0, r6
   159cc:	bl	12994 <pclose@plt+0x18a0>
   159d0:	b	15908 <pclose@plt+0x4814>
   159d4:	ldr	r1, [pc, #1500]	; 15fb8 <pclose@plt+0x4ec4>
   159d8:	mov	r2, #5
   159dc:	add	r1, pc, r1
   159e0:	mov	r0, #0
   159e4:	bl	10e84 <dcgettext@plt>
   159e8:	mov	r2, r4
   159ec:	mov	r1, r5
   159f0:	mov	r8, r0
   159f4:	mov	r0, r6
   159f8:	bl	14ab8 <pclose@plt+0x39c4>
   159fc:	ldr	r3, [sp, #44]	; 0x2c
   15a00:	ldr	r2, [pc, #1460]	; 15fbc <pclose@plt+0x4ec8>
   15a04:	str	r3, [sp]
   15a08:	str	r8, [sp, #4]
   15a0c:	str	r4, [sp, #8]
   15a10:	mov	r3, #63	; 0x3f
   15a14:	add	r2, pc, r2
   15a18:	mov	r1, #4
   15a1c:	str	r0, [sp, #12]
   15a20:	mov	r0, r6
   15a24:	bl	12994 <pclose@plt+0x18a0>
   15a28:	b	15908 <pclose@plt+0x4814>
   15a2c:	bl	10f68 <strerror@plt>
   15a30:	ldr	r2, [pc, #1416]	; 15fc0 <pclose@plt+0x4ecc>
   15a34:	ldr	r8, [pc, #1416]	; 15fc4 <pclose@plt+0x4ed0>
   15a38:	ldr	r3, [pc, #1416]	; 15fc8 <pclose@plt+0x4ed4>
   15a3c:	add	r2, pc, r2
   15a40:	add	r3, pc, r3
   15a44:	add	r9, r2, #32
   15a48:	add	r8, pc, r8
   15a4c:	str	r3, [sp, #4]
   15a50:	str	r9, [sp]
   15a54:	mov	r3, #54	; 0x36
   15a58:	mov	r2, r8
   15a5c:	mov	r1, #3
   15a60:	str	r0, [sp, #8]
   15a64:	mov	r0, r6
   15a68:	bl	12994 <pclose@plt+0x18a0>
   15a6c:	ldr	r3, [r6, #28]
   15a70:	cmp	r3, #5
   15a74:	ble	15900 <pclose@plt+0x480c>
   15a78:	ldr	r1, [pc, #1356]	; 15fcc <pclose@plt+0x4ed8>
   15a7c:	mov	r2, #5
   15a80:	add	r1, pc, r1
   15a84:	mov	r0, #0
   15a88:	bl	10e84 <dcgettext@plt>
   15a8c:	mov	r2, r4
   15a90:	mov	r1, r5
   15a94:	str	r0, [sp, #36]	; 0x24
   15a98:	mov	r0, r6
   15a9c:	bl	14ab8 <pclose@plt+0x39c4>
   15aa0:	ldr	r1, [pc, #1320]	; 15fd0 <pclose@plt+0x4edc>
   15aa4:	mov	r2, #5
   15aa8:	add	r1, pc, r1
   15aac:	str	r0, [sp, #32]
   15ab0:	mov	r0, #0
   15ab4:	bl	10e84 <dcgettext@plt>
   15ab8:	ldr	r3, [sp, #36]	; 0x24
   15abc:	strd	r4, [sp, #8]
   15ac0:	str	r3, [sp, #4]
   15ac4:	ldr	r3, [sp, #32]
   15ac8:	str	r9, [sp]
   15acc:	str	r3, [sp, #16]
   15ad0:	mov	r2, r8
   15ad4:	mov	r3, #59	; 0x3b
   15ad8:	mov	r1, #6
   15adc:	str	r0, [sp, #20]
   15ae0:	mov	r0, r6
   15ae4:	bl	12994 <pclose@plt+0x18a0>
   15ae8:	ldr	r3, [r6, #28]
   15aec:	b	15900 <pclose@plt+0x480c>
   15af0:	bl	10fe0 <__errno_location@plt>
   15af4:	ldr	r3, [r0]
   15af8:	str	r0, [sp, #32]
   15afc:	cmp	r3, #22
   15b00:	bne	15e70 <pclose@plt+0x4d7c>
   15b04:	mov	sl, #512	; 0x200
   15b08:	ldr	r9, [pc, #1176]	; 15fa8 <pclose@plt+0x4eb4>
   15b0c:	b	15b1c <pclose@plt+0x4a28>
   15b10:	add	r4, r4, #1
   15b14:	cmp	r4, #256	; 0x100
   15b18:	beq	158b0 <pclose@plt+0x47bc>
   15b1c:	mov	r2, r8
   15b20:	mov	r1, r9
   15b24:	mov	r0, fp
   15b28:	strb	r4, [sp, #57]	; 0x39
   15b2c:	strb	r7, [sp, #56]	; 0x38
   15b30:	strh	sl, [sp, #58]	; 0x3a
   15b34:	bl	10f08 <ioctl@plt>
   15b38:	cmp	r0, #0
   15b3c:	beq	15b10 <pclose@plt+0x4a1c>
   15b40:	ldr	r3, [sp, #32]
   15b44:	cmp	r5, #15
   15b48:	ldr	r0, [r3]
   15b4c:	sub	r3, r0, #22
   15b50:	clz	r3, r3
   15b54:	lsr	r3, r3, #5
   15b58:	movle	r3, #0
   15b5c:	cmp	r3, #0
   15b60:	bne	158b0 <pclose@plt+0x47bc>
   15b64:	mov	r0, r3
   15b68:	ldr	r3, [r6, #28]
   15b6c:	cmp	r3, #2
   15b70:	bgt	15e2c <pclose@plt+0x4d38>
   15b74:	mvn	r0, #0
   15b78:	ldr	r3, [sp, #48]	; 0x30
   15b7c:	ldr	r2, [sp, #60]	; 0x3c
   15b80:	ldr	r3, [r3]
   15b84:	cmp	r2, r3
   15b88:	bne	15f90 <pclose@plt+0x4e9c>
   15b8c:	add	sp, sp, #68	; 0x44
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b94:	ldr	r1, [pc, #1080]	; 15fd4 <pclose@plt+0x4ee0>
   15b98:	mov	r2, #5
   15b9c:	add	r1, pc, r1
   15ba0:	bl	10e84 <dcgettext@plt>
   15ba4:	ldr	r3, [pc, #1068]	; 15fd8 <pclose@plt+0x4ee4>
   15ba8:	ldr	r2, [pc, #1068]	; 15fdc <pclose@plt+0x4ee8>
   15bac:	add	r3, pc, r3
   15bb0:	add	r3, r3, #32
   15bb4:	str	r3, [sp]
   15bb8:	str	r5, [sp, #8]
   15bbc:	mov	r3, #72	; 0x48
   15bc0:	add	r2, pc, r2
   15bc4:	mov	r1, #7
   15bc8:	str	r0, [sp, #4]
   15bcc:	mov	r0, r6
   15bd0:	bl	12994 <pclose@plt+0x18a0>
   15bd4:	b	15894 <pclose@plt+0x47a0>
   15bd8:	cmp	r3, #2
   15bdc:	ble	158b0 <pclose@plt+0x47bc>
   15be0:	ldr	r1, [pc, #1016]	; 15fe0 <pclose@plt+0x4eec>
   15be4:	mov	r2, #5
   15be8:	add	r1, pc, r1
   15bec:	mov	r0, #0
   15bf0:	bl	10e84 <dcgettext@plt>
   15bf4:	ldr	r3, [pc, #1000]	; 15fe4 <pclose@plt+0x4ef0>
   15bf8:	ldr	r2, [pc, #1000]	; 15fe8 <pclose@plt+0x4ef4>
   15bfc:	add	r3, pc, r3
   15c00:	add	r3, r3, #32
   15c04:	str	r5, [sp, #8]
   15c08:	str	r3, [sp]
   15c0c:	add	r2, pc, r2
   15c10:	mov	r3, #50	; 0x32
   15c14:	mov	r1, #3
   15c18:	add	r5, r5, #1
   15c1c:	str	r0, [sp, #4]
   15c20:	mov	r0, r6
   15c24:	bl	12994 <pclose@plt+0x18a0>
   15c28:	cmp	r5, #256	; 0x100
   15c2c:	bne	158bc <pclose@plt+0x47c8>
   15c30:	ldr	r3, [r6]
   15c34:	tst	r3, #2
   15c38:	bne	15edc <pclose@plt+0x4de8>
   15c3c:	mov	r1, fp
   15c40:	mov	r0, r6
   15c44:	bl	154fc <pclose@plt+0x4408>
   15c48:	subs	r5, r0, #0
   15c4c:	blt	15b74 <pclose@plt+0x4a80>
   15c50:	ldr	r3, [r6, #28]
   15c54:	cmp	r3, #5
   15c58:	bgt	15d80 <pclose@plt+0x4c8c>
   15c5c:	ldr	r3, [r6, #16]
   15c60:	ldr	r3, [r3, #8]
   15c64:	cmp	r3, #0
   15c68:	bne	15c8c <pclose@plt+0x4b98>
   15c6c:	ldr	r3, [r6]
   15c70:	ands	r4, r3, #4
   15c74:	bne	15c8c <pclose@plt+0x4b98>
   15c78:	ldr	r3, [r6, #28]
   15c7c:	cmp	r3, #5
   15c80:	bgt	15f48 <pclose@plt+0x4e54>
   15c84:	mov	r0, #0
   15c88:	b	15b78 <pclose@plt+0x4a84>
   15c8c:	mov	r1, fp
   15c90:	mov	r0, r6
   15c94:	bl	1522c <pclose@plt+0x4138>
   15c98:	subs	r4, r0, #0
   15c9c:	blt	15b74 <pclose@plt+0x4a80>
   15ca0:	ldr	r3, [r6, #28]
   15ca4:	cmp	r3, #5
   15ca8:	ble	15c84 <pclose@plt+0x4b90>
   15cac:	ldr	r2, [pc, #824]	; 15fec <pclose@plt+0x4ef8>
   15cb0:	ldr	r1, [pc, #824]	; 15ff0 <pclose@plt+0x4efc>
   15cb4:	mov	r3, #5
   15cb8:	str	r3, [sp]
   15cbc:	add	r2, pc, r2
   15cc0:	mov	r3, r4
   15cc4:	add	r1, pc, r1
   15cc8:	mov	r0, #0
   15ccc:	bl	110dc <dcngettext@plt>
   15cd0:	ldr	r3, [pc, #796]	; 15ff4 <pclose@plt+0x4f00>
   15cd4:	ldr	r2, [pc, #796]	; 15ff8 <pclose@plt+0x4f04>
   15cd8:	add	r3, pc, r3
   15cdc:	add	r3, r3, #40	; 0x28
   15ce0:	str	r3, [sp]
   15ce4:	str	r4, [sp, #8]
   15ce8:	ldr	r3, [pc, #780]	; 15ffc <pclose@plt+0x4f08>
   15cec:	add	r2, pc, r2
   15cf0:	mov	r1, #6
   15cf4:	str	r0, [sp, #4]
   15cf8:	mov	r0, r6
   15cfc:	bl	12994 <pclose@plt+0x18a0>
   15d00:	b	15c84 <pclose@plt+0x4b90>
   15d04:	mov	r2, #3
   15d08:	ldr	r1, [pc, #752]	; 16000 <pclose@plt+0x4f0c>
   15d0c:	mov	r0, fp
   15d10:	bl	10f08 <ioctl@plt>
   15d14:	cmp	r0, #0
   15d18:	beq	1583c <pclose@plt+0x4748>
   15d1c:	ldr	r3, [r6, #28]
   15d20:	cmp	r3, #2
   15d24:	ble	15b74 <pclose@plt+0x4a80>
   15d28:	ldr	r1, [pc, #724]	; 16004 <pclose@plt+0x4f10>
   15d2c:	mov	r2, #5
   15d30:	add	r1, pc, r1
   15d34:	mov	r0, #0
   15d38:	bl	10e84 <dcgettext@plt>
   15d3c:	mov	r4, r0
   15d40:	bl	10fe0 <__errno_location@plt>
   15d44:	ldr	r0, [r0]
   15d48:	bl	10f68 <strerror@plt>
   15d4c:	ldr	r3, [pc, #692]	; 16008 <pclose@plt+0x4f14>
   15d50:	ldr	r2, [pc, #692]	; 1600c <pclose@plt+0x4f18>
   15d54:	add	r3, pc, r3
   15d58:	add	r3, r3, #32
   15d5c:	str	r3, [sp]
   15d60:	add	r2, pc, r2
   15d64:	mov	r3, #29
   15d68:	str	r4, [sp, #4]
   15d6c:	str	r0, [sp, #8]
   15d70:	mov	r1, #3
   15d74:	mov	r0, r6
   15d78:	bl	12994 <pclose@plt+0x18a0>
   15d7c:	b	15b74 <pclose@plt+0x4a80>
   15d80:	ldr	r9, [sp, #28]
   15d84:	ldr	r2, [pc, #644]	; 16010 <pclose@plt+0x4f1c>
   15d88:	ldr	r1, [pc, #644]	; 16014 <pclose@plt+0x4f20>
   15d8c:	mov	r8, #5
   15d90:	mov	r3, r9
   15d94:	add	r2, pc, r2
   15d98:	add	r1, pc, r1
   15d9c:	str	r8, [sp]
   15da0:	mov	r0, #0
   15da4:	bl	110dc <dcngettext@plt>
   15da8:	ldr	r4, [pc, #616]	; 16018 <pclose@plt+0x4f24>
   15dac:	ldr	r7, [pc, #616]	; 1601c <pclose@plt+0x4f28>
   15db0:	add	r4, pc, r4
   15db4:	add	r7, pc, r7
   15db8:	add	r4, r4, #40	; 0x28
   15dbc:	mov	r3, #252	; 0xfc
   15dc0:	str	r9, [sp, #8]
   15dc4:	str	r4, [sp]
   15dc8:	mov	r2, r7
   15dcc:	mov	r1, #6
   15dd0:	str	r0, [sp, #4]
   15dd4:	mov	r0, r6
   15dd8:	bl	12994 <pclose@plt+0x18a0>
   15ddc:	ldr	r3, [r6, #28]
   15de0:	cmp	r3, r8
   15de4:	ble	15c5c <pclose@plt+0x4b68>
   15de8:	ldr	r2, [pc, #560]	; 16020 <pclose@plt+0x4f2c>
   15dec:	ldr	r1, [pc, #560]	; 16024 <pclose@plt+0x4f30>
   15df0:	mov	r3, r5
   15df4:	str	r8, [sp]
   15df8:	add	r2, pc, r2
   15dfc:	add	r1, pc, r1
   15e00:	mov	r0, #0
   15e04:	bl	110dc <dcngettext@plt>
   15e08:	str	r5, [sp, #8]
   15e0c:	str	r4, [sp]
   15e10:	mov	r2, r7
   15e14:	mov	r3, #253	; 0xfd
   15e18:	mov	r1, #6
   15e1c:	str	r0, [sp, #4]
   15e20:	mov	r0, r6
   15e24:	bl	12994 <pclose@plt+0x18a0>
   15e28:	b	15c5c <pclose@plt+0x4b68>
   15e2c:	ldr	r1, [pc, #500]	; 16028 <pclose@plt+0x4f34>
   15e30:	mov	r2, #5
   15e34:	add	r1, pc, r1
   15e38:	bl	10e84 <dcgettext@plt>
   15e3c:	ldr	r3, [sp, #32]
   15e40:	mov	r4, r0
   15e44:	ldr	r0, [r3]
   15e48:	bl	10f68 <strerror@plt>
   15e4c:	ldr	r3, [pc, #472]	; 1602c <pclose@plt+0x4f38>
   15e50:	ldr	r2, [pc, #472]	; 16030 <pclose@plt+0x4f3c>
   15e54:	add	r3, pc, r3
   15e58:	add	r3, r3, #32
   15e5c:	str	r3, [sp]
   15e60:	str	r4, [sp, #4]
   15e64:	mov	r3, #92	; 0x5c
   15e68:	add	r2, pc, r2
   15e6c:	b	15d6c <pclose@plt+0x4c78>
   15e70:	ldr	r3, [r6, #28]
   15e74:	cmp	r3, #2
   15e78:	ble	15b74 <pclose@plt+0x4a80>
   15e7c:	ldr	r1, [pc, #432]	; 16034 <pclose@plt+0x4f40>
   15e80:	mov	r2, #5
   15e84:	add	r1, pc, r1
   15e88:	mov	r0, #0
   15e8c:	bl	10e84 <dcgettext@plt>
   15e90:	ldr	r3, [sp, #32]
   15e94:	mov	r4, r0
   15e98:	ldr	r0, [r3]
   15e9c:	bl	10f68 <strerror@plt>
   15ea0:	ldr	r3, [pc, #400]	; 16038 <pclose@plt+0x4f44>
   15ea4:	ldr	r2, [pc, #400]	; 1603c <pclose@plt+0x4f48>
   15ea8:	add	r3, pc, r3
   15eac:	add	r3, r3, #32
   15eb0:	str	r3, [sp]
   15eb4:	str	r4, [sp, #4]
   15eb8:	str	r5, [sp, #12]
   15ebc:	mov	r3, #77	; 0x4d
   15ec0:	add	r2, pc, r2
   15ec4:	mov	r1, #3
   15ec8:	str	r0, [sp, #8]
   15ecc:	mov	r0, r6
   15ed0:	bl	12994 <pclose@plt+0x18a0>
   15ed4:	mvn	r0, #0
   15ed8:	b	15b78 <pclose@plt+0x4a84>
   15edc:	ldr	r2, [sp, #52]	; 0x34
   15ee0:	ldr	r1, [pc, #280]	; 16000 <pclose@plt+0x4f0c>
   15ee4:	mov	r0, fp
   15ee8:	bl	10f08 <ioctl@plt>
   15eec:	cmp	r0, #0
   15ef0:	beq	15c3c <pclose@plt+0x4b48>
   15ef4:	ldr	r3, [r6, #28]
   15ef8:	cmp	r3, #2
   15efc:	ble	15b74 <pclose@plt+0x4a80>
   15f00:	ldr	r1, [pc, #312]	; 16040 <pclose@plt+0x4f4c>
   15f04:	mov	r2, #5
   15f08:	add	r1, pc, r1
   15f0c:	mov	r0, #0
   15f10:	bl	10e84 <dcgettext@plt>
   15f14:	mov	r4, r0
   15f18:	bl	10fe0 <__errno_location@plt>
   15f1c:	ldr	r0, [r0]
   15f20:	bl	10f68 <strerror@plt>
   15f24:	ldr	r3, [pc, #280]	; 16044 <pclose@plt+0x4f50>
   15f28:	ldr	r2, [pc, #280]	; 16048 <pclose@plt+0x4f54>
   15f2c:	add	r3, pc, r3
   15f30:	add	r3, r3, #32
   15f34:	str	r3, [sp]
   15f38:	str	r4, [sp, #4]
   15f3c:	mov	r3, #102	; 0x66
   15f40:	add	r2, pc, r2
   15f44:	b	15d6c <pclose@plt+0x4c78>
   15f48:	ldr	r1, [pc, #252]	; 1604c <pclose@plt+0x4f58>
   15f4c:	mov	r2, #5
   15f50:	add	r1, pc, r1
   15f54:	mov	r0, r4
   15f58:	bl	10e84 <dcgettext@plt>
   15f5c:	ldr	r2, [pc, #236]	; 16050 <pclose@plt+0x4f5c>
   15f60:	ldr	r3, [pc, #236]	; 16054 <pclose@plt+0x4f60>
   15f64:	add	r2, pc, r2
   15f68:	add	r2, r2, #40	; 0x28
   15f6c:	str	r2, [sp]
   15f70:	ldr	r2, [pc, #224]	; 16058 <pclose@plt+0x4f64>
   15f74:	mov	r1, #6
   15f78:	add	r2, pc, r2
   15f7c:	str	r0, [sp, #4]
   15f80:	mov	r0, r6
   15f84:	bl	12994 <pclose@plt+0x18a0>
   15f88:	mov	r0, r4
   15f8c:	b	15b78 <pclose@plt+0x4a84>
   15f90:	bl	10e9c <__stack_chk_fail@plt>
   15f94:	strdeq	r5, [r2], -r8
   15f98:	andeq	r0, r0, r8, lsl #2
   15f9c:	andeq	r7, r0, r0, ror #1
   15fa0:	ldrdeq	r7, [r0], -ip
   15fa4:	andeq	r0, r0, pc, ror r2
   15fa8:	andeq	r4, r0, r7, asr #22
   15fac:	ldrdeq	r7, [r0], -ip
   15fb0:	andeq	r6, r0, r4, asr #24
   15fb4:	andeq	r6, r0, r0, asr #31
   15fb8:	andeq	r7, r0, r8, rrx
   15fbc:	andeq	r6, r0, r8, ror #30
   15fc0:	andeq	r6, r0, r8, ror #29
   15fc4:	andeq	r6, r0, r4, lsr pc
   15fc8:	ldrdeq	r9, [r0], -ip
   15fcc:	andeq	r7, r0, r4, lsr r1
   15fd0:	andeq	r7, r0, r8, lsr #2
   15fd4:	andeq	r6, r0, r4, ror #29
   15fd8:	andeq	r6, r0, r8, ror sp
   15fdc:			; <UNDEFINED> instruction: 0x00006dbc
   15fe0:	andeq	r6, r0, ip, lsr lr
   15fe4:	andeq	r6, r0, r8, lsr #26
   15fe8:	andeq	r6, r0, r0, ror sp
   15fec:	muleq	r0, r4, lr
   15ff0:	andeq	r6, r0, ip, lsr #29
   15ff4:	andeq	r6, r0, ip, asr #24
   15ff8:	muleq	r0, r0, ip
   15ffc:	andeq	r0, r0, r7, lsl #2
   16000:	andeq	r4, r0, r5, asr #22
   16004:	andeq	r6, r0, r4, asr #25
   16008:	ldrdeq	r6, [r0], -r0
   1600c:	andeq	r6, r0, ip, lsl ip
   16010:	andeq	r6, r0, r0, ror sp
   16014:	andeq	r6, r0, r0, lsl #27
   16018:	andeq	r6, r0, r4, ror fp
   1601c:	andeq	r6, r0, r8, asr #23
   16020:	andeq	r6, r0, r0, lsr sp
   16024:	andeq	r6, r0, r0, asr #26
   16028:	andeq	r6, r0, r4, ror #24
   1602c:	ldrdeq	r6, [r0], -r0
   16030:	andeq	r6, r0, r4, lsl fp
   16034:	andeq	r6, r0, r4, ror #23
   16038:	andeq	r6, r0, ip, ror sl
   1603c:			; <UNDEFINED> instruction: 0x00006abc
   16040:	andeq	r6, r0, r0, asr #23
   16044:	strdeq	r6, [r0], -r8
   16048:	andeq	r6, r0, ip, lsr sl
   1604c:	andeq	r6, r0, r0, asr #24
   16050:	andeq	r6, r0, r0, asr #19
   16054:	andeq	r0, r0, sl, lsl #2
   16058:	andeq	r6, r0, r4, lsl #20
   1605c:	ldr	ip, [pc, #136]	; 160ec <pclose@plt+0x4ff8>
   16060:	ldr	r3, [pc, #136]	; 160f0 <pclose@plt+0x4ffc>
   16064:	add	ip, pc, ip
   16068:	push	{r4, r5, r6, r7, r8, lr}
   1606c:	mov	r5, r0
   16070:	ldr	r7, [ip, r3]
   16074:	ldr	r0, [pc, #120]	; 160f4 <pclose@plt+0x5000>
   16078:	mov	r6, r1
   1607c:	mov	r2, #9
   16080:	mov	r1, #1
   16084:	ldr	r3, [r7]
   16088:	add	r0, pc, r0
   1608c:	bl	10efc <fwrite@plt>
   16090:	cmp	r5, r6
   16094:	bhi	160dc <pclose@plt+0x4fe8>
   16098:	sub	r6, r6, r5
   1609c:	bic	r6, r6, #1
   160a0:	ldr	r8, [pc, #80]	; 160f8 <pclose@plt+0x5004>
   160a4:	add	r6, r6, #2
   160a8:	add	r8, pc, r8
   160ac:	add	r6, r5, r6
   160b0:	add	r4, r5, #2
   160b4:	b	160bc <pclose@plt+0x4fc8>
   160b8:	add	r4, r4, #2
   160bc:	ldrsh	r3, [r5]
   160c0:	mov	r2, r8
   160c4:	mov	r1, #1
   160c8:	ldr	r0, [r7]
   160cc:	bl	11028 <__fprintf_chk@plt>
   160d0:	cmp	r4, r6
   160d4:	mov	r5, r4
   160d8:	bne	160b8 <pclose@plt+0x4fc4>
   160dc:	ldr	r1, [r7]
   160e0:	mov	r0, #10
   160e4:	pop	{r4, r5, r6, r7, r8, lr}
   160e8:	b	1107c <fputc@plt>
   160ec:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   160f0:	andeq	r0, r0, ip, lsl #2
   160f4:	andeq	r7, r0, r4, lsr r0
   160f8:	ldrdeq	r6, [r0], -r4
   160fc:	cmp	r1, #35	; 0x23
   16100:	push	{r4, lr}
   16104:	mov	r4, r0
   16108:	sub	sp, sp, #8
   1610c:	ble	16150 <pclose@plt+0x505c>
   16110:	ldr	r3, [pc, #68]	; 1615c <pclose@plt+0x5068>
   16114:	add	r3, pc, r3
   16118:	ldr	r0, [pc, #64]	; 16160 <pclose@plt+0x506c>
   1611c:	ldr	r2, [pc, #64]	; 16164 <pclose@plt+0x5070>
   16120:	add	r0, pc, r0
   16124:	add	r2, pc, r2
   16128:	ldr	r0, [r0, r1, lsl #2]
   1612c:	mov	r1, #1
   16130:	str	r0, [sp]
   16134:	mov	r0, r4
   16138:	bl	11028 <__fprintf_chk@plt>
   1613c:	mov	r1, r4
   16140:	mov	r0, #41	; 0x29
   16144:	add	sp, sp, #8
   16148:	pop	{r4, lr}
   1614c:	b	1107c <fputc@plt>
   16150:	ldr	r3, [pc, #16]	; 16168 <pclose@plt+0x5074>
   16154:	add	r3, pc, r3
   16158:	b	16118 <pclose@plt+0x5024>
   1615c:			; <UNDEFINED> instruction: 0x00006fbc
   16160:	andeq	pc, r1, r0, ror pc	; <UNPREDICTABLE>
   16164:			; <UNDEFINED> instruction: 0x00006fb4
   16168:	andeq	r6, r0, r4, ror pc
   1616c:	ldr	ip, [pc, #88]	; 161cc <pclose@plt+0x50d8>
   16170:	ldr	r2, [pc, #88]	; 161d0 <pclose@plt+0x50dc>
   16174:	add	ip, pc, ip
   16178:	ldr	r3, [ip, r2]
   1617c:	ldr	r3, [r3]
   16180:	cmp	r3, #0
   16184:	bxeq	lr
   16188:	push	{r4, r5, r6, lr}
   1618c:	mov	r4, r1
   16190:	ldr	r1, [pc, #60]	; 161d4 <pclose@plt+0x50e0>
   16194:	ldr	r2, [pc, #60]	; 161d8 <pclose@plt+0x50e4>
   16198:	mov	r3, r0
   1619c:	ldr	r5, [ip, r1]
   161a0:	add	r2, pc, r2
   161a4:	mov	r1, #1
   161a8:	ldr	r0, [r5]
   161ac:	bl	11028 <__fprintf_chk@plt>
   161b0:	mov	r1, r4
   161b4:	ldr	r0, [r5]
   161b8:	bl	160fc <pclose@plt+0x5008>
   161bc:	ldr	r1, [r5]
   161c0:	mov	r0, #10
   161c4:	pop	{r4, r5, r6, lr}
   161c8:	b	1107c <fputc@plt>
   161cc:	andeq	r4, r2, r4, lsl #29
   161d0:	andeq	r0, r0, r4, lsl #2
   161d4:	andeq	r0, r0, ip, lsl #2
   161d8:	andeq	r6, r0, r0, asr #30
   161dc:	ldr	r3, [pc, #280]	; 162fc <pclose@plt+0x5208>
   161e0:	ldr	r2, [pc, #280]	; 16300 <pclose@plt+0x520c>
   161e4:	add	r3, pc, r3
   161e8:	push	{r4, r5, r6, r7, r8, lr}
   161ec:	sub	sp, sp, #240	; 0xf0
   161f0:	ldr	r7, [r3, r2]
   161f4:	subs	r4, r1, #0
   161f8:	mov	r5, r0
   161fc:	ldr	r3, [r7]
   16200:	str	r3, [sp, #236]	; 0xec
   16204:	beq	16220 <pclose@plt+0x512c>
   16208:	ldr	r1, [pc, #244]	; 16304 <pclose@plt+0x5210>
   1620c:	mov	r0, r4
   16210:	add	r1, pc, r1
   16214:	bl	10e24 <strcmp@plt>
   16218:	cmp	r0, #0
   1621c:	bne	16298 <pclose@plt+0x51a4>
   16220:	ldr	r1, [pc, #224]	; 16308 <pclose@plt+0x5214>
   16224:	add	r4, sp, #32
   16228:	add	r1, pc, r1
   1622c:	add	r1, r1, #20
   16230:	mov	r0, r4
   16234:	mov	r2, #204	; 0xcc
   16238:	bl	10e6c <memcpy@plt>
   1623c:	add	r8, sp, #236	; 0xec
   16240:	add	r6, sp, #20
   16244:	b	16254 <pclose@plt+0x5160>
   16248:	add	r4, r4, #3
   1624c:	cmp	r4, r8
   16250:	beq	162f0 <pclose@plt+0x51fc>
   16254:	ldrb	ip, [r4, #1]
   16258:	ldrb	r2, [r4, #2]
   1625c:	ldrb	r3, [r4]
   16260:	mov	r1, r6
   16264:	mov	r0, r5
   16268:	str	ip, [sp, #24]
   1626c:	str	r2, [sp, #28]
   16270:	str	r3, [sp, #20]
   16274:	bl	1b6e8 <pclose@plt+0xa5f4>
   16278:	cmn	r0, #1
   1627c:	bne	16248 <pclose@plt+0x5154>
   16280:	ldr	r2, [sp, #236]	; 0xec
   16284:	ldr	r3, [r7]
   16288:	cmp	r2, r3
   1628c:	bne	162f8 <pclose@plt+0x5204>
   16290:	add	sp, sp, #240	; 0xf0
   16294:	pop	{r4, r5, r6, r7, r8, pc}
   16298:	ldr	r3, [r5, #28]
   1629c:	cmp	r3, #2
   162a0:	mvnle	r0, #0
   162a4:	ble	16280 <pclose@plt+0x518c>
   162a8:	ldr	r1, [pc, #92]	; 1630c <pclose@plt+0x5218>
   162ac:	mov	r2, #5
   162b0:	add	r1, pc, r1
   162b4:	mov	r0, #0
   162b8:	bl	10e84 <dcgettext@plt>
   162bc:	ldr	r3, [pc, #76]	; 16310 <pclose@plt+0x521c>
   162c0:	ldr	r2, [pc, #76]	; 16314 <pclose@plt+0x5220>
   162c4:	add	r3, pc, r3
   162c8:	str	r3, [sp]
   162cc:	str	r4, [sp, #8]
   162d0:	mov	r3, #120	; 0x78
   162d4:	add	r2, pc, r2
   162d8:	mov	r1, #3
   162dc:	str	r0, [sp, #4]
   162e0:	mov	r0, r5
   162e4:	bl	12994 <pclose@plt+0x18a0>
   162e8:	mvn	r0, #0
   162ec:	b	16280 <pclose@plt+0x518c>
   162f0:	mov	r0, #0
   162f4:	b	16280 <pclose@plt+0x518c>
   162f8:	bl	10e9c <__stack_chk_fail@plt>
   162fc:	andeq	r4, r2, r4, lsl lr
   16300:	andeq	r0, r0, r8, lsl #2
   16304:	ldrdeq	r6, [r0], -r4
   16308:			; <UNDEFINED> instruction: 0x000069b4
   1630c:	andeq	r6, r0, r0, asr #28
   16310:	andeq	r6, r0, r8, lsl r9
   16314:	andeq	r6, r0, r8, asr #28
   16318:	ldrb	r3, [r1]
   1631c:	cmp	r3, #34	; 0x22
   16320:	beq	16350 <pclose@plt+0x525c>
   16324:	cmp	r0, #0
   16328:	movne	r3, r0
   1632c:	beq	163c4 <pclose@plt+0x52d0>
   16330:	ldrb	ip, [r1], #1
   16334:	mov	r2, r3
   16338:	cmp	ip, #0
   1633c:	strb	ip, [r2], #1
   16340:	bne	1639c <pclose@plt+0x52a8>
   16344:	sub	r3, r3, r0
   16348:	mov	r0, r3
   1634c:	bx	lr
   16350:	mov	r2, r1
   16354:	mov	r3, #0
   16358:	ldrb	ip, [r2, #1]
   1635c:	cmp	ip, #39	; 0x27
   16360:	beq	16324 <pclose@plt+0x5230>
   16364:	bls	163a4 <pclose@plt+0x52b0>
   16368:	cmp	ip, #44	; 0x2c
   1636c:	beq	16324 <pclose@plt+0x5230>
   16370:	cmp	ip, #92	; 0x5c
   16374:	bne	163cc <pclose@plt+0x52d8>
   16378:	ldrb	ip, [r2, #2]
   1637c:	add	r2, r2, #2
   16380:	cmp	ip, #92	; 0x5c
   16384:	bne	16324 <pclose@plt+0x5230>
   16388:	cmp	r0, #0
   1638c:	ldrbne	ip, [r2]
   16390:	strbne	ip, [r0, r3]
   16394:	add	r3, r3, #1
   16398:	b	16358 <pclose@plt+0x5264>
   1639c:	mov	r3, r2
   163a0:	b	16330 <pclose@plt+0x523c>
   163a4:	cmp	ip, #34	; 0x22
   163a8:	bne	163cc <pclose@plt+0x52d8>
   163ac:	cmp	r0, #0
   163b0:	beq	16348 <pclose@plt+0x5254>
   163b4:	mov	r2, #0
   163b8:	strb	r2, [r0, r3]
   163bc:	mov	r0, r3
   163c0:	bx	lr
   163c4:	mov	r0, r1
   163c8:	b	10fc8 <strlen@plt>
   163cc:	add	r2, r2, #1
   163d0:	b	16388 <pclose@plt+0x5294>
   163d4:	ldr	ip, [pc, #716]	; 166a8 <pclose@plt+0x55b4>
   163d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163dc:	add	ip, pc, ip
   163e0:	ldr	r4, [pc, #708]	; 166ac <pclose@plt+0x55b8>
   163e4:	ldr	lr, [pc, #708]	; 166b0 <pclose@plt+0x55bc>
   163e8:	mov	r5, r3
   163ec:	add	lr, pc, lr
   163f0:	ldr	r3, [ip, r4]
   163f4:	sub	sp, sp, #36	; 0x24
   163f8:	ldr	r4, [lr, r5, lsl #2]
   163fc:	str	r3, [sp]
   16400:	ldr	r3, [r3]
   16404:	str	r1, [sp, #4]
   16408:	mov	sl, r0
   1640c:	mov	r1, r4
   16410:	mov	r0, #0
   16414:	mov	r6, r2
   16418:	str	r3, [sp, #28]
   1641c:	bl	16318 <pclose@plt+0x5224>
   16420:	cmn	r5, #2
   16424:	mov	r8, r0
   16428:	beq	16548 <pclose@plt+0x5454>
   1642c:	ldrsh	r2, [r6]
   16430:	ldr	r3, [pc, #636]	; 166b4 <pclose@plt+0x55c0>
   16434:	str	r4, [sp, #8]
   16438:	add	r3, pc, r3
   1643c:	add	r3, r3, r2
   16440:	ldrsb	r1, [r3, #224]	; 0xe0
   16444:	cmn	r1, #31
   16448:	beq	164f4 <pclose@plt+0x5400>
   1644c:	cmp	r1, #0
   16450:	rsb	fp, r1, #86	; 0x56
   16454:	rsblt	r4, r1, #0
   16458:	movge	r4, #0
   1645c:	cmp	fp, #36	; 0x24
   16460:	movge	fp, #36	; 0x24
   16464:	cmp	r4, fp
   16468:	bge	1667c <pclose@plt+0x5588>
   1646c:	ldr	r7, [pc, #580]	; 166b8 <pclose@plt+0x55c4>
   16470:	ldr	r9, [pc, #580]	; 166bc <pclose@plt+0x55c8>
   16474:	add	r7, pc, r7
   16478:	add	r7, r7, #316	; 0x13c
   1647c:	add	r9, pc, r9
   16480:	add	r7, r7, r1
   16484:	mov	r6, r0
   16488:	mov	r5, #1
   1648c:	b	1649c <pclose@plt+0x53a8>
   16490:	add	r4, r4, #1
   16494:	cmp	fp, r4
   16498:	beq	165e0 <pclose@plt+0x54ec>
   1649c:	ldrb	r3, [r7, r4]
   164a0:	cmp	r4, #1
   164a4:	sub	r1, r3, r4
   164a8:	clz	r1, r1
   164ac:	lsr	r1, r1, #5
   164b0:	moveq	r1, #0
   164b4:	cmp	r1, #0
   164b8:	beq	16490 <pclose@plt+0x539c>
   164bc:	cmp	r5, #5
   164c0:	beq	16640 <pclose@plt+0x554c>
   164c4:	add	r3, sp, #32
   164c8:	ldr	r0, [r9, r4, lsl #2]
   164cc:	add	ip, r3, r5, lsl #2
   164d0:	mov	r1, r0
   164d4:	str	r0, [ip, #-24]	; 0xffffffe8
   164d8:	mov	r0, #0
   164dc:	bl	16318 <pclose@plt+0x5224>
   164e0:	add	r5, r5, #1
   164e4:	adds	r6, r0, r6
   164e8:	bcc	16490 <pclose@plt+0x539c>
   164ec:	mov	r0, #2
   164f0:	b	1652c <pclose@plt+0x5438>
   164f4:	ldr	r4, [pc, #452]	; 166c0 <pclose@plt+0x55cc>
   164f8:	mov	r0, #27
   164fc:	mov	r5, #1
   16500:	add	r4, pc, r4
   16504:	adds	r8, r8, r0
   16508:	bcs	164ec <pclose@plt+0x53f8>
   1650c:	ldr	r3, [sl]
   16510:	cmp	r3, r8
   16514:	bcs	1655c <pclose@plt+0x5468>
   16518:	lsl	r3, r8, #1
   1651c:	cmp	r3, r8
   16520:	mov	r0, #1
   16524:	mvncc	r3, #0
   16528:	str	r3, [sl]
   1652c:	ldr	r3, [sp]
   16530:	ldr	r2, [sp, #28]
   16534:	ldr	r3, [r3]
   16538:	cmp	r2, r3
   1653c:	bne	16690 <pclose@plt+0x559c>
   16540:	add	sp, sp, #36	; 0x24
   16544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16548:	ldr	r4, [pc, #372]	; 166c4 <pclose@plt+0x55d0>
   1654c:	mov	r0, #12
   16550:	mov	r5, #0
   16554:	add	r4, pc, r4
   16558:	b	16504 <pclose@plt+0x5410>
   1655c:	ldr	r3, [sp, #4]
   16560:	mov	r2, #0
   16564:	ldr	r6, [r3]
   16568:	ldrb	r3, [r4]
   1656c:	b	16578 <pclose@plt+0x5484>
   16570:	add	r6, r6, #1
   16574:	add	r4, r4, #1
   16578:	cmp	r3, #0
   1657c:	strb	r3, [r6]
   16580:	beq	165d8 <pclose@plt+0x54e4>
   16584:	cmp	r3, #37	; 0x25
   16588:	ldrb	r3, [r4, #1]
   1658c:	bne	16570 <pclose@plt+0x547c>
   16590:	cmp	r2, r5
   16594:	sub	r1, r3, #115	; 0x73
   16598:	clz	r1, r1
   1659c:	lsr	r1, r1, #5
   165a0:	movge	r1, #0
   165a4:	cmp	r1, #0
   165a8:	beq	16570 <pclose@plt+0x547c>
   165ac:	add	r3, sp, #32
   165b0:	add	r3, r3, r2, lsl #2
   165b4:	mov	r0, r6
   165b8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   165bc:	add	r7, r2, #1
   165c0:	bl	16318 <pclose@plt+0x5224>
   165c4:	add	r4, r4, #2
   165c8:	ldrb	r3, [r4]
   165cc:	mov	r2, r7
   165d0:	add	r6, r6, r0
   165d4:	b	16578 <pclose@plt+0x5484>
   165d8:	mov	r0, r3
   165dc:	b	1652c <pclose@plt+0x5438>
   165e0:	sub	r3, r5, #1
   165e4:	cmp	r3, #4
   165e8:	addls	pc, pc, r3, lsl #2
   165ec:	b	16654 <pclose@plt+0x5560>
   165f0:	b	16694 <pclose@plt+0x55a0>
   165f4:	b	16668 <pclose@plt+0x5574>
   165f8:	b	16618 <pclose@plt+0x5524>
   165fc:	b	16604 <pclose@plt+0x5510>
   16600:	b	1662c <pclose@plt+0x5538>
   16604:	ldr	r4, [pc, #188]	; 166c8 <pclose@plt+0x55d4>
   16608:	mov	r8, r6
   1660c:	mov	r0, #53	; 0x35
   16610:	add	r4, pc, r4
   16614:	b	16504 <pclose@plt+0x5410>
   16618:	ldr	r4, [pc, #172]	; 166cc <pclose@plt+0x55d8>
   1661c:	mov	r8, r6
   16620:	mov	r0, #47	; 0x2f
   16624:	add	r4, pc, r4
   16628:	b	16504 <pclose@plt+0x5410>
   1662c:	ldr	r4, [pc, #156]	; 166d0 <pclose@plt+0x55dc>
   16630:	mov	r8, r6
   16634:	mov	r0, #59	; 0x3b
   16638:	add	r4, pc, r4
   1663c:	b	16504 <pclose@plt+0x5410>
   16640:	ldr	r4, [pc, #140]	; 166d4 <pclose@plt+0x55e0>
   16644:	mov	r0, #27
   16648:	mov	r5, #1
   1664c:	add	r4, pc, r4
   16650:	b	16504 <pclose@plt+0x5410>
   16654:	mov	r0, #0
   16658:	mov	r8, r6
   1665c:	bl	10fc8 <strlen@plt>
   16660:	mov	r4, #0
   16664:	b	16504 <pclose@plt+0x5410>
   16668:	ldr	r4, [pc, #104]	; 166d8 <pclose@plt+0x55e4>
   1666c:	mov	r8, r6
   16670:	mov	r0, #41	; 0x29
   16674:	add	r4, pc, r4
   16678:	b	16504 <pclose@plt+0x5410>
   1667c:	ldr	r4, [pc, #88]	; 166dc <pclose@plt+0x55e8>
   16680:	mov	r0, #27
   16684:	mov	r5, #1
   16688:	add	r4, pc, r4
   1668c:	b	16504 <pclose@plt+0x5410>
   16690:	bl	10e9c <__stack_chk_fail@plt>
   16694:	ldr	r4, [pc, #68]	; 166e0 <pclose@plt+0x55ec>
   16698:	mov	r8, r6
   1669c:	add	r4, pc, r4
   166a0:	mov	r0, #27
   166a4:	b	16504 <pclose@plt+0x5410>
   166a8:	andeq	r4, r2, ip, lsl ip
   166ac:	andeq	r0, r0, r8, lsl #2
   166b0:	andeq	pc, r1, r4, lsr #25
   166b4:	andeq	r6, r0, r4, lsr #15
   166b8:	andeq	r6, r0, r8, ror #14
   166bc:	andeq	pc, r1, r4, lsl ip	; <UNPREDICTABLE>
   166c0:	andeq	r6, r0, r8, lsr ip
   166c4:	ldrdeq	r6, [r0], -r4
   166c8:	andeq	r6, r0, r0, lsr #23
   166cc:	andeq	r6, r0, ip, asr fp
   166d0:			; <UNDEFINED> instruction: 0x00006bb0
   166d4:	andeq	r6, r0, ip, ror #21
   166d8:	andeq	r6, r0, r0, ror #21
   166dc:			; <UNDEFINED> instruction: 0x00006ab0
   166e0:	muleq	r0, ip, sl
   166e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166e8:	sub	sp, sp, #105472	; 0x19c00
   166ec:	ldr	ip, [pc, #4004]	; 17698 <pclose@plt+0x65a4>
   166f0:	sub	sp, sp, #860	; 0x35c
   166f4:	ldr	r2, [pc, #4000]	; 1769c <pclose@plt+0x65a8>
   166f8:	add	ip, pc, ip
   166fc:	add	lr, sp, #3920	; 0xf50
   16700:	add	lr, lr, #8
   16704:	str	ip, [sp, #32]
   16708:	str	lr, [sp, #24]
   1670c:	ldr	r4, [ip, r2]
   16710:	ldr	r3, [pc, #3976]	; 176a0 <pclose@plt+0x65ac>
   16714:	mov	r2, #128	; 0x80
   16718:	add	r5, sp, #105472	; 0x19c00
   1671c:	str	r4, [sp, #64]	; 0x40
   16720:	str	r2, [sp, #100]	; 0x64
   16724:	add	r5, r5, #852	; 0x354
   16728:	ldr	r2, [r4]
   1672c:	add	r4, sp, #105472	; 0x19c00
   16730:	add	r4, r4, #724	; 0x2d4
   16734:	str	r4, [sp, #52]	; 0x34
   16738:	str	r2, [r5]
   1673c:	str	r4, [sp, #96]	; 0x60
   16740:	ldr	r9, [ip, r3]
   16744:	str	r0, [sp, #72]	; 0x48
   16748:	str	r1, [sp, #48]	; 0x30
   1674c:	ldr	r3, [r9]
   16750:	cmp	r3, #0
   16754:	bne	16fb0 <pclose@plt+0x5ebc>
   16758:	ldr	ip, [pc, #3908]	; 176a4 <pclose@plt+0x65b0>
   1675c:	ldr	r1, [pc, #3908]	; 176a8 <pclose@plt+0x65b4>
   16760:	ldr	r2, [sp, #24]
   16764:	add	r1, pc, r1
   16768:	add	ip, pc, ip
   1676c:	sub	r2, r2, #3680	; 0xe60
   16770:	mov	r0, #0
   16774:	add	r4, r1, #1120	; 0x460
   16778:	add	ip, ip, #1216	; 0x4c0
   1677c:	add	r1, sp, #236	; 0xec
   16780:	add	ip, ip, #8
   16784:	mov	r7, r0
   16788:	str	r0, [sp, #28]
   1678c:	str	r1, [sp, #44]	; 0x2c
   16790:	strh	r0, [r2, #-12]
   16794:	mov	r5, r1
   16798:	mov	sl, r1
   1679c:	mvn	r0, #1
   167a0:	mov	r1, #200	; 0xc8
   167a4:	add	lr, sp, #856	; 0x358
   167a8:	add	fp, sp, #2192	; 0x890
   167ac:	str	ip, [sp, #80]	; 0x50
   167b0:	cmp	r3, #0
   167b4:	add	ip, r4, #4
   167b8:	str	lr, [sp, #76]	; 0x4c
   167bc:	str	ip, [sp, #84]	; 0x54
   167c0:	str	fp, [sp, #40]	; 0x28
   167c4:	strd	r0, [sp, #16]
   167c8:	bne	16bf8 <pclose@plt+0x5b04>
   167cc:	cmp	r7, #2
   167d0:	beq	17974 <pclose@plt+0x6880>
   167d4:	ldr	r3, [pc, #3792]	; 176ac <pclose@plt+0x65b8>
   167d8:	add	r3, pc, r3
   167dc:	add	r2, r3, r7
   167e0:	ldrsb	r4, [r2, #224]	; 0xe0
   167e4:	cmn	r4, #31
   167e8:	mov	r8, r4
   167ec:	beq	16c20 <pclose@plt+0x5b2c>
   167f0:	ldr	r3, [sp, #16]
   167f4:	cmn	r3, #2
   167f8:	ldr	r3, [r9]
   167fc:	beq	16f5c <pclose@plt+0x5e68>
   16800:	ldr	r2, [sp, #16]
   16804:	cmp	r2, #0
   16808:	ble	16ee8 <pclose@plt+0x5df4>
   1680c:	ldr	r2, [pc, #3740]	; 176b0 <pclose@plt+0x65bc>
   16810:	ldr	r1, [sp, #16]
   16814:	cmp	r1, r2
   16818:	movgt	r6, #2
   1681c:	ble	16d6c <pclose@plt+0x5c78>
   16820:	cmp	r3, #0
   16824:	bne	16d84 <pclose@plt+0x5c90>
   16828:	add	r8, r4, r6
   1682c:	cmp	r8, #85	; 0x55
   16830:	bls	16950 <pclose@plt+0x585c>
   16834:	ldr	r3, [pc, #3704]	; 176b4 <pclose@plt+0x65c0>
   16838:	add	r3, pc, r3
   1683c:	add	r2, r3, r7
   16840:	ldrb	r8, [r2, #404]	; 0x194
   16844:	cmp	r8, #0
   16848:	beq	16ce4 <pclose@plt+0x5bf0>
   1684c:	add	r3, r3, r8
   16850:	ldr	r7, [r9]
   16854:	ldrb	r6, [r3, #496]	; 0x1f0
   16858:	rsb	r4, r6, #1
   1685c:	add	r3, r6, r6, lsl #6
   16860:	add	r4, r4, r4, lsl #6
   16864:	sub	r3, fp, r3, lsl #3
   16868:	lsl	r4, r4, #3
   1686c:	str	r3, [sp, #68]	; 0x44
   16870:	sub	r3, r5, r6, lsl #1
   16874:	str	r3, [sp, #36]	; 0x24
   16878:	ldr	r3, [sp, #24]
   1687c:	mov	r2, #520	; 0x208
   16880:	sub	r0, r3, #2256	; 0x8d0
   16884:	add	r1, fp, r4
   16888:	bl	10e6c <memcpy@plt>
   1688c:	ldrd	r2, [fp, r4]
   16890:	cmp	r7, #0
   16894:	strd	r2, [sp, #56]	; 0x38
   16898:	bne	17000 <pclose@plt+0x5f0c>
   1689c:	sub	r3, r8, #13
   168a0:	cmp	r3, #37	; 0x25
   168a4:	addls	pc, pc, r3, lsl #2
   168a8:	b	16a50 <pclose@plt+0x595c>
   168ac:	b	16a00 <pclose@plt+0x590c>
   168b0:	b	17598 <pclose@plt+0x64a4>
   168b4:	b	1750c <pclose@plt+0x6418>
   168b8:	b	174f4 <pclose@plt+0x6400>
   168bc:	b	174dc <pclose@plt+0x63e8>
   168c0:	b	174c8 <pclose@plt+0x63d4>
   168c4:	b	16a50 <pclose@plt+0x595c>
   168c8:	b	16a50 <pclose@plt+0x595c>
   168cc:	b	17468 <pclose@plt+0x6374>
   168d0:	b	177b0 <pclose@plt+0x66bc>
   168d4:	b	175f8 <pclose@plt+0x6504>
   168d8:	b	1720c <pclose@plt+0x6118>
   168dc:	b	1720c <pclose@plt+0x6118>
   168e0:	b	171e4 <pclose@plt+0x60f0>
   168e4:	b	17454 <pclose@plt+0x6360>
   168e8:	b	173dc <pclose@plt+0x62e8>
   168ec:	b	173b0 <pclose@plt+0x62bc>
   168f0:	b	175d4 <pclose@plt+0x64e0>
   168f4:	b	16a50 <pclose@plt+0x595c>
   168f8:	b	16a50 <pclose@plt+0x595c>
   168fc:	b	175c0 <pclose@plt+0x64cc>
   16900:	b	175ac <pclose@plt+0x64b8>
   16904:	b	17864 <pclose@plt+0x6770>
   16908:	b	17850 <pclose@plt+0x675c>
   1690c:	b	1783c <pclose@plt+0x6748>
   16910:	b	17828 <pclose@plt+0x6734>
   16914:	b	17814 <pclose@plt+0x6720>
   16918:	b	17800 <pclose@plt+0x670c>
   1691c:	b	177ec <pclose@plt+0x66f8>
   16920:	b	16a50 <pclose@plt+0x595c>
   16924:	b	16a50 <pclose@plt+0x595c>
   16928:	b	177c8 <pclose@plt+0x66d4>
   1692c:	b	178bc <pclose@plt+0x67c8>
   16930:	b	171f0 <pclose@plt+0x60fc>
   16934:	b	17878 <pclose@plt+0x6784>
   16938:	b	1789c <pclose@plt+0x67a8>
   1693c:	b	171e4 <pclose@plt+0x60f0>
   16940:	b	171f0 <pclose@plt+0x60fc>
   16944:	mov	r3, #0
   16948:	mov	r6, r3
   1694c:	str	r3, [sp, #16]
   16950:	ldr	r3, [pc, #3424]	; 176b8 <pclose@plt+0x65c4>
   16954:	add	r3, pc, r3
   16958:	add	r8, r3, r8
   1695c:	ldrb	r4, [r8, #316]	; 0x13c
   16960:	cmp	r4, r6
   16964:	bne	16834 <pclose@plt+0x5740>
   16968:	ldrb	r8, [r8, #840]	; 0x348
   1696c:	ldr	r7, [r9]
   16970:	cmp	r8, #0
   16974:	beq	171d0 <pclose@plt+0x60dc>
   16978:	ldr	r3, [sp, #28]
   1697c:	cmp	r3, #0
   16980:	subne	r3, r3, #1
   16984:	strne	r3, [sp, #28]
   16988:	cmp	r7, #0
   1698c:	beq	169d0 <pclose@plt+0x58dc>
   16990:	ldr	r0, [sp, #32]
   16994:	ldr	r1, [pc, #3564]	; 17788 <pclose@plt+0x6694>
   16998:	ldr	r3, [pc, #3356]	; 176bc <pclose@plt+0x65c8>
   1699c:	ldr	r2, [pc, #3356]	; 176c0 <pclose@plt+0x65cc>
   169a0:	ldr	r6, [r0, r1]
   169a4:	add	r3, pc, r3
   169a8:	add	r2, pc, r2
   169ac:	mov	r1, #1
   169b0:	ldr	r0, [r6]
   169b4:	bl	11028 <__fprintf_chk@plt>
   169b8:	mov	r1, r4
   169bc:	ldr	r0, [r6]
   169c0:	bl	160fc <pclose@plt+0x5008>
   169c4:	ldr	r1, [r6]
   169c8:	mov	r0, #10
   169cc:	bl	1107c <fputc@plt>
   169d0:	ldr	r3, [sp, #24]
   169d4:	add	fp, fp, #520	; 0x208
   169d8:	sub	r1, r3, #2768	; 0xad0
   169dc:	mov	r0, fp
   169e0:	sub	r1, r1, #8
   169e4:	mov	r2, #520	; 0x208
   169e8:	str	r5, [sp, #36]	; 0x24
   169ec:	bl	10e6c <memcpy@plt>
   169f0:	mvn	r3, #1
   169f4:	mov	r7, r8
   169f8:	str	r3, [sp, #16]
   169fc:	b	16ad8 <pclose@plt+0x59e4>
   16a00:	sub	fp, fp, #516	; 0x204
   16a04:	mov	r1, fp
   16a08:	ldr	r0, [sp, #48]	; 0x30
   16a0c:	bl	1a560 <pclose@plt+0x946c>
   16a10:	cmp	r0, #0
   16a14:	bne	17b40 <pclose@plt+0x6a4c>
   16a18:	ldr	r5, [sp, #48]	; 0x30
   16a1c:	ldr	r3, [r5, #4]
   16a20:	ldr	r4, [r5]
   16a24:	orr	r3, r3, #8
   16a28:	tst	r4, #16
   16a2c:	str	r3, [r5, #4]
   16a30:	beq	16a50 <pclose@plt+0x595c>
   16a34:	ldr	r1, [pc, #3208]	; 176c4 <pclose@plt+0x65d0>
   16a38:	mov	r0, fp
   16a3c:	add	r1, pc, r1
   16a40:	bl	10ec0 <strcasecmp@plt>
   16a44:	cmp	r0, #0
   16a48:	eoreq	r4, r4, #16
   16a4c:	streq	r4, [r5]
   16a50:	ldr	r3, [pc, #3184]	; 176c8 <pclose@plt+0x65d4>
   16a54:	ldr	r2, [r9]
   16a58:	add	r3, pc, r3
   16a5c:	add	r3, r3, r8
   16a60:	cmp	r2, #0
   16a64:	ldrb	r4, [r3, #1132]	; 0x46c
   16a68:	bne	17158 <pclose@plt+0x6064>
   16a6c:	ldr	r3, [sp, #68]	; 0x44
   16a70:	ldrd	r6, [sp, #56]	; 0x38
   16a74:	add	fp, r3, #520	; 0x208
   16a78:	add	r3, sp, #1872	; 0x750
   16a7c:	add	r3, r3, #8
   16a80:	strd	r6, [r3, #-208]	; 0xffffff30
   16a84:	ldr	r3, [sp, #24]
   16a88:	mov	r2, #520	; 0x208
   16a8c:	sub	r1, r3, #2256	; 0x8d0
   16a90:	mov	r0, fp
   16a94:	bl	10e6c <memcpy@plt>
   16a98:	ldr	r3, [pc, #3116]	; 176cc <pclose@plt+0x65d8>
   16a9c:	sub	r4, r4, #36	; 0x24
   16aa0:	add	r3, pc, r3
   16aa4:	ldr	r2, [sp, #36]	; 0x24
   16aa8:	add	r1, r3, r4
   16aac:	add	r1, r1, #1184	; 0x4a0
   16ab0:	ldrsh	r0, [r2]
   16ab4:	ldrsb	r2, [r1]
   16ab8:	add	r2, r2, r0
   16abc:	cmp	r2, #85	; 0x55
   16ac0:	bls	16d54 <pclose@plt+0x5c60>
   16ac4:	ldr	r3, [pc, #3076]	; 176d0 <pclose@plt+0x65dc>
   16ac8:	add	r3, pc, r3
   16acc:	add	r3, r3, r4
   16ad0:	add	r3, r3, #1200	; 0x4b0
   16ad4:	ldrsb	r7, [r3, #4]
   16ad8:	ldr	r3, [sp, #20]
   16adc:	ldr	r1, [sp, #36]	; 0x24
   16ae0:	sub	r3, r3, #-2147483647	; 0x80000001
   16ae4:	add	r5, r1, #2
   16ae8:	lsl	r3, r3, #1
   16aec:	add	r2, sl, r3
   16af0:	cmp	r5, r2
   16af4:	strh	r7, [r1, #2]
   16af8:	ldrcc	r4, [sp, #40]	; 0x28
   16afc:	strcc	sl, [sp, #36]	; 0x24
   16b00:	bcc	16be4 <pclose@plt+0x5af0>
   16b04:	sub	fp, r5, sl
   16b08:	ldr	r2, [pc, #3012]	; 176d4 <pclose@plt+0x65e0>
   16b0c:	ldr	r1, [sp, #20]
   16b10:	asr	fp, fp, #1
   16b14:	cmp	r1, r2
   16b18:	add	fp, fp, #1
   16b1c:	bhi	17904 <pclose@plt+0x6810>
   16b20:	ldr	r2, [pc, #2992]	; 176d8 <pclose@plt+0x65e4>
   16b24:	add	r3, r3, #2
   16b28:	cmp	r3, r2
   16b2c:	movcs	r3, r2
   16b30:	str	r3, [sp, #20]
   16b34:	add	r0, r3, r3, lsl #6
   16b38:	add	r0, r3, r0, lsl #2
   16b3c:	lsl	r0, r0, #1
   16b40:	add	r0, r0, #516	; 0x204
   16b44:	add	r0, r0, #3
   16b48:	bl	10f50 <malloc@plt>
   16b4c:	subs	r8, r0, #0
   16b50:	beq	17904 <pclose@plt+0x6810>
   16b54:	ldr	r3, [sp, #20]
   16b58:	lsl	r5, fp, #1
   16b5c:	mov	r2, r5
   16b60:	lsl	r6, r3, #1
   16b64:	mov	r1, sl
   16b68:	bl	10e6c <memcpy@plt>
   16b6c:	add	r2, r6, #516	; 0x204
   16b70:	ldr	r3, [pc, #2916]	; 176dc <pclose@plt+0x65e8>
   16b74:	add	r2, r2, #3
   16b78:	add	fp, fp, fp, lsl #6
   16b7c:	umull	r2, r3, r2, r3
   16b80:	ldr	r1, [sp, #40]	; 0x28
   16b84:	lsl	fp, fp, #3
   16b88:	lsr	r4, r3, #9
   16b8c:	mov	r2, fp
   16b90:	add	r4, r4, r4, lsl #6
   16b94:	add	r4, r8, r4, lsl #3
   16b98:	mov	r0, r4
   16b9c:	bl	10e6c <memcpy@plt>
   16ba0:	ldr	r3, [sp, #44]	; 0x2c
   16ba4:	str	r8, [sp, #36]	; 0x24
   16ba8:	cmp	sl, r3
   16bac:	beq	16bb8 <pclose@plt+0x5ac4>
   16bb0:	mov	r0, sl
   16bb4:	bl	10e48 <free@plt>
   16bb8:	ldr	r3, [r9]
   16bbc:	sub	r5, r5, #2
   16bc0:	sub	fp, fp, #520	; 0x208
   16bc4:	cmp	r3, #0
   16bc8:	add	r5, r8, r5
   16bcc:	add	fp, r4, fp
   16bd0:	bne	16fd8 <pclose@plt+0x5ee4>
   16bd4:	sub	r6, r6, #2
   16bd8:	add	r6, r8, r6
   16bdc:	cmp	r5, r6
   16be0:	bcs	17a28 <pclose@plt+0x6934>
   16be4:	ldr	r3, [r9]
   16be8:	str	r4, [sp, #40]	; 0x28
   16bec:	cmp	r3, #0
   16bf0:	ldr	sl, [sp, #36]	; 0x24
   16bf4:	beq	167cc <pclose@plt+0x56d8>
   16bf8:	ldr	r1, [pc, #2952]	; 17788 <pclose@plt+0x6694>
   16bfc:	ldr	r0, [sp, #32]
   16c00:	ldr	r2, [pc, #2776]	; 176e0 <pclose@plt+0x65ec>
   16c04:	mov	r3, r7
   16c08:	ldr	r0, [r0, r1]
   16c0c:	add	r2, pc, r2
   16c10:	mov	r1, #1
   16c14:	ldr	r0, [r0]
   16c18:	bl	11028 <__fprintf_chk@plt>
   16c1c:	b	167cc <pclose@plt+0x56d8>
   16c20:	ldrb	r8, [r2, #404]	; 0x194
   16c24:	cmp	r8, #0
   16c28:	bne	1684c <pclose@plt+0x5758>
   16c2c:	ldr	r3, [sp, #16]
   16c30:	cmn	r3, #2
   16c34:	bne	16ce4 <pclose@plt+0x5bf0>
   16c38:	ldr	r3, [sp, #28]
   16c3c:	cmp	r3, #0
   16c40:	beq	172f4 <pclose@plt+0x6200>
   16c44:	ldr	r3, [pc, #2712]	; 176e4 <pclose@plt+0x65f0>
   16c48:	ldr	r8, [pc, #2712]	; 176e8 <pclose@plt+0x65f4>
   16c4c:	add	r3, pc, r3
   16c50:	ldr	r6, [pc, #2708]	; 176ec <pclose@plt+0x65f8>
   16c54:	str	r3, [sp, #28]
   16c58:	mov	r3, r5
   16c5c:	add	r8, pc, r8
   16c60:	mov	r5, r7
   16c64:	add	r6, pc, r6
   16c68:	mov	r7, r3
   16c6c:	b	16c80 <pclose@plt+0x5b8c>
   16c70:	ldr	r3, [pc, #2680]	; 176f0 <pclose@plt+0x65fc>
   16c74:	add	r3, pc, r3
   16c78:	add	r3, r3, r5
   16c7c:	ldrsb	r4, [r3, #224]	; 0xe0
   16c80:	cmn	r4, #31
   16c84:	beq	16ca8 <pclose@plt+0x5bb4>
   16c88:	add	r4, r4, #1
   16c8c:	cmp	r4, #85	; 0x55
   16c90:	bhi	16ca8 <pclose@plt+0x5bb4>
   16c94:	ldr	r3, [sp, #28]
   16c98:	add	r4, r3, r4
   16c9c:	ldrb	r3, [r4, #316]	; 0x13c
   16ca0:	cmp	r3, #1
   16ca4:	beq	16dc8 <pclose@plt+0x5cd4>
   16ca8:	cmp	sl, r7
   16cac:	beq	16e1c <pclose@plt+0x5d28>
   16cb0:	add	r5, r8, r5
   16cb4:	mov	r0, r6
   16cb8:	ldrb	r1, [r5, #1032]	; 0x408
   16cbc:	bl	1616c <pclose@plt+0x5078>
   16cc0:	ldr	r3, [r9]
   16cc4:	sub	fp, fp, #520	; 0x208
   16cc8:	cmp	r3, #0
   16ccc:	ldrsh	r5, [r7, #-2]!
   16cd0:	beq	16c70 <pclose@plt+0x5b7c>
   16cd4:	mov	r1, r7
   16cd8:	mov	r0, sl
   16cdc:	bl	1605c <pclose@plt+0x4f68>
   16ce0:	b	16c70 <pclose@plt+0x5b7c>
   16ce4:	ldr	r3, [pc, #2500]	; 176b0 <pclose@plt+0x65bc>
   16ce8:	ldr	r2, [sp, #16]
   16cec:	cmp	r2, r3
   16cf0:	movhi	r4, #2
   16cf4:	ldrls	r3, [pc, #2552]	; 176f4 <pclose@plt+0x6600>
   16cf8:	addls	r3, pc, r3
   16cfc:	addls	r3, r3, r2
   16d00:	ldrbls	r4, [r3, #548]	; 0x224
   16d04:	ldr	r3, [sp, #28]
   16d08:	cmp	r3, #0
   16d0c:	beq	170bc <pclose@plt+0x5fc8>
   16d10:	ldr	r3, [sp, #28]
   16d14:	cmp	r3, #3
   16d18:	bne	172fc <pclose@plt+0x6208>
   16d1c:	ldr	r3, [sp, #16]
   16d20:	cmp	r3, #0
   16d24:	ble	179f0 <pclose@plt+0x68fc>
   16d28:	ldr	r0, [pc, #2504]	; 176f8 <pclose@plt+0x6604>
   16d2c:	mov	r1, r4
   16d30:	add	r0, pc, r0
   16d34:	bl	1616c <pclose@plt+0x5078>
   16d38:	ldr	r3, [pc, #2492]	; 176fc <pclose@plt+0x6608>
   16d3c:	mvn	r2, #1
   16d40:	add	r3, pc, r3
   16d44:	add	r3, r3, r7
   16d48:	str	r2, [sp, #16]
   16d4c:	ldrsb	r4, [r3, #224]	; 0xe0
   16d50:	b	16c44 <pclose@plt+0x5b50>
   16d54:	add	r2, r3, r2
   16d58:	ldrb	r3, [r2, #316]	; 0x13c
   16d5c:	cmp	r0, r3
   16d60:	ldrbeq	r7, [r2, #840]	; 0x348
   16d64:	bne	16ac4 <pclose@plt+0x59d0>
   16d68:	b	16ad8 <pclose@plt+0x59e4>
   16d6c:	ldr	r2, [pc, #2444]	; 17700 <pclose@plt+0x660c>
   16d70:	cmp	r3, #0
   16d74:	add	r2, pc, r2
   16d78:	add	r2, r2, r1
   16d7c:	ldrb	r6, [r2, #548]	; 0x224
   16d80:	beq	16828 <pclose@plt+0x5734>
   16d84:	ldr	r0, [sp, #32]
   16d88:	ldr	r1, [pc, #2552]	; 17788 <pclose@plt+0x6694>
   16d8c:	ldr	r3, [pc, #2416]	; 17704 <pclose@plt+0x6610>
   16d90:	ldr	r2, [pc, #2416]	; 17708 <pclose@plt+0x6614>
   16d94:	ldr	r8, [r0, r1]
   16d98:	add	r3, pc, r3
   16d9c:	add	r2, pc, r2
   16da0:	mov	r1, #1
   16da4:	ldr	r0, [r8]
   16da8:	bl	11028 <__fprintf_chk@plt>
   16dac:	mov	r1, r6
   16db0:	ldr	r0, [r8]
   16db4:	bl	160fc <pclose@plt+0x5008>
   16db8:	ldr	r1, [r8]
   16dbc:	mov	r0, #10
   16dc0:	bl	1107c <fputc@plt>
   16dc4:	b	16828 <pclose@plt+0x5734>
   16dc8:	ldrb	r4, [r4, #840]	; 0x348
   16dcc:	cmp	r4, #0
   16dd0:	beq	16ca8 <pclose@plt+0x5bb4>
   16dd4:	str	r3, [sp, #36]	; 0x24
   16dd8:	ldr	r3, [sp, #24]
   16ddc:	add	fp, fp, #520	; 0x208
   16de0:	sub	r1, r3, #2768	; 0xad0
   16de4:	mov	r2, #520	; 0x208
   16de8:	mov	r0, fp
   16dec:	sub	r1, r1, #8
   16df0:	bl	10e6c <memcpy@plt>
   16df4:	ldr	r2, [r9]
   16df8:	mov	r5, r7
   16dfc:	cmp	r2, #0
   16e00:	ldr	r3, [sp, #36]	; 0x24
   16e04:	bne	17994 <pclose@plt+0x68a0>
   16e08:	mov	r3, #3
   16e0c:	str	r5, [sp, #36]	; 0x24
   16e10:	mov	r7, r4
   16e14:	str	r3, [sp, #28]
   16e18:	b	16ad8 <pclose@plt+0x59e4>
   16e1c:	mov	r5, r7
   16e20:	mov	r4, r7
   16e24:	mov	r6, #1
   16e28:	ldr	r2, [sp, #16]
   16e2c:	cmn	r2, #2
   16e30:	beq	16e50 <pclose@plt+0x5d5c>
   16e34:	ldr	r3, [pc, #2164]	; 176b0 <pclose@plt+0x65bc>
   16e38:	cmp	r2, r3
   16e3c:	movhi	r1, #2
   16e40:	bls	16f98 <pclose@plt+0x5ea4>
   16e44:	ldr	r0, [pc, #2240]	; 1770c <pclose@plt+0x6618>
   16e48:	add	r0, pc, r0
   16e4c:	bl	1616c <pclose@plt+0x5078>
   16e50:	ldr	r3, [r9]
   16e54:	cmp	r3, #0
   16e58:	bne	16f7c <pclose@plt+0x5e88>
   16e5c:	cmp	r5, r4
   16e60:	beq	16e90 <pclose@plt+0x5d9c>
   16e64:	ldr	r8, [pc, #2212]	; 17710 <pclose@plt+0x661c>
   16e68:	ldr	r7, [pc, #2212]	; 17714 <pclose@plt+0x6620>
   16e6c:	add	r8, pc, r8
   16e70:	add	r7, pc, r7
   16e74:	ldrsh	r3, [r4], #-2
   16e78:	mov	r0, r7
   16e7c:	add	r3, r8, r3
   16e80:	ldrb	r1, [r3, #1032]	; 0x408
   16e84:	bl	1616c <pclose@plt+0x5078>
   16e88:	cmp	r4, r5
   16e8c:	bne	16e74 <pclose@plt+0x5d80>
   16e90:	ldr	r3, [sp, #44]	; 0x2c
   16e94:	cmp	r5, r3
   16e98:	beq	16ea4 <pclose@plt+0x5db0>
   16e9c:	mov	r0, r5
   16ea0:	bl	10e48 <free@plt>
   16ea4:	ldr	r3, [sp, #24]
   16ea8:	ldr	r0, [r3, #-3832]	; 0xfffff108
   16eac:	ldr	r3, [sp, #52]	; 0x34
   16eb0:	cmp	r0, r3
   16eb4:	beq	16ebc <pclose@plt+0x5dc8>
   16eb8:	bl	10e48 <free@plt>
   16ebc:	add	r3, sp, #105472	; 0x19c00
   16ec0:	add	r3, r3, #852	; 0x354
   16ec4:	ldr	r2, [r3]
   16ec8:	ldr	r3, [sp, #64]	; 0x40
   16ecc:	mov	r0, r6
   16ed0:	ldr	r3, [r3]
   16ed4:	cmp	r2, r3
   16ed8:	bne	17c5c <pclose@plt+0x6b68>
   16edc:	add	sp, sp, #105472	; 0x19c00
   16ee0:	add	sp, sp, #860	; 0x35c
   16ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ee8:	cmp	r3, #0
   16eec:	bne	1726c <pclose@plt+0x6178>
   16ef0:	cmp	r4, #85	; 0x55
   16ef4:	bls	16948 <pclose@plt+0x5854>
   16ef8:	ldr	r2, [pc, #2072]	; 17718 <pclose@plt+0x6624>
   16efc:	add	r2, pc, r2
   16f00:	add	r1, r2, r7
   16f04:	ldrb	r8, [r1, #404]	; 0x194
   16f08:	cmp	r8, #0
   16f0c:	beq	17310 <pclose@plt+0x621c>
   16f10:	add	r1, r2, r8
   16f14:	ldr	r0, [sp, #24]
   16f18:	ldrb	r1, [r1, #496]	; 0x1f0
   16f1c:	str	r3, [sp, #16]
   16f20:	mov	r2, #520	; 0x208
   16f24:	rsb	r4, r1, #1
   16f28:	add	r3, r1, r1, lsl #6
   16f2c:	add	r4, r4, r4, lsl #6
   16f30:	sub	r1, r5, r1, lsl #1
   16f34:	lsl	r4, r4, #3
   16f38:	sub	r3, fp, r3, lsl #3
   16f3c:	str	r1, [sp, #36]	; 0x24
   16f40:	sub	r0, r0, #2256	; 0x8d0
   16f44:	add	r1, fp, r4
   16f48:	str	r3, [sp, #68]	; 0x44
   16f4c:	bl	10e6c <memcpy@plt>
   16f50:	ldrd	r2, [fp, r4]
   16f54:	strd	r2, [sp, #56]	; 0x38
   16f58:	b	1689c <pclose@plt+0x57a8>
   16f5c:	cmp	r3, #0
   16f60:	bne	172cc <pclose@plt+0x61d8>
   16f64:	ldr	r1, [sp, #72]	; 0x48
   16f68:	add	r0, sp, #1152	; 0x480
   16f6c:	bl	18e24 <pclose@plt+0x7d30>
   16f70:	ldr	r3, [r9]
   16f74:	str	r0, [sp, #16]
   16f78:	b	16800 <pclose@plt+0x570c>
   16f7c:	mov	r1, r4
   16f80:	mov	r0, r5
   16f84:	bl	1605c <pclose@plt+0x4f68>
   16f88:	b	16e5c <pclose@plt+0x5d68>
   16f8c:	mov	r4, r5
   16f90:	mov	r6, #1
   16f94:	mov	r5, sl
   16f98:	ldr	r3, [pc, #1916]	; 1771c <pclose@plt+0x6628>
   16f9c:	ldr	r2, [sp, #16]
   16fa0:	add	r3, pc, r3
   16fa4:	add	r3, r3, r2
   16fa8:	ldrb	r1, [r3, #548]	; 0x224
   16fac:	b	16e44 <pclose@plt+0x5d50>
   16fb0:	ldr	r3, [pc, #2000]	; 17788 <pclose@plt+0x6694>
   16fb4:	ldr	r0, [pc, #1892]	; 17720 <pclose@plt+0x662c>
   16fb8:	mov	r2, #15
   16fbc:	ldr	r3, [ip, r3]
   16fc0:	mov	r1, #1
   16fc4:	add	r0, pc, r0
   16fc8:	ldr	r3, [r3]
   16fcc:	bl	10efc <fwrite@plt>
   16fd0:	ldr	r3, [r9]
   16fd4:	b	16758 <pclose@plt+0x5664>
   16fd8:	ldr	r1, [pc, #1960]	; 17788 <pclose@plt+0x6694>
   16fdc:	ldr	r0, [sp, #32]
   16fe0:	ldr	r2, [pc, #1852]	; 17724 <pclose@plt+0x6630>
   16fe4:	ldr	r3, [sp, #20]
   16fe8:	ldr	r0, [r0, r1]
   16fec:	add	r2, pc, r2
   16ff0:	mov	r1, #1
   16ff4:	ldr	r0, [r0]
   16ff8:	bl	11028 <__fprintf_chk@plt>
   16ffc:	b	16bd4 <pclose@plt+0x5ae0>
   17000:	ldr	r1, [sp, #32]
   17004:	ldr	r3, [pc, #1916]	; 17788 <pclose@plt+0x6694>
   17008:	ldr	r4, [pc, #1816]	; 17728 <pclose@plt+0x6634>
   1700c:	lsl	r2, r8, #1
   17010:	add	r4, pc, r4
   17014:	ldr	r7, [r1, r3]
   17018:	add	r1, r4, #928	; 0x3a0
   1701c:	sub	r3, r8, #1
   17020:	ldrh	r1, [r1, r2]
   17024:	ldr	r2, [pc, #1792]	; 1772c <pclose@plt+0x6638>
   17028:	ldr	r0, [r7]
   1702c:	add	r2, pc, r2
   17030:	str	r1, [sp]
   17034:	mov	r1, #1
   17038:	bl	11028 <__fprintf_chk@plt>
   1703c:	cmp	r6, #0
   17040:	beq	1689c <pclose@plt+0x57a8>
   17044:	ldr	r2, [pc, #1764]	; 17730 <pclose@plt+0x663c>
   17048:	rsb	r3, r6, #1
   1704c:	mov	r1, r4
   17050:	add	r2, pc, r2
   17054:	strd	sl, [sp, #88]	; 0x58
   17058:	add	r5, r5, r3, lsl #1
   1705c:	mov	r4, #0
   17060:	mov	sl, r2
   17064:	mov	fp, r1
   17068:	add	r4, r4, #1
   1706c:	mov	r2, sl
   17070:	mov	r3, r4
   17074:	mov	r1, #1
   17078:	ldr	r0, [r7]
   1707c:	bl	11028 <__fprintf_chk@plt>
   17080:	ldrsh	r3, [r5], #2
   17084:	ldr	r0, [r7]
   17088:	add	r3, fp, r3
   1708c:	ldrb	r1, [r3, #1032]	; 0x408
   17090:	bl	160fc <pclose@plt+0x5008>
   17094:	ldr	r1, [r7]
   17098:	mov	r0, #10
   1709c:	bl	1107c <fputc@plt>
   170a0:	cmp	r4, r6
   170a4:	bne	17068 <pclose@plt+0x5f74>
   170a8:	ldrd	sl, [sp, #88]	; 0x58
   170ac:	b	1689c <pclose@plt+0x57a8>
   170b0:	mov	r3, #0
   170b4:	mov	r4, r3
   170b8:	str	r3, [sp, #16]
   170bc:	ldr	r3, [sp, #76]	; 0x4c
   170c0:	mov	r2, r5
   170c4:	sub	r8, r3, #760	; 0x2f8
   170c8:	sub	r6, r3, #756	; 0x2f4
   170cc:	mov	r1, r8
   170d0:	mov	r3, r4
   170d4:	mov	r0, r6
   170d8:	bl	163d4 <pclose@plt+0x52e0>
   170dc:	subs	r3, r0, #0
   170e0:	str	r3, [sp, #28]
   170e4:	beq	171b4 <pclose@plt+0x60c0>
   170e8:	ldr	r3, [sp, #28]
   170ec:	cmp	r3, #1
   170f0:	beq	17340 <pclose@plt+0x624c>
   170f4:	ldr	r2, [pc, #1592]	; 17734 <pclose@plt+0x6640>
   170f8:	add	r2, pc, r2
   170fc:	ldr	r3, [sp, #48]	; 0x30
   17100:	ldr	r3, [r3, #28]
   17104:	cmp	r3, #2
   17108:	ble	17138 <pclose@plt+0x6044>
   1710c:	ldr	r3, [pc, #1572]	; 17738 <pclose@plt+0x6644>
   17110:	str	r2, [sp, #8]
   17114:	ldr	r2, [sp, #80]	; 0x50
   17118:	add	r3, pc, r3
   1711c:	mov	r1, #3
   17120:	strd	r2, [sp]
   17124:	ldr	r2, [pc, #1552]	; 1773c <pclose@plt+0x6648>
   17128:	mov	r3, #77	; 0x4d
   1712c:	add	r2, pc, r2
   17130:	ldr	r0, [sp, #48]	; 0x30
   17134:	bl	12994 <pclose@plt+0x18a0>
   17138:	ldr	r3, [sp, #28]
   1713c:	cmp	r3, #2
   17140:	beq	17904 <pclose@plt+0x6810>
   17144:	ldr	r3, [pc, #1524]	; 17740 <pclose@plt+0x664c>
   17148:	add	r3, pc, r3
   1714c:	add	r3, r3, r7
   17150:	ldrsb	r4, [r3, #224]	; 0xe0
   17154:	b	16c44 <pclose@plt+0x5b50>
   17158:	ldr	r0, [sp, #32]
   1715c:	ldr	r1, [pc, #1572]	; 17788 <pclose@plt+0x6694>
   17160:	ldr	r3, [pc, #1500]	; 17744 <pclose@plt+0x6650>
   17164:	ldr	r2, [pc, #1500]	; 17748 <pclose@plt+0x6654>
   17168:	ldr	r5, [r0, r1]
   1716c:	add	r3, pc, r3
   17170:	add	r2, pc, r2
   17174:	mov	r1, #1
   17178:	ldr	r0, [r5]
   1717c:	bl	11028 <__fprintf_chk@plt>
   17180:	mov	r1, r4
   17184:	ldr	r0, [r5]
   17188:	bl	160fc <pclose@plt+0x5008>
   1718c:	ldr	r1, [r5]
   17190:	mov	r0, #10
   17194:	bl	1107c <fputc@plt>
   17198:	ldr	r3, [r9]
   1719c:	cmp	r3, #0
   171a0:	beq	16a6c <pclose@plt+0x5978>
   171a4:	ldr	r1, [sp, #36]	; 0x24
   171a8:	mov	r0, sl
   171ac:	bl	1605c <pclose@plt+0x4f68>
   171b0:	b	16a6c <pclose@plt+0x5978>
   171b4:	ldr	r3, [sp, #48]	; 0x30
   171b8:	ldr	r2, [sp, #24]
   171bc:	ldr	r3, [r3, #28]
   171c0:	ldr	r2, [r2, #-3832]	; 0xfffff108
   171c4:	cmp	r3, #2
   171c8:	ble	17144 <pclose@plt+0x6050>
   171cc:	b	1710c <pclose@plt+0x6018>
   171d0:	str	r5, [sp, #36]	; 0x24
   171d4:	str	fp, [sp, #68]	; 0x44
   171d8:	mov	r6, r8
   171dc:	mov	r4, #520	; 0x208
   171e0:	b	16878 <pclose@plt+0x5784>
   171e4:	ldrd	r2, [fp]
   171e8:	strd	r2, [sp, #56]	; 0x38
   171ec:	b	16a50 <pclose@plt+0x595c>
   171f0:	ldr	r1, [fp]
   171f4:	ldr	r0, [sp, #48]	; 0x30
   171f8:	bl	1b0c0 <pclose@plt+0x9fcc>
   171fc:	mov	r2, r0
   17200:	asr	r3, r0, #31
   17204:	strd	r2, [sp, #56]	; 0x38
   17208:	b	16a50 <pclose@plt+0x595c>
   1720c:	ldr	ip, [sp, #24]
   17210:	ldr	r1, [fp, #-2080]	; 0xfffff7e0
   17214:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   17218:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   1721c:	str	r1, [ip, #-3824]	; 0xfffff110
   17220:	ldr	r1, [sp, #76]	; 0x4c
   17224:	ldr	r0, [sp, #48]	; 0x30
   17228:	sub	r1, r1, #752	; 0x2f0
   1722c:	str	r2, [ip, #-3820]	; 0xfffff114
   17230:	str	r3, [ip, #-3816]	; 0xfffff118
   17234:	bl	1b6e8 <pclose@plt+0xa5f4>
   17238:	cmn	r0, #1
   1723c:	bne	16a50 <pclose@plt+0x595c>
   17240:	ldr	r3, [r9]
   17244:	cmp	r3, #0
   17248:	bne	17984 <pclose@plt+0x6890>
   1724c:	ldr	r5, [sp, #36]	; 0x24
   17250:	ldr	r3, [pc, #1268]	; 1774c <pclose@plt+0x6658>
   17254:	ldr	fp, [sp, #68]	; 0x44
   17258:	ldrsh	r7, [r5]
   1725c:	add	r3, pc, r3
   17260:	add	r3, r3, r7
   17264:	ldrsb	r4, [r3, #224]	; 0xe0
   17268:	b	16c44 <pclose@plt+0x5b50>
   1726c:	ldr	r0, [sp, #32]
   17270:	ldr	r3, [pc, #1296]	; 17788 <pclose@plt+0x6694>
   17274:	mov	r2, #21
   17278:	mov	r1, #1
   1727c:	ldr	r3, [r0, r3]
   17280:	ldr	r0, [pc, #1224]	; 17750 <pclose@plt+0x665c>
   17284:	ldr	r3, [r3]
   17288:	add	r0, pc, r0
   1728c:	bl	10efc <fwrite@plt>
   17290:	cmp	r4, #85	; 0x55
   17294:	bls	16944 <pclose@plt+0x5850>
   17298:	ldr	r3, [pc, #1204]	; 17754 <pclose@plt+0x6660>
   1729c:	add	r3, pc, r3
   172a0:	add	r2, r3, r7
   172a4:	ldrb	r8, [r2, #404]	; 0x194
   172a8:	cmp	r8, #0
   172ac:	bne	17398 <pclose@plt+0x62a4>
   172b0:	ldr	r3, [sp, #28]
   172b4:	cmp	r3, #0
   172b8:	beq	170b0 <pclose@plt+0x5fbc>
   172bc:	cmp	r3, #3
   172c0:	beq	17328 <pclose@plt+0x6234>
   172c4:	str	r8, [sp, #16]
   172c8:	b	16c44 <pclose@plt+0x5b50>
   172cc:	ldr	r0, [sp, #32]
   172d0:	ldr	r3, [pc, #1200]	; 17788 <pclose@plt+0x6694>
   172d4:	mov	r2, #17
   172d8:	mov	r1, #1
   172dc:	ldr	r3, [r0, r3]
   172e0:	ldr	r0, [pc, #1136]	; 17758 <pclose@plt+0x6664>
   172e4:	ldr	r3, [r3]
   172e8:	add	r0, pc, r0
   172ec:	bl	10efc <fwrite@plt>
   172f0:	b	16f64 <pclose@plt+0x5e70>
   172f4:	ldr	r4, [sp, #16]
   172f8:	b	170bc <pclose@plt+0x5fc8>
   172fc:	ldr	r3, [pc, #1112]	; 1775c <pclose@plt+0x6668>
   17300:	add	r3, pc, r3
   17304:	add	r3, r3, r7
   17308:	ldrsb	r4, [r3, #224]	; 0xe0
   1730c:	b	16c44 <pclose@plt+0x5b50>
   17310:	ldr	r2, [sp, #28]
   17314:	cmp	r2, #0
   17318:	beq	170b0 <pclose@plt+0x5fbc>
   1731c:	ldr	r2, [sp, #28]
   17320:	cmp	r2, #3
   17324:	bne	178fc <pclose@plt+0x6808>
   17328:	mov	r3, #0
   1732c:	mov	r4, r5
   17330:	mov	r6, #1
   17334:	mov	r5, sl
   17338:	str	r3, [sp, #16]
   1733c:	b	16f98 <pclose@plt+0x5ea4>
   17340:	ldr	r3, [sp, #24]
   17344:	ldr	r0, [r3, #-3832]	; 0xfffff108
   17348:	ldr	r3, [sp, #52]	; 0x34
   1734c:	cmp	r0, r3
   17350:	beq	17358 <pclose@plt+0x6264>
   17354:	bl	10e48 <free@plt>
   17358:	ldr	r1, [sp, #24]
   1735c:	ldr	r0, [r1, #-3828]	; 0xfffff10c
   17360:	bl	10f50 <malloc@plt>
   17364:	ldr	r1, [sp, #24]
   17368:	cmp	r0, #0
   1736c:	str	r0, [r1, #-3832]	; 0xfffff108
   17370:	beq	178c8 <pclose@plt+0x67d4>
   17374:	mov	r3, r4
   17378:	mov	r2, r5
   1737c:	mov	r1, r8
   17380:	mov	r0, r6
   17384:	bl	163d4 <pclose@plt+0x52e0>
   17388:	ldr	r3, [sp, #24]
   1738c:	ldr	r2, [r3, #-3832]	; 0xfffff108
   17390:	str	r0, [sp, #28]
   17394:	b	170fc <pclose@plt+0x6008>
   17398:	add	r3, r3, r8
   1739c:	ldr	r7, [r9]
   173a0:	ldrb	r6, [r3, #496]	; 0x1f0
   173a4:	mov	r3, #0
   173a8:	str	r3, [sp, #16]
   173ac:	b	16858 <pclose@plt+0x5764>
   173b0:	ldr	r4, [sp, #48]	; 0x30
   173b4:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   173b8:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   173bc:	ldr	r1, [r4, #44]	; 0x2c
   173c0:	mov	r0, r4
   173c4:	bl	14ca0 <pclose@plt+0x3bac>
   173c8:	cmp	r0, #0
   173cc:	blt	17240 <pclose@plt+0x614c>
   173d0:	mov	r3, #0
   173d4:	str	r3, [r4, #44]	; 0x2c
   173d8:	b	16a50 <pclose@plt+0x595c>
   173dc:	ldr	r3, [sp, #48]	; 0x30
   173e0:	ldr	r3, [r3, #40]	; 0x28
   173e4:	ldr	r3, [r3, #8]
   173e8:	cmp	r3, #1
   173ec:	beq	17bdc <pclose@plt+0x6ae8>
   173f0:	ldr	r6, [sp, #48]	; 0x30
   173f4:	ldr	r4, [r6, #4]
   173f8:	ands	r4, r4, #2
   173fc:	bne	17a38 <pclose@plt+0x6944>
   17400:	ldr	r0, [r6, #40]	; 0x28
   17404:	ldr	r3, [r0, #8]
   17408:	cmp	r3, #0
   1740c:	beq	16a50 <pclose@plt+0x595c>
   17410:	sub	r5, fp, #1552	; 0x610
   17414:	b	1742c <pclose@plt+0x6338>
   17418:	ldr	r0, [r6, #40]	; 0x28
   1741c:	add	r4, r4, #1
   17420:	ldr	r3, [r0, #8]
   17424:	cmp	r3, r4
   17428:	bls	16a50 <pclose@plt+0x595c>
   1742c:	mov	r1, r4
   17430:	bl	1b288 <pclose@plt+0xa194>
   17434:	ldr	r2, [r5, #-8]
   17438:	mov	r1, r4
   1743c:	ldr	r3, [r0]
   17440:	mov	r0, r6
   17444:	bl	14ca0 <pclose@plt+0x3bac>
   17448:	cmp	r0, #0
   1744c:	bge	17418 <pclose@plt+0x6324>
   17450:	b	17240 <pclose@plt+0x614c>
   17454:	ldrd	r2, [fp]
   17458:	eor	r0, r2, #61440	; 0xf000
   1745c:	mov	r1, r3
   17460:	strd	r0, [sp, #56]	; 0x38
   17464:	b	16a50 <pclose@plt+0x595c>
   17468:	ldr	r4, [fp, #-1040]	; 0xfffffbf0
   1746c:	ldrd	r2, [fp]
   17470:	asr	r1, r4, #31
   17474:	cmp	r2, r4
   17478:	sbcs	r3, r3, r1
   1747c:	blt	16a50 <pclose@plt+0x595c>
   17480:	adds	r4, r4, #1
   17484:	adc	r5, r1, #0
   17488:	ldr	r6, [sp, #48]	; 0x30
   1748c:	b	174b0 <pclose@plt+0x63bc>
   17490:	ldrd	r0, [fp]
   17494:	mov	r2, r4
   17498:	adds	r4, r4, #1
   1749c:	mov	r3, r5
   174a0:	adc	r5, r5, #0
   174a4:	cmp	r0, r2
   174a8:	sbcs	r3, r1, r3
   174ac:	blt	16a50 <pclose@plt+0x595c>
   174b0:	sub	r1, r4, #1
   174b4:	mov	r0, r6
   174b8:	bl	14970 <pclose@plt+0x387c>
   174bc:	cmn	r0, #1
   174c0:	bne	17490 <pclose@plt+0x639c>
   174c4:	b	17240 <pclose@plt+0x614c>
   174c8:	ldr	r2, [sp, #48]	; 0x30
   174cc:	ldr	r3, [r2, #4]
   174d0:	orr	r3, r3, #2
   174d4:	str	r3, [r2, #4]
   174d8:	b	16a50 <pclose@plt+0x595c>
   174dc:	mov	r1, #0
   174e0:	ldr	r0, [sp, #48]	; 0x30
   174e4:	bl	161dc <pclose@plt+0x50e8>
   174e8:	cmn	r0, #1
   174ec:	bne	16a50 <pclose@plt+0x595c>
   174f0:	b	17240 <pclose@plt+0x614c>
   174f4:	sub	r1, fp, #516	; 0x204
   174f8:	ldr	r0, [sp, #48]	; 0x30
   174fc:	bl	161dc <pclose@plt+0x50e8>
   17500:	cmn	r0, #1
   17504:	bne	16a50 <pclose@plt+0x595c>
   17508:	b	17240 <pclose@plt+0x614c>
   1750c:	ldr	fp, [sp, #24]
   17510:	ldr	r1, [pc, #584]	; 17760 <pclose@plt+0x666c>
   17514:	sub	r0, fp, #3808	; 0xee0
   17518:	sub	r0, r0, #4
   1751c:	mov	r2, #120	; 0x78
   17520:	add	r1, pc, r1
   17524:	bl	10e6c <memcpy@plt>
   17528:	ldr	r3, [sp, #76]	; 0x4c
   1752c:	str	r8, [sp, #88]	; 0x58
   17530:	sub	r7, r3, #740	; 0x2e4
   17534:	sub	r5, r3, #219	; 0xdb
   17538:	mov	r8, r7
   1753c:	mov	r4, #0
   17540:	mov	r7, r5
   17544:	sub	r6, r3, #220	; 0xdc
   17548:	ldr	r5, [sp, #48]	; 0x30
   1754c:	b	1755c <pclose@plt+0x6468>
   17550:	add	r4, r4, #1
   17554:	cmp	r4, #30
   17558:	beq	17a10 <pclose@plt+0x691c>
   1755c:	ldr	r1, [r8], #4
   17560:	cmp	r1, #0
   17564:	beq	17550 <pclose@plt+0x645c>
   17568:	mov	r2, #512	; 0x200
   1756c:	mov	r0, r7
   17570:	strb	r4, [fp, #-3292]	; 0xfffff324
   17574:	bl	11010 <strncpy@plt>
   17578:	mov	r2, #0
   1757c:	mov	r1, r6
   17580:	mov	r0, r5
   17584:	strb	r2, [fp, #-2780]	; 0xfffff524
   17588:	bl	1b844 <pclose@plt+0xa750>
   1758c:	cmn	r0, #1
   17590:	bne	17550 <pclose@plt+0x645c>
   17594:	b	17240 <pclose@plt+0x614c>
   17598:	ldr	r2, [sp, #48]	; 0x30
   1759c:	ldr	r3, [r2, #4]
   175a0:	orr	r3, r3, #4
   175a4:	str	r3, [r2, #4]
   175a8:	b	16a50 <pclose@plt+0x595c>
   175ac:	ldr	r2, [sp, #48]	; 0x30
   175b0:	ldr	r3, [r2, #44]	; 0x2c
   175b4:	orr	r3, r3, #4
   175b8:	str	r3, [r2, #44]	; 0x2c
   175bc:	b	16a50 <pclose@plt+0x595c>
   175c0:	ldr	r2, [sp, #48]	; 0x30
   175c4:	ldr	r3, [r2, #44]	; 0x2c
   175c8:	orr	r3, r3, #1
   175cc:	str	r3, [r2, #44]	; 0x2c
   175d0:	b	16a50 <pclose@plt+0x595c>
   175d4:	ldr	r4, [sp, #48]	; 0x30
   175d8:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   175dc:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   175e0:	mov	r1, #0
   175e4:	mov	r0, r4
   175e8:	bl	14ca0 <pclose@plt+0x3bac>
   175ec:	cmp	r0, #0
   175f0:	bge	173d0 <pclose@plt+0x62dc>
   175f4:	b	17240 <pclose@plt+0x614c>
   175f8:	ldr	r2, [fp, #-1556]	; 0xfffff9ec
   175fc:	ldr	r3, [fp, #-1560]	; 0xfffff9e8
   17600:	asr	r1, r2, #8
   17604:	lsr	r0, r3, #8
   17608:	orr	r0, r0, r2, lsl #24
   1760c:	cmp	r1, #0
   17610:	cmpeq	r0, #1
   17614:	beq	17b9c <pclose@plt+0x6aa8>
   17618:	ldr	r3, [sp, #48]	; 0x30
   1761c:	ldr	r3, [r3, #28]
   17620:	cmp	r3, #2
   17624:	ble	17240 <pclose@plt+0x614c>
   17628:	ldr	r1, [pc, #308]	; 17764 <pclose@plt+0x6670>
   1762c:	mov	r2, #5
   17630:	add	r1, pc, r1
   17634:	mov	r0, #0
   17638:	bl	10e84 <dcgettext@plt>
   1763c:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   17640:	ldr	r1, [fp, #-1556]	; 0xfffff9ec
   17644:	ldr	r4, [sp, #48]	; 0x30
   17648:	lsr	r3, r2, #8
   1764c:	orr	r1, r3, r1, lsl #24
   17650:	uxtb	r2, r2
   17654:	mov	r5, r0
   17658:	mov	r0, r4
   1765c:	bl	1a674 <pclose@plt+0x9580>
   17660:	ldr	r3, [pc, #256]	; 17768 <pclose@plt+0x6674>
   17664:	ldr	r2, [pc, #256]	; 1776c <pclose@plt+0x6678>
   17668:	add	r3, pc, r3
   1766c:	add	r3, r3, #1120	; 0x460
   17670:	add	r3, r3, #4
   17674:	str	r3, [sp]
   17678:	str	r5, [sp, #4]
   1767c:	ldr	r3, [pc, #236]	; 17770 <pclose@plt+0x667c>
   17680:	add	r2, pc, r2
   17684:	mov	r1, #3
   17688:	str	r0, [sp, #8]
   1768c:	mov	r0, r4
   17690:	bl	12994 <pclose@plt+0x18a0>
   17694:	b	17240 <pclose@plt+0x614c>
   17698:	andeq	r4, r2, r0, lsl #18
   1769c:	andeq	r0, r0, r8, lsl #2
   176a0:	andeq	r0, r0, r4, lsl #2
   176a4:	andeq	r6, r0, r4, ror r4
   176a8:	andeq	r6, r0, r8, ror r4
   176ac:	andeq	r6, r0, r4, lsl #8
   176b0:	andeq	r0, r0, r2, lsr #2
   176b4:	andeq	r6, r0, r4, lsr #7
   176b8:	andeq	r6, r0, r8, lsl #5
   176bc:	andeq	r6, r0, r0, lsl #18
   176c0:	andeq	r6, r0, r8, lsr r7
   176c4:	andeq	r6, r0, r8, lsr #13
   176c8:	andeq	r6, r0, r4, lsl #3
   176cc:	andeq	r6, r0, ip, lsr r1
   176d0:	andeq	r6, r0, r4, lsl r1
   176d4:	andeq	r2, r0, pc, lsl #14
   176d8:	andeq	r2, r0, r0, lsl r7
   176dc:	stc2	0, cr12, [pc], {253}	; 0xfd
   176e0:	andeq	r6, r0, r8, asr #12
   176e4:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   176e8:	andeq	r5, r0, r0, lsl #31
   176ec:	andeq	r6, r0, r4, lsl r7
   176f0:	andeq	r5, r0, r8, ror #30
   176f4:	andeq	r5, r0, r4, ror #29
   176f8:	andeq	r6, r0, r4, lsr r6
   176fc:	muleq	r0, ip, lr
   17700:	andeq	r5, r0, r8, ror #28
   17704:	strdeq	r6, [r0], -ip
   17708:	andeq	r6, r0, r4, asr #6
   1770c:	andeq	r6, r0, r4, asr r5
   17710:	andeq	r5, r0, r0, ror sp
   17714:	andeq	r6, r0, ip, asr #10
   17718:	andeq	r5, r0, r0, ror #25
   1771c:	andeq	r5, r0, ip, lsr ip
   17720:	andeq	r6, r0, r0, ror #4
   17724:	andeq	r6, r0, r8, asr #4
   17728:	andeq	r5, r0, ip, asr #23
   1772c:	andeq	r6, r0, r4, lsl #5
   17730:	andeq	r6, r0, r8, lsl #5
   17734:	andeq	r6, r0, r0, lsr r0
   17738:	andeq	r8, r0, r4, lsl #8
   1773c:	strdeq	r5, [r0], -r0
   17740:	muleq	r0, r4, sl
   17744:	strdeq	r6, [r0], -r0
   17748:	andeq	r5, r0, r0, ror pc
   1774c:	andeq	r5, r0, r0, lsl #19
   17750:	strdeq	r5, [r0], -r4
   17754:	andeq	r5, r0, r0, asr #18
   17758:	andeq	r5, r0, r0, lsl #31
   1775c:	ldrdeq	r5, [r0], -ip
   17760:	andeq	r3, r2, r8, lsr #24
   17764:	andeq	r5, r0, r4, ror #25
   17768:	andeq	r5, r0, r4, ror r5
   1776c:	muleq	r0, ip, sl
   17770:	andeq	r0, r0, r6, lsl #2
   17774:	andeq	r5, r0, r8, lsr r8
   17778:			; <UNDEFINED> instruction: 0x000052b4
   1777c:	strdeq	r7, [r0], -r0
   17780:	andeq	r5, r0, r8, asr #20
   17784:	andeq	r5, r0, r4, asr #15
   17788:	andeq	r0, r0, ip, lsl #2
   1778c:	strdeq	r5, [r0], -r8
   17790:	andeq	r5, r0, r0, lsr r7
   17794:	andeq	r5, r0, r0, ror #3
   17798:	andeq	r5, r0, ip, lsr r8
   1779c:	andeq	r5, r0, r0, lsl #12
   177a0:	andeq	r0, r0, fp, asr r1
   177a4:	andeq	r5, r0, ip, lsl #15
   177a8:	andeq	r5, r0, r0, ror r0
   177ac:	muleq	r0, r8, r5
   177b0:	ldr	r1, [fp]
   177b4:	ldr	r0, [sp, #48]	; 0x30
   177b8:	bl	14970 <pclose@plt+0x387c>
   177bc:	cmn	r0, #1
   177c0:	bne	16a50 <pclose@plt+0x595c>
   177c4:	b	17240 <pclose@plt+0x614c>
   177c8:	ldr	r2, [sp, #76]	; 0x4c
   177cc:	ldr	r3, [fp]
   177d0:	sub	r1, r2, #752	; 0x2f0
   177d4:	ldr	r2, [sp, #48]	; 0x30
   177d8:	ldr	r0, [r2, #40]	; 0x28
   177dc:	ldr	r2, [sp, #24]
   177e0:	str	r3, [r2, #-3824]	; 0xfffff110
   177e4:	bl	1b380 <pclose@plt+0xa28c>
   177e8:	b	16a50 <pclose@plt+0x595c>
   177ec:	ldr	r2, [sp, #48]	; 0x30
   177f0:	ldr	r3, [r2, #44]	; 0x2c
   177f4:	orr	r3, r3, #256	; 0x100
   177f8:	str	r3, [r2, #44]	; 0x2c
   177fc:	b	16a50 <pclose@plt+0x595c>
   17800:	ldr	r2, [sp, #48]	; 0x30
   17804:	ldr	r3, [r2, #44]	; 0x2c
   17808:	orr	r3, r3, #128	; 0x80
   1780c:	str	r3, [r2, #44]	; 0x2c
   17810:	b	16a50 <pclose@plt+0x595c>
   17814:	ldr	r2, [sp, #48]	; 0x30
   17818:	ldr	r3, [r2, #44]	; 0x2c
   1781c:	orr	r3, r3, #64	; 0x40
   17820:	str	r3, [r2, #44]	; 0x2c
   17824:	b	16a50 <pclose@plt+0x595c>
   17828:	ldr	r2, [sp, #48]	; 0x30
   1782c:	ldr	r3, [r2, #44]	; 0x2c
   17830:	orr	r3, r3, #32
   17834:	str	r3, [r2, #44]	; 0x2c
   17838:	b	16a50 <pclose@plt+0x595c>
   1783c:	ldr	r2, [sp, #48]	; 0x30
   17840:	ldr	r3, [r2, #44]	; 0x2c
   17844:	orr	r3, r3, #16
   17848:	str	r3, [r2, #44]	; 0x2c
   1784c:	b	16a50 <pclose@plt+0x595c>
   17850:	ldr	r2, [sp, #48]	; 0x30
   17854:	ldr	r3, [r2, #44]	; 0x2c
   17858:	orr	r3, r3, #2
   1785c:	str	r3, [r2, #44]	; 0x2c
   17860:	b	16a50 <pclose@plt+0x595c>
   17864:	ldr	r2, [sp, #48]	; 0x30
   17868:	ldr	r3, [r2, #44]	; 0x2c
   1786c:	orr	r3, r3, #8
   17870:	str	r3, [r2, #44]	; 0x2c
   17874:	b	16a50 <pclose@plt+0x595c>
   17878:	ldr	r1, [fp]
   1787c:	mvn	r2, #0
   17880:	eor	r1, r1, #61440	; 0xf000
   17884:	ldr	r0, [sp, #48]	; 0x30
   17888:	bl	1afc4 <pclose@plt+0x9ed0>
   1788c:	mov	r2, r0
   17890:	asr	r3, r0, #31
   17894:	strd	r2, [sp, #56]	; 0x38
   17898:	b	16a50 <pclose@plt+0x595c>
   1789c:	ldr	r1, [fp]
   178a0:	ldr	r0, [sp, #48]	; 0x30
   178a4:	eor	r1, r1, #61440	; 0xf000
   178a8:	bl	1b0c0 <pclose@plt+0x9fcc>
   178ac:	mov	r2, r0
   178b0:	asr	r3, r0, #31
   178b4:	strd	r2, [sp, #56]	; 0x38
   178b8:	b	16a50 <pclose@plt+0x595c>
   178bc:	ldr	r1, [fp]
   178c0:	mvn	r2, #0
   178c4:	b	17884 <pclose@plt+0x6790>
   178c8:	ldr	r3, [sp, #48]	; 0x30
   178cc:	ldr	r0, [sp, #52]	; 0x34
   178d0:	mov	r2, #128	; 0x80
   178d4:	ldr	r3, [r3, #28]
   178d8:	str	r0, [r1, #-3832]	; 0xfffff108
   178dc:	cmp	r3, #2
   178e0:	str	r2, [r1, #-3828]	; 0xfffff10c
   178e4:	ble	1790c <pclose@plt+0x6818>
   178e8:	ldr	r2, [pc, #-380]	; 17774 <pclose@plt+0x6680>
   178ec:	mov	r3, #2
   178f0:	add	r2, pc, r2
   178f4:	str	r3, [sp, #28]
   178f8:	b	1710c <pclose@plt+0x6018>
   178fc:	str	r3, [sp, #16]
   17900:	b	16c44 <pclose@plt+0x5b50>
   17904:	ldr	r3, [sp, #48]	; 0x30
   17908:	ldr	r3, [r3, #28]
   1790c:	cmp	r3, #2
   17910:	movle	r4, r5
   17914:	movle	r6, #2
   17918:	movle	r5, sl
   1791c:	ble	16e28 <pclose@plt+0x5d34>
   17920:	ldr	r3, [pc, #-432]	; 17778 <pclose@plt+0x6684>
   17924:	ldr	r2, [pc, #-432]	; 1777c <pclose@plt+0x6688>
   17928:	add	r3, pc, r3
   1792c:	add	r2, pc, r2
   17930:	ldr	r1, [pc, #-440]	; 17780 <pclose@plt+0x668c>
   17934:	str	r2, [sp, #4]
   17938:	add	r3, r3, #1216	; 0x4c0
   1793c:	ldr	r2, [pc, #-448]	; 17784 <pclose@plt+0x6690>
   17940:	add	r1, pc, r1
   17944:	add	r3, r3, #8
   17948:	str	r3, [sp]
   1794c:	str	r1, [sp, #8]
   17950:	ldr	r0, [sp, #48]	; 0x30
   17954:	mov	r3, #77	; 0x4d
   17958:	add	r2, pc, r2
   1795c:	mov	r1, #3
   17960:	mov	r4, r5
   17964:	bl	12994 <pclose@plt+0x18a0>
   17968:	mov	r5, sl
   1796c:	mov	r6, #2
   17970:	b	16e28 <pclose@plt+0x5d34>
   17974:	mov	r4, r5
   17978:	mov	r6, #0
   1797c:	mov	r5, sl
   17980:	b	16e28 <pclose@plt+0x5d34>
   17984:	ldr	r1, [sp, #36]	; 0x24
   17988:	mov	r0, sl
   1798c:	bl	1605c <pclose@plt+0x4f68>
   17990:	b	1724c <pclose@plt+0x6158>
   17994:	ldr	r0, [sp, #32]
   17998:	ldr	r2, [pc, #-536]	; 17788 <pclose@plt+0x6694>
   1799c:	mov	r1, r3
   179a0:	ldr	r3, [pc, #-540]	; 1778c <pclose@plt+0x6698>
   179a4:	ldr	r6, [r0, r2]
   179a8:	ldr	r2, [pc, #-544]	; 17790 <pclose@plt+0x669c>
   179ac:	add	r3, pc, r3
   179b0:	add	r2, pc, r2
   179b4:	ldr	r0, [r6]
   179b8:	str	r7, [sp, #36]	; 0x24
   179bc:	bl	11028 <__fprintf_chk@plt>
   179c0:	ldr	r3, [sp, #28]
   179c4:	ldr	r0, [r6]
   179c8:	add	r3, r3, r4
   179cc:	mov	r7, r4
   179d0:	ldrb	r1, [r3, #1032]	; 0x408
   179d4:	bl	160fc <pclose@plt+0x5008>
   179d8:	ldr	r1, [r6]
   179dc:	mov	r0, #10
   179e0:	bl	1107c <fputc@plt>
   179e4:	mov	r3, #3
   179e8:	str	r3, [sp, #28]
   179ec:	b	16ad8 <pclose@plt+0x59e4>
   179f0:	beq	16f8c <pclose@plt+0x5e98>
   179f4:	ldr	r3, [pc, #-616]	; 17794 <pclose@plt+0x66a0>
   179f8:	mvn	r2, #0
   179fc:	add	r3, pc, r3
   17a00:	add	r3, r3, r7
   17a04:	str	r2, [sp, #16]
   17a08:	ldrsb	r4, [r3, #224]	; 0xe0
   17a0c:	b	16c44 <pclose@plt+0x5b50>
   17a10:	ldr	r2, [sp, #48]	; 0x30
   17a14:	ldr	r8, [sp, #88]	; 0x58
   17a18:	ldr	r3, [r2, #4]
   17a1c:	orr	r3, r3, #16
   17a20:	str	r3, [r2, #4]
   17a24:	b	16a50 <pclose@plt+0x595c>
   17a28:	mov	r4, r5
   17a2c:	mov	r6, #1
   17a30:	mov	r5, r8
   17a34:	b	16e28 <pclose@plt+0x5d34>
   17a38:	ldr	r6, [sp, #48]	; 0x30
   17a3c:	ldr	r3, [r6, #8]
   17a40:	ldr	r5, [r3, #12]
   17a44:	cmp	r5, #0
   17a48:	beq	17ad0 <pclose@plt+0x69dc>
   17a4c:	mov	r5, #0
   17a50:	mov	r4, r5
   17a54:	b	17a94 <pclose@plt+0x69a0>
   17a58:	cmp	r3, r5
   17a5c:	movls	r3, #512	; 0x200
   17a60:	bhi	17ac0 <pclose@plt+0x69cc>
   17a64:	ldr	r2, [fp, #-1560]	; 0xfffff9e8
   17a68:	mov	r1, r4
   17a6c:	mov	r0, r6
   17a70:	bl	14ca0 <pclose@plt+0x3bac>
   17a74:	cmp	r0, #0
   17a78:	blt	17240 <pclose@plt+0x614c>
   17a7c:	add	r5, r5, #1
   17a80:	ldr	r3, [r6, #8]
   17a84:	add	r4, r4, #1
   17a88:	ldr	r3, [r3, #12]
   17a8c:	cmp	r3, r4
   17a90:	bls	17ad0 <pclose@plt+0x69dc>
   17a94:	mov	r1, r4
   17a98:	mov	r0, r6
   17a9c:	bl	14900 <pclose@plt+0x380c>
   17aa0:	cmp	r0, #0
   17aa4:	beq	17a80 <pclose@plt+0x698c>
   17aa8:	ldr	r0, [r6, #40]	; 0x28
   17aac:	ldr	r3, [r0, #8]
   17ab0:	cmp	r3, #1
   17ab4:	bne	17a58 <pclose@plt+0x6964>
   17ab8:	cmp	r5, #0
   17abc:	bne	17a7c <pclose@plt+0x6988>
   17ac0:	mov	r1, r5
   17ac4:	bl	1b288 <pclose@plt+0xa194>
   17ac8:	ldr	r3, [r0]
   17acc:	b	17a64 <pclose@plt+0x6970>
   17ad0:	ldr	r3, [sp, #48]	; 0x30
   17ad4:	ldr	r3, [r3, #40]	; 0x28
   17ad8:	ldr	r3, [r3, #8]
   17adc:	cmp	r3, r5
   17ae0:	bls	16a50 <pclose@plt+0x595c>
   17ae4:	ldr	r3, [sp, #48]	; 0x30
   17ae8:	ldr	r3, [r3, #28]
   17aec:	cmp	r3, #2
   17af0:	ble	17240 <pclose@plt+0x614c>
   17af4:	ldr	r1, [pc, #-868]	; 17798 <pclose@plt+0x66a4>
   17af8:	mov	r2, #5
   17afc:	add	r1, pc, r1
   17b00:	mov	r0, #0
   17b04:	bl	10e84 <dcgettext@plt>
   17b08:	ldr	ip, [sp, #48]	; 0x30
   17b0c:	ldr	lr, [sp, #84]	; 0x54
   17b10:	ldr	r2, [pc, #-892]	; 1779c <pclose@plt+0x66a8>
   17b14:	ldr	r1, [ip, #40]	; 0x28
   17b18:	ldr	r3, [pc, #-896]	; 177a0 <pclose@plt+0x66ac>
   17b1c:	add	r2, pc, r2
   17b20:	ldr	r1, [r1, #8]
   17b24:	str	lr, [sp]
   17b28:	str	r1, [sp, #8]
   17b2c:	mov	r1, #3
   17b30:	str	r0, [sp, #4]
   17b34:	mov	r0, ip
   17b38:	bl	12994 <pclose@plt+0x18a0>
   17b3c:	b	17240 <pclose@plt+0x614c>
   17b40:	ldr	r3, [sp, #48]	; 0x30
   17b44:	ldr	r3, [r3, #28]
   17b48:	cmp	r3, #2
   17b4c:	ble	17240 <pclose@plt+0x614c>
   17b50:	ldr	r1, [pc, #-948]	; 177a4 <pclose@plt+0x66b0>
   17b54:	mov	r2, #5
   17b58:	add	r1, pc, r1
   17b5c:	mov	r0, #0
   17b60:	bl	10e84 <dcgettext@plt>
   17b64:	ldr	r3, [pc, #-964]	; 177a8 <pclose@plt+0x66b4>
   17b68:	ldr	r2, [pc, #-964]	; 177ac <pclose@plt+0x66b8>
   17b6c:	add	r3, pc, r3
   17b70:	add	r3, r3, #1120	; 0x460
   17b74:	add	r3, r3, #4
   17b78:	str	r3, [sp]
   17b7c:	str	fp, [sp, #8]
   17b80:	mov	r3, #199	; 0xc7
   17b84:	add	r2, pc, r2
   17b88:	mov	r1, #3
   17b8c:	str	r0, [sp, #4]
   17b90:	ldr	r0, [sp, #48]	; 0x30
   17b94:	bl	12994 <pclose@plt+0x18a0>
   17b98:	b	17240 <pclose@plt+0x614c>
   17b9c:	ldr	ip, [sp, #76]	; 0x4c
   17ba0:	ldr	r5, [sp, #24]
   17ba4:	sub	r4, ip, #220	; 0xdc
   17ba8:	sub	r1, fp, #516	; 0x204
   17bac:	mov	r2, #512	; 0x200
   17bb0:	sub	r0, ip, #219	; 0xdb
   17bb4:	strb	r3, [r5, #-3292]	; 0xfffff324
   17bb8:	bl	11010 <strncpy@plt>
   17bbc:	mov	r3, #0
   17bc0:	mov	r1, r4
   17bc4:	ldr	r0, [sp, #48]	; 0x30
   17bc8:	strb	r3, [r5, #-2780]	; 0xfffff524
   17bcc:	bl	1b844 <pclose@plt+0xa750>
   17bd0:	cmn	r0, #1
   17bd4:	bne	16a50 <pclose@plt+0x595c>
   17bd8:	b	17240 <pclose@plt+0x614c>
   17bdc:	ldr	r6, [sp, #48]	; 0x30
   17be0:	ldr	r2, [sp, #76]	; 0x4c
   17be4:	ldr	ip, [sp, #24]
   17be8:	sub	r2, r2, #752	; 0x2f0
   17bec:	ldr	r1, [fp, #-1560]	; 0xfffff9e8
   17bf0:	ldr	r0, [r6, #36]	; 0x24
   17bf4:	strb	r3, [ip, #-3824]	; 0xfffff110
   17bf8:	bl	1b2c8 <pclose@plt+0xa1d4>
   17bfc:	ldr	r3, [r6, #8]
   17c00:	sub	r5, fp, #1552	; 0x610
   17c04:	ldr	r3, [r3, #12]
   17c08:	cmp	r3, #0
   17c0c:	beq	173f0 <pclose@plt+0x62fc>
   17c10:	mov	r4, #0
   17c14:	b	17c2c <pclose@plt+0x6b38>
   17c18:	ldr	r3, [r6, #8]
   17c1c:	add	r4, r4, #1
   17c20:	ldr	r3, [r3, #12]
   17c24:	cmp	r3, r4
   17c28:	bls	173f0 <pclose@plt+0x62fc>
   17c2c:	mov	r1, r4
   17c30:	mov	r0, r6
   17c34:	bl	14900 <pclose@plt+0x380c>
   17c38:	cmp	r0, #0
   17c3c:	beq	17c18 <pclose@plt+0x6b24>
   17c40:	ldr	r2, [r5, #-8]
   17c44:	mov	r1, r4
   17c48:	mov	r0, r6
   17c4c:	bl	14b78 <pclose@plt+0x3a84>
   17c50:	cmp	r0, #0
   17c54:	bge	17c18 <pclose@plt+0x6b24>
   17c58:	b	17240 <pclose@plt+0x614c>
   17c5c:	bl	10e9c <__stack_chk_fail@plt>
   17c60:	ldr	r3, [pc, #256]	; 17d68 <pclose@plt+0x6c74>
   17c64:	ldr	r2, [pc, #256]	; 17d6c <pclose@plt+0x6c78>
   17c68:	add	r3, pc, r3
   17c6c:	push	{r4, r5, r6, r7, r8, lr}
   17c70:	sub	sp, sp, #24
   17c74:	ldr	r6, [r3, r2]
   17c78:	add	r5, sp, #16
   17c7c:	mov	r8, #0
   17c80:	ldr	r2, [r6]
   17c84:	mov	r4, r0
   17c88:	str	r8, [r0, #44]	; 0x2c
   17c8c:	mov	r0, r5
   17c90:	mov	r7, r1
   17c94:	str	r2, [sp, #20]
   17c98:	bl	18598 <pclose@plt+0x74a4>
   17c9c:	mov	r1, r5
   17ca0:	mov	r0, r4
   17ca4:	bl	18638 <pclose@plt+0x7544>
   17ca8:	ldr	r3, [r4, #28]
   17cac:	cmp	r3, #5
   17cb0:	bgt	17d10 <pclose@plt+0x6c1c>
   17cb4:	mov	r1, r7
   17cb8:	ldr	r2, [sp, #16]
   17cbc:	mov	r0, r4
   17cc0:	bl	18b3c <pclose@plt+0x7a48>
   17cc4:	cmn	r0, #1
   17cc8:	beq	17d5c <pclose@plt+0x6c68>
   17ccc:	mov	r1, r4
   17cd0:	ldr	r0, [sp, #16]
   17cd4:	bl	166e4 <pclose@plt+0x55f0>
   17cd8:	subs	r5, r0, #0
   17cdc:	bne	17d5c <pclose@plt+0x6c68>
   17ce0:	mov	r0, r4
   17ce4:	ldr	r1, [sp, #16]
   17ce8:	bl	18da8 <pclose@plt+0x7cb4>
   17cec:	ldr	r0, [sp, #16]
   17cf0:	bl	1a254 <pclose@plt+0x9160>
   17cf4:	ldr	r2, [sp, #20]
   17cf8:	ldr	r3, [r6]
   17cfc:	mov	r0, r5
   17d00:	cmp	r2, r3
   17d04:	bne	17d64 <pclose@plt+0x6c70>
   17d08:	add	sp, sp, #24
   17d0c:	pop	{r4, r5, r6, r7, r8, pc}
   17d10:	ldr	r1, [pc, #88]	; 17d70 <pclose@plt+0x6c7c>
   17d14:	mov	r0, r8
   17d18:	mov	r2, #5
   17d1c:	add	r1, pc, r1
   17d20:	bl	10e84 <dcgettext@plt>
   17d24:	ldr	r3, [pc, #72]	; 17d74 <pclose@plt+0x6c80>
   17d28:	add	r2, r7, #8
   17d2c:	str	r2, [sp, #8]
   17d30:	add	r3, pc, r3
   17d34:	ldr	r2, [pc, #60]	; 17d78 <pclose@plt+0x6c84>
   17d38:	add	r3, r3, #1232	; 0x4d0
   17d3c:	str	r3, [sp]
   17d40:	add	r2, pc, r2
   17d44:	ldr	r3, [pc, #48]	; 17d7c <pclose@plt+0x6c88>
   17d48:	mov	r1, #6
   17d4c:	str	r0, [sp, #4]
   17d50:	mov	r0, r4
   17d54:	bl	12994 <pclose@plt+0x18a0>
   17d58:	b	17cb4 <pclose@plt+0x6bc0>
   17d5c:	mvn	r5, #0
   17d60:	b	17cec <pclose@plt+0x6bf8>
   17d64:	bl	10e9c <__stack_chk_fail@plt>
   17d68:	muleq	r2, r0, r3
   17d6c:	andeq	r0, r0, r8, lsl #2
   17d70:			; <UNDEFINED> instruction: 0x000056b4
   17d74:	andeq	r4, r0, ip, lsr #29
   17d78:	ldrdeq	r5, [r0], -ip
   17d7c:	andeq	r0, r0, r1, lsr #3
   17d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d84:	sub	sp, sp, #20
   17d88:	ldr	sl, [r0, #80]	; 0x50
   17d8c:	ldr	fp, [r0, #36]	; 0x24
   17d90:	ldr	r2, [r0, #44]	; 0x2c
   17d94:	cmp	sl, fp
   17d98:	bcs	17e54 <pclose@plt+0x6d60>
   17d9c:	ldr	r3, [pc, #188]	; 17e60 <pclose@plt+0x6d6c>
   17da0:	ldr	r1, [pc, #188]	; 17e64 <pclose@plt+0x6d70>
   17da4:	add	r3, pc, r3
   17da8:	add	r7, r3, #2352	; 0x930
   17dac:	add	r6, r3, #3392	; 0xd40
   17db0:	ldr	ip, [pc, #176]	; 17e68 <pclose@plt+0x6d74>
   17db4:	ldr	r9, [pc, #176]	; 17e6c <pclose@plt+0x6d78>
   17db8:	add	r1, pc, r1
   17dbc:	mov	r5, r3
   17dc0:	add	r7, r7, #8
   17dc4:	add	r3, r3, #256	; 0x100
   17dc8:	add	r6, r6, #4
   17dcc:	add	ip, pc, ip
   17dd0:	str	r3, [sp, #4]
   17dd4:	sub	r3, r1, #3216	; 0xc90
   17dd8:	str	ip, [sp, #12]
   17ddc:	str	r3, [sp, #8]
   17de0:	mov	lr, sl
   17de4:	ldrb	r3, [sl], #1
   17de8:	add	r8, r5, #1264	; 0x4f0
   17dec:	cmp	r3, #0
   17df0:	moveq	ip, #1
   17df4:	ldrne	r1, [sp, #12]
   17df8:	ldrbne	ip, [r1, r3]
   17dfc:	ldr	r3, [sp, #4]
   17e00:	lsl	r1, r2, #1
   17e04:	ldrsh	r3, [r3, r1]
   17e08:	cmp	r3, #0
   17e0c:	strne	r2, [r0, #64]	; 0x40
   17e10:	strne	lr, [r0, #68]	; 0x44
   17e14:	b	17e28 <pclose@plt+0x6d34>
   17e18:	ldrsh	r2, [r8, r1]
   17e1c:	cmp	r2, r9
   17e20:	lsl	r1, r2, #1
   17e24:	ldrbgt	ip, [lr, #2300]	; 0x8fc
   17e28:	ldrsh	r3, [r7, r1]
   17e2c:	add	lr, r5, ip
   17e30:	add	r3, r3, ip
   17e34:	lsl	r3, r3, #1
   17e38:	ldrsh	r4, [r6, r3]
   17e3c:	cmp	r4, r2
   17e40:	bne	17e18 <pclose@plt+0x6d24>
   17e44:	ldr	r2, [sp, #8]
   17e48:	cmp	fp, sl
   17e4c:	ldrsh	r2, [r2, r3]
   17e50:	bne	17de0 <pclose@plt+0x6cec>
   17e54:	mov	r0, r2
   17e58:	add	sp, sp, #20
   17e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e60:	andeq	r5, r0, r4, ror #17
   17e64:	andeq	r7, r0, r8, asr #17
   17e68:			; <UNDEFINED> instruction: 0x000058bc
   17e6c:	strdeq	r0, [r0], -r7
   17e70:	ldr	ip, [pc, #532]	; 1808c <pclose@plt+0x6f98>
   17e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e78:	add	ip, pc, ip
   17e7c:	ldr	lr, [pc, #524]	; 18090 <pclose@plt+0x6f9c>
   17e80:	sub	sp, sp, #44	; 0x2c
   17e84:	mov	fp, r3
   17e88:	ldr	lr, [ip, lr]
   17e8c:	mov	r6, #0
   17e90:	cmp	r2, #0
   17e94:	ldr	r3, [lr]
   17e98:	str	lr, [sp, #12]
   17e9c:	str	r6, [sp, #24]
   17ea0:	str	r3, [sp, #36]	; 0x24
   17ea4:	str	r6, [sp, #20]
   17ea8:	str	r6, [sp, #28]
   17eac:	str	r6, [sp, #32]
   17eb0:	moveq	r4, #1
   17eb4:	beq	17f60 <pclose@plt+0x6e6c>
   17eb8:	mov	r8, r0
   17ebc:	mov	r0, r2
   17ec0:	mov	sl, r1
   17ec4:	bl	10e90 <strdup@plt>
   17ec8:	subs	r5, r0, #0
   17ecc:	beq	17f80 <pclose@plt+0x6e8c>
   17ed0:	mov	r1, #47	; 0x2f
   17ed4:	bl	11070 <strrchr@plt>
   17ed8:	cmp	r0, #0
   17edc:	beq	18080 <pclose@plt+0x6f8c>
   17ee0:	strb	r6, [r0, #1]
   17ee4:	mov	r0, r5
   17ee8:	bl	10fc8 <strlen@plt>
   17eec:	str	r5, [sp, #20]
   17ef0:	mov	r9, r0
   17ef4:	add	r0, r0, #12
   17ef8:	bl	10f50 <malloc@plt>
   17efc:	mov	r7, r0
   17f00:	add	r0, r9, #15
   17f04:	str	r7, [sp, #24]
   17f08:	bl	10f50 <malloc@plt>
   17f0c:	cmp	r0, #0
   17f10:	cmpne	r7, #0
   17f14:	mov	r6, r0
   17f18:	str	r0, [sp, #28]
   17f1c:	bne	17fdc <pclose@plt+0x6ee8>
   17f20:	ldr	r3, [r8, #28]
   17f24:	cmp	r3, #2
   17f28:	bgt	17f94 <pclose@plt+0x6ea0>
   17f2c:	cmp	r7, #0
   17f30:	beq	17f3c <pclose@plt+0x6e48>
   17f34:	mov	r0, r7
   17f38:	bl	10e48 <free@plt>
   17f3c:	cmp	r6, #0
   17f40:	beq	17f4c <pclose@plt+0x6e58>
   17f44:	mov	r0, r6
   17f48:	bl	10e48 <free@plt>
   17f4c:	cmp	r5, #0
   17f50:	beq	17f5c <pclose@plt+0x6e68>
   17f54:	mov	r0, r5
   17f58:	bl	10e48 <free@plt>
   17f5c:	mvn	r4, #0
   17f60:	ldr	r3, [sp, #12]
   17f64:	ldr	r2, [sp, #36]	; 0x24
   17f68:	mov	r0, r4
   17f6c:	ldr	r3, [r3]
   17f70:	cmp	r2, r3
   17f74:	bne	18088 <pclose@plt+0x6f94>
   17f78:	add	sp, sp, #44	; 0x2c
   17f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f80:	ldr	r3, [r8, #28]
   17f84:	cmp	r3, #2
   17f88:	ble	17f5c <pclose@plt+0x6e68>
   17f8c:	mov	r6, r5
   17f90:	mov	r7, r5
   17f94:	ldr	r1, [pc, #248]	; 18094 <pclose@plt+0x6fa0>
   17f98:	mov	r2, #5
   17f9c:	add	r1, pc, r1
   17fa0:	mov	r0, #0
   17fa4:	bl	10e84 <dcgettext@plt>
   17fa8:	ldr	r2, [pc, #232]	; 18098 <pclose@plt+0x6fa4>
   17fac:	mov	r3, #147	; 0x93
   17fb0:	add	r2, pc, r2
   17fb4:	sub	r2, r2, #1632	; 0x660
   17fb8:	sub	r2, r2, #12
   17fbc:	str	r2, [sp]
   17fc0:	ldr	r2, [pc, #212]	; 1809c <pclose@plt+0x6fa8>
   17fc4:	mov	r1, #3
   17fc8:	add	r2, pc, r2
   17fcc:	str	r0, [sp, #4]
   17fd0:	mov	r0, r8
   17fd4:	bl	12994 <pclose@plt+0x18a0>
   17fd8:	b	17f2c <pclose@plt+0x6e38>
   17fdc:	mov	r2, r9
   17fe0:	mov	r1, r5
   17fe4:	mov	r0, r7
   17fe8:	bl	10e6c <memcpy@plt>
   17fec:	ldr	r3, [pc, #172]	; 180a0 <pclose@plt+0x6fac>
   17ff0:	add	ip, r7, r9
   17ff4:	add	r3, pc, r3
   17ff8:	add	r4, sp, #20
   17ffc:	ldm	r3!, {r0, r1, r2}
   18000:	str	r0, [r7, r9]
   18004:	str	r1, [ip, #4]
   18008:	str	r2, [ip, #8]
   1800c:	mov	r1, r5
   18010:	mov	r2, r9
   18014:	mov	r0, r6
   18018:	bl	10e6c <memcpy@plt>
   1801c:	ldr	ip, [pc, #128]	; 180a4 <pclose@plt+0x6fb0>
   18020:	add	lr, r6, r9
   18024:	add	ip, pc, ip
   18028:	mov	r3, fp
   1802c:	ldm	ip!, {r0, r1, r2}
   18030:	ldrh	r8, [ip]
   18034:	ldrb	ip, [ip, #2]
   18038:	str	r0, [r6, r9]
   1803c:	str	r2, [lr, #8]
   18040:	ldr	r2, [pc, #96]	; 180a8 <pclose@plt+0x6fb4>
   18044:	str	r1, [lr, #4]
   18048:	strh	r8, [lr, #12]
   1804c:	mov	r1, r4
   18050:	strb	ip, [lr, #14]
   18054:	add	r2, pc, r2
   18058:	mov	r0, sl
   1805c:	bl	125cc <pclose@plt+0x14d8>
   18060:	mov	r4, r0
   18064:	mov	r0, r7
   18068:	bl	10e48 <free@plt>
   1806c:	mov	r0, r6
   18070:	bl	10e48 <free@plt>
   18074:	mov	r0, r5
   18078:	bl	10e48 <free@plt>
   1807c:	b	17f60 <pclose@plt+0x6e6c>
   18080:	mov	r4, #1
   18084:	b	18074 <pclose@plt+0x6f80>
   18088:	bl	10e9c <__stack_chk_fail@plt>
   1808c:	andeq	r3, r2, r0, lsl #3
   18090:	andeq	r0, r0, r8, lsl #2
   18094:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   18098:	ldrdeq	r7, [r0], -r0
   1809c:	andeq	r7, r0, r4, lsr #1
   180a0:	andeq	r7, r0, ip, asr r0
   180a4:	andeq	r7, r0, r8, lsr r0
   180a8:	andeq	lr, r1, ip, lsl r1
   180ac:	ldr	r3, [pc, #468]	; 18288 <pclose@plt+0x7194>
   180b0:	ldr	ip, [pc, #468]	; 1828c <pclose@plt+0x7198>
   180b4:	add	r3, pc, r3
   180b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180bc:	sub	sp, sp, #8192	; 0x2000
   180c0:	ldr	r6, [r3, ip]
   180c4:	sub	sp, sp, #12
   180c8:	mov	r7, r1
   180cc:	ldr	r1, [r0, #48]	; 0x30
   180d0:	add	r3, sp, #8192	; 0x2000
   180d4:	cmp	r1, #0
   180d8:	add	r3, r3, #4
   180dc:	mov	r8, r2
   180e0:	ldr	r2, [r6]
   180e4:	movne	r4, r0
   180e8:	str	r2, [r3]
   180ec:	addne	r2, r4, #48	; 0x30
   180f0:	movne	r3, #0
   180f4:	bne	18100 <pclose@plt+0x700c>
   180f8:	b	18264 <pclose@plt+0x7170>
   180fc:	mov	r3, r0
   18100:	ldr	r1, [r2, #4]!
   18104:	add	r0, r3, #1
   18108:	cmp	r1, #0
   1810c:	bne	180fc <pclose@plt+0x7008>
   18110:	ldr	r2, [pc, #376]	; 18290 <pclose@plt+0x719c>
   18114:	add	r3, r3, #12
   18118:	add	r2, pc, r2
   1811c:	ldr	r5, [r4, r3, lsl #2]
   18120:	add	r1, r2, #12
   18124:	mov	r3, r8
   18128:	mov	r0, r7
   1812c:	bl	125cc <pclose@plt+0x14d8>
   18130:	add	r5, r5, #8
   18134:	cmp	r0, #0
   18138:	beq	18160 <pclose@plt+0x706c>
   1813c:	mov	r3, r8
   18140:	mov	r2, r5
   18144:	mov	r1, r7
   18148:	mov	r0, r4
   1814c:	bl	17e70 <pclose@plt+0x6d7c>
   18150:	cmn	r0, #1
   18154:	beq	18264 <pclose@plt+0x7170>
   18158:	cmp	r0, #0
   1815c:	beq	1825c <pclose@plt+0x7168>
   18160:	add	sl, sp, #8
   18164:	sub	r9, sl, #4
   18168:	mov	r1, r9
   1816c:	mov	r2, #4096	; 0x1000
   18170:	mov	r0, r5
   18174:	bl	10ee4 <readlink@plt>
   18178:	ldr	r2, [pc, #276]	; 18294 <pclose@plt+0x71a0>
   1817c:	sub	r1, r0, #1
   18180:	cmp	r1, r2
   18184:	mov	fp, r0
   18188:	bhi	181b8 <pclose@plt+0x70c4>
   1818c:	add	r2, sl, fp
   18190:	mov	r3, #0
   18194:	strb	r3, [r2, #-4]
   18198:	ldrb	r3, [sl, #-4]
   1819c:	cmp	r3, #47	; 0x2f
   181a0:	beq	1826c <pclose@plt+0x7178>
   181a4:	mov	r0, r5
   181a8:	bl	10fc8 <strlen@plt>
   181ac:	add	fp, r0, fp
   181b0:	cmp	fp, #4096	; 0x1000
   181b4:	bcc	181f4 <pclose@plt+0x7100>
   181b8:	ldr	r2, [pc, #216]	; 18298 <pclose@plt+0x71a4>
   181bc:	mov	r3, r8
   181c0:	add	r2, pc, r2
   181c4:	mov	r0, r7
   181c8:	add	r1, r2, #28
   181cc:	bl	125cc <pclose@plt+0x14d8>
   181d0:	add	r3, sp, #8192	; 0x2000
   181d4:	add	r3, r3, #4
   181d8:	ldr	r2, [r3]
   181dc:	ldr	r3, [r6]
   181e0:	cmp	r2, r3
   181e4:	bne	18284 <pclose@plt+0x7190>
   181e8:	add	sp, sp, #8192	; 0x2000
   181ec:	add	sp, sp, #12
   181f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181f4:	add	fp, sp, #4096	; 0x1000
   181f8:	add	fp, fp, #8
   181fc:	sub	sl, fp, #4
   18200:	add	r2, r0, #1
   18204:	mov	r3, #4096	; 0x1000
   18208:	mov	r1, r5
   1820c:	mov	r0, sl
   18210:	bl	10ef0 <__memcpy_chk@plt>
   18214:	mov	r5, #0
   18218:	mov	r1, #47	; 0x2f
   1821c:	mov	r0, sl
   18220:	strb	r5, [fp, #4091]	; 0xffb
   18224:	bl	11070 <strrchr@plt>
   18228:	mov	r1, r9
   1822c:	mov	r2, #4096	; 0x1000
   18230:	cmp	r0, #0
   18234:	strbne	r5, [r0, #1]
   18238:	mov	r0, sl
   1823c:	bl	10fec <__strcat_chk@plt>
   18240:	mov	r3, r8
   18244:	mov	r2, sl
   18248:	mov	r1, r7
   1824c:	mov	r0, r4
   18250:	bl	17e70 <pclose@plt+0x6d7c>
   18254:	cmp	r0, #0
   18258:	bne	181b8 <pclose@plt+0x70c4>
   1825c:	mov	r0, #0
   18260:	b	181d0 <pclose@plt+0x70dc>
   18264:	mvn	r0, #0
   18268:	b	181d0 <pclose@plt+0x70dc>
   1826c:	mov	r2, r9
   18270:	mov	r0, r4
   18274:	mov	r3, r8
   18278:	mov	r1, r7
   1827c:	bl	17e70 <pclose@plt+0x6d7c>
   18280:	b	18254 <pclose@plt+0x7160>
   18284:	bl	10e9c <__stack_chk_fail@plt>
   18288:	andeq	r2, r2, r4, asr #30
   1828c:	andeq	r0, r0, r8, lsl #2
   18290:	andeq	lr, r1, r8, asr r0
   18294:	strdeq	r0, [r0], -lr
   18298:			; <UNDEFINED> instruction: 0x0001dfb0
   1829c:	ldr	r1, [pc, #48]	; 182d4 <pclose@plt+0x71e0>
   182a0:	ldr	ip, [pc, #48]	; 182d8 <pclose@plt+0x71e4>
   182a4:	add	r1, pc, r1
   182a8:	push	{r4, lr}
   182ac:	mov	r3, r0
   182b0:	ldr	ip, [r1, ip]
   182b4:	ldr	r2, [pc, #32]	; 182dc <pclose@plt+0x71e8>
   182b8:	mov	r0, r1
   182bc:	add	r2, pc, r2
   182c0:	mov	r1, #1
   182c4:	ldr	r0, [ip]
   182c8:	bl	11028 <__fprintf_chk@plt>
   182cc:	mov	r0, #2
   182d0:	bl	10fbc <exit@plt>
   182d4:	andeq	r2, r2, r4, asr sp
   182d8:	andeq	r0, r0, ip, lsl #2
   182dc:	andeq	r3, r0, r8, lsr #26
   182e0:	ldr	r3, [r0, #52]	; 0x34
   182e4:	sub	r3, r3, #1
   182e8:	cmp	r3, #0
   182ec:	str	r3, [r0, #52]	; 0x34
   182f0:	blt	1830c <pclose@plt+0x7218>
   182f4:	ldr	r2, [r0, #60]	; 0x3c
   182f8:	ldr	r3, [r2, r3, lsl #2]
   182fc:	lsl	r3, r3, #1
   18300:	add	r3, r3, #1
   18304:	str	r3, [r0, #44]	; 0x2c
   18308:	bx	lr
   1830c:	ldr	r0, [pc, #8]	; 1831c <pclose@plt+0x7228>
   18310:	push	{r4, lr}
   18314:	add	r0, pc, r0
   18318:	bl	1829c <pclose@plt+0x71a8>
   1831c:	andeq	r6, r0, r4, ror #26
   18320:	cmp	r0, #0
   18324:	bxeq	lr
   18328:	ldr	r2, [r0, #4]
   1832c:	mov	r3, #0
   18330:	push	{lr}		; (str lr, [sp, #-4]!)
   18334:	mov	lr, #1
   18338:	str	r3, [r0, #16]
   1833c:	strb	r3, [r2]
   18340:	ldr	r2, [r0, #4]
   18344:	strb	r3, [r2, #1]
   18348:	ldr	ip, [r1, #20]
   1834c:	ldr	r2, [r0, #4]
   18350:	cmp	ip, r3
   18354:	str	r3, [r0, #44]	; 0x2c
   18358:	str	r2, [r0, #8]
   1835c:	str	lr, [r0, #28]
   18360:	popeq	{pc}		; (ldreq pc, [sp], #4)
   18364:	ldr	r3, [r1, #12]
   18368:	ldr	r3, [ip, r3, lsl #2]
   1836c:	cmp	r0, r3
   18370:	popne	{pc}		; (ldrne pc, [sp], #4)
   18374:	ldr	r3, [r0]
   18378:	ldr	ip, [r0, #16]
   1837c:	str	r3, [r1, #4]
   18380:	str	ip, [r1, #28]
   18384:	str	r2, [r1, #36]	; 0x24
   18388:	str	r2, [r1, #80]	; 0x50
   1838c:	ldrb	r3, [r2]
   18390:	strb	r3, [r1, #24]
   18394:	pop	{pc}		; (ldr pc, [sp], #4)
   18398:	push	{r4, r5, r6, r7, r8, lr}
   1839c:	mov	r5, r2
   183a0:	mov	r4, r0
   183a4:	mov	r8, r1
   183a8:	bl	10fe0 <__errno_location@plt>
   183ac:	mov	r1, r5
   183b0:	mov	r6, r0
   183b4:	mov	r0, r4
   183b8:	ldr	r7, [r6]
   183bc:	bl	18320 <pclose@plt+0x722c>
   183c0:	ldr	r3, [r5, #20]
   183c4:	mov	r2, #1
   183c8:	cmp	r3, #0
   183cc:	str	r8, [r4]
   183d0:	str	r2, [r4, #40]	; 0x28
   183d4:	beq	183e8 <pclose@plt+0x72f4>
   183d8:	ldr	r2, [r5, #12]
   183dc:	ldr	r3, [r3, r2, lsl #2]
   183e0:	cmp	r4, r3
   183e4:	beq	183f4 <pclose@plt+0x7300>
   183e8:	mov	r2, #1
   183ec:	mov	r3, #0
   183f0:	strd	r2, [r4, #32]
   183f4:	mov	r3, #0
   183f8:	str	r3, [r4, #24]
   183fc:	str	r7, [r6]
   18400:	pop	{r4, r5, r6, r7, r8, pc}
   18404:	ldr	r0, [r0]
   18408:	bx	lr
   1840c:	ldr	r3, [r0, #20]
   18410:	cmp	r3, #0
   18414:	beq	1842c <pclose@plt+0x7338>
   18418:	ldr	r2, [r0, #12]
   1841c:	ldr	r0, [r3, r2, lsl #2]
   18420:	cmp	r0, #0
   18424:	ldrne	r0, [r0, #32]
   18428:	bx	lr
   1842c:	mov	r0, r3
   18430:	bx	lr
   18434:	ldr	r3, [r0, #20]
   18438:	cmp	r3, #0
   1843c:	beq	18454 <pclose@plt+0x7360>
   18440:	ldr	r2, [r0, #12]
   18444:	ldr	r0, [r3, r2, lsl #2]
   18448:	cmp	r0, #0
   1844c:	ldrne	r0, [r0, #36]	; 0x24
   18450:	bx	lr
   18454:	mov	r0, r3
   18458:	bx	lr
   1845c:	ldr	r0, [r0, #4]
   18460:	bx	lr
   18464:	ldr	r0, [r0, #8]
   18468:	bx	lr
   1846c:	ldr	r0, [r0, #32]
   18470:	bx	lr
   18474:	ldr	r0, [r0, #80]	; 0x50
   18478:	bx	lr
   1847c:	str	r0, [r1]
   18480:	bx	lr
   18484:	ldr	r3, [r1, #20]
   18488:	cmp	r3, #0
   1848c:	beq	184a8 <pclose@plt+0x73b4>
   18490:	ldr	r2, [r1, #12]
   18494:	ldr	r3, [r3, r2, lsl #2]
   18498:	cmp	r3, #0
   1849c:	beq	184a8 <pclose@plt+0x73b4>
   184a0:	str	r0, [r3, #32]
   184a4:	bx	lr
   184a8:	ldr	r0, [pc, #8]	; 184b8 <pclose@plt+0x73c4>
   184ac:	push	{r4, lr}
   184b0:	add	r0, pc, r0
   184b4:	bl	1829c <pclose@plt+0x71a8>
   184b8:	andeq	r6, r0, r8, ror #23
   184bc:	ldr	r3, [r1, #20]
   184c0:	cmp	r3, #0
   184c4:	beq	184e0 <pclose@plt+0x73ec>
   184c8:	ldr	r2, [r1, #12]
   184cc:	ldr	r3, [r3, r2, lsl #2]
   184d0:	cmp	r3, #0
   184d4:	beq	184e0 <pclose@plt+0x73ec>
   184d8:	str	r0, [r3, #36]	; 0x24
   184dc:	bx	lr
   184e0:	ldr	r0, [pc, #8]	; 184f0 <pclose@plt+0x73fc>
   184e4:	push	{r4, lr}
   184e8:	add	r0, pc, r0
   184ec:	bl	1829c <pclose@plt+0x71a8>
   184f0:	ldrdeq	r6, [r0], -r4
   184f4:	str	r0, [r1, #4]
   184f8:	bx	lr
   184fc:	str	r0, [r1, #8]
   18500:	bx	lr
   18504:	ldr	r0, [r0, #76]	; 0x4c
   18508:	bx	lr
   1850c:	str	r0, [r1, #76]	; 0x4c
   18510:	bx	lr
   18514:	ldr	r0, [r0, #92]	; 0x5c
   18518:	bx	lr
   1851c:	str	r0, [r1, #92]	; 0x5c
   18520:	bx	lr
   18524:	b	10f50 <malloc@plt>
   18528:	push	{r4, r5, r6, r7, r8, lr}
   1852c:	mov	r7, r0
   18530:	mov	r6, r1
   18534:	mov	r0, #48	; 0x30
   18538:	mov	r1, r2
   1853c:	mov	r5, r2
   18540:	bl	18524 <pclose@plt+0x7430>
   18544:	subs	r4, r0, #0
   18548:	beq	18588 <pclose@plt+0x7494>
   1854c:	str	r6, [r4, #12]
   18550:	add	r0, r6, #2
   18554:	mov	r1, r5
   18558:	bl	18524 <pclose@plt+0x7430>
   1855c:	cmp	r0, #0
   18560:	str	r0, [r4, #4]
   18564:	beq	18588 <pclose@plt+0x7494>
   18568:	mov	r3, #1
   1856c:	mov	r0, r4
   18570:	mov	r2, r5
   18574:	mov	r1, r7
   18578:	str	r3, [r4, #20]
   1857c:	bl	18398 <pclose@plt+0x72a4>
   18580:	mov	r0, r4
   18584:	pop	{r4, r5, r6, r7, r8, pc}
   18588:	ldr	r0, [pc, #4]	; 18594 <pclose@plt+0x74a0>
   1858c:	add	r0, pc, r0
   18590:	bl	1829c <pclose@plt+0x71a8>
   18594:	andeq	r6, r0, r4, asr fp
   18598:	push	{r4, lr}
   1859c:	subs	r4, r0, #0
   185a0:	beq	18620 <pclose@plt+0x752c>
   185a4:	mov	r1, #0
   185a8:	mov	r0, #96	; 0x60
   185ac:	bl	18524 <pclose@plt+0x7430>
   185b0:	cmp	r0, #0
   185b4:	str	r0, [r4]
   185b8:	beq	18608 <pclose@plt+0x7514>
   185bc:	mov	r2, #96	; 0x60
   185c0:	mov	r1, #0
   185c4:	bl	11004 <memset@plt>
   185c8:	ldr	r2, [r4]
   185cc:	mov	r3, #0
   185d0:	mov	r1, r3
   185d4:	str	r3, [r2, #20]
   185d8:	str	r3, [r2, #12]
   185dc:	str	r3, [r2, #16]
   185e0:	str	r3, [r2, #36]	; 0x24
   185e4:	str	r3, [r2, #40]	; 0x28
   185e8:	str	r3, [r2, #44]	; 0x2c
   185ec:	str	r3, [r2, #52]	; 0x34
   185f0:	str	r3, [r2, #56]	; 0x38
   185f4:	str	r3, [r2, #60]	; 0x3c
   185f8:	str	r3, [r2, #4]
   185fc:	str	r3, [r2, #8]
   18600:	mov	r0, r1
   18604:	pop	{r4, pc}
   18608:	bl	10fe0 <__errno_location@plt>
   1860c:	mov	r3, #12
   18610:	mov	r1, #1
   18614:	str	r3, [r0]
   18618:	mov	r0, r1
   1861c:	pop	{r4, pc}
   18620:	bl	10fe0 <__errno_location@plt>
   18624:	mov	r3, #22
   18628:	mov	r1, #1
   1862c:	str	r3, [r0]
   18630:	mov	r0, r1
   18634:	pop	{r4, pc}
   18638:	ldr	r3, [pc, #228]	; 18724 <pclose@plt+0x7630>
   1863c:	ldr	r2, [pc, #228]	; 18728 <pclose@plt+0x7634>
   18640:	add	r3, pc, r3
   18644:	push	{r4, r5, r6, r7, lr}
   18648:	sub	sp, sp, #108	; 0x6c
   1864c:	ldr	r5, [r3, r2]
   18650:	add	r6, sp, #4
   18654:	mov	r4, r1
   18658:	ldr	r3, [r5]
   1865c:	mov	r1, r6
   18660:	mov	r7, r0
   18664:	str	r3, [sp, #100]	; 0x64
   18668:	bl	1847c <pclose@plt+0x7388>
   1866c:	cmp	r4, #0
   18670:	beq	1870c <pclose@plt+0x7618>
   18674:	mov	r1, r6
   18678:	mov	r0, #96	; 0x60
   1867c:	bl	18524 <pclose@plt+0x7430>
   18680:	cmp	r0, #0
   18684:	str	r0, [r4]
   18688:	beq	186f8 <pclose@plt+0x7604>
   1868c:	mov	r2, #96	; 0x60
   18690:	mov	r1, #0
   18694:	bl	11004 <memset@plt>
   18698:	ldr	r1, [r4]
   1869c:	mov	r0, r7
   186a0:	bl	1847c <pclose@plt+0x7388>
   186a4:	mov	r3, #0
   186a8:	ldr	r2, [r4]
   186ac:	mov	r1, r3
   186b0:	str	r3, [r2, #20]
   186b4:	str	r3, [r2, #12]
   186b8:	str	r3, [r2, #16]
   186bc:	str	r3, [r2, #36]	; 0x24
   186c0:	str	r3, [r2, #40]	; 0x28
   186c4:	str	r3, [r2, #44]	; 0x2c
   186c8:	str	r3, [r2, #52]	; 0x34
   186cc:	str	r3, [r2, #56]	; 0x38
   186d0:	str	r3, [r2, #60]	; 0x3c
   186d4:	str	r3, [r2, #4]
   186d8:	str	r3, [r2, #8]
   186dc:	ldr	r2, [sp, #100]	; 0x64
   186e0:	ldr	r3, [r5]
   186e4:	mov	r0, r1
   186e8:	cmp	r2, r3
   186ec:	bne	18720 <pclose@plt+0x762c>
   186f0:	add	sp, sp, #108	; 0x6c
   186f4:	pop	{r4, r5, r6, r7, pc}
   186f8:	bl	10fe0 <__errno_location@plt>
   186fc:	mov	r3, #12
   18700:	mov	r1, #1
   18704:	str	r3, [r0]
   18708:	b	186dc <pclose@plt+0x75e8>
   1870c:	bl	10fe0 <__errno_location@plt>
   18710:	mov	r3, #22
   18714:	mov	r1, #1
   18718:	str	r3, [r0]
   1871c:	b	186dc <pclose@plt+0x75e8>
   18720:	bl	10e9c <__stack_chk_fail@plt>
   18724:			; <UNDEFINED> instruction: 0x000229b8
   18728:	andeq	r0, r0, r8, lsl #2
   1872c:	b	10ea8 <realloc@plt>
   18730:	push	{r4, r5, r6, lr}
   18734:	mov	r4, r0
   18738:	ldr	r6, [r0, #20]
   1873c:	cmp	r6, #0
   18740:	beq	18794 <pclose@plt+0x76a0>
   18744:	ldr	r3, [r0, #16]
   18748:	ldr	r1, [r0, #12]
   1874c:	sub	r2, r3, #1
   18750:	cmp	r1, r2
   18754:	popcc	{r4, r5, r6, pc}
   18758:	add	r5, r3, #8
   1875c:	mov	r0, r6
   18760:	lsl	r1, r5, #2
   18764:	mov	r2, r4
   18768:	bl	1872c <pclose@plt+0x7638>
   1876c:	cmp	r0, #0
   18770:	str	r0, [r4, #20]
   18774:	beq	187c0 <pclose@plt+0x76cc>
   18778:	ldr	r3, [r4, #16]
   1877c:	mov	r2, #32
   18780:	mov	r1, #0
   18784:	add	r0, r0, r3, lsl #2
   18788:	bl	11004 <memset@plt>
   1878c:	str	r5, [r4, #16]
   18790:	pop	{r4, r5, r6, pc}
   18794:	mov	r1, r0
   18798:	mov	r0, #4
   1879c:	bl	18524 <pclose@plt+0x7430>
   187a0:	cmp	r0, #0
   187a4:	str	r0, [r4, #20]
   187a8:	beq	187c0 <pclose@plt+0x76cc>
   187ac:	mov	r3, #1
   187b0:	str	r6, [r0]
   187b4:	str	r6, [r4, #12]
   187b8:	str	r3, [r4, #16]
   187bc:	pop	{r4, r5, r6, pc}
   187c0:	ldr	r0, [pc, #4]	; 187cc <pclose@plt+0x76d8>
   187c4:	add	r0, pc, r0
   187c8:	bl	1829c <pclose@plt+0x71a8>
   187cc:	andeq	r6, r0, r8, asr #18
   187d0:	ldr	r3, [r1, #20]
   187d4:	push	{r4, r5, r6, r7, r8, lr}
   187d8:	cmp	r3, #0
   187dc:	mov	r4, r1
   187e0:	mov	r5, r0
   187e4:	beq	18838 <pclose@plt+0x7744>
   187e8:	ldr	r2, [r1, #12]
   187ec:	ldr	r0, [r3, r2, lsl #2]
   187f0:	cmp	r0, #0
   187f4:	beq	18838 <pclose@plt+0x7744>
   187f8:	mov	r1, r5
   187fc:	mov	r2, r4
   18800:	bl	18398 <pclose@plt+0x72a4>
   18804:	ldr	r3, [r4, #20]
   18808:	ldr	r2, [r4, #12]
   1880c:	ldr	r2, [r3, r2, lsl #2]
   18810:	ldr	r3, [r2, #8]
   18814:	ldr	r1, [r2, #16]
   18818:	ldr	r2, [r2]
   1881c:	str	r3, [r4, #36]	; 0x24
   18820:	str	r1, [r4, #28]
   18824:	str	r3, [r4, #80]	; 0x50
   18828:	str	r2, [r4, #4]
   1882c:	ldrb	r3, [r3]
   18830:	strb	r3, [r4, #24]
   18834:	pop	{r4, r5, r6, r7, r8, pc}
   18838:	mov	r0, r4
   1883c:	bl	18730 <pclose@plt+0x763c>
   18840:	mov	r2, r4
   18844:	mov	r1, #16384	; 0x4000
   18848:	ldr	r0, [r4, #4]
   1884c:	ldr	r7, [r4, #12]
   18850:	ldr	r6, [r4, #20]
   18854:	bl	18528 <pclose@plt+0x7434>
   18858:	ldr	r3, [r4, #20]
   1885c:	cmp	r3, #0
   18860:	ldrne	r2, [r4, #12]
   18864:	str	r0, [r6, r7, lsl #2]
   18868:	moveq	r0, r3
   1886c:	ldrne	r0, [r3, r2, lsl #2]
   18870:	b	187f8 <pclose@plt+0x7704>
   18874:	push	{r4, r5, r6, lr}
   18878:	mov	r4, r1
   1887c:	mov	r5, r0
   18880:	mov	r0, r1
   18884:	bl	18730 <pclose@plt+0x763c>
   18888:	ldr	r3, [r4, #20]
   1888c:	cmp	r3, #0
   18890:	beq	18910 <pclose@plt+0x781c>
   18894:	ldr	r2, [r4, #12]
   18898:	ldr	r1, [r3, r2, lsl #2]
   1889c:	add	r3, r3, r2, lsl #2
   188a0:	cmp	r1, r5
   188a4:	popeq	{r4, r5, r6, pc}
   188a8:	cmp	r1, #0
   188ac:	beq	188dc <pclose@plt+0x77e8>
   188b0:	ldr	r3, [r4, #36]	; 0x24
   188b4:	ldrb	r2, [r4, #24]
   188b8:	strb	r2, [r3]
   188bc:	ldr	r1, [r4, #12]
   188c0:	ldr	r2, [r4, #20]
   188c4:	ldr	r0, [r4, #36]	; 0x24
   188c8:	add	r3, r2, r1, lsl #2
   188cc:	ldr	r2, [r2, r1, lsl #2]
   188d0:	ldr	r1, [r4, #28]
   188d4:	str	r0, [r2, #8]
   188d8:	str	r1, [r2, #16]
   188dc:	ldr	r2, [r5, #8]
   188e0:	ldr	r0, [r5, #16]
   188e4:	ldr	r1, [r5]
   188e8:	str	r5, [r3]
   188ec:	str	r2, [r4, #36]	; 0x24
   188f0:	str	r2, [r4, #80]	; 0x50
   188f4:	str	r0, [r4, #28]
   188f8:	str	r1, [r4, #4]
   188fc:	ldrb	r3, [r2]
   18900:	mov	r2, #1
   18904:	str	r2, [r4, #48]	; 0x30
   18908:	strb	r3, [r4, #24]
   1890c:	pop	{r4, r5, r6, pc}
   18910:	cmp	r5, #0
   18914:	popeq	{r4, r5, r6, pc}
   18918:	ldr	r3, [r4, #12]
   1891c:	lsl	r3, r3, #2
   18920:	b	188dc <pclose@plt+0x77e8>
   18924:	cmp	r1, #1
   18928:	push	{r4, r5, r6, r7, r8, lr}
   1892c:	bls	189a8 <pclose@plt+0x78b4>
   18930:	sub	r8, r1, #2
   18934:	ldrb	r4, [r0, r8]
   18938:	cmp	r4, #0
   1893c:	bne	189a8 <pclose@plt+0x78b4>
   18940:	add	r3, r0, r1
   18944:	ldrb	r6, [r3, #-1]
   18948:	cmp	r6, #0
   1894c:	bne	189a0 <pclose@plt+0x78ac>
   18950:	mov	r5, r0
   18954:	mov	r1, r2
   18958:	mov	r0, #48	; 0x30
   1895c:	mov	r7, r2
   18960:	bl	18524 <pclose@plt+0x7430>
   18964:	subs	r4, r0, #0
   18968:	beq	189b4 <pclose@plt+0x78c0>
   1896c:	mov	r3, #1
   18970:	str	r8, [r4, #12]
   18974:	str	r5, [r4, #4]
   18978:	str	r5, [r4, #8]
   1897c:	str	r6, [r4, #20]
   18980:	str	r6, [r4]
   18984:	str	r8, [r4, #16]
   18988:	str	r6, [r4, #24]
   1898c:	str	r6, [r4, #40]	; 0x28
   18990:	str	r6, [r4, #44]	; 0x2c
   18994:	mov	r1, r7
   18998:	str	r3, [r4, #28]
   1899c:	bl	18874 <pclose@plt+0x7780>
   189a0:	mov	r0, r4
   189a4:	pop	{r4, r5, r6, r7, r8, pc}
   189a8:	mov	r4, #0
   189ac:	mov	r0, r4
   189b0:	pop	{r4, r5, r6, r7, r8, pc}
   189b4:	ldr	r0, [pc, #4]	; 189c0 <pclose@plt+0x78cc>
   189b8:	add	r0, pc, r0
   189bc:	bl	1829c <pclose@plt+0x71a8>
   189c0:	andeq	r6, r0, r8, lsl #15
   189c4:	push	{r4, r5, r6, r7, r8, lr}
   189c8:	add	r6, r1, #2
   189cc:	mov	r5, r1
   189d0:	mov	r4, r0
   189d4:	mov	r1, r2
   189d8:	mov	r0, r6
   189dc:	mov	r7, r2
   189e0:	bl	18524 <pclose@plt+0x7430>
   189e4:	subs	lr, r0, #0
   189e8:	beq	18a44 <pclose@plt+0x7950>
   189ec:	cmp	r5, #0
   189f0:	subgt	r0, r4, #1
   189f4:	addgt	ip, r0, r5
   189f8:	subgt	r3, lr, #1
   189fc:	ble	18a10 <pclose@plt+0x791c>
   18a00:	ldrb	r1, [r0, #1]!
   18a04:	cmp	r0, ip
   18a08:	strb	r1, [r3, #1]!
   18a0c:	bne	18a00 <pclose@plt+0x790c>
   18a10:	add	r0, lr, r5
   18a14:	mov	r3, #0
   18a18:	strb	r3, [r0, #1]
   18a1c:	mov	r2, r7
   18a20:	strb	r3, [lr, r5]
   18a24:	mov	r1, r6
   18a28:	mov	r0, lr
   18a2c:	bl	18924 <pclose@plt+0x7830>
   18a30:	subs	r3, r0, #0
   18a34:	beq	18a50 <pclose@plt+0x795c>
   18a38:	mov	r2, #1
   18a3c:	str	r2, [r3, #20]
   18a40:	pop	{r4, r5, r6, r7, r8, pc}
   18a44:	ldr	r0, [pc, #16]	; 18a5c <pclose@plt+0x7968>
   18a48:	add	r0, pc, r0
   18a4c:	bl	1829c <pclose@plt+0x71a8>
   18a50:	ldr	r0, [pc, #8]	; 18a60 <pclose@plt+0x796c>
   18a54:	add	r0, pc, r0
   18a58:	bl	1829c <pclose@plt+0x71a8>
   18a5c:	andeq	r6, r0, r4, lsr #14
   18a60:	andeq	r6, r0, r4, asr #14
   18a64:	push	{r4, r5, r6, lr}
   18a68:	mov	r5, r1
   18a6c:	mov	r4, r0
   18a70:	bl	10fc8 <strlen@plt>
   18a74:	mov	r2, r5
   18a78:	mov	r1, r0
   18a7c:	mov	r0, r4
   18a80:	pop	{r4, r5, r6, lr}
   18a84:	b	189c4 <pclose@plt+0x78d0>
   18a88:	push	{r4, r5, r6, lr}
   18a8c:	subs	r5, r0, #0
   18a90:	popeq	{r4, r5, r6, pc}
   18a94:	mov	r4, r1
   18a98:	mov	r0, r1
   18a9c:	bl	18730 <pclose@plt+0x763c>
   18aa0:	ldr	r3, [r4, #20]
   18aa4:	cmp	r3, #0
   18aa8:	beq	18b30 <pclose@plt+0x7a3c>
   18aac:	ldr	r2, [r4, #12]
   18ab0:	ldr	r1, [r3, r2, lsl #2]
   18ab4:	add	r3, r3, r2, lsl #2
   18ab8:	cmp	r1, #0
   18abc:	beq	18afc <pclose@plt+0x7a08>
   18ac0:	ldr	r3, [r4, #36]	; 0x24
   18ac4:	ldrb	r2, [r4, #24]
   18ac8:	strb	r2, [r3]
   18acc:	ldr	r1, [r4, #20]
   18ad0:	ldr	r2, [r4, #12]
   18ad4:	ldr	ip, [r4, #36]	; 0x24
   18ad8:	ldr	r0, [r4, #28]
   18adc:	ldr	r3, [r1, r2, lsl #2]
   18ae0:	cmp	r1, #0
   18ae4:	str	ip, [r3, #8]
   18ae8:	str	r0, [r3, #16]
   18aec:	add	r3, r1, r2, lsl #2
   18af0:	addne	r3, r2, #1
   18af4:	strne	r3, [r4, #12]
   18af8:	addne	r3, r1, r3, lsl #2
   18afc:	ldr	r2, [r5, #8]
   18b00:	ldr	r0, [r5, #16]
   18b04:	ldr	r1, [r5]
   18b08:	str	r5, [r3]
   18b0c:	str	r2, [r4, #36]	; 0x24
   18b10:	str	r2, [r4, #80]	; 0x50
   18b14:	str	r0, [r4, #28]
   18b18:	str	r1, [r4, #4]
   18b1c:	ldrb	r3, [r2]
   18b20:	mov	r2, #1
   18b24:	str	r2, [r4, #48]	; 0x30
   18b28:	strb	r3, [r4, #24]
   18b2c:	pop	{r4, r5, r6, pc}
   18b30:	ldr	r3, [r4, #12]
   18b34:	lsl	r3, r3, #2
   18b38:	b	18afc <pclose@plt+0x7a08>
   18b3c:	ldr	r3, [r0, #48]	; 0x30
   18b40:	push	{r4, r5, lr}
   18b44:	cmp	r3, #0
   18b48:	sub	sp, sp, #12
   18b4c:	mov	r4, r0
   18b50:	mov	r5, r2
   18b54:	beq	18b90 <pclose@plt+0x7a9c>
   18b58:	add	r2, r0, #48	; 0x30
   18b5c:	mov	r3, #0
   18b60:	ldr	r0, [r2, #4]!
   18b64:	add	r3, r3, #1
   18b68:	cmp	r0, #0
   18b6c:	bne	18b60 <pclose@plt+0x7a6c>
   18b70:	cmp	r3, #20
   18b74:	bne	18b90 <pclose@plt+0x7a9c>
   18b78:	ldr	r3, [r4, #28]
   18b7c:	cmp	r3, #2
   18b80:	mvnle	r0, #0
   18b84:	bgt	18bbc <pclose@plt+0x7ac8>
   18b88:	add	sp, sp, #12
   18b8c:	pop	{r4, r5, pc}
   18b90:	add	r3, r3, #12
   18b94:	ldr	r0, [r1]
   18b98:	mov	r2, r5
   18b9c:	str	r1, [r4, r3, lsl #2]
   18ba0:	mov	r1, #16384	; 0x4000
   18ba4:	bl	18528 <pclose@plt+0x7434>
   18ba8:	mov	r1, r5
   18bac:	bl	18a88 <pclose@plt+0x7994>
   18bb0:	mov	r0, #0
   18bb4:	add	sp, sp, #12
   18bb8:	pop	{r4, r5, pc}
   18bbc:	ldr	r1, [pc, #68]	; 18c08 <pclose@plt+0x7b14>
   18bc0:	mov	r2, #5
   18bc4:	add	r1, pc, r1
   18bc8:	bl	10e84 <dcgettext@plt>
   18bcc:	ldr	r2, [pc, #56]	; 18c0c <pclose@plt+0x7b18>
   18bd0:	mov	r3, #42	; 0x2a
   18bd4:	add	r2, pc, r2
   18bd8:	sub	r2, r2, #1616	; 0x650
   18bdc:	sub	r2, r2, #4
   18be0:	str	r2, [sp]
   18be4:	ldr	r2, [pc, #36]	; 18c10 <pclose@plt+0x7b1c>
   18be8:	mov	r1, #3
   18bec:	add	r2, pc, r2
   18bf0:	str	r0, [sp, #4]
   18bf4:	mov	r0, r4
   18bf8:	bl	12994 <pclose@plt+0x18a0>
   18bfc:	mvn	r0, #0
   18c00:	add	sp, sp, #12
   18c04:	pop	{r4, r5, pc}
   18c08:	strdeq	r6, [r0], -r4
   18c0c:	andeq	r6, r0, ip, lsr #21
   18c10:	andeq	r6, r0, r0, lsl #9
   18c14:	ldrd	r2, [r1, #52]	; 0x34
   18c18:	push	{r4, r5, r6, lr}
   18c1c:	mov	r5, r0
   18c20:	cmp	r2, r3
   18c24:	mov	r4, r1
   18c28:	ldr	r0, [r1, #60]	; 0x3c
   18c2c:	blt	18c60 <pclose@plt+0x7b6c>
   18c30:	add	r3, r3, #25
   18c34:	cmp	r0, #0
   18c38:	str	r3, [r1, #56]	; 0x38
   18c3c:	lsl	r3, r3, #2
   18c40:	beq	18c8c <pclose@plt+0x7b98>
   18c44:	mov	r1, r3
   18c48:	mov	r2, r4
   18c4c:	bl	1872c <pclose@plt+0x7638>
   18c50:	str	r0, [r4, #60]	; 0x3c
   18c54:	cmp	r0, #0
   18c58:	beq	18c9c <pclose@plt+0x7ba8>
   18c5c:	ldr	r2, [r4, #52]	; 0x34
   18c60:	ldr	r3, [r4, #44]	; 0x2c
   18c64:	lsl	r5, r5, #1
   18c68:	sub	r3, r3, #1
   18c6c:	add	r5, r5, #1
   18c70:	add	r3, r3, r3, lsr #31
   18c74:	add	r1, r2, #1
   18c78:	asr	r3, r3, #1
   18c7c:	str	r1, [r4, #52]	; 0x34
   18c80:	str	r3, [r0, r2, lsl #2]
   18c84:	str	r5, [r4, #44]	; 0x2c
   18c88:	pop	{r4, r5, r6, pc}
   18c8c:	mov	r0, r3
   18c90:	bl	18524 <pclose@plt+0x7430>
   18c94:	str	r0, [r4, #60]	; 0x3c
   18c98:	b	18c54 <pclose@plt+0x7b60>
   18c9c:	ldr	r0, [pc, #4]	; 18ca8 <pclose@plt+0x7bb4>
   18ca0:	add	r0, pc, r0
   18ca4:	bl	1829c <pclose@plt+0x71a8>
   18ca8:	andeq	r6, r0, r8, lsr r5
   18cac:	b	10e48 <free@plt>
   18cb0:	push	{r4, r5, r6, lr}
   18cb4:	subs	r4, r0, #0
   18cb8:	popeq	{r4, r5, r6, pc}
   18cbc:	ldr	r3, [r1, #20]
   18cc0:	cmp	r3, #0
   18cc4:	beq	18cdc <pclose@plt+0x7be8>
   18cc8:	ldr	r2, [r1, #12]
   18ccc:	ldr	r0, [r3, r2, lsl #2]
   18cd0:	cmp	r4, r0
   18cd4:	moveq	r0, #0
   18cd8:	streq	r0, [r3, r2, lsl #2]
   18cdc:	ldr	r3, [r4, #20]
   18ce0:	mov	r5, r1
   18ce4:	cmp	r3, #0
   18ce8:	bne	18cfc <pclose@plt+0x7c08>
   18cec:	mov	r1, r5
   18cf0:	mov	r0, r4
   18cf4:	pop	{r4, r5, r6, lr}
   18cf8:	b	18cac <pclose@plt+0x7bb8>
   18cfc:	ldr	r0, [r4, #4]
   18d00:	bl	18cac <pclose@plt+0x7bb8>
   18d04:	mov	r1, r5
   18d08:	mov	r0, r4
   18d0c:	pop	{r4, r5, r6, lr}
   18d10:	b	18cac <pclose@plt+0x7bb8>
   18d14:	ldr	r3, [r0, #20]
   18d18:	cmp	r3, #0
   18d1c:	bxeq	lr
   18d20:	ldr	r2, [r0, #12]
   18d24:	ldr	r3, [r3, r2, lsl #2]
   18d28:	cmp	r3, #0
   18d2c:	bxeq	lr
   18d30:	push	{r4, lr}
   18d34:	mov	r4, r0
   18d38:	mov	r1, r4
   18d3c:	mov	r0, r3
   18d40:	bl	18cb0 <pclose@plt+0x7bbc>
   18d44:	ldr	r3, [r4, #12]
   18d48:	ldr	r2, [r4, #20]
   18d4c:	mov	r1, #0
   18d50:	cmp	r3, r1
   18d54:	str	r1, [r2, r3, lsl #2]
   18d58:	subne	r3, r3, #1
   18d5c:	strne	r3, [r4, #12]
   18d60:	cmp	r2, #0
   18d64:	popeq	{r4, pc}
   18d68:	ldr	r3, [r4, #12]
   18d6c:	ldr	r3, [r2, r3, lsl #2]
   18d70:	cmp	r3, #0
   18d74:	popeq	{r4, pc}
   18d78:	ldr	r2, [r3, #8]
   18d7c:	ldr	r1, [r3, #16]
   18d80:	ldr	r3, [r3]
   18d84:	str	r2, [r4, #36]	; 0x24
   18d88:	str	r2, [r4, #80]	; 0x50
   18d8c:	str	r1, [r4, #28]
   18d90:	str	r3, [r4, #4]
   18d94:	ldrb	r3, [r2]
   18d98:	mov	r2, #1
   18d9c:	str	r2, [r4, #48]	; 0x30
   18da0:	strb	r3, [r4, #24]
   18da4:	pop	{r4, pc}
   18da8:	ldr	r3, [r0, #48]	; 0x30
   18dac:	cmp	r3, #0
   18db0:	beq	18e1c <pclose@plt+0x7d28>
   18db4:	push	{r4, r5, r6, r7, r8, lr}
   18db8:	add	r3, r0, #48	; 0x30
   18dbc:	mov	r4, #0
   18dc0:	b	18dc8 <pclose@plt+0x7cd4>
   18dc4:	mov	r4, ip
   18dc8:	ldr	r2, [r3, #4]!
   18dcc:	add	ip, r4, #1
   18dd0:	cmp	r2, #0
   18dd4:	bne	18dc4 <pclose@plt+0x7cd0>
   18dd8:	cmp	r4, #0
   18ddc:	mov	r6, r1
   18de0:	mov	r5, r0
   18de4:	bne	18e04 <pclose@plt+0x7d10>
   18de8:	add	r4, r4, #12
   18dec:	mov	r3, #0
   18df0:	mov	r0, r6
   18df4:	str	r3, [r5, r4, lsl #2]
   18df8:	bl	18d14 <pclose@plt+0x7c20>
   18dfc:	mov	r0, #0
   18e00:	pop	{r4, r5, r6, r7, r8, pc}
   18e04:	add	r7, r0, r4, lsl #2
   18e08:	ldr	r0, [r7, #48]	; 0x30
   18e0c:	bl	12590 <pclose@plt+0x149c>
   18e10:	ldr	r0, [r7, #48]	; 0x30
   18e14:	bl	10e48 <free@plt>
   18e18:	b	18de8 <pclose@plt+0x7cf4>
   18e1c:	mov	r0, #0
   18e20:	bx	lr
   18e24:	ldr	ip, [pc, #3996]	; 19dc8 <pclose@plt+0x8cd4>
   18e28:	ldr	r3, [pc, #3996]	; 19dcc <pclose@plt+0x8cd8>
   18e2c:	add	ip, pc, ip
   18e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e34:	sub	sp, sp, #76	; 0x4c
   18e38:	ldr	r3, [ip, r3]
   18e3c:	ldr	r2, [r1, #40]	; 0x28
   18e40:	str	r3, [sp, #24]
   18e44:	ldr	r3, [r3]
   18e48:	cmp	r2, #0
   18e4c:	mov	fp, r1
   18e50:	str	r0, [r1, #92]	; 0x5c
   18e54:	str	r3, [sp, #68]	; 0x44
   18e58:	beq	1906c <pclose@plt+0x7f78>
   18e5c:	ldrb	r2, [r1, #24]
   18e60:	ldr	r3, [r1, #36]	; 0x24
   18e64:	ldr	r9, [pc, #3940]	; 19dd0 <pclose@plt+0x8cdc>
   18e68:	ldr	r1, [pc, #3940]	; 19dd4 <pclose@plt+0x8ce0>
   18e6c:	add	r9, pc, r9
   18e70:	add	r1, pc, r1
   18e74:	add	r7, r9, #2352	; 0x930
   18e78:	sub	r1, r1, #3216	; 0xc90
   18e7c:	add	r7, r7, #8
   18e80:	str	r1, [sp, #16]
   18e84:	ldr	sl, [pc, #3916]	; 19dd8 <pclose@plt+0x8ce4>
   18e88:	mov	r1, r9
   18e8c:	mov	r8, r7
   18e90:	mov	r9, fp
   18e94:	mov	fp, r1
   18e98:	ldr	r7, [pc, #3900]	; 19ddc <pclose@plt+0x8ce8>
   18e9c:	strb	r2, [r3]
   18ea0:	add	r7, pc, r7
   18ea4:	mov	r1, r7
   18ea8:	ldr	r0, [r9, #44]	; 0x2c
   18eac:	mov	r7, r9
   18eb0:	mov	r9, r1
   18eb4:	str	r3, [sp, #20]
   18eb8:	add	r4, fp, #3392	; 0xd40
   18ebc:	add	r4, r4, #4
   18ec0:	add	r6, r9, #256	; 0x100
   18ec4:	add	r5, fp, #1264	; 0x4f0
   18ec8:	lsl	r1, r0, #1
   18ecc:	ldrb	ip, [r9, r2]
   18ed0:	ldrsh	r2, [r6, r1]
   18ed4:	cmp	r2, #0
   18ed8:	strne	r0, [r7, #64]	; 0x40
   18edc:	strne	r3, [r7, #68]	; 0x44
   18ee0:	b	18ef8 <pclose@plt+0x7e04>
   18ee4:	ldrsh	r0, [r5, r1]
   18ee8:	cmp	r0, sl
   18eec:	addgt	ip, fp, ip
   18ef0:	lsl	r1, r0, #1
   18ef4:	ldrbgt	ip, [ip, #2300]	; 0x8fc
   18ef8:	ldrsh	r2, [r8, r1]
   18efc:	add	r2, r2, ip
   18f00:	lsl	r2, r2, #1
   18f04:	ldrsh	lr, [r4, r2]
   18f08:	cmp	lr, r0
   18f0c:	bne	18ee4 <pclose@plt+0x7df0>
   18f10:	ldr	r1, [sp, #16]
   18f14:	ldrsh	r0, [r1, r2]
   18f18:	cmp	r0, sl
   18f1c:	ldrbne	r2, [r3, #1]!
   18f20:	bne	18ec8 <pclose@plt+0x7dd4>
   18f24:	ldr	r3, [pc, #3764]	; 19de0 <pclose@plt+0x8cec>
   18f28:	ldr	r6, [r7, #68]	; 0x44
   18f2c:	add	r3, pc, r3
   18f30:	mov	r2, r3
   18f34:	str	r3, [sp, #32]
   18f38:	ldr	r3, [pc, #3748]	; 19de4 <pclose@plt+0x8cf0>
   18f3c:	add	r5, r2, #2352	; 0x930
   18f40:	add	r3, pc, r3
   18f44:	add	r5, r5, #8
   18f48:	ldr	r0, [r7, #64]	; 0x40
   18f4c:	str	r9, [sp, #28]
   18f50:	add	r4, r3, #256	; 0x100
   18f54:	mov	r9, fp
   18f58:	mov	fp, r5
   18f5c:	ldr	r1, [sp, #20]
   18f60:	lsl	r0, r0, #1
   18f64:	sub	r2, r6, r1
   18f68:	ldrsh	r3, [r4, r0]
   18f6c:	str	r2, [r7, #32]
   18f70:	str	r1, [r7, #80]	; 0x50
   18f74:	ldrb	r1, [r6]
   18f78:	mov	r2, #0
   18f7c:	strb	r1, [r7, #24]
   18f80:	strb	r2, [r6]
   18f84:	str	r6, [r7, #36]	; 0x24
   18f88:	cmp	r3, #53	; 0x35
   18f8c:	addls	pc, pc, r3, lsl #2
   18f90:	b	1a034 <pclose@plt+0x8f40>
   18f94:	b	196d4 <pclose@plt+0x85e0>
   18f98:	b	196f0 <pclose@plt+0x85fc>
   18f9c:	b	19564 <pclose@plt+0x8470>
   18fa0:	b	19678 <pclose@plt+0x8584>
   18fa4:	b	19760 <pclose@plt+0x866c>
   18fa8:	b	19720 <pclose@plt+0x862c>
   18fac:	b	1970c <pclose@plt+0x8618>
   18fb0:	b	198ac <pclose@plt+0x87b8>
   18fb4:	b	1988c <pclose@plt+0x8798>
   18fb8:	b	198ec <pclose@plt+0x87f8>
   18fbc:	b	193ac <pclose@plt+0x82b8>
   18fc0:	b	197c0 <pclose@plt+0x86cc>
   18fc4:	b	1979c <pclose@plt+0x86a8>
   18fc8:	b	19854 <pclose@plt+0x8760>
   18fcc:	b	19670 <pclose@plt+0x857c>
   18fd0:	b	1978c <pclose@plt+0x8698>
   18fd4:	b	19784 <pclose@plt+0x8690>
   18fd8:	b	19794 <pclose@plt+0x86a0>
   18fdc:	b	192dc <pclose@plt+0x81e8>
   18fe0:	b	196e8 <pclose@plt+0x85f4>
   18fe4:	b	19274 <pclose@plt+0x8180>
   18fe8:	b	1926c <pclose@plt+0x8178>
   18fec:	b	19264 <pclose@plt+0x8170>
   18ff0:	b	1925c <pclose@plt+0x8168>
   18ff4:	b	19254 <pclose@plt+0x8160>
   18ff8:	b	1924c <pclose@plt+0x8158>
   18ffc:	b	19244 <pclose@plt+0x8150>
   19000:	b	1923c <pclose@plt+0x8148>
   19004:	b	19234 <pclose@plt+0x8140>
   19008:	b	1922c <pclose@plt+0x8138>
   1900c:	b	19224 <pclose@plt+0x8130>
   19010:	b	1921c <pclose@plt+0x8128>
   19014:	b	19214 <pclose@plt+0x8120>
   19018:	b	1920c <pclose@plt+0x8118>
   1901c:	b	19204 <pclose@plt+0x8110>
   19020:	b	191fc <pclose@plt+0x8108>
   19024:	b	19404 <pclose@plt+0x8310>
   19028:	b	193dc <pclose@plt+0x82e8>
   1902c:	b	193c0 <pclose@plt+0x82cc>
   19030:	b	194fc <pclose@plt+0x8408>
   19034:	b	194d0 <pclose@plt+0x83dc>
   19038:	b	19518 <pclose@plt+0x8424>
   1903c:	b	192ac <pclose@plt+0x81b8>
   19040:	b	1927c <pclose@plt+0x8188>
   19044:	b	1937c <pclose@plt+0x8288>
   19048:	b	19324 <pclose@plt+0x8230>
   1904c:	b	192e4 <pclose@plt+0x81f0>
   19050:	b	1919c <pclose@plt+0x80a8>
   19054:	b	19900 <pclose@plt+0x880c>
   19058:	b	1940c <pclose@plt+0x8318>
   1905c:	b	191c0 <pclose@plt+0x80cc>
   19060:	b	191c0 <pclose@plt+0x80cc>
   19064:	b	191c0 <pclose@plt+0x80cc>
   19068:	b	191c0 <pclose@plt+0x80cc>
   1906c:	ldr	r2, [r1, #44]	; 0x2c
   19070:	mov	r3, #1
   19074:	cmp	r2, #0
   19078:	streq	r3, [r1, #44]	; 0x2c
   1907c:	str	r3, [r1, #40]	; 0x28
   19080:	ldr	r3, [r1, #4]
   19084:	cmp	r3, #0
   19088:	beq	19130 <pclose@plt+0x803c>
   1908c:	ldr	r3, [fp, #8]
   19090:	cmp	r3, #0
   19094:	beq	19110 <pclose@plt+0x801c>
   19098:	ldr	r3, [fp, #20]
   1909c:	cmp	r3, #0
   190a0:	beq	190dc <pclose@plt+0x7fe8>
   190a4:	ldr	r2, [fp, #12]
   190a8:	ldr	r2, [r3, r2, lsl #2]
   190ac:	cmp	r2, #0
   190b0:	beq	190dc <pclose@plt+0x7fe8>
   190b4:	ldr	r3, [r2, #8]
   190b8:	ldr	r1, [r2, #16]
   190bc:	ldr	r2, [r2]
   190c0:	str	r3, [fp, #36]	; 0x24
   190c4:	str	r1, [fp, #28]
   190c8:	str	r3, [fp, #80]	; 0x50
   190cc:	str	r2, [fp, #4]
   190d0:	ldrb	r2, [r3]
   190d4:	strb	r2, [fp, #24]
   190d8:	b	18e64 <pclose@plt+0x7d70>
   190dc:	mov	r0, fp
   190e0:	bl	18730 <pclose@plt+0x763c>
   190e4:	mov	r2, fp
   190e8:	mov	r1, #16384	; 0x4000
   190ec:	ldr	r0, [fp, #4]
   190f0:	ldr	r5, [fp, #12]
   190f4:	ldr	r4, [fp, #20]
   190f8:	bl	18528 <pclose@plt+0x7434>
   190fc:	ldr	r2, [fp, #12]
   19100:	ldr	r3, [fp, #20]
   19104:	str	r0, [r4, r5, lsl #2]
   19108:	ldr	r2, [r3, r2, lsl #2]
   1910c:	b	190b4 <pclose@plt+0x7fc0>
   19110:	ldr	r3, [pc, #3280]	; 19de8 <pclose@plt+0x8cf4>
   19114:	ldr	r3, [ip, r3]
   19118:	ldr	r3, [r3]
   1911c:	str	r3, [fp, #8]
   19120:	ldr	r3, [fp, #20]
   19124:	cmp	r3, #0
   19128:	bne	190a4 <pclose@plt+0x7fb0>
   1912c:	b	190dc <pclose@plt+0x7fe8>
   19130:	ldr	r3, [pc, #3252]	; 19dec <pclose@plt+0x8cf8>
   19134:	ldr	r3, [ip, r3]
   19138:	ldr	r3, [r3]
   1913c:	str	r3, [r1, #4]
   19140:	ldr	r3, [fp, #8]
   19144:	cmp	r3, #0
   19148:	bne	19098 <pclose@plt+0x7fa4>
   1914c:	b	19110 <pclose@plt+0x801c>
   19150:	ldr	r3, [sp, #20]
   19154:	ldr	r3, [r3, #28]
   19158:	cmp	r3, #2
   1915c:	ble	1919c <pclose@plt+0x80a8>
   19160:	ldr	r1, [pc, #3208]	; 19df0 <pclose@plt+0x8cfc>
   19164:	mov	r2, #5
   19168:	add	r1, pc, r1
   1916c:	bl	10e84 <dcgettext@plt>
   19170:	ldr	r2, [pc, #3196]	; 19df4 <pclose@plt+0x8d00>
   19174:	mov	r3, #249	; 0xf9
   19178:	add	r2, pc, r2
   1917c:	sub	r2, r2, #1600	; 0x640
   19180:	str	r2, [sp]
   19184:	ldr	r2, [pc, #3180]	; 19df8 <pclose@plt+0x8d04>
   19188:	add	r2, pc, r2
   1918c:	str	r0, [sp, #4]
   19190:	mov	r1, #3
   19194:	ldr	r0, [sp, #20]
   19198:	bl	12994 <pclose@plt+0x18a0>
   1919c:	ldr	r3, [pc, #3364]	; 19ec8 <pclose@plt+0x8dd4>
   191a0:	ldr	r2, [sp, #24]
   191a4:	ldr	r1, [sp, #68]	; 0x44
   191a8:	mov	r0, r3
   191ac:	ldr	r2, [r2]
   191b0:	cmp	r1, r2
   191b4:	bne	1a030 <pclose@plt+0x8f3c>
   191b8:	add	sp, sp, #76	; 0x4c
   191bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191c0:	mov	r1, r7
   191c4:	ldr	r0, [r7]
   191c8:	bl	18da8 <pclose@plt+0x7cb4>
   191cc:	ldr	r3, [r7, #20]
   191d0:	mov	fp, r9
   191d4:	cmp	r3, #0
   191d8:	mov	r9, r7
   191dc:	beq	191a0 <pclose@plt+0x80ac>
   191e0:	ldr	r2, [r7, #12]
   191e4:	ldr	r3, [r3, r2, lsl #2]
   191e8:	cmp	r3, #0
   191ec:	beq	191a0 <pclose@plt+0x80ac>
   191f0:	ldr	r3, [r9, #36]	; 0x24
   191f4:	ldrb	r2, [r9, #24]
   191f8:	b	18e98 <pclose@plt+0x7da4>
   191fc:	ldr	r3, [pc, #3064]	; 19dfc <pclose@plt+0x8d08>
   19200:	b	191a0 <pclose@plt+0x80ac>
   19204:	mov	r3, #288	; 0x120
   19208:	b	191a0 <pclose@plt+0x80ac>
   1920c:	ldr	r3, [pc, #3052]	; 19e00 <pclose@plt+0x8d0c>
   19210:	b	191a0 <pclose@plt+0x80ac>
   19214:	ldr	r3, [pc, #3048]	; 19e04 <pclose@plt+0x8d10>
   19218:	b	191a0 <pclose@plt+0x80ac>
   1921c:	ldr	r3, [pc, #3044]	; 19e08 <pclose@plt+0x8d14>
   19220:	b	191a0 <pclose@plt+0x80ac>
   19224:	ldr	r3, [pc, #3040]	; 19e0c <pclose@plt+0x8d18>
   19228:	b	191a0 <pclose@plt+0x80ac>
   1922c:	ldr	r3, [pc, #3036]	; 19e10 <pclose@plt+0x8d1c>
   19230:	b	191a0 <pclose@plt+0x80ac>
   19234:	ldr	r3, [pc, #3032]	; 19e14 <pclose@plt+0x8d20>
   19238:	b	191a0 <pclose@plt+0x80ac>
   1923c:	mov	r3, #272	; 0x110
   19240:	b	191a0 <pclose@plt+0x80ac>
   19244:	ldr	r3, [pc, #3020]	; 19e18 <pclose@plt+0x8d24>
   19248:	b	191a0 <pclose@plt+0x80ac>
   1924c:	ldr	r3, [pc, #3016]	; 19e1c <pclose@plt+0x8d28>
   19250:	b	191a0 <pclose@plt+0x80ac>
   19254:	ldr	r3, [pc, #3012]	; 19e20 <pclose@plt+0x8d2c>
   19258:	b	191a0 <pclose@plt+0x80ac>
   1925c:	mov	r3, #268	; 0x10c
   19260:	b	191a0 <pclose@plt+0x80ac>
   19264:	ldr	r3, [pc, #3000]	; 19e24 <pclose@plt+0x8d30>
   19268:	b	191a0 <pclose@plt+0x80ac>
   1926c:	ldr	r3, [pc, #2996]	; 19e28 <pclose@plt+0x8d34>
   19270:	b	191a0 <pclose@plt+0x80ac>
   19274:	ldr	r3, [pc, #2992]	; 19e2c <pclose@plt+0x8d38>
   19278:	b	191a0 <pclose@plt+0x80ac>
   1927c:	ldr	r2, [r7, #92]	; 0x5c
   19280:	mov	fp, r9
   19284:	mov	r9, r7
   19288:	ldr	r3, [r2]
   1928c:	cmp	r3, #512	; 0x200
   19290:	beq	19f18 <pclose@plt+0x8e24>
   19294:	add	r0, r3, #1
   19298:	mov	r1, #92	; 0x5c
   1929c:	str	r0, [r2], r3
   192a0:	ldr	r3, [r7, #36]	; 0x24
   192a4:	strb	r1, [r2, #4]
   192a8:	b	191f4 <pclose@plt+0x8100>
   192ac:	ldr	r2, [r7, #92]	; 0x5c
   192b0:	mov	fp, r9
   192b4:	mov	r9, r7
   192b8:	ldr	r3, [r2]
   192bc:	cmp	r3, #512	; 0x200
   192c0:	beq	1a120 <pclose@plt+0x902c>
   192c4:	add	r0, r3, #1
   192c8:	mov	r1, #34	; 0x22
   192cc:	str	r0, [r2], r3
   192d0:	ldr	r3, [r7, #36]	; 0x24
   192d4:	strb	r1, [r2, #4]
   192d8:	b	191f4 <pclose@plt+0x8100>
   192dc:	ldr	r3, [pc, #2892]	; 19e30 <pclose@plt+0x8d3c>
   192e0:	b	191a0 <pclose@plt+0x80ac>
   192e4:	ldr	r3, [r7, #92]	; 0x5c
   192e8:	ldr	r0, [r7, #52]	; 0x34
   192ec:	mov	r2, #0
   192f0:	ldr	r1, [r3]
   192f4:	cmp	r0, r2
   192f8:	add	r3, r3, r1
   192fc:	mov	fp, r7
   19300:	strb	r2, [r3, #4]
   19304:	beq	1931c <pclose@plt+0x8228>
   19308:	mov	r0, fp
   1930c:	bl	182e0 <pclose@plt+0x71ec>
   19310:	ldr	r3, [fp, #52]	; 0x34
   19314:	cmp	r3, #0
   19318:	bne	19308 <pclose@plt+0x8214>
   1931c:	ldr	r3, [pc, #2832]	; 19e34 <pclose@plt+0x8d40>
   19320:	b	191a0 <pclose@plt+0x80ac>
   19324:	ldr	r5, [r7, #80]	; 0x50
   19328:	mov	fp, r9
   1932c:	mov	r0, r5
   19330:	bl	10fc8 <strlen@plt>
   19334:	ldr	r3, [r7, #92]	; 0x5c
   19338:	mov	r9, r7
   1933c:	mov	r4, r0
   19340:	ldr	r0, [r3]
   19344:	add	r2, r4, r0
   19348:	cmp	r2, #512	; 0x200
   1934c:	bcs	1a168 <pclose@plt+0x9074>
   19350:	add	r3, r3, #4
   19354:	add	r0, r3, r0
   19358:	mov	r1, r5
   1935c:	add	r2, r4, #1
   19360:	bl	10e6c <memcpy@plt>
   19364:	ldr	r1, [r7, #92]	; 0x5c
   19368:	ldr	r3, [r7, #36]	; 0x24
   1936c:	ldr	r2, [r1]
   19370:	add	r2, r2, r4
   19374:	str	r2, [r1]
   19378:	b	191f4 <pclose@plt+0x8100>
   1937c:	ldr	r2, [r7, #92]	; 0x5c
   19380:	mov	fp, r9
   19384:	mov	r9, r7
   19388:	ldr	r3, [r2]
   1938c:	cmp	r3, #512	; 0x200
   19390:	beq	19d80 <pclose@plt+0x8c8c>
   19394:	add	r0, r3, #1
   19398:	mov	r1, #10
   1939c:	str	r0, [r2], r3
   193a0:	ldr	r3, [r7, #36]	; 0x24
   193a4:	strb	r1, [r2, #4]
   193a8:	b	191f4 <pclose@plt+0x8100>
   193ac:	mov	r1, r7
   193b0:	mov	r0, #1
   193b4:	bl	18c14 <pclose@plt+0x7b20>
   193b8:	mov	r3, #280	; 0x118
   193bc:	b	191a0 <pclose@plt+0x80ac>
   193c0:	ldr	r3, [r7, #80]	; 0x50
   193c4:	ldr	r2, [r7, #92]	; 0x5c
   193c8:	mov	r1, #0
   193cc:	ldrb	r0, [r3, #2]
   193d0:	ldr	r3, [pc, #2656]	; 19e38 <pclose@plt+0x8d44>
   193d4:	strd	r0, [r2]
   193d8:	b	191a0 <pclose@plt+0x80ac>
   193dc:	ldr	r0, [r7, #80]	; 0x50
   193e0:	mov	r2, #8
   193e4:	mov	r1, #0
   193e8:	add	r0, r0, #2
   193ec:	bl	10e30 <strtol@plt>
   193f0:	ldr	r2, [r7, #92]	; 0x5c
   193f4:	ldr	r3, [pc, #2620]	; 19e38 <pclose@plt+0x8d44>
   193f8:	asr	r1, r0, #31
   193fc:	strd	r0, [r2]
   19400:	b	191a0 <pclose@plt+0x80ac>
   19404:	ldr	r3, [pc, #2608]	; 19e3c <pclose@plt+0x8d48>
   19408:	b	191a0 <pclose@plt+0x80ac>
   1940c:	ldrb	r2, [r7, #24]
   19410:	ldr	r3, [r7, #80]	; 0x50
   19414:	strb	r2, [r6]
   19418:	ldr	ip, [r7, #12]
   1941c:	ldr	r0, [r7, #20]
   19420:	sub	r3, r6, r3
   19424:	sub	r3, r3, #1
   19428:	ldr	r1, [r0, ip, lsl #2]
   1942c:	str	r3, [sp, #44]	; 0x2c
   19430:	ldr	r5, [r7, #36]	; 0x24
   19434:	ldr	r3, [r1, #44]	; 0x2c
   19438:	cmp	r3, #0
   1943c:	ldreq	r3, [r7, #4]
   19440:	ldreq	r2, [r1, #16]
   19444:	ldrne	r2, [r7, #28]
   19448:	streq	r2, [r7, #28]
   1944c:	streq	r3, [r1]
   19450:	moveq	r3, #1
   19454:	streq	r3, [r1, #44]	; 0x2c
   19458:	ldr	r3, [r1, #4]
   1945c:	str	r3, [sp, #40]	; 0x28
   19460:	add	r3, r3, r2
   19464:	mov	lr, r3
   19468:	str	r3, [sp, #36]	; 0x24
   1946c:	ldr	r3, [r7, #80]	; 0x50
   19470:	cmp	r5, lr
   19474:	str	r3, [sp, #48]	; 0x30
   19478:	bls	1a060 <pclose@plt+0x8f6c>
   1947c:	ldr	lr, [sp, #40]	; 0x28
   19480:	add	r2, r2, #1
   19484:	add	r2, lr, r2
   19488:	cmp	r5, r2
   1948c:	bhi	1a054 <pclose@plt+0x8f60>
   19490:	ldr	r2, [r1, #40]	; 0x28
   19494:	sub	r1, r5, r3
   19498:	cmp	r2, #0
   1949c:	str	r1, [sp, #52]	; 0x34
   194a0:	bne	1999c <pclose@plt+0x88a8>
   194a4:	cmp	r1, #1
   194a8:	bne	19bf8 <pclose@plt+0x8b04>
   194ac:	ldr	r2, [r7, #44]	; 0x2c
   194b0:	str	r3, [r7, #36]	; 0x24
   194b4:	sub	r3, r2, #1
   194b8:	mov	r2, #0
   194bc:	add	r3, r3, r3, lsr #31
   194c0:	str	r2, [r7, #48]	; 0x30
   194c4:	asr	r3, r3, #1
   194c8:	add	r3, r3, #50	; 0x32
   194cc:	b	18f88 <pclose@plt+0x7e94>
   194d0:	ldr	r3, [r7, #92]	; 0x5c
   194d4:	mov	r2, #0
   194d8:	mov	r1, r7
   194dc:	strb	r2, [r3, #4]
   194e0:	str	r2, [r3]
   194e4:	mov	r0, #2
   194e8:	mov	fp, r9
   194ec:	bl	18c14 <pclose@plt+0x7b20>
   194f0:	mov	r9, r7
   194f4:	ldr	r3, [r7, #36]	; 0x24
   194f8:	b	191f4 <pclose@plt+0x8100>
   194fc:	ldr	r3, [r7, #80]	; 0x50
   19500:	ldr	r2, [r7, #92]	; 0x5c
   19504:	mov	r1, #0
   19508:	ldrb	r0, [r3, #1]
   1950c:	ldr	r3, [pc, #2340]	; 19e38 <pclose@plt+0x8d44>
   19510:	strd	r0, [r2]
   19514:	b	191a0 <pclose@plt+0x80ac>
   19518:	ldr	r3, [r7, #92]	; 0x5c
   1951c:	mov	fp, r9
   19520:	mov	r9, r7
   19524:	ldr	r3, [r3]
   19528:	cmp	r3, #512	; 0x200
   1952c:	beq	1a1b0 <pclose@plt+0x90bc>
   19530:	ldr	r0, [r7, #80]	; 0x50
   19534:	mov	r2, #8
   19538:	mov	r1, #0
   1953c:	add	r0, r0, #1
   19540:	bl	10e30 <strtol@plt>
   19544:	ldr	r1, [r7, #92]	; 0x5c
   19548:	ldr	r3, [r7, #36]	; 0x24
   1954c:	mov	r2, r1
   19550:	ldr	ip, [r1]
   19554:	add	r1, ip, #1
   19558:	str	r1, [r2], ip
   1955c:	strb	r0, [r2, #4]
   19560:	b	191f4 <pclose@plt+0x8100>
   19564:	ldr	r4, [r7, #80]	; 0x50
   19568:	mov	fp, r9
   1956c:	mov	r0, r4
   19570:	bl	10fc8 <strlen@plt>
   19574:	mov	r9, r7
   19578:	sub	r1, r0, #2
   1957c:	add	r0, r4, #1
   19580:	bl	10e60 <strndup@plt>
   19584:	ldr	r3, [r7]
   19588:	str	r3, [sp, #20]
   1958c:	ldr	r3, [r3, #28]
   19590:	subs	r4, r0, #0
   19594:	beq	19f60 <pclose@plt+0x8e6c>
   19598:	cmp	r3, #5
   1959c:	bgt	19d2c <pclose@plt+0x8c38>
   195a0:	mov	r1, #1
   195a4:	ldr	r0, [pc, #2196]	; 19e40 <pclose@plt+0x8d4c>
   195a8:	bl	10e18 <calloc@plt>
   195ac:	subs	r6, r0, #0
   195b0:	beq	19150 <pclose@plt+0x805c>
   195b4:	ldrb	r3, [r4]
   195b8:	cmp	r3, #0
   195bc:	beq	19650 <pclose@plt+0x855c>
   195c0:	cmp	r3, #47	; 0x2f
   195c4:	beq	19fac <pclose@plt+0x8eb8>
   195c8:	ldr	r0, [pc, #2164]	; 19e44 <pclose@plt+0x8d50>
   195cc:	add	r0, pc, r0
   195d0:	bl	10f44 <getenv@plt>
   195d4:	subs	r3, r0, #0
   195d8:	beq	19938 <pclose@plt+0x8844>
   195dc:	ldr	r1, [pc, #2148]	; 19e48 <pclose@plt+0x8d54>
   195e0:	mov	r2, #0
   195e4:	add	r1, pc, r1
   195e8:	str	r1, [sp, #28]
   195ec:	str	r2, [sp, #60]	; 0x3c
   195f0:	str	r2, [sp, #64]	; 0x40
   195f4:	mov	r0, r3
   195f8:	mov	r1, #58	; 0x3a
   195fc:	str	r3, [sp, #32]
   19600:	bl	10fd4 <strchr@plt>
   19604:	ldr	r3, [sp, #32]
   19608:	subs	r5, r0, #0
   1960c:	movne	r2, #0
   19610:	ldrbne	r7, [r5]
   19614:	strbne	r2, [r5]
   19618:	str	r3, [sp, #60]	; 0x3c
   1961c:	ldrb	r3, [r3]
   19620:	moveq	r7, r5
   19624:	cmp	r3, #0
   19628:	beq	19924 <pclose@plt+0x8830>
   1962c:	mov	r3, r6
   19630:	ldr	r2, [sp, #28]
   19634:	add	r1, sp, #60	; 0x3c
   19638:	mov	r0, r4
   1963c:	bl	125cc <pclose@plt+0x14d8>
   19640:	cmp	r0, #0
   19644:	ble	19950 <pclose@plt+0x885c>
   19648:	cmp	r5, #0
   1964c:	bne	19f9c <pclose@plt+0x8ea8>
   19650:	ldr	r3, [sp, #20]
   19654:	ldr	r3, [r3, #28]
   19658:	cmp	r3, #2
   1965c:	bgt	1a1f8 <pclose@plt+0x9104>
   19660:	mov	r0, r4
   19664:	bl	10e48 <free@plt>
   19668:	ldr	r3, [pc, #2136]	; 19ec8 <pclose@plt+0x8dd4>
   1966c:	b	191a0 <pclose@plt+0x80ac>
   19670:	mov	r3, #276	; 0x114
   19674:	b	191a0 <pclose@plt+0x80ac>
   19678:	ldr	r4, [r7]
   1967c:	ldr	r3, [r4, #28]
   19680:	cmp	r3, #2
   19684:	ble	1919c <pclose@plt+0x80a8>
   19688:	ldr	r1, [pc, #1980]	; 19e4c <pclose@plt+0x8d58>
   1968c:	mov	r2, #5
   19690:	add	r1, pc, r1
   19694:	mov	r0, #0
   19698:	bl	10e84 <dcgettext@plt>
   1969c:	ldr	r2, [pc, #1964]	; 19e50 <pclose@plt+0x8d5c>
   196a0:	mov	r3, #328	; 0x148
   196a4:	add	r2, pc, r2
   196a8:	sub	r2, r2, #1600	; 0x640
   196ac:	sub	r2, r2, #8
   196b0:	str	r2, [sp]
   196b4:	ldr	r2, [pc, #1944]	; 19e54 <pclose@plt+0x8d60>
   196b8:	add	r2, pc, r2
   196bc:	str	r0, [sp, #4]
   196c0:	mov	r1, #3
   196c4:	mov	r0, r4
   196c8:	bl	12994 <pclose@plt+0x18a0>
   196cc:	ldr	r3, [pc, #2036]	; 19ec8 <pclose@plt+0x8dd4>
   196d0:	b	191a0 <pclose@plt+0x80ac>
   196d4:	ldrb	r3, [r7, #24]
   196d8:	strb	r3, [r6]
   196dc:	ldr	r6, [r7, #68]	; 0x44
   196e0:	ldr	r0, [r7, #64]	; 0x40
   196e4:	b	18f5c <pclose@plt+0x7e68>
   196e8:	ldr	r3, [pc, #1896]	; 19e58 <pclose@plt+0x8d64>
   196ec:	b	191a0 <pclose@plt+0x80ac>
   196f0:	mov	r1, r7
   196f4:	mov	r0, #3
   196f8:	mov	fp, r9
   196fc:	bl	18c14 <pclose@plt+0x7b20>
   19700:	mov	r9, r7
   19704:	ldr	r3, [r7, #36]	; 0x24
   19708:	b	191f4 <pclose@plt+0x8100>
   1970c:	mov	fp, r9
   19710:	ldrb	r2, [r7, #24]
   19714:	mov	r9, r7
   19718:	ldr	r3, [r7, #36]	; 0x24
   1971c:	b	18e98 <pclose@plt+0x7da4>
   19720:	mov	r0, r7
   19724:	bl	1840c <pclose@plt+0x7318>
   19728:	mov	r1, r7
   1972c:	mov	fp, r7
   19730:	add	r0, r0, #1
   19734:	bl	18484 <pclose@plt+0x7390>
   19738:	ldr	r3, [r7, #52]	; 0x34
   1973c:	cmp	r3, #0
   19740:	beq	19758 <pclose@plt+0x8664>
   19744:	mov	r0, fp
   19748:	bl	182e0 <pclose@plt+0x71ec>
   1974c:	ldr	r3, [fp, #52]	; 0x34
   19750:	cmp	r3, #0
   19754:	bne	19744 <pclose@plt+0x8650>
   19758:	ldr	r3, [pc, #1788]	; 19e5c <pclose@plt+0x8d68>
   1975c:	b	191a0 <pclose@plt+0x80ac>
   19760:	mov	r0, r7
   19764:	bl	1840c <pclose@plt+0x7318>
   19768:	mov	r1, r7
   1976c:	mov	fp, r9
   19770:	mov	r9, r7
   19774:	add	r0, r0, #1
   19778:	bl	18484 <pclose@plt+0x7390>
   1977c:	ldr	r3, [r7, #36]	; 0x24
   19780:	b	191f4 <pclose@plt+0x8100>
   19784:	ldr	r3, [pc, #1748]	; 19e60 <pclose@plt+0x8d6c>
   19788:	b	191a0 <pclose@plt+0x80ac>
   1978c:	ldr	r3, [pc, #1744]	; 19e64 <pclose@plt+0x8d70>
   19790:	b	191a0 <pclose@plt+0x80ac>
   19794:	ldr	r3, [pc, #1740]	; 19e68 <pclose@plt+0x8d74>
   19798:	b	191a0 <pclose@plt+0x80ac>
   1979c:	mov	r2, #0
   197a0:	mov	r1, r2
   197a4:	ldr	r0, [r7, #80]	; 0x50
   197a8:	bl	10e30 <strtol@plt>
   197ac:	ldr	r2, [r7, #92]	; 0x5c
   197b0:	ldr	r3, [pc, #1716]	; 19e6c <pclose@plt+0x8d78>
   197b4:	asr	r1, r0, #31
   197b8:	strd	r0, [r2]
   197bc:	b	191a0 <pclose@plt+0x80ac>
   197c0:	ldr	r0, [r7, #80]	; 0x50
   197c4:	mov	r2, #16
   197c8:	mov	r1, #0
   197cc:	add	r0, r0, #1
   197d0:	bl	10e30 <strtol@plt>
   197d4:	ldr	r3, [r7, #92]	; 0x5c
   197d8:	asr	r1, r0, #31
   197dc:	cmp	r0, #61440	; 0xf000
   197e0:	sbcs	r2, r1, #0
   197e4:	strd	r0, [r3]
   197e8:	movlt	r3, #284	; 0x11c
   197ec:	blt	191a0 <pclose@plt+0x80ac>
   197f0:	ldr	r4, [r7]
   197f4:	ldr	r3, [r4, #28]
   197f8:	cmp	r3, #2
   197fc:	ble	1919c <pclose@plt+0x80a8>
   19800:	ldr	r1, [pc, #1640]	; 19e70 <pclose@plt+0x8d7c>
   19804:	mov	r2, #5
   19808:	add	r1, pc, r1
   1980c:	mov	r0, #0
   19810:	bl	10e84 <dcgettext@plt>
   19814:	ldr	r3, [pc, #1624]	; 19e74 <pclose@plt+0x8d80>
   19818:	ldr	r2, [r7, #80]	; 0x50
   1981c:	add	r3, pc, r3
   19820:	str	r2, [sp, #8]
   19824:	sub	r3, r3, #1600	; 0x640
   19828:	ldr	r2, [pc, #1608]	; 19e78 <pclose@plt+0x8d84>
   1982c:	sub	r3, r3, #8
   19830:	str	r3, [sp]
   19834:	add	r2, pc, r2
   19838:	ldr	r3, [pc, #1596]	; 19e7c <pclose@plt+0x8d88>
   1983c:	mov	r1, #3
   19840:	str	r0, [sp, #4]
   19844:	mov	r0, r4
   19848:	bl	12994 <pclose@plt+0x18a0>
   1984c:	ldr	r3, [pc, #1652]	; 19ec8 <pclose@plt+0x8dd4>
   19850:	b	191a0 <pclose@plt+0x80ac>
   19854:	ldr	r1, [r7, #80]	; 0x50
   19858:	mvn	r2, #0
   1985c:	ldr	r0, [r7]
   19860:	bl	1a8b8 <pclose@plt+0x97c4>
   19864:	mvn	r5, #0
   19868:	ldr	r3, [r7, #92]	; 0x5c
   1986c:	mvn	r4, #0
   19870:	asr	r1, r0, #31
   19874:	cmp	r1, r5
   19878:	cmpeq	r0, r4
   1987c:	strd	r0, [r3]
   19880:	movne	r3, #260	; 0x104
   19884:	bne	191a0 <pclose@plt+0x80ac>
   19888:	b	1919c <pclose@plt+0x80a8>
   1988c:	mov	r1, r7
   19890:	mov	r0, #1
   19894:	bl	18c14 <pclose@plt+0x7b20>
   19898:	ldr	r3, [r7]
   1989c:	ldr	r0, [r3, #40]	; 0x28
   198a0:	bl	1b1e4 <pclose@plt+0xa0f0>
   198a4:	mov	r3, #264	; 0x108
   198a8:	b	191a0 <pclose@plt+0x80ac>
   198ac:	ldrb	r1, [r7, #24]
   198b0:	mov	r3, r6
   198b4:	ldr	r0, [sp, #20]
   198b8:	strb	r1, [r3], #-1
   198bc:	sub	r1, r3, r0
   198c0:	str	r3, [r7, #36]	; 0x24
   198c4:	str	r0, [r7, #80]	; 0x50
   198c8:	str	r1, [r7, #32]
   198cc:	ldrb	r1, [r6, #-1]
   198d0:	mov	r2, #0
   198d4:	mov	fp, r9
   198d8:	strb	r1, [r7, #24]
   198dc:	mov	r9, r7
   198e0:	strb	r2, [r6, #-1]
   198e4:	str	r3, [r7, #36]	; 0x24
   198e8:	b	191f4 <pclose@plt+0x8100>
   198ec:	mov	r1, r7
   198f0:	mov	r0, #1
   198f4:	bl	18c14 <pclose@plt+0x7b20>
   198f8:	ldr	r3, [pc, #1408]	; 19e80 <pclose@plt+0x8d8c>
   198fc:	b	191a0 <pclose@plt+0x80ac>
   19900:	ldr	r3, [r7, #8]
   19904:	mov	r2, #1
   19908:	ldr	r1, [r7, #32]
   1990c:	ldr	r0, [r7, #80]	; 0x50
   19910:	mov	fp, r9
   19914:	bl	10efc <fwrite@plt>
   19918:	mov	r9, r7
   1991c:	ldr	r3, [r7, #36]	; 0x24
   19920:	b	191f4 <pclose@plt+0x8100>
   19924:	mov	r2, r6
   19928:	mov	r1, r4
   1992c:	ldr	r0, [sp, #20]
   19930:	bl	180ac <pclose@plt+0x6fb8>
   19934:	b	19640 <pclose@plt+0x854c>
   19938:	mov	r2, r6
   1993c:	mov	r1, r4
   19940:	ldr	r0, [sp, #20]
   19944:	bl	180ac <pclose@plt+0x6fb8>
   19948:	cmp	r0, #0
   1994c:	bgt	19650 <pclose@plt+0x855c>
   19950:	cmn	r0, #1
   19954:	mov	r0, r4
   19958:	beq	1a024 <pclose@plt+0x8f30>
   1995c:	bl	10e48 <free@plt>
   19960:	mov	r2, r9
   19964:	mov	r1, r6
   19968:	ldr	r0, [sp, #20]
   1996c:	bl	18b3c <pclose@plt+0x7a48>
   19970:	cmn	r0, #1
   19974:	beq	1919c <pclose@plt+0x80a8>
   19978:	ldr	r3, [r9, #52]	; 0x34
   1997c:	cmp	r3, #0
   19980:	beq	191f0 <pclose@plt+0x80fc>
   19984:	mov	r0, r9
   19988:	bl	182e0 <pclose@plt+0x71ec>
   1998c:	ldr	r3, [r9, #52]	; 0x34
   19990:	cmp	r3, #0
   19994:	bne	19984 <pclose@plt+0x8890>
   19998:	b	191f0 <pclose@plt+0x80fc>
   1999c:	ldr	r3, [sp, #52]	; 0x34
   199a0:	sub	r2, r3, #1
   199a4:	cmp	r2, #0
   199a8:	str	r2, [sp, #36]	; 0x24
   199ac:	ble	199d8 <pclose@plt+0x88e4>
   199b0:	ldr	r3, [sp, #40]	; 0x28
   199b4:	ldr	lr, [sp, #48]	; 0x30
   199b8:	sub	r3, r3, #1
   199bc:	add	r2, lr, r2
   199c0:	ldrb	r1, [lr], #1
   199c4:	cmp	lr, r2
   199c8:	strb	r1, [r3, #1]!
   199cc:	bne	199c0 <pclose@plt+0x88cc>
   199d0:	ldr	r0, [r7, #20]
   199d4:	ldr	ip, [r7, #12]
   199d8:	ldr	r5, [r0, ip, lsl #2]
   199dc:	mov	r1, r0
   199e0:	ldr	r3, [r5, #44]	; 0x2c
   199e4:	cmp	r3, #2
   199e8:	moveq	r3, #0
   199ec:	streq	r3, [r7, #28]
   199f0:	streq	r3, [r5, #16]
   199f4:	beq	19b60 <pclose@plt+0x8a6c>
   199f8:	ldr	r2, [r5, #12]
   199fc:	ldr	r3, [sp, #36]	; 0x24
   19a00:	sub	r2, r2, r3
   19a04:	sub	r2, r2, #1
   19a08:	cmp	r2, #0
   19a0c:	bgt	19ab4 <pclose@plt+0x89c0>
   19a10:	str	fp, [sp, #40]	; 0x28
   19a14:	ldr	r3, [r7, #36]	; 0x24
   19a18:	mov	fp, r4
   19a1c:	b	19a88 <pclose@plt+0x8994>
   19a20:	ldr	r1, [r5, #12]
   19a24:	cmp	r1, #0
   19a28:	lslgt	r1, r1, #1
   19a2c:	strgt	r1, [r5, #12]
   19a30:	bgt	19a44 <pclose@plt+0x8950>
   19a34:	add	r3, r1, #7
   19a38:	movge	r3, r1
   19a3c:	add	r1, r1, r3, asr #3
   19a40:	str	r1, [r5, #12]
   19a44:	add	r1, r1, #2
   19a48:	mov	r2, r7
   19a4c:	bl	1872c <pclose@plt+0x7638>
   19a50:	cmp	r0, #0
   19a54:	str	r0, [r5, #4]
   19a58:	beq	19aa0 <pclose@plt+0x89ac>
   19a5c:	ldr	r2, [r7, #12]
   19a60:	ldr	r1, [r7, #20]
   19a64:	add	r3, r0, r4
   19a68:	ldr	r0, [sp, #36]	; 0x24
   19a6c:	ldr	r5, [r1, r2, lsl #2]
   19a70:	str	r3, [r7, #36]	; 0x24
   19a74:	ldr	r2, [r5, #12]
   19a78:	sub	r2, r2, r0
   19a7c:	sub	r2, r2, #1
   19a80:	cmp	r2, #0
   19a84:	bgt	19aac <pclose@plt+0x89b8>
   19a88:	ldr	r2, [r5, #20]
   19a8c:	ldr	r0, [r5, #4]
   19a90:	cmp	r2, #0
   19a94:	sub	r4, r3, r0
   19a98:	bne	19a20 <pclose@plt+0x892c>
   19a9c:	str	r2, [r5, #4]
   19aa0:	ldr	r0, [pc, #988]	; 19e84 <pclose@plt+0x8d90>
   19aa4:	add	r0, pc, r0
   19aa8:	bl	1829c <pclose@plt+0x71a8>
   19aac:	mov	r4, fp
   19ab0:	ldr	fp, [sp, #40]	; 0x28
   19ab4:	ldr	r3, [r5, #24]
   19ab8:	cmp	r2, #8192	; 0x2000
   19abc:	movge	r2, #8192	; 0x2000
   19ac0:	cmp	r3, #0
   19ac4:	str	r3, [sp, #40]	; 0x28
   19ac8:	str	r2, [sp, #48]	; 0x30
   19acc:	beq	19c94 <pclose@plt+0x8ba0>
   19ad0:	ldr	r3, [sp, #52]	; 0x34
   19ad4:	mov	r2, #0
   19ad8:	str	fp, [sp, #40]	; 0x28
   19adc:	sub	r5, r3, #2
   19ae0:	mov	fp, r4
   19ae4:	mov	r4, r2
   19ae8:	ldr	r0, [r7, #4]
   19aec:	bl	10e78 <_IO_getc@plt>
   19af0:	cmn	r0, #1
   19af4:	beq	19fc8 <pclose@plt+0x8ed4>
   19af8:	ldr	r3, [r7, #20]
   19afc:	ldr	r1, [r7, #12]
   19b00:	add	r4, r4, #1
   19b04:	cmp	r0, #10
   19b08:	ldr	r1, [r3, r1, lsl #2]
   19b0c:	add	r3, r5, r4
   19b10:	ldr	r1, [r1, #4]
   19b14:	add	ip, r1, r3
   19b18:	beq	1a040 <pclose@plt+0x8f4c>
   19b1c:	ldr	r2, [sp, #48]	; 0x30
   19b20:	strb	r0, [r1, r3]
   19b24:	cmp	r2, r4
   19b28:	bgt	19ae8 <pclose@plt+0x89f4>
   19b2c:	mov	r2, r4
   19b30:	mov	r4, fp
   19b34:	ldr	fp, [sp, #40]	; 0x28
   19b38:	b	19fe8 <pclose@plt+0x8ef4>
   19b3c:	ldr	r2, [r7, #28]
   19b40:	ldr	ip, [r7, #12]
   19b44:	ldr	r0, [r7, #20]
   19b48:	cmp	r2, #0
   19b4c:	movne	r1, #0
   19b50:	ldr	r3, [r0, ip, lsl #2]
   19b54:	strne	r1, [sp, #40]	; 0x28
   19b58:	str	r2, [r3, #16]
   19b5c:	bne	19b80 <pclose@plt+0x8a8c>
   19b60:	ldr	r3, [sp, #36]	; 0x24
   19b64:	cmp	r3, #0
   19b68:	beq	19ffc <pclose@plt+0x8f08>
   19b6c:	ldr	r3, [r0, ip, lsl #2]
   19b70:	mov	r1, #2
   19b74:	ldr	r2, [r7, #28]
   19b78:	str	r1, [sp, #40]	; 0x28
   19b7c:	str	r1, [r3, #44]	; 0x2c
   19b80:	ldr	r1, [sp, #36]	; 0x24
   19b84:	ldr	r0, [r3, #12]
   19b88:	add	r1, r1, r2
   19b8c:	cmp	r1, r0
   19b90:	ldr	r0, [r3, #4]
   19b94:	bgt	19c48 <pclose@plt+0x8b54>
   19b98:	mov	r2, #0
   19b9c:	str	r1, [r7, #28]
   19ba0:	strb	r2, [r0, r1]
   19ba4:	ldr	r0, [r7, #12]
   19ba8:	ldr	r3, [r7, #20]
   19bac:	ldr	r1, [sp, #40]	; 0x28
   19bb0:	ldr	r3, [r3, r0, lsl #2]
   19bb4:	cmp	r1, #1
   19bb8:	ldr	r1, [r7, #28]
   19bbc:	ldr	r3, [r3, #4]
   19bc0:	add	r3, r3, r1
   19bc4:	strb	r2, [r3, #1]
   19bc8:	ldr	r2, [r7, #12]
   19bcc:	ldr	r3, [r7, #20]
   19bd0:	ldr	r3, [r3, r2, lsl #2]
   19bd4:	ldr	r3, [r3, #4]
   19bd8:	str	r3, [r7, #80]	; 0x50
   19bdc:	beq	194ac <pclose@plt+0x83b8>
   19be0:	ldr	r2, [sp, #40]	; 0x28
   19be4:	cmp	r2, #2
   19be8:	bne	19c18 <pclose@plt+0x8b24>
   19bec:	ldr	r1, [r7, #28]
   19bf0:	add	r3, r3, r1
   19bf4:	str	r3, [sp, #36]	; 0x24
   19bf8:	ldr	r3, [sp, #36]	; 0x24
   19bfc:	mov	r0, r7
   19c00:	str	r3, [r7, #36]	; 0x24
   19c04:	bl	17d80 <pclose@plt+0x6c8c>
   19c08:	ldr	r3, [r7, #80]	; 0x50
   19c0c:	ldr	r6, [r7, #36]	; 0x24
   19c10:	str	r3, [sp, #20]
   19c14:	b	18f5c <pclose@plt+0x7e68>
   19c18:	ldr	r2, [sp, #44]	; 0x2c
   19c1c:	mov	r0, r7
   19c20:	add	r3, r3, r2
   19c24:	str	r3, [r7, #36]	; 0x24
   19c28:	mov	fp, r9
   19c2c:	ldr	r9, [sp, #28]
   19c30:	bl	17d80 <pclose@plt+0x6c8c>
   19c34:	ldr	r3, [r7, #36]	; 0x24
   19c38:	ldr	r2, [r7, #80]	; 0x50
   19c3c:	str	r2, [sp, #20]
   19c40:	ldrb	r2, [r3]
   19c44:	b	18eb8 <pclose@plt+0x7dc4>
   19c48:	add	r5, r1, r2, asr #1
   19c4c:	mov	r1, r5
   19c50:	mov	r2, r7
   19c54:	str	r3, [sp, #48]	; 0x30
   19c58:	bl	1872c <pclose@plt+0x7638>
   19c5c:	ldr	r1, [r7, #12]
   19c60:	ldr	r2, [r7, #20]
   19c64:	ldr	r3, [sp, #48]	; 0x30
   19c68:	ldr	r2, [r2, r1, lsl #2]
   19c6c:	str	r0, [r3, #4]
   19c70:	ldr	r0, [r2, #4]
   19c74:	cmp	r0, #0
   19c78:	beq	19ff0 <pclose@plt+0x8efc>
   19c7c:	ldr	r1, [r7, #28]
   19c80:	ldr	ip, [sp, #36]	; 0x24
   19c84:	sub	r3, r5, #2
   19c88:	add	r1, ip, r1
   19c8c:	str	r3, [r2, #12]
   19c90:	b	19b98 <pclose@plt+0x8aa4>
   19c94:	str	r1, [sp, #52]	; 0x34
   19c98:	bl	10fe0 <__errno_location@plt>
   19c9c:	ldr	r3, [sp, #40]	; 0x28
   19ca0:	ldr	r1, [sp, #52]	; 0x34
   19ca4:	mov	r5, r0
   19ca8:	str	r3, [r0]
   19cac:	b	19ce4 <pclose@plt+0x8bf0>
   19cb0:	str	r0, [sp, #52]	; 0x34
   19cb4:	ldr	r0, [r7, #4]
   19cb8:	bl	10e54 <ferror@plt>
   19cbc:	ldr	r2, [sp, #52]	; 0x34
   19cc0:	cmp	r0, #0
   19cc4:	beq	19b3c <pclose@plt+0x8a48>
   19cc8:	ldr	r3, [r5]
   19ccc:	cmp	r3, #4
   19cd0:	bne	19d74 <pclose@plt+0x8c80>
   19cd4:	str	r2, [r5]
   19cd8:	ldr	r0, [r7, #4]
   19cdc:	bl	11088 <clearerr@plt>
   19ce0:	ldr	r1, [r7, #20]
   19ce4:	ldr	r0, [r7, #12]
   19ce8:	ldr	ip, [sp, #36]	; 0x24
   19cec:	ldr	r2, [sp, #48]	; 0x30
   19cf0:	ldr	r0, [r1, r0, lsl #2]
   19cf4:	ldr	r3, [r7, #4]
   19cf8:	mov	r1, #1
   19cfc:	ldr	r0, [r0, #4]
   19d00:	add	r0, r0, ip
   19d04:	bl	10f2c <fread@plt>
   19d08:	cmp	r0, #0
   19d0c:	mov	r2, r0
   19d10:	str	r0, [r7, #28]
   19d14:	beq	19cb0 <pclose@plt+0x8bbc>
   19d18:	ldr	r1, [r7, #12]
   19d1c:	ldr	r3, [r7, #20]
   19d20:	ldr	r3, [r3, r1, lsl #2]
   19d24:	str	r0, [r3, #16]
   19d28:	b	19b80 <pclose@plt+0x8a8c>
   19d2c:	ldr	r1, [pc, #340]	; 19e88 <pclose@plt+0x8d94>
   19d30:	mov	r2, #5
   19d34:	add	r1, pc, r1
   19d38:	mov	r0, #0
   19d3c:	bl	10e84 <dcgettext@plt>
   19d40:	ldr	r3, [pc, #324]	; 19e8c <pclose@plt+0x8d98>
   19d44:	ldr	r2, [pc, #324]	; 19e90 <pclose@plt+0x8d9c>
   19d48:	add	r3, pc, r3
   19d4c:	sub	r3, r3, #1600	; 0x640
   19d50:	str	r3, [sp]
   19d54:	str	r4, [sp, #8]
   19d58:	mov	r3, #245	; 0xf5
   19d5c:	add	r2, pc, r2
   19d60:	mov	r1, #6
   19d64:	str	r0, [sp, #4]
   19d68:	ldr	r0, [sp, #20]
   19d6c:	bl	12994 <pclose@plt+0x18a0>
   19d70:	b	195a0 <pclose@plt+0x84ac>
   19d74:	ldr	r0, [pc, #280]	; 19e94 <pclose@plt+0x8da0>
   19d78:	add	r0, pc, r0
   19d7c:	bl	1829c <pclose@plt+0x71a8>
   19d80:	ldr	r4, [r7]
   19d84:	ldr	r3, [r4, #28]
   19d88:	cmp	r3, #2
   19d8c:	ble	1919c <pclose@plt+0x80a8>
   19d90:	ldr	r1, [pc, #256]	; 19e98 <pclose@plt+0x8da4>
   19d94:	mov	r2, #5
   19d98:	add	r1, pc, r1
   19d9c:	mov	r0, #0
   19da0:	bl	10e84 <dcgettext@plt>
   19da4:	ldr	r2, [pc, #240]	; 19e9c <pclose@plt+0x8da8>
   19da8:	mov	r3, #440	; 0x1b8
   19dac:	add	r2, pc, r2
   19db0:	sub	r2, r2, #1600	; 0x640
   19db4:	sub	r2, r2, #8
   19db8:	str	r2, [sp]
   19dbc:	ldr	r2, [pc, #220]	; 19ea0 <pclose@plt+0x8dac>
   19dc0:	add	r2, pc, r2
   19dc4:	b	196bc <pclose@plt+0x85c8>
   19dc8:	andeq	r2, r2, ip, asr #3
   19dcc:	andeq	r0, r0, r8, lsl #2
   19dd0:	andeq	r4, r0, ip, lsl r8
   19dd4:	andeq	r6, r0, r0, lsl r8
   19dd8:	strdeq	r0, [r0], -r7
   19ddc:	andeq	r4, r0, r8, ror #15
   19de0:	andeq	r4, r0, ip, asr r7
   19de4:	andeq	r4, r0, r8, asr #14
   19de8:	andeq	r0, r0, r4, lsr #2
   19dec:	andeq	r0, r0, ip, lsl r1
   19df0:	andeq	r3, r0, r8, lsr #2
   19df4:	andeq	r6, r0, r8, lsl #10
   19df8:	andeq	r5, r0, r4, ror #29
   19dfc:	andeq	r0, r0, r1, lsr #2
   19e00:	andeq	r0, r0, pc, lsl r1
   19e04:	andeq	r0, r0, r7, lsl r1
   19e08:	andeq	r0, r0, lr, lsl r1
   19e0c:	andeq	r0, r0, sp, lsl r1
   19e10:	andeq	r0, r0, r2, lsl r1
   19e14:	andeq	r0, r0, r1, lsl r1
   19e18:	andeq	r0, r0, pc, lsl #2
   19e1c:	andeq	r0, r0, lr, lsl #2
   19e20:	andeq	r0, r0, sp, lsl #2
   19e24:	andeq	r0, r0, fp, lsl #2
   19e28:	andeq	r0, r0, sl, lsl #2
   19e2c:	andeq	r0, r0, r9, lsl #2
   19e30:	andeq	r0, r0, r6, lsl #2
   19e34:	andeq	r0, r0, r6, lsl r1
   19e38:	andeq	r0, r0, r9, lsl r1
   19e3c:	andeq	r0, r0, r2, lsr #2
   19e40:	andeq	r1, r0, r8
   19e44:	andeq	r5, r0, ip, asr #24
   19e48:	andeq	ip, r1, ip, lsl #23
   19e4c:			; <UNDEFINED> instruction: 0x00005bbc
   19e50:	ldrdeq	r5, [r0], -ip
   19e54:			; <UNDEFINED> instruction: 0x000059b4
   19e58:	andeq	r0, r0, r7, lsl #2
   19e5c:	andeq	r0, r0, r2, lsl #2
   19e60:	andeq	r0, r0, fp, lsl r1
   19e64:	andeq	r0, r0, r3, lsl r1
   19e68:	andeq	r0, r0, r5, lsl #2
   19e6c:	andeq	r0, r0, r3, lsl #2
   19e70:	andeq	r5, r0, r8, ror #20
   19e74:	andeq	r5, r0, r4, ror #28
   19e78:	andeq	r5, r0, r8, lsr r8
   19e7c:	andeq	r0, r0, lr, ror #2
   19e80:	andeq	r0, r0, r5, lsl r1
   19e84:	andeq	r5, r0, r4, lsr r8
   19e88:	ldrdeq	r5, [r0], -r4
   19e8c:	andeq	r5, r0, r8, lsr r9
   19e90:	andeq	r5, r0, r0, lsl r3
   19e94:	andeq	r5, r0, ip, lsl #11
   19e98:	strdeq	r5, [r0], -r8
   19e9c:	ldrdeq	r5, [r0], -r4
   19ea0:	andeq	r5, r0, ip, lsr #5
   19ea4:	andeq	r5, r0, r0, ror #6
   19ea8:	andeq	r5, r0, ip, lsr r7
   19eac:			; <UNDEFINED> instruction: 0x000001b1
   19eb0:	andeq	r5, r0, r4, lsl r1
   19eb4:	andeq	r2, r0, r0, lsr #6
   19eb8:	andeq	r5, r0, r0, lsl #14
   19ebc:	ldrdeq	r5, [r0], -r8
   19ec0:			; <UNDEFINED> instruction: 0x0001c1bc
   19ec4:	andeq	r5, r0, r0, lsr r3
   19ec8:	andeq	r0, r0, sl, lsl r1
   19ecc:	andeq	r5, r0, ip, lsl r3
   19ed0:	andeq	r5, r0, r8, asr #4
   19ed4:	andeq	r3, r0, ip, lsl #12
   19ed8:	andeq	r5, r0, ip, lsl #11
   19edc:	andeq	r5, r0, r8, asr r1
   19ee0:	andeq	r5, r0, r4, lsr r5
   19ee4:	andeq	r0, r0, sl, lsr #3
   19ee8:	andeq	r4, r0, ip, lsl #30
   19eec:	andeq	r5, r0, r0, lsl r1
   19ef0:	andeq	r5, r0, ip, ror #9
   19ef4:	andeq	r0, r0, r1, asr #3
   19ef8:	andeq	r4, r0, r4, asr #29
   19efc:	andeq	r5, r0, r8, asr #1
   19f00:	andeq	r5, r0, r4, lsr #9
   19f04:	andeq	r0, r0, r3, lsr #3
   19f08:	andeq	r4, r0, ip, ror lr
   19f0c:	andeq	r5, r0, r0, lsr r0
   19f10:	andeq	r5, r0, ip, ror #8
   19f14:	andeq	r4, r0, r4, asr #28
   19f18:	ldr	r4, [r7]
   19f1c:	ldr	r3, [r4, #28]
   19f20:	cmp	r3, #2
   19f24:	ble	1919c <pclose@plt+0x80a8>
   19f28:	ldr	r1, [pc, #-140]	; 19ea4 <pclose@plt+0x8db0>
   19f2c:	mov	r2, #5
   19f30:	add	r1, pc, r1
   19f34:	mov	r0, #0
   19f38:	bl	10e84 <dcgettext@plt>
   19f3c:	ldr	r2, [pc, #-156]	; 19ea8 <pclose@plt+0x8db4>
   19f40:	ldr	r3, [pc, #-156]	; 19eac <pclose@plt+0x8db8>
   19f44:	add	r2, pc, r2
   19f48:	sub	r2, r2, #1600	; 0x640
   19f4c:	sub	r2, r2, #8
   19f50:	str	r2, [sp]
   19f54:	ldr	r2, [pc, #-172]	; 19eb0 <pclose@plt+0x8dbc>
   19f58:	add	r2, pc, r2
   19f5c:	b	196bc <pclose@plt+0x85c8>
   19f60:	cmp	r3, #2
   19f64:	ble	1919c <pclose@plt+0x80a8>
   19f68:	ldr	r1, [pc, #-188]	; 19eb4 <pclose@plt+0x8dc0>
   19f6c:	mov	r2, #5
   19f70:	add	r1, pc, r1
   19f74:	bl	10e84 <dcgettext@plt>
   19f78:	ldr	r2, [pc, #-200]	; 19eb8 <pclose@plt+0x8dc4>
   19f7c:	mov	r3, #316	; 0x13c
   19f80:	add	r2, pc, r2
   19f84:	sub	r2, r2, #1600	; 0x640
   19f88:	sub	r2, r2, #8
   19f8c:	str	r2, [sp]
   19f90:	ldr	r2, [pc, #-220]	; 19ebc <pclose@plt+0x8dc8>
   19f94:	add	r2, pc, r2
   19f98:	b	1918c <pclose@plt+0x8098>
   19f9c:	adds	r3, r5, #1
   19fa0:	strb	r7, [r5]
   19fa4:	beq	19650 <pclose@plt+0x855c>
   19fa8:	b	195f4 <pclose@plt+0x8500>
   19fac:	ldr	r2, [pc, #-244]	; 19ec0 <pclose@plt+0x8dcc>
   19fb0:	mov	r3, r6
   19fb4:	add	r2, pc, r2
   19fb8:	add	r1, r2, #44	; 0x2c
   19fbc:	mov	r0, r4
   19fc0:	bl	125cc <pclose@plt+0x14d8>
   19fc4:	b	19948 <pclose@plt+0x8854>
   19fc8:	ldr	r0, [r7, #4]
   19fcc:	str	r4, [sp, #48]	; 0x30
   19fd0:	mov	r4, fp
   19fd4:	ldr	fp, [sp, #40]	; 0x28
   19fd8:	bl	10e54 <ferror@plt>
   19fdc:	ldr	r2, [sp, #48]	; 0x30
   19fe0:	cmp	r0, #0
   19fe4:	bne	19d74 <pclose@plt+0x8c80>
   19fe8:	str	r2, [r7, #28]
   19fec:	b	19b40 <pclose@plt+0x8a4c>
   19ff0:	ldr	r0, [pc, #-308]	; 19ec4 <pclose@plt+0x8dd0>
   19ff4:	add	r0, pc, r0
   19ff8:	bl	1829c <pclose@plt+0x71a8>
   19ffc:	mov	r1, r7
   1a000:	ldr	r0, [r7, #4]
   1a004:	bl	187d0 <pclose@plt+0x76dc>
   1a008:	ldr	r1, [r7, #12]
   1a00c:	ldr	r3, [r7, #20]
   1a010:	mov	r0, #1
   1a014:	ldr	r2, [r7, #28]
   1a018:	str	r0, [sp, #40]	; 0x28
   1a01c:	ldr	r3, [r3, r1, lsl #2]
   1a020:	b	19b80 <pclose@plt+0x8a8c>
   1a024:	bl	10e48 <free@plt>
   1a028:	ldr	r3, [pc, #-360]	; 19ec8 <pclose@plt+0x8dd4>
   1a02c:	b	191a0 <pclose@plt+0x80ac>
   1a030:	bl	10e9c <__stack_chk_fail@plt>
   1a034:	ldr	r0, [pc, #-368]	; 19ecc <pclose@plt+0x8dd8>
   1a038:	add	r0, pc, r0
   1a03c:	bl	1829c <pclose@plt+0x71a8>
   1a040:	mov	r2, r4
   1a044:	strb	r0, [ip]
   1a048:	mov	r4, fp
   1a04c:	ldr	fp, [sp, #40]	; 0x28
   1a050:	b	19fe8 <pclose@plt+0x8ef4>
   1a054:	ldr	r0, [pc, #-396]	; 19ed0 <pclose@plt+0x8ddc>
   1a058:	add	r0, pc, r0
   1a05c:	bl	1829c <pclose@plt+0x71a8>
   1a060:	ldr	r2, [sp, #44]	; 0x2c
   1a064:	mov	r0, r7
   1a068:	add	r3, r3, r2
   1a06c:	str	r3, [r7, #36]	; 0x24
   1a070:	bl	17d80 <pclose@plt+0x6c8c>
   1a074:	ldr	r3, [pc, #-424]	; 19ed4 <pclose@plt+0x8de0>
   1a078:	ldr	r2, [sp, #32]
   1a07c:	add	r3, pc, r3
   1a080:	add	r3, r3, #256	; 0x100
   1a084:	add	r2, r2, #3392	; 0xd40
   1a088:	add	lr, r2, #4
   1a08c:	ldr	r6, [r7, #36]	; 0x24
   1a090:	lsl	r1, r0, #1
   1a094:	ldrsh	r3, [r3, r1]
   1a098:	cmp	r3, #0
   1a09c:	ldrsh	r3, [fp, r1]
   1a0a0:	strne	r0, [r7, #64]	; 0x40
   1a0a4:	strne	r6, [r7, #68]	; 0x44
   1a0a8:	add	r3, r3, #1
   1a0ac:	lsl	r3, r3, #1
   1a0b0:	ldrsh	ip, [lr, r3]
   1a0b4:	cmp	ip, r0
   1a0b8:	beq	1a0ec <pclose@plt+0x8ff8>
   1a0bc:	sub	ip, r2, #1024	; 0x400
   1a0c0:	mov	r0, lr
   1a0c4:	sub	ip, ip, #8
   1a0c8:	sub	r2, r2, #2128	; 0x850
   1a0cc:	ldrsh	lr, [r2, r1]
   1a0d0:	lsl	r1, lr, #1
   1a0d4:	ldrsh	r3, [ip, r1]
   1a0d8:	add	r3, r3, #1
   1a0dc:	lsl	r3, r3, #1
   1a0e0:	ldrsh	r5, [r0, r3]
   1a0e4:	cmp	lr, r5
   1a0e8:	bne	1a0cc <pclose@plt+0x8fd8>
   1a0ec:	ldr	r2, [pc, #-540]	; 19ed8 <pclose@plt+0x8de4>
   1a0f0:	ldr	r1, [r7, #80]	; 0x50
   1a0f4:	add	r2, pc, r2
   1a0f8:	sub	r2, r2, #3216	; 0xc90
   1a0fc:	str	r1, [sp, #20]
   1a100:	ldrsh	r0, [r2, r3]
   1a104:	cmp	r0, sl
   1a108:	beq	1a114 <pclose@plt+0x9020>
   1a10c:	cmp	r0, #0
   1a110:	bne	1a240 <pclose@plt+0x914c>
   1a114:	ldr	r6, [r7, #68]	; 0x44
   1a118:	ldr	r0, [r7, #64]	; 0x40
   1a11c:	b	18f5c <pclose@plt+0x7e68>
   1a120:	ldr	r4, [r7]
   1a124:	ldr	r3, [r4, #28]
   1a128:	cmp	r3, #2
   1a12c:	ble	1919c <pclose@plt+0x80a8>
   1a130:	ldr	r1, [pc, #-604]	; 19edc <pclose@plt+0x8de8>
   1a134:	mov	r2, #5
   1a138:	add	r1, pc, r1
   1a13c:	mov	r0, #0
   1a140:	bl	10e84 <dcgettext@plt>
   1a144:	ldr	r2, [pc, #-620]	; 19ee0 <pclose@plt+0x8dec>
   1a148:	ldr	r3, [pc, #-620]	; 19ee4 <pclose@plt+0x8df0>
   1a14c:	add	r2, pc, r2
   1a150:	sub	r2, r2, #1600	; 0x640
   1a154:	sub	r2, r2, #8
   1a158:	str	r2, [sp]
   1a15c:	ldr	r2, [pc, #-636]	; 19ee8 <pclose@plt+0x8df4>
   1a160:	add	r2, pc, r2
   1a164:	b	196bc <pclose@plt+0x85c8>
   1a168:	ldr	r4, [r7]
   1a16c:	ldr	r3, [r4, #28]
   1a170:	cmp	r3, #2
   1a174:	ble	1919c <pclose@plt+0x80a8>
   1a178:	ldr	r1, [pc, #-660]	; 19eec <pclose@plt+0x8df8>
   1a17c:	mov	r2, #5
   1a180:	add	r1, pc, r1
   1a184:	mov	r0, #0
   1a188:	bl	10e84 <dcgettext@plt>
   1a18c:	ldr	r2, [pc, #-676]	; 19ef0 <pclose@plt+0x8dfc>
   1a190:	ldr	r3, [pc, #-676]	; 19ef4 <pclose@plt+0x8e00>
   1a194:	add	r2, pc, r2
   1a198:	sub	r2, r2, #1600	; 0x640
   1a19c:	sub	r2, r2, #8
   1a1a0:	str	r2, [sp]
   1a1a4:	ldr	r2, [pc, #-692]	; 19ef8 <pclose@plt+0x8e04>
   1a1a8:	add	r2, pc, r2
   1a1ac:	b	196bc <pclose@plt+0x85c8>
   1a1b0:	ldr	r4, [r7]
   1a1b4:	ldr	r3, [r4, #28]
   1a1b8:	cmp	r3, #2
   1a1bc:	ble	1919c <pclose@plt+0x80a8>
   1a1c0:	ldr	r1, [pc, #-716]	; 19efc <pclose@plt+0x8e08>
   1a1c4:	mov	r2, #5
   1a1c8:	add	r1, pc, r1
   1a1cc:	mov	r0, #0
   1a1d0:	bl	10e84 <dcgettext@plt>
   1a1d4:	ldr	r2, [pc, #-732]	; 19f00 <pclose@plt+0x8e0c>
   1a1d8:	ldr	r3, [pc, #-732]	; 19f04 <pclose@plt+0x8e10>
   1a1dc:	add	r2, pc, r2
   1a1e0:	sub	r2, r2, #1600	; 0x640
   1a1e4:	sub	r2, r2, #8
   1a1e8:	str	r2, [sp]
   1a1ec:	ldr	r2, [pc, #-748]	; 19f08 <pclose@plt+0x8e14>
   1a1f0:	add	r2, pc, r2
   1a1f4:	b	196bc <pclose@plt+0x85c8>
   1a1f8:	ldr	r1, [pc, #-756]	; 19f0c <pclose@plt+0x8e18>
   1a1fc:	mov	r2, #5
   1a200:	add	r1, pc, r1
   1a204:	mov	r0, #0
   1a208:	bl	10e84 <dcgettext@plt>
   1a20c:	ldr	r3, [pc, #-772]	; 19f10 <pclose@plt+0x8e1c>
   1a210:	ldr	r2, [pc, #-772]	; 19f14 <pclose@plt+0x8e20>
   1a214:	add	r3, pc, r3
   1a218:	sub	r3, r3, #1600	; 0x640
   1a21c:	str	r3, [sp]
   1a220:	str	r4, [sp, #8]
   1a224:	mov	r3, #256	; 0x100
   1a228:	add	r2, pc, r2
   1a22c:	mov	r1, #3
   1a230:	str	r0, [sp, #4]
   1a234:	ldr	r0, [sp, #20]
   1a238:	bl	12994 <pclose@plt+0x18a0>
   1a23c:	b	19660 <pclose@plt+0x856c>
   1a240:	add	r3, r6, #1
   1a244:	mov	fp, r9
   1a248:	str	r3, [r7, #36]	; 0x24
   1a24c:	ldr	r9, [sp, #28]
   1a250:	b	19c40 <pclose@plt+0x8b4c>
   1a254:	ldr	r3, [r0, #20]
   1a258:	push	{r4, r5, r6, lr}
   1a25c:	cmp	r3, #0
   1a260:	mov	r4, r0
   1a264:	beq	1a2b8 <pclose@plt+0x91c4>
   1a268:	ldr	r2, [r0, #12]
   1a26c:	ldr	r0, [r3, r2, lsl #2]
   1a270:	cmp	r0, #0
   1a274:	beq	1a2bc <pclose@plt+0x91c8>
   1a278:	mov	r5, #0
   1a27c:	b	1a290 <pclose@plt+0x919c>
   1a280:	ldr	r2, [r4, #12]
   1a284:	ldr	r0, [r3, r2, lsl #2]
   1a288:	cmp	r0, #0
   1a28c:	beq	1a2bc <pclose@plt+0x91c8>
   1a290:	mov	r1, r4
   1a294:	bl	18cb0 <pclose@plt+0x7bbc>
   1a298:	ldr	r3, [r4, #20]
   1a29c:	ldr	r2, [r4, #12]
   1a2a0:	mov	r0, r4
   1a2a4:	str	r5, [r3, r2, lsl #2]
   1a2a8:	bl	18d14 <pclose@plt+0x7c20>
   1a2ac:	ldr	r3, [r4, #20]
   1a2b0:	cmp	r3, #0
   1a2b4:	bne	1a280 <pclose@plt+0x918c>
   1a2b8:	mov	r3, #0
   1a2bc:	mov	r5, #0
   1a2c0:	mov	r0, r3
   1a2c4:	mov	r1, r4
   1a2c8:	bl	18cac <pclose@plt+0x7bb8>
   1a2cc:	mov	r1, r4
   1a2d0:	ldr	r0, [r4, #60]	; 0x3c
   1a2d4:	str	r5, [r4, #20]
   1a2d8:	bl	18cac <pclose@plt+0x7bb8>
   1a2dc:	mov	r0, r4
   1a2e0:	str	r5, [r4, #60]	; 0x3c
   1a2e4:	str	r5, [r4, #20]
   1a2e8:	str	r5, [r4, #12]
   1a2ec:	str	r5, [r4, #16]
   1a2f0:	str	r5, [r4, #36]	; 0x24
   1a2f4:	str	r5, [r4, #40]	; 0x28
   1a2f8:	str	r5, [r4, #44]	; 0x2c
   1a2fc:	str	r5, [r4, #52]	; 0x34
   1a300:	str	r5, [r4, #56]	; 0x38
   1a304:	str	r5, [r4, #4]
   1a308:	str	r5, [r4, #8]
   1a30c:	mov	r1, r4
   1a310:	bl	18cac <pclose@plt+0x7bb8>
   1a314:	mov	r0, r5
   1a318:	pop	{r4, r5, r6, pc}
   1a31c:	ldr	r3, [pc, #464]	; 1a4f4 <pclose@plt+0x9400>
   1a320:	ldr	r1, [pc, #464]	; 1a4f8 <pclose@plt+0x9404>
   1a324:	add	r3, pc, r3
   1a328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a32c:	sub	sp, sp, #44	; 0x2c
   1a330:	ldr	r1, [r3, r1]
   1a334:	ldr	r2, [pc, #448]	; 1a4fc <pclose@plt+0x9408>
   1a338:	mov	ip, r1
   1a33c:	str	r1, [sp, #16]
   1a340:	ldr	r1, [pc, #440]	; 1a500 <pclose@plt+0x940c>
   1a344:	ldr	r9, [pc, #440]	; 1a504 <pclose@plt+0x9410>
   1a348:	add	r1, pc, r1
   1a34c:	mov	r8, r0
   1a350:	ldr	r0, [ip]
   1a354:	str	r1, [sp, #32]
   1a358:	add	r9, pc, r9
   1a35c:	mov	r1, #0
   1a360:	str	r9, [sp, #28]
   1a364:	str	r0, [sp, #36]	; 0x24
   1a368:	str	r1, [sp]
   1a36c:	ldr	r6, [r3, r2]
   1a370:	ldr	r3, [pc, #400]	; 1a508 <pclose@plt+0x9414>
   1a374:	str	r6, [sp, #20]
   1a378:	add	r3, pc, r3
   1a37c:	str	r3, [sp, #4]
   1a380:	ldr	r3, [pc, #388]	; 1a50c <pclose@plt+0x9418>
   1a384:	add	r3, pc, r3
   1a388:	str	r3, [sp, #8]
   1a38c:	mov	r3, r9
   1a390:	ldr	r2, [sp, #4]
   1a394:	mov	r1, #1
   1a398:	mov	r0, r8
   1a39c:	bl	11028 <__fprintf_chk@plt>
   1a3a0:	mov	r0, r9
   1a3a4:	bl	10fc8 <strlen@plt>
   1a3a8:	add	r4, r6, #24
   1a3ac:	str	r6, [sp, #12]
   1a3b0:	add	sl, r6, #228	; 0xe4
   1a3b4:	ldr	fp, [sp, #8]
   1a3b8:	mov	r5, #0
   1a3bc:	mov	r7, r0
   1a3c0:	b	1a3e0 <pclose@plt+0x92ec>
   1a3c4:	add	r0, fp, r7
   1a3c8:	mov	r1, r8
   1a3cc:	bl	110ac <fputs@plt>
   1a3d0:	add	r4, r4, #12
   1a3d4:	cmp	sl, r4
   1a3d8:	beq	1a414 <pclose@plt+0x9320>
   1a3dc:	ldr	fp, [r4, #-12]
   1a3e0:	mov	r2, r7
   1a3e4:	mov	r1, r9
   1a3e8:	mov	r0, fp
   1a3ec:	bl	110b8 <strncmp@plt>
   1a3f0:	cmp	r0, #0
   1a3f4:	bne	1a3d0 <pclose@plt+0x92dc>
   1a3f8:	cmp	r5, #0
   1a3fc:	add	r5, r5, #1
   1a400:	beq	1a3c4 <pclose@plt+0x92d0>
   1a404:	mov	r1, r8
   1a408:	mov	r0, #44	; 0x2c
   1a40c:	bl	1107c <fputc@plt>
   1a410:	b	1a3c4 <pclose@plt+0x92d0>
   1a414:	mov	r1, r8
   1a418:	mov	r0, #125	; 0x7d
   1a41c:	bl	1107c <fputc@plt>
   1a420:	ldr	r3, [sp]
   1a424:	cmp	r3, #1
   1a428:	bne	1a4d4 <pclose@plt+0x93e0>
   1a42c:	ldr	r3, [sp, #20]
   1a430:	ldr	r4, [pc, #216]	; 1a510 <pclose@plt+0x941c>
   1a434:	ldr	r7, [pc, #216]	; 1a514 <pclose@plt+0x9420>
   1a438:	ldr	r9, [pc, #216]	; 1a518 <pclose@plt+0x9424>
   1a43c:	ldr	sl, [pc, #216]	; 1a51c <pclose@plt+0x9428>
   1a440:	ldr	r6, [sp, #12]
   1a444:	add	r5, r3, #204	; 0xcc
   1a448:	add	r4, pc, r4
   1a44c:	add	r7, pc, r7
   1a450:	add	r9, pc, r9
   1a454:	add	sl, pc, sl
   1a458:	b	1a460 <pclose@plt+0x936c>
   1a45c:	ldr	r4, [r6, #12]!
   1a460:	mov	r2, #9
   1a464:	mov	r1, r7
   1a468:	mov	r0, r4
   1a46c:	bl	110b8 <strncmp@plt>
   1a470:	cmp	r0, #0
   1a474:	beq	1a4a4 <pclose@plt+0x93b0>
   1a478:	mov	r2, #5
   1a47c:	mov	r1, r9
   1a480:	mov	r0, r4
   1a484:	bl	110b8 <strncmp@plt>
   1a488:	cmp	r0, #0
   1a48c:	beq	1a4a4 <pclose@plt+0x93b0>
   1a490:	mov	r3, r4
   1a494:	mov	r2, sl
   1a498:	mov	r1, #1
   1a49c:	mov	r0, r8
   1a4a0:	bl	11028 <__fprintf_chk@plt>
   1a4a4:	cmp	r6, r5
   1a4a8:	bne	1a45c <pclose@plt+0x9368>
   1a4ac:	ldr	r3, [sp, #16]
   1a4b0:	ldr	r2, [sp, #36]	; 0x24
   1a4b4:	ldr	r3, [r3]
   1a4b8:	cmp	r2, r3
   1a4bc:	bne	1a4f0 <pclose@plt+0x93fc>
   1a4c0:	mov	r1, r8
   1a4c4:	mov	r0, #10
   1a4c8:	add	sp, sp, #44	; 0x2c
   1a4cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4d0:	b	1107c <fputc@plt>
   1a4d4:	mov	r1, r8
   1a4d8:	mov	r0, #44	; 0x2c
   1a4dc:	bl	1107c <fputc@plt>
   1a4e0:	mov	r3, #1
   1a4e4:	ldr	r9, [sp, #32]
   1a4e8:	str	r3, [sp]
   1a4ec:	b	1a38c <pclose@plt+0x9298>
   1a4f0:	bl	10e9c <__stack_chk_fail@plt>
   1a4f4:	ldrdeq	r0, [r2], -r4
   1a4f8:	andeq	r0, r0, r8, lsl #2
   1a4fc:	andeq	r0, r0, ip, lsr #2
   1a500:	andeq	r5, r0, r0, lsr #2
   1a504:	strdeq	r5, [r0], -r8
   1a508:	strdeq	r5, [r0], -r8
   1a50c:	ldrdeq	r5, [r0], -r8
   1a510:	muleq	r0, ip, ip
   1a514:	andeq	r5, r0, r4
   1a518:	andeq	r5, r0, r8, lsl r0
   1a51c:	andeq	r5, r0, r0, lsr #32
   1a520:	cmp	r0, #0
   1a524:	ldr	r1, [pc, #44]	; 1a558 <pclose@plt+0x9464>
   1a528:	add	r1, pc, r1
   1a52c:	bxeq	lr
   1a530:	ldr	r3, [r0, #32]
   1a534:	cmp	r3, #17
   1a538:	bhi	1a550 <pclose@plt+0x945c>
   1a53c:	ldr	r2, [pc, #24]	; 1a55c <pclose@plt+0x9468>
   1a540:	add	r3, r3, r3, lsl #1
   1a544:	ldr	r2, [r1, r2]
   1a548:	ldr	r0, [r2, r3, lsl #2]
   1a54c:	bx	lr
   1a550:	mov	r0, #0
   1a554:	bx	lr
   1a558:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1a55c:	andeq	r0, r0, ip, lsr #2
   1a560:	ldr	r2, [pc, #88]	; 1a5c0 <pclose@plt+0x94cc>
   1a564:	ldr	ip, [pc, #88]	; 1a5c4 <pclose@plt+0x94d0>
   1a568:	add	r2, pc, r2
   1a56c:	ldr	r3, [pc, #84]	; 1a5c8 <pclose@plt+0x94d4>
   1a570:	push	{r4, r5, r6, r7, r8, lr}
   1a574:	add	r3, pc, r3
   1a578:	mov	r7, r0
   1a57c:	ldr	r5, [r2, ip]
   1a580:	mov	r6, r1
   1a584:	mov	r4, #0
   1a588:	b	1a59c <pclose@plt+0x94a8>
   1a58c:	add	r4, r4, #1
   1a590:	cmp	r4, #18
   1a594:	beq	1a5b8 <pclose@plt+0x94c4>
   1a598:	ldr	r3, [r5, #12]!
   1a59c:	mov	r0, r3
   1a5a0:	mov	r1, r6
   1a5a4:	bl	10ec0 <strcasecmp@plt>
   1a5a8:	cmp	r0, #0
   1a5ac:	bne	1a58c <pclose@plt+0x9498>
   1a5b0:	str	r4, [r7, #32]
   1a5b4:	pop	{r4, r5, r6, r7, r8, pc}
   1a5b8:	mov	r0, #1
   1a5bc:	pop	{r4, r5, r6, r7, r8, pc}
   1a5c0:	muleq	r2, r0, sl
   1a5c4:	andeq	r0, r0, ip, lsr #2
   1a5c8:	andeq	r2, r0, r0, ror fp
   1a5cc:	ldr	r3, [pc, #140]	; 1a660 <pclose@plt+0x956c>
   1a5d0:	cmp	r1, #14
   1a5d4:	add	r3, pc, r3
   1a5d8:	bls	1a5f0 <pclose@plt+0x94fc>
   1a5dc:	ldr	r3, [r0, #28]
   1a5e0:	cmp	r3, #2
   1a5e4:	bgt	1a604 <pclose@plt+0x9510>
   1a5e8:	mov	r0, #0
   1a5ec:	bx	lr
   1a5f0:	ldr	r2, [pc, #108]	; 1a664 <pclose@plt+0x9570>
   1a5f4:	ldr	r3, [r3, r2]
   1a5f8:	add	r1, r3, r1, lsl #3
   1a5fc:	ldr	r0, [r1, #4]
   1a600:	bx	lr
   1a604:	push	{r4, r5, lr}
   1a608:	mov	r4, r1
   1a60c:	ldr	r1, [pc, #84]	; 1a668 <pclose@plt+0x9574>
   1a610:	sub	sp, sp, #20
   1a614:	mov	r5, r0
   1a618:	mov	r2, #5
   1a61c:	add	r1, pc, r1
   1a620:	mov	r0, #0
   1a624:	bl	10e84 <dcgettext@plt>
   1a628:	ldr	r3, [pc, #60]	; 1a66c <pclose@plt+0x9578>
   1a62c:	ldr	r2, [pc, #60]	; 1a670 <pclose@plt+0x957c>
   1a630:	add	r3, pc, r3
   1a634:	str	r3, [sp]
   1a638:	str	r4, [sp, #8]
   1a63c:	mov	r3, #150	; 0x96
   1a640:	add	r2, pc, r2
   1a644:	mov	r1, #3
   1a648:	str	r0, [sp, #4]
   1a64c:	mov	r0, r5
   1a650:	bl	12994 <pclose@plt+0x18a0>
   1a654:	mov	r0, #0
   1a658:	add	sp, sp, #20
   1a65c:	pop	{r4, r5, pc}
   1a660:	andeq	r0, r2, r4, lsr #20
   1a664:	andeq	r0, r0, r0, lsr #2
   1a668:	andeq	r4, r0, ip, asr lr
   1a66c:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1a670:	andeq	r4, r0, r0, ror #28
   1a674:	push	{r4, r5, r6, lr}
   1a678:	sub	sp, sp, #16
   1a67c:	mov	r4, r2
   1a680:	mov	r6, r0
   1a684:	mov	r5, r1
   1a688:	bl	1a5cc <pclose@plt+0x94d8>
   1a68c:	ldr	r3, [pc, #156]	; 1a730 <pclose@plt+0x963c>
   1a690:	add	r3, pc, r3
   1a694:	cmp	r0, #0
   1a698:	beq	1a6c4 <pclose@plt+0x95d0>
   1a69c:	ldr	r2, [pc, #144]	; 1a734 <pclose@plt+0x9640>
   1a6a0:	ldr	r3, [r3, r2]
   1a6a4:	add	r2, r3, r5, lsl #3
   1a6a8:	ldr	r2, [r2, #4]
   1a6ac:	cmp	r2, r4
   1a6b0:	bhi	1a6cc <pclose@plt+0x95d8>
   1a6b4:	ldr	r3, [r6, #28]
   1a6b8:	cmp	r3, #2
   1a6bc:	movle	r0, #0
   1a6c0:	bgt	1a6dc <pclose@plt+0x95e8>
   1a6c4:	add	sp, sp, #16
   1a6c8:	pop	{r4, r5, r6, pc}
   1a6cc:	ldr	r3, [r3, r5, lsl #3]
   1a6d0:	ldr	r0, [r3, r4, lsl #2]
   1a6d4:	add	sp, sp, #16
   1a6d8:	pop	{r4, r5, r6, pc}
   1a6dc:	ldr	r1, [pc, #84]	; 1a738 <pclose@plt+0x9644>
   1a6e0:	mov	r2, #5
   1a6e4:	add	r1, pc, r1
   1a6e8:	mov	r0, #0
   1a6ec:	bl	10e84 <dcgettext@plt>
   1a6f0:	ldr	r3, [pc, #68]	; 1a73c <pclose@plt+0x9648>
   1a6f4:	ldr	r2, [pc, #68]	; 1a740 <pclose@plt+0x964c>
   1a6f8:	add	r3, pc, r3
   1a6fc:	add	r3, r3, #16
   1a700:	str	r3, [sp]
   1a704:	str	r4, [sp, #12]
   1a708:	str	r5, [sp, #8]
   1a70c:	mov	r3, #164	; 0xa4
   1a710:	add	r2, pc, r2
   1a714:	mov	r1, #3
   1a718:	str	r0, [sp, #4]
   1a71c:	mov	r0, r6
   1a720:	bl	12994 <pclose@plt+0x18a0>
   1a724:	mov	r0, #0
   1a728:	add	sp, sp, #16
   1a72c:	pop	{r4, r5, r6, pc}
   1a730:	andeq	r0, r2, r8, ror #18
   1a734:	andeq	r0, r0, r0, lsr #2
   1a738:	andeq	r4, r0, r4, asr #27
   1a73c:	andeq	r4, r0, ip, lsr #26
   1a740:	muleq	r0, r0, sp
   1a744:	push	{r4, lr}
   1a748:	bl	1a674 <pclose@plt+0x9580>
   1a74c:	cmp	r0, #0
   1a750:	popeq	{r4, pc}
   1a754:	pop	{r4, lr}
   1a758:	b	10e90 <strdup@plt>
   1a75c:	ldr	ip, [pc, #304]	; 1a894 <pclose@plt+0x97a0>
   1a760:	subs	r2, r1, #0
   1a764:	add	ip, pc, ip
   1a768:	blt	1a88c <pclose@plt+0x9798>
   1a76c:	cmp	r2, #4096	; 0x1000
   1a770:	blt	1a800 <pclose@plt+0x970c>
   1a774:	eor	r2, r2, #61440	; 0xf000
   1a778:	cmp	r2, #127	; 0x7f
   1a77c:	ble	1a834 <pclose@plt+0x9740>
   1a780:	ldr	r1, [pc, #272]	; 1a898 <pclose@plt+0x97a4>
   1a784:	push	{r4, lr}
   1a788:	ldr	r3, [pc, #268]	; 1a89c <pclose@plt+0x97a8>
   1a78c:	ldr	ip, [ip, r1]
   1a790:	add	r3, pc, r3
   1a794:	add	r4, ip, #216	; 0xd8
   1a798:	cmp	r3, #0
   1a79c:	beq	1a7ec <pclose@plt+0x96f8>
   1a7a0:	ldr	r1, [ip, #8]
   1a7a4:	cmp	r1, #255	; 0xff
   1a7a8:	bgt	1a7ec <pclose@plt+0x96f8>
   1a7ac:	add	r3, r3, #8
   1a7b0:	b	1a7c0 <pclose@plt+0x96cc>
   1a7b4:	cmp	r1, #256	; 0x100
   1a7b8:	add	r3, r3, #8
   1a7bc:	beq	1a7ec <pclose@plt+0x96f8>
   1a7c0:	ldrh	r0, [r3, #-8]
   1a7c4:	add	r1, r1, #1
   1a7c8:	cmp	r0, r2
   1a7cc:	bne	1a7b4 <pclose@plt+0x96c0>
   1a7d0:	ldr	r0, [r3, #-4]
   1a7d4:	ldrb	lr, [r0]
   1a7d8:	cmp	lr, #0
   1a7dc:	popne	{r4, pc}
   1a7e0:	cmp	r1, #256	; 0x100
   1a7e4:	add	r3, r3, #8
   1a7e8:	bne	1a7c0 <pclose@plt+0x96cc>
   1a7ec:	add	ip, ip, #12
   1a7f0:	cmp	ip, r4
   1a7f4:	beq	1a884 <pclose@plt+0x9790>
   1a7f8:	ldr	r3, [ip, #4]
   1a7fc:	b	1a798 <pclose@plt+0x96a4>
   1a800:	cmp	r2, #127	; 0x7f
   1a804:	ble	1a834 <pclose@plt+0x9740>
   1a808:	asr	r1, r2, #8
   1a80c:	cmp	r1, #8
   1a810:	beq	1a88c <pclose@plt+0x9798>
   1a814:	cmp	r1, #11
   1a818:	mov	r3, r0
   1a81c:	uxtbeq	r2, r2
   1a820:	beq	1a83c <pclose@plt+0x9748>
   1a824:	cmp	r1, #0
   1a828:	beq	1a83c <pclose@plt+0x9748>
   1a82c:	uxtb	r2, r2
   1a830:	b	1a674 <pclose@plt+0x9580>
   1a834:	mov	r1, #0
   1a838:	b	1a674 <pclose@plt+0x9580>
   1a83c:	ldr	r3, [r3, #32]
   1a840:	ldr	r1, [pc, #80]	; 1a898 <pclose@plt+0x97a4>
   1a844:	add	r3, r3, r3, lsl #1
   1a848:	ldr	r1, [ip, r1]
   1a84c:	add	r3, r1, r3, lsl #2
   1a850:	ldr	r0, [r3, #4]
   1a854:	cmp	r0, #0
   1a858:	bxeq	lr
   1a85c:	ldr	r1, [r3, #8]
   1a860:	cmp	r1, r2
   1a864:	bgt	1a88c <pclose@plt+0x9798>
   1a868:	sub	r2, r2, r1
   1a86c:	add	r2, r0, r2, lsl #3
   1a870:	ldr	r0, [r2, #4]
   1a874:	ldrb	r3, [r0]
   1a878:	cmp	r3, #0
   1a87c:	moveq	r0, #0
   1a880:	bx	lr
   1a884:	mov	r0, #0
   1a888:	pop	{r4, pc}
   1a88c:	mov	r0, #0
   1a890:	bx	lr
   1a894:	muleq	r2, r4, r8
   1a898:	andeq	r0, r0, ip, lsr #2
   1a89c:	andeq	fp, r1, r4, ror #20
   1a8a0:	push	{r4, lr}
   1a8a4:	bl	1a75c <pclose@plt+0x9668>
   1a8a8:	cmp	r0, #0
   1a8ac:	popeq	{r4, pc}
   1a8b0:	pop	{r4, lr}
   1a8b4:	b	10e90 <strdup@plt>
   1a8b8:	ldr	r3, [pc, #1636]	; 1af24 <pclose@plt+0x9e30>
   1a8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8c0:	sub	sp, sp, #36	; 0x24
   1a8c4:	add	r3, pc, r3
   1a8c8:	str	r3, [sp, #20]
   1a8cc:	ldr	r3, [pc, #1620]	; 1af28 <pclose@plt+0x9e34>
   1a8d0:	ldr	r9, [pc, #1620]	; 1af2c <pclose@plt+0x9e38>
   1a8d4:	add	r3, pc, r3
   1a8d8:	str	r3, [sp, #24]
   1a8dc:	ldr	r3, [pc, #1612]	; 1af30 <pclose@plt+0x9e3c>
   1a8e0:	mov	r5, r0
   1a8e4:	add	r3, pc, r3
   1a8e8:	str	r3, [sp, #28]
   1a8ec:	mov	r4, r1
   1a8f0:	mov	r8, r2
   1a8f4:	add	r9, pc, r9
   1a8f8:	cmn	r8, #1
   1a8fc:	mov	r2, #5
   1a900:	ldreq	r8, [r5]
   1a904:	ldr	r1, [sp, #20]
   1a908:	mov	r0, r4
   1a90c:	lsreq	r8, r8, #4
   1a910:	andeq	r8, r8, #1
   1a914:	bl	110b8 <strncmp@plt>
   1a918:	subs	r6, r0, #0
   1a91c:	beq	1aa84 <pclose@plt+0x9990>
   1a920:	mov	r2, #6
   1a924:	ldr	r1, [sp, #24]
   1a928:	mov	r0, r4
   1a92c:	bl	110b8 <strncmp@plt>
   1a930:	subs	r2, r0, #0
   1a934:	beq	1aa68 <pclose@plt+0x9974>
   1a938:	ldr	r3, [r5, #32]
   1a93c:	ldr	r2, [pc, #1520]	; 1af34 <pclose@plt+0x9e40>
   1a940:	cmp	r8, #1
   1a944:	add	r3, r3, r3, lsl #1
   1a948:	ldr	sl, [r9, r2]
   1a94c:	add	r3, sl, r3, lsl #2
   1a950:	ldr	r7, [r3, #4]
   1a954:	ldr	r6, [r3, #8]
   1a958:	beq	1aa34 <pclose@plt+0x9940>
   1a95c:	cmp	r6, #255	; 0xff
   1a960:	movls	fp, #256	; 0x100
   1a964:	bhi	1a9a4 <pclose@plt+0x98b0>
   1a968:	ldr	r3, [r7, #4]
   1a96c:	mov	r0, r4
   1a970:	mov	r1, r3
   1a974:	ldrb	r3, [r3]
   1a978:	add	r7, r7, #8
   1a97c:	cmp	r3, #0
   1a980:	beq	1a990 <pclose@plt+0x989c>
   1a984:	bl	10e24 <strcmp@plt>
   1a988:	cmp	r0, #0
   1a98c:	beq	1aa28 <pclose@plt+0x9934>
   1a990:	add	r6, r6, #1
   1a994:	cmp	r6, fp
   1a998:	bcc	1a968 <pclose@plt+0x9874>
   1a99c:	cmp	r8, #1
   1a9a0:	beq	1aa40 <pclose@plt+0x994c>
   1a9a4:	mov	r7, #256	; 0x100
   1a9a8:	mov	r6, #0
   1a9ac:	mov	r2, r6
   1a9b0:	mov	r1, #0
   1a9b4:	mov	r0, r5
   1a9b8:	bl	1a674 <pclose@plt+0x9580>
   1a9bc:	mov	r1, r0
   1a9c0:	mov	r0, r4
   1a9c4:	bl	10e24 <strcmp@plt>
   1a9c8:	cmp	r0, #0
   1a9cc:	beq	1aa28 <pclose@plt+0x9934>
   1a9d0:	add	r6, r6, #1
   1a9d4:	cmp	r6, r7
   1a9d8:	bne	1a9ac <pclose@plt+0x98b8>
   1a9dc:	mov	r7, #256	; 0x100
   1a9e0:	mov	r6, #1
   1a9e4:	cmp	r7, #0
   1a9e8:	movne	fp, #0
   1a9ec:	bne	1aa00 <pclose@plt+0x990c>
   1a9f0:	b	1aa48 <pclose@plt+0x9954>
   1a9f4:	add	fp, fp, #1
   1a9f8:	cmp	r7, fp
   1a9fc:	beq	1aa48 <pclose@plt+0x9954>
   1aa00:	mov	r2, fp
   1aa04:	mov	r1, r6
   1aa08:	mov	r0, r5
   1aa0c:	bl	1a674 <pclose@plt+0x9580>
   1aa10:	mov	r1, r0
   1aa14:	mov	r0, r4
   1aa18:	bl	10e24 <strcmp@plt>
   1aa1c:	cmp	r0, #0
   1aa20:	bne	1a9f4 <pclose@plt+0x9900>
   1aa24:	orr	r6, fp, r6, lsl #8
   1aa28:	mov	r0, r6
   1aa2c:	add	sp, sp, #36	; 0x24
   1aa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa34:	cmp	r6, #127	; 0x7f
   1aa38:	movls	fp, #128	; 0x80
   1aa3c:	bls	1a968 <pclose@plt+0x9874>
   1aa40:	mov	r7, #128	; 0x80
   1aa44:	b	1a9a8 <pclose@plt+0x98b4>
   1aa48:	add	r6, r6, #1
   1aa4c:	cmp	r6, #15
   1aa50:	beq	1aadc <pclose@plt+0x99e8>
   1aa54:	ldr	r3, [pc, #1244]	; 1af38 <pclose@plt+0x9e44>
   1aa58:	ldr	r3, [r9, r3]
   1aa5c:	add	r3, r3, r6, lsl #3
   1aa60:	ldr	r7, [r3, #4]
   1aa64:	b	1a9e4 <pclose@plt+0x98f0>
   1aa68:	add	r1, r4, #6
   1aa6c:	mov	r0, r5
   1aa70:	bl	1a8b8 <pclose@plt+0x97c4>
   1aa74:	lsrs	r3, r0, #8
   1aa78:	bne	1a938 <pclose@plt+0x9844>
   1aa7c:	orr	r6, r0, #3328	; 0xd00
   1aa80:	b	1aa28 <pclose@plt+0x9934>
   1aa84:	mov	r2, r6
   1aa88:	add	r1, r4, #5
   1aa8c:	mov	r0, r5
   1aa90:	bl	1a8b8 <pclose@plt+0x97c4>
   1aa94:	lsrs	r3, r0, #8
   1aa98:	beq	1ac34 <pclose@plt+0x9b40>
   1aa9c:	cmp	r8, #1
   1aaa0:	beq	1aa28 <pclose@plt+0x9934>
   1aaa4:	mov	r2, #6
   1aaa8:	ldr	r1, [sp, #28]
   1aaac:	mov	r0, r4
   1aab0:	bl	110b8 <strncmp@plt>
   1aab4:	subs	r2, r0, #0
   1aab8:	beq	1ab24 <pclose@plt+0x9a30>
   1aabc:	ldr	r3, [r5, #32]
   1aac0:	ldr	r2, [pc, #1132]	; 1af34 <pclose@plt+0x9e40>
   1aac4:	add	r3, r3, r3, lsl #1
   1aac8:	ldr	sl, [r9, r2]
   1aacc:	add	r3, sl, r3, lsl #2
   1aad0:	ldr	r7, [r3, #4]
   1aad4:	ldr	r6, [r3, #8]
   1aad8:	b	1a95c <pclose@plt+0x9868>
   1aadc:	ldr	r1, [pc, #1112]	; 1af3c <pclose@plt+0x9e48>
   1aae0:	mov	r6, #0
   1aae4:	add	r1, pc, r1
   1aae8:	b	1ab00 <pclose@plt+0x9a0c>
   1aaec:	add	r6, r6, #1
   1aaf0:	cmp	r6, #64	; 0x40
   1aaf4:	beq	1ab3c <pclose@plt+0x9a48>
   1aaf8:	ldr	r3, [r9, r3]
   1aafc:	ldr	r1, [r3, r6, lsl #3]
   1ab00:	mov	r0, r4
   1ab04:	bl	10e24 <strcmp@plt>
   1ab08:	ldr	r3, [pc, #1072]	; 1af40 <pclose@plt+0x9e4c>
   1ab0c:	cmp	r0, #0
   1ab10:	bne	1aaec <pclose@plt+0x99f8>
   1ab14:	ldr	r3, [r9, r3]
   1ab18:	add	r6, r3, r6, lsl #3
   1ab1c:	ldr	r4, [r6, #4]
   1ab20:	b	1a8f8 <pclose@plt+0x9804>
   1ab24:	add	r1, r4, #6
   1ab28:	mov	r0, r5
   1ab2c:	bl	1a8b8 <pclose@plt+0x97c4>
   1ab30:	lsrs	r3, r0, #8
   1ab34:	bne	1aabc <pclose@plt+0x99c8>
   1ab38:	b	1aa7c <pclose@plt+0x9988>
   1ab3c:	cmp	r8, #1
   1ab40:	beq	1abd4 <pclose@plt+0x9ae0>
   1ab44:	ldr	r7, [pc, #1016]	; 1af44 <pclose@plt+0x9e50>
   1ab48:	ldr	r1, [pc, #1016]	; 1af48 <pclose@plt+0x9e54>
   1ab4c:	add	r7, pc, r7
   1ab50:	add	r1, pc, r1
   1ab54:	mov	r6, #0
   1ab58:	b	1ab6c <pclose@plt+0x9a78>
   1ab5c:	add	r6, r6, #1
   1ab60:	cmp	r6, #96	; 0x60
   1ab64:	beq	1ad00 <pclose@plt+0x9c0c>
   1ab68:	ldr	r1, [r7, #4]
   1ab6c:	mov	r0, r4
   1ab70:	bl	10e24 <strcmp@plt>
   1ab74:	add	r7, r7, #8
   1ab78:	cmp	r0, #0
   1ab7c:	bne	1ab5c <pclose@plt+0x9a68>
   1ab80:	ldr	r3, [r5, #28]
   1ab84:	cmp	r3, #5
   1ab88:	ble	1abcc <pclose@plt+0x9ad8>
   1ab8c:	ldr	r1, [pc, #952]	; 1af4c <pclose@plt+0x9e58>
   1ab90:	mov	r2, #5
   1ab94:	add	r1, pc, r1
   1ab98:	bl	10e84 <dcgettext@plt>
   1ab9c:	ldr	r3, [pc, #940]	; 1af50 <pclose@plt+0x9e5c>
   1aba0:	ldr	r2, [pc, #940]	; 1af54 <pclose@plt+0x9e60>
   1aba4:	add	r3, pc, r3
   1aba8:	add	r3, r3, #24
   1abac:	str	r3, [sp]
   1abb0:	str	r4, [sp, #8]
   1abb4:	ldr	r3, [pc, #924]	; 1af58 <pclose@plt+0x9e64>
   1abb8:	add	r2, pc, r2
   1abbc:	mov	r1, #6
   1abc0:	str	r0, [sp, #4]
   1abc4:	mov	r0, r5
   1abc8:	bl	12994 <pclose@plt+0x18a0>
   1abcc:	add	r6, r6, #160	; 0xa0
   1abd0:	b	1aa28 <pclose@plt+0x9934>
   1abd4:	ldr	r8, [r5, #32]
   1abd8:	add	r3, r8, r8, lsl #1
   1abdc:	add	r3, sl, r3, lsl #2
   1abe0:	ldr	r6, [r3, #4]
   1abe4:	cmp	r6, #0
   1abe8:	beq	1ac3c <pclose@plt+0x9b48>
   1abec:	ldr	r3, [r3, #8]
   1abf0:	cmp	r3, #255	; 0xff
   1abf4:	bhi	1ac3c <pclose@plt+0x9b48>
   1abf8:	rsb	r3, r3, r3, lsl #29
   1abfc:	add	r7, r6, r3, lsl #3
   1ac00:	add	r7, r7, #2048	; 0x800
   1ac04:	b	1ac14 <pclose@plt+0x9b20>
   1ac08:	add	r6, r6, #8
   1ac0c:	cmp	r6, r7
   1ac10:	beq	1ac3c <pclose@plt+0x9b48>
   1ac14:	ldr	r1, [r6, #4]
   1ac18:	mov	r0, r4
   1ac1c:	bl	10e24 <strcmp@plt>
   1ac20:	cmp	r0, #0
   1ac24:	bne	1ac08 <pclose@plt+0x9b14>
   1ac28:	ldrh	r6, [r6]
   1ac2c:	eor	r6, r6, #61440	; 0xf000
   1ac30:	b	1aa28 <pclose@plt+0x9934>
   1ac34:	orr	r6, r0, #2048	; 0x800
   1ac38:	b	1aa28 <pclose@plt+0x9934>
   1ac3c:	mov	r9, #0
   1ac40:	cmp	r8, r9
   1ac44:	beq	1ac94 <pclose@plt+0x9ba0>
   1ac48:	ldr	r6, [sl, #4]
   1ac4c:	cmp	r6, #0
   1ac50:	beq	1ac94 <pclose@plt+0x9ba0>
   1ac54:	ldr	r3, [sl, #8]
   1ac58:	cmp	r3, #255	; 0xff
   1ac5c:	bhi	1ac94 <pclose@plt+0x9ba0>
   1ac60:	rsb	r3, r3, r3, lsl #29
   1ac64:	add	r7, r6, r3, lsl #3
   1ac68:	add	r7, r7, #2048	; 0x800
   1ac6c:	b	1ac7c <pclose@plt+0x9b88>
   1ac70:	add	r6, r6, #8
   1ac74:	cmp	r6, r7
   1ac78:	beq	1ac94 <pclose@plt+0x9ba0>
   1ac7c:	ldr	r1, [r6, #4]
   1ac80:	mov	r0, r4
   1ac84:	bl	10e24 <strcmp@plt>
   1ac88:	cmp	r0, #0
   1ac8c:	bne	1ac70 <pclose@plt+0x9b7c>
   1ac90:	b	1ac28 <pclose@plt+0x9b34>
   1ac94:	add	r9, r9, #1
   1ac98:	cmp	r9, #18
   1ac9c:	add	sl, sl, #12
   1aca0:	bne	1ac40 <pclose@plt+0x9b4c>
   1aca4:	ldr	r3, [r5, #28]
   1aca8:	cmp	r3, #2
   1acac:	mvnle	r6, #0
   1acb0:	ble	1aa28 <pclose@plt+0x9934>
   1acb4:	ldr	r1, [pc, #672]	; 1af5c <pclose@plt+0x9e68>
   1acb8:	mov	r2, #5
   1acbc:	add	r1, pc, r1
   1acc0:	mov	r0, #0
   1acc4:	bl	10e84 <dcgettext@plt>
   1acc8:	ldr	r3, [pc, #656]	; 1af60 <pclose@plt+0x9e6c>
   1accc:	ldr	r2, [pc, #656]	; 1af64 <pclose@plt+0x9e70>
   1acd0:	add	r3, pc, r3
   1acd4:	add	r3, r3, #24
   1acd8:	str	r3, [sp]
   1acdc:	str	r4, [sp, #8]
   1ace0:	mov	r3, #376	; 0x178
   1ace4:	add	r2, pc, r2
   1ace8:	mov	r1, #3
   1acec:	mvn	r6, #0
   1acf0:	str	r0, [sp, #4]
   1acf4:	mov	r0, r5
   1acf8:	bl	12994 <pclose@plt+0x18a0>
   1acfc:	b	1aa28 <pclose@plt+0x9934>
   1ad00:	ldr	r7, [pc, #608]	; 1af68 <pclose@plt+0x9e74>
   1ad04:	ldr	r1, [pc, #608]	; 1af6c <pclose@plt+0x9e78>
   1ad08:	add	r7, pc, r7
   1ad0c:	add	r1, pc, r1
   1ad10:	add	r7, r7, #768	; 0x300
   1ad14:	mov	r6, #0
   1ad18:	b	1ad2c <pclose@plt+0x9c38>
   1ad1c:	add	r6, r6, #1
   1ad20:	cmp	r6, #96	; 0x60
   1ad24:	beq	1ad90 <pclose@plt+0x9c9c>
   1ad28:	ldr	r1, [r7, #4]
   1ad2c:	mov	r0, r4
   1ad30:	bl	10e24 <strcmp@plt>
   1ad34:	add	r7, r7, #8
   1ad38:	cmp	r0, #0
   1ad3c:	bne	1ad1c <pclose@plt+0x9c28>
   1ad40:	ldr	r3, [r5, #28]
   1ad44:	cmp	r3, #5
   1ad48:	ble	1abcc <pclose@plt+0x9ad8>
   1ad4c:	ldr	r1, [pc, #540]	; 1af70 <pclose@plt+0x9e7c>
   1ad50:	mov	r2, #5
   1ad54:	add	r1, pc, r1
   1ad58:	bl	10e84 <dcgettext@plt>
   1ad5c:	ldr	r3, [pc, #528]	; 1af74 <pclose@plt+0x9e80>
   1ad60:	ldr	r2, [pc, #528]	; 1af78 <pclose@plt+0x9e84>
   1ad64:	add	r3, pc, r3
   1ad68:	add	r3, r3, #24
   1ad6c:	str	r3, [sp]
   1ad70:	str	r4, [sp, #8]
   1ad74:	ldr	r3, [pc, #512]	; 1af7c <pclose@plt+0x9e88>
   1ad78:	add	r2, pc, r2
   1ad7c:	mov	r1, #6
   1ad80:	str	r0, [sp, #4]
   1ad84:	mov	r0, r5
   1ad88:	bl	12994 <pclose@plt+0x18a0>
   1ad8c:	b	1abcc <pclose@plt+0x9ad8>
   1ad90:	ldr	r7, [pc, #488]	; 1af80 <pclose@plt+0x9e8c>
   1ad94:	mov	r6, #0
   1ad98:	add	r7, pc, r7
   1ad9c:	add	r7, r7, #1536	; 0x600
   1ada0:	b	1adb0 <pclose@plt+0x9cbc>
   1ada4:	add	r6, r6, #1
   1ada8:	cmp	r6, #96	; 0x60
   1adac:	beq	1ae18 <pclose@plt+0x9d24>
   1adb0:	ldr	r1, [r7, #4]
   1adb4:	mov	r0, r4
   1adb8:	bl	10e24 <strcmp@plt>
   1adbc:	add	r7, r7, #8
   1adc0:	cmp	r0, #0
   1adc4:	bne	1ada4 <pclose@plt+0x9cb0>
   1adc8:	ldr	r3, [r5, #28]
   1adcc:	cmp	r3, #5
   1add0:	ble	1abcc <pclose@plt+0x9ad8>
   1add4:	ldr	r1, [pc, #424]	; 1af84 <pclose@plt+0x9e90>
   1add8:	mov	r2, #5
   1addc:	add	r1, pc, r1
   1ade0:	bl	10e84 <dcgettext@plt>
   1ade4:	ldr	r3, [pc, #412]	; 1af88 <pclose@plt+0x9e94>
   1ade8:	ldr	r2, [pc, #412]	; 1af8c <pclose@plt+0x9e98>
   1adec:	add	r3, pc, r3
   1adf0:	add	r3, r3, #24
   1adf4:	str	r3, [sp]
   1adf8:	str	r4, [sp, #8]
   1adfc:	ldr	r3, [pc, #396]	; 1af90 <pclose@plt+0x9e9c>
   1ae00:	add	r2, pc, r2
   1ae04:	mov	r1, #6
   1ae08:	str	r0, [sp, #4]
   1ae0c:	mov	r0, r5
   1ae10:	bl	12994 <pclose@plt+0x18a0>
   1ae14:	b	1abcc <pclose@plt+0x9ad8>
   1ae18:	ldr	r7, [pc, #372]	; 1af94 <pclose@plt+0x9ea0>
   1ae1c:	mov	r6, #0
   1ae20:	add	r7, pc, r7
   1ae24:	add	r7, r7, #2304	; 0x900
   1ae28:	add	r3, r7, r6, lsl #3
   1ae2c:	mov	r0, r4
   1ae30:	ldr	r1, [r3, #4]
   1ae34:	bl	10e24 <strcmp@plt>
   1ae38:	cmp	r0, #0
   1ae3c:	beq	1ae84 <pclose@plt+0x9d90>
   1ae40:	add	r6, r6, #1
   1ae44:	cmp	r6, #96	; 0x60
   1ae48:	bne	1ae28 <pclose@plt+0x9d34>
   1ae4c:	ldr	r7, [pc, #324]	; 1af98 <pclose@plt+0x9ea4>
   1ae50:	mov	r6, #0
   1ae54:	add	r7, pc, r7
   1ae58:	add	r7, r7, #3072	; 0xc00
   1ae5c:	add	r3, r7, r6, lsl #3
   1ae60:	mov	r0, r4
   1ae64:	ldr	r1, [r3, #4]
   1ae68:	bl	10e24 <strcmp@plt>
   1ae6c:	cmp	r0, #0
   1ae70:	beq	1aed4 <pclose@plt+0x9de0>
   1ae74:	add	r6, r6, #1
   1ae78:	cmp	r6, #96	; 0x60
   1ae7c:	bne	1ae5c <pclose@plt+0x9d68>
   1ae80:	b	1aca4 <pclose@plt+0x9bb0>
   1ae84:	ldr	r3, [r5, #28]
   1ae88:	cmp	r3, #5
   1ae8c:	ble	1abcc <pclose@plt+0x9ad8>
   1ae90:	ldr	r1, [pc, #260]	; 1af9c <pclose@plt+0x9ea8>
   1ae94:	mov	r2, #5
   1ae98:	add	r1, pc, r1
   1ae9c:	bl	10e84 <dcgettext@plt>
   1aea0:	ldr	r3, [pc, #248]	; 1afa0 <pclose@plt+0x9eac>
   1aea4:	ldr	r2, [pc, #248]	; 1afa4 <pclose@plt+0x9eb0>
   1aea8:	add	r3, pc, r3
   1aeac:	add	r3, r3, #24
   1aeb0:	str	r3, [sp]
   1aeb4:	str	r4, [sp, #8]
   1aeb8:	ldr	r3, [pc, #232]	; 1afa8 <pclose@plt+0x9eb4>
   1aebc:	add	r2, pc, r2
   1aec0:	mov	r1, #6
   1aec4:	str	r0, [sp, #4]
   1aec8:	mov	r0, r5
   1aecc:	bl	12994 <pclose@plt+0x18a0>
   1aed0:	b	1abcc <pclose@plt+0x9ad8>
   1aed4:	ldr	r3, [r5, #28]
   1aed8:	cmp	r3, #5
   1aedc:	ble	1abcc <pclose@plt+0x9ad8>
   1aee0:	ldr	r1, [pc, #196]	; 1afac <pclose@plt+0x9eb8>
   1aee4:	mov	r2, #5
   1aee8:	add	r1, pc, r1
   1aeec:	bl	10e84 <dcgettext@plt>
   1aef0:	ldr	r3, [pc, #184]	; 1afb0 <pclose@plt+0x9ebc>
   1aef4:	ldr	r2, [pc, #184]	; 1afb4 <pclose@plt+0x9ec0>
   1aef8:	add	r3, pc, r3
   1aefc:	add	r3, r3, #24
   1af00:	str	r3, [sp]
   1af04:	str	r4, [sp, #8]
   1af08:	ldr	r3, [pc, #168]	; 1afb8 <pclose@plt+0x9ec4>
   1af0c:	add	r2, pc, r2
   1af10:	mov	r1, #6
   1af14:	str	r0, [sp, #4]
   1af18:	mov	r0, r5
   1af1c:	bl	12994 <pclose@plt+0x18a0>
   1af20:	b	1abcc <pclose@plt+0x9ad8>
   1af24:	andeq	r4, r0, r4, lsr ip
   1af28:	andeq	r4, r0, ip, lsr #24
   1af2c:	andeq	r0, r2, r4, lsl #14
   1af30:	andeq	r4, r0, ip, lsl ip
   1af34:	andeq	r0, r0, ip, lsr #2
   1af38:	andeq	r0, r0, r0, lsr #2
   1af3c:	strdeq	r4, [r0], -r8
   1af40:	andeq	r0, r0, r4, lsl r1
   1af44:	andeq	fp, r1, r8, lsr #13
   1af48:	muleq	r0, r8, r9
   1af4c:	andeq	r4, r0, r4, ror r9
   1af50:	andeq	r4, r0, r0, lsl #17
   1af54:	andeq	r4, r0, r8, ror #17
   1af58:	andeq	r0, r0, fp, asr r1
   1af5c:	andeq	r4, r0, r4, asr #17
   1af60:	andeq	r4, r0, r4, asr r7
   1af64:			; <UNDEFINED> instruction: 0x000047bc
   1af68:	andeq	fp, r1, ip, ror #9
   1af6c:	ldrdeq	r4, [r0], -ip
   1af70:	andeq	r4, r0, ip, asr #15
   1af74:	andeq	r4, r0, r0, asr #13
   1af78:	andeq	r4, r0, r8, lsr #14
   1af7c:	andeq	r0, r0, r1, ror #2
   1af80:	andeq	fp, r1, ip, asr r4
   1af84:	andeq	r4, r0, ip, asr r7
   1af88:	andeq	r4, r0, r8, lsr r6
   1af8c:	andeq	r4, r0, r0, lsr #13
   1af90:	andeq	r0, r0, r7, ror #2
   1af94:	ldrdeq	fp, [r1], -r4
   1af98:	andeq	fp, r1, r0, lsr #7
   1af9c:			; <UNDEFINED> instruction: 0x000046b8
   1afa0:	andeq	r4, r0, ip, ror r5
   1afa4:	andeq	r4, r0, r4, ror #11
   1afa8:	andeq	r0, r0, sp, ror #2
   1afac:	andeq	r4, r0, r0, lsl #13
   1afb0:	andeq	r4, r0, ip, lsr #10
   1afb4:	muleq	r0, r4, r5
   1afb8:	andeq	r0, r0, r3, ror r1
   1afbc:	mov	r2, #1
   1afc0:	b	1a8b8 <pclose@plt+0x97c4>
   1afc4:	cmn	r2, #1
   1afc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1afcc:	asr	r6, r1, #8
   1afd0:	ldreq	r5, [r0]
   1afd4:	movne	r5, r2
   1afd8:	mov	r7, r2
   1afdc:	lsreq	r5, r5, #4
   1afe0:	andeq	r5, r5, #1
   1afe4:	cmp	r6, #8
   1afe8:	cmpne	r1, #127	; 0x7f
   1afec:	mov	r8, r0
   1aff0:	mov	r4, r1
   1aff4:	movle	r9, #1
   1aff8:	movgt	r9, #0
   1affc:	bgt	1b008 <pclose@plt+0x9f14>
   1b000:	mov	r0, r4
   1b004:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b008:	ldr	r3, [pc, #172]	; 1b0bc <pclose@plt+0x9fc8>
   1b00c:	cmp	r1, r3
   1b010:	movgt	r3, #1
   1b014:	movle	r3, #0
   1b018:	ble	1b050 <pclose@plt+0x9f5c>
   1b01c:	eor	r2, r1, #61440	; 0xf000
   1b020:	cmp	r2, #127	; 0x7f
   1b024:	movle	r4, r2
   1b028:	ble	1b000 <pclose@plt+0x9f0c>
   1b02c:	cmp	r5, #1
   1b030:	bne	1b05c <pclose@plt+0x9f68>
   1b034:	cmp	r7, #1
   1b038:	movne	r5, #0
   1b03c:	andeq	r5, r5, #1
   1b040:	cmp	r5, #0
   1b044:	eorne	r4, r4, #61440	; 0xf000
   1b048:	mov	r0, r4
   1b04c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b050:	sub	r9, r5, #1
   1b054:	clz	r9, r9
   1b058:	lsr	r9, r9, #5
   1b05c:	orrs	r3, r3, r5
   1b060:	beq	1b000 <pclose@plt+0x9f0c>
   1b064:	mov	r1, r4
   1b068:	mov	r0, r8
   1b06c:	bl	1a75c <pclose@plt+0x9668>
   1b070:	subs	r1, r0, #0
   1b074:	beq	1b088 <pclose@plt+0x9f94>
   1b078:	mov	r2, r5
   1b07c:	mov	r0, r8
   1b080:	bl	1a8b8 <pclose@plt+0x97c4>
   1b084:	mov	r4, r0
   1b088:	cmp	r6, #11
   1b08c:	movne	r6, #0
   1b090:	andeq	r6, r9, #1
   1b094:	cmp	r6, #0
   1b098:	bne	1b0ac <pclose@plt+0x9fb8>
   1b09c:	cmp	r4, #4096	; 0x1000
   1b0a0:	movlt	r5, #0
   1b0a4:	movge	r5, #1
   1b0a8:	b	1b034 <pclose@plt+0x9f40>
   1b0ac:	eor	r3, r4, #61440	; 0xf000
   1b0b0:	cmp	r3, #255	; 0xff
   1b0b4:	orrle	r4, r3, #2816	; 0xb00
   1b0b8:	b	1b09c <pclose@plt+0x9fa8>
   1b0bc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1b0c0:	lsrs	r3, r1, #8
   1b0c4:	bne	1b0ec <pclose@plt+0x9ff8>
   1b0c8:	ldr	r3, [r0]
   1b0cc:	lsr	r3, r3, #4
   1b0d0:	eor	r3, r3, #1
   1b0d4:	cmp	r1, #127	; 0x7f
   1b0d8:	orrle	r3, r3, #1
   1b0dc:	tst	r3, #1
   1b0e0:	beq	1b0ec <pclose@plt+0x9ff8>
   1b0e4:	orr	r0, r1, #2816	; 0xb00
   1b0e8:	bx	lr
   1b0ec:	eor	r3, r1, #61440	; 0xf000
   1b0f0:	cmp	r3, #255	; 0xff
   1b0f4:	bgt	1b100 <pclose@plt+0xa00c>
   1b0f8:	orr	r0, r3, #2816	; 0xb00
   1b0fc:	bx	lr
   1b100:	mvn	r2, #0
   1b104:	b	1afc4 <pclose@plt+0x9ed0>
   1b108:	push	{r4, r5, r6, lr}
   1b10c:	add	r5, r1, #1
   1b110:	mov	r4, r0
   1b114:	ldrd	r0, [r0]
   1b118:	mul	r1, r1, r5
   1b11c:	bl	10ea8 <realloc@plt>
   1b120:	subs	r6, r0, #0
   1b124:	beq	1b154 <pclose@plt+0xa060>
   1b128:	ldr	r0, [r4, #12]
   1b12c:	ldr	r3, [r4, #4]
   1b130:	sub	r2, r5, r0
   1b134:	mov	r1, #0
   1b138:	mul	r2, r3, r2
   1b13c:	mla	r0, r0, r3, r6
   1b140:	bl	11004 <memset@plt>
   1b144:	str	r6, [r4]
   1b148:	str	r5, [r4, #12]
   1b14c:	mov	r0, #0
   1b150:	pop	{r4, r5, r6, pc}
   1b154:	mvn	r0, #11
   1b158:	pop	{r4, r5, r6, pc}
   1b15c:	push	{r4, r5, r6, lr}
   1b160:	subs	r4, r0, #0
   1b164:	beq	1b1a8 <pclose@plt+0xa0b4>
   1b168:	mov	r3, #0
   1b16c:	str	r3, [r4, #8]
   1b170:	mov	r0, r2
   1b174:	mov	r5, r2
   1b178:	mov	r6, r1
   1b17c:	bl	10e18 <calloc@plt>
   1b180:	adds	r3, r5, #0
   1b184:	movne	r3, #1
   1b188:	str	r5, [r4, #12]
   1b18c:	cmp	r0, #0
   1b190:	movne	r3, #0
   1b194:	cmp	r3, #0
   1b198:	stm	r4, {r0, r6}
   1b19c:	mvnne	r0, #11
   1b1a0:	moveq	r0, #0
   1b1a4:	pop	{r4, r5, r6, pc}
   1b1a8:	mvn	r0, #21
   1b1ac:	pop	{r4, r5, r6, pc}
   1b1b0:	push	{r4, lr}
   1b1b4:	subs	r4, r0, #0
   1b1b8:	beq	1b1dc <pclose@plt+0xa0e8>
   1b1bc:	ldr	r0, [r4]
   1b1c0:	bl	10e48 <free@plt>
   1b1c4:	mov	r0, #0
   1b1c8:	str	r0, [r4]
   1b1cc:	str	r0, [r4, #4]
   1b1d0:	str	r0, [r4, #8]
   1b1d4:	str	r0, [r4, #12]
   1b1d8:	pop	{r4, pc}
   1b1dc:	mvn	r0, #21
   1b1e0:	pop	{r4, pc}
   1b1e4:	push	{r4, lr}
   1b1e8:	subs	r4, r0, #0
   1b1ec:	beq	1b214 <pclose@plt+0xa120>
   1b1f0:	ldr	r3, [r4, #4]
   1b1f4:	ldr	r2, [r4, #12]
   1b1f8:	mov	r1, #0
   1b1fc:	ldr	r0, [r4]
   1b200:	mul	r2, r2, r3
   1b204:	bl	11004 <memset@plt>
   1b208:	mov	r0, #0
   1b20c:	str	r0, [r4, #8]
   1b210:	pop	{r4, pc}
   1b214:	mvn	r0, #21
   1b218:	pop	{r4, pc}
   1b21c:	cmp	r0, #0
   1b220:	bxeq	lr
   1b224:	ldr	r3, [r0, #12]
   1b228:	cmp	r3, r1
   1b22c:	bls	1b278 <pclose@plt+0xa184>
   1b230:	ldr	r2, [r0, #4]
   1b234:	ldr	r3, [r0]
   1b238:	cmp	r2, #0
   1b23c:	mul	r1, r2, r1
   1b240:	beq	1b278 <pclose@plt+0xa184>
   1b244:	ldrb	r0, [r3, r1]
   1b248:	cmp	r0, #0
   1b24c:	bne	1b280 <pclose@plt+0xa18c>
   1b250:	add	r0, r1, #1
   1b254:	add	r1, r3, r1
   1b258:	add	r3, r3, r0
   1b25c:	add	r0, r1, r2
   1b260:	b	1b270 <pclose@plt+0xa17c>
   1b264:	ldrb	r2, [r3], #1
   1b268:	cmp	r2, #0
   1b26c:	bne	1b280 <pclose@plt+0xa18c>
   1b270:	cmp	r3, r0
   1b274:	bne	1b264 <pclose@plt+0xa170>
   1b278:	mov	r0, #0
   1b27c:	bx	lr
   1b280:	mov	r0, #1
   1b284:	bx	lr
   1b288:	cmp	r0, #0
   1b28c:	bxeq	lr
   1b290:	ldr	r3, [r0, #12]
   1b294:	cmp	r3, r1
   1b298:	ldmhi	r0, {r0, r3}
   1b29c:	mlahi	r0, r3, r1, r0
   1b2a0:	movls	r0, #0
   1b2a4:	bx	lr
   1b2a8:	cmp	r0, #0
   1b2ac:	bxeq	lr
   1b2b0:	ldr	r3, [r0, #12]
   1b2b4:	cmp	r3, r1
   1b2b8:	ldrhi	r3, [r0]
   1b2bc:	ldrhi	r0, [r3, r1, lsl #2]
   1b2c0:	movls	r0, #0
   1b2c4:	bx	lr
   1b2c8:	push	{r4, r5, r6, lr}
   1b2cc:	subs	r4, r0, #0
   1b2d0:	beq	1b318 <pclose@plt+0xa224>
   1b2d4:	ldr	r3, [r4, #12]
   1b2d8:	mov	r5, r1
   1b2dc:	cmp	r1, r3
   1b2e0:	mov	r6, r2
   1b2e4:	bcc	1b2f4 <pclose@plt+0xa200>
   1b2e8:	bl	1b108 <pclose@plt+0xa014>
   1b2ec:	cmp	r0, #0
   1b2f0:	poplt	{r4, r5, r6, pc}
   1b2f4:	ldm	r4, {r0, r2}
   1b2f8:	mov	r1, r6
   1b2fc:	mla	r0, r5, r2, r0
   1b300:	bl	10e6c <memcpy@plt>
   1b304:	ldr	r3, [r4, #8]
   1b308:	mov	r0, #0
   1b30c:	add	r3, r3, #1
   1b310:	str	r3, [r4, #8]
   1b314:	pop	{r4, r5, r6, pc}
   1b318:	mvn	r0, #21
   1b31c:	pop	{r4, r5, r6, pc}
   1b320:	subs	r3, r0, #0
   1b324:	beq	1b378 <pclose@plt+0xa284>
   1b328:	ldr	ip, [r3, #12]
   1b32c:	push	{r4, r5, r6, lr}
   1b330:	cmp	ip, r1
   1b334:	mov	r5, r1
   1b338:	bls	1b370 <pclose@plt+0xa27c>
   1b33c:	mov	r4, r3
   1b340:	bl	1b21c <pclose@plt+0xa128>
   1b344:	cmp	r0, #0
   1b348:	popeq	{r4, r5, r6, pc}
   1b34c:	ldm	r4, {r0, r2}
   1b350:	mov	r1, #0
   1b354:	mla	r0, r5, r2, r0
   1b358:	bl	11004 <memset@plt>
   1b35c:	ldr	r3, [r4, #8]
   1b360:	mov	r0, #0
   1b364:	sub	r3, r3, #1
   1b368:	str	r3, [r4, #8]
   1b36c:	pop	{r4, r5, r6, pc}
   1b370:	mvn	r0, #21
   1b374:	pop	{r4, r5, r6, pc}
   1b378:	mvn	r0, #21
   1b37c:	bx	lr
   1b380:	ldr	r3, [r0, #8]
   1b384:	ldr	r2, [r0, #12]
   1b388:	push	{r4, r5, r6, lr}
   1b38c:	cmp	r3, r2
   1b390:	mov	r4, r0
   1b394:	mov	r5, r1
   1b398:	bcc	1b3b0 <pclose@plt+0xa2bc>
   1b39c:	mov	r1, r3
   1b3a0:	bl	1b108 <pclose@plt+0xa014>
   1b3a4:	cmp	r0, #0
   1b3a8:	poplt	{r4, r5, r6, pc}
   1b3ac:	ldr	r3, [r4, #8]
   1b3b0:	ldm	r4, {r0, r2}
   1b3b4:	mov	r1, r5
   1b3b8:	mla	r0, r3, r2, r0
   1b3bc:	bl	10e6c <memcpy@plt>
   1b3c0:	ldr	r3, [r4, #8]
   1b3c4:	mov	r0, #0
   1b3c8:	add	r3, r3, #1
   1b3cc:	str	r3, [r4, #8]
   1b3d0:	pop	{r4, r5, r6, pc}
   1b3d4:	push	{r4, lr}
   1b3d8:	ldr	r0, [r0, #16]
   1b3dc:	bl	1b2a8 <pclose@plt+0xa1b4>
   1b3e0:	adds	r0, r0, #0
   1b3e4:	movne	r0, #1
   1b3e8:	pop	{r4, pc}
   1b3ec:	push	{r4, r5, r6, lr}
   1b3f0:	mov	r5, r0
   1b3f4:	sub	sp, sp, #16
   1b3f8:	ldr	r0, [r0, #16]
   1b3fc:	mov	r4, r2
   1b400:	mov	r6, r1
   1b404:	bl	1b2a8 <pclose@plt+0xa1b4>
   1b408:	subs	r3, r0, #0
   1b40c:	beq	1b424 <pclose@plt+0xa330>
   1b410:	ldm	r3, {r1, r2, r3}
   1b414:	mov	r0, #0
   1b418:	stm	r4, {r1, r2, r3}
   1b41c:	add	sp, sp, #16
   1b420:	pop	{r4, r5, r6, pc}
   1b424:	ldr	r3, [r5, #28]
   1b428:	cmp	r3, #2
   1b42c:	mvnle	r0, #0
   1b430:	ble	1b41c <pclose@plt+0xa328>
   1b434:	ldr	r1, [pc, #60]	; 1b478 <pclose@plt+0xa384>
   1b438:	mov	r2, #5
   1b43c:	add	r1, pc, r1
   1b440:	bl	10e84 <dcgettext@plt>
   1b444:	ldr	r3, [pc, #48]	; 1b47c <pclose@plt+0xa388>
   1b448:	ldr	r2, [pc, #48]	; 1b480 <pclose@plt+0xa38c>
   1b44c:	add	r3, pc, r3
   1b450:	str	r3, [sp]
   1b454:	str	r6, [sp, #8]
   1b458:	mov	r3, #33	; 0x21
   1b45c:	add	r2, pc, r2
   1b460:	mov	r1, #3
   1b464:	str	r0, [sp, #4]
   1b468:	mov	r0, r5
   1b46c:	bl	12994 <pclose@plt+0x18a0>
   1b470:	mvn	r0, #0
   1b474:	b	1b41c <pclose@plt+0xa328>
   1b478:	strdeq	r9, [r0], -r0
   1b47c:	andeq	r9, r0, r0, lsr #23
   1b480:	strdeq	r9, [r0], -ip
   1b484:	ldr	r3, [pc, #204]	; 1b558 <pclose@plt+0xa464>
   1b488:	ldr	r2, [pc, #204]	; 1b55c <pclose@plt+0xa468>
   1b48c:	add	r3, pc, r3
   1b490:	push	{r4, r5, r6, lr}
   1b494:	sub	sp, sp, #16
   1b498:	ldr	r4, [r3, r2]
   1b49c:	mov	r6, r0
   1b4a0:	mov	r0, #12
   1b4a4:	ldr	r3, [r4]
   1b4a8:	mov	r5, r1
   1b4ac:	str	r3, [sp, #12]
   1b4b0:	bl	10f50 <malloc@plt>
   1b4b4:	cmp	r0, #0
   1b4b8:	str	r0, [sp, #8]
   1b4bc:	beq	1b500 <pclose@plt+0xa40c>
   1b4c0:	ldm	r5, {r1, ip}
   1b4c4:	mov	r3, r0
   1b4c8:	ldr	r2, [r5, #8]
   1b4cc:	str	r1, [r3]
   1b4d0:	ldr	r0, [r6, #16]
   1b4d4:	add	r1, sp, #8
   1b4d8:	str	ip, [r3, #4]
   1b4dc:	str	r2, [r3, #8]
   1b4e0:	bl	1b380 <pclose@plt+0xa28c>
   1b4e4:	mov	r0, #0
   1b4e8:	ldr	r2, [sp, #12]
   1b4ec:	ldr	r3, [r4]
   1b4f0:	cmp	r2, r3
   1b4f4:	bne	1b554 <pclose@plt+0xa460>
   1b4f8:	add	sp, sp, #16
   1b4fc:	pop	{r4, r5, r6, pc}
   1b500:	ldr	r3, [r6, #28]
   1b504:	cmp	r3, #2
   1b508:	mvnle	r0, #0
   1b50c:	ble	1b4e8 <pclose@plt+0xa3f4>
   1b510:	ldr	r1, [pc, #72]	; 1b560 <pclose@plt+0xa46c>
   1b514:	mov	r2, #5
   1b518:	add	r1, pc, r1
   1b51c:	bl	10e84 <dcgettext@plt>
   1b520:	ldr	r2, [pc, #60]	; 1b564 <pclose@plt+0xa470>
   1b524:	mov	r3, #50	; 0x32
   1b528:	add	r2, pc, r2
   1b52c:	add	r2, r2, #16
   1b530:	str	r2, [sp]
   1b534:	ldr	r2, [pc, #44]	; 1b568 <pclose@plt+0xa474>
   1b538:	mov	r1, #3
   1b53c:	add	r2, pc, r2
   1b540:	str	r0, [sp, #4]
   1b544:	mov	r0, r6
   1b548:	bl	12994 <pclose@plt+0x18a0>
   1b54c:	mvn	r0, #0
   1b550:	b	1b4e8 <pclose@plt+0xa3f4>
   1b554:	bl	10e9c <__stack_chk_fail@plt>
   1b558:	andeq	pc, r1, ip, ror #22
   1b55c:	andeq	r0, r0, r8, lsl #2
   1b560:	andeq	r0, r0, r8, ror sp
   1b564:	andeq	r9, r0, r4, asr #21
   1b568:	andeq	r9, r0, ip, lsl fp
   1b56c:	ldr	r3, [pc, #212]	; 1b648 <pclose@plt+0xa554>
   1b570:	ldr	ip, [pc, #212]	; 1b64c <pclose@plt+0xa558>
   1b574:	add	r3, pc, r3
   1b578:	push	{r4, r5, r6, r7, lr}
   1b57c:	mov	r5, r2
   1b580:	ldr	r4, [r3, ip]
   1b584:	sub	sp, sp, #20
   1b588:	mov	r6, r0
   1b58c:	ldr	r2, [r4]
   1b590:	mov	r0, #12
   1b594:	mov	r7, r1
   1b598:	str	r2, [sp, #12]
   1b59c:	bl	10f50 <malloc@plt>
   1b5a0:	cmp	r0, #0
   1b5a4:	str	r0, [sp, #8]
   1b5a8:	beq	1b5f0 <pclose@plt+0xa4fc>
   1b5ac:	ldm	r5, {r2, lr}
   1b5b0:	mov	r3, r0
   1b5b4:	ldr	ip, [r5, #8]
   1b5b8:	str	r2, [r3]
   1b5bc:	mov	r1, r7
   1b5c0:	ldr	r0, [r6, #16]
   1b5c4:	add	r2, sp, #8
   1b5c8:	str	lr, [r3, #4]
   1b5cc:	str	ip, [r3, #8]
   1b5d0:	bl	1b2c8 <pclose@plt+0xa1d4>
   1b5d4:	mov	r0, #0
   1b5d8:	ldr	r2, [sp, #12]
   1b5dc:	ldr	r3, [r4]
   1b5e0:	cmp	r2, r3
   1b5e4:	bne	1b644 <pclose@plt+0xa550>
   1b5e8:	add	sp, sp, #20
   1b5ec:	pop	{r4, r5, r6, r7, pc}
   1b5f0:	ldr	r3, [r6, #28]
   1b5f4:	cmp	r3, #2
   1b5f8:	mvnle	r0, #0
   1b5fc:	ble	1b5d8 <pclose@plt+0xa4e4>
   1b600:	ldr	r1, [pc, #72]	; 1b650 <pclose@plt+0xa55c>
   1b604:	mov	r2, #5
   1b608:	add	r1, pc, r1
   1b60c:	bl	10e84 <dcgettext@plt>
   1b610:	ldr	r2, [pc, #60]	; 1b654 <pclose@plt+0xa560>
   1b614:	mov	r3, #69	; 0x45
   1b618:	add	r2, pc, r2
   1b61c:	add	r2, r2, #32
   1b620:	str	r2, [sp]
   1b624:	ldr	r2, [pc, #44]	; 1b658 <pclose@plt+0xa564>
   1b628:	mov	r1, #3
   1b62c:	add	r2, pc, r2
   1b630:	str	r0, [sp, #4]
   1b634:	mov	r0, r6
   1b638:	bl	12994 <pclose@plt+0x18a0>
   1b63c:	mvn	r0, #0
   1b640:	b	1b5d8 <pclose@plt+0xa4e4>
   1b644:	bl	10e9c <__stack_chk_fail@plt>
   1b648:	andeq	pc, r1, r4, lsl #21
   1b64c:	andeq	r0, r0, r8, lsl #2
   1b650:	andeq	r0, r0, r8, lsl #25
   1b654:	ldrdeq	r9, [r0], -r4
   1b658:	andeq	r9, r0, ip, lsr #20
   1b65c:	push	{r4, lr}
   1b660:	mov	r4, r0
   1b664:	sub	sp, sp, #8
   1b668:	ldr	r0, [r0, #16]
   1b66c:	bl	1b320 <pclose@plt+0xa22c>
   1b670:	cmp	r0, #0
   1b674:	beq	1b688 <pclose@plt+0xa594>
   1b678:	ldr	r3, [r4, #28]
   1b67c:	cmp	r3, #2
   1b680:	mvnle	r0, #0
   1b684:	bgt	1b690 <pclose@plt+0xa59c>
   1b688:	add	sp, sp, #8
   1b68c:	pop	{r4, pc}
   1b690:	ldr	r1, [pc, #68]	; 1b6dc <pclose@plt+0xa5e8>
   1b694:	mov	r2, #5
   1b698:	add	r1, pc, r1
   1b69c:	mov	r0, #0
   1b6a0:	bl	10e84 <dcgettext@plt>
   1b6a4:	ldr	r2, [pc, #52]	; 1b6e0 <pclose@plt+0xa5ec>
   1b6a8:	mov	r3, #87	; 0x57
   1b6ac:	add	r2, pc, r2
   1b6b0:	add	r2, r2, #48	; 0x30
   1b6b4:	str	r2, [sp]
   1b6b8:	ldr	r2, [pc, #36]	; 1b6e4 <pclose@plt+0xa5f0>
   1b6bc:	mov	r1, #3
   1b6c0:	add	r2, pc, r2
   1b6c4:	str	r0, [sp, #4]
   1b6c8:	mov	r0, r4
   1b6cc:	bl	12994 <pclose@plt+0x18a0>
   1b6d0:	mvn	r0, #0
   1b6d4:	add	sp, sp, #8
   1b6d8:	pop	{r4, pc}
   1b6dc:	andeq	r9, r0, r8, asr #19
   1b6e0:	andeq	r9, r0, r0, asr #18
   1b6e4:	muleq	r0, r8, r9
   1b6e8:	ldr	r3, [pc, #140]	; 1b77c <pclose@plt+0xa688>
   1b6ec:	ldr	r2, [pc, #140]	; 1b780 <pclose@plt+0xa68c>
   1b6f0:	add	r3, pc, r3
   1b6f4:	push	{r4, r5, r6, r7, lr}
   1b6f8:	sub	sp, sp, #20
   1b6fc:	ldr	r4, [r0]
   1b700:	ldr	r7, [r3, r2]
   1b704:	mov	r6, r1
   1b708:	lsr	r4, r4, #4
   1b70c:	ldr	ip, [r7]
   1b710:	and	r4, r4, #1
   1b714:	mov	r2, r4
   1b718:	ldr	r1, [r1]
   1b71c:	mov	r5, r0
   1b720:	str	ip, [sp, #12]
   1b724:	bl	1afc4 <pclose@plt+0x9ed0>
   1b728:	mov	r2, r4
   1b72c:	ldr	r1, [r6, #4]
   1b730:	str	r0, [sp]
   1b734:	mov	r0, r5
   1b738:	bl	1afc4 <pclose@plt+0x9ed0>
   1b73c:	mov	r2, r4
   1b740:	ldr	r1, [r6, #8]
   1b744:	str	r0, [sp, #4]
   1b748:	mov	r0, r5
   1b74c:	bl	1afc4 <pclose@plt+0x9ed0>
   1b750:	mov	r1, sp
   1b754:	str	r0, [sp, #8]
   1b758:	mov	r0, r5
   1b75c:	bl	1b484 <pclose@plt+0xa390>
   1b760:	ldr	r2, [sp, #12]
   1b764:	ldr	r3, [r7]
   1b768:	cmp	r2, r3
   1b76c:	bne	1b778 <pclose@plt+0xa684>
   1b770:	add	sp, sp, #20
   1b774:	pop	{r4, r5, r6, r7, pc}
   1b778:	bl	10e9c <__stack_chk_fail@plt>
   1b77c:	andeq	pc, r1, r8, lsl #18
   1b780:	andeq	r0, r0, r8, lsl #2
   1b784:	push	{r4, lr}
   1b788:	ldr	r0, [r0, #12]
   1b78c:	bl	1b2a8 <pclose@plt+0xa1b4>
   1b790:	adds	r0, r0, #0
   1b794:	movne	r0, #1
   1b798:	pop	{r4, pc}
   1b79c:	push	{r4, r5, lr}
   1b7a0:	mov	r5, r0
   1b7a4:	sub	sp, sp, #20
   1b7a8:	mov	r4, r1
   1b7ac:	ldr	r0, [r0, #12]
   1b7b0:	ldrb	r1, [r1]
   1b7b4:	bl	1b2a8 <pclose@plt+0xa1b4>
   1b7b8:	subs	r1, r0, #0
   1b7bc:	beq	1b7dc <pclose@plt+0xa6e8>
   1b7c0:	mov	r2, #512	; 0x200
   1b7c4:	add	r0, r4, #1
   1b7c8:	bl	11010 <strncpy@plt>
   1b7cc:	mov	r0, #0
   1b7d0:	strb	r0, [r4, #512]	; 0x200
   1b7d4:	add	sp, sp, #20
   1b7d8:	pop	{r4, r5, pc}
   1b7dc:	ldr	r3, [r5, #28]
   1b7e0:	cmp	r3, #2
   1b7e4:	mvnle	r0, #0
   1b7e8:	ble	1b7d4 <pclose@plt+0xa6e0>
   1b7ec:	ldr	r1, [pc, #68]	; 1b838 <pclose@plt+0xa744>
   1b7f0:	mov	r2, #5
   1b7f4:	add	r1, pc, r1
   1b7f8:	bl	10e84 <dcgettext@plt>
   1b7fc:	ldr	r2, [pc, #56]	; 1b83c <pclose@plt+0xa748>
   1b800:	ldrb	r1, [r4]
   1b804:	add	r2, pc, r2
   1b808:	str	r2, [sp]
   1b80c:	ldr	r2, [pc, #44]	; 1b840 <pclose@plt+0xa74c>
   1b810:	str	r1, [sp, #8]
   1b814:	mov	r3, #32
   1b818:	add	r2, pc, r2
   1b81c:	mov	r1, #3
   1b820:	str	r0, [sp, #4]
   1b824:	mov	r0, r5
   1b828:	bl	12994 <pclose@plt+0x18a0>
   1b82c:	mvn	r0, #0
   1b830:	add	sp, sp, #20
   1b834:	pop	{r4, r5, pc}
   1b838:	andeq	r9, r0, r4, asr #17
   1b83c:	muleq	r0, r0, r8
   1b840:			; <UNDEFINED> instruction: 0x000098b8
   1b844:	ldr	r3, [pc, #224]	; 1b92c <pclose@plt+0xa838>
   1b848:	ldr	r2, [pc, #224]	; 1b930 <pclose@plt+0xa83c>
   1b84c:	add	r3, pc, r3
   1b850:	push	{r4, r5, r6, lr}
   1b854:	sub	sp, sp, #16
   1b858:	ldr	r6, [r3, r2]
   1b85c:	mov	r5, r0
   1b860:	mov	r4, r1
   1b864:	ldr	r3, [r6]
   1b868:	ldrb	r1, [r1]
   1b86c:	ldr	r0, [r0, #12]
   1b870:	str	r3, [sp, #12]
   1b874:	bl	1b2a8 <pclose@plt+0xa1b4>
   1b878:	cmp	r0, #0
   1b87c:	str	r0, [sp, #8]
   1b880:	beq	1b888 <pclose@plt+0xa794>
   1b884:	bl	10e48 <free@plt>
   1b888:	add	r0, r4, #1
   1b88c:	bl	10e90 <strdup@plt>
   1b890:	add	r2, sp, #16
   1b894:	ldrb	r1, [r4]
   1b898:	str	r0, [r2, #-8]!
   1b89c:	ldr	r0, [r5, #12]
   1b8a0:	bl	1b2c8 <pclose@plt+0xa1d4>
   1b8a4:	cmp	r0, #0
   1b8a8:	movge	r0, #0
   1b8ac:	blt	1b8c8 <pclose@plt+0xa7d4>
   1b8b0:	ldr	r2, [sp, #12]
   1b8b4:	ldr	r3, [r6]
   1b8b8:	cmp	r2, r3
   1b8bc:	bne	1b928 <pclose@plt+0xa834>
   1b8c0:	add	sp, sp, #16
   1b8c4:	pop	{r4, r5, r6, pc}
   1b8c8:	ldr	r0, [sp, #8]
   1b8cc:	bl	10e48 <free@plt>
   1b8d0:	ldr	r3, [r5, #28]
   1b8d4:	cmp	r3, #2
   1b8d8:	mvnle	r0, #0
   1b8dc:	ble	1b8b0 <pclose@plt+0xa7bc>
   1b8e0:	ldr	r1, [pc, #76]	; 1b934 <pclose@plt+0xa840>
   1b8e4:	mov	r2, #5
   1b8e8:	add	r1, pc, r1
   1b8ec:	mov	r0, #0
   1b8f0:	bl	10e84 <dcgettext@plt>
   1b8f4:	ldr	r2, [pc, #60]	; 1b938 <pclose@plt+0xa844>
   1b8f8:	mov	r3, #54	; 0x36
   1b8fc:	add	r2, pc, r2
   1b900:	add	r2, r2, #12
   1b904:	str	r2, [sp]
   1b908:	ldr	r2, [pc, #44]	; 1b93c <pclose@plt+0xa848>
   1b90c:	mov	r1, #3
   1b910:	add	r2, pc, r2
   1b914:	str	r0, [sp, #4]
   1b918:	mov	r0, r5
   1b91c:	bl	12994 <pclose@plt+0x18a0>
   1b920:	mvn	r0, #0
   1b924:	b	1b8b0 <pclose@plt+0xa7bc>
   1b928:	bl	10e9c <__stack_chk_fail@plt>
   1b92c:	andeq	pc, r1, ip, lsr #15
   1b930:	andeq	r0, r0, r8, lsl #2
   1b934:	andeq	r0, r0, r8, lsr #19
   1b938:	muleq	r0, r8, r7
   1b93c:	andeq	r9, r0, r0, asr #15
   1b940:	push	{r4, lr}
   1b944:	mov	r4, r0
   1b948:	sub	sp, sp, #8
   1b94c:	ldr	r0, [r0, #12]
   1b950:	bl	1b320 <pclose@plt+0xa22c>
   1b954:	cmp	r0, #0
   1b958:	movge	r0, #0
   1b95c:	blt	1b968 <pclose@plt+0xa874>
   1b960:	add	sp, sp, #8
   1b964:	pop	{r4, pc}
   1b968:	ldr	r3, [r4, #28]
   1b96c:	cmp	r3, #2
   1b970:	mvnle	r0, #0
   1b974:	ble	1b960 <pclose@plt+0xa86c>
   1b978:	ldr	r1, [pc, #68]	; 1b9c4 <pclose@plt+0xa8d0>
   1b97c:	mov	r2, #5
   1b980:	add	r1, pc, r1
   1b984:	mov	r0, #0
   1b988:	bl	10e84 <dcgettext@plt>
   1b98c:	ldr	r2, [pc, #52]	; 1b9c8 <pclose@plt+0xa8d4>
   1b990:	mov	r3, #64	; 0x40
   1b994:	add	r2, pc, r2
   1b998:	add	r2, r2, #24
   1b99c:	str	r2, [sp]
   1b9a0:	ldr	r2, [pc, #36]	; 1b9cc <pclose@plt+0xa8d8>
   1b9a4:	mov	r1, #3
   1b9a8:	add	r2, pc, r2
   1b9ac:	str	r0, [sp, #4]
   1b9b0:	mov	r0, r4
   1b9b4:	bl	12994 <pclose@plt+0x18a0>
   1b9b8:	mvn	r0, #0
   1b9bc:	add	sp, sp, #8
   1b9c0:	pop	{r4, pc}
   1b9c4:	andeq	r9, r0, r8, asr r7
   1b9c8:	andeq	r9, r0, r0, lsl #14
   1b9cc:	andeq	r9, r0, r8, lsr #14
   1b9d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b9d4:	mov	r7, r0
   1b9d8:	ldr	r6, [pc, #72]	; 1ba28 <pclose@plt+0xa934>
   1b9dc:	ldr	r5, [pc, #72]	; 1ba2c <pclose@plt+0xa938>
   1b9e0:	add	r6, pc, r6
   1b9e4:	add	r5, pc, r5
   1b9e8:	sub	r6, r6, r5
   1b9ec:	mov	r8, r1
   1b9f0:	mov	r9, r2
   1b9f4:	bl	10df8 <calloc@plt-0x20>
   1b9f8:	asrs	r6, r6, #2
   1b9fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba00:	mov	r4, #0
   1ba04:	add	r4, r4, #1
   1ba08:	ldr	r3, [r5], #4
   1ba0c:	mov	r2, r9
   1ba10:	mov	r1, r8
   1ba14:	mov	r0, r7
   1ba18:	blx	r3
   1ba1c:	cmp	r6, r4
   1ba20:	bne	1ba04 <pclose@plt+0xa910>
   1ba24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba28:	andeq	sl, r1, ip, lsl #13
   1ba2c:	andeq	sl, r1, r4, lsl #13
   1ba30:	bx	lr

Disassembly of section .fini:

0001ba34 <.fini>:
   1ba34:	push	{r3, lr}
   1ba38:	pop	{r3, pc}
