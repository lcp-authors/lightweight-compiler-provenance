
raspbian-preinstalled/gresource:     file format elf32-littlearm


Disassembly of section .init:

00010e90 <.init>:
   10e90:	push	{r3, lr}
   10e94:	bl	11340 <strcmp@plt+0x22c>
   10e98:	pop	{r3, pc}

Disassembly of section .plt:

00010e9c <g_free@plt-0x14>:
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	ldr	lr, [pc, #4]	; 10eac <g_free@plt-0x4>
   10ea4:	add	lr, pc, lr
   10ea8:	ldr	pc, [lr, #8]!
   10eac:	andeq	r2, r1, r0, ror r0

00010eb0 <g_free@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #112]!	; 0x70

00010ebc <g_resource_lookup_data@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #104]!	; 0x68

00010ec8 <g_bytes_get_data@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #96]!	; 0x60

00010ed4 <abort@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #88]!	; 0x58

00010ee0 <elf_strptr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #80]!	; 0x50

00010eec <sysconf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #72]!	; 0x48

00010ef8 <__libc_start_main@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #64]!	; 0x40

00010f04 <g_print@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #56]!	; 0x38

00010f10 <__gmon_start__@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #48]!	; 0x30

00010f1c <g_strconcat@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #40]!	; 0x28

00010f28 <g_printerr@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #32]!

00010f34 <g_string_printf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #24]!

00010f40 <g_string_new@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #73728	; 0x12000
   10f48:	ldr	pc, [ip, #16]!

00010f4c <bindtextdomain@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #73728	; 0x12000
   10f54:	ldr	pc, [ip, #8]!

00010f58 <elf_kind@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #73728	; 0x12000
   10f60:	ldr	pc, [ip, #0]!

00010f64 <g_resource_get_info@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #69632	; 0x11000
   10f6c:	ldr	pc, [ip, #4088]!	; 0xff8

00010f70 <bind_textdomain_codeset@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #69632	; 0x11000
   10f78:	ldr	pc, [ip, #4080]!	; 0xff0

00010f7c <dcgettext@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #69632	; 0x11000
   10f84:	ldr	pc, [ip, #4072]!	; 0xfe8

00010f88 <g_bytes_new_take@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #69632	; 0x11000
   10f90:	ldr	pc, [ip, #4064]!	; 0xfe0

00010f94 <g_strdup_printf@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #69632	; 0x11000
   10f9c:	ldr	pc, [ip, #4056]!	; 0xfd8

00010fa0 <g_bytes_new_static@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #69632	; 0x11000
   10fa8:	ldr	pc, [ip, #4048]!	; 0xfd0

00010fac <g_string_free@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #69632	; 0x11000
   10fb4:	ldr	pc, [ip, #4040]!	; 0xfc8

00010fb8 <strlen@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #69632	; 0x11000
   10fc0:	ldr	pc, [ip, #4032]!	; 0xfc0

00010fc4 <setlocale@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #69632	; 0x11000
   10fcc:	ldr	pc, [ip, #4024]!	; 0xfb8

00010fd0 <g_close@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #69632	; 0x11000
   10fd8:	ldr	pc, [ip, #4016]!	; 0xfb0

00010fdc <open64@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #69632	; 0x11000
   10fe4:	ldr	pc, [ip, #4008]!	; 0xfa8

00010fe8 <raise@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #69632	; 0x11000
   10ff0:	ldr	pc, [ip, #4000]!	; 0xfa0

00010ff4 <g_resource_unref@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #69632	; 0x11000
   10ffc:	ldr	pc, [ip, #3992]!	; 0xf98

00011000 <gelf_getshdr@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #69632	; 0x11000
   11008:	ldr	pc, [ip, #3984]!	; 0xf90

0001100c <strstr@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #69632	; 0x11000
   11014:	ldr	pc, [ip, #3976]!	; 0xf88

00011018 <close@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #69632	; 0x11000
   11020:	ldr	pc, [ip, #3968]!	; 0xf80

00011024 <fwrite@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #69632	; 0x11000
   1102c:	ldr	pc, [ip, #3960]!	; 0xf78

00011030 <g_str_has_prefix@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #69632	; 0x11000
   11038:	ldr	pc, [ip, #3952]!	; 0xf70

0001103c <elf_version@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #69632	; 0x11000
   11044:	ldr	pc, [ip, #3944]!	; 0xf68

00011048 <mmap64@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #69632	; 0x11000
   11050:	ldr	pc, [ip, #3936]!	; 0xf60

00011054 <__stack_chk_fail@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #69632	; 0x11000
   1105c:	ldr	pc, [ip, #3928]!	; 0xf58

00011060 <g_resource_enumerate_children@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #69632	; 0x11000
   11068:	ldr	pc, [ip, #3920]!	; 0xf50

0001106c <elf_end@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #69632	; 0x11000
   11074:	ldr	pc, [ip, #3912]!	; 0xf48

00011078 <g_bytes_unref@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #69632	; 0x11000
   11080:	ldr	pc, [ip, #3904]!	; 0xf40

00011084 <g_resource_new_from_data@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #69632	; 0x11000
   1108c:	ldr	pc, [ip, #3896]!	; 0xf38

00011090 <g_file_get_contents@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #69632	; 0x11000
   11098:	ldr	pc, [ip, #3888]!	; 0xf30

0001109c <textdomain@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #69632	; 0x11000
   110a4:	ldr	pc, [ip, #3880]!	; 0xf28

000110a8 <elf_getshdrnum@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #69632	; 0x11000
   110b0:	ldr	pc, [ip, #3872]!	; 0xf20

000110b4 <g_error_free@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #69632	; 0x11000
   110bc:	ldr	pc, [ip, #3864]!	; 0xf18

000110c0 <g_strfreev@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3856]!	; 0xf10

000110cc <strncmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3848]!	; 0xf08

000110d8 <elf_begin@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3840]!	; 0xf00

000110e4 <elf_getscn@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3832]!	; 0xef8

000110f0 <g_string_append@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3824]!	; 0xef0

000110fc <elf_getshdrstrndx@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3816]!	; 0xee8

00011108 <g_string_append_printf@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3808]!	; 0xee0

00011114 <strcmp@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3800]!	; 0xed8

Disassembly of section .text:

00011120 <.text>:
   11120:	push	{r4, r5, r6, r7, r8, lr}
   11124:	mov	r4, r0
   11128:	mov	r5, r1
   1112c:	mov	r0, #6
   11130:	ldr	r1, [pc, #408]	; 112d0 <strcmp@plt+0x1bc>
   11134:	bl	10fc4 <setlocale@plt>
   11138:	ldr	r0, [pc, #404]	; 112d4 <strcmp@plt+0x1c0>
   1113c:	bl	1109c <textdomain@plt>
   11140:	ldr	r1, [pc, #400]	; 112d8 <strcmp@plt+0x1c4>
   11144:	ldr	r0, [pc, #392]	; 112d4 <strcmp@plt+0x1c0>
   11148:	bl	10f4c <bindtextdomain@plt>
   1114c:	ldr	r1, [pc, #392]	; 112dc <strcmp@plt+0x1c8>
   11150:	ldr	r0, [pc, #380]	; 112d4 <strcmp@plt+0x1c0>
   11154:	bl	10f70 <bind_textdomain_codeset@plt>
   11158:	cmp	r4, #1
   1115c:	ble	11278 <strcmp@plt+0x164>
   11160:	cmp	r4, #3
   11164:	bgt	111b0 <strcmp@plt+0x9c>
   11168:	mov	r7, #0
   1116c:	ldr	r6, [r5, #4]
   11170:	ldr	r1, [pc, #360]	; 112e0 <strcmp@plt+0x1cc>
   11174:	mov	r0, r6
   11178:	bl	11114 <strcmp@plt>
   1117c:	cmp	r0, #0
   11180:	beq	11268 <strcmp@plt+0x154>
   11184:	cmp	r4, #4
   11188:	beq	111d0 <strcmp@plt+0xbc>
   1118c:	cmp	r4, #3
   11190:	beq	11244 <strcmp@plt+0x130>
   11194:	sub	r3, r4, #3
   11198:	cmp	r3, #1
   1119c:	bls	112b8 <strcmp@plt+0x1a4>
   111a0:	mov	r1, r6
   111a4:	mov	r0, #0
   111a8:	pop	{r4, r5, r6, r7, r8, lr}
   111ac:	b	11798 <strcmp@plt+0x684>
   111b0:	ldr	r0, [r5, #4]
   111b4:	ldr	r1, [pc, #296]	; 112e4 <strcmp@plt+0x1d0>
   111b8:	bl	11114 <strcmp@plt>
   111bc:	cmp	r0, #0
   111c0:	subeq	r4, r4, #2
   111c4:	ldreq	r7, [r5, #8]!
   111c8:	beq	1116c <strcmp@plt+0x58>
   111cc:	b	11168 <strcmp@plt+0x54>
   111d0:	ldr	r1, [pc, #272]	; 112e8 <strcmp@plt+0x1d4>
   111d4:	mov	r0, r6
   111d8:	bl	11114 <strcmp@plt>
   111dc:	subs	r3, r0, #0
   111e0:	bne	11200 <strcmp@plt+0xec>
   111e4:	ldr	r0, [r5, #8]
   111e8:	ldr	r4, [pc, #252]	; 112ec <strcmp@plt+0x1d8>
   111ec:	ldr	r2, [r5, #12]
   111f0:	mov	r1, r7
   111f4:	blx	r4
   111f8:	mov	r0, #0
   111fc:	pop	{r4, r5, r6, r7, r8, pc}
   11200:	ldr	r1, [pc, #232]	; 112f0 <strcmp@plt+0x1dc>
   11204:	mov	r0, r6
   11208:	bl	11114 <strcmp@plt>
   1120c:	subs	r3, r0, #0
   11210:	beq	112ac <strcmp@plt+0x198>
   11214:	ldr	r1, [pc, #216]	; 112f4 <strcmp@plt+0x1e0>
   11218:	mov	r0, r6
   1121c:	bl	11114 <strcmp@plt>
   11220:	cmp	r0, #0
   11224:	moveq	r3, #1
   11228:	bne	111a0 <strcmp@plt+0x8c>
   1122c:	cmp	r4, #3
   11230:	ldr	r0, [r5, #8]
   11234:	ldr	r4, [pc, #188]	; 112f8 <strcmp@plt+0x1e4>
   11238:	movle	r2, #0
   1123c:	ble	111f0 <strcmp@plt+0xdc>
   11240:	b	111ec <strcmp@plt+0xd8>
   11244:	ldr	r1, [pc, #176]	; 112fc <strcmp@plt+0x1e8>
   11248:	mov	r0, r6
   1124c:	bl	11114 <strcmp@plt>
   11250:	subs	r3, r0, #0
   11254:	bne	11288 <strcmp@plt+0x174>
   11258:	ldr	r0, [r5, #8]
   1125c:	ldr	r4, [pc, #156]	; 11300 <strcmp@plt+0x1ec>
   11260:	mov	r2, r3
   11264:	b	111f0 <strcmp@plt+0xdc>
   11268:	ldr	r1, [r5, #8]
   1126c:	mov	r0, #1
   11270:	pop	{r4, r5, r6, r7, r8, lr}
   11274:	b	11798 <strcmp@plt+0x684>
   11278:	mov	r1, #0
   1127c:	mov	r0, r1
   11280:	pop	{r4, r5, r6, r7, r8, lr}
   11284:	b	11798 <strcmp@plt+0x684>
   11288:	ldr	r1, [pc, #96]	; 112f0 <strcmp@plt+0x1dc>
   1128c:	mov	r0, r6
   11290:	bl	11114 <strcmp@plt>
   11294:	subs	r3, r0, #0
   11298:	bne	11214 <strcmp@plt+0x100>
   1129c:	ldr	r0, [r5, #8]
   112a0:	ldr	r4, [pc, #80]	; 112f8 <strcmp@plt+0x1e4>
   112a4:	mov	r2, r3
   112a8:	b	111f0 <strcmp@plt+0xdc>
   112ac:	ldr	r0, [r5, #8]
   112b0:	ldr	r4, [pc, #64]	; 112f8 <strcmp@plt+0x1e4>
   112b4:	b	111ec <strcmp@plt+0xd8>
   112b8:	ldr	r1, [pc, #48]	; 112f0 <strcmp@plt+0x1dc>
   112bc:	mov	r0, r6
   112c0:	bl	11114 <strcmp@plt>
   112c4:	subs	r3, r0, #0
   112c8:	beq	1122c <strcmp@plt+0x118>
   112cc:	b	11214 <strcmp@plt+0x100>
   112d0:	andeq	r2, r1, ip, lsl #14
   112d4:	andeq	r2, r1, r0, ror #17
   112d8:	andeq	r2, r1, r8, ror #17
   112dc:	strdeq	r2, [r1], -ip
   112e0:	andeq	r2, r1, r8, asr r3
   112e4:	andeq	r2, r1, r4, lsl #18
   112e8:	andeq	r2, r1, r8, asr #10
   112ec:	andeq	r2, r1, ip, asr r0
   112f0:	andeq	r2, r1, r4, ror #7
   112f4:	andeq	r2, r1, r8, lsl #9
   112f8:	andeq	r1, r1, ip, asr #30
   112fc:	muleq	r1, ip, r3
   11300:			; <UNDEFINED> instruction: 0x00011eb8
   11304:	mov	fp, #0
   11308:	mov	lr, #0
   1130c:	pop	{r1}		; (ldr r1, [sp], #4)
   11310:	mov	r2, sp
   11314:	push	{r2}		; (str r2, [sp, #-4]!)
   11318:	push	{r0}		; (str r0, [sp, #-4]!)
   1131c:	ldr	ip, [pc, #16]	; 11334 <strcmp@plt+0x220>
   11320:	push	{ip}		; (str ip, [sp, #-4]!)
   11324:	ldr	r0, [pc, #12]	; 11338 <strcmp@plt+0x224>
   11328:	ldr	r3, [pc, #12]	; 1133c <strcmp@plt+0x228>
   1132c:	bl	10ef8 <__libc_start_main@plt>
   11330:	bl	10ed4 <abort@plt>
   11334:	andeq	r2, r1, r0, lsl r3
   11338:	andeq	r1, r1, r0, lsr #2
   1133c:			; <UNDEFINED> instruction: 0x000122b0
   11340:	ldr	r3, [pc, #20]	; 1135c <strcmp@plt+0x248>
   11344:	ldr	r2, [pc, #20]	; 11360 <strcmp@plt+0x24c>
   11348:	add	r3, pc, r3
   1134c:	ldr	r2, [r3, r2]
   11350:	cmp	r2, #0
   11354:	bxeq	lr
   11358:	b	10f10 <__gmon_start__@plt>
   1135c:	andeq	r1, r1, ip, asr #23
   11360:	ldrdeq	r0, [r0], -ip
   11364:	ldr	r0, [pc, #24]	; 11384 <strcmp@plt+0x270>
   11368:	ldr	r3, [pc, #24]	; 11388 <strcmp@plt+0x274>
   1136c:	cmp	r3, r0
   11370:	bxeq	lr
   11374:	ldr	r3, [pc, #16]	; 1138c <strcmp@plt+0x278>
   11378:	cmp	r3, #0
   1137c:	bxeq	lr
   11380:	bx	r3
   11384:	andeq	r3, r2, r8
   11388:	andeq	r3, r2, r8
   1138c:	andeq	r0, r0, r0
   11390:	ldr	r0, [pc, #36]	; 113bc <strcmp@plt+0x2a8>
   11394:	ldr	r1, [pc, #36]	; 113c0 <strcmp@plt+0x2ac>
   11398:	sub	r1, r1, r0
   1139c:	asr	r1, r1, #2
   113a0:	add	r1, r1, r1, lsr #31
   113a4:	asrs	r1, r1, #1
   113a8:	bxeq	lr
   113ac:	ldr	r3, [pc, #16]	; 113c4 <strcmp@plt+0x2b0>
   113b0:	cmp	r3, #0
   113b4:	bxeq	lr
   113b8:	bx	r3
   113bc:	andeq	r3, r2, r8
   113c0:	andeq	r3, r2, r8
   113c4:	andeq	r0, r0, r0
   113c8:	push	{r4, lr}
   113cc:	ldr	r4, [pc, #24]	; 113ec <strcmp@plt+0x2d8>
   113d0:	ldrb	r3, [r4]
   113d4:	cmp	r3, #0
   113d8:	popne	{r4, pc}
   113dc:	bl	11364 <strcmp@plt+0x250>
   113e0:	mov	r3, #1
   113e4:	strb	r3, [r4]
   113e8:	pop	{r4, pc}
   113ec:	andeq	r3, r2, ip
   113f0:	b	11390 <strcmp@plt+0x27c>
   113f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113f8:	sub	sp, sp, #84	; 0x54
   113fc:	ldr	r8, [pc, #216]	; 114dc <strcmp@plt+0x3c8>
   11400:	mov	r6, r0
   11404:	mov	r9, r1
   11408:	ldr	r3, [r8]
   1140c:	mov	r1, sp
   11410:	str	r3, [sp, #76]	; 0x4c
   11414:	mov	sl, r2
   11418:	bl	110fc <elf_getshdrstrndx@plt>
   1141c:	mov	r0, r6
   11420:	add	r1, sp, #4
   11424:	bl	110a8 <elf_getshdrnum@plt>
   11428:	ldr	r3, [sp, #4]
   1142c:	cmp	r3, #1
   11430:	bls	114c0 <strcmp@plt+0x3ac>
   11434:	ldr	r7, [pc, #164]	; 114e0 <strcmp@plt+0x3cc>
   11438:	mov	r4, #1
   1143c:	b	11450 <strcmp@plt+0x33c>
   11440:	ldr	r3, [sp, #4]
   11444:	add	r4, r4, #1
   11448:	cmp	r3, r4
   1144c:	bls	114c0 <strcmp@plt+0x3ac>
   11450:	mov	r1, r4
   11454:	mov	r0, r6
   11458:	bl	110e4 <elf_getscn@plt>
   1145c:	cmp	r0, #0
   11460:	beq	11440 <strcmp@plt+0x32c>
   11464:	add	r1, sp, #8
   11468:	bl	11000 <gelf_getshdr@plt>
   1146c:	subs	r5, r0, #0
   11470:	beq	11440 <strcmp@plt+0x32c>
   11474:	ldr	r3, [r5, #4]
   11478:	cmp	r3, #1
   1147c:	bne	11440 <strcmp@plt+0x32c>
   11480:	ldr	r2, [r5]
   11484:	ldr	r1, [sp]
   11488:	mov	r0, r6
   1148c:	bl	10ee0 <elf_strptr@plt>
   11490:	subs	fp, r0, #0
   11494:	beq	11440 <strcmp@plt+0x32c>
   11498:	mov	r1, r7
   1149c:	bl	11030 <g_str_has_prefix@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	11440 <strcmp@plt+0x32c>
   114a8:	add	r1, fp, #11
   114ac:	mov	r0, r5
   114b0:	mov	r2, sl
   114b4:	blx	r9
   114b8:	cmp	r0, #0
   114bc:	bne	11440 <strcmp@plt+0x32c>
   114c0:	ldr	r2, [sp, #76]	; 0x4c
   114c4:	ldr	r3, [r8]
   114c8:	cmp	r2, r3
   114cc:	bne	114d8 <strcmp@plt+0x3c4>
   114d0:	add	sp, sp, #84	; 0x54
   114d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114d8:	bl	11054 <__stack_chk_fail@plt>
   114dc:	andeq	r2, r2, r0, ror #27
   114e0:	andeq	r2, r1, r0, lsr #6
   114e4:	push	{r4, r5, r6, lr}
   114e8:	sub	sp, sp, #16
   114ec:	ldr	r5, [pc, #92]	; 11550 <strcmp@plt+0x43c>
   114f0:	mov	r3, #0
   114f4:	add	r2, sp, #8
   114f8:	ldr	ip, [r5]
   114fc:	add	r1, sp, #4
   11500:	str	ip, [sp, #12]
   11504:	bl	11090 <g_file_get_contents@plt>
   11508:	subs	r4, r0, #0
   1150c:	beq	11530 <strcmp@plt+0x41c>
   11510:	ldrd	r0, [sp, #4]
   11514:	bl	10f88 <g_bytes_new_take@plt>
   11518:	mov	r1, #0
   1151c:	mov	r6, r0
   11520:	bl	11084 <g_resource_new_from_data@plt>
   11524:	mov	r4, r0
   11528:	mov	r0, r6
   1152c:	bl	11078 <g_bytes_unref@plt>
   11530:	ldr	r2, [sp, #12]
   11534:	ldr	r3, [r5]
   11538:	mov	r0, r4
   1153c:	cmp	r2, r3
   11540:	bne	1154c <strcmp@plt+0x438>
   11544:	add	sp, sp, #16
   11548:	pop	{r4, r5, r6, pc}
   1154c:	bl	11054 <__stack_chk_fail@plt>
   11550:	andeq	r2, r2, r0, ror #27
   11554:	push	{r4, lr}
   11558:	ldr	r0, [pc, #8]	; 11568 <strcmp@plt+0x454>
   1155c:	bl	10f04 <g_print@plt>
   11560:	mov	r0, #1
   11564:	pop	{r4, pc}
   11568:	ldrdeq	r2, [r1], -ip
   1156c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11570:	mov	ip, #0
   11574:	ldr	r8, [pc, #372]	; 116f0 <strcmp@plt+0x5dc>
   11578:	sub	sp, sp, #36	; 0x24
   1157c:	mov	sl, r2
   11580:	ldr	lr, [r8]
   11584:	mov	r5, r3
   11588:	mov	r2, ip
   1158c:	add	r3, sp, #24
   11590:	str	lr, [sp, #28]
   11594:	str	ip, [sp, #24]
   11598:	mov	r9, r0
   1159c:	mov	r7, r1
   115a0:	bl	11060 <g_resource_enumerate_children@plt>
   115a4:	ldr	r3, [sp, #24]
   115a8:	cmp	r3, #0
   115ac:	str	r0, [sp, #12]
   115b0:	bne	116c4 <strcmp@plt+0x5b0>
   115b4:	ldr	r1, [r0]
   115b8:	cmp	r1, #0
   115bc:	ldrne	r6, [sp, #12]
   115c0:	beq	11688 <strcmp@plt+0x574>
   115c4:	mov	r2, #0
   115c8:	mov	r0, r7
   115cc:	bl	10f1c <g_strconcat@plt>
   115d0:	mov	r4, r0
   115d4:	bl	10fb8 <strlen@plt>
   115d8:	mov	fp, r0
   115dc:	mov	r0, r5
   115e0:	bl	10fb8 <strlen@plt>
   115e4:	mov	r1, r5
   115e8:	cmp	fp, r0
   115ec:	movcs	r2, r0
   115f0:	movcc	r2, fp
   115f4:	mov	r0, r4
   115f8:	bl	110cc <strncmp@plt>
   115fc:	subs	r2, r0, #0
   11600:	bne	11674 <strcmp@plt+0x560>
   11604:	add	r3, sp, #20
   11608:	str	r3, [sp]
   1160c:	str	r2, [sp, #4]
   11610:	add	r3, sp, #16
   11614:	mov	r1, r4
   11618:	mov	r0, r9
   1161c:	bl	10f64 <g_resource_get_info@plt>
   11620:	ldr	r3, [sp, #72]	; 0x48
   11624:	cmp	r0, #0
   11628:	beq	116a8 <strcmp@plt+0x594>
   1162c:	cmp	r3, #0
   11630:	beq	116dc <strcmp@plt+0x5c8>
   11634:	ldr	r3, [sp, #20]
   11638:	ldr	r1, [pc, #180]	; 116f4 <strcmp@plt+0x5e0>
   1163c:	ldrb	r2, [sl]
   11640:	tst	r3, #1
   11644:	ldr	r3, [pc, #172]	; 116f8 <strcmp@plt+0x5e4>
   11648:	moveq	r3, r1
   1164c:	ldr	r1, [pc, #168]	; 116fc <strcmp@plt+0x5e8>
   11650:	cmp	r2, #0
   11654:	stm	sp, {r3, r4}
   11658:	ldr	r3, [pc, #160]	; 11700 <strcmp@plt+0x5ec>
   1165c:	moveq	r3, r1
   11660:	mov	r2, r3
   11664:	mov	r1, sl
   11668:	ldr	r3, [sp, #16]
   1166c:	ldr	r0, [pc, #144]	; 11704 <strcmp@plt+0x5f0>
   11670:	bl	10f04 <g_print@plt>
   11674:	mov	r0, r4
   11678:	bl	10eb0 <g_free@plt>
   1167c:	ldr	r1, [r6, #4]!
   11680:	cmp	r1, #0
   11684:	bne	115c4 <strcmp@plt+0x4b0>
   11688:	ldr	r0, [sp, #12]
   1168c:	bl	110c0 <g_strfreev@plt>
   11690:	ldr	r2, [sp, #28]
   11694:	ldr	r3, [r8]
   11698:	cmp	r2, r3
   1169c:	bne	116ec <strcmp@plt+0x5d8>
   116a0:	add	sp, sp, #36	; 0x24
   116a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116a8:	str	r3, [sp]
   116ac:	mov	r2, sl
   116b0:	mov	r3, r5
   116b4:	mov	r1, r4
   116b8:	mov	r0, r9
   116bc:	bl	1156c <strcmp@plt+0x458>
   116c0:	b	11674 <strcmp@plt+0x560>
   116c4:	ldr	r1, [r3, #8]
   116c8:	ldr	r0, [pc, #56]	; 11708 <strcmp@plt+0x5f4>
   116cc:	bl	10f28 <g_printerr@plt>
   116d0:	ldr	r0, [sp, #24]
   116d4:	bl	110b4 <g_error_free@plt>
   116d8:	b	11690 <strcmp@plt+0x57c>
   116dc:	mov	r1, r4
   116e0:	ldr	r0, [pc, #32]	; 11708 <strcmp@plt+0x5f4>
   116e4:	bl	10f04 <g_print@plt>
   116e8:	b	11674 <strcmp@plt+0x560>
   116ec:	bl	11054 <__stack_chk_fail@plt>
   116f0:	andeq	r2, r2, r0, ror #27
   116f4:	andeq	r2, r1, r4, lsr r3
   116f8:	andeq	r2, r1, r0, lsr r3
   116fc:	andeq	r2, r1, ip, lsl #14
   11700:	andeq	r2, r1, ip, lsr #6
   11704:	andeq	r2, r1, r8, lsr r3
   11708:	ldrdeq	r2, [r1], -ip
   1170c:	push	{r4, r5, lr}
   11710:	mov	r3, #0
   11714:	ldr	r4, [pc, #112]	; 1178c <strcmp@plt+0x678>
   11718:	sub	sp, sp, #12
   1171c:	mov	r2, r3
   11720:	ldr	ip, [r4]
   11724:	str	ip, [sp, #4]
   11728:	bl	10ebc <g_resource_lookup_data@plt>
   1172c:	subs	r5, r0, #0
   11730:	beq	11764 <strcmp@plt+0x650>
   11734:	mov	r1, sp
   11738:	bl	10ec8 <g_bytes_get_data@plt>
   1173c:	ldr	r3, [pc, #76]	; 11790 <strcmp@plt+0x67c>
   11740:	ldr	r2, [sp]
   11744:	mov	r1, #1
   11748:	ldr	r3, [r3]
   1174c:	bl	11024 <fwrite@plt>
   11750:	ldr	r3, [sp]
   11754:	cmp	r3, r0
   11758:	bhi	1177c <strcmp@plt+0x668>
   1175c:	mov	r0, r5
   11760:	bl	11078 <g_bytes_unref@plt>
   11764:	ldr	r2, [sp, #4]
   11768:	ldr	r3, [r4]
   1176c:	cmp	r2, r3
   11770:	bne	11788 <strcmp@plt+0x674>
   11774:	add	sp, sp, #12
   11778:	pop	{r4, r5, pc}
   1177c:	ldr	r0, [pc, #16]	; 11794 <strcmp@plt+0x680>
   11780:	bl	10f28 <g_printerr@plt>
   11784:	b	1175c <strcmp@plt+0x648>
   11788:	bl	11054 <__stack_chk_fail@plt>
   1178c:	andeq	r2, r2, r0, ror #27
   11790:	andeq	r3, r2, r8
   11794:	andeq	r2, r1, r8, asr #6
   11798:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1179c:	mov	r5, r0
   117a0:	sub	sp, sp, #16
   117a4:	mov	r0, #0
   117a8:	mov	r6, r1
   117ac:	bl	10f40 <g_string_new@plt>
   117b0:	cmp	r6, #0
   117b4:	mov	r4, r0
   117b8:	beq	11a74 <strcmp@plt+0x960>
   117bc:	ldr	r1, [pc, #1000]	; 11bac <strcmp@plt+0xa98>
   117c0:	mov	r0, r6
   117c4:	bl	11114 <strcmp@plt>
   117c8:	subs	r8, r0, #0
   117cc:	beq	119d8 <strcmp@plt+0x8c4>
   117d0:	ldr	r1, [pc, #984]	; 11bb0 <strcmp@plt+0xa9c>
   117d4:	mov	r0, r6
   117d8:	bl	11114 <strcmp@plt>
   117dc:	subs	r8, r0, #0
   117e0:	beq	11b90 <strcmp@plt+0xa7c>
   117e4:	ldr	r1, [pc, #968]	; 11bb4 <strcmp@plt+0xaa0>
   117e8:	mov	r0, r6
   117ec:	bl	11114 <strcmp@plt>
   117f0:	subs	r8, r0, #0
   117f4:	moveq	r2, #5
   117f8:	ldreq	r1, [pc, #952]	; 11bb8 <strcmp@plt+0xaa4>
   117fc:	beq	11afc <strcmp@plt+0x9e8>
   11800:	ldr	r1, [pc, #948]	; 11bbc <strcmp@plt+0xaa8>
   11804:	mov	r0, r6
   11808:	bl	11114 <strcmp@plt>
   1180c:	subs	r8, r0, #0
   11810:	beq	11af4 <strcmp@plt+0x9e0>
   11814:	ldr	r1, [pc, #932]	; 11bc0 <strcmp@plt+0xaac>
   11818:	mov	r0, r6
   1181c:	bl	11114 <strcmp@plt>
   11820:	mov	r2, #5
   11824:	subs	r8, r0, #0
   11828:	bne	11a54 <strcmp@plt+0x940>
   1182c:	ldr	r1, [pc, #912]	; 11bc4 <strcmp@plt+0xab0>
   11830:	bl	10f7c <dcgettext@plt>
   11834:	ldr	r1, [pc, #908]	; 11bc8 <strcmp@plt+0xab4>
   11838:	mov	r2, #5
   1183c:	mov	sl, r0
   11840:	mov	r0, r8
   11844:	bl	10f7c <dcgettext@plt>
   11848:	mov	r2, #5
   1184c:	ldr	r1, [pc, #888]	; 11bcc <strcmp@plt+0xab8>
   11850:	mov	r7, r0
   11854:	mov	r0, r8
   11858:	bl	10f7c <dcgettext@plt>
   1185c:	mov	r1, r0
   11860:	ldr	r0, [pc, #872]	; 11bd0 <strcmp@plt+0xabc>
   11864:	bl	10f94 <g_strdup_printf@plt>
   11868:	mov	r2, #5
   1186c:	ldr	r1, [pc, #864]	; 11bd4 <strcmp@plt+0xac0>
   11870:	mov	r8, r0
   11874:	mov	r0, #0
   11878:	bl	10f7c <dcgettext@plt>
   1187c:	cmp	r8, #0
   11880:	beq	11a0c <strcmp@plt+0x8f8>
   11884:	ldrb	r9, [r7]
   11888:	cmp	r9, #0
   1188c:	beq	11b10 <strcmp@plt+0x9fc>
   11890:	mov	r1, r0
   11894:	ldr	r3, [pc, #828]	; 11bd8 <strcmp@plt+0xac4>
   11898:	mov	r2, r8
   1189c:	mov	r0, r4
   118a0:	stm	sp, {r6, r7, sl}
   118a4:	bl	11108 <g_string_append_printf@plt>
   118a8:	ldr	r1, [pc, #812]	; 11bdc <strcmp@plt+0xac8>
   118ac:	mov	r2, #5
   118b0:	mov	r0, #0
   118b4:	bl	10f7c <dcgettext@plt>
   118b8:	mov	r1, r0
   118bc:	mov	r0, r4
   118c0:	bl	110f0 <g_string_append@plt>
   118c4:	ldr	r1, [pc, #788]	; 11be0 <strcmp@plt+0xacc>
   118c8:	mov	r2, #5
   118cc:	mov	r0, #0
   118d0:	bl	10f7c <dcgettext@plt>
   118d4:	mov	r1, r0
   118d8:	mov	r0, r4
   118dc:	bl	110f0 <g_string_append@plt>
   118e0:	mov	r2, #5
   118e4:	ldr	r1, [pc, #760]	; 11be4 <strcmp@plt+0xad0>
   118e8:	mov	r0, #0
   118ec:	bl	10f7c <dcgettext@plt>
   118f0:	mov	r1, r0
   118f4:	mov	r0, r7
   118f8:	bl	1100c <strstr@plt>
   118fc:	cmp	r0, #0
   11900:	beq	11920 <strcmp@plt+0x80c>
   11904:	ldr	r1, [pc, #732]	; 11be8 <strcmp@plt+0xad4>
   11908:	mov	r2, #5
   1190c:	mov	r0, #0
   11910:	bl	10f7c <dcgettext@plt>
   11914:	mov	r1, r0
   11918:	mov	r0, r4
   1191c:	bl	110f0 <g_string_append@plt>
   11920:	mov	r2, #5
   11924:	ldr	r1, [pc, #704]	; 11bec <strcmp@plt+0xad8>
   11928:	mov	r0, #0
   1192c:	bl	10f7c <dcgettext@plt>
   11930:	mov	r1, r0
   11934:	mov	r0, r7
   11938:	bl	1100c <strstr@plt>
   1193c:	cmp	r0, #0
   11940:	beq	11974 <strcmp@plt+0x860>
   11944:	ldr	r1, [pc, #612]	; 11bb0 <strcmp@plt+0xa9c>
   11948:	mov	r0, r6
   1194c:	bl	11114 <strcmp@plt>
   11950:	mov	r2, #5
   11954:	cmp	r0, #0
   11958:	movne	r0, #0
   1195c:	ldreq	r1, [pc, #652]	; 11bf0 <strcmp@plt+0xadc>
   11960:	ldrne	r1, [pc, #652]	; 11bf4 <strcmp@plt+0xae0>
   11964:	bl	10f7c <dcgettext@plt>
   11968:	mov	r1, r0
   1196c:	mov	r0, r4
   11970:	bl	110f0 <g_string_append@plt>
   11974:	mov	r2, #5
   11978:	ldr	r1, [pc, #632]	; 11bf8 <strcmp@plt+0xae4>
   1197c:	mov	r0, #0
   11980:	bl	10f7c <dcgettext@plt>
   11984:	mov	r1, r0
   11988:	mov	r0, r7
   1198c:	bl	1100c <strstr@plt>
   11990:	mov	r2, #5
   11994:	subs	r6, r0, #0
   11998:	beq	11b54 <strcmp@plt+0xa40>
   1199c:	ldr	r1, [pc, #600]	; 11bfc <strcmp@plt+0xae8>
   119a0:	mov	r0, #0
   119a4:	bl	10f7c <dcgettext@plt>
   119a8:	mov	r1, r0
   119ac:	mov	r0, r4
   119b0:	bl	110f0 <g_string_append@plt>
   119b4:	ldr	r1, [pc, #580]	; 11c00 <strcmp@plt+0xaec>
   119b8:	mov	r0, r4
   119bc:	bl	110f0 <g_string_append@plt>
   119c0:	cmp	r5, #0
   119c4:	ldr	r1, [r4]
   119c8:	bne	11aa0 <strcmp@plt+0x98c>
   119cc:	ldr	r0, [pc, #560]	; 11c04 <strcmp@plt+0xaf0>
   119d0:	bl	10f28 <g_printerr@plt>
   119d4:	b	11aa8 <strcmp@plt+0x994>
   119d8:	mov	r2, #5
   119dc:	ldr	r1, [pc, #548]	; 11c08 <strcmp@plt+0xaf4>
   119e0:	bl	10f7c <dcgettext@plt>
   119e4:	ldr	r1, [pc, #504]	; 11be4 <strcmp@plt+0xad0>
   119e8:	mov	r2, #5
   119ec:	mov	sl, r0
   119f0:	mov	r0, r8
   119f4:	bl	10f7c <dcgettext@plt>
   119f8:	mov	r2, #5
   119fc:	ldr	r1, [pc, #464]	; 11bd4 <strcmp@plt+0xac0>
   11a00:	mov	r7, r0
   11a04:	mov	r0, r8
   11a08:	bl	10f7c <dcgettext@plt>
   11a0c:	ldrb	r8, [r7]
   11a10:	cmp	r8, #0
   11a14:	beq	11ac8 <strcmp@plt+0x9b4>
   11a18:	ldr	r3, [pc, #492]	; 11c0c <strcmp@plt+0xaf8>
   11a1c:	mov	r1, r0
   11a20:	mov	r2, r3
   11a24:	mov	r0, r4
   11a28:	stm	sp, {r6, r7, sl}
   11a2c:	bl	11108 <g_string_append_printf@plt>
   11a30:	mov	r2, #5
   11a34:	ldr	r1, [pc, #416]	; 11bdc <strcmp@plt+0xac8>
   11a38:	mov	r0, #0
   11a3c:	bl	10f7c <dcgettext@plt>
   11a40:	mov	r8, #0
   11a44:	mov	r1, r0
   11a48:	mov	r0, r4
   11a4c:	bl	110f0 <g_string_append@plt>
   11a50:	b	118e0 <strcmp@plt+0x7cc>
   11a54:	ldr	r1, [pc, #436]	; 11c10 <strcmp@plt+0xafc>
   11a58:	mov	r0, #0
   11a5c:	bl	10f7c <dcgettext@plt>
   11a60:	mov	r2, r6
   11a64:	mov	r5, #0
   11a68:	mov	r1, r0
   11a6c:	mov	r0, r4
   11a70:	bl	10f34 <g_string_printf@plt>
   11a74:	mov	r2, #5
   11a78:	ldr	r1, [pc, #404]	; 11c14 <strcmp@plt+0xb00>
   11a7c:	mov	r0, #0
   11a80:	bl	10f7c <dcgettext@plt>
   11a84:	mov	r8, #0
   11a88:	mov	r1, r0
   11a8c:	mov	r0, r4
   11a90:	bl	110f0 <g_string_append@plt>
   11a94:	cmp	r5, #0
   11a98:	ldr	r1, [r4]
   11a9c:	beq	119cc <strcmp@plt+0x8b8>
   11aa0:	ldr	r0, [pc, #368]	; 11c18 <strcmp@plt+0xb04>
   11aa4:	bl	10f04 <g_print@plt>
   11aa8:	mov	r0, r8
   11aac:	bl	10eb0 <g_free@plt>
   11ab0:	mov	r0, r4
   11ab4:	mov	r1, #1
   11ab8:	bl	10fac <g_string_free@plt>
   11abc:	eor	r0, r5, #1
   11ac0:	add	sp, sp, #16
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac8:	ldr	r3, [pc, #316]	; 11c0c <strcmp@plt+0xaf8>
   11acc:	mov	r1, r0
   11ad0:	mov	r2, r3
   11ad4:	str	sl, [sp, #8]
   11ad8:	str	r6, [sp]
   11adc:	str	r3, [sp, #4]
   11ae0:	mov	r0, r4
   11ae4:	bl	11108 <g_string_append_printf@plt>
   11ae8:	mov	r2, #5
   11aec:	ldr	r1, [pc, #232]	; 11bdc <strcmp@plt+0xac8>
   11af0:	b	118cc <strcmp@plt+0x7b8>
   11af4:	ldr	r1, [pc, #288]	; 11c1c <strcmp@plt+0xb08>
   11af8:	mov	r2, #5
   11afc:	bl	10f7c <dcgettext@plt>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #276]	; 11c20 <strcmp@plt+0xb0c>
   11b08:	mov	sl, r0
   11b0c:	b	11840 <strcmp@plt+0x72c>
   11b10:	ldr	r3, [pc, #244]	; 11c0c <strcmp@plt+0xaf8>
   11b14:	mov	r1, r0
   11b18:	str	r3, [sp, #4]
   11b1c:	mov	r2, r8
   11b20:	ldr	r3, [pc, #176]	; 11bd8 <strcmp@plt+0xac4>
   11b24:	mov	r0, r4
   11b28:	str	sl, [sp, #8]
   11b2c:	str	r6, [sp]
   11b30:	bl	11108 <g_string_append_printf@plt>
   11b34:	mov	r0, r9
   11b38:	mov	r2, #5
   11b3c:	ldr	r1, [pc, #152]	; 11bdc <strcmp@plt+0xac8>
   11b40:	bl	10f7c <dcgettext@plt>
   11b44:	mov	r1, r0
   11b48:	mov	r0, r4
   11b4c:	bl	110f0 <g_string_append@plt>
   11b50:	b	118c4 <strcmp@plt+0x7b0>
   11b54:	ldr	r1, [pc, #200]	; 11c24 <strcmp@plt+0xb10>
   11b58:	bl	10f7c <dcgettext@plt>
   11b5c:	mov	r1, r0
   11b60:	mov	r0, r7
   11b64:	bl	1100c <strstr@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	119b4 <strcmp@plt+0x8a0>
   11b70:	mov	r0, r6
   11b74:	mov	r2, #5
   11b78:	ldr	r1, [pc, #168]	; 11c28 <strcmp@plt+0xb14>
   11b7c:	bl	10f7c <dcgettext@plt>
   11b80:	mov	r1, r0
   11b84:	mov	r0, r4
   11b88:	bl	110f0 <g_string_append@plt>
   11b8c:	b	119b4 <strcmp@plt+0x8a0>
   11b90:	mov	r2, #5
   11b94:	ldr	r1, [pc, #144]	; 11c2c <strcmp@plt+0xb18>
   11b98:	bl	10f7c <dcgettext@plt>
   11b9c:	mov	r2, #5
   11ba0:	ldr	r1, [pc, #68]	; 11bec <strcmp@plt+0xad8>
   11ba4:	mov	sl, r0
   11ba8:	b	119f0 <strcmp@plt+0x8dc>
   11bac:	andeq	r2, r1, r8, asr r3
   11bb0:	muleq	r1, ip, r3
   11bb4:	andeq	r2, r1, r4, ror #7
   11bb8:	andeq	r2, r1, ip, ror #7
   11bbc:	andeq	r2, r1, r8, lsl #9
   11bc0:	andeq	r2, r1, r8, asr #10
   11bc4:	andeq	r2, r1, r0, asr r5
   11bc8:	andeq	r2, r1, r4, ror r5
   11bcc:	andeq	r2, r1, r0, ror r4
   11bd0:	andeq	r2, r1, r8, ror r4
   11bd4:	andeq	r2, r1, r8, ror r3
   11bd8:	andeq	r2, r1, ip, lsr #6
   11bdc:	andeq	r2, r1, r4, ror r8
   11be0:	andeq	r2, r1, r0, lsl r7
   11be4:	andeq	r2, r1, ip, ror #6
   11be8:	andeq	r2, r1, ip, lsr r7
   11bec:	ldrdeq	r2, [r1], -ip
   11bf0:	andeq	r2, r1, ip, ror #14
   11bf4:	andeq	r2, r1, r4, lsr #15
   11bf8:	andeq	r2, r1, r4, lsl #16
   11bfc:	andeq	r2, r1, ip, lsl #16
   11c00:	andeq	r2, r1, r4, asr #16
   11c04:	ldrdeq	r2, [r1], -ip
   11c08:	andeq	r2, r1, r0, ror #6
   11c0c:	andeq	r2, r1, ip, lsl #14
   11c10:	andeq	r2, r1, r0, lsl #11
   11c14:	muleq	r1, r8, r5
   11c18:	andeq	r2, r1, r0, ror r8
   11c1c:	muleq	r1, r0, r4
   11c20:	andeq	r2, r1, r4, ror #8
   11c24:	andeq	r2, r1, r8, asr #16
   11c28:	andeq	r2, r1, r0, asr r8
   11c2c:	andeq	r2, r1, r8, lsr #7
   11c30:	push	{r4, r5, r6, lr}
   11c34:	mov	r4, r0
   11c38:	mov	r0, #1
   11c3c:	mov	r5, r1
   11c40:	bl	1103c <elf_version@plt>
   11c44:	cmp	r0, #0
   11c48:	beq	11ca4 <strcmp@plt+0xb90>
   11c4c:	mov	r2, #0
   11c50:	mov	r0, r4
   11c54:	mov	r1, r2
   11c58:	bl	10fdc <open64@plt>
   11c5c:	cmp	r0, #0
   11c60:	str	r0, [r5]
   11c64:	blt	11ca4 <strcmp@plt+0xb90>
   11c68:	mov	r2, #0
   11c6c:	mov	r1, #1
   11c70:	bl	110d8 <elf_begin@plt>
   11c74:	subs	r4, r0, #0
   11c78:	beq	11c90 <strcmp@plt+0xb7c>
   11c7c:	bl	10f58 <elf_kind@plt>
   11c80:	cmp	r0, #3
   11c84:	bne	11c90 <strcmp@plt+0xb7c>
   11c88:	mov	r0, r4
   11c8c:	pop	{r4, r5, r6, pc}
   11c90:	mov	r1, #0
   11c94:	ldr	r0, [r5]
   11c98:	bl	10fd0 <g_close@plt>
   11c9c:	mvn	r3, #0
   11ca0:	str	r3, [r5]
   11ca4:	mov	r4, #0
   11ca8:	mov	r0, r4
   11cac:	pop	{r4, r5, r6, pc}
   11cb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cb4:	sub	sp, sp, #24
   11cb8:	ldr	r8, [pc, #224]	; 11da0 <strcmp@plt+0xc8c>
   11cbc:	mov	r4, r0
   11cc0:	mov	r0, #30
   11cc4:	ldr	r3, [r8]
   11cc8:	mov	r9, r1
   11ccc:	mov	sl, r2
   11cd0:	str	r3, [sp, #20]
   11cd4:	bl	10eec <sysconf@plt>
   11cd8:	ldm	r4, {r5, r6}
   11cdc:	mov	r4, #0
   11ce0:	mov	r3, r4
   11ce4:	mov	r1, r6
   11ce8:	mov	r2, r0
   11cec:	mov	r0, r5
   11cf0:	bl	1213c <strcmp@plt+0x1028>
   11cf4:	ldr	r1, [r9]
   11cf8:	mov	r0, r4
   11cfc:	str	sl, [sp]
   11d00:	subs	r5, r5, r2
   11d04:	sbc	r6, r6, r3
   11d08:	mov	r7, r2
   11d0c:	str	r5, [sp, #8]
   11d10:	str	r6, [sp, #12]
   11d14:	add	r1, r1, r7
   11d18:	mov	r3, #2
   11d1c:	mov	r2, #1
   11d20:	bl	11048 <mmap64@plt>
   11d24:	cmn	r0, #1
   11d28:	beq	11d90 <strcmp@plt+0xc7c>
   11d2c:	ldr	r1, [r9]
   11d30:	add	r0, r0, r7
   11d34:	str	r4, [sp, #16]
   11d38:	bl	10fa0 <g_bytes_new_static@plt>
   11d3c:	add	r1, sp, #16
   11d40:	mov	r5, r0
   11d44:	bl	11084 <g_resource_new_from_data@plt>
   11d48:	mov	r4, r0
   11d4c:	mov	r0, r5
   11d50:	bl	11078 <g_bytes_unref@plt>
   11d54:	ldr	r3, [sp, #16]
   11d58:	cmp	r3, #0
   11d5c:	beq	11d74 <strcmp@plt+0xc60>
   11d60:	ldr	r0, [pc, #60]	; 11da4 <strcmp@plt+0xc90>
   11d64:	ldr	r1, [r3, #8]
   11d68:	bl	10f28 <g_printerr@plt>
   11d6c:	ldr	r0, [sp, #16]
   11d70:	bl	110b4 <g_error_free@plt>
   11d74:	ldr	r2, [sp, #20]
   11d78:	ldr	r3, [r8]
   11d7c:	mov	r0, r4
   11d80:	cmp	r2, r3
   11d84:	bne	11d9c <strcmp@plt+0xc88>
   11d88:	add	sp, sp, #24
   11d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d90:	ldr	r0, [pc, #16]	; 11da8 <strcmp@plt+0xc94>
   11d94:	bl	10f28 <g_printerr@plt>
   11d98:	b	11d74 <strcmp@plt+0xc60>
   11d9c:	bl	11054 <__stack_chk_fail@plt>
   11da0:	andeq	r2, r2, r0, ror #27
   11da4:	ldrdeq	r2, [r1], -ip
   11da8:	andeq	r2, r1, r0, lsl #17
   11dac:	push	{r4, r5, r6, lr}
   11db0:	mov	r4, r2
   11db4:	ldr	r3, [r2, #4]
   11db8:	sub	sp, sp, #8
   11dbc:	cmp	r3, #0
   11dc0:	mov	r6, r0
   11dc4:	mov	r5, r1
   11dc8:	beq	11de4 <strcmp@plt+0xcd0>
   11dcc:	mov	r1, r3
   11dd0:	mov	r0, r5
   11dd4:	bl	11114 <strcmp@plt>
   11dd8:	cmp	r0, #0
   11ddc:	movne	r0, #1
   11de0:	bne	11e38 <strcmp@plt+0xd24>
   11de4:	mov	r3, #1
   11de8:	add	r1, r6, #32
   11dec:	str	r3, [r4, #16]
   11df0:	ldr	r2, [r4]
   11df4:	add	r0, r6, #24
   11df8:	bl	11cb0 <strcmp@plt+0xb9c>
   11dfc:	ldr	r1, [r4, #4]
   11e00:	ldr	r3, [r4, #12]
   11e04:	cmp	r1, #0
   11e08:	ldr	r2, [pc, #48]	; 11e40 <strcmp@plt+0xd2c>
   11e0c:	str	r3, [sp]
   11e10:	moveq	r2, r5
   11e14:	ldr	r3, [r4, #8]
   11e18:	ldr	r1, [pc, #36]	; 11e44 <strcmp@plt+0xd30>
   11e1c:	mov	r6, r0
   11e20:	bl	1156c <strcmp@plt+0x458>
   11e24:	mov	r0, r6
   11e28:	bl	10ff4 <g_resource_unref@plt>
   11e2c:	ldr	r0, [r4, #4]
   11e30:	clz	r0, r0
   11e34:	lsr	r0, r0, #5
   11e38:	add	sp, sp, #8
   11e3c:	pop	{r4, r5, r6, pc}
   11e40:	andeq	r2, r1, ip, lsl #14
   11e44:	muleq	r1, ip, r8
   11e48:	push	{r4, r5, r6, lr}
   11e4c:	mov	r4, r2
   11e50:	ldr	r3, [r2, #4]
   11e54:	mov	r5, r0
   11e58:	cmp	r3, #0
   11e5c:	beq	11e74 <strcmp@plt+0xd60>
   11e60:	mov	r0, r1
   11e64:	mov	r1, r3
   11e68:	bl	11114 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	bne	11eb0 <strcmp@plt+0xd9c>
   11e74:	mov	r3, #1
   11e78:	str	r3, [r4, #16]
   11e7c:	ldr	r2, [r4]
   11e80:	add	r1, r5, #32
   11e84:	add	r0, r5, #24
   11e88:	bl	11cb0 <strcmp@plt+0xb9c>
   11e8c:	ldr	r1, [r4, #8]
   11e90:	mov	r5, r0
   11e94:	bl	1170c <strcmp@plt+0x5f8>
   11e98:	mov	r0, r5
   11e9c:	bl	10ff4 <g_resource_unref@plt>
   11ea0:	ldr	r0, [r4, #4]
   11ea4:	clz	r0, r0
   11ea8:	lsr	r0, r0, #5
   11eac:	pop	{r4, r5, r6, pc}
   11eb0:	mov	r0, #1
   11eb4:	pop	{r4, r5, r6, pc}
   11eb8:	push	{r4, r5, r6, lr}
   11ebc:	sub	sp, sp, #8
   11ec0:	ldr	r4, [pc, #120]	; 11f40 <strcmp@plt+0xe2c>
   11ec4:	mov	r1, sp
   11ec8:	mov	r6, r0
   11ecc:	ldr	r3, [r4]
   11ed0:	str	r3, [sp, #4]
   11ed4:	bl	11c30 <strcmp@plt+0xb1c>
   11ed8:	subs	r5, r0, #0
   11edc:	beq	11f14 <strcmp@plt+0xe00>
   11ee0:	mov	r2, #0
   11ee4:	ldr	r1, [pc, #88]	; 11f44 <strcmp@plt+0xe30>
   11ee8:	bl	113f4 <strcmp@plt+0x2e0>
   11eec:	mov	r0, r5
   11ef0:	bl	1106c <elf_end@plt>
   11ef4:	ldr	r0, [sp]
   11ef8:	bl	11018 <close@plt>
   11efc:	ldr	r2, [sp, #4]
   11f00:	ldr	r3, [r4]
   11f04:	cmp	r2, r3
   11f08:	bne	11f3c <strcmp@plt+0xe28>
   11f0c:	add	sp, sp, #8
   11f10:	pop	{r4, r5, r6, pc}
   11f14:	mov	r0, r6
   11f18:	bl	114e4 <strcmp@plt+0x3d0>
   11f1c:	cmp	r0, #0
   11f20:	beq	11f2c <strcmp@plt+0xe18>
   11f24:	bl	10ff4 <g_resource_unref@plt>
   11f28:	b	11efc <strcmp@plt+0xde8>
   11f2c:	mov	r1, r6
   11f30:	ldr	r0, [pc, #16]	; 11f48 <strcmp@plt+0xe34>
   11f34:	bl	10f28 <g_printerr@plt>
   11f38:	b	11efc <strcmp@plt+0xde8>
   11f3c:	bl	11054 <__stack_chk_fail@plt>
   11f40:	andeq	r2, r2, r0, ror #27
   11f44:	andeq	r1, r1, r4, asr r5
   11f48:	andeq	r2, r1, r0, lsr #17
   11f4c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f50:	sub	sp, sp, #44	; 0x2c
   11f54:	ldr	r5, [pc, #232]	; 12044 <strcmp@plt+0xf30>
   11f58:	mov	r6, r1
   11f5c:	add	r1, sp, #12
   11f60:	ldr	ip, [r5]
   11f64:	mov	r4, r2
   11f68:	mov	r7, r3
   11f6c:	str	ip, [sp, #36]	; 0x24
   11f70:	mov	r9, r0
   11f74:	bl	11c30 <strcmp@plt+0xb1c>
   11f78:	subs	r8, r0, #0
   11f7c:	beq	11ff8 <strcmp@plt+0xee4>
   11f80:	ldr	r1, [sp, #12]
   11f84:	ldr	r3, [pc, #188]	; 12048 <strcmp@plt+0xf34>
   11f88:	cmp	r4, #0
   11f8c:	moveq	r4, r3
   11f90:	str	r1, [sp, #16]
   11f94:	mov	r3, #0
   11f98:	add	r2, sp, #16
   11f9c:	ldr	r1, [pc, #168]	; 1204c <strcmp@plt+0xf38>
   11fa0:	str	r3, [sp, #32]
   11fa4:	str	r6, [sp, #20]
   11fa8:	str	r7, [sp, #28]
   11fac:	str	r4, [sp, #24]
   11fb0:	bl	113f4 <strcmp@plt+0x2e0>
   11fb4:	ldr	r3, [sp, #32]
   11fb8:	cmp	r3, #0
   11fbc:	beq	11fe8 <strcmp@plt+0xed4>
   11fc0:	mov	r0, r8
   11fc4:	bl	1106c <elf_end@plt>
   11fc8:	ldr	r0, [sp, #12]
   11fcc:	bl	11018 <close@plt>
   11fd0:	ldr	r2, [sp, #36]	; 0x24
   11fd4:	ldr	r3, [r5]
   11fd8:	cmp	r2, r3
   11fdc:	bne	12040 <strcmp@plt+0xf2c>
   11fe0:	add	sp, sp, #44	; 0x2c
   11fe4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fe8:	mov	r1, r6
   11fec:	ldr	r0, [pc, #92]	; 12050 <strcmp@plt+0xf3c>
   11ff0:	bl	10f28 <g_printerr@plt>
   11ff4:	b	11fc0 <strcmp@plt+0xeac>
   11ff8:	mov	r0, r9
   11ffc:	bl	114e4 <strcmp@plt+0x3d0>
   12000:	subs	r6, r0, #0
   12004:	beq	12030 <strcmp@plt+0xf1c>
   12008:	ldr	r2, [pc, #56]	; 12048 <strcmp@plt+0xf34>
   1200c:	cmp	r4, #0
   12010:	str	r7, [sp]
   12014:	movne	r3, r4
   12018:	moveq	r3, r2
   1201c:	ldr	r1, [pc, #48]	; 12054 <strcmp@plt+0xf40>
   12020:	bl	1156c <strcmp@plt+0x458>
   12024:	mov	r0, r6
   12028:	bl	10ff4 <g_resource_unref@plt>
   1202c:	b	11fd0 <strcmp@plt+0xebc>
   12030:	mov	r1, r9
   12034:	ldr	r0, [pc, #28]	; 12058 <strcmp@plt+0xf44>
   12038:	bl	10f28 <g_printerr@plt>
   1203c:	b	11fd0 <strcmp@plt+0xebc>
   12040:	bl	11054 <__stack_chk_fail@plt>
   12044:	andeq	r2, r2, r0, ror #27
   12048:	andeq	r2, r1, ip, lsl #14
   1204c:	andeq	r1, r1, ip, lsr #27
   12050:	andeq	r2, r1, r0, asr #17
   12054:	muleq	r1, ip, r8
   12058:	andeq	r2, r1, r0, lsr #17
   1205c:	push	{r4, r5, r6, r7, r8, lr}
   12060:	sub	sp, sp, #32
   12064:	ldr	r4, [pc, #192]	; 1212c <strcmp@plt+0x1018>
   12068:	mov	r5, r1
   1206c:	add	r1, sp, #4
   12070:	ldr	r3, [r4]
   12074:	mov	r6, r2
   12078:	str	r3, [sp, #28]
   1207c:	mov	r8, r0
   12080:	bl	11c30 <strcmp@plt+0xb1c>
   12084:	subs	r7, r0, #0
   12088:	beq	120f4 <strcmp@plt+0xfe0>
   1208c:	ldr	r1, [sp, #4]
   12090:	mov	r3, #0
   12094:	str	r1, [sp, #8]
   12098:	add	r2, sp, #8
   1209c:	ldr	r1, [pc, #140]	; 12130 <strcmp@plt+0x101c>
   120a0:	str	r3, [sp, #24]
   120a4:	str	r5, [sp, #12]
   120a8:	str	r6, [sp, #16]
   120ac:	bl	113f4 <strcmp@plt+0x2e0>
   120b0:	ldr	r3, [sp, #24]
   120b4:	cmp	r3, #0
   120b8:	beq	120e4 <strcmp@plt+0xfd0>
   120bc:	mov	r0, r7
   120c0:	bl	1106c <elf_end@plt>
   120c4:	ldr	r0, [sp, #4]
   120c8:	bl	11018 <close@plt>
   120cc:	ldr	r2, [sp, #28]
   120d0:	ldr	r3, [r4]
   120d4:	cmp	r2, r3
   120d8:	bne	12128 <strcmp@plt+0x1014>
   120dc:	add	sp, sp, #32
   120e0:	pop	{r4, r5, r6, r7, r8, pc}
   120e4:	mov	r1, r5
   120e8:	ldr	r0, [pc, #68]	; 12134 <strcmp@plt+0x1020>
   120ec:	bl	10f28 <g_printerr@plt>
   120f0:	b	120bc <strcmp@plt+0xfa8>
   120f4:	mov	r0, r8
   120f8:	bl	114e4 <strcmp@plt+0x3d0>
   120fc:	subs	r5, r0, #0
   12100:	beq	12118 <strcmp@plt+0x1004>
   12104:	mov	r1, r6
   12108:	bl	1170c <strcmp@plt+0x5f8>
   1210c:	mov	r0, r5
   12110:	bl	10ff4 <g_resource_unref@plt>
   12114:	b	120cc <strcmp@plt+0xfb8>
   12118:	mov	r1, r8
   1211c:	ldr	r0, [pc, #20]	; 12138 <strcmp@plt+0x1024>
   12120:	bl	10f28 <g_printerr@plt>
   12124:	b	120cc <strcmp@plt+0xfb8>
   12128:	bl	11054 <__stack_chk_fail@plt>
   1212c:	andeq	r2, r2, r0, ror #27
   12130:	andeq	r1, r1, r8, asr #28
   12134:	andeq	r2, r1, r0, asr #17
   12138:	andeq	r2, r1, r0, lsr #17
   1213c:	cmp	r3, #0
   12140:	cmpeq	r2, #0
   12144:	bne	1215c <strcmp@plt+0x1048>
   12148:	cmp	r1, #0
   1214c:	cmpeq	r0, #0
   12150:	mvnne	r1, #0
   12154:	mvnne	r0, #0
   12158:	b	12178 <strcmp@plt+0x1064>
   1215c:	sub	sp, sp, #8
   12160:	push	{sp, lr}
   12164:	bl	12188 <strcmp@plt+0x1074>
   12168:	ldr	lr, [sp, #4]
   1216c:	add	sp, sp, #8
   12170:	pop	{r2, r3}
   12174:	bx	lr
   12178:	push	{r1, lr}
   1217c:	mov	r0, #8
   12180:	bl	10fe8 <raise@plt>
   12184:	pop	{r1, pc}
   12188:	cmp	r1, r3
   1218c:	cmpeq	r0, r2
   12190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12194:	mov	r4, r0
   12198:	movcc	r0, #0
   1219c:	mov	r5, r1
   121a0:	ldr	lr, [sp, #36]	; 0x24
   121a4:	movcc	r1, r0
   121a8:	bcc	122a4 <strcmp@plt+0x1190>
   121ac:	cmp	r3, #0
   121b0:	clzeq	ip, r2
   121b4:	clzne	ip, r3
   121b8:	addeq	ip, ip, #32
   121bc:	cmp	r5, #0
   121c0:	clzeq	r1, r4
   121c4:	addeq	r1, r1, #32
   121c8:	clzne	r1, r5
   121cc:	sub	ip, ip, r1
   121d0:	sub	sl, ip, #32
   121d4:	lsl	r9, r3, ip
   121d8:	rsb	fp, ip, #32
   121dc:	orr	r9, r9, r2, lsl sl
   121e0:	orr	r9, r9, r2, lsr fp
   121e4:	lsl	r8, r2, ip
   121e8:	cmp	r5, r9
   121ec:	cmpeq	r4, r8
   121f0:	movcc	r0, #0
   121f4:	movcc	r1, r0
   121f8:	bcc	12214 <strcmp@plt+0x1100>
   121fc:	mov	r0, #1
   12200:	subs	r4, r4, r8
   12204:	lsl	r1, r0, sl
   12208:	orr	r1, r1, r0, lsr fp
   1220c:	lsl	r0, r0, ip
   12210:	sbc	r5, r5, r9
   12214:	cmp	ip, #0
   12218:	beq	122a4 <strcmp@plt+0x1190>
   1221c:	lsr	r6, r8, #1
   12220:	orr	r6, r6, r9, lsl #31
   12224:	lsr	r7, r9, #1
   12228:	mov	r2, ip
   1222c:	b	12250 <strcmp@plt+0x113c>
   12230:	subs	r3, r4, r6
   12234:	sbc	r8, r5, r7
   12238:	adds	r3, r3, r3
   1223c:	adc	r8, r8, r8
   12240:	adds	r4, r3, #1
   12244:	adc	r5, r8, #0
   12248:	subs	r2, r2, #1
   1224c:	beq	1226c <strcmp@plt+0x1158>
   12250:	cmp	r5, r7
   12254:	cmpeq	r4, r6
   12258:	bcs	12230 <strcmp@plt+0x111c>
   1225c:	adds	r4, r4, r4
   12260:	adc	r5, r5, r5
   12264:	subs	r2, r2, #1
   12268:	bne	12250 <strcmp@plt+0x113c>
   1226c:	lsr	r3, r4, ip
   12270:	orr	r3, r3, r5, lsl fp
   12274:	lsr	r2, r5, ip
   12278:	orr	r3, r3, r5, lsr sl
   1227c:	adds	r0, r0, r4
   12280:	mov	r4, r3
   12284:	lsl	r3, r2, ip
   12288:	orr	r3, r3, r4, lsl sl
   1228c:	lsl	ip, r4, ip
   12290:	orr	r3, r3, r4, lsr fp
   12294:	adc	r1, r1, r5
   12298:	subs	r0, r0, ip
   1229c:	mov	r5, r2
   122a0:	sbc	r1, r1, r3
   122a4:	cmp	lr, #0
   122a8:	strdne	r4, [lr]
   122ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   122b4:	mov	r7, r0
   122b8:	ldr	r6, [pc, #72]	; 12308 <strcmp@plt+0x11f4>
   122bc:	ldr	r5, [pc, #72]	; 1230c <strcmp@plt+0x11f8>
   122c0:	add	r6, pc, r6
   122c4:	add	r5, pc, r5
   122c8:	sub	r6, r6, r5
   122cc:	mov	r8, r1
   122d0:	mov	r9, r2
   122d4:	bl	10e90 <g_free@plt-0x20>
   122d8:	asrs	r6, r6, #2
   122dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   122e0:	mov	r4, #0
   122e4:	add	r4, r4, #1
   122e8:	ldr	r3, [r5], #4
   122ec:	mov	r2, r9
   122f0:	mov	r1, r8
   122f4:	mov	r0, r7
   122f8:	blx	r3
   122fc:	cmp	r6, r4
   12300:	bne	122e4 <strcmp@plt+0x11d0>
   12304:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12308:	andeq	r0, r1, r4, lsl fp
   1230c:	andeq	r0, r1, ip, lsl #22
   12310:	bx	lr

Disassembly of section .fini:

00012314 <.fini>:
   12314:	push	{r3, lr}
   12318:	pop	{r3, pc}
