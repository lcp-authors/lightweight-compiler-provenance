
raspbian-preinstalled/yes:     file format elf32-littlearm


Disassembly of section .init:

00010b58 <.init>:
   10b58:	push	{r3, lr}
   10b5c:	bl	11020 <abort@plt+0x2a4>
   10b60:	pop	{r3, pc}

Disassembly of section .plt:

00010b64 <calloc@plt-0x14>:
   10b64:	push	{lr}		; (str lr, [sp, #-4]!)
   10b68:	ldr	lr, [pc, #4]	; 10b74 <calloc@plt-0x4>
   10b6c:	add	lr, pc, lr
   10b70:	ldr	pc, [lr, #8]!
   10b74:	andeq	r4, r1, ip, lsl #9

00010b78 <calloc@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #20, 20	; 0x14000
   10b80:	ldr	pc, [ip, #1164]!	; 0x48c

00010b84 <fputs_unlocked@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1156]!	; 0x484

00010b90 <raise@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1148]!	; 0x47c

00010b9c <strcmp@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1140]!	; 0x474

00010ba8 <fflush@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1132]!	; 0x46c

00010bb4 <free@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1124]!	; 0x464

00010bc0 <_exit@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1116]!	; 0x45c

00010bcc <memcpy@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1108]!	; 0x454

00010bd8 <mbsinit@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1100]!	; 0x44c

00010be4 <memcmp@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1092]!	; 0x444

00010bf0 <dcgettext@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1084]!	; 0x43c

00010bfc <__stack_chk_fail@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1076]!	; 0x434

00010c08 <realloc@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1068]!	; 0x42c

00010c14 <textdomain@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1060]!	; 0x424

00010c20 <iswprint@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1052]!	; 0x41c

00010c2c <fwrite@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1044]!	; 0x414

00010c38 <lseek64@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1036]!	; 0x40c

00010c44 <__ctype_get_mb_cur_max@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1028]!	; 0x404

00010c50 <__fpending@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c5c <mbrtowc@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c68 <error@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c74 <malloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #996]!	; 0x3e4

00010c80 <__libc_start_main@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #988]!	; 0x3dc

00010c8c <__freading@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #980]!	; 0x3d4

00010c98 <__gmon_start__@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #972]!	; 0x3cc

00010ca4 <getopt_long@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #964]!	; 0x3c4

00010cb0 <__ctype_b_loc@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #956]!	; 0x3bc

00010cbc <exit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #948]!	; 0x3b4

00010cc8 <strlen@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #940]!	; 0x3ac

00010cd4 <__errno_location@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #932]!	; 0x3a4

00010ce0 <__cxa_atexit@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #924]!	; 0x39c

00010cec <memset@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #916]!	; 0x394

00010cf8 <__printf_chk@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #908]!	; 0x38c

00010d04 <write@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #900]!	; 0x384

00010d10 <fileno@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #892]!	; 0x37c

00010d1c <__fprintf_chk@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #884]!	; 0x374

00010d28 <fclose@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #876]!	; 0x36c

00010d34 <fseeko64@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #868]!	; 0x364

00010d40 <setlocale@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #860]!	; 0x35c

00010d4c <strrchr@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #852]!	; 0x354

00010d58 <nl_langinfo@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #844]!	; 0x34c

00010d64 <bindtextdomain@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #836]!	; 0x344

00010d70 <strncmp@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #828]!	; 0x33c

00010d7c <abort@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #820]!	; 0x334

Disassembly of section .text:

00010d88 <.text>:
   10d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d8c:	mov	r5, r0
   10d90:	sub	sp, sp, #20
   10d94:	ldr	r0, [r1]
   10d98:	mov	r4, r1
   10d9c:	bl	11600 <abort@plt+0x884>
   10da0:	ldr	r1, [pc, #516]	; 10fac <abort@plt+0x230>
   10da4:	mov	r0, #6
   10da8:	bl	10d40 <setlocale@plt>
   10dac:	ldr	r1, [pc, #508]	; 10fb0 <abort@plt+0x234>
   10db0:	ldr	r0, [pc, #508]	; 10fb4 <abort@plt+0x238>
   10db4:	bl	10d64 <bindtextdomain@plt>
   10db8:	ldr	r0, [pc, #500]	; 10fb4 <abort@plt+0x238>
   10dbc:	bl	10c14 <textdomain@plt>
   10dc0:	ldr	r0, [pc, #496]	; 10fb8 <abort@plt+0x23c>
   10dc4:	bl	14658 <abort@plt+0x38dc>
   10dc8:	ldr	r1, [pc, #492]	; 10fbc <abort@plt+0x240>
   10dcc:	ldr	r2, [pc, #492]	; 10fc0 <abort@plt+0x244>
   10dd0:	ldr	r3, [pc, #492]	; 10fc4 <abort@plt+0x248>
   10dd4:	ldr	r1, [r1]
   10dd8:	mov	r6, #0
   10ddc:	str	r1, [sp]
   10de0:	mov	r0, r5
   10de4:	mov	r1, r4
   10de8:	str	r2, [sp, #8]
   10dec:	str	r3, [sp, #4]
   10df0:	ldr	r2, [pc, #464]	; 10fc8 <abort@plt+0x24c>
   10df4:	ldr	r3, [pc, #464]	; 10fcc <abort@plt+0x250>
   10df8:	str	r6, [sp, #12]
   10dfc:	bl	11520 <abort@plt+0x7a4>
   10e00:	str	r6, [sp]
   10e04:	mov	r1, r4
   10e08:	mov	r0, r5
   10e0c:	ldr	r3, [pc, #444]	; 10fd0 <abort@plt+0x254>
   10e10:	ldr	r2, [pc, #444]	; 10fd4 <abort@plt+0x258>
   10e14:	bl	10ca4 <getopt_long@plt>
   10e18:	cmn	r0, #1
   10e1c:	bne	10f90 <abort@plt+0x214>
   10e20:	ldr	r3, [pc, #432]	; 10fd8 <abort@plt+0x25c>
   10e24:	add	r9, r4, r5, lsl #2
   10e28:	ldr	r3, [r3]
   10e2c:	cmp	r3, r5
   10e30:	add	fp, r4, r3, lsl #2
   10e34:	ldreq	r2, [pc, #416]	; 10fdc <abort@plt+0x260>
   10e38:	addeq	r9, r9, #4
   10e3c:	streq	r2, [r4, r3, lsl #2]
   10e40:	cmp	r9, fp
   10e44:	bls	10f98 <abort@plt+0x21c>
   10e48:	ldr	r6, [r4, r3, lsl #2]
   10e4c:	add	r5, fp, #4
   10e50:	mov	r4, r6
   10e54:	mov	r7, #1
   10e58:	mov	r8, #0
   10e5c:	mov	r0, r4
   10e60:	bl	10cc8 <strlen@plt>
   10e64:	cmp	r9, r5
   10e68:	add	r0, r0, #1
   10e6c:	add	r8, r8, r0
   10e70:	bls	10e88 <abort@plt+0x10c>
   10e74:	add	r0, r4, r0
   10e78:	ldr	r4, [r5], #4
   10e7c:	cmp	r0, r4
   10e80:	movne	r7, #0
   10e84:	b	10e5c <abort@plt+0xe0>
   10e88:	cmp	r8, #4096	; 0x1000
   10e8c:	bls	10ee8 <abort@plt+0x16c>
   10e90:	cmp	r7, #0
   10e94:	beq	10eec <abort@plt+0x170>
   10e98:	mov	r5, #0
   10e9c:	b	10ebc <abort@plt+0x140>
   10ea0:	add	r0, r4, r5
   10ea4:	mov	r3, #32
   10ea8:	cmp	r9, fp
   10eac:	strb	r3, [r6, r0]
   10eb0:	add	r5, r0, #1
   10eb4:	add	r3, r6, r0
   10eb8:	bls	10f00 <abort@plt+0x184>
   10ebc:	ldr	sl, [fp], #4
   10ec0:	mov	r0, sl
   10ec4:	bl	10cc8 <strlen@plt>
   10ec8:	cmp	r7, #0
   10ecc:	mov	r4, r0
   10ed0:	bne	10ea0 <abort@plt+0x124>
   10ed4:	mov	r2, r0
   10ed8:	mov	r1, sl
   10edc:	add	r0, r6, r5
   10ee0:	bl	10bcc <memcpy@plt>
   10ee4:	b	10ea0 <abort@plt+0x124>
   10ee8:	mov	r8, #8192	; 0x2000
   10eec:	mov	r0, r8
   10ef0:	bl	13e3c <abort@plt+0x30c0>
   10ef4:	mov	r7, #0
   10ef8:	mov	r6, r0
   10efc:	b	10e98 <abort@plt+0x11c>
   10f00:	mov	r2, #10
   10f04:	mov	r0, r8
   10f08:	strb	r2, [r3]
   10f0c:	mov	r1, r5
   10f10:	bl	143d8 <abort@plt+0x365c>
   10f14:	subs	r4, r0, #1
   10f18:	mov	r7, r0
   10f1c:	beq	10f44 <abort@plt+0x1c8>
   10f20:	add	r3, r6, r5
   10f24:	mov	r0, r3
   10f28:	mov	r2, r5
   10f2c:	mov	r1, r6
   10f30:	bl	10bcc <memcpy@plt>
   10f34:	subs	r4, r4, #1
   10f38:	add	r3, r0, r5
   10f3c:	bne	10f24 <abort@plt+0x1a8>
   10f40:	mul	r5, r7, r5
   10f44:	mov	r2, r5
   10f48:	mov	r1, r6
   10f4c:	mov	r0, #1
   10f50:	bl	114b0 <abort@plt+0x734>
   10f54:	cmp	r0, r5
   10f58:	beq	10f44 <abort@plt+0x1c8>
   10f5c:	bl	10cd4 <__errno_location@plt>
   10f60:	mov	r2, #5
   10f64:	ldr	r1, [pc, #116]	; 10fe0 <abort@plt+0x264>
   10f68:	ldr	r4, [r0]
   10f6c:	mov	r0, #0
   10f70:	bl	10bf0 <dcgettext@plt>
   10f74:	mov	r1, r4
   10f78:	mov	r2, r0
   10f7c:	mov	r0, #0
   10f80:	bl	10c68 <error@plt>
   10f84:	mov	r0, #1
   10f88:	add	sp, sp, #20
   10f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f90:	mov	r0, #1
   10f94:	bl	110d4 <abort@plt+0x358>
   10f98:	mov	r0, #8192	; 0x2000
   10f9c:	bl	13e3c <abort@plt+0x30c0>
   10fa0:	mov	r3, #10
   10fa4:	strb	r3, [r0, #-1]
   10fa8:	udf	#0
   10fac:	andeq	r4, r1, r8, asr r7
   10fb0:			; <UNDEFINED> instruction: 0x000148b4
   10fb4:	andeq	r4, r1, r8, lsl #16
   10fb8:	ldrdeq	r1, [r1], -r8
   10fbc:	andeq	r5, r2, r8, asr #1
   10fc0:	andeq	r4, r1, r8, asr #17
   10fc4:	ldrdeq	r1, [r1], -r4
   10fc8:	andeq	r4, r1, r4, asr #13
   10fcc:	andeq	r4, r1, r4, lsl #16
   10fd0:			; <UNDEFINED> instruction: 0x000146b4
   10fd4:	ldrdeq	r4, [r1], -r8
   10fd8:	andeq	r5, r2, r8, lsl r1
   10fdc:	ldrdeq	r4, [r1], -ip
   10fe0:	andeq	r4, r1, r0, ror #17
   10fe4:	mov	fp, #0
   10fe8:	mov	lr, #0
   10fec:	pop	{r1}		; (ldr r1, [sp], #4)
   10ff0:	mov	r2, sp
   10ff4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ff8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ffc:	ldr	ip, [pc, #16]	; 11014 <abort@plt+0x298>
   11000:	push	{ip}		; (str ip, [sp, #-4]!)
   11004:	ldr	r0, [pc, #12]	; 11018 <abort@plt+0x29c>
   11008:	ldr	r3, [pc, #12]	; 1101c <abort@plt+0x2a0>
   1100c:	bl	10c80 <__libc_start_main@plt>
   11010:	bl	10d7c <abort@plt>
   11014:	andeq	r4, r1, r4, asr r6
   11018:	andeq	r0, r1, r8, lsl #27
   1101c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11020:	ldr	r3, [pc, #20]	; 1103c <abort@plt+0x2c0>
   11024:	ldr	r2, [pc, #20]	; 11040 <abort@plt+0x2c4>
   11028:	add	r3, pc, r3
   1102c:	ldr	r2, [r3, r2]
   11030:	cmp	r2, #0
   11034:	bxeq	lr
   11038:	b	10c98 <__gmon_start__@plt>
   1103c:	ldrdeq	r3, [r1], -r0
   11040:	strheq	r0, [r0], -ip
   11044:	ldr	r0, [pc, #24]	; 11064 <abort@plt+0x2e8>
   11048:	ldr	r3, [pc, #24]	; 11068 <abort@plt+0x2ec>
   1104c:	cmp	r3, r0
   11050:	bxeq	lr
   11054:	ldr	r3, [pc, #16]	; 1106c <abort@plt+0x2f0>
   11058:	cmp	r3, #0
   1105c:	bxeq	lr
   11060:	bx	r3
   11064:	andeq	r5, r2, r0, lsl r1
   11068:	andeq	r5, r2, r0, lsl r1
   1106c:	andeq	r0, r0, r0
   11070:	ldr	r0, [pc, #36]	; 1109c <abort@plt+0x320>
   11074:	ldr	r1, [pc, #36]	; 110a0 <abort@plt+0x324>
   11078:	sub	r1, r1, r0
   1107c:	asr	r1, r1, #2
   11080:	add	r1, r1, r1, lsr #31
   11084:	asrs	r1, r1, #1
   11088:	bxeq	lr
   1108c:	ldr	r3, [pc, #16]	; 110a4 <abort@plt+0x328>
   11090:	cmp	r3, #0
   11094:	bxeq	lr
   11098:	bx	r3
   1109c:	andeq	r5, r2, r0, lsl r1
   110a0:	andeq	r5, r2, r0, lsl r1
   110a4:	andeq	r0, r0, r0
   110a8:	push	{r4, lr}
   110ac:	ldr	r4, [pc, #24]	; 110cc <abort@plt+0x350>
   110b0:	ldrb	r3, [r4]
   110b4:	cmp	r3, #0
   110b8:	popne	{r4, pc}
   110bc:	bl	11044 <abort@plt+0x2c8>
   110c0:	mov	r3, #1
   110c4:	strb	r3, [r4]
   110c8:	pop	{r4, pc}
   110cc:	andeq	r5, r2, ip, lsr #2
   110d0:	b	11070 <abort@plt+0x2f4>
   110d4:	ldr	r3, [pc, #652]	; 11368 <abort@plt+0x5ec>
   110d8:	push	{r7, lr}
   110dc:	sub	sp, sp, #64	; 0x40
   110e0:	ldr	r3, [r3]
   110e4:	subs	r6, r0, #0
   110e8:	str	r3, [sp, #60]	; 0x3c
   110ec:	beq	11128 <abort@plt+0x3ac>
   110f0:	ldr	r3, [pc, #628]	; 1136c <abort@plt+0x5f0>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #624]	; 11370 <abort@plt+0x5f4>
   110fc:	mov	r0, #0
   11100:	ldr	r4, [r3]
   11104:	bl	10bf0 <dcgettext@plt>
   11108:	ldr	r3, [pc, #612]	; 11374 <abort@plt+0x5f8>
   1110c:	mov	r1, #1
   11110:	ldr	r3, [r3]
   11114:	mov	r2, r0
   11118:	mov	r0, r4
   1111c:	bl	10d1c <__fprintf_chk@plt>
   11120:	mov	r0, r6
   11124:	bl	10cbc <exit@plt>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #580]	; 11378 <abort@plt+0x5fc>
   11130:	bl	10bf0 <dcgettext@plt>
   11134:	ldr	r3, [pc, #568]	; 11374 <abort@plt+0x5f8>
   11138:	ldr	r4, [pc, #572]	; 1137c <abort@plt+0x600>
   1113c:	ldr	r3, [r3]
   11140:	mov	r2, r3
   11144:	mov	r1, r0
   11148:	mov	r0, #1
   1114c:	bl	10cf8 <__printf_chk@plt>
   11150:	mov	r2, #5
   11154:	ldr	r1, [pc, #548]	; 11380 <abort@plt+0x604>
   11158:	mov	r0, r6
   1115c:	bl	10bf0 <dcgettext@plt>
   11160:	ldr	r1, [r4]
   11164:	bl	10b84 <fputs_unlocked@plt>
   11168:	mov	r2, #5
   1116c:	ldr	r1, [pc, #528]	; 11384 <abort@plt+0x608>
   11170:	mov	r0, r6
   11174:	bl	10bf0 <dcgettext@plt>
   11178:	ldr	r1, [r4]
   1117c:	bl	10b84 <fputs_unlocked@plt>
   11180:	mov	r2, #5
   11184:	ldr	r1, [pc, #508]	; 11388 <abort@plt+0x60c>
   11188:	mov	r0, r6
   1118c:	bl	10bf0 <dcgettext@plt>
   11190:	ldr	r1, [r4]
   11194:	bl	10b84 <fputs_unlocked@plt>
   11198:	ldr	lr, [pc, #492]	; 1138c <abort@plt+0x610>
   1119c:	add	ip, sp, #4
   111a0:	ldm	lr!, {r0, r1, r2, r3}
   111a4:	stmia	ip!, {r0, r1, r2, r3}
   111a8:	ldm	lr!, {r0, r1, r2, r3}
   111ac:	ldr	r5, [sp, #4]
   111b0:	stmia	ip!, {r0, r1, r2, r3}
   111b4:	cmp	r5, #0
   111b8:	ldm	lr!, {r0, r1, r2, r3}
   111bc:	addeq	r4, sp, #4
   111c0:	stmia	ip!, {r0, r1, r2, r3}
   111c4:	ldm	lr, {r0, r1}
   111c8:	stm	ip, {r0, r1}
   111cc:	beq	111fc <abort@plt+0x480>
   111d0:	ldr	r7, [pc, #440]	; 11390 <abort@plt+0x614>
   111d4:	add	r4, sp, #4
   111d8:	b	111e8 <abort@plt+0x46c>
   111dc:	ldr	r5, [r4, #8]!
   111e0:	cmp	r5, #0
   111e4:	beq	111fc <abort@plt+0x480>
   111e8:	mov	r1, r5
   111ec:	mov	r0, r7
   111f0:	bl	10b9c <strcmp@plt>
   111f4:	cmp	r0, #0
   111f8:	bne	111dc <abort@plt+0x460>
   111fc:	ldr	r4, [r4, #4]
   11200:	mov	r2, #5
   11204:	cmp	r4, #0
   11208:	ldr	r1, [pc, #388]	; 11394 <abort@plt+0x618>
   1120c:	beq	112b4 <abort@plt+0x538>
   11210:	mov	r0, #0
   11214:	bl	10bf0 <dcgettext@plt>
   11218:	ldr	r3, [pc, #376]	; 11398 <abort@plt+0x61c>
   1121c:	ldr	r2, [pc, #376]	; 1139c <abort@plt+0x620>
   11220:	mov	r1, r0
   11224:	mov	r0, #1
   11228:	bl	10cf8 <__printf_chk@plt>
   1122c:	mov	r1, #0
   11230:	mov	r0, #5
   11234:	bl	10d40 <setlocale@plt>
   11238:	cmp	r0, #0
   1123c:	ldreq	r5, [pc, #332]	; 11390 <abort@plt+0x614>
   11240:	beq	1125c <abort@plt+0x4e0>
   11244:	mov	r2, #3
   11248:	ldr	r1, [pc, #336]	; 113a0 <abort@plt+0x624>
   1124c:	bl	10d70 <strncmp@plt>
   11250:	ldr	r5, [pc, #312]	; 11390 <abort@plt+0x614>
   11254:	cmp	r0, #0
   11258:	bne	11344 <abort@plt+0x5c8>
   1125c:	mov	r2, #5
   11260:	ldr	r1, [pc, #316]	; 113a4 <abort@plt+0x628>
   11264:	mov	r0, #0
   11268:	bl	10bf0 <dcgettext@plt>
   1126c:	ldr	r3, [pc, #284]	; 11390 <abort@plt+0x614>
   11270:	ldr	r2, [pc, #288]	; 11398 <abort@plt+0x61c>
   11274:	mov	r1, r0
   11278:	mov	r0, #1
   1127c:	bl	10cf8 <__printf_chk@plt>
   11280:	mov	r2, #5
   11284:	ldr	r1, [pc, #284]	; 113a8 <abort@plt+0x62c>
   11288:	mov	r0, #0
   1128c:	bl	10bf0 <dcgettext@plt>
   11290:	ldr	r2, [pc, #276]	; 113ac <abort@plt+0x630>
   11294:	cmp	r4, r5
   11298:	ldr	r3, [pc, #272]	; 113b0 <abort@plt+0x634>
   1129c:	movne	r3, r2
   112a0:	mov	r1, r0
   112a4:	mov	r2, r4
   112a8:	mov	r0, #1
   112ac:	bl	10cf8 <__printf_chk@plt>
   112b0:	b	11120 <abort@plt+0x3a4>
   112b4:	mov	r0, r4
   112b8:	bl	10bf0 <dcgettext@plt>
   112bc:	ldr	r3, [pc, #212]	; 11398 <abort@plt+0x61c>
   112c0:	ldr	r2, [pc, #212]	; 1139c <abort@plt+0x620>
   112c4:	mov	r1, r0
   112c8:	mov	r0, #1
   112cc:	bl	10cf8 <__printf_chk@plt>
   112d0:	mov	r1, r4
   112d4:	mov	r0, #5
   112d8:	bl	10d40 <setlocale@plt>
   112dc:	cmp	r0, #0
   112e0:	beq	112f8 <abort@plt+0x57c>
   112e4:	mov	r2, #3
   112e8:	ldr	r1, [pc, #176]	; 113a0 <abort@plt+0x624>
   112ec:	bl	10d70 <strncmp@plt>
   112f0:	cmp	r0, #0
   112f4:	bne	1133c <abort@plt+0x5c0>
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #160]	; 113a4 <abort@plt+0x628>
   11300:	mov	r0, #0
   11304:	bl	10bf0 <dcgettext@plt>
   11308:	ldr	r3, [pc, #128]	; 11390 <abort@plt+0x614>
   1130c:	ldr	r2, [pc, #132]	; 11398 <abort@plt+0x61c>
   11310:	mov	r4, r3
   11314:	mov	r1, r0
   11318:	mov	r0, #1
   1131c:	bl	10cf8 <__printf_chk@plt>
   11320:	ldr	r1, [pc, #128]	; 113a8 <abort@plt+0x62c>
   11324:	mov	r2, #5
   11328:	mov	r0, #0
   1132c:	bl	10bf0 <dcgettext@plt>
   11330:	ldr	r3, [pc, #120]	; 113b0 <abort@plt+0x634>
   11334:	mov	r1, r0
   11338:	b	112a4 <abort@plt+0x528>
   1133c:	ldr	r5, [pc, #76]	; 11390 <abort@plt+0x614>
   11340:	mov	r4, r5
   11344:	mov	r2, #5
   11348:	ldr	r1, [pc, #100]	; 113b4 <abort@plt+0x638>
   1134c:	mov	r0, #0
   11350:	bl	10bf0 <dcgettext@plt>
   11354:	ldr	r2, [pc, #52]	; 11390 <abort@plt+0x614>
   11358:	mov	r1, r0
   1135c:	mov	r0, #1
   11360:	bl	10cf8 <__printf_chk@plt>
   11364:	b	1125c <abort@plt+0x4e0>
   11368:	andeq	r4, r2, r8, lsl #30
   1136c:	andeq	r5, r2, r0, lsr #2
   11370:	andeq	r4, r1, r8, asr #13
   11374:	andeq	r5, r2, r8, lsr r1
   11378:	strdeq	r4, [r1], -r0
   1137c:	andeq	r5, r2, r4, lsr #2
   11380:	andeq	r4, r1, r8, lsl r7
   11384:	andeq	r4, r1, ip, asr r7
   11388:	andeq	r4, r1, ip, lsl #15
   1138c:	andeq	r4, r1, ip, ror r6
   11390:	andeq	r4, r1, r4, asr #13
   11394:	andeq	r4, r1, r4, asr #15
   11398:	ldrdeq	r4, [r1], -ip
   1139c:	andeq	r4, r1, r4, lsl #16
   113a0:	andeq	r4, r1, r4, lsl r8
   113a4:	andeq	r4, r1, r0, ror #16
   113a8:	andeq	r4, r1, r0, lsl #17
   113ac:	andeq	r4, r1, r8, asr r7
   113b0:	strdeq	r4, [r1], -r8
   113b4:	andeq	r4, r1, r8, lsl r8
   113b8:	ldr	r3, [pc, #4]	; 113c4 <abort@plt+0x648>
   113bc:	str	r0, [r3]
   113c0:	bx	lr
   113c4:	andeq	r5, r2, r0, lsr r1
   113c8:	ldr	r3, [pc, #4]	; 113d4 <abort@plt+0x658>
   113cc:	strb	r0, [r3, #4]
   113d0:	bx	lr
   113d4:	andeq	r5, r2, r0, lsr r1
   113d8:	ldr	r3, [pc, #180]	; 11494 <abort@plt+0x718>
   113dc:	push	{r4, r5, r6, lr}
   113e0:	sub	sp, sp, #8
   113e4:	ldr	r0, [r3]
   113e8:	bl	14144 <abort@plt+0x33c8>
   113ec:	cmp	r0, #0
   113f0:	beq	11418 <abort@plt+0x69c>
   113f4:	bl	10cd4 <__errno_location@plt>
   113f8:	ldr	r5, [pc, #152]	; 11498 <abort@plt+0x71c>
   113fc:	ldrb	r3, [r5, #4]
   11400:	cmp	r3, #0
   11404:	mov	r4, r0
   11408:	beq	11434 <abort@plt+0x6b8>
   1140c:	ldr	r3, [r0]
   11410:	cmp	r3, #32
   11414:	bne	11434 <abort@plt+0x6b8>
   11418:	ldr	r3, [pc, #124]	; 1149c <abort@plt+0x720>
   1141c:	ldr	r0, [r3]
   11420:	bl	14144 <abort@plt+0x33c8>
   11424:	cmp	r0, #0
   11428:	bne	11474 <abort@plt+0x6f8>
   1142c:	add	sp, sp, #8
   11430:	pop	{r4, r5, r6, pc}
   11434:	mov	r2, #5
   11438:	ldr	r1, [pc, #96]	; 114a0 <abort@plt+0x724>
   1143c:	mov	r0, #0
   11440:	bl	10bf0 <dcgettext@plt>
   11444:	mov	r6, r0
   11448:	ldr	r0, [r5]
   1144c:	cmp	r0, #0
   11450:	beq	11480 <abort@plt+0x704>
   11454:	ldr	r4, [r4]
   11458:	bl	13684 <abort@plt+0x2908>
   1145c:	mov	r1, r4
   11460:	str	r6, [sp]
   11464:	ldr	r2, [pc, #56]	; 114a4 <abort@plt+0x728>
   11468:	mov	r3, r0
   1146c:	mov	r0, #0
   11470:	bl	10c68 <error@plt>
   11474:	ldr	r3, [pc, #44]	; 114a8 <abort@plt+0x72c>
   11478:	ldr	r0, [r3]
   1147c:	bl	10bc0 <_exit@plt>
   11480:	mov	r3, r6
   11484:	ldr	r1, [r4]
   11488:	ldr	r2, [pc, #28]	; 114ac <abort@plt+0x730>
   1148c:	bl	10c68 <error@plt>
   11490:	b	11474 <abort@plt+0x6f8>
   11494:	andeq	r5, r2, r4, lsr #2
   11498:	andeq	r5, r2, r0, lsr r1
   1149c:	andeq	r5, r2, r0, lsr #2
   114a0:	andeq	r4, r1, r4, ror #18
   114a4:	andeq	r4, r1, r0, ror r9
   114a8:	andeq	r5, r2, ip, asr #1
   114ac:	andeq	r4, r1, r4, ror r9
   114b0:	push	{r4, r5, r6, r7, r8, lr}
   114b4:	subs	r4, r2, #0
   114b8:	beq	11518 <abort@plt+0x79c>
   114bc:	mov	r7, r0
   114c0:	mov	r5, r1
   114c4:	mov	r6, #0
   114c8:	b	114e4 <abort@plt+0x768>
   114cc:	cmp	r0, #0
   114d0:	beq	11504 <abort@plt+0x788>
   114d4:	subs	r4, r4, r0
   114d8:	add	r6, r6, r0
   114dc:	add	r5, r5, r0
   114e0:	beq	114fc <abort@plt+0x780>
   114e4:	mov	r2, r4
   114e8:	mov	r1, r5
   114ec:	mov	r0, r7
   114f0:	bl	1387c <abort@plt+0x2b00>
   114f4:	cmn	r0, #1
   114f8:	bne	114cc <abort@plt+0x750>
   114fc:	mov	r0, r6
   11500:	pop	{r4, r5, r6, r7, r8, pc}
   11504:	bl	10cd4 <__errno_location@plt>
   11508:	mov	r3, #28
   1150c:	str	r3, [r0]
   11510:	mov	r0, r6
   11514:	pop	{r4, r5, r6, r7, r8, pc}
   11518:	mov	r6, r4
   1151c:	b	114fc <abort@plt+0x780>
   11520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11524:	sub	sp, sp, #20
   11528:	ldr	r5, [pc, #184]	; 115e8 <abort@plt+0x86c>
   1152c:	ldr	r4, [pc, #184]	; 115ec <abort@plt+0x870>
   11530:	mov	r6, #0
   11534:	ldr	ip, [r5]
   11538:	cmp	r0, #2
   1153c:	ldr	r7, [r4]
   11540:	str	ip, [sp, #12]
   11544:	ldr	sl, [sp, #56]	; 0x38
   11548:	str	r6, [r4]
   1154c:	ldr	fp, [sp, #60]	; 0x3c
   11550:	beq	1157c <abort@plt+0x800>
   11554:	ldr	r0, [sp, #12]
   11558:	ldr	r3, [pc, #144]	; 115f0 <abort@plt+0x874>
   1155c:	ldr	r1, [r5]
   11560:	mov	r2, #0
   11564:	cmp	r0, r1
   11568:	str	r7, [r4]
   1156c:	str	r2, [r3]
   11570:	bne	115e4 <abort@plt+0x868>
   11574:	add	sp, sp, #20
   11578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1157c:	mov	r8, r2
   11580:	mov	r9, r3
   11584:	str	r6, [sp]
   11588:	ldr	r3, [pc, #100]	; 115f4 <abort@plt+0x878>
   1158c:	ldr	r2, [pc, #100]	; 115f8 <abort@plt+0x87c>
   11590:	bl	10ca4 <getopt_long@plt>
   11594:	cmn	r0, #1
   11598:	beq	11554 <abort@plt+0x7d8>
   1159c:	cmp	r0, #104	; 0x68
   115a0:	beq	115d8 <abort@plt+0x85c>
   115a4:	cmp	r0, #118	; 0x76
   115a8:	bne	11554 <abort@plt+0x7d8>
   115ac:	ldr	r0, [pc, #72]	; 115fc <abort@plt+0x880>
   115b0:	add	ip, sp, #64	; 0x40
   115b4:	mov	r3, sl
   115b8:	ldr	r0, [r0]
   115bc:	mov	r2, r9
   115c0:	mov	r1, r8
   115c4:	str	ip, [sp]
   115c8:	str	ip, [sp, #8]
   115cc:	bl	13ccc <abort@plt+0x2f50>
   115d0:	mov	r0, r6
   115d4:	bl	10cbc <exit@plt>
   115d8:	mov	r0, r6
   115dc:	blx	fp
   115e0:	b	11554 <abort@plt+0x7d8>
   115e4:	bl	10bfc <__stack_chk_fail@plt>
   115e8:	andeq	r4, r2, r8, lsl #30
   115ec:	andeq	r5, r2, r8, lsr #2
   115f0:	andeq	r5, r2, r8, lsl r1
   115f4:	andeq	r4, r1, r8, ror r9
   115f8:	ldrdeq	r4, [r1], -r8
   115fc:	andeq	r5, r2, r4, lsr #2
   11600:	push	{r4, r5, r6, lr}
   11604:	subs	r4, r0, #0
   11608:	beq	1167c <abort@plt+0x900>
   1160c:	mov	r1, #47	; 0x2f
   11610:	bl	10d4c <strrchr@plt>
   11614:	subs	r5, r0, #0
   11618:	beq	11668 <abort@plt+0x8ec>
   1161c:	add	r6, r5, #1
   11620:	sub	r3, r6, r4
   11624:	cmp	r3, #6
   11628:	ble	11668 <abort@plt+0x8ec>
   1162c:	mov	r2, #7
   11630:	ldr	r1, [pc, #96]	; 11698 <abort@plt+0x91c>
   11634:	sub	r0, r5, #6
   11638:	bl	10d70 <strncmp@plt>
   1163c:	cmp	r0, #0
   11640:	bne	11668 <abort@plt+0x8ec>
   11644:	mov	r2, #3
   11648:	ldr	r1, [pc, #76]	; 1169c <abort@plt+0x920>
   1164c:	mov	r0, r6
   11650:	bl	10d70 <strncmp@plt>
   11654:	cmp	r0, #0
   11658:	movne	r4, r6
   1165c:	ldreq	r3, [pc, #60]	; 116a0 <abort@plt+0x924>
   11660:	addeq	r4, r5, #4
   11664:	streq	r4, [r3]
   11668:	ldr	r2, [pc, #52]	; 116a4 <abort@plt+0x928>
   1166c:	ldr	r3, [pc, #52]	; 116a8 <abort@plt+0x92c>
   11670:	str	r4, [r2]
   11674:	str	r4, [r3]
   11678:	pop	{r4, r5, r6, pc}
   1167c:	ldr	r3, [pc, #40]	; 116ac <abort@plt+0x930>
   11680:	mov	r2, #55	; 0x37
   11684:	mov	r1, #1
   11688:	ldr	r3, [r3]
   1168c:	ldr	r0, [pc, #28]	; 116b0 <abort@plt+0x934>
   11690:	bl	10c2c <fwrite@plt>
   11694:	bl	10d7c <abort@plt>
   11698:	strdeq	r4, [r1], -r0
   1169c:	strdeq	r4, [r1], -r8
   116a0:	andeq	r5, r2, r0, lsl r1
   116a4:	andeq	r5, r2, r8, lsr r1
   116a8:	andeq	r5, r2, r4, lsl r1
   116ac:	andeq	r5, r2, r0, lsr #2
   116b0:			; <UNDEFINED> instruction: 0x000149b8
   116b4:	push	{r4, lr}
   116b8:	mov	r2, #48	; 0x30
   116bc:	mov	r4, r1
   116c0:	mov	r1, #0
   116c4:	bl	10cec <memset@plt>
   116c8:	cmp	r4, #10
   116cc:	beq	116d8 <abort@plt+0x95c>
   116d0:	str	r4, [r0]
   116d4:	pop	{r4, pc}
   116d8:	bl	10d7c <abort@plt>
   116dc:	push	{r4, r5, r6, lr}
   116e0:	mov	r2, #5
   116e4:	mov	r5, r0
   116e8:	mov	r6, r1
   116ec:	mov	r1, r0
   116f0:	mov	r0, #0
   116f4:	bl	10bf0 <dcgettext@plt>
   116f8:	cmp	r5, r0
   116fc:	mov	r4, r0
   11700:	beq	1170c <abort@plt+0x990>
   11704:	mov	r0, r4
   11708:	pop	{r4, r5, r6, pc}
   1170c:	bl	14204 <abort@plt+0x3488>
   11710:	ldrb	r3, [r0]
   11714:	bic	r3, r3, #32
   11718:	cmp	r3, #85	; 0x55
   1171c:	bne	1177c <abort@plt+0xa00>
   11720:	ldrb	r3, [r0, #1]
   11724:	bic	r3, r3, #32
   11728:	cmp	r3, #84	; 0x54
   1172c:	bne	117f4 <abort@plt+0xa78>
   11730:	ldrb	r3, [r0, #2]
   11734:	bic	r3, r3, #32
   11738:	cmp	r3, #70	; 0x46
   1173c:	bne	117f4 <abort@plt+0xa78>
   11740:	ldrb	r3, [r0, #3]
   11744:	cmp	r3, #45	; 0x2d
   11748:	bne	117f4 <abort@plt+0xa78>
   1174c:	ldrb	r3, [r0, #4]
   11750:	cmp	r3, #56	; 0x38
   11754:	bne	117f4 <abort@plt+0xa78>
   11758:	ldrb	r3, [r0, #5]
   1175c:	cmp	r3, #0
   11760:	bne	117f4 <abort@plt+0xa78>
   11764:	ldrb	r2, [r4]
   11768:	ldr	r3, [pc, #156]	; 1180c <abort@plt+0xa90>
   1176c:	ldr	r4, [pc, #156]	; 11810 <abort@plt+0xa94>
   11770:	cmp	r2, #96	; 0x60
   11774:	movne	r4, r3
   11778:	b	11704 <abort@plt+0x988>
   1177c:	cmp	r3, #71	; 0x47
   11780:	bne	117f4 <abort@plt+0xa78>
   11784:	ldrb	r3, [r0, #1]
   11788:	bic	r3, r3, #32
   1178c:	cmp	r3, #66	; 0x42
   11790:	bne	117f4 <abort@plt+0xa78>
   11794:	ldrb	r3, [r0, #2]
   11798:	cmp	r3, #49	; 0x31
   1179c:	bne	117f4 <abort@plt+0xa78>
   117a0:	ldrb	r3, [r0, #3]
   117a4:	cmp	r3, #56	; 0x38
   117a8:	bne	117f4 <abort@plt+0xa78>
   117ac:	ldrb	r3, [r0, #4]
   117b0:	cmp	r3, #48	; 0x30
   117b4:	bne	117f4 <abort@plt+0xa78>
   117b8:	ldrb	r3, [r0, #5]
   117bc:	cmp	r3, #51	; 0x33
   117c0:	bne	117f4 <abort@plt+0xa78>
   117c4:	ldrb	r3, [r0, #6]
   117c8:	cmp	r3, #48	; 0x30
   117cc:	bne	117f4 <abort@plt+0xa78>
   117d0:	ldrb	r3, [r0, #7]
   117d4:	cmp	r3, #0
   117d8:	bne	117f4 <abort@plt+0xa78>
   117dc:	ldrb	r2, [r4]
   117e0:	ldr	r3, [pc, #44]	; 11814 <abort@plt+0xa98>
   117e4:	ldr	r4, [pc, #44]	; 11818 <abort@plt+0xa9c>
   117e8:	cmp	r2, #96	; 0x60
   117ec:	movne	r4, r3
   117f0:	b	11704 <abort@plt+0x988>
   117f4:	ldr	r3, [pc, #32]	; 1181c <abort@plt+0xaa0>
   117f8:	ldr	r4, [pc, #32]	; 11820 <abort@plt+0xaa4>
   117fc:	cmp	r6, #9
   11800:	movne	r4, r3
   11804:	mov	r0, r4
   11808:	pop	{r4, r5, r6, pc}
   1180c:	andeq	r4, r1, r4, asr sl
   11810:	andeq	r4, r1, r0, ror #20
   11814:	andeq	r4, r1, r8, asr sl
   11818:	andeq	r4, r1, ip, asr sl
   1181c:	andeq	r4, r1, r4, ror #20
   11820:	andeq	r4, r1, r0, asr sl
   11824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11828:	sub	sp, sp, #124	; 0x7c
   1182c:	ldr	ip, [pc, #3576]	; 1262c <abort@plt+0x18b0>
   11830:	str	r3, [sp, #24]
   11834:	ldr	r3, [sp, #168]	; 0xa8
   11838:	ldr	ip, [ip]
   1183c:	str	r3, [sp, #56]	; 0x38
   11840:	ldr	r3, [sp, #172]	; 0xac
   11844:	ldr	r8, [sp, #160]	; 0xa0
   11848:	str	r3, [sp, #80]	; 0x50
   1184c:	ldr	r3, [sp, #176]	; 0xb0
   11850:	mov	fp, r0
   11854:	str	r3, [sp, #76]	; 0x4c
   11858:	mov	sl, r1
   1185c:	str	r2, [sp, #36]	; 0x24
   11860:	str	ip, [sp, #116]	; 0x74
   11864:	bl	10c44 <__ctype_get_mb_cur_max@plt>
   11868:	ldr	r3, [sp, #164]	; 0xa4
   1186c:	ands	r4, r3, #2
   11870:	movne	r3, #1
   11874:	moveq	r3, #0
   11878:	str	r3, [sp, #32]
   1187c:	str	r0, [sp, #64]	; 0x40
   11880:	cmp	r8, #10
   11884:	ldrls	pc, [pc, r8, lsl #2]
   11888:	b	13038 <abort@plt+0x22bc>
   1188c:	andeq	r1, r1, r0, lsl #25
   11890:	andeq	r1, r1, r8, lsl sp
   11894:	andeq	r2, r1, r8, lsl r3
   11898:	andeq	r1, r1, r8, lsr sp
   1189c:	andeq	r1, r1, ip, ror #23
   118a0:	andeq	r1, r1, r4, lsr ip
   118a4:			; <UNDEFINED> instruction: 0x00011cb0
   118a8:	andeq	r1, r1, r8, ror #25
   118ac:			; <UNDEFINED> instruction: 0x000118b8
   118b0:			; <UNDEFINED> instruction: 0x000118b8
   118b4:			; <UNDEFINED> instruction: 0x000118b8
   118b8:	cmp	r8, #10
   118bc:	beq	118e0 <abort@plt+0xb64>
   118c0:	mov	r1, r8
   118c4:	ldr	r0, [pc, #3428]	; 12630 <abort@plt+0x18b4>
   118c8:	bl	116dc <abort@plt+0x960>
   118cc:	mov	r1, r8
   118d0:	str	r0, [sp, #80]	; 0x50
   118d4:	ldr	r0, [pc, #3420]	; 12638 <abort@plt+0x18bc>
   118d8:	bl	116dc <abort@plt+0x960>
   118dc:	str	r0, [sp, #76]	; 0x4c
   118e0:	cmp	r4, #0
   118e4:	movne	r4, #0
   118e8:	beq	12cf8 <abort@plt+0x1f7c>
   118ec:	ldr	r7, [sp, #76]	; 0x4c
   118f0:	mov	r5, #0
   118f4:	mov	r6, #1
   118f8:	mov	r0, r7
   118fc:	str	r6, [sp, #40]	; 0x28
   11900:	str	r5, [sp, #68]	; 0x44
   11904:	bl	10cc8 <strlen@plt>
   11908:	str	r6, [sp, #28]
   1190c:	str	r5, [sp, #44]	; 0x2c
   11910:	str	r5, [sp, #72]	; 0x48
   11914:	str	r7, [sp, #60]	; 0x3c
   11918:	str	r0, [sp, #52]	; 0x34
   1191c:	str	r8, [sp, #160]	; 0xa0
   11920:	mov	r8, fp
   11924:	ldr	fp, [sp, #160]	; 0xa0
   11928:	mov	r9, #0
   1192c:	ldr	r3, [sp, #24]
   11930:	cmn	r3, #1
   11934:	beq	11e9c <abort@plt+0x1120>
   11938:	ldr	r3, [sp, #24]
   1193c:	subs	r6, r3, r9
   11940:	movne	r6, #1
   11944:	cmp	r6, #0
   11948:	beq	11eb4 <abort@plt+0x1138>
   1194c:	ldr	r7, [sp, #28]
   11950:	ldr	r0, [sp, #36]	; 0x24
   11954:	cmp	fp, #2
   11958:	moveq	r7, #0
   1195c:	andne	r7, r7, #1
   11960:	add	r3, r0, r9
   11964:	cmp	r7, #0
   11968:	str	r3, [sp, #48]	; 0x30
   1196c:	beq	12358 <abort@plt+0x15dc>
   11970:	ldr	r2, [sp, #52]	; 0x34
   11974:	cmp	r2, #0
   11978:	beq	1263c <abort@plt+0x18c0>
   1197c:	ldr	r1, [sp, #24]
   11980:	cmp	r2, #1
   11984:	mov	r3, r2
   11988:	movls	r3, #0
   1198c:	movhi	r3, #1
   11990:	cmn	r1, #1
   11994:	movne	r3, #0
   11998:	cmp	r3, #0
   1199c:	add	r5, r9, r2
   119a0:	beq	119ac <abort@plt+0xc30>
   119a4:	bl	10cc8 <strlen@plt>
   119a8:	str	r0, [sp, #24]
   119ac:	ldr	r3, [sp, #24]
   119b0:	cmp	r5, r3
   119b4:	bhi	1263c <abort@plt+0x18c0>
   119b8:	ldr	r2, [sp, #52]	; 0x34
   119bc:	ldr	r1, [sp, #60]	; 0x3c
   119c0:	ldr	r0, [sp, #48]	; 0x30
   119c4:	bl	10be4 <memcmp@plt>
   119c8:	cmp	r0, #0
   119cc:	bne	1263c <abort@plt+0x18c0>
   119d0:	ldr	r3, [sp, #32]
   119d4:	cmp	r3, #0
   119d8:	bne	12ef8 <abort@plt+0x217c>
   119dc:	ldr	r3, [sp, #48]	; 0x30
   119e0:	ldrb	r5, [r3]
   119e4:	cmp	r5, #126	; 0x7e
   119e8:	ldrls	pc, [pc, r5, lsl #2]
   119ec:	b	122bc <abort@plt+0x1540>
   119f0:	andeq	r2, r1, r8, lsr #3
   119f4:			; <UNDEFINED> instruction: 0x000122bc
   119f8:			; <UNDEFINED> instruction: 0x000122bc
   119fc:			; <UNDEFINED> instruction: 0x000122bc
   11a00:			; <UNDEFINED> instruction: 0x000122bc
   11a04:			; <UNDEFINED> instruction: 0x000122bc
   11a08:			; <UNDEFINED> instruction: 0x000122bc
   11a0c:	andeq	r2, r1, r4, ror r2
   11a10:	andeq	r2, r1, r4, ror #4
   11a14:	andeq	r2, r1, r4, ror #2
   11a18:	andeq	r2, r1, ip, lsr #2
   11a1c:	andeq	r2, r1, r4, lsl #3
   11a20:	andeq	r2, r1, ip, ror #2
   11a24:	muleq	r1, ip, r0
   11a28:			; <UNDEFINED> instruction: 0x000122bc
   11a2c:			; <UNDEFINED> instruction: 0x000122bc
   11a30:			; <UNDEFINED> instruction: 0x000122bc
   11a34:			; <UNDEFINED> instruction: 0x000122bc
   11a38:			; <UNDEFINED> instruction: 0x000122bc
   11a3c:			; <UNDEFINED> instruction: 0x000122bc
   11a40:			; <UNDEFINED> instruction: 0x000122bc
   11a44:			; <UNDEFINED> instruction: 0x000122bc
   11a48:			; <UNDEFINED> instruction: 0x000122bc
   11a4c:			; <UNDEFINED> instruction: 0x000122bc
   11a50:			; <UNDEFINED> instruction: 0x000122bc
   11a54:			; <UNDEFINED> instruction: 0x000122bc
   11a58:			; <UNDEFINED> instruction: 0x000122bc
   11a5c:			; <UNDEFINED> instruction: 0x000122bc
   11a60:			; <UNDEFINED> instruction: 0x000122bc
   11a64:			; <UNDEFINED> instruction: 0x000122bc
   11a68:			; <UNDEFINED> instruction: 0x000122bc
   11a6c:			; <UNDEFINED> instruction: 0x000122bc
   11a70:	andeq	r2, r1, ip, ror r2
   11a74:	muleq	r1, r0, r1
   11a78:	muleq	r1, r0, r1
   11a7c:	muleq	r1, r4, r2
   11a80:	muleq	r1, r0, r1
   11a84:			; <UNDEFINED> instruction: 0x000122b0
   11a88:	muleq	r1, r0, r1
   11a8c:	ldrdeq	r1, [r1], -r0
   11a90:	muleq	r1, r0, r1
   11a94:	muleq	r1, r0, r1
   11a98:	muleq	r1, r0, r1
   11a9c:			; <UNDEFINED> instruction: 0x000122b0
   11aa0:			; <UNDEFINED> instruction: 0x000122b0
   11aa4:			; <UNDEFINED> instruction: 0x000122b0
   11aa8:			; <UNDEFINED> instruction: 0x000122b0
   11aac:			; <UNDEFINED> instruction: 0x000122b0
   11ab0:			; <UNDEFINED> instruction: 0x000122b0
   11ab4:			; <UNDEFINED> instruction: 0x000122b0
   11ab8:			; <UNDEFINED> instruction: 0x000122b0
   11abc:			; <UNDEFINED> instruction: 0x000122b0
   11ac0:			; <UNDEFINED> instruction: 0x000122b0
   11ac4:			; <UNDEFINED> instruction: 0x000122b0
   11ac8:			; <UNDEFINED> instruction: 0x000122b0
   11acc:			; <UNDEFINED> instruction: 0x000122b0
   11ad0:			; <UNDEFINED> instruction: 0x000122b0
   11ad4:			; <UNDEFINED> instruction: 0x000122b0
   11ad8:			; <UNDEFINED> instruction: 0x000122b0
   11adc:	muleq	r1, r0, r1
   11ae0:	muleq	r1, r0, r1
   11ae4:	muleq	r1, r0, r1
   11ae8:	muleq	r1, r0, r1
   11aec:	andeq	r1, r1, r4, lsr #31
   11af0:			; <UNDEFINED> instruction: 0x000122bc
   11af4:			; <UNDEFINED> instruction: 0x000122b0
   11af8:			; <UNDEFINED> instruction: 0x000122b0
   11afc:			; <UNDEFINED> instruction: 0x000122b0
   11b00:			; <UNDEFINED> instruction: 0x000122b0
   11b04:			; <UNDEFINED> instruction: 0x000122b0
   11b08:			; <UNDEFINED> instruction: 0x000122b0
   11b0c:			; <UNDEFINED> instruction: 0x000122b0
   11b10:			; <UNDEFINED> instruction: 0x000122b0
   11b14:			; <UNDEFINED> instruction: 0x000122b0
   11b18:			; <UNDEFINED> instruction: 0x000122b0
   11b1c:			; <UNDEFINED> instruction: 0x000122b0
   11b20:			; <UNDEFINED> instruction: 0x000122b0
   11b24:			; <UNDEFINED> instruction: 0x000122b0
   11b28:			; <UNDEFINED> instruction: 0x000122b0
   11b2c:			; <UNDEFINED> instruction: 0x000122b0
   11b30:			; <UNDEFINED> instruction: 0x000122b0
   11b34:			; <UNDEFINED> instruction: 0x000122b0
   11b38:			; <UNDEFINED> instruction: 0x000122b0
   11b3c:			; <UNDEFINED> instruction: 0x000122b0
   11b40:			; <UNDEFINED> instruction: 0x000122b0
   11b44:			; <UNDEFINED> instruction: 0x000122b0
   11b48:			; <UNDEFINED> instruction: 0x000122b0
   11b4c:			; <UNDEFINED> instruction: 0x000122b0
   11b50:			; <UNDEFINED> instruction: 0x000122b0
   11b54:			; <UNDEFINED> instruction: 0x000122b0
   11b58:			; <UNDEFINED> instruction: 0x000122b0
   11b5c:	muleq	r1, r0, r1
   11b60:	andeq	r1, r1, ip, asr pc
   11b64:			; <UNDEFINED> instruction: 0x000122b0
   11b68:	muleq	r1, r0, r1
   11b6c:			; <UNDEFINED> instruction: 0x000122b0
   11b70:	muleq	r1, r0, r1
   11b74:			; <UNDEFINED> instruction: 0x000122b0
   11b78:			; <UNDEFINED> instruction: 0x000122b0
   11b7c:			; <UNDEFINED> instruction: 0x000122b0
   11b80:			; <UNDEFINED> instruction: 0x000122b0
   11b84:			; <UNDEFINED> instruction: 0x000122b0
   11b88:			; <UNDEFINED> instruction: 0x000122b0
   11b8c:			; <UNDEFINED> instruction: 0x000122b0
   11b90:			; <UNDEFINED> instruction: 0x000122b0
   11b94:			; <UNDEFINED> instruction: 0x000122b0
   11b98:			; <UNDEFINED> instruction: 0x000122b0
   11b9c:			; <UNDEFINED> instruction: 0x000122b0
   11ba0:			; <UNDEFINED> instruction: 0x000122b0
   11ba4:			; <UNDEFINED> instruction: 0x000122b0
   11ba8:			; <UNDEFINED> instruction: 0x000122b0
   11bac:			; <UNDEFINED> instruction: 0x000122b0
   11bb0:			; <UNDEFINED> instruction: 0x000122b0
   11bb4:			; <UNDEFINED> instruction: 0x000122b0
   11bb8:			; <UNDEFINED> instruction: 0x000122b0
   11bbc:			; <UNDEFINED> instruction: 0x000122b0
   11bc0:			; <UNDEFINED> instruction: 0x000122b0
   11bc4:			; <UNDEFINED> instruction: 0x000122b0
   11bc8:			; <UNDEFINED> instruction: 0x000122b0
   11bcc:			; <UNDEFINED> instruction: 0x000122b0
   11bd0:			; <UNDEFINED> instruction: 0x000122b0
   11bd4:			; <UNDEFINED> instruction: 0x000122b0
   11bd8:			; <UNDEFINED> instruction: 0x000122b0
   11bdc:	andeq	r1, r1, r4, ror sp
   11be0:	muleq	r1, r0, r1
   11be4:	andeq	r1, r1, r4, ror sp
   11be8:	muleq	r1, r4, r2
   11bec:	cmp	r4, #0
   11bf0:	moveq	r3, #1
   11bf4:	streq	r3, [sp, #28]
   11bf8:	beq	12324 <abort@plt+0x15a8>
   11bfc:	mov	r3, #0
   11c00:	mov	r4, r3
   11c04:	mov	r2, #1
   11c08:	str	r2, [sp, #40]	; 0x28
   11c0c:	str	r3, [sp, #68]	; 0x44
   11c10:	str	r2, [sp, #32]
   11c14:	str	r2, [sp, #52]	; 0x34
   11c18:	ldr	r3, [pc, #2584]	; 12638 <abort@plt+0x18bc>
   11c1c:	str	r4, [sp, #44]	; 0x2c
   11c20:	str	r4, [sp, #72]	; 0x48
   11c24:	str	r4, [sp, #28]
   11c28:	str	r3, [sp, #60]	; 0x3c
   11c2c:	mov	r8, #2
   11c30:	b	1191c <abort@plt+0xba0>
   11c34:	cmp	r4, #0
   11c38:	bne	12ec4 <abort@plt+0x2148>
   11c3c:	cmp	sl, #0
   11c40:	beq	12c84 <abort@plt+0x1f08>
   11c44:	mov	r3, #34	; 0x22
   11c48:	strb	r3, [fp]
   11c4c:	ldr	r3, [pc, #2528]	; 12634 <abort@plt+0x18b8>
   11c50:	mov	r1, r4
   11c54:	mov	r2, #1
   11c58:	str	r4, [sp, #68]	; 0x44
   11c5c:	str	r2, [sp, #40]	; 0x28
   11c60:	mov	r4, r2
   11c64:	str	r1, [sp, #44]	; 0x2c
   11c68:	str	r1, [sp, #72]	; 0x48
   11c6c:	str	r1, [sp, #32]
   11c70:	str	r2, [sp, #28]
   11c74:	str	r2, [sp, #52]	; 0x34
   11c78:	str	r3, [sp, #60]	; 0x3c
   11c7c:	b	1191c <abort@plt+0xba0>
   11c80:	mov	r3, #0
   11c84:	str	r3, [sp, #68]	; 0x44
   11c88:	str	r3, [sp, #44]	; 0x2c
   11c8c:	str	r3, [sp, #32]
   11c90:	str	r3, [sp, #28]
   11c94:	str	r3, [sp, #60]	; 0x3c
   11c98:	mov	r3, #1
   11c9c:	str	r8, [sp, #72]	; 0x48
   11ca0:	str	r8, [sp, #52]	; 0x34
   11ca4:	mov	r4, r8
   11ca8:	str	r3, [sp, #40]	; 0x28
   11cac:	b	1191c <abort@plt+0xba0>
   11cb0:	mov	r3, #1
   11cb4:	str	r3, [sp, #40]	; 0x28
   11cb8:	str	r3, [sp, #32]
   11cbc:	str	r3, [sp, #28]
   11cc0:	str	r3, [sp, #52]	; 0x34
   11cc4:	ldr	r3, [pc, #2408]	; 12634 <abort@plt+0x18b8>
   11cc8:	mov	r2, #0
   11ccc:	mov	r4, r2
   11cd0:	str	r2, [sp, #68]	; 0x44
   11cd4:	str	r2, [sp, #44]	; 0x2c
   11cd8:	str	r2, [sp, #72]	; 0x48
   11cdc:	str	r3, [sp, #60]	; 0x3c
   11ce0:	mov	r8, #5
   11ce4:	b	1191c <abort@plt+0xba0>
   11ce8:	mov	r3, #0
   11cec:	mov	r2, #1
   11cf0:	str	r2, [sp, #40]	; 0x28
   11cf4:	mov	r4, r3
   11cf8:	str	r3, [sp, #68]	; 0x44
   11cfc:	str	r2, [sp, #28]
   11d00:	str	r3, [sp, #44]	; 0x2c
   11d04:	str	r3, [sp, #72]	; 0x48
   11d08:	str	r3, [sp, #32]
   11d0c:	str	r3, [sp, #52]	; 0x34
   11d10:	str	r3, [sp, #60]	; 0x3c
   11d14:	b	1191c <abort@plt+0xba0>
   11d18:	mov	r2, #1
   11d1c:	mov	r3, #0
   11d20:	str	r2, [sp, #40]	; 0x28
   11d24:	mov	r4, r3
   11d28:	str	r3, [sp, #68]	; 0x44
   11d2c:	str	r8, [sp, #52]	; 0x34
   11d30:	str	r2, [sp, #32]
   11d34:	b	11c18 <abort@plt+0xe9c>
   11d38:	mov	r3, #1
   11d3c:	str	r3, [sp, #40]	; 0x28
   11d40:	str	r3, [sp, #32]
   11d44:	str	r3, [sp, #28]
   11d48:	str	r3, [sp, #52]	; 0x34
   11d4c:	ldr	r3, [pc, #2276]	; 12638 <abort@plt+0x18bc>
   11d50:	mov	r2, #0
   11d54:	mov	r4, r2
   11d58:	str	r2, [sp, #68]	; 0x44
   11d5c:	str	r2, [sp, #44]	; 0x2c
   11d60:	str	r2, [sp, #72]	; 0x48
   11d64:	str	r3, [sp, #60]	; 0x3c
   11d68:	mov	r8, #2
   11d6c:	b	1191c <abort@plt+0xba0>
   11d70:	mov	r7, #0
   11d74:	ldr	r3, [sp, #24]
   11d78:	cmn	r3, #1
   11d7c:	beq	128b8 <abort@plt+0x1b3c>
   11d80:	ldr	r3, [sp, #24]
   11d84:	subs	r3, r3, #1
   11d88:	movne	r3, #1
   11d8c:	cmp	r3, #0
   11d90:	sub	r2, fp, #2
   11d94:	clz	r2, r2
   11d98:	lsr	r2, r2, #5
   11d9c:	bne	11f98 <abort@plt+0x121c>
   11da0:	cmp	r9, #0
   11da4:	bne	11f98 <abort@plt+0x121c>
   11da8:	ldr	r3, [sp, #32]
   11dac:	tst	r3, r2
   11db0:	bne	120b8 <abort@plt+0x133c>
   11db4:	ldr	r3, [sp, #28]
   11db8:	eor	r3, r3, #1
   11dbc:	orr	r3, r2, r3
   11dc0:	ldr	r2, [sp, #32]
   11dc4:	eor	r3, r3, #1
   11dc8:	orrs	r3, r2, r3
   11dcc:	beq	11dfc <abort@plt+0x1080>
   11dd0:	mov	r3, #0
   11dd4:	ldr	r1, [sp, #56]	; 0x38
   11dd8:	cmp	r1, #0
   11ddc:	beq	11dfc <abort@plt+0x1080>
   11de0:	lsr	r2, r5, #5
   11de4:	and	r0, r5, #31
   11de8:	uxtb	r2, r2
   11dec:	ldr	r1, [r1, r2, lsl #2]
   11df0:	lsr	r2, r1, r0
   11df4:	tst	r2, #1
   11df8:	bne	11e04 <abort@plt+0x1088>
   11dfc:	cmp	r7, #0
   11e00:	beq	12054 <abort@plt+0x12d8>
   11e04:	sub	r2, fp, #2
   11e08:	clz	r2, r2
   11e0c:	lsr	r2, r2, #5
   11e10:	ldr	r3, [sp, #32]
   11e14:	cmp	r3, #0
   11e18:	bne	12144 <abort@plt+0x13c8>
   11e1c:	ldr	r3, [sp, #44]	; 0x2c
   11e20:	eor	r3, r3, #1
   11e24:	ands	r3, r2, r3
   11e28:	beq	11e60 <abort@plt+0x10e4>
   11e2c:	cmp	sl, r4
   11e30:	movhi	r2, #39	; 0x27
   11e34:	strbhi	r2, [r8, r4]
   11e38:	add	r2, r4, #1
   11e3c:	cmp	r2, sl
   11e40:	movcc	r1, #36	; 0x24
   11e44:	strbcc	r1, [r8, r2]
   11e48:	add	r2, r4, #2
   11e4c:	cmp	r2, sl
   11e50:	add	r4, r4, #3
   11e54:	movcc	r1, #39	; 0x27
   11e58:	strbcc	r1, [r8, r2]
   11e5c:	str	r3, [sp, #44]	; 0x2c
   11e60:	cmp	r4, sl
   11e64:	movcc	r3, #92	; 0x5c
   11e68:	strbcc	r3, [r8, r4]
   11e6c:	add	r9, r9, #1
   11e70:	add	r4, r4, #1
   11e74:	cmp	r4, sl
   11e78:	ldr	r3, [sp, #40]	; 0x28
   11e7c:	strbcc	r5, [r8, r4]
   11e80:	cmp	r6, #0
   11e84:	moveq	r3, #0
   11e88:	str	r3, [sp, #40]	; 0x28
   11e8c:	ldr	r3, [sp, #24]
   11e90:	add	r4, r4, #1
   11e94:	cmn	r3, #1
   11e98:	bne	11938 <abort@plt+0xbbc>
   11e9c:	ldr	r3, [sp, #36]	; 0x24
   11ea0:	ldrb	r6, [r3, r9]
   11ea4:	adds	r6, r6, #0
   11ea8:	movne	r6, #1
   11eac:	cmp	r6, #0
   11eb0:	bne	1194c <abort@plt+0xbd0>
   11eb4:	str	fp, [sp, #160]	; 0xa0
   11eb8:	mov	fp, r8
   11ebc:	ldr	r8, [sp, #160]	; 0xa0
   11ec0:	ldr	r1, [sp, #32]
   11ec4:	cmp	r4, #0
   11ec8:	sub	r2, r8, #2
   11ecc:	clz	r2, r2
   11ed0:	lsr	r2, r2, #5
   11ed4:	andeq	r3, r2, r1
   11ed8:	movne	r3, #0
   11edc:	cmp	r3, #0
   11ee0:	bne	12fcc <abort@plt+0x2250>
   11ee4:	eor	r3, r1, #1
   11ee8:	ands	r2, r2, r3
   11eec:	beq	12f08 <abort@plt+0x218c>
   11ef0:	ldr	r3, [sp, #68]	; 0x44
   11ef4:	cmp	r3, #0
   11ef8:	beq	12f0c <abort@plt+0x2190>
   11efc:	ldr	r3, [sp, #40]	; 0x28
   11f00:	cmp	r3, #0
   11f04:	bne	12f88 <abort@plt+0x220c>
   11f08:	ldr	r3, [sp, #72]	; 0x48
   11f0c:	adds	r3, r3, #0
   11f10:	movne	r3, #1
   11f14:	cmp	sl, #0
   11f18:	movne	r3, #0
   11f1c:	cmp	r3, #0
   11f20:	ldreq	r2, [sp, #68]	; 0x44
   11f24:	beq	12f0c <abort@plt+0x2190>
   11f28:	ldr	sl, [sp, #72]	; 0x48
   11f2c:	str	r3, [sp, #68]	; 0x44
   11f30:	ldr	r3, [pc, #1792]	; 12638 <abort@plt+0x18bc>
   11f34:	mov	r2, #39	; 0x27
   11f38:	mov	r4, #1
   11f3c:	str	r3, [sp, #60]	; 0x3c
   11f40:	mov	r3, #0
   11f44:	strb	r2, [fp]
   11f48:	str	r4, [sp, #52]	; 0x34
   11f4c:	mov	r8, #2
   11f50:	str	r3, [sp, #32]
   11f54:	b	1191c <abort@plt+0xba0>
   11f58:	mov	r7, #0
   11f5c:	cmp	fp, #2
   11f60:	beq	12898 <abort@plt+0x1b1c>
   11f64:	ldr	r3, [sp, #52]	; 0x34
   11f68:	ldr	r2, [sp, #28]
   11f6c:	ldr	r1, [sp, #32]
   11f70:	cmp	r3, #0
   11f74:	andne	r2, r2, r1
   11f78:	moveq	r2, #0
   11f7c:	cmp	r2, #0
   11f80:	moveq	r5, #92	; 0x5c
   11f84:	moveq	r3, r5
   11f88:	bne	128a4 <abort@plt+0x1b28>
   11f8c:	ldr	r1, [sp, #28]
   11f90:	cmp	r1, #0
   11f94:	bne	13014 <abort@plt+0x2298>
   11f98:	mov	r6, #0
   11f9c:	b	11db4 <abort@plt+0x1038>
   11fa0:	mov	r7, #0
   11fa4:	cmp	fp, #2
   11fa8:	beq	12908 <abort@plt+0x1b8c>
   11fac:	cmp	fp, #5
   11fb0:	beq	128cc <abort@plt+0x1b50>
   11fb4:	sub	r2, fp, #2
   11fb8:	mov	r6, #0
   11fbc:	clz	r2, r2
   11fc0:	mov	r5, #63	; 0x3f
   11fc4:	lsr	r2, r2, #5
   11fc8:	b	11db4 <abort@plt+0x1038>
   11fcc:	mov	r7, #0
   11fd0:	cmp	fp, #2
   11fd4:	strne	r6, [sp, #68]	; 0x44
   11fd8:	movne	r2, #0
   11fdc:	movne	r5, #39	; 0x27
   11fe0:	bne	11db4 <abort@plt+0x1038>
   11fe4:	ldr	r3, [sp, #32]
   11fe8:	cmp	r3, #0
   11fec:	bne	12ce8 <abort@plt+0x1f6c>
   11ff0:	cmp	sl, #0
   11ff4:	ldr	r3, [sp, #72]	; 0x48
   11ff8:	clz	r3, r3
   11ffc:	lsr	r3, r3, #5
   12000:	moveq	r3, #0
   12004:	cmp	r3, #0
   12008:	bne	12c1c <abort@plt+0x1ea0>
   1200c:	cmp	sl, r4
   12010:	movhi	r3, #39	; 0x27
   12014:	strbhi	r3, [r8, r4]
   12018:	add	r3, r4, #1
   1201c:	cmp	sl, r3
   12020:	movhi	r2, #92	; 0x5c
   12024:	strbhi	r2, [r8, r3]
   12028:	add	r3, r4, #2
   1202c:	cmp	sl, r3
   12030:	movhi	r2, #39	; 0x27
   12034:	strbhi	r2, [r8, r3]
   12038:	mov	r3, #0
   1203c:	cmp	r7, #0
   12040:	add	r4, r4, #3
   12044:	str	r3, [sp, #44]	; 0x2c
   12048:	str	r6, [sp, #68]	; 0x44
   1204c:	mov	r5, #39	; 0x27
   12050:	bne	11e04 <abort@plt+0x1088>
   12054:	ldr	r2, [sp, #44]	; 0x2c
   12058:	eor	r3, r3, #1
   1205c:	and	r3, r3, r2
   12060:	add	r9, r9, #1
   12064:	uxtb	r3, r3
   12068:	cmp	r3, #0
   1206c:	beq	11e74 <abort@plt+0x10f8>
   12070:	cmp	sl, r4
   12074:	movhi	r3, #39	; 0x27
   12078:	strbhi	r3, [r8, r4]
   1207c:	add	r3, r4, #1
   12080:	cmp	sl, r3
   12084:	movhi	r2, #39	; 0x27
   12088:	strbhi	r2, [r8, r3]
   1208c:	mov	r3, #0
   12090:	add	r4, r4, #2
   12094:	str	r3, [sp, #44]	; 0x2c
   12098:	b	11e74 <abort@plt+0x10f8>
   1209c:	mov	r3, #114	; 0x72
   120a0:	ldr	r1, [sp, #32]
   120a4:	sub	r2, fp, #2
   120a8:	clz	r2, r2
   120ac:	lsr	r2, r2, #5
   120b0:	tst	r2, r1
   120b4:	beq	11f8c <abort@plt+0x1210>
   120b8:	mov	fp, r8
   120bc:	mov	r8, #2
   120c0:	ldr	r3, [sp, #28]
   120c4:	cmp	r3, #0
   120c8:	movne	r8, #4
   120cc:	ldr	r3, [sp, #164]	; 0xa4
   120d0:	mov	ip, #0
   120d4:	bic	r3, r3, #2
   120d8:	str	r3, [sp, #4]
   120dc:	ldr	r3, [sp, #76]	; 0x4c
   120e0:	str	r8, [sp]
   120e4:	str	r3, [sp, #16]
   120e8:	ldr	r3, [sp, #80]	; 0x50
   120ec:	ldr	r2, [sp, #36]	; 0x24
   120f0:	str	r3, [sp, #12]
   120f4:	mov	r1, sl
   120f8:	ldr	r3, [sp, #24]
   120fc:	mov	r0, fp
   12100:	str	ip, [sp, #8]
   12104:	bl	11824 <abort@plt+0xaa8>
   12108:	mov	r4, r0
   1210c:	ldr	r3, [pc, #1304]	; 1262c <abort@plt+0x18b0>
   12110:	ldr	r2, [sp, #116]	; 0x74
   12114:	mov	r0, r4
   12118:	ldr	r3, [r3]
   1211c:	cmp	r2, r3
   12120:	bne	13010 <abort@plt+0x2294>
   12124:	add	sp, sp, #124	; 0x7c
   12128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1212c:	mov	r5, #110	; 0x6e
   12130:	ldr	r3, [sp, #32]
   12134:	mov	r2, #0
   12138:	cmp	r3, #0
   1213c:	mov	r6, r2
   12140:	beq	11e1c <abort@plt+0x10a0>
   12144:	str	fp, [sp, #160]	; 0xa0
   12148:	mov	fp, r8
   1214c:	ldr	r8, [sp, #160]	; 0xa0
   12150:	mov	r3, r2
   12154:	ldr	r2, [sp, #28]
   12158:	and	r2, r2, r3
   1215c:	str	r2, [sp, #28]
   12160:	b	120c0 <abort@plt+0x1344>
   12164:	mov	r5, #116	; 0x74
   12168:	b	12130 <abort@plt+0x13b4>
   1216c:	mov	r5, #102	; 0x66
   12170:	ldr	r3, [sp, #32]
   12174:	cmp	r3, #0
   12178:	bne	12d24 <abort@plt+0x1fa8>
   1217c:	mov	r6, #0
   12180:	b	11e60 <abort@plt+0x10e4>
   12184:	mov	r5, #118	; 0x76
   12188:	b	12170 <abort@plt+0x13f4>
   1218c:	mov	r7, #0
   12190:	mov	r6, #0
   12194:	b	11dd0 <abort@plt+0x1054>
   12198:	ldr	r3, [sp, #32]
   1219c:	cmp	r3, #0
   121a0:	bne	12f68 <abort@plt+0x21ec>
   121a4:	mov	r7, r3
   121a8:	ldr	r3, [sp, #44]	; 0x2c
   121ac:	sub	r2, fp, #2
   121b0:	eor	r3, r3, #1
   121b4:	clz	r2, r2
   121b8:	lsr	r2, r2, #5
   121bc:	ands	r3, r2, r3
   121c0:	beq	12c08 <abort@plt+0x1e8c>
   121c4:	cmp	sl, r4
   121c8:	movhi	r1, #39	; 0x27
   121cc:	strbhi	r1, [r8, r4]
   121d0:	add	r1, r4, #1
   121d4:	cmp	sl, r1
   121d8:	movhi	r0, #36	; 0x24
   121dc:	strbhi	r0, [r8, r1]
   121e0:	add	r1, r4, #2
   121e4:	cmp	sl, r1
   121e8:	movhi	r0, #39	; 0x27
   121ec:	strbhi	r0, [r8, r1]
   121f0:	add	r1, r4, #3
   121f4:	cmp	sl, r1
   121f8:	bls	12c68 <abort@plt+0x1eec>
   121fc:	mov	r4, r1
   12200:	mov	r1, #92	; 0x5c
   12204:	strb	r1, [r8, r4]
   12208:	mov	r1, r4
   1220c:	str	r3, [sp, #44]	; 0x2c
   12210:	cmp	fp, #2
   12214:	add	r4, r4, #1
   12218:	beq	12cb0 <abort@plt+0x1f34>
   1221c:	ldr	r0, [sp, #24]
   12220:	add	r3, r9, #1
   12224:	cmp	r3, r0
   12228:	bcs	12240 <abort@plt+0x14c4>
   1222c:	ldr	r0, [sp, #36]	; 0x24
   12230:	ldrb	r3, [r0, r3]
   12234:	sub	r3, r3, #48	; 0x30
   12238:	cmp	r3, #9
   1223c:	bls	12cc0 <abort@plt+0x1f44>
   12240:	mov	r5, #48	; 0x30
   12244:	ldr	r3, [sp, #28]
   12248:	eor	r3, r3, #1
   1224c:	orrs	r2, r2, r3
   12250:	mov	r3, r6
   12254:	moveq	r6, r2
   12258:	beq	11dd4 <abort@plt+0x1058>
   1225c:	mov	r6, #0
   12260:	b	11dfc <abort@plt+0x1080>
   12264:	mov	r2, #0
   12268:	mov	r6, r2
   1226c:	mov	r5, #98	; 0x62
   12270:	b	11e1c <abort@plt+0x10a0>
   12274:	mov	r5, #97	; 0x61
   12278:	b	1217c <abort@plt+0x1400>
   1227c:	mov	r3, r7
   12280:	mov	r6, r7
   12284:	mov	r2, #0
   12288:	mov	r7, r3
   1228c:	mov	r5, #32
   12290:	b	11db4 <abort@plt+0x1038>
   12294:	cmp	r9, #0
   12298:	mov	r3, r7
   1229c:	bne	12864 <abort@plt+0x1ae8>
   122a0:	mov	r6, r7
   122a4:	mov	r2, r9
   122a8:	mov	r7, r3
   122ac:	b	11db4 <abort@plt+0x1038>
   122b0:	mov	r6, r7
   122b4:	b	11dd0 <abort@plt+0x1054>
   122b8:	mov	r7, #0
   122bc:	ldr	r3, [sp, #64]	; 0x40
   122c0:	cmp	r3, #1
   122c4:	bne	12920 <abort@plt+0x1ba4>
   122c8:	bl	10cb0 <__ctype_b_loc@plt>
   122cc:	ldr	r2, [sp, #64]	; 0x40
   122d0:	sxth	r3, r5
   122d4:	mov	ip, r2
   122d8:	lsl	r3, r3, #1
   122dc:	ldr	r2, [r0]
   122e0:	ldrh	r3, [r2, r3]
   122e4:	and	r3, r3, #16384	; 0x4000
   122e8:	cmp	r3, #0
   122ec:	ldr	r3, [sp, #28]
   122f0:	movne	r6, #1
   122f4:	moveq	r6, #0
   122f8:	movne	r2, #0
   122fc:	andeq	r2, r3, #1
   12300:	cmp	r2, #0
   12304:	bne	12c30 <abort@plt+0x1eb4>
   12308:	sub	r2, fp, #2
   1230c:	clz	r2, r2
   12310:	lsr	r2, r2, #5
   12314:	b	11db4 <abort@plt+0x1038>
   12318:	cmp	r4, #0
   1231c:	bne	12fdc <abort@plt+0x2260>
   12320:	str	r4, [sp, #28]
   12324:	cmp	sl, #0
   12328:	bne	13020 <abort@plt+0x22a4>
   1232c:	ldr	r3, [pc, #772]	; 12638 <abort@plt+0x18bc>
   12330:	mov	r4, #1
   12334:	str	r4, [sp, #40]	; 0x28
   12338:	str	r3, [sp, #60]	; 0x3c
   1233c:	str	r4, [sp, #52]	; 0x34
   12340:	str	sl, [sp, #72]	; 0x48
   12344:	str	sl, [sp, #68]	; 0x44
   12348:	str	sl, [sp, #44]	; 0x2c
   1234c:	str	sl, [sp, #32]
   12350:	mov	r8, #2
   12354:	b	1191c <abort@plt+0xba0>
   12358:	ldr	r3, [sp, #36]	; 0x24
   1235c:	ldrb	r5, [r3, r9]
   12360:	cmp	r5, #126	; 0x7e
   12364:	ldrls	pc, [pc, r5, lsl #2]
   12368:	b	122bc <abort@plt+0x1540>
   1236c:	andeq	r2, r1, r0, lsr #11
   12370:			; <UNDEFINED> instruction: 0x000122bc
   12374:			; <UNDEFINED> instruction: 0x000122bc
   12378:			; <UNDEFINED> instruction: 0x000122bc
   1237c:			; <UNDEFINED> instruction: 0x000122bc
   12380:			; <UNDEFINED> instruction: 0x000122bc
   12384:			; <UNDEFINED> instruction: 0x000122bc
   12388:	andeq	r2, r1, ip, lsl #11
   1238c:	andeq	r2, r1, r8, ror r5
   12390:	andeq	r2, r1, r0, ror r5
   12394:	andeq	r2, r1, r8, ror #10
   12398:	andeq	r2, r1, r8, lsl r6
   1239c:	andeq	r2, r1, r4, lsl #12
   123a0:	muleq	r1, ip, r0
   123a4:			; <UNDEFINED> instruction: 0x000122bc
   123a8:			; <UNDEFINED> instruction: 0x000122bc
   123ac:			; <UNDEFINED> instruction: 0x000122bc
   123b0:			; <UNDEFINED> instruction: 0x000122bc
   123b4:			; <UNDEFINED> instruction: 0x000122bc
   123b8:			; <UNDEFINED> instruction: 0x000122bc
   123bc:			; <UNDEFINED> instruction: 0x000122bc
   123c0:			; <UNDEFINED> instruction: 0x000122bc
   123c4:			; <UNDEFINED> instruction: 0x000122bc
   123c8:			; <UNDEFINED> instruction: 0x000122bc
   123cc:			; <UNDEFINED> instruction: 0x000122bc
   123d0:			; <UNDEFINED> instruction: 0x000122bc
   123d4:			; <UNDEFINED> instruction: 0x000122bc
   123d8:			; <UNDEFINED> instruction: 0x000122bc
   123dc:			; <UNDEFINED> instruction: 0x000122bc
   123e0:			; <UNDEFINED> instruction: 0x000122bc
   123e4:			; <UNDEFINED> instruction: 0x000122bc
   123e8:			; <UNDEFINED> instruction: 0x000122bc
   123ec:	strdeq	r2, [r1], -r4
   123f0:	andeq	r2, r1, r0, ror #11
   123f4:	andeq	r2, r1, r0, ror #11
   123f8:	ldrdeq	r2, [r1], -r0
   123fc:	andeq	r2, r1, r0, ror #11
   12400:	andeq	r2, r1, r8, lsl #6
   12404:	andeq	r2, r1, r0, ror #11
   12408:	ldrdeq	r1, [r1], -r0
   1240c:	andeq	r2, r1, r0, ror #11
   12410:	andeq	r2, r1, r0, ror #11
   12414:	andeq	r2, r1, r0, ror #11
   12418:	andeq	r2, r1, r8, lsl #6
   1241c:	andeq	r2, r1, r8, lsl #6
   12420:	andeq	r2, r1, r8, lsl #6
   12424:	andeq	r2, r1, r8, lsl #6
   12428:	andeq	r2, r1, r8, lsl #6
   1242c:	andeq	r2, r1, r8, lsl #6
   12430:	andeq	r2, r1, r8, lsl #6
   12434:	andeq	r2, r1, r8, lsl #6
   12438:	andeq	r2, r1, r8, lsl #6
   1243c:	andeq	r2, r1, r8, lsl #6
   12440:	andeq	r2, r1, r8, lsl #6
   12444:	andeq	r2, r1, r8, lsl #6
   12448:	andeq	r2, r1, r8, lsl #6
   1244c:	andeq	r2, r1, r8, lsl #6
   12450:	andeq	r2, r1, r8, lsl #6
   12454:	andeq	r2, r1, r8, lsl #6
   12458:	andeq	r2, r1, r0, ror #11
   1245c:	andeq	r2, r1, r0, ror #11
   12460:	andeq	r2, r1, r0, ror #11
   12464:	andeq	r2, r1, r0, ror #11
   12468:	andeq	r1, r1, r4, lsr #31
   1246c:			; <UNDEFINED> instruction: 0x000122bc
   12470:	andeq	r2, r1, r8, lsl #6
   12474:	andeq	r2, r1, r8, lsl #6
   12478:	andeq	r2, r1, r8, lsl #6
   1247c:	andeq	r2, r1, r8, lsl #6
   12480:	andeq	r2, r1, r8, lsl #6
   12484:	andeq	r2, r1, r8, lsl #6
   12488:	andeq	r2, r1, r8, lsl #6
   1248c:	andeq	r2, r1, r8, lsl #6
   12490:	andeq	r2, r1, r8, lsl #6
   12494:	andeq	r2, r1, r8, lsl #6
   12498:	andeq	r2, r1, r8, lsl #6
   1249c:	andeq	r2, r1, r8, lsl #6
   124a0:	andeq	r2, r1, r8, lsl #6
   124a4:	andeq	r2, r1, r8, lsl #6
   124a8:	andeq	r2, r1, r8, lsl #6
   124ac:	andeq	r2, r1, r8, lsl #6
   124b0:	andeq	r2, r1, r8, lsl #6
   124b4:	andeq	r2, r1, r8, lsl #6
   124b8:	andeq	r2, r1, r8, lsl #6
   124bc:	andeq	r2, r1, r8, lsl #6
   124c0:	andeq	r2, r1, r8, lsl #6
   124c4:	andeq	r2, r1, r8, lsl #6
   124c8:	andeq	r2, r1, r8, lsl #6
   124cc:	andeq	r2, r1, r8, lsl #6
   124d0:	andeq	r2, r1, r8, lsl #6
   124d4:	andeq	r2, r1, r8, lsl #6
   124d8:	andeq	r2, r1, r0, ror #11
   124dc:	andeq	r1, r1, ip, asr pc
   124e0:	andeq	r2, r1, r8, lsl #6
   124e4:	andeq	r2, r1, r0, ror #11
   124e8:	andeq	r2, r1, r8, lsl #6
   124ec:	andeq	r2, r1, r0, ror #11
   124f0:	andeq	r2, r1, r8, lsl #6
   124f4:	andeq	r2, r1, r8, lsl #6
   124f8:	andeq	r2, r1, r8, lsl #6
   124fc:	andeq	r2, r1, r8, lsl #6
   12500:	andeq	r2, r1, r8, lsl #6
   12504:	andeq	r2, r1, r8, lsl #6
   12508:	andeq	r2, r1, r8, lsl #6
   1250c:	andeq	r2, r1, r8, lsl #6
   12510:	andeq	r2, r1, r8, lsl #6
   12514:	andeq	r2, r1, r8, lsl #6
   12518:	andeq	r2, r1, r8, lsl #6
   1251c:	andeq	r2, r1, r8, lsl #6
   12520:	andeq	r2, r1, r8, lsl #6
   12524:	andeq	r2, r1, r8, lsl #6
   12528:	andeq	r2, r1, r8, lsl #6
   1252c:	andeq	r2, r1, r8, lsl #6
   12530:	andeq	r2, r1, r8, lsl #6
   12534:	andeq	r2, r1, r8, lsl #6
   12538:	andeq	r2, r1, r8, lsl #6
   1253c:	andeq	r2, r1, r8, lsl #6
   12540:	andeq	r2, r1, r8, lsl #6
   12544:	andeq	r2, r1, r8, lsl #6
   12548:	andeq	r2, r1, r8, lsl #6
   1254c:	andeq	r2, r1, r8, lsl #6
   12550:	andeq	r2, r1, r8, lsl #6
   12554:	andeq	r2, r1, r8, lsl #6
   12558:	andeq	r1, r1, r4, ror sp
   1255c:	andeq	r2, r1, r0, ror #11
   12560:	andeq	r1, r1, r4, ror sp
   12564:	ldrdeq	r2, [r1], -r0
   12568:	mov	r3, #110	; 0x6e
   1256c:	b	120a0 <abort@plt+0x1324>
   12570:	mov	r3, #116	; 0x74
   12574:	b	120a0 <abort@plt+0x1324>
   12578:	sub	r2, fp, #2
   1257c:	mov	r3, #98	; 0x62
   12580:	clz	r2, r2
   12584:	lsr	r2, r2, #5
   12588:	b	11f8c <abort@plt+0x1210>
   1258c:	sub	r2, fp, #2
   12590:	mov	r3, #97	; 0x61
   12594:	clz	r2, r2
   12598:	lsr	r2, r2, #5
   1259c:	b	11f8c <abort@plt+0x1210>
   125a0:	ldr	r3, [sp, #28]
   125a4:	cmp	r3, #0
   125a8:	bne	12198 <abort@plt+0x141c>
   125ac:	ldr	r3, [sp, #164]	; 0xa4
   125b0:	tst	r3, #1
   125b4:	bne	12c28 <abort@plt+0x1eac>
   125b8:	ldr	r6, [sp, #28]
   125bc:	sub	r2, fp, #2
   125c0:	mov	r7, r6
   125c4:	clz	r2, r2
   125c8:	lsr	r2, r2, #5
   125cc:	b	11db4 <abort@plt+0x1038>
   125d0:	sub	r2, fp, #2
   125d4:	clz	r2, r2
   125d8:	lsr	r2, r2, #5
   125dc:	b	11da0 <abort@plt+0x1024>
   125e0:	sub	r2, fp, #2
   125e4:	mov	r6, #0
   125e8:	clz	r2, r2
   125ec:	lsr	r2, r2, #5
   125f0:	b	11da8 <abort@plt+0x102c>
   125f4:	sub	r2, fp, #2
   125f8:	clz	r2, r2
   125fc:	lsr	r2, r2, #5
   12600:	b	11da8 <abort@plt+0x102c>
   12604:	sub	r2, fp, #2
   12608:	mov	r3, #102	; 0x66
   1260c:	clz	r2, r2
   12610:	lsr	r2, r2, #5
   12614:	b	11f8c <abort@plt+0x1210>
   12618:	sub	r2, fp, #2
   1261c:	mov	r3, #118	; 0x76
   12620:	clz	r2, r2
   12624:	lsr	r2, r2, #5
   12628:	b	11f8c <abort@plt+0x1210>
   1262c:	andeq	r4, r2, r8, lsl #30
   12630:	andeq	r4, r1, r8, ror #20
   12634:	andeq	r4, r1, r0, asr sl
   12638:	andeq	r4, r1, r4, ror #20
   1263c:	ldr	r3, [sp, #48]	; 0x30
   12640:	ldrb	r5, [r3]
   12644:	cmp	r5, #126	; 0x7e
   12648:	ldrls	pc, [pc, r5, lsl #2]
   1264c:	b	122b8 <abort@plt+0x153c>
   12650:	muleq	r1, r8, r1
   12654:			; <UNDEFINED> instruction: 0x000122b8
   12658:			; <UNDEFINED> instruction: 0x000122b8
   1265c:			; <UNDEFINED> instruction: 0x000122b8
   12660:			; <UNDEFINED> instruction: 0x000122b8
   12664:			; <UNDEFINED> instruction: 0x000122b8
   12668:			; <UNDEFINED> instruction: 0x000122b8
   1266c:	muleq	r1, r0, r8
   12670:	andeq	r2, r1, r8, lsl #17
   12674:	andeq	r2, r1, r4, ror #2
   12678:	andeq	r2, r1, ip, lsr #2
   1267c:	andeq	r2, r1, r4, lsl #3
   12680:	andeq	r2, r1, ip, ror #2
   12684:	andeq	r2, r1, ip, ror r8
   12688:			; <UNDEFINED> instruction: 0x000122b8
   1268c:			; <UNDEFINED> instruction: 0x000122b8
   12690:			; <UNDEFINED> instruction: 0x000122b8
   12694:			; <UNDEFINED> instruction: 0x000122b8
   12698:			; <UNDEFINED> instruction: 0x000122b8
   1269c:			; <UNDEFINED> instruction: 0x000122b8
   126a0:			; <UNDEFINED> instruction: 0x000122b8
   126a4:			; <UNDEFINED> instruction: 0x000122b8
   126a8:			; <UNDEFINED> instruction: 0x000122b8
   126ac:			; <UNDEFINED> instruction: 0x000122b8
   126b0:			; <UNDEFINED> instruction: 0x000122b8
   126b4:			; <UNDEFINED> instruction: 0x000122b8
   126b8:			; <UNDEFINED> instruction: 0x000122b8
   126bc:			; <UNDEFINED> instruction: 0x000122b8
   126c0:			; <UNDEFINED> instruction: 0x000122b8
   126c4:			; <UNDEFINED> instruction: 0x000122b8
   126c8:			; <UNDEFINED> instruction: 0x000122b8
   126cc:			; <UNDEFINED> instruction: 0x000122b8
   126d0:	andeq	r2, r1, r4, ror r8
   126d4:	andeq	r2, r1, ip, lsl #3
   126d8:	andeq	r2, r1, ip, lsl #3
   126dc:	andeq	r2, r1, r8, asr r8
   126e0:	andeq	r2, r1, ip, lsl #3
   126e4:	andeq	r2, r1, ip, asr #16
   126e8:	andeq	r2, r1, ip, lsl #3
   126ec:	andeq	r1, r1, ip, asr #31
   126f0:	andeq	r2, r1, ip, lsl #3
   126f4:	andeq	r2, r1, ip, lsl #3
   126f8:	andeq	r2, r1, ip, lsl #3
   126fc:	andeq	r2, r1, ip, asr #16
   12700:	andeq	r2, r1, ip, asr #16
   12704:	andeq	r2, r1, ip, asr #16
   12708:	andeq	r2, r1, ip, asr #16
   1270c:	andeq	r2, r1, ip, asr #16
   12710:	andeq	r2, r1, ip, asr #16
   12714:	andeq	r2, r1, ip, asr #16
   12718:	andeq	r2, r1, ip, asr #16
   1271c:	andeq	r2, r1, ip, asr #16
   12720:	andeq	r2, r1, ip, asr #16
   12724:	andeq	r2, r1, ip, asr #16
   12728:	andeq	r2, r1, ip, asr #16
   1272c:	andeq	r2, r1, ip, asr #16
   12730:	andeq	r2, r1, ip, asr #16
   12734:	andeq	r2, r1, ip, asr #16
   12738:	andeq	r2, r1, ip, asr #16
   1273c:	andeq	r2, r1, ip, lsl #3
   12740:	andeq	r2, r1, ip, lsl #3
   12744:	andeq	r2, r1, ip, lsl #3
   12748:	andeq	r2, r1, ip, lsl #3
   1274c:	andeq	r1, r1, r0, lsr #31
   12750:			; <UNDEFINED> instruction: 0x000122b8
   12754:	andeq	r2, r1, ip, asr #16
   12758:	andeq	r2, r1, ip, asr #16
   1275c:	andeq	r2, r1, ip, asr #16
   12760:	andeq	r2, r1, ip, asr #16
   12764:	andeq	r2, r1, ip, asr #16
   12768:	andeq	r2, r1, ip, asr #16
   1276c:	andeq	r2, r1, ip, asr #16
   12770:	andeq	r2, r1, ip, asr #16
   12774:	andeq	r2, r1, ip, asr #16
   12778:	andeq	r2, r1, ip, asr #16
   1277c:	andeq	r2, r1, ip, asr #16
   12780:	andeq	r2, r1, ip, asr #16
   12784:	andeq	r2, r1, ip, asr #16
   12788:	andeq	r2, r1, ip, asr #16
   1278c:	andeq	r2, r1, ip, asr #16
   12790:	andeq	r2, r1, ip, asr #16
   12794:	andeq	r2, r1, ip, asr #16
   12798:	andeq	r2, r1, ip, asr #16
   1279c:	andeq	r2, r1, ip, asr #16
   127a0:	andeq	r2, r1, ip, asr #16
   127a4:	andeq	r2, r1, ip, asr #16
   127a8:	andeq	r2, r1, ip, asr #16
   127ac:	andeq	r2, r1, ip, asr #16
   127b0:	andeq	r2, r1, ip, asr #16
   127b4:	andeq	r2, r1, ip, asr #16
   127b8:	andeq	r2, r1, ip, asr #16
   127bc:	andeq	r2, r1, ip, lsl #3
   127c0:	andeq	r1, r1, r8, asr pc
   127c4:	andeq	r2, r1, ip, asr #16
   127c8:	andeq	r2, r1, ip, lsl #3
   127cc:	andeq	r2, r1, ip, asr #16
   127d0:	andeq	r2, r1, ip, lsl #3
   127d4:	andeq	r2, r1, ip, asr #16
   127d8:	andeq	r2, r1, ip, asr #16
   127dc:	andeq	r2, r1, ip, asr #16
   127e0:	andeq	r2, r1, ip, asr #16
   127e4:	andeq	r2, r1, ip, asr #16
   127e8:	andeq	r2, r1, ip, asr #16
   127ec:	andeq	r2, r1, ip, asr #16
   127f0:	andeq	r2, r1, ip, asr #16
   127f4:	andeq	r2, r1, ip, asr #16
   127f8:	andeq	r2, r1, ip, asr #16
   127fc:	andeq	r2, r1, ip, asr #16
   12800:	andeq	r2, r1, ip, asr #16
   12804:	andeq	r2, r1, ip, asr #16
   12808:	andeq	r2, r1, ip, asr #16
   1280c:	andeq	r2, r1, ip, asr #16
   12810:	andeq	r2, r1, ip, asr #16
   12814:	andeq	r2, r1, ip, asr #16
   12818:	andeq	r2, r1, ip, asr #16
   1281c:	andeq	r2, r1, ip, asr #16
   12820:	andeq	r2, r1, ip, asr #16
   12824:	andeq	r2, r1, ip, asr #16
   12828:	andeq	r2, r1, ip, asr #16
   1282c:	andeq	r2, r1, ip, asr #16
   12830:	andeq	r2, r1, ip, asr #16
   12834:	andeq	r2, r1, ip, asr #16
   12838:	andeq	r2, r1, ip, asr #16
   1283c:	andeq	r1, r1, r0, ror sp
   12840:	andeq	r2, r1, ip, lsl #3
   12844:	andeq	r1, r1, r0, ror sp
   12848:	andeq	r2, r1, r8, asr r8
   1284c:	mov	r6, r7
   12850:	mov	r7, #0
   12854:	b	11dd0 <abort@plt+0x1054>
   12858:	cmp	r9, #0
   1285c:	mov	r3, #0
   12860:	beq	122a0 <abort@plt+0x1524>
   12864:	mov	r6, #0
   12868:	mov	r7, r3
   1286c:	mov	r3, r6
   12870:	b	11dd4 <abort@plt+0x1058>
   12874:	mov	r3, #0
   12878:	b	12280 <abort@plt+0x1504>
   1287c:	mov	r7, #0
   12880:	mov	r3, #114	; 0x72
   12884:	b	120a0 <abort@plt+0x1324>
   12888:	mov	r5, #98	; 0x62
   1288c:	b	12130 <abort@plt+0x13b4>
   12890:	mov	r5, #97	; 0x61
   12894:	b	12170 <abort@plt+0x13f4>
   12898:	ldr	r3, [sp, #32]
   1289c:	cmp	r3, #0
   128a0:	bne	12ce8 <abort@plt+0x1f6c>
   128a4:	add	r9, r9, #1
   128a8:	ldr	r3, [sp, #44]	; 0x2c
   128ac:	mov	r6, #0
   128b0:	mov	r5, #92	; 0x5c
   128b4:	b	12068 <abort@plt+0x12ec>
   128b8:	ldr	r3, [sp, #36]	; 0x24
   128bc:	ldrb	r3, [r3, #1]
   128c0:	adds	r3, r3, #0
   128c4:	movne	r3, #1
   128c8:	b	11d8c <abort@plt+0x1010>
   128cc:	ldr	r3, [sp, #164]	; 0xa4
   128d0:	ands	r3, r3, #4
   128d4:	beq	128f8 <abort@plt+0x1b7c>
   128d8:	ldr	r2, [sp, #24]
   128dc:	add	r3, r9, #2
   128e0:	cmp	r3, r2
   128e4:	bcs	128f8 <abort@plt+0x1b7c>
   128e8:	ldr	r2, [sp, #48]	; 0x30
   128ec:	ldrb	r5, [r2, #1]
   128f0:	cmp	r5, #63	; 0x3f
   128f4:	beq	12d5c <abort@plt+0x1fe0>
   128f8:	mov	r2, #0
   128fc:	mov	r6, r2
   12900:	mov	r5, #63	; 0x3f
   12904:	b	11db4 <abort@plt+0x1038>
   12908:	ldr	r3, [sp, #32]
   1290c:	cmp	r3, #0
   12910:	bne	12ce8 <abort@plt+0x1f6c>
   12914:	mov	r6, r3
   12918:	mov	r5, #63	; 0x3f
   1291c:	b	11dfc <abort@plt+0x1080>
   12920:	ldr	r3, [sp, #24]
   12924:	cmn	r3, #1
   12928:	mov	r3, #0
   1292c:	str	r3, [sp, #108]	; 0x6c
   12930:	str	r3, [sp, #112]	; 0x70
   12934:	bne	12944 <abort@plt+0x1bc8>
   12938:	ldr	r0, [sp, #36]	; 0x24
   1293c:	bl	10cc8 <strlen@plt>
   12940:	str	r0, [sp, #24]
   12944:	mov	r3, #0
   12948:	str	sl, [sp, #88]	; 0x58
   1294c:	ldr	sl, [sp, #36]	; 0x24
   12950:	str	r5, [sp, #92]	; 0x5c
   12954:	mov	r5, r3
   12958:	str	r7, [sp, #96]	; 0x60
   1295c:	str	r4, [sp, #100]	; 0x64
   12960:	str	r8, [sp, #84]	; 0x54
   12964:	ldr	r3, [sp, #24]
   12968:	add	r4, r9, r5
   1296c:	add	r7, sl, r4
   12970:	sub	r2, r3, r4
   12974:	mov	r1, r7
   12978:	add	r3, sp, #108	; 0x6c
   1297c:	add	r0, sp, #104	; 0x68
   12980:	bl	140c4 <abort@plt+0x3348>
   12984:	subs	r8, r0, #0
   12988:	beq	129d8 <abort@plt+0x1c5c>
   1298c:	cmn	r8, #1
   12990:	beq	12d38 <abort@plt+0x1fbc>
   12994:	cmn	r8, #2
   12998:	beq	12e58 <abort@plt+0x20dc>
   1299c:	ldr	r3, [sp, #32]
   129a0:	cmp	fp, #2
   129a4:	movne	r3, #0
   129a8:	andeq	r3, r3, #1
   129ac:	cmp	r3, #0
   129b0:	bne	12b38 <abort@plt+0x1dbc>
   129b4:	ldr	r0, [sp, #104]	; 0x68
   129b8:	bl	10c20 <iswprint@plt>
   129bc:	add	r5, r5, r8
   129c0:	cmp	r0, #0
   129c4:	add	r0, sp, #108	; 0x6c
   129c8:	moveq	r6, #0
   129cc:	bl	10bd8 <mbsinit@plt>
   129d0:	cmp	r0, #0
   129d4:	beq	12964 <abort@plt+0x1be8>
   129d8:	ldr	r3, [sp, #28]
   129dc:	mov	ip, r5
   129e0:	eor	r2, r6, #1
   129e4:	ldr	r5, [sp, #92]	; 0x5c
   129e8:	ldr	r7, [sp, #96]	; 0x60
   129ec:	ldr	r4, [sp, #100]	; 0x64
   129f0:	ldr	r8, [sp, #84]	; 0x54
   129f4:	ldr	sl, [sp, #88]	; 0x58
   129f8:	and	r2, r2, r3
   129fc:	cmp	ip, #1
   12a00:	bls	12300 <abort@plt+0x1584>
   12a04:	add	r1, ip, r9
   12a08:	ldr	lr, [sp, #48]	; 0x30
   12a0c:	mov	r0, #0
   12a10:	str	r6, [sp, #48]	; 0x30
   12a14:	mov	ip, #39	; 0x27
   12a18:	ldr	r6, [sp, #44]	; 0x2c
   12a1c:	b	12ad4 <abort@plt+0x1d58>
   12a20:	ldr	r0, [sp, #32]
   12a24:	sub	r3, fp, #2
   12a28:	cmp	r0, #0
   12a2c:	clz	r3, r3
   12a30:	lsr	r3, r3, #5
   12a34:	bne	12c3c <abort@plt+0x1ec0>
   12a38:	eor	r0, r6, #1
   12a3c:	ands	r3, r3, r0
   12a40:	beq	12a70 <abort@plt+0x1cf4>
   12a44:	add	r0, r4, #1
   12a48:	cmp	sl, r4
   12a4c:	strbhi	ip, [r8, r4]
   12a50:	cmp	sl, r0
   12a54:	movhi	r6, #36	; 0x24
   12a58:	strbhi	r6, [r8, r0]
   12a5c:	add	r0, r4, #2
   12a60:	mov	r6, r3
   12a64:	add	r4, r4, #3
   12a68:	cmp	sl, r0
   12a6c:	strbhi	ip, [r8, r0]
   12a70:	cmp	sl, r4
   12a74:	movhi	r3, #92	; 0x5c
   12a78:	strbhi	r3, [r8, r4]
   12a7c:	add	r3, r4, #1
   12a80:	cmp	sl, r3
   12a84:	lsrhi	r0, r5, #6
   12a88:	addhi	r0, r0, #48	; 0x30
   12a8c:	strbhi	r0, [r8, r3]
   12a90:	add	r0, r4, #2
   12a94:	cmp	sl, r0
   12a98:	lsrhi	r3, r5, #3
   12a9c:	andhi	r3, r3, #7
   12aa0:	addhi	r3, r3, #48	; 0x30
   12aa4:	add	r9, r9, #1
   12aa8:	strbhi	r3, [r8, r0]
   12aac:	and	r5, r5, #7
   12ab0:	cmp	r9, r1
   12ab4:	add	r5, r5, #48	; 0x30
   12ab8:	add	r4, r4, #3
   12abc:	bcs	12c5c <abort@plt+0x1ee0>
   12ac0:	mov	r0, r2
   12ac4:	cmp	sl, r4
   12ac8:	strbhi	r5, [r8, r4]
   12acc:	ldrb	r5, [lr, #1]!
   12ad0:	add	r4, r4, #1
   12ad4:	cmp	r2, #0
   12ad8:	bne	12a20 <abort@plt+0x1ca4>
   12adc:	eor	r3, r0, #1
   12ae0:	and	r3, r3, r6
   12ae4:	cmp	r7, #0
   12ae8:	uxtb	r3, r3
   12aec:	beq	12b00 <abort@plt+0x1d84>
   12af0:	cmp	sl, r4
   12af4:	movhi	r7, #92	; 0x5c
   12af8:	strbhi	r7, [r8, r4]
   12afc:	add	r4, r4, #1
   12b00:	add	r9, r9, #1
   12b04:	cmp	r9, r1
   12b08:	bcs	12c50 <abort@plt+0x1ed4>
   12b0c:	cmp	r3, #0
   12b10:	beq	12c7c <abort@plt+0x1f00>
   12b14:	cmp	sl, r4
   12b18:	add	r3, r4, #1
   12b1c:	strbhi	ip, [r8, r4]
   12b20:	mov	r7, #0
   12b24:	cmp	sl, r3
   12b28:	strbhi	ip, [r8, r3]
   12b2c:	add	r4, r4, #2
   12b30:	mov	r6, r7
   12b34:	b	12ac4 <abort@plt+0x1d48>
   12b38:	cmp	r8, #1
   12b3c:	beq	129b4 <abort@plt+0x1c38>
   12b40:	add	r1, r4, #1
   12b44:	add	r3, sl, r8
   12b48:	add	r1, sl, r1
   12b4c:	add	r4, r3, r4
   12b50:	ldrb	r3, [r1], #1
   12b54:	sub	r3, r3, #91	; 0x5b
   12b58:	cmp	r3, #33	; 0x21
   12b5c:	ldrls	pc, [pc, r3, lsl #2]
   12b60:	b	12bec <abort@plt+0x1e70>
   12b64:	strdeq	r2, [r1], -r8
   12b68:	strdeq	r2, [r1], -r8
   12b6c:	andeq	r2, r1, ip, ror #23
   12b70:	strdeq	r2, [r1], -r8
   12b74:	andeq	r2, r1, ip, ror #23
   12b78:	strdeq	r2, [r1], -r8
   12b7c:	andeq	r2, r1, ip, ror #23
   12b80:	andeq	r2, r1, ip, ror #23
   12b84:	andeq	r2, r1, ip, ror #23
   12b88:	andeq	r2, r1, ip, ror #23
   12b8c:	andeq	r2, r1, ip, ror #23
   12b90:	andeq	r2, r1, ip, ror #23
   12b94:	andeq	r2, r1, ip, ror #23
   12b98:	andeq	r2, r1, ip, ror #23
   12b9c:	andeq	r2, r1, ip, ror #23
   12ba0:	andeq	r2, r1, ip, ror #23
   12ba4:	andeq	r2, r1, ip, ror #23
   12ba8:	andeq	r2, r1, ip, ror #23
   12bac:	andeq	r2, r1, ip, ror #23
   12bb0:	andeq	r2, r1, ip, ror #23
   12bb4:	andeq	r2, r1, ip, ror #23
   12bb8:	andeq	r2, r1, ip, ror #23
   12bbc:	andeq	r2, r1, ip, ror #23
   12bc0:	andeq	r2, r1, ip, ror #23
   12bc4:	andeq	r2, r1, ip, ror #23
   12bc8:	andeq	r2, r1, ip, ror #23
   12bcc:	andeq	r2, r1, ip, ror #23
   12bd0:	andeq	r2, r1, ip, ror #23
   12bd4:	andeq	r2, r1, ip, ror #23
   12bd8:	andeq	r2, r1, ip, ror #23
   12bdc:	andeq	r2, r1, ip, ror #23
   12be0:	andeq	r2, r1, ip, ror #23
   12be4:	andeq	r2, r1, ip, ror #23
   12be8:	strdeq	r2, [r1], -r8
   12bec:	cmp	r4, r1
   12bf0:	bne	12b50 <abort@plt+0x1dd4>
   12bf4:	b	129b4 <abort@plt+0x1c38>
   12bf8:	ldr	fp, [sp, #84]	; 0x54
   12bfc:	ldr	sl, [sp, #88]	; 0x58
   12c00:	mov	r8, #2
   12c04:	b	120c0 <abort@plt+0x1344>
   12c08:	cmp	sl, r4
   12c0c:	movls	r1, r4
   12c10:	bls	12210 <abort@plt+0x1494>
   12c14:	ldr	r3, [sp, #44]	; 0x2c
   12c18:	b	12200 <abort@plt+0x1484>
   12c1c:	str	sl, [sp, #72]	; 0x48
   12c20:	ldr	sl, [sp, #32]
   12c24:	b	12038 <abort@plt+0x12bc>
   12c28:	add	r9, r9, #1
   12c2c:	b	1192c <abort@plt+0xbb0>
   12c30:	ldr	r2, [sp, #28]
   12c34:	mov	r6, #0
   12c38:	b	12a04 <abort@plt+0x1c88>
   12c3c:	str	fp, [sp, #160]	; 0xa0
   12c40:	str	r3, [sp, #28]
   12c44:	mov	fp, r8
   12c48:	ldr	r8, [sp, #160]	; 0xa0
   12c4c:	b	120c0 <abort@plt+0x1344>
   12c50:	str	r6, [sp, #44]	; 0x2c
   12c54:	ldr	r6, [sp, #48]	; 0x30
   12c58:	b	12068 <abort@plt+0x12ec>
   12c5c:	str	r6, [sp, #44]	; 0x2c
   12c60:	ldr	r6, [sp, #48]	; 0x30
   12c64:	b	11e74 <abort@plt+0x10f8>
   12c68:	add	r4, r4, #4
   12c6c:	str	r3, [sp, #44]	; 0x2c
   12c70:	mov	r6, #0
   12c74:	mov	r5, #48	; 0x30
   12c78:	b	11dfc <abort@plt+0x1080>
   12c7c:	mov	r7, r3
   12c80:	b	12ac4 <abort@plt+0x1d48>
   12c84:	ldr	r3, [pc, #-1624]	; 12634 <abort@plt+0x18b8>
   12c88:	mov	r4, #1
   12c8c:	str	r4, [sp, #40]	; 0x28
   12c90:	str	r4, [sp, #28]
   12c94:	str	r4, [sp, #52]	; 0x34
   12c98:	str	sl, [sp, #72]	; 0x48
   12c9c:	str	sl, [sp, #68]	; 0x44
   12ca0:	str	sl, [sp, #44]	; 0x2c
   12ca4:	str	sl, [sp, #32]
   12ca8:	str	r3, [sp, #60]	; 0x3c
   12cac:	b	1191c <abort@plt+0xba0>
   12cb0:	mov	r3, r6
   12cb4:	mov	r5, #48	; 0x30
   12cb8:	mov	r6, #0
   12cbc:	b	11dfc <abort@plt+0x1080>
   12cc0:	cmp	sl, r4
   12cc4:	movhi	r3, #48	; 0x30
   12cc8:	strbhi	r3, [r8, r4]
   12ccc:	add	r3, r1, #2
   12cd0:	cmp	sl, r3
   12cd4:	movhi	r0, #48	; 0x30
   12cd8:	strbhi	r0, [r8, r3]
   12cdc:	add	r4, r1, #3
   12ce0:	mov	r5, #48	; 0x30
   12ce4:	b	12244 <abort@plt+0x14c8>
   12ce8:	str	fp, [sp, #160]	; 0xa0
   12cec:	mov	fp, r8
   12cf0:	ldr	r8, [sp, #160]	; 0xa0
   12cf4:	b	120c0 <abort@plt+0x1344>
   12cf8:	ldr	r2, [sp, #80]	; 0x50
   12cfc:	ldrb	r3, [r2]
   12d00:	cmp	r3, #0
   12d04:	beq	118ec <abort@plt+0xb70>
   12d08:	cmp	sl, r4
   12d0c:	strbhi	r3, [fp, r4]
   12d10:	ldrb	r3, [r2, #1]!
   12d14:	add	r4, r4, #1
   12d18:	cmp	r3, #0
   12d1c:	bne	12d08 <abort@plt+0x1f8c>
   12d20:	b	118ec <abort@plt+0xb70>
   12d24:	str	fp, [sp, #160]	; 0xa0
   12d28:	mov	r3, #0
   12d2c:	mov	fp, r8
   12d30:	ldr	r8, [sp, #160]	; 0xa0
   12d34:	b	12154 <abort@plt+0x13d8>
   12d38:	mov	ip, r5
   12d3c:	ldr	r7, [sp, #96]	; 0x60
   12d40:	ldr	r5, [sp, #92]	; 0x5c
   12d44:	ldr	r4, [sp, #100]	; 0x64
   12d48:	ldr	r8, [sp, #84]	; 0x54
   12d4c:	ldr	sl, [sp, #88]	; 0x58
   12d50:	ldr	r2, [sp, #28]
   12d54:	mov	r6, #0
   12d58:	b	129fc <abort@plt+0x1c80>
   12d5c:	ldr	r2, [sp, #36]	; 0x24
   12d60:	ldrb	r1, [r2, r3]
   12d64:	sub	r2, r1, #33	; 0x21
   12d68:	cmp	r2, #29
   12d6c:	ldrls	pc, [pc, r2, lsl #2]
   12d70:	b	12e4c <abort@plt+0x20d0>
   12d74:	andeq	r2, r1, ip, ror #27
   12d78:	andeq	r2, r1, ip, asr #28
   12d7c:	andeq	r2, r1, ip, asr #28
   12d80:	andeq	r2, r1, ip, asr #28
   12d84:	andeq	r2, r1, ip, asr #28
   12d88:	andeq	r2, r1, ip, asr #28
   12d8c:	andeq	r2, r1, ip, ror #27
   12d90:	andeq	r2, r1, ip, ror #27
   12d94:	andeq	r2, r1, ip, ror #27
   12d98:	andeq	r2, r1, ip, asr #28
   12d9c:	andeq	r2, r1, ip, asr #28
   12da0:	andeq	r2, r1, ip, asr #28
   12da4:	andeq	r2, r1, ip, ror #27
   12da8:	andeq	r2, r1, ip, asr #28
   12dac:	andeq	r2, r1, ip, ror #27
   12db0:	andeq	r2, r1, ip, asr #28
   12db4:	andeq	r2, r1, ip, asr #28
   12db8:	andeq	r2, r1, ip, asr #28
   12dbc:	andeq	r2, r1, ip, asr #28
   12dc0:	andeq	r2, r1, ip, asr #28
   12dc4:	andeq	r2, r1, ip, asr #28
   12dc8:	andeq	r2, r1, ip, asr #28
   12dcc:	andeq	r2, r1, ip, asr #28
   12dd0:	andeq	r2, r1, ip, asr #28
   12dd4:	andeq	r2, r1, ip, asr #28
   12dd8:	andeq	r2, r1, ip, asr #28
   12ddc:	andeq	r2, r1, ip, asr #28
   12de0:	andeq	r2, r1, ip, ror #27
   12de4:	andeq	r2, r1, ip, ror #27
   12de8:	andeq	r2, r1, ip, ror #27
   12dec:	ldr	r2, [sp, #32]
   12df0:	cmp	r2, #0
   12df4:	bne	12ef8 <abort@plt+0x217c>
   12df8:	cmp	sl, r4
   12dfc:	movhi	r2, #63	; 0x3f
   12e00:	strbhi	r2, [r8, r4]
   12e04:	add	r2, r4, #1
   12e08:	cmp	sl, r2
   12e0c:	movhi	r0, #34	; 0x22
   12e10:	strbhi	r0, [r8, r2]
   12e14:	add	r2, r4, #2
   12e18:	cmp	sl, r2
   12e1c:	movhi	r0, #34	; 0x22
   12e20:	strbhi	r0, [r8, r2]
   12e24:	add	r2, r4, #3
   12e28:	cmp	sl, r2
   12e2c:	movhi	r0, #63	; 0x3f
   12e30:	strbhi	r0, [r8, r2]
   12e34:	mov	r2, #0
   12e38:	add	r4, r4, #4
   12e3c:	mov	r5, r1
   12e40:	mov	r9, r3
   12e44:	mov	r6, r2
   12e48:	b	12244 <abort@plt+0x14c8>
   12e4c:	mov	r2, #0
   12e50:	mov	r6, r2
   12e54:	b	11db4 <abort@plt+0x1038>
   12e58:	ldr	r0, [sp, #24]
   12e5c:	mov	r1, r4
   12e60:	cmp	r1, r0
   12e64:	mov	r2, r7
   12e68:	mov	r3, r5
   12e6c:	mov	ip, r5
   12e70:	ldr	r7, [sp, #96]	; 0x60
   12e74:	ldr	r5, [sp, #92]	; 0x5c
   12e78:	ldr	r4, [sp, #100]	; 0x64
   12e7c:	ldr	r8, [sp, #84]	; 0x54
   12e80:	ldr	sl, [sp, #88]	; 0x58
   12e84:	bcs	12eb8 <abort@plt+0x213c>
   12e88:	ldrb	r6, [r2]
   12e8c:	cmp	r6, #0
   12e90:	bne	12ea4 <abort@plt+0x2128>
   12e94:	b	12fd4 <abort@plt+0x2258>
   12e98:	ldrb	r6, [r2, #1]!
   12e9c:	cmp	r6, #0
   12ea0:	beq	12f5c <abort@plt+0x21e0>
   12ea4:	add	r3, r3, #1
   12ea8:	add	r1, r9, r3
   12eac:	cmp	r1, r0
   12eb0:	bcc	12e98 <abort@plt+0x211c>
   12eb4:	mov	ip, r3
   12eb8:	ldr	r2, [sp, #28]
   12ebc:	mov	r6, #0
   12ec0:	b	129fc <abort@plt+0x1c80>
   12ec4:	mov	r3, #1
   12ec8:	str	r3, [sp, #40]	; 0x28
   12ecc:	str	r3, [sp, #32]
   12ed0:	str	r3, [sp, #28]
   12ed4:	str	r3, [sp, #52]	; 0x34
   12ed8:	ldr	r3, [pc, #-2220]	; 12634 <abort@plt+0x18b8>
   12edc:	mov	r2, #0
   12ee0:	str	r2, [sp, #68]	; 0x44
   12ee4:	str	r2, [sp, #44]	; 0x2c
   12ee8:	str	r2, [sp, #72]	; 0x48
   12eec:	mov	r4, r2
   12ef0:	str	r3, [sp, #60]	; 0x3c
   12ef4:	b	1191c <abort@plt+0xba0>
   12ef8:	str	fp, [sp, #160]	; 0xa0
   12efc:	mov	fp, r8
   12f00:	ldr	r8, [sp, #160]	; 0xa0
   12f04:	b	120cc <abort@plt+0x1350>
   12f08:	mov	r2, r3
   12f0c:	ldr	r3, [sp, #60]	; 0x3c
   12f10:	cmp	r3, #0
   12f14:	moveq	r2, #0
   12f18:	andne	r2, r2, #1
   12f1c:	cmp	r2, #0
   12f20:	beq	12f4c <abort@plt+0x21d0>
   12f24:	mov	r2, r3
   12f28:	ldrb	r3, [r3]
   12f2c:	cmp	r3, #0
   12f30:	beq	12f4c <abort@plt+0x21d0>
   12f34:	cmp	sl, r4
   12f38:	strbhi	r3, [fp, r4]
   12f3c:	ldrb	r3, [r2, #1]!
   12f40:	add	r4, r4, #1
   12f44:	cmp	r3, #0
   12f48:	bne	12f34 <abort@plt+0x21b8>
   12f4c:	cmp	sl, r4
   12f50:	movhi	r3, #0
   12f54:	strbhi	r3, [fp, r4]
   12f58:	b	1210c <abort@plt+0x1390>
   12f5c:	mov	ip, r3
   12f60:	ldr	r2, [sp, #28]
   12f64:	b	129fc <abort@plt+0x1c80>
   12f68:	str	fp, [sp, #160]	; 0xa0
   12f6c:	mov	fp, r8
   12f70:	ldr	r8, [sp, #160]	; 0xa0
   12f74:	sub	r3, r8, #2
   12f78:	clz	r3, r3
   12f7c:	lsr	r3, r3, #5
   12f80:	str	r3, [sp, #28]
   12f84:	b	120c0 <abort@plt+0x1344>
   12f88:	ldr	r3, [sp, #76]	; 0x4c
   12f8c:	mov	ip, #5
   12f90:	str	r3, [sp, #16]
   12f94:	ldr	r3, [sp, #80]	; 0x50
   12f98:	ldr	r2, [sp, #36]	; 0x24
   12f9c:	str	r3, [sp, #12]
   12fa0:	ldr	r3, [sp, #56]	; 0x38
   12fa4:	ldr	r1, [sp, #72]	; 0x48
   12fa8:	str	r3, [sp, #8]
   12fac:	ldr	r3, [sp, #164]	; 0xa4
   12fb0:	mov	r0, fp
   12fb4:	str	r3, [sp, #4]
   12fb8:	str	ip, [sp]
   12fbc:	ldr	r3, [sp, #24]
   12fc0:	bl	11824 <abort@plt+0xaa8>
   12fc4:	mov	r4, r0
   12fc8:	b	1210c <abort@plt+0x1390>
   12fcc:	mov	r8, #2
   12fd0:	b	120c0 <abort@plt+0x1344>
   12fd4:	ldr	r2, [sp, #28]
   12fd8:	b	129fc <abort@plt+0x1c80>
   12fdc:	mov	r3, #0
   12fe0:	str	r3, [sp, #68]	; 0x44
   12fe4:	str	r3, [sp, #44]	; 0x2c
   12fe8:	str	r3, [sp, #72]	; 0x48
   12fec:	str	r3, [sp, #28]
   12ff0:	mov	r4, r3
   12ff4:	ldr	r3, [pc, #-2500]	; 12638 <abort@plt+0x18bc>
   12ff8:	mov	r2, #1
   12ffc:	str	r2, [sp, #40]	; 0x28
   13000:	str	r2, [sp, #32]
   13004:	str	r2, [sp, #52]	; 0x34
   13008:	str	r3, [sp, #60]	; 0x3c
   1300c:	b	1191c <abort@plt+0xba0>
   13010:	bl	10bfc <__stack_chk_fail@plt>
   13014:	mov	r5, r3
   13018:	mov	r6, #0
   1301c:	b	11e10 <abort@plt+0x1094>
   13020:	mov	r3, #0
   13024:	mov	r2, #1
   13028:	str	r3, [sp, #44]	; 0x2c
   1302c:	str	r3, [sp, #72]	; 0x48
   13030:	str	r2, [sp, #40]	; 0x28
   13034:	b	11f2c <abort@plt+0x11b0>
   13038:	bl	10d7c <abort@plt>
   1303c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13040:	sub	sp, sp, #44	; 0x2c
   13044:	mov	r6, r0
   13048:	mov	r4, r3
   1304c:	mov	sl, r1
   13050:	mov	fp, r2
   13054:	bl	10cd4 <__errno_location@plt>
   13058:	ldr	r7, [pc, #364]	; 131cc <abort@plt+0x2450>
   1305c:	cmp	r6, #0
   13060:	ldr	r5, [r7]
   13064:	ldr	r3, [r0]
   13068:	str	r3, [sp, #24]
   1306c:	blt	131c8 <abort@plt+0x244c>
   13070:	ldr	r3, [r7, #4]
   13074:	mov	r8, r0
   13078:	cmp	r3, r6
   1307c:	bgt	130c8 <abort@plt+0x234c>
   13080:	cmn	r6, #-268435454	; 0xf0000002
   13084:	bgt	131c4 <abort@plt+0x2448>
   13088:	add	r9, r6, #1
   1308c:	add	r3, r7, #8
   13090:	cmp	r5, r3
   13094:	lsl	r1, r9, #3
   13098:	beq	131a4 <abort@plt+0x2428>
   1309c:	mov	r0, r5
   130a0:	bl	13e98 <abort@plt+0x311c>
   130a4:	mov	r5, r0
   130a8:	str	r0, [r7]
   130ac:	ldr	r0, [r7, #4]
   130b0:	mov	r1, #0
   130b4:	sub	r2, r9, r0
   130b8:	add	r0, r5, r0, lsl #3
   130bc:	lsl	r2, r2, #3
   130c0:	bl	10cec <memset@plt>
   130c4:	str	r9, [r7, #4]
   130c8:	add	r3, r5, r6, lsl #3
   130cc:	ldr	r1, [r4, #4]
   130d0:	ldr	r7, [r3, #4]
   130d4:	ldr	r9, [r5, r6, lsl #3]
   130d8:	ldr	r2, [r4, #40]	; 0x28
   130dc:	ldr	ip, [r4, #44]	; 0x2c
   130e0:	str	r3, [sp, #28]
   130e4:	ldr	r3, [r4]
   130e8:	orr	r1, r1, #1
   130ec:	add	lr, r4, #8
   130f0:	str	r1, [sp, #36]	; 0x24
   130f4:	str	r1, [sp, #4]
   130f8:	str	r2, [sp, #12]
   130fc:	str	r3, [sp]
   13100:	mov	r0, r7
   13104:	mov	r1, r9
   13108:	str	ip, [sp, #16]
   1310c:	str	lr, [sp, #8]
   13110:	mov	r3, fp
   13114:	mov	r2, sl
   13118:	str	lr, [sp, #32]
   1311c:	bl	11824 <abort@plt+0xaa8>
   13120:	cmp	r9, r0
   13124:	bhi	13190 <abort@plt+0x2414>
   13128:	ldr	r3, [pc, #160]	; 131d0 <abort@plt+0x2454>
   1312c:	add	r9, r0, #1
   13130:	cmp	r7, r3
   13134:	str	r9, [r5, r6, lsl #3]
   13138:	beq	13144 <abort@plt+0x23c8>
   1313c:	mov	r0, r7
   13140:	bl	10bb4 <free@plt>
   13144:	mov	r0, r9
   13148:	bl	13e3c <abort@plt+0x30c0>
   1314c:	ldr	lr, [sp, #28]
   13150:	ldr	ip, [r4, #44]	; 0x2c
   13154:	ldr	r5, [r4, #40]	; 0x28
   13158:	mov	r3, fp
   1315c:	mov	r2, sl
   13160:	mov	r1, r9
   13164:	str	r0, [lr, #4]
   13168:	ldr	lr, [r4]
   1316c:	ldr	r4, [sp, #32]
   13170:	str	ip, [sp, #16]
   13174:	str	r4, [sp, #8]
   13178:	ldr	r4, [sp, #36]	; 0x24
   1317c:	str	r5, [sp, #12]
   13180:	str	r4, [sp, #4]
   13184:	str	lr, [sp]
   13188:	mov	r7, r0
   1318c:	bl	11824 <abort@plt+0xaa8>
   13190:	ldr	r3, [sp, #24]
   13194:	mov	r0, r7
   13198:	str	r3, [r8]
   1319c:	add	sp, sp, #44	; 0x2c
   131a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131a4:	mov	r0, #0
   131a8:	bl	13e98 <abort@plt+0x311c>
   131ac:	ldr	r3, [pc, #32]	; 131d4 <abort@plt+0x2458>
   131b0:	mov	r5, r0
   131b4:	ldm	r3, {r0, r1}
   131b8:	str	r5, [r7]
   131bc:	stm	r5, {r0, r1}
   131c0:	b	130ac <abort@plt+0x2330>
   131c4:	bl	14084 <abort@plt+0x3308>
   131c8:	bl	10d7c <abort@plt>
   131cc:	ldrdeq	r5, [r2], -r0
   131d0:	andeq	r5, r2, ip, lsr r1
   131d4:	ldrdeq	r5, [r2], -r8
   131d8:	push	{r4, r5, r6, lr}
   131dc:	mov	r5, r0
   131e0:	bl	10cd4 <__errno_location@plt>
   131e4:	cmp	r5, #0
   131e8:	mov	r1, #48	; 0x30
   131ec:	mov	r4, r0
   131f0:	ldr	r0, [pc, #16]	; 13208 <abort@plt+0x248c>
   131f4:	ldr	r6, [r4]
   131f8:	movne	r0, r5
   131fc:	bl	14044 <abort@plt+0x32c8>
   13200:	str	r6, [r4]
   13204:	pop	{r4, r5, r6, pc}
   13208:	andeq	r5, r2, ip, lsr r2
   1320c:	ldr	r3, [pc, #12]	; 13220 <abort@plt+0x24a4>
   13210:	cmp	r0, #0
   13214:	moveq	r0, r3
   13218:	ldr	r0, [r0]
   1321c:	bx	lr
   13220:	andeq	r5, r2, ip, lsr r2
   13224:	ldr	r3, [pc, #12]	; 13238 <abort@plt+0x24bc>
   13228:	cmp	r0, #0
   1322c:	moveq	r0, r3
   13230:	str	r1, [r0]
   13234:	bx	lr
   13238:	andeq	r5, r2, ip, lsr r2
   1323c:	ldr	r3, [pc, #52]	; 13278 <abort@plt+0x24fc>
   13240:	cmp	r0, #0
   13244:	moveq	r0, r3
   13248:	add	r3, r0, #8
   1324c:	push	{lr}		; (str lr, [sp, #-4]!)
   13250:	lsr	lr, r1, #5
   13254:	and	r1, r1, #31
   13258:	ldr	ip, [r3, lr, lsl #2]
   1325c:	lsr	r0, ip, r1
   13260:	eor	r2, r2, r0
   13264:	and	r2, r2, #1
   13268:	and	r0, r0, #1
   1326c:	eor	r1, ip, r2, lsl r1
   13270:	str	r1, [r3, lr, lsl #2]
   13274:	pop	{pc}		; (ldr pc, [sp], #4)
   13278:	andeq	r5, r2, ip, lsr r2
   1327c:	ldr	r3, [pc, #16]	; 13294 <abort@plt+0x2518>
   13280:	cmp	r0, #0
   13284:	movne	r3, r0
   13288:	ldr	r0, [r3, #4]
   1328c:	str	r1, [r3, #4]
   13290:	bx	lr
   13294:	andeq	r5, r2, ip, lsr r2
   13298:	ldr	r3, [pc, #44]	; 132cc <abort@plt+0x2550>
   1329c:	cmp	r0, #0
   132a0:	moveq	r0, r3
   132a4:	mov	ip, #10
   132a8:	cmp	r2, #0
   132ac:	cmpne	r1, #0
   132b0:	str	ip, [r0]
   132b4:	beq	132c4 <abort@plt+0x2548>
   132b8:	str	r1, [r0, #40]	; 0x28
   132bc:	str	r2, [r0, #44]	; 0x2c
   132c0:	bx	lr
   132c4:	push	{r4, lr}
   132c8:	bl	10d7c <abort@plt>
   132cc:	andeq	r5, r2, ip, lsr r2
   132d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132d4:	sub	sp, sp, #24
   132d8:	ldr	ip, [pc, #108]	; 1334c <abort@plt+0x25d0>
   132dc:	ldr	r4, [sp, #56]	; 0x38
   132e0:	mov	r9, r2
   132e4:	cmp	r4, #0
   132e8:	moveq	r4, ip
   132ec:	mov	sl, r3
   132f0:	mov	r7, r0
   132f4:	mov	r8, r1
   132f8:	bl	10cd4 <__errno_location@plt>
   132fc:	ldr	r3, [r4, #44]	; 0x2c
   13300:	mov	r1, r8
   13304:	ldr	r6, [r0]
   13308:	str	r3, [sp, #16]
   1330c:	ldr	r2, [r4, #40]	; 0x28
   13310:	add	r3, r4, #8
   13314:	str	r3, [sp, #8]
   13318:	str	r2, [sp, #12]
   1331c:	ldr	r2, [r4, #4]
   13320:	mov	r5, r0
   13324:	str	r2, [sp, #4]
   13328:	ldr	ip, [r4]
   1332c:	mov	r3, sl
   13330:	mov	r2, r9
   13334:	mov	r0, r7
   13338:	str	ip, [sp]
   1333c:	bl	11824 <abort@plt+0xaa8>
   13340:	str	r6, [r5]
   13344:	add	sp, sp, #24
   13348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1334c:	andeq	r5, r2, ip, lsr r2
   13350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13354:	cmp	r3, #0
   13358:	sub	sp, sp, #44	; 0x2c
   1335c:	ldr	r4, [pc, #192]	; 13424 <abort@plt+0x26a8>
   13360:	mov	r6, r2
   13364:	movne	r4, r3
   13368:	mov	r9, r1
   1336c:	mov	r8, r0
   13370:	bl	10cd4 <__errno_location@plt>
   13374:	ldr	r3, [r4, #44]	; 0x2c
   13378:	ldr	r5, [r4, #4]
   1337c:	add	sl, r4, #8
   13380:	cmp	r6, #0
   13384:	orreq	r5, r5, #1
   13388:	mov	r1, #0
   1338c:	ldr	r2, [r0]
   13390:	str	r3, [sp, #16]
   13394:	ldr	r3, [r4, #40]	; 0x28
   13398:	stmib	sp, {r5, sl}
   1339c:	str	r3, [sp, #12]
   133a0:	ldr	r3, [r4]
   133a4:	mov	r7, r0
   133a8:	str	r2, [sp, #28]
   133ac:	str	r3, [sp]
   133b0:	mov	r2, r8
   133b4:	mov	r3, r9
   133b8:	mov	r0, r1
   133bc:	bl	11824 <abort@plt+0xaa8>
   133c0:	add	r1, r0, #1
   133c4:	mov	fp, r0
   133c8:	mov	r0, r1
   133cc:	str	r1, [sp, #36]	; 0x24
   133d0:	bl	13e3c <abort@plt+0x30c0>
   133d4:	ldr	r3, [r4, #44]	; 0x2c
   133d8:	mov	r2, r8
   133dc:	str	r3, [sp, #16]
   133e0:	ldr	r3, [r4, #40]	; 0x28
   133e4:	str	r5, [sp, #4]
   133e8:	str	r3, [sp, #12]
   133ec:	str	sl, [sp, #8]
   133f0:	ldr	ip, [r4]
   133f4:	ldr	r1, [sp, #36]	; 0x24
   133f8:	mov	r3, r9
   133fc:	str	ip, [sp]
   13400:	str	r0, [sp, #32]
   13404:	bl	11824 <abort@plt+0xaa8>
   13408:	ldr	r2, [sp, #28]
   1340c:	cmp	r6, #0
   13410:	str	r2, [r7]
   13414:	ldr	r0, [sp, #32]
   13418:	strne	fp, [r6]
   1341c:	add	sp, sp, #44	; 0x2c
   13420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13424:	andeq	r5, r2, ip, lsr r2
   13428:	mov	r3, r2
   1342c:	mov	r2, #0
   13430:	b	13350 <abort@plt+0x25d4>
   13434:	push	{r4, r5, r6, r7, r8, lr}
   13438:	ldr	r6, [pc, #112]	; 134b0 <abort@plt+0x2734>
   1343c:	ldr	r3, [r6, #4]
   13440:	ldr	r7, [r6]
   13444:	cmp	r3, #1
   13448:	ble	1346c <abort@plt+0x26f0>
   1344c:	sub	r5, r7, #8
   13450:	add	r5, r5, r3, lsl #3
   13454:	mov	r4, r7
   13458:	ldr	r0, [r4, #12]
   1345c:	add	r4, r4, #8
   13460:	bl	10bb4 <free@plt>
   13464:	cmp	r4, r5
   13468:	bne	13458 <abort@plt+0x26dc>
   1346c:	ldr	r0, [r7, #4]
   13470:	ldr	r4, [pc, #60]	; 134b4 <abort@plt+0x2738>
   13474:	cmp	r0, r4
   13478:	beq	1348c <abort@plt+0x2710>
   1347c:	bl	10bb4 <free@plt>
   13480:	mov	r3, #256	; 0x100
   13484:	str	r4, [r6, #12]
   13488:	str	r3, [r6, #8]
   1348c:	ldr	r4, [pc, #36]	; 134b8 <abort@plt+0x273c>
   13490:	cmp	r7, r4
   13494:	beq	134a4 <abort@plt+0x2728>
   13498:	mov	r0, r7
   1349c:	bl	10bb4 <free@plt>
   134a0:	str	r4, [r6]
   134a4:	mov	r3, #1
   134a8:	str	r3, [r6, #4]
   134ac:	pop	{r4, r5, r6, r7, r8, pc}
   134b0:	ldrdeq	r5, [r2], -r0
   134b4:	andeq	r5, r2, ip, lsr r1
   134b8:	ldrdeq	r5, [r2], -r8
   134bc:	ldr	r3, [pc, #4]	; 134c8 <abort@plt+0x274c>
   134c0:	mvn	r2, #0
   134c4:	b	1303c <abort@plt+0x22c0>
   134c8:	andeq	r5, r2, ip, lsr r2
   134cc:	ldr	r3, [pc]	; 134d4 <abort@plt+0x2758>
   134d0:	b	1303c <abort@plt+0x22c0>
   134d4:	andeq	r5, r2, ip, lsr r2
   134d8:	mov	r1, r0
   134dc:	ldr	r3, [pc, #8]	; 134ec <abort@plt+0x2770>
   134e0:	mvn	r2, #0
   134e4:	mov	r0, #0
   134e8:	b	1303c <abort@plt+0x22c0>
   134ec:	andeq	r5, r2, ip, lsr r2
   134f0:	mov	r2, r1
   134f4:	ldr	r3, [pc, #8]	; 13504 <abort@plt+0x2788>
   134f8:	mov	r1, r0
   134fc:	mov	r0, #0
   13500:	b	1303c <abort@plt+0x22c0>
   13504:	andeq	r5, r2, ip, lsr r2
   13508:	push	{r4, r5, r6, lr}
   1350c:	sub	sp, sp, #56	; 0x38
   13510:	ldr	r4, [pc, #68]	; 1355c <abort@plt+0x27e0>
   13514:	mov	r6, r2
   13518:	mov	r5, r0
   1351c:	ldr	r3, [r4]
   13520:	add	r0, sp, #4
   13524:	str	r3, [sp, #52]	; 0x34
   13528:	bl	116b4 <abort@plt+0x938>
   1352c:	add	r3, sp, #4
   13530:	mvn	r2, #0
   13534:	mov	r1, r6
   13538:	mov	r0, r5
   1353c:	bl	1303c <abort@plt+0x22c0>
   13540:	ldr	r2, [sp, #52]	; 0x34
   13544:	ldr	r3, [r4]
   13548:	cmp	r2, r3
   1354c:	bne	13558 <abort@plt+0x27dc>
   13550:	add	sp, sp, #56	; 0x38
   13554:	pop	{r4, r5, r6, pc}
   13558:	bl	10bfc <__stack_chk_fail@plt>
   1355c:	andeq	r4, r2, r8, lsl #30
   13560:	push	{r4, r5, r6, r7, lr}
   13564:	sub	sp, sp, #60	; 0x3c
   13568:	ldr	r4, [pc, #72]	; 135b8 <abort@plt+0x283c>
   1356c:	mov	r6, r2
   13570:	mov	r7, r3
   13574:	ldr	ip, [r4]
   13578:	mov	r5, r0
   1357c:	add	r0, sp, #4
   13580:	str	ip, [sp, #52]	; 0x34
   13584:	bl	116b4 <abort@plt+0x938>
   13588:	add	r3, sp, #4
   1358c:	mov	r2, r7
   13590:	mov	r1, r6
   13594:	mov	r0, r5
   13598:	bl	1303c <abort@plt+0x22c0>
   1359c:	ldr	r2, [sp, #52]	; 0x34
   135a0:	ldr	r3, [r4]
   135a4:	cmp	r2, r3
   135a8:	bne	135b4 <abort@plt+0x2838>
   135ac:	add	sp, sp, #60	; 0x3c
   135b0:	pop	{r4, r5, r6, r7, pc}
   135b4:	bl	10bfc <__stack_chk_fail@plt>
   135b8:	andeq	r4, r2, r8, lsl #30
   135bc:	mov	r2, r1
   135c0:	mov	r1, r0
   135c4:	mov	r0, #0
   135c8:	b	13508 <abort@plt+0x278c>
   135cc:	mov	r3, r2
   135d0:	mov	r2, r1
   135d4:	mov	r1, r0
   135d8:	mov	r0, #0
   135dc:	b	13560 <abort@plt+0x27e4>
   135e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   135e4:	mov	r4, r2
   135e8:	ldr	lr, [pc, #128]	; 13670 <abort@plt+0x28f4>
   135ec:	mov	r8, r0
   135f0:	mov	r9, r1
   135f4:	ldm	lr!, {r0, r1, r2, r3}
   135f8:	sub	sp, sp, #60	; 0x3c
   135fc:	add	ip, sp, #4
   13600:	lsr	r6, r4, #5
   13604:	stmia	ip!, {r0, r1, r2, r3}
   13608:	add	r7, sp, #12
   1360c:	ldm	lr!, {r0, r1, r2, r3}
   13610:	and	r4, r4, #31
   13614:	ldr	r5, [pc, #88]	; 13674 <abort@plt+0x28f8>
   13618:	stmia	ip!, {r0, r1, r2, r3}
   1361c:	ldm	lr, {r0, r1, r2, r3}
   13620:	stm	ip, {r0, r1, r2, r3}
   13624:	mov	r2, r9
   13628:	ldr	r3, [r7, r6, lsl #2]
   1362c:	ldr	ip, [r5]
   13630:	mov	r1, r8
   13634:	mvn	r0, r3, lsr r4
   13638:	and	r0, r0, #1
   1363c:	str	ip, [sp, #52]	; 0x34
   13640:	eor	r4, r3, r0, lsl r4
   13644:	add	r3, sp, #4
   13648:	mov	r0, #0
   1364c:	str	r4, [r7, r6, lsl #2]
   13650:	bl	1303c <abort@plt+0x22c0>
   13654:	ldr	r2, [sp, #52]	; 0x34
   13658:	ldr	r3, [r5]
   1365c:	cmp	r2, r3
   13660:	bne	1366c <abort@plt+0x28f0>
   13664:	add	sp, sp, #60	; 0x3c
   13668:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1366c:	bl	10bfc <__stack_chk_fail@plt>
   13670:	andeq	r5, r2, ip, lsr r2
   13674:	andeq	r4, r2, r8, lsl #30
   13678:	mov	r2, r1
   1367c:	mvn	r1, #0
   13680:	b	135e0 <abort@plt+0x2864>
   13684:	mov	r2, #58	; 0x3a
   13688:	mvn	r1, #0
   1368c:	b	135e0 <abort@plt+0x2864>
   13690:	mov	r2, #58	; 0x3a
   13694:	b	135e0 <abort@plt+0x2864>
   13698:	push	{r4, r5, r6, r7, r8, lr}
   1369c:	sub	sp, sp, #104	; 0x68
   136a0:	ldr	r5, [pc, #120]	; 13720 <abort@plt+0x29a4>
   136a4:	mov	r6, r0
   136a8:	mov	r0, sp
   136ac:	ldr	r3, [r5]
   136b0:	mov	r7, r2
   136b4:	str	r3, [sp, #100]	; 0x64
   136b8:	bl	116b4 <abort@plt+0x938>
   136bc:	mov	ip, sp
   136c0:	add	lr, sp, #52	; 0x34
   136c4:	ldm	ip!, {r0, r1, r2, r3}
   136c8:	stmia	lr!, {r0, r1, r2, r3}
   136cc:	ldm	ip!, {r0, r1, r2, r3}
   136d0:	ldr	r8, [sp, #64]	; 0x40
   136d4:	stmia	lr!, {r0, r1, r2, r3}
   136d8:	mvn	r4, r8
   136dc:	ldm	ip, {r0, r1, r2, r3}
   136e0:	and	ip, r4, #67108864	; 0x4000000
   136e4:	eor	ip, ip, r8
   136e8:	str	ip, [sp, #64]	; 0x40
   136ec:	stm	lr, {r0, r1, r2, r3}
   136f0:	add	r3, sp, #52	; 0x34
   136f4:	mvn	r2, #0
   136f8:	mov	r1, r7
   136fc:	mov	r0, r6
   13700:	bl	1303c <abort@plt+0x22c0>
   13704:	ldr	r2, [sp, #100]	; 0x64
   13708:	ldr	r3, [r5]
   1370c:	cmp	r2, r3
   13710:	bne	1371c <abort@plt+0x29a0>
   13714:	add	sp, sp, #104	; 0x68
   13718:	pop	{r4, r5, r6, r7, r8, pc}
   1371c:	bl	10bfc <__stack_chk_fail@plt>
   13720:	andeq	r4, r2, r8, lsl #30
   13724:	push	{r4, r5, r6, r7, r8, r9, lr}
   13728:	mov	r6, r1
   1372c:	ldr	lr, [pc, #132]	; 137b8 <abort@plt+0x2a3c>
   13730:	mov	r5, r2
   13734:	mov	r8, r0
   13738:	mov	r9, r3
   1373c:	ldm	lr!, {r0, r1, r2, r3}
   13740:	sub	sp, sp, #60	; 0x3c
   13744:	add	ip, sp, #4
   13748:	ldr	r4, [pc, #108]	; 137bc <abort@plt+0x2a40>
   1374c:	stmia	ip!, {r0, r1, r2, r3}
   13750:	mov	r7, #10
   13754:	ldm	lr!, {r0, r1, r2, r3}
   13758:	cmp	r5, #0
   1375c:	cmpne	r6, #0
   13760:	str	r7, [sp, #4]
   13764:	stmia	ip!, {r0, r1, r2, r3}
   13768:	ldm	lr, {r0, r1, r2, r3}
   1376c:	ldr	lr, [r4]
   13770:	stm	ip, {r0, r1, r2, r3}
   13774:	str	lr, [sp, #52]	; 0x34
   13778:	beq	137b4 <abort@plt+0x2a38>
   1377c:	add	r3, sp, #4
   13780:	ldr	r2, [sp, #88]	; 0x58
   13784:	mov	r1, r9
   13788:	mov	r0, r8
   1378c:	str	r6, [sp, #44]	; 0x2c
   13790:	str	r5, [sp, #48]	; 0x30
   13794:	bl	1303c <abort@plt+0x22c0>
   13798:	ldr	r2, [sp, #52]	; 0x34
   1379c:	ldr	r3, [r4]
   137a0:	cmp	r2, r3
   137a4:	bne	137b0 <abort@plt+0x2a34>
   137a8:	add	sp, sp, #60	; 0x3c
   137ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   137b0:	bl	10bfc <__stack_chk_fail@plt>
   137b4:	bl	10d7c <abort@plt>
   137b8:	andeq	r5, r2, ip, lsr r2
   137bc:	andeq	r4, r2, r8, lsl #30
   137c0:	push	{lr}		; (str lr, [sp, #-4]!)
   137c4:	sub	sp, sp, #12
   137c8:	mvn	ip, #0
   137cc:	str	ip, [sp]
   137d0:	bl	13724 <abort@plt+0x29a8>
   137d4:	add	sp, sp, #12
   137d8:	pop	{pc}		; (ldr pc, [sp], #4)
   137dc:	push	{lr}		; (str lr, [sp, #-4]!)
   137e0:	sub	sp, sp, #12
   137e4:	mvn	ip, #0
   137e8:	mov	r3, r2
   137ec:	str	ip, [sp]
   137f0:	mov	r2, r1
   137f4:	mov	r1, r0
   137f8:	mov	r0, #0
   137fc:	bl	13724 <abort@plt+0x29a8>
   13800:	add	sp, sp, #12
   13804:	pop	{pc}		; (ldr pc, [sp], #4)
   13808:	push	{lr}		; (str lr, [sp, #-4]!)
   1380c:	sub	sp, sp, #12
   13810:	str	r3, [sp]
   13814:	mov	r3, r2
   13818:	mov	r2, r1
   1381c:	mov	r1, r0
   13820:	mov	r0, #0
   13824:	bl	13724 <abort@plt+0x29a8>
   13828:	add	sp, sp, #12
   1382c:	pop	{pc}		; (ldr pc, [sp], #4)
   13830:	ldr	r3, [pc]	; 13838 <abort@plt+0x2abc>
   13834:	b	1303c <abort@plt+0x22c0>
   13838:	andeq	r5, r2, r0, ror #1
   1383c:	mov	r2, r1
   13840:	ldr	r3, [pc, #8]	; 13850 <abort@plt+0x2ad4>
   13844:	mov	r1, r0
   13848:	mov	r0, #0
   1384c:	b	1303c <abort@plt+0x22c0>
   13850:	andeq	r5, r2, r0, ror #1
   13854:	ldr	r3, [pc, #4]	; 13860 <abort@plt+0x2ae4>
   13858:	mvn	r2, #0
   1385c:	b	1303c <abort@plt+0x22c0>
   13860:	andeq	r5, r2, r0, ror #1
   13864:	mov	r1, r0
   13868:	ldr	r3, [pc, #8]	; 13878 <abort@plt+0x2afc>
   1386c:	mvn	r2, #0
   13870:	mov	r0, #0
   13874:	b	1303c <abort@plt+0x22c0>
   13878:	andeq	r5, r2, r0, ror #1
   1387c:	push	{r4, r5, r6, r7, r8, lr}
   13880:	mov	r8, r0
   13884:	ldr	r5, [pc, #84]	; 138e0 <abort@plt+0x2b64>
   13888:	mov	r7, r1
   1388c:	mov	r4, r2
   13890:	mov	r2, r4
   13894:	mov	r1, r7
   13898:	mov	r0, r8
   1389c:	bl	10d04 <write@plt>
   138a0:	subs	r6, r0, #0
   138a4:	bge	138d8 <abort@plt+0x2b5c>
   138a8:	bl	10cd4 <__errno_location@plt>
   138ac:	ldr	r2, [r0]
   138b0:	cmp	r2, #4
   138b4:	beq	13890 <abort@plt+0x2b14>
   138b8:	cmp	r4, r5
   138bc:	sub	r3, r2, #22
   138c0:	clz	r3, r3
   138c4:	lsr	r3, r3, #5
   138c8:	movls	r3, #0
   138cc:	cmp	r3, #0
   138d0:	mov	r4, r5
   138d4:	bne	13890 <abort@plt+0x2b14>
   138d8:	mov	r0, r6
   138dc:	pop	{r4, r5, r6, r7, r8, pc}
   138e0:	svcvc	0x00f00000	; IMB
   138e4:	push	{r4, r5, r6, lr}
   138e8:	sub	sp, sp, #32
   138ec:	cmp	r1, #0
   138f0:	mov	r5, r0
   138f4:	ldr	r4, [sp, #48]	; 0x30
   138f8:	ldr	r6, [sp, #52]	; 0x34
   138fc:	beq	1398c <abort@plt+0x2c10>
   13900:	strd	r2, [sp]
   13904:	mov	r3, r1
   13908:	ldr	r2, [pc, #828]	; 13c4c <abort@plt+0x2ed0>
   1390c:	mov	r1, #1
   13910:	bl	10d1c <__fprintf_chk@plt>
   13914:	mov	r2, #5
   13918:	ldr	r1, [pc, #816]	; 13c50 <abort@plt+0x2ed4>
   1391c:	mov	r0, #0
   13920:	bl	10bf0 <dcgettext@plt>
   13924:	ldr	r3, [pc, #808]	; 13c54 <abort@plt+0x2ed8>
   13928:	ldr	r2, [pc, #808]	; 13c58 <abort@plt+0x2edc>
   1392c:	str	r3, [sp]
   13930:	mov	r1, #1
   13934:	mov	r3, r0
   13938:	mov	r0, r5
   1393c:	bl	10d1c <__fprintf_chk@plt>
   13940:	ldr	r1, [pc, #788]	; 13c5c <abort@plt+0x2ee0>
   13944:	mov	r2, #5
   13948:	mov	r0, #0
   1394c:	bl	10bf0 <dcgettext@plt>
   13950:	mov	r1, r5
   13954:	bl	10b84 <fputs_unlocked@plt>
   13958:	cmp	r6, #9
   1395c:	ldrls	pc, [pc, r6, lsl #2]
   13960:	b	13c3c <abort@plt+0x2ec0>
   13964:	andeq	r3, r1, r8, asr #24
   13968:	andeq	r3, r1, r0, lsl sl
   1396c:	andeq	r3, r1, ip, lsr sl
   13970:	andeq	r3, r1, r0, ror sl
   13974:	andeq	r3, r1, ip, lsr #21
   13978:	andeq	r3, r1, ip, ror #21
   1397c:	andeq	r3, r1, r4, lsr fp
   13980:	andeq	r3, r1, r4, lsl #23
   13984:	ldrdeq	r3, [r1], -ip
   13988:	andeq	r3, r1, r4, lsr #19
   1398c:	str	r3, [sp]
   13990:	mov	r1, #1
   13994:	mov	r3, r2
   13998:	ldr	r2, [pc, #704]	; 13c60 <abort@plt+0x2ee4>
   1399c:	bl	10d1c <__fprintf_chk@plt>
   139a0:	b	13914 <abort@plt+0x2b98>
   139a4:	ldr	r1, [pc, #696]	; 13c64 <abort@plt+0x2ee8>
   139a8:	mov	r2, #5
   139ac:	mov	r0, #0
   139b0:	bl	10bf0 <dcgettext@plt>
   139b4:	ldr	r2, [r4, #32]
   139b8:	ldr	r3, [r4, #28]
   139bc:	ldr	r1, [r4, #24]
   139c0:	str	r2, [sp, #28]
   139c4:	ldr	r2, [r4, #20]
   139c8:	str	r3, [sp, #24]
   139cc:	ldr	r3, [r4, #16]
   139d0:	str	r1, [sp, #20]
   139d4:	ldr	r1, [r4, #12]
   139d8:	str	r2, [sp, #16]
   139dc:	ldr	r2, [r4, #8]
   139e0:	str	r3, [sp, #12]
   139e4:	ldr	r3, [r4, #4]
   139e8:	str	r1, [sp, #8]
   139ec:	str	r2, [sp, #4]
   139f0:	str	r3, [sp]
   139f4:	mov	r1, #1
   139f8:	ldr	r3, [r4]
   139fc:	mov	r2, r0
   13a00:	mov	r0, r5
   13a04:	bl	10d1c <__fprintf_chk@plt>
   13a08:	add	sp, sp, #32
   13a0c:	pop	{r4, r5, r6, pc}
   13a10:	mov	r2, #5
   13a14:	ldr	r1, [pc, #588]	; 13c68 <abort@plt+0x2eec>
   13a18:	mov	r0, #0
   13a1c:	bl	10bf0 <dcgettext@plt>
   13a20:	ldr	r3, [r4]
   13a24:	mov	r1, #1
   13a28:	mov	r2, r0
   13a2c:	mov	r0, r5
   13a30:	add	sp, sp, #32
   13a34:	pop	{r4, r5, r6, lr}
   13a38:	b	10d1c <__fprintf_chk@plt>
   13a3c:	mov	r2, #5
   13a40:	ldr	r1, [pc, #548]	; 13c6c <abort@plt+0x2ef0>
   13a44:	mov	r0, #0
   13a48:	bl	10bf0 <dcgettext@plt>
   13a4c:	ldr	r2, [r4, #4]
   13a50:	ldr	r3, [r4]
   13a54:	mov	r1, #1
   13a58:	str	r2, [sp, #48]	; 0x30
   13a5c:	mov	r2, r0
   13a60:	mov	r0, r5
   13a64:	add	sp, sp, #32
   13a68:	pop	{r4, r5, r6, lr}
   13a6c:	b	10d1c <__fprintf_chk@plt>
   13a70:	mov	r2, #5
   13a74:	ldr	r1, [pc, #500]	; 13c70 <abort@plt+0x2ef4>
   13a78:	mov	r0, #0
   13a7c:	bl	10bf0 <dcgettext@plt>
   13a80:	ldr	r2, [r4, #8]
   13a84:	ldr	r3, [r4, #4]
   13a88:	mov	r1, #1
   13a8c:	str	r2, [sp, #52]	; 0x34
   13a90:	str	r3, [sp, #48]	; 0x30
   13a94:	ldr	r3, [r4]
   13a98:	mov	r2, r0
   13a9c:	mov	r0, r5
   13aa0:	add	sp, sp, #32
   13aa4:	pop	{r4, r5, r6, lr}
   13aa8:	b	10d1c <__fprintf_chk@plt>
   13aac:	mov	r2, #5
   13ab0:	ldr	r1, [pc, #444]	; 13c74 <abort@plt+0x2ef8>
   13ab4:	mov	r0, #0
   13ab8:	bl	10bf0 <dcgettext@plt>
   13abc:	ldr	r1, [r4, #12]
   13ac0:	ldr	r2, [r4, #8]
   13ac4:	ldr	r3, [r4, #4]
   13ac8:	str	r1, [sp, #8]
   13acc:	str	r2, [sp, #4]
   13ad0:	str	r3, [sp]
   13ad4:	mov	r1, #1
   13ad8:	ldr	r3, [r4]
   13adc:	mov	r2, r0
   13ae0:	mov	r0, r5
   13ae4:	bl	10d1c <__fprintf_chk@plt>
   13ae8:	b	13a08 <abort@plt+0x2c8c>
   13aec:	mov	r2, #5
   13af0:	ldr	r1, [pc, #384]	; 13c78 <abort@plt+0x2efc>
   13af4:	mov	r0, #0
   13af8:	bl	10bf0 <dcgettext@plt>
   13afc:	ldr	r3, [r4, #16]
   13b00:	ldr	r1, [r4, #12]
   13b04:	ldr	r2, [r4, #8]
   13b08:	str	r3, [sp, #12]
   13b0c:	ldr	r3, [r4, #4]
   13b10:	str	r1, [sp, #8]
   13b14:	str	r2, [sp, #4]
   13b18:	str	r3, [sp]
   13b1c:	mov	r1, #1
   13b20:	ldr	r3, [r4]
   13b24:	mov	r2, r0
   13b28:	mov	r0, r5
   13b2c:	bl	10d1c <__fprintf_chk@plt>
   13b30:	b	13a08 <abort@plt+0x2c8c>
   13b34:	mov	r2, #5
   13b38:	ldr	r1, [pc, #316]	; 13c7c <abort@plt+0x2f00>
   13b3c:	mov	r0, #0
   13b40:	bl	10bf0 <dcgettext@plt>
   13b44:	ldr	r2, [r4, #20]
   13b48:	ldr	r3, [r4, #16]
   13b4c:	ldr	r1, [r4, #12]
   13b50:	str	r2, [sp, #16]
   13b54:	ldr	r2, [r4, #8]
   13b58:	str	r3, [sp, #12]
   13b5c:	ldr	r3, [r4, #4]
   13b60:	str	r1, [sp, #8]
   13b64:	str	r2, [sp, #4]
   13b68:	str	r3, [sp]
   13b6c:	mov	r1, #1
   13b70:	ldr	r3, [r4]
   13b74:	mov	r2, r0
   13b78:	mov	r0, r5
   13b7c:	bl	10d1c <__fprintf_chk@plt>
   13b80:	b	13a08 <abort@plt+0x2c8c>
   13b84:	mov	r2, #5
   13b88:	ldr	r1, [pc, #240]	; 13c80 <abort@plt+0x2f04>
   13b8c:	mov	r0, #0
   13b90:	bl	10bf0 <dcgettext@plt>
   13b94:	ldr	r1, [r4, #24]
   13b98:	ldr	r2, [r4, #20]
   13b9c:	ldr	r3, [r4, #16]
   13ba0:	str	r1, [sp, #20]
   13ba4:	ldr	r1, [r4, #12]
   13ba8:	str	r2, [sp, #16]
   13bac:	ldr	r2, [r4, #8]
   13bb0:	str	r3, [sp, #12]
   13bb4:	ldr	r3, [r4, #4]
   13bb8:	str	r1, [sp, #8]
   13bbc:	str	r2, [sp, #4]
   13bc0:	str	r3, [sp]
   13bc4:	mov	r1, #1
   13bc8:	ldr	r3, [r4]
   13bcc:	mov	r2, r0
   13bd0:	mov	r0, r5
   13bd4:	bl	10d1c <__fprintf_chk@plt>
   13bd8:	b	13a08 <abort@plt+0x2c8c>
   13bdc:	mov	r2, #5
   13be0:	ldr	r1, [pc, #156]	; 13c84 <abort@plt+0x2f08>
   13be4:	mov	r0, #0
   13be8:	bl	10bf0 <dcgettext@plt>
   13bec:	ldr	r3, [r4, #28]
   13bf0:	ldr	r1, [r4, #24]
   13bf4:	ldr	r2, [r4, #20]
   13bf8:	str	r3, [sp, #24]
   13bfc:	ldr	r3, [r4, #16]
   13c00:	str	r1, [sp, #20]
   13c04:	ldr	r1, [r4, #12]
   13c08:	str	r2, [sp, #16]
   13c0c:	ldr	r2, [r4, #8]
   13c10:	str	r3, [sp, #12]
   13c14:	ldr	r3, [r4, #4]
   13c18:	str	r1, [sp, #8]
   13c1c:	str	r2, [sp, #4]
   13c20:	str	r3, [sp]
   13c24:	mov	r1, #1
   13c28:	ldr	r3, [r4]
   13c2c:	mov	r2, r0
   13c30:	mov	r0, r5
   13c34:	bl	10d1c <__fprintf_chk@plt>
   13c38:	b	13a08 <abort@plt+0x2c8c>
   13c3c:	mov	r2, #5
   13c40:	ldr	r1, [pc, #64]	; 13c88 <abort@plt+0x2f0c>
   13c44:	b	139ac <abort@plt+0x2c30>
   13c48:	bl	10d7c <abort@plt>
   13c4c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c50:	andeq	r4, r1, r8, ror #21
   13c54:	andeq	r0, r0, r2, ror #15
   13c58:			; <UNDEFINED> instruction: 0x00014dbc
   13c5c:	andeq	r4, r1, ip, ror #21
   13c60:	andeq	r4, r1, r0, ror #21
   13c64:	andeq	r4, r1, r4, asr #25
   13c68:			; <UNDEFINED> instruction: 0x00014bb8
   13c6c:	andeq	r4, r1, r8, asr #23
   13c70:	andeq	r4, r1, r0, ror #23
   13c74:	strdeq	r4, [r1], -ip
   13c78:	andeq	r4, r1, ip, lsl ip
   13c7c:	andeq	r4, r1, r0, asr #24
   13c80:	andeq	r4, r1, r8, ror #24
   13c84:	muleq	r1, r4, ip
   13c88:	strdeq	r4, [r1], -r8
   13c8c:	push	{r4, r5, lr}
   13c90:	sub	sp, sp, #12
   13c94:	ldr	r5, [sp, #24]
   13c98:	ldr	ip, [r5]
   13c9c:	cmp	ip, #0
   13ca0:	beq	13cbc <abort@plt+0x2f40>
   13ca4:	mov	lr, r5
   13ca8:	mov	ip, #0
   13cac:	ldr	r4, [lr, #4]!
   13cb0:	add	ip, ip, #1
   13cb4:	cmp	r4, #0
   13cb8:	bne	13cac <abort@plt+0x2f30>
   13cbc:	stm	sp, {r5, ip}
   13cc0:	bl	138e4 <abort@plt+0x2b68>
   13cc4:	add	sp, sp, #12
   13cc8:	pop	{r4, r5, pc}
   13ccc:	push	{r4, r5, r6, lr}
   13cd0:	sub	sp, sp, #56	; 0x38
   13cd4:	ldr	r6, [pc, #88]	; 13d34 <abort@plt+0x2fb8>
   13cd8:	ldr	r5, [sp, #72]	; 0x48
   13cdc:	add	r4, sp, #8
   13ce0:	ldr	ip, [r6]
   13ce4:	str	ip, [sp, #52]	; 0x34
   13ce8:	mov	ip, #0
   13cec:	ldr	lr, [r5], #4
   13cf0:	cmp	lr, #0
   13cf4:	str	lr, [r4, #4]!
   13cf8:	beq	13d08 <abort@plt+0x2f8c>
   13cfc:	add	ip, ip, #1
   13d00:	cmp	ip, #10
   13d04:	bne	13cec <abort@plt+0x2f70>
   13d08:	add	lr, sp, #12
   13d0c:	str	ip, [sp, #4]
   13d10:	str	lr, [sp]
   13d14:	bl	138e4 <abort@plt+0x2b68>
   13d18:	ldr	r2, [sp, #52]	; 0x34
   13d1c:	ldr	r3, [r6]
   13d20:	cmp	r2, r3
   13d24:	bne	13d30 <abort@plt+0x2fb4>
   13d28:	add	sp, sp, #56	; 0x38
   13d2c:	pop	{r4, r5, r6, pc}
   13d30:	bl	10bfc <__stack_chk_fail@plt>
   13d34:	andeq	r4, r2, r8, lsl #30
   13d38:	push	{r3}		; (str r3, [sp, #-4]!)
   13d3c:	mov	ip, #0
   13d40:	push	{r4, r5, r6, lr}
   13d44:	sub	sp, sp, #60	; 0x3c
   13d48:	ldr	r6, [pc, #100]	; 13db4 <abort@plt+0x3038>
   13d4c:	add	r5, sp, #8
   13d50:	add	r4, sp, #80	; 0x50
   13d54:	ldr	r3, [r6]
   13d58:	str	r4, [sp, #8]
   13d5c:	str	r3, [sp, #52]	; 0x34
   13d60:	ldr	r3, [sp, #76]	; 0x4c
   13d64:	ldr	lr, [r4], #4
   13d68:	cmp	lr, #0
   13d6c:	str	lr, [r5, #4]!
   13d70:	beq	13d80 <abort@plt+0x3004>
   13d74:	add	ip, ip, #1
   13d78:	cmp	ip, #10
   13d7c:	bne	13d64 <abort@plt+0x2fe8>
   13d80:	add	lr, sp, #12
   13d84:	str	ip, [sp, #4]
   13d88:	str	lr, [sp]
   13d8c:	bl	138e4 <abort@plt+0x2b68>
   13d90:	ldr	r2, [sp, #52]	; 0x34
   13d94:	ldr	r3, [r6]
   13d98:	cmp	r2, r3
   13d9c:	bne	13db0 <abort@plt+0x3034>
   13da0:	add	sp, sp, #60	; 0x3c
   13da4:	pop	{r4, r5, r6, lr}
   13da8:	add	sp, sp, #4
   13dac:	bx	lr
   13db0:	bl	10bfc <__stack_chk_fail@plt>
   13db4:	andeq	r4, r2, r8, lsl #30
   13db8:	push	{r4, lr}
   13dbc:	mov	r2, #5
   13dc0:	ldr	r1, [pc, #88]	; 13e20 <abort@plt+0x30a4>
   13dc4:	mov	r0, #0
   13dc8:	bl	10bf0 <dcgettext@plt>
   13dcc:	ldr	r2, [pc, #80]	; 13e24 <abort@plt+0x30a8>
   13dd0:	mov	r1, r0
   13dd4:	mov	r0, #1
   13dd8:	bl	10cf8 <__printf_chk@plt>
   13ddc:	mov	r2, #5
   13de0:	ldr	r1, [pc, #64]	; 13e28 <abort@plt+0x30ac>
   13de4:	mov	r0, #0
   13de8:	bl	10bf0 <dcgettext@plt>
   13dec:	ldr	r3, [pc, #56]	; 13e2c <abort@plt+0x30b0>
   13df0:	ldr	r2, [pc, #56]	; 13e30 <abort@plt+0x30b4>
   13df4:	mov	r1, r0
   13df8:	mov	r0, #1
   13dfc:	bl	10cf8 <__printf_chk@plt>
   13e00:	ldr	r1, [pc, #44]	; 13e34 <abort@plt+0x30b8>
   13e04:	mov	r2, #5
   13e08:	mov	r0, #0
   13e0c:	bl	10bf0 <dcgettext@plt>
   13e10:	ldr	r3, [pc, #32]	; 13e38 <abort@plt+0x30bc>
   13e14:	pop	{r4, lr}
   13e18:	ldr	r1, [r3]
   13e1c:	b	10b84 <fputs_unlocked@plt>
   13e20:	andeq	r4, r1, r4, lsr sp
   13e24:	andeq	r4, r1, ip, asr #26
   13e28:	andeq	r4, r1, r4, ror #26
   13e2c:	ldrdeq	r4, [r1], -ip
   13e30:	andeq	r4, r1, r4, lsl #16
   13e34:	andeq	r4, r1, r8, ror sp
   13e38:	andeq	r5, r2, r4, lsr #2
   13e3c:	push	{r4, lr}
   13e40:	mov	r4, r0
   13e44:	bl	10c74 <malloc@plt>
   13e48:	adds	r4, r4, #0
   13e4c:	movne	r4, #1
   13e50:	cmp	r0, #0
   13e54:	movne	r4, #0
   13e58:	cmp	r4, #0
   13e5c:	popeq	{r4, pc}
   13e60:	bl	14084 <abort@plt+0x3308>
   13e64:	push	{r4, r5, r6, lr}
   13e68:	umull	r4, r5, r0, r1
   13e6c:	adds	r3, r5, #0
   13e70:	movne	r3, #1
   13e74:	cmp	r4, #0
   13e78:	blt	13e90 <abort@plt+0x3114>
   13e7c:	cmp	r3, #0
   13e80:	bne	13e90 <abort@plt+0x3114>
   13e84:	mul	r0, r1, r0
   13e88:	pop	{r4, r5, r6, lr}
   13e8c:	b	13e3c <abort@plt+0x30c0>
   13e90:	bl	14084 <abort@plt+0x3308>
   13e94:	b	13e3c <abort@plt+0x30c0>
   13e98:	adds	r3, r0, #0
   13e9c:	movne	r3, #1
   13ea0:	cmp	r1, #0
   13ea4:	movne	r3, #0
   13ea8:	cmp	r3, #0
   13eac:	push	{r4, lr}
   13eb0:	bne	13ed8 <abort@plt+0x315c>
   13eb4:	mov	r4, r1
   13eb8:	bl	10c08 <realloc@plt>
   13ebc:	adds	r4, r4, #0
   13ec0:	movne	r4, #1
   13ec4:	cmp	r0, #0
   13ec8:	movne	r4, #0
   13ecc:	cmp	r4, #0
   13ed0:	popeq	{r4, pc}
   13ed4:	bl	14084 <abort@plt+0x3308>
   13ed8:	bl	10bb4 <free@plt>
   13edc:	mov	r0, #0
   13ee0:	pop	{r4, pc}
   13ee4:	push	{r4, r5, r6, lr}
   13ee8:	umull	r4, r5, r1, r2
   13eec:	adds	r3, r5, #0
   13ef0:	movne	r3, #1
   13ef4:	cmp	r4, #0
   13ef8:	blt	13f10 <abort@plt+0x3194>
   13efc:	cmp	r3, #0
   13f00:	bne	13f10 <abort@plt+0x3194>
   13f04:	mul	r1, r2, r1
   13f08:	pop	{r4, r5, r6, lr}
   13f0c:	b	13e98 <abort@plt+0x311c>
   13f10:	bl	14084 <abort@plt+0x3308>
   13f14:	push	{r4, r5, r6, r7, r8, lr}
   13f18:	subs	r7, r0, #0
   13f1c:	mov	r6, r1
   13f20:	mov	r5, r2
   13f24:	ldr	r4, [r1]
   13f28:	beq	13f5c <abort@plt+0x31e0>
   13f2c:	mov	r1, r2
   13f30:	ldr	r0, [pc, #104]	; 13fa0 <abort@plt+0x3224>
   13f34:	bl	143d8 <abort@plt+0x365c>
   13f38:	cmp	r0, r4
   13f3c:	bls	13f80 <abort@plt+0x3204>
   13f40:	add	r3, r4, #1
   13f44:	add	r4, r3, r4, lsr #1
   13f48:	str	r4, [r6]
   13f4c:	mul	r1, r5, r4
   13f50:	mov	r0, r7
   13f54:	pop	{r4, r5, r6, r7, r8, lr}
   13f58:	b	13e98 <abort@plt+0x311c>
   13f5c:	cmp	r4, #0
   13f60:	beq	13f84 <abort@plt+0x3208>
   13f64:	umull	r0, r1, r4, r5
   13f68:	adds	r3, r1, #0
   13f6c:	movne	r3, #1
   13f70:	cmp	r0, #0
   13f74:	blt	13f80 <abort@plt+0x3204>
   13f78:	cmp	r3, #0
   13f7c:	beq	13f48 <abort@plt+0x31cc>
   13f80:	bl	14084 <abort@plt+0x3308>
   13f84:	mov	r1, r2
   13f88:	mov	r0, #64	; 0x40
   13f8c:	bl	143d8 <abort@plt+0x365c>
   13f90:	cmp	r5, #64	; 0x40
   13f94:	movls	r4, r0
   13f98:	addhi	r4, r0, #1
   13f9c:	b	13f64 <abort@plt+0x31e8>
   13fa0:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13fa4:	cmp	r0, #0
   13fa8:	ldr	r3, [r1]
   13fac:	beq	13fd0 <abort@plt+0x3254>
   13fb0:	ldr	r2, [pc, #60]	; 13ff4 <abort@plt+0x3278>
   13fb4:	cmp	r3, r2
   13fb8:	bhi	13fec <abort@plt+0x3270>
   13fbc:	add	r2, r3, #1
   13fc0:	add	r3, r2, r3, lsr #1
   13fc4:	str	r3, [r1]
   13fc8:	mov	r1, r3
   13fcc:	b	13e98 <abort@plt+0x311c>
   13fd0:	cmp	r3, #0
   13fd4:	bne	13fe8 <abort@plt+0x326c>
   13fd8:	mov	r3, #64	; 0x40
   13fdc:	str	r3, [r1]
   13fe0:	mov	r1, r3
   13fe4:	b	13e98 <abort@plt+0x311c>
   13fe8:	bge	13fc4 <abort@plt+0x3248>
   13fec:	push	{r4, lr}
   13ff0:	bl	14084 <abort@plt+0x3308>
   13ff4:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13ff8:	push	{r4, lr}
   13ffc:	mov	r4, r0
   14000:	bl	13e3c <abort@plt+0x30c0>
   14004:	mov	r2, r4
   14008:	mov	r1, #0
   1400c:	pop	{r4, lr}
   14010:	b	10cec <memset@plt>
   14014:	push	{r4, r5, r6, lr}
   14018:	umull	r4, r5, r0, r1
   1401c:	adds	r3, r5, #0
   14020:	movne	r3, #1
   14024:	cmp	r4, #0
   14028:	blt	14040 <abort@plt+0x32c4>
   1402c:	cmp	r3, #0
   14030:	bne	14040 <abort@plt+0x32c4>
   14034:	bl	10b78 <calloc@plt>
   14038:	cmp	r0, #0
   1403c:	popne	{r4, r5, r6, pc}
   14040:	bl	14084 <abort@plt+0x3308>
   14044:	push	{r4, r5, r6, lr}
   14048:	mov	r4, r1
   1404c:	mov	r5, r0
   14050:	mov	r0, r1
   14054:	bl	13e3c <abort@plt+0x30c0>
   14058:	mov	r2, r4
   1405c:	mov	r1, r5
   14060:	pop	{r4, r5, r6, lr}
   14064:	b	10bcc <memcpy@plt>
   14068:	push	{r4, lr}
   1406c:	mov	r4, r0
   14070:	bl	10cc8 <strlen@plt>
   14074:	add	r1, r0, #1
   14078:	mov	r0, r4
   1407c:	pop	{r4, lr}
   14080:	b	14044 <abort@plt+0x32c8>
   14084:	ldr	r3, [pc, #44]	; 140b8 <abort@plt+0x333c>
   14088:	push	{r4, lr}
   1408c:	mov	r2, #5
   14090:	ldr	r1, [pc, #36]	; 140bc <abort@plt+0x3340>
   14094:	mov	r0, #0
   14098:	ldr	r4, [r3]
   1409c:	bl	10bf0 <dcgettext@plt>
   140a0:	ldr	r2, [pc, #24]	; 140c0 <abort@plt+0x3344>
   140a4:	mov	r1, #0
   140a8:	mov	r3, r0
   140ac:	mov	r0, r4
   140b0:	bl	10c68 <error@plt>
   140b4:	bl	10d7c <abort@plt>
   140b8:	andeq	r5, r2, ip, asr #1
   140bc:	andeq	r4, r1, ip, ror #27
   140c0:	andeq	r4, r1, r4, ror r9
   140c4:	push	{r4, r5, r6, r7, r8, lr}
   140c8:	subs	r7, r0, #0
   140cc:	ldr	r5, [pc, #108]	; 14140 <abort@plt+0x33c4>
   140d0:	sub	sp, sp, #8
   140d4:	mov	r8, r1
   140d8:	ldr	r1, [r5]
   140dc:	moveq	r7, sp
   140e0:	str	r1, [sp, #4]
   140e4:	mov	r0, r7
   140e8:	mov	r1, r8
   140ec:	mov	r6, r2
   140f0:	bl	10c5c <mbrtowc@plt>
   140f4:	cmp	r6, #0
   140f8:	cmnne	r0, #3
   140fc:	mov	r4, r0
   14100:	bhi	14120 <abort@plt+0x33a4>
   14104:	ldr	r2, [sp, #4]
   14108:	ldr	r3, [r5]
   1410c:	mov	r0, r4
   14110:	cmp	r2, r3
   14114:	bne	1413c <abort@plt+0x33c0>
   14118:	add	sp, sp, #8
   1411c:	pop	{r4, r5, r6, r7, r8, pc}
   14120:	mov	r0, #0
   14124:	bl	141b8 <abort@plt+0x343c>
   14128:	cmp	r0, #0
   1412c:	moveq	r4, #1
   14130:	ldrbeq	r3, [r8]
   14134:	streq	r3, [r7]
   14138:	b	14104 <abort@plt+0x3388>
   1413c:	bl	10bfc <__stack_chk_fail@plt>
   14140:	andeq	r4, r2, r8, lsl #30
   14144:	push	{r4, r5, r6, lr}
   14148:	mov	r4, r0
   1414c:	bl	10c50 <__fpending@plt>
   14150:	ldr	r5, [r4]
   14154:	and	r5, r5, #32
   14158:	mov	r6, r0
   1415c:	mov	r0, r4
   14160:	bl	14238 <abort@plt+0x34bc>
   14164:	cmp	r5, #0
   14168:	mov	r4, r0
   1416c:	bne	14198 <abort@plt+0x341c>
   14170:	cmp	r0, #0
   14174:	beq	14190 <abort@plt+0x3414>
   14178:	cmp	r6, #0
   1417c:	bne	141b0 <abort@plt+0x3434>
   14180:	bl	10cd4 <__errno_location@plt>
   14184:	ldr	r4, [r0]
   14188:	subs	r4, r4, #9
   1418c:	mvnne	r4, #0
   14190:	mov	r0, r4
   14194:	pop	{r4, r5, r6, pc}
   14198:	cmp	r0, #0
   1419c:	bne	141b0 <abort@plt+0x3434>
   141a0:	bl	10cd4 <__errno_location@plt>
   141a4:	str	r4, [r0]
   141a8:	mvn	r4, #0
   141ac:	b	14190 <abort@plt+0x3414>
   141b0:	mvn	r4, #0
   141b4:	b	14190 <abort@plt+0x3414>
   141b8:	push	{r4, lr}
   141bc:	mov	r1, #0
   141c0:	bl	10d40 <setlocale@plt>
   141c4:	subs	r4, r0, #0
   141c8:	beq	141f4 <abort@plt+0x3478>
   141cc:	ldr	r1, [pc, #40]	; 141fc <abort@plt+0x3480>
   141d0:	bl	10b9c <strcmp@plt>
   141d4:	cmp	r0, #0
   141d8:	popeq	{r4, pc}
   141dc:	mov	r0, r4
   141e0:	ldr	r1, [pc, #24]	; 14200 <abort@plt+0x3484>
   141e4:	bl	10b9c <strcmp@plt>
   141e8:	adds	r0, r0, #0
   141ec:	movne	r0, #1
   141f0:	pop	{r4, pc}
   141f4:	mov	r0, #1
   141f8:	pop	{r4, pc}
   141fc:	andeq	r4, r1, r0, lsl #28
   14200:	andeq	r4, r1, r4, lsl #28
   14204:	push	{r4, lr}
   14208:	mov	r0, #14
   1420c:	bl	10d58 <nl_langinfo@plt>
   14210:	cmp	r0, #0
   14214:	beq	1422c <abort@plt+0x34b0>
   14218:	ldrb	r2, [r0]
   1421c:	ldr	r3, [pc, #16]	; 14234 <abort@plt+0x34b8>
   14220:	cmp	r2, #0
   14224:	moveq	r0, r3
   14228:	pop	{r4, pc}
   1422c:	ldr	r0, [pc]	; 14234 <abort@plt+0x34b8>
   14230:	pop	{r4, pc}
   14234:	andeq	r4, r1, ip, lsl #28
   14238:	push	{r4, r5, lr}
   1423c:	sub	sp, sp, #12
   14240:	mov	r4, r0
   14244:	bl	10d10 <fileno@plt>
   14248:	cmp	r0, #0
   1424c:	mov	r0, r4
   14250:	blt	142cc <abort@plt+0x3550>
   14254:	bl	10c8c <__freading@plt>
   14258:	cmp	r0, #0
   1425c:	bne	14298 <abort@plt+0x351c>
   14260:	mov	r0, r4
   14264:	bl	142d8 <abort@plt+0x355c>
   14268:	cmp	r0, #0
   1426c:	beq	142c8 <abort@plt+0x354c>
   14270:	bl	10cd4 <__errno_location@plt>
   14274:	mov	r5, r0
   14278:	mov	r0, r4
   1427c:	ldr	r4, [r5]
   14280:	bl	10d28 <fclose@plt>
   14284:	cmp	r4, #0
   14288:	mvnne	r0, #0
   1428c:	strne	r4, [r5]
   14290:	add	sp, sp, #12
   14294:	pop	{r4, r5, pc}
   14298:	mov	r0, r4
   1429c:	bl	10d10 <fileno@plt>
   142a0:	mov	r3, #1
   142a4:	str	r3, [sp]
   142a8:	mov	r2, #0
   142ac:	mov	r3, #0
   142b0:	bl	10c38 <lseek64@plt>
   142b4:	mvn	r3, #0
   142b8:	mvn	r2, #0
   142bc:	cmp	r1, r3
   142c0:	cmpeq	r0, r2
   142c4:	bne	14260 <abort@plt+0x34e4>
   142c8:	mov	r0, r4
   142cc:	add	sp, sp, #12
   142d0:	pop	{r4, r5, lr}
   142d4:	b	10d28 <fclose@plt>
   142d8:	push	{r4, lr}
   142dc:	subs	r4, r0, #0
   142e0:	sub	sp, sp, #8
   142e4:	beq	14300 <abort@plt+0x3584>
   142e8:	bl	10c8c <__freading@plt>
   142ec:	cmp	r0, #0
   142f0:	beq	14300 <abort@plt+0x3584>
   142f4:	ldr	r3, [r4]
   142f8:	tst	r3, #256	; 0x100
   142fc:	bne	14310 <abort@plt+0x3594>
   14300:	mov	r0, r4
   14304:	add	sp, sp, #8
   14308:	pop	{r4, lr}
   1430c:	b	10ba8 <fflush@plt>
   14310:	mov	r3, #1
   14314:	str	r3, [sp]
   14318:	mov	r2, #0
   1431c:	mov	r3, #0
   14320:	mov	r0, r4
   14324:	bl	14338 <abort@plt+0x35bc>
   14328:	mov	r0, r4
   1432c:	add	sp, sp, #8
   14330:	pop	{r4, lr}
   14334:	b	10ba8 <fflush@plt>
   14338:	push	{r4, r5, r6, r7, r8, lr}
   1433c:	sub	sp, sp, #8
   14340:	ldmib	r0, {ip, lr}
   14344:	mov	r4, r0
   14348:	ldr	r5, [sp, #32]
   1434c:	cmp	lr, ip
   14350:	beq	14368 <abort@plt+0x35ec>
   14354:	str	r5, [sp, #32]
   14358:	mov	r0, r4
   1435c:	add	sp, sp, #8
   14360:	pop	{r4, r5, r6, r7, r8, lr}
   14364:	b	10d34 <fseeko64@plt>
   14368:	ldr	lr, [r0, #20]
   1436c:	ldr	ip, [r0, #16]
   14370:	cmp	lr, ip
   14374:	bne	14354 <abort@plt+0x35d8>
   14378:	ldr	r8, [r0, #36]	; 0x24
   1437c:	cmp	r8, #0
   14380:	bne	14354 <abort@plt+0x35d8>
   14384:	mov	r6, r2
   14388:	mov	r7, r3
   1438c:	bl	10d10 <fileno@plt>
   14390:	mov	r2, r6
   14394:	mov	r3, r7
   14398:	str	r5, [sp]
   1439c:	bl	10c38 <lseek64@plt>
   143a0:	mvn	r3, #0
   143a4:	mvn	r2, #0
   143a8:	cmp	r1, r3
   143ac:	cmpeq	r0, r2
   143b0:	beq	143d0 <abort@plt+0x3654>
   143b4:	ldr	r3, [r4]
   143b8:	strd	r0, [r4, #80]	; 0x50
   143bc:	mov	r0, r8
   143c0:	bic	r3, r3, #16
   143c4:	str	r3, [r4]
   143c8:	add	sp, sp, #8
   143cc:	pop	{r4, r5, r6, r7, r8, pc}
   143d0:	mvn	r0, #0
   143d4:	b	143c8 <abort@plt+0x364c>
   143d8:	subs	r2, r1, #1
   143dc:	bxeq	lr
   143e0:	bcc	145b8 <abort@plt+0x383c>
   143e4:	cmp	r0, r1
   143e8:	bls	1459c <abort@plt+0x3820>
   143ec:	tst	r1, r2
   143f0:	beq	145a8 <abort@plt+0x382c>
   143f4:	clz	r3, r0
   143f8:	clz	r2, r1
   143fc:	sub	r3, r2, r3
   14400:	rsbs	r3, r3, #31
   14404:	addne	r3, r3, r3, lsl #1
   14408:	mov	r2, #0
   1440c:	addne	pc, pc, r3, lsl #2
   14410:	nop			; (mov r0, r0)
   14414:	cmp	r0, r1, lsl #31
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #31
   14420:	cmp	r0, r1, lsl #30
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1, lsl #30
   1442c:	cmp	r0, r1, lsl #29
   14430:	adc	r2, r2, r2
   14434:	subcs	r0, r0, r1, lsl #29
   14438:	cmp	r0, r1, lsl #28
   1443c:	adc	r2, r2, r2
   14440:	subcs	r0, r0, r1, lsl #28
   14444:	cmp	r0, r1, lsl #27
   14448:	adc	r2, r2, r2
   1444c:	subcs	r0, r0, r1, lsl #27
   14450:	cmp	r0, r1, lsl #26
   14454:	adc	r2, r2, r2
   14458:	subcs	r0, r0, r1, lsl #26
   1445c:	cmp	r0, r1, lsl #25
   14460:	adc	r2, r2, r2
   14464:	subcs	r0, r0, r1, lsl #25
   14468:	cmp	r0, r1, lsl #24
   1446c:	adc	r2, r2, r2
   14470:	subcs	r0, r0, r1, lsl #24
   14474:	cmp	r0, r1, lsl #23
   14478:	adc	r2, r2, r2
   1447c:	subcs	r0, r0, r1, lsl #23
   14480:	cmp	r0, r1, lsl #22
   14484:	adc	r2, r2, r2
   14488:	subcs	r0, r0, r1, lsl #22
   1448c:	cmp	r0, r1, lsl #21
   14490:	adc	r2, r2, r2
   14494:	subcs	r0, r0, r1, lsl #21
   14498:	cmp	r0, r1, lsl #20
   1449c:	adc	r2, r2, r2
   144a0:	subcs	r0, r0, r1, lsl #20
   144a4:	cmp	r0, r1, lsl #19
   144a8:	adc	r2, r2, r2
   144ac:	subcs	r0, r0, r1, lsl #19
   144b0:	cmp	r0, r1, lsl #18
   144b4:	adc	r2, r2, r2
   144b8:	subcs	r0, r0, r1, lsl #18
   144bc:	cmp	r0, r1, lsl #17
   144c0:	adc	r2, r2, r2
   144c4:	subcs	r0, r0, r1, lsl #17
   144c8:	cmp	r0, r1, lsl #16
   144cc:	adc	r2, r2, r2
   144d0:	subcs	r0, r0, r1, lsl #16
   144d4:	cmp	r0, r1, lsl #15
   144d8:	adc	r2, r2, r2
   144dc:	subcs	r0, r0, r1, lsl #15
   144e0:	cmp	r0, r1, lsl #14
   144e4:	adc	r2, r2, r2
   144e8:	subcs	r0, r0, r1, lsl #14
   144ec:	cmp	r0, r1, lsl #13
   144f0:	adc	r2, r2, r2
   144f4:	subcs	r0, r0, r1, lsl #13
   144f8:	cmp	r0, r1, lsl #12
   144fc:	adc	r2, r2, r2
   14500:	subcs	r0, r0, r1, lsl #12
   14504:	cmp	r0, r1, lsl #11
   14508:	adc	r2, r2, r2
   1450c:	subcs	r0, r0, r1, lsl #11
   14510:	cmp	r0, r1, lsl #10
   14514:	adc	r2, r2, r2
   14518:	subcs	r0, r0, r1, lsl #10
   1451c:	cmp	r0, r1, lsl #9
   14520:	adc	r2, r2, r2
   14524:	subcs	r0, r0, r1, lsl #9
   14528:	cmp	r0, r1, lsl #8
   1452c:	adc	r2, r2, r2
   14530:	subcs	r0, r0, r1, lsl #8
   14534:	cmp	r0, r1, lsl #7
   14538:	adc	r2, r2, r2
   1453c:	subcs	r0, r0, r1, lsl #7
   14540:	cmp	r0, r1, lsl #6
   14544:	adc	r2, r2, r2
   14548:	subcs	r0, r0, r1, lsl #6
   1454c:	cmp	r0, r1, lsl #5
   14550:	adc	r2, r2, r2
   14554:	subcs	r0, r0, r1, lsl #5
   14558:	cmp	r0, r1, lsl #4
   1455c:	adc	r2, r2, r2
   14560:	subcs	r0, r0, r1, lsl #4
   14564:	cmp	r0, r1, lsl #3
   14568:	adc	r2, r2, r2
   1456c:	subcs	r0, r0, r1, lsl #3
   14570:	cmp	r0, r1, lsl #2
   14574:	adc	r2, r2, r2
   14578:	subcs	r0, r0, r1, lsl #2
   1457c:	cmp	r0, r1, lsl #1
   14580:	adc	r2, r2, r2
   14584:	subcs	r0, r0, r1, lsl #1
   14588:	cmp	r0, r1
   1458c:	adc	r2, r2, r2
   14590:	subcs	r0, r0, r1
   14594:	mov	r0, r2
   14598:	bx	lr
   1459c:	moveq	r0, #1
   145a0:	movne	r0, #0
   145a4:	bx	lr
   145a8:	clz	r2, r1
   145ac:	rsb	r2, r2, #31
   145b0:	lsr	r0, r0, r2
   145b4:	bx	lr
   145b8:	cmp	r0, #0
   145bc:	mvnne	r0, #0
   145c0:	b	145e4 <abort@plt+0x3868>
   145c4:	cmp	r1, #0
   145c8:	beq	145b8 <abort@plt+0x383c>
   145cc:	push	{r0, r1, lr}
   145d0:	bl	143d8 <abort@plt+0x365c>
   145d4:	pop	{r1, r2, lr}
   145d8:	mul	r3, r2, r0
   145dc:	sub	r1, r1, r3
   145e0:	bx	lr
   145e4:	push	{r1, lr}
   145e8:	mov	r0, #8
   145ec:	bl	10b90 <raise@plt>
   145f0:	pop	{r1, pc}
   145f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145f8:	mov	r7, r0
   145fc:	ldr	r6, [pc, #72]	; 1464c <abort@plt+0x38d0>
   14600:	ldr	r5, [pc, #72]	; 14650 <abort@plt+0x38d4>
   14604:	add	r6, pc, r6
   14608:	add	r5, pc, r5
   1460c:	sub	r6, r6, r5
   14610:	mov	r8, r1
   14614:	mov	r9, r2
   14618:	bl	10b58 <calloc@plt-0x20>
   1461c:	asrs	r6, r6, #2
   14620:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14624:	mov	r4, #0
   14628:	add	r4, r4, #1
   1462c:	ldr	r3, [r5], #4
   14630:	mov	r2, r9
   14634:	mov	r1, r8
   14638:	mov	r0, r7
   1463c:	blx	r3
   14640:	cmp	r6, r4
   14644:	bne	14628 <abort@plt+0x38ac>
   14648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1464c:	strdeq	r0, [r1], -r8
   14650:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   14654:	bx	lr
   14658:	ldr	r3, [pc, #12]	; 1466c <abort@plt+0x38f0>
   1465c:	mov	r1, #0
   14660:	add	r3, pc, r3
   14664:	ldr	r2, [r3]
   14668:	b	10ce0 <__cxa_atexit@plt>
   1466c:	andeq	r0, r1, ip, asr sl

Disassembly of section .fini:

00014670 <.fini>:
   14670:	push	{r3, lr}
   14674:	pop	{r3, pc}
