
raspbian-preinstalled/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010c54 <.init>:
   10c54:	push	{r3, lr}
   10c58:	bl	1124c <strspn@plt+0x380>
   10c5c:	pop	{r3, pc}

Disassembly of section .plt:

00010c60 <calloc@plt-0x14>:
   10c60:	push	{lr}		; (str lr, [sp, #-4]!)
   10c64:	ldr	lr, [pc, #4]	; 10c70 <calloc@plt-0x4>
   10c68:	add	lr, pc, lr
   10c6c:	ldr	pc, [lr, #8]!
   10c70:	muleq	r1, r0, r3

00010c74 <calloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #912]!	; 0x390

00010c80 <fputs_unlocked@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #904]!	; 0x388

00010c8c <raise@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #896]!	; 0x380

00010c98 <strcmp@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #888]!	; 0x378

00010ca4 <fflush@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #880]!	; 0x370

00010cb0 <memmove@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #872]!	; 0x368

00010cbc <free@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #864]!	; 0x360

00010cc8 <_exit@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #856]!	; 0x358

00010cd4 <memcpy@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #848]!	; 0x350

00010ce0 <mbsinit@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #840]!	; 0x348

00010cec <memcmp@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #832]!	; 0x340

00010cf8 <dcgettext@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #824]!	; 0x338

00010d04 <__stack_chk_fail@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #816]!	; 0x330

00010d10 <realloc@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #808]!	; 0x328

00010d1c <textdomain@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #800]!	; 0x320

00010d28 <__fxstatat64@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #792]!	; 0x318

00010d34 <iswprint@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #784]!	; 0x310

00010d40 <readlink@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #776]!	; 0x308

00010d4c <fwrite@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #768]!	; 0x300

00010d58 <lseek64@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #760]!	; 0x2f8

00010d64 <__ctype_get_mb_cur_max@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #94208	; 0x17000
   10d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d70 <__fpending@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #94208	; 0x17000
   10d78:	ldr	pc, [ip, #744]!	; 0x2e8

00010d7c <mbrtowc@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #736]!	; 0x2e0

00010d88 <error@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #728]!	; 0x2d8

00010d94 <malloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00010da0 <__libc_start_main@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #94208	; 0x17000
   10da8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dac <__freading@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #94208	; 0x17000
   10db4:	ldr	pc, [ip, #704]!	; 0x2c0

00010db8 <__gmon_start__@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc4 <getopt_long@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd0 <__ctype_b_loc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00010ddc <getcwd@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #672]!	; 0x2a0

00010de8 <exit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #664]!	; 0x298

00010df4 <strlen@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #656]!	; 0x290

00010e00 <__errno_location@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #648]!	; 0x288

00010e0c <__cxa_atexit@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #640]!	; 0x280

00010e18 <memset@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #632]!	; 0x278

00010e24 <__printf_chk@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #624]!	; 0x270

00010e30 <fileno@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #616]!	; 0x268

00010e3c <__fprintf_chk@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #608]!	; 0x260

00010e48 <fclose@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #600]!	; 0x258

00010e54 <fseeko64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #592]!	; 0x250

00010e60 <__overflow@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #584]!	; 0x248

00010e6c <setlocale@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #576]!	; 0x240

00010e78 <strrchr@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #568]!	; 0x238

00010e84 <nl_langinfo@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #560]!	; 0x230

00010e90 <bindtextdomain@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #552]!	; 0x228

00010e9c <__xstat64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #544]!	; 0x220

00010ea8 <strncmp@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #536]!	; 0x218

00010eb4 <abort@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #528]!	; 0x210

00010ec0 <__lxstat64@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #520]!	; 0x208

00010ecc <strspn@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #512]!	; 0x200

Disassembly of section .text:

00010ed8 <.text>:
   10ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10edc:	mov	r6, r0
   10ee0:	sub	sp, sp, #28
   10ee4:	ldr	r0, [r1]
   10ee8:	mov	r5, r1
   10eec:	bl	13084 <strspn@plt+0x21b8>
   10ef0:	ldr	r1, [pc, #728]	; 111d0 <strspn@plt+0x304>
   10ef4:	mov	r0, #6
   10ef8:	bl	10e6c <setlocale@plt>
   10efc:	ldr	r1, [pc, #720]	; 111d4 <strspn@plt+0x308>
   10f00:	ldr	r0, [pc, #720]	; 111d8 <strspn@plt+0x30c>
   10f04:	bl	10e90 <bindtextdomain@plt>
   10f08:	ldr	r0, [pc, #712]	; 111d8 <strspn@plt+0x30c>
   10f0c:	bl	10d1c <textdomain@plt>
   10f10:	ldr	r0, [pc, #708]	; 111dc <strspn@plt+0x310>
   10f14:	bl	16548 <strspn@plt+0x567c>
   10f18:	ldr	sl, [pc, #704]	; 111e0 <strspn@plt+0x314>
   10f1c:	ldr	r8, [pc, #704]	; 111e4 <strspn@plt+0x318>
   10f20:	ldr	fp, [pc, #704]	; 111e8 <strspn@plt+0x31c>
   10f24:	mov	r9, #0
   10f28:	mvn	r4, #0
   10f2c:	mov	r7, #0
   10f30:	str	r7, [sp]
   10f34:	mov	r3, sl
   10f38:	mov	r2, r8
   10f3c:	mov	r1, r5
   10f40:	mov	r0, r6
   10f44:	bl	10dc4 <getopt_long@plt>
   10f48:	cmn	r0, #1
   10f4c:	beq	1101c <strspn@plt+0x150>
   10f50:	cmp	r0, #109	; 0x6d
   10f54:	beq	11014 <strspn@plt+0x148>
   10f58:	ble	10f7c <strspn@plt+0xb0>
   10f5c:	cmp	r0, #115	; 0x73
   10f60:	beq	10fc0 <strspn@plt+0xf4>
   10f64:	ble	10fa8 <strspn@plt+0xdc>
   10f68:	cmp	r0, #118	; 0x76
   10f6c:	bne	10f98 <strspn@plt+0xcc>
   10f70:	mov	r3, #1
   10f74:	strb	r3, [fp, #1]
   10f78:	b	10f2c <strspn@plt+0x60>
   10f7c:	cmn	r0, #2
   10f80:	beq	111c8 <strspn@plt+0x2fc>
   10f84:	ble	10fdc <strspn@plt+0x110>
   10f88:	cmp	r0, #101	; 0x65
   10f8c:	bne	10fcc <strspn@plt+0x100>
   10f90:	mov	r4, r7
   10f94:	b	10f2c <strspn@plt+0x60>
   10f98:	cmp	r0, #122	; 0x7a
   10f9c:	bne	111c0 <strspn@plt+0x2f4>
   10fa0:	mov	r9, #1
   10fa4:	b	10f2c <strspn@plt+0x60>
   10fa8:	cmp	r0, #110	; 0x6e
   10fac:	moveq	r3, #1
   10fb0:	strbeq	r3, [fp]
   10fb4:	beq	10f2c <strspn@plt+0x60>
   10fb8:	cmp	r0, #113	; 0x71
   10fbc:	bne	111c0 <strspn@plt+0x2f4>
   10fc0:	mov	r3, #0
   10fc4:	strb	r3, [fp, #1]
   10fc8:	b	10f2c <strspn@plt+0x60>
   10fcc:	cmp	r0, #102	; 0x66
   10fd0:	bne	111c0 <strspn@plt+0x2f4>
   10fd4:	mov	r4, #1
   10fd8:	b	10f2c <strspn@plt+0x60>
   10fdc:	cmn	r0, #3
   10fe0:	bne	111c0 <strspn@plt+0x2f4>
   10fe4:	ldr	r1, [pc, #512]	; 111ec <strspn@plt+0x320>
   10fe8:	ldr	r3, [pc, #512]	; 111f0 <strspn@plt+0x324>
   10fec:	ldr	r2, [pc, #512]	; 111f4 <strspn@plt+0x328>
   10ff0:	str	r7, [sp, #4]
   10ff4:	ldr	r0, [r1]
   10ff8:	ldr	r3, [r3]
   10ffc:	ldr	r1, [pc, #500]	; 111f8 <strspn@plt+0x32c>
   11000:	str	r2, [sp]
   11004:	ldr	r2, [pc, #496]	; 111fc <strspn@plt+0x330>
   11008:	bl	158e0 <strspn@plt+0x4a14>
   1100c:	mov	r0, r7
   11010:	bl	10de8 <exit@plt>
   11014:	mov	r4, #2
   11018:	b	10f2c <strspn@plt+0x60>
   1101c:	ldr	r8, [pc, #476]	; 11200 <strspn@plt+0x334>
   11020:	ldr	r3, [r8]
   11024:	cmp	r3, r6
   11028:	bge	111a0 <strspn@plt+0x2d4>
   1102c:	sub	r2, r6, r3
   11030:	cmp	r2, #1
   11034:	ldr	sl, [pc, #428]	; 111e8 <strspn@plt+0x31c>
   11038:	beq	11060 <strspn@plt+0x194>
   1103c:	ldrb	r3, [sl]
   11040:	cmp	r3, #0
   11044:	bne	1117c <strspn@plt+0x2b0>
   11048:	ldr	r3, [r8]
   1104c:	mov	r2, #0
   11050:	cmp	r6, r3
   11054:	strb	r2, [sl]
   11058:	strle	r2, [sp, #12]
   1105c:	ble	11164 <strspn@plt+0x298>
   11060:	cmp	r9, #0
   11064:	movne	r2, #0
   11068:	moveq	r2, #10
   1106c:	str	r2, [sp, #20]
   11070:	uxtb	r2, r2
   11074:	str	r2, [sp, #16]
   11078:	mov	r2, #0
   1107c:	ldr	fp, [pc, #360]	; 111ec <strspn@plt+0x320>
   11080:	str	r2, [sp, #12]
   11084:	b	110e0 <strspn@plt+0x214>
   11088:	ldr	r1, [fp]
   1108c:	mov	r0, r7
   11090:	bl	10c80 <fputs_unlocked@plt>
   11094:	ldrb	r3, [sl]
   11098:	cmp	r3, #0
   1109c:	bne	110c4 <strspn@plt+0x1f8>
   110a0:	ldr	r0, [fp]
   110a4:	ldr	r2, [r0, #24]
   110a8:	ldr	r3, [r0, #20]
   110ac:	cmp	r2, r3
   110b0:	addhi	r2, r3, #1
   110b4:	strhi	r2, [r0, #20]
   110b8:	ldrhi	r2, [sp, #16]
   110bc:	strbhi	r2, [r3]
   110c0:	bls	11170 <strspn@plt+0x2a4>
   110c4:	mov	r0, r7
   110c8:	bl	10cbc <free@plt>
   110cc:	ldr	r3, [r8]
   110d0:	add	r3, r3, #1
   110d4:	cmp	r3, r6
   110d8:	str	r3, [r8]
   110dc:	bge	11164 <strspn@plt+0x298>
   110e0:	cmn	r4, #1
   110e4:	ldr	r9, [r5, r3, lsl #2]
   110e8:	beq	11150 <strspn@plt+0x284>
   110ec:	mov	r1, r4
   110f0:	mov	r0, r9
   110f4:	bl	116cc <strspn@plt+0x800>
   110f8:	mov	r7, r0
   110fc:	cmp	r7, #0
   11100:	bne	11088 <strspn@plt+0x1bc>
   11104:	ldrb	r3, [sl, #1]
   11108:	cmp	r3, #0
   1110c:	moveq	r3, #1
   11110:	streq	r3, [sp, #12]
   11114:	beq	110cc <strspn@plt+0x200>
   11118:	bl	10e00 <__errno_location@plt>
   1111c:	mov	r2, r9
   11120:	mov	r3, #1
   11124:	mov	r1, #3
   11128:	str	r3, [sp, #12]
   1112c:	ldr	r9, [r0]
   11130:	mov	r0, r7
   11134:	bl	1511c <strspn@plt+0x4250>
   11138:	ldr	r2, [pc, #196]	; 11204 <strspn@plt+0x338>
   1113c:	mov	r1, r9
   11140:	mov	r3, r0
   11144:	mov	r0, r7
   11148:	bl	10d88 <error@plt>
   1114c:	b	110cc <strspn@plt+0x200>
   11150:	mov	r1, #63	; 0x3f
   11154:	mov	r0, r9
   11158:	bl	11618 <strspn@plt+0x74c>
   1115c:	mov	r7, r0
   11160:	b	110fc <strspn@plt+0x230>
   11164:	ldr	r0, [sp, #12]
   11168:	add	sp, sp, #28
   1116c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11170:	ldr	r1, [sp, #20]
   11174:	bl	10e60 <__overflow@plt>
   11178:	b	110c4 <strspn@plt+0x1f8>
   1117c:	mov	r2, #5
   11180:	ldr	r1, [pc, #128]	; 11208 <strspn@plt+0x33c>
   11184:	mov	r0, r7
   11188:	bl	10cf8 <dcgettext@plt>
   1118c:	mov	r1, r7
   11190:	mov	r2, r0
   11194:	mov	r0, r7
   11198:	bl	10d88 <error@plt>
   1119c:	b	11048 <strspn@plt+0x17c>
   111a0:	mov	r2, #5
   111a4:	ldr	r1, [pc, #96]	; 1120c <strspn@plt+0x340>
   111a8:	mov	r0, r7
   111ac:	bl	10cf8 <dcgettext@plt>
   111b0:	mov	r1, r7
   111b4:	mov	r2, r0
   111b8:	mov	r0, r7
   111bc:	bl	10d88 <error@plt>
   111c0:	mov	r0, #1
   111c4:	bl	11300 <strspn@plt+0x434>
   111c8:	mov	r0, r7
   111cc:	bl	11300 <strspn@plt+0x434>
   111d0:	ldrdeq	r6, [r1], -r8
   111d4:	strdeq	r6, [r1], -ip
   111d8:	andeq	r6, r1, r0, asr fp
   111dc:	andeq	r1, r1, r0, lsl #26
   111e0:	andeq	r6, r1, r4, lsr #11
   111e4:	andeq	r6, r1, r0, lsr #24
   111e8:	andeq	r8, r2, r9, asr #2
   111ec:	andeq	r8, r2, r4, asr #2
   111f0:	andeq	r8, r2, r4, ror #1
   111f4:	andeq	r6, r1, r0, lsl ip
   111f8:	andeq	r6, r1, r4, asr r6
   111fc:	andeq	r6, r1, ip, asr #22
   11200:	andeq	r8, r2, r8, lsr r1
   11204:	andeq	r6, r1, r0, ror sp
   11208:	andeq	r6, r1, ip, lsr ip
   1120c:	andeq	r6, r1, ip, lsr #24
   11210:	mov	fp, #0
   11214:	mov	lr, #0
   11218:	pop	{r1}		; (ldr r1, [sp], #4)
   1121c:	mov	r2, sp
   11220:	push	{r2}		; (str r2, [sp, #-4]!)
   11224:	push	{r0}		; (str r0, [sp, #-4]!)
   11228:	ldr	ip, [pc, #16]	; 11240 <strspn@plt+0x374>
   1122c:	push	{ip}		; (str ip, [sp, #-4]!)
   11230:	ldr	r0, [pc, #12]	; 11244 <strspn@plt+0x378>
   11234:	ldr	r3, [pc, #12]	; 11248 <strspn@plt+0x37c>
   11238:	bl	10da0 <__libc_start_main@plt>
   1123c:	bl	10eb4 <abort@plt>
   11240:	andeq	r6, r1, r4, asr #10
   11244:	ldrdeq	r0, [r1], -r8
   11248:	andeq	r6, r1, r4, ror #9
   1124c:	ldr	r3, [pc, #20]	; 11268 <strspn@plt+0x39c>
   11250:	ldr	r2, [pc, #20]	; 1126c <strspn@plt+0x3a0>
   11254:	add	r3, pc, r3
   11258:	ldr	r2, [r3, r2]
   1125c:	cmp	r2, #0
   11260:	bxeq	lr
   11264:	b	10db8 <__gmon_start__@plt>
   11268:	andeq	r6, r1, r4, lsr #27
   1126c:	ldrdeq	r0, [r0], -r8
   11270:	ldr	r0, [pc, #24]	; 11290 <strspn@plt+0x3c4>
   11274:	ldr	r3, [pc, #24]	; 11294 <strspn@plt+0x3c8>
   11278:	cmp	r3, r0
   1127c:	bxeq	lr
   11280:	ldr	r3, [pc, #16]	; 11298 <strspn@plt+0x3cc>
   11284:	cmp	r3, #0
   11288:	bxeq	lr
   1128c:	bx	r3
   11290:	andeq	r8, r2, ip, lsr #2
   11294:	andeq	r8, r2, ip, lsr #2
   11298:	andeq	r0, r0, r0
   1129c:	ldr	r0, [pc, #36]	; 112c8 <strspn@plt+0x3fc>
   112a0:	ldr	r1, [pc, #36]	; 112cc <strspn@plt+0x400>
   112a4:	sub	r1, r1, r0
   112a8:	asr	r1, r1, #2
   112ac:	add	r1, r1, r1, lsr #31
   112b0:	asrs	r1, r1, #1
   112b4:	bxeq	lr
   112b8:	ldr	r3, [pc, #16]	; 112d0 <strspn@plt+0x404>
   112bc:	cmp	r3, #0
   112c0:	bxeq	lr
   112c4:	bx	r3
   112c8:	andeq	r8, r2, ip, lsr #2
   112cc:	andeq	r8, r2, ip, lsr #2
   112d0:	andeq	r0, r0, r0
   112d4:	push	{r4, lr}
   112d8:	ldr	r4, [pc, #24]	; 112f8 <strspn@plt+0x42c>
   112dc:	ldrb	r3, [r4]
   112e0:	cmp	r3, #0
   112e4:	popne	{r4, pc}
   112e8:	bl	11270 <strspn@plt+0x3a4>
   112ec:	mov	r3, #1
   112f0:	strb	r3, [r4]
   112f4:	pop	{r4, pc}
   112f8:	andeq	r8, r2, r8, asr #2
   112fc:	b	1129c <strspn@plt+0x3d0>
   11300:	ldr	r3, [pc, #696]	; 115c0 <strspn@plt+0x6f4>
   11304:	push	{r7, lr}
   11308:	sub	sp, sp, #64	; 0x40
   1130c:	ldr	r3, [r3]
   11310:	subs	r4, r0, #0
   11314:	str	r3, [sp, #60]	; 0x3c
   11318:	beq	11354 <strspn@plt+0x488>
   1131c:	ldr	r3, [pc, #672]	; 115c4 <strspn@plt+0x6f8>
   11320:	mov	r2, #5
   11324:	ldr	r1, [pc, #668]	; 115c8 <strspn@plt+0x6fc>
   11328:	mov	r0, #0
   1132c:	ldr	r5, [r3]
   11330:	bl	10cf8 <dcgettext@plt>
   11334:	ldr	r3, [pc, #656]	; 115cc <strspn@plt+0x700>
   11338:	mov	r1, #1
   1133c:	ldr	r3, [r3]
   11340:	mov	r2, r0
   11344:	mov	r0, r5
   11348:	bl	10e3c <__fprintf_chk@plt>
   1134c:	mov	r0, r4
   11350:	bl	10de8 <exit@plt>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #624]	; 115d0 <strspn@plt+0x704>
   1135c:	bl	10cf8 <dcgettext@plt>
   11360:	ldr	r3, [pc, #612]	; 115cc <strspn@plt+0x700>
   11364:	ldr	r5, [pc, #616]	; 115d4 <strspn@plt+0x708>
   11368:	ldr	r2, [r3]
   1136c:	mov	r1, r0
   11370:	mov	r0, #1
   11374:	bl	10e24 <__printf_chk@plt>
   11378:	mov	r2, #5
   1137c:	ldr	r1, [pc, #596]	; 115d8 <strspn@plt+0x70c>
   11380:	mov	r0, r4
   11384:	bl	10cf8 <dcgettext@plt>
   11388:	ldr	r1, [r5]
   1138c:	bl	10c80 <fputs_unlocked@plt>
   11390:	mov	r2, #5
   11394:	ldr	r1, [pc, #576]	; 115dc <strspn@plt+0x710>
   11398:	mov	r0, r4
   1139c:	bl	10cf8 <dcgettext@plt>
   113a0:	ldr	r1, [r5]
   113a4:	bl	10c80 <fputs_unlocked@plt>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #556]	; 115e0 <strspn@plt+0x714>
   113b0:	mov	r0, r4
   113b4:	bl	10cf8 <dcgettext@plt>
   113b8:	ldr	r1, [r5]
   113bc:	bl	10c80 <fputs_unlocked@plt>
   113c0:	mov	r2, #5
   113c4:	ldr	r1, [pc, #536]	; 115e4 <strspn@plt+0x718>
   113c8:	mov	r0, r4
   113cc:	bl	10cf8 <dcgettext@plt>
   113d0:	ldr	r1, [r5]
   113d4:	bl	10c80 <fputs_unlocked@plt>
   113d8:	mov	r2, #5
   113dc:	ldr	r1, [pc, #516]	; 115e8 <strspn@plt+0x71c>
   113e0:	mov	r0, r4
   113e4:	bl	10cf8 <dcgettext@plt>
   113e8:	ldr	r1, [r5]
   113ec:	bl	10c80 <fputs_unlocked@plt>
   113f0:	ldr	lr, [pc, #500]	; 115ec <strspn@plt+0x720>
   113f4:	add	ip, sp, #4
   113f8:	ldm	lr!, {r0, r1, r2, r3}
   113fc:	stmia	ip!, {r0, r1, r2, r3}
   11400:	ldm	lr!, {r0, r1, r2, r3}
   11404:	ldr	r6, [sp, #4]
   11408:	stmia	ip!, {r0, r1, r2, r3}
   1140c:	cmp	r6, #0
   11410:	ldm	lr!, {r0, r1, r2, r3}
   11414:	addeq	r5, sp, #4
   11418:	stmia	ip!, {r0, r1, r2, r3}
   1141c:	ldm	lr, {r0, r1}
   11420:	stm	ip, {r0, r1}
   11424:	beq	11454 <strspn@plt+0x588>
   11428:	ldr	r7, [pc, #448]	; 115f0 <strspn@plt+0x724>
   1142c:	add	r5, sp, #4
   11430:	b	11440 <strspn@plt+0x574>
   11434:	ldr	r6, [r5, #8]!
   11438:	cmp	r6, #0
   1143c:	beq	11454 <strspn@plt+0x588>
   11440:	mov	r1, r6
   11444:	mov	r0, r7
   11448:	bl	10c98 <strcmp@plt>
   1144c:	cmp	r0, #0
   11450:	bne	11434 <strspn@plt+0x568>
   11454:	ldr	r5, [r5, #4]
   11458:	mov	r2, #5
   1145c:	cmp	r5, #0
   11460:	ldr	r1, [pc, #396]	; 115f4 <strspn@plt+0x728>
   11464:	beq	1150c <strspn@plt+0x640>
   11468:	mov	r0, #0
   1146c:	bl	10cf8 <dcgettext@plt>
   11470:	ldr	r3, [pc, #384]	; 115f8 <strspn@plt+0x72c>
   11474:	ldr	r2, [pc, #384]	; 115fc <strspn@plt+0x730>
   11478:	mov	r1, r0
   1147c:	mov	r0, #1
   11480:	bl	10e24 <__printf_chk@plt>
   11484:	mov	r1, #0
   11488:	mov	r0, #5
   1148c:	bl	10e6c <setlocale@plt>
   11490:	cmp	r0, #0
   11494:	ldreq	r6, [pc, #340]	; 115f0 <strspn@plt+0x724>
   11498:	beq	114b4 <strspn@plt+0x5e8>
   1149c:	mov	r2, #3
   114a0:	ldr	r1, [pc, #344]	; 11600 <strspn@plt+0x734>
   114a4:	bl	10ea8 <strncmp@plt>
   114a8:	ldr	r6, [pc, #320]	; 115f0 <strspn@plt+0x724>
   114ac:	cmp	r0, #0
   114b0:	bne	1159c <strspn@plt+0x6d0>
   114b4:	mov	r2, #5
   114b8:	ldr	r1, [pc, #324]	; 11604 <strspn@plt+0x738>
   114bc:	mov	r0, #0
   114c0:	bl	10cf8 <dcgettext@plt>
   114c4:	ldr	r3, [pc, #292]	; 115f0 <strspn@plt+0x724>
   114c8:	ldr	r2, [pc, #296]	; 115f8 <strspn@plt+0x72c>
   114cc:	mov	r1, r0
   114d0:	mov	r0, #1
   114d4:	bl	10e24 <__printf_chk@plt>
   114d8:	mov	r2, #5
   114dc:	ldr	r1, [pc, #292]	; 11608 <strspn@plt+0x73c>
   114e0:	mov	r0, #0
   114e4:	bl	10cf8 <dcgettext@plt>
   114e8:	ldr	r2, [pc, #284]	; 1160c <strspn@plt+0x740>
   114ec:	cmp	r5, r6
   114f0:	ldr	r3, [pc, #280]	; 11610 <strspn@plt+0x744>
   114f4:	movne	r3, r2
   114f8:	mov	r1, r0
   114fc:	mov	r2, r5
   11500:	mov	r0, #1
   11504:	bl	10e24 <__printf_chk@plt>
   11508:	b	1134c <strspn@plt+0x480>
   1150c:	mov	r0, r5
   11510:	bl	10cf8 <dcgettext@plt>
   11514:	ldr	r3, [pc, #220]	; 115f8 <strspn@plt+0x72c>
   11518:	ldr	r2, [pc, #220]	; 115fc <strspn@plt+0x730>
   1151c:	mov	r1, r0
   11520:	mov	r0, #1
   11524:	bl	10e24 <__printf_chk@plt>
   11528:	mov	r1, r5
   1152c:	mov	r0, #5
   11530:	bl	10e6c <setlocale@plt>
   11534:	cmp	r0, #0
   11538:	beq	11550 <strspn@plt+0x684>
   1153c:	mov	r2, #3
   11540:	ldr	r1, [pc, #184]	; 11600 <strspn@plt+0x734>
   11544:	bl	10ea8 <strncmp@plt>
   11548:	cmp	r0, #0
   1154c:	bne	11594 <strspn@plt+0x6c8>
   11550:	mov	r2, #5
   11554:	ldr	r1, [pc, #168]	; 11604 <strspn@plt+0x738>
   11558:	mov	r0, #0
   1155c:	bl	10cf8 <dcgettext@plt>
   11560:	ldr	r3, [pc, #136]	; 115f0 <strspn@plt+0x724>
   11564:	ldr	r2, [pc, #140]	; 115f8 <strspn@plt+0x72c>
   11568:	mov	r5, r3
   1156c:	mov	r1, r0
   11570:	mov	r0, #1
   11574:	bl	10e24 <__printf_chk@plt>
   11578:	ldr	r1, [pc, #136]	; 11608 <strspn@plt+0x73c>
   1157c:	mov	r2, #5
   11580:	mov	r0, #0
   11584:	bl	10cf8 <dcgettext@plt>
   11588:	ldr	r3, [pc, #128]	; 11610 <strspn@plt+0x744>
   1158c:	mov	r1, r0
   11590:	b	114fc <strspn@plt+0x630>
   11594:	ldr	r6, [pc, #84]	; 115f0 <strspn@plt+0x724>
   11598:	mov	r5, r6
   1159c:	mov	r2, #5
   115a0:	ldr	r1, [pc, #108]	; 11614 <strspn@plt+0x748>
   115a4:	mov	r0, #0
   115a8:	bl	10cf8 <dcgettext@plt>
   115ac:	ldr	r2, [pc, #60]	; 115f0 <strspn@plt+0x724>
   115b0:	mov	r1, r0
   115b4:	mov	r0, #1
   115b8:	bl	10e24 <__printf_chk@plt>
   115bc:	b	114b4 <strspn@plt+0x5e8>
   115c0:	andeq	r7, r2, r8, lsl #30
   115c4:	andeq	r8, r2, r0, asr #2
   115c8:	andeq	r6, r1, r0, ror #12
   115cc:	andeq	r8, r2, r4, asr r1
   115d0:	andeq	r6, r1, r8, lsl #13
   115d4:	andeq	r8, r2, r4, asr #2
   115d8:	andeq	r6, r1, r8, lsr #13
   115dc:	andeq	r6, r1, r0, ror #13
   115e0:	muleq	r1, r8, r8
   115e4:	andeq	r6, r1, r4, lsr #21
   115e8:	ldrdeq	r6, [r1], -r4
   115ec:	andeq	r6, r1, ip, ror #10
   115f0:	andeq	r6, r1, r4, asr r6
   115f4:	andeq	r6, r1, ip, lsl #22
   115f8:	andeq	r6, r1, r4, lsr #22
   115fc:	andeq	r6, r1, ip, asr #22
   11600:	andeq	r6, r1, ip, asr fp
   11604:	andeq	r6, r1, r8, lsr #23
   11608:	andeq	r6, r1, r8, asr #23
   1160c:	ldrdeq	r6, [r1], -r8
   11610:	andeq	r6, r1, r4, ror ip
   11614:	andeq	r6, r1, r0, ror #22
   11618:	cmp	r1, #1024	; 0x400
   1161c:	push	{r4, r5, r6, r7, r8, lr}
   11620:	mov	r7, r0
   11624:	ldrhi	r4, [pc, #156]	; 116c8 <strspn@plt+0x7fc>
   11628:	addls	r4, r1, #1
   1162c:	mov	r0, r4
   11630:	bl	10d94 <malloc@plt>
   11634:	mov	r2, r4
   11638:	subs	r5, r0, #0
   1163c:	mov	r1, r5
   11640:	mov	r0, r7
   11644:	beq	1168c <strspn@plt+0x7c0>
   11648:	bl	10d40 <readlink@plt>
   1164c:	subs	r6, r0, #0
   11650:	blt	11694 <strspn@plt+0x7c8>
   11654:	cmp	r4, r6
   11658:	mov	r0, r5
   1165c:	bhi	116b8 <strspn@plt+0x7ec>
   11660:	bl	10cbc <free@plt>
   11664:	cmn	r4, #-1073741823	; 0xc0000001
   11668:	lslls	r4, r4, #1
   1166c:	bls	1162c <strspn@plt+0x760>
   11670:	cmn	r4, #-2147483646	; 0x80000002
   11674:	mvn	r4, #-2147483648	; 0x80000000
   11678:	bls	1162c <strspn@plt+0x760>
   1167c:	bl	10e00 <__errno_location@plt>
   11680:	mov	r5, #0
   11684:	mov	r3, #12
   11688:	str	r3, [r0]
   1168c:	mov	r0, r5
   11690:	pop	{r4, r5, r6, r7, r8, pc}
   11694:	bl	10e00 <__errno_location@plt>
   11698:	ldr	r3, [r0]
   1169c:	cmp	r3, #34	; 0x22
   116a0:	beq	11654 <strspn@plt+0x788>
   116a4:	mov	r0, r5
   116a8:	mov	r5, #0
   116ac:	bl	10cbc <free@plt>
   116b0:	mov	r0, r5
   116b4:	pop	{r4, r5, r6, r7, r8, pc}
   116b8:	mov	r3, #0
   116bc:	strb	r3, [r5, r6]
   116c0:	mov	r0, r5
   116c4:	pop	{r4, r5, r6, r7, r8, pc}
   116c8:	andeq	r0, r0, r1, lsl #8
   116cc:	ldr	r2, [pc, #1524]	; 11cc8 <strspn@plt+0xdfc>
   116d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d4:	and	r9, r1, #3
   116d8:	sub	sp, sp, #148	; 0x94
   116dc:	sub	r3, r9, #1
   116e0:	ldr	r2, [r2]
   116e4:	ands	r3, r3, r9
   116e8:	str	r3, [sp, #28]
   116ec:	str	r2, [sp, #140]	; 0x8c
   116f0:	bne	11bac <strspn@plt+0xce0>
   116f4:	cmp	r0, #0
   116f8:	beq	11bf8 <strspn@plt+0xd2c>
   116fc:	ldrb	r5, [r0]
   11700:	cmp	r5, #0
   11704:	beq	11bc0 <strspn@plt+0xcf4>
   11708:	cmp	r5, #47	; 0x2f
   1170c:	mov	r4, r1
   11710:	str	r0, [sp, #8]
   11714:	beq	118c4 <strspn@plt+0x9f8>
   11718:	bl	15c6c <strspn@plt+0x4da0>
   1171c:	subs	r8, r0, #0
   11720:	beq	1196c <strspn@plt+0xaa0>
   11724:	bl	10df4 <strlen@plt>
   11728:	ldr	r3, [sp, #8]
   1172c:	cmp	r0, #4096	; 0x1000
   11730:	mov	r6, r0
   11734:	bcc	11bd4 <strspn@plt+0xd08>
   11738:	add	r6, r8, r0
   1173c:	mov	r7, r6
   11740:	mov	r2, #0
   11744:	str	r2, [sp, #16]
   11748:	str	r2, [sp, #24]
   1174c:	mov	sl, r2
   11750:	ldrb	r2, [r3]
   11754:	and	r1, r4, #4
   11758:	str	r1, [sp, #8]
   1175c:	str	r3, [sp, #20]
   11760:	cmp	r2, #0
   11764:	beq	11910 <strspn@plt+0xa44>
   11768:	cmp	r2, #47	; 0x2f
   1176c:	movne	r1, r2
   11770:	bne	11788 <strspn@plt+0x8bc>
   11774:	ldrb	r1, [r3, #1]!
   11778:	cmp	r1, #47	; 0x2f
   1177c:	beq	11774 <strspn@plt+0x8a8>
   11780:	cmp	r1, #0
   11784:	beq	11910 <strspn@plt+0xa44>
   11788:	mov	r4, r3
   1178c:	b	11794 <strspn@plt+0x8c8>
   11790:	mov	r4, r5
   11794:	ldrb	r2, [r4, #1]
   11798:	add	r5, r4, #1
   1179c:	cmp	r2, #0
   117a0:	cmpne	r2, #47	; 0x2f
   117a4:	bne	11790 <strspn@plt+0x8c4>
   117a8:	cmp	r5, r3
   117ac:	beq	11910 <strspn@plt+0xa44>
   117b0:	sub	fp, r5, r3
   117b4:	cmp	fp, #1
   117b8:	beq	11900 <strspn@plt+0xa34>
   117bc:	cmp	r1, #46	; 0x2e
   117c0:	cmpeq	fp, #2
   117c4:	beq	11a7c <strspn@plt+0xbb0>
   117c8:	ldrb	r2, [r6, #-1]
   117cc:	cmp	r2, #47	; 0x2f
   117d0:	movne	r2, #47	; 0x2f
   117d4:	strbne	r2, [r6], #1
   117d8:	add	r2, r6, fp
   117dc:	cmp	r7, r2
   117e0:	bhi	11820 <strspn@plt+0x954>
   117e4:	ldr	r2, [pc, #1248]	; 11ccc <strspn@plt+0xe00>
   117e8:	sub	r7, r7, r8
   117ec:	cmp	fp, r2
   117f0:	addgt	r7, r7, #1
   117f4:	addgt	r7, fp, r7
   117f8:	addle	r7, r7, #4096	; 0x1000
   117fc:	mov	r0, r8
   11800:	mov	r1, r7
   11804:	str	r3, [sp, #12]
   11808:	bl	15a40 <strspn@plt+0x4b74>
   1180c:	sub	r6, r6, r8
   11810:	ldr	r3, [sp, #12]
   11814:	mov	r8, r0
   11818:	add	r7, r0, r7
   1181c:	add	r6, r0, r6
   11820:	mov	r1, r3
   11824:	mov	r0, r6
   11828:	mov	r2, fp
   1182c:	bl	10cd4 <memcpy@plt>
   11830:	ldr	r2, [sp, #8]
   11834:	sub	r3, r9, #2
   11838:	cmp	r2, #0
   1183c:	clz	r3, r3
   11840:	lsr	r3, r3, #5
   11844:	moveq	r3, #0
   11848:	cmp	r3, #0
   1184c:	strb	sl, [r0, fp]
   11850:	add	r6, r0, fp
   11854:	bne	118a4 <strspn@plt+0x9d8>
   11858:	ldr	r3, [sp, #8]
   1185c:	add	fp, sp, #32
   11860:	cmp	r3, #0
   11864:	mov	r2, fp
   11868:	mov	r1, r8
   1186c:	mov	r0, #3
   11870:	beq	1198c <strspn@plt+0xac0>
   11874:	bl	10e9c <__xstat64@plt>
   11878:	adds	r0, r0, #0
   1187c:	movne	r0, #1
   11880:	cmp	r0, #0
   11884:	beq	118e4 <strspn@plt+0xa18>
   11888:	bl	10e00 <__errno_location@plt>
   1188c:	cmp	r9, #0
   11890:	mov	fp, r0
   11894:	ldr	r3, [r0]
   11898:	beq	11af4 <strspn@plt+0xc28>
   1189c:	cmp	r9, #1
   118a0:	beq	11ad0 <strspn@plt+0xc04>
   118a4:	str	sl, [sp, #48]	; 0x30
   118a8:	ldrb	r3, [r5]
   118ac:	cmp	r3, #0
   118b0:	cmpne	r9, #2
   118b4:	bne	11cac <strspn@plt+0xde0>
   118b8:	ldrb	r2, [r5]
   118bc:	mov	r3, r5
   118c0:	b	11760 <strspn@plt+0x894>
   118c4:	mov	r0, #4096	; 0x1000
   118c8:	bl	159e4 <strspn@plt+0x4b18>
   118cc:	ldr	r3, [sp, #8]
   118d0:	mov	r6, r0
   118d4:	mov	r8, r0
   118d8:	add	r7, r0, #4096	; 0x1000
   118dc:	strb	r5, [r6], #1
   118e0:	b	11740 <strspn@plt+0x874>
   118e4:	ldr	r3, [sp, #48]	; 0x30
   118e8:	and	r3, r3, #61440	; 0xf000
   118ec:	cmp	r3, #40960	; 0xa000
   118f0:	beq	1199c <strspn@plt+0xad0>
   118f4:	cmp	r3, #16384	; 0x4000
   118f8:	beq	118b8 <strspn@plt+0x9ec>
   118fc:	b	118a8 <strspn@plt+0x9dc>
   11900:	cmp	r1, #46	; 0x2e
   11904:	bne	117c8 <strspn@plt+0x8fc>
   11908:	mov	r3, r5
   1190c:	b	11760 <strspn@plt+0x894>
   11910:	add	r3, r8, #1
   11914:	cmp	r6, r3
   11918:	bls	11928 <strspn@plt+0xa5c>
   1191c:	ldrb	r3, [r6, #-1]
   11920:	cmp	r3, #47	; 0x2f
   11924:	beq	11c5c <strspn@plt+0xd90>
   11928:	add	r3, r6, #1
   1192c:	cmp	r7, r3
   11930:	mov	r3, #0
   11934:	strb	r3, [r6]
   11938:	beq	11950 <strspn@plt+0xa84>
   1193c:	sub	r1, r6, r8
   11940:	mov	r0, r8
   11944:	add	r1, r1, #1
   11948:	bl	15a40 <strspn@plt+0x4b74>
   1194c:	mov	r8, r0
   11950:	ldr	r0, [sp, #24]
   11954:	bl	10cbc <free@plt>
   11958:	ldr	r3, [sp, #16]
   1195c:	cmp	r3, #0
   11960:	beq	1196c <strspn@plt+0xaa0>
   11964:	mov	r0, r3
   11968:	bl	129d8 <strspn@plt+0x1b0c>
   1196c:	ldr	r3, [pc, #852]	; 11cc8 <strspn@plt+0xdfc>
   11970:	ldr	r2, [sp, #140]	; 0x8c
   11974:	mov	r0, r8
   11978:	ldr	r3, [r3]
   1197c:	cmp	r2, r3
   11980:	bne	11cc4 <strspn@plt+0xdf8>
   11984:	add	sp, sp, #148	; 0x94
   11988:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1198c:	bl	10ec0 <__lxstat64@plt>
   11990:	adds	r0, r0, #0
   11994:	movne	r0, #1
   11998:	b	11880 <strspn@plt+0x9b4>
   1199c:	ldr	r3, [sp, #16]
   119a0:	cmp	r3, #0
   119a4:	beq	11b5c <strspn@plt+0xc90>
   119a8:	mov	r2, fp
   119ac:	ldrd	r0, [sp, #16]
   119b0:	bl	11e40 <strspn@plt+0xf74>
   119b4:	cmp	r0, #0
   119b8:	bne	11a68 <strspn@plt+0xb9c>
   119bc:	mov	r2, fp
   119c0:	ldrd	r0, [sp, #16]
   119c4:	bl	11dd8 <strspn@plt+0xf0c>
   119c8:	ldr	r1, [sp, #80]	; 0x50
   119cc:	mov	r0, r8
   119d0:	bl	11618 <strspn@plt+0x74c>
   119d4:	subs	fp, r0, #0
   119d8:	beq	11c14 <strspn@plt+0xd48>
   119dc:	bl	10df4 <strlen@plt>
   119e0:	mov	r4, r0
   119e4:	mov	r0, r5
   119e8:	bl	10df4 <strlen@plt>
   119ec:	ldr	r3, [sp, #28]
   119f0:	cmp	r3, #0
   119f4:	add	r3, r4, r0
   119f8:	mov	r2, r0
   119fc:	add	r3, r3, #1
   11a00:	beq	11b88 <strspn@plt+0xcbc>
   11a04:	ldr	r1, [sp, #28]
   11a08:	cmp	r3, r1
   11a0c:	bhi	11c34 <strspn@plt+0xd68>
   11a10:	mov	r1, r5
   11a14:	ldr	r5, [sp, #24]
   11a18:	add	r2, r2, #1
   11a1c:	add	r0, r5, r4
   11a20:	bl	10cb0 <memmove@plt>
   11a24:	mov	r2, r4
   11a28:	mov	r1, fp
   11a2c:	mov	r0, r5
   11a30:	bl	10cd4 <memcpy@plt>
   11a34:	ldrb	r3, [fp]
   11a38:	add	r2, r8, #1
   11a3c:	cmp	r3, #47	; 0x2f
   11a40:	strbeq	r3, [r8]
   11a44:	moveq	r6, r2
   11a48:	str	r0, [sp, #20]
   11a4c:	beq	11a58 <strspn@plt+0xb8c>
   11a50:	cmp	r6, r2
   11a54:	bhi	11c68 <strspn@plt+0xd9c>
   11a58:	mov	r0, fp
   11a5c:	bl	10cbc <free@plt>
   11a60:	ldr	r5, [sp, #20]
   11a64:	b	118b8 <strspn@plt+0x9ec>
   11a68:	cmp	r9, #2
   11a6c:	bne	11b1c <strspn@plt+0xc50>
   11a70:	ldrb	r2, [r4, #1]
   11a74:	mov	r3, r5
   11a78:	b	11760 <strspn@plt+0x894>
   11a7c:	ldrb	r1, [r3, #1]
   11a80:	cmp	r1, #46	; 0x2e
   11a84:	bne	117c8 <strspn@plt+0x8fc>
   11a88:	add	r3, r8, #1
   11a8c:	cmp	r6, r3
   11a90:	bls	11908 <strspn@plt+0xa3c>
   11a94:	sub	r1, r6, #1
   11a98:	cmp	r8, r1
   11a9c:	bcs	11ca0 <strspn@plt+0xdd4>
   11aa0:	ldrb	r3, [r6, #-2]
   11aa4:	cmp	r3, #47	; 0x2f
   11aa8:	beq	11ca0 <strspn@plt+0xdd4>
   11aac:	sub	r3, r6, #2
   11ab0:	cmp	r3, r8
   11ab4:	mov	r6, r3
   11ab8:	beq	11908 <strspn@plt+0xa3c>
   11abc:	ldrb	r1, [r3, #-1]
   11ac0:	sub	r3, r3, #1
   11ac4:	cmp	r1, #47	; 0x2f
   11ac8:	beq	11908 <strspn@plt+0xa3c>
   11acc:	b	11ab0 <strspn@plt+0xbe4>
   11ad0:	ldr	r1, [pc, #504]	; 11cd0 <strspn@plt+0xe04>
   11ad4:	mov	r0, r5
   11ad8:	str	r3, [sp, #12]
   11adc:	bl	10ecc <strspn@plt>
   11ae0:	ldr	r3, [sp, #12]
   11ae4:	ldrb	r2, [r5, r0]
   11ae8:	cmp	r3, #2
   11aec:	cmpeq	r2, #0
   11af0:	beq	11a70 <strspn@plt+0xba4>
   11af4:	ldr	r0, [sp, #24]
   11af8:	str	r3, [sp, #8]
   11afc:	bl	10cbc <free@plt>
   11b00:	mov	r0, r8
   11b04:	bl	10cbc <free@plt>
   11b08:	ldr	r3, [sp, #16]
   11b0c:	cmp	r3, #0
   11b10:	ldr	r3, [sp, #8]
   11b14:	beq	11b50 <strspn@plt+0xc84>
   11b18:	b	11b40 <strspn@plt+0xc74>
   11b1c:	bl	10e00 <__errno_location@plt>
   11b20:	mov	r3, #40	; 0x28
   11b24:	mov	fp, r0
   11b28:	ldr	r0, [sp, #24]
   11b2c:	str	r3, [sp, #8]
   11b30:	bl	10cbc <free@plt>
   11b34:	mov	r0, r8
   11b38:	bl	10cbc <free@plt>
   11b3c:	ldr	r3, [sp, #8]
   11b40:	ldr	r0, [sp, #16]
   11b44:	str	r3, [sp, #8]
   11b48:	bl	129d8 <strspn@plt+0x1b0c>
   11b4c:	ldr	r3, [sp, #8]
   11b50:	str	r3, [fp]
   11b54:	mov	r8, #0
   11b58:	b	1196c <strspn@plt+0xaa0>
   11b5c:	ldr	r3, [pc, #368]	; 11cd4 <strspn@plt+0xe08>
   11b60:	ldr	r1, [sp, #16]
   11b64:	str	r3, [sp]
   11b68:	ldr	r2, [pc, #360]	; 11cd8 <strspn@plt+0xe0c>
   11b6c:	ldr	r3, [pc, #360]	; 11cdc <strspn@plt+0xe10>
   11b70:	mov	r0, #7
   11b74:	bl	127d8 <strspn@plt+0x190c>
   11b78:	subs	r3, r0, #0
   11b7c:	str	r3, [sp, #16]
   11b80:	bne	119a8 <strspn@plt+0xadc>
   11b84:	bl	15c2c <strspn@plt+0x4d60>
   11b88:	cmp	r3, #4096	; 0x1000
   11b8c:	movcc	r3, #4096	; 0x1000
   11b90:	str	r0, [sp, #12]
   11b94:	mov	r0, r3
   11b98:	str	r3, [sp, #28]
   11b9c:	bl	159e4 <strspn@plt+0x4b18>
   11ba0:	ldr	r2, [sp, #12]
   11ba4:	str	r0, [sp, #24]
   11ba8:	b	11a10 <strspn@plt+0xb44>
   11bac:	bl	10e00 <__errno_location@plt>
   11bb0:	mov	r3, #22
   11bb4:	mov	r8, #0
   11bb8:	str	r3, [r0]
   11bbc:	b	1196c <strspn@plt+0xaa0>
   11bc0:	bl	10e00 <__errno_location@plt>
   11bc4:	mov	r3, #2
   11bc8:	mov	r8, r5
   11bcc:	str	r3, [r0]
   11bd0:	b	1196c <strspn@plt+0xaa0>
   11bd4:	mov	r0, r8
   11bd8:	mov	r1, #4096	; 0x1000
   11bdc:	str	r3, [sp, #8]
   11be0:	bl	15a40 <strspn@plt+0x4b74>
   11be4:	ldr	r3, [sp, #8]
   11be8:	mov	r8, r0
   11bec:	add	r6, r0, r6
   11bf0:	add	r7, r0, #4096	; 0x1000
   11bf4:	b	11740 <strspn@plt+0x874>
   11bf8:	str	r0, [sp, #8]
   11bfc:	bl	10e00 <__errno_location@plt>
   11c00:	ldr	r3, [sp, #8]
   11c04:	mov	r2, #22
   11c08:	mov	r8, r3
   11c0c:	str	r2, [r0]
   11c10:	b	1196c <strspn@plt+0xaa0>
   11c14:	bl	10e00 <__errno_location@plt>
   11c18:	cmp	r9, #2
   11c1c:	mov	fp, r0
   11c20:	ldr	r3, [r0]
   11c24:	bne	11b28 <strspn@plt+0xc5c>
   11c28:	cmp	r3, #12
   11c2c:	bne	11a70 <strspn@plt+0xba4>
   11c30:	b	11b28 <strspn@plt+0xc5c>
   11c34:	str	r0, [sp, #20]
   11c38:	mov	r1, r3
   11c3c:	ldr	r0, [sp, #24]
   11c40:	str	r3, [sp, #12]
   11c44:	bl	15a40 <strspn@plt+0x4b74>
   11c48:	ldr	r3, [sp, #12]
   11c4c:	ldr	r2, [sp, #20]
   11c50:	str	r3, [sp, #28]
   11c54:	str	r0, [sp, #24]
   11c58:	b	11a10 <strspn@plt+0xb44>
   11c5c:	mov	r3, r6
   11c60:	sub	r6, r6, #1
   11c64:	b	1192c <strspn@plt+0xa60>
   11c68:	sub	r3, r6, #1
   11c6c:	cmp	r8, r3
   11c70:	bcs	11cbc <strspn@plt+0xdf0>
   11c74:	ldrb	r2, [r6, #-2]
   11c78:	cmp	r2, #47	; 0x2f
   11c7c:	beq	11cbc <strspn@plt+0xdf0>
   11c80:	sub	r3, r6, #2
   11c84:	cmp	r3, r8
   11c88:	mov	r6, r3
   11c8c:	beq	11a58 <strspn@plt+0xb8c>
   11c90:	ldrb	r2, [r3, #-1]!
   11c94:	cmp	r2, #47	; 0x2f
   11c98:	beq	11a58 <strspn@plt+0xb8c>
   11c9c:	b	11c84 <strspn@plt+0xdb8>
   11ca0:	mov	r3, r5
   11ca4:	mov	r6, r1
   11ca8:	b	11760 <strspn@plt+0x894>
   11cac:	bl	10e00 <__errno_location@plt>
   11cb0:	mov	r3, #20
   11cb4:	mov	fp, r0
   11cb8:	b	11af4 <strspn@plt+0xc28>
   11cbc:	mov	r6, r3
   11cc0:	b	11a58 <strspn@plt+0xb8c>
   11cc4:	bl	10d04 <__stack_chk_fail@plt>
   11cc8:	andeq	r7, r2, r8, lsl #30
   11ccc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11cd0:	andeq	r6, r1, ip, asr sp
   11cd4:	andeq	r3, r1, r8, rrx
   11cd8:	andeq	r2, r1, r4, lsl #31
   11cdc:	andeq	r3, r1, ip, lsl r0
   11ce0:	ldr	r3, [pc, #4]	; 11cec <strspn@plt+0xe20>
   11ce4:	str	r0, [r3]
   11ce8:	bx	lr
   11cec:	andeq	r8, r2, ip, asr #2
   11cf0:	ldr	r3, [pc, #4]	; 11cfc <strspn@plt+0xe30>
   11cf4:	strb	r0, [r3, #4]
   11cf8:	bx	lr
   11cfc:	andeq	r8, r2, ip, asr #2
   11d00:	ldr	r3, [pc, #180]	; 11dbc <strspn@plt+0xef0>
   11d04:	push	{r4, r5, r6, lr}
   11d08:	sub	sp, sp, #8
   11d0c:	ldr	r0, [r3]
   11d10:	bl	15d20 <strspn@plt+0x4e54>
   11d14:	cmp	r0, #0
   11d18:	beq	11d40 <strspn@plt+0xe74>
   11d1c:	bl	10e00 <__errno_location@plt>
   11d20:	ldr	r5, [pc, #152]	; 11dc0 <strspn@plt+0xef4>
   11d24:	ldrb	r3, [r5, #4]
   11d28:	cmp	r3, #0
   11d2c:	mov	r4, r0
   11d30:	beq	11d5c <strspn@plt+0xe90>
   11d34:	ldr	r3, [r0]
   11d38:	cmp	r3, #32
   11d3c:	bne	11d5c <strspn@plt+0xe90>
   11d40:	ldr	r3, [pc, #124]	; 11dc4 <strspn@plt+0xef8>
   11d44:	ldr	r0, [r3]
   11d48:	bl	15d20 <strspn@plt+0x4e54>
   11d4c:	cmp	r0, #0
   11d50:	bne	11d9c <strspn@plt+0xed0>
   11d54:	add	sp, sp, #8
   11d58:	pop	{r4, r5, r6, pc}
   11d5c:	mov	r2, #5
   11d60:	ldr	r1, [pc, #96]	; 11dc8 <strspn@plt+0xefc>
   11d64:	mov	r0, #0
   11d68:	bl	10cf8 <dcgettext@plt>
   11d6c:	mov	r6, r0
   11d70:	ldr	r0, [r5]
   11d74:	cmp	r0, #0
   11d78:	beq	11da8 <strspn@plt+0xedc>
   11d7c:	ldr	r4, [r4]
   11d80:	bl	15108 <strspn@plt+0x423c>
   11d84:	mov	r1, r4
   11d88:	str	r6, [sp]
   11d8c:	ldr	r2, [pc, #56]	; 11dcc <strspn@plt+0xf00>
   11d90:	mov	r3, r0
   11d94:	mov	r0, #0
   11d98:	bl	10d88 <error@plt>
   11d9c:	ldr	r3, [pc, #44]	; 11dd0 <strspn@plt+0xf04>
   11da0:	ldr	r0, [r3]
   11da4:	bl	10cc8 <_exit@plt>
   11da8:	mov	r3, r6
   11dac:	ldr	r1, [r4]
   11db0:	ldr	r2, [pc, #28]	; 11dd4 <strspn@plt+0xf08>
   11db4:	bl	10d88 <error@plt>
   11db8:	b	11d9c <strspn@plt+0xed0>
   11dbc:	andeq	r8, r2, r4, asr #2
   11dc0:	andeq	r8, r2, ip, asr #2
   11dc4:	andeq	r8, r2, r0, asr #2
   11dc8:	andeq	r6, r1, r0, ror #26
   11dcc:	andeq	r6, r1, ip, ror #26
   11dd0:	andeq	r8, r2, r8, ror #1
   11dd4:	andeq	r6, r1, r0, ror sp
   11dd8:	push	{r4, r5, r6, r7, r8, lr}
   11ddc:	subs	r8, r0, #0
   11de0:	popeq	{r4, r5, r6, r7, r8, pc}
   11de4:	mov	r0, #24
   11de8:	mov	r4, r1
   11dec:	mov	r7, r2
   11df0:	bl	159e4 <strspn@plt+0x4b18>
   11df4:	mov	r6, r0
   11df8:	mov	r0, r4
   11dfc:	bl	15c10 <strspn@plt+0x4d44>
   11e00:	ldrd	r4, [r7, #96]	; 0x60
   11e04:	ldrd	r2, [r7]
   11e08:	mov	r1, r6
   11e0c:	strd	r4, [r6, #8]
   11e10:	strd	r2, [r6, #16]
   11e14:	str	r0, [r6]
   11e18:	mov	r0, r8
   11e1c:	bl	12e04 <strspn@plt+0x1f38>
   11e20:	cmp	r0, #0
   11e24:	beq	11e3c <strspn@plt+0xf70>
   11e28:	cmp	r6, r0
   11e2c:	popeq	{r4, r5, r6, r7, r8, pc}
   11e30:	mov	r0, r6
   11e34:	pop	{r4, r5, r6, r7, r8, lr}
   11e38:	b	13068 <strspn@plt+0x219c>
   11e3c:	bl	15c2c <strspn@plt+0x4d60>
   11e40:	push	{r4, r5, r6, lr}
   11e44:	sub	sp, sp, #32
   11e48:	ldr	r6, [pc, #80]	; 11ea0 <strspn@plt+0xfd4>
   11e4c:	subs	r3, r0, #0
   11e50:	moveq	r0, r3
   11e54:	ldr	ip, [r6]
   11e58:	str	ip, [sp, #28]
   11e5c:	beq	11e84 <strspn@plt+0xfb8>
   11e60:	ldrd	r4, [r2, #96]	; 0x60
   11e64:	ldrd	r2, [r2]
   11e68:	str	r1, [sp]
   11e6c:	mov	r1, sp
   11e70:	strd	r4, [sp, #8]
   11e74:	strd	r2, [sp, #16]
   11e78:	bl	12520 <strspn@plt+0x1654>
   11e7c:	adds	r0, r0, #0
   11e80:	movne	r0, #1
   11e84:	ldr	r2, [sp, #28]
   11e88:	ldr	r3, [r6]
   11e8c:	cmp	r2, r3
   11e90:	bne	11e9c <strspn@plt+0xfd0>
   11e94:	add	sp, sp, #32
   11e98:	pop	{r4, r5, r6, pc}
   11e9c:	bl	10d04 <__stack_chk_fail@plt>
   11ea0:	andeq	r7, r2, r8, lsl #30
   11ea4:	andeq	r0, r0, r0
   11ea8:	cmp	r0, #10
   11eac:	movcc	r0, #10
   11eb0:	push	{r4, r5, r6, r7, r8, lr}
   11eb4:	orr	r7, r0, #1
   11eb8:	cmn	r7, #1
   11ebc:	beq	11f34 <strspn@plt+0x1068>
   11ec0:	ldr	r8, [pc, #116]	; 11f3c <strspn@plt+0x1070>
   11ec4:	umull	r2, r3, r8, r7
   11ec8:	cmp	r7, #9
   11ecc:	lsr	r3, r3, #1
   11ed0:	add	r3, r3, r3, lsl #1
   11ed4:	sub	r3, r7, r3
   11ed8:	bls	11f20 <strspn@plt+0x1054>
   11edc:	cmp	r3, #0
   11ee0:	beq	11f28 <strspn@plt+0x105c>
   11ee4:	mov	r6, #16
   11ee8:	mov	r5, #9
   11eec:	mov	r4, #3
   11ef0:	b	11f00 <strspn@plt+0x1034>
   11ef4:	cmp	r1, #0
   11ef8:	add	r6, r6, #8
   11efc:	beq	11f28 <strspn@plt+0x105c>
   11f00:	add	r4, r4, #2
   11f04:	mov	r1, r4
   11f08:	mov	r0, r7
   11f0c:	bl	16350 <strspn@plt+0x5484>
   11f10:	add	r5, r5, r6
   11f14:	cmp	r5, r7
   11f18:	mov	r3, r1
   11f1c:	bcc	11ef4 <strspn@plt+0x1028>
   11f20:	cmp	r3, #0
   11f24:	bne	11f34 <strspn@plt+0x1068>
   11f28:	add	r7, r7, #2
   11f2c:	cmn	r7, #1
   11f30:	bne	11ec4 <strspn@plt+0xff8>
   11f34:	mov	r0, r7
   11f38:	pop	{r4, r5, r6, r7, r8, pc}
   11f3c:	bge	feabc9f0 <stdout@@GLIBC_2.4+0xfea948ac>
   11f40:	push	{r4, lr}
   11f44:	ror	r0, r0, #3
   11f48:	bl	16350 <strspn@plt+0x5484>
   11f4c:	mov	r0, r1
   11f50:	pop	{r4, pc}
   11f54:	sub	r0, r1, r0
   11f58:	clz	r0, r0
   11f5c:	lsr	r0, r0, #5
   11f60:	bx	lr
   11f64:	push	{r4, lr}
   11f68:	mov	r4, r0
   11f6c:	mov	r0, r1
   11f70:	ldr	r3, [r4, #24]
   11f74:	ldr	r1, [r4, #8]
   11f78:	blx	r3
   11f7c:	ldr	r3, [r4, #8]
   11f80:	cmp	r3, r0
   11f84:	bls	11f94 <strspn@plt+0x10c8>
   11f88:	ldr	r3, [r4]
   11f8c:	add	r0, r3, r0, lsl #3
   11f90:	pop	{r4, pc}
   11f94:	bl	10eb4 <abort@plt>
   11f98:	push	{r4, r5, r6, r7, r8, lr}
   11f9c:	mov	r8, r2
   11fa0:	mov	r5, r1
   11fa4:	mov	r7, r3
   11fa8:	mov	r6, r0
   11fac:	bl	11f64 <strspn@plt+0x1098>
   11fb0:	str	r0, [r8]
   11fb4:	ldr	r1, [r0]
   11fb8:	cmp	r1, #0
   11fbc:	beq	120a4 <strspn@plt+0x11d8>
   11fc0:	cmp	r1, r5
   11fc4:	mov	r4, r0
   11fc8:	beq	12068 <strspn@plt+0x119c>
   11fcc:	ldr	r3, [r6, #28]
   11fd0:	mov	r0, r5
   11fd4:	blx	r3
   11fd8:	cmp	r0, #0
   11fdc:	ldrne	r3, [r4]
   11fe0:	bne	1206c <strspn@plt+0x11a0>
   11fe4:	ldr	r2, [r4, #4]
   11fe8:	cmp	r2, #0
   11fec:	beq	120a4 <strspn@plt+0x11d8>
   11ff0:	ldr	r3, [r2]
   11ff4:	cmp	r5, r3
   11ff8:	bne	1201c <strspn@plt+0x1150>
   11ffc:	b	1203c <strspn@plt+0x1170>
   12000:	ldr	r4, [r4, #4]
   12004:	ldr	r2, [r4, #4]
   12008:	cmp	r2, #0
   1200c:	beq	120a4 <strspn@plt+0x11d8>
   12010:	ldr	r3, [r2]
   12014:	cmp	r3, r5
   12018:	beq	1203c <strspn@plt+0x1170>
   1201c:	mov	r1, r3
   12020:	mov	r0, r5
   12024:	ldr	r3, [r6, #28]
   12028:	blx	r3
   1202c:	cmp	r0, #0
   12030:	beq	12000 <strspn@plt+0x1134>
   12034:	ldr	r2, [r4, #4]
   12038:	ldr	r3, [r2]
   1203c:	cmp	r7, #0
   12040:	beq	1209c <strspn@plt+0x11d0>
   12044:	ldr	r0, [r2, #4]
   12048:	mov	r1, #0
   1204c:	str	r0, [r4, #4]
   12050:	str	r1, [r2]
   12054:	ldr	r1, [r6, #36]	; 0x24
   12058:	mov	r0, r3
   1205c:	str	r1, [r2, #4]
   12060:	str	r2, [r6, #36]	; 0x24
   12064:	pop	{r4, r5, r6, r7, r8, pc}
   12068:	mov	r3, r1
   1206c:	cmp	r7, #0
   12070:	beq	1209c <strspn@plt+0x11d0>
   12074:	ldr	r2, [r4, #4]
   12078:	cmp	r2, #0
   1207c:	movne	ip, #0
   12080:	ldmne	r2, {r0, r1}
   12084:	streq	r2, [r4]
   12088:	stmne	r4, {r0, r1}
   1208c:	strne	ip, [r2]
   12090:	ldrne	r1, [r6, #36]	; 0x24
   12094:	strne	r1, [r2, #4]
   12098:	strne	r2, [r6, #36]	; 0x24
   1209c:	mov	r0, r3
   120a0:	pop	{r4, r5, r6, r7, r8, pc}
   120a4:	mov	r3, #0
   120a8:	mov	r0, r3
   120ac:	pop	{r4, r5, r6, r7, r8, pc}
   120b0:	ldr	r2, [pc, #164]	; 1215c <strspn@plt+0x1290>
   120b4:	ldr	r3, [r0]
   120b8:	cmp	r3, r2
   120bc:	beq	12144 <strspn@plt+0x1278>
   120c0:	vldr	s15, [r3, #8]
   120c4:	vldr	s14, [pc, #128]	; 1214c <strspn@plt+0x1280>
   120c8:	vcmpe.f32	s15, s14
   120cc:	vmrs	APSR_nzcv, fpscr
   120d0:	ble	12138 <strspn@plt+0x126c>
   120d4:	vldr	s13, [pc, #116]	; 12150 <strspn@plt+0x1284>
   120d8:	vcmpe.f32	s15, s13
   120dc:	vmrs	APSR_nzcv, fpscr
   120e0:	bpl	12138 <strspn@plt+0x126c>
   120e4:	vldr	s13, [pc, #104]	; 12154 <strspn@plt+0x1288>
   120e8:	vldr	s12, [r3, #12]
   120ec:	vcmpe.f32	s12, s13
   120f0:	vmrs	APSR_nzcv, fpscr
   120f4:	ble	12138 <strspn@plt+0x126c>
   120f8:	vldr	s13, [r3]
   120fc:	vcmpe.f32	s13, #0.0
   12100:	vmrs	APSR_nzcv, fpscr
   12104:	blt	12138 <strspn@plt+0x126c>
   12108:	vadd.f32	s14, s13, s14
   1210c:	vldr	s13, [r3, #4]
   12110:	vcmpe.f32	s14, s13
   12114:	vmrs	APSR_nzcv, fpscr
   12118:	bpl	12138 <strspn@plt+0x126c>
   1211c:	vldr	s12, [pc, #52]	; 12158 <strspn@plt+0x128c>
   12120:	vcmpe.f32	s13, s12
   12124:	vmrs	APSR_nzcv, fpscr
   12128:	bhi	12138 <strspn@plt+0x126c>
   1212c:	vcmpe.f32	s15, s14
   12130:	vmrs	APSR_nzcv, fpscr
   12134:	bgt	12144 <strspn@plt+0x1278>
   12138:	str	r2, [r0]
   1213c:	mov	r0, #0
   12140:	bx	lr
   12144:	mov	r0, #1
   12148:	bx	lr
   1214c:	stclcc	12, cr12, [ip, #820]	; 0x334
   12150:	svccc	0x00666666
   12154:	svccc	0x008ccccd
   12158:	svccc	0x00800000
   1215c:	andeq	r6, r1, r4, ror sp
   12160:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12164:	ldr	r3, [r1, #4]
   12168:	ldr	r6, [r1]
   1216c:	cmp	r6, r3
   12170:	bcs	12238 <strspn@plt+0x136c>
   12174:	mov	r8, r2
   12178:	mov	r5, r0
   1217c:	mov	r7, r1
   12180:	add	r6, r6, #8
   12184:	mov	r9, #0
   12188:	b	12198 <strspn@plt+0x12cc>
   1218c:	cmp	r3, r6
   12190:	add	r6, r6, #8
   12194:	bls	12238 <strspn@plt+0x136c>
   12198:	ldr	sl, [r6, #-8]
   1219c:	cmp	sl, #0
   121a0:	beq	1218c <strspn@plt+0x12c0>
   121a4:	ldr	r4, [r6, #-4]
   121a8:	cmp	r4, #0
   121ac:	bne	121cc <strspn@plt+0x1300>
   121b0:	b	1221c <strspn@plt+0x1350>
   121b4:	ldr	r2, [r0, #4]
   121b8:	cmp	r3, #0
   121bc:	str	r2, [r4, #4]
   121c0:	str	r4, [r0, #4]
   121c4:	mov	r4, r3
   121c8:	beq	12218 <strspn@plt+0x134c>
   121cc:	ldr	sl, [r4]
   121d0:	mov	r0, r5
   121d4:	mov	r1, sl
   121d8:	bl	11f64 <strspn@plt+0x1098>
   121dc:	ldr	r3, [r4, #4]
   121e0:	ldr	r2, [r0]
   121e4:	cmp	r2, #0
   121e8:	bne	121b4 <strspn@plt+0x12e8>
   121ec:	ldr	r1, [r5, #12]
   121f0:	str	sl, [r0]
   121f4:	add	r1, r1, #1
   121f8:	str	r1, [r5, #12]
   121fc:	str	r2, [r4]
   12200:	ldr	r2, [r5, #36]	; 0x24
   12204:	cmp	r3, #0
   12208:	str	r2, [r4, #4]
   1220c:	str	r4, [r5, #36]	; 0x24
   12210:	mov	r4, r3
   12214:	bne	121cc <strspn@plt+0x1300>
   12218:	ldr	sl, [r6, #-8]
   1221c:	cmp	r8, #0
   12220:	str	r9, [r6, #-4]
   12224:	beq	12240 <strspn@plt+0x1374>
   12228:	ldr	r3, [r7, #4]
   1222c:	cmp	r3, r6
   12230:	add	r6, r6, #8
   12234:	bhi	12198 <strspn@plt+0x12cc>
   12238:	mov	r0, #1
   1223c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12240:	mov	r1, sl
   12244:	mov	r0, r5
   12248:	bl	11f64 <strspn@plt+0x1098>
   1224c:	ldr	r3, [r0]
   12250:	mov	r4, r0
   12254:	cmp	r3, #0
   12258:	beq	12298 <strspn@plt+0x13cc>
   1225c:	ldr	r0, [r5, #36]	; 0x24
   12260:	cmp	r0, #0
   12264:	beq	122ac <strspn@plt+0x13e0>
   12268:	ldr	r3, [r0, #4]
   1226c:	str	r3, [r5, #36]	; 0x24
   12270:	ldr	r3, [r4, #4]
   12274:	str	sl, [r0]
   12278:	str	r3, [r0, #4]
   1227c:	str	r0, [r4, #4]
   12280:	ldr	r2, [r7, #12]
   12284:	str	r9, [r6, #-8]
   12288:	sub	r2, r2, #1
   1228c:	ldr	r3, [r7, #4]
   12290:	str	r2, [r7, #12]
   12294:	b	1218c <strspn@plt+0x12c0>
   12298:	ldr	r3, [r5, #12]
   1229c:	str	sl, [r0]
   122a0:	add	r3, r3, #1
   122a4:	str	r3, [r5, #12]
   122a8:	b	12280 <strspn@plt+0x13b4>
   122ac:	mov	r0, #8
   122b0:	bl	10d94 <malloc@plt>
   122b4:	cmp	r0, #0
   122b8:	bne	12270 <strspn@plt+0x13a4>
   122bc:	mov	r0, r8
   122c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122c4:	ldr	r0, [r0, #8]
   122c8:	bx	lr
   122cc:	ldr	r0, [r0, #12]
   122d0:	bx	lr
   122d4:	ldr	r0, [r0, #16]
   122d8:	bx	lr
   122dc:	ldm	r0, {r1, r3}
   122e0:	cmp	r1, r3
   122e4:	bcs	1234c <strspn@plt+0x1480>
   122e8:	sub	ip, r3, #1
   122ec:	sub	ip, ip, r1
   122f0:	add	r3, r1, #16
   122f4:	bic	ip, ip, #7
   122f8:	add	ip, ip, r3
   122fc:	add	r1, r1, #8
   12300:	mov	r0, #0
   12304:	b	12314 <strspn@plt+0x1448>
   12308:	add	r1, r1, #8
   1230c:	cmp	r1, ip
   12310:	bxeq	lr
   12314:	ldr	r3, [r1, #-8]
   12318:	cmp	r3, #0
   1231c:	beq	12308 <strspn@plt+0x143c>
   12320:	ldr	r3, [r1, #-4]
   12324:	mov	r2, #1
   12328:	cmp	r3, #0
   1232c:	beq	12340 <strspn@plt+0x1474>
   12330:	ldr	r3, [r3, #4]
   12334:	add	r2, r2, #1
   12338:	cmp	r3, #0
   1233c:	bne	12330 <strspn@plt+0x1464>
   12340:	cmp	r0, r2
   12344:	movcc	r0, r2
   12348:	b	12308 <strspn@plt+0x143c>
   1234c:	mov	r0, #0
   12350:	bx	lr
   12354:	ldm	r0, {r1, r3}
   12358:	push	{lr}		; (str lr, [sp, #-4]!)
   1235c:	cmp	r1, r3
   12360:	bcs	123f0 <strspn@plt+0x1524>
   12364:	sub	ip, r3, #1
   12368:	sub	ip, ip, r1
   1236c:	add	r3, r1, #16
   12370:	bic	ip, ip, #7
   12374:	mov	r2, #0
   12378:	add	ip, ip, r3
   1237c:	add	r1, r1, #8
   12380:	mov	lr, r2
   12384:	b	12394 <strspn@plt+0x14c8>
   12388:	add	r1, r1, #8
   1238c:	cmp	r1, ip
   12390:	beq	123d0 <strspn@plt+0x1504>
   12394:	ldr	r3, [r1, #-8]
   12398:	cmp	r3, #0
   1239c:	beq	12388 <strspn@plt+0x14bc>
   123a0:	ldr	r3, [r1, #-4]
   123a4:	add	lr, lr, #1
   123a8:	cmp	r3, #0
   123ac:	add	r2, r2, #1
   123b0:	beq	12388 <strspn@plt+0x14bc>
   123b4:	ldr	r3, [r3, #4]
   123b8:	add	r2, r2, #1
   123bc:	cmp	r3, #0
   123c0:	bne	123b4 <strspn@plt+0x14e8>
   123c4:	add	r1, r1, #8
   123c8:	cmp	r1, ip
   123cc:	bne	12394 <strspn@plt+0x14c8>
   123d0:	ldr	r3, [r0, #12]
   123d4:	cmp	r3, lr
   123d8:	ldreq	r0, [r0, #16]
   123dc:	subeq	r0, r0, r2
   123e0:	clzeq	r0, r0
   123e4:	lsreq	r0, r0, #5
   123e8:	movne	r0, #0
   123ec:	pop	{pc}		; (ldr pc, [sp], #4)
   123f0:	mov	r2, #0
   123f4:	mov	lr, r2
   123f8:	b	123d0 <strspn@plt+0x1504>
   123fc:	push	{r4, r5, r6, r7, lr}
   12400:	mov	r4, r1
   12404:	ldr	r2, [r0]
   12408:	ldr	r1, [r0, #4]
   1240c:	sub	sp, sp, #12
   12410:	cmp	r2, r1
   12414:	ldr	r3, [r0, #16]
   12418:	ldrd	r6, [r0, #8]
   1241c:	bcs	12500 <strspn@plt+0x1634>
   12420:	sub	ip, r1, #1
   12424:	sub	ip, ip, r2
   12428:	bic	ip, ip, #7
   1242c:	add	r1, r2, #16
   12430:	add	ip, ip, r1
   12434:	add	r0, r2, #8
   12438:	mov	r5, #0
   1243c:	b	1244c <strspn@plt+0x1580>
   12440:	add	r0, r0, #8
   12444:	cmp	r0, ip
   12448:	beq	1248c <strspn@plt+0x15c0>
   1244c:	ldr	r2, [r0, #-8]
   12450:	cmp	r2, #0
   12454:	beq	12440 <strspn@plt+0x1574>
   12458:	ldr	r2, [r0, #-4]
   1245c:	mov	r1, #1
   12460:	cmp	r2, #0
   12464:	beq	12478 <strspn@plt+0x15ac>
   12468:	ldr	r2, [r2, #4]
   1246c:	add	r1, r1, #1
   12470:	cmp	r2, #0
   12474:	bne	12468 <strspn@plt+0x159c>
   12478:	cmp	r5, r1
   1247c:	add	r0, r0, #8
   12480:	movcc	r5, r1
   12484:	cmp	r0, ip
   12488:	bne	1244c <strspn@plt+0x1580>
   1248c:	ldr	r2, [pc, #124]	; 12510 <strspn@plt+0x1644>
   12490:	mov	r1, #1
   12494:	mov	r0, r4
   12498:	bl	10e3c <__fprintf_chk@plt>
   1249c:	mov	r3, r6
   124a0:	ldr	r2, [pc, #108]	; 12514 <strspn@plt+0x1648>
   124a4:	mov	r1, #1
   124a8:	mov	r0, r4
   124ac:	bl	10e3c <__fprintf_chk@plt>
   124b0:	vmov	s15, r7
   124b4:	vldr	d5, [pc, #76]	; 12508 <strspn@plt+0x163c>
   124b8:	mov	r3, r7
   124bc:	ldr	r2, [pc, #84]	; 12518 <strspn@plt+0x164c>
   124c0:	vcvt.f64.u32	d6, s15
   124c4:	vmov	s15, r6
   124c8:	mov	r1, #1
   124cc:	mov	r0, r4
   124d0:	vcvt.f64.u32	d7, s15
   124d4:	vmul.f64	d6, d6, d5
   124d8:	vdiv.f64	d5, d6, d7
   124dc:	vstr	d5, [sp]
   124e0:	bl	10e3c <__fprintf_chk@plt>
   124e4:	mov	r3, r5
   124e8:	mov	r0, r4
   124ec:	ldr	r2, [pc, #40]	; 1251c <strspn@plt+0x1650>
   124f0:	mov	r1, #1
   124f4:	add	sp, sp, #12
   124f8:	pop	{r4, r5, r6, r7, lr}
   124fc:	b	10e3c <__fprintf_chk@plt>
   12500:	mov	r5, #0
   12504:	b	1248c <strspn@plt+0x15c0>
   12508:	andeq	r0, r0, r0
   1250c:	subsmi	r0, r9, r0
   12510:	andeq	r6, r1, r8, lsl #27
   12514:	andeq	r6, r1, r0, lsr #27
   12518:			; <UNDEFINED> instruction: 0x00016db8
   1251c:	ldrdeq	r6, [r1], -ip
   12520:	push	{r4, r5, r6, lr}
   12524:	mov	r6, r0
   12528:	mov	r5, r1
   1252c:	bl	11f64 <strspn@plt+0x1098>
   12530:	ldr	r3, [r0]
   12534:	cmp	r3, #0
   12538:	beq	12574 <strspn@plt+0x16a8>
   1253c:	mov	r4, r0
   12540:	b	12548 <strspn@plt+0x167c>
   12544:	ldr	r3, [r4]
   12548:	cmp	r3, r5
   1254c:	mov	r1, r3
   12550:	mov	r0, r5
   12554:	beq	12580 <strspn@plt+0x16b4>
   12558:	ldr	r3, [r6, #28]
   1255c:	blx	r3
   12560:	cmp	r0, #0
   12564:	bne	1257c <strspn@plt+0x16b0>
   12568:	ldr	r4, [r4, #4]
   1256c:	cmp	r4, #0
   12570:	bne	12544 <strspn@plt+0x1678>
   12574:	mov	r0, #0
   12578:	pop	{r4, r5, r6, pc}
   1257c:	ldr	r5, [r4]
   12580:	mov	r0, r5
   12584:	pop	{r4, r5, r6, pc}
   12588:	ldr	r3, [r0, #16]
   1258c:	cmp	r3, #0
   12590:	beq	125e0 <strspn@plt+0x1714>
   12594:	ldr	r3, [r0]
   12598:	ldr	r2, [r0, #4]
   1259c:	cmp	r3, r2
   125a0:	bcs	125d8 <strspn@plt+0x170c>
   125a4:	ldr	r0, [r3]
   125a8:	cmp	r0, #0
   125ac:	bxne	lr
   125b0:	sub	r2, r2, #1
   125b4:	sub	r2, r2, r3
   125b8:	bic	r2, r2, #7
   125bc:	add	r2, r3, r2
   125c0:	b	125d0 <strspn@plt+0x1704>
   125c4:	ldr	r0, [r3, #8]!
   125c8:	cmp	r0, #0
   125cc:	bxne	lr
   125d0:	cmp	r3, r2
   125d4:	bne	125c4 <strspn@plt+0x16f8>
   125d8:	push	{r4, lr}
   125dc:	bl	10eb4 <abort@plt>
   125e0:	mov	r0, r3
   125e4:	bx	lr
   125e8:	push	{r4, r5, r6, lr}
   125ec:	mov	r5, r0
   125f0:	mov	r4, r1
   125f4:	bl	11f64 <strspn@plt+0x1098>
   125f8:	mov	r2, r0
   125fc:	mov	r3, r0
   12600:	b	1260c <strspn@plt+0x1740>
   12604:	cmp	r3, #0
   12608:	beq	12620 <strspn@plt+0x1754>
   1260c:	ldm	r3, {r1, r3}
   12610:	cmp	r1, r4
   12614:	bne	12604 <strspn@plt+0x1738>
   12618:	cmp	r3, #0
   1261c:	bne	12648 <strspn@plt+0x177c>
   12620:	ldr	r3, [r5, #4]
   12624:	b	12634 <strspn@plt+0x1768>
   12628:	ldr	r0, [r2]
   1262c:	cmp	r0, #0
   12630:	popne	{r4, r5, r6, pc}
   12634:	add	r2, r2, #8
   12638:	cmp	r3, r2
   1263c:	bhi	12628 <strspn@plt+0x175c>
   12640:	mov	r0, #0
   12644:	pop	{r4, r5, r6, pc}
   12648:	ldr	r0, [r3]
   1264c:	pop	{r4, r5, r6, pc}
   12650:	push	{r4, r5, lr}
   12654:	ldm	r0, {r5, lr}
   12658:	cmp	lr, r5
   1265c:	bls	126e0 <strspn@plt+0x1814>
   12660:	mov	ip, #0
   12664:	ldr	r3, [r5]
   12668:	cmp	r3, #0
   1266c:	bne	12688 <strspn@plt+0x17bc>
   12670:	add	r5, r5, #8
   12674:	cmp	lr, r5
   12678:	bhi	12664 <strspn@plt+0x1798>
   1267c:	mov	r2, ip
   12680:	mov	r0, r2
   12684:	pop	{r4, r5, pc}
   12688:	cmp	r2, ip
   1268c:	bls	1267c <strspn@plt+0x17b0>
   12690:	str	r3, [r1, ip, lsl #2]
   12694:	ldr	r3, [r5, #4]
   12698:	add	r4, ip, #1
   1269c:	cmp	r3, #0
   126a0:	add	lr, r1, ip, lsl #2
   126a4:	beq	126d4 <strspn@plt+0x1808>
   126a8:	mov	ip, r4
   126ac:	cmp	r2, ip
   126b0:	beq	12680 <strspn@plt+0x17b4>
   126b4:	ldr	r4, [r3]
   126b8:	add	ip, ip, #1
   126bc:	str	r4, [lr, #4]!
   126c0:	ldr	r3, [r3, #4]
   126c4:	cmp	r3, #0
   126c8:	bne	126ac <strspn@plt+0x17e0>
   126cc:	ldr	lr, [r0, #4]
   126d0:	b	12670 <strspn@plt+0x17a4>
   126d4:	ldr	lr, [r0, #4]
   126d8:	mov	ip, r4
   126dc:	b	12670 <strspn@plt+0x17a4>
   126e0:	mov	r2, #0
   126e4:	b	12680 <strspn@plt+0x17b4>
   126e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126ec:	ldr	r3, [r0, #4]
   126f0:	ldr	r8, [r0]
   126f4:	cmp	r3, r8
   126f8:	bls	12760 <strspn@plt+0x1894>
   126fc:	mov	r7, r2
   12700:	mov	r6, r1
   12704:	mov	r9, r0
   12708:	mov	r5, #0
   1270c:	ldr	r0, [r8]
   12710:	cmp	r0, #0
   12714:	bne	1272c <strspn@plt+0x1860>
   12718:	add	r8, r8, #8
   1271c:	cmp	r3, r8
   12720:	bhi	1270c <strspn@plt+0x1840>
   12724:	mov	r0, r5
   12728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1272c:	mov	r4, r8
   12730:	b	12738 <strspn@plt+0x186c>
   12734:	ldr	r0, [r4]
   12738:	mov	r1, r7
   1273c:	blx	r6
   12740:	cmp	r0, #0
   12744:	beq	12724 <strspn@plt+0x1858>
   12748:	ldr	r4, [r4, #4]
   1274c:	add	r5, r5, #1
   12750:	cmp	r4, #0
   12754:	bne	12734 <strspn@plt+0x1868>
   12758:	ldr	r3, [r9, #4]
   1275c:	b	12718 <strspn@plt+0x184c>
   12760:	mov	r5, #0
   12764:	b	12724 <strspn@plt+0x1858>
   12768:	push	{r4, r5, r6, lr}
   1276c:	mov	r4, r0
   12770:	ldrb	r0, [r0]
   12774:	cmp	r0, #0
   12778:	beq	127a8 <strspn@plt+0x18dc>
   1277c:	mov	r5, r1
   12780:	mov	r1, #0
   12784:	rsb	r1, r1, r1, lsl #5
   12788:	add	r0, r1, r0
   1278c:	mov	r1, r5
   12790:	bl	16350 <strspn@plt+0x5484>
   12794:	ldrb	r0, [r4, #1]!
   12798:	cmp	r0, #0
   1279c:	bne	12784 <strspn@plt+0x18b8>
   127a0:	mov	r0, r1
   127a4:	pop	{r4, r5, r6, pc}
   127a8:	mov	r1, r0
   127ac:	mov	r0, r1
   127b0:	pop	{r4, r5, r6, pc}
   127b4:	push	{lr}		; (str lr, [sp, #-4]!)
   127b8:	mov	ip, r0
   127bc:	ldr	lr, [pc, #16]	; 127d4 <strspn@plt+0x1908>
   127c0:	ldm	lr!, {r0, r1, r2, r3}
   127c4:	ldr	lr, [lr]
   127c8:	stmia	ip!, {r0, r1, r2, r3}
   127cc:	str	lr, [ip]
   127d0:	pop	{pc}		; (ldr pc, [sp], #4)
   127d4:	andeq	r6, r1, r4, ror sp
   127d8:	push	{r4, r5, r6, r7, r8, lr}
   127dc:	sub	sp, sp, #8
   127e0:	cmp	r2, #0
   127e4:	ldr	ip, [pc, #300]	; 12918 <strspn@plt+0x1a4c>
   127e8:	str	r0, [sp, #4]
   127ec:	ldr	r5, [pc, #296]	; 1291c <strspn@plt+0x1a50>
   127f0:	mov	r0, #40	; 0x28
   127f4:	movne	r5, r2
   127f8:	cmp	r3, #0
   127fc:	movne	r8, r3
   12800:	moveq	r8, ip
   12804:	mov	r6, r1
   12808:	bl	10d94 <malloc@plt>
   1280c:	subs	r4, r0, #0
   12810:	beq	128dc <strspn@plt+0x1a10>
   12814:	cmp	r6, #0
   12818:	add	r0, r4, #20
   1281c:	beq	128b8 <strspn@plt+0x19ec>
   12820:	str	r6, [r4, #20]
   12824:	bl	120b0 <strspn@plt+0x11e4>
   12828:	cmp	r0, #0
   1282c:	beq	128d0 <strspn@plt+0x1a04>
   12830:	ldrb	r3, [r6, #16]
   12834:	cmp	r3, #0
   12838:	vldreq	s13, [r6, #8]
   1283c:	beq	128e8 <strspn@plt+0x1a1c>
   12840:	ldr	r0, [sp, #4]
   12844:	bl	11ea8 <strspn@plt+0xfdc>
   12848:	lsrs	r3, r0, #30
   1284c:	movne	r7, #1
   12850:	moveq	r7, #0
   12854:	tst	r0, #536870912	; 0x20000000
   12858:	mov	r6, r0
   1285c:	bne	128d0 <strspn@plt+0x1a04>
   12860:	cmp	r7, #0
   12864:	bne	128d0 <strspn@plt+0x1a04>
   12868:	cmp	r0, #0
   1286c:	str	r0, [r4, #8]
   12870:	beq	128d0 <strspn@plt+0x1a04>
   12874:	mov	r1, #8
   12878:	bl	10c74 <calloc@plt>
   1287c:	cmp	r0, #0
   12880:	str	r0, [r4]
   12884:	beq	128d0 <strspn@plt+0x1a04>
   12888:	ldr	r3, [sp, #32]
   1288c:	add	r0, r0, r6, lsl #3
   12890:	str	r0, [r4, #4]
   12894:	str	r7, [r4, #12]
   12898:	mov	r0, r4
   1289c:	str	r7, [r4, #16]
   128a0:	str	r5, [r4, #24]
   128a4:	str	r8, [r4, #28]
   128a8:	str	r3, [r4, #32]
   128ac:	str	r7, [r4, #36]	; 0x24
   128b0:	add	sp, sp, #8
   128b4:	pop	{r4, r5, r6, r7, r8, pc}
   128b8:	ldr	r3, [pc, #96]	; 12920 <strspn@plt+0x1a54>
   128bc:	str	r3, [r4, #20]
   128c0:	bl	120b0 <strspn@plt+0x11e4>
   128c4:	cmp	r0, #0
   128c8:	vldrne	s13, [pc, #64]	; 12910 <strspn@plt+0x1a44>
   128cc:	bne	128e8 <strspn@plt+0x1a1c>
   128d0:	mov	r0, r4
   128d4:	bl	10cbc <free@plt>
   128d8:	mov	r4, #0
   128dc:	mov	r0, r4
   128e0:	add	sp, sp, #8
   128e4:	pop	{r4, r5, r6, r7, r8, pc}
   128e8:	vldr	s15, [sp, #4]
   128ec:	vldr	s14, [pc, #32]	; 12914 <strspn@plt+0x1a48>
   128f0:	vcvt.f32.u32	s12, s15
   128f4:	vdiv.f32	s15, s12, s13
   128f8:	vcmpe.f32	s15, s14
   128fc:	vmrs	APSR_nzcv, fpscr
   12900:	bge	128d0 <strspn@plt+0x1a04>
   12904:	vcvt.u32.f32	s15, s15
   12908:	vstr	s15, [sp, #4]
   1290c:	b	12840 <strspn@plt+0x1974>
   12910:	svccc	0x004ccccd
   12914:	svcmi	0x00800000
   12918:	andeq	r1, r1, r4, asr pc
   1291c:	andeq	r1, r1, r0, asr #30
   12920:	andeq	r6, r1, r4, ror sp
   12924:	push	{r4, r5, r6, r7, r8, lr}
   12928:	mov	r5, r0
   1292c:	ldr	r6, [r0]
   12930:	ldr	r2, [r0, #4]
   12934:	cmp	r6, r2
   12938:	addcc	r6, r6, #8
   1293c:	movcc	r7, #0
   12940:	bcc	12954 <strspn@plt+0x1a88>
   12944:	b	129c8 <strspn@plt+0x1afc>
   12948:	cmp	r2, r6
   1294c:	add	r6, r6, #8
   12950:	bls	129c8 <strspn@plt+0x1afc>
   12954:	ldr	r3, [r6, #-8]
   12958:	cmp	r3, #0
   1295c:	beq	12948 <strspn@plt+0x1a7c>
   12960:	ldr	r4, [r6, #-4]
   12964:	ldr	r2, [r5, #32]
   12968:	cmp	r4, #0
   1296c:	beq	129a0 <strspn@plt+0x1ad4>
   12970:	cmp	r2, #0
   12974:	beq	12984 <strspn@plt+0x1ab8>
   12978:	ldr	r0, [r4]
   1297c:	blx	r2
   12980:	ldr	r2, [r5, #32]
   12984:	ldr	r3, [r4, #4]
   12988:	ldr	r1, [r5, #36]	; 0x24
   1298c:	str	r7, [r4]
   12990:	str	r1, [r4, #4]
   12994:	str	r4, [r5, #36]	; 0x24
   12998:	subs	r4, r3, #0
   1299c:	bne	12970 <strspn@plt+0x1aa4>
   129a0:	cmp	r2, #0
   129a4:	beq	129b0 <strspn@plt+0x1ae4>
   129a8:	ldr	r0, [r6, #-8]
   129ac:	blx	r2
   129b0:	str	r7, [r6, #-8]
   129b4:	str	r7, [r6, #-4]
   129b8:	ldr	r2, [r5, #4]
   129bc:	cmp	r2, r6
   129c0:	add	r6, r6, #8
   129c4:	bhi	12954 <strspn@plt+0x1a88>
   129c8:	mov	r3, #0
   129cc:	str	r3, [r5, #12]
   129d0:	str	r3, [r5, #16]
   129d4:	pop	{r4, r5, r6, r7, r8, pc}
   129d8:	ldr	r3, [r0, #32]
   129dc:	push	{r4, r5, r6, lr}
   129e0:	cmp	r3, #0
   129e4:	mov	r6, r0
   129e8:	ldr	r5, [r0]
   129ec:	ldr	r3, [r0, #4]
   129f0:	beq	12a58 <strspn@plt+0x1b8c>
   129f4:	ldr	r2, [r0, #16]
   129f8:	cmp	r2, #0
   129fc:	beq	12a58 <strspn@plt+0x1b8c>
   12a00:	cmp	r5, r3
   12a04:	bcc	12a18 <strspn@plt+0x1b4c>
   12a08:	b	12a8c <strspn@plt+0x1bc0>
   12a0c:	add	r5, r5, #8
   12a10:	cmp	r3, r5
   12a14:	bls	12a54 <strspn@plt+0x1b88>
   12a18:	ldr	r0, [r5]
   12a1c:	cmp	r0, #0
   12a20:	beq	12a0c <strspn@plt+0x1b40>
   12a24:	mov	r4, r5
   12a28:	b	12a30 <strspn@plt+0x1b64>
   12a2c:	ldr	r0, [r4]
   12a30:	ldr	r3, [r6, #32]
   12a34:	blx	r3
   12a38:	ldr	r4, [r4, #4]
   12a3c:	cmp	r4, #0
   12a40:	bne	12a2c <strspn@plt+0x1b60>
   12a44:	ldr	r3, [r6, #4]
   12a48:	add	r5, r5, #8
   12a4c:	cmp	r3, r5
   12a50:	bhi	12a18 <strspn@plt+0x1b4c>
   12a54:	ldr	r5, [r6]
   12a58:	cmp	r5, r3
   12a5c:	bcs	12a8c <strspn@plt+0x1bc0>
   12a60:	ldr	r0, [r5, #4]
   12a64:	cmp	r0, #0
   12a68:	beq	12a80 <strspn@plt+0x1bb4>
   12a6c:	ldr	r4, [r0, #4]
   12a70:	bl	10cbc <free@plt>
   12a74:	subs	r0, r4, #0
   12a78:	bne	12a6c <strspn@plt+0x1ba0>
   12a7c:	ldr	r3, [r6, #4]
   12a80:	add	r5, r5, #8
   12a84:	cmp	r3, r5
   12a88:	bhi	12a60 <strspn@plt+0x1b94>
   12a8c:	ldr	r0, [r6, #36]	; 0x24
   12a90:	cmp	r0, #0
   12a94:	beq	12aa8 <strspn@plt+0x1bdc>
   12a98:	ldr	r4, [r0, #4]
   12a9c:	bl	10cbc <free@plt>
   12aa0:	subs	r0, r4, #0
   12aa4:	bne	12a98 <strspn@plt+0x1bcc>
   12aa8:	ldr	r0, [r6]
   12aac:	bl	10cbc <free@plt>
   12ab0:	mov	r0, r6
   12ab4:	pop	{r4, r5, r6, lr}
   12ab8:	b	10cbc <free@plt>
   12abc:	push	{r4, r5, r6, r7, r8, lr}
   12ac0:	sub	sp, sp, #56	; 0x38
   12ac4:	ldr	r8, [r0, #20]
   12ac8:	ldr	r7, [pc, #392]	; 12c58 <strspn@plt+0x1d8c>
   12acc:	mov	r6, r0
   12ad0:	ldrb	r3, [r8, #16]
   12ad4:	ldr	r2, [r7]
   12ad8:	str	r1, [sp, #4]
   12adc:	cmp	r3, #0
   12ae0:	str	r2, [sp, #52]	; 0x34
   12ae4:	bne	12b10 <strspn@plt+0x1c44>
   12ae8:	vmov	s15, r1
   12aec:	vldr	s13, [r8, #8]
   12af0:	vldr	s14, [pc, #348]	; 12c54 <strspn@plt+0x1d88>
   12af4:	vcvt.f32.u32	s12, s15
   12af8:	vdiv.f32	s15, s12, s13
   12afc:	vcmpe.f32	s15, s14
   12b00:	vmrs	APSR_nzcv, fpscr
   12b04:	vcvtlt.u32.f32	s15, s15
   12b08:	vstrlt	s15, [sp, #4]
   12b0c:	bge	12b40 <strspn@plt+0x1c74>
   12b10:	ldr	r0, [sp, #4]
   12b14:	bl	11ea8 <strspn@plt+0xfdc>
   12b18:	lsrs	r3, r0, #30
   12b1c:	movne	r4, #1
   12b20:	moveq	r4, #0
   12b24:	tst	r0, #536870912	; 0x20000000
   12b28:	movne	r4, #1
   12b2c:	cmp	r0, #0
   12b30:	moveq	r4, #1
   12b34:	cmp	r4, #0
   12b38:	mov	r5, r0
   12b3c:	beq	12b60 <strspn@plt+0x1c94>
   12b40:	mov	r4, #0
   12b44:	ldr	r2, [sp, #52]	; 0x34
   12b48:	ldr	r3, [r7]
   12b4c:	mov	r0, r4
   12b50:	cmp	r2, r3
   12b54:	bne	12c4c <strspn@plt+0x1d80>
   12b58:	add	sp, sp, #56	; 0x38
   12b5c:	pop	{r4, r5, r6, r7, r8, pc}
   12b60:	ldr	r3, [r6, #8]
   12b64:	cmp	r3, r0
   12b68:	beq	12c14 <strspn@plt+0x1d48>
   12b6c:	mov	r1, #8
   12b70:	bl	10c74 <calloc@plt>
   12b74:	cmp	r0, #0
   12b78:	str	r0, [sp, #12]
   12b7c:	beq	12b40 <strspn@plt+0x1c74>
   12b80:	add	r0, r0, r5, lsl #3
   12b84:	ldr	r1, [r6, #32]
   12b88:	str	r0, [sp, #16]
   12b8c:	ldr	r0, [r6, #28]
   12b90:	ldr	ip, [r6, #24]
   12b94:	ldr	r3, [r6, #36]	; 0x24
   12b98:	mov	r2, r4
   12b9c:	str	r0, [sp, #40]	; 0x28
   12ba0:	str	r1, [sp, #44]	; 0x2c
   12ba4:	add	r0, sp, #12
   12ba8:	mov	r1, r6
   12bac:	str	r4, [sp, #24]
   12bb0:	str	r4, [sp, #28]
   12bb4:	str	r5, [sp, #20]
   12bb8:	str	r8, [sp, #32]
   12bbc:	str	ip, [sp, #36]	; 0x24
   12bc0:	str	r3, [sp, #48]	; 0x30
   12bc4:	bl	12160 <strspn@plt+0x1294>
   12bc8:	subs	r4, r0, #0
   12bcc:	bne	12c1c <strspn@plt+0x1d50>
   12bd0:	ldr	r3, [sp, #48]	; 0x30
   12bd4:	mov	r2, #1
   12bd8:	str	r3, [r6, #36]	; 0x24
   12bdc:	add	r1, sp, #12
   12be0:	mov	r0, r6
   12be4:	bl	12160 <strspn@plt+0x1294>
   12be8:	cmp	r0, #0
   12bec:	beq	12c50 <strspn@plt+0x1d84>
   12bf0:	add	r1, sp, #12
   12bf4:	mov	r0, r6
   12bf8:	mov	r2, r4
   12bfc:	bl	12160 <strspn@plt+0x1294>
   12c00:	cmp	r0, #0
   12c04:	beq	12c50 <strspn@plt+0x1d84>
   12c08:	ldr	r0, [sp, #12]
   12c0c:	bl	10cbc <free@plt>
   12c10:	b	12b44 <strspn@plt+0x1c78>
   12c14:	mov	r4, #1
   12c18:	b	12b44 <strspn@plt+0x1c78>
   12c1c:	ldr	r0, [r6]
   12c20:	bl	10cbc <free@plt>
   12c24:	ldrd	r2, [sp, #12]
   12c28:	ldr	r1, [sp, #20]
   12c2c:	str	r2, [r6]
   12c30:	str	r3, [r6, #4]
   12c34:	ldr	r2, [sp, #24]
   12c38:	ldr	r3, [sp, #48]	; 0x30
   12c3c:	str	r1, [r6, #8]
   12c40:	str	r2, [r6, #12]
   12c44:	str	r3, [r6, #36]	; 0x24
   12c48:	b	12b44 <strspn@plt+0x1c78>
   12c4c:	bl	10d04 <__stack_chk_fail@plt>
   12c50:	bl	10eb4 <abort@plt>
   12c54:	svcmi	0x00800000
   12c58:	andeq	r7, r2, r8, lsl #30
   12c5c:	push	{r4, r5, r6, r7, lr}
   12c60:	sub	sp, sp, #12
   12c64:	ldr	r6, [pc, #404]	; 12e00 <strspn@plt+0x1f34>
   12c68:	subs	r7, r1, #0
   12c6c:	ldr	r3, [r6]
   12c70:	str	r3, [sp, #4]
   12c74:	beq	12df4 <strspn@plt+0x1f28>
   12c78:	mov	r5, r2
   12c7c:	mov	r3, #0
   12c80:	mov	r2, sp
   12c84:	mov	r4, r0
   12c88:	bl	11f98 <strspn@plt+0x10cc>
   12c8c:	cmp	r0, #0
   12c90:	beq	12cbc <strspn@plt+0x1df0>
   12c94:	cmp	r5, #0
   12c98:	moveq	r0, r5
   12c9c:	strne	r0, [r5]
   12ca0:	movne	r0, #0
   12ca4:	ldr	r2, [sp, #4]
   12ca8:	ldr	r3, [r6]
   12cac:	cmp	r2, r3
   12cb0:	bne	12df8 <strspn@plt+0x1f2c>
   12cb4:	add	sp, sp, #12
   12cb8:	pop	{r4, r5, r6, r7, pc}
   12cbc:	vldr	s15, [r4, #8]
   12cc0:	ldr	r3, [r4, #20]
   12cc4:	vldr	s14, [r4, #12]
   12cc8:	vcvt.f32.u32	s15, s15
   12ccc:	vldr	s13, [r3, #8]
   12cd0:	vcvt.f32.u32	s14, s14
   12cd4:	vmul.f32	s15, s15, s13
   12cd8:	vcmpe.f32	s14, s15
   12cdc:	vmrs	APSR_nzcv, fpscr
   12ce0:	bgt	12d2c <strspn@plt+0x1e60>
   12ce4:	ldr	r5, [sp]
   12ce8:	ldr	r3, [r5]
   12cec:	cmp	r3, #0
   12cf0:	beq	12d88 <strspn@plt+0x1ebc>
   12cf4:	ldr	r0, [r4, #36]	; 0x24
   12cf8:	cmp	r0, #0
   12cfc:	beq	12dac <strspn@plt+0x1ee0>
   12d00:	ldr	r3, [r0, #4]
   12d04:	str	r3, [r4, #36]	; 0x24
   12d08:	ldr	r3, [r4, #16]
   12d0c:	ldr	r2, [r5, #4]
   12d10:	add	r3, r3, #1
   12d14:	str	r7, [r0]
   12d18:	str	r2, [r0, #4]
   12d1c:	str	r0, [r5, #4]
   12d20:	mov	r0, #1
   12d24:	str	r3, [r4, #16]
   12d28:	b	12ca4 <strspn@plt+0x1dd8>
   12d2c:	add	r0, r4, #20
   12d30:	bl	120b0 <strspn@plt+0x11e4>
   12d34:	vldr	s15, [r4, #8]
   12d38:	ldr	r3, [r4, #20]
   12d3c:	vldr	s14, [r4, #12]
   12d40:	vcvt.f32.u32	s15, s15
   12d44:	vldr	s13, [r3, #8]
   12d48:	vcvt.f32.u32	s14, s14
   12d4c:	vmul.f32	s12, s13, s15
   12d50:	vcmpe.f32	s14, s12
   12d54:	vmrs	APSR_nzcv, fpscr
   12d58:	ble	12ce4 <strspn@plt+0x1e18>
   12d5c:	vldr	s14, [r3, #12]
   12d60:	ldrb	r3, [r3, #16]
   12d64:	vmul.f32	s15, s15, s14
   12d68:	cmp	r3, #0
   12d6c:	vldr	s14, [pc, #136]	; 12dfc <strspn@plt+0x1f30>
   12d70:	vmuleq.f32	s15, s15, s13
   12d74:	vcmpe.f32	s15, s14
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	blt	12dc0 <strspn@plt+0x1ef4>
   12d80:	mvn	r0, #0
   12d84:	b	12ca4 <strspn@plt+0x1dd8>
   12d88:	ldr	r2, [r4, #16]
   12d8c:	ldr	r3, [r4, #12]
   12d90:	add	r2, r2, #1
   12d94:	add	r3, r3, #1
   12d98:	str	r7, [r5]
   12d9c:	mov	r0, #1
   12da0:	str	r2, [r4, #16]
   12da4:	str	r3, [r4, #12]
   12da8:	b	12ca4 <strspn@plt+0x1dd8>
   12dac:	mov	r0, #8
   12db0:	bl	10d94 <malloc@plt>
   12db4:	cmp	r0, #0
   12db8:	beq	12d80 <strspn@plt+0x1eb4>
   12dbc:	b	12d08 <strspn@plt+0x1e3c>
   12dc0:	vcvt.u32.f32	s15, s15
   12dc4:	mov	r0, r4
   12dc8:	vmov	r1, s15
   12dcc:	bl	12abc <strspn@plt+0x1bf0>
   12dd0:	cmp	r0, #0
   12dd4:	beq	12d80 <strspn@plt+0x1eb4>
   12dd8:	mov	r2, sp
   12ddc:	mov	r3, #0
   12de0:	mov	r1, r7
   12de4:	mov	r0, r4
   12de8:	bl	11f98 <strspn@plt+0x10cc>
   12dec:	cmp	r0, #0
   12df0:	beq	12ce4 <strspn@plt+0x1e18>
   12df4:	bl	10eb4 <abort@plt>
   12df8:	bl	10d04 <__stack_chk_fail@plt>
   12dfc:	svcmi	0x00800000
   12e00:	andeq	r7, r2, r8, lsl #30
   12e04:	push	{r4, r5, lr}
   12e08:	sub	sp, sp, #12
   12e0c:	ldr	r5, [pc, #68]	; 12e58 <strspn@plt+0x1f8c>
   12e10:	mov	r2, sp
   12e14:	mov	r4, r1
   12e18:	ldr	r3, [r5]
   12e1c:	str	r3, [sp, #4]
   12e20:	bl	12c5c <strspn@plt+0x1d90>
   12e24:	cmn	r0, #1
   12e28:	moveq	r0, #0
   12e2c:	beq	12e3c <strspn@plt+0x1f70>
   12e30:	cmp	r0, #0
   12e34:	movne	r0, r4
   12e38:	ldreq	r0, [sp]
   12e3c:	ldr	r2, [sp, #4]
   12e40:	ldr	r3, [r5]
   12e44:	cmp	r2, r3
   12e48:	bne	12e54 <strspn@plt+0x1f88>
   12e4c:	add	sp, sp, #12
   12e50:	pop	{r4, r5, pc}
   12e54:	bl	10d04 <__stack_chk_fail@plt>
   12e58:	andeq	r7, r2, r8, lsl #30
   12e5c:	push	{r4, r5, r6, r7, lr}
   12e60:	sub	sp, sp, #12
   12e64:	ldr	r5, [pc, #276]	; 12f80 <strspn@plt+0x20b4>
   12e68:	mov	r3, #1
   12e6c:	mov	r2, sp
   12e70:	ldr	ip, [r5]
   12e74:	mov	r4, r0
   12e78:	str	ip, [sp, #4]
   12e7c:	bl	11f98 <strspn@plt+0x10cc>
   12e80:	subs	r6, r0, #0
   12e84:	beq	12ea4 <strspn@plt+0x1fd8>
   12e88:	ldr	r2, [sp]
   12e8c:	ldr	r3, [r4, #16]
   12e90:	ldr	r2, [r2]
   12e94:	sub	r3, r3, #1
   12e98:	cmp	r2, #0
   12e9c:	str	r3, [r4, #16]
   12ea0:	beq	12ec0 <strspn@plt+0x1ff4>
   12ea4:	ldr	r2, [sp, #4]
   12ea8:	ldr	r3, [r5]
   12eac:	mov	r0, r6
   12eb0:	cmp	r2, r3
   12eb4:	bne	12f7c <strspn@plt+0x20b0>
   12eb8:	add	sp, sp, #12
   12ebc:	pop	{r4, r5, r6, r7, pc}
   12ec0:	vldr	s15, [r4, #8]
   12ec4:	ldr	r3, [r4, #12]
   12ec8:	ldr	r2, [r4, #20]
   12ecc:	sub	r3, r3, #1
   12ed0:	vcvt.f32.u32	s14, s15
   12ed4:	vldr	s13, [r2]
   12ed8:	vmov	s15, r3
   12edc:	str	r3, [r4, #12]
   12ee0:	vcvt.f32.u32	s15, s15
   12ee4:	vmul.f32	s14, s14, s13
   12ee8:	vcmpe.f32	s15, s14
   12eec:	vmrs	APSR_nzcv, fpscr
   12ef0:	bpl	12ea4 <strspn@plt+0x1fd8>
   12ef4:	add	r0, r4, #20
   12ef8:	bl	120b0 <strspn@plt+0x11e4>
   12efc:	vldr	s15, [r4, #8]
   12f00:	ldr	r3, [r4, #20]
   12f04:	vldr	s13, [r4, #12]
   12f08:	vcvt.f32.u32	s15, s15
   12f0c:	vldr	s14, [r3]
   12f10:	vcvt.f32.u32	s13, s13
   12f14:	vmul.f32	s14, s15, s14
   12f18:	vcmpe.f32	s13, s14
   12f1c:	vmrs	APSR_nzcv, fpscr
   12f20:	bpl	12ea4 <strspn@plt+0x1fd8>
   12f24:	vldr	s14, [r3, #4]
   12f28:	ldrb	r2, [r3, #16]
   12f2c:	mov	r0, r4
   12f30:	vmul.f32	s15, s15, s14
   12f34:	cmp	r2, #0
   12f38:	vldreq	s14, [r3, #8]
   12f3c:	vmuleq.f32	s15, s15, s14
   12f40:	vcvt.u32.f32	s15, s15
   12f44:	vmov	r1, s15
   12f48:	bl	12abc <strspn@plt+0x1bf0>
   12f4c:	cmp	r0, #0
   12f50:	bne	12ea4 <strspn@plt+0x1fd8>
   12f54:	ldr	r0, [r4, #36]	; 0x24
   12f58:	cmp	r0, #0
   12f5c:	beq	12f70 <strspn@plt+0x20a4>
   12f60:	ldr	r7, [r0, #4]
   12f64:	bl	10cbc <free@plt>
   12f68:	subs	r0, r7, #0
   12f6c:	bne	12f60 <strspn@plt+0x2094>
   12f70:	mov	r3, #0
   12f74:	str	r3, [r4, #36]	; 0x24
   12f78:	b	12ea4 <strspn@plt+0x1fd8>
   12f7c:	bl	10d04 <__stack_chk_fail@plt>
   12f80:	andeq	r7, r2, r8, lsl #30
   12f84:	push	{r4, r5, r6, lr}
   12f88:	mov	r4, r0
   12f8c:	ldr	r0, [r0]
   12f90:	mov	r5, r1
   12f94:	bl	15f54 <strspn@plt+0x5088>
   12f98:	ldr	ip, [r4, #8]
   12f9c:	mov	r2, r5
   12fa0:	ldr	r1, [r4, #12]
   12fa4:	mov	r3, #0
   12fa8:	eor	r0, r0, ip
   12fac:	bl	16370 <strspn@plt+0x54a4>
   12fb0:	mov	r0, r2
   12fb4:	pop	{r4, r5, r6, pc}
   12fb8:	push	{r4, lr}
   12fbc:	mov	r2, r1
   12fc0:	mov	r3, #0
   12fc4:	ldrd	r0, [r0, #8]
   12fc8:	bl	16370 <strspn@plt+0x54a4>
   12fcc:	mov	r0, r2
   12fd0:	pop	{r4, pc}
   12fd4:	ldrd	r2, [r1, #8]
   12fd8:	push	{r4, r5}
   12fdc:	ldrd	r4, [r0, #8]
   12fe0:	cmp	r5, r3
   12fe4:	cmpeq	r4, r2
   12fe8:	beq	12ff8 <strspn@plt+0x212c>
   12fec:	mov	r0, #0
   12ff0:	pop	{r4, r5}
   12ff4:	bx	lr
   12ff8:	ldrd	r4, [r0, #16]
   12ffc:	ldrd	r2, [r1, #16]
   13000:	cmp	r5, r3
   13004:	cmpeq	r4, r2
   13008:	bne	12fec <strspn@plt+0x2120>
   1300c:	ldr	r1, [r1]
   13010:	ldr	r0, [r0]
   13014:	pop	{r4, r5}
   13018:	b	15478 <strspn@plt+0x45ac>
   1301c:	ldrd	r2, [r1, #8]
   13020:	push	{r4, r5, r6, lr}
   13024:	ldrd	r4, [r0, #8]
   13028:	cmp	r5, r3
   1302c:	cmpeq	r4, r2
   13030:	beq	1303c <strspn@plt+0x2170>
   13034:	mov	r0, #0
   13038:	pop	{r4, r5, r6, pc}
   1303c:	ldrd	r4, [r0, #16]
   13040:	ldrd	r2, [r1, #16]
   13044:	cmp	r5, r3
   13048:	cmpeq	r4, r2
   1304c:	bne	13034 <strspn@plt+0x2168>
   13050:	ldr	r1, [r1]
   13054:	ldr	r0, [r0]
   13058:	bl	10c98 <strcmp@plt>
   1305c:	clz	r0, r0
   13060:	lsr	r0, r0, #5
   13064:	pop	{r4, r5, r6, pc}
   13068:	push	{r4, lr}
   1306c:	mov	r4, r0
   13070:	ldr	r0, [r0]
   13074:	bl	10cbc <free@plt>
   13078:	mov	r0, r4
   1307c:	pop	{r4, lr}
   13080:	b	10cbc <free@plt>
   13084:	push	{r4, r5, r6, lr}
   13088:	subs	r4, r0, #0
   1308c:	beq	13100 <strspn@plt+0x2234>
   13090:	mov	r1, #47	; 0x2f
   13094:	bl	10e78 <strrchr@plt>
   13098:	subs	r5, r0, #0
   1309c:	beq	130ec <strspn@plt+0x2220>
   130a0:	add	r6, r5, #1
   130a4:	sub	r3, r6, r4
   130a8:	cmp	r3, #6
   130ac:	ble	130ec <strspn@plt+0x2220>
   130b0:	mov	r2, #7
   130b4:	ldr	r1, [pc, #96]	; 1311c <strspn@plt+0x2250>
   130b8:	sub	r0, r5, #6
   130bc:	bl	10ea8 <strncmp@plt>
   130c0:	cmp	r0, #0
   130c4:	bne	130ec <strspn@plt+0x2220>
   130c8:	mov	r2, #3
   130cc:	ldr	r1, [pc, #76]	; 13120 <strspn@plt+0x2254>
   130d0:	mov	r0, r6
   130d4:	bl	10ea8 <strncmp@plt>
   130d8:	cmp	r0, #0
   130dc:	movne	r4, r6
   130e0:	ldreq	r3, [pc, #60]	; 13124 <strspn@plt+0x2258>
   130e4:	addeq	r4, r5, #4
   130e8:	streq	r4, [r3]
   130ec:	ldr	r2, [pc, #52]	; 13128 <strspn@plt+0x225c>
   130f0:	ldr	r3, [pc, #52]	; 1312c <strspn@plt+0x2260>
   130f4:	str	r4, [r2]
   130f8:	str	r4, [r3]
   130fc:	pop	{r4, r5, r6, pc}
   13100:	ldr	r3, [pc, #40]	; 13130 <strspn@plt+0x2264>
   13104:	mov	r2, #55	; 0x37
   13108:	mov	r1, #1
   1310c:	ldr	r3, [r3]
   13110:	ldr	r0, [pc, #28]	; 13134 <strspn@plt+0x2268>
   13114:	bl	10d4c <fwrite@plt>
   13118:	bl	10eb4 <abort@plt>
   1311c:	andeq	r6, r1, ip, lsr #28
   13120:	andeq	r6, r1, r4, lsr lr
   13124:	andeq	r8, r2, r0, lsr r1
   13128:	andeq	r8, r2, r4, asr r1
   1312c:	andeq	r8, r2, r4, lsr r1
   13130:	andeq	r8, r2, r0, asr #2
   13134:	strdeq	r6, [r1], -r4
   13138:	push	{r4, lr}
   1313c:	mov	r2, #48	; 0x30
   13140:	mov	r4, r1
   13144:	mov	r1, #0
   13148:	bl	10e18 <memset@plt>
   1314c:	cmp	r4, #10
   13150:	beq	1315c <strspn@plt+0x2290>
   13154:	str	r4, [r0]
   13158:	pop	{r4, pc}
   1315c:	bl	10eb4 <abort@plt>
   13160:	push	{r4, r5, r6, lr}
   13164:	mov	r2, #5
   13168:	mov	r5, r0
   1316c:	mov	r6, r1
   13170:	mov	r1, r0
   13174:	mov	r0, #0
   13178:	bl	10cf8 <dcgettext@plt>
   1317c:	cmp	r5, r0
   13180:	mov	r4, r0
   13184:	beq	13190 <strspn@plt+0x22c4>
   13188:	mov	r0, r4
   1318c:	pop	{r4, r5, r6, pc}
   13190:	bl	15f90 <strspn@plt+0x50c4>
   13194:	ldrb	r3, [r0]
   13198:	bic	r3, r3, #32
   1319c:	cmp	r3, #85	; 0x55
   131a0:	bne	13200 <strspn@plt+0x2334>
   131a4:	ldrb	r3, [r0, #1]
   131a8:	bic	r3, r3, #32
   131ac:	cmp	r3, #84	; 0x54
   131b0:	bne	13278 <strspn@plt+0x23ac>
   131b4:	ldrb	r3, [r0, #2]
   131b8:	bic	r3, r3, #32
   131bc:	cmp	r3, #70	; 0x46
   131c0:	bne	13278 <strspn@plt+0x23ac>
   131c4:	ldrb	r3, [r0, #3]
   131c8:	cmp	r3, #45	; 0x2d
   131cc:	bne	13278 <strspn@plt+0x23ac>
   131d0:	ldrb	r3, [r0, #4]
   131d4:	cmp	r3, #56	; 0x38
   131d8:	bne	13278 <strspn@plt+0x23ac>
   131dc:	ldrb	r3, [r0, #5]
   131e0:	cmp	r3, #0
   131e4:	bne	13278 <strspn@plt+0x23ac>
   131e8:	ldrb	r2, [r4]
   131ec:	ldr	r3, [pc, #156]	; 13290 <strspn@plt+0x23c4>
   131f0:	ldr	r4, [pc, #156]	; 13294 <strspn@plt+0x23c8>
   131f4:	cmp	r2, #96	; 0x60
   131f8:	movne	r4, r3
   131fc:	b	13188 <strspn@plt+0x22bc>
   13200:	cmp	r3, #71	; 0x47
   13204:	bne	13278 <strspn@plt+0x23ac>
   13208:	ldrb	r3, [r0, #1]
   1320c:	bic	r3, r3, #32
   13210:	cmp	r3, #66	; 0x42
   13214:	bne	13278 <strspn@plt+0x23ac>
   13218:	ldrb	r3, [r0, #2]
   1321c:	cmp	r3, #49	; 0x31
   13220:	bne	13278 <strspn@plt+0x23ac>
   13224:	ldrb	r3, [r0, #3]
   13228:	cmp	r3, #56	; 0x38
   1322c:	bne	13278 <strspn@plt+0x23ac>
   13230:	ldrb	r3, [r0, #4]
   13234:	cmp	r3, #48	; 0x30
   13238:	bne	13278 <strspn@plt+0x23ac>
   1323c:	ldrb	r3, [r0, #5]
   13240:	cmp	r3, #51	; 0x33
   13244:	bne	13278 <strspn@plt+0x23ac>
   13248:	ldrb	r3, [r0, #6]
   1324c:	cmp	r3, #48	; 0x30
   13250:	bne	13278 <strspn@plt+0x23ac>
   13254:	ldrb	r3, [r0, #7]
   13258:	cmp	r3, #0
   1325c:	bne	13278 <strspn@plt+0x23ac>
   13260:	ldrb	r2, [r4]
   13264:	ldr	r3, [pc, #44]	; 13298 <strspn@plt+0x23cc>
   13268:	ldr	r4, [pc, #44]	; 1329c <strspn@plt+0x23d0>
   1326c:	cmp	r2, #96	; 0x60
   13270:	movne	r4, r3
   13274:	b	13188 <strspn@plt+0x22bc>
   13278:	ldr	r3, [pc, #32]	; 132a0 <strspn@plt+0x23d4>
   1327c:	ldr	r4, [pc, #32]	; 132a4 <strspn@plt+0x23d8>
   13280:	cmp	r6, #9
   13284:	movne	r4, r3
   13288:	mov	r0, r4
   1328c:	pop	{r4, r5, r6, pc}
   13290:	muleq	r1, r0, lr
   13294:	muleq	r1, ip, lr
   13298:	muleq	r1, r4, lr
   1329c:	muleq	r1, r8, lr
   132a0:	andeq	r6, r1, r0, lsr #29
   132a4:	andeq	r6, r1, ip, lsl #29
   132a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132ac:	sub	sp, sp, #124	; 0x7c
   132b0:	ldr	ip, [pc, #3576]	; 140b0 <strspn@plt+0x31e4>
   132b4:	str	r3, [sp, #24]
   132b8:	ldr	r3, [sp, #168]	; 0xa8
   132bc:	ldr	ip, [ip]
   132c0:	str	r3, [sp, #56]	; 0x38
   132c4:	ldr	r3, [sp, #172]	; 0xac
   132c8:	ldr	r8, [sp, #160]	; 0xa0
   132cc:	str	r3, [sp, #80]	; 0x50
   132d0:	ldr	r3, [sp, #176]	; 0xb0
   132d4:	mov	fp, r0
   132d8:	str	r3, [sp, #76]	; 0x4c
   132dc:	mov	sl, r1
   132e0:	str	r2, [sp, #36]	; 0x24
   132e4:	str	ip, [sp, #116]	; 0x74
   132e8:	bl	10d64 <__ctype_get_mb_cur_max@plt>
   132ec:	ldr	r3, [sp, #164]	; 0xa4
   132f0:	ands	r4, r3, #2
   132f4:	movne	r3, #1
   132f8:	moveq	r3, #0
   132fc:	str	r3, [sp, #32]
   13300:	str	r0, [sp, #64]	; 0x40
   13304:	cmp	r8, #10
   13308:	ldrls	pc, [pc, r8, lsl #2]
   1330c:	b	14abc <strspn@plt+0x3bf0>
   13310:	andeq	r3, r1, r4, lsl #14
   13314:	muleq	r1, ip, r7
   13318:	muleq	r1, ip, sp
   1331c:			; <UNDEFINED> instruction: 0x000137bc
   13320:	andeq	r3, r1, r0, ror r6
   13324:			; <UNDEFINED> instruction: 0x000136b8
   13328:	andeq	r3, r1, r4, lsr r7
   1332c:	andeq	r3, r1, ip, ror #14
   13330:	andeq	r3, r1, ip, lsr r3
   13334:	andeq	r3, r1, ip, lsr r3
   13338:	andeq	r3, r1, ip, lsr r3
   1333c:	cmp	r8, #10
   13340:	beq	13364 <strspn@plt+0x2498>
   13344:	mov	r1, r8
   13348:	ldr	r0, [pc, #3428]	; 140b4 <strspn@plt+0x31e8>
   1334c:	bl	13160 <strspn@plt+0x2294>
   13350:	mov	r1, r8
   13354:	str	r0, [sp, #80]	; 0x50
   13358:	ldr	r0, [pc, #3420]	; 140bc <strspn@plt+0x31f0>
   1335c:	bl	13160 <strspn@plt+0x2294>
   13360:	str	r0, [sp, #76]	; 0x4c
   13364:	cmp	r4, #0
   13368:	movne	r4, #0
   1336c:	beq	1477c <strspn@plt+0x38b0>
   13370:	ldr	r7, [sp, #76]	; 0x4c
   13374:	mov	r5, #0
   13378:	mov	r6, #1
   1337c:	mov	r0, r7
   13380:	str	r6, [sp, #40]	; 0x28
   13384:	str	r5, [sp, #68]	; 0x44
   13388:	bl	10df4 <strlen@plt>
   1338c:	str	r6, [sp, #28]
   13390:	str	r5, [sp, #44]	; 0x2c
   13394:	str	r5, [sp, #72]	; 0x48
   13398:	str	r7, [sp, #60]	; 0x3c
   1339c:	str	r0, [sp, #52]	; 0x34
   133a0:	str	r8, [sp, #160]	; 0xa0
   133a4:	mov	r8, fp
   133a8:	ldr	fp, [sp, #160]	; 0xa0
   133ac:	mov	r9, #0
   133b0:	ldr	r3, [sp, #24]
   133b4:	cmn	r3, #1
   133b8:	beq	13920 <strspn@plt+0x2a54>
   133bc:	ldr	r3, [sp, #24]
   133c0:	subs	r6, r3, r9
   133c4:	movne	r6, #1
   133c8:	cmp	r6, #0
   133cc:	beq	13938 <strspn@plt+0x2a6c>
   133d0:	ldr	r7, [sp, #28]
   133d4:	ldr	r0, [sp, #36]	; 0x24
   133d8:	cmp	fp, #2
   133dc:	moveq	r7, #0
   133e0:	andne	r7, r7, #1
   133e4:	add	r3, r0, r9
   133e8:	cmp	r7, #0
   133ec:	str	r3, [sp, #48]	; 0x30
   133f0:	beq	13ddc <strspn@plt+0x2f10>
   133f4:	ldr	r2, [sp, #52]	; 0x34
   133f8:	cmp	r2, #0
   133fc:	beq	140c0 <strspn@plt+0x31f4>
   13400:	ldr	r1, [sp, #24]
   13404:	cmp	r2, #1
   13408:	mov	r3, r2
   1340c:	movls	r3, #0
   13410:	movhi	r3, #1
   13414:	cmn	r1, #1
   13418:	movne	r3, #0
   1341c:	cmp	r3, #0
   13420:	add	r5, r9, r2
   13424:	beq	13430 <strspn@plt+0x2564>
   13428:	bl	10df4 <strlen@plt>
   1342c:	str	r0, [sp, #24]
   13430:	ldr	r3, [sp, #24]
   13434:	cmp	r5, r3
   13438:	bhi	140c0 <strspn@plt+0x31f4>
   1343c:	ldr	r2, [sp, #52]	; 0x34
   13440:	ldr	r1, [sp, #60]	; 0x3c
   13444:	ldr	r0, [sp, #48]	; 0x30
   13448:	bl	10cec <memcmp@plt>
   1344c:	cmp	r0, #0
   13450:	bne	140c0 <strspn@plt+0x31f4>
   13454:	ldr	r3, [sp, #32]
   13458:	cmp	r3, #0
   1345c:	bne	1497c <strspn@plt+0x3ab0>
   13460:	ldr	r3, [sp, #48]	; 0x30
   13464:	ldrb	r5, [r3]
   13468:	cmp	r5, #126	; 0x7e
   1346c:	ldrls	pc, [pc, r5, lsl #2]
   13470:	b	13d40 <strspn@plt+0x2e74>
   13474:	andeq	r3, r1, ip, lsr #24
   13478:	andeq	r3, r1, r0, asr #26
   1347c:	andeq	r3, r1, r0, asr #26
   13480:	andeq	r3, r1, r0, asr #26
   13484:	andeq	r3, r1, r0, asr #26
   13488:	andeq	r3, r1, r0, asr #26
   1348c:	andeq	r3, r1, r0, asr #26
   13490:	strdeq	r3, [r1], -r8
   13494:	andeq	r3, r1, r8, ror #25
   13498:	andeq	r3, r1, r8, ror #23
   1349c:			; <UNDEFINED> instruction: 0x00013bb0
   134a0:	andeq	r3, r1, r8, lsl #24
   134a4:	strdeq	r3, [r1], -r0
   134a8:	andeq	r3, r1, r0, lsr #22
   134ac:	andeq	r3, r1, r0, asr #26
   134b0:	andeq	r3, r1, r0, asr #26
   134b4:	andeq	r3, r1, r0, asr #26
   134b8:	andeq	r3, r1, r0, asr #26
   134bc:	andeq	r3, r1, r0, asr #26
   134c0:	andeq	r3, r1, r0, asr #26
   134c4:	andeq	r3, r1, r0, asr #26
   134c8:	andeq	r3, r1, r0, asr #26
   134cc:	andeq	r3, r1, r0, asr #26
   134d0:	andeq	r3, r1, r0, asr #26
   134d4:	andeq	r3, r1, r0, asr #26
   134d8:	andeq	r3, r1, r0, asr #26
   134dc:	andeq	r3, r1, r0, asr #26
   134e0:	andeq	r3, r1, r0, asr #26
   134e4:	andeq	r3, r1, r0, asr #26
   134e8:	andeq	r3, r1, r0, asr #26
   134ec:	andeq	r3, r1, r0, asr #26
   134f0:	andeq	r3, r1, r0, asr #26
   134f4:	andeq	r3, r1, r0, lsl #26
   134f8:	andeq	r3, r1, r4, lsl ip
   134fc:	andeq	r3, r1, r4, lsl ip
   13500:	andeq	r3, r1, r8, lsl sp
   13504:	andeq	r3, r1, r4, lsl ip
   13508:	andeq	r3, r1, r4, lsr sp
   1350c:	andeq	r3, r1, r4, lsl ip
   13510:	andeq	r3, r1, r4, asr sl
   13514:	andeq	r3, r1, r4, lsl ip
   13518:	andeq	r3, r1, r4, lsl ip
   1351c:	andeq	r3, r1, r4, lsl ip
   13520:	andeq	r3, r1, r4, lsr sp
   13524:	andeq	r3, r1, r4, lsr sp
   13528:	andeq	r3, r1, r4, lsr sp
   1352c:	andeq	r3, r1, r4, lsr sp
   13530:	andeq	r3, r1, r4, lsr sp
   13534:	andeq	r3, r1, r4, lsr sp
   13538:	andeq	r3, r1, r4, lsr sp
   1353c:	andeq	r3, r1, r4, lsr sp
   13540:	andeq	r3, r1, r4, lsr sp
   13544:	andeq	r3, r1, r4, lsr sp
   13548:	andeq	r3, r1, r4, lsr sp
   1354c:	andeq	r3, r1, r4, lsr sp
   13550:	andeq	r3, r1, r4, lsr sp
   13554:	andeq	r3, r1, r4, lsr sp
   13558:	andeq	r3, r1, r4, lsr sp
   1355c:	andeq	r3, r1, r4, lsr sp
   13560:	andeq	r3, r1, r4, lsl ip
   13564:	andeq	r3, r1, r4, lsl ip
   13568:	andeq	r3, r1, r4, lsl ip
   1356c:	andeq	r3, r1, r4, lsl ip
   13570:	andeq	r3, r1, r8, lsr #20
   13574:	andeq	r3, r1, r0, asr #26
   13578:	andeq	r3, r1, r4, lsr sp
   1357c:	andeq	r3, r1, r4, lsr sp
   13580:	andeq	r3, r1, r4, lsr sp
   13584:	andeq	r3, r1, r4, lsr sp
   13588:	andeq	r3, r1, r4, lsr sp
   1358c:	andeq	r3, r1, r4, lsr sp
   13590:	andeq	r3, r1, r4, lsr sp
   13594:	andeq	r3, r1, r4, lsr sp
   13598:	andeq	r3, r1, r4, lsr sp
   1359c:	andeq	r3, r1, r4, lsr sp
   135a0:	andeq	r3, r1, r4, lsr sp
   135a4:	andeq	r3, r1, r4, lsr sp
   135a8:	andeq	r3, r1, r4, lsr sp
   135ac:	andeq	r3, r1, r4, lsr sp
   135b0:	andeq	r3, r1, r4, lsr sp
   135b4:	andeq	r3, r1, r4, lsr sp
   135b8:	andeq	r3, r1, r4, lsr sp
   135bc:	andeq	r3, r1, r4, lsr sp
   135c0:	andeq	r3, r1, r4, lsr sp
   135c4:	andeq	r3, r1, r4, lsr sp
   135c8:	andeq	r3, r1, r4, lsr sp
   135cc:	andeq	r3, r1, r4, lsr sp
   135d0:	andeq	r3, r1, r4, lsr sp
   135d4:	andeq	r3, r1, r4, lsr sp
   135d8:	andeq	r3, r1, r4, lsr sp
   135dc:	andeq	r3, r1, r4, lsr sp
   135e0:	andeq	r3, r1, r4, lsl ip
   135e4:	andeq	r3, r1, r0, ror #19
   135e8:	andeq	r3, r1, r4, lsr sp
   135ec:	andeq	r3, r1, r4, lsl ip
   135f0:	andeq	r3, r1, r4, lsr sp
   135f4:	andeq	r3, r1, r4, lsl ip
   135f8:	andeq	r3, r1, r4, lsr sp
   135fc:	andeq	r3, r1, r4, lsr sp
   13600:	andeq	r3, r1, r4, lsr sp
   13604:	andeq	r3, r1, r4, lsr sp
   13608:	andeq	r3, r1, r4, lsr sp
   1360c:	andeq	r3, r1, r4, lsr sp
   13610:	andeq	r3, r1, r4, lsr sp
   13614:	andeq	r3, r1, r4, lsr sp
   13618:	andeq	r3, r1, r4, lsr sp
   1361c:	andeq	r3, r1, r4, lsr sp
   13620:	andeq	r3, r1, r4, lsr sp
   13624:	andeq	r3, r1, r4, lsr sp
   13628:	andeq	r3, r1, r4, lsr sp
   1362c:	andeq	r3, r1, r4, lsr sp
   13630:	andeq	r3, r1, r4, lsr sp
   13634:	andeq	r3, r1, r4, lsr sp
   13638:	andeq	r3, r1, r4, lsr sp
   1363c:	andeq	r3, r1, r4, lsr sp
   13640:	andeq	r3, r1, r4, lsr sp
   13644:	andeq	r3, r1, r4, lsr sp
   13648:	andeq	r3, r1, r4, lsr sp
   1364c:	andeq	r3, r1, r4, lsr sp
   13650:	andeq	r3, r1, r4, lsr sp
   13654:	andeq	r3, r1, r4, lsr sp
   13658:	andeq	r3, r1, r4, lsr sp
   1365c:	andeq	r3, r1, r4, lsr sp
   13660:	strdeq	r3, [r1], -r8
   13664:	andeq	r3, r1, r4, lsl ip
   13668:	strdeq	r3, [r1], -r8
   1366c:	andeq	r3, r1, r8, lsl sp
   13670:	cmp	r4, #0
   13674:	moveq	r3, #1
   13678:	streq	r3, [sp, #28]
   1367c:	beq	13da8 <strspn@plt+0x2edc>
   13680:	mov	r3, #0
   13684:	mov	r4, r3
   13688:	mov	r2, #1
   1368c:	str	r2, [sp, #40]	; 0x28
   13690:	str	r3, [sp, #68]	; 0x44
   13694:	str	r2, [sp, #32]
   13698:	str	r2, [sp, #52]	; 0x34
   1369c:	ldr	r3, [pc, #2584]	; 140bc <strspn@plt+0x31f0>
   136a0:	str	r4, [sp, #44]	; 0x2c
   136a4:	str	r4, [sp, #72]	; 0x48
   136a8:	str	r4, [sp, #28]
   136ac:	str	r3, [sp, #60]	; 0x3c
   136b0:	mov	r8, #2
   136b4:	b	133a0 <strspn@plt+0x24d4>
   136b8:	cmp	r4, #0
   136bc:	bne	14948 <strspn@plt+0x3a7c>
   136c0:	cmp	sl, #0
   136c4:	beq	14708 <strspn@plt+0x383c>
   136c8:	mov	r3, #34	; 0x22
   136cc:	strb	r3, [fp]
   136d0:	ldr	r3, [pc, #2528]	; 140b8 <strspn@plt+0x31ec>
   136d4:	mov	r1, r4
   136d8:	mov	r2, #1
   136dc:	str	r4, [sp, #68]	; 0x44
   136e0:	str	r2, [sp, #40]	; 0x28
   136e4:	mov	r4, r2
   136e8:	str	r1, [sp, #44]	; 0x2c
   136ec:	str	r1, [sp, #72]	; 0x48
   136f0:	str	r1, [sp, #32]
   136f4:	str	r2, [sp, #28]
   136f8:	str	r2, [sp, #52]	; 0x34
   136fc:	str	r3, [sp, #60]	; 0x3c
   13700:	b	133a0 <strspn@plt+0x24d4>
   13704:	mov	r3, #0
   13708:	str	r3, [sp, #68]	; 0x44
   1370c:	str	r3, [sp, #44]	; 0x2c
   13710:	str	r3, [sp, #32]
   13714:	str	r3, [sp, #28]
   13718:	str	r3, [sp, #60]	; 0x3c
   1371c:	mov	r3, #1
   13720:	str	r8, [sp, #72]	; 0x48
   13724:	str	r8, [sp, #52]	; 0x34
   13728:	mov	r4, r8
   1372c:	str	r3, [sp, #40]	; 0x28
   13730:	b	133a0 <strspn@plt+0x24d4>
   13734:	mov	r3, #1
   13738:	str	r3, [sp, #40]	; 0x28
   1373c:	str	r3, [sp, #32]
   13740:	str	r3, [sp, #28]
   13744:	str	r3, [sp, #52]	; 0x34
   13748:	ldr	r3, [pc, #2408]	; 140b8 <strspn@plt+0x31ec>
   1374c:	mov	r2, #0
   13750:	mov	r4, r2
   13754:	str	r2, [sp, #68]	; 0x44
   13758:	str	r2, [sp, #44]	; 0x2c
   1375c:	str	r2, [sp, #72]	; 0x48
   13760:	str	r3, [sp, #60]	; 0x3c
   13764:	mov	r8, #5
   13768:	b	133a0 <strspn@plt+0x24d4>
   1376c:	mov	r3, #0
   13770:	mov	r2, #1
   13774:	str	r2, [sp, #40]	; 0x28
   13778:	mov	r4, r3
   1377c:	str	r3, [sp, #68]	; 0x44
   13780:	str	r2, [sp, #28]
   13784:	str	r3, [sp, #44]	; 0x2c
   13788:	str	r3, [sp, #72]	; 0x48
   1378c:	str	r3, [sp, #32]
   13790:	str	r3, [sp, #52]	; 0x34
   13794:	str	r3, [sp, #60]	; 0x3c
   13798:	b	133a0 <strspn@plt+0x24d4>
   1379c:	mov	r2, #1
   137a0:	mov	r3, #0
   137a4:	str	r2, [sp, #40]	; 0x28
   137a8:	mov	r4, r3
   137ac:	str	r3, [sp, #68]	; 0x44
   137b0:	str	r8, [sp, #52]	; 0x34
   137b4:	str	r2, [sp, #32]
   137b8:	b	1369c <strspn@plt+0x27d0>
   137bc:	mov	r3, #1
   137c0:	str	r3, [sp, #40]	; 0x28
   137c4:	str	r3, [sp, #32]
   137c8:	str	r3, [sp, #28]
   137cc:	str	r3, [sp, #52]	; 0x34
   137d0:	ldr	r3, [pc, #2276]	; 140bc <strspn@plt+0x31f0>
   137d4:	mov	r2, #0
   137d8:	mov	r4, r2
   137dc:	str	r2, [sp, #68]	; 0x44
   137e0:	str	r2, [sp, #44]	; 0x2c
   137e4:	str	r2, [sp, #72]	; 0x48
   137e8:	str	r3, [sp, #60]	; 0x3c
   137ec:	mov	r8, #2
   137f0:	b	133a0 <strspn@plt+0x24d4>
   137f4:	mov	r7, #0
   137f8:	ldr	r3, [sp, #24]
   137fc:	cmn	r3, #1
   13800:	beq	1433c <strspn@plt+0x3470>
   13804:	ldr	r3, [sp, #24]
   13808:	subs	r3, r3, #1
   1380c:	movne	r3, #1
   13810:	cmp	r3, #0
   13814:	sub	r2, fp, #2
   13818:	clz	r2, r2
   1381c:	lsr	r2, r2, #5
   13820:	bne	13a1c <strspn@plt+0x2b50>
   13824:	cmp	r9, #0
   13828:	bne	13a1c <strspn@plt+0x2b50>
   1382c:	ldr	r3, [sp, #32]
   13830:	tst	r3, r2
   13834:	bne	13b3c <strspn@plt+0x2c70>
   13838:	ldr	r3, [sp, #28]
   1383c:	eor	r3, r3, #1
   13840:	orr	r3, r2, r3
   13844:	ldr	r2, [sp, #32]
   13848:	eor	r3, r3, #1
   1384c:	orrs	r3, r2, r3
   13850:	beq	13880 <strspn@plt+0x29b4>
   13854:	mov	r3, #0
   13858:	ldr	r1, [sp, #56]	; 0x38
   1385c:	cmp	r1, #0
   13860:	beq	13880 <strspn@plt+0x29b4>
   13864:	lsr	r2, r5, #5
   13868:	and	r0, r5, #31
   1386c:	uxtb	r2, r2
   13870:	ldr	r1, [r1, r2, lsl #2]
   13874:	lsr	r2, r1, r0
   13878:	tst	r2, #1
   1387c:	bne	13888 <strspn@plt+0x29bc>
   13880:	cmp	r7, #0
   13884:	beq	13ad8 <strspn@plt+0x2c0c>
   13888:	sub	r2, fp, #2
   1388c:	clz	r2, r2
   13890:	lsr	r2, r2, #5
   13894:	ldr	r3, [sp, #32]
   13898:	cmp	r3, #0
   1389c:	bne	13bc8 <strspn@plt+0x2cfc>
   138a0:	ldr	r3, [sp, #44]	; 0x2c
   138a4:	eor	r3, r3, #1
   138a8:	ands	r3, r2, r3
   138ac:	beq	138e4 <strspn@plt+0x2a18>
   138b0:	cmp	sl, r4
   138b4:	movhi	r2, #39	; 0x27
   138b8:	strbhi	r2, [r8, r4]
   138bc:	add	r2, r4, #1
   138c0:	cmp	r2, sl
   138c4:	movcc	r1, #36	; 0x24
   138c8:	strbcc	r1, [r8, r2]
   138cc:	add	r2, r4, #2
   138d0:	cmp	r2, sl
   138d4:	add	r4, r4, #3
   138d8:	movcc	r1, #39	; 0x27
   138dc:	strbcc	r1, [r8, r2]
   138e0:	str	r3, [sp, #44]	; 0x2c
   138e4:	cmp	r4, sl
   138e8:	movcc	r3, #92	; 0x5c
   138ec:	strbcc	r3, [r8, r4]
   138f0:	add	r9, r9, #1
   138f4:	add	r4, r4, #1
   138f8:	cmp	r4, sl
   138fc:	ldr	r3, [sp, #40]	; 0x28
   13900:	strbcc	r5, [r8, r4]
   13904:	cmp	r6, #0
   13908:	moveq	r3, #0
   1390c:	str	r3, [sp, #40]	; 0x28
   13910:	ldr	r3, [sp, #24]
   13914:	add	r4, r4, #1
   13918:	cmn	r3, #1
   1391c:	bne	133bc <strspn@plt+0x24f0>
   13920:	ldr	r3, [sp, #36]	; 0x24
   13924:	ldrb	r6, [r3, r9]
   13928:	adds	r6, r6, #0
   1392c:	movne	r6, #1
   13930:	cmp	r6, #0
   13934:	bne	133d0 <strspn@plt+0x2504>
   13938:	str	fp, [sp, #160]	; 0xa0
   1393c:	mov	fp, r8
   13940:	ldr	r8, [sp, #160]	; 0xa0
   13944:	ldr	r1, [sp, #32]
   13948:	cmp	r4, #0
   1394c:	sub	r2, r8, #2
   13950:	clz	r2, r2
   13954:	lsr	r2, r2, #5
   13958:	andeq	r3, r2, r1
   1395c:	movne	r3, #0
   13960:	cmp	r3, #0
   13964:	bne	14a50 <strspn@plt+0x3b84>
   13968:	eor	r3, r1, #1
   1396c:	ands	r2, r2, r3
   13970:	beq	1498c <strspn@plt+0x3ac0>
   13974:	ldr	r3, [sp, #68]	; 0x44
   13978:	cmp	r3, #0
   1397c:	beq	14990 <strspn@plt+0x3ac4>
   13980:	ldr	r3, [sp, #40]	; 0x28
   13984:	cmp	r3, #0
   13988:	bne	14a0c <strspn@plt+0x3b40>
   1398c:	ldr	r3, [sp, #72]	; 0x48
   13990:	adds	r3, r3, #0
   13994:	movne	r3, #1
   13998:	cmp	sl, #0
   1399c:	movne	r3, #0
   139a0:	cmp	r3, #0
   139a4:	ldreq	r2, [sp, #68]	; 0x44
   139a8:	beq	14990 <strspn@plt+0x3ac4>
   139ac:	ldr	sl, [sp, #72]	; 0x48
   139b0:	str	r3, [sp, #68]	; 0x44
   139b4:	ldr	r3, [pc, #1792]	; 140bc <strspn@plt+0x31f0>
   139b8:	mov	r2, #39	; 0x27
   139bc:	mov	r4, #1
   139c0:	str	r3, [sp, #60]	; 0x3c
   139c4:	mov	r3, #0
   139c8:	strb	r2, [fp]
   139cc:	str	r4, [sp, #52]	; 0x34
   139d0:	mov	r8, #2
   139d4:	str	r3, [sp, #32]
   139d8:	b	133a0 <strspn@plt+0x24d4>
   139dc:	mov	r7, #0
   139e0:	cmp	fp, #2
   139e4:	beq	1431c <strspn@plt+0x3450>
   139e8:	ldr	r3, [sp, #52]	; 0x34
   139ec:	ldr	r2, [sp, #28]
   139f0:	ldr	r1, [sp, #32]
   139f4:	cmp	r3, #0
   139f8:	andne	r2, r2, r1
   139fc:	moveq	r2, #0
   13a00:	cmp	r2, #0
   13a04:	moveq	r5, #92	; 0x5c
   13a08:	moveq	r3, r5
   13a0c:	bne	14328 <strspn@plt+0x345c>
   13a10:	ldr	r1, [sp, #28]
   13a14:	cmp	r1, #0
   13a18:	bne	14a98 <strspn@plt+0x3bcc>
   13a1c:	mov	r6, #0
   13a20:	b	13838 <strspn@plt+0x296c>
   13a24:	mov	r7, #0
   13a28:	cmp	fp, #2
   13a2c:	beq	1438c <strspn@plt+0x34c0>
   13a30:	cmp	fp, #5
   13a34:	beq	14350 <strspn@plt+0x3484>
   13a38:	sub	r2, fp, #2
   13a3c:	mov	r6, #0
   13a40:	clz	r2, r2
   13a44:	mov	r5, #63	; 0x3f
   13a48:	lsr	r2, r2, #5
   13a4c:	b	13838 <strspn@plt+0x296c>
   13a50:	mov	r7, #0
   13a54:	cmp	fp, #2
   13a58:	strne	r6, [sp, #68]	; 0x44
   13a5c:	movne	r2, #0
   13a60:	movne	r5, #39	; 0x27
   13a64:	bne	13838 <strspn@plt+0x296c>
   13a68:	ldr	r3, [sp, #32]
   13a6c:	cmp	r3, #0
   13a70:	bne	1476c <strspn@plt+0x38a0>
   13a74:	cmp	sl, #0
   13a78:	ldr	r3, [sp, #72]	; 0x48
   13a7c:	clz	r3, r3
   13a80:	lsr	r3, r3, #5
   13a84:	moveq	r3, #0
   13a88:	cmp	r3, #0
   13a8c:	bne	146a0 <strspn@plt+0x37d4>
   13a90:	cmp	sl, r4
   13a94:	movhi	r3, #39	; 0x27
   13a98:	strbhi	r3, [r8, r4]
   13a9c:	add	r3, r4, #1
   13aa0:	cmp	sl, r3
   13aa4:	movhi	r2, #92	; 0x5c
   13aa8:	strbhi	r2, [r8, r3]
   13aac:	add	r3, r4, #2
   13ab0:	cmp	sl, r3
   13ab4:	movhi	r2, #39	; 0x27
   13ab8:	strbhi	r2, [r8, r3]
   13abc:	mov	r3, #0
   13ac0:	cmp	r7, #0
   13ac4:	add	r4, r4, #3
   13ac8:	str	r3, [sp, #44]	; 0x2c
   13acc:	str	r6, [sp, #68]	; 0x44
   13ad0:	mov	r5, #39	; 0x27
   13ad4:	bne	13888 <strspn@plt+0x29bc>
   13ad8:	ldr	r2, [sp, #44]	; 0x2c
   13adc:	eor	r3, r3, #1
   13ae0:	and	r3, r3, r2
   13ae4:	add	r9, r9, #1
   13ae8:	uxtb	r3, r3
   13aec:	cmp	r3, #0
   13af0:	beq	138f8 <strspn@plt+0x2a2c>
   13af4:	cmp	sl, r4
   13af8:	movhi	r3, #39	; 0x27
   13afc:	strbhi	r3, [r8, r4]
   13b00:	add	r3, r4, #1
   13b04:	cmp	sl, r3
   13b08:	movhi	r2, #39	; 0x27
   13b0c:	strbhi	r2, [r8, r3]
   13b10:	mov	r3, #0
   13b14:	add	r4, r4, #2
   13b18:	str	r3, [sp, #44]	; 0x2c
   13b1c:	b	138f8 <strspn@plt+0x2a2c>
   13b20:	mov	r3, #114	; 0x72
   13b24:	ldr	r1, [sp, #32]
   13b28:	sub	r2, fp, #2
   13b2c:	clz	r2, r2
   13b30:	lsr	r2, r2, #5
   13b34:	tst	r2, r1
   13b38:	beq	13a10 <strspn@plt+0x2b44>
   13b3c:	mov	fp, r8
   13b40:	mov	r8, #2
   13b44:	ldr	r3, [sp, #28]
   13b48:	cmp	r3, #0
   13b4c:	movne	r8, #4
   13b50:	ldr	r3, [sp, #164]	; 0xa4
   13b54:	mov	ip, #0
   13b58:	bic	r3, r3, #2
   13b5c:	str	r3, [sp, #4]
   13b60:	ldr	r3, [sp, #76]	; 0x4c
   13b64:	str	r8, [sp]
   13b68:	str	r3, [sp, #16]
   13b6c:	ldr	r3, [sp, #80]	; 0x50
   13b70:	ldr	r2, [sp, #36]	; 0x24
   13b74:	str	r3, [sp, #12]
   13b78:	mov	r1, sl
   13b7c:	ldr	r3, [sp, #24]
   13b80:	mov	r0, fp
   13b84:	str	ip, [sp, #8]
   13b88:	bl	132a8 <strspn@plt+0x23dc>
   13b8c:	mov	r4, r0
   13b90:	ldr	r3, [pc, #1304]	; 140b0 <strspn@plt+0x31e4>
   13b94:	ldr	r2, [sp, #116]	; 0x74
   13b98:	mov	r0, r4
   13b9c:	ldr	r3, [r3]
   13ba0:	cmp	r2, r3
   13ba4:	bne	14a94 <strspn@plt+0x3bc8>
   13ba8:	add	sp, sp, #124	; 0x7c
   13bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bb0:	mov	r5, #110	; 0x6e
   13bb4:	ldr	r3, [sp, #32]
   13bb8:	mov	r2, #0
   13bbc:	cmp	r3, #0
   13bc0:	mov	r6, r2
   13bc4:	beq	138a0 <strspn@plt+0x29d4>
   13bc8:	str	fp, [sp, #160]	; 0xa0
   13bcc:	mov	fp, r8
   13bd0:	ldr	r8, [sp, #160]	; 0xa0
   13bd4:	mov	r3, r2
   13bd8:	ldr	r2, [sp, #28]
   13bdc:	and	r2, r2, r3
   13be0:	str	r2, [sp, #28]
   13be4:	b	13b44 <strspn@plt+0x2c78>
   13be8:	mov	r5, #116	; 0x74
   13bec:	b	13bb4 <strspn@plt+0x2ce8>
   13bf0:	mov	r5, #102	; 0x66
   13bf4:	ldr	r3, [sp, #32]
   13bf8:	cmp	r3, #0
   13bfc:	bne	147a8 <strspn@plt+0x38dc>
   13c00:	mov	r6, #0
   13c04:	b	138e4 <strspn@plt+0x2a18>
   13c08:	mov	r5, #118	; 0x76
   13c0c:	b	13bf4 <strspn@plt+0x2d28>
   13c10:	mov	r7, #0
   13c14:	mov	r6, #0
   13c18:	b	13854 <strspn@plt+0x2988>
   13c1c:	ldr	r3, [sp, #32]
   13c20:	cmp	r3, #0
   13c24:	bne	149ec <strspn@plt+0x3b20>
   13c28:	mov	r7, r3
   13c2c:	ldr	r3, [sp, #44]	; 0x2c
   13c30:	sub	r2, fp, #2
   13c34:	eor	r3, r3, #1
   13c38:	clz	r2, r2
   13c3c:	lsr	r2, r2, #5
   13c40:	ands	r3, r2, r3
   13c44:	beq	1468c <strspn@plt+0x37c0>
   13c48:	cmp	sl, r4
   13c4c:	movhi	r1, #39	; 0x27
   13c50:	strbhi	r1, [r8, r4]
   13c54:	add	r1, r4, #1
   13c58:	cmp	sl, r1
   13c5c:	movhi	r0, #36	; 0x24
   13c60:	strbhi	r0, [r8, r1]
   13c64:	add	r1, r4, #2
   13c68:	cmp	sl, r1
   13c6c:	movhi	r0, #39	; 0x27
   13c70:	strbhi	r0, [r8, r1]
   13c74:	add	r1, r4, #3
   13c78:	cmp	sl, r1
   13c7c:	bls	146ec <strspn@plt+0x3820>
   13c80:	mov	r4, r1
   13c84:	mov	r1, #92	; 0x5c
   13c88:	strb	r1, [r8, r4]
   13c8c:	mov	r1, r4
   13c90:	str	r3, [sp, #44]	; 0x2c
   13c94:	cmp	fp, #2
   13c98:	add	r4, r4, #1
   13c9c:	beq	14734 <strspn@plt+0x3868>
   13ca0:	ldr	r0, [sp, #24]
   13ca4:	add	r3, r9, #1
   13ca8:	cmp	r3, r0
   13cac:	bcs	13cc4 <strspn@plt+0x2df8>
   13cb0:	ldr	r0, [sp, #36]	; 0x24
   13cb4:	ldrb	r3, [r0, r3]
   13cb8:	sub	r3, r3, #48	; 0x30
   13cbc:	cmp	r3, #9
   13cc0:	bls	14744 <strspn@plt+0x3878>
   13cc4:	mov	r5, #48	; 0x30
   13cc8:	ldr	r3, [sp, #28]
   13ccc:	eor	r3, r3, #1
   13cd0:	orrs	r2, r2, r3
   13cd4:	mov	r3, r6
   13cd8:	moveq	r6, r2
   13cdc:	beq	13858 <strspn@plt+0x298c>
   13ce0:	mov	r6, #0
   13ce4:	b	13880 <strspn@plt+0x29b4>
   13ce8:	mov	r2, #0
   13cec:	mov	r6, r2
   13cf0:	mov	r5, #98	; 0x62
   13cf4:	b	138a0 <strspn@plt+0x29d4>
   13cf8:	mov	r5, #97	; 0x61
   13cfc:	b	13c00 <strspn@plt+0x2d34>
   13d00:	mov	r3, r7
   13d04:	mov	r6, r7
   13d08:	mov	r2, #0
   13d0c:	mov	r7, r3
   13d10:	mov	r5, #32
   13d14:	b	13838 <strspn@plt+0x296c>
   13d18:	cmp	r9, #0
   13d1c:	mov	r3, r7
   13d20:	bne	142e8 <strspn@plt+0x341c>
   13d24:	mov	r6, r7
   13d28:	mov	r2, r9
   13d2c:	mov	r7, r3
   13d30:	b	13838 <strspn@plt+0x296c>
   13d34:	mov	r6, r7
   13d38:	b	13854 <strspn@plt+0x2988>
   13d3c:	mov	r7, #0
   13d40:	ldr	r3, [sp, #64]	; 0x40
   13d44:	cmp	r3, #1
   13d48:	bne	143a4 <strspn@plt+0x34d8>
   13d4c:	bl	10dd0 <__ctype_b_loc@plt>
   13d50:	ldr	r2, [sp, #64]	; 0x40
   13d54:	sxth	r3, r5
   13d58:	mov	ip, r2
   13d5c:	lsl	r3, r3, #1
   13d60:	ldr	r2, [r0]
   13d64:	ldrh	r3, [r2, r3]
   13d68:	and	r3, r3, #16384	; 0x4000
   13d6c:	cmp	r3, #0
   13d70:	ldr	r3, [sp, #28]
   13d74:	movne	r6, #1
   13d78:	moveq	r6, #0
   13d7c:	movne	r2, #0
   13d80:	andeq	r2, r3, #1
   13d84:	cmp	r2, #0
   13d88:	bne	146b4 <strspn@plt+0x37e8>
   13d8c:	sub	r2, fp, #2
   13d90:	clz	r2, r2
   13d94:	lsr	r2, r2, #5
   13d98:	b	13838 <strspn@plt+0x296c>
   13d9c:	cmp	r4, #0
   13da0:	bne	14a60 <strspn@plt+0x3b94>
   13da4:	str	r4, [sp, #28]
   13da8:	cmp	sl, #0
   13dac:	bne	14aa4 <strspn@plt+0x3bd8>
   13db0:	ldr	r3, [pc, #772]	; 140bc <strspn@plt+0x31f0>
   13db4:	mov	r4, #1
   13db8:	str	r4, [sp, #40]	; 0x28
   13dbc:	str	r3, [sp, #60]	; 0x3c
   13dc0:	str	r4, [sp, #52]	; 0x34
   13dc4:	str	sl, [sp, #72]	; 0x48
   13dc8:	str	sl, [sp, #68]	; 0x44
   13dcc:	str	sl, [sp, #44]	; 0x2c
   13dd0:	str	sl, [sp, #32]
   13dd4:	mov	r8, #2
   13dd8:	b	133a0 <strspn@plt+0x24d4>
   13ddc:	ldr	r3, [sp, #36]	; 0x24
   13de0:	ldrb	r5, [r3, r9]
   13de4:	cmp	r5, #126	; 0x7e
   13de8:	ldrls	pc, [pc, r5, lsl #2]
   13dec:	b	13d40 <strspn@plt+0x2e74>
   13df0:	andeq	r4, r1, r4, lsr #32
   13df4:	andeq	r3, r1, r0, asr #26
   13df8:	andeq	r3, r1, r0, asr #26
   13dfc:	andeq	r3, r1, r0, asr #26
   13e00:	andeq	r3, r1, r0, asr #26
   13e04:	andeq	r3, r1, r0, asr #26
   13e08:	andeq	r3, r1, r0, asr #26
   13e0c:	andeq	r4, r1, r0, lsl r0
   13e10:	strdeq	r3, [r1], -ip
   13e14:	strdeq	r3, [r1], -r4
   13e18:	andeq	r3, r1, ip, ror #31
   13e1c:	muleq	r1, ip, r0
   13e20:	andeq	r4, r1, r8, lsl #1
   13e24:	andeq	r3, r1, r0, lsr #22
   13e28:	andeq	r3, r1, r0, asr #26
   13e2c:	andeq	r3, r1, r0, asr #26
   13e30:	andeq	r3, r1, r0, asr #26
   13e34:	andeq	r3, r1, r0, asr #26
   13e38:	andeq	r3, r1, r0, asr #26
   13e3c:	andeq	r3, r1, r0, asr #26
   13e40:	andeq	r3, r1, r0, asr #26
   13e44:	andeq	r3, r1, r0, asr #26
   13e48:	andeq	r3, r1, r0, asr #26
   13e4c:	andeq	r3, r1, r0, asr #26
   13e50:	andeq	r3, r1, r0, asr #26
   13e54:	andeq	r3, r1, r0, asr #26
   13e58:	andeq	r3, r1, r0, asr #26
   13e5c:	andeq	r3, r1, r0, asr #26
   13e60:	andeq	r3, r1, r0, asr #26
   13e64:	andeq	r3, r1, r0, asr #26
   13e68:	andeq	r3, r1, r0, asr #26
   13e6c:	andeq	r3, r1, r0, asr #26
   13e70:	andeq	r4, r1, r8, ror r0
   13e74:	andeq	r4, r1, r4, rrx
   13e78:	andeq	r4, r1, r4, rrx
   13e7c:	andeq	r4, r1, r4, asr r0
   13e80:	andeq	r4, r1, r4, rrx
   13e84:	andeq	r3, r1, ip, lsl #27
   13e88:	andeq	r4, r1, r4, rrx
   13e8c:	andeq	r3, r1, r4, asr sl
   13e90:	andeq	r4, r1, r4, rrx
   13e94:	andeq	r4, r1, r4, rrx
   13e98:	andeq	r4, r1, r4, rrx
   13e9c:	andeq	r3, r1, ip, lsl #27
   13ea0:	andeq	r3, r1, ip, lsl #27
   13ea4:	andeq	r3, r1, ip, lsl #27
   13ea8:	andeq	r3, r1, ip, lsl #27
   13eac:	andeq	r3, r1, ip, lsl #27
   13eb0:	andeq	r3, r1, ip, lsl #27
   13eb4:	andeq	r3, r1, ip, lsl #27
   13eb8:	andeq	r3, r1, ip, lsl #27
   13ebc:	andeq	r3, r1, ip, lsl #27
   13ec0:	andeq	r3, r1, ip, lsl #27
   13ec4:	andeq	r3, r1, ip, lsl #27
   13ec8:	andeq	r3, r1, ip, lsl #27
   13ecc:	andeq	r3, r1, ip, lsl #27
   13ed0:	andeq	r3, r1, ip, lsl #27
   13ed4:	andeq	r3, r1, ip, lsl #27
   13ed8:	andeq	r3, r1, ip, lsl #27
   13edc:	andeq	r4, r1, r4, rrx
   13ee0:	andeq	r4, r1, r4, rrx
   13ee4:	andeq	r4, r1, r4, rrx
   13ee8:	andeq	r4, r1, r4, rrx
   13eec:	andeq	r3, r1, r8, lsr #20
   13ef0:	andeq	r3, r1, r0, asr #26
   13ef4:	andeq	r3, r1, ip, lsl #27
   13ef8:	andeq	r3, r1, ip, lsl #27
   13efc:	andeq	r3, r1, ip, lsl #27
   13f00:	andeq	r3, r1, ip, lsl #27
   13f04:	andeq	r3, r1, ip, lsl #27
   13f08:	andeq	r3, r1, ip, lsl #27
   13f0c:	andeq	r3, r1, ip, lsl #27
   13f10:	andeq	r3, r1, ip, lsl #27
   13f14:	andeq	r3, r1, ip, lsl #27
   13f18:	andeq	r3, r1, ip, lsl #27
   13f1c:	andeq	r3, r1, ip, lsl #27
   13f20:	andeq	r3, r1, ip, lsl #27
   13f24:	andeq	r3, r1, ip, lsl #27
   13f28:	andeq	r3, r1, ip, lsl #27
   13f2c:	andeq	r3, r1, ip, lsl #27
   13f30:	andeq	r3, r1, ip, lsl #27
   13f34:	andeq	r3, r1, ip, lsl #27
   13f38:	andeq	r3, r1, ip, lsl #27
   13f3c:	andeq	r3, r1, ip, lsl #27
   13f40:	andeq	r3, r1, ip, lsl #27
   13f44:	andeq	r3, r1, ip, lsl #27
   13f48:	andeq	r3, r1, ip, lsl #27
   13f4c:	andeq	r3, r1, ip, lsl #27
   13f50:	andeq	r3, r1, ip, lsl #27
   13f54:	andeq	r3, r1, ip, lsl #27
   13f58:	andeq	r3, r1, ip, lsl #27
   13f5c:	andeq	r4, r1, r4, rrx
   13f60:	andeq	r3, r1, r0, ror #19
   13f64:	andeq	r3, r1, ip, lsl #27
   13f68:	andeq	r4, r1, r4, rrx
   13f6c:	andeq	r3, r1, ip, lsl #27
   13f70:	andeq	r4, r1, r4, rrx
   13f74:	andeq	r3, r1, ip, lsl #27
   13f78:	andeq	r3, r1, ip, lsl #27
   13f7c:	andeq	r3, r1, ip, lsl #27
   13f80:	andeq	r3, r1, ip, lsl #27
   13f84:	andeq	r3, r1, ip, lsl #27
   13f88:	andeq	r3, r1, ip, lsl #27
   13f8c:	andeq	r3, r1, ip, lsl #27
   13f90:	andeq	r3, r1, ip, lsl #27
   13f94:	andeq	r3, r1, ip, lsl #27
   13f98:	andeq	r3, r1, ip, lsl #27
   13f9c:	andeq	r3, r1, ip, lsl #27
   13fa0:	andeq	r3, r1, ip, lsl #27
   13fa4:	andeq	r3, r1, ip, lsl #27
   13fa8:	andeq	r3, r1, ip, lsl #27
   13fac:	andeq	r3, r1, ip, lsl #27
   13fb0:	andeq	r3, r1, ip, lsl #27
   13fb4:	andeq	r3, r1, ip, lsl #27
   13fb8:	andeq	r3, r1, ip, lsl #27
   13fbc:	andeq	r3, r1, ip, lsl #27
   13fc0:	andeq	r3, r1, ip, lsl #27
   13fc4:	andeq	r3, r1, ip, lsl #27
   13fc8:	andeq	r3, r1, ip, lsl #27
   13fcc:	andeq	r3, r1, ip, lsl #27
   13fd0:	andeq	r3, r1, ip, lsl #27
   13fd4:	andeq	r3, r1, ip, lsl #27
   13fd8:	andeq	r3, r1, ip, lsl #27
   13fdc:	strdeq	r3, [r1], -r8
   13fe0:	andeq	r4, r1, r4, rrx
   13fe4:	strdeq	r3, [r1], -r8
   13fe8:	andeq	r4, r1, r4, asr r0
   13fec:	mov	r3, #110	; 0x6e
   13ff0:	b	13b24 <strspn@plt+0x2c58>
   13ff4:	mov	r3, #116	; 0x74
   13ff8:	b	13b24 <strspn@plt+0x2c58>
   13ffc:	sub	r2, fp, #2
   14000:	mov	r3, #98	; 0x62
   14004:	clz	r2, r2
   14008:	lsr	r2, r2, #5
   1400c:	b	13a10 <strspn@plt+0x2b44>
   14010:	sub	r2, fp, #2
   14014:	mov	r3, #97	; 0x61
   14018:	clz	r2, r2
   1401c:	lsr	r2, r2, #5
   14020:	b	13a10 <strspn@plt+0x2b44>
   14024:	ldr	r3, [sp, #28]
   14028:	cmp	r3, #0
   1402c:	bne	13c1c <strspn@plt+0x2d50>
   14030:	ldr	r3, [sp, #164]	; 0xa4
   14034:	tst	r3, #1
   14038:	bne	146ac <strspn@plt+0x37e0>
   1403c:	ldr	r6, [sp, #28]
   14040:	sub	r2, fp, #2
   14044:	mov	r7, r6
   14048:	clz	r2, r2
   1404c:	lsr	r2, r2, #5
   14050:	b	13838 <strspn@plt+0x296c>
   14054:	sub	r2, fp, #2
   14058:	clz	r2, r2
   1405c:	lsr	r2, r2, #5
   14060:	b	13824 <strspn@plt+0x2958>
   14064:	sub	r2, fp, #2
   14068:	mov	r6, #0
   1406c:	clz	r2, r2
   14070:	lsr	r2, r2, #5
   14074:	b	1382c <strspn@plt+0x2960>
   14078:	sub	r2, fp, #2
   1407c:	clz	r2, r2
   14080:	lsr	r2, r2, #5
   14084:	b	1382c <strspn@plt+0x2960>
   14088:	sub	r2, fp, #2
   1408c:	mov	r3, #102	; 0x66
   14090:	clz	r2, r2
   14094:	lsr	r2, r2, #5
   14098:	b	13a10 <strspn@plt+0x2b44>
   1409c:	sub	r2, fp, #2
   140a0:	mov	r3, #118	; 0x76
   140a4:	clz	r2, r2
   140a8:	lsr	r2, r2, #5
   140ac:	b	13a10 <strspn@plt+0x2b44>
   140b0:	andeq	r7, r2, r8, lsl #30
   140b4:	andeq	r6, r1, r4, lsr #29
   140b8:	andeq	r6, r1, ip, lsl #29
   140bc:	andeq	r6, r1, r0, lsr #29
   140c0:	ldr	r3, [sp, #48]	; 0x30
   140c4:	ldrb	r5, [r3]
   140c8:	cmp	r5, #126	; 0x7e
   140cc:	ldrls	pc, [pc, r5, lsl #2]
   140d0:	b	13d3c <strspn@plt+0x2e70>
   140d4:	andeq	r3, r1, ip, lsl ip
   140d8:	andeq	r3, r1, ip, lsr sp
   140dc:	andeq	r3, r1, ip, lsr sp
   140e0:	andeq	r3, r1, ip, lsr sp
   140e4:	andeq	r3, r1, ip, lsr sp
   140e8:	andeq	r3, r1, ip, lsr sp
   140ec:	andeq	r3, r1, ip, lsr sp
   140f0:	andeq	r4, r1, r4, lsl r3
   140f4:	andeq	r4, r1, ip, lsl #6
   140f8:	andeq	r3, r1, r8, ror #23
   140fc:			; <UNDEFINED> instruction: 0x00013bb0
   14100:	andeq	r3, r1, r8, lsl #24
   14104:	strdeq	r3, [r1], -r0
   14108:	andeq	r4, r1, r0, lsl #6
   1410c:	andeq	r3, r1, ip, lsr sp
   14110:	andeq	r3, r1, ip, lsr sp
   14114:	andeq	r3, r1, ip, lsr sp
   14118:	andeq	r3, r1, ip, lsr sp
   1411c:	andeq	r3, r1, ip, lsr sp
   14120:	andeq	r3, r1, ip, lsr sp
   14124:	andeq	r3, r1, ip, lsr sp
   14128:	andeq	r3, r1, ip, lsr sp
   1412c:	andeq	r3, r1, ip, lsr sp
   14130:	andeq	r3, r1, ip, lsr sp
   14134:	andeq	r3, r1, ip, lsr sp
   14138:	andeq	r3, r1, ip, lsr sp
   1413c:	andeq	r3, r1, ip, lsr sp
   14140:	andeq	r3, r1, ip, lsr sp
   14144:	andeq	r3, r1, ip, lsr sp
   14148:	andeq	r3, r1, ip, lsr sp
   1414c:	andeq	r3, r1, ip, lsr sp
   14150:	andeq	r3, r1, ip, lsr sp
   14154:	strdeq	r4, [r1], -r8
   14158:	andeq	r3, r1, r0, lsl ip
   1415c:	andeq	r3, r1, r0, lsl ip
   14160:	ldrdeq	r4, [r1], -ip
   14164:	andeq	r3, r1, r0, lsl ip
   14168:	ldrdeq	r4, [r1], -r0
   1416c:	andeq	r3, r1, r0, lsl ip
   14170:	andeq	r3, r1, r0, asr sl
   14174:	andeq	r3, r1, r0, lsl ip
   14178:	andeq	r3, r1, r0, lsl ip
   1417c:	andeq	r3, r1, r0, lsl ip
   14180:	ldrdeq	r4, [r1], -r0
   14184:	ldrdeq	r4, [r1], -r0
   14188:	ldrdeq	r4, [r1], -r0
   1418c:	ldrdeq	r4, [r1], -r0
   14190:	ldrdeq	r4, [r1], -r0
   14194:	ldrdeq	r4, [r1], -r0
   14198:	ldrdeq	r4, [r1], -r0
   1419c:	ldrdeq	r4, [r1], -r0
   141a0:	ldrdeq	r4, [r1], -r0
   141a4:	ldrdeq	r4, [r1], -r0
   141a8:	ldrdeq	r4, [r1], -r0
   141ac:	ldrdeq	r4, [r1], -r0
   141b0:	ldrdeq	r4, [r1], -r0
   141b4:	ldrdeq	r4, [r1], -r0
   141b8:	ldrdeq	r4, [r1], -r0
   141bc:	ldrdeq	r4, [r1], -r0
   141c0:	andeq	r3, r1, r0, lsl ip
   141c4:	andeq	r3, r1, r0, lsl ip
   141c8:	andeq	r3, r1, r0, lsl ip
   141cc:	andeq	r3, r1, r0, lsl ip
   141d0:	andeq	r3, r1, r4, lsr #20
   141d4:	andeq	r3, r1, ip, lsr sp
   141d8:	ldrdeq	r4, [r1], -r0
   141dc:	ldrdeq	r4, [r1], -r0
   141e0:	ldrdeq	r4, [r1], -r0
   141e4:	ldrdeq	r4, [r1], -r0
   141e8:	ldrdeq	r4, [r1], -r0
   141ec:	ldrdeq	r4, [r1], -r0
   141f0:	ldrdeq	r4, [r1], -r0
   141f4:	ldrdeq	r4, [r1], -r0
   141f8:	ldrdeq	r4, [r1], -r0
   141fc:	ldrdeq	r4, [r1], -r0
   14200:	ldrdeq	r4, [r1], -r0
   14204:	ldrdeq	r4, [r1], -r0
   14208:	ldrdeq	r4, [r1], -r0
   1420c:	ldrdeq	r4, [r1], -r0
   14210:	ldrdeq	r4, [r1], -r0
   14214:	ldrdeq	r4, [r1], -r0
   14218:	ldrdeq	r4, [r1], -r0
   1421c:	ldrdeq	r4, [r1], -r0
   14220:	ldrdeq	r4, [r1], -r0
   14224:	ldrdeq	r4, [r1], -r0
   14228:	ldrdeq	r4, [r1], -r0
   1422c:	ldrdeq	r4, [r1], -r0
   14230:	ldrdeq	r4, [r1], -r0
   14234:	ldrdeq	r4, [r1], -r0
   14238:	ldrdeq	r4, [r1], -r0
   1423c:	ldrdeq	r4, [r1], -r0
   14240:	andeq	r3, r1, r0, lsl ip
   14244:	ldrdeq	r3, [r1], -ip
   14248:	ldrdeq	r4, [r1], -r0
   1424c:	andeq	r3, r1, r0, lsl ip
   14250:	ldrdeq	r4, [r1], -r0
   14254:	andeq	r3, r1, r0, lsl ip
   14258:	ldrdeq	r4, [r1], -r0
   1425c:	ldrdeq	r4, [r1], -r0
   14260:	ldrdeq	r4, [r1], -r0
   14264:	ldrdeq	r4, [r1], -r0
   14268:	ldrdeq	r4, [r1], -r0
   1426c:	ldrdeq	r4, [r1], -r0
   14270:	ldrdeq	r4, [r1], -r0
   14274:	ldrdeq	r4, [r1], -r0
   14278:	ldrdeq	r4, [r1], -r0
   1427c:	ldrdeq	r4, [r1], -r0
   14280:	ldrdeq	r4, [r1], -r0
   14284:	ldrdeq	r4, [r1], -r0
   14288:	ldrdeq	r4, [r1], -r0
   1428c:	ldrdeq	r4, [r1], -r0
   14290:	ldrdeq	r4, [r1], -r0
   14294:	ldrdeq	r4, [r1], -r0
   14298:	ldrdeq	r4, [r1], -r0
   1429c:	ldrdeq	r4, [r1], -r0
   142a0:	ldrdeq	r4, [r1], -r0
   142a4:	ldrdeq	r4, [r1], -r0
   142a8:	ldrdeq	r4, [r1], -r0
   142ac:	ldrdeq	r4, [r1], -r0
   142b0:	ldrdeq	r4, [r1], -r0
   142b4:	ldrdeq	r4, [r1], -r0
   142b8:	ldrdeq	r4, [r1], -r0
   142bc:	ldrdeq	r4, [r1], -r0
   142c0:	strdeq	r3, [r1], -r4
   142c4:	andeq	r3, r1, r0, lsl ip
   142c8:	strdeq	r3, [r1], -r4
   142cc:	ldrdeq	r4, [r1], -ip
   142d0:	mov	r6, r7
   142d4:	mov	r7, #0
   142d8:	b	13854 <strspn@plt+0x2988>
   142dc:	cmp	r9, #0
   142e0:	mov	r3, #0
   142e4:	beq	13d24 <strspn@plt+0x2e58>
   142e8:	mov	r6, #0
   142ec:	mov	r7, r3
   142f0:	mov	r3, r6
   142f4:	b	13858 <strspn@plt+0x298c>
   142f8:	mov	r3, #0
   142fc:	b	13d04 <strspn@plt+0x2e38>
   14300:	mov	r7, #0
   14304:	mov	r3, #114	; 0x72
   14308:	b	13b24 <strspn@plt+0x2c58>
   1430c:	mov	r5, #98	; 0x62
   14310:	b	13bb4 <strspn@plt+0x2ce8>
   14314:	mov	r5, #97	; 0x61
   14318:	b	13bf4 <strspn@plt+0x2d28>
   1431c:	ldr	r3, [sp, #32]
   14320:	cmp	r3, #0
   14324:	bne	1476c <strspn@plt+0x38a0>
   14328:	add	r9, r9, #1
   1432c:	ldr	r3, [sp, #44]	; 0x2c
   14330:	mov	r6, #0
   14334:	mov	r5, #92	; 0x5c
   14338:	b	13aec <strspn@plt+0x2c20>
   1433c:	ldr	r3, [sp, #36]	; 0x24
   14340:	ldrb	r3, [r3, #1]
   14344:	adds	r3, r3, #0
   14348:	movne	r3, #1
   1434c:	b	13810 <strspn@plt+0x2944>
   14350:	ldr	r3, [sp, #164]	; 0xa4
   14354:	ands	r3, r3, #4
   14358:	beq	1437c <strspn@plt+0x34b0>
   1435c:	ldr	r2, [sp, #24]
   14360:	add	r3, r9, #2
   14364:	cmp	r3, r2
   14368:	bcs	1437c <strspn@plt+0x34b0>
   1436c:	ldr	r2, [sp, #48]	; 0x30
   14370:	ldrb	r5, [r2, #1]
   14374:	cmp	r5, #63	; 0x3f
   14378:	beq	147e0 <strspn@plt+0x3914>
   1437c:	mov	r2, #0
   14380:	mov	r6, r2
   14384:	mov	r5, #63	; 0x3f
   14388:	b	13838 <strspn@plt+0x296c>
   1438c:	ldr	r3, [sp, #32]
   14390:	cmp	r3, #0
   14394:	bne	1476c <strspn@plt+0x38a0>
   14398:	mov	r6, r3
   1439c:	mov	r5, #63	; 0x3f
   143a0:	b	13880 <strspn@plt+0x29b4>
   143a4:	ldr	r3, [sp, #24]
   143a8:	cmn	r3, #1
   143ac:	mov	r3, #0
   143b0:	str	r3, [sp, #108]	; 0x6c
   143b4:	str	r3, [sp, #112]	; 0x70
   143b8:	bne	143c8 <strspn@plt+0x34fc>
   143bc:	ldr	r0, [sp, #36]	; 0x24
   143c0:	bl	10df4 <strlen@plt>
   143c4:	str	r0, [sp, #24]
   143c8:	mov	r3, #0
   143cc:	str	sl, [sp, #88]	; 0x58
   143d0:	ldr	sl, [sp, #36]	; 0x24
   143d4:	str	r5, [sp, #92]	; 0x5c
   143d8:	mov	r5, r3
   143dc:	str	r7, [sp, #96]	; 0x60
   143e0:	str	r4, [sp, #100]	; 0x64
   143e4:	str	r8, [sp, #84]	; 0x54
   143e8:	ldr	r3, [sp, #24]
   143ec:	add	r4, r9, r5
   143f0:	add	r7, sl, r4
   143f4:	sub	r2, r3, r4
   143f8:	mov	r1, r7
   143fc:	add	r3, sp, #108	; 0x6c
   14400:	add	r0, sp, #104	; 0x68
   14404:	bl	15ca0 <strspn@plt+0x4dd4>
   14408:	subs	r8, r0, #0
   1440c:	beq	1445c <strspn@plt+0x3590>
   14410:	cmn	r8, #1
   14414:	beq	147bc <strspn@plt+0x38f0>
   14418:	cmn	r8, #2
   1441c:	beq	148dc <strspn@plt+0x3a10>
   14420:	ldr	r3, [sp, #32]
   14424:	cmp	fp, #2
   14428:	movne	r3, #0
   1442c:	andeq	r3, r3, #1
   14430:	cmp	r3, #0
   14434:	bne	145bc <strspn@plt+0x36f0>
   14438:	ldr	r0, [sp, #104]	; 0x68
   1443c:	bl	10d34 <iswprint@plt>
   14440:	add	r5, r5, r8
   14444:	cmp	r0, #0
   14448:	add	r0, sp, #108	; 0x6c
   1444c:	moveq	r6, #0
   14450:	bl	10ce0 <mbsinit@plt>
   14454:	cmp	r0, #0
   14458:	beq	143e8 <strspn@plt+0x351c>
   1445c:	ldr	r3, [sp, #28]
   14460:	mov	ip, r5
   14464:	eor	r2, r6, #1
   14468:	ldr	r5, [sp, #92]	; 0x5c
   1446c:	ldr	r7, [sp, #96]	; 0x60
   14470:	ldr	r4, [sp, #100]	; 0x64
   14474:	ldr	r8, [sp, #84]	; 0x54
   14478:	ldr	sl, [sp, #88]	; 0x58
   1447c:	and	r2, r2, r3
   14480:	cmp	ip, #1
   14484:	bls	13d84 <strspn@plt+0x2eb8>
   14488:	add	r1, ip, r9
   1448c:	ldr	lr, [sp, #48]	; 0x30
   14490:	mov	r0, #0
   14494:	str	r6, [sp, #48]	; 0x30
   14498:	mov	ip, #39	; 0x27
   1449c:	ldr	r6, [sp, #44]	; 0x2c
   144a0:	b	14558 <strspn@plt+0x368c>
   144a4:	ldr	r0, [sp, #32]
   144a8:	sub	r3, fp, #2
   144ac:	cmp	r0, #0
   144b0:	clz	r3, r3
   144b4:	lsr	r3, r3, #5
   144b8:	bne	146c0 <strspn@plt+0x37f4>
   144bc:	eor	r0, r6, #1
   144c0:	ands	r3, r3, r0
   144c4:	beq	144f4 <strspn@plt+0x3628>
   144c8:	add	r0, r4, #1
   144cc:	cmp	sl, r4
   144d0:	strbhi	ip, [r8, r4]
   144d4:	cmp	sl, r0
   144d8:	movhi	r6, #36	; 0x24
   144dc:	strbhi	r6, [r8, r0]
   144e0:	add	r0, r4, #2
   144e4:	mov	r6, r3
   144e8:	add	r4, r4, #3
   144ec:	cmp	sl, r0
   144f0:	strbhi	ip, [r8, r0]
   144f4:	cmp	sl, r4
   144f8:	movhi	r3, #92	; 0x5c
   144fc:	strbhi	r3, [r8, r4]
   14500:	add	r3, r4, #1
   14504:	cmp	sl, r3
   14508:	lsrhi	r0, r5, #6
   1450c:	addhi	r0, r0, #48	; 0x30
   14510:	strbhi	r0, [r8, r3]
   14514:	add	r0, r4, #2
   14518:	cmp	sl, r0
   1451c:	lsrhi	r3, r5, #3
   14520:	andhi	r3, r3, #7
   14524:	addhi	r3, r3, #48	; 0x30
   14528:	add	r9, r9, #1
   1452c:	strbhi	r3, [r8, r0]
   14530:	and	r5, r5, #7
   14534:	cmp	r9, r1
   14538:	add	r5, r5, #48	; 0x30
   1453c:	add	r4, r4, #3
   14540:	bcs	146e0 <strspn@plt+0x3814>
   14544:	mov	r0, r2
   14548:	cmp	sl, r4
   1454c:	strbhi	r5, [r8, r4]
   14550:	ldrb	r5, [lr, #1]!
   14554:	add	r4, r4, #1
   14558:	cmp	r2, #0
   1455c:	bne	144a4 <strspn@plt+0x35d8>
   14560:	eor	r3, r0, #1
   14564:	and	r3, r3, r6
   14568:	cmp	r7, #0
   1456c:	uxtb	r3, r3
   14570:	beq	14584 <strspn@plt+0x36b8>
   14574:	cmp	sl, r4
   14578:	movhi	r7, #92	; 0x5c
   1457c:	strbhi	r7, [r8, r4]
   14580:	add	r4, r4, #1
   14584:	add	r9, r9, #1
   14588:	cmp	r9, r1
   1458c:	bcs	146d4 <strspn@plt+0x3808>
   14590:	cmp	r3, #0
   14594:	beq	14700 <strspn@plt+0x3834>
   14598:	cmp	sl, r4
   1459c:	add	r3, r4, #1
   145a0:	strbhi	ip, [r8, r4]
   145a4:	mov	r7, #0
   145a8:	cmp	sl, r3
   145ac:	strbhi	ip, [r8, r3]
   145b0:	add	r4, r4, #2
   145b4:	mov	r6, r7
   145b8:	b	14548 <strspn@plt+0x367c>
   145bc:	cmp	r8, #1
   145c0:	beq	14438 <strspn@plt+0x356c>
   145c4:	add	r1, r4, #1
   145c8:	add	r3, sl, r8
   145cc:	add	r1, sl, r1
   145d0:	add	r4, r3, r4
   145d4:	ldrb	r3, [r1], #1
   145d8:	sub	r3, r3, #91	; 0x5b
   145dc:	cmp	r3, #33	; 0x21
   145e0:	ldrls	pc, [pc, r3, lsl #2]
   145e4:	b	14670 <strspn@plt+0x37a4>
   145e8:	andeq	r4, r1, ip, ror r6
   145ec:	andeq	r4, r1, ip, ror r6
   145f0:	andeq	r4, r1, r0, ror r6
   145f4:	andeq	r4, r1, ip, ror r6
   145f8:	andeq	r4, r1, r0, ror r6
   145fc:	andeq	r4, r1, ip, ror r6
   14600:	andeq	r4, r1, r0, ror r6
   14604:	andeq	r4, r1, r0, ror r6
   14608:	andeq	r4, r1, r0, ror r6
   1460c:	andeq	r4, r1, r0, ror r6
   14610:	andeq	r4, r1, r0, ror r6
   14614:	andeq	r4, r1, r0, ror r6
   14618:	andeq	r4, r1, r0, ror r6
   1461c:	andeq	r4, r1, r0, ror r6
   14620:	andeq	r4, r1, r0, ror r6
   14624:	andeq	r4, r1, r0, ror r6
   14628:	andeq	r4, r1, r0, ror r6
   1462c:	andeq	r4, r1, r0, ror r6
   14630:	andeq	r4, r1, r0, ror r6
   14634:	andeq	r4, r1, r0, ror r6
   14638:	andeq	r4, r1, r0, ror r6
   1463c:	andeq	r4, r1, r0, ror r6
   14640:	andeq	r4, r1, r0, ror r6
   14644:	andeq	r4, r1, r0, ror r6
   14648:	andeq	r4, r1, r0, ror r6
   1464c:	andeq	r4, r1, r0, ror r6
   14650:	andeq	r4, r1, r0, ror r6
   14654:	andeq	r4, r1, r0, ror r6
   14658:	andeq	r4, r1, r0, ror r6
   1465c:	andeq	r4, r1, r0, ror r6
   14660:	andeq	r4, r1, r0, ror r6
   14664:	andeq	r4, r1, r0, ror r6
   14668:	andeq	r4, r1, r0, ror r6
   1466c:	andeq	r4, r1, ip, ror r6
   14670:	cmp	r4, r1
   14674:	bne	145d4 <strspn@plt+0x3708>
   14678:	b	14438 <strspn@plt+0x356c>
   1467c:	ldr	fp, [sp, #84]	; 0x54
   14680:	ldr	sl, [sp, #88]	; 0x58
   14684:	mov	r8, #2
   14688:	b	13b44 <strspn@plt+0x2c78>
   1468c:	cmp	sl, r4
   14690:	movls	r1, r4
   14694:	bls	13c94 <strspn@plt+0x2dc8>
   14698:	ldr	r3, [sp, #44]	; 0x2c
   1469c:	b	13c84 <strspn@plt+0x2db8>
   146a0:	str	sl, [sp, #72]	; 0x48
   146a4:	ldr	sl, [sp, #32]
   146a8:	b	13abc <strspn@plt+0x2bf0>
   146ac:	add	r9, r9, #1
   146b0:	b	133b0 <strspn@plt+0x24e4>
   146b4:	ldr	r2, [sp, #28]
   146b8:	mov	r6, #0
   146bc:	b	14488 <strspn@plt+0x35bc>
   146c0:	str	fp, [sp, #160]	; 0xa0
   146c4:	str	r3, [sp, #28]
   146c8:	mov	fp, r8
   146cc:	ldr	r8, [sp, #160]	; 0xa0
   146d0:	b	13b44 <strspn@plt+0x2c78>
   146d4:	str	r6, [sp, #44]	; 0x2c
   146d8:	ldr	r6, [sp, #48]	; 0x30
   146dc:	b	13aec <strspn@plt+0x2c20>
   146e0:	str	r6, [sp, #44]	; 0x2c
   146e4:	ldr	r6, [sp, #48]	; 0x30
   146e8:	b	138f8 <strspn@plt+0x2a2c>
   146ec:	add	r4, r4, #4
   146f0:	str	r3, [sp, #44]	; 0x2c
   146f4:	mov	r6, #0
   146f8:	mov	r5, #48	; 0x30
   146fc:	b	13880 <strspn@plt+0x29b4>
   14700:	mov	r7, r3
   14704:	b	14548 <strspn@plt+0x367c>
   14708:	ldr	r3, [pc, #-1624]	; 140b8 <strspn@plt+0x31ec>
   1470c:	mov	r4, #1
   14710:	str	r4, [sp, #40]	; 0x28
   14714:	str	r4, [sp, #28]
   14718:	str	r4, [sp, #52]	; 0x34
   1471c:	str	sl, [sp, #72]	; 0x48
   14720:	str	sl, [sp, #68]	; 0x44
   14724:	str	sl, [sp, #44]	; 0x2c
   14728:	str	sl, [sp, #32]
   1472c:	str	r3, [sp, #60]	; 0x3c
   14730:	b	133a0 <strspn@plt+0x24d4>
   14734:	mov	r3, r6
   14738:	mov	r5, #48	; 0x30
   1473c:	mov	r6, #0
   14740:	b	13880 <strspn@plt+0x29b4>
   14744:	cmp	sl, r4
   14748:	movhi	r3, #48	; 0x30
   1474c:	strbhi	r3, [r8, r4]
   14750:	add	r3, r1, #2
   14754:	cmp	sl, r3
   14758:	movhi	r0, #48	; 0x30
   1475c:	strbhi	r0, [r8, r3]
   14760:	add	r4, r1, #3
   14764:	mov	r5, #48	; 0x30
   14768:	b	13cc8 <strspn@plt+0x2dfc>
   1476c:	str	fp, [sp, #160]	; 0xa0
   14770:	mov	fp, r8
   14774:	ldr	r8, [sp, #160]	; 0xa0
   14778:	b	13b44 <strspn@plt+0x2c78>
   1477c:	ldr	r2, [sp, #80]	; 0x50
   14780:	ldrb	r3, [r2]
   14784:	cmp	r3, #0
   14788:	beq	13370 <strspn@plt+0x24a4>
   1478c:	cmp	sl, r4
   14790:	strbhi	r3, [fp, r4]
   14794:	ldrb	r3, [r2, #1]!
   14798:	add	r4, r4, #1
   1479c:	cmp	r3, #0
   147a0:	bne	1478c <strspn@plt+0x38c0>
   147a4:	b	13370 <strspn@plt+0x24a4>
   147a8:	str	fp, [sp, #160]	; 0xa0
   147ac:	mov	r3, #0
   147b0:	mov	fp, r8
   147b4:	ldr	r8, [sp, #160]	; 0xa0
   147b8:	b	13bd8 <strspn@plt+0x2d0c>
   147bc:	mov	ip, r5
   147c0:	ldr	r7, [sp, #96]	; 0x60
   147c4:	ldr	r5, [sp, #92]	; 0x5c
   147c8:	ldr	r4, [sp, #100]	; 0x64
   147cc:	ldr	r8, [sp, #84]	; 0x54
   147d0:	ldr	sl, [sp, #88]	; 0x58
   147d4:	ldr	r2, [sp, #28]
   147d8:	mov	r6, #0
   147dc:	b	14480 <strspn@plt+0x35b4>
   147e0:	ldr	r2, [sp, #36]	; 0x24
   147e4:	ldrb	r1, [r2, r3]
   147e8:	sub	r2, r1, #33	; 0x21
   147ec:	cmp	r2, #29
   147f0:	ldrls	pc, [pc, r2, lsl #2]
   147f4:	b	148d0 <strspn@plt+0x3a04>
   147f8:	andeq	r4, r1, r0, ror r8
   147fc:	ldrdeq	r4, [r1], -r0
   14800:	ldrdeq	r4, [r1], -r0
   14804:	ldrdeq	r4, [r1], -r0
   14808:	ldrdeq	r4, [r1], -r0
   1480c:	ldrdeq	r4, [r1], -r0
   14810:	andeq	r4, r1, r0, ror r8
   14814:	andeq	r4, r1, r0, ror r8
   14818:	andeq	r4, r1, r0, ror r8
   1481c:	ldrdeq	r4, [r1], -r0
   14820:	ldrdeq	r4, [r1], -r0
   14824:	ldrdeq	r4, [r1], -r0
   14828:	andeq	r4, r1, r0, ror r8
   1482c:	ldrdeq	r4, [r1], -r0
   14830:	andeq	r4, r1, r0, ror r8
   14834:	ldrdeq	r4, [r1], -r0
   14838:	ldrdeq	r4, [r1], -r0
   1483c:	ldrdeq	r4, [r1], -r0
   14840:	ldrdeq	r4, [r1], -r0
   14844:	ldrdeq	r4, [r1], -r0
   14848:	ldrdeq	r4, [r1], -r0
   1484c:	ldrdeq	r4, [r1], -r0
   14850:	ldrdeq	r4, [r1], -r0
   14854:	ldrdeq	r4, [r1], -r0
   14858:	ldrdeq	r4, [r1], -r0
   1485c:	ldrdeq	r4, [r1], -r0
   14860:	ldrdeq	r4, [r1], -r0
   14864:	andeq	r4, r1, r0, ror r8
   14868:	andeq	r4, r1, r0, ror r8
   1486c:	andeq	r4, r1, r0, ror r8
   14870:	ldr	r2, [sp, #32]
   14874:	cmp	r2, #0
   14878:	bne	1497c <strspn@plt+0x3ab0>
   1487c:	cmp	sl, r4
   14880:	movhi	r2, #63	; 0x3f
   14884:	strbhi	r2, [r8, r4]
   14888:	add	r2, r4, #1
   1488c:	cmp	sl, r2
   14890:	movhi	r0, #34	; 0x22
   14894:	strbhi	r0, [r8, r2]
   14898:	add	r2, r4, #2
   1489c:	cmp	sl, r2
   148a0:	movhi	r0, #34	; 0x22
   148a4:	strbhi	r0, [r8, r2]
   148a8:	add	r2, r4, #3
   148ac:	cmp	sl, r2
   148b0:	movhi	r0, #63	; 0x3f
   148b4:	strbhi	r0, [r8, r2]
   148b8:	mov	r2, #0
   148bc:	add	r4, r4, #4
   148c0:	mov	r5, r1
   148c4:	mov	r9, r3
   148c8:	mov	r6, r2
   148cc:	b	13cc8 <strspn@plt+0x2dfc>
   148d0:	mov	r2, #0
   148d4:	mov	r6, r2
   148d8:	b	13838 <strspn@plt+0x296c>
   148dc:	ldr	r0, [sp, #24]
   148e0:	mov	r1, r4
   148e4:	cmp	r1, r0
   148e8:	mov	r2, r7
   148ec:	mov	r3, r5
   148f0:	mov	ip, r5
   148f4:	ldr	r7, [sp, #96]	; 0x60
   148f8:	ldr	r5, [sp, #92]	; 0x5c
   148fc:	ldr	r4, [sp, #100]	; 0x64
   14900:	ldr	r8, [sp, #84]	; 0x54
   14904:	ldr	sl, [sp, #88]	; 0x58
   14908:	bcs	1493c <strspn@plt+0x3a70>
   1490c:	ldrb	r6, [r2]
   14910:	cmp	r6, #0
   14914:	bne	14928 <strspn@plt+0x3a5c>
   14918:	b	14a58 <strspn@plt+0x3b8c>
   1491c:	ldrb	r6, [r2, #1]!
   14920:	cmp	r6, #0
   14924:	beq	149e0 <strspn@plt+0x3b14>
   14928:	add	r3, r3, #1
   1492c:	add	r1, r9, r3
   14930:	cmp	r1, r0
   14934:	bcc	1491c <strspn@plt+0x3a50>
   14938:	mov	ip, r3
   1493c:	ldr	r2, [sp, #28]
   14940:	mov	r6, #0
   14944:	b	14480 <strspn@plt+0x35b4>
   14948:	mov	r3, #1
   1494c:	str	r3, [sp, #40]	; 0x28
   14950:	str	r3, [sp, #32]
   14954:	str	r3, [sp, #28]
   14958:	str	r3, [sp, #52]	; 0x34
   1495c:	ldr	r3, [pc, #-2220]	; 140b8 <strspn@plt+0x31ec>
   14960:	mov	r2, #0
   14964:	str	r2, [sp, #68]	; 0x44
   14968:	str	r2, [sp, #44]	; 0x2c
   1496c:	str	r2, [sp, #72]	; 0x48
   14970:	mov	r4, r2
   14974:	str	r3, [sp, #60]	; 0x3c
   14978:	b	133a0 <strspn@plt+0x24d4>
   1497c:	str	fp, [sp, #160]	; 0xa0
   14980:	mov	fp, r8
   14984:	ldr	r8, [sp, #160]	; 0xa0
   14988:	b	13b50 <strspn@plt+0x2c84>
   1498c:	mov	r2, r3
   14990:	ldr	r3, [sp, #60]	; 0x3c
   14994:	cmp	r3, #0
   14998:	moveq	r2, #0
   1499c:	andne	r2, r2, #1
   149a0:	cmp	r2, #0
   149a4:	beq	149d0 <strspn@plt+0x3b04>
   149a8:	mov	r2, r3
   149ac:	ldrb	r3, [r3]
   149b0:	cmp	r3, #0
   149b4:	beq	149d0 <strspn@plt+0x3b04>
   149b8:	cmp	sl, r4
   149bc:	strbhi	r3, [fp, r4]
   149c0:	ldrb	r3, [r2, #1]!
   149c4:	add	r4, r4, #1
   149c8:	cmp	r3, #0
   149cc:	bne	149b8 <strspn@plt+0x3aec>
   149d0:	cmp	sl, r4
   149d4:	movhi	r3, #0
   149d8:	strbhi	r3, [fp, r4]
   149dc:	b	13b90 <strspn@plt+0x2cc4>
   149e0:	mov	ip, r3
   149e4:	ldr	r2, [sp, #28]
   149e8:	b	14480 <strspn@plt+0x35b4>
   149ec:	str	fp, [sp, #160]	; 0xa0
   149f0:	mov	fp, r8
   149f4:	ldr	r8, [sp, #160]	; 0xa0
   149f8:	sub	r3, r8, #2
   149fc:	clz	r3, r3
   14a00:	lsr	r3, r3, #5
   14a04:	str	r3, [sp, #28]
   14a08:	b	13b44 <strspn@plt+0x2c78>
   14a0c:	ldr	r3, [sp, #76]	; 0x4c
   14a10:	mov	ip, #5
   14a14:	str	r3, [sp, #16]
   14a18:	ldr	r3, [sp, #80]	; 0x50
   14a1c:	ldr	r2, [sp, #36]	; 0x24
   14a20:	str	r3, [sp, #12]
   14a24:	ldr	r3, [sp, #56]	; 0x38
   14a28:	ldr	r1, [sp, #72]	; 0x48
   14a2c:	str	r3, [sp, #8]
   14a30:	ldr	r3, [sp, #164]	; 0xa4
   14a34:	mov	r0, fp
   14a38:	str	r3, [sp, #4]
   14a3c:	str	ip, [sp]
   14a40:	ldr	r3, [sp, #24]
   14a44:	bl	132a8 <strspn@plt+0x23dc>
   14a48:	mov	r4, r0
   14a4c:	b	13b90 <strspn@plt+0x2cc4>
   14a50:	mov	r8, #2
   14a54:	b	13b44 <strspn@plt+0x2c78>
   14a58:	ldr	r2, [sp, #28]
   14a5c:	b	14480 <strspn@plt+0x35b4>
   14a60:	mov	r3, #0
   14a64:	str	r3, [sp, #68]	; 0x44
   14a68:	str	r3, [sp, #44]	; 0x2c
   14a6c:	str	r3, [sp, #72]	; 0x48
   14a70:	str	r3, [sp, #28]
   14a74:	mov	r4, r3
   14a78:	ldr	r3, [pc, #-2500]	; 140bc <strspn@plt+0x31f0>
   14a7c:	mov	r2, #1
   14a80:	str	r2, [sp, #40]	; 0x28
   14a84:	str	r2, [sp, #32]
   14a88:	str	r2, [sp, #52]	; 0x34
   14a8c:	str	r3, [sp, #60]	; 0x3c
   14a90:	b	133a0 <strspn@plt+0x24d4>
   14a94:	bl	10d04 <__stack_chk_fail@plt>
   14a98:	mov	r5, r3
   14a9c:	mov	r6, #0
   14aa0:	b	13894 <strspn@plt+0x29c8>
   14aa4:	mov	r3, #0
   14aa8:	mov	r2, #1
   14aac:	str	r3, [sp, #44]	; 0x2c
   14ab0:	str	r3, [sp, #72]	; 0x48
   14ab4:	str	r2, [sp, #40]	; 0x28
   14ab8:	b	139b0 <strspn@plt+0x2ae4>
   14abc:	bl	10eb4 <abort@plt>
   14ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ac4:	sub	sp, sp, #44	; 0x2c
   14ac8:	mov	r6, r0
   14acc:	mov	r4, r3
   14ad0:	mov	sl, r1
   14ad4:	mov	fp, r2
   14ad8:	bl	10e00 <__errno_location@plt>
   14adc:	ldr	r7, [pc, #364]	; 14c50 <strspn@plt+0x3d84>
   14ae0:	cmp	r6, #0
   14ae4:	ldr	r5, [r7]
   14ae8:	ldr	r3, [r0]
   14aec:	str	r3, [sp, #24]
   14af0:	blt	14c4c <strspn@plt+0x3d80>
   14af4:	ldr	r3, [r7, #4]
   14af8:	mov	r8, r0
   14afc:	cmp	r3, r6
   14b00:	bgt	14b4c <strspn@plt+0x3c80>
   14b04:	cmn	r6, #-268435454	; 0xf0000002
   14b08:	bgt	14c48 <strspn@plt+0x3d7c>
   14b0c:	add	r9, r6, #1
   14b10:	add	r3, r7, #8
   14b14:	cmp	r5, r3
   14b18:	lsl	r1, r9, #3
   14b1c:	beq	14c28 <strspn@plt+0x3d5c>
   14b20:	mov	r0, r5
   14b24:	bl	15a40 <strspn@plt+0x4b74>
   14b28:	mov	r5, r0
   14b2c:	str	r0, [r7]
   14b30:	ldr	r0, [r7, #4]
   14b34:	mov	r1, #0
   14b38:	sub	r2, r9, r0
   14b3c:	add	r0, r5, r0, lsl #3
   14b40:	lsl	r2, r2, #3
   14b44:	bl	10e18 <memset@plt>
   14b48:	str	r9, [r7, #4]
   14b4c:	add	r3, r5, r6, lsl #3
   14b50:	ldr	r1, [r4, #4]
   14b54:	ldr	r7, [r3, #4]
   14b58:	ldr	r9, [r5, r6, lsl #3]
   14b5c:	ldr	r2, [r4, #40]	; 0x28
   14b60:	ldr	ip, [r4, #44]	; 0x2c
   14b64:	str	r3, [sp, #28]
   14b68:	ldr	r3, [r4]
   14b6c:	orr	r1, r1, #1
   14b70:	add	lr, r4, #8
   14b74:	str	r1, [sp, #36]	; 0x24
   14b78:	str	r1, [sp, #4]
   14b7c:	str	r2, [sp, #12]
   14b80:	str	r3, [sp]
   14b84:	mov	r0, r7
   14b88:	mov	r1, r9
   14b8c:	str	ip, [sp, #16]
   14b90:	str	lr, [sp, #8]
   14b94:	mov	r3, fp
   14b98:	mov	r2, sl
   14b9c:	str	lr, [sp, #32]
   14ba0:	bl	132a8 <strspn@plt+0x23dc>
   14ba4:	cmp	r9, r0
   14ba8:	bhi	14c14 <strspn@plt+0x3d48>
   14bac:	ldr	r3, [pc, #160]	; 14c54 <strspn@plt+0x3d88>
   14bb0:	add	r9, r0, #1
   14bb4:	cmp	r7, r3
   14bb8:	str	r9, [r5, r6, lsl #3]
   14bbc:	beq	14bc8 <strspn@plt+0x3cfc>
   14bc0:	mov	r0, r7
   14bc4:	bl	10cbc <free@plt>
   14bc8:	mov	r0, r9
   14bcc:	bl	159e4 <strspn@plt+0x4b18>
   14bd0:	ldr	lr, [sp, #28]
   14bd4:	ldr	ip, [r4, #44]	; 0x2c
   14bd8:	ldr	r5, [r4, #40]	; 0x28
   14bdc:	mov	r3, fp
   14be0:	mov	r2, sl
   14be4:	mov	r1, r9
   14be8:	str	r0, [lr, #4]
   14bec:	ldr	lr, [r4]
   14bf0:	ldr	r4, [sp, #32]
   14bf4:	str	ip, [sp, #16]
   14bf8:	str	r4, [sp, #8]
   14bfc:	ldr	r4, [sp, #36]	; 0x24
   14c00:	str	r5, [sp, #12]
   14c04:	str	r4, [sp, #4]
   14c08:	str	lr, [sp]
   14c0c:	mov	r7, r0
   14c10:	bl	132a8 <strspn@plt+0x23dc>
   14c14:	ldr	r3, [sp, #24]
   14c18:	mov	r0, r7
   14c1c:	str	r3, [r8]
   14c20:	add	sp, sp, #44	; 0x2c
   14c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c28:	mov	r0, #0
   14c2c:	bl	15a40 <strspn@plt+0x4b74>
   14c30:	ldr	r3, [pc, #32]	; 14c58 <strspn@plt+0x3d8c>
   14c34:	mov	r5, r0
   14c38:	ldm	r3, {r0, r1}
   14c3c:	str	r5, [r7]
   14c40:	stm	r5, {r0, r1}
   14c44:	b	14b30 <strspn@plt+0x3c64>
   14c48:	bl	15c2c <strspn@plt+0x4d60>
   14c4c:	bl	10eb4 <abort@plt>
   14c50:	andeq	r8, r2, ip, ror #1
   14c54:	andeq	r8, r2, r8, asr r1
   14c58:	strdeq	r8, [r2], -r4
   14c5c:	push	{r4, r5, r6, lr}
   14c60:	mov	r5, r0
   14c64:	bl	10e00 <__errno_location@plt>
   14c68:	cmp	r5, #0
   14c6c:	mov	r1, #48	; 0x30
   14c70:	mov	r4, r0
   14c74:	ldr	r0, [pc, #16]	; 14c8c <strspn@plt+0x3dc0>
   14c78:	ldr	r6, [r4]
   14c7c:	movne	r0, r5
   14c80:	bl	15bec <strspn@plt+0x4d20>
   14c84:	str	r6, [r4]
   14c88:	pop	{r4, r5, r6, pc}
   14c8c:	andeq	r8, r2, r8, asr r2
   14c90:	ldr	r3, [pc, #12]	; 14ca4 <strspn@plt+0x3dd8>
   14c94:	cmp	r0, #0
   14c98:	moveq	r0, r3
   14c9c:	ldr	r0, [r0]
   14ca0:	bx	lr
   14ca4:	andeq	r8, r2, r8, asr r2
   14ca8:	ldr	r3, [pc, #12]	; 14cbc <strspn@plt+0x3df0>
   14cac:	cmp	r0, #0
   14cb0:	moveq	r0, r3
   14cb4:	str	r1, [r0]
   14cb8:	bx	lr
   14cbc:	andeq	r8, r2, r8, asr r2
   14cc0:	ldr	r3, [pc, #52]	; 14cfc <strspn@plt+0x3e30>
   14cc4:	cmp	r0, #0
   14cc8:	moveq	r0, r3
   14ccc:	add	r3, r0, #8
   14cd0:	push	{lr}		; (str lr, [sp, #-4]!)
   14cd4:	lsr	lr, r1, #5
   14cd8:	and	r1, r1, #31
   14cdc:	ldr	ip, [r3, lr, lsl #2]
   14ce0:	lsr	r0, ip, r1
   14ce4:	eor	r2, r2, r0
   14ce8:	and	r2, r2, #1
   14cec:	and	r0, r0, #1
   14cf0:	eor	r1, ip, r2, lsl r1
   14cf4:	str	r1, [r3, lr, lsl #2]
   14cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cfc:	andeq	r8, r2, r8, asr r2
   14d00:	ldr	r3, [pc, #16]	; 14d18 <strspn@plt+0x3e4c>
   14d04:	cmp	r0, #0
   14d08:	movne	r3, r0
   14d0c:	ldr	r0, [r3, #4]
   14d10:	str	r1, [r3, #4]
   14d14:	bx	lr
   14d18:	andeq	r8, r2, r8, asr r2
   14d1c:	ldr	r3, [pc, #44]	; 14d50 <strspn@plt+0x3e84>
   14d20:	cmp	r0, #0
   14d24:	moveq	r0, r3
   14d28:	mov	ip, #10
   14d2c:	cmp	r2, #0
   14d30:	cmpne	r1, #0
   14d34:	str	ip, [r0]
   14d38:	beq	14d48 <strspn@plt+0x3e7c>
   14d3c:	str	r1, [r0, #40]	; 0x28
   14d40:	str	r2, [r0, #44]	; 0x2c
   14d44:	bx	lr
   14d48:	push	{r4, lr}
   14d4c:	bl	10eb4 <abort@plt>
   14d50:	andeq	r8, r2, r8, asr r2
   14d54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d58:	sub	sp, sp, #24
   14d5c:	ldr	ip, [pc, #108]	; 14dd0 <strspn@plt+0x3f04>
   14d60:	ldr	r4, [sp, #56]	; 0x38
   14d64:	mov	r9, r2
   14d68:	cmp	r4, #0
   14d6c:	moveq	r4, ip
   14d70:	mov	sl, r3
   14d74:	mov	r7, r0
   14d78:	mov	r8, r1
   14d7c:	bl	10e00 <__errno_location@plt>
   14d80:	ldr	r3, [r4, #44]	; 0x2c
   14d84:	mov	r1, r8
   14d88:	ldr	r6, [r0]
   14d8c:	str	r3, [sp, #16]
   14d90:	ldr	r2, [r4, #40]	; 0x28
   14d94:	add	r3, r4, #8
   14d98:	str	r3, [sp, #8]
   14d9c:	str	r2, [sp, #12]
   14da0:	ldr	r2, [r4, #4]
   14da4:	mov	r5, r0
   14da8:	str	r2, [sp, #4]
   14dac:	ldr	ip, [r4]
   14db0:	mov	r3, sl
   14db4:	mov	r2, r9
   14db8:	mov	r0, r7
   14dbc:	str	ip, [sp]
   14dc0:	bl	132a8 <strspn@plt+0x23dc>
   14dc4:	str	r6, [r5]
   14dc8:	add	sp, sp, #24
   14dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dd0:	andeq	r8, r2, r8, asr r2
   14dd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dd8:	cmp	r3, #0
   14ddc:	sub	sp, sp, #44	; 0x2c
   14de0:	ldr	r4, [pc, #192]	; 14ea8 <strspn@plt+0x3fdc>
   14de4:	mov	r6, r2
   14de8:	movne	r4, r3
   14dec:	mov	r9, r1
   14df0:	mov	r8, r0
   14df4:	bl	10e00 <__errno_location@plt>
   14df8:	ldr	r3, [r4, #44]	; 0x2c
   14dfc:	ldr	r5, [r4, #4]
   14e00:	add	sl, r4, #8
   14e04:	cmp	r6, #0
   14e08:	orreq	r5, r5, #1
   14e0c:	mov	r1, #0
   14e10:	ldr	r2, [r0]
   14e14:	str	r3, [sp, #16]
   14e18:	ldr	r3, [r4, #40]	; 0x28
   14e1c:	stmib	sp, {r5, sl}
   14e20:	str	r3, [sp, #12]
   14e24:	ldr	r3, [r4]
   14e28:	mov	r7, r0
   14e2c:	str	r2, [sp, #28]
   14e30:	str	r3, [sp]
   14e34:	mov	r2, r8
   14e38:	mov	r3, r9
   14e3c:	mov	r0, r1
   14e40:	bl	132a8 <strspn@plt+0x23dc>
   14e44:	add	r1, r0, #1
   14e48:	mov	fp, r0
   14e4c:	mov	r0, r1
   14e50:	str	r1, [sp, #36]	; 0x24
   14e54:	bl	159e4 <strspn@plt+0x4b18>
   14e58:	ldr	r3, [r4, #44]	; 0x2c
   14e5c:	mov	r2, r8
   14e60:	str	r3, [sp, #16]
   14e64:	ldr	r3, [r4, #40]	; 0x28
   14e68:	str	r5, [sp, #4]
   14e6c:	str	r3, [sp, #12]
   14e70:	str	sl, [sp, #8]
   14e74:	ldr	ip, [r4]
   14e78:	ldr	r1, [sp, #36]	; 0x24
   14e7c:	mov	r3, r9
   14e80:	str	ip, [sp]
   14e84:	str	r0, [sp, #32]
   14e88:	bl	132a8 <strspn@plt+0x23dc>
   14e8c:	ldr	r2, [sp, #28]
   14e90:	cmp	r6, #0
   14e94:	str	r2, [r7]
   14e98:	ldr	r0, [sp, #32]
   14e9c:	strne	fp, [r6]
   14ea0:	add	sp, sp, #44	; 0x2c
   14ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea8:	andeq	r8, r2, r8, asr r2
   14eac:	mov	r3, r2
   14eb0:	mov	r2, #0
   14eb4:	b	14dd4 <strspn@plt+0x3f08>
   14eb8:	push	{r4, r5, r6, r7, r8, lr}
   14ebc:	ldr	r6, [pc, #112]	; 14f34 <strspn@plt+0x4068>
   14ec0:	ldr	r3, [r6, #4]
   14ec4:	ldr	r7, [r6]
   14ec8:	cmp	r3, #1
   14ecc:	ble	14ef0 <strspn@plt+0x4024>
   14ed0:	sub	r5, r7, #8
   14ed4:	add	r5, r5, r3, lsl #3
   14ed8:	mov	r4, r7
   14edc:	ldr	r0, [r4, #12]
   14ee0:	add	r4, r4, #8
   14ee4:	bl	10cbc <free@plt>
   14ee8:	cmp	r4, r5
   14eec:	bne	14edc <strspn@plt+0x4010>
   14ef0:	ldr	r0, [r7, #4]
   14ef4:	ldr	r4, [pc, #60]	; 14f38 <strspn@plt+0x406c>
   14ef8:	cmp	r0, r4
   14efc:	beq	14f10 <strspn@plt+0x4044>
   14f00:	bl	10cbc <free@plt>
   14f04:	mov	r3, #256	; 0x100
   14f08:	str	r4, [r6, #12]
   14f0c:	str	r3, [r6, #8]
   14f10:	ldr	r4, [pc, #36]	; 14f3c <strspn@plt+0x4070>
   14f14:	cmp	r7, r4
   14f18:	beq	14f28 <strspn@plt+0x405c>
   14f1c:	mov	r0, r7
   14f20:	bl	10cbc <free@plt>
   14f24:	str	r4, [r6]
   14f28:	mov	r3, #1
   14f2c:	str	r3, [r6, #4]
   14f30:	pop	{r4, r5, r6, r7, r8, pc}
   14f34:	andeq	r8, r2, ip, ror #1
   14f38:	andeq	r8, r2, r8, asr r1
   14f3c:	strdeq	r8, [r2], -r4
   14f40:	ldr	r3, [pc, #4]	; 14f4c <strspn@plt+0x4080>
   14f44:	mvn	r2, #0
   14f48:	b	14ac0 <strspn@plt+0x3bf4>
   14f4c:	andeq	r8, r2, r8, asr r2
   14f50:	ldr	r3, [pc]	; 14f58 <strspn@plt+0x408c>
   14f54:	b	14ac0 <strspn@plt+0x3bf4>
   14f58:	andeq	r8, r2, r8, asr r2
   14f5c:	mov	r1, r0
   14f60:	ldr	r3, [pc, #8]	; 14f70 <strspn@plt+0x40a4>
   14f64:	mvn	r2, #0
   14f68:	mov	r0, #0
   14f6c:	b	14ac0 <strspn@plt+0x3bf4>
   14f70:	andeq	r8, r2, r8, asr r2
   14f74:	mov	r2, r1
   14f78:	ldr	r3, [pc, #8]	; 14f88 <strspn@plt+0x40bc>
   14f7c:	mov	r1, r0
   14f80:	mov	r0, #0
   14f84:	b	14ac0 <strspn@plt+0x3bf4>
   14f88:	andeq	r8, r2, r8, asr r2
   14f8c:	push	{r4, r5, r6, lr}
   14f90:	sub	sp, sp, #56	; 0x38
   14f94:	ldr	r4, [pc, #68]	; 14fe0 <strspn@plt+0x4114>
   14f98:	mov	r6, r2
   14f9c:	mov	r5, r0
   14fa0:	ldr	r3, [r4]
   14fa4:	add	r0, sp, #4
   14fa8:	str	r3, [sp, #52]	; 0x34
   14fac:	bl	13138 <strspn@plt+0x226c>
   14fb0:	add	r3, sp, #4
   14fb4:	mvn	r2, #0
   14fb8:	mov	r1, r6
   14fbc:	mov	r0, r5
   14fc0:	bl	14ac0 <strspn@plt+0x3bf4>
   14fc4:	ldr	r2, [sp, #52]	; 0x34
   14fc8:	ldr	r3, [r4]
   14fcc:	cmp	r2, r3
   14fd0:	bne	14fdc <strspn@plt+0x4110>
   14fd4:	add	sp, sp, #56	; 0x38
   14fd8:	pop	{r4, r5, r6, pc}
   14fdc:	bl	10d04 <__stack_chk_fail@plt>
   14fe0:	andeq	r7, r2, r8, lsl #30
   14fe4:	push	{r4, r5, r6, r7, lr}
   14fe8:	sub	sp, sp, #60	; 0x3c
   14fec:	ldr	r4, [pc, #72]	; 1503c <strspn@plt+0x4170>
   14ff0:	mov	r6, r2
   14ff4:	mov	r7, r3
   14ff8:	ldr	ip, [r4]
   14ffc:	mov	r5, r0
   15000:	add	r0, sp, #4
   15004:	str	ip, [sp, #52]	; 0x34
   15008:	bl	13138 <strspn@plt+0x226c>
   1500c:	add	r3, sp, #4
   15010:	mov	r2, r7
   15014:	mov	r1, r6
   15018:	mov	r0, r5
   1501c:	bl	14ac0 <strspn@plt+0x3bf4>
   15020:	ldr	r2, [sp, #52]	; 0x34
   15024:	ldr	r3, [r4]
   15028:	cmp	r2, r3
   1502c:	bne	15038 <strspn@plt+0x416c>
   15030:	add	sp, sp, #60	; 0x3c
   15034:	pop	{r4, r5, r6, r7, pc}
   15038:	bl	10d04 <__stack_chk_fail@plt>
   1503c:	andeq	r7, r2, r8, lsl #30
   15040:	mov	r2, r1
   15044:	mov	r1, r0
   15048:	mov	r0, #0
   1504c:	b	14f8c <strspn@plt+0x40c0>
   15050:	mov	r3, r2
   15054:	mov	r2, r1
   15058:	mov	r1, r0
   1505c:	mov	r0, #0
   15060:	b	14fe4 <strspn@plt+0x4118>
   15064:	push	{r4, r5, r6, r7, r8, r9, lr}
   15068:	mov	r4, r2
   1506c:	ldr	lr, [pc, #128]	; 150f4 <strspn@plt+0x4228>
   15070:	mov	r8, r0
   15074:	mov	r9, r1
   15078:	ldm	lr!, {r0, r1, r2, r3}
   1507c:	sub	sp, sp, #60	; 0x3c
   15080:	add	ip, sp, #4
   15084:	lsr	r6, r4, #5
   15088:	stmia	ip!, {r0, r1, r2, r3}
   1508c:	add	r7, sp, #12
   15090:	ldm	lr!, {r0, r1, r2, r3}
   15094:	and	r4, r4, #31
   15098:	ldr	r5, [pc, #88]	; 150f8 <strspn@plt+0x422c>
   1509c:	stmia	ip!, {r0, r1, r2, r3}
   150a0:	ldm	lr, {r0, r1, r2, r3}
   150a4:	stm	ip, {r0, r1, r2, r3}
   150a8:	mov	r2, r9
   150ac:	ldr	r3, [r7, r6, lsl #2]
   150b0:	ldr	ip, [r5]
   150b4:	mov	r1, r8
   150b8:	mvn	r0, r3, lsr r4
   150bc:	and	r0, r0, #1
   150c0:	str	ip, [sp, #52]	; 0x34
   150c4:	eor	r4, r3, r0, lsl r4
   150c8:	add	r3, sp, #4
   150cc:	mov	r0, #0
   150d0:	str	r4, [r7, r6, lsl #2]
   150d4:	bl	14ac0 <strspn@plt+0x3bf4>
   150d8:	ldr	r2, [sp, #52]	; 0x34
   150dc:	ldr	r3, [r5]
   150e0:	cmp	r2, r3
   150e4:	bne	150f0 <strspn@plt+0x4224>
   150e8:	add	sp, sp, #60	; 0x3c
   150ec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   150f0:	bl	10d04 <__stack_chk_fail@plt>
   150f4:	andeq	r8, r2, r8, asr r2
   150f8:	andeq	r7, r2, r8, lsl #30
   150fc:	mov	r2, r1
   15100:	mvn	r1, #0
   15104:	b	15064 <strspn@plt+0x4198>
   15108:	mov	r2, #58	; 0x3a
   1510c:	mvn	r1, #0
   15110:	b	15064 <strspn@plt+0x4198>
   15114:	mov	r2, #58	; 0x3a
   15118:	b	15064 <strspn@plt+0x4198>
   1511c:	push	{r4, r5, r6, r7, r8, lr}
   15120:	sub	sp, sp, #104	; 0x68
   15124:	ldr	r5, [pc, #120]	; 151a4 <strspn@plt+0x42d8>
   15128:	mov	r6, r0
   1512c:	mov	r0, sp
   15130:	ldr	r3, [r5]
   15134:	mov	r7, r2
   15138:	str	r3, [sp, #100]	; 0x64
   1513c:	bl	13138 <strspn@plt+0x226c>
   15140:	mov	ip, sp
   15144:	add	lr, sp, #52	; 0x34
   15148:	ldm	ip!, {r0, r1, r2, r3}
   1514c:	stmia	lr!, {r0, r1, r2, r3}
   15150:	ldm	ip!, {r0, r1, r2, r3}
   15154:	ldr	r8, [sp, #64]	; 0x40
   15158:	stmia	lr!, {r0, r1, r2, r3}
   1515c:	mvn	r4, r8
   15160:	ldm	ip, {r0, r1, r2, r3}
   15164:	and	ip, r4, #67108864	; 0x4000000
   15168:	eor	ip, ip, r8
   1516c:	str	ip, [sp, #64]	; 0x40
   15170:	stm	lr, {r0, r1, r2, r3}
   15174:	add	r3, sp, #52	; 0x34
   15178:	mvn	r2, #0
   1517c:	mov	r1, r7
   15180:	mov	r0, r6
   15184:	bl	14ac0 <strspn@plt+0x3bf4>
   15188:	ldr	r2, [sp, #100]	; 0x64
   1518c:	ldr	r3, [r5]
   15190:	cmp	r2, r3
   15194:	bne	151a0 <strspn@plt+0x42d4>
   15198:	add	sp, sp, #104	; 0x68
   1519c:	pop	{r4, r5, r6, r7, r8, pc}
   151a0:	bl	10d04 <__stack_chk_fail@plt>
   151a4:	andeq	r7, r2, r8, lsl #30
   151a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   151ac:	mov	r6, r1
   151b0:	ldr	lr, [pc, #132]	; 1523c <strspn@plt+0x4370>
   151b4:	mov	r5, r2
   151b8:	mov	r8, r0
   151bc:	mov	r9, r3
   151c0:	ldm	lr!, {r0, r1, r2, r3}
   151c4:	sub	sp, sp, #60	; 0x3c
   151c8:	add	ip, sp, #4
   151cc:	ldr	r4, [pc, #108]	; 15240 <strspn@plt+0x4374>
   151d0:	stmia	ip!, {r0, r1, r2, r3}
   151d4:	mov	r7, #10
   151d8:	ldm	lr!, {r0, r1, r2, r3}
   151dc:	cmp	r5, #0
   151e0:	cmpne	r6, #0
   151e4:	str	r7, [sp, #4]
   151e8:	stmia	ip!, {r0, r1, r2, r3}
   151ec:	ldm	lr, {r0, r1, r2, r3}
   151f0:	ldr	lr, [r4]
   151f4:	stm	ip, {r0, r1, r2, r3}
   151f8:	str	lr, [sp, #52]	; 0x34
   151fc:	beq	15238 <strspn@plt+0x436c>
   15200:	add	r3, sp, #4
   15204:	ldr	r2, [sp, #88]	; 0x58
   15208:	mov	r1, r9
   1520c:	mov	r0, r8
   15210:	str	r6, [sp, #44]	; 0x2c
   15214:	str	r5, [sp, #48]	; 0x30
   15218:	bl	14ac0 <strspn@plt+0x3bf4>
   1521c:	ldr	r2, [sp, #52]	; 0x34
   15220:	ldr	r3, [r4]
   15224:	cmp	r2, r3
   15228:	bne	15234 <strspn@plt+0x4368>
   1522c:	add	sp, sp, #60	; 0x3c
   15230:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15234:	bl	10d04 <__stack_chk_fail@plt>
   15238:	bl	10eb4 <abort@plt>
   1523c:	andeq	r8, r2, r8, asr r2
   15240:	andeq	r7, r2, r8, lsl #30
   15244:	push	{lr}		; (str lr, [sp, #-4]!)
   15248:	sub	sp, sp, #12
   1524c:	mvn	ip, #0
   15250:	str	ip, [sp]
   15254:	bl	151a8 <strspn@plt+0x42dc>
   15258:	add	sp, sp, #12
   1525c:	pop	{pc}		; (ldr pc, [sp], #4)
   15260:	push	{lr}		; (str lr, [sp, #-4]!)
   15264:	sub	sp, sp, #12
   15268:	mvn	ip, #0
   1526c:	mov	r3, r2
   15270:	str	ip, [sp]
   15274:	mov	r2, r1
   15278:	mov	r1, r0
   1527c:	mov	r0, #0
   15280:	bl	151a8 <strspn@plt+0x42dc>
   15284:	add	sp, sp, #12
   15288:	pop	{pc}		; (ldr pc, [sp], #4)
   1528c:	push	{lr}		; (str lr, [sp, #-4]!)
   15290:	sub	sp, sp, #12
   15294:	str	r3, [sp]
   15298:	mov	r3, r2
   1529c:	mov	r2, r1
   152a0:	mov	r1, r0
   152a4:	mov	r0, #0
   152a8:	bl	151a8 <strspn@plt+0x42dc>
   152ac:	add	sp, sp, #12
   152b0:	pop	{pc}		; (ldr pc, [sp], #4)
   152b4:	ldr	r3, [pc]	; 152bc <strspn@plt+0x43f0>
   152b8:	b	14ac0 <strspn@plt+0x3bf4>
   152bc:	strdeq	r8, [r2], -ip
   152c0:	mov	r2, r1
   152c4:	ldr	r3, [pc, #8]	; 152d4 <strspn@plt+0x4408>
   152c8:	mov	r1, r0
   152cc:	mov	r0, #0
   152d0:	b	14ac0 <strspn@plt+0x3bf4>
   152d4:	strdeq	r8, [r2], -ip
   152d8:	ldr	r3, [pc, #4]	; 152e4 <strspn@plt+0x4418>
   152dc:	mvn	r2, #0
   152e0:	b	14ac0 <strspn@plt+0x3bf4>
   152e4:	strdeq	r8, [r2], -ip
   152e8:	mov	r1, r0
   152ec:	ldr	r3, [pc, #8]	; 152fc <strspn@plt+0x4430>
   152f0:	mvn	r2, #0
   152f4:	mov	r0, #0
   152f8:	b	14ac0 <strspn@plt+0x3bf4>
   152fc:	strdeq	r8, [r2], -ip
   15300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15304:	mov	r9, r1
   15308:	ldr	r4, [pc, #352]	; 15470 <strspn@plt+0x45a4>
   1530c:	sub	sp, sp, #228	; 0xe4
   15310:	mov	fp, r0
   15314:	ldr	r1, [r4]
   15318:	mov	r0, r9
   1531c:	mov	r8, r3
   15320:	mov	sl, r2
   15324:	str	r1, [sp, #220]	; 0xdc
   15328:	bl	15e68 <strspn@plt+0x4f9c>
   1532c:	mov	r5, r0
   15330:	mov	r0, r8
   15334:	bl	15e68 <strspn@plt+0x4f9c>
   15338:	mov	r6, r0
   1533c:	mov	r0, r5
   15340:	bl	15eb8 <strspn@plt+0x4fec>
   15344:	mov	r7, r0
   15348:	mov	r0, r6
   1534c:	bl	15eb8 <strspn@plt+0x4fec>
   15350:	cmp	r7, r0
   15354:	beq	15378 <strspn@plt+0x44ac>
   15358:	mov	r6, #0
   1535c:	ldr	r2, [sp, #220]	; 0xdc
   15360:	ldr	r3, [r4]
   15364:	mov	r0, r6
   15368:	cmp	r2, r3
   1536c:	bne	1546c <strspn@plt+0x45a0>
   15370:	add	sp, sp, #228	; 0xe4
   15374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15378:	mov	r2, r7
   1537c:	mov	r1, r6
   15380:	mov	r0, r5
   15384:	bl	10cec <memcmp@plt>
   15388:	cmp	r0, #0
   1538c:	bne	15358 <strspn@plt+0x448c>
   15390:	mov	r0, r9
   15394:	bl	15d94 <strspn@plt+0x4ec8>
   15398:	mov	r3, #256	; 0x100
   1539c:	str	r3, [sp]
   153a0:	mov	r1, fp
   153a4:	add	r3, sp, #8
   153a8:	mov	r2, r0
   153ac:	mov	r5, r0
   153b0:	mov	r0, #3
   153b4:	bl	10d28 <__fxstatat64@plt>
   153b8:	cmp	r0, #0
   153bc:	bne	15450 <strspn@plt+0x4584>
   153c0:	mov	r0, r5
   153c4:	bl	10cbc <free@plt>
   153c8:	mov	r0, r8
   153cc:	bl	15d94 <strspn@plt+0x4ec8>
   153d0:	mov	r3, #256	; 0x100
   153d4:	str	r3, [sp]
   153d8:	mov	r1, sl
   153dc:	add	r3, sp, #112	; 0x70
   153e0:	mov	r2, r0
   153e4:	mov	r5, r0
   153e8:	mov	r0, #3
   153ec:	bl	10d28 <__fxstatat64@plt>
   153f0:	cmp	r0, #0
   153f4:	bne	15434 <strspn@plt+0x4568>
   153f8:	ldrd	r0, [sp, #104]	; 0x68
   153fc:	ldrd	r2, [sp, #208]	; 0xd0
   15400:	cmp	r1, r3
   15404:	cmpeq	r0, r2
   15408:	movne	r6, #0
   1540c:	bne	15428 <strspn@plt+0x455c>
   15410:	ldrd	r0, [sp, #8]
   15414:	ldrd	r2, [sp, #112]	; 0x70
   15418:	cmp	r1, r3
   1541c:	cmpeq	r0, r2
   15420:	moveq	r6, #1
   15424:	movne	r6, #0
   15428:	mov	r0, r5
   1542c:	bl	10cbc <free@plt>
   15430:	b	1535c <strspn@plt+0x4490>
   15434:	bl	10e00 <__errno_location@plt>
   15438:	mov	r3, r5
   1543c:	ldr	r2, [pc, #48]	; 15474 <strspn@plt+0x45a8>
   15440:	ldr	r1, [r0]
   15444:	mov	r0, #1
   15448:	bl	10d88 <error@plt>
   1544c:	b	153f8 <strspn@plt+0x452c>
   15450:	bl	10e00 <__errno_location@plt>
   15454:	mov	r3, r5
   15458:	ldr	r2, [pc, #20]	; 15474 <strspn@plt+0x45a8>
   1545c:	ldr	r1, [r0]
   15460:	mov	r0, #1
   15464:	bl	10d88 <error@plt>
   15468:	b	153c0 <strspn@plt+0x44f4>
   1546c:	bl	10d04 <__stack_chk_fail@plt>
   15470:	andeq	r7, r2, r8, lsl #30
   15474:	andeq	r6, r1, r0, ror sp
   15478:	mvn	r2, #99	; 0x63
   1547c:	mov	r3, r1
   15480:	mov	r1, r0
   15484:	mov	r0, r2
   15488:	b	15300 <strspn@plt+0x4434>
   1548c:	push	{r4, r5, r6, lr}
   15490:	sub	sp, sp, #32
   15494:	cmp	r1, #0
   15498:	mov	r5, r0
   1549c:	ldr	r4, [sp, #48]	; 0x30
   154a0:	ldr	r6, [sp, #52]	; 0x34
   154a4:	beq	15534 <strspn@plt+0x4668>
   154a8:	strd	r2, [sp]
   154ac:	mov	r3, r1
   154b0:	ldr	r2, [pc, #828]	; 157f4 <strspn@plt+0x4928>
   154b4:	mov	r1, #1
   154b8:	bl	10e3c <__fprintf_chk@plt>
   154bc:	mov	r2, #5
   154c0:	ldr	r1, [pc, #816]	; 157f8 <strspn@plt+0x492c>
   154c4:	mov	r0, #0
   154c8:	bl	10cf8 <dcgettext@plt>
   154cc:	ldr	r3, [pc, #808]	; 157fc <strspn@plt+0x4930>
   154d0:	ldr	r2, [pc, #808]	; 15800 <strspn@plt+0x4934>
   154d4:	str	r3, [sp]
   154d8:	mov	r1, #1
   154dc:	mov	r3, r0
   154e0:	mov	r0, r5
   154e4:	bl	10e3c <__fprintf_chk@plt>
   154e8:	ldr	r1, [pc, #788]	; 15804 <strspn@plt+0x4938>
   154ec:	mov	r2, #5
   154f0:	mov	r0, #0
   154f4:	bl	10cf8 <dcgettext@plt>
   154f8:	mov	r1, r5
   154fc:	bl	10c80 <fputs_unlocked@plt>
   15500:	cmp	r6, #9
   15504:	ldrls	pc, [pc, r6, lsl #2]
   15508:	b	157e4 <strspn@plt+0x4918>
   1550c:	strdeq	r5, [r1], -r0
   15510:			; <UNDEFINED> instruction: 0x000155b8
   15514:	andeq	r5, r1, r4, ror #11
   15518:	andeq	r5, r1, r8, lsl r6
   1551c:	andeq	r5, r1, r4, asr r6
   15520:	muleq	r1, r4, r6
   15524:	ldrdeq	r5, [r1], -ip
   15528:	andeq	r5, r1, ip, lsr #14
   1552c:	andeq	r5, r1, r4, lsl #15
   15530:	andeq	r5, r1, ip, asr #10
   15534:	str	r3, [sp]
   15538:	mov	r1, #1
   1553c:	mov	r3, r2
   15540:	ldr	r2, [pc, #704]	; 15808 <strspn@plt+0x493c>
   15544:	bl	10e3c <__fprintf_chk@plt>
   15548:	b	154bc <strspn@plt+0x45f0>
   1554c:	ldr	r1, [pc, #696]	; 1580c <strspn@plt+0x4940>
   15550:	mov	r2, #5
   15554:	mov	r0, #0
   15558:	bl	10cf8 <dcgettext@plt>
   1555c:	ldr	r2, [r4, #32]
   15560:	ldr	r3, [r4, #28]
   15564:	ldr	r1, [r4, #24]
   15568:	str	r2, [sp, #28]
   1556c:	ldr	r2, [r4, #20]
   15570:	str	r3, [sp, #24]
   15574:	ldr	r3, [r4, #16]
   15578:	str	r1, [sp, #20]
   1557c:	ldr	r1, [r4, #12]
   15580:	str	r2, [sp, #16]
   15584:	ldr	r2, [r4, #8]
   15588:	str	r3, [sp, #12]
   1558c:	ldr	r3, [r4, #4]
   15590:	str	r1, [sp, #8]
   15594:	str	r2, [sp, #4]
   15598:	str	r3, [sp]
   1559c:	mov	r1, #1
   155a0:	ldr	r3, [r4]
   155a4:	mov	r2, r0
   155a8:	mov	r0, r5
   155ac:	bl	10e3c <__fprintf_chk@plt>
   155b0:	add	sp, sp, #32
   155b4:	pop	{r4, r5, r6, pc}
   155b8:	mov	r2, #5
   155bc:	ldr	r1, [pc, #588]	; 15810 <strspn@plt+0x4944>
   155c0:	mov	r0, #0
   155c4:	bl	10cf8 <dcgettext@plt>
   155c8:	ldr	r3, [r4]
   155cc:	mov	r1, #1
   155d0:	mov	r2, r0
   155d4:	mov	r0, r5
   155d8:	add	sp, sp, #32
   155dc:	pop	{r4, r5, r6, lr}
   155e0:	b	10e3c <__fprintf_chk@plt>
   155e4:	mov	r2, #5
   155e8:	ldr	r1, [pc, #548]	; 15814 <strspn@plt+0x4948>
   155ec:	mov	r0, #0
   155f0:	bl	10cf8 <dcgettext@plt>
   155f4:	ldr	r2, [r4, #4]
   155f8:	ldr	r3, [r4]
   155fc:	mov	r1, #1
   15600:	str	r2, [sp, #48]	; 0x30
   15604:	mov	r2, r0
   15608:	mov	r0, r5
   1560c:	add	sp, sp, #32
   15610:	pop	{r4, r5, r6, lr}
   15614:	b	10e3c <__fprintf_chk@plt>
   15618:	mov	r2, #5
   1561c:	ldr	r1, [pc, #500]	; 15818 <strspn@plt+0x494c>
   15620:	mov	r0, #0
   15624:	bl	10cf8 <dcgettext@plt>
   15628:	ldr	r2, [r4, #8]
   1562c:	ldr	r3, [r4, #4]
   15630:	mov	r1, #1
   15634:	str	r2, [sp, #52]	; 0x34
   15638:	str	r3, [sp, #48]	; 0x30
   1563c:	ldr	r3, [r4]
   15640:	mov	r2, r0
   15644:	mov	r0, r5
   15648:	add	sp, sp, #32
   1564c:	pop	{r4, r5, r6, lr}
   15650:	b	10e3c <__fprintf_chk@plt>
   15654:	mov	r2, #5
   15658:	ldr	r1, [pc, #444]	; 1581c <strspn@plt+0x4950>
   1565c:	mov	r0, #0
   15660:	bl	10cf8 <dcgettext@plt>
   15664:	ldr	r1, [r4, #12]
   15668:	ldr	r2, [r4, #8]
   1566c:	ldr	r3, [r4, #4]
   15670:	str	r1, [sp, #8]
   15674:	str	r2, [sp, #4]
   15678:	str	r3, [sp]
   1567c:	mov	r1, #1
   15680:	ldr	r3, [r4]
   15684:	mov	r2, r0
   15688:	mov	r0, r5
   1568c:	bl	10e3c <__fprintf_chk@plt>
   15690:	b	155b0 <strspn@plt+0x46e4>
   15694:	mov	r2, #5
   15698:	ldr	r1, [pc, #384]	; 15820 <strspn@plt+0x4954>
   1569c:	mov	r0, #0
   156a0:	bl	10cf8 <dcgettext@plt>
   156a4:	ldr	r3, [r4, #16]
   156a8:	ldr	r1, [r4, #12]
   156ac:	ldr	r2, [r4, #8]
   156b0:	str	r3, [sp, #12]
   156b4:	ldr	r3, [r4, #4]
   156b8:	str	r1, [sp, #8]
   156bc:	str	r2, [sp, #4]
   156c0:	str	r3, [sp]
   156c4:	mov	r1, #1
   156c8:	ldr	r3, [r4]
   156cc:	mov	r2, r0
   156d0:	mov	r0, r5
   156d4:	bl	10e3c <__fprintf_chk@plt>
   156d8:	b	155b0 <strspn@plt+0x46e4>
   156dc:	mov	r2, #5
   156e0:	ldr	r1, [pc, #316]	; 15824 <strspn@plt+0x4958>
   156e4:	mov	r0, #0
   156e8:	bl	10cf8 <dcgettext@plt>
   156ec:	ldr	r2, [r4, #20]
   156f0:	ldr	r3, [r4, #16]
   156f4:	ldr	r1, [r4, #12]
   156f8:	str	r2, [sp, #16]
   156fc:	ldr	r2, [r4, #8]
   15700:	str	r3, [sp, #12]
   15704:	ldr	r3, [r4, #4]
   15708:	str	r1, [sp, #8]
   1570c:	str	r2, [sp, #4]
   15710:	str	r3, [sp]
   15714:	mov	r1, #1
   15718:	ldr	r3, [r4]
   1571c:	mov	r2, r0
   15720:	mov	r0, r5
   15724:	bl	10e3c <__fprintf_chk@plt>
   15728:	b	155b0 <strspn@plt+0x46e4>
   1572c:	mov	r2, #5
   15730:	ldr	r1, [pc, #240]	; 15828 <strspn@plt+0x495c>
   15734:	mov	r0, #0
   15738:	bl	10cf8 <dcgettext@plt>
   1573c:	ldr	r1, [r4, #24]
   15740:	ldr	r2, [r4, #20]
   15744:	ldr	r3, [r4, #16]
   15748:	str	r1, [sp, #20]
   1574c:	ldr	r1, [r4, #12]
   15750:	str	r2, [sp, #16]
   15754:	ldr	r2, [r4, #8]
   15758:	str	r3, [sp, #12]
   1575c:	ldr	r3, [r4, #4]
   15760:	str	r1, [sp, #8]
   15764:	str	r2, [sp, #4]
   15768:	str	r3, [sp]
   1576c:	mov	r1, #1
   15770:	ldr	r3, [r4]
   15774:	mov	r2, r0
   15778:	mov	r0, r5
   1577c:	bl	10e3c <__fprintf_chk@plt>
   15780:	b	155b0 <strspn@plt+0x46e4>
   15784:	mov	r2, #5
   15788:	ldr	r1, [pc, #156]	; 1582c <strspn@plt+0x4960>
   1578c:	mov	r0, #0
   15790:	bl	10cf8 <dcgettext@plt>
   15794:	ldr	r3, [r4, #28]
   15798:	ldr	r1, [r4, #24]
   1579c:	ldr	r2, [r4, #20]
   157a0:	str	r3, [sp, #24]
   157a4:	ldr	r3, [r4, #16]
   157a8:	str	r1, [sp, #20]
   157ac:	ldr	r1, [r4, #12]
   157b0:	str	r2, [sp, #16]
   157b4:	ldr	r2, [r4, #8]
   157b8:	str	r3, [sp, #12]
   157bc:	ldr	r3, [r4, #4]
   157c0:	str	r1, [sp, #8]
   157c4:	str	r2, [sp, #4]
   157c8:	str	r3, [sp]
   157cc:	mov	r1, #1
   157d0:	ldr	r3, [r4]
   157d4:	mov	r2, r0
   157d8:	mov	r0, r5
   157dc:	bl	10e3c <__fprintf_chk@plt>
   157e0:	b	155b0 <strspn@plt+0x46e4>
   157e4:	mov	r2, #5
   157e8:	ldr	r1, [pc, #64]	; 15830 <strspn@plt+0x4964>
   157ec:	b	15554 <strspn@plt+0x4688>
   157f0:	bl	10eb4 <abort@plt>
   157f4:	andeq	r6, r1, r0, lsl pc
   157f8:	andeq	r6, r1, r4, lsr #30
   157fc:	andeq	r0, r0, r2, ror #15
   15800:	strdeq	r7, [r1], -r8
   15804:	andeq	r6, r1, r8, lsr #30
   15808:	andeq	r6, r1, ip, lsl pc
   1580c:	andeq	r7, r1, r0, lsl #2
   15810:	strdeq	r6, [r1], -r4
   15814:	andeq	r7, r1, r4
   15818:	andeq	r7, r1, ip, lsl r0
   1581c:	andeq	r7, r1, r8, lsr r0
   15820:	andeq	r7, r1, r8, asr r0
   15824:	andeq	r7, r1, ip, ror r0
   15828:	andeq	r7, r1, r4, lsr #1
   1582c:	ldrdeq	r7, [r1], -r0
   15830:	andeq	r7, r1, r4, lsr r1
   15834:	push	{r4, r5, lr}
   15838:	sub	sp, sp, #12
   1583c:	ldr	r5, [sp, #24]
   15840:	ldr	ip, [r5]
   15844:	cmp	ip, #0
   15848:	beq	15864 <strspn@plt+0x4998>
   1584c:	mov	lr, r5
   15850:	mov	ip, #0
   15854:	ldr	r4, [lr, #4]!
   15858:	add	ip, ip, #1
   1585c:	cmp	r4, #0
   15860:	bne	15854 <strspn@plt+0x4988>
   15864:	stm	sp, {r5, ip}
   15868:	bl	1548c <strspn@plt+0x45c0>
   1586c:	add	sp, sp, #12
   15870:	pop	{r4, r5, pc}
   15874:	push	{r4, r5, r6, lr}
   15878:	sub	sp, sp, #56	; 0x38
   1587c:	ldr	r6, [pc, #88]	; 158dc <strspn@plt+0x4a10>
   15880:	ldr	r5, [sp, #72]	; 0x48
   15884:	add	r4, sp, #8
   15888:	ldr	ip, [r6]
   1588c:	str	ip, [sp, #52]	; 0x34
   15890:	mov	ip, #0
   15894:	ldr	lr, [r5], #4
   15898:	cmp	lr, #0
   1589c:	str	lr, [r4, #4]!
   158a0:	beq	158b0 <strspn@plt+0x49e4>
   158a4:	add	ip, ip, #1
   158a8:	cmp	ip, #10
   158ac:	bne	15894 <strspn@plt+0x49c8>
   158b0:	add	lr, sp, #12
   158b4:	str	ip, [sp, #4]
   158b8:	str	lr, [sp]
   158bc:	bl	1548c <strspn@plt+0x45c0>
   158c0:	ldr	r2, [sp, #52]	; 0x34
   158c4:	ldr	r3, [r6]
   158c8:	cmp	r2, r3
   158cc:	bne	158d8 <strspn@plt+0x4a0c>
   158d0:	add	sp, sp, #56	; 0x38
   158d4:	pop	{r4, r5, r6, pc}
   158d8:	bl	10d04 <__stack_chk_fail@plt>
   158dc:	andeq	r7, r2, r8, lsl #30
   158e0:	push	{r3}		; (str r3, [sp, #-4]!)
   158e4:	mov	ip, #0
   158e8:	push	{r4, r5, r6, lr}
   158ec:	sub	sp, sp, #60	; 0x3c
   158f0:	ldr	r6, [pc, #100]	; 1595c <strspn@plt+0x4a90>
   158f4:	add	r5, sp, #8
   158f8:	add	r4, sp, #80	; 0x50
   158fc:	ldr	r3, [r6]
   15900:	str	r4, [sp, #8]
   15904:	str	r3, [sp, #52]	; 0x34
   15908:	ldr	r3, [sp, #76]	; 0x4c
   1590c:	ldr	lr, [r4], #4
   15910:	cmp	lr, #0
   15914:	str	lr, [r5, #4]!
   15918:	beq	15928 <strspn@plt+0x4a5c>
   1591c:	add	ip, ip, #1
   15920:	cmp	ip, #10
   15924:	bne	1590c <strspn@plt+0x4a40>
   15928:	add	lr, sp, #12
   1592c:	str	ip, [sp, #4]
   15930:	str	lr, [sp]
   15934:	bl	1548c <strspn@plt+0x45c0>
   15938:	ldr	r2, [sp, #52]	; 0x34
   1593c:	ldr	r3, [r6]
   15940:	cmp	r2, r3
   15944:	bne	15958 <strspn@plt+0x4a8c>
   15948:	add	sp, sp, #60	; 0x3c
   1594c:	pop	{r4, r5, r6, lr}
   15950:	add	sp, sp, #4
   15954:	bx	lr
   15958:	bl	10d04 <__stack_chk_fail@plt>
   1595c:	andeq	r7, r2, r8, lsl #30
   15960:	push	{r4, lr}
   15964:	mov	r2, #5
   15968:	ldr	r1, [pc, #88]	; 159c8 <strspn@plt+0x4afc>
   1596c:	mov	r0, #0
   15970:	bl	10cf8 <dcgettext@plt>
   15974:	ldr	r2, [pc, #80]	; 159cc <strspn@plt+0x4b00>
   15978:	mov	r1, r0
   1597c:	mov	r0, #1
   15980:	bl	10e24 <__printf_chk@plt>
   15984:	mov	r2, #5
   15988:	ldr	r1, [pc, #64]	; 159d0 <strspn@plt+0x4b04>
   1598c:	mov	r0, #0
   15990:	bl	10cf8 <dcgettext@plt>
   15994:	ldr	r3, [pc, #56]	; 159d4 <strspn@plt+0x4b08>
   15998:	ldr	r2, [pc, #56]	; 159d8 <strspn@plt+0x4b0c>
   1599c:	mov	r1, r0
   159a0:	mov	r0, #1
   159a4:	bl	10e24 <__printf_chk@plt>
   159a8:	ldr	r1, [pc, #44]	; 159dc <strspn@plt+0x4b10>
   159ac:	mov	r2, #5
   159b0:	mov	r0, #0
   159b4:	bl	10cf8 <dcgettext@plt>
   159b8:	ldr	r3, [pc, #32]	; 159e0 <strspn@plt+0x4b14>
   159bc:	pop	{r4, lr}
   159c0:	ldr	r1, [r3]
   159c4:	b	10c80 <fputs_unlocked@plt>
   159c8:	andeq	r7, r1, r0, ror r1
   159cc:	andeq	r7, r1, r8, lsl #3
   159d0:	andeq	r7, r1, r0, lsr #3
   159d4:	andeq	r6, r1, r4, lsr #22
   159d8:	andeq	r6, r1, ip, asr #22
   159dc:			; <UNDEFINED> instruction: 0x000171b4
   159e0:	andeq	r8, r2, r4, asr #2
   159e4:	push	{r4, lr}
   159e8:	mov	r4, r0
   159ec:	bl	10d94 <malloc@plt>
   159f0:	adds	r4, r4, #0
   159f4:	movne	r4, #1
   159f8:	cmp	r0, #0
   159fc:	movne	r4, #0
   15a00:	cmp	r4, #0
   15a04:	popeq	{r4, pc}
   15a08:	bl	15c2c <strspn@plt+0x4d60>
   15a0c:	push	{r4, r5, r6, lr}
   15a10:	umull	r4, r5, r0, r1
   15a14:	adds	r3, r5, #0
   15a18:	movne	r3, #1
   15a1c:	cmp	r4, #0
   15a20:	blt	15a38 <strspn@plt+0x4b6c>
   15a24:	cmp	r3, #0
   15a28:	bne	15a38 <strspn@plt+0x4b6c>
   15a2c:	mul	r0, r1, r0
   15a30:	pop	{r4, r5, r6, lr}
   15a34:	b	159e4 <strspn@plt+0x4b18>
   15a38:	bl	15c2c <strspn@plt+0x4d60>
   15a3c:	b	159e4 <strspn@plt+0x4b18>
   15a40:	adds	r3, r0, #0
   15a44:	movne	r3, #1
   15a48:	cmp	r1, #0
   15a4c:	movne	r3, #0
   15a50:	cmp	r3, #0
   15a54:	push	{r4, lr}
   15a58:	bne	15a80 <strspn@plt+0x4bb4>
   15a5c:	mov	r4, r1
   15a60:	bl	10d10 <realloc@plt>
   15a64:	adds	r4, r4, #0
   15a68:	movne	r4, #1
   15a6c:	cmp	r0, #0
   15a70:	movne	r4, #0
   15a74:	cmp	r4, #0
   15a78:	popeq	{r4, pc}
   15a7c:	bl	15c2c <strspn@plt+0x4d60>
   15a80:	bl	10cbc <free@plt>
   15a84:	mov	r0, #0
   15a88:	pop	{r4, pc}
   15a8c:	push	{r4, r5, r6, lr}
   15a90:	umull	r4, r5, r1, r2
   15a94:	adds	r3, r5, #0
   15a98:	movne	r3, #1
   15a9c:	cmp	r4, #0
   15aa0:	blt	15ab8 <strspn@plt+0x4bec>
   15aa4:	cmp	r3, #0
   15aa8:	bne	15ab8 <strspn@plt+0x4bec>
   15aac:	mul	r1, r2, r1
   15ab0:	pop	{r4, r5, r6, lr}
   15ab4:	b	15a40 <strspn@plt+0x4b74>
   15ab8:	bl	15c2c <strspn@plt+0x4d60>
   15abc:	push	{r4, r5, r6, r7, r8, lr}
   15ac0:	subs	r7, r0, #0
   15ac4:	mov	r6, r1
   15ac8:	mov	r5, r2
   15acc:	ldr	r4, [r1]
   15ad0:	beq	15b04 <strspn@plt+0x4c38>
   15ad4:	mov	r1, r2
   15ad8:	ldr	r0, [pc, #104]	; 15b48 <strspn@plt+0x4c7c>
   15adc:	bl	16164 <strspn@plt+0x5298>
   15ae0:	cmp	r0, r4
   15ae4:	bls	15b28 <strspn@plt+0x4c5c>
   15ae8:	add	r3, r4, #1
   15aec:	add	r4, r3, r4, lsr #1
   15af0:	str	r4, [r6]
   15af4:	mul	r1, r5, r4
   15af8:	mov	r0, r7
   15afc:	pop	{r4, r5, r6, r7, r8, lr}
   15b00:	b	15a40 <strspn@plt+0x4b74>
   15b04:	cmp	r4, #0
   15b08:	beq	15b2c <strspn@plt+0x4c60>
   15b0c:	umull	r0, r1, r4, r5
   15b10:	adds	r3, r1, #0
   15b14:	movne	r3, #1
   15b18:	cmp	r0, #0
   15b1c:	blt	15b28 <strspn@plt+0x4c5c>
   15b20:	cmp	r3, #0
   15b24:	beq	15af0 <strspn@plt+0x4c24>
   15b28:	bl	15c2c <strspn@plt+0x4d60>
   15b2c:	mov	r1, r2
   15b30:	mov	r0, #64	; 0x40
   15b34:	bl	16164 <strspn@plt+0x5298>
   15b38:	cmp	r5, #64	; 0x40
   15b3c:	movls	r4, r0
   15b40:	addhi	r4, r0, #1
   15b44:	b	15b0c <strspn@plt+0x4c40>
   15b48:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   15b4c:	cmp	r0, #0
   15b50:	ldr	r3, [r1]
   15b54:	beq	15b78 <strspn@plt+0x4cac>
   15b58:	ldr	r2, [pc, #60]	; 15b9c <strspn@plt+0x4cd0>
   15b5c:	cmp	r3, r2
   15b60:	bhi	15b94 <strspn@plt+0x4cc8>
   15b64:	add	r2, r3, #1
   15b68:	add	r3, r2, r3, lsr #1
   15b6c:	str	r3, [r1]
   15b70:	mov	r1, r3
   15b74:	b	15a40 <strspn@plt+0x4b74>
   15b78:	cmp	r3, #0
   15b7c:	bne	15b90 <strspn@plt+0x4cc4>
   15b80:	mov	r3, #64	; 0x40
   15b84:	str	r3, [r1]
   15b88:	mov	r1, r3
   15b8c:	b	15a40 <strspn@plt+0x4b74>
   15b90:	bge	15b6c <strspn@plt+0x4ca0>
   15b94:	push	{r4, lr}
   15b98:	bl	15c2c <strspn@plt+0x4d60>
   15b9c:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   15ba0:	push	{r4, lr}
   15ba4:	mov	r4, r0
   15ba8:	bl	159e4 <strspn@plt+0x4b18>
   15bac:	mov	r2, r4
   15bb0:	mov	r1, #0
   15bb4:	pop	{r4, lr}
   15bb8:	b	10e18 <memset@plt>
   15bbc:	push	{r4, r5, r6, lr}
   15bc0:	umull	r4, r5, r0, r1
   15bc4:	adds	r3, r5, #0
   15bc8:	movne	r3, #1
   15bcc:	cmp	r4, #0
   15bd0:	blt	15be8 <strspn@plt+0x4d1c>
   15bd4:	cmp	r3, #0
   15bd8:	bne	15be8 <strspn@plt+0x4d1c>
   15bdc:	bl	10c74 <calloc@plt>
   15be0:	cmp	r0, #0
   15be4:	popne	{r4, r5, r6, pc}
   15be8:	bl	15c2c <strspn@plt+0x4d60>
   15bec:	push	{r4, r5, r6, lr}
   15bf0:	mov	r4, r1
   15bf4:	mov	r5, r0
   15bf8:	mov	r0, r1
   15bfc:	bl	159e4 <strspn@plt+0x4b18>
   15c00:	mov	r2, r4
   15c04:	mov	r1, r5
   15c08:	pop	{r4, r5, r6, lr}
   15c0c:	b	10cd4 <memcpy@plt>
   15c10:	push	{r4, lr}
   15c14:	mov	r4, r0
   15c18:	bl	10df4 <strlen@plt>
   15c1c:	add	r1, r0, #1
   15c20:	mov	r0, r4
   15c24:	pop	{r4, lr}
   15c28:	b	15bec <strspn@plt+0x4d20>
   15c2c:	ldr	r3, [pc, #44]	; 15c60 <strspn@plt+0x4d94>
   15c30:	push	{r4, lr}
   15c34:	mov	r2, #5
   15c38:	ldr	r1, [pc, #36]	; 15c64 <strspn@plt+0x4d98>
   15c3c:	mov	r0, #0
   15c40:	ldr	r4, [r3]
   15c44:	bl	10cf8 <dcgettext@plt>
   15c48:	ldr	r2, [pc, #24]	; 15c68 <strspn@plt+0x4d9c>
   15c4c:	mov	r1, #0
   15c50:	mov	r3, r0
   15c54:	mov	r0, r4
   15c58:	bl	10d88 <error@plt>
   15c5c:	bl	10eb4 <abort@plt>
   15c60:	andeq	r8, r2, r8, ror #1
   15c64:	andeq	r7, r1, r8, lsr #4
   15c68:	andeq	r6, r1, r0, ror sp
   15c6c:	mov	r1, #0
   15c70:	push	{r4, lr}
   15c74:	mov	r0, r1
   15c78:	bl	10ddc <getcwd@plt>
   15c7c:	subs	r4, r0, #0
   15c80:	beq	15c8c <strspn@plt+0x4dc0>
   15c84:	mov	r0, r4
   15c88:	pop	{r4, pc}
   15c8c:	bl	10e00 <__errno_location@plt>
   15c90:	ldr	r3, [r0]
   15c94:	cmp	r3, #12
   15c98:	bne	15c84 <strspn@plt+0x4db8>
   15c9c:	bl	15c2c <strspn@plt+0x4d60>
   15ca0:	push	{r4, r5, r6, r7, r8, lr}
   15ca4:	subs	r7, r0, #0
   15ca8:	ldr	r5, [pc, #108]	; 15d1c <strspn@plt+0x4e50>
   15cac:	sub	sp, sp, #8
   15cb0:	mov	r8, r1
   15cb4:	ldr	r1, [r5]
   15cb8:	moveq	r7, sp
   15cbc:	str	r1, [sp, #4]
   15cc0:	mov	r0, r7
   15cc4:	mov	r1, r8
   15cc8:	mov	r6, r2
   15ccc:	bl	10d7c <mbrtowc@plt>
   15cd0:	cmp	r6, #0
   15cd4:	cmnne	r0, #3
   15cd8:	mov	r4, r0
   15cdc:	bhi	15cfc <strspn@plt+0x4e30>
   15ce0:	ldr	r2, [sp, #4]
   15ce4:	ldr	r3, [r5]
   15ce8:	mov	r0, r4
   15cec:	cmp	r2, r3
   15cf0:	bne	15d18 <strspn@plt+0x4e4c>
   15cf4:	add	sp, sp, #8
   15cf8:	pop	{r4, r5, r6, r7, r8, pc}
   15cfc:	mov	r0, #0
   15d00:	bl	15f08 <strspn@plt+0x503c>
   15d04:	cmp	r0, #0
   15d08:	moveq	r4, #1
   15d0c:	ldrbeq	r3, [r8]
   15d10:	streq	r3, [r7]
   15d14:	b	15ce0 <strspn@plt+0x4e14>
   15d18:	bl	10d04 <__stack_chk_fail@plt>
   15d1c:	andeq	r7, r2, r8, lsl #30
   15d20:	push	{r4, r5, r6, lr}
   15d24:	mov	r4, r0
   15d28:	bl	10d70 <__fpending@plt>
   15d2c:	ldr	r5, [r4]
   15d30:	and	r5, r5, #32
   15d34:	mov	r6, r0
   15d38:	mov	r0, r4
   15d3c:	bl	15fc4 <strspn@plt+0x50f8>
   15d40:	cmp	r5, #0
   15d44:	mov	r4, r0
   15d48:	bne	15d74 <strspn@plt+0x4ea8>
   15d4c:	cmp	r0, #0
   15d50:	beq	15d6c <strspn@plt+0x4ea0>
   15d54:	cmp	r6, #0
   15d58:	bne	15d8c <strspn@plt+0x4ec0>
   15d5c:	bl	10e00 <__errno_location@plt>
   15d60:	ldr	r4, [r0]
   15d64:	subs	r4, r4, #9
   15d68:	mvnne	r4, #0
   15d6c:	mov	r0, r4
   15d70:	pop	{r4, r5, r6, pc}
   15d74:	cmp	r0, #0
   15d78:	bne	15d8c <strspn@plt+0x4ec0>
   15d7c:	bl	10e00 <__errno_location@plt>
   15d80:	str	r4, [r0]
   15d84:	mvn	r4, #0
   15d88:	b	15d6c <strspn@plt+0x4ea0>
   15d8c:	mvn	r4, #0
   15d90:	b	15d6c <strspn@plt+0x4ea0>
   15d94:	push	{r4, lr}
   15d98:	bl	15e10 <strspn@plt+0x4f44>
   15d9c:	cmp	r0, #0
   15da0:	popne	{r4, pc}
   15da4:	bl	15c2c <strspn@plt+0x4d60>
   15da8:	push	{r4, r5, r6, lr}
   15dac:	mov	r4, r0
   15db0:	ldrb	ip, [r0]
   15db4:	sub	r5, ip, #47	; 0x2f
   15db8:	bl	15e68 <strspn@plt+0x4f9c>
   15dbc:	clz	r5, r5
   15dc0:	lsr	r5, r5, #5
   15dc4:	sub	r0, r0, r4
   15dc8:	cmp	r0, r5
   15dcc:	popls	{r4, r5, r6, pc}
   15dd0:	add	r3, r4, r0
   15dd4:	ldrb	r3, [r3, #-1]
   15dd8:	cmp	r3, #47	; 0x2f
   15ddc:	popne	{r4, r5, r6, pc}
   15de0:	sub	r0, r0, #2
   15de4:	sub	ip, r4, #1
   15de8:	add	r3, r4, r0
   15dec:	add	ip, ip, r5
   15df0:	rsb	r2, r4, #1
   15df4:	cmp	r3, ip
   15df8:	add	r0, r2, r3
   15dfc:	popeq	{r4, r5, r6, pc}
   15e00:	ldrb	r1, [r3], #-1
   15e04:	cmp	r1, #47	; 0x2f
   15e08:	beq	15df4 <strspn@plt+0x4f28>
   15e0c:	pop	{r4, r5, r6, pc}
   15e10:	push	{r4, r5, r6, lr}
   15e14:	mov	r6, r0
   15e18:	bl	15da8 <strspn@plt+0x4edc>
   15e1c:	add	r3, r0, #1
   15e20:	mov	r4, r0
   15e24:	cmp	r0, #0
   15e28:	movne	r0, r3
   15e2c:	addeq	r0, r3, #1
   15e30:	bl	10d94 <malloc@plt>
   15e34:	subs	r5, r0, #0
   15e38:	beq	15e60 <strspn@plt+0x4f94>
   15e3c:	mov	r2, r4
   15e40:	mov	r1, r6
   15e44:	bl	10cd4 <memcpy@plt>
   15e48:	cmp	r4, #0
   15e4c:	moveq	r3, #46	; 0x2e
   15e50:	moveq	r4, #1
   15e54:	strbeq	r3, [r5]
   15e58:	mov	r3, #0
   15e5c:	strb	r3, [r5, r4]
   15e60:	mov	r0, r5
   15e64:	pop	{r4, r5, r6, pc}
   15e68:	ldrb	r3, [r0]
   15e6c:	cmp	r3, #47	; 0x2f
   15e70:	bne	15e80 <strspn@plt+0x4fb4>
   15e74:	ldrb	r3, [r0, #1]!
   15e78:	cmp	r3, #47	; 0x2f
   15e7c:	beq	15e74 <strspn@plt+0x4fa8>
   15e80:	cmp	r3, #0
   15e84:	bxeq	lr
   15e88:	mov	r2, r0
   15e8c:	mov	r1, #0
   15e90:	cmp	r3, #47	; 0x2f
   15e94:	moveq	r1, #1
   15e98:	beq	15ea8 <strspn@plt+0x4fdc>
   15e9c:	cmp	r1, #0
   15ea0:	movne	r0, r2
   15ea4:	movne	r1, #0
   15ea8:	ldrb	r3, [r2, #1]!
   15eac:	cmp	r3, #0
   15eb0:	bne	15e90 <strspn@plt+0x4fc4>
   15eb4:	bx	lr
   15eb8:	push	{r4, lr}
   15ebc:	mov	r4, r0
   15ec0:	bl	10df4 <strlen@plt>
   15ec4:	cmp	r0, #1
   15ec8:	popls	{r4, pc}
   15ecc:	add	r2, r4, r0
   15ed0:	mov	r3, r0
   15ed4:	ldrb	r2, [r2, #-1]
   15ed8:	cmp	r2, #47	; 0x2f
   15edc:	subeq	r3, r0, #2
   15ee0:	addeq	r3, r4, r3
   15ee4:	rsbeq	r1, r4, #1
   15ee8:	popne	{r4, pc}
   15eec:	cmp	r3, r4
   15ef0:	add	r0, r1, r3
   15ef4:	popeq	{r4, pc}
   15ef8:	ldrb	r2, [r3], #-1
   15efc:	cmp	r2, #47	; 0x2f
   15f00:	popne	{r4, pc}
   15f04:	b	15eec <strspn@plt+0x5020>
   15f08:	push	{r4, lr}
   15f0c:	mov	r1, #0
   15f10:	bl	10e6c <setlocale@plt>
   15f14:	subs	r4, r0, #0
   15f18:	beq	15f44 <strspn@plt+0x5078>
   15f1c:	ldr	r1, [pc, #40]	; 15f4c <strspn@plt+0x5080>
   15f20:	bl	10c98 <strcmp@plt>
   15f24:	cmp	r0, #0
   15f28:	popeq	{r4, pc}
   15f2c:	mov	r0, r4
   15f30:	ldr	r1, [pc, #24]	; 15f50 <strspn@plt+0x5084>
   15f34:	bl	10c98 <strcmp@plt>
   15f38:	adds	r0, r0, #0
   15f3c:	movne	r0, #1
   15f40:	pop	{r4, pc}
   15f44:	mov	r0, #1
   15f48:	pop	{r4, pc}
   15f4c:	andeq	r7, r1, ip, lsr r2
   15f50:	andeq	r7, r1, r0, asr #4
   15f54:	ldrb	r3, [r0]
   15f58:	cmp	r3, #0
   15f5c:	beq	15f88 <strspn@plt+0x50bc>
   15f60:	mov	r2, #0
   15f64:	push	{r4, lr}
   15f68:	add	r2, r3, r2, ror #23
   15f6c:	ldrb	r3, [r0, #1]!
   15f70:	cmp	r3, #0
   15f74:	bne	15f68 <strspn@plt+0x509c>
   15f78:	mov	r0, r2
   15f7c:	bl	16350 <strspn@plt+0x5484>
   15f80:	mov	r0, r1
   15f84:	pop	{r4, pc}
   15f88:	mov	r0, r3
   15f8c:	bx	lr
   15f90:	push	{r4, lr}
   15f94:	mov	r0, #14
   15f98:	bl	10e84 <nl_langinfo@plt>
   15f9c:	cmp	r0, #0
   15fa0:	beq	15fb8 <strspn@plt+0x50ec>
   15fa4:	ldrb	r2, [r0]
   15fa8:	ldr	r3, [pc, #16]	; 15fc0 <strspn@plt+0x50f4>
   15fac:	cmp	r2, #0
   15fb0:	moveq	r0, r3
   15fb4:	pop	{r4, pc}
   15fb8:	ldr	r0, [pc]	; 15fc0 <strspn@plt+0x50f4>
   15fbc:	pop	{r4, pc}
   15fc0:	andeq	r7, r1, r8, asr #4
   15fc4:	push	{r4, r5, lr}
   15fc8:	sub	sp, sp, #12
   15fcc:	mov	r4, r0
   15fd0:	bl	10e30 <fileno@plt>
   15fd4:	cmp	r0, #0
   15fd8:	mov	r0, r4
   15fdc:	blt	16058 <strspn@plt+0x518c>
   15fe0:	bl	10dac <__freading@plt>
   15fe4:	cmp	r0, #0
   15fe8:	bne	16024 <strspn@plt+0x5158>
   15fec:	mov	r0, r4
   15ff0:	bl	16064 <strspn@plt+0x5198>
   15ff4:	cmp	r0, #0
   15ff8:	beq	16054 <strspn@plt+0x5188>
   15ffc:	bl	10e00 <__errno_location@plt>
   16000:	mov	r5, r0
   16004:	mov	r0, r4
   16008:	ldr	r4, [r5]
   1600c:	bl	10e48 <fclose@plt>
   16010:	cmp	r4, #0
   16014:	mvnne	r0, #0
   16018:	strne	r4, [r5]
   1601c:	add	sp, sp, #12
   16020:	pop	{r4, r5, pc}
   16024:	mov	r0, r4
   16028:	bl	10e30 <fileno@plt>
   1602c:	mov	r3, #1
   16030:	str	r3, [sp]
   16034:	mov	r2, #0
   16038:	mov	r3, #0
   1603c:	bl	10d58 <lseek64@plt>
   16040:	mvn	r3, #0
   16044:	mvn	r2, #0
   16048:	cmp	r1, r3
   1604c:	cmpeq	r0, r2
   16050:	bne	15fec <strspn@plt+0x5120>
   16054:	mov	r0, r4
   16058:	add	sp, sp, #12
   1605c:	pop	{r4, r5, lr}
   16060:	b	10e48 <fclose@plt>
   16064:	push	{r4, lr}
   16068:	subs	r4, r0, #0
   1606c:	sub	sp, sp, #8
   16070:	beq	1608c <strspn@plt+0x51c0>
   16074:	bl	10dac <__freading@plt>
   16078:	cmp	r0, #0
   1607c:	beq	1608c <strspn@plt+0x51c0>
   16080:	ldr	r3, [r4]
   16084:	tst	r3, #256	; 0x100
   16088:	bne	1609c <strspn@plt+0x51d0>
   1608c:	mov	r0, r4
   16090:	add	sp, sp, #8
   16094:	pop	{r4, lr}
   16098:	b	10ca4 <fflush@plt>
   1609c:	mov	r3, #1
   160a0:	str	r3, [sp]
   160a4:	mov	r2, #0
   160a8:	mov	r3, #0
   160ac:	mov	r0, r4
   160b0:	bl	160c4 <strspn@plt+0x51f8>
   160b4:	mov	r0, r4
   160b8:	add	sp, sp, #8
   160bc:	pop	{r4, lr}
   160c0:	b	10ca4 <fflush@plt>
   160c4:	push	{r4, r5, r6, r7, r8, lr}
   160c8:	sub	sp, sp, #8
   160cc:	ldmib	r0, {ip, lr}
   160d0:	mov	r4, r0
   160d4:	ldr	r5, [sp, #32]
   160d8:	cmp	lr, ip
   160dc:	beq	160f4 <strspn@plt+0x5228>
   160e0:	str	r5, [sp, #32]
   160e4:	mov	r0, r4
   160e8:	add	sp, sp, #8
   160ec:	pop	{r4, r5, r6, r7, r8, lr}
   160f0:	b	10e54 <fseeko64@plt>
   160f4:	ldr	lr, [r0, #20]
   160f8:	ldr	ip, [r0, #16]
   160fc:	cmp	lr, ip
   16100:	bne	160e0 <strspn@plt+0x5214>
   16104:	ldr	r8, [r0, #36]	; 0x24
   16108:	cmp	r8, #0
   1610c:	bne	160e0 <strspn@plt+0x5214>
   16110:	mov	r6, r2
   16114:	mov	r7, r3
   16118:	bl	10e30 <fileno@plt>
   1611c:	mov	r2, r6
   16120:	mov	r3, r7
   16124:	str	r5, [sp]
   16128:	bl	10d58 <lseek64@plt>
   1612c:	mvn	r3, #0
   16130:	mvn	r2, #0
   16134:	cmp	r1, r3
   16138:	cmpeq	r0, r2
   1613c:	beq	1615c <strspn@plt+0x5290>
   16140:	ldr	r3, [r4]
   16144:	strd	r0, [r4, #80]	; 0x50
   16148:	mov	r0, r8
   1614c:	bic	r3, r3, #16
   16150:	str	r3, [r4]
   16154:	add	sp, sp, #8
   16158:	pop	{r4, r5, r6, r7, r8, pc}
   1615c:	mvn	r0, #0
   16160:	b	16154 <strspn@plt+0x5288>
   16164:	subs	r2, r1, #1
   16168:	bxeq	lr
   1616c:	bcc	16344 <strspn@plt+0x5478>
   16170:	cmp	r0, r1
   16174:	bls	16328 <strspn@plt+0x545c>
   16178:	tst	r1, r2
   1617c:	beq	16334 <strspn@plt+0x5468>
   16180:	clz	r3, r0
   16184:	clz	r2, r1
   16188:	sub	r3, r2, r3
   1618c:	rsbs	r3, r3, #31
   16190:	addne	r3, r3, r3, lsl #1
   16194:	mov	r2, #0
   16198:	addne	pc, pc, r3, lsl #2
   1619c:	nop			; (mov r0, r0)
   161a0:	cmp	r0, r1, lsl #31
   161a4:	adc	r2, r2, r2
   161a8:	subcs	r0, r0, r1, lsl #31
   161ac:	cmp	r0, r1, lsl #30
   161b0:	adc	r2, r2, r2
   161b4:	subcs	r0, r0, r1, lsl #30
   161b8:	cmp	r0, r1, lsl #29
   161bc:	adc	r2, r2, r2
   161c0:	subcs	r0, r0, r1, lsl #29
   161c4:	cmp	r0, r1, lsl #28
   161c8:	adc	r2, r2, r2
   161cc:	subcs	r0, r0, r1, lsl #28
   161d0:	cmp	r0, r1, lsl #27
   161d4:	adc	r2, r2, r2
   161d8:	subcs	r0, r0, r1, lsl #27
   161dc:	cmp	r0, r1, lsl #26
   161e0:	adc	r2, r2, r2
   161e4:	subcs	r0, r0, r1, lsl #26
   161e8:	cmp	r0, r1, lsl #25
   161ec:	adc	r2, r2, r2
   161f0:	subcs	r0, r0, r1, lsl #25
   161f4:	cmp	r0, r1, lsl #24
   161f8:	adc	r2, r2, r2
   161fc:	subcs	r0, r0, r1, lsl #24
   16200:	cmp	r0, r1, lsl #23
   16204:	adc	r2, r2, r2
   16208:	subcs	r0, r0, r1, lsl #23
   1620c:	cmp	r0, r1, lsl #22
   16210:	adc	r2, r2, r2
   16214:	subcs	r0, r0, r1, lsl #22
   16218:	cmp	r0, r1, lsl #21
   1621c:	adc	r2, r2, r2
   16220:	subcs	r0, r0, r1, lsl #21
   16224:	cmp	r0, r1, lsl #20
   16228:	adc	r2, r2, r2
   1622c:	subcs	r0, r0, r1, lsl #20
   16230:	cmp	r0, r1, lsl #19
   16234:	adc	r2, r2, r2
   16238:	subcs	r0, r0, r1, lsl #19
   1623c:	cmp	r0, r1, lsl #18
   16240:	adc	r2, r2, r2
   16244:	subcs	r0, r0, r1, lsl #18
   16248:	cmp	r0, r1, lsl #17
   1624c:	adc	r2, r2, r2
   16250:	subcs	r0, r0, r1, lsl #17
   16254:	cmp	r0, r1, lsl #16
   16258:	adc	r2, r2, r2
   1625c:	subcs	r0, r0, r1, lsl #16
   16260:	cmp	r0, r1, lsl #15
   16264:	adc	r2, r2, r2
   16268:	subcs	r0, r0, r1, lsl #15
   1626c:	cmp	r0, r1, lsl #14
   16270:	adc	r2, r2, r2
   16274:	subcs	r0, r0, r1, lsl #14
   16278:	cmp	r0, r1, lsl #13
   1627c:	adc	r2, r2, r2
   16280:	subcs	r0, r0, r1, lsl #13
   16284:	cmp	r0, r1, lsl #12
   16288:	adc	r2, r2, r2
   1628c:	subcs	r0, r0, r1, lsl #12
   16290:	cmp	r0, r1, lsl #11
   16294:	adc	r2, r2, r2
   16298:	subcs	r0, r0, r1, lsl #11
   1629c:	cmp	r0, r1, lsl #10
   162a0:	adc	r2, r2, r2
   162a4:	subcs	r0, r0, r1, lsl #10
   162a8:	cmp	r0, r1, lsl #9
   162ac:	adc	r2, r2, r2
   162b0:	subcs	r0, r0, r1, lsl #9
   162b4:	cmp	r0, r1, lsl #8
   162b8:	adc	r2, r2, r2
   162bc:	subcs	r0, r0, r1, lsl #8
   162c0:	cmp	r0, r1, lsl #7
   162c4:	adc	r2, r2, r2
   162c8:	subcs	r0, r0, r1, lsl #7
   162cc:	cmp	r0, r1, lsl #6
   162d0:	adc	r2, r2, r2
   162d4:	subcs	r0, r0, r1, lsl #6
   162d8:	cmp	r0, r1, lsl #5
   162dc:	adc	r2, r2, r2
   162e0:	subcs	r0, r0, r1, lsl #5
   162e4:	cmp	r0, r1, lsl #4
   162e8:	adc	r2, r2, r2
   162ec:	subcs	r0, r0, r1, lsl #4
   162f0:	cmp	r0, r1, lsl #3
   162f4:	adc	r2, r2, r2
   162f8:	subcs	r0, r0, r1, lsl #3
   162fc:	cmp	r0, r1, lsl #2
   16300:	adc	r2, r2, r2
   16304:	subcs	r0, r0, r1, lsl #2
   16308:	cmp	r0, r1, lsl #1
   1630c:	adc	r2, r2, r2
   16310:	subcs	r0, r0, r1, lsl #1
   16314:	cmp	r0, r1
   16318:	adc	r2, r2, r2
   1631c:	subcs	r0, r0, r1
   16320:	mov	r0, r2
   16324:	bx	lr
   16328:	moveq	r0, #1
   1632c:	movne	r0, #0
   16330:	bx	lr
   16334:	clz	r2, r1
   16338:	rsb	r2, r2, #31
   1633c:	lsr	r0, r0, r2
   16340:	bx	lr
   16344:	cmp	r0, #0
   16348:	mvnne	r0, #0
   1634c:	b	163ac <strspn@plt+0x54e0>
   16350:	cmp	r1, #0
   16354:	beq	16344 <strspn@plt+0x5478>
   16358:	push	{r0, r1, lr}
   1635c:	bl	16164 <strspn@plt+0x5298>
   16360:	pop	{r1, r2, lr}
   16364:	mul	r3, r2, r0
   16368:	sub	r1, r1, r3
   1636c:	bx	lr
   16370:	cmp	r3, #0
   16374:	cmpeq	r2, #0
   16378:	bne	16390 <strspn@plt+0x54c4>
   1637c:	cmp	r1, #0
   16380:	cmpeq	r0, #0
   16384:	mvnne	r1, #0
   16388:	mvnne	r0, #0
   1638c:	b	163ac <strspn@plt+0x54e0>
   16390:	sub	sp, sp, #8
   16394:	push	{sp, lr}
   16398:	bl	163bc <strspn@plt+0x54f0>
   1639c:	ldr	lr, [sp, #4]
   163a0:	add	sp, sp, #8
   163a4:	pop	{r2, r3}
   163a8:	bx	lr
   163ac:	push	{r1, lr}
   163b0:	mov	r0, #8
   163b4:	bl	10c8c <raise@plt>
   163b8:	pop	{r1, pc}
   163bc:	cmp	r1, r3
   163c0:	cmpeq	r0, r2
   163c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163c8:	mov	r4, r0
   163cc:	movcc	r0, #0
   163d0:	mov	r5, r1
   163d4:	ldr	lr, [sp, #36]	; 0x24
   163d8:	movcc	r1, r0
   163dc:	bcc	164d8 <strspn@plt+0x560c>
   163e0:	cmp	r3, #0
   163e4:	clzeq	ip, r2
   163e8:	clzne	ip, r3
   163ec:	addeq	ip, ip, #32
   163f0:	cmp	r5, #0
   163f4:	clzeq	r1, r4
   163f8:	addeq	r1, r1, #32
   163fc:	clzne	r1, r5
   16400:	sub	ip, ip, r1
   16404:	sub	sl, ip, #32
   16408:	lsl	r9, r3, ip
   1640c:	rsb	fp, ip, #32
   16410:	orr	r9, r9, r2, lsl sl
   16414:	orr	r9, r9, r2, lsr fp
   16418:	lsl	r8, r2, ip
   1641c:	cmp	r5, r9
   16420:	cmpeq	r4, r8
   16424:	movcc	r0, #0
   16428:	movcc	r1, r0
   1642c:	bcc	16448 <strspn@plt+0x557c>
   16430:	mov	r0, #1
   16434:	subs	r4, r4, r8
   16438:	lsl	r1, r0, sl
   1643c:	orr	r1, r1, r0, lsr fp
   16440:	lsl	r0, r0, ip
   16444:	sbc	r5, r5, r9
   16448:	cmp	ip, #0
   1644c:	beq	164d8 <strspn@plt+0x560c>
   16450:	lsr	r6, r8, #1
   16454:	orr	r6, r6, r9, lsl #31
   16458:	lsr	r7, r9, #1
   1645c:	mov	r2, ip
   16460:	b	16484 <strspn@plt+0x55b8>
   16464:	subs	r3, r4, r6
   16468:	sbc	r8, r5, r7
   1646c:	adds	r3, r3, r3
   16470:	adc	r8, r8, r8
   16474:	adds	r4, r3, #1
   16478:	adc	r5, r8, #0
   1647c:	subs	r2, r2, #1
   16480:	beq	164a0 <strspn@plt+0x55d4>
   16484:	cmp	r5, r7
   16488:	cmpeq	r4, r6
   1648c:	bcs	16464 <strspn@plt+0x5598>
   16490:	adds	r4, r4, r4
   16494:	adc	r5, r5, r5
   16498:	subs	r2, r2, #1
   1649c:	bne	16484 <strspn@plt+0x55b8>
   164a0:	lsr	r3, r4, ip
   164a4:	orr	r3, r3, r5, lsl fp
   164a8:	lsr	r2, r5, ip
   164ac:	orr	r3, r3, r5, lsr sl
   164b0:	adds	r0, r0, r4
   164b4:	mov	r4, r3
   164b8:	lsl	r3, r2, ip
   164bc:	orr	r3, r3, r4, lsl sl
   164c0:	lsl	ip, r4, ip
   164c4:	orr	r3, r3, r4, lsr fp
   164c8:	adc	r1, r1, r5
   164cc:	subs	r0, r0, ip
   164d0:	mov	r5, r2
   164d4:	sbc	r1, r1, r3
   164d8:	cmp	lr, #0
   164dc:	strdne	r4, [lr]
   164e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   164e8:	mov	r7, r0
   164ec:	ldr	r6, [pc, #72]	; 1653c <strspn@plt+0x5670>
   164f0:	ldr	r5, [pc, #72]	; 16540 <strspn@plt+0x5674>
   164f4:	add	r6, pc, r6
   164f8:	add	r5, pc, r5
   164fc:	sub	r6, r6, r5
   16500:	mov	r8, r1
   16504:	mov	r9, r2
   16508:	bl	10c54 <calloc@plt-0x20>
   1650c:	asrs	r6, r6, #2
   16510:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16514:	mov	r4, #0
   16518:	add	r4, r4, #1
   1651c:	ldr	r3, [r5], #4
   16520:	mov	r2, r9
   16524:	mov	r1, r8
   16528:	mov	r0, r7
   1652c:	blx	r3
   16530:	cmp	r6, r4
   16534:	bne	16518 <strspn@plt+0x564c>
   16538:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1653c:	andeq	r1, r1, r8, lsl #20
   16540:	andeq	r1, r1, r0, lsl #20
   16544:	bx	lr
   16548:	ldr	r3, [pc, #12]	; 1655c <strspn@plt+0x5690>
   1654c:	mov	r1, #0
   16550:	add	r3, pc, r3
   16554:	ldr	r2, [r3]
   16558:	b	10e0c <__cxa_atexit@plt>
   1655c:	andeq	r1, r1, r8, lsl #23

Disassembly of section .fini:

00016560 <.fini>:
   16560:	push	{r3, lr}
   16564:	pop	{r3, pc}
