
raspbian-preinstalled/scrot:     file format elf32-littlearm


Disassembly of section .init:

000114f8 <.init>:
   114f8:	push	{r3, lr}
   114fc:	bl	11c5c <__fdelt_chk@plt+0x354>
   11500:	pop	{r3, pc}

Disassembly of section .plt:

00011504 <XCreateFontCursor@plt-0x14>:
   11504:	push	{lr}		; (str lr, [sp, #-4]!)
   11508:	ldr	lr, [pc, #4]	; 11514 <XCreateFontCursor@plt-0x4>
   1150c:	add	lr, pc, lr
   11510:	ldr	pc, [lr, #8]!
   11514:	andeq	r3, r1, r8, lsl #19

00011518 <XCreateFontCursor@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #77824	; 0x13000
   11520:	ldr	pc, [ip, #2440]!	; 0x988

00011524 <XFree@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #77824	; 0x13000
   1152c:	ldr	pc, [ip, #2432]!	; 0x980

00011530 <_gib_estrdup@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #77824	; 0x13000
   11538:	ldr	pc, [ip, #2424]!	; 0x978

0001153c <XFreeCursor@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #77824	; 0x13000
   11544:	ldr	pc, [ip, #2416]!	; 0x970

00011548 <abort@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #77824	; 0x13000
   11550:	ldr	pc, [ip, #2408]!	; 0x968

00011554 <localtime@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #77824	; 0x13000
   1155c:	ldr	pc, [ip, #2400]!	; 0x960

00011560 <__xstat@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #77824	; 0x13000
   11568:	ldr	pc, [ip, #2392]!	; 0x958

0001156c <XChangeActivePointerGrab@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #77824	; 0x13000
   11574:	ldr	pc, [ip, #2384]!	; 0x950

00011578 <__libc_start_main@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #77824	; 0x13000
   11580:	ldr	pc, [ip, #2376]!	; 0x948

00011584 <gib_list_add_end@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #77824	; 0x13000
   1158c:	ldr	pc, [ip, #2368]!	; 0x940

00011590 <__gmon_start__@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #77824	; 0x13000
   11598:	ldr	pc, [ip, #2360]!	; 0x938

0001159c <imlib_context_set_operation@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #77824	; 0x13000
   115a4:	ldr	pc, [ip, #2352]!	; 0x930

000115a8 <__strcat_chk@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #77824	; 0x13000
   115b0:	ldr	pc, [ip, #2344]!	; 0x928

000115b4 <strncpy@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #77824	; 0x13000
   115bc:	ldr	pc, [ip, #2336]!	; 0x920

000115c0 <XRaiseWindow@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #77824	; 0x13000
   115c8:	ldr	pc, [ip, #2328]!	; 0x918

000115cc <__printf_chk@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #77824	; 0x13000
   115d4:	ldr	pc, [ip, #2320]!	; 0x910

000115d8 <system@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #77824	; 0x13000
   115e0:	ldr	pc, [ip, #2312]!	; 0x908

000115e4 <strchr@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #77824	; 0x13000
   115ec:	ldr	pc, [ip, #2304]!	; 0x900

000115f0 <XUngrabPointer@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #77824	; 0x13000
   115f8:	ldr	pc, [ip, #2296]!	; 0x8f8

000115fc <XGetWindowProperty@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #77824	; 0x13000
   11604:	ldr	pc, [ip, #2288]!	; 0x8f0

00011608 <gib_imlib_image_get_width@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #77824	; 0x13000
   11610:	ldr	pc, [ip, #2280]!	; 0x8e8

00011614 <imlib_context_set_display@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #77824	; 0x13000
   1161c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011620 <imlib_create_image@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #77824	; 0x13000
   11628:	ldr	pc, [ip, #2264]!	; 0x8d8

0001162c <memset@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #77824	; 0x13000
   11634:	ldr	pc, [ip, #2256]!	; 0x8d0

00011638 <XGrabPointer@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #77824	; 0x13000
   11640:	ldr	pc, [ip, #2248]!	; 0x8c8

00011644 <gib_imlib_create_cropped_scaled_image@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #77824	; 0x13000
   1164c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011650 <strrchr@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #77824	; 0x13000
   11658:	ldr	pc, [ip, #2232]!	; 0x8b8

0001165c <XTranslateCoordinates@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #77824	; 0x13000
   11664:	ldr	pc, [ip, #2224]!	; 0x8b0

00011668 <_gib_emalloc@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #77824	; 0x13000
   11670:	ldr	pc, [ip, #2216]!	; 0x8a8

00011674 <imlib_context_set_colormap@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #77824	; 0x13000
   1167c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011680 <XOpenDisplay@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #77824	; 0x13000
   11688:	ldr	pc, [ip, #2200]!	; 0x898

0001168c <__strncat_chk@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #77824	; 0x13000
   11694:	ldr	pc, [ip, #2192]!	; 0x890

00011698 <gib_list_length@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #77824	; 0x13000
   116a0:	ldr	pc, [ip, #2184]!	; 0x888

000116a4 <imlib_image_attach_data_value@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #77824	; 0x13000
   116ac:	ldr	pc, [ip, #2176]!	; 0x880

000116b0 <free@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #77824	; 0x13000
   116b8:	ldr	pc, [ip, #2168]!	; 0x878

000116bc <getopt_long@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #77824	; 0x13000
   116c4:	ldr	pc, [ip, #2160]!	; 0x870

000116c8 <XBell@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #77824	; 0x13000
   116d0:	ldr	pc, [ip, #2152]!	; 0x868

000116d4 <fflush@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #77824	; 0x13000
   116dc:	ldr	pc, [ip, #2144]!	; 0x860

000116e0 <XGetGeometry@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #77824	; 0x13000
   116e8:	ldr	pc, [ip, #2136]!	; 0x858

000116ec <strlen@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #77824	; 0x13000
   116f4:	ldr	pc, [ip, #2128]!	; 0x850

000116f8 <XFreeGC@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #77824	; 0x13000
   11700:	ldr	pc, [ip, #2120]!	; 0x848

00011704 <XDrawRectangle@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #77824	; 0x13000
   1170c:	ldr	pc, [ip, #2112]!	; 0x840

00011710 <imlib_context_set_color_modifier@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #77824	; 0x13000
   11718:	ldr	pc, [ip, #2104]!	; 0x838

0001171c <XNextEvent@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #77824	; 0x13000
   11724:	ldr	pc, [ip, #2096]!	; 0x830

00011728 <XWhitePixel@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #77824	; 0x13000
   11730:	ldr	pc, [ip, #2088]!	; 0x828

00011734 <XScreenNumberOfScreen@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #77824	; 0x13000
   1173c:	ldr	pc, [ip, #2080]!	; 0x820

00011740 <strtol@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #77824	; 0x13000
   11748:	ldr	pc, [ip, #2072]!	; 0x818

0001174c <strcpy@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #77824	; 0x13000
   11754:	ldr	pc, [ip, #2064]!	; 0x810

00011758 <gib_imlib_save_image_with_error_return@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #77824	; 0x13000
   11760:	ldr	pc, [ip, #2056]!	; 0x808

00011764 <raise@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #77824	; 0x13000
   1176c:	ldr	pc, [ip, #2048]!	; 0x800

00011770 <gib_weprintf@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #77824	; 0x13000
   11778:	ldr	pc, [ip, #2040]!	; 0x7f8

0001177c <XUngrabKeyboard@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #77824	; 0x13000
   11784:	ldr	pc, [ip, #2032]!	; 0x7f0

00011788 <XGetInputFocus@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #77824	; 0x13000
   11790:	ldr	pc, [ip, #2024]!	; 0x7e8

00011794 <__snprintf_chk@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #77824	; 0x13000
   1179c:	ldr	pc, [ip, #2016]!	; 0x7e0

000117a0 <select@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #77824	; 0x13000
   117a8:	ldr	pc, [ip, #2008]!	; 0x7d8

000117ac <XCreateGC@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #77824	; 0x13000
   117b4:	ldr	pc, [ip, #2000]!	; 0x7d0

000117b8 <fwrite@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #77824	; 0x13000
   117c0:	ldr	pc, [ip, #1992]!	; 0x7c8

000117c4 <time@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #77824	; 0x13000
   117cc:	ldr	pc, [ip, #1984]!	; 0x7c0

000117d0 <XFlush@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #77824	; 0x13000
   117d8:	ldr	pc, [ip, #1976]!	; 0x7b8

000117dc <XBlackPixel@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #77824	; 0x13000
   117e4:	ldr	pc, [ip, #1968]!	; 0x7b0

000117e8 <XSync@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #77824	; 0x13000
   117f0:	ldr	pc, [ip, #1960]!	; 0x7a8

000117f4 <gib_imlib_create_image_from_drawable@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #77824	; 0x13000
   117fc:	ldr	pc, [ip, #1952]!	; 0x7a0

00011800 <gib_imlib_image_format@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #77824	; 0x13000
   11808:	ldr	pc, [ip, #1944]!	; 0x798

0001180c <__stack_chk_fail@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #77824	; 0x13000
   11814:	ldr	pc, [ip, #1936]!	; 0x790

00011818 <__fprintf_chk@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #77824	; 0x13000
   11820:	ldr	pc, [ip, #1928]!	; 0x788

00011824 <gib_imlib_image_fill_rectangle@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #77824	; 0x13000
   1182c:	ldr	pc, [ip, #1920]!	; 0x780

00011830 <strtok@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #77824	; 0x13000
   11838:	ldr	pc, [ip, #1912]!	; 0x778

0001183c <gib_imlib_blend_image_onto_image@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #77824	; 0x13000
   11844:	ldr	pc, [ip, #1904]!	; 0x770

00011848 <sleep@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #77824	; 0x13000
   11850:	ldr	pc, [ip, #1896]!	; 0x768

00011854 <gib_imlib_image_get_height@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #77824	; 0x13000
   1185c:	ldr	pc, [ip, #1888]!	; 0x760

00011860 <gib_imlib_free_image_and_decache@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #77824	; 0x13000
   11868:	ldr	pc, [ip, #1880]!	; 0x758

0001186c <puts@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #77824	; 0x13000
   11874:	ldr	pc, [ip, #1872]!	; 0x750

00011878 <strftime@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #77824	; 0x13000
   11880:	ldr	pc, [ip, #1864]!	; 0x748

00011884 <XInternAtom@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #77824	; 0x13000
   1188c:	ldr	pc, [ip, #1856]!	; 0x740

00011890 <XGrabKeyboard@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #77824	; 0x13000
   11898:	ldr	pc, [ip, #1848]!	; 0x738

0001189c <imlib_context_set_image@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #77824	; 0x13000
   118a4:	ldr	pc, [ip, #1840]!	; 0x730

000118a8 <XGetWindowAttributes@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #77824	; 0x13000
   118b0:	ldr	pc, [ip, #1832]!	; 0x728

000118b4 <__sprintf_chk@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #77824	; 0x13000
   118bc:	ldr	pc, [ip, #1824]!	; 0x720

000118c0 <imlib_context_set_visual@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #77824	; 0x13000
   118c8:	ldr	pc, [ip, #1816]!	; 0x718

000118cc <XQueryTree@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #77824	; 0x13000
   118d4:	ldr	pc, [ip, #1808]!	; 0x710

000118d8 <exit@plt>:
   118d8:	add	ip, pc, #0, 12
   118dc:	add	ip, ip, #77824	; 0x13000
   118e0:	ldr	pc, [ip, #1800]!	; 0x708

000118e4 <__errno_location@plt>:
   118e4:	add	ip, pc, #0, 12
   118e8:	add	ip, ip, #77824	; 0x13000
   118ec:	ldr	pc, [ip, #1792]!	; 0x700

000118f0 <gib_eprintf@plt>:
   118f0:	add	ip, pc, #0, 12
   118f4:	add	ip, ip, #77824	; 0x13000
   118f8:	ldr	pc, [ip, #1784]!	; 0x6f8

000118fc <XPending@plt>:
   118fc:	add	ip, pc, #0, 12
   11900:	add	ip, ip, #77824	; 0x13000
   11904:	ldr	pc, [ip, #1776]!	; 0x6f0

00011908 <__fdelt_chk@plt>:
   11908:	add	ip, pc, #0, 12
   1190c:	add	ip, ip, #77824	; 0x13000
   11910:	ldr	pc, [ip, #1768]!	; 0x6e8

Disassembly of section .text:

00011914 <.text>:
   11914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11918:	sub	sp, sp, #44	; 0x2c
   1191c:	ldr	r7, [pc, #720]	; 11bf4 <__fdelt_chk@plt+0x2ec>
   11920:	ldr	r4, [pc, #720]	; 11bf8 <__fdelt_chk@plt+0x2f0>
   11924:	ldr	r3, [r7]
   11928:	str	r3, [sp, #36]	; 0x24
   1192c:	bl	13394 <__fdelt_chk@plt+0x1a8c>
   11930:	mov	r1, #0
   11934:	mov	r0, r1
   11938:	bl	136d8 <__fdelt_chk@plt+0x1dd0>
   1193c:	ldr	r3, [r4, #48]	; 0x30
   11940:	cmp	r3, #0
   11944:	beq	11b94 <__fdelt_chk@plt+0x28c>
   11948:	ldr	r3, [r4, #16]
   1194c:	cmp	r3, #0
   11950:	bne	11b30 <__fdelt_chk@plt+0x228>
   11954:	ldr	r1, [r4, #12]
   11958:	cmp	r1, #0
   1195c:	bne	11a44 <__fdelt_chk@plt+0x13c>
   11960:	ldr	r3, [r4, #60]	; 0x3c
   11964:	cmp	r3, #0
   11968:	beq	11b3c <__fdelt_chk@plt+0x234>
   1196c:	ldr	r2, [r4, #76]	; 0x4c
   11970:	ldr	ip, [r4, #72]	; 0x48
   11974:	ldr	r0, [pc, #640]	; 11bfc <__fdelt_chk@plt+0x2f4>
   11978:	mov	r3, #1
   1197c:	ldr	r0, [r0]
   11980:	stm	sp, {r2, ip}
   11984:	str	r3, [sp, #8]
   11988:	ldrd	r2, [r4, #64]	; 0x40
   1198c:	bl	117f4 <gib_imlib_create_image_from_drawable@plt>
   11990:	mov	r5, r0
   11994:	cmp	r5, #0
   11998:	beq	11b88 <__fdelt_chk@plt+0x280>
   1199c:	add	r0, sp, #32
   119a0:	bl	117c4 <time@plt>
   119a4:	add	r0, sp, #32
   119a8:	bl	11554 <localtime@plt>
   119ac:	mov	r9, r0
   119b0:	mov	r0, r5
   119b4:	bl	1189c <imlib_context_set_image@plt>
   119b8:	mov	r3, #0
   119bc:	mov	r1, r3
   119c0:	ldr	r2, [r4, #20]
   119c4:	ldr	r0, [pc, #564]	; 11c00 <__fdelt_chk@plt+0x2f8>
   119c8:	bl	116a4 <imlib_image_attach_data_value@plt>
   119cc:	mov	r3, #0
   119d0:	mov	r2, r3
   119d4:	str	r5, [sp]
   119d8:	mov	r1, r9
   119dc:	ldr	r0, [r4, #48]	; 0x30
   119e0:	bl	11f6c <__fdelt_chk@plt+0x664>
   119e4:	add	r2, sp, #28
   119e8:	mov	r1, r0
   119ec:	mov	r8, r0
   119f0:	mov	r0, r5
   119f4:	bl	11758 <gib_imlib_save_image_with_error_return@plt>
   119f8:	ldr	r3, [sp, #28]
   119fc:	cmp	r3, #0
   11a00:	bne	11b20 <__fdelt_chk@plt+0x218>
   11a04:	ldr	r3, [r4, #36]	; 0x24
   11a08:	cmp	r3, #0
   11a0c:	moveq	r6, r3
   11a10:	bne	11a50 <__fdelt_chk@plt+0x148>
   11a14:	ldr	r4, [r4, #56]	; 0x38
   11a18:	cmp	r4, #0
   11a1c:	bne	11be0 <__fdelt_chk@plt+0x2d8>
   11a20:	mov	r0, r5
   11a24:	bl	11860 <gib_imlib_free_image_and_decache@plt>
   11a28:	ldr	r2, [sp, #36]	; 0x24
   11a2c:	ldr	r3, [r7]
   11a30:	mov	r0, r4
   11a34:	cmp	r2, r3
   11a38:	bne	11bdc <__fdelt_chk@plt+0x2d4>
   11a3c:	add	sp, sp, #44	; 0x2c
   11a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a44:	bl	128dc <__fdelt_chk@plt+0xfd4>
   11a48:	mov	r5, r0
   11a4c:	b	11994 <__fdelt_chk@plt+0x8c>
   11a50:	mov	r0, r5
   11a54:	bl	11608 <gib_imlib_image_get_width@plt>
   11a58:	mov	fp, r0
   11a5c:	mov	r0, r5
   11a60:	bl	11854 <gib_imlib_image_get_height@plt>
   11a64:	ldr	sl, [r4, #40]	; 0x28
   11a68:	ldr	r6, [r4, #44]	; 0x2c
   11a6c:	cmp	sl, #0
   11a70:	mov	ip, r0
   11a74:	bne	11b58 <__fdelt_chk@plt+0x250>
   11a78:	cmp	r6, #0
   11a7c:	bne	11bb0 <__fdelt_chk@plt+0x2a8>
   11a80:	ldr	r6, [r4, #36]	; 0x24
   11a84:	ldr	r0, [pc, #376]	; 11c04 <__fdelt_chk@plt+0x2fc>
   11a88:	mul	sl, fp, r6
   11a8c:	mul	r6, ip, r6
   11a90:	smull	r2, r3, sl, r0
   11a94:	smull	r0, r1, r6, r0
   11a98:	asr	sl, sl, #31
   11a9c:	asr	r6, r6, #31
   11aa0:	rsb	sl, sl, r3, asr #5
   11aa4:	rsb	r6, r6, r1, asr #5
   11aa8:	mov	r1, #1
   11aac:	mov	r2, #0
   11ab0:	str	sl, [sp, #4]
   11ab4:	str	r1, [sp, #12]
   11ab8:	str	r6, [sp, #8]
   11abc:	str	ip, [sp]
   11ac0:	mov	r3, fp
   11ac4:	mov	r1, r2
   11ac8:	mov	r0, r5
   11acc:	bl	11644 <gib_imlib_create_cropped_scaled_image@plt>
   11ad0:	subs	sl, r0, #0
   11ad4:	beq	11bcc <__fdelt_chk@plt+0x2c4>
   11ad8:	mov	r3, #0
   11adc:	mov	r2, r3
   11ae0:	str	sl, [sp]
   11ae4:	mov	r1, r9
   11ae8:	ldr	r0, [r4, #52]	; 0x34
   11aec:	bl	11f6c <__fdelt_chk@plt+0x664>
   11af0:	add	r2, sp, #28
   11af4:	mov	r1, r0
   11af8:	mov	r6, r0
   11afc:	mov	r0, sl
   11b00:	bl	11758 <gib_imlib_save_image_with_error_return@plt>
   11b04:	ldr	r3, [sp, #28]
   11b08:	cmp	r3, #0
   11b0c:	beq	11a14 <__fdelt_chk@plt+0x10c>
   11b10:	mov	r1, r6
   11b14:	ldr	r0, [pc, #236]	; 11c08 <__fdelt_chk@plt+0x300>
   11b18:	bl	118f0 <gib_eprintf@plt>
   11b1c:	b	11a14 <__fdelt_chk@plt+0x10c>
   11b20:	mov	r1, r8
   11b24:	ldr	r0, [pc, #224]	; 11c0c <__fdelt_chk@plt+0x304>
   11b28:	bl	118f0 <gib_eprintf@plt>
   11b2c:	b	11a04 <__fdelt_chk@plt+0xfc>
   11b30:	bl	12810 <__fdelt_chk@plt+0xf08>
   11b34:	mov	r5, r0
   11b38:	b	11994 <__fdelt_chk@plt+0x8c>
   11b3c:	bl	11d10 <__fdelt_chk@plt+0x408>
   11b40:	ldr	r3, [r4, #32]
   11b44:	cmp	r3, #0
   11b48:	beq	11b7c <__fdelt_chk@plt+0x274>
   11b4c:	bl	12fa8 <__fdelt_chk@plt+0x16a0>
   11b50:	mov	r5, r0
   11b54:	b	11994 <__fdelt_chk@plt+0x8c>
   11b58:	cmp	r6, #0
   11b5c:	bne	11aa8 <__fdelt_chk@plt+0x1a0>
   11b60:	mov	r1, fp
   11b64:	mul	r0, r0, sl
   11b68:	str	ip, [sp, #20]
   11b6c:	bl	137d8 <__fdelt_chk@plt+0x1ed0>
   11b70:	ldr	ip, [sp, #20]
   11b74:	mov	r6, r0
   11b78:	b	11aa8 <__fdelt_chk@plt+0x1a0>
   11b7c:	bl	11dc0 <__fdelt_chk@plt+0x4b8>
   11b80:	mov	r5, r0
   11b84:	b	11994 <__fdelt_chk@plt+0x8c>
   11b88:	ldr	r0, [pc, #128]	; 11c10 <__fdelt_chk@plt+0x308>
   11b8c:	bl	118f0 <gib_eprintf@plt>
   11b90:	b	1199c <__fdelt_chk@plt+0x94>
   11b94:	ldr	r0, [pc, #120]	; 11c14 <__fdelt_chk@plt+0x30c>
   11b98:	bl	11530 <_gib_estrdup@plt>
   11b9c:	str	r0, [r4, #48]	; 0x30
   11ba0:	ldr	r0, [pc, #112]	; 11c18 <__fdelt_chk@plt+0x310>
   11ba4:	bl	11530 <_gib_estrdup@plt>
   11ba8:	str	r0, [r4, #52]	; 0x34
   11bac:	b	11948 <__fdelt_chk@plt+0x40>
   11bb0:	mov	r1, r0
   11bb4:	str	r0, [sp, #20]
   11bb8:	mul	r0, fp, r6
   11bbc:	bl	137d8 <__fdelt_chk@plt+0x1ed0>
   11bc0:	ldr	ip, [sp, #20]
   11bc4:	mov	sl, r0
   11bc8:	b	11aa8 <__fdelt_chk@plt+0x1a0>
   11bcc:	ldr	r0, [pc, #72]	; 11c1c <__fdelt_chk@plt+0x314>
   11bd0:	mov	r6, sl
   11bd4:	bl	118f0 <gib_eprintf@plt>
   11bd8:	b	11a14 <__fdelt_chk@plt+0x10c>
   11bdc:	bl	1180c <__stack_chk_fail@plt>
   11be0:	mov	r3, r6
   11be4:	mov	r2, r8
   11be8:	mov	r1, r9
   11bec:	mov	r0, r5
   11bf0:	bl	123c0 <__fdelt_chk@plt+0xab8>
   11bf4:	andeq	r4, r2, r0, lsl #27
   11bf8:	andeq	r5, r2, r0, asr r1
   11bfc:	andeq	r5, r2, ip, asr #2
   11c00:	andeq	r3, r1, ip, lsr #23
   11c04:	mvnpl	r8, pc, lsl r5
   11c08:	strdeq	r3, [r1], -r0
   11c0c:			; <UNDEFINED> instruction: 0x00013bb4
   11c10:	muleq	r1, r8, fp
   11c14:	andeq	r3, r1, r0, asr fp
   11c18:	andeq	r3, r1, r0, ror fp
   11c1c:	ldrdeq	r3, [r1], -r0
   11c20:	mov	fp, #0
   11c24:	mov	lr, #0
   11c28:	pop	{r1}		; (ldr r1, [sp], #4)
   11c2c:	mov	r2, sp
   11c30:	push	{r2}		; (str r2, [sp, #-4]!)
   11c34:	push	{r0}		; (str r0, [sp, #-4]!)
   11c38:	ldr	ip, [pc, #16]	; 11c50 <__fdelt_chk@plt+0x348>
   11c3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c40:	ldr	r0, [pc, #12]	; 11c54 <__fdelt_chk@plt+0x34c>
   11c44:	ldr	r3, [pc, #12]	; 11c58 <__fdelt_chk@plt+0x350>
   11c48:	bl	11578 <__libc_start_main@plt>
   11c4c:	bl	11548 <abort@plt>
   11c50:	andeq	r3, r1, r8, lsl #21
   11c54:	andeq	r1, r1, r4, lsl r9
   11c58:	andeq	r3, r1, r8, lsr #20
   11c5c:	ldr	r3, [pc, #20]	; 11c78 <__fdelt_chk@plt+0x370>
   11c60:	ldr	r2, [pc, #20]	; 11c7c <__fdelt_chk@plt+0x374>
   11c64:	add	r3, pc, r3
   11c68:	ldr	r2, [r3, r2]
   11c6c:	cmp	r2, #0
   11c70:	bxeq	lr
   11c74:	b	11590 <__gmon_start__@plt>
   11c78:	andeq	r3, r1, r0, lsr r2
   11c7c:	andeq	r0, r0, r0, ror #2
   11c80:	ldr	r0, [pc, #24]	; 11ca0 <__fdelt_chk@plt+0x398>
   11c84:	ldr	r3, [pc, #24]	; 11ca4 <__fdelt_chk@plt+0x39c>
   11c88:	cmp	r3, r0
   11c8c:	bxeq	lr
   11c90:	ldr	r3, [pc, #16]	; 11ca8 <__fdelt_chk@plt+0x3a0>
   11c94:	cmp	r3, #0
   11c98:	bxeq	lr
   11c9c:	bx	r3
   11ca0:	andeq	r5, r2, r0, lsr #2
   11ca4:	andeq	r5, r2, r0, lsr #2
   11ca8:	andeq	r0, r0, r0
   11cac:	ldr	r0, [pc, #36]	; 11cd8 <__fdelt_chk@plt+0x3d0>
   11cb0:	ldr	r1, [pc, #36]	; 11cdc <__fdelt_chk@plt+0x3d4>
   11cb4:	sub	r1, r1, r0
   11cb8:	asr	r1, r1, #2
   11cbc:	add	r1, r1, r1, lsr #31
   11cc0:	asrs	r1, r1, #1
   11cc4:	bxeq	lr
   11cc8:	ldr	r3, [pc, #16]	; 11ce0 <__fdelt_chk@plt+0x3d8>
   11ccc:	cmp	r3, #0
   11cd0:	bxeq	lr
   11cd4:	bx	r3
   11cd8:	andeq	r5, r2, r0, lsr #2
   11cdc:	andeq	r5, r2, r0, lsr #2
   11ce0:	andeq	r0, r0, r0
   11ce4:	push	{r4, lr}
   11ce8:	ldr	r4, [pc, #24]	; 11d08 <__fdelt_chk@plt+0x400>
   11cec:	ldrb	r3, [r4]
   11cf0:	cmp	r3, #0
   11cf4:	popne	{r4, pc}
   11cf8:	bl	11c80 <__fdelt_chk@plt+0x378>
   11cfc:	mov	r3, #1
   11d00:	strb	r3, [r4]
   11d04:	pop	{r4, pc}
   11d08:	andeq	r5, r2, r4, lsr r1
   11d0c:	b	11cac <__fdelt_chk@plt+0x3a4>
   11d10:	push	{r4, r5, r6, lr}
   11d14:	ldr	r4, [pc, #144]	; 11dac <__fdelt_chk@plt+0x4a4>
   11d18:	ldr	r2, [r4, #4]
   11d1c:	cmp	r2, #0
   11d20:	popeq	{r4, r5, r6, pc}
   11d24:	ldr	r3, [r4, #8]
   11d28:	cmp	r3, #0
   11d2c:	beq	11da0 <__fdelt_chk@plt+0x498>
   11d30:	ldr	r5, [pc, #120]	; 11db0 <__fdelt_chk@plt+0x4a8>
   11d34:	ldr	r1, [pc, #120]	; 11db4 <__fdelt_chk@plt+0x4ac>
   11d38:	mov	r0, #1
   11d3c:	bl	115cc <__printf_chk@plt>
   11d40:	ldr	r0, [r5]
   11d44:	bl	116d4 <fflush@plt>
   11d48:	mov	r0, #1
   11d4c:	bl	11848 <sleep@plt>
   11d50:	ldr	r4, [r4, #4]
   11d54:	sub	r4, r4, #1
   11d58:	cmp	r4, #0
   11d5c:	ble	11d8c <__fdelt_chk@plt+0x484>
   11d60:	ldr	r6, [pc, #80]	; 11db8 <__fdelt_chk@plt+0x4b0>
   11d64:	mov	r2, r4
   11d68:	mov	r1, r6
   11d6c:	mov	r0, #1
   11d70:	bl	115cc <__printf_chk@plt>
   11d74:	ldr	r0, [r5]
   11d78:	bl	116d4 <fflush@plt>
   11d7c:	mov	r0, #1
   11d80:	bl	11848 <sleep@plt>
   11d84:	subs	r4, r4, #1
   11d88:	bne	11d64 <__fdelt_chk@plt+0x45c>
   11d8c:	ldr	r0, [pc, #40]	; 11dbc <__fdelt_chk@plt+0x4b4>
   11d90:	bl	1186c <puts@plt>
   11d94:	ldr	r0, [r5]
   11d98:	pop	{r4, r5, r6, lr}
   11d9c:	b	116d4 <fflush@plt>
   11da0:	mov	r0, r2
   11da4:	pop	{r4, r5, r6, lr}
   11da8:	b	11848 <sleep@plt>
   11dac:	andeq	r5, r2, r0, asr r1
   11db0:	andeq	r5, r2, r4, lsr #2
   11db4:	muleq	r1, r8, sl
   11db8:			; <UNDEFINED> instruction: 0x00013ab0
   11dbc:			; <UNDEFINED> instruction: 0x00013ab8
   11dc0:	ldr	r3, [pc, #96]	; 11e28 <__fdelt_chk@plt+0x520>
   11dc4:	push	{lr}		; (str lr, [sp, #-4]!)
   11dc8:	sub	sp, sp, #20
   11dcc:	ldr	r1, [r3, #28]
   11dd0:	cmp	r1, #0
   11dd4:	beq	11e18 <__fdelt_chk@plt+0x510>
   11dd8:	ldr	r3, [pc, #76]	; 11e2c <__fdelt_chk@plt+0x524>
   11ddc:	mov	r2, #1
   11de0:	str	r2, [sp, #8]
   11de4:	ldr	r2, [r3]
   11de8:	ldr	r0, [pc, #64]	; 11e30 <__fdelt_chk@plt+0x528>
   11dec:	mov	r3, #0
   11df0:	ldr	r1, [r2, #16]
   11df4:	ldr	r0, [r0]
   11df8:	str	r1, [sp, #4]
   11dfc:	ldr	r1, [r2, #12]
   11e00:	mov	r2, r3
   11e04:	str	r1, [sp]
   11e08:	mov	r1, r3
   11e0c:	bl	117f4 <gib_imlib_create_image_from_drawable@plt>
   11e10:	add	sp, sp, #20
   11e14:	pop	{pc}		; (ldr pc, [sp], #4)
   11e18:	ldr	r3, [pc, #20]	; 11e34 <__fdelt_chk@plt+0x52c>
   11e1c:	ldr	r0, [r3]
   11e20:	bl	116c8 <XBell@plt>
   11e24:	b	11dd8 <__fdelt_chk@plt+0x4d0>
   11e28:	andeq	r5, r2, r0, asr r1
   11e2c:	andeq	r5, r2, r4, asr #2
   11e30:	andeq	r5, r2, ip, asr #2
   11e34:	andeq	r5, r2, r0, asr #2
   11e38:	ldr	ip, [r0]
   11e3c:	push	{r4, lr}
   11e40:	cmp	ip, #0
   11e44:	movlt	r4, #0
   11e48:	ldrlt	lr, [r2]
   11e4c:	addlt	ip, lr, ip
   11e50:	strlt	ip, [r2]
   11e54:	strlt	r4, [r0]
   11e58:	ldr	ip, [r1]
   11e5c:	cmp	ip, #0
   11e60:	movlt	r4, #0
   11e64:	ldrlt	lr, [r3]
   11e68:	addlt	ip, lr, ip
   11e6c:	strlt	ip, [r3]
   11e70:	ldr	ip, [pc, #64]	; 11eb8 <__fdelt_chk@plt+0x5b0>
   11e74:	strlt	r4, [r1]
   11e78:	ldr	r4, [r0]
   11e7c:	ldr	lr, [ip]
   11e80:	ldr	r0, [r2]
   11e84:	ldr	ip, [lr, #12]
   11e88:	add	r0, r4, r0
   11e8c:	cmp	r0, ip
   11e90:	subgt	ip, ip, r4
   11e94:	strgt	ip, [r2]
   11e98:	ldr	r0, [r1]
   11e9c:	ldr	r2, [r3]
   11ea0:	ldr	r1, [lr, #16]
   11ea4:	add	r2, r0, r2
   11ea8:	cmp	r2, r1
   11eac:	subgt	r1, r1, r0
   11eb0:	strgt	r1, [r3]
   11eb4:	pop	{r4, pc}
   11eb8:	andeq	r5, r2, r4, asr #2
   11ebc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ec0:	mov	ip, r1
   11ec4:	ldr	lr, [pc, #152]	; 11f64 <__fdelt_chk@plt+0x65c>
   11ec8:	ldr	r9, [pc, #152]	; 11f68 <__fdelt_chk@plt+0x660>
   11ecc:	sub	sp, sp, #36	; 0x24
   11ed0:	ldr	r1, [lr]
   11ed4:	mov	r8, r0
   11ed8:	ldr	r0, [r9]
   11edc:	cmp	ip, #0
   11ee0:	movne	r4, ip
   11ee4:	moveq	r4, r1
   11ee8:	add	r7, sp, #16
   11eec:	add	r6, sp, #24
   11ef0:	str	ip, [sp, #16]
   11ef4:	add	r5, sp, #20
   11ef8:	str	r0, [sp, #28]
   11efc:	b	11f18 <__fdelt_chk@plt+0x610>
   11f00:	cmp	r3, #0
   11f04:	beq	11f44 <__fdelt_chk@plt+0x63c>
   11f08:	mov	r1, r4
   11f0c:	ldr	r2, [sp, #20]
   11f10:	mov	r4, r3
   11f14:	ldr	r3, [sp, #24]
   11f18:	stm	sp, {r3, r5}
   11f1c:	strd	r6, [sp, #8]
   11f20:	mov	r3, r2
   11f24:	mov	r0, r8
   11f28:	mov	r2, r4
   11f2c:	bl	1165c <XTranslateCoordinates@plt>
   11f30:	ldr	r3, [sp, #16]
   11f34:	cmp	r0, #1
   11f38:	beq	11f00 <__fdelt_chk@plt+0x5f8>
   11f3c:	cmp	r3, #0
   11f40:	movne	r4, r3
   11f44:	ldr	r2, [sp, #28]
   11f48:	ldr	r3, [r9]
   11f4c:	mov	r0, r4
   11f50:	cmp	r2, r3
   11f54:	bne	11f60 <__fdelt_chk@plt+0x658>
   11f58:	add	sp, sp, #36	; 0x24
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f60:	bl	1180c <__stack_chk_fail@plt>
   11f64:	andeq	r5, r2, ip, asr #2
   11f68:	andeq	r4, r2, r0, lsl #27
   11f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f70:	sub	sp, sp, #8320	; 0x2080
   11f74:	sub	sp, sp, #4
   11f78:	ldr	sl, [pc, #1064]	; 123a8 <__fdelt_chk@plt+0xaa0>
   11f7c:	mov	ip, #0
   11f80:	add	r5, sp, #8256	; 0x2040
   11f84:	strb	ip, [sp, #124]	; 0x7c
   11f88:	add	ip, sp, #8320	; 0x2080
   11f8c:	add	r5, r5, #60	; 0x3c
   11f90:	ldr	lr, [sl]
   11f94:	add	ip, ip, #40	; 0x28
   11f98:	add	r4, sp, #4224	; 0x1080
   11f9c:	mov	r9, r2
   11fa0:	mov	r2, r0
   11fa4:	add	r0, sp, #4160	; 0x1040
   11fa8:	str	r3, [sp, #12]
   11fac:	add	r0, r0, #60	; 0x3c
   11fb0:	mov	r3, r1
   11fb4:	ldr	r1, [pc, #1008]	; 123ac <__fdelt_chk@plt+0xaa4>
   11fb8:	str	lr, [r5]
   11fbc:	ldr	fp, [ip]
   11fc0:	bl	11878 <strftime@plt>
   11fc4:	ldrb	r4, [r4, #-4]
   11fc8:	cmp	r4, #0
   11fcc:	addne	r5, sp, #4160	; 0x1040
   11fd0:	addne	r5, r5, #60	; 0x3c
   11fd4:	addne	r8, sp, #124	; 0x7c
   11fd8:	bne	12014 <__fdelt_chk@plt+0x70c>
   11fdc:	b	12388 <__fdelt_chk@plt+0xa80>
   11fe0:	cmp	r4, #92	; 0x5c
   11fe4:	bne	12188 <__fdelt_chk@plt+0x880>
   11fe8:	cmp	r7, #110	; 0x6e
   11fec:	ldrb	r4, [r5, #2]!
   11ff0:	bne	121d8 <__fdelt_chk@plt+0x8d0>
   11ff4:	cmp	r9, #0
   11ff8:	beq	1200c <__fdelt_chk@plt+0x704>
   11ffc:	mov	r2, #4096	; 0x1000
   12000:	ldr	r1, [pc, #936]	; 123b0 <__fdelt_chk@plt+0xaa8>
   12004:	mov	r0, r8
   12008:	bl	115a8 <__strcat_chk@plt>
   1200c:	cmp	r4, #0
   12010:	beq	121ac <__fdelt_chk@plt+0x8a4>
   12014:	mov	r6, r5
   12018:	cmp	r4, #36	; 0x24
   1201c:	ldrb	r7, [r6, #1]!
   12020:	bne	11fe0 <__fdelt_chk@plt+0x6d8>
   12024:	sub	r3, r7, #36	; 0x24
   12028:	add	r7, r5, #2
   1202c:	cmp	r3, #83	; 0x53
   12030:	ldrls	pc, [pc, r3, lsl #2]
   12034:	b	12370 <__fdelt_chk@plt+0xa68>
   12038:	andeq	r2, r1, r4, asr r3
   1203c:	andeq	r2, r1, r0, ror r3
   12040:	andeq	r2, r1, r0, ror r3
   12044:	andeq	r2, r1, r0, ror r3
   12048:	andeq	r2, r1, r0, ror r3
   1204c:	andeq	r2, r1, r0, ror r3
   12050:	andeq	r2, r1, r0, ror r3
   12054:	andeq	r2, r1, r0, ror r3
   12058:	andeq	r2, r1, r0, ror r3
   1205c:	andeq	r2, r1, r0, ror r3
   12060:	andeq	r2, r1, r0, ror r3
   12064:	andeq	r2, r1, r0, ror r3
   12068:	andeq	r2, r1, r0, ror r3
   1206c:	andeq	r2, r1, r0, ror r3
   12070:	andeq	r2, r1, r0, ror r3
   12074:	andeq	r2, r1, r0, ror r3
   12078:	andeq	r2, r1, r0, ror r3
   1207c:	andeq	r2, r1, r0, ror r3
   12080:	andeq	r2, r1, r0, ror r3
   12084:	andeq	r2, r1, r0, ror r3
   12088:	andeq	r2, r1, r0, ror r3
   1208c:	andeq	r2, r1, r0, ror r3
   12090:	andeq	r2, r1, r0, ror r3
   12094:	andeq	r2, r1, r0, ror r3
   12098:	andeq	r2, r1, r0, ror r3
   1209c:	andeq	r2, r1, r0, ror r3
   120a0:	andeq	r2, r1, r0, ror r3
   120a4:	andeq	r2, r1, r0, ror r3
   120a8:	andeq	r2, r1, r0, ror r3
   120ac:	andeq	r2, r1, r0, ror r3
   120b0:	andeq	r2, r1, r0, ror r3
   120b4:	andeq	r2, r1, r0, ror r3
   120b8:	andeq	r2, r1, r0, ror r3
   120bc:	andeq	r2, r1, r0, ror r3
   120c0:	andeq	r2, r1, r0, ror r3
   120c4:	andeq	r2, r1, r0, ror r3
   120c8:	andeq	r2, r1, r0, ror r3
   120cc:	andeq	r2, r1, r0, ror r3
   120d0:	andeq	r2, r1, r0, ror r3
   120d4:	andeq	r2, r1, r0, ror r3
   120d8:	andeq	r2, r1, r0, ror r3
   120dc:	andeq	r2, r1, r0, ror r3
   120e0:	andeq	r2, r1, r0, ror r3
   120e4:	andeq	r2, r1, r0, ror r3
   120e8:	andeq	r2, r1, r0, ror r3
   120ec:	andeq	r2, r1, r0, ror r3
   120f0:	andeq	r2, r1, r0, ror r3
   120f4:	andeq	r2, r1, r0, ror r3
   120f8:	andeq	r2, r1, r0, ror r3
   120fc:	andeq	r2, r1, r0, ror r3
   12100:	andeq	r2, r1, r0, ror r3
   12104:	andeq	r2, r1, r0, ror r3
   12108:	andeq	r2, r1, r0, ror r3
   1210c:	andeq	r2, r1, r0, ror r3
   12110:	andeq	r2, r1, r0, ror r3
   12114:	andeq	r2, r1, r0, ror r3
   12118:	andeq	r2, r1, r0, ror r3
   1211c:	andeq	r2, r1, r0, ror r3
   12120:	andeq	r2, r1, r0, ror r3
   12124:	andeq	r2, r1, r0, ror r3
   12128:	andeq	r2, r1, r0, ror r3
   1212c:	andeq	r2, r1, r0, ror r3
   12130:	andeq	r2, r1, r0, ror r3
   12134:	andeq	r2, r1, r0, ror r3
   12138:	andeq	r2, r1, r0, ror r3
   1213c:	andeq	r2, r1, r0, ror r3
   12140:	andeq	r2, r1, r8, asr #6
   12144:	andeq	r2, r1, r0, ror r3
   12148:	andeq	r2, r1, ip, lsr r3
   1214c:	andeq	r2, r1, r0, ror r3
   12150:	andeq	r2, r1, r0, ror r3
   12154:	andeq	r2, r1, r0, ror r3
   12158:	andeq	r2, r1, r0, ror r3
   1215c:	andeq	r2, r1, r4, lsl r3
   12160:	ldrdeq	r2, [r1], -r8
   12164:	andeq	r2, r1, r0, ror r3
   12168:	andeq	r2, r1, r0, lsr #5
   1216c:	andeq	r2, r1, r0, ror r3
   12170:	andeq	r2, r1, r0, ror r3
   12174:	andeq	r2, r1, r8, asr r2
   12178:	andeq	r2, r1, r4, lsr r2
   1217c:	andeq	r2, r1, r0, ror r3
   12180:	andeq	r2, r1, r0, ror r3
   12184:	strdeq	r2, [r1], -r0
   12188:	mov	r1, r5
   1218c:	mov	r3, #4096	; 0x1000
   12190:	mov	r2, #1
   12194:	mov	r0, r8
   12198:	mov	r4, r7
   1219c:	bl	1168c <__strncat_chk@plt>
   121a0:	cmp	r4, #0
   121a4:	mov	r5, r6
   121a8:	bne	12014 <__fdelt_chk@plt+0x70c>
   121ac:	mov	r0, r8
   121b0:	bl	11530 <_gib_estrdup@plt>
   121b4:	add	r3, sp, #8256	; 0x2040
   121b8:	add	r3, r3, #60	; 0x3c
   121bc:	ldr	r2, [r3]
   121c0:	ldr	r3, [sl]
   121c4:	cmp	r2, r3
   121c8:	bne	123a4 <__fdelt_chk@plt+0xa9c>
   121cc:	add	sp, sp, #8320	; 0x2080
   121d0:	add	sp, sp, #4
   121d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d8:	mov	r1, r6
   121dc:	mov	r3, #4096	; 0x1000
   121e0:	mov	r2, #1
   121e4:	mov	r0, r8
   121e8:	bl	1168c <__strncat_chk@plt>
   121ec:	b	1200c <__fdelt_chk@plt+0x704>
   121f0:	mov	r0, fp
   121f4:	bl	11608 <gib_imlib_image_get_width@plt>
   121f8:	ldr	r2, [pc, #436]	; 123b4 <__fdelt_chk@plt+0xaac>
   121fc:	mov	r3, #20
   12200:	str	r2, [sp]
   12204:	str	r0, [sp, #4]
   12208:	mov	r1, r3
   1220c:	mov	r2, #1
   12210:	add	r0, sp, #104	; 0x68
   12214:	bl	11794 <__snprintf_chk@plt>
   12218:	add	r1, sp, #104	; 0x68
   1221c:	mov	r2, #4096	; 0x1000
   12220:	mov	r0, r8
   12224:	bl	115a8 <__strcat_chk@plt>
   12228:	ldrb	r4, [r5, #2]
   1222c:	mov	r5, r7
   12230:	b	1200c <__fdelt_chk@plt+0x704>
   12234:	mov	r0, fp
   12238:	bl	11800 <gib_imlib_image_format@plt>
   1223c:	mov	r2, #4096	; 0x1000
   12240:	mov	r1, r0
   12244:	mov	r0, r8
   12248:	bl	115a8 <__strcat_chk@plt>
   1224c:	ldrb	r4, [r5, #2]
   12250:	mov	r5, r7
   12254:	b	1200c <__fdelt_chk@plt+0x704>
   12258:	cmp	r9, #0
   1225c:	beq	12228 <__fdelt_chk@plt+0x920>
   12260:	add	r2, sp, #16
   12264:	mov	r1, r9
   12268:	mov	r0, #3
   1226c:	bl	11560 <__xstat@plt>
   12270:	cmp	r0, #0
   12274:	bne	12390 <__fdelt_chk@plt+0xa88>
   12278:	ldr	r2, [sp, #60]	; 0x3c
   1227c:	ldr	r1, [pc, #304]	; 123b4 <__fdelt_chk@plt+0xaac>
   12280:	mov	r3, #20
   12284:	add	r0, sp, #104	; 0x68
   12288:	stm	sp, {r1, r2}
   1228c:	mov	r1, r3
   12290:	mov	r2, #1
   12294:	bl	11794 <__snprintf_chk@plt>
   12298:	add	r1, sp, #104	; 0x68
   1229c:	b	1221c <__fdelt_chk@plt+0x914>
   122a0:	mov	r0, fp
   122a4:	bl	11608 <gib_imlib_image_get_width@plt>
   122a8:	mov	r4, r0
   122ac:	mov	r0, fp
   122b0:	bl	11854 <gib_imlib_image_get_height@plt>
   122b4:	ldr	r2, [pc, #248]	; 123b4 <__fdelt_chk@plt+0xaac>
   122b8:	mov	r3, #20
   122bc:	str	r2, [sp]
   122c0:	mov	r1, r3
   122c4:	mov	r2, #1
   122c8:	mul	r4, r0, r4
   122cc:	add	r0, sp, #104	; 0x68
   122d0:	str	r4, [sp, #4]
   122d4:	b	12214 <__fdelt_chk@plt+0x90c>
   122d8:	cmp	r9, #0
   122dc:	beq	12228 <__fdelt_chk@plt+0x920>
   122e0:	mov	r1, #47	; 0x2f
   122e4:	mov	r0, r9
   122e8:	bl	11650 <strrchr@plt>
   122ec:	cmp	r0, #0
   122f0:	addne	r1, r0, #1
   122f4:	bne	1221c <__fdelt_chk@plt+0x914>
   122f8:	mov	r2, #4096	; 0x1000
   122fc:	mov	r1, r9
   12300:	mov	r0, r8
   12304:	bl	115a8 <__strcat_chk@plt>
   12308:	ldrb	r4, [r5, #2]
   1230c:	mov	r5, r7
   12310:	b	1200c <__fdelt_chk@plt+0x704>
   12314:	ldr	r3, [sp, #12]
   12318:	cmp	r3, #0
   1231c:	beq	12228 <__fdelt_chk@plt+0x920>
   12320:	mov	r2, #4096	; 0x1000
   12324:	ldr	r1, [sp, #12]
   12328:	mov	r0, r8
   1232c:	bl	115a8 <__strcat_chk@plt>
   12330:	ldrb	r4, [r5, #2]
   12334:	mov	r5, r7
   12338:	b	1200c <__fdelt_chk@plt+0x704>
   1233c:	mov	r0, fp
   12340:	bl	11854 <gib_imlib_image_get_height@plt>
   12344:	b	121f8 <__fdelt_chk@plt+0x8f0>
   12348:	cmp	r9, #0
   1234c:	bne	122f8 <__fdelt_chk@plt+0x9f0>
   12350:	b	12228 <__fdelt_chk@plt+0x920>
   12354:	mov	r2, #4096	; 0x1000
   12358:	ldr	r1, [pc, #88]	; 123b8 <__fdelt_chk@plt+0xab0>
   1235c:	mov	r0, r8
   12360:	bl	115a8 <__strcat_chk@plt>
   12364:	ldrb	r4, [r5, #2]
   12368:	mov	r5, r7
   1236c:	b	1200c <__fdelt_chk@plt+0x704>
   12370:	mov	r1, r6
   12374:	mov	r3, #4096	; 0x1000
   12378:	mov	r2, #1
   1237c:	mov	r0, r8
   12380:	bl	1168c <__strncat_chk@plt>
   12384:	b	12228 <__fdelt_chk@plt+0x920>
   12388:	add	r8, sp, #124	; 0x7c
   1238c:	b	121ac <__fdelt_chk@plt+0x8a4>
   12390:	mov	r2, #4096	; 0x1000
   12394:	ldr	r1, [pc, #32]	; 123bc <__fdelt_chk@plt+0xab4>
   12398:	mov	r0, r8
   1239c:	bl	115a8 <__strcat_chk@plt>
   123a0:	b	12228 <__fdelt_chk@plt+0x920>
   123a4:	bl	1180c <__stack_chk_fail@plt>
   123a8:	andeq	r4, r2, r0, lsl #27
   123ac:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   123b0:	andeq	r3, r1, ip, asr #23
   123b4:			; <UNDEFINED> instruction: 0x00013abc
   123b8:	andeq	r3, r1, r8, asr #21
   123bc:	andeq	r3, r1, r0, asr #21
   123c0:	ldr	ip, [pc, #28]	; 123e4 <__fdelt_chk@plt+0xadc>
   123c4:	push	{lr}		; (str lr, [sp, #-4]!)
   123c8:	sub	sp, sp, #12
   123cc:	str	r0, [sp]
   123d0:	ldr	r0, [ip, #56]	; 0x38
   123d4:	bl	11f6c <__fdelt_chk@plt+0x664>
   123d8:	bl	115d8 <system@plt>
   123dc:	mov	r0, #0
   123e0:	bl	118d8 <exit@plt>
   123e4:	andeq	r5, r2, r0, asr r1
   123e8:	ldr	ip, [pc, #412]	; 1258c <__fdelt_chk@plt+0xc84>
   123ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123f0:	sub	sp, sp, #84	; 0x54
   123f4:	add	lr, sp, #52	; 0x34
   123f8:	add	r3, sp, #64	; 0x40
   123fc:	ldr	ip, [ip]
   12400:	mov	r7, r2
   12404:	stm	sp, {r3, lr}
   12408:	mov	r4, #0
   1240c:	add	r3, sp, #68	; 0x44
   12410:	add	r2, sp, #72	; 0x48
   12414:	str	ip, [sp, #76]	; 0x4c
   12418:	str	r4, [sp, #40]	; 0x28
   1241c:	mov	r6, r0
   12420:	bl	118cc <XQueryTree@plt>
   12424:	subs	r3, r0, #0
   12428:	beq	12450 <__fdelt_chk@plt+0xb48>
   1242c:	ldr	r3, [sp, #52]	; 0x34
   12430:	ldr	r0, [sp, #64]	; 0x40
   12434:	cmp	r3, r4
   12438:	bne	12470 <__fdelt_chk@plt+0xb68>
   1243c:	cmp	r0, #0
   12440:	beq	12450 <__fdelt_chk@plt+0xb48>
   12444:	str	r3, [sp, #36]	; 0x24
   12448:	bl	11524 <XFree@plt>
   1244c:	ldr	r3, [sp, #36]	; 0x24
   12450:	ldr	r2, [pc, #308]	; 1258c <__fdelt_chk@plt+0xc84>
   12454:	ldr	r1, [sp, #76]	; 0x4c
   12458:	mov	r0, r3
   1245c:	ldr	r2, [r2]
   12460:	cmp	r1, r2
   12464:	bne	12588 <__fdelt_chk@plt+0xc80>
   12468:	add	sp, sp, #84	; 0x54
   1246c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12470:	mov	r5, r4
   12474:	add	fp, sp, #48	; 0x30
   12478:	add	sl, sp, #56	; 0x38
   1247c:	add	r2, sp, #60	; 0x3c
   12480:	ldr	r1, [r0, r4, lsl #2]
   12484:	str	r2, [sp, #20]
   12488:	add	r2, sp, #44	; 0x2c
   1248c:	str	r2, [sp, #16]
   12490:	add	r2, sp, #40	; 0x28
   12494:	str	r2, [sp, #12]
   12498:	mov	r3, #0
   1249c:	strd	sl, [sp, #24]
   124a0:	str	r5, [sp, #8]
   124a4:	str	r5, [sp, #4]
   124a8:	str	r5, [sp]
   124ac:	mov	r2, r7
   124b0:	mov	r0, r6
   124b4:	bl	115fc <XGetWindowProperty@plt>
   124b8:	lsl	r9, r4, #2
   124bc:	mov	r8, r0
   124c0:	ldr	r0, [sp, #48]	; 0x30
   124c4:	cmp	r0, #0
   124c8:	beq	124d0 <__fdelt_chk@plt+0xbc8>
   124cc:	bl	11524 <XFree@plt>
   124d0:	cmp	r8, #0
   124d4:	add	r4, r4, #1
   124d8:	ldr	r2, [sp, #52]	; 0x34
   124dc:	bne	12564 <__fdelt_chk@plt+0xc5c>
   124e0:	ldr	r3, [sp, #40]	; 0x28
   124e4:	cmp	r3, #0
   124e8:	beq	12564 <__fdelt_chk@plt+0xc5c>
   124ec:	ldr	r0, [sp, #64]	; 0x40
   124f0:	ldr	r3, [r0, r9]
   124f4:	clz	r1, r3
   124f8:	lsr	r1, r1, #5
   124fc:	cmp	r4, r2
   12500:	movcs	ip, #0
   12504:	andcc	ip, r1, #1
   12508:	cmp	ip, #0
   1250c:	bne	1247c <__fdelt_chk@plt+0xb74>
   12510:	cmp	r2, #0
   12514:	movne	r2, r1
   12518:	moveq	r2, #0
   1251c:	cmp	r2, #0
   12520:	beq	1243c <__fdelt_chk@plt+0xb34>
   12524:	mov	r4, #0
   12528:	ldr	r1, [r0, r4, lsl #2]
   1252c:	mov	r2, r7
   12530:	mov	r0, r6
   12534:	bl	123e8 <__fdelt_chk@plt+0xae0>
   12538:	ldr	r2, [sp, #52]	; 0x34
   1253c:	add	r4, r4, #1
   12540:	cmp	r2, r4
   12544:	movls	r3, #0
   12548:	movhi	r3, #1
   1254c:	cmp	r0, #0
   12550:	movne	r3, #0
   12554:	cmp	r3, #0
   12558:	beq	1257c <__fdelt_chk@plt+0xc74>
   1255c:	ldr	r0, [sp, #64]	; 0x40
   12560:	b	12528 <__fdelt_chk@plt+0xc20>
   12564:	cmp	r4, r2
   12568:	ldr	r0, [sp, #64]	; 0x40
   1256c:	bcc	1247c <__fdelt_chk@plt+0xb74>
   12570:	mov	r1, #1
   12574:	mov	r3, #0
   12578:	b	12510 <__fdelt_chk@plt+0xc08>
   1257c:	mov	r3, r0
   12580:	ldr	r0, [sp, #64]	; 0x40
   12584:	b	1243c <__fdelt_chk@plt+0xb34>
   12588:	bl	1180c <__stack_chk_fail@plt>
   1258c:	andeq	r4, r2, r0, lsl #27
   12590:	push	{r4, r5, r6, r7, r8, lr}
   12594:	sub	sp, sp, #56	; 0x38
   12598:	ldr	r5, [pc, #192]	; 12660 <__fdelt_chk@plt+0xd58>
   1259c:	mov	r6, r1
   125a0:	mov	r4, #0
   125a4:	ldr	r3, [r5]
   125a8:	mov	r2, #1
   125ac:	ldr	r1, [pc, #176]	; 12664 <__fdelt_chk@plt+0xd5c>
   125b0:	str	r3, [sp, #52]	; 0x34
   125b4:	str	r4, [sp, #32]
   125b8:	mov	r7, r0
   125bc:	bl	11884 <XInternAtom@plt>
   125c0:	subs	r8, r0, #0
   125c4:	bne	125e4 <__fdelt_chk@plt+0xcdc>
   125c8:	mov	r0, r6
   125cc:	ldr	r2, [sp, #52]	; 0x34
   125d0:	ldr	r3, [r5]
   125d4:	cmp	r2, r3
   125d8:	bne	1265c <__fdelt_chk@plt+0xd54>
   125dc:	add	sp, sp, #56	; 0x38
   125e0:	pop	{r4, r5, r6, r7, r8, pc}
   125e4:	add	r2, sp, #40	; 0x28
   125e8:	add	ip, sp, #44	; 0x2c
   125ec:	add	r0, sp, #48	; 0x30
   125f0:	add	r1, sp, #36	; 0x24
   125f4:	str	r2, [sp, #28]
   125f8:	add	r2, sp, #32
   125fc:	str	r0, [sp, #20]
   12600:	str	r1, [sp, #16]
   12604:	str	r2, [sp, #12]
   12608:	str	r4, [sp, #8]
   1260c:	str	r4, [sp, #4]
   12610:	str	r4, [sp]
   12614:	mov	r3, r4
   12618:	str	ip, [sp, #24]
   1261c:	mov	r2, r8
   12620:	mov	r1, r6
   12624:	mov	r0, r7
   12628:	bl	115fc <XGetWindowProperty@plt>
   1262c:	cmp	r0, #0
   12630:	bne	12640 <__fdelt_chk@plt+0xd38>
   12634:	ldr	r3, [sp, #32]
   12638:	cmp	r3, #0
   1263c:	bne	125c8 <__fdelt_chk@plt+0xcc0>
   12640:	mov	r2, r8
   12644:	mov	r0, r7
   12648:	mov	r1, r6
   1264c:	bl	123e8 <__fdelt_chk@plt+0xae0>
   12650:	cmp	r0, #0
   12654:	bne	125cc <__fdelt_chk@plt+0xcc4>
   12658:	b	125c8 <__fdelt_chk@plt+0xcc0>
   1265c:	bl	1180c <__stack_chk_fail@plt>
   12660:	andeq	r4, r2, r0, lsl #27
   12664:	andeq	r3, r1, ip, asr #21
   12668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1266c:	sub	sp, sp, #156	; 0x9c
   12670:	ldr	r9, [pc, #392]	; 12800 <__fdelt_chk@plt+0xef8>
   12674:	ldr	r8, [pc, #392]	; 12804 <__fdelt_chk@plt+0xefc>
   12678:	ldr	r5, [pc, #392]	; 12808 <__fdelt_chk@plt+0xf00>
   1267c:	ldr	ip, [r9]
   12680:	mov	r4, r0
   12684:	mov	fp, r3
   12688:	ldr	r0, [r8]
   1268c:	ldr	r3, [sp, #192]	; 0xc0
   12690:	cmp	ip, r4
   12694:	str	r0, [sp, #148]	; 0x94
   12698:	str	r1, [sp, #28]
   1269c:	str	r2, [sp, #32]
   126a0:	ldr	r0, [r5]
   126a4:	str	r3, [sp, #36]	; 0x24
   126a8:	addeq	r7, sp, #56	; 0x38
   126ac:	bne	12738 <__fdelt_chk@plt+0xe30>
   126b0:	mov	r2, r7
   126b4:	mov	r1, r4
   126b8:	bl	118a8 <XGetWindowAttributes@plt>
   126bc:	cmp	r0, #0
   126c0:	beq	126d4 <__fdelt_chk@plt+0xdcc>
   126c4:	ldr	r3, [sp, #124]	; 0x7c
   126c8:	cmp	r3, #2
   126cc:	movne	r0, #0
   126d0:	beq	126ec <__fdelt_chk@plt+0xde4>
   126d4:	ldr	r2, [sp, #148]	; 0x94
   126d8:	ldr	r3, [r8]
   126dc:	cmp	r2, r3
   126e0:	bne	127fc <__fdelt_chk@plt+0xef4>
   126e4:	add	sp, sp, #156	; 0x9c
   126e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126ec:	ldr	r2, [sp, #32]
   126f0:	ldr	r3, [sp, #64]	; 0x40
   126f4:	str	r2, [sp, #8]
   126f8:	mov	r1, r4
   126fc:	ldr	r2, [sp, #28]
   12700:	ldr	r4, [sp, #36]	; 0x24
   12704:	ldr	lr, [sp, #68]	; 0x44
   12708:	str	r2, [sp, #4]
   1270c:	ldr	r0, [r5]
   12710:	ldr	r2, [r9]
   12714:	add	ip, sp, #52	; 0x34
   12718:	str	r3, [fp]
   1271c:	mov	r3, #0
   12720:	str	lr, [r4]
   12724:	str	ip, [sp, #12]
   12728:	str	r3, [sp]
   1272c:	bl	1165c <XTranslateCoordinates@plt>
   12730:	mov	r0, #1
   12734:	b	126d4 <__fdelt_chk@plt+0xdcc>
   12738:	add	r6, sp, #40	; 0x28
   1273c:	add	r3, sp, #44	; 0x2c
   12740:	str	r3, [sp]
   12744:	str	r6, [sp, #16]
   12748:	str	r6, [sp, #12]
   1274c:	str	r6, [sp, #8]
   12750:	str	r6, [sp, #4]
   12754:	mov	r2, r9
   12758:	mov	r1, r4
   1275c:	bl	116e0 <XGetGeometry@plt>
   12760:	add	r7, sp, #56	; 0x38
   12764:	cmp	r0, #0
   12768:	beq	127e0 <__fdelt_chk@plt+0xed8>
   1276c:	add	sl, sp, #52	; 0x34
   12770:	b	127a0 <__fdelt_chk@plt+0xe98>
   12774:	ldr	r0, [sp, #52]	; 0x34
   12778:	cmp	r0, #0
   1277c:	beq	12784 <__fdelt_chk@plt+0xe7c>
   12780:	bl	11524 <XFree@plt>
   12784:	ldr	r3, [sp, #56]	; 0x38
   12788:	cmp	r3, #0
   1278c:	beq	127c4 <__fdelt_chk@plt+0xebc>
   12790:	ldr	r2, [sp, #48]	; 0x30
   12794:	cmp	r3, r2
   12798:	beq	127c4 <__fdelt_chk@plt+0xebc>
   1279c:	mov	r4, r3
   127a0:	str	r6, [sp, #4]
   127a4:	str	sl, [sp]
   127a8:	mov	r3, r7
   127ac:	add	r2, sp, #48	; 0x30
   127b0:	mov	r1, r4
   127b4:	ldr	r0, [r5]
   127b8:	bl	118cc <XQueryTree@plt>
   127bc:	cmp	r0, #0
   127c0:	bne	12774 <__fdelt_chk@plt+0xe6c>
   127c4:	ldr	r3, [pc, #64]	; 1280c <__fdelt_chk@plt+0xf04>
   127c8:	ldr	r0, [r5]
   127cc:	ldr	r3, [r3, #24]
   127d0:	cmp	r3, #0
   127d4:	beq	127e8 <__fdelt_chk@plt+0xee0>
   127d8:	mov	r1, r4
   127dc:	bl	115c0 <XRaiseWindow@plt>
   127e0:	ldr	r0, [r5]
   127e4:	b	126b0 <__fdelt_chk@plt+0xda8>
   127e8:	mov	r1, r4
   127ec:	bl	12590 <__fdelt_chk@plt+0xc88>
   127f0:	mov	r4, r0
   127f4:	ldr	r0, [r5]
   127f8:	b	127d8 <__fdelt_chk@plt+0xed0>
   127fc:	bl	1180c <__stack_chk_fail@plt>
   12800:	andeq	r5, r2, ip, asr #2
   12804:	andeq	r4, r2, r0, lsl #27
   12808:	andeq	r5, r2, r0, asr #2
   1280c:	andeq	r5, r2, r0, asr r1
   12810:	push	{r4, r5, r6, lr}
   12814:	sub	sp, sp, #48	; 0x30
   12818:	ldr	r5, [pc, #176]	; 128d0 <__fdelt_chk@plt+0xfc8>
   1281c:	mov	r4, #0
   12820:	str	r4, [sp, #20]
   12824:	ldr	r3, [r5]
   12828:	str	r4, [sp, #24]
   1282c:	str	r3, [sp, #44]	; 0x2c
   12830:	str	r4, [sp, #28]
   12834:	str	r4, [sp, #32]
   12838:	str	r4, [sp, #36]	; 0x24
   1283c:	bl	11d10 <__fdelt_chk@plt+0x408>
   12840:	ldr	r3, [pc, #140]	; 128d4 <__fdelt_chk@plt+0xfcc>
   12844:	add	r2, sp, #40	; 0x28
   12848:	add	r1, sp, #36	; 0x24
   1284c:	ldr	r0, [r3]
   12850:	add	r6, sp, #32
   12854:	bl	11788 <XGetInputFocus@plt>
   12858:	add	r3, sp, #28
   1285c:	add	r2, sp, #24
   12860:	add	r1, sp, #20
   12864:	str	r6, [sp]
   12868:	ldr	r0, [sp, #36]	; 0x24
   1286c:	bl	12668 <__fdelt_chk@plt+0xd60>
   12870:	cmp	r0, #0
   12874:	beq	128b4 <__fdelt_chk@plt+0xfac>
   12878:	mov	r3, r6
   1287c:	add	r2, sp, #28
   12880:	add	r1, sp, #24
   12884:	add	r0, sp, #20
   12888:	bl	11e38 <__fdelt_chk@plt+0x530>
   1288c:	ldr	r2, [sp, #28]
   12890:	ldr	r0, [pc, #64]	; 128d8 <__fdelt_chk@plt+0xfd0>
   12894:	ldr	ip, [sp, #32]
   12898:	mov	r3, #1
   1289c:	ldr	r0, [r0]
   128a0:	mov	r1, r4
   128a4:	stm	sp, {r2, ip}
   128a8:	str	r3, [sp, #8]
   128ac:	ldrd	r2, [sp, #20]
   128b0:	bl	117f4 <gib_imlib_create_image_from_drawable@plt>
   128b4:	ldr	r2, [sp, #44]	; 0x2c
   128b8:	ldr	r3, [r5]
   128bc:	cmp	r2, r3
   128c0:	bne	128cc <__fdelt_chk@plt+0xfc4>
   128c4:	add	sp, sp, #48	; 0x30
   128c8:	pop	{r4, r5, r6, pc}
   128cc:	bl	1180c <__stack_chk_fail@plt>
   128d0:	andeq	r4, r2, r0, lsl #27
   128d4:	andeq	r5, r2, r0, asr #2
   128d8:	andeq	r5, r2, ip, asr #2
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128e0:	sub	sp, sp, #396	; 0x18c
   128e4:	ldr	r6, [pc, #1324]	; 12e18 <__fdelt_chk@plt+0x1510>
   128e8:	ldr	r2, [pc, #1324]	; 12e1c <__fdelt_chk@plt+0x1514>
   128ec:	ldr	r5, [pc, #1324]	; 12e20 <__fdelt_chk@plt+0x1518>
   128f0:	ldr	r3, [r6]
   128f4:	ldr	r2, [r2]
   128f8:	mov	r0, r3
   128fc:	ldr	r3, [r3, #8]
   12900:	mov	r4, #0
   12904:	add	ip, r3, #1
   12908:	mov	r1, #68	; 0x44
   1290c:	stm	r5, {r3, ip}
   12910:	str	r2, [sp, #388]	; 0x184
   12914:	str	r4, [sp, #56]	; 0x38
   12918:	str	r4, [sp, #60]	; 0x3c
   1291c:	str	r4, [sp, #64]	; 0x40
   12920:	str	r4, [sp, #68]	; 0x44
   12924:	bl	11518 <XCreateFontCursor@plt>
   12928:	mov	r1, #78	; 0x4e
   1292c:	ldr	sl, [pc, #1264]	; 12e24 <__fdelt_chk@plt+0x151c>
   12930:	mov	r7, #1
   12934:	mov	r8, r0
   12938:	str	r0, [sp, #44]	; 0x2c
   1293c:	ldr	r0, [r6]
   12940:	bl	11518 <XCreateFontCursor@plt>
   12944:	mov	r1, r4
   12948:	str	r0, [sp, #52]	; 0x34
   1294c:	ldr	r0, [r6]
   12950:	bl	11728 <XWhitePixel@plt>
   12954:	mov	r3, #6
   12958:	mov	r1, r4
   1295c:	str	r3, [sp, #72]	; 0x48
   12960:	str	r0, [sp, #80]	; 0x50
   12964:	ldr	r0, [r6]
   12968:	bl	117dc <XBlackPixel@plt>
   1296c:	ldr	ip, [sp, #80]	; 0x50
   12970:	ldr	r1, [sl]
   12974:	add	r3, sp, #72	; 0x48
   12978:	str	r7, [sp, #136]	; 0x88
   1297c:	mov	r2, r0
   12980:	eor	ip, ip, r2
   12984:	str	r2, [sp, #84]	; 0x54
   12988:	ldr	r0, [r6]
   1298c:	ldr	r2, [pc, #1172]	; 12e28 <__fdelt_chk@plt+0x1520>
   12990:	str	ip, [sp, #76]	; 0x4c
   12994:	bl	117ac <XCreateGC@plt>
   12998:	ldr	r1, [sl]
   1299c:	str	r4, [sp, #16]
   129a0:	str	r8, [sp, #12]
   129a4:	str	r7, [sp, #4]
   129a8:	str	r7, [sp]
   129ac:	mov	r2, r4
   129b0:	str	r1, [sp, #8]
   129b4:	ldr	r3, [pc, #1136]	; 12e2c <__fdelt_chk@plt+0x1524>
   129b8:	str	r0, [sp, #36]	; 0x24
   129bc:	ldr	r0, [r6]
   129c0:	bl	11638 <XGrabPointer@plt>
   129c4:	cmp	r0, r4
   129c8:	bne	12db0 <__fdelt_chk@plt+0x14a8>
   129cc:	mov	r2, #0
   129d0:	mov	r3, #1
   129d4:	str	r2, [sp, #4]
   129d8:	str	r3, [sp]
   129dc:	ldr	r1, [sl]
   129e0:	ldr	r0, [r6]
   129e4:	bl	11890 <XGrabKeyboard@plt>
   129e8:	cmp	r0, #0
   129ec:	bne	12da4 <__fdelt_chk@plt+0x149c>
   129f0:	mov	r8, #0
   129f4:	ldr	r0, [r6]
   129f8:	mov	r9, r8
   129fc:	add	r4, sp, #384	; 0x180
   12a00:	str	r8, [sp, #28]
   12a04:	str	r8, [sp, #32]
   12a08:	str	r8, [sp, #40]	; 0x28
   12a0c:	str	r8, [sp, #48]	; 0x30
   12a10:	bl	118fc <XPending@plt>
   12a14:	subs	r7, r0, #0
   12a18:	bne	12a9c <__fdelt_chk@plt+0x1194>
   12a1c:	add	r3, sp, #256	; 0x100
   12a20:	str	r7, [r3, #4]!
   12a24:	cmp	r4, r3
   12a28:	bne	12a20 <__fdelt_chk@plt+0x1118>
   12a2c:	ldr	r0, [r5]
   12a30:	bl	11908 <__fdelt_chk@plt>
   12a34:	ldr	r3, [r5]
   12a38:	mov	r1, #1
   12a3c:	rsbs	r2, r3, #0
   12a40:	and	r2, r2, #31
   12a44:	and	r3, r3, #31
   12a48:	rsbpl	r3, r2, #0
   12a4c:	add	r2, sp, #392	; 0x188
   12a50:	add	r0, r2, r0, lsl #2
   12a54:	ldr	r2, [r0, #-132]	; 0xffffff7c
   12a58:	orr	r3, r2, r1, lsl r3
   12a5c:	str	r3, [r0, #-132]	; 0xffffff7c
   12a60:	bl	118e4 <__errno_location@plt>
   12a64:	mov	r3, #0
   12a68:	mov	r2, r3
   12a6c:	add	r1, sp, #260	; 0x104
   12a70:	str	r7, [r0]
   12a74:	mov	fp, r0
   12a78:	str	r7, [sp]
   12a7c:	ldr	r0, [r5, #4]
   12a80:	bl	117a0 <select@plt>
   12a84:	cmp	r0, #0
   12a88:	blt	12ad0 <__fdelt_chk@plt+0x11c8>
   12a8c:	ldr	r0, [r6]
   12a90:	bl	118fc <XPending@plt>
   12a94:	subs	r7, r0, #0
   12a98:	beq	12a1c <__fdelt_chk@plt+0x1114>
   12a9c:	add	r1, sp, #164	; 0xa4
   12aa0:	ldr	r0, [r6]
   12aa4:	bl	1171c <XNextEvent@plt>
   12aa8:	ldr	r7, [sp, #164]	; 0xa4
   12aac:	sub	r3, r7, #2
   12ab0:	cmp	r3, #4
   12ab4:	ldrls	pc, [pc, r3, lsl #2]
   12ab8:	b	12a8c <__fdelt_chk@plt+0x1184>
   12abc:			; <UNDEFINED> instruction: 0x00012bb0
   12ac0:	andeq	r2, r1, ip, lsl #21
   12ac4:	andeq	r2, r1, r4, ror fp
   12ac8:	andeq	r2, r1, r4, lsl #22
   12acc:	strdeq	r2, [r1], -r4
   12ad0:	ldr	r2, [fp]
   12ad4:	cmp	r2, #22
   12ad8:	cmpne	r2, #12
   12adc:	moveq	r3, #1
   12ae0:	movne	r3, #0
   12ae4:	cmp	r2, #9
   12ae8:	orreq	r3, r3, #1
   12aec:	cmp	r3, #0
   12af0:	beq	12a8c <__fdelt_chk@plt+0x1184>
   12af4:	ldr	r0, [pc, #820]	; 12e30 <__fdelt_chk@plt+0x1528>
   12af8:	bl	118f0 <gib_eprintf@plt>
   12afc:	ldr	r0, [r6]
   12b00:	b	12a10 <__fdelt_chk@plt+0x1108>
   12b04:	cmp	r9, #0
   12b08:	mov	r7, #1
   12b0c:	ldr	r0, [r6]
   12b10:	bne	12bd4 <__fdelt_chk@plt+0x12cc>
   12b14:	mov	r1, r9
   12b18:	bl	115f0 <XUngrabPointer@plt>
   12b1c:	mov	r1, r9
   12b20:	ldr	r0, [r6]
   12b24:	bl	1177c <XUngrabKeyboard@plt>
   12b28:	ldr	r1, [sp, #44]	; 0x2c
   12b2c:	ldr	r0, [r6]
   12b30:	bl	1153c <XFreeCursor@plt>
   12b34:	ldr	r1, [sp, #36]	; 0x24
   12b38:	ldr	r0, [r6]
   12b3c:	bl	116f8 <XFreeGC@plt>
   12b40:	mov	r1, #1
   12b44:	ldr	r0, [r6]
   12b48:	bl	117e8 <XSync@plt>
   12b4c:	cmp	r7, #1
   12b50:	beq	12dbc <__fdelt_chk@plt+0x14b4>
   12b54:	mov	r0, #0
   12b58:	ldr	r3, [pc, #700]	; 12e1c <__fdelt_chk@plt+0x1514>
   12b5c:	ldr	r2, [sp, #388]	; 0x184
   12b60:	ldr	r3, [r3]
   12b64:	cmp	r2, r3
   12b68:	bne	12e14 <__fdelt_chk@plt+0x150c>
   12b6c:	add	sp, sp, #396	; 0x18c
   12b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b74:	ldr	r0, [sp, #196]	; 0xc4
   12b78:	ldr	ip, [sp, #200]	; 0xc8
   12b7c:	mov	r2, r0
   12b80:	mov	r3, ip
   12b84:	str	r0, [sp, #56]	; 0x38
   12b88:	ldr	r1, [sp, #188]	; 0xbc
   12b8c:	ldr	r0, [r6]
   12b90:	str	ip, [sp, #60]	; 0x3c
   12b94:	bl	11ebc <__fdelt_chk@plt+0x5b4>
   12b98:	mov	r3, #1
   12b9c:	str	r3, [sp, #48]	; 0x30
   12ba0:	subs	r8, r0, #0
   12ba4:	ldr	r0, [r6]
   12ba8:	ldreq	r8, [sl]
   12bac:	b	12a10 <__fdelt_chk@plt+0x1108>
   12bb0:	ldr	r3, [pc, #636]	; 12e34 <__fdelt_chk@plt+0x152c>
   12bb4:	mov	r2, #31
   12bb8:	mov	r1, #1
   12bbc:	ldr	r3, [r3]
   12bc0:	ldr	r0, [pc, #624]	; 12e38 <__fdelt_chk@plt+0x1530>
   12bc4:	bl	117b8 <fwrite@plt>
   12bc8:	cmp	r9, #0
   12bcc:	ldr	r0, [r6]
   12bd0:	beq	12b14 <__fdelt_chk@plt+0x120c>
   12bd4:	ldr	r3, [sp, #28]
   12bd8:	ldr	r4, [sp, #36]	; 0x24
   12bdc:	str	r3, [sp, #8]
   12be0:	ldr	r3, [sp, #32]
   12be4:	mov	r2, r4
   12be8:	ldr	r1, [sl]
   12bec:	str	r3, [sp]
   12bf0:	str	r9, [sp, #4]
   12bf4:	ldr	r3, [sp, #40]	; 0x28
   12bf8:	bl	11704 <XDrawRectangle@plt>
   12bfc:	ldr	r0, [r6]
   12c00:	bl	117d0 <XFlush@plt>
   12c04:	mov	r1, #0
   12c08:	ldr	r0, [r6]
   12c0c:	bl	115f0 <XUngrabPointer@plt>
   12c10:	mov	r1, #0
   12c14:	ldr	r0, [r6]
   12c18:	bl	1177c <XUngrabKeyboard@plt>
   12c1c:	ldr	r1, [sp, #44]	; 0x2c
   12c20:	ldr	r0, [r6]
   12c24:	bl	1153c <XFreeCursor@plt>
   12c28:	mov	r1, r4
   12c2c:	ldr	r0, [r6]
   12c30:	bl	116f8 <XFreeGC@plt>
   12c34:	mov	r1, #1
   12c38:	ldr	r0, [r6]
   12c3c:	bl	117e8 <XSync@plt>
   12c40:	cmp	r7, #1
   12c44:	bne	12b54 <__fdelt_chk@plt+0x124c>
   12c48:	bl	11d10 <__fdelt_chk@plt+0x408>
   12c4c:	cmp	r9, #5
   12c50:	ble	12dc0 <__fdelt_chk@plt+0x14b8>
   12c54:	ldr	r2, [sp, #56]	; 0x38
   12c58:	ldr	r0, [sp, #196]	; 0xc4
   12c5c:	ldr	r3, [sp, #60]	; 0x3c
   12c60:	ldr	r1, [sp, #200]	; 0xc8
   12c64:	sub	lr, r0, r2
   12c68:	cmp	lr, #0
   12c6c:	sub	ip, r1, r3
   12c70:	sublt	r2, r2, r0
   12c74:	str	lr, [sp, #64]	; 0x40
   12c78:	strlt	r0, [sp, #56]	; 0x38
   12c7c:	strlt	r2, [sp, #64]	; 0x40
   12c80:	add	r7, sp, #64	; 0x40
   12c84:	cmp	ip, #0
   12c88:	add	r5, sp, #60	; 0x3c
   12c8c:	add	r4, sp, #56	; 0x38
   12c90:	add	r9, sp, #68	; 0x44
   12c94:	sublt	r3, r3, r1
   12c98:	str	ip, [sp, #68]	; 0x44
   12c9c:	strlt	r1, [sp, #60]	; 0x3c
   12ca0:	strlt	r3, [sp, #68]	; 0x44
   12ca4:	mov	r3, r9
   12ca8:	mov	r1, r5
   12cac:	mov	r2, r7
   12cb0:	mov	r0, r4
   12cb4:	bl	11e38 <__fdelt_chk@plt+0x530>
   12cb8:	ldr	r3, [pc, #380]	; 12e3c <__fdelt_chk@plt+0x1534>
   12cbc:	ldr	r1, [r3, #28]
   12cc0:	cmp	r1, #0
   12cc4:	beq	12df4 <__fdelt_chk@plt+0x14ec>
   12cc8:	ldr	r1, [sp, #68]	; 0x44
   12ccc:	ldr	r2, [sp, #64]	; 0x40
   12cd0:	mov	r3, #1
   12cd4:	str	r1, [sp, #4]
   12cd8:	str	r2, [sp]
   12cdc:	str	r3, [sp, #8]
   12ce0:	ldr	r0, [sl]
   12ce4:	ldrd	r2, [sp, #56]	; 0x38
   12ce8:	mov	r1, #0
   12cec:	bl	117f4 <gib_imlib_create_image_from_drawable@plt>
   12cf0:	b	12b58 <__fdelt_chk@plt+0x1250>
   12cf4:	ldr	r3, [sp, #48]	; 0x30
   12cf8:	ldr	r0, [r6]
   12cfc:	cmp	r3, #0
   12d00:	beq	12a10 <__fdelt_chk@plt+0x1108>
   12d04:	cmp	r9, #0
   12d08:	beq	12e00 <__fdelt_chk@plt+0x14f8>
   12d0c:	ldr	r3, [sp, #28]
   12d10:	str	r9, [sp, #4]
   12d14:	str	r3, [sp, #8]
   12d18:	ldr	r3, [sp, #32]
   12d1c:	ldr	r1, [sl]
   12d20:	str	r3, [sp]
   12d24:	ldrd	r2, [sp, #36]	; 0x24
   12d28:	bl	11704 <XDrawRectangle@plt>
   12d2c:	ldr	r2, [sp, #200]	; 0xc8
   12d30:	ldr	r0, [sp, #60]	; 0x3c
   12d34:	ldr	r1, [sp, #56]	; 0x38
   12d38:	ldr	r3, [sp, #196]	; 0xc4
   12d3c:	str	r0, [sp, #32]
   12d40:	sub	r0, r2, r0
   12d44:	subs	r9, r3, r1
   12d48:	str	r0, [sp, #28]
   12d4c:	str	r1, [sp, #40]	; 0x28
   12d50:	submi	r9, r1, r3
   12d54:	strmi	r3, [sp, #40]	; 0x28
   12d58:	ldr	r3, [sp, #28]
   12d5c:	ldr	r1, [sl]
   12d60:	cmp	r3, #0
   12d64:	str	r9, [sp, #4]
   12d68:	ldrlt	r3, [sp, #32]
   12d6c:	strlt	r2, [sp, #32]
   12d70:	sublt	r3, r3, r2
   12d74:	strlt	r3, [sp, #28]
   12d78:	ldr	r3, [sp, #28]
   12d7c:	ldr	r0, [r6]
   12d80:	str	r3, [sp, #8]
   12d84:	ldr	r3, [sp, #32]
   12d88:	str	r3, [sp]
   12d8c:	ldrd	r2, [sp, #36]	; 0x24
   12d90:	bl	11704 <XDrawRectangle@plt>
   12d94:	ldr	r0, [r6]
   12d98:	bl	117d0 <XFlush@plt>
   12d9c:	ldr	r0, [r6]
   12da0:	b	12a10 <__fdelt_chk@plt+0x1108>
   12da4:	ldr	r0, [pc, #148]	; 12e40 <__fdelt_chk@plt+0x1538>
   12da8:	bl	118f0 <gib_eprintf@plt>
   12dac:	b	129f0 <__fdelt_chk@plt+0x10e8>
   12db0:	ldr	r0, [pc, #140]	; 12e44 <__fdelt_chk@plt+0x153c>
   12db4:	bl	118f0 <gib_eprintf@plt>
   12db8:	b	129cc <__fdelt_chk@plt+0x10c4>
   12dbc:	bl	11d10 <__fdelt_chk@plt+0x408>
   12dc0:	add	r7, sp, #64	; 0x40
   12dc4:	add	r5, sp, #60	; 0x3c
   12dc8:	add	r4, sp, #56	; 0x38
   12dcc:	add	r9, sp, #68	; 0x44
   12dd0:	mov	r0, r8
   12dd4:	mov	r3, r7
   12dd8:	mov	r2, r5
   12ddc:	mov	r1, r4
   12de0:	str	r9, [sp]
   12de4:	bl	12668 <__fdelt_chk@plt+0xd60>
   12de8:	cmp	r0, #0
   12dec:	bne	12ca4 <__fdelt_chk@plt+0x139c>
   12df0:	b	12b54 <__fdelt_chk@plt+0x124c>
   12df4:	ldr	r0, [r6]
   12df8:	bl	116c8 <XBell@plt>
   12dfc:	b	12cc8 <__fdelt_chk@plt+0x13c0>
   12e00:	mov	r3, r9
   12e04:	ldr	r2, [sp, #52]	; 0x34
   12e08:	ldr	r1, [pc, #56]	; 12e48 <__fdelt_chk@plt+0x1540>
   12e0c:	bl	1156c <XChangeActivePointerGrab@plt>
   12e10:	b	12d2c <__fdelt_chk@plt+0x1424>
   12e14:	bl	1180c <__stack_chk_fail@plt>
   12e18:	andeq	r5, r2, r0, asr #2
   12e1c:	andeq	r4, r2, r0, lsl #27
   12e20:	andeq	r5, r2, r8, lsr r1
   12e24:	andeq	r5, r2, ip, asr #2
   12e28:	andeq	r8, r0, sp
   12e2c:	andeq	r2, r0, ip
   12e30:	andeq	r3, r1, r8, lsr #22
   12e34:	andeq	r5, r2, r8, lsr #2
   12e38:	andeq	r3, r1, r8, lsl #22
   12e3c:	andeq	r5, r2, r0, asr r1
   12e40:	strdeq	r3, [r1], -r0
   12e44:	ldrdeq	r3, [r1], -r8
   12e48:	andeq	r2, r0, r8
   12e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e50:	sub	sp, sp, #44	; 0x2c
   12e54:	mov	r5, r0
   12e58:	bl	11698 <gib_list_length@plt>
   12e5c:	subs	r9, r0, #0
   12e60:	beq	12f60 <__fdelt_chk@plt+0x1658>
   12e64:	cmp	r5, #0
   12e68:	beq	12f6c <__fdelt_chk@plt+0x1664>
   12e6c:	mov	sl, #0
   12e70:	mov	r6, sl
   12e74:	mov	r4, r5
   12e78:	ldr	r8, [r4]
   12e7c:	mov	r0, r8
   12e80:	bl	11854 <gib_imlib_image_get_height@plt>
   12e84:	mov	r7, r0
   12e88:	mov	r0, r8
   12e8c:	bl	11608 <gib_imlib_image_get_width@plt>
   12e90:	ldr	r4, [r4, #4]
   12e94:	cmp	r6, r7
   12e98:	movlt	r6, r7
   12e9c:	cmp	r4, #0
   12ea0:	add	sl, sl, r0
   12ea4:	bne	12e78 <__fdelt_chk@plt+0x1570>
   12ea8:	mov	r1, r6
   12eac:	mov	r0, sl
   12eb0:	bl	11620 <imlib_create_image@plt>
   12eb4:	mov	r2, #255	; 0xff
   12eb8:	str	r6, [sp]
   12ebc:	str	r2, [sp, #4]
   12ec0:	str	r4, [sp, #16]
   12ec4:	str	r4, [sp, #12]
   12ec8:	str	r4, [sp, #8]
   12ecc:	mov	r3, sl
   12ed0:	mov	r2, r4
   12ed4:	mov	r1, r4
   12ed8:	mov	r8, r4
   12edc:	mov	r6, r4
   12ee0:	mov	r9, r0
   12ee4:	bl	11824 <gib_imlib_image_fill_rectangle@plt>
   12ee8:	ldm	r5, {r4, sl}
   12eec:	mov	r0, r4
   12ef0:	bl	11854 <gib_imlib_image_get_height@plt>
   12ef4:	mov	fp, r0
   12ef8:	mov	r0, r4
   12efc:	bl	11608 <gib_imlib_image_get_width@plt>
   12f00:	mov	r3, #0
   12f04:	mov	r2, #1
   12f08:	mov	r1, r4
   12f0c:	str	r2, [sp, #28]
   12f10:	str	r8, [sp, #12]
   12f14:	mov	r2, r3
   12f18:	str	fp, [sp, #24]
   12f1c:	str	fp, [sp, #8]
   12f20:	str	r6, [sp, #36]	; 0x24
   12f24:	str	r6, [sp, #32]
   12f28:	str	r6, [sp, #16]
   12f2c:	str	r6, [sp]
   12f30:	mov	r7, r0
   12f34:	str	r0, [sp, #20]
   12f38:	str	r0, [sp, #4]
   12f3c:	mov	r0, r9
   12f40:	bl	1183c <gib_imlib_blend_image_onto_image@plt>
   12f44:	mov	r0, r4
   12f48:	bl	11860 <gib_imlib_free_image_and_decache@plt>
   12f4c:	mov	r0, r5
   12f50:	bl	116b0 <free@plt>
   12f54:	subs	r5, sl, #0
   12f58:	add	r8, r8, r7
   12f5c:	bne	12ee8 <__fdelt_chk@plt+0x15e0>
   12f60:	mov	r0, r9
   12f64:	add	sp, sp, #44	; 0x2c
   12f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f6c:	mov	r1, r5
   12f70:	mov	r0, r5
   12f74:	bl	11620 <imlib_create_image@plt>
   12f78:	mov	r3, #255	; 0xff
   12f7c:	str	r3, [sp, #4]
   12f80:	str	r5, [sp, #16]
   12f84:	str	r5, [sp, #12]
   12f88:	str	r5, [sp, #8]
   12f8c:	str	r5, [sp]
   12f90:	mov	r3, r5
   12f94:	mov	r2, r5
   12f98:	mov	r1, r5
   12f9c:	mov	r9, r0
   12fa0:	bl	11824 <gib_imlib_image_fill_rectangle@plt>
   12fa4:	b	12f60 <__fdelt_chk@plt+0x1658>
   12fa8:	ldr	r3, [pc, #280]	; 130c8 <__fdelt_chk@plt+0x17c0>
   12fac:	ldr	r2, [pc, #280]	; 130cc <__fdelt_chk@plt+0x17c4>
   12fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fb4:	sub	sp, sp, #284	; 0x11c
   12fb8:	ldr	r3, [r3]
   12fbc:	ldr	r2, [r2]
   12fc0:	ldr	r7, [r3, #136]	; 0x88
   12fc4:	str	r2, [sp, #276]	; 0x114
   12fc8:	cmp	r7, #1
   12fcc:	ble	130bc <__fdelt_chk@plt+0x17b4>
   12fd0:	ldr	r0, [r3, #128]	; 0x80
   12fd4:	bl	11530 <_gib_estrdup@plt>
   12fd8:	mov	r5, #0
   12fdc:	ldr	fp, [pc, #236]	; 130d0 <__fdelt_chk@plt+0x17c8>
   12fe0:	ldr	sl, [pc, #236]	; 130d4 <__fdelt_chk@plt+0x17cc>
   12fe4:	ldr	r9, [pc, #236]	; 130d8 <__fdelt_chk@plt+0x17d0>
   12fe8:	mov	r4, r5
   12fec:	mov	r8, #1
   12ff0:	mov	r6, r0
   12ff4:	mov	r1, #58	; 0x3a
   12ff8:	mov	r0, r6
   12ffc:	bl	115e4 <strchr@plt>
   13000:	cmp	r0, #0
   13004:	beq	1301c <__fdelt_chk@plt+0x1714>
   13008:	mov	r1, #46	; 0x2e
   1300c:	bl	115e4 <strchr@plt>
   13010:	cmp	r0, #0
   13014:	movne	r3, #0
   13018:	strbne	r3, [r0]
   1301c:	mov	r3, #255	; 0xff
   13020:	mov	r1, r3
   13024:	mov	r2, #1
   13028:	str	r4, [sp, #8]
   1302c:	str	r6, [sp, #4]
   13030:	str	fp, [sp]
   13034:	add	r0, sp, #20
   13038:	bl	11794 <__snprintf_chk@plt>
   1303c:	mov	r1, r4
   13040:	add	r0, sp, #20
   13044:	bl	136d8 <__fdelt_chk@plt+0x1dd0>
   13048:	ldr	r1, [sl]
   1304c:	str	r8, [sp, #8]
   13050:	mov	r3, #0
   13054:	ldr	r0, [r1, #16]
   13058:	mov	r2, r3
   1305c:	str	r0, [sp, #4]
   13060:	ldr	r0, [r1, #12]
   13064:	mov	r1, r3
   13068:	str	r0, [sp]
   1306c:	ldr	r0, [r9]
   13070:	bl	117f4 <gib_imlib_create_image_from_drawable@plt>
   13074:	add	r4, r4, #1
   13078:	mov	r1, r0
   1307c:	mov	r0, r5
   13080:	bl	11584 <gib_list_add_end@plt>
   13084:	cmp	r7, r4
   13088:	mov	r5, r0
   1308c:	bne	12ff4 <__fdelt_chk@plt+0x16ec>
   13090:	mov	r0, r6
   13094:	bl	116b0 <free@plt>
   13098:	mov	r0, r5
   1309c:	bl	12e4c <__fdelt_chk@plt+0x1544>
   130a0:	ldr	r3, [pc, #36]	; 130cc <__fdelt_chk@plt+0x17c4>
   130a4:	ldr	r2, [sp, #276]	; 0x114
   130a8:	ldr	r3, [r3]
   130ac:	cmp	r2, r3
   130b0:	bne	130c4 <__fdelt_chk@plt+0x17bc>
   130b4:	add	sp, sp, #284	; 0x11c
   130b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130bc:	bl	11dc0 <__fdelt_chk@plt+0x4b8>
   130c0:	b	130a0 <__fdelt_chk@plt+0x1798>
   130c4:	bl	1180c <__stack_chk_fail@plt>
   130c8:	andeq	r5, r2, r0, asr #2
   130cc:	andeq	r4, r2, r0, lsl #27
   130d0:	andeq	r3, r1, r8, asr #22
   130d4:	andeq	r5, r2, r4, asr #2
   130d8:	andeq	r5, r2, ip, asr #2
   130dc:	push	{r4, r5, r6, lr}
   130e0:	sub	sp, sp, #8
   130e4:	mov	r5, r0
   130e8:	bl	116ec <strlen@plt>
   130ec:	add	r0, r0, #7
   130f0:	bl	11668 <_gib_emalloc@plt>
   130f4:	mov	r1, #46	; 0x2e
   130f8:	mov	r4, r0
   130fc:	mov	r0, r5
   13100:	bl	11650 <strrchr@plt>
   13104:	subs	r6, r0, #0
   13108:	beq	1315c <__fdelt_chk@plt+0x1854>
   1310c:	sub	r2, r6, r5
   13110:	mov	r1, r5
   13114:	mov	r0, r4
   13118:	bl	115b4 <strncpy@plt>
   1311c:	mov	r0, r4
   13120:	bl	116ec <strlen@plt>
   13124:	ldr	r2, [pc, #84]	; 13180 <__fdelt_chk@plt+0x1878>
   13128:	mov	r1, r6
   1312c:	mov	r3, r0
   13130:	add	ip, r4, r0
   13134:	ldr	r0, [r2]
   13138:	ldrh	r2, [r2, #4]
   1313c:	str	r0, [r4, r3]
   13140:	add	r0, r3, #6
   13144:	strh	r2, [ip, #4]
   13148:	add	r0, r4, r0
   1314c:	bl	1174c <strcpy@plt>
   13150:	mov	r0, r4
   13154:	add	sp, sp, #8
   13158:	pop	{r4, r5, r6, pc}
   1315c:	str	r5, [sp]
   13160:	ldr	r3, [pc, #28]	; 13184 <__fdelt_chk@plt+0x187c>
   13164:	mvn	r2, #0
   13168:	mov	r1, #1
   1316c:	mov	r0, r4
   13170:	bl	118b4 <__sprintf_chk@plt>
   13174:	mov	r0, r4
   13178:	add	sp, sp, #8
   1317c:	pop	{r4, r5, r6, pc}
   13180:	andeq	r3, r1, ip, lsl #24
   13184:	andeq	r3, r1, r4, lsl ip
   13188:	push	{r4, r5, lr}
   1318c:	mov	r3, #44	; 0x2c
   13190:	ldr	r5, [pc, #172]	; 13244 <__fdelt_chk@plt+0x193c>
   13194:	sub	sp, sp, #28
   13198:	mov	r1, r3
   1319c:	ldr	r2, [r5]
   131a0:	strh	r3, [sp, #16]
   131a4:	str	r2, [sp, #20]
   131a8:	mov	r4, r0
   131ac:	bl	115e4 <strchr@plt>
   131b0:	cmp	r0, #0
   131b4:	beq	13228 <__fdelt_chk@plt+0x1920>
   131b8:	mov	r0, r4
   131bc:	add	r1, sp, #16
   131c0:	bl	11830 <strtok@plt>
   131c4:	mov	r2, #10
   131c8:	mov	r1, #0
   131cc:	bl	11740 <strtol@plt>
   131d0:	add	r4, sp, #4
   131d4:	str	r0, [sp]
   131d8:	add	r1, sp, #16
   131dc:	mov	r0, #0
   131e0:	bl	11830 <strtok@plt>
   131e4:	cmp	r0, #0
   131e8:	beq	13200 <__fdelt_chk@plt+0x18f8>
   131ec:	mov	r2, #10
   131f0:	mov	r1, #0
   131f4:	bl	11740 <strtol@plt>
   131f8:	str	r0, [r4], #4
   131fc:	b	131d8 <__fdelt_chk@plt+0x18d0>
   13200:	ldr	r3, [pc, #64]	; 13248 <__fdelt_chk@plt+0x1940>
   13204:	ldrd	r0, [sp, #4]
   13208:	mov	r2, #1
   1320c:	ldr	ip, [sp]
   13210:	str	r2, [r3, #60]	; 0x3c
   13214:	ldr	r2, [sp, #12]
   13218:	str	ip, [r3, #64]	; 0x40
   1321c:	str	r0, [r3, #68]	; 0x44
   13220:	str	r1, [r3, #76]	; 0x4c
   13224:	str	r2, [r3, #72]	; 0x48
   13228:	ldr	r2, [sp, #20]
   1322c:	ldr	r3, [r5]
   13230:	cmp	r2, r3
   13234:	bne	13240 <__fdelt_chk@plt+0x1938>
   13238:	add	sp, sp, #28
   1323c:	pop	{r4, r5, pc}
   13240:	bl	1180c <__stack_chk_fail@plt>
   13244:	andeq	r4, r2, r0, lsl #27
   13248:	andeq	r5, r2, r0, asr r1
   1324c:	push	{r4, r5, r6, lr}
   13250:	mov	r1, #120	; 0x78
   13254:	mov	r5, r0
   13258:	bl	115e4 <strchr@plt>
   1325c:	subs	r1, r0, #0
   13260:	beq	132e4 <__fdelt_chk@plt+0x19dc>
   13264:	ldr	r1, [pc, #200]	; 13334 <__fdelt_chk@plt+0x1a2c>
   13268:	mov	r0, r5
   1326c:	bl	11830 <strtok@plt>
   13270:	mov	r2, #10
   13274:	mov	r1, #0
   13278:	bl	11740 <strtol@plt>
   1327c:	ldr	r4, [pc, #180]	; 13338 <__fdelt_chk@plt+0x1a30>
   13280:	ldr	r1, [pc, #172]	; 13334 <__fdelt_chk@plt+0x1a2c>
   13284:	str	r0, [r4, #40]	; 0x28
   13288:	mov	r0, #0
   1328c:	bl	11830 <strtok@plt>
   13290:	subs	r6, r0, #0
   13294:	popeq	{r4, r5, r6, pc}
   13298:	mov	r2, #10
   1329c:	mov	r1, #0
   132a0:	mov	r0, r5
   132a4:	bl	11740 <strtol@plt>
   132a8:	mov	r2, #10
   132ac:	mov	r1, #0
   132b0:	str	r0, [r4, #40]	; 0x28
   132b4:	mov	r0, r6
   132b8:	bl	11740 <strtol@plt>
   132bc:	ldr	r3, [r4, #40]	; 0x28
   132c0:	cmp	r3, #0
   132c4:	str	r0, [r4, #44]	; 0x2c
   132c8:	blt	13310 <__fdelt_chk@plt+0x1a08>
   132cc:	cmp	r0, #0
   132d0:	blt	13320 <__fdelt_chk@plt+0x1a18>
   132d4:	orrs	r0, r3, r0
   132d8:	bne	13328 <__fdelt_chk@plt+0x1a20>
   132dc:	str	r0, [r4, #36]	; 0x24
   132e0:	pop	{r4, r5, r6, pc}
   132e4:	mov	r0, r5
   132e8:	mov	r2, #10
   132ec:	bl	11740 <strtol@plt>
   132f0:	ldr	r4, [pc, #64]	; 13338 <__fdelt_chk@plt+0x1a30>
   132f4:	cmp	r0, #0
   132f8:	str	r0, [r4, #36]	; 0x24
   132fc:	ble	13328 <__fdelt_chk@plt+0x1a20>
   13300:	cmp	r0, #100	; 0x64
   13304:	movgt	r3, #100	; 0x64
   13308:	strgt	r3, [r4, #36]	; 0x24
   1330c:	pop	{r4, r5, r6, pc}
   13310:	mov	r3, #1
   13314:	cmp	r0, #0
   13318:	str	r3, [r4, #40]	; 0x28
   1331c:	bge	13328 <__fdelt_chk@plt+0x1a20>
   13320:	mov	r3, #1
   13324:	str	r3, [r4, #44]	; 0x2c
   13328:	mov	r3, #1
   1332c:	str	r3, [r4, #36]	; 0x24
   13330:	pop	{r4, r5, r6, pc}
   13334:	andeq	r3, r1, r0, lsr #24
   13338:	andeq	r5, r2, r0, asr r1
   1333c:	push	{r4, lr}
   13340:	ldr	r0, [pc, #8]	; 13350 <__fdelt_chk@plt+0x1a48>
   13344:	bl	1186c <puts@plt>
   13348:	mov	r0, #0
   1334c:	bl	118d8 <exit@plt>
   13350:	andeq	r3, r1, r4, lsr #24
   13354:	push	{r4, lr}
   13358:	ldr	r0, [pc, #8]	; 13368 <__fdelt_chk@plt+0x1a60>
   1335c:	bl	1186c <puts@plt>
   13360:	mov	r0, #0
   13364:	bl	118d8 <exit@plt>
   13368:	andeq	r3, r1, r8, lsr ip
   1336c:	ldr	r3, [pc, #24]	; 1338c <__fdelt_chk@plt+0x1a84>
   13370:	push	{r4, lr}
   13374:	mov	r1, #1
   13378:	ldr	r2, [pc, #16]	; 13390 <__fdelt_chk@plt+0x1a88>
   1337c:	ldr	r0, [r3]
   13380:	bl	11818 <__fprintf_chk@plt>
   13384:	mov	r0, #0
   13388:	bl	118d8 <exit@plt>
   1338c:	andeq	r5, r2, r4, lsr #2
   13390:	andeq	r3, r1, r8, lsl #25
   13394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13398:	sub	sp, sp, #20
   1339c:	ldr	r9, [pc, #788]	; 136b8 <__fdelt_chk@plt+0x1db0>
   133a0:	ldr	r4, [pc, #788]	; 136bc <__fdelt_chk@plt+0x1db4>
   133a4:	ldr	sl, [pc, #788]	; 136c0 <__fdelt_chk@plt+0x1db8>
   133a8:	ldr	r3, [r9]
   133ac:	ldr	r6, [pc, #784]	; 136c4 <__fdelt_chk@plt+0x1dbc>
   133b0:	mov	r2, #80	; 0x50
   133b4:	mov	r7, r0
   133b8:	mov	r8, r1
   133bc:	mov	r0, r4
   133c0:	mov	r1, #0
   133c4:	add	fp, sp, #8
   133c8:	mov	r5, #1
   133cc:	str	r3, [sp, #12]
   133d0:	bl	1162c <memset@plt>
   133d4:	mov	r2, #75	; 0x4b
   133d8:	mov	r3, #0
   133dc:	str	r2, [r4, #20]
   133e0:	str	r3, [sp, #8]
   133e4:	str	fp, [sp]
   133e8:	mov	r3, sl
   133ec:	ldr	r2, [pc, #724]	; 136c8 <__fdelt_chk@plt+0x1dc0>
   133f0:	mov	r1, r8
   133f4:	mov	r0, r7
   133f8:	bl	116bc <getopt_long@plt>
   133fc:	cmn	r0, #1
   13400:	beq	135f4 <__fdelt_chk@plt+0x1cec>
   13404:	sub	r0, r0, #43	; 0x2b
   13408:	cmp	r0, #79	; 0x4f
   1340c:	ldrls	pc, [pc, r0, lsl #2]
   13410:	b	133e4 <__fdelt_chk@plt+0x1adc>
   13414:	ldrdeq	r3, [r1], -r4
   13418:	andeq	r3, r1, r4, ror #7
   1341c:	andeq	r3, r1, r4, ror #7
   13420:	andeq	r3, r1, r4, ror #7
   13424:	andeq	r3, r1, r4, ror #7
   13428:	andeq	r3, r1, r4, ror #7
   1342c:	andeq	r3, r1, r4, ror #7
   13430:	andeq	r3, r1, r4, ror #7
   13434:	andeq	r3, r1, r4, ror #7
   13438:	andeq	r3, r1, r4, ror #7
   1343c:	andeq	r3, r1, r4, ror #7
   13440:	andeq	r3, r1, r4, ror #7
   13444:	andeq	r3, r1, r4, ror #7
   13448:	andeq	r3, r1, r4, ror #7
   1344c:	andeq	r3, r1, r4, ror #7
   13450:	andeq	r3, r1, r4, ror #7
   13454:	andeq	r3, r1, r4, ror #7
   13458:	andeq	r3, r1, r4, ror #7
   1345c:	andeq	r3, r1, r4, ror #7
   13460:	andeq	r3, r1, r4, ror #7
   13464:	andeq	r3, r1, r4, ror #7
   13468:	andeq	r3, r1, r4, ror #7
   1346c:	andeq	r3, r1, r4, ror #7
   13470:	andeq	r3, r1, r4, ror #7
   13474:	andeq	r3, r1, r4, ror #7
   13478:	andeq	r3, r1, r4, ror #7
   1347c:	andeq	r3, r1, r4, ror #7
   13480:	andeq	r3, r1, r4, ror #7
   13484:	andeq	r3, r1, r4, ror #7
   13488:	andeq	r3, r1, r4, ror #7
   1348c:	andeq	r3, r1, r4, ror #7
   13490:	andeq	r3, r1, r4, ror #7
   13494:	andeq	r3, r1, r4, ror #7
   13498:	andeq	r3, r1, r4, ror #7
   1349c:	andeq	r3, r1, r4, ror #7
   134a0:	andeq	r3, r1, r4, ror #7
   134a4:	andeq	r3, r1, r4, ror #7
   134a8:	andeq	r3, r1, r4, ror #7
   134ac:	andeq	r3, r1, r4, ror #7
   134b0:	andeq	r3, r1, r4, ror #7
   134b4:	andeq	r3, r1, r4, ror #7
   134b8:	andeq	r3, r1, r4, ror #7
   134bc:	andeq	r3, r1, r4, ror #7
   134c0:	andeq	r3, r1, r4, ror #7
   134c4:	andeq	r3, r1, r4, ror #7
   134c8:	andeq	r3, r1, r4, ror #7
   134cc:	andeq	r3, r1, r4, ror #7
   134d0:	andeq	r3, r1, r4, ror #7
   134d4:	andeq	r3, r1, r4, ror #7
   134d8:	andeq	r3, r1, r4, ror #7
   134dc:	andeq	r3, r1, r4, ror #7
   134e0:	andeq	r3, r1, r4, ror #7
   134e4:	andeq	r3, r1, r4, ror #7
   134e8:	andeq	r3, r1, r4, ror #7
   134ec:	andeq	r3, r1, r8, asr #11
   134f0:	andeq	r3, r1, r0, asr #11
   134f4:			; <UNDEFINED> instruction: 0x000135b8
   134f8:	andeq	r3, r1, r0, lsr #11
   134fc:	muleq	r1, r0, r5
   13500:	andeq	r3, r1, r4, ror #7
   13504:	andeq	r3, r1, r4, ror #7
   13508:	andeq	r3, r1, r0, lsr #13
   1350c:	andeq	r3, r1, r4, ror #7
   13510:	andeq	r3, r1, r4, ror #7
   13514:	andeq	r3, r1, r4, ror #7
   13518:	andeq	r3, r1, r4, ror #7
   1351c:	andeq	r3, r1, r8, lsl #11
   13520:	andeq	r3, r1, r4, ror #7
   13524:	andeq	r3, r1, r4, ror #7
   13528:	andeq	r3, r1, r4, ror #7
   1352c:	andeq	r3, r1, r0, ror r5
   13530:	andeq	r3, r1, r4, ror #7
   13534:	andeq	r3, r1, r8, ror #10
   13538:	andeq	r3, r1, ip, asr r5
   1353c:	andeq	r3, r1, r4, asr r5
   13540:	muleq	r1, ip, r6
   13544:	andeq	r3, r1, r4, ror #7
   13548:	andeq	r3, r1, r4, ror #7
   1354c:	andeq	r3, r1, r4, ror #7
   13550:	andeq	r3, r1, ip, ror #11
   13554:	str	r5, [r4, #16]
   13558:	b	133e4 <__fdelt_chk@plt+0x1adc>
   1355c:	ldr	r0, [r6]
   13560:	bl	1324c <__fdelt_chk@plt+0x1944>
   13564:	b	133e4 <__fdelt_chk@plt+0x1adc>
   13568:	str	r5, [r4, #12]
   1356c:	b	133e4 <__fdelt_chk@plt+0x1adc>
   13570:	mov	r2, #10
   13574:	mov	r1, #0
   13578:	ldr	r0, [r6]
   1357c:	bl	11740 <strtol@plt>
   13580:	str	r0, [r4, #20]
   13584:	b	133e4 <__fdelt_chk@plt+0x1adc>
   13588:	str	r5, [r4, #32]
   1358c:	b	133e4 <__fdelt_chk@plt+0x1adc>
   13590:	ldr	r0, [r6]
   13594:	bl	11530 <_gib_estrdup@plt>
   13598:	str	r0, [r4, #56]	; 0x38
   1359c:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135a0:	mov	r2, #10
   135a4:	mov	r1, #0
   135a8:	ldr	r0, [r6]
   135ac:	bl	11740 <strtol@plt>
   135b0:	str	r0, [r4, #4]
   135b4:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135b8:	str	r5, [r4, #8]
   135bc:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135c0:	str	r5, [r4, #24]
   135c4:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135c8:	ldr	r0, [r6]
   135cc:	bl	13188 <__fdelt_chk@plt+0x1880>
   135d0:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135d4:	mov	r2, #10
   135d8:	mov	r1, #0
   135dc:	ldr	r0, [r6]
   135e0:	bl	11740 <strtol@plt>
   135e4:	str	r0, [r4]
   135e8:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135ec:	str	r5, [r4, #28]
   135f0:	b	133e4 <__fdelt_chk@plt+0x1adc>
   135f4:	ldr	r5, [pc, #208]	; 136cc <__fdelt_chk@plt+0x1dc4>
   135f8:	ldr	r3, [r5]
   135fc:	cmp	r7, r3
   13600:	ble	1367c <__fdelt_chk@plt+0x1d74>
   13604:	ldr	sl, [pc, #196]	; 136d0 <__fdelt_chk@plt+0x1dc8>
   13608:	b	13628 <__fdelt_chk@plt+0x1d20>
   1360c:	mov	r1, r6
   13610:	mov	r0, sl
   13614:	str	fp, [r5]
   13618:	bl	11770 <gib_weprintf@plt>
   1361c:	ldr	r3, [r5]
   13620:	cmp	r7, r3
   13624:	ble	1367c <__fdelt_chk@plt+0x1d74>
   13628:	ldr	r2, [r4, #48]	; 0x30
   1362c:	add	fp, r3, #1
   13630:	cmp	r2, #0
   13634:	ldr	r6, [r8, r3, lsl #2]
   13638:	bne	1360c <__fdelt_chk@plt+0x1d04>
   1363c:	mov	r0, r6
   13640:	str	fp, [r5]
   13644:	str	r6, [r4, #48]	; 0x30
   13648:	bl	116ec <strlen@plt>
   1364c:	cmp	r0, #256	; 0x100
   13650:	bhi	136a4 <__fdelt_chk@plt+0x1d9c>
   13654:	ldr	r3, [r4, #36]	; 0x24
   13658:	cmp	r3, #0
   1365c:	moveq	r3, fp
   13660:	beq	13620 <__fdelt_chk@plt+0x1d18>
   13664:	mov	r0, r6
   13668:	bl	130dc <__fdelt_chk@plt+0x17d4>
   1366c:	ldr	r3, [r5]
   13670:	cmp	r7, r3
   13674:	str	r0, [r4, #52]	; 0x34
   13678:	bgt	13628 <__fdelt_chk@plt+0x1d20>
   1367c:	ldr	r1, [sp, #12]
   13680:	ldr	r2, [r9]
   13684:	mov	r3, #1
   13688:	cmp	r1, r2
   1368c:	str	r3, [r5]
   13690:	bne	136b4 <__fdelt_chk@plt+0x1dac>
   13694:	add	sp, sp, #20
   13698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1369c:	bl	1333c <__fdelt_chk@plt+0x1a34>
   136a0:	bl	1336c <__fdelt_chk@plt+0x1a64>
   136a4:	ldr	r0, [pc, #40]	; 136d4 <__fdelt_chk@plt+0x1dcc>
   136a8:	bl	1186c <puts@plt>
   136ac:	mov	r0, #1
   136b0:	bl	118d8 <exit@plt>
   136b4:	bl	1180c <__stack_chk_fail@plt>
   136b8:	andeq	r4, r2, r0, lsl #27
   136bc:	andeq	r5, r2, r0, asr r1
   136c0:	andeq	r5, r2, r8
   136c4:	andeq	r5, r2, r0, lsr r1
   136c8:	andeq	r5, r2, r8, lsl #2
   136cc:	andeq	r5, r2, r0, lsr #2
   136d0:			; <UNDEFINED> instruction: 0x000147bc
   136d4:	andeq	r4, r1, r0, lsr #15
   136d8:	push	{r4, r5, r6, r7, r8, lr}
   136dc:	mov	r5, r1
   136e0:	bl	11680 <XOpenDisplay@plt>
   136e4:	ldr	r4, [pc, #220]	; 137c8 <__fdelt_chk@plt+0x1ec0>
   136e8:	cmp	r0, #0
   136ec:	str	r0, [r4]
   136f0:	beq	137b8 <__fdelt_chk@plt+0x1eb0>
   136f4:	cmp	r5, #0
   136f8:	ldr	r6, [r0, #140]	; 0x8c
   136fc:	ldreq	r5, [r0, #132]	; 0x84
   13700:	ldr	r7, [pc, #196]	; 137cc <__fdelt_chk@plt+0x1ec4>
   13704:	add	r5, r5, r5, lsl #2
   13708:	add	r5, r6, r5, lsl #4
   1370c:	mov	r0, r5
   13710:	str	r5, [r4, #4]
   13714:	bl	11734 <XScreenNumberOfScreen@plt>
   13718:	ldr	r3, [r4]
   1371c:	ldr	r5, [r3, #140]	; 0x8c
   13720:	add	r3, r0, r0, lsl #2
   13724:	ldr	r0, [r4, #4]
   13728:	add	r6, r6, r3, lsl #4
   1372c:	ldr	r3, [r6, #40]	; 0x28
   13730:	str	r3, [r4, #8]
   13734:	bl	11734 <XScreenNumberOfScreen@plt>
   13738:	ldr	r2, [r4]
   1373c:	ldr	r3, [pc, #140]	; 137d0 <__fdelt_chk@plt+0x1ec8>
   13740:	ldr	r6, [r2, #140]	; 0x8c
   13744:	add	r0, r0, r0, lsl #2
   13748:	add	r5, r5, r0, lsl #4
   1374c:	ldr	r0, [r4, #4]
   13750:	ldr	r2, [r5, #36]	; 0x24
   13754:	str	r2, [r3]
   13758:	bl	11734 <XScreenNumberOfScreen@plt>
   1375c:	ldr	r3, [r4]
   13760:	ldr	r5, [r3, #140]	; 0x8c
   13764:	add	r3, r0, r0, lsl #2
   13768:	ldr	r0, [r4, #4]
   1376c:	add	r6, r6, r3, lsl #4
   13770:	ldr	r3, [r6, #48]	; 0x30
   13774:	str	r3, [r7]
   13778:	bl	11734 <XScreenNumberOfScreen@plt>
   1377c:	add	r3, r0, r0, lsl #2
   13780:	ldr	r0, [r4]
   13784:	add	r5, r5, r3, lsl #4
   13788:	ldr	r3, [r5, #8]
   1378c:	str	r3, [r4, #12]
   13790:	bl	11614 <imlib_context_set_display@plt>
   13794:	ldr	r0, [r4, #8]
   13798:	bl	118c0 <imlib_context_set_visual@plt>
   1379c:	ldr	r0, [r7]
   137a0:	bl	11674 <imlib_context_set_colormap@plt>
   137a4:	mov	r0, #0
   137a8:	bl	11710 <imlib_context_set_color_modifier@plt>
   137ac:	mov	r0, #0
   137b0:	pop	{r4, r5, r6, r7, r8, lr}
   137b4:	b	1159c <imlib_context_set_operation@plt>
   137b8:	ldr	r0, [pc, #20]	; 137d4 <__fdelt_chk@plt+0x1ecc>
   137bc:	bl	118f0 <gib_eprintf@plt>
   137c0:	ldr	r0, [r4]
   137c4:	b	136f4 <__fdelt_chk@plt+0x1dec>
   137c8:	andeq	r5, r2, r0, asr #2
   137cc:	andeq	r5, r2, r0, lsr #3
   137d0:	andeq	r5, r2, r4, lsr #3
   137d4:	andeq	r4, r1, ip, asr #16
   137d8:	cmp	r1, #0
   137dc:	beq	139e8 <__fdelt_chk@plt+0x20e0>
   137e0:	eor	ip, r0, r1
   137e4:	rsbmi	r1, r1, #0
   137e8:	subs	r2, r1, #1
   137ec:	beq	139b4 <__fdelt_chk@plt+0x20ac>
   137f0:	movs	r3, r0
   137f4:	rsbmi	r3, r0, #0
   137f8:	cmp	r3, r1
   137fc:	bls	139c0 <__fdelt_chk@plt+0x20b8>
   13800:	tst	r1, r2
   13804:	beq	139d0 <__fdelt_chk@plt+0x20c8>
   13808:	clz	r2, r3
   1380c:	clz	r0, r1
   13810:	sub	r2, r0, r2
   13814:	rsbs	r2, r2, #31
   13818:	addne	r2, r2, r2, lsl #1
   1381c:	mov	r0, #0
   13820:	addne	pc, pc, r2, lsl #2
   13824:	nop			; (mov r0, r0)
   13828:	cmp	r3, r1, lsl #31
   1382c:	adc	r0, r0, r0
   13830:	subcs	r3, r3, r1, lsl #31
   13834:	cmp	r3, r1, lsl #30
   13838:	adc	r0, r0, r0
   1383c:	subcs	r3, r3, r1, lsl #30
   13840:	cmp	r3, r1, lsl #29
   13844:	adc	r0, r0, r0
   13848:	subcs	r3, r3, r1, lsl #29
   1384c:	cmp	r3, r1, lsl #28
   13850:	adc	r0, r0, r0
   13854:	subcs	r3, r3, r1, lsl #28
   13858:	cmp	r3, r1, lsl #27
   1385c:	adc	r0, r0, r0
   13860:	subcs	r3, r3, r1, lsl #27
   13864:	cmp	r3, r1, lsl #26
   13868:	adc	r0, r0, r0
   1386c:	subcs	r3, r3, r1, lsl #26
   13870:	cmp	r3, r1, lsl #25
   13874:	adc	r0, r0, r0
   13878:	subcs	r3, r3, r1, lsl #25
   1387c:	cmp	r3, r1, lsl #24
   13880:	adc	r0, r0, r0
   13884:	subcs	r3, r3, r1, lsl #24
   13888:	cmp	r3, r1, lsl #23
   1388c:	adc	r0, r0, r0
   13890:	subcs	r3, r3, r1, lsl #23
   13894:	cmp	r3, r1, lsl #22
   13898:	adc	r0, r0, r0
   1389c:	subcs	r3, r3, r1, lsl #22
   138a0:	cmp	r3, r1, lsl #21
   138a4:	adc	r0, r0, r0
   138a8:	subcs	r3, r3, r1, lsl #21
   138ac:	cmp	r3, r1, lsl #20
   138b0:	adc	r0, r0, r0
   138b4:	subcs	r3, r3, r1, lsl #20
   138b8:	cmp	r3, r1, lsl #19
   138bc:	adc	r0, r0, r0
   138c0:	subcs	r3, r3, r1, lsl #19
   138c4:	cmp	r3, r1, lsl #18
   138c8:	adc	r0, r0, r0
   138cc:	subcs	r3, r3, r1, lsl #18
   138d0:	cmp	r3, r1, lsl #17
   138d4:	adc	r0, r0, r0
   138d8:	subcs	r3, r3, r1, lsl #17
   138dc:	cmp	r3, r1, lsl #16
   138e0:	adc	r0, r0, r0
   138e4:	subcs	r3, r3, r1, lsl #16
   138e8:	cmp	r3, r1, lsl #15
   138ec:	adc	r0, r0, r0
   138f0:	subcs	r3, r3, r1, lsl #15
   138f4:	cmp	r3, r1, lsl #14
   138f8:	adc	r0, r0, r0
   138fc:	subcs	r3, r3, r1, lsl #14
   13900:	cmp	r3, r1, lsl #13
   13904:	adc	r0, r0, r0
   13908:	subcs	r3, r3, r1, lsl #13
   1390c:	cmp	r3, r1, lsl #12
   13910:	adc	r0, r0, r0
   13914:	subcs	r3, r3, r1, lsl #12
   13918:	cmp	r3, r1, lsl #11
   1391c:	adc	r0, r0, r0
   13920:	subcs	r3, r3, r1, lsl #11
   13924:	cmp	r3, r1, lsl #10
   13928:	adc	r0, r0, r0
   1392c:	subcs	r3, r3, r1, lsl #10
   13930:	cmp	r3, r1, lsl #9
   13934:	adc	r0, r0, r0
   13938:	subcs	r3, r3, r1, lsl #9
   1393c:	cmp	r3, r1, lsl #8
   13940:	adc	r0, r0, r0
   13944:	subcs	r3, r3, r1, lsl #8
   13948:	cmp	r3, r1, lsl #7
   1394c:	adc	r0, r0, r0
   13950:	subcs	r3, r3, r1, lsl #7
   13954:	cmp	r3, r1, lsl #6
   13958:	adc	r0, r0, r0
   1395c:	subcs	r3, r3, r1, lsl #6
   13960:	cmp	r3, r1, lsl #5
   13964:	adc	r0, r0, r0
   13968:	subcs	r3, r3, r1, lsl #5
   1396c:	cmp	r3, r1, lsl #4
   13970:	adc	r0, r0, r0
   13974:	subcs	r3, r3, r1, lsl #4
   13978:	cmp	r3, r1, lsl #3
   1397c:	adc	r0, r0, r0
   13980:	subcs	r3, r3, r1, lsl #3
   13984:	cmp	r3, r1, lsl #2
   13988:	adc	r0, r0, r0
   1398c:	subcs	r3, r3, r1, lsl #2
   13990:	cmp	r3, r1, lsl #1
   13994:	adc	r0, r0, r0
   13998:	subcs	r3, r3, r1, lsl #1
   1399c:	cmp	r3, r1
   139a0:	adc	r0, r0, r0
   139a4:	subcs	r3, r3, r1
   139a8:	cmp	ip, #0
   139ac:	rsbmi	r0, r0, #0
   139b0:	bx	lr
   139b4:	teq	ip, r0
   139b8:	rsbmi	r0, r0, #0
   139bc:	bx	lr
   139c0:	movcc	r0, #0
   139c4:	asreq	r0, ip, #31
   139c8:	orreq	r0, r0, #1
   139cc:	bx	lr
   139d0:	clz	r2, r1
   139d4:	rsb	r2, r2, #31
   139d8:	cmp	ip, #0
   139dc:	lsr	r0, r3, r2
   139e0:	rsbmi	r0, r0, #0
   139e4:	bx	lr
   139e8:	cmp	r0, #0
   139ec:	mvngt	r0, #-2147483648	; 0x80000000
   139f0:	movlt	r0, #-2147483648	; 0x80000000
   139f4:	b	13a18 <__fdelt_chk@plt+0x2110>
   139f8:	cmp	r1, #0
   139fc:	beq	139e8 <__fdelt_chk@plt+0x20e0>
   13a00:	push	{r0, r1, lr}
   13a04:	bl	137e0 <__fdelt_chk@plt+0x1ed8>
   13a08:	pop	{r1, r2, lr}
   13a0c:	mul	r3, r2, r0
   13a10:	sub	r1, r1, r3
   13a14:	bx	lr
   13a18:	push	{r1, lr}
   13a1c:	mov	r0, #8
   13a20:	bl	11764 <raise@plt>
   13a24:	pop	{r1, pc}
   13a28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a2c:	mov	r7, r0
   13a30:	ldr	r6, [pc, #72]	; 13a80 <__fdelt_chk@plt+0x2178>
   13a34:	ldr	r5, [pc, #72]	; 13a84 <__fdelt_chk@plt+0x217c>
   13a38:	add	r6, pc, r6
   13a3c:	add	r5, pc, r5
   13a40:	sub	r6, r6, r5
   13a44:	mov	r8, r1
   13a48:	mov	r9, r2
   13a4c:	bl	114f8 <XCreateFontCursor@plt-0x20>
   13a50:	asrs	r6, r6, #2
   13a54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a58:	mov	r4, #0
   13a5c:	add	r4, r4, #1
   13a60:	ldr	r3, [r5], #4
   13a64:	mov	r2, r9
   13a68:	mov	r1, r8
   13a6c:	mov	r0, r7
   13a70:	blx	r3
   13a74:	cmp	r6, r4
   13a78:	bne	13a5c <__fdelt_chk@plt+0x2154>
   13a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a80:	andeq	r1, r1, ip, lsr r3
   13a84:	andeq	r1, r1, r4, lsr r3
   13a88:	bx	lr

Disassembly of section .fini:

00013a8c <.fini>:
   13a8c:	push	{r3, lr}
   13a90:	pop	{r3, pc}
