
raspbian-preinstalled/word-list-compress:     file format elf32-littlearm


Disassembly of section .init:

000104e8 <.init>:
   104e8:	push	{r3, lr}
   104ec:	bl	10948 <getc@plt+0x3d4>
   104f0:	pop	{r3, pc}

Disassembly of section .plt:

000104f4 <fflush@plt-0x14>:
   104f4:	push	{lr}		; (str lr, [sp, #-4]!)
   104f8:	ldr	lr, [pc, #4]	; 10504 <fflush@plt-0x4>
   104fc:	add	lr, pc, lr
   10500:	ldr	pc, [lr, #8]!
   10504:	andeq	r0, r1, r0, asr #21

00010508 <fflush@plt>:
   10508:	add	ip, pc, #0, 12
   1050c:	add	ip, ip, #16, 20	; 0x10000
   10510:	ldr	pc, [ip, #2752]!	; 0xac0

00010514 <__stack_chk_fail@plt>:
   10514:	add	ip, pc, #0, 12
   10518:	add	ip, ip, #16, 20	; 0x10000
   1051c:	ldr	pc, [ip, #2744]!	; 0xab8

00010520 <fwrite@plt>:
   10520:	add	ip, pc, #0, 12
   10524:	add	ip, ip, #16, 20	; 0x10000
   10528:	ldr	pc, [ip, #2736]!	; 0xab0

0001052c <__libc_start_main@plt>:
   1052c:	add	ip, pc, #0, 12
   10530:	add	ip, ip, #16, 20	; 0x10000
   10534:	ldr	pc, [ip, #2728]!	; 0xaa8

00010538 <__gmon_start__@plt>:
   10538:	add	ip, pc, #0, 12
   1053c:	add	ip, ip, #16, 20	; 0x10000
   10540:	ldr	pc, [ip, #2720]!	; 0xaa0

00010544 <ungetc@plt>:
   10544:	add	ip, pc, #0, 12
   10548:	add	ip, ip, #16, 20	; 0x10000
   1054c:	ldr	pc, [ip, #2712]!	; 0xa98

00010550 <putc@plt>:
   10550:	add	ip, pc, #0, 12
   10554:	add	ip, ip, #16, 20	; 0x10000
   10558:	ldr	pc, [ip, #2704]!	; 0xa90

0001055c <fputs@plt>:
   1055c:	add	ip, pc, #0, 12
   10560:	add	ip, ip, #16, 20	; 0x10000
   10564:	ldr	pc, [ip, #2696]!	; 0xa88

00010568 <abort@plt>:
   10568:	add	ip, pc, #0, 12
   1056c:	add	ip, ip, #16, 20	; 0x10000
   10570:	ldr	pc, [ip, #2688]!	; 0xa80

00010574 <getc@plt>:
   10574:	add	ip, pc, #0, 12
   10578:	add	ip, ip, #16, 20	; 0x10000
   1057c:	ldr	pc, [ip, #2680]!	; 0xa78

Disassembly of section .text:

00010580 <.text>:
   10580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10584:	sub	sp, sp, #540	; 0x21c
   10588:	ldr	fp, [pc, #848]	; 108e0 <getc@plt+0x36c>
   1058c:	cmp	r0, #2
   10590:	str	r0, [sp, #8]
   10594:	ldr	r3, [fp]
   10598:	str	r3, [sp, #532]	; 0x214
   1059c:	bne	105c0 <getc@plt+0x4c>
   105a0:	ldr	r2, [r1, #4]
   105a4:	ldrb	r3, [r2]
   105a8:	cmp	r3, #45	; 0x2d
   105ac:	ldrbeq	r3, [r2, #1]
   105b0:	cmp	r3, #99	; 0x63
   105b4:	beq	10644 <getc@plt+0xd0>
   105b8:	cmp	r3, #100	; 0x64
   105bc:	beq	10784 <getc@plt+0x210>
   105c0:	ldr	r4, [pc, #796]	; 108e4 <getc@plt+0x370>
   105c4:	mov	r2, #61	; 0x3d
   105c8:	mov	r1, #1
   105cc:	ldr	r3, [r4]
   105d0:	ldr	r0, [pc, #784]	; 108e8 <getc@plt+0x374>
   105d4:	bl	10520 <fwrite@plt>
   105d8:	ldr	r3, [r4]
   105dc:	mov	r2, #64	; 0x40
   105e0:	mov	r1, #1
   105e4:	ldr	r0, [pc, #768]	; 108ec <getc@plt+0x378>
   105e8:	bl	10520 <fwrite@plt>
   105ec:	ldr	r3, [r4]
   105f0:	mov	r2, #65	; 0x41
   105f4:	mov	r1, #1
   105f8:	ldr	r0, [pc, #752]	; 108f0 <getc@plt+0x37c>
   105fc:	bl	10520 <fwrite@plt>
   10600:	ldr	r3, [r4]
   10604:	mov	r2, #39	; 0x27
   10608:	mov	r1, #1
   1060c:	ldr	r0, [pc, #736]	; 108f4 <getc@plt+0x380>
   10610:	bl	10520 <fwrite@plt>
   10614:	ldr	r3, [r4]
   10618:	mov	r2, #50	; 0x32
   1061c:	mov	r1, #1
   10620:	ldr	r0, [pc, #720]	; 108f8 <getc@plt+0x384>
   10624:	bl	10520 <fwrite@plt>
   10628:	mov	r0, #1
   1062c:	ldr	r2, [sp, #532]	; 0x214
   10630:	ldr	r3, [fp]
   10634:	cmp	r2, r3
   10638:	bne	108dc <getc@plt+0x368>
   1063c:	add	sp, sp, #540	; 0x21c
   10640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10644:	ldr	sl, [pc, #688]	; 108fc <getc@plt+0x388>
   10648:	ldr	r7, [pc, #688]	; 10900 <getc@plt+0x38c>
   1064c:	add	r6, sp, #16
   10650:	add	r8, sp, #272	; 0x110
   10654:	mov	r3, #0
   10658:	strb	r3, [sp, #272]	; 0x110
   1065c:	str	r3, [sp, #12]
   10660:	ldr	r4, [r7]
   10664:	mov	r0, r4
   10668:	bl	10574 <getc@plt>
   1066c:	cmp	r0, #32
   10670:	movgt	r2, #0
   10674:	movle	r2, #1
   10678:	cmn	r0, #1
   1067c:	moveq	r2, #0
   10680:	cmp	r2, #0
   10684:	mov	r3, r0
   10688:	bne	10664 <getc@plt+0xf0>
   1068c:	cmn	r0, #1
   10690:	beq	10888 <getc@plt+0x314>
   10694:	add	r5, r6, #255	; 0xff
   10698:	mov	r9, r6
   1069c:	b	106a8 <getc@plt+0x134>
   106a0:	cmp	r9, r5
   106a4:	beq	10848 <getc@plt+0x2d4>
   106a8:	strb	r3, [r9], #1
   106ac:	mov	r0, r4
   106b0:	bl	10574 <getc@plt>
   106b4:	cmp	r0, #32
   106b8:	mov	r3, r0
   106bc:	bgt	106a0 <getc@plt+0x12c>
   106c0:	ldr	r3, [sp, #12]
   106c4:	mov	r1, r4
   106c8:	strb	r3, [r9]
   106cc:	str	r0, [sp, #4]
   106d0:	bl	10544 <ungetc@plt>
   106d4:	ldr	r3, [sp, #4]
   106d8:	cmn	r3, #1
   106dc:	beq	10894 <getc@plt+0x320>
   106e0:	ldrb	r5, [r8]
   106e4:	ldr	r1, [sl]
   106e8:	cmp	r5, #0
   106ec:	beq	108cc <getc@plt+0x358>
   106f0:	ldrb	r3, [r6]
   106f4:	cmp	r3, r5
   106f8:	movne	r5, #0
   106fc:	movne	r4, r5
   10700:	bne	10750 <getc@plt+0x1dc>
   10704:	mov	r2, r8
   10708:	mov	r0, r6
   1070c:	mov	r4, #0
   10710:	b	10720 <getc@plt+0x1ac>
   10714:	ldrb	ip, [r0, #1]!
   10718:	cmp	ip, r3
   1071c:	bne	10734 <getc@plt+0x1c0>
   10720:	ldrb	r3, [r2, #1]!
   10724:	add	r4, r4, #1
   10728:	mov	r5, r4
   1072c:	cmp	r3, #0
   10730:	bne	10714 <getc@plt+0x1a0>
   10734:	cmp	r4, #31
   10738:	ble	10750 <getc@plt+0x1dc>
   1073c:	mov	r0, #0
   10740:	bl	10550 <putc@plt>
   10744:	cmp	r0, #0
   10748:	blt	108a8 <getc@plt+0x334>
   1074c:	ldr	r1, [sl]
   10750:	add	r0, r4, #1
   10754:	bl	10550 <putc@plt>
   10758:	cmp	r0, #0
   1075c:	blt	108a8 <getc@plt+0x334>
   10760:	add	r0, r6, r5
   10764:	ldr	r1, [sl]
   10768:	bl	1055c <fputs@plt>
   1076c:	mov	r3, r6
   10770:	mov	r6, r8
   10774:	cmp	r0, #0
   10778:	blt	108a8 <getc@plt+0x334>
   1077c:	mov	r8, r3
   10780:	b	10660 <getc@plt+0xec>
   10784:	ldr	r7, [pc, #372]	; 10900 <getc@plt+0x38c>
   10788:	ldr	r0, [r7]
   1078c:	bl	10574 <getc@plt>
   10790:	cmp	r0, #1
   10794:	mov	r4, r0
   10798:	bne	10868 <getc@plt+0x2f4>
   1079c:	ldr	r8, [pc, #344]	; 108fc <getc@plt+0x388>
   107a0:	mov	r3, #0
   107a4:	mov	sl, #10
   107a8:	sub	r5, r4, #1
   107ac:	cmp	r5, r3
   107b0:	movle	r3, #0
   107b4:	movgt	r3, #1
   107b8:	orrs	r3, r3, r5, lsr #31
   107bc:	bne	10868 <getc@plt+0x2f4>
   107c0:	sub	r4, r4, #2
   107c4:	add	r3, sp, #272	; 0x110
   107c8:	add	r6, r3, r4
   107cc:	b	107e0 <getc@plt+0x26c>
   107d0:	cmp	r5, #255	; 0xff
   107d4:	bgt	10868 <getc@plt+0x2f4>
   107d8:	add	r5, r5, #1
   107dc:	strb	r4, [r6, #1]!
   107e0:	ldr	r0, [r7]
   107e4:	bl	10574 <getc@plt>
   107e8:	cmp	r0, #32
   107ec:	mov	r4, r0
   107f0:	bgt	107d0 <getc@plt+0x25c>
   107f4:	cmp	r5, #255	; 0xff
   107f8:	bgt	10868 <getc@plt+0x2f4>
   107fc:	add	r3, sp, #536	; 0x218
   10800:	add	r3, r3, r5
   10804:	mov	r6, #0
   10808:	ldr	r1, [r8]
   1080c:	add	r0, sp, #272	; 0x110
   10810:	strb	sl, [r3, #-264]	; 0xfffffef8
   10814:	strb	r6, [r3, #-263]	; 0xfffffef9
   10818:	bl	1055c <fputs@plt>
   1081c:	cmp	r0, r6
   10820:	blt	108a8 <getc@plt+0x334>
   10824:	cmn	r4, #1
   10828:	beq	108d4 <getc@plt+0x360>
   1082c:	cmp	r4, #0
   10830:	bne	10840 <getc@plt+0x2cc>
   10834:	ldr	r0, [r7]
   10838:	bl	10574 <getc@plt>
   1083c:	mov	r4, r0
   10840:	mov	r3, r5
   10844:	b	107a8 <getc@plt+0x234>
   10848:	mov	r3, #0
   1084c:	mov	r1, r4
   10850:	strb	r3, [r6, #255]	; 0xff
   10854:	bl	10544 <ungetc@plt>
   10858:	ldr	r0, [sl]
   1085c:	bl	10508 <fflush@plt>
   10860:	cmp	r0, #0
   10864:	blt	108a8 <getc@plt+0x334>
   10868:	ldr	r3, [pc, #116]	; 108e4 <getc@plt+0x370>
   1086c:	mov	r2, #22
   10870:	mov	r1, #1
   10874:	ldr	r3, [r3]
   10878:	ldr	r0, [pc, #132]	; 10904 <getc@plt+0x390>
   1087c:	bl	10520 <fwrite@plt>
   10880:	ldr	r0, [sp, #8]
   10884:	b	1062c <getc@plt+0xb8>
   10888:	strb	r2, [r6]
   1088c:	mov	r1, r4
   10890:	bl	10544 <ungetc@plt>
   10894:	ldr	r0, [sl]
   10898:	bl	10508 <fflush@plt>
   1089c:	cmp	r0, #0
   108a0:	movge	r0, #0
   108a4:	bge	1062c <getc@plt+0xb8>
   108a8:	ldr	r3, [pc, #52]	; 108e4 <getc@plt+0x370>
   108ac:	mov	r2, #26
   108b0:	mov	r1, #1
   108b4:	ldr	r3, [r3]
   108b8:	ldr	r0, [pc, #72]	; 10908 <getc@plt+0x394>
   108bc:	bl	10520 <fwrite@plt>
   108c0:	mov	r3, #3
   108c4:	str	r3, [sp, #8]
   108c8:	b	10880 <getc@plt+0x30c>
   108cc:	mov	r4, r5
   108d0:	b	10750 <getc@plt+0x1dc>
   108d4:	str	r6, [sp, #8]
   108d8:	b	10880 <getc@plt+0x30c>
   108dc:	bl	10514 <__stack_chk_fail@plt>
   108e0:			; <UNDEFINED> instruction: 0x00020eb8
   108e4:	andeq	r1, r2, r8
   108e8:	andeq	r0, r1, r0, lsr #21
   108ec:	andeq	r0, r1, r0, ror #21
   108f0:	andeq	r0, r1, r4, lsr #22
   108f4:	andeq	r0, r1, r8, ror #22
   108f8:	muleq	r1, r0, fp
   108fc:	andeq	r1, r2, r4, lsl r0
   10900:	andeq	r1, r2, r0, lsl r0
   10904:	andeq	r0, r1, ip, ror #20
   10908:	andeq	r0, r1, r4, lsl #21
   1090c:	mov	fp, #0
   10910:	mov	lr, #0
   10914:	pop	{r1}		; (ldr r1, [sp], #4)
   10918:	mov	r2, sp
   1091c:	push	{r2}		; (str r2, [sp, #-4]!)
   10920:	push	{r0}		; (str r0, [sp, #-4]!)
   10924:	ldr	ip, [pc, #16]	; 1093c <getc@plt+0x3c8>
   10928:	push	{ip}		; (str ip, [sp, #-4]!)
   1092c:	ldr	r0, [pc, #12]	; 10940 <getc@plt+0x3cc>
   10930:	ldr	r3, [pc, #12]	; 10944 <getc@plt+0x3d0>
   10934:	bl	1052c <__libc_start_main@plt>
   10938:	bl	10568 <abort@plt>
   1093c:	andeq	r0, r1, ip, asr sl
   10940:	andeq	r0, r1, r0, lsl #11
   10944:	strdeq	r0, [r1], -ip
   10948:	ldr	r3, [pc, #20]	; 10964 <getc@plt+0x3f0>
   1094c:	ldr	r2, [pc, #20]	; 10968 <getc@plt+0x3f4>
   10950:	add	r3, pc, r3
   10954:	ldr	r2, [r3, r2]
   10958:	cmp	r2, #0
   1095c:	bxeq	lr
   10960:	b	10538 <__gmon_start__@plt>
   10964:	andeq	r0, r1, ip, ror #12
   10968:	andeq	r0, r0, r4, lsr r0
   1096c:	ldr	r0, [pc, #24]	; 1098c <getc@plt+0x418>
   10970:	ldr	r3, [pc, #24]	; 10990 <getc@plt+0x41c>
   10974:	cmp	r3, r0
   10978:	bxeq	lr
   1097c:	ldr	r3, [pc, #16]	; 10994 <getc@plt+0x420>
   10980:	cmp	r3, #0
   10984:	bxeq	lr
   10988:	bx	r3
   1098c:	andeq	r1, r2, r8
   10990:	andeq	r1, r2, r8
   10994:	andeq	r0, r0, r0
   10998:	ldr	r0, [pc, #36]	; 109c4 <getc@plt+0x450>
   1099c:	ldr	r1, [pc, #36]	; 109c8 <getc@plt+0x454>
   109a0:	sub	r1, r1, r0
   109a4:	asr	r1, r1, #2
   109a8:	add	r1, r1, r1, lsr #31
   109ac:	asrs	r1, r1, #1
   109b0:	bxeq	lr
   109b4:	ldr	r3, [pc, #16]	; 109cc <getc@plt+0x458>
   109b8:	cmp	r3, #0
   109bc:	bxeq	lr
   109c0:	bx	r3
   109c4:	andeq	r1, r2, r8
   109c8:	andeq	r1, r2, r8
   109cc:	andeq	r0, r0, r0
   109d0:	push	{r4, lr}
   109d4:	ldr	r4, [pc, #24]	; 109f4 <getc@plt+0x480>
   109d8:	ldrb	r3, [r4]
   109dc:	cmp	r3, #0
   109e0:	popne	{r4, pc}
   109e4:	bl	1096c <getc@plt+0x3f8>
   109e8:	mov	r3, #1
   109ec:	strb	r3, [r4]
   109f0:	pop	{r4, pc}
   109f4:	andeq	r1, r2, r8, lsl r0
   109f8:	b	10998 <getc@plt+0x424>
   109fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a00:	mov	r7, r0
   10a04:	ldr	r6, [pc, #72]	; 10a54 <getc@plt+0x4e0>
   10a08:	ldr	r5, [pc, #72]	; 10a58 <getc@plt+0x4e4>
   10a0c:	add	r6, pc, r6
   10a10:	add	r5, pc, r5
   10a14:	sub	r6, r6, r5
   10a18:	mov	r8, r1
   10a1c:	mov	r9, r2
   10a20:	bl	104e8 <fflush@plt-0x20>
   10a24:	asrs	r6, r6, #2
   10a28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a2c:	mov	r4, #0
   10a30:	add	r4, r4, #1
   10a34:	ldr	r3, [r5], #4
   10a38:	mov	r2, r9
   10a3c:	mov	r1, r8
   10a40:	mov	r0, r7
   10a44:	blx	r3
   10a48:	cmp	r6, r4
   10a4c:	bne	10a30 <getc@plt+0x4bc>
   10a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a54:	andeq	r0, r1, r0, lsr #9
   10a58:	muleq	r1, r8, r4
   10a5c:	bx	lr

Disassembly of section .fini:

00010a60 <.fini>:
   10a60:	push	{r3, lr}
   10a64:	pop	{r3, pc}
