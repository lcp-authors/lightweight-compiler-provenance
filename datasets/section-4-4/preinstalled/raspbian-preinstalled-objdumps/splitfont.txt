
raspbian-preinstalled/splitfont:     file format elf32-littlearm


Disassembly of section .init:

00010498 <.init>:
   10498:	push	{r3, lr}
   1049c:	bl	10798 <close@plt+0x238>
   104a0:	pop	{r3, pc}

Disassembly of section .plt:

000104a4 <__read_chk@plt-0x14>:
   104a4:	push	{lr}		; (str lr, [sp, #-4]!)
   104a8:	ldr	lr, [pc, #4]	; 104b4 <__read_chk@plt-0x4>
   104ac:	add	lr, pc, lr
   104b0:	ldr	pc, [lr, #8]!
   104b4:	andeq	r0, r1, ip, asr #22

000104b8 <__read_chk@plt>:
   104b8:	add	ip, pc, #0, 12
   104bc:	add	ip, ip, #16, 20	; 0x10000
   104c0:	ldr	pc, [ip, #2892]!	; 0xb4c

000104c4 <perror@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2884]!	; 0xb44

000104d0 <__xstat@plt>:
   104d0:	add	ip, pc, #0, 12
   104d4:	add	ip, ip, #16, 20	; 0x10000
   104d8:	ldr	pc, [ip, #2876]!	; 0xb3c

000104dc <fwrite@plt>:
   104dc:	add	ip, pc, #0, 12
   104e0:	add	ip, ip, #16, 20	; 0x10000
   104e4:	ldr	pc, [ip, #2868]!	; 0xb34

000104e8 <__libc_start_main@plt>:
   104e8:	add	ip, pc, #0, 12
   104ec:	add	ip, ip, #16, 20	; 0x10000
   104f0:	ldr	pc, [ip, #2860]!	; 0xb2c

000104f4 <__gmon_start__@plt>:
   104f4:	add	ip, pc, #0, 12
   104f8:	add	ip, ip, #16, 20	; 0x10000
   104fc:	ldr	pc, [ip, #2852]!	; 0xb24

00010500 <open@plt>:
   10500:	add	ip, pc, #0, 12
   10504:	add	ip, ip, #16, 20	; 0x10000
   10508:	ldr	pc, [ip, #2844]!	; 0xb1c

0001050c <exit@plt>:
   1050c:	add	ip, pc, #0, 12
   10510:	add	ip, ip, #16, 20	; 0x10000
   10514:	ldr	pc, [ip, #2836]!	; 0xb14

00010518 <strtoul@plt>:
   10518:	add	ip, pc, #0, 12
   1051c:	add	ip, ip, #16, 20	; 0x10000
   10520:	ldr	pc, [ip, #2828]!	; 0xb0c

00010524 <strlen@plt>:
   10524:	add	ip, pc, #0, 12
   10528:	add	ip, ip, #16, 20	; 0x10000
   1052c:	ldr	pc, [ip, #2820]!	; 0xb04

00010530 <__sprintf_chk@plt>:
   10530:	add	ip, pc, #0, 12
   10534:	add	ip, ip, #16, 20	; 0x10000
   10538:	ldr	pc, [ip, #2812]!	; 0xafc

0001053c <write@plt>:
   1053c:	add	ip, pc, #0, 12
   10540:	add	ip, ip, #16, 20	; 0x10000
   10544:	ldr	pc, [ip, #2804]!	; 0xaf4

00010548 <__fprintf_chk@plt>:
   10548:	add	ip, pc, #0, 12
   1054c:	add	ip, ip, #16, 20	; 0x10000
   10550:	ldr	pc, [ip, #2796]!	; 0xaec

00010554 <abort@plt>:
   10554:	add	ip, pc, #0, 12
   10558:	add	ip, ip, #16, 20	; 0x10000
   1055c:	ldr	pc, [ip, #2788]!	; 0xae4

00010560 <close@plt>:
   10560:	add	ip, pc, #0, 12
   10564:	add	ip, ip, #16, 20	; 0x10000
   10568:	ldr	pc, [ip, #2780]!	; 0xadc

Disassembly of section .text:

0001056c <.text>:
   1056c:	push	{r4, r5, r6, lr}
   10570:	cmp	r0, #3
   10574:	sub	sp, sp, #4160	; 0x1040
   10578:	sub	sp, sp, #40	; 0x28
   1057c:	bne	10718 <close@plt+0x1b8>
   10580:	mov	r6, r1
   10584:	add	r2, sp, #16
   10588:	ldr	r1, [r1, #4]
   1058c:	bl	104d0 <__xstat@plt>
   10590:	cmp	r0, #0
   10594:	bne	10700 <close@plt+0x1a0>
   10598:	ldr	r1, [sp, #60]	; 0x3c
   1059c:	cmp	r1, #4096	; 0x1000
   105a0:	bgt	106e0 <close@plt+0x180>
   105a4:	ands	r1, r1, #255	; 0xff
   105a8:	bne	106c0 <close@plt+0x160>
   105ac:	ldr	r0, [r6, #4]
   105b0:	bl	10500 <open@plt>
   105b4:	cmp	r0, #0
   105b8:	blt	106a8 <close@plt+0x148>
   105bc:	mov	r3, #4096	; 0x1000
   105c0:	ldr	r2, [sp, #60]	; 0x3c
   105c4:	add	r1, sp, #104	; 0x68
   105c8:	bl	104b8 <__read_chk@plt>
   105cc:	ldr	r3, [sp, #60]	; 0x3c
   105d0:	cmp	r3, r0
   105d4:	ldreq	r4, [r6, #8]
   105d8:	beq	10618 <close@plt+0xb8>
   105dc:	b	10690 <close@plt+0x130>
   105e0:	cmp	r3, #0
   105e4:	cmpne	r3, #44	; 0x2c
   105e8:	bne	10670 <close@plt+0x110>
   105ec:	ldr	r2, [r6, #4]
   105f0:	ldr	r3, [sp, #60]	; 0x3c
   105f4:	mov	r0, r5
   105f8:	str	r2, [sp]
   105fc:	add	r2, sp, #104	; 0x68
   10600:	bl	1084c <close@plt+0x2ec>
   10604:	ldr	r3, [sp, #12]
   10608:	ldrb	r0, [r3]
   1060c:	cmp	r0, #0
   10610:	beq	10664 <close@plt+0x104>
   10614:	add	r4, r3, #1
   10618:	mov	r2, #0
   1061c:	add	r1, sp, #12
   10620:	mov	r0, r4
   10624:	bl	10518 <strtoul@plt>
   10628:	ldr	r2, [sp, #12]
   1062c:	ldrb	r3, [r2]
   10630:	cmp	r3, #45	; 0x2d
   10634:	mov	r5, r0
   10638:	movne	r1, r0
   1063c:	bne	105e0 <close@plt+0x80>
   10640:	add	r4, r2, #1
   10644:	add	r1, sp, #12
   10648:	mov	r0, r4
   1064c:	mov	r2, #0
   10650:	bl	10518 <strtoul@plt>
   10654:	ldr	r3, [sp, #12]
   10658:	ldrb	r3, [r3]
   1065c:	mov	r1, r0
   10660:	b	105e0 <close@plt+0x80>
   10664:	add	sp, sp, #4160	; 0x1040
   10668:	add	sp, sp, #40	; 0x28
   1066c:	pop	{r4, r5, r6, pc}
   10670:	ldr	r1, [pc, #192]	; 10738 <close@plt+0x1d8>
   10674:	ldr	r2, [pc, #192]	; 1073c <close@plt+0x1dc>
   10678:	mov	r3, r4
   1067c:	ldr	r0, [r1]
   10680:	mov	r1, #1
   10684:	bl	10548 <__fprintf_chk@plt>
   10688:	mov	r0, #1
   1068c:	bl	1050c <exit@plt>
   10690:	ldr	r0, [pc, #168]	; 10740 <close@plt+0x1e0>
   10694:	bl	104c4 <perror@plt>
   10698:	ldr	r1, [pc, #152]	; 10738 <close@plt+0x1d8>
   1069c:	ldr	r3, [r6, #4]
   106a0:	ldr	r2, [pc, #156]	; 10744 <close@plt+0x1e4>
   106a4:	b	1067c <close@plt+0x11c>
   106a8:	ldr	r0, [pc, #144]	; 10740 <close@plt+0x1e0>
   106ac:	bl	104c4 <perror@plt>
   106b0:	ldr	r1, [pc, #128]	; 10738 <close@plt+0x1d8>
   106b4:	ldr	r3, [r6, #4]
   106b8:	ldr	r2, [pc, #136]	; 10748 <close@plt+0x1e8>
   106bc:	b	1067c <close@plt+0x11c>
   106c0:	ldr	r3, [pc, #112]	; 10738 <close@plt+0x1d8>
   106c4:	mov	r2, #43	; 0x2b
   106c8:	mov	r1, #1
   106cc:	ldr	r3, [r3]
   106d0:	ldr	r0, [pc, #116]	; 1074c <close@plt+0x1ec>
   106d4:	bl	104dc <fwrite@plt>
   106d8:	mov	r0, #1
   106dc:	bl	1050c <exit@plt>
   106e0:	ldr	r3, [pc, #80]	; 10738 <close@plt+0x1d8>
   106e4:	mov	r2, #35	; 0x23
   106e8:	mov	r1, #1
   106ec:	ldr	r3, [r3]
   106f0:	ldr	r0, [pc, #88]	; 10750 <close@plt+0x1f0>
   106f4:	bl	104dc <fwrite@plt>
   106f8:	mov	r0, #1
   106fc:	bl	1050c <exit@plt>
   10700:	ldr	r0, [pc, #56]	; 10740 <close@plt+0x1e0>
   10704:	bl	104c4 <perror@plt>
   10708:	ldr	r1, [pc, #40]	; 10738 <close@plt+0x1d8>
   1070c:	ldr	r3, [r6, #4]
   10710:	ldr	r2, [pc, #60]	; 10754 <close@plt+0x1f4>
   10714:	b	1067c <close@plt+0x11c>
   10718:	ldr	r3, [pc, #24]	; 10738 <close@plt+0x1d8>
   1071c:	mov	r2, #38	; 0x26
   10720:	mov	r1, #1
   10724:	ldr	r3, [r3]
   10728:	ldr	r0, [pc, #40]	; 10758 <close@plt+0x1f8>
   1072c:	bl	104dc <fwrite@plt>
   10730:	mov	r0, #1
   10734:	bl	1050c <exit@plt>
   10738:	andeq	r1, r2, r8, asr r0
   1073c:	muleq	r1, r4, fp
   10740:	muleq	r1, r4, sl
   10744:	andeq	r0, r1, r8, ror fp
   10748:	andeq	r0, r1, r0, ror #22
   1074c:	andeq	r0, r1, r4, lsr fp
   10750:	andeq	r0, r1, r0, lsl fp
   10754:	strdeq	r0, [r1], -r8
   10758:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1075c:	mov	fp, #0
   10760:	mov	lr, #0
   10764:	pop	{r1}		; (ldr r1, [sp], #4)
   10768:	mov	r2, sp
   1076c:	push	{r2}		; (str r2, [sp, #-4]!)
   10770:	push	{r0}		; (str r0, [sp, #-4]!)
   10774:	ldr	ip, [pc, #16]	; 1078c <close@plt+0x22c>
   10778:	push	{ip}		; (str ip, [sp, #-4]!)
   1077c:	ldr	r0, [pc, #12]	; 10790 <close@plt+0x230>
   10780:	ldr	r3, [pc, #12]	; 10794 <close@plt+0x234>
   10784:	bl	104e8 <__libc_start_main@plt>
   10788:	bl	10554 <abort@plt>
   1078c:	andeq	r0, r1, r8, lsr sl
   10790:	andeq	r0, r1, ip, ror #10
   10794:	ldrdeq	r0, [r1], -r8
   10798:	ldr	r3, [pc, #20]	; 107b4 <close@plt+0x254>
   1079c:	ldr	r2, [pc, #20]	; 107b8 <close@plt+0x258>
   107a0:	add	r3, pc, r3
   107a4:	ldr	r2, [r3, r2]
   107a8:	cmp	r2, #0
   107ac:	bxeq	lr
   107b0:	b	104f4 <__gmon_start__@plt>
   107b4:	andeq	r0, r1, r8, asr r8
   107b8:	andeq	r0, r0, r8, asr #32
   107bc:	ldr	r0, [pc, #24]	; 107dc <close@plt+0x27c>
   107c0:	ldr	r3, [pc, #24]	; 107e0 <close@plt+0x280>
   107c4:	cmp	r3, r0
   107c8:	bxeq	lr
   107cc:	ldr	r3, [pc, #16]	; 107e4 <close@plt+0x284>
   107d0:	cmp	r3, #0
   107d4:	bxeq	lr
   107d8:	bx	r3
   107dc:	andeq	r1, r2, r4, asr r0
   107e0:	andeq	r1, r2, r4, asr r0
   107e4:	andeq	r0, r0, r0
   107e8:	ldr	r0, [pc, #36]	; 10814 <close@plt+0x2b4>
   107ec:	ldr	r1, [pc, #36]	; 10818 <close@plt+0x2b8>
   107f0:	sub	r1, r1, r0
   107f4:	asr	r1, r1, #2
   107f8:	add	r1, r1, r1, lsr #31
   107fc:	asrs	r1, r1, #1
   10800:	bxeq	lr
   10804:	ldr	r3, [pc, #16]	; 1081c <close@plt+0x2bc>
   10808:	cmp	r3, #0
   1080c:	bxeq	lr
   10810:	bx	r3
   10814:	andeq	r1, r2, r4, asr r0
   10818:	andeq	r1, r2, r4, asr r0
   1081c:	andeq	r0, r0, r0
   10820:	push	{r4, lr}
   10824:	ldr	r4, [pc, #24]	; 10844 <close@plt+0x2e4>
   10828:	ldrb	r3, [r4]
   1082c:	cmp	r3, #0
   10830:	popne	{r4, pc}
   10834:	bl	107bc <close@plt+0x25c>
   10838:	mov	r3, #1
   1083c:	strb	r3, [r4]
   10840:	pop	{r4, pc}
   10844:	andeq	r1, r2, ip, asr r0
   10848:	b	107e8 <close@plt+0x288>
   1084c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10850:	cmp	r3, #0
   10854:	add	r5, r3, #255	; 0xff
   10858:	movlt	r3, r5
   1085c:	sub	sp, sp, #4096	; 0x1000
   10860:	sub	sp, sp, #12
   10864:	asr	r5, r3, #8
   10868:	add	r3, sp, #4096	; 0x1000
   1086c:	add	r3, r3, #48	; 0x30
   10870:	cmp	r1, #255	; 0xff
   10874:	cmpls	r0, #255	; 0xff
   10878:	mov	r4, r0
   1087c:	mov	r8, r1
   10880:	ldr	r9, [r3]
   10884:	bhi	10970 <close@plt+0x410>
   10888:	mov	r0, r9
   1088c:	mov	r6, r2
   10890:	bl	10524 <strlen@plt>
   10894:	ldr	r3, [pc, #280]	; 109b4 <close@plt+0x454>
   10898:	cmp	r0, r3
   1089c:	bhi	10994 <close@plt+0x434>
   108a0:	cmp	r4, r8
   108a4:	bgt	10964 <close@plt+0x404>
   108a8:	mla	r6, r4, r5, r6
   108ac:	ldr	fp, [pc, #260]	; 109b8 <close@plt+0x458>
   108b0:	ldr	sl, [pc, #260]	; 109bc <close@plt+0x45c>
   108b4:	add	r8, r8, #1
   108b8:	b	1090c <close@plt+0x3ac>
   108bc:	mov	r2, r5
   108c0:	mov	r1, r6
   108c4:	mov	r0, r7
   108c8:	bl	1053c <write@plt>
   108cc:	cmp	r0, r5
   108d0:	beq	108f4 <close@plt+0x394>
   108d4:	ldr	r0, [pc, #228]	; 109c0 <close@plt+0x460>
   108d8:	bl	104c4 <perror@plt>
   108dc:	ldr	r0, [pc, #224]	; 109c4 <close@plt+0x464>
   108e0:	add	r3, sp, #8
   108e4:	ldr	r2, [pc, #220]	; 109c8 <close@plt+0x468>
   108e8:	mov	r1, #1
   108ec:	ldr	r0, [r0]
   108f0:	bl	10548 <__fprintf_chk@plt>
   108f4:	mov	r0, r7
   108f8:	add	r4, r4, #1
   108fc:	bl	10560 <close@plt>
   10900:	cmp	r4, r8
   10904:	add	r6, r6, r5
   10908:	beq	10964 <close@plt+0x404>
   1090c:	mov	r3, fp
   10910:	mov	r2, #4096	; 0x1000
   10914:	mov	r1, #1
   10918:	str	r4, [sp, #4]
   1091c:	str	r9, [sp]
   10920:	add	r0, sp, #8
   10924:	bl	10530 <__sprintf_chk@plt>
   10928:	mov	r2, sl
   1092c:	mov	r1, #65	; 0x41
   10930:	add	r0, sp, #8
   10934:	bl	10500 <open@plt>
   10938:	subs	r7, r0, #0
   1093c:	bge	108bc <close@plt+0x35c>
   10940:	ldr	r0, [pc, #120]	; 109c0 <close@plt+0x460>
   10944:	bl	104c4 <perror@plt>
   10948:	ldr	r0, [pc, #116]	; 109c4 <close@plt+0x464>
   1094c:	add	r3, sp, #8
   10950:	ldr	r2, [pc, #116]	; 109cc <close@plt+0x46c>
   10954:	mov	r1, #1
   10958:	ldr	r0, [r0]
   1095c:	bl	10548 <__fprintf_chk@plt>
   10960:	b	108bc <close@plt+0x35c>
   10964:	add	sp, sp, #4096	; 0x1000
   10968:	add	sp, sp, #12
   1096c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10970:	ldr	r2, [pc, #76]	; 109c4 <close@plt+0x464>
   10974:	str	r1, [sp]
   10978:	mov	r3, r0
   1097c:	mov	r1, #1
   10980:	ldr	r0, [r2]
   10984:	ldr	r2, [pc, #68]	; 109d0 <close@plt+0x470>
   10988:	bl	10548 <__fprintf_chk@plt>
   1098c:	mov	r0, #1
   10990:	bl	1050c <exit@plt>
   10994:	ldr	r3, [pc, #40]	; 109c4 <close@plt+0x464>
   10998:	mov	r2, #34	; 0x22
   1099c:	mov	r1, #1
   109a0:	ldr	r3, [r3]
   109a4:	ldr	r0, [pc, #40]	; 109d4 <close@plt+0x474>
   109a8:	bl	104dc <fwrite@plt>
   109ac:	mov	r0, #1
   109b0:	bl	1050c <exit@plt>
   109b4:	strdeq	r0, [r0], -fp
   109b8:	andeq	r0, r1, ip, lsl #21
   109bc:			; <UNDEFINED> instruction: 0x000001b6
   109c0:	muleq	r1, r4, sl
   109c4:	andeq	r1, r2, r8, asr r0
   109c8:			; <UNDEFINED> instruction: 0x00010abc
   109cc:	andeq	r0, r1, r0, lsr #21
   109d0:	andeq	r0, r1, r8, asr #20
   109d4:	andeq	r0, r1, r8, ror #20
   109d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109dc:	mov	r7, r0
   109e0:	ldr	r6, [pc, #72]	; 10a30 <close@plt+0x4d0>
   109e4:	ldr	r5, [pc, #72]	; 10a34 <close@plt+0x4d4>
   109e8:	add	r6, pc, r6
   109ec:	add	r5, pc, r5
   109f0:	sub	r6, r6, r5
   109f4:	mov	r8, r1
   109f8:	mov	r9, r2
   109fc:	bl	10498 <__read_chk@plt-0x20>
   10a00:	asrs	r6, r6, #2
   10a04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a08:	mov	r4, #0
   10a0c:	add	r4, r4, #1
   10a10:	ldr	r3, [r5], #4
   10a14:	mov	r2, r9
   10a18:	mov	r1, r8
   10a1c:	mov	r0, r7
   10a20:	blx	r3
   10a24:	cmp	r6, r4
   10a28:	bne	10a0c <close@plt+0x4ac>
   10a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a30:	andeq	r0, r1, r4, lsr #10
   10a34:	andeq	r0, r1, ip, lsl r5
   10a38:	bx	lr

Disassembly of section .fini:

00010a3c <.fini>:
   10a3c:	push	{r3, lr}
   10a40:	pop	{r3, pc}
