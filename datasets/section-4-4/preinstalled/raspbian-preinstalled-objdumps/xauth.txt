
raspbian-preinstalled/xauth:     file format elf32-littlearm


Disassembly of section .init:

00011150 <_init@@Base>:
   11150:	push	{r3, lr}
   11154:	bl	117c8 <close@plt+0x2ec>
   11158:	pop	{r3, pc}

Disassembly of section .plt:

0001115c <fdopen@plt-0x14>:
   1115c:	push	{lr}		; (str lr, [sp, #-4]!)
   11160:	ldr	lr, [pc, #4]	; 1116c <_init@@Base+0x1c>
   11164:	add	lr, pc, lr
   11168:	ldr	pc, [lr, #8]!
   1116c:	muleq	r1, r4, lr

00011170 <fdopen@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3732]!	; 0xe94

0001117c <calloc@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3724]!	; 0xe8c

00011188 <strcmp@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3716]!	; 0xe84

00011194 <strtol@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3708]!	; 0xe7c

000111a0 <XauWriteAuth@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3700]!	; 0xe74

000111ac <fopen@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3692]!	; 0xe6c

000111b8 <fflush@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3684]!	; 0xe64

000111c4 <free@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3676]!	; 0xe5c

000111d0 <fgets@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3668]!	; 0xe54

000111dc <_exit@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3660]!	; 0xe4c

000111e8 <memcpy@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3652]!	; 0xe44

000111f4 <signal@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3644]!	; 0xe3c

00011200 <_IO_getc@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3636]!	; 0xe34

0001120c <memcmp@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3628]!	; 0xe2c

00011218 <inet_ntoa@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3620]!	; 0xe24

00011224 <XauUnlockAuth@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011230 <gethostbyaddr@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3604]!	; 0xe14

0001123c <__stack_chk_fail@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3596]!	; 0xe0c

00011248 <unlink@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3588]!	; 0xe04

00011254 <realloc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011260 <XSecurityFreeXauth@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3572]!	; 0xdf4

0001126c <__xstat@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3564]!	; 0xdec

00011278 <_IO_putc@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3556]!	; 0xde4

00011284 <fwrite@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3548]!	; 0xddc

00011290 <XSecurityGenerateAuthorization@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3540]!	; 0xdd4

0001129c <__stpcpy_chk@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3532]!	; 0xdcc

000112a8 <strcpy@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3524]!	; 0xdc4

000112b4 <puts@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3516]!	; 0xdbc

000112c0 <malloc@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3508]!	; 0xdb4

000112cc <XauLockAuth@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3500]!	; 0xdac

000112d8 <__libc_start_main@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3492]!	; 0xda4

000112e4 <XmuGetHostname@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3484]!	; 0xd9c

000112f0 <XOpenDisplay@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3476]!	; 0xd94

000112fc <__ctype_tolower_loc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3468]!	; 0xd8c

00011308 <__gmon_start__@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3460]!	; 0xd84

00011314 <open@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011320 <rename@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3444]!	; 0xd74

0001132c <__ctype_b_loc@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3436]!	; 0xd6c

00011338 <exit@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3428]!	; 0xd64

00011344 <XauDisposeAuth@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011350 <strlen@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3412]!	; 0xd54

0001135c <strchr@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3404]!	; 0xd4c

00011368 <XSetErrorHandler@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3396]!	; 0xd44

00011374 <__errno_location@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3388]!	; 0xd3c

00011380 <__strcat_chk@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3380]!	; 0xd34

0001138c <__sprintf_chk@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3372]!	; 0xd2c

00011398 <__strdup@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3364]!	; 0xd24

000113a4 <XGetErrorText@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3356]!	; 0xd1c

000113b0 <memset@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3348]!	; 0xd14

000113bc <strncpy@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3340]!	; 0xd0c

000113c8 <XSync@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3332]!	; 0xd04

000113d4 <__printf_chk@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3324]!	; 0xcfc

000113e0 <link@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3316]!	; 0xcf4

000113ec <write@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3308]!	; 0xcec

000113f8 <fileno@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3300]!	; 0xce4

00011404 <XSecurityAllocXauth@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3292]!	; 0xcdc

00011410 <__fprintf_chk@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3284]!	; 0xcd4

0001141c <access@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3276]!	; 0xccc

00011428 <fclose@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3268]!	; 0xcc4

00011434 <XSecurityQueryExtension@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3260]!	; 0xcbc

00011440 <XauReadAuth@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3252]!	; 0xcb4

0001144c <strrchr@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3244]!	; 0xcac

00011458 <fputc@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3236]!	; 0xca4

00011464 <freeaddrinfo@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3228]!	; 0xc9c

00011470 <getaddrinfo@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3220]!	; 0xc94

0001147c <inet_ntop@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3212]!	; 0xc8c

00011488 <umask@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3204]!	; 0xc84

00011494 <XCloseDisplay@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3196]!	; 0xc7c

000114a0 <isatty@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3188]!	; 0xc74

000114ac <fputs@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3180]!	; 0xc6c

000114b8 <strncmp@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #90112	; 0x16000
   114c0:	ldr	pc, [ip, #3172]!	; 0xc64

000114c4 <abort@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #90112	; 0x16000
   114cc:	ldr	pc, [ip, #3164]!	; 0xc5c

000114d0 <XauFileName@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #90112	; 0x16000
   114d8:	ldr	pc, [ip, #3156]!	; 0xc54

000114dc <close@plt>:
   114dc:	stmia	r6!, {}
   114de:	b.n	11a00 <close@plt+0x524>
   114e0:	ldmia	r2, {r1, r2, r4}
   114e2:	b.n	119fe <close@plt+0x522>
   114e4:	mcrr2	5, 11, lr, ip, cr12

Disassembly of section .text:

000114e8 <.text>:
   114e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114ec:	cmp	r0, #1
   114f0:	ldr	r6, [pc, #624]	; 11768 <close@plt+0x28c>
   114f4:	ldr	r3, [r1]
   114f8:	ldrle	r4, [pc, #620]	; 1176c <close@plt+0x290>
   114fc:	str	r3, [r6]
   11500:	ble	116bc <close@plt+0x1e0>
   11504:	ldr	r2, [r1, #4]
   11508:	ldrb	r3, [r2]
   1150c:	cmp	r3, #45	; 0x2d
   11510:	addne	sl, r1, #4
   11514:	movne	ip, #1
   11518:	ldrne	r4, [pc, #588]	; 1176c <close@plt+0x290>
   1151c:	bne	11630 <close@plt+0x154>
   11520:	ldr	r4, [pc, #580]	; 1176c <close@plt+0x290>
   11524:	mov	lr, #0
   11528:	mov	ip, #1
   1152c:	ldr	r9, [r4]
   11530:	ldr	r7, [pc, #568]	; 11770 <close@plt+0x294>
   11534:	mov	r8, lr
   11538:	mov	r5, ip
   1153c:	ldrb	r3, [r2, #1]
   11540:	add	r2, r2, #1
   11544:	cmp	r3, #0
   11548:	beq	11608 <close@plt+0x12c>
   1154c:	sub	r3, r3, #86	; 0x56
   11550:	cmp	r3, #32
   11554:	ldrls	pc, [pc, r3, lsl #2]
   11558:	b	115ec <close@plt+0x110>
   1155c:	muleq	r1, r0, r6
   11560:	andeq	r1, r1, ip, ror #11
   11564:	andeq	r1, r1, ip, ror #11
   11568:	andeq	r1, r1, ip, ror #11
   1156c:	andeq	r1, r1, ip, ror #11
   11570:	andeq	r1, r1, ip, ror #11
   11574:	andeq	r1, r1, ip, ror #11
   11578:	andeq	r1, r1, ip, ror #11
   1157c:	andeq	r1, r1, ip, ror #11
   11580:	andeq	r1, r1, ip, ror #11
   11584:	andeq	r1, r1, ip, ror #11
   11588:	andeq	r1, r1, ip, ror #11
   1158c:	andeq	r1, r1, r8, lsl #13
   11590:	andeq	r1, r1, ip, ror #11
   11594:	andeq	r1, r1, ip, ror #11
   11598:	andeq	r1, r1, ip, ror #11
   1159c:	andeq	r1, r1, r0, ror #11
   115a0:	andeq	r1, r1, ip, ror #11
   115a4:	andeq	r1, r1, ip, ror #11
   115a8:	andeq	r1, r1, r0, lsl #13
   115ac:	andeq	r1, r1, ip, ror #11
   115b0:	andeq	r1, r1, ip, ror #11
   115b4:	andeq	r1, r1, ip, ror #11
   115b8:	andeq	r1, r1, ip, ror #11
   115bc:	andeq	r1, r1, r8, ror r6
   115c0:	andeq	r1, r1, ip, ror #11
   115c4:	andeq	r1, r1, ip, ror #11
   115c8:	andeq	r1, r1, r0, ror r6
   115cc:	andeq	r1, r1, ip, ror #11
   115d0:	andeq	r1, r1, ip, ror #11
   115d4:	andeq	r1, r1, ip, ror #11
   115d8:	andeq	r1, r1, ip, ror #11
   115dc:	strdeq	r1, [r1], -r8
   115e0:	add	ip, ip, #1
   115e4:	cmp	r0, ip
   115e8:	bgt	116a8 <close@plt+0x1cc>
   115ec:	cmp	lr, #0
   115f0:	bne	11760 <close@plt+0x284>
   115f4:	bl	15790 <close@plt+0x42b4>
   115f8:	str	r5, [r7, #80]	; 0x50
   115fc:	ldrb	r3, [r2, #1]!
   11600:	cmp	r3, #0
   11604:	bne	1154c <close@plt+0x70>
   11608:	add	ip, ip, #1
   1160c:	cmp	r0, ip
   11610:	ble	116b4 <close@plt+0x1d8>
   11614:	ldr	r2, [r1, ip, lsl #2]
   11618:	add	sl, r1, ip, lsl #2
   1161c:	ldrb	r3, [r2]
   11620:	cmp	r3, #45	; 0x2d
   11624:	beq	1153c <close@plt+0x60>
   11628:	cmp	lr, #0
   1162c:	strne	r9, [r4]
   11630:	ldr	r3, [pc, #312]	; 11770 <close@plt+0x294>
   11634:	ldr	r7, [pc, #312]	; 11774 <close@plt+0x298>
   11638:	sub	r8, r0, ip
   1163c:	ldr	r2, [r3, #80]	; 0x50
   11640:	cmn	r2, #1
   11644:	moveq	r2, #0
   11648:	streq	r2, [r3, #80]	; 0x50
   1164c:	ldr	r3, [r4]
   11650:	cmp	r3, #0
   11654:	beq	11704 <close@plt+0x228>
   11658:	ldr	r0, [r4]
   1165c:	bl	147f8 <close@plt+0x331c>
   11660:	cmp	r0, #0
   11664:	beq	116dc <close@plt+0x200>
   11668:	mov	r0, #1
   1166c:	bl	11338 <exit@plt>
   11670:	str	r8, [r7, #80]	; 0x50
   11674:	b	115fc <close@plt+0x120>
   11678:	str	r5, [r4, #12]
   1167c:	b	115fc <close@plt+0x120>
   11680:	str	r5, [r4, #8]
   11684:	b	115fc <close@plt+0x120>
   11688:	str	r5, [r4, #4]
   1168c:	b	115fc <close@plt+0x120>
   11690:	cmp	lr, #0
   11694:	ldr	r0, [pc, #220]	; 11778 <close@plt+0x29c>
   11698:	strne	r9, [r4]
   1169c:	bl	112b4 <puts@plt>
   116a0:	mov	r0, #0
   116a4:	bl	11338 <exit@plt>
   116a8:	ldr	r9, [r1, ip, lsl #2]
   116ac:	mov	lr, #1
   116b0:	b	115fc <close@plt+0x120>
   116b4:	cmp	lr, #0
   116b8:	strne	r9, [r4]
   116bc:	ldr	r5, [pc, #172]	; 11770 <close@plt+0x294>
   116c0:	ldr	r3, [r5, #80]	; 0x50
   116c4:	cmn	r3, #1
   116c8:	beq	11734 <close@plt+0x258>
   116cc:	ldr	r7, [pc, #168]	; 1177c <close@plt+0x2a0>
   116d0:	add	sl, r5, #68	; 0x44
   116d4:	mov	r8, #2
   116d8:	b	1164c <close@plt+0x170>
   116dc:	mov	r3, sl
   116e0:	mov	r2, r8
   116e4:	mov	r1, #1
   116e8:	mov	r0, r7
   116ec:	bl	14fb8 <close@plt+0x3adc>
   116f0:	mov	r4, r0
   116f4:	bl	14bdc <close@plt+0x3700>
   116f8:	adds	r0, r4, #0
   116fc:	movne	r0, #1
   11700:	bl	11338 <exit@plt>
   11704:	bl	114d0 <XauFileName@plt>
   11708:	cmp	r0, #0
   1170c:	str	r0, [r4]
   11710:	bne	11658 <close@plt+0x17c>
   11714:	ldr	r1, [pc, #100]	; 11780 <close@plt+0x2a4>
   11718:	ldr	r3, [r6]
   1171c:	ldr	r2, [pc, #96]	; 11784 <close@plt+0x2a8>
   11720:	ldr	r0, [r1]
   11724:	mov	r1, #1
   11728:	bl	11410 <__fprintf_chk@plt>
   1172c:	mov	r0, #1
   11730:	bl	11338 <exit@plt>
   11734:	ldr	r3, [pc, #76]	; 11788 <close@plt+0x2ac>
   11738:	add	sl, r5, #68	; 0x44
   1173c:	mov	r8, #2
   11740:	ldr	r0, [r3]
   11744:	bl	113f8 <fileno@plt>
   11748:	bl	114a0 <isatty@plt>
   1174c:	ldr	r7, [pc, #40]	; 1177c <close@plt+0x2a0>
   11750:	adds	r0, r0, #0
   11754:	movne	r0, #1
   11758:	str	r0, [r5, #80]	; 0x50
   1175c:	b	1164c <close@plt+0x170>
   11760:	str	r9, [r4]
   11764:	b	115f4 <close@plt+0x118>
   11768:	andeq	r8, r2, ip, ror #14
   1176c:	andeq	r8, r2, ip, asr r7
   11770:	muleq	r2, ip, r2
   11774:	andeq	r6, r1, ip, lsr lr
   11778:	andeq	r5, r1, r0, lsr #27
   1177c:	andeq	r5, r1, r8, ror #25
   11780:	strdeq	r8, [r2], -r0
   11784:	andeq	r6, r1, r4, asr #28
   11788:	strdeq	r8, [r2], -ip
   1178c:	mov	fp, #0
   11790:	mov	lr, #0
   11794:	pop	{r1}		; (ldr r1, [sp], #4)
   11798:	mov	r2, sp
   1179c:	push	{r2}		; (str r2, [sp, #-4]!)
   117a0:	push	{r0}		; (str r0, [sp, #-4]!)
   117a4:	ldr	ip, [pc, #16]	; 117bc <close@plt+0x2e0>
   117a8:	push	{ip}		; (str ip, [sp, #-4]!)
   117ac:	ldr	r0, [pc, #12]	; 117c0 <close@plt+0x2e4>
   117b0:	ldr	r3, [pc, #12]	; 117c4 <close@plt+0x2e8>
   117b4:	bl	112d8 <__libc_start_main@plt>
   117b8:	bl	114c4 <abort@plt>
   117bc:			; <UNDEFINED> instruction: 0x000158b4
   117c0:	andeq	r1, r1, r8, ror #9
   117c4:	andeq	r5, r1, r4, asr r8
   117c8:	ldr	r3, [pc, #20]	; 117e4 <close@plt+0x308>
   117cc:	ldr	r2, [pc, #20]	; 117e8 <close@plt+0x30c>
   117d0:	add	r3, pc, r3
   117d4:	ldr	r2, [r3, r2]
   117d8:	cmp	r2, #0
   117dc:	bxeq	lr
   117e0:	b	11308 <__gmon_start__@plt>
   117e4:	andeq	r6, r1, r8, lsr #16
   117e8:	andeq	r0, r0, r4, lsr r1
   117ec:	ldr	r0, [pc, #24]	; 1180c <close@plt+0x330>
   117f0:	ldr	r3, [pc, #24]	; 11810 <close@plt+0x334>
   117f4:	cmp	r3, r0
   117f8:	bxeq	lr
   117fc:	ldr	r3, [pc, #16]	; 11814 <close@plt+0x338>
   11800:	cmp	r3, #0
   11804:	bxeq	lr
   11808:	bx	r3
   1180c:	strdeq	r8, [r2], -r0
   11810:	strdeq	r8, [r2], -r0
   11814:	andeq	r0, r0, r0
   11818:	ldr	r0, [pc, #36]	; 11844 <close@plt+0x368>
   1181c:	ldr	r1, [pc, #36]	; 11848 <close@plt+0x36c>
   11820:	sub	r1, r1, r0
   11824:	asr	r1, r1, #2
   11828:	add	r1, r1, r1, lsr #31
   1182c:	asrs	r1, r1, #1
   11830:	bxeq	lr
   11834:	ldr	r3, [pc, #16]	; 1184c <close@plt+0x370>
   11838:	cmp	r3, #0
   1183c:	bxeq	lr
   11840:	bx	r3
   11844:	strdeq	r8, [r2], -r0
   11848:	strdeq	r8, [r2], -r0
   1184c:	andeq	r0, r0, r0
   11850:	push	{r4, lr}
   11854:	ldr	r4, [pc, #24]	; 11874 <close@plt+0x398>
   11858:	ldrb	r3, [r4]
   1185c:	cmp	r3, #0
   11860:	popne	{r4, pc}
   11864:	bl	117ec <close@plt+0x310>
   11868:	mov	r3, #1
   1186c:	strb	r3, [r4]
   11870:	pop	{r4, pc}
   11874:	andeq	r8, r2, r0, lsl #6
   11878:	b	11818 <close@plt+0x33c>
   1187c:	push	{r4, r5, r6, lr}
   11880:	mov	r3, #0
   11884:	ldrh	r1, [r0, #2]
   11888:	ldr	r5, [pc, #212]	; 11964 <close@plt+0x488>
   1188c:	cmp	r1, r3
   11890:	str	r3, [r5, #48]	; 0x30
   11894:	beq	118e8 <close@plt+0x40c>
   11898:	ldrh	r3, [r0]
   1189c:	cmp	r3, #6
   118a0:	cmpne	r3, #0
   118a4:	bne	118f0 <close@plt+0x414>
   118a8:	cmp	r3, #6
   118ac:	mov	r4, r0
   118b0:	beq	118f8 <close@plt+0x41c>
   118b4:	ldr	r3, [pc, #172]	; 11968 <close@plt+0x48c>
   118b8:	ldr	r0, [r0, #4]
   118bc:	ldr	r3, [r3]
   118c0:	cmp	r3, #0
   118c4:	moveq	r6, #2
   118c8:	bne	11958 <close@plt+0x47c>
   118cc:	mov	r2, r6
   118d0:	bl	11230 <gethostbyaddr@plt>
   118d4:	cmp	r0, #0
   118d8:	str	r0, [r5, #48]	; 0x30
   118dc:	beq	1194c <close@plt+0x470>
   118e0:	ldr	r0, [r0]
   118e4:	pop	{r4, r5, r6, pc}
   118e8:	ldr	r0, [pc, #124]	; 1196c <close@plt+0x490>
   118ec:	pop	{r4, r5, r6, pc}
   118f0:	mov	r0, #0
   118f4:	pop	{r4, r5, r6, pc}
   118f8:	ldr	r3, [pc, #104]	; 11968 <close@plt+0x48c>
   118fc:	ldr	r0, [r0, #4]
   11900:	ldr	r3, [r3]
   11904:	cmp	r3, #0
   11908:	moveq	r6, #10
   1190c:	beq	118cc <close@plt+0x3f0>
   11910:	mov	r1, r0
   11914:	mov	ip, #91	; 0x5b
   11918:	mov	r3, #46	; 0x2e
   1191c:	ldr	r2, [pc, #76]	; 11970 <close@plt+0x494>
   11920:	mov	r0, #10
   11924:	strb	ip, [r5]
   11928:	bl	1147c <inet_ntop@plt>
   1192c:	cmp	r0, #0
   11930:	beq	118f0 <close@plt+0x414>
   11934:	mov	r2, #48	; 0x30
   11938:	ldr	r1, [pc, #52]	; 11974 <close@plt+0x498>
   1193c:	ldr	r0, [pc, #32]	; 11964 <close@plt+0x488>
   11940:	bl	11380 <__strcat_chk@plt>
   11944:	ldr	r0, [pc, #24]	; 11964 <close@plt+0x488>
   11948:	pop	{r4, r5, r6, pc}
   1194c:	cmp	r6, #10
   11950:	ldr	r0, [r4, #4]
   11954:	beq	11910 <close@plt+0x434>
   11958:	ldr	r0, [r0]
   1195c:	pop	{r4, r5, r6, lr}
   11960:	b	11218 <inet_ntoa@plt>
   11964:	andeq	r8, r2, r4, lsl #6
   11968:	andeq	r8, r2, r8, ror #14
   1196c:	andeq	r5, r1, r4, asr #17
   11970:	andeq	r8, r2, r5, lsl #6
   11974:	ldrdeq	r5, [r1], -r4
   11978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1197c:	sub	sp, sp, #4416	; 0x1140
   11980:	ldr	r9, [pc, #980]	; 11d5c <close@plt+0x880>
   11984:	sub	sp, sp, #44	; 0x2c
   11988:	mov	r7, r3
   1198c:	add	r3, sp, #4416	; 0x1140
   11990:	mov	r5, r0
   11994:	add	r3, r3, #36	; 0x24
   11998:	ldr	r0, [r9]
   1199c:	mov	r8, #0
   119a0:	cmp	r5, #6
   119a4:	str	r0, [r3]
   119a8:	str	r8, [sp, #4]
   119ac:	beq	119e8 <close@plt+0x50c>
   119b0:	cmp	r5, #256	; 0x100
   119b4:	beq	11b90 <close@plt+0x6b4>
   119b8:	cmp	r5, r8
   119bc:	beq	119e8 <close@plt+0x50c>
   119c0:	add	r3, sp, #4416	; 0x1140
   119c4:	add	r3, r3, #36	; 0x24
   119c8:	ldr	r2, [r3]
   119cc:	ldr	r3, [r9]
   119d0:	mov	r0, r8
   119d4:	cmp	r2, r3
   119d8:	bne	11d58 <close@plt+0x87c>
   119dc:	add	sp, sp, #4416	; 0x1140
   119e0:	add	sp, sp, #44	; 0x2c
   119e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119e8:	mov	r2, #32
   119ec:	mov	r1, #0
   119f0:	add	r0, sp, #8
   119f4:	bl	113b0 <memset@plt>
   119f8:	mov	ip, #1
   119fc:	add	r2, sp, #8
   11a00:	add	r3, sp, #4
   11a04:	mov	r0, r7
   11a08:	mov	r1, #0
   11a0c:	str	ip, [sp, #16]
   11a10:	bl	11470 <getaddrinfo@plt>
   11a14:	subs	sl, r0, #0
   11a18:	bne	11c3c <close@plt+0x760>
   11a1c:	ldr	r7, [sp, #4]
   11a20:	cmp	r7, #0
   11a24:	moveq	r8, r7
   11a28:	beq	11aa8 <close@plt+0x5cc>
   11a2c:	mov	r8, sl
   11a30:	ldr	r3, [r7, #4]
   11a34:	cmp	r3, #2
   11a38:	beq	11ab4 <close@plt+0x5d8>
   11a3c:	cmp	r3, #10
   11a40:	beq	11b3c <close@plt+0x660>
   11a44:	cmp	r8, #0
   11a48:	movne	r6, #0
   11a4c:	movne	fp, r6
   11a50:	beq	11a98 <close@plt+0x5bc>
   11a54:	mov	r4, r8
   11a58:	b	11a68 <close@plt+0x58c>
   11a5c:	ldr	r4, [r4]
   11a60:	cmp	r4, #0
   11a64:	beq	11adc <close@plt+0x600>
   11a68:	ldr	r3, [r4, #12]
   11a6c:	cmp	r3, r5
   11a70:	bne	11a5c <close@plt+0x580>
   11a74:	ldr	r3, [r4, #8]
   11a78:	cmp	r3, r6
   11a7c:	bne	11a5c <close@plt+0x580>
   11a80:	mov	r2, r6
   11a84:	mov	r1, fp
   11a88:	ldr	r0, [r4, #4]
   11a8c:	bl	1120c <memcmp@plt>
   11a90:	cmp	r0, #0
   11a94:	bne	11a5c <close@plt+0x580>
   11a98:	ldr	r7, [r7, #28]
   11a9c:	cmp	r7, #0
   11aa0:	bne	11a30 <close@plt+0x554>
   11aa4:	ldr	r7, [sp, #4]
   11aa8:	mov	r0, r7
   11aac:	bl	11464 <freeaddrinfo@plt>
   11ab0:	b	119c0 <close@plt+0x4e4>
   11ab4:	ldr	r3, [r7, #20]
   11ab8:	ldr	r2, [pc, #672]	; 11d60 <close@plt+0x884>
   11abc:	add	fp, r3, #4
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	cmp	r3, r2
   11ac8:	movne	r5, #0
   11acc:	movne	r6, #4
   11ad0:	beq	11cfc <close@plt+0x820>
   11ad4:	cmp	r8, #0
   11ad8:	bne	11a54 <close@plt+0x578>
   11adc:	cmp	fp, #0
   11ae0:	cmpne	r6, #0
   11ae4:	ble	11a98 <close@plt+0x5bc>
   11ae8:	mov	r0, #16
   11aec:	bl	112c0 <malloc@plt>
   11af0:	subs	r4, r0, #0
   11af4:	beq	11a98 <close@plt+0x5bc>
   11af8:	mov	r0, r6
   11afc:	bl	112c0 <malloc@plt>
   11b00:	cmp	r0, #0
   11b04:	str	r0, [r4, #4]
   11b08:	beq	11d3c <close@plt+0x860>
   11b0c:	mov	r1, fp
   11b10:	mov	r2, r6
   11b14:	bl	111e8 <memcpy@plt>
   11b18:	mov	r3, #0
   11b1c:	cmp	r8, #0
   11b20:	str	r3, [r4]
   11b24:	str	r5, [r4, #12]
   11b28:	str	r6, [r4, #8]
   11b2c:	beq	11d28 <close@plt+0x84c>
   11b30:	str	r4, [sl]
   11b34:	mov	sl, r4
   11b38:	b	11a98 <close@plt+0x5bc>
   11b3c:	ldr	r3, [r7, #20]
   11b40:	add	fp, r3, #8
   11b44:	ldr	r2, [r3, #8]
   11b48:	cmp	r2, #0
   11b4c:	bne	11b84 <close@plt+0x6a8>
   11b50:	ldr	r5, [r3, #12]
   11b54:	cmp	r5, #0
   11b58:	bne	11b84 <close@plt+0x6a8>
   11b5c:	ldr	r2, [r3, #16]
   11b60:	cmn	r2, #65536	; 0x10000
   11b64:	addeq	fp, r3, #20
   11b68:	moveq	r6, #4
   11b6c:	beq	11ad4 <close@plt+0x5f8>
   11b70:	cmp	r2, #0
   11b74:	bne	11b84 <close@plt+0x6a8>
   11b78:	ldr	r3, [r3, #20]
   11b7c:	cmp	r3, #16777216	; 0x1000000
   11b80:	beq	11cfc <close@plt+0x820>
   11b84:	mov	r6, #16
   11b88:	mov	r5, #6
   11b8c:	b	11ad4 <close@plt+0x5f8>
   11b90:	cmp	r2, #0
   11b94:	mov	r4, r1
   11b98:	mov	r6, r2
   11b9c:	bne	11c44 <close@plt+0x768>
   11ba0:	mov	r2, #5
   11ba4:	ldr	r1, [pc, #440]	; 11d64 <close@plt+0x888>
   11ba8:	mov	r0, r4
   11bac:	bl	114b8 <strncmp@plt>
   11bb0:	cmp	r0, #0
   11bb4:	beq	11bc4 <close@plt+0x6e8>
   11bb8:	ldrb	r3, [r4]
   11bbc:	cmp	r3, #58	; 0x3a
   11bc0:	bne	11c44 <close@plt+0x768>
   11bc4:	add	r0, sp, #100	; 0x64
   11bc8:	mov	r1, #255	; 0xff
   11bcc:	bl	11dcc <close@plt+0x8f0>
   11bd0:	cmp	r0, #0
   11bd4:	beq	11c3c <close@plt+0x760>
   11bd8:	add	r0, sp, #100	; 0x64
   11bdc:	bl	11350 <strlen@plt>
   11be0:	add	r4, sp, #100	; 0x64
   11be4:	mov	r6, r0
   11be8:	cmp	r6, #0
   11bec:	ble	11c3c <close@plt+0x760>
   11bf0:	mov	r0, #16
   11bf4:	bl	112c0 <malloc@plt>
   11bf8:	subs	r8, r0, #0
   11bfc:	beq	11c3c <close@plt+0x760>
   11c00:	mov	r0, r6
   11c04:	bl	112c0 <malloc@plt>
   11c08:	cmp	r0, #0
   11c0c:	mov	r5, r0
   11c10:	str	r0, [r8, #4]
   11c14:	beq	11d48 <close@plt+0x86c>
   11c18:	mov	r2, r6
   11c1c:	mov	r1, r4
   11c20:	bl	111e8 <memcpy@plt>
   11c24:	mov	r2, #0
   11c28:	mov	r3, #256	; 0x100
   11c2c:	str	r6, [r8, #8]
   11c30:	str	r2, [r8]
   11c34:	str	r3, [r8, #12]
   11c38:	b	119c0 <close@plt+0x4e4>
   11c3c:	mov	r8, #0
   11c40:	b	119c0 <close@plt+0x4e4>
   11c44:	mov	r2, #4096	; 0x1000
   11c48:	mov	r1, r4
   11c4c:	add	r0, sp, #356	; 0x164
   11c50:	bl	113bc <strncpy@plt>
   11c54:	add	r3, sp, #4416	; 0x1140
   11c58:	add	r3, r3, #35	; 0x23
   11c5c:	mov	r5, #0
   11c60:	add	r1, sp, #356	; 0x164
   11c64:	add	r2, sp, #8
   11c68:	mov	r0, #3
   11c6c:	strb	r5, [r3]
   11c70:	bl	1126c <__xstat@plt>
   11c74:	cmp	r0, r5
   11c78:	beq	11cac <close@plt+0x7d0>
   11c7c:	mov	r1, #46	; 0x2e
   11c80:	add	r0, sp, #356	; 0x164
   11c84:	bl	1144c <strrchr@plt>
   11c88:	cmp	r0, #0
   11c8c:	beq	11be8 <close@plt+0x70c>
   11c90:	strb	r5, [r0]
   11c94:	add	r2, sp, #8
   11c98:	add	r1, sp, #356	; 0x164
   11c9c:	mov	r0, #3
   11ca0:	bl	1126c <__xstat@plt>
   11ca4:	cmp	r0, #0
   11ca8:	bne	11be8 <close@plt+0x70c>
   11cac:	mov	r1, #47	; 0x2f
   11cb0:	mov	r0, r4
   11cb4:	bl	1144c <strrchr@plt>
   11cb8:	add	r5, sp, #100	; 0x64
   11cbc:	mov	r2, #255	; 0xff
   11cc0:	mov	r6, #0
   11cc4:	add	r1, r0, #1
   11cc8:	mov	r0, r5
   11ccc:	bl	113bc <strncpy@plt>
   11cd0:	mov	r1, #58	; 0x3a
   11cd4:	mov	r0, r5
   11cd8:	strb	r6, [sp, #354]	; 0x162
   11cdc:	bl	1135c <strchr@plt>
   11ce0:	cmp	r0, r5
   11ce4:	movne	r4, r5
   11ce8:	strbne	r6, [r0]
   11cec:	mov	r0, r4
   11cf0:	bl	11350 <strlen@plt>
   11cf4:	mov	r6, r0
   11cf8:	b	11be8 <close@plt+0x70c>
   11cfc:	add	r0, sp, #100	; 0x64
   11d00:	mov	r1, #255	; 0xff
   11d04:	bl	11dcc <close@plt+0x8f0>
   11d08:	cmp	r0, #0
   11d0c:	beq	11d34 <close@plt+0x858>
   11d10:	add	r0, sp, #100	; 0x64
   11d14:	bl	11350 <strlen@plt>
   11d18:	add	fp, sp, #100	; 0x64
   11d1c:	mov	r5, #256	; 0x100
   11d20:	mov	r6, r0
   11d24:	b	11ad4 <close@plt+0x5f8>
   11d28:	mov	sl, r4
   11d2c:	mov	r8, r4
   11d30:	b	11a98 <close@plt+0x5bc>
   11d34:	mov	r5, #256	; 0x100
   11d38:	b	11a44 <close@plt+0x568>
   11d3c:	mov	r0, r4
   11d40:	bl	111c4 <free@plt>
   11d44:	b	11a98 <close@plt+0x5bc>
   11d48:	mov	r0, r8
   11d4c:	bl	111c4 <free@plt>
   11d50:	mov	r8, r5
   11d54:	b	119c0 <close@plt+0x4e4>
   11d58:	bl	1123c <__stack_chk_fail@plt>
   11d5c:	andeq	r7, r2, r8, ror #29
   11d60:	tsteq	r0, pc, ror r0
   11d64:	ldrdeq	r5, [r1], -r8
   11d68:	adds	r3, r1, #0
   11d6c:	movne	r3, #1
   11d70:	cmp	r0, #0
   11d74:	movne	r3, #0
   11d78:	cmp	r3, #0
   11d7c:	push	{r4, r5, r6, lr}
   11d80:	bne	11dc0 <close@plt+0x8e4>
   11d84:	mov	r5, r0
   11d88:	add	r0, r1, #1
   11d8c:	mov	r4, r1
   11d90:	bl	112c0 <malloc@plt>
   11d94:	subs	r6, r0, #0
   11d98:	beq	11dc0 <close@plt+0x8e4>
   11d9c:	cmp	r5, #0
   11da0:	beq	11db0 <close@plt+0x8d4>
   11da4:	mov	r1, r5
   11da8:	mov	r2, r4
   11dac:	bl	113bc <strncpy@plt>
   11db0:	mov	r3, #0
   11db4:	strb	r3, [r6, r4]
   11db8:	mov	r0, r6
   11dbc:	pop	{r4, r5, r6, pc}
   11dc0:	mov	r6, #0
   11dc4:	mov	r0, r6
   11dc8:	pop	{r4, r5, r6, pc}
   11dcc:	push	{r4, lr}
   11dd0:	mov	r3, #0
   11dd4:	mov	r4, r0
   11dd8:	strb	r3, [r0]
   11ddc:	bl	112e4 <XmuGetHostname@plt>
   11de0:	ldrb	r3, [r4]
   11de4:	cmp	r3, #0
   11de8:	movne	r0, r4
   11dec:	moveq	r0, #0
   11df0:	pop	{r4, pc}
   11df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11df8:	sub	sp, sp, #4160	; 0x1040
   11dfc:	ldr	r4, [pc, #1092]	; 12248 <close@plt+0xd6c>
   11e00:	sub	sp, sp, #60	; 0x3c
   11e04:	mov	r9, r3
   11e08:	add	r3, sp, #4160	; 0x1040
   11e0c:	add	r3, r3, #52	; 0x34
   11e10:	mov	r7, r1
   11e14:	ldr	r1, [r4]
   11e18:	subs	r5, r0, #0
   11e1c:	str	r1, [r3]
   11e20:	add	r3, sp, #4224	; 0x1080
   11e24:	add	r3, r3, #32
   11e28:	ldr	sl, [r3]
   11e2c:	add	r3, sp, #4224	; 0x1080
   11e30:	add	r3, r3, #36	; 0x24
   11e34:	ldr	fp, [r3]
   11e38:	beq	11ef0 <close@plt+0xa14>
   11e3c:	ldrb	r3, [r5]
   11e40:	cmp	r3, #0
   11e44:	str	r3, [sp]
   11e48:	beq	11ef0 <close@plt+0xa14>
   11e4c:	mov	r1, #58	; 0x3a
   11e50:	mov	r8, r2
   11e54:	bl	1144c <strrchr@plt>
   11e58:	subs	r6, r0, #0
   11e5c:	beq	11ef0 <close@plt+0xa14>
   11e60:	ldrb	r2, [r6, #1]
   11e64:	cmp	r2, #0
   11e68:	beq	11ef0 <close@plt+0xa14>
   11e6c:	cmp	r5, r6
   11e70:	beq	1211c <close@plt+0xc40>
   11e74:	ldrb	r2, [r6, #-1]
   11e78:	ldr	r3, [sp]
   11e7c:	cmp	r2, #58	; 0x3a
   11e80:	beq	12128 <close@plt+0xc4c>
   11e84:	subs	r1, r6, r5
   11e88:	str	r1, [sp, #8]
   11e8c:	beq	11f20 <close@plt+0xa44>
   11e90:	cmp	r3, #91	; 0x5b
   11e94:	beq	120ec <close@plt+0xc10>
   11e98:	subs	r1, r6, r5
   11e9c:	mov	r0, r5
   11ea0:	bl	11d68 <close@plt+0x88c>
   11ea4:	subs	r3, r0, #0
   11ea8:	str	r3, [sp, #4]
   11eac:	beq	11ef0 <close@plt+0xa14>
   11eb0:	ldr	r1, [pc, #916]	; 1224c <close@plt+0xd70>
   11eb4:	bl	11188 <strcmp@plt>
   11eb8:	add	r3, r6, #1
   11ebc:	str	r3, [sp]
   11ec0:	subs	r3, r0, #0
   11ec4:	str	r3, [sp, #8]
   11ec8:	beq	1205c <close@plt+0xb80>
   11ecc:	mov	r3, #0
   11ed0:	str	r3, [sp, #8]
   11ed4:	str	r3, [sp, #16]
   11ed8:	b	11f4c <close@plt+0xa70>
   11edc:	mov	r5, r2
   11ee0:	cmp	r5, r2
   11ee4:	bne	121d4 <close@plt+0xcf8>
   11ee8:	ldr	r0, [sp, #4]
   11eec:	bl	111c4 <free@plt>
   11ef0:	mov	r0, #0
   11ef4:	add	r3, sp, #4160	; 0x1040
   11ef8:	add	r3, r3, #52	; 0x34
   11efc:	ldr	r2, [r3]
   11f00:	ldr	r3, [r4]
   11f04:	cmp	r2, r3
   11f08:	bne	1223c <close@plt+0xd60>
   11f0c:	add	sp, sp, #4160	; 0x1040
   11f10:	add	sp, sp, #60	; 0x3c
   11f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f18:	mov	r3, #1
   11f1c:	str	r3, [sp, #8]
   11f20:	mov	r1, #4
   11f24:	ldr	r0, [pc, #800]	; 1224c <close@plt+0xd70>
   11f28:	bl	11d68 <close@plt+0x88c>
   11f2c:	mov	r3, #256	; 0x100
   11f30:	str	r3, [sp, #16]
   11f34:	str	r0, [sp, #4]
   11f38:	ldr	r3, [sp, #4]
   11f3c:	cmp	r3, #0
   11f40:	beq	11ef0 <close@plt+0xa14>
   11f44:	add	r3, r6, #1
   11f48:	str	r3, [sp]
   11f4c:	add	r2, sp, #116	; 0x74
   11f50:	add	r3, sp, #120	; 0x78
   11f54:	mov	r1, r5
   11f58:	str	r2, [sp, #12]
   11f5c:	mov	r0, r2
   11f60:	mov	r2, #4096	; 0x1000
   11f64:	str	r3, [sp, #20]
   11f68:	bl	113bc <strncpy@plt>
   11f6c:	ldr	r3, [sp, #20]
   11f70:	mov	r0, #0
   11f74:	add	r5, sp, #24
   11f78:	strb	r0, [r3, #4091]	; 0xffb
   11f7c:	ldr	r1, [sp, #12]
   11f80:	mov	r2, r5
   11f84:	mov	r0, #3
   11f88:	bl	1126c <__xstat@plt>
   11f8c:	cmp	r0, #0
   11f90:	moveq	r3, #256	; 0x100
   11f94:	streq	r3, [sp, #16]
   11f98:	bne	120ac <close@plt+0xbd0>
   11f9c:	ldr	r3, [sp, #8]
   11fa0:	cmp	r3, #0
   11fa4:	ldrne	r3, [sp]
   11fa8:	movne	r6, r3
   11fac:	addne	r3, r3, #1
   11fb0:	strne	r3, [sp]
   11fb4:	ldrb	r6, [r6, #1]
   11fb8:	cmp	r6, #0
   11fbc:	beq	12154 <close@plt+0xc78>
   11fc0:	tst	r6, #128	; 0x80
   11fc4:	bne	1222c <close@plt+0xd50>
   11fc8:	bl	1132c <__ctype_b_loc@plt>
   11fcc:	ldr	r5, [sp]
   11fd0:	ldr	r2, [r0]
   11fd4:	b	11fec <close@plt+0xb10>
   11fd8:	ldrb	r6, [r5, #1]!
   11fdc:	cmp	r6, #0
   11fe0:	beq	12158 <close@plt+0xc7c>
   11fe4:	tst	r6, #128	; 0x80
   11fe8:	bne	11ffc <close@plt+0xb20>
   11fec:	lsl	r3, r6, #1
   11ff0:	ldrh	r3, [r2, r3]
   11ff4:	tst	r3, #2048	; 0x800
   11ff8:	bne	11fd8 <close@plt+0xafc>
   11ffc:	ldr	r3, [sp]
   12000:	cmp	r5, r3
   12004:	beq	11ee8 <close@plt+0xa0c>
   12008:	cmp	r6, #46	; 0x2e
   1200c:	bne	11ee8 <close@plt+0xa0c>
   12010:	ldr	r0, [sp]
   12014:	mov	r2, #10
   12018:	mov	r1, #0
   1201c:	bl	11194 <strtol@plt>
   12020:	ldrb	r3, [r5]
   12024:	cmp	r3, #46	; 0x2e
   12028:	movne	r3, #0
   1202c:	movne	r5, r3
   12030:	mov	r6, r0
   12034:	beq	12168 <close@plt+0xc8c>
   12038:	ldr	r2, [sp, #16]
   1203c:	mov	r0, #1
   12040:	str	r2, [r7]
   12044:	ldr	r2, [sp, #4]
   12048:	str	r2, [r8]
   1204c:	str	r6, [r9]
   12050:	str	r3, [sl]
   12054:	str	r5, [fp]
   12058:	b	11ef4 <close@plt+0xa18>
   1205c:	add	r2, sp, #116	; 0x74
   12060:	add	r3, sp, #120	; 0x78
   12064:	mov	r1, r5
   12068:	str	r2, [sp, #12]
   1206c:	mov	r0, r2
   12070:	mov	r2, #4096	; 0x1000
   12074:	str	r3, [sp, #16]
   12078:	bl	113bc <strncpy@plt>
   1207c:	ldr	r3, [sp, #16]
   12080:	ldr	ip, [sp, #8]
   12084:	add	r5, sp, #24
   12088:	ldr	r1, [sp, #12]
   1208c:	mov	r2, r5
   12090:	mov	r0, #3
   12094:	strb	ip, [r3, #4091]	; 0xffb
   12098:	bl	1126c <__xstat@plt>
   1209c:	mov	r3, #256	; 0x100
   120a0:	str	r3, [sp, #16]
   120a4:	cmp	r0, #0
   120a8:	beq	11fb4 <close@plt+0xad8>
   120ac:	mov	r1, #46	; 0x2e
   120b0:	ldr	r0, [sp, #12]
   120b4:	bl	1144c <strrchr@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	11f9c <close@plt+0xac0>
   120c0:	mov	r3, #0
   120c4:	strb	r3, [r0]
   120c8:	mov	r2, r5
   120cc:	ldr	r1, [sp, #12]
   120d0:	mov	r0, #3
   120d4:	bl	1126c <__xstat@plt>
   120d8:	ldr	r3, [sp, #16]
   120dc:	cmp	r0, #0
   120e0:	moveq	r3, #256	; 0x100
   120e4:	str	r3, [sp, #16]
   120e8:	b	11f9c <close@plt+0xac0>
   120ec:	cmp	r2, #93	; 0x5d
   120f0:	bne	11e98 <close@plt+0x9bc>
   120f4:	subs	r3, r6, r5
   120f8:	sub	r1, r3, #2
   120fc:	add	r0, r5, #1
   12100:	bl	11d68 <close@plt+0x88c>
   12104:	mov	r3, #0
   12108:	str	r3, [sp, #8]
   1210c:	mov	r3, #6
   12110:	str	r3, [sp, #16]
   12114:	str	r0, [sp, #4]
   12118:	b	11f38 <close@plt+0xa5c>
   1211c:	mov	r3, #0
   12120:	str	r3, [sp, #8]
   12124:	b	11f20 <close@plt+0xa44>
   12128:	sub	r6, r6, #1
   1212c:	subs	r1, r6, r5
   12130:	beq	11f18 <close@plt+0xa3c>
   12134:	mov	r3, #1
   12138:	mov	r0, r5
   1213c:	str	r3, [sp, #8]
   12140:	bl	11d68 <close@plt+0x88c>
   12144:	ldr	r3, [sp, #8]
   12148:	str	r3, [sp, #16]
   1214c:	str	r0, [sp, #4]
   12150:	b	11f38 <close@plt+0xa5c>
   12154:	ldr	r5, [sp]
   12158:	ldr	r3, [sp]
   1215c:	cmp	r5, r3
   12160:	bne	12010 <close@plt+0xb34>
   12164:	b	11ee8 <close@plt+0xa0c>
   12168:	ldrb	r3, [r5, #1]
   1216c:	add	r2, r5, #1
   12170:	cmp	r3, #0
   12174:	beq	11edc <close@plt+0xa00>
   12178:	tst	r3, #128	; 0x80
   1217c:	bne	12234 <close@plt+0xd58>
   12180:	str	r2, [sp, #8]
   12184:	str	r3, [sp]
   12188:	bl	1132c <__ctype_b_loc@plt>
   1218c:	ldr	r2, [sp, #8]
   12190:	ldr	r3, [sp]
   12194:	mov	r5, r2
   12198:	ldr	r0, [r0]
   1219c:	b	121b4 <close@plt+0xcd8>
   121a0:	ldrb	r3, [r5, #1]!
   121a4:	cmp	r3, #0
   121a8:	beq	11ee0 <close@plt+0xa04>
   121ac:	tst	r3, #128	; 0x80
   121b0:	bne	121c4 <close@plt+0xce8>
   121b4:	lsl	r1, r3, #1
   121b8:	ldrh	r1, [r0, r1]
   121bc:	tst	r1, #2048	; 0x800
   121c0:	bne	121a0 <close@plt+0xcc4>
   121c4:	cmp	r5, r2
   121c8:	beq	11ee8 <close@plt+0xa0c>
   121cc:	cmp	r3, #46	; 0x2e
   121d0:	bne	11ee8 <close@plt+0xa0c>
   121d4:	mov	r0, r2
   121d8:	mov	r1, #0
   121dc:	mov	r2, #10
   121e0:	bl	11194 <strtol@plt>
   121e4:	ldrb	r2, [r5]
   121e8:	cmp	r2, #46	; 0x2e
   121ec:	mov	r3, r0
   121f0:	bne	12240 <close@plt+0xd64>
   121f4:	add	r5, r5, #1
   121f8:	str	r0, [sp]
   121fc:	mov	r0, r5
   12200:	bl	11350 <strlen@plt>
   12204:	ldr	r3, [sp]
   12208:	subs	r1, r0, #0
   1220c:	moveq	r5, r1
   12210:	beq	12038 <close@plt+0xb5c>
   12214:	mov	r0, r5
   12218:	bl	11d68 <close@plt+0x88c>
   1221c:	ldr	r3, [sp]
   12220:	subs	r5, r0, #0
   12224:	bne	12038 <close@plt+0xb5c>
   12228:	b	11ee8 <close@plt+0xa0c>
   1222c:	ldr	r5, [sp]
   12230:	b	11ffc <close@plt+0xb20>
   12234:	mov	r5, r2
   12238:	b	121c4 <close@plt+0xce8>
   1223c:	bl	1123c <__stack_chk_fail@plt>
   12240:	mov	r5, #0
   12244:	b	12038 <close@plt+0xb5c>
   12248:	andeq	r7, r2, r8, ror #29
   1224c:	andeq	r5, r1, r0, ror #17
   12250:	ldr	r3, [pc, #12]	; 12264 <close@plt+0xd88>
   12254:	mov	r2, #1
   12258:	mov	r0, #0
   1225c:	str	r2, [r3]
   12260:	bx	lr
   12264:	andeq	r8, r2, r8, lsr r3
   12268:	push	{r4, r5, r6, lr}
   1226c:	lsl	r6, r0, #1
   12270:	mov	r5, r0
   12274:	add	r0, r6, #1
   12278:	mov	r4, r1
   1227c:	bl	112c0 <malloc@plt>
   12280:	cmp	r0, #0
   12284:	popeq	{r4, r5, r6, pc}
   12288:	cmp	r5, #0
   1228c:	moveq	r6, r0
   12290:	beq	122cc <close@plt+0xdf0>
   12294:	sub	r1, r4, #1
   12298:	ldr	r4, [pc, #56]	; 122d8 <close@plt+0xdfc>
   1229c:	add	lr, r1, r5
   122a0:	add	r3, r0, #2
   122a4:	ldrb	r2, [r1, #1]!
   122a8:	add	r3, r3, #2
   122ac:	cmp	r1, lr
   122b0:	ldr	r2, [r4, r2, lsl #2]
   122b4:	ldrb	ip, [r2]
   122b8:	strb	ip, [r3, #-4]
   122bc:	ldrb	r2, [r2, #1]
   122c0:	strb	r2, [r3, #-3]
   122c4:	bne	122a4 <close@plt+0xdc8>
   122c8:	add	r6, r0, r6
   122cc:	mov	r3, #0
   122d0:	strb	r3, [r6]
   122d4:	pop	{r4, r5, r6, pc}
   122d8:	andeq	r5, r1, r8, ror #17
   122dc:	push	{r4, r5, r6, lr}
   122e0:	mov	r5, r0
   122e4:	b	12310 <close@plt+0xe34>
   122e8:	bics	r3, r0, #127	; 0x7f
   122ec:	bne	12324 <close@plt+0xe48>
   122f0:	cmp	r0, #10
   122f4:	beq	12324 <close@plt+0xe48>
   122f8:	bl	1132c <__ctype_b_loc@plt>
   122fc:	lsl	r3, r4, #1
   12300:	ldr	r2, [r0]
   12304:	ldrh	r3, [r2, r3]
   12308:	tst	r3, #8192	; 0x2000
   1230c:	beq	12324 <close@plt+0xe48>
   12310:	mov	r0, r5
   12314:	bl	11200 <_IO_getc@plt>
   12318:	cmn	r0, #1
   1231c:	mov	r4, r0
   12320:	bne	122e8 <close@plt+0xe0c>
   12324:	mov	r0, r4
   12328:	pop	{r4, r5, r6, pc}
   1232c:	push	{r4, r5, r6, r7, r8, lr}
   12330:	mov	r6, r0
   12334:	ldr	r7, [pc, #84]	; 12390 <close@plt+0xeb4>
   12338:	mov	r8, r1
   1233c:	mov	r5, #4
   12340:	mov	r4, #0
   12344:	mov	r0, r6
   12348:	bl	122dc <close@plt+0xe00>
   1234c:	cmn	r0, #1
   12350:	add	r3, r7, r0, lsl #2
   12354:	beq	12388 <close@plt+0xeac>
   12358:	cmp	r0, #10
   1235c:	beq	12388 <close@plt+0xeac>
   12360:	cmp	r0, #255	; 0xff
   12364:	bhi	12388 <close@plt+0xeac>
   12368:	ldr	r3, [r3, #4]
   1236c:	subs	r5, r5, #1
   12370:	add	r4, r3, r4, lsl #4
   12374:	uxth	r4, r4
   12378:	bne	12344 <close@plt+0xe68>
   1237c:	strh	r4, [r8]
   12380:	mov	r0, #1
   12384:	pop	{r4, r5, r6, r7, r8, pc}
   12388:	mov	r0, #0
   1238c:	pop	{r4, r5, r6, r7, r8, pc}
   12390:	andeq	r8, r2, r8, lsr r3
   12394:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12398:	mov	r6, r0
   1239c:	mov	r0, r1
   123a0:	mov	r8, r1
   123a4:	mov	sl, r2
   123a8:	bl	112c0 <malloc@plt>
   123ac:	subs	r9, r0, #0
   123b0:	beq	12420 <close@plt+0xf44>
   123b4:	cmp	r8, #0
   123b8:	beq	12428 <close@plt+0xf4c>
   123bc:	ldr	r7, [pc, #112]	; 12434 <close@plt+0xf58>
   123c0:	add	r8, r9, r8
   123c4:	mov	r5, r9
   123c8:	b	123fc <close@plt+0xf20>
   123cc:	bl	122dc <close@plt+0xe00>
   123d0:	add	r4, r7, r4, lsl #2
   123d4:	cmn	r0, #1
   123d8:	cmpne	r0, #10
   123dc:	add	r2, r7, r0, lsl #2
   123e0:	beq	12418 <close@plt+0xf3c>
   123e4:	ldr	r1, [r4, #4]
   123e8:	ldr	r3, [r2, #4]
   123ec:	add	r3, r3, r1, lsl #4
   123f0:	strb	r3, [r5], #1
   123f4:	cmp	r5, r8
   123f8:	beq	12428 <close@plt+0xf4c>
   123fc:	mov	r0, r6
   12400:	bl	122dc <close@plt+0xe00>
   12404:	mov	r4, r0
   12408:	cmn	r4, #1
   1240c:	cmpne	r4, #10
   12410:	mov	r0, r6
   12414:	bne	123cc <close@plt+0xef0>
   12418:	mov	r0, r9
   1241c:	bl	111c4 <free@plt>
   12420:	mov	r0, #0
   12424:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12428:	str	r9, [sl]
   1242c:	mov	r0, #1
   12430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12434:	andeq	r8, r2, r8, lsr r3
   12438:	push	{r4, r5, r6, lr}
   1243c:	mov	r5, r0
   12440:	mov	r0, #32
   12444:	bl	112c0 <malloc@plt>
   12448:	subs	r4, r0, #0
   1244c:	beq	12494 <close@plt+0xfb8>
   12450:	mov	r3, #0
   12454:	str	r3, [r4, #12]
   12458:	str	r3, [r4]
   1245c:	str	r3, [r4, #4]
   12460:	strh	r3, [r4, #8]
   12464:	str	r3, [r4, #20]
   12468:	strh	r3, [r4, #16]
   1246c:	str	r3, [r4, #28]
   12470:	strh	r3, [r4, #24]
   12474:	mov	r1, r4
   12478:	mov	r0, r5
   1247c:	bl	1232c <close@plt+0xe50>
   12480:	cmp	r0, #0
   12484:	bne	1249c <close@plt+0xfc0>
   12488:	mov	r0, r4
   1248c:	bl	11344 <XauDisposeAuth@plt>
   12490:	mov	r4, #0
   12494:	mov	r0, r4
   12498:	pop	{r4, r5, r6, pc}
   1249c:	add	r1, r4, #2
   124a0:	mov	r0, r5
   124a4:	bl	1232c <close@plt+0xe50>
   124a8:	cmp	r0, #0
   124ac:	beq	12488 <close@plt+0xfac>
   124b0:	add	r2, r4, #4
   124b4:	ldrh	r1, [r4, #2]
   124b8:	mov	r0, r5
   124bc:	bl	12394 <close@plt+0xeb8>
   124c0:	cmp	r0, #0
   124c4:	beq	12488 <close@plt+0xfac>
   124c8:	add	r1, r4, #8
   124cc:	mov	r0, r5
   124d0:	bl	1232c <close@plt+0xe50>
   124d4:	cmp	r0, #0
   124d8:	beq	12488 <close@plt+0xfac>
   124dc:	add	r2, r4, #12
   124e0:	ldrh	r1, [r4, #8]
   124e4:	mov	r0, r5
   124e8:	bl	12394 <close@plt+0xeb8>
   124ec:	cmp	r0, #0
   124f0:	beq	12488 <close@plt+0xfac>
   124f4:	add	r1, r4, #16
   124f8:	mov	r0, r5
   124fc:	bl	1232c <close@plt+0xe50>
   12500:	cmp	r0, #0
   12504:	beq	12488 <close@plt+0xfac>
   12508:	add	r2, r4, #20
   1250c:	ldrh	r1, [r4, #16]
   12510:	mov	r0, r5
   12514:	bl	12394 <close@plt+0xeb8>
   12518:	cmp	r0, #0
   1251c:	beq	12488 <close@plt+0xfac>
   12520:	add	r1, r4, #24
   12524:	mov	r0, r5
   12528:	bl	1232c <close@plt+0xe50>
   1252c:	cmp	r0, #0
   12530:	beq	12488 <close@plt+0xfac>
   12534:	add	r2, r4, #28
   12538:	ldrh	r1, [r4, #24]
   1253c:	mov	r0, r5
   12540:	bl	12394 <close@plt+0xeb8>
   12544:	cmp	r0, #0
   12548:	beq	12488 <close@plt+0xfac>
   1254c:	mov	r0, r5
   12550:	bl	122dc <close@plt+0xe00>
   12554:	cmn	r0, #1
   12558:	beq	12494 <close@plt+0xfb8>
   1255c:	cmp	r0, #10
   12560:	bne	12488 <close@plt+0xfac>
   12564:	b	12494 <close@plt+0xfb8>
   12568:	mov	r3, r1
   1256c:	push	{r4, r5, r6, lr}
   12570:	mov	r1, r2
   12574:	mov	r5, r0
   12578:	mov	r0, r3
   1257c:	bl	12268 <close@plt+0xd8c>
   12580:	mov	r1, r5
   12584:	mov	r4, r0
   12588:	bl	114ac <fputs@plt>
   1258c:	mov	r0, r4
   12590:	pop	{r4, r5, r6, lr}
   12594:	b	111c4 <free@plt>
   12598:	push	{r4, r5, r6, r7, lr}
   1259c:	mov	r4, r0
   125a0:	ldr	r0, [r0]
   125a4:	sub	sp, sp, #12
   125a8:	mov	r7, r3
   125ac:	ldrb	ip, [r0]
   125b0:	cmp	ip, #45	; 0x2d
   125b4:	beq	125d0 <close@plt+0x10f4>
   125b8:	bl	111ac <fopen@plt>
   125bc:	subs	r5, r0, #0
   125c0:	beq	1263c <close@plt+0x1160>
   125c4:	mov	r0, r5
   125c8:	add	sp, sp, #12
   125cc:	pop	{r4, r5, r6, r7, pc}
   125d0:	ldrb	ip, [r0, #1]
   125d4:	cmp	ip, #0
   125d8:	bne	125b8 <close@plt+0x10dc>
   125dc:	mov	r6, #1
   125e0:	str	r6, [r2]
   125e4:	ldrb	r2, [r1]
   125e8:	cmp	r2, #114	; 0x72
   125ec:	beq	1260c <close@plt+0x1130>
   125f0:	ldr	r3, [pc, #204]	; 126c4 <close@plt+0x11e8>
   125f4:	ldr	r2, [pc, #204]	; 126c8 <close@plt+0x11ec>
   125f8:	str	r2, [r4]
   125fc:	ldr	r5, [r3]
   12600:	mov	r0, r5
   12604:	add	sp, sp, #12
   12608:	pop	{r4, r5, r6, r7, pc}
   1260c:	ldr	r3, [pc, #184]	; 126cc <close@plt+0x11f0>
   12610:	ldr	r5, [r3]
   12614:	cmp	r5, #0
   12618:	beq	12684 <close@plt+0x11a8>
   1261c:	ldr	r2, [pc, #172]	; 126d0 <close@plt+0x11f4>
   12620:	ldr	r1, [pc, #172]	; 126d4 <close@plt+0x11f8>
   12624:	str	ip, [r3]
   12628:	str	r1, [r4]
   1262c:	ldr	r5, [r2]
   12630:	mov	r0, r5
   12634:	add	sp, sp, #12
   12638:	pop	{r4, r5, r6, r7, pc}
   1263c:	ldr	r6, [pc, #148]	; 126d8 <close@plt+0x11fc>
   12640:	ldr	r3, [pc, #148]	; 126dc <close@plt+0x1200>
   12644:	ldr	r2, [sp, #32]
   12648:	mov	r1, #1
   1264c:	str	r2, [sp, #4]
   12650:	ldr	r2, [pc, #136]	; 126e0 <close@plt+0x1204>
   12654:	ldr	r3, [r3]
   12658:	ldr	r0, [r6]
   1265c:	str	r7, [sp]
   12660:	bl	11410 <__fprintf_chk@plt>
   12664:	ldr	r3, [r4]
   12668:	ldr	r0, [r6]
   1266c:	ldr	r2, [pc, #112]	; 126e4 <close@plt+0x1208>
   12670:	str	r3, [sp]
   12674:	mov	r1, #1
   12678:	ldr	r3, [sp, #36]	; 0x24
   1267c:	bl	11410 <__fprintf_chk@plt>
   12680:	b	125c4 <close@plt+0x10e8>
   12684:	ldr	r4, [pc, #76]	; 126d8 <close@plt+0x11fc>
   12688:	ldr	r3, [pc, #76]	; 126dc <close@plt+0x1200>
   1268c:	ldr	r2, [sp, #32]
   12690:	mov	r1, r6
   12694:	str	r2, [sp, #4]
   12698:	ldr	r2, [pc, #64]	; 126e0 <close@plt+0x1204>
   1269c:	ldr	r3, [r3]
   126a0:	ldr	r0, [r4]
   126a4:	str	r7, [sp]
   126a8:	bl	11410 <__fprintf_chk@plt>
   126ac:	ldr	r3, [sp, #36]	; 0x24
   126b0:	ldr	r0, [r4]
   126b4:	mov	r1, r6
   126b8:	ldr	r2, [pc, #40]	; 126e8 <close@plt+0x120c>
   126bc:	bl	11410 <__fprintf_chk@plt>
   126c0:	b	125c4 <close@plt+0x10e8>
   126c4:	strdeq	r8, [r2], -ip
   126c8:	andeq	r5, r1, ip, lsl sp
   126cc:	andeq	r8, r2, r0, asr #2
   126d0:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   126d4:	andeq	r5, r1, r8, ror #25
   126d8:	strdeq	r8, [r2], -r0
   126dc:	andeq	r8, r2, ip, ror #14
   126e0:	strdeq	r5, [r1], -r0
   126e4:	andeq	r5, r1, r8, lsr #26
   126e8:	andeq	r5, r1, r0, lsl #26
   126ec:	push	{r4, r5, lr}
   126f0:	sub	sp, sp, #92	; 0x5c
   126f4:	ldr	r4, [pc, #92]	; 12758 <close@plt+0x127c>
   126f8:	mov	r5, r1
   126fc:	add	r2, sp, #4
   12700:	ldr	ip, [r4]
   12704:	ldrb	r1, [r1, #16]
   12708:	mov	r3, #80	; 0x50
   1270c:	str	ip, [sp, #84]	; 0x54
   12710:	bl	113a4 <XGetErrorText@plt>
   12714:	ldr	r1, [pc, #64]	; 1275c <close@plt+0x1280>
   12718:	add	r3, sp, #4
   1271c:	ldr	r2, [pc, #60]	; 12760 <close@plt+0x1284>
   12720:	ldr	r0, [r1]
   12724:	mov	r1, #1
   12728:	bl	11410 <__fprintf_chk@plt>
   1272c:	ldr	r2, [sp, #84]	; 0x54
   12730:	ldrb	r0, [r5, #16]
   12734:	ldr	r1, [pc, #40]	; 12764 <close@plt+0x1288>
   12738:	ldr	r3, [r4]
   1273c:	cmp	r2, r3
   12740:	str	r0, [r1, #1028]	; 0x404
   12744:	bne	12754 <close@plt+0x1278>
   12748:	mov	r0, #1
   1274c:	add	sp, sp, #92	; 0x5c
   12750:	pop	{r4, r5, pc}
   12754:	bl	1123c <__stack_chk_fail@plt>
   12758:	andeq	r7, r2, r8, ror #29
   1275c:	strdeq	r8, [r2], -r0
   12760:	ldrdeq	r6, [r1], -r4
   12764:	andeq	r8, r2, r8, lsr r3
   12768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1276c:	sub	sp, sp, #20
   12770:	ldrb	r7, [r0]
   12774:	cmp	r7, #0
   12778:	beq	12890 <close@plt+0x13b4>
   1277c:	bics	r4, r7, #127	; 0x7f
   12780:	bne	12890 <close@plt+0x13b4>
   12784:	mov	r5, r0
   12788:	str	r1, [sp, #8]
   1278c:	bl	1132c <__ctype_b_loc@plt>
   12790:	mov	r2, r5
   12794:	mov	r3, r7
   12798:	ldr	r8, [r0]
   1279c:	b	127a8 <close@plt+0x12cc>
   127a0:	tst	r3, #128	; 0x80
   127a4:	bne	12890 <close@plt+0x13b4>
   127a8:	lsl	r3, r3, #1
   127ac:	ldrh	r3, [r8, r3]
   127b0:	tst	r3, #8192	; 0x2000
   127b4:	bne	127c4 <close@plt+0x12e8>
   127b8:	tst	r3, #4096	; 0x1000
   127bc:	add	r4, r4, #1
   127c0:	beq	12890 <close@plt+0x13b4>
   127c4:	ldrb	r3, [r2, #1]!
   127c8:	cmp	r3, #0
   127cc:	bne	127a0 <close@plt+0x12c4>
   127d0:	cmp	r4, #0
   127d4:	beq	12890 <close@plt+0x13b4>
   127d8:	ands	r9, r4, #1
   127dc:	bne	12890 <close@plt+0x13b4>
   127e0:	asr	r4, r4, #1
   127e4:	mov	r0, r4
   127e8:	bl	112c0 <malloc@plt>
   127ec:	subs	sl, r0, #0
   127f0:	str	sl, [sp, #12]
   127f4:	beq	128c4 <close@plt+0x13e8>
   127f8:	cmp	r4, #0
   127fc:	movgt	fp, r4
   12800:	bgt	1284c <close@plt+0x1370>
   12804:	b	128ac <close@plt+0x13d0>
   12808:	cmp	r2, #9
   1280c:	movhi	r2, #87	; 0x57
   12810:	movls	r2, #48	; 0x30
   12814:	sub	r3, r9, r2
   12818:	uxtb	r1, r1
   1281c:	lsl	r3, r3, #4
   12820:	cmp	r1, #9
   12824:	uxtb	r3, r3
   12828:	movhi	r2, #87	; 0x57
   1282c:	movls	r2, #48	; 0x30
   12830:	add	r7, r7, r3
   12834:	sub	r7, r7, r2
   12838:	subs	fp, fp, #1
   1283c:	mov	r9, #0
   12840:	strb	r7, [sl], #1
   12844:	beq	128ac <close@plt+0x13d0>
   12848:	ldrb	r7, [r5, #1]!
   1284c:	sxth	r6, r7
   12850:	lsl	r2, r6, #1
   12854:	ldrh	r2, [r8, r2]
   12858:	tst	r2, #8192	; 0x2000
   1285c:	bne	128a0 <close@plt+0x13c4>
   12860:	tst	r2, #256	; 0x100
   12864:	beq	12874 <close@plt+0x1398>
   12868:	bl	112fc <__ctype_tolower_loc@plt>
   1286c:	ldr	r2, [r0]
   12870:	ldrb	r7, [r2, r6, lsl #2]
   12874:	sub	r2, r9, #48	; 0x30
   12878:	cmp	r9, #0
   1287c:	uxtb	r2, r2
   12880:	sub	r1, r7, #48	; 0x30
   12884:	bne	12808 <close@plt+0x132c>
   12888:	mov	r9, r7
   1288c:	b	12848 <close@plt+0x136c>
   12890:	mvn	r4, #0
   12894:	mov	r0, r4
   12898:	add	sp, sp, #20
   1289c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128a0:	mov	r7, r9
   128a4:	mov	r9, r7
   128a8:	b	12848 <close@plt+0x136c>
   128ac:	ldr	r3, [sp, #8]
   128b0:	ldr	r2, [sp, #12]
   128b4:	mov	r0, r4
   128b8:	str	r2, [r3]
   128bc:	add	sp, sp, #20
   128c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128c4:	ldr	r2, [pc, #32]	; 128ec <close@plt+0x1410>
   128c8:	ldr	r3, [pc, #32]	; 128f0 <close@plt+0x1414>
   128cc:	str	r4, [sp]
   128d0:	mov	r1, #1
   128d4:	ldr	r0, [r2]
   128d8:	ldr	r3, [r3]
   128dc:	ldr	r2, [pc, #16]	; 128f4 <close@plt+0x1418>
   128e0:	bl	11410 <__fprintf_chk@plt>
   128e4:	mvn	r4, #0
   128e8:	b	12894 <close@plt+0x13b8>
   128ec:	strdeq	r8, [r2], -r0
   128f0:	andeq	r8, r2, ip, ror #14
   128f4:	andeq	r5, r1, r8, asr #26
   128f8:	push	{r4, r5, r6, lr}
   128fc:	mov	r4, r1
   12900:	ldr	r6, [pc, #180]	; 129bc <close@plt+0x14e0>
   12904:	mov	r5, r0
   12908:	ldrh	r3, [r1]
   1290c:	ldr	r2, [pc, #172]	; 129c0 <close@plt+0x14e4>
   12910:	mov	r1, #1
   12914:	bl	11410 <__fprintf_chk@plt>
   12918:	ldrh	r3, [r4, #2]
   1291c:	mov	r2, r6
   12920:	mov	r0, r5
   12924:	mov	r1, #1
   12928:	bl	11410 <__fprintf_chk@plt>
   1292c:	ldr	r2, [r4, #4]
   12930:	ldrh	r1, [r4, #2]
   12934:	mov	r0, r5
   12938:	bl	12568 <close@plt+0x108c>
   1293c:	ldrh	r3, [r4, #8]
   12940:	mov	r2, r6
   12944:	mov	r0, r5
   12948:	mov	r1, #1
   1294c:	bl	11410 <__fprintf_chk@plt>
   12950:	ldr	r2, [r4, #12]
   12954:	ldrh	r1, [r4, #8]
   12958:	mov	r0, r5
   1295c:	bl	12568 <close@plt+0x108c>
   12960:	ldrh	r3, [r4, #16]
   12964:	mov	r2, r6
   12968:	mov	r0, r5
   1296c:	mov	r1, #1
   12970:	bl	11410 <__fprintf_chk@plt>
   12974:	ldr	r2, [r4, #20]
   12978:	ldrh	r1, [r4, #16]
   1297c:	mov	r0, r5
   12980:	bl	12568 <close@plt+0x108c>
   12984:	ldrh	r3, [r4, #24]
   12988:	mov	r2, r6
   1298c:	mov	r0, r5
   12990:	mov	r1, #1
   12994:	bl	11410 <__fprintf_chk@plt>
   12998:	ldr	r2, [r4, #28]
   1299c:	ldrh	r1, [r4, #24]
   129a0:	mov	r0, r5
   129a4:	bl	12568 <close@plt+0x108c>
   129a8:	mov	r1, r5
   129ac:	mov	r0, #10
   129b0:	bl	11278 <_IO_putc@plt>
   129b4:	mov	r0, #1
   129b8:	pop	{r4, r5, r6, pc}
   129bc:	andeq	r5, r1, r0, lsl #27
   129c0:	andeq	r5, r1, r8, ror sp
   129c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   129c8:	ldr	r9, [pc, #216]	; 12aa8 <close@plt+0x15cc>
   129cc:	ldr	r0, [pc, #216]	; 12aac <close@plt+0x15d0>
   129d0:	bl	112b4 <puts@plt>
   129d4:	ldr	r3, [r9, #4]
   129d8:	cmp	r3, #0
   129dc:	beq	12a90 <close@plt+0x15b4>
   129e0:	add	r9, r9, #4
   129e4:	ldr	r5, [pc, #196]	; 12ab0 <close@plt+0x15d4>
   129e8:	ldr	sl, [pc, #196]	; 12ab4 <close@plt+0x15d8>
   129ec:	mov	r7, r9
   129f0:	mov	r8, #72	; 0x48
   129f4:	ldr	r2, [r7, #8]
   129f8:	ldr	r1, [r5]
   129fc:	add	r2, r8, r2
   12a00:	cmp	r2, #72	; 0x48
   12a04:	ble	12a38 <close@plt+0x155c>
   12a08:	cmp	r7, r9
   12a0c:	beq	12a1c <close@plt+0x1540>
   12a10:	mov	r0, #10
   12a14:	bl	11278 <_IO_putc@plt>
   12a18:	ldr	r1, [r5]
   12a1c:	mov	r3, r1
   12a20:	mov	r2, #8
   12a24:	mov	r1, #1
   12a28:	mov	r0, sl
   12a2c:	bl	11284 <fwrite@plt>
   12a30:	ldr	r1, [r5]
   12a34:	mov	r8, #8
   12a38:	ldr	r0, [r7]
   12a3c:	bl	114ac <fputs@plt>
   12a40:	ldr	r6, [r7, #8]
   12a44:	cmp	r6, #9
   12a48:	add	r8, r8, r6
   12a4c:	bgt	12a74 <close@plt+0x1598>
   12a50:	mov	r4, r6
   12a54:	add	r4, r4, #1
   12a58:	ldr	r1, [r5]
   12a5c:	mov	r0, #32
   12a60:	bl	11278 <_IO_putc@plt>
   12a64:	cmp	r4, #10
   12a68:	bne	12a54 <close@plt+0x1578>
   12a6c:	rsb	r6, r6, #10
   12a70:	add	r8, r6, r8
   12a74:	ldr	r3, [r7, #20]!
   12a78:	cmp	r3, #0
   12a7c:	bne	129f4 <close@plt+0x1518>
   12a80:	cmp	r8, #0
   12a84:	bne	12a94 <close@plt+0x15b8>
   12a88:	mov	r0, #0
   12a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a90:	ldr	r5, [pc, #24]	; 12ab0 <close@plt+0x15d4>
   12a94:	ldr	r1, [r5]
   12a98:	mov	r0, #10
   12a9c:	bl	11278 <_IO_putc@plt>
   12aa0:	mov	r0, #0
   12aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12aa8:	andeq	r8, r2, r0, asr #2
   12aac:	andeq	r5, r1, r8, lsl #27
   12ab0:	strdeq	r8, [r2], -ip
   12ab4:	muleq	r1, r4, sp
   12ab8:	push	{r4, lr}
   12abc:	ldr	r0, [pc, #8]	; 12acc <close@plt+0x15f0>
   12ac0:	bl	112b4 <puts@plt>
   12ac4:	mov	r0, #0
   12ac8:	pop	{r4, pc}
   12acc:	andeq	r5, r1, r0, lsr #27
   12ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ad4:	sub	sp, sp, #12
   12ad8:	ldr	sl, [pc, #272]	; 12bf0 <close@plt+0x1714>
   12adc:	mov	r8, r2
   12ae0:	add	r6, sl, #1024	; 0x400
   12ae4:	ldr	r7, [r2]
   12ae8:	ldr	r4, [sl, #1032]	; 0x408
   12aec:	str	r3, [sp]
   12af0:	add	r6, r6, #8
   12af4:	b	12b08 <close@plt+0x162c>
   12af8:	mov	r6, r4
   12afc:	ldr	r4, [r4]
   12b00:	cmp	r4, #0
   12b04:	beq	12be4 <close@plt+0x1708>
   12b08:	ldr	r5, [r4, #4]
   12b0c:	ldr	r3, [r5]
   12b10:	cmp	r3, r7
   12b14:	bne	12af8 <close@plt+0x161c>
   12b18:	ldrh	r3, [r5, #8]
   12b1c:	ldrh	r9, [r8, #8]
   12b20:	cmp	r9, r3
   12b24:	bne	12af8 <close@plt+0x161c>
   12b28:	ldrh	r3, [r5, #16]
   12b2c:	ldrh	fp, [r8, #16]
   12b30:	cmp	fp, r3
   12b34:	bne	12af8 <close@plt+0x161c>
   12b38:	ldrh	r2, [r5, #24]
   12b3c:	ldrh	r3, [r8, #24]
   12b40:	cmp	r3, r2
   12b44:	bne	12af8 <close@plt+0x161c>
   12b48:	ldrh	r2, [r5, #2]
   12b4c:	ldr	r1, [r8, #4]
   12b50:	ldr	r0, [r5, #4]
   12b54:	str	r3, [sp, #4]
   12b58:	bl	1120c <memcmp@plt>
   12b5c:	mov	r2, r9
   12b60:	cmp	r0, #0
   12b64:	bne	12af8 <close@plt+0x161c>
   12b68:	ldr	r1, [r8, #12]
   12b6c:	ldr	r0, [r5, #12]
   12b70:	bl	1120c <memcmp@plt>
   12b74:	mov	r2, fp
   12b78:	cmp	r0, #0
   12b7c:	bne	12af8 <close@plt+0x161c>
   12b80:	ldr	r1, [r8, #20]
   12b84:	ldr	r0, [r5, #20]
   12b88:	bl	1120c <memcmp@plt>
   12b8c:	ldr	r3, [sp, #4]
   12b90:	mov	r2, r3
   12b94:	cmp	r0, #0
   12b98:	bne	12af8 <close@plt+0x161c>
   12b9c:	ldr	r0, [r5, #28]
   12ba0:	ldr	r1, [r8, #28]
   12ba4:	bl	1120c <memcmp@plt>
   12ba8:	cmp	r0, #0
   12bac:	bne	12af8 <close@plt+0x161c>
   12bb0:	ldr	r3, [r4]
   12bb4:	str	r3, [r6]
   12bb8:	ldr	r0, [r4, #4]
   12bbc:	bl	11344 <XauDisposeAuth@plt>
   12bc0:	mov	r0, r4
   12bc4:	bl	111c4 <free@plt>
   12bc8:	ldr	r2, [sp]
   12bcc:	mov	r0, #1
   12bd0:	str	r0, [sl, #1036]	; 0x40c
   12bd4:	ldr	r3, [r2]
   12bd8:	add	r3, r3, r0
   12bdc:	str	r3, [r2]
   12be0:	b	12be8 <close@plt+0x170c>
   12be4:	mov	r0, r4
   12be8:	add	sp, sp, #12
   12bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bf0:	andeq	r8, r2, r8, lsr r3
   12bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bf8:	mov	r7, r1
   12bfc:	ldr	r6, [pc, #492]	; 12df0 <close@plt+0x1914>
   12c00:	sub	sp, sp, #84	; 0x54
   12c04:	mov	r4, #0
   12c08:	ldr	r3, [r6]
   12c0c:	mov	r1, #47	; 0x2f
   12c10:	str	r4, [r7]
   12c14:	str	r3, [sp, #76]	; 0x4c
   12c18:	str	r4, [sp, #20]
   12c1c:	str	r4, [sp, #24]
   12c20:	mov	r5, r0
   12c24:	bl	1135c <strchr@plt>
   12c28:	subs	r8, r0, #0
   12c2c:	beq	12dbc <close@plt+0x18e0>
   12c30:	mov	r2, #6
   12c34:	ldr	r1, [pc, #440]	; 12df4 <close@plt+0x1918>
   12c38:	bl	114b8 <strncmp@plt>
   12c3c:	cmp	r0, r4
   12c40:	beq	12c88 <close@plt+0x17ac>
   12c44:	mov	r0, r5
   12c48:	add	r2, sp, #24
   12c4c:	add	r3, sp, #32
   12c50:	str	r2, [sp, #4]
   12c54:	str	r3, [sp]
   12c58:	add	r2, sp, #20
   12c5c:	add	r3, sp, #28
   12c60:	add	r1, sp, #16
   12c64:	bl	11df4 <close@plt+0x918>
   12c68:	cmp	r0, #0
   12c6c:	bne	12ca0 <close@plt+0x17c4>
   12c70:	ldr	r2, [sp, #76]	; 0x4c
   12c74:	ldr	r3, [r6]
   12c78:	cmp	r2, r3
   12c7c:	bne	12dec <close@plt+0x1910>
   12c80:	add	sp, sp, #84	; 0x54
   12c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c88:	sub	r4, r8, r5
   12c8c:	cmp	r4, #0
   12c90:	ble	12c44 <close@plt+0x1768>
   12c94:	add	r0, r4, #1
   12c98:	add	r0, r5, r0
   12c9c:	b	12c48 <close@plt+0x176c>
   12ca0:	mov	r1, r5
   12ca4:	mov	r2, r4
   12ca8:	ldr	r3, [sp, #20]
   12cac:	ldr	r0, [sp, #16]
   12cb0:	bl	11978 <close@plt+0x49c>
   12cb4:	subs	r5, r0, #0
   12cb8:	beq	12d8c <close@plt+0x18b0>
   12cbc:	add	r9, sp, #80	; 0x50
   12cc0:	ldr	r3, [sp, #28]
   12cc4:	mov	r8, #0
   12cc8:	strb	r8, [r9, #-44]!	; 0xffffffd4
   12ccc:	mov	r2, #40	; 0x28
   12cd0:	str	r3, [sp]
   12cd4:	mov	r1, #1
   12cd8:	ldr	r3, [pc, #280]	; 12df8 <close@plt+0x191c>
   12cdc:	mov	r0, r9
   12ce0:	bl	1138c <__sprintf_chk@plt>
   12ce4:	mov	r0, r9
   12ce8:	bl	11350 <strlen@plt>
   12cec:	uxth	r3, r0
   12cf0:	cmp	r3, r8
   12cf4:	str	r0, [sp, #8]
   12cf8:	str	r3, [sp, #12]
   12cfc:	beq	12d8c <close@plt+0x18b0>
   12d00:	mov	fp, r8
   12d04:	mov	r0, #8
   12d08:	bl	112c0 <malloc@plt>
   12d0c:	mov	sl, r0
   12d10:	mov	r0, #32
   12d14:	bl	112c0 <malloc@plt>
   12d18:	cmp	r0, #0
   12d1c:	cmpne	sl, #0
   12d20:	mov	r4, r0
   12d24:	beq	12dc8 <close@plt+0x18ec>
   12d28:	cmp	r8, #0
   12d2c:	strne	sl, [r8]
   12d30:	streq	sl, [r7]
   12d34:	str	fp, [sl]
   12d38:	str	r0, [sl, #4]
   12d3c:	ldr	r0, [r5, #12]
   12d40:	ldrh	r1, [sp, #8]
   12d44:	strh	r0, [r4]
   12d48:	ldr	r0, [r5, #4]
   12d4c:	mov	r8, sl
   12d50:	str	r0, [r4, #4]
   12d54:	ldr	r3, [r5, #8]
   12d58:	mov	r0, r9
   12d5c:	strh	r3, [r4, #2]
   12d60:	bl	11d68 <close@plt+0x88c>
   12d64:	ldr	r3, [sp, #12]
   12d68:	str	fp, [r4, #20]
   12d6c:	strh	r3, [r4, #8]
   12d70:	strh	fp, [r4, #16]
   12d74:	str	fp, [r4, #28]
   12d78:	strh	fp, [r4, #24]
   12d7c:	str	r0, [r4, #12]
   12d80:	ldr	r5, [r5]
   12d84:	cmp	r5, #0
   12d88:	bne	12d04 <close@plt+0x1828>
   12d8c:	ldr	r0, [sp, #20]
   12d90:	cmp	r0, #0
   12d94:	beq	12d9c <close@plt+0x18c0>
   12d98:	bl	111c4 <free@plt>
   12d9c:	ldr	r0, [sp, #24]
   12da0:	cmp	r0, #0
   12da4:	beq	12dac <close@plt+0x18d0>
   12da8:	bl	111c4 <free@plt>
   12dac:	ldr	r0, [r7]
   12db0:	adds	r0, r0, #0
   12db4:	movne	r0, #1
   12db8:	b	12c70 <close@plt+0x1794>
   12dbc:	mov	r4, r8
   12dc0:	mov	r0, r5
   12dc4:	b	12c48 <close@plt+0x176c>
   12dc8:	cmp	sl, #0
   12dcc:	beq	12dd8 <close@plt+0x18fc>
   12dd0:	mov	r0, sl
   12dd4:	bl	111c4 <free@plt>
   12dd8:	cmp	r4, #0
   12ddc:	beq	12d8c <close@plt+0x18b0>
   12de0:	mov	r0, r4
   12de4:	bl	111c4 <free@plt>
   12de8:	b	12d8c <close@plt+0x18b0>
   12dec:	bl	1123c <__stack_chk_fail@plt>
   12df0:	andeq	r7, r2, r8, ror #29
   12df4:	andeq	r5, r1, r8, lsr #27
   12df8:			; <UNDEFINED> instruction: 0x00015db0
   12dfc:	push	{r4, r5, r6, r7, r8, lr}
   12e00:	mov	r5, r2
   12e04:	ldr	r2, [r3, #4]
   12e08:	ldr	r4, [r3]
   12e0c:	cmp	r2, #0
   12e10:	bne	12f80 <close@plt+0x1aa4>
   12e14:	ldrh	r3, [r5]
   12e18:	cmp	r3, #6
   12e1c:	beq	12f58 <close@plt+0x1a7c>
   12e20:	bls	12f20 <close@plt+0x1a44>
   12e24:	cmp	r3, #256	; 0x100
   12e28:	bne	12f28 <close@plt+0x1a4c>
   12e2c:	mov	r3, r4
   12e30:	ldrh	r2, [r5, #2]
   12e34:	mov	r1, #1
   12e38:	ldr	r0, [r5, #4]
   12e3c:	bl	11284 <fwrite@plt>
   12e40:	mov	r3, r4
   12e44:	mov	r2, #5
   12e48:	mov	r1, #1
   12e4c:	ldr	r0, [pc, #344]	; 12fac <close@plt+0x1ad0>
   12e50:	bl	11284 <fwrite@plt>
   12e54:	mov	r1, r4
   12e58:	mov	r0, #58	; 0x3a
   12e5c:	bl	11278 <_IO_putc@plt>
   12e60:	mov	r3, r4
   12e64:	ldrh	r2, [r5, #8]
   12e68:	mov	r1, #1
   12e6c:	ldr	r0, [r5, #12]
   12e70:	bl	11284 <fwrite@plt>
   12e74:	mov	r1, r4
   12e78:	mov	r0, #32
   12e7c:	bl	11278 <_IO_putc@plt>
   12e80:	mov	r1, r4
   12e84:	mov	r0, #32
   12e88:	bl	11278 <_IO_putc@plt>
   12e8c:	mov	r3, r4
   12e90:	ldrh	r2, [r5, #16]
   12e94:	mov	r1, #1
   12e98:	ldr	r0, [r5, #20]
   12e9c:	bl	11284 <fwrite@plt>
   12ea0:	mov	r1, r4
   12ea4:	mov	r0, #32
   12ea8:	bl	11278 <_IO_putc@plt>
   12eac:	mov	r1, r4
   12eb0:	mov	r0, #32
   12eb4:	bl	11278 <_IO_putc@plt>
   12eb8:	ldrh	r7, [r5, #16]
   12ebc:	ldr	r6, [r5, #20]
   12ec0:	ldr	r1, [pc, #232]	; 12fb0 <close@plt+0x1ad4>
   12ec4:	mov	r2, r7
   12ec8:	mov	r0, r6
   12ecc:	bl	114b8 <strncmp@plt>
   12ed0:	cmp	r0, #0
   12ed4:	beq	12f74 <close@plt+0x1a98>
   12ed8:	ldr	r1, [pc, #212]	; 12fb4 <close@plt+0x1ad8>
   12edc:	mov	r2, r7
   12ee0:	mov	r0, r6
   12ee4:	bl	114b8 <strncmp@plt>
   12ee8:	ldrh	r1, [r5, #24]
   12eec:	ldr	r3, [r5, #28]
   12ef0:	cmp	r0, #0
   12ef4:	bne	12f94 <close@plt+0x1ab8>
   12ef8:	mov	r2, r1
   12efc:	mov	r0, r3
   12f00:	mov	r1, #1
   12f04:	mov	r3, r4
   12f08:	bl	11284 <fwrite@plt>
   12f0c:	mov	r1, r4
   12f10:	mov	r0, #10
   12f14:	bl	11278 <_IO_putc@plt>
   12f18:	mov	r0, #0
   12f1c:	pop	{r4, r5, r6, r7, r8, pc}
   12f20:	cmp	r3, #1
   12f24:	bls	12f58 <close@plt+0x1a7c>
   12f28:	ldr	r2, [pc, #136]	; 12fb8 <close@plt+0x1adc>
   12f2c:	mov	r1, #1
   12f30:	mov	r0, r4
   12f34:	bl	11410 <__fprintf_chk@plt>
   12f38:	ldrh	r1, [r5, #2]
   12f3c:	mov	r0, r4
   12f40:	ldr	r2, [r5, #4]
   12f44:	bl	12568 <close@plt+0x108c>
   12f48:	mov	r1, r4
   12f4c:	mov	r0, #35	; 0x23
   12f50:	bl	11278 <_IO_putc@plt>
   12f54:	b	12e54 <close@plt+0x1978>
   12f58:	mov	r0, r5
   12f5c:	bl	1187c <close@plt+0x3a0>
   12f60:	cmp	r0, #0
   12f64:	beq	12fa4 <close@plt+0x1ac8>
   12f68:	mov	r1, r4
   12f6c:	bl	114ac <fputs@plt>
   12f70:	b	12e54 <close@plt+0x1978>
   12f74:	ldrh	r1, [r5, #24]
   12f78:	ldr	r3, [r5, #28]
   12f7c:	b	12ef8 <close@plt+0x1a1c>
   12f80:	mov	r1, r5
   12f84:	mov	r0, r4
   12f88:	bl	128f8 <close@plt+0x141c>
   12f8c:	mov	r0, #0
   12f90:	pop	{r4, r5, r6, r7, r8, pc}
   12f94:	mov	r2, r3
   12f98:	mov	r0, r4
   12f9c:	bl	12568 <close@plt+0x108c>
   12fa0:	b	12f0c <close@plt+0x1a30>
   12fa4:	ldrh	r3, [r5]
   12fa8:	b	12f28 <close@plt+0x1a4c>
   12fac:			; <UNDEFINED> instruction: 0x00015db4
   12fb0:	andeq	r5, r1, r4, asr #27
   12fb4:	ldrdeq	r5, [r1], -r0
   12fb8:			; <UNDEFINED> instruction: 0x00015dbc
   12fbc:	cmp	r2, #1
   12fc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   12fc4:	mov	r8, r0
   12fc8:	sub	sp, sp, #12
   12fcc:	mov	r9, r1
   12fd0:	bne	130c4 <close@plt+0x1be8>
   12fd4:	ldr	r5, [pc, #304]	; 1310c <close@plt+0x1c30>
   12fd8:	ldr	r3, [r5, #1032]	; 0x408
   12fdc:	cmp	r3, #0
   12fe0:	moveq	r4, r3
   12fe4:	beq	12ffc <close@plt+0x1b20>
   12fe8:	mov	r4, #0
   12fec:	ldr	r3, [r3]
   12ff0:	add	r4, r4, #1
   12ff4:	cmp	r3, #0
   12ff8:	bne	12fec <close@plt+0x1b10>
   12ffc:	ldr	r2, [r5, #1040]	; 0x410
   13000:	ldr	r3, [pc, #264]	; 13110 <close@plt+0x1c34>
   13004:	cmp	r2, #0
   13008:	moveq	r2, r3
   1300c:	ldr	r1, [pc, #256]	; 13114 <close@plt+0x1c38>
   13010:	mov	r0, #1
   13014:	bl	113d4 <__printf_chk@plt>
   13018:	ldr	r2, [r5, #1044]	; 0x414
   1301c:	ldr	r6, [pc, #244]	; 13118 <close@plt+0x1c3c>
   13020:	ldr	r7, [pc, #244]	; 1311c <close@plt+0x1c40>
   13024:	cmp	r2, #0
   13028:	movne	r2, r6
   1302c:	moveq	r2, r7
   13030:	ldr	r1, [pc, #232]	; 13120 <close@plt+0x1c44>
   13034:	mov	r0, #1
   13038:	bl	113d4 <__printf_chk@plt>
   1303c:	ldr	r2, [r5, #1048]	; 0x418
   13040:	ldr	r1, [pc, #220]	; 13124 <close@plt+0x1c48>
   13044:	cmp	r2, #0
   13048:	movne	r2, r6
   1304c:	moveq	r2, r7
   13050:	mov	r0, #1
   13054:	bl	113d4 <__printf_chk@plt>
   13058:	mov	r2, r4
   1305c:	ldr	r1, [pc, #196]	; 13128 <close@plt+0x1c4c>
   13060:	mov	r0, #1
   13064:	bl	113d4 <__printf_chk@plt>
   13068:	ldr	r3, [pc, #188]	; 1312c <close@plt+0x1c50>
   1306c:	ldr	r1, [pc, #188]	; 13130 <close@plt+0x1c54>
   13070:	mov	r0, #1
   13074:	ldr	r2, [r3, #344]	; 0x158
   13078:	cmp	r2, #0
   1307c:	movne	r2, r7
   13080:	moveq	r2, r6
   13084:	bl	113d4 <__printf_chk@plt>
   13088:	ldr	r2, [r5, #1036]	; 0x40c
   1308c:	ldr	r1, [pc, #160]	; 13134 <close@plt+0x1c58>
   13090:	cmp	r2, #0
   13094:	movne	r2, r7
   13098:	moveq	r2, r6
   1309c:	mov	r0, #1
   130a0:	bl	113d4 <__printf_chk@plt>
   130a4:	mov	r3, r9
   130a8:	mov	r2, r8
   130ac:	ldr	r1, [pc, #132]	; 13138 <close@plt+0x1c5c>
   130b0:	mov	r0, #1
   130b4:	bl	113d4 <__printf_chk@plt>
   130b8:	mov	r0, #0
   130bc:	add	sp, sp, #12
   130c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   130c4:	mov	r4, r3
   130c8:	ldr	r5, [pc, #108]	; 1313c <close@plt+0x1c60>
   130cc:	ldr	r3, [pc, #108]	; 13140 <close@plt+0x1c64>
   130d0:	str	r1, [sp, #4]
   130d4:	ldr	r2, [pc, #104]	; 13144 <close@plt+0x1c68>
   130d8:	ldr	r3, [r3]
   130dc:	ldr	r0, [r5]
   130e0:	mov	r1, #1
   130e4:	str	r8, [sp]
   130e8:	bl	11410 <__fprintf_chk@plt>
   130ec:	ldr	r0, [r5]
   130f0:	ldr	r3, [r4]
   130f4:	ldr	r2, [pc, #76]	; 13148 <close@plt+0x1c6c>
   130f8:	mov	r1, #1
   130fc:	bl	11410 <__fprintf_chk@plt>
   13100:	mov	r0, #1
   13104:	add	sp, sp, #12
   13108:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1310c:	andeq	r8, r2, r8, lsr r3
   13110:	andeq	r5, r1, r0, ror #27
   13114:	andeq	r5, r1, r8, lsl #28
   13118:	andeq	r5, r1, r8, ror #27
   1311c:	andeq	r5, r1, ip, ror #27
   13120:	andeq	r5, r1, r4, lsr #28
   13124:	andeq	r5, r1, r0, asr #28
   13128:	andeq	r5, r1, ip, asr lr
   1312c:	andeq	r8, r2, r0, asr #2
   13130:	andeq	r5, r1, r8, ror lr
   13134:	muleq	r1, r4, lr
   13138:			; <UNDEFINED> instruction: 0x00015eb0
   1313c:	strdeq	r8, [r2], -r0
   13140:	andeq	r8, r2, ip, ror #14
   13144:	strdeq	r5, [r1], -r0
   13148:	strdeq	r5, [r1], -r0
   1314c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13150:	mov	r5, #0
   13154:	sub	sp, sp, #12
   13158:	ldr	ip, [pc, #152]	; 131f8 <close@plt+0x1d1c>
   1315c:	cmp	r1, r5
   13160:	ldr	r6, [pc, #148]	; 131fc <close@plt+0x1d20>
   13164:	mov	r7, r0
   13168:	mov	fp, r2
   1316c:	str	r3, [sp, #4]
   13170:	moveq	r6, ip
   13174:	mov	r4, r5
   13178:	mov	r9, r5
   1317c:	mov	r8, r5
   13180:	b	131ac <close@plt+0x1cd0>
   13184:	mov	r0, #8
   13188:	bl	112c0 <malloc@plt>
   1318c:	cmp	r0, #0
   13190:	beq	131d4 <close@plt+0x1cf8>
   13194:	cmp	r4, #0
   13198:	stm	r0, {r8, sl}
   1319c:	moveq	r9, r0
   131a0:	strne	r0, [r4]
   131a4:	add	r5, r5, #1
   131a8:	mov	r4, r0
   131ac:	mov	r0, r7
   131b0:	blx	r6
   131b4:	subs	sl, r0, #0
   131b8:	bne	13184 <close@plt+0x1ca8>
   131bc:	ldr	r3, [sp, #4]
   131c0:	str	r9, [fp]
   131c4:	mov	r0, r5
   131c8:	str	r4, [r3]
   131cc:	add	sp, sp, #12
   131d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131d4:	ldr	r1, [pc, #36]	; 13200 <close@plt+0x1d24>
   131d8:	ldr	r3, [pc, #36]	; 13204 <close@plt+0x1d28>
   131dc:	ldr	r2, [pc, #36]	; 13208 <close@plt+0x1d2c>
   131e0:	ldr	r0, [r1]
   131e4:	ldr	r3, [r3]
   131e8:	mov	r1, #1
   131ec:	bl	11410 <__fprintf_chk@plt>
   131f0:	mov	r0, #1
   131f4:	bl	11338 <exit@plt>
   131f8:	andeq	r1, r1, r0, asr #8
   131fc:	andeq	r2, r1, r8, lsr r4
   13200:	strdeq	r8, [r2], -r0
   13204:	andeq	r8, r2, ip, ror #14
   13208:	ldrdeq	r5, [r1], -r0
   1320c:	push	{r4, r5, r6, r7, lr}
   13210:	mov	r6, r0
   13214:	ldr	r0, [r3]
   13218:	mov	r5, r2
   1321c:	cmp	r0, #0
   13220:	sub	sp, sp, #12
   13224:	mov	r4, r3
   13228:	ldr	r2, [r3, #12]
   1322c:	beq	13260 <close@plt+0x1d84>
   13230:	ldr	ip, [pc, #168]	; 132e0 <close@plt+0x1e04>
   13234:	cmp	r2, #0
   13238:	ldr	r3, [pc, #164]	; 132e4 <close@plt+0x1e08>
   1323c:	mov	r1, r5
   13240:	movne	r3, ip
   13244:	blx	r3
   13248:	ldr	r3, [r4, #16]
   1324c:	mov	r0, #0
   13250:	add	r3, r3, #1
   13254:	str	r3, [r4, #16]
   13258:	add	sp, sp, #12
   1325c:	pop	{r4, r5, r6, r7, pc}
   13260:	ldr	r3, [r3, #20]
   13264:	ldr	r0, [pc, #124]	; 132e8 <close@plt+0x1e0c>
   13268:	cmp	r2, #0
   1326c:	mov	r7, r1
   13270:	str	r3, [sp, #4]
   13274:	ldr	r1, [pc, #112]	; 132ec <close@plt+0x1e10>
   13278:	str	r7, [sp]
   1327c:	movne	r1, r0
   13280:	mov	r3, r6
   13284:	add	r2, r4, #8
   13288:	add	r0, r4, #4
   1328c:	bl	12598 <close@plt+0x10bc>
   13290:	cmp	r0, #0
   13294:	str	r0, [r4]
   13298:	ldrne	r2, [r4, #12]
   1329c:	bne	13230 <close@plt+0x1d54>
   132a0:	ldr	r5, [pc, #72]	; 132f0 <close@plt+0x1e14>
   132a4:	ldr	r3, [pc, #72]	; 132f4 <close@plt+0x1e18>
   132a8:	str	r7, [sp, #4]
   132ac:	ldr	r2, [pc, #68]	; 132f8 <close@plt+0x1e1c>
   132b0:	ldr	r3, [r3]
   132b4:	ldr	r0, [r5]
   132b8:	mov	r1, #1
   132bc:	str	r6, [sp]
   132c0:	bl	11410 <__fprintf_chk@plt>
   132c4:	ldr	r0, [r5]
   132c8:	ldr	r3, [r4, #4]
   132cc:	ldr	r2, [pc, #40]	; 132fc <close@plt+0x1e20>
   132d0:	mov	r1, #1
   132d4:	bl	11410 <__fprintf_chk@plt>
   132d8:	mvn	r0, #0
   132dc:	b	13258 <close@plt+0x1d7c>
   132e0:	strdeq	r2, [r1], -r8
   132e4:	andeq	r1, r1, r0, lsr #3
   132e8:	andeq	r5, r1, r0, lsl #30
   132ec:	andeq	r5, r1, r4, lsl #30
   132f0:	strdeq	r8, [r2], -r0
   132f4:	andeq	r8, r2, ip, ror #14
   132f8:	strdeq	r5, [r1], -r0
   132fc:	andeq	r5, r1, r8, lsl #30
   13300:	push	{r4, r5, r6, lr}
   13304:	mov	r4, r0
   13308:	ldrh	r2, [r0]
   1330c:	ldr	r3, [pc, #136]	; 1339c <close@plt+0x1ec0>
   13310:	mov	r5, r1
   13314:	cmp	r2, r3
   13318:	beq	1335c <close@plt+0x1e80>
   1331c:	ldrh	r1, [r1]
   13320:	cmp	r1, r3
   13324:	beq	1335c <close@plt+0x1e80>
   13328:	cmp	r2, r1
   1332c:	beq	13338 <close@plt+0x1e5c>
   13330:	mov	r0, #0
   13334:	pop	{r4, r5, r6, pc}
   13338:	ldrh	r3, [r0, #2]
   1333c:	ldrh	r2, [r5, #2]
   13340:	cmp	r2, r3
   13344:	bne	13330 <close@plt+0x1e54>
   13348:	ldr	r1, [r5, #4]
   1334c:	ldr	r0, [r0, #4]
   13350:	bl	1120c <memcmp@plt>
   13354:	cmp	r0, #0
   13358:	bne	13330 <close@plt+0x1e54>
   1335c:	ldrh	r2, [r4, #8]
   13360:	cmp	r2, #0
   13364:	beq	13394 <close@plt+0x1eb8>
   13368:	ldrh	r3, [r5, #8]
   1336c:	cmp	r3, #0
   13370:	beq	13394 <close@plt+0x1eb8>
   13374:	cmp	r2, r3
   13378:	bne	13330 <close@plt+0x1e54>
   1337c:	ldr	r1, [r5, #12]
   13380:	ldr	r0, [r4, #12]
   13384:	bl	1120c <memcmp@plt>
   13388:	clz	r0, r0
   1338c:	lsr	r0, r0, #5
   13390:	pop	{r4, r5, r6, pc}
   13394:	mov	r0, #1
   13398:	pop	{r4, r5, r6, pc}
   1339c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   133a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133a4:	sub	sp, sp, #20
   133a8:	subs	r7, r0, #0
   133ac:	str	r1, [sp, #8]
   133b0:	str	r2, [sp, #12]
   133b4:	moveq	r8, r7
   133b8:	beq	134ac <close@plt+0x1fd0>
   133bc:	ldr	r3, [pc, #320]	; 13504 <close@plt+0x2028>
   133c0:	ldr	r2, [r3, #1032]	; 0x408
   133c4:	cmp	r2, #0
   133c8:	str	r2, [sp, #4]
   133cc:	ldrne	r6, [sp, #4]
   133d0:	bne	133dc <close@plt+0x1f00>
   133d4:	b	134c0 <close@plt+0x1fe4>
   133d8:	mov	r6, r8
   133dc:	ldr	r8, [r6]
   133e0:	cmp	r8, #0
   133e4:	bne	133d8 <close@plt+0x1efc>
   133e8:	mov	sl, r8
   133ec:	str	r8, [sp]
   133f0:	str	r7, [r6]
   133f4:	ldr	r9, [r7]
   133f8:	ldr	r5, [r7, #4]
   133fc:	ldr	r4, [sp, #4]
   13400:	b	13410 <close@plt+0x1f34>
   13404:	cmp	r4, r6
   13408:	beq	134b8 <close@plt+0x1fdc>
   1340c:	ldr	r4, [r4]
   13410:	ldr	fp, [r4, #4]
   13414:	mov	r1, r5
   13418:	mov	r0, fp
   1341c:	bl	13300 <close@plt+0x1e24>
   13420:	cmp	r0, #0
   13424:	beq	13404 <close@plt+0x1f28>
   13428:	ldrh	r3, [fp, #16]
   1342c:	ldrh	r2, [r5, #16]
   13430:	cmp	r2, r3
   13434:	bne	13404 <close@plt+0x1f28>
   13438:	ldr	r1, [r5, #20]
   1343c:	ldr	r0, [fp, #20]
   13440:	bl	1120c <memcmp@plt>
   13444:	cmp	r0, #0
   13448:	bne	13404 <close@plt+0x1f28>
   1344c:	ldm	r7, {r0, r1}
   13450:	ldr	r2, [r4]
   13454:	ldr	r3, [sp]
   13458:	stm	r4, {r0, r1}
   1345c:	add	r3, r3, #1
   13460:	stm	r7, {r2, fp}
   13464:	sub	sl, sl, #1
   13468:	str	r2, [r4]
   1346c:	ldr	r0, [r7, #4]
   13470:	str	r3, [sp]
   13474:	bl	11344 <XauDisposeAuth@plt>
   13478:	mov	r0, r7
   1347c:	bl	111c4 <free@plt>
   13480:	str	r9, [r6]
   13484:	cmp	r9, #0
   13488:	add	r8, r8, #1
   1348c:	add	sl, sl, #1
   13490:	mov	r7, r9
   13494:	bne	133f4 <close@plt+0x1f18>
   13498:	ldr	r3, [sp, #8]
   1349c:	ldr	r2, [sp]
   134a0:	str	sl, [r3]
   134a4:	ldr	r3, [sp, #12]
   134a8:	str	r2, [r3]
   134ac:	mov	r0, r8
   134b0:	add	sp, sp, #20
   134b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b8:	mov	r6, r7
   134bc:	b	13484 <close@plt+0x1fa8>
   134c0:	str	r7, [r3, #1032]	; 0x408
   134c4:	ldr	r3, [r7]
   134c8:	mov	r8, #1
   134cc:	cmp	r3, #0
   134d0:	beq	134e4 <close@plt+0x2008>
   134d4:	ldr	r3, [r3]
   134d8:	add	r8, r8, #1
   134dc:	cmp	r3, #0
   134e0:	bne	134d4 <close@plt+0x1ff8>
   134e4:	ldr	r2, [sp, #8]
   134e8:	mov	r3, #0
   134ec:	mov	r0, r8
   134f0:	str	r8, [r2]
   134f4:	ldr	r2, [sp, #12]
   134f8:	str	r3, [r2]
   134fc:	add	sp, sp, #20
   13500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13504:	andeq	r8, r2, r8, lsr r3
   13508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1350c:	cmp	r2, #4
   13510:	ldr	r7, [pc, #932]	; 138bc <close@plt+0x23e0>
   13514:	sub	sp, sp, #44	; 0x2c
   13518:	mov	r8, r0
   1351c:	ldr	r2, [r7]
   13520:	mov	r9, r1
   13524:	mov	r6, r3
   13528:	str	r2, [sp, #36]	; 0x24
   1352c:	bne	136b8 <close@plt+0x21dc>
   13530:	ldr	sl, [r3, #4]
   13534:	cmp	sl, #0
   13538:	beq	136b8 <close@plt+0x21dc>
   1353c:	ldr	r4, [r3, #8]
   13540:	cmp	r4, #0
   13544:	beq	136b8 <close@plt+0x21dc>
   13548:	ldr	fp, [r3, #12]
   1354c:	cmp	fp, #0
   13550:	beq	136b8 <close@plt+0x21dc>
   13554:	mov	r0, fp
   13558:	bl	11350 <strlen@plt>
   1355c:	ldrb	r3, [fp]
   13560:	cmp	r3, #34	; 0x22
   13564:	mov	r5, r0
   13568:	str	r0, [sp, #12]
   1356c:	beq	1370c <close@plt+0x2230>
   13570:	ldr	r1, [pc, #840]	; 138c0 <close@plt+0x23e4>
   13574:	mov	r0, r4
   13578:	bl	11188 <strcmp@plt>
   1357c:	cmp	r0, #0
   13580:	beq	13598 <close@plt+0x20bc>
   13584:	ldr	r1, [pc, #824]	; 138c4 <close@plt+0x23e8>
   13588:	mov	r0, r4
   1358c:	bl	11188 <strcmp@plt>
   13590:	cmp	r0, #0
   13594:	bne	13864 <close@plt+0x2388>
   13598:	add	r0, r5, #1
   1359c:	bl	112c0 <malloc@plt>
   135a0:	mov	r1, fp
   135a4:	str	r0, [sp, #28]
   135a8:	bl	112a8 <strcpy@plt>
   135ac:	add	r1, sp, #32
   135b0:	mov	r0, sl
   135b4:	bl	12bf4 <close@plt+0x1718>
   135b8:	cmp	r0, #0
   135bc:	beq	13738 <close@plt+0x225c>
   135c0:	ldrb	r3, [r4]
   135c4:	cmp	r3, #46	; 0x2e
   135c8:	bne	135dc <close@plt+0x2100>
   135cc:	ldrb	r2, [r4, #1]
   135d0:	ldr	r3, [pc, #752]	; 138c8 <close@plt+0x23ec>
   135d4:	cmp	r2, #0
   135d8:	moveq	r4, r3
   135dc:	ldr	sl, [sp, #32]
   135e0:	cmp	sl, #0
   135e4:	bne	13620 <close@plt+0x2144>
   135e8:	b	13788 <close@plt+0x22ac>
   135ec:	strh	r5, [r6, #24]
   135f0:	mov	r0, r5
   135f4:	bl	112c0 <malloc@plt>
   135f8:	cmp	r0, #0
   135fc:	str	r0, [r6, #28]
   13600:	beq	13800 <close@plt+0x2324>
   13604:	ldr	r6, [sp, #28]
   13608:	mov	r2, r5
   1360c:	mov	r1, r6
   13610:	bl	111e8 <memcpy@plt>
   13614:	ldr	sl, [sl]
   13618:	cmp	sl, #0
   1361c:	beq	1378c <close@plt+0x22b0>
   13620:	mov	r0, r4
   13624:	bl	11350 <strlen@plt>
   13628:	ldr	r6, [sl, #4]
   1362c:	uxth	r1, r0
   13630:	strh	r0, [r6, #16]
   13634:	mov	r0, r4
   13638:	bl	11d68 <close@plt+0x88c>
   1363c:	cmp	r0, #0
   13640:	str	r0, [r6, #20]
   13644:	bne	135ec <close@plt+0x2110>
   13648:	ldr	r4, [pc, #636]	; 138cc <close@plt+0x23f0>
   1364c:	ldr	r3, [pc, #636]	; 138d0 <close@plt+0x23f4>
   13650:	str	r9, [sp, #4]
   13654:	ldr	r2, [pc, #632]	; 138d4 <close@plt+0x23f8>
   13658:	ldr	r3, [r3]
   1365c:	ldr	r0, [r4]
   13660:	mov	r1, #1
   13664:	str	r8, [sp]
   13668:	bl	11410 <__fprintf_chk@plt>
   1366c:	ldr	r0, [r4]
   13670:	ldrh	r3, [r6, #16]
   13674:	ldr	r2, [pc, #604]	; 138d8 <close@plt+0x23fc>
   13678:	mov	r1, #1
   1367c:	bl	11410 <__fprintf_chk@plt>
   13680:	ldr	r4, [sp, #32]
   13684:	cmp	r4, #0
   13688:	beq	136a8 <close@plt+0x21cc>
   1368c:	ldr	r0, [r4, #4]
   13690:	ldr	r5, [r4]
   13694:	bl	11344 <XauDisposeAuth@plt>
   13698:	mov	r0, r4
   1369c:	bl	111c4 <free@plt>
   136a0:	subs	r4, r5, #0
   136a4:	bne	1368c <close@plt+0x21b0>
   136a8:	ldr	r0, [sp, #28]
   136ac:	bl	111c4 <free@plt>
   136b0:	mov	r0, #1
   136b4:	b	136f4 <close@plt+0x2218>
   136b8:	ldr	r4, [pc, #524]	; 138cc <close@plt+0x23f0>
   136bc:	ldr	r3, [pc, #524]	; 138d0 <close@plt+0x23f4>
   136c0:	str	r9, [sp, #4]
   136c4:	ldr	r2, [pc, #520]	; 138d4 <close@plt+0x23f8>
   136c8:	ldr	r3, [r3]
   136cc:	ldr	r0, [r4]
   136d0:	mov	r1, #1
   136d4:	str	r8, [sp]
   136d8:	bl	11410 <__fprintf_chk@plt>
   136dc:	ldr	r0, [r4]
   136e0:	ldr	r3, [r6]
   136e4:	ldr	r2, [pc, #496]	; 138dc <close@plt+0x2400>
   136e8:	mov	r1, #1
   136ec:	bl	11410 <__fprintf_chk@plt>
   136f0:	mov	r0, #1
   136f4:	ldr	r2, [sp, #36]	; 0x24
   136f8:	ldr	r3, [r7]
   136fc:	cmp	r2, r3
   13700:	bne	138b8 <close@plt+0x23dc>
   13704:	add	sp, sp, #44	; 0x2c
   13708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1370c:	sub	r0, r0, #1
   13710:	ldrb	r3, [fp, r0]
   13714:	cmp	r3, #34	; 0x22
   13718:	bne	13570 <close@plt+0x2094>
   1371c:	bl	112c0 <malloc@plt>
   13720:	sub	r5, r5, #2
   13724:	add	r1, fp, #1
   13728:	mov	r2, r5
   1372c:	str	r0, [sp, #28]
   13730:	bl	113bc <strncpy@plt>
   13734:	b	135ac <close@plt+0x20d0>
   13738:	ldr	r4, [pc, #396]	; 138cc <close@plt+0x23f0>
   1373c:	ldr	r3, [pc, #396]	; 138d0 <close@plt+0x23f4>
   13740:	str	r9, [sp, #4]
   13744:	ldr	r2, [pc, #392]	; 138d4 <close@plt+0x23f8>
   13748:	ldr	r3, [r3]
   1374c:	ldr	r0, [r4]
   13750:	mov	r1, #1
   13754:	str	r8, [sp]
   13758:	bl	11410 <__fprintf_chk@plt>
   1375c:	ldr	r3, [r6]
   13760:	ldr	r0, [r4]
   13764:	ldr	r2, [pc, #372]	; 138e0 <close@plt+0x2404>
   13768:	str	r3, [sp]
   1376c:	mov	r1, #1
   13770:	mov	r3, sl
   13774:	bl	11410 <__fprintf_chk@plt>
   13778:	ldr	r0, [sp, #28]
   1377c:	bl	111c4 <free@plt>
   13780:	mov	r0, #1
   13784:	b	136f4 <close@plt+0x2218>
   13788:	ldr	r6, [sp, #28]
   1378c:	mov	r0, r6
   13790:	bl	111c4 <free@plt>
   13794:	add	r2, sp, #24
   13798:	add	r1, sp, #20
   1379c:	ldr	r0, [sp, #32]
   137a0:	bl	133a0 <close@plt+0x1ec4>
   137a4:	cmp	r0, #0
   137a8:	ble	137c0 <close@plt+0x22e4>
   137ac:	ldr	r3, [pc, #304]	; 138e4 <close@plt+0x2408>
   137b0:	mov	r2, #1
   137b4:	mov	r0, #0
   137b8:	str	r2, [r3, #1036]	; 0x40c
   137bc:	b	136f4 <close@plt+0x2218>
   137c0:	ldr	r4, [pc, #260]	; 138cc <close@plt+0x23f0>
   137c4:	ldr	r3, [pc, #260]	; 138d0 <close@plt+0x23f4>
   137c8:	str	r9, [sp, #4]
   137cc:	ldr	r2, [pc, #256]	; 138d4 <close@plt+0x23f8>
   137d0:	ldr	r3, [r3]
   137d4:	ldr	r0, [r4]
   137d8:	mov	r1, #1
   137dc:	str	r8, [sp]
   137e0:	bl	11410 <__fprintf_chk@plt>
   137e4:	ldr	r3, [r4]
   137e8:	mov	r2, #32
   137ec:	mov	r1, #1
   137f0:	ldr	r0, [pc, #240]	; 138e8 <close@plt+0x240c>
   137f4:	bl	11284 <fwrite@plt>
   137f8:	mov	r0, #1
   137fc:	b	136f4 <close@plt+0x2218>
   13800:	ldr	r4, [pc, #196]	; 138cc <close@plt+0x23f0>
   13804:	ldr	r3, [pc, #196]	; 138d0 <close@plt+0x23f4>
   13808:	str	r9, [sp, #4]
   1380c:	ldr	r2, [pc, #192]	; 138d4 <close@plt+0x23f8>
   13810:	ldr	r3, [r3]
   13814:	ldr	r0, [r4]
   13818:	mov	r1, #1
   1381c:	str	r8, [sp]
   13820:	bl	11410 <__fprintf_chk@plt>
   13824:	ldr	r0, [r4]
   13828:	mov	r3, r5
   1382c:	ldr	r2, [pc, #184]	; 138ec <close@plt+0x2410>
   13830:	mov	r1, #1
   13834:	bl	11410 <__fprintf_chk@plt>
   13838:	ldr	r4, [sp, #32]
   1383c:	cmp	r4, #0
   13840:	beq	136a8 <close@plt+0x21cc>
   13844:	ldr	r0, [r4, #4]
   13848:	ldr	r5, [r4]
   1384c:	bl	11344 <XauDisposeAuth@plt>
   13850:	mov	r0, r4
   13854:	bl	111c4 <free@plt>
   13858:	subs	r4, r5, #0
   1385c:	bne	13844 <close@plt+0x2368>
   13860:	b	136a8 <close@plt+0x21cc>
   13864:	mov	r0, fp
   13868:	add	r1, sp, #28
   1386c:	bl	12768 <close@plt+0x128c>
   13870:	subs	r5, r0, #0
   13874:	bge	135ac <close@plt+0x20d0>
   13878:	ldr	r4, [pc, #76]	; 138cc <close@plt+0x23f0>
   1387c:	ldr	r3, [pc, #76]	; 138d0 <close@plt+0x23f4>
   13880:	str	r9, [sp, #4]
   13884:	ldr	r2, [pc, #72]	; 138d4 <close@plt+0x23f8>
   13888:	ldr	r3, [r3]
   1388c:	ldr	r0, [r4]
   13890:	mov	r1, #1
   13894:	str	r8, [sp]
   13898:	bl	11410 <__fprintf_chk@plt>
   1389c:	ldr	r3, [r4]
   138a0:	mov	r2, #49	; 0x31
   138a4:	mov	r1, #1
   138a8:	ldr	r0, [pc, #64]	; 138f0 <close@plt+0x2414>
   138ac:	bl	11284 <fwrite@plt>
   138b0:	mov	r0, #1
   138b4:	b	136f4 <close@plt+0x2218>
   138b8:	bl	1123c <__stack_chk_fail@plt>
   138bc:	andeq	r7, r2, r8, ror #29
   138c0:	andeq	r5, r1, r4, asr #27
   138c4:	ldrdeq	r5, [r1], -r0
   138c8:	andeq	r5, r1, r0, lsr pc
   138cc:	strdeq	r8, [r2], -r0
   138d0:	andeq	r8, r2, ip, ror #14
   138d4:	strdeq	r5, [r1], -r0
   138d8:	andeq	r5, r1, r0, lsr #31
   138dc:	strdeq	r5, [r1], -r0
   138e0:	andeq	r5, r1, r8, ror pc
   138e4:	andeq	r8, r2, r8, lsr r3
   138e8:	strdeq	r5, [r1], -r8
   138ec:	ldrdeq	r5, [r1], -r0
   138f0:	andeq	r5, r1, r4, asr #30
   138f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f8:	cmp	r2, #1
   138fc:	mov	r7, r2
   13900:	ldr	r2, [pc, #1364]	; 13e5c <close@plt+0x2980>
   13904:	sub	sp, sp, #92	; 0x5c
   13908:	mov	r5, r3
   1390c:	ldr	ip, [r2]
   13910:	mov	r2, #0
   13914:	strd	r0, [sp, #12]
   13918:	str	ip, [sp, #84]	; 0x54
   1391c:	str	r2, [sp, #48]	; 0x30
   13920:	ble	13c28 <close@plt+0x274c>
   13924:	ldr	r3, [r3, #4]
   13928:	cmp	r3, r2
   1392c:	str	r3, [sp, #24]
   13930:	beq	13c28 <close@plt+0x274c>
   13934:	cmp	r7, #2
   13938:	beq	139ec <close@plt+0x2510>
   1393c:	ldr	r3, [r5, #8]
   13940:	cmp	r7, #3
   13944:	str	r3, [sp, #28]
   13948:	str	r2, [sp, #20]
   1394c:	beq	13e50 <close@plt+0x2974>
   13950:	ldr	r9, [pc, #1288]	; 13e60 <close@plt+0x2984>
   13954:	ldr	sl, [pc, #1288]	; 13e64 <close@plt+0x2988>
   13958:	mov	r6, r2
   1395c:	mov	fp, #3
   13960:	b	13990 <close@plt+0x24b4>
   13964:	add	fp, fp, #1
   13968:	cmp	r7, fp
   1396c:	beq	13c8c <close@plt+0x27b0>
   13970:	ldr	r0, [r8, #4]
   13974:	mov	r2, #10
   13978:	bl	11194 <strtol@plt>
   1397c:	orr	r6, r6, #1
   13980:	str	r0, [sp, #52]	; 0x34
   13984:	add	fp, fp, #1
   13988:	cmp	r7, fp
   1398c:	ble	139fc <close@plt+0x2520>
   13990:	ldr	r4, [r5, fp, lsl #2]
   13994:	mov	r1, r9
   13998:	mov	r0, r4
   1399c:	bl	11188 <strcmp@plt>
   139a0:	add	r8, r5, fp, lsl #2
   139a4:	subs	r1, r0, #0
   139a8:	beq	13964 <close@plt+0x2488>
   139ac:	mov	r1, sl
   139b0:	mov	r0, r4
   139b4:	bl	11188 <strcmp@plt>
   139b8:	cmp	r0, #0
   139bc:	streq	r0, [sp, #56]	; 0x38
   139c0:	orreq	r6, r6, #2
   139c4:	beq	13984 <close@plt+0x24a8>
   139c8:	ldr	r1, [pc, #1176]	; 13e68 <close@plt+0x298c>
   139cc:	mov	r0, r4
   139d0:	bl	11188 <strcmp@plt>
   139d4:	cmp	r0, #0
   139d8:	bne	13b44 <close@plt+0x2668>
   139dc:	mov	r2, #1
   139e0:	orr	r6, r6, #2
   139e4:	str	r2, [sp, #56]	; 0x38
   139e8:	b	13984 <close@plt+0x24a8>
   139ec:	ldr	r3, [pc, #1144]	; 13e6c <close@plt+0x2990>
   139f0:	mov	r6, r2
   139f4:	str	r2, [sp, #20]
   139f8:	str	r3, [sp, #28]
   139fc:	ldr	r0, [sp, #24]
   13a00:	bl	112f0 <XOpenDisplay@plt>
   13a04:	subs	r5, r0, #0
   13a08:	beq	13d20 <close@plt+0x2844>
   13a0c:	add	r2, sp, #40	; 0x28
   13a10:	add	r1, sp, #36	; 0x24
   13a14:	bl	11434 <XSecurityQueryExtension@plt>
   13a18:	cmp	r0, #0
   13a1c:	beq	13cd8 <close@plt+0x27fc>
   13a20:	bl	11404 <XSecurityAllocXauth@plt>
   13a24:	ldr	r2, [sp, #28]
   13a28:	ldrb	r3, [r2]
   13a2c:	cmp	r3, #46	; 0x2e
   13a30:	mov	r4, r0
   13a34:	bne	13dd4 <close@plt+0x28f8>
   13a38:	ldrb	r3, [r2, #1]
   13a3c:	cmp	r3, #0
   13a40:	bne	13dd4 <close@plt+0x28f8>
   13a44:	mov	r1, #18
   13a48:	ldr	r0, [pc, #1056]	; 13e70 <close@plt+0x2994>
   13a4c:	bl	11d68 <close@plt+0x88c>
   13a50:	str	r0, [r4, #20]
   13a54:	bl	11350 <strlen@plt>
   13a58:	ldr	r7, [pc, #1044]	; 13e74 <close@plt+0x2998>
   13a5c:	ldr	r3, [sp, #48]	; 0x30
   13a60:	ldr	r2, [sp, #20]
   13a64:	mov	r8, #0
   13a68:	strh	r2, [r4, #24]
   13a6c:	str	r3, [r4, #28]
   13a70:	str	r8, [r7, #1028]	; 0x404
   13a74:	strh	r0, [r4, #16]
   13a78:	ldr	r0, [pc, #1016]	; 13e78 <close@plt+0x299c>
   13a7c:	bl	11368 <XSetErrorHandler@plt>
   13a80:	add	r3, sp, #44	; 0x2c
   13a84:	mov	r2, r6
   13a88:	str	r3, [sp]
   13a8c:	mov	r1, r4
   13a90:	add	r3, sp, #52	; 0x34
   13a94:	mov	r0, r5
   13a98:	bl	11290 <XSecurityGenerateAuthorization@plt>
   13a9c:	mov	r1, r8
   13aa0:	mov	r6, r0
   13aa4:	mov	r0, r5
   13aa8:	bl	113c8 <XSync@plt>
   13aac:	cmp	r6, r8
   13ab0:	beq	13d8c <close@plt+0x28b0>
   13ab4:	ldr	r3, [r7, #1028]	; 0x404
   13ab8:	cmp	r3, r8
   13abc:	bne	13d8c <close@plt+0x28b0>
   13ac0:	ldr	r3, [pc, #948]	; 13e7c <close@plt+0x29a0>
   13ac4:	ldr	r3, [r3]
   13ac8:	cmp	r3, #0
   13acc:	bne	13df4 <close@plt+0x2918>
   13ad0:	ldr	r1, [r6, #28]
   13ad4:	ldrh	r0, [r6, #24]
   13ad8:	bl	12268 <close@plt+0xd8c>
   13adc:	ldr	r2, [r4, #20]
   13ae0:	ldr	r3, [sp, #24]
   13ae4:	ldr	ip, [pc, #916]	; 13e80 <close@plt+0x29a4>
   13ae8:	str	r3, [sp, #72]	; 0x48
   13aec:	str	r2, [sp, #76]	; 0x4c
   13af0:	add	r3, sp, #68	; 0x44
   13af4:	mov	r2, #4
   13af8:	str	ip, [sp, #68]	; 0x44
   13afc:	mov	r7, r0
   13b00:	ldrd	r0, [sp, #12]
   13b04:	str	r7, [sp, #80]	; 0x50
   13b08:	bl	13508 <close@plt+0x202c>
   13b0c:	mov	r8, r0
   13b10:	ldr	r0, [sp, #48]	; 0x30
   13b14:	cmp	r0, #0
   13b18:	beq	13b20 <close@plt+0x2644>
   13b1c:	bl	111c4 <free@plt>
   13b20:	mov	r0, r4
   13b24:	bl	11260 <XSecurityFreeXauth@plt>
   13b28:	mov	r0, r6
   13b2c:	bl	11260 <XSecurityFreeXauth@plt>
   13b30:	mov	r0, r7
   13b34:	bl	111c4 <free@plt>
   13b38:	mov	r0, r5
   13b3c:	bl	11494 <XCloseDisplay@plt>
   13b40:	b	13c6c <close@plt+0x2790>
   13b44:	ldr	r1, [pc, #824]	; 13e84 <close@plt+0x29a8>
   13b48:	mov	r0, r4
   13b4c:	bl	11188 <strcmp@plt>
   13b50:	subs	r1, r0, #0
   13b54:	bne	13b7c <close@plt+0x26a0>
   13b58:	add	fp, fp, #1
   13b5c:	cmp	r7, fp
   13b60:	beq	13c8c <close@plt+0x27b0>
   13b64:	ldr	r0, [r8, #4]
   13b68:	mov	r2, #10
   13b6c:	bl	11194 <strtol@plt>
   13b70:	orr	r6, r6, #4
   13b74:	str	r0, [sp, #60]	; 0x3c
   13b78:	b	13984 <close@plt+0x24a8>
   13b7c:	mov	r0, r4
   13b80:	ldr	r1, [pc, #768]	; 13e88 <close@plt+0x29ac>
   13b84:	bl	11188 <strcmp@plt>
   13b88:	cmp	r0, #0
   13b8c:	bne	13e08 <close@plt+0x292c>
   13b90:	add	fp, fp, #1
   13b94:	cmp	r7, fp
   13b98:	beq	13c8c <close@plt+0x27b0>
   13b9c:	ldr	r4, [r8, #4]
   13ba0:	mov	r0, r4
   13ba4:	bl	11350 <strlen@plt>
   13ba8:	ldrb	r2, [r4]
   13bac:	cmp	r2, #34	; 0x22
   13bb0:	mov	r8, r0
   13bb4:	bne	13bc8 <close@plt+0x26ec>
   13bb8:	add	r2, r4, r0
   13bbc:	ldrb	r2, [r2, #-1]
   13bc0:	cmp	r2, #34	; 0x22
   13bc4:	beq	13d68 <close@plt+0x288c>
   13bc8:	mov	r0, r4
   13bcc:	add	r1, sp, #48	; 0x30
   13bd0:	bl	12768 <close@plt+0x128c>
   13bd4:	subs	r3, r0, #0
   13bd8:	str	r3, [sp, #20]
   13bdc:	bge	13984 <close@plt+0x24a8>
   13be0:	ldr	r2, [sp, #16]
   13be4:	ldr	r4, [pc, #672]	; 13e8c <close@plt+0x29b0>
   13be8:	ldr	r3, [pc, #672]	; 13e90 <close@plt+0x29b4>
   13bec:	str	r2, [sp, #4]
   13bf0:	ldr	r2, [sp, #12]
   13bf4:	ldr	r3, [r3]
   13bf8:	ldr	r0, [r4]
   13bfc:	mov	r1, #1
   13c00:	str	r2, [sp]
   13c04:	ldr	r2, [pc, #648]	; 13e94 <close@plt+0x29b8>
   13c08:	bl	11410 <__fprintf_chk@plt>
   13c0c:	ldr	r3, [r4]
   13c10:	mov	r2, #50	; 0x32
   13c14:	mov	r1, #1
   13c18:	ldr	r0, [pc, #632]	; 13e98 <close@plt+0x29bc>
   13c1c:	bl	11284 <fwrite@plt>
   13c20:	mov	r8, #1
   13c24:	b	13c6c <close@plt+0x2790>
   13c28:	ldr	r2, [sp, #16]
   13c2c:	ldr	r4, [pc, #600]	; 13e8c <close@plt+0x29b0>
   13c30:	ldr	r3, [pc, #600]	; 13e90 <close@plt+0x29b4>
   13c34:	str	r2, [sp, #4]
   13c38:	ldr	r2, [sp, #12]
   13c3c:	ldr	r3, [r3]
   13c40:	ldr	r0, [r4]
   13c44:	mov	r1, #1
   13c48:	str	r2, [sp]
   13c4c:	ldr	r2, [pc, #576]	; 13e94 <close@plt+0x29b8>
   13c50:	bl	11410 <__fprintf_chk@plt>
   13c54:	ldr	r0, [r4]
   13c58:	ldr	r3, [r5]
   13c5c:	ldr	r2, [pc, #568]	; 13e9c <close@plt+0x29c0>
   13c60:	mov	r1, #1
   13c64:	bl	11410 <__fprintf_chk@plt>
   13c68:	mov	r8, #1
   13c6c:	ldr	r3, [pc, #488]	; 13e5c <close@plt+0x2980>
   13c70:	ldr	r2, [sp, #84]	; 0x54
   13c74:	mov	r0, r8
   13c78:	ldr	r3, [r3]
   13c7c:	cmp	r2, r3
   13c80:	bne	13e58 <close@plt+0x297c>
   13c84:	add	sp, sp, #92	; 0x5c
   13c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c8c:	ldr	r2, [sp, #16]
   13c90:	ldr	r4, [pc, #500]	; 13e8c <close@plt+0x29b0>
   13c94:	ldr	r3, [pc, #500]	; 13e90 <close@plt+0x29b4>
   13c98:	str	r2, [sp, #4]
   13c9c:	ldr	r2, [sp, #12]
   13ca0:	sub	r7, r7, #-1073741823	; 0xc0000001
   13ca4:	ldr	r3, [r3]
   13ca8:	ldr	r0, [r4]
   13cac:	mov	r1, #1
   13cb0:	str	r2, [sp]
   13cb4:	ldr	r2, [pc, #472]	; 13e94 <close@plt+0x29b8>
   13cb8:	bl	11410 <__fprintf_chk@plt>
   13cbc:	ldr	r0, [r4]
   13cc0:	ldr	r3, [r5, r7, lsl #2]
   13cc4:	ldr	r2, [pc, #464]	; 13e9c <close@plt+0x29c0>
   13cc8:	mov	r1, #1
   13ccc:	bl	11410 <__fprintf_chk@plt>
   13cd0:	mov	r8, #1
   13cd4:	b	13c6c <close@plt+0x2790>
   13cd8:	ldr	r2, [sp, #16]
   13cdc:	ldr	r4, [pc, #424]	; 13e8c <close@plt+0x29b0>
   13ce0:	ldr	r3, [pc, #424]	; 13e90 <close@plt+0x29b4>
   13ce4:	str	r2, [sp, #4]
   13ce8:	ldr	r2, [sp, #12]
   13cec:	ldr	r3, [r3]
   13cf0:	ldr	r0, [r4]
   13cf4:	mov	r1, #1
   13cf8:	str	r2, [sp]
   13cfc:	ldr	r2, [pc, #400]	; 13e94 <close@plt+0x29b8>
   13d00:	bl	11410 <__fprintf_chk@plt>
   13d04:	ldr	r3, [sp, #24]
   13d08:	ldr	r0, [r4]
   13d0c:	ldr	r2, [pc, #396]	; 13ea0 <close@plt+0x29c4>
   13d10:	mov	r1, #1
   13d14:	bl	11410 <__fprintf_chk@plt>
   13d18:	mov	r8, #1
   13d1c:	b	13c6c <close@plt+0x2790>
   13d20:	ldr	r2, [sp, #16]
   13d24:	ldr	r4, [pc, #352]	; 13e8c <close@plt+0x29b0>
   13d28:	ldr	r3, [pc, #352]	; 13e90 <close@plt+0x29b4>
   13d2c:	str	r2, [sp, #4]
   13d30:	ldr	r2, [sp, #12]
   13d34:	ldr	r3, [r3]
   13d38:	ldr	r0, [r4]
   13d3c:	mov	r1, #1
   13d40:	str	r2, [sp]
   13d44:	ldr	r2, [pc, #328]	; 13e94 <close@plt+0x29b8>
   13d48:	bl	11410 <__fprintf_chk@plt>
   13d4c:	ldr	r3, [sp, #24]
   13d50:	ldr	r0, [r4]
   13d54:	ldr	r2, [pc, #328]	; 13ea4 <close@plt+0x29c8>
   13d58:	mov	r1, #1
   13d5c:	bl	11410 <__fprintf_chk@plt>
   13d60:	mov	r8, #1
   13d64:	b	13c6c <close@plt+0x2790>
   13d68:	sub	r0, r0, #1
   13d6c:	bl	112c0 <malloc@plt>
   13d70:	sub	r3, r8, #2
   13d74:	add	r1, r4, #1
   13d78:	mov	r2, r3
   13d7c:	str	r3, [sp, #20]
   13d80:	str	r0, [sp, #48]	; 0x30
   13d84:	bl	113bc <strncpy@plt>
   13d88:	b	13984 <close@plt+0x24a8>
   13d8c:	ldr	r2, [sp, #16]
   13d90:	ldr	r4, [pc, #244]	; 13e8c <close@plt+0x29b0>
   13d94:	ldr	r3, [pc, #244]	; 13e90 <close@plt+0x29b4>
   13d98:	str	r2, [sp, #4]
   13d9c:	ldr	r2, [sp, #12]
   13da0:	ldr	r3, [r3]
   13da4:	ldr	r0, [r4]
   13da8:	mov	r1, #1
   13dac:	str	r2, [sp]
   13db0:	ldr	r2, [pc, #220]	; 13e94 <close@plt+0x29b8>
   13db4:	bl	11410 <__fprintf_chk@plt>
   13db8:	ldr	r3, [r4]
   13dbc:	mov	r2, #32
   13dc0:	mov	r1, #1
   13dc4:	ldr	r0, [pc, #220]	; 13ea8 <close@plt+0x29cc>
   13dc8:	bl	11284 <fwrite@plt>
   13dcc:	mov	r8, #1
   13dd0:	b	13c6c <close@plt+0x2790>
   13dd4:	ldr	r7, [sp, #28]
   13dd8:	mov	r0, r7
   13ddc:	bl	11350 <strlen@plt>
   13de0:	mov	r1, r0
   13de4:	mov	r0, r7
   13de8:	bl	11d68 <close@plt+0x88c>
   13dec:	str	r0, [r4, #20]
   13df0:	b	13a54 <close@plt+0x2578>
   13df4:	ldr	r2, [sp, #44]	; 0x2c
   13df8:	ldr	r1, [pc, #172]	; 13eac <close@plt+0x29d0>
   13dfc:	mov	r0, #1
   13e00:	bl	113d4 <__printf_chk@plt>
   13e04:	b	13ad0 <close@plt+0x25f4>
   13e08:	ldr	r2, [sp, #16]
   13e0c:	ldr	r4, [pc, #120]	; 13e8c <close@plt+0x29b0>
   13e10:	ldr	r3, [pc, #120]	; 13e90 <close@plt+0x29b4>
   13e14:	str	r2, [sp, #4]
   13e18:	ldr	r2, [sp, #12]
   13e1c:	ldr	r3, [r3]
   13e20:	ldr	r0, [r4]
   13e24:	mov	r1, #1
   13e28:	str	r2, [sp]
   13e2c:	ldr	r2, [pc, #96]	; 13e94 <close@plt+0x29b8>
   13e30:	bl	11410 <__fprintf_chk@plt>
   13e34:	ldr	r3, [r8]
   13e38:	ldr	r0, [r4]
   13e3c:	ldr	r2, [pc, #88]	; 13e9c <close@plt+0x29c0>
   13e40:	mov	r1, #1
   13e44:	bl	11410 <__fprintf_chk@plt>
   13e48:	mov	r8, #1
   13e4c:	b	13c6c <close@plt+0x2790>
   13e50:	mov	r6, r2
   13e54:	b	139fc <close@plt+0x2520>
   13e58:	bl	1123c <__stack_chk_fail@plt>
   13e5c:	andeq	r7, r2, r8, ror #29
   13e60:	andeq	r6, r1, r0, lsr #32
   13e64:	andeq	r6, r1, r8, lsr #32
   13e68:	andeq	r6, r1, r0, lsr r0
   13e6c:	andeq	r6, r1, ip, lsl r0
   13e70:	andeq	r5, r1, r0, lsr pc
   13e74:	andeq	r8, r2, r8, lsr r3
   13e78:	andeq	r2, r1, ip, ror #13
   13e7c:	andeq	r8, r2, ip, ror #5
   13e80:	andeq	r6, r1, r4, lsl r1
   13e84:	andeq	r6, r1, ip, lsr r0
   13e88:	andeq	r6, r1, r4, asr #32
   13e8c:	strdeq	r8, [r2], -r0
   13e90:	andeq	r8, r2, ip, ror #14
   13e94:	strdeq	r5, [r1], -r0
   13e98:	andeq	r6, r1, ip, asr #32
   13e9c:	strdeq	r5, [r1], -r0
   13ea0:	andeq	r6, r1, r0, lsr #1
   13ea4:	andeq	r6, r1, r0, lsl #1
   13ea8:	ldrdeq	r6, [r1], -r4
   13eac:	strdeq	r6, [r1], -r8
   13eb0:	ldr	ip, [pc, #540]	; 140d4 <close@plt+0x2bf8>
   13eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb8:	sub	sp, sp, #52	; 0x34
   13ebc:	ldr	ip, [ip]
   13ec0:	cmp	r2, #1
   13ec4:	mov	r9, r0
   13ec8:	mov	sl, r1
   13ecc:	mov	r7, r3
   13ed0:	str	ip, [sp, #44]	; 0x2c
   13ed4:	ble	14090 <close@plt+0x2bb4>
   13ed8:	ldr	r3, [r3]
   13edc:	ldr	r0, [pc, #500]	; 140d8 <close@plt+0x2bfc>
   13ee0:	mov	r6, #0
   13ee4:	ldrb	ip, [r3]
   13ee8:	sub	r1, r7, #4
   13eec:	ldr	r8, [pc, #488]	; 140dc <close@plt+0x2c00>
   13ef0:	cmp	ip, #110	; 0x6e
   13ef4:	movne	r8, r0
   13ef8:	moveq	r0, #1
   13efc:	movne	r0, r6
   13f00:	add	r2, r1, r2, lsl #2
   13f04:	str	r0, [sp, #16]
   13f08:	str	r2, [sp, #12]
   13f0c:	str	r6, [sp, #20]
   13f10:	mov	r5, r6
   13f14:	mov	r4, r7
   13f18:	b	13f50 <close@plt+0x2a74>
   13f1c:	ldr	r3, [sp, #28]
   13f20:	cmp	r6, #0
   13f24:	strne	r3, [r6]
   13f28:	moveq	r6, r3
   13f2c:	ldr	r3, [sp, #40]	; 0x28
   13f30:	ldrne	r6, [sp, #28]
   13f34:	streq	r6, [sp, #20]
   13f38:	cmp	r3, #0
   13f3c:	beq	13fe4 <close@plt+0x2b08>
   13f40:	ldr	r3, [sp, #12]
   13f44:	cmp	r3, r4
   13f48:	beq	13ff8 <close@plt+0x2b1c>
   13f4c:	ldr	r3, [r7]
   13f50:	ldr	ip, [r4, #4]!
   13f54:	add	r2, sp, #40	; 0x28
   13f58:	str	r3, [sp, #4]
   13f5c:	str	sl, [sp]
   13f60:	mov	r3, r9
   13f64:	mov	r1, r8
   13f68:	add	r0, sp, #36	; 0x24
   13f6c:	str	r5, [sp, #40]	; 0x28
   13f70:	str	ip, [sp, #36]	; 0x24
   13f74:	bl	12598 <close@plt+0x10bc>
   13f78:	subs	fp, r0, #0
   13f7c:	beq	13f40 <close@plt+0x2a64>
   13f80:	add	r2, sp, #48	; 0x30
   13f84:	add	r3, sp, #32
   13f88:	str	r5, [r2, #-20]!	; 0xffffffec
   13f8c:	ldr	r1, [sp, #16]
   13f90:	str	r5, [sp, #32]
   13f94:	bl	1314c <close@plt+0x1c70>
   13f98:	cmp	r0, #0
   13f9c:	bne	13f1c <close@plt+0x2a40>
   13fa0:	ldr	r2, [pc, #312]	; 140e0 <close@plt+0x2c04>
   13fa4:	ldr	r3, [pc, #312]	; 140e4 <close@plt+0x2c08>
   13fa8:	mov	r1, #1
   13fac:	ldr	r0, [r2]
   13fb0:	ldr	r3, [r3]
   13fb4:	ldr	r2, [pc, #300]	; 140e8 <close@plt+0x2c0c>
   13fb8:	stm	sp, {r9, sl}
   13fbc:	bl	11410 <__fprintf_chk@plt>
   13fc0:	ldr	r0, [pc, #280]	; 140e0 <close@plt+0x2c04>
   13fc4:	ldr	r3, [sp, #36]	; 0x24
   13fc8:	ldr	r2, [pc, #284]	; 140ec <close@plt+0x2c10>
   13fcc:	mov	r1, #1
   13fd0:	ldr	r0, [r0]
   13fd4:	bl	11410 <__fprintf_chk@plt>
   13fd8:	ldr	r3, [sp, #40]	; 0x28
   13fdc:	cmp	r3, #0
   13fe0:	bne	13f40 <close@plt+0x2a64>
   13fe4:	mov	r0, fp
   13fe8:	bl	11428 <fclose@plt>
   13fec:	ldr	r3, [sp, #12]
   13ff0:	cmp	r3, r4
   13ff4:	bne	13f4c <close@plt+0x2a70>
   13ff8:	ldr	r3, [sp, #20]
   13ffc:	cmp	r3, #0
   14000:	beq	14088 <close@plt+0x2bac>
   14004:	add	r2, sp, #40	; 0x28
   14008:	add	r1, sp, #36	; 0x24
   1400c:	ldr	r0, [sp, #20]
   14010:	bl	133a0 <close@plt+0x1ec4>
   14014:	ldr	r3, [pc, #212]	; 140f0 <close@plt+0x2c14>
   14018:	ldr	r3, [r3]
   1401c:	cmp	r3, #0
   14020:	mov	r4, r0
   14024:	beq	14054 <close@plt+0x2b78>
   14028:	ldr	r1, [sp, #40]	; 0x28
   1402c:	ldr	r0, [pc, #192]	; 140f4 <close@plt+0x2c18>
   14030:	ldr	r2, [pc, #192]	; 140f8 <close@plt+0x2c1c>
   14034:	cmp	r1, #1
   14038:	movne	r2, r0
   1403c:	ldr	r3, [sp, #36]	; 0x24
   14040:	stm	sp, {r1, r2}
   14044:	mov	r0, #1
   14048:	mov	r2, r4
   1404c:	ldr	r1, [pc, #168]	; 140fc <close@plt+0x2c20>
   14050:	bl	113d4 <__printf_chk@plt>
   14054:	cmp	r4, #0
   14058:	ble	14088 <close@plt+0x2bac>
   1405c:	ldr	r3, [pc, #156]	; 14100 <close@plt+0x2c24>
   14060:	mov	r0, #0
   14064:	mov	r2, #1
   14068:	str	r2, [r3, #1036]	; 0x40c
   1406c:	ldr	r3, [pc, #96]	; 140d4 <close@plt+0x2bf8>
   14070:	ldr	r2, [sp, #44]	; 0x2c
   14074:	ldr	r3, [r3]
   14078:	cmp	r2, r3
   1407c:	bne	140d0 <close@plt+0x2bf4>
   14080:	add	sp, sp, #52	; 0x34
   14084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14088:	mov	r0, #0
   1408c:	b	1406c <close@plt+0x2b90>
   14090:	ldr	r4, [pc, #72]	; 140e0 <close@plt+0x2c04>
   14094:	ldr	r3, [pc, #72]	; 140e4 <close@plt+0x2c08>
   14098:	str	r1, [sp, #4]
   1409c:	ldr	r2, [pc, #68]	; 140e8 <close@plt+0x2c0c>
   140a0:	ldr	r3, [r3]
   140a4:	ldr	r0, [r4]
   140a8:	mov	r1, #1
   140ac:	str	r9, [sp]
   140b0:	bl	11410 <__fprintf_chk@plt>
   140b4:	ldr	r0, [r4]
   140b8:	ldr	r3, [r7]
   140bc:	ldr	r2, [pc, #64]	; 14104 <close@plt+0x2c28>
   140c0:	mov	r1, #1
   140c4:	bl	11410 <__fprintf_chk@plt>
   140c8:	mov	r0, #1
   140cc:	b	1406c <close@plt+0x2b90>
   140d0:	bl	1123c <__stack_chk_fail@plt>
   140d4:	andeq	r7, r2, r8, ror #29
   140d8:	andeq	r6, r1, r8, lsl r1
   140dc:	andeq	r6, r1, r8, ror #3
   140e0:	strdeq	r8, [r2], -r0
   140e4:	andeq	r8, r2, ip, ror #14
   140e8:	strdeq	r5, [r1], -r0
   140ec:	andeq	r6, r1, ip, lsl r1
   140f0:	andeq	r8, r2, ip, ror #5
   140f4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   140f8:			; <UNDEFINED> instruction: 0x000164bc
   140fc:	andeq	r6, r1, r8, asr #2
   14100:	andeq	r8, r2, r8, lsr r3
   14104:	strdeq	r5, [r1], -r0
   14108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1410c:	sub	sp, sp, #44	; 0x2c
   14110:	mov	ip, r3
   14114:	str	r3, [sp, #24]
   14118:	ldr	r3, [pc, #924]	; 144bc <close@plt+0x2fe0>
   1411c:	cmp	ip, r2
   14120:	str	r2, [sp, #12]
   14124:	ldr	r3, [r3]
   14128:	ldr	r9, [sp, #84]	; 0x54
   1412c:	str	r3, [sp, #36]	; 0x24
   14130:	ldr	r3, [sp, #80]	; 0x50
   14134:	ldr	sl, [sp, #88]	; 0x58
   14138:	str	r3, [sp, #20]
   1413c:	ble	144ac <close@plt+0x2fd0>
   14140:	mov	r7, r0
   14144:	mov	r8, r1
   14148:	mov	r3, #0
   1414c:	str	r3, [sp, #28]
   14150:	ldr	r3, [sp, #20]
   14154:	ldr	r2, [sp, #12]
   14158:	add	r1, sp, #32
   1415c:	ldr	r4, [r3, r2, lsl #2]
   14160:	mov	r0, r4
   14164:	bl	12bf4 <close@plt+0x1718>
   14168:	cmp	r0, #0
   1416c:	beq	143dc <close@plt+0x2f00>
   14170:	ldr	r3, [pc, #840]	; 144c0 <close@plt+0x2fe4>
   14174:	ldr	r3, [r3, #1032]	; 0x408
   14178:	cmp	r3, #0
   1417c:	beq	14470 <close@plt+0x2f94>
   14180:	mov	r6, #0
   14184:	mov	r1, #1
   14188:	mov	r0, #32
   1418c:	ldr	fp, [r3]
   14190:	ldr	r4, [r3, #4]
   14194:	bl	1117c <calloc@plt>
   14198:	subs	r5, r0, #0
   1419c:	beq	141d8 <close@plt+0x2cfc>
   141a0:	ldrh	r3, [r4]
   141a4:	strh	r3, [r5]
   141a8:	ldrh	r3, [r4, #2]
   141ac:	cmp	r3, #0
   141b0:	bne	1427c <close@plt+0x2da0>
   141b4:	ldrh	r3, [r4, #8]
   141b8:	cmp	r3, #0
   141bc:	bne	142bc <close@plt+0x2de0>
   141c0:	ldrh	r3, [r4, #16]
   141c4:	cmp	r3, #0
   141c8:	bne	14304 <close@plt+0x2e28>
   141cc:	ldrh	r3, [r4, #24]
   141d0:	cmp	r3, #0
   141d4:	bne	14244 <close@plt+0x2d68>
   141d8:	ldr	r4, [sp, #32]
   141dc:	cmp	r4, #0
   141e0:	beq	14220 <close@plt+0x2d44>
   141e4:	mov	r1, r5
   141e8:	ldr	r0, [r4, #4]
   141ec:	bl	13300 <close@plt+0x1e24>
   141f0:	cmp	r0, #0
   141f4:	beq	14214 <close@plt+0x2d38>
   141f8:	mov	r3, sl
   141fc:	mov	r2, r5
   14200:	mov	r1, r8
   14204:	mov	r0, r7
   14208:	blx	r9
   1420c:	subs	r6, r0, #0
   14210:	blt	1433c <close@plt+0x2e60>
   14214:	ldr	r4, [r4]
   14218:	cmp	r4, #0
   1421c:	bne	141e4 <close@plt+0x2d08>
   14220:	mov	r0, r5
   14224:	bl	11344 <XauDisposeAuth@plt>
   14228:	cmp	fp, #0
   1422c:	mov	r3, fp
   14230:	bne	14184 <close@plt+0x2ca8>
   14234:	ldr	r5, [sp, #32]
   14238:	cmp	r5, #0
   1423c:	bne	14350 <close@plt+0x2e74>
   14240:	b	143a4 <close@plt+0x2ec8>
   14244:	mov	r0, r3
   14248:	str	r3, [sp, #16]
   1424c:	bl	112c0 <malloc@plt>
   14250:	ldr	r3, [sp, #16]
   14254:	cmp	r0, #0
   14258:	str	r0, [r5, #28]
   1425c:	beq	14454 <close@plt+0x2f78>
   14260:	mov	r2, r3
   14264:	ldr	r1, [r4, #28]
   14268:	str	r3, [sp, #16]
   1426c:	bl	111e8 <memcpy@plt>
   14270:	ldr	r3, [sp, #16]
   14274:	strh	r3, [r5, #24]
   14278:	b	141d8 <close@plt+0x2cfc>
   1427c:	mov	r0, r3
   14280:	str	r3, [sp, #16]
   14284:	bl	112c0 <malloc@plt>
   14288:	ldr	r3, [sp, #16]
   1428c:	cmp	r0, #0
   14290:	str	r0, [r5, #4]
   14294:	beq	14484 <close@plt+0x2fa8>
   14298:	mov	r2, r3
   1429c:	ldr	r1, [r4, #4]
   142a0:	str	r3, [sp, #16]
   142a4:	bl	111e8 <memcpy@plt>
   142a8:	ldr	r3, [sp, #16]
   142ac:	strh	r3, [r5, #2]
   142b0:	ldrh	r3, [r4, #8]
   142b4:	cmp	r3, #0
   142b8:	beq	141c0 <close@plt+0x2ce4>
   142bc:	mov	r0, r3
   142c0:	str	r3, [sp, #16]
   142c4:	bl	112c0 <malloc@plt>
   142c8:	ldr	r3, [sp, #16]
   142cc:	cmp	r0, #0
   142d0:	str	r0, [r5, #12]
   142d4:	streq	r0, [sp, #16]
   142d8:	ldreq	r0, [r5, #4]
   142dc:	beq	1443c <close@plt+0x2f60>
   142e0:	mov	r2, r3
   142e4:	ldr	r1, [r4, #12]
   142e8:	str	r3, [sp, #16]
   142ec:	bl	111e8 <memcpy@plt>
   142f0:	ldr	r3, [sp, #16]
   142f4:	strh	r3, [r5, #8]
   142f8:	ldrh	r3, [r4, #16]
   142fc:	cmp	r3, #0
   14300:	beq	141cc <close@plt+0x2cf0>
   14304:	mov	r0, r3
   14308:	str	r3, [sp, #16]
   1430c:	bl	112c0 <malloc@plt>
   14310:	ldr	r3, [sp, #16]
   14314:	cmp	r0, #0
   14318:	str	r0, [r5, #20]
   1431c:	beq	1442c <close@plt+0x2f50>
   14320:	mov	r2, r3
   14324:	ldr	r1, [r4, #20]
   14328:	str	r3, [sp, #16]
   1432c:	bl	111e8 <memcpy@plt>
   14330:	ldr	r3, [sp, #16]
   14334:	strh	r3, [r5, #16]
   14338:	b	141cc <close@plt+0x2cf0>
   1433c:	mov	r0, r5
   14340:	bl	11344 <XauDisposeAuth@plt>
   14344:	ldr	r5, [sp, #32]
   14348:	cmp	r5, #0
   1434c:	beq	1449c <close@plt+0x2fc0>
   14350:	ldr	r3, [r5, #4]
   14354:	ldr	r4, [r5]
   14358:	ldr	r0, [r3, #4]
   1435c:	cmp	r0, #0
   14360:	beq	1436c <close@plt+0x2e90>
   14364:	bl	111c4 <free@plt>
   14368:	ldr	r3, [r5, #4]
   1436c:	ldr	r0, [r3, #12]
   14370:	cmp	r0, #0
   14374:	beq	14380 <close@plt+0x2ea4>
   14378:	bl	111c4 <free@plt>
   1437c:	ldr	r3, [r5, #4]
   14380:	mov	r0, r3
   14384:	bl	111c4 <free@plt>
   14388:	mov	r0, r5
   1438c:	bl	111c4 <free@plt>
   14390:	cmp	r4, #0
   14394:	mov	r5, r4
   14398:	bne	14350 <close@plt+0x2e74>
   1439c:	cmp	r6, #0
   143a0:	blt	1449c <close@plt+0x2fc0>
   143a4:	ldr	r3, [sp, #12]
   143a8:	ldr	r2, [sp, #24]
   143ac:	add	r3, r3, #1
   143b0:	cmp	r3, r2
   143b4:	str	r3, [sp, #12]
   143b8:	bne	14150 <close@plt+0x2c74>
   143bc:	ldr	r3, [pc, #248]	; 144bc <close@plt+0x2fe0>
   143c0:	ldr	r2, [sp, #36]	; 0x24
   143c4:	ldr	r0, [sp, #28]
   143c8:	ldr	r3, [r3]
   143cc:	cmp	r2, r3
   143d0:	bne	144b8 <close@plt+0x2fdc>
   143d4:	add	sp, sp, #44	; 0x2c
   143d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143dc:	ldr	r5, [pc, #224]	; 144c4 <close@plt+0x2fe8>
   143e0:	ldr	r3, [pc, #224]	; 144c8 <close@plt+0x2fec>
   143e4:	ldr	r2, [pc, #224]	; 144cc <close@plt+0x2ff0>
   143e8:	ldr	r0, [r5]
   143ec:	ldr	r3, [r3]
   143f0:	mov	r1, #1
   143f4:	stm	sp, {r7, r8}
   143f8:	bl	11410 <__fprintf_chk@plt>
   143fc:	ldr	r3, [sp, #20]
   14400:	ldr	ip, [sp, #28]
   14404:	mov	r1, #1
   14408:	ldr	r2, [r3]
   1440c:	ldr	r0, [r5]
   14410:	add	ip, ip, r1
   14414:	str	r2, [sp]
   14418:	mov	r3, r4
   1441c:	ldr	r2, [pc, #172]	; 144d0 <close@plt+0x2ff4>
   14420:	str	ip, [sp, #28]
   14424:	bl	11410 <__fprintf_chk@plt>
   14428:	b	143a4 <close@plt+0x2ec8>
   1442c:	str	r0, [sp, #16]
   14430:	ldr	r0, [r5, #4]
   14434:	bl	111c4 <free@plt>
   14438:	ldr	r0, [r5, #12]
   1443c:	bl	111c4 <free@plt>
   14440:	mov	r0, r5
   14444:	bl	111c4 <free@plt>
   14448:	ldr	r2, [sp, #16]
   1444c:	mov	r5, r2
   14450:	b	141d8 <close@plt+0x2cfc>
   14454:	str	r0, [sp, #16]
   14458:	ldr	r0, [r5, #4]
   1445c:	bl	111c4 <free@plt>
   14460:	ldr	r0, [r5, #12]
   14464:	bl	111c4 <free@plt>
   14468:	ldr	r0, [r5, #20]
   1446c:	b	1443c <close@plt+0x2f60>
   14470:	ldr	r5, [sp, #32]
   14474:	cmp	r5, #0
   14478:	movne	r6, r3
   1447c:	bne	14350 <close@plt+0x2e74>
   14480:	b	143a4 <close@plt+0x2ec8>
   14484:	str	r0, [sp, #16]
   14488:	mov	r0, r5
   1448c:	bl	111c4 <free@plt>
   14490:	ldr	r2, [sp, #16]
   14494:	mov	r5, r2
   14498:	b	141d8 <close@plt+0x2cfc>
   1449c:	ldr	r3, [sp, #28]
   144a0:	sub	r3, r3, r6
   144a4:	str	r3, [sp, #28]
   144a8:	b	143bc <close@plt+0x2ee0>
   144ac:	mov	r3, #0
   144b0:	str	r3, [sp, #28]
   144b4:	b	143bc <close@plt+0x2ee0>
   144b8:	bl	1123c <__stack_chk_fail@plt>
   144bc:	andeq	r7, r2, r8, ror #29
   144c0:	andeq	r8, r2, r8, lsr r3
   144c4:	strdeq	r8, [r2], -r0
   144c8:	andeq	r8, r2, ip, ror #14
   144cc:	strdeq	r5, [r1], -r0
   144d0:	andeq	r5, r1, r8, ror pc
   144d4:	push	{r4, r5, r6, r7, lr}
   144d8:	sub	sp, sp, #36	; 0x24
   144dc:	ldr	lr, [pc, #172]	; 14590 <close@plt+0x30b4>
   144e0:	ldr	ip, [r3]
   144e4:	ldr	r7, [pc, #168]	; 14594 <close@plt+0x30b8>
   144e8:	ldr	lr, [lr]
   144ec:	cmp	r2, #1
   144f0:	str	lr, [sp, #20]
   144f4:	ldrb	ip, [ip]
   144f8:	ldr	lr, [r7]
   144fc:	sub	ip, ip, #110	; 0x6e
   14500:	clz	ip, ip
   14504:	lsr	ip, ip, #5
   14508:	str	ip, [sp, #24]
   1450c:	str	lr, [sp, #28]
   14510:	bne	14568 <close@plt+0x308c>
   14514:	ldr	r3, [pc, #124]	; 14598 <close@plt+0x30bc>
   14518:	mov	r5, r0
   1451c:	mov	r6, r1
   14520:	ldr	r4, [r3, #1032]	; 0x408
   14524:	cmp	r4, #0
   14528:	beq	1454c <close@plt+0x3070>
   1452c:	ldr	r2, [r4, #4]
   14530:	add	r3, sp, #20
   14534:	mov	r1, r6
   14538:	mov	r0, r5
   1453c:	bl	12dfc <close@plt+0x1920>
   14540:	ldr	r4, [r4]
   14544:	cmp	r4, #0
   14548:	bne	1452c <close@plt+0x3050>
   1454c:	mov	r0, #0
   14550:	ldr	r2, [sp, #28]
   14554:	ldr	r3, [r7]
   14558:	cmp	r2, r3
   1455c:	bne	1458c <close@plt+0x30b0>
   14560:	add	sp, sp, #36	; 0x24
   14564:	pop	{r4, r5, r6, r7, pc}
   14568:	ldr	lr, [pc, #44]	; 1459c <close@plt+0x30c0>
   1456c:	add	ip, sp, #20
   14570:	str	r3, [sp]
   14574:	str	lr, [sp, #4]
   14578:	mov	r3, r2
   1457c:	str	ip, [sp, #8]
   14580:	mov	r2, #1
   14584:	bl	14108 <close@plt+0x2c2c>
   14588:	b	14550 <close@plt+0x3074>
   1458c:	bl	1123c <__stack_chk_fail@plt>
   14590:	strdeq	r8, [r2], -ip
   14594:	andeq	r7, r2, r8, ror #29
   14598:	andeq	r8, r2, r8, lsr r3
   1459c:	strdeq	r2, [r1], -ip
   145a0:	push	{r4, r5, r6, r7, lr}
   145a4:	sub	sp, sp, #52	; 0x34
   145a8:	ldr	r5, [pc, #304]	; 146e0 <close@plt+0x3204>
   145ac:	cmp	r2, #2
   145b0:	mov	r4, r3
   145b4:	ldr	ip, [r5]
   145b8:	str	ip, [sp, #44]	; 0x2c
   145bc:	ble	14664 <close@plt+0x3188>
   145c0:	ldr	r6, [r3]
   145c4:	ldr	r3, [r3, #4]
   145c8:	mov	ip, #0
   145cc:	str	r3, [sp, #24]
   145d0:	str	ip, [sp, #20]
   145d4:	str	ip, [sp, #28]
   145d8:	ldrb	lr, [r6]
   145dc:	ldr	r7, [pc, #256]	; 146e4 <close@plt+0x3208>
   145e0:	mov	r3, r2
   145e4:	add	r2, sp, #20
   145e8:	str	r4, [sp]
   145ec:	str	r2, [sp, #8]
   145f0:	sub	lr, lr, #110	; 0x6e
   145f4:	str	r7, [sp, #4]
   145f8:	clz	lr, lr
   145fc:	mov	r2, #2
   14600:	lsr	lr, lr, #5
   14604:	str	lr, [sp, #32]
   14608:	str	ip, [sp, #36]	; 0x24
   1460c:	str	r6, [sp, #40]	; 0x28
   14610:	bl	14108 <close@plt+0x2c2c>
   14614:	ldr	r3, [sp, #20]
   14618:	cmp	r3, #0
   1461c:	mov	r4, r0
   14620:	beq	146a8 <close@plt+0x31cc>
   14624:	ldr	r3, [pc, #188]	; 146e8 <close@plt+0x320c>
   14628:	ldr	r3, [r3]
   1462c:	cmp	r3, #0
   14630:	bne	146c4 <close@plt+0x31e8>
   14634:	ldr	r3, [sp, #28]
   14638:	cmp	r3, #0
   1463c:	bne	14648 <close@plt+0x316c>
   14640:	ldr	r0, [sp, #20]
   14644:	bl	11428 <fclose@plt>
   14648:	ldr	r2, [sp, #44]	; 0x2c
   1464c:	ldr	r3, [r5]
   14650:	mov	r0, r4
   14654:	cmp	r2, r3
   14658:	bne	146dc <close@plt+0x3200>
   1465c:	add	sp, sp, #52	; 0x34
   14660:	pop	{r4, r5, r6, r7, pc}
   14664:	ldr	r2, [pc, #128]	; 146ec <close@plt+0x3210>
   14668:	ldr	r6, [pc, #128]	; 146f0 <close@plt+0x3214>
   1466c:	mov	ip, r0
   14670:	str	r1, [sp, #4]
   14674:	mov	r1, #1
   14678:	ldr	r3, [r2]
   1467c:	ldr	r0, [r6]
   14680:	ldr	r2, [pc, #108]	; 146f4 <close@plt+0x3218>
   14684:	str	ip, [sp]
   14688:	bl	11410 <__fprintf_chk@plt>
   1468c:	ldr	r3, [r4]
   14690:	ldr	r0, [r6]
   14694:	ldr	r2, [pc, #92]	; 146f8 <close@plt+0x321c>
   14698:	mov	r1, #1
   1469c:	bl	11410 <__fprintf_chk@plt>
   146a0:	mov	r4, #1
   146a4:	b	14648 <close@plt+0x316c>
   146a8:	ldr	r1, [pc, #64]	; 146f0 <close@plt+0x3214>
   146ac:	ldr	r3, [sp, #24]
   146b0:	ldr	r2, [pc, #68]	; 146fc <close@plt+0x3220>
   146b4:	ldr	r0, [r1]
   146b8:	mov	r1, #1
   146bc:	bl	11410 <__fprintf_chk@plt>
   146c0:	b	14648 <close@plt+0x316c>
   146c4:	ldr	r3, [sp, #24]
   146c8:	ldr	r2, [sp, #36]	; 0x24
   146cc:	ldr	r1, [pc, #44]	; 14700 <close@plt+0x3224>
   146d0:	mov	r0, #1
   146d4:	bl	113d4 <__printf_chk@plt>
   146d8:	b	14634 <close@plt+0x3158>
   146dc:	bl	1123c <__stack_chk_fail@plt>
   146e0:	andeq	r7, r2, r8, ror #29
   146e4:	andeq	r3, r1, ip, lsl #4
   146e8:	andeq	r8, r2, ip, ror #5
   146ec:	andeq	r8, r2, ip, ror #14
   146f0:	strdeq	r8, [r2], -r0
   146f4:	strdeq	r5, [r1], -r0
   146f8:	strdeq	r5, [r1], -r0
   146fc:	andeq	r6, r1, r8, ror r1
   14700:	andeq	r6, r1, ip, lsr #3
   14704:	push	{r4, r5, r6, lr}
   14708:	sub	sp, sp, #24
   1470c:	ldr	r4, [pc, #196]	; 147d8 <close@plt+0x32fc>
   14710:	mov	ip, #0
   14714:	cmp	r2, #1
   14718:	ldr	lr, [r4]
   1471c:	mov	r5, r3
   14720:	str	lr, [sp, #20]
   14724:	str	ip, [sp, #16]
   14728:	ble	14790 <close@plt+0x32b4>
   1472c:	ldr	lr, [pc, #168]	; 147dc <close@plt+0x3300>
   14730:	add	ip, sp, #16
   14734:	str	r3, [sp]
   14738:	str	lr, [sp, #4]
   1473c:	mov	r3, r2
   14740:	str	ip, [sp, #8]
   14744:	mov	r2, #1
   14748:	bl	14108 <close@plt+0x2c2c>
   1474c:	ldr	r3, [pc, #140]	; 147e0 <close@plt+0x3304>
   14750:	ldr	r3, [r3]
   14754:	cmp	r3, #0
   14758:	mov	r5, r0
   1475c:	bne	1477c <close@plt+0x32a0>
   14760:	ldr	r2, [sp, #20]
   14764:	ldr	r3, [r4]
   14768:	mov	r0, r5
   1476c:	cmp	r2, r3
   14770:	bne	147d4 <close@plt+0x32f8>
   14774:	add	sp, sp, #24
   14778:	pop	{r4, r5, r6, pc}
   1477c:	ldr	r2, [sp, #16]
   14780:	ldr	r1, [pc, #92]	; 147e4 <close@plt+0x3308>
   14784:	mov	r0, #1
   14788:	bl	113d4 <__printf_chk@plt>
   1478c:	b	14760 <close@plt+0x3284>
   14790:	ldr	r2, [pc, #80]	; 147e8 <close@plt+0x330c>
   14794:	ldr	r6, [pc, #80]	; 147ec <close@plt+0x3310>
   14798:	mov	ip, r0
   1479c:	str	r1, [sp, #4]
   147a0:	ldr	r0, [r6]
   147a4:	ldr	r3, [r2]
   147a8:	mov	r1, #1
   147ac:	str	ip, [sp]
   147b0:	ldr	r2, [pc, #56]	; 147f0 <close@plt+0x3314>
   147b4:	bl	11410 <__fprintf_chk@plt>
   147b8:	ldr	r3, [r5]
   147bc:	ldr	r0, [r6]
   147c0:	ldr	r2, [pc, #44]	; 147f4 <close@plt+0x3318>
   147c4:	mov	r1, #1
   147c8:	bl	11410 <__fprintf_chk@plt>
   147cc:	mov	r5, #1
   147d0:	b	14760 <close@plt+0x3284>
   147d4:	bl	1123c <__stack_chk_fail@plt>
   147d8:	andeq	r7, r2, r8, ror #29
   147dc:	ldrdeq	r2, [r1], -r0
   147e0:	andeq	r8, r2, ip, ror #5
   147e4:	andeq	r6, r1, r8, asr #3
   147e8:	andeq	r8, r2, ip, ror #14
   147ec:	strdeq	r8, [r2], -r0
   147f0:	strdeq	r5, [r1], -r0
   147f4:	strdeq	r5, [r1], -r0
   147f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147fc:	sub	sp, sp, #24
   14800:	ldr	r6, [pc, #892]	; 14b84 <close@plt+0x36a8>
   14804:	ldr	r4, [pc, #892]	; 14b88 <close@plt+0x36ac>
   14808:	mov	r5, r0
   1480c:	ldr	r3, [r6]
   14810:	ldr	r1, [pc, #884]	; 14b8c <close@plt+0x36b0>
   14814:	mov	r0, #2
   14818:	str	r3, [sp, #20]
   1481c:	str	r5, [r4, #1040]	; 0x410
   14820:	bl	111f4 <signal@plt>
   14824:	ldr	r1, [pc, #864]	; 14b8c <close@plt+0x36b0>
   14828:	mov	r0, #15
   1482c:	bl	111f4 <signal@plt>
   14830:	ldr	r7, [pc, #856]	; 14b90 <close@plt+0x36b4>
   14834:	ldr	r1, [pc, #848]	; 14b8c <close@plt+0x36b0>
   14838:	mov	r0, #1
   1483c:	bl	111f4 <signal@plt>
   14840:	ldr	r1, [pc, #836]	; 14b8c <close@plt+0x36b0>
   14844:	mov	r0, #13
   14848:	bl	111f4 <signal@plt>
   1484c:	mov	r2, #1024	; 0x400
   14850:	mov	r1, #0
   14854:	add	r0, r4, #4
   14858:	bl	113b0 <memset@plt>
   1485c:	ldr	r3, [r7]
   14860:	mov	r2, #2
   14864:	cmp	r3, #0
   14868:	mov	r3, #3
   1486c:	str	r2, [r4, #204]	; 0xcc
   14870:	str	r3, [r4, #208]	; 0xd0
   14874:	mov	r2, #5
   14878:	mov	r3, #6
   1487c:	str	r2, [r4, #216]	; 0xd8
   14880:	str	r3, [r4, #220]	; 0xdc
   14884:	mov	r2, #8
   14888:	mov	r3, #9
   1488c:	str	r2, [r4, #228]	; 0xe4
   14890:	str	r3, [r4, #232]	; 0xe8
   14894:	mov	r2, #10
   14898:	mov	r3, #11
   1489c:	mov	r1, #4
   148a0:	str	r2, [r4, #264]	; 0x108
   148a4:	str	r2, [r4, #392]	; 0x188
   148a8:	str	r3, [r4, #268]	; 0x10c
   148ac:	mov	r2, #12
   148b0:	str	r3, [r4, #396]	; 0x18c
   148b4:	mov	r3, #13
   148b8:	str	r1, [r4, #212]	; 0xd4
   148bc:	mov	r0, #1
   148c0:	mov	r1, #7
   148c4:	str	r2, [r4, #272]	; 0x110
   148c8:	str	r2, [r4, #400]	; 0x190
   148cc:	str	r3, [r4, #276]	; 0x114
   148d0:	mov	r2, #14
   148d4:	str	r3, [r4, #404]	; 0x194
   148d8:	mov	r3, #15
   148dc:	str	r1, [r4, #224]	; 0xe0
   148e0:	str	r0, [r4, #200]	; 0xc8
   148e4:	str	r2, [r4, #280]	; 0x118
   148e8:	str	r2, [r4, #408]	; 0x198
   148ec:	str	r3, [r4, #284]	; 0x11c
   148f0:	str	r3, [r4, #412]	; 0x19c
   148f4:	beq	149f4 <close@plt+0x3518>
   148f8:	ldr	r3, [pc, #660]	; 14b94 <close@plt+0x36b8>
   148fc:	ldr	r8, [pc, #660]	; 14b98 <close@plt+0x36bc>
   14900:	ldr	r3, [r3]
   14904:	cmp	r3, #0
   14908:	bne	14af8 <close@plt+0x361c>
   1490c:	ldr	r3, [r8]
   14910:	cmp	r3, #0
   14914:	beq	14a08 <close@plt+0x352c>
   14918:	mov	r0, r5
   1491c:	bl	11224 <XauUnlockAuth@plt>
   14920:	mov	r1, #0
   14924:	mov	r0, r5
   14928:	bl	1141c <access@plt>
   1492c:	subs	r7, r0, #0
   14930:	beq	14a6c <close@plt+0x3590>
   14934:	mov	r0, #63	; 0x3f
   14938:	bl	11488 <umask@plt>
   1493c:	ldr	r1, [pc, #600]	; 14b9c <close@plt+0x36c0>
   14940:	str	r0, [r4, #1052]	; 0x41c
   14944:	mov	r0, r5
   14948:	bl	111ac <fopen@plt>
   1494c:	subs	r7, r0, #0
   14950:	beq	14aac <close@plt+0x35d0>
   14954:	add	r3, sp, #16
   14958:	add	r2, sp, #12
   1495c:	mov	r1, #0
   14960:	mov	r9, #1
   14964:	str	r9, [r4, #1044]	; 0x414
   14968:	bl	1314c <close@plt+0x1c70>
   1496c:	mov	sl, r0
   14970:	mov	r0, r7
   14974:	bl	11428 <fclose@plt>
   14978:	cmp	sl, #0
   1497c:	ldrge	r3, [sp, #12]
   14980:	strge	r3, [r4, #1032]	; 0x408
   14984:	blt	14b50 <close@plt+0x3674>
   14988:	mov	r0, r5
   1498c:	bl	11398 <__strdup@plt>
   14990:	cmp	r0, #0
   14994:	str	r0, [r4, #1040]	; 0x410
   14998:	beq	14b30 <close@plt+0x3654>
   1499c:	ldr	r3, [pc, #496]	; 14b94 <close@plt+0x36b8>
   149a0:	mov	r7, #0
   149a4:	str	r7, [r4, #1036]	; 0x40c
   149a8:	ldr	r0, [r3]
   149ac:	cmp	r0, r7
   149b0:	beq	149dc <close@plt+0x3500>
   149b4:	ldr	r0, [r8]
   149b8:	ldr	r1, [pc, #480]	; 14ba0 <close@plt+0x36c4>
   149bc:	cmp	r0, r7
   149c0:	ldr	r2, [pc, #476]	; 14ba4 <close@plt+0x36c8>
   149c4:	mov	r3, r5
   149c8:	movne	r2, r1
   149cc:	mov	r0, #1
   149d0:	ldr	r1, [pc, #464]	; 14ba8 <close@plt+0x36cc>
   149d4:	bl	113d4 <__printf_chk@plt>
   149d8:	mov	r0, r7
   149dc:	ldr	r2, [sp, #20]
   149e0:	ldr	r3, [r6]
   149e4:	cmp	r2, r3
   149e8:	bne	14b80 <close@plt+0x36a4>
   149ec:	add	sp, sp, #24
   149f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149f4:	ldr	r8, [pc, #412]	; 14b98 <close@plt+0x36bc>
   149f8:	ldr	r3, [r8]
   149fc:	cmp	r3, #0
   14a00:	bne	14920 <close@plt+0x3444>
   14a04:	mov	r3, #600	; 0x258
   14a08:	mov	r2, #2
   14a0c:	mov	r1, #10
   14a10:	mov	r0, r5
   14a14:	bl	112cc <XauLockAuth@plt>
   14a18:	cmp	r0, #0
   14a1c:	moveq	r3, #1
   14a20:	streq	r3, [r4, #1048]	; 0x418
   14a24:	beq	14920 <close@plt+0x3444>
   14a28:	cmp	r0, #1
   14a2c:	beq	14b78 <close@plt+0x369c>
   14a30:	ldr	r3, [pc, #372]	; 14bac <close@plt+0x36d0>
   14a34:	cmp	r0, #2
   14a38:	ldr	r2, [pc, #368]	; 14bb0 <close@plt+0x36d4>
   14a3c:	movne	r2, r3
   14a40:	ldr	r1, [pc, #364]	; 14bb4 <close@plt+0x36d8>
   14a44:	ldr	r3, [pc, #364]	; 14bb8 <close@plt+0x36dc>
   14a48:	str	r5, [sp, #4]
   14a4c:	ldr	r0, [r1]
   14a50:	ldr	r3, [r3]
   14a54:	mov	r1, #1
   14a58:	str	r2, [sp]
   14a5c:	ldr	r2, [pc, #344]	; 14bbc <close@plt+0x36e0>
   14a60:	bl	11410 <__fprintf_chk@plt>
   14a64:	mvn	r0, #0
   14a68:	b	149dc <close@plt+0x3500>
   14a6c:	mov	r1, #2
   14a70:	mov	r0, r5
   14a74:	bl	1141c <access@plt>
   14a78:	cmp	r0, #0
   14a7c:	beq	14934 <close@plt+0x3458>
   14a80:	ldr	r2, [pc, #300]	; 14bb4 <close@plt+0x36d8>
   14a84:	ldr	r3, [pc, #300]	; 14bb8 <close@plt+0x36dc>
   14a88:	str	r5, [sp]
   14a8c:	mov	r1, #1
   14a90:	ldr	r3, [r3]
   14a94:	ldr	r0, [r2]
   14a98:	ldr	r2, [pc, #288]	; 14bc0 <close@plt+0x36e4>
   14a9c:	bl	11410 <__fprintf_chk@plt>
   14aa0:	ldr	r3, [pc, #284]	; 14bc4 <close@plt+0x36e8>
   14aa4:	str	r7, [r3, #344]	; 0x158
   14aa8:	b	14934 <close@plt+0x3458>
   14aac:	bl	11374 <__errno_location@plt>
   14ab0:	mov	r1, r7
   14ab4:	mov	r9, r0
   14ab8:	mov	r0, r5
   14abc:	ldr	r7, [r9]
   14ac0:	bl	1141c <access@plt>
   14ac4:	cmp	r0, #0
   14ac8:	streq	r7, [r9]
   14acc:	mvneq	r0, #0
   14ad0:	beq	149dc <close@plt+0x3500>
   14ad4:	ldr	r2, [pc, #216]	; 14bb4 <close@plt+0x36d8>
   14ad8:	ldr	r3, [pc, #216]	; 14bb8 <close@plt+0x36dc>
   14adc:	str	r5, [sp]
   14ae0:	mov	r1, #1
   14ae4:	ldr	r3, [r3]
   14ae8:	ldr	r0, [r2]
   14aec:	ldr	r2, [pc, #212]	; 14bc8 <close@plt+0x36ec>
   14af0:	bl	11410 <__fprintf_chk@plt>
   14af4:	b	14988 <close@plt+0x34ac>
   14af8:	mov	r2, r5
   14afc:	ldr	r1, [pc, #200]	; 14bcc <close@plt+0x36f0>
   14b00:	bl	113d4 <__printf_chk@plt>
   14b04:	ldr	r3, [r8]
   14b08:	cmp	r3, #0
   14b0c:	beq	14b20 <close@plt+0x3644>
   14b10:	ldr	r3, [r7]
   14b14:	cmp	r3, #0
   14b18:	beq	14920 <close@plt+0x3444>
   14b1c:	b	14918 <close@plt+0x343c>
   14b20:	ldr	r2, [r7]
   14b24:	cmp	r2, #0
   14b28:	bne	14a08 <close@plt+0x352c>
   14b2c:	b	14a04 <close@plt+0x3528>
   14b30:	ldr	r3, [pc, #124]	; 14bb4 <close@plt+0x36d8>
   14b34:	mov	r2, #23
   14b38:	mov	r1, #1
   14b3c:	ldr	r3, [r3]
   14b40:	ldr	r0, [pc, #136]	; 14bd0 <close@plt+0x36f4>
   14b44:	bl	11284 <fwrite@plt>
   14b48:	mvn	r0, #0
   14b4c:	b	149dc <close@plt+0x3500>
   14b50:	ldr	r2, [pc, #92]	; 14bb4 <close@plt+0x36d8>
   14b54:	ldr	r3, [pc, #92]	; 14bb8 <close@plt+0x36dc>
   14b58:	str	r5, [sp]
   14b5c:	mov	r1, r9
   14b60:	ldr	r0, [r2]
   14b64:	ldr	r3, [r3]
   14b68:	ldr	r2, [pc, #100]	; 14bd4 <close@plt+0x36f8>
   14b6c:	bl	11410 <__fprintf_chk@plt>
   14b70:	mvn	r0, #0
   14b74:	b	149dc <close@plt+0x3500>
   14b78:	ldr	r2, [pc, #88]	; 14bd8 <close@plt+0x36fc>
   14b7c:	b	14a40 <close@plt+0x3564>
   14b80:	bl	1123c <__stack_chk_fail@plt>
   14b84:	andeq	r7, r2, r8, ror #29
   14b88:	andeq	r8, r2, r8, lsr r3
   14b8c:	andeq	r4, r1, r8, ror #30
   14b90:	andeq	r8, r2, r0, ror #14
   14b94:	andeq	r8, r2, ip, ror #5
   14b98:	andeq	r8, r2, r4, ror #14
   14b9c:	andeq	r6, r1, r8, lsl r1
   14ba0:	andeq	r6, r1, ip, ror #3
   14ba4:	andeq	r6, r1, r0, lsl #4
   14ba8:	strdeq	r6, [r1], -ip
   14bac:	ldrdeq	r6, [r1], -ip
   14bb0:	andeq	r6, r1, r0, lsr #32
   14bb4:	strdeq	r8, [r2], -r0
   14bb8:	andeq	r8, r2, ip, ror #14
   14bbc:	andeq	r6, r1, r8, lsr r2
   14bc0:	andeq	r6, r1, r0, ror #4
   14bc4:	andeq	r8, r2, r0, asr #2
   14bc8:	muleq	r1, r0, r2
   14bcc:	andeq	r6, r1, r8, lsl #4
   14bd0:	andeq	r6, r1, r4, ror #5
   14bd4:			; <UNDEFINED> instruction: 0x000162b0
   14bd8:	andeq	r6, r1, r4, ror #3
   14bdc:	push	{r4, r5, r6, r7, r8, r9, lr}
   14be0:	sub	sp, sp, #1040	; 0x410
   14be4:	ldr	r5, [pc, #788]	; 14f00 <close@plt+0x3a24>
   14be8:	ldr	r7, [pc, #788]	; 14f04 <close@plt+0x3a28>
   14bec:	sub	sp, sp, #4
   14bf0:	ldr	r2, [r5, #1036]	; 0x40c
   14bf4:	ldr	r3, [r7]
   14bf8:	cmp	r2, #0
   14bfc:	str	r3, [sp, #1036]	; 0x40c
   14c00:	beq	14c20 <close@plt+0x3744>
   14c04:	ldr	r3, [r5, #1056]	; 0x420
   14c08:	cmp	r3, #0
   14c0c:	beq	14c5c <close@plt+0x3780>
   14c10:	ldr	r3, [pc, #752]	; 14f08 <close@plt+0x3a2c>
   14c14:	ldr	r3, [r3]
   14c18:	cmp	r3, #0
   14c1c:	bne	14d8c <close@plt+0x38b0>
   14c20:	ldr	r3, [r5, #1048]	; 0x418
   14c24:	cmp	r3, #0
   14c28:	beq	14c34 <close@plt+0x3758>
   14c2c:	ldr	r0, [r5, #1040]	; 0x410
   14c30:	bl	11224 <XauUnlockAuth@plt>
   14c34:	ldr	r0, [r5, #1052]	; 0x41c
   14c38:	bl	11488 <umask@plt>
   14c3c:	ldr	r2, [sp, #1036]	; 0x40c
   14c40:	ldr	r3, [r7]
   14c44:	mov	r0, #0
   14c48:	cmp	r2, r3
   14c4c:	bne	14efc <close@plt+0x3a20>
   14c50:	add	sp, sp, #1040	; 0x410
   14c54:	add	sp, sp, #4
   14c58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c5c:	ldr	r3, [pc, #680]	; 14f0c <close@plt+0x3a30>
   14c60:	ldr	r1, [r5, #1040]	; 0x410
   14c64:	ldr	r3, [r3, #344]	; 0x158
   14c68:	cmp	r3, #0
   14c6c:	beq	14dcc <close@plt+0x38f0>
   14c70:	ldr	r3, [pc, #656]	; 14f08 <close@plt+0x3a2c>
   14c74:	ldr	r3, [r3]
   14c78:	cmp	r3, #0
   14c7c:	beq	14cac <close@plt+0x37d0>
   14c80:	ldr	r3, [pc, #648]	; 14f10 <close@plt+0x3a34>
   14c84:	ldr	r0, [pc, #648]	; 14f14 <close@plt+0x3a38>
   14c88:	ldr	r2, [pc, #648]	; 14f18 <close@plt+0x3a3c>
   14c8c:	ldr	ip, [r3]
   14c90:	mov	r3, r1
   14c94:	cmp	ip, #0
   14c98:	movne	r2, r0
   14c9c:	ldr	r1, [pc, #632]	; 14f1c <close@plt+0x3a40>
   14ca0:	mov	r0, #1
   14ca4:	bl	113d4 <__printf_chk@plt>
   14ca8:	ldr	r1, [r5, #1040]	; 0x410
   14cac:	mov	r2, #1024	; 0x400
   14cb0:	add	r0, sp, #12
   14cb4:	bl	1129c <__stpcpy_chk@plt>
   14cb8:	ldr	r2, [pc, #608]	; 14f20 <close@plt+0x3a44>
   14cbc:	ldrh	r1, [r2]
   14cc0:	ldrb	r2, [r2, #2]
   14cc4:	mov	r3, r0
   14cc8:	add	r0, sp, #12
   14ccc:	strh	r1, [r3]
   14cd0:	strb	r2, [r3, #2]
   14cd4:	bl	11248 <unlink@plt>
   14cd8:	add	r0, sp, #12
   14cdc:	mov	r2, #384	; 0x180
   14ce0:	mov	r1, #193	; 0xc1
   14ce4:	bl	11314 <open@plt>
   14ce8:	cmn	r0, #1
   14cec:	mov	r4, r0
   14cf0:	beq	14ec8 <close@plt+0x39ec>
   14cf4:	ldr	r1, [pc, #552]	; 14f24 <close@plt+0x3a48>
   14cf8:	bl	11170 <fdopen@plt>
   14cfc:	subs	r8, r0, #0
   14d00:	beq	14ec0 <close@plt+0x39e4>
   14d04:	ldr	r4, [r5, #1032]	; 0x408
   14d08:	cmp	r4, #0
   14d0c:	beq	14e44 <close@plt+0x3968>
   14d10:	ldr	r9, [pc, #528]	; 14f28 <close@plt+0x3a4c>
   14d14:	b	14d24 <close@plt+0x3848>
   14d18:	ldr	r4, [r4]
   14d1c:	cmp	r4, #0
   14d20:	beq	14df0 <close@plt+0x3914>
   14d24:	ldr	r6, [r4, #4]
   14d28:	ldrh	r2, [r6, #16]
   14d2c:	cmp	r2, #18
   14d30:	bne	14d18 <close@plt+0x383c>
   14d34:	mov	r1, r9
   14d38:	ldr	r0, [r6, #20]
   14d3c:	bl	114b8 <strncmp@plt>
   14d40:	cmp	r0, #0
   14d44:	bne	14d18 <close@plt+0x383c>
   14d48:	mov	r1, r6
   14d4c:	mov	r0, r8
   14d50:	bl	111a0 <XauWriteAuth@plt>
   14d54:	cmp	r0, #0
   14d58:	bne	14d18 <close@plt+0x383c>
   14d5c:	mov	r0, r8
   14d60:	bl	11428 <fclose@plt>
   14d64:	ldr	r6, [pc, #448]	; 14f2c <close@plt+0x3a50>
   14d68:	ldr	r4, [pc, #448]	; 14f30 <close@plt+0x3a54>
   14d6c:	add	r2, sp, #12
   14d70:	ldr	r3, [r6]
   14d74:	ldr	r0, [r4]
   14d78:	mov	r1, #1
   14d7c:	str	r2, [sp]
   14d80:	ldr	r2, [pc, #428]	; 14f34 <close@plt+0x3a58>
   14d84:	bl	11410 <__fprintf_chk@plt>
   14d88:	b	14c20 <close@plt+0x3744>
   14d8c:	mov	r2, #36	; 0x24
   14d90:	ldr	r1, [pc, #416]	; 14f38 <close@plt+0x3a5c>
   14d94:	mov	r0, #2
   14d98:	bl	113ec <write@plt>
   14d9c:	ldr	r4, [r5, #1040]	; 0x410
   14da0:	mov	r0, r4
   14da4:	bl	11350 <strlen@plt>
   14da8:	mov	r1, r4
   14dac:	mov	r2, r0
   14db0:	mov	r0, #2
   14db4:	bl	113ec <write@plt>
   14db8:	mov	r2, #1
   14dbc:	ldr	r1, [pc, #376]	; 14f3c <close@plt+0x3a60>
   14dc0:	mov	r0, #2
   14dc4:	bl	113ec <write@plt>
   14dc8:	b	14c20 <close@plt+0x3744>
   14dcc:	ldr	r2, [pc, #348]	; 14f30 <close@plt+0x3a54>
   14dd0:	ldr	r3, [pc, #340]	; 14f2c <close@plt+0x3a50>
   14dd4:	str	r1, [sp]
   14dd8:	mov	r1, #1
   14ddc:	ldr	r3, [r3]
   14de0:	ldr	r0, [r2]
   14de4:	ldr	r2, [pc, #340]	; 14f40 <close@plt+0x3a64>
   14de8:	bl	11410 <__fprintf_chk@plt>
   14dec:	b	14c20 <close@plt+0x3744>
   14df0:	ldr	r4, [r5, #1032]	; 0x408
   14df4:	cmp	r4, #0
   14df8:	beq	14e44 <close@plt+0x3968>
   14dfc:	ldr	r9, [pc, #292]	; 14f28 <close@plt+0x3a4c>
   14e00:	ldr	r6, [r4, #4]
   14e04:	ldrh	r2, [r6, #16]
   14e08:	cmp	r2, #18
   14e0c:	bne	14e24 <close@plt+0x3948>
   14e10:	mov	r1, r9
   14e14:	ldr	r0, [r6, #20]
   14e18:	bl	114b8 <strncmp@plt>
   14e1c:	cmp	r0, #0
   14e20:	beq	14e38 <close@plt+0x395c>
   14e24:	mov	r1, r6
   14e28:	mov	r0, r8
   14e2c:	bl	111a0 <XauWriteAuth@plt>
   14e30:	cmp	r0, #0
   14e34:	beq	14d5c <close@plt+0x3880>
   14e38:	ldr	r4, [r4]
   14e3c:	cmp	r4, #0
   14e40:	bne	14e00 <close@plt+0x3924>
   14e44:	mov	r0, r8
   14e48:	bl	11428 <fclose@plt>
   14e4c:	cmp	r0, #0
   14e50:	bne	14ef0 <close@plt+0x3a14>
   14e54:	ldr	r4, [r5, #1040]	; 0x410
   14e58:	mov	r0, r4
   14e5c:	bl	11248 <unlink@plt>
   14e60:	mov	r1, r4
   14e64:	add	r0, sp, #12
   14e68:	bl	113e0 <link@plt>
   14e6c:	cmn	r0, #1
   14e70:	beq	14e80 <close@plt+0x39a4>
   14e74:	add	r0, sp, #12
   14e78:	bl	11248 <unlink@plt>
   14e7c:	b	14c20 <close@plt+0x3744>
   14e80:	mov	r1, r4
   14e84:	add	r0, sp, #12
   14e88:	bl	11320 <rename@plt>
   14e8c:	cmn	r0, #1
   14e90:	bne	14e74 <close@plt+0x3998>
   14e94:	ldr	r2, [pc, #148]	; 14f30 <close@plt+0x3a54>
   14e98:	ldr	r3, [pc, #140]	; 14f2c <close@plt+0x3a50>
   14e9c:	add	r1, sp, #12
   14ea0:	str	r1, [sp, #4]
   14ea4:	mov	r1, #1
   14ea8:	ldr	r3, [r3]
   14eac:	ldr	r0, [r2]
   14eb0:	str	r4, [sp]
   14eb4:	ldr	r2, [pc, #136]	; 14f44 <close@plt+0x3a68>
   14eb8:	bl	11410 <__fprintf_chk@plt>
   14ebc:	b	14c20 <close@plt+0x3744>
   14ec0:	mov	r0, r4
   14ec4:	bl	114dc <close@plt>
   14ec8:	ldr	r6, [pc, #92]	; 14f2c <close@plt+0x3a50>
   14ecc:	ldr	r4, [pc, #92]	; 14f30 <close@plt+0x3a54>
   14ed0:	add	r3, sp, #12
   14ed4:	str	r3, [sp]
   14ed8:	ldr	r2, [pc, #104]	; 14f48 <close@plt+0x3a6c>
   14edc:	ldr	r3, [r6]
   14ee0:	ldr	r0, [r4]
   14ee4:	mov	r1, #1
   14ee8:	bl	11410 <__fprintf_chk@plt>
   14eec:	b	14d6c <close@plt+0x3890>
   14ef0:	ldr	r6, [pc, #52]	; 14f2c <close@plt+0x3a50>
   14ef4:	ldr	r4, [pc, #52]	; 14f30 <close@plt+0x3a54>
   14ef8:	b	14d6c <close@plt+0x3890>
   14efc:	bl	1123c <__stack_chk_fail@plt>
   14f00:	andeq	r8, r2, r8, lsr r3
   14f04:	andeq	r7, r2, r8, ror #29
   14f08:	andeq	r8, r2, ip, ror #5
   14f0c:	andeq	r8, r2, r0, asr #2
   14f10:	andeq	r8, r2, r4, ror #14
   14f14:	andeq	r6, r1, r4, lsl r3
   14f18:	andeq	r6, r1, r0, lsr r3
   14f1c:	strdeq	r6, [r1], -ip
   14f20:	andeq	r6, r1, r8, lsl #7
   14f24:	andeq	r5, r1, r4, lsl #30
   14f28:	andeq	r5, r1, r0, lsr pc
   14f2c:	andeq	r8, r2, ip, ror #14
   14f30:	strdeq	r8, [r2], -r0
   14f34:			; <UNDEFINED> instruction: 0x000163b0
   14f38:	andeq	r6, r1, r8, lsr r3
   14f3c:	andeq	r6, r1, r0, lsr #8
   14f40:	andeq	r6, r1, r0, ror #6
   14f44:	ldrdeq	r6, [r1], -r8
   14f48:	andeq	r6, r1, ip, lsl #7
   14f4c:	ldr	r3, [pc, #16]	; 14f64 <close@plt+0x3a88>
   14f50:	push	{r4, lr}
   14f54:	mov	r2, #1
   14f58:	str	r2, [r3, #1056]	; 0x420
   14f5c:	bl	14bdc <close@plt+0x3700>
   14f60:	bl	111dc <_exit@plt>
   14f64:	andeq	r8, r2, r8, lsr r3
   14f68:	ldr	r3, [pc, #52]	; 14fa4 <close@plt+0x3ac8>
   14f6c:	push	{r4, lr}
   14f70:	ldr	r3, [r3]
   14f74:	cmp	r3, #0
   14f78:	beq	14f8c <close@plt+0x3ab0>
   14f7c:	ldr	r3, [pc, #36]	; 14fa8 <close@plt+0x3acc>
   14f80:	ldr	r3, [r3, #1036]	; 0x40c
   14f84:	cmp	r3, #0
   14f88:	bne	14f90 <close@plt+0x3ab4>
   14f8c:	bl	14f4c <close@plt+0x3a70>
   14f90:	mov	r2, #2
   14f94:	mov	r0, r2
   14f98:	ldr	r1, [pc, #12]	; 14fac <close@plt+0x3ad0>
   14f9c:	bl	113ec <write@plt>
   14fa0:	b	14f8c <close@plt+0x3ab0>
   14fa4:	andeq	r8, r2, ip, ror #5
   14fa8:	andeq	r8, r2, r8, lsr r3
   14fac:	andeq	r6, r1, r8, lsl #8
   14fb0:	push	{r4, lr}
   14fb4:	bl	14f4c <close@plt+0x3a70>
   14fb8:	cmp	r3, #0
   14fbc:	cmpne	r2, #0
   14fc0:	ble	15084 <close@plt+0x3ba8>
   14fc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fc8:	sub	sp, sp, #8
   14fcc:	ldr	sl, [r3]
   14fd0:	cmp	sl, #0
   14fd4:	beq	15078 <close@plt+0x3b9c>
   14fd8:	mov	r7, r0
   14fdc:	mov	r0, sl
   14fe0:	mov	r8, r1
   14fe4:	mov	r6, r3
   14fe8:	mov	r9, r2
   14fec:	bl	11350 <strlen@plt>
   14ff0:	ldr	r4, [pc, #184]	; 150b0 <close@plt+0x3bd4>
   14ff4:	ldr	r1, [r4, #4]
   14ff8:	cmp	r1, #0
   14ffc:	mov	r5, r0
   15000:	beq	15040 <close@plt+0x3b64>
   15004:	add	r4, r4, #4
   15008:	ldr	ip, [r4, #4]
   1500c:	cmp	r5, ip
   15010:	blt	15034 <close@plt+0x3b58>
   15014:	ldr	r3, [r4, #8]
   15018:	mov	r2, r5
   1501c:	cmp	r5, r3
   15020:	mov	r0, sl
   15024:	bgt	15034 <close@plt+0x3b58>
   15028:	bl	114b8 <strncmp@plt>
   1502c:	cmp	r0, #0
   15030:	beq	1508c <close@plt+0x3bb0>
   15034:	ldr	r1, [r4, #20]!
   15038:	cmp	r1, #0
   1503c:	bne	15008 <close@plt+0x3b2c>
   15040:	ldr	r4, [pc, #108]	; 150b4 <close@plt+0x3bd8>
   15044:	ldr	r3, [pc, #108]	; 150b8 <close@plt+0x3bdc>
   15048:	str	r8, [sp, #4]
   1504c:	ldr	r2, [pc, #104]	; 150bc <close@plt+0x3be0>
   15050:	ldr	r3, [r3]
   15054:	ldr	r0, [r4]
   15058:	mov	r1, #1
   1505c:	str	r7, [sp]
   15060:	bl	11410 <__fprintf_chk@plt>
   15064:	ldr	r0, [r4]
   15068:	ldr	r3, [r6]
   1506c:	ldr	r2, [pc, #76]	; 150c0 <close@plt+0x3be4>
   15070:	mov	r1, #1
   15074:	bl	11410 <__fprintf_chk@plt>
   15078:	mov	r0, #1
   1507c:	add	sp, sp, #8
   15080:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15084:	mov	r0, #1
   15088:	bx	lr
   1508c:	ldr	lr, [r4, #12]
   15090:	mov	r3, r6
   15094:	mov	r2, r9
   15098:	mov	r1, r8
   1509c:	mov	r0, r7
   150a0:	mov	ip, lr
   150a4:	add	sp, sp, #8
   150a8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   150ac:	bx	ip
   150b0:	andeq	r8, r2, r0, asr #2
   150b4:	strdeq	r8, [r2], -r0
   150b8:	andeq	r8, r2, ip, ror #14
   150bc:	strdeq	r5, [r1], -r0
   150c0:	andeq	r6, r1, ip, lsl #8
   150c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150c8:	cmp	r2, #2
   150cc:	sub	sp, sp, #8192	; 0x2000
   150d0:	ldr	r2, [pc, #1000]	; 154c0 <close@plt+0x3fe4>
   150d4:	sub	sp, sp, #44	; 0x2c
   150d8:	mov	r4, r3
   150dc:	add	r3, sp, #8192	; 0x2000
   150e0:	ldr	ip, [r2]
   150e4:	add	r3, r3, #36	; 0x24
   150e8:	mov	r2, #0
   150ec:	str	ip, [r3]
   150f0:	str	r2, [sp, #32]
   150f4:	bne	15314 <close@plt+0x3e38>
   150f8:	ldr	ip, [r4, #4]
   150fc:	cmp	ip, r2
   15100:	beq	15314 <close@plt+0x3e38>
   15104:	ldr	r3, [r4]
   15108:	add	r2, sp, #32
   1510c:	str	ip, [sp, #28]
   15110:	stm	sp, {r1, r3}
   15114:	mov	r3, r0
   15118:	ldr	r1, [pc, #932]	; 154c4 <close@plt+0x3fe8>
   1511c:	add	r0, sp, #28
   15120:	bl	12598 <close@plt+0x10bc>
   15124:	subs	r3, r0, #0
   15128:	str	r3, [sp, #16]
   1512c:	beq	15460 <close@plt+0x3f84>
   15130:	ldr	r3, [pc, #912]	; 154c8 <close@plt+0x3fec>
   15134:	ldr	r3, [r3]
   15138:	cmp	r3, #0
   1513c:	str	r3, [sp, #20]
   15140:	bne	15438 <close@plt+0x3f5c>
   15144:	mov	r3, #0
   15148:	str	r3, [sp, #8]
   1514c:	str	r3, [sp, #12]
   15150:	ldr	r3, [pc, #884]	; 154cc <close@plt+0x3ff0>
   15154:	ldr	r3, [r3]
   15158:	cmp	r3, #0
   1515c:	bne	152fc <close@plt+0x3e20>
   15160:	ldr	r2, [sp, #20]
   15164:	strb	r3, [sp, #36]	; 0x24
   15168:	cmp	r2, #0
   1516c:	bne	1540c <close@plt+0x3f30>
   15170:	add	r0, sp, #36	; 0x24
   15174:	ldr	r2, [sp, #16]
   15178:	mov	r1, #8192	; 0x2000
   1517c:	bl	111d0 <fgets@plt>
   15180:	cmp	r0, #0
   15184:	beq	152fc <close@plt+0x3e20>
   15188:	add	r0, sp, #36	; 0x24
   1518c:	bl	11350 <strlen@plt>
   15190:	ldr	r3, [sp, #8]
   15194:	add	r3, r3, #1
   15198:	str	r3, [sp, #8]
   1519c:	cmp	r0, #0
   151a0:	beq	15150 <close@plt+0x3c74>
   151a4:	ldrb	r3, [sp, #36]	; 0x24
   151a8:	cmp	r3, #35	; 0x23
   151ac:	beq	15150 <close@plt+0x3c74>
   151b0:	add	r3, sp, #40	; 0x28
   151b4:	sub	r2, r0, #1
   151b8:	add	r2, r3, r2
   151bc:	ldrb	r3, [r2, #-4]
   151c0:	cmp	r3, #10
   151c4:	bne	1546c <close@plt+0x3f90>
   151c8:	mov	sl, #0
   151cc:	mov	r0, #16
   151d0:	strb	sl, [r2, #-4]
   151d4:	bl	112c0 <malloc@plt>
   151d8:	subs	r6, r0, #0
   151dc:	beq	153bc <close@plt+0x3ee0>
   151e0:	add	r5, sp, #36	; 0x24
   151e4:	mov	r8, sl
   151e8:	mov	r7, #4
   151ec:	cmp	r5, #0
   151f0:	mov	r9, sl
   151f4:	beq	15384 <close@plt+0x3ea8>
   151f8:	ldrb	r4, [r5]
   151fc:	cmp	r4, #0
   15200:	beq	1538c <close@plt+0x3eb0>
   15204:	tst	r4, #128	; 0x80
   15208:	bne	15428 <close@plt+0x3f4c>
   1520c:	bl	1132c <__ctype_b_loc@plt>
   15210:	mov	fp, r5
   15214:	ldr	r2, [r0]
   15218:	b	15230 <close@plt+0x3d54>
   1521c:	ldrb	r4, [fp, #1]!
   15220:	cmp	r4, #0
   15224:	beq	15390 <close@plt+0x3eb4>
   15228:	tst	r4, #128	; 0x80
   1522c:	bne	1542c <close@plt+0x3f50>
   15230:	lsl	r4, r4, #1
   15234:	ldrh	r3, [r2, r4]
   15238:	tst	r3, #8192	; 0x2000
   1523c:	bne	1521c <close@plt+0x3d40>
   15240:	ldrb	r4, [fp]
   15244:	cmp	r4, #0
   15248:	moveq	r5, fp
   1524c:	beq	15290 <close@plt+0x3db4>
   15250:	tst	r4, #128	; 0x80
   15254:	bne	1542c <close@plt+0x3f50>
   15258:	bl	1132c <__ctype_b_loc@plt>
   1525c:	mov	r5, fp
   15260:	ldr	r2, [r0]
   15264:	b	1527c <close@plt+0x3da0>
   15268:	ldrb	r4, [r5, #1]!
   1526c:	cmp	r4, #0
   15270:	beq	15290 <close@plt+0x3db4>
   15274:	tst	r4, #128	; 0x80
   15278:	bne	15290 <close@plt+0x3db4>
   1527c:	lsl	r4, r4, #1
   15280:	ldrh	r3, [r2, r4]
   15284:	tst	r3, #8192	; 0x2000
   15288:	beq	15268 <close@plt+0x3d8c>
   1528c:	ldrb	r4, [r5]
   15290:	cmp	sl, r7
   15294:	strb	r8, [r5]
   15298:	beq	153a4 <close@plt+0x3ec8>
   1529c:	cmp	r4, #0
   152a0:	addne	r5, r5, #1
   152a4:	cmp	r5, fp
   152a8:	str	fp, [r6, sl, lsl #2]
   152ac:	add	r1, r6, sl, lsl #2
   152b0:	add	sl, sl, #1
   152b4:	bne	151ec <close@plt+0x3d10>
   152b8:	mov	r3, #0
   152bc:	str	r3, [r1]
   152c0:	mov	r2, r9
   152c4:	mov	r3, r6
   152c8:	ldr	r1, [sp, #8]
   152cc:	ldr	r0, [sp, #28]
   152d0:	bl	14fb8 <close@plt+0x3adc>
   152d4:	ldr	r2, [sp, #12]
   152d8:	mov	r3, r0
   152dc:	add	r3, r2, r3
   152e0:	mov	r0, r6
   152e4:	str	r3, [sp, #12]
   152e8:	bl	111c4 <free@plt>
   152ec:	ldr	r3, [pc, #472]	; 154cc <close@plt+0x3ff0>
   152f0:	ldr	r3, [r3]
   152f4:	cmp	r3, #0
   152f8:	beq	15160 <close@plt+0x3c84>
   152fc:	ldr	r3, [sp, #32]
   15300:	cmp	r3, #0
   15304:	bne	15358 <close@plt+0x3e7c>
   15308:	ldr	r0, [sp, #16]
   1530c:	bl	11428 <fclose@plt>
   15310:	b	15358 <close@plt+0x3e7c>
   15314:	ldr	r5, [pc, #436]	; 154d0 <close@plt+0x3ff4>
   15318:	ldr	r3, [pc, #436]	; 154d4 <close@plt+0x3ff8>
   1531c:	str	r1, [sp, #4]
   15320:	ldr	r2, [r5]
   15324:	ldr	r3, [r3]
   15328:	mov	r1, #1
   1532c:	str	r0, [sp]
   15330:	mov	r0, r2
   15334:	ldr	r2, [pc, #412]	; 154d8 <close@plt+0x3ffc>
   15338:	bl	11410 <__fprintf_chk@plt>
   1533c:	ldr	r3, [r4]
   15340:	ldr	r0, [r5]
   15344:	ldr	r2, [pc, #400]	; 154dc <close@plt+0x4000>
   15348:	mov	r1, #1
   1534c:	bl	11410 <__fprintf_chk@plt>
   15350:	mov	r3, #1
   15354:	str	r3, [sp, #12]
   15358:	add	r3, sp, #8192	; 0x2000
   1535c:	add	r3, r3, #36	; 0x24
   15360:	ldr	r2, [r3]
   15364:	ldr	r3, [pc, #340]	; 154c0 <close@plt+0x3fe4>
   15368:	ldr	r0, [sp, #12]
   1536c:	ldr	r3, [r3]
   15370:	cmp	r2, r3
   15374:	bne	154bc <close@plt+0x3fe0>
   15378:	add	sp, sp, #8192	; 0x2000
   1537c:	add	sp, sp, #44	; 0x2c
   15380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15384:	ldrb	r3, [r5]
   15388:	udf	#0
   1538c:	mov	fp, r5
   15390:	mov	r5, fp
   15394:	cmp	sl, r7
   15398:	mov	r4, #0
   1539c:	strb	r8, [r5]
   153a0:	bne	1529c <close@plt+0x3dc0>
   153a4:	add	r7, sl, #4
   153a8:	mov	r0, r6
   153ac:	lsl	r1, r7, #2
   153b0:	bl	11254 <realloc@plt>
   153b4:	subs	r6, r0, #0
   153b8:	bne	1529c <close@plt+0x3dc0>
   153bc:	ldr	r4, [pc, #268]	; 154d0 <close@plt+0x3ff4>
   153c0:	ldr	r3, [pc, #268]	; 154d4 <close@plt+0x3ff8>
   153c4:	ldr	r2, [sp, #28]
   153c8:	ldr	r1, [sp, #8]
   153cc:	ldr	r3, [r3]
   153d0:	ldr	r0, [r4]
   153d4:	str	r1, [sp, #4]
   153d8:	str	r2, [sp]
   153dc:	mov	r1, #1
   153e0:	ldr	r2, [pc, #240]	; 154d8 <close@plt+0x3ffc>
   153e4:	bl	11410 <__fprintf_chk@plt>
   153e8:	ldr	ip, [sp, #12]
   153ec:	mov	r1, #1
   153f0:	add	ip, ip, r1
   153f4:	ldr	r3, [r4]
   153f8:	mov	r2, #32
   153fc:	ldr	r0, [pc, #220]	; 154e0 <close@plt+0x4004>
   15400:	str	ip, [sp, #12]
   15404:	bl	11284 <fwrite@plt>
   15408:	b	15150 <close@plt+0x3c74>
   1540c:	ldr	r1, [pc, #208]	; 154e4 <close@plt+0x4008>
   15410:	mov	r0, #1
   15414:	bl	113d4 <__printf_chk@plt>
   15418:	ldr	r3, [pc, #200]	; 154e8 <close@plt+0x400c>
   1541c:	ldr	r0, [r3]
   15420:	bl	111b8 <fflush@plt>
   15424:	b	15170 <close@plt+0x3c94>
   15428:	mov	fp, r5
   1542c:	ldrb	r4, [fp]
   15430:	mov	r5, fp
   15434:	b	15290 <close@plt+0x3db4>
   15438:	ldr	r3, [sp, #32]
   1543c:	cmp	r3, #0
   15440:	str	r3, [sp, #20]
   15444:	beq	15144 <close@plt+0x3c68>
   15448:	bl	113f8 <fileno@plt>
   1544c:	bl	114a0 <isatty@plt>
   15450:	adds	r3, r0, #0
   15454:	movne	r3, #1
   15458:	str	r3, [sp, #20]
   1545c:	b	15144 <close@plt+0x3c68>
   15460:	mov	r3, #1
   15464:	str	r3, [sp, #12]
   15468:	b	15358 <close@plt+0x3e7c>
   1546c:	ldr	r4, [pc, #92]	; 154d0 <close@plt+0x3ff4>
   15470:	ldr	r3, [pc, #92]	; 154d4 <close@plt+0x3ff8>
   15474:	ldr	r2, [sp, #28]
   15478:	ldr	r1, [sp, #8]
   1547c:	ldr	r3, [r3]
   15480:	ldr	r0, [r4]
   15484:	str	r1, [sp, #4]
   15488:	str	r2, [sp]
   1548c:	mov	r1, #1
   15490:	ldr	r2, [pc, #64]	; 154d8 <close@plt+0x3ffc>
   15494:	bl	11410 <__fprintf_chk@plt>
   15498:	ldr	ip, [sp, #12]
   1549c:	mov	r1, #1
   154a0:	add	ip, ip, r1
   154a4:	ldr	r3, [r4]
   154a8:	mov	r2, #14
   154ac:	ldr	r0, [pc, #56]	; 154ec <close@plt+0x4010>
   154b0:	str	ip, [sp, #12]
   154b4:	bl	11284 <fwrite@plt>
   154b8:	b	152fc <close@plt+0x3e20>
   154bc:	bl	1123c <__stack_chk_fail@plt>
   154c0:	andeq	r7, r2, r8, ror #29
   154c4:	andeq	r6, r1, r8, ror #3
   154c8:	andeq	r8, r2, ip, ror #5
   154cc:	andeq	r8, r2, r8, lsr r3
   154d0:	strdeq	r8, [r2], -r0
   154d4:	andeq	r8, r2, ip, ror #14
   154d8:	strdeq	r5, [r1], -r0
   154dc:	strdeq	r5, [r1], -r0
   154e0:	andeq	r6, r1, ip, lsr r4
   154e4:	andeq	r6, r1, r4, lsr #8
   154e8:	strdeq	r8, [r2], -ip
   154ec:	andeq	r6, r1, ip, lsr #8
   154f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154f4:	cmp	r2, #0
   154f8:	ldr	r4, [pc, #248]	; 155f8 <close@plt+0x411c>
   154fc:	ldr	r6, [pc, #248]	; 155fc <close@plt+0x4120>
   15500:	movne	r6, r2
   15504:	subs	r7, r1, #0
   15508:	sub	sp, sp, #16
   1550c:	mov	r9, r0
   15510:	ldr	r1, [r4, #4]
   15514:	beq	1559c <close@plt+0x40c0>
   15518:	mov	r0, r7
   1551c:	str	r1, [sp, #12]
   15520:	bl	11350 <strlen@plt>
   15524:	ldr	r1, [sp, #12]
   15528:	cmp	r1, #0
   1552c:	mov	r8, r0
   15530:	beq	155e8 <close@plt+0x410c>
   15534:	ldr	sl, [pc, #196]	; 15600 <close@plt+0x4124>
   15538:	add	r4, r4, #4
   1553c:	mov	r5, #0
   15540:	b	15550 <close@plt+0x4074>
   15544:	ldr	r1, [r4, #20]!
   15548:	cmp	r1, #0
   1554c:	beq	15590 <close@plt+0x40b4>
   15550:	mov	r2, r8
   15554:	mov	r0, r7
   15558:	bl	114b8 <strncmp@plt>
   1555c:	cmp	r0, #0
   15560:	bne	15544 <close@plt+0x4068>
   15564:	ldr	r2, [r4, #16]
   15568:	mov	r1, #1
   1556c:	str	r2, [sp]
   15570:	mov	r3, r6
   15574:	mov	r2, sl
   15578:	mov	r0, r9
   1557c:	bl	11410 <__fprintf_chk@plt>
   15580:	ldr	r1, [r4, #20]!
   15584:	add	r5, r5, #1
   15588:	cmp	r1, #0
   1558c:	bne	15550 <close@plt+0x4074>
   15590:	mov	r0, r5
   15594:	add	sp, sp, #16
   15598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1559c:	cmp	r1, #0
   155a0:	beq	155e8 <close@plt+0x410c>
   155a4:	ldr	r8, [pc, #84]	; 15600 <close@plt+0x4124>
   155a8:	add	r4, r4, #4
   155ac:	mov	r5, r7
   155b0:	ldr	r2, [r4, #16]
   155b4:	mov	r3, r6
   155b8:	str	r2, [sp]
   155bc:	mov	r1, #1
   155c0:	mov	r2, r8
   155c4:	mov	r0, r9
   155c8:	bl	11410 <__fprintf_chk@plt>
   155cc:	ldr	r3, [r4, #20]!
   155d0:	add	r5, r5, #1
   155d4:	cmp	r3, #0
   155d8:	bne	155b0 <close@plt+0x40d4>
   155dc:	mov	r0, r5
   155e0:	add	sp, sp, #16
   155e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155e8:	mov	r5, r1
   155ec:	mov	r0, r5
   155f0:	add	sp, sp, #16
   155f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155f8:	andeq	r8, r2, r0, asr #2
   155fc:			; <UNDEFINED> instruction: 0x000164bc
   15600:	andeq	r6, r1, r0, ror #8
   15604:	ldr	ip, [pc, #356]	; 15770 <close@plt+0x4294>
   15608:	cmp	r2, #1
   1560c:	push	{r4, r5, r6, r7, r8, lr}
   15610:	mov	r6, r0
   15614:	sub	sp, sp, #8
   15618:	mov	r7, r1
   1561c:	ldr	r0, [ip]
   15620:	ble	156f8 <close@plt+0x421c>
   15624:	ldr	r5, [r3, #4]
   15628:	ldr	r2, [pc, #324]	; 15774 <close@plt+0x4298>
   1562c:	mov	r1, r5
   15630:	bl	154f0 <close@plt+0x4014>
   15634:	subs	r4, r0, #0
   15638:	blt	15718 <close@plt+0x423c>
   1563c:	clz	r3, r5
   15640:	lsr	r3, r3, #5
   15644:	cmp	r4, #0
   15648:	movne	r3, #0
   1564c:	cmp	r3, #0
   15650:	beq	156a8 <close@plt+0x41cc>
   15654:	ldr	r4, [pc, #284]	; 15778 <close@plt+0x429c>
   15658:	ldr	r3, [pc, #284]	; 1577c <close@plt+0x42a0>
   1565c:	str	r7, [sp, #4]
   15660:	ldr	r2, [pc, #280]	; 15780 <close@plt+0x42a4>
   15664:	ldr	r3, [r3]
   15668:	ldr	r0, [r4]
   1566c:	mov	r1, #1
   15670:	str	r6, [sp]
   15674:	bl	11410 <__fprintf_chk@plt>
   15678:	ldr	r3, [r4]
   1567c:	mov	r2, #24
   15680:	mov	r1, #1
   15684:	ldr	r0, [pc, #248]	; 15784 <close@plt+0x42a8>
   15688:	bl	11284 <fwrite@plt>
   1568c:	ldr	r1, [r4]
   15690:	mov	r0, #10
   15694:	bl	11458 <fputc@plt>
   15698:	mov	r4, #1
   1569c:	mov	r0, r4
   156a0:	add	sp, sp, #8
   156a4:	pop	{r4, r5, r6, r7, r8, pc}
   156a8:	cmp	r4, #0
   156ac:	movne	r4, r3
   156b0:	bne	1569c <close@plt+0x41c0>
   156b4:	ldr	r8, [pc, #188]	; 15778 <close@plt+0x429c>
   156b8:	ldr	r3, [pc, #188]	; 1577c <close@plt+0x42a0>
   156bc:	str	r7, [sp, #4]
   156c0:	ldr	r0, [r8]
   156c4:	ldr	r3, [r3]
   156c8:	ldr	r2, [pc, #176]	; 15780 <close@plt+0x42a4>
   156cc:	str	r6, [sp]
   156d0:	mov	r1, #1
   156d4:	bl	11410 <__fprintf_chk@plt>
   156d8:	mov	r3, r5
   156dc:	ldr	r0, [r8]
   156e0:	ldr	r2, [pc, #160]	; 15788 <close@plt+0x42ac>
   156e4:	mov	r1, #1
   156e8:	bl	11410 <__fprintf_chk@plt>
   156ec:	mov	r0, r4
   156f0:	add	sp, sp, #8
   156f4:	pop	{r4, r5, r6, r7, r8, pc}
   156f8:	ldr	r2, [pc, #116]	; 15774 <close@plt+0x4298>
   156fc:	mov	r1, #0
   15700:	bl	154f0 <close@plt+0x4014>
   15704:	subs	r4, r0, #0
   15708:	blt	15654 <close@plt+0x4178>
   1570c:	mov	r3, #1
   15710:	mov	r5, #0
   15714:	b	15644 <close@plt+0x4168>
   15718:	ldr	r4, [pc, #88]	; 15778 <close@plt+0x429c>
   1571c:	ldr	r3, [pc, #88]	; 1577c <close@plt+0x42a0>
   15720:	str	r7, [sp, #4]
   15724:	ldr	r2, [pc, #84]	; 15780 <close@plt+0x42a4>
   15728:	ldr	r3, [r3]
   1572c:	ldr	r0, [r4]
   15730:	mov	r1, #1
   15734:	str	r6, [sp]
   15738:	bl	11410 <__fprintf_chk@plt>
   1573c:	ldr	r3, [r4]
   15740:	mov	r2, #24
   15744:	mov	r1, #1
   15748:	ldr	r0, [pc, #52]	; 15784 <close@plt+0x42a8>
   1574c:	bl	11284 <fwrite@plt>
   15750:	cmp	r5, #0
   15754:	beq	1568c <close@plt+0x41b0>
   15758:	mov	r3, r5
   1575c:	ldr	r2, [pc, #40]	; 1578c <close@plt+0x42b0>
   15760:	mov	r1, #1
   15764:	ldr	r0, [r4]
   15768:	bl	11410 <__fprintf_chk@plt>
   1576c:	b	1568c <close@plt+0x41b0>
   15770:	strdeq	r8, [r2], -ip
   15774:	muleq	r1, r8, sp
   15778:	strdeq	r8, [r2], -r0
   1577c:	andeq	r8, r2, ip, ror #14
   15780:	strdeq	r5, [r1], -r0
   15784:	andeq	r6, r1, r8, ror #8
   15788:	muleq	r1, r8, r4
   1578c:	andeq	r6, r1, r4, lsl #9
   15790:	ldr	r3, [pc, #160]	; 15838 <close@plt+0x435c>
   15794:	ldr	r4, [pc, #160]	; 1583c <close@plt+0x4360>
   15798:	push	{r7, lr}
   1579c:	mov	r1, #1
   157a0:	ldr	r7, [pc, #152]	; 15840 <close@plt+0x4364>
   157a4:	ldr	r3, [r3]
   157a8:	ldr	r0, [r4]
   157ac:	ldr	r2, [pc, #144]	; 15844 <close@plt+0x4368>
   157b0:	bl	11410 <__fprintf_chk@plt>
   157b4:	ldr	r3, [r7]
   157b8:	cmp	r3, #0
   157bc:	beq	157e4 <close@plt+0x4308>
   157c0:	ldr	r6, [pc, #128]	; 15848 <close@plt+0x436c>
   157c4:	mov	r5, r7
   157c8:	mov	r2, r6
   157cc:	mov	r1, #1
   157d0:	ldr	r0, [r4]
   157d4:	bl	11410 <__fprintf_chk@plt>
   157d8:	ldr	r3, [r5, #4]!
   157dc:	cmp	r3, #0
   157e0:	bne	157c8 <close@plt+0x42ec>
   157e4:	ldr	r2, [pc, #96]	; 1584c <close@plt+0x4370>
   157e8:	mov	r1, #0
   157ec:	ldr	r0, [r4]
   157f0:	bl	154f0 <close@plt+0x4014>
   157f4:	ldr	r1, [r4]
   157f8:	mov	r0, #10
   157fc:	bl	11458 <fputc@plt>
   15800:	ldr	r3, [r7, #52]	; 0x34
   15804:	cmp	r3, #0
   15808:	beq	15830 <close@plt+0x4354>
   1580c:	ldr	r5, [pc, #60]	; 15850 <close@plt+0x4374>
   15810:	ldr	r6, [pc, #48]	; 15848 <close@plt+0x436c>
   15814:	mov	r2, r6
   15818:	mov	r1, #1
   1581c:	ldr	r0, [r4]
   15820:	bl	11410 <__fprintf_chk@plt>
   15824:	ldr	r3, [r5, #4]!
   15828:	cmp	r3, #0
   1582c:	bne	15814 <close@plt+0x4338>
   15830:	mov	r0, #1
   15834:	bl	11338 <exit@plt>
   15838:	andeq	r8, r2, ip, ror #14
   1583c:	strdeq	r8, [r2], -r0
   15840:	muleq	r2, ip, r2
   15844:	andeq	r6, r1, ip, lsl #28
   15848:	ldrdeq	r6, [r1], -r4
   1584c:	muleq	r1, r8, sp
   15850:	ldrdeq	r8, [r2], -r0
   15854:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15858:	mov	r7, r0
   1585c:	ldr	r6, [pc, #72]	; 158ac <close@plt+0x43d0>
   15860:	ldr	r5, [pc, #72]	; 158b0 <close@plt+0x43d4>
   15864:	add	r6, pc, r6
   15868:	add	r5, pc, r5
   1586c:	sub	r6, r6, r5
   15870:	mov	r8, r1
   15874:	mov	r9, r2
   15878:	bl	11150 <_init@@Base>
   1587c:	asrs	r6, r6, #2
   15880:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15884:	mov	r4, #0
   15888:	add	r4, r4, #1
   1588c:	ldr	r3, [r5], #4
   15890:	mov	r2, r9
   15894:	mov	r1, r8
   15898:	mov	r0, r7
   1589c:	blx	r3
   158a0:	cmp	r6, r4
   158a4:	bne	15888 <close@plt+0x43ac>
   158a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   158ac:	andeq	r2, r1, r8, ror r6
   158b0:	andeq	r2, r1, r0, ror r6
   158b4:	bx	lr

Disassembly of section .fini:

000158b8 <_fini@@Base>:
   158b8:	push	{r3, lr}
   158bc:	pop	{r3, pc}
