
raspbian-preinstalled/systemd-machine-id-setup:     file format elf32-littlearm


Disassembly of section .init:

00000cd8 <.init>:
 cd8:	push	{r3, lr}
 cdc:	bl	1040 <log_oom_internal@plt+0xd8>
 ce0:	pop	{r3, pc}

Disassembly of section .plt:

00000ce4 <path_is_mount_point@plt-0x14>:
 ce4:	push	{lr}		; (str lr, [sp, #-4]!)
 ce8:	ldr	lr, [pc, #4]	; cf4 <path_is_mount_point@plt-0x4>
 cec:	add	lr, pc, lr
 cf0:	ldr	pc, [lr, #8]!
 cf4:	strdeq	r3, [r1], -r8

00000cf8 <path_is_mount_point@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #77824	; 0x13000
 d00:	ldr	pc, [ip, #504]!	; 0x1f8

00000d04 <ftruncate64@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #77824	; 0x13000
 d0c:	ldr	pc, [ip, #496]!	; 0x1f0

00000d10 <version@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #77824	; 0x13000
 d18:	ldr	pc, [ip, #488]!	; 0x1e8

00000d1c <free@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #480]!	; 0x1e0

00000d28 <getenv_for_pid@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #472]!	; 0x1d8

00000d34 <log_open@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #464]!	; 0x1d0

00000d40 <log_assert_failed_unreachable_realm@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #456]!	; 0x1c8

00000d4c <detect_vm@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #448]!	; 0x1c0

00000d58 <parse_path_argument_and_warn@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #440]!	; 0x1b8

00000d64 <ask_password_agent_close@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #432]!	; 0x1b0

00000d70 <polkit_agent_close@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #424]!	; 0x1a8

00000d7c <mac_selinux_finish@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #416]!	; 0x1a0

00000d88 <namespace_enter@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #408]!	; 0x198

00000d94 <stpcpy@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #400]!	; 0x190

00000da0 <puts@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #392]!	; 0x188

00000dac <id128_read@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #384]!	; 0x180

00000db8 <id128_write_fd@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #376]!	; 0x178

00000dc4 <sd_id128_from_string@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #368]!	; 0x170

00000dd0 <log_get_max_level_realm@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #360]!	; 0x168

00000ddc <fd_is_temporary_fs@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #352]!	; 0x160

00000de8 <unshare@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #344]!	; 0x158

00000df4 <abort@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #336]!	; 0x150

00000e00 <unlink@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #328]!	; 0x148

00000e0c <empty_or_root@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #320]!	; 0x140

00000e18 <open64@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #77824	; 0x13000
 e20:	ldr	pc, [ip, #312]!	; 0x138

00000e24 <id128_write@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #77824	; 0x13000
 e2c:	ldr	pc, [ip, #304]!	; 0x130

00000e30 <safe_close@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #77824	; 0x13000
 e38:	ldr	pc, [ip, #296]!	; 0x128

00000e3c <__stack_chk_fail@plt>:
 e3c:	add	ip, pc, #0, 12
 e40:	add	ip, ip, #77824	; 0x13000
 e44:	ldr	pc, [ip, #288]!	; 0x120

00000e48 <terminal_urlify_man@plt>:
 e48:	add	ip, pc, #0, 12
 e4c:	add	ip, ip, #77824	; 0x13000
 e50:	ldr	pc, [ip, #280]!	; 0x118

00000e54 <namespace_open@plt>:
 e54:	add	ip, pc, #0, 12
 e58:	add	ip, ip, #77824	; 0x13000
 e5c:	ldr	pc, [ip, #272]!	; 0x110

00000e60 <sd_id128_randomize@plt>:
 e60:	add	ip, pc, #0, 12
 e64:	add	ip, ip, #77824	; 0x13000
 e68:	ldr	pc, [ip, #264]!	; 0x108

00000e6c <getopt_long@plt>:
 e6c:	add	ip, pc, #0, 12
 e70:	add	ip, ip, #77824	; 0x13000
 e74:	ldr	pc, [ip, #256]!	; 0x100

00000e78 <mkdir_parents@plt>:
 e78:	add	ip, pc, #0, 12
 e7c:	add	ip, ip, #77824	; 0x13000
 e80:	ldr	pc, [ip, #248]!	; 0xf8

00000e84 <pager_close@plt>:
 e84:	add	ip, pc, #0, 12
 e88:	add	ip, ip, #77824	; 0x13000
 e8c:	ldr	pc, [ip, #240]!	; 0xf0

00000e90 <umount2@plt>:
 e90:	add	ip, pc, #0, 12
 e94:	add	ip, ip, #77824	; 0x13000
 e98:	ldr	pc, [ip, #232]!	; 0xe8

00000e9c <umount@plt>:
 e9c:	add	ip, pc, #0, 12
 ea0:	add	ip, ip, #77824	; 0x13000
 ea4:	ldr	pc, [ip, #224]!	; 0xe0

00000ea8 <umask@plt>:
 ea8:	add	ip, pc, #0, 12
 eac:	add	ip, ip, #77824	; 0x13000
 eb0:	ldr	pc, [ip, #216]!	; 0xd8

00000eb4 <strlen@plt>:
 eb4:	add	ip, pc, #0, 12
 eb8:	add	ip, ip, #77824	; 0x13000
 ebc:	ldr	pc, [ip, #208]!	; 0xd0

00000ec0 <lseek64@plt>:
 ec0:	add	ip, pc, #0, 12
 ec4:	add	ip, ip, #77824	; 0x13000
 ec8:	ldr	pc, [ip, #200]!	; 0xc8

00000ecc <detect_container@plt>:
 ecc:	add	ip, pc, #0, 12
 ed0:	add	ip, ip, #77824	; 0x13000
 ed4:	ldr	pc, [ip, #192]!	; 0xc0

00000ed8 <log_parse_environment_realm@plt>:
 ed8:	add	ip, pc, #0, 12
 edc:	add	ip, ip, #77824	; 0x13000
 ee0:	ldr	pc, [ip, #184]!	; 0xb8

00000ee4 <__errno_location@plt>:
 ee4:	add	ip, pc, #0, 12
 ee8:	add	ip, ip, #77824	; 0x13000
 eec:	ldr	pc, [ip, #176]!	; 0xb0

00000ef0 <id128_read_fd@plt>:
 ef0:	add	ip, pc, #0, 12
 ef4:	add	ip, ip, #77824	; 0x13000
 ef8:	ldr	pc, [ip, #168]!	; 0xa8

00000efc <mount@plt>:
 efc:	add	ip, pc, #0, 12
 f00:	add	ip, ip, #77824	; 0x13000
 f04:	ldr	pc, [ip, #160]!	; 0xa0

00000f08 <log_assert_failed_realm@plt>:
 f08:	add	ip, pc, #0, 12
 f0c:	add	ip, ip, #77824	; 0x13000
 f10:	ldr	pc, [ip, #152]!	; 0x98

00000f14 <log_internal_realm@plt>:
 f14:	add	ip, pc, #0, 12
 f18:	add	ip, ip, #77824	; 0x13000
 f1c:	ldr	pc, [ip, #144]!	; 0x90

00000f20 <unlink_noerrno@plt>:
 f20:	add	ip, pc, #0, 12
 f24:	add	ip, ip, #77824	; 0x13000
 f28:	ldr	pc, [ip, #136]!	; 0x88

00000f2c <__libc_start_main@plt>:
 f2c:	add	ip, pc, #0, 12
 f30:	add	ip, ip, #77824	; 0x13000
 f34:	ldr	pc, [ip, #128]!	; 0x80

00000f38 <__gmon_start__@plt>:
 f38:	add	ip, pc, #0, 12
 f3c:	add	ip, ip, #77824	; 0x13000
 f40:	ldr	pc, [ip, #120]!	; 0x78

00000f44 <__cxa_finalize@plt>:
 f44:	add	ip, pc, #0, 12
 f48:	add	ip, ip, #77824	; 0x13000
 f4c:	ldr	pc, [ip, #112]!	; 0x70

00000f50 <sd_id128_to_string@plt>:
 f50:	add	ip, pc, #0, 12
 f54:	add	ip, ip, #77824	; 0x13000
 f58:	ldr	pc, [ip, #104]!	; 0x68

00000f5c <__printf_chk@plt>:
 f5c:	add	ip, pc, #0, 12
 f60:	add	ip, ip, #77824	; 0x13000
 f64:	ldr	pc, [ip, #96]!	; 0x60

00000f68 <log_oom_internal@plt>:
 f68:	add	ip, pc, #0, 12
 f6c:	add	ip, ip, #77824	; 0x13000
 f70:	ldr	pc, [ip, #88]!	; 0x58

Disassembly of section .text:

00000f74 <.text>:
     f74:	push	{r4, r5, r6, lr}
     f78:	bl	24dc <log_oom_internal@plt+0x1574>
     f7c:	ldr	r2, [pc, #88]	; fdc <log_oom_internal@plt+0x74>
     f80:	ldr	r3, [pc, #88]	; fe0 <log_oom_internal@plt+0x78>
     f84:	add	r2, pc, r2
     f88:	ldr	r4, [r2, r3]
     f8c:	cmp	r4, #0
     f90:	mov	r6, r0
     f94:	beq	fc4 <log_oom_internal@plt+0x5c>
     f98:	ldr	r3, [pc, #68]	; fe4 <log_oom_internal@plt+0x7c>
     f9c:	add	r4, r4, #3
     fa0:	bic	r4, r4, #3
     fa4:	ldr	r5, [r2, r3]
     fa8:	cmp	r4, r5
     fac:	bcs	fc4 <log_oom_internal@plt+0x5c>
     fb0:	ldm	r4, {r0, r3}
     fb4:	add	r4, r4, #8
     fb8:	blx	r3
     fbc:	cmp	r4, r5
     fc0:	bcc	fb0 <log_oom_internal@plt+0x48>
     fc4:	bl	d64 <ask_password_agent_close@plt>
     fc8:	bl	d70 <polkit_agent_close@plt>
     fcc:	bl	d7c <mac_selinux_finish@plt>
     fd0:	bl	e84 <pager_close@plt>
     fd4:	lsr	r0, r6, #31
     fd8:	pop	{r4, r5, r6, pc}
     fdc:	andeq	r2, r1, r0, ror #30
     fe0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     fe4:	strdeq	r0, [r0], -r4
     fe8:	mov	fp, #0
     fec:	mov	lr, #0
     ff0:	pop	{r1}		; (ldr r1, [sp], #4)
     ff4:	mov	r2, sp
     ff8:	push	{r2}		; (str r2, [sp, #-4]!)
     ffc:	push	{r0}		; (str r0, [sp, #-4]!)
    1000:	ldr	sl, [pc, #40]	; 1030 <log_oom_internal@plt+0xc8>
    1004:	add	r3, pc, #36	; 0x24
    1008:	add	sl, sl, r3
    100c:	ldr	ip, [pc, #32]	; 1034 <log_oom_internal@plt+0xcc>
    1010:	ldr	ip, [sl, ip]
    1014:	push	{ip}		; (str ip, [sp, #-4]!)
    1018:	ldr	r3, [pc, #24]	; 1038 <log_oom_internal@plt+0xd0>
    101c:	ldr	r3, [sl, r3]
    1020:	ldr	r0, [pc, #20]	; 103c <log_oom_internal@plt+0xd4>
    1024:	ldr	r0, [sl, r0]
    1028:	bl	f2c <__libc_start_main@plt>
    102c:	bl	df4 <abort@plt>
    1030:			; <UNDEFINED> instruction: 0x00012ebc
    1034:	andeq	r0, r0, r0, lsl #2
    1038:	strdeq	r0, [r0], -r8
    103c:	andeq	r0, r0, r8, ror #1
    1040:	ldr	r3, [pc, #20]	; 105c <log_oom_internal@plt+0xf4>
    1044:	ldr	r2, [pc, #20]	; 1060 <log_oom_internal@plt+0xf8>
    1048:	add	r3, pc, r3
    104c:	ldr	r2, [r3, r2]
    1050:	cmp	r2, #0
    1054:	bxeq	lr
    1058:	b	f38 <__gmon_start__@plt>
    105c:	muleq	r1, ip, lr
    1060:	andeq	r0, r0, r8, lsl #2
    1064:	ldr	r0, [pc, #44]	; 1098 <log_oom_internal@plt+0x130>
    1068:	ldr	r3, [pc, #44]	; 109c <log_oom_internal@plt+0x134>
    106c:	add	r0, pc, r0
    1070:	add	r3, pc, r3
    1074:	cmp	r3, r0
    1078:	ldr	r3, [pc, #32]	; 10a0 <log_oom_internal@plt+0x138>
    107c:	add	r3, pc, r3
    1080:	bxeq	lr
    1084:	ldr	r2, [pc, #24]	; 10a4 <log_oom_internal@plt+0x13c>
    1088:	ldr	r3, [r3, r2]
    108c:	cmp	r3, #0
    1090:	bxeq	lr
    1094:	bx	r3
    1098:	muleq	r1, r0, pc	; <UNPREDICTABLE>
    109c:	andeq	r2, r1, ip, lsl #31
    10a0:	andeq	r2, r1, r8, ror #28
    10a4:	strdeq	r0, [r0], -ip
    10a8:	ldr	r0, [pc, #56]	; 10e8 <log_oom_internal@plt+0x180>
    10ac:	ldr	r3, [pc, #56]	; 10ec <log_oom_internal@plt+0x184>
    10b0:	add	r0, pc, r0
    10b4:	add	r3, pc, r3
    10b8:	sub	r1, r3, r0
    10bc:	ldr	r3, [pc, #44]	; 10f0 <log_oom_internal@plt+0x188>
    10c0:	asr	r1, r1, #2
    10c4:	add	r3, pc, r3
    10c8:	add	r1, r1, r1, lsr #31
    10cc:	asrs	r1, r1, #1
    10d0:	bxeq	lr
    10d4:	ldr	r2, [pc, #24]	; 10f4 <log_oom_internal@plt+0x18c>
    10d8:	ldr	r3, [r3, r2]
    10dc:	cmp	r3, #0
    10e0:	bxeq	lr
    10e4:	bx	r3
    10e8:	andeq	r2, r1, ip, asr #30
    10ec:	andeq	r2, r1, r8, asr #30
    10f0:	andeq	r2, r1, r0, lsr #28
    10f4:	andeq	r0, r0, ip, lsl #2
    10f8:	ldr	r3, [pc, #76]	; 114c <log_oom_internal@plt+0x1e4>
    10fc:	ldr	r2, [pc, #76]	; 1150 <log_oom_internal@plt+0x1e8>
    1100:	add	r3, pc, r3
    1104:	add	r2, pc, r2
    1108:	ldrb	r3, [r3]
    110c:	cmp	r3, #0
    1110:	bxne	lr
    1114:	ldr	r3, [pc, #56]	; 1154 <log_oom_internal@plt+0x1ec>
    1118:	push	{r4, lr}
    111c:	ldr	r3, [r2, r3]
    1120:	cmp	r3, #0
    1124:	beq	1134 <log_oom_internal@plt+0x1cc>
    1128:	ldr	r3, [pc, #40]	; 1158 <log_oom_internal@plt+0x1f0>
    112c:	ldr	r0, [pc, r3]
    1130:	bl	f44 <__cxa_finalize@plt>
    1134:	bl	1064 <log_oom_internal@plt+0xfc>
    1138:	ldr	r3, [pc, #28]	; 115c <log_oom_internal@plt+0x1f4>
    113c:	mov	r2, #1
    1140:	add	r3, pc, r3
    1144:	strb	r2, [r3]
    1148:	pop	{r4, pc}
    114c:	andeq	r2, r1, r4, lsl #30
    1150:	andeq	r2, r1, r0, ror #27
    1154:	andeq	r0, r0, r0, lsl r1
    1158:	andeq	r2, r1, ip, asr #29
    115c:	andeq	r2, r1, r4, asr #29
    1160:	b	10a8 <log_oom_internal@plt+0x140>
    1164:	ldr	r3, [pc, #1760]	; 184c <log_oom_internal@plt+0x8e4>
    1168:	ldr	r2, [pc, #1760]	; 1850 <log_oom_internal@plt+0x8e8>
    116c:	add	r3, pc, r3
    1170:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1174:	add	fp, sp, #28
    1178:	sub	sp, sp, #48	; 0x30
    117c:	ldr	r6, [r3, r2]
    1180:	mvn	r1, #0
    1184:	mov	r5, r0
    1188:	ldr	r3, [r6]
    118c:	str	r1, [fp, #-56]	; 0xffffffc8
    1190:	str	r3, [fp, #-32]	; 0xffffffe0
    1194:	bl	e0c <empty_or_root@plt>
    1198:	subs	r4, r0, #0
    119c:	bne	12a0 <log_oom_internal@plt+0x338>
    11a0:	mov	r0, r5
    11a4:	bl	eb4 <strlen@plt>
    11a8:	add	r3, r0, #17
    11ac:	cmp	r3, #4194304	; 0x400000
    11b0:	bhi	13cc <log_oom_internal@plt+0x464>
    11b4:	add	r0, r0, #31
    11b8:	bic	r0, r0, #7
    11bc:	sub	sp, sp, r0
    11c0:	add	r4, sp, #16
    11c4:	mov	r1, r5
    11c8:	mov	r0, r4
    11cc:	bl	d94 <stpcpy@plt>
    11d0:	cmp	r4, r0
    11d4:	mov	ip, r0
    11d8:	bcs	1208 <log_oom_internal@plt+0x2a0>
    11dc:	ldrb	r3, [r0, #-1]
    11e0:	cmp	r3, #47	; 0x2f
    11e4:	bne	1208 <log_oom_internal@plt+0x2a0>
    11e8:	sub	r0, r0, #1
    11ec:	b	11fc <log_oom_internal@plt+0x294>
    11f0:	ldrb	r3, [r0, #-1]!
    11f4:	cmp	r3, #47	; 0x2f
    11f8:	bne	1208 <log_oom_internal@plt+0x2a0>
    11fc:	cmp	r0, r4
    1200:	mov	ip, r0
    1204:	bne	11f0 <log_oom_internal@plt+0x288>
    1208:	ldr	lr, [pc, #1604]	; 1854 <log_oom_internal@plt+0x8ec>
    120c:	add	lr, pc, lr
    1210:	ldm	lr!, {r0, r1, r2, r3}
    1214:	str	r0, [ip]
    1218:	str	r1, [ip, #4]
    121c:	str	r2, [ip, #8]
    1220:	str	r3, [ip, #12]
    1224:	mov	r2, #0
    1228:	mov	r1, r2
    122c:	mov	r0, r4
    1230:	bl	cf8 <path_is_mount_point@plt>
    1234:	subs	r5, r0, #0
    1238:	blt	127c <log_oom_internal@plt+0x314>
    123c:	bne	12ac <log_oom_internal@plt+0x344>
    1240:	bl	dd0 <log_get_max_level_realm@plt>
    1244:	cmp	r0, #6
    1248:	mvnle	r7, #0
    124c:	bgt	12ec <log_oom_internal@plt+0x384>
    1250:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1254:	bl	e30 <safe_close@plt>
    1258:	mov	r0, r7
    125c:	bl	e30 <safe_close@plt>
    1260:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1264:	ldr	r3, [r6]
    1268:	mov	r0, r5
    126c:	cmp	r2, r3
    1270:	bne	16ec <log_oom_internal@plt+0x784>
    1274:	sub	sp, fp, #28
    1278:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    127c:	mov	r0, #0
    1280:	bl	dd0 <log_get_max_level_realm@plt>
    1284:	cmp	r0, #2
    1288:	bgt	132c <log_oom_internal@plt+0x3c4>
    128c:	rsb	r5, r5, #0
    1290:	mvn	r7, #0
    1294:	uxtb	r5, r5
    1298:	rsb	r5, r5, #0
    129c:	b	1250 <log_oom_internal@plt+0x2e8>
    12a0:	ldr	r4, [pc, #1456]	; 1858 <log_oom_internal@plt+0x8f0>
    12a4:	add	r4, pc, r4
    12a8:	b	1224 <log_oom_internal@plt+0x2bc>
    12ac:	ldr	r1, [pc, #1448]	; 185c <log_oom_internal@plt+0x8f4>
    12b0:	mov	r0, r4
    12b4:	bl	e18 <open64@plt>
    12b8:	subs	r7, r0, #0
    12bc:	bge	1370 <log_oom_internal@plt+0x408>
    12c0:	bl	ee4 <__errno_location@plt>
    12c4:	ldr	r5, [r0]
    12c8:	mov	r0, #0
    12cc:	bl	dd0 <log_get_max_level_realm@plt>
    12d0:	cmp	r0, #2
    12d4:	bgt	1430 <log_oom_internal@plt+0x4c8>
    12d8:	cmp	r5, #0
    12dc:	rsblt	r5, r5, #0
    12e0:	uxtb	r5, r5
    12e4:	rsb	r5, r5, #0
    12e8:	b	1250 <log_oom_internal@plt+0x2e8>
    12ec:	ldr	r2, [pc, #1388]	; 1860 <log_oom_internal@plt+0x8f8>
    12f0:	ldr	r3, [pc, #1388]	; 1864 <log_oom_internal@plt+0x8fc>
    12f4:	add	r2, pc, r2
    12f8:	str	r2, [sp, #4]
    12fc:	add	r3, pc, r3
    1300:	ldr	r2, [pc, #1376]	; 1868 <log_oom_internal@plt+0x900>
    1304:	add	r3, r3, #20
    1308:	str	r3, [sp]
    130c:	str	r4, [sp, #8]
    1310:	mov	r3, #191	; 0xbf
    1314:	add	r2, pc, r2
    1318:	mov	r1, r5
    131c:	mov	r0, #7
    1320:	bl	f14 <log_internal_realm@plt>
    1324:	mvn	r7, #0
    1328:	b	1250 <log_oom_internal@plt+0x2e8>
    132c:	ldr	r2, [pc, #1336]	; 186c <log_oom_internal@plt+0x904>
    1330:	ldr	r3, [pc, #1336]	; 1870 <log_oom_internal@plt+0x908>
    1334:	add	r2, pc, r2
    1338:	str	r2, [sp, #4]
    133c:	add	r3, pc, r3
    1340:	ldr	r2, [pc, #1324]	; 1874 <log_oom_internal@plt+0x90c>
    1344:	add	r3, r3, #20
    1348:	mov	r1, r5
    134c:	str	r3, [sp]
    1350:	str	r4, [sp, #8]
    1354:	mov	r3, #189	; 0xbd
    1358:	add	r2, pc, r2
    135c:	mov	r0, #3
    1360:	bl	f14 <log_internal_realm@plt>
    1364:	mvn	r7, #0
    1368:	mov	r5, r0
    136c:	b	1250 <log_oom_internal@plt+0x2e8>
    1370:	bl	ddc <fd_is_temporary_fs@plt>
    1374:	subs	r5, r0, #0
    1378:	blt	1470 <log_oom_internal@plt+0x508>
    137c:	bne	13f4 <log_oom_internal@plt+0x48c>
    1380:	bl	dd0 <log_get_max_level_realm@plt>
    1384:	cmp	r0, #2
    1388:	ble	1640 <log_oom_internal@plt+0x6d8>
    138c:	ldr	r2, [pc, #1252]	; 1878 <log_oom_internal@plt+0x910>
    1390:	ldr	r3, [pc, #1252]	; 187c <log_oom_internal@plt+0x914>
    1394:	add	r2, pc, r2
    1398:	str	r2, [sp, #4]
    139c:	add	r3, pc, r3
    13a0:	ldr	r2, [pc, #1240]	; 1880 <log_oom_internal@plt+0x918>
    13a4:	add	r3, r3, #20
    13a8:	str	r3, [sp]
    13ac:	str	r4, [sp, #8]
    13b0:	mov	r3, #206	; 0xce
    13b4:	add	r2, pc, r2
    13b8:	mov	r1, #1073741854	; 0x4000001e
    13bc:	mov	r0, #3
    13c0:	bl	f14 <log_internal_realm@plt>
    13c4:	mov	r5, r0
    13c8:	b	1250 <log_oom_internal@plt+0x2e8>
    13cc:	ldr	r3, [pc, #1200]	; 1884 <log_oom_internal@plt+0x91c>
    13d0:	ldr	r2, [pc, #1200]	; 1888 <log_oom_internal@plt+0x920>
    13d4:	ldr	r1, [pc, #1200]	; 188c <log_oom_internal@plt+0x924>
    13d8:	add	r3, pc, r3
    13dc:	str	r3, [sp]
    13e0:	mov	r0, r4
    13e4:	mov	r3, #185	; 0xb9
    13e8:	add	r2, pc, r2
    13ec:	add	r1, pc, r1
    13f0:	bl	f08 <log_assert_failed_realm@plt>
    13f4:	sub	r8, fp, #52	; 0x34
    13f8:	mov	r2, r8
    13fc:	mov	r1, #1
    1400:	mov	r0, r7
    1404:	bl	ef0 <id128_read_fd@plt>
    1408:	subs	r5, r0, #0
    140c:	bge	14c0 <log_oom_internal@plt+0x558>
    1410:	mov	r0, #0
    1414:	bl	dd0 <log_get_max_level_realm@plt>
    1418:	cmp	r0, #2
    141c:	bgt	1588 <log_oom_internal@plt+0x620>
    1420:	rsb	r5, r5, #0
    1424:	uxtb	r5, r5
    1428:	rsb	r5, r5, #0
    142c:	b	1250 <log_oom_internal@plt+0x2e8>
    1430:	ldr	r2, [pc, #1112]	; 1890 <log_oom_internal@plt+0x928>
    1434:	ldr	r3, [pc, #1112]	; 1894 <log_oom_internal@plt+0x92c>
    1438:	add	r2, pc, r2
    143c:	str	r2, [sp, #4]
    1440:	add	r3, pc, r3
    1444:	ldr	r2, [pc, #1100]	; 1898 <log_oom_internal@plt+0x930>
    1448:	add	r3, r3, #20
    144c:	mov	r1, r5
    1450:	str	r3, [sp]
    1454:	str	r4, [sp, #8]
    1458:	mov	r3, #198	; 0xc6
    145c:	add	r2, pc, r2
    1460:	mov	r0, #3
    1464:	bl	f14 <log_internal_realm@plt>
    1468:	mov	r5, r0
    146c:	b	1250 <log_oom_internal@plt+0x2e8>
    1470:	mov	r0, #0
    1474:	bl	dd0 <log_get_max_level_realm@plt>
    1478:	cmp	r0, #2
    147c:	ble	1420 <log_oom_internal@plt+0x4b8>
    1480:	ldr	r2, [pc, #1044]	; 189c <log_oom_internal@plt+0x934>
    1484:	ldr	r3, [pc, #1044]	; 18a0 <log_oom_internal@plt+0x938>
    1488:	add	r2, pc, r2
    148c:	str	r2, [sp, #4]
    1490:	add	r3, pc, r3
    1494:	ldr	r2, [pc, #1032]	; 18a4 <log_oom_internal@plt+0x93c>
    1498:	add	r3, r3, #20
    149c:	mov	r1, r5
    14a0:	str	r3, [sp]
    14a4:	str	r4, [sp, #8]
    14a8:	mov	r3, #202	; 0xca
    14ac:	add	r2, pc, r2
    14b0:	mov	r0, #3
    14b4:	bl	f14 <log_internal_realm@plt>
    14b8:	mov	r5, r0
    14bc:	b	1250 <log_oom_internal@plt+0x2e8>
    14c0:	mov	r0, r7
    14c4:	bl	e30 <safe_close@plt>
    14c8:	mov	r5, #0
    14cc:	str	r5, [sp, #4]
    14d0:	str	r5, [sp]
    14d4:	mov	r3, r5
    14d8:	mov	r1, r5
    14dc:	sub	r2, fp, #56	; 0x38
    14e0:	mov	r7, r0
    14e4:	mov	r0, r5
    14e8:	bl	e54 <namespace_open@plt>
    14ec:	subs	r9, r0, #0
    14f0:	bge	154c <log_oom_internal@plt+0x5e4>
    14f4:	mov	r0, r5
    14f8:	bl	dd0 <log_get_max_level_realm@plt>
    14fc:	cmp	r0, #2
    1500:	rsble	r5, r9, #0
    1504:	uxtble	r5, r5
    1508:	rsble	r5, r5, #0
    150c:	ble	1250 <log_oom_internal@plt+0x2e8>
    1510:	ldr	r2, [pc, #912]	; 18a8 <log_oom_internal@plt+0x940>
    1514:	ldr	r3, [pc, #912]	; 18ac <log_oom_internal@plt+0x944>
    1518:	add	r2, pc, r2
    151c:	str	r2, [sp, #4]
    1520:	add	r3, pc, r3
    1524:	ldr	r2, [pc, #900]	; 18b0 <log_oom_internal@plt+0x948>
    1528:	add	r3, r3, #20
    152c:	str	r3, [sp]
    1530:	mov	r1, r9
    1534:	mov	r3, #217	; 0xd9
    1538:	add	r2, pc, r2
    153c:	mov	r0, #3
    1540:	bl	f14 <log_internal_realm@plt>
    1544:	mov	r5, r0
    1548:	b	1250 <log_oom_internal@plt+0x2e8>
    154c:	mov	r0, #131072	; 0x20000
    1550:	bl	de8 <unshare@plt>
    1554:	cmp	r0, #0
    1558:	bge	15c8 <log_oom_internal@plt+0x660>
    155c:	bl	ee4 <__errno_location@plt>
    1560:	ldr	r4, [r0]
    1564:	mov	r0, r5
    1568:	bl	dd0 <log_get_max_level_realm@plt>
    156c:	cmp	r0, #2
    1570:	bgt	1648 <log_oom_internal@plt+0x6e0>
    1574:	eor	r5, r4, r4, asr #31
    1578:	sub	r5, r5, r4, asr #31
    157c:	uxtb	r5, r5
    1580:	rsb	r5, r5, #0
    1584:	b	1250 <log_oom_internal@plt+0x2e8>
    1588:	ldr	r2, [pc, #804]	; 18b4 <log_oom_internal@plt+0x94c>
    158c:	ldr	r3, [pc, #804]	; 18b8 <log_oom_internal@plt+0x950>
    1590:	add	r2, pc, r2
    1594:	str	r2, [sp, #4]
    1598:	add	r3, pc, r3
    159c:	ldr	r2, [pc, #792]	; 18bc <log_oom_internal@plt+0x954>
    15a0:	add	r3, r3, #20
    15a4:	mov	r1, r5
    15a8:	str	r3, [sp]
    15ac:	str	r4, [sp, #8]
    15b0:	mov	r3, #210	; 0xd2
    15b4:	add	r2, pc, r2
    15b8:	mov	r0, #3
    15bc:	bl	f14 <log_internal_realm@plt>
    15c0:	mov	r5, r0
    15c4:	b	1250 <log_oom_internal@plt+0x2e8>
    15c8:	ldr	r1, [pc, #752]	; 18c0 <log_oom_internal@plt+0x958>
    15cc:	str	r5, [sp]
    15d0:	mov	r3, #540672	; 0x84000
    15d4:	mov	r2, r5
    15d8:	add	r1, pc, r1
    15dc:	mov	r0, r5
    15e0:	bl	efc <mount@plt>
    15e4:	cmp	r0, #0
    15e8:	bge	1684 <log_oom_internal@plt+0x71c>
    15ec:	bl	ee4 <__errno_location@plt>
    15f0:	ldr	r4, [r0]
    15f4:	mov	r0, r5
    15f8:	bl	dd0 <log_get_max_level_realm@plt>
    15fc:	cmp	r0, #2
    1600:	ble	1574 <log_oom_internal@plt+0x60c>
    1604:	ldr	r2, [pc, #696]	; 18c4 <log_oom_internal@plt+0x95c>
    1608:	ldr	r3, [pc, #696]	; 18c8 <log_oom_internal@plt+0x960>
    160c:	add	r2, pc, r2
    1610:	str	r2, [sp, #4]
    1614:	add	r3, pc, r3
    1618:	ldr	r2, [pc, #684]	; 18cc <log_oom_internal@plt+0x964>
    161c:	add	r3, r3, #20
    1620:	str	r3, [sp]
    1624:	mov	r1, r4
    1628:	mov	r3, #224	; 0xe0
    162c:	add	r2, pc, r2
    1630:	mov	r0, #3
    1634:	bl	f14 <log_internal_realm@plt>
    1638:	mov	r5, r0
    163c:	b	1250 <log_oom_internal@plt+0x2e8>
    1640:	mvn	r5, #29
    1644:	b	1250 <log_oom_internal@plt+0x2e8>
    1648:	ldr	r2, [pc, #640]	; 18d0 <log_oom_internal@plt+0x968>
    164c:	ldr	r3, [pc, #640]	; 18d4 <log_oom_internal@plt+0x96c>
    1650:	add	r2, pc, r2
    1654:	str	r2, [sp, #4]
    1658:	add	r3, pc, r3
    165c:	ldr	r2, [pc, #628]	; 18d8 <log_oom_internal@plt+0x970>
    1660:	add	r3, r3, #20
    1664:	str	r3, [sp]
    1668:	mov	r1, r4
    166c:	mov	r3, #221	; 0xdd
    1670:	add	r2, pc, r2
    1674:	mov	r0, #3
    1678:	bl	f14 <log_internal_realm@plt>
    167c:	mov	r5, r0
    1680:	b	1250 <log_oom_internal@plt+0x2e8>
    1684:	mov	r0, r4
    1688:	bl	e9c <umount@plt>
    168c:	cmp	r0, #0
    1690:	bge	16f0 <log_oom_internal@plt+0x788>
    1694:	bl	ee4 <__errno_location@plt>
    1698:	ldr	r5, [r0]
    169c:	mov	r0, #0
    16a0:	bl	dd0 <log_get_max_level_realm@plt>
    16a4:	cmp	r0, #2
    16a8:	ble	12d8 <log_oom_internal@plt+0x370>
    16ac:	ldr	r2, [pc, #552]	; 18dc <log_oom_internal@plt+0x974>
    16b0:	ldr	r3, [pc, #552]	; 18e0 <log_oom_internal@plt+0x978>
    16b4:	add	r2, pc, r2
    16b8:	str	r2, [sp, #4]
    16bc:	add	r3, pc, r3
    16c0:	ldr	r2, [pc, #540]	; 18e4 <log_oom_internal@plt+0x97c>
    16c4:	add	r3, r3, #20
    16c8:	mov	r1, r5
    16cc:	str	r3, [sp]
    16d0:	str	r4, [sp, #8]
    16d4:	mov	r3, #227	; 0xe3
    16d8:	add	r2, pc, r2
    16dc:	mov	r0, #3
    16e0:	bl	f14 <log_internal_realm@plt>
    16e4:	mov	r5, r0
    16e8:	b	1250 <log_oom_internal@plt+0x2e8>
    16ec:	bl	e3c <__stack_chk_fail@plt>
    16f0:	sub	r3, fp, #44	; 0x2c
    16f4:	mov	ip, #1
    16f8:	ldm	r3, {r0, r1}
    16fc:	str	ip, [sp, #8]
    1700:	ldm	r8, {r2, r3}
    1704:	stm	sp, {r0, r1}
    1708:	mov	r1, ip
    170c:	mov	r0, r4
    1710:	bl	e24 <id128_write@plt>
    1714:	subs	r5, r0, #0
    1718:	bge	176c <log_oom_internal@plt+0x804>
    171c:	mov	r0, #0
    1720:	bl	dd0 <log_get_max_level_realm@plt>
    1724:	cmp	r0, #2
    1728:	ble	1420 <log_oom_internal@plt+0x4b8>
    172c:	ldr	r2, [pc, #436]	; 18e8 <log_oom_internal@plt+0x980>
    1730:	ldr	r3, [pc, #436]	; 18ec <log_oom_internal@plt+0x984>
    1734:	add	r2, pc, r2
    1738:	str	r2, [sp, #4]
    173c:	add	r3, pc, r3
    1740:	ldr	r2, [pc, #424]	; 18f0 <log_oom_internal@plt+0x988>
    1744:	add	r3, r3, #20
    1748:	mov	r1, r5
    174c:	str	r3, [sp]
    1750:	str	r4, [sp, #8]
    1754:	mov	r3, #232	; 0xe8
    1758:	add	r2, pc, r2
    175c:	mov	r0, #3
    1760:	bl	f14 <log_internal_realm@plt>
    1764:	mov	r5, r0
    1768:	b	1250 <log_oom_internal@plt+0x2e8>
    176c:	mvn	r3, #0
    1770:	str	r3, [sp]
    1774:	mov	r2, r3
    1778:	mov	r0, r3
    177c:	ldr	r1, [fp, #-56]	; 0xffffffc8
    1780:	bl	d88 <namespace_enter@plt>
    1784:	subs	r5, r0, #0
    1788:	bge	17dc <log_oom_internal@plt+0x874>
    178c:	mov	r0, #0
    1790:	bl	dd0 <log_get_max_level_realm@plt>
    1794:	cmp	r0, #3
    1798:	ble	1420 <log_oom_internal@plt+0x4b8>
    179c:	ldr	r2, [pc, #336]	; 18f4 <log_oom_internal@plt+0x98c>
    17a0:	ldr	r3, [pc, #336]	; 18f8 <log_oom_internal@plt+0x990>
    17a4:	add	r2, pc, r2
    17a8:	str	r2, [sp, #4]
    17ac:	add	r3, pc, r3
    17b0:	ldr	r2, [pc, #324]	; 18fc <log_oom_internal@plt+0x994>
    17b4:	add	r3, r3, #20
    17b8:	mov	r1, r5
    17bc:	str	r3, [sp]
    17c0:	str	r4, [sp, #8]
    17c4:	mov	r3, #237	; 0xed
    17c8:	add	r2, pc, r2
    17cc:	mov	r0, #4
    17d0:	bl	f14 <log_internal_realm@plt>
    17d4:	mov	r5, r0
    17d8:	b	1250 <log_oom_internal@plt+0x2e8>
    17dc:	mov	r1, #2
    17e0:	mov	r0, r4
    17e4:	bl	e90 <umount2@plt>
    17e8:	cmp	r0, #0
    17ec:	movge	r5, #0
    17f0:	bge	1250 <log_oom_internal@plt+0x2e8>
    17f4:	bl	ee4 <__errno_location@plt>
    17f8:	ldr	r5, [r0]
    17fc:	mov	r0, #0
    1800:	bl	dd0 <log_get_max_level_realm@plt>
    1804:	cmp	r0, #3
    1808:	ble	12d8 <log_oom_internal@plt+0x370>
    180c:	ldr	r2, [pc, #236]	; 1900 <log_oom_internal@plt+0x998>
    1810:	ldr	r3, [pc, #236]	; 1904 <log_oom_internal@plt+0x99c>
    1814:	add	r2, pc, r2
    1818:	str	r2, [sp, #4]
    181c:	add	r3, pc, r3
    1820:	ldr	r2, [pc, #224]	; 1908 <log_oom_internal@plt+0x9a0>
    1824:	add	r3, r3, #20
    1828:	mov	r1, r5
    182c:	str	r3, [sp]
    1830:	str	r4, [sp, #8]
    1834:	mov	r3, #240	; 0xf0
    1838:	add	r2, pc, r2
    183c:	mov	r0, #4
    1840:	bl	f14 <log_internal_realm@plt>
    1844:	mov	r5, r0
    1848:	b	1250 <log_oom_internal@plt+0x2e8>
    184c:	andeq	r2, r1, r8, ror sp
    1850:	andeq	r0, r0, r0, ror #1
    1854:	ldrdeq	r1, [r0], -r4
    1858:	andeq	r1, r0, ip, lsr r8
    185c:	andeq	r0, r8, r0, lsl #2
    1860:	andeq	r1, r0, r0, ror r8
    1864:	andeq	r1, r0, r4, asr #14
    1868:	ldrdeq	r1, [r0], -ip
    186c:	strdeq	r1, [r0], -ip
    1870:	andeq	r1, r0, r4, lsl #14
    1874:	muleq	r0, r8, r7
    1878:	andeq	r1, r0, r0, asr r8
    187c:	andeq	r1, r0, r4, lsr #13
    1880:	andeq	r1, r0, ip, lsr r7
    1884:	andeq	r1, r0, r8, ror #12
    1888:	andeq	r1, r0, r8, lsl #14
    188c:	andeq	r1, r0, r4, lsr #14
    1890:	andeq	r1, r0, r4, asr r7
    1894:	andeq	r1, r0, r0, lsl #12
    1898:	muleq	r0, r4, r6
    189c:	andeq	r1, r0, r8, lsl r7
    18a0:			; <UNDEFINED> instruction: 0x000015b0
    18a4:	andeq	r1, r0, r4, asr #12
    18a8:	andeq	r1, r0, r0, lsr #14
    18ac:	andeq	r1, r0, r0, lsr #10
    18b0:			; <UNDEFINED> instruction: 0x000015b8
    18b4:	andeq	r1, r0, ip, ror r6
    18b8:	andeq	r1, r0, r8, lsr #9
    18bc:	andeq	r1, r0, ip, lsr r5
    18c0:	andeq	r1, r0, ip, lsr #13
    18c4:	andeq	r1, r0, ip, ror r6
    18c8:	andeq	r1, r0, ip, lsr #8
    18cc:	andeq	r1, r0, r4, asr #9
    18d0:	andeq	r1, r0, r0, lsl r6
    18d4:	andeq	r1, r0, r8, ror #7
    18d8:	andeq	r1, r0, r0, lsl #9
    18dc:	andeq	r1, r0, r4, lsl r6
    18e0:	andeq	r1, r0, r4, lsl #7
    18e4:	andeq	r1, r0, r8, lsl r4
    18e8:	ldrdeq	r1, [r0], -r8
    18ec:	andeq	r1, r0, r4, lsl #6
    18f0:	muleq	r0, r8, r3
    18f4:			; <UNDEFINED> instruction: 0x000015b0
    18f8:	muleq	r0, r4, r2
    18fc:	andeq	r1, r0, r8, lsr #6
    1900:	andeq	r1, r0, r8, lsr #11
    1904:	andeq	r1, r0, r4, lsr #4
    1908:			; <UNDEFINED> instruction: 0x000012b8
    190c:	ldr	r0, [r0]
    1910:	b	d1c <free@plt>
    1914:	ldr	r3, [pc, #908]	; 1ca8 <log_oom_internal@plt+0xd40>
    1918:	ldr	r2, [pc, #908]	; 1cac <log_oom_internal@plt+0xd44>
    191c:	add	r3, pc, r3
    1920:	push	{r4, r5, r6, r7, r8, fp, lr}
    1924:	add	fp, sp, #24
    1928:	sub	sp, sp, #20
    192c:	ldr	r6, [r3, r2]
    1930:	mov	r7, r1
    1934:	mov	r5, r0
    1938:	ldr	r3, [r6]
    193c:	str	r3, [fp, #-32]	; 0xffffffe0
    1940:	bl	e0c <empty_or_root@plt>
    1944:	subs	r4, r0, #0
    1948:	bne	1b20 <log_oom_internal@plt+0xbb8>
    194c:	mov	r0, r5
    1950:	bl	eb4 <strlen@plt>
    1954:	add	r3, r0, #26
    1958:	cmp	r3, #4194304	; 0x400000
    195c:	bhi	1c40 <log_oom_internal@plt+0xcd8>
    1960:	add	r0, r0, #40	; 0x28
    1964:	bic	r0, r0, #7
    1968:	sub	sp, sp, r0
    196c:	add	r4, sp, #8
    1970:	mov	r0, r4
    1974:	mov	r1, r5
    1978:	bl	d94 <stpcpy@plt>
    197c:	cmp	r0, r4
    1980:	mov	ip, r0
    1984:	bls	19b4 <log_oom_internal@plt+0xa4c>
    1988:	ldrb	r3, [r0, #-1]
    198c:	cmp	r3, #47	; 0x2f
    1990:	bne	19b4 <log_oom_internal@plt+0xa4c>
    1994:	sub	r0, r0, #1
    1998:	b	19a8 <log_oom_internal@plt+0xa40>
    199c:	ldrb	r3, [r0, #-1]!
    19a0:	cmp	r3, #47	; 0x2f
    19a4:	bne	19b4 <log_oom_internal@plt+0xa4c>
    19a8:	cmp	r4, r0
    19ac:	mov	ip, r0
    19b0:	bne	199c <log_oom_internal@plt+0xa34>
    19b4:	ldr	lr, [pc, #756]	; 1cb0 <log_oom_internal@plt+0xd48>
    19b8:	add	lr, pc, lr
    19bc:	ldm	lr!, {r0, r1, r2, r3}
    19c0:	str	r0, [ip]
    19c4:	str	r1, [ip, #4]
    19c8:	ldm	lr!, {r0, r1}
    19cc:	str	r3, [ip, #12]
    19d0:	str	r2, [ip, #8]
    19d4:	ldrb	r3, [lr]
    19d8:	str	r0, [ip, #16]
    19dc:	str	r1, [ip, #20]
    19e0:	strb	r3, [ip, #24]
    19e4:	mov	r0, r4
    19e8:	ldr	r1, [pc, #708]	; 1cb4 <log_oom_internal@plt+0xd4c>
    19ec:	bl	e18 <open64@plt>
    19f0:	subs	r8, r0, #0
    19f4:	bge	1a70 <log_oom_internal@plt+0xb08>
    19f8:	cmp	r5, #0
    19fc:	beq	1a0c <log_oom_internal@plt+0xaa4>
    1a00:	ldrb	r3, [r5]
    1a04:	cmp	r3, #0
    1a08:	bne	1ac4 <log_oom_internal@plt+0xb5c>
    1a0c:	bl	ecc <detect_container@plt>
    1a10:	cmp	r0, #0
    1a14:	ble	1bbc <log_oom_internal@plt+0xc54>
    1a18:	sub	r2, fp, #28
    1a1c:	ldr	r1, [pc, #660]	; 1cb8 <log_oom_internal@plt+0xd50>
    1a20:	mov	r4, #0
    1a24:	str	r4, [r2, #-8]!
    1a28:	add	r1, pc, r1
    1a2c:	mov	r0, #1
    1a30:	bl	d28 <getenv_for_pid@plt>
    1a34:	cmp	r0, r4
    1a38:	ble	1abc <log_oom_internal@plt+0xb54>
    1a3c:	mov	r1, r7
    1a40:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a44:	bl	dc4 <sd_id128_from_string@plt>
    1a48:	cmp	r0, r4
    1a4c:	blt	1abc <log_oom_internal@plt+0xb54>
    1a50:	mov	r0, r4
    1a54:	bl	dd0 <log_get_max_level_realm@plt>
    1a58:	cmp	r0, #5
    1a5c:	bgt	1c6c <log_oom_internal@plt+0xd04>
    1a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1a64:	bl	d1c <free@plt>
    1a68:	mov	r4, #0
    1a6c:	b	1a98 <log_oom_internal@plt+0xb30>
    1a70:	mov	r2, r7
    1a74:	mov	r1, #1
    1a78:	bl	ef0 <id128_read_fd@plt>
    1a7c:	cmp	r0, #0
    1a80:	blt	1c30 <log_oom_internal@plt+0xcc8>
    1a84:	mov	r0, #0
    1a88:	bl	dd0 <log_get_max_level_realm@plt>
    1a8c:	cmp	r0, #5
    1a90:	bgt	1b80 <log_oom_internal@plt+0xc18>
    1a94:	mov	r4, #0
    1a98:	mov	r0, r8
    1a9c:	bl	e30 <safe_close@plt>
    1aa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1aa4:	ldr	r3, [r6]
    1aa8:	mov	r0, r4
    1aac:	cmp	r2, r3
    1ab0:	bne	1ca4 <log_oom_internal@plt+0xd3c>
    1ab4:	sub	sp, fp, #24
    1ab8:	pop	{r4, r5, r6, r7, r8, fp, pc}
    1abc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1ac0:	bl	d1c <free@plt>
    1ac4:	mov	r0, r7
    1ac8:	bl	e60 <sd_id128_randomize@plt>
    1acc:	subs	r4, r0, #0
    1ad0:	mov	r0, #0
    1ad4:	blt	1b2c <log_oom_internal@plt+0xbc4>
    1ad8:	bl	dd0 <log_get_max_level_realm@plt>
    1adc:	cmp	r0, #5
    1ae0:	ble	1a94 <log_oom_internal@plt+0xb2c>
    1ae4:	ldr	r2, [pc, #464]	; 1cbc <log_oom_internal@plt+0xd54>
    1ae8:	ldr	r3, [pc, #464]	; 1cc0 <log_oom_internal@plt+0xd58>
    1aec:	add	r2, pc, r2
    1af0:	str	r2, [sp, #4]
    1af4:	add	r3, pc, r3
    1af8:	ldr	r2, [pc, #452]	; 1cc4 <log_oom_internal@plt+0xd5c>
    1afc:	add	r3, r3, #60	; 0x3c
    1b00:	str	r3, [sp]
    1b04:	add	r2, pc, r2
    1b08:	mov	r3, #78	; 0x4e
    1b0c:	mov	r1, #0
    1b10:	mov	r0, #6
    1b14:	bl	f14 <log_internal_realm@plt>
    1b18:	mov	r4, #0
    1b1c:	b	1a98 <log_oom_internal@plt+0xb30>
    1b20:	ldr	r4, [pc, #416]	; 1cc8 <log_oom_internal@plt+0xd60>
    1b24:	add	r4, pc, r4
    1b28:	b	19e4 <log_oom_internal@plt+0xa7c>
    1b2c:	bl	dd0 <log_get_max_level_realm@plt>
    1b30:	cmp	r0, #2
    1b34:	rsble	r4, r4, #0
    1b38:	uxtble	r4, r4
    1b3c:	rsble	r4, r4, #0
    1b40:	ble	1a98 <log_oom_internal@plt+0xb30>
    1b44:	ldr	r2, [pc, #384]	; 1ccc <log_oom_internal@plt+0xd64>
    1b48:	ldr	r3, [pc, #384]	; 1cd0 <log_oom_internal@plt+0xd68>
    1b4c:	add	r2, pc, r2
    1b50:	str	r2, [sp, #4]
    1b54:	add	r3, pc, r3
    1b58:	ldr	r2, [pc, #372]	; 1cd4 <log_oom_internal@plt+0xd6c>
    1b5c:	add	r3, r3, #60	; 0x3c
    1b60:	mov	r1, r4
    1b64:	str	r3, [sp]
    1b68:	add	r2, pc, r2
    1b6c:	mov	r3, #76	; 0x4c
    1b70:	mov	r0, #3
    1b74:	bl	f14 <log_internal_realm@plt>
    1b78:	mov	r4, r0
    1b7c:	b	1a98 <log_oom_internal@plt+0xb30>
    1b80:	ldr	r2, [pc, #336]	; 1cd8 <log_oom_internal@plt+0xd70>
    1b84:	ldr	r3, [pc, #336]	; 1cdc <log_oom_internal@plt+0xd74>
    1b88:	add	r2, pc, r2
    1b8c:	str	r2, [sp, #4]
    1b90:	add	r3, pc, r3
    1b94:	ldr	r2, [pc, #324]	; 1ce0 <log_oom_internal@plt+0xd78>
    1b98:	add	r3, r3, #60	; 0x3c
    1b9c:	str	r3, [sp]
    1ba0:	add	r2, pc, r2
    1ba4:	mov	r3, #39	; 0x27
    1ba8:	mov	r1, #0
    1bac:	mov	r0, #6
    1bb0:	bl	f14 <log_internal_realm@plt>
    1bb4:	mov	r4, #0
    1bb8:	b	1a98 <log_oom_internal@plt+0xb30>
    1bbc:	bl	d4c <detect_vm@plt>
    1bc0:	cmp	r0, #1
    1bc4:	bne	1ac4 <log_oom_internal@plt+0xb5c>
    1bc8:	ldr	r0, [pc, #276]	; 1ce4 <log_oom_internal@plt+0xd7c>
    1bcc:	mov	r2, r7
    1bd0:	mov	r1, #2
    1bd4:	add	r0, pc, r0
    1bd8:	bl	dac <id128_read@plt>
    1bdc:	cmp	r0, #0
    1be0:	blt	1ac4 <log_oom_internal@plt+0xb5c>
    1be4:	mov	r0, #0
    1be8:	bl	dd0 <log_get_max_level_realm@plt>
    1bec:	cmp	r0, #5
    1bf0:	ble	1a94 <log_oom_internal@plt+0xb2c>
    1bf4:	ldr	r2, [pc, #236]	; 1ce8 <log_oom_internal@plt+0xd80>
    1bf8:	ldr	r3, [pc, #236]	; 1cec <log_oom_internal@plt+0xd84>
    1bfc:	add	r2, pc, r2
    1c00:	str	r2, [sp, #4]
    1c04:	add	r3, pc, r3
    1c08:	ldr	r2, [pc, #224]	; 1cf0 <log_oom_internal@plt+0xd88>
    1c0c:	add	r3, r3, #60	; 0x3c
    1c10:	str	r3, [sp]
    1c14:	add	r2, pc, r2
    1c18:	mov	r3, #67	; 0x43
    1c1c:	mov	r1, #0
    1c20:	mov	r0, #6
    1c24:	bl	f14 <log_internal_realm@plt>
    1c28:	mov	r4, #0
    1c2c:	b	1a98 <log_oom_internal@plt+0xb30>
    1c30:	mov	r0, r8
    1c34:	bl	e30 <safe_close@plt>
    1c38:	mov	r8, r0
    1c3c:	b	19f8 <log_oom_internal@plt+0xa90>
    1c40:	ldr	r3, [pc, #172]	; 1cf4 <log_oom_internal@plt+0xd8c>
    1c44:	ldr	r2, [pc, #172]	; 1cf8 <log_oom_internal@plt+0xd90>
    1c48:	add	r3, pc, r3
    1c4c:	ldr	r1, [pc, #168]	; 1cfc <log_oom_internal@plt+0xd94>
    1c50:	add	r3, r3, #40	; 0x28
    1c54:	str	r3, [sp]
    1c58:	mov	r0, r4
    1c5c:	mov	r3, #35	; 0x23
    1c60:	add	r2, pc, r2
    1c64:	add	r1, pc, r1
    1c68:	bl	f08 <log_assert_failed_realm@plt>
    1c6c:	ldr	r2, [pc, #140]	; 1d00 <log_oom_internal@plt+0xd98>
    1c70:	ldr	r3, [pc, #140]	; 1d04 <log_oom_internal@plt+0xd9c>
    1c74:	add	r2, pc, r2
    1c78:	str	r2, [sp, #4]
    1c7c:	add	r3, pc, r3
    1c80:	ldr	r2, [pc, #128]	; 1d08 <log_oom_internal@plt+0xda0>
    1c84:	add	r3, r3, #60	; 0x3c
    1c88:	str	r3, [sp]
    1c8c:	mov	r1, r4
    1c90:	mov	r3, #56	; 0x38
    1c94:	add	r2, pc, r2
    1c98:	mov	r0, #6
    1c9c:	bl	f14 <log_internal_realm@plt>
    1ca0:	b	1a60 <log_oom_internal@plt+0xaf8>
    1ca4:	bl	e3c <__stack_chk_fail@plt>
    1ca8:	andeq	r2, r1, r8, asr #11
    1cac:	andeq	r0, r0, r0, ror #1
    1cb0:	andeq	r1, r0, r4, asr r4
    1cb4:	andeq	r8, r8, r0, lsl #2
    1cb8:	andeq	r1, r0, r0, lsr r4
    1cbc:	andeq	r1, r0, r4, lsr #8
    1cc0:	andeq	r0, r0, ip, asr #30
    1cc4:	andeq	r0, r0, ip, ror #31
    1cc8:	andeq	r1, r0, r8, ror #5
    1ccc:	muleq	r0, r4, r3
    1cd0:	andeq	r0, r0, ip, ror #29
    1cd4:	andeq	r0, r0, r8, lsl #31
    1cd8:	andeq	r1, r0, r0, lsr #5
    1cdc:			; <UNDEFINED> instruction: 0x00000eb0
    1ce0:	andeq	r0, r0, r0, asr pc
    1ce4:	andeq	r1, r0, r4, asr #5
    1ce8:			; <UNDEFINED> instruction: 0x000012bc
    1cec:	andeq	r0, r0, ip, lsr lr
    1cf0:	ldrdeq	r0, [r0], -ip
    1cf4:	strdeq	r0, [r0], -r8
    1cf8:	muleq	r0, r0, lr
    1cfc:	andeq	r0, r0, ip, lsr #29
    1d00:	strdeq	r1, [r0], -r4
    1d04:	andeq	r0, r0, r4, asr #27
    1d08:	andeq	r0, r0, ip, asr lr
    1d0c:	sub	sp, sp, #8
    1d10:	ldr	r1, [pc, #1828]	; 243c <log_oom_internal@plt+0x14d4>
    1d14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d18:	add	fp, sp, #32
    1d1c:	ldr	ip, [pc, #1820]	; 2440 <log_oom_internal@plt+0x14d8>
    1d20:	add	r1, pc, r1
    1d24:	add	lr, fp, #4
    1d28:	sub	sp, sp, #44	; 0x2c
    1d2c:	stm	lr, {r2, r3}
    1d30:	str	lr, [fp, #-48]	; 0xffffffd0
    1d34:	ldr	r3, [r1, ip]
    1d38:	ldr	r2, [fp, #20]
    1d3c:	str	r3, [fp, #-52]	; 0xffffffcc
    1d40:	ldr	r3, [r3]
    1d44:	mov	r6, r0
    1d48:	str	r2, [fp, #-60]	; 0xffffffc4
    1d4c:	str	r3, [fp, #-40]	; 0xffffffd8
    1d50:	bl	e0c <empty_or_root@plt>
    1d54:	subs	r4, r0, #0
    1d58:	bne	20c0 <log_oom_internal@plt+0x1158>
    1d5c:	mov	r0, r6
    1d60:	bl	eb4 <strlen@plt>
    1d64:	add	r3, r0, #17
    1d68:	cmp	r3, #4194304	; 0x400000
    1d6c:	bhi	229c <log_oom_internal@plt+0x1334>
    1d70:	add	r0, r0, #31
    1d74:	bic	r0, r0, #7
    1d78:	sub	sp, sp, r0
    1d7c:	add	r4, sp, #16
    1d80:	mov	r0, r4
    1d84:	mov	r1, r6
    1d88:	bl	d94 <stpcpy@plt>
    1d8c:	cmp	r4, r0
    1d90:	mov	ip, r0
    1d94:	bcs	1dcc <log_oom_internal@plt+0xe64>
    1d98:	ldrb	r3, [r0, #-1]
    1d9c:	cmp	r3, #47	; 0x2f
    1da0:	bne	1dcc <log_oom_internal@plt+0xe64>
    1da4:	sub	r0, r0, #1
    1da8:	ldr	r8, [fp, #-48]	; 0xffffffd0
    1dac:	b	1dbc <log_oom_internal@plt+0xe54>
    1db0:	ldrb	r3, [r0, #-1]!
    1db4:	cmp	r3, #47	; 0x2f
    1db8:	bne	1dc8 <log_oom_internal@plt+0xe60>
    1dbc:	cmp	r0, r4
    1dc0:	mov	ip, r0
    1dc4:	bne	1db0 <log_oom_internal@plt+0xe48>
    1dc8:	str	r8, [fp, #-48]	; 0xffffffd0
    1dcc:	ldr	lr, [pc, #1648]	; 2444 <log_oom_internal@plt+0x14dc>
    1dd0:	add	lr, pc, lr
    1dd4:	ldm	lr!, {r0, r1, r2, r3}
    1dd8:	str	r0, [ip]
    1ddc:	str	r1, [ip, #4]
    1de0:	str	r2, [ip, #8]
    1de4:	str	r3, [ip, #12]
    1de8:	mov	r0, #0
    1dec:	bl	ea8 <umask@plt>
    1df0:	mvn	r5, #0
    1df4:	ldr	sl, [pc, #1612]	; 2448 <log_oom_internal@plt+0x14e0>
    1df8:	ldr	r9, [pc, #1612]	; 244c <log_oom_internal@plt+0x14e4>
    1dfc:	ldr	r8, [fp, #-48]	; 0xffffffd0
    1e00:	mov	r7, #0
    1e04:	str	r0, [fp, #-56]	; 0xffffffc8
    1e08:	mov	r0, r5
    1e0c:	cmp	r7, #0
    1e10:	mov	r7, #0
    1e14:	bne	1e40 <log_oom_internal@plt+0xed8>
    1e18:	mov	r1, sl
    1e1c:	mov	r0, r4
    1e20:	bl	e78 <mkdir_parents@plt>
    1e24:	mov	r2, #292	; 0x124
    1e28:	mov	r1, r9
    1e2c:	mov	r0, r4
    1e30:	bl	e18 <open64@plt>
    1e34:	mov	r7, #1
    1e38:	cmp	r0, #0
    1e3c:	blt	1fd4 <log_oom_internal@plt+0x106c>
    1e40:	mov	r5, r0
    1e44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1e48:	str	r8, [fp, #-48]	; 0xffffffd0
    1e4c:	bl	ea8 <umask@plt>
    1e50:	ldrd	r2, [fp, #4]
    1e54:	ldrd	r0, [fp, #12]
    1e58:	orr	r8, r2, r0
    1e5c:	orr	r9, r3, r1
    1e60:	mov	r2, r8
    1e64:	mov	r3, r9
    1e68:	orrs	r3, r2, r3
    1e6c:	beq	2170 <log_oom_internal@plt+0x1208>
    1e70:	cmp	r7, #0
    1e74:	bne	203c <log_oom_internal@plt+0x10d4>
    1e78:	mov	r0, r5
    1e7c:	bl	e30 <safe_close@plt>
    1e80:	mov	r5, r0
    1e84:	mov	r0, r6
    1e88:	bl	e0c <empty_or_root@plt>
    1e8c:	subs	r7, r0, #0
    1e90:	bne	2208 <log_oom_internal@plt+0x12a0>
    1e94:	mov	r0, r6
    1e98:	bl	eb4 <strlen@plt>
    1e9c:	add	r3, r0, #17
    1ea0:	cmp	r3, #4194304	; 0x400000
    1ea4:	bhi	240c <log_oom_internal@plt+0x14a4>
    1ea8:	add	r0, r0, #31
    1eac:	bic	r0, r0, #7
    1eb0:	sub	sp, sp, r0
    1eb4:	add	r7, sp, #16
    1eb8:	mov	r1, r6
    1ebc:	mov	r0, r7
    1ec0:	bl	d94 <stpcpy@plt>
    1ec4:	cmp	r7, r0
    1ec8:	mov	ip, r0
    1ecc:	bcs	1f04 <log_oom_internal@plt+0xf9c>
    1ed0:	ldrb	r3, [r0, #-1]
    1ed4:	cmp	r3, #47	; 0x2f
    1ed8:	bne	1f04 <log_oom_internal@plt+0xf9c>
    1edc:	sub	r0, r0, #1
    1ee0:	ldr	r8, [fp, #-48]	; 0xffffffd0
    1ee4:	b	1ef4 <log_oom_internal@plt+0xf8c>
    1ee8:	ldrb	r3, [r0, #-1]!
    1eec:	cmp	r3, #47	; 0x2f
    1ef0:	bne	1f00 <log_oom_internal@plt+0xf98>
    1ef4:	cmp	r7, r0
    1ef8:	mov	ip, r0
    1efc:	bne	1ee8 <log_oom_internal@plt+0xf80>
    1f00:	str	r8, [fp, #-48]	; 0xffffffd0
    1f04:	ldr	lr, [pc, #1348]	; 2450 <log_oom_internal@plt+0x14e8>
    1f08:	add	lr, pc, lr
    1f0c:	ldm	lr!, {r0, r1, r2, r3}
    1f10:	str	r0, [ip]
    1f14:	str	r1, [ip, #4]
    1f18:	str	r2, [ip, #8]
    1f1c:	str	r3, [ip, #12]
    1f20:	mov	r0, #18
    1f24:	bl	ea8 <umask@plt>
    1f28:	add	r3, fp, #12
    1f2c:	mov	r9, #0
    1f30:	mov	sl, r0
    1f34:	ldm	r3, {r0, r1}
    1f38:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1f3c:	str	r9, [sp, #8]
    1f40:	ldm	r3, {r2, r3}
    1f44:	stm	sp, {r0, r1}
    1f48:	mov	r1, #1
    1f4c:	mov	r0, r7
    1f50:	bl	e24 <id128_write@plt>
    1f54:	mov	r6, r0
    1f58:	mov	r0, sl
    1f5c:	bl	ea8 <umask@plt>
    1f60:	cmp	r6, r9
    1f64:	blt	21a4 <log_oom_internal@plt+0x123c>
    1f68:	str	r9, [sp]
    1f6c:	mov	r3, #4096	; 0x1000
    1f70:	mov	r2, r9
    1f74:	mov	r1, r4
    1f78:	mov	r0, r7
    1f7c:	bl	efc <mount@plt>
    1f80:	cmp	r0, #0
    1f84:	blt	213c <log_oom_internal@plt+0x11d4>
    1f88:	mov	r0, r9
    1f8c:	bl	dd0 <log_get_max_level_realm@plt>
    1f90:	cmp	r0, #5
    1f94:	bgt	2308 <log_oom_internal@plt+0x13a0>
    1f98:	mov	r6, #0
    1f9c:	str	r6, [sp]
    1fa0:	mov	r2, r6
    1fa4:	mov	r0, r6
    1fa8:	ldr	r3, [pc, #1188]	; 2454 <log_oom_internal@plt+0x14ec>
    1fac:	mov	r1, r4
    1fb0:	bl	efc <mount@plt>
    1fb4:	cmp	r0, r6
    1fb8:	blt	2248 <log_oom_internal@plt+0x12e0>
    1fbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1fc0:	ldr	ip, [fp, #-60]	; 0xffffffc4
    1fc4:	mov	r9, #0
    1fc8:	ldm	r3, {r0, r1, r2, r3}
    1fcc:	stm	ip, {r0, r1, r2, r3}
    1fd0:	b	2090 <log_oom_internal@plt+0x1128>
    1fd4:	bl	ee4 <__errno_location@plt>
    1fd8:	ldr	r1, [pc, #1144]	; 2458 <log_oom_internal@plt+0x14f0>
    1fdc:	mov	r5, r0
    1fe0:	mov	r0, r4
    1fe4:	ldr	r3, [r5]
    1fe8:	str	r3, [fp, #-48]	; 0xffffffd0
    1fec:	bl	e18 <open64@plt>
    1ff0:	cmp	r0, #0
    1ff4:	bge	1e0c <log_oom_internal@plt+0xea4>
    1ff8:	mov	r6, r5
    1ffc:	mov	r5, r0
    2000:	mov	r0, #0
    2004:	bl	dd0 <log_get_max_level_realm@plt>
    2008:	ldr	r3, [fp, #-48]	; 0xffffffd0
    200c:	ldr	r1, [r6]
    2010:	cmp	r3, #30
    2014:	beq	2344 <log_oom_internal@plt+0x13dc>
    2018:	cmp	r0, #2
    201c:	bgt	23d0 <log_oom_internal@plt+0x1468>
    2020:	eor	r9, r1, r1, asr #31
    2024:	sub	r9, r9, r1, asr #31
    2028:	uxtb	r9, r9
    202c:	rsb	r9, r9, #0
    2030:	ldr	r0, [fp, #-56]	; 0xffffffc8
    2034:	bl	ea8 <umask@plt>
    2038:	b	2090 <log_oom_internal@plt+0x1128>
    203c:	mov	r7, #0
    2040:	mov	r2, #0
    2044:	mov	r3, #0
    2048:	str	r7, [sp]
    204c:	mov	r0, r5
    2050:	bl	ec0 <lseek64@plt>
    2054:	mvn	r3, #0
    2058:	mvn	r2, #0
    205c:	cmp	r1, r3
    2060:	cmpeq	r0, r2
    2064:	bne	20cc <log_oom_internal@plt+0x1164>
    2068:	bl	ee4 <__errno_location@plt>
    206c:	ldr	r9, [r0]
    2070:	mov	r0, r7
    2074:	bl	dd0 <log_get_max_level_realm@plt>
    2078:	cmp	r0, #2
    207c:	bgt	22c8 <log_oom_internal@plt+0x1360>
    2080:	cmp	r9, #0
    2084:	rsblt	r9, r9, #0
    2088:	uxtb	r9, r9
    208c:	rsb	r9, r9, #0
    2090:	mov	r0, r5
    2094:	bl	e30 <safe_close@plt>
    2098:	ldr	r3, [fp, #-52]	; 0xffffffcc
    209c:	ldr	r2, [fp, #-40]	; 0xffffffd8
    20a0:	mov	r0, r9
    20a4:	ldr	r3, [r3]
    20a8:	cmp	r2, r3
    20ac:	bne	2438 <log_oom_internal@plt+0x14d0>
    20b0:	sub	sp, fp, #32
    20b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    20b8:	add	sp, sp, #8
    20bc:	bx	lr
    20c0:	ldr	r4, [pc, #916]	; 245c <log_oom_internal@plt+0x14f4>
    20c4:	add	r4, pc, r4
    20c8:	b	1de8 <log_oom_internal@plt+0xe80>
    20cc:	mov	r2, #0
    20d0:	mov	r3, #0
    20d4:	mov	r0, r5
    20d8:	bl	d04 <ftruncate64@plt>
    20dc:	cmp	r0, #0
    20e0:	bge	2214 <log_oom_internal@plt+0x12ac>
    20e4:	bl	ee4 <__errno_location@plt>
    20e8:	ldr	r9, [r0]
    20ec:	mov	r0, r7
    20f0:	bl	dd0 <log_get_max_level_realm@plt>
    20f4:	cmp	r0, #2
    20f8:	ble	2080 <log_oom_internal@plt+0x1118>
    20fc:	ldr	r2, [pc, #860]	; 2460 <log_oom_internal@plt+0x14f8>
    2100:	ldr	r3, [pc, #860]	; 2464 <log_oom_internal@plt+0x14fc>
    2104:	add	r2, pc, r2
    2108:	str	r2, [sp, #4]
    210c:	add	r3, pc, r3
    2110:	ldr	r2, [pc, #848]	; 2468 <log_oom_internal@plt+0x1500>
    2114:	add	r3, r3, #100	; 0x64
    2118:	mov	r1, r9
    211c:	str	r3, [sp]
    2120:	str	r4, [sp, #8]
    2124:	mov	r3, #137	; 0x89
    2128:	add	r2, pc, r2
    212c:	mov	r0, #3
    2130:	bl	f14 <log_internal_realm@plt>
    2134:	mov	r9, r0
    2138:	b	2090 <log_oom_internal@plt+0x1128>
    213c:	mov	r0, r7
    2140:	bl	f20 <unlink_noerrno@plt>
    2144:	bl	ee4 <__errno_location@plt>
    2148:	ldr	r6, [r0]
    214c:	mov	r0, r9
    2150:	bl	dd0 <log_get_max_level_realm@plt>
    2154:	cmp	r0, #2
    2158:	bgt	2390 <log_oom_internal@plt+0x1428>
    215c:	eor	r9, r6, r6, asr #31
    2160:	sub	r9, r9, r6, asr #31
    2164:	uxtb	r9, r9
    2168:	rsb	r9, r9, #0
    216c:	b	2090 <log_oom_internal@plt+0x1128>
    2170:	ldr	r2, [fp, #-60]	; 0xffffffc4
    2174:	mov	r1, #1
    2178:	mov	r0, r5
    217c:	bl	ef0 <id128_read_fd@plt>
    2180:	cmp	r0, #0
    2184:	movge	r9, #0
    2188:	bge	2090 <log_oom_internal@plt+0x1128>
    218c:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2190:	mov	r0, r6
    2194:	bl	1914 <log_oom_internal@plt+0x9ac>
    2198:	subs	r9, r0, #0
    219c:	bge	1e70 <log_oom_internal@plt+0xf08>
    21a0:	b	2090 <log_oom_internal@plt+0x1128>
    21a4:	mov	r0, r7
    21a8:	bl	e00 <unlink@plt>
    21ac:	mov	r0, r9
    21b0:	bl	dd0 <log_get_max_level_realm@plt>
    21b4:	cmp	r0, #2
    21b8:	rsble	r9, r6, #0
    21bc:	uxtble	r9, r9
    21c0:	rsble	r9, r9, #0
    21c4:	ble	2090 <log_oom_internal@plt+0x1128>
    21c8:	ldr	r2, [pc, #668]	; 246c <log_oom_internal@plt+0x1504>
    21cc:	ldr	r3, [pc, #668]	; 2470 <log_oom_internal@plt+0x1508>
    21d0:	add	r2, pc, r2
    21d4:	str	r2, [sp, #4]
    21d8:	add	r3, pc, r3
    21dc:	ldr	r2, [pc, #656]	; 2474 <log_oom_internal@plt+0x150c>
    21e0:	add	r3, r3, #100	; 0x64
    21e4:	str	r3, [sp]
    21e8:	str	r7, [sp, #8]
    21ec:	mov	r1, r6
    21f0:	mov	r3, #153	; 0x99
    21f4:	add	r2, pc, r2
    21f8:	mov	r0, #3
    21fc:	bl	f14 <log_internal_realm@plt>
    2200:	mov	r9, r0
    2204:	b	2090 <log_oom_internal@plt+0x1128>
    2208:	ldr	r7, [pc, #616]	; 2478 <log_oom_internal@plt+0x1510>
    220c:	add	r7, pc, r7
    2210:	b	1f20 <log_oom_internal@plt+0xfb8>
    2214:	add	r3, fp, #12
    2218:	mov	ip, #1
    221c:	ldm	r3, {r0, r1}
    2220:	ldr	r3, [fp, #-48]	; 0xffffffd0
    2224:	str	ip, [sp, #8]
    2228:	ldm	r3, {r2, r3}
    222c:	stm	sp, {r0, r1}
    2230:	mov	r1, ip
    2234:	mov	r0, r5
    2238:	bl	db8 <id128_write_fd@plt>
    223c:	cmp	r0, #0
    2240:	bge	1fbc <log_oom_internal@plt+0x1054>
    2244:	b	1e78 <log_oom_internal@plt+0xf10>
    2248:	bl	ee4 <__errno_location@plt>
    224c:	mov	r7, r0
    2250:	mov	r0, r6
    2254:	bl	dd0 <log_get_max_level_realm@plt>
    2258:	cmp	r0, #3
    225c:	ble	1fbc <log_oom_internal@plt+0x1054>
    2260:	ldr	r2, [pc, #532]	; 247c <log_oom_internal@plt+0x1514>
    2264:	ldr	r3, [pc, #532]	; 2480 <log_oom_internal@plt+0x1518>
    2268:	add	r2, pc, r2
    226c:	str	r2, [sp, #4]
    2270:	add	r3, pc, r3
    2274:	ldr	r2, [pc, #520]	; 2484 <log_oom_internal@plt+0x151c>
    2278:	add	r3, r3, #100	; 0x64
    227c:	str	r3, [sp]
    2280:	str	r4, [sp, #8]
    2284:	mov	r3, #166	; 0xa6
    2288:	ldr	r1, [r7]
    228c:	add	r2, pc, r2
    2290:	mov	r0, #4
    2294:	bl	f14 <log_internal_realm@plt>
    2298:	b	1fbc <log_oom_internal@plt+0x1054>
    229c:	ldr	r3, [pc, #484]	; 2488 <log_oom_internal@plt+0x1520>
    22a0:	ldr	r2, [pc, #484]	; 248c <log_oom_internal@plt+0x1524>
    22a4:	add	r3, pc, r3
    22a8:	ldr	r1, [pc, #480]	; 2490 <log_oom_internal@plt+0x1528>
    22ac:	add	r3, r3, #80	; 0x50
    22b0:	str	r3, [sp]
    22b4:	mov	r0, r4
    22b8:	mov	r3, #88	; 0x58
    22bc:	add	r2, pc, r2
    22c0:	add	r1, pc, r1
    22c4:	bl	f08 <log_assert_failed_realm@plt>
    22c8:	ldr	r2, [pc, #452]	; 2494 <log_oom_internal@plt+0x152c>
    22cc:	ldr	r3, [pc, #452]	; 2498 <log_oom_internal@plt+0x1530>
    22d0:	add	r2, pc, r2
    22d4:	str	r2, [sp, #4]
    22d8:	add	r3, pc, r3
    22dc:	ldr	r2, [pc, #440]	; 249c <log_oom_internal@plt+0x1534>
    22e0:	add	r3, r3, #100	; 0x64
    22e4:	mov	r1, r9
    22e8:	str	r3, [sp]
    22ec:	str	r4, [sp, #8]
    22f0:	mov	r3, #134	; 0x86
    22f4:	add	r2, pc, r2
    22f8:	mov	r0, #3
    22fc:	bl	f14 <log_internal_realm@plt>
    2300:	mov	r9, r0
    2304:	b	2090 <log_oom_internal@plt+0x1128>
    2308:	ldr	r2, [pc, #400]	; 24a0 <log_oom_internal@plt+0x1538>
    230c:	ldr	r3, [pc, #400]	; 24a4 <log_oom_internal@plt+0x153c>
    2310:	add	r2, pc, r2
    2314:	str	r2, [sp, #4]
    2318:	add	r3, pc, r3
    231c:	ldr	r2, [pc, #388]	; 24a8 <log_oom_internal@plt+0x1540>
    2320:	add	r3, r3, #100	; 0x64
    2324:	str	r3, [sp]
    2328:	str	r4, [sp, #8]
    232c:	mov	r1, r9
    2330:	mov	r3, #162	; 0xa2
    2334:	add	r2, pc, r2
    2338:	mov	r0, #6
    233c:	bl	f14 <log_internal_realm@plt>
    2340:	b	1f98 <log_oom_internal@plt+0x1030>
    2344:	cmp	r1, #2
    2348:	bne	2018 <log_oom_internal@plt+0x10b0>
    234c:	cmp	r0, #2
    2350:	mvnle	r9, #1
    2354:	ble	2030 <log_oom_internal@plt+0x10c8>
    2358:	ldr	r2, [pc, #332]	; 24ac <log_oom_internal@plt+0x1544>
    235c:	ldr	r3, [pc, #332]	; 24b0 <log_oom_internal@plt+0x1548>
    2360:	add	r2, pc, r2
    2364:	str	r2, [sp, #4]
    2368:	add	r3, pc, r3
    236c:	ldr	r2, [pc, #320]	; 24b4 <log_oom_internal@plt+0x154c>
    2370:	add	r3, r3, #100	; 0x64
    2374:	str	r3, [sp]
    2378:	add	r2, pc, r2
    237c:	mov	r3, #109	; 0x6d
    2380:	mov	r0, #3
    2384:	bl	f14 <log_internal_realm@plt>
    2388:	mov	r9, r0
    238c:	b	2030 <log_oom_internal@plt+0x10c8>
    2390:	ldr	r2, [pc, #288]	; 24b8 <log_oom_internal@plt+0x1550>
    2394:	ldr	r3, [pc, #288]	; 24bc <log_oom_internal@plt+0x1554>
    2398:	add	r2, pc, r2
    239c:	str	r2, [sp, #4]
    23a0:	add	r3, pc, r3
    23a4:	ldr	r2, [pc, #276]	; 24c0 <log_oom_internal@plt+0x1558>
    23a8:	add	r3, r3, #100	; 0x64
    23ac:	str	r3, [sp]
    23b0:	str	r4, [sp, #8]
    23b4:	mov	r1, r6
    23b8:	mov	r3, #159	; 0x9f
    23bc:	add	r2, pc, r2
    23c0:	mov	r0, #3
    23c4:	bl	f14 <log_internal_realm@plt>
    23c8:	mov	r9, r0
    23cc:	b	2090 <log_oom_internal@plt+0x1128>
    23d0:	ldr	r2, [pc, #236]	; 24c4 <log_oom_internal@plt+0x155c>
    23d4:	ldr	r3, [pc, #236]	; 24c8 <log_oom_internal@plt+0x1560>
    23d8:	add	r2, pc, r2
    23dc:	str	r2, [sp, #4]
    23e0:	add	r3, pc, r3
    23e4:	ldr	r2, [pc, #224]	; 24cc <log_oom_internal@plt+0x1564>
    23e8:	add	r3, r3, #100	; 0x64
    23ec:	str	r3, [sp]
    23f0:	str	r4, [sp, #8]
    23f4:	mov	r3, #111	; 0x6f
    23f8:	add	r2, pc, r2
    23fc:	mov	r0, #3
    2400:	bl	f14 <log_internal_realm@plt>
    2404:	mov	r9, r0
    2408:	b	2030 <log_oom_internal@plt+0x10c8>
    240c:	ldr	r3, [pc, #188]	; 24d0 <log_oom_internal@plt+0x1568>
    2410:	ldr	r2, [pc, #188]	; 24d4 <log_oom_internal@plt+0x156c>
    2414:	add	r3, pc, r3
    2418:	ldr	r1, [pc, #184]	; 24d8 <log_oom_internal@plt+0x1570>
    241c:	add	r3, r3, #80	; 0x50
    2420:	str	r3, [sp]
    2424:	mov	r0, r7
    2428:	mov	r3, #147	; 0x93
    242c:	add	r2, pc, r2
    2430:	add	r1, pc, r1
    2434:	bl	f08 <log_assert_failed_realm@plt>
    2438:	bl	e3c <__stack_chk_fail@plt>
    243c:	andeq	r2, r1, r4, asr #3
    2440:	andeq	r0, r0, r0, ror #1
    2444:	andeq	r0, r0, r0, lsl sp
    2448:	andeq	r0, r0, sp, ror #3
    244c:	andeq	r0, r8, r2, asr #2
    2450:	andeq	r1, r0, r8, lsr r0
    2454:	andeq	r1, r0, r1, lsr #32
    2458:	andeq	r0, r8, r0, lsl #2
    245c:	andeq	r0, r0, ip, lsl sl
    2460:	andeq	r0, r0, ip, asr pc
    2464:	andeq	r0, r0, r4, lsr r9
    2468:	andeq	r0, r0, r8, asr #19
    246c:	andeq	r0, r0, ip, lsr #29
    2470:	andeq	r0, r0, r8, ror #16
    2474:	strdeq	r0, [r0], -ip
    2478:	andeq	r0, r0, r4, lsr sp
    247c:	andeq	r0, r0, r0, ror #28
    2480:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2484:	andeq	r0, r0, r4, ror #16
    2488:	muleq	r0, ip, r7
    248c:	andeq	r0, r0, r4, lsr r8
    2490:	andeq	r0, r0, r0, asr r8
    2494:	andeq	r0, r0, r8, ror sp
    2498:	andeq	r0, r0, r8, ror #14
    249c:	strdeq	r0, [r0], -ip
    24a0:	muleq	r0, r8, sp
    24a4:	andeq	r0, r0, r8, lsr #14
    24a8:			; <UNDEFINED> instruction: 0x000007bc
    24ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    24b0:	ldrdeq	r0, [r0], -r8
    24b4:	andeq	r0, r0, r8, ror r7
    24b8:	strdeq	r0, [r0], -r8
    24bc:	andeq	r0, r0, r0, lsr #13
    24c0:	andeq	r0, r0, r4, lsr r7
    24c4:			; <UNDEFINED> instruction: 0x000007b4
    24c8:	andeq	r0, r0, r0, ror #12
    24cc:	strdeq	r0, [r0], -r8
    24d0:	andeq	r0, r0, ip, lsr #12
    24d4:	andeq	r0, r0, r4, asr #13
    24d8:	andeq	r0, r0, r0, ror #13
    24dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    24e0:	add	fp, sp, #32
    24e4:	ldr	r7, [pc, #1108]	; 2940 <log_oom_internal@plt+0x19d8>
    24e8:	ldr	r3, [pc, #1108]	; 2944 <log_oom_internal@plt+0x19dc>
    24ec:	add	r7, pc, r7
    24f0:	sub	sp, sp, #108	; 0x6c
    24f4:	ldr	r3, [r7, r3]
    24f8:	mov	r5, r0
    24fc:	str	r3, [fp, #-120]	; 0xffffff88
    2500:	ldr	r3, [r3]
    2504:	mov	r0, #0
    2508:	mov	r6, r1
    250c:	str	r3, [fp, #-40]	; 0xffffffd8
    2510:	bl	ed8 <log_parse_environment_realm@plt>
    2514:	bl	d34 <log_open@plt>
    2518:	cmp	r5, #0
    251c:	blt	27c8 <log_oom_internal@plt+0x1860>
    2520:	cmp	r6, #0
    2524:	beq	27f4 <log_oom_internal@plt+0x188c>
    2528:	ldr	r9, [pc, #1048]	; 2948 <log_oom_internal@plt+0x19e0>
    252c:	ldr	r8, [pc, #1048]	; 294c <log_oom_internal@plt+0x19e4>
    2530:	ldr	sl, [pc, #1048]	; 2950 <log_oom_internal@plt+0x19e8>
    2534:	add	r9, pc, r9
    2538:	add	r8, pc, r8
    253c:	mov	r4, #0
    2540:	str	r4, [sp]
    2544:	mov	r3, r9
    2548:	mov	r2, r8
    254c:	mov	r1, r6
    2550:	mov	r0, r5
    2554:	bl	e6c <getopt_long@plt>
    2558:	cmp	r0, #0
    255c:	blt	2884 <log_oom_internal@plt+0x191c>
    2560:	cmp	r0, #256	; 0x100
    2564:	beq	2658 <log_oom_internal@plt+0x16f0>
    2568:	ble	2598 <log_oom_internal@plt+0x1630>
    256c:	cmp	r0, sl
    2570:	beq	2644 <log_oom_internal@plt+0x16dc>
    2574:	blt	25f8 <log_oom_internal@plt+0x1690>
    2578:	ldr	r3, [pc, #980]	; 2954 <log_oom_internal@plt+0x19ec>
    257c:	cmp	r0, r3
    2580:	bne	2910 <log_oom_internal@plt+0x19a8>
    2584:	ldr	r3, [pc, #972]	; 2958 <log_oom_internal@plt+0x19f0>
    2588:	mov	r2, #1
    258c:	add	r3, pc, r3
    2590:	strb	r2, [r3, #5]
    2594:	b	253c <log_oom_internal@plt+0x15d4>
    2598:	cmp	r0, #63	; 0x3f
    259c:	beq	2620 <log_oom_internal@plt+0x16b8>
    25a0:	cmp	r0, #104	; 0x68
    25a4:	bne	2910 <log_oom_internal@plt+0x19a8>
    25a8:	sub	r2, fp, #36	; 0x24
    25ac:	ldr	r1, [pc, #936]	; 295c <log_oom_internal@plt+0x19f4>
    25b0:	ldr	r0, [pc, #936]	; 2960 <log_oom_internal@plt+0x19f8>
    25b4:	add	r1, pc, r1
    25b8:	str	r4, [r2, #-76]!	; 0xffffffb4
    25bc:	add	r0, pc, r0
    25c0:	bl	e48 <terminal_urlify_man@plt>
    25c4:	cmp	r0, #0
    25c8:	blt	2798 <log_oom_internal@plt+0x1830>
    25cc:	ldr	r2, [pc, #912]	; 2964 <log_oom_internal@plt+0x19fc>
    25d0:	ldr	r1, [pc, #912]	; 2968 <log_oom_internal@plt+0x1a00>
    25d4:	ldr	r3, [fp, #-112]	; 0xffffff90
    25d8:	ldr	r2, [r7, r2]
    25dc:	add	r1, pc, r1
    25e0:	mov	r0, #1
    25e4:	ldr	r2, [r2]
    25e8:	bl	f5c <__printf_chk@plt>
    25ec:	ldr	r0, [fp, #-112]	; 0xffffff90
    25f0:	bl	d1c <free@plt>
    25f4:	b	2624 <log_oom_internal@plt+0x16bc>
    25f8:	ldr	r3, [pc, #876]	; 296c <log_oom_internal@plt+0x1a04>
    25fc:	ldr	r2, [pc, #876]	; 2970 <log_oom_internal@plt+0x1a08>
    2600:	mov	r1, #1
    2604:	ldr	r3, [r7, r3]
    2608:	add	r2, pc, r2
    260c:	ldr	r0, [r3]
    2610:	bl	d58 <parse_path_argument_and_warn@plt>
    2614:	subs	r4, r0, #0
    2618:	bge	253c <log_oom_internal@plt+0x15d4>
    261c:	b	2624 <log_oom_internal@plt+0x16bc>
    2620:	mvn	r4, #21
    2624:	ldr	r3, [fp, #-120]	; 0xffffff88
    2628:	ldr	r2, [fp, #-40]	; 0xffffffd8
    262c:	mov	r0, r4
    2630:	ldr	r3, [r3]
    2634:	cmp	r2, r3
    2638:	bne	293c <log_oom_internal@plt+0x19d4>
    263c:	sub	sp, fp, #32
    2640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2644:	ldr	r3, [pc, #808]	; 2974 <log_oom_internal@plt+0x1a0c>
    2648:	mov	r2, #1
    264c:	add	r3, pc, r3
    2650:	strb	r2, [r3, #4]
    2654:	b	253c <log_oom_internal@plt+0x15d4>
    2658:	bl	d10 <version@plt>
    265c:	mov	r4, r0
    2660:	cmp	r4, #0
    2664:	ble	2624 <log_oom_internal@plt+0x16bc>
    2668:	ldr	r5, [pc, #776]	; 2978 <log_oom_internal@plt+0x1a10>
    266c:	add	r5, pc, r5
    2670:	ldrb	r3, [r5, #4]
    2674:	ldr	ip, [r5]
    2678:	cmp	r3, #0
    267c:	beq	2758 <log_oom_internal@plt+0x17f0>
    2680:	mov	r0, ip
    2684:	bl	1164 <log_oom_internal@plt+0x1fc>
    2688:	subs	r4, r0, #0
    268c:	blt	2624 <log_oom_internal@plt+0x16bc>
    2690:	ldr	r5, [r5]
    2694:	mov	r0, r5
    2698:	bl	e0c <empty_or_root@plt>
    269c:	subs	r4, r0, #0
    26a0:	bne	2878 <log_oom_internal@plt+0x1910>
    26a4:	mov	r0, r5
    26a8:	bl	eb4 <strlen@plt>
    26ac:	add	r3, r0, #17
    26b0:	cmp	r3, #4194304	; 0x400000
    26b4:	bhi	28e4 <log_oom_internal@plt+0x197c>
    26b8:	add	r0, r0, #31
    26bc:	bic	r0, r0, #7
    26c0:	sub	sp, sp, r0
    26c4:	add	r4, sp, #16
    26c8:	mov	r1, r5
    26cc:	mov	r0, r4
    26d0:	bl	d94 <stpcpy@plt>
    26d4:	b	26e4 <log_oom_internal@plt+0x177c>
    26d8:	ldrb	r3, [r0, #-1]!
    26dc:	cmp	r3, #47	; 0x2f
    26e0:	bne	26f0 <log_oom_internal@plt+0x1788>
    26e4:	cmp	r0, r4
    26e8:	mov	ip, r0
    26ec:	bhi	26d8 <log_oom_internal@plt+0x1770>
    26f0:	ldr	lr, [pc, #644]	; 297c <log_oom_internal@plt+0x1a14>
    26f4:	add	lr, pc, lr
    26f8:	ldm	lr!, {r0, r1, r2, r3}
    26fc:	str	r0, [ip]
    2700:	str	r1, [ip, #4]
    2704:	str	r2, [ip, #8]
    2708:	str	r3, [ip, #12]
    270c:	sub	r5, fp, #108	; 0x6c
    2710:	mov	r0, r4
    2714:	mov	r2, r5
    2718:	mov	r1, #1
    271c:	bl	dac <id128_read@plt>
    2720:	subs	r4, r0, #0
    2724:	blt	2820 <log_oom_internal@plt+0x18b8>
    2728:	ldr	r3, [pc, #592]	; 2980 <log_oom_internal@plt+0x1a18>
    272c:	add	r3, pc, r3
    2730:	ldrb	r4, [r3, #5]
    2734:	cmp	r4, #0
    2738:	beq	2624 <log_oom_internal@plt+0x16bc>
    273c:	sub	r3, fp, #76	; 0x4c
    2740:	str	r3, [sp]
    2744:	ldm	r5, {r0, r1, r2, r3}
    2748:	bl	f50 <sd_id128_to_string@plt>
    274c:	bl	da0 <puts@plt>
    2750:	mov	r4, #0
    2754:	b	2624 <log_oom_internal@plt+0x16bc>
    2758:	mov	r4, #0
    275c:	mov	r5, #0
    2760:	sub	r3, fp, #84	; 0x54
    2764:	strd	r4, [fp, #-84]	; 0xffffffac
    2768:	ldm	r3, {r0, r1}
    276c:	sub	r3, fp, #92	; 0x5c
    2770:	strd	r4, [fp, #-92]	; 0xffffffa4
    2774:	sub	r5, fp, #108	; 0x6c
    2778:	stm	sp, {r0, r1}
    277c:	mov	r0, ip
    2780:	ldm	r3, {r2, r3}
    2784:	str	r5, [sp, #8]
    2788:	bl	1d0c <log_oom_internal@plt+0xda4>
    278c:	subs	r4, r0, #0
    2790:	bge	2728 <log_oom_internal@plt+0x17c0>
    2794:	b	2624 <log_oom_internal@plt+0x16bc>
    2798:	ldr	r3, [pc, #484]	; 2984 <log_oom_internal@plt+0x1a1c>
    279c:	ldr	r1, [pc, #484]	; 2988 <log_oom_internal@plt+0x1a20>
    27a0:	add	r3, pc, r3
    27a4:	mov	r0, r4
    27a8:	add	r3, r3, #132	; 0x84
    27ac:	mov	r2, #29
    27b0:	add	r1, pc, r1
    27b4:	bl	f68 <log_oom_internal@plt>
    27b8:	mov	r4, r0
    27bc:	ldr	r0, [fp, #-112]	; 0xffffff90
    27c0:	bl	d1c <free@plt>
    27c4:	b	2660 <log_oom_internal@plt+0x16f8>
    27c8:	ldr	r2, [pc, #444]	; 298c <log_oom_internal@plt+0x1a24>
    27cc:	ldr	r1, [pc, #444]	; 2990 <log_oom_internal@plt+0x1a28>
    27d0:	add	r2, pc, r2
    27d4:	add	r2, r2, #120	; 0x78
    27d8:	str	r2, [sp]
    27dc:	ldr	r2, [pc, #432]	; 2994 <log_oom_internal@plt+0x1a2c>
    27e0:	mov	r3, #66	; 0x42
    27e4:	add	r2, pc, r2
    27e8:	add	r1, pc, r1
    27ec:	mov	r0, #0
    27f0:	bl	f08 <log_assert_failed_realm@plt>
    27f4:	ldr	r3, [pc, #412]	; 2998 <log_oom_internal@plt+0x1a30>
    27f8:	ldr	r2, [pc, #412]	; 299c <log_oom_internal@plt+0x1a34>
    27fc:	add	r3, pc, r3
    2800:	ldr	r1, [pc, #408]	; 29a0 <log_oom_internal@plt+0x1a38>
    2804:	add	r3, r3, #120	; 0x78
    2808:	str	r3, [sp]
    280c:	mov	r0, r6
    2810:	mov	r3, #67	; 0x43
    2814:	add	r2, pc, r2
    2818:	add	r1, pc, r1
    281c:	bl	f08 <log_assert_failed_realm@plt>
    2820:	mov	r0, #0
    2824:	bl	dd0 <log_get_max_level_realm@plt>
    2828:	cmp	r0, #2
    282c:	rsble	r4, r4, #0
    2830:	uxtble	r4, r4
    2834:	rsble	r4, r4, #0
    2838:	ble	2624 <log_oom_internal@plt+0x16bc>
    283c:	ldr	r2, [pc, #352]	; 29a4 <log_oom_internal@plt+0x1a3c>
    2840:	ldr	r3, [pc, #352]	; 29a8 <log_oom_internal@plt+0x1a40>
    2844:	add	r2, pc, r2
    2848:	str	r2, [sp, #4]
    284c:	add	r3, pc, r3
    2850:	ldr	r2, [pc, #340]	; 29ac <log_oom_internal@plt+0x1a44>
    2854:	add	r3, r3, #156	; 0x9c
    2858:	mov	r1, r4
    285c:	str	r3, [sp]
    2860:	add	r2, pc, r2
    2864:	mov	r3, #129	; 0x81
    2868:	mov	r0, #3
    286c:	bl	f14 <log_internal_realm@plt>
    2870:	mov	r4, r0
    2874:	b	2624 <log_oom_internal@plt+0x16bc>
    2878:	ldr	r4, [pc, #304]	; 29b0 <log_oom_internal@plt+0x1a48>
    287c:	add	r4, pc, r4
    2880:	b	270c <log_oom_internal@plt+0x17a4>
    2884:	ldr	r3, [pc, #296]	; 29b4 <log_oom_internal@plt+0x1a4c>
    2888:	ldr	r3, [r7, r3]
    288c:	ldr	r3, [r3]
    2890:	cmp	r5, r3
    2894:	ble	2668 <log_oom_internal@plt+0x1700>
    2898:	mov	r0, r4
    289c:	bl	dd0 <log_get_max_level_realm@plt>
    28a0:	cmp	r0, #2
    28a4:	ble	2620 <log_oom_internal@plt+0x16b8>
    28a8:	ldr	r2, [pc, #264]	; 29b8 <log_oom_internal@plt+0x1a50>
    28ac:	ldr	r3, [pc, #264]	; 29bc <log_oom_internal@plt+0x1a54>
    28b0:	add	r2, pc, r2
    28b4:	str	r2, [sp, #4]
    28b8:	add	r3, pc, r3
    28bc:	ldr	r2, [pc, #252]	; 29c0 <log_oom_internal@plt+0x1a58>
    28c0:	add	r3, r3, #140	; 0x8c
    28c4:	str	r3, [sp]
    28c8:	add	r2, pc, r2
    28cc:	mov	r3, #102	; 0x66
    28d0:	mov	r1, #1073741846	; 0x40000016
    28d4:	mov	r0, #3
    28d8:	bl	f14 <log_internal_realm@plt>
    28dc:	mov	r4, r0
    28e0:	b	2660 <log_oom_internal@plt+0x16f8>
    28e4:	ldr	r3, [pc, #216]	; 29c4 <log_oom_internal@plt+0x1a5c>
    28e8:	ldr	r2, [pc, #216]	; 29c8 <log_oom_internal@plt+0x1a60>
    28ec:	add	r3, pc, r3
    28f0:	ldr	r1, [pc, #212]	; 29cc <log_oom_internal@plt+0x1a64>
    28f4:	add	r3, r3, #152	; 0x98
    28f8:	str	r3, [sp]
    28fc:	mov	r0, r4
    2900:	mov	r3, #126	; 0x7e
    2904:	add	r2, pc, r2
    2908:	add	r1, pc, r1
    290c:	bl	f08 <log_assert_failed_realm@plt>
    2910:	ldr	r2, [pc, #184]	; 29d0 <log_oom_internal@plt+0x1a68>
    2914:	ldr	r1, [pc, #184]	; 29d4 <log_oom_internal@plt+0x1a6c>
    2918:	add	r2, pc, r2
    291c:	add	r2, r2, #120	; 0x78
    2920:	str	r2, [sp]
    2924:	ldr	r2, [pc, #172]	; 29d8 <log_oom_internal@plt+0x1a70>
    2928:	mov	r3, #97	; 0x61
    292c:	add	r2, pc, r2
    2930:	add	r1, pc, r1
    2934:	mov	r0, #0
    2938:	bl	d40 <log_assert_failed_unreachable_realm@plt>
    293c:	bl	e3c <__stack_chk_fail@plt>
    2940:	strdeq	r1, [r1], -r8
    2944:	andeq	r0, r0, r0, ror #1
    2948:	andeq	r1, r1, r0, asr #16
    294c:	andeq	r0, r0, r0, ror sp
    2950:	andeq	r0, r0, r2, lsl #2
    2954:	andeq	r0, r0, r3, lsl #2
    2958:	andeq	r1, r1, ip, ror sl
    295c:	andeq	r0, r0, ip, lsl #23
    2960:	andeq	r0, r0, r8, lsl #23
    2964:	andeq	r0, r0, r4, lsl #2
    2968:	andeq	r0, r0, r4, lsl #23
    296c:	andeq	r0, r0, ip, ror #1
    2970:	andeq	r1, r1, r0, lsl #20
    2974:			; <UNDEFINED> instruction: 0x000119bc
    2978:	muleq	r1, ip, r9
    297c:	andeq	r0, r0, ip, ror #7
    2980:	ldrdeq	r1, [r1], -ip
    2984:	andeq	r0, r0, r0, lsr #5
    2988:	andeq	r0, r0, ip, asr #18
    298c:	andeq	r0, r0, r0, ror r2
    2990:	andeq	r0, r0, r4, asr #18
    2994:	andeq	r0, r0, r8, lsl r9
    2998:	andeq	r0, r0, r4, asr #4
    299c:	andeq	r0, r0, r8, ror #17
    29a0:	andeq	r0, r0, r0, lsr #18
    29a4:	andeq	r0, r0, r4, lsl #21
    29a8:	strdeq	r0, [r0], -r4
    29ac:	muleq	r0, ip, r8
    29b0:	andeq	r0, r0, r4, ror #4
    29b4:	andeq	r0, r0, r4, ror #1
    29b8:	andeq	r0, r0, r0, lsl #20
    29bc:	andeq	r0, r0, r8, lsl #3
    29c0:	andeq	r0, r0, r4, lsr r8
    29c4:	andeq	r0, r0, r4, asr r1
    29c8:	strdeq	r0, [r0], -r8
    29cc:	andeq	r0, r0, r8, lsl #4
    29d0:	andeq	r0, r0, r8, lsr #2
    29d4:	andeq	r0, r0, r4, ror #18
    29d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    29dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    29e0:	mov	r7, r0
    29e4:	ldr	r6, [pc, #72]	; 2a34 <log_oom_internal@plt+0x1acc>
    29e8:	ldr	r5, [pc, #72]	; 2a38 <log_oom_internal@plt+0x1ad0>
    29ec:	add	r6, pc, r6
    29f0:	add	r5, pc, r5
    29f4:	sub	r6, r6, r5
    29f8:	mov	r8, r1
    29fc:	mov	r9, r2
    2a00:	bl	cd8 <path_is_mount_point@plt-0x20>
    2a04:	asrs	r6, r6, #2
    2a08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    2a0c:	mov	r4, #0
    2a10:	add	r4, r4, #1
    2a14:	ldr	r3, [r5], #4
    2a18:	mov	r2, r9
    2a1c:	mov	r1, r8
    2a20:	mov	r0, r7
    2a24:	blx	r3
    2a28:	cmp	r6, r4
    2a2c:	bne	2a10 <log_oom_internal@plt+0x1aa8>
    2a30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2a34:	andeq	r1, r1, r4, lsl #7
    2a38:	andeq	r1, r1, ip, ror r3
    2a3c:	bx	lr

Disassembly of section .fini:

00002a40 <.fini>:
    2a40:	push	{r3, lr}
    2a44:	pop	{r3, pc}
