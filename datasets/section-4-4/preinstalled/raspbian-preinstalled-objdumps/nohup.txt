
raspbian-preinstalled/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010cc0 <.init>:
   10cc0:	push	{r3, lr}
   10cc4:	bl	11598 <close@plt+0x648>
   10cc8:	pop	{r3, pc}

Disassembly of section .plt:

00010ccc <calloc@plt-0x14>:
   10ccc:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd0:	ldr	lr, [pc, #4]	; 10cdc <calloc@plt-0x4>
   10cd4:	add	lr, pc, lr
   10cd8:	ldr	pc, [lr, #8]!
   10cdc:	andeq	r5, r1, r4, lsr #6

00010ce0 <calloc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #804]!	; 0x324

00010cec <fputs_unlocked@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #796]!	; 0x31c

00010cf8 <raise@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #788]!	; 0x314

00010d04 <strcmp@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #780]!	; 0x30c

00010d10 <fflush@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #772]!	; 0x304

00010d1c <free@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #764]!	; 0x2fc

00010d28 <_exit@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #756]!	; 0x2f4

00010d34 <memcpy@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d40 <execvp@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #740]!	; 0x2e4

00010d4c <mbsinit@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #732]!	; 0x2dc

00010d58 <signal@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #724]!	; 0x2d4

00010d64 <memcmp@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #716]!	; 0x2cc

00010d70 <dcgettext@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #708]!	; 0x2c4

00010d7c <__stack_chk_fail@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #700]!	; 0x2bc

00010d88 <dup2@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #692]!	; 0x2b4

00010d94 <realloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #684]!	; 0x2ac

00010da0 <textdomain@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dac <iswprint@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #668]!	; 0x29c

00010db8 <fwrite@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #660]!	; 0x294

00010dc4 <lseek64@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #652]!	; 0x28c

00010dd0 <__ctype_get_mb_cur_max@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #644]!	; 0x284

00010ddc <__fpending@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #636]!	; 0x27c

00010de8 <mbrtowc@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #628]!	; 0x274

00010df4 <error@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #620]!	; 0x26c

00010e00 <open64@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #612]!	; 0x264

00010e0c <getenv@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #604]!	; 0x25c

00010e18 <malloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #596]!	; 0x254

00010e24 <__libc_start_main@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #588]!	; 0x24c

00010e30 <__freading@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #580]!	; 0x244

00010e3c <__gmon_start__@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #572]!	; 0x23c

00010e48 <mempcpy@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #564]!	; 0x234

00010e54 <getopt_long@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #556]!	; 0x22c

00010e60 <__ctype_b_loc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #548]!	; 0x224

00010e6c <exit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #540]!	; 0x21c

00010e78 <strlen@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #532]!	; 0x214

00010e84 <__errno_location@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #524]!	; 0x20c

00010e90 <__cxa_atexit@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #516]!	; 0x204

00010e9c <memset@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea8 <__printf_chk@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb4 <fileno@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec0 <__fprintf_chk@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #484]!	; 0x1e4

00010ecc <fclose@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed8 <fseeko64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee4 <fcntl64@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef0 <setlocale@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #452]!	; 0x1c4

00010efc <strrchr@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #444]!	; 0x1bc

00010f08 <nl_langinfo@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #436]!	; 0x1b4

00010f14 <bindtextdomain@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #428]!	; 0x1ac

00010f20 <umask@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #420]!	; 0x1a4

00010f2c <isatty@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #412]!	; 0x19c

00010f38 <strncmp@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #404]!	; 0x194

00010f44 <abort@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #396]!	; 0x18c

00010f50 <close@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00010f5c <.text>:
   10f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f60:	mov	r8, r0
   10f64:	sub	sp, sp, #36	; 0x24
   10f68:	ldr	r0, [r1]
   10f6c:	mov	r4, r1
   10f70:	bl	11ca0 <close@plt+0xd50>
   10f74:	ldr	r1, [pc, #1384]	; 114e4 <close@plt+0x594>
   10f78:	mov	r0, #6
   10f7c:	bl	10ef0 <setlocale@plt>
   10f80:	ldr	r1, [pc, #1376]	; 114e8 <close@plt+0x598>
   10f84:	ldr	r0, [pc, #1376]	; 114ec <close@plt+0x59c>
   10f88:	bl	10f14 <bindtextdomain@plt>
   10f8c:	ldr	r0, [pc, #1368]	; 114ec <close@plt+0x59c>
   10f90:	bl	10da0 <textdomain@plt>
   10f94:	ldr	r0, [pc, #1364]	; 114f0 <close@plt+0x5a0>
   10f98:	bl	10e0c <getenv@plt>
   10f9c:	mov	r6, #0
   10fa0:	ldr	r3, [pc, #1356]	; 114f4 <close@plt+0x5a4>
   10fa4:	cmp	r0, r6
   10fa8:	movne	r5, #127	; 0x7f
   10fac:	moveq	r5, #125	; 0x7d
   10fb0:	ldr	r0, [pc, #1344]	; 114f8 <close@plt+0x5a8>
   10fb4:	str	r5, [r3]
   10fb8:	bl	14e7c <close@plt+0x3f2c>
   10fbc:	ldr	r1, [pc, #1336]	; 114fc <close@plt+0x5ac>
   10fc0:	ldr	r2, [pc, #1336]	; 11500 <close@plt+0x5b0>
   10fc4:	ldr	r3, [pc, #1336]	; 11504 <close@plt+0x5b4>
   10fc8:	ldr	r0, [r1]
   10fcc:	mov	r1, r4
   10fd0:	str	r0, [sp]
   10fd4:	str	r2, [sp, #8]
   10fd8:	mov	r0, r8
   10fdc:	str	r3, [sp, #4]
   10fe0:	ldr	r2, [pc, #1312]	; 11508 <close@plt+0x5b8>
   10fe4:	ldr	r3, [pc, #1312]	; 1150c <close@plt+0x5bc>
   10fe8:	str	r6, [sp, #12]
   10fec:	bl	11bc0 <close@plt+0xc70>
   10ff0:	str	r6, [sp]
   10ff4:	mov	r1, r4
   10ff8:	mov	r0, r8
   10ffc:	ldr	r3, [pc, #1292]	; 11510 <close@plt+0x5c0>
   11000:	ldr	r2, [pc, #1292]	; 11514 <close@plt+0x5c4>
   11004:	bl	10e54 <getopt_long@plt>
   11008:	cmn	r0, #1
   1100c:	bne	1149c <close@plt+0x54c>
   11010:	ldr	r7, [pc, #1280]	; 11518 <close@plt+0x5c8>
   11014:	ldr	r3, [r7]
   11018:	cmp	r3, r8
   1101c:	bge	1147c <close@plt+0x52c>
   11020:	mov	r0, r6
   11024:	bl	10f2c <isatty@plt>
   11028:	mov	r6, r0
   1102c:	mov	r0, #1
   11030:	bl	10f2c <isatty@plt>
   11034:	subs	fp, r0, #0
   11038:	beq	11164 <close@plt+0x214>
   1103c:	mov	r0, #2
   11040:	bl	10f2c <isatty@plt>
   11044:	adds	r8, r0, #0
   11048:	movne	r8, #1
   1104c:	cmp	r6, #0
   11050:	mov	r9, r0
   11054:	bne	11214 <close@plt+0x2c4>
   11058:	cmp	fp, #0
   1105c:	str	r6, [sp, #16]
   11060:	beq	1119c <close@plt+0x24c>
   11064:	mvn	r0, #384	; 0x180
   11068:	bl	10f20 <umask@plt>
   1106c:	mov	r3, #384	; 0x180
   11070:	ldr	r2, [pc, #1188]	; 1151c <close@plt+0x5cc>
   11074:	ldr	r1, [pc, #1188]	; 11520 <close@plt+0x5d0>
   11078:	str	r8, [sp, #20]
   1107c:	mov	sl, r0
   11080:	mov	r0, #1
   11084:	bl	11a70 <close@plt+0xb20>
   11088:	mov	r8, r0
   1108c:	cmp	r8, #0
   11090:	blt	11278 <close@plt+0x328>
   11094:	ldr	r3, [pc, #1156]	; 11520 <close@plt+0x5d0>
   11098:	mov	r9, #0
   1109c:	str	r3, [sp, #24]
   110a0:	mov	r0, sl
   110a4:	bl	10f20 <umask@plt>
   110a8:	ldr	r3, [pc, #1140]	; 11524 <close@plt+0x5d4>
   110ac:	cmp	r6, #0
   110b0:	ldr	r1, [pc, #1136]	; 11528 <close@plt+0x5d8>
   110b4:	mov	r2, #5
   110b8:	moveq	r1, r3
   110bc:	mov	r0, #0
   110c0:	bl	10d70 <dcgettext@plt>
   110c4:	ldr	r1, [sp, #24]
   110c8:	mov	sl, r0
   110cc:	mov	r0, #4
   110d0:	bl	13c5c <close@plt+0x2d0c>
   110d4:	mov	r1, #0
   110d8:	mov	r2, sl
   110dc:	mov	r3, r0
   110e0:	mov	r0, r1
   110e4:	bl	10df4 <error@plt>
   110e8:	mov	r0, r9
   110ec:	bl	10d1c <free@plt>
   110f0:	ldr	r3, [sp, #20]
   110f4:	cmp	r3, #0
   110f8:	bne	112d0 <close@plt+0x380>
   110fc:	mov	r9, #2
   11100:	ldr	r3, [pc, #1060]	; 1152c <close@plt+0x5dc>
   11104:	ldr	r3, [r3]
   11108:	ldr	r0, [r3]
   1110c:	ands	r6, r0, #32
   11110:	bne	11158 <close@plt+0x208>
   11114:	mov	r1, #1
   11118:	mov	r0, r1
   1111c:	bl	10d58 <signal@plt>
   11120:	ldr	r7, [r7]
   11124:	add	r1, r4, r7, lsl #2
   11128:	ldr	r0, [r4, r7, lsl #2]
   1112c:	bl	10d40 <execvp@plt>
   11130:	bl	10e84 <__errno_location@plt>
   11134:	mov	r1, #2
   11138:	ldr	r8, [r0]
   1113c:	mov	r0, r9
   11140:	cmp	r8, r1
   11144:	moveq	r5, #127	; 0x7f
   11148:	movne	r5, #126	; 0x7e
   1114c:	bl	10d88 <dup2@plt>
   11150:	cmp	r0, #2
   11154:	beq	113b0 <close@plt+0x460>
   11158:	mov	r0, r5
   1115c:	add	sp, sp, #36	; 0x24
   11160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11164:	bl	10e84 <__errno_location@plt>
   11168:	ldr	r3, [r0]
   1116c:	cmp	r3, #9
   11170:	bne	1103c <close@plt+0xec>
   11174:	mov	r0, #2
   11178:	bl	10f2c <isatty@plt>
   1117c:	mov	sl, #1
   11180:	str	sl, [sp, #16]
   11184:	adds	r8, r0, #0
   11188:	movne	r8, #1
   1118c:	cmp	r6, #0
   11190:	mov	r9, r0
   11194:	beq	11248 <close@plt+0x2f8>
   11198:	b	1121c <close@plt+0x2cc>
   1119c:	cmp	r8, #0
   111a0:	beq	110fc <close@plt+0x1ac>
   111a4:	mov	r2, #3
   111a8:	ldr	r1, [pc, #896]	; 11530 <close@plt+0x5e0>
   111ac:	mov	r0, #2
   111b0:	bl	146fc <close@plt+0x37ac>
   111b4:	mov	r8, #1
   111b8:	mov	r9, r0
   111bc:	ldr	r3, [pc, #880]	; 11534 <close@plt+0x5e4>
   111c0:	cmp	r6, #0
   111c4:	ldr	r1, [pc, #876]	; 11538 <close@plt+0x5e8>
   111c8:	mov	r2, #5
   111cc:	moveq	r1, r3
   111d0:	mov	r0, #0
   111d4:	bl	10d70 <dcgettext@plt>
   111d8:	mov	r1, #0
   111dc:	mov	r2, r0
   111e0:	mov	r0, r1
   111e4:	bl	10df4 <error@plt>
   111e8:	mov	r1, #2
   111ec:	mov	r0, r8
   111f0:	bl	10d88 <dup2@plt>
   111f4:	cmp	r0, #0
   111f8:	blt	1141c <close@plt+0x4cc>
   111fc:	ldr	r3, [sp, #16]
   11200:	cmp	r3, #0
   11204:	beq	11100 <close@plt+0x1b0>
   11208:	mov	r0, r8
   1120c:	bl	10f50 <close@plt>
   11210:	b	11100 <close@plt+0x1b0>
   11214:	mov	sl, #0
   11218:	str	sl, [sp, #16]
   1121c:	mov	r3, #0
   11220:	mov	r0, r3
   11224:	mov	r2, #1
   11228:	ldr	r1, [pc, #780]	; 1153c <close@plt+0x5ec>
   1122c:	bl	11a70 <close@plt+0xb20>
   11230:	cmp	r0, #0
   11234:	blt	113e8 <close@plt+0x498>
   11238:	orrs	r9, fp, r9
   1123c:	beq	11388 <close@plt+0x438>
   11240:	cmp	fp, #0
   11244:	bne	11064 <close@plt+0x114>
   11248:	ands	r3, sl, r8
   1124c:	str	r3, [sp, #20]
   11250:	beq	1119c <close@plt+0x24c>
   11254:	mvn	r0, #384	; 0x180
   11258:	bl	10f20 <umask@plt>
   1125c:	mov	r2, #384	; 0x180
   11260:	ldr	r1, [pc, #692]	; 1151c <close@plt+0x5cc>
   11264:	mov	sl, r0
   11268:	ldr	r0, [pc, #688]	; 11520 <close@plt+0x5d0>
   1126c:	bl	10e00 <open64@plt>
   11270:	mov	r8, r0
   11274:	b	1108c <close@plt+0x13c>
   11278:	bl	10e84 <__errno_location@plt>
   1127c:	mov	r3, r0
   11280:	str	r0, [sp, #28]
   11284:	ldr	r3, [r3]
   11288:	ldr	r0, [pc, #688]	; 11540 <close@plt+0x5f0>
   1128c:	str	r3, [sp, #24]
   11290:	bl	10e0c <getenv@plt>
   11294:	subs	r8, r0, #0
   11298:	beq	11448 <close@plt+0x4f8>
   1129c:	mov	r2, #0
   112a0:	ldr	r1, [pc, #632]	; 11520 <close@plt+0x5d0>
   112a4:	bl	11adc <close@plt+0xb8c>
   112a8:	cmp	fp, #0
   112ac:	mov	r9, r0
   112b0:	bne	112f0 <close@plt+0x3a0>
   112b4:	mov	r2, #384	; 0x180
   112b8:	ldr	r1, [pc, #604]	; 1151c <close@plt+0x5cc>
   112bc:	bl	10e00 <open64@plt>
   112c0:	subs	r8, r0, #0
   112c4:	blt	114a4 <close@plt+0x554>
   112c8:	str	r9, [sp, #24]
   112cc:	b	110a0 <close@plt+0x150>
   112d0:	mov	r2, #3
   112d4:	ldr	r1, [pc, #596]	; 11530 <close@plt+0x5e0>
   112d8:	mov	r0, #2
   112dc:	bl	146fc <close@plt+0x37ac>
   112e0:	cmp	fp, #0
   112e4:	mov	r9, r0
   112e8:	bne	111e8 <close@plt+0x298>
   112ec:	b	111bc <close@plt+0x26c>
   112f0:	mov	r1, r0
   112f4:	mov	r3, #384	; 0x180
   112f8:	ldr	r2, [pc, #540]	; 1151c <close@plt+0x5cc>
   112fc:	mov	r0, #1
   11300:	bl	11a70 <close@plt+0xb20>
   11304:	subs	r8, r0, #0
   11308:	bge	112c8 <close@plt+0x378>
   1130c:	ldr	r3, [sp, #28]
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #552]	; 11544 <close@plt+0x5f4>
   11318:	mov	r0, #0
   1131c:	ldr	r4, [r3]
   11320:	bl	10d70 <dcgettext@plt>
   11324:	ldr	r1, [pc, #500]	; 11520 <close@plt+0x5d0>
   11328:	mov	r6, r0
   1132c:	mov	r0, #4
   11330:	bl	13c5c <close@plt+0x2d0c>
   11334:	mov	r2, r6
   11338:	ldr	r1, [sp, #24]
   1133c:	mov	r3, r0
   11340:	mov	r0, #0
   11344:	bl	10df4 <error@plt>
   11348:	cmp	r9, #0
   1134c:	beq	11158 <close@plt+0x208>
   11350:	mov	r2, #5
   11354:	ldr	r1, [pc, #488]	; 11544 <close@plt+0x5f4>
   11358:	mov	r0, #0
   1135c:	bl	10d70 <dcgettext@plt>
   11360:	mov	r1, r9
   11364:	mov	r6, r0
   11368:	mov	r0, #4
   1136c:	bl	13c5c <close@plt+0x2d0c>
   11370:	mov	r2, r6
   11374:	mov	r1, r4
   11378:	mov	r3, r0
   1137c:	mov	r0, #0
   11380:	bl	10df4 <error@plt>
   11384:	b	11158 <close@plt+0x208>
   11388:	mov	r2, #5
   1138c:	ldr	r1, [pc, #436]	; 11548 <close@plt+0x5f8>
   11390:	mov	r0, r9
   11394:	bl	10d70 <dcgettext@plt>
   11398:	mov	r1, r9
   1139c:	mov	r2, r0
   113a0:	mov	r0, r9
   113a4:	bl	10df4 <error@plt>
   113a8:	mov	r9, #2
   113ac:	b	11100 <close@plt+0x1b0>
   113b0:	mov	r2, #5
   113b4:	ldr	r1, [pc, #400]	; 1154c <close@plt+0x5fc>
   113b8:	mov	r0, r6
   113bc:	bl	10d70 <dcgettext@plt>
   113c0:	ldr	r1, [r4, r7, lsl #2]
   113c4:	mov	r9, r0
   113c8:	mov	r0, #4
   113cc:	bl	13c5c <close@plt+0x2d0c>
   113d0:	mov	r2, r9
   113d4:	mov	r1, r8
   113d8:	mov	r3, r0
   113dc:	mov	r0, r6
   113e0:	bl	10df4 <error@plt>
   113e4:	b	11158 <close@plt+0x208>
   113e8:	bl	10e84 <__errno_location@plt>
   113ec:	mov	r2, #5
   113f0:	ldr	r1, [pc, #344]	; 11550 <close@plt+0x600>
   113f4:	ldr	r3, [r0]
   113f8:	mov	r0, #0
   113fc:	str	r3, [sp, #20]
   11400:	bl	10d70 <dcgettext@plt>
   11404:	ldr	r3, [sp, #20]
   11408:	mov	r1, r3
   1140c:	mov	r2, r0
   11410:	mov	r0, r5
   11414:	bl	10df4 <error@plt>
   11418:	b	11238 <close@plt+0x2e8>
   1141c:	bl	10e84 <__errno_location@plt>
   11420:	mov	r2, #5
   11424:	ldr	r1, [pc, #296]	; 11554 <close@plt+0x604>
   11428:	ldr	r6, [r0]
   1142c:	mov	r0, #0
   11430:	bl	10d70 <dcgettext@plt>
   11434:	mov	r1, r6
   11438:	mov	r2, r0
   1143c:	mov	r0, r5
   11440:	bl	10df4 <error@plt>
   11444:	b	111fc <close@plt+0x2ac>
   11448:	mov	r2, #5
   1144c:	ldr	r1, [pc, #240]	; 11544 <close@plt+0x5f4>
   11450:	bl	10d70 <dcgettext@plt>
   11454:	ldr	r1, [pc, #196]	; 11520 <close@plt+0x5d0>
   11458:	mov	r4, r0
   1145c:	mov	r0, #4
   11460:	bl	13c5c <close@plt+0x2d0c>
   11464:	mov	r2, r4
   11468:	ldr	r1, [sp, #24]
   1146c:	mov	r3, r0
   11470:	mov	r0, r8
   11474:	bl	10df4 <error@plt>
   11478:	b	11158 <close@plt+0x208>
   1147c:	mov	r2, #5
   11480:	ldr	r1, [pc, #208]	; 11558 <close@plt+0x608>
   11484:	mov	r0, r6
   11488:	bl	10d70 <dcgettext@plt>
   1148c:	mov	r1, r6
   11490:	mov	r2, r0
   11494:	mov	r0, r6
   11498:	bl	10df4 <error@plt>
   1149c:	mov	r0, r5
   114a0:	bl	1164c <close@plt+0x6fc>
   114a4:	ldr	r3, [sp, #28]
   114a8:	mov	r2, #5
   114ac:	ldr	r1, [pc, #144]	; 11544 <close@plt+0x5f4>
   114b0:	mov	r0, fp
   114b4:	ldr	r4, [r3]
   114b8:	bl	10d70 <dcgettext@plt>
   114bc:	ldr	r1, [pc, #92]	; 11520 <close@plt+0x5d0>
   114c0:	mov	r6, r0
   114c4:	mov	r0, #4
   114c8:	bl	13c5c <close@plt+0x2d0c>
   114cc:	mov	r2, r6
   114d0:	ldr	r1, [sp, #24]
   114d4:	mov	r3, r0
   114d8:	mov	r0, fp
   114dc:	bl	10df4 <error@plt>
   114e0:	b	11350 <close@plt+0x400>
   114e4:	andeq	r5, r1, r0, lsl #18
   114e8:	andeq	r5, r1, ip, asr #6
   114ec:	andeq	r5, r1, r0, lsl #4
   114f0:	andeq	r5, r1, r0, ror #6
   114f4:	strdeq	r6, [r2], -r0
   114f8:	muleq	r1, r8, r9
   114fc:	andeq	r6, r2, ip, ror #1
   11500:	andeq	r5, r1, r0, ror r3
   11504:	andeq	r1, r1, ip, asr #12
   11508:	andeq	r4, r1, r8, ror #29
   1150c:	strdeq	r5, [r1], -ip
   11510:	ldrdeq	r4, [r1], -r8
   11514:	andeq	r5, r1, r0, lsl #7
   11518:	andeq	r6, r2, r0, asr #2
   1151c:	andeq	r0, r0, r1, asr #8
   11520:	andeq	r5, r1, ip, lsr #5
   11524:	andeq	r5, r1, r4, ror #5
   11528:			; <UNDEFINED> instruction: 0x000152b8
   1152c:	andeq	r6, r2, r8, asr #2
   11530:	andeq	r0, r0, r6, lsl #8
   11534:	andeq	r5, r1, ip, lsr #6
   11538:	strdeq	r5, [r1], -ip
   1153c:	muleq	r1, r4, r3
   11540:	ldrdeq	r5, [r1], -ip
   11544:	andeq	r5, r1, r4, ror #7
   11548:	andeq	r5, r1, ip, asr #7
   1154c:	andeq	r5, r1, ip, lsl r4
   11550:	andeq	r5, r1, r0, lsr #7
   11554:	strdeq	r5, [r1], -r8
   11558:	andeq	r5, r1, r4, lsl #7
   1155c:	mov	fp, #0
   11560:	mov	lr, #0
   11564:	pop	{r1}		; (ldr r1, [sp], #4)
   11568:	mov	r2, sp
   1156c:	push	{r2}		; (str r2, [sp, #-4]!)
   11570:	push	{r0}		; (str r0, [sp, #-4]!)
   11574:	ldr	ip, [pc, #16]	; 1158c <close@plt+0x63c>
   11578:	push	{ip}		; (str ip, [sp, #-4]!)
   1157c:	ldr	r0, [pc, #12]	; 11590 <close@plt+0x640>
   11580:	ldr	r3, [pc, #12]	; 11594 <close@plt+0x644>
   11584:	bl	10e24 <__libc_start_main@plt>
   11588:	bl	10f44 <abort@plt>
   1158c:	andeq	r4, r1, r8, ror lr
   11590:	andeq	r0, r1, ip, asr pc
   11594:	andeq	r4, r1, r8, lsl lr
   11598:	ldr	r3, [pc, #20]	; 115b4 <close@plt+0x664>
   1159c:	ldr	r2, [pc, #20]	; 115b8 <close@plt+0x668>
   115a0:	add	r3, pc, r3
   115a4:	ldr	r2, [r3, r2]
   115a8:	cmp	r2, #0
   115ac:	bxeq	lr
   115b0:	b	10e3c <__gmon_start__@plt>
   115b4:	andeq	r4, r1, r8, asr sl
   115b8:	andeq	r0, r0, r0, ror #1
   115bc:	ldr	r0, [pc, #24]	; 115dc <close@plt+0x68c>
   115c0:	ldr	r3, [pc, #24]	; 115e0 <close@plt+0x690>
   115c4:	cmp	r3, r0
   115c8:	bxeq	lr
   115cc:	ldr	r3, [pc, #16]	; 115e4 <close@plt+0x694>
   115d0:	cmp	r3, #0
   115d4:	bxeq	lr
   115d8:	bx	r3
   115dc:	andeq	r6, r2, r4, lsr r1
   115e0:	andeq	r6, r2, r4, lsr r1
   115e4:	andeq	r0, r0, r0
   115e8:	ldr	r0, [pc, #36]	; 11614 <close@plt+0x6c4>
   115ec:	ldr	r1, [pc, #36]	; 11618 <close@plt+0x6c8>
   115f0:	sub	r1, r1, r0
   115f4:	asr	r1, r1, #2
   115f8:	add	r1, r1, r1, lsr #31
   115fc:	asrs	r1, r1, #1
   11600:	bxeq	lr
   11604:	ldr	r3, [pc, #16]	; 1161c <close@plt+0x6cc>
   11608:	cmp	r3, #0
   1160c:	bxeq	lr
   11610:	bx	r3
   11614:	andeq	r6, r2, r4, lsr r1
   11618:	andeq	r6, r2, r4, lsr r1
   1161c:	andeq	r0, r0, r0
   11620:	push	{r4, lr}
   11624:	ldr	r4, [pc, #24]	; 11644 <close@plt+0x6f4>
   11628:	ldrb	r3, [r4]
   1162c:	cmp	r3, #0
   11630:	popne	{r4, pc}
   11634:	bl	115bc <close@plt+0x66c>
   11638:	mov	r3, #1
   1163c:	strb	r3, [r4]
   11640:	pop	{r4, pc}
   11644:	andeq	r6, r2, r4, asr r1
   11648:	b	115e8 <close@plt+0x698>
   1164c:	ldr	r3, [pc, #716]	; 11920 <close@plt+0x9d0>
   11650:	push	{r7, lr}
   11654:	sub	sp, sp, #64	; 0x40
   11658:	ldr	r3, [r3]
   1165c:	subs	r4, r0, #0
   11660:	str	r3, [sp, #60]	; 0x3c
   11664:	beq	116a0 <close@plt+0x750>
   11668:	ldr	r3, [pc, #692]	; 11924 <close@plt+0x9d4>
   1166c:	mov	r2, #5
   11670:	ldr	r1, [pc, #688]	; 11928 <close@plt+0x9d8>
   11674:	mov	r0, #0
   11678:	ldr	r5, [r3]
   1167c:	bl	10d70 <dcgettext@plt>
   11680:	ldr	r3, [pc, #676]	; 1192c <close@plt+0x9dc>
   11684:	mov	r1, #1
   11688:	ldr	r3, [r3]
   1168c:	mov	r2, r0
   11690:	mov	r0, r5
   11694:	bl	10ec0 <__fprintf_chk@plt>
   11698:	mov	r0, r4
   1169c:	bl	10e6c <exit@plt>
   116a0:	mov	r2, #5
   116a4:	ldr	r1, [pc, #644]	; 11930 <close@plt+0x9e0>
   116a8:	bl	10d70 <dcgettext@plt>
   116ac:	ldr	r6, [pc, #632]	; 1192c <close@plt+0x9dc>
   116b0:	ldr	r5, [pc, #636]	; 11934 <close@plt+0x9e4>
   116b4:	ldr	r3, [r6]
   116b8:	mov	r2, r3
   116bc:	mov	r1, r0
   116c0:	mov	r0, #1
   116c4:	bl	10ea8 <__printf_chk@plt>
   116c8:	mov	r2, #5
   116cc:	ldr	r1, [pc, #612]	; 11938 <close@plt+0x9e8>
   116d0:	mov	r0, r4
   116d4:	bl	10d70 <dcgettext@plt>
   116d8:	ldr	r1, [r5]
   116dc:	bl	10cec <fputs_unlocked@plt>
   116e0:	mov	r2, #5
   116e4:	ldr	r1, [pc, #592]	; 1193c <close@plt+0x9ec>
   116e8:	mov	r0, r4
   116ec:	bl	10d70 <dcgettext@plt>
   116f0:	ldr	r1, [r5]
   116f4:	bl	10cec <fputs_unlocked@plt>
   116f8:	mov	r2, #5
   116fc:	ldr	r1, [pc, #572]	; 11940 <close@plt+0x9f0>
   11700:	mov	r0, r4
   11704:	bl	10d70 <dcgettext@plt>
   11708:	ldr	r1, [r5]
   1170c:	bl	10cec <fputs_unlocked@plt>
   11710:	mov	r2, #5
   11714:	ldr	r1, [pc, #552]	; 11944 <close@plt+0x9f4>
   11718:	mov	r0, r4
   1171c:	bl	10d70 <dcgettext@plt>
   11720:	ldr	r2, [r6]
   11724:	mov	r1, r0
   11728:	mov	r0, #1
   1172c:	bl	10ea8 <__printf_chk@plt>
   11730:	mov	r2, #5
   11734:	ldr	r1, [pc, #524]	; 11948 <close@plt+0x9f8>
   11738:	mov	r0, r4
   1173c:	bl	10d70 <dcgettext@plt>
   11740:	ldr	r2, [pc, #516]	; 1194c <close@plt+0x9fc>
   11744:	mov	r1, r0
   11748:	mov	r0, #1
   1174c:	bl	10ea8 <__printf_chk@plt>
   11750:	ldr	lr, [pc, #504]	; 11950 <close@plt+0xa00>
   11754:	add	ip, sp, #4
   11758:	ldm	lr!, {r0, r1, r2, r3}
   1175c:	stmia	ip!, {r0, r1, r2, r3}
   11760:	ldm	lr!, {r0, r1, r2, r3}
   11764:	ldr	r6, [sp, #4]
   11768:	stmia	ip!, {r0, r1, r2, r3}
   1176c:	cmp	r6, #0
   11770:	ldm	lr!, {r0, r1, r2, r3}
   11774:	addeq	r5, sp, #4
   11778:	stmia	ip!, {r0, r1, r2, r3}
   1177c:	ldm	lr, {r0, r1}
   11780:	stm	ip, {r0, r1}
   11784:	beq	117b4 <close@plt+0x864>
   11788:	ldr	r7, [pc, #444]	; 1194c <close@plt+0x9fc>
   1178c:	add	r5, sp, #4
   11790:	b	117a0 <close@plt+0x850>
   11794:	ldr	r6, [r5, #8]!
   11798:	cmp	r6, #0
   1179c:	beq	117b4 <close@plt+0x864>
   117a0:	mov	r1, r6
   117a4:	mov	r0, r7
   117a8:	bl	10d04 <strcmp@plt>
   117ac:	cmp	r0, #0
   117b0:	bne	11794 <close@plt+0x844>
   117b4:	ldr	r5, [r5, #4]
   117b8:	mov	r2, #5
   117bc:	cmp	r5, #0
   117c0:	ldr	r1, [pc, #396]	; 11954 <close@plt+0xa04>
   117c4:	beq	1186c <close@plt+0x91c>
   117c8:	mov	r0, #0
   117cc:	bl	10d70 <dcgettext@plt>
   117d0:	ldr	r3, [pc, #384]	; 11958 <close@plt+0xa08>
   117d4:	ldr	r2, [pc, #384]	; 1195c <close@plt+0xa0c>
   117d8:	mov	r1, r0
   117dc:	mov	r0, #1
   117e0:	bl	10ea8 <__printf_chk@plt>
   117e4:	mov	r1, #0
   117e8:	mov	r0, #5
   117ec:	bl	10ef0 <setlocale@plt>
   117f0:	cmp	r0, #0
   117f4:	ldreq	r6, [pc, #336]	; 1194c <close@plt+0x9fc>
   117f8:	beq	11814 <close@plt+0x8c4>
   117fc:	mov	r2, #3
   11800:	ldr	r1, [pc, #344]	; 11960 <close@plt+0xa10>
   11804:	bl	10f38 <strncmp@plt>
   11808:	ldr	r6, [pc, #316]	; 1194c <close@plt+0x9fc>
   1180c:	cmp	r0, #0
   11810:	bne	118fc <close@plt+0x9ac>
   11814:	mov	r2, #5
   11818:	ldr	r1, [pc, #324]	; 11964 <close@plt+0xa14>
   1181c:	mov	r0, #0
   11820:	bl	10d70 <dcgettext@plt>
   11824:	ldr	r3, [pc, #288]	; 1194c <close@plt+0x9fc>
   11828:	ldr	r2, [pc, #296]	; 11958 <close@plt+0xa08>
   1182c:	mov	r1, r0
   11830:	mov	r0, #1
   11834:	bl	10ea8 <__printf_chk@plt>
   11838:	mov	r2, #5
   1183c:	ldr	r1, [pc, #292]	; 11968 <close@plt+0xa18>
   11840:	mov	r0, #0
   11844:	bl	10d70 <dcgettext@plt>
   11848:	ldr	r2, [pc, #284]	; 1196c <close@plt+0xa1c>
   1184c:	cmp	r5, r6
   11850:	ldr	r3, [pc, #280]	; 11970 <close@plt+0xa20>
   11854:	movne	r3, r2
   11858:	mov	r1, r0
   1185c:	mov	r2, r5
   11860:	mov	r0, #1
   11864:	bl	10ea8 <__printf_chk@plt>
   11868:	b	11698 <close@plt+0x748>
   1186c:	mov	r0, r5
   11870:	bl	10d70 <dcgettext@plt>
   11874:	ldr	r3, [pc, #220]	; 11958 <close@plt+0xa08>
   11878:	ldr	r2, [pc, #220]	; 1195c <close@plt+0xa0c>
   1187c:	mov	r1, r0
   11880:	mov	r0, #1
   11884:	bl	10ea8 <__printf_chk@plt>
   11888:	mov	r1, r5
   1188c:	mov	r0, #5
   11890:	bl	10ef0 <setlocale@plt>
   11894:	cmp	r0, #0
   11898:	beq	118b0 <close@plt+0x960>
   1189c:	mov	r2, #3
   118a0:	ldr	r1, [pc, #184]	; 11960 <close@plt+0xa10>
   118a4:	bl	10f38 <strncmp@plt>
   118a8:	cmp	r0, #0
   118ac:	bne	118f4 <close@plt+0x9a4>
   118b0:	mov	r2, #5
   118b4:	ldr	r1, [pc, #168]	; 11964 <close@plt+0xa14>
   118b8:	mov	r0, #0
   118bc:	bl	10d70 <dcgettext@plt>
   118c0:	ldr	r3, [pc, #132]	; 1194c <close@plt+0x9fc>
   118c4:	ldr	r2, [pc, #140]	; 11958 <close@plt+0xa08>
   118c8:	mov	r5, r3
   118cc:	mov	r1, r0
   118d0:	mov	r0, #1
   118d4:	bl	10ea8 <__printf_chk@plt>
   118d8:	ldr	r1, [pc, #136]	; 11968 <close@plt+0xa18>
   118dc:	mov	r2, #5
   118e0:	mov	r0, #0
   118e4:	bl	10d70 <dcgettext@plt>
   118e8:	ldr	r3, [pc, #128]	; 11970 <close@plt+0xa20>
   118ec:	mov	r1, r0
   118f0:	b	1185c <close@plt+0x90c>
   118f4:	ldr	r6, [pc, #80]	; 1194c <close@plt+0x9fc>
   118f8:	mov	r5, r6
   118fc:	mov	r2, #5
   11900:	ldr	r1, [pc, #108]	; 11974 <close@plt+0xa24>
   11904:	mov	r0, #0
   11908:	bl	10d70 <dcgettext@plt>
   1190c:	ldr	r2, [pc, #56]	; 1194c <close@plt+0x9fc>
   11910:	mov	r1, r0
   11914:	mov	r0, #1
   11918:	bl	10ea8 <__printf_chk@plt>
   1191c:	b	11814 <close@plt+0x8c4>
   11920:	andeq	r5, r2, r8, lsl #30
   11924:	andeq	r6, r2, r8, asr #2
   11928:	strdeq	r4, [r1], -r0
   1192c:	andeq	r6, r2, r0, ror #2
   11930:	andeq	r4, r1, r8, lsl pc
   11934:	andeq	r6, r2, ip, asr #2
   11938:	andeq	r4, r1, r8, asr #30
   1193c:	andeq	r4, r1, r0, ror pc
   11940:	andeq	r4, r1, r0, lsr #31
   11944:	ldrdeq	r4, [r1], -r8
   11948:	strdeq	r5, [r1], -ip
   1194c:	andeq	r4, r1, r8, ror #29
   11950:	andeq	r4, r1, r0, lsr #29
   11954:			; <UNDEFINED> instruction: 0x000151bc
   11958:	ldrdeq	r5, [r1], -r4
   1195c:	strdeq	r5, [r1], -ip
   11960:	andeq	r5, r1, ip, lsl #4
   11964:	andeq	r5, r1, r8, asr r2
   11968:	andeq	r5, r1, r8, ror r2
   1196c:	andeq	r5, r1, r0, lsl #18
   11970:	andeq	r5, r1, r0, asr #8
   11974:	andeq	r5, r1, r0, lsl r2
   11978:	ldr	r3, [pc, #4]	; 11984 <close@plt+0xa34>
   1197c:	str	r0, [r3]
   11980:	bx	lr
   11984:	andeq	r6, r2, r8, asr r1
   11988:	ldr	r3, [pc, #4]	; 11994 <close@plt+0xa44>
   1198c:	strb	r0, [r3, #4]
   11990:	bx	lr
   11994:	andeq	r6, r2, r8, asr r1
   11998:	ldr	r3, [pc, #180]	; 11a54 <close@plt+0xb04>
   1199c:	push	{r4, r5, r6, lr}
   119a0:	sub	sp, sp, #8
   119a4:	ldr	r0, [r3]
   119a8:	bl	148c8 <close@plt+0x3978>
   119ac:	cmp	r0, #0
   119b0:	beq	119d8 <close@plt+0xa88>
   119b4:	bl	10e84 <__errno_location@plt>
   119b8:	ldr	r5, [pc, #152]	; 11a58 <close@plt+0xb08>
   119bc:	ldrb	r3, [r5, #4]
   119c0:	cmp	r3, #0
   119c4:	mov	r4, r0
   119c8:	beq	119f4 <close@plt+0xaa4>
   119cc:	ldr	r3, [r0]
   119d0:	cmp	r3, #32
   119d4:	bne	119f4 <close@plt+0xaa4>
   119d8:	ldr	r3, [pc, #124]	; 11a5c <close@plt+0xb0c>
   119dc:	ldr	r0, [r3]
   119e0:	bl	148c8 <close@plt+0x3978>
   119e4:	cmp	r0, #0
   119e8:	bne	11a34 <close@plt+0xae4>
   119ec:	add	sp, sp, #8
   119f0:	pop	{r4, r5, r6, pc}
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #96]	; 11a60 <close@plt+0xb10>
   119fc:	mov	r0, #0
   11a00:	bl	10d70 <dcgettext@plt>
   11a04:	mov	r6, r0
   11a08:	ldr	r0, [r5]
   11a0c:	cmp	r0, #0
   11a10:	beq	11a40 <close@plt+0xaf0>
   11a14:	ldr	r4, [r4]
   11a18:	bl	13d24 <close@plt+0x2dd4>
   11a1c:	mov	r1, r4
   11a20:	str	r6, [sp]
   11a24:	ldr	r2, [pc, #56]	; 11a64 <close@plt+0xb14>
   11a28:	mov	r3, r0
   11a2c:	mov	r0, #0
   11a30:	bl	10df4 <error@plt>
   11a34:	ldr	r3, [pc, #44]	; 11a68 <close@plt+0xb18>
   11a38:	ldr	r0, [r3]
   11a3c:	bl	10d28 <_exit@plt>
   11a40:	mov	r3, r6
   11a44:	ldr	r1, [r4]
   11a48:	ldr	r2, [pc, #28]	; 11a6c <close@plt+0xb1c>
   11a4c:	bl	10df4 <error@plt>
   11a50:	b	11a34 <close@plt+0xae4>
   11a54:	andeq	r6, r2, ip, asr #2
   11a58:	andeq	r6, r2, r8, asr r1
   11a5c:	andeq	r6, r2, r8, asr #2
   11a60:	andeq	r5, r1, ip, lsr #9
   11a64:			; <UNDEFINED> instruction: 0x000154b8
   11a68:	strdeq	r6, [r2], -r0
   11a6c:			; <UNDEFINED> instruction: 0x000154bc
   11a70:	mov	ip, r1
   11a74:	push	{r4, r5, r6, r7, r8, lr}
   11a78:	mov	r1, r2
   11a7c:	mov	r5, r0
   11a80:	mov	r2, r3
   11a84:	mov	r0, ip
   11a88:	bl	10e00 <open64@plt>
   11a8c:	sub	r3, r5, r0
   11a90:	clz	r3, r3
   11a94:	lsr	r3, r3, #5
   11a98:	orrs	r3, r3, r0, lsr #31
   11a9c:	mov	r4, r0
   11aa0:	beq	11aac <close@plt+0xb5c>
   11aa4:	mov	r0, r4
   11aa8:	pop	{r4, r5, r6, r7, r8, pc}
   11aac:	mov	r1, r5
   11ab0:	bl	10d88 <dup2@plt>
   11ab4:	mov	r7, r0
   11ab8:	bl	10e84 <__errno_location@plt>
   11abc:	mov	r5, r0
   11ac0:	mov	r0, r4
   11ac4:	ldr	r6, [r5]
   11ac8:	mov	r4, r7
   11acc:	bl	10f50 <close@plt>
   11ad0:	str	r6, [r5]
   11ad4:	mov	r0, r4
   11ad8:	pop	{r4, r5, r6, r7, r8, pc}
   11adc:	push	{r4, lr}
   11ae0:	bl	11af0 <close@plt+0xba0>
   11ae4:	cmp	r0, #0
   11ae8:	popne	{r4, pc}
   11aec:	bl	146bc <close@plt+0x376c>
   11af0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11af4:	mov	r6, r1
   11af8:	mov	r9, r2
   11afc:	mov	r7, r0
   11b00:	bl	1493c <close@plt+0x39ec>
   11b04:	mov	r4, r0
   11b08:	bl	1498c <close@plt+0x3a3c>
   11b0c:	sub	r4, r4, r7
   11b10:	mov	r5, r0
   11b14:	mov	r0, r6
   11b18:	bl	10e78 <strlen@plt>
   11b1c:	cmp	r5, #0
   11b20:	add	r4, r4, r5
   11b24:	mov	r8, r0
   11b28:	beq	11ba8 <close@plt+0xc58>
   11b2c:	add	r3, r7, r4
   11b30:	ldrb	r3, [r3, #-1]
   11b34:	cmp	r3, #47	; 0x2f
   11b38:	beq	11b9c <close@plt+0xc4c>
   11b3c:	ldrb	r3, [r6]
   11b40:	cmp	r3, #47	; 0x2f
   11b44:	beq	11b9c <close@plt+0xc4c>
   11b48:	mov	r5, #1
   11b4c:	mov	sl, #47	; 0x2f
   11b50:	add	r0, r8, #1
   11b54:	add	r0, r0, r4
   11b58:	add	r0, r0, r5
   11b5c:	bl	10e18 <malloc@plt>
   11b60:	subs	fp, r0, #0
   11b64:	beq	11b94 <close@plt+0xc44>
   11b68:	mov	r2, r4
   11b6c:	mov	r1, r7
   11b70:	bl	10e48 <mempcpy@plt>
   11b74:	cmp	r9, #0
   11b78:	mov	r2, r8
   11b7c:	mov	r1, r6
   11b80:	strb	sl, [r0], r5
   11b84:	strne	r0, [r9]
   11b88:	bl	10e48 <mempcpy@plt>
   11b8c:	mov	r3, #0
   11b90:	strb	r3, [r0]
   11b94:	mov	r0, fp
   11b98:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b9c:	mov	r5, #0
   11ba0:	mov	sl, r5
   11ba4:	b	11b50 <close@plt+0xc00>
   11ba8:	ldrb	r3, [r6]
   11bac:	cmp	r3, #47	; 0x2f
   11bb0:	moveq	r5, #1
   11bb4:	movne	sl, #0
   11bb8:	moveq	sl, #46	; 0x2e
   11bbc:	b	11b50 <close@plt+0xc00>
   11bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bc4:	sub	sp, sp, #20
   11bc8:	ldr	r5, [pc, #184]	; 11c88 <close@plt+0xd38>
   11bcc:	ldr	r4, [pc, #184]	; 11c8c <close@plt+0xd3c>
   11bd0:	mov	r6, #0
   11bd4:	ldr	ip, [r5]
   11bd8:	cmp	r0, #2
   11bdc:	ldr	r7, [r4]
   11be0:	str	ip, [sp, #12]
   11be4:	ldr	sl, [sp, #56]	; 0x38
   11be8:	str	r6, [r4]
   11bec:	ldr	fp, [sp, #60]	; 0x3c
   11bf0:	beq	11c1c <close@plt+0xccc>
   11bf4:	ldr	r0, [sp, #12]
   11bf8:	ldr	r3, [pc, #144]	; 11c90 <close@plt+0xd40>
   11bfc:	ldr	r1, [r5]
   11c00:	mov	r2, #0
   11c04:	cmp	r0, r1
   11c08:	str	r7, [r4]
   11c0c:	str	r2, [r3]
   11c10:	bne	11c84 <close@plt+0xd34>
   11c14:	add	sp, sp, #20
   11c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c1c:	mov	r8, r2
   11c20:	mov	r9, r3
   11c24:	str	r6, [sp]
   11c28:	ldr	r3, [pc, #100]	; 11c94 <close@plt+0xd44>
   11c2c:	ldr	r2, [pc, #100]	; 11c98 <close@plt+0xd48>
   11c30:	bl	10e54 <getopt_long@plt>
   11c34:	cmn	r0, #1
   11c38:	beq	11bf4 <close@plt+0xca4>
   11c3c:	cmp	r0, #104	; 0x68
   11c40:	beq	11c78 <close@plt+0xd28>
   11c44:	cmp	r0, #118	; 0x76
   11c48:	bne	11bf4 <close@plt+0xca4>
   11c4c:	ldr	r0, [pc, #72]	; 11c9c <close@plt+0xd4c>
   11c50:	add	ip, sp, #64	; 0x40
   11c54:	mov	r3, sl
   11c58:	ldr	r0, [r0]
   11c5c:	mov	r2, r9
   11c60:	mov	r1, r8
   11c64:	str	ip, [sp]
   11c68:	str	ip, [sp, #8]
   11c6c:	bl	14304 <close@plt+0x33b4>
   11c70:	mov	r0, r6
   11c74:	bl	10e6c <exit@plt>
   11c78:	mov	r0, r6
   11c7c:	blx	fp
   11c80:	b	11bf4 <close@plt+0xca4>
   11c84:	bl	10d7c <__stack_chk_fail@plt>
   11c88:	andeq	r5, r2, r8, lsl #30
   11c8c:	andeq	r6, r2, r0, asr r1
   11c90:	andeq	r6, r2, r0, asr #2
   11c94:	andeq	r5, r1, r0, asr #9
   11c98:	andeq	r5, r1, r0, lsl #7
   11c9c:	andeq	r6, r2, ip, asr #2
   11ca0:	push	{r4, r5, r6, lr}
   11ca4:	subs	r4, r0, #0
   11ca8:	beq	11d1c <close@plt+0xdcc>
   11cac:	mov	r1, #47	; 0x2f
   11cb0:	bl	10efc <strrchr@plt>
   11cb4:	subs	r5, r0, #0
   11cb8:	beq	11d08 <close@plt+0xdb8>
   11cbc:	add	r6, r5, #1
   11cc0:	sub	r3, r6, r4
   11cc4:	cmp	r3, #6
   11cc8:	ble	11d08 <close@plt+0xdb8>
   11ccc:	mov	r2, #7
   11cd0:	ldr	r1, [pc, #96]	; 11d38 <close@plt+0xde8>
   11cd4:	sub	r0, r5, #6
   11cd8:	bl	10f38 <strncmp@plt>
   11cdc:	cmp	r0, #0
   11ce0:	bne	11d08 <close@plt+0xdb8>
   11ce4:	mov	r2, #3
   11ce8:	ldr	r1, [pc, #76]	; 11d3c <close@plt+0xdec>
   11cec:	mov	r0, r6
   11cf0:	bl	10f38 <strncmp@plt>
   11cf4:	cmp	r0, #0
   11cf8:	movne	r4, r6
   11cfc:	ldreq	r3, [pc, #60]	; 11d40 <close@plt+0xdf0>
   11d00:	addeq	r4, r5, #4
   11d04:	streq	r4, [r3]
   11d08:	ldr	r2, [pc, #52]	; 11d44 <close@plt+0xdf4>
   11d0c:	ldr	r3, [pc, #52]	; 11d48 <close@plt+0xdf8>
   11d10:	str	r4, [r2]
   11d14:	str	r4, [r3]
   11d18:	pop	{r4, r5, r6, pc}
   11d1c:	ldr	r3, [pc, #40]	; 11d4c <close@plt+0xdfc>
   11d20:	mov	r2, #55	; 0x37
   11d24:	mov	r1, #1
   11d28:	ldr	r3, [r3]
   11d2c:	ldr	r0, [pc, #28]	; 11d50 <close@plt+0xe00>
   11d30:	bl	10db8 <fwrite@plt>
   11d34:	bl	10f44 <abort@plt>
   11d38:	andeq	r5, r1, r8, lsr r5
   11d3c:	andeq	r5, r1, r0, asr #10
   11d40:	andeq	r6, r2, r8, lsr r1
   11d44:	andeq	r6, r2, r0, ror #2
   11d48:	andeq	r6, r2, ip, lsr r1
   11d4c:	andeq	r6, r2, r8, asr #2
   11d50:	andeq	r5, r1, r0, lsl #10
   11d54:	push	{r4, lr}
   11d58:	mov	r2, #48	; 0x30
   11d5c:	mov	r4, r1
   11d60:	mov	r1, #0
   11d64:	bl	10e9c <memset@plt>
   11d68:	cmp	r4, #10
   11d6c:	beq	11d78 <close@plt+0xe28>
   11d70:	str	r4, [r0]
   11d74:	pop	{r4, pc}
   11d78:	bl	10f44 <abort@plt>
   11d7c:	push	{r4, r5, r6, lr}
   11d80:	mov	r2, #5
   11d84:	mov	r5, r0
   11d88:	mov	r6, r1
   11d8c:	mov	r1, r0
   11d90:	mov	r0, #0
   11d94:	bl	10d70 <dcgettext@plt>
   11d98:	cmp	r5, r0
   11d9c:	mov	r4, r0
   11da0:	beq	11dac <close@plt+0xe5c>
   11da4:	mov	r0, r4
   11da8:	pop	{r4, r5, r6, pc}
   11dac:	bl	14a28 <close@plt+0x3ad8>
   11db0:	ldrb	r3, [r0]
   11db4:	bic	r3, r3, #32
   11db8:	cmp	r3, #85	; 0x55
   11dbc:	bne	11e1c <close@plt+0xecc>
   11dc0:	ldrb	r3, [r0, #1]
   11dc4:	bic	r3, r3, #32
   11dc8:	cmp	r3, #84	; 0x54
   11dcc:	bne	11e94 <close@plt+0xf44>
   11dd0:	ldrb	r3, [r0, #2]
   11dd4:	bic	r3, r3, #32
   11dd8:	cmp	r3, #70	; 0x46
   11ddc:	bne	11e94 <close@plt+0xf44>
   11de0:	ldrb	r3, [r0, #3]
   11de4:	cmp	r3, #45	; 0x2d
   11de8:	bne	11e94 <close@plt+0xf44>
   11dec:	ldrb	r3, [r0, #4]
   11df0:	cmp	r3, #56	; 0x38
   11df4:	bne	11e94 <close@plt+0xf44>
   11df8:	ldrb	r3, [r0, #5]
   11dfc:	cmp	r3, #0
   11e00:	bne	11e94 <close@plt+0xf44>
   11e04:	ldrb	r2, [r4]
   11e08:	ldr	r3, [pc, #156]	; 11eac <close@plt+0xf5c>
   11e0c:	ldr	r4, [pc, #156]	; 11eb0 <close@plt+0xf60>
   11e10:	cmp	r2, #96	; 0x60
   11e14:	movne	r4, r3
   11e18:	b	11da4 <close@plt+0xe54>
   11e1c:	cmp	r3, #71	; 0x47
   11e20:	bne	11e94 <close@plt+0xf44>
   11e24:	ldrb	r3, [r0, #1]
   11e28:	bic	r3, r3, #32
   11e2c:	cmp	r3, #66	; 0x42
   11e30:	bne	11e94 <close@plt+0xf44>
   11e34:	ldrb	r3, [r0, #2]
   11e38:	cmp	r3, #49	; 0x31
   11e3c:	bne	11e94 <close@plt+0xf44>
   11e40:	ldrb	r3, [r0, #3]
   11e44:	cmp	r3, #56	; 0x38
   11e48:	bne	11e94 <close@plt+0xf44>
   11e4c:	ldrb	r3, [r0, #4]
   11e50:	cmp	r3, #48	; 0x30
   11e54:	bne	11e94 <close@plt+0xf44>
   11e58:	ldrb	r3, [r0, #5]
   11e5c:	cmp	r3, #51	; 0x33
   11e60:	bne	11e94 <close@plt+0xf44>
   11e64:	ldrb	r3, [r0, #6]
   11e68:	cmp	r3, #48	; 0x30
   11e6c:	bne	11e94 <close@plt+0xf44>
   11e70:	ldrb	r3, [r0, #7]
   11e74:	cmp	r3, #0
   11e78:	bne	11e94 <close@plt+0xf44>
   11e7c:	ldrb	r2, [r4]
   11e80:	ldr	r3, [pc, #44]	; 11eb4 <close@plt+0xf64>
   11e84:	ldr	r4, [pc, #44]	; 11eb8 <close@plt+0xf68>
   11e88:	cmp	r2, #96	; 0x60
   11e8c:	movne	r4, r3
   11e90:	b	11da4 <close@plt+0xe54>
   11e94:	ldr	r3, [pc, #32]	; 11ebc <close@plt+0xf6c>
   11e98:	ldr	r4, [pc, #32]	; 11ec0 <close@plt+0xf70>
   11e9c:	cmp	r6, #9
   11ea0:	movne	r4, r3
   11ea4:	mov	r0, r4
   11ea8:	pop	{r4, r5, r6, pc}
   11eac:	muleq	r1, ip, r5
   11eb0:	andeq	r5, r1, r8, lsr #11
   11eb4:	andeq	r5, r1, r0, lsr #11
   11eb8:	andeq	r5, r1, r4, lsr #11
   11ebc:	andeq	r5, r1, ip, lsr #11
   11ec0:	muleq	r1, r8, r5
   11ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec8:	sub	sp, sp, #124	; 0x7c
   11ecc:	ldr	ip, [pc, #3576]	; 12ccc <close@plt+0x1d7c>
   11ed0:	str	r3, [sp, #24]
   11ed4:	ldr	r3, [sp, #168]	; 0xa8
   11ed8:	ldr	ip, [ip]
   11edc:	str	r3, [sp, #56]	; 0x38
   11ee0:	ldr	r3, [sp, #172]	; 0xac
   11ee4:	ldr	r8, [sp, #160]	; 0xa0
   11ee8:	str	r3, [sp, #80]	; 0x50
   11eec:	ldr	r3, [sp, #176]	; 0xb0
   11ef0:	mov	fp, r0
   11ef4:	str	r3, [sp, #76]	; 0x4c
   11ef8:	mov	sl, r1
   11efc:	str	r2, [sp, #36]	; 0x24
   11f00:	str	ip, [sp, #116]	; 0x74
   11f04:	bl	10dd0 <__ctype_get_mb_cur_max@plt>
   11f08:	ldr	r3, [sp, #164]	; 0xa4
   11f0c:	ands	r4, r3, #2
   11f10:	movne	r3, #1
   11f14:	moveq	r3, #0
   11f18:	str	r3, [sp, #32]
   11f1c:	str	r0, [sp, #64]	; 0x40
   11f20:	cmp	r8, #10
   11f24:	ldrls	pc, [pc, r8, lsl #2]
   11f28:	b	136d8 <close@plt+0x2788>
   11f2c:	andeq	r2, r1, r0, lsr #6
   11f30:			; <UNDEFINED> instruction: 0x000123b8
   11f34:			; <UNDEFINED> instruction: 0x000129b8
   11f38:	ldrdeq	r2, [r1], -r8
   11f3c:	andeq	r2, r1, ip, lsl #5
   11f40:	ldrdeq	r2, [r1], -r4
   11f44:	andeq	r2, r1, r0, asr r3
   11f48:	andeq	r2, r1, r8, lsl #7
   11f4c:	andeq	r1, r1, r8, asr pc
   11f50:	andeq	r1, r1, r8, asr pc
   11f54:	andeq	r1, r1, r8, asr pc
   11f58:	cmp	r8, #10
   11f5c:	beq	11f80 <close@plt+0x1030>
   11f60:	mov	r1, r8
   11f64:	ldr	r0, [pc, #3428]	; 12cd0 <close@plt+0x1d80>
   11f68:	bl	11d7c <close@plt+0xe2c>
   11f6c:	mov	r1, r8
   11f70:	str	r0, [sp, #80]	; 0x50
   11f74:	ldr	r0, [pc, #3420]	; 12cd8 <close@plt+0x1d88>
   11f78:	bl	11d7c <close@plt+0xe2c>
   11f7c:	str	r0, [sp, #76]	; 0x4c
   11f80:	cmp	r4, #0
   11f84:	movne	r4, #0
   11f88:	beq	13398 <close@plt+0x2448>
   11f8c:	ldr	r7, [sp, #76]	; 0x4c
   11f90:	mov	r5, #0
   11f94:	mov	r6, #1
   11f98:	mov	r0, r7
   11f9c:	str	r6, [sp, #40]	; 0x28
   11fa0:	str	r5, [sp, #68]	; 0x44
   11fa4:	bl	10e78 <strlen@plt>
   11fa8:	str	r6, [sp, #28]
   11fac:	str	r5, [sp, #44]	; 0x2c
   11fb0:	str	r5, [sp, #72]	; 0x48
   11fb4:	str	r7, [sp, #60]	; 0x3c
   11fb8:	str	r0, [sp, #52]	; 0x34
   11fbc:	str	r8, [sp, #160]	; 0xa0
   11fc0:	mov	r8, fp
   11fc4:	ldr	fp, [sp, #160]	; 0xa0
   11fc8:	mov	r9, #0
   11fcc:	ldr	r3, [sp, #24]
   11fd0:	cmn	r3, #1
   11fd4:	beq	1253c <close@plt+0x15ec>
   11fd8:	ldr	r3, [sp, #24]
   11fdc:	subs	r6, r3, r9
   11fe0:	movne	r6, #1
   11fe4:	cmp	r6, #0
   11fe8:	beq	12554 <close@plt+0x1604>
   11fec:	ldr	r7, [sp, #28]
   11ff0:	ldr	r0, [sp, #36]	; 0x24
   11ff4:	cmp	fp, #2
   11ff8:	moveq	r7, #0
   11ffc:	andne	r7, r7, #1
   12000:	add	r3, r0, r9
   12004:	cmp	r7, #0
   12008:	str	r3, [sp, #48]	; 0x30
   1200c:	beq	129f8 <close@plt+0x1aa8>
   12010:	ldr	r2, [sp, #52]	; 0x34
   12014:	cmp	r2, #0
   12018:	beq	12cdc <close@plt+0x1d8c>
   1201c:	ldr	r1, [sp, #24]
   12020:	cmp	r2, #1
   12024:	mov	r3, r2
   12028:	movls	r3, #0
   1202c:	movhi	r3, #1
   12030:	cmn	r1, #1
   12034:	movne	r3, #0
   12038:	cmp	r3, #0
   1203c:	add	r5, r9, r2
   12040:	beq	1204c <close@plt+0x10fc>
   12044:	bl	10e78 <strlen@plt>
   12048:	str	r0, [sp, #24]
   1204c:	ldr	r3, [sp, #24]
   12050:	cmp	r5, r3
   12054:	bhi	12cdc <close@plt+0x1d8c>
   12058:	ldr	r2, [sp, #52]	; 0x34
   1205c:	ldr	r1, [sp, #60]	; 0x3c
   12060:	ldr	r0, [sp, #48]	; 0x30
   12064:	bl	10d64 <memcmp@plt>
   12068:	cmp	r0, #0
   1206c:	bne	12cdc <close@plt+0x1d8c>
   12070:	ldr	r3, [sp, #32]
   12074:	cmp	r3, #0
   12078:	bne	13598 <close@plt+0x2648>
   1207c:	ldr	r3, [sp, #48]	; 0x30
   12080:	ldrb	r5, [r3]
   12084:	cmp	r5, #126	; 0x7e
   12088:	ldrls	pc, [pc, r5, lsl #2]
   1208c:	b	1295c <close@plt+0x1a0c>
   12090:	andeq	r2, r1, r8, asr #16
   12094:	andeq	r2, r1, ip, asr r9
   12098:	andeq	r2, r1, ip, asr r9
   1209c:	andeq	r2, r1, ip, asr r9
   120a0:	andeq	r2, r1, ip, asr r9
   120a4:	andeq	r2, r1, ip, asr r9
   120a8:	andeq	r2, r1, ip, asr r9
   120ac:	andeq	r2, r1, r4, lsl r9
   120b0:	andeq	r2, r1, r4, lsl #18
   120b4:	andeq	r2, r1, r4, lsl #16
   120b8:	andeq	r2, r1, ip, asr #15
   120bc:	andeq	r2, r1, r4, lsr #16
   120c0:	andeq	r2, r1, ip, lsl #16
   120c4:	andeq	r2, r1, ip, lsr r7
   120c8:	andeq	r2, r1, ip, asr r9
   120cc:	andeq	r2, r1, ip, asr r9
   120d0:	andeq	r2, r1, ip, asr r9
   120d4:	andeq	r2, r1, ip, asr r9
   120d8:	andeq	r2, r1, ip, asr r9
   120dc:	andeq	r2, r1, ip, asr r9
   120e0:	andeq	r2, r1, ip, asr r9
   120e4:	andeq	r2, r1, ip, asr r9
   120e8:	andeq	r2, r1, ip, asr r9
   120ec:	andeq	r2, r1, ip, asr r9
   120f0:	andeq	r2, r1, ip, asr r9
   120f4:	andeq	r2, r1, ip, asr r9
   120f8:	andeq	r2, r1, ip, asr r9
   120fc:	andeq	r2, r1, ip, asr r9
   12100:	andeq	r2, r1, ip, asr r9
   12104:	andeq	r2, r1, ip, asr r9
   12108:	andeq	r2, r1, ip, asr r9
   1210c:	andeq	r2, r1, ip, asr r9
   12110:	andeq	r2, r1, ip, lsl r9
   12114:	andeq	r2, r1, r0, lsr r8
   12118:	andeq	r2, r1, r0, lsr r8
   1211c:	andeq	r2, r1, r4, lsr r9
   12120:	andeq	r2, r1, r0, lsr r8
   12124:	andeq	r2, r1, r0, asr r9
   12128:	andeq	r2, r1, r0, lsr r8
   1212c:	andeq	r2, r1, r0, ror r6
   12130:	andeq	r2, r1, r0, lsr r8
   12134:	andeq	r2, r1, r0, lsr r8
   12138:	andeq	r2, r1, r0, lsr r8
   1213c:	andeq	r2, r1, r0, asr r9
   12140:	andeq	r2, r1, r0, asr r9
   12144:	andeq	r2, r1, r0, asr r9
   12148:	andeq	r2, r1, r0, asr r9
   1214c:	andeq	r2, r1, r0, asr r9
   12150:	andeq	r2, r1, r0, asr r9
   12154:	andeq	r2, r1, r0, asr r9
   12158:	andeq	r2, r1, r0, asr r9
   1215c:	andeq	r2, r1, r0, asr r9
   12160:	andeq	r2, r1, r0, asr r9
   12164:	andeq	r2, r1, r0, asr r9
   12168:	andeq	r2, r1, r0, asr r9
   1216c:	andeq	r2, r1, r0, asr r9
   12170:	andeq	r2, r1, r0, asr r9
   12174:	andeq	r2, r1, r0, asr r9
   12178:	andeq	r2, r1, r0, asr r9
   1217c:	andeq	r2, r1, r0, lsr r8
   12180:	andeq	r2, r1, r0, lsr r8
   12184:	andeq	r2, r1, r0, lsr r8
   12188:	andeq	r2, r1, r0, lsr r8
   1218c:	andeq	r2, r1, r4, asr #12
   12190:	andeq	r2, r1, ip, asr r9
   12194:	andeq	r2, r1, r0, asr r9
   12198:	andeq	r2, r1, r0, asr r9
   1219c:	andeq	r2, r1, r0, asr r9
   121a0:	andeq	r2, r1, r0, asr r9
   121a4:	andeq	r2, r1, r0, asr r9
   121a8:	andeq	r2, r1, r0, asr r9
   121ac:	andeq	r2, r1, r0, asr r9
   121b0:	andeq	r2, r1, r0, asr r9
   121b4:	andeq	r2, r1, r0, asr r9
   121b8:	andeq	r2, r1, r0, asr r9
   121bc:	andeq	r2, r1, r0, asr r9
   121c0:	andeq	r2, r1, r0, asr r9
   121c4:	andeq	r2, r1, r0, asr r9
   121c8:	andeq	r2, r1, r0, asr r9
   121cc:	andeq	r2, r1, r0, asr r9
   121d0:	andeq	r2, r1, r0, asr r9
   121d4:	andeq	r2, r1, r0, asr r9
   121d8:	andeq	r2, r1, r0, asr r9
   121dc:	andeq	r2, r1, r0, asr r9
   121e0:	andeq	r2, r1, r0, asr r9
   121e4:	andeq	r2, r1, r0, asr r9
   121e8:	andeq	r2, r1, r0, asr r9
   121ec:	andeq	r2, r1, r0, asr r9
   121f0:	andeq	r2, r1, r0, asr r9
   121f4:	andeq	r2, r1, r0, asr r9
   121f8:	andeq	r2, r1, r0, asr r9
   121fc:	andeq	r2, r1, r0, lsr r8
   12200:	strdeq	r2, [r1], -ip
   12204:	andeq	r2, r1, r0, asr r9
   12208:	andeq	r2, r1, r0, lsr r8
   1220c:	andeq	r2, r1, r0, asr r9
   12210:	andeq	r2, r1, r0, lsr r8
   12214:	andeq	r2, r1, r0, asr r9
   12218:	andeq	r2, r1, r0, asr r9
   1221c:	andeq	r2, r1, r0, asr r9
   12220:	andeq	r2, r1, r0, asr r9
   12224:	andeq	r2, r1, r0, asr r9
   12228:	andeq	r2, r1, r0, asr r9
   1222c:	andeq	r2, r1, r0, asr r9
   12230:	andeq	r2, r1, r0, asr r9
   12234:	andeq	r2, r1, r0, asr r9
   12238:	andeq	r2, r1, r0, asr r9
   1223c:	andeq	r2, r1, r0, asr r9
   12240:	andeq	r2, r1, r0, asr r9
   12244:	andeq	r2, r1, r0, asr r9
   12248:	andeq	r2, r1, r0, asr r9
   1224c:	andeq	r2, r1, r0, asr r9
   12250:	andeq	r2, r1, r0, asr r9
   12254:	andeq	r2, r1, r0, asr r9
   12258:	andeq	r2, r1, r0, asr r9
   1225c:	andeq	r2, r1, r0, asr r9
   12260:	andeq	r2, r1, r0, asr r9
   12264:	andeq	r2, r1, r0, asr r9
   12268:	andeq	r2, r1, r0, asr r9
   1226c:	andeq	r2, r1, r0, asr r9
   12270:	andeq	r2, r1, r0, asr r9
   12274:	andeq	r2, r1, r0, asr r9
   12278:	andeq	r2, r1, r0, asr r9
   1227c:	andeq	r2, r1, r4, lsl r4
   12280:	andeq	r2, r1, r0, lsr r8
   12284:	andeq	r2, r1, r4, lsl r4
   12288:	andeq	r2, r1, r4, lsr r9
   1228c:	cmp	r4, #0
   12290:	moveq	r3, #1
   12294:	streq	r3, [sp, #28]
   12298:	beq	129c4 <close@plt+0x1a74>
   1229c:	mov	r3, #0
   122a0:	mov	r4, r3
   122a4:	mov	r2, #1
   122a8:	str	r2, [sp, #40]	; 0x28
   122ac:	str	r3, [sp, #68]	; 0x44
   122b0:	str	r2, [sp, #32]
   122b4:	str	r2, [sp, #52]	; 0x34
   122b8:	ldr	r3, [pc, #2584]	; 12cd8 <close@plt+0x1d88>
   122bc:	str	r4, [sp, #44]	; 0x2c
   122c0:	str	r4, [sp, #72]	; 0x48
   122c4:	str	r4, [sp, #28]
   122c8:	str	r3, [sp, #60]	; 0x3c
   122cc:	mov	r8, #2
   122d0:	b	11fbc <close@plt+0x106c>
   122d4:	cmp	r4, #0
   122d8:	bne	13564 <close@plt+0x2614>
   122dc:	cmp	sl, #0
   122e0:	beq	13324 <close@plt+0x23d4>
   122e4:	mov	r3, #34	; 0x22
   122e8:	strb	r3, [fp]
   122ec:	ldr	r3, [pc, #2528]	; 12cd4 <close@plt+0x1d84>
   122f0:	mov	r1, r4
   122f4:	mov	r2, #1
   122f8:	str	r4, [sp, #68]	; 0x44
   122fc:	str	r2, [sp, #40]	; 0x28
   12300:	mov	r4, r2
   12304:	str	r1, [sp, #44]	; 0x2c
   12308:	str	r1, [sp, #72]	; 0x48
   1230c:	str	r1, [sp, #32]
   12310:	str	r2, [sp, #28]
   12314:	str	r2, [sp, #52]	; 0x34
   12318:	str	r3, [sp, #60]	; 0x3c
   1231c:	b	11fbc <close@plt+0x106c>
   12320:	mov	r3, #0
   12324:	str	r3, [sp, #68]	; 0x44
   12328:	str	r3, [sp, #44]	; 0x2c
   1232c:	str	r3, [sp, #32]
   12330:	str	r3, [sp, #28]
   12334:	str	r3, [sp, #60]	; 0x3c
   12338:	mov	r3, #1
   1233c:	str	r8, [sp, #72]	; 0x48
   12340:	str	r8, [sp, #52]	; 0x34
   12344:	mov	r4, r8
   12348:	str	r3, [sp, #40]	; 0x28
   1234c:	b	11fbc <close@plt+0x106c>
   12350:	mov	r3, #1
   12354:	str	r3, [sp, #40]	; 0x28
   12358:	str	r3, [sp, #32]
   1235c:	str	r3, [sp, #28]
   12360:	str	r3, [sp, #52]	; 0x34
   12364:	ldr	r3, [pc, #2408]	; 12cd4 <close@plt+0x1d84>
   12368:	mov	r2, #0
   1236c:	mov	r4, r2
   12370:	str	r2, [sp, #68]	; 0x44
   12374:	str	r2, [sp, #44]	; 0x2c
   12378:	str	r2, [sp, #72]	; 0x48
   1237c:	str	r3, [sp, #60]	; 0x3c
   12380:	mov	r8, #5
   12384:	b	11fbc <close@plt+0x106c>
   12388:	mov	r3, #0
   1238c:	mov	r2, #1
   12390:	str	r2, [sp, #40]	; 0x28
   12394:	mov	r4, r3
   12398:	str	r3, [sp, #68]	; 0x44
   1239c:	str	r2, [sp, #28]
   123a0:	str	r3, [sp, #44]	; 0x2c
   123a4:	str	r3, [sp, #72]	; 0x48
   123a8:	str	r3, [sp, #32]
   123ac:	str	r3, [sp, #52]	; 0x34
   123b0:	str	r3, [sp, #60]	; 0x3c
   123b4:	b	11fbc <close@plt+0x106c>
   123b8:	mov	r2, #1
   123bc:	mov	r3, #0
   123c0:	str	r2, [sp, #40]	; 0x28
   123c4:	mov	r4, r3
   123c8:	str	r3, [sp, #68]	; 0x44
   123cc:	str	r8, [sp, #52]	; 0x34
   123d0:	str	r2, [sp, #32]
   123d4:	b	122b8 <close@plt+0x1368>
   123d8:	mov	r3, #1
   123dc:	str	r3, [sp, #40]	; 0x28
   123e0:	str	r3, [sp, #32]
   123e4:	str	r3, [sp, #28]
   123e8:	str	r3, [sp, #52]	; 0x34
   123ec:	ldr	r3, [pc, #2276]	; 12cd8 <close@plt+0x1d88>
   123f0:	mov	r2, #0
   123f4:	mov	r4, r2
   123f8:	str	r2, [sp, #68]	; 0x44
   123fc:	str	r2, [sp, #44]	; 0x2c
   12400:	str	r2, [sp, #72]	; 0x48
   12404:	str	r3, [sp, #60]	; 0x3c
   12408:	mov	r8, #2
   1240c:	b	11fbc <close@plt+0x106c>
   12410:	mov	r7, #0
   12414:	ldr	r3, [sp, #24]
   12418:	cmn	r3, #1
   1241c:	beq	12f58 <close@plt+0x2008>
   12420:	ldr	r3, [sp, #24]
   12424:	subs	r3, r3, #1
   12428:	movne	r3, #1
   1242c:	cmp	r3, #0
   12430:	sub	r2, fp, #2
   12434:	clz	r2, r2
   12438:	lsr	r2, r2, #5
   1243c:	bne	12638 <close@plt+0x16e8>
   12440:	cmp	r9, #0
   12444:	bne	12638 <close@plt+0x16e8>
   12448:	ldr	r3, [sp, #32]
   1244c:	tst	r3, r2
   12450:	bne	12758 <close@plt+0x1808>
   12454:	ldr	r3, [sp, #28]
   12458:	eor	r3, r3, #1
   1245c:	orr	r3, r2, r3
   12460:	ldr	r2, [sp, #32]
   12464:	eor	r3, r3, #1
   12468:	orrs	r3, r2, r3
   1246c:	beq	1249c <close@plt+0x154c>
   12470:	mov	r3, #0
   12474:	ldr	r1, [sp, #56]	; 0x38
   12478:	cmp	r1, #0
   1247c:	beq	1249c <close@plt+0x154c>
   12480:	lsr	r2, r5, #5
   12484:	and	r0, r5, #31
   12488:	uxtb	r2, r2
   1248c:	ldr	r1, [r1, r2, lsl #2]
   12490:	lsr	r2, r1, r0
   12494:	tst	r2, #1
   12498:	bne	124a4 <close@plt+0x1554>
   1249c:	cmp	r7, #0
   124a0:	beq	126f4 <close@plt+0x17a4>
   124a4:	sub	r2, fp, #2
   124a8:	clz	r2, r2
   124ac:	lsr	r2, r2, #5
   124b0:	ldr	r3, [sp, #32]
   124b4:	cmp	r3, #0
   124b8:	bne	127e4 <close@plt+0x1894>
   124bc:	ldr	r3, [sp, #44]	; 0x2c
   124c0:	eor	r3, r3, #1
   124c4:	ands	r3, r2, r3
   124c8:	beq	12500 <close@plt+0x15b0>
   124cc:	cmp	sl, r4
   124d0:	movhi	r2, #39	; 0x27
   124d4:	strbhi	r2, [r8, r4]
   124d8:	add	r2, r4, #1
   124dc:	cmp	r2, sl
   124e0:	movcc	r1, #36	; 0x24
   124e4:	strbcc	r1, [r8, r2]
   124e8:	add	r2, r4, #2
   124ec:	cmp	r2, sl
   124f0:	add	r4, r4, #3
   124f4:	movcc	r1, #39	; 0x27
   124f8:	strbcc	r1, [r8, r2]
   124fc:	str	r3, [sp, #44]	; 0x2c
   12500:	cmp	r4, sl
   12504:	movcc	r3, #92	; 0x5c
   12508:	strbcc	r3, [r8, r4]
   1250c:	add	r9, r9, #1
   12510:	add	r4, r4, #1
   12514:	cmp	r4, sl
   12518:	ldr	r3, [sp, #40]	; 0x28
   1251c:	strbcc	r5, [r8, r4]
   12520:	cmp	r6, #0
   12524:	moveq	r3, #0
   12528:	str	r3, [sp, #40]	; 0x28
   1252c:	ldr	r3, [sp, #24]
   12530:	add	r4, r4, #1
   12534:	cmn	r3, #1
   12538:	bne	11fd8 <close@plt+0x1088>
   1253c:	ldr	r3, [sp, #36]	; 0x24
   12540:	ldrb	r6, [r3, r9]
   12544:	adds	r6, r6, #0
   12548:	movne	r6, #1
   1254c:	cmp	r6, #0
   12550:	bne	11fec <close@plt+0x109c>
   12554:	str	fp, [sp, #160]	; 0xa0
   12558:	mov	fp, r8
   1255c:	ldr	r8, [sp, #160]	; 0xa0
   12560:	ldr	r1, [sp, #32]
   12564:	cmp	r4, #0
   12568:	sub	r2, r8, #2
   1256c:	clz	r2, r2
   12570:	lsr	r2, r2, #5
   12574:	andeq	r3, r2, r1
   12578:	movne	r3, #0
   1257c:	cmp	r3, #0
   12580:	bne	1366c <close@plt+0x271c>
   12584:	eor	r3, r1, #1
   12588:	ands	r2, r2, r3
   1258c:	beq	135a8 <close@plt+0x2658>
   12590:	ldr	r3, [sp, #68]	; 0x44
   12594:	cmp	r3, #0
   12598:	beq	135ac <close@plt+0x265c>
   1259c:	ldr	r3, [sp, #40]	; 0x28
   125a0:	cmp	r3, #0
   125a4:	bne	13628 <close@plt+0x26d8>
   125a8:	ldr	r3, [sp, #72]	; 0x48
   125ac:	adds	r3, r3, #0
   125b0:	movne	r3, #1
   125b4:	cmp	sl, #0
   125b8:	movne	r3, #0
   125bc:	cmp	r3, #0
   125c0:	ldreq	r2, [sp, #68]	; 0x44
   125c4:	beq	135ac <close@plt+0x265c>
   125c8:	ldr	sl, [sp, #72]	; 0x48
   125cc:	str	r3, [sp, #68]	; 0x44
   125d0:	ldr	r3, [pc, #1792]	; 12cd8 <close@plt+0x1d88>
   125d4:	mov	r2, #39	; 0x27
   125d8:	mov	r4, #1
   125dc:	str	r3, [sp, #60]	; 0x3c
   125e0:	mov	r3, #0
   125e4:	strb	r2, [fp]
   125e8:	str	r4, [sp, #52]	; 0x34
   125ec:	mov	r8, #2
   125f0:	str	r3, [sp, #32]
   125f4:	b	11fbc <close@plt+0x106c>
   125f8:	mov	r7, #0
   125fc:	cmp	fp, #2
   12600:	beq	12f38 <close@plt+0x1fe8>
   12604:	ldr	r3, [sp, #52]	; 0x34
   12608:	ldr	r2, [sp, #28]
   1260c:	ldr	r1, [sp, #32]
   12610:	cmp	r3, #0
   12614:	andne	r2, r2, r1
   12618:	moveq	r2, #0
   1261c:	cmp	r2, #0
   12620:	moveq	r5, #92	; 0x5c
   12624:	moveq	r3, r5
   12628:	bne	12f44 <close@plt+0x1ff4>
   1262c:	ldr	r1, [sp, #28]
   12630:	cmp	r1, #0
   12634:	bne	136b4 <close@plt+0x2764>
   12638:	mov	r6, #0
   1263c:	b	12454 <close@plt+0x1504>
   12640:	mov	r7, #0
   12644:	cmp	fp, #2
   12648:	beq	12fa8 <close@plt+0x2058>
   1264c:	cmp	fp, #5
   12650:	beq	12f6c <close@plt+0x201c>
   12654:	sub	r2, fp, #2
   12658:	mov	r6, #0
   1265c:	clz	r2, r2
   12660:	mov	r5, #63	; 0x3f
   12664:	lsr	r2, r2, #5
   12668:	b	12454 <close@plt+0x1504>
   1266c:	mov	r7, #0
   12670:	cmp	fp, #2
   12674:	strne	r6, [sp, #68]	; 0x44
   12678:	movne	r2, #0
   1267c:	movne	r5, #39	; 0x27
   12680:	bne	12454 <close@plt+0x1504>
   12684:	ldr	r3, [sp, #32]
   12688:	cmp	r3, #0
   1268c:	bne	13388 <close@plt+0x2438>
   12690:	cmp	sl, #0
   12694:	ldr	r3, [sp, #72]	; 0x48
   12698:	clz	r3, r3
   1269c:	lsr	r3, r3, #5
   126a0:	moveq	r3, #0
   126a4:	cmp	r3, #0
   126a8:	bne	132bc <close@plt+0x236c>
   126ac:	cmp	sl, r4
   126b0:	movhi	r3, #39	; 0x27
   126b4:	strbhi	r3, [r8, r4]
   126b8:	add	r3, r4, #1
   126bc:	cmp	sl, r3
   126c0:	movhi	r2, #92	; 0x5c
   126c4:	strbhi	r2, [r8, r3]
   126c8:	add	r3, r4, #2
   126cc:	cmp	sl, r3
   126d0:	movhi	r2, #39	; 0x27
   126d4:	strbhi	r2, [r8, r3]
   126d8:	mov	r3, #0
   126dc:	cmp	r7, #0
   126e0:	add	r4, r4, #3
   126e4:	str	r3, [sp, #44]	; 0x2c
   126e8:	str	r6, [sp, #68]	; 0x44
   126ec:	mov	r5, #39	; 0x27
   126f0:	bne	124a4 <close@plt+0x1554>
   126f4:	ldr	r2, [sp, #44]	; 0x2c
   126f8:	eor	r3, r3, #1
   126fc:	and	r3, r3, r2
   12700:	add	r9, r9, #1
   12704:	uxtb	r3, r3
   12708:	cmp	r3, #0
   1270c:	beq	12514 <close@plt+0x15c4>
   12710:	cmp	sl, r4
   12714:	movhi	r3, #39	; 0x27
   12718:	strbhi	r3, [r8, r4]
   1271c:	add	r3, r4, #1
   12720:	cmp	sl, r3
   12724:	movhi	r2, #39	; 0x27
   12728:	strbhi	r2, [r8, r3]
   1272c:	mov	r3, #0
   12730:	add	r4, r4, #2
   12734:	str	r3, [sp, #44]	; 0x2c
   12738:	b	12514 <close@plt+0x15c4>
   1273c:	mov	r3, #114	; 0x72
   12740:	ldr	r1, [sp, #32]
   12744:	sub	r2, fp, #2
   12748:	clz	r2, r2
   1274c:	lsr	r2, r2, #5
   12750:	tst	r2, r1
   12754:	beq	1262c <close@plt+0x16dc>
   12758:	mov	fp, r8
   1275c:	mov	r8, #2
   12760:	ldr	r3, [sp, #28]
   12764:	cmp	r3, #0
   12768:	movne	r8, #4
   1276c:	ldr	r3, [sp, #164]	; 0xa4
   12770:	mov	ip, #0
   12774:	bic	r3, r3, #2
   12778:	str	r3, [sp, #4]
   1277c:	ldr	r3, [sp, #76]	; 0x4c
   12780:	str	r8, [sp]
   12784:	str	r3, [sp, #16]
   12788:	ldr	r3, [sp, #80]	; 0x50
   1278c:	ldr	r2, [sp, #36]	; 0x24
   12790:	str	r3, [sp, #12]
   12794:	mov	r1, sl
   12798:	ldr	r3, [sp, #24]
   1279c:	mov	r0, fp
   127a0:	str	ip, [sp, #8]
   127a4:	bl	11ec4 <close@plt+0xf74>
   127a8:	mov	r4, r0
   127ac:	ldr	r3, [pc, #1304]	; 12ccc <close@plt+0x1d7c>
   127b0:	ldr	r2, [sp, #116]	; 0x74
   127b4:	mov	r0, r4
   127b8:	ldr	r3, [r3]
   127bc:	cmp	r2, r3
   127c0:	bne	136b0 <close@plt+0x2760>
   127c4:	add	sp, sp, #124	; 0x7c
   127c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127cc:	mov	r5, #110	; 0x6e
   127d0:	ldr	r3, [sp, #32]
   127d4:	mov	r2, #0
   127d8:	cmp	r3, #0
   127dc:	mov	r6, r2
   127e0:	beq	124bc <close@plt+0x156c>
   127e4:	str	fp, [sp, #160]	; 0xa0
   127e8:	mov	fp, r8
   127ec:	ldr	r8, [sp, #160]	; 0xa0
   127f0:	mov	r3, r2
   127f4:	ldr	r2, [sp, #28]
   127f8:	and	r2, r2, r3
   127fc:	str	r2, [sp, #28]
   12800:	b	12760 <close@plt+0x1810>
   12804:	mov	r5, #116	; 0x74
   12808:	b	127d0 <close@plt+0x1880>
   1280c:	mov	r5, #102	; 0x66
   12810:	ldr	r3, [sp, #32]
   12814:	cmp	r3, #0
   12818:	bne	133c4 <close@plt+0x2474>
   1281c:	mov	r6, #0
   12820:	b	12500 <close@plt+0x15b0>
   12824:	mov	r5, #118	; 0x76
   12828:	b	12810 <close@plt+0x18c0>
   1282c:	mov	r7, #0
   12830:	mov	r6, #0
   12834:	b	12470 <close@plt+0x1520>
   12838:	ldr	r3, [sp, #32]
   1283c:	cmp	r3, #0
   12840:	bne	13608 <close@plt+0x26b8>
   12844:	mov	r7, r3
   12848:	ldr	r3, [sp, #44]	; 0x2c
   1284c:	sub	r2, fp, #2
   12850:	eor	r3, r3, #1
   12854:	clz	r2, r2
   12858:	lsr	r2, r2, #5
   1285c:	ands	r3, r2, r3
   12860:	beq	132a8 <close@plt+0x2358>
   12864:	cmp	sl, r4
   12868:	movhi	r1, #39	; 0x27
   1286c:	strbhi	r1, [r8, r4]
   12870:	add	r1, r4, #1
   12874:	cmp	sl, r1
   12878:	movhi	r0, #36	; 0x24
   1287c:	strbhi	r0, [r8, r1]
   12880:	add	r1, r4, #2
   12884:	cmp	sl, r1
   12888:	movhi	r0, #39	; 0x27
   1288c:	strbhi	r0, [r8, r1]
   12890:	add	r1, r4, #3
   12894:	cmp	sl, r1
   12898:	bls	13308 <close@plt+0x23b8>
   1289c:	mov	r4, r1
   128a0:	mov	r1, #92	; 0x5c
   128a4:	strb	r1, [r8, r4]
   128a8:	mov	r1, r4
   128ac:	str	r3, [sp, #44]	; 0x2c
   128b0:	cmp	fp, #2
   128b4:	add	r4, r4, #1
   128b8:	beq	13350 <close@plt+0x2400>
   128bc:	ldr	r0, [sp, #24]
   128c0:	add	r3, r9, #1
   128c4:	cmp	r3, r0
   128c8:	bcs	128e0 <close@plt+0x1990>
   128cc:	ldr	r0, [sp, #36]	; 0x24
   128d0:	ldrb	r3, [r0, r3]
   128d4:	sub	r3, r3, #48	; 0x30
   128d8:	cmp	r3, #9
   128dc:	bls	13360 <close@plt+0x2410>
   128e0:	mov	r5, #48	; 0x30
   128e4:	ldr	r3, [sp, #28]
   128e8:	eor	r3, r3, #1
   128ec:	orrs	r2, r2, r3
   128f0:	mov	r3, r6
   128f4:	moveq	r6, r2
   128f8:	beq	12474 <close@plt+0x1524>
   128fc:	mov	r6, #0
   12900:	b	1249c <close@plt+0x154c>
   12904:	mov	r2, #0
   12908:	mov	r6, r2
   1290c:	mov	r5, #98	; 0x62
   12910:	b	124bc <close@plt+0x156c>
   12914:	mov	r5, #97	; 0x61
   12918:	b	1281c <close@plt+0x18cc>
   1291c:	mov	r3, r7
   12920:	mov	r6, r7
   12924:	mov	r2, #0
   12928:	mov	r7, r3
   1292c:	mov	r5, #32
   12930:	b	12454 <close@plt+0x1504>
   12934:	cmp	r9, #0
   12938:	mov	r3, r7
   1293c:	bne	12f04 <close@plt+0x1fb4>
   12940:	mov	r6, r7
   12944:	mov	r2, r9
   12948:	mov	r7, r3
   1294c:	b	12454 <close@plt+0x1504>
   12950:	mov	r6, r7
   12954:	b	12470 <close@plt+0x1520>
   12958:	mov	r7, #0
   1295c:	ldr	r3, [sp, #64]	; 0x40
   12960:	cmp	r3, #1
   12964:	bne	12fc0 <close@plt+0x2070>
   12968:	bl	10e60 <__ctype_b_loc@plt>
   1296c:	ldr	r2, [sp, #64]	; 0x40
   12970:	sxth	r3, r5
   12974:	mov	ip, r2
   12978:	lsl	r3, r3, #1
   1297c:	ldr	r2, [r0]
   12980:	ldrh	r3, [r2, r3]
   12984:	and	r3, r3, #16384	; 0x4000
   12988:	cmp	r3, #0
   1298c:	ldr	r3, [sp, #28]
   12990:	movne	r6, #1
   12994:	moveq	r6, #0
   12998:	movne	r2, #0
   1299c:	andeq	r2, r3, #1
   129a0:	cmp	r2, #0
   129a4:	bne	132d0 <close@plt+0x2380>
   129a8:	sub	r2, fp, #2
   129ac:	clz	r2, r2
   129b0:	lsr	r2, r2, #5
   129b4:	b	12454 <close@plt+0x1504>
   129b8:	cmp	r4, #0
   129bc:	bne	1367c <close@plt+0x272c>
   129c0:	str	r4, [sp, #28]
   129c4:	cmp	sl, #0
   129c8:	bne	136c0 <close@plt+0x2770>
   129cc:	ldr	r3, [pc, #772]	; 12cd8 <close@plt+0x1d88>
   129d0:	mov	r4, #1
   129d4:	str	r4, [sp, #40]	; 0x28
   129d8:	str	r3, [sp, #60]	; 0x3c
   129dc:	str	r4, [sp, #52]	; 0x34
   129e0:	str	sl, [sp, #72]	; 0x48
   129e4:	str	sl, [sp, #68]	; 0x44
   129e8:	str	sl, [sp, #44]	; 0x2c
   129ec:	str	sl, [sp, #32]
   129f0:	mov	r8, #2
   129f4:	b	11fbc <close@plt+0x106c>
   129f8:	ldr	r3, [sp, #36]	; 0x24
   129fc:	ldrb	r5, [r3, r9]
   12a00:	cmp	r5, #126	; 0x7e
   12a04:	ldrls	pc, [pc, r5, lsl #2]
   12a08:	b	1295c <close@plt+0x1a0c>
   12a0c:	andeq	r2, r1, r0, asr #24
   12a10:	andeq	r2, r1, ip, asr r9
   12a14:	andeq	r2, r1, ip, asr r9
   12a18:	andeq	r2, r1, ip, asr r9
   12a1c:	andeq	r2, r1, ip, asr r9
   12a20:	andeq	r2, r1, ip, asr r9
   12a24:	andeq	r2, r1, ip, asr r9
   12a28:	andeq	r2, r1, ip, lsr #24
   12a2c:	andeq	r2, r1, r8, lsl ip
   12a30:	andeq	r2, r1, r0, lsl ip
   12a34:	andeq	r2, r1, r8, lsl #24
   12a38:			; <UNDEFINED> instruction: 0x00012cb8
   12a3c:	andeq	r2, r1, r4, lsr #25
   12a40:	andeq	r2, r1, ip, lsr r7
   12a44:	andeq	r2, r1, ip, asr r9
   12a48:	andeq	r2, r1, ip, asr r9
   12a4c:	andeq	r2, r1, ip, asr r9
   12a50:	andeq	r2, r1, ip, asr r9
   12a54:	andeq	r2, r1, ip, asr r9
   12a58:	andeq	r2, r1, ip, asr r9
   12a5c:	andeq	r2, r1, ip, asr r9
   12a60:	andeq	r2, r1, ip, asr r9
   12a64:	andeq	r2, r1, ip, asr r9
   12a68:	andeq	r2, r1, ip, asr r9
   12a6c:	andeq	r2, r1, ip, asr r9
   12a70:	andeq	r2, r1, ip, asr r9
   12a74:	andeq	r2, r1, ip, asr r9
   12a78:	andeq	r2, r1, ip, asr r9
   12a7c:	andeq	r2, r1, ip, asr r9
   12a80:	andeq	r2, r1, ip, asr r9
   12a84:	andeq	r2, r1, ip, asr r9
   12a88:	andeq	r2, r1, ip, asr r9
   12a8c:	muleq	r1, r4, ip
   12a90:	andeq	r2, r1, r0, lsl #25
   12a94:	andeq	r2, r1, r0, lsl #25
   12a98:	andeq	r2, r1, r0, ror ip
   12a9c:	andeq	r2, r1, r0, lsl #25
   12aa0:	andeq	r2, r1, r8, lsr #19
   12aa4:	andeq	r2, r1, r0, lsl #25
   12aa8:	andeq	r2, r1, r0, ror r6
   12aac:	andeq	r2, r1, r0, lsl #25
   12ab0:	andeq	r2, r1, r0, lsl #25
   12ab4:	andeq	r2, r1, r0, lsl #25
   12ab8:	andeq	r2, r1, r8, lsr #19
   12abc:	andeq	r2, r1, r8, lsr #19
   12ac0:	andeq	r2, r1, r8, lsr #19
   12ac4:	andeq	r2, r1, r8, lsr #19
   12ac8:	andeq	r2, r1, r8, lsr #19
   12acc:	andeq	r2, r1, r8, lsr #19
   12ad0:	andeq	r2, r1, r8, lsr #19
   12ad4:	andeq	r2, r1, r8, lsr #19
   12ad8:	andeq	r2, r1, r8, lsr #19
   12adc:	andeq	r2, r1, r8, lsr #19
   12ae0:	andeq	r2, r1, r8, lsr #19
   12ae4:	andeq	r2, r1, r8, lsr #19
   12ae8:	andeq	r2, r1, r8, lsr #19
   12aec:	andeq	r2, r1, r8, lsr #19
   12af0:	andeq	r2, r1, r8, lsr #19
   12af4:	andeq	r2, r1, r8, lsr #19
   12af8:	andeq	r2, r1, r0, lsl #25
   12afc:	andeq	r2, r1, r0, lsl #25
   12b00:	andeq	r2, r1, r0, lsl #25
   12b04:	andeq	r2, r1, r0, lsl #25
   12b08:	andeq	r2, r1, r4, asr #12
   12b0c:	andeq	r2, r1, ip, asr r9
   12b10:	andeq	r2, r1, r8, lsr #19
   12b14:	andeq	r2, r1, r8, lsr #19
   12b18:	andeq	r2, r1, r8, lsr #19
   12b1c:	andeq	r2, r1, r8, lsr #19
   12b20:	andeq	r2, r1, r8, lsr #19
   12b24:	andeq	r2, r1, r8, lsr #19
   12b28:	andeq	r2, r1, r8, lsr #19
   12b2c:	andeq	r2, r1, r8, lsr #19
   12b30:	andeq	r2, r1, r8, lsr #19
   12b34:	andeq	r2, r1, r8, lsr #19
   12b38:	andeq	r2, r1, r8, lsr #19
   12b3c:	andeq	r2, r1, r8, lsr #19
   12b40:	andeq	r2, r1, r8, lsr #19
   12b44:	andeq	r2, r1, r8, lsr #19
   12b48:	andeq	r2, r1, r8, lsr #19
   12b4c:	andeq	r2, r1, r8, lsr #19
   12b50:	andeq	r2, r1, r8, lsr #19
   12b54:	andeq	r2, r1, r8, lsr #19
   12b58:	andeq	r2, r1, r8, lsr #19
   12b5c:	andeq	r2, r1, r8, lsr #19
   12b60:	andeq	r2, r1, r8, lsr #19
   12b64:	andeq	r2, r1, r8, lsr #19
   12b68:	andeq	r2, r1, r8, lsr #19
   12b6c:	andeq	r2, r1, r8, lsr #19
   12b70:	andeq	r2, r1, r8, lsr #19
   12b74:	andeq	r2, r1, r8, lsr #19
   12b78:	andeq	r2, r1, r0, lsl #25
   12b7c:	strdeq	r2, [r1], -ip
   12b80:	andeq	r2, r1, r8, lsr #19
   12b84:	andeq	r2, r1, r0, lsl #25
   12b88:	andeq	r2, r1, r8, lsr #19
   12b8c:	andeq	r2, r1, r0, lsl #25
   12b90:	andeq	r2, r1, r8, lsr #19
   12b94:	andeq	r2, r1, r8, lsr #19
   12b98:	andeq	r2, r1, r8, lsr #19
   12b9c:	andeq	r2, r1, r8, lsr #19
   12ba0:	andeq	r2, r1, r8, lsr #19
   12ba4:	andeq	r2, r1, r8, lsr #19
   12ba8:	andeq	r2, r1, r8, lsr #19
   12bac:	andeq	r2, r1, r8, lsr #19
   12bb0:	andeq	r2, r1, r8, lsr #19
   12bb4:	andeq	r2, r1, r8, lsr #19
   12bb8:	andeq	r2, r1, r8, lsr #19
   12bbc:	andeq	r2, r1, r8, lsr #19
   12bc0:	andeq	r2, r1, r8, lsr #19
   12bc4:	andeq	r2, r1, r8, lsr #19
   12bc8:	andeq	r2, r1, r8, lsr #19
   12bcc:	andeq	r2, r1, r8, lsr #19
   12bd0:	andeq	r2, r1, r8, lsr #19
   12bd4:	andeq	r2, r1, r8, lsr #19
   12bd8:	andeq	r2, r1, r8, lsr #19
   12bdc:	andeq	r2, r1, r8, lsr #19
   12be0:	andeq	r2, r1, r8, lsr #19
   12be4:	andeq	r2, r1, r8, lsr #19
   12be8:	andeq	r2, r1, r8, lsr #19
   12bec:	andeq	r2, r1, r8, lsr #19
   12bf0:	andeq	r2, r1, r8, lsr #19
   12bf4:	andeq	r2, r1, r8, lsr #19
   12bf8:	andeq	r2, r1, r4, lsl r4
   12bfc:	andeq	r2, r1, r0, lsl #25
   12c00:	andeq	r2, r1, r4, lsl r4
   12c04:	andeq	r2, r1, r0, ror ip
   12c08:	mov	r3, #110	; 0x6e
   12c0c:	b	12740 <close@plt+0x17f0>
   12c10:	mov	r3, #116	; 0x74
   12c14:	b	12740 <close@plt+0x17f0>
   12c18:	sub	r2, fp, #2
   12c1c:	mov	r3, #98	; 0x62
   12c20:	clz	r2, r2
   12c24:	lsr	r2, r2, #5
   12c28:	b	1262c <close@plt+0x16dc>
   12c2c:	sub	r2, fp, #2
   12c30:	mov	r3, #97	; 0x61
   12c34:	clz	r2, r2
   12c38:	lsr	r2, r2, #5
   12c3c:	b	1262c <close@plt+0x16dc>
   12c40:	ldr	r3, [sp, #28]
   12c44:	cmp	r3, #0
   12c48:	bne	12838 <close@plt+0x18e8>
   12c4c:	ldr	r3, [sp, #164]	; 0xa4
   12c50:	tst	r3, #1
   12c54:	bne	132c8 <close@plt+0x2378>
   12c58:	ldr	r6, [sp, #28]
   12c5c:	sub	r2, fp, #2
   12c60:	mov	r7, r6
   12c64:	clz	r2, r2
   12c68:	lsr	r2, r2, #5
   12c6c:	b	12454 <close@plt+0x1504>
   12c70:	sub	r2, fp, #2
   12c74:	clz	r2, r2
   12c78:	lsr	r2, r2, #5
   12c7c:	b	12440 <close@plt+0x14f0>
   12c80:	sub	r2, fp, #2
   12c84:	mov	r6, #0
   12c88:	clz	r2, r2
   12c8c:	lsr	r2, r2, #5
   12c90:	b	12448 <close@plt+0x14f8>
   12c94:	sub	r2, fp, #2
   12c98:	clz	r2, r2
   12c9c:	lsr	r2, r2, #5
   12ca0:	b	12448 <close@plt+0x14f8>
   12ca4:	sub	r2, fp, #2
   12ca8:	mov	r3, #102	; 0x66
   12cac:	clz	r2, r2
   12cb0:	lsr	r2, r2, #5
   12cb4:	b	1262c <close@plt+0x16dc>
   12cb8:	sub	r2, fp, #2
   12cbc:	mov	r3, #118	; 0x76
   12cc0:	clz	r2, r2
   12cc4:	lsr	r2, r2, #5
   12cc8:	b	1262c <close@plt+0x16dc>
   12ccc:	andeq	r5, r2, r8, lsl #30
   12cd0:			; <UNDEFINED> instruction: 0x000155b0
   12cd4:	muleq	r1, r8, r5
   12cd8:	andeq	r5, r1, ip, lsr #11
   12cdc:	ldr	r3, [sp, #48]	; 0x30
   12ce0:	ldrb	r5, [r3]
   12ce4:	cmp	r5, #126	; 0x7e
   12ce8:	ldrls	pc, [pc, r5, lsl #2]
   12cec:	b	12958 <close@plt+0x1a08>
   12cf0:	andeq	r2, r1, r8, lsr r8
   12cf4:	andeq	r2, r1, r8, asr r9
   12cf8:	andeq	r2, r1, r8, asr r9
   12cfc:	andeq	r2, r1, r8, asr r9
   12d00:	andeq	r2, r1, r8, asr r9
   12d04:	andeq	r2, r1, r8, asr r9
   12d08:	andeq	r2, r1, r8, asr r9
   12d0c:	andeq	r2, r1, r0, lsr pc
   12d10:	andeq	r2, r1, r8, lsr #30
   12d14:	andeq	r2, r1, r4, lsl #16
   12d18:	andeq	r2, r1, ip, asr #15
   12d1c:	andeq	r2, r1, r4, lsr #16
   12d20:	andeq	r2, r1, ip, lsl #16
   12d24:	andeq	r2, r1, ip, lsl pc
   12d28:	andeq	r2, r1, r8, asr r9
   12d2c:	andeq	r2, r1, r8, asr r9
   12d30:	andeq	r2, r1, r8, asr r9
   12d34:	andeq	r2, r1, r8, asr r9
   12d38:	andeq	r2, r1, r8, asr r9
   12d3c:	andeq	r2, r1, r8, asr r9
   12d40:	andeq	r2, r1, r8, asr r9
   12d44:	andeq	r2, r1, r8, asr r9
   12d48:	andeq	r2, r1, r8, asr r9
   12d4c:	andeq	r2, r1, r8, asr r9
   12d50:	andeq	r2, r1, r8, asr r9
   12d54:	andeq	r2, r1, r8, asr r9
   12d58:	andeq	r2, r1, r8, asr r9
   12d5c:	andeq	r2, r1, r8, asr r9
   12d60:	andeq	r2, r1, r8, asr r9
   12d64:	andeq	r2, r1, r8, asr r9
   12d68:	andeq	r2, r1, r8, asr r9
   12d6c:	andeq	r2, r1, r8, asr r9
   12d70:	andeq	r2, r1, r4, lsl pc
   12d74:	andeq	r2, r1, ip, lsr #16
   12d78:	andeq	r2, r1, ip, lsr #16
   12d7c:	strdeq	r2, [r1], -r8
   12d80:	andeq	r2, r1, ip, lsr #16
   12d84:	andeq	r2, r1, ip, ror #29
   12d88:	andeq	r2, r1, ip, lsr #16
   12d8c:	andeq	r2, r1, ip, ror #12
   12d90:	andeq	r2, r1, ip, lsr #16
   12d94:	andeq	r2, r1, ip, lsr #16
   12d98:	andeq	r2, r1, ip, lsr #16
   12d9c:	andeq	r2, r1, ip, ror #29
   12da0:	andeq	r2, r1, ip, ror #29
   12da4:	andeq	r2, r1, ip, ror #29
   12da8:	andeq	r2, r1, ip, ror #29
   12dac:	andeq	r2, r1, ip, ror #29
   12db0:	andeq	r2, r1, ip, ror #29
   12db4:	andeq	r2, r1, ip, ror #29
   12db8:	andeq	r2, r1, ip, ror #29
   12dbc:	andeq	r2, r1, ip, ror #29
   12dc0:	andeq	r2, r1, ip, ror #29
   12dc4:	andeq	r2, r1, ip, ror #29
   12dc8:	andeq	r2, r1, ip, ror #29
   12dcc:	andeq	r2, r1, ip, ror #29
   12dd0:	andeq	r2, r1, ip, ror #29
   12dd4:	andeq	r2, r1, ip, ror #29
   12dd8:	andeq	r2, r1, ip, ror #29
   12ddc:	andeq	r2, r1, ip, lsr #16
   12de0:	andeq	r2, r1, ip, lsr #16
   12de4:	andeq	r2, r1, ip, lsr #16
   12de8:	andeq	r2, r1, ip, lsr #16
   12dec:	andeq	r2, r1, r0, asr #12
   12df0:	andeq	r2, r1, r8, asr r9
   12df4:	andeq	r2, r1, ip, ror #29
   12df8:	andeq	r2, r1, ip, ror #29
   12dfc:	andeq	r2, r1, ip, ror #29
   12e00:	andeq	r2, r1, ip, ror #29
   12e04:	andeq	r2, r1, ip, ror #29
   12e08:	andeq	r2, r1, ip, ror #29
   12e0c:	andeq	r2, r1, ip, ror #29
   12e10:	andeq	r2, r1, ip, ror #29
   12e14:	andeq	r2, r1, ip, ror #29
   12e18:	andeq	r2, r1, ip, ror #29
   12e1c:	andeq	r2, r1, ip, ror #29
   12e20:	andeq	r2, r1, ip, ror #29
   12e24:	andeq	r2, r1, ip, ror #29
   12e28:	andeq	r2, r1, ip, ror #29
   12e2c:	andeq	r2, r1, ip, ror #29
   12e30:	andeq	r2, r1, ip, ror #29
   12e34:	andeq	r2, r1, ip, ror #29
   12e38:	andeq	r2, r1, ip, ror #29
   12e3c:	andeq	r2, r1, ip, ror #29
   12e40:	andeq	r2, r1, ip, ror #29
   12e44:	andeq	r2, r1, ip, ror #29
   12e48:	andeq	r2, r1, ip, ror #29
   12e4c:	andeq	r2, r1, ip, ror #29
   12e50:	andeq	r2, r1, ip, ror #29
   12e54:	andeq	r2, r1, ip, ror #29
   12e58:	andeq	r2, r1, ip, ror #29
   12e5c:	andeq	r2, r1, ip, lsr #16
   12e60:	strdeq	r2, [r1], -r8
   12e64:	andeq	r2, r1, ip, ror #29
   12e68:	andeq	r2, r1, ip, lsr #16
   12e6c:	andeq	r2, r1, ip, ror #29
   12e70:	andeq	r2, r1, ip, lsr #16
   12e74:	andeq	r2, r1, ip, ror #29
   12e78:	andeq	r2, r1, ip, ror #29
   12e7c:	andeq	r2, r1, ip, ror #29
   12e80:	andeq	r2, r1, ip, ror #29
   12e84:	andeq	r2, r1, ip, ror #29
   12e88:	andeq	r2, r1, ip, ror #29
   12e8c:	andeq	r2, r1, ip, ror #29
   12e90:	andeq	r2, r1, ip, ror #29
   12e94:	andeq	r2, r1, ip, ror #29
   12e98:	andeq	r2, r1, ip, ror #29
   12e9c:	andeq	r2, r1, ip, ror #29
   12ea0:	andeq	r2, r1, ip, ror #29
   12ea4:	andeq	r2, r1, ip, ror #29
   12ea8:	andeq	r2, r1, ip, ror #29
   12eac:	andeq	r2, r1, ip, ror #29
   12eb0:	andeq	r2, r1, ip, ror #29
   12eb4:	andeq	r2, r1, ip, ror #29
   12eb8:	andeq	r2, r1, ip, ror #29
   12ebc:	andeq	r2, r1, ip, ror #29
   12ec0:	andeq	r2, r1, ip, ror #29
   12ec4:	andeq	r2, r1, ip, ror #29
   12ec8:	andeq	r2, r1, ip, ror #29
   12ecc:	andeq	r2, r1, ip, ror #29
   12ed0:	andeq	r2, r1, ip, ror #29
   12ed4:	andeq	r2, r1, ip, ror #29
   12ed8:	andeq	r2, r1, ip, ror #29
   12edc:	andeq	r2, r1, r0, lsl r4
   12ee0:	andeq	r2, r1, ip, lsr #16
   12ee4:	andeq	r2, r1, r0, lsl r4
   12ee8:	strdeq	r2, [r1], -r8
   12eec:	mov	r6, r7
   12ef0:	mov	r7, #0
   12ef4:	b	12470 <close@plt+0x1520>
   12ef8:	cmp	r9, #0
   12efc:	mov	r3, #0
   12f00:	beq	12940 <close@plt+0x19f0>
   12f04:	mov	r6, #0
   12f08:	mov	r7, r3
   12f0c:	mov	r3, r6
   12f10:	b	12474 <close@plt+0x1524>
   12f14:	mov	r3, #0
   12f18:	b	12920 <close@plt+0x19d0>
   12f1c:	mov	r7, #0
   12f20:	mov	r3, #114	; 0x72
   12f24:	b	12740 <close@plt+0x17f0>
   12f28:	mov	r5, #98	; 0x62
   12f2c:	b	127d0 <close@plt+0x1880>
   12f30:	mov	r5, #97	; 0x61
   12f34:	b	12810 <close@plt+0x18c0>
   12f38:	ldr	r3, [sp, #32]
   12f3c:	cmp	r3, #0
   12f40:	bne	13388 <close@plt+0x2438>
   12f44:	add	r9, r9, #1
   12f48:	ldr	r3, [sp, #44]	; 0x2c
   12f4c:	mov	r6, #0
   12f50:	mov	r5, #92	; 0x5c
   12f54:	b	12708 <close@plt+0x17b8>
   12f58:	ldr	r3, [sp, #36]	; 0x24
   12f5c:	ldrb	r3, [r3, #1]
   12f60:	adds	r3, r3, #0
   12f64:	movne	r3, #1
   12f68:	b	1242c <close@plt+0x14dc>
   12f6c:	ldr	r3, [sp, #164]	; 0xa4
   12f70:	ands	r3, r3, #4
   12f74:	beq	12f98 <close@plt+0x2048>
   12f78:	ldr	r2, [sp, #24]
   12f7c:	add	r3, r9, #2
   12f80:	cmp	r3, r2
   12f84:	bcs	12f98 <close@plt+0x2048>
   12f88:	ldr	r2, [sp, #48]	; 0x30
   12f8c:	ldrb	r5, [r2, #1]
   12f90:	cmp	r5, #63	; 0x3f
   12f94:	beq	133fc <close@plt+0x24ac>
   12f98:	mov	r2, #0
   12f9c:	mov	r6, r2
   12fa0:	mov	r5, #63	; 0x3f
   12fa4:	b	12454 <close@plt+0x1504>
   12fa8:	ldr	r3, [sp, #32]
   12fac:	cmp	r3, #0
   12fb0:	bne	13388 <close@plt+0x2438>
   12fb4:	mov	r6, r3
   12fb8:	mov	r5, #63	; 0x3f
   12fbc:	b	1249c <close@plt+0x154c>
   12fc0:	ldr	r3, [sp, #24]
   12fc4:	cmn	r3, #1
   12fc8:	mov	r3, #0
   12fcc:	str	r3, [sp, #108]	; 0x6c
   12fd0:	str	r3, [sp, #112]	; 0x70
   12fd4:	bne	12fe4 <close@plt+0x2094>
   12fd8:	ldr	r0, [sp, #36]	; 0x24
   12fdc:	bl	10e78 <strlen@plt>
   12fe0:	str	r0, [sp, #24]
   12fe4:	mov	r3, #0
   12fe8:	str	sl, [sp, #88]	; 0x58
   12fec:	ldr	sl, [sp, #36]	; 0x24
   12ff0:	str	r5, [sp, #92]	; 0x5c
   12ff4:	mov	r5, r3
   12ff8:	str	r7, [sp, #96]	; 0x60
   12ffc:	str	r4, [sp, #100]	; 0x64
   13000:	str	r8, [sp, #84]	; 0x54
   13004:	ldr	r3, [sp, #24]
   13008:	add	r4, r9, r5
   1300c:	add	r7, sl, r4
   13010:	sub	r2, r3, r4
   13014:	mov	r1, r7
   13018:	add	r3, sp, #108	; 0x6c
   1301c:	add	r0, sp, #104	; 0x68
   13020:	bl	14848 <close@plt+0x38f8>
   13024:	subs	r8, r0, #0
   13028:	beq	13078 <close@plt+0x2128>
   1302c:	cmn	r8, #1
   13030:	beq	133d8 <close@plt+0x2488>
   13034:	cmn	r8, #2
   13038:	beq	134f8 <close@plt+0x25a8>
   1303c:	ldr	r3, [sp, #32]
   13040:	cmp	fp, #2
   13044:	movne	r3, #0
   13048:	andeq	r3, r3, #1
   1304c:	cmp	r3, #0
   13050:	bne	131d8 <close@plt+0x2288>
   13054:	ldr	r0, [sp, #104]	; 0x68
   13058:	bl	10dac <iswprint@plt>
   1305c:	add	r5, r5, r8
   13060:	cmp	r0, #0
   13064:	add	r0, sp, #108	; 0x6c
   13068:	moveq	r6, #0
   1306c:	bl	10d4c <mbsinit@plt>
   13070:	cmp	r0, #0
   13074:	beq	13004 <close@plt+0x20b4>
   13078:	ldr	r3, [sp, #28]
   1307c:	mov	ip, r5
   13080:	eor	r2, r6, #1
   13084:	ldr	r5, [sp, #92]	; 0x5c
   13088:	ldr	r7, [sp, #96]	; 0x60
   1308c:	ldr	r4, [sp, #100]	; 0x64
   13090:	ldr	r8, [sp, #84]	; 0x54
   13094:	ldr	sl, [sp, #88]	; 0x58
   13098:	and	r2, r2, r3
   1309c:	cmp	ip, #1
   130a0:	bls	129a0 <close@plt+0x1a50>
   130a4:	add	r1, ip, r9
   130a8:	ldr	lr, [sp, #48]	; 0x30
   130ac:	mov	r0, #0
   130b0:	str	r6, [sp, #48]	; 0x30
   130b4:	mov	ip, #39	; 0x27
   130b8:	ldr	r6, [sp, #44]	; 0x2c
   130bc:	b	13174 <close@plt+0x2224>
   130c0:	ldr	r0, [sp, #32]
   130c4:	sub	r3, fp, #2
   130c8:	cmp	r0, #0
   130cc:	clz	r3, r3
   130d0:	lsr	r3, r3, #5
   130d4:	bne	132dc <close@plt+0x238c>
   130d8:	eor	r0, r6, #1
   130dc:	ands	r3, r3, r0
   130e0:	beq	13110 <close@plt+0x21c0>
   130e4:	add	r0, r4, #1
   130e8:	cmp	sl, r4
   130ec:	strbhi	ip, [r8, r4]
   130f0:	cmp	sl, r0
   130f4:	movhi	r6, #36	; 0x24
   130f8:	strbhi	r6, [r8, r0]
   130fc:	add	r0, r4, #2
   13100:	mov	r6, r3
   13104:	add	r4, r4, #3
   13108:	cmp	sl, r0
   1310c:	strbhi	ip, [r8, r0]
   13110:	cmp	sl, r4
   13114:	movhi	r3, #92	; 0x5c
   13118:	strbhi	r3, [r8, r4]
   1311c:	add	r3, r4, #1
   13120:	cmp	sl, r3
   13124:	lsrhi	r0, r5, #6
   13128:	addhi	r0, r0, #48	; 0x30
   1312c:	strbhi	r0, [r8, r3]
   13130:	add	r0, r4, #2
   13134:	cmp	sl, r0
   13138:	lsrhi	r3, r5, #3
   1313c:	andhi	r3, r3, #7
   13140:	addhi	r3, r3, #48	; 0x30
   13144:	add	r9, r9, #1
   13148:	strbhi	r3, [r8, r0]
   1314c:	and	r5, r5, #7
   13150:	cmp	r9, r1
   13154:	add	r5, r5, #48	; 0x30
   13158:	add	r4, r4, #3
   1315c:	bcs	132fc <close@plt+0x23ac>
   13160:	mov	r0, r2
   13164:	cmp	sl, r4
   13168:	strbhi	r5, [r8, r4]
   1316c:	ldrb	r5, [lr, #1]!
   13170:	add	r4, r4, #1
   13174:	cmp	r2, #0
   13178:	bne	130c0 <close@plt+0x2170>
   1317c:	eor	r3, r0, #1
   13180:	and	r3, r3, r6
   13184:	cmp	r7, #0
   13188:	uxtb	r3, r3
   1318c:	beq	131a0 <close@plt+0x2250>
   13190:	cmp	sl, r4
   13194:	movhi	r7, #92	; 0x5c
   13198:	strbhi	r7, [r8, r4]
   1319c:	add	r4, r4, #1
   131a0:	add	r9, r9, #1
   131a4:	cmp	r9, r1
   131a8:	bcs	132f0 <close@plt+0x23a0>
   131ac:	cmp	r3, #0
   131b0:	beq	1331c <close@plt+0x23cc>
   131b4:	cmp	sl, r4
   131b8:	add	r3, r4, #1
   131bc:	strbhi	ip, [r8, r4]
   131c0:	mov	r7, #0
   131c4:	cmp	sl, r3
   131c8:	strbhi	ip, [r8, r3]
   131cc:	add	r4, r4, #2
   131d0:	mov	r6, r7
   131d4:	b	13164 <close@plt+0x2214>
   131d8:	cmp	r8, #1
   131dc:	beq	13054 <close@plt+0x2104>
   131e0:	add	r1, r4, #1
   131e4:	add	r3, sl, r8
   131e8:	add	r1, sl, r1
   131ec:	add	r4, r3, r4
   131f0:	ldrb	r3, [r1], #1
   131f4:	sub	r3, r3, #91	; 0x5b
   131f8:	cmp	r3, #33	; 0x21
   131fc:	ldrls	pc, [pc, r3, lsl #2]
   13200:	b	1328c <close@plt+0x233c>
   13204:	muleq	r1, r8, r2
   13208:	muleq	r1, r8, r2
   1320c:	andeq	r3, r1, ip, lsl #5
   13210:	muleq	r1, r8, r2
   13214:	andeq	r3, r1, ip, lsl #5
   13218:	muleq	r1, r8, r2
   1321c:	andeq	r3, r1, ip, lsl #5
   13220:	andeq	r3, r1, ip, lsl #5
   13224:	andeq	r3, r1, ip, lsl #5
   13228:	andeq	r3, r1, ip, lsl #5
   1322c:	andeq	r3, r1, ip, lsl #5
   13230:	andeq	r3, r1, ip, lsl #5
   13234:	andeq	r3, r1, ip, lsl #5
   13238:	andeq	r3, r1, ip, lsl #5
   1323c:	andeq	r3, r1, ip, lsl #5
   13240:	andeq	r3, r1, ip, lsl #5
   13244:	andeq	r3, r1, ip, lsl #5
   13248:	andeq	r3, r1, ip, lsl #5
   1324c:	andeq	r3, r1, ip, lsl #5
   13250:	andeq	r3, r1, ip, lsl #5
   13254:	andeq	r3, r1, ip, lsl #5
   13258:	andeq	r3, r1, ip, lsl #5
   1325c:	andeq	r3, r1, ip, lsl #5
   13260:	andeq	r3, r1, ip, lsl #5
   13264:	andeq	r3, r1, ip, lsl #5
   13268:	andeq	r3, r1, ip, lsl #5
   1326c:	andeq	r3, r1, ip, lsl #5
   13270:	andeq	r3, r1, ip, lsl #5
   13274:	andeq	r3, r1, ip, lsl #5
   13278:	andeq	r3, r1, ip, lsl #5
   1327c:	andeq	r3, r1, ip, lsl #5
   13280:	andeq	r3, r1, ip, lsl #5
   13284:	andeq	r3, r1, ip, lsl #5
   13288:	muleq	r1, r8, r2
   1328c:	cmp	r4, r1
   13290:	bne	131f0 <close@plt+0x22a0>
   13294:	b	13054 <close@plt+0x2104>
   13298:	ldr	fp, [sp, #84]	; 0x54
   1329c:	ldr	sl, [sp, #88]	; 0x58
   132a0:	mov	r8, #2
   132a4:	b	12760 <close@plt+0x1810>
   132a8:	cmp	sl, r4
   132ac:	movls	r1, r4
   132b0:	bls	128b0 <close@plt+0x1960>
   132b4:	ldr	r3, [sp, #44]	; 0x2c
   132b8:	b	128a0 <close@plt+0x1950>
   132bc:	str	sl, [sp, #72]	; 0x48
   132c0:	ldr	sl, [sp, #32]
   132c4:	b	126d8 <close@plt+0x1788>
   132c8:	add	r9, r9, #1
   132cc:	b	11fcc <close@plt+0x107c>
   132d0:	ldr	r2, [sp, #28]
   132d4:	mov	r6, #0
   132d8:	b	130a4 <close@plt+0x2154>
   132dc:	str	fp, [sp, #160]	; 0xa0
   132e0:	str	r3, [sp, #28]
   132e4:	mov	fp, r8
   132e8:	ldr	r8, [sp, #160]	; 0xa0
   132ec:	b	12760 <close@plt+0x1810>
   132f0:	str	r6, [sp, #44]	; 0x2c
   132f4:	ldr	r6, [sp, #48]	; 0x30
   132f8:	b	12708 <close@plt+0x17b8>
   132fc:	str	r6, [sp, #44]	; 0x2c
   13300:	ldr	r6, [sp, #48]	; 0x30
   13304:	b	12514 <close@plt+0x15c4>
   13308:	add	r4, r4, #4
   1330c:	str	r3, [sp, #44]	; 0x2c
   13310:	mov	r6, #0
   13314:	mov	r5, #48	; 0x30
   13318:	b	1249c <close@plt+0x154c>
   1331c:	mov	r7, r3
   13320:	b	13164 <close@plt+0x2214>
   13324:	ldr	r3, [pc, #-1624]	; 12cd4 <close@plt+0x1d84>
   13328:	mov	r4, #1
   1332c:	str	r4, [sp, #40]	; 0x28
   13330:	str	r4, [sp, #28]
   13334:	str	r4, [sp, #52]	; 0x34
   13338:	str	sl, [sp, #72]	; 0x48
   1333c:	str	sl, [sp, #68]	; 0x44
   13340:	str	sl, [sp, #44]	; 0x2c
   13344:	str	sl, [sp, #32]
   13348:	str	r3, [sp, #60]	; 0x3c
   1334c:	b	11fbc <close@plt+0x106c>
   13350:	mov	r3, r6
   13354:	mov	r5, #48	; 0x30
   13358:	mov	r6, #0
   1335c:	b	1249c <close@plt+0x154c>
   13360:	cmp	sl, r4
   13364:	movhi	r3, #48	; 0x30
   13368:	strbhi	r3, [r8, r4]
   1336c:	add	r3, r1, #2
   13370:	cmp	sl, r3
   13374:	movhi	r0, #48	; 0x30
   13378:	strbhi	r0, [r8, r3]
   1337c:	add	r4, r1, #3
   13380:	mov	r5, #48	; 0x30
   13384:	b	128e4 <close@plt+0x1994>
   13388:	str	fp, [sp, #160]	; 0xa0
   1338c:	mov	fp, r8
   13390:	ldr	r8, [sp, #160]	; 0xa0
   13394:	b	12760 <close@plt+0x1810>
   13398:	ldr	r2, [sp, #80]	; 0x50
   1339c:	ldrb	r3, [r2]
   133a0:	cmp	r3, #0
   133a4:	beq	11f8c <close@plt+0x103c>
   133a8:	cmp	sl, r4
   133ac:	strbhi	r3, [fp, r4]
   133b0:	ldrb	r3, [r2, #1]!
   133b4:	add	r4, r4, #1
   133b8:	cmp	r3, #0
   133bc:	bne	133a8 <close@plt+0x2458>
   133c0:	b	11f8c <close@plt+0x103c>
   133c4:	str	fp, [sp, #160]	; 0xa0
   133c8:	mov	r3, #0
   133cc:	mov	fp, r8
   133d0:	ldr	r8, [sp, #160]	; 0xa0
   133d4:	b	127f4 <close@plt+0x18a4>
   133d8:	mov	ip, r5
   133dc:	ldr	r7, [sp, #96]	; 0x60
   133e0:	ldr	r5, [sp, #92]	; 0x5c
   133e4:	ldr	r4, [sp, #100]	; 0x64
   133e8:	ldr	r8, [sp, #84]	; 0x54
   133ec:	ldr	sl, [sp, #88]	; 0x58
   133f0:	ldr	r2, [sp, #28]
   133f4:	mov	r6, #0
   133f8:	b	1309c <close@plt+0x214c>
   133fc:	ldr	r2, [sp, #36]	; 0x24
   13400:	ldrb	r1, [r2, r3]
   13404:	sub	r2, r1, #33	; 0x21
   13408:	cmp	r2, #29
   1340c:	ldrls	pc, [pc, r2, lsl #2]
   13410:	b	134ec <close@plt+0x259c>
   13414:	andeq	r3, r1, ip, lsl #9
   13418:	andeq	r3, r1, ip, ror #9
   1341c:	andeq	r3, r1, ip, ror #9
   13420:	andeq	r3, r1, ip, ror #9
   13424:	andeq	r3, r1, ip, ror #9
   13428:	andeq	r3, r1, ip, ror #9
   1342c:	andeq	r3, r1, ip, lsl #9
   13430:	andeq	r3, r1, ip, lsl #9
   13434:	andeq	r3, r1, ip, lsl #9
   13438:	andeq	r3, r1, ip, ror #9
   1343c:	andeq	r3, r1, ip, ror #9
   13440:	andeq	r3, r1, ip, ror #9
   13444:	andeq	r3, r1, ip, lsl #9
   13448:	andeq	r3, r1, ip, ror #9
   1344c:	andeq	r3, r1, ip, lsl #9
   13450:	andeq	r3, r1, ip, ror #9
   13454:	andeq	r3, r1, ip, ror #9
   13458:	andeq	r3, r1, ip, ror #9
   1345c:	andeq	r3, r1, ip, ror #9
   13460:	andeq	r3, r1, ip, ror #9
   13464:	andeq	r3, r1, ip, ror #9
   13468:	andeq	r3, r1, ip, ror #9
   1346c:	andeq	r3, r1, ip, ror #9
   13470:	andeq	r3, r1, ip, ror #9
   13474:	andeq	r3, r1, ip, ror #9
   13478:	andeq	r3, r1, ip, ror #9
   1347c:	andeq	r3, r1, ip, ror #9
   13480:	andeq	r3, r1, ip, lsl #9
   13484:	andeq	r3, r1, ip, lsl #9
   13488:	andeq	r3, r1, ip, lsl #9
   1348c:	ldr	r2, [sp, #32]
   13490:	cmp	r2, #0
   13494:	bne	13598 <close@plt+0x2648>
   13498:	cmp	sl, r4
   1349c:	movhi	r2, #63	; 0x3f
   134a0:	strbhi	r2, [r8, r4]
   134a4:	add	r2, r4, #1
   134a8:	cmp	sl, r2
   134ac:	movhi	r0, #34	; 0x22
   134b0:	strbhi	r0, [r8, r2]
   134b4:	add	r2, r4, #2
   134b8:	cmp	sl, r2
   134bc:	movhi	r0, #34	; 0x22
   134c0:	strbhi	r0, [r8, r2]
   134c4:	add	r2, r4, #3
   134c8:	cmp	sl, r2
   134cc:	movhi	r0, #63	; 0x3f
   134d0:	strbhi	r0, [r8, r2]
   134d4:	mov	r2, #0
   134d8:	add	r4, r4, #4
   134dc:	mov	r5, r1
   134e0:	mov	r9, r3
   134e4:	mov	r6, r2
   134e8:	b	128e4 <close@plt+0x1994>
   134ec:	mov	r2, #0
   134f0:	mov	r6, r2
   134f4:	b	12454 <close@plt+0x1504>
   134f8:	ldr	r0, [sp, #24]
   134fc:	mov	r1, r4
   13500:	cmp	r1, r0
   13504:	mov	r2, r7
   13508:	mov	r3, r5
   1350c:	mov	ip, r5
   13510:	ldr	r7, [sp, #96]	; 0x60
   13514:	ldr	r5, [sp, #92]	; 0x5c
   13518:	ldr	r4, [sp, #100]	; 0x64
   1351c:	ldr	r8, [sp, #84]	; 0x54
   13520:	ldr	sl, [sp, #88]	; 0x58
   13524:	bcs	13558 <close@plt+0x2608>
   13528:	ldrb	r6, [r2]
   1352c:	cmp	r6, #0
   13530:	bne	13544 <close@plt+0x25f4>
   13534:	b	13674 <close@plt+0x2724>
   13538:	ldrb	r6, [r2, #1]!
   1353c:	cmp	r6, #0
   13540:	beq	135fc <close@plt+0x26ac>
   13544:	add	r3, r3, #1
   13548:	add	r1, r9, r3
   1354c:	cmp	r1, r0
   13550:	bcc	13538 <close@plt+0x25e8>
   13554:	mov	ip, r3
   13558:	ldr	r2, [sp, #28]
   1355c:	mov	r6, #0
   13560:	b	1309c <close@plt+0x214c>
   13564:	mov	r3, #1
   13568:	str	r3, [sp, #40]	; 0x28
   1356c:	str	r3, [sp, #32]
   13570:	str	r3, [sp, #28]
   13574:	str	r3, [sp, #52]	; 0x34
   13578:	ldr	r3, [pc, #-2220]	; 12cd4 <close@plt+0x1d84>
   1357c:	mov	r2, #0
   13580:	str	r2, [sp, #68]	; 0x44
   13584:	str	r2, [sp, #44]	; 0x2c
   13588:	str	r2, [sp, #72]	; 0x48
   1358c:	mov	r4, r2
   13590:	str	r3, [sp, #60]	; 0x3c
   13594:	b	11fbc <close@plt+0x106c>
   13598:	str	fp, [sp, #160]	; 0xa0
   1359c:	mov	fp, r8
   135a0:	ldr	r8, [sp, #160]	; 0xa0
   135a4:	b	1276c <close@plt+0x181c>
   135a8:	mov	r2, r3
   135ac:	ldr	r3, [sp, #60]	; 0x3c
   135b0:	cmp	r3, #0
   135b4:	moveq	r2, #0
   135b8:	andne	r2, r2, #1
   135bc:	cmp	r2, #0
   135c0:	beq	135ec <close@plt+0x269c>
   135c4:	mov	r2, r3
   135c8:	ldrb	r3, [r3]
   135cc:	cmp	r3, #0
   135d0:	beq	135ec <close@plt+0x269c>
   135d4:	cmp	sl, r4
   135d8:	strbhi	r3, [fp, r4]
   135dc:	ldrb	r3, [r2, #1]!
   135e0:	add	r4, r4, #1
   135e4:	cmp	r3, #0
   135e8:	bne	135d4 <close@plt+0x2684>
   135ec:	cmp	sl, r4
   135f0:	movhi	r3, #0
   135f4:	strbhi	r3, [fp, r4]
   135f8:	b	127ac <close@plt+0x185c>
   135fc:	mov	ip, r3
   13600:	ldr	r2, [sp, #28]
   13604:	b	1309c <close@plt+0x214c>
   13608:	str	fp, [sp, #160]	; 0xa0
   1360c:	mov	fp, r8
   13610:	ldr	r8, [sp, #160]	; 0xa0
   13614:	sub	r3, r8, #2
   13618:	clz	r3, r3
   1361c:	lsr	r3, r3, #5
   13620:	str	r3, [sp, #28]
   13624:	b	12760 <close@plt+0x1810>
   13628:	ldr	r3, [sp, #76]	; 0x4c
   1362c:	mov	ip, #5
   13630:	str	r3, [sp, #16]
   13634:	ldr	r3, [sp, #80]	; 0x50
   13638:	ldr	r2, [sp, #36]	; 0x24
   1363c:	str	r3, [sp, #12]
   13640:	ldr	r3, [sp, #56]	; 0x38
   13644:	ldr	r1, [sp, #72]	; 0x48
   13648:	str	r3, [sp, #8]
   1364c:	ldr	r3, [sp, #164]	; 0xa4
   13650:	mov	r0, fp
   13654:	str	r3, [sp, #4]
   13658:	str	ip, [sp]
   1365c:	ldr	r3, [sp, #24]
   13660:	bl	11ec4 <close@plt+0xf74>
   13664:	mov	r4, r0
   13668:	b	127ac <close@plt+0x185c>
   1366c:	mov	r8, #2
   13670:	b	12760 <close@plt+0x1810>
   13674:	ldr	r2, [sp, #28]
   13678:	b	1309c <close@plt+0x214c>
   1367c:	mov	r3, #0
   13680:	str	r3, [sp, #68]	; 0x44
   13684:	str	r3, [sp, #44]	; 0x2c
   13688:	str	r3, [sp, #72]	; 0x48
   1368c:	str	r3, [sp, #28]
   13690:	mov	r4, r3
   13694:	ldr	r3, [pc, #-2500]	; 12cd8 <close@plt+0x1d88>
   13698:	mov	r2, #1
   1369c:	str	r2, [sp, #40]	; 0x28
   136a0:	str	r2, [sp, #32]
   136a4:	str	r2, [sp, #52]	; 0x34
   136a8:	str	r3, [sp, #60]	; 0x3c
   136ac:	b	11fbc <close@plt+0x106c>
   136b0:	bl	10d7c <__stack_chk_fail@plt>
   136b4:	mov	r5, r3
   136b8:	mov	r6, #0
   136bc:	b	124b0 <close@plt+0x1560>
   136c0:	mov	r3, #0
   136c4:	mov	r2, #1
   136c8:	str	r3, [sp, #44]	; 0x2c
   136cc:	str	r3, [sp, #72]	; 0x48
   136d0:	str	r2, [sp, #40]	; 0x28
   136d4:	b	125cc <close@plt+0x167c>
   136d8:	bl	10f44 <abort@plt>
   136dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e0:	sub	sp, sp, #44	; 0x2c
   136e4:	mov	r6, r0
   136e8:	mov	r4, r3
   136ec:	mov	sl, r1
   136f0:	mov	fp, r2
   136f4:	bl	10e84 <__errno_location@plt>
   136f8:	ldr	r7, [pc, #364]	; 1386c <close@plt+0x291c>
   136fc:	cmp	r6, #0
   13700:	ldr	r5, [r7]
   13704:	ldr	r3, [r0]
   13708:	str	r3, [sp, #24]
   1370c:	blt	13868 <close@plt+0x2918>
   13710:	ldr	r3, [r7, #4]
   13714:	mov	r8, r0
   13718:	cmp	r3, r6
   1371c:	bgt	13768 <close@plt+0x2818>
   13720:	cmn	r6, #-268435454	; 0xf0000002
   13724:	bgt	13864 <close@plt+0x2914>
   13728:	add	r9, r6, #1
   1372c:	add	r3, r7, #8
   13730:	cmp	r5, r3
   13734:	lsl	r1, r9, #3
   13738:	beq	13844 <close@plt+0x28f4>
   1373c:	mov	r0, r5
   13740:	bl	144d0 <close@plt+0x3580>
   13744:	mov	r5, r0
   13748:	str	r0, [r7]
   1374c:	ldr	r0, [r7, #4]
   13750:	mov	r1, #0
   13754:	sub	r2, r9, r0
   13758:	add	r0, r5, r0, lsl #3
   1375c:	lsl	r2, r2, #3
   13760:	bl	10e9c <memset@plt>
   13764:	str	r9, [r7, #4]
   13768:	add	r3, r5, r6, lsl #3
   1376c:	ldr	r1, [r4, #4]
   13770:	ldr	r7, [r3, #4]
   13774:	ldr	r9, [r5, r6, lsl #3]
   13778:	ldr	r2, [r4, #40]	; 0x28
   1377c:	ldr	ip, [r4, #44]	; 0x2c
   13780:	str	r3, [sp, #28]
   13784:	ldr	r3, [r4]
   13788:	orr	r1, r1, #1
   1378c:	add	lr, r4, #8
   13790:	str	r1, [sp, #36]	; 0x24
   13794:	str	r1, [sp, #4]
   13798:	str	r2, [sp, #12]
   1379c:	str	r3, [sp]
   137a0:	mov	r0, r7
   137a4:	mov	r1, r9
   137a8:	str	ip, [sp, #16]
   137ac:	str	lr, [sp, #8]
   137b0:	mov	r3, fp
   137b4:	mov	r2, sl
   137b8:	str	lr, [sp, #32]
   137bc:	bl	11ec4 <close@plt+0xf74>
   137c0:	cmp	r9, r0
   137c4:	bhi	13830 <close@plt+0x28e0>
   137c8:	ldr	r3, [pc, #160]	; 13870 <close@plt+0x2920>
   137cc:	add	r9, r0, #1
   137d0:	cmp	r7, r3
   137d4:	str	r9, [r5, r6, lsl #3]
   137d8:	beq	137e4 <close@plt+0x2894>
   137dc:	mov	r0, r7
   137e0:	bl	10d1c <free@plt>
   137e4:	mov	r0, r9
   137e8:	bl	14474 <close@plt+0x3524>
   137ec:	ldr	lr, [sp, #28]
   137f0:	ldr	ip, [r4, #44]	; 0x2c
   137f4:	ldr	r5, [r4, #40]	; 0x28
   137f8:	mov	r3, fp
   137fc:	mov	r2, sl
   13800:	mov	r1, r9
   13804:	str	r0, [lr, #4]
   13808:	ldr	lr, [r4]
   1380c:	ldr	r4, [sp, #32]
   13810:	str	ip, [sp, #16]
   13814:	str	r4, [sp, #8]
   13818:	ldr	r4, [sp, #36]	; 0x24
   1381c:	str	r5, [sp, #12]
   13820:	str	r4, [sp, #4]
   13824:	str	lr, [sp]
   13828:	mov	r7, r0
   1382c:	bl	11ec4 <close@plt+0xf74>
   13830:	ldr	r3, [sp, #24]
   13834:	mov	r0, r7
   13838:	str	r3, [r8]
   1383c:	add	sp, sp, #44	; 0x2c
   13840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13844:	mov	r0, #0
   13848:	bl	144d0 <close@plt+0x3580>
   1384c:	ldr	r3, [pc, #32]	; 13874 <close@plt+0x2924>
   13850:	mov	r5, r0
   13854:	ldm	r3, {r0, r1}
   13858:	str	r5, [r7]
   1385c:	stm	r5, {r0, r1}
   13860:	b	1374c <close@plt+0x27fc>
   13864:	bl	146bc <close@plt+0x376c>
   13868:	bl	10f44 <abort@plt>
   1386c:	strdeq	r6, [r2], -r4
   13870:	andeq	r6, r2, r4, ror #2
   13874:	strdeq	r6, [r2], -ip
   13878:	push	{r4, r5, r6, lr}
   1387c:	mov	r5, r0
   13880:	bl	10e84 <__errno_location@plt>
   13884:	cmp	r5, #0
   13888:	mov	r1, #48	; 0x30
   1388c:	mov	r4, r0
   13890:	ldr	r0, [pc, #16]	; 138a8 <close@plt+0x2958>
   13894:	ldr	r6, [r4]
   13898:	movne	r0, r5
   1389c:	bl	1467c <close@plt+0x372c>
   138a0:	str	r6, [r4]
   138a4:	pop	{r4, r5, r6, pc}
   138a8:	andeq	r6, r2, r4, ror #4
   138ac:	ldr	r3, [pc, #12]	; 138c0 <close@plt+0x2970>
   138b0:	cmp	r0, #0
   138b4:	moveq	r0, r3
   138b8:	ldr	r0, [r0]
   138bc:	bx	lr
   138c0:	andeq	r6, r2, r4, ror #4
   138c4:	ldr	r3, [pc, #12]	; 138d8 <close@plt+0x2988>
   138c8:	cmp	r0, #0
   138cc:	moveq	r0, r3
   138d0:	str	r1, [r0]
   138d4:	bx	lr
   138d8:	andeq	r6, r2, r4, ror #4
   138dc:	ldr	r3, [pc, #52]	; 13918 <close@plt+0x29c8>
   138e0:	cmp	r0, #0
   138e4:	moveq	r0, r3
   138e8:	add	r3, r0, #8
   138ec:	push	{lr}		; (str lr, [sp, #-4]!)
   138f0:	lsr	lr, r1, #5
   138f4:	and	r1, r1, #31
   138f8:	ldr	ip, [r3, lr, lsl #2]
   138fc:	lsr	r0, ip, r1
   13900:	eor	r2, r2, r0
   13904:	and	r2, r2, #1
   13908:	and	r0, r0, #1
   1390c:	eor	r1, ip, r2, lsl r1
   13910:	str	r1, [r3, lr, lsl #2]
   13914:	pop	{pc}		; (ldr pc, [sp], #4)
   13918:	andeq	r6, r2, r4, ror #4
   1391c:	ldr	r3, [pc, #16]	; 13934 <close@plt+0x29e4>
   13920:	cmp	r0, #0
   13924:	movne	r3, r0
   13928:	ldr	r0, [r3, #4]
   1392c:	str	r1, [r3, #4]
   13930:	bx	lr
   13934:	andeq	r6, r2, r4, ror #4
   13938:	ldr	r3, [pc, #44]	; 1396c <close@plt+0x2a1c>
   1393c:	cmp	r0, #0
   13940:	moveq	r0, r3
   13944:	mov	ip, #10
   13948:	cmp	r2, #0
   1394c:	cmpne	r1, #0
   13950:	str	ip, [r0]
   13954:	beq	13964 <close@plt+0x2a14>
   13958:	str	r1, [r0, #40]	; 0x28
   1395c:	str	r2, [r0, #44]	; 0x2c
   13960:	bx	lr
   13964:	push	{r4, lr}
   13968:	bl	10f44 <abort@plt>
   1396c:	andeq	r6, r2, r4, ror #4
   13970:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13974:	sub	sp, sp, #24
   13978:	ldr	ip, [pc, #108]	; 139ec <close@plt+0x2a9c>
   1397c:	ldr	r4, [sp, #56]	; 0x38
   13980:	mov	r9, r2
   13984:	cmp	r4, #0
   13988:	moveq	r4, ip
   1398c:	mov	sl, r3
   13990:	mov	r7, r0
   13994:	mov	r8, r1
   13998:	bl	10e84 <__errno_location@plt>
   1399c:	ldr	r3, [r4, #44]	; 0x2c
   139a0:	mov	r1, r8
   139a4:	ldr	r6, [r0]
   139a8:	str	r3, [sp, #16]
   139ac:	ldr	r2, [r4, #40]	; 0x28
   139b0:	add	r3, r4, #8
   139b4:	str	r3, [sp, #8]
   139b8:	str	r2, [sp, #12]
   139bc:	ldr	r2, [r4, #4]
   139c0:	mov	r5, r0
   139c4:	str	r2, [sp, #4]
   139c8:	ldr	ip, [r4]
   139cc:	mov	r3, sl
   139d0:	mov	r2, r9
   139d4:	mov	r0, r7
   139d8:	str	ip, [sp]
   139dc:	bl	11ec4 <close@plt+0xf74>
   139e0:	str	r6, [r5]
   139e4:	add	sp, sp, #24
   139e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139ec:	andeq	r6, r2, r4, ror #4
   139f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139f4:	cmp	r3, #0
   139f8:	sub	sp, sp, #44	; 0x2c
   139fc:	ldr	r4, [pc, #192]	; 13ac4 <close@plt+0x2b74>
   13a00:	mov	r6, r2
   13a04:	movne	r4, r3
   13a08:	mov	r9, r1
   13a0c:	mov	r8, r0
   13a10:	bl	10e84 <__errno_location@plt>
   13a14:	ldr	r3, [r4, #44]	; 0x2c
   13a18:	ldr	r5, [r4, #4]
   13a1c:	add	sl, r4, #8
   13a20:	cmp	r6, #0
   13a24:	orreq	r5, r5, #1
   13a28:	mov	r1, #0
   13a2c:	ldr	r2, [r0]
   13a30:	str	r3, [sp, #16]
   13a34:	ldr	r3, [r4, #40]	; 0x28
   13a38:	stmib	sp, {r5, sl}
   13a3c:	str	r3, [sp, #12]
   13a40:	ldr	r3, [r4]
   13a44:	mov	r7, r0
   13a48:	str	r2, [sp, #28]
   13a4c:	str	r3, [sp]
   13a50:	mov	r2, r8
   13a54:	mov	r3, r9
   13a58:	mov	r0, r1
   13a5c:	bl	11ec4 <close@plt+0xf74>
   13a60:	add	r1, r0, #1
   13a64:	mov	fp, r0
   13a68:	mov	r0, r1
   13a6c:	str	r1, [sp, #36]	; 0x24
   13a70:	bl	14474 <close@plt+0x3524>
   13a74:	ldr	r3, [r4, #44]	; 0x2c
   13a78:	mov	r2, r8
   13a7c:	str	r3, [sp, #16]
   13a80:	ldr	r3, [r4, #40]	; 0x28
   13a84:	str	r5, [sp, #4]
   13a88:	str	r3, [sp, #12]
   13a8c:	str	sl, [sp, #8]
   13a90:	ldr	ip, [r4]
   13a94:	ldr	r1, [sp, #36]	; 0x24
   13a98:	mov	r3, r9
   13a9c:	str	ip, [sp]
   13aa0:	str	r0, [sp, #32]
   13aa4:	bl	11ec4 <close@plt+0xf74>
   13aa8:	ldr	r2, [sp, #28]
   13aac:	cmp	r6, #0
   13ab0:	str	r2, [r7]
   13ab4:	ldr	r0, [sp, #32]
   13ab8:	strne	fp, [r6]
   13abc:	add	sp, sp, #44	; 0x2c
   13ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac4:	andeq	r6, r2, r4, ror #4
   13ac8:	mov	r3, r2
   13acc:	mov	r2, #0
   13ad0:	b	139f0 <close@plt+0x2aa0>
   13ad4:	push	{r4, r5, r6, r7, r8, lr}
   13ad8:	ldr	r6, [pc, #112]	; 13b50 <close@plt+0x2c00>
   13adc:	ldr	r3, [r6, #4]
   13ae0:	ldr	r7, [r6]
   13ae4:	cmp	r3, #1
   13ae8:	ble	13b0c <close@plt+0x2bbc>
   13aec:	sub	r5, r7, #8
   13af0:	add	r5, r5, r3, lsl #3
   13af4:	mov	r4, r7
   13af8:	ldr	r0, [r4, #12]
   13afc:	add	r4, r4, #8
   13b00:	bl	10d1c <free@plt>
   13b04:	cmp	r4, r5
   13b08:	bne	13af8 <close@plt+0x2ba8>
   13b0c:	ldr	r0, [r7, #4]
   13b10:	ldr	r4, [pc, #60]	; 13b54 <close@plt+0x2c04>
   13b14:	cmp	r0, r4
   13b18:	beq	13b2c <close@plt+0x2bdc>
   13b1c:	bl	10d1c <free@plt>
   13b20:	mov	r3, #256	; 0x100
   13b24:	str	r4, [r6, #12]
   13b28:	str	r3, [r6, #8]
   13b2c:	ldr	r4, [pc, #36]	; 13b58 <close@plt+0x2c08>
   13b30:	cmp	r7, r4
   13b34:	beq	13b44 <close@plt+0x2bf4>
   13b38:	mov	r0, r7
   13b3c:	bl	10d1c <free@plt>
   13b40:	str	r4, [r6]
   13b44:	mov	r3, #1
   13b48:	str	r3, [r6, #4]
   13b4c:	pop	{r4, r5, r6, r7, r8, pc}
   13b50:	strdeq	r6, [r2], -r4
   13b54:	andeq	r6, r2, r4, ror #2
   13b58:	strdeq	r6, [r2], -ip
   13b5c:	ldr	r3, [pc, #4]	; 13b68 <close@plt+0x2c18>
   13b60:	mvn	r2, #0
   13b64:	b	136dc <close@plt+0x278c>
   13b68:	andeq	r6, r2, r4, ror #4
   13b6c:	ldr	r3, [pc]	; 13b74 <close@plt+0x2c24>
   13b70:	b	136dc <close@plt+0x278c>
   13b74:	andeq	r6, r2, r4, ror #4
   13b78:	mov	r1, r0
   13b7c:	ldr	r3, [pc, #8]	; 13b8c <close@plt+0x2c3c>
   13b80:	mvn	r2, #0
   13b84:	mov	r0, #0
   13b88:	b	136dc <close@plt+0x278c>
   13b8c:	andeq	r6, r2, r4, ror #4
   13b90:	mov	r2, r1
   13b94:	ldr	r3, [pc, #8]	; 13ba4 <close@plt+0x2c54>
   13b98:	mov	r1, r0
   13b9c:	mov	r0, #0
   13ba0:	b	136dc <close@plt+0x278c>
   13ba4:	andeq	r6, r2, r4, ror #4
   13ba8:	push	{r4, r5, r6, lr}
   13bac:	sub	sp, sp, #56	; 0x38
   13bb0:	ldr	r4, [pc, #68]	; 13bfc <close@plt+0x2cac>
   13bb4:	mov	r6, r2
   13bb8:	mov	r5, r0
   13bbc:	ldr	r3, [r4]
   13bc0:	add	r0, sp, #4
   13bc4:	str	r3, [sp, #52]	; 0x34
   13bc8:	bl	11d54 <close@plt+0xe04>
   13bcc:	add	r3, sp, #4
   13bd0:	mvn	r2, #0
   13bd4:	mov	r1, r6
   13bd8:	mov	r0, r5
   13bdc:	bl	136dc <close@plt+0x278c>
   13be0:	ldr	r2, [sp, #52]	; 0x34
   13be4:	ldr	r3, [r4]
   13be8:	cmp	r2, r3
   13bec:	bne	13bf8 <close@plt+0x2ca8>
   13bf0:	add	sp, sp, #56	; 0x38
   13bf4:	pop	{r4, r5, r6, pc}
   13bf8:	bl	10d7c <__stack_chk_fail@plt>
   13bfc:	andeq	r5, r2, r8, lsl #30
   13c00:	push	{r4, r5, r6, r7, lr}
   13c04:	sub	sp, sp, #60	; 0x3c
   13c08:	ldr	r4, [pc, #72]	; 13c58 <close@plt+0x2d08>
   13c0c:	mov	r6, r2
   13c10:	mov	r7, r3
   13c14:	ldr	ip, [r4]
   13c18:	mov	r5, r0
   13c1c:	add	r0, sp, #4
   13c20:	str	ip, [sp, #52]	; 0x34
   13c24:	bl	11d54 <close@plt+0xe04>
   13c28:	add	r3, sp, #4
   13c2c:	mov	r2, r7
   13c30:	mov	r1, r6
   13c34:	mov	r0, r5
   13c38:	bl	136dc <close@plt+0x278c>
   13c3c:	ldr	r2, [sp, #52]	; 0x34
   13c40:	ldr	r3, [r4]
   13c44:	cmp	r2, r3
   13c48:	bne	13c54 <close@plt+0x2d04>
   13c4c:	add	sp, sp, #60	; 0x3c
   13c50:	pop	{r4, r5, r6, r7, pc}
   13c54:	bl	10d7c <__stack_chk_fail@plt>
   13c58:	andeq	r5, r2, r8, lsl #30
   13c5c:	mov	r2, r1
   13c60:	mov	r1, r0
   13c64:	mov	r0, #0
   13c68:	b	13ba8 <close@plt+0x2c58>
   13c6c:	mov	r3, r2
   13c70:	mov	r2, r1
   13c74:	mov	r1, r0
   13c78:	mov	r0, #0
   13c7c:	b	13c00 <close@plt+0x2cb0>
   13c80:	push	{r4, r5, r6, r7, r8, r9, lr}
   13c84:	mov	r4, r2
   13c88:	ldr	lr, [pc, #128]	; 13d10 <close@plt+0x2dc0>
   13c8c:	mov	r8, r0
   13c90:	mov	r9, r1
   13c94:	ldm	lr!, {r0, r1, r2, r3}
   13c98:	sub	sp, sp, #60	; 0x3c
   13c9c:	add	ip, sp, #4
   13ca0:	lsr	r6, r4, #5
   13ca4:	stmia	ip!, {r0, r1, r2, r3}
   13ca8:	add	r7, sp, #12
   13cac:	ldm	lr!, {r0, r1, r2, r3}
   13cb0:	and	r4, r4, #31
   13cb4:	ldr	r5, [pc, #88]	; 13d14 <close@plt+0x2dc4>
   13cb8:	stmia	ip!, {r0, r1, r2, r3}
   13cbc:	ldm	lr, {r0, r1, r2, r3}
   13cc0:	stm	ip, {r0, r1, r2, r3}
   13cc4:	mov	r2, r9
   13cc8:	ldr	r3, [r7, r6, lsl #2]
   13ccc:	ldr	ip, [r5]
   13cd0:	mov	r1, r8
   13cd4:	mvn	r0, r3, lsr r4
   13cd8:	and	r0, r0, #1
   13cdc:	str	ip, [sp, #52]	; 0x34
   13ce0:	eor	r4, r3, r0, lsl r4
   13ce4:	add	r3, sp, #4
   13ce8:	mov	r0, #0
   13cec:	str	r4, [r7, r6, lsl #2]
   13cf0:	bl	136dc <close@plt+0x278c>
   13cf4:	ldr	r2, [sp, #52]	; 0x34
   13cf8:	ldr	r3, [r5]
   13cfc:	cmp	r2, r3
   13d00:	bne	13d0c <close@plt+0x2dbc>
   13d04:	add	sp, sp, #60	; 0x3c
   13d08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13d0c:	bl	10d7c <__stack_chk_fail@plt>
   13d10:	andeq	r6, r2, r4, ror #4
   13d14:	andeq	r5, r2, r8, lsl #30
   13d18:	mov	r2, r1
   13d1c:	mvn	r1, #0
   13d20:	b	13c80 <close@plt+0x2d30>
   13d24:	mov	r2, #58	; 0x3a
   13d28:	mvn	r1, #0
   13d2c:	b	13c80 <close@plt+0x2d30>
   13d30:	mov	r2, #58	; 0x3a
   13d34:	b	13c80 <close@plt+0x2d30>
   13d38:	push	{r4, r5, r6, r7, r8, lr}
   13d3c:	sub	sp, sp, #104	; 0x68
   13d40:	ldr	r5, [pc, #120]	; 13dc0 <close@plt+0x2e70>
   13d44:	mov	r6, r0
   13d48:	mov	r0, sp
   13d4c:	ldr	r3, [r5]
   13d50:	mov	r7, r2
   13d54:	str	r3, [sp, #100]	; 0x64
   13d58:	bl	11d54 <close@plt+0xe04>
   13d5c:	mov	ip, sp
   13d60:	add	lr, sp, #52	; 0x34
   13d64:	ldm	ip!, {r0, r1, r2, r3}
   13d68:	stmia	lr!, {r0, r1, r2, r3}
   13d6c:	ldm	ip!, {r0, r1, r2, r3}
   13d70:	ldr	r8, [sp, #64]	; 0x40
   13d74:	stmia	lr!, {r0, r1, r2, r3}
   13d78:	mvn	r4, r8
   13d7c:	ldm	ip, {r0, r1, r2, r3}
   13d80:	and	ip, r4, #67108864	; 0x4000000
   13d84:	eor	ip, ip, r8
   13d88:	str	ip, [sp, #64]	; 0x40
   13d8c:	stm	lr, {r0, r1, r2, r3}
   13d90:	add	r3, sp, #52	; 0x34
   13d94:	mvn	r2, #0
   13d98:	mov	r1, r7
   13d9c:	mov	r0, r6
   13da0:	bl	136dc <close@plt+0x278c>
   13da4:	ldr	r2, [sp, #100]	; 0x64
   13da8:	ldr	r3, [r5]
   13dac:	cmp	r2, r3
   13db0:	bne	13dbc <close@plt+0x2e6c>
   13db4:	add	sp, sp, #104	; 0x68
   13db8:	pop	{r4, r5, r6, r7, r8, pc}
   13dbc:	bl	10d7c <__stack_chk_fail@plt>
   13dc0:	andeq	r5, r2, r8, lsl #30
   13dc4:	push	{r4, r5, r6, r7, r8, r9, lr}
   13dc8:	mov	r6, r1
   13dcc:	ldr	lr, [pc, #132]	; 13e58 <close@plt+0x2f08>
   13dd0:	mov	r5, r2
   13dd4:	mov	r8, r0
   13dd8:	mov	r9, r3
   13ddc:	ldm	lr!, {r0, r1, r2, r3}
   13de0:	sub	sp, sp, #60	; 0x3c
   13de4:	add	ip, sp, #4
   13de8:	ldr	r4, [pc, #108]	; 13e5c <close@plt+0x2f0c>
   13dec:	stmia	ip!, {r0, r1, r2, r3}
   13df0:	mov	r7, #10
   13df4:	ldm	lr!, {r0, r1, r2, r3}
   13df8:	cmp	r5, #0
   13dfc:	cmpne	r6, #0
   13e00:	str	r7, [sp, #4]
   13e04:	stmia	ip!, {r0, r1, r2, r3}
   13e08:	ldm	lr, {r0, r1, r2, r3}
   13e0c:	ldr	lr, [r4]
   13e10:	stm	ip, {r0, r1, r2, r3}
   13e14:	str	lr, [sp, #52]	; 0x34
   13e18:	beq	13e54 <close@plt+0x2f04>
   13e1c:	add	r3, sp, #4
   13e20:	ldr	r2, [sp, #88]	; 0x58
   13e24:	mov	r1, r9
   13e28:	mov	r0, r8
   13e2c:	str	r6, [sp, #44]	; 0x2c
   13e30:	str	r5, [sp, #48]	; 0x30
   13e34:	bl	136dc <close@plt+0x278c>
   13e38:	ldr	r2, [sp, #52]	; 0x34
   13e3c:	ldr	r3, [r4]
   13e40:	cmp	r2, r3
   13e44:	bne	13e50 <close@plt+0x2f00>
   13e48:	add	sp, sp, #60	; 0x3c
   13e4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13e50:	bl	10d7c <__stack_chk_fail@plt>
   13e54:	bl	10f44 <abort@plt>
   13e58:	andeq	r6, r2, r4, ror #4
   13e5c:	andeq	r5, r2, r8, lsl #30
   13e60:	push	{lr}		; (str lr, [sp, #-4]!)
   13e64:	sub	sp, sp, #12
   13e68:	mvn	ip, #0
   13e6c:	str	ip, [sp]
   13e70:	bl	13dc4 <close@plt+0x2e74>
   13e74:	add	sp, sp, #12
   13e78:	pop	{pc}		; (ldr pc, [sp], #4)
   13e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e80:	sub	sp, sp, #12
   13e84:	mvn	ip, #0
   13e88:	mov	r3, r2
   13e8c:	str	ip, [sp]
   13e90:	mov	r2, r1
   13e94:	mov	r1, r0
   13e98:	mov	r0, #0
   13e9c:	bl	13dc4 <close@plt+0x2e74>
   13ea0:	add	sp, sp, #12
   13ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   13eac:	sub	sp, sp, #12
   13eb0:	str	r3, [sp]
   13eb4:	mov	r3, r2
   13eb8:	mov	r2, r1
   13ebc:	mov	r1, r0
   13ec0:	mov	r0, #0
   13ec4:	bl	13dc4 <close@plt+0x2e74>
   13ec8:	add	sp, sp, #12
   13ecc:	pop	{pc}		; (ldr pc, [sp], #4)
   13ed0:	ldr	r3, [pc]	; 13ed8 <close@plt+0x2f88>
   13ed4:	b	136dc <close@plt+0x278c>
   13ed8:	andeq	r6, r2, r4, lsl #2
   13edc:	mov	r2, r1
   13ee0:	ldr	r3, [pc, #8]	; 13ef0 <close@plt+0x2fa0>
   13ee4:	mov	r1, r0
   13ee8:	mov	r0, #0
   13eec:	b	136dc <close@plt+0x278c>
   13ef0:	andeq	r6, r2, r4, lsl #2
   13ef4:	ldr	r3, [pc, #4]	; 13f00 <close@plt+0x2fb0>
   13ef8:	mvn	r2, #0
   13efc:	b	136dc <close@plt+0x278c>
   13f00:	andeq	r6, r2, r4, lsl #2
   13f04:	mov	r1, r0
   13f08:	ldr	r3, [pc, #8]	; 13f18 <close@plt+0x2fc8>
   13f0c:	mvn	r2, #0
   13f10:	mov	r0, #0
   13f14:	b	136dc <close@plt+0x278c>
   13f18:	andeq	r6, r2, r4, lsl #2
   13f1c:	push	{r4, r5, r6, lr}
   13f20:	sub	sp, sp, #32
   13f24:	cmp	r1, #0
   13f28:	mov	r5, r0
   13f2c:	ldr	r4, [sp, #48]	; 0x30
   13f30:	ldr	r6, [sp, #52]	; 0x34
   13f34:	beq	13fc4 <close@plt+0x3074>
   13f38:	strd	r2, [sp]
   13f3c:	mov	r3, r1
   13f40:	ldr	r2, [pc, #828]	; 14284 <close@plt+0x3334>
   13f44:	mov	r1, #1
   13f48:	bl	10ec0 <__fprintf_chk@plt>
   13f4c:	mov	r2, #5
   13f50:	ldr	r1, [pc, #816]	; 14288 <close@plt+0x3338>
   13f54:	mov	r0, #0
   13f58:	bl	10d70 <dcgettext@plt>
   13f5c:	ldr	r3, [pc, #808]	; 1428c <close@plt+0x333c>
   13f60:	ldr	r2, [pc, #808]	; 14290 <close@plt+0x3340>
   13f64:	str	r3, [sp]
   13f68:	mov	r1, #1
   13f6c:	mov	r3, r0
   13f70:	mov	r0, r5
   13f74:	bl	10ec0 <__fprintf_chk@plt>
   13f78:	ldr	r1, [pc, #788]	; 14294 <close@plt+0x3344>
   13f7c:	mov	r2, #5
   13f80:	mov	r0, #0
   13f84:	bl	10d70 <dcgettext@plt>
   13f88:	mov	r1, r5
   13f8c:	bl	10cec <fputs_unlocked@plt>
   13f90:	cmp	r6, #9
   13f94:	ldrls	pc, [pc, r6, lsl #2]
   13f98:	b	14274 <close@plt+0x3324>
   13f9c:	andeq	r4, r1, r0, lsl #5
   13fa0:	andeq	r4, r1, r8, asr #32
   13fa4:	andeq	r4, r1, r4, ror r0
   13fa8:	andeq	r4, r1, r8, lsr #1
   13fac:	andeq	r4, r1, r4, ror #1
   13fb0:	andeq	r4, r1, r4, lsr #2
   13fb4:	andeq	r4, r1, ip, ror #2
   13fb8:			; <UNDEFINED> instruction: 0x000141bc
   13fbc:	andeq	r4, r1, r4, lsl r2
   13fc0:	ldrdeq	r3, [r1], -ip
   13fc4:	str	r3, [sp]
   13fc8:	mov	r1, #1
   13fcc:	mov	r3, r2
   13fd0:	ldr	r2, [pc, #704]	; 14298 <close@plt+0x3348>
   13fd4:	bl	10ec0 <__fprintf_chk@plt>
   13fd8:	b	13f4c <close@plt+0x2ffc>
   13fdc:	ldr	r1, [pc, #696]	; 1429c <close@plt+0x334c>
   13fe0:	mov	r2, #5
   13fe4:	mov	r0, #0
   13fe8:	bl	10d70 <dcgettext@plt>
   13fec:	ldr	r2, [r4, #32]
   13ff0:	ldr	r3, [r4, #28]
   13ff4:	ldr	r1, [r4, #24]
   13ff8:	str	r2, [sp, #28]
   13ffc:	ldr	r2, [r4, #20]
   14000:	str	r3, [sp, #24]
   14004:	ldr	r3, [r4, #16]
   14008:	str	r1, [sp, #20]
   1400c:	ldr	r1, [r4, #12]
   14010:	str	r2, [sp, #16]
   14014:	ldr	r2, [r4, #8]
   14018:	str	r3, [sp, #12]
   1401c:	ldr	r3, [r4, #4]
   14020:	str	r1, [sp, #8]
   14024:	str	r2, [sp, #4]
   14028:	str	r3, [sp]
   1402c:	mov	r1, #1
   14030:	ldr	r3, [r4]
   14034:	mov	r2, r0
   14038:	mov	r0, r5
   1403c:	bl	10ec0 <__fprintf_chk@plt>
   14040:	add	sp, sp, #32
   14044:	pop	{r4, r5, r6, pc}
   14048:	mov	r2, #5
   1404c:	ldr	r1, [pc, #588]	; 142a0 <close@plt+0x3350>
   14050:	mov	r0, #0
   14054:	bl	10d70 <dcgettext@plt>
   14058:	ldr	r3, [r4]
   1405c:	mov	r1, #1
   14060:	mov	r2, r0
   14064:	mov	r0, r5
   14068:	add	sp, sp, #32
   1406c:	pop	{r4, r5, r6, lr}
   14070:	b	10ec0 <__fprintf_chk@plt>
   14074:	mov	r2, #5
   14078:	ldr	r1, [pc, #548]	; 142a4 <close@plt+0x3354>
   1407c:	mov	r0, #0
   14080:	bl	10d70 <dcgettext@plt>
   14084:	ldr	r2, [r4, #4]
   14088:	ldr	r3, [r4]
   1408c:	mov	r1, #1
   14090:	str	r2, [sp, #48]	; 0x30
   14094:	mov	r2, r0
   14098:	mov	r0, r5
   1409c:	add	sp, sp, #32
   140a0:	pop	{r4, r5, r6, lr}
   140a4:	b	10ec0 <__fprintf_chk@plt>
   140a8:	mov	r2, #5
   140ac:	ldr	r1, [pc, #500]	; 142a8 <close@plt+0x3358>
   140b0:	mov	r0, #0
   140b4:	bl	10d70 <dcgettext@plt>
   140b8:	ldr	r2, [r4, #8]
   140bc:	ldr	r3, [r4, #4]
   140c0:	mov	r1, #1
   140c4:	str	r2, [sp, #52]	; 0x34
   140c8:	str	r3, [sp, #48]	; 0x30
   140cc:	ldr	r3, [r4]
   140d0:	mov	r2, r0
   140d4:	mov	r0, r5
   140d8:	add	sp, sp, #32
   140dc:	pop	{r4, r5, r6, lr}
   140e0:	b	10ec0 <__fprintf_chk@plt>
   140e4:	mov	r2, #5
   140e8:	ldr	r1, [pc, #444]	; 142ac <close@plt+0x335c>
   140ec:	mov	r0, #0
   140f0:	bl	10d70 <dcgettext@plt>
   140f4:	ldr	r1, [r4, #12]
   140f8:	ldr	r2, [r4, #8]
   140fc:	ldr	r3, [r4, #4]
   14100:	str	r1, [sp, #8]
   14104:	str	r2, [sp, #4]
   14108:	str	r3, [sp]
   1410c:	mov	r1, #1
   14110:	ldr	r3, [r4]
   14114:	mov	r2, r0
   14118:	mov	r0, r5
   1411c:	bl	10ec0 <__fprintf_chk@plt>
   14120:	b	14040 <close@plt+0x30f0>
   14124:	mov	r2, #5
   14128:	ldr	r1, [pc, #384]	; 142b0 <close@plt+0x3360>
   1412c:	mov	r0, #0
   14130:	bl	10d70 <dcgettext@plt>
   14134:	ldr	r3, [r4, #16]
   14138:	ldr	r1, [r4, #12]
   1413c:	ldr	r2, [r4, #8]
   14140:	str	r3, [sp, #12]
   14144:	ldr	r3, [r4, #4]
   14148:	str	r1, [sp, #8]
   1414c:	str	r2, [sp, #4]
   14150:	str	r3, [sp]
   14154:	mov	r1, #1
   14158:	ldr	r3, [r4]
   1415c:	mov	r2, r0
   14160:	mov	r0, r5
   14164:	bl	10ec0 <__fprintf_chk@plt>
   14168:	b	14040 <close@plt+0x30f0>
   1416c:	mov	r2, #5
   14170:	ldr	r1, [pc, #316]	; 142b4 <close@plt+0x3364>
   14174:	mov	r0, #0
   14178:	bl	10d70 <dcgettext@plt>
   1417c:	ldr	r2, [r4, #20]
   14180:	ldr	r3, [r4, #16]
   14184:	ldr	r1, [r4, #12]
   14188:	str	r2, [sp, #16]
   1418c:	ldr	r2, [r4, #8]
   14190:	str	r3, [sp, #12]
   14194:	ldr	r3, [r4, #4]
   14198:	str	r1, [sp, #8]
   1419c:	str	r2, [sp, #4]
   141a0:	str	r3, [sp]
   141a4:	mov	r1, #1
   141a8:	ldr	r3, [r4]
   141ac:	mov	r2, r0
   141b0:	mov	r0, r5
   141b4:	bl	10ec0 <__fprintf_chk@plt>
   141b8:	b	14040 <close@plt+0x30f0>
   141bc:	mov	r2, #5
   141c0:	ldr	r1, [pc, #240]	; 142b8 <close@plt+0x3368>
   141c4:	mov	r0, #0
   141c8:	bl	10d70 <dcgettext@plt>
   141cc:	ldr	r1, [r4, #24]
   141d0:	ldr	r2, [r4, #20]
   141d4:	ldr	r3, [r4, #16]
   141d8:	str	r1, [sp, #20]
   141dc:	ldr	r1, [r4, #12]
   141e0:	str	r2, [sp, #16]
   141e4:	ldr	r2, [r4, #8]
   141e8:	str	r3, [sp, #12]
   141ec:	ldr	r3, [r4, #4]
   141f0:	str	r1, [sp, #8]
   141f4:	str	r2, [sp, #4]
   141f8:	str	r3, [sp]
   141fc:	mov	r1, #1
   14200:	ldr	r3, [r4]
   14204:	mov	r2, r0
   14208:	mov	r0, r5
   1420c:	bl	10ec0 <__fprintf_chk@plt>
   14210:	b	14040 <close@plt+0x30f0>
   14214:	mov	r2, #5
   14218:	ldr	r1, [pc, #156]	; 142bc <close@plt+0x336c>
   1421c:	mov	r0, #0
   14220:	bl	10d70 <dcgettext@plt>
   14224:	ldr	r3, [r4, #28]
   14228:	ldr	r1, [r4, #24]
   1422c:	ldr	r2, [r4, #20]
   14230:	str	r3, [sp, #24]
   14234:	ldr	r3, [r4, #16]
   14238:	str	r1, [sp, #20]
   1423c:	ldr	r1, [r4, #12]
   14240:	str	r2, [sp, #16]
   14244:	ldr	r2, [r4, #8]
   14248:	str	r3, [sp, #12]
   1424c:	ldr	r3, [r4, #4]
   14250:	str	r1, [sp, #8]
   14254:	str	r2, [sp, #4]
   14258:	str	r3, [sp]
   1425c:	mov	r1, #1
   14260:	ldr	r3, [r4]
   14264:	mov	r2, r0
   14268:	mov	r0, r5
   1426c:	bl	10ec0 <__fprintf_chk@plt>
   14270:	b	14040 <close@plt+0x30f0>
   14274:	mov	r2, #5
   14278:	ldr	r1, [pc, #64]	; 142c0 <close@plt+0x3370>
   1427c:	b	13fe4 <close@plt+0x3094>
   14280:	bl	10f44 <abort@plt>
   14284:	andeq	r5, r1, ip, lsl r6
   14288:	andeq	r5, r1, r0, lsr r6
   1428c:	andeq	r0, r0, r2, ror #15
   14290:	andeq	r5, r1, r4, lsl #18
   14294:	andeq	r5, r1, r4, lsr r6
   14298:	andeq	r5, r1, r8, lsr #12
   1429c:	andeq	r5, r1, ip, lsl #16
   142a0:	andeq	r5, r1, r0, lsl #14
   142a4:	andeq	r5, r1, r0, lsl r7
   142a8:	andeq	r5, r1, r8, lsr #14
   142ac:	andeq	r5, r1, r4, asr #14
   142b0:	andeq	r5, r1, r4, ror #14
   142b4:	andeq	r5, r1, r8, lsl #15
   142b8:			; <UNDEFINED> instruction: 0x000157b0
   142bc:	ldrdeq	r5, [r1], -ip
   142c0:	andeq	r5, r1, r0, asr #16
   142c4:	push	{r4, r5, lr}
   142c8:	sub	sp, sp, #12
   142cc:	ldr	r5, [sp, #24]
   142d0:	ldr	ip, [r5]
   142d4:	cmp	ip, #0
   142d8:	beq	142f4 <close@plt+0x33a4>
   142dc:	mov	lr, r5
   142e0:	mov	ip, #0
   142e4:	ldr	r4, [lr, #4]!
   142e8:	add	ip, ip, #1
   142ec:	cmp	r4, #0
   142f0:	bne	142e4 <close@plt+0x3394>
   142f4:	stm	sp, {r5, ip}
   142f8:	bl	13f1c <close@plt+0x2fcc>
   142fc:	add	sp, sp, #12
   14300:	pop	{r4, r5, pc}
   14304:	push	{r4, r5, r6, lr}
   14308:	sub	sp, sp, #56	; 0x38
   1430c:	ldr	r6, [pc, #88]	; 1436c <close@plt+0x341c>
   14310:	ldr	r5, [sp, #72]	; 0x48
   14314:	add	r4, sp, #8
   14318:	ldr	ip, [r6]
   1431c:	str	ip, [sp, #52]	; 0x34
   14320:	mov	ip, #0
   14324:	ldr	lr, [r5], #4
   14328:	cmp	lr, #0
   1432c:	str	lr, [r4, #4]!
   14330:	beq	14340 <close@plt+0x33f0>
   14334:	add	ip, ip, #1
   14338:	cmp	ip, #10
   1433c:	bne	14324 <close@plt+0x33d4>
   14340:	add	lr, sp, #12
   14344:	str	ip, [sp, #4]
   14348:	str	lr, [sp]
   1434c:	bl	13f1c <close@plt+0x2fcc>
   14350:	ldr	r2, [sp, #52]	; 0x34
   14354:	ldr	r3, [r6]
   14358:	cmp	r2, r3
   1435c:	bne	14368 <close@plt+0x3418>
   14360:	add	sp, sp, #56	; 0x38
   14364:	pop	{r4, r5, r6, pc}
   14368:	bl	10d7c <__stack_chk_fail@plt>
   1436c:	andeq	r5, r2, r8, lsl #30
   14370:	push	{r3}		; (str r3, [sp, #-4]!)
   14374:	mov	ip, #0
   14378:	push	{r4, r5, r6, lr}
   1437c:	sub	sp, sp, #60	; 0x3c
   14380:	ldr	r6, [pc, #100]	; 143ec <close@plt+0x349c>
   14384:	add	r5, sp, #8
   14388:	add	r4, sp, #80	; 0x50
   1438c:	ldr	r3, [r6]
   14390:	str	r4, [sp, #8]
   14394:	str	r3, [sp, #52]	; 0x34
   14398:	ldr	r3, [sp, #76]	; 0x4c
   1439c:	ldr	lr, [r4], #4
   143a0:	cmp	lr, #0
   143a4:	str	lr, [r5, #4]!
   143a8:	beq	143b8 <close@plt+0x3468>
   143ac:	add	ip, ip, #1
   143b0:	cmp	ip, #10
   143b4:	bne	1439c <close@plt+0x344c>
   143b8:	add	lr, sp, #12
   143bc:	str	ip, [sp, #4]
   143c0:	str	lr, [sp]
   143c4:	bl	13f1c <close@plt+0x2fcc>
   143c8:	ldr	r2, [sp, #52]	; 0x34
   143cc:	ldr	r3, [r6]
   143d0:	cmp	r2, r3
   143d4:	bne	143e8 <close@plt+0x3498>
   143d8:	add	sp, sp, #60	; 0x3c
   143dc:	pop	{r4, r5, r6, lr}
   143e0:	add	sp, sp, #4
   143e4:	bx	lr
   143e8:	bl	10d7c <__stack_chk_fail@plt>
   143ec:	andeq	r5, r2, r8, lsl #30
   143f0:	push	{r4, lr}
   143f4:	mov	r2, #5
   143f8:	ldr	r1, [pc, #88]	; 14458 <close@plt+0x3508>
   143fc:	mov	r0, #0
   14400:	bl	10d70 <dcgettext@plt>
   14404:	ldr	r2, [pc, #80]	; 1445c <close@plt+0x350c>
   14408:	mov	r1, r0
   1440c:	mov	r0, #1
   14410:	bl	10ea8 <__printf_chk@plt>
   14414:	mov	r2, #5
   14418:	ldr	r1, [pc, #64]	; 14460 <close@plt+0x3510>
   1441c:	mov	r0, #0
   14420:	bl	10d70 <dcgettext@plt>
   14424:	ldr	r3, [pc, #56]	; 14464 <close@plt+0x3514>
   14428:	ldr	r2, [pc, #56]	; 14468 <close@plt+0x3518>
   1442c:	mov	r1, r0
   14430:	mov	r0, #1
   14434:	bl	10ea8 <__printf_chk@plt>
   14438:	ldr	r1, [pc, #44]	; 1446c <close@plt+0x351c>
   1443c:	mov	r2, #5
   14440:	mov	r0, #0
   14444:	bl	10d70 <dcgettext@plt>
   14448:	ldr	r3, [pc, #32]	; 14470 <close@plt+0x3520>
   1444c:	pop	{r4, lr}
   14450:	ldr	r1, [r3]
   14454:	b	10cec <fputs_unlocked@plt>
   14458:	andeq	r5, r1, ip, ror r8
   1445c:	muleq	r1, r4, r8
   14460:	andeq	r5, r1, ip, lsr #17
   14464:	ldrdeq	r5, [r1], -r4
   14468:	strdeq	r5, [r1], -ip
   1446c:	andeq	r5, r1, r0, asr #17
   14470:	andeq	r6, r2, ip, asr #2
   14474:	push	{r4, lr}
   14478:	mov	r4, r0
   1447c:	bl	10e18 <malloc@plt>
   14480:	adds	r4, r4, #0
   14484:	movne	r4, #1
   14488:	cmp	r0, #0
   1448c:	movne	r4, #0
   14490:	cmp	r4, #0
   14494:	popeq	{r4, pc}
   14498:	bl	146bc <close@plt+0x376c>
   1449c:	push	{r4, r5, r6, lr}
   144a0:	umull	r4, r5, r0, r1
   144a4:	adds	r3, r5, #0
   144a8:	movne	r3, #1
   144ac:	cmp	r4, #0
   144b0:	blt	144c8 <close@plt+0x3578>
   144b4:	cmp	r3, #0
   144b8:	bne	144c8 <close@plt+0x3578>
   144bc:	mul	r0, r1, r0
   144c0:	pop	{r4, r5, r6, lr}
   144c4:	b	14474 <close@plt+0x3524>
   144c8:	bl	146bc <close@plt+0x376c>
   144cc:	b	14474 <close@plt+0x3524>
   144d0:	adds	r3, r0, #0
   144d4:	movne	r3, #1
   144d8:	cmp	r1, #0
   144dc:	movne	r3, #0
   144e0:	cmp	r3, #0
   144e4:	push	{r4, lr}
   144e8:	bne	14510 <close@plt+0x35c0>
   144ec:	mov	r4, r1
   144f0:	bl	10d94 <realloc@plt>
   144f4:	adds	r4, r4, #0
   144f8:	movne	r4, #1
   144fc:	cmp	r0, #0
   14500:	movne	r4, #0
   14504:	cmp	r4, #0
   14508:	popeq	{r4, pc}
   1450c:	bl	146bc <close@plt+0x376c>
   14510:	bl	10d1c <free@plt>
   14514:	mov	r0, #0
   14518:	pop	{r4, pc}
   1451c:	push	{r4, r5, r6, lr}
   14520:	umull	r4, r5, r1, r2
   14524:	adds	r3, r5, #0
   14528:	movne	r3, #1
   1452c:	cmp	r4, #0
   14530:	blt	14548 <close@plt+0x35f8>
   14534:	cmp	r3, #0
   14538:	bne	14548 <close@plt+0x35f8>
   1453c:	mul	r1, r2, r1
   14540:	pop	{r4, r5, r6, lr}
   14544:	b	144d0 <close@plt+0x3580>
   14548:	bl	146bc <close@plt+0x376c>
   1454c:	push	{r4, r5, r6, r7, r8, lr}
   14550:	subs	r7, r0, #0
   14554:	mov	r6, r1
   14558:	mov	r5, r2
   1455c:	ldr	r4, [r1]
   14560:	beq	14594 <close@plt+0x3644>
   14564:	mov	r1, r2
   14568:	ldr	r0, [pc, #104]	; 145d8 <close@plt+0x3688>
   1456c:	bl	14bfc <close@plt+0x3cac>
   14570:	cmp	r0, r4
   14574:	bls	145b8 <close@plt+0x3668>
   14578:	add	r3, r4, #1
   1457c:	add	r4, r3, r4, lsr #1
   14580:	str	r4, [r6]
   14584:	mul	r1, r5, r4
   14588:	mov	r0, r7
   1458c:	pop	{r4, r5, r6, r7, r8, lr}
   14590:	b	144d0 <close@plt+0x3580>
   14594:	cmp	r4, #0
   14598:	beq	145bc <close@plt+0x366c>
   1459c:	umull	r0, r1, r4, r5
   145a0:	adds	r3, r1, #0
   145a4:	movne	r3, #1
   145a8:	cmp	r0, #0
   145ac:	blt	145b8 <close@plt+0x3668>
   145b0:	cmp	r3, #0
   145b4:	beq	14580 <close@plt+0x3630>
   145b8:	bl	146bc <close@plt+0x376c>
   145bc:	mov	r1, r2
   145c0:	mov	r0, #64	; 0x40
   145c4:	bl	14bfc <close@plt+0x3cac>
   145c8:	cmp	r5, #64	; 0x40
   145cc:	movls	r4, r0
   145d0:	addhi	r4, r0, #1
   145d4:	b	1459c <close@plt+0x364c>
   145d8:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   145dc:	cmp	r0, #0
   145e0:	ldr	r3, [r1]
   145e4:	beq	14608 <close@plt+0x36b8>
   145e8:	ldr	r2, [pc, #60]	; 1462c <close@plt+0x36dc>
   145ec:	cmp	r3, r2
   145f0:	bhi	14624 <close@plt+0x36d4>
   145f4:	add	r2, r3, #1
   145f8:	add	r3, r2, r3, lsr #1
   145fc:	str	r3, [r1]
   14600:	mov	r1, r3
   14604:	b	144d0 <close@plt+0x3580>
   14608:	cmp	r3, #0
   1460c:	bne	14620 <close@plt+0x36d0>
   14610:	mov	r3, #64	; 0x40
   14614:	str	r3, [r1]
   14618:	mov	r1, r3
   1461c:	b	144d0 <close@plt+0x3580>
   14620:	bge	145fc <close@plt+0x36ac>
   14624:	push	{r4, lr}
   14628:	bl	146bc <close@plt+0x376c>
   1462c:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14630:	push	{r4, lr}
   14634:	mov	r4, r0
   14638:	bl	14474 <close@plt+0x3524>
   1463c:	mov	r2, r4
   14640:	mov	r1, #0
   14644:	pop	{r4, lr}
   14648:	b	10e9c <memset@plt>
   1464c:	push	{r4, r5, r6, lr}
   14650:	umull	r4, r5, r0, r1
   14654:	adds	r3, r5, #0
   14658:	movne	r3, #1
   1465c:	cmp	r4, #0
   14660:	blt	14678 <close@plt+0x3728>
   14664:	cmp	r3, #0
   14668:	bne	14678 <close@plt+0x3728>
   1466c:	bl	10ce0 <calloc@plt>
   14670:	cmp	r0, #0
   14674:	popne	{r4, r5, r6, pc}
   14678:	bl	146bc <close@plt+0x376c>
   1467c:	push	{r4, r5, r6, lr}
   14680:	mov	r4, r1
   14684:	mov	r5, r0
   14688:	mov	r0, r1
   1468c:	bl	14474 <close@plt+0x3524>
   14690:	mov	r2, r4
   14694:	mov	r1, r5
   14698:	pop	{r4, r5, r6, lr}
   1469c:	b	10d34 <memcpy@plt>
   146a0:	push	{r4, lr}
   146a4:	mov	r4, r0
   146a8:	bl	10e78 <strlen@plt>
   146ac:	add	r1, r0, #1
   146b0:	mov	r0, r4
   146b4:	pop	{r4, lr}
   146b8:	b	1467c <close@plt+0x372c>
   146bc:	ldr	r3, [pc, #44]	; 146f0 <close@plt+0x37a0>
   146c0:	push	{r4, lr}
   146c4:	mov	r2, #5
   146c8:	ldr	r1, [pc, #36]	; 146f4 <close@plt+0x37a4>
   146cc:	mov	r0, #0
   146d0:	ldr	r4, [r3]
   146d4:	bl	10d70 <dcgettext@plt>
   146d8:	ldr	r2, [pc, #24]	; 146f8 <close@plt+0x37a8>
   146dc:	mov	r1, #0
   146e0:	mov	r3, r0
   146e4:	mov	r0, r4
   146e8:	bl	10df4 <error@plt>
   146ec:	bl	10f44 <abort@plt>
   146f0:	strdeq	r6, [r2], -r0
   146f4:	andeq	r5, r1, r4, lsr r9
   146f8:			; <UNDEFINED> instruction: 0x000154bc
   146fc:	push	{r1, r2, r3}
   14700:	push	{r4, r5, r6, r7, r8, lr}
   14704:	sub	sp, sp, #12
   14708:	ldr	r4, [pc, #300]	; 1483c <close@plt+0x38ec>
   1470c:	ldr	r3, [pc, #300]	; 14840 <close@plt+0x38f0>
   14710:	ldr	r1, [sp, #36]	; 0x24
   14714:	ldr	r2, [r4]
   14718:	cmp	r1, r3
   1471c:	add	r3, sp, #40	; 0x28
   14720:	str	r2, [sp, #4]
   14724:	str	r3, [sp]
   14728:	bne	147f4 <close@plt+0x38a4>
   1472c:	ldr	r6, [pc, #272]	; 14844 <close@plt+0x38f4>
   14730:	add	r3, sp, #44	; 0x2c
   14734:	str	r3, [sp]
   14738:	ldr	r3, [r6]
   1473c:	ldr	r7, [sp, #40]	; 0x28
   14740:	cmp	r3, #0
   14744:	blt	14788 <close@plt+0x3838>
   14748:	mov	r2, r7
   1474c:	mov	r8, r0
   14750:	bl	10ee4 <fcntl64@plt>
   14754:	subs	r5, r0, #0
   14758:	blt	14804 <close@plt+0x38b4>
   1475c:	mov	r3, #1
   14760:	str	r3, [r6]
   14764:	ldr	r2, [sp, #4]
   14768:	ldr	r3, [r4]
   1476c:	mov	r0, r5
   14770:	cmp	r2, r3
   14774:	bne	14838 <close@plt+0x38e8>
   14778:	add	sp, sp, #12
   1477c:	pop	{r4, r5, r6, r7, r8, lr}
   14780:	add	sp, sp, #12
   14784:	bx	lr
   14788:	mov	r2, r7
   1478c:	mov	r1, #0
   14790:	bl	146fc <close@plt+0x37ac>
   14794:	subs	r5, r0, #0
   14798:	blt	14764 <close@plt+0x3814>
   1479c:	ldr	r3, [r6]
   147a0:	cmn	r3, #1
   147a4:	bne	14764 <close@plt+0x3814>
   147a8:	mov	r1, #1
   147ac:	mov	r0, r5
   147b0:	bl	10ee4 <fcntl64@plt>
   147b4:	subs	r2, r0, #0
   147b8:	blt	147d4 <close@plt+0x3884>
   147bc:	orr	r2, r2, #1
   147c0:	mov	r1, #2
   147c4:	mov	r0, r5
   147c8:	bl	10ee4 <fcntl64@plt>
   147cc:	cmn	r0, #1
   147d0:	bne	14764 <close@plt+0x3814>
   147d4:	bl	10e84 <__errno_location@plt>
   147d8:	mov	r6, r0
   147dc:	mov	r0, r5
   147e0:	ldr	r7, [r6]
   147e4:	mvn	r5, #0
   147e8:	bl	10f50 <close@plt>
   147ec:	str	r7, [r6]
   147f0:	b	14764 <close@plt+0x3814>
   147f4:	ldr	r2, [sp, #40]	; 0x28
   147f8:	bl	10ee4 <fcntl64@plt>
   147fc:	mov	r5, r0
   14800:	b	14764 <close@plt+0x3814>
   14804:	bl	10e84 <__errno_location@plt>
   14808:	ldr	r3, [r0]
   1480c:	cmp	r3, #22
   14810:	bne	1475c <close@plt+0x380c>
   14814:	mov	r2, r7
   14818:	mov	r0, r8
   1481c:	mov	r1, #0
   14820:	bl	146fc <close@plt+0x37ac>
   14824:	subs	r5, r0, #0
   14828:	mvnge	r3, #0
   1482c:	strge	r3, [r6]
   14830:	bge	147a8 <close@plt+0x3858>
   14834:	b	14764 <close@plt+0x3814>
   14838:	bl	10d7c <__stack_chk_fail@plt>
   1483c:	andeq	r5, r2, r8, lsl #30
   14840:	andeq	r0, r0, r6, lsl #8
   14844:	muleq	r2, r4, r2
   14848:	push	{r4, r5, r6, r7, r8, lr}
   1484c:	subs	r7, r0, #0
   14850:	ldr	r5, [pc, #108]	; 148c4 <close@plt+0x3974>
   14854:	sub	sp, sp, #8
   14858:	mov	r8, r1
   1485c:	ldr	r1, [r5]
   14860:	moveq	r7, sp
   14864:	str	r1, [sp, #4]
   14868:	mov	r0, r7
   1486c:	mov	r1, r8
   14870:	mov	r6, r2
   14874:	bl	10de8 <mbrtowc@plt>
   14878:	cmp	r6, #0
   1487c:	cmnne	r0, #3
   14880:	mov	r4, r0
   14884:	bhi	148a4 <close@plt+0x3954>
   14888:	ldr	r2, [sp, #4]
   1488c:	ldr	r3, [r5]
   14890:	mov	r0, r4
   14894:	cmp	r2, r3
   14898:	bne	148c0 <close@plt+0x3970>
   1489c:	add	sp, sp, #8
   148a0:	pop	{r4, r5, r6, r7, r8, pc}
   148a4:	mov	r0, #0
   148a8:	bl	149dc <close@plt+0x3a8c>
   148ac:	cmp	r0, #0
   148b0:	moveq	r4, #1
   148b4:	ldrbeq	r3, [r8]
   148b8:	streq	r3, [r7]
   148bc:	b	14888 <close@plt+0x3938>
   148c0:	bl	10d7c <__stack_chk_fail@plt>
   148c4:	andeq	r5, r2, r8, lsl #30
   148c8:	push	{r4, r5, r6, lr}
   148cc:	mov	r4, r0
   148d0:	bl	10ddc <__fpending@plt>
   148d4:	ldr	r5, [r4]
   148d8:	and	r5, r5, #32
   148dc:	mov	r6, r0
   148e0:	mov	r0, r4
   148e4:	bl	14a5c <close@plt+0x3b0c>
   148e8:	cmp	r5, #0
   148ec:	mov	r4, r0
   148f0:	bne	1491c <close@plt+0x39cc>
   148f4:	cmp	r0, #0
   148f8:	beq	14914 <close@plt+0x39c4>
   148fc:	cmp	r6, #0
   14900:	bne	14934 <close@plt+0x39e4>
   14904:	bl	10e84 <__errno_location@plt>
   14908:	ldr	r4, [r0]
   1490c:	subs	r4, r4, #9
   14910:	mvnne	r4, #0
   14914:	mov	r0, r4
   14918:	pop	{r4, r5, r6, pc}
   1491c:	cmp	r0, #0
   14920:	bne	14934 <close@plt+0x39e4>
   14924:	bl	10e84 <__errno_location@plt>
   14928:	str	r4, [r0]
   1492c:	mvn	r4, #0
   14930:	b	14914 <close@plt+0x39c4>
   14934:	mvn	r4, #0
   14938:	b	14914 <close@plt+0x39c4>
   1493c:	ldrb	r3, [r0]
   14940:	cmp	r3, #47	; 0x2f
   14944:	bne	14954 <close@plt+0x3a04>
   14948:	ldrb	r3, [r0, #1]!
   1494c:	cmp	r3, #47	; 0x2f
   14950:	beq	14948 <close@plt+0x39f8>
   14954:	cmp	r3, #0
   14958:	bxeq	lr
   1495c:	mov	r2, r0
   14960:	mov	r1, #0
   14964:	cmp	r3, #47	; 0x2f
   14968:	moveq	r1, #1
   1496c:	beq	1497c <close@plt+0x3a2c>
   14970:	cmp	r1, #0
   14974:	movne	r0, r2
   14978:	movne	r1, #0
   1497c:	ldrb	r3, [r2, #1]!
   14980:	cmp	r3, #0
   14984:	bne	14964 <close@plt+0x3a14>
   14988:	bx	lr
   1498c:	push	{r4, lr}
   14990:	mov	r4, r0
   14994:	bl	10e78 <strlen@plt>
   14998:	cmp	r0, #1
   1499c:	popls	{r4, pc}
   149a0:	add	r2, r4, r0
   149a4:	mov	r3, r0
   149a8:	ldrb	r2, [r2, #-1]
   149ac:	cmp	r2, #47	; 0x2f
   149b0:	subeq	r3, r0, #2
   149b4:	addeq	r3, r4, r3
   149b8:	rsbeq	r1, r4, #1
   149bc:	popne	{r4, pc}
   149c0:	cmp	r3, r4
   149c4:	add	r0, r1, r3
   149c8:	popeq	{r4, pc}
   149cc:	ldrb	r2, [r3], #-1
   149d0:	cmp	r2, #47	; 0x2f
   149d4:	popne	{r4, pc}
   149d8:	b	149c0 <close@plt+0x3a70>
   149dc:	push	{r4, lr}
   149e0:	mov	r1, #0
   149e4:	bl	10ef0 <setlocale@plt>
   149e8:	subs	r4, r0, #0
   149ec:	beq	14a18 <close@plt+0x3ac8>
   149f0:	ldr	r1, [pc, #40]	; 14a20 <close@plt+0x3ad0>
   149f4:	bl	10d04 <strcmp@plt>
   149f8:	cmp	r0, #0
   149fc:	popeq	{r4, pc}
   14a00:	mov	r0, r4
   14a04:	ldr	r1, [pc, #24]	; 14a24 <close@plt+0x3ad4>
   14a08:	bl	10d04 <strcmp@plt>
   14a0c:	adds	r0, r0, #0
   14a10:	movne	r0, #1
   14a14:	pop	{r4, pc}
   14a18:	mov	r0, #1
   14a1c:	pop	{r4, pc}
   14a20:	andeq	r5, r1, r8, asr #18
   14a24:	andeq	r5, r1, ip, asr #18
   14a28:	push	{r4, lr}
   14a2c:	mov	r0, #14
   14a30:	bl	10f08 <nl_langinfo@plt>
   14a34:	cmp	r0, #0
   14a38:	beq	14a50 <close@plt+0x3b00>
   14a3c:	ldrb	r2, [r0]
   14a40:	ldr	r3, [pc, #16]	; 14a58 <close@plt+0x3b08>
   14a44:	cmp	r2, #0
   14a48:	moveq	r0, r3
   14a4c:	pop	{r4, pc}
   14a50:	ldr	r0, [pc]	; 14a58 <close@plt+0x3b08>
   14a54:	pop	{r4, pc}
   14a58:	andeq	r5, r1, r4, asr r9
   14a5c:	push	{r4, r5, lr}
   14a60:	sub	sp, sp, #12
   14a64:	mov	r4, r0
   14a68:	bl	10eb4 <fileno@plt>
   14a6c:	cmp	r0, #0
   14a70:	mov	r0, r4
   14a74:	blt	14af0 <close@plt+0x3ba0>
   14a78:	bl	10e30 <__freading@plt>
   14a7c:	cmp	r0, #0
   14a80:	bne	14abc <close@plt+0x3b6c>
   14a84:	mov	r0, r4
   14a88:	bl	14afc <close@plt+0x3bac>
   14a8c:	cmp	r0, #0
   14a90:	beq	14aec <close@plt+0x3b9c>
   14a94:	bl	10e84 <__errno_location@plt>
   14a98:	mov	r5, r0
   14a9c:	mov	r0, r4
   14aa0:	ldr	r4, [r5]
   14aa4:	bl	10ecc <fclose@plt>
   14aa8:	cmp	r4, #0
   14aac:	mvnne	r0, #0
   14ab0:	strne	r4, [r5]
   14ab4:	add	sp, sp, #12
   14ab8:	pop	{r4, r5, pc}
   14abc:	mov	r0, r4
   14ac0:	bl	10eb4 <fileno@plt>
   14ac4:	mov	r3, #1
   14ac8:	str	r3, [sp]
   14acc:	mov	r2, #0
   14ad0:	mov	r3, #0
   14ad4:	bl	10dc4 <lseek64@plt>
   14ad8:	mvn	r3, #0
   14adc:	mvn	r2, #0
   14ae0:	cmp	r1, r3
   14ae4:	cmpeq	r0, r2
   14ae8:	bne	14a84 <close@plt+0x3b34>
   14aec:	mov	r0, r4
   14af0:	add	sp, sp, #12
   14af4:	pop	{r4, r5, lr}
   14af8:	b	10ecc <fclose@plt>
   14afc:	push	{r4, lr}
   14b00:	subs	r4, r0, #0
   14b04:	sub	sp, sp, #8
   14b08:	beq	14b24 <close@plt+0x3bd4>
   14b0c:	bl	10e30 <__freading@plt>
   14b10:	cmp	r0, #0
   14b14:	beq	14b24 <close@plt+0x3bd4>
   14b18:	ldr	r3, [r4]
   14b1c:	tst	r3, #256	; 0x100
   14b20:	bne	14b34 <close@plt+0x3be4>
   14b24:	mov	r0, r4
   14b28:	add	sp, sp, #8
   14b2c:	pop	{r4, lr}
   14b30:	b	10d10 <fflush@plt>
   14b34:	mov	r3, #1
   14b38:	str	r3, [sp]
   14b3c:	mov	r2, #0
   14b40:	mov	r3, #0
   14b44:	mov	r0, r4
   14b48:	bl	14b5c <close@plt+0x3c0c>
   14b4c:	mov	r0, r4
   14b50:	add	sp, sp, #8
   14b54:	pop	{r4, lr}
   14b58:	b	10d10 <fflush@plt>
   14b5c:	push	{r4, r5, r6, r7, r8, lr}
   14b60:	sub	sp, sp, #8
   14b64:	ldmib	r0, {ip, lr}
   14b68:	mov	r4, r0
   14b6c:	ldr	r5, [sp, #32]
   14b70:	cmp	lr, ip
   14b74:	beq	14b8c <close@plt+0x3c3c>
   14b78:	str	r5, [sp, #32]
   14b7c:	mov	r0, r4
   14b80:	add	sp, sp, #8
   14b84:	pop	{r4, r5, r6, r7, r8, lr}
   14b88:	b	10ed8 <fseeko64@plt>
   14b8c:	ldr	lr, [r0, #20]
   14b90:	ldr	ip, [r0, #16]
   14b94:	cmp	lr, ip
   14b98:	bne	14b78 <close@plt+0x3c28>
   14b9c:	ldr	r8, [r0, #36]	; 0x24
   14ba0:	cmp	r8, #0
   14ba4:	bne	14b78 <close@plt+0x3c28>
   14ba8:	mov	r6, r2
   14bac:	mov	r7, r3
   14bb0:	bl	10eb4 <fileno@plt>
   14bb4:	mov	r2, r6
   14bb8:	mov	r3, r7
   14bbc:	str	r5, [sp]
   14bc0:	bl	10dc4 <lseek64@plt>
   14bc4:	mvn	r3, #0
   14bc8:	mvn	r2, #0
   14bcc:	cmp	r1, r3
   14bd0:	cmpeq	r0, r2
   14bd4:	beq	14bf4 <close@plt+0x3ca4>
   14bd8:	ldr	r3, [r4]
   14bdc:	strd	r0, [r4, #80]	; 0x50
   14be0:	mov	r0, r8
   14be4:	bic	r3, r3, #16
   14be8:	str	r3, [r4]
   14bec:	add	sp, sp, #8
   14bf0:	pop	{r4, r5, r6, r7, r8, pc}
   14bf4:	mvn	r0, #0
   14bf8:	b	14bec <close@plt+0x3c9c>
   14bfc:	subs	r2, r1, #1
   14c00:	bxeq	lr
   14c04:	bcc	14ddc <close@plt+0x3e8c>
   14c08:	cmp	r0, r1
   14c0c:	bls	14dc0 <close@plt+0x3e70>
   14c10:	tst	r1, r2
   14c14:	beq	14dcc <close@plt+0x3e7c>
   14c18:	clz	r3, r0
   14c1c:	clz	r2, r1
   14c20:	sub	r3, r2, r3
   14c24:	rsbs	r3, r3, #31
   14c28:	addne	r3, r3, r3, lsl #1
   14c2c:	mov	r2, #0
   14c30:	addne	pc, pc, r3, lsl #2
   14c34:	nop			; (mov r0, r0)
   14c38:	cmp	r0, r1, lsl #31
   14c3c:	adc	r2, r2, r2
   14c40:	subcs	r0, r0, r1, lsl #31
   14c44:	cmp	r0, r1, lsl #30
   14c48:	adc	r2, r2, r2
   14c4c:	subcs	r0, r0, r1, lsl #30
   14c50:	cmp	r0, r1, lsl #29
   14c54:	adc	r2, r2, r2
   14c58:	subcs	r0, r0, r1, lsl #29
   14c5c:	cmp	r0, r1, lsl #28
   14c60:	adc	r2, r2, r2
   14c64:	subcs	r0, r0, r1, lsl #28
   14c68:	cmp	r0, r1, lsl #27
   14c6c:	adc	r2, r2, r2
   14c70:	subcs	r0, r0, r1, lsl #27
   14c74:	cmp	r0, r1, lsl #26
   14c78:	adc	r2, r2, r2
   14c7c:	subcs	r0, r0, r1, lsl #26
   14c80:	cmp	r0, r1, lsl #25
   14c84:	adc	r2, r2, r2
   14c88:	subcs	r0, r0, r1, lsl #25
   14c8c:	cmp	r0, r1, lsl #24
   14c90:	adc	r2, r2, r2
   14c94:	subcs	r0, r0, r1, lsl #24
   14c98:	cmp	r0, r1, lsl #23
   14c9c:	adc	r2, r2, r2
   14ca0:	subcs	r0, r0, r1, lsl #23
   14ca4:	cmp	r0, r1, lsl #22
   14ca8:	adc	r2, r2, r2
   14cac:	subcs	r0, r0, r1, lsl #22
   14cb0:	cmp	r0, r1, lsl #21
   14cb4:	adc	r2, r2, r2
   14cb8:	subcs	r0, r0, r1, lsl #21
   14cbc:	cmp	r0, r1, lsl #20
   14cc0:	adc	r2, r2, r2
   14cc4:	subcs	r0, r0, r1, lsl #20
   14cc8:	cmp	r0, r1, lsl #19
   14ccc:	adc	r2, r2, r2
   14cd0:	subcs	r0, r0, r1, lsl #19
   14cd4:	cmp	r0, r1, lsl #18
   14cd8:	adc	r2, r2, r2
   14cdc:	subcs	r0, r0, r1, lsl #18
   14ce0:	cmp	r0, r1, lsl #17
   14ce4:	adc	r2, r2, r2
   14ce8:	subcs	r0, r0, r1, lsl #17
   14cec:	cmp	r0, r1, lsl #16
   14cf0:	adc	r2, r2, r2
   14cf4:	subcs	r0, r0, r1, lsl #16
   14cf8:	cmp	r0, r1, lsl #15
   14cfc:	adc	r2, r2, r2
   14d00:	subcs	r0, r0, r1, lsl #15
   14d04:	cmp	r0, r1, lsl #14
   14d08:	adc	r2, r2, r2
   14d0c:	subcs	r0, r0, r1, lsl #14
   14d10:	cmp	r0, r1, lsl #13
   14d14:	adc	r2, r2, r2
   14d18:	subcs	r0, r0, r1, lsl #13
   14d1c:	cmp	r0, r1, lsl #12
   14d20:	adc	r2, r2, r2
   14d24:	subcs	r0, r0, r1, lsl #12
   14d28:	cmp	r0, r1, lsl #11
   14d2c:	adc	r2, r2, r2
   14d30:	subcs	r0, r0, r1, lsl #11
   14d34:	cmp	r0, r1, lsl #10
   14d38:	adc	r2, r2, r2
   14d3c:	subcs	r0, r0, r1, lsl #10
   14d40:	cmp	r0, r1, lsl #9
   14d44:	adc	r2, r2, r2
   14d48:	subcs	r0, r0, r1, lsl #9
   14d4c:	cmp	r0, r1, lsl #8
   14d50:	adc	r2, r2, r2
   14d54:	subcs	r0, r0, r1, lsl #8
   14d58:	cmp	r0, r1, lsl #7
   14d5c:	adc	r2, r2, r2
   14d60:	subcs	r0, r0, r1, lsl #7
   14d64:	cmp	r0, r1, lsl #6
   14d68:	adc	r2, r2, r2
   14d6c:	subcs	r0, r0, r1, lsl #6
   14d70:	cmp	r0, r1, lsl #5
   14d74:	adc	r2, r2, r2
   14d78:	subcs	r0, r0, r1, lsl #5
   14d7c:	cmp	r0, r1, lsl #4
   14d80:	adc	r2, r2, r2
   14d84:	subcs	r0, r0, r1, lsl #4
   14d88:	cmp	r0, r1, lsl #3
   14d8c:	adc	r2, r2, r2
   14d90:	subcs	r0, r0, r1, lsl #3
   14d94:	cmp	r0, r1, lsl #2
   14d98:	adc	r2, r2, r2
   14d9c:	subcs	r0, r0, r1, lsl #2
   14da0:	cmp	r0, r1, lsl #1
   14da4:	adc	r2, r2, r2
   14da8:	subcs	r0, r0, r1, lsl #1
   14dac:	cmp	r0, r1
   14db0:	adc	r2, r2, r2
   14db4:	subcs	r0, r0, r1
   14db8:	mov	r0, r2
   14dbc:	bx	lr
   14dc0:	moveq	r0, #1
   14dc4:	movne	r0, #0
   14dc8:	bx	lr
   14dcc:	clz	r2, r1
   14dd0:	rsb	r2, r2, #31
   14dd4:	lsr	r0, r0, r2
   14dd8:	bx	lr
   14ddc:	cmp	r0, #0
   14de0:	mvnne	r0, #0
   14de4:	b	14e08 <close@plt+0x3eb8>
   14de8:	cmp	r1, #0
   14dec:	beq	14ddc <close@plt+0x3e8c>
   14df0:	push	{r0, r1, lr}
   14df4:	bl	14bfc <close@plt+0x3cac>
   14df8:	pop	{r1, r2, lr}
   14dfc:	mul	r3, r2, r0
   14e00:	sub	r1, r1, r3
   14e04:	bx	lr
   14e08:	push	{r1, lr}
   14e0c:	mov	r0, #8
   14e10:	bl	10cf8 <raise@plt>
   14e14:	pop	{r1, pc}
   14e18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e1c:	mov	r7, r0
   14e20:	ldr	r6, [pc, #72]	; 14e70 <close@plt+0x3f20>
   14e24:	ldr	r5, [pc, #72]	; 14e74 <close@plt+0x3f24>
   14e28:	add	r6, pc, r6
   14e2c:	add	r5, pc, r5
   14e30:	sub	r6, r6, r5
   14e34:	mov	r8, r1
   14e38:	mov	r9, r2
   14e3c:	bl	10cc0 <calloc@plt-0x20>
   14e40:	asrs	r6, r6, #2
   14e44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e48:	mov	r4, #0
   14e4c:	add	r4, r4, #1
   14e50:	ldr	r3, [r5], #4
   14e54:	mov	r2, r9
   14e58:	mov	r1, r8
   14e5c:	mov	r0, r7
   14e60:	blx	r3
   14e64:	cmp	r6, r4
   14e68:	bne	14e4c <close@plt+0x3efc>
   14e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e70:	ldrdeq	r1, [r1], -r4
   14e74:	andeq	r1, r1, ip, asr #1
   14e78:	bx	lr
   14e7c:	ldr	r3, [pc, #12]	; 14e90 <close@plt+0x3f40>
   14e80:	mov	r1, #0
   14e84:	add	r3, pc, r3
   14e88:	ldr	r2, [r3]
   14e8c:	b	10e90 <__cxa_atexit@plt>
   14e90:	andeq	r1, r1, ip, asr r2

Disassembly of section .fini:

00014e94 <.fini>:
   14e94:	push	{r3, lr}
   14e98:	pop	{r3, pc}
