
raspbian-preinstalled/deallocvt:     file format elf32-littlearm


Disassembly of section .init:

00010660 <.init>:
   10660:	push	{r3, lr}
   10664:	bl	10a5c <close@plt+0x2e0>
   10668:	pop	{r3, pc}

Disassembly of section .plt:

0001066c <strcmp@plt-0x14>:
   1066c:	push	{lr}		; (str lr, [sp, #-4]!)
   10670:	ldr	lr, [pc, #4]	; 1067c <strcmp@plt-0x4>
   10674:	add	lr, pc, lr
   10678:	ldr	pc, [lr, #8]!
   1067c:	andeq	r1, r1, r4, lsl #19

00010680 <strcmp@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #69632	; 0x11000
   10688:	ldr	pc, [ip, #2436]!	; 0x984

0001068c <strtol@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #69632	; 0x11000
   10694:	ldr	pc, [ip, #2428]!	; 0x97c

00010698 <dcgettext@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2420]!	; 0x974

000106a4 <__stack_chk_fail@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2412]!	; 0x96c

000106b0 <textdomain@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2404]!	; 0x964

000106bc <ioctl@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2396]!	; 0x95c

000106c8 <__libc_start_main@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2388]!	; 0x954

000106d4 <strerror@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2380]!	; 0x94c

000106e0 <__vfprintf_chk@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2372]!	; 0x944

000106ec <__gmon_start__@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2364]!	; 0x93c

000106f8 <open@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2356]!	; 0x934

00010704 <__ctype_b_loc@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2348]!	; 0x92c

00010710 <exit@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2340]!	; 0x924

0001071c <__errno_location@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2332]!	; 0x91c

00010728 <__printf_chk@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2324]!	; 0x914

00010734 <__fprintf_chk@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2316]!	; 0x90c

00010740 <setlocale@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2308]!	; 0x904

0001074c <strrchr@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2300]!	; 0x8fc

00010758 <bindtextdomain@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2292]!	; 0x8f4

00010764 <isatty@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2284]!	; 0x8ec

00010770 <abort@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2276]!	; 0x8e4

0001077c <close@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2268]!	; 0x8dc

Disassembly of section .text:

00010788 <.text>:
   10788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1078c:	subs	r4, r0, #0
   10790:	sub	sp, sp, #12
   10794:	ble	1084c <close@plt+0xd0>
   10798:	ldr	r7, [r1]
   1079c:	mov	r5, r1
   107a0:	mov	r0, r7
   107a4:	mov	r1, #47	; 0x2f
   107a8:	bl	1074c <strrchr@plt>
   107ac:	ldr	r6, [pc, #560]	; 109e4 <close@plt+0x268>
   107b0:	ldr	r1, [pc, #560]	; 109e8 <close@plt+0x26c>
   107b4:	cmp	r0, #0
   107b8:	addne	r7, r0, #1
   107bc:	mov	r0, #6
   107c0:	str	r7, [r6]
   107c4:	bl	10740 <setlocale@plt>
   107c8:	ldr	r1, [pc, #540]	; 109ec <close@plt+0x270>
   107cc:	ldr	r0, [pc, #540]	; 109f0 <close@plt+0x274>
   107d0:	bl	10758 <bindtextdomain@plt>
   107d4:	ldr	r0, [pc, #532]	; 109f0 <close@plt+0x274>
   107d8:	bl	106b0 <textdomain@plt>
   107dc:	cmp	r4, #2
   107e0:	beq	10858 <close@plt+0xdc>
   107e4:	cmp	r4, #1
   107e8:	beq	10940 <close@plt+0x1c4>
   107ec:	bl	10704 <__ctype_b_loc@plt>
   107f0:	mov	r1, r5
   107f4:	mov	r2, #1
   107f8:	ldr	ip, [r0]
   107fc:	b	1080c <close@plt+0x90>
   10800:	add	r2, r2, #1
   10804:	cmp	r4, r2
   10808:	ble	10894 <close@plt+0x118>
   1080c:	ldr	r3, [r1, #4]!
   10810:	ldrb	r3, [r3]
   10814:	lsl	r3, r3, #1
   10818:	ldrh	r0, [ip, r3]
   1081c:	ands	r0, r0, #2048	; 0x800
   10820:	bne	10800 <close@plt+0x84>
   10824:	ldr	r3, [pc, #456]	; 109f4 <close@plt+0x278>
   10828:	mov	r2, #5
   1082c:	ldr	r1, [pc, #452]	; 109f8 <close@plt+0x27c>
   10830:	ldr	r4, [r3]
   10834:	bl	10698 <dcgettext@plt>
   10838:	ldr	r3, [r6]
   1083c:	mov	r1, #1
   10840:	mov	r2, r0
   10844:	mov	r0, r4
   10848:	bl	10734 <__fprintf_chk@plt>
   1084c:	mov	r0, #1
   10850:	add	sp, sp, #12
   10854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10858:	ldr	r1, [pc, #412]	; 109fc <close@plt+0x280>
   1085c:	ldr	r0, [r5, #4]
   10860:	bl	10680 <strcmp@plt>
   10864:	subs	r7, r0, #0
   10868:	bne	107ec <close@plt+0x70>
   1086c:	mov	r2, #5
   10870:	ldr	r1, [pc, #392]	; 10a00 <close@plt+0x284>
   10874:	bl	10698 <dcgettext@plt>
   10878:	ldr	r2, [r6]
   1087c:	ldr	r3, [pc, #384]	; 10a04 <close@plt+0x288>
   10880:	mov	r1, r0
   10884:	mov	r0, #1
   10888:	bl	10728 <__printf_chk@plt>
   1088c:	mov	r0, r7
   10890:	bl	10710 <exit@plt>
   10894:	mov	r0, #0
   10898:	bl	10bd4 <close@plt+0x458>
   1089c:	subs	r7, r0, #0
   108a0:	blt	109b8 <close@plt+0x23c>
   108a4:	ldr	r8, [pc, #348]	; 10a08 <close@plt+0x28c>
   108a8:	ldr	sl, [pc, #348]	; 10a0c <close@plt+0x290>
   108ac:	ldr	r9, [pc, #348]	; 10a10 <close@plt+0x294>
   108b0:	mov	r6, #1
   108b4:	b	108e4 <close@plt+0x168>
   108b8:	cmp	fp, #1
   108bc:	beq	1091c <close@plt+0x1a0>
   108c0:	mov	r2, fp
   108c4:	mov	r1, r8
   108c8:	mov	r0, r7
   108cc:	bl	106bc <ioctl@plt>
   108d0:	cmp	r0, #0
   108d4:	bne	10984 <close@plt+0x208>
   108d8:	add	r6, r6, #1
   108dc:	cmp	r4, r6
   108e0:	ble	1097c <close@plt+0x200>
   108e4:	mov	r2, #10
   108e8:	mov	r1, #0
   108ec:	ldr	r0, [r5, #4]!
   108f0:	bl	1068c <strtol@plt>
   108f4:	subs	fp, r0, #0
   108f8:	bne	108b8 <close@plt+0x13c>
   108fc:	mov	r2, #5
   10900:	ldr	r1, [pc, #268]	; 10a14 <close@plt+0x298>
   10904:	bl	10698 <dcgettext@plt>
   10908:	mov	r1, fp
   1090c:	mov	r2, r0
   10910:	mov	r0, #1
   10914:	bl	10d98 <close@plt+0x61c>
   10918:	b	108d8 <close@plt+0x15c>
   1091c:	mov	r1, r9
   10920:	mov	r2, #5
   10924:	mov	r0, #0
   10928:	bl	10698 <dcgettext@plt>
   1092c:	mov	r1, #0
   10930:	mov	r2, r0
   10934:	mov	r0, fp
   10938:	bl	10d98 <close@plt+0x61c>
   1093c:	b	108d8 <close@plt+0x15c>
   10940:	mov	r0, #0
   10944:	bl	10bd4 <close@plt+0x458>
   10948:	subs	r7, r0, #0
   1094c:	blt	109b8 <close@plt+0x23c>
   10950:	mov	r0, r7
   10954:	mov	r2, #0
   10958:	ldr	r1, [pc, #168]	; 10a08 <close@plt+0x28c>
   1095c:	bl	106bc <ioctl@plt>
   10960:	cmp	r0, #0
   10964:	beq	1097c <close@plt+0x200>
   10968:	bl	1071c <__errno_location@plt>
   1096c:	ldr	r2, [pc, #164]	; 10a18 <close@plt+0x29c>
   10970:	ldr	r1, [r0]
   10974:	mov	r0, #1
   10978:	bl	10d98 <close@plt+0x61c>
   1097c:	mov	r0, #0
   10980:	bl	10710 <exit@plt>
   10984:	bl	1071c <__errno_location@plt>
   10988:	mov	r1, sl
   1098c:	mov	r2, #5
   10990:	ldr	r3, [r0]
   10994:	mov	r0, #0
   10998:	str	r3, [sp, #4]
   1099c:	bl	10698 <dcgettext@plt>
   109a0:	mov	r3, fp
   109a4:	ldr	r1, [sp, #4]
   109a8:	mov	r2, r0
   109ac:	mov	r0, #1
   109b0:	bl	10d98 <close@plt+0x61c>
   109b4:	b	108d8 <close@plt+0x15c>
   109b8:	mov	r2, #5
   109bc:	ldr	r1, [pc, #88]	; 10a1c <close@plt+0x2a0>
   109c0:	mov	r0, #0
   109c4:	bl	10698 <dcgettext@plt>
   109c8:	mov	r1, #0
   109cc:	mov	r2, r0
   109d0:	mov	r0, #1
   109d4:	bl	10d98 <close@plt+0x61c>
   109d8:	cmp	r4, #1
   109dc:	beq	10950 <close@plt+0x1d4>
   109e0:	b	108a4 <close@plt+0x128>
   109e4:	andeq	r2, r2, r8, ror r0
   109e8:	andeq	r1, r1, r8, lsr r0
   109ec:	andeq	r0, r1, r8, lsr #29
   109f0:			; <UNDEFINED> instruction: 0x00010ebc
   109f4:	andeq	r2, r2, r0, ror r0
   109f8:	ldrdeq	r0, [r1], -ip
   109fc:	andeq	r0, r1, r0, asr #29
   10a00:	andeq	r0, r1, r4, asr #29
   10a04:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a08:	andeq	r5, r0, r8, lsl #12
   10a0c:	andeq	r0, r1, r8, lsl #31
   10a10:	andeq	r0, r1, r8, asr pc
   10a14:	andeq	r0, r1, r0, asr #30
   10a18:	andeq	r0, r1, r8, lsr #30
   10a1c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a20:	mov	fp, #0
   10a24:	mov	lr, #0
   10a28:	pop	{r1}		; (ldr r1, [sp], #4)
   10a2c:	mov	r2, sp
   10a30:	push	{r2}		; (str r2, [sp, #-4]!)
   10a34:	push	{r0}		; (str r0, [sp, #-4]!)
   10a38:	ldr	ip, [pc, #16]	; 10a50 <close@plt+0x2d4>
   10a3c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a40:	ldr	r0, [pc, #12]	; 10a54 <close@plt+0x2d8>
   10a44:	ldr	r3, [pc, #12]	; 10a58 <close@plt+0x2dc>
   10a48:	bl	106c8 <__libc_start_main@plt>
   10a4c:	bl	10770 <abort@plt>
   10a50:	muleq	r1, r8, lr
   10a54:	andeq	r0, r1, r8, lsl #15
   10a58:	andeq	r0, r1, r8, lsr lr
   10a5c:	ldr	r3, [pc, #20]	; 10a78 <close@plt+0x2fc>
   10a60:	ldr	r2, [pc, #20]	; 10a7c <close@plt+0x300>
   10a64:	add	r3, pc, r3
   10a68:	ldr	r2, [r3, r2]
   10a6c:	cmp	r2, #0
   10a70:	bxeq	lr
   10a74:	b	106ec <__gmon_start__@plt>
   10a78:	muleq	r1, r4, r5
   10a7c:	andeq	r0, r0, r4, rrx
   10a80:	ldr	r0, [pc, #24]	; 10aa0 <close@plt+0x324>
   10a84:	ldr	r3, [pc, #24]	; 10aa4 <close@plt+0x328>
   10a88:	cmp	r3, r0
   10a8c:	bxeq	lr
   10a90:	ldr	r3, [pc, #16]	; 10aa8 <close@plt+0x32c>
   10a94:	cmp	r3, #0
   10a98:	bxeq	lr
   10a9c:	bx	r3
   10aa0:	andeq	r2, r2, r0, ror r0
   10aa4:	andeq	r2, r2, r0, ror r0
   10aa8:	andeq	r0, r0, r0
   10aac:	ldr	r0, [pc, #36]	; 10ad8 <close@plt+0x35c>
   10ab0:	ldr	r1, [pc, #36]	; 10adc <close@plt+0x360>
   10ab4:	sub	r1, r1, r0
   10ab8:	asr	r1, r1, #2
   10abc:	add	r1, r1, r1, lsr #31
   10ac0:	asrs	r1, r1, #1
   10ac4:	bxeq	lr
   10ac8:	ldr	r3, [pc, #16]	; 10ae0 <close@plt+0x364>
   10acc:	cmp	r3, #0
   10ad0:	bxeq	lr
   10ad4:	bx	r3
   10ad8:	andeq	r2, r2, r0, ror r0
   10adc:	andeq	r2, r2, r0, ror r0
   10ae0:	andeq	r0, r0, r0
   10ae4:	push	{r4, lr}
   10ae8:	ldr	r4, [pc, #24]	; 10b08 <close@plt+0x38c>
   10aec:	ldrb	r3, [r4]
   10af0:	cmp	r3, #0
   10af4:	popne	{r4, pc}
   10af8:	bl	10a80 <close@plt+0x304>
   10afc:	mov	r3, #1
   10b00:	strb	r3, [r4]
   10b04:	pop	{r4, pc}
   10b08:	andeq	r2, r2, r4, ror r0
   10b0c:	b	10aac <close@plt+0x330>
   10b10:	push	{r4, lr}
   10b14:	mov	r1, #2
   10b18:	mov	r4, r0
   10b1c:	bl	106f8 <open@plt>
   10b20:	cmp	r0, #0
   10b24:	popge	{r4, pc}
   10b28:	mov	r1, #1
   10b2c:	mov	r0, r4
   10b30:	bl	106f8 <open@plt>
   10b34:	cmp	r0, #0
   10b38:	popge	{r4, pc}
   10b3c:	mov	r0, r4
   10b40:	mov	r1, #0
   10b44:	bl	106f8 <open@plt>
   10b48:	orr	r0, r0, r0, asr #31
   10b4c:	pop	{r4, pc}
   10b50:	push	{r4, r5, lr}
   10b54:	sub	sp, sp, #12
   10b58:	ldr	r4, [pc, #108]	; 10bcc <close@plt+0x450>
   10b5c:	mov	r3, #0
   10b60:	strb	r3, [sp, #3]
   10b64:	ldr	r3, [r4]
   10b68:	mov	r5, r0
   10b6c:	str	r3, [sp, #4]
   10b70:	bl	10764 <isatty@plt>
   10b74:	cmp	r0, #0
   10b78:	bne	10b98 <close@plt+0x41c>
   10b7c:	mov	r0, #0
   10b80:	ldr	r2, [sp, #4]
   10b84:	ldr	r3, [r4]
   10b88:	cmp	r2, r3
   10b8c:	bne	10bc8 <close@plt+0x44c>
   10b90:	add	sp, sp, #12
   10b94:	pop	{r4, r5, pc}
   10b98:	mov	r0, r5
   10b9c:	add	r2, sp, #3
   10ba0:	ldr	r1, [pc, #40]	; 10bd0 <close@plt+0x454>
   10ba4:	bl	106bc <ioctl@plt>
   10ba8:	cmp	r0, #0
   10bac:	bne	10b7c <close@plt+0x400>
   10bb0:	ldrb	r0, [sp, #3]
   10bb4:	sub	r0, r0, #1
   10bb8:	cmp	r0, #1
   10bbc:	movhi	r0, #0
   10bc0:	movls	r0, #1
   10bc4:	b	10b80 <close@plt+0x404>
   10bc8:	bl	106a4 <__stack_chk_fail@plt>
   10bcc:	andeq	r1, r2, r8, lsl #30
   10bd0:	andeq	r4, r0, r3, lsr fp
   10bd4:	push	{r4, r5, r6, lr}
   10bd8:	subs	r5, r0, #0
   10bdc:	beq	10c00 <close@plt+0x484>
   10be0:	bl	10b10 <close@plt+0x394>
   10be4:	subs	r4, r0, #0
   10be8:	blt	10c98 <close@plt+0x51c>
   10bec:	bl	10b50 <close@plt+0x3d4>
   10bf0:	cmp	r0, #0
   10bf4:	beq	10c90 <close@plt+0x514>
   10bf8:	mov	r0, r4
   10bfc:	pop	{r4, r5, r6, pc}
   10c00:	ldr	r5, [pc, #196]	; 10ccc <close@plt+0x550>
   10c04:	ldr	r0, [pc, #196]	; 10cd0 <close@plt+0x554>
   10c08:	b	10c18 <close@plt+0x49c>
   10c0c:	ldr	r0, [r5], #4
   10c10:	cmp	r0, #0
   10c14:	beq	10c44 <close@plt+0x4c8>
   10c18:	bl	10b10 <close@plt+0x394>
   10c1c:	subs	r4, r0, #0
   10c20:	blt	10c0c <close@plt+0x490>
   10c24:	bl	10b50 <close@plt+0x3d4>
   10c28:	cmp	r0, #0
   10c2c:	bne	10bf8 <close@plt+0x47c>
   10c30:	mov	r0, r4
   10c34:	bl	1077c <close@plt>
   10c38:	ldr	r0, [r5], #4
   10c3c:	cmp	r0, #0
   10c40:	bne	10c18 <close@plt+0x49c>
   10c44:	mov	r4, r0
   10c48:	mov	r0, r4
   10c4c:	bl	10b50 <close@plt+0x3d4>
   10c50:	cmp	r0, #0
   10c54:	bne	10bf8 <close@plt+0x47c>
   10c58:	add	r4, r4, #1
   10c5c:	cmp	r4, #3
   10c60:	bne	10c48 <close@plt+0x4cc>
   10c64:	ldr	r3, [pc, #104]	; 10cd4 <close@plt+0x558>
   10c68:	mov	r2, #5
   10c6c:	ldr	r1, [pc, #100]	; 10cd8 <close@plt+0x55c>
   10c70:	ldr	r4, [r3]
   10c74:	bl	10698 <dcgettext@plt>
   10c78:	mov	r1, #1
   10c7c:	mov	r2, r0
   10c80:	mov	r0, r4
   10c84:	bl	10734 <__fprintf_chk@plt>
   10c88:	mov	r0, #1
   10c8c:	bl	10710 <exit@plt>
   10c90:	mov	r0, r4
   10c94:	bl	1077c <close@plt>
   10c98:	ldr	r3, [pc, #52]	; 10cd4 <close@plt+0x558>
   10c9c:	mov	r2, #5
   10ca0:	ldr	r1, [pc, #52]	; 10cdc <close@plt+0x560>
   10ca4:	mov	r0, #0
   10ca8:	ldr	r4, [r3]
   10cac:	bl	10698 <dcgettext@plt>
   10cb0:	mov	r3, r5
   10cb4:	mov	r1, #1
   10cb8:	mov	r2, r0
   10cbc:	mov	r0, r4
   10cc0:	bl	10734 <__fprintf_chk@plt>
   10cc4:	mov	r0, #1
   10cc8:	bl	10710 <exit@plt>
   10ccc:	andeq	r0, r1, r4, asr #31
   10cd0:	ldrdeq	r0, [r1], -ip
   10cd4:	andeq	r2, r2, r0, ror r0
   10cd8:	andeq	r1, r1, r0
   10cdc:	andeq	r0, r1, ip, ror #31
   10ce0:	push	{r1, r2, r3}
   10ce4:	push	{r4, r5, r6, r7, lr}
   10ce8:	sub	sp, sp, #8
   10cec:	ldr	r5, [pc, #144]	; 10d84 <close@plt+0x608>
   10cf0:	ldr	r4, [pc, #144]	; 10d88 <close@plt+0x60c>
   10cf4:	ldr	r3, [pc, #144]	; 10d8c <close@plt+0x610>
   10cf8:	ldr	r1, [r5]
   10cfc:	ldr	r7, [sp, #28]
   10d00:	add	ip, sp, #32
   10d04:	mov	r6, r0
   10d08:	ldr	r3, [r3]
   10d0c:	ldr	r2, [pc, #124]	; 10d90 <close@plt+0x614>
   10d10:	str	r1, [sp, #4]
   10d14:	ldr	r0, [r4]
   10d18:	mov	r1, #1
   10d1c:	str	ip, [sp]
   10d20:	bl	10734 <__fprintf_chk@plt>
   10d24:	mov	r2, r7
   10d28:	ldr	r0, [r4]
   10d2c:	ldr	r3, [sp]
   10d30:	mov	r1, #1
   10d34:	bl	106e0 <__vfprintf_chk@plt>
   10d38:	cmp	r6, #0
   10d3c:	ble	10d60 <close@plt+0x5e4>
   10d40:	mov	r0, r6
   10d44:	ldr	r4, [r4]
   10d48:	bl	106d4 <strerror@plt>
   10d4c:	ldr	r2, [pc, #64]	; 10d94 <close@plt+0x618>
   10d50:	mov	r1, #1
   10d54:	mov	r3, r0
   10d58:	mov	r0, r4
   10d5c:	bl	10734 <__fprintf_chk@plt>
   10d60:	ldr	r2, [sp, #4]
   10d64:	ldr	r3, [r5]
   10d68:	cmp	r2, r3
   10d6c:	bne	10d80 <close@plt+0x604>
   10d70:	add	sp, sp, #8
   10d74:	pop	{r4, r5, r6, r7, lr}
   10d78:	add	sp, sp, #12
   10d7c:	bx	lr
   10d80:	bl	106a4 <__stack_chk_fail@plt>
   10d84:	andeq	r1, r2, r8, lsl #30
   10d88:	andeq	r2, r2, r0, ror r0
   10d8c:	andeq	r2, r2, r8, ror r0
   10d90:	andeq	r1, r1, ip, ror r0
   10d94:	andeq	r1, r1, r4, lsl #1
   10d98:	push	{r2, r3}
   10d9c:	mov	r5, r1
   10da0:	ldr	r2, [pc, #124]	; 10e24 <close@plt+0x6a8>
   10da4:	push	{r7, lr}
   10da8:	sub	sp, sp, #8
   10dac:	ldr	r4, [pc, #116]	; 10e28 <close@plt+0x6ac>
   10db0:	ldr	r3, [pc, #116]	; 10e2c <close@plt+0x6b0>
   10db4:	ldr	lr, [r2]
   10db8:	ldr	r7, [sp, #16]
   10dbc:	add	ip, sp, #20
   10dc0:	ldr	r3, [r3]
   10dc4:	ldr	r2, [pc, #100]	; 10e30 <close@plt+0x6b4>
   10dc8:	mov	r1, #1
   10dcc:	mov	r6, r0
   10dd0:	ldr	r0, [r4]
   10dd4:	str	lr, [sp, #4]
   10dd8:	str	ip, [sp]
   10ddc:	bl	10734 <__fprintf_chk@plt>
   10de0:	mov	r2, r7
   10de4:	ldr	r0, [r4]
   10de8:	ldr	r3, [sp]
   10dec:	mov	r1, #1
   10df0:	bl	106e0 <__vfprintf_chk@plt>
   10df4:	cmp	r5, #0
   10df8:	ble	10e1c <close@plt+0x6a0>
   10dfc:	mov	r0, r5
   10e00:	ldr	r4, [r4]
   10e04:	bl	106d4 <strerror@plt>
   10e08:	ldr	r2, [pc, #36]	; 10e34 <close@plt+0x6b8>
   10e0c:	mov	r1, #1
   10e10:	mov	r3, r0
   10e14:	mov	r0, r4
   10e18:	bl	10734 <__fprintf_chk@plt>
   10e1c:	mov	r0, r6
   10e20:	bl	10710 <exit@plt>
   10e24:	andeq	r1, r2, r8, lsl #30
   10e28:	andeq	r2, r2, r0, ror r0
   10e2c:	andeq	r2, r2, r8, ror r0
   10e30:	andeq	r1, r1, ip, ror r0
   10e34:	andeq	r1, r1, r4, lsl #1
   10e38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e3c:	mov	r7, r0
   10e40:	ldr	r6, [pc, #72]	; 10e90 <close@plt+0x714>
   10e44:	ldr	r5, [pc, #72]	; 10e94 <close@plt+0x718>
   10e48:	add	r6, pc, r6
   10e4c:	add	r5, pc, r5
   10e50:	sub	r6, r6, r5
   10e54:	mov	r8, r1
   10e58:	mov	r9, r2
   10e5c:	bl	10660 <strcmp@plt-0x20>
   10e60:	asrs	r6, r6, #2
   10e64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e68:	mov	r4, #0
   10e6c:	add	r4, r4, #1
   10e70:	ldr	r3, [r5], #4
   10e74:	mov	r2, r9
   10e78:	mov	r1, r8
   10e7c:	mov	r0, r7
   10e80:	blx	r3
   10e84:	cmp	r6, r4
   10e88:	bne	10e6c <close@plt+0x6f0>
   10e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e90:	strheq	r1, [r1], -r4
   10e94:	andeq	r1, r1, ip, lsr #1
   10e98:	bx	lr

Disassembly of section .fini:

00010e9c <.fini>:
   10e9c:	push	{r3, lr}
   10ea0:	pop	{r3, pc}
