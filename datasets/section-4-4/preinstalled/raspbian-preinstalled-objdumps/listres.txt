
raspbian-preinstalled/listres:     file format elf32-littlearm


Disassembly of section .init:

00010828 <_init@@Base>:
   10828:	push	{r3, lr}
   1082c:	bl	10c54 <abort@plt+0x358>
   10830:	pop	{r3, pc}

Disassembly of section .plt:

00010834 <XtGetApplicationResources@plt-0x14>:
   10834:	push	{lr}		; (str lr, [sp, #-4]!)
   10838:	ldr	lr, [pc, #4]	; 10844 <_init@@Base+0x1c>
   1083c:	add	lr, pc, lr
   10840:	ldr	pc, [lr, #8]!
   10844:			; <UNDEFINED> instruction: 0x000127bc

00010848 <XtGetApplicationResources@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #1980]!	; 0x7bc

00010854 <XtCreateWidget@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #1972]!	; 0x7b4

00010860 <XtAppInitialize@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #73728	; 0x12000
   10868:	ldr	pc, [ip, #1964]!	; 0x7ac

0001086c <_IO_putc@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #1956]!	; 0x7a4

00010878 <XmuWnInitializeNodes@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #1948]!	; 0x79c

00010884 <__libc_start_main@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #1940]!	; 0x794

00010890 <__gmon_start__@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #1932]!	; 0x78c

0001089c <exit@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1924]!	; 0x784

000108a8 <strlen@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #73728	; 0x12000
   108b0:	ldr	pc, [ip, #1916]!	; 0x77c

000108b4 <XmuWnFetchResources@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #73728	; 0x12000
   108bc:	ldr	pc, [ip, #1908]!	; 0x774

000108c0 <XmuWnNameToNode@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #73728	; 0x12000
   108c8:	ldr	pc, [ip, #1900]!	; 0x76c

000108cc <__printf_chk@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1892]!	; 0x764

000108d8 <__fprintf_chk@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #73728	; 0x12000
   108e0:	ldr	pc, [ip, #1884]!	; 0x75c

000108e4 <XtSetLanguageProc@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #73728	; 0x12000
   108ec:	ldr	pc, [ip, #1876]!	; 0x754

000108f0 <strncmp@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #73728	; 0x12000
   108f8:	ldr	pc, [ip, #1868]!	; 0x74c

000108fc <abort@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #73728	; 0x12000
   10904:	ldr	pc, [ip, #1860]!	; 0x744

Disassembly of section .text:

00010908 <.text>:
   10908:	ldr	r3, [pc, #720]	; 10be0 <abort@plt+0x2e4>
   1090c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10910:	sub	sp, sp, #44	; 0x2c
   10914:	ldr	r6, [pc, #712]	; 10be4 <abort@plt+0x2e8>
   10918:	ldr	ip, [r1]
   1091c:	mov	r2, #0
   10920:	ldr	r3, [r3]
   10924:	mov	sl, r1
   10928:	str	r0, [sp, #28]
   1092c:	mov	r1, r2
   10930:	mov	r0, r2
   10934:	mov	r5, r2
   10938:	str	ip, [r6]
   1093c:	str	r3, [sp, #36]	; 0x24
   10940:	bl	108e4 <XtSetLanguageProc@plt>
   10944:	add	r3, sp, #28
   10948:	str	r3, [sp]
   1094c:	ldr	r2, [pc, #660]	; 10be8 <abort@plt+0x2ec>
   10950:	mov	r3, #5
   10954:	ldr	r1, [pc, #656]	; 10bec <abort@plt+0x2f0>
   10958:	str	sl, [sp, #4]
   1095c:	str	r5, [sp, #16]
   10960:	str	r5, [sp, #12]
   10964:	str	r5, [sp, #8]
   10968:	add	r0, sp, #32
   1096c:	bl	10860 <XtAppInitialize@plt>
   10970:	ldr	r3, [pc, #632]	; 10bf0 <abort@plt+0x2f4>
   10974:	str	r5, [sp]
   10978:	ldr	r7, [pc, #628]	; 10bf4 <abort@plt+0x2f8>
   1097c:	ldr	r1, [r3]
   10980:	mov	r3, r5
   10984:	mov	r4, r0
   10988:	mov	r2, r0
   1098c:	ldr	r0, [pc, #612]	; 10bf8 <abort@plt+0x2fc>
   10990:	bl	10854 <XtCreateWidget@plt>
   10994:	mov	r3, #5
   10998:	add	r1, r6, #4
   1099c:	ldr	r2, [pc, #600]	; 10bfc <abort@plt+0x300>
   109a0:	str	r5, [sp, #4]
   109a4:	str	r5, [sp]
   109a8:	mov	r8, r0
   109ac:	mov	r0, r4
   109b0:	ldr	r4, [pc, #584]	; 10c00 <abort@plt+0x304>
   109b4:	bl	10848 <XtGetApplicationResources@plt>
   109b8:	ldr	r1, [r7]
   109bc:	mov	r0, r4
   109c0:	bl	10878 <XmuWnInitializeNodes@plt>
   109c4:	ldr	r3, [sp, #28]
   109c8:	cmp	r3, #1
   109cc:	bne	10aac <abort@plt+0x1b0>
   109d0:	ldrb	r3, [r6, #4]
   109d4:	ldr	r8, [r7]
   109d8:	cmp	r3, r5
   109dc:	beq	10a18 <abort@plt+0x11c>
   109e0:	cmp	r8, #0
   109e4:	bgt	10a00 <abort@plt+0x104>
   109e8:	b	10aa4 <abort@plt+0x1a8>
   109ec:	ldr	r3, [r7]
   109f0:	add	r5, r5, #1
   109f4:	cmp	r5, r3
   109f8:	add	r4, r4, #60	; 0x3c
   109fc:	bge	10aa4 <abort@plt+0x1a8>
   10a00:	ldr	r1, [r4, #8]
   10a04:	cmp	r1, #0
   10a08:	bne	109ec <abort@plt+0xf0>
   10a0c:	mov	r0, r4
   10a10:	bl	10d08 <abort@plt+0x40c>
   10a14:	b	109ec <abort@plt+0xf0>
   10a18:	cmp	r8, r5
   10a1c:	movgt	r5, r3
   10a20:	addgt	r4, r4, #60	; 0x3c
   10a24:	movgt	r6, r5
   10a28:	ble	10aa4 <abort@plt+0x1a8>
   10a2c:	ldr	r0, [r4, #-60]	; 0xffffffc4
   10a30:	bl	108a8 <strlen@plt>
   10a34:	add	r5, r5, #1
   10a38:	add	r4, r4, #60	; 0x3c
   10a3c:	cmp	r6, r0
   10a40:	movlt	r6, r0
   10a44:	cmp	r5, r8
   10a48:	bne	10a2c <abort@plt+0x130>
   10a4c:	ldr	r4, [pc, #428]	; 10c00 <abort@plt+0x304>
   10a50:	ldr	r9, [pc, #428]	; 10c04 <abort@plt+0x308>
   10a54:	ldr	r8, [pc, #428]	; 10c08 <abort@plt+0x30c>
   10a58:	mov	r5, #0
   10a5c:	ldr	r3, [r4]
   10a60:	mov	r2, r6
   10a64:	mov	r1, r8
   10a68:	mov	r0, #1
   10a6c:	bl	108cc <__printf_chk@plt>
   10a70:	mov	r3, #0
   10a74:	mov	r1, r3
   10a78:	mov	r2, r3
   10a7c:	mov	r0, r4
   10a80:	bl	10da4 <abort@plt+0x4a8>
   10a84:	ldr	r1, [r9]
   10a88:	mov	r0, #10
   10a8c:	bl	1086c <_IO_putc@plt>
   10a90:	ldr	r3, [r7]
   10a94:	add	r5, r5, #1
   10a98:	cmp	r5, r3
   10a9c:	add	r4, r4, #60	; 0x3c
   10aa0:	blt	10a5c <abort@plt+0x160>
   10aa4:	mov	r0, #0
   10aa8:	bl	1089c <exit@plt>
   10aac:	ldr	r2, [r6, #8]
   10ab0:	ldr	r1, [r7]
   10ab4:	mov	r0, r4
   10ab8:	bl	108c0 <XmuWnNameToNode@plt>
   10abc:	ldr	r3, [sp, #28]
   10ac0:	sub	r3, r3, #1
   10ac4:	cmp	r3, #0
   10ac8:	str	r3, [sp, #28]
   10acc:	mov	r9, r0
   10ad0:	ble	10aa4 <abort@plt+0x1a8>
   10ad4:	ldr	r3, [sl, #4]
   10ad8:	ldrb	r2, [r3]
   10adc:	cmp	r2, #45	; 0x2d
   10ae0:	beq	10b70 <abort@plt+0x274>
   10ae4:	add	r5, sl, #4
   10ae8:	ldr	fp, [pc, #284]	; 10c0c <abort@plt+0x310>
   10aec:	ldr	sl, [pc, #284]	; 10c10 <abort@plt+0x314>
   10af0:	b	10b38 <abort@plt+0x23c>
   10af4:	ldrb	r2, [r6, #6]
   10af8:	ldrb	r3, [r6, #7]
   10afc:	ldr	r1, [r6, #12]
   10b00:	str	r2, [sp, #4]
   10b04:	str	r3, [sp]
   10b08:	mov	r2, r9
   10b0c:	mov	r3, r8
   10b10:	bl	10e68 <abort@plt+0x56c>
   10b14:	ldr	r3, [sp, #28]
   10b18:	sub	r3, r3, #1
   10b1c:	cmp	r3, #0
   10b20:	str	r3, [sp, #28]
   10b24:	ble	10aa4 <abort@plt+0x1a8>
   10b28:	ldr	r3, [r5, #4]!
   10b2c:	ldrb	r2, [r3]
   10b30:	cmp	r2, #45	; 0x2d
   10b34:	beq	10ba4 <abort@plt+0x2a8>
   10b38:	mov	r2, r3
   10b3c:	ldr	r1, [r7]
   10b40:	mov	r0, r4
   10b44:	bl	108c0 <XmuWnNameToNode@plt>
   10b48:	cmp	r0, #0
   10b4c:	bne	10af4 <abort@plt+0x1f8>
   10b50:	ldr	r2, [r5]
   10b54:	ldr	r3, [r6]
   10b58:	str	r2, [sp]
   10b5c:	mov	r1, #1
   10b60:	mov	r2, sl
   10b64:	ldr	r0, [fp]
   10b68:	bl	108d8 <__fprintf_chk@plt>
   10b6c:	b	10b14 <abort@plt+0x218>
   10b70:	mov	r0, r3
   10b74:	str	r3, [sp, #24]
   10b78:	bl	108a8 <strlen@plt>
   10b7c:	cmp	r0, #1
   10b80:	bls	10ba4 <abort@plt+0x2a8>
   10b84:	ldr	r3, [sp, #24]
   10b88:	mov	r2, r0
   10b8c:	ldr	r1, [pc, #128]	; 10c14 <abort@plt+0x318>
   10b90:	mov	r0, r3
   10b94:	bl	108f0 <strncmp@plt>
   10b98:	subs	r5, r0, #0
   10b9c:	moveq	sl, #60	; 0x3c
   10ba0:	beq	10bcc <abort@plt+0x2d0>
   10ba4:	bl	10e24 <abort@plt+0x528>
   10ba8:	ldrb	r2, [r6, #6]
   10bac:	ldrb	r3, [r6, #7]
   10bb0:	add	r5, r5, #1
   10bb4:	str	r2, [sp, #4]
   10bb8:	str	r3, [sp]
   10bbc:	mov	r2, r9
   10bc0:	mov	r3, r8
   10bc4:	ldr	r1, [r6, #12]
   10bc8:	bl	10e68 <abort@plt+0x56c>
   10bcc:	ldr	r3, [r7]
   10bd0:	mla	r0, sl, r5, r4
   10bd4:	cmp	r3, r5
   10bd8:	bgt	10ba8 <abort@plt+0x2ac>
   10bdc:	b	10aa4 <abort@plt+0x1a8>
   10be0:	muleq	r2, r0, r4
   10be4:	andeq	r3, r2, r4, lsr #22
   10be8:	andeq	r3, r2, ip, asr r0
   10bec:	muleq	r1, r0, r3
   10bf0:	andeq	r3, r2, r4, lsl fp
   10bf4:	andeq	r3, r2, ip, lsl fp
   10bf8:	muleq	r1, r8, r3
   10bfc:	andeq	r3, r2, ip, lsr #1
   10c00:	andeq	r3, r2, r8, lsr r1
   10c04:	andeq	r3, r2, r8, lsl fp
   10c08:	andeq	r1, r1, r0, lsr #7
   10c0c:	andeq	r3, r2, r0, lsl fp
   10c10:			; <UNDEFINED> instruction: 0x000113b0
   10c14:	andeq	r1, r1, r8, lsr #7
   10c18:	mov	fp, #0
   10c1c:	mov	lr, #0
   10c20:	pop	{r1}		; (ldr r1, [sp], #4)
   10c24:	mov	r2, sp
   10c28:	push	{r2}		; (str r2, [sp, #-4]!)
   10c2c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c30:	ldr	ip, [pc, #16]	; 10c48 <abort@plt+0x34c>
   10c34:	push	{ip}		; (str ip, [sp, #-4]!)
   10c38:	ldr	r0, [pc, #12]	; 10c4c <abort@plt+0x350>
   10c3c:	ldr	r3, [pc, #12]	; 10c50 <abort@plt+0x354>
   10c40:	bl	10884 <__libc_start_main@plt>
   10c44:	bl	108fc <abort@plt>
   10c48:	andeq	r1, r1, r4, lsl #3
   10c4c:	andeq	r0, r1, r8, lsl #18
   10c50:	andeq	r1, r1, r4, lsr #2
   10c54:	ldr	r3, [pc, #20]	; 10c70 <abort@plt+0x374>
   10c58:	ldr	r2, [pc, #20]	; 10c74 <abort@plt+0x378>
   10c5c:	add	r3, pc, r3
   10c60:	ldr	r2, [r3, r2]
   10c64:	cmp	r2, #0
   10c68:	bxeq	lr
   10c6c:	b	10890 <__gmon_start__@plt>
   10c70:	muleq	r1, ip, r3
   10c74:	andeq	r0, r0, ip, asr #32
   10c78:	ldr	r0, [pc, #24]	; 10c98 <abort@plt+0x39c>
   10c7c:	ldr	r3, [pc, #24]	; 10c9c <abort@plt+0x3a0>
   10c80:	cmp	r3, r0
   10c84:	bxeq	lr
   10c88:	ldr	r3, [pc, #16]	; 10ca0 <abort@plt+0x3a4>
   10c8c:	cmp	r3, #0
   10c90:	bxeq	lr
   10c94:	bx	r3
   10c98:	andeq	r3, r2, r8, lsr r1
   10c9c:	andeq	r3, r2, r8, lsr r1
   10ca0:	andeq	r0, r0, r0
   10ca4:	ldr	r0, [pc, #36]	; 10cd0 <abort@plt+0x3d4>
   10ca8:	ldr	r1, [pc, #36]	; 10cd4 <abort@plt+0x3d8>
   10cac:	sub	r1, r1, r0
   10cb0:	asr	r1, r1, #2
   10cb4:	add	r1, r1, r1, lsr #31
   10cb8:	asrs	r1, r1, #1
   10cbc:	bxeq	lr
   10cc0:	ldr	r3, [pc, #16]	; 10cd8 <abort@plt+0x3dc>
   10cc4:	cmp	r3, #0
   10cc8:	bxeq	lr
   10ccc:	bx	r3
   10cd0:	andeq	r3, r2, r8, lsr r1
   10cd4:	andeq	r3, r2, r8, lsr r1
   10cd8:	andeq	r0, r0, r0
   10cdc:	push	{r4, lr}
   10ce0:	ldr	r4, [pc, #24]	; 10d00 <abort@plt+0x404>
   10ce4:	ldrb	r3, [r4]
   10ce8:	cmp	r3, #0
   10cec:	popne	{r4, pc}
   10cf0:	bl	10c78 <abort@plt+0x37c>
   10cf4:	mov	r3, #1
   10cf8:	strb	r3, [r4]
   10cfc:	pop	{r4, pc}
   10d00:	andeq	r3, r2, r0, lsr #22
   10d04:	b	10ca4 <abort@plt+0x3a8>
   10d08:	push	{r4, r5, r6, r7, r8, r9, lr}
   10d0c:	subs	r7, r0, #0
   10d10:	sub	sp, sp, #12
   10d14:	beq	10d94 <abort@plt+0x498>
   10d18:	ldr	r5, [pc, #124]	; 10d9c <abort@plt+0x4a0>
   10d1c:	ldr	r9, [pc, #124]	; 10da0 <abort@plt+0x4a4>
   10d20:	mov	r6, r1
   10d24:	add	r8, r1, #1
   10d28:	cmp	r6, #0
   10d2c:	ble	10d58 <abort@plt+0x45c>
   10d30:	mov	r4, #0
   10d34:	ldr	r1, [r5]
   10d38:	mov	r0, #32
   10d3c:	bl	1086c <_IO_putc@plt>
   10d40:	add	r4, r4, #1
   10d44:	ldr	r1, [r5]
   10d48:	mov	r0, #32
   10d4c:	bl	1086c <_IO_putc@plt>
   10d50:	cmp	r4, r6
   10d54:	bne	10d34 <abort@plt+0x438>
   10d58:	ldr	r1, [r7, #4]
   10d5c:	ldr	r3, [r7]
   10d60:	mov	r2, r6
   10d64:	ldr	r0, [r1]
   10d68:	mov	r1, r9
   10d6c:	ldr	ip, [r0, #4]
   10d70:	mov	r0, #1
   10d74:	str	ip, [sp]
   10d78:	bl	108cc <__printf_chk@plt>
   10d7c:	ldr	r0, [r7, #12]
   10d80:	mov	r1, r8
   10d84:	bl	10d08 <abort@plt+0x40c>
   10d88:	ldr	r7, [r7, #16]
   10d8c:	cmp	r7, #0
   10d90:	bne	10d28 <abort@plt+0x42c>
   10d94:	add	sp, sp, #12
   10d98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10d9c:	andeq	r3, r2, r8, lsl fp
   10da0:	muleq	r1, r4, r1
   10da4:	cmp	r0, #0
   10da8:	cmpne	r0, r1
   10dac:	push	{r4, r5, r6, r7, r8, lr}
   10db0:	mov	r4, r0
   10db4:	mov	r5, r2
   10db8:	mov	r7, r3
   10dbc:	bne	10e04 <abort@plt+0x508>
   10dc0:	cmp	r0, #0
   10dc4:	sub	r6, r2, #1
   10dc8:	beq	10dfc <abort@plt+0x500>
   10dcc:	cmp	r7, #0
   10dd0:	ldr	r1, [pc, #64]	; 10e18 <abort@plt+0x51c>
   10dd4:	ldreq	r3, [r4, #4]
   10dd8:	ldrne	r2, [r4]
   10ddc:	mov	r0, #1
   10de0:	ldreq	r3, [r3]
   10de4:	ldreq	r2, [r3, #4]
   10de8:	cmp	r5, #0
   10dec:	ldr	r3, [pc, #40]	; 10e1c <abort@plt+0x520>
   10df0:	movne	r3, r1
   10df4:	ldr	r1, [pc, #36]	; 10e20 <abort@plt+0x524>
   10df8:	bl	108cc <__printf_chk@plt>
   10dfc:	mov	r0, r6
   10e00:	pop	{r4, r5, r6, r7, r8, pc}
   10e04:	add	r2, r2, #1
   10e08:	ldr	r0, [r0, #8]
   10e0c:	bl	10da4 <abort@plt+0x4a8>
   10e10:	mov	r6, r0
   10e14:	b	10dcc <abort@plt+0x4d0>
   10e18:	andeq	r1, r1, r0, lsr #3
   10e1c:	ldrdeq	r1, [r1], -r0
   10e20:	andeq	r1, r1, r4, lsr #3
   10e24:	ldr	r1, [pc, #44]	; 10e58 <abort@plt+0x55c>
   10e28:	ldr	r3, [pc, #44]	; 10e5c <abort@plt+0x560>
   10e2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e30:	sub	sp, sp, #12
   10e34:	ldr	r2, [pc, #36]	; 10e60 <abort@plt+0x564>
   10e38:	ldr	r0, [r1]
   10e3c:	ldr	r3, [r3]
   10e40:	mov	r1, #1
   10e44:	str	r2, [sp]
   10e48:	ldr	r2, [pc, #20]	; 10e64 <abort@plt+0x568>
   10e4c:	bl	108d8 <__fprintf_chk@plt>
   10e50:	mov	r0, #1
   10e54:	bl	1089c <exit@plt>
   10e58:	andeq	r3, r2, r0, lsl fp
   10e5c:	andeq	r3, r2, r4, lsr #22
   10e60:	andeq	r1, r1, ip, asr #3
   10e64:	andeq	r1, r1, ip, lsr #3
   10e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e6c:	sub	sp, sp, #12
   10e70:	ldr	r4, [pc, #636]	; 110f4 <abort@plt+0x7f8>
   10e74:	mov	sl, r1
   10e78:	mov	r1, r3
   10e7c:	mov	r5, r0
   10e80:	mov	r6, r2
   10e84:	ldrd	r8, [sp, #48]	; 0x30
   10e88:	bl	108b4 <XmuWnFetchResources@plt>
   10e8c:	ldr	r3, [r4]
   10e90:	cmp	r3, #0
   10e94:	beq	11034 <abort@plt+0x738>
   10e98:	cmp	r9, #0
   10e9c:	bne	10ff8 <abort@plt+0x6fc>
   10ea0:	ldr	r2, [pc, #592]	; 110f8 <abort@plt+0x7fc>
   10ea4:	ldr	r3, [pc, #592]	; 110fc <abort@plt+0x800>
   10ea8:	ldr	r7, [pc, #592]	; 11100 <abort@plt+0x804>
   10eac:	str	r2, [sp, #4]
   10eb0:	str	r3, [sp]
   10eb4:	ldr	r2, [pc, #584]	; 11104 <abort@plt+0x808>
   10eb8:	ldr	r3, [pc, #584]	; 11108 <abort@plt+0x80c>
   10ebc:	mov	r1, sl
   10ec0:	mov	r0, #1
   10ec4:	bl	108cc <__printf_chk@plt>
   10ec8:	ldr	r1, [r7]
   10ecc:	mov	r0, #10
   10ed0:	bl	1086c <_IO_putc@plt>
   10ed4:	ldr	r2, [pc, #560]	; 1110c <abort@plt+0x810>
   10ed8:	ldr	r1, [pc, #560]	; 11110 <abort@plt+0x814>
   10edc:	ldr	r3, [pc, #560]	; 11114 <abort@plt+0x818>
   10ee0:	str	r1, [sp, #4]
   10ee4:	str	r3, [sp]
   10ee8:	mov	r1, sl
   10eec:	ldr	r3, [pc, #548]	; 11118 <abort@plt+0x81c>
   10ef0:	mov	r0, #1
   10ef4:	bl	108cc <__printf_chk@plt>
   10ef8:	ldr	r1, [r7]
   10efc:	mov	r0, #10
   10f00:	bl	1086c <_IO_putc@plt>
   10f04:	mov	r3, #0
   10f08:	str	r3, [r4]
   10f0c:	ldr	r2, [r5]
   10f10:	ldr	r1, [pc, #516]	; 1111c <abort@plt+0x820>
   10f14:	mov	r0, #1
   10f18:	bl	108cc <__printf_chk@plt>
   10f1c:	mov	r2, #0
   10f20:	mov	r3, r9
   10f24:	mov	r1, r6
   10f28:	mov	r0, r5
   10f2c:	bl	10da4 <abort@plt+0x4a8>
   10f30:	ldr	r1, [r7]
   10f34:	mov	r0, #10
   10f38:	bl	1086c <_IO_putc@plt>
   10f3c:	ldr	r2, [r5, #40]	; 0x28
   10f40:	ldr	r4, [r5, #32]
   10f44:	cmp	r2, #0
   10f48:	ldr	fp, [r5, #36]	; 0x24
   10f4c:	beq	10fd8 <abort@plt+0x6dc>
   10f50:	add	r4, r4, #28
   10f54:	sub	fp, fp, #4
   10f58:	mov	r6, #0
   10f5c:	b	10f78 <abort@plt+0x67c>
   10f60:	cmp	r5, r3
   10f64:	beq	10f84 <abort@plt+0x688>
   10f68:	add	r6, r6, #1
   10f6c:	cmp	r2, r6
   10f70:	add	r4, r4, #28
   10f74:	bls	10fd8 <abort@plt+0x6dc>
   10f78:	cmp	r8, #0
   10f7c:	ldr	r3, [fp, #4]!
   10f80:	beq	10f60 <abort@plt+0x664>
   10f84:	cmp	r9, #0
   10f88:	ldr	r1, [r4, #-20]	; 0xffffffec
   10f8c:	ldreq	r3, [r3, #4]
   10f90:	ldrne	r2, [r3]
   10f94:	mov	r0, #1
   10f98:	ldreq	r3, [r3]
   10f9c:	add	r6, r6, #1
   10fa0:	add	r4, r4, #28
   10fa4:	ldreq	r2, [r3, #4]
   10fa8:	ldr	r3, [r4, #-56]	; 0xffffffc8
   10fac:	str	r1, [sp, #4]
   10fb0:	ldr	r1, [r4, #-52]	; 0xffffffcc
   10fb4:	str	r1, [sp]
   10fb8:	mov	r1, sl
   10fbc:	bl	108cc <__printf_chk@plt>
   10fc0:	ldr	r1, [r7]
   10fc4:	mov	r0, #10
   10fc8:	bl	1086c <_IO_putc@plt>
   10fcc:	ldr	r2, [r5, #40]	; 0x28
   10fd0:	cmp	r2, r6
   10fd4:	bhi	10f78 <abort@plt+0x67c>
   10fd8:	ldr	r3, [r5, #52]	; 0x34
   10fdc:	cmp	r3, #0
   10fe0:	bne	1103c <abort@plt+0x740>
   10fe4:	ldr	r1, [r7]
   10fe8:	mov	r0, #10
   10fec:	add	sp, sp, #12
   10ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff4:	b	1086c <_IO_putc@plt>
   10ff8:	ldr	r2, [pc, #248]	; 110f8 <abort@plt+0x7fc>
   10ffc:	ldr	r3, [pc, #248]	; 110fc <abort@plt+0x800>
   11000:	ldr	r7, [pc, #248]	; 11100 <abort@plt+0x804>
   11004:	str	r2, [sp, #4]
   11008:	str	r3, [sp]
   1100c:	ldr	r2, [pc, #268]	; 11120 <abort@plt+0x824>
   11010:	ldr	r3, [pc, #240]	; 11108 <abort@plt+0x80c>
   11014:	mov	r1, sl
   11018:	mov	r0, #1
   1101c:	bl	108cc <__printf_chk@plt>
   11020:	ldr	r1, [r7]
   11024:	mov	r0, #10
   11028:	bl	1086c <_IO_putc@plt>
   1102c:	ldr	r2, [pc, #228]	; 11118 <abort@plt+0x81c>
   11030:	b	10ed8 <abort@plt+0x5dc>
   11034:	ldr	r7, [pc, #196]	; 11100 <abort@plt+0x804>
   11038:	b	10f0c <abort@plt+0x610>
   1103c:	ldr	r3, [pc, #204]	; 11110 <abort@plt+0x814>
   11040:	mov	r1, sl
   11044:	mov	r2, r3
   11048:	str	r3, [sp, #4]
   1104c:	str	r3, [sp]
   11050:	mov	r0, #1
   11054:	bl	108cc <__printf_chk@plt>
   11058:	ldr	r1, [r7]
   1105c:	mov	r0, #10
   11060:	bl	1086c <_IO_putc@plt>
   11064:	ldr	r2, [r5, #52]	; 0x34
   11068:	ldr	r4, [r5, #44]	; 0x2c
   1106c:	cmp	r2, #0
   11070:	ldr	fp, [r5, #48]	; 0x30
   11074:	beq	10fe4 <abort@plt+0x6e8>
   11078:	add	r4, r4, #28
   1107c:	sub	fp, fp, #4
   11080:	mov	r6, #0
   11084:	b	110a0 <abort@plt+0x7a4>
   11088:	cmp	r5, r3
   1108c:	beq	110ac <abort@plt+0x7b0>
   11090:	add	r6, r6, #1
   11094:	cmp	r2, r6
   11098:	add	r4, r4, #28
   1109c:	bls	10fe4 <abort@plt+0x6e8>
   110a0:	cmp	r8, #0
   110a4:	ldr	r3, [fp, #4]!
   110a8:	beq	11088 <abort@plt+0x78c>
   110ac:	cmp	r9, #0
   110b0:	ldr	r1, [r4, #-20]	; 0xffffffec
   110b4:	ldreq	r3, [r3, #4]
   110b8:	ldrne	r2, [r3]
   110bc:	mov	r0, #1
   110c0:	ldreq	r3, [r3]
   110c4:	ldreq	r2, [r3, #4]
   110c8:	ldr	r3, [r4, #-28]	; 0xffffffe4
   110cc:	str	r1, [sp, #4]
   110d0:	ldr	r1, [r4, #-24]	; 0xffffffe8
   110d4:	str	r1, [sp]
   110d8:	mov	r1, sl
   110dc:	bl	108cc <__printf_chk@plt>
   110e0:	ldr	r1, [r7]
   110e4:	mov	r0, #10
   110e8:	bl	1086c <_IO_putc@plt>
   110ec:	ldr	r2, [r5, #52]	; 0x34
   110f0:	b	11090 <abort@plt+0x794>
   110f4:	andeq	r3, r2, r8, asr r0
   110f8:	andeq	r1, r1, r4, ror r3
   110fc:	andeq	r1, r1, ip, ror r3
   11100:	andeq	r3, r2, r8, lsl fp
   11104:	andeq	r1, r1, r4, lsl #7
   11108:	andeq	r1, r1, r8, ror #6
   1110c:	andeq	r1, r1, ip, asr #6
   11110:	andeq	r1, r1, r4, asr #6
   11114:	andeq	r1, r1, r8, asr r3
   11118:	andeq	r1, r1, r0, asr #6
   1111c:	andeq	r1, r1, r0, ror #6
   11120:	andeq	r1, r1, r8, lsl r4
   11124:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11128:	mov	r7, r0
   1112c:	ldr	r6, [pc, #72]	; 1117c <abort@plt+0x880>
   11130:	ldr	r5, [pc, #72]	; 11180 <abort@plt+0x884>
   11134:	add	r6, pc, r6
   11138:	add	r5, pc, r5
   1113c:	sub	r6, r6, r5
   11140:	mov	r8, r1
   11144:	mov	r9, r2
   11148:	bl	10828 <_init@@Base>
   1114c:	asrs	r6, r6, #2
   11150:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11154:	mov	r4, #0
   11158:	add	r4, r4, #1
   1115c:	ldr	r3, [r5], #4
   11160:	mov	r2, r9
   11164:	mov	r1, r8
   11168:	mov	r0, r7
   1116c:	blx	r3
   11170:	cmp	r6, r4
   11174:	bne	11158 <abort@plt+0x85c>
   11178:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1117c:	andeq	r1, r1, r0, asr r3
   11180:	andeq	r1, r1, r8, asr #6
   11184:	bx	lr

Disassembly of section .fini:

00011188 <_fini@@Base>:
   11188:	push	{r3, lr}
   1118c:	pop	{r3, pc}
