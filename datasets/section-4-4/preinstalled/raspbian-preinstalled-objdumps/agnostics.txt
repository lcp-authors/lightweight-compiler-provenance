
raspbian-preinstalled/agnostics:     file format elf32-littlearm


Disassembly of section .init:

00011730 <.init>:
   11730:	push	{r3, lr}
   11734:	bl	12324 <g_strcmp0@plt+0x7c0>
   11738:	pop	{r3, pc}

Disassembly of section .plt:

0001173c <popen@plt-0x14>:
   1173c:	push	{lr}		; (str lr, [sp, #-4]!)
   11740:	ldr	lr, [pc, #4]	; 1174c <popen@plt-0x4>
   11744:	add	lr, pc, lr
   11748:	ldr	pc, [lr, #8]!
   1174c:			; <UNDEFINED> instruction: 0x000128b4

00011750 <popen@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #73728	; 0x12000
   11758:	ldr	pc, [ip, #2228]!	; 0x8b4

0001175c <g_get_home_dir@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #73728	; 0x12000
   11764:	ldr	pc, [ip, #2220]!	; 0x8ac

00011768 <gtk_list_store_set@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #73728	; 0x12000
   11770:	ldr	pc, [ip, #2212]!	; 0x8a4

00011774 <free@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #73728	; 0x12000
   1177c:	ldr	pc, [ip, #2204]!	; 0x89c

00011780 <gtk_tree_model_get_iter_from_string@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #73728	; 0x12000
   11788:	ldr	pc, [ip, #2196]!	; 0x894

0001178c <bind_textdomain_codeset@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #73728	; 0x12000
   11794:	ldr	pc, [ip, #2188]!	; 0x88c

00011798 <gtk_tree_view_set_model@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #73728	; 0x12000
   117a0:	ldr	pc, [ip, #2180]!	; 0x884

000117a4 <strncmp@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #73728	; 0x12000
   117ac:	ldr	pc, [ip, #2172]!	; 0x87c

000117b0 <gtk_widget_hide@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #73728	; 0x12000
   117b8:	ldr	pc, [ip, #2164]!	; 0x874

000117bc <asctime@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #73728	; 0x12000
   117c4:	ldr	pc, [ip, #2156]!	; 0x86c

000117c8 <exit@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #73728	; 0x12000
   117d0:	ldr	pc, [ip, #2148]!	; 0x864

000117d4 <g_thread_new@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #73728	; 0x12000
   117dc:	ldr	pc, [ip, #2140]!	; 0x85c

000117e0 <g_build_filename@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #73728	; 0x12000
   117e8:	ldr	pc, [ip, #2132]!	; 0x854

000117ec <gtk_tree_model_iter_next@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #73728	; 0x12000
   117f4:	ldr	pc, [ip, #2124]!	; 0x84c

000117f8 <gtk_widget_grab_focus@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #73728	; 0x12000
   11800:	ldr	pc, [ip, #2116]!	; 0x844

00011804 <textdomain@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #73728	; 0x12000
   1180c:	ldr	pc, [ip, #2108]!	; 0x83c

00011810 <__fprintf_chk@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #73728	; 0x12000
   11818:	ldr	pc, [ip, #2100]!	; 0x834

0001181c <execl@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #73728	; 0x12000
   11824:	ldr	pc, [ip, #2092]!	; 0x82c

00011828 <g_strdup@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #73728	; 0x12000
   11830:	ldr	pc, [ip, #2084]!	; 0x824

00011834 <setpgid@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #73728	; 0x12000
   1183c:	ldr	pc, [ip, #2076]!	; 0x81c

00011840 <gtk_tree_model_sort_convert_iter_to_child_iter@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #73728	; 0x12000
   11848:	ldr	pc, [ip, #2068]!	; 0x814

0001184c <g_strchomp@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #73728	; 0x12000
   11854:	ldr	pc, [ip, #2060]!	; 0x80c

00011858 <gtk_icon_theme_prepend_search_path@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #73728	; 0x12000
   11860:	ldr	pc, [ip, #2052]!	; 0x804

00011864 <gtk_builder_get_object@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #73728	; 0x12000
   1186c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011870 <g_strdup_printf@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #73728	; 0x12000
   11878:	ldr	pc, [ip, #2036]!	; 0x7f4

0001187c <close@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #73728	; 0x12000
   11884:	ldr	pc, [ip, #2028]!	; 0x7ec

00011888 <fopen@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #73728	; 0x12000
   11890:	ldr	pc, [ip, #2020]!	; 0x7e4

00011894 <gtk_tree_view_get_column@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #73728	; 0x12000
   1189c:	ldr	pc, [ip, #2012]!	; 0x7dc

000118a0 <abort@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #73728	; 0x12000
   118a8:	ldr	pc, [ip, #2004]!	; 0x7d4

000118ac <g_dir_close@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #73728	; 0x12000
   118b4:	ldr	pc, [ip, #1996]!	; 0x7cc

000118b8 <gtk_tree_view_column_set_sizing@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #73728	; 0x12000
   118c0:	ldr	pc, [ip, #1988]!	; 0x7c4

000118c4 <gtk_cell_renderer_text_new@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #73728	; 0x12000
   118cc:	ldr	pc, [ip, #1980]!	; 0x7bc

000118d0 <gtk_tree_view_column_set_visible@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #73728	; 0x12000
   118d8:	ldr	pc, [ip, #1972]!	; 0x7b4

000118dc <gtk_window_set_default_size@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #73728	; 0x12000
   118e4:	ldr	pc, [ip, #1964]!	; 0x7ac

000118e8 <dup2@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #73728	; 0x12000
   118f0:	ldr	pc, [ip, #1956]!	; 0x7a4

000118f4 <localtime@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #73728	; 0x12000
   118fc:	ldr	pc, [ip, #1948]!	; 0x79c

00011900 <g_signal_connect_data@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #73728	; 0x12000
   11908:	ldr	pc, [ip, #1940]!	; 0x794

0001190c <gtk_tree_model_sort_new_with_model@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #73728	; 0x12000
   11914:	ldr	pc, [ip, #1932]!	; 0x78c

00011918 <gtk_tree_path_new_from_string@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #73728	; 0x12000
   11920:	ldr	pc, [ip, #1924]!	; 0x784

00011924 <gtk_label_set_text@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #73728	; 0x12000
   1192c:	ldr	pc, [ip, #1916]!	; 0x77c

00011930 <killpg@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #73728	; 0x12000
   11938:	ldr	pc, [ip, #1908]!	; 0x774

0001193c <open@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #73728	; 0x12000
   11944:	ldr	pc, [ip, #1900]!	; 0x76c

00011948 <__vsprintf_chk@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #73728	; 0x12000
   11950:	ldr	pc, [ip, #1892]!	; 0x764

00011954 <waitpid@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #73728	; 0x12000
   1195c:	ldr	pc, [ip, #1884]!	; 0x75c

00011960 <gtk_tree_view_column_set_fixed_width@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #73728	; 0x12000
   11968:	ldr	pc, [ip, #1876]!	; 0x754

0001196c <__stack_chk_fail@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #73728	; 0x12000
   11974:	ldr	pc, [ip, #1868]!	; 0x74c

00011978 <fork@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #73728	; 0x12000
   11980:	ldr	pc, [ip, #1860]!	; 0x744

00011984 <gtk_list_store_new@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #73728	; 0x12000
   1198c:	ldr	pc, [ip, #1852]!	; 0x73c

00011990 <gtk_progress_bar_pulse@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #73728	; 0x12000
   11998:	ldr	pc, [ip, #1844]!	; 0x734

0001199c <g_free@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #73728	; 0x12000
   119a4:	ldr	pc, [ip, #1836]!	; 0x72c

000119a8 <dcgettext@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #73728	; 0x12000
   119b0:	ldr	pc, [ip, #1828]!	; 0x724

000119b4 <gtk_tree_model_get_iter_first@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #73728	; 0x12000
   119bc:	ldr	pc, [ip, #1820]!	; 0x71c

000119c0 <gtk_tree_view_column_set_expand@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #73728	; 0x12000
   119c8:	ldr	pc, [ip, #1812]!	; 0x714

000119cc <gtk_main@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #73728	; 0x12000
   119d4:	ldr	pc, [ip, #1804]!	; 0x70c

000119d8 <g_object_set@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #73728	; 0x12000
   119e0:	ldr	pc, [ip, #1796]!	; 0x704

000119e4 <gdk_threads_add_timeout@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #73728	; 0x12000
   119ec:	ldr	pc, [ip, #1788]!	; 0x6fc

000119f0 <g_dir_open@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #73728	; 0x12000
   119f8:	ldr	pc, [ip, #1780]!	; 0x6f4

000119fc <pclose@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #73728	; 0x12000
   11a04:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a08 <gtk_list_store_append@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #73728	; 0x12000
   11a10:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a14 <gtk_builder_new_from_file@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #73728	; 0x12000
   11a1c:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a20 <bindtextdomain@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #73728	; 0x12000
   11a28:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a2c <gtk_tree_path_next@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #73728	; 0x12000
   11a34:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a38 <g_dir_read_name@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #73728	; 0x12000
   11a40:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a44 <setlocale@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #73728	; 0x12000
   11a4c:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a50 <fgets@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #73728	; 0x12000
   11a58:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a5c <gtk_widget_show@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #73728	; 0x12000
   11a64:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a68 <g_object_unref@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #73728	; 0x12000
   11a70:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a74 <strlen@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #73728	; 0x12000
   11a7c:	ldr	pc, [ip, #1692]!	; 0x69c

00011a80 <g_strcompress@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #73728	; 0x12000
   11a88:	ldr	pc, [ip, #1684]!	; 0x694

00011a8c <fclose@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #73728	; 0x12000
   11a94:	ldr	pc, [ip, #1676]!	; 0x68c

00011a98 <gtk_window_set_transient_for@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #73728	; 0x12000
   11aa0:	ldr	pc, [ip, #1668]!	; 0x684

00011aa4 <gtk_tree_sortable_set_sort_column_id@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #73728	; 0x12000
   11aac:	ldr	pc, [ip, #1660]!	; 0x67c

00011ab0 <gtk_main_quit@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #73728	; 0x12000
   11ab8:	ldr	pc, [ip, #1652]!	; 0x674

00011abc <g_strchug@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #73728	; 0x12000
   11ac4:	ldr	pc, [ip, #1644]!	; 0x66c

00011ac8 <gtk_cell_renderer_toggle_new@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #73728	; 0x12000
   11ad0:	ldr	pc, [ip, #1636]!	; 0x664

00011ad4 <gtk_init@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #73728	; 0x12000
   11adc:	ldr	pc, [ip, #1628]!	; 0x65c

00011ae0 <time@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #73728	; 0x12000
   11ae8:	ldr	pc, [ip, #1620]!	; 0x654

00011aec <gtk_tree_view_insert_column_with_attributes@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #73728	; 0x12000
   11af4:	ldr	pc, [ip, #1612]!	; 0x64c

00011af8 <gtk_icon_theme_get_default@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #73728	; 0x12000
   11b00:	ldr	pc, [ip, #1604]!	; 0x644

00011b04 <getline@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #73728	; 0x12000
   11b0c:	ldr	pc, [ip, #1596]!	; 0x63c

00011b10 <gtk_tree_model_get_iter@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #73728	; 0x12000
   11b18:	ldr	pc, [ip, #1588]!	; 0x634

00011b1c <gtk_tree_model_get@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #73728	; 0x12000
   11b24:	ldr	pc, [ip, #1580]!	; 0x62c

00011b28 <__libc_start_main@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #73728	; 0x12000
   11b30:	ldr	pc, [ip, #1572]!	; 0x624

00011b34 <dup@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #73728	; 0x12000
   11b3c:	ldr	pc, [ip, #1564]!	; 0x61c

00011b40 <gtk_widget_set_visible@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #73728	; 0x12000
   11b48:	ldr	pc, [ip, #1556]!	; 0x614

00011b4c <__gmon_start__@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #73728	; 0x12000
   11b54:	ldr	pc, [ip, #1548]!	; 0x60c

00011b58 <gtk_tree_view_column_set_alignment@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #73728	; 0x12000
   11b60:	ldr	pc, [ip, #1540]!	; 0x604

00011b64 <g_strcmp0@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #73728	; 0x12000
   11b6c:	ldr	pc, [ip, #1532]!	; 0x5fc

Disassembly of section .text:

00011b70 <.text>:
   11b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b74:	sub	sp, sp, #100	; 0x64
   11b78:	ldr	fp, [pc, #1660]	; 121fc <g_strcmp0@plt+0x698>
   11b7c:	str	r0, [sp, #60]	; 0x3c
   11b80:	str	r1, [sp, #56]	; 0x38
   11b84:	ldr	r3, [fp]
   11b88:	ldr	r1, [pc, #1648]	; 12200 <g_strcmp0@plt+0x69c>
   11b8c:	mov	r0, #6
   11b90:	str	r3, [sp, #92]	; 0x5c
   11b94:	bl	11a44 <setlocale@plt>
   11b98:	ldr	r1, [pc, #1636]	; 12204 <g_strcmp0@plt+0x6a0>
   11b9c:	ldr	r0, [pc, #1636]	; 12208 <g_strcmp0@plt+0x6a4>
   11ba0:	bl	11a20 <bindtextdomain@plt>
   11ba4:	ldr	r1, [pc, #1632]	; 1220c <g_strcmp0@plt+0x6a8>
   11ba8:	ldr	r0, [pc, #1624]	; 12208 <g_strcmp0@plt+0x6a4>
   11bac:	bl	1178c <bind_textdomain_codeset@plt>
   11bb0:	ldr	r0, [pc, #1616]	; 12208 <g_strcmp0@plt+0x6a4>
   11bb4:	bl	11804 <textdomain@plt>
   11bb8:	add	r1, sp, #56	; 0x38
   11bbc:	add	r0, sp, #60	; 0x3c
   11bc0:	bl	11ad4 <gtk_init@plt>
   11bc4:	bl	11af8 <gtk_icon_theme_get_default@plt>
   11bc8:	ldr	r1, [pc, #1600]	; 12210 <g_strcmp0@plt+0x6ac>
   11bcc:	bl	11858 <gtk_icon_theme_prepend_search_path@plt>
   11bd0:	mov	r3, #64	; 0x40
   11bd4:	mov	r2, #20
   11bd8:	mov	r1, r3
   11bdc:	str	r2, [sp, #4]
   11be0:	str	r3, [sp]
   11be4:	mov	r2, r3
   11be8:	mov	r0, #5
   11bec:	bl	11984 <gtk_list_store_new@plt>
   11bf0:	ldr	r7, [pc, #1564]	; 12214 <g_strcmp0@plt+0x6b0>
   11bf4:	mov	r2, #0
   11bf8:	mov	r1, r2
   11bfc:	str	r0, [r7]
   11c00:	ldr	r0, [pc, #1544]	; 12210 <g_strcmp0@plt+0x6ac>
   11c04:	bl	119f0 <g_dir_open@plt>
   11c08:	subs	r9, r0, #0
   11c0c:	ldreq	sl, [pc, #1540]	; 12218 <g_strcmp0@plt+0x6b4>
   11c10:	bne	11c34 <g_strcmp0@plt+0xd0>
   11c14:	b	11c68 <g_strcmp0@plt+0x104>
   11c18:	bl	11a74 <strlen@plt>
   11c1c:	ldr	r1, [pc, #1528]	; 1221c <g_strcmp0@plt+0x6b8>
   11c20:	sub	r0, r0, #3
   11c24:	add	r0, r4, r0
   11c28:	bl	11b64 <g_strcmp0@plt>
   11c2c:	subs	r5, r0, #0
   11c30:	beq	12028 <g_strcmp0@plt+0x4c4>
   11c34:	mov	r0, r9
   11c38:	bl	11a38 <g_dir_read_name@plt>
   11c3c:	subs	r4, r0, #0
   11c40:	bne	11c18 <g_strcmp0@plt+0xb4>
   11c44:	mov	r0, r9
   11c48:	bl	118ac <g_dir_close@plt>
   11c4c:	ldr	r0, [r7]
   11c50:	bl	1190c <gtk_tree_model_sort_new_with_model@plt>
   11c54:	ldr	sl, [pc, #1468]	; 12218 <g_strcmp0@plt+0x6b4>
   11c58:	mov	r2, r4
   11c5c:	mov	r1, #1
   11c60:	str	r0, [sl]
   11c64:	bl	11aa4 <gtk_tree_sortable_set_sort_column_id@plt>
   11c68:	bl	1175c <g_get_home_dir@plt>
   11c6c:	mov	r2, #0
   11c70:	ldr	r1, [pc, #1448]	; 12220 <g_strcmp0@plt+0x6bc>
   11c74:	bl	117e0 <g_build_filename@plt>
   11c78:	ldr	r3, [pc, #1444]	; 12224 <g_strcmp0@plt+0x6c0>
   11c7c:	ldr	r7, [pc, #1444]	; 12228 <g_strcmp0@plt+0x6c4>
   11c80:	ldr	r5, [pc, #1444]	; 1222c <g_strcmp0@plt+0x6c8>
   11c84:	mov	r4, #0
   11c88:	mov	r6, #2
   11c8c:	ldr	r9, [pc, #1436]	; 12230 <g_strcmp0@plt+0x6cc>
   11c90:	str	r0, [r3]
   11c94:	ldr	r0, [pc, #1432]	; 12234 <g_strcmp0@plt+0x6d0>
   11c98:	bl	11a14 <gtk_builder_new_from_file@plt>
   11c9c:	ldr	r1, [pc, #1428]	; 12238 <g_strcmp0@plt+0x6d4>
   11ca0:	mov	r8, r0
   11ca4:	bl	11864 <gtk_builder_get_object@plt>
   11ca8:	ldr	r1, [pc, #1420]	; 1223c <g_strcmp0@plt+0x6d8>
   11cac:	str	r0, [r7]
   11cb0:	mov	r0, r8
   11cb4:	bl	11864 <gtk_builder_get_object@plt>
   11cb8:	ldr	r1, [pc, #1408]	; 12240 <g_strcmp0@plt+0x6dc>
   11cbc:	str	r0, [r5]
   11cc0:	mov	r0, r8
   11cc4:	bl	11864 <gtk_builder_get_object@plt>
   11cc8:	ldr	r2, [pc, #1396]	; 12244 <g_strcmp0@plt+0x6e0>
   11ccc:	ldr	r1, [pc, #1396]	; 12248 <g_strcmp0@plt+0x6e4>
   11cd0:	str	r0, [r2]
   11cd4:	mov	r0, r8
   11cd8:	bl	11864 <gtk_builder_get_object@plt>
   11cdc:	ldr	ip, [pc, #1384]	; 1224c <g_strcmp0@plt+0x6e8>
   11ce0:	ldr	r1, [pc, #1384]	; 12250 <g_strcmp0@plt+0x6ec>
   11ce4:	str	r0, [ip]
   11ce8:	mov	r0, r8
   11cec:	bl	11864 <gtk_builder_get_object@plt>
   11cf0:	ldr	lr, [pc, #1372]	; 12254 <g_strcmp0@plt+0x6f0>
   11cf4:	ldr	r1, [pc, #1372]	; 12258 <g_strcmp0@plt+0x6f4>
   11cf8:	str	r0, [lr]
   11cfc:	mov	r0, r8
   11d00:	bl	11864 <gtk_builder_get_object@plt>
   11d04:	ldr	r3, [pc, #1360]	; 1225c <g_strcmp0@plt+0x6f8>
   11d08:	ldr	r1, [pc, #1360]	; 12260 <g_strcmp0@plt+0x6fc>
   11d0c:	str	r0, [r3]
   11d10:	mov	r0, r8
   11d14:	bl	11864 <gtk_builder_get_object@plt>
   11d18:	ldr	r3, [pc, #1348]	; 12264 <g_strcmp0@plt+0x700>
   11d1c:	ldr	r1, [pc, #1348]	; 12268 <g_strcmp0@plt+0x704>
   11d20:	str	r0, [r3]
   11d24:	mov	r0, r8
   11d28:	bl	11864 <gtk_builder_get_object@plt>
   11d2c:	ldr	r3, [pc, #1336]	; 1226c <g_strcmp0@plt+0x708>
   11d30:	ldr	r1, [pc, #1336]	; 12270 <g_strcmp0@plt+0x70c>
   11d34:	str	r0, [r3]
   11d38:	mov	r0, r8
   11d3c:	bl	11864 <gtk_builder_get_object@plt>
   11d40:	ldr	r3, [pc, #1324]	; 12274 <g_strcmp0@plt+0x710>
   11d44:	ldr	r1, [pc, #1324]	; 12278 <g_strcmp0@plt+0x714>
   11d48:	str	r0, [r3]
   11d4c:	mov	r0, r8
   11d50:	bl	11864 <gtk_builder_get_object@plt>
   11d54:	ldr	ip, [pc, #1312]	; 1227c <g_strcmp0@plt+0x718>
   11d58:	ldr	r1, [pc, #1312]	; 12280 <g_strcmp0@plt+0x71c>
   11d5c:	str	r0, [ip]
   11d60:	mov	r0, r8
   11d64:	bl	11864 <gtk_builder_get_object@plt>
   11d68:	bl	117b0 <gtk_widget_hide@plt>
   11d6c:	mov	r0, r8
   11d70:	bl	11a68 <g_object_unref@plt>
   11d74:	ldr	r1, [sl]
   11d78:	ldr	r0, [r5]
   11d7c:	bl	11798 <gtk_tree_view_set_model@plt>
   11d80:	bl	118c4 <gtk_cell_renderer_text_new@plt>
   11d84:	ldr	r3, [pc, #1272]	; 12284 <g_strcmp0@plt+0x720>
   11d88:	mov	r2, #380	; 0x17c
   11d8c:	ldr	r1, [pc, #1268]	; 12288 <g_strcmp0@plt+0x724>
   11d90:	str	r4, [sp, #4]
   11d94:	str	r6, [sp]
   11d98:	mov	sl, r0
   11d9c:	bl	119d8 <g_object_set@plt>
   11da0:	mov	r2, #5
   11da4:	ldr	r1, [pc, #1248]	; 1228c <g_strcmp0@plt+0x728>
   11da8:	mov	r0, r4
   11dac:	ldr	r8, [r5]
   11db0:	bl	119a8 <dcgettext@plt>
   11db4:	mov	r3, sl
   11db8:	mov	r1, r4
   11dbc:	str	r4, [sp, #8]
   11dc0:	str	r6, [sp, #4]
   11dc4:	str	r9, [sp]
   11dc8:	mov	r2, r0
   11dcc:	mov	r0, r8
   11dd0:	bl	11aec <gtk_tree_view_insert_column_with_attributes@plt>
   11dd4:	mov	r1, r4
   11dd8:	ldr	r0, [r5]
   11ddc:	bl	11894 <gtk_tree_view_get_column@plt>
   11de0:	mov	r1, #1
   11de4:	bl	119c0 <gtk_tree_view_column_set_expand@plt>
   11de8:	bl	11ac8 <gtk_cell_renderer_toggle_new@plt>
   11dec:	mov	r3, r4
   11df0:	mov	r2, #1
   11df4:	ldr	r1, [pc, #1172]	; 12290 <g_strcmp0@plt+0x72c>
   11df8:	mov	r8, r0
   11dfc:	bl	119d8 <g_object_set@plt>
   11e00:	mov	r2, #5
   11e04:	ldr	r1, [pc, #1160]	; 12294 <g_strcmp0@plt+0x730>
   11e08:	mov	r0, r4
   11e0c:	ldr	sl, [r5]
   11e10:	bl	119a8 <dcgettext@plt>
   11e14:	ldr	r1, [pc, #1148]	; 12298 <g_strcmp0@plt+0x734>
   11e18:	mov	r2, #4
   11e1c:	mov	r3, r8
   11e20:	stm	sp, {r1, r2}
   11e24:	str	r4, [sp, #8]
   11e28:	mov	r1, #1
   11e2c:	mov	r2, r0
   11e30:	mov	r0, sl
   11e34:	bl	11aec <gtk_tree_view_insert_column_with_attributes@plt>
   11e38:	mov	r1, #1
   11e3c:	ldr	r0, [r5]
   11e40:	bl	11894 <gtk_tree_view_get_column@plt>
   11e44:	mov	r1, r6
   11e48:	bl	118b8 <gtk_tree_view_column_set_sizing@plt>
   11e4c:	mov	r1, #1
   11e50:	ldr	r0, [r5]
   11e54:	bl	11894 <gtk_tree_view_get_column@plt>
   11e58:	mov	r1, #100	; 0x64
   11e5c:	bl	11960 <gtk_tree_view_column_set_fixed_width@plt>
   11e60:	mov	r1, #1
   11e64:	ldr	r0, [r5]
   11e68:	bl	11894 <gtk_tree_view_get_column@plt>
   11e6c:	vldr	s0, [pc, #900]	; 121f8 <g_strcmp0@plt+0x694>
   11e70:	bl	11b58 <gtk_tree_view_column_set_alignment@plt>
   11e74:	bl	118c4 <gtk_cell_renderer_text_new@plt>
   11e78:	ldr	r3, [pc, #1052]	; 1229c <g_strcmp0@plt+0x738>
   11e7c:	mov	r2, #0
   11e80:	ldr	r1, [pc, #1048]	; 122a0 <g_strcmp0@plt+0x73c>
   11e84:	str	r4, [sp]
   11e88:	str	r0, [sp, #44]	; 0x2c
   11e8c:	bl	119d8 <g_object_set@plt>
   11e90:	mov	r2, #5
   11e94:	ldr	r1, [pc, #1032]	; 122a4 <g_strcmp0@plt+0x740>
   11e98:	mov	r0, r4
   11e9c:	ldr	sl, [r5]
   11ea0:	bl	119a8 <dcgettext@plt>
   11ea4:	mov	r2, #3
   11ea8:	ldr	r3, [sp, #44]	; 0x2c
   11eac:	mov	r1, r6
   11eb0:	str	r2, [sp, #4]
   11eb4:	str	r9, [sp]
   11eb8:	str	r4, [sp, #8]
   11ebc:	mov	r2, r0
   11ec0:	mov	r0, sl
   11ec4:	bl	11aec <gtk_tree_view_insert_column_with_attributes@plt>
   11ec8:	mov	r1, r6
   11ecc:	ldr	r0, [r5]
   11ed0:	bl	11894 <gtk_tree_view_get_column@plt>
   11ed4:	mov	r1, r6
   11ed8:	bl	118b8 <gtk_tree_view_column_set_sizing@plt>
   11edc:	mov	r1, r6
   11ee0:	ldr	r0, [r5]
   11ee4:	bl	11894 <gtk_tree_view_get_column@plt>
   11ee8:	mov	r1, #100	; 0x64
   11eec:	bl	11960 <gtk_tree_view_column_set_fixed_width@plt>
   11ef0:	mov	r1, r6
   11ef4:	ldr	r0, [r5]
   11ef8:	bl	11894 <gtk_tree_view_get_column@plt>
   11efc:	vldr	s0, [pc, #756]	; 121f8 <g_strcmp0@plt+0x694>
   11f00:	bl	11b58 <gtk_tree_view_column_set_alignment@plt>
   11f04:	mov	r3, r4
   11f08:	ldr	r2, [pc, #920]	; 122a8 <g_strcmp0@plt+0x744>
   11f0c:	ldr	r1, [pc, #920]	; 122ac <g_strcmp0@plt+0x748>
   11f10:	str	r4, [sp, #4]
   11f14:	str	r4, [sp]
   11f18:	mov	r0, r8
   11f1c:	bl	11900 <g_signal_connect_data@plt>
   11f20:	str	r4, [sp, #4]
   11f24:	str	r4, [sp]
   11f28:	mov	r3, r4
   11f2c:	ldr	r2, [pc, #892]	; 122b0 <g_strcmp0@plt+0x74c>
   11f30:	ldr	r1, [pc, #892]	; 122b4 <g_strcmp0@plt+0x750>
   11f34:	ldr	r0, [r7]
   11f38:	bl	11900 <g_signal_connect_data@plt>
   11f3c:	ldr	ip, [pc, #776]	; 1224c <g_strcmp0@plt+0x6e8>
   11f40:	str	r4, [sp, #4]
   11f44:	str	r4, [sp]
   11f48:	mov	r3, r4
   11f4c:	ldr	r0, [ip]
   11f50:	ldr	r2, [pc, #856]	; 122b0 <g_strcmp0@plt+0x74c>
   11f54:	ldr	r1, [pc, #860]	; 122b8 <g_strcmp0@plt+0x754>
   11f58:	bl	11900 <g_signal_connect_data@plt>
   11f5c:	ldr	r2, [pc, #736]	; 12244 <g_strcmp0@plt+0x6e0>
   11f60:	str	r4, [sp, #4]
   11f64:	str	r4, [sp]
   11f68:	mov	r3, r4
   11f6c:	ldr	r0, [r2]
   11f70:	ldr	r1, [pc, #832]	; 122b8 <g_strcmp0@plt+0x754>
   11f74:	ldr	r2, [pc, #832]	; 122bc <g_strcmp0@plt+0x758>
   11f78:	bl	11900 <g_signal_connect_data@plt>
   11f7c:	ldr	lr, [pc, #720]	; 12254 <g_strcmp0@plt+0x6f0>
   11f80:	str	r4, [sp, #4]
   11f84:	str	r4, [sp]
   11f88:	mov	r3, r4
   11f8c:	ldr	r0, [lr]
   11f90:	ldr	r2, [pc, #808]	; 122c0 <g_strcmp0@plt+0x75c>
   11f94:	ldr	r1, [pc, #796]	; 122b8 <g_strcmp0@plt+0x754>
   11f98:	bl	11900 <g_signal_connect_data@plt>
   11f9c:	ldr	r2, [pc, #696]	; 1225c <g_strcmp0@plt+0x6f8>
   11fa0:	str	r4, [sp, #4]
   11fa4:	str	r4, [sp]
   11fa8:	mov	r3, r4
   11fac:	ldr	r0, [r2]
   11fb0:	ldr	r1, [pc, #768]	; 122b8 <g_strcmp0@plt+0x754>
   11fb4:	ldr	r2, [pc, #776]	; 122c4 <g_strcmp0@plt+0x760>
   11fb8:	bl	11900 <g_signal_connect_data@plt>
   11fbc:	ldr	ip, [pc, #696]	; 1227c <g_strcmp0@plt+0x718>
   11fc0:	mov	r3, r4
   11fc4:	ldr	r2, [pc, #764]	; 122c8 <g_strcmp0@plt+0x764>
   11fc8:	ldr	r1, [pc, #744]	; 122b8 <g_strcmp0@plt+0x754>
   11fcc:	str	r4, [sp, #4]
   11fd0:	str	r4, [sp]
   11fd4:	ldr	r0, [ip]
   11fd8:	bl	11900 <g_signal_connect_data@plt>
   11fdc:	mov	r0, r4
   11fe0:	bl	129dc <g_strcmp0@plt+0xe78>
   11fe4:	ldr	r2, [pc, #736]	; 122cc <g_strcmp0@plt+0x768>
   11fe8:	mov	r1, #500	; 0x1f4
   11fec:	ldr	r0, [r7]
   11ff0:	bl	118dc <gtk_window_set_default_size@plt>
   11ff4:	ldr	r0, [r7]
   11ff8:	bl	11a5c <gtk_widget_show@plt>
   11ffc:	bl	119cc <gtk_main@plt>
   12000:	ldr	r3, [pc, #540]	; 12224 <g_strcmp0@plt+0x6c0>
   12004:	ldr	r0, [r3]
   12008:	bl	1199c <g_free@plt>
   1200c:	ldr	r2, [sp, #92]	; 0x5c
   12010:	ldr	r3, [fp]
   12014:	mov	r0, r4
   12018:	cmp	r2, r3
   1201c:	bne	121f4 <g_strcmp0@plt+0x690>
   12020:	add	sp, sp, #100	; 0x64
   12024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12028:	mov	r2, r4
   1202c:	ldr	r1, [pc, #476]	; 12210 <g_strcmp0@plt+0x6ac>
   12030:	ldr	r0, [pc, #664]	; 122d0 <g_strcmp0@plt+0x76c>
   12034:	bl	11870 <g_strdup_printf@plt>
   12038:	ldr	r1, [pc, #660]	; 122d4 <g_strcmp0@plt+0x770>
   1203c:	str	r0, [sp, #44]	; 0x2c
   12040:	bl	11888 <fopen@plt>
   12044:	subs	r6, r0, #0
   12048:	beq	120f4 <g_strcmp0@plt+0x590>
   1204c:	ldr	sl, [pc, #644]	; 122d8 <g_strcmp0@plt+0x774>
   12050:	mov	r4, r5
   12054:	str	r5, [sp, #68]	; 0x44
   12058:	str	r5, [sp, #72]	; 0x48
   1205c:	mov	r2, r6
   12060:	add	r1, sp, #72	; 0x48
   12064:	add	r0, sp, #68	; 0x44
   12068:	bl	11b04 <getline@plt>
   1206c:	cmn	r0, #1
   12070:	beq	120b8 <g_strcmp0@plt+0x554>
   12074:	ldr	r8, [sp, #68]	; 0x44
   12078:	mov	r2, #6
   1207c:	mov	r0, r8
   12080:	mov	r1, sl
   12084:	bl	117a4 <strncmp@plt>
   12088:	cmp	r0, #0
   1208c:	beq	12100 <g_strcmp0@plt+0x59c>
   12090:	mov	r2, #6
   12094:	ldr	r1, [pc, #576]	; 122dc <g_strcmp0@plt+0x778>
   12098:	mov	r0, r8
   1209c:	bl	117a4 <strncmp@plt>
   120a0:	cmp	r0, #0
   120a4:	bne	1205c <g_strcmp0@plt+0x4f8>
   120a8:	add	r0, r8, #6
   120ac:	bl	11828 <g_strdup@plt>
   120b0:	mov	r4, r0
   120b4:	b	1205c <g_strcmp0@plt+0x4f8>
   120b8:	str	r0, [sp, #48]	; 0x30
   120bc:	ldr	r0, [sp, #68]	; 0x44
   120c0:	bl	11774 <free@plt>
   120c4:	mov	r0, r6
   120c8:	bl	11a8c <fclose@plt>
   120cc:	cmp	r5, #0
   120d0:	cmpne	r4, #0
   120d4:	ldr	r3, [sp, #48]	; 0x30
   120d8:	bne	12114 <g_strcmp0@plt+0x5b0>
   120dc:	cmp	r5, #0
   120e0:	bne	121e8 <g_strcmp0@plt+0x684>
   120e4:	cmp	r4, #0
   120e8:	beq	120f4 <g_strcmp0@plt+0x590>
   120ec:	mov	r0, r4
   120f0:	bl	1199c <g_free@plt>
   120f4:	ldr	r0, [sp, #44]	; 0x2c
   120f8:	bl	1199c <g_free@plt>
   120fc:	b	11c34 <g_strcmp0@plt+0xd0>
   12100:	add	r0, r8, #6
   12104:	bl	11828 <g_strdup@plt>
   12108:	ldr	r8, [sp, #68]	; 0x44
   1210c:	mov	r5, r0
   12110:	b	12090 <g_strcmp0@plt+0x52c>
   12114:	mov	r0, r5
   12118:	str	r3, [sp, #52]	; 0x34
   1211c:	bl	11a74 <strlen@plt>
   12120:	mov	r6, #0
   12124:	add	r2, r5, r0
   12128:	mov	r0, r4
   1212c:	strb	r6, [r2, #-1]
   12130:	bl	11a74 <strlen@plt>
   12134:	add	r2, r4, r0
   12138:	mov	r0, r4
   1213c:	strb	r6, [r2, #-1]
   12140:	bl	11a80 <g_strcompress@plt>
   12144:	mov	r2, #5
   12148:	ldr	r1, [pc, #400]	; 122e0 <g_strcmp0@plt+0x77c>
   1214c:	mov	r8, r0
   12150:	mov	r0, r6
   12154:	bl	119a8 <dcgettext@plt>
   12158:	mov	r2, r8
   1215c:	mov	r1, r5
   12160:	bl	11870 <g_strdup_printf@plt>
   12164:	add	r1, sp, #76	; 0x4c
   12168:	mov	sl, r0
   1216c:	ldr	r0, [r7]
   12170:	bl	11a08 <gtk_list_store_append@plt>
   12174:	ldr	r3, [r7]
   12178:	mov	r2, #5
   1217c:	ldr	r1, [pc, #352]	; 122e4 <g_strcmp0@plt+0x780>
   12180:	mov	r0, r6
   12184:	str	r3, [sp, #48]	; 0x30
   12188:	bl	119a8 <dcgettext@plt>
   1218c:	ldr	r3, [sp, #52]	; 0x34
   12190:	mov	ip, #1
   12194:	mov	lr, #3
   12198:	str	r3, [sp, #32]
   1219c:	str	ip, [sp, #28]
   121a0:	mov	r3, #2
   121a4:	str	ip, [sp]
   121a8:	mov	ip, #4
   121ac:	mov	r2, r6
   121b0:	add	r1, sp, #76	; 0x4c
   121b4:	str	ip, [sp, #24]
   121b8:	str	lr, [sp, #16]
   121bc:	str	r3, [sp, #8]
   121c0:	str	sl, [sp, #12]
   121c4:	ldr	r3, [sp, #44]	; 0x2c
   121c8:	str	r5, [sp, #4]
   121cc:	str	r0, [sp, #20]
   121d0:	ldr	r0, [sp, #48]	; 0x30
   121d4:	bl	11768 <gtk_list_store_set@plt>
   121d8:	mov	r0, sl
   121dc:	bl	1199c <g_free@plt>
   121e0:	mov	r0, r8
   121e4:	bl	1199c <g_free@plt>
   121e8:	mov	r0, r5
   121ec:	bl	1199c <g_free@plt>
   121f0:	b	120e4 <g_strcmp0@plt+0x580>
   121f4:	bl	1196c <__stack_chk_fail@plt>
   121f8:	svccc	0x00000000
   121fc:	andeq	r3, r2, r0, ror #29
   12200:	andeq	r2, r1, r8, lsl #25
   12204:	andeq	r2, r1, ip, lsl #28
   12208:	andeq	r2, r1, r0, lsr #28
   1220c:	andeq	r2, r1, ip, lsr #28
   12210:	andeq	r2, r1, r4, lsr lr
   12214:	muleq	r2, r0, r1
   12218:	andeq	r4, r2, r0, lsl #3
   1221c:	andeq	r2, r1, ip, asr #28
   12220:	andeq	r2, r1, r4, lsl #29
   12224:	andeq	r4, r2, r0, lsr #3
   12228:	muleq	r2, ip, r1
   1222c:			; <UNDEFINED> instruction: 0x000241bc
   12230:	andeq	r2, r1, ip, asr #30
   12234:	muleq	r1, r0, lr
   12238:			; <UNDEFINED> instruction: 0x00012eb8
   1223c:	andeq	r2, r1, r0, asr #29
   12240:	andeq	r2, r1, r8, asr #29
   12244:	andeq	r4, r2, ip, ror r1
   12248:	ldrdeq	r2, [r1], -r0
   1224c:	muleq	r2, r8, r1
   12250:	ldrdeq	r2, [r1], -ip
   12254:			; <UNDEFINED> instruction: 0x000241b0
   12258:	andeq	r2, r1, r8, ror #29
   1225c:	muleq	r2, r4, r1
   12260:	strdeq	r2, [r1], -r0
   12264:	andeq	r4, r2, r8, lsr #3
   12268:	strdeq	r2, [r1], -r8
   1226c:	andeq	r4, r2, ip, lsr #3
   12270:	andeq	r2, r1, r4, lsl #30
   12274:	andeq	r4, r2, r4, lsl #3
   12278:	andeq	r2, r1, r0, lsl pc
   1227c:			; <UNDEFINED> instruction: 0x000241b4
   12280:	andeq	r2, r1, r0, lsr #30
   12284:	andeq	r2, r1, ip, lsr #30
   12288:	andeq	r2, r1, r8, lsr pc
   1228c:	andeq	r2, r1, r4, asr #30
   12290:	andeq	r2, r1, r4, asr pc
   12294:	andeq	r2, r1, r0, ror #30
   12298:	andeq	r2, r1, ip, ror #30
   1229c:	svccc	0x00e00000
   122a0:	andeq	r2, r1, r4, ror pc
   122a4:	andeq	r2, r1, ip, ror pc
   122a8:	andeq	r2, r1, r0, asr r5
   122ac:	andeq	r2, r1, r4, lsl #31
   122b0:	andeq	r2, r1, ip, asr #10
   122b4:	andeq	r2, r1, ip, lsl #31
   122b8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   122bc:	andeq	r2, r1, r4, lsl #8
   122c0:	andeq	r2, r1, r4, ror sl
   122c4:	andeq	r2, r1, ip, ror #11
   122c8:	ldrdeq	r2, [r1], -r8
   122cc:	andeq	r0, r0, lr, asr r1
   122d0:	andeq	r2, r1, r0, asr lr
   122d4:	andeq	r2, r1, r8, asr lr
   122d8:	andeq	r2, r1, ip, asr lr
   122dc:	andeq	r2, r1, r4, ror #28
   122e0:	andeq	r2, r1, ip, ror #28
   122e4:	andeq	r2, r1, ip, ror lr
   122e8:	mov	fp, #0
   122ec:	mov	lr, #0
   122f0:	pop	{r1}		; (ldr r1, [sp], #4)
   122f4:	mov	r2, sp
   122f8:	push	{r2}		; (str r2, [sp, #-4]!)
   122fc:	push	{r0}		; (str r0, [sp, #-4]!)
   12300:	ldr	ip, [pc, #16]	; 12318 <g_strcmp0@plt+0x7b4>
   12304:	push	{ip}		; (str ip, [sp, #-4]!)
   12308:	ldr	r0, [pc, #12]	; 1231c <g_strcmp0@plt+0x7b8>
   1230c:	ldr	r3, [pc, #12]	; 12320 <g_strcmp0@plt+0x7bc>
   12310:	bl	11b28 <__libc_start_main@plt>
   12314:	bl	118a0 <abort@plt>
   12318:	andeq	r2, r1, r8, ror #24
   1231c:	andeq	r1, r1, r0, ror fp
   12320:	andeq	r2, r1, r8, lsl #24
   12324:	ldr	r3, [pc, #20]	; 12340 <g_strcmp0@plt+0x7dc>
   12328:	ldr	r2, [pc, #20]	; 12344 <g_strcmp0@plt+0x7e0>
   1232c:	add	r3, pc, r3
   12330:	ldr	r2, [r3, r2]
   12334:	cmp	r2, #0
   12338:	bxeq	lr
   1233c:	b	11b4c <__gmon_start__@plt>
   12340:	andeq	r1, r1, ip, asr #25
   12344:	andeq	r0, r0, ip, ror #2
   12348:	ldr	r0, [pc, #24]	; 12368 <g_strcmp0@plt+0x804>
   1234c:	ldr	r3, [pc, #24]	; 1236c <g_strcmp0@plt+0x808>
   12350:	cmp	r3, r0
   12354:	bxeq	lr
   12358:	ldr	r3, [pc, #16]	; 12370 <g_strcmp0@plt+0x80c>
   1235c:	cmp	r3, #0
   12360:	bxeq	lr
   12364:	bx	r3
   12368:	andeq	r4, r2, r8, ror r1
   1236c:	andeq	r4, r2, r8, ror r1
   12370:	andeq	r0, r0, r0
   12374:	ldr	r0, [pc, #36]	; 123a0 <g_strcmp0@plt+0x83c>
   12378:	ldr	r1, [pc, #36]	; 123a4 <g_strcmp0@plt+0x840>
   1237c:	sub	r1, r1, r0
   12380:	asr	r1, r1, #2
   12384:	add	r1, r1, r1, lsr #31
   12388:	asrs	r1, r1, #1
   1238c:	bxeq	lr
   12390:	ldr	r3, [pc, #16]	; 123a8 <g_strcmp0@plt+0x844>
   12394:	cmp	r3, #0
   12398:	bxeq	lr
   1239c:	bx	r3
   123a0:	andeq	r4, r2, r8, ror r1
   123a4:	andeq	r4, r2, r8, ror r1
   123a8:	andeq	r0, r0, r0
   123ac:	push	{r4, lr}
   123b0:	ldr	r4, [pc, #24]	; 123d0 <g_strcmp0@plt+0x86c>
   123b4:	ldrb	r3, [r4]
   123b8:	cmp	r3, #0
   123bc:	popne	{r4, pc}
   123c0:	bl	12348 <g_strcmp0@plt+0x7e4>
   123c4:	mov	r3, #1
   123c8:	strb	r3, [r4]
   123cc:	pop	{r4, pc}
   123d0:	andeq	r4, r2, r8, ror r1
   123d4:	b	12374 <g_strcmp0@plt+0x810>
   123d8:	ldr	r3, [pc, #28]	; 123fc <g_strcmp0@plt+0x898>
   123dc:	push	{r4, lr}
   123e0:	mov	r1, #15
   123e4:	ldr	r0, [r3]
   123e8:	bl	11930 <killpg@plt>
   123ec:	ldr	r3, [pc, #12]	; 12400 <g_strcmp0@plt+0x89c>
   123f0:	mov	r2, #1
   123f4:	str	r2, [r3]
   123f8:	pop	{r4, pc}
   123fc:	andeq	r4, r2, r8, lsl #3
   12400:			; <UNDEFINED> instruction: 0x000241b8
   12404:	ldr	r3, [pc, #128]	; 1248c <g_strcmp0@plt+0x928>
   12408:	push	{r4, lr}
   1240c:	mov	r2, #5
   12410:	ldr	r1, [pc, #120]	; 12490 <g_strcmp0@plt+0x92c>
   12414:	mov	r0, #0
   12418:	ldr	r4, [r3]
   1241c:	bl	119a8 <dcgettext@plt>
   12420:	mov	r1, r0
   12424:	mov	r0, r4
   12428:	bl	11924 <gtk_label_set_text@plt>
   1242c:	ldr	r4, [pc, #96]	; 12494 <g_strcmp0@plt+0x930>
   12430:	ldr	r3, [pc, #96]	; 12498 <g_strcmp0@plt+0x934>
   12434:	ldr	r0, [r4]
   12438:	ldr	r1, [r3]
   1243c:	bl	11a98 <gtk_window_set_transient_for@plt>
   12440:	ldr	r0, [r4]
   12444:	bl	11a5c <gtk_widget_show@plt>
   12448:	mov	r2, #0
   1244c:	ldr	r1, [pc, #72]	; 1249c <g_strcmp0@plt+0x938>
   12450:	mov	r0, #1000	; 0x3e8
   12454:	bl	119e4 <gdk_threads_add_timeout@plt>
   12458:	ldr	lr, [pc, #64]	; 124a0 <g_strcmp0@plt+0x93c>
   1245c:	ldr	r1, [pc, #64]	; 124a4 <g_strcmp0@plt+0x940>
   12460:	ldr	ip, [pc, #64]	; 124a8 <g_strcmp0@plt+0x944>
   12464:	mov	r3, #0
   12468:	str	r3, [lr]
   1246c:	mov	lr, #1
   12470:	str	r3, [r1]
   12474:	str	lr, [ip]
   12478:	mov	r2, r3
   1247c:	mov	r0, r3
   12480:	ldr	r1, [pc, #36]	; 124ac <g_strcmp0@plt+0x948>
   12484:	pop	{r4, lr}
   12488:	b	117d4 <g_thread_new@plt>
   1248c:	andeq	r4, r2, ip, lsr #3
   12490:	andeq	r2, r1, r8, ror ip
   12494:	andeq	r4, r2, r8, lsr #3
   12498:	muleq	r2, ip, r1
   1249c:	andeq	r2, r1, r8, lsl fp
   124a0:			; <UNDEFINED> instruction: 0x000241b8
   124a4:	andeq	r4, r2, r4, lsr #3
   124a8:	andeq	r4, r2, ip, lsl #3
   124ac:	andeq	r2, r1, r8, lsr #12
   124b0:	push	{r0, r1, r2, r3}
   124b4:	mov	r2, #256	; 0x100
   124b8:	push	{r4, r5, lr}
   124bc:	sub	sp, sp, #276	; 0x114
   124c0:	ldr	r4, [pc, #116]	; 1253c <g_strcmp0@plt+0x9d8>
   124c4:	add	ip, sp, #292	; 0x124
   124c8:	str	ip, [sp]
   124cc:	ldr	r1, [r4]
   124d0:	ldr	r3, [sp, #288]	; 0x120
   124d4:	str	r1, [sp, #268]	; 0x10c
   124d8:	add	r0, sp, #12
   124dc:	mov	r1, #1
   124e0:	str	ip, [sp, #8]
   124e4:	bl	11948 <__vsprintf_chk@plt>
   124e8:	ldr	r3, [pc, #80]	; 12540 <g_strcmp0@plt+0x9dc>
   124ec:	ldr	r1, [pc, #80]	; 12544 <g_strcmp0@plt+0x9e0>
   124f0:	ldr	r0, [r3]
   124f4:	bl	11888 <fopen@plt>
   124f8:	subs	r5, r0, #0
   124fc:	beq	12518 <g_strcmp0@plt+0x9b4>
   12500:	add	r3, sp, #12
   12504:	ldr	r2, [pc, #60]	; 12548 <g_strcmp0@plt+0x9e4>
   12508:	mov	r1, #1
   1250c:	bl	11810 <__fprintf_chk@plt>
   12510:	mov	r0, r5
   12514:	bl	11a8c <fclose@plt>
   12518:	ldr	r2, [sp, #268]	; 0x10c
   1251c:	ldr	r3, [r4]
   12520:	cmp	r2, r3
   12524:	bne	12538 <g_strcmp0@plt+0x9d4>
   12528:	add	sp, sp, #276	; 0x114
   1252c:	pop	{r4, r5, lr}
   12530:	add	sp, sp, #16
   12534:	bx	lr
   12538:	bl	1196c <__stack_chk_fail@plt>
   1253c:	andeq	r3, r2, r0, ror #29
   12540:	andeq	r4, r2, r0, lsr #3
   12544:	andeq	r2, r1, ip, lsl #25
   12548:	muleq	r1, r0, ip
   1254c:	b	11ab0 <gtk_main_quit@plt>
   12550:	push	{r4, r5, r6, r7, lr}
   12554:	sub	sp, sp, #52	; 0x34
   12558:	ldr	r4, [pc, #128]	; 125e0 <g_strcmp0@plt+0xa7c>
   1255c:	ldr	r7, [pc, #128]	; 125e4 <g_strcmp0@plt+0xa80>
   12560:	ldr	r5, [pc, #128]	; 125e8 <g_strcmp0@plt+0xa84>
   12564:	ldr	r3, [r4]
   12568:	mov	r2, r1
   1256c:	ldr	r0, [r7]
   12570:	add	r1, sp, #28
   12574:	str	r3, [sp, #44]	; 0x2c
   12578:	mvn	r6, #0
   1257c:	bl	11780 <gtk_tree_model_get_iter_from_string@plt>
   12580:	add	r2, sp, #28
   12584:	ldr	r0, [r7]
   12588:	add	r1, sp, #12
   1258c:	bl	11840 <gtk_tree_model_sort_convert_iter_to_child_iter@plt>
   12590:	add	r1, sp, #12
   12594:	ldr	r0, [r5]
   12598:	add	r3, sp, #8
   1259c:	mov	r2, #4
   125a0:	str	r6, [sp]
   125a4:	bl	11b1c <gtk_tree_model_get@plt>
   125a8:	ldr	r3, [sp, #8]
   125ac:	mov	r2, #4
   125b0:	rsb	r3, r3, #1
   125b4:	str	r6, [sp]
   125b8:	add	r1, sp, #12
   125bc:	ldr	r0, [r5]
   125c0:	bl	11768 <gtk_list_store_set@plt>
   125c4:	ldr	r2, [sp, #44]	; 0x2c
   125c8:	ldr	r3, [r4]
   125cc:	cmp	r2, r3
   125d0:	bne	125dc <g_strcmp0@plt+0xa78>
   125d4:	add	sp, sp, #52	; 0x34
   125d8:	pop	{r4, r5, r6, r7, pc}
   125dc:	bl	1196c <__stack_chk_fail@plt>
   125e0:	andeq	r3, r2, r0, ror #29
   125e4:	andeq	r4, r2, r0, lsl #3
   125e8:	muleq	r2, r0, r1
   125ec:	push	{r4, lr}
   125f0:	bl	11978 <fork@plt>
   125f4:	subs	r4, r0, #0
   125f8:	popne	{r4, pc}
   125fc:	ldr	r2, [pc, #24]	; 1261c <g_strcmp0@plt+0xab8>
   12600:	mov	r3, r4
   12604:	ldr	r1, [pc, #20]	; 12620 <g_strcmp0@plt+0xabc>
   12608:	ldr	r2, [r2]
   1260c:	ldr	r0, [pc, #16]	; 12624 <g_strcmp0@plt+0xac0>
   12610:	bl	1181c <execl@plt>
   12614:	mov	r0, r4
   12618:	bl	117c8 <exit@plt>
   1261c:	andeq	r4, r2, r0, lsr #3
   12620:	muleq	r1, r4, ip
   12624:	andeq	r2, r1, r0, lsr #25
   12628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1262c:	sub	sp, sp, #116	; 0x74
   12630:	ldr	r4, [pc, #836]	; 1297c <g_strcmp0@plt+0xe18>
   12634:	ldr	ip, [pc, #836]	; 12980 <g_strcmp0@plt+0xe1c>
   12638:	add	r3, sp, #76	; 0x4c
   1263c:	ldm	r4, {r0, r1, r2}
   12640:	ldr	ip, [ip]
   12644:	stmia	r3!, {r0, r1}
   12648:	ldr	r1, [pc, #820]	; 12984 <g_strcmp0@plt+0xe20>
   1264c:	strh	r2, [r3]
   12650:	ldr	r0, [pc, #816]	; 12988 <g_strcmp0@plt+0xe24>
   12654:	str	ip, [sp, #108]	; 0x6c
   12658:	bl	11750 <popen@plt>
   1265c:	subs	r5, r0, #0
   12660:	beq	12690 <g_strcmp0@plt+0xb2c>
   12664:	mov	r2, r5
   12668:	mov	r1, #31
   1266c:	add	r0, sp, #76	; 0x4c
   12670:	bl	11a50 <fgets@plt>
   12674:	cmp	r0, #0
   12678:	addeq	r3, sp, #76	; 0x4c
   1267c:	ldmeq	r4, {r0, r1, r2}
   12680:	stmiaeq	r3!, {r0, r1}
   12684:	mov	r0, r5
   12688:	strheq	r2, [r3]
   1268c:	bl	119fc <pclose@plt>
   12690:	mov	r0, #0
   12694:	bl	11ae0 <time@plt>
   12698:	ldr	r4, [pc, #748]	; 1298c <g_strcmp0@plt+0xe28>
   1269c:	str	r0, [sp, #60]	; 0x3c
   126a0:	add	r0, sp, #60	; 0x3c
   126a4:	bl	118f4 <localtime@plt>
   126a8:	ldr	r1, [pc, #736]	; 12990 <g_strcmp0@plt+0xe2c>
   126ac:	mov	r6, r0
   126b0:	ldr	r0, [r4]
   126b4:	bl	11888 <fopen@plt>
   126b8:	subs	r5, r0, #0
   126bc:	beq	126f8 <g_strcmp0@plt+0xb94>
   126c0:	add	r0, sp, #76	; 0x4c
   126c4:	bl	11abc <g_strchug@plt>
   126c8:	bl	1184c <g_strchomp@plt>
   126cc:	mov	r7, r0
   126d0:	mov	r0, r6
   126d4:	bl	117bc <asctime@plt>
   126d8:	mov	r3, r7
   126dc:	ldr	r2, [pc, #688]	; 12994 <g_strcmp0@plt+0xe30>
   126e0:	mov	r1, #1
   126e4:	str	r0, [sp]
   126e8:	mov	r0, r5
   126ec:	bl	11810 <__fprintf_chk@plt>
   126f0:	mov	r0, r5
   126f4:	bl	11a8c <fclose@plt>
   126f8:	mov	r0, #1
   126fc:	bl	11b34 <dup@plt>
   12700:	str	r0, [sp, #24]
   12704:	mov	r0, #2
   12708:	bl	11b34 <dup@plt>
   1270c:	mov	r2, #420	; 0x1a4
   12710:	ldr	r1, [pc, #640]	; 12998 <g_strcmp0@plt+0xe34>
   12714:	str	r0, [sp, #28]
   12718:	ldr	r0, [r4]
   1271c:	bl	1193c <open@plt>
   12720:	cmn	r0, #1
   12724:	mov	r4, r0
   12728:	beq	12748 <g_strcmp0@plt+0xbe4>
   1272c:	mov	r1, #1
   12730:	bl	118e8 <dup2@plt>
   12734:	mov	r1, #2
   12738:	mov	r0, r4
   1273c:	bl	118e8 <dup2@plt>
   12740:	mov	r0, r4
   12744:	bl	1187c <close@plt>
   12748:	ldr	r0, [pc, #588]	; 1299c <g_strcmp0@plt+0xe38>
   1274c:	bl	11918 <gtk_tree_path_new_from_string@plt>
   12750:	ldr	r5, [pc, #584]	; 129a0 <g_strcmp0@plt+0xe3c>
   12754:	add	r1, sp, #60	; 0x3c
   12758:	mov	r2, r0
   1275c:	mov	r6, r0
   12760:	ldr	r0, [r5]
   12764:	bl	11b10 <gtk_tree_model_get_iter@plt>
   12768:	cmp	r0, #0
   1276c:	beq	128fc <g_strcmp0@plt+0xd98>
   12770:	ldr	r9, [pc, #556]	; 129a4 <g_strcmp0@plt+0xe40>
   12774:	ldr	r3, [r9]
   12778:	cmp	r3, #0
   1277c:	bne	128fc <g_strcmp0@plt+0xd98>
   12780:	ldr	r8, [pc, #544]	; 129a8 <g_strcmp0@plt+0xe44>
   12784:	ldr	sl, [pc, #544]	; 129ac <g_strcmp0@plt+0xe48>
   12788:	add	fp, sp, #36	; 0x24
   1278c:	b	127ec <g_strcmp0@plt+0xc88>
   12790:	mov	r0, r3
   12794:	mov	r2, #5
   12798:	ldr	r1, [pc, #528]	; 129b0 <g_strcmp0@plt+0xe4c>
   1279c:	bl	119a8 <dcgettext@plt>
   127a0:	str	r4, [sp]
   127a4:	mov	r2, #3
   127a8:	add	r1, sp, #44	; 0x2c
   127ac:	mov	r3, r0
   127b0:	mov	r0, r7
   127b4:	bl	11768 <gtk_list_store_set@plt>
   127b8:	ldr	r0, [pc, #500]	; 129b4 <g_strcmp0@plt+0xe50>
   127bc:	bl	124b0 <g_strcmp0@plt+0x94c>
   127c0:	mov	r0, r6
   127c4:	bl	11a2c <gtk_tree_path_next@plt>
   127c8:	mov	r2, r6
   127cc:	add	r1, sp, #60	; 0x3c
   127d0:	ldr	r0, [r5]
   127d4:	bl	11b10 <gtk_tree_model_get_iter@plt>
   127d8:	cmp	r0, #0
   127dc:	beq	12900 <g_strcmp0@plt+0xd9c>
   127e0:	ldr	r3, [r9]
   127e4:	cmp	r3, #0
   127e8:	bne	12900 <g_strcmp0@plt+0xd9c>
   127ec:	add	r2, sp, #60	; 0x3c
   127f0:	add	r1, sp, #44	; 0x2c
   127f4:	ldr	r0, [r5]
   127f8:	bl	11840 <gtk_tree_model_sort_convert_iter_to_child_iter@plt>
   127fc:	mvn	r4, #0
   12800:	mov	r2, #4
   12804:	mov	r3, #1
   12808:	str	r2, [sp, #8]
   1280c:	str	r3, [sp]
   12810:	str	fp, [sp, #12]
   12814:	add	r3, sp, #32
   12818:	str	r8, [sp, #4]
   1281c:	str	r4, [sp, #16]
   12820:	mov	r2, #0
   12824:	add	r1, sp, #44	; 0x2c
   12828:	ldr	r0, [sl]
   1282c:	bl	11b1c <gtk_tree_model_get@plt>
   12830:	ldr	r3, [sp, #36]	; 0x24
   12834:	cmp	r3, #0
   12838:	beq	127c0 <g_strcmp0@plt+0xc5c>
   1283c:	ldr	r1, [r8]
   12840:	ldr	r0, [pc, #368]	; 129b8 <g_strcmp0@plt+0xe54>
   12844:	bl	124b0 <g_strcmp0@plt+0x94c>
   12848:	bl	11978 <fork@plt>
   1284c:	ldr	r3, [pc, #360]	; 129bc <g_strcmp0@plt+0xe58>
   12850:	cmp	r0, #0
   12854:	mov	r1, r0
   12858:	str	r0, [r3]
   1285c:	beq	12950 <g_strcmp0@plt+0xdec>
   12860:	bl	11834 <setpgid@plt>
   12864:	ldr	r3, [pc, #336]	; 129bc <g_strcmp0@plt+0xe58>
   12868:	mov	r2, #0
   1286c:	add	r1, sp, #40	; 0x28
   12870:	ldr	r0, [r3]
   12874:	bl	11954 <waitpid@plt>
   12878:	ldr	r3, [r9]
   1287c:	cmp	r3, #0
   12880:	bne	128c4 <g_strcmp0@plt+0xd60>
   12884:	ldr	r0, [sp, #40]	; 0x28
   12888:	ldr	r7, [sl]
   1288c:	cmp	r0, #0
   12890:	bne	12790 <g_strcmp0@plt+0xc2c>
   12894:	mov	r2, #5
   12898:	ldr	r1, [pc, #288]	; 129c0 <g_strcmp0@plt+0xe5c>
   1289c:	bl	119a8 <dcgettext@plt>
   128a0:	str	r4, [sp]
   128a4:	mov	r2, #3
   128a8:	add	r1, sp, #44	; 0x2c
   128ac:	mov	r3, r0
   128b0:	mov	r0, r7
   128b4:	bl	11768 <gtk_list_store_set@plt>
   128b8:	ldr	r0, [pc, #260]	; 129c4 <g_strcmp0@plt+0xe60>
   128bc:	bl	124b0 <g_strcmp0@plt+0x94c>
   128c0:	b	127c0 <g_strcmp0@plt+0xc5c>
   128c4:	mov	r2, #5
   128c8:	ldr	r1, [pc, #248]	; 129c8 <g_strcmp0@plt+0xe64>
   128cc:	mov	r0, #0
   128d0:	ldr	r7, [sl]
   128d4:	bl	119a8 <dcgettext@plt>
   128d8:	str	r4, [sp]
   128dc:	mov	r2, #3
   128e0:	add	r1, sp, #44	; 0x2c
   128e4:	mov	r3, r0
   128e8:	mov	r0, r7
   128ec:	bl	11768 <gtk_list_store_set@plt>
   128f0:	ldr	r0, [pc, #212]	; 129cc <g_strcmp0@plt+0xe68>
   128f4:	bl	124b0 <g_strcmp0@plt+0x94c>
   128f8:	b	127c0 <g_strcmp0@plt+0xc5c>
   128fc:	ldr	r8, [pc, #164]	; 129a8 <g_strcmp0@plt+0xe44>
   12900:	ldr	r0, [r8]
   12904:	bl	1199c <g_free@plt>
   12908:	ldr	r3, [pc, #192]	; 129d0 <g_strcmp0@plt+0xe6c>
   1290c:	mov	r4, #0
   12910:	mov	r1, #1
   12914:	ldr	r0, [sp, #24]
   12918:	str	r4, [r3]
   1291c:	str	r4, [r8]
   12920:	bl	118e8 <dup2@plt>
   12924:	ldr	r0, [sp, #28]
   12928:	mov	r1, #2
   1292c:	bl	118e8 <dup2@plt>
   12930:	ldr	r3, [pc, #72]	; 12980 <g_strcmp0@plt+0xe1c>
   12934:	ldr	r2, [sp, #108]	; 0x6c
   12938:	mov	r0, r4
   1293c:	ldr	r3, [r3]
   12940:	cmp	r2, r3
   12944:	bne	12978 <g_strcmp0@plt+0xe14>
   12948:	add	sp, sp, #116	; 0x74
   1294c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12950:	mov	r3, r0
   12954:	mov	r7, r0
   12958:	ldr	r2, [sp, #32]
   1295c:	ldr	r1, [pc, #112]	; 129d4 <g_strcmp0@plt+0xe70>
   12960:	ldr	r0, [pc, #112]	; 129d8 <g_strcmp0@plt+0xe74>
   12964:	bl	1181c <execl@plt>
   12968:	ldr	r0, [sp, #32]
   1296c:	bl	1199c <g_free@plt>
   12970:	mov	r0, r7
   12974:	bl	117c8 <exit@plt>
   12978:	bl	1196c <__stack_chk_fail@plt>
   1297c:			; <UNDEFINED> instruction: 0x00012cb4
   12980:	andeq	r3, r2, r0, ror #29
   12984:	andeq	r2, r1, r0, asr #25
   12988:	andeq	r2, r1, r4, asr #25
   1298c:	andeq	r4, r2, r0, lsr #3
   12990:	andeq	r2, r1, r0, lsl #26
   12994:	andeq	r2, r1, r4, lsl #26
   12998:	andeq	r0, r0, r2, asr #8
   1299c:	andeq	r2, r1, r0, lsr sp
   129a0:	andeq	r4, r2, r0, lsl #3
   129a4:			; <UNDEFINED> instruction: 0x000241b8
   129a8:	andeq	r4, r2, r4, lsr #3
   129ac:	muleq	r2, r0, r1
   129b0:	andeq	r2, r1, r4, ror #26
   129b4:	muleq	r1, r4, sp
   129b8:	andeq	r2, r1, r4, lsr sp
   129bc:	andeq	r4, r2, r8, lsl #3
   129c0:	andeq	r2, r1, r0, lsr #27
   129c4:	ldrdeq	r2, [r1], -r0
   129c8:	andeq	r2, r1, ip, asr #26
   129cc:	andeq	r2, r1, r4, asr sp
   129d0:	andeq	r4, r2, ip, lsl #3
   129d4:	andeq	r2, r1, r0, asr #26
   129d8:	andeq	r2, r1, r4, asr #26
   129dc:	push	{r4, r5, r6, r7, r8, lr}
   129e0:	mov	r1, #1
   129e4:	ldr	r6, [pc, #120]	; 12a64 <g_strcmp0@plt+0xf00>
   129e8:	mov	r4, r0
   129ec:	eor	r5, r4, r1
   129f0:	ldr	r0, [r6]
   129f4:	bl	11894 <gtk_tree_view_get_column@plt>
   129f8:	ldr	r7, [pc, #104]	; 12a68 <g_strcmp0@plt+0xf04>
   129fc:	mov	r1, r5
   12a00:	bl	118d0 <gtk_tree_view_column_set_visible@plt>
   12a04:	ldr	r0, [r6]
   12a08:	mov	r1, #2
   12a0c:	bl	11894 <gtk_tree_view_get_column@plt>
   12a10:	mov	r1, r4
   12a14:	bl	118d0 <gtk_tree_view_column_set_visible@plt>
   12a18:	mov	r1, r4
   12a1c:	ldr	r0, [r7]
   12a20:	bl	11b40 <gtk_widget_set_visible@plt>
   12a24:	ldr	r3, [pc, #64]	; 12a6c <g_strcmp0@plt+0xf08>
   12a28:	ldr	r6, [pc, #64]	; 12a70 <g_strcmp0@plt+0xf0c>
   12a2c:	mov	r1, r4
   12a30:	ldr	r0, [r3]
   12a34:	bl	11b40 <gtk_widget_set_visible@plt>
   12a38:	mov	r1, r5
   12a3c:	ldr	r0, [r6]
   12a40:	bl	11b40 <gtk_widget_set_visible@plt>
   12a44:	cmp	r4, #0
   12a48:	beq	12a58 <g_strcmp0@plt+0xef4>
   12a4c:	ldr	r0, [r7]
   12a50:	pop	{r4, r5, r6, r7, r8, lr}
   12a54:	b	117f8 <gtk_widget_grab_focus@plt>
   12a58:	ldr	r0, [r6]
   12a5c:	pop	{r4, r5, r6, r7, r8, lr}
   12a60:	b	117f8 <gtk_widget_grab_focus@plt>
   12a64:			; <UNDEFINED> instruction: 0x000241bc
   12a68:			; <UNDEFINED> instruction: 0x000241b0
   12a6c:	muleq	r2, r4, r1
   12a70:	andeq	r4, r2, ip, ror r1
   12a74:	push	{r4, r5, r6, r7, lr}
   12a78:	sub	sp, sp, #36	; 0x24
   12a7c:	ldr	r7, [pc, #136]	; 12b0c <g_strcmp0@plt+0xfa8>
   12a80:	ldr	r4, [pc, #136]	; 12b10 <g_strcmp0@plt+0xfac>
   12a84:	add	r1, sp, #12
   12a88:	ldr	r3, [r7]
   12a8c:	ldr	r0, [r4]
   12a90:	str	r3, [sp, #28]
   12a94:	bl	119b4 <gtk_tree_model_get_iter_first@plt>
   12a98:	cmp	r0, #0
   12a9c:	beq	12ae8 <g_strcmp0@plt+0xf84>
   12aa0:	ldr	r6, [pc, #108]	; 12b14 <g_strcmp0@plt+0xfb0>
   12aa4:	mov	r2, #5
   12aa8:	mov	r1, r6
   12aac:	mov	r0, #0
   12ab0:	ldr	r5, [r4]
   12ab4:	bl	119a8 <dcgettext@plt>
   12ab8:	mvn	r3, #0
   12abc:	str	r3, [sp]
   12ac0:	mov	r2, #3
   12ac4:	add	r1, sp, #12
   12ac8:	mov	r3, r0
   12acc:	mov	r0, r5
   12ad0:	bl	11768 <gtk_list_store_set@plt>
   12ad4:	add	r1, sp, #12
   12ad8:	ldr	r0, [r4]
   12adc:	bl	117ec <gtk_tree_model_iter_next@plt>
   12ae0:	cmp	r0, #0
   12ae4:	bne	12aa4 <g_strcmp0@plt+0xf40>
   12ae8:	mov	r0, #0
   12aec:	bl	129dc <g_strcmp0@plt+0xe78>
   12af0:	ldr	r2, [sp, #28]
   12af4:	ldr	r3, [r7]
   12af8:	cmp	r2, r3
   12afc:	bne	12b08 <g_strcmp0@plt+0xfa4>
   12b00:	add	sp, sp, #36	; 0x24
   12b04:	pop	{r4, r5, r6, r7, pc}
   12b08:	bl	1196c <__stack_chk_fail@plt>
   12b0c:	andeq	r3, r2, r0, ror #29
   12b10:	muleq	r2, r0, r1
   12b14:	ldrdeq	r2, [r1], -ip
   12b18:	ldr	r3, [pc, #196]	; 12be4 <g_strcmp0@plt+0x1080>
   12b1c:	push	{r4, r5, r6, lr}
   12b20:	ldr	r4, [r3]
   12b24:	cmp	r4, #0
   12b28:	beq	12bb0 <g_strcmp0@plt+0x104c>
   12b2c:	ldr	r3, [pc, #180]	; 12be8 <g_strcmp0@plt+0x1084>
   12b30:	mov	r2, #5
   12b34:	ldr	r0, [r3]
   12b38:	cmp	r0, #0
   12b3c:	bne	12b98 <g_strcmp0@plt+0x1034>
   12b40:	ldr	r1, [pc, #164]	; 12bec <g_strcmp0@plt+0x1088>
   12b44:	bl	119a8 <dcgettext@plt>
   12b48:	ldr	r3, [pc, #160]	; 12bf0 <g_strcmp0@plt+0x108c>
   12b4c:	ldr	r1, [r3]
   12b50:	cmp	r1, #0
   12b54:	mov	r4, r0
   12b58:	beq	12bcc <g_strcmp0@plt+0x1068>
   12b5c:	mov	r0, r4
   12b60:	bl	11870 <g_strdup_printf@plt>
   12b64:	mov	r5, r0
   12b68:	ldr	r3, [pc, #132]	; 12bf4 <g_strcmp0@plt+0x1090>
   12b6c:	mov	r1, r5
   12b70:	mov	r4, #1
   12b74:	ldr	r0, [r3]
   12b78:	bl	11924 <gtk_label_set_text@plt>
   12b7c:	mov	r0, r5
   12b80:	bl	1199c <g_free@plt>
   12b84:	ldr	r3, [pc, #108]	; 12bf8 <g_strcmp0@plt+0x1094>
   12b88:	ldr	r0, [r3]
   12b8c:	bl	11990 <gtk_progress_bar_pulse@plt>
   12b90:	mov	r0, r4
   12b94:	pop	{r4, r5, r6, pc}
   12b98:	ldr	r1, [pc, #92]	; 12bfc <g_strcmp0@plt+0x1098>
   12b9c:	mov	r0, #0
   12ba0:	bl	119a8 <dcgettext@plt>
   12ba4:	bl	11870 <g_strdup_printf@plt>
   12ba8:	mov	r5, r0
   12bac:	b	12b68 <g_strcmp0@plt+0x1004>
   12bb0:	ldr	r3, [pc, #72]	; 12c00 <g_strcmp0@plt+0x109c>
   12bb4:	ldr	r0, [r3]
   12bb8:	bl	117b0 <gtk_widget_hide@plt>
   12bbc:	mov	r0, #1
   12bc0:	bl	129dc <g_strcmp0@plt+0xe78>
   12bc4:	mov	r0, r4
   12bc8:	pop	{r4, r5, r6, pc}
   12bcc:	mov	r0, r1
   12bd0:	mov	r2, #5
   12bd4:	ldr	r1, [pc, #40]	; 12c04 <g_strcmp0@plt+0x10a0>
   12bd8:	bl	119a8 <dcgettext@plt>
   12bdc:	mov	r1, r0
   12be0:	b	12b5c <g_strcmp0@plt+0xff8>
   12be4:	andeq	r4, r2, ip, lsl #3
   12be8:			; <UNDEFINED> instruction: 0x000241b8
   12bec:	strdeq	r2, [r1], -r4
   12bf0:	andeq	r4, r2, r4, lsr #3
   12bf4:	andeq	r4, r2, ip, lsr #3
   12bf8:	andeq	r4, r2, r4, lsl #3
   12bfc:	andeq	r2, r1, r4, ror #27
   12c00:	andeq	r4, r2, r8, lsr #3
   12c04:	andeq	r2, r1, r4, lsl #28
   12c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c0c:	mov	r7, r0
   12c10:	ldr	r6, [pc, #72]	; 12c60 <g_strcmp0@plt+0x10fc>
   12c14:	ldr	r5, [pc, #72]	; 12c64 <g_strcmp0@plt+0x1100>
   12c18:	add	r6, pc, r6
   12c1c:	add	r5, pc, r5
   12c20:	sub	r6, r6, r5
   12c24:	mov	r8, r1
   12c28:	mov	r9, r2
   12c2c:	bl	11730 <popen@plt-0x20>
   12c30:	asrs	r6, r6, #2
   12c34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c38:	mov	r4, #0
   12c3c:	add	r4, r4, #1
   12c40:	ldr	r3, [r5], #4
   12c44:	mov	r2, r9
   12c48:	mov	r1, r8
   12c4c:	mov	r0, r7
   12c50:	blx	r3
   12c54:	cmp	r6, r4
   12c58:	bne	12c3c <g_strcmp0@plt+0x10d8>
   12c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c60:			; <UNDEFINED> instruction: 0x000112bc
   12c64:			; <UNDEFINED> instruction: 0x000112b4
   12c68:	bx	lr

Disassembly of section .fini:

00012c6c <.fini>:
   12c6c:	push	{r3, lr}
   12c70:	pop	{r3, pc}
